fisttpl
adc
add
into
or
add
lcall
std
jg
incl
shll
call
and
or
call
mov
mov
add
stc
jb
mov
add
xor
add
ljmp
adc
add
mov
push
or
mov
mov
lods
add
test
mov
mov
dec
or
dec
mov
dec
add
xchg
sbb
or
addb
or
ret
mov
nop
add
sub
push
or
and
adc
lret
lea
dec
inc
sbbb
cmpsb
ret
mov
clc
xchg
inc
mov
addl
add
sub
outsl
jbe
add
stos
xchg
add
add
sub
add
sti
jne
das
repnz
sub
mov
push
cltd
or
fildll
push
and
xchg
mov
sti
pop
sbb
in
in
addl
sub
sarb
ret
rol
test
mov
add
add
adc
imul
int3
js
sbb
and
clc
mov
stc
inc
or
testl
mov
ja
mov
add
sti
fdivrp
adcb
or
mov
add
rorb
mov
pop
adc
lcall
sbb
xchg
jmp
sbb
mov
scas
mov
leave
add
add
iret
xchg
push
cld
cwtl
cmpsb
movsl
add
mov
add
mov
dec
mov
xchg
or
aam
in
cs
jl
or
mov
or
dec
add
add
cmp
in
outsb
ja
or
adc
mov
inc
mov
inc
addr16
rolb
pop
or
mov
add
xor
mov
fucom
mov
sahf
testb
shlb
add
les
jecxz
cltd
outsb
jg
cmp
add
adc
movsb
roll
mov
jecxz
jmp
fsubl
jge
xor
fwait
or
sub
ja
add
inc
jb
sti
inc
or
mov
add
xlat
cmp
in
ds
fistps
int
mov
add
out
jnp
mov
add
lret
test
in
mov
sbb
in
cld
cmp
xor
or
pushf
pop
adc
sbb
sub
in
add
adc
dec
ja
je
mov
and
lea
lock
or
add
sub
mov
pop
push
xchg
jno
push
mov
push
scas
fldl
insl
push
adc
outsb
push
add
dec
nop
cmpsl
or
push
fstp
or
outsb
xor
push
mov
data16
sahf
jbe
dec
xchg
jo
mov
inc
imul
add
sti
jbe
push
std
add
std
inc
add
push
mov
and
jne
mov
cmp
mov
ret
inc
shrl
pop
popf
scas
movzwl
dec
add
sti
std
mov
sbb
cld
fcmovu
out
and
in
add
dec
push
and
jl
aam
jbe
in
xor
add
pushf
scas
or
fdivl
lods
lock
mov
mov
mov
cmp
xor
push
cwtl
pop
outsb
pop
mov
jo
fisttps
xor
loope
jb
or
push
xchg
xchg
xor
add
lret
cwtl
mov
xchg
pop
lock
cmp
jbe
push
xchg
xor
pop
add
fnstenv
shll
dec
stos
mov
fildl
sbb
jns
xchg
add
in
fnstsw
adc
mov
jmp
test
stos
jb
jae
cmp
add
or
dec
push
jl
outsb
mov
cmp
fcomps
aad
dec
inc
call
outsb
cmp
pushf
dec
pop
mov
mov
popa
mov
sub
ficomps
test
xor
cmp
push
dec
cmp
pusha
mov
fs
mov
out
lret
test
mov
cmp
add
repnz
jno
push
nop
inc
aas
and
fucom
out
lret
test
push
rcll
sahf
adc
js
iret
fwait
insl
mov
out
add
pop
jo
mov
bound
ljmp
ds
ficoms
or
add
add
fsubr
movb
dec
bound
nop
add
repnz
xchg
add
outsb
fisttpl
subl
push
push
jae
fmull
add
sbbb
dec
xlat
or
or
faddl
clc
test
push
pop
lahf
dec
scas
loope
cmp
pushf
xchg
cmp
lret
push
loopne
rolb
mov
cmpb
mov
mov
jg
and
adc
int
mov
push
jle
shll
sti
or
inc
push
loopne
ffreep
mov
sub
cld
je
xorl
xchg
adc
cmp
adc
cwtl
push
jl
out
leave
or
adc
and
hlt
inc
xor
je
xchg
or
cltd
sbb
popa
xor
mov
push
in
xchg
jp
push
fucom
jge
push
stos
push
lret
xchg
nop
push
inc
and
sub
xor
test
xor
scas
int3
out
insl
add
pop
fucom
movsl
shrl
mov
es
push
xlat
sbb
ds
lods
lret
xchg
mov
mov
sets
mov
enter
push
xor
jmp
cmp
outsb
popf
inc
mov
inc
enter
cmp
ret
dec
stc
mov
jno
mov
push
outsb
cmp
push
imul
js
dec
rcll
out
cld
or
test
jno
stc
dec
mov
data16
xor
test
pusha
mov
mov
outsb
shll
inc
mov
pusha
shlb
pusha
xchg
pop
arpl
cmc
stos
aas
jl
sbb
sbb
test
fbld
scas
out
pop
sbb
push
sub
fistpl
inc
and
add
in
inc
pop
iret
adc
mov
xlat
insl
loopne
and
loope
imul
sbb
fists
cmc
test
inc
push
xchg
addb
and
incb
inc
mov
inc
xchg
mov
hlt
sub
xor
ss
or
es
cmp
mov
insl
cmp
jo
nop
sbb
cmp
jo
and
cmp
mov
add
xchg
shl
call
repnz
lds
adc
outsb
aas
mov
sahf
in
and
lock
adc
fdivs
jmp
cwtl
mov
cmp
fdivrl
cmpsb
aam
cmp
xchg
fistpl
pop
sbb
xchg
lret
or
adc
jl
mov
add
push
fcoml
lret
pop
adc
loope
mov
int3
add
rcl
cmc
and
fdivrp
inc
adc
inc
and
push
test
lcall
les
mov
sbb
mov
add
adc
test
insl
xchg
imul
push
ret
ss
and
frstor
loop
mov
cmpsb
sti
shr
xchg
shlb
dec
mov
cli
lcall
lret
pusha
push
pop
out
jo
outsb
in
loop
fcoms
sti
shlb
lea
inc
fsubr
or
loop
push
or
push
adc
sbb
movsb
mov
and
jb
xchg
insb
mov
hlt
push
mov
adc
adc
push
loope
fnstcw
movsb
dec
mov
testb
pop
icebp
loop
scas
cwtl
cmp
jae
mov
add
xor
insl
xor
gs
xchg
dec
in
in
sub
mov
dec
mov
mov
popl
scas
dec
pop
dec
shl
ja
mov
mov
sub
es
ret
dec
clc
sbb
jno
or
outsl
es
pop
fmulp
repnz
pop
adc
cmp
pop
mov
and
dec
fwait
lea
stc
ljmp
dec
mov
xchg
and
stos
ss
movups
subl
test
push
and
mov
lods
stc
aas
in
adc
out
push
xlat
mov
mov
push
mov
mov
outsb
sti
cmc
ljmp
jecxz
loop
xchg
mov
adc
adc
xchg
xchg
cmp
mov
pop
outsl
testl
fisubrl
jl
jno
add
imul
push
int3
leave
and
mov
mov
ljmp
cmpsl
inc
xchg
or
sub
push
arpl
cmc
gs
jns
push
repnz
add
lock
cmpsl
jmp
gs
mov
jg
decl
mov
testb
lds
test
arpl
out
mov
insl
or
sub
je
loopne
sti
xor
mov
dec
fdivrl
xchg
in
jae
inc
js
xor
or
push
adc
inc
cmpsl
addr16
ffree
loopne
jmp
inc
fwait
push
ja
adc
cmp
rorl
into
ror
data16
xor
jbe
popf
test
test
or
jbe
iret
fsubrs
sahf
loopne
fchs
xor
pusha
jmp
pop
into
xchg
lcall
mov
nop
xchg
mov
xchg
adc
pop
outsl
mov
fisubrl
xlat
jge
inc
ss
inc
mov
cmp
push
jmp
outsb
mov
mov
mov
repz
inc
dec
arpl
aam
jmp
enter
mov
push
ds
sbb
jmp
cs
jl
enter
jmp
ss
or
scas
pusha
sub
dec
lods
int3
icebp
jl
insl
sbb
or
cmp
push
fimull
dec
xchg
loopne
and
push
jb
lock
or
xor
cmp
push
xor
shl
sub
popf
jge
shrl
push
jle
cmp
test
pushf
fmuls
xchg
jns
lds
pusha
inc
jnp
cmp
repz
and
out
imul
pop
mov
cltd
insb
xorb
clc
popa
dec
sub
xor
and
inc
fistps
mov
add
fcmovnu
test
shlb
mov
or
xlat
popf
cmp
into
test
sbb
fdivs
mov
and
in
push
add
pusha
ret
cmp
inc
and
mov
in
loop
out
mov
mov
pop
lcall
daa
cmp
mov
stos
sarl
mov
bound
pop
and
xlat
cltd
sub
mov
icebp
dec
cmp
or
inc
or
ss
dec
add
adc
mov
cmp
sub
jae
ss
mov
fcmovbe
push
lahf
mov
jge
jmp
adc
fisttps
dec
adc
add
inc
dec
inc
add
movsbl
lret
mov
push
push
cmp
cltd
movsl
mov
inc
inc
je
mov
lock
mov
fst
gs
fistps
outsl
in
sbb
jne
scas
jecxz
mov
inc
inc
jno
lods
aad
dec
sbb
arpl
scas
rolb
or
inc
push
lahf
dec
xor
test
lods
jbe
repz
push
add
test
mov
loope
add
jno
rcll
xor
rol
out
jmp
nop
movsb
addr16
mov
sbb
dec
pusha
xor
leave
sbb
push
xchg
sbb
test
push
pop
jmp
and
cmp
pop
test
xchg
jmp
push
adc
fldenv
xchg
int
add
dec
and
pop
test
nop
inc
mov
push
jp
sahf
ret
push
js
mov
mov
and
std
fstpl
pop
pop
mov
and
bound
mov
dec
decl
test
jbe
fsub
sub
fsubl
mov
stos
sub
out
das
aas
jle
lea
sbb
xor
out
sub
fnsave
mov
mov
inc
mov
fstl
je
lahf
push
jae
inc
je
pop
lret
lcall
jp
lahf
inc
imul
jmp
rolb
mov
popa
dec
adc
in
cmp
pop
xchg
and
jae
in
or
add
sbb
and
lcall
inc
xchg
aaa
push
popf
cli
mov
icebp
cmp
test
loopne,pt
mov
dec
inc
sub
add
pop
into
adc
movsl
imul
lods
adc
push
es
mov
iret
adc
jae
fwait
cli
loopne
out
rcr
rcll
mov
iret
inc
es
cmpsb
or
and
pop
stc
insb
loope
xchg
sbb
in
test
cld
mov
dec
psrad
in
loopne
and
xchg
aaa
outsb
sub
aas
fstps
les
push
test
mov
dec
inc
cmp
and
divl
out
inc
mov
scas
jae
arpl
jo
cmp
xor
push
call
dec
mov
in
es
mov
mov
imull
sub
inc
outsl
fisubrs
idivb
loope
lahf
inc
leave
mov
stos
dec
outsb
fwait
pop
pop
lea
jmp
rorb
lods
mov
xchg
dec
ficomps
push
push
lahf
mov
fiaddl
idivl
sbb
mov
sbb
int
xchg
push
je
sbb
xchg
cmpsb
hlt
mov
lahf
mov
jo
ss
mov
scas
dec
and
in
mov
xor
mov
in
mov
fildl
fwait
mov
inc
jo
inc
xchg
pop
lods
jge
ret
out
in
ret
aam
fwait
adc
pop
aaa
pusha
loope
cwtl
bound
add
mov
in
sahf
aam
mov
shrb
jne
or
add
lods
mov
or
mov
pushf
mov
loopne
in
addr16
sbb
iret
adc
and
cmc
hlt
mov
fcoml
mov
icebp
popf
xchg
outsb
or
aas
lock
mov
outsl
xchg
xchg
cli
push
cmp
mov
popa
dec
icebp
es
xchg
push
mov
jbe
cmp
rorl
push
in
ljmp
cmp
ds
push
add
jmp
mov
fldl
test
push
fcom
dec
inc
addl
sbb
lods
inc
adc
test
dec
pop
ds
dec
sub
bound
in
es
loopne
fistps
inc
xchg
xchg
js
sbb
inc
mov
inc
mov
sub
rclb
mov
xor
push
inc
lock
cmp
fadds
out
cmp
xchg
sbb
in
push
lods
aaa
sbb
nop
jns
push
jecxz
and
lods
gs
push
mov
jle
fimull
aam
xchg
ss
inc
jecxz
cmovno
int3
pop
xchg
mov
rol
out
inc
pop
mov
adc
ljmp
test
cmp
into
imul
add
testb
loope
int
clc
inc
lds
push
ret
sbb
jmp
es
pushf
adc
lds
ss
lea
arpl
sbb
adc
bound
mov
popa
mov
and
addb
mov
jl
fwait
jmp
jmp
shl
insb
sbb
scas
xor
icebp
lcall
inc
sbb
pop
daa
sbb
cmp
test
adc
rcr
jae
or
inc
lods
xor
iret
mov
xchg
push
lock
ja
jecxz
or
les
xor
in
mov
and
int
pop
mov
or
xchg
jle
push
push
xchg
pop
lods
mov
fdivr
push
int
fwait
xor
mov
lcall
and
jns
push
cmpsl
mov
sub
fcmovnu
insb
ret
xchg
test
test
inc
xor
fisttpl
and
push
fwait
enter
mov
push
repz
into
push
push
call
clc
mov
xchg
jnp
add
adcb
loope
mov
add
fstl
mov
jge
scas
dec
or
outsl
fwait
mov
push
lcall
push
rcl
sub
adc
mov
into
imul
not
add
jb
mov
pop
dec
mov
fadd
lahf
pop
mov
rcl
pusha
mov
dec
mov
dec
jg
mov
xchg
inc
or
cmp
jmp
or
pop
dec
mov
rol
leave
pop
cmp
add
sub
clc
push
sahf
or
push
xchg
aad
test
jecxz
jno
add
adcl
es
xlat
jo
push
enter
popa
mov
jmp
pop
xor
mov
out
ret
jmp
movsb
bound
addb
sub
int3
les
jns
adc
out
sbb
enter
mov
icebp
aad
std
mov
or
xor
rcrb
dec
mov
lret
sub
jb
jbe
push
ljmp
fld
dec
xchg
push
fistpl
sbb
mov
das
mov
mov
jo
push
and
std
pop
mov
imul
pop
fldcw
and
bnd
fisubrs
jmp
das
shlb
and
pop
sar
stc
xchg
lds
mov
movsl
out
arpl
ljmp
jle
into
cmp
in
ds
das
fwait
jp
rolb
dec
andb
insl
cmp
and
movsb
add
push
or
jecxz
fsubr
xor
lods
jae
inc
lret
neg
fbstp
cmp
lret
lea
xor
sub
ss
mov
cmp
lds
faddl
idiv
ss
lcall
sahf
cmp
imul
in
mov
das
xor
or
aad
lea
pushf
inc
xor
push
mov
orb
fidivs
jae
out
pop
cmpsl
orl
leave
mov
sbb
cltd
out
inc
clc
jbe
sbb
xchg
and
or
mov
rorl
into
es
adc
test
sarb
dec
std
sub
loope
hlt
jb
cmp
inc
pop
jbe
or
add
pop
push
add
xor
push
cwtl
rcll
add
xor
mov
pop
xchg
pop
rcrl
icebp
stos
fcomps
mov
push
gs
les
jp
push
outsl
int3
push
mov
or
inc
mov
pop
xor
pop
out
sahf
es
mov
dec
insl
out
cmp
cmpsl
out
cmp
mov
sub
out
add
mov
lret
lods
xor
rolb
cli
into
pop
push
aam
arpl
out
mov
xor
in
outsb
mov
stos
push
dec
out
out
call
push
adc
jo
sahf
outsb
add
inc
xchg
subb
shl
js
lods
pop
lods
push
inc
jge
or
sar
mov
mov
push
jl
cmp
sbbb
mov
mov
popa
adc
aas
fstpt
pop
jl
loop
mov
mov
cmp
pop
filds
testl
xchg
in
cmp
mov
adc
ret
dec
or
jp
call
mov
or
in
lods
int
cmp
cmc
jmp
pop
mov
lock
jg
movsb
push
js
adc
inc
push
sbb
lock
dec
sbb
inc
mov
fisttpl
test
aad
pusha
pop
mov
cmpb
loopne
loope
aad
lds
xor
xor
push
mov
lea
and
inc
insb
lcall
jo
pop
mov
xchg
rorb
test
sahf
loop
push
push
cmpsb
mov
add
inc
xor
bsr
jae
xchg
adc
loopne
addr16
iret
movb
mov
mov
dec
add
int
daa
mov
aaa
outsl
mov
stc
test
mov
dec
daa
ds
sub
jne
inc
and
and
sbb
lods
xchg
mov
jge
xor
aam
dec
xchg
or
xor
shrb
xor
add
mov
cmpsb
popa
mov
in
lahf
flds
outsb
jo
jp
movsb
jle
orb
shlb
sbb
lea
xorb
sarb
outsl
dec
add
mov
cmpsl
out
and
ficomps
cmpb
cltd
inc
idiv
jp
sub
dec
in
ss
or
lea
in
movsl
pop
mov
lods
repnz
cmp
mov
mov
sbb
pop
sti
jne
popf
fstpt
adc
pop
xor
and
cmp
lods
add
dec
fnstcw
push
js
pop
fwait
test
inc
xchg
lretw
notl
cmp
dec
sahf
stos
addl
xor
aam
js
lock
and
pusha
mov
inc
imul
popf
lahf
xor
cmpsl
decb
xor
sub
push
jl
fsub
sbb
sar
or
and
stc
bound
clc
sub
inc
test
mov
xor
jo
lock
jmp
xchg
bound
shr
pop
xorb
and
jmp
roll
pop
lock
xchg
jno
fidivs
sub
adc
and
or
js
mov
sub
movsb
push
test
inc
scas
jmp
mov
lea
push
lods
fdiv
push
cmp
adcb
inc
mov
add
std
jp
mov
push
inc
cmp
insb
pusha
outsl
repz
push
adc
dec
int
dec
outsl
xchg
das
push
cmp
ficoml
xor
and
addl
mov
dec
mov
push
inc
cmp
adc
ds
jmp
sahf
cmpsl
push
xchg
test
scas
cmpsb
pop
inc
imul
xlat
xchg
push
cli
insb
xor
js
dec
cld
cli
xchg
out
mov
jg
dec
cwtl
fcmovnu
xlat
test
adc
sahf
adc
shrl
and
ds
mov
xor
inc
outsl
hlt
mov
mov
in
mov
xor
sub
in
xor
fstps
test
fs
sub
mov
rol
jne
loop
iret
call
dec
setle
orb
push
mov
cmpsl
icebp
mov
dec
push
lods
lock
cmp
or
cwtl
mov
addl
add
and
push
loop
xor
icebp
jge
ret
cmpsb
sub
push
fbld
dec
sub
call
inc
shrl
das
fsubrl
in
xchg
inc
addr16
mov
adc
mov
xchg
add
mov
clc
mov
scas
cmpsl
or
bound
icebp
xchg
inc
add
pop
mov
push
xlat
lret
and
popf
xchg
or
mov
stos
xor
into
mov
push
mov
ljmp
das
xor
bound
mov
push
pop
dec
and
out
mov
adc
lahf
inc
ds
add
sti
or
cmp
fnstsw
mov
test
cmpsl
push
adc
cmp
data16
push
repz
mov
in
fisubrl
stos
shl
or
stos
outsb
in
mov
rcll
cmp
popa
inc
insl
dec
mov
neg
xorl
hlt
adc
jne
dec
cmp
stc
push
mov
shr
subb
outsb
filds
cmc
mov
xor
pop
mov
push
lret
xchg
js
shll
repz
pop
lock
and
pop
rcrb
or
rorl
mov
dec
adc
add
int
mov
cwtl
fcompl
into
sub
xchg
ja
in
ss
scas
pop
ds
notl
xchg
cmc
test
adc
shlb
ret
sarb
mov
mov
lods
into
int
xchg
and
ds
mov
clc
adc
xchg
pop
add
test
mov
enter
push
fmull
pop
and
sub
mov
dec
popl
stc
js
push
aas
inc
add
pop
jnp
xchg
push
faddp
xchg
or
cli
add
les
sti
add
mov
dec
jb
fmul
pop
pop
xchg
or
rcll
mov
mov
sub
xchg
xor
outsb
loopne
jne
les
movsb
shr
cmp
and
pop
pop
push
in
dec
clc
mov
mov
loop
jg
imul
push
ljmp
xor
xchg
mov
dec
cmp
adc
xchg
pop
pop
in
loop
mov
rcrb
into
fs
loope
push
mov
push
xor
mov
clc
lret
xchg
xor
in
bound
lret
push
or
test
scas
dec
fs
andl
repnz
repnz
inc
xchg
cmpsl
xor
test
test
jle
shrl
test
roll
loop
push
loop
fwait
sub
dec
mov
aad
stos
imul
out
dec
shrb
repnz
pop
xchg
add
popa
mov
jge
mov
dec
mov
into
mov
sbb
cld
jne
fld
enter
loope
mov
pop
in
fucomp
cmp
push
push
add
into
imul
or
enter
and
call
or
clc
cmpsb
and
dec
mov
adc
pop
sub
pop
add
test
cmp
jae
fwait
hlt
push
andb
jg
xchg
push
mov
cltd
sysret
shr
adc
pop
or
jle
xchg
mov
scas
fcmovnbe
rcrl
fcmovnu
mov
fiadds
ds
and
andl
mov
pop
xchg
sbb
sbb
and
sub
in
jae
js
push
xor
sub
insb
sbb
inc
adc
jecxz,pt
jo
outsl
sysexit
inc
xchg
or
jecxz
mov
imul
iret
cli
jns
sub
inc
inc
jb
sub
add
jge
add
jns
addb
mov
mov
mov
inc
adc
out
push
loope
hlt
or
lea
or
fchs
push
icebp
jne
movsl
adc
sub
dec
popf
or
sbb
jno
shrb
and
pop
mov
jge
xchg
cmpb
push
jb
in
cmp
les
and
mov
int3
iret
pop
shll
mov
ret
rorl
test
sbb
aas
notb
dec
pusha
xchg
sti
xor
or
inc
enter
bound
pop
pop
int
bound
scas
je
data16
sbb
ret
movl
fisubs
dec
in
fcomps
jge
into
lds
fnstcw
mov
jno
scas
js
icebp
mov
adc
push
sahf
aad
cli
cli
je
daa
js
jb
notb
ds
adc
nop
aam
mov
notl
push
xchg
ret
rorl
cmp
pop
cmp
xchg
mov
and
ss
orl
popf
push
rorb
jbe
bswap
enter
and
mov
jns
sahf
pushf
std
js
ljmp
pushf
shrl
pop
add
rcrl
jbe
shrl
and
addb
cmp
aaa
dec
daa
das
std
orb
test
and
or
add
jnp
sbb
shrb
les
mov
jae
and
imul
out
mov
adcb
jl
nop
or
cmc
loope
xchg
outsb
cmp
lret
fildl
push
sub
outsl
jle
mov
mov
mov
push
lret
and
jl
je
mov
mov
mov
gs
call
xor
fdiv
aad
cmp
movsb
lahf
cmp
and
outsl
bound
xchg
nop
cmpsl
mov
xlat
sbb
add
cmpsb
fcoms
imul
xchg
cmc
fcmovbe
push
lcall
ss
mov
enter
and
xor
add
ret
cltd
and
sti
dec
imul
inc
add
sahf
aaa
jne
into
leave
jp
and
insb
jnp
or
shll
xchg
jg
sub
out
push
xchg
cmpb
pop
xor
sahf
aad
iret
pop
adc
jne
cmc
sbb
int
shll
cmc
pop
ljmp
sar
sub
fwait
pop
cli
pop
inc
out
add
addr16
xchg
je
adcl
pusha
rol
pop
cs
cli
je
mov
adc
fs
xor
adcb
mov
mov
push
in
sti
pop
sahf
or
mov
xchg
push
ja
addr16
inc
xchg
cmpsb
pop
inc
jg
dec
mov
popa
pop
pop
push
pop
pushf
mov
pop
mov
push
jae
xchg
orb
mov
leave
sbb
ljmp
mov
or
es
icebp
test
inc
aas
sbb
sbb
repnz
shr
pop
mov
icebp
inc
pop
pop
sub
inc
nop
push
add
movsl
scas
dec
cld
dec
xchg
xchg
jo
out
clc
jne
loopne
inc
loope
push
iret
aam
scas
in
or
dec
les
jmp
cmp
sub
mov
shr
and
ror
push
insl
mov
jecxz
push
fs
jl
mov
fldenv
sti
mov
dec
pushf
sbb
dec
loopne
jecxz
cmc
push
push
xchg
cwtl
adc
inc
mov
mov
loopne
dec
adc
sbb
stc
xor
cmp
pop
fs
dec
xchg
call
cs
aam
mov
push
bound
adc
mov
pusha
stos
shll
dec
rcll
cld
mov
pop
repz
popa
lret
lds
jbe
adc
sbb
xchg
loope
jle
dec
or
lret
test
addr16
cltd
lock
popf
and
fcoms
or
inc
lods
inc
inc
cmp
ss
cmp
fs
test
ret
cs
arpl
lcall
sahf
les
jl
mov
mov
out
lahf
jp
out
cmpsb
xchg
in
xchg
xorl
loop
mov
outsb
or
mov
andb
jo
orl
subl
lcall
mov
cli
sbb
js
cld
mov
lret
dec
sub
movb
xchg
cmpsb
adc
aam
xchg
daa
or
dec
push
or
add
mov
push
xor
mulb
pushf
xchg
movnti
inc
pop
mov
sbb
cmpsb
cmp
xor
outsb
aaa
sub
and
rorb
xor
fwait
out
dec
aaa
add
clc
ss
mov
aas
bound
inc
xor
inc
sbb
jge
cmp
stc
icebp
pop
bnd
cmpsl
pop
call
jbe
sbb
pop
xor
fcmovnbe
cwtl
lds
adc
cmp
sbb
mov
cltd
push
fnstcw
out
sbb
andl
ss
sub
out
mov
xchg
test
adc
dec
sub
shr
pusha
repnz
ds
mov
outsb
dec
loop
in
mov
dec
sbb
xor
std
pop
nop
cmpl
test
mov
jecxz
add
push
and
or
std
data16
mov
lods
push
fdivl
cli
dec
ds
push
and
icebp
mov
push
add
les
je
sahf
enter
ds
test
push
jae
bound
or
and
lahf
push
mov
or
mov
jg
cld
rolb
jo
aaa
xor
cmpsb
cmp
inc
mov
mov
xchg
push
adc
mov
add
shlb
adc
or
jg
ret
lods
push
push
call
xchg
fldcw
sub
jl
fwait
pop
pop
out
in
pusha
movsb
outsb
cmc
fildl
pop
mov
and
pop
iret
push
xor
push
sbb
scas
mov
adc
jae
jae
fadds
aaa
pop
sti
adc
mov
mov
cmpb
jbe
ret
sbb
clc
xor
out
int3
adc
shlb
addr16
fucomp
mov
jle
into
sbb
inc
fcoml
adc
cmpsl
js
push
mov
dec
cmp
mov
jl
fsubs
and
add
fisttpll
sub
fdivrs
ss
push
jnp
mov
mov
xchg
aas
mov
js
mov
and
lea
add
sub
mov
jmp
insl
mov
push
inc
je
loopne
in
jnp
jge
arpl
pushl
ljmp
dec
push
dec
in
das
clc
add
sbb
sub
int
dec
idivl
popf
jmp
ja
add
mov
rcr
rol
data16
jb
lret
inc
jo
rcrb
mov
xchg
insl
jmp
mov
pop
fwait
xor
mov
cmp
shl
dec
or
popf
dec
leave
test
mov
cmp
test
mov
jnp
mov
and
lods
setp
lock
mov
jo
call
mov
xchg
or
call
iret
or
subl
js
sbb
ljmp
les
sbb
inc
std
iret
pop
fwait
jae
clc
je
int3
orl
fidivrl
cmp
add
mov
stc
pop
jle
mov
in
dec
mov
xchg
add
leave
cmp
cmp
sbb
cltd
sahf
pop
lret
dec
stos
mov
add
jnp
jns
int3
mov
cli
lds
ds
xor
pop
mull
loop
in
lcall
in
xchg
stos
es
lock
dec
push
testl
sbb
aam
fst
out
in
adc
and
dec
mov
cmpsl
jg
pop
pop
add
cli
adc
pop
mov
fsubr
pop
loopne
fldt
cmp
add
mov
enter
icebp
icebp
gs
sahf
xchg
stos
stos
and
les
popf
aaa
in
aas
sbb
iret
jns
push
fdivr
jns
stc
jge
stos
xor
xchg
and
add
xchg
mov
clc
cmp
mov
icebp
push
cmp
jns
pop
les
jnp
daa
das
and
int
xchg
lahf
add
sub
add
ss
bound
loop
and
ljmp
mov
lret
and
icebp
cmp
cwtl
sti
push
cmp
fistpll
mov
cltd
pop
add
dec
ja
test
dec
pop
imull
mov
mov
jp
pop
pop
in
arpl
and
jmp
fiaddl
xor
mov
pop
push
adc
mov
js
rol
and
or
in
jl
jmp
shlb
and
jo
fimuls
sarb
inc
jb
jnp
ja,pn
insb
sahf
icebp
ret
or
fwait
jnp
lds
push
xlat
push
or
js
cmp
shrb
jo
lock
dec
ljmp
loopne
decb
ret
loope
sarl
jl
sub
pop
jecxz
aaa
fucom
or
or
sub
add
pop
rclb
je
inc
stos
fwait
or
xor
push
pop
inc
andb
subb
and
xor
in
sbb
adc
pop
insl
in
inc
add
jno
mov
adc
dec
and
mov
push
dec
rorl
lock
idiv
flds
add
inc
pop
or
and
mov
mov
rcll
adc
addl
adc
cs
cltd
sbb
inc
insb
jg
xor
xchg
sub
mov
pop
fldl
ds
hlt
mov
push
xor
les
jecxz
add
sbb
push
xlat
hlt
rolb
pop
inc
insl
mov
outsb
sub
adc
cltd
adc
js
mov
test
fisubrl
inc
fistl
test
js
pop
mov
jmp
mov
ss
adc
sub
mov
ljmp
int
dec
push
in
sahf
ficoml
cwtl
mov
inc
rorb
test
fsubr
ret
mov
ss
push
xor
stos
mov
inc
mov
jecxz
adc
dec
add
in
adc
cmp
inc
hlt
sbb
loop
das
add
jp
je
idivb
pop
fs
xor
push
ret
xchg
xor
and
push
xor
shlb
cmp
in
mov
aas
jp
mov
loope
psraw
popa
mov
cwtl
aad
insl
push
xor
sub
loope
aaa
fmull
inc
adc
sub
subl
enter
pop
clc
push
cmp
sub
int3
fsubs
es
jbe
sbb
rolb
inc
sbb
mov
mov
dec
xchg
pop
popa
data16
jp
in
xorb
sti
cmp
pop
jbe
inc
aad
int
and
into
movsl
iret
xchg
cs
xor
mov
test
dec
pop
shll
xchg
fcomps
aas
mov
or
cmp
mov
ljmp
cmp
shll
sarl
dec
je
sbb
cmpb
test
mov
mov
aaa
jg
les
xor
movsb
add
xchg
adcb
mov
lock
cmc
test
jne
sub
push
test
test
mov
and
xlat
jmp
fldt
fdivrl
fcomi
nop
fldcw
mov
mov
inc
enter
push
mov
mov
ret
inc
mov
stos
mov
rorb
or
movsb
mov
popf
loop
add
add
das
push
dec
jo
xchg
xor
iret
pop
icebp
add
push
mov
pushf
push
push
adc
fwait
push
sub
push
sbb
int
mov
mov
xchg
push
lods
andb
mov
dec
nop
sbb
jo
mov
repz
movsl
jg
sbb
lcall
add
dec
pop
jbe
shl
das
fisttpll
xchg
adc
mov
sub
aas
adc
fwait
or
out
adc
mov
xchg
mov
addl
jb
pop
js
push
xchg
lahf
les
pusha
add
cmpsb
or
pop
je
fisubrs
pop
test
mov
jo
mov
fdivr
pop
cmpsb
rolb
in
inc
adc
mov
pop
cld
or
into
inc
mov
sub
mov
in
data16
fdivl
sbb
div
add
aaa
xor
adcl
adc
jo
out
aas
add
pop
outsb
jne
dec
cmpsl
xor
cs
das
aaa
js
imul
in
notb
push
push
lahf
push
lahf
test
mov
out
lahf
xchg
and
or
repz
stc
jle
pop
aas
leave
pop
xchg
mov
fidivs
push
out
xchg
jle
dec
iret
shlb
pop
shll
dec
sbb
fistl
scas
lock
and
mov
out
call
mov
enter
stos
ljmp
mov
xchg
inc
scas
cmp
lret
fisubrs
sbb
orl
rcr
add
adc
idivl
fcoms
lahf
sbb
lahf
jmp
hlt
jnp
les
adc
push
push
test
outsb
iret
out
lock
das
or
xchg
sbb
and
add
movsl
cmp
cli
mov
inc
mov
jg
lret
jne
jo
or
mov
ljmp
dec
jbe
pop
or
cmp
fmull
or
adc
mov
mov
mov
es
pop
mov
imul
icebp
mov
mov
push
mov
divl
dec
mov
adc
jge
jmp
insl
cmp
pop
es
jae
idivb
outsl
mov
mov
ds
testl
lret
inc
xchg
fcom
fildl
jge
imul
pop
mov
int3
cmp
jle
lcall
icebp
jns
inc
pop
aaa
pop
mov
inc
test
jl
aaa
pop
stos
lods
push
jecxz
pop
pop
jnp
and
push
mov
xor
outsl
in
inc
and
das
pop
adc
int3
jge
movsl
pop
fisubrs
adc
sub
mov
test
mov
cmp
outsl
pop
inc
pop
sbb
ds
lds
jb
jmp
subb
mov
jmp
fsubrs
jo,pn
jo
clc
fisubs
mov
out
pop
lahf
adc
xchg
mov
xchg
inc
ds
inc
aad
in
nopl
fwait
aad
mov
mov
adc
fmull
mov
ds
call
icebp
jb
test
ja
jge
xor
nop
jns
arpl
mov
mov
test
sub
push
mov
inc
cmc
add
push
pop
jg
negl
pushf
mov
dec
pop
and
imul
inc
xlat
ret
addr16
fmul
mov
sub
icebp
pushf
sub
ds
xor
xor
imul
mov
in
ds
imul
xor
push
xor
in
lret
cltd
inc
icebp
je
mov
xorb
xchg
sub
sub
push
in
or
aam
or
cvtdq2ps
pop
bound
inc
dec
pop
lock
insl
mov
push
insb
push
mov
xchg
pop
sub
cld
in
jmp
mov
xchg
jl
idivl
dec
stos
sbb
jl
adc
jp
xchg
or
test
inc
fwait
pop
clc
ds
lahf
adc
or
inc
push
mov
movsb
bound
out
fisttpl
xchg
adc
cmp
pop
xchg
pop
ret
push
or
mov
hlt
in
cmc
or
shll
cmpsl
jl
sahf
pop
jl
stc
test
inc
fadd
or
mov
into
test
insl
add
fwait
mov
cmpsb
clc
mov
sbb
sbb
mov
sti
inc
fnstsw
aaa
and
jp
xor
cmc
test
cmp
jecxz
in
jbe
sbb
pop
icebp
clc
cmp
pop
adc
xchg
test
aaa
adc
xchg
mov
fisttps
mov
aam
lea
pop
adc
ja
and
jo
mov
adc
xchg
je
dec
or
shl
push
insb
pop
test
dec
and
rorb
int3
pop
or
stc
shrl
pop
fidivs
mov
clc
pop
or
negl
mov
out
shrb
pop
popa
sti
jecxz
or
clc
push
mov
fwait
ret
adc
loope
xchg
out
pop
icebp
icebp
mov
ds
xor
cmp
dec
jnp
cmp
pop
outsl
ds
hlt
sub
and
mov
inc
dec
or
pop
rolb
xor
pop
fst
lcall
cmp
or
jl
xor
repz
pop
mov
mov
stos
mov
xadd
popf
add
bswap
mov
mov
sti
in
popf
mov
push
aas
or
bound
jne
sbb
xchg
call
or
test
xchg
jnp
inc
jl
movsb
mov
dec
icebp
push
mov
adc
sbb
mov
or
movsb
fwait
pop
pop
cmpsb
push
mov
and
dec
sbb
xor
push
lods
mov
mov
mov
pop
cli
sub
out
pop
mov
sbbl
aaa
fimull
mov
mov
xchg
jecxz
inc
mov
daa
cmc
in
lods
andb
xchg
out
adc
lcall
cli
jb
jl
mov
icebp
adc
ds
js
lret
pop
out
mov
cmp
mov
xor
push
int3
jae
vmread
sbb
fstpt
shll
sbb
mov
adc
shll
es
out
enter
stos
mov
out
sbb
mov
adc
xchg
mov
adc
scas
cmpl
jnp
faddl
fildl
cmp
push
jp
adc
cmpsl
repz
sub
loopne
jo
jb
sub
cmc
add
jge
jge
jno
add
lret
cmp
gs
adc
in
pop
jae
push
jo
ss
adc
imul
jmp
mov
rol
faddp
jo
test
pop
mov
icebp
xchg
mov
sub
imul
or
adc
pop
rclb
das
xchg
mov
loop
mov
pop
bound
cmp
xchg
mov
pop
xchg
icebp
cld
bound
rcrb
cmp
inc
inc
mov
mov
popl
cmp
jns
pop
mov
jo
movsl
inc
test
xchg
push
or
add
mov
xchg
outsb
mov
pop
inc
xchg
jge
outsb
adc
inc
ficomps
mov
mov
fldt
repnz
sbb
shrl
mov
in
lock
xor
loop
or
sbb
jae
outsb
test
jg
popf
clc
mov
or
add
push
push
adc
fisubs
jns
fmuls
mov
pop
sahf
sti
cld
outsl
iret
jmp
sbb
leave
fwait
or
jp
jne
dec
mov
fs
mov
shrd
dec
xor
pop
mov
add
inc
sub
mov
ret
int
or
mov
fistps
cmp
insl
inc
xsaves
jl
fwait
mov
pop
mov
call
das
mov
call
or
pop
push
dec
pop
icebp
jo
movl
push
mov
jnp
jl
dec
mov
xor
lods
mov
insb
sub
pop
inc
mov
and
mov
and
inc
jno
in
mov
ret
arpl
shll
fbstp
xor
aaa
insb
je
xor
popf
pop
ret
mov
cld
insb
cmpsb
test
dec
sarl
fadds
inc
daa
add
fneni(8087
lea
or
pop
push
fdivrl
popa
cmp
insl
pop
add
push
inc
push
push
mov
dec
xor
mov
jns
fildll
arpl
jbe
in
shlb
popa
shll
int
dec
push
jl
test
push
aaa
outsb
bound
inc
movl
sbb
in
pop
push
jecxz
jecxz
testl
ds
clc
addb
mov
es
enter
aaa
mov
inc
imul
int3
nop
test
js
mov
fwait
aas
jl
push
cmc
gs
out
scas
jmp
cmp
ja
fwait
clc
sub
rcrl
pop
add
inc
xacquire
push
jecxz
imul
jno
mov
pop
pushf
mov
fidivl
sbb
icebp
notb
je
pop
fwait
dec
cmp
push
xchg
outsl
cwtl
push
or
scas
icebp
lea
gs
jp
sbbb
lods
ret
adc
adc
decb
pop
les
incl
pop
inc
js
in
or
and
cmp
inc
ja
sub
mov
xor
push
mov
mov
or
test
outsl
dec
push
and
fisttpl
scas
clc
mov
pop
cmp
std
inc
js
mov
ficompl
adc
insl
jl
pop
outsb
repnz
clc
loope
inc
jge
add
pop
push
dec
add
jb
pop
out
pusha
lcall
scas
fstps
mov
clc
shll
js
subl
push
mov
adcb
int3
jp
push
push
mov
or
sahf
nop
or
ljmp
or
fdivs
add
test
xlat
fmuls
inc
mov
sti
in
fiaddl
mov
nop
pop
push
inc
or
mov
ja
rolb
jcxz
xchg
mov
mov
mov
rcrl
js
mov
push
lahf
or
out
loopne
push
inc
xor
mov
cs
pop
mov
lods
pop
sarb
jp
in
dec
jb
jmp
pushf
mov
fnstsw
mov
addr16
add
mov
lods
adc
pop
decb
imul
xor
repz
aam
test
dec
add
dec
inc
fs
nop
or
mov
jae
lea
outsl
in
test
mov
and
jl
add
add
jle
pushf
lret
lods
mov
aad
nop
int3
inc
das
pop
jl
cld
repnz
hlt
push
cwtl
test
mov
shl
or
adc
daa
xor
or
inc
shl
adc
xchg
or
mov
fiaddl
bound
add
in
inc
aad
fistl
andb
or
fdivrp
pop
mov
push
jbe
mov
cmp
into
test
or
cltd
fwait
mov
mov
nop
mov
aam
inc
int
push
adc
lods
sub
pop
das
test
out
dec
mov
adc
or
or
xor
je
push
out
mov
pushf
les
push
fiadds
sub
or
xchg
xchg
aaa
jne
xchg
adc
mov
xchg
arpl
cmpl
fwait
mov
adc
dec
outsl
incl
sub
mull
inc
push
cbtw
lcall
add
clc
outsb
mov
out
call
xchg
mov
sbb
sbb
bound
fdivl
int3
inc
or
push
mov
test
adc
lret
fldt
in
pop
sub
and
cmp
cld
mov
jns
inc
fbstp
fidivrs
dec
sub
daa
pop
lods
loope
inc
addr16
sub
imul
sbb
mov
cmp
and
rorb
pop
and
lods
mov
inc
mov
out
pop
divb
mov
add
push
je
in
pop
lea
sbb
pop
sub
sub
rcll
fdivs
ja
inc
xchg
cmp
inc
push
mov
pusha
lret
aad
repz
lock
xchg
xchg
jnp
sbb
scas
mov
repnz
jmp
test
dec
jne
faddp
orl
test
out
lcall
jmp
pop
mov
and
cwtl
sbb
out
mov
or
or
outsb
mov
aas
mov
inc
mov
cwtl
ficoml
add
push
mov
test
cmp
mov
mov
add
cmp
xorb
add
xor
inc
es
fstpl
flds
inc
hlt
and
pop
sub
pop
xchg
xor
xor
xchg
ja
dec
push
popa
mov
lret
sbb
xor
mov
test
dec
push
das
inc
out
mov
jge
sub
adc
aaa
mov
mov
jno
or
int3
jl
mov
fidivrl
dec
int
push
jmp
sar
fdivrp
or
cltd
mov
stos
pop
cmc
mull
loopne
dec
mov
pop
fmulp
inc
mov
inc
lods
inc
cltd
add
nop
mov
push
push
dec
cmpsl
insb
mov
fidivrl
xor
repnz
fisttpl
lods
lock
fstl
xor
inc
hlt
negb
push
insb
jo
lahf
je
loope
rcll
pop
adc
in
mov
or
jnp
sbb
scas
or
jbe
mov
cmp
mov
jno
dec
outsb
outsl
das
shlb
icebp
dec
xchg
sub
xchg
mov
pop
xchg
add
push
mov
movsl
loopne
in
add
test
inc
aam
lods
pop
mov
jmp
sub
xor
pop
in
adcb
inc
fwait
push
inc
mov
pop
aad
aaa
insl
test
push
jo
loopne
jl
insl
cld
inc
out
test
movb
cmc
push
mov
jbe
push
or
fcmovnbe
fistl
push
loopne
mov
adc
enter
add
nop
cmp
orb
jp
js
or
aaa
pop
leave
icebp
cmpsl
icebp
sbb
jbe
or
nop
pop
mov
out
js
pop
sbb
xor
jno
or
mov
sarl
pop
pop
insl
mov
add
idiv
cmc
add
cmp
jne
jle
mov
mov
push
pop
sbb
fidivrs
cmp
mov
mov
mov
clc
fdivr
sbb
pusha
sbb
mov
jb
cmpl
sbb
clc
lret
cmpl
repnz
lret
xchg
cs
rorb
pusha
mov
js
mov
push
fnstsw
lods
mov
cmp
out
outsb
cmp
dec
cmp
xchg
clc
inc
cmp
sub
js
fnsave
in
call
fisttpll
inc
mov
xor
pop
mov
in
repz
push
aaa
mov
sbbb
fcoms
lea
pop
or
add
xor
mov
fdivp
pop
mov
daa
xor
mov
xchg
jns
aad
test
int
or
jbe
test
outsl
addr16
cld
and
jns
arpl
pop
adc
inc
add
test
adc
inc
js
sub
mov
or
pop
call
or
iret
push
es
adc
jg
mov
jae
das
mov
add
xchg
fstpl
xor
pop
cmc
rorb
and
lcall
sbb
cmp
push
aam
fildll
pop
in
stos
cmpsb
mov
fs
mov
sbb
enter
bound
in
fbstp
test
or
out
sub
mov
stos
fs
and
sti
lods
das
inc
call
inc
mov
cmp
push
adc
inc
xor
enter
add
stos
jp
and
push
je
dec
in
loope
cmp
aaa
or
adcb
dec
movsl
push
addb
add
je
mov
adc
inc
loopne
fcompl
cs
mov
mov
mov
les
loopne
sbbb
add
in
test
mov
gs
mov
aad
and
movsl
mov
outsb
and
lock
push
jnp
pop
fdivs
dec
insl
add
stos
xchg
call
mov
xor
iret
or
lcall
cmp
inc
mov
fadds
mov
inc
std
jmp
mov
jecxz
push
cmpsl
insl
mov
pop
inc
cmp
mov
lock
stos
out
std
movsl
pop
cmpb
orl
test
and
jo
dec
push
ja
cmpsb
enter
lcall
pop
and
aaa
sbb
pop
or
test
fwait
inc
sti
bnd
xor
cmp
cld
inc
sbb
xor
je
cmpsb
sbb
enter
nop
ret
cld
in
lods
fisttps
fsubrs
popa
jne
mov
adc
mov
push
lock
push
mov
int3
loope
sarb
sbbb
lock
or
push
add
dec
xchg
mov
rclb
sbb
mov
sbb
dec
repz
cmp
jae
jo
not
rorl
dec
pavgb
outsl
mov
fbstp
cmp
pop
lcall
mov
test
and
shufps
stos
fsubrl
sub
hlt
inc
icebp
loop
mov
fldlg2
xchg
les
add
jmp
and
jg
ss
stc
lret
mov
test
addr16
fiaddl
test
cmc
jno
aad
or
ljmp
aas
sbb
rclb
fstpl
push
cmp
inc
xor
push
mov
pusha
arpl
push
pushl
lods
cmpsb
push
dec
mov
notb
leave
fiaddl
mulb
aas
rcrb
xor
xor
cmpsb
and
rorl
je
xchg
loope
add
lahf
or
rcl
jne
xchg
push
daa
loopne
insb
insb
out
roll
mov
adc
in
loopne
mov
stc
and
movsb
cmpsb
inc
pop
movsl
xchg
fidivs
fidivs
cmp
adc
stos
pop
pop
or
sahf
cmp
push
sahf
pop
popa
iret
jmp
das
mov
ret
sbb
and
pop
mov
xor
rcr
test
dec
pop
js
lds
adc
mov
shlb
scas
outsl
icebp
add
icebp
push
add
pop
mov
rol
xchg
add
xchg
sbb
loopne
mov
push
cmp
sub
shrl
into
rolb
in
add
sub
jno
shl
bound
and
and
fcom
sar
leave
jl
das
pop
mov
sar
test
xor
add
outsl
push
pushf
mov
imul
fcomip
and
adc
add
in
adc
dec
mov
push
lods
js
enter
inc
push
xor
fldenv
mov
int
std
mov
insb
jl
add
dec
ja
add
xor
aaa
cld
mov
cmp
pop
js
orb
jbe
inc
icebp
ret
jne
and
out
cmp
dec
pop
mov
pop
or
pusha
fsts
fsubl
loopne
cli
aad
jecxz
mov
int3
movsb
adc
daa
jecxz
adc
jae
or
mov
mov
cmpsl
jg
add
imul
mov
repnz
cmp
mov
cltd
or
ffree
pop
xlat
dec
mov
dec
inc
je
stc
lret
ljmp
or
pop
mov
lock
adc
xorl
adc
mov
ss
adc
xor
xchg
mov
orl
push
xchg
xor
or
inc
stos
iret
imul
ficomps
jno
scas
jg
push
fisubrl
xchg
sbb
test
lret
cmp
sub
pusha
loope
cmp
int3
cs
adc
inc
mov
sbb
nop
push
je
sbb
ret
sbb
xchg
repz
push
and
orl
or
adc
les
or
or
dec
push
jo
out
sbb
adc
mov
movsb
or
dec
cs
push
dec
bound
inc
push
mov
in
push
insl
sti
dec
std
scas
loop
pop
pop
decb
dec
inc
pop
jb
lret
fwait
dec
jae
mov
rol
or
icebp
push
mov
insl
and
pop
add
aad
in
or
adc
pop
jb
fldl
dec
mov
ds
or
and
sbb
push
add
sarl
js
mov
dec
mov
cltd
or
add
incl
mov
les
ljmp
loopne
pushl
enter
pop
adc
push
inc
push
test
out
push
cmp
sbb
mov
push
rclb
ret
xchg
clc
aad
js
sbb
test
jo
mov
mov
xchg
incb
out
mov
mov
loop
aas
and
push
imul
ja
sbb
mov
aas
shll
push
iret
test
mov
or
adcb
and
and
aas
orl
inc
clc
jbe
repz
adc
mov
pop
cld
repz
cmp
rcrl
push
adc
repnz
ret
ror
clc
jle
test
test
mov
out
sub
fcmovu
test
outsb
push
mov
mov
or
dec
nop
or
aas
out
mov
fcmovbe
xchg
push
jns
sub
jg
xchg
and
cmp
daa
mov
jne
xor
xchg
dec
sub
mov
push
enter
jmp
fcomi
bound
sbb
push
sarb
jmp
pop
mov
call
pop
fidivs
push
jmp
sbb
cwtl
iret
mov
mov
hlt
push
leave
mov
loopne
ret
xchg
stc
mov
add
push
imul
cmp
je
lcall
outsl
imul
jnp
loope
aaa
popa
cmpsb
imul
stos
jle
push
mov
call
jecxz
repz
test
fdivr
in
cltd
data16
lea
push
jno
xor
dec
rorb
test
dec
cwtl
push
les
shl
inc
or
das
sbb
add
jb
or
inc
in
test
outsl
test
dec
pop
call
rclb
or
frstor
sub
ja
loopne
pop
xchg
mov
loop
into
aaa
pusha
test
das
lahf
icebp
or
mov
outsb
add
pushf
fdivr
jns
xor
jbe
jmp
fnstenv
lods
rep
xchg
push
mov
jne
test
rorb
sbb
or
push
fiadds
adc
insb
and
adc
fidivs
lods
fildl
test
and
outsl
test
inc
add
push
cli
ret
jl
mov
mov
sub
mov
xchg
and
cmp
xor
jns
dec
js
xor
rcr
or
jl
out
mov
xchg
lock
push
pop
cld
pop
ret
xchg
jbe
addr16
xchg
lock
dec
jno
add
mov
aaa
faddp
dec
stc
push
ljmp
ret
dec
aaa
outsb
stos
mov
sub
loopne
pop
stos
cmpl
adc
pop
fstpt
ror
inc
push
lods
stos
popl
jge
bound
mov
push
sarl
sbb
test
push
add
xlat
popa
fildl
mov
mov
pop
adc
popa
aas
push
xor
jo
lea
push
pop
pop
jo
loopne
hlt
lret
fcmovne
push
cltd
cmpsb
rol
js
sahf
mov
roll
ja
inc
out
jecxz
shlb
notb
cmp
push
sar
dec
sub
fbstp
fstps
pop
push
adc
mov
in
and
das
repz
imul
cli
sbb
out
cmp
in
jbe
in
dec
jo
sub
and
mov
aaa
xchg
pop
cmpsl
scas
imul
jnp
int
ret
insl
iret
cmp
xchg
clts
mov
movsl
mov
jno
xchg
push
in
dec
push
mov
pop
es
loop
dec
xchg
mov
shrl
ffreep
and
sbb
and
push
ja
loope
fildll
inc
insb
pop
stos
inc
cwtl
add
je
test
ret
inc
push
addr16
mov
das
cmc
pop
call
inc
adc
mov
push
dec
xchg
mov
inc
ret
jmp
and
std
mov
add
mov
mov
adc
mov
sbb
pop
lret
mov
dec
or
jb
adc
xor
loope
jae
roll
enter
sarl
and
daa
push
pop
cmpsl
fildl
mov
in
push
enter
push
mov
movl
fwait
pop
test
mov
add
test
idivb
fwait
subl
pop
xor
xchg
stos
js
ds
int
imul
xor
cmp
gs
out
fs
and
clc
in
and
lcall
and
cwtl
or
jmp
adc
mov
clc
cmp
mov
jge
cs
xchg
addr16
dec
cmp
setle
dec
incl
cmp
test
xchg
loop
outsl
cmpsb
add
push
push
lret
shlb
adc
mov
outsb
jg
jl
dec
sbb
add
inc
push
sti
push
adc
fwait
sbb
sbb
int3
pop
shll
decl
fidivs
add
jns
mov
push
scas
or
push
adc
dec
mov
mov
xlat
test
and
xor
outsl
test
and
nop
mov
cmp
outsb
dec
outsl
sbb
sbb
jl
nop
cmp
add
jecxz
mov
je
outsb
sbb
mov
add
movb
mov
jp
stos
es
jne
mov
xchg
mov
sub
push
fldenv
lret
add
inc
mov
faddl
mov
add
jno
mov
call
xorl
ss
clc
mov
adc
inc
push
sub
fldt
sbb
jne
sbbl
cmp
arpl
mov
mov
stos
test
xchg
xor
std
xor
shlb
js
sbb
ja
pop
xchg
in
es
or
mov
xor
test
add
add
inc
lcall
mov
and
jb
and
or
xorb
jp
push
dec
inc
hlt
leave
gs
jmp
mov
jbe
out
decb
das
rcrl
sbb
lcall
push
pop
stos
or
or
jae
mov
mov
test
ja
lods
incl
ret
nop
pop
add
lret
adc
pop
clc
outsl
inc
stos
stc
jnp
cmp
outsl
add
pop
out
les
xchg
shrl
sbb
inc
outsb
and
mov
or
int3
sbb
fucom
pop
ret
sub
push
pop
push
inc
lret
mov
fwait
loop
xchg
cmp
aad
mov
fcompl
inc
int
cmp
xor
mov
cmpsl
push
jecxz
jge
push
inc
mov
dec
vandps
mov
mov
cs
test
lret
je
lea
arpl
pop
or
push
push
in
rclb
sbb
js
aam
shl
lods
adc
aas
xor
xor
mov
xchg
cmp
inc
xlat
lcall
sbb
dec
test
in
cld
sbb
addr16
lock
mov
je
lahf
or
aad
mov
lods
xchg
stc
push
sti
outsl
outsl
insl
popa
test
pop
xchg
fcmovnu
iret
insl
pop
mov
or
sub
dec
aad
mov
add
push
lret
lock
and
stos
push
roll
pusha
lret
push
ljmp
xchg
outsb
ffreep
mov
out
cmp
push
je
mov
dec
push
dec
in
movsl
testb
fs
pop
jns
stc
jle
cmc
push
adc
inc
sahf
mov
cwtl
push
popa
sti
notb
into
bound
cltd
add
push
xor
pop
in
jle
and
mov
or
mov
rcrb
lret
test
and
and
add
fsubrp
scas
inc
mov
sahf
jae
in
or
push
loopne
mov
xchg
inc
fucomi
lret
mov
int
adc
add
pop
shrb
test
adc
scas
aam
sub
insl
cmpl
aad
jbe
pop
jno
jae
jle
inc
xchg
mov
js
out
roll
or
mov
test
loopne
ret
or
inc
ret
das
aaa
outsb
inc
dec
lcall
int3
mov
mov
cltd
mov
mov
test
and
and
jbe
push
bound
aas
sub
popf
into
sbb
shlb
loope
cld
loopne
jle
sbb
fidivs
push
outsb
mov
outsl
cmp
mov
xchg
jbe
sbb
frstor
push
js
les
jnp
pop
jbe
pop
fisubrl
mov
inc
ss
adc
sarl
mov
jecxz
pop
fadds
iret
mov
fs
push
fdivrl
stc
popf
loop
mov
mov
inc
dec
jg
add
mov
loopne
lock
hlt
pushf
cmp
mov
pop
mov
fnstsw
dec
cmp
xchg
jnp
xor
pop
push
pop
insl
mov
rcrb
out
jp
jbe
sub
lods
jae
arpl
ftst
mov
sub
mov
lret
pop
lods
mov
outsl
xchg
dec
loopne
jecxz
js
and
das
jl
or
scas
mov
setae
sub
mov
add
pop
push
push
sbb
ss
int3
xchg
imulb
lods
lods
xchg
jmp
js
mov
pop
mov
mov
jg
push
or
shlb
bound
in
inc
adc
jns
dec
jg
bound
outsb
and
lock
cld
enter
pop
loopne
lret
rorb
outsb
mov
or
add
popf
adc
xchg
mov
in
xor
fucomip
arpl
adc
and
ss
push
fsubs
or
jbe
add
jmp
lods
test
and
shlb
dec
mov
test
in
mov
outsb
iret
cmp
rorl
adc
dec
test
bound
or
icebp
inc
pop
xchg
push
sbb
jb
aam
push
inc
sub
pop
mov
int3
ja
pop
jecxz
jge
add
mov
jecxz
ret
pop
or
or
ja
mov
pop
dec
test
or
ror
mov
inc
cmp
mov
lds
xchg
jmp
xchg
clc
rol
pop
mov
ss
js
in
ds
fsub
je
sbb
add
sbb
jmp
jbe
and
jle
mov
or
scas
pop
mov
sbb
and
mov
mov
je
adcl
cmpsl
ucomiss
into
mov
jnp
dec
test
aas
fldenv
cmp
sub
cmpsl
aas
shlb
adc
fildl
mov
xchg
mov
das
pop
dec
or
xchg
and
subl
pop
mov
orb
mov
and
fisubs
js
sbb
imul
lea
jmp
mov
insb
jbe
add
pop
xchg
orb
adc
insb
add
xchg
mov
out
and
push
push
mov
shrl
repnz
int
pop
pop
jo
cwtl
lock
test
mov
std
inc
cmp
xor
jmp
ret
push
andl
fnstsw
dec
inc
mov
xor
jo
test
push
adc
adc
in
hlt
pop
mov
out
add
in
scas
inc
testb
lcall
inc
cmpsl
icebp
lcall
xchg
call
adc
loope
jnp
sub
aad
dec
xchg
add
push
xchg
mov
imul
adcb
mov
sbb
das
insl
insb
pop
xchg
subl
xchg
inc
push
je
ljmp
and
push
push
sbb
enter
sbb
je,pn
pop
lds
push
sub
sbb
mov
adc
arpl
mov
mov
sub
out
lcall
insb
je
movsl
sub
inc
sub
dec
mov
je
lsl
sti
ja
insb
xor
mov
push
mov
movsl
pop
in
mov
sub
ja
call
push
leave
div
test
add
aad
nop
xchg
push
filds
adc
fmuls
jp
popa
pop
jae
lret
insl
arpl
sub
popf
daa
jae
loop
mov
xor
pop
jl
cmp
pop
push
jb
cli
pop
mov
cmp
sbb
dec
fcmovnu
add
sub
fwait
jbe
aas
push
aas
jne
arpl
adc
cmp
dec
shlb
fisttps
mov
cltd
test
loope
jl
test
test
push
and
mov
pop
sub
push
push
mov
jg
push
mov
mov
in
sbb
push
scas
test
inc
daa
cmp
cmc
mov
sub
adc
sahf
sub
adc
lods
dec
cld
and
mov
push
test
push
iret
cltd
and
add
aad
dec
mov
mov
push
cmpsl
insl
int
cld
insb
or
push
repnz
in
xchg
mov
aad
cmp
cltd
jnp
xchg
aaa
sub
out
pushf
pusha
mov
outsl
lea
mov
inc
stc
jmp
jmp
sub
insl
in
cmp
lcall
push
call
test
dec
jae
loopne
imul
pushl
mov
xchg
adc
jmp
dec
jmp
inc
test
or
out
push
mov
mov
call
pop
out
dec
outsb
in
lahf
xor
pusha
lcall
aaa
or
or
cmpl
int
stos
loopne
pop
xchg
add
lret
call
xchg
jp
cmp
pop
jge
movb
popf
mov
push
sub
pop
mov
pop
fdivrl
fwait
adc
idivb
or
rolb
pop
cmpsb
sbb
in
das
lds
rorl
outsl
cwtl
incb
pop
lock
sahf
xchg
inc
jmp
sub
mov
psubb
test
jp
cmp
push
and
sub
fimull
push
das
filds
mov
lret
outsb
inc
xchg
xchg
and
lds
xchg
pop
js
loop
fcmovnb
inc
in
push
pop
mov
test
bnd
cs
inc
or
mov
xchg
mov
sti
ret
xor
add
pop
mov
xchg
jbe
push
test
or
mov
push
repnz
aam
xchg
or
push
adc
cs
cs
inc
dec
stos
xor
ret
jae
sbb
xchg
sub
mov
pop
sbb
add
or
movsl
inc
adc
rol
and
xchg
add
sub
mov
cld
das
mov
sbb
pop
push
inc
aas
push
sbb
inc
jecxz
add
jg
xchg
jnp
pop
outsl
mov
divb
cmp
jne
lcall
lods
call
shlb
fdivrs
mov
rcr
xchg
mov
lds
mov
shlb
push
cmp
adc
sbb
dec
pop
jno
jne
xchg
mov
mov
sbb
mov
inc
out
inc
bound
xlat
cmc
inc
sarl
push
in
iret
add
rol
sbb
in
add
call
push
add
cmp
mov
dec
cmp
jg
call
mov
inc
jbe
mov
push
shrd
xchg
adc
scas
cmp
xchg
and
movsl
ret
aaa
adc
inc
stos
adc
lahf
add
or
mov
mov
pop
outsb
xorb
mull
pop
sbb
cmpsl
and
mov
aaa
insl
lods
js
sbb
pop
mov
mov
pop
js
test
push
hlt
rclb
mov
pop
inc
in
mov
mov
add
xor
adc
push
insl
inc
jle
jno
ret
sbb
sahf
sub
mov
and
nop
adc
arpl
and
shl
pop
mov
xchg
sub
jg
fistl
add
loopne
bound
mov
dec
jp
mov
call
push
inc
addl
les
cltd
sbb
or
cli
call
xor
les
mov
ret
xchg
loopne
data16
std
inc
or
aaa
das
mov
mov
add
mov
aam
iret
mov
cmp
jbe
xchg
cli
shl
mov
mov
cs
int
loop
loopne
fidivs
shll
mov
fdiv
test
outsb
in
pop
cmc
out
sub
out
imul
test
sub
pop
bound
xchg
test
jns
push
mov
lret
aam
lods
shll
leave
adc
pop
and
sbbl
iret
mov
mov
and
sbb
movsl
test
adc
mov
and
cmp
dec
jl
fildll
out
push
test
test
sbb
mov
adc
pop
in
and
sbb
test
adc
add
mov
sbb
int3
inc
sbb
je
pushf
pop
sbb
or
fisttpl
stc
or
push
mov
test
das
dec
and
add
aaa
fisubl
or
inc
mov
in
or
cmp
xchg
mov
push
fdivrs
call
icebp
out
divb
cmp
cmp
cli
sub
sbb
sti
rcr
arpl
bound
add
pop
lds
in
inc
cld
mov
dec
add
and
loope
or
push
pop
pop
xorl
testb
adc
fadd
mov
cmpsb
popf
jb,pn
ljmp
pop
mov
into
repnz
orb
outsb
stos
sub
lret
das
pop
mov
inc
mov
in
push
test
incb
sarb
dec
mov
push
js
sti
pusha
mov
sbb
ljmp
jno
jecxz
jne
insb
cltd
dec
icebp
inc
and
mov
mov
bnd
lea
hlt
xchg
jl
insb
out
in
nop
jge
sti
vpsllq
dec
ja
and
or
push
ds
or
add
adc
outsl
sub
mov
mov
push
pop
xchg
pop
arpl
dec
pop
sarl
nop
jnp
mov
scas
shlb
test
call
adc
mov
inc
sbb
cwtl
push
push
pop
adc
pusha
xchg
mov
sub
or
mov
add
push
cld
pop
ret
repz
call
rcrb
pusha
cmc
test
xor
xchg
hlt
bound
mov
mov
int
pushf
jne
rorb
test
adc
stos
loope
fsubrs
mov
test
pop
jg
lods
mov
xchg
rorl
sbb
add
pop
mov
mov
sbb
mov
xor
ds
scas
out
push
outsl
scas
fisubs
cmpsb
pop
cmpsb
dec
test
inc
xchg
test
cmc
je
js
inc
and
out
hlt
fcoml
testb
enter
call
roll
xchg
adc
lcall
rcrl
push
ds
mov
sbbb
and
pusha
or
stos
shll
icebp
movsl
dec
sbb
dec
push
cmp
cwtl
call
jge
and
jae
xchg
pusha
and
fstl
xchg
rdtsc
insl
pop
push
push
mov
jae
aam
and
in
mov
dec
cmp
inc
test
fidivs
pop
adc
push
mov
mov
cli
loope
repnz
mov
jp
or
pop
and
mov
xor
push
dec
cmpsb
mov
and
test
pop
mov
cmp
repz
xor
pusha
mov
dec
inc
or
pop
push
popf
in
inc
inc
icebp
lds
orb
cs
daa
fld
push
aas
insb
mov
and
andl
push
and
fidivs
mov
jne
mov
pop
dec
jo
ret
lahf
mov
cld
push
lcall
addr16
popa
fidivl
mov
lods
das
cmp
ret
adc
or
dec
add
or
xor
dec
lods
ret
sti
sub
dec
sahf
fsubrs
movsb
inc
std
test
mov
or
jbe
mov
push
insb
das
mov
leave
je
lock
rorl
popf
push
scas
decb
dec
loope
imul
adc
mov
xlat
sub
xor
cmpxchg
insl
adc
mov
mov
mov
je
pushf
imul
insl
push
dec
push
dec
add
pop
jecxz
loope
mov
mov
sub
jmp
fiadds
xor
inc
xlat
test
xor
fistps
mov
push
fisttpl
add
fnstsw
inc
std
add
dec
adcl
dec
repnz
nop
adc
pop
stc
inc
fcmovu
stos
inc
imull
sti
mov
rolb
cmp
sahf
mov
les
mov
push
dec
inc
imulb
sub
or
xor
call
push
stos
lock
js
fldt
mov
xchg
or
cmp
faddl
out
cld
jg
mov
test
adc
testb
mov
nop
add
jmp
pushl
mov
lahf
adc
xor
ja
adc
add
sub
adc
mov
lea
pushl
out
stos
xchg
mov
iret
xlat
mov
nop
xchg
push
mov
negb
cmp
test
and
pop
lock
clc
lcall
dec
fistpl
mov
dec
shl
pop
mov
addl
xor
jmp
js
sbbl
pop
push
loop
fisttpl
cwtl
js
adc
loop
ja
dec
pop
add
loop
add
jle
adc
push
pusha
jmp
push
sub
aas
add
rorl
lds
inc
push
jmp
in
cmp
lret
mov
sahf
mov
adc
pop
out
sbb
pop
mov
cmp
pop
pop
loop
xorb
cli
mov
pop
mov
or
sub
pop
cmp
ss
adc
jbe
cmp
in
mov
pop
jmp
insl
aaa
jp
lahf
mov
dec
cmp
test
movsl
or
add
fisubs
aad
lods
and
add
mov
stos
daa
mov
rcll
popa
test
jnp
sub
outsb
pop
jecxz
xor
test
pop
mov
shrl
insl
pop
add
push
or
out
jecxz
jg
in
clc
lds
xor
mov
fwait
mov
loope
sub
sub
mov
test
addl
mov
cmp
sub
and
test
sahf
sti
xor
lock
pop
mov
mov
inc
enter
add
pop
pop
ret
sar
sbb
jmp
test
mov
pop
sub
jecxz
imul
out
mov
xor
fisttpll
dec
cmc
fisubrl
xor
mov
cltd
cltd
out
cwtl
ss
rol
mov
sub
add
jg
hlt
test
push
and
jg
mov
loope
lock
leave
in
into
jae
push
sbb
mov
clc
bound
mov
lods
pop
jnp
sbb
cmp
xor
pop
pop
jp
push
clc
dec
add
cmp
lods
lock
stc
inc
push
sbb
mov
xor
shrb
jbe
lret
cwtl
push
les
xor
xor
repnz
shrl
add
repz
pop
lret
out
test
mov
mov
adc
es
fs
mov
out
arpl
push
mov
mov
fistl
test
jo
roll
add
jns
push
mov
pop
aaa
arpl
mov
enter
inc
clc
icebp
mov
imul
or
inc
aaa
add
adc
mov
test
cmc
js
test
xor
mov
push
cli
sub
rclb
jmp
loopne
fistl
and
push
mov
shlb
notb
or
sbb
inc
dec
jb
mov
pop
xchg
mov
jno
orl
fiadds
andb
fbld
aas
and
add
jle
ss
lds
pop
fisubrl
stos
cmp
inc
outsl
je
lahf
pop
add
inc
xor
xor
add
sub
jle
or
push
push
dec
jae
xchg
es
mov
ficompl
clc
mov
xchg
out
fadds
or
ljmp
popf
sbb
stc
mov
add
nop
dec
nop
push
ljmp
mov
rorb
mov
clc
xchg
add
fsubs
loope
push
push
out
sbb
lret
mov
inc
sti
jecxz
xchg
and
loop
dec
adc
dec
lods
mov
dec
scas
loope
mov
test
mov
xor
insl
dec
mov
pusha
mov
loopne,pn
jns
push
ljmp
shr
imulb
jecxz
je
into
pop
imul
mov
insl
mov
leave
ret
mov
std
insl
mov
add
fidivs
add
outsl
mov
pushl
call
jb
and
xchg
insb
inc
repnz
in
movsl
aaa
popf
cmp
xor
int
cmp
jecxz
sbbb
mov
imul
add
inc
push
jp
jge
movsb
and
sbb
into
add
cmpsl
xchg
lea
sti
dec
xor
sub
daa
mov
push
and
lock
stos
int3
sbb
fdivr
das
push
jg
mov
arpl
aaa
test
ja
or
aas
inc
js
mov
movsl
cs
orl
stos
pushf
movsl
sub
add
cmp
sti
add
int3
add
inc
or
inc
fdivl
cli
jl
aam
jns
sbb
fnstsw
outsb
sub
arpl
inc
ljmp
nop
outsl
push
cs
sahf
xchg
pop
loopne
sbb
push
out
inc
inc
add
sub
xorl
in
mov
mov
adcb
xor
sbb
adc
xchg
fcmovnb
add
aas
sbb
dec
dec
jp
insl
push
jecxz
sbb
mov
mov
imul
in
add
pop
popa
jge
xchg
lods
ss
hlt
and
shrb
fdivl
mov
push
movsb
sub
or
shlb
iret
insl
xlat
xchg
test
pop
lods
fdivs
in
mov
adc
icebp
xor
or
xlat
mov
and
push
and
pushf
mov
lods
outsl
outsl
jg
xchg
icebp
adc
loopne
test
icebp
fnstcw
xchg
xor
cmp
insl
jnp
jne
or
push
xor
imul
mov
bound
inc
and
bts
aas
jo
dec
loopne
push
sub
jno
or
lea
dec
jae
and
lret
pusha
fcomps
stos
add
sub
ja
xor
test
leave
test
jg
pop
repz
add
dec
mov
popf
or
test
sub
sti
sbbl
hlt
xorb
inc
iret
dec
inc
push
jl
push
shrb
mov
fsubrs
lahf
adc
pop
pop
lret
push
inc
fiadds
jmp
ja
push
mov
and
sbb
xor
sub
aam
push
xchg
mov
ss
movsl
sbb
inc
ficoms
rcll
mov
mov
std
sub
loopne
paddw
xlat
sahf
mov
mov
sub
add
xchg
adc
xor
fbld
mov
mov
sub
sbb
dec
nop
jle
xchg
pop
cld
imul
jge
es
test
imul
imul
pop
adc
jbe
mov
div
pop
mov
sbb
and
push
jle
icebp
xor
pusha
jo
adc
scas
aaa
mov
es
adc
fs
fsubp
lea
xchg
or
enter
add
push
add
daa
mov
stc
decl
popa
xor
test
into
pop
cli
sti
aaa
inc
ret
inc
ss
mov
bound
shlb
mov
into
es
or
rol
movsl
add
mov
sub
hlt
aas
imull
das
test
push
movsl
lock
dec
jne
inc
fists
cwtl
adc
push
inc
cmc
sbb
push
xor
shr
pop
adcl
add
arpl
push
mov
adc
sti
lds
or
js
dec
or
shl
pop
mov
push
shl
mov
or
enter
push
sbb
repnz
sbb
jne
test
push
cmp
inc
aas
or
add
pop
mov
enter
inc
decb
jecxz
pop
mov
dec
mov
jg
and
int3
pop
jno
mov
push
lea
sbb
mov
lds
jg
stos
xchg
inc
mov
es
insb
rcr
xor
mov
outsl
insb
dec
jecxz
jmp
stos
shlb
sbb
mov
or
jmp
in
jge
cmp
in
jp
imul
clc
mov
sub
xchg
jae
sub
insl
mov
or
icebp
pop
mov
mov
adc
pop
ret
jb
add
out
clc
movb
mov
and
sbb
pop
adc
fldt
daa
incb
addr16
movsl
jg
bound
lret
movsb
adc
lods
icebp
mov
es
and
adc
mov
std
pop
fidivl
dec
icebp
jne
cld
sub
inc
mov
or
repz
sub
lret
call
push
imulb
cmp
daa
or
sub
popa
mov
ret
add
push
mov
adc
fbstp
testb
inc
inc
stc
xchg
loope
jo
rclb
into
imul
push
mov
in
ret
push
stos
push
and
cltd
mov
and
mov
mov
ja
mov
stos
mov
add
adc
insb
mov
adc
cmp
cmp
jge
mov
pop
dec
test
mov
adc
or
sarb
add
push
aas
lret
das
jb
pop
push
xchg
xchg
scas
push
daa
add
repz
fwait
cs
outsl
andl
shrl
push
es
rolb
inc
dec
mov
jo
or
ret
lahf
inc
into
lret
pop
push
hlt
mov
lret
xchg
inc
int3
aam
loope
pop
sbb
lret
adc
fisubs
and
inc
xchg
push
jp
inc
lret
fstp
lea
outsb
mov
adc
inc
mov
xchg
lret
adc
icebp
mov
pop
push
add
cld
mov
inc
xorb
xor
out
and
lock
cmc
xor
lds
cwtl
push
mov
fisttpl
push
xchg
xchg
js
pop
xchg
mov
rol
mov
adc
pushf
lret
ja
dec
and
mov
mov
xor
cs
push
andl
inc
jno
mov
adc
pop
mov
xor
js
push
inc
xorl
lds
inc
push
lods
add
idivb
mov
pop
fdivp
xchg
sbb
ret
imul
ljmp
ret
arpl
popa
inc
adc
push
outsl
scas
xchg
xor
xor
push
jbe
fistpll
sbb
cli
roll
jmp
add
or
pop
in
imul
cmpsb
jmp
jbe
gs
sub
mov
je
xchg
mov
cli
or
ds
into
cmp
cwtl
add
sub
push
lods
inc
add
subb
out
es
push
shll
pop
and
and
hlt
cs
arpl
test
dec
and
shlb
mov
pusha
dec
mov
or
outsl
outsl
outsl
xor
rorb
inc
movzbl
or
mov
jg
inc
insl
add
loope
mov
or
enter
inc
movsb
int
call
int3
cli
inc
dec
jl
aad
mov
cli
lods
pop
cmp
mov
pop
flds
fidivrs
jbe
dec
stc
dec
push
movb
js
xor
mov
test
mov
xchg
dec
outsl
sbb
add
jo
clc
add
clc
mov
test
mov
or
jl
pusha
lahf
inc
cmp
rorl
bound
nop
adc
push
shll
and
mov
lahf
ja
sbb
test
mov
je
insb
sbb
add
mov
add
mov
jno
cmp
sbb
bound
cmc
fldl
and
cmp
cmp
dec
cltd
ja
inc
mov
fnstcw
cs
lea
mov
dec
add
aas
jge
or
ret
aaa
xchg
push
lret
mov
addl
test
scas
mov
mov
daa
sbb
cli
addr16
pushf
mov
push
pusha
test
jmp
mov
jo
leave
fidivrl
jo
les
inc
adc
repz
push
cmp
sub
mov
push
sbb
rolb
ds
rcrl
adc
mov
jnp
icebp
push
into
inc
out
xchg
int
ja
add
mov
ret
push
jge
sub
movsl
dec
sbbl
ljmp
das
mov
add
loop
stc
adc
fidivs
or
lods
dec
fwait
ljmp
cs
inc
push
outsl
lcall
dec
stos
inc
push
aad
rolb
sbb
push
pop
sti
pop
and
pop
cmpl
mov
inc
inc
scas
pop
sahf
out
dec
imul
cld
arpl
mov
xor
xlat
push
pop
sub
movsl
xchg
repnz
push
inc
mov
sub
sbb
sub
in
insb
or
imul
and
push
xchg
sub
jnp
stos
xchg
loop
add
outsb
sub
or
inc
mov
dec
mov
mov
cmpsb
insl
xchg
int
push
cmp
sub
jbe
add
push
lock
pop
mov
push
push
jne
cld
xor
sbb
add
jns
mov
adc
fisttpl
and
shlb
pop
nop
out
push
aas
mov
inc
fdivl
pop
adc
or
xchg
pushf
stos
jno
data16
inc
ret
dec
jnp
mov
jb
outsl
es
add
pop
cmp
mov
shrl
outsb
imul
mov
popa
ret
mov
mov
into
mov
sbb
icebp
and
mov
jo
xchg
dec
push
or
xchg
mov
lods
add
stc
pop
jle
fsubl
adc
mov
cmp
bnd
stos
test
pop
jmp
cmpsb
iret
int3
and
insb
push
es
pop
js
add
das
fidivrs
jge
gs
in
push
je
mov
insl
inc
iret
iret
xchg
xor
in
or
xorl
shrl
push
or
mov
cs
das
sbb
xchg
pop
fmuls
dec
in
fistps
jno
xchg
mov
test
pop
popa
pop
clc
lea
adc
lcall
adc
popa
jecxz
or
movsl
jo
push
mov
testb
add
repz
clc
mov
les
and
or
mov
mov
test
inc
rcrl
aaa
aad
test
inc
loopne
fildll
cltd
pushf
mov
adc
cmp
rorb
loope
not
xchg
aas
mov
repz
repz
add
cmp
add
outsl
jg
and
adc
ljmp
shlb
cli
xchg
mov
loope
xchg
mov
mov
jnp
inc
adc
mov
rolb
pop
outsb
mov
clc
push
and
cwtl
out
in
sub
enter
ljmp
xor
inc
fdivl
lcall
cld
hlt
iret
push
test
push
xchg
test
and
push
out
mov
dec
fidivrl
call
mov
jp
mov
rorb
ja
cmp
sarb
mov
test
cmpsl
dec
inc
rclb
leave
dec
daa
push
stc
imul
cs
jge
incl
push
push
xchg
sar
jp
or
test
std
inc
data16
add
icebp
mov
push
shll
cmp
mov
mov
out
inc
sub
mov
pusha
push
dec
inc
jg
fisttpl
dec
dec
outsb
sub
les
add
add
loopne
jns
nop
clc
inc
imul
cltd
adc
dec
add
mov
pop
fs
inc
ret
js
add
add
cld
cltd
or
mov
xchg
gs
push
in
push
nop
push
add
mov
mov
mov
cmp
pop
push
pop
adc
cmc
das
or
jl
gs
js
push
adc
sbb
fcompl
xor
or
mov
shl
cld
cmp
je
adc
add
invd
adc
or
and
outsb
fidivl
mov
mov
stos
push
rorl
mov
mov
outsl
mov
sbb
xor
popa
lcall
sub
test
jb
cli
and
ret
cmpsl
ret
mov
stc
inc
jae
sub
es
mov
in
icebp
jbe
dec
lods
sahf
inc
inc
sub
push
mov
cmpsl
push
and
sbb
mov
pop
dec
ret
dec
in
sbb
je
sub
mov
jle
lods
addl
loope
lods
xor
add
push
jbe
lods
mov
iret
popf
imul
sbb
cs
fadds
dec
mov
ljmp
sub
fstps
iret
in
mov
negl
dec
mov
or
in
sub
movsb
pop
jnp
ja
rcr
scas
or
push
xchg
mov
or
mov
inc
lea
aas
mov
lret
je
fildll
in
ja
jo
dec
aas
and
das
pushf
enter
cmp
repz
pop
xchg
sub
pop
scas
arpl
mov
adc
mov
insl
mov
mov
sub
sti
bound
jae
xchg
cld
pop
pop
cmp
mov
or
mov
sbb
jecxz
dec
insb
je
push
add
jb
test
or
subl
fwait
jge
adc
mov
or
es
out
pop
jg
test
addb
andl
xchg
jno
jmp
int
andl
ror
pop
imull
push
mov
mov
mov
sbb
sti
popf
sub
add
inc
imul
stc
sbbb
lods
in
repnz
xlat
mov
popf
xor
cltd
inc
incl
outsb
test
sbb
dec
add
sbbb
dec
sbbl
mov
xchg
out
sub
dec
cli
lret
test
sahf
in
xchg
mov
jno
mov
imul
negl
stc
sbb
mov
mov
push
and
pop
cld
pop
aam
mov
cld
lcall
xor
mov
mov
jb
and
fistpll
inc
or
fisttps
mov
sahf
aas
xchg
xchg
or
lea
cmp
xchg
aaa
add
dec
dec
mov
xor
orl
out
pop
int3
negb
std
pushl
jbe
push
aas
push
xor
or
rcrb
aam
shlb
les
sub
sub
arpl
outsl
int
loope
ss
fisubrl
dec
add
sub
or
in
fists
aaa
add
xchg
in
rclb
inc
xlat
test
mov
repz
pop
stos
sbb
dec
jl
out
mov
lods
pop
enter
cld
rolb
mov
sub
data16
mov
sbb
push
daa
jbe
rcr
insl
lock
mov
pop
mov
mov
clc
mov
inc
xchg
lea
sub
std
jg
imulb
mov
aaa
mov
adc
push
mov
negb
or
mov
sub
std
inc
sti
popa
mov
mov
iret
loope
cmp
addb
push
sub
mov
adc
testl
leave
sti
xorb
rclb
sub
lds
and
cmpb
lods
sub
outsb
mov
and
stc
lcall
das
jmp
in
mov
push
pop
push
mov
cmp
std
fisttps
aad
lods
xchg
add
sbb
lret
das
sbb
or
mov
test
pop
ds
fildl
outsb
add
mov
pop
test
std
fisttpl
or
mov
or
imul
push
lcall
or
inc
jle
or
rclb
test
test
pop
adc
insb
xor
push
lret
ja
insb
popa
sbb
adc
jmp
mov
cld
dec
dec
cmp
jb
mov
fs
hlt
push
bound
cmpsl
mov
daa
lahf
push
pop
and
scas
xchg
sbb
inc
arpl
sbb
push
lret
out
adc
push
cltd
adc
xor
iret
je
gs
lods
and
in
and
dec
inc
lret
lahf
fistpll
or
loopne
aaa
fwait
push
sbb
dec
outsb
nop
mov
pusha
imul
testl
outsb
mov
jb
nop
rclb
into
clc
into
or
xor
push
pop
clc
sbb
cmpsl
xchg
out
cmpsl
cmp
xchg
mov
fs
inc
mov
imul
xor
add
inc
nop
fstpl
mov
rclb
movsl
jg
dec
nop
cmp
mov
fwait
movsb
andb
xor
push
push
ds
insb
cmp
mov
loopne
lret
mov
je
pop
adc
hlt
cmp
pushaw
fcmovb
add
and
clc
add
popl
cli
add
daa
jbe
sub
movsl
sti
add
jo
lret
and
mov
outsl
ret
pop
mov
inc
les
mov
nop
jo
add
cmp
imul
pop
cmc
leave
in
int3
mov
lds
dec
shlb
rolb
jge
mov
enter
pop
ljmp
jno
push
cmc
rcrb
or
inc
jmp
or
fsubs
lock
add
xchg
call
xor
and
and
sarb
outsb
ljmp
les
mov
rcrl
mov
or
mov
in
fisubrs
das
and
fwait
add
gs
in
sbb
xor
add
in
mov
cmpl
push
mov
mov
fisttpl
js
insl
xchg
xor
into
mov
roll
aaa
ss
mov
ja
jp
into
fsts
lods
fistpl
mov
xchg
jmp
and
push
sahf
mov
jmp
shll
out
sub
jno
and
and
in
cmpsl
push
push
add
stos
push
pop
stos
mov
fildl
mov
xor
pop
repnz
pop
sbb
sub
lahf
inc
xor
lock
popf
inc
popl
pop
cmpsb
std
test
cwtl
sar
jmp
adc
in
and
adc
imul
iret
shr
subl
loope
popl
call
jns
push
mov
scas
or
das
xchg
int
jne
xchg
mov
mov
jmp
push
insl
pop
jle
mov
loop
sti
sbb
rclb
stos
lods
pop
jg
dec
pop
xlat
fisttps
addl
aad
insb
xchg
fwait
or
stc
sbb
test
mov
mov
cmp
popa
pushf
pusha
imul
jecxz
fstps
test
jmp
xchg
sub
mov
test
stos
push
mov
test
fwait
jbe
sub
movsb
adc
mov
imul
out
stos
pop
test
rcr
ja
out
sub
adc
jns
insb
fldt
ret
xchg
or
es
cmovnp
lock
rol
inc
lret
fwait
jp
adc
loope
xor
sbb
cmpb
and
push
outsl
xchg
stos
outsb
out
mov
stc
push
std
xchg
inc
mov
jl
push
imul
pop
lds
mov
jp
mov
dec
inc
daa
clc
insl
cmpsl
test
mov
sarb
xchg
add
es
cli
inc
rorl
cltd
xor
cli
dec
lahf
cld
add
adcb
push
stc
lahf
cs
mov
gs
negl
sub
add
or
inc
iret
fisttpll
lea
sbbb
sub
push
push
aad
lds
addr16
xchg
test
pop
shrl
mov
mov
iret
fisubrs
lret
fstl
pop
insb
jno
pop
pushf
sti
mov
das
cs
mov
or
fs
pop
jb
jge
testb
inc
into
aam
mov
andl
mov
pop
xchg
xor
xchg
inc
test
push
mov
ficoms
sbbl
mov
sbb
aam
jns
jp
sub
ficompl
dec
lahf
jnp
push
filds
push
mov
arpl
or
push
lret
fwait
loopne
pop
sbb
aas
ss
jge
mov
pop
and
add
add
dec
mov
sti
in
sarb
pop
mov
movsl
or
xchg
cmp
sbb
stc
xchg
xchg
sti
mov
jnp
adc
iret
xor
jmp
loopne
cli
xchg
push
in
nop
lds
fwait
or
jo
mov
dec
out
push
test
and
lea
jle
push
lahf
inc
mov
cmpsb
push
dec
xchg
enter
mov
mov
cmp
ss
out
xchg
mov
pop
xchg
xlat
shrl
subb
das
pop
decb
xchg
or
jg
add
jecxz
ss
dec
push
mov
sbb
push
mov
fnstsw
push
sub
fbld
dec
mov
lret
xchg
lods
movsb
jne
cmpb
insb
mov
mov
outsl
das
cmp
push
rorl
jecxz
loope
test
xchg
cs
into
icebp
xor
jo
dec
push
aad
hlt
mov
rorb
pop
cli
mov
pop
hlt
jns
mov
les
pop
xorl
inc
xchg
mov
add
arpl
mov
lahf
movsb
jmp
cmpsb
loop
cmp
mov
jb
or
add
add
aam
pusha
sub
sbb
ficomps
dec
aad
sub
aaa
aam
loop
add
mov
lods
test
mov
cmp
movsl
push
dec
mov
insl
or
xchg
cs
xchg
push
mov
rorl
lea
dec
mov
push
cmp
cs
pop
mov
xor
shll
fucomi
stos
out
jg
inc
xchg
jne
out
jbe
les
sarl
sar
stc
dec
out
mov
insl
ret
sbb
movzwl
outsb
mov
mov
lret
xchg
pop
cmp
xor
stos
pusha
or
lret
mov
aas
fsub
loope
ja
hlt
iret
addr16
mov
call
fs
xchg
mov
add
movsl
test
icebp
jg
fdivrs
mov
adcb
pushf
or
inc
sbb
mov
add
loop
mov
or
mov
rep
dec
ljmp
mov
cs
sti
fwait
xor
pop
xlat
iret
repnz
cs
mov
fs
jo
nop
js
mov
cmp
push
aaa
dec
inc
sub
cmc
addr16
mov
movd
aaa
outsb
insb
jge
push
pop
sub
call
or
dec
test
fs
orb
loopne
xchg
cmpsb
or
mov
dec
dec
adc
dec
lds
jg
and
out
lea
icebp
imul
les
in
sub
ds
fdivrs
mov
mov
ret
icebp
dec
xor
cmp
imulb
mov
xchg
jge
adc
inc
mov
mov
rclb
cmp
pop
nop
pusha
mov
pop
test
xor
cmp
inc
stos
push
dec
adc
clc
inc
imul
fwait
inc
push
das
inc
inc
add
dec
cmc
jbe
mov
xchg
es
and
mov
jnp
sbb
fistl
dec
lea
jmp
inc
jb
add
shrl
dec
test
fwait
jp
lods
ja
icebp
cs
ret
sbb
loope
loop
jmp
sub
divl
mov
hlt
xchg
fistpl
fdivrs
aaa
xchg
in
inc
cmpsl
jmp
insl
mov
inc
mov
roll
fnstsw
add
daa
xor
popa
xchg
push
pop
inc
or
in
rcrl
xchg
jbe
pusha
test
faddl
pop
jp
mov
not
jmp
mulb
sbb
out
sbb
ret
lds
sub
lock
outsl
or
fisubrl
data16
movsl
push
pop
mov
push
push
cmp
and
imul
adc
push
mov
inc
push
lret
mov
or
xchg
mov
test
mov
jnp
in
sub
and
in
in
loop
jecxz
lahf
lods
jmp
jnp
sub
or
pop
xchg
cmpsb
ss
mov
cmp
fcom
ja
or
xor
orl
mov
sbb
jl
mov
mov
pop
gs
paddusw
push
cmp
pop
lock
in
fistpl
xchg
pop
or
js
cmp
sub
lods
mov
jecxz
or
jne
in
adc
loopne
and
sub
fisubrl
mov
addr16
orb
lds
jnp
fidivl
lahf
adc
fst
push
jl
dec
dec
out
xor
sar
loope
mov
mov
xor
push
dec
lcall
mov
pop
push
aad
jbe
enter
ret
push
data16
mov
rcl
hlt
jno
add
push
pop
leave
out
cmp
mov
and
cmp
and
mov
sbb
adc
ds
push
inc
mov
sbb
dec
or
sub
cmp
sbb
sti
mov
mov
sbb
mov
and
adc
sti
in
jnp
fs
or
sbb
imul
xor
mov
inc
jl
jp
scas
or
insb
les
enter
fwait
pushf
jnp
mov
cmp
add
test
cltd
pop
sub
lahf
push
push
jge
ds
stos
adc
imul
inc
or
sbb
test
cmp
mov
jp
adc
fistpl
pusha
jno
filds
imul
adc
lahf
xchg
and
in
outsl
pusha
mov
addb
mov
xchg
ds
mov
js
jmp
mov
enter
inc
movsb
mov
xchg
jp
pop
js
sbb
adcb
or
pop
stos
test
xchg
or
dec
xchg
cmp
pop
xlat
ljmp
cmp
imul
popa
lretw
or
jno
or
int3
inc
add
or
mov
jno
imulb
push
or
subb
mov
lahf
adc
notl
movsb
xor
je
and
dec
xor
xchg
mov
ret
aaa
dec
test
pop
test
fcmovnb
popa
int3
and
sub
cli
pop
mov
ds
popf
outsb
sbb
inc
jns
addr16
sbb
test
lods
jmp
xchg
mov
scas
push
loop
rorl
lods
fwait
mov
or
mov
incl
dec
cmp
dec
push
pop
sub
push
and
fcmovnb
call
mov
aas
std
mov
outsl
cmpl
adc
cltd
ficompl
aas
inc
inc
rcll
cmp
loope
js
xchg
push
cmc
cmp
inc
or
mov
dec
fsubr
cmp
cmp
js
clc
inc
mov
lret
aam
adcb
mov
dec
sub
push
aaa
je
adc
inc
inc
mov
jno
fwait
push
adc
roll
aaa
outsb
mov
jmp
mov
test
test
jo
push
sbb
xchg
and
pop
mov
aas
push
flds
cmp
push
mov
imulb
dec
fcom
push
popa
jne
jno
mov
or
mov
shl
repnz
negl
adc
mov
or
xor
std
in
mov
xor
and
jmp
and
sbb
xchg
pop
xor
cs
xor
pop
push
mov
leave
and
testl
flds
pop
gs
repz
inc
std
test
hlt
loope
and
lcall
or
and
ljmp
jge,pn
jne
outsl
aaa
push
add
subl
or
mov
jge
xchg
adc
sub
dec
add
cmp
xchg
test
sub
push
cmovle
mov
sbb
jle
sub
rorl
mov
sub
movsl
nop
cmc
inc
leave
xchg
out
shl
mov
dec
rclb
out
or
lahf
lock
add
xchg
movsb
lea
fbld
adc
mov
cld
lcall
sbb
aad
jecxz
adc
jae
mov
mov
and
out
insb
lds
xchg
jmp
pop
and
or
jo
aam
mov
cmp
inc
fdivrl
inc
or
test
mov
cmpsl
and
mov
insb
dec
call
clc
fdivl
outsb
xchg
adc
dec
adc
inc
push
mov
lods
cli
aaa
mov
iret
testb
or
outsb
aam
mov
pop
inc
mov
jg
fists
mov
push
sti
mov
inc
dec
pop
cs
pusha
jp
sub
popa
in
inc
push
sti
movsl
cmp
sarl
test
add
mov
bound
dec
insl
xor
mov
ret
lea
dec
inc
daa
pop
jle
push
pop
fsubp
rclb
movsb
sahf
or
add
or
xchg
gs
dec
or
or
jmp
testl
add
icebp
mov
dec
popa
lahf
in
cli
mov
ficoml
cs
inc
repz
js
mov
frstor
ret
fisttpll
out
mov
sbb
ds
lahf
push
cmp
add
aam
loopne
inc
repnz
insl
fs
ljmp
loope
insb
and
mov
push
pop
lret
xor
xor
mov
mov
or
cmpl
push
dec
pusha
bound
jb
mov
dec
inc
pop
icebp
dec
inc
enter
add
iret
outsb
jne,pn
pop
push
mov
push
pop
add
jmp
cmpsb
cmp
lock
subb
frstor
not
mov
inc
add
sbb
out
mov
mov
sub
stos
sub
ret
xchg
dec
xorb
insl
jge
adc
mov
pop
out
xchg
dec
loope
add
insb
jb
pop
imul
rcr
push
mov
add
ret
and
outsl
arpl
aad
push
imul
xor
sbb
nop
shr
xchg
outsb
push
xchg
cs
out
mov
addr16
sbb
adc
cld
test
xlat
cmpsb
dec
adcl
and
fcoml
mov
or
aas
cmc
add
inc
mov
or
lahf
out
setle
inc
mov
sub
jge
xlat
in
inc
xchg
add
loop
or
jle
mov
movsl
push
arpl
cmp
js
push
outsb
outsl
outsl
cld
mov
std
mov
inc
mov
movb
pushf
lock
insl
and
mov
mov
push
jns
call
lahf
jge
pop
push
pop
pop
xor
push
sub
ret
or
add
xchg
loop
add
sbb
jns
jl
das
pop
sahf
adc
ss
or
xchg
dec
je
adc
cwtl
fstpl
sub
mov
xor
inc
mov
xor
addb
push
jne
addr16
fldcw
sbb
lods
xchg
fxch
cld
mov
fcmovnb
fmuls
mov
lods
dec
dec
and
push
rorb
arpl
ja
push
jge
xchg
xchg
add
cld
mov
out
adc
int
push
or
xlat
or
add
neg
bswap
clc
or
xor
pop
test
imul
cld
sub
mov
pop
or
xchg
cmpl
cmc
mov
push
outsl
or
cmc
insl
jecxz
imul
loopne
and
insl
and
cwtl
jo
pop
jb
lea
mov
daa
xor
nop
in
sub
outsb
mov
call
xor
aaa
push
inc
push
nop
jns
movsl
xchg
push
ds
push
std
xchg
mov
dec
jae
ret
jae
loope
lcall
aas
or
pop
sbb
mov
repnz
cmp
daa
mov
xchg
adc
mov
rolb
aad
hlt
test
loopne
incl
addb
jge
mov
test
loopne
aaa
fld
cld
addr16
or
jle
pop
xor
and
jno
movsl
mov
ret
js
and
cmc
loop
dec
mov
add
notl
test
sarl
cli
call
mov
push
stos
stos
in
jnp
sbb
mov
inc
xchg
pusha
fstp
push
xchg
rclb
cli
call
mov
sub
adc
mov
mov
int
sub
ret
arpl
inc
aaa
insb
add
fstpl
insb
or
test
adcb
lahf
lcall
jp
mov
shr
and
inc
lods
pop
clc
test
jns
xor
aas
loopne
insl
or
arpl
scas
xchg
test
rclb
loope
call
mov
ss
push
xor
inc
mov
sub
jle
mov
mov
lods
cltd
outsb
dec
jmp
add
rorb
fsubs
repz
sbb
or
adc
inc
xchg
add
add
cmpb
xchg
movsl
jae
aas
js
int
pop
loop
test
adc
lahf
mov
fstpt
and
inc
rorl
or
or
mov
inc
mov
jmp
scas
jmp
aam
push
loop
arpl
icebp
mov
adc
cmc
mov
mov
push
pop
and
sbb
aam
xchg
int
jmp
add
cs
add
cli
inc
subb
adc
cmp
scas
int3
inc
mov
bound
and
adc
ja
add
push
pop
mov
mov
subl
or
andb
test
push
or
sti
daa
pop
aaa
mov
pop
pop
cmpb
addb
rorb
push
inc
jle
sbb
mov
and
cli
rorl
arpl
cwtl
sahf
add
adc
jl
cmpsl
in
and
rcl
pop
cmpb
rcr
and
push
fwait
subb
mov
dec
outsl
pop
xchg
out
mov
mov
shlb
mov
in
jmp
xlat
and
push
popf
jno
jmp
jns
mov
aas
cmpsb
call
jl
xcrypt-cbc
cmpsl
aad
sub
cwtl
xchg
jbe
add
gs
add
ret
or
popa
add
add
jle
sbb
lods
dec
fcmovnu
loopne
in
rorb
imul
addr16
mov
clc
inc
pop
call
xchg
loop
cmc
push
mov
cld
das
mov
jns
stos
adc
testb
push
jecxz
or
pop
movsl
inc
fmull
subb
add
sbb
fcmovbe
cmp
fisttpl
inc
ss
push
into
pop
jp
xchg
sub
fildll
pop
nop
xchg
fcmovne
out
or
push
std
push
nop
add
loope
and
imul
test
mov
add
or
fistpll
or
call
dec
xchg
mov
outsb
mov
fstl
sbb
or
lret
add
loopne
inc
aad
xchg
rol
push
jo
jno
imul
inc
scas
dec
lahf
push
xor
ja
cmp
mov
cmpsb
jne
xchg
ja
sub
inc
bound
lods
mov
daa
jo
add
shrl
mov
mov
mov
stos
push
aaa
aas
dec
push
jne
hlt
pop
mov
sbb
insl
mov
mov
fstpt
cwtl
addb
cmp
push
or
int
daa
adc
aad
clc
xchg
adc
adc
pushf
mov
call
lea
pop
mov
cmp
inc
pop
jmp
notb
cltd
test
fwait
cmp
and
add
repnz
add
test
jecxz
hlt
add
dec
imul
sbb
or
adc
xlat
pop
or
sbb
fadd
test
mov
mov
gs
push
cmp
shll
rorl
mov
rcll
aad
inc
ret
and
mov
xchg
or
add
pushl
adc
push
or
mov
lahf
xchg
mov
imul
xor
arpl
pop
aaa
repnz
or
mov
in
in
dec
orb
clc
sub
mov
mov
lcall
cmp
push
inc
adc
mov
sub
loopne
inc
pop
add
fisttpl
mov
sbb
dec
popf
adc
shrl
into
in
or
mov
pop
test
outsl
or
cld
mov
xchg
test
adc
rcl
pop
dec
cmc
mov
cmp
sbb
adc
sub
mov
insl
jnp
movsbl
xchg
sbb
push
mov
push
cmp
shlb
push
cs
in
fisttpl
arpl
into
push
out
xor
aaa
xchg
sub
jae
cmp
dec
outsl
aaa
inc
insb
sbb
xchg
cltd
jl
mov
ds
push
div
sbb
cmp
push
test
imul
sub
ret
mov
xorb
pop
popa
rcl
das
add
cmpsb
or
icebp
ljmp
bound
pusha
in
fbstp
jle
nop
mov
xor
vcmpps
sbb
jg
fnstsw
or
push
cmpsl
jmp
scas
fistps
icebp
mov
mov
jg
in
mov
push
adc
pop
js
pop
leave
test
pop
inc
pop
mov
xchg
lret
in
push
jge
repz
sbbl
xchg
std
cmpsb
rcl
cli
pop
pushf
aaa
mov
adc
pop
lahf
icebp
int
pop
dec
aad
mov
andl
movsb
nop
out
sti
mov
jp
in
xor
and
movsl
test
dec
stos
repnz
outsl
fisubrl
shrl
xchg
sbb
fbld
inc
imul
xlat
mov
add
fistpl
andl
insb
dec
movsl
and
inc
sub
div
and
fistps
or
int
push
dec
enter
mov
jmp
pop
dec
push
pop
sbb
movsl
in
aaa
inc
xchg
movsl
daa
jns
pop
dec
jo
pop
push
sahf
faddl
jecxz
dec
cli
iret
push
fdivrs
mov
inc
loop
sub
das
in
int
mull
int3
scas
push
jae
mov
inc
push
push
jmp
roll
cmp
and
and
testb
sbb
aam
mov
es
xchg
inc
sarb
rolb
lea
dec
add
pushaw
shrl
and
int3
iret
xchg
rcrb
in
and
push
cmp
mov
add
aas
jae
cmp
daa
adc
jmp
outsl
mov
ja
push
xor
sbb
mov
cmp
orb
push
cmpb
ret
xchg
mov
inc
mov
loope
sub
mov
or
rcrl
xor
cmp
subl
out
mov
out
subb
movsl
mov
out
pop
adc
aaa
jecxz
xchg
pop
lock
test
sbb
imul
fisubrs
lock
inc
insb
cmp
pop
add
mov
xchg
xchg
les
daa
cli
jbe
shl
cmp
sub
aaa
sarb
insb
dec
daa
test
shr
mov
pop
or
fcoms
imul
xchg
xor
cmp
cs
inc
xor
inc
test
pop
sub
jl
loopne
adc
inc
hlt
push
stc
das
les
sub
shrb
sbb
je
and
fsubs
jo
loope
mov
cld
xor
mov
fwait
shr
sub
sub
jmp
jmp
sbb
xor
mov
push
enter
push
lods
jg
pop
sub
rorb
adc
pop
xlat
fdivl
test
jnp
mov
push
push
add
dec
fs
xorl
jl
push
add
pop
or
test
call
mov
faddl
les
xchg
jl
push
sub
push
mov
shr
fimuls
and
ss
sar
addr16
fistpl
mov
sub
mov
push
cmp
or
in
inc
mov
push
jne
icebp
and
xchg
ljmp
pop
fdivrl
jecxz
pop
out
loop
mov
mov
pushl
imul
lock
jnp
and
and
or
adc
push
xor
fwait
xchg
outsl
xchg
dec
sbb
xchg
mov
cmp
mov
je
and
inc
add
sbb
mov
in
nop
adc
leave
mov
lea
lock
inc
mov
cmp
in
add
shlb
add
lahf
imul
sbb
insl
dec
arpl
sbb
cmp
or
push
sahf
push
jge
test
aad
lcall
test
mov
mov
lods
test
pop
sub
les
dec
dec
push
inc
les
lea
mov
fidivl
in
mov
jne
insl
ret
arpl
xor
inc
outsl
lock
add
and
mov
adc
in
loopne
test
add
mov
lret
or
pop
mov
mov
jno,pn
push
push
rolb
dec
sub
xor
inc
mov
daa
xor
inc
mov
sub
lcall
sbbb
in
test
lods
push
mov
mov
xchg
adc
mov
jns
push
sub
or
fldt
iret
cmp
and
test
inc
mov
in
shlb
in
aad
ret
inc
mov
sbb
je
es
fld
pop
dec
scas
pop
imul
add
xor
jns
jb
out
or
pop
sub
cmp
js
sub
leave
pop
pop
push
adc
sub
jmp
test
fmuls
stos
mov
mov
out
popa
shl
testb
leave
cld
fistl
test
pop
mov
aad
daa
add
outsb
or
dec
adc
dec
jmp
and
xchg
xlat
dec
cmp
push
dec
and
jge
lods
test
mov
xlat
sbb
mov
pop
mov
xor
imul
rorl
rorl
in
outsl
outsl
fnsave
pop
adc
pop
fcom
sbb
sub
mov
or
pop
pop
insb
mov
jns
push
sbb
jnp
add
ret
mov
aam
cltd
sbb
lods
add
ss
jo
add
xchg
xchg
test
fistps
cmc
adc
loopne
mov
test
insl
data16
shrb
nop
sub
outsl
cld
test
or
stos
inc
jecxz
sbb
mov
jg,pn
add
rclb
je
ficompl
mov
pop
jecxz
and
inc
jno
fstl
flds
mov
inc
fidivrs
dec
fadd
adc
inc
cltd
es
xchg
mov
sbb
mov
mov
shrb
jbe
fwait
orb
lsl
pop
jl
mov
in
lea
mov
negb
aad
xorb
sbb
rcr
push
adc
mov
sti
xchg
cmp
pop
mov
out
movsl
ficoms
xchg
ja
sub
mov
push
lret
shlb
and
mov
adc
mov
inc
dec
pop
lods
lods
in
hlt
push
int
add
jae
movsl
mov
push
sub
lcall
lret
clc
mov
jo
xorb
cs
cmp
cmp
fstpl
cmc
imul
mov
movsb
lahf
popa
rol
clc
dec
jmp
add
popf
loopne
cltd
and
cmpb
pop
mov
in
jnp
jmp
or
fcmovnb
dec
sub
mov
jl
insb
mov
inc
lea
hlt
test
or
and
pusha
or
test
jo
cli
xcrypt-cbc
cmpsl
shll
in
mov
xchg
inc
cmp
outsl
mov
mov
cmp
ja
mov
or
fwait
es
mov
sub
and
mov
outsl
test
dec
test
add
fmuls
xor
daa
sub
lock
sbb
lcall
inc
mov
mov
fcmovnbe
mov
mov
mov
xchg
popa
or
and
or
push
stos
sub
ficoml
ss
arpl
pop
ja
mov
inc
cmp
std
push
and
jge
insb
mov
push
repz
jp
inc
mov
in
stos
xor
fistpll
loope
and
popf
ss
repnz
mov
inc
add
test
cmp
es
lods
mov
and
nop
mov
mov
lahf
cld
dec
mov
sbb
mov
fsubs
cmp
shrb
dec
fwait
dec
push
xor
test
aam
or
pop
mov
pop
inc
push
test
sbb
ret
mov
fidivs
nop
stc
pop
stos
jecxz
cmp
or
clc
popa
sarl
xchg
mov
mov
dec
test
pop
sahf
aad
orb
xor
aas
ja
adc
add
mov
mov
add
ss
pop
mov
lock
pop
jecxz
hlt
dec
xchg
mov
pop
mov
push
mov
insl
mov
repnz
or
mov
add
mov
andb
les
fs
xchg
sub
test
sbb
call
mov
loopne
mov
in
dec
sub
dec
adc
outsl
insb
roll
pop
push
lahf
mov
in
mov
mov
mov
add
cmp
add
push
sub
dec
sbb
dec
nop
icebp
inc
or
in
sbb
pop
jmp
sub
aam
dec
je
mov
mov
fidivs
xor
les
out
cmpsb
sub
cmovb
xchg
shlb
addb
xor
movsb
cmc
movsb
jl
fwait
shrb
call
aaa
cs
fbstp
xor
pop
shrl
dec
mov
pushf
jne
pop
or
loope
xchg
mov
mov
adc
xchg
into
sub
push
lods
push
mov
dec
and
andl
pop
push
push
push
jns
jecxz
sub
inc
add
mov
aaa
sbb
je
lea
test
mov
stos
push
movsl
or
nop
mov
jl
call
insb
pop
stc
adcl
pop
add
ror
in
dec
hlt
fs
rep
jmp
adc
ret
nop
test
test
adc
rclb
mov
add
in
in
in
add
xchg
cmpb
mov
xor
aaa
mov
data16
gs
mov
sbb
cmp
cmp
or
dec
xor
rorl
sbb
movsl
out
insb
mov
cltd
sub
jecxz
int3
lock
aaa
xor
jle
pop
repz
bound
mov
movsl
adc
inc
mov
dec
and
lahf
pop
dec
jno
scas
popa
mov
add
mov
lcall
mov
shrl
fistpl
inc
pop
push
mov
sbb
adc
lds
add
fildl
fwait
sbb
popa
les
cltd
mov
and
enter
mov
or
roll
or
jge
enter
pop
push
xor
push
jo
idiv
int
pop
mov
out
mov
fadds
or
xorb
xor
mov
xchg
push
addl
adc
cld
jg
or
xchg
shrb
cld
aas
mov
jp
mulb
aas
xor
rolb
push
outsb
mov
mov
and
cwtl
inc
or
imul
shll
pop
adc
int3
cmp
lahf
decb
fldl
test
push
daa
repnz
es
cwtl
mov
stos
addr16
bound
or
push
mov
aam
bound
mov
adc
mov
xor
add
add
jbe
cmp
sbb
push
push
je
xor
xchg
mov
fbstp
mov
fwait
push
sub
lods
insl
inc
loop
jge
mov
loope
and
cld
mov
outsb
push
fsubrl
jge
aad
and
or
js
idivb
lea
or
pop
inc
mov
mov
filds
jae
cld
push
push
inc
push
loop
mov
xchg
cwtl
loope
cmp
push
inc
roll
lds
push
mov
ffree
pop
mov
sbb
movsb
jle
das
aaa
shl
loopne
and
je
pop
fcmovbe
ja
jno
pop
lods
test
inc
push
or
jmp
mov
js
jmp
mov
and
adc
cmpsb
aaa
push
add
push
into
xor
adc
loope
and
insl
imul
add
cmpsl
cs
jge
or
inc
ljmp
mov
add
aaa
mov
outsl
xor
or
mov
jo
aaa
cmp
fdivrl
jae
insl
push
adc
clc
test
dec
into
xor
fcompl
das
shlb
inc
outsb
stc
insb
fstp
call
popa
pop
es
frstor
mov
mov
test
or
outsl
insb
hlt
xor
mov
movb
ds
inc
xchg
pop
insb
fists
mov
xor
movsb
pop
test
outsb
andb
mov
insb
mov
cmp
xchg
jnp
lock
shll
inc
sub
arpl
outsl
std
adc
lods
popa
sahf
mov
shll
push
jg
daa
loop
jge
scas
cmp
pop
cs
mov
adc
add
cmp
mov
adc
pop
lock
pop
cli
and
mov
ja
add
out
sti
addb
mov
mov
pop
or
or
das
sub
mov
pop
repz
xchg
in
xlat
and
fs
call
fstps
mov
stc
dec
cmp
xchg
pop
js
movsb
inc
ret
clc
mov
pop
bound
jl
lods
mov
shl
sbb
das
add
xchg
sub
push
push
lock
aam
xlat
pop
pop
stos
mov
and
aas
je
mov
div
jmp
sbb
add
fistpll
cmp
xchg
adc
je
shrb
jmp
mov
mov
mov
push
inc
adc
add
arpl
sub
jg
inc
gs
adc
xchg
call
mov
iret
dec
push
in
fsubrl
jno
insb
or
pop
adc
ljmp
sbb
aad
push
rolb
shlb
mov
jne
nop
cld
jmp
mov
pop
sub
popa
sti
push
add
outsb
mov
pop
pop
jp
sub
and
mov
inc
pop
loop
movsb
cld
xor
stos
and
lods
sbb
cmpb
sub
mov
sbb
movsb
outsb
inc
and
and
xor
sbb
fcompl
mov
enter
lcall
imul
mov
pusha
in
lds
lock
xor
jmp
mov
test
lods
mov
or
sbb
fidivl
xor
mov
jno
jl
mov
or
ljmp
loope
mov
ja
inc
orl
adc
push
jmp
jmp
or
les
pop
pop
cmp
popa
mov
idivl
popa
mov
inc
int3
adc
inc
add
xchg
mov
or
add
dec
jo
std
rolb
push
and
sbb
ljmp
clc
test
jnp
adcb
or
sti
movsb
rcll
jge
icebp
pop
or
stos
mov
or
mov
out
mov
add
add
mov
outsb
les
aaa
enter
sbb
sbb
or
push
rorl
dec
add
popa
repnz
sbb
or
mov
inc
pop
or
ret
mov
loop
and
mov
inc
jb
mov
cld
inc
les
icebp
mov
scas
xor
cwtl
loope
pop
push
xor
ds
loope
mov
sbb
out
pop
outsb
pop
push
inc
adc
jg
call
sub
test
sbb
stos
jp
pusha
je
es
icebp
sahf
outsl
cmc
pop
push
daa
push
loope
and
and
popa
insb
insb
icebp
into
cltd
and
js
cmp
jo
sub
sub
es
jne
xchg
stos
imul
arpl
jp
add
mov
aad
ficoms
jg
jl
call
ret
mov
popfw
or
cmp
xchg
sub
aas
inc
popa
test
mov
mov
decb
push
dec
imul
xchg
out
sahf
pushf
sbb
dec
aam
std
movb
add
dec
hlt
sahf
decb
sbb
xor
rcl
jns
sbb
icebp
adc
hlt
test
inc
sub
add
dec
cmpsl
jmp
pop
lahf
or
rol
or
sbb
and
pop
cmp
enter
hlt
mov
inc
orb
scas
int
divb
add
orl
loope
sub
mov
adc
ret
and
adc
jl
mov
dec
icebp
push
js
push
add
imul
adc
jg
cmpsb
cmp
pop
ljmp
cwtl
xor
mov
cmpb
and
lds
cltd
psubusb
add
aaa
mov
cmp
ja
out
rorl
lea
adc
ret
jecxz
xor
test
daa
add
js
push
mov
and
adc
outsb
outsl
mov
sbb
movsb
xchg
arpl
jns
adc
scas
jne
adc
sub
sbb
fwait
lods
and
ds
btc
and
es
mov
sbb
cld
lods
inc
push
cmp
lahf
pop
cwtl
pop
xchg
jmp
fcoms
xchg
pop
jle
pop
ljmp
pop
ds
hlt
shlb
fdivl
insl
push
stos
push
imul
cmp
rclb
sub
shrl
orl
inc
aam
mov
adc
ret
and
push
mov
push
icebp
adc
enter
pop
sub
mov
outsl
lock
jp
jnp
aam
push
lods
or
dec
pop
jp
hlt
lret
or
jmp
pop
fnstcw
mov
das
sub
sbb
iret
es
std
rcrb
les
add
int
mov
popf
jecxz
das
jp
insl
das
cmp
sub
fiaddl
cmp
push
leave
pop
xchg
pusha
pusha
xor
mov
outsl
pusha
dec
pop
push
mov
subb
and
inc
jnp
std
lahf
insb
imul
shrb
pushf
push
sbb
mov
lcall
jg
insl
andb
test
and
mov
cli
dec
sarl
jg
adc
push
fs
pop
fsubrs
mov
xchg
popa
xor
and
lods
lods
push
push
shlb
xor
mov
sub
xchg
clc
movsl
fisttpl
push
pop
ljmp
lret
mov
jmp
ret
mov
adc
mov
in
fisubs
or
lfs
push
mov
in
lea
jmp
movsb
mov
icebp
ds
mov
and
fwait
out
mov
push
sub
aas
into
into
ret
incb
andb
pop
insl
mov
roll
jo
call
sbb
adc
xchg
xor
outsb
xchg
mov
andb
lret
clc
adc
jp
or
dec
shrb
aad
lahf
add
pop
fistps
xor
test
pusha
adcb
pop
push
or
ret
mov
mov
or
dec
fcomps
icebp
add
jmp
lds
adcl
xor
add
jmp
in
repz
sbb
mov
pusha
mov
inc
xchg
insb
lods
lret
leave
push
mov
lods
jg
out
push
pop
mov
clc
in
jae
mov
push
jae
scas
xor
aaa
or
mov
pop
jecxz
and
push
jle
add
xchg
mov
lahf
popl
add
cmp
dec
gs
orl
mov
mov
xchg
hlt
adc
pop
adc
pop
nop
fcmovnu
pop
fsts
movsb
xchg
andb
pushf
iret
test
rol
inc
push
pop
mov
pop
jo
insl
arpl
lret
mov
das
cmpsl
andb
sti
and
in
test
js
loope
roll
add
push
mov
fcmovnbe
cmpsl
fsubl
aaa
je
mov
sub
push
mov
pop
js
fwait
rol
push
sub
dec
and
sbb
clc
sbb
xchg
cs
dec
inc
sbb
fincstp
mov
stc
icebp
in
adc
or
movb
bound
mov
outsl
fists
lds
sahf
adc
push
orl
and
push
xchg
xor
jae
pop
add
sub
clc
mov
cmc
pcmpeqw
in
push
mov
add
sarb
shlb
and
dec
mov
rorl
fldenv
fcomp
cs
test
icebp
mov
push
pop
mov
push
loope
shlb
jo
push
cmpsl
dec
sti
mov
and
clc
push
xchg
mov
or
push
mov
mov
shll
xor
adc
or
repnz
pusha
push
cmp
add
pop
dec
jb
and
lcall
mov
sarb
mov
add
mov
xchg
pop
cmpsl
adc
mov
or
cltd
mov
or
imull
shlb
mov
sub
popa
pop
add
fcompl
inc
add
inc
and
mov
inc
stc
mov
ss
jae
mov
aaa
pushf
jno
xor
fcmovnbe
xchg
outsb
out
fsts
lret
xor
inc
mov
lea
sub
shrb
and
shlb
icebp
hlt
int3
mov
jle
add
ja
aaa
and
inc
xor
xlat
cmp
leave
mov
mov
je
pop
sbb
call
loopne
and
adc
ret
mov
outsb
add
aaa
rcll
cld
jbe
mov
xchg
mov
insb
rcrb
push
sbb
mov
push
push
arpl
iret
test
daa
add
mov
and
or
mov
fistpll
or
bound
xor
inc
stos
loop
and
add
idivb
shll
inc
or
lods
sbb
dec
das
les
movsl
mov
push
dec
or
lret
and
cmc
mov
in
outsl
xchg
mov
cmp
sbbb
dec
cmp
sbb
add
mov
sub
cmpsb
sub
add
dec
cmpsb
cmp
fsts
sub
dec
push
fstps
cmc
add
sbb
add
es
scas
mov
int
orb
xor
mov
pop
mov
jne
xlat
mov
or
test
xorb
xchg
fdiv
adc
push
fildl
or
fildll
popa
aad
cmp
cld
out
outsl
xor
sub
call
testb
fnstsw
inc
loop
mov
pusha
and
pop
fimull
andb
mov
pop
adc
dec
fisubs
xchg
cmp
sub
add
das
insb
incl
xchg
xchg
jb
fs
sbb
fmul
cmp
call
std
shll
mov
cmpsl
lds
aaa
push
icebp
cli
jg
pop
dec
dec
stos
add
add
sbb
xchg
pop
mov
sub
nop
add
lret
iret
fsubrl
outsb
pop
call
shlb
cmc
or
pop
sbb
push
jecxz
push
push
stc
ss
jno
pop
xchg
push
jecxz
add
push
jge
rorl
das
insl
sbb
adc
cmc
inc
fldpi
pop
scas
sbb
scas
pusha
mov
pop
inc
inc
or
fcmovb
inc
jge
jmp
push
cmp
aaa
jecxz
shl
pop
push
jg
call
stos
jmp
or
and
lret
ret
add
pop
test
mov
movsl
aaa
inc
jnp
or
push
outsb
cmp
dec
or
sbbl
fildll
jbe
fwait
push
mov
jns
rorb
cltd
clc
aam
lcall
jle
jl
add
sbb
push
pop
ficoms
das
cs
pop
lahf
lea
jge
add
fld
jle
insl
lods
xchg
adc
add
in
and
ficompl
pop
adc
mov
shlb
stos
and
pop
jp
mov
mov
scas
dec
lret
dec
std
outsl
aaa
test
and
shrb
aad
repz
movsb
addr16
add
outsl
push
jo
xchg
pop
xor
fldl
push
pop
sub
cmp
mov
out
inc
pushf
jecxz
jge
fnsave
inc
imul
js
or
test
xor
stos
je
mov
enter
mov
and
cli
mov
mov
and
jge
insl
mov
push
cltd
add
ret
test
adc
std
add
mov
lcall
das
jo
push
xor
adc
pop
sbbb
mov
iret
lret
dec
inc
test
push
inc
aas
and
das
dec
mov
movsl
std
cmp
dec
inc
xchg
je
mov
or
sub
shrb
nop
inc
clc
arpl
insb
pop
push
lea
fs
and
inc
scas
outsb
aam
outsl
aaa
dec
movl
xor
add
jo
jmp
cmp
scas
jo
add
fdivs
jo
sub
je
xchg
jl
addr16
das
mov
clc
push
sbb
jo
pop
cmpsb
aaa
xchg
outsb
mov
js
cmc
fimuls
hlt
mov
sbbb
nop
arpl
pop
xchg
fs
push
outsl
imul
mov
xchg
shl
push
and
push
push
shrl
jp
pop
or
mov
push
xor
scas
in
lods
dec
add
push
iret
cmp
and
stos
insl
sub
jbe
fwait
mov
pushf
add
iret
aam
in
fbstp
xor
insl
sub
inc
add
or
dec
ja
in
movsl
mov
add
leave
mov
je
add
pop
outsl
mov
dec
incb
push
imul
movsb
popf
mov
and
mov
nop
arpl
cwtl
cmp
jl
leave
mov
hlt
jmp
sub
pop
inc
mov
mov
stos
clc
aaa
cs
xchg
not
pusha
fiaddl
aaa
incb
inc
adc
or
jecxz
dec
sarl
mov
aam
mov
fiaddl
dec
push
cmp
or
mov
mov
sub
dec
enter
jg
add
es
fwait
and
mov
das
std
push
mov
jle
loope
mov
shl
sahf
outsb
push
or
add
loope
fcmovnu
inc
add
jl
mov
inc
dec
sbb
push
inc
inc
add
inc
insb
loop
add
xor
inc
sbb
or
cs
or
ret
shlb
mov
icebp
sub
insb
mov
sahf
fs
mov
jno
sub
dec
aaa
fiadds
jle
idivb
and
stos
xchg
daa
xchg
jle
dec
rcrb
scas
arpl
dec
inc
shl
out
ljmp
jecxz
gs
inc
roll
bound
addr16
filds
repnz
inc
xchg
hlt
sbb
and
lret
sarb
pop
pop
pop
mov
xlat
shlb
pop
jae
mov
mov
sahf
inc
jno
jae
lret
sbb
bound
das
inc
jns
mov
rol
lcall
call
pop
cmc
jp
add
lds
daa
js
adc
jp
or
xor
or
add
inc
idivb
data16
into
sahf
lcall
mov
ja
movsl
or
pop
aas
add
shr
or
adc
repnz
sbb
mov
adc
inc
add
je
out
cmpsb
pop
jmp
call
mov
mov
sbb
mov
dec
fcompl
std
and
fcmovu
mov
ds
adc
adc
hlt
adcl
cmp
ljmp
ficomps
dec
push
xchg
loopne
jecxz
or
adc
pop
and
pop
shr
jl
out
sub
ja
jl
jge
mov
in
and
sub
add
jnp
mov
mov
loope
mov
outsb
jge
rcl
int
loopne
test
jp
shrb
insb
mov
hlt
movl
mov
push
and
lea
and
filds
test
jmp
or
lahf
insl
mov
mov
outsb
lock
push
data16
mov
fisttps
jns
testl
fadds
xor
in
jp
es
pop
rolb
and
mov
dec
stc
push
adc
fidivrs
je
ret
out
cmp
inc
cld
hlt
cmp
xorb
mov
inc
add
fwait
clc
mov
cmp
jp
js
lock
ret
pop
mov
xor
add
inc
dec
rorb
scas
pop
shll
pop
add
mov
mov
jle
rcrl
sub
roll
les
and
mov
repz
insl
push
std
push
cli
int
stc
bt
in
arpl
insl
jl
mov
aas
fisubl
push
and
add
adc
nop
lret
arpl
loopne
push
popf
cmp
and
jae
loope
or
cmp
loopne
in
mov
lds
lahf
int
xchg
add
das
inc
cmp
fwait
js
ss
rolb
nop
pusha
dec
add
test
or
sahf
push
mov
sub
mov
sub
stos
inc
dec
iret
ss
mov
inc
jge
mov
hlt
mov
xor
shlb
mov
mov
nop
jle
cmp
imul
mov
sub
inc
or
xchg
leave
pop
iret
pusha
jo
or
adc
shll
out
adc
leave
inc
sub
dec
inc
int
cld
xor
fstpl
insl
jae
test
mov
mov
lock
xchg
cwtl
mov
jmp
leave
and
rol
bound
mov
push
outsl
mov
stos
je
fistps
adc
cmp
jne
pop
pop
inc
ror
xor
mov
adc
js
stos
mov
loopne
test
incl
push
and
ja
mov
clc
mov
push
aaa
or
or
dec
lret
ss
xchg
shrb
nop
out
cld
sub
lods
movsb
or
outsl
fiaddl
test
les
scas
lock
cli
stos
and
mov
pop
clc
adc
js
jbe
or
in
clc
popf
adc
xor
dec
jmp
and
dec
aaa
pop
mov
lods
or
aaa
ret
mov
roll
pop
ret
aam
loope
insl
sub
iret
cltd
mov
test
loopne
popa
ljmp
lock
inc
pop
sar
sbb
scas
icebp
push
mov
subl
je
mov
sub
mov
imul
push
mov
mov
sbb
aad
testb
pop
and
xchg
sbb
jmp
stos
in
sbb
das
jnp
mov
repnz
sub
fists
ljmp
pop
call
movsl
test
outsl
pminsw
enter
xor
jecxz
adc
fildl
fldenv
mov
imul
fildll
leave
into
aad
add
sbb
jmp
jo
cwtl
andl
fldcw
and
cs
loopne
subl
jo
lock
dec
cs
fbstp
and
jno
int3
mov
lea
cli
adc
jmp
pop
lret
aaa
mov
in
sub
lret
cmpsl
and
fcoms
mov
cs
addr16
lds
lds
pop
bound
cs
je
rolb
sbb
outsl
add
sbb
and
or
add
jmp
insl
xchg
add
aas
rol
xchg
test
ret
std
bound
sbb
adc
test
add
jg
mov
mov
icebp
rcr
clc
call
daa
or
push
add
pop
mov
in
mov
cmp
inc
inc
jae
fadd
test
clc
outsl
iret
mov
jo
icebp
ds
scas
outsl
stos
sub
push
mov
aaa
dec
das
mov
jb
jo
lds
or
jp
sti
pop
fisubrs
test
inc
mov
mov
aaa
inc
jmp
sbb
mov
add
or
jle
pop
mov
mov
fwait
or
mov
sub
xchg
and
rorl
jl
or
xor
ds
pop
mov
or
pop
inc
pop
outsb
jge
int3
out
insl
pop
jno
mov
sub
or
popa
pop
data16
xchg
pop
icebp
sub
js
mov
and
mov
mov
sahf
out
outsb
cmp
out
icebp
fdivrs
mov
test
test
lret
sti
add
mov
add
push
pop
call
leave
je
push
pop
mov
nop
mov
mov
mov
push
aaa
shl
jbe
in
push
xor
enter
mov
orb
push
mov
push
imul
cwtl
mov
mov
push
xor
sub
adc
jg
rorl
in
xchg
aad
pop
lds
xchg
mov
jp
imul
push
dec
mov
je
pop
adc
sarl
orb
push
push
and
lea
inc
sub
in
jbe
andb
aam
das
cmp
scas
aam
or
sub
js
adc
aad
fs
and
dec
mov
shll
aad
outsl
pop
outsb
jg
pop
je
test
pop
or
fistpll
int
adc
or
in
push
sub
push
loopne
sub
insl
adc
pop
mov
sub
mov
es
xor
mov
pop
sub
popf
pushf
jg
rorb
add
shll
cmp
ljmp
and
fcoml
and
stos
mov
stos
xchg
test
and
and
test
popa
xchg
sub
cld
push
sti
push
inc
andb
sbb
sub
push
push
pop
pop
data16
add
xor
push
rcrl
jns
push
repz
push
sbb
lods
aad
jae
popa
loop
sbb
divb
xor
es
rcll
mov
test
xchg
jmp
test
jecxz
and
jns
sub
lods
xor
pop
arpl
sbb
sti
sbb
sbb
popa
mov
and
es
pusha
mov
cmp
cmp
jge
mov
int3
lahf
or
fidivrs
test
xchg
rorb
clc
or
xor
xchg
push
lahf
sbb
fimull
cmp
adc
mov
je
into
lock
pusha
in
das
inc
outsl
lret
cmp
dec
add
sbb
push
popf
jge
cwtl
cmp
sbb
cmpsb
jae
xor
push
or
pushf
inc
mov
mov
fcmovnu
dec
popa
popf
jne
push
and
xchg
hlt
pop
sub
pushf
sbb
jbe
jno
jae
cs
sub
in
aad
mov
push
add
mov
loope
mov
xchg
sbb
xchg
js
or
fstpt
jno
pop
nop
pop
inc
sub
dec
xor
cwtl
cmp
rolb
ss
mov
jne
push
mov
popa
inc
adc
aam
jns
out
mov
test
sub
sub
mov
or
insl
dec
fs
cltd
inc
inc
cs
mov
xlat
test
or
cmpsb
enter
mov
jmp
add
push
xchg
mul
xor
decb
jo
cltd
xor
fucomi
mov
pusha
outsb
mov
pop
rol
or
adc
int
arpl
fcmovnbe
lea
xor
mov
add
sub
inc
std
js
nop
testb
mov
push
or
pop
scas
mov
or
es
in
cld
addr16
leave
mov
fwait
leave
mov
fidivs
cmc
pop
movsl
pop
aad
pop
insl
rcll
jmp
shll
movsb
mov
mov
shlb
xchg
push
sbb
ljmp
inc
cmpsl
lahf
mov
clc
fs
addr16
sti
shll
cmp
dec
mov
pop
push
xchg
in
mov
movsl
cli
and
xor
sub
in
mov
xor
arpl
fnsave
add
push
in
push
jg
imul
cltd
cmp
xor
jnp
leave
stc
movsl
mov
add
cmp
test
rcr
adc
and
popf
and
mov
orl
rol
test
data16
popa
jnp
sahf
xor
xchg
mov
mov
aad
or
not
sub
sub
pusha
mov
jno
outsl
mov
fnstsw
mov
xchg
ror
cmp
jnp
adc
adc
push
inc
arpl
push
hlt
jecxz
or
mov
loopne
std
or
pop
mov
lret
jae
adc
sahf
mov
jmp
nop
push
mov
aad
stos
sbb
les
loopne
fdivs
cwtl
pop
addr16
adc
adc
ss
out
cmc
cmp
mov
shrl
fcoml
inc
cmp
aas
mov
xor
jg
imul
mov
daa
inc
jns
push
cmp
lock
btrl
add
and
mov
bound
inc
pop
dec
xlat
pop
rcl
adc
hlt
fmuls
pop
pusha
push
cmc
push
push
inc
iret
adc
ficoms
jne
adcl
mov
stos
daa
in
push
cmpl
push
or
xchg
pop
rorl
jo
arpl
loopne
pop
lret
cmp
adc
jl
or
stos
inc
push
andl
pop
inc
push
in
lods
mov
shlb
xchg
and
push
xor
pushl
into
pop
les
inc
mov
push
lcall
outsl
mov
cwtl
out
scas
cwtl
adc
push
aad
add
jmp
sub
adc
jmp
mov
fsubp
or
mov
inc
out
data16
sub
idiv
cwtl
push
jo
or
ljmp
add
sahf
xchg
shl
xchg
mulb
mov
in
push
in
sub
push
cmp
mov
scas
out
mov
hlt
icebp
mov
jl
shlb
xchg
jmp
ret
mov
aaa
js
xchg
cmpsl
xor
rcl
jo
lock
push
and
pop
pop
mov
outsl
sub
mov
aam
cmpb
cltd
inc
cmp
mov
pop
mov
outsb
ret
int3
dec
push
mov
icebp
lcall
inc
shrb
fmull
sbb
push
push
call
std
push
mov
inc
jo
lret
lea
cmp
and
mov
hlt
aam
adcl
add
stc
roll
xor
and
je
add
mov
xchg
cmpb
mov
movsl
jmp
jno
cmp
imulb
sub
scas
mov
cmp
fidivl
movsb
sahf
lods
aam
mov
jg
sub
xchg
outsb
sbb
pop
imul
add
cmp
js
add
xchg
scas
pop
sub
mov
lds
adc
repnz
sahf
xchg
loopne
jl
xchg
orb
or
test
in
xor
jmp
test
std
sbb
pop
clc
enter
inc
dec
dec
sbb
mov
aas
xchg
fsubrs
sbb
and
xorb
rcl
jg
sub
add
pop
repz
mov
icebp
daa
mov
lock
fnstcw
or
push
and
dec
outsl
jge
movsb
sub
fmuls
or
push
mov
cmp
pop
test
dec
sub
mov
jecxz
sub
jae
lret
lds
cmp
pop
sub
xchg
shl
dec
popl
push
xor
xor
lret
mov
cmp
mov
movsl
inc
gs
call
jge
sbb
cmp
icebp
movsl
sar
dec
loop
push
jg
sbb
outsb
inc
rclb
js,pn
dec
pop
adc
and
rcll
dec
adc
fnstsw
push
pop
pop
xchg
sub
sub
in
popl
mov
movlhps
xchg
hlt
jnp
jl
push
mov
movsb
pop
jge
mov
sub
dec
dec
xchg
bound
fistl
ss
rorb
xchg
pop
outsb
pop
mov
inc
add
out
push
push
adc
mov
push
ret
push
mov
loopne
xchg
lods
test
scas
pop
popf
fs
cmpsl
xor
loope
sbb
adc
mov
mov
movsb
sub
or
xor
mov
or
lcall
cmp
cld
and
mov
andb
xchg
dec
lock
or
adc
and
mov
jmp
push
or
outsl
cltd
in
jge
pop
mov
bound
mov
mov
push
pmulhw
sbb
pop
mov
xlat
adc
scas
cmpsb
insl
subl
outsl
jp
add
inc
out
sub
dec
iret
seto
lock
add
arpl
in
cmc
mov
jnp
sbb
jecxz
mov
scas
inc
cs
pop
aam
shll
aad
inc
mov
pop
rcll
xchg
inc
jo
cli
jl
ret
aaa
sbb
stc
and
filds
mov
inc
imul
mov
and
lea
les
int
ror
leave
test
ss
sbb
arpl
lods
inc
dec
mov
int
and
mov
in
xor
push
xchg
ss
in
sbb
add
nop
jmp
or
push
dec
movb
dec
out
adc
mov
icebp
jmp
fldl
pop
aad
mov
fstpt
and
insb
xchg
outsb
sbb
ja
adc
dec
lea
fsubp
insb
ja
jno
negb
daa
mov
push
jo
push
sub
sbb
rclb
rolb
sbb
xchg
iret
lret
cld
scas
push
mov
pop
negl
in
pop
rolb
push
mov
dec
lret
repz
dec
nop
push
sar
sbb
jae
adc
test
mov
orb
loope
mov
loopne
iret
add
adc
movsb
add
inc
pop
sar
or
xor
pop
js
jne
lret
in
ret
or
push
insb
or
aaa
pop
or
xchg
push
testb
xchg
addr16
jge
mov
les
scas
std
lret
fstpt
in
fsubp
lea
or
movsb
stos
outsb
adc
daa
enter
mov
fisttpl
insb
add
dec
xlat
and
daa
imul
rcr
stos
lds
sbb
sti
test
inc
lret
aam
mov
stos
pop
leave
cmp
jb
mov
lea
rorb
pcmpeqb
sbb
movsl
xchg
xor
sbb
es
xchg
dec
int3
sbb
add
mov
jg
nop
in
and
sub
js
sbb
call
and
or
xchg
xor
pop
push
lcall
pop
jmp
push
popf
jl
pusha
push
insb
mov
js
and
test
push
sub
outsb
aam
push
jne
clc
test
jl
aam
fcomps
ss
pop
push
loopne
mov
sbb
push
stos
inc
loope
xchg
out
jns
inc
shrl
lock
jmp
or
mov
inc
in
or
adc
mov
scas
cltd
data16
inc
push
sti
aam
stos
lods
pop
stos
das
cli
cs
cwtl
xor
jnp
xor
rcrb
outsl
inc
arpl
xchg
push
jl
cmp
mov
push
push
lret
outsl
mov
out
fwait
mov
fdivr
pop
push
or
aaa
sub
jb
or
jp
fldl
push
das
cwtl
pop
fdivrs
shlb
scas
inc
rcll
sbb
inc
aas
stc
xchg
push
outsb
maxps
scas
pushf
sub
mov
in
scas
adc
das
ret
data16
movsl
ficomps
or
adc
sbb
clc
push
ss
sub
add
stos
mov
stos
mov
notb
adc
fildl
subb
lods
jbe
shlb
movsb
mov
xor
lods
ja
pop
push
adc
test
add
cmp
adc
jno
pop
push
push
ficoms
inc
cli
add
test
loope
push
xor
and
push
and
or
adc
and
inc
out
sti
sti
inc
cmp
mov
out
pop
pop
or
xchg
xor
mov
dec
push
mov
stc
sbb
das
sbb
add
iret
push
push
call
push
or
mov
push
sbb
cmp
sbb
les
lods
je
jne
jp
adc
jnp
push
les
aas
xchg
inc
outsl
pop
js
lds
lea
jb
roll
sbb
xor
ss
addl
lea
mov
outsb
sub
mov
daa
mov
jbe
inc
xor
out
stos
lock
jne
push
maxps
outsb
mov
xchg
cmp
cmc
adc
jne
hlt
dec
mov
je
mov
mov
icebp
xchg
fwait
and
sub
inc
testl
or
mov
or
jbe
mov
lock
insb
jge
fs
inc
cmp
pop
or
mov
inc
lret
daa
adc
adc
test
mov
or
adc
jo
sub
or
sub
loop
pop
cmc
fnstenv
aam
outsb
mov
xor
push
sarl
stc
cltd
rcll
cmp
inc
mov
xor
test
lock
aam
mov
add
mov
mov
out
test
cmp
ss
pop
mov
jmp
mov
insb
lea
and
fisttps
adc
cmp
cmp
lea
cs
xor
sub
jp
iret
in
mov
hlt
inc
and
and
push
mov
in
cwtl
cmpsb
icebp
inc
jmp
xchg
popf
inc
in
cld
fists
xchg
inc
or
push
rcll
idivb
jno
in
ja
out
shlb
aam
adc
lahf
jp,pn
or
andps
sub
stos
sub
fcmovu
fwait
jecxz
loope
push
adc
popf
call
push
mov
xor
jae
dec
popf
loop
add
or
push
xchg
cmovg
xchg
rorb
mov
outsb
addr16
addb
xor
push
movw
test
insb
cmp
mov
repz
jne
and
es
jo
mov
shlb
add
add
pop
lahf
jns
or
lock
xchg
into
stos
xchg
sti
adc
lcall
stos
out
std
xchg
push
adc
repz
andl
mov
insl
lock
mov
mov
pop
xor
cmp
fistl
pop
mov
int
subl
jb
mov
pop
or
push
xlat
cmp
jl
push
cmp
jmp
mov
lods
movsl
lods
sbb
fnstenv
sbb
dec
xchg
adc
test
insb
inc
adcb
test
sub
aaa
push
lock
inc
sbb
fnsave
dec
hlt
addr16
sbb
cmp
pop
in
or
xor
push
jne
lcall
pop
xchg
roll
adc
inc
mov
mov
mov
and
fisttpl
and
xchg
sub
movsb
enter
cmp
ret
pop
icebp
jp
xor
mov
movsl
pop
cli
cli
xor
call
mov
test
cmc
scas
sahf
dec
inc
or
add
sbb
mov
pusha
cmc
mov
jl
mov
lds
inc
adc
mov
out
sbb
call
pop
cmp
rcrb
gs
push
push
stos
dec
jmp
add
or
mov
rorb
imul
xor
lods
test
add
bound
insl
ret
fxrstor
mov
lock
inc
loop
mov
sub
cli
jge
cmp
loopne
les
sbb
xlat
lea
xchg
call
mov
test
sahf
mov
jnp
lods
or
mov
push
scas
push
ret
jge
mov
jmp
aas
and
cld
mov
shrl
and
cld
push
jmp
cltd
stos
mov
jge
nop
hlt
mov
sbb
xor
adc
das
cmp
push
mov
pop
pop
addr16
loope
push
add
inc
sub
inc
mov
cmp
jg
pop
cwtl
mov
cmc
aad
adc
adc
push
aaa
or
lods
jbe
pop
cmp
push
subl
cmpl
aaa
fildl
cmpsb
fmull
sbb
push
cmc
sub
call
adc
jno
lods
test
cmc
mov
push
mov
mov
icebp
xor
jns
divb
inc
mov
addr16
xchg
xorb
pop
mov
and
incl
and
test
pop
push
jmp
mov
add
inc
dec
push
outsl
fists
pop
add
pop
out
ficomps
or
jne
add
scas
cld
add
hlt
arpl
iret
push
adc
dec
xor
pop
insl
fldl2e
pop
test
fsubrl
pushf
sbb
cmp
dec
lahf
lds
sbb
mov
pop
pop
lahf
das
push
xor
mov
loop
out
or
add
fwait
stc
lock
fldenv
pop
ret
push
xchg
call
ja
lahf
sub
out
pop
mov
iret
js
rclb
les
pop
pop
push
cwtl
push
add
loope
xchg
adc
xchg
not
ret
outsl
mov
dec
add
push
fistpll
or
mov
inc
pushl
adc
lock
fistl
insb
sahf
xlat
sbb
fsubrp
test
mov
adc
add
adc
das
lock
popf
hlt
jl
loope
sbb
roll
and
mov
imul
das
adc
adc
push
addb
shll
repnz
mov
stos
mov
test
rorl
mov
push
add
push
adc
cmp
bound
lock
popa
add
mov
movsl
lea
jbe
dec
lds
push
imul
inc
adc
mov
push
inc
add
inc
mov
icebp
ds
xchg
sbb
jge
inc
push
pop
mov
jecxz
es
xchg
mov
jbe
in
jl
testb
in
mov
std
movsb
in
push
xor
sbb
ljmp
and
sub
push
adc
add
das
mov
and
and
les
mov
add
fwait
jmp
icebp
and
pop
out
cwtl
test
repz
mov
sahf
adc
iret
mov
rcrb
lods
aaa
sti
xor
inc
int3
pop
add
and
and
pop
insb
decl
and
cmp
push
aam
inc
int3
cmp
div
popa
adc
cltd
adc
ss
mov
mov
add
test
int
dec
sub
dec
lea
add
icebp
sar
mov
mov
movl
or
mov
pop
in
or
into
lds
adc
mov
pusha
int3
loopne
loop
or
xor
pop
cmp
icebp
sub
clc
xchg
push
das
or
jecxz
rorb
sbb
lret
xlat
je
add
push
sbb
stos
mov
jg
mov
jecxz
out
add
xchg
pop
cmp
fbstp
sbb
pop
stos
inc
rorl
scas
rorb
nop
data16
insl
ljmp
xor
dec
fs
aam
clc
inc
data16
test
out
cmp
add
mov
fdivp
mov
mov
add
inc
imul
lock
push
cmp
cmp
sub
shlb
mov
and
decb
inc
imul
std
cmp
dec
sar
jbe
mov
and
push
bound
stos
out
stos
push
lcall
mov
push
add
push
sub
mov
inc
rorl
in
pusha
stc
mov
in
mov
leave
in
lea
jge
lcall
push
lret
adc
add
jbe
inc
das
faddl
cltd
mov
or
push
int
dec
inc
cli
int
cmc
addr16
aam
lea
or
mov
mov
int
mov
popf
aas
sub
jg
stos
mov
ss
push
fcoml
cmp
mov
jbe
js
gs
lahf
inc
xor
addr16
lds
xchg
das
xchg
mov
ja
or
mov
and
in
mov
mov
mov
adc
push
js
outsb
sbb
cmp
das
add
cmp
icebp
mov
loope
adc
cs
mov
mov
or
insl
adc
lret
fistl
lds
rol
xchg
mov
rolb
test
add
xchg
ret
fisubrl
mov
xor
mov
fidivs
push
insl
in
lea
fwait
addr16
mov
cmpb
mov
int3
inc
xor
push
call
insl
sarb
aad
cli
inc
sbb
dec
pop
jno
xchg
fsts
outsb
mov
and
inc
std
xchg
mulb
nop
mov
loopne
ljmp
sahf
bound
fstl
mov
mov
imul
cmovl
rol
mov
cmp
stos
adc
add
pop
adc
cltd
or
jbe
and
stc
out
push
ja
test
mov
roll
add
sbb
or
fxch
pushf
das
enter
add
add
sahf
sub
sbb
cmp
fbld
pop
js
pop
mov
and
dec
dec
push
mov
incb
jmp
call
test
insb
adc
mov
adc
out
xor
mov
das
add
mov
jbe
lea
ljmp
cmp
inc
inc
jns
dec
add
es
xor
insl
and
push
test
jge
mov
mov
arpl
pop
inc
xor
mov
fstl
dec
sti
in
arpl
mov
xor
test
cmpsl
stos
mov
pop
sbb
int
subl
cwtl
push
mov
fistpl
push
movsl
sbb
add
sbb
outsl
movsl
outsl
add
insb
cwtl
cwtl
punpckhdq
scas
push
cmpsb
bound
xchg
push
xchg
and
cmp
test
push
xchg
mov
ret
punpcklbw
lret
jl
sub
xor
aas
int3
test
lock
ss
pushf
not
mov
mov
call
jg
jmp
sub
jmp
xor
mov
and
aad
sbb
or
in
cmp
into
popa
mov
adc
mov
push
jmp
dec
push
pop
test
fistl
aaa
mov
cmp
and
into
mov
mov
int3
mov
inc
decl
cwtl
mov
testb
clc
cmp
fs
outsb
or
clc
das
fnstsw
imul
jbe
nop
xor
scas
loopne
imul
jg
mov
mov
out
jbe
adc
cli
lea
fwait
and
outsl
outsl
insb
cmp
aad
cld
cli
lods
sub
call
cmpsb
shrb
out
jmp
and
jno
scas
rorb
fcmovnu
mov
inc
int
jmp
add
dec
ret
add
in
ret
adc
sbbl
jnp
imull
cmp
in
or
loop
into
push
clc
outsl
mov
and
add
mov
push
int3
or
push
lahf
xorl
dec
adc
cmp
xchg
ret
jo
inc
lods
pop
mov
pop
js
lods
jmp
sub
jbe
xchg
js
shll
sub
out
push
dec
dec
sub
sub
pop
inc
clc
inc
cmc
out
stc
sbb
outsl
lret
test
inc
cmp
fcoms
add
xchg
or
xor
mov
mov
ret
adcb
pop
into
pop
ds
outsl
das
inc
das
loop
add
jae
loope
mov
pop
imul
in
or
mov
or
pop
pop
out
movsb
andb
sbb
sub
lds
je
cmp
pop
adc
aam
xor
sub
mov
xchg
sbb
inc
jge
movb
ret
aaa
or
sarl
inc
std
pop
in
loopne
je
push
cmpsb
mov
xchg
sti
fwait
mov
cmp
lcall
sub
and
cmp
fidivrs
cmpsb
fidivrs
outsw
pop
xchg
loope
pop
pop
jecxz
je
je
ret
push
fstpt
cmpsl
fs
mov
jbe
and
pop
leave
pop
imul
push
rclb
fldcw
ds
movsb
ret
adc
inc
or
enter
fisttpl
test
jp
push
xor
sarb
cmp
push
ljmp
and
inc
cmp
movsb
xor
shll
inc
cmp
push
jne
hlt
or
test
jle
xchg
scas
pop
loop
sbb
out
fistl
mov
test
out
imul
or
insl
inc
pop
sbbb
mov
test
jmp
scas
dec
jg
rcll
sbb
push
or
pop
xchg
push
push
ss
inc
push
cmc
leave
or
fisttpll
repz
lds
xlat
xorb
sbb
add
inc
or
test
adc
fldt
insb
pushf
lret
lret
sbb
rcll
fbstp
push
stos
das
inc
call
mov
mov
arpl
mov
mov
sub
sub
adc
or
add
or
xchg
es
jnp
clc
adc
and
in
in
xorl
stos
mov
mov
pop
not
push
hlt
test
imul
dec
or
lret
adc
int
aaa
in
cli
push
lock
xchg
imul
cltd
cmpsb
xor
fcoml
push
cs
les
out
cmpsl
xor
mov
mov
in
ss
ret
push
lock
mov
aam
dec
push
add
cwtl
lds
negb
loopne
pop
or
cmpsl
jno
iret
scas
ret
pop
sbb
mov
dec
call
inc
lea
or
xchg
pusha
add
sbb
dec
xor
or
pop
pop
cmpsb
add
addr16
ds
jne
test
mov
mov
mov
in
lcall
adc
lret
mov
xchg
fcmovnb
inc
mov
pop
lret
loope
push
add
pop
pop
out
aam
pop
mov
cmp
std
xchg
or
pop
out
repnz
popf
and
inc
inc
or
pop
pop
jae
inc
and
or
loope
adc
test
in
out
xchg
das
sub
in
js
fwait
adc
pushf
adc
jp
fdivs
inc
sub
inc
je
fisttps
pop
dec
pop
mov
adc
test
aaa
test
adc
jmp
mov
psubw
hlt
xchg
mov
adc
in
jns
jmp
jmp
in
shll
roll
mov
andl
cli
or
movsl
jno
loopne
sbb
xor
jno
or
mov
jae
rorb
jbe
push
cltd
jg
mov
in
rcll
stos
sti
push
jp
push
add
push
xchg
mov
jno
sbb
imul
mov
inc
js
enter
xchg
pop
jl
dec
or
ja
xor
ficomps
jg
pop
test
inc
lahf
xchg
jo
dec
mov
lea
fimuls
jp
flds
pop
add
dec
mov
and
fldt
jg
shll
push
sahf
xor
inc
outsl
out
mov
mov
outsl
stc
test
adc
popa
stos
mov
ja
addr16
jbe
pop
or
push
add
xlat
loope
das
mov
aad
iret
and
mov
insl
test
pop
xchg
outsb
pop
xchg
dec
or
iret
aas
sarl
cmpsl
xor
stc
mov
jge
and
psrlw
cmp
and
dec
fldl
mov
pop
stos
push
push
add
cmp
out
push
pop
stos
push
sub
scas
ror
aas
xor
add
and
es
push
inc
les
cmp
adc
mov
int3
insb
cmp
mov
test
sti
cli
loop
insl
mov
ret
pop
aas
iret
xchg
cmpsb
xchg
ret
fwait
jmp
pop
xchg
push
and
rcrl
movsl
and
mov
push
lods
xchg
pushf
jnp
fcompl
into
xor
cmp
mov
fmull
call
mov
xor
xchg
jne
xor
push
loopne
mov
add
popf
stc
jg
add
jle
outsb
adc
jle
xor
add
testl
insb
fsubs
dec
movnti
dec
idivl
out
ds
lods
and
in
test
jmp
add
fwait
mov
add
popa
outsl
jmp
test
jl
cli
nop
inc
cmp
dec
or
jns
rcrl
lahf
clc
adc
mov
sbb
sar
sbb
in
dec
je
pop
iret
or
pop
dec
cmp
mov
nop
repz
sbb
sbb
aam
push
jle
sahf
mul
test
dec
cs
and
inc
sahf
jae
fistl
or
js
addr16
pop
and
or
mov
add
xlat
mov
cli
pop
sti
outsl
jl
inc
xchg
mov
mov
jno
add
test
inc
js
push
pop
cmc
scas
mov
and
and
pop
mov
xchg
in
mov
fldt
push
inc
adc
icebp
nop
cltd
add
jle
aas
mov
xor
pop
dec
add
loope,pn
jns,pt
insl
mov
lods
scas
bound
inc
mov
mov
add
shlb
mov
scas
fs
sub
pop
fcomps
adc
xchg
orb
sti
cwtl
push
mov
xor
fisttpl
jecxz
dec
cmp
sub
test
or
ret
mov
popa
shl
fdivr
aam
and
xchg
test
jg
sub
fidivs
loope
movsb
xor
cmp
mov
aad
mov
sbb
sub
lock
mov
mov
adc
mov
mov
cmpb
lods
decl
je
xor
push
divl
push
adc
jecxz
in
add
pop
cs
pop
cltd
dec
incb
inc
push
sbb
mov
dec
pushf
lret
cld
pop
xchg
sbb
cmp
lret
jp
inc
movsl
jb
nop
or
adc
jl
inc
inc
jle
mov
mov
incl
cmc
sahf
sub
xor
lea
in
addr16
fwait
stos
push
cli
mov
pop
fwait
lret
fwait
jmp
add
add
out
adc
mov
cmp
add
rclb
add
cmp
aas
lahf
js
leave
addr16
aas
inc
mov
or
cmp
rorl
les
mov
xchg
push
pop
mov
jae
add
jle
es
mov
dec
adc
add
mov
dec
inc
fs
outsb
xor
dec
outsl
int
int
rclb
push
xchg
fisubs
int
pop
pop
mov
sub
in
mov
sub
jecxz
les
add
mov
xlat
mov
jmp
and
mov
adc
pop
cmp
fisttpll
or
dec
fsubs
iret
push
fadds
psadbw
add
leave
push
push
aaa
je
stc
xlat
into
int3
daa
add
cmp
and
loop
push
pusha
fwait
test
les
xor
lock
sbb
pop
jb
push
faddl
ror
aaa
push
and
push
arpl
adc
xor
stc
dec
insl
mov
sbb
lock
and
ljmp
loopne
dec
repnz
pop
pop
or
pop
cmp
push
ret
roll
add
aaa
adc
rclb
ret
fcmovnu
or
stos
mov
dec
stc
xchg
jnp
fdivrl
daa
lods
je
xor
inc
push
sbb
jmp
decb
es
sub
mov
test
add
add
dec
shll
js
sbbl
jo
pop
sub
adc
orl
xchg
out
testl
cmpsb
or
sub
adc
cmc
js
mov
mov
outsl
lcall
adc
xor
movntps
insl
aaa
pop
daa
or
mov
mov
adc
jnp
sbb
lret
fwait
jne
lea
pop
in
dec
push
mov
clc
inc
pop
daa
mov
xorb
andl
mov
int3
mov
ja
aam
mov
aam
jp
and
cmp
andb
push
js
push
xchg
or
mov
jge
pop
sbb
mov
and
mov
cmpsl
inc
dec
xchg
adc
adc
fwait
mov
sbb
push
or
jg
dec
aam
push
stos
loope
inc
adc
imul
js
in
idiv
mov
fwait
nop
stos
stos
decl
push
rol
test
mov
out
popa
mov
mulb
xchg
xor
clc
adc
lcall
or
int3
mov
xor
fcmovne
mov
pop
pop
mov
cld
movb
imul
sbb
inc
mov
sub
adc
hlt
mov
jbe
andb
xchg
sbb
test
jp
je
sub
jno
dec
jg
mov
mov
sbb
mov
es
hlt
stos
xor
jne
ret
in
sti
test
xchg
aad
mov
rorl
mov
fidivrs
xchg
in
popa
mov
jl
lock
js
sbb
insb
ds
outsl
mov
movsb
sub
push
push
sbb
in
xchg
fwait
sbb
in
mov
and
mov
imull
test
jle
push
out
sub
adc
sbb
inc
mov
mov
ds
arpl
push
dec
mov
fbstp
aam
or
or
iret
mov
add
icebp
lds
mov
sbb
adc
cmc
dec
jbe
jg
push
ja
pop
sbb
or
cmc
repnz
inc
add
inc
sbb
mov
mov
sub
pop
and
test
scas
test
stc
cvtpi2ps
ljmp
push
jno
dec
jp
subl
shl
fdecstp
shlb
dec
xchg
lock
stos
add
scas
push
dec
mov
icebp
add
cwtl
mov
in
mov
sub
cwtl
push
sub
mov
or
adc
or
push
pop
inc
xchg
or
add
pop
dec
and
push
adc
cwtl
push
adc
jp
ja
dec
movntps
push
insb
and
mov
jbe
fisubs
mov
jmp
fldl
xor
cmpsb
movsl
dec
rol
out
inc
adc
sbb
shl
push
cmp
cmp
adc
jg
xchg
sub
inc
sub
inc
mov
arpl
mov
cmp
mov
mov
jne
xchg
cmp
and
filds
in
jp
lcall
fdivl
push
jl
mov
shll
cli
mov
cld
dec
stc
mov
mov
sub
xchg
dec
movsl
push
cmp
sti
xor
add
lods
insl
negb
or
lret
add
bound
mov
je
or
faddp
jge
jl
inc
insb
in
lahf
lahf
cs
je
das
rclb
xor
jg
ffreep
xchg
ds
rcrb
leave
sti
shrb
mov
push
and
pop
push
push
out
push
sbb
in
adc
cmp
iret
mov
addr16
push
pop
add
mov
bound
repz
mov
adc
inc
jl
xor
cwtl
outsl
jl
jo
jecxz
movsl
mov
insb
rolb
jnp
jmp
inc
or
out
test
add
outsb
sub
jge
xchg
nop
and
ja
sub
inc
bound
lret
mov
jl
insb
mov
cmp
shll
push
outsl
bswap
mov
loopne
in
outsl
mov
xor
aad
jnp,pt
inc
pop
sub
inc
lds
push
pop
and
nop
lods
sti
push
clc
aas
dec
jnp
daa
inc
jle
or
add
adc
mov
repz
arpl
fisttpl
inc
push
jp
mov
imul
pop
nop
or
mov
mov
sbb
pop
jp
inc
test
mov
daa
outsb
mov
sarl
dec
mov
fildl
push
test
and
inc
push
out
ja
pop
stos
sbb
dec
cwtl
jecxz
xchg
mov
mov
cmp
lods
out
nop
inc
lret
sub
mov
rclb
int
xchg
test
mov
incb
aam
cmp
dec
dec
mov
sub
mov
lock
push
arpl
xor
cmp
pop
sbb
stos
cltd
pop
test
add
jp
notl
idivl
or
jg
hlt
add
push
enter
xchg
push
add
in
das
sbb
xchg
lds
cmc
and
ja,pn
movsl
std
aad
sarl
inc
adc
imul
outsl
xor
js
imul
mov
pop
pusha
inc
adcl
test
mov
and
jnp
in
mov
shll
stos
mov
and
aam
out
inc
aaa
xor
movsl
fldt
mov
push
test
pushf
enter
push
sub
dec
fwait
lret
shll
das
sarb
sahf
add
subl
jne
lods
inc
push
lahf
cltd
aad
or
push
sti
pushl
es
push
mov
xor
loopne
jns
adc
jne
inc
jg
sbb
adc
pop
ds
stc
mov
call
lock
or
inc
call
mov
inc
daa
pop
pop
into
mov
cmpsl
clc
adc
or
shl
xchg
or
xchg
xchg
push
outsl
fsubrl
test
sahf
bound
mov
fildl
adc
and
mov
fidivrl
pop
fwait
xchg
and
or
outsl
mov
fists
cld
push
hlt
or
and
cmp
div
push
pop
mov
xchg
mov
cmp
pusha
adc
js
push
mov
mov
clc
lahf
push
imul
mov
mov
in
mov
mov
addr16
rcrb
push
sbb
sbb
mov
test
cmp
mulb
jg
loop
and
add
lahf
outsl
inc
fistpll
push
fs
je
in
call
cwtl
ret
adc
pop
mov
jne
jae
inc
ljmp
test
roll
sub
fistpll
mov
mov
sbb
adc
mov
inc
int
mov
jle
pop
insl
fwait
push
mov
into
das
mov
add
stc
dec
mov
int3
push
push
testl
mov
or
sub
sub
push
outsl
std
lods
movaps
adcb
aas
push
inc
test
test
inc
add
lock
cmpl
jno
fcmovnu
js
xor
and
jecxz,pn
add
cwtl
cs
xorb
xor
inc
sahf
mov
xchg
imul
imul
insl
cltd
iret
enter
and
jg
cmp
je
andl
xor
sbb
ret
cmp
adc
clc
popf
loope
dec
and
add
fs
pop
call
inc
jo
js
in
mov
mov
jbe
mov
fnstenv
inc
enter
ficomps
icebp
mov
or
cmpl
push
pop
xor
adc
sub
and
pushf
andl
arpl
ja
fwait
cmp
jne
or
pop
sub
push
lahf
fwait
mov
mov
dec
xchg
cwtl
fwait
stos
clc
mov
scas
xor
xor
es
ret
mov
lea
sbb
ljmp
push
xchg
lcall
dec
std
cmpxchg
jle
pop
dec
sbb
push
adc
pop
pop
inc
mov
decb
and
fstps
jbe
cmp
cmp
iret
fildll
mov
mov
add
outsb
or
in
add
ret
cmc
push
mov
bnd
in
pusha
xlat
push
fs
sub
inc
pop
mov
inc
pusha
iret
aas
insl
and
sub
mov
addps
movsb
mov
aad
rclb
adc
dec
push
gs
jmp
in
scas
jp
mov
aaa
or
jae
push
clc
cmp
pop
test
es
andb
in
inc
jge
je
and
sbb
sti
in
pop
mov
or
xchg
mov
jge
enter
std
mov
outsl
add
push
adc
mov
das
hlt
add
fisttpl
push
ljmp
mov
adc
push
int3
inc
push
sub
jne
fcmovb
jecxz
add
clc
push
bnd
sarb
sub
adc
inc
xchg
push
aad
loopne
das
fbld
test
cwtl
les
and
sbb
lock
inc
repz
jg
mov
mulb
or
out
jns
push
das
sbb
sbb
inc
xor
inc
sbb
lods
xor
punpcklbw
cmp
lods
sub
je
lods
fisubrs
outsb
and
test
push
movsl
daa
clc
mov
test
mov
imul
mov
sbb
jmp
dec
icebp
mov
and
es
mov
dec
adc
inc
mov
sbb
mov
mov
pop
loop
xchg
dec
clc
rorl
movsl
fisubrs
insb
or
and
sub
mov
sub
cmp
and
fiaddl
adc
call
push
add
outsl
adc
int
sbb
pop
add
idivb
adc
addr16
cmc
ds
push
mov
pop
mov
xor
mov
cwtl
mov
lcall
aam
pop
imul
stos
pop
mov
mov
not
aaa
fsubrl
xor
mov
into
xchg
pop
sbb
lret
fs
out
shlb
testl
fmul
lcall
dec
lahf
sbb
mov
pop
pop
stos
scas
push
xchg
sbb
mov
lock
dec
mulps
xchg
inc
out
jnp
or
scas
dec
incl
stc
mov
das
pop
loop
or
inc
rclb
dec
cmpsl
addb
adc
sub
mov
mov
mov
repz
outsb
mov
or
pop
xchg
fistpl
add
jecxz
fs
add
loopne
call
cmpsb
xchg
enter
jle
stos
insb
cmp
fcom
movsl
dec
in
xor
insl
sbb
dec
cld
cmp
fstl
imul
ds
outsl
xchg
push
pop
shll
loopne
dec
sti
addr16
nop
xchg
mov
icebp
sub
nop
ret
lea
mov
lcall
es
subb
adc
clc
or
or
std
and
inc
mov
call
xchg
dec
sahf
push
cmc
mov
push
aam
dec
mov
das
add
imul
das
arpl
orb
sti
int3
sub
mov
mov
add
and
dec
jo
imul
sbb
movl
mov
testb
cmp
inc
jnp
fbstp
mov
dec
xchg
xor
test
shr
sbb
mov
shlb
loopne
jnp
cwtl
and
addl
push
dec
cmp
add
xor
dec
cld
mulb
and
rcr
adc
push
sahf
les
dec
jmp
mov
popa
data16
mov
xchg
movsb
fisttpll
cmp
pop
jp
int3
mov
icebp
lea
lret
rorb
lcall
test
inc
sar
in
divb
add
repnz
loope
decb
mov
jg
adc
push
cli
inc
pop
mov
sbb
jge
lret
xor
adc
in
cltd
push
dec
cmp
and
cmpsl
bound
shll
inc
sub
dec
ret
fdivr
mov
in
fwait
inc
mov
jbe
cwtl
gs
push
notb
mov
nop
data16
shrb
rol
xchg
sub
pop
ljmp
rcll
insb
sar
sub
and
or
push
jmp
xchg
mov
add
adc
or
add
stos
fcmovnbe
dec
mov
pop
hlt
cs
nop
sub
cmp
imul
sbb
push
push
inc
and
push
es
mov
mov
add
loope
adc
mov
cld
js
mov
leave
sub
mov
xchg
jnp
sub
bound
popf
ljmp
adc
jne
icebp
xchg
test
dec
mov
andb
and
xchg
aad
imul
stos
adc
test
mov
bound
stos
lds
clc
inc
aaa
fidivrs
sahf
sub
fidivrs
push
cmp
adc
leave
cs
sbb
mov
add
out
repnz
insl
jnp
sbb
inc
fwait
enter
add
sub
or
ficoml
loopne
test
inc
cmp
rclb
pop
insl
xchg
fcomp
daa
cwtl
xor
xor
test
jno
aad
mov
sbb
lret
ss
fstpt
seto
add
inc
or
add
ljmp
mov
pop
mov
jno
test
sbb
neg
pop
sub
test
fwait
dec
xchg
fdivrs
inc
inc
and
andl
rcrb
pop
mov
adc
xchg
cld
adc
pop
lock
push
dec
sbb
add
inc
xor
fildll
dec
js
sbb
lret
pop
fnstsw
xchg
dec
add
into
pop
mov
shrl
mov
dec
test
inc
adc
lretw
aad
outsl
fdivrl
cmp
fidivl
idiv
pusha
test
lret
pop
les
dec
nop
clc
push
aaa
sbb
adc
outsl
cs
add
mov
xchg
cmpb
adc
lds
iret
sub
mov
pushf
es
cmp
pop
lret
call
jecxz
icebp
push
mov
xor
movsl
test
xchg
pop
loope
jp
mov
xor
inc
test
cmpsb
inc
imull
aaa
or
nop
adc
pop
or
fnstsw
outsl
dec
test
ffree
cmp
mov
inc
pushf
or
cmp
pop
sbb
lods
in
fdivs
out
jl
testl
fwait
mov
div
jp
mov
cmc
and
xor
push
outsb
loopne
pop
shlb
cwtl
pop
inc
mov
cltd
pop
lds
lds
dec
pop
xlat
or
sub
fsts
pop
xor
adc
sbbb
sbb
sub
shlb
add
push
add
popa
xchg
mov
mov
data16
into
pop
orb
in
mov
or
mov
ret
dec
jle
rcll
mov
jb
lods
jle
cmp
mov
xchg
mov
je
enter
test
mov
and
jbe
loopne
les
imul
lock
mov
enter
enter
jo
cmpsb
push
ror
sti
pop
cli
addr16
inc
pop
je
mov
pop
adc
jno
dec
push
ja
test
inc
or
lods
sbb
sub
inc
adc
xchg
cmc
jg
cmpsb
bound
xchg
ret
mov
mov
in
xchg
adc
ljmp
adc
out
jmp
cmc
subl
popa
popf
cmpsb
jno
pop
xor
pusha
or
loope
mov
cltd
enter
and
test
ljmp
mov
mov
add
sub
jo
std
das
lock
add
insl
or
jmp
jl
out
cmp
push
xor
inc
pushl
mov
xchg
adc
pop
jb
mov
out
jl
cwtl
cld
mov
xchg
stc
in
ret
inc
aad
andl
out
lcall
jmp
not
pop
sahf
stos
mov
push
mov
lods
mov
dec
cmp
jle
inc
jge
mov
loopne
mov
les
push
int3
mov
in
pop
bound
std
adc
std
ljmp
mov
inc
cwtl
xor
add
mov
xchg
add
adc
fnstenv
push
movb
stos
or
cld
mov
andb
das
mov
cmp
or
nop
addr16
ja
and
dec
add
fwait
mov
rorl
mov
ret
fistpl
mov
icebp
stos
js
scas
dec
mov
xor
push
mov
mov
aaa
inc
xor
bound
add
fnsave
mov
dec
data16
mov
sub
ret
aaa
fmulp
ljmp
sbb
loope
cwtl
fistpl
pop
adcl
bound
aam
cmp
sti
or
cli
lock
roll
lock
js
push
scas
xor
in
stos
movsl
xor
call
data16
xchg
mov
xor
ljmp
pop
pop
fisubs
mov
test
test
frstor
cmp
dec
outsl
cmp
mov
sbb
adc
add
fsubrp
fsubrl
pop
sti
xor
int
shll
sub
push
mov
scas
js
test
add
mov
ficoml
lcall
lea
lcall
mov
daa
aam
rol
js
test
adc
push
push
movb
add
mov
mov
and
and
arpl
dec
push
xchg
mov
popa
mov
inc
or
fldcw
sbb
xor
dec
mov
fistpll
mov
lcall
push
test
shlb
cmc
or
inc
or
push
push
mov
mov
lea
dec
mov
sarb
pop
push
hlt
sbb
aad
movsb
push
xor
fiadds
sti
mulb
dec
jne
movsb
mov
in
cld
jns
iret
scas
or
movsl
daa
add
mov
and
lods
lahf
push
ljmp
rol
incl
sbb
cmpb
mov
sub
psubsb
outsb
and
pop
sub
pop
pop
mov
pushf
mov
test
push
fisttpl
pop
insb
int
or
push
popf
mov
or
test
mov
mov
mulb
inc
sbb
movsl
outsl
mov
aaa
test
mov
pop
cmp
into
mov
adc
or
fsubr
cmp
mov
mov
cmp
or
adc
das
add
jecxz
inc
lods
jp
push
lahf
jbe
push
inc
jge
repnz
jnp
xor
fninit
push
or
add
jl
mov
dec
cmp
loop
je
sub
mov
dec
push
dec
inc
jno
xor
xor
pop
xchg
mov
loope
arpl
mov
andb
or
in
push
inc
pop
scas
ja
rcr
push
sub
movsl
daa
jl
dec
imul
add
or
mov
dec
cmpsl
xchg
or
dec
icebp
loopne
jo
mov
and
sbb
or
mov
dec
rcll
cwtl
xor
mov
lods
sbb
or
fisttpl
sub
enter
das
popa
loope
jmp
ja
and
lahf
icebp
ds
insl
ja
loope
aad
sbb
pop
xor
arpl
bound
adc
arpl
in
imul
xorb
pop
stos
inc
out
pop
mov
xchg
in
mov
push
push
jo
icebp
out
pop
xchg
jle
stos
jae
stos
lret
and
lods
sti
sarb
aas
jge
das
sbb
inc
sbb
test
fisubs
sbb
pop
pop
jo
pop
out
je
sbb
mov
je
jb
js
or
mov
mov
pop
ret
inc
jp
ljmp
inc
in
and
int3
aaa
mov
jecxz
mov
dec
stos
jne
xchg
dec
push
or
das
test
cmpsb
ficoml
jl
mov
xchg
fistps
ljmp
mov
loopne
pop
out
adc
je
mov
leave
mov
cmc
outsl
sub
jl
sub
ret
xchg
orb
iret
subl
xor
pop
xor
out
rclb
fildll
iret
mov
in
and
push
push
add
rcl
mov
xor
sbb
xor
cmp
lea
outsl
popa
stos
xchg
lret
mov
mov
ss
jae
xor
incl
jge
and
cmp
sub
icebp
clc
ret
maskmovq
negl
adc
lods
sub
loopne
add
ret
popa
mov
mov
adc
lock
icebp
push
dec
dec
callw
popa
in
push
or
pop
cmp
mov
test
rcll
in
mov
pushf
inc
dec
and
bnd
popa
sti
push
pop
out
aad
push
mov
mov
and
rcll
movl
mov
ret
and
push
mov
outsb
clc
fistl
push
jnp
push
dec
pop
push
jle
pop
push
icebp
adc
insl
in
jmp
inc
jne
jns
mov
cmp
out
pop
cs
lret
lcall
adc
jno
sub
aam
das
pop
adc
jle
xor
pusha
mov
je
mov
pop
les
imul
jb
ds
dec
or
stos
dec
dec
idivb
ret
movsb
lcall
push
into
mov
das
outsb
fsts
in
add
cwtl
pop
jns
inc
push
movsb
or
xlat
push
or
cmp
xchg
cld
div
das
fistps
mov
inc
das
sbb
or
xchg
mov
push
and
nop
call
push
add
jnp
addb
popa
mov
fstpl
dec
xor
popf
test
test
push
pop
loopne
pop
scas
xchg
mov
hlt
ret
jl
pushf
sbb
pop
mov
ret
or
aaa
leave
stos
mov
std
mov
in
cmp
ds
andl
rol
fbld
mov
hlt
std
sbb
cs
mov
fwait
inc
and
add
xchg
loop,pt
stos
jmp
adc
ss
iret
lea
pop
jne
and
hlt
dec
lret
test
push
shrl
repz
scas
stos
mov
sbb
push
mov
xor
inc
mov
mov
add
or
shrl
and
outsb
xchg
mov
sbb
and
inc
enter
movsl
inc
andb
inc
hlt
inc
ja
xorl
arpl
ss
scas
ljmp
mov
movsb
fildl
jbe
and
push
es
mov
xchg
cld
or
push
jecxz
fiaddl
nop
lcall
dec
out
aas
in
push
addb
push
test
es
subb
es
mov
push
enter
xor
rorb
mov
idivb
dec
in
and
mov
mov
test
outsb
add
push
mov
lea
sahf
loop
jmp
daa
pushl
loope
cmp
mov
ret
orb
aam
jl
xchg
test
dec
jne
ss
in
inc
push
imul
outsb
lds
stos
or
sub
push
jne
rclb
pushf
bound
sub
or
or
adc
push
ficoms
jo
cmc
mov
sub
mov
repz
inc
movsb
je
sbb
sub
mov
cmc
sbb
pop
mov
icebp
xlat
rcrb
add
icebp
es
mov
aaa
mov
icebp
andb
jae
dec
push
pop
adc
inc
sub
sarl
sub
lods
nop
outsb
in
mov
or
orl
ljmp
hlt
cmc
xor
mov
inc
movsb
mov
sub
imul
xchg
cli
mov
and
sub
dec
xor
sub
cld
sub
push
xor
or
lock
mov
jge
repnz
gs
cmp
scas
sbb
es
xchg
bound
pop
pusha
sbb
inc
mov
loope
aad
mov
movsl
dec
sub
bound
and
daa
sbb
lock
jmp
hlt
adc
loop
mov
mov
xchg
and
rolb
mov
es
in
sub
in
or
es
mov
jnp
add
and
pusha
repnz
jg
jp
jns
dec
movsb
clc
push
push
mov
dec
inc
inc
mov
push
jle
lret
mov
out
jl
adcb
adc
xor
pop
xor
in
sbb
lock
ffreep
enter
nop
fists
and
aam
or
ljmp
jl
fimuls
and
mov
jb
cli
or
push
inc
aam
cmp
stc
push
stos
xchg
mov
add
or
inc
mov
mov
and
shll
sbbb
mov
inc
mov
hlt
cmp
mov
jecxz
decl
addb
outsl
add
jns
clc
outsl
call
in
testl
push
adc
dec
notb
in
test
repnz
out
sub
mov
mov
sub
inc
leave
or
push
or
in
or
loop
add
or
pop
inc
sub
lcall
cmpsl
sbb
and
cmpsl
aam
inc
in
fstpt
inc
mov
addb
stos
add
pop
lret
cs
jne
sub
out
outsl
mov
mov
fnstsw
xchg
inc
sub
cmp
sahf
cwtl
lret
push
shlb
incl
and
mov
cmc
es
pop
fistpll
push
cmc
repz
add
lods
test
adcl
push
jo
adc
addr16
outsb
std
int
cmp
in
lret
push
int
fiaddl
ss
and
pop
lods
loopne
ret
data16
imul
pop
sub
je
mov
xor
mov
in
lods
in
subb
dec
fistps
adc
fisttpl
fisttps
pop
lret
jno
fs
aas
outsl
pushf
push
fwait
sub
sub
and
xchg
outsb
lds
sahf
rorb
fcmovnb
or
inc
mov
pop
pop
mov
add
std
data16
mov
jl
popf
inc
addl
mov
adc
ljmp
sbb
mov
sub
xor
addl
add
mov
outsl
aaa
push
call
test
insl
dec
pop
push
aaa
sahf
inc
pop
je
pop
add
and
or
roll
jmp
xchg
mov
mov
jle
mov
pop
xor
adc
mov
icebp
filds
aas
cmp
sub
mov
sbb
inc
rorl
fbld
loopne
mov
fs
mov
pop
push
loopne
mov
xchg
fidivrl
iret
sub
shlb
lock
cld
or
aas
pop
pushf
sub
jl
sub
pop
mov
add
sbb
sbbb
outsl
jp
inc
aam
out
test
les
xor
je
push
mov
add
hlt
lock
stc
ja
or
pop
mov
jnp
data16
jne
call
inc
sti
rcrl
sub
insl
repnz
cmpsb
out
and
jg
lock
fcmovu
xlat
push
cmp
rcrb
jg
idiv
xchg
stc
ror
test
push
pop
fcomi
and
inc
or
inc
pop
fisttpl
jle
pop
push
enter
and
fadds
jmp
outsb
fwait
imul
jle
inc
jbe
cwtl
lods
test
pop
jae
fimull
scas
mov
push
data16
leave
jbe
clc
es
add
and
push
ret
jle
test
inc
push
adc
and
dec
pop
inc
not
int3
xor
and
pusha
adc
movsl
mov
lock
fsubl
dec
cmpsb
in
lods
icebp
or
dec
mov
lret
jge
sub
adc
and
sbb
pop
push
add
cltd
jbe
mov
or
shr
outsl
push
cmp
fldl
fisubl
shlb
rcrb
insl
lods
int
jo
add
inc
push
mov
push
pusha
pop
fdivrp
dec
fs
mov
jne
sub
dec
inc
fstpt
in
or
cwtl
and
enter
or
movsb
add
mov
add
cmc
rcrb
lods
loop
pop
repnz
xchg
push
jns
imul
test
mov
cltd
pop
mov
or
add
rcll
push
and
inc
rcll
inc
mov
cmp
test
notl
outsl
inc
das
mov
imul
mov
or
pop
or
pop
sbb
cmc
cmp
push
stc
dec
lahf
les
cwtl
cmpsb
xor
inc
push
les
xor
orb
hlt
inc
inc
js
or
inc
movsl
sub
or
push
shr
in
push
out
je
push
push
in
inc
jecxz
cmp
mov
jno
ficoml
icebp
fstpl
inc
push
jl
rcll
testb
adc
cmp
dec
jmp
adc
mov
shll
lcall
jl
out
push
add
add
popa
cmpsb
and
push
push
cmpsl
mov
pop
mov
data16
call
outsb
outsl
adc
rcl
inc
jmp
mov
mov
out
add
and
push
add
push
gs
pop
dec
inc
ficomps
add
dec
mov
adc
ljmp
push
xchg
jns
jp
ror
dec
xchg
adc
mov
push
rcll
add
aaa
stos
and
je
sbb
jg
inc
jmp
push
adc
fs
mulb
sbb
lahf
mov
mov
sbb
ret
aas
pop
push
test
lods
not
aas
fnstsw
pop
fcomps
pop
add
add
or
add
pop
data16
jmp
stc
sub
aaa
sbb
stos
xor
lret
dec
add
inc
adc
outsl
cmp
mov
and
or
or
sbb
mov
subl
insl
and
in
xor
mov
lds
push
repz
add
jmp
mov
sbb
xor
shrb
push
or
idivb
jnp
aas
push
add
xchg
insb
test
mov
push
out
sbb
xchg
xchg
pop
fsubs
and
aas
sbb
divb
inc
pushl
sti
icebp
testl
jle
mov
or
sub
repnz
ljmp
sub
rcll
jne
imul
cmove
subb
jle
cs
mov
dec
js
cmpsl
popa
xchg
push
xchg
push
push
sbbb
jbe
stos
das
in
scas
mov
cwtl
sbb
adc
movsl
out
mov
adc
das
insl
pop
adc
das
pop
fwait
addr16
adc
inc
and
fwait
pop
or
scas
dec
and
xor
in
xor
inc
les
xchg
lret
imul
sub
shrb
fidivl
lcall
pop
iret
or
psubd
pop
out
or
hlt
or
mov
jmp
xchg
adc
mov
mov
outsb
movsb
rorl
orl
lds
les
push
adc
or
adc
mov
and
shrl
mov
cli
adc
sbb
inc
mov
xor
xorb
lods
ret
aaa
fisubrs
sbbl
adc
test
adc
inc
pushf
xchg
xor
enter
jns
mov
cwtl
mov
arpl
jmp
xchg
test
adc
xchg
dec
mov
loopne
add
xchg
xor
test
shl
push
xchg
mov
jge
shlb
xchg
roll
jp
inc
outsl
loop
jbe
xchg
fwait
push
dec
jl
cmp
push
fcomi
jmp
and
subb
and
adc
xchg
pop
not
push
lods
xor
js
notb
or
out
arpl
mov
mov
adc
cld
add
loope
sub
jo
push
adc
or
or
push
testl
and
sbb
test
sahf
test
xchg
fistl
mulb
push
add
movl
jne
loopne
sub
ljmp
cmpb
or
clc
aas
xlat
adc
sahf
jmp
cs
push
add
lods
mov
sbb
mov
adc
dec
and
repz
fbld
gs
test
xchg
adc
xor
xchg
cmc
test
mov
pop
and
dec
ret
xchg
pushf
jae
shl
inc
mov
clc
push
push
sbbl
ljmp
adc
in
mov
inc
fidivrl
xchg
mov
mov
lea
stc
je
sub
insl
dec
xorl
pop
scas
cmpsb
cwtl
push
call
call
fbstp
add
xchg
scas
call
aas
loope
dec
and
mov
cmp
fbld
push
xchg
lcall
mov
push
inc
push
loopne
xlat
fldl
outsb
jecxz
add
jo
push
std
pop
sub
or
add
jp
pop
pusha
jecxz
jbe
or
nop
inc
rorl
inc
adc
mov
mov
adc
test
xchg
dec
push
mov
xlat
mov
lret
pop
je
push
or
shll
mov
mov
out
icebp
insl
loope
and
shl
es
sbb
pop
mov
inc
add
pop
mov
aad
nop
sbbl
fbstp
add
test
sub
mov
test
mov
movsb
xchg
test
jo
xor
stos
xchg
sbb
pop
call
into
pop
aas
test
aas
sub
das
mov
dec
mov
pop
sub
or
jg
and
inc
inc
xchg
xchg
mov
and
lea
mov
mov
arpl
test
dec
mov
jnp
or
pop
jb
fcomi
cmpsb
imul
out
orb
jmp
test
mov
and
test
push
mov
ret
and
dec
mov
aad
cs
sbb
in
inc
icebp
mov
push
sub
outsb
lahf
lock
aam
mov
lds
push
sbb
xor
rcll
test
pop
mov
inc
in
pushf
ljmp
push
jge
rorl
adc
cmpb
cmp
or
cld
pusha
int3
mov
xor
sub
aaa
fcoms
add
mov
jnp
insl
mov
mov
mov
mov
fwait
pop
xchg
ret
pop
xchg
xor
mov
outsb
rorb
pop
enter
inc
lods
inc
xchg
push
cmc
repnz
jecxz
sub
shll
out
xchg
ds
sbb
aad
pop
fcoms
call
push
cmp
push
subl
mov
jbe
pop
pop
pop
sbb
in
por
and
stc
push
cmp
out
int
cld
dec
imul
sbb
jle
aaa
mov
jg
mov
in
inc
lea
aas
and
push
in
or
and
sub
shlb
mov
and
outsb
insb
mov
add
jl
mov
lret
sbb
popf
adc
add
xor
jb
aaa
roll
arpl
push
inc
pop
mov
cli
mulb
pushf
iret
inc
outsl
lea
jmp
push
pop
aam
push
insl
aam
push
add
mov
xor
pop
jo
jmp
sub
rclb
testl
pop
jp
arpl
popf
mov
or
scas
add
stos
sahf
jmp
arpl
adc
xor
push
add
test
ret
pop
add
or
fistl
xor
xor
or
push
loope
sub
nopl
cli
dec
cmp
pusha
rorb
js
xor
add
test
ret
and
sbb
loope
add
aad
inc
out
mov
mov
test
aad
mov
in
push
sub
pop
dec
add
adc
sarb
scas
loop
xchg
pusha
inc
jmp
push
roll
push
jnp
push
ja
filds
and
imul
dec
std
aam
mov
cmp
push
sbb
or
xlat
and
ret
xchg
push
lea
popl
mov
pop
pop
mov
into
call
in
test
xor
cli
jbe
jge
mov
js
xchg
dec
loope
dec
roll
mov
lea
pop
fmuls
xchg
cld
in
add
repz
mov
arpl
push
in
or
fidivrs
pop
jmp
lods
sbb
fildl
xor
push
in
mov
sbb
or
jl
mov
hlt
push
outsb
inc
ss
adc
jp
sub
pop
icebp
negb
cmp
int3
testb
inc
dec
mov
push
jg
orb
sarb
add
inc
add
test
xchg
repz
ljmp
xor
pop
outsl
sub
bound
test
jmp
add
test
icebp
cltd
sarb
mov
or
cmp
fsubs
push
jb
out
add
incl
testb
sti
push
aaa
push
mov
fwait
in
aam
cmp
orb
gs
aad
insl
fisttpl
push
cmp
pop
mov
out
cli
sarl
add
mov
adc
stos
jge
lods
call
dec
pop
out
xor
dec
inc
mov
push
mov
arpl
lret
push
sti
mov
das
sti
sbb
pop
mov
mov
int
or
push
push
fiaddl
sar
adc
sub
dec
add
jp
insb
add
xchg
sbb
call
inc
enter
ret
in
lods
jge
sbb
push
pushf
and
push
mov
cld
outsl
cmp
lds
mov
lea
jnp
jle
mov
insb
add
mov
dec
ja
icebp
push
loope
push
lea
push
call
push
insb
pop
nop
dec
fists
or
mov
movsb
stos
mov
inc
mov
jg
jne
test
pop
mov
mov
movl
sub
out
ret
into
xchg
xor
and
cmp
cmp
mull
push
inc
jbe
jne
mov
xor
cld
mov
sbb
adc
out
and
inc
outsb
scas
cmp
jnp
shll
jns
push
cmp
stos
ss
lock
inc
daa
dec
fstl
cs
and
mov
pop
push
dec
pop
rcrb
mov
mov
stc
test
mov
xor
mov
in
in
rcr
pop
sbb
test
hlt
jbe
loop
test
inc
xchg
loop
sbb
hlt
test
cmp
push
outsb
ja
cmp
jo
xchg
inc
jno
in
sahf
adc
test
jg
lds
pop
mov
push
mov
sbb
cli
adc
add
cli
sti
mov
sti
mov
jle
js
push
mov
push
mov
pop
repz
mov
rcrb
mov
js
add
pop
das
ja
pop
imul
in
bound
adc
push
dec
adc
cli
rolb
rcrl
int3
mov
xor
xor
cmp
adcl
hlt
aam
gs
das
push
mov
pop
mov
add
inc
iret
fldenv
insl
fdivs
sub
imul
cmc
push
rorl
inc
xchg
inc
inc
shrl
movsl
and
mov
push
iret
lret
ret
out
pmulhuw
lock
out
cs
sub
mov
xchg
ret
scas
xlat
push
adc
xchg
ljmp
test
mov
cltd
jns
scas
stos
mov
out
out
loop
inc
adc
les
cmp
mov
cmp
jne
popf
jnp
inc
sti
inc
mov
pop
jo
ret
pushf
addl
mov
rol
mov
shll
mov
cmp
cld
push
aam
add
adc
rcrl
and
les
call
push
das
add
and
fcmovnb
testb
sbb
sbb
inc
js
imul
in
add
xchg
ja
insl
int3
adc
hlt
stos
call
je
pop
pop
adcb
add
jg
lock
es
test
outsb
les
enter
sub
mov
loope
pop
inc
adc
pop
mov
add
inc
jbe
popa
repz
lods
pushw
fwait
pop
in
and
sub
mov
aaa
sbb
cmp
add
stos
or
jae
mov
hlt
rcr
js
mov
not
pop
in
cmpw
mov
cs
sbb
cmpsb
loope
cmp
movups
mov
stc
pop
das
pop
cmpsb
scas
das
aas
dec
rolb
or
incl
fwait
negl
sub
mov
mov
jle
or
push
aad
call
in
xchg
test
jnp
gs
insl
jne
loop
imull
into
xor
pop
push
add
inc
pop
jmp
and
sub
xorb
dec
outsb
ja
mov
sbb
in
pop
and
pop
loope
shlb
dec
adc
inc
push
add
push
pop
sub
dec
mov
test
out
push
xlat
mov
andl
ret
lods
pop
daa
mov
rol
shr
adc
incb
js
xor
orl
add
es
fiadds
xor
inc
add
mov
or
outsb
pop
rol
stc
cmp
out
in
and
hlt
xchg
sti
pop
shll
jge
add
loopne
shrb
in
mov
rolb
test
flds
dec
cmp
fbstp
pusha
jno
pop
inc
lahf
ja
test
pushf
jle
xchg
jne
push
call
jns
std
or
fs
mov
push
scas
add
push
in
add
test
int
and
mov
sbb
fiaddl
scas
cmc
test
mov
mov
xchg
jecxz
inc
mov
mov
cmp
out
mov
sub
rol
xchg
cmp
adc
orb
xchg
insl
movsl
jno,pn
and
into
mov
std
mov
stos
lds
leave
push
test
lret
popa
xchg
dec
mov
push
aad
cmc
cmp
push
mov
jmp
or
or
and
test
and
add
sub
enter
inc
jp
ret
jle
or
fldt
cmp
add
subb
sub
sbb
aaa
add
repnz
pop
inc
or
or
and
loopne
and
test
jg
xchg
rcll
loope
test
fidivs
shr
push
outsl
insb
shll
inc
mov
and
gs
mov
and
mov
mov
mov
pop
xor
mov
push
mov
test
add
into
mov
movb
iret
push
into
inc
outsl
sbb
jle
inc
and
scas
cvtdq2ps
mov
cmc
xchg
mov
mov
fnstsw
rorl
mov
sbb
add
adc
mov
pop
fstpt
aad
xchg
push
fists
jl
imulb
mov
dec
inc
sbb
inc
bound
jb
les
fistpl
and
aad
push
mov
loope
loope
add
mov
push
shrl
js
lods
es
or
pop
inc
inc
ja
in
xlat
mov
lds
add
xchg
jbe
lods
inc
cltd
xor
test
dec
fcmovnb
fistl
jmp
adc
loope
mov
movsl
mov
push
jl
ret
push
mov
mov
mov
fcmovbe
lret
fcoms
popf
pusha
popa
adc
xchg
xor
pop
lahf
popf
dec
lret
arpl
add
fldl
loopne
insb
cmp
cmp
fistps
pusha
frstor
add
orl
xlat
lock
add
daa
dec
popa
aam
movsb
fistpll
mov
xchg
add
scas
scas
xor
inc
sub
jg
adc
mov
sahf
hlt
testl
or
jb
addr16
stos
stc
stc
imul
push
xchg
mov
xlat
das
pop
ss
inc
imul
jne
hlt
in
pop
lea
jb
stos
add
insb
sahf
sbbl
fdivrl
add
cwtl
pop
test
int3
lods
mov
lea
stos
insl
or
mov
or
add
sub
pop
in
fildl
sub
mov
ljmp
push
test
call
in
je
repnz
decl
mov
enter
pusha
shll
aas
fistpll
popa
pop
mov
jns
aaa
xlat
mov
dec
loope
push
mov
or
mov
adc
push
sbb
sub
sub
add
ss
push
in
mov
xchg
dec
and
std
and
lret
add
js
scas
xchg
xchg
pop
lock
push
pop
and
xchg
add
jp
fistps
sub
or
imul
lret
subb
sbb
dec
inc
aam
cwtl
push
fwait
push
cs
loop
arpl
loopne
jne
xchg
adc
es
sti
rcr
aaa
lds
repnz
mov
dec
xchg
mov
int
xchg
rcll
fwait
jmp
test
jl
pop
pop
aaa
fs
xchg
mov
sub
mov
stos
xchg
js
ds
pop
add
mov
std
mov
lds
or
pop
xchg
mov
and
les
inc
inc
imul
inc
mov
xor
lea
cmp
mov
add
mov
add
mov
or
mov
idivb
fidivs
fstpl
arpl
pushf
movsl
imul
and
dec
cmpsb
mov
out
push
out
cmpsl
xor
orl
add
insb
jecxz
or
mov
inc
jge
or
rcr
or
int3
sbb
fdivrs
cmp
fistps
push
pushl
fdivs
enter
jo
bswap
pop
rcll
stc
push
aaa
cld
cltd
imul
dec
jbe
add
les
push
sbb
in
xlat
out
mov
dec
inc
cli
mov
push
sub
push
cmp
inc
xchg
and
addb
stos
dec
push
or
setae
rorb
sbb
inc
mov
xor
hlt
lret
inc
mov
mov
clc
divb
js
cmp
sbb
pshufw
pop
into
dec
adc
insl
clc
ror
or
and
push
cmp
clc
cmp
add
sbb
mov
mov
push
cli
dec
addr16
adc
loope
dec
mov
xor
push
mov
lock
das
arpl
andb
push
mov
pop
dec
ficomps
iret
std
les
movsb
fwait
jne
adc
test
popa
adc
outsl
stos
loopne
add
fimull
jg
or
dec
adc
cltd
mov
dec
arpl
and
fcomip
and
ret
icebp
push
leave
daa
ret
adc
mov
dec
cmc
sub
xchg
mov
mov
pop
stos
or
cli
js
xchg
test
xchg
xchg
out
subb
and
jp
mov
add
pop
sbb
adcl
xor
leave
jg
adc
out
add
pop
scas
insb
dec
dec
test
pop
jo
xchg
pop
loope
jmp
test
addl
inc
aas
inc
mov
movsl
jle
xchg
sub
mov
cmp
das
inc
out
dec
dec
push
mov
pop
fst
cmpsb
add
pushf
sub
dec
in
jle
sbb
push
or
sbb
inc
mov
push
xorb
incl
jge
in
pop
push
dec
jo
push
mov
fsts
mov
daa
add
xchg
cmc
imul
sub
call
test
les
adc
pop
jp
add
or
push
jle
mov
jecxz
popl
pop
in
adc
int
sbb
je
ret
test
or
mov
das
inc
fsubl
inc
jle
push
push
pop
aas
xor
mov
cs
push
sarb
sbb
test
add
sbb
adc
mov
push
xchg
lahf
ljmp
into
mov
mov
lea
pop
das
sub
sub
xorb
and
and
mov
jle
mov
mov
mov
addl
cmpsb
outsl
pop
dec
sub
dec
int
sbb
cmp
shll
sub
lods
pop
test
mov
test
orl
mov
dec
decl
mov
and
gs
or
dec
mov
or
and
data16
hlt
jbe
jg
icebp
adc
cmp
adc
and
add
lds
scas
inc
jne
test
xor
loope
adc
hlt
and
mov
mov
inc
xor
sbb
mov
insb
inc
nop
fisubl
jecxz
dec
adc
adc
shrl
xor
scas
mov
pop
pop
pop
cmp
or
mov
loopne,pn
sbb
das
mov
movsb
and
inc
pop
push
adc
js
or
jp
pop
sbb
stos
inc
jnp
sbb
xchg
cmp
fmull
testl
lcall
mov
popa
xor
mov
stos
pop
loop
and
add
cltd
les
scas
sub
mov
add
and
mov
push
mov
jmp
inc
ss
enter
cmpl
icebp
mov
loopne
imul
dec
mov
mov
jg
or
fdivs
pop
jbe
shll
aad
rorb
aaa
add
mov
fld1
jbe
mov
add
into
xchg
fs
loopne
call
pop
mov
pop
mov
inc
jo
iret
stc
or
cmpsl
mov
push
icebp
or
dec
icebp
test
pop
rclb
clc
sub
cmpsl
xchg
sub
in
shl
stos
mov
fsubrp
mov
mov
cld
jg
es
xor
pop
or
iret
and
sub
mov
rcrb
in
adc
dec
inc
pop
mov
xor
push
mov
lcall
fwait
jae
jge
mov
setge
mov
push
xlat
out
add
repnz
loope
enter
adc
cwtl
adc
fdivrl
iret
addr16
and
mov
adc
xchg
clc
sub
xchg
push
andl
fistpl
or
jbe
cmp
rclb
imulb
jle
mov
or
mov
or
adc
iret
and
or
pop
jo
outsb
sbb
push
and
out
add
jge
and
jne
das
mov
adc
inc
loopne
fistpll
adc
add
push
push
sub
pop
xchg
dec
xchg
push
push
adc
mov
cmc
sub
popa
mov
inc
notl
mov
or
rcrl
mov
cmp
or
std
mov
loopne
or
mov
das
sub
sbb
sub
cmc
and
pop
sub
adc
test
sahf
arpl
mov
mov
cmpsb
or
fmull
shlb
push
xor
movsl
pushl
lret
xor
ret
or
nop
adc
icebp
loopne
xchg
test
push
scas
xchg
inc
mov
int3
inc
push
scas
sub
adc
outsl
jmp
in
pop
dec
cmp
ret
xor
in
inc
mov
icebp
dec
xchg
ljmp
dec
cmp
push
xchg
cmp
pusha
pop
lods
mov
mov
adcb
and
andl
out
ficoml
sub
pop
shll
mov
cs
and
icebp
dec
sahf
jbe
je
or
xor
movsl
aam
cmp
mov
sbb
in
add
cmp
xchg
inc
imul
jnp
mov
shlb
adc
idivl
mov
mov
mov
pop
cmp
xorl
xor
out
adc
add
add
add
loopne
cmp
and
xchg
fwait
mov
mov
loop
lock
test
ds
pop
dec
fcomip
test
loopne
rcll
xor
fimull
jo
js
es
mov
or
add
or
pop
mov
adc
jle
cmpsb
lret
std
cmp
mov
dec
shrb
cltd
cmp
pop
fwait
or
fidivs
push
pop
bound
test
push
mov
scas
and
push
sbb
mov
iret
jb
loope
adc
push
xchg
iret
dec
loopne
jne
mov
jb
sbb
adc
fldt
sti
fidivl
xchg
and
test
jg
aam
xor
stc
jle
push
inc
stc
add
push
mov
jmp
or
add
jae
lods
imulb
xor
sbb
rolb
sbb
push
mov
mov
jg,pt
add
xchg
std
jge
dec
xchg
jb
lea
dec
lds
cltd
sub
xor
ja
pop
cmp
xor
shrl
mov
dec
test
mov
pop
pop
mov
flds
dec
lock
adc
push
lock
ret
test
inc
enter
dec
ss
insb
sub
aad
push
cmp
or
xchg
add
imul
in
push
inc
lea
and
pop
push
cmp
sub
sub
cltd
ret
jbe
rolb
push
dec
add
stos
sub
lret
adc
cld
pop
mov
add
and
hlt
outsl
fbstp
pop
pop
int
lods
pop
jns
call
and
dec
les
lret
add
sbbl
sub
lahf
mov
shlb
mov
cmc
cmp
loop
mov
xchg
inc
sahf
jbe
lods
inc
ds
lret
in
sbb
push
lret
cmp
add
mov
popa
int3
push
ss
push
outsl
dec
roll
inc
sub
hlt
lea
loopne
jle
pop
or
lds
lahf
jo
ljmp
rcrb
mov
shll
or
add
je
sbb
sbb
jb
xor
stc
jnp
jnp
xor
and
movsb
out
or
push
mov
adc
das
cld
cwtl
pop
imul
sbb
sbb
daa
jecxz
and
test
add
mov
clc
lods
pop
out
pop
psraw
push
or
cmp
push
repz
jp
ljmp
sub
dec
dec
imul
cmp
stos
ret
pop
cmpsb
mov
xchg
movb
sub
dec
mov
ss
rclb
insb
sbb
insl
pop
call
and
xchg
inc
outsl
test
jno
and
push
lea
icebp
lcall
add
scas
fistpll
mov
enter
into
xor
andb
icebp
mov
push
pop
fsub
mov
mov
scas
fcom
add
fs
je
lea
inc
cli
inc
adc
andb
fiaddl
mov
das
and
shll
divl
shrb
mov
call
jp
fsubrs
loopew
out
jae
xor
inc
and
in
fcmovnu
xchg
mov
xchg
lock
and
sarl
les
fmuls
fcmovne
push
outsl
xor
fisubl
add
jbe
sti
sbb
mov
xor
daa
mov
adc
lcall
sbb
pop
mov
sti
lods
out
xor
sbb
hlt
out
cmp
fsubrl
mov
dec
dec
add
mov
jp
or
ds
fidivrs
lods
xor
lods
sbb
jecxz
lds
je
push
and
or
pop
lret
loope
push
or
xor
sbb
or
ret
ret
loop
cmc
sti
inc
jg
push
mov
lods
inc
mov
rclb
lcall
mov
mov
mov
jmp
insb
or
pop
mov
mov
sbb
xor
cmc
jle
push
add
mov
or
loopne
dec
cwtl
js
jge
out
pop
sti
incl
xchg
sbb
repnz
adc
dec
inc
cwtl
or
jmp
das
pop
pusha
adc
or
decb
dec
push
mov
scas
adcb
sarl
push
mov
aaa
outsb
movsl
sub
pop
push
imul
push
mov
add
movsl
fidivs
sub
cmpsb
rcll
pinsrw
add
jl
insb
fdivl
add
lds
sahf
inc
push
adc
test
pop
jmp
rcrl
aaa
movsl
sbb
dec
clc
lods
incl
and
movntps
loopne
je
clc
outsl
dec
outsl
in
mov
sub
hlt
xor
insb
icebp
mov
jmp
stos
cmp
add
imul
pushf
lea
jbe
dec
insb
sub
mov
filds
mov
dec
jo
mov
and
mov
sub
lahf
pop
lret
inc
xchg
mov
push
out
add
lods
dec
sbb
mov
arpl
sub
add
mov
mov
push
inc
lret
cmpb
pop
insb
mov
je
or
mov
sbb
ds
lock
insl
enter
push
outsb
add
sbb
fstpl
sbb
pop
xchg
adc
fs
jp
pop
sbb
add
in
les
mov
add
jecxz
fsubs
fs
pop
add
xchg
sti
movsb
nop
pop
jp
mov
mov
sbb
cmpsb
mov
hlt
movsl
das
aam
adc
xor
ror
lds
imul
data16
test
mov
cmp
mov
xchg
popf
bound
fildl
add
push
loop
pop
rorl
or
test
pop
mov
bound
cld
cmpsb
or
cs
popf
mov
dec
sub
mov
xchg
xor
test
inc
jg
mov
andl
fadd
fldl
cmpsl
rdmsr
outsl
aaa
rorl
repnz
jae
adc
insb
fisttps
cwtl
sbb
jle
cmc
test
popf
push
out
pop
ljmp
stos
cmp
cmp
imulb
in
aaa
ficoml
iret
push
adc
test
lock
out
imul
jmp
add
stos
divl
cs
fisttps
cmpsb
xor
jg
xor
adc
stc
daa
jmp
push
jno
ds
sbb
roll
mov
inc
rcr
xor
pushf
addr16
popf
aaa
rorb
popa
or
icebp
push
je
nop
xchg
sbb
hlt
mov
cmp
int
test
movsb
adc
sti
pop
pop
stos
sbb
scas
outsb
cmp
jne
ret
shll
jle
pop
push
lret
les
test
pop
clc
sbb
pusha
push
sub
mov
add
jae
shll
andb
or
lahf
fs
cmc
or
adc
add
mov
faddl
movsl
adc
push
lock
jg
cmp
in
mov
mov
lds
nop
cmp
cwtl
pop
mov
dec
ret
push
test
hlt
ja
pop
bound
frstor
sbb
jae
lock
or
movsb
dec
add
adc
mov
cmpsl
ja,pt
pop
xor
addr16
inc
fistpl
mov
dec
inc
test
mulb
jle
ljmp
push
loopne
clc
adc
rclb
xchg
pop
fstpt
inc
adc
push
push
ds
incl
loop
popa
or
loopne
shr
adc
mov
cmpsb
add
mov
xor
fwait
andl
inc
jl
popa
jo
loop
or
push
scas
loopne
pcmpgtb
sub
cli
das
add
stos
and
xor
shrl
in
adc
scas
mov
or
cli
gs
cmp
icebp
xor
fistpl
getsec
mov
pushf
lret
mov
sbb
aam
insb
mov
lcall
inc
lret
pop
sub
sub
pop
dec
lret
mov
push
dec
cli
add
sub
sbb
pop
xchg
jmp
mov
pop
fidivs
clc
leave
shlb
pusha
lcall
pcmpeqb
adc
xchg
pop
clc
push
jnp
cmc
inc
add
cmpb
xchg
mov
dec
push
adc
inc
dec
jmp
stos
sar
in
das
mov
fsts
imul
sbb
aas
insb
pop
pop
and
stos
or
imul
sbb
fldenv
std
das
std
lahf
hlt
rclb
ret
or
mov
inc
or
mov
jnp
push
jb
and
and
clc
inc
sub
bound
xchg
mov
popa
sbb
iret
adc
and
push
mov
jp
cli
push
test
jge
mov
mov
pop
xor
lods
jge
cwtl
sbb
dec
sahf
fdivrp
add
clc
fs
loopne
sarb
outsb
xor
in
adc
and
adc
sbb
or
dec
andl
incl
inc
lret
stc
or
aaa
orb
mov
clc
sbb
mov
xchg
fistpll
xor
jmp
mov
jo
sub
insb
loopne
mov
and
cwtl
bound
xchg
and
sarl
xchg
and
das
fdivrl
scas
es
lret
inc
pop
mov
mov
push
fbld
test
sub
inc
or
ss
jecxz
adc
add
fistps
cmp
mov
inc
pusha
das
pop
sub
repz
or
adc
cli
outsl
and
js
cmpsb
xlat
enter
bound
cs
lds
test
sbb
lret
adc
xchg
xor
insl
and
bound
pushf
in
idivl
add
xor
ret
sbb
dec
lret
add
into
test
outsb
mov
xchg
les
add
dec
vmovmskps
sub
adcl
test
insb
pop
or
push
fidivrs
sub
aad
push
testb
xlat
dec
cli
pop
push
or
pop
cwtl
lock
loope
lds
pop
inc
ffreep
call
cmp
andb
push
jne
fcoms
and
jne
add
mov
jle
and
cld
jp
stc
jo
jo
xor
fstpl
movsb
ficomps
scas
push
inc
pop
xor
repz
mov
sar
pop
pop
inc
sub
sub
cli
mov
mov
add
insl
stc
lea
roll
inc
and
or
adc
pop
fisubrl
insl
xor
lds
sbb
mov
or
inc
in
ljmp
add
xor
sub
sub
mov
ss
mov
sbbl
or
add
lea
pushf
adc
sahf
inc
rcl
push
in
and
aad
xchg
sbb
test
xchg
gs
sbb
add
fistpll
xchg
rcrb
jge
je
arpl
adc
int
lret
rolb
xchg
xor
lods
and
pushf
mov
mov
sbb
mov
inc
inc
sub
dec
push
andps
idivb
outsl
aaa
inc
jl
mov
addr16
nop
mov
out
xor
and
testl
push
rorl
enter
xor
mov
xchg
mov
movsl
sbb
inc
mov
cmpsb
sbb
or
push
push
add
xchg
and
adc
outsb
das
lods
cmp
mov
add
or
stos
movsb
and
jo
aad
shlb
or
andb
fidivrs
pop
and
bound
inc
jle
mov
rcl
xchg
das
dec
mov
enter
stos
xchg
in
in
xor
mov
inc
cld
leave
mov
xor
aaa
mov
cmp
pop
pop
and
jno
sub
icebp
cmp
loop
test
and
les
pop
mov
sbbl
pop
xlat
adc
xor
divl
leave
mov
xchg
jnp
cli
xor
fiaddl
clc
inc
pop
cmp
mov
lock
push
push
in
fistpll
fcoml
dec
add
aad
ldmxcsr
cwtl
aad
ret
icebp
loop
mov
and
ja
mov
inc
ja
rol
jmp
ljmp
arpl
add
pusha
pop
adc
clc
mov
lret
mov
cmpsl
pusha
loop
jge
jmp
clc
jno
pop
je
or
jo
clc
mov
jge
shl
mov
push
insl
je
mov
inc
pusha
mov
push
mov
inc
pop
inc
ret
and
ljmp
popf
hlt
adc
ljmp
mov
dec
pop
and
inc
mov
pop
std
cs
popa
push
inc
int
jecxz
adc
test
dec
fadds
adc
lea
jae
and
arpl
cwtl
test
xchg
cmpsb
mov
sbb
xor
inc
adc
and
sbb
loope
jge
stos
out
test
mov
inc
xorb
dec
mov
mov
push
xchg
stc
jb
inc
xor
cmp
xchg
nop
mov
mov
jnp
stos
or
into
dec
sub
loopne
in
mov
rorb
fs
xor
xor
outsl
ja
mov
mov
inc
push
pop
je
int3
nop
mov
pop
test
mov
scas
ficomps
or
addr16
adc
mov
and
negb
repz
es
stos
gs
leave
mov
cmpsl
xchg
sub
addr16
pop
outsl
or
add
inc
sti
add
cwtl
in
sbb
popa
adc
addr16
pop
arpl
cmpsl
add
inc
sbb
in
and
les
cmp
push
je
sbb
inc
jge
lret
inc
je
jns
sub
or
shlb
pop
ljmp
fisttpl
inc
xlat
adc
sbb
xchg
cwtl
sbb
or
and
imul
movsl
fwait
loop
xchg
mov
sub
and
jg
test
imulb
pop
jbe
xor
mov
adc
lret
push
clc
add
enter
mov
dec
lds
xor
pop
push
movsb
dec
inc
dec
lret
adc
adc
mov
les
fs
xor
mov
and
inc
mov
xlat
stos
and
mov
cwtl
or
stos
dec
or
fwait
dec
pop
mov
aam
xchg
sbb
testb
popa
or
mov
imul
dec
add
or
arpl
add
sub
fildl
or
aad
xor
in
ret
ja
sbb
test
subb
inc
loopne
in
mov
mov
call
xchg
adc
mov
or
xchg
cmovp
pop
ds
das
push
sbb
add
push
aas
rol
inc
subl
pop
inc
les
adc
cmp
popl
das
insb
push
je
lea
mov
inc
mul
lea
inc
xor
pop
mov
inc
lea
push
adc
mov
fstps
mov
push
test
inc
xor
jne
aas
ret
test
aam
cmp
daa
add
xchg
orl
mov
arpl
sub
xorb
pop
fwait
dec
popf
xchg
mov
pop
das
popa
cli
fs
pop
cld
enter
incb
sbb
xor
flds
loop
ficoml
push
pushf
inc
xor
enter
push
or
fs
cmpsl
dec
sub
mov
sbb
cmp
cmp
cmp
sbb
cld
aas
insl
push
fwait
xor
daa
in
pop
inc
push
adc
loope
andb
out
mov
and
jnp
xor
jbe
mov
mov
ret
test
leave
sub
adc
xchg
shll
ja
cmp
inc
ret
mov
sub
dec
or
rorl
fsubrs
leave
dec
insl
sbb
mov
mov
jp
pusha
sbb
and
mov
sarl
pop
inc
sti
pop
jbe
add
movsl
repnz
outsb
sar
sub
mov
js
test
sub
add
cs
xchg
cmp
ret
cld
dec
insl
fidivrl
cmp
mov
ss
loopne
lock
pop
das
fstl
nop
sub
lret
aaa
les
inc
mov
mov
rclb
enter
sub
sbb
jp
mov
push
push
push
fs
ret
mov
insb
incl
inc
pop
rclb
mov
dec
xchg
outsl
ds
inc
sbb
sub
adc
xor
div
lods
dec
fistpll
push
insl
test
cmpl
jbe
lock
icebp
in
aam
adc
add
fstpl
jnp
icebp
or
jl
xlat
inc
int
lods
mov
aas
rcl
int3
fwait
sarb
mov
cmp
lahf
nop
push
out
or
push
loope
mov
fistpl
pop
js
je
sbb
jne
pop
testl
add
cld
mov
out
dec
orb
xchg
jl
adc
sub
lea
js
sub
dec
lea
push
adc
pusha
and
jg
xchg
test
inc
fbstp
xchg
in
inc
and
mov
int3
lds
sbb
push
jmp
ja
pop
add
popa
outsb
jmp
movsb
xor
lret
cmc
or
sbb
les
adc
bound
pop
ljmp
dec
mov
xor
cmpsb
cmp
mov
cwtl
gs
int3
fs
pusha
mov
ret
inc
hlt
iret
mov
jl
mov
push
outsl
test
sub
cmp
pop
ret
mov
or
lret
dec
inc
test
adc
pop
sub
stos
dec
fimull
enter
loopne
aaa
mov
iret
lea
fsubl
movb
ret
dec
test
fimull
push
jge
test
push
adc
into
imul
mov
lret
sub
inc
je
push
xchg
sub
stos
lods
pop
xor
sub
xchg
outsl
aas
jecxz
xchg
insb
sbb
inc
movsl
ja
stos
jle
js
pop
hlt
movsl
mov
sub
jg
psubq
loope
out
or
inc
xchg
and
ret
pop
and
or
lods
test
loopne
sbb
je
or
and
idiv
cltd
sbb
push
pusha
xor
ljmp
icebp
cli
sub
rol
push
or
subb
icebp
xchg
or
lea
or
mov
adc
mov
inc
pushf
fcmovnu
adc
dec
adc
cld
jmp
xchg
movsb
lea
push
pop
adc
cli
mov
add
sbb
jg
add
mov
sbb
test
pop
icebp
mov
lcall
push
sbb
fistpll
mov
push
xor
sbb
pop
jmp
adc
mov
aas
push
mov
add
inc
repnz
pop
mov
or
or
lea
dec
sub
aas
dec
pop
inc
test
pop
jecxz
pusha
dec
mov
mov
jo
shl
rolb
inc
stos
fildl
push
nop
or
sbb
and
adcl
and
ja
push
pusha
inc
and
and
test
lahf
inc
or
add
outsl
adc
test
add
js
int
in
bound
iret
mov
popa
fmull
mov
sub
les
mov
and
add
xchg
mov
out
sbb
mov
cmp
data16
jo
sbb
aaa
jnp
pop
dec
scas
push
xor
inc
add
mov
dec
add
mov
das
fstps
add
mov
in
jecxz
ss
add
cmp
cmp
adc
lret
test
or
mov
pop
sbbb
xor
adc
out
mov
add
clc
into
mov
jle
shll
push
rclb
mov
and
and
fcmovnb
fnop
xchg
out
mov
iret
mov
and
sub
int3
push
enter
test
cmc
icebp
es
push
lods
nop
inc
sbb
push
pop
inc
sbb
in
addl
and
lea
xchg
lret
aad
jae
cmp
aam
outsl
fistpl
pop
lret
lods
cltd
sbb
adcl
addr16
call
mov
jb
cwtd
adc
inc
cltd
or
mov
add
aaa
push
cli
xchg
or
mov
jb
sbb
test
cmp
sti
scas
inc
dec
imul
les
in
repnz
sbb
mov
mov
dec
dec
jnp
fists
sbb
and
or
xchg
loop
adc
adc
push
out
sbb
dec
push
mov
mov
rcr
test
test
lcall
mov
or
cmp
sbb
cmp
imul
sbb
jp
cmp
aaa
mov
in
inc
dec
iret
andb
xchg
adc
inc
lcall
stc
les
push
sub
dec
and
jns
or
or
clc
test
add
fisubs
imul
imul
xchg
adc
icebp
popa
inc
aam
mov
push
mov
or
rcll
out
push
sbb
inc
ret
push
mov
cli
add
data16
mov
mov
int
arpl
cmc
dec
push
push
fcoms
roll
fists
mov
mov
sub
lods
test
cltd
bound
inc
or
loope
lea
sbb
and
mov
outsb
in
push
add
pop
mov
jno
mov
adc
or
xor
dec
in
pop
pop
jae
add
adc
call
iret
call
fsubrs
xor
xor
sbb
hlt
pop
mov
inc
repz
clc
ret
ret
cmp
xor
test
sub
lods
push
cs
push
jnp
cmpsb
stos
imul
sub
aad
in
imul
sub
cmpsl
dec
xor
xchg
xchg
sbb
xor
sbb
cmp
mov
ret
xor
lcall
movsb
pop
roll
mov
lcall
xchg
into
imul
ss
data16
int
lock
test
shlb
jb
xchg
movsb
xor
jecxz
or
insl
decl
dec
js
ds
aaa
insb
sti
test
xchg
mov
sbb
mov
or
test
push
dec
mov
xchg
sub
cli
or
jno
mov
shl
xlat
sub
push
pop
ds
jp
mov
movsl
pusha
cltd
test
pop
push
rolb
or
int3
mov
lret
filds
data16
push
xchg
imul
dec
or
jge
or
ljmp
scas
and
les
add
add
push
test
jge
pop
jbe
pop
sub
inc
aam
addb
or
or
mov
sub
xchg
pop
push
adc
push
jp
push
aaa
xlat
int3
xchg
push
leave
hlt
insl
jmp
cmp
test
imul
jb
sbb
std
mov
push
sbb
sub
arpl
loope
xchg
fcmovnu
mov
pop
mov
lock
jno
pop
clc
je
ret
cmp
sbb
in
das
fsubrl
fisttpl
push
loopne
xchg
inc
push
jno
cwtl
push
mov
ret
sbb
push
jle
add
lods
cli
ret
pushf
cltd
xchg
cmp
in
and
icebp
mov
dec
mov
mov
jnp
aad
mov
aaa
mov
push
scas
cmc
add
pop
adc
or
call
xchg
incl
arpl
cmp
fstps
out
js
in
sahf
add
mov
test
xchg
stos
inc
xor
xchg
into
mov
mov
mov
sub
push
lods
jns
or
lods
jo
stos
xor
mov
mov
sti
adc
mov
mov
push
push
pop
inc
xor
andb
pop
adc
mov
call
fisttps
cmp
pop
dec
pop
add
jns
add
testb
sbb
fdivrs
faddl
and
das
sbb
lods
pop
data16
sti
pop
dec
add
mov
jecxz
fidivrl
or
pop
addr16
insl
jo
mov
cmpsb
sub
jmp
xor
inc
jge
shll
dec
push
addr16
xchg
mov
roll
xchg
ret
pushw
stc
ss
imul
cmc
lcall
adc
ret
xor
xor
mov
hlt
and
shrl
lret
inc
mov
dec
insb
push
sub
int3
test
orb
push
dec
iret
std
jle
or
sub
pusha
jmp
inc
and
xchg
and
mov
out
out
into
inc
mov
or
imul
dec
inc
je
push
mov
sub
aaa
jle
xor
call
cltd
dec
fcomps
insl
push
push
adc
or
outsl
sarl
frstpm(287
lcall
orb
sarl
push
pop
icebp
xchg
inc
cli
ja
cs
loopne
lock
mov
fidivs
or
sbb
jge
test
inc
fisubrl
stos
out
stc
inc
fwait
push
roll
arpl
les
jnp
pop
mov
inc
jg
add
rcrl
ss
sbb
imul
outsl
jg
mulb
dec
xor
inc
je
sahf
inc
aaa
mov
rorl
cmp
rcl
lock
dec
cmpsl
mov
push
notb
and
mov
scas
or
pop
add
shrl
or
fcompl
and
mov
insl
push
in
lea
pop
sbb
notb
dec
and
jbe
mov
js
push
sub
test
mov
pop
jae
test
rorl
add
stos
divb
lret
aam
sub
out
shlb
aaa
inc
xor
faddp
imul
mov
or
aaa
fsubrs
arpl
andl
je
lret
mov
push
inc
cmc
xor
xchg
adc
adc
test
call
mov
xchg
adc
xorl
pop
mov
dec
insl
clc
sub
sbb
fstpl
mov
mov
adc
xor
mov
lret
fiaddl
scas
loop
add
mov
dec
sbb
movsl
ficompl
scas
cmp
pushf
or
loope
adc
pop
cli
pop
aam
lods
xchg
inc
jne
inc
cmpsl
push
psubw
in
add
adc
jne
add
mov
inc
aam
pop
cld
jg
clc
cwtl
ret
jmp
sti
inc
push
mov
push
decb
and
jns
rclb
push
adc
lock
dec
lcall
arpl
xor
cld
jbe
pushf
mov
add
js
adc
mov
gs
in
pop
push
push
lock
shrb
jg
test
nop
and
int
push
loop
jmp
xchg
push
js
shlb
jge
push
in
push
or
mov
mov
jg
xchg
dec
mov
sbb
in
add
sub
sub
pusha
dec
insb
xlat
cltd
fldlg2
scas
or
inc
std
pop
cli
jb
mov
mov
pop
inc
pop
sarl
popf
add
pop
pop
outsl
jg
loop
push
and
sub
jb
sbb
inc
repz
es
cmpsl
testb
push
add
sbb
push
sbb
or
out
xlat
or
mov
dec
mov
sbb
cmc
pushf
add
mov
cmp
in
push
or
inc
push
scas
dec
decl
rorl
sbb
sbb
pop
jmp
shl
in
mov
push
dec
inc
cmp
roll
jno
fistps
sti
fstl
adc
bound
sub
push
mov
lods
lret
pop
inc
or
push
jbe
in
lods
int
addr16
xor
push
xor
pop
xor
mov
outsb
rorb
add
les
popa
or
mov
data16
or
js
pushl
movsb
leave
leave
ds
ret
push
dec
dec
std
mov
lret
pop
lea
std
dec
fimull
add
cmp
push
mov
loope
xlat
xor
mov
leave
popa
popa
xlat
fldcw
adc
into
inc
or
je
stos
add
mov
cld
fucomi
rorb
movsb
inc
dec
jno
or
dec
out
iret
sbb
fcmovb
lods
iret
mov
aaa
cld
push
ljmp
xlat
pop
xor
insl
push
mov
icebp
push
ljmp
mov
or
addl
pushf
and
or
and
push
inc
mov
inc
push
cld
or
jmp
mov
dec
xchg
dec
add
in
mov
fistpll
aas
add
imul
js
jecxz
sbb
mov
add
out
outsb
jns
push
aaa
subb
dec
mov
dec
inc
fdiv
mov
aad
ffreep
in
outsl
push
and
cltd
and
dec
in
add
push
addr16
sub
je
rcrb
iret
outsl
into
int
add
mov
cmp
xchg
scas
insl
lret
daa
stc
adcl
in
pusha
addr16
pop
pop
pop
aad
gs
cmpsb
dec
les
add
aas
pop
jg
loope
inc
or
dec
sbb
insl
and
adc
mov
or
push
inc
mov
push
scas
rcr
loope
mov
lods
mov
aaa
add
ds
mov
lods
pop
clc
add
mov
xor
add
test
pop
ds
popa
in
cli
xchg
xchg
aas
fisttpll
jl
mov
out
push
cmpsl
sub
mov
adc
mov
insb
adc
rcll
pop
rcr
xor
mov
and
ljmp
add
push
xlat
mov
in
mov
xchg
iret
and
pop
std
lds
repz
pusha
sub
out
lock
das
sub
iret
pop
test
mov
push
cld
fcoml
pushl
dec
das
jb
rorl
and
cmp
cmc
test
pop
push
cld
jno
jp
int
mov
ljmp
iret
movsl
in
clc
sbb
lods
icebp
push
inc
lahf
xchg
and
les
test
filds
inc
pop
movzwl
cwtl
aas
sbb
or
in
jno
loop
sbb
add
xchg
aas
add
jle
call
dec
aas
mov
inc
imul
pop
sub
imul
out
mov
jl
mulb
aas
and
push
pop
cwtl
jo
call
push
mov
dec
cmpsl
repz
dec
dec
push
sub
decl
les
xor
iret
outsb
iret
inc
bound
add
dec
jle
or
inc
dec
lahf
push
out
hlt
fbstp
pusha
cmp
cmp
aam
popf
xchg
dec
jbe
mov
lods
xchg
xor
add
adc
pop
stc
mov
xor
aaa
pop
iret
push
and
fdivs
sbb
stos
in
stc
cmp
or
cmc
andb
icebp
pop
pop
gs
push
jge
xor
shll
mov
js
cmpsl
cmp
les
add
pop
dec
cmpsl
push
popf
cmp
repz
fimull
ja
push
adc
cli
data16
movsb
inc
scas
cs
imul
cs
inc
aam
rol
scas
in
pushf
fst
fcmovnbe
push
dec
inc
inc
int
push
cmp
mov
fcompl
movb
xor
add
out
aas
mov
aaa
decb
mov
pop
repz
pop
aas
dec
mov
repnz
push
les
cmpsb
int3
inc
repz
sub
mov
stc
out
jle
pop
out
fistps
ds
insl
call
xlat
fildll
xor
call
mov
dec
cmc
sahf
and
mov
pop
dec
aas
fidivrs
fiadds
mov
call
cmp
iret
adc
push
sbb
and
mov
loop
aas
push
dec
cld
mov
lret
sbb
or
faddp
inc
lds
test
pop
fisttpl
fdivr
sub
lcall
and
jno
push
mov
pushl
jno,pt
pop
les
aas
cmp
mov
mov
pop
in
pop
xchg
fistpl
out
mov
pusha
out
call
pop
out
arpl
popf
jmp
sbb
and
ja
fldt
mov
sub
call
je
mov
mov
sub
lds
fisubrs
jmp
pushf
mov
js
or
js
test
mov
jl
xchg
mov
push
testb
push
stos
and
mov
loopne
pop
in
lods
iret
mov
shrl
sti
pushf
repnz
cmpsl
cmp
mov
in
es
cmp
mov
jb
and
loope
mov
sahf
push
test
leave
push
jg
push
cwtl
std
jg
pop
sbb
lahf
shlb
pop
sub
rolb
scas
or
add
push
bound
sbb
enter
das
xor
aaa
shr
loopne
outsb
stos
test
mov
adc
jbe
adc
call
xchg
sub
bound
js
int3
shlb
add
sub
mov
jecxz
adc
push
xchg
insb
push
and
add
cmp
bound
lcall
jae
cld
icebp
push
test
mov
sbb
push
out
ss
or
sbb
mov
jne
scas
mov
mov
jmp
cld
sbb
repz
sub
movsb
xchg
mov
cltd
sub
mov
ljmp
push
xchg
push
jp
ret
and
andl
jle
add
js
sarl
and
jg
sbb
in
push
cli
cld
adcb
adc
push
enter
jg
jbe
fwait
ljmp
lret
cmpl
add
aad
and
push
cwtd
cmp
repnz
pusha
loop
mov
cli
repz
fcos
iret
inc
out
sbb
mov
sbb
sub
sar
sar
jle
pop
lock
aas
pop
scas
imul
movsl
dec
add
mov
pop
inc
insl
cmp
mov
xor
pop
fwait
mov
enter
cld
mov
xchg
inc
mov
inc
loopne
xchg
es
sbb
fstpt
and
ret
fistps
push
adc
mov
sar
adc
movsb
xor
inc
inc
pop
lahf
sub
int3
jge
repz
mov
mov
rolb
mov
pop
aaa
outsb
incl
mov
mov
xor
test
jne
or
rcl
pop
iret
add
fsubr
or
sbb
lock
clc
loope
stos
jb,pn
out
pusha
cmc
sub
outsb
iret
inc
pop
test
and
rcl
pop
or
push
test
stos
hlt
pop
lock
cs
cli
add
fwait
sub
call
rol
fdivs
dec
adc
mov
in
enter
push
mov
hlt
push
add
inc
call
mov
icebp
mov
icebp
int
loopne
aaa
lahf
mov
adc
insb
outsl
mov
lret
loope
in
fadds
repz
dec
jmp
pop
mov
xchg
addl
adc
cmp
xchg
pushl
cld
andb
mov
push
out
aas
lods
loopne
lea
sbb
gs
sbb
or
adc
push
push
sbb
outsl
rcll
popa
jo
adc
aas
leave
dec
aaa
or
lahf
loop
mov
loop
sbb
mov
test
and
or
mov
sbb
mov
sub
and
scas
rcrb
or
adc
dec
jmp
or
adc
cld
adc
add
mov
aaa
sbb
xor
xchg
xor
push
pop
call
addr16
cwtl
insb
sub
mov
addb
push
xor
fisttps
dec
mov
pop
push
mov
and
sub
fldl
test
sub
xchg
sub
insl
inc
inc
pop
lahf
pop
popf
je
clc
xor
addl
push
mov
mov
or
fcoms
stc
loope
jg
pop
cmp
adc
loop
cmp
pop
push
in
test
dec
xor
sbbl
ret
aaa
mov
jg
cmp
mov
inc
mov
jo
add
or
clc
xor
pop
jo
out
xor
leave
test
xchg
mov
xchg
nop
dec
add
inc
jge
adc
gs
or
dec
fcoml
iret
mov
clc
in
iret
hlt
adc
pop
pusha
jnp
xchg
loop
into
mov
or
notl
mov
mov
shll
scas
cmp
in
rclb
sbb
jb
mov
shl
cmp
int3
pop
fwait
lods
sbb
enter
xor
mov
call
subb
loope
push
push
sub
or
mov
ficoml
xchg
mov
jle
stc
test
pop
mov
test
mov
pop
sub
jle
int
addb
sbb
daa
cmpsb
add
jb
loop
xchg
sub
lahf
popf
pop
jmp
hlt
scas
sbb
in
and
icebp
pop
xor
pop
insb
shll
nop
or
lock
push
adc
imul
cmp
jno
outsl
mov
jp
imul
mov
repz
mov
sub
std
push
xchg
jg
or
nop
fwait
pop
add
decl
data16
or
sbb
cmp
in
es
shrb
and
cmp
add
mov
stc
movsl
shll
inc
pop
mov
sbb
mov
faddl
ljmp
and
mov
pusha
xor
push
push
xchg
push
push
dec
mov
scas
pop
je
lds
adc
jg
mov
sti
jl
lds
movsb
loop
cmp
mov
fninit
push
les
or
andb
punpcklbw
jnp
mov
mov
mov
lret
dec
adc
mov
add
jbe
xchg
xchg
outsb
mov
dec
or
dec
inc
cmc
mov
in
mov
and
dec
das
dec
rcll
movsl
gs
adc
mov
jl
cmp
add
in
mov
les
outsb
mov
pop
stc
lods
sbb
add
and
inc
arpl
arpl
lret
sbb
xor
push
lods
movsl
or
out
jns
jmp
push
pop
cmp
sub
jmp
sbb
dec
mov
jno
or
push
or
cmp
lcall
leave
test
jl
push
xchg
popf
mov
and
shl
aad
movsl
outsb
mov
clc
pop
lods
call
stc
cmp
gs
aad
xor
out
or
adc
xchg
jecxz
pop
pop
push
push
add
test
fstpt
sub
movl
inc
sbb
lea
pop
int
push
cmp
add
adc
push
stos
cli
sbb
jbe
cmp
cmp
cmpsb
inc
mov
fadds
fcomps
inc
iret
jne
aaa
cmpb
dec
jg
rcl
add
cmp
cmp
mov
adc
xor
fs
daa
jbe
xor
je
push
dec
das
outsl
dec
sysenter
lea
out
outsl
and
shll
hlt
xor
jecxz
sahf
jno
ficoms
movsb
add
mov
test
add
aad
iret
pop
lret
or
pop
cmp
lahf
iret
mov
stos
jge
rcll
rep
leave
pop
gs
dec
sbb
mov
sbb
pop
mov
xchg
ss
cmpl
mov
push
pop
jne
dec
fwait
lods
repz
pop
cmpsl
or
mov
or
xorl
fnstcw
bound
aam
add
cmp
add
jno
mov
ret
push
ljmp
mov
stc
pop
cmpsl
inc
xor
adc
sub
inc
cmpsl
push
add
inc
sub
out
call
frstpm(287
addr16
popw
xor
aaa
jmp
fidivs
outsb
adc
fnstcw
outsb
mov
mov
push
jnp
lods
or
or
icebp
notb
xor
push
loope
das
mov
lea
ja
mov
iret
cltd
loop
add
jbe
add
cmc
rorb
loopne
pop
mov
hlt
push
xchg
mov
adc
jo
cmp
or
push
js
push
sbb
adc
popf
pushl
rcrb
popf
leave
mov
xchg
sub
call
sub
or
sbb
in
lods
test
mov
xchg
push
orl
push
sbb
fadds
xchg
in
ljmp
test
adc
inc
inc
jge
xchg
cmc
sahf
sbb
push
push
addr16
push
mov
je
mov
add
test
aad
or
daa
cmp
sub
cmpsl
xor
out
fwait
sub
leave
inc
cmpsb
sbb
ds
iret
loopne
out
cmp
js
loopne
sbb
test
dec
adc
sub
sbb
cmp
adc
push
mov
add
cmpsl
sub
rcll
js
inc
pop
es
xchg
push
test
cmpsb
add
aad
aaa
or
adc
daa
sbb
push
mov
sbb
orb
xchg
or
loopne
and
sbb
test
and
pop
lret
sub
jp
mov
pop
sub
xlat
adc
jmp
nop
or
movsb
sub
popa
mov
pop
out
fsts
xchg
ljmp
stc
and
adc
add
jge
fld
lea
cmc
sahf
mov
add
or
jmp
mov
test
arpl
idivl
mov
dec
sbb
add
iret
mov
push
cmp
fcoml
out
xlat
mov
mov
add
clc
cmc
test
xor
mov
aas
mov
push
popf
lods
sti
sbb
cmc
and
pushf
add
and
scas
cwtl
out
mov
daa
cs
dec
movsl
ja
adc
jnp
jae
xchg
and
mov
push
ficomps
jae
jo
inc
adc
ds
and
out
mov
shlb
dec
test
adc
jle
andb
shll
mov
das
cmp
popa
inc
mov
ret
pop
dec
mov
negl
xchg
mov
mov
mov
call
adc
loope
jg
pop
pushf
xor
fsubl
icebp
mov
mov
push
sub
adc
incl
or
mov
lcall
cmp
xor
idivb
pusha
dec
push
js
mov
lods
jbe
add
pusha
cmp
cli
xorl
sbb
inc
sub
mov
cmp
push
pop
js
test
test
pop
cmp
mov
aaa
addl
icebp
test
sbb
jne
nop
jmp
test
ljmp
cs
mov
scas
cmp
ret
adc
jecxz
pop
jae
fsubl
lcall
mov
mov
adc
dec
push
fucom
cmp
hlt
xadd
mov
dec
dec
mov
popa
jl
inc
hlt
in
mulb
fistpll
jecxz,pn
test
stos
pop
pop
pop
cwtl
push
cmp
les
ss
inc
or
jno
iret
mov
add
push
adc
sbb
inc
pop
sti
into
test
pusha
imul
push
gs
cmpsb
mov
jmp
aad
push
xor
sbb
mov
push
inc
out
pop
sub
inc
mov
sub
xor
push
arpl
cmp
aaa
jns
loopne
or
std
sub
mov
or
mov
or
out
imul
out
int3
dec
stc
in
add
dec
divl
jmp
aas
cmpb
rclb
outsl
xor
sbb
std
push
daa
scas
mov
fiadds
ret
xchg
out
and
test
and
scas
add
mov
jne
mov
dec
fdivl
add
enter
inc
cwtl
int3
sbb
fbstp
pushf
or
addr16
subl
cwtl
add
mov
js
repnz
imul
adc
insb
cld
ss
cmp
mov
loope
icebp
cmp
dec
je
fnstenv
shr
hlt
xor
stos
xchg
sub
cld
pop
lea
pop
jo
pop
xchg
int
jl
test
test
push
xchg
lods
test
or
dec
rcr
aam
or
and
mov
xor
dec
outsl
rol
adc
and
pop
into
inc
daa
or
push
loop
test
sub
cmp
rol
or
int3
jno
shlb
push
ljmp
mov
adc
rcrl
ds
test
push
bound
or
or
pop
xor
jl
repnz
xchg
scas
push
stc
popf
fimuls
add
cmp
stc
mov
rol
push
das
push
andb
mov
shll
xchg
pop
inc
dec
mov
addr16
ret
push
shrl
inc
pop
xchg
jl
xchg
or
dec
movsb
jbe
push
popf
jno
and
fsts
or
scas
xchg
fwait
push
aaa
push
bound
mov
nop
mov
bound
ss
push
shl
inc
nop
mov
nop
test
ffree
ljmp
insl
mov
inc
mov
and
popf
cwtl
mov
mov
inc
adc
add
add
leave
test
sbb
test
fsubs
sub
mov
cwtl
add
movsb
sahf
jo
add
cmp
testb
negb
out
cwtl
or
inc
jo
dec
and
out
repz
push
ljmp
cltd
mov
jno
iret
or
cmp
roll
into
add
add
or
es
lods
or
outsl
jnp
flds
hlt
int
mov
push
insl
xor
dec
sub
lock
ss
inc
xchg
mov
xchg
daa
dec
les
sub
test
push
xlat
inc
loopne
jl
jns
int
rorl
mov
xor
cltd
lods
andl
mov
xchg
int3
cmp
lods
push
jge
les
xorl
adc
push
mov
add
pusha
inc
and
ror
popa
xor
fsubs
ret
aaa
icebp
outsl
jp
adc
fnstsw
jecxz
ja
jg
dec
push
cmpsl
fadds
or
xchg
popa
pop
scas
popa
ja
dec
xor
lret
push
cmpsl
cwtl
inc
lret
icebp
and
iret
lcall
repnz
pusha
testb
adc
push
icebp
lret
push
sbb
dec
xchg
mov
into
test
faddl
and
xchg
cmc
pushf
aam
cmc
test
xor
imul
lods
push
and
das
mov
mov
loopne
faddl
lock
das
aaa
push
add
lds
pop
dec
inc
div
nop
insb
sub
les
adc
test
and
xor
ds
loope
xor
in
mov
xor
addr16
sbb
xchg
daa
sub
cmpsb
rorl
or
xor
mov
out
add
ffreep
int3
push
push
ret
insl
jae
and
xchg
int
pushf
clc
das
lcall
cli
hlt
mov
into
mov
dec
mov
gs
pop
mov
xor
je
shll
or
adc
es
and
dec
aad
sbb
xor
push
test
loopne
mov
sub
sub
xchg
pop
cmovl
or
and
sub
dec
imul
cld
stc
xchg
jge
cmp
xchg
mov
rol
fs
lock
addb
xor
mov
jb
loope
jecxz
sbb
push
mov
inc
out
fldenv
mov
in
lret
inc
cmp
inc
cltd
mov
loope
mov
adc
push
jmp
jns
in
jnp
mov
movsb
mov
movl
dec
popf
roll
jne
aam
cli
pop
les
and
or
pop
pop
test
sub
pop
addb
push
pop
ja
aaa
ret
je
sbb
pop
shl
outsb
andnps
test
lret
jbe
sub
jmp
mull
arpl
outsb
push
or
mov
mov
jp
mov
and
cmp
ja
dec
jmp
jnp
mov
xor
enter
jl
testl
lahf
mov
outsl
test
div
aaa
or
push
icebp
or
stos
les
xchg
push
cmp
fs
mov
and
popa
fsubl
fdiv
data16
test
rorb
fldl
xor
shrl
cmp
dec
adcl
into
push
xchg
insb
cmp
push
push
dec
nop
xor
and
stos
and
sbb
mov
stc
lahf
dec
out
js
push
fwait
cmp
nop
inc
movsl
sti
add
fadds
cmp
mov
repz
sub
rcll
cli
subl
jp
xchg
add
clc
fldcw
cmp
mov
sbb
push
push
sub
xor
enter
clc
xor
mov
jmp
lods
mov
pop
push
es
andb
add
mov
fldenv
into
jmp
int
mov
or
mov
pop
pop
lods
xchg
iret
out
jmp
xchg
and
pushf
mov
inc
cmp
xchg
mov
leave
adc
fwait
mov
or
addr16
pop
cmpsl
inc
push
pop
fucom
popa
adc
js
and
and
mov
call
xchg
xchg
into
scas
sub
loop
mov
js
sub
outsl
pop
es
dec
mov
cli
mov
arpl
mov
mov
mov
dec
mov
sbb
gs
push
ds
add
es
mov
pop
test
dec
sub
push
mov
inc
loopne
cwtl
fwait
mov
mov
sbb
dec
mov
aaa
xchg
dec
les
out
and
aaa
scas
loopne
pop
ds
mov
mov
pop
shl
gs
fists
push
jbe
aam
jecxz
xchg
mov
popf
inc
orl
xchg
or
xchg
loope
fwait
cmpsl
imul
aas
or
inc
cmp
sbb
push
xchg
out
jl
test
mov
mov
movb
pop
nop
add
cmp
sahf
sub
stos
cli
inc
daa
test
pop
jne
shl
stos
jp
cmp
dec
push
and
adc
fs
inc
sbb
push
xorb
sahf
loope
jnp
and
push
and
mov
push
adc
out
mov
mov
or
push
cli
push
shrl
pop
psubusw
loope
and
inc
out
mov
jbe
or
push
in
pop
inc
lods
data16
cmpsb
or
aas
pop
fsts
xchg
mov
fs
test
mov
stc
mov
or
sub
jmp
jno
add
inc
jae
or
jp
or
aaa
negl
push
xchg
icebp
clc
push
mov
lds
or
lret
test
cs
dec
test
mov
inc
push
in
out
sahf
fstpl
cmp
mov
and
mov
jg
nop
push
leave
add
jecxz
dec
cltd
jp
mov
insb
or
fwait
lds
imul
cmpsl
loope
jb
icebp
add
lods
repz
iret
sbb
dec
xor
lock
clc
into
test
ret
add
adc
ret
inc
lcall
ret
movsb
arpl
xor
add
enter
jg
scas
dec
in
push
test
pop
jge
or
xchg
mov
insb
inc
lock
add
add
xchg
es
enter
lret
popa
xor
fnstcw
add
gs
and
or
inc
loope
push
mov
xchg
xchg
insb
movsb
xor
or
add
adc
loope
cmp
pop
mov
ror
ret
xchg
xchg
fwait
shll
inc
cltd
in
iret
dec
outsb
dec
loop
movsb
fs
outsl
push
xchg
sbb
outsl
je
daa
jl
sub
and
jmp
mov
and
or
xor
pop
cmp
nop
or
addl
popa
mov
mov
xor
dec
ret
mov
or
jo
shl
lds
add
xor
and
mov
cmpsb
push
mov
clc
and
push
cmpsl
and
shll
dec
sahf
xchg
ds
xor
dec
mov
mov
jmp
cmp
test
pop
add
xor
sbb
xchg
dec
rolb
cmpsl
pop
jge
insl
xor
loop
add
ja
dec
loopne
sahf
dec
mov
test
ret
ret
and
test
out
pop
push
roll
mov
sub
jne
mov
mov
mov
sbb
sbb
bound
add
sti
je
cmc
or
add
inc
inc
jle
mov
and
jp
mov
pusha
nop
test
jne
push
or
popf
inc
pusha
loop
loop
push
popf
cld
xor
mov
cs
xchg
pop
enter
dec
adc
and
push
adcl
xor
fstpl
getsec
pop
xchg
out
in
repz
inc
jbe
or
ja
push
mov
repnz
cli
mov
push
mov
xchg
out
dec
insl
sub
rcrb
cmp
or
mov
sti
pop
jl
fnsave
fmull
and
dec
cli
mov
data16
mov
jb
adc
sbb
mov
test
push
sarl
xor
xchg
shl
add
out
xrelease
repz
push
xchg
sbb
add
sub
xor
fidivl
rol
cmpsl
mov
pop
cmp
lds
subb
xchg
or
add
push
sub
incl
push
loopne
pusha
cs
add
add
jl
xchg
or
in
xor
inc
std
dec
icebp
xchg
pop
testb
jmp
andl
dec
push
adc
xorl
mov
loop
leave
testl
adc
icebp
insb
mov
enter
cmc
pop
cld
mov
mov
loopne
add
push
sti
cltd
xor
loopne
fstpl
dec
nop
stos
cs
ret
xor
fisttpll
call
fidivrl
imul
movsb
loope
lods
push
mov
cs
sub
sub
sub
add
xchg
sbb
sbb
jge
shlb
mov
mov
mov
xchg
test
andl
or
adc
pop
inc
xlat
pop
aaa
dec
in
sbb
dec
and
mov
fisubrs
inc
sbb
popa
out
movsb
dec
repnz
xchg
mov
inc
lret
js
lock
mov
xchg
sbb
mov
leave
daa
xor
imul
inc
dec
mov
adc
add
or
ret
cmp
aad
je
shlb
mov
cwtl
push
mov
dec
outsl
leave
ret
jmp
jns
push
xchg
jne
dec
push
xorl
iret
and
mulb
in
inc
mov
adc
pop
inc
imul
cmp
add
push
pushf
movsb
lcall
xchg
ficompl
push
repnz
dec
cmpb
and
test
ret
sub
jg
push
pop
mov
or
cwtl
outsl
adc
arpl
push
push
add
xor
in
push
ret
imul
dec
idiv
ljmp
push
out
shr
sbb
roll
mov
insb
lcall
loope
test
push
and
cmc
int
xchg
js
stc
mov
sahf
xor
mov
sbb
cmp
int
jne
mov
inc
mov
loop
hlt
insb
insl
ret
cmp
sbb
jle
pop
lock
xlat
pop
sahf
cltd
pop
leave
je
xor
clc
mov
add
imul
inc
lcall
cwtl
in
xor
and
push
enter
jp
mov
imull
cmpl
push
rcll
sub
mov
add
jns
cmpsb
cmp
fisubrl
test
adc
scas
pop
inc
hlt
and
mov
mov
xchg
rolb
inc
and
mov
fwait
bound
orb
jg
sbb
xor
inc
or
enter
adc
pop
or
rolb
xor
jge
inc
mov
je
loopne
xor
inc
add
mov
int3
cmp
xchg
push
mov
jmp
xor
sbb
jne
daa
in
xchg
gs
addl
push
into
cld
inc
aaa
dec
inc
sbb
jle
or
cli
xchg
adc
dec
mov
jo
add
loopne
inc
pop
cmp
adc
cmp
push
mov
cmpsl
bound
push
push
test
mov
pop
call
adc
call
pushf
cs
sti
es
ret
inc
xchg
xlat
daa
test
loope
test
frstor
dec
dec
push
inc
sub
sti
xor
xchg
or
cmp
in
mov
adc
je
dec
and
sbb
arpl
xchg
addr16
popa
jbe
mov
inc
shlb
inc
cltd
inc
lock
fs
pop
jmp
hlt
gs
jno
lods
aas
sahf
add
mov
notb
stos
jnp
mov
je
and
ljmp
inc
call
jg
popf
push
mov
push
mov
or
imul
mov
shlb
es
pop
and
adc
int3
pusha
pop
dec
daa
mov
xor
roll
int
fbld
enter
pop
or
inc
hlt
mov
jge
dec
sarb
and
xor
enter
stc
inc
inc
iret
loop
push
jnp
ret
push
insb
ja
hlt
cmc
dec
jge
leave
aas
pop
and
insl
sbb
xchg
loop
and
leave
push
andl
inc
icebp
lods
sbb
adc
xor
ljmp
jno
popa
stos
push
stos
mov
adc
fidivs
push
aas
push
pusha
mov
sbb
insl
into
sub
xchg
or
in
lret
stos
adc
pusha
adc
rorb
nop
in
aam
push
lods
cmp
xchg
test
add
addb
mov
popa
add
add
cmp
pop
cmp
push
adcb
sahf
cmp
movsb
fcomps
jl
mov
test
daa
clc
iret
shll
out
add
cwtl
stc
push
mulb
lret
inc
cli
out
lret
cmp
adc
push
sbb
sbb
sbb
xchg
dec
enter
or
in
cltd
xchg
ja
jp
mov
nop
or
cwtl
loopne
and
mov
sub
pop
mov
shlb
gs
jecxz
and
pop
daa
adc
or
sbb
xor
cmp
cmp
cmpsl
mov
jne
pop
leave
dec
lcall
cmp
daa
fcoml
jmp
xor
bound
push
outsl
cmp
cmp
mov
push
add
mov
or
mov
mov
or
xchg
fdivr
xchg
add
dec
adc
xchg
push
push
adc
sbb
and
lds
push
mov
gs
jge
xor
sahf
in
repnz
and
sub
and
sub
xchg
enter
add
andb
shll
xor
xchg
add
or
lea
stos
mov
jge
rclb
or
pop
bound
test
je
sbb
outsb
das
sbb
sbb
jnp
idivb
adc
pop
inc
ret
ret
xchg
adc
daa
mov
bound
dec
add
sbb
loopne
mov
movsb
imul
mov
andb
js
inc
repnz
shrl
pop
into
sub
stc
pop
cmpsl
and
mov
push
lods
mov
fcomi
add
btc
cmp
push
lret
xchg
xor
adc
cmp
sbb
dec
jp
mov
adc
and
add
sub
xor
mov
nop
js
iret
jno
mov
xor
addr16
cmp
xchg
and
pop
pop
test
and
mov
movsb
mov
fsubs
mov
or
jg
xchg
jmp
push
insb
and
push
fildl
mov
out
cmpsl
pop
cmp
or
inc
mov
inc
int3
cwtl
insb
mov
xchg
xchg
pop
xlat
and
clc
push
loopne
les
in
and
arpl
adcl
push
add
cld
mov
shrl
jnp
add
cmp
ds
pop
dec
mov
nop
xchg
add
adc
fucomp
ret
xchg
jne
testl
iret
lret
inc
lods
ljmp
shl
or
fadd
or
push
insl
adc
adc
jecxz
aad
lret
xlat
negb
loope
adc
xchg
int3
pop
xorl
xchg
dec
inc
js
or
adc
inc
cmpb
adc
scas
fstps
and
lcall
mov
add
and
pop
fstpt
or
and
outsl
cmp
push
pop
hlt
nop
es
cmp
jecxz
es
adc
repnz
pop
push
dec
xchg
jo
shll
lods
stos
inc
mov
ljmp
aam
addl
lahf
lret
pop
mov
daa
movsl
and
sub
das
add
mov
cs
sbb
cli
data16
sub
loopw
mov
lcall
jge
pushf
push
push
into
in
and
xor
xor
iret
push
fcomps
or
or
xlat
or
mov
stos
repz
xchg
out
mov
jmp
cwtl
sbb
movsb
in
loop
add
scas
sti
lret
js
push
mov
push
pop
lahf
rclb
movsl
xchg
xorl
sbb
sub
xor
mov
adc
frstor
xor
les
repnz
inc
push
rol
outsl
xchg
movb
popa
rep
and
dec
pop
push
xor
mov
mov
daa
inc
int
addr16
push
and
add
bound
dec
negl
inc
pop
fnstenv
xchg
lea
mov
ja
scas
mov
cmovns
mov
jg
into
testl
and
movsl
roll
es
ds
rorl
call
xchg
roll
or
leave
cmp
jnp
mov
mov
insb
inc
in
or
add
lcall
mov
cltd
push
lea
adc
lret
mov
jl
sub
push
in
mov
or
dec
jmp
aad
or
inc
jbe
jmp
sbb
mov
loopne
imul
dec
cli
mov
out
push
xchg
add
nop
dec
mov
sub
push
mov
and
orl
mov
jge
mov
sahf
pop
pushf
enter
sbb
notl
icebp
add
dec
and
pop
ret
leave
add
in
rolb
bound
testb
cmp
xor
xor
stos
fistpl
addl
add
inc
xchg
jae
cmovnp
mov
aam
and
mov
bound
add
adc
fidivs
adc
mov
mov
mov
lods
cmp
insb
and
xchg
shl
jbe
out
test
ds
pop
clc
jo
mov
xchg
pop
or
sbb
test
aas
inc
cmp
cmp
fwait
or
je
and
ret
xor
loopne
mov
jp
mov
jne
or
push
cmp
daa
aaa
lret
xor
loopne
or
rolb
addr16
lcall
addl
mov
mov
and
lcall
pop
adc
in
pop
popaw
jbe
stos
mov
push
mov
xor
test
mov
jo
repz
out
adc
popa
enter
add
sbb
es
mov
mov
adc
jnp
cmp
aam
fs
fwait
aam
sub
sub
xor
in
mov
cmpsb
mov
jmp
cmc
add
in
js
and
xchg
cs
push
lea
test
mov
cmp
add
cli
das
roll
jmp
cmp
outsl
rol
and
pop
mov
or
add
roll
cwtl
jbe
lea
fidivl
es
push
push
test
addr16
cmc
movsb
adc
and
or
and
or
sub
add
arpl
push
daa
sbb
pop
jo
and
cmpsl
lret
icebp
mov
xchg
or
nop
out
mov
aad
dec
es
repnz
rcrl
sbb
popa
aaa
bnd
and
nop
nop
pop
insb
jno
jecxz
inc
and
inc
cli
adcb
aaa
cmp
sti
mov
jle
mov
or
popf
lods
xchg
inc
jg
xor
ss
mov
ds
fs
jge
cmpsb
addr16
addr16
cmp
movsb
dec
roll
stos
aam
or
outsl
cs
test
mov
dec
shrb
xor
adc
sub
dec
insb
bound
shll
shl
inc
addb
loopne
ljmp
mov
inc
jbe
adc
pop
pop
xor
ss
cltd
or
jp
mov
aas
loope
sbb
inc
repnz
insl
aad
dec
add
lock
push
lods
call
jae
in
addb
add
push
pop
out
jecxz
adc
sbb
data16
hlt
add
pop
shlb
pop
loope
addb
inc
pop
sahf
mov
stos
pop
or
or
push
ja
out
je
mov
adc
shlb
ret
lock
movsb
ja
cmc
pop
into
pop
lcall
fs
xor
mov
leave
andb
sti
mov
ss
shrb
lea
push
sbb
rolb
mov
push
sbb
rcr
out
push
or
pop
inc
lret
jo
loope
dec
sbb
sbb
fbld
adc
pop
pop
int3
mov
inc
shlb
mov
outsl
ret
insb
fsubrs
cmp
shll
pop
out
into
mov
fldcw
out
setnp
gs
cltd
cltd
push
cmpsb
testb
cmp
dec
in
xlat
aaa
lods
repnz
fwait
shlb
mov
jne
add
xor
jnp
mov
cmpsl
sub
test
je
xchg
aad
bound
and
cmp
mov
imul
in
cmp
dec
shlb
and
adc
jo
test
pavgb
scas
sarl
movsb
xor
sub
in
mov
add
leave
je
shrb
roll
loopne
xchg
insl
inc
push
test
or
lods
ret
test
test
push
jge
loop
inc
sub
or
sarb
nop
in
mov
mov
scas
mov
or
movsb
lcall
fmuls
jnp
movsb
adc
dec
and
xor
sub
in
ret
xor
imul
mov
pop
and
mov
popa
popf
iret
or
in
xchg
lds
xchg
js
sarl
bound
stc
mov
jb
xchg
xchg
mov
xor
mov
dec
sub
cmp
addl
andb
xchg
pusha
repnz
jp
mov
pop
or
test
jle
sbb
aad
mov
ss
ja
arpl
cmp
ret
icebp
shrl
mov
or
dec
xchg
shll
or
xchg
add
cmp
xchg
dec
adc
fwait
repz
shrb
sub
movsb
and
js
sub
or
iret
jae
dec
sbb
cmpl
sti
orl
xchg
xor
leave
dec
xchg
mov
xchg
ret
and
dec
pop
insl
xor
jecxz
js
outsl
xchg
inc
push
mov
notb
or
mov
jmp
pop
dec
dec
or
mov
jg
sbb
inc
lcall
test
pop
xchg
inc
and
lea
cmp
rolb
rcrb
inc
bound
pusha
jo
nop
dec
cmp
cmp
insl
mov
xor
imul
pop
mov
cmp
pushf
pop
adc
imul
fs
xchg
or
pop
dec
jnp
ret
mov
fsub
movsb
add
sbb
jns
mov
cmp
fnsave
inc
xchg
cmpsl
fsts
divl
in
adc
dec
or
pop
in
mov
jmp
ds
sub
dec
push
mov
rolb
push
adc
movsl
addb
or
xchg
nop
push
push
repnz
jp
adc
lret
sbb
flds
in
and
arpl
jbe
bound
cmp
clc
leave
fucom
adc
fsubl
and
out
xor
jns
ljmp
xor
xor
mov
pop
or
movsw
mov
mov
movsl
mov
pop
rorb
xchg
scas
out
xchg
filds
or
or
out
outsb
inc
arpl
mov
mov
cmpl
lret
xchg
or
addl
popa
sub
and
mov
mov
gs
hlt
shrb
mov
adc
ss
loopne
fists
roll
jge
xor
sbbb
sahf
or
lods
push
mov
dec
adc
mov
and
into
inc
fstpl
mov
adc
add
popa
mov
sub
sbb
fadds
packuswb
xor
mov
shll
icebp
or
fs
hlt
or
in
add
push
iret
sub
pop
or
loopne
push
sbb
test
inc
jo
pop
cmpsb
or
arpl
mov
add
out
push
data16
icebp
or
and
lock
leave
loope
fs
loope
inc
mov
lret
js
loope
or
jns
gs
jl
push
adc
pop
add
cltd
int3
xor
and
push
nop
or
mov
xchg
dec
stc
push
add
lods
test
and
ret
mov
lcall
sbb
clc
pop
jb
push
and
mov
and
mov
aad
cmp
test
push
jle
mov
cmpsb
je
xchg
adc
daa
lret
xorl
jb
mov
or
dec
xchg
dec
dec
push
ret
fs
and
push
fists
out
movb
adc
push
push
int
pushf
test
or
dec
xchg
rcll
or
or
fldenv
movsl
xchg
and
nopl
and
cmp
adc
mov
movsb
inc
mov
add
fisttps
push
fists
mov
xor
or
and
lahf
push
or
and
mov
pcmpeqb
mov
mov
sub
mov
dec
pop
add
sub
test
int
inc
mov
push
push
rcrl
int
xchg
xor
adc
fadds
cmpsl
dec
lahf
cld
mov
bound
add
sti
scas
pop
sbb
jbe
and
push
insb
or
sahf
xchg
inc
insl
xor
call
movsl
xor
loop
xor
pop
iret
gs
push
mov
jmp
xchg
jecxz
adc
je
cld
mov
cmp
jecxz
bound
xor
push
sub
dec
js
xchg
aad
sub
or
add
hlt
dec
fsubrs
leave
push
jp
lea
pop
or
sub
xor
jp
xchg
cmp
sbb
sbb
mov
std
xchg
mov
popa
xlat
in
outsb
push
mov
fnstcw
sbb
dec
lret
dec
idivl
pop
mov
adc
fs
pushf
and
xor
xor
mov
pushf
and
push
xor
inc
loopne
inc
push
imul
aaa
sub
xchg
xchg
addr16
xor
mov
fdiv
int
data16
xchg
pusha
fimull
mov
mov
ja
push
rorb
jno
and
sbb
sbb
and
adc
pop
adc
inc
mov
sbb
adc
cmc
iret
sahf
sbb
cmp
fwait
das
cmpsb
push
dec
cli
lds
fldl
nop
clc
adc
or
push
sbb
mov
shll
jno
push
movsb
fld
dec
inc
int3
inc
lcall
int
outsb
fs
dec
cmp
out
or
add
adc
pusha
pop
pusha
add
mov
jp
insb
xchg
std
or
add
test
sub
dec
hlt
adc
adc
jge
xchg
out
pop
jmp
pop
repz
movsb
repz
mov
xchg
arpl
leave
push
sahf
out
jcxz
xchg
xor
xor
addr16
repnz
add
cmp
cmpsb
outsl
mov
mov
loop
jl
adc
cmp
rorb
pop
mov
arpl
and
mov
adc
push
lods
das
pop
test
sahf
sub
setbe
insb
xchg
fisttps
in
rolb
jno
shrb
push
js
cmp
or
adc
inc
mov
outsb
or
imul
enter
clc
ja
dec
call
and
dec
mov
mov
jl
adc
and
stc
cmp
imul
mov
lds
push
or
mov
sub
shr
xchg
out
and
pop
mov
dec
mov
dec
jns
adcb
sbb
xchg
loop
dec
mov
or
sbb
xchg
es
add
movsb
popl
out
inc
add
aam
jle
sbb
mov
mov
mov
sub
dec
pop
dec
push
or
pusha
std
fidivrl
xchg
add
roll
jno
mov
or
push
loopne
add
xor
xchg
lock
lea
into
add
fstps
in
cmp
leave
out
mov
xchg
inc
add
out
fisubs
sbb
pop
fwait
jge
jo
mov
xor
jae
test
nop
sbb
fidivrl
add
push
test
cli
pop
pop
xchg
pop
andl
adcb
xor
cmpsl
insb
mov
or
enter
and
pop
mov
inc
mov
mov
fiadds
jl
push
mov
pusha
xor
jl
sbb
push
movsb
sub
pop
pop
xchg
lods
dec
sub
xchg
je
fistl
shlb
lahf
or
dec
push
xor
nop
and
jl
gs
cmp
xor
sub
clc
in
sbb
dec
xor
sti
sbb
push
fwait
pusha
adc
cmp
and
mov
daa
xchg
pop
sub
roll
and
frstor
dec
xlat
stos
xor
push
lods
pop
inc
add
stc
mov
push
jecxz
cli
mulb
aas
pusha
inc
inc
xchg
aaa
sbb
cs
mov
adc
insl
scas
mov
movsb
jne
mov
nop
ds
push
jecxz
mov
scas
cmp
jecxz
adc
lahf
xchg
add
in
xlat
jge
test
xor
fsts
loopne
xor
jnp
and
test
and
jb
mov
cmp
push
cmpsl
movsb
arpl
jecxz
ja
pushf
push
es
ljmp
insb
xchg
dec
in
js
xor
js
mov
or
fiadds
add
dec
mov
outsl
adc
xchg
push
sbb
mov
into
popf
ljmp
cmp
roll
cmp
int
adc
mov
mov
push
les
iret
in
xchg
call
mov
shrl
imul
mov
or
test
jmp
inc
roll
mov
loope
pushf
mov
fnstcw
jg
cmp
mov
xchg
shll
int
testl
xchg
iret
mov
int
ja
fwait
aaa
mov
mov
dec
xor
push
mov
mov
dec
adcb
push
pop
rorl
loop
ds
add
icebp
pop
add
xchg
ret
cmpsl
gs
mov
push
nop
pop
inc
cmp
dec
cmp
adc
pop
push
inc
dec
and
jb
lock
mov
cmc
pop
pop
push
cmp
sub
jbe
je
push
lcall
xchg
sbb
sbbl
int3
dec
iret
or
and
jo
sbb
cs
xor
mov
ljmp
mov
call
mov
ret
ljmp
inc
mov
data16
sti
dec
orl
addr16
pusha
mov
pop
mov
push
xor
mov
adc
push
xor
mov
or
aam
rorl
pop
roll
sbb
lock
dec
jbe
mov
xchg
js
inc
daa
jle
and
mov
sahf
mov
outsl
js
inc
lods
ja
fbld
xchg
rdmsr
mov
insb
jp
add
sbb
mov
pop
popf
bound
leave
mov
decb
andl
arpl
dec
repz
int
cltd
jb
or
adc
mov
mov
lcall
or
fwait
mov
sbb
hlt
arpl
int3
add
jmp
xchg
ss
jne
xor
sub
xchg
push
xchg
sbb
or
cmc
data16
lgs
push
adc
adc
add
clc
or
cli
arpl
mov
enter
nop
add
inc
inc
inc
push
stos
pop
push
hlt
mov
lock
test
daa
cmp
push
pop
flds
out
movsl
cmp
cwtl
cli
out
xor
pop
push
inc
out
sub
pop
cmpsl
js
mov
or
mov
leave
jg
cmp
sbb
icebp
nop
mov
loop
rorl
or
cmp
xchg
sbb
pop
insl
push
movsb
icebp
inc
ss
jg
sbb
mov
sbb
xchg
or
std
xlat
movsl
xchg
in
sub
xchg
pushf
cmp
and
fsubs
xchg
mov
inc
lock
nop
or
leave
inc
aaa
repz
push
cwtl
mov
sbb
test
jo
or
push
and
push
cmp
and
and
in
mov
loop
frstor
push
and
andb
pop
xor
mov
jmp
mov
add
sub
es
shl
shll
mov
cmp
jp
cmpsb
das
jnp
xchg
cmp
pop
xor
lods
inc
inc
push
test
xor
xchg
std
or
in
movsb
bound
inc
test
pop
fimull
xorl
movsl
test
int
mov
xchg
sbb
lret
insl
xchg
and
adc
mull
xchg
mov
ss
lods
lods
push
push
xchg
or
cltd
sub
outsl
or
pop
and
imul
loope
mov
xchg
push
or
lea
add
inc
xchg
adc
nop
and
xlat
add
ret
sbb
jge
stos
and
imul
testb
or
cli
pop
jmp
cwtl
adc
add
xchg
incb
clc
rol
sbb
xchg
add
shlb
cltd
sbb
xchg
dec
loopne
imul
fimuls
and
mov
jo
rcll
cmp
dec
pop
sbb
out
mov
in
add
add
scas
mov
testb
and
mov
aaa
jnp
cmpl
ret
pop
mov
loope
cmpsl
fsubs
mov
jns
pop
repnz
repnz
push
push
divl
and
push
jg
hlt
xor
push
adc
imul
jne
cmpsl
out
mov
shlb
and
loopne
sub
mov
cmp
mov
push
iret
inc
enter
loopne
inc
jp
ret
dec
ret
and
mov
cmp
push
add
bound
sti
fs
lock
es
out
in
pusha
cltd
mov
push
test
mov
movsb
push
sbb
mov
adc
arpl
and
jne
andl
push
jecxz
cmpl
je
ss
enter
adc
cmp
mov
xchg
add
push
in
dec
inc
out
fs
lock
mov
jl
sub
aas
and
nop
sahf
add
cmpsb
movsb
popa
outsb
xor
xor
mov
inc
push
and
xor
push
test
pop
xlat
pop
clc
addr16
adc
insl
mov
push
test
xorb
mov
add
jge
push
and
push
das
dec
hlt
jge
les
mov
leave
add
inc
icebp
adc
ret
xor
jno
sbb
sbb
fnsave
xchg
mov
popf
xor
push
mov
mov
pushl
push
testb
pop
in
mov
popf
int
andl
aam
inc
xchg
sbb
cli
inc
nop
clc
adc
mov
out
lret
out
imul
inc
pop
adc
jno
push
inc
ds
jnp
inc
lret
or
bnd
leave
mov
arpl
loop
dec
cmp
outsb
sbb
sbb
sahf
pop
jo
sarl
loopne,pt
jo
jns
movsb
add
sbb
pushf
pop
xor
test
out
in
adc
aad
jl
sbb
adc
bswap
dec
pop
sbb
loop,pn
aam
arpl
arpl
je
xchg
push
ret
mov
dec
mov
subb
ss
pop
xchg
mov
movsb
test
lds
mov
les
cmp
addl
inc
hlt
adc
jns
sbb
lret
sti
cmpb
add
jmp
inc
pop
lock
jmp
imul
jnp
fdivs
cmp
add
int
jns
in
and
push
fistpll
fnstcw
push
stos
jnp
lock
dec
xchg
push
lock
dec
fisttpll
lock
or
add
cmpl
jo
pop
sub
popw
dec
adc
fs
idivl
push
cmpsb
cmp
sbb
xor
test
xor
dec
jno
adc
mov
sbb
push
cmp
dec
mov
xchg
leave
daa
xchg
cwtl
sti
mov
leave
cmpsb
mov
mov
pop
btr
andl
xor
cmp
std
dec
or
mov
shlb
mov
pusha
and
dec
push
pop
clc
adc
out
inc
xchg
sub
jmp
add
scas
hlt
cmp
jecxz
les
sub
fistpll
jnp,pt
mov
inc
sub
int
push
sbb
bound
jge
mov
es
dec
add
icebp
mov
xchg
jmp
iret
pop
js
shlb
dec
mov
ret
cmp
aad
fidivrl
mov
cmp
xchg
leave
repz
adc
sbb
rorl
jo
fadds
push
addr16
inc
scas
sbb
in
fwait
fs
pusha
adc
ljmp
scas
sbb
test
dec
adcb
jle
shlb
clc
je
fdivs
out
test
xlat
or
mov
fwait
cmp
pop
pop
jl
xchg
inc
or
pop
xchg
int
sub
inc
xor
lcall
cmpsb
cmp
add
imul
dec
inc
xchg
fsubl
sub
mov
sub
inc
add
jmp
jp
rcrb
sub
sbb
insb
cmpsb
push
and
movsl
inc
mov
or
mov
pushf
fs
pop
push
lock
out
iret
xor
or
sub
or
jge
xorb
cmp
mov
push
out
push
adc
jne
adc
clc
stc
push
sbb
loopne
sbb
fwait
loopne
mov
shll
or
mov
and
js
lds
dec
mov
mov
adc
ja
inc
push
sub
repz
les
xor
mov
push
mov
test
and
mov
loop
in
add
pop
push
in
push
sub
sbb
and
or
js
in
mov
add
out
adc
in
cs
sub
mov
xchg
mov
jnp
push
jbe
cmp
xchg
int
add
push
sub
mov
mul
and
jae
and
scas
flds
lahf
inc
fnstcw
or
cwtl
sub
fldenv
daa
pop
into
ds
cmp
rcrb
cmp
mov
scas
ja
sbb
dec
shll
inc
test
mov
aam
xchg
sti
ds
jns
xchg
cwtl
lods
push
inc
xchg
lods
sub
ret
add
mov
mov
mov
aaa
dec
lret
mov
fbstp
cmp
dec
stos
xchg
loopne
add
lret
cli
mov
sub
xchg
rorb
inc
add
mov
push
aam
fnsave
adc
movsl
add
imull
loop
adc
cmp
xchg
push
pop
ficomps
or
xor
test
xor
lds
dec
mov
adcb
cs
xlat
cmp
dec
mov
push
push
dec
xlat
leave
push
jg
sub
in
and
addb
pusha
adc
inc
jl
lret
je
or
pop
lock
pop
fucom
imul
addl
pop
jl
xorb
loop
es
dec
add
arpl
sti
sbb
fs
jmp
ror
pop
jne
inc
adc
les
push
xchg
pop
xchg
lret
aam
enter
cmc
push
es
arpl
stos
outsl
fmull
mov
rcll
lcall
negb
mov
inc
lret
lcall
arpl
add
in
outsb
jp
repnz
testl
fsubrl
push
or
pop
add
icebp
mov
push
testb
mov
cmpsb
add
mov
call
rcr
mov
mov
cs
stos
ret
or
sbb
mov
inc
add
mov
and
jnp
pop
sbb
in
sbb
jne
xchg
xchg
xchg
nop
pop
dec
into
cmp
sbb
pop
ss
push
scas
lock
xor
add
inc
inc
fwait
mov
adc
xlat
test
scas
sarb
jae
mov
adc
pop
mov
dec
cmp
cmpsl
push
add
leave
sub
push
inc
push
test
xchg
ret
loope
push
mov
add
pop
xchg
je
push
inc
jle
adc
aad
jo
add
and
add
movsb
jmp
les
iret
loop
mov
outsb
mov
mov
sbb
bound
inc
pusha
cmp
test
int3
negb
or
sti
adc
push
sub
xor
add
pop
das
aaa
push
rolb
pop
shlb
cmc
xchg
pusha
ret
adc
pop
adc
fstl
jle
add
xchg
loop
lods
es
sahf
mov
loopne
ss
add
lcall
and
dec
mov
xchg
add
dec
arpl
mov
ss
ret
cmpsb
pop
sub
fstpl
lret
push
mov
push
xor
pushf
mov
sbb
dec
popa
cmp
jnp
sub
in
sbb
stos
xchg
fistl
inc
sub
lds
repz
adcl
cwtl
cmp
dec
testl
int3
xor
inc
push
gs
fdiv
mov
xor
sti
in
cltd
dec
inc
xchg
cmpsb
bound
sbbb
adc
dec
inc
icebp
mov
outsl
leave
adc
cwtl
push
sbb
ds
xor
addl
das
or
jmp
aaa
mov
jb
outsl
mov
inc
ss
and
pusha
adc
movsb
mov
or
in
cmp
jno
ficoms
or
cmp
clc
cmp
inc
and
adc
sbb
mov
jo
mov
lcall
repnz
mov
mov
xchg
bound
push
dec
mov
cli
in
add
lock
lock
push
push
sbb
cltd
xchg
xor
inc
bound
inc
add
test
jno
and
aaa
or
icebp
movsb
rol
push
jnp
clc
mov
outsl
scas
bound
rcr
cmp
add
mov
push
fnsave
mov
inc
and
inc
jns
call
ds
mov
cld
push
ret
push
xchg
iret
lea
in
mov
mov
pop
xchg
xchg
jle
fdivl
out
or
lret
call
iret
and
sbb
icebp
dec
sti
xor
fdivrs
insb
lcall
stos
lods
into
sbb
jl
or
xor
lahf
push
arpl
popf
xchg
mov
mov
adc
jns
jae
push
inc
pop
mov
in
and
dec
jb
fld
mov
mov
adc
daa
lock
int3
jns
loope,pn
js
push
pusha
xchg
xor
popf
mov
scas
cmp
or
jle
lret
test
shll
or
aam
rorb
rorl
repz
fisttpl
out
je
xchg
mov
xchg
cmp
rcrb
pop
mov
loope
mov
dec
push
icebp
or
andl
nop
mov
mov
mov
out
dec
and
and
sbb
mov
jmp
pop
mov
pop
sub
dec
inc
orl
mov
cld
adc
lds
stc
jl
mov
cmp
ss
int
iret
addl
mov
filds
lcall
iret
out
xorw
jns
pusha
inc
daa
pusha
mov
ja,pt
mov
mov
sbb
ss
popa
je
addb
out
adc
xor
push
repz
sbb
or
inc
ds
sahf
pusha
adc
xchg
in
lcall
jl
aas
fistpll
push
fcompl
enter
push
arpl
int
aad
sahf
iret
leave
fidivs
push
enter
mov
jecxz
push
in
or
repnz
dec
fadds
xchg
sti
sti
test
jge
dec
push
jmp
jo
xor
scas
pop
lcall
cs
fimull
xchg
rol
mov
scas
insl
xor
sbb
dec
daa
add
in
mov
ja
fsubs
inc
mov
enter
mov
push
mov
movsl
adc
cmpsl
enter
lahf
jbe
inc
push
rolb
mov
cmp
adc
mov
mov
pop
mov
inc
xchg
xor
movsb
je
lcall
mov
sbb
cmp
push
inc
sbb
int3
sbb
adc
arpl
inc
add
loop
sbb
sub
shr
call
popa
stos
push
pop
jno
xchg
in
mov
dec
nop
xorl
in
mov
and
xchg
push
adc
cli
or
sbb
popa
inc
ljmp
mov
or
pop
shlb
stc
adc
cs
out
add
pushf
stc
loop
gs
jbe
or
mov
testb
sub
outsl
xchg
frstor
and
sbb
pop
inc
xor
pop
sbb
adc
add
cmp
xchg
push
inc
mov
cmp
pop
inc
cwtl
rcr
roll
fdivs
push
inc
and
les
das
es
push
xchg
jmp
mov
out
and
cmpsb
push
sub
adc
inc
pop
xchg
iret
pop
add
aam
mov
mov
xchg
lret
xchg
in
inc
and
mov
bound
jecxz
test
je
mov
lds
test
lods
mov
dec
inc
hlt
bswap
xor
push
loope
rcrl
push
aas
ss
push
gs
arpl
adc
insb
nop
jb
sub
xchg
jno
in
push
leave
roll
xchg
lahf
lds
rcll
push
je
pop
loopne
lret
movsl
jmp
cli
push
fcomps
movsl
out
out
mov
loopne
lods
mov
sti
adc
iret
mov
add
xor
push
lods
lea
add
fildl
xor
stos
mov
cmp
faddl
sti
mov
xor
lods
xor
loopne
out
inc
adc
push
rolb
lcall
mov
aad
lock
cwtl
adc
fsts
sbb
push
mov
ficoml
add
imul
push
push
hlt
pop
push
aaa
or
enter
data16
je
inc
enter
xchg
rcl
jmp
or
mov
adc
adc
dec
out
imul
push
fsubrl
adc
xor
enter
cltd
jecxz
and
sub
lods
push
andl
rcrb
hlt
push
xchg
in
jb
cltd
adc
lods
mov
push
mov
pop
inc
nop
add
out
mov
loop
fdivrl
and
add
rcl
add
push
cmp
cmp
inc
in
enter
adc
and
mov
mov
mov
rclb
cmp
mov
adc
imul
mov
gs
sub
fs
inc
cli
lock
arpl
inc
mov
outsl
loope
mov
ja
dec
pop
aas
pop
mov
repnz
lret
clc
pop
push
enter
orl
ret
pusha
loope
or
cmp
xchg
sub
ret
pop
cld
bound
fildll
pop
rcll
cmp
in
sbb
test
sbb
flds
mov
or
mov
cltd
stos
and
push
call
pop
add
stc
imul
xlat
stc
cmpsl
sbb
mov
movsl
inc
add
dec
xor
in
push
or
mov
xchg
mov
push
jnp
mov
fs
test
cmpsl
jmp
and
psllw
jbe
cmp
inc
cmp
dec
mov
movsb
outsb
fs
js
sub
pop
daa
pop
sbb
push
mov
adc
in
repnz
dec
or
add
cmp
mov
ror
icebp
movl
nop
imul
inc
loopne
icebp
popf
jge
shlb
mov
out
in
lcall
psubd
into
inc
inc
sub
addb
filds
gs
mov
iret
push
xchg
dec
test
outsl
pop
and
push
aad
sub
push
push
popa
xlat
popa
dec
push
push
je
les
sbb
icebp
pushf
nop
push
xor
or
mov
xchg
sbb
jl
das
orb
and
pop
inc
pushf
dec
and
and
xchg
bound
mov
add
and
sbb
add
cltd
jmp
sub
loop
imul
pop
sub
xor
xchg
cmp
inc
rclb
scas
mov
shrl
or
dec
int3
jne
push
popa
pusha
popf
rcll
test
xchg
je
sbb
icebp
insb
push
cwtl
pop
xor
icebp
bound
std
sub
mov
aam
sbb
sbb
enter
cmp
adc
add
and
adcb
cmp
mov
iret
adc
jmp
cmpsb
inc
cmc
xchg
clc
es
push
jno
lods
cmpsl
xor
mov
dec
pop
lret
xchg
cmpsb
imul
subl
mov
mov
fldl2t
jo
sub
ret
sbb
cmpsb
and
arpl
call
dec
ss
inc
data16
push
push
fnstenv
cmpsl
cld
adc
sub
jle
lock
and
mov
pusha
sbb
lcall
popa
mov
loop
test
mov
or
mov
sbb
jecxz
icebp
cs
insl
in
jge
dec
push
lods
mov
push
jp
dec
push
add
in
fcomps
cmp
fstpl
and
out
and
mov
mov
pop
xchg
rolb
cmp
loope
adc
xlat
and
fbld
inc
inc
ljmp
push
pushf
mov
in
mov
and
dec
arpl
add
loopne
sbb
ret
cmpsb
mov
or
mov
aas
sub
data16
ret
push
cld
mov
outsl
movb
scas
inc
pop
mov
and
jl
sub
std
fsub
dec
or
cmp
mov
adc
clc
add
and
add
js
icebp
push
jns
imull
pop
dec
inc
jae
dec
or
nop
mov
movsb
fwait
loopne
or
push
push
mov
jnp
jno
jmp
insl
or
mov
jecxz
cli
adc
fnstcw
mov
sub
adc
push
mov
sub
arpl
aad
call
add
lea
lds
and
xchg
loopne
pop
inc
adc
hlt
sbb
dec
jl
push
cmpsl
or
lds
push
or
xchg
jecxz
out
rol
xorb
out
mov
loopne
repnz
nop
into
xchg
xchg
dec
in
or
pop
mov
cltd
pop
inc
add
xor
in
push
sarb
shll
mov
aaa
dec
lds
ljmp
sbb
mov
fildll
dec
shl
cmpb
adc
es
pop
addr16
xchg
stos
into
mov
and
lock
fdivs
push
xor
es
mov
shl
sub
xor
pop
js
popf
cmc
stc
mov
ljmp
stos
mov
pop
add
pushf
and
scas
jg
xchg
xor
iret
rclb
xchg
sbb
push
mov
leave
jo,pt
cmp
xor
mov
scas
pushf
inc
loopne
mov
push
inc
cld
leave
or
cmpsl
or
xor
mov
data16
push
mov
sub
in
sarl
int
test
dec
push
imul
stc
jno
arpl
mov
push
es
and
pushf
and
adc
inc
icebp
lahf
cmc
mov
cmp
stc
sub
scas
push
jecxz
int3
and
loope
shl
lock
sahf
ds
xchg
add
adc
xor
sbb
stc
cmp
insb
sbb
outsl
inc
adc
sti
xor
sbbl
cmp
stc
test
jb
icebp
scas
xchg
fldt
pop
add
test
jns
in
pop
sub
fsub
sbb
or
clc
add
stc
sbb
jp
xorb
pop
push
ret
sbb
jb
mov
fidivl
loopne
cmp
mov
adc
pop
dec
in
mov
cmpsb
inc
nop
cmp
push
repz
cltd
cmp
cmpsb
push
aam
shll
xor
xchg
outsl
lret
les
jmp
push
mov
fimuls
fdivrs
or
adc
sbb
int
pop
mov
rcll
or
mov
push
movsl
add
jno
xchg
aas
dec
loopne
dec
loopne
out
pop
nop
jo
inc
xchg
into
test
jmp
aad
push
cmp
inc
cmp
jp
int3
pop
imul
loopne
lds
dec
xchg
addr16
je
loopne
cmp
mov
cltd
push
out
add
cmp
mov
int3
imul
add
ja
or
pop
push
dec
push
mov
mov
jo
stos
sub
jl
pcmpgtb
sbb
xor
xlat
gs
cli
addb
jnp
mov
cmp
inc
sahf
ret
fidivs
icebp
orl
rorb
xor
sub
fidivs
testl
jmp
std
pop
icebp
les
xchg
int
jl
mov
add
jge
dec
add
jbe
pop
jl
adc
scas
pop
popf
adc
bound
cmp
jle
add
add
std
jns
pop
cmp
and
sbb
or
xchg
sub
je
sbb
inc
mov
or
jns
mov
add
xorb
pop
dec
cli
dec
rorl
xor
mov
cltd
mov
ret
pop
pop
mov
sbb
lcall
cmc
mov
xchg
cmp
or
sbb
push
sbb
das
stos
sub
icebp
xor
gs
push
pop
icebp
es
fs
loopne
adc
add
push
mov
dec
popa
mov
pusha
in
cmp
and
mov
dec
les
mov
imul
cmp
cmp
xchg
das
insl
push
push
and
inc
test
xor
jo
rcl
mov
xor
adc
mov
cli
mov
sbb
push
insb
push
cs
jmp
shr
stos
dec
sbb
mov
cmp
push
mov
or
mov
push
aaa
popa
shlb
cmp
dec
rcrl
into
rorb
or
or
inc
push
ds
pop
shll
les
mov
stos
fs
inc
inc
xor
mov
adc
mov
sbb
adc
adc
or
imul
cmp
icebp
mov
or
mov
mov
inc
mov
pop
push
movsb
loope
lcall
shl
pop
in
add
mov
movhps
cmovle
subb
daa
inc
xchg
mov
and
loop
iret
mov
xchg
or
lret
das
cmp
mov
push
pop
adc
or
jnp
rcrb
inc
lock
jnp
outsb
pop
out
mov
or
ret
out
add
mov
xor
mov
cmpsl
add
loope
push
mov
mov
xchg
jne
mov
pop
cli
inc
daa
mov
xorl
inc
add
loop
sbb
xor
pop
es
inc
and
pusha
insl
cwtl
mov
rclb
cmp
stc
jl
xorb
popa
in
xchg
test
ljmp
sub
rclb
and
bound
dec
jbe,pn
or
jmp
push
stc
jg
jmp
mov
in
and
cs
push
lahf
mov
or
sbb
mov
loope
or
addr16
dec
inc
mov
cmp
data16
inc
xchg
sbb
es
or
cs
inc
test
lcall
mov
sbb
cmp
xorl
pop
roll
rclb
leave
xchg
push
and
es
in
jle
xchg
rorl
cltd
xchg
rorb
fdivl
sub
mov
push
ljmp
mov
jo
cmp
lock
ret
and
sbb
out
or
popf
inc
jno
dec
push
popf
jno
mov
inc
adc
or
pop
mov
cmp
setae
pop
inc
call
or
bswap
inc
mov
les
jmp
es
or
daa
push
mov
movsl
jae
into
scas
daa
int
fs
pop
cmpsb
icebp
andl
and
jo
mov
addb
sbb
cltd
adc
ja
push
adc
outsl
scas
cmpsl
movsb
mov
adc
icebp
aam
jb
arpl
mov
pop
pop
sarb
add
filds
or
fwait
test
aaa
mov
add
lods
gs
push
cmpsl
andl
dec
mov
dec
sbb
pushf
out
cmp
stc
or
jnp
pop
inc
xchg
add
repz
sahf
daa
add
test
push
lahf
lcall
test
mov
or
push
adc
lods
push
mov
cmc
popa
mov
into
and
loopne
addr16
lret
or
sbb
shlb
cmp
sbb
loop
mov
add
pop
iret
cs
cltd
adc
mov
sub
inc
gs
inc
clc
mov
cmp
mov
test
add
stc
mov
daa
push
dec
dec
daa
rcl
fs
jg
notb
cmpsl
dec
dec
inc
pusha
xchg
mov
in
sbb
push
mov
popa
in
mov
testl
mov
xchg
shrl
ss
mov
pop
push
out
dec
test
mov
inc
xchg
pop
mov
imul
stos
aaa
dec
dec
je
pop
aad
or
xor
mov
mov
cmpsb
push
add
dec
cwtl
int
daa
adc
setb
and
clc
push
test
gs
test
push
cmp
or
aam
add
sbb
add
add
stos
ds
ja
pop
iret
fst
cmpsb
cmp
les
lods
inc
push
cli
and
sbb
movl
inc
dec
call
mov
xor
jle
push
mul
sub
je
adc
push
cwtl
or
add
nop
sub
loopne
xor
aaa
outsl
negl
andl
dec
dec
mov
sbb
ret
pop
insl
push
xchg
mov
aam
jns
and
dec
lahf
or
pop
test
jg
pextrw
inc
sbb
push
cmpsb
int3
icebp
xorl
imull
jne
xor
xor
xchg
repz
scas
xchg
dec
and
sarl
dec
test
xchg
test
sbb
stc
inc
push
loopne
test
inc
out
mov
or
arpl
loopne
movsb
jnp
subl
stos
dec
cltd
jge
xchg
jnp
push
sbb
cmp
push
and
scas
out
insl
cmp
ja
jne
bnd
gs
adc
push
push
or
popf
add
mov
mov
daa
xlat
and
in
add
sbb
sbb
xor
mov
enter
mov
clc
pop
xor
mov
pusha
bound
and
push
mov
xchg
lock
pop
cltd
cmc
dec
enter
icebp
or
aaa
jecxz
fbld
mov
or
dec
popf
inc
push
dec
mov
insb
js
daa
dec
mov
sbb
data16
loop
and
das
or
pusha
xchg
fucomi
lock
add
lahf
rcr
push
mov
int3
push
dec
xor
xchg
loopne
rcrl
outsl
jle
sahf
mov
bnd
nop
cmp
mov
cmp
arpl
cli
push
sahf
push
or
test
sbb
cmp
and
xor
pop
mov
or
je
out
push
jae
xor
mov
push
pop
in
mov
test
mov
pop
jns
adc
cmpsb
int
arpl
addr16
mov
in
mov
rclb
lret
lods
sub
jg
pop
imul
and
icebp
xchg
xchg
mov
sub
xchg
add
lahf
mov
pop
xchg
aad
xchg
mov
xor
push
out
pop
push
les
add
imul
or
dec
xor
push
jp
rcrl
shll
cmp
mov
dec
jl
orb
int
or
mov
mov
lahf
push
sub
je
mov
in
popa
inc
jno
cmp
mov
scas
inc
dec
dec
push
sbb
adc
xchg
pop
int
sbb
movsb
pusha
movsb
sub
lods
orl
sbb
loop
testb
sbb
in
outsb
jnp
jmp
mul
adc
sub
sub
add
lods
cmp
sbb
adc
enter
xchg
arpl
cltd
es
inc
push
ret
and
jo
lret
and
loope
icebp
ds
and
lret
push
adc
iret
xchg
xor
xchg
shll
lea
adc
aaa
stc
cwtl
sub
mov
adc
outsb
movsb
es
adc
dec
push
push
lock
cmpsb
cs
outsb
iret
and
nop
mov
jmp
lahf
les
jle
data16
out
or
mov
sub
cmc
inc
sub
sbb
addr16
jecxz
jmp
mov
jae
add
loopne
xchg
sahf
push
fldenv
or
lock
xor
xchg
fisubrs
sbb
call
enter
sub
xor
cld
push
jmp
iret
daa
jl
hlt
xor
iret
adc
je
adc
or
and
push
and
mov
ret
jo
loop
xor
adc
inc
xchg
inc
cwtl
or
xchg
mov
int
popw
ret
jg
jne
sub
xchg
push
cmp
mov
or
inc
sbb
mov
sbb
pop
xchg
pop
sub
dec
add
sub
out
sbb
addl
and
into
es
mov
jecxz
sbbb
nop
loopne
out
pusha
inc
mov
out
xor
std
push
mov
dec
jecxz
fdivp
sbb
xor
pop
push
dec
scas
pop
sub
or
mov
mov
mov
sub
or
jbe
ss
push
and
adc
or
jno
mov
jb
and
pusha
jne
aas
dec
adc
xor
xchg
cmp
leave
fwait
push
cmp
shll
adc
push
adc
adc
and
and
ret
add
sub
mov
push
js
lods
sbb
jg
sbb
cmp
sub
push
aas
add
sbb
dec
addb
test
sbb
lret
mov
xchg
add
sbb
push
and
mov
adc
xchg
xor
outsl
subl
cmpl
xor
iret
sbb
stos
fnstcw
mov
cmpsl
xor
add
xor
xor
pop
movsb
dec
sub
shlb
push
fs
cmp
andl
inc
xchg
ficomps
xchg
cmp
cli
bound
ficoml
mov
ret
cmpb
popf
inc
jae
pop
jecxz
filds
addr16
xchg
lock
arpl
inc
push
or
sti
xlat
daa
cltd
dec
inc
jp
xor
inc
mov
dec
mov
out
test
in
inc
pushf
insl
sbb
sub
jns
addl
test
mov
into
mov
mov
notl
mov
gs
movsb
ss
xchg
sbb
mov
mov
inc
inc
shlb
adc
mov
mov
test
test
repz
push
add
sbb
iret
nop
inc
xchg
aam
cmc
add
and
xor
mov
or
add
stos
leave
xor
cmpsl
and
nopl
and
lea
push
push
inc
jo
iret
pop
jno
xchg
rcll
imul
dec
cmp
int
cmpsl
pop
rorb
cli
cmpl
pop
gs
test
leave
cmp
das
add
sarb
jns
hlt
mov
and
rclb
push
stos
sbb
add
xor
popa
hlt
sarb
leave
loopne
cmp
xchg
cmp
jecxz
inc
mov
cs
or
jg
mov
repnz
andb
jl
cmpl
ljmp
pop
lret
jp
or
sub
xor
loop
sub
push
or
lock
mov
rclb
insb
lock
cs
roll
mov
lcall
push
xchg
pop
push
mov
jbe
repz
arpl
adc
rcl
push
adc
sbb
rcrl
or
inc
ficomps
mov
adc
lahf
stos
jmp
and
dec
add
xlat
popa
pushf
adc
dec
fsub
scas
cs
into
or
nop
pop
pop
mov
jmp
imul
or
dec
mov
ljmp
loopne
ljmp
in
and
and
jne
loop
and
and
xor
movsb
inc
ss
or
push
mov
sti
jp
or
shll
pusha
sub
ss
cs
dec
push
dec
rclb
ret
pop
out
ja
push
cmpl
mov
xchg
jne
fbstp
xor
loop
mulb
lods
lcall
add
in
mov
inc
inc
pushf
addr16
pushf
psubsw
cmp
in
inc
aas
fstpt
xor
test
add
mov
adc
sahf
les
mov
adc
mov
jmp
jge
and
fldcw
push
cmp
mov
test
addr16
xchg
daa
lret
je
mov
jl
xchg
push
cmp
cmc
out
adc
js
add
dec
jb
xchg
jp
cmc
mov
dec
push
xchg
jge
xchg
sbb
xor
arpl
out
or
inc
push
mov
push
xor
dec
daa
sbbl
inc
jmp
iret
divb
or
pop
fadds
lahf
sbb
test
cwtl
movsb
push
adc
pop
cmp
push
push
fisttps
push
mov
mov
loop
cmp
push
dec
or
pop
sub
scas
dec
inc
enter
daa
pop
psraw
jae
pusha
rorl
pop
and
nop
jecxz
push
subl
std
sbb
ljmp
nop
xchg
cwtl
inc
cmp
repz
or
mov
cmp
scas
out
ss
or
cs
leave
and
cmp
inc
mov
movsb
les
dec
fs
jle
lods
scas
mov
mov
xor
add
sub
nop
pop
rcrb
divb
sbb
cmp
enter
out
mov
aad
and
aaa
pop
dec
sti
pushl
pop
inc
mov
in
dec
jle
int
push
pop
xchg
dec
cltd
dec
sbb
add
jne
xchg
mov
jge
fimull
ds
imul
and
fcmovbe
push
std
cmp
incl
xor
add
mov
clc
jnp
movsl
jbe
cmp
idivl
inc
subb
jle
xor
add
cmp
popa
sub
mov
jecxz
fs
fwait
in
lock
stc
push
jno
xchg
out
push
aas
push
xchg
js
gs
cmc
inc
sub
pop
pop
push
jne
data16
xor
adc
lods
xchg
imul
push
mov
sbb
dec
jle
mov
mov
xor
jb
pop
mov
icebp
shlb
dec
or
sub
rcrb
enter
and
or
or
ljmp
loope
mov
xor
push
testl
sub
ja
call
or
xchg
add
push
jb
leave
cmp
inc
jns
add
jno
scas
in
inc
and
cmp
int3
ljmp
push
jl
pop
inc
pop
enter
leave
adc
and
sbb
xchg
push
repnz
or
xchg
adc
add
cld
pop
xor
jge
sub
fchs
arpl
in
rcll
inc
scas
push
mov
cmp
pop
addr16
aam
mov
movsb
subl
inc
xchg
xchg
js
shrl
xchg
mov
dec
dec
loop
dec
cmp
mov
je
add
cmp
or
stc
mov
sbb
jae
push
push
fbld
insb
mov
das
xchg
cmp
into
xchg
jnp
add
in
or
pop
or
lret
ljmp
addb
call
ja
adc
sti
insb
dec
jnp
or
divl
push
push
daa
pop
and
xlat
adc
pop
int3
pop
pop
add
pusha
lcall
jge
test
mov
ss
in
cmp
enter
je
inc
push
test
xor
sbb
roll
cli
mov
xor
sbb
test
orl
into
pop
fcoms
adc
pop
in
cmp
popl
test
xchg
xor
dec
rcrb
scas
dec
mov
andl
dec
mov
lock
push
mov
lea
iret
sub
lretw
add
lcall
cmp
lods
mov
stos
mov
fwait
cmpsb
lock
addr16
xchg
jg
jns
xor
sub
xchg
and
ljmp
mov
andl
cwtl
and
push
adc
sbb
mov
ja
bound
lds
sahf
movsb
ret
in
cltd
and
mov
mov
and
stos
cmp
inc
lret
push
lahf
pop
pop
jl
outsb
pop
in
je
dec
bswap
xorb
inc
dec
add
or
mov
or
jge
or
mov
mov
sti
int
and
mov
sub
pop
sbb
stos
call
mov
movsb
sbb
adc
xorl
adc
adc
jbe
into
push
jno
add
inc
xchg
sbb
mov
or
xchg
mov
out
fnstcw
inc
inc
imul
ljmp
mov
and
shlb
lods
bnd
xchg
paddusw
jns
adc
imul
mov
lahf
push
and
ss
int3
dec
mov
js
sub
mov
ret
pop
jno
bound
fcom
inc
mov
push
xor
mov
push
inc
add
mov
call
cmpl
outsl
cmc
out
iret
or
or
adc
cmp
insb
inc
mov
enter
test
xchg
or
mov
inc
jmp
aam
je
out
nop
movsb
jp,pn
shlb
test
and
add
dec
jne
add
aaa
pop
lods
xchg
mov
pop
lret
and
je
jle
xchg
out
xchg
xchg
or
ljmp
sub
dec
mov
loope
fs
push
sub
dec
and
testl
xchg
push
jl
rdtsc
cli
sbbl
loopne
mul
adc
inc
lods
bound
cmp
and
sub
orb
loopne
jp,pt
sbb
and
insb
inc
les
push
pop
hlt
cltd
xchg
sub
mov
loop
cmpb
add
add
adc
sub
xlat
push
lret
rcrb
aad
test
push
pop
xor
sahf
adc
divl
and
pop
jl
pusha
push
inc
bnd
or
fdivs
push
test
mov
loopne
pusha
jge
std
mov
push
cmp
lret
jo
mov
mov
fiadds
inc
movsl
inc
ds
push
add
add
or
pusha
push
or
mov
imul
jbe
lds
subb
and
mov
insb
fistl
jl
and
mov
adc
adc
repnz
test
rorl
andl
test
push
push
cmpl
fildll
sub
repz
adc
adc
push
xchg
xchg
add
cmp
dec
imul
adc
aam
xchg
icebp
in
xor
jne
mov
lcall
xchg
stos
fsubl
add
add
mov
outsl
xchg
out
in
lods
rcrl
fwait
popf
jbe
jl
aad
push
popa
cwtl
test
jb
xor
dec
sbb
mov
shl
lds
mov
adc
and
dec
sub
adcl
arpl
lea
in
mov
mov
pop
mov
mov
mov
lcall
xor
pop
repnz
xor
xor
je
imul
pusha
pushf
test
xchg
pusha
mov
dec
xchg
int3
adc
cmp
outsl
jmp
sub
dec
lcall
pop
and
sub
rcll
cmp
es
cmp
push
xchg
push
outsb
xor
cmp
shlb
jne
loop
mov
ss
out
add
popf
stc
loop
adc
jg
cmp
in
and
int
outsl
adc
arpl
xor
mov
in
aaa
loope
daa
push
dec
sbb
xor
add
adc
lods
enter
mov
dec
jnp
in
mov
sub
cmc
or
pusha
xor
xchg
out
outsl
dec
popa
addr16
push
mov
dec
rcrl
int3
dec
aad
vpacksswb
mov
sub
xchg
icebp
repnz
sub
shlb
dec
push
pop
xor
jl
nop
rorb
pop
dec
test
cs
cmp
cs
cmc
movsb
and
mov
cmp
push
or
and
mov
or
xchg
scas
pusha
nop
into
cmpsl
xor
add
xchg
mov
add
inc
and
cmp
push
in
lret
dec
repnz
and
in
das
push
je
cmpsb
mov
and
lock
mov
sbb
mov
jmp
jecxz
nop
flds
shrb
mov
cmp
mov
mov
mov
adc
vphsubdq
adc
mov
xor
and
and
xchg
adc
and
xchg
inc
std
imul
into
xchg
stc
sbb
jle
or
mov
mov
add
cwtl
cmc
popa
out
ret
shlb
jns
cmp
mov
pop
repz
stos
mov
pusha
xor
cmc
xchg
jbe
mov
movsb
sub
sbb
xor
sbb
cmc
mov
fsub
cmpsl
cmpb
push
xor
bound
rcrl
lock
inc
outsb
adc
loop
ret
xchg
rclb
jns
nop
int
sbb
mov
push
adcb
fwait
cltd
pop
sub
es
inc
cli
lock
mov
xor
xchg
sub
sahf
pop
loope
jo
push
fstpt
and
les
pop
add
push
outsl
inc
pushf
dec
push
stc
test
mov
sbb
test
add
xchg
in
push
iret
test
pop
lock
pop
inc
push
push
mov
mov
add
mov
outsl
shlb
dec
cmp
jl
scas
out
pop
cmp
das
add
pusha
mov
daa
movl
cltd
add
fs
adc
test
xchg
or
scas
ret
cs
or
inc
insb
shrb
jp
inc
mov
jg
cmp
pop
cmpb
mov
jecxz
iret
insb
je
jecxz
shll
mov
inc
xor
xchg
in
shlb
ja
fs
push
in
pushf
cld
mov
movsb
sti
sub
sbb
shlb
adc
dec
or
sahf
jl
cwtl
nop
lea
addr16
adc
sbb
fnsave
pusha
inc
xchg
insb
aaa
sub
ds
sub
pop
rorl
cmp
mov
shr
xor
fwait
rclb
cs
adc
mov
dec
loopne
jecxz
addr16
inc
jl
lret
arpl
loope
pop
xor
pop
xchg
dec
or
shl
in
fmul
push
jmp
int
mov
mov
or
shll
and
inc
fucomip
dec
sahf
sarl
adc
jmp
or
mov
popa
repnz
mov
orb
cs
sbb
or
bound
jbe
pop
aaa
repnz
les
sbb
les
xchg
mov
test
dec
leave
fildll
fidivl
and
xchg
jmp
gs
clc
loop
push
data16
mov
inc
jo
fdivrl
jcxz
add
mov
test
adc
out
mov
mov
out
jecxz
lock
add
jns
add
nop
sub
addl
cmp
loope
sub
pop
movsb
xor
mov
or
and
sbb
sub
fmulp
es
push
addr16
mov
rolb
adc
imul
inc
cmpsb
cld
stos
sub
lret
cs
add
dec
test
loopne
mov
xchg
fwait
lock
push
adc
jns
mov
iret
pop
dec
loop
daa
cmp
xor
repnz
cmc
outsb
enter
ret
jae
rclb
fbld
daa
je
mov
sbb
xorb
add
sbb
lahf
mov
adc
decl
xchg
rcll
icebp
and
imul
xchg
pusha
or
inc
out
imul
jbe
cmp
lahf
sub
rol
icebp
lods
mov
jmp
mov
jnp
cltd
mov
gs
in
add
syscall
mov
aad
in
inc
mov
rorb
int3
into
popf
sub
xor
push
add
lock
cmovb
or
xchg
popa
and
adc
outsl
pushf
mov
and
and
jp
pop
js
lret
mov
lret
fnsave
sbb
xchg
xchg
cmpsb
cmp
enter
cmp
sub
adc
js
iret
xor
repnz
mov
cmp
aam
out
xchg
jno
mov
aad
push
je
jle
gs
inc
ja
cmpsl
jb
loopne
and
and
les
leave
pusha
aas
cmc
cmp
mov
xor
sahf
out
lds
shlb
int
cmp
adc
mov
push
cmc
test
lcall
pop
xchg
inc
xchg
lods
push
inc
sarl
or
scas
fldt
xchg
push
mov
xchg
jg
leave
xchg
pop
inc
pushf
repnz
mov
sub
xchg
pop
lahf
mov
fisttpl
test
mov
fisttpl
sti
rcl
outsb
fldl
cmp
jne
ss
adc
andb
mov
mov
cvtpi2ps
dec
add
jns
stos
xchg
out
and
inc
ja
faddl
sbb
push
add
mov
insb
sahf
dec
repz
bound
and
inc
jle
add
sub
fnsave
mov
call
inc
icebp
aad
xorb
sub
or
shll
sbb
pop
sbb
loope
xlat
ss
jnp
clc
pop
std
pop
adcl
push
add
xor
enter
pop
jno
lods
jae
pop
mov
push
cmp
mov
or
jns
mov
lret
push
push
lods
into
shl
add
imul
adc
lahf
int
arpl
mov
xchg
add
sbb
cmc
out
pop
push
mov
pop
push
hlt
mov
adc
sarl
xor
cwtl
sbb
and
in
fstpt
bound
pop
mulb
dec
fisubl
sub
dec
rol
rorb
ret
enter
add
jl
dec
mov
iret
xor
rorl
or
adc
and
test
mov
mov
sub
outsl
mov
popa
add
dec
cmp
lods
dec
addl
mov
inc
add
lcall
sub
inc
add
inc
sbb
fadds
loope
mov
inc
adc
adc
mov
hlt
mov
fists
insb
shl
pushf
mov
jb
mov
testb
shl
or
dec
loop
mov
outsl
jno
and
addr16
inc
fcomps
insb
call
lock
push
cmp
addr16
call
pop
cmpsl
adc
mov
cmp
and
dec
mov
xor
inc
or
cmpxchg
add
cmpsl
jae
adc
call
jns
dec
jbe
or
mov
mov
cmp
sbb
jp
test
movhps
and
inc
add
nop
mov
into
xor
pop
jo
jmp
and
add
dec
inc
in
shrl
int3
fsts
ss
popf
js
mov
mov
addb
loopne
shll
daa
mov
and
ja
jmp
popa
mulb
pop
lods
xchg
mov
inc
outsb
push
cmp
mov
gs
mov
sti
ljmp
cmp
dec
pop
pop
cmp
iret
add
fs
cmp
xchg
mov
pop
sbb
jmp
arpl
enter
add
orl
dec
orl
add
and
sbb
stc
mov
mov
orb
lret
add
ss
ss
mov
xchg
or
pavgw
and
xchg
mov
repnz
cmp
dec
add
cli
cmp
and
aad
movsl
or
data16
xor
ljmp
nop
or
sbb
sti
shll
mov
dec
cmp
pop
push
std
fadds
adc
jl
jp
insb
sbb
push
scas
fs
push
mov
xor
call
clc
das
xchg
add
fildll
xor
pop
inc
mov
cli
sbb
out
adc
add
add
pushf
les
xor
and
fcmovu
aas
leave
add
enter
lods
mov
pop
dec
inc
dec
push
xchg
inc
pushf
cmp
xlat
xor
leave
test
dec
or
inc
pop
call
mov
fld
fs
mov
rcrb
fisttpl
push
mov
cs
or
sahf
adc
icebp
mov
add
pop
shll
inc
in
and
add
lcall
out
es
jae
mov
lock
xchg
inc
imull
popa
dec
ret
shrl
or
rclb
arpl
mov
xchg
mov
mov
in
je
sarl
pop
inc
mov
sahf
mov
xchg
int
std
out
mov
add
or
into
imul
pushf
mov
xchg
xchg
sub
push
pop
jbe
xchg
imul
dec
cs
jns
add
and
or
pusha
repnz
test
popa
xor
insb
divl
xchg
dec
rolb
cmp
int3
push
fistpl
pop
push
nopl
jnp
cmp
dec
aad
xchg
jb
stc
push
push
dec
add
xor
push
bound
imul
sbb
mov
sahf
and
shlb
js
mov
shrb
xor
dec
lret
lcall
sbb
mov
insb
loopne
add
movlps
or
inc
mov
xchg
xor
cld
cltd
mov
sub
dec
xchg
leave
dec
rolb
outsl
mov
xchg
cmpb
xchg
fadds
push
int
jns
pop
shlb
xorb
xchg
fwait
mov
mov
outsl
add
loopne
push
pop
add
jmp
jmp
jno
inc
js,pn
inc
dec
outsb
mov
pop
mov
daa
or
mov
cwtl
sub
test
jp
add
or
mov
or
in
int
test
leave
call
int3
dec
call
in
test
adc
shll
lret
and
loope
dec
mov
in
inc
mov
cmp
pop
shlb
aad
cmp
adc
cmp
dec
push
lret
lahf
imul
repz
add
sbb
insl
adc
push
lcall
or
mov
inc
xor
jbe
fistl
stos
mov
mov
push
lahf
add
je
and
ds
cmp
pop
sub
popf
mov
dec
filds
loope
push
xor
fs
adc
repnz
lahf
push
insl
scas
mov
jg
mov
and
js
mov
push
mov
sub
mov
adc
xor
pop
into
add
les
setnp
arpl
movsb
test
rcr
scas
rcr
sahf
cmp
aam
inc
adc
push
jp
mov
jecxz
or
jp
sbb
cltd
adc
int3
or
sbb
insl
sub
inc
shlb
fldt
add
mov
mov
mov
jmp
icebp
scas
roll
pushf
cmpsl
jmp
mov
addr16
or
loopne
test
add
out
add
mov
jno
mov
popa
les
push
cwtl
aam
and
pop
fucom
jecxz
dec
add
mov
adc
pop
mov
pop
ret
sbb
gs
popa
mov
lods
push
or
orb
fadds
push
or
addr16
loope
popf
add
sub
inc
push
lret
sub
enter
push
xchg
and
pop
mov
std
sub
xlat
push
inc
xchg
lcall
mov
fists
gs
xor
adc
dec
popf
mov
lsl
in
std
xor
push
jl
cltd
dec
gs
aas
xlat
mov
or
and
movsb
pop
inc
xor
imul
aaa
jno
dec
jg
add
inc
pop
xor
xor
add
loop
insb
mov
ljmp
inc
shl
add
ds
andb
mov
adc
cmpsl
mov
idivl
lds
out
push
imul
loope
in
cmc
mov
mov
ret
enter
cmp
dec
inc
dec
sub
aas
mov
xchg
add
push
hlt
std
int
jle
pop
jb
int
cmp
mov
addb
mov
cmpsl
push
cmpsb
pop
inc
push
cmp
test
or
xchg
adc
push
inc
insl
pushf
flds
js
mov
mov
pop
add
pop
push
push
mov
inc
xor
mov
mov
js
sub
inc
xchg
loopne
xor
data16
loopne
arpl
loope
mov
popa
mov
mov
sbb
cs
xchg
xor
pop
xchg
fsub
sti
cmp
aad
aam
fists
add
jb
jns
or
insl
clc
inc
mov
pushf
cmpsl
jns
stc
dec
and
pushf
and
jge
mov
addb
jo
fldl
fcomps
sbb
cmp
in
jo
aas
insb
cmp
cltd
mov
movsb
fdivr
or
shl
xor
xchg
sbb
push
or
xor
push
sahf
mov
fs
push
and
and
mov
popl
inc
cmp
aam
or
push
nop
sub
xor
mov
xor
jnp
ljmp
cmp
rcrl
icebp
push
pop
xor
xor
sbb
in
fxam
movsl
mov
or
xchg
loope
pop
inc
sbb
sbb
xchg
fadd
and
push
loop
pop
mov
jns
je
push
loop
shll
daa
cld
cmp
or
imul
fs
or
push
movsb
jnp
pusha
mov
or
xor
and
add
pop
les
xchg
pop
xchg
test
xor
inc
jo
push
adc
sub
sti
gs
in
lcall
inc
sbb
push
pop
clc
ftst
mov
or
test
in
dec
adc
pop
loope
sbb
ds
jne
sahf
popa
xchg
mov
jl
sti
test
gs
dec
pop
lahf
sbb
imul
dec
loope
jno
jne
pop
jp
xchg
xchg
lahf
icebp
xchg
dec
mov
xor
or
adc
lret
push
sbb
adc
out
inc
les
lret
stos
fldt
or
into
mov
and
xchg
mov
shll
enter
mov
sbb
arpl
dec
leave
ljmp
push
inc
xchg
lea
dec
or
inc
out
pop
cmpsb
mov
ljmp
xchg
adc
push
inc
or
adc
loop
adc
cmp
and
rol
ficompl
lret
out
adc
ret
sti
fmuls
inc
fadd
orb
push
sub
das
pop
sub
mov
mov
inc
dec
notb
sbb
inc
push
loope
test
sbb
xor
dec
add
fwait
repz
xor
push
sbb
mov
ss
aad
movsb
inc
mov
sbb
xchg
push
xchg
xchg
adc
stos
mov
movsl
lret
xor
int
xchg
inc
adc
push
out
sub
enter
sub
push
out
sbb
movsl
fisubs
mov
outsl
loopne
mov
cmp
sbb
mov
imul
lods
adc
xchg
daa
jno
lods
lret
cmc
mov
adc
jp
mov
inc
mov
aaa
int3
dec
lcall
pushw
mov
or
mov
xor
add
dec
mov
repnz
pop
lds
adc
shr
mov
xor
insb
inc
xchg
jno
pusha
sub
in
sub
sahf
lea
or
dec
xchg
mov
adc
cld
add
ljmp
icebp
sti
mov
add
adc
push
sahf
je
add
push
cmp
jle
sub
dec
xorb
or
jle
jge
addr16
inc
jno
push
inc
mov
fdivrs
pop
ja
cmp
jb
jmp
test
push
add
dec
xor
movsl
stos
std
inc
jmp
add
enter
into
sbb
cmp
mov
and
cwtl
lea
and
mov
xor
shrb
fisubs
adc
sub
xchg
mov
ljmp
ficoml
aaa
cmp
fdivrl
cmp
arpl
and
jno
add
in
mov
xor
aas
shlb
mov
loope
data16
bound
jg
repz
movsb
mov
rcrb
xor
outsb
xchg
addr16
adc
popa
std
inc
dec
sbb
cwtl
add
aas
xor
pushf
popf
pop
mov
rorl
ret
pop
add
fwait
inc
aad
stc
addr16
nop
jp
xor
gs
clc
test
test
push
inc
mov
fs
lea
in
cmp
mov
popa
dec
sub
or
sub
loop
test
jp
imul
sbb
sbb
or
fcoms
mov
andl
adc
xchg
sub
imul
stos
popa
push
iret
stos
push
push
xchg
or
inc
data16
mov
js
mov
js
or
mov
lock
add
add
inc
xor
shll
mov
movsl
or
adc
sub
add
mov
pop
je
mov
add
in
dec
push
mov
mov
jne
dec
stos
es
loope
mov
das
dec
xor
popa
aam
mov
ret
iret
repz
lret
mov
sahf
sbb
cmp
and
xchg
mov
cmpsl
xor
ror
and
mov
inc
push
push
mov
or
and
ds
outsb
lea
pop
enter
jo
addb
xlat
and
push
dec
cltd
in
mov
xchg
cli
mov
hlt
lret
test
ljmp
inc
pop
adc
es
push
in
jnp
ds
push
lcall
xchg
push
adc
test
les
pop
push
dec
mov
xor
xor
fldenv
sub
nop
aas
sbb
mov
mov
or
sbb
mov
push
sub
and
push
stos
mov
nop
test
jge
js,pt
mov
lds
cmp
ret
pushf
cmpb
sbb
nop
add
shlb
xchg
clc
and
iret
cmp
add
test
incl
xchg
push
mov
xchg
imul
in
mov
fdivrl
mov
pusha
push
xchg
jg
jmp
or
nop
xchg
inc
xor
lds
ret
gs
out
aaa
gs
jne
arpl
mov
out
aad
xor
mov
or
and
cmp
and
and
mov
pop
rcl
rol
nop
or
adc
sbb
push
imul
dec
pop
jl
popf
repnz
sbb
sbb
pop
jle
jmp
cltd
cmp
xbegin
mov
fldenv
sbb
mov
ja
push
xchg
ret
cmpsl
js
in
mov
into
inc
mov
bound
jnp
mov
movsb
cmp
femms
xor
addr16
js
pushf
ret
test
addb
push
adc
icebp
scas
mov
les
adc
jmp
in
xor
nop
fdivs
sub
ss
inc
sbb
pop
in
and
sub
lcall
stos
rcll
ds
dec
dec
sarb
add
rclb
add
cmp
pop
out
in
xor
popa
jb
je
sub
xlat
hlt
jmp
pop
mov
outsb
cld
movsb
add
xchg
or
and
ret
test
js
pop
cmp
sahf
dec
mov
lods
jp
push
xor
pusha
int
sbb
xor
sbb
arpl
mov
inc
xchg
test
push
push
subb
int
push
mov
inc
jge
cwtl
adcw
mov
jnp
xorl
loope
sbb
and
and
popaw
pusha
or
jp
sbb
mov
enter
inc
cmc
push
xor
mov
out
xchg
sub
cmc
mov
nop
sub
mov
jne
shrl
pop
push
ss
dec
mov
dec
xlat
hlt
cmc
and
addb
and
inc
ss
add
sbb
fsubl
es
xor
shrl
push
sbb
mov
inc
add
sbb
out
movsb
add
sahf
stc
and
sbb
mov
loopne
jnp
mov
ja
pop
inc
xor
nop
push
rclb
fsts
xchg
xchg
adc
mov
pop
in
sbb
push
or
add
outsl
lcall
inc
leave
push
or
xchg
push
push
mov
lea
fidivrs
add
je
scas
dec
rcrl
lea
jg
push
sbb
fwait
out
xchg
addr16
jne
nop
aad
mov
das
stos
rcrb
addl
or
pop
and
and
out
stc
cs
or
pusha
add
xchg
das
jo
repz
pop
xchg
outsl
popa
push
nop
jecxz
shlb
es
dec
adc
pop
arpl
xor
push
xchg
lods
call
jmp
fadds
movups
xchg
pop
pop
fsqrt
outsl
mov
add
and
loop
mov
jbe
insl
xor
sbb
ljmp
pop
dec
inc
into
jge
addr16
push
shrl
orl
xor
je
xor
outsb
xor
repnz
movsl
pop
ss
adc
outsb
adc
dec
pop
loop
pop
ficomps
and
fcoms
lcall
fwait
fwait
roll
std
adc
inc
sahf
outsl
mov
push
mov
sbb
leave
mov
inc
inc
jp
loope
rolb
pandn
shll
or
xor
xor
mov
movsb
and
mov
notl
xlat
test
inc
cmp
iret
mov
inc
testl
addl
xchg
mov
xorb
in
jae
mov
outsb
mov
push
clc
cmpsl
cld
leave
lods
sbb
pop
je
inc
pop
add
dec
xor
sub
or
repz
cmp
mov
xchg
adc
jbe
mov
out
in
cmp
scas
movsl
into
std
mov
adc
add
push
mov
arpl
sub
jle
or
ljmp
pop
cld
mov
insb
jmp
mov
mov
pop
push
popa
pop
das
mov
outsb
adc
ds
pusha
dec
notb
push
push
in
js
inc
sbb
into
leave
test
popf
rorl
out
ljmp
mov
inc
into
lcall
mov
stos
inc
cmp
out
and
ljmp
inc
scas
mov
rorb
popf
adc
fnsave
mov
cwtl
xchg
cld
jge
inc
mov
or
and
in
push
cwtl
les
mov
xor
test
ss
adc
inc
inc
jae
sub
mov
bound
or
scas
jnp
roll
out
jbe
fcomps
rcr
add
push
ret
cmc
out
sbb
aaa
inc
nop
cmp
mov
aad
xor
shrb
sub
jmp
imul
mov
out
xor
lock
mov
and
cmpsb
adc
inc
sub
arpl
clc
outsb
push
int3
aad
les
out
addb
nop
daa
push
mov
pop
mov
push
scas
jne
and
mov
add
repz
repz
cld
icebp
xchg
test
pop
push
addr16
fs
inc
xlat
in
popa
push
pop
repnz
clc
dec
adc
xchg
push
pop
sub
xor
jmp
push
imul
mov
inc
lcall
icebp
test
fs
mov
iret
bound
xorl
xchg
inc
rol
jg
fnstsw
pop
adcb
cmp
jne
rclb
mov
cmp
lock
mov
rolb
hlt
adc
das
xchg
andl
inc
push
subl
call
sub
addl
jno
lret
mov
inc
fneni(8087
add
mov
std
cmp
loop
or
je
sub
lcall
xor
xchg
push
loop
or
and
xor
jmp
fmuls
xor
fdivrs
lret
cmp
and
mov
sub
or
fs
clc
bound
mov
xchg
and
stos
and
fsts
rolb
xchg
or
adc
imul
lret
test
pusha
xchg
mov
sti
test
mov
jle
xchg
pop
in
inc
jno
mov
jmp
imul
jl
jo
pop
sbb
aaa
hlt
dec
lret
mov
or
pop
jo
inc
add
push
clc
add
adc
lods
or
dec
enter
arpl
sbb
jmp
lock
in
popf
and
xor
mov
rolb
clc
dec
pop
test
sbb
or
push
mov
cmc
xor
roll
stos
jmp
movsl
in
push
sbb
stc
addr16
mov
rorb
xor
enter
icebp
or
jns
loop
rcl
sbb
or
shlb
adc
add
popf
imul
and
jb
add
mov
ss
pop
pop
mov
or
mov
cmpsl
adc
mov
fnstcw
dec
es
cltd
stos
rcl
pop
mov
or
insb
mov
hlt
jnp
mov
add
jge
sub
inc
cmp
add
cmp
dec
addr16
stos
push
cmp
shll
std
xlat
mov
aaa
adc
dec
hlt
hlt
insb
mov
daa
iret
sbb
cmpsl
mov
aam
sub
stc
jp
jp
ret
xchg
or
fwait
in
loopne
xor
push
adc
dec
mov
push
inc
pusha
adc
shll
leave
jae
decl
fbstp
mov
popf
sbb
fsub
pop
ss
nop
cmp
jle
out
push
sub
push
or
sbb
sbb
inc
cli
push
ficoms
and
add
insl
xor
test
xlat
push
lds
push
xchg
push
mov
rcl
ret
mov
adc
dec
lcall
std
out
xchg
lcall
sbb
mov
or
fwait
bound
dec
cwtl
mov
sahf
xor
add
mov
pop
out
dec
add
shlb
daa
lahf
lcall
jno
cmp
and
and
leave
add
and
je
mov
add
mov
xchg
aaa
inc
sbb
stc
xchg
or
or
mov
or
test
mov
jo
arpl
pushf
sub
xor
sti
push
sbb
loope
cld
lods
sbb
movsb
or
mov
popf
dec
and
mov
data16
dec
lods
aam
jns
jno
je
pop
lods
mov
adc
push
xchg
xor
pop
arpl
xor
ficoms
pushf
test
mov
jmp
pmaddwd
pop
or
fwait
adc
out
insl
js
jns
or
ret
shll
lret
push
mov
mov
cmpsl
sub
dec
add
stos
test
lret
mov
ds
or
mov
ja
and
xor
and
sbb
bound
pop
ss
push
push
pop
fs
or
pop
mov
test
inc
xchg
or
mov
cmp
jns
mov
xchg
pusha
fcomps
xchg
pop
xor
cld
jp
jmp
xorl
dec
in
dec
movsl
lret
sbb
push
dec
pop
fisttpl
dec
insb
stos
cmc
cmp
push
inc
or
xor
adc
and
repnz
xor
mov
in
adc
pop
rolb
leave
mov
jl
scas
and
hlt
sbb
inc
lcall
sbb
xchg
sub
mov
lcall
inc
sahf
sub
fs
mov
sbb
mov
cltd
lea
cmp
lret
add
sbb
rolb
movsb
lock
sar
shl
fmuls
rclb
jne
xlat
xchg
cwtl
into
and
push
pushf
adc
ja
ljmp
dec
add
and
xchg
adc
lds
insb
pop
pop
jb
cmp
imul
cwtl
movsb
insl
aad
pop
jo
jg
and
popa
je
fcompl
push
jno
xchg
inc
sub
es
mov
jge
sti
xor
imul
in
sbb
aaa
je
push
xor
dec
jg
xor
or
xorl
sahf
jp
pop
inc
pop
sbb
sahf
add
mov
lds
stos
push
shll
sbbl
xor
mov
mov
mov
xchg
cwtl
mov
out
push
xchg
in
loope
pop
jle
scas
std
jne
nop
or
mov
in
mov
cli
jbe
sub
push
sbb
lret
inc
add
pop
cmp
mov
dec
sahf
xchg
xchg
dec
loopne
out
inc
adc
adc
cmp
adcl
lock
or
inc
sbb
cwtl
or
push
sub
mov
xorl
adc
and
addr16
loope
pop
mov
pop
adc
dec
adc
lods
cmovs
test
lret
stos
ja
add
cmp
xor
push
sub
lcall
lcall
test
lods
sub
or
movsl
dec
sbb
dec
js
jl
pop
mov
lret
adc
mov
sbb
mov
sbb
aad
xor
pcmpeqb
dec
pop
xchg
add
shll
nop
mov
cmp
les
sbb
fs
xchg
es
in
aas
fcmovbe
pop
add
lds
insb
cmp
test
and
push
push
in
cmp
jmp
push
sbb
popa
movsb
mov
ret
lock
cmp
adc
adcl
cmp
adcl
pop
push
mull
lods
addb
pop
inc
aam
idiv
arpl
fptan
sarl
in
dec
out
sub
frstor
or
xchg
mov
aas
push
mov
add
cmp
sbb
pop
leave
sar
popf
pusha
lahf
jnp
cmc
jecxz
and
fs
jle
add
inc
notl
inc
test
out
and
xchg
mov
inc
mov
lcall
dec
pop
in
xchg
push
jno
xchg
push
mov
jo
xor
sub
lods
mov
xor
popa
shll
dec
pop
into
mov
jnp
or
and
int
add
ucomiss
aaa
ret
insb
inc
arpl
and
sbb
in
mov
sub
rorl
es
cmp
loope
mov
jmp
mov
dec
addl
loope
mov
jmp
pop
lods
ja
or
cmc
out
xchg
xor
push
stos
xlat
and
xchg
and
xchg
cmp
sub
insb
arpl
daa
shlb
out
dec
cmovge
jmp
and
imul
xor
cmp
xor
sub
push
jne
push
pop
iret
test
popa
imul
fdivs
icebp
cmpsl
fldcw
pop
push
test
push
or
push
mov
mov
add
sahf
ljmp
jle
or
loopne
cmp
inc
clc
lahf
add
mov
mov
add
inc
mov
rorb
mov
clc
push
xor
movsb
push
sbb
lcall
fisttpl
movsb
cmpb
or
faddl
adc
jo
sub
out
imul
xor
push
inc
in
xchg
adc
adc
sbbl
mov
push
mov
xchg
cmc
arpl
push
pop
outsb
rolb
or
jecxz
add
decl
shll
xchg
lds
or
int3
fcmovnb
inc
mov
bound
dec
inc
lds
adc
imull
mov
xor
add
stc
jb
pop
adc
daa
ret
loopne
pusha
xchg
cmp
and
xchg
xchg
je
ret
sub
mov
test
notl
jb
adc
ljmp
fadds
rcrl
xor
lret
mov
jne
movsl
fildl
jno
cmp
sbb
dec
cmp
xchg
mov
icebp
inc
inc
movsb
popa
add
inc
jb
scas
fwait
and
lock
cmp
aam
dec
push
les
add
inc
push
inc
mov
or
std
aad
sbb
lock
rcrb
adc
or
aam
mov
sub
leave
mov
fwait
stos
inc
mov
and
jae
or
cli
inc
xchg
mov
pop
ss
jbe
adc
add
sub
in
mov
in
in
mov
ss
xchg
adc
cli
pop
inc
je
fsubrl
inc
cltd
mov
imul
imul
cmp
sub
cmp
dec
push
sub
daa
add
insb
jp
push
daa
mov
ret
mov
ret
push
inc
std
dec
fs
or
or
outsl
sub
mov
cli
adc
orl
fnsave
dec
shl
adc
sub
jne
push
lock
mov
adc
rorl
and
mov
mov
push
jns
loop
push
aas
mov
popa
sub
leave
in
ds
add
sahf
dec
ja
ss
cmp
ja
jecxz
and
jb
adc
cmpl
addr16
enter
outsb
push
jecxz
arpl
or
test
mov
xor
pop
adc
fsubs
mov
sahf
in
lcall
loopne
jo
aad
xchg
fsubp
lods
adc
dec
dec
sub
cld
inc
xchg
mov
lea
adc
outsb
aaa
pop
iret
andb
dec
fs
or
mov
and
loopne
test
mov
mov
pop
insb
and
test
inc
outsb
iret
push
mov
dec
sub
xchg
cwtl
mov
mov
jmp
iret
insl
aas
sub
sbb
mov
or
popa
cmpb
adc
jle
ret
xchg
addb
inc
insl
scas
mov
jo
roll
jl
push
js
sbb
psubusw
and
xchg
je
test
orl
ljmp
je
push
pop
mov
push
ljmp
in
imul
sbb
push
das
cmpsb
inc
mov
and
push
xchg
sbb
pop
enter
cmp
sbb
push
lea
mov
mov
lret
inc
jl
add
sbb
jle
mov
lods
loopne
lcall
repz
add
cmp
adc
mov
bound
mov
subb
loopne
lock
cs
mov
xor
mov
jbe
inc
xlat
fidivs
ljmp
adc
cmpsb
mov
inc
mov
addr16
inc
leave
std
hlt
cmp
dec
mov
je
lahf
clc
mov
sbbb
sahf
mov
cmp
in
leave
pop
inc
fwait
out
and
cli
out
inc
repnz
mov
jecxz
push
push
call
fstps
dec
insb
mov
adc
out
and
fadds
mov
loopne
popa
shll
jno
fisubs
adc
mov
xor
addr16
ja
push
adc
pusha
adc
lods
es
jecxz
repnz
pusha
xor
pop
sbbl
pop
sbb
jo
aad
sbb
lods
es
jne
cli
and
jne
dec
jb
push
xor
add
push
pop
aam
and
leave
adc
or
xor
xchg
dec
push
push
and
jp
js
or
mov
pusha
out
mov
ljmp
ds
mov
aad
cmc
jl
cmp
push
sbb
mov
gs
fbld
andps
mov
xor
push
sbb
sahf
xlat
push
popa
sbb
js
add
repz
push
xor
or
aad
test
movsl
sbb
lea
push
inc
push
shll
push
leave
jne
fldenv
add
lahf
mov
movb
pop
push
push
sbb
mov
jmp
adc
mov
in
popf
in
or
or
shr
xor
cmc
ja
xadd
adc
and
xchg
or
inc
outsb
test
pop
int3
xchg
add
aaa
js
daa
cwtl
jg
jp
test
sub
add
mov
sbb
cwtl
sub
mov
push
stc
jp
jno
rorl
in
push
jno
xor
stc
outsb
cmpsl
xchg
inc
ds
pop
dec
ret
dec
xor
adc
cmp
dec
cmp
lret
scas
mov
rcrb
mov
mov
cld
ja
pop
pop
mov
and
cmp
ljmp
adc
shll
pop
xchg
and
sti
and
orl
jae
mov
inc
xor
mov
insl
xor
jno
jo
mov
adc
fnsave
imul
pop
lea
sub
mov
and
add
and
loope
in
mov
insb
or
push
ja
in
cmp
enter
xchg
sbb
sub
mov
xchg
hlt
adc
push
mov
adc
shrl
xchg
lcall
aaa
fldcw
call
pop
mov
lods
add
xor
int
pop
cmp
pushf
popa
push
pop
das
sbb
inc
idivb
stc
or
xchg
lret
xorl
adc
mov
jecxz
pop
leave
addr16
dec
cltd
xor
shlb
lds
or
inc
xchg
xor
dec
mov
and
add
mov
adc
scas
xor
push
push
emms
popf
loopne
jg
fistpl
mov
mov
cmpb
or
mov
sbb
mov
mov
xor
rcll
mov
or
push
frstor
les
jmp
std
sbb
push
daa
lea
mov
outsb
mov
popa
sarb
jg
mov
je
add
test
dec
or
mov
cmc
cld
jle
add
cmp
clc
dec
inc
aas
inc
pop
pop
imul
je
push
pop
xor
or
sbb
jne
jmp
dec
out
push
outsb
out
dec
inc
neg
out
inc
ret
stos
pop
insb
inc
pop
mov
fisubl
cs
or
daa
aaa
test
inc
xchg
pop
push
pushf
mov
jl
subb
push
pop
arpl
lret
mov
cmp
imul
shll
inc
push
or
mov
push
repz
push
xor
aas
out
in
xchg
jnp
dec
pop
pushf
pop
inc
mov
mov
rcll
mov
std
inc
cmc
roll
sub
daa
loope
jbe
fs
movsl
dec
xchg
jb
adc
push
mov
sbb
mov
lods
push
inc
pushf
dec
addl
dec
fmull
int3
pushf
mov
cmp
cmp
ss
pusha
femms
sbb
das
ja
clc
inc
sbb
xchg
cmpsl
in
loopne
add
push
push
enter
jmp
leave
pusha
mov
pop
or
movsl
mov
cmc
stos
test
fstp
and
daa
mov
xorl
das
das
xor
inc
dec
call
xchg
add
dec
mov
mov
sbb
shll
dec
sbb
shlb
inc
test
pusha
push
mov
mov
aad
out
inc
sub
ljmp
jle
imul
arpl
or
test
das
xchg
pop
cltd
cld
add
stos
push
loopne
add
js
lock
and
xchg
pop
mov
imul
test
mov
add
push
push
and
jo
sbb
or
sbb
ja
sbb
push
jo
xor
and
push
aaa
addr16
pop
adc
mov
mov
ds
js
xchg
sub
inc
inc
prefetchw
jge
add
lgs
adcl
sbb
ret
inc
sbb
stos
popa
jg
aaa
add
cmpsl
mov
pop
mov
clc
adc
sbb
or
icebp
pop
nop
or
cmp
mov
ds
ss
and
sahf
outsl
adc
mov
jmp
out
mov
mov
adc
and
pushf
jo
and
shll
xchg
add
adc
inc
xor
push
ss
inc
xchg
xchg
aas
jne
lcall
add
inc
rcrb
mov
mov
mov
sti
xchg
sarl
dec
ss
scas
scas
std
cmp
popa
testl
and
mov
lea
pop
jmp
js
xchg
push
push
loopne
pop
dec
repz
test
or
and
jmp
adcb
in
aas
add
adc
lret
sarl
test
jbe
pop
mov
or
sti
mov
adc
rcl
lds
jl
fistl
rcll
aad
mov
hlt
ret
divb
lcall
jmp
mov
dec
rclb
test
and
adc
sarb
xor
scas
jnp
ror
flds
je
cltd
jmpw
cmpsb
xchg
std
jb
popw
dec
scas
fadds
lods
mov
dec
out
in
sub
pop
pushf
jo
dec
int
outsb
cmovnp
js
add
inc
mov
jns
mov
test
sub
dec
sti
dec
adc
mov
jno
add
scas
lea
ret
sub
push
cmp
adc
roll
stos
arpl
push
lcall
push
scas
add
jo
push
js
adc
mov
mov
sub
cmp
pusha
lock
sub
dec
add
mov
ud2
aas
int3
dec
xor
inc
ja
cmpsb
sti
ds
adc
out
das
cli
inc
cmp
sub
mov
shlb
adc
sub
or
or
mov
jbe
je
icebp
inc
les
mov
popl
fbstp
lcall
divl
mov
mov
test
add
fsub
xchg
and
cmp
lret
add
or
pop
inc
push
in
push
int
sbb
xchg
inc
in
adc
pop
or
jl
subl
inc
ret
xchg
aas
icebp
xor
idivb
into
add
dec
xchg
mov
jnp
in
push
inc
test
aam
mov
mov
aas
loope
shr
sub
pop
add
or
adc
add
popa
mov
das
stos
nop
mov
dec
mov
xor
ljmp
cli
ja
xchg
mov
les
daa
sbb
or
inc
mov
jo
outsl
pop
pop
xchg
addr16
pop
or
fs
shll
push
xchg
and
pusha
sbb
mov
xchg
aad
rcrl
ds
inc
leave
addr16
in
cs
sbb
popf
dec
sbb
inc
shrl
enter
push
mov
jo
mov
aaa
je
cmp
loope
sbb
lock
es
jae
dec
inc
xchg
cli
fs
or
pop
stc
sbb
ds
jbe
pushf
bound
and
mov
sbb
mov
inc
inc
shrb
imul
pop
fstpl
sbb
insl
scas
loope
xchg
movsb
cs
pop
shl
imul
xor
sbb
inc
mov
xchg
out
jge
shlb
cmp
iret
dec
popa
je
ret
inc
cltd
ja
test
rcrl
and
lahf
lea
subb
mov
cmc
popa
pop
push
jae
rclb
sub
orl
sub
movsl
test
xor
mov
push
test
aaa
adc
or
push
xor
adc
mov
or
dec
mov
jb
subl
jmp
xchg
sbb
inc
jg
dec
int3
push
outsb
cld
jo
addr16
and
or
xchg
and
xchg
push
adc
dec
pop
test
dec
dec
aam
push
mov
adc
and
mov
pop
push
test
mov
push
fbstp
bound
pushf
adc
sbb
incl
push
sahf
or
pushf
push
test
xchg
je
in
adc
lret
mov
pop
cs
pop
rcl
sarb
mov
jbe
or
push
icebp
push
xor
aas
xchg
adcb
stos
cld
divb
push
inc
mov
pop
fcoms
ss
mov
lods
int3
adc
ret
add
xor
xchg
roll
mull
sbb
cmc
mov
xchg
out
adc
lods
pop
inc
pop
sahf
jne
or
or
jp
cmp
ss
pusha
push
roll
jo
or
ret
mov
sbb
insl
cmp
inc
daa
and
jns
fwait
pop
cld
cmp
mov
push
sbb
mov
push
out
fstl
andl
scas
jno
sub
mov
xor
aad
pop
std
inc
or
adc
mov
pop
xchg
test
sub
mov
xor
or
cltd
out
ret
add
sbb
lret
push
sbb
pushf
sbb
cmpsb
inc
cmp
xor
push
incl
cmp
pop
sbb
pop
aad
scas
mov
jmp
or
gs
sbb
out
jb
mov
mov
jl
sub
adc
inc
dec
dec
shlb
adc
stos
gs
jp
scas
jb
lret
mov
sbb
add
inc
aad
shr
push
repnz
xor
sbb
cmpsb
mov
movsb
cmp
aaa
push
aaa
cmp
in
pop
jle
sbb
xchg
and
pop
test
jbe
or
cmp
jae
inc
cmp
imul
dec
pop
pushf
cmpsl
adc
or
pop
pop
ret
mov
into
loope
jl
je
dec
lods
leave
bound
rorb
push
insb
push
sub
fcom
adcb
addr16
mov
repz
jns
push
sub
jne
xchg
cli
das
je
loope
mov
incb
push
das
mov
iretw
movsl
xchg
lds
out
and
into
pusha
std
add
loopne
inc
sub
sbb
push
aad
shll
outsb
stos
in
imul
pusha
or
rol
shrl
mov
jmp
call
dec
and
enter
sbb
loope
xor
xor
inc
inc
les
orb
inc
psllw
mov
sti
xchg
and
lahf
test
mov
out
out
sti
or
jecxz
xor
test
cmpsb
pop
ds
mov
push
cmp
dec
adc
shll
push
dec
jle
adc
out
mov
daa
leave
adc
movsb
fwait
popa
mov
test
lahf
dec
fsubrs
ret
dec
or
adc
jbe
xor
sarb
inc
fstpl
pop
fdiv
call
or
and
xchg
xchg
js
push
sbb
cli
gs
lcall
clc
sbb
cld
cltd
jle
inc
adc
loop
loopne
pop
inc
int
std
cmc
adc
jg
call
lret
dec
cmp
push
lods
cmp
jo
orl
mov
xor
add
push
sbb
xchg
shll
sbb
out
mov
inc
inc
repz
dec
pop
inc
mov
inc
les
jecxz
push
push
outsl
and
inc
sub
daa
inc
pop
sbb
xor
jnp
roll
stos
cmc
jg
movaps
add
xchg
adc
jp
dec
pop
inc
and
jecxz
mov
inc
jno
and
push
xchg
mov
jno
testl
popf
lock
lods
aam
mov
rcl
lcall
nop
shrb
mov
fcompl
fs
dec
add
or
sbb
jo
push
jecxz
push
addr16
inc
inc
insl
mov
shl
adc
adc
and
jae
pop
lcall
cmp
cmp
ljmp
dec
aad
das
inc
fcoms
mov
popf
mov
lret
push
rorb
mov
cmp
sbb
push
fmuls
dec
dec
mov
ds
mov
jno
ljmp
mov
add
jl
cld
cmp
sub
mov
mov
dec
outsb
adc
loopne
outsb
jno
pop
clc
and
fcom
pop
out
pop
rcl
xchg
sbb
xchg
ret
fs
pop
inc
stos
loope
mov
or
cmp
leave
push
mov
int
xchg
add
xchg
hlt
xor
sub
nop
mov
jno
or
sbb
adc
add
xchg
add
insb
icebp
mov
rcrl
xchg
mov
sbb
pop
add
test
xor
xor
mov
inc
xchg
ljmp
jge
ja
mov
stc
cmp
test
push
loop
pop
je
int
repnz
sub
pushf
outsl
dec
aaa
out
mov
fwait
add
dec
sbb
icebp
imul
imul
xor
shlb
adc
test
sbb
or
push
es
mov
int
xorl
shrb
mov
scas
mov
sar
je
mov
mov
ror
and
mov
dec
cmp
and
sbb
sbb
mov
ljmp
cltd
paddw
pop
shl
std
cs
cld
xor
cmpsb
add
in
adc
pop
adc
mov
sbb
fs
movsb
and
inc
and
daa
dec
hlt
and
loopne
leave
sbb
jne
dec
pop
je
push
xchg
jg
push
xchg
aam
mov
pusha
xchg
enter
mov
data16
imul
cwtl
roll
daa
jo
insl
clc
into
pop
inc
push
sub
xchg
inc
ror
inc
cmp
xor
xor
xor
mov
cmp
in
xchg
add
mov
jge
sub
mov
pop
sbb
dec
push
lret
push
in
pop
ficomps
or
pushf
sbb
and
push
fcom
cmpsl
rcrl
mov
es
add
orb
add
ds
mov
jno
pop
jmp
cmp
xchg
popf
lret
mov
call
cmp
shlb
jcxz
push
daa
jnp
add
rcrb
inc
sbb
xchg
out
cld
pop
aad
addb
jo
lret
pusha
inc
loop
shl
fdivrl
arpl
fidivl
push
stos
cmp
cmp
inc
sub
and
pop
xor
bound
arpl
xchg
stos
aad
pop
pusha
addr16
mov
jne
and
rclb
rclb
jno
pop
popf
dec
lea
dec
mov
and
xchg
jmp
push
fimull
add
and
xor
fs
fistl
call
rol
push
test
sub
sbb
dec
mov
insl
mov
jp
mov
xchg
je
mov
and
shlb
fistpl
imul
inc
fisttpll
cld
mov
pop
mov
mov
adc
xor
cmpb
mov
or
std
adcl
ds
push
and
pop
ret
cmp
adc
mov
jecxz
jo
lds
js
or
jnp
out
loopne
jmp
aad
or
mov
mov
out
push
movsl
and
push
push
loop
into
lret
daa
add
jne
sub
scas
xchg
in
lret
add
cmp
inc
leave
popf
push
test
ljmp
icebp
cld
push
mov
aaa
xchg
and
in
jle
xchg
imul
js
imul
loope
andb
data16
cmp
add
rorb
sbb
arpl
je
dec
fildll
mov
lock
nop
andl
inc
lret
mov
out
shl
push
add
mov
jae
and
cmc
inc
mov
stc
mov
cmp
mov
andl
leave
dec
or
outsb
sub
push
cmpsb
sbb
das
and
aaa
and
cmp
jb
sbb
int3
in
inc
movsb
addr16
data16
xor
sbb
movsb
and
or
adc
into
mov
adc
inc
add
pop
shll
addr16
or
jp
lea
xchg
jbe
nop
loope
or
mov
xchg
mov
and
xchg
jl
add
adc
xor
jnp
and
arpl
repnz
js
mov
outsb
xlat
into
pop
adc
mov
jns
sbb
outsb
jae
sti
jo
cmc
lcall
add
dec
or
sub
loope
mov
test
lea
sbb
xchg
fnstenv
clc
call
dec
jnp
inc
cwtl
sbb
aad
stos
xchg
call
and
das
adc
and
pop
xor
shlb
ljmp
jo
or
push
adc
and
or
xchg
loopne
adc
pop
std
inc
call
fs
xchg
mov
orb
adc
jns
inc
iret
and
fs
mov
pop
bound
int3
mov
pusha
scas
insb
mov
aam
sub
adc
inc
rorb
sbbl
add
gs
rcll
cltd
repz
jmp
cmpsb
mov
inc
push
iret
xchg
dec
pop
subb
ret
insl
test
dec
fcomip
or
pop
jno
out
adc
mov
dec
push
push
and
aaa
sbb
jge
push
xchg
pop
pushf
daa
pop
mov
pushf
andb
mov
movsb
and
or
andb
clc
ret
lcall
das
cmp
outsb
dec
dec
xchg
adc
inc
xchg
inc
pop
loop
pushf
insl
cmp
dec
in
pop
jge
hlt
sti
imul
lcall
adc
jb
pop
cmc
mov
mov
ss
pop
popf
cmpsb
jbe
mov
jo
arpl
mov
xor
scas
xor
pusha
mov
jbe
pop
inc
insb
push
pop
and
push
push
les
or
lock
lods
mov
bound
dec
mov
jb
push
jno
shll
or
fs
sbb
clc
sti
scas
insl
jle
jns
push
inc
cmp
sbbb
jns
adc
add
ljmp
ret
out
mov
dec
mov
lock
mov
add
cwtl
mov
lret
es
std
dec
push
mov
cmpsl
sti
movsb
clc
inc
jnp
in
or
jb,pn
enter
data16
leave
lea
ret
xor
dec
imul
les
sti
insl
fisttps
out
mov
mov
and
mov
push
aaa
inc
sub
lds
rorl
in
push
pop
mov
notl
inc
push
push
in
mov
sbb
sub
xchg
cmp
push
ret
mov
insb
xchg
sahf
mov
adc
inc
add
inc
adc
test
xor
xchg
cmpsl
test
lret
add
das
pop
bound
repnz
dec
icebp
je
cli
into
add
fidivs
inc
jb
insl
xor
push
xchg
cwtl
movsb
mov
xlat
pop
aam
mov
xor
sbb
call
insb
push
daa
inc
stc
dec
iret
orl
mov
mov
je
mov
loope,pn
sti
push
sbb
jge
repnz
cs
jl
or
jg
pop
add
and
xchg
adc
movsb
and
push
inc
xchg
mov
add
xchg
push
sbb
sub
inc
lock
jl
arpl
push
sahf
inc
filds
imul
fsub
popa
inc
loope
sub
into
inc
repz
loope
imul
daa
or
mov
test
mov
push
rcll
cmp
stos
and
xchg
add
sbb
aam
add
cli
bound
ret
sbb
int3
shl
mov
pop
ds
mov
xor
mov
jecxz
sbb
fucom
push
daa
jo
cmp
or
ljmp
pushf
add
shl
add
pop
push
aad
popa
adc
inc
mov
sbb
and
dec
or
ret
add
add
ret
dec
jl
push
aas
mov
sbb
fisubrl
jp
pop
in
inc
jl
pop
push
dec
mov
ja
pop
jg
mov
arpl
inc
daa
arpl
stc
add
mov
inc
sub
cltd
bound
jecxz
xchg
adc
jno
sti
cmpb
lea
mov
addr16
cld
sub
mov
js
imul
jp
pop
nop
stos
mov
test
xchg
jbe
aad
jb
inc
push
js
push
loop
xchg
pop
fsubr
std
aam
sbb
mov
rcrb
scas
push
cmp
je
rclb
fwait
in
in
mov
addb
and
push
xor
int
push
ret
aad
fmulp
xorl
adc
js
lods
cmp
jbe
cmc
mov
push
inc
shrb
lods
mov
adc
inc
push
inc
mov
xchg
pop
sbb
push
add
sub
repnz
les
iret
xlat
and
mov
nop
into
sub
lods
dec
in
xor
xchg
das
adc
mov
daa
lock
pop
jg
push
mov
xchg
push
loope
in
xor
rcrb
sbb
imul
ror
add
push
jb
pushf
adc
das
pop
or
jle
mov
jbe
in
push
ja
xchg
pusha
add
out
dec
pop
inc
mov
mov
xchg
jnp
inc
xchg
pop
mov
mov
push
sub
xchg
aad
rorl
xlat
lcall
cmp
ret
vfrczps
push
test
repnz
cltd
loopne
lret
stos
lret
in
lcall
int
mov
out
inc
sbb
jno
push
xor
xchg
shll
iret
shll
test
call
fstpl
add
inc
jmp
mov
shrb
roll
add
add
les
js
ret
push
call
aaa
add
fisubrs
and
in
sbbb
lock
or
mov
or
stos
mov
inc
add
push
jl
xchg
loop
xchg
xor
sbb
fidivrs
pop
psubq
dec
pop
cltd
adc
pop
xor
inc
push
adc
sbb
add
popf
xchg
in
loopne
leave
shl
cs
pusha
xchg
loopne
push
xor
popf
movsb
pop
je
rclb
daa
sbb
add
outsb
and
movsl
sbb
inc
xor
jnp
xchg
dec
leave
push
add
nop
adc
stos
stc
mov
sbb
inc
mov
sahf
mov
sub
mov
push
mov
pushf
mov
std
push
icebp
gs
mov
lds
sub
movsb
or
lods
push
mov
inc
popf
sbb
or
or
push
je
sub
add
mov
cld
cmpl
push
pop
mov
pop
push
push
and
xchg
adc
iret
daa
adcl
cmove
adc
and
stos
xor
jecxz
and
cwtl
lds
insl
je
and
stc
rcrb
and
pop
cmp
mov
push
inc
push
and
lcall
addl
sbb
or
shll
outsw
adc
cwtl
rcrb
test
mov
or
cmp
in
add
sub
pop
push
sbb
and
aas
aad
and
and
popf
es
jno
pusha
and
aad
inc
sbbl
dec
inc
ja
fists
in
arpl
into
jp
std
xor
mov
push
shr
ss
imul
inc
mov
and
or
rolb
push
mov
xchg
cltd
and
popa
loope
fsubs
cmp
daa
mov
lds
mov
xchg
std
push
xchg
add
and
das
test
nop
inc
lea
clc
call
pop
fsubrs
les
icebp
in
pop
push
mov
add
pop
loopne
fiadds
repz
dec
neg
dec
mov
adc
insb
inc
dec
movl
mov
xor
dec
pushf
push
push
pushl
in
sub
and
test
aaa
loopne
enter
push
lea
insb
mov
pop
or
xlat
and
mov
and
mov
mov
arpl
push
lea
mov
addr16
ss
fisttps
shlb
lret
jge
test
dec
and
inc
add
dec
inc
orl
subl
lea
cs
test
cmp
push
pushf
cmp
outsl
mov
popf
je
inc
and
not
dec
pop
add
dec
xor
div
add
neg
addr16
inc
xor
xor
mov
sub
data16
test
dec
mov
mov
dec
or
cltd
and
addl
iret
push
dec
out
scas
jmp
push
not
andl
ret
fs
inc
dec
and
mov
pop
adc
inc
lods
notl
lea
inc
insb
jle
mov
push
xor
xor
mov
dec
ret
jg
decb
cmc
xor
mov
insl
loopne
xorl
cld
or
test
shlb
sub
xor
lcall
imul
pushl
push
dec
in
pop
mov
inc
dec
sub
inc
fnop
mov
dec
rolb
xchg
fwait
jns
pusha
add
mov
ss
xor
out
jge
inc
subl
sti
and
sbbb
sahf
int
movb
push
das
or
aaa
push
dec
outsb
push
imul
das
cld
ret
std
in
cmp
ss
push
imul
shl
cld
addr16
add
nop
roll
mov
and
mov
cmp
add
push
ror
mov
inc
jns
pop
hlt
outsb
mov
ficomps
inc
mov
iret
clc
ss
push
ja
ret
call
xor
add
test
inc
dec
and
mov
dec
inc
sbb
pop
addr16
clc
jnp
and
fmuls
idiv
add
jnp
ret
sub
movsl
in
int
dec
mov
fldl
cltd
hlt
ds
insl
mov
pop
push
test
es
fisubrl
daa
movsb
dec
jo
sarb
add
add
popa
mov
icebp
mov
add
sbb
xor
icebp
hlt
dec
fldl
shlb
sub
lea
loopne
jmp
popa
sub
fildll
outsl
dec
push
mov
and
in
xor
mov
dec
fistpl
fwait
push
mov
addr16
pop
sbb
cmp
repnz
jo
cmpsl
add
jb
rorb
call
sub
fistpl
jno
inc
adc
add
aaa
xchg
adc
fs
sub
int3
test
dec
mov
fsubs
dec
repnz
jmp
xor
sbb
xorb
xor
ljmp
mov
in
hlt
jb
xor
pop
mov
aas
fimull
xchg
and
pop
xor
movsl
mov
test
push
mov
or
jmp
cmp
stc
cmp
enter
daa
nop
aas
jecxz
jp
or
mov
add
or
mov
pop
adc
mov
inc
add
jne
xchg
test
int3
je
shlb
mov
aam
push
adc
cmp
in
xchg
push
cli
dec
xor
cmp
cmp
pop
cmc
jmp
sub
add
int3
in
sub
data16
popa
in
mov
fadds
xor
adc
fistpl
sbb
lock
sbb
scas
jp
add
dec
and
jne
dec
inc
roll
xor
pop
orb
mov
call
les
aaa
loopne
dec
das
lea
lret
push
outsl
jnp
lock
outsl
jb
aas
in
xor
push
adc
loope
movsl
mov
dec
and
cli
mov
rorl
inc
push
outsl
fdivr
mov
push
in
and
orl
mov
add
sub
sti
dec
inc
addl
cmp
dec
push
xchg
xor
dec
add
adcw
outsb
cmpsl
enter
test
jne
push
sub
or
xchg
addl
lea
bound
orl
add
dec
mov
and
movsb
mov
inc
loopne
rorl
or
stc
jl
xlat
jge
push
mov
iret
xor
ret
pop
test
lea
in
pop
xor
mov
push
enter
inc
sti
or
cmp
pop
and
xor
shrl
xor
cmp
and
dec
and
mov
sti
sub
push
cmp
sub
lcall
andl
dec
outsl
imul
sbb
push
lods
and
cwtl
mov
inc
es
iret
jle
pop
clc
outsb
sar
inc
repnz
inc
push
cmp
mov
inc
ret
mov
pop
mov
mov
orl
lods
xlat
popa
test
mov
pop
jp
out
sub
fs
loope
in
mov
ret
add
cmpsb
loopne
adc
fnstenv
lea
push
push
daa
dec
jno
xlat
or
clc
add
repz
sahf
dec
insl
dec
mov
loope
adc
cld
pushf
loopne
push
push
push
and
add
push
dec
jb
pop
add
add
aam
shlb
add
andl
stos
sub
push
je
test
out
imull
aaa
xchg
jle
sub
enter
pop
xor
xor
nop
test
add
mov
stos
xchg
sti
mov
test
xor
test
into
dec
fs
or
sub
sbbb
inc
jo
sbb
cwtl
mov
out
jae
cmp
lea
negl
mov
ret
sub
lcall
xlat
sahf
nop
and
push
inc
xor
rcl
aas
xchg
cmpsb
adc
and
orl
incb
and
adc
nop
out
mov
call
xor
fistl
rol
sub
cltd
lock
pusha
xorl
test
dec
lcall
mov
and
or
addl
cmpsl
inc
lcall
push
in
inc
shrl
dec
cmp
js
mov
test
mov
in
push
movsb
sbb
insl
mov
mov
xor
test
xchg
push
inc
push
aas
js
int
dec
jl
dec
mov
subb
push
mov
je
xor
add
push
outsl
dec
pop
cmp
mov
lods
push
sub
mov
ss
adc
and
inc
jbe
loopne
mov
xchg
pop
repz
pushw
inc
add
shll
adc
pop
fcmovnu
or
jecxz
or
je
std
stos
popa
scas
push
jmp
pop
mov
mov
cld
imul
pop
lock
cli
inc
leave
mov
push
bound
test
pop
and
roll
into
sub
dec
fwait
loope
jno
xlat
call
jo
call
lock
test
in
xor
mov
inc
pop
dec
inc
dec
push
mov
enter
jecxz
ds
xlat
inc
repz
dec
mov
push
push
lods
out
faddl
lcall
xchg
xor
scas
insl
push
or
in
pop
clc
dec
enter
adc
mov
inc
out
ljmp
lret
ljmp
jmp
push
out
js
sbb
stos
pop
sbb
jp
inc
and
insl
out
cwtl
inc
enter
flds
ss
frstor
pop
sar
sub
out
imul
xchg
lock
clc
sbbl
push
xor
cmc
aaa
cmp
xchg
adc
repz
jg
cmp
mov
inc
sbb
scas
mov
push
call
lods
repnz
inc
xor
fcoml
aas
dec
ror
inc
add
loopne
lea
push
mov
dec
dec
mov
icebp
inc
shrb
cmp
aam
imul
ror
cmpsl
pop
xchg
clc
fmuls
mov
sti
push
push
xor
in
jle
pmovmskb
inc
fists
dec
pop
subb
dec
dec
shrb
sub
xor
mov
fstl
jo
rcl
pop
sbb
or
mov
dec
sbb
sarb
sbb
cmpsb
xchg
jne
ficoml
test
fiaddl
push
dec
sbb
shl
mov
mov
imulb
ljmp
jb
repz
rorl
shr
mov
adc
jns
inc
xor
inc
testb
popa
mov
inc
push
adc
lea
xchg
jge
mov
mov
jg
inc
jg
mov
xchg
inc
mov
jle
das
enter
clc
bound
lcall
or
cltd
fdivr
pushf
add
fldl
nop
ljmp
mov
ds
xor
hlt
jg
loop
orl
add
sbb
and
fadds
dec
inc
mov
mov
bound
sar
addl
adc
sahf
scas
push
clc
sbb
xchg
std
sbb
mov
mov
rorb
in
ja
pop
xchg
mov
clc
add
sub
xchg
dec
roll
xlat
xchg
dec
clc
lahf
and
or
push
adc
xchg
icebp
out
xchg
roll
xchg
clc
push
and
fsubrl
mov
mov
nop
jge
clc
dec
or
jae
das
enter
sbb
cmpsb
clc
outsl
or
dec
cmpsb
add
bound
xor
or
enter
push
add
xor
imul
les
movl
xlat
mov
xbegin
mov
mov
repnz
push
inc
addr16
sub
inc
mov
cmp
inc
fwait
fs
pop
push
cmp
dec
outsl
call
mov
loope
jg
cwtl
mov
xchg
ret
clc
mov
dec
enter
jb
xchg
shll
fcoms
outsb
sti
das
loope
mov
loope
xchg
pop
addb
xor
enter
js
push
sub
lods
pusha
jecxz
pop
dec
mov
repnz
push
ret
int3
sbb
clc
xor
incl
mov
xor
pop
addb
ror
int3
out
cmpb
gs
rcrb
popa
adc
xchg
lret
ja
ds
inc
addb
outsl
js
lret
dec
inc
mov
std
mov
pop
iret
cmc
aaa
iret
mov
adc
pop
cld
cmp
nop
in
sub
add
orl
adc
lea
les
sub
je
inc
inc
dec
or
pushw
clc
fildl
adc
mov
pusha
push
clc
jb
ret
mov
jmp
mov
bound
ret
adcl
ficoms
and
inc
out
clc
mov
das
pop
and
push
clc
inc
mov
ret
or
lock
scas
inc
push
and
sbb
out
mov
pusha
rep
ret
or
out
aas
adc
insb
rcrb
xchg
adc
mov
sbb
subb
pop
test
clc
pop
test
add
in
clc
mov
add
gs
or
out
call
into
lods
icebp
push
inc
inc
imul
popf
or
mov
add
mov
add
rcl
mov
rcrb
imull
pop
mov
add
sub
int3
push
dec
mov
gs
and
jge
push
mov
ss
orl
lock
jge
xchg
iret
xchg
or
xchg
mov
add
ds
and
clc
mov
and
int
pop
or
icebp
popa
pop
xchg
cmp
cld
add
out
lret
or
lods
mov
or
clc
and
mov
jle
inc
mov
loopne
sarl
cmpsl
fstps
call
fs
pushf
inc
xor
clc
cwtl
into
mov
clc
inc
push
lock
sahf
stos
adc
inc
mov
repnz
int3
insb
sub
dec
add
xor
bound
outsb
fisttps
xchg
orl
pop
sbb
fdivl
and
cwtl
jge
push
mov
inc
and
pop
add
out
fcmovne
and
push
dec
jb
xchg
or
and
mov
inc
push
sub
ret
shrb
dec
adc
out
add
rcrb
jg
cld
sbb
cmp
cmp
lea
out
sarb
repz
in
dec
sarl
clc
mov
pop
mov
addl
adc
jne
test
xchg
mov
xor
mov
sub
clc
insl
js
jecxz
loope
mov
inc
cli
cs
fs
push
lcall
movsbl
mov
sbb
decb
pop
mov
mov
fs
sub
ret
testb
inc
xor
jbe
inc
mov
lds
sarl
pop
cmp
adc
push
clc
aas
jmp
incb
inc
add
ss
mov
sbb
mov
mov
jge
sbb
and
fwait
daa
filds
fs
xchg
cmp
push
outsl
aam
loop
inc
inc
xchg
xchg
aam
mov
jb
ss
sbb
cmp
adc
adc
jmp
loopne
sub
mov
add
mov
subl
dec
jbe
jmp
loope
jno
inc
sub
clc
push
jg
call
sbb
ss
clc
or
roll
mov
adc
push
and
add
mov
mov
cmpsb
sbb
xor
and
or
test
jmp
mov
clc
or
scas
dec
mov
sbb
mov
das
jle
mov
mov
or
clc
in
or
sub
pusha
testl
xchg
lahf
add
addb
mov
pop
mov
pop
out
cmp
test
int
ljmp
lods
dec
scas
xor
mov
mov
je
fwait
or
push
andb
in
jmp
stos
add
sub
mov
mov
or
pop
mov
and
idivl
popa
adc
dec
ds
xchg
mov
js
pusha
adc
dec
mov
mov
xchg
add
test
add
inc
add
enter
cmp
mov
arpl
add
xor
pop
adc
adc
mov
push
mov
fisubs
xorb
aas
cmp
pop
faddl
ja
inc
jle
into
cmp
cmp
sbb
int
lea
mov
mov
add
repnz
xchg
and
popf
sub
popf
adcb
in
pop
sbb
lea
cwtl
jp
mov
scas
movsl
inc
fs
in
pop
addl
enter
jp
push
push
arpl
xchg
lock
cmp
mov
test
lcall
ja
addb
in
mov
pusha
mov
push
mov
sbb
mov
adc
push
shll
insb
test
xchg
subb
sahf
mov
pusha
nop
test
sarl
push
cs
jmp
add
test
adc
jo
jbe
pusha
adc
cwtl
push
clc
xchg
cmp
insl
stc
ljmp
add
lock
sarb
stos
pusha
jae
xchg
add
repnz
shrb
fistpll
pop
andl
cmc
inc
loopne
jno
pop
rcrl
clc
sti
rcrb
clc
ret
fs
or
clc
aaa
xor
mov
jbe
hlt
mov
popa
inc
mov
xchg
adcb
fsubl
fs
mov
clc
sbb
mov
test
loope
dec
push
out
xor
out
pop
dec
lcall
jp
mov
xor
mov
frstor
jbe
jecxz
fimuls
add
rorl
inc
clc
lcall
ja
cwtl
das
jge
dec
xchg
or
add
jle
xor
jae
pop
ret
out
jmp
adc
fcoms
in
cmp
js
sbb
shl
mov
add
and
dec
fs
mov
int3
mov
sbb
pop
incl
cmp
inc
daa
or
andl
pusha
jle
sti
dec
les
clc
inc
outsl
mov
sbb
js
pop
cli
adc
mov
mov
ret
jbe
add
xchg
lcall
cmp
pop
and
xorb
push
rcrb
popa
xchg
pop
cmpsb
xchg
adcb
jp
jbe
add
inc
iret
stos
inc
test
loop
dec
ss
cwtl
xchg
xchg
in
add
sbb
dec
imul
test
pop
or
pusha
inc
inc
outsl
jne
sar
js
push
jbe
or
mov
jmp
mov
xchg
test
int3
inc
lock
ljmp
sarl
adc
mov
pop
xchg
mov
pop
dec
xchg
aad
les
cmp
mov
sarl
mov
das
stc
dec
ss
aam
call
fs
stc
add
dec
rorl
mov
pop
and
pusha
jg
mov
mov
inc
push
ds
popa
shll
clc
subb
inc
bound
rclb
cmpsb
lods
mov
or
mov
ret
mov
clc
add
es
sahf
push
clc
test
aas
dec
sbb
inc
bound
add
adc
es
repnz
into
xchg
aas
jo
pop
dec
mov
inc
push
xchg
lods
es
inc
push
xor
mov
fs
inc
out
mov
dec
aad
sbb
jl
mulb
incb
jae
or
clc
inc
and
adc
ss
lock
push
push
jle
ljmp
jno
clc
push
fs
mov
xor
xchg
leave
mov
pop
or
push
test
mov
pop
and
push
dec
mov
leave
leave
int
pop
and
dec
and
clc
faddl
push
ret
ljmp
pop
jne
xchg
mov
pusha
mov
mov
call
clc
jmp
lret
sub
mov
jb
aas
inc
cmpl
sub
adc
orb
jnp
xchg
jp
bound
addl
lret
jns
addb
pop
inc
push
xchg
mov
lock
inc
add
mov
mov
enter
xor
mov
push
sub
lcall
nop
clc
scas
pop
pop
nop
add
rcr
mov
lret
enter
ss
mov
push
and
dec
adc
addl
hlt
xor
pusha
inc
in
pop
in
int3
sub
add
call
popf
movsl
in
loopne
xor
enter
fmuls
sub
sbb
mov
fwait
mov
xchg
fcomps
lods
cmp
pop
xchg
or
and
sub
mov
sbb
fsubrl
mov
outsl
and
sub
and
add
ja
add
neg
add
and
incl
cmp
in
out
jmp
sub
lret
and
sbb
add
add
push
push
push
test
mov
mov
push
add
outsb
sub
fneni(8087
add
xchg
inc
push
sbb
nop
xchg
in
jle
add
xchg
xor
pop
add
addb
leave
clc
mov
lds
sbb
mov
daa
cmp
shl
xlat
leave
scas
push
adc
jge
addr16
decl
sti
add
pushl
inc
push
add
popf
xor
or
das
push
pop
stos
and
lock
inc
not
inc
rcl
enter
inc
ret
mov
push
mov
add
mov
sti
adc
and
fdivrs
push
cmp
mov
in
fsubl
sub
cs
and
leave
scas
lahf
inc
ds
adc
ret
out
inc
and
xor
pop
popa
inc
repz
insb
dec
dec
sti
inc
dec
cwtl
jo
movb
ret
in
xchg
jge
mov
andl
push
push
pop
add
pop
enter
add
jbe
and
dec
test
stos
aas
mov
inc
cltd
stos
pop
jne
mov
push
dec
push
ret
add
and
dec
mov
or
xchg
pop
mov
inc
mov
repz
mov
xor
pop
roll
repnz
cli
dec
repnz
fisttpll
or
mov
sti
xchg
movsl
dec
add
lea
dec
jbe
xorb
rolb
ss
loopne
mov
out
cwtl
push
jo
add
movl
inc
pop
or
cmpsl
push
ret
sbb
idivl
sbb
push
cmpsl
dec
decb
or
imul
xchg
pop
push
shr
mov
lock
add
add
adc
inc
nop
cmp
addr16
jno
pushf
cmc
sub
and
leave
and
push
outsb
lcall
inc
xchg
xor
xor
outsb
sbb
add
mov
aad
scas
ficoml
or
xchg
push
sub
add
cmp
cmp
xchg
test
push
loopne
mov
stos
clc
pop
push
movl
fildl
subl
inc
xchg
jl
aaa
loope
or
mov
add
add
arpl
inc
mov
jle
mov
rorl
xchg
sbb
push
or
pop
jge
jo
ljmp
aam
sub
push
mov
xchg
fadds
es
ficompl
loop
or
add
lea
push
inc
xchg
or
scas
pop
int
adc
test
xor
not
xor
cmp
test
jg
loop
sub
pop
ss
repz
mov
sbb
lock
xchg
pushf
push
lea
push
test
mov
inc
repnz
aaa
nop
and
bound
or
clc
adc
adc
mov
adc
test
pop
nop
add
rol
sub
xchg
shlb
or
mov
dec
lahf
add
iret
cmpb
ja
xor
mov
popl
insb
das
and
dec
cmpsl
mov
test
lods
sub
sub
mov
in
outsb
cltd
sar
repz
push
mov
mov
mov
jecxz
aad
insb
lods
cmp
mov
mov
inc
scas
rolb
add
stc
xor
mov
mov
mov
xor
mov
in
jecxz
inc
loopne
nop
dec
push
inc
sar
shll
out
loopne
dec
sbb
loopne
xchg
dec
stc
dec
adc
das
mov
and
and
xchg
jbe
inc
jnp
cmp
jb
push
inc
adcl
xor
dec
xchg
test
cmp
outsl
dec
jecxz
lock
sbb
aaa
xor
xor
scas
xor
jg
adc
arpl
es
rorb
add
pushl
mov
jbe
lcall
clc
ror
rol
xor
shr
xchg
push
xor
dec
push
or
mov
data16
pop
stos
pusha
jmp
push
cmp
mov
push
xor
mov
jno
jg
jbe
dec
subb
fisubrl
mov
mov
flds
mov
mov
sub
push
fdivs
jp
xchg
sbb
adc
fsubs
mov
xchg
cld
add
cwtl
and
outsl
mov
mov
ss
xchg
pop
inc
jbe
push
inc
or
mov
or
push
adc
pop
jbe
insb
jo
push
push
cmp
mov
xchg
cmp
jnp
adc
or
cltd
pop
lret
ret
dec
ds
lea
or
and
inc
pop
inc
push
dec
xor
in
sbb
jno
jno
sbb
jbe
sub
mov
fcmovne
fisubrl
pop
loopne
xor
and
sbb
das
cmp
fimull
and
inc
dec
inc
test
xchg
add
sbb
xchg
and
push
sub
pusha
pop
or
jne
sahf
ret
mov
add
lock
push
mov
push
pop
inc
mov
leave
push
fsts
sub
sub
sarl
mov
cs
add
mov
add
leave
pop
jb
nop
adc
ret
lods
pop
push
inc
jge
mov
addb
sbb
mov
mov
inc
xchg
in
filds
gs
les
or
pop
lahf
aaa
outsl
shll
cmp
push
data16
in
ss
ret
jl
jne
jmp
dec
or
jp
inc
sub
scas
stos
sub
xor
ss
push
cli
and
inc
orl
xor
xor
les
jne
adcb
mov
stc
push
cwtl
xor
xor
mov
repz
push
push
dec
sub
or
mov
adc
and
dec
push
jo
nop
xlat
call
test
or
add
and
sub
xor
cmpl
xor
nop
repz
push
or
inc
adc
sbb
cmpsb
mov
lock
lret
and
adc
rcrl
enter
mov
aaa
addb
add
add
lods
dec
push
lods
cli
push
pop
inc
xlat
pushf
xlat
orl
mov
nop
or
add
out
inc
adc
dec
inc
fistpl
xchg
mov
dec
lret
add
jg
mov
pop
add
lea
xor
add
ds
enter
add
int3
mov
mov
push
adcb
push
ret
or
fisubrs
mov
orb
mov
inc
cmp
jmp
andl
dec
xor
inc
sbb
push
in
push
push
std
fidivrs
test
and
inc
sub
mov
les
xor
adc
cmp
mov
push
or
pop
lea
stos
push
lds
lahf
addb
pop
xchg
sub
cwtl
pop
mov
sbb
mov
lea
dec
sub
xor
subl
mov
mov
mov
mov
mov
dec
movb
cmp
orb
jae
jne
xor
dec
xorl
or
push
xchg
shlb
stos
fdivrs
and
jle
pop
addr16
fmuls
mov
dec
int
add
dec
movsl
cs
nop
call
arpl
fmull
andl
push
mov
loop
cmp
pop
push
incb
dec
decl
pop
add
inc
lret
push
fildl
lea
rorb
mov
mov
movsb
das
mov
xchg
add
add
push
fmul
movl
out
xor
inc
into
jne
add
roll
repz
adc
add
adc
inc
dec
shll
xchg
adc
fs
or
rorb
adc
pop
or
aam
inc
and
sbb
loopne
or
loop
sahf
pcmpgtd
jo
test
decb
repnz
xorl
adcl
inc
pop
inc
sub
insb
sarl
imul
add
scas
nop
mov
push
clc
rolb
mov
add
inc
stos
and
cmc
add
out
add
loope
enter
rolb
jg
pop
mov
inc
xorl
and
imul
mov
or
inc
call
std
mov
ja
das
lock
loope
inc
mov
lds
xor
pop
add
and
nop
fstps
cmp
cmp
fld
push
cld
xor
insl
fdivrs
dec
ret
inc
insl
pop
inc
xchg
cld
or
xchg
dec
xlat
pushf
mov
push
inc
sbb
add
sub
mov
sti
or
mov
dec
or
dec
and
xor
pop
inc
add
out
cld
push
in
jns
add
lock
outsl
adc
sarl
jge
or
adc
inc
fisttpl
add
lea
inc
pop
arpl
fistpll
popf
xlat
inc
inc
dec
dec
dec
xchg
sti
pop
ljmp
and
push
mov
addl
out
pop
nop
xor
push
andb
push
mov
pop
stos
loope
cmp
test
fxch
push
adc
xor
ds
daa
adc
push
inc
lock
jl
pusha
or
shlb
stos
lods
cmp
push
pop
dec
out
pusha
pusha
pop
icebp
pop
dec
xorl
dec
xchg
or
ret
push
inc
inc
and
adc
mov
add
push
dec
jbe
hlt
dec
inc
in
xor
cmp
inc
fucom
and
add
cmp
xorl
in
clc
mov
sub
and
call
dec
ja,pn
adc
dec
push
aas
pop
cmpsl
test
movsl
test
jno
dec
ss
shlb
xchg
add
lea
mov
add
push
pop
jp
inc
or
dec
int3
sub
push
adcl
xor
fldcw
add
fimull
xchg
mov
dec
inc
lock
xor
add
push
jae
pop
inc
test
aam
inc
mov
dec
sbb
sub
push
and
sahf
mov
xor
jns
push
rorl
sub
dec
xor
roll
mov
test
fadds
adc
add
fldt
dec
inc
mov
cmp
mov
stos
xor
sarb
dec
mov
inc
add
inc
insl
or
dec
inc
adc
add
inc
sbb
stos
in
push
loopne
xchg
test
and
call
lods
pusha
lock
inc
sbb
mov
fbld
sbb
inc
dec
add
orb
push
mov
jmp
dec
or
ds
pop
imul
push
and
mov
and
mov
cmp
stos
or
rclb
mov
in
loop
cmp
xchg
cmp
jbe
imul
xchg
or
xchg
inc
sub
out
ret
neg
fcompl
ss
call
push
dec
inc
mov
cmp
mov
andl
ret
and
loop
push
mov
cmp
sbb
and
flds
je
jp
aam
ja
mov
dec
jecxz
ss
sbb
int3
pop
insb
adc
push
xor
push
insb
adc
mov
sbb
hlt
in
dec
sub
jae
jg
adc
mov
cmc
andl
and
mov
repz
add
add
adc
sbb
std
das
mov
dec
inc
subb
add
or
dec
or
hlt
adc
inc
pushf
mov
pop
mov
insb
aaa
dec
shl
fisubrs
xlat
add
and
add
repnz
arpl
add
inc
mov
pop
nop
and
xor
xchg
xchg
fld
push
xorb
fisttpl
aad
addb
dec
inc
test
pop
jne
int3
fimull
orb
inc
sub
bsf
rol
mov
stos
sti
dec
fdivl
pop
dec
dec
mov
mov
je
xchg
fisubrs
imul
das
mov
dec
jle
adc
inc
inc
sub
es
les
mov
sbb
andb
xor
cli
icebp
sub
push
xor
data16
test
adc
movsb
inc
fwait
inc
jne
hlt
outsl
lods
inc
mov
dec
in
mov
jl
adc
xchg
xchg
into
enter
push
push
lea
push
push
cmp
and
inc
cmc
orb
aad
add
push
and
jl
and
and
and
add
lret
cmp
dec
and
dec
add
mov
dec
orl
add
inc
push
rcll
adc
aad
nop
mov
inc
xor
mov
cltd
fmuls
mov
add
add
test
sbb
ljmp
jge
and
dec
mov
push
dec
loopne
xchg
bound
nop
in
pop
inc
inc
pop
pop
mov
aas
roll
inc
into
pop
add
arpl
aam
movsl
gs
ja
and
lods
inc
add
ljmp
push
popl
flds
fs
adc
enter
xchg
stos
or
or
lods
push
lret
mov
dec
cmp
cli
in
cmp
inc
test
aaa
add
fbstp
xchg
iret
dec
mov
mov
jp
dec
inc
mov
or
xor
cmp
xor
rclb
pop
rcrl
or
cmp
add
das
adc
add
aas
jo
push
fdivrl
dec
inc
cs
inc
scas
nop
loop
dec
ret
iret
push
cmp
loopne
pop
push
in
push
ror
jno
stos
decb
inc
and
add
sub
icebp
testb
loopne
jae
pop
mov
xchg
push
push
mov
xor
mov
repz
and
cmp
pop
in
insb
sub
push
jbe
orb
dec
xor
ljmp
inc
mov
jge
inc
mov
inc
push
or
xor
pop
inc
mov
sbb
push
cmp
sbb
xchg
xor
xor
in
cmp
adcb
cmp
push
cmp
jns
push
psrlw
add
fistps
and
pop
jns
mov
jne
push
test
roll
xchg
or
aam
push
movsl
dec
mov
or
lock
ficoml
or
adc
adc
out
ret
dec
repz
cmp
insb
xchg
adcl
fisubrs
or
adc
add
inc
addb
cwtl
arpl
xor
clc
aam
xor
sub
pop
outsl
lods
xor
inc
nop
flds
fldcw
inc
dec
ret
shlb
or
mov
cltd
mov
pushf
stos
push
mov
and
sbb
pop
or
push
clc
dec
in
movl
dec
inc
adc
pop
mov
ret
out
mov
and
pushf
add
call
in
inc
sbb
enter
add
icebp
loopne
add
add
fiadds
repnz
test
push
arpl
jb
cmp
movsb
popa
insl
inc
or
mov
shrb
dec
inc
adc
add
subl
arpl
punpckldq
je
pop
aad
call
push
jae
and
aam
sarb
and
xchg
lea
pop
jg
clc
push
cltd
mov
cmp
xor
and
mov
loop
xor
cli
and
fistps
or
and
add
dec
and
inc
cltd
arpl
nop
push
xor
jne
inc
and
sub
or
es
aaa
xor
push
dec
sahf
adc
or
xchg
jecxz
add
push
mov
add
ja
in
neg
pop
sub
push
rolb
je
mov
aad
xchg
idivl
sbb
pop
inc
loop
sahf
and
mov
js
outsl
sub
rclb
jo
dec
jno
les
xchg
xlat
clc
sub
push
sub
push
insb
es
ret
xor
cmp
cwtl
cwtl
jne
and
rcll
xchg
jl
orl
loopne
and
les
mov
rorb
xchg
dec
leave
cmp
adc
push
loop
call
div
add
lret
push
hlt
dec
sbb
jle
add
add
adc
shrb
and
push
lock
sub
xchg
push
fidivs
inc
rcl
dec
addb
stos
lds
lock
push
fsubs
push
cmp
test
jne
mov
mov
mov
mov
add
xor
sub
cmpsb
fisubrl
daa
or
pusha
fidivl
nop
sub
add
les
aam
movsl
test
arpl
pop
push
aaa
outsb
lea
mov
filds
adc
add
adc
push
adc
incl
and
lret
or
add
lds
or
nop
pusha
inc
push
cli
andl
mov
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
push
inc
pusha
mov
inc
rolb
imul
jb
gs
das
sti
fildl
popa
je
push
imul
jae
inc
paddsb
jl
gs
gs
imul
mov
or
outsb
fs
insb
outsl
jae
or
and
jae
daa
cmovle
push
outsl
outsl
fcmovnu
gs
imul
inc
dec
inc
jne
adc
inc
std
lds
je
adc
adc
mov
adc
je
cmp
je
repnz
fs
push
imul
in
fldcw
imul
je
punpcklwd
sbb
je
jmpw
test
fs
in
mov
mov
sub
push
arpl
or
pusha
or
push
outsb
insb
or
or
in
mov
gs
xor
popa
fs
inc
push
fcmovnu
iret
or
dec
jne
inc
xchg
pop
push
or
ss
jnp
dec
popa
fisubl
cmp
out
in
or
outsl
jbe
dec
gs
cmp
pop
fwait
inc
cmp
gs
push
pop
push
and
fsts
push
sti
or
shll
or
cmp
popa
cmpl
testb
popa
in
popa
xchg
pushf
insl
jo
or
or
scas
mov
or
mov
test
inc
add
cwtl
mov
sbb
dec
ja
popa
gs
xor
popa
sbb
push
mov
dec
fs
outsl
rorl
outsl
and
imul
insl
push
dec
fcoml
mov
push
push
push
in
lock
cmovno
sbb
cs
les
inc
jns
push
outsl
push
imul
mov
mov
adc
push
rcr
dec
arpl
fs
jo
fwait
xor
push
idivb
mov
mov
jne
loope
cmp
negb
mov
mov
jne
shr
push
ss
adc
push
push
mov
sbb
xor
bound
or
outsl
jns
cwtl
push
jns
adc
add
or
outsw
xchg
gs
push
ss
sub
lahf
imul
mov
sub
mov
ret
leave
dec
jo
fcoms
arpl
pusha
pop
sub
push
sbb
mov
loope
jp
jbe
sub
xchg
in
ficompl
adc
outsl
ja
enter
imull
shll
clc
nop
mov
dec
popa
jae
and
enter
sbb
insl
or
or
psubsb
arpl
dec
add
add
bound
cmpsb
inc
movsb
sbb
mov
inc
ljmp
adc
dec
outsl
sti
sbb
xchg
mov
adc
adc
ret
push
arpl
dec
pop
popa
imul
insb
mov
addl
insl
jmp
in
imul
jae
dec
or
or
es
test
insl
cmp
inc
hlt
add
xor
jle
ret
lods
jmp
jge
push
jne
ret
rcr
jns
push
dec
ret
repnz
arpl
jae
inc
in
push
fcomp
enter
test
insb
sub
clc
bound
das
dec
pop
popa
rcll
push
push
out
addr16
rclb
sbb
jo
fisubs
mov
fdiv
and
pushf
inc
loop
pop
and
aam
jae
in
push
push
jae
pop
pop
or
sbb
jne
and
stc
das
iret
loop
cs
inc
dec
add
xlat
inc
and
call
sidtl
add
add
rcrb
mov
in
or
inc
or
cmp
sub
jnp
adc
or
jmp
fstps
xchg
pop
push
add
xchg
daa
mov
orb
scas
mov
and
je
and
movsb
adc
stos
add
pusha
jb,pn
stos
sbb
fldl
add
cmpsb
movsb
imul
rcr
xor
or
add
jae
inc
pop
fsts
add
add
pop
or
add
and
add
add
adc
mov
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
sbb
add
add
pop
xor
add
add
add
add
sbb
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jbe
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
xor
cmp
xor
xor
bound
xor
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
push
add
inc
add
add
dec
add
add
add
add
add
add
add
pop
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
je
inc
add
data16
outsb
add
add
and
dec
add
outsb
add
add
insl
add
outsb
add
add
outsl
add
jae
outsl
add
add
add
add
add
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
sub
and
xor
sub
and
xor
sub
and
xor
xor
add
adc
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
popa
add
popa
add
add
add
je
and
inc
add
outsb
add
outsl
add
add
add
add
push
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
test
add
add
add
add
add
dec
add
push
add
dec
add
and
push
add
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
bound
add
arpl
outsl
add
add
js
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
je
inc
add
data16
outsb
add
add
and
xor
xor
add
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
sub
and
xor
sub
and
xor
sub
and
xor
xor
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
xor
add
push
add
push
add
push
add
push
add
push
add
push
add
add
push
add
push
add
push
add
xor
add
xor
add
xor
add
xor
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
adc
add
push
xor
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
insl
arpl
xor
fs
insb
add
xor
cs
insb
add
gs
insb
xor
cs
insb
add
inc
push
xor
cs
dec
dec
add
jb
imul
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
dec
insl
popa
addr16
imul
add
add
dec
outsb
imul
add
inc
jb
addr16
jne
jb
inc
imul
fs
je
push
imul
push
gs
jne
jb
push
popa
insb
jne
inc
add
xor
mov
rolb
xchg
sbb
or
ds
shll
add
xor
mov
xchg
gs
xor
imul
mov
push
outsb
arpl
aad
hlt
fldcw
repz
ret
imull
in
xchg
lret
rorl
push
inc
js
push
pop
les
sbb
add
cmp
pop
test
mov
jae
add
push
fdivr
push
sti
shrl
pop
sbb
in
fwait
push
ds
or
mov
lahf
pop
shrl
subl
dec
testl
stc
inc
out
pop
fmul
jge
sub
fwait
roll
imul
add
pop
iret
mov
jle
in
mov
test
daa
test
frstor
pop
sub
jne
lds
sub
jle
jno
add
jo
insl
sbb
xor
mov
das
test
movsb
and
mov
adc
stos
inc
or
push
push
movsl
jg
sbb
pop
in
sbb
pusha
gs
add
roll
out
push
stos
xlat
sub
loopne
pop
nop
push
pop
ds
std
mov
rcll
dec
das
cmp
pop
add
sahf
setge
pop
ret
mov
out
int
push
adc
jbe
pop
jb
mov
ret
js
cs
dec
jg
cmp
push
fadd
outsb
jae
adc
sub
pop
xlat
sbb
lods
and
lock
add
pushf
lock
add
scas
mov
or
and
js
xchg
test
cmpsb
std
add
test
je
mov
stc
mov
nop
sub
in
mov
test
mov
inc
mov
jecxz
pop
pop
.byte
