push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
pop
push
mov
sub
push
push
push
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
ret
call
in
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
xor
mov
mov
pusha
call
add
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
call
in
sub
push
pushl
push
call
add
pop
mov
pop
ret
jmp
ret
mov
sub
sub
lods
mov
mov
shl
sub
mov
movl
mov
cmp
je
sub
sub
je
sub
mov
add
mov
sub
jb
mov
sub
jg
mov
jle
popf
pushl
pop
dec
call
add
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
call
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
lea
mov
push
mov
addl
pop
sub
or
xor
.byte
hlt
push
fsubl
add
outsb
and
add
and
add
and
add
and
add
add
repnz
add
add
mulb
add
pushf
and
add
and
add
add
mov
and
add
and
add
and
add
and
add
and
add
add
add
and
add
add
in
and
add
add
mov
add
pop
and
add
and
add
and
add
and
add
add
add
add
xor
add
add
push
and
add
and
add
add
add
and
add
add
add
add
dec
and
add
and
add
add
test
add
push
and
add
add
add
and
add
add
or
add
sbb
add
mov
add
sub
add
inc
and
add
and
add
add
mulb
add
pushf
and
add
and
add
add
mov
and
add
and
add
and
add
and
add
and
add
add
add
and
add
add
in
and
add
add
mov
add
pop
and
add
and
add
and
add
and
add
add
add
add
xor
add
add
push
and
add
and
add
add
add
inc
gs
je
imul
push
add
enter
jae
gs
popa
insb
jne
add
add
je
imul
bound
gs
add
aad
inc
gs
gs
inc
imul
jo
outsb
dec
jne
gs
add
dec
add
insb
outsb
inc
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
push
gs
insl
gs
push
add
aam
inc
gs
jb
jbe
push
jns
gs
add
add
je
jb
jbe
je
push
jb
imul
push
add
add
fs
imul
add
rolb
dec
gs
jo
gs
jb
jns
je
push
gs
popa
jae
inc
jb
outsl
jb
add
popa
je
inc
jbe
outsb
je
add
roll
dec
gs
jo
jb
add
push
add
gs
jb
outsl
insl
insl
inc
jb
popa
imul
dec
add
je
jb
arpl
jae
gs
jo
add
add
imul
jb
je
arpl
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
je
jne
jb
outsb
je
push
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
push
dec
inc
dec
xor
cs
insb
add
add
inc
ja
outsb
jne
inc
outsb
je
jns
gs
imul
popa
jae
imul
add
popa
jae
outsb
imul
imul
ja
popa
jae
outsb
imul
imul
popa
jae
gs
gs
inc
outsb
je
jns
add
add
jae
gs
gs
inc
outsb
je
jns
add
inc
ja
outsb
jne
inc
outsb
je
jns
gs
imul
ja
insb
outsl
outsb
gs
outsb
je
jns
add
push
popa
jae
imul
add
popa
jae
outsb
imul
imul
ja
insb
outsl
outsb
gs
outsb
je
jns
add
inc
ja
outsb
jne
inc
outsb
je
jns
gs
imul
popa
jae
imul
inc
push
inc
push
dec
xor
cs
insb
add
add
push
outsl
addr16
imul
inc
add
push
outsl
addr16
imul
add
add
push
fs
outsl
jne
je
jb
add
lldt
push
gs
outsl
add
dec
cs
insb
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
add
test
add
clc
jbe
add
add
add
add
add
or
add
xchg
add
add
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
push
sub
sub
xchg
xchg
xchg
add
scas
lods
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
stos
lods
stos
mov
mov
fwait
pop
xchg
xchg
xchg
or
jle
jl
jnp
stos
lods
stos
add
test
push
mov
mov
mov
ret
ret
stos
lret
leave
lret
lret
int3
rcl
in
rcl
shl
ror
iret
hlt
int
int3
hlt
enter
enter
in
mov
mov
lods
stos
stos
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
and
mov
lret
leave
not
rcl
cld
fcomp
fdivr
xlat
xlat
xlat
fdivr
aad
aam
rcl
sar
int3
int3
int
aad
dec
ror
inc
std
mov
mov
lods
iret
movsl
mov
mov
xor
and
add
push
add
add
add
add
add
add
add
add
lods
lods
lods
add
scas
scas
sbb
mov
jnp
mov
mov
dec
leave
lret
call
ror
fcomp
fcom
call
aam
dec
int
dec
int3
int3
call
aam
dec
into
int
rol
mov
mov
scas
std
cmpsb
cmpsl
test
xchg
xchg
xchg
mov
pop
push
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
push
add
inc
add
pop
add
push
or
or
sbb
push
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
leave
leave
dec
int3
int3
call
rcl
call
fdivr
fcom
call
dec
int3
into
dec
leave
lret
int3
into
inc
mov
mov
mov
cmpsl
cmpsl
test
mov
lcall
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
popa
bound
push
push
push
imul
aas
aas
inc
push
sbb
das
or
sbb
cmp
cmp
and
adc
push
pop
pop
add
add
add
add
arpl
add
mov
pop
mov
mov
mov
mov
mov
rol
ret
ret
enter
ror
call
aam
call
aam
call
rcl
dec
leave
enter
inc
ret
ret
mov
mov
ljmp
movsl
movsl
sahf
pushf
pushf
xchg
xchg
xchg
lcall
addb
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
outsl
xor
jl
jle
jg
jno
jno
popa
popa
bound
cmp
inc
inc
mov
outsl
jo
nop
bound
pusha
inc
inc
inc
xor
add
add
add
add
movsl
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
enter
leave
dec
lret
enter
ret
mov
mov
ljmp
movsb
movsl
lcall
xchg
xchg
xchg
xchg
xchg
cwtl
cwtl
cwtl
fwait
fwait
fwait
in
addb
push
or
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
jo
jo
pop
pop
pop
or
pusha
mov
incb
jl
idivb
jnp
outsl
outsl
jo
data16
data16
jae
jg
jge
jns
jns
gs
inc
cmp
sbb
sbb
movups
lods
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
cmpsl
cmpsl
lcall
xchg
incl
addl
xchg
xchg
xchg
mov
mov
xchg
mov
js
jns
cs
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
popf
in
mov
mov
addb
decb
mov
loope
jno
enter
mov
addl
xchg
addr16
cmp
es
jle
cltd
lcall
test
stos
stos
sti
lods
stos
lods
stos
lods
lods
test
movsl
mov
xchg
xchg
xchg
decl
jg
jp
js
jp
jns
mov
cwtl
movsb
movsb
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
sbb
add
add
add
add
add
add
add
add
push
pop
adc
mov
mov
xchg
xchg
xchg
incl
xchg
std
xchg
xchg
xchg
std
xchg
xchg
cwtl
stc
xchg
xchg
xchg
in
mov
or
lea
xchg
femms
aaa
femms
or
dec
insl
imul
xchg
fwait
cltd
fistps
cltd
stc
std
mov
decl
mov
lcall
ljmp
mov
std
mov
mov
mov
std
mov
mov
movsb
mov
jl
lods
test
add
adc
test
mov
incl
xchg
decb
xchg
pushf
sahf
sahf
std
mov
mov
xchg
in
nop
in
xchg
push
jne
push
or
inc
or
inc
es
es
dec
dec
dec
outsw
jb
test
xchg
xchg
rclb
xchg
xchg
std
mov
xchg
call
sahf
lahf
jmp
cmpsl
stos
pushl
cmpsl
lods
mov
xchg
test
mov
xchg
scas
mov
mov
ljmp
mov
add
pop
pop
adc
scas
mov
ret
mov
fwait
incl
mov
xchg
nop
decl
xchg
xchg
sahf
popf
popf
mov
test
movsb
mov
xchg
fstpt
jl
push
push
push
outsl
dec
dec
dec
pushaw
popa
arpl
je
mov
jge
orl
int
xchg
xchg
in
xchg
xchg
testl
lea
jmp
mov
mov
pop
mov
ss
mov
ja
mov
movsl
mov
mov
mov
stos
lods
lods
mov
movsb
movsl
add
mov
add
pusha
adc
mov
ljmp
popf
decl
xchg
call
xchg
xchg
call
xchg
fwait
fwait
lcall
lahf
mov
std
movsb
mov
cltd
out
xchg
xchg
nop
nop
xchg
les
cltd
in
xchg
xchg
out
lea
nop
stc
xchg
test
std
xchg
jae
cltd
push
cmp
dec
jle
lods
inc
jge
mov
jns
mov
jb
mov
outsb
ljmp
adc
lods
or
lods
or
mov
jg
mov
mov
stos
pushf
mov
movsl
movsl
add
pop
pusha
adc
mov
lcall
xchg
xchg
call
lcall
sahf
mov
sahf
lcall
xchg
cwtl
call
xchg
nop
call
xchg
lcall
cltd
sahf
stc
lahf
xchg
sahf
cld
pushf
xchg
xchg
insb
mov
xchg
push
jle
cwtl
dec
jns
cltd
cmp
cltd
sub
pop
imul
mov
adc
adc
lods
adc
lods
pcmpgtd
lods
adc
mov
imul
mov
imul
ds
fwait
lods
mov
scas
scas
scas
movsb
movsb
movsb
sub
movsb
movsb
movsb
add
pop
pop
adc
mov
lds
pushf
call
sahf
sahf
jmp
mov
mov
call
nop
decl
test
xchg
jbe
fwait
jno
cltd
bound
call
sub
call
or
call
add
cltd
add
mov
adc
ljmp
outsl
pushl
sbb
jb
mov
and
mov
inc
test
ret
mov
scas
lods
mov
sahf
mov
movsl
add
pop
pop
adc
scas
mov
shlb
lcall
mov
cmpsb
ljmp
test
cmpsb
lcall
jg
decl
inc
outsl
decl
sub
mov
pop
incl
push
push
incl
add
mov
push
call
add
lcall
jmp
and
mov
ja
mov
sub
inc
sub
inc
sub
jg
leave
das
cmp
das
cmp
enter
mov
mov
lret
mov
add
add
add
add
add
push
push
adc
test
ljmp
sahf
jmp
test
ljmp
lods
stos
pushl
lods
lods
jmp
jno
decl
or
incl
or
add
push
incl
add
xchg
push
decl
add
xchg
add
fwait
add
sahf
add
add
lods
adc
mov
cmp
inc
cmp
dec
cmp
call
cmp
mov
roll
dec
mov
std
mov
mov
movsb
mov
mov
add
dec
dec
adc
mov
mov
lahf
fwait
popf
ljmp
scas
scas
pushl
mov
pushl
mov
ljmp
ja
decl
or
mov
pop
incl
or
xchg
push
incl
add
mov
push
call
add
pushf
add
add
cmpsl
add
lods
add
mov
jno
ret
dec
inc
dec
inc
call
inc
mov
rorb
fmuls
fmuls
fimull
fisttpll
ficoml
call
test
mov
mov
mov
lahf
mov
add
dec
inc
adc
jl
popf
mov
lcall
test
mov
mov
mov
mov
mov
mov
mov
mov
scas
mov
movsb
xchg
decl
sbb
nop
pop
pusha
decl
adc
or
mov
push
decl
add
sahf
add
add
cmpsl
add
test
popa
pushl
es
int
nop
call
push
cltd
call
push
cltd
ficoml
fistpl
fistps
ficomps
jmp
pop
lahf
jmp
pop
mov
call
xchg
mov
mov
cmpsl
cmpsl
test
lahf
mov
lahf
add
inc
inc
adc
ja
sahf
cltd
sahf
jmp
sahf
cltd
popf
ljmp
mov
mov
mov
mov
mov
mov
ljmp
inc
jbe
nop
and
xchg
and
xchg
and
call
sbb
nop
or
call
add
lcall
jmp
add
mov
data16
mov
xor
fldenv
fbld
jmp
bound
jmp
cmpsl
jmp
addr16
jmp
stos
fildl
mov
cmpsl
cmpsb
mov
lahf
lahf
add
inc
inc
adc
jp
xchg
cwtl
call
mov
lods
scas
pushl
mov
mov
mov
mov
ljmp
push
jle
xchg
sub
lcall
lcall
sbb
pop
call
pop
jmp
add
lods
add
mov
pushl
adc
roll
fsubl
jmp
outsb
lods
jmp
jno
call
jae
in
je
in
je
out
je
out
je
out
jae
jmp
xchg
mov
cmpsb
cmpsl
lcall
sahf
add
jg
cmp
imul
mov
lcall
mov
pushl
mov
mov
inc
rol
mov
movsl
scas
lcall
xor
lahf
cmp
lahf
aaa
je
mov
sbb
pop
call
add
add
test
pusha
pushl
add
add
sbb
fistl
jmp
js
call
jle
jmp
mov
in
cmpb
repnz
repnz
jmp
mov
inc
mov
test
sahf
popf
pushf
daa
sahf
mov
mov
add
pop
add
aaa
cmp
pop
pop
pop
jne
jle
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
rol
ret
pushl
insl
mov
fwait
cmp
inc
jle
mov
aaa
js
lcall
lcall
pop
ljmp
add
add
add
ret
dec
daa
cmp
jmp
mov
push
mov
push
pop
push
xchg
ret
push
xchg
stc
xchg
stc
ret
nop
mov
inc
ret
ret
clc
lods
lods
stos
mov
sahf
popf
xor
pushf
add
add
add
add
xor
push
inc
dec
inc
jb
pop
dec
in
push
decl
mov
mov
mov
sar
ret
inc
ret
ret
mov
jge
lcall
jg
stos
dec
test
movsb
xor
lcall
jmp
add
lods
add
mov
fs
mov
add
enter
xlat
xor
out
xchg
push
cltd
enter
push
fwait
pushf
enter
enter
int3
cli
lahf
int
sti
lahf
into
cld
lcall
loopne
lret
inc
mov
mov
mov
sahf
sahf
mov
add
add
add
add
sub
outsb
dec
dec
dec
jecxz
pusha
popa
call
mov
mov
mov
mov
inc
mov
mov
mov
lcall
dec
mov
scas
dec
mov
movsb
sub
cltd
pop
pop
lcall
add
lods
add
mov
arpl
mov
add
movl
jbe
filds
out
lea
push
movsl
into
push
cmpsb
int3
push
cmpsl
int
sti
cmpsl
iret
cld
cmpsb
sar
cli
test
sar
std
test
sar
negl
int3
dec
enter
mov
into
mov
xchg
xchg
add
fwait
lcall
xor
or
inc
bound
pop
xlat
jne
jb
mov
mov
ret
mov
ret
ret
inc
vpaddd
enter
rol
mov
cmpsb
jmp
push
mov
lods
dec
xchg
mov
add
jmp
add
mov
arpl
mov
add
int3
add
xlat
add
ficoms
jnp
out
pop
test
cmc
lahf
lret
lods
sar
cld
mov
cli
mov
sti
scas
sar
mov
mov
mov
std
mov
std
mov
cld
mov
push
movsb
mov
call
enter
mov
fisubl
xchg
xchg
or
add
add
xor
add
dec
dec
outsb
jo
mov
mov
aam
xlat
jmp
xlat
fdiv
iret
rcl
std
int3
int
dec
lret
lret
leave
lret
lret
mov
lods
jmp
push
mov
lods
jle,pt
sahf
push
jmp
add
mov
fs
mov
add
iret
add
xlat
add
fiadds
je
jmp
jno
sti
lods
aad
std
mov
fcos
cld
mov
fcos
mov
std
mov
xlat
std
rcr
mov
int3
jmp
mov
call
lret
int
mov
sahf
lahf
jo
xchg
xchg
or
add
add
xor
add
add
add
or
mov
pop
out
call
test
in
leave
fucom
fsubp
fcmovnu
fcomi
fcomp
fsqrt
aad
std
into
iret
sar
mov
imul
jmp
add
mov
arpl
mov
add
lret
add
add
faddl
jbe
in
jbe
in
das
xchg
clc
mov
cld
mov
std
ret
loope
std
loopne
inc
loopne
inc
std
std
enter
leave
loopne
std
enter
lret
cli
mov
leave
fmul
iret
mov
mov
xchg
adc
add
add
incb
std
incl
incb
repnz
cmc
or
out
jmp
in
out
in
sub
out
in
dec
ljmp
xchg
out
jmp
aad
fcmovnu
jmp
mov
xchg
test
ja
movsl
push
jmp
add
mov
arpl
mov
add
int3
add
xlat
add
fiadds
ja
jmp
inc
popf
cld
mov
loop
dec
loop
dec
in
dec
jecxz
std
int
dec
jecxz
std
int3
loopne
dec
jecxz
shl
call
in
call
in
cli
out
mov
inc
ret
out
test
test
xchg
xchg
xchg
sbb
fwait
cltd
add
std
add
std
add
clc
testl
lock
icebp
push
out
icebp
lock
out
icebp
out
cmp
out
in
pop
loopne
les
xchg
sti
lahf
and
jmp
add
add
mov
data16
mov
add
roll
jb
fiaddl
jbe
in
jns
in
adc
pop
test
cld
shl
shl
shr
std
shl
shl
call
out
std
fsubr
call
jmp
std
std
iret
loope
repnz
aad
in
lret
lret
stos
test
xchg
and
xchg
cwtl
add
std
cli
add
std
clc
add
cld
stc
add
cmc
repz
aam
sarl
negb
add
test
pop
ljmp
add
ret
dec
add
add
fldl
ja
call
sbb
cld
ret
cld
xlat
jmp
fucomi
fldpi
fsubr
fucomp
std
fsubr
std
fsubrp
std
loopne
fucomip
std
shl
push
ret
aad
out
ror
sar
lods
lods
lods
lods
xchg
xchg
xchg
outsl
jo
add
add
mov
loopne
add
leave
lds
stos
jnp
repnz
and
lahf
add
cmpsb
add
mov
arpl
mov
add
int3
add
aam
jae
filds
jne
jmp
sub
cld
aam
fsubrp
fucomi
std
fucompp
std
fucomi
call
aam
sti
shl
cld
shl
clc
iret
fdivrp
stc
int3
cmc
rcl
out
mov
jmp
rcr
fcomp
fdivr
mov
mov
cltd
cltd
lcall
lcall
mov
mov
add
leave
adc
scas
xchg
jmp
add
mov
mov
add
roll
outsb
call
add
add
ljmp
sti
cwtl
cld
leave
loopne
sti
int3
loop
cli
stc
mov
aam
repz
sar
repnz
into
call
mov
iret
std
ljmp
imul
fsub
cmc
fsubrp
mov
mov
xchg
add
add
add
int
add
rol
mov
cmpsb
loopne
xor
pop
ljmp
add
mov
add
int3
or
rorb
jbe
fimull
js
loopne
cmp
dec
cwtl
call
mov
jmp
scas
enter
mov
cli
fdivl
lock
int
fmul
rcr
shl
xlat
fcmovb
out
loopne
in
in
test
out
out
popf
jmp
leave
lret
push
lods
lods
stos
adc
cmpsl
cmpsb
test
lahf
lahf
movsb
add
rolb
ret
mov
stos
aam
dec
cmp
sbb
cmpsb
sbb
scas
and
jns
mov
inc
test
ret
push
mov
lret
test
mov
shll
rcl
mov
lret
rcl
int
iret
shlb
fcom
jg
fcmovu
jb
gs
in
out
out
call
div
sub
div
and
icebp
lock
fstp
or
mov
int
mov
add
mov
rol
mov
mov
les
insb
lock
jne
ljmp
mov
sarb
stos
mov
ret
mov
cmpsl
mov
mov
enter
int
addr16
iret
push
iret
rcl
dec
aad
xlat
inc
rcl
aam
aad
fldenv
ficompl
fcmovnu
ficoms
fsub
loop
loope
in
out
ljmp
sti
testb
std
add
std
incb
incb
mov
mov
mov
mov
lods
mov
mov
mov
mov
mov
ret
mov
ret
xor
into
lret
rcl
and
rcrl
iret
aad
adc
aam
or
fcom
push
rcr
xlat
add
fstp
add
add
in
add
in
ljmp
incl
mov
mov
add
ret
les
rol
sub
mov
mov
push
ret
or
leave
enter
enter
lret
aam
add
add
fcom
add
xlat
add
xlat
add
xlat
loopne
aad
fiaddl
loopne
loopne
fstp
fiadds
in
call
add
incb
std
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
les
ret
ret
mov
mov
mov
stos
test
dec
cmpsl
test
xchg
pop
add
add
add
add
add
add
mov
scas
adc
sarb
into
iret
shr
aad
aad
rcl
aam
into
iret
iret
cli
int3
lret
lret
stc
int3
lret
mov
mov
iret
lods
lods
lods
fwait
xchg
xchg
xchg
dec
ds
add
add
add
add
add
add
add
addl
push
add
add
add
add
add
add
add
add
add
mov
mov
mov
enter
into
xlat
aad
call
aad
dec
rcl
dec
iret
into
dec
lret
mov
mov
stos
icebp
cwtl
cltd
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
jne
jae
jae
gs
dec
inc
inc
cmp
sub
sub
ss
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
dec
int3
int3
call
rcl
call
rcl
dec
int3
int3
inc
mov
pushl
stos
sahf
sahf
lahf
cwtl
cwtl
cwtl
jmp
jno
xchg
push
pop
pop
dec
add
add
add
add
add
add
cmpb
jnp
jl
test
jnp
imul
movsb
push
push
push
stos
push
outsb
insl
push
pop
pop
cmp
cmp
pop
jno
jo
scas
mov
pop
mov
mov
mov
mov
mov
rol
inc
mov
mov
mov
ljmp
fwait
pushf
call
xchg
xchg
cltd
cltd
cltd
out
test
adc
adc
add
add
add
add
add
pop
fwait
lcall
fwait
xchg
cwtl
fcoml
addl
jmp
js
sarb
jp
jns
jns
jae
jae
push
push
push
cmp
aaa
pushf
popf
pushf
mov
scas
scas
repz
scas
scas
sti
scas
scas
lods
std
test
test
call
xchg
call
mov
lods
jmp
scas
lods
leave
movsb
movsl
movsb
cltd
je
jb
adc
adc
add
add
add
add
outsb
insl
insl
pop
nop
mov
loop
cwtl
popf
incl
mov
sti
xchg
xchg
xchg
lock
nop
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsl
jo
orl
lcall
lea
call
sahf
ljmp
test
mov
mov
mov
xlat
cmpsl
mov
addl
add
add
popa
pop
popa
or
lods
mov
cmpsl
lahf
movsl
decl
mov
mov
cwtl
xchg
xchg
std
popf
popf
sahf
sti
lahf
mov
lcall
push
push
jo
pop
push
outsl
imul
jle
subb
xchg
lock
mov
lcall
mov
pushl
pop
mov
jge
mov
scas
lods
insl
stos
stos
test
add
add
add
pop
or
mov
in
movsb
test
xchg
nop
xchg
call
xchg
lcall
cwtl
lcall
popf
popf
cli
xchg
xchg
cwtl
jmp
xchg
mov
jecxz
orb
xchg
insb
test
xchg
pop
cmp
dec
jnp
mov
xor
je
mov
insl
pushl
sbb
pop
mov
scas
scas
jle
movsb
movsl
push
popa
pusha
pusha
or
mov
in
mov
xchg
lcall
mov
lahf
call
mov
xchg
jnp
std
xchg
jb
cld
xchg
pusha
cmp
dec
js
xchg
cmp
xchg
sub
xchg
sbb
call
or
ljmp
pushl
sbb
mov
and
mov
stos
mov
scas
scas
scas
xchg
lahf
sahf
popf
adc
add
add
pusha
pusha
popa
or
mov
stos
mov
lahf
jmp
stos
stos
jmp
xchg
lcall
cmp
mov
decl
adc
xchg
push
decl
add
call
add
cmpsl
or
pushl
jp,pn
shrb
dec
xor
lret
xor
xchg
inc
test
mov
test
cmpsl
sbb
add
add
pop
pusha
popa
or
movsl
test
ljmp
scas
mov
mov
mov
mov
mov
movsl
xchg
mov
decl
push
push
incl
add
push
call
add
mov
add
mov
insb
inc
aaa
cmp
inc
mov
into
inc
mov
roll
call
inc
xchg
fmuls
call
bound
stc
mov
mov
mov
std
add
add
add
popa
or
sahf
mov
ljmp
mov
mov
mov
stos
lcall
push
arpl
nop
sbb
mov
pop
decl
add
add
mov
add
scas
add
mov
dec
xchg
call
push
fwait
ficompl
jmp
pop
lahf
jmp
pop
mov
fildll
lret
cmpsb
mov
ret
cmpsl
xor
add
add
dec
pop
jge
jp
fwait
xchg
cwtl
jecxz
sahf
mov
pushl
mov
mov
jmp
sub
lcall
and
xchg
push
pop
call
add
test
pusha
ljmp
pop
imul
fisubl
jmp
outsb
test
out
stos
jmp
jo
in
jae
call
test
mov
cmpsl
test
inc
jg
addb
add
dec
dec
dec
pop
outsl
outsb
imul
xchg
fwait
lcall
mov
mov
sar
mov
jmp
cmp
mov
sub
cwtl
or
pop
jmp
pusha
pushl
or
xchg
jmp
jp
jmp
test
push
xchg
out
xchg
mov
cmpsl
test
cltd
lcall
sub
push
push
push
dec
pop
addr16
loopne
mov
mov
sarb
mov
mov
test
jg
mov
pop
pop
jmp
add
mov
fs
mov
adc
mov
push
xchg
cltd
cltd
enter
enter
lret
clc
cwtl
lods
inc
mov
stos
popa
mov
add
add
inc
inc
pop
pop
pop
push
fisttpl
mov
mov
rol
inc
ret
pushl
push
xchg
lods
dec
cmp
pop
insb
jmp
add
mov
fs
mov
add
fisubl
cmp
mulb
sar
cli
test
iret
std
stos
sar
cld
lods
sar
stc
cmpsl
lret
jmp
mov
inc
rol
stos
stos
stos
jne
sahf
popf
or
add
add
push
push
dec
aaa
jb
jb
stos
stos
stos
ror
int3
int
lret
cmc
lret
int3
lret
leave
leave
std
enter
movsb
mov
stos
bound
jmp
add
mov
arpl
ret
dec
add
flds
xchg
push
xchg
mov
cld
mov
fdivr
cld
mov
xlat
mov
sar
jmp
rol
scas
lods
lods
mov
add
add
add
add
pop
or
aad
dec
loopne
loope
fsubp
fistps
fcmovu
fcom
out
mov
addr16
test
je
cmpsb
push
pusha
pushl
add
leave
add
add
or
dec
mov
cld
ret
loop
inc
loop
dec
inc
std
leave
loopne
dec
loopne
cld
out
mov
leave
divb
popf
sahf
sbb
add
add
incb
std
incb
jmp
or
out
in
sbb
in
in
xor
loope
in
lds
mov
mov
add
mov
fs
add
iret
add
faddl
jbe
ljmp
std
std
iret
out
call
out
shl
call
in
std
out
xlat
jmp
push
fdivr
fcmove
sar
mov
mov
add
std
incl
incl
cld
cld
incb
aad
mov
pop
xchg
sahf
or
test
add
lds
push
roll
jo
fiadds
ja
out
and
shl
fsubr
std
fldl2t
fsubr
fsubr
std
xlat
out
std
fsub
sti
aam
push
enter
iret
xlat
sti
mov
popf
sahf
das
add
add
into
int
or
fs
mov
add
mov
add
roll
jae
loopne
ja
in
xor
stc
int
clc
lret
loopne
test
repz
aam
out
aam
in
sar
out
in
shl
jecxz
fsubrp
leave
mov
das
std
incb
aam
mov
jb
push
data16
mov
insl
inc
sbb
int3
and
xlat
sub
sti
fists
clc
jecxz
mov
out
in
lret
mov
lret
mov
sarb
jecxz
fcompl
in
out
jns
rcl
dec
mov
add
add
mov
scas
xchg
mov
ljmp
nop
fidivrl
jg
rol
stos
mov
mov
ret
nop
sarl
int3
insl
aad
int
ror
rorl
xlat
fdivrs
fsubp
fildll
jecxz
frstor
in
repnz
in
jmp
fildl
incb
incl
mov
mov
outsb
scas
mov
scas
mov
push
mov
mov
xor
enter
rcl
aam
sarb
or
loopne
or
int
add
incl
std
add
add
add
int3
into
pextrw
or
into
int3
into
add
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
lcall
rol
enter
leave
mov
ret
ret
sarl
scas
mov
stos
stos
stos
xor
jae
add
add
add
add
add
add
add
add
add
add
add
add
lods
stos
stos
add
mov
jmp
aad
std
rcl
sar
iret
into
into
std
stc
mov
mov
roll
pop
add
add
add
add
add
add
add
add
jno
jb
addr16
inc
inc
das
cs
inc
and
add
add
mov
mov
cmpl
dec
into
into
call
rcl
dec
iret
int
mov
mov
jmp
mov
push
add
add
add
add
je
je
xchg
adc
outsb
jo
popa
popa
arpl
outsl
insl
insl
jb
pusha
bound
pop
pop
pusha
sbb
mov
in
mov
mov
mov
lods
stos
lcall
xchg
xchg
lcall
cwtl
cltd
lds
jae
and
add
pop
add
add
jae
jb
fwait
xchg
fwait
mov
test
mov
mov
or
test
push
dec
dec
inc
mov
pushf
into
movsb
mov
lahf
sti
xchg
xchg
xchg
decb
mov
popf
pushf
fwait
ljmp
mov
mov
mov
xchg
xchg
xchg
aas
sub
push
add
add
jg
jg
stos
movsb
cmpsl
cmpsl
test
test
mov
mov
xchg
xchg
xchg
cld
popf
pushf
pushf
cmc
cwtl
cwtl
cwtl
in
test
push
imul
jge
mov
xchg
notl
mov
pushl
imul
call
lods
stos
stos
add
add
add
test
test
xchg
xchg
xchg
lcall
cltd
fwait
lcall
cltd
lcall
mov
loope
jne
out
xchg
arpl
std
fwait
inc
ja
cmpsb
cmp
scas
sub
mov
jo
mov
insl
pushl
sahf
lods
lock
mov
imul
into
add
test
pop
lods
movsl
stos
test
sahf
sahf
popf
jmp
mov
xchg
decl
push
ja
popl
lea
push
mov
pop
lcall
or
scas
push
outsl
mov
and
inc
sub
lds
xchg
mov
mov
subl
jne
push
mov
movsb
test
ljmp
mov
lcall
sub
decl
or
xchg
push
decl
add
mov
adc
shll
dec
ds
roll
call
inc
call
push
xchg
dec
cltd
mov
mov
mov
mov
add
add
imul
cmpsb
lahf
mov
pushl
mov
ljmp
cmp
xchg
sbb
pusha
decl
add
mov
add
mov
push
xchg
fstpl
jmp
pop
mov
jmp
cmpsl
call
fwait
mov
test
cmpsb
cmpsb
pop
add
add
arpl
adc
pushf
fwait
lcall
mov
mov
lcall
xor
cltd
and
xchg
push
pop
lcall
add
mov
xor
call
jp
push
jle
out
jg
fstps
mov
mov
add
add
dec
adc
addr16
mov
mov
mov
mov
ret
mov
bound
lcall
add
add
mov
arpl
les
insb
fmull
in
mov
cmc
xchg
cwtl
enter
enter
mov
movsb
sub
inc
inc
aas
adc
push
xchg
xchg
mov
inc
ret
inc
mov
cwtl
ljmp
pop
push
pushl
add
aam
ja
ljmp
cli
stos
iret
sti
scas
sar
std
scas
sar
cld
lods
sar
in
mov
inc
mov
movsl
ds
std
incb
xor
outsl
jno
scas
mov
mov
aad
mov
aam
rcl
shr
leave
lret
mov
mov
jmp
inc
add
aam
jae
out
test
notl
std
rcr
std
ret
std
ret
cld
ret
icebp
mov
ret
test
addl
stos
stos
lods
add
jmp
or
call
out
outsb
mov
add
mov
add
fldl
jbe
lock
dec
in
std
iret
in
call
out
aad
aam
push
enter
into
in
scas
lods
lods
popa
cmpb
incb
std
std
incb
int3
int
sub
lahf
sbb
stos
add
mov
add
loope
jns
repz
movsl
inc
loope
aad
out
std
aad
sti
shl
stc
shl
push
enter
int3
shl
mov
mov
xchg
xchg
xchg
pop
ret
adc
mov
push
gs
mov
push
jne
fstpl
jg
ljmp
cli
out
mov
iret
repnz
loope
lret
aam
jmp
scas
ret
ret
les
fwait
lcall
add
add
rol
mov
lods
xchg
inc
and
push
mov
shll
lret
js
mov
mov
lret
adc
int
xlat
int3
iret
pop
fst
dec
jecxz
loopne
call
in
out
sbb
rol
add
mov
cmp
mov
scas
push
mov
mov
lds
sbb
bswap
int3
int3
or
aam
push
std
incb
addb
add
add
add
mov
std
add
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
adc
inc
repz
cwtl
das
fs
adc
mov
das
push
imul
dec
in
sub
mov
imul
jg
cmpsl
mov
mov
psrld
lds
xor
jecxz
test
pop
mov
sbbb
xlat
jecxz
or
mov
cwtl
pop
sbb
push
dec
jl
mov
outsl
fnsave
cmp
xchg
hlt
and
adc
jp
movsb
addr16
cwtl
lds
in
ljmp
or
imul
popf
pop
xchg
sub
mov
dec
jecxz
adc
arpl
xchg
push
out
test
stos
or
fildl
insl
add
cld
sub
sub
dec
dec
fistpll
test
std
roll
enter
test
and
out
xchg
cmp
add
fstps
and
push
dec
inc
xlat
jle
cld
xchg
jno
pop
cmc
rclb
jl
and
cmp
push
inc
lcall
cwtl
mov
or
fstl
mov
mov
bound
stc
xchg
sbb
cmp
mov
mov
cmp
aam
push
xlat
outsb
xchg
sbbl
adc
dec
mov
cwtl
das
pushf
pop
mov
dec
lock
jno
adc
imul
xchg
aaa
arpl
mov
mov
cmp
adc
outsb
scas
inc
dec
loop
shl
mov
mov
add
and
stos
push
or
enter
dec
xchg
bound
xchg
mov
inc
jecxz
xchg
sub
add
bound
or
orb
pop
sahf
fucomip
in
andl
inc
fisttpll
or
mov
ret
hlt
in
fstl
push
mov
sti
push
push
jmp
push
mov
or
inc
shll
mov
xchg
and
adcb
ja
cli
test
lahf
ss
pop
mov
push
loop
scas
inc
mov
ror
fs
and
adcb
inc
jne
mov
cltd
movl
push
sub
adc
sbb
ja
imul
jecxz
lea
fisttpll
or
sarl
sahf
pop
out
iret
insl
stc
nop
mov
rcll
repnz
xchg
sub
adc
or
repnz
addr16
sub
mov
cs
iret
data16
out
dec
jecxz
popa
in
test
mov
mov
movb
shll
cmpsb
cmp
mov
les
stos
data16
fmull
test
das
loope
xchg
adc
cmp
movsb
rclb
cmp
mov
fidivs
fcomps
or
xchg
jge
js
pop
sahf
sbb
scas
lock
and
mov
add
in
je
shrb
xchg
je
ja
xchg
lret
push
movsl
cld
cmp
les
into
shrb
mov
ret
hlt
xor
mov
inc
xchg
mov
lcall
pop
out
sub
pavgw
jl
sbb
iret
mov
mov
and
aad
jne
jae
pop
pop
repz
cli
xchg
cli
stos
jp
fstpl
sbb
xor
into
lahf
push
mov
add
in
icebp
movsb
aam
adc
div
mov
xchg
sub
mov
cs
iret
data16
dec
jecxz
pusha
in
test
mov
mov
lds
cmpsb
cmp
mov
les
stos
data16
fisttpl
sbb
loopne
xchg
adc
cmp
mov
cmp
mov
fidivs
xlat
pop
icebp
or
xchg
jl
js
pop
mov
inc
fpatan
dec
push
jns
test
lods
fdivrl
jb
je
repnz
mov
in
es
outsb
test
loope
mov
imul
inc
xlat
jl
mov
jo
outsb
add
loope
mov
jbe
or
fildll
out
test
pop
out
jae
cwtl
das
fildll
loop
ja
jbe
jae
mov
fildll
add
jae
and
fildll
in
xorl
addr16
pop
loop
out
test
add
add
repz
sub
orb
daa
mov
iret
add
addr16
inc
frstor
pop
out
test
mov
daa
out
cmpsb
cmp
ds
in
sbb
loop,pt
insb
mov
pushf
call
or
push
mov
out
cmpsb
cmp
push
push
jge
aas
ret
ja
repnz
fwait
xor
and
cmp
ret
xchg
repnz
sti
xchg
sub
sti
xchg
push
cli
xchg
cs
xchg
repnz
adc
push
stc
jmp
sub
mov
test
loop
lahf
adc
jnp
incb
inc
fdivl
loop
mov
rcrb
sti
cmp
shrb
jmp
push
out
or
pop
cmp
scas
inc
push
lock
and
xor
icebp
repnz
loop
clc
imul
lds
idiv
shrl
and
rcrb
xchg
sub
iret
sub
fsubrl
add
addr16
loope
fsts
sub
pop
divb
lret
cli
loope
ljmp
cmp
ss
cli
loope
lds
mov
js
lret
cli
loop
ficoml
cs
bound
test
cmp
out
xchg
lock
rcrb
add
and
or
and
repz
add
mov
sub
sti
jl
sub
or
sub
divb
daa
out
outsb
pop
add
inc
inc
out
inc
push
push
mov
ret
movsb
cmp
ficompl
or
dec
loopne
sbb
xor
pop
ret
repnz
cmp
in
clc
and
loop
sti
repnz
and
cmp
shrb
mov
fwait
loop
pop
out
sub
inc
frstor
sbbb
mov
jae
xor
out
ficoms
mov
add
js
mov
or
or
jle
dec
out
sub
aam
ret
xchg
inc
push
in
addl
hlt
mov
jno
jnp
test
push
jmp
mov
andl
jbe
lcall
jnp
data16
dec
fidivl
lcall
jmp
sub
scas
pop
mov
lcall
or
mov
adc
mov
fidivl
mov
mov
sub
mov
flds
popf
push
pop
mov
cltd
pop
scas
adcb
jl
aaa
scas
add
roll
push
aas
push
xchg
popa
clc
push
cmpsl
fnsave
test
sarb
cmp
push
fwait
push
out
leave
into
test
call
xor
test
push
out
inc
add
pop
mov
in
enter
cmp
mov
push
in
pop
mov
dec
call
aaa
add
pop
mov
ss
xor
bound
enter
hlt
iret
fdivl
sub
jb
and
xor
ret
pop
repz
clc
das
std
xchg
pop
daa
stc
push
les
test
jbe
pop
cmpsl
sub
daa
lods
aaa
into
cmc
je
lea
orb
outsb
into
gs
push
jae
aas
xchg
ja
out
inc
push
jno
jmp
jl
lahf
mov
repnz
imul
cltd
pop
sbb
mov
ret
pop
adcb
sbb
dec
jns
leave
stos
dec
filds
jne
xor
push
in
xor
pop
repz
pop
inc
fmull
jp
cmc
insb
shrl
pop
cmc
mov
mov
lock
clc
xchg
adc
addl
and
cmp
pusha
push
jmp
xor
loopne
out
push
fnsave
call
inc
stos
in
add
bound
push
das
mov
fcomi
orl
test
pop
enter
cmp
and
inc
fidivrs
adc
jl
push
dec
loop
repnz
and
adc
jne
cltd
xor
xchg
mov
les
inc
mov
mov
adc
aas
fbstp
xchg
sub
adcl
mov
xor
stos
push
fsubrl
in
pop
std
push
imul
push
icebp
or
movsb
mov
push
notb
sub
movsl
test
int
inc
sti
pushf
test
and
push
out
sbb
xchg
test
into
rcrl
sbbl
sbb
dec
fistps
or
data16
lcall
xor
xorb
jne
sti
xchg
mov
nop
daa
ljmp
sub
cmp
pop
enter
les
ja
daa
pop
push
cwtl
das
test
mov
pop
sbb
dec
shl
repz
push
adc
adc
or
lcall
ret
scas
in
or
rcll
testl
lods
sbb
jnp
ror
mov
cmpsb
xchg
sbb
sahf
test
aaa
push
adc
stc
loop
adc
ficomps
rolb
sti
lods
jns
push
jg
jno
dec
hlt
sbb
addr16
leave
cld
test
pop
xor
fs
xchg
xchg
pop
hlt
enter
test
xchg
push
std
pop
sub
mov
aad
sti
sbb
adc
inc
ljmp
dec
push
add
inc
arpl
imulb
mov
mov
mov
add
xlat
cmp
hlt
imul
ror
dec
mov
scas
hlt
nop
sub
stos
xchg
dec
fisubrl
movsb
test
pop
ror
js
cmp
aaa
sub
jb
or
out
add
scas
lds
cmp
sub
jg
jne
decl
push
scas
mov
xchg
ficompl
scas
and
pop
adc
int3
xor
loop
xchg
jl
push
aas
mov
andl
ja
sbb
mov
sahf
mov
in
inc
push
inc
dec
fnstsw
pop
out
push
sub
jge
push
movsb
outsb
xchg
push
cmp
jns
xchg
stc
or
pop
cmpb
xchg
push
cltd
cmp
lret
lock
push
stos
sahf
arpl
dec
insb
jb
out
lcall
add
jp
mov
inc
cmp
enter
insb
enter
pop
jo
dec
mov
dec
mov
pcmpgtd
mov
lcall
mov
adc
or
subb
rcll
subl
int3
sub
xchg
sbb
push
hlt
inc
aaa
pop
lret
mov
inc
xchg
in
pusha
aaa
push
or
mov
jmp
dec
fwait
fbstp
fildl
pushw
cmp
shlb
lds
add
mov
mov
pop
sbb
loop
negb
icebp
repnz
mov
xlat
jns
js
sub
insb
xchg
mov
adc
aam
jmp
lret
out
pop
stos
imul
enter
adc
insb
daa
xor
stos
xchg
add
push
pop
adc
inc
sahf
or
push
xor
pop
out
push
mov
mov
push
sub
daa
in
loope
in
mov
ljmp
leave
js
cmpsl
push
cmp
fistl
push
dec
inc
pop
inc
mov
or
nop
ret
xchg
mov
enter
mov
into
fcoml
in
dec
std
call
xchg
pop
ja
sub
movsl
vcvtdq2ps
jge
push
dec
loopne
jb
sub
leave
ret
inc
sub
xchg
fsubrs
test
push
in
repnz
adc
adc
mov
mov
fidivl
jne
pop
daa
xchg
fdivs
inc
movsb
cmp
imul
mov
jo
pop
push
xchg
sub
jle
and
sub
lods
inc
cld
inc
icebp
mov
jbe
test
mov
cwtl
dec
aas
mov
ljmp
add
jnp
out
lods
decb
or
imul
sub
mov
dec
outsl
and
imul
shlb
add
out
xchg
push
mov
cltd
or
ret
sub
sub
loopne
inc
dec
loopne
sub
decb
add
sbb
inc
xchg
sub
cmp
mov
loope
into
lock
mul
call
pop
xchg
movsl
adc
adc
test
fucomp
dec
loope
testb
mov
decl
stos
jbe
sub
and
xchg
sub
sahf
test
ljmp
pop
push
lods
in
cmpsb
and
leave
ret
loopne
add
loop
and
mov
rorl
je
cmc
test
jp
pop
sarl
cwtl
das
or
sub
pop
mov
inc
xchg
movsb
loope
xchg
mov
lock
adc
jg
das
push
movsl
mov
aad
ret
mov
and
lds
inc
fstps
xchg
js
sti
xor
negl
xchg
cs
jle
data16
rcrl
pushf
xor
neg
jbe
btc
jae
orb
jo
or
les
daa
mov
fdivr
inc
fdivrl
repnz
sub
ljmp
jno
mov
mov
in
adc
pop
adc
add
shlb
jbe
and
lods
cmpsl
fdivl
mov
loop
sub
in
or
jnp
or
xchg
cltd
scas
scas
ja
gs
and
das
ds
dec
mov
hlt
cmp
lret
bound
xlat
jmp
xor
mov
sahf
push
mov
sahf
andl
ljmp
mov
sbb
cmpsb
xchg
sub
int
fisubrl
inc
popa
clc
jge
fnsave
jg
jmp
add
mov
pop
mov
into
repnz
push
data16
cmpb
insl
call
lods
cmc
mov
int3
push
dec
lods
inc
sarl
ljmp
jno
ret
stc
cli
xchg
jge
es
sbb
cmpsb
push
lret
bound
out
fs
in
das
jmp
sbb
test
scas
fistps
sub
int3
jne
inc
icebp
sbb
pop
fbstp
outsl
jb
jl
std
xchg
cltd
xchg
nop
daa
lds
scas
inc
fldl
int3
arpl
mov
ljmp
mov
lahf
adc
outsl
push
mov
es
insb
pop
inc
fstpt
mov
stc
in
or
stc
nop
mov
ss
cmpsl
pop
scas
mov
push
xchg
stos
inc
fsubrl
mov
arpl
mov
out
xchg
pop
jne
movsb
ja
mov
lds
dec
loopne
dec
fnstenv
push
push
mov
outsl
xchg
and
cmp
fld
pop
hlt
push
loope
mov
or
xchg
into
lea
mov
lods
ret
inc
cmp
lahf
adc
js
mov
lock
call
jg
sbb
sub
or
mov
sub
loopne
inc
xchg
sub
ret
daa
pusha
cwtl
das
loopne
into
gs
pop
mov
lret
xchg
or
mov
imul
mov
ja
fisubrs
leave
gs
pop
aas
dec
jecxz
das
sbbl
idivb
mov
aam
xor
mov
aas
fs
fnsave
pop
gs
in
xor
sbb
rcrl
adcb
out
in
sub
lahf
movsb
inc
adcb
les
xor
add
mov
jnp
fidivl
xchg
push
lods
data16
xchg
xor
inc
mov
push
jmp
jb
adcb
fwait
push
jmp
sbb
pop
pop
test
mov
das
les
push
xor
popa
dec
jge
scas
std
fs
into
iret
mov
popf
xor
push
in
dec
pop
and
outsl
sbbl
test
fldln2
xchg
jmp
mov
dec
divl
or
shrl
sahf
nop
daa
lds
scas
inc
cld
mov
int
inc
push
cmp
add
sbbb
hlt
jbe
mov
jp
daa
mov
aas
sub
xchg
sub
arpl
and
dec
sbbl
hlt
movsl
lahf
ss
sarl
mov
cmp
jb
aaa
into
pusha
ret
xrelease
or
sbbl
imul
fists
inc
outsl
jge
es
jb
push
fwait
xor
mov
scas
xchg
pop
fsubrs
mov
testb
hlt
adc
pop
push
sbbl
movsl
adc
and
dec
outsb
add
adc
add
sbb
push
mov
xor
pop
lods
cmpsl
cmp
add
jge
movsl
dec
loope
sbb
pushf
cmp
jle
arpl
cwtl
lcall
mov
xchg
sub
lahf
and
push
pop
dec
mov
jne
lret
es
xchg
rclb
cli
xchg
cmp
mov
stos
sbb
jo
ss
lcall
mov
out
mov
outsb
add
and
dec
scas
inc
xchg
mov
push
cmp
int3
arpl
push
push
jmp
jb
stc
nop
or
sub
lods
out
mov
ja
xor
adcb
out
cmp
jp
out
add
pusha
cmp
pop
arpl
les
mov
dec
loop
pop
out
xchg
add
adc
test
das
insl
and
and
inc
fmuls
loope
shlb
cmpsb
clc
lock
iret
jge
sbb
push
movsl
xor
ret
push
xchg
loope
sub
outsb
pop
call
cmc
mov
mov
lds
inc
fmuls
jne
jp
and
pop
sbb
mov
enter
lods
fwait
xor
mov
mov
in
add
outsl
cmp
jnp
adc
ds
xor
xchg
adc
div
stos
inc
mov
xlat
leave
pusha
ds
stc
nop
imul
pop
scas
imul
int3
inc
test
inc
pop
push
ljmp
sbbl
adc
mov
adc
xchg
push
clc
popl
dec
jecxz
sub
push
sbb
mov
cmpsl
mov
jmp
cli
mov
pop
sbb
ss
xor
pop
cmc
test
shlb
jg
pop
jo
pop
mov
cwtl
insl
and
dec
hlt
mov
dec
pop
bnd
adc
push
adc
enter
xor
xchg
mov
lret
adc
jecxz
sub
sbb
dec
dec
leave
lods
inc
cmp
cwtd
pusha
fdivl
mov
test
push
cli
xchg
das
lock
incl
shlb
aaa
into
sub
ficomps
mov
cld
sbb
testb
popa
lock
dec
xchg
mov
jbe
fnsave
xchg
fsin
sti
xchg
and
sbb
lods
dec
sbb
push
aaa
into
nop
nop
dec
loopne
mov
neg
call
jae
sub
xchg
sub
lcall
pop
mov
mov
xchg
sub
mov
mov
and
scas
shl
hlt
mov
divb
es
mov
shlb
test
cmc
test
loopne
iret
mov
icebp
mov
notb
scas
test
inc
pop
or
pushf
daa
adc
add
mov
arpl
jge
test
fwait
cld
xchg
iret
aad
sbb
icebp
and
pop
inc
inc
fnstenv
ret
pop
lods
xchg
pop
cmc
enter
add
jl
push
push
insb
sbb
add
ret
sahf
inc
rorl
rcl
sbb
add
mov
xor
sbb
in
out
sarb
fldt
mov
xorb
repz
aaa
pop
lods
mov
or
dec
xchg
add
rolb
dec
movsb
mov
add
mov
fcmovbe
pop
insb
in
dec
repz
loop
dec
mov
inc
ja
sub
jmp
mov
test
inc
mov
jae
movsb
pop
inc
jp
xor
xchg
inc
jno
sub
xchg
aad
hlt
mov
aad
cmp
stos
push
daa
push
movl
adc
ss
test
sbb
push
cld
xchg
and
push
sub
mov
iret
push
hlt
mov
xor
cltd
mov
cltd
mov
jb
add
jecxz
xchg
and
bnd
or
jge
mov
addr16
out
les
aaa
dec
out
inc
aas
insb
jns
insb
cli
or
iret
in
jo
cld
add
icebp
mov
cmc
push
lds
das
cltd
sub
and
sub
fisubs
in
pusha
incl
or
lods
mov
adc
xchg
mov
std
mov
enter
fcompl
test
push
adc
xor
adc
fnstcw
nop
ljmp
and
scas
es
scas
jns
imul
push
xor
pop
scas
lea
add
sbb
out
out
cmovs
ja
in
cmp
sbb
mov
mov
mov
adc
sbb
stos
inc
andl
mov
sbb
sbb
test
adc
jp
jnp
mov
stc
into
add
push
dec
clc
clc
lock
push
andl
fcmovbe
mov
xchg
clc
sbb
jmp
outsl
sbb
es
rorl
xor
add
mov
cmpsl
imul
sti
or
sub
push
mov
push
pop
xchg
or
mov
sbb
mov
push
mov
lea
pop
fcompl
daa
in
mov
aas
push
stc
pop
jae
icebp
scas
push
int3
xor
jl
stc
test
pop
pop
and
mov
imul
rcrb
and
pop
and
and
add
call
scas
push
scas
xor
pop
loope
cmc
push
mov
lods
adc
mov
loop
pusha
push
cmpsl
cs
jnp
cltd
mov
pop
sbb
scas
mov
add
mov
jbe
inc
cmp
imul
pop
jg
mov
shl
idivb
inc
loope
xchg
pop
lods
lret
mov
pop
test
lret
jecxz
shrl
pop
push
int
stos
ffreep
add
fstpl
mov
jge
sbb
in
cmp
movsl
insb
fcompl
jecxz
adc
fcmovnbe
cmp
outsl
mov
push
jnp
mov
js
cltd
aam
mov
cmpsl
daa
aam
and
adc
in
mov
push
push
pusha
mov
int3
cmp
pop
sbb
test
in
add
loope
stc
inc
out
push
mov
sahf
sbb
icebp
daa
mov
mov
loopne
lcall
mov
cs
daa
jnp
jo
out
mov
sbb
add
aad
cmc
bnd
and
enter
lea
inc
fiaddl
xor
out
and
xlat
push
mov
aaa
rcrb
mov
or
dec
ss
xchg
sbb
outsl
adc
xchg
push
jnp
fcomip
out
nop
dec
scas
sub
dec
stos
and
or
xor
xor
and
mov
cmpsb
and
mov
xor
xor
xchg
nop
xchg
or
imul
call
mov
push
movsb
repnz
inc
cmp
inc
les
cmp
or
lds
shrb
and
mov
inc
cmpb
stos
sbb
sub
sbb
or
call
scas
idivb
cmp
sub
push
ss
mov
sbb
daa
cmpsb
test
test
add
in
xchg
jge
jmp
out
fwait
iret
mov
or
dec
cmpsl
in
lds
in
xchg
rcll
lcall
adc
out
popf
add
lods
dec
jne
mov
in
xlat
jp
fstps
movsl
mov
repz
mov
or
lods
mov
xor
push
push
lcall
rorl
insb
imul
lods
ja
mov
popf
pop
das
pop
insl
add
jp
popa
popa
push
addb
push
fsubr
xor
mul
repz
out
outsb
sub
in
adc
stos
aaa
leave
aam
nop
mov
and
lods
jo
inc
mov
adc
inc
fnstsw
sti
out
iret
rcr
in
nop
adc
out
mov
ds
mov
leavew
ror
dec
xchg
jp
cmp
adc
fldz
inc
mov
pop
popa
push
test
dec
fsubrs
leave
sahf
push
and
dec
mov
je
adc
ds
cmpsb
pop
pop
movsb
cmp
rorb
push
addr16
push
or
push
test
bound
inc
jo
add
cmp
cmp
and
sbb
pcmpeqw
pop
or
in
ss
pusha
ret
shrl
xor
sbb
mov
daa
sub
fsubs
inc
and
xchg
repz
or
xchg
push
push
fdivrp
pop
in
mov
outsb
and
pop
loope
adc
das
jle
or
dec
rcll
cmpsb
sbb
out
mov
mov
sbb
outsb
ja
pop
fisttpll
push
cmp
notl
cli
out
lea
sub
cmp
insb
int
add
pusha
or
out
imul
xchg
push
addr16
pop
cltd
imul
and
xor
and
mov
jecxz
hlt
stos
rcl
cltd
je
xor
mov
imul
mov
outsl
or
xlat
inc
push
mov
mov
stc
lcall
dec
mov
mov
push
icebp
mov
cmp
add
mov
sti
jne
ficomps
jge
mov
cmp
and
push
pushl
sbb
loope
push
nop
test
add
jns
xchg
lea
shlb
jo
push
sbb
jo
or
and
mov
and
mov
push
push
mov
hlt
popa
adc
push
stc
inc
jae
jge
data16
sbb
pop
pop
ficoms
lret
mov
jmp
imulb
mov
subb
gs
adc
test
jg
push
xor
cltd
test
in
xchg
mov
jle
subl
dec
xor
sub
imul
xchg
shll
and
in
or
add
ret
pop
jns
or
subl
adc
jge
cltd
pop
jno
ret
insb
enter
mov
jb
insb
add
pop
enter
adc
inc
cmp
repnz
mov
mov
addr16
lahf
or
sahf
dec
push
or
add
bound
out
sub
add
fsub
cli
and
imul
in
adc
hlt
lea
stos
inc
clc
repnz
pop
das
ret
dec
loop
xor
push
push
pop
loop
clc
mov
dec
sahf
fldcw
sbb
xor
aad
nop
ds
daa
xchg
clc
shlb
pop
ficomps
cli
test
insb
or
inc
hlt
std
lret
xchg
inc
mov
shll
pop
mov
pop
outsb
sub
sarl
inc
ljmp
pop
xchg
pop
add
addb
fdivrl
push
add
loop
or
add
xchg
mov
mov
lods
dec
or
loopne
xor
pop
fiaddl
lahf
cmp
sub
movsl
dec
jl
lcall
jmp
into
jle
inc
dec
movsb
scas
and
mov
jl
rorb
jno
mov
jo
sbb
jbe
inc
mov
cmp
pop
or
jl
iret
jl
outsl
mov
adc
push
rolb
lret
adc
mov
sbb
add
or
dec
movsb
sar
mov
aad
orb
in
stos
push
sbb
sbb
sub
stc
mov
loope
mov
arpl
push
outsb
je
dec
fcmovne
cmp
cmp
out
cli
inc
nop
mov
insl
movsl
sti
sub
ror
sub
jecxz
pushf
lea
orl
insb
fldenv
stos
jmp
leave
aad
push
jbe
aad
xor
pop
andl
dec
cmpsb
repnz
mov
pop
pop
scas
shlb
push
adc
push
fistl
dec
mov
aas
jb
cmp
mov
sbb
push
iret
in
and
cmp
je
and
into
outsb
sahf
pop
cmpb
rcrb
pop
jbe
imul
scas
fistps
repz
loop
dec
test
mov
push
scas
fbld
outsl
pop
push
fstpt
jne
pop
mov
push
mov
popw
adc
sub
scas
rcl
add
rol
add
or
jmp
pop
lea
outsl
dec
add
or
dec
pushf
cmp
adc
fnstsw
aad
push
cmp
shll
rclb
arpl
pushf
pop
push
or
ja
xchg
mov
adc
ss
lahf
fsubr
cmpsb
mov
dec
mov
test
aaa
dec
sub
pop
add
push
sbb
cld
jge
inc
test
dec
xor
mov
xchg
jmp
and
inc
sbb
loopne
ret
sub
xchg
in
gs
lods
dec
adc
jns
pop
fidivrs
jecxz
in
sbb
push
das
fidivrs
and
pop
and
scas
jecxz
dec
jo
inc
pusha
mov
pop
sbb
pop
cmp
mov
or
out
and
mov
and
loopne
in
pop
pop
xor
clc
stos
mov
inc
push
inc
arpl
fldln2
cmp
xchg
mov
ret
mov
lock
scas
sub
addr16
mov
xchg
lds
aam
inc
int
add
pop
sbb
or
ja
ret
rcll
ljmp
push
sahf
int3
daa
or
fistl
xorl
push
adcb
repz
or
push
arpl
pusha
popf
iret
or
popf
rolb
test
jbe
fdivr
mov
xchg
mov
enter
dec
or
mov
js
int
loope
add
pop
pop
mov
iret
push
xchg
dec
push
inc
adc
adc
mov
sbb
push
mov
add
adc
rorl
movsl
pop
sub
jo
push
mov
add
push
test
data16
data16
in
es
and
mov
testb
pop
pop
cmp
cmpl
pop
out
enter
cmp
in
das
xchg
xchg
fs
xchg
fwait
out
fwait
dec
data16
shlb
in
jp
repz
push
pop
addl
out
aad
rorl
xchg
fisubl
inc
lret
adc
cmpsl
ds
icebp
add
dec
cwtl
sub
loopne
add
xor
pop
sbb
stos
jae
push
jb
jle
jns
pop
cmpsb
or
dec
cmpsb
push
divb
popa
push
cmp
inc
inc
cmpsb
add
push
adc
or
xchg
ficoml
jbe
adc
mov
scas
ror
mov
cli
repnz
add
cld
xchg
pop
pop
inc
out
mov
jge
pop
mov
scas
push
xchg
mov
jp
xchg
or
repnz
xor
push
mov
scas
mov
es
fs
pop
insl
jno
aam
or
adc
mov
lahf
lea
xchg
dec
lret
mov
pop
in
rorb
movsl
cltd
dec
jne
sub
outsl
jo
mov
cld
insb
sbb
mov
nop/reserved
test
pop
jmp
aam
je
inc
pop
sbb
push
or
and
in
movsb
mov
jp
cs
adc
dec
dec
lock
mov
add
std
sub
movsb
xchg
repz
mov
cmp
imul
push
pusha
in
ljmp
mov
pop
xchg
xchg
fs
pushf
popa
lea
xchg
sbb
ret
inc
rcrl
pop
stos
add
sub
addr16
mov
stos
std
int3
decb
dec
mov
cmovle
mov
cmc
aaa
idivl
inc
pop
stos
push
mov
sbb
dec
das
jmp
add
xchg
cmpsb
push
mov
lods
cmpsb
xchg
test
sbb
jne
sbb
sahf
or
dec
inc
sub
lods
movntps
ret
sub
xchg
or
and
cmp
sub
mov
push
push
shlb
gs
pop
and
inc
mov
xchg
add
pop
jbe
repz
push
js
mov
jp
fcmovnb
xchg
shlb
lock
jmp
xchg
nop
adc
push
mov
mov
push
in
or
pusha
mov
jge
out
xor
sbb
mov
mov
sub
sbb
out
fs
xor
rcll
mov
or
pusha
inc
inc
jle
push
push
lret
xchg
addr16
sbb
inc
leave
push
shl
sarl
insl
sbb
shll
or
std
out
das
loop
xchg
out
sti
mov
cmpsb
stc
jmp
ret
daa
arpl
push
and
les
cltd
add
movl
jmp
ret
fnsave
ja
mov
jle
int
add
test
fsub
jl
mov
xchg
mov
in
scas
inc
add
int
cmpsb
jmp
ja
inc
scas
jl
adc
jl
fnstcw
adc
mov
test
cmc
scas
call
das
ljmp
les
fdivrl
jno
sbb
int3
inc
rcrb
stos
pop
aam
ret
jecxz
add
out
jae
pop
mov
jnp
mov
cmpb
inc
mov
lea
jmp
aam
jb
pop
in
push
adc
mov
sar
repz
je
mov
or
add
mov
and
je
jge
sbb
sbb
in
jo
sbb
je
daa
cmp
add
push
push
cmpsb
mov
jns
xchg
out
jge
dec
mov
stc
sub
sahf
jno
popa
sub
test
and
shr
outsl
adc
mov
insl
addr16
and
sub
and
mov
or
mov
dec
push
insb
push
or
push
pushl
lods
loop
mov
jp
pusha
mov
cmp
mov
inc
inc
xchg
into
inc
nop
jno
lea
loope
cli
and
ljmp
repnz
inc
push
inc
push
adc
jl
les
aas
adc
imul
pop
repnz
fnsave
mov
je
add
add
push
xchg
inc
xchg
xor
sahf
inc
mov
inc
sti
add
repz
sub
ljmp
mov
mov
cs
jecxz
sbb
jmp
sub
jmp
jg
inc
in
data16
fdecstp
adc
push
ljmp
xor
dec
lret
pop
adc
bound
scas
cmp
push
daa
push
xor
test
or
inc
inc
test
sub
push
jecxz
xchg
xchg
xor
mov
add
jae
dec
es
pushf
pop
xlat
mov
xor
pop
cmp
in
test
imul
hlt
lods
or
sbb
cmpsb
in
iret
sarb
hlt
iret
cmp
pop
sahf
inc
and
mov
or
les
and
sbb
orl
inc
push
xlat
push
inc
xlat
popf
clc
aas
dec
out
repz
mov
lret
and
or
xlat
push
adc
sti
mov
mov
fisttps
aad
cmpl
ret
mov
mov
dec
adc
pop
and
mull
lea
cmp
test
cmpsl
mov
stc
int
cld
scas
andl
mov
sub
ja
in
loopne
lret
xchg
jno
jecxz
imul
xchg
sbb
shrb
mov
cmp
ds
int3
pop
dec
imul
push
rcl
jecxz
dec
out
test
mov
gs
xchg
shlb
cld
bound
jnp
stos
mov
or
and
and
shrl
pop
xchg
add
aam
add
fwait
or
lcall
push
inc
int
adc
push
jo
aad
jp
hlt
xchg
cmpsl
add
cli
cmp
sub
mov
or
sbb
rcl
ja
fcomip
shll
loope
push
jmp
and
inc
mov
xor
movsl
movsb
test
jecxz
insb
ficompl
or
inc
gs
cmpsb
and
aad
xchg
sub
xchg
stos
adc
adc
divl
push
jp
xor
insb
repnz
mov
lahf
jne
fs
sti
adc
add
lods
ss
push
mov
lcall
xchg
imul
cmpsl
cmp
mov
mov
xchg
insl
call
adc
inc
mov
test
inc
lcall
pop
xchg
jp
sub
ja
andl
pusha
xchg
mov
hlt
lret
cmp
pop
pop
dec
cmp
js
push
sub
dec
cmc
sub
sbb
insl
dec
das
add
inc
mov
xchg
and
int
xchg
cld
and
jno
lret
mov
xchg
out
sub
pop
lahf
sbb
sbb
jg
push
incb
sti
hlt
jg
push
rcl
fldl
cmpsl
mov
inc
into
sbb
push
cwtl
leave
jl
mov
sbb
push
jg
shl
cs
rcrl
cltd
sbb
cmc
and
adc
mov
ljmp
dec
jecxz
clc
sbb
cmp
mov
push
test
pop
stos
inc
mov
fsubrs
or
mov
enter
xor
pusha
scas
cld
inc
out
ret
fcomps
pop
sahf
in
pop
scas
aam
xlat
or
xor
subl
divl
jl
loopne
jo
int
dec
imul
enter
pushf
or
call
and
add
pop
fadd
ja
or
lods
xchg
cltd
in
mov
cmp
and
and
test
test
jno
iret
pop
ds
sahf
pop
push
mov
mov
push
xchg
or
mov
ss
movsl
imul
jecxz
or
pop
test
iret
xchg
mov
pop
mov
add
or
push
out
jo
movl
je
pop
incb
mov
mov
xchg
push
or
xor
outsb
mov
aam
inc
gs
or
xchg
sti
lea
popa
cmp
pop
fldcw
enter
lcall
jle
aam
sahf
mov
cmp
test
xchg
les
add
fs
jne
sti
push
lret
cs
xchg
and
sti
jmp
and
mov
and
std
fstpl
pop
nop
dec
jecxz
loop
mov
xor
je
inc
cmp
and
jge
xchg
lea
fimuls
push
lcall
inc
mov
add
or
jg
dec
cmp
dec
outsl
fnstsw
dec
mov
xor
sbb
xor
pop
shl
outsb
sub
mov
test
out
pop
push
in
xchg
pushl
mov
mov
ljmp
and
pop
jb
aaa
pop
push
pop
cld
xchg
and
add
cmp
ret
clc
lcall
mov
mov
dec
add
mov
sbb
imul
and
mov
iret
sbbl
fisubl
sub
loope
jmp
xor
mov
jae
ds
mov
int3
movb
xor
jg
inc
adc
and
dec
push
sbb
js
mov
pusha
and
cs
loopne
xchg
jmp
xorl
mov
xor
data16
scas
add
or
nop
outsb
cmpsb
imul
ror
jbe
leave
pop
inc
stc
outsl
pop
push
mov
aaa
or
mov
aas
mov
shll
sbb
mov
ljmp
gs
push
std
in
push
out
and
or
dec
adc
sub
inc
or
mov
mov
lcall
mov
add
push
or
in
push
pop
push
jnp
dec
fcompl
pop
enter
or
dec
nop
cld
sub
pop
push
push
xchg
out
sub
call
add
add
in
mov
mov
lock
lahf
sbb
mov
lods
mov
pop
sub
mov
iret
push
clc
or
out
lahf
xor
push
imul
add
and
mov
notb
xor
add
cmpsb
mov
adc
sarb
iret
push
test
mov
adc
fisttpl
cmp
or
pop
movsb
lock
ja
mov
cmp
fs
and
xlat
mov
inc
fdivrs
mov
dec
pusha
fadd
imul
nop
pop
mov
xchg
stc
repz
mov
sub
test
ja
loopne
jl
aam
xchg
enter
pop
dec
sub
sbb
xlat
jmp
bound
ja
aam
mov
sub
cmp
xor
inc
hlt
or
pop
mov
cmp
jle
mov
es
popa
je
mov
sub
sbb
arpl
lahf
ja
and
arpl
sub
mov
in
nop
call
aaa
or
jmp
test
frstor
jle
mov
lret
mov
inc
lds
add
push
mov
lds
push
mov
mov
out
add
aas
mov
repz
lahf
pop
nop
inc
dec
xor
scas
into
ds
movsb
into
sbb
xor
adc
ret
sbb
sbb
fisttpll
imul
mov
and
sub
add
sbb
test
add
subl
loop
mov
xor
jle
cmp
cmp
and
xor
jecxz
cld
jno
imul
sahf
shll
inc
mov
mov
aas
lods
mov
pop
lret
hlt
cmpsb
aad
stc
pusha
mov
push
or
nop
bound
ljmp
popf
sub
pushf
loopne
mov
mov
movsw
add
mov
lret
fidivs
je
div
addr16
testl
adc
aaa
rcrl
scas
test
add
mov
imul
jmp
loope
stos
pushf
dec
or
mov
cmp
xchg
adc
or
and
push
shlb
addr16
je
xchg
mov
pop
stos
cmp
lock
je
xchg
popf
cmp
test
stos
push
pop
jns
xchg
mov
mov
stos
lods
lea
lea
lods
pop
jo
pop
lds
test
pop
nop
sarl
inc
rcl
cli
cmp
or
ret
adcb
test
sub
pop
or
lcall
cmpsl
andl
int3
sarl
push
xchg
lret
in
sub
lea
jecxz
enter
cmp
push
les
jl
xchg
outsb
lods
and
in
xlat
mov
pop
test
data16
mov
xor
leave
outsl
clc
jno
xchg
jno
lods
mov
bndstx
stc
ret
dec
aas
into
and
pop
rclb
dec
xchg
add
bound
dec
int
sbb
cmp
fiadds
ret
push
mov
cmp
xor
data16
lods
idivl
dec
mov
dec
add
clc
out
outsb
or
fnstsw
or
xor
inc
lret
test
mov
das
jb
lret
cld
dec
insb
ret
or
sub
stc
mov
test
lahf
lcall
xchg
std
fisttpll
iret
cli
pop
lock
lret
scas
sti
aad
mov
in
mov
cs
and
mov
lret
and
sub
sti
pop
mov
xchg
ljmp
adc
xchg
shrl
rcr
add
and
clc
jbe
pop
dec
or
jle
cmp
adc
cmpsl
and
xor
loopne
inc
in
popfw
in
in
movsl
pop
popa
push
jg
mov
pop
push
inc
push
movsb
jae
out
gs
cltd
test
sub
add
push
cmc
sbb
out
adc
es
jnp
aas
sub
sub
icebp
push
adc
push
cmpl
jnp
test
push
add
sbb
add
mov
inc
mov
ret
or
pop
sbb
pop
xor
sahf
fcmovnu
daa
popa
in
popa
in
adcl
ret
mov
xchg
dec
popf
jns
cmp
sub
push
jp
mov
daa
pop
xchg
test
adc
dec
addr16
lock
jb
arpl
xchg
pop
das
test
pop
ds
cs
icebp
loop
dec
aam
jo
mov
test
int
inc
sub
fists
sub
mov
jbe
mov
xchg
and
adc
jg
movsb
xor
outsb
xor
fcomps
xchg
lret
and
jnp
or
imul
jno
sub
lret
movsb
or
mov
pop
cltd
pop
inc
mov
mov
lahf
js
sbb
cli
sub
lock
sarb
adc
mov
mov
mov
lock
cmc
lods
movsb
jo
or
movsb
adc
adc
xchg
xor
cmpsb
nop
push
shl
insb
xchg
mov
adc
jge
rorl
xor
ja
push
mov
sbb
in
pop
jg
sub
and
jae
in
cli
hlt
pop
jg
or
lds
sbb
lds
in
das
out
sbb
mov
daa
pop
or
sub
sbb
repz
adc
jae
imul
lret
push
pop
nop
dec
dec
cmp
lds
jae
leave
sub
lret
xor
adc
call
int
mov
ss
xor
stos
js
fcompl
loop
movsl
sub
mov
test
mov
xor
mov
shl
out
jbe
dec
jnp
fcomip
pushf
xchg
test
ss
daa
lret
jae
out
repz
sahf
outsb
lret
xor
pop
adc
hlt
scas
test
orl
dec
add
inc
pop
mov
jp
cmp
cltd
cmp
hlt
inc
dec
add
out
push
popa
stos
pop
jb
adc
push
or
xor
add
xchg
loopne
inc
mov
mov
mov
pop
lcall
daa
cmp
mov
stos
cmp
test
push
dec
or
loopne
aad
aam
jno
adc
sub
dec
mov
aam
in
dec
icebp
push
mov
lahf
dec
leave
sbb
jo
push
and
gs
mov
movsb
pop
stos
mov
or
mov
test
lret
inc
arpl
sub
sahf
shrl
lock
imul
push
iret
mov
ret
push
adc
and
aas
rcr
insb
sbb
sbb
adc
sub
das
dec
mov
lahf
testl
jle
movsb
add
js
sub
cmp
enter
aas
loope
jne
mov
mov
xorl
repz
test
ret
cmpsb
cmp
cmp
gs
push
lret
dec
mov
ret
les
sahf
or
push
sarl
out
fwait
mov
cmp
popa
xor
mov
mov
inc
mov
jmp
xchg
fcomps
sbb
pop
lret
mov
push
sbb
insl
pushf
mov
vhsubpd
data16
fwait
jp
jb
cmp
mov
sub
jb
cs
movsb
sbb
int
fstl
push
xchg
push
js
fiadds
pop
jbe
dec
sahf
adc
push
mov
addl
and
movsb
jo
fisubs
jbe
ret
jge
sbb
test
dec
or
mull
cmp
test
fcoms
mov
inc
jns
leave
jecxz
add
xchg
fwait
xorb
scas
mov
cmp
or
mov
xchg
cmp
repnz
mov
add
adc
movsl
xor
andl
testl
sub
popf
sub
pop
mov
arpl
lods
adc
sbb
fs
pop
xchg
and
jbe
jae
push
movsl
or
xchg
cmp
fdivl
pop
push
mov
sbb
dec
scas
cmp
loopne
adc
xor
jbe
test
push
in
inc
cmpsb
fsubs
push
xchg
stc
lods
inc
sbb
cmp
outsb
bound
rcrb
jmp
jne
loopne
sahf
adc
and
mov
test
push
cmp
xchg
pusha
testl
sub
pop
sti
jns
sub
dec
fwait
xor
mov
shlb
cmc
fidivl
jbe
jle
dec
std
xchg
jp
std
xchg
sti
fwait
and
dec
in
cmp
push
outsl
cmp
stc
jo
data16
repnz
jns
ret
adc
inc
in
cmp
movsb
cmp
mov
fdivl
or
cli
xchg
punpcklwd
xchg
xchg
xor
scas
popa
mov
mov
xorb
mov
cmp
aaa
aam
jmp
pop
pop
icebp
mov
jb
pop
stos
js
fnstsw
daa
stos
xchg
sub
call
dec
andl
gs
movsb
shrl
jae
subl
xchg
sub
mov
imul
aad
xor
sahf
idivb
shrb
shrb
mov
pusha
testl
dec
lahf
hlt
outsl
push
sarl
add
inc
cltd
and
mov
ret
cld
rcrl
lods
inc
inc
mov
pop
mov
sub
push
mov
dec
in
das
rcrl
and
movsb
pop
xchg
sub
mov
lcall
jl
cltd
movsl
dec
loope
jb
cmp
call
inc
ficompl
mov
fisubs
or
mov
fisttpll
mov
xchg
daa
loope
popa
mov
or
addb
cmp
popa
clc
push
pop
shrl
daa
in
popa
cmpsb
xchg
sub
andb
mov
fdivl
sub
pusha
test
cmp
adcl
clc
push
dec
ljmp
lcall
mov
ficomps
pop
aas
push
lods
push
mov
shll
rcll
lods
or
mov
mov
sbb
movsl
inc
ja
in
mov
loop
popf
shll
or
shrb
or
xor
data16
fidivs
rorb
mov
sub
stos
inc
xor
mov
mov
ret
xchg
cs
scas
xchg
fstps
out
dec
cli
jbe
and
xchg
xchg
inc
or
out
lahf
repnz
cvtdq2ps
cmp
cmpsl
ds
and
outsb
movsb
daa
mov
mov
fcmovnu
jno
dec
ret
pop
je
dec
out
xchg
stos
inc
iret
andb
sub
aas
add
es
sbbl
cmp
fidivs
dec
mov
js
addr16
pusha
cltd
cmpsb
cmp
mov
fldl
jno
sub
push
fwait
add
lods
in
cmc
push
into
fidivl
aas
pop
imulb
fs
inc
mov
mov
popf
shrl
ret
xor
call
or
sahf
mov
or
or
cltd
xor
cmc
mov
inc
cmpsb
cmp
cld
mov
jmp
inc
sti
out
and
cmp
xchg
inc
aad
xorl
jno
aaa
stc
adc
sbb
mov
std
xchg
std
inc
fldenv
inc
sbb
insb
mov
out
mov
fcmovu
je
inc
add
pop
sahf
jns
leave
jge
mov
ljmp
add
mov
jo
in
test
inc
fxch
jl
cmp
adc
in
test
xor
out
dec
mov
sarb
add
in
imul
inc
jle
sbb
lret
cmc
mov
inc
ficoml
lahf
xor
mov
mov
add
fsts
enter
add
jg
test
lahf
clc
sbb
ljmp
lcall
lea
lods
fmuls
cltd
lcall
int3
jecxz
pop
out
mov
ret
fbstp
pop
je
mov
mov
dec
test
pop
cmc
xchg
repz
xor
sbbl
jne
pop
mov
xchg
sbb
rclb
pop
mov
add
jmp
or
xor
fidivs
out
jl
sbb
sbbl
clc
pop
cmc
and
jno
jg
inc
ficompl
mov
or
fs
jno
daa
xchg
lcall
sub
sbb
add
daa
xchg
inc
xchg
sub
mov
mov
shll
lea
shll
lods
inc
or
or
pop
loop
or
stos
cmp
arpl
pop
scas
std
xchg
xchg
sub
push
ds
call
je
popf
inc
jle
ja
xchg
sub
rorl
sub
pop
ret
pop
mov
fwait
subb
or
sub
adc
or
inc
testb
mov
mov
sub
ss
dec
shrl
dec
fs
jns
jmp
add
in
or
sub
dec
jle
push
in
mov
loopne
add
out
out
test
sbb
mov
fst
imul
arpl
cvttps2pi
sbbb
add
or
stos
mov
int3
jmp
mov
pop
and
push
cmp
jl
jbe
add
mov
cmc
call
stos
inc
inc
inc
cmp
ja
push
xchg
xchg
pop
in
lret
test
jecxz
stc
sbb
adc
cmp
ja
imul
mov
jae
loopne
shrl
or
jmp
push
push
mov
cmpsb
movsb
mov
xor
testb
movsb
sbb
dec
pop
das
mov
pushf
movsl
cmp
pusha
out
clc
dec
fsubs
add
pop
call
xchg
sbb
or
add
roll
lea
jp
add
mov
test
xor
mov
outsl
pop
mov
test
in
aam
adc
inc
inc
out
dec
inc
out
xchg
outsl
clc
int
outsl
mul
jecxz
or
adc
sbb
mov
roll
xchg
icebp
scas
cmp
aas
adc
mov
iret
into
pop
repnz
add
fbld
mov
ja
jge
pop
lahf
mov
test
scas
rcrl
pop
cltd
sub
rcrl
pop
push
xchg
jle
iret
outsl
into
mov
inc
cmc
and
in
mov
pop
je
je
sbb
leave
aam
mov
icebp
fstpl
or
insl
jg
adc
scas
nop
and
iret
hlt
test
push
ret
jo
ds
icebp
orl
fbstp
negb
loopne
push
mov
xor
stos
mov
jmp
push
loope
cmp
xor
cmp
rsm
mov
int
mov
mov
loopne
sub
xor
bound
test
imul
in
jno
in
cltd
sbb
pop
hlt
xorb
sub
mov
ret
cmp
add
dec
cmc
test
sbb
jmp
sub
pop
movsl
jge
jmp
adc
clc
jl
dec
mov
mov
shlb
sbb
int
mov
adc
dec
lea
mov
push
negb
mov
pop
jmp
mov
subl
test
push
sbb
ret
and
cli
adcb
cmpsb
iretw
sub
or
cmp
mov
bound
pop
lds
add
dec
stos
xor
loop
sub
mov
aad
cmp
lea
int3
add
dec
sbb
sub
xchg
gs
out
jmp
adc
icebp
stc
inc
inc
repnz
jno
dec
mov
add
jne
sbb
xor
dec
fstpl
sbb
or
dec
mov
add
pop
fisubl
shrl
bound
add
mov
cmp
sbb
arpl
adc
shlb
and
loopne
dec
mov
jb
js
mov
adc
and
jl,pn
aam
dec
lcall
mov
js
push
cmc
fdivl
je
cmpsb
dec
add
stc
lcall
dec
in
sub
sbb
ds
imull
adc
rcll
scas
inc
loop
jecxz
sbb
xor
shll
add
xchg
mov
cmp
pop
mov
mov
jecxz
inc
fldcw
iret
pusha
testl
and
stos
fdivl
cmpsb
std
cmpsl
ds
enter
push
mov
push
mov
shrl
neg
je
ret
hlt
dec
fwait
xor
dec
in
pushf
jns
into
push
pop
scas
and
xor
inc
cmp
pop
xchg
jno
sbb
es
jmp
lcall
and
xor
inc
flds
push
out
test
scas
adc
xchg
cmc
sub
adc
pop
notb
mov
push
adc
pop
sahf
or
in
pop
stos
lods
inc
fnstsw
popf
mov
jmp
inc
movsb
sbb
mov
ret
add
in
lods
and
and
int
pop
or
and
loop
popa
mov
pop
mov
insl
or
das
out
xchg
pushf
jo
push
mov
xchg
inc
xchg
jnp
mov
ja
stos
lcall
cli
mov
movsb
xchg
pop
sarl
sub
or
add
insb
inc
push
movsl
xchg
cmp
out
les
or
dec
dec
insl
mov
adc
lret
mov
add
es
inc
fsubrs
iret
dec
loop
out
fsubs
filds
or
icebp
stos
movsl
out
add
and
mov
repnz
mov
mov
popf
jg
dec
pop
lret
cltd
sub
sub
push
jae
dec
imul
sarb
test
jb
dec
and
mov
or
jg
fnsave
fwait
bound
dec
imul
aad
aas
cmpsb
or
mov
aam
stc
push
push
add
sahf
aad
add
fbld
mov
add
rcll
mov
fsubrs
filds
mov
push
testb
imul
mov
out
js
loopne
lcall
adc
dec
xchg
imul
icebp
mov
cli
out
xchg
adc
jle
ljmp
mov
ret
jle
and
stos
inc
cmp
mov
jne
adc
mov
adc
pop
pop
add
dec
ss
rcrl
or
mov
or
push
adc
aaa
stc
nop
imul
mov
ficoml
std
dec
cmpsb
cmpsl
dec
xor
jae
sub
in
outsl
mov
cltd
stos
dec
xor
out
adc
dec
loop
pop
inc
xchg
arpl
repnz
mov
push
jge
iret
inc
push
push
fistpl
inc
adc
sbb
xchg
xor
in
xchg
push
sub
mov
cmc
scas
mov
pop
notb
or
lock
in
stos
or
leave
mull
jle
push
fnstsw
jmp
add
aam
xlat
enter
sbbb
push
subl
ret
roll
cmp
je
mov
mov
push
or
iret
fxch
outsl
xor
aad
lret
es
inc
add
ret
pop
gs
push
shll
cmp
mov
std
lahf
aaa
int
in
pop
lret
and
adc
sub
nop
xchg
lret
je
std
aaa
cmpsl
cmp
inc
inc
ss
sub
loopne
mov
std
fsubrp
scas
mov
jne
popf
fdivs
int
loope
sub
and
push
cmpb
mov
iret
data16
adc
and
push
push
movsl
inc
jae
adc
iret
ss
imul
push
pop
js
hlt
test
ret
hlt
dec
xchg
sub
sahf
xor
bound
lods
popa
mov
dec
mull
push
sbb
testl
ds
push
call
add
xor
inc
fstl
pop
stc
nop
nop
push
push
ljmp
jg
clc
add
mov
in
pop
fnsave
mov
adc
jecxz
pop
aam
sbb
mov
push
jl
testl
mov
cli
xchg
adc
xor
mov
mov
jb
pop
out
mov
jp
int3
lds
mov
ss
leave
xchg
sub
xor
xchg
gs
mov
dec
ror
outsl
shr
adc
clc
ja
sbb
int
cmpb
pop
fstpl
or
es
xchg
pop
push
in
addl
xor
jne
lds
adc
add
xor
adc
xor
jp
cmp
inc
jns
in
imul
in
lret
std
popf
push
in
or
push
inc
fiadds
mov
adc
mov
pop
loop
cli
xchg
ss
nop
shlb
xor
adc
mov
in
les
jne
mov
mov
xchg
sub
lods
lcall
mov
add
or
nop
nop
push
mov
mov
or
fcomps
mov
pop
shrb
cld
push
lods
out
mov
pop
mov
pop
shrl
movsb
adc
push
push
pop
repnz
push
mov
scas
shrl
lods
push
or
repz
push
aam
mov
adc
roll
sti
xchg
sub
into
imul
inc
pop
xchg
cmp
rcrl
jae
push
out
inc
xor
ret
nop
sbb
ret
cmp
pop
out
cwtl
fdivs
pop
repz
mov
sub
xor
xor
outsb
add
shll
addr16
jmp
mov
lds
mov
or
push
ret
jp
mov
pop
repz
mulb
sti
xchg
fs
pushf
xor
xchg
push
mov
ljmp
cmp
fdivl
cmp
outsb
stos
cmpl
sbb
sbb
or
and
add
mov
inc
fidivs
fsincos
xchg
or
pushf
xor
xchg
mov
int
dec
jae
xchg
mov
adc
xchg
sub
jae
mov
xor
xchg
mov
mov
pop
hlt
inc
push
montmul
cmpsb
inc
outsl
cli
xchg
mov
lret
std
clc
push
movsl
ljmp
in
insl
fdivl
sbb
lahf
mov
sbbl
xor
mov
sbb
mov
sti
xchg
xor
add
pop
pushf
xor
cmp
fadds
outsl
push
jae
fdivl
jae
mov
adc
insb
add
sbb
lret
mov
imul
inc
pop
hlt
jb
stc
nop
add
push
xor
cltd
adc
or
shlb
pop
testb
jae
mov
mov
sbb
pop
hlt
jb
sbb
push
cmpb
push
ficomps
imul
push
imul
scas
imul
imul
pop
icebp
pop
adc
hlt
inc
imul
mov
lret
pop
hlt
sti
pushf
adc
inc
dec
pop
cmc
cmp
sub
xchg
lcall
xor
adc
je
pop
cmp
xchg
adc
int3
sbb
adc
sbb
hlt
rclb
mov
xchg
sbb
pop
hlt
les
popf
xor
adc
test
rcll
mov
inc
flds
fnstenv
aas
sbb
sbb
fcompl
hlt
daa
sbb
cli
xchg
xchg
fcompl
into
mov
in
cmpl
shlb
jge
xor
fdivl
insl
sub
pop
mov
fidivl
pop
sbb
add
mov
mov
mov
test
xchg
cmp
pop
cmc
fsts
xor
lods
cmp
fmulp
pushf
xor
clc
fdivl
add
jnp
je
fidivl
sahf
sbb
shrb
or
mov
mov
inc
pop
repz
mov
inc
xchg
sti
xchg
lds
pushf
xor
cld
fdivl
aaa
cmp
push
sbb
mov
fnstenv
fidivrs
adc
pop
repnz
sbb
imul
mov
lock
hlt
or
sub
push
dec
jb
hlt
mov
lret
cli
xchg
std
stc
gs
jmp
in
fnsave
cmp
lahf
push
addr16
nop
mov
jbe
fnstenv
add
xor
pop
push
mov
sub
jae
mov
arpl
iret
add
shrb
pop
clc
mov
pop
divb
mov
bound
hlt
sub
cwtl
push
mov
jns
stos
pop
out
fisttpl
push
jmp
repz
xchg
in
jo
mov
xorl
mov
xchg
fnstenv
repz
es
dec
pop
mov
mov
jnp
cwtl
mov
ficoms
fldl2t
or
stc
nop
insb
or
pop
jp
sahf
xor
push
cmp
add
fstpl
jne
lahf
movsb
cmp
jne
adc
rcrb
mov
mov
cli
sub
push
pop
stc
ret
ja
mulb
iret
clc
nop
add
push
popf
jno
sahf
ss
arpl
jns
jne
iret
movsl
xchg
inc
faddl
into
iret
data16
xor
sub
pop
cmp
xchg
movsl
scas
pop
icebp
pop
into
cwtl
das
add
pop
push
sub
pop
xchg
sbb
cmpsb
inc
push
popf
xor
pop
testb
fidivl
sub
pop
stos
inc
fcompl
cmpsb
cs
sub
movsl
sbbb
sub
jmp
test
rcrl
call
stos
in
sbb
push
popf
fildll
scas
lcall
inc
out
inc
fcmovnb
cmovs
aas
add
fbstp
jne
sbb
js
aad
dec
loope
std
sub
inc
test
jns
or
sarl
scas
jmp
lret
xor
inc
fcoml
aad
pop
in
lahf
ss
push
inc
fidivrl
cmp
addr16
push
insb
iret
data16
pop
ljmp
adc
call
inc
sbbb
cmc
or
and
fidivs
sbbb
push
and
nop
fdivr
paddq
outsl
daa
es
push
or
js
sub
insb
into
mov
sahf
bound
pop
out
pop
popa
testl
add
mov
pushl
lods
cmpsb
adc
jecxz
push
outsb
into
mov
leave
imul
sti
adc
cmpsb
inc
cli
push
movsl
in
jo
aas
mov
lret
aas
sti
jecxz
mov
adc
jo
adc
pusha
test
adc
mov
mov
mov
mov
insl
pop
out
popf
insb
iret
mov
xchg
push
sbb
inc
ret
fnstenv
imul
fwait
mov
lods
daa
mov
pusha
out
fidivl
push
data16
aas
imul
sbb
xlat
xchg
sub
sysexit
int3
inc
dec
rclb
push
ljmp
jno
in
cld
xchg
es
nop
daa
cmp
or
mov
int3
arpl
pop
data16
cmp
jmp
xor
or
ret
test
ret
scas
inc
adc
dec
loop
aaa
into
pushw
add
jmp
mov
fisttpll
mov
daa
cs
mov
js
inc
fidivs
arpl
add
or
sbb
jb
lahf
xor
iret
mov
cli
push
sbb
outsl
push
xor
mov
adc
unpcklps
leave
inc
sub
jb
push
ljmp
jno
ljmp
daa
cmp
pop
scas
inc
nop
jb
jmp
mov
arpl
les
testb
ss
xchg
sub
or
pushf
test
int
out
sti
inc
fsubrl
out
jmp
loopne
loop
je
or
rcll
sub
test
and
mov
mov
stc
int
sbbl
in
pushf
push
loope
cmp
inc
mov
pop
xlat
pushf
inc
fmul
push
call
add
rcrb
mov
and
and
lds
pop
repnz
xor
xchg
rol
xor
enter
xor
push
lea
mov
mov
mov
popa
clc
popa
push
inc
fadds
push
popf
mov
aam
cmp
out
xchg
popa
adc
js
mov
pop
es
sbb
cltd
das
and
iret
ja
pop
test
adc
add
clc
hlt
ret
aaa
into
mov
pop
sahf
dec
mov
lock
mov
or
aad
xor
or
mov
jmp
jbe
mov
icebp
mov
mov
xor
xchg
mov
xor
jno
lds
call
jnp
testb
sti
xchg
sub
inc
ss
sahf
push
aad
and
xchg
out
jo
fsubs
lret
adc
jns
sbb
outsb
aad
push
push
outsb
pop
cmc
pusha
xor
popa
arpl
push
mov
xchg
mov
rcrl
cmc
jp
shrl
mov
decb
out
xlat
adc
loope
mov
pusha
in
in
mov
mov
testb
and
or
jg
int
xor
pop
mov
aam
mov
fnstenv
push
cmp
js
jle
mov
int3
sbb
pusha
sbb
jle
arpl
xchg
xchg
leave
pusha
or
in
push
sbb
arpl
loope
xchg
fs
push
mov
rcrl
and
pop
arpl
pop
xchg
insl
cld
xchg
pop
mov
push
out
bound
push
popf
cmp
cmp
inc
fstp
fdivl
mul
js
add
imul
sbb
hlt
fwait
and
jns
pop
sbb
popa
clc
arpl
push
popf
mov
mov
sbb
mov
jae
jl
js
push
ret
pop
inc
enter
ja
sub
and
or
lds
dec
jecxz
lret
sti
ret
mov
push
popf
inc
and
mov
lret
sti
int
jnp
adc
jns
shlb
sbb
repz
xor
mov
mov
mov
pop
xor
pop
lock
clc
nop
pop
xor
dec
mov
sbb
imul
jne
or
fmull
cmpsl
loop
mov
shl
test
jecxz
dec
aam
and
fsts
mov
loope
stc
adc
mov
sarb
pushf
push
mov
in
insl
add
adc
add
inc
sub
out
push
pop
test
dec
jns
xchg
stos
fidivs
lds
cmp
int3
push
lahf
xlat
outsb
adc
push
inc
mov
aaa
lds
inc
insl
cmp
adc
push
dec
xchg
cmp
dec
testl
inc
pop
hlt
mov
push
lods
icebp
insb
ret
hlt
arpl
out
jo
pop
out
cmpsb
fsubrs
ds
sbb
mov
pop
sahf
mov
shlb
push
push
popf
and
insl
mov
fs
neg
testl
subb
lods
ret
repz
js
sub
cli
xchg
popf
lret
iret
loopne
or
out
lock
adc
xchg
test
pop
nop
jae
mov
lods
adc
aaa
jns
inc
push
cmpsl
ds
imul
mov
jle
add
jle
incl
pop
repz
jecxz
pop
scas
xlat
loop
pop
aad
mov
xor
fs
mov
fimuls
loopne
fnstcw
ja
and
dec
adc
sbb
push
dec
loope
xlat
adc
xlat
outsb
insl
inc
stos
inc
aaa
test
mov
push
jmp
loopne
sahf
adc
add
imul
es
xorl
mov
cmp
nop
adc
adc
addr16
insb
es
call
mov
add
sbb
xchg
adc
xchg
sub
rolb
les
leave
pusha
jmp
sbb
jle
sti
or
mov
rclb
scas
add
mov
pop
pop
add
test
shl
repz
hlt
sbb
dec
loop
xchg
aad
out
cbtw
add
push
loopne
cmp
push
push
out
xchg
stc
nop
xorb
push
and
push
jl
inc
push
pop
mov
js
shrb
mov
cwtl
pop
decb
das
mov
jg
xor
xchg
jg
aam
mov
sbb
ljmp
inc
xchg
dec
ffreep
mov
fbstp
inc
lds
dec
js
jnp
cld
xchg
movsl
xchg
montmul
cmpsb
les
test
and
adc
jp
sub
call
xchg
icebp
lock
push
and
lods
inc
out
or
xchg
lahf
ss
adc
cmp
rolb
out
adc
jg
roll
push
and
das
mov
jge
add
sbb
fbld
loope
sbb
dec
fbstp
or
jp
js
leave
push
and
loope
mov
nop
insb
add
cmp
filds
dec
out
jno
cmp
call
sbb
cmp
insl
cwtl
pusha
testl
pop
mov
push
add
sub
cmc
mov
js
xchg
stos
sbb
popf
and
fidivs
rclb
mov
stos
in
pop
ret
imul
adc
sbb
inc
imul
hlt
jecxz
call
cmp
into
gs
aad
mov
mov
sub
js
rolb
jne
stc
jae
sbb
into
xorl
sbb
and
fs
jg
mov
imul
sub
or
sahf
movsl
cmp
xor
outsb
add
mov
fcoms
cld
mov
out
and
mov
sbb
sub
fidivl
or
pop
icebp
mov
lret
lock
in
xorl
push
in
jmp
out
movsb
add
jnp
cmpsl
and
xchg
push
in
dec
mov
and
incb
pop
ss
jecxz
out
pusha
arpl
mov
leave
add
or
loopne
out
and
dec
push
fisubl
int3
adcb
fsubrs
in
loop
push
mov
mov
imul
inc
andl
mov
or
adc
stc
insb
and
mov
aam
cmp
mov
lret
mov
int
leave
mov
int
pop
mov
fbstp
lret
hlt
mov
data16
ljmp
cltd
xor
pop
movsl
cmp
push
sub
dec
mov
rcrl
out
xor
pop
sbbl
scas
mov
sub
sbb
lds
push
ljmp
jno
frstor
add
and
dec
shrl
inc
in
hlt
mov
jge
inc
ljmp
fdivr
adc
or
jle
outsb
inc
orl
mov
mov
mov
iret
aas
pop
mov
fimuls
mov
sub
pop
inc
addb
scas
mov
jno
xor
xchg
aas
adc
scas
jae
leave
xor
pop
sarb
aas
xlat
lret
pop
xor
insb
fdivp
sbb
pop
outsl
testb
mov
inc
push
sub
xchg
icebp
jmp
fwait
call
push
dec
das
sti
inc
mov
jg
cmp
les
xchg
xor
fwait
das
aam
push
je
mov
cld
add
pop
fistps
ds
sub
xchg
iret
mov
es
enter
dec
push
inc
mov
push
outsb
cmp
xor
out
jo
inc
add
cmp
xchg
pop
subb
cmpsb
nop
push
loop
lds
sbb
sub
icebp
imul
xchg
ljmp
or
add
bound
xchg
xchg
jl
fnstenv
xor
jecxz
and
xchg
ds
repz
mov
in
call
push
dec
aam
adc
out
pushf
add
jmp
ds
lret
inc
ret
aaa
shl
xor
jb
push
xor
rcrb
nop
xchg
and
negb
and
jmp
jp
aam
hlt
lahf
mov
loopne
add
adc
cmpsl
jno
mov
xchg
mov
fistpl
inc
xchg
add
mov
inc
xchg
enter
imul
out
jo
mov
jo,pt
nop
push
push
lods
cmp
xchg
arpl
ret
pop
lcall
aam
out
cmpsl
and
jl
lds
dec
in
nop
dec
jecxz
out
imul
jecxz
add
mov
push
mov
pop
sbb
leave
pusha
cld
cmp
inc
outsb
sbb
pop
shll
mov
ret
and
insl
xor
inc
fdivrl
loopne
cli
adc
aas
or
sbbl
pop
xchg
adc
aam
xor
mov
mov
and
insl
lods
popa
stos
inc
xchg
int
mov
mov
data16
cld
xchg
push
sahf
in
test
je
mov
icebp
or
clc
inc
sub
in
sbb
sbb
pop
std
or
mov
push
pop
aas
mov
xchg
mov
les
insl
inc
xchg
add
jle
sbbl
roll
scas
inc
and
mov
leave
ljmp
pop
cli
add
mov
dec
push
inc
flds
test
neg
rcrl
js
add
inc
cltd
test
addr16
cs
in
mov
dec
in
aas
rcl
xor
shll
hlt
inc
test
mov
jnp
xchg
fdiv
lea
mov
adc
pop
or
dec
scas
pop
insl
xchg
iret
shlb
mov
mov
and
test
test
cmpsb
push
xor
mov
sub
clc
test
pop
dec
jnp
pop
cltd
js
insb
xchg
cmpsb
mov
push
shlb
xchg
push
and
pop
xchg
sbb
xchg
lods
xchg
sbb
fisttps
and
mov
sub
inc
add
sarl
stc
andb
pop
scas
add
dec
scas
and
push
jbe
ljmp
jno
cli
jbe
cmpsb
cmpsl
sbb
stc
outsb
scas
inc
mov
ror
rep
push
sahf
adc
addb
pop
icebp
or
cmpsl
ds
mov
lds
inc
fnstsw
jecxz
ljmp
cltd
cmp
sbbb
pop
and
xor
ds
push
mov
hlt
xor
jnp
test
sti
xchg
sub
aad
pop
push
inc
xor
aas
enter
push
xchg
or
push
adc
sbb
pusha
sbb
stos
mov
daa
adc
xor
aad
pop
adc
jnp
lock
mov
jb
lret
sub
fistps
rcrb
cmpsl
xchg
ss
and
push
icebp
das
pop
fldt
add
pop
lcall
in
dec
mov
xchg
mov
xchg
mov
mov
mov
mov
xchg
and
iret
jne
data16
sub
lds
mov
ss
js
aaa
ds
lahf
xchg
movb
popa
jno
dec
stos
addr16
ret
sti
and
or
divb
sub
mov
push
jle
test
shlb
rcrb
add
mov
adc
fidivs
jnp
xor
shlb
mov
sub
bound
cmp
jle
in
xchg
aam
mov
sub
nop
dec
lcall
arpl
shll
call
sbb
xchg
movsw
cmp
call
or
out
adc
ja
pop
insb
add
mov
pop
in
aaa
into
sub
dec
push
in
jg
xchg
mov
fs
pop
lods
pop
scas
fisttpll
mov
test
cmp
jg
out
iret
out
or
cld
arpl
mov
jp
dec
ffree
ljmp
loop
xchg
clc
pop
push
ret
int
outsl
cmpsl
in
fldenv
cmpsl
push
loope
outsb
mov
in
push
inc
adc
cld
jo
mov
daa
aad
mov
push
imulb
mov
xchg
jns
mov
sbb
add
mov
inc
es
add
push
inc
push
pop
aad
sbb
stc
popa
repnz
dec
mov
push
inc
and
sub
xor
test
cltd
mov
jnp
enter
jo
sbb
push
in
dec
cmp
push
xchg
mov
xor
mov
xor
adc
and
loope
adc
iret
sbb
pop
rorb
pushf
xor
xchg
xor
in
pop
repz
xor
shlb
cmpsl
inc
add
fistpll
not
popa
test
test
push
orl
cmp
cmp
pop
mov
xchg
push
add
push
lret
lods
push
imull
int3
fs
leave
jae
pop
xor
gs
in
and
mov
pop
test
dec
mov
add
jbe
cmp
stc
out
inc
out
addr16
adc
cmp
inc
or
testl
cmp
clc
call
mov
jne
addr16
push
test
repz
loope
mulb
scas
inc
ret
xor
lods
stos
lock
and
mov
adc
push
mov
xor
test
and
or
jae
test
in
cs
add
dec
ds
inc
dec
push
xchg
repnz
push
or
test
stc
outsb
xacquire
arpl
lock
sbb
mov
jg
xchg
test
bound
shrb
insb
call
insb
sub
xor
xor
ficompl
jnp
outsl
imul
cmp
push
push
clc
lock
push
subb
lods
jmp
jecxz
ret
cmc
fidivrs
leave
aaa
cmpsb
into
cld
mov
xchg
mov
push
inc
in
sahf
lock
jecxz
fucom
lock
dec
mov
stos
xchg
out
ret
rcrb
xchg
jno
addb
pop
std
std
roll
repnz
and
cmpsb
or
imul
mov
xchg
enter
sbb
mov
inc
add
push
adc
std
dec
popa
aas
pop
ljmp
in
std
faddp
xchg
fisubrs
scas
sub
add
out
rcr
test
or
mov
push
inc
inc
ss
loopne
filds
or
lds
clc
adc
xor
mov
mov
orb
in
div
stc
loop
xchg
sub
sbb
das
stos
icebp
mov
xlat
adcl
xchg
push
fistps
insb
mov
das
nop
mov
movsb
frstor
push
out
xlat
dec
xor
jb
divl
sub
jo
dec
or
fnstsw
jae
test
jne
push
cmp
fstpt
jbe
rcrb
ja
popa
imul
loopne
mov
lds
cmpsb
or
adc
mov
sub
push
cwtl
xor
inc
xchg
out
div
lods
pop
mov
push
insb
out
push
mov
arpl
inc
adc
int
jbe
jne
push
mov
out
outsb
imul
pop
xor
and
int3
mov
out
jl
mov
fs
add
cmp
mov
repz
mov
cmp
in
test
dec
sar
mov
fmuls
or
std
add
jbe
jle
call
clc
or
fldt
hlt
into
cmp
ficompl
add
fidivrl
stos
sub
mov
push
out
hlt
aam
push
inc
adc
repz
outsb
lcall
dec
fs
aaa
sbb
rorl
push
dec
push
mov
out
into
mov
test
dec
dec
add
xchg
add
fsubl
fwait
cs
mov
xchg
pop
clc
cmpsl
sbb
mov
icebp
dec
lret
out
mov
jmp
xor
setle
cld
fisubl
push
fidivrl
les
shrb
push
jb
jp
jle
icebp
enter
add
iret
push
push
cmp
sbb
movsl
xor
pop
jae
js
mov
dec
into
mov
loopne
cmp
outsb
inc
ret
lahf
cli
popa
jne
jb
add
ror
push
mov
xchg
push
pop
inc
xor
popl
subps
pop
mov
psllq
dec
addr16
push
jnp
test
dec
dec
jbe
pop
popf
xor
push
inc
icebp
sahf
mov
and
jecxz
and
in
addr16
fstpl
push
sub
out
jge
dec
xlat
insb
pop
repz
mov
cwtl
movb
fnstsw
jnp
dec
mov
xchg
add
cmpsl
mov
adc
mov
or
jl
rol
jns
cmp
sub
lods
lcall
mov
repnz
stc
nop
ljmp
or
shll
mov
xchg
inc
or
orb
repnz
cs
push
mov
pusha
repnz
jbe
adc
imul
jmp
scas
mov
shl
lock
push
insl
gs
in
rcll
outsb
or
std
xchg
sti
les
shll
jg
mov
lahf
fnsave
idiv
aas
mov
mov
or
cmpsl
sbb
orl
push
jne
mov
addr16
les
dec
inc
lahf
paddusw
mov
mov
push
pop
scas
inc
movsb
clc
fdivrl
pusha
mov
fisttpll
mov
ret
and
sub
push
popf
xchg
push
and
out
test
adc
add
stc
mov
js
cmpsl
pop
fisubs
pushf
rcr
mov
adc
add
cld
xchg
fistl
imul
jmp
sbb
mov
adc
and
mov
rclb
jg
cmp
add
rclb
aas
aad
sub
pop
cmpsl
pop
repz
leave
stos
cli
jns
sbb
pop
idiv
cmp
and
jle
push
jb
xor
mov
jge
sbb
jo
mov
mov
mov
out
xchg
sub
jne
or
mov
ret
sub
shlb
aas
out
ja
or
jecxz
push
clc
subb
xchg
pushf
and
cmpb
mov
xchg
pcmpgtw
mov
hlt
out
das
mov
push
in
mov
ret
pop
scas
hlt
jecxz
xchg
adc
sbb
cltd
mov
iret
mov
ficoml
or
xchg
sub
je
pop
popa
scas
inc
xchg
jg
sub
shlb
cmpl
into
gs
pop
or
stos
lods
sub
cld
incl
xor
sub
dec
push
fs
xorb
mov
ret
repz
sbb
mov
cmp
mov
cli
pushf
inc
xor
addr16
fucomip
lods
push
and
ja
rcr
mov
and
lret
add
xchg
xor
icebp
movsl
inc
mov
loope
push
xchg
lcall
call
popa
xor
add
sub
faddl
inc
push
lret
jmp
push
xor
or
cli
and
and
cld
mov
sub
adc
loope
xchg
push
cmp
movsb
pusha
daa
adcl
dec
nop
cmp
shrl
fwait
loop
lock
ja
data16
fs
xchg
adcb
or
pop
or
mov
mov
inc
fisttpll
fs
fbld
sbbl
ja
loopne
push
mov
cli
cmpsb
mov
sbb
sub
cmp
ret
hlt
lahf
sbb
inc
icebp
aaa
into
and
xchg
fwait
inc
push
in
je
sbb
cmc
test
sub
cmpsb
adc
and
lds
inc
int
jp
xor
cmp
lods
inc
inc
pop
sbbl
out
sub
arpl
pop
lock
mov
mov
jae
test
xchg
sub
lods
adc
jmp
rolb
outsl
cmp
xchg
cs
ss
cmc
xor
pop
testb
stos
js
dec
in
cltd
ds
insb
mov
xchg
sub
pushf
aaa
pop
icebp
pop
mov
js
and
call
or
push
scas
movsb
cmp
ja
arpl
mov
mov
sti
push
call
loopne
cs
scas
out
and
popf
xor
inc
int3
arpl
jmp
test
inc
mov
and
push
daa
mov
insb
jae
push
lods
lea
push
andb
mov
es
addr16
xchg
sub
inc
ret
imul
dec
mov
out
loop
pop
negb
mov
mov
cmp
xchg
xchg
outsb
add
data16
je
add
arpl
mov
repz
add
cmp
or
xchg
outsl
ja
popa
xor
sbbl
xor
aam
dec
push
xchg
sub
stos
mov
in
cmp
mov
mov
pop
cmc
mov
fists
shlb
icebp
mov
les
repnz
cs
lcall
cltd
popa
clc
or
ret
jne
clc
scas
mov
scas
inc
mov
enter
mov
push
dec
data16
mov
cli
mov
ror
sbb
cmp
stos
scas
fidivs
dec
dec
loop
inc
cmp
xor
nop
daa
inc
cmp
addr16
pop
pop
add
jbe
jp
subb
or
daa
mov
xchg
mov
pop
and
inc
and
aaa
dec
popa
clc
mov
outsl
imul
or
dec
jle
jbe
loop
jmp
xchg
cmp
stc
test
fucomip
mov
sbb
cmp
pop
lcall
jno
outsb
arpl
lds
std
xchg
imul
inc
fisubrs
sbb
mov
lods
mov
in
aas
jne
mov
or
les
jbe
in
dec
xlat
pop
in
test
xor
lret
jp
jge
push
mov
sahf
mov
adc
pop
out
add
lods
es
mov
dec
fildll
inc
testb
adc
push
out
jmp
mov
or
pop
adc
ss
enter
or
fldt
int
fnsave
xchg
xor
jmp
jno
xchg
lea
cmpsb
aam
aam
dec
fistps
mov
mov
jle
shrb
adc
push
mov
in
push
and
mov
lret
mov
incb
lds
sti
xchg
mov
inc
lcall
loopne
jecxz,pt
mov
in
orl
ret
sub
mov
cmpsl
fcomip
jge
jmp
or
dec
insb
add
mov
pop
xor
sub
insl
add
les
pop
lret
sub
jmp
clc
fcoml
popa
clc
out
insl
xchg
sub
psubw
push
add
add
or
rclb
scas
inc
aam
ret
pop
int3
andb
in
aad
fbstp
jne
add
loopne
xchg
stos
inc
add
daa
mov
push
idivb
fbstp
dec
or
test
aaa
pop
mov
jb
jge
sbb
out
test
push
or
mov
scas
inc
or
hlt
aam
das
mov
iret
data16
es
adc
int
in
js
in
mov
out
jmp
or
xchg
xchg
lcall
cmc
scas
das
or
ret
jno
pushf
xor
aam
daa
out
clc
push
call
xlat
outsb
in
adc
clc
fimuls
lret
bound
push
or
aam
es
push
les
mov
fdivs
data16
and
lahf
std
xchg
int3
insb
add
arpl
shrb
inc
sbbl
adc
ss
lock
std
popf
xor
leave
fdivl
mov
jp
fdivrl
and
out
adc
mov
jb
mov
pop
add
es
xchg
or
cmp
pushf
xor
dec
xchg
sub
mov
push
adcb
jo
or
jne
jge
cmc
sbb
out
test
mov
cli
cmp
lods
xchg
fbstp
into
ret
pop
rclb
mov
test
shll
lods
inc
out
mov
jbe
mov
xchg
sub
cs
lahf
adc
shrl
decl
cmp
cwtl
das
or
cmp
fnstcw
je
in
popf
fs
mov
dec
sub
sbbb
iret
xor
mov
les
lret
fnsave
cmp
enter
or
out
fdivrl
lret
out
sahf
es
adc
lods
mov
mov
frstor
enter
stc
hlt
mov
fstpt
int
ljmp
inc
or
xchg
add
jb
adc
add
sbbl
xchg
sti
xchg
mov
dec
imul
cmp
inc
fidivs
inc
rcrl
inc
fldenv
aam
dec
sbbl
fldl
cmpsl
mov
sbb
data16
stos
dec
dec
fistps
xor
jne
filds
jecxz
repnz
nop
in
sbbl
add
rcrl
stc
nop
or
mov
popf
jnp
sbb
pop
out
xchg
cmp
stos
push
adc
dec
jbe
call
and
pusha
testl
mov
out
xchg
xchg
sub
mov
dec
lcall
add
inc
push
xchg
sub
outsb
fistps
sbb
mov
and
xchg
sub
cmp
gs
icebp
mov
adc
int
pop
and
sti
insl
in
pop
nop
inc
adcb
test
pop
jle
xchg
cmp
push
sbb
sbb
push
fcompl
stos
iret
out
sbb
jl
add
xor
add
and
mov
jne
dec
negb
loop
dec
shrb
pop
std
pop
or
pop
aad
mov
add
jecxz
test
cltd
stos
aaa
or
aas
and
mov
inc
xchg
shrl
cmpsb
cmp
in
add
jne
push
jmp
daa
adc
lahf
lods
dec
test
pop
int
or
jp
fwait
pop
or
jne
jg
adc
cwtl
das
clc
arpl
test
xchg
ja,pn
pop
out
es
hlt
mov
jne,pt
lcall
xchg
outsl
push
cmpsl
test
sbb
sti
xchg
sarb
mov
repz
stos
sbbl
std
xor
bound
sbb
adc
rclb
jl
rcl
rcrl
sti
xchg
ret
daa
xchg
jecxz
add
mov
dec
mov
mov
out
inc
imul
adc
push
lret
dec
mov
jnp
stc
nop
mov
mov
and
cmp
xor
test
pop
cmc
adcb
shrl
mov
addr16
pop
ljmp
stos
cld
sub
in
mov
ja
dec
fbstp
mov
sub
mov
cwtl
aam
or
aad
cwtl
loope
dec
mov
mov
outsb
leave
out
lahf
jge
mov
mov
pop
aad
ds
jns
xor
setne
mov
mov
sub
jae
and
aad
fbstp
jo
add
cmp
in
ljmp
jno
bound
repz
xor
adc
movsb
inc
or
test
loop
mov
dec
mov
inc
in
adcb
iret
cmp
rclb
inc
dec
je
aas
lret
test
aad
push
out
test
cld
add
inc
xor
out
cltd
aaa
into
or
dec
loop
push
or
mov
cld
lods
push
pop
dec
mov
and
les
inc
shll
and
mov
daa
push
inc
movsl
std
andl
nop
cli
ss
dec
and
xor
incl
push
jmp
sub
push
scas
dec
imul
adc
test
sbb
les
jp
mov
mov
sub
dec
addb
cmp
push
mov
xor
sbb
mov
cwtl
mov
repz
and
inc
fwait
jbe
pop
lods
mov
mov
roll
cmc
or
rcll
jnp
stos
cmp
add
lahf
mov
sbb
push
inc
outsb
mov
xchg
xor
jg
leave
xchg
subl
lcall
and
jp
push
call
fistpll
stc
mov
push
in
popf
stos
sbb
fstpt
jnp
in
mov
mov
jmp
gs
push
add
and
int3
mov
repz
sbb
add
rcrl
xchg
in
xor
shrl
repz
dec
or
clc
outsl
shrl
stc
je
ljmp
arpl
xchg
add
enter
xchg
mov
popf
and
cltd
xor
inc
pusha
divl
movsb
cmp
adc
subb
ror
enter
jb
jmp
fcoml
xorb
adc
inc
fsubrl
dec
out
mov
push
mov
sub
hlt
mov
lods
outsb
add
inc
adc
insl
cmp
and
jmp
jae
cmpsl
jbe
fnstenv
cli
xchg
xchg
cli
fsubrs
mov
add
fmull
orb
outsb
add
fstpl
mov
lea
jg
fildl
mov
lret
fadds
push
pop
and
fwait
lcall
out
cmp
push
out
mov
push
call
scas
mov
mov
sub
push
in
inc
sarl
rol
dec
testl
imul
std
int
adc
mov
lret
jmp
cmc
mov
sub
leave
pop
push
scas
mov
lock
push
lods
call
inc
fistpl
arpl
mov
add
adc
inc
fsubrl
leave
jns
sti
push
mov
test
mov
xor
pop
dec
inc
fdivrs
dec
loop
scas
and
scas
out
mov
xchg
lahf
es
xor
movsl
xchg
add
loope
enter
int
rclb
mov
xor
int
xchg
push
mov
sub
aas
scas
cmp
nop
mov
imul
jle
mov
test
sub
enter
in
xor
out
jl
outsl
push
xchg
popf
xchg
sub
mov
mov
push
fdivl
dec
jo
jle
popf
xor
lahf
dec
loop
cmpsl
js
fsincos
jbe
sub
pop
push
mov
push
mov
into
int
xchg
mov
push
aam
fucomip
adc
xchg
sub
fwait
cmp
insl
add
loop
mov
aaa
add
mov
loope
xor
mov
out
out
push
and
lea
test
cli
test
push
mov
mov
jnp
test
fidivrl
pushf
push
xor
jp
mov
cli
xor
sub
insb
add
imul
ret
and
mov
pop
repnz
mov
aam
xor
pop
mov
push
aas
pop
scas
xchg
add
dec
inc
fdivrs
lret
lcall
adc
das
gs
lods
gs
testl
adc
mov
fldt
mov
xchg
insb
mov
inc
xor
pop
mov
cmp
stc
dec
pop
mov
fnstcw
mov
pusha
and
sub
cs
sub
push
popf
jo
lret
bound
xchg
jg
xor
xor
ljmp
movsl
push
clc
cmp
mov
iret
adc
into
clc
push
in
ret
push
adc
out
xchg
insb
add
cltd
adc
aas
inc
das
push
pusha
jae
cmp
pop
out
test
mov
adc
push
das
push
sbb
xchg
dec
jb
in
push
adc
adc
pop
insb
lock
mov
xor
xor
mov
jnp
xor
pop
pushf
ret
jle
jmp
mov
fnstenv
repnz
fistps
fcmovnbe
mov
icebp
cld
inc
faddp
adc
into
mov
test
fabs
pop
stos
inc
jno
xor
mov
les
mov
popa
cli
pop
scas
rolb
xor
push
call
or
pop
insl
lock
mov
xchg
sbb
aas
sbb
lea
mov
cld
dec
or
mov
ret
lea
inc
or
les
iret
dec
in
xor
aaa
cmp
sbbb
pop
mov
jp
dec
adc
xchg
inc
insb
cwtl
das
inc
pushw
inc
jp
fs
nop
dec
lahf
cmpsb
cmp
repnz
scas
mov
into
jmp
add
pop
adc
mov
push
leave
pop
repnz
jno
das
xor
push
mov
gs
cmpsb
cmp
lods
cmp
insb
xchg
push
jmp
test
sub
xor
xchg
sub
dec
mov
int3
mov
or
lcall
ja
add
cltd
fwait
out
mov
movups
lds
icebp
mov
les
or
add
xchg
xchg
in
cwtl
mov
loopne
psrad
stos
inc
js
add
push
cs
cmpsl
ds
out
repnz
popf
xchg
xor
jl
mov
and
in
sahf
xlat
xor
mov
arpl
inc
dec
sbb
xchg
jecxz
ss
cltd
shrl
popa
and
js
in
adcb
roll
or
out
and
lcall
sbb
leave
pusha
imul
xor
cltd
xor
testl
fnstenv
inc
negb
arpl
int3
arpl
sbb
inc
clc
shlb
ds
stc
jns
and
dec
and
add
lods
inc
xlat
pop
pop
mov
sti
xchg
cli
xlat
cmc
mov
sbb
mov
sub
stos
pop
outsb
cmp
mov
and
mov
in
push
lods
loopne
sub
test
pop
jns
movsb
cmp
cmpsl
mov
sbb
lock
int3
arpl
xor
inc
add
cmp
call
xchg
sub
das
mov
sahf
pop
dec
mov
jmp
enter
xchg
lea
sbb
mov
pop
cli
xchg
xchg
cmpsb
jne
iret
mov
enter
pop
and
push
or
cmp
sbb
mov
decb
insl
add
push
lret
dec
jbe
dec
jo
int
insb
jg
push
jo
mov
dec
pop
pop
lock
jg
mov
ret
hlt
jecxz
xlat
adc
mov
stc
imul
fnstcw
int
xor
xchg
test
sub
xlat
xchg
ret
clc
mov
ljmp
daa
add
sti
pop
jmp
or
mov
imul
scas
movsb
cmp
push
dec
in
fimuls
jecxz
popf
sub
sbb
cwtl
das
lahf
stos
int3
sbb
repnz
jne
inc
push
test
xchg
insl
mov
ds
shrl
mov
aam
test
jg
in
jmp
loop
cli
cld
or
fcmovnbe
mov
into
jecxz
mov
cld
mov
push
stc
iret
jge
int3
or
mov
adc
adc
dec
jbe
cmp
push
inc
movsl
jge
ds
cltd
sahf
mov
shl
or
aad
mov
mov
std
push
lahf
leave
or
aad
mov
pop
stos
mov
mov
mov
mov
fistl
push
push
or
xor
loope
mov
mov
fistpl
push
and
fists
cmp
movsl
jo
leave
inc
test
xlat
push
mov
mov
jbe
rorl
or
pop
xchg
call
pop
fistl
das
jge
loope
adc
pop
insl
xor
push
xchg
mov
lea
insl
mov
out
xchg
mov
stos
pop
mov
inc
xlat
daa
divl
rcrb
sbb
sub
pop
push
mov
call
stos
shrl
jmp
in
fnstenv
add
lret
shl
sbb
sar
xor
mov
dec
add
cmp
mov
dec
cmp
sbb
nop
jo
pop
sti
xor
jnp
mov
loope
xchg
stos
gs
sub
adc
imul
xor
mov
pusha
sub
cwtl
push
aas
xor
jp
jb
je
or
sti
and
sti
cmp
clc
xorl
push
lds
xchg
mov
jb
nop
lods
jg
ss
sbb
mov
xchg
test
and
loope
sub
nop
push
dec
mov
push
sub
in
inc
sbbb
sbbl
pop
jmp
or
js
dec
dec
in
adcl
sub
mov
insl
fnstenv
mov
mov
cmc
mov
out
sbb
mov
add
loopne
push
or
mov
or
jmp
cmp
cmp
sbb
jne
cmp
cmp
aaa
test
pop
imul
rorb
shl
jmp
jmp
pop
pop
or
mov
shrl
addl
ret
hlt
xor
mov
mov
and
lret
icebp
and
inc
pop
sbb
lods
and
fidivl
mov
xor
add
jge
sub
jbe
lods
cltd
xor
mov
jl
out
inc
sbb
cmpsb
ja
popf
lea
mov
outsb
adc
insb
dec
xchg
mov
pop
test
icebp
pop
jo
mov
push
lods
xchg
or
sub
sbb
aad
call
aas
fst
rcr
loope
sbb
push
cmpsb
lds
adc
lahf
dec
jns
cmp
inc
outsl
mov
xlat
push
je
imul
xchg
fldl
repnz
pop
add
xor
rol
outsb
stc
paddsb
lods
scas
lea
mov
repnz
std
inc
xlat
cs
mov
sub
push
rcrb
scas
in
je
int
push
or
xchg
mov
adc
js
cmp
mov
dec
mov
std
sbb
fbstp
hlt
mov
fdiv
lret
popa
push
out
test
xchg
shrb
dec
mov
adc
pop
das
movb
xor
xor
mov
enter
inc
adc
mov
movsl
adc
and
xchg
daa
add
fisubrl
push
std
adc
add
je
cmp
shll
call
pop
xchg
mov
jno
push
mov
adc
fbld
outsb
mov
push
mov
xchg
sti
jb
push
cmp
fldcw
scas
and
sub
adc
add
push
int3
inc
sub
pop
jg
out
jp
push
lock
notl
jae
test
jl
sbb
and
lods
push
push
test
fwait
sub
int3
mov
and
bound
shll
add
mov
xchg
sub
jnp
out
addr16
dec
clc
aaa
lahf
rclb
jmp
ret
dec
lret
sbb
xchg
rorb
fisttps
testl
dec
in
xchg
cmc
pop
shll
mov
dec
in
push
out
leave
mov
xlat
push
mov
fistpll
outsl
push
imul
sbb
aam
inc
ss
mov
out
mov
xchg
popa
pop
popf
popa
or
loop
cmpsb
xchg
fimuls
mov
fldt
lret
bound
xor
mov
iret
pop
aad
cmp
mov
stos
cmp
lcall
mov
push
ror
jecxz
in
fdivrs
loop
rcrb
scas
add
xor
ret
mov
testl
xchg
ret
and
jecxz
xchg
sub
outsb
pop
xchg
sub
push
sbb
js
cmpsb
cmp
iret
scas
inc
push
mov
test
push
mov
jb
test
jecxz
xchg
cmp
ds
pop
sarb
cld
addr16
and
mov
pushf
xor
testb
pop
jnp
xor
push
sti
arpl
js
sub
out
inc
fldenv
out
lds
inc
pop
sbb
mov
sub
repz
sbb
push
cmp
sbb
repnz
and
es
dec
push
mov
lds
test
out
icebp
repz
sub
add
repnz
dec
sbb
and
dec
sbb
gs
dec
cmp
popl
bound
rolb
xchg
mov
or
bound
sub
insl
add
mov
lcall
fstl
sbb
icebp
mov
bnd
popa
and
out
xchg
iret
pushf
roll
call
lock
imul
rclb
cmpsl
ficoms
push
lds
ret
mov
inc
xchg
ret
jb
add
shl
mov
add
or
mov
sbbl
lret
xor
xor
cmc
and
sbb
push
nop
mov
movsl
repz
cmp
movsb
movsl
xor
lds
jg
and
lds
stc
fistpl
mov
jmp
jmp
mov
cmp
cmpsb
pop
inc
fs
cs
lret
frstor
and
inc
jae
mov
insb
testl
mov
ret
fsubl
mov
or
jp
pushf
shlb
lock
jle
sar
scas
pop
scas
inc
push
js
fcmovb
popa
mov
mov
xchg
cld
outsl
out
out
aam
divb
adc
mov
iret
data16
adc
ljmp
test
jnp
andb
xchg
mov
lods
pushf
push
pop
push
jl
fsts
std
scas
and
in
addr16
adc
mov
mov
jb
jecxz
hlt
je
push
out
pop
std
scas
cli
xchg
loope
out
outsl
lahf
ret
std
xchg
lock
loopne
add
add
pop
icebp
fcmovb
inc
or
mov
mov
mov
cmp
leave
push
xor
cmp
sbb
xchg
dec
daa
imul
xchg
adc
test
adc
pop
mov
xchg
out
shrl
rorb
jmp
aad
popa
pop
in
aas
les
xor
ja
nop
imul
adc
pop
leave
cmpsl
enter
in
add
jmp
mov
sbb
pop
cld
inc
mov
push
cmp
shll
popa
pop
loop
stos
stc
mov
imul
pop
mov
div
data16
cld
sbb
add
scas
mov
dec
jb
cmp
ret
pop
aaa
xchg
xchg
cwtl
mov
sbb
movsb
jns
xor
fwait
pop
xchg
cmc
rcrl
insb
mov
mov
popf
out
xchg
ficomps
adc
adc
aas
or
jo
jg
cs
js
mov
std
mov
cmpsb
inc
mov
lods
mov
push
subb
rorl
push
cmpsl
push
andl
xchg
mov
and
add
sub
rolb
xchg
jle
fstpl
out
xchg
sub
or
and
cmp
data16
das
loop
dec
xchg
shl
fsubs
inc
hlt
icebp
sub
mov
fiaddl
mov
cltd
sbb
mov
mov
arpl
mov
add
out
out
movsb
mov
pop
imul
popa
insl
jg
xorl
stc
lret
cmp
insb
rsqrtps
mov
hlt
ds
inc
es
stos
ret
adc
dec
sub
mov
fidivs
push
and
fsubl
mov
dec
dec
xor
movsl
dec
dec
fadds
cld
imull
mov
pop
ret
add
adc
xor
jnp
cmp
push
hlt
mov
mov
scas
pop
gs
and
sbb
popf
push
jmp
jg
lods
sbb
xchg
xor
xchg
cmp
sti
insl
mov
mov
lods
lock
xchg
pop
notb
sti
and
ret
push
sbb
lock
inc
xlat
rorb
mov
add
jo
movsl
cmp
xchg
inc
fadd
shlb
cld
repnz
in
push
xchg
stc
or
push
mov
adc
cmp
inc
sbb
dec
mov
mov
jbe
jle
add
push
ss
cmp
jne
mov
cli
popa
sahf
sbb
xor
cmp
jmp
mov
mov
aas
add
cmpsb
xchg
fsubrs
push
pushf
push
imul
mov
rcrb
fnstsw
add
data16
ljmp
repz
negb
stos
lretw
jl
push
testw
push
roll
xchg
jnp
aam
mov
jae
or
mov
push
ret
ja
push
addb
lds
push
loope
lds
addr16
pop
inc
pop
cmpsl
xchg
mov
sub
add
in
fsubr
pop
sub
push
sbb
das
in
push
pop
push
adc
push
xor
daa
push
push
or
lcall
fdivl
movsl
out
xchg
les
jae
cmp
jns
pop
xor
test
and
lds
sarb
cmpsb
imul
jl
stos
pushf
rcll
iret
sbb
sub
out
push
push
inc
ljmp
inc
fcomi
jmp
orb
pop
add
sub
bound
lret
mov
inc
fnsave
sub
lods
out
popa
into
stc
mov
and
fsubr
ds
or
xor
sbb
jae
out
test
call
mov
sbb
jno
fwait
push
jbe
pushf
push
clc
fs
pop
lods
sub
scas
and
sbb
js
add
push
dec
pop
popf
inc
lahf
jns
stc
xor
ficoms
call
pop
stos
inc
mov
cmp
stc
and
and
test
mov
lds
sub
add
sbb
out
in
mov
jns
out
cmp
clc
in
mov
test
sbb
sub
out
mov
sub
addr16
mov
loop
jle
arpl
adc
push
mov
pop
lretw
or
out
pop
inc
push
jne
jle
push
pop
pop
leave
mov
jae
push
add
mov
push
xchg
sub
inc
lds
cli
xchg
cs
mov
bound
test
shlb
mov
inc
scas
xchg
ret
rcrl
pop
std
out
jbe
rol
and
repnz
xchg
out
cli
lods
inc
sub
insl
notl
adc
cs
pop
repz
repz
pop
jns
lods
ret
and
insl
mulb
pop
loop
xor
or
push
cmc
mov
cmpsb
push
fdivs
xlat
arpl
sbb
andl
push
xchg
mov
arpl
cmpsl
flds
xor
aas
repnz
mov
jns
es
fsubrs
lds
mulb
cmp
xchg
out
inc
fldenv
sti
pop
adc
ja
push
test
fcmovb
add
popa
cwtl
pop
cmc
jle
shl
and
mov
mov
lret
or
mov
mov
fistpll
jne
adc
xlat
orb
pop
notl
dec
adc
mov
xchg
cmp
or
and
mov
cmpsb
outsl
xchg
or
adc
lods
lea
xor
sub
test
movsl
imul
or
pusha
or
outsl
dec
rclb
xor
insl
into
add
mov
je
sbb
xchg
inc
xor
shlb
test
mov
out
pop
ret
pop
nop
adc
sub
and
aaa
jno
stc
cmp
or
push
pop
cmp
clc
cmp
cmp
nop
test
or
adc
push
es
xor
std
inc
jne
xchg
adc
xor
aaa
adc
and
dec
fs
push
pop
int
jg,pn
jl
mov
mov
mov
mov
sbb
inc
mov
xchg
mov
and
out
movsl
sbb
cmp
jnp
or
pop
mov
mov
jle
lods
rorl
xlat
adc
push
or
stc
jnp
xchg
dec
popa
mov
sbb
push
xchg
pop
push
lret
call
mov
mov
cli
jg
mov
adc
inc
dec
dec
pop
or
xchg
cwtl
jno
dec
loope
sbb
call
f2xm1
xchg
dec
or
je
imul
add
mov
fcompl
in
rcll
mov
pop
repz
fnstsw
leave
or
ds
xor
pop
movsl
mov
xlat
xorb
rcrl
lcall
and
dec
aad
jp
cmp
xchg
jg
icebp
or
and
add
mov
outsl
xor
scas
inc
jbe
push
lods
cmpsb
dec
aam
jnp
inc
imul
inc
jnp
test
arpl
popf
mov
xlat
imulb
lds
mov
xchg
js
sbb
packsswb
inc
inc
add
loope
pop
inc
jne
jmp
repz
mov
mov
stc
dec
in
stc
adc
repz
mov
fnstenv
lods
mov
xchg
mov
cmc
sbbl
add
imul
shll
bound
pushf
aad
aas
mov
and
sbb
inc
fdivrp
cmp
std
inc
lret
or
cld
xor
adc
in
hlt
mov
out
pop
repz
sbb
into
mov
xchg
add
ja
mov
adc
imul
cli
test
cld
and
xor
adc
daa
aad
mov
lods
push
call
and
mov
xchg
adc
mov
push
mov
or
mov
add
pop
xor
les
cltd
mov
sarl
pop
movsb
mov
int3
dec
push
test
push
mov
jmp
call
flds
or
mov
sbb
rol
sub
xor
loope
lock
pop
test
xchg
pop
mov
mov
ja
mov
inc
hlt
mov
mov
push
movsl
xchg
test
cmpl
adc
push
lcall
jne
test
ss
sbb
loope
scas
mov
jle
filds
sub
out
cmp
push
sbb
popa
sbb
xchg
cmpl
loope
inc
push
pop
mov
arpl
loop
cmc
adc
xchg
sarl
out
int
movl
fistl
cmpsl
out
in
insl
cs
add
popa
dec
inc
rorb
jge
pop
push
inc
xor
xchg
outsb
push
mov
sbb
xchg
inc
push
pushf
pop
jl
fcomps
orl
imul
adc
add
scas
aas
sub
cltd
sbb
cmpsb
es
add
mov
data16
mov
sub
add
add
or
and
subl
scas
loope
push
push
pop
inc
repnz
sbb
pop
sbb
aas
mov
mov
or
xchg
imul
cmpsb
repnz
mov
mov
add
xchg
sub
mov
aas
mov
xchg
faddl
add
and
scas
push
sub
pop
jbe
mov
mov
rorb
outsb
push
cli
scas
push
push
insl
pop
in
fmul
sub
ds
adc
das
push
repnz
mov
mov
mov
xor
out
es
sbb
pop
loope
idivl
js
sub
or
mov
sub
mov
loope
lea
cmp
fnstsw
fwait
mov
sub
jne
pop
scas
add
nop
leave
sahf
out
xchg
pusha
add
inc
pusha
sub
mov
stc
aaa
mov
xchg
pop
cld
das
data16
cmp
pop
mov
arpl
adcl
add
cld
adc
fsubs
push
lock
xor
rol
push
add
pop
lds
add
and
jmp
push
ljmp
add
inc
xlat
mov
push
cmpsb
xchg
add
xchg
outsb
add
mov
testl
dec
lret
movsb
cmp
and
dec
enter
lea
sarb
les
adc
popl
sahf
shlb
popf
mov
jmp
add
out
std
scas
rclb
ja
mov
sub
jno
xchg
lcall
adc
ret
icebp
add
addr16
mov
clc
mov
test
lods
loop
std
or
jns
imul
test
push
or
sub
or
iret
aaa
xorb
and
push
dec
sub
mov
pop
pop
mov
sbb
pop
test
jne
sbb
fcoms
mov
stos
test
repnz
ljmp
outsb
negb
inc
movsb
fistpl
inc
scas
mov
dec
data16
sub
pop
dec
fsubs
jp
jl
ret
jmp
insb
loop
testb
loope
mov
add
xor
out
push
ljmp
sub
pop
jp
jecxz
xor
sbb
inc
adcl
dec
shll
jo
cltd
xlat
lods
lret
ja
addb
sub
xchg
data16
mov
pusha
test
das
mov
sub
out
pushf
bnd
std
mov
scas
call
lods
out
jecxz
jg
cmp
mov
negl
mov
and
push
enter
sub
clc
pop
push
and
dec
leave
pop
neg
imul
ret
cltd
sbb
fisubrs
pop
repz
outsl
cmp
pop
push
ret
pusha
pop
fcomps
cmpsb
mov
jmp
scas
daa
push
loope
or
or
xrelease
in
pop
fwait
aam
jb
subl
stc
nop
sbb
shrb
cmp
scas
insb
sub
xchg
int3
mov
fists
adc
sub
add
jno
and
push
test
jmp
movl
cmp
outsb
lods
inc
mov
ror
cli
add
sbb
inc
in
xchg
adc
xchg
leave
fstps
jge
or
repnz
shrb
icebp
xor
dec
repnz
and
loop
sub
gs
or
dec
inc
sti
inc
cmpsl
sub
setle
js
shrl
jmp
imul
adc
jmp
into
aam
jmp
sbb
lods
inc
ficoml
cld
aam
rolb
mov
adc
jge
xchg
add
xchg
xlat
cmp
imul
push
pushf
mov
negb
inc
into
adc
bound
mov
mov
or
dec
arpl
addr16
fwait
movsb
data16
pop
adc
ds
scas
ss
dec
push
push
sub
sarl
jno
sub
adc
ret
push
inc
fidivrl
in
lcall
pop
xchg
scas
fldl
iret
jmp
data16
arpl
push
jbe
xchg
sub
xchg
ret
ffreep
mov
gs
add
jae
cmc
pop
stos
xchg
outsl
push
ja
jnp
popa
imul
out
in
rorb
dec
push
add
sti
mov
arpl
fcoms
mov
adc
push
out
jnp
push
push
jle
jl
js
jb
int
fiaddl
es
sbb
jno
aas
dec
lcall
jecxz
push
jecxz
sub
xlat
imul
rorb
and
shlb
xchg
push
outsb
lods
xor
pop
or
sub
sarl
int
dec
lock
cmp
stc
jl
and
cmp
repnz
mov
repnz
jl
cmpsb
push
in
lods
adc
add
jns
test
dec
loope
inc
ss
in
aam
xchg
mov
push
dec
loope
dec
or
gs
sub
cmp
mov
stos
add
aam
mov
cs
pop
nop
sbb
push
pop
imul
jbe
inc
test
mov
stos
mov
xchg
pop
imul
in
test
or
mov
popf
push
sub
cltd
out
aam
inc
packuswb
cs
int3
push
in
pop
pusha
jo
push
mov
mov
jbe
jae
xor
imul
xorl
xchg
sub
sub
mov
dec
out
into
xor
mov
dec
or
jno
not
adcb
rorb
dec
fidivl
and
jne
leave
pop
lods
sub
movsl
int
inc
push
popf
repz
scas
imul
jae
xchg
cld
cltd
mov
xor
dec
dec
movsb
mov
sbb
pop
js
int
add
dec
pop
lret
clc
hlt
js
jle
jbe
sti
pop
les
add
inc
in
loop
jo
int
addr16
add
fs
jbe
iret
iret
je
sbb
pop
lods
popa
or
mov
xor
jne
cwtl
test
add
imul
jb
fnstcw
shr
xor
jmp
je
jnp
lds
add
and
xor
xchg
mov
xchg
int
mov
arpl
sbb
or
data16
fs
jmp
sub
adc
pop
fbstp
push
ljmp
stc
ret
inc
push
mov
cmp
mov
outsb
js
mov
movd
cltd
cmpsl
sbb
mov
mov
jg
push
imulb
add
inc
repz
pop
cmpsb
xor
lds
call
xor
cmp
jns
psrlq
xchg
push
mov
ds
jl
cli
jecxz
dec
pushf
scas
push
sub
int
fldln2
int3
xorl
lret
cmc
and
jl
sbb
dec
jne
inc
subl
push
xchg
dec
push
shl
int3
or
mov
xchg
xchg
push
out
jle
dec
mov
enter
inc
lods
mov
push
imul
mov
pop
cwtl
sub
push
mov
mov
xchg
and
dec
lahf
inc
jmp
imul
std
inc
xor
jg
cmp
pop
xchg
and
or
in
and
aaa
push
cmp
cmp
popf
push
ljmp
cmc
push
xchg
or
scas
incl
cmp
xor
movsb
stc
cmpsb
and
push
pop
scas
push
mov
cld
pushf
outsl
test
mov
shlb
jno
cltd
lods
pushf
xor
and
cmp
or
shl
mov
lret
xor
xchg
jmp
push
cld
pop
clc
xor
xchg
cmp
mov
mov
repnz
cmp
xor
movsl
cmpsl
lahf
jge
pop
leave
inc
mov
insb
fistps
add
out
dec
orb
inc
adc
ja
mov
mov
sub
sahf
or
es
test
mov
out
xchg
ljmp
sbb
xchg
jl
ret
and
ds
in
outsb
sbb
adc
mov
sub
mov
shlb
pop
xor
jecxz
hlt
sti
jbe
xor
divb
int
jo
data16
mov
lcall
loop
mov
iret
and
nop
add
lea
mov
sbb
ds
lods
sbb
mov
pop
fldt
lods
mov
pop
sahf
pushl
es
xchg
sub
stos
mov
scas
mov
mov
xor
ja
add
lds
inc
inc
pop
ja
dec
and
mov
dec
outsb
aas
inc
sbb
leave
pusha
pop
aas
out
xchg
mov
jp
pop
or
pop
cmpb
xchg
jge
lds
pop
movsl
push
andl
xor
sbb
aad
mov
fbstp
test
into
sti
cmpsb
cmp
cmpxchg
ficomps
push
wbinvd
std
pop
cmp
fldenv
xchg
mov
adc
fdivrl
xchg
popa
in
mov
sub
ret
iret
call
fcoml
push
jo
pop
xchg
jnp
out
cmpps
add
stos
inc
sub
jecxz
inc
jmp
aam
outsl
movb
jp
or
std
adc
push
out
jne
jbe
xor
ds
in
jae,pt
clc
movsb
pop
jecxz
or
mov
test
inc
push
insl
and
mov
ja
adc
lcall
jmp
test
nop
add
loop
add
jp
and
jnp
adc
int3
mov
fidivrs
pop
mov
inc
mov
pushf
loop
add
test
test
add
xor
sbb
pop
cs
dec
cmp
fldenv
loop
push
negl
aad
sbb
hlt
dec
sub
movsb
cmp
jp
mov
inc
cmp
mov
sbb
jmp
or
in
lock
mov
adc
sbb
push
or
scas
jno
sbb
daa
inc
mov
mov
int
cmp
popa
movsl
cmp
cwtl
or
cltd
adc
jae
jg
cmp
lds
pop
xchg
dec
fnop
mov
insb
dec
sub
rorb
jne
cwtl
orb
mov
add
push
xor
stc
push
stos
lods
ljmp
scas
ret
pop
outsl
xchg
pop
xchg
mov
add
dec
pop
sub
push
mov
ret
mov
les
mul
mov
mov
mov
mov
fists
inc
fmull
lods
aas
sbb
adc
or
push
js
lods
in
imul
into
sbb
mov
adc
sbbb
mov
popa
jns
lahf
mov
cltd
call
clc
lods
mov
push
enter
movsb
lods
or
and
shlb
inc
repz
adc
adc
adc
imulb
cmp
mov
pop
loop
cmpsl
mov
jecxz
testb
jecxz
icebp
fdivp
cmp
mov
cmp
mov
adc
sti
stos
mov
and
ds
icebp
scas
pusha
call
out
push
shll
dec
dec
filds
in
jb
out
ret
lea
test
push
cmp
pushf
lahf
stos
int
mov
arpl
add
test
test
mov
es
lods
inc
jo
mov
lds
outsb
adc
mov
hlt
stos
push
loopne
pushf
pop
or
popl
aaa
jmp
mov
push
xchg
out
xchg
mov
and
mov
dec
push
lods
or
sub
out
xchg
ljmp
stc
add
pop
lds
rclb
lret
das
inc
int
and
test
xor
in
das
icebp
cmp
mov
aam
lea
negl
fcompp
sbb
data16
cmp
add
das
jbe
jbe
mov
push
xlat
insb
sahf
lret
cmp
repz
rcll
faddl
push
je
push
fucomip
les
outsb
scas
pop
adc
push
mov
imul
jbe
out
sub
repnz
out
xchg
push
mov
inc
sbb
mov
mov
xchg
cmpsb
arpl
inc
mov
mov
outsl
sub
lret
imul
xchg
shrb
mov
not
mov
jns
idivl
add
mov
xchg
cs
adcb
dec
jecxz
and
mov
bound
into
fidivrs
ljmp
pop
or
fistpll
adc
push
sub
in
divl
lock
fs
dec
ja
cmpl
xchg
sub
rcll
cmp
mov
mov
cli
dec
inc
ficoms
push
pop
jne
mov
jg
adc
pop
shl
mov
js
hlt
cmc
pop
inc
mov
sub
int
cmpsb
mov
push
minps
inc
and
inc
add
jb
stos
lahf
and
fiaddl
sbb
sub
scas
inc
pop
lock
cmp
jnp
ja
pushfw
insl
add
mov
sub
repz
and
outsb
aas
jg
pop
adc
imul
push
xor
add
xchg
scas
ficoms
loope
hlt
cmp
inc
shll
iret
cmp
mov
imul
pop
jae
dec
mov
cmp
jp
inc
loop
mov
hlt
mov
dec
adc
push
mov
jecxz
in
lods
ret
pop
ficomps
jl
sti
cmc
cmp
repnz
mov
mov
into
pop
add
pop
mov
and
jge
mov
daa
xchg
add
or
cmpsl
jmp
inc
sub
mov
stos
mov
iret
fs
xchg
ja
jmp
sbb
sahf
aas
and
push
mov
push
lcall
cmpsb
cli
cltd
pop
cltd
push
es
notb
jge
pop
loopne
mov
sbb
xorb
mov
inc
mov
xchg
incb
xchg
ret
and
outsb
push
lods
add
pusha
mov
push
dec
or
sub
xchg
xor
enter
shll
loop
pop
cltd
dec
icebp
push
test
mov
in
idivl
dec
mov
testl
push
jmp
and
in
and
mov
rolb
sbb
push
popf
outsl
in
mov
xor
mov
mov
jbe
jns
and
cmp
sub
pop
out
inc
adc
mov
or
adc
subl
xor
xacquire
inc
cs
paddsw
push
aas
push
adc
into
pusha
fstpl
sbb
cld
movsl
icebp
stos
scas
push
mov
enter
imul
add
dec
adc
push
xchg
testl
sarb
jl
cmpsb
inc
dec
popf
fwait
mov
sub
inc
ss
test
dec
push
hlt
inc
push
mov
adc
out
sarb
xlat
mov
jne
test
jno
leave
sub
mov
out
or
lret
jge
imul
lods
jmp
stos
cwtl
test
push
push
cmp
lds
dec
mov
sub
sbb
dec
and
fs
sarb
lcall
aas
fsts
dec
faddl
cmpsb
fcmovbe
sub
in
sub
and
js
and
sub
add
popf
cmp
addl
adc
fldl
cmp
inc
inc
mov
jb
fiadds
mov
sub
lret
cmp
in
sar
jle
rclb
mov
mov
popf
mov
ficompl
mov
push
jp
mov
cmpsb
cmpsl
aas
loop
push
xor
dec
add
repz
jmp
or
cmp
jo
jo
sarl
aaa
cli
outsl
fwait
pop
sub
dec
mov
dec
subl
xor
bound
sub
sub
sub
aad
dec
jo
push
dec
mov
sbb
jne
lahf
xor
adc
mov
lret
add
xchg
xchg
sub
mov
xlat
movsb
mov
add
sarl
mul
lret
jo
add
dec
mov
mov
pop
inc
lret
aad
mov
xchg
mov
mov
sarl
aaa
cli
call
xchg
mov
fbld
mov
ret
cltd
out
call
outsb
pop
andl
lods
ljmp
in
and
xchg
adc
les
lret
mov
es
push
mov
test
test
and
jne
inc
lock
xor
mov
fidivs
incb
aam
lahf
xor
pop
imul
sub
imul
dec
mov
cmp
stos
push
scas
pop
xor
adc
mov
loopne
fmuls
mov
dec
pop
xchg
mov
out
cmpsl
cmp
adc
les
dec
mov
repz
inc
pusha
test
scas
stos
dec
js
fsubrp
mov
dec
shll
mov
sbb
test
cs
or
pop
das
mov
pusha
inc
dec
movsl
fldl
repz
cmp
jns
jle
ss
cmpsl
pop
adc
sbb
cmp
outsb
loopne
xchg
nop
jl
mov
fistpl
and
bound
cmp
xor
cld
stos
cmp
xor
cmp
xchg
das
in
cmp
push
repnz
andl
jbe
das
inc
mov
jle
rcrb
nop
and
out
cmpsl
lods
sbb
pop
insb
fwait
jecxz
xchg
add
enter
sahf
mov
psrlq
pop
mov
ficomps
sub
jne
std
sub
or
push
pusha
testl
jo
insl
mov
pop
insb
push
cmp
push
sub
pop
cs
xchg
pusha
daa
es
lret
lret
gs
in
mov
sarb
or
jle
sbb
adc
adc
movsl
icebp
lret
mov
imull
adc
in
jo
mov
inc
push
adc
xchg
dec
jmp
xor
add
leave
mov
jle
push
sbb
push
xor
das
xchg
sbb
mov
push
out
jne
push
xor
fstl
add
popa
out
push
pop
mov
filds
jbe
ds
or
into
adc
mov
cmp
imul
fsts
fimuls
popl
jo
fsubrl
adc
es
xor
pop
mov
cmpsl
fstl
into
xchg
and
fcmove
lods
jg
sti
into
fldenv
xor
nop
repz
mov
ret
repz
mov
out
jmp
test
mov
push
mov
xlat
cltd
xor
insl
xor
adc
mov
pop
fucomi
adc
daa
lods
fwait
xor
and
mov
dec
in
push
fsubs
popa
cmp
pushl
mov
fwait
lods
mov
push
out
mov
or
outsb
jns
adc
xchg
pop
xchg
lock
stos
mov
dec
ret
in
pushf
or
loop
ljmp
pop
and
adc
jnp
lcall
ja
sub
inc
adcb
sbbb
push
and
sub
ds
aad
push
ljmp
out
popa
dec
lods
inc
cld
and
aam
in
leave
pop
enter
mov
incb
das
in
test
lahf
sbb
xchg
xor
push
push
dec
xor
es
or
inc
jb
cld
dec
and
out
inc
jmp
push
mov
dec
pop
sub
cmp
pop
iret
bound
ss
jl,pt
xchg
adc
xchg
mov
jle
mov
xorl
push
sti
jbe
jb
inc
movsb
sbb
and
and
jp
cs
mov
imul
dec
icebp
les
les
imul
cmp
push
aaa
das
outsb
out
ds
pop
inc
rcll
arpl
inc
or
cld
lcall
cltd
lea
jbe
push
aas
daa
dec
out
sti
xchg
out
push
arpl
enter
xlat
mov
xchg
or
mov
fisttps
adc
mov
stc
pop
test
adc
arpl
out
pop
lds
mov
mov
imull
lods
inc
aaa
adc
dec
in
jg
cmp
xor
aaa
dec
mov
into
inc
fs
aad
sahf
scas
jmp
lret
mov
and
inc
xor
bound
sbb
xlat
push
lods
or
mov
imul
lock
pop
loopne
xchg
push
test
add
es
pop
jmp
cmc
int3
outsb
or
decl
das
sti
or
add
xor
inc
fcoms
xor
xor
cmp
popf
fistpll
mov
inc
out
test
sub
icebp
push
adc
adc
inc
inc
call
std
aad
pop
repnz
imul
adc
movb
lds
divl
or
int
or
int3
and
adc
imul
lahf
mov
hlt
mov
mov
dec
ljmp
xor
call
sbb
jnp
arpl
push
xchg
xor
mulb
ljmp
loopne
inc
xchg
fdivrs
rorb
mov
or
stos
jmp
push
or
mov
sbb
mov
and
xchg
gs
jb
in
jp
xchg
sbb
cltd
jbe
inc
in
pop
mov
cmpl
jg
jno
insl
adc
stc
hlt
jp
test
or
sbb
add
shll
cmpsl
ja
or
push
lret
inc
jl
hlt
and
push
jae
mov
aad
sub
mov
cmpsb
popf
aas
out
or
nop
mov
push
pop
scas
mov
push
jmp
ds
pop
pushf
pop
xchg
stos
mov
mov
mov
rep
stos
dec
cwtl
incl
insb
xor
inc
xlat
outsl
scas
imull
leave
pop
cmc
cli
jle
sbb
sbbb
dec
ja
cmc
mov
lret
out
data16
cmp
dec
mov
fwait
mov
or
mov
frstor
lds
push
lds
aaa
ljmp
call
lods
xchg
xchg
xchg
fidivrl
ljmp
loop
adc
inc
push
lock
pushf
dec
das
jns
insl
cmp
loopne
sbb
imul
add
stc
xchg
fimuls
mov
or
mov
adc
popf
je
js
test
andb
and
cld
push
xchg
stos
test
repz
jp
sub
mov
pushf
mov
stos
cmp
push
jecxz
mov
mov
mov
adc
mov
lods
mov
outsb
test
fisttpll
mov
mov
bnd
ljmp
jb
xor
pop
mov
xchg
pop
int
add
push
test
and
or
mov
movsl
and
or
lahf
xor
rolb
push
hlt
pop
mov
pop
fs
xchg
gs
fs
shlb
je
xchg
aas
xor
mov
icebp
or
or
popa
add
xchg
and
call
lahf
adc
push
or
push
mov
std
gs
test
push
ret
cmpsb
xor
adc
jp
loopne
mov
nop
xor
imul
jp
imulb
sbb
lret
pop
mov
pusha
push
test
adc
jge
xor
call
sarl
repz
fdivs
add
lods
imul
push
jo
mov
pop
into
into
repnz
shll
pop
and
dec
loope
mov
xchg
loopne
lcall
and
mov
rorl
les
pop
loopne
test
cmpl
dec
leave
pop
dec
iret
adc
jb
cmpsl
pop
sti
jbe
dec
daa
gs
vrsqrtps
dec
insl
mov
hlt
xor
sub
xor
xchg
insb
aam
add
push
pop
cmpsl
loopne
adc
data16
sbb
loopne
shl
sbbb
repnz
ds
clc
insl
dec
popa
mov
dec
loop
aas
cmp
sbb
inc
inc
cmp
test
scas
jecxz
push
sbb
push
ret
outsb
sub
shll
push
and
dec
xchg
pusha
sub
jns
sarb
adc
mov
shr
aad
inc
popa
rol
mov
pop
inc
xlat
jecxz
call
push
ja
or
sbb
cld
mov
adc
jns
and
fnstenv
dec
add
jae
mov
push
pop
adc
mov
fnstsw
pop
dec
mov
xor
sahf
int
call
fcmovnu
and
mov
out
das
das
ret
icebp
cmp
outsb
push
mov
cmp
and
jbe
imul
outsl
add
faddl
aas
cmp
jmp
sub
mov
cmpsb
dec
shll
bound
mov
lea
mov
in
xchg
jmp
out
inc
ljmp
jno
xlat
cs
notb
mov
mov
pop
lea
xchg
lea
shll
mov
fsubp
jnp
pusha
push
sub
add
sbb
mov
ret
sub
and
dec
push
in
imul
mov
xor
cs
lcall
cmp
pop
je
sti
mov
iret
scas
push
sbb
mov
push
ds
aam
xchg
nop
enter
popf
push
mov
cltd
cwtl
or
inc
ljmp
fdiv
ss
dec
xor
in
insb
dec
iret
lret
pop
popf
xor
pop
int3
pop
add
pop
ret
into
lcall
lea
xor
sub
inc
and
fisttps
bound
cmp
insl
sbb
inc
fnstenv
pop
push
out
pop
adcb
mov
xchg
out
xor
xchg
int
out
das
push
cltd
hlt
adcl
pop
mov
mov
sbb
fisubrl
and
inc
cmp
loope
xor
fstpl
movsb
adc
mov
xor
shl
dec
mov
adc
daa
cmp
fildll
and
leave
jmp
les
add
fldcw
shrb
jns
aam
add
mov
fwait
adc
or
sbb
dec
jb
mov
enter
jno
stc
nop
fptan
rcl
mov
roll
xchg
call
test
shr
stc
test
dec
ss
movsl
pop
in
push
shl
out
lcall
stc
and
mov
popa
cmpsl
shl
std
cmp
loop
test
fst
out
or
sub
fwait
xchg
adc
lret
cmc
cmc
mov
int3
mov
divb
mov
aad
loopne
iret
jle
shrb
mov
or
xlat
cmp
stos
mulb
add
ja
aam
fidivs
sub
jge
and
push
aas
push
sbb
xchg
imul
rorl
in
aad
jge
fcomip
lea
jo
or
sbb
aaa
adc
lcall
jmp
int3
dec
mov
mov
pop
es
xchg
jne
imulb
pop
inc
xchg
popf
or
mov
adc
inc
fstp
or
fstpt
push
push
outsl
sbb
sub
das
jne
or
pop
mov
push
inc
aas
in
fldcw
inc
icebp
aam
jo
pushf
movsb
sub
adc
arpl
mov
out
push
imul
lret
popa
mov
push
lret
stos
xchg
add
inc
and
sbb
mov
inc
and
jmp
out
pop
movb
xchg
mov
ret
sub
data16
cmp
add
js
aam
leave
jecxz
mov
push
int3
pop
stos
mov
adc
subl
or
fidivrl
push
bound
mov
mov
and
ret
outsl
outsl
jecxz
xor
mov
adc
pushf
lret
jae
test
adc
stos
outsl
lds
movsb
cmp
into
enter
xchg
jo
addb
jnp
adc
in
mov
or
mov
std
dec
or
pusha
mov
stos
mov
mov
loope
jp
xor
cltd
pop
add
insb
sub
jne
jmp
mov
sub
jbe
mov
xor
sub
xchg
outsb
dec
xchg
outsl
pop
nop
cmp
cs
aam
mov
aad
mov
pop
popl
popf
in
push
stos
test
enter
jnp
es
aam
inc
push
out
js
repz
dec
mov
js
mov
lock
xor
repnz
cmpl
cmp
jecxz
pusha
imul
adc
xchg
shrb
in
pop
xor
insb
sub
xchg
pop
out
sub
pop
xchg
fiadds
mov
ficompl
push
xor
lcall
loopne
es
dec
lret
dec
or
sbb
jb
aaa
dec
pusha
imul
in
bound
out
cmpsl
loope
enter
dec
pop
mov
scas
push
mov
packuswb
lret
push
inc
rorl
or
adc
lock
jnp,pn
xor
and
jecxz,pt
cmpsl
mov
cltd
mov
arpl
out
cli
and
rcrl
pop
fbld
scas
pop
xor
bnd
into
and
js
les
pop
push
sbb
mov
or
pop
mov
test
test
jmp
cmc
pop
jp
sub
dec
mov
ret
cmpsb
cwtl
gs
pop
jg
lock
sbb
pushf
sbb
int
jno
jl
mov
rclb
in
loop
pop
sbb
int
imul
ljmp
xor
scas
adc
push
and
push
or
and
insl
gs
mov
addl
cmc
mov
pop
add
xor
xchg
insl
push
stos
cld
sub
push
cmpsl
icebp
shrd
das
adc
and
hlt
cmp
cld
xchg
mov
icebp
and
sbb
cld
push
cld
push
or
sbb
sub
in
and
add
jo
jmp
fidivl
jecxz
jb
lret
sub
pop
lods
das
or
jbe
cltd
mov
leave
add
push
mov
pusha
inc
adc
lods
jmp
fdivrs
mov
mov
ret
jno
mov
out
sbb
aad
aaa
mov
push
push
stos
xchg
jp
decb
cmpsb
mov
push
icebp
loope
add
adc
jb
rolb
cmpsb
adc
fmuls
pop
jne
arpl
scas
jns
adc
int3
or
pop
push
dec
shrl
inc
xchg
inc
fists
imul
adc
rcrl
pop
dec
sub
mov
hlt
mov
jmpw
xchg
adc
ret
insl
xor
popf
hlt
and
mov
jo
fwait
push
je
inc
adc
rcrl
xchg
sub
pusha
cmp
mov
cmp
dec
xchg
ficoml
sbb
or
hlt
xor
test
aad
ds
sbb
or
jns
ret
sbbl
or
repnz
inc
jge
outsb
scas
and
adc
jno
and
sbb
xchg
lds
mov
pop
repnz
jns
xchg
cmp
pop
scas
mov
cs
popa
xor
xor
xorb
lret
dec
movsl
mov
xchg
cmp
loopne
movsl
push
cli
aaa
fdivrl
xchg
mov
ret
dec
out
xchg
cmpsl
and
mov
mov
cmp
adc
xor
ss
sbb
jnp
gs
mov
cmpsb
scas
add
aaa
mov
gs
sbb
sbb
adc
int3
jmp
rcl
xchg
frstor
cwtl
fiaddl
aam
loopne
aad
fidivs
push
lods
pop
fsubrp
add
and
cmp
adc
push
fdivs
jp
int
push
and
in
mov
idivb
sbb
decb
repnz
xchg
xchg
dec
add
jbe
arpl
lret
lahf
cmp
push
xor
ss
inc
lds
test
cmp
lods
pop
movsl
push
xlat
pop
loopne
mov
add
int3
or
call
cmp
loopne
mov
or
imul
or
mov
cmp
loope
movsb
daa
add
mov
mov
aam
sub
arpl
xchg
addr16
test
jmp
repz
adc
sub
add
sub
pop
ds
jg
popa
jl
test
lods
das
jns
popf
rcrb
cmp
call
lea
push
xchg
mov
aaa
add
insb
clc
fdivl
push
fiaddl
sub
mov
sub
xchg
scas
out
pop
dec
movsl
ss
jns
mov
sub
insb
rol
pop
push
xchg
mov
dec
sub
mov
rcrb
cli
mov
stos
mov
clc
or
pop
mov
popa
xchg
cli
inc
cmp
sub
sub
out
loope
push
adc
out
sub
mov
sbb
jne
mov
in
fwait
outsb
adc
push
and
jno
inc
shlb
sbb
fwait
xor
mov
andb
in
mov
int
mov
xor
aad
mov
cmpsl
cmp
mov
in
or
pop
push
lahf
sarb
pop
sub
xchg
mov
sub
ss
dec
aaa
adc
mov
insb
jl
aas
pop
loopne
hlt
cmp
inc
daa
jg
ljmp
mov
push
hlt
aam
mov
xchg
pop
adc
push
mov
mov
pop
cmp
cmp
xor
push
sub
add
inc
xor
add
mov
cmpl
loope
xchg
adc
mull
jle
xor
adcb
stc
mov
aaa
das
xchg
xchg
cli
mov
lock
xor
or
inc
lea
aam
flds
fistl
adc
adc
fdivs
sub
dec
ficoml
or
outsb
jl
mov
adc
sub
scas
nop
push
and
adc
xchg
out
mov
in
js
loopne
cmp
hlt
mov
jo
xor
mov
into
cmc
nop
sbb
aas
gs
inc
imul
pop
sub
push
adc
je
cli
test
cltd
call
push
into
push
dec
sbb
cmp
jbe
mov
rcrb
push
push
sub
inc
and
jge
js
push
stc
add
inc
jecxz
sub
xchg
inc
mov
push
and
sarl
sbbb
shl
cld
daa
loop
push
sbb
fdivr
test
leave
lret
pusha
shlb
jmp
jbe
push
jne
imul
lcall
xchg
jae
dec
fisubrs
int3
mov
push
mov
xor
and
or
frstor
lret
xchg
cmp
test
sti
stos
movsl
inc
dec
mov
add
jmp
fbstp
push
jbe
iret
push
decl
lret
lds
pop
dec
xchg
mov
inc
insb
into
inc
and
lret
aam
jns
xchg
ljmp
call
pop
lods
xor
push
push
sahf
xor
pusha
inc
enter
dec
sbb
jbe
rcl
out
jmp
test
push
stos
pop
mov
js
xor
fucom
insl
shlb
pop
adc
inc
insb
or
mov
push
lods
push
in
aas
jo
mov
mov
jl
gs
shl
movsb
fists
sub
mov
or
lea
jp
push
cmpsb
xchg
pop
xchg
je
or
popf
pop
hlt
into
inc
lahf
arpl
lods
add
das
fidivrs
pop
fists
push
sti
xor
jecxz
stos
mov
cmc
jle
jle
xchg
pop
popa
addb
sub
pop
adc
shll
insl
lcall
sti
inc
push
cmp
jecxz
enter
sub
outsl
mov
mov
and
or
cltd
std
rol
ds
rcrl
adc
inc
ret
iret
lahf
pop
bound
out
push
nop
daa
inc
loop
je
jmp
cmp
or
add
dec
test
and
pop
sbb
pop
aam
movd
pop
mov
data16
cwtl
cmp
push
pop
push
in
call
sti
mov
xor
shlb
xchg
in
imul
push
movsl
fldt
scas
jb
add
je
out
push
xor
push
xchg
ss
xor
and
aaa
test
cli
xchg
pushf
cmc
test
je
icebp
cmpsb
js
jnp
add
dec
jnp
hlt
repnz
imul
jmp
sub
shl
dec
sti
or
aas
or
jecxz
pop
pop
leave
mov
dec
dec
cli
stos
and
adc
std
insl
leave
dec
mov
bound
popa
jmp
lea
mov
pop
push
jmp
mov
cmp
or
lods
sbb
fcomps
scas
loope
mov
lahf
mov
mov
cmp
sbb
sbb
mov
fcoml
std
push
imul
pop
xor
test
and
mov
pop
out
ja
bound
cmpsl
mov
fidivl
fiaddl
and
loop
icebp
adc
jmp
adc
stos
mov
or
in
dec
stos
inc
jge
loop
jle
clc
cmp
or
xor
dec
mov
pop
xchg
rol
pop
mov
loope
jg
sub
mov
jno
loopne
lcall
mul
sub
jg
mov
ret
jp
xchg
scas
pop
scas
cmpsb
cmp
and
mov
xchg
mov
rcl
jo
outsl
push
sbb
decb
mov
adc
insl
test
add
shl
fxch
mov
and
inc
test
flds
fucomip
pop
addr16
push
jge
xor
or
test
cmp
out
pop
pop
enter
pop
addl
dec
jbe
int3
dec
sbb
leave
je
insb
scas
push
lcall
pusha
sbb
test
mov
push
push
dec
adc
mov
fidivs
into
iret
in
sahf
xchg
dec
int3
lret
jno
add
data16
dec
out
fs
mov
bound
mov
aad
push
push
nop
lock
and
popa
push
icebp
push
adc
js
adc
cmpsl
ds
jl
jb
outsl
xchg
xor
ds
xchg
insl
in
loopne
jl
or
addb
dec
dec
lock
add
aas
inc
shrb
mov
fdivrl
filds
cld
outsb
mov
adc
aas
push
adc
xor
leave
leave
out
push
ljmp
mov
inc
bound
fdivs
add
into
add
xchg
push
adc
pinsrw
loope
ja
xchg
dec
in
jl
lea
mov
movsb
sub
clc
xor
push
inc
adc
cmovne
pop
lods
adc
cmp
and
insb
shll
xchg
vfnmsubps
fbld
cpuid
jb
pop
xor
sub
jp
xchg
nop
loop
fisttpl
xchg
dec
mov
pusha
mov
movsl
or
jg
in
sub
xor
int3
cmp
adc
mov
scas
mov
mov
loop
jge
js
cmp
mov
and
hlt
std
cmpsl
jbe
mov
es
lret
mov
xchg
dec
ss
mov
push
or
pop
or
rorb
pop
dec
popa
aam
sbbb
shll
in
out
adc
aaa
cmc
int3
ss
cs
dec
jbe
test
pop
mov
fsubrl
imul
stos
fwait
ret
ror
lret
mov
and
cltd
cmpsl
jmp
jbe
lahf
aas
rcll
adc
fbld
popa
lahf
je
jecxz
xor
in
push
in
adc
leave
outsb
sbbl
cmp
movsl
cmp
aas
add
pop
pop
or
cmpsb
loope
mov
dec
sub
mov
aam
inc
and
lods
push
mov
inc
into
loop
or
les
repz
hlt
xor
outsl
test
cmc
dec
pop
pop
pop
mov
and
add
dec
rclb
mov
and
inc
imul
mov
add
push
push
xlat
pop
stc
dec
xchg
pop
push
in
in
scas
orl
out
ficoml
or
cmp
mov
fistpl
mov
xlat
adc
stos
xchg
jg
mov
sub
aad
rcrb
sbb
jns
cmp
imul
lahf
stc
aas
jae
cmp
idivl
in
inc
in
inc
dec
xor
cwtd
hlt
sub
and
das
pop
mov
cwtl
stos
test
mov
xor
jl
adc
add
test
inc
and
mov
dec
popa
cmpsb
mov
je
sbb
rclb
mull
movsl
fistps
int3
pop
sub
cmp
xor
in
inc
lds
js
enter
leave
loopne
sbb
nop
or
mov
mov
inc
jecxz
or
and
inc
cmp
mov
ja
int
or
xor
gs
inc
adc
flds
xor
flds
cmp
push
push
addb
jns
fsubrs
rolb
xor
mov
sub
hlt
cwtl
in
xchg
sti
pop
pop
daa
hlt
lods
shrb
inc
add
cmp
mov
cli
test
add
cs
adc
outsb
xchg
adc
mov
pop
dec
bound
mov
adc
data16
sub
cwtl
stc
xor
das
push
mov
movsl
sbb
push
sahf
or
fs
movsl
dec
and
arpl
cli
push
adc
fwait
movsb
cmp
in
cmp
icebp
push
pop
and
dec
pop
lret
inc
inc
int3
xchg
pop
xchg
dec
mov
lds
aas
xchg
mov
push
movsl
cmp
xchg
sbb
dec
mov
bound
js
sbb
sti
mov
add
mov
sbb
jp
or
push
mov
push
fdivrp
fcomps
cmp
popa
loopne
shll
push
adc
int3
adc
jnp
lcall
enter
scas
popf
xor
cwtl
xchg
cpuid
xor
pop
ja
add
jmp
mov
orb
ss
movsl
ret
insl
mov
sbb
push
stos
jbe
roll
mov
outsb
mov
loopne
mov
sar
mov
rcl
leave
xchg
scas
iret
movaps
sub
adc
sti
pop
stos
rorb
in
popf
enter
xlat
outsb
and
inc
inc
iret
mov
out
int
sti
arpl
lea
fnsave
ret
sub
loopne
mov
mov
iret
pop
pop
mov
adc
int3
cwtl
dec
insb
pushl
enter
xchg
mov
push
sbb
test
add
pop
aas
cltd
mov
out
cmp
mov
fcoms
jno
xchg
mov
rcrb
out
xchg
sbbl
xor
mov
push
pop
mov
lds
fisubs
push
jle
cmp
in
inc
mov
fwait
mov
fmuls
mov
mov
repz
aad
in
fwait
xchg
adc
pop
mov
pop
xor
inc
push
xor
inc
cmp
sbb
pop
ficoms
sub
inc
sti
gs
jo
or
fucomip
outsb
addr16
test
sbb
cmp
pop
flds
or
inc
push
mov
int3
fdivr
xchg
inc
imul
xchg
adc
jbe
cs
mov
pop
shll
fimuls
mov
scas
ja
loope
inc
push
xchg
out
mov
fsubrs
xchg
daa
out
xchg
lds
xor
in
xor
push
inc
call
push
adc
faddl
rolb
cmp
outsl
out
and
mov
push
push
and
int3
lret
in
std
jae
inc
push
sbb
aaa
loop
inc
in
push
je
dec
pop
jbe
stos
inc
int
rolw
jl
cmp
inc
out
add
xor
lods
test
mov
shll
stc
out
lahf
push
or
mov
aad
xor
and
mov
aad
mov
mov
mov
bound
mov
jmp
imul
pop
xchg
ja
dec
ret
push
ret
call
or
enter
inc
mov
ret
enter
loop
pop
ret
aaa
cmpsb
enter
pop
cmpsb
enter
daa
ljmp
sbb
jae
daa
in
test
jmp
pusha
mov
adc
dec
bound
daa
insl
cmovbe
pop
xor
scas
mov
sarb
andb
lods
loop
jl
dec
ret
inc
push
cmc
inc
xor
push
lods
ljmp
pushf
and
mov
shrl
psrld
push
scas
cmp
imul
adc
imul
adc
scas
cmpsl
or
shrb
les
or
fcoms
mov
fwait
inc
dec
fucomip
je
inc
inc
mov
fidivrl
inc
outsb
stc
pop
cli
inc
or
mov
mov
inc
sti
nop
push
imul
out
arpl
icebp
arpl
push
pop
ljmp
les
cld
or
jmp
addl
shlb
loop
popf
sub
rclb
xchg
testl
sub
and
mov
or
cmp
imul
cmp
jae
dec
sbb
push
aas
gs
xchg
mov
lock
jg
mov
mov
enter
pop
shll
jbe
in
mov
cmp
sbbb
pop
jl
jecxz
xor
mov
insb
negb
or
ret
psubsb
add
inc
or
mov
rol
pop
add
or
cmpsl
popf
xor
out
xchg
les
cmp
bt
imul
mov
mov
push
add
addr16
dec
sbb
shll
sub
inc
aas
in
push
add
xchg
shll
push
mov
sub
and
pushf
dec
cs
gs
mov
push
mov
leave
fistl
in
or
fdivrl
push
addr16
jmp
jbe
mov
aaa
fs
cmp
mov
out
outsl
pushf
xchg
shlb
xchg
es
scas
mov
clc
cmp
dec
mov
jb
jp
adc
cltd
std
push
mov
outsl
jnp
jae
in
cmpb
or
push
mov
jp
xor
fwait
movsl
cli
inc
int
aam
xchg
adc
dec
dec
sbb
or
jge
ret
call
aam
pop
xchg
pop
jmp
std
test
mov
jno
xchg
out
jmp
mov
mov
or
ret
push
fbstp
xor
bound
ja
popf
sbb
mov
outsb
inc
dec
mov
xchg
out
stos
loop
icebp
inc
jecxz
xlat
cmp
cmp
mov
orb
insl
movsl
push
jp
into
scas
stc
sbb
inc
pushf
cld
fwait
pop
and
or
mov
pop
push
fcmove
mov
dec
jle
and
sbb
iret
jmp
push
shll
push
cmp
sbbl
testl
int
pushl
xchg
lret
and
dec
adc
or
jns
into
movsl
jp
pusha
mov
inc
and
push
sbb
dec
fisttps
fsts
out
sbb
xchg
mov
add
ret
pop
jmp
lds
dec
push
jne
in
mov
jle
jmp
pop
inc
rcrb
push
sar
mov
pop
sbb
mov
jmp
daa
pop
dec
ret
pop
jp
stos
test
jbe
cwtl
lock
add
mov
enter
push
cmp
sbb
sbb
stos
insl
jge
sbb
mov
ja
mov
push
cmpsl
ja
fnstenv
cmpsb
or
lods
jp
xchg
fldenv
dec
cwtl
adc
fmul
shrl
or
in
aam
das
mov
mov
insl
in
decb
rcr
imul
sbb
mov
mov
data16
loop
jb
mov
jo
push
jb
pushf
xchg
xchg
call
cltd
or
adc
push
ljmp
inc
and
nop
add
pop
xor
fsubl
outsl
xchg
pop
fnsave
adc
ret
pop
insb
scas
cmc
stos
dec
xchg
data16
outsl
rorb
lcall
xchg
icebp
add
mov
pop
out
pop
pop
mov
pop
lahf
mov
mov
daa
cmpsb
pusha
push
and
or
lods
inc
jae
pop
push
rcrb
int3
mov
and
jo
inc
mov
insb
lret
fcompl
inc
pop
shlb
mov
lea
adcl
push
lods
mov
movsb
xor
xchg
xor
enter
jns
outsl
ret
or
dec
fs
loopne
call
jnp
fdivrs
add
imul
or
leave
mov
adc
aaa
pop
hlt
addr16
xor
scas
mov
jo
and
icebp
popf
xchg
negl
dec
aaa
out
cli
or
cmpsb
jle
xlat
push
adc
aas
aam
mov
lahf
jbe
inc
loopne
dec
fwait
fs
pushf
cmp
push
cmp
cmpl
push
sub
in
orb
shlb
inc
dec
clc
mov
sub
xor
dec
adcl
push
inc
data16
xor
in
pop
lds
or
enter
xchg
push
jo
xchg
mov
in
aad
mov
dec
sbb
mov
dec
pop
push
mov
jmp
jg
insl
pop
mov
push
xchg
aas
push
mov
dec
pop
lock
push
cmp
push
or
or
mov
pop
xor
filds
add
push
movsl
adc
jo
repnz
pop
sub
call
or
inc
mov
js
imul
push
mov
push
xchg
int
test
movsl
sub
mov
ret
pop
out
gs
push
sub
dec
je
test
rorl
mov
push
mov
cmp
clc
xchg
pop
cmpsl
push
hlt
gs
sub
stos
lret
push
test
cli
mov
push
movsl
in
pop
push
jl
fwait
inc
push
cmp
fdivl
popf
ss
in
clc
loope
mov
mov
xchg
imul
out
out
out
push
dec
aad
das
and
jge
cmp
fdivrp
sbb
movsb
pop
and
and
jne
loop
test
shr
xor
js
gs
cmp
jo
aam
pop
inc
sbb
dec
add
cmc
lods
in
xchg
xchg
je
mov
mov
les
push
hlt
xlat
mov
xor
popf
pop
std
les
mov
jno
jl
pop
stos
cmp
xchg
out
gs
pusha
mov
xchg
sbb
daa
inc
aaa
ret
adc
adc
cltd
psraw
ret
cld
popa
xchg
addr16
test
sub
mov
mov
mov
or
or
push
test
push
sahf
mov
fcoms
lods
int
inc
jl
fidivl
iret
mov
aad
push
es
pop
xor
addr16
int3
xchg
push
xor
gs
out
sbb
dec
fldt
sub
jge
dec
dec
cmc
jnp
jge
imul
aam
jno
jmp
into
roll
sub
enter
clc
or
je
and
dec
out
jg
dec
pushf
es
push
std
jecxz
jmp
pop
cli
inc
pop
or
dec
xchg
insb
iret
sbb
mov
sub
sub
sub
lret
lret
xchg
jmp
stos
lds
jns
testb
insb
pushf
test
imul
push
cmp
mov
lock
sti
ja
lock
insb
mov
test
mov
pop
pushf
cmp
int
push
aad
das
iret
outsl
and
push
std
lods
inc
jmp
push
mov
pop
inc
pop
loop
dec
jmp
iret
mov
pop
cmpsl
shrb
out
add
xchg
popl
sbb
jecxz
cmp
inc
and
xchg
inc
jmp
mov
ja
fwait
and
push
mov
rcrl
fdivrl
mov
outsl
push
xchg
push
mov
xchg
push
mov
jl
jns
ret
xchg
hlt
sub
adc
shll
add
and
cld
push
adc
push
insb
hlt
or
push
sub
adc
pop
inc
dec
ja
cmc
inc
fwait
sbb
in
jns
dec
fistpl
lea
mov
jae
and
scas
push
mov
inc
call
or
jne
push
xchg
cs
lods
aas
cmp
movsb
mov
mov
lcall
inc
xchg
je
push
popf
icebp
lods
mov
push
ljmp
inc
sub
jb
arpl
lock
push
int3
jg
cmp
leave
add
mov
cmp
xchg
lret
daa
mov
sub
loop
insl
call
pop
fnstenv
lock
insb
test
fwait
xor
dec
mov
mov
dec
jp
iret
and
adc
scas
xor
es
ds
add
mov
dec
push
adc
cmp
call
push
inc
mov
imul
loopne
jp
xor
xchg
pop
aam
mov
mov
adc
and
je
inc
lds
xchg
mov
cmpsl
xchg
sbb
je
jae
mov
aad
or
bnd
rcrb
test
enter
popa
or
pop
push
movsl
cmp
pop
data16
imull
fucomip
mov
jno
xchg
push
pop
shrl
cmp
rorl
mov
ja
lock
pop
scas
rorl
movb
adc
fnstsw
dec
adc
jno
inc
or
cmpl
add
stos
adc
lods
mov
ret
loop
push
or
aad
pop
or
ja
lods
pop
xor
lods
or
loop
int
shll
xor
mov
cmc
add
arpl
loope
vprotb
xlat
outsb
or
pushf
sbbb
cmc
xchg
cmp
ljmp
push
in
jbe
das
repnz
adc
inc
pop
adc
mov
clc
adc
xchg
mov
movsb
xchg
mov
adc
mov
out
cmp
test
out
sbb
xor
jecxz
fiadds
adc
popa
lea
mov
sahf
loope
sub
mov
adc
sar
aas
mov
sbb
std
mov
mov
and
mov
mov
std
pop
push
jmp
xor
lret
iret
das
push
dec
inc
xchg
int3
dec
lret
aas
xchg
xchg
jne
and
negb
rcll
scas
sbb
sbb
push
inc
mov
mov
dec
aad
cmc
outsb
cmp
sbb
jmp
insb
movsb
pop
scas
pop
lret
xchg
adc
enter
stos
sbb
sbb
imul
mov
jno
test
dec
cltd
test
jp
xchg
cmp
lds
mov
repnz
add
mov
push
mov
es
or
adc
in
pop
sub
cwtl
stos
in
lret
das
call
xchg
mov
test
jae
jae
fsubrs
inc
stc
and
xor
xchg
es
xor
pop
ds
sbbb
mov
adc
xchg
mov
mov
pushf
cli
gs
jbe
push
mov
mov
out
cmp
leave
mov
fists
cld
insl
pushf
scas
sahf
fstp
aas
cmp
cmp
mov
lock
mov
jl
scas
cli
xchg
fmul
push
in
mov
lahf
cmc
pmovmskb
jecxz
out
in
lret
clc
lcall
out
inc
negl
fistps
lea
xchg
add
or
sbb
push
jne
cmp
mov
jle
xchg
sub
xor
dec
lahf
fcomi
inc
mov
call
xor
mov
gs
and
cld
xchg
xor
pop
adc
mov
and
pop
xchg
cli
mov
sub
mov
inc
lock
lret
xor
test
test
cmpsl
fsubs
dec
xchg
cli
je
sub
xchg
jne
or
inc
cmpsb
orl
lret
jo
inc
rorl
mov
push
fists
sbb
popa
and
outsb
cli
xchg
lahf
in
test
sub
ljmp
arpl
push
loop
xor
cli
push
and
and
add
xchg
xchg
dec
push
ret
add
es
nop
dec
pop
insb
cmp
mov
lcall
sub
imul
jns
sarl
sub
enter
pushl
cmpps
or
cmp
lea
push
ljmp
call
jmp
or
lods
ljmp
call
add
nop
jo
mov
fnsave
push
outsb
jae
js
test
sbb
fcomi
cmp
rcrb
in
int
lods
adc
stc
scas
lcall
aam
xor
fadd
in
and
inc
dec
inc
sub
cmp
ficompl
add
bswap
scas
out
jae
and
add
arpl
mov
scas
loop
sub
xchg
and
ds
jo
pop
sahf
dec
xchg
lods
testl
cmpsb
nop
inc
enter
inc
push
call
xchg
iret
cmp
fxrstor
sahf
leave
test
xchg
sbb
pusha
push
push
or
pop
cmp
or
push
lods
int
push
fcom
pop
inc
xchg
mov
adc
in
jmp
sarb
sbb
in
mov
movsb
popa
aam
rorb
add
mov
mov
mov
xor
push
mov
movsb
push
cmp
enter
sub
inc
push
call
mov
or
sub
cwtl
cmpsb
outsl
and
jl
popf
sbb
and
jle
and
add
fs
icebp
das
mov
sbb
fwait
outsb
jne
sbb
jg
sbb
lods
je
cltd
pop
fidivs
pop
and
idivl
imul
test
push
push
or
mov
insb
roll
sub
movsb
test
inc
xor
jle
push
into
fisubl
and
ljmp
stos
in
sub
test
fs
xor
inc
push
shr
sti
or
andl
addb
in
cmpsb
lods
mov
into
ja
sbb
lea
cmp
xlat
outsb
lods
lret
cmc
dec
ja
insl
jg
test
mov
push
jae
mov
pop
pop
push
xchg
lods
imul
fsubrl
lea
out
insb
cli
lret
in
xor
jo
mov
or
jo
cwtl
dec
lret
xor
pop
loope
dec
adc
mov
pop
jb
or
rclb
fistpll
es
test
das
add
fs
push
daa
lods
scas
add
sbbb
ss
insb
push
xchg
push
jl
fstps
aam
jg
shrl
loopne
std
jne
adc
xor
in
outsl
in
cmpsl
mov
aad
add
ret
fnsave
insb
or
loop
sub
dec
mov
pop
inc
or
scas
out
mov
mov
adc
sbb
pop
add
dec
pop
jmp
ficoml
mov
gs
mov
fdivrs
bound
imul
or
xchg
testb
scas
pop
cmp
mov
in
mov
sbb
enter
xor
pop
mulb
jo
leave
stos
lahf
out
add
shlb
jecxz
dec
push
sub
insl
test
mulb
add
jmp
mov
in
cli
pushf
ss
sbb
insl
adcb
stos
push
sub
add
mov
adc
dec
adc
stos
sahf
pop
lcall
loopne
out
loop
xchg
pop
dec
xor
push
aas
push
in
sbb
mov
cmpsb
inc
and
js
enter
sub
ss
mov
in
mov
mov
mov
xor
sbb
lcall
in
add
sub
push
cmpsl
mov
pop
out
jmp
orb
jb
pop
mov
je
mov
and
sahf
clc
push
outsl
lods
jo
jns
sti
popf
pop
call
nop
jb
sub
bnd
aaa
jb
push
xchg
inc
stos
xchg
ljmp
bound
aad
dec
mov
fldt
out
ss
mov
pop
daa
and
negl
xorb
add
pop
sahf
mov
pop
pop
mov
dec
mov
mov
dec
fwait
imul
mov
inc
shll
sub
popf
aaa
push
mov
sahf
xchg
pop
movsb
and
pop
hlt
adc
xchg
sub
push
dec
cmpsb
lock
in
mov
xor
dec
dec
ficoml
cmp
cwtl
dec
push
dec
int
ficomps
fimuls
mov
inc
push
mov
out
icebp
aaa
stos
mov
pop
or
in
decb
xchg
inc
mov
push
lock
xchg
mov
mov
jg
pop
mov
movsb
repnz
mov
xchg
inc
pop
dec
andb
insb
lods
inc
sahf
jns
sbb
mov
subl
dec
jb
mov
lock
les
arpl
into
fmull
test
cmp
test
jl
outsl
ret
jl
call
in
jnp
lcall
adc
lcall
popf
pusha
xorb
addl
ds
rcrb
or
xor
fcmovnb
sbb
stc
xchg
cmp
repnz
and
test
mov
and
faddp
adc
test
dec
cmpsb
mov
rcrl
cmp
shlb
icebp
cmp
fiadds
orb
inc
testl
in
add
imul
loopne
out
xchg
fs
push
or
xchg
pop
mov
cwtl
xor
xor
scas
xchg
mov
imul
inc
adc
stos
push
mov
and
sub
mov
pusha
data16
int
mov
mov
es
repnz
lret
into
inc
mov
mov
bound
jge
gs
xor
je
mov
in
push
jo
lods
cmpsb
outsb
into
fdivl
nop
out
dec
mov
pminub
frstor
mov
dec
or
xor
icebp
pusha
jl
mov
cli
out
outsl
or
ret
cli
inc
pop
jno
nop
and
and
xor
cmpsb
outsb
and
and
add
mov
pop
push
xlat
jge
xor
pop
or
lods
xor
sbb
and
cmp
dec
in
ss
xlat
je
aam
jl
fldt
popf
stos
dec
test
push
mov
pop
xchg
loopne
or
sub
testb
sti
inc
les
mov
and
sbb
cmp
push
subb
mov
mov
sbb
cmp
add
cmp
pop
mov
add
in
and
mov
cmp
sbb
pop
iret
data16
sahf
scas
hlt
es
lcall
push
xlat
jmp
pop
mov
rorl
ja
jae
ret
ficoml
pop
insl
jge
xchg
leave
push
xchg
jnp
outsb
xor
fbld
xor
or
aaa
loop
mov
add
lcall
in
fsubrs
fbld
sub
jmp
test
and
mov
loope
movsb
xchg
push
dec
jo
push
jbe
call
iret
cmp
test
pop
in
dec
jle
jp
inc
lods
mov
pop
jg
jns
aas
xor
jmp
push
jp
cmpb
cmp
in
mov
sub
add
adcl
movsl
pushf
sbb
jmp
push
xor
mov
or
mov
outsb
icebp
in
jecxz
das
mov
sarl
mov
and
movsl
lds
sahf
adc
or
xchg
pop
push
xchg
test
dec
nop
push
scas
jl
ljmp
push
jbe
xchg
mov
cld
hlt
mov
cmp
or
sub
mov
pop
repnz
sub
add
jns
inc
bound
int3
mov
in
mov
mov
insl
adc
lods
adc
mov
sbb
sti
test
adc
mov
ret
sbb
and
or
js
jp
adc
adc
outsb
and
movsb
xchg
ljmp
adc
mov
lcall
daa
add
jmp
sti
stos
test
xor
lds
rorl
cmp
std
aas
aas
dec
fwait
add
and
push
jmp
cmpsl
int
jo
cmp
aaa
imul
iret
nop
test
inc
and
xor
cmp
movsbl
sbb
out
loope
call
mov
dec
mov
in
fwait
inc
and
int3
or
jbe
and
scas
les
push
test
inc
fldcw
add
mov
lea
jecxz,pn
adc
add
shl
lea
xchg
outsl
hlt
cmc
add
sbb
lods
push
pop
add
and
and
ss
adc
inc
push
outsl
pop
out
adc
xchg
lret
jp
pop
pushf
addr16
and
mov
xchg
in
xchg
cmpsl
push
mov
cwtl
imul
test
mov
xchg
lock
jle
cmc
movsb
mov
aam
dec
fisubrl
or
xchg
sub
or
dec
arpl
lret
cld
icebp
lods
fisttpl
cli
icebp
mov
imul
cmp
mov
and
inc
pusha
dec
jno
push
mov
or
xchg
mov
push
mov
sbb
js
or
xor
gs
push
dec
xor
ljmp
lea
inc
mov
push
in
mov
jle
sbb
mov
lret
mov
je
pop
mov
outsl
mov
jo
int
ja
mov
xchg
jl
mov
hlt
push
cmpsb
mov
dec
lds
jnp
inc
push
pop
out
outsb
push
mov
leave
push
mov
jb
scas
or
ds
cwtl
in
test
sub
inc
cmpsl
xchg
pop
mov
cmpps
popa
and
pop
imul
cwtl
movsb
leave
and
out
adc
lock
xchg
xor
sub
add
jmp
sti
pop
and
inc
wrmsr
leave
jo
fldcw
push
push
ss
cmp
aas
add
hlt
fwait
pop
dec
out
fistps
orb
jae
sbb
pop
xor
cli
sub
mov
jae
iret
outsl
ss
mov
pop
xor
int
and
inc
andl
test
add
inc
out
loopne
addr16
sub
pop
shrb
ja
adc
es
test
mov
into
mov
mov
add
enter
out
pop
scas
xchg
jns
pop
in
or
add
stos
inc
int
test
push
and
push
jmp
adc
mov
outsb
mov
pop
outsb
sbb
or
jmp
in
stos
arpl
sbb
sub
mov
addr16
cmp
xor
rolb
je
add
pop
pop
repnz
cs
sbb
call
fistpll
iret
cs
dec
cmp
test
or
mov
jmp
or
mov
xchg
push
lret
mov
cmp
les
ljmp
push
pop
dec
aas
imul
xor
lret
gs
orl
add
insl
mov
adc
lcall
out
xchg
cwtl
add
enclu
mulb
add
movsl
mov
add
xor
dec
fiadds
and
inc
cmp
pop
mov
gs
sub
jnp
std
xor
sub
push
ret
jae
cmp
xor
hlt
repz
in
pushf
jb
mov
xchg
scas
push
inc
fidivrl
add
addr16
or
fs
in
xchg
xchg
push
js
sub
or
insl
in
adcb
in
jns
mov
in
xchg
mov
jl
dec
imul
and
cs
jo
out
movsl
imul
dec
aam
rcll
pop
mov
lahf
jb
cltd
and
jmp
call
daa
adc
xchg
inc
mov
cmpsl
rorl
std
in
dec
je
inc
jmp
cmp
dec
test
bound
es
jnp
jecxz
daa
loopne
mov
lahf
rorb
insb
inc
mov
push
popa
mov
lea
shrl
stos
and
in
xor
daa
scas
push
insl
aam
rcr
lret
xor
gs
or
mov
clc
sub
or
push
nop
sub
mov
cmp
xchg
icebp
mov
sarb
push
lods
add
pop
push
push
daa
loope
pop
cmpsl
inc
stc
or
decl
add
sarb
pop
out
sub
insb
in
jne
and
mov
cltd
dec
jecxz
cmpl
push
in
lods
xchg
push
and
inc
jae
jns
mov
insb
fisttpl
jp
and
push
push
mov
mov
scas
test
test
dec
jo
cmp
jecxz
mov
xchg
loope
adc
cmp
mov
mov
test
pop
push
mov
cs
fwait
repz
ss
in
adc
sbb
mov
in
cmp
xor
pop
fs
iret
mov
lods
and
inc
or
xor
call
or
sahf
gs
mov
pushf
cltd
outsl
repz
pop
add
jae
mov
mov
stc
ret
arpl
loop
int
cwtl
lret
dec
mov
pop
lret
subb
jmp
lea
mov
cmpsb
stos
das
out
sahf
fs
pop
cmp
shl
cmp
popf
xor
jp
pop
nop
popf
push
out
cltd
inc
rcl
xor
testl
nop
mov
lea
test
cmp
rclb
xchg
or
sub
adc
lods
jecxz
inc
cmp
pop
fs
adc
out
insb
or
push
pop
sahf
mov
pop
rcrb
popw
mov
adc
nop
pop
xor
sbb
mov
sub
outsb
mov
cs
mov
adc
sub
inc
sbb
jo
push
pop
push
mov
push
std
sbb
push
cmp
cmp
mov
test
dec
push
pop
jmp
jnp
cmp
out
mov
jae
mov
loopne
mov
or
sub
mov
cmp
dec
fcmovne
xor
andb
das
jle
adc
cmp
xor
mov
adc
repnz
lods
inc
int
mov
popf
jae
int3
fidivl
fcompl
les
sbb
cmp
add
lods
jbe
mov
and
adc
cli
push
fcmovu
pop
mov
mov
sbb
sub
sbb
pop
inc
lods
cmp
fldcw
sbb
in
subl
loop
mov
mov
xor
cli
pop
loopne
shld
push
in
ss
ret
pop
movsl
dec
das
roll
test
xchg
cli
test
cld
or
cmc
xchg
lcall
and
lds
xorl
mov
test
insb
add
aas
lea
inc
or
int
into
xchg
add
iret
xor
push
xchg
movb
sub
test
push
push
mov
jb
xor
ret
xor
ljmp
push
out
mov
outsb
inc
xchg
jne
xchg
js
mov
outsl
adc
mov
outsl
xlat
mov
idivb
test
dec
and
in
xchg
xchg
pop
xor
xchg
add
into
pusha
adc
jno
aaa
push
inc
rcrl
lods
adc
sbbl
add
aad
and
sbb
add
jmp
lock
sbbl
add
xlat
mov
xor
ja
adc
je
adc
inc
out
in
adc
outsb
into
ficompl
mov
js
fisubs
cmpsb
dec
jo
rcl
fsubrs
mov
mov
popf
stc
cmc
add
push
nop
mov
jne
mov
repnz
dec
lcall
jmp
in
lods
and
push
in
push
aas
jg
outsl
daa
test
mov
je
fdivrs
and
mov
cltd
xchg
pop
lret
push
rcl
jo
movsl
push
cmc
mov
pop
fs
sbb
cli
mov
aaa
mov
jge
cwtl
lods
inc
sbb
sub
lods
pop
repz
test
daa
dec
aad
and
jp
ret
sbb
clc
push
jge
cmpsb
leave
or
bound
mov
andl
divl
push
xchg
sbb
add
cmp
push
test
fstpt
or
mov
cmp
out
ret
push
pushf
push
mov
jg
and
xchg
xor
leave
pop
hlt
cli
cmpsb
ds
sbb
cmc
imul
lock
xchg
xchg
add
mov
cli
push
stos
in
fidivrl
call
xchg
sbb
mov
nop
cmp
sub
ljmp
and
das
dec
jne
aam
or
push
scas
pop
fnsave
jnp
mov
outsl
push
mov
inc
lea
mov
lods
sub
fimuls
int
in
inc
push
xchg
sahf
leave
jo
aas
xor
dec
pop
sbb
sbb
mov
add
xchg
cmp
mov
adc
jno
popf
int3
ffreep
sub
sahf
add
mov
mov
cmp
movsb
mov
rcll
insb
mov
mov
lock
jge
mov
add
out
lret
outsl
cmp
fcomps
mov
mov
pop
bound
push
cmpsl
int3
orl
and
jge
xchg
inc
and
outsl
shrl
js
jl
dec
sbb
dec
jo
mov
or
sub
add
loop
das
dec
push
pop
xchg
add
xchg
cmpsl
loopne
sbb
movsb
jae
bound
fsubl
xchg
ret
gs
jae
sub
iret
xchg
add
mov
jb
push
in
jge
pop
dec
sbb
mov
out
imul
outsb
mov
fdivl
push
pop
cwtl
stc
lret
mov
or
les
sbb
xchg
mov
dec
dec
mov
daa
out
fucom
mov
or
scas
pop
mov
push
in
ja
out
sub
add
mov
test
pop
add
mov
loop
push
shrl
jns
sub
mov
sbb
push
scas
inc
inc
mull
sbb
dec
rcr
jae
rorl
cmpsb
push
or
enter
gs
xor
stc
out
adc
sbb
cmp
aas
lods
fiaddl
or
mov
int
test
shr
xchg
loopne
sub
cs
inc
push
mov
lret
adc
lahf
jl
imul
cmp
push
dec
dec
push
xchg
xorl
and
push
adcl
push
push
pushf
xchg
aas
ret
cs
mov
and
xchg
lcall
leave
arpl
push
insb
test
mov
cltd
mov
aam
pop
movsb
je
leave
dec
pop
scas
ss
mov
mov
fsubp
movsl
mov
sbb
cmc
sbb
pop
fbld
xchg
adc
mov
cltd
clc
and
pop
sbb
cmp
mov
loope
push
mov
adc
cmp
push
movsb
mov
stos
pushf
fidivl
inc
jmp
sub
wbinvd
movsl
xor
sub
lahf
add
imulb
mov
mov
popa
sbbb
lcall
push
jbe
mov
xor
lds
arpl
js
sub
inc
cltd
adcl
sbb
lcall
mov
out
call
xor
mov
inc
or
push
sbb
movsb
pop
mov
xchg
sub
or
and
repnz
mov
lock
lods
ja
push
cmpsl
data16
xlat
jae
or
addb
cmp
xor
push
or
jb
ja
or
je
add
jle
mov
mov
jae
mov
mov
pop
rep
arpl
ljmp
imul
dec
mov
and
punpcklwd
push
ds
mov
fnsetpm(287
and
xchg
sbb
sbb
lahf
divb
arpl
and
adc
xor
xorl
lea
mov
or
subb
jl
or
push
scas
jg
push
popl
xor
pop
inc
xor
das
out
nop
daa
and
test
sub
mov
sarb
or
add
push
jae
and
leave
or
je
mov
sbb
fcomp
ja
in
lea
adcl
cmp
int3
stos
push
inc
push
xchg
sarb
ret
loop
fildll
pop
sbb
daa
xlat
sar
lea
imul
jb
test
into
xchg
cmp
cmp
mov
inc
scas
loopne
les
adc
pop
test
ja
mov
call
popa
ret
in
push
call
jno
xor
add
and
nop
jne
pop
sub
fsubrl
out
inc
pop
mov
dec
js
clc
sahf
aam
pop
push
add
jp
stos
out
das
and
popa
adc
or
addb
cmp
mov
std
pop
test
imul
sarb
inc
mov
imul
cltd
aaa
int3
and
mov
fmull
ficoms
inc
repnz
sub
sbb
xchg
movsb
or
pop
inc
dec
add
negb
call
lret
lods
push
std
inc
mov
negb
xchg
pop
push
adc
bound
jns
sbb
mov
loope
fldl
or
xchg
adcl
xchg
xor
mov
lea
xchg
mov
arpl
sub
lcall
push
sub
movsb
rol
dec
sbbl
cli
push
dec
rcr
mov
scas
mov
nop
iret
fsubrs
add
leave
pop
xchg
ret
lea
lock
sbb
pop
mov
std
imul
push
insl
sbb
and
dec
aas
ss
in
dec
lea
aas
jg
arpl
sub
adcb
in
stos
ds
push
lds
shl
xor
out
fninit
pop
and
sti
in
cs
pop
les
dec
add
mov
mov
xchg
add
pop
cs
xchg
pusha
fidivrs
dec
or
xor
int
dec
or
int3
or
jae
call
jbe
mov
imul
wbinvd
sub
popf
loope
in
dec
xchg
cmpsb
addr16
gs
mov
aaa
sbb
dec
pop
sti
xchg
cmp
cli
mov
das
pushf
ror
add
sar
dec
pop
inc
push
xor
bound
dec
cwtl
loopne
adc
mov
sbb
subb
js
arpl
xchg
xchg
jae
dec
int
dec
pop
push
out
push
cmp
or
pop
scas
inc
int
ljmp
xor
ds
sbb
aad
adc
lds
or
rorb
fisubrl
daa
jecxz
add
mov
or
clc
loop
cs
adcl
xchg
imul
sbb
xor
movsb
lret
xlat
outsb
or
test
mov
jmp
mov
in
aam
push
scas
test
or
mov
aad
std
inc
mov
cmp
dec
fistps
rcrl
sub
je
cs
jnp
mov
sbb
enter
fs
mov
xchg
loope
adc
negl
mov
fwait
in
insb
shlb
or
lods
mov
xchg
stos
dec
cmp
sub
loopne
popa
call
jb
xor
mov
nop
addps
inc
fnsave
xchg
xlat
pop
sbb
loope
cmc
jge
sub
inc
dec
fistps
cmp
sub
pop
xor
dec
fstpl
mov
jae
loop
cli
fucomi
sub
addr16
xor
bound
add
inc
xchg
inc
in
in
subl
or
adc
cwtl
imul
push
jo
push
pop
sub
mov
or
push
lock
pusha
bound
mov
out
fsubrp
add
adc
lea
dec
jecxz
pop
aad
or
cmp
daa
pop
stos
adc
out
cs
mov
addr16
jnp
pop
pop
cmp
jmp
dec
sbb
push
out
icebp
sbb
dec
pop
lds
lock
add
test
scas
stc
jg
jo
outsl
lret
test
mov
test
in
jbe
adc
aaa
aas
inc
enter
test
cmp
lahf
scas
mov
pop
and
cltd
inc
iret
iret
xor
jmp
in
pushf
insb
sub
mov
or
jo
call
mov
and
sarb
fcompl
call
push
pushf
cli
pop
sbb
pop
inc
jmp
jbe
push
arpl
std
jae
cld
sub
loope
pop
lock
popa
or
insl
sti
pop
jnp
or
fwait
mov
inc
enter
subl
stos
pop
mov
scas
je
push
mov
adc
xchg
mov
stos
mov
lods
pop
js
cmp
pop
loop
cltd
repz
shr
jns
inc
test
neg
out
pop
movb
jae
jp
inc
xor
cmp
lcall
and
lahf
mov
loope
std
push
orb
mov
mov
iret
xchg
mov
repz
in
das
bound
cmp
cmp
loopne
push
sbb
fcmovb
imul
in
das
pshufw
ja
mov
mov
test
mov
mov
shrb
pop
jne
pop
aas
sub
and
aad
cs
hlt
das
mov
xor
or
aas
aad
pop
mov
mov
cs
dec
lret
xlat
xorb
mov
scas
inc
pop
inc
lds
out
mov
fisubs
sbb
iret
cmp
pop
in
loope
imul
xchg
test
lret
xor
dec
cmpsb
aam
pop
sub
add
sbb
adc
mov
enter
xchg
int3
ret
adc
jp
outsb
ret
pop
lock
test
ja
push
ret
cld
hlt
jno
or
sub
xchg
movl
push
dec
cmpsb
jecxz
dec
out
les
lahf
inc
in
and
jmp
and
cmp
pop
insl
clc
test
addl
shr
sub
test
dec
jb
dec
push
mov
cld
mov
pop
ss
jle
dec
cld
xchg
and
test
mov
lret
cs
scas
mov
aam
xchg
ret
pop
adc
adc
movl
xor
lcall
mov
nop
pop
pop
sub
xlat
or
jmp
fidivl
mov
sbbl
xor
cmpsl
push
mov
test
pop
loope
jbe
cmc
mov
shr
and
pop
repz
xlat
repz
adc
mov
test
ds
insl
add
les
insb
fwait
mov
or
or
cmpsl
sub
xchg
sbb
arpl
push
sub
sarl
fistpl
addl
ljmp
cmpsl
sbb
push
mov
push
push
mov
cli
lret
enter
in
shlb
mov
out
test
arpl
sbb
ret
fildll
enter
jp
xchg
repz
lds
repz
or
cmp
fnstenv
lods
sahf
clc
cs
xchg
scas
mov
sbb
push
sub
cmp
push
dec
andl
xor
sahf
and
pop
lods
xchg
and
jge
iret
data16
lahf
rcr
or
mov
leave
imul
sub
imul
sbb
int
inc
push
push
idivb
loopne
out
lcall
cmc
dec
fistpl
scas
or
ss
out
mov
sbb
mov
pop
add
push
jp
je
cmp
and
pop
xlat
sbb
dec
jae
daa
movsb
ret
fwait
insl
mov
data16
adc
fprem
nop
fwait
jmp
lea
sub
add
sub
std
jae
mov
stos
mov
or
xchg
loop
sbb
jle
sbb
mov
add
mov
fimuls
les
cmc
mov
stc
nop
ss
dec
push
into
xchg
ffree
sbb
test
subl
mov
nop
daa
call
push
xor
sbb
cmp
cmp
scas
sbb
push
mov
leave
dec
test
inc
loop
ficompl
jp
pop
jmp
sbb
mov
push
cmp
pop
out
or
jle
xor
iret
xchg
sub
je
xor
mov
ja
jns
mov
out
je
lock
inc
mov
in
fldt
cmpsl
sarl
mov
jb
fdivl
loop
and
leave
aam
sar
dec
mov
and
shl
ja
or
pop
jg
in
jecxz
fcoml
fdivl
push
or
je
ja
or
aad
hlt
mov
repnz
loop
adc
gs
cmp
xchg
cmpb
movsb
dec
gs
imul
inc
jne
ljmp
lret
xor
mov
add
cmpsl
push
je
push
jp
jno
or
or
mov
dec
mov
insb
stos
aas
into
enter
sti
popf
mov
push
std
andb
pop
jb
outsl
loop
and
ret
cmp
pop
and
dec
push
mov
push
dec
lock
add
sbb
icebp
imul
or
loope
stos
je
aad
inc
leave
or
mov
inc
pushf
sbb
inc
xchg
jle
cli
ds
les
les
into
xchg
dec
ds
inc
sub
je
cmp
inc
push
ljmp
imul
in
jnp
mov
push
stc
pop
dec
fistpl
movsb
out
sub
cmp
sbb
xchg
mov
push
cltd
subb
pop
xor
test
movsb
out
xchg
out
xchg
insb
jo
int
xchg
dec
xchg
xchg
movsl
rclb
cmp
scas
lahf
hlt
push
jle
cld
outsl
dec
sbb
xchg
fidivrl
mov
push
outsb
loope
jp
imul
sbb
dec
stc
pop
mov
cmp
mov
int3
jge
movb
iret
into
faddl
stos
mov
jae
cltd
std
test
std
or
lea
mov
jge
inc
movsb
push
sub
mov
add
or
enter
fldcw
or
mov
cld
imul
dec
scas
jmp
add
cs
ret
pop
test
push
popf
loope
loope
or
jg
cmp
shll
xchg
mov
and
dec
push
xor
insb
and
lahf
pop
jbe
cs
lret
mull
push
xchg
sbb
dec
lea
loop
fcoms
cwtl
sbb
into
mov
xor
jecxz
in
push
cmp
pop
js
bound
adc
jl
decb
lret
fsubrs
mov
out
js
hlt
cmp
xor
mov
fbstp
cmpsb
adc
orb
mov
sub
cltd
xchg
in
adcl
mov
sub
adc
mov
pop
insl
cwtl
negl
cmp
ffree
push
movntq
mov
mov
cmp
dec
enter
insb
push
je
jno
loopne
mov
sub
inc
sub
psadbw
lods
orb
repz
inc
and
cwtl
shlb
jae
push
popf
out
outsl
xchg
es
xlat
mov
sbb
adc
sub
das
mov
int
jno
mov
push
sahf
jns
adc
dec
ret
inc
rclb
in
mov
sub
leave
pusha
cltd
nop
sbb
ret
shl
fdivs
inc
faddp
push
out
adc
je
xlat
mov
loop
or
xchg
dec
aad
sahf
and
push
mov
push
imul
out
lret
xchg
mov
loopne
clc
mov
dec
mov
mov
sub
xchg
nop
loope
push
inc
mov
jb
adc
jo
pop
stc
nop
mov
lret
subb
push
loopne
rol
fmull
scas
in
and
xchg
dec
lods
lea
pop
xor
jne
scas
mov
stos
dec
add
imull
bound
dec
sbb
aaa
int
pop
inc
ss
ret
leave
sbbl
push
mov
imul
xorl
mov
fldpi
enter
iret
or
sub
push
cmpsl
adc
dec
test
push
inc
xchg
sub
rorb
and
sub
jo
das
adc
pop
xor
jl
sbb
test
andl
and
stc
popf
mov
dec
xchg
jge
bound
lds
std
push
gs
push
outsb
mov
mov
std
or
mov
rcl
jl
sbb
es
mov
mov
pop
hlt
adc
imul
or
popa
enter
push
cli
fst
lock
mov
add
ds
leave
stc
je
outsb
imul
mov
lods
jns
mov
stos
iret
das
mov
mov
mov
pop
lock
xchg
xor
mov
scas
aad
fnsave
push
repz
jmp
dec
pop
fsubl
cmp
testl
inc
popf
ret
rcll
ret
mov
and
mov
xchg
dec
sub
mov
in
repz
daa
test
cmp
and
push
xchg
add
or
jns
cmpsb
jmp
cmp
cmp
jns
and
rcrb
pop
fldcw
test
push
ja
lcall
jae
mov
sahf
rol
and
mov
insb
mov
adc
cmp
mov
fbld
and
mov
xchg
jo
push
lock
mov
bound
aaa
sub
sub
mov
out
mov
dec
je
cmp
fldl
xchg
lock
mov
ss
enter
nop
dec
pop
push
out
divb
ret
mov
push
mov
cmp
scas
shrb
jb
shll
and
out
pop
ja
repz
out
scas
jecxz
loopne
rol
pop
cli
add
or
pop
fisubrl
in
adc
jg
fldenv
mov
dec
push
lcall
sahf
jp
mov
fildl
sub
lods
mov
mov
pushf
test
inc
ljmp
mov
fwait
mov
pextrw
mov
jle
lds
out
sbb
jmp
lods
jmp
sarl
rcrl
mov
fidivl
sarl
xor
imul
inc
dec
dec
xchg
adc
nop
dec
sub
and
mov
insb
mov
je
shll
sti
push
mov
lcall
cmpl
and
sahf
push
sbb
mov
push
xchg
int3
fdiv
aas
into
gs
jecxz
cli
in
dec
test
ljmp
xchg
movd
test
sbb
in
shr
adc
mov
xor
aad
loope
scas
shl
popa
jl
hlt
xor
popa
add
push
ljmp
jmp
lret
adc
sbb
push
pop
shrl
lcall
repz
jge
mov
int3
add
push
push
imul
or
pop
pop
sbb
jl
cmp
fdivs
jge
fwait
add
sub
cmp
push
es
dec
dec
aam
add
shll
xor
rcrb
adc
lods
lods
push
pop
adc
test
xor
loopne
sub
jne
clc
aaa
sub
test
push
sub
aaa
into
aam
gs
int3
outsl
mov
or
imul
cs
testb
dec
ret
arpl
sarl
lcall
cwtl
push
mov
lcall
addr16
vandpd
cmp
aad
cld
insl
jo
insl
and
in
pop
into
fnsave
jne
mov
add
xor
clc
push
push
js
or
mov
inc
es
jp
loopne
sbbb
xchg
test
mov
add
shlb
push
insb
mov
lahf
mov
pop
dec
hlt
aam
add
int
cltd
mov
pop
cld
push
adc
fdivrl
xor
inc
add
lcall
dec
aad
ds
mov
inc
push
daa
data16
jo
jns
stos
in
push
mov
and
mov
lea
insl
pop
loope
dec
icebp
dec
cmc
in
inc
xchg
pop
lock
dec
mov
hlt
mov
fwait
jbe
fdivrs
mov
jns
sub
xchg
push
sbb
or
push
jle
or
lret
pushaw
mov
sbb
add
dec
push
imul
mov
sti
cmp
fcomip
dec
pusha
in
rcl
pop
fsubs
scas
rclb
jo
pop
xchg
and
inc
cs
mov
xor
pop
fs
int3
jno
mov
cmp
adc
inc
pusha
andl
scas
enter
lods
incb
sub
sarl
xchg
cmpsl
dec
mov
sbb
push
rclb
loope
int
add
fs
mov
cmp
push
out
andb
or
loope
push
sub
xchg
pop
mov
cmpsb
push
xchg
aam
call
rclb
lahf
xchg
sub
fstpl
mov
int
sub
cmp
dec
imul
mov
mov
cld
lcall
push
out
orb
xor
or
xor
inc
xchg
pop
xor
mov
fucomp
adcb
cmp
xor
pop
mov
pop
fnstsw
stos
mov
push
nop
dec
ret
sbb
push
popf
push
cmp
stos
andl
jbe
xor
mov
aas
lds
xchg
pop
les
mov
popf
clc
add
aaa
aad
mov
xor
sub
lock
xchg
inc
inc
cmc
ret
xlat
rcrb
leave
pop
mov
sar
sbb
adc
jno
or
stos
fsubrl
inc
add
jmp
sbb
mov
mov
lahf
clc
push
bound
and
je
and
and
sub
out
xchg
lret
mov
lret
insl
test
cmp
test
nop
lods
mov
mov
inc
and
or
jb
addr16
int3
inc
adc
stos
jae
xchg
add
iret
fstpt
xchg
dec
fs
or
push
addb
mov
subb
loope
lret
outsb
clc
lcall
dec
mov
push
sub
inc
xchg
shlb
sbb
subb
subb
dec
jl
stc
lcall
in
mov
hlt
sbb
shll
fisubrl
sbbb
aas
jmp
pushf
dec
xchg
mov
aaa
mov
rcrl
push
in
xor
movsl
in
push
adc
ret
pop
jae
dec
out
sub
in
dec
push
in
ds
jmp
or
dec
dec
into
clc
test
pushf
mov
rorb
or
sbb
or
add
xchg
gs
fwait
add
jbe
pusha
sub
aas
in
cmp
dec
xor
ljmp
mov
add
xchg
mov
repz
push
shld
mov
sub
sbb
or
mov
dec
mov
out
and
movsb
stos
mov
pusha
icebp
rclb
sbb
in
adc
aaa
dec
pop
sub
adc
and
mov
jnp
insb
rcrl
dec
cwtl
push
addr16
fs
xchg
es
es
test
fs
xlat
stos
sub
test
int3
cmpb
orl
scas
or
mulb
das
xor
cmpsl
aaa
out
push
push
ja
lea
cwtl
negl
out
xchg
xlat
hlt
enter
int
js
push
mul
jge
sti
sarl
js
mov
ja
mov
or
mov
dec
inc
cmp
sub
cmp
subl
repnz
sbb
inc
add
pop
repnz
adc
je
shll
dec
cmp
repnz
cmp
push
pop
inc
aaa
push
jae
fmull
inc
imul
cmp
shlb
mov
inc
dec
aaa
jb
cld
xchg
stos
aad
out
add
orb
in
insb
xchg
jge
movsl
mov
pusha
in
xchg
xlat
cmp
jne
sar
dec
mov
inc
or
xchg
jae
adc
adc
les
iret
lahf
inc
insl
inc
mov
mov
les
mull
adc
sbb
dec
pop
dec
jb
bound
dec
popl
push
or
out
mov
sub
xchg
inc
lea
int
mov
test
dec
les
pop
aad
test
cmp
jb
adc
jl
and
pop
cltd
fs
push
and
clc
aad
jge
ret
push
jne
xchg
sub
movsl
sub
pop
or
mov
cmp
insb
add
mov
aam
inc
or
lea
pusha
in
ret
mov
push
mov
aad
push
push
leave
pop
or
sub
shrb
push
lret
mov
fisubrl
sub
pop
ss
orl
jne
rcrb
jae
insb
cltd
inc
out
call
lea
outsb
movsl
lahf
js
mov
popa
inc
inc
push
test
mov
insl
push
pop
cmp
sub
hlt
inc
shll
cmp
in
mov
pop
cmpsb
std
mov
movsb
inc
fisttpl
mov
and
imul
aam
xor
and
mov
cmp
mov
out
icebp
movsl
rcll
loope
inc
clc
adc
jo
and
dec
inc
fnstenv
clc
xchg
and
fidivl
andl
and
in
rcll
ja
mov
cltd
repnz
sub
arpl
cwtl
call
sbb
int
orb
sbbl
outsl
mov
inc
sub
mov
xor
popa
fnstenv
pusha
outsl
rcrl
in
or
mov
imul
lock
pop
int
push
adc
xchg
shll
addl
and
clc
xchg
cmp
pop
jnp
dec
hlt
xor
push
and
and
or
push
les
mov
dec
clc
test
and
mov
ficomps
cmpsb
leave
pop
lahf
in
ljmp
mov
imul
lods
jge
outsl
add
lahf
das
shll
mov
ja
pusha
mov
nop
jne
xchg
in
lcall
mov
ret
mov
out
movsl
stc
mov
insb
cmp
popa
rorb
cmp
push
shrb
xor
and
lcall
clc
push
pop
rorb
xchg
push
mov
icebp
mov
je
mov
mov
cmp
push
insb
push
lods
mov
test
sti
rcrb
mov
mov
sbb
jo
cld
xor
cmpsb
les
mov
mov
jne
xchg
mov
cmpsb
into
sbb
out
sbb
orl
or
mov
aad
jp
or
jp
pushf
inc
jnp
and
out
imul
sbb
add
stos
mov
ja
aam
idivb
sbb
mov
decl
pop
cmp
xchg
dec
aas
adc
int3
dec
xor
sbb
lds
outsl
pop
adc
test
outsb
pop
enter
mov
dec
test
mov
movsl
leave
int3
dec
aad
out
bnd
push
push
or
add
inc
in
xchg
mov
lcall
add
mov
pop
insl
leave
xchg
pop
insl
sub
dec
mov
xorb
push
pop
or
inc
cli
dec
out
ret
pop
bound
xchg
jp
repz
or
xor
out
lds
mov
fwait
cmpsl
ss
aam
call
sub
sub
mov
jno
mov
jle
aam
fisttpll
scas
or
mov
cmp
adc
xchg
and
call
clc
aas
insb
mov
inc
push
adc
mov
lret
jmp
or
es
adc
push
in
jge
jmp
cmp
out
or
mov
leave
fneni(8087
ja
sbb
mov
testl
jb
lcall
inc
hlt
push
repnz
add
fs
or
pop
pop
cmpsb
mov
pop
xchg
pop
loope
adc
lds
lds
cmpsl
jp
pushf
pop
insb
xor
sbb
int3
sbb
xor
aam
add
fsubrs
cmp
xor
rcrl
push
jbe
lds
pop
repz
orb
push
popf
addr16
pop
decb
xchg
lret
mov
xor
mov
and
ja
sahf
jge
cld
jno
dec
xchg
shrl
push
into
out
xchg
ror
lahf
in
pop
sbb
outsb
ljmp
xor
out
and
pop
sbb
cmp
out
jp
outsb
lods
out
sbb
fisttpll
add
in
repz
cwtl
adc
jge
fdivrl
sbb
lods
mov
movsl
aas
scas
xchg
das
aad
data16
aaa
and
cmp
xchg
arpl
mov
cmp
out
sarb
push
mov
in
imul
int3
rolb
mov
fcomps
pushf
xor
and
adc
fsubl
xlat
ljmp
ficoms
dec
mov
mov
pusha
repz
push
out
das
mov
xchg
scas
in
imul
stc
sbb
sbb
shrb
push
lea
mov
daa
js
test
leave
bound
jne
add
out
iret
jmp
rcrl
mov
stos
sahf
stos
sbb
mov
outsb
or
pop
out
adc
adc
mov
or
rorb
xchg
mov
mov
aam
je
shlb
cld
xor
fldcw
mov
and
pop
mov
jmp
cmp
cs
pop
inc
testl
lock
mov
call
and
leave
adc
in
lods
dec
add
mov
movsl
stc
test
or
mov
jae
mov
sbb
fsubr
imul
mov
push
stc
scas
jo
pushf
fwait
aam
int3
mov
pusha
jns
sbbl
notb
sar
xor
aad
add
jge
fwait
jbe
dec
bound
in
mul
std
pop
mov
out
xchg
sub
push
stos
loopne
sub
sub
mov
inc
clc
mov
push
adc
fwait
and
add
push
xor
rcrl
and
lahf
lret
or
mov
cmpb
test
inc
ss
push
es
pop
jp
dec
ret
shlb
mov
mov
inc
mov
lahf
cmp
repnz
xor
js
rcrl
mov
out
ds
les
mov
cld
pop
mov
mov
fidivs
xchg
cmp
inc
outsl
adc
faddl
mov
mov
mov
jo
fsubs
jge
je
pop
loope
xchg
stc
push
repnz
sti
mov
cltd
push
call
mov
out
cmpsb
cld
inc
out
shlb
and
dec
fistpll
mov
jge
push
sti
push
ja
pop
call
jmp
call
fistl
pop
sub
mov
movsb
repnz
shlb
sbb
outsb
clc
adc
scas
mov
inc
xlat
inc
stos
mov
jmp
negb
cmc
enter
jle
add
and
mov
das
push
sub
jl
stos
lds
mov
adc
loopne
lds
int
mov
pusha
sbb
pop
dec
cmp
dec
inc
xchg
loop
jae
add
out
push
sbb
pop
stos
icebp
cmp
les
push
dec
mov
stc
call
sub
andb
lea
jg
adc
push
sub
xchg
pop
sbb
mov
les
xchg
fimull
dec
xchg
jg
jg
sbb
repnz
cltd
mov
dec
sbb
hlt
insl
fldenv
outsl
std
stos
and
stos
push
pushf
xor
jmp
andb
mov
rclb
pusha
push
cli
push
out
ja
scas
xor
outsb
test
sahf
adc
icebp
cmp
leave
xchg
leave
inc
stos
lret
mov
out
loopne
and
insl
aas
push
insb
mov
stos
jmp
pop
pushf
popa
or
mov
add
sub
inc
dec
mov
and
sbb
enter
shrl
or
mov
mov
sbb
xchg
and
inc
add
pop
sbbb
push
push
jmp
dec
fisubs
xor
lret
in
mov
xor
dec
loope
aaa
lret
pop
mov
mov
repz
jmp
loope
and
xor
lock
test
push
mov
xchg
dec
shl
mov
pop
lahf
xor
mov
push
gs
cmp
jb
shl
movsl
sub
cmc
mov
xchg
ret
xchg
decb
or
into
cmpl
push
jg
test
decb
cmc
mov
leave
add
push
xchg
xor
insb
fwait
gs
inc
int3
xorb
inc
push
testl
mov
dec
scas
mov
adcb
pusha
mov
mov
jbe
dec
pop
inc
mov
shl
int3
xor
pop
jg
movsb
cli
cmc
push
push
out
xchg
sbbl
dec
loope
cmc
hlt
loope
in
mov
rcll
inc
jle
sbb
out
in
add
lds
cmp
mov
jno
dec
lcall
popa
xor
aad
ljmp
jnp
push
les
leave
mov
cmp
pop
scas
push
pushf
add
sahf
and
push
cmc
pop
in
mov
or
dec
ret
pop
mov
loopne
cmc
pop
cmp
ja
cli
test
push
in
inc
cmovno
aas
and
ret
jl
mov
mov
cwtl
mov
fimull
divb
scas
or
repz
push
pusha
fs
push
mov
lods
subb
xchg
cmp
add
clc
jns
mov
adc
aam
add
xchg
repz
mov
icebp
sbb
ret
shrl
jl
out
daa
pop
mov
data16
mov
std
and
or
je
shrd
in
popf
xor
push
sub
loopw
cwtl
mov
cmp
nop
inc
pop
xchg
or
std
adc
pushf
inc
fstpl
sbb
sub
cmp
das
sub
mov
leave
sti
shrl
pop
push
fcompl
dec
loope
fs
incl
movb
pop
dec
dec
jae
inc
popf
loope
jecxz
loopne
pop
xchg
orb
call
xchg
sub
daa
mov
insb
fdivrs
ud0
jnp
or
cmp
cmp
test
sub
mov
ja
cmpsl
popf
pop
and
lahf
addb
pop
shlb
je
pop
lock
mov
mov
js
dec
je
lds
les
cld
push
mov
es
in
fwait
shrl
shr
js
aam
or
enter
rol
pop
dec
mov
fisttpl
rcrl
inc
and
fbld
mov
mov
xor
cli
jp
lods
jns
and
notb
sahf
mov
fdivrl
mov
ret
ss
dec
imul
inc
in
ret
xchg
push
stos
fadds
scas
push
ljmp
pop
pop
mov
and
enter
iret
jbe
pop
shll
xrelease
hlt
test
adc
or
pop
fcmovnu
sti
fwait
xchg
cld
mov
shll
dec
in
xchg
insl
push
push
aaa
pushf
movq
inc
stc
mov
mov
fistps
mov
mov
ljmp
sub
push
insb
mov
movsl
xchg
mov
shlb
cmp
pop
nop
cmc
mov
arpl
ret
mov
insl
cmp
orl
test
sbb
outsb
out
push
push
xlat
fisttpl
mov
sub
push
sub
jo
sub
in
in
jbe
pop
lahf
jae
das
pop
inc
rcrb
sub
jmp
mov
jnp
mov
mov
mov
jo
ds
inc
inc
and
aaa
inc
sti
fnstenv
out
insl
dec
ja
mov
mov
jno
cmp
push
aas
inc
hlt
pop
loopne
push
pop
mov
daa
in
or
push
loope
daa
negl
pop
adc
addr16
lea
inc
loope
mov
scas
inc
inc
int3
cmp
mov
call
arpl
lock
jns
pop
pop
rcrb
inc
cld
mov
popa
add
imul
dec
mov
mov
xchg
jae
xchg
imul
jo
xor
fcmovne
ss
aam
fcomip
mov
jp
jns
adc
fwait
call
in
mov
das
and
stos
inc
xchg
clc
sub
cmp
movsb
dec
bound
cmc
sbb
dec
cmp
xor
mov
gs
stc
movsb
cmp
jecxz
aam
xchg
sbb
aas
or
lahf
ror
add
jb
jge
cmc
xchg
push
clc
cmp
shll
or
cmp
xor
imul
clc
pop
cmc
filds
cs
mov
in
lret
jp
pop
aaa
dec
stc
mov
imul
std
sti
nop
sbb
pop
shl
add
mov
pop
arpl
xlat
pop
pop
push
ficoms
mov
les
gs
push
aas
adc
mov
xchg
add
mov
jb
or
pop
pop
and
es
loopne
cs
adc
jae
mov
jns
mov
sbb
mov
in
jns
ret
or
adc
out
adc
fxch
int3
pop
sub
sbb
dec
pop
outsl
and
mov
scas
inc
mull
push
cmp
hlt
testl
hlt
fistl
setge
fcomi
mov
push
js
out
int
into
xchg
outsb
add
inc
inc
sub
cmc
mov
or
mov
mov
dec
jp
xchg
adc
inc
inc
aad
std
addr16
mov
pop
xor
cmpsb
insb
lock
mov
adc
adc
les
jae
out
jmp
xor
xchg
das
xchg
outsb
add
adc
cld
outsl
imul
add
xchg
ja
mov
mov
cmp
fisubs
lds
xchg
inc
inc
inc
test
inc
flds
psrad
jl
lahf
cmp
popf
mov
pop
dec
das
pop
or
rolb
jge
mov
jge
jo
sbb
and
aas
mov
lret
add
psrlq
add
scas
mov
fsubrs
adc
xchg
int
pop
call
pop
lea
gs
or
mov
std
mov
bt
enter
add
in
sub
jp
sub
mov
jbe
test
stc
scas
cs
test
sbb
push
xchg
les
xchg
xchg
mov
ret
and
pop
insl
shlb
xchg
pop
scas
inc
push
xor
dec
pop
sti
push
sbb
mov
push
pop
jg
cmp
int3
mov
loop
fincstp
lret
cmp
dec
dec
dec
gs
sarb
loopne
lret
lds
and
jge
inc
gs
sub
sbb
das
fbstp
popa
mov
ds
fcmovb
and
dec
faddl
mov
lds
mov
aam
jecxz
daa
loopne
cmpsl
in
lock
nop
push
jg
xchg
mov
and
mov
fisubl
jle
hlt
pop
shll
mov
sbb
pop
mov
in
and
mov
testl
mov
dec
push
pop
lret
xlat
cmp
lock
stos
sbb
ret
sbb
adc
cmpsl
dec
adc
enter
xchg
hlt
jecxz
mov
lock
mov
inc
cmpsb
sub
in
nop
mov
dec
sbb
jnp
mov
pop
inc
rclb
pop
cmc
inc
dec
mov
or
and
pusha
inc
hlt
mov
imul
mov
loopne
adc
mov
mov
sub
inc
sbb
inc
dec
sub
rclb
and
hlt
xor
jg
sbb
aaa
rorb
or
mov
loop
mov
stc
jo
shlb
sbb
push
in
dec
notl
mov
shll
loop
mov
mov
mov
dec
inc
jns
test
fdivl
or
push
adc
data16
sbb
lods
lret
out
push
jmp
movsl
hlt
jo
es
or
adc
push
shlb
frstor
inc
xchg
rorb
jmp
das
sub
leave
dec
in
xchg
adc
repz
add
xchg
stos
mov
mov
clc
fisubrs
sbb
jb
xor
aam
push
sbbl
aas
repnz
adc
jo
add
or
aas
and
jno
jno
pop
mov
sbb
clc
jg
lea
xor
dec
stos
inc
inc
push
cmp
out
pop
cmp
or
xchg
pop
hlt
add
mov
jnp
jnp
adc
inc
test
lea
cmp
inc
push
sub
xorb
push
push
aas
lret
std
fidivs
inc
les
pushf
adc
shl
cltd
nop
xchg
xor
and
xlat
sti
cmpsl
pop
or
mov
cmp
pop
adc
loope
scas
int3
loop
inc
mov
inc
int
mov
mov
push
push
inc
mov
stc
and
aad
loop
idiv
nop
daa
pop
xchg
xor
les
scas
mulb
test
mov
arpl
add
jg
fnstenv
shl
ss
pop
sub
mov
fadds
inc
cmpsl
mov
out
mov
adc
ss
sub
arpl
jb
mov
stc
nop
faddl
lcall
inc
mov
inc
xchg
lds
push
mov
scas
push
pop
stos
sbb
pop
adcl
or
xchg
repz
scas
in
mov
sbb
insl
les
mov
sahf
xlat
cmpsl
dec
sub
cmp
shrl
inc
lds
push
dec
add
rcrl
cli
pushf
cwtl
enter
adc
pusha
test
xor
rcrb
sbb
adc
stos
inc
in
or
lcall
and
xchg
mov
lods
test
and
fimuls
jns
jg
movsb
mov
js
repnz
sub
adc
push
mov
xchg
pusha
arpl
xchg
ret
sarb
add
nop
aaa
out
repnz
fstpt
or
add
jle
mov
mov
inc
fcmovu
aam
cmp
inc
out
xchg
jg
push
mov
push
insl
pop
hlt
mov
jl
push
scas
sub
mov
mov
loope,pn
lret
aas
pop
ficoml
lock
sub
int3
pop
inc
inc
mov
dec
loope
leave
or
sub
or
push
mov
sub
or
dec
inc
sarl
ljmp
popa
mov
decb
and
add
repz
inc
sub
sub
outsl
pop
call
lods
inc
insl
push
mov
cmpsl
mov
loope
cmp
mov
stc
xchg
cmc
subb
sbb
jnp
mov
fnstenv
xlat
pop
mov
pop
dec
repnz
fsubrs
jno
pusha
out
mov
fsubl
cmp
ljmp
mov
lahf
cwtl
cmp
int
push
xchg
sub
mov
mov
jge
lret
fstps
stos
adc
shrl
pop
shlb
jne
arpl
pop
lods
jge
sub
cltd
jmp
pop
push
mov
cmp
rol
adc
mov
sti
adc
mov
jl
dec
xor
loopne
jne
cmp
rclb
or
cwtl
test
lea
mov
dec
test
faddl
movsb
int
mov
in
mov
push
pop
adc
or
mov
mov
cmp
mov
out
xor
into
inc
inc
inc
or
and
bound
rorl
sub
xor
cmc
xchg
or
cmp
stc
rcll
cmpsl
out
push
in
sub
fisubs
fistpl
xchg
sti
mov
pop
and
inc
xor
inc
fincstp
add
das
xor
push
daa
gs
push
push
call
int
arpl
addr16
mov
cmp
rolb
xor
add
stc
aam
jle
idivb
and
loope
mov
lcall
sbb
jg
cmp
filds
or
jae
xor
sbb
in
and
shr
dec
and
movq
sbb
and
shl
ds
pusha
outsb
inc
fcmovbe
popa
jg
pop
lea
inc
test
fimuls
add
sbb
push
iret
bound
int3
arpl
add
outsl
mov
sbb
pusha
sub
bound
testl
jle
loop
js
xchg
icebp
sub
mov
pushf
pop
jne
nop
std
aam
fstpt
xor
inc
sub
jns
jmp
pop
pusha
imul
jge
xchg
gs
out
add
aas
es
mov
popf
pop
lret
shl
scas
loop
out
pop
sbb
fiadds
mov
xor
jns
inc
jnp
std
xor
xor
xchg
std
sub
pusha
das
loope
mov
xor
mov
sub
leave
aad
jae
cmpsl
ds
and
dec
xor
jne
mov
mov
leave
arpl
sub
cltd
rcl
mov
mov
or
and
aam
dec
std
repz
into
mov
push
sub
insb
or
es
mov
dec
push
push
sbb
mov
test
scas
xor
mov
rclb
sub
cmp
xchg
sub
add
ret
shrl
push
test
inc
cmp
xchg
sbb
clc
mov
sub
inc
mov
loopne
pop
cmp
inc
int3
lock
int3
arpl
jge
mov
inc
jle
movsb
xchg
loopne
add
add
inc
inc
test
scas
sub
shlb
dec
jno
popf
pushf
add
push
cmpsl
push
and
xchg
adc
cs
cli
enter
sbb
das
and
mov
sbb
aam
cmpsl
ss
push
imul
push
jns
and
mov
inc
adc
imul
or
stos
push
mov
ljmp
ret
cli
pop
jecxz
sbb
jb
cmp
xchg
or
into
and
rolb
xchg
test
ret
in
inc
add
cmp
pop
lods
pop
sbb
sahf
lret
outsb
data16
insl
xlat
cmp
and
repnz
retw
dec
mov
mov
push
orb
and
fcmovu
or
cmp
push
fsubrl
push
xor
xor
pop
push
aaa
fildll
shl
iret
add
pop
or
jne
push
push
pushf
ret
sbb
sbb
cli
hlt
dec
loopne
add
cmpsl
mov
dec
cmp
adc
loope
sub
sbb
jecxz
stc
xor
or
dec
pop
push
pop
adc
push
sub
adc
adc
shlb
lret
aas
popf
xor
mov
push
jmp
jp
mov
add
mov
lds
subb
dec
mov
adcb
bndstx
jo
ljmp
dec
stos
cld
sub
jae
jl
pusha
adc
movsl
lret
push
fstpl
test
js
jo
push
xchg
jecxz
lret
sahf
movsl
icebp
xchg
push
mov
aas
cmpsb
xor
test
enter
xchg
arpl
jecxz
js
or
mov
loop
lea
arpl
js
jmp
int
push
sti
and
pop
addr16
sub
pushf
aas
push
mov
andb
mov
mov
push
dec
loope
inc
and
out
xchg
mov
shll
pop
mov
xor
cmpsl
test
adc
mov
and
in
dec
das
sbb
ret
mov
sbb
cmp
flds
jle
decl
inc
mov
pop
les
pop
jne
adc
cwtl
gs
int
xchg
sub
mov
ljmp
xor
add
in
jl
fwait
lret
leave
jecxz
enter
xor
ret
mov
call
mov
loop
or
xor
int3
mov
lods
daa
and
inc
mov
outsl
push
into
movb
mov
xchg
mov
and
fwait
test
mov
and
inc
pop
scas
dec
gs
sahf
jb
lods
dec
mov
cli
adc
push
jecxz
pop
cmpb
test
push
jnp
in
fcmovbe
push
push
xor
xor
and
ficoml
lds
and
bound
call
push
xchg
mov
addr16
fisttpl
scas
loopne
push
fnstcw
inc
mov
lock
fstpt
sahf
pop
fld
ljmp
pop
pop
sub
ret
jle
xlat
stc
adc
xor
jo
and
imull
mov
lcall
push
cmpsb
rcrb
scas
xor
xor
or
mov
mov
push
or
cmp
pop
adc
es
jg
inc
pushf
fisubrl
and
lcall
ffreep
ss
pop
aaa
pop
sub
mov
dec
jmp
mov
faddp
sub
cwtl
xor
pop
loop
pop
popf
xor
imul
pop
filds
push
sub
mov
add
jle
movsb
cmp
loope
cmp
ret
dec
xchg
lret
aas
pop
lock
adc
sub
mov
pop
xchg
das
decb
sbb
inc
jp
lahf
jo
lahf
mov
pop
add
cmp
lahf
xor
pop
push
lret
adc
insb
xchg
fmulp
adc
test
cmp
push
sub
pop
inc
dec
pushf
scas
dec
arpl
mov
out
and
cmc
pop
mov
adc
mov
imul
std
sti
jle
mov
xchg
dec
loop
cmc
cwtl
out
jns,pt
jo
adc
or
fiaddl
jo
push
mov
mov
adc
push
int
dec
or
scas
push
jne
adc
cmp
lods
mov
jne
mov
shl
jno
dec
push
inc
adc
cmc
xchg
leave
and
addr16
lods
xchg
cmpsl
jbe
xor
sub
test
mov
out
out
mov
xchg
lahf
negl
popa
xor
in
sahf
enter
xchg
push
ret
cltd
mov
lds
add
in
xor
inc
dec
repz
sub
fdivr
dec
mov
pushf
cli
movsb
push
xchg
aad
adc
nop
pushf
lea
rcrl
jle
lret
adc
mov
cmp
nop
jecxz
pusha
addb
jne
mov
xor
fsts
or
adc
ffreep
xchg
arpl
orb
mov
rcrl
inc
sub
add
jo
add
fisubs
mov
out
mov
int3
xor
psraw
cmp
outsb
adc
scas
in
ret
fcmove
mov
or
fs
mov
cwtl
push
lea
popa
jg
sub
cmpsb
xchg
mov
adc
imul
mov
jno
inc
scas
adc
andb
imul
popf
pop
inc
loop
xchg
mov
dec
xor
popa
cld
jae
jns
test
xchg
roll
push
push
jmp
or
stc
jle
pusha
fistl
adc
daa
mov
cmp
push
xchg
iret
or
jb
aas
movsb
add
addr16
xacquire
mov
std
mov
cs
aas
push
dec
add
mov
xchg
fwait
sbb
aam
and
mov
xchg
push
bound
fadd
dec
and
stc
shl
loopne
test
stc
in
adc
sbb
loope
in
mov
or
push
ja
cli
dec
std
nop
insl
cmpsb
or
xchg
xor
sbb
jmp
cltd
aas
pop
sahf
sbb
clc
or
cmp
dec
push
pop
nop
pop
mov
aad
jl
sti
add
xchg
jb
xchg
add
jo
add
es
dec
pushf
xchg
pushf
push
das
out
fsubl
inc
add
bnd
add
les
fwait
or
mov
bound
xchg
mov
and
negl
mov
test
push
cmp
fsts
xchg
add
ds
imul
pop
popf
int3
arpl
mov
push
adc
jbe
or
fldl
orb
jbe
ljmp
adc
sbb
xor
jecxz
cmp
mov
mov
or
xchg
mov
jecxz
daa
sbb
pop
call
push
jne
or
cmp
mov
ds
aaa
jmp
fstpl
or
jns
fldenv
push
test
add
push
adc
popf
push
cmp
je
cld
and
jge
jmp
je
shrl
mov
jge
movsl
pop
and
fwait
stc
stc
rcrb
sub
and
popf
rol
xchg
push
adc
outsb
cmp
pusha
jecxz
and
scas
pop
jb
dec
inc
xchg
adc
das
das
pusha
movsl
sub
sub
stc
daa
cmp
enter
cmp
out
andl
bswap
adc
ss
push
add
sub
sub
lret
lea
daa
mov
mov
out
out
xor
mov
test
add
cs
out
dec
adc
leave
test
mov
add
xchg
mov
movsl
in
je
push
insl
add
mov
shr
stc
loop
or
cmpsb
jne
mov
cmp
lahf
mov
sbb
icebp
mov
fisubs
mov
xor
fistps
pinsrw
pop
in
int3
push
jle
sbb
jne
loope
push
xchg
mov
mov
jge
clc
xchg
cmpsl
imul
jbe
xchg
daa
xchg
sbb
cmc
xchg
inc
stos
jg
dec
loope
test
aad
jne
mulb
dec
test
cmp
push
hlt
mov
pop
stos
dec
out
jae
movsb
jno
sub
jge
scas
xor
mov
jmp
xchg
pop
mov
loope
add
pop
cmc
adc
stos
inc
mov
jl
in
cwtl
xor
ret
sbb
std
jecxz
lea
ss
adc
mov
loopne
pop
sbb
test
inc
and
xchg
out
cmp
mov
loope
leave
sbb
loope
dec
cmp
out
mov
pop
stos
lods
dec
sarl
jne
dec
dec
inc
in
add
mov
data16
addr16
lcall
sub
jbe
je
repz
popa
xor
mov
cmpsl
xchg
aad
scas
orb
lock
shl
cwtl
enter
fidivrs
std
xchg
fldenv
push
inc
loope
jnp
cs
data16
sbb
sub
and
dec
dec
sbb
push
sbbl
pop
dec
testb
sbb
mov
mov
movsl
or
cld
push
enter
dec
fnsave
xor
sub
ficoms
xor
outsb
stos
es
xlat
pop
or
sahf
scas
fmuls
push
adc
cmp
shlb
mov
xchg
ss
pop
out
xchg
cmpsb
jns
cmp
cwtl
jl
pop
mov
js
xorb
pop
sub
lods
cmp
roll
insl
jge
fcmovb
xor
xor
add
inc
lock
out
jb
xchg
mov
ss
pop
mov
cmpsl
ds
xlat
pop
cmc
pop
push
andl
jl
and
loope
es
or
jns
test
leave
push
hlt
les
mov
mul
add
mov
adc
aam
int
mov
jns
jo
xor
inc
sbb
cltd
rcrl
iret
fs
xchg
pushf
sub
test
sbb
stos
insb
or
push
mov
dec
in
xchg
xor
insb
in
adc
out
iret
pop
cmc
outsl
test
pusha
pop
shl
femms
sub
leave
push
mov
xchg
sbb
outsl
mov
mov
mov
jmp
aam
std
lods
push
mov
mov
shrb
shlb
mov
lahf
idivl
add
xor
ja
dec
pop
push
fldcw
repz
and
outsb
mov
or
lret
cmp
add
xchg
je
lock
negl
adc
xchg
shl
mov
jb
cmc
js
xor
mov
mov
dec
inc
push
ljmp
jno
mov
fistps
enter
cwtl
mov
notl
pop
mov
out
sbbb
pop
sub
xchg
cwtl
jae
nop
jae
dec
nop
stc
push
mov
or
ret
jbe
pop
fsubl
adc
stos
inc
enter
std
mov
lea
xchg
and
mov
sbb
mov
dec
daa
test
shrl
dec
test
add
add
mov
jae
jecxz
leave
punpckldq
push
cmp
testb
mov
push
inc
hlt
fisttpl
jno
push
mov
push
push
jmp
js
jo
into
sub
repz
add
push
leave
pop
adc
xchg
mov
sbb
sub
mov
pop
or
push
cmp
mov
cmp
je
loopnew
repz
mov
fwait
stos
inc
lret
lret
into
or
and
push
out
and
lcall
dec
ja
mov
sbbl
push
jae
cmc
mov
mov
push
add
dec
cmp
out
cmp
cmpsl
movsl
mov
iret
int
jb
arpl
pop
or
jle
xchg
push
cwtl
inc
adc
xchg
mov
push
lods
dec
cmpl
cmp
push
outsb
dec
imul
orl
sub
sbb
add
loopne
call
dec
rsqrtps
lret
lds
or
mov
push
ljmp
cmp
xchg
ja
leave
xabort
jge
xchg
fiaddl
movsb
dec
in
fstpl
roll
ljmp
shl
pop
sub
xor
sahf
inc
pop
rcl
xor
or
add
nop
or
pushl
sbb
aad
adc
add
daa
inc
mov
push
jb
ja
notb
or
mov
jb
dec
adc
addr16
arpl
dec
out
test
dec
pop
mov
add
adc
sub
subb
or
jp
in
xor
fdivl
enter
mov
fucomi
lods
and
jle
lods
icebp
inc
lahf
adc
mov
xor
sub
popf
lahf
push
sbb
movsb
out
adc
pop
or
loop
ljmp
jmp
fmulp
and
cmp
cld
leavew
ret
scas
sub
rclb
repnz
icebp
sbb
jns
loop
xchg
test
andl
sbb
iret
int
or
pop
cmp
aad
xor
mov
push
jmp
icebp
mov
jns
sub
cmp
data16
or
xchg
stc
dec
and
mov
mov
sub
leave
fstpt
fadd
and
and
xchg
stc
adc
data16
aas
hlt
ja
mov
push
xchg
pop
enter
mov
xchg
hlt
mov
dec
mov
test
sti
shr
sarb
sbb
push
push
add
sub
mov
add
sub
aad
and
cltd
loop
dec
test
lcall
test
add
dec
cmpsl
sub
dec
movsb
sub
xor
dec
stos
inc
enter
fldl
test
aad
scas
pop
ss
lods
std
inc
jecxz
adcl
lock
lock
nop
sbb
mov
jge
push
jne
mov
sub
leave
shr
sub
or
test
xchg
sbb
in
pop
push
mov
pop
sbb
dec
mov
je
inc
fmulp
mov
cld
adc
pop
xchg
adc
push
fstpt
mov
mov
add
pushf
add
js
push
xchg
or
lret
mov
arpl
bound
stos
xchg
hlt
lock
lock
push
mov
jns
ss
mov
loopne
jns
or
bound
roll
cmp
add
sahf
arpl
scas
lods
fcoml
flds
insb
add
test
push
loop
mov
sahf
cmp
shrl
xor
aas
jecxz
loop
or
mov
jle
dec
mov
pop
pop
or
ja
in
pop
inc
int3
aad
jle
sbb
leave
arpl
pop
test
jge
adcb
mov
and
xor
lret
outsb
lods
daa
mov
test
add
mov
stos
inc
sub
dec
adc
xlat
sbb
outsb
add
inc
dec
in
gs
cmp
cld
pop
insl
loopne
xchg
loope
cld
or
pop
pop
mov
xchg
daa
in
adc
pop
xor
iret
int3
pusha
test
out
sbb
push
dec
mov
insl
icebp
inc
mov
ret
push
leave
fnstenv
adc
xor
shll
adcl
test
sarl
js
xor
push
xchg
adc
fldenv
push
add
or
cld
lods
enter
pop
mov
pop
fwait
sub
mov
cmp
or
xchg
pop
adc
cmp
jo
out
adc
cmp
inc
data16
mov
jnp
ja
aaa
mov
aas
loop
jne
sub
dec
cmp
push
je
pop
mov
xor
and
inc
xlat
out
aam
jbe
imul
pop
repnz
fwait
sbb
test
cmp
jle
or
dec
stos
jbe
push
jnp
cmp
out
adc
mul
jns
fldl
sbb
dec
repnz
cmp
pop
add
mov
xlat
push
repz
pop
sub
adc
mov
pop
aam
cs
testl
out
sti
lods
lret
sub
adc
cli
aam
fidivs
fstl
subl
subl
xor
xchg
ds
fcmovne
loopne
add
imul
pop
je
sbb
mov
ret
pop
testb
jge
ljmp
sbb
fdivr
nop
or
leave
sub
add
push
mov
push
nop
imul
imul
jbe
pop
mov
test
xchg
xor
jo
xchg
xor
icebp
in
lcall
mov
jno
shl
xchg
inc
bound
jp
xor
out
repz
test
add
mov
fistpl
add
cmp
jo
les
sbb
sub
outsb
movb
cld
sbb
imul
les
cmpl
pop
jns
sarb
xchg
push
cmpsb
mov
aad
push
sub
inc
fsubrs
fsubrl
xchg
dec
shll
fmulp
adc
shrb
hlt
dec
push
jmp
rcll
dec
imul
xorl
mov
xor
lock
fildl
add
inc
and
out
sub
rorl
push
add
xchg
pop
movsl
inc
dec
jl
push
cmp
cltd
sub
fcomps
icebp
fcoms
js
fsubs
or
push
sub
cltd
aaa
repz
pushf
rsqrtps
mov
push
pop
in
divl
cmp
push
add
ljmp
jno
call
or
jnp
push
sbb
mov
shll
inc
pop
in
or
push
lea
sbb
stos
xchg
loope
xchg
es
dec
pusha
jno
mov
incb
in
add
aas
adc
inc
ficompl
inc
lods
cmc
inc
dec
push
fcompl
aam
xor
xlat
jp
lcall
int3
lds
ja
push
jecxz
test
jle
mov
add
lods
ret
jl
mov
dec
movsb
adc
daa
lcall
or
jnp
pop
cwtl
in
jle
and
sbb
js
push
pop
lods
adc
add
jo
adc
push
cmp
mov
jmp
movsl
enter
sbb
xor
incl
lret
lret
and
sbbb
xor
vpminsw
jle
xor
mov
mov
adc
mov
dec
jb
mov
in
jns
stos
add
sbb
lcall
outsl
push
sub
add
add
iret
cmpsl
ds
adc
dec
pop
ss
lds
ret
or
or
jecxz
and
pushf
call
leave
adc
push
outsl
jg
ret
and
mov
addl
add
cmpsb
aaa
or
orb
mov
sub
sahf
jbe
and
jae
push
popf
sbb
pushf
xchg
int
pop
mov
lahf
sbb
mov
sbb
mov
nop
xchg
jl
add
pop
or
inc
rclw
push
inc
push
scas
cli
cmp
sbb
movlps
out
add
push
call
lds
dec
in
lret
xchg
out
xchg
sahf
mov
lahf
divl
cmp
mov
sti
mov
mov
xchg
iret
insb
shrl
and
and
dec
loop
sub
clc
mov
or
or
sti
mov
fidivs
sarl
add
cmp
popf
cmpb
pop
cmp
add
xchg
push
mov
add
pop
sub
mov
mov
ss
popf
fsubs
rorb
sarl
cmp
add
mov
data16
movsl
andb
push
or
out
inc
std
iret
jb
test
lds
lea
subb
pop
andl
aas
lea
xor
adc
jle
es
pop
mov
insb
iret
push
mov
sub
outsl
xchg
out
sbb
pop
jo
cmpsb
push
hlt
mov
add
aam
jb
push
jecxz
mov
jl
inc
xchg
lcall
in
aaa
or
fwait
hlt
inc
testl
push
jno
es
inc
cld
rcrl
cmp
mov
or
mov
jns
imul
cmpsb
add
shrb
adc
mov
push
pop
cmc
dec
mov
std
and
outsl
jnp
push
mov
inc
incb
addr16
mov
sub
out
insl
jl
mov
jecxz
xor
mov
sub
shrl
dec
or
movsl
repz
dec
dec
in
pop
nop
xchg
into
je
mov
pop
jmp
ljmp
adc
mov
pop
das
lret
rorb
jmp
push
pop
jno
neg
out
pop
cmp
xchg
loopne
inc
into
mov
ret
inc
pop
scas
inc
and
mov
es
pop
dec
mov
sbb
jg
in
push
adc
ffree
mov
popa
cmp
xor
enter
lea
sub
push
outsb
xchg
lds
in
je
jne
xchg
xlat
ds
outsb
js
divb
repz
sub
cmp
sub
lret
outsl
in
inc
push
outsl
jae
xchg
pop
xchg
lea
fidivrs
sbb
bound
out
bound
sbb
jl
movsl
cmp
sub
xchg
dec
mov
ret
es
mov
int3
mov
cmp
jns
mov
or
or
enter
push
lods
add
cli
lret
pop
loopne
mov
dec
arpl
subl
or
adc
add
imul
cltd
sbb
sub
adcb
or
dec
push
push
nop
adc
xchg
inc
leave
adc
adc
pop
loop
jae
fisubrl
cltd
stos
addb
add
xchg
push
or
or
xor
cmp
xchg
stos
cmp
dec
imul
mov
dec
adc
cmp
in
mov
in
adc
arpl
leave
xchg
aam
jnp
rcl
inc
addb
sahf
and
pop
arpl
fidivl
sbb
nop
and
adc
test
lret
cmpsb
ds
cltd
outsl
add
jg
push
mov
inc
aam
or
fisubrs
lods
cmp
aad
pop
pop
cmpsl
movsl
js
nop
fdivrl
add
fnsave
loopne
push
jnp
fisubl
stos
movsl
pop
out
fbld
mov
cs
add
mov
pop
gs
leave
mov
pop
cld
mov
xor
inc
mov
test
lods
xchg
mov
mov
sahf
out
sbb
cli
or
cmp
jg
cmp
sbb
inc
xor
push
dec
shll
xchg
movsl
in
aas
fisttpl
pop
js
dec
inc
fists
insl
out
dec
fstpl
jl
or
int3
push
mov
xchg
aad
push
mov
outsb
lds
inc
mov
lret
loope
lds
pop
enter
fildl
stos
outsl
leave
and
or
add
cmp
add
les
outsl
pop
cmpsl
sti
jp
xor
ret
pop
push
jecxz
insb
mov
es
imull
xabort
clc
push
rcll
inc
mov
push
fiadds
mov
fbstp
dec
into
lock
nop
testb
sti
pop
sbb
iret
or
and
dec
cmc
or
rcr
pop
incb
cmp
scas
adc
jae
gs
push
movsb
xchg
sbb
mov
xor
mov
enter
dec
mov
pop
shrl
gs
out
les
push
in
sbb
sarl
loopne
jnp
pop
gs
orl
movsb
adcb
cmpsl
mov
adc
cmpsl
aaa
sub
cwtl
cmp
int
cmp
mov
fucomip
stos
sti
pop
jmp
loop
das
mov
pushw
and
icebp
cmp
outsl
mov
xlat
rclb
mov
jp
mov
in
aaa
aam
dec
jno,pn
hlt
or
es
in
loope
jbe
push
mov
imul
or
insb
test
xchg
outsb
add
add
pop
addl
and
stos
mov
mov
adc
pushf
add
or
cmp
jp
je
jp
add
insb
adc
mov
jbe
sub
inc
mov
rol
std
hlt
inc
js
subl
leave
jnp
ffree
shll
push
cmc
push
dec
ret
loopne
rorl
cmp
loope
in
fwait
aam
cmc
mov
mov
repz
lret
and
push
mov
arpl
fldenv
cmp
inc
shlb
leave
js
inc
pop
and
sbb
xchg
test
jns
lock
dec
push
mov
mov
mov
xlat
or
mov
pop
jo
mov
mov
ret
ss
inc
xlat
inc
stc
lods
fbstp
or
xchg
stos
enter
decl
pusha
imul
ficoms
adc
cmpsl
xchg
bound
clc
test
int
pusha
push
adcl
cmc
jno
daa
mov
jmp
popf
lret
stc
nop
add
pop
scas
fiadds
xchg
cmpb
xor
jp
popf
push
insl
push
inc
pop
push
cs
outsb
stos
mov
daa
fldenv
fiaddl
jo
cmp
call
cmp
bound
mov
xor
xchg
and
shll
out
mov
jns
xlat
cmc
lock
fisubrl
dec
mov
hlt
push
pop
adc
cmpsb
dec
out
rclb
bound
fldt
aaa
bound
add
subl
mov
movsl
inc
loopne
jb
and
dec
inc
sub
sti
sub
enter
jle
outsb
and
lcall
fiaddl
test
sub
jb
cmpl
pop
bnd
pop
mov
sub
push
cmp
hlt
sbb
lods
mov
and
test
or
cmp
repz
les
push
sub
pop
mov
pop
jnp
popa
mov
pop
and
xchg
pop
xor
scas
inc
mov
in
inc
push
inc
xor
cwtl
std
out
adc
or
out
xchg
fnsave
jns
xor
mov
andb
aad
jno
insl
jo
test
or
ret
test
cmp
pop
sub
jb
lods
sbbb
and
cmp
mov
sub
ret
hlt
mov
dec
push
data16
lret
fwait
sti
movsl
and
jne
mov
or
mov
pop
data16
sarl
dec
xchg
cmovb
xchg
movsb
lcall
inc
daa
pop
mov
dec
leave
jae
inc
sbb
leave
add
push
mov
es
xchg
mov
jns
pop
push
jg
push
scas
and
xor
leave
icebp
push
cmp
dec
push
push
stos
mov
loop
jg
inc
pop
jno
mov
or
out
jge
test
aaa
mov
mov
push
xor
hlt
flds
xlat
hlt
addr16
xchg
pushf
pop
decb
jp
xchg
in
lret
bound
dec
jmp
mov
stos
jns
push
or
ds
dec
push
jne
movsl
push
lret
jnp
mov
fidivl
cld
and
or
mov
lods
mov
xor
mov
aas
out
pop
dec
sbb
and
lret
mov
out
lods
and
in
ja
lret
movsl
and
cmp
outsb
ja
mov
adc
ret
adc
mov
enter
enter
andb
in
negb
jae
mov
cmpsl
ds
xchg
jmp
inc
lds
xchg
repz
cmc
push
fadds
push
aas
push
lcall
push
vlddqu
dec
xchg
enter
stc
xlat
outsb
push
mov
insb
mulb
ret
shlb
faddp
hlt
jne
adc
in
pop
or
xor
icebp
rolb
scas
in
sbb
fnsave
mov
or
orb
dec
cmp
fidivs
or
js
mov
mov
ja
sbb
add
or
inc
cmp
pop
mov
dec
shr
icebp
and
fldcw
mov
loopne
popf
sub
test
jo
inc
data16
mov
mov
lahf
push
cmp
push
lods
adc
sbb
jns
jecxz
sti
pop
adc
adc
jo
adc
push
sti
cmp
push
mov
in
test
mov
jae
and
test
mov
jno
fiaddl
insl
mov
push
xor
test
push
and
lock
xor
lcall
popa
add
inc
xor
push
pop
loope
cwtl
je
add
scas
jg
inc
fsubr
xchg
xlat
jnp
pavgb
out
inc
in
push
jns
xchg
movsb
clc
xchg
xchg
xor
cwtl
mov
dec
pop
pop
stos
pop
mov
adc
inc
lods
mov
adc
mov
mov
mov
out
rorl
orl
int3
cmp
cmc
adc
mov
sarb
and
aaa
adc
push
add
cmp
stos
rol
xchg
add
cli
imul
and
scas
sbb
iret
xor
xor
movsl
cmp
test
mov
cmpsl
cltd
stos
xor
lock
or
adc
or
subl
dec
or
jno
mov
push
push
nop
test
or
jg,pn
sub
iret
sbb
inc
out
xor
fwait
bound
pop
mov
dec
adc
pop
imulb
push
dec
pop
xor
stos
adc
mov
std
push
xor
cwtl
cmp
popl
rcr
loop
push
sbb
pop
xlat
outsb
test
aaa
mov
mov
fidivrl
xchg
test
sbb
xorb
ja
test
jle
cmpsb
jl
sahf
ss
sahf
push
pop
adc
xchg
rcll
or
fwait
lods
dec
loope
mov
lds
cmc
sbb
or
pop
push
mov
orl
imul
jae
out
xchg
call
push
sub
lds
jg
out
lds
adc
daa
test
cmp
pop
imul
push
loope
out
mov
les
xchg
jns
dec
and
fidivs
push
jno
icebp
mov
dec
add
xchg
fdivrl
mov
push
popf
out
insb
pop
dec
sub
clc
icebp
out
outsb
aam
adc
add
fsub
push
ficoml
loop
in
or
add
cmpsb
std
fcompl
jns
and
pop
outsl
push
nop
jae
repnz
or
pop
shlb
movsb
rolb
ja
mov
fisttpll
xor
and
pop
cmovo
add
xor
or
bound
mov
push
xchg
leave
shll
jp
fs
arpl
adc
movsl
hlt
mov
outsl
sbb
cwtl
sahf
aad
popa
or
lcall
or
sbb
je
in
insb
adc
cmpb
daa
es
or
into
sub
pop
jge
cmp
fwait
xor
cld
xchg
add
push
in
out
in
push
movsl
add
icebp
mov
divl
add
mov
inc
add
arpl
loopne
add
movsb
pusha
not
inc
lcall
add
rcrl
dec
in
fwait
fisttpll
inc
insb
xlat
add
pop
les
xchg
xchg
add
sbb
rep
sbbb
push
xor
ret
push
inc
mov
popf
cmp
mov
cmc
cmp
xchg
jmp
cs
lcall
cli
adc
ss
clc
ljmp
xor
jo
xchg
dec
push
gs
test
jg
mov
adc
dec
icebp
xor
ja
or
push
mov
dec
mov
fwait
sbb
test
pop
shrb
movsl
in
add
testl
jae
loopne
xchg
mov
stos
jbe
int
call
test
test
iret
sub
pop
cmpsb
lret
xlat
xlat
jns
and
push
sarb
out
xor
imul
test
ja
mov
and
cmp
mov
lock
cltd
jle
dec
cmp
enter
push
pop
push
pushf
scas
xor
and
xchg
dec
inc
push
xchg
test
push
cmpsb
and
out
jl
adc
lods
jmp
sti
jge
dec
and
out
lcall
push
mov
xchg
mov
shll
sbb
icebp
sbb
mov
std
js
jecxz
insl
in
jp
popf
push
cmc
and
add
inc
inc
ret
sbb
sub
dec
sub
jne
push
lea
jo
xchg
and
mov
inc
rcll
test
mov
push
inc
inc
or
cli
xchg
xor
call
outsl
adc
push
lods
dec
fs
data16
cmpsb
cmpsb
xchg
jmp
xor
ss
mov
iret
add
cmc
pop
gs
mov
mov
sbb
xor
xchg
movsl
pop
fs
xchg
sub
insl
add
repz
sub
push
xchg
les
in
out
std
xchg
push
adc
out
out
mov
in
aaa
xlat
cmp
mov
clc
dec
jmp
loop
aam
fisubl
sub
and
inc
aaa
dec
lock
push
movsl
adc
scas
out
xor
sarb
cmpsb
cmpsl
imul
orl
jns
incb
mov
ret
repz
dec
mov
jno
sbb
rol
je
push
cmc
iret
lods
les
movsb
jecxz
pop
jecxz
mov
ja
mov
mov
loope
add
sub
lahf
xorl
shll
popa
rcrb
ret
fisubrl
xlat
push
icebp
jb
and
mov
aad
bound
sbb
out
lcall
clc
dec
sahf
mov
dec
sbb
mov
in
pop
mov
push
jno
jb
mov
loope
inc
or
jno
insb
insb
mov
int
je
sbb
inc
adc
cmp
clc
inc
pop
xchg
xchg
or
in
mov
sbb
ds
pop
data16
adc
jns
iret
and
out
mov
je
mov
es
imul
adc
mov
mov
imul
notl
pop
icebp
mov
shlb
add
stos
push
sub
xlat
repz
fidivs
pop
mov
int3
int
push
ljmp
in
xchg
cmp
xchg
sbb
xlat
icebp
outsb
pop
in
lods
lds
and
mov
jg
aad
cmp
lret
shll
pop
paddb
xchg
jo
popa
mov
and
pusha
in
bound
imul
notl
cmp
add
in
sbb
jmp
test
movsb
cmp
lcall
pop
lock
jmp
or
fisubs
idivb
scas
ss
loopne
push
orb
push
popf
out
punpckldq
lods
push
lahf
stc
flds
sbb
inc
lea
add
out
pop
mov
jmp
sbb
imul
xchg
mov
repnz
loop
adc
xchg
popa
and
andl
sub
dec
xchg
mov
stos
mov
xchg
cmp
mov
or
popa
sub
inc
push
dec
push
adc
fwait
xor
aam
test
xchg
std
adc
cmpsl
mov
push
mov
aam
pushf
mov
or
push
stos
push
and
xchg
popa
mov
movb
sbb
stc
mov
iret
pop
shlb
nop
xor
stc
xchg
frstor
pop
inc
ret
mov
cmc
stc
mov
pop
dec
lret
jnp
jnp
cli
pop
add
ret
add
imul
in
insb
and
add
lea
movb
mov
dec
pop
repz
and
imul
stc
inc
xchg
push
repnz
xor
fwait
cmpsl
and
push
aas
adc
in
or
ret
shrl
test
jns
mov
in
adcb
movsb
adc
sbb
push
fbld
call
stc
enter
pop
push
sarl
stos
jg
pop
mov
rcrl
adc
outsb
fs
push
test
mov
lea
shl
or
or
mov
push
aad
jp
sub
pusha
adc
gs
mov
adc
fldt
loop
in
orl
mov
pop
sbb
xorb
sti
pop
mull
pop
xchg
xchg
pop
int3
rclb
pop
jo
fcompl
aas
xchg
add
xor
jmp
xor
ljmp
cmp
inc
add
movsb
mov
movsb
sbb
push
dec
mov
lods
js
jecxz
mov
mov
jbe
stc
outsl
sub
cld
pop
push
mov
add
fwait
mov
stos
aad
fsts
shlb
xlat
lret
pop
insb
into
mov
push
cli
xchg
mov
stc
push
mov
fcomp
test
cmpsl
adcb
sub
jl
clc
xchg
add
xor
push
adc
sub
in
fbstp
inc
out
mov
jns
movsb
orl
xor
push
push
nop
dec
fildl
movsl
repnz
sub
into
popa
sahf
cwtl
movsl
mov
lock
or
mulb
pushf
and
push
mov
sub
sub
push
or
scas
xchg
sub
aas
mov
dec
lds
imull
or
adc
push
push
xchg
pop
mov
imul
add
call
push
dec
push
cmp
sarb
ja
push
cmp
js
fisttpl
ret
cmp
pop
lahf
das
pusha
aaa
mov
jl
dec
lods
hlt
fsubs
or
dec
ja
popf
pop
lods
mov
in
jns
sbb
dec
jnp
out
imul
push
orb
cmp
les
xchg
add
and
lea
xlat
adc
lock
jp
mov
repz
insb
add
int3
mov
mov
inc
loop
movsl
iret
insl
xchg
sub
and
dec
inc
clc
sbb
mov
adc
cmp
mov
leave
push
pop
mov
add
aas
xchg
push
jecxz
fbstp
in
pop
pop
mov
jae,pn
rcrb
inc
add
fs
xchg
inc
jnp
adc
push
jo
push
int3
sub
lods
jnp
loop
mov
sub
ficomps
ret
aas
lea
sub
push
stc
std
inc
mov
sbbl
fs
inc
xchg
in
lret
nop
or
xchg
sub
inc
pop
das
sbb
inc
jnp
inc
mov
inc
or
push
push
cltd
fsubl
cltd
test
mov
notl
minps
repz
rol
aas
sbb
mov
pushf
mov
aaa
call
sti
push
call
pop
inc
mov
fildll
pop
lret
mov
arpl
subb
popf
sub
push
and
mov
in
xchg
fcomps
mov
nop
and
aaa
mov
orl
mov
push
das
jbe
adc
mov
pop
repnz
lods
or
xchg
or
adc
xor
inc
pop
fidivrs
mov
pop
lret
adc
xchg
adc
inc
add
cmp
mull
pop
dec
pop
cmp
aaa
arpl
mov
subl
pop
adc
cli
nop
repnz
stos
addr16
mov
inc
push
fiadds
mov
test
and
adc
xchg
in
inc
fidivrl
out
aaa
popa
add
sub
or
mov
fs
mov
sbb
jl
and
sub
xor
pop
mov
sbb
in
mov
sbb
cs
mov
shrl
and
jbe
imull
mov
ljmp
cltd
mov
aaa
pop
inc
fldl
mov
jno
rclb
pop
lds
loop
cmp
xchg
movsl
cld
inc
data16
pop
pop
cwtl
shld
push
into
cltd
lods
cmp
out
int
loop
out
lahf
mov
mov
jmp
loope
aaa
and
cmp
pop
call
cmpsb
cmc
inc
push
cwtl
leave
ds
ljmp
xor
cmc
cmp
jge
lods
and
cmp
inc
in
push
dec
pushf
fucomp
imul
rolb
jl
adc
jae
inc
or
push
sbb
sbb
les
mov
jle
addr16
test
dec
lea
scas
mov
sub
xchg
sbb
leave
xor
ljmp
notl
arpl
xchg
mov
outsl
inc
notl
andb
sbb
mov
shl
mov
movsl
adc
and
aaa
adc
mov
pusha
xchg
cmp
or
pusha
andb
fdivrs
xor
testb
and
mov
out
data16
fbld
xrelease
or
adc
stc
inc
cmp
cmp
out
in
sbbl
mov
icebp
push
mov
enter
sbb
push
pop
addr16
popa
cwtl
arpl
jnp
jo
sub
sar
sub
icebp
sbb
jle
cmp
pop
scas
pop
pop
pushf
xor
sub
fst
idivb
sbb
lahf
pop
xchg
dec
lahf
repz
rorl
incl
arpl
aaa
cmp
xor
pop
and
stc
jmp
daa
arpl
xchg
dec
xchg
scas
addb
mov
call
stos
push
hlt
pop
data16
test
sbb
or
lret
jmp
jnp
into
lea
aas
sub
sbb
sbb
and
aam
jno
add
mov
adc
inc
sbb
nop
dec
movsl
mov
rcrl
push
imulb
mov
aam
xchg
int3
gs
adc
imul
xchg
push
fsubp
pop
add
pop
addr16
mov
mov
shll
inc
add
xchg
fldenv
aad
cli
jnp
mov
test
adc
popf
cltd
push
mov
dec
push
mov
push
fldenv
mov
mov
push
or
dec
xchg
and
loop
mov
movsb
test
add
fwait
lods
push
mov
push
sti
ja
cmp
aaa
inc
sti
xchg
push
dec
add
xor
cmp
adc
and
push
stos
jg
or
aam
lock
cli
mov
pop
jge
fisubl
pop
test
or
or
cmc
test
rcll
mov
pop
fsubl
ficoms
daa
jns
jae
fwait
and
mov
jnp
fmuls
lea
xchg
sub
xchg
mov
stos
mov
mov
js
ljmp
jb
xchg
mov
pop
xchg
cmp
mov
fstp
aaa
mov
mov
lahf
mov
pop
mov
nop
nop
addl
iret
jns
cs
popa
sub
insl
stos
or
mov
pop
pop
ret
cli
push
addr16
divb
pop
pop
cmp
push
in
lods
fcmovb
cmpsl
addr16
je
loope
into
jae
pop
or
test
pop
stc
dec
and
iret
sbb
pop
cmp
xchg
pop
xacquire
jns
mov
out
dec
pop
testl
mov
xchg
xchg
hlt
dec
scas
or
je
jns
push
imul
mov
jns
push
lret
xor
pop
xor
or
shlb
adc
or
lret
or
push
mov
mov
frstor
lcall
es
clc
push
leave
aad
adc
jmp
dec
cs
and
and
push
or
jp
sub
mov
xor
push
jno
mov
fcomp
push
sti
cmp
sub
dec
lcall
sub
outsb
loope
aas
pushf
jae
test
add
push
xchg
insb
stc
cmpb
ffree
adc
push
gs
inc
fistpll
xor
dec
pop
sarb
imul
scas
cmp
xor
negl
jmp
arpl
cmc
sub
movsl
sub
jo
jp
ret
push
xchg
cmp
cli
rol
pop
inc
dec
lods
inc
sbb
add
cmp
inc
mov
enter
cmp
test
dec
je
mov
sub
or
push
push
pop
xor
push
push
gs
push
cmpsl
imul
mov
mov
lret
mov
sarb
xor
xchg
gs
fs
xor
adc
adc
mov
testb
xor
outsb
push
and
xchg
daa
testb
lea
dec
or
cmp
dec
in
mov
nop
mov
or
or
stos
outsl
nop
mov
scas
fnstsw
lock
xor
pushf
sub
iret
fcoml
test
outsl
inc
mov
dec
jp
pushf
pop
int3
fs
sub
jmp
gs
xlat
cmpb
cli
test
xchg
jp
jae
mov
jmp
xor
jmp
dec
outsl
lods
fisubs
inc
fs
popf
push
ja
ret
hlt
cmp
pop
daa
adc
mov
shl
or
rcl
data16
push
fcmovnb
lret
loopne
sti
jb
inc
mov
les
mov
sbb
sahf
pop
mov
out
cmpsb
and
jno
mov
mov
hlt
xchg
sbb
sbb
fistpll
cmp
inc
push
add
cmp
cld
aaa
int
mov
lods
inc
xchg
add
push
cmp
jecxz
insb
cmp
int3
sbb
imul
iret
sbb
sbb
push
lds
sub
inc
jl
mov
push
mov
cmp
movl
data16
xchg
push
add
or
mov
push
cmc
scas
push
stc
push
lahf
pushf
icebp
jbe
out
es
sub
pop
lahf
or
popa
lods
mov
add
jp
dec
jne
adc
fwait
lret
sbb
and
push
repz
test
adc
cmc
mov
mov
cmp
sti
cltd
pop
fsubr
xchg
nop
jnp
mov
or
iret
lea
decb
jmp
mov
call
movsl
push
pop
fmulp
jbe
pop
sub
xor
pop
in
xchg
out
repnz
fcompl
or
shl
shr
loope
adc
xor
cmp
xchg
inc
cmp
mov
jmp
seta
or
subb
push
push
insl
fyl2x
xchg
outsl
pop
jg
lea
mov
jnp
lods
lret
lret
test
push
xchg
test
mov
push
jno
into
into
cmpsl
scas
xor
push
sub
jmp
cmp
call
xor
jecxz
mov
mov
shlb
cmp
xor
adc
mov
sarb
in
push
ret
adc
outsb
in
in
mov
test
mov
sub
test
add
jecxz
mov
pop
or
and
shll
xchg
mov
mov
push
cmp
ret
shrb
mov
push
mov
and
cwtl
mov
repnz
add
mov
scas
call
iret
mov
sahf
cmc
lcall
push
cmp
das
dec
mov
in
dec
pop
xor
fildll
inc
testl
inc
test
sarb
inc
in
mov
imul
dec
shrl
mov
mov
sbb
jmp
inc
push
cmpsl
and
pop
xchg
stos
xchg
push
out
loopne
stos
adc
in
pop
jne
aas
shrl
les
push
ret
insb
adc
fiaddl
mov
mov
adc
or
and
sub
add
shll
xlat
add
and
mov
scas
stc
xchg
push
std
popa
sbb
aad
in
sbb
cli
imul
xor
fidivs
repnz
jg
xchg
sub
inc
push
and
inc
push
mov
idivl
int
fbstp
lock
ret
mov
sti
roll
fwait
mov
sahf
dec
loope
test
xor
sbb
xor
sbbb
xlat
jae
or
out
out
inc
movsb
ret
jge
jecxz
push
mov
mov
jl
jns
mov
sti
cmp
adc
inc
fmul
xor
cld
adc
fs
leave
jecxz
lcall
sub
pop
or
cmp
xor
movsl
mov
xchg
in
das
repnz
repnz
xchg
push
mov
cmp
pop
or
out
or
outsl
ljmp
push
push
sub
jnp
and
repnz
das
ret
outsl
dec
and
adc
mov
cmp
mov
lods
es
sbb
pop
mov
out
int
xor
aaa
outsb
in
or
insb
and
push
call
add
and
sbb
sbb
cmp
popa
into
xchg
int3
dec
xchg
pop
pop
mov
xor
inc
loope
fildll
test
insb
fcmovu
test
jl
mov
mov
inc
jns
adc
xchg
jbe
aad
je
inc
das
add
xor
pop
jge
xchg
sahf
jle
push
lcall
sarl
repnz
repz
ret
bound
icebp
push
nop
loopne
clc
mov
mov
sbb
cld
outsb
das
int
mov
cmp
jecxz
fcoml
add
cmp
mov
mov
xchg
pop
jo
hlt
adc
push
cltd
aam
inc
fcmovnb
dec
push
insl
jle
push
sbbb
xor
pop
cmp
rclb
jns
xor
aad
sub
fidivrs
jp
jl
sbb
or
test
mov
jl
adc
insl
cwtl
mov
mov
sbb
rcrb
pop
mov
out
js
fcomps
sbb
inc
lahf
cmpsb
ja
cwtl
and
mov
jmp
movsl
inc
loop
xchg
pop
lods
and
in
push
xor
mov
in
cmp
cmp
adc
inc
pop
pop
loope
jge
jle
out
mov
and
sahf
inc
jnp
lds
fnstsw
cmp
or
rep
nop
cmpsb
movsb
pop
add
stc
sub
mov
testl
xchg
inc
pop
mov
jno
mov
xchg
es
loope
cmp
lods
shlb
jl
jns
lods
scas
jnp
movsb
ja
jecxz
push
and
leave
mov
push
clc
test
popa
mov
sbb
lods
xchg
inc
sysret
pop
scas
sub
xchg
sbbl
cmpsl
pop
out
fcomps
pop
cmpsl
les
sub
int3
jg
jns
or
pushf
inc
mov
mov
mov
out
outsb
aaa
dec
imul
test
xchg
stos
inc
push
pop
mov
mov
cltd
pop
and
sbb
sub
je
fs
pop
std
lret
adc
mov
imul
or
inc
lret
jl
clc
test
pushf
jb
mov
mov
pop
rclb
or
bound
jmp
add
ja
outsl
inc
inc
xchg
add
dec
cmp
popa
in
pop
xchg
and
jmp
js
xor
xchg
add
sub
and
cmp
dec
add
rcrl
in
and
aaa
lret
loope
std
and
pusha
fcompl
pop
lock
pop
mov
xchg
add
mov
nop
lahf
adc
daa
jge
sub
push
push
shll
jle
jle
lcall
mov
loope
sbb
loopne
sbb
stos
adc
fisttpl
dec
lea
out
test
xchg
sbb
out
arpl
add
bound
mov
sbb
xor
in
mov
js
aas
lret
rcll
inc
mov
stos
xor
push
data16
imul
cltd
cmpsl
push
inc
inc
or
bound
mov
fbld
jmp
or
mov
es
loope
sti
sbb
int3
gs
scas
lret
cmc
push
push
adc
push
mov
mov
push
jno
movsb
and
out
pop
fnsave
cld
pop
xlat
cmpsb
pop
and
mov
or
push
int3
lret
testl
mov
cmp
aam
cmp
jnp
or
pop
rcr
in
insb
sub
dec
repz
sub
jecxz
mov
mov
adc
adc
sarb
xorb
inc
jecxz
sbb
pusha
sbb
stos
in
jg
bound
add
daa
into
aam
sti
pop
pop
movsb
int3
and
lds
sub
cmp
or
sbb
fcomps
lcall
xor
cmp
lahf
stos
inc
push
xor
ja
xchg
test
mov
movsw
popa
ja
xchg
add
sbb
mov
pop
shlb
int
pop
mov
out
jbe
lock
inc
adc
push
fidivs
lods
je
mov
xchg
movsb
popf
jmp
inc
jecxz
xchg
adc
dec
sbb
testl
jl
loope
cmp
dec
mov
pop
and
jno
popa
dec
in
movsl
bound
stc
sub
lret
push
hlt
in
and
push
xor
fdivs
adc
push
aas
and
iret
adc
sub
test
das
inc
push
adc
test
enter
xchg
adc
cmp
in
fnsave
frstor
ljmp
shl
cmp
cmp
iret
sahf
mov
push
faddp
fs
insb
testl
popf
clc
adc
and
xor
sti
pop
add
scas
mov
loopne
fadd
loopne
dec
clc
out
aaa
into
push
xor
jb
pushf
dec
call
arpl
xchg
mov
jnp
fmulp
jno
xchg
sub
and
xchg
push
movsb
mov
cwtl
and
inc
cmc
push
das
cwtl
shlb
fidivs
in
cmp
iret
mov
push
mov
fidivrs
xchg
into
bound
mov
xchg
sti
inc
scas
fidivs
or
mov
pop
test
xchg
and
jp
mov
add
add
int
mov
mov
mov
arpl
stos
stc
test
jns
xchg
adc
push
enter
push
jle,pt
pop
js
popf
cmp
mov
jge
fwait
sub
and
ljmp
and
nop
add
aas
mov
push
jno
jmp
sbb
jbe
push
fwait
test
xor
adc
cld
pop
sub
mov
ret
jge
pusha
push
sub
out
push
inc
cltd
push
pop
dec
mov
dec
inc
data16
outsb
loope
pop
sbb
dec
push
xor
loope
sti
neg
aas
xchg
or
push
jg
fildll
mov
test
rclb
dec
cld
repnz
sub
push
stos
sbb
cmp
ja
pop
cmp
mov
mov
mov
adc
mov
gs
cmpsl
cli
adc
inc
sbb
push
gs
add
cld
push
jne
mov
add
push
xor
jmp
adc
or
cmpsb
and
pop
mov
loop
sbb
call
mov
hlt
sahf
imul
es
test
adc
mov
jno
and
sbb
sbb
insb
jmp
add
mov
push
mov
sbb
pop
outsl
mov
mov
aam
pusha
adc
mov
pop
inc
pop
xlat
add
imul
jbe
in
mov
call
push
stos
daa
xor
or
pop
sahf
add
push
push
sub
push
lods
test
fidivrl
call
sbb
mov
xlat
mov
mov
sbb
mov
mov
ja
in
inc
push
test
dec
xor
mov
and
cmp
test
inc
xlat
cmpsl
out
into
popf
icebp
sarl
lods
shlb
mov
mov
fistpl
fidivl
pop
cmpsb
cwtl
sbb
lds
iret
cmpsb
sti
lods
pop
lcall
mov
and
xor
stos
jns
sbb
mov
or
mov
stos
adc
and
test
sbb
and
shl
divl
jp
aaa
mov
les
and
sub
jmp
cmpsl
jb
pop
addr16
add
out
inc
sbb
shll
xchg
jne
xchg
pop
dec
inc
je
push
mov
push
xor
cmp
ljmp
shlb
mov
xchg
dec
mov
arpl
repnz
ljmp
out
rclb
into
data16
mov
adc
test
xchg
jge
sti
cmpsl
ds
stos
pop
fwait
push
test
mov
cs
lahf
icebp
inc
inc
cmpsb
out
testl
jle
mov
cmp
mov
cld
dec
push
ljmp
jecxz
adc
dec
int3
dec
xor
add
sbb
cld
xchg
clc
sbb
or
stos
mov
pushf
push
jle
and
or
jle
nop
lock
testl
mov
ret
pop
ss
push
inc
icebp
pusha
mov
jae
test
inc
in
lret
outsl
ss
mov
mov
aad
jb
xlat
mov
es
ss
sub
push
jmp
out
cmpsl
sahf
mov
ds
cmp
xor
sbb
inc
arpl
sbb
mov
out
dec
xchg
mov
xchg
add
lock
mov
pop
popf
xor
cmp
mov
sti
pop
int
xchg
shll
in
dec
jb
xchg
pop
je
call
cmp
out
cmp
dec
jbe
mov
add
mov
xchg
xchg
sahf
cmpsb
push
push
mov
mov
xor
scas
sbb
inc
cli
adc
xlat
push
inc
xor
xlat
inc
fs
stos
mov
nop
lods
dec
sub
mov
dec
mov
daa
inc
xor
fisubs
roll
lret
add
adcb
jbe
out
sub
js
outsl
jp
ret
dec
sar
mov
es
fdivrl
js
test
adc
xor
xchg
cmp
outsb
sbb
fldl
std
imul
lock
lock
or
xor
inc
xchg
xchg
pop
mov
cli
gs
dec
pop
jge
iret
fxch
mov
notb
out
es
sub
fsubrs
pop
fdivrl
int
es
es
dec
stos
inc
xor
pop
sbb
sbb
subb
ja
jbe
mov
xchg
or
sbbl
sbb
xor
rcll
push
sbb
movl
andb
stos
idivl
or
arpl
aam
sahf
movzbl
sti
ffree
stc
fsubs
shl
sub
inc
push
inc
scas
outsl
xchg
imul
push
inc
jmp
pop
sbb
cvtps2pd
movsb
lret
inc
insl
jecxz
pop
ficompl
cmc
and
inc
xlat
pop
xchg
inc
mov
mov
jae
notl
push
out
popa
mov
movsb
jb
inc
cltd
das
test
repnz
push
lods
xor
addb
lds
sti
adc
shl
lock
ja
xchg
addr16
dec
adc
mov
mov
xchg
mov
dec
cmp
xchg
mulb
xchg
shll
jo
mov
les
or
shl
xchg
add
movsl
inc
mov
pushf
fs
cmpsl
ret
shrb
jmp
sar
xchg
xchg
fwait
imul
mov
or
adc
insb
sub
iret
stc
jbe
jnp
sahf
inc
fldenv
sbb
fs
sub
clc
iret
xlat
jae
and
je
xlat
xor
scas
sbbl
mov
jecxz
inc
pop
enter
jbe
mov
xchg
imul
ljmp
lods
je
inc
sub
mov
mov
jnp
ss
xchg
add
repz
aad
sahf
mov
out
push
xchg
out
cltd
adc
mov
inc
jg
mov
cltd
push
movsb
cmp
movsb
fcomps
mov
lea
sub
push
test
clc
push
and
mov
add
pop
ficomps
fbld
inc
movsl
lahf
jecxz
cmpsl
stc
sbb
pop
dec
adcb
cmpsb
pop
lahf
cmc
lret
sti
in
pop
xchg
adc
jecxz
in
in
mov
fwait
mov
fistl
loop
pushf
sub
ss
inc
add
loop
sbb
mov
adc
pop
hlt
xor
push
fwait
ljmp
imul
mov
jle
out
push
les
xchg
xchg
int3
mov
mov
notb
lret
incl
fcmovnbe
jmp
or
insb
repnz
les
mov
adc
test
and
or
adc
cmp
popf
xor
hlt
cmc
mov
rclb
xchg
mov
movsl
push
jnp
out
cli
clc
pushf
movd
xor
bound
or
cmp
adc
and
popf
xor
jecxz
in
jecxz
adc
xchg
push
das
mov
inc
mov
gs
jge
sbbb
jbe
and
mov
push
xor
call
mov
cmp
sbbl
xor
dec
into
scas
or
out
fbstp
sbb
xchg
inc
dec
pop
mov
xor
dec
mov
mov
cmp
in
jno
loopne
mov
pop
rcr
cli
or
dec
roll
imul
loopne
test
je
xchg
imul
jle
add
mov
cs
imul
std
imul
ficompl
adc
inc
jb
sbbl
cmp
lahf
test
lret
jle
sub
repz
testb
es
cli
add
test
jns
fmull
es
movsb
xchg
sub
test
lahf
mov
jb
loopne
add
or
test
mov
scas
inc
cmp
out
lea
lcall
scas
jno
fldenv
adc
mov
in
sub
cmp
icebp
testl
cli
adc
loop
adc
and
sbb
out
mov
arpl
mov
xor
cwtl
pop
insl
into
pop
inc
sub
dec
ret
and
add
jbe
in
xchg
mov
lods
arpl
mov
add
jp
insb
lock
add
add
xor
or
iret
mov
lea
mov
xchg
mov
xlat
mov
imul
arpl
sub
in
sub
mov
mov
add
shlb
call
in
xchg
andb
shl
cs
push
or
fisttpl
mov
and
adc
xor
out
sbb
jg
icebp
rcrl
pop
fsubrl
jl
push
sub
fildll
pushf
jae
jg
mov
sub
add
pop
ret
mov
loop
lahf
pusha
or
in
cmp
xor
scas
bound
and
in
xchg
mov
hlt
xchg
mov
testb
popf
dec
pusha
mov
jmp
mov
or
clc
nop
int
mov
jg
and
xchg
bound
lods
jmp
fstpt
inc
mov
mov
push
jmp
lods
inc
movsl
mov
fwait
xor
outsl
inc
fwait
adc
and
push
cwtl
test
cli
jle
mov
and
inc
push
adc
and
stc
addl
out
or
pop
scas
pop
popf
and
cli
fwait
add
push
xor
clc
xchg
inc
ret
dec
cli
inc
dec
das
loope
pop
sub
lahf
cmc
lods
test
lcall
mov
test
jb
stos
je
repz
cmpsb
xlat
mov
lock
ret
ret
rolb
jecxz
jle
incl
out
rclb
inc
rcrl
mov
add
push
repz
dec
fistpl
dec
adc
ss
mov
cld
xor
testb
add
rol
and
sahf
push
aas
into
lds
ret
push
in
loop
enter
and
pushf
xchg
adc
leave
mov
fwait
and
test
inc
lock
nop
lret
or
aaa
push
ss
cmpsb
leave
mov
pop
dec
and
mull
jecxz
enter
push
jb
xchg
xlat
mov
inc
cld
lock
xchg
mov
and
call
xor
jo
mov
push
push
inc
lret
pop
lods
icebp
nop
iret
fbstp
xor
mov
push
jmp
aaa
into
sbb
sub
push
dec
push
cmpsb
idiv
or
dec
movsl
cmp
sbb
push
lea
jae
pop
scas
fildl
js
bound
inc
fs
inc
push
ljmp
in
ja
add
cmc
cwtl
pop
outsl
or
test
and
push
clc
cwtl
adc
xor
shlb
pop
jb
mov
sub
mov
fidivs
push
test
or
int3
push
stc
mov
int3
imul
ja
jl
xor
fsubs
sbb
mov
stos
movsb
aas
push
mov
push
daa
mov
popa
out
add
je
out
mov
aad
mov
aam
inc
fdivs
sub
inc
gs
or
sub
xchg
xchg
jmp
mov
dec
and
out
xchg
pop
and
sub
scas
push
scas
adc
cmp
aaa
loop
xchg
push
roll
test
jno
mov
mov
and
inc
xlat
and
pop
jmp
sbb
push
test
pop
add
fimuls
adc
sub
push
repnz
aas
stos
cwtl
in
int3
loop
xor
repz
jmp
push
hlt
sub
mov
adc
enter
mov
sub
jns
inc
je
inc
inc
call
add
leave
orb
stos
fwait
sub
jne
cmpsl
xorl
cmpsb
repz
sbb
inc
test
lret
aad
fadd
in
enter
lahf
stos
xor
imul
jle
sub
das
pusha
mov
add
mov
outsl
mov
push
mov
mov
pop
loop
clc
rcrb
inc
push
loopne
mov
pop
jno
cmp
insl
subb
cwtl
pop
icebp
jne
hlt
sub
rcrl
push
inc
jno
push
ss
adcb
fs
mov
xchg
imul
outsl
hlt
rcll
data16
or
jecxz
js
dec
push
or
iret
push
dec
xor
push
out
mov
ljmp
lods
inc
inc
fidivrs
in
in
or
sbb
scas
out
mov
pushl
push
jecxz
imul
and
mov
lds
and
pop
inc
or
sub
icebp
and
push
mov
shl
fistpl
lret
xchg
and
icebp
pop
jp
out
ljmp
inc
dec
dec
mov
out
cmc
clc
adc
jg
adc
pop
jg
sbb
int3
loope
fsts
dec
xor
xchg
std
jp
xchg
adc
or
out
ror
xor
jge
in
or
mov
cmpsb
sahf
inc
gs
push
xor
ljmp
cmp
xor
jle
or
ret
inc
xor
scas
mov
pop
adcb
inc
outsb
negb
lock
fwait
mov
dec
jl
push
xchg
push
ja
push
jge
xor
aam
ds
loop
les
cmp
icebp
cmp
loopne
lcall
js
sti
jno
mov
ror
icebp
and
mulb
jno
nop
pop
cmpsl
jp
jmp
in
pop
adc
cmp
gs
pop
int
inc
mov
xchg
cmpsb
inc
push
add
out
sbb
jle
gs
and
loopne
insl
rcl
aam
dec
or
or
push
push
xchg
sub
sub
imul
push
pop
insb
fildll
loopne
cli
xchg
out
std
jo
cmp
imul
jle
mov
cwtl
mov
push
add
sub
jno
push
cltd
push
push
jo
adc
adc
sub
cmpsl
mov
cmc
leave
movsb
jmp
jmp
mov
pop
jle
sbb
fadd
icebp
ss
in
dec
pop
inc
rclb
sub
jo
fsubs
ljmp
mov
fcoml
data16
into
in
mov
jns
pop
cmpsl
jle
push
xchg
inc
test
mov
adc
cmp
lock
inc
shrl
clc
adc
cmc
adcl
repz
enter
mov
mov
or
out
mov
mov
rcr
xor
dec
dec
inc
imul
in
adc
add
lcall
inc
fcompl
mov
mov
in
mov
jecxz
addr16
sub
cltd
std
push
mov
mov
add
cli
or
stos
mov
xchg
in
xchg
mov
jl
andl
jnp
mov
stos
jle
in
push
push
inc
loopne
test
and
notb
enter
pop
gs
scas
jno
repnz
adc
out
xchg
das
sub
add
pop
and
jle
cmp
imul
popa
pop
cli
rclb
popa
shll
jae
mov
orb
pushf
outsl
iret
fldt
je
pop
repnz
xchg
lret
inc
xor
push
mov
sub
test
jnp
out
aam
pusha
lret
xor
cmp
ds
xorb
ret
jecxz
jecxz
in
adc
ljmp
adc
mov
adc
sub
fcmovnbe
mov
nop
sub
push
repz
fisubl
pop
sub
addl
dec
pop
pop
mov
movsl
xchg
in
sub
lea
adc
push
in
sbb
lahf
add
pop
repz
sarl
dec
sub
xchg
mov
and
sbb
jae
mov
or
xchg
mov
adc
mov
pop
or
xor
js
or
gs
mov
cmp
hlt
in
in
negl
fiaddl
push
mov
push
out
jmp
xchg
mov
sbb
mov
imul
and
adc
mov
push
xor
aas
repz
int3
add
jmp
jp
jecxz
dec
adc
mov
or
gs
xchg
icebp
inc
or
or
jns
int3
dec
add
rcrl
push
out
out
jmp
dec
adc
cmp
push
adc
rolb
xor
mov
or
aas
cmp
push
jmp
psrlq
add
inc
fistl
stos
lods
je
bound
xchg
sub
out
inc
fsubrl
cmp
arpl
add
repnz
adc
iret
and
cwtl
pop
jl
mov
cwtl
sbb
dec
jecxz
insl
jecxz
cltd
test
pop
fisubl
lds
or
hlt
or
sub
sub
xchg
stos
test
mov
inc
jle
sbb
lea
ss
lods
jb
push
jno
bound
test
mov
sti
add
and
xchg
pop
aaa
mov
jns
xchg
shlb
or
fildl
ds
ficoml
xlat
lahf
adc
xchg
xchg
cmp
lret
aam
in
pop
lret
jae
insl
int
sbb
pop
in
push
in
pusha
daa
push
mov
pop
pop
mov
pop
in
push
cmp
in
call
shrl
leave
cmpsb
gs
push
push
lods
sbbl
cmpsl
negl
xchg
pushf
cmp
mov
ret
pop
loopne
mov
mov
rclb
lcall
fs
xchg
sti
fs
adc
lret
push
ja
fisubrs
js
xor
dec
fists
jmp
add
cmp
nop
daa
jae
xchg
xor
test
ret
pusha
test
and
push
out
jle
dec
lea
ret
shl
push
cld
add
popf
pop
jmp
popa
icebp
xor
in
outsl
mov
jge
icebp
mov
sahf
sarl
add
ret
sbb
lret
xchg
mov
mov
jnp
jb
cmp
mov
pop
imul
xchg
rorb
pusha
ja
lret
ljmp
cmpb
int
push
fdivrs
xchg
divl
fnstsw
pushl
stos
in
xor
scas
mov
mov
jb
pushf
movsl
out
xchg
jns
lret
insl
inc
loopne
icebp
cmc
push
sbb
mov
mov
lret
jmp
mov
dec
pusha
or
mov
imul
lcall
pop
aaa
push
out
jle
lahf
ds
idivl
fsubl
jmp
pop
or
cmp
push
mov
or
xor
mov
push
xchg
mov
cmp
xor
aaa
into
out
nop
mov
cmp
push
shr
je
add
out
shlb
dec
jge
cmp
pop
add
insl
or
test
shr
add
push
dec
testb
mull
data16
inc
push
mov
js
frstor
scas
mov
jbe
outsb
adc
push
std
or
jge
testl
mov
ficoms
mov
js
shl
lret
test
mov
stc
fs
and
fnstenv
ret
xchg
clc
inc
shl
dec
enter
aaa
mov
pmaxub
mov
test
adc
xorb
jge
adc
enter
shrb
adc
cld
adc
mov
je
sub
jmp
cmp
fwait
data16
cmpsl
inc
mov
sbb
or
mov
or
xor
daa
fbstp
cli
ja
in
xor
or
push
dec
mov
jno
adc
jg
sbb
xchg
mov
xchg
fldenv
mov
loop
jmp
lea
push
or
pop
pop
sub
ds
loopne
cld
inc
jbe
jae
lahf
push
lahf
lods
ss
cs
fnsave
cwtl
cld
inc
mov
imul
cld
push
xchg
mov
test
lahf
ss
dec
stc
mov
mov
repnz
pushf
mov
pop
inc
mov
xor
dec
xchg
cli
test
out
fnstcw
fsubs
mov
or
push
xor
dec
pop
sub
mov
push
loop
sbbb
jge
mov
add
data16
cmpsl
out
fwait
popf
rcll
or
es
push
add
ss
scas
shl
cmpsl
sub
mov
ja
fists
push
outsl
and
add
test
mov
ret
adc
pop
test
imull
cmp
jecxz
outsb
sbb
fistpll
jmp
mov
and
mov
data16
movsl
fistpl
dec
iret
int
lret
fcoml
jg
frstor
mov
pop
hlt
mov
push
jnp
xchg
pop
movsb
adc
dec
dec
mov
sub
adc
mov
test
test
xchg
pop
xchg
lret
scas
inc
xor
adc
in
test
adc
xchg
sti
fsqrt
pop
and
bound
test
fstpt
stos
push
lret
xchg
adc
loopne
cmp
fst
test
jae
test
cli
push
lahf
pop
mov
and
fcompl
shlb
sbb
jle
jecxz
push
movsl
cmp
ja
in
sbb
mov
pop
pop
icebp
mov
fisubs
fistl
pop
xchg
or
repz
cmp
imul
ret
jle
cmp
or
sbb
xchg
xchg
ljmp
outsb
ss
sbbl
mov
lahf
das
and
push
push
jno
sub
inc
xchg
jp
test
and
movsl
sub
or
xor
aam
mov
pop
hlt
fiadds
repnz
xchg
mov
mov
idivb
fmull
movsl
out
scas
cmp
imul
jmp
fsubr
sub
and
xchg
and
in
inc
xor
xchg
lahf
cmp
sarl
test
xchg
jge
inc
out
xchg
in
dec
int
push
hlt
mov
sub
add
xorl
enter
mov
mov
adc
and
int3
mov
ljmp
mov
loopne
fdivrl
rcrb
and
out
addr16
dec
rol
add
js
fs
cmp
aam
sub
mov
adc
jno
xor
and
clc
or
insb
andl
loopne
movl
enter
and
mov
inc
lea
xlat
jmp
sarb
mov
xchg
pop
or
mov
sub
push
loope
test
incl
fiaddl
lret
bound
ljmp
sub
pushf
fbstp
test
adc
mov
sti
sti
jnp
pop
and
xchg
inc
fists
inc
jmp
add
cmp
int3
outsl
dec
test
idivb
inc
outsb
or
pop
repz
pop
mov
imul
mov
jg
icebp
imul
mov
aas
dec
pushf
insl
sbb
xor
out
cmc
mov
test
inc
cmpsl
ret
nop
outsl
mov
mov
push
lds
inc
xchg
sub
push
and
xchg
sbb
lock
jae
pop
loope
test
cmpsl
xchg
mov
leave
decb
jl
movsb
cmp
adc
ret
mov
mov
add
adc
pop
test
lea
xor
mov
xor
mov
sbb
sub
cmp
enter
mov
mov
xchg
lcall
xchg
mulb
sbb
shrb
adc
aas
pop
xor
jns
cmp
dec
dec
dec
out
sub
sbb
iret
cmpsb
add
inc
push
push
addb
pusha
dec
enter
jo
insl
dec
push
jae
add
adc
movsb
out
sub
fsts
push
sbb
mov
test
mov
sbb
setne
mov
ljmp
cmp
xor
jmp
mov
ficomps
mov
rcll
or
scas
push
in
loopne
shrl
test
out
xchg
test
pop
or
fsubrs
loopne
loopne
jg
test
cmp
ds
jns
adcl
xchg
sub
push
scas
sub
mov
adc
push
inc
adc
inc
and
out
pusha
push
outsb
jbe
xor
aad
push
inc
repz
sbb
add
xor
or
xchg
ja
int
jb
pop
mov
mov
fst
or
mov
or
push
cli
xchg
addl
repz
sub
mov
push
sub
xor
test
xlat
or
pop
imul
jno
xchg
lret
sub
loopne
inc
lahf
imul
xchg
shlb
push
cmp
addr16
fidivl
adc
mov
cmpsb
testl
stos
test
mov
cmp
mov
or
inc
das
mov
pop
pop
stc
outsb
mov
int3
fnstenv
mov
mov
les
or
idiv
inc
sub
sbb
jbe
pushf
xor
std
cmp
and
pop
add
movsb
mov
outsl
and
adc
cmp
loope
xchg
mov
orb
fxch
inc
dec
pushl
addr16
mov
ss
xchg
dec
xor
mov
push
je
add
cmpsb
icebp
mov
inc
adc
bnd
mulb
jns
cmp
lahf
inc
pop
outsl
addb
dec
mov
push
cmp
sbb
mov
add
icebp
mov
and
mov
sbb
sub
xchg
xor
addr16
xchg
insb
cmp
ret
cmp
pop
dec
cmpsb
call
or
or
mov
cmpsb
jns
mov
pop
adc
xchg
rcrl
xchg
addr16
or
cmp
sub
scas
aaa
push
sub
pop
fistpll
mov
xorl
fcompl
add
pop
mov
xor
cltd
fsubrs
arpl
inc
mov
inc
pop
ss
hlt
or
arpl
negl
andl
jns
insl
jp
adc
jo
sbbl
jae
pop
lods
pop
int
cmpsl
jne,pt
push
scas
loop
pop
adc
mov
dec
pop
xchg
enter
xchg
mov
inc
test
mov
test
fs
lds
repnz
test
lock
ds
jp
pusha
adc
push
sahf
pop
jbe
rolb
aam
out
sbb
mov
cli
lods
cltd
enter
ret
int3
fs
jno
cmp
ret
mov
ljmp
imul
shrb
cmp
pop
out
imul
stos
jge
mov
repz
push
add
in
imul
sbb
in
jnp
push
call
push
mov
xor
adc
repz
cld
push
push
adc
add
dec
push
in
jne
sbb
gs
in
test
imul
mov
adcl
adcb
mov
outsl
test
dec
xor
push
or
sti
xor
xchg
cmp
mov
and
jo
das
dec
insb
jecxz
sbb
sbb
dec
shll
mov
pop
movsl
mov
pushf
mov
xchg
add
mov
sete
lods
and
test
jne
shlb
fidivrs
in
dec
add
daa
fwait
xsha1
cmpsb
lret
stos
push
bound
jno
sbb
xor
xchg
inc
mov
insb
add
fidivl
sbb
adc
and
or
ss
adc
rorb
and
sbb
and
mov
stos
iret
sub
mov
cli
or
rcrb
mov
or
pop
pusha
jno
sar
sahf
clc
xor
add
out
mov
mov
fistl
dec
fistpll
int
cmp
jae
iret
imul
lods
xlat
sub
xchg
out
ret
js
sbb
test
inc
ficomps
fcomps
aad
and
xchg
xchg
jno
pop
aaa
mov
frstor
repz
mov
or
call
pop
loopne
cmp
pop
sub
popf
loop
pushf
push
es
stc
pushf
aas
into
sbb
aad
add
insb
test
jns
test
pop
push
adc
inc
inc
out
bound
and
inc
or
shlb
push
xor
es
arpl
xor
adc
adc
bound
pusha
mov
scas
je
popa
xchg
mov
call
mov
testb
sub
scas
xor
cli
into
dec
jecxz
sub
pop
ljmp
testb
adcb
xchg
jo
idivb
mov
jl
hlt
push
call
les
and
test
sub
pop
ja
push
sub
in
jmp
ja
and
push
jne
push
cli
push
je
jp
pop
cwtl
jns
mov
or
xchg
in
jbe
adc
bound
dec
mov
shlb
xchg
mov
rolb
pusha
jl
dec
pop
push
add
jno
jnp
jnp
inc
pusha
lods
xor
lock
jmp
aas
test
or
test
es
lock
in
cmp
pusha
sti
dec
jns
adc
and
cmpsl
sbb
mov
notb
cld
mov
pushf
and
push
cmpsb
cmp
xchg
sub
and
adc
sub
pop
divb
mov
inc
pushf
pushf
xchg
stos
dec
mov
repnz
sahf
mov
jl
dec
out
dec
sub
outsl
inc
cmc
pop
test
iret
pop
mov
loope
fcomi
mov
or
arpl
sub
sbb
pop
jnp
mov
loopne
cmp
mov
xchg
inc
jne
ljmp
cld
out
mov
and
mov
adc
sub
mov
fdivp
shrb
jle
and
pop
sbb
push
ret
pop
rcl
imul
push
in
lods
xchg
push
add
pop
mov
mov
aad
push
mov
mov
fadds
dec
les
mov
xchg
fisubrl
inc
sbb
xchg
les
push
push
popf
push
adc
jnp
movl
mov
call
or
pusha
lret
jno
pusha
dec
fildl
lret
sbb
rcr
outsl
add
sub
sbb
cs
aam
and
jmp
mov
fst
jb
xlat
xor
lds
mov
andl
pop
pop
mov
fdivl
jg
inc
lods
js
sub
xor
pop
dec
jl
dec
les
insl
aam
int3
pop
inc
dec
fnstenv
cltd
sbb
push
bound
imul
add
aaa
fdivl
jbe
test
adc
xor
cmp
std
shrl
pop
lahf
sub
jns
stos
faddl
inc
rclb
pop
xor
enter
pop
popa
into
push
dec
cltd
pusha
jns
lret
pushf
mov
aaa
mov
add
repnz
and
add
ljmp
mov
pushf
das
jmp
xor
addr16
lock
mul
stos
cmp
push
mov
lock
cli
stc
in
cmp
aad
adc
loopne
xor
fisttps
dec
loope
aad
aas
mov
cmp
mov
mov
sbb
jmp
or
jmp
pop
enter
ret
mov
add
stos
jb
xchg
stos
jge
sub
dec
loope
filds
les
ss
jle
sub
ret
jl
jae
test
mov
xor
inc
pop
xlat
pop
push
jmp
cmp
jo
xchg
adc
into
push
add
test
mov
dec
or
cltd
std
xchg
fxch
xlat
cs
lret
shl
mov
movsb
jbe
jge
test
mov
jmp
or
mov
ret
js
fistpll
mov
mov
xchg
jge
cld
cmp
loope
flds
fldt
mov
bound
cmp
xchg
loope
push
fistpll
in
lock
jns
sbb
rcl
cmpsb
push
and
mov
xchg
dec
in
test
mov
push
dec
adc
mov
adc
push
lods
add
fimull
pop
inc
dec
and
pushaw
sub
push
mov
jecxz
xor
pushf
shl
mov
ficoml
push
aam
mov
idivb
or
out
mov
addr16
insb
sbb
push
sbb
int3
imul
sub
xlat
xchg
xor
fidivrs
mov
xlat
add
hlt
mov
adc
push
mov
cli
pop
adc
inc
cmp
mov
pushw
cmc
cmpsl
mov
xchg
add
jb
andb
es
inc
cli
enter
and
xchg
cmp
pop
xchg
mov
mov
push
jmp
pop
xchg
jo
enter
sub
xchg
fmul
jbe,pn
stos
dec
daa
push
fmulp
fcompl
notl
mov
mov
mov
pusha
pop
dec
test
xchg
cmp
aaa
das
sbb
scas
xchg
xchg
aaa
nop
xor
cmp
cmp
iret
popf
movsl
dec
xor
setge
loopne
mov
push
jp
inc
decb
and
cld
cmc
cltd
clc
cmp
lahf
adc
ror
test
ljmp
pop
pop
loope
sbb
xor
and
dec
out
rclb
add
jo
xor
xchg
inc
js
sahf
mov
jg
aam
or
jbe
arpl
loopne
mov
jae
or
pop
cmpsl
or
call
adc
and
mov
xchg
lret
mov
cltd
call
cmp
lock
jecxz
rcrl
cmp
popf
jns
cli
pop
in
mov
imul
insl
testl
xchg
pushf
std
mov
mov
pushf
push
and
sub
in
les
or
pop
enter
mov
mov
fidivrs
ret
pop
fwait
mov
push
fistpl
fstps
xchg
dec
aas
testl
clc
jbe
cmp
pop
cld
in
es
push
shlb
adc
cmp
add
daa
lahf
add
pop
call
and
or
rclb
inc
pop
scas
mov
lea
jns
jns
xor
pop
int
inc
fcmovne
xchg
loope
and
inc
test
jne
xor
and
je
dec
mov
mov
jno
xor
xor
jg
in
out
outsl
push
and
push
jl
mov
sub
mov
in
test
mov
or
sub
mov
lock
into
stos
lcall
cmp
mov
sbb
and
loop
inc
ret
jge
stos
ficoms
add
or
xchg
lcall
inc
sub
or
jnp
cwtl
test
imul
cmp
outsl
push
out
or
adcb
add
fisttpl
ret
aad
adc
ja
xlat
xor
in
jl
mov
and
xor
lahf
in
pop
jmp
or
or
xchg
out
push
add
loop
movsb
adc
and
jnp
icebp
lds
sbb
jle
mov
notl
xchg
mov
pop
mov
scas
lds
adc
or
and
fidivrl
mov
mov
mov
icebp
nop
mov
xchg
in
ret
xor
xor
push
inc
sub
js
xor
arpl
push
stos
ret
test
jmp
inc
dec
xlat
xchg
mov
enter
test
fidivrl
push
jns
test
cmp
adc
fdiv
dec
mov
int3
cwtl
imul
inc
jb
shrb
dec
gs
mov
fstpl
dec
test
xor
mov
sbb
insb
xchg
stos
xchg
out
or
sbb
xlat
cmpsb
jge
out
inc
dec
inc
push
hlt
addb
lea
jp
ret
ret
cmp
or
push
movsl
cmp
les
push
dec
dec
loopne
imul
sub
rcrb
cwtl
mov
xchg
jne
je
enter
cld
in
xchg
jle
cmpl
sub
std
cmp
sub
mov
add
xor
xchg
sti
sbb
arpl
adcb
decb
in
imul
mov
adc
cmpsl
mov
or
outsb
push
or
mov
mov
fsubs
push
lea
loop
leave
lods
call
push
fwait
js
insl
add
jge
data16
or
inc
dec
jmp
and
out
lahf
orb
lods
jae
mov
sub
push
out
mov
xchg
pop
pusha
mov
dec
fidivrl
mov
hlt
pop
ret
dec
xlat
xor
cld
ret
adc
out
jl
or
mov
mov
imul
add
in
push
push
shrl
push
in
gs
int
les
mov
jmp
cmpsb
fcmovb
inc
fstpt
js
pop
sbb
outsl
popa
repnz
fwait
call
ja
scas
xrelease
ret
pop
iret
dec
mov
in
and
xchg
push
lcall
inc
sub
sbb
cmpl
lods
fcoml
rol
sbb
test
mov
in
mov
jle
pop
icebp
mov
push
or
insb
xchg
in
popf
test
sub
hlt
dec
pop
insl
ljmp
xor
sahf
xor
out
stos
cmp
adc
lret
mov
sub
jno
daa
addr16
sub
fsubrs
push
and
sbb
mov
mov
mov
sbb
int
jge
jno
mov
addl
cmp
test
int
sbb
dec
jg
xchg
scas
dec
jl
rorl
adc
jnp
fnsave
sbb
leave
int
sbb
cmp
insl
jno
add
dec
adc
adc
cwtl
cmp
and
add
test
mov
jmp
jle
cmp
sub
mov
fmull
sbb
rcll
pop
insl
loop
loopne
loopne
in
scas
inc
shrl
and
pop
insb
divb
scas
mov
testb
rol
pusha
xor
test
adc
dec
mov
outsb
clc
pop
inc
orb
mov
fcmove
push
or
in
jb
cmp
lret
add
pop
mov
popa
data16
mov
sbbb
mov
xchg
imul
inc
mov
or
cmp
cmpsl
push
cmp
in
leave
push
lret
fldl
xchg
cli
pop
and
fisubl
jmp
add
xchg
sti
cmp
insl
insb
adc
add
add
jne
cmp
popf
push
sbb
sbb
or
fcompl
cmp
stos
cmp
mov
inc
jmp
out
jo
fcmovnb
cmp
push
pushf
je
shll
sarl
adc
daa
outsb
out
mov
mov
outsl
out
rcrb
aad
je
xchg
add
xchg
das
shufps
jl
mov
add
cmp
pop
cmp
adc
dec
loopne
and
or
movsb
jmp
adc
sti
test
in
adc
mov
daa
mov
pop
cmp
stc
or
push
push
icebp
sbb
lods
sbb
pop
dec
push
jp
jae
and
and
pop
jne
das
in
pusha
fs
cltd
or
out
or
repnz
mov
jnp
inc
aaa
js
in
jbe
mov
dec
add
lods
or
stos
daa
out
fcmovb
cmp
test
loopne
and
inc
out
mov
push
mov
mov
mov
scas
or
sub
fldcw
notb
mov
inc
imul
cmpsb
or
repnz
imul
rcrl
sbb
lcall
and
outsb
mov
sbb
sar
pop
loop
je
fucomi
in
rclb
inc
out
imul
aas
add
in
sub
leave
inc
into
xor
push
cmp
xlat
rcr
outsl
ds
pop
icebp
mov
and
fsin
popf
mov
mov
xlat
cltd
cmp
jae
cmp
lret
sahf
jnp
xor
jl
outsb
jne
jp
iret
jmp
sbb
fwait
mov
inc
mov
clc
xchg
ljmp
iret
push
cmp
xor
xchg
jb
mov
add
or
stos
shlb
xchg
adc
mov
scas
scas
ja
cs
mov
add
lea
dec
jp
push
out
jp
mov
push
cwtl
insl
rcl
iret
inc
subb
mov
push
sub
sbb
adc
xchg
xchg
xchg
push
aam
mov
mov
add
mov
and
cmp
nop
dec
xchg
add
pop
outsl
pop
je
cmp
sti
mov
cs
pop
inc
dec
sbb
mov
adc
mov
hlt
cmp
pop
cmp
ret
mov
fidivrs
in
sub
pop
es
lock
orl
mov
mov
or
fwait
lods
sbb
push
shll
fdivl
divb
jp
mov
aas
daa
mov
jp
cs
jp
mov
add
inc
cmp
inc
and
dec
or
ficoml
flds
sbbb
adc
add
arpl
push
xor
icebp
push
cmp
into
pusha
fcoml
push
popf
gs
fwait
adc
sub
out
into
jnp
roll
xchg
mov
imul
rorl
mov
mov
and
insl
push
ja
cld
fdivrl
imul
dec
pop
outsb
repnz
cs
das
test
pushf
and
je
pop
inc
jge
inc
imul
mov
cld
lods
push
cmp
or
cli
ss
sbbb
test
and
sahf
lods
inc
sbb
cmpb
out
pop
jo
aam
clc
mov
xor
movsl
mov
mov
lcall
dec
mov
mov
cli
xchg
add
test
add
cpuid
cld
xchg
sub
stos
mov
icebp
ss
push
test
fistps
inc
ret
sbb
sbb
shrb
jp
push
mov
fbstp
fdivrl
mov
jmp
in
out
sbb
out
loopne
xchg
and
pop
ret
fsubrl
mov
in
and
aas
cmp
popa
push
popf
xchg
int
dec
mov
es
data16
mov
loopne
fcomps
mov
push
lods
push
bound
cltd
stos
sbb
pop
out
push
cmp
add
cld
iret
pop
fimuls
xchg
adc
dec
inc
fs
xor
mov
loop
mov
add
sbb
add
jo
in
inc
xchg
jns
ret
bound
mov
pop
aad
fsts
sub
sbb
aaa
int
mov
jl
dec
aas
push
call
mov
mov
js
jnp
shlb
fwait
xchg
dec
enter
psrad
cmp
mov
out
stc
daa
sub
cmp
add
mov
fcoms
lods
fs
lret
and
std
sbb
jg
repz
pop
cmp
push
int
cmp
sbbl
outsb
repz
ljmp
jno
rcrl
popa
pushf
test
es
mov
mov
add
fsubrs
int3
mov
out
addr16
filds
xchg
cmp
addr16
rorl
xchg
xchg
and
push
xchg
pop
cmpsb
xor
pop
jp
cs
sub
ljmp
adc
out
inc
push
dec
movsl
inc
mov
sbb
dec
lret
addr16
cmp
dec
lahf
push
mov
stos
das
out
fmulp
dec
pop
jge
add
in
xchg
inc
add
and
cli
push
sub
out
insb
dec
push
adc
in
scas
mov
cmpsb
and
xchg
cmp
in
insl
sbb
add
mov
nop
das
fnsave
addr16
enter
cwtl
xchg
int
lods
mov
arpl
and
cli
pop
iret
push
lods
add
xchg
and
jb
adc
or
lret
mov
adc
pushf
into
pop
repnz
ds
add
mov
jne
test
inc
popf
adc
push
inc
xlat
inc
js
leave
pop
xchg
fimuls
mov
adc
test
fwait
mov
in
fstpl
and
push
sbb
xchg
xchg
jp
mov
leave
add
cmp
sbb
mov
aad
fnstsw
incb
into
gs
ja
mov
jae
mov
pop
sub
mov
pop
pop
imul
xchg
lret
addr16
sbb
mov
lret
dec
pop
rcr
call
mov
cmp
pop
xor
pop
pop
addr16
popa
xor
adc
mov
jo
stos
dec
out
arpl
push
lret
aas
mov
hlt
push
push
mov
push
or
mov
mov
mov
stc
or
out
jb
stos
dec
fbld
adc
mov
cltd
sub
push
inc
inc
popf
test
stos
in
xor
out
fucomp
xor
xor
pop
pop
sbbb
xlat
cmp
push
test
jle
adc
dec
jnp
and
loope
cli
xchg
jp
lret
pop
mov
in
aam
cmpsl
fidivl
out
aaa
jb
cmpsl
mov
cmpl
add
stc
and
or
aas
cmpsb
mov
push
sbb
jl
js
insl
stos
insb
add
mov
dec
stos
cmp
fsubr
dec
add
lret
and
xchg
jg
adc
xor
pop
loop
pop
pushf
xor
int3
or
into
nop
mov
mov
jg
iret
cmp
mov
mov
mov
mov
jbe
ror
cmp
lock
mov
jbe
sarb
add
mov
dec
mov
jbe
arpl
adc
mov
loopne
sub
push
aaa
imul
ljmp
das
fnstenv
fs
int3
adc
or
pushl
shrl
popa
roll
or
sbb
jbe
ss
pop
dec
dec
cmp
addr16
and
cmp
fs
mov
out
repnz
mov
jg
insl
sub
hlt
mov
jo
inc
mov
test
or
js
push
loopne
inc
in
ljmp
xlat
imul
ficompl
repnz
cmp
bound
dec
test
stos
scas
jns
jnp
call
add
sahf
xor
sbb
push
outsl
lods
or
cmpsl
cwtl
or
pop
orb
ljmp
adcb
jb
or
add
adc
cmp
inc
pop
cmpsb
je
xchg
add
popa
sbb
scas
cmp
lret
es
mov
f2xm1
enter
or
out
sbb
or
and
xlat
jmp
add
loope
js
jmp
inc
insb
fcomps
fidivs
or
fwait
cmpsl
pop
pop
push
popf
into
arpl
xor
sub
cmp
dec
jl
xchg
scas
outsl
pop
ds
pop
sub
repnz
and
inc
xlat
scas
pop
sbb
xchg
je
out
mov
xchg
fnstsw
movb
sahf
sub
movsb
jle
cmp
adc
jbe
icebp
cmp
je
rorb
mov
rcrl
xor
and
adc
xchg
enter
jmp
dec
mov
pop
shrb
cmovae
xor
into
scas
mov
fdivrs
xchg
mov
add
mov
jno
int
in
or
xchg
out
cld
dec
loop
pop
aam
imul
fmuls
mov
sahf
push
ds
sub
call
test
inc
daa
and
adc
outsb
push
cltd
outsb
mov
adc
add
lods
push
sub
out
xchg
out
add
hlt
andl
in
sbbb
out
pop
pop
mov
idivb
push
fisttpll
adc
inc
aaa
andb
push
jne
lcall
test
shl
xrelease
scas
mov
fdivrl
xlat
mov
das
xor
iret
pop
inc
or
mov
push
sbb
dec
out
das
ficomps
xor
iret
daa
jle
mov
dec
insb
insl
xchg
into
mov
icebp
or
or
mov
lret
rcrb
repnz
pop
xor
jnp
mov
mov
dec
mov
dec
les
rolw
lea
inc
insb
js
cmpsb
adc
inc
ds
movsb
xchg
cmpsb
fdivs
fwait
mov
fists
mov
out
pop
fmul
pop
jmp
insl
inc
mov
xor
test
into
lret
testl
pop
pop
cli
cmp
xor
push
movsl
cld
add
mov
push
dec
inc
and
ret
mov
pop
addr16
mov
loope
pop
sbb
pop
mov
xchg
adc
cwtl
das
and
into
add
mov
call
mov
pop
bound
mov
in
das
sub
test
cmpsb
xchg
scas
and
dec
jmp
sbb
mov
pushf
roll
adc
mov
mov
xchg
lahf
pusha
pop
mov
add
shl
imul
scas
and
jp
mov
jb
aaa
into
imul
gs
jp
out
xchg
jg
addr16
sti
pop
into
adc
jge
out
and
jno
mov
mov
cmp
jno
cmpsl
mov
inc
lods
imul
mov
in
iret
xor
mov
inc
jo
push
mov
call
cmp
test
frstor
jae
adc
jl
outsb
xlat
pop
cmpsb
push
shrl
mov
movsb
repnz
outsb
fldcw
movsb
fidivs
popf
addr16
rcrb
shr
and
jb
repz
inc
enter
mov
outsb
stos
pop
lock
adc
mov
cltd
pop
pop
dec
xchg
sbb
incb
lret
ljmp
aas
jno
shrl
aad
sub
add
das
sub
fisttpl
sti
imul
add
mov
mov
cmp
mov
xchg
adc
int
in
jne
inc
and
popa
jg
cli
or
add
xchg
gs
inc
ljmp
mov
cld
rolb
mov
inc
xor
push
lret
cmp
add
sbb
lret
or
xchg
cmp
jp
xor
jmp
push
mov
cwtl
sbb
or
fldl
andl
and
pop
test
or
adc
push
js
cmpsb
test
rclb
sub
sarl
cmpb
cmp
lods
add
pop
cld
xor
and
mov
or
adc
jns
pusha
outsl
xchg
and
ja
mov
mov
test
fcmovb
push
push
leave
enter
jle
xchg
sahf
repz
jbe
push
xchg
add
mov
lock
fmull
jg
sub
mov
or
dec
in
test
pop
jmp
ljmp
mov
mov
pop
inc
fildl
xchg
dec
out
mov
inc
sub
arpl
cmp
pop
or
cmpsb
push
xchg
dec
inc
xchg
test
and
aas
push
cwtl
inc
push
out
mov
push
push
inc
out
push
cmpsb
fstl
enter
mov
pop
imul
lcall
repz
xchg
mov
jno
icebp
mov
insb
out
sti
pop
jmp
repz
inc
pop
xor
mov
push
aad
aas
lret
fldt
xchg
test
add
and
jae
cltd
sub
test
lahf
arpl
dec
push
lret
sub
mov
insb
andb
push
out
or
out
jecxz
repz
add
pop
sub
add
mov
das
mov
sbb
cwtl
jle
xor
aad
pushf
pop
fimuls
pop
mov
js
aaa
and
xchg
inc
fadd
scas
mov
leave
or
scas
mov
es
jecxz
divb
stos
inc
stos
push
ljmp
repnz
stc
dec
sbb
adc
fistpll
inc
pusha
stos
fcmovnb
pop
jno
out
xchg
aaa
jbe
loope
movlps
or
imul
stos
fisubl
test
mov
loop
aam
mov
sti
xchg
mov
test
mov
cmp
loopne
jo
pop
xor
imul
jno
fiaddl
ds
add
dec
call
enter
inc
xchg
sub
push
jle
lret
and
jne
arpl
pop
add
into
cli
xor
sbb
stos
int
test
shll
cmp
loope
scas
je
push
pop
mov
pushf
push
push
push
call
sbb
xchg
int
stos
push
adc
push
js
fisubrs
bound
sbb
jb
xchg
mov
std
mov
ficoms
add
add
xlat
jo
inc
push
adc
bound
xor
iret
ss
add
mov
adc
gs
ret
mov
mov
fsubr
outsb
testl
out
sbb
push
jge
scas
mov
jg
jae
push
mov
rorb
test
insl
psubd
stc
aaa
arpl
xchg
filds
outsl
pop
add
xor
insl
test
call
je
pop
mov
mov
mov
dec
sbb
jecxz
add
sbb
add
imul
push
call
mov
pop
mov
jp
mov
lea
mov
fwait
in
xor
dec
scas
fbstp
iret
and
mov
pop
pop
xor
add
cwtl
cmp
jbe
xchg
xor
push
mov
add
clc
adc
js
aam
jbe
test
jmp
test
xchg
cmp
pop
sbb
mov
jae
test
dec
dec
pop
mov
push
repnz
out
test
mov
pop
jmp
js
push
cld
pushf
push
dec
xor
aad
icebp
test
cmp
jl
adc
jae
leave
xlat
clc
push
mov
add
sahf
xor
in
sub
mov
lret
subb
dec
shrl
scas
inc
es
and
mov
cmp
push
negb
mov
push
push
add
lock
arpl
aam
out
cmpsl
push
sarb
pop
in
shrb
cmpsb
sub
jae
adc
push
and
ljmp
mov
sub
aad
adc
jnp
dec
mov
lret
mov
scas
insl
pop
outsb
sbb
stos
xchg
lret
push
lods
push
dec
data16
int
mov
jae
mov
out
pushf
pop
fwait
mov
stos
aad
loop
sub
test
repnz
inc
lock
sub
pusha
insb
test
pop
cmp
sub
dec
dec
loopne
pop
adc
int
repnz
fsubrp
sub
and
std
add
fadd
cmp
das
jle
cmp
dec
inc
pop
dec
adcb
push
dec
imul
inc
insb
call
dec
pop
outsl
out
mov
sub
xor
push
imul
lret
pop
lret
bound
inc
gs
dec
mov
mov
movsb
test
jo
dec
loope
jge
push
xchg
scas
pop
lds
cld
sub
and
cmpsb
scas
inc
lods
ffreep
jg
jg
inc
adc
gs
mov
clc
mov
fstps
add
cmpsw
out
inc
in
cmp
movb
jne
xchg
xchg
cmc
sbbb
sub
nop
cmc
sbb
insl
shlb
insb
mov
repz
add
ds
mov
imul
cmp
or
cmpl
cmp
imul
iret
dec
push
pop
push
cmpsb
and
test
jb
lret
mov
int3
jbe
or
ret
and
mov
jae
push
cmpsl
stc
pop
inc
loop
pushf
inc
dec
popa
stos
es
arpl
sbb
mov
mov
sbb
push
sahf
push
fsubr
xor
cltd
fs
std
or
jl
xchg
sbb
lahf
dec
out
cmp
pop
push
sub
lahf
lock
xor
xor
xor
push
sub
xorl
cmp
leave
or
pop
and
and
aas
push
inc
inc
clc
xchg
cmp
add
cli
or
mov
pop
aaa
and
dec
fwait
ds
mov
push
or
fildll
mov
push
fdivrl
subb
stc
push
into
jmp
or
mov
fisttpl
and
mov
mov
adcb
out
test
cmpsb
les
in
inc
fists
mov
scas
insl
stos
push
xchg
fcompl
mov
fmul
idivl
xlat
into
mov
jecxz
xchg
movsl
adc
jae
movsl
stc
adc
fs
outsb
dec
es
xlat
xlat
pop
out
bound
rcr
push
dec
cmc
loop
mov
scas
dec
rcll
aaa
fs
ss
jb
lret
loopne
cld
mov
xor
push
clc
nop
or
add
repz
pop
outsb
pop
push
mov
mov
xor
xchg
arpl
jecxz
inc
pop
movsb
push
rcr
ret
lcall
xchg
mov
pop
inc
jecxz
shll
or
cmc
and
cmp
fwait
shl
fsubr
fcompl
mov
ret
dec
outsb
repnz
jl
dec
in
fstpl
gs
pop
add
xchg
cmp
sub
movsl
cmp
sbb
cld
cmp
fbstp
out
sbb
and
popf
mov
cmp
repz
jl
sbb
stos
test
sbb
sbb
movsb
push
out
fwait
cs
lds
jecxz
add
add
sub
fbstp
dec
pop
ljmp
test
je
pop
enter
cld
dec
les
test
push
inc
fstl
mov
pop
adc
pusha
xchg
dec
dec
push
add
adc
andl
fisubrs
jb
sbb
and
cmp
ds
cmpsl
pop
mov
cmpsb
inc
inc
fcomps
shrl
scas
pusha
xchg
lea
add
jne
lods
loop
xchg
out
xchg
divb
movsl
inc
pop
rclb
or
jmp
push
sbb
call
scas
xchg
int
inc
rcrl
xor
clc
mov
shrb
xchg
fisubl
push
daa
popa
int
mov
loopne
or
out
outsb
sbb
popf
insb
rclb
ret
jle
xor
jne
cmp
mov
adc
fadds
call
cmpsl
push
mov
push
lea
push
mov
mov
divl
int
pop
dec
cmp
repz
sarb
ret
mov
sub
movsb
jne
lea
sbb
or
into
cmpl
xor
sarb
xsha256
cmpsb
adc
popf
push
mov
push
loop
stc
inc
inc
sub
xchg
add
call
lret
cmovns
push
movsl
arpl
lcall
dec
sbb
mov
les
mov
cs
notl
sub
sbb
mov
jl
mov
mov
mov
adc
arpl
pushf
xor
in
xchg
mov
push
jno
xchg
stos
or
faddl
mov
ret
stc
pop
sub
popa
fdivs
subb
pop
sbb
jb
sub
ds
adc
sarb
sahf
in
ja
lods
cmpb
push
and
xchg
cmp
in
inc
push
push
dec
loope
jge
sbb
rcrl
jno
xchg
in
dec
lcall
popf
ret
hlt
mov
imul
cmpsl
mov
fsubs
mov
sbb
lods
and
xchg
les
fwait
jae
jg
js
cmc
stos
rol
je
or
cwtl
mov
inc
pop
mov
addr16
fildll
stc
mov
arpl
pop
hlt
xor
fxch
addl
aaa
mov
or
mov
or
lea
cmp
aam
push
or
push
or
mov
cltd
push
sub
shlb
loopne
pop
rcrb
out
fistpl
loop
mov
mov
adc
jnp
aad
out
cmp
mov
mov
dec
shrl
int3
push
jmp
mov
out
daa
jp
fisubs
bndldx
sbb
fimuls
mov
rcrb
daa
add
or
xor
mov
imul
xchg
jp
adc
mov
shrl
mov
jb
fsubrs
mov
push
mov
xlat
ja
add
icebp
in
sub
in
pusha
mov
das
pop
lret
mov
mov
mov
dec
call
jp
pop
repnz
cmpsb
xchg
test
push
dec
push
push
dec
jmp
push
sbb
loope
movsl
jp
and
mov
stos
dec
jecxz
cmp
jl
xchg
jp
inc
inc
cld
roll
imul
sub
jp
adc
jmp
mov
adc
lcall
xor
push
jns
pop
imul
imul
pop
mov
adc
xchg
xchg
aaa
xor
subb
es
fwait
dec
dec
pusha
jle
nop
push
in
mov
mov
cmp
ljmp
sub
adc
test
pop
sti
jno
rorb
xor
pop
push
lds
aam
out
mov
in
sbb
pop
sub
inc
mov
cmp
or
sub
push
out
push
or
out
mov
loope
push
and
lea
sbb
out
mov
icebp
xchg
pop
push
mov
push
sbb
in
mov
in
push
insl
test
stos
jecxz
aas
push
dec
fwait
xor
sub
orl
jo
sub
xchg
sbb
inc
popf
icebp
fwait
pop
scas
inc
mov
push
jmp
mov
push
insb
xchg
inc
or
jle
jl
test
ljmp
mov
fidivl
rorl
ds
jns
daa
add
cmp
jb
out
pop
call
xlat
xor
xor
adc
stc
pop
lret
fstl
enter
adc
cmp
mov
jb
mov
movsl
daa
xchg
pop
test
popa
and
pop
jecxz
cld
add
fwait
xor
push
sub
neg
into
sub
int
or
jle
push
jmp
xchg
sbb
nop
inc
lods
mov
mov
adc
dec
imul
add
xchg
sbb
repz
mov
pop
xchg
std
lods
ret
scas
jno
das
pop
test
push
mov
mov
mov
les
fs
inc
xchg
imul
scas
mov
lea
jns
lret
mov
mov
xor
fwait
mov
jp
sbb
int
xchg
mov
cli
stos
cmp
in
lea
bound
jp
popa
shrl
mov
or
and
fsubl
stc
daa
inc
mov
repz
andb
mov
shrb
xor
pop
icebp
fmuls
push
inc
pop
jecxz
mov
mov
dec
movsl
pushf
add
jl
dec
mov
mov
out
out
pusha
mov
out
pop
push
iret
mov
push
dec
mov
or
xor
rol
jg
ss
mov
rol
pop
sti
scas
or
sub
push
xchg
or
scas
mov
mov
sarl
dec
add
inc
mov
or
sub
lea
jge
mov
clc
pop
faddp
lahf
rcll
mov
mov
insb
lahf
xor
mov
mov
jae
cmp
push
add
push
inc
inc
aas
add
dec
sub
sub
mov
std
cltd
imul
add
mov
cmpsl
repz
jecxz
aaa
cwtl
and
inc
sbb
mov
aaa
or
mov
jmp
push
or
jns
mov
sbb
out
sub
outsl
rclb
mov
aaa
les
add
inc
mov
jl
xchg
loope
fcomps
cmpsb
xorl
mov
ret
inc
fstps
lods
daa
push
sbbb
mov
inc
ficompl
ds
outsl
out
leave
pusha
mov
cmpsb
cmovae
out
mov
inc
clc
sub
test
repz
push
mov
inc
in
jecxz
pop
xchg
jmp
dec
add
inc
mov
xchg
addr16
mov
xchg
cwtl
test
xor
xor
mov
scas
dec
dec
ds
aas
adc
lcall
nop
push
cmp
ds
mov
or
or
es
stc
inc
dec
adc
shll
test
fnstsw
adc
jge
outsl
sarl
cmpsl
xchg
cmovg
insb
stc
rorb
fwait
jg
push
xchg
inc
fwait
dec
pop
sbb
adc
scas
xchg
bnd
xor
cld
cmp
sbb
testb
xchg
add
pushf
daa
inc
jns
xchg
push
xor
xchg
jle
push
nop
adc
scas
and
push
ja
scas
xchg
fisttpll
dec
je
jnp
imul
adc
and
loope
btc
xchg
jmp
xchg
sub
mov
dec
fidivl
mov
daa
inc
push
sbb
ficoms
rorb
mov
iret
mov
mov
push
lods
sub
mov
arpl
test
cmc
or
and
jle
orl
mov
bound
icebp
mov
mov
aaa
cmp
mov
push
sbb
aad
adc
sub
ficompl
cwtl
jg
cli
clc
scas
inc
bnd
xor
or
jp
stos
mov
divb
cmp
xchg
mov
adc
dec
mov
adcb
sbbl
xchg
cmpl
cmp
xchg
push
scas
ret
addb
pop
mov
push
ljmpw
popl
ret
or
sbb
scas
pop
mov
push
notl
dec
pop
add
mov
shl
mov
aaa
into
fmull
lods
stos
cmp
insb
mov
mov
insl
sbbl
add
add
out
fucomi
inc
aaa
inc
pusha
push
sahf
xor
loopne
push
call
xchg
inc
outsl
loop
cmp
pop
mov
xlat
test
inc
jbe
cmp
jp
or
xor
sbb
inc
test
sub
cmpsb
dec
mov
cmpsb
shlb
pusha
mov
lcall
push
leave
jb
in
aaa
or
push
pop
iretw
push
loope
lods
outsl
insl
xchg
hlt
pop
cli
add
xor
pop
and
pop
xchg
mov
ljmp
jnp
adc
add
jno
shrb
arpl
jmp
int
adc
es
sub
mov
pop
insl
aam
push
mov
sbb
pusha
sub
scas
push
xchg
xchg
adc
inc
imul
and
lods
mov
cmpsl
dec
pop
sub
in
shrb
mov
cmp
add
pop
sbb
pop
cli
jns
lret
nop
dec
in
dec
dec
adc
push
adc
or
mov
addl
es
mov
pop
pop
add
jnp
gs
mov
push
int3
inc
fwait
jbe
sbb
out
inc
lds
lock
sbbb
movsb
loop
lea
nop
imul
out
push
arpl
insl
xchg
mov
jmp
js
or
inc
mov
lret
or
and
enter
jp
jo
aas
inc
and
jle
push
pop
mov
stc
bound
add
mov
sbb
outsl
loop
mov
pop
sbb
jnp
and
lret
mov
inc
push
xor
jecxz
movsb
sub
xchg
js
shrb
in
and
popa
push
or
data16
jno
decb
sbbl
jp
out
add
data16
inc
testl
hlt
cmpsb
fildll
insl
push
jle
mov
or
adc
enter
call
push
sarl
es
repz
mov
sub
jns
js
movsb
imul
mov
dec
repz
xchg
inc
cmp
jnp
lret
hlt
or
or
out
popa
cmpb
dec
jno
fs
and
sar
xchg
add
cmp
or
mov
fucomi
mov
or
outsl
insb
jle
push
cmp
adc
adcl
mov
hlt
stos
or
push
movsb
fmuls
sahf
push
into
adc
push
rolb
in
jne
push
iret
add
xor
mov
iret
int
inc
scas
mov
sub
test
adc
std
cmpsb
add
movsb
ss
add
pop
pop
imul
lret
lret
hlt
outsl
or
out
sub
push
push
inc
inc
sbb
fbld
in
add
icebp
xor
pop
jle
xchg
mov
sbbl
sahf
dec
mov
imull
sbb
bound
lcall
and
outsb
fmull
push
push
xor
test
add
mov
movsl
pop
pusha
test
push
clc
insb
add
leave
mov
sbb
arpl
push
cmp
jle
cltd
mov
outsb
sbb
lahf
int
cmc
das
nop
lret
loope
lds
xor
stos
jne
sbbl
repnz
or
in
rcr
jp
dec
leave
jno
mov
push
scas
jb
jne
mov
sub
sub
xor
stos
sti
mov
adc
xchg
and
aad
leave
mov
push
js
mov
pop
xor
xor
mov
jmp
sub
xchg
test
or
sub
pop
les
lds
mov
pop
adc
hlt
xor
sbb
data16
call
cmp
cltd
imul
dec
mov
imul
nop
pop
je
mov
and
push
jnp
aad
iret
les
loop
scas
adc
in
leave
push
mov
mov
mov
or
js
shrb
scas
sbb
xor
xchg
outsl
negl
mov
insb
push
rcrb
or
cmp
jecxz
mov
aaa
mov
lock
mov
pushf
fidivs
jns
leave
aam
cmpsl
ljmp
testl
adc
mov
xchg
adc
push
cmpsb
mov
push
test
inc
jo
les
mov
pop
jecxz
stos
push
pop
sub
mov
mov
addr16
xchg
or
es
mov
sub
fwait
jmp
int
pop
push
mov
inc
jne
into
pop
fwait
stos
mov
sbb
inc
lcall
inc
adc
cmp
mov
lds
pop
push
inc
rol
mov
icebp
into
cmp
cmp
xor
ds
jmp
adc
inc
stos
test
mov
std
insb
pop
hlt
popf
mov
sbbl
jnp
pop
pop
stc
pop
cmp
enter
or
mov
add
jg
inc
pop
pushf
shrb
cmp
sbb
add
dec
fbstp
add
scas
jb
test
pushf
xchg
scas
mov
into
xor
xchg
jmp
add
cmc
mov
push
xchg
inc
and
insl
add
inc
xchg
aaa
into
in
aad
xor
inc
or
out
and
xor
mov
pop
jo
mov
mov
jle
xor
scas
fwait
and
fldt
jmp
adc
ja
stos
push
aam
adc
dec
push
shrb
outsb
sbb
inc
lds
xchg
add
adc
test
ds
out
mov
xchg
mov
daa
test
fadds
inc
insb
fwait
inc
xchg
inc
faddl
pop
push
in
scas
cmp
cld
insb
fwait
xor
vorpd
sbb
sahf
imul
decb
sti
out
scas
leave
xor
iret
lret
mov
inc
inc
cmp
aad
pop
mov
stos
or
xor
in
xchg
rcr
push
out
adcb
or
pusha
scas
or
es
out
sub
xor
adc
iret
and
push
mov
lahf
ss
push
dec
mov
in
hlt
jmp
out
sub
loop
loopne
repz
cmp
in
stos
inc
dec
pushf
icebp
mov
insb
jle
jo
lea
xchg
in
or
aad
arpl
mov
sbb
push
out
push
je
loope
icebp
mov
aas
data16
pop
adc
dec
mov
inc
or
stos
xchg
out
inc
push
push
xchg
mov
int3
xchg
cmp
sub
pop
pushf
inc
xchg
jmp
inc
push
sub
adc
stos
mov
cmp
mov
adc
inc
push
fistps
ret
cmpsb
xor
movsb
in
xor
aaa
out
and
jae
mov
xchg
xor
test
xchg
inc
mov
sbbl
cld
sbb
adc
xor
sti
mov
fadds
cmpsl
xchg
jmp
xchg
cltd
and
pushl
lcall
popa
stos
fs
jle
hlt
pop
cs
xchg
sbb
or
dec
and
cltd
adc
out
test
or
dec
popa
lret
mov
jbe
ss
adc
add
in
mov
lods
lds
push
nop
adc
popf
jno
outsb
add
jbe
les
mov
xchg
pop
lods
and
inc
jae
jmp
test
mov
lea
mov
scas
add
repz
loop
std
inc
aad
loopne
jmp
aad
push
dec
fbstp
fsubr
iret
xchg
test
sub
inc
xor
mov
sbb
into
adc
shrl
and
push
ss
loopne
sbb
les
cmp
xchg
pop
pusha
cmp
xchg
xchg
sub
ja
imul
cmc
mov
rorb
mov
mov
pop
mov
cmpsb
loope
loopne
sbb
mov
and
push
mov
fs
inc
adc
dec
push
aaa
into
xorb
sbb
and
iret
adc
enter
or
les
push
dec
push
test
add
fnstcw
sahf
fs
sahf
xor
jmp
jo
mov
dec
sub
jo
int
jo
int
mov
mov
int
and
sbb
or
loop
into
insl
ljmp
lahf
lret
sarb
push
push
mov
dec
movsb
inc
fwait
push
ret
pusha
movsl
push
push
es
pop
jle
jp
jo
mov
inc
push
mov
stos
jmp
sbb
insb
js
xor
xor
ret
rorb
dec
and
sbb
mov
stos
inc
pusha
fildl
sbb
outsb
jb
ror
adc
fs
ret
cmp
lea
add
mov
pop
nop
lea
mov
push
in
inc
jnp
insb
jmp
in
sbb
repz
iret
mov
sbb
bound
cltd
ss
jbe
pusha
ljmp
sahf
mov
enter
inc
xlat
push
push
ret
fnstenv
je
or
inc
xchg
jb
pushf
inc
fadd
jmp
mov
ret
aaa
or
bound
mov
pushf
out
leave
or
add
xchg
andb
mov
test
cmp
cmp
xchg
push
bnd
and
aad
std
aas
sbb
outsb
imul
pop
add
jno
shlb
add
mov
mov
test
test
leave
dec
leave
jne
jnp
xlat
inc
dec
out
movsb
and
add
mov
jecxz
pusha
sbb
sub
scas
mov
testb
cli
xchg
and
ret
subb
pop
xchg
dec
or
sub
push
cmp
dec
add
andps
adc
xchg
xor
lds
insb
push
xchg
aas
mov
testb
xchg
gs
mov
mov
movsb
inc
push
sub
mov
imul
mov
movb
dec
fsubl
sub
xchg
inc
movsl
push
sbb
in
add
mov
inc
lret
rcl
dec
add
stos
push
les
push
leave
jl
fstpl
clc
mov
mov
jno
and
int3
xchg
adcl
lock
and
mov
sbb
mov
ss
push
jns
mov
cmpsb
jl
adc
adc
xchg
sbb
sahf
xlat
pusha
shlb
pop
pop
pop
test
jp
mov
fiaddl
shlb
ret
pop
imul
mov
movsb
push
add
pop
mov
mov
inc
adc
icebp
fdivr
aas
xchg
shrb
cmp
sbb
jo
mov
in
test
mov
bound
jae
mov
popa
out
adc
mov
push
gs
sbb
fsubrs
mulb
jns
in
scas
push
popf
test
push
test
loopne
pop
push
or
mov
add
scas
push
nop
out
cltd
std
out
jecxz
xor
dec
sbb
cs
int3
sbb
add
pop
mov
xchg
shrb
in
mov
imul
sahf
aaa
loopne
push
jo
in
jle
sub
sbb
mov
hlt
shll
in
rcl
test
or
insb
adc
jp
push
hlt
cmp
adc
imul
les
adc
inc
clc
lret
insb
arpl
popf
fs
xor
mov
mov
mov
shrb
outsl
movsl
xchg
fldt
push
lcall
jno
outsl
add
mov
int
push
inc
aaa
mov
sbbb
adc
dec
add
mov
icebp
cmpsb
nop
sub
adc
ficoms
roll
addr16
addr16
push
inc
mov
stc
push
or
dec
dec
xchg
cmp
mov
push
sub
negb
mov
sarl
adc
pusha
nop
jp
mov
push
mov
mov
fstl
adc
dec
jmp
test
leave
in
and
pop
rclb
in
xchg
scas
testl
xor
add
leave
and
or
lret
push
and
xor
dec
test
fnstsw
mov
stos
xor
dec
mov
shr
aam
lret
loop
and
sbb
dec
mov
fcmovbe
jbe
in
jecxz
popa
adc
shl
cli
adc
sbb
inc
pusha
adc
sahf
roll
xlat
std
cmpsl
and
pop
fs
and
inc
shr
inc
out
add
ds
and
inc
aaa
sbb
push
sahf
movsb
addb
xor
mov
into
mov
fistl
push
xchg
int3
popf
inc
jnp
cli
outsl
in
jmp
and
inc
fpatan
mov
xchg
cld
ja
scas
pop
orb
pushf
or
sarl
xchg
jae
nop
leave
mull
sub
je
sub
adc
popa
into
loope,pt
add
andb
mov
pop
movsl
mov
scas
cmpl
jmp
pop
xor
jo
dec
sub
jg
fwait
pop
pop
loope
add
mov
lods
and
or
pop
out
sbb
cmpsb
xchg
or
pop
inc
sahf
mov
xor
clc
sbbl
add
mov
add
jmp
dec
sbb
jnp
imul
add
push
cld
sti
mov
inc
xchg
push
cmp
fdivl
repnz
fsubl
mov
add
xor
xchg
inc
rolb
movhlps
imul
fs
sub
out
pop
fcompl
sub
or
outsb
fs
stc
mov
xor
or
cmpsl
es
loope
xchg
divb
jmp
mov
cmc
mov
fiadds
test
je
lea
enter
adc
ds
addr16
outsb
pushf
sbb
aad
cmp
test
cmp
mov
mov
mov
movsb
sbb
iret
ss
push
or
mov
adc
pushf
jnp
dec
mov
xlat
mov
adc
loopne
sub
and
popa
mov
pop
aad
mov
jno
xchg
pop
rcll
xchg
sub
mov
sbb
add
rcrb
mov
aaa
pop
xlat
mov
rcl
mov
shll
dec
dec
les
loop
adc
push
mov
and
int
inc
jno
mov
sbb
push
xchg
jno
mov
in
into
test
movl
in
xor
mov
icebp
mov
sbb
sub
ret
or
cmp
xor
clc
cltd
jmp
sbb
out
imul
jg
mov
mov
push
fxtract
dec
pop
test
mov
inc
test
mov
cltd
cli
inc
xor
loopne
rclb
mov
cmp
lods
jo
aas
hlt
inc
call
sbb
jmp
mov
faddp
push
iret
add
aad
bound
iret
adc
mov
push
lods
push
mov
cs
dec
stos
daa
lds
insb
loop
jmp
popf
xchg
add
ret
pop
cltd
orl
pop
mov
jmp
pop
scas
loopne
loopne
aam
int
lret
lret
add
sbbl
icebp
xchg
gs
inc
fadd
cwtl
pop
adc
push
push
sbb
mov
pop
sbb
and
jns
sbb
outsb
cmp
mov
sbb
jnp
int3
cmp
cmpsb
push
mov
cmp
xlat
clc
icebp
push
mov
sbb
cmpsb
push
or
and
sub
lret
pop
lock
lds
cmc
jae
xor
call
push
dec
mov
jl
sub
dec
mov
out
movsb
pop
sub
scas
add
xlat
pop
xchg
pop
imul
pop
add
inc
pop
or
in
inc
dec
mov
sub
loope
mov
andl
inc
sbb
in
mov
loopne
int3
stos
je
push
or
jns
fstp
je
in
std
ds
sar
repnz
mov
dec
xchg
dec
sbb
adc
cmp
arpl
mov
jae
or
les
mov
lret
lret
scas
mov
xor
mov
cmc
cwtl
push
mov
push
mov
pushf
or
imul
pushf
xchg
fcoms
mov
xlat
jo
xor
push
xchg
inc
mov
nop
xlat
mov
xacquire
pop
push
test
shl
pop
and
add
lcall
mov
addl
es
aas
in
aad
das
insl
cs
sub
lods
imul
inc
sti
into
clc
and
xor
and
mov
jg
ds
in
das
and
test
cmp
mov
out
push
sbb
fstps
dec
repz
jge
mov
mov
jne
mov
cmp
cwtl
add
sbb
push
inc
lahf
inc
arpl
push
cltd
in
push
nop
push
je
in
das
ja
cli
test
jno
jnp
mov
sbb
fidivs
dec
out
cmp
xchg
jns
les
loop
cld
mov
push
std
scas
inc
out
cmc
pop
xchg
fs
jae
into
push
outsl
lret
push
xchg
jne
fcompl
mov
cmpsl
cmp
scas
ffreep
fcoms
or
cwtl
pop
mov
rcr
jb
leave
scas
cmp
lds
int
dec
mov
sbb
sbb
cs
cmp
insl
push
lds
or
cmp
cmp
or
mov
into
mov
lea
xchg
add
xchg
cmp
jno
jns
cmp
lods
mov
insl
lods
das
sbb
jbe
dec
jnp
movsb
aam
xchg
adc
ret
hlt
ds
out
rclb
sbbb
inc
shlb
dec
sub
push
movsl
imul
push
jb
dec
cmp
jne
dec
cmp
xlat
pop
mov
fs
xchg
adc
fs
cmp
clc
jg
inc
shlb
mov
xchg
pop
fxtract
mov
xor
out
dec
sbb
cmp
dec
fimull
int
dec
fld1
fsubrs
fldcw
mov
inc
lret
into
shrl
jns
and
pop
into
pop
ja
fwait
pop
jno
mov
xor
cmp
ljmp
scas
adc
fiadds
cmp
fildl
es
dec
fdivrp
mov
sbb
cmp
arpl
sbb
xchg
xchg
mov
mov
xor
out
movsl
pop
xchg
lock
insb
sub
and
shlb
mov
and
test
enter
inc
jmp
mov
outsl
adc
mov
aad
cmp
es
mov
mov
cmp
dec
icebp
sar
test
adc
imul
cmc
lods
addr16
push
fnstenv
mov
jp
and
out
flds
push
outsb
subl
push
adc
cld
and
cltd
push
inc
sti
negb
ss
iret
stos
out
subl
in
sbb
cmp
pop
lds
pop
outsl
sarl
push
or
cmp
sbb
lret
and
sbb
or
sarb
test
sbb
in
std
gs
sub
fs
nop
cmp
mov
loopne
fstps
icebp
jo
stos
xadd
mov
notb
bound
pop
iret
push
rolb
jae
pop
cwtl
xchg
ljmp
jmp
adc
sub
push
nop
lods
push
inc
or
add
mov
and
push
enter
in
test
sub
sbb
leave
ja
hlt
and
mov
xchg
mov
inc
cld
dec
pop
sbb
ss
arpl
mov
shrl
or
or
insb
add
fldt
push
inc
mov
push
mov
mov
outsb
dec
aas
mov
addr16
mov
orb
push
es
dec
add
push
out
lea
movsb
xor
xchg
push
cmp
or
push
je
jle
xchg
sub
pmaddwd
test
mov
mov
jecxz
inc
ret
cmp
dec
leave
xchg
xor
xchg
scas
je
mov
jecxz
fldcw
pop
push
inc
stc
and
daa
sti
es
xchg
lock
mov
jns
jmp
mov
divb
add
lds
sbb
lcall
cmc
stos
sub
pop
and
push
fwait
xor
fcmovu
jl
mov
mov
outsl
divl
mov
sahf
lret
sub
xchg
ss
push
dec
cmpsl
xchg
cmc
rcll
ja
arpl
xchg
pushf
pop
lds
in
dec
jp
pop
out
imul
inc
sahf
jae
and
ljmp
incb
adc
pop
xor
dec
and
testl
push
inc
aad
cmpsb
les
mov
jle
pop
into
mov
cmp
out
jns
sti
and
jnp
mov
mov
dec
leave
and
popl
outsb
mov
je
inc
into
pop
jecxz
aad
shr
jne
les
popf
sbbb
mov
dec
pop
sarl
jg
loop
push
or
inc
xor
xor
lea
mov
or
inc
mov
or
stos
mov
int3
jg
pop
test
dec
and
push
sub
scas
mov
cmp
leave
das
sub
insb
cmp
dec
int3
lret
pop
movb
pusha
lock
dec
stos
add
addr16
inc
bound
es
xchg
dec
jmp
sbb
imulb
mov
adc
mov
push
dec
add
xor
pop
ja
or
mov
adc
ljmp
iret
loopne
and
aad
bswap
pusha
idiv
dec
ficoml
inc
mov
mov
xchg
scas
mov
lcall
test
mov
pop
dec
pop
shrb
cmpsl
sbb
and
pop
icebp
hlt
test
gs
loopne
inc
push
jo
dec
lock
jge
outsb
adc
sbb
mov
push
xchg
pop
xchg
pop
inc
leave
int
add
push
fdivs
mov
andb
leave
fidivrs
popf
adcl
rcrb
daa
xchg
or
sbb
inc
sbb
stc
andb
cli
adc
pop
stos
or
xchg
pop
ljmp
dec
push
xor
xchg
pop
sbb
clc
int
mov
pop
iret
mov
pop
pop
incl
dec
pop
icebp
push
add
bswap
jmp
push
shrl
dec
fldl
mov
xchg
xor
lret
outsl
pop
ds
xchg
or
add
inc
cld
lea
inc
xchg
sbb
add
test
cmp
dec
fwait
cmpsl
inc
xor
and
call
xchg
addr16
mov
imul
ret
mov
mov
dec
ret
repnz
hlt
mov
sub
out
dec
or
loop
fsubs
les
fisubs
jmp
add
and
insb
adc
loop
and
xor
push
cltd
in
movsl
sbb
pop
jbe
cmp
insb
das
test
or
in
mov
pop
cltd
std
les
popf
sub
push
jnp
xchg
adc
adc
cwtl
add
hlt
xor
jnp
xchg
dec
fcomi
les
mov
sar
xor
loopne
cs
popa
sub
xor
dec
iret
add
add
mov
dec
dec
mov
jle
mov
or
mov
int3
add
mov
xor
pop
js
xchg
pop
mov
and
jl
outsl
scas
dec
sub
imul
lcall
cld
ja
mov
sub
or
stc
inc
adc
pop
inc
push
ss
ss
test
fdivrs
rorl
popf
pushf
ljmp
mov
add
fisttps
popa
fcmovne
jbe
repz
iret
and
jp
dec
adc
icebp
inc
jo
icebp
xor
je
rolb
mov
sbb
rolb
lahf
sub
sub
sub
andb
in
nop
lcall
fcomps
xorl
jo
sar
stos
mov
cmp
xchg
cld
adcl
cmc
iret
and
mov
in
subl
mov
push
ss
incb
push
jmp
daa
dec
icebp
cmovp
sub
pop
rcrb
stos
xchg
lcall
dec
call
or
sub
or
mov
iret
sub
clc
lock
xor
mov
cmp
rcrb
es
stc
mov
mov
or
div
insl
in
xchg
mov
jnp
add
xchg
inc
fisubs
sub
mov
jge
sahf
insl
lds
dec
mov
push
or
and
out
push
lea
pop
cmpsl
in
and
ficoml
sub
adc
rorb
push
xchg
clc
stos
repnz
xor
out
cmp
sbb
ss
jmp
dec
clc
lock
ss
nop
jnp
xor
mov
mov
sahf
xor
or
mull
jge
inc
fsubrs
enter
lds
test
sub
stc
in
jp
aaa
inc
out
inc
adc
jb
lea
mov
stos
out
sahf
int3
fs
sub
int
jmp
ljmp
xor
mov
mov
sub
inc
dec
ljmp
ljmp
test
repz
push
ja
xchg
cmp
add
std
cltd
mov
push
in
and
mov
sarb
arpl
ja
mov
xchg
rclb
mov
jns
push
xchg
and
jne
lret
mov
xchg
cmp
or
shll
jno
adc
and
push
insl
repnz
push
dec
cmpsb
pop
scas
pop
imul
adc
adc
aaa
push
xchg
cmp
cmp
imul
repnz
fs
mov
cli
pop
arpl
leave
sti
xchg
das
dec
imul
pop
imul
sub
lock
in
cmp
das
stos
jbe
jecxz
push
sar
je
rcrb
sub
inc
inc
in
pop
push
movsb
push
insb
dec
lcall
in
out
or
aas
mov
sbb
idivl
out
xchg
dec
aam
test
in
testl
mov
orl
dec
xchg
mov
jp
or
push
sbbb
jmp
jo
push
outsl
aaa
or
adcl
ds
lock
testl
mov
add
aam
frstor
test
or
mov
jns
int3
jns
shrl
mov
repz
int3
aas
push
in
jo
lret
jbe
push
in
inc
adc
sbb
pop
ds
cld
or
ss
sti
test
lods
mov
inc
pop
push
sahf
mov
dec
nop
shl
hlt
pop
movsb
stos
add
fstp
ret
inc
mov
jle
push
leave
adcb
mov
cltd
add
mov
cmp
arpl
lock
jae
dec
mov
fst
jno
pop
pop
adc
lds
push
jo
mov
stos
adc
jbe
cwtl
dec
mov
int3
jnp
cmp
xchg
cmp
jl
push
sbb
dec
arpl
sti
fdivp
xor
popa
mov
xchg
sub
dec
sbb
xor
or
repz
jb
movsl
push
jne
sub
test
mov
and
popa
icebp
loop
mov
adc
mov
repz
into
sbb
xchg
cmp
dec
lock
addr16
cmp
fisttpll
cmpl
in
jb
sub
cmp
in
cmp
test
cmp
sti
adc
ljmp
orb
cmpsl
test
pop
or
jae
bound
adc
add
scas
jmp
push
jmp
test
ljmp
loopne
movsb
push
sbb
pop
pop
fnstenv
stos
sub
pop
jb
pop
imul
aas
mov
jge
cld
dec
mov
cltd
scas
or
or
pushf
or
orb
xlat
clc
sbb
add
sbb
and
cmp
jns
stc
pop
jo
lods
inc
fsubr
jns
daa
and
xor
aas
add
fdiv
insb
or
enter
cmpsb
mov
add
cs
es
rcrb
in
sub
cmpsb
out
mov
or
jns
test
push
aas
arpl
or
aaa
hlt
inc
sbb
mov
outsb
cmp
mov
addr16
insl
mov
jnp
xor
cmp
cwtl
stc
mov
pop
sub
test
rcrb
pop
dec
jle
sahf
int3
les
jle
es
xchg
movsb
test
stc
mov
pop
out
mov
imul
jbe
scas
call
fstpt
jae
push
and
repz
and
ss
dec
mov
es
popf
sahf
sti
push
sarb
sub
stc
pushf
xchg
rolb
adc
lahf
push
enter
fiaddl
shrb
xorl
rorb
cld
mov
push
push
or
fwait
das
ret
mulb
imul
dec
push
stos
loope
jno
mov
xchg
pop
lahf
lods
popa
add
xor
cmpb
sarb
iret
popf
in
dec
bnd
cld
jno
mov
inc
inc
daa
mov
mov
pop
test
mov
sub
cld
lock
ret
and
gs
les
sbb
ljmp
mov
sub
aaa
mov
popa
sub
rdpmc
shlb
xchg
adc
push
ficoml
add
shlb
ret
outsb
fstpl
in
pop
roll
fdivrp
incb
pop
outsl
or
add
jbe
sub
fsubrs
ja
push
mov
mov
cltd
loop
popf
or
addr16
out
loopne
sub
pushf
repz
imulb
sub
pusha
pop
pop
cmp
jg
dec
dec
in
mov
mov
push
shrb
pusha
mov
das
inc
adcl
lock
or
test
nop
in
push
shll
push
sbb
rolb
xchg
mov
sub
dec
mov
test
fmuls
int
xchg
out
mov
fdivrp
or
cmp
insl
dec
push
rep
mov
hlt
mov
inc
arpl
shll
dec
jle
dec
mov
fsubrs
iret
data16
maxps
or
dec
fwait
or
jne
mov
out
adcl
sarb
stc
popf
push
cmp
lret
lret
mov
clc
dec
pop
cwtl
popf
fnstsw
ret
push
out
push
in
fbld
jp
cmp
cmp
or
insb
xor
mov
cmpsb
add
or
sahf
dec
pop
xchg
pop
push
jmp
popa
icebp
jo
inc
mov
pop
hlt
mov
dec
pop
int3
xlat
jnp
fdivs
jo
dec
aad
cmpl
xchg
mov
mov
out
fcmovnb
cmp
sub
out
jns
xchg
out
dec
sahf
sub
sbb
adc
sub
or
movsl
push
decl
sbb
sar
xchg
pop
xchg
test
xor
addr16
shlb
testl
std
cwtl
ds
mov
scas
pop
jae
rorl
in
test
mov
sbb
inc
pop
inc
mov
hlt
and
scas
xchg
lcall
js
mov
ds
xor
mov
in
fists
nop
push
dec
pusha
xchg
loope
inc
mov
lods
mov
in
insl
add
adc
rorl
push
push
dec
popf
pop
mov
jns
pop
rcll
jae
mov
or
cmp
mov
out
cmp
xor
pushf
mov
mov
xor
lret
add
inc
xchg
mov
enter
loope
inc
fdivrl
insl
js
dec
loop
punpckhbw
push
mov
pop
sarb
jg
icebp
mov
sub
pusha
rcr
mov
mov
mov
and
dec
loop
cmp
pusha
mov
loop
mov
adc
xlat
enter
mov
jl
jle
clc
lret
ret
fdivrp
call
movsl
sub
das
imul
pusha
lock
in
cmovle
stos
je
jno
aam
cmp
xorb
push
lahf
sub
rcr
out
int3
shl
sub
xchg
fs
cmc
inc
sub
mov
repz
xchg
cmp
sub
and
lcall
push
cld
cwtl
xor
sbb
xor
dec
and
mov
shrb
test
icebp
cmp
lret
pop
repz
and
mov
into
push
lods
or
loope
aad
xor
int
lret
xchg
mov
mov
scas
mov
push
cltd
fcmove
test
add
cmpsb
push
lcall
test
lcall
ror
lods
imul
jns
outsb
jp
adc
and
in
xchg
lahf
xlat
jmp
pop
loop
pop
ss
fisttps
cmpsl
sbb
xchg
shr
or
xor
mov
dec
sub
mov
or
pcmpgtw
call
aaa
mov
imul
dec
rclb
sbb
mov
xchg
push
pop
arpl
andl
push
lds
push
test
lret
mov
jns
fdivrs
pushf
pop
dec
push
in
hlt
inc
add
inc
inc
scas
pop
dec
mov
fs
in
cltd
gs
shlb
pop
fildl
mov
stos
insl
fnstenv
fscale
inc
fidivrs
xchg
into
push
insb
arpl
xor
test
shll
pushf
push
fisubl
push
fadds
rcl
ja
or
stos
xchg
cmp
hlt
dec
mov
aam
mov
shrb
dec
loope
or
xor
into
in
hlt
jg
pop
leave
sbb
jno
mov
push
scas
scas
inc
jle
mov
pop
jno
mov
sbb
das
popa
inc
lock
lds
adc
add
xlat
mov
insb
xlat
fsts
lahf
stos
imul
icebp
int
dec
ficomps
imul
mov
jge
jp
push
out
jae
pop
or
xchg
in
repnz
sub
push
out
cmpsl
jns
sub
mov
or
fdivp
mov
cmpsb
sti
adc
test
xor
adc
and
int3
cmp
scas
dec
pop
inc
push
jmp
dec
cmp
mov
lds
xchg
enter
fucomp
jae
xchg
sub
mov
scas
shrl
inc
sbb
add
jle
push
and
adc
outsb
xor
repz
cmp
adc
int
jae
std
pop
push
jne
test
and
testb
xchg
movsb
pop
cld
add
xchg
jl
mov
shrl
cli
cwtl
cs
in
and
icebp
mov
sbb
bswap
xor
push
std
sti
out
mov
jae
andl
push
movsb
cli
cmp
cmp
dec
xor
fldcw
pushf
sub
clc
jg
fisttpl
pop
cwtl
mov
or
out
mov
out
mov
xchg
xchg
les
ljmp
jle
nop
cmp
dec
loopne
cltd
cmp
mov
call
leave
mov
mov
sbbb
imul
jl
adc
push
sub
ret
cmp
jb
sbb
xlat
shl
les
cmc
pop
push
insb
cmp
out
xchg
pop
call
dec
and
jae
mov
data16
loope
sbb
sub
dec
mov
daa
loop
fsts
in
ret
inc
popa
out
dec
pop
push
or
js
pop
in
or
aas
outsb
jmp
jo
dec
dec
xchg
test
mov
pop
movsb
adc
and
in
lods
and
shrb
mov
sub
push
xchg
mov
inc
clc
and
push
cmp
add
adcb
lods
xor
adcb
imul
xchg
mov
or
pop
xor
mov
int3
lahf
call
js
sahf
lcall
and
mov
xor
movb
das
push
xor
push
mov
std
out
dec
jb
cwtl
lods
jbe
fbstp
jns
mov
jle
aam
ljmp
fcoml
mov
dec
in
in
popl
push
insb
add
arpl
jno
add
pushf
sub
cld
loope
push
loop
inc
add
or
icebp
js
imul
mov
dec
cmpsb
insb
aas
jp
pop
sub
lock
dec
pop
jae
pop
mov
mov
mov
jl
iret
mov
sahf
xchg
dec
or
insb
mov
pusha
inc
and
mov
addr16
or
insb
rorl
jnp
lret
aas
mov
lods
mov
popf
mov
jns
fbstp
or
mov
loope
popf
lock
cli
stos
stos
outsl
loop
dec
insl
aam
xchg
dec
repz
mov
inc
or
mov
aam
pop
push
add
mov
inc
mov
adc
push
push
popf
aam
dec
neg
popf
scas
or
shlb
push
mov
or
cmpl
xchg
dec
dec
loop
clc
push
cmp
lret
arpl
in
adc
filds
sub
sbb
pop
adc
scas
rclb
xchg
leave
mov
test
imul
sub
mov
add
lods
inc
pop
mov
movsb
test
inc
rep
ret
pop
inc
add
clc
jecxz
push
in
sbb
mov
fnstenv
in
sbb
sbb
iret
fcomip
xchg
cwtl
test
inc
inc
mov
fimull
sahf
mov
outsb
add
xor
jbe
cmp
and
add
sbb
aaa
jne
pop
scas
aaa
stos
mov
jg
mov
bound
cmpsl
jp
xchg
int
repnz
in
mov
imul
mov
add
inc
ljmp
loope
cmc
cli
sub
stos
repnz
jne
int
and
sub
sti
cmp
arpl
mov
sub
out
cmpsb
xchg
dec
fbstp
cmp
jecxz
out
cld
mov
stc
xchg
dec
out
and
paddsw
ss
imulb
adc
push
ss
mov
and
hlt
or
sbb
dec
rcrl
jl
adc
jecxz
xor
sub
push
xor
dec
sub
mov
cmc
negl
push
sub
adc
cmp
sbb
or
and
movsb
push
sub
pusha
pop
sub
inc
xor
xchg
ljmp
cmp
xchg
push
or
xchg
out
stc
enter
iret
or
jne
cmc
add
xor
int
ret
pop
cmc
in
lds
adc
lock
pop
addr16
jae
inc
xchg
jp
outsb
cmp
push
jp
in
ds
rorl
inc
fs
addr16
fcoms
test
je
sub
std
insl
aam
movsb
scas
mov
enter
push
dec
loope
fwait
inc
fxch
mov
popa
fcompl
cmp
jo
fsubrs
aam
ss
xor
daa
inc
lret
enter
sbb
cmpsb
push
or
movsb
movsb
pop
add
xchg
adc
pop
out
push
jae
xor
cld
push
push
push
aas
inc
push
xor
ffree
jne
sbb
and
jb
shrb
testb
leave
push
mov
cmp
cmc
xchg
ljmp
or
nop
mov
cmp
fwait
jge
leave
push
ret
sbb
push
dec
xchg
loop
mov
cmc
cmp
jle
and
insl
shr
cld
sysenter
jne
push
dec
aaa
int3
push
and
repnz
inc
push
cs
out
inc
or
mov
int3
daa
mov
aad
clc
lahf
add
mov
popf
stos
fistl
cli
je
call
lea
testl
push
popf
dec
pushf
xor
scas
movsb
cmp
in
lcall
mov
and
jp
dec
dec
pop
aaa
pushf
cli
pop
mov
jbe
pop
test
iret
cmp
mov
leave
mov
sqrtps
and
ret
or
ret
cmpsl
bound
sahf
das
mov
in
mov
insb
js
out
or
sarl
or
push
adc
xor
das
and
push
lods
mov
out
int3
fistl
les
rorb
shl
je
arpl
xchg
xchg
push
sbb
pusha
idiv
mov
jle
push
sti
ret
jb
int
hlt
loopne
outsl
fwait
sbb
xchg
insb
or
sbb
dec
fistps
push
test
andl
test
fwait
inc
cmpsb
xor
roll
scas
add
jp
scas
xor
aaa
mov
addl
xchg
aad
jecxz
ss
addr16
dec
pushl
ret
lahf
icebp
movsl
xchg
dec
push
cwtl
dec
mov
iret
addr16
lds
mov
test
test
xor
cmp
dec
data16
adc
in
mov
mov
orb
in
pop
in
add
hlt
inc
sbb
movsb
repz
pop
scas
sub
aas
and
jae
mov
add
dec
test
adc
insb
sbb
lcall
mov
mov
add
sbbl
push
inc
cld
inc
sbbl
ja
push
cs
imul
cmp
pop
sub
cmp
xor
sbb
pop
sub
jge
xor
cmp
xor
lds
push
xchg
cmpsl
lea
bswap
cld
ss
test
adc
add
or
subb
mov
inc
jp
out
inc
xchg
jmp
pushf
cmpsb
lods
adc
rolb
mov
out
add
nop
dec
jo
add
outsl
pop
scas
sahf
push
cmpsl
sbb
xor
inc
bound
dec
push
stc
nop
jge
mov
data16
ret
add
push
sahf
loope
xchg
movb
jmp
xor
pop
repz
push
sub
mov
int
mov
outsl
jge
jno
and
scas
pop
adc
lret
lock
dec
push
push
ss
cltd
and
pop
dec
loopne
push
push
out
and
xchg
das
add
ljmp
iret
pusha
mov
lea
data16
test
inc
adc
mov
loop
mov
add
rcl
addb
aam
fsubl
mov
cwtl
mov
pop
adc
imul
or
enter
sub
movsb
dec
sbb
mov
repnz
inc
movsb
sbb
jecxz
and
or
cs
pop
sbb
dec
jp
int
out
sti
das
mov
int3
cs
mov
sub
fnstenv
iret
sub
push
push
add
mov
mov
test
push
sub
outsl
dec
xor
mov
sarb
add
in
lret
and
loope
out
inc
test
enter
scas
xorb
push
add
or
sub
cwtl
test
jnp
sbb
scas
adc
mov
mov
insl
xchg
subb
subb
js
in
xor
loope
ret
adc
jns
addr16
ss
in
negl
aas
pop
adc
cmp
jecxz
ret
push
mov
push
adc
pop
loope
ja
cltd
int
out
xor
pusha
lea
push
or
lea
inc
ret
push
sahf
call
push
jmp
jmp
dec
or
or
out
dec
test
mull
incl
lea
popf
ljmp
insl
mov
fucomp
nop
fidivs
or
push
mov
cld
push
pusha
idivl
pop
shr
adc
mov
jno
xor
dec
or
adc
pop
ret
loopne
out
cs
pop
repnz
sbb
lock
mov
xchg
fnstsw
jge
imul
cmpsl
stos
jo
je
mov
fcomp
addr16
sbbb
nop
cmp
or
fdivrl
test
nop
push
sti
lds
xchg
dec
adc
push
pusha
mov
iret
adc
lret
test
in
fwait
mov
sahf
cmp
mov
push
outsl
add
bound
lods
js
leave
mov
call
ds
fs
inc
jecxz
or
pop
push
cmc
mov
pop
pop
outsb
leave
jo
test
push
mov
nop
jp
std
mov
mov
fld
hlt
jp
sti
mov
loop
adc
jo
incb
cmpsb
xchg
mov
aas
shll
pop
mov
lods
xlat
xchg
and
inc
pop
stos
xchg
sbb
icebp
dec
mov
lods
xor
daa
mov
pop
and
lahf
fdivrs
push
jns
cli
and
daa
add
mov
imul
sbb
xor
nop
inc
test
ret
add
iret
gs
xchg
into
cld
aaa
in
test
jge
mov
or
jae
sub
cli
push
jle
push
cmc
data16
gs
addr16
test
mov
mov
shrl
in
repnz
popa
fisubl
and
hlt
int3
sbb
orl
fcomip
nop
jle
dec
les
and
pop
fs
fists
mov
dec
lock
mov
pop
dec
adc
ss
mov
cmp
imul
push
cmc
dec
lcall
inc
daa
mov
push
insb
and
sbb
cmp
mov
das
jmp
lahf
push
clc
pop
fnstcw
jbe
vpmulhuw
lds
jns
xorl
ret
fistpll
pop
scas
inc
pop
dec
push
mov
fs
xor
or
add
outsl
push
push
mov
push
xor
pop
jae
test
test
sbb
mov
pop
loope
pop
jmp
xchg
mov
fldcw
and
into
gs
xor
clc
and
scas
xor
cmp
sub
xor
sub
popf
loope
mov
cmp
ljmp
pushf
popa
mov
jno
or
and
jns
xor
add
stos
pusha
std
inc
mov
in
movsb
dec
push
mov
das
aaa
dec
imul
dec
sub
mov
sahf
pop
add
jl
insl
sbb
dec
pusha
cmpb
rcl
cld
mov
es
mov
lods
mov
std
cmpb
jp
sbb
push
push
jo
add
sub
lahf
das
lods
into
and
leave
ja
int
imul
jno
out
mov
pop
sbb
lea
imul
mov
dec
and
roll
sbb
adcb
adc
mov
add
ret
stc
adc
add
and
inc
add
outsl
clc
aam
mov
lahf
sbb
in
outsl
outsl
loop
mov
filds
push
push
jno
dec
and
cld
daa
pop
scas
int3
sbb
mov
inc
fstps
and
jge
pusha
pop
lods
fisttpll
push
lret
arpl
call
push
jnp
andb
xlat
jne
mov
and
jnp
xchg
mov
xor
nop
mov
in
xlat
outsb
inc
push
scas
inc
gs
roll
in
jmp
js
mov
clc
dec
scas
push
cld
push
jle
mov
test
and
push
stos
xchg
pop
ds
stos
dec
inc
jno
fs
or
imul
test
loope
bound
add
out
iret
and
test
add
dec
sub
pop
sub
outsb
pop
inc
sub
fcoml
cwtl
dec
push
out
shlb
loope
dec
xchg
mov
clc
mov
aad
jmp
iret
cmp
cmp
inc
dec
inc
mov
xchg
mov
and
cmc
mov
or
mov
cli
pop
cmc
xchg
ss
mov
or
das
mov
lahf
and
shrb
sub
ljmp
inc
shlb
cmp
add
sbb
sbb
or
imul
xchg
xchg
notb
cmp
add
mov
addr16
mov
leave
add
filds
test
les
cmp
scas
les
or
jno
mov
out
and
mov
jp
lahf
dec
fldcw
mov
mov
and
in
sbb
sarb
or
fistl
add
shrd
add
nop
push
roll
push
insl
xor
int
lahf
arpl
pop
xchg
mov
lds
adc
popa
imul
fnstsw
dec
movsb
imul
test
es
stos
fbstp
mov
bound
ja
and
movsl
jbe
popf
mov
bound
jmp
aam
push
pop
ljmp
adc
mov
ss
jg
cmp
cltd
sbb
inc
dec
outsl
lock
sub
loopne
mov
xchg
jl
xor
popa
xchg
shl
pop
jo
add
xchg
inc
in
adc
sbbb
and
jp
inc
mov
cltd
lahf
lods
sub
jnp
sbb
notb
scas
jb
sahf
push
or
inc
push
xchg
adc
fisubs
push
jns
clc
dec
shrb
mov
cltd
mov
dec
data16
xor
stos
andb
jo
xor
jecxz
pop
repz
fidivrl
aad
jecxz
and
mov
jne
ljmp
push
jge
xchg
icebp
mov
shlb
cld
nop
aam
call
dec
cs
pop
jb
and
fstl
pushf
pop
ljmp
jb
sbb
or
and
add
cs
jecxz
xchg
pop
pop
sti
dec
or
loopne
scas
fs
xchg
in
fucomip
mov
xchg
sub
leave
cli
test
fimuls
sysenter
add
mov
and
ds
jne
push
mov
pop
mov
clc
in
add
mov
pop
in
mov
mov
push
cs
imul
cmp
mov
in
xor
mov
jne
cld
outsl
mov
sbb
leave
aad
add
stc
adc
xlat
xchg
mov
xabort
test
push
xchg
xor
inc
and
jnp
jp
cmp
inc
sub
and
add
test
popa
and
mov
inc
int3
std
cltd
fs
xor
mov
movsb
jecxz
sbb
scas
push
xchg
sub
dec
les
loope
sti
sub
lods
movsb
pop
inc
sbb
push
das
mov
pop
gs
in
jg
fbstp
in
test
imul
xorb
outsl
xor
pop
and
lret
xchg
in
notb
mov
cmp
or
push
and
push
xchg
mov
les
xchg
aad
iret
xor
vpunpckhdq
and
dec
dec
loopne
xchg
cmc
inc
dec
ret
dec
jmp
mov
xor
enter
fpatan
or
stc
sub
mov
stos
mov
push
jae
cwtl
scas
shll
mov
ljmp
dec
mov
lret
out
jle
mov
xor
mov
mov
cmp
je
push
mov
dec
das
sub
xlat
lock
cwtl
aas
test
inc
bswap
xchg
orb
movsb
adc
dec
xor
lahf
sub
sbb
mov
xchg
push
inc
jne
arpl
xchg
fsubrs
xor
adc
outsl
movb
mov
sahf
mov
bound
push
xor
mov
iret
and
mov
dec
mov
xchg
je
cwtl
lods
push
hlt
mov
outsl
addr16
ret
sbb
daa
sub
imul
xchg
inc
aam
jmp
ljmp
aaa
nop
daa
mov
pop
std
dec
mov
xor
shll
sbb
or
icebp
mov
cli
cs
pop
adc
testb
sbbb
out
inc
js
adc
fldenv
mov
sbb
nop
sbb
rcll
stos
out
stos
movsb
fmull
es
push
lahf
sbb
sub
and
mov
jb
clc
rcr
daa
mov
jl
sub
pusha
or
sbbl
cwtl
jnp
or
js
ljmp
push
fdivs
add
cmp
sti
mov
pop
jo
mov
pop
addr16
xor
inc
jge
vpunpcklwd
mov
dec
xlat
jbe
and
jp
sub
mov
add
mov
sbbl
push
add
ja
lcall
lcall
mov
pop
push
lcall
stos
rclb
mov
or
pop
cmp
enter
loop
loope
sbb
jbe
or
data16
ljmp
lahf
stos
sti
mov
andb
fsubr
ret
sbb
cld
xor
mov
fnsave
adc
mov
mov
lret
scas
call
pop
push
mov
pop
subl
xchg
jecxz
pushf
cltd
cmp
mov
subl
hlt
out
notl
push
jnp
dec
test
and
pop
out
das
rorb
mov
jmp
mov
fisttpl
neg
pop
dec
jns
aad
sub
scas
fsubs
xchg
sub
inc
sub
inc
inc
outsl
loop
loop
jle
andl
or
loopne
ret
in
sub
mov
mov
push
mov
rcrl
lds
fcompl
dec
dec
in
mov
imul
ljmp
jns
xchg
scas
mov
into
enter
out
xchg
loope
or
mov
and
aam
lods
mov
sub
test
xchg
or
sub
dec
es
pop
sahf
add
push
insl
sub
jg
inc
xchg
cmp
jmp
cmc
nop
inc
push
mov
push
movsl
push
jnp
fldt
inc
int
and
push
sti
loope
and
pop
aam
ds
sbb
mov
mov
cs
mov
mov
mov
fidivs
inc
cmc
mov
inc
fcmovnu
insl
out
inc
inc
fistps
jmp
mov
psllq
xchg
popa
stos
cmp
aad
rorl
fstl
inc
sub
data16
insb
pusha
aad
maxps
inc
cmp
popa
mov
xor
loope
jecxz
repnz
xor
cmp
clc
pop
test
and
mov
cmp
loop
dec
movsl
or
push
cmp
loope
jle
ja,pt
add
adc
cmp
dec
gs
lcall
sub
movsl
out
dec
loopne
inc
pop
rorl
repnz
outsb
dec
incl
fwait
in
mov
stc
sub
dec
or
outsb
iret
push
pop
cltd
clc
adc
int3
cmp
sahf
xor
dec
push
xchg
js
shlb
add
cmpsb
fisttps
and
xchg
cmp
pop
xchg
pop
inc
sarb
sbb
inc
mov
popf
dec
pop
into
pop
xchg
pop
fucomp
pop
inc
leave
lock
pushfw
mov
mov
push
stos
mov
bound
xchg
xchg
leave
fs
incl
aad
inc
popa
sub
xor
movsb
arpl
sub
movsl
gs
hlt
shll
cld
icebp
loop
dec
dec
mov
inc
iret
sbb
jnp
insl
mov
mov
or
mov
aam
or
stc
adc
negl
adc
add
popf
xor
lea
jmp
lahf
and
xchg
fsubl
mov
enter
fimuls
lds
jne
call
cmpsl
xchg
fistl
in
sub
cld
or
inc
test
mov
xorl
lret
jb
push
mov
inc
and
cmp
cmp
enter
enter
mulps
xchg
mov
out
lock
jge
sub
cmp
mov
cmp
cmp
xor
mov
or
push
ds
jmp
pop
push
mov
mov
out
push
add
push
mov
ret
or
sbb
loop
insb
adc
gs
aas
inc
and
mov
xchg
sbb
jp
stos
and
cmpsl
mov
je
add
gs
scas
dec
push
sbb
in
lods
add
in
dec
pop
sub
mov
test
aam
adc
xchg
jmp
xor
mov
loop
mov
dec
adc
sub
add
or
cmpsl
sarb
aas
jbe
cs
mov
mov
call
mov
sahf
andl
fwait
mov
test
les
xchg
sub
adc
repz
xor
cmp
shlb
or
inc
lret
movlps
ret
cltd
pop
imul
popa
sub
adc
enter
push
test
pushf
and
jne
cmp
add
imul
mov
adc
in
jne
inc
fidivrs
test
sbb
jbe
insb
filds
push
or
xchg
leave
int
test
jp
sarl
mov
pop
les
insl
adc
sub
pop
mov
jnp
mulb
cmp
idivb
xchg
adc
or
scas
xchg
das
add
arpl
nop
xor
div
jnp
jge
pop
gs
inc
scas
inc
jae
pop
fistpll
int
rcll
sbbl
jecxz
or
pop
lea
dec
or
and
lcall
dec
test
inc
mov
or
fidivrs
lea
data16
mov
adc
fisttpll
into
movsl
icebp
fs
loopne
mov
jne
xchg
and
imul
push
aad
stos
outsb
int
inc
fs
negb
xor
andb
add
out
mov
das
xor
arpl
daa
adc
push
lcall
lahf
ss
mov
cmp
lods
data16
mov
lret
in
test
add
inc
into
dec
test
fwait
ret
dec
inc
push
ds
push
pop
xchg
fwait
outsb
add
cmpl
insb
inc
pop
xchg
mov
loop
imul
sbb
mov
and
mov
pop
add
sub
xrelease
adc
and
adc
xor
hlt
and
push
roll
leave
pop
inc
cmp
ret
pop
sbb
in
mov
cmp
xchg
push
push
sub
push
test
mov
push
lods
bound
lods
adc
sbb
cmp
ret
sub
sahf
scas
pop
ret
adc
ret
lcall
jne
inc
pop
cmc
mov
int3
ret
pop
xlat
xchg
sbb
test
int
xor
push
cmp
ret
push
ret
and
nop
and
shlb
ret
mov
aam
mov
cwtl
jge
sbb
out
divl
lahf
jp
rcrl
stc
push
lds
repz
fstpl
sbbl
jno,pt
sbb
dec
xor
out
aad
xchg
or
xor
and
in
inc
fimull
jp
xlat
insb
popa
mov
arpl
dec
xchg
in
or
test
cli
out
mov
mov
inc
stos
mov
mov
shrl
push
mov
punpcklbw
xor
mov
shlb
or
sub
xchg
shrb
in
sub
pop
insl
ljmp
aas
sub
mov
addr16
iret
lret
pop
cmp
adc
dec
inc
lods
ljmp
ret
dec
stos
aad
out
stc
das
stc
orb
inc
xchg
and
and
sbb
sbb
jae
pop
xchg
sub
jae
mov
cmp
mov
shrl
jnp
gs
xlat
insb
imul
jmp
cmp
imul
lock
mov
fdivs
movsl
pmaxub
enter
jno
pop
arpl
adc
test
ret
out
cs
insb
sub
cmc
sub
or
scas
mov
pop
mov
mov
mov
sbb
pop
mov
and
lret
push
ficoms
xchg
cmp
cli
lea
incb
ds
pop
in
push
xor
xchg
gs
xor
pop
ja
inc
mov
and
push
or
push
mov
xchg
jp
inc
mov
int
push
in
shll
adc
clc
and
in
mov
dec
pop
rclb
dec
add
sbb
in
daa
mov
dec
es
pushf
and
aad
fldpi
xorb
push
pop
je
lea
xor
lcall
cmp
jae
test
scas
sub
sub
enter
dec
xor
mov
jl
loopne
xor
mov
and
inc
out
mov
test
ja
std
xchg
mov
in
mov
mov
enter
and
mov
mov
sub
mov
jnp
cmp
mov
leave
dec
cmp
aas
lahf
jnp
ret
sub
out
stos
jmp
jns
sub
cmc
movsb
les
inc
sbb
pop
dec
ret
mov
mov
pop
lock
scas
or
rcll
fcoms
pop
push
aas
outsb
pop
sahf
mov
lret
jecxz
mov
sbb
pop
xor
jecxz
pop
push
loop
aaa
rorb
inc
out
clc
ret
ret
ja
mov
rorb
and
fs
sarl
push
dec
jp
sbb
or
or
jg
into
dec
movsb
sub
jno
pusha
ss
lock
mov
sub
sub
xchg
pusha
daa
pop
testb
jle
jb
mov
loope
pop
frstor
cmp
repnz
pop
lahf
sub
mov
push
rclb
icebp
arpl
add
test
mov
mov
lret
xchg
adc
mov
jl
inc
mov
mov
mov
mov
push
inc
and
mov
sbb
and
push
clc
les
inc
repnz
iret
pop
cmc
jmp
addr16
dec
dec
mov
jp
inc
popa
jne
mov
mov
movsb
cmp
jbe
xchg
ja
or
xchg
mov
in
pop
mov
cmp
inc
cwtl
pop
mov
pop
shlb
rcl
cmp
lods
sub
jne
sbb
sahf
mov
lcall
push
dec
adc
aaa
into
or
ja
movsb
cmc
lods
and
dec
xchg
add
pop
rcrb
daa
lcall
xor
xor
and
loopne
lock
cmp
jne
pusha
sub
lea
cmp
xlat
aas
xchg
jmp
cmp
dec
sbb
nop
inc
aad
inc
and
fwait
and
cmpsl
pop
sub
pop
adc
aas
dec
pop
mov
push
cmp
mov
cltd
testb
cmp
mov
push
in
mov
aas
inc
lahf
xor
lret
inc
gs
je
rcr
addr16
adc
mov
mov
sbb
xorl
push
jb
outsl
test
ljmp
jb
lret
jecxz
call
daa
pop
jp
push
lods
sub
sub
and
mov
xchg
test
inc
mov
in
fsts
xlat
ljmp
push
xlat
scas
sub
hlt
fdivrl
sarl
inc
negl
ja
fimull
dec
nop
push
xchg
mov
adc
xor
sbb
incb
inc
arpl
loop
in
mov
pop
cld
xlat
mov
sub
pop
pcmpgtd
mov
cltd
jne
dec
int
cmp
push
stos
and
xchg
sahf
xchg
popf
add
test
xor
clc
cmovns
outsl
fldl2e
dec
push
enter
in
movsl
dec
movsl
mov
push
inc
mov
xor
lods
or
jmp
cmp
lea
mov
mov
loope
andb
mov
mov
insl
adc
jmp
mov
hlt
fisubl
jo
ret
addr16
out
add
repnz
test
dec
pop
cs
adc
add
pop
test
das
mov
adc
jns
loopne
cmp
pop
into
fmull
fidivrs
outsb
adc
jmp
lods
in
lret
repz
in
cmp
pop
jae
xchg
int
lcall
and
lret
aad
cmc
push
inc
jnp
adc
or
mov
inc
arpl
jnp
pop
movsl
xor
rcrb
mov
mov
fs
inc
pushf
push
and
out
stos
nop
aas
arpl
mov
sti
insb
xchg
dec
pop
cld
test
push
pop
adc
jbe
icebp
sbb
jno
and
mov
mov
add
inc
dec
jnp
mov
mov
sub
cmc
cltd
xor
cpuid
js
pop
ljmp
scas
or
aas
dec
jno
xchg
lret
inc
loope
xchg
dec
test
sbb
stos
mov
xor
les
out
dec
pop
aam
push
add
insl
mov
jg
push
jne
roll
xor
sbb
add
insl
je
add
mov
jnp
fnsave
filds
test
outsl
insb
sahf
pop
ret
imull
xchg
dec
fcoml
add
mov
iret
mov
sub
pop
mov
jns
add
mov
jns
adc
xchg
stos
pop
lcall
mov
out
cmp
pop
sbb
lcall
xor
and
inc
popf
cmovb
cmp
add
or
and
cmp
push
sub
leave
sub
dec
dec
ds
insb
cmpsl
sbb
mov
sbb
outsl
stos
imul
orb
fcompl
stc
xchg
jnp
pop
aam
pop
mov
mov
mov
sbb
xchg
dec
sti
push
fcoms
sub
ds
push
mov
or
leave
and
mov
fs
imul
hlt
add
jae
mov
xor
ret
sub
mov
push
insl
sub
ret
add
add
and
and
dec
xchg
sbb
jae
js
xor
jbe
lock
cs
je
gs
push
push
mov
push
pop
mov
test
inc
leave
xchg
ss
pop
xchg
popa
xlat
lcall
out
sti
bound
sub
imulb
jle
cmpsb
mov
insb
jecxz
fdivl
ljmp
adc
mov
movsb
jns
push
mov
add
or
imul
mov
es
mov
popa
and
enter
les
data16
mov
adc
push
sbb
inc
xchg
fisubrl
lock
dec
inc
push
pop
xor
sub
jmp
push
repz
ljmp
sbb
mov
cltd
dec
cmc
inc
pop
dec
out
push
cltd
aam
fadds
push
adc
dec
cmp
pop
jmp
xlat
pop
add
out
lcall
sub
sub
xchg
ja
in
daa
add
or
cmpl
lcall
stos
and
arpl
jae
or
and
cmpb
ss
pop
mov
xchg
cmp
ror
xor
sbbb
pop
int
add
inc
dec
les
pop
or
xor
dec
arpl
iret
xchg
insb
lock
jp
int3
xchg
outsl
pop
xor
lods
dec
mov
mov
inc
mov
dec
imul
stos
pop
sahf
lea
shll
repnz
xchg
in
mov
pop
ret
lcall
pop
adc
xchg
xchg
push
pop
dec
push
sub
cs
cmc
gs
loop
push
jl
push
cmp
mov
ja
jae
shlb
mov
cmp
idivl
loop
sub
sbb
inc
cmc
pop
les
dec
in
dec
icebp
stc
daa
add
arpl
sub
jp
sahf
enter
or
mov
aad
and
shll
jp
int3
aad
cmp
in
pop
jge
mov
jg
jno
adc
xor
lret
out
addr16
jnp
and
sub
dec
or
rcrb
jne
sti
popf
inc
cmp
das
xlat
xor
js
scas
mov
test
in
fisttps
scas
mov
jp
cmp
jmp
dec
sbb
jmp
add
mov
pop
out
jl
xor
movsl
mov
fisttps
sbb
lds
mov
pop
cmpsl
out
mov
stc
inc
push
fs
fsubrs
sbb
and
sarb
repz
fbld
pop
fldcw
loope
loop
cmpsl
lods
push
jne
add
movsl
push
lret
rclb
xchg
insb
dec
shll
es
outsb
aad
mov
mov
fucomp
inc
loop
cmp
inc
ret
les
sub
pusha
mov
jbe
sbb
push
xor
pop
xor
movsl
mov
xor
dec
and
in
decl
mov
xchg
fldpi
shl
xchg
jecxz
pop
jmp
or
jne
int
cmc
push
aam
lret
dec
mov
sahf
jno
paddsw
cld
cli
pushf
js
pop
xchg
int3
sahf
dec
push
in
mov
test
cmp
sub
mov
mov
jo
arpl
sbb
and
push
mov
mov
push
outsb
push
gs
mov
sbbb
mov
sahf
outsl
xchg
xlat
insl
lds
dec
push
mov
add
xchg
call
jne
xchg
aaa
les
cld
xchg
and
pop
push
leave
sbb
mov
hlt
outsl
cltd
adc
mov
sbb
cmp
sub
mov
ret
pusha
mov
xor
sub
cmp
cmpsb
cwtl
lcall
daa
test
stos
dec
scas
mov
roll
mov
adc
int
fsubrs
cmc
cld
jp
pop
insl
out
or
pop
aas
aaa
sahf
pop
std
sub
push
jmp
or
fiaddl
inc
mov
pop
cmp
jns
sbb
aam
mov
inc
shll
dec
jno
pop
xor
in
mov
lock
fldenv
or
xchg
push
adc
xchg
lods
subb
mov
adc
push
fmull
repnz
add
jmp
mov
add
inc
xchg
lods
cwtl
das
sbb
sub
imul
cmp
popf
push
js
adcl
jmp
sbb
hlt
mov
jge
sbb
cmpsb
iret
jge
pop
insb
xor
jl
mov
fistl
or
hlt
loope
callw
scas
and
sub
cwtl
outsl
inc
adc
fstl
scas
inc
in
fdivl
push
xchg
push
xor
add
icebp
mov
pop
inc
inc
ja
or
cmp
outsb
mov
push
jo
arpl
fidivs
sub
test
cld
and
scas
xchg
xchg
stos
mov
push
xor
xchg
push
popf
jns
into
inc
mov
scas
xchg
rclb
gs
mov
push
adc
jns
sub
cmp
fsubrp
mov
data16
cmpsl
bound
les
lcall
and
leave
and
out
sbb
sub
adc
ss
cli
pop
or
mov
shll
out
sbb
gs
mov
into
fs
cmovs
test
clc
lret
jb
lea
xchg
push
gs
mov
pop
js
imul
xchg
add
mov
rol
push
cwtl
mov
movsl
das
dec
push
mov
mov
lock
sub
andl
push
sub
mov
adc
jp
cld
ds
cli
adc
adc
jb
aam
mov
xchg
imul
lret
fcmovnb
cld
add
and
loop
sahf
add
inc
xchg
nop
daa
add
cmc
lds
inc
sub
add
test
pop
push
das
pop
pop
add
push
fwait
es
sqrtps
in
popf
les
xchg
jo
sbb
in
push
xchg
pop
int3
arpl
icebp
xchg
dec
mov
xor
sub
push
jecxz
add
cmpsl
ret
dec
stos
xor
out
jne
loope
fimull
sahf
lods
es
mov
fiaddl
push
addb
fisubs
je
out
cmp
jle
mov
rcr
push
outsb
add
or
adc
mov
pop
mov
push
aaa
movsl
dec
mov
fstpl
popa
rcrb
or
je
test
xchg
push
xor
cmc
mov
es
ja
mov
bound
nopl
sub
or
jno
int3
ja
push
addr16
orb
jns
mov
pop
sahf
xchg
mov
imull
or
leave
mov
fidivrs
fiadds
enter
push
and
sti
mov
fsubp
cmp
daa
cld
jnp
insl
ss
pop
imul
and
call
loope
lods
and
jno
xchg
add
pop
mov
pop
enter
mov
sub
cmpsb
std
in
inc
jecxz
push
sub
mov
lret
push
das
dec
and
psubsw
mov
push
mov
push
outsl
xchg
and
andl
cltd
dec
sub
xchg
test
rcrl
sbb
dec
in
pop
imul
sbb
or
cmp
aad
sub
out
fsts
sbb
lret
mov
mov
cmp
or
jl
mov
mov
cmp
pop
xor
je
or
cmp
jbe
inc
int
dec
dec
xchg
mov
mov
and
xchg
mov
push
or
clc
into
movsl
lods
stos
sub
outsl
sub
rcrl
mov
push
and
insb
nop
sbb
nop
mov
xor
sbb
mov
test
and
mov
add
mov
jg
mov
lods
repz
add
jns
imul
out
pop
decb
js
outsl
add
shl
rol
out
sbb
in
rclb
aam
xchg
outsb
aaa
push
aaa
imul
cmp
negb
into
jecxz
aaa
jmp
mov
test
mov
out
xorl
in
cmp
leave
xchg
imul
aam
sbb
pop
pop
push
cmp
faddp
in
lret
pop
xchg
lahf
or
xchg
add
xchg
push
fsubrl
or
add
lods
inc
into
pop
repnz
out
adc
mov
cwtl
xor
popa
mov
xlat
sub
aas
push
mov
out
out
xchg
or
in
mov
inc
or
mov
arpl
pop
imul
aaa
stos
lds
xor
cmp
mov
ljmp
ficoms
ja
xor
gs
add
push
jno
cmp
rclb
rclb
mov
xlat
fsts
or
addb
jnp
push
orl
sub
addr16
mov
dec
movsl
cmp
out
cs
dec
sub
push
scas
push
push
sub
in
out
test
sbb
jge
clc
mov
jecxz
rorb
je
or
or
je
shll
mov
adc
cli
test
rorl
jmp
cmpl
in
ss
or
mov
mov
adc
push
aad
ljmp
test
jle
stc
inc
jle
int
test
cld
cmp
outsl
add
decb
notb
imul
jge
jns
andl
pop
sub
xor
and
adc
xchg
add
push
orb
sbbl
cmp
stos
in
push
or
mov
movsl
repnz
fcmovbe
insb
mov
repz
inc
xlat
rcrb
push
loop
jno
mov
arpl
sbb
jno
notl
test
loope
loope
jmp
arpl
dec
hlt
push
in
adc
or
mov
in
int
addr16
xor
lock
inc
or
or
fwait
ds
or
pop
mov
popf
or
pop
std
xchg
nop
add
jo
or
aaa
cltd
cwtl
mov
mov
arpl
xor
lods
push
pop
and
call
pop
mov
add
sbb
fstpt
es
insl
cmp
xor
fldcw
mov
lahf
jp
mov
adc
lds
aaa
xor
and
dec
pop
push
out
dec
fistps
stos
inc
jo
cmp
push
mov
jecxz
test
mov
sub
jae
cs
arpl
dec
mov
fucomp
push
push
push
call
cmpb
stc
and
lret
test
imul
dec
shlb
in
cmpxchg
push
dec
dec
xor
dec
mov
push
mov
pop
and
cwtl
add
sbb
pop
pusha
lea
lahf
jnp
xchg
pop
imul
cmp
push
mov
push
sahf
dec
dec
cmp
mov
int
fcmovnb
xchg
stos
in
mov
mov
insb
cmpsb
adc
xchg
lahf
jo
ds
jo
jmp
jge
sub
inc
add
cmp
xor
cwtl
mov
xchg
sub
ret
and
mov
inc
in
mov
and
fdivl
mov
adc
notb
in
jo
and
xor
in
sbb
out
cmpsl
lret
jg
insb
cmp
frstor
ja
cmpsl
mov
stos
cwtl
mov
add
push
test
fwait
sti
mov
jge
into
subb
iret
stos
mov
inc
cltd
in
or
and
test
leave
gs
out
pop
sbb
sbb
repnz
cmp
sbb
insb
xor
jmp
xlat
adc
cld
mov
cmp
sub
dec
mov
cmp
dec
jg
outsl
lea
pop
pop
mov
into
jne
dec
insb
sti
icebp
decl
push
fsubrs
lcall
in
in
lcall
pop
dec
repnz
mov
push
jo
or
mov
insb
cmpsl
jae
in
dec
sbb
pop
sbb
inc
test
cld
xor
cmp
and
sub
enter
mov
adc
outsl
std
dec
or
ss
push
aad
daa
xchg
lods
and
lahf
ja
int
adc
das
mov
xchg
add
bound
addr16
ja
xchg
imul
stc
sub
repz
xchg
insb
add
test
or
xchg
pushf
and
fbstp
sub
lods
cmpsl
cld
sub
jbe
ret
dec
jg
push
mov
push
loopne
inc
push
int
fstps
pop
xor
inc
xor
and
insb
push
xor
test
into
push
and
lcall
and
xchg
ljmp
xlat
div
cmp
aas
pop
ret
das
loopew
pop
mov
cltd
mov
popa
cmp
loop
add
cmpsl
in
cld
sbb
xor
data16
push
mov
jge
fs
ljmp
stos
mov
sarl
sub
fcoms
mov
jg
dec
push
out
sahf
loop
rclb
xor
mov
filds
pop
incb
mov
add
aad
movsl
fdivrs
sbb
dec
mov
les
jmp
adc
pop
mov
jle
or
mov
sub
adc
mov
shll
fstpl
enter
push
cs
cmp
lahf
insb
rcrb
inc
cmp
add
mov
push
or
or
sbb
inc
push
imul
test
adc
push
add
and
jmp
es
xchg
sarb
sbb
outsb
ds
pusha
adc
test
or
repnz
push
adc
call
xchg
inc
sbb
mov
mov
outsl
in
imul
cmp
incl
movsb
cld
or
orb
inc
cmp
add
and
pop
and
dec
cmp
cmpsl
je
fdivr
popa
aad
or
out
and
les
push
in
stos
adc
jns
xchg
pop
cmc
add
mov
or
in
jno
inc
out
xchg
cmpsb
mov
outsb
out
cwtl
scas
sub
loopne
mov
jo
mov
mov
jge
xchg
into
call
lret
adc
dec
sti
cwtl
repnz
xchg
adc
enter
out
adc
aas
lds
cltd
pushf
cmpsb
mov
pop
mov
dec
sbb
cmpsl
ds
push
push
sub
pop
pusha
pusha
xchg
dec
adc
mov
and
insl
add
inc
xor
ljmp
pop
jp
add
or
imul
sti
leave
mov
sub
push
or
push
mov
hlt
fwait
in
lds
aad
push
jns
and
inc
dec
test
fidivrs
lcall
and
dec
test
les
and
pusha
por
mov
shlb
ret
sbb
push
movsl
test
mov
xchg
mov
sahf
sub
dec
sbb
mov
push
pop
and
mov
gs
mov
incb
addl
insb
jo
xor
sub
dec
mov
sbb
test
xor
mov
xchg
fidivl
dec
dec
or
push
lods
sub
je
das
orb
stc
fdiv
in
cs
cmpsb
lock
inc
xor
shl
dec
dec
pusha
xchg
ljmp
and
lret
xor
arpl
mov
jbe
sub
test
scas
push
mov
ja
sahf
xor
in
mov
mov
dec
cmp
and
outsb
sub
mov
les
pushf
imul
sti
push
shll
leave
ret
out
fdivrs
push
loopne
jae
pop
adc
outsl
cwtl
mov
test
ficoms
outsl
test
cmpsb
cmp
mov
push
fsubrl
iret
and
or
data16
mov
xor
jnp
adc
test
pop
push
xchg
mov
adc
call
stos
mov
pop
mov
mov
hlt
xor
out
cmp
sbbl
outsl
out
cmpsl
shll
mov
ds
outsl
cltd
cli
inc
sti
pusha
xchg
shr
inc
out
mov
pop
sbb
ljmp
push
mov
push
and
data16
inc
xchg
lods
jmp
jns
pop
jno
pop
ret
lcall
out
and
mov
push
dec
sub
fwait
dec
fiaddl
jle
std
and
cli
mov
and
mov
pop
insb
and
rol
xchg
dec
in
clc
inc
xor
leave
int
sti
incl
mov
and
and
mov
or
test
jle
jp
jae
pop
shrb
rcrl
pop
push
fistpll
lds
xchg
repz
or
push
shl
decl
xchg
inc
jo
cmp
sub
fidivl
pop
adc
add
in
or
dec
enter
jp
pop
jbe
dec
movsb
ficomps
loop
repnz
sahf
adc
imul
xor
jo
push
or
dec
out
dec
pop
mov
fwait
mov
mov
fldt
jns
icebp
xor
repnz
dec
sub
packssdw
rcrb
xor
imul
sbb
mov
int
aas
push
mov
and
ficoml
ss
gs
popf
inc
dec
out
cmpsb
fists
adc
cmp
adc
jbe
out
pop
in
push
cmp
test
lods
jo
push
xchg
fisttpll
ds
shr
test
xchg
outsl
jns
cwtl
or
mov
les
adc
xchg
xor
mov
test
mov
ljmp
fidivl
mov
movsl
cmpsl
and
pop
out
mov
push
in
jmp
jmp
test
push
pop
aaa
mov
sbb
and
pushf
cs
ss
imul
scas
lret
jno
or
dec
add
xchg
sub
dec
int
xor
pop
scas
adc
jnp
or
lock
cmp
aad
dec
jns
fabs
js
adc
scas
xchg
das
mov
pop
pop
pop
repnz
or
mov
lret
lock
in
xor
fistpll
pop
in
xchg
es
cmc
frstpm(287
decl
add
ret
adc
in
nop
aam
xor
xor
jnp
lds
outsl
out
mov
mov
mull
in
out
and
inc
in
icebp
inc
add
cmp
cmpsb
loop
cmc
ss
xchg
cmpsl
sub
sahf
repz
fucomip
ss
jae
loope
lock
aam
cmp
and
mov
nop
pop
mov
mov
loopne
sbbl
fstpl
daa
and
and
mov
sbb
and
xchg
mov
mov
fisubrl
mov
mov
dec
adc
sbb
es
sub
inc
test
push
cld
pop
iret
test
push
out
xor
push
and
nop
jo
jle
les
inc
lcall
dec
out
cmp
mov
jnp
shll
mov
cld
inc
cmp
xchg
sbb
push
adc
sbb
jo
pop
aaa
lcall
push
sbb
pop
mov
add
js
mov
or
inc
and
push
adc
popa
xor
push
cmpsl
inc
popf
or
xchg
pop
cli
push
or
push
addr16
cltd
ja
mov
scas
jno
pop
lahf
stos
lea
dec
sbb
movntq
inc
jne
cmp
aad
sub
dec
lods
shlb
jge
pushf
daa
lcall
fildl
mov
jo
std
lods
inc
mov
repnz
push
cmp
divl
mov
inc
movntps
inc
out
mov
je
je
test
mov
push
iret
pop
sbb
sub
mov
mov
jno
lods
out
mov
stos
loop
std
pop
or
adc
loop
jno
shlb
fldt
mov
hlt
mov
hlt
and
xor
cmp
mov
mov
adc
inc
mov
repnz
cmpsl
fiadds
jmp
mov
jmp
arpl
cmc
outsl
xor
and
jo,pn
repnz
inc
xchg
xlat
sub
scas
xchg
subb
xor
cmp
testb
mov
xchg
xchg
repz
cmp
sti
scas
mov
push
sub
push
call
cli
ljmp
int
xor
mov
jne
ds
pop
cld
pop
inc
xor
add
aaa
gs
sub
cmp
mov
adc
inc
push
fdivr
scas
mov
dec
mov
dec
fcoms
sti
loop
mov
or
xchg
mov
mov
mov
das
add
outsl
loop
scas
mov
and
int
outsl
jnp
sub
dec
fwait
ret
call
mov
fwait
jg
add
ret
mov
imul
jo
or
push
adc
movsl
stos
fisttpll
insb
scas
push
scas
shll
add
in
sbb
jg
lcall
aam
cli
repnz
cmc
es
jne
mov
lret
pop
sbb
movsl
imul
xor
xchg
lds
dec
pop
push
push
dec
ret
jle
mov
es
popf
jo
or
jae
adc
xor
xor
notl
pop
js
pop
jmp
push
jne
jbe
icebp
push
mov
jl
push
jne
inc
cli
or
aaa
nop
call
int3
mov
call
add
int
data16
adc
int
aam
shrl
jne
push
push
lock
icebp
mov
test
push
cmp
sub
jnp
inc
lods
fs
dec
bound
pop
in
loope
push
jns
and
adc
pop
lahf
ja
movsl
inc
in
and
xor
dec
jecxz
adc
aas
sbb
imul
shll
mov
or
lea
add
sbb
jl
add
mov
xchg
sub
iret
divl
hlt
lcall
lret
xchg
mov
jle
loop
mov
push
cmp
repnz
call
int
mov
mov
insl
pcmpgtw
cs
enter
stos
cmp
inc
jecxz
out
jne
push
in
pusha
push
std
xchg
repnz
sar
fcoml
push
aas
dec
stc
xor
insb
add
dec
not
imul
inc
fwait
mov
or
xlat
repz
jno
add
fwait
mov
fwait
cmpsl
and
cs
aas
imul
int3
pop
ja
push
or
mov
xlat
outsl
cli
es
sbb
pusha
aas
or
and
jecxz
gs
outsl
test
xorl
add
pushf
mov
pushf
and
les
outsl
inc
pusha
divl
ljmp
mov
push
insl
ljmp
hlt
fwait
movsl
or
cmc
mov
aam
push
push
pop
lahf
jbe
inc
xchg
and
out
imul
adc
pop
loopne
cmp
cmp
mov
mov
push
mov
add
sbb
or
xchg
jb
xor
nop
mov
and
push
add
push
lods
xor
xchg
mov
hlt
repnz
daa
fdivs
or
or
inc
cs
mov
push
sarb
cmpsl
xor
mov
arpl
das
repz
xchg
adc
and
cs
das
push
push
push
shll
push
sbb
inc
sarb
push
cmc
insb
inc
popf
sbb
sahf
imul
add
insb
leave
mov
movsb
repnz
add
loop
push
daa
pop
dec
sbb
push
fdivs
out
sbb
mov
mov
loope
ret
sti
shrb
sbb
inc
lds
icebp
lahf
call
xchg
and
es
fcomip
insl
or
imul
pop
sbb
inc
out
add
push
loopne
repnz
cmp
dec
mov
mov
push
pop
lret
jecxz
bound
jnp
arpl
mov
adcb
and
out
scas
and
fidivrs
pop
mov
mov
push
jo
dec
sub
and
cmp
mov
addl
test
sarb
stc
pop
jmp
mov
out
test
and
setl
fdivrs
stos
mov
es
test
and
inc
pop
mov
sbb
jne
dec
jno
sbb
rcrl
imul
hlt
insl
lret
ficomps
aad
xchg
push
cmp
jb
adc
pushf
and
sbb
mov
mov
leave
lcall
jne
fsubs
and
movsl
enter
lds
xorb
mov
out
push
push
mov
enter
mov
xlat
outsb
cmp
sub
gs
and
mov
and
mov
mov
or
xor
ret
std
jg
ss
adcl
loop
scas
xor
add
jnp
pusha
fisttpl
and
in
mov
sbb
mov
nop
movsb
and
movsb
popf
mov
sub
out
dec
mov
add
mov
jl
inc
out
sbb
jbe,pt
in
jnp
sti
lods
push
lea
fnstcw
mov
rcll
or
push
cmp
jno
test
push
ljmp
inc
fstps
bound
popa
lret
int3
ljmpw
pop
pop
jecxz
xchg
adc
pop
pop
lcall
mov
scas
lds
cwtl
pop
ja
fnsave
cwtl
loope
out
filds
fldenv
mov
insl
iret
jle
or
dec
push
ljmp
jno
jecxz
imul
mov
roll
mov
or
aad
xchg
decl
pop
das
add
loop
push
push
out
andb
pop
mov
fdivs
ljmp
inc
push
adc
inc
pop
sub
xorb
pusha
pop
push
outsl
stc
lods
int
push
stos
scas
inc
fnsave
dec
pcmpgtd
inc
or
pusha
js
into
gs
jle
jecxz
inc
push
add
dec
add
xor
outsb
std
mov
in
fwait
jg
jge
int3
and
sarb
ret
and
pop
jecxz
push
xor
popa
xchg
push
test
mov
or
xchg
loop
movsl
cmpsl
or
inc
imulb
jae
repz
xchg
inc
inc
xchg
cmpsb
bound
mov
xchg
adc
push
inc
push
sub
fcmovnbe
mov
test
mov
sti
movlps
mull
mov
in
outsl
mov
mov
cmp
subb
cwtl
dec
mov
iret
leave
lock
aas
xor
push
ja
push
stc
scas
les
lds
ljmp
aaa
dec
dec
lock
out
and
bound
xchg
sub
ret
enter
ja
lock
cmp
popa
ljmp
cmpsl
clc
jecxz
rcrb
cmp
int3
jle
inc
fisttpll
mov
add
in
xchg
fcmovnb
mov
jae
pop
in
fidivl
jl
mov
xchg
lds
mov
rcll
cmp
test
push
push
xor
xchg
arpl
decb
pop
xchg
sti
fdivr
imul
stc
or
adc
mov
push
cmp
push
insb
jl
in
rclb
ja
jne
fdivrp
cld
aad
cli
lea
cmp
push
inc
gs
sbbl
inc
jp
xchg
and
mov
or
enter
mov
pop
cmp
inc
fstl
cmp
cwtl
das
pusha
insb
xchg
mov
xchg
rorl
pop
mov
fbstp
rcrl
mov
std
sbbb
cmp
lahf
das
mov
es
jle
mov
lcall
mov
jne
pop
insl
aaa
jb
jmp
xor
sub
aam
cwtl
or
mov
dec
cmp
xchg
xchg
fiadds
mov
pop
lods
std
pop
push
jb
je
andb
daa
dec
je
or
fadds
mov
fcoml
div
shrb
in
fcmovb
push
insb
ret
mov
ret
dec
cmp
fnsave
add
addb
or
push
out
sub
pop
fs
pushf
jle
mov
adcl
mov
push
adc
xchg
push
fwait
xchg
sbb
inc
cmp
cmp
shll
adc
push
movsb
mov
jne
sbb
pop
jno
sub
cmp
mov
jp
and
cli
mov
enter
insb
xchg
xchg
push
call
pop
jo
jns
xorb
sbb
mov
je
or
outsb
aas
or
add
lcall
xchg
addb
inc
jg
sbb
addr16
fcmove
orl
mov
jmp
and
mov
mov
js
jle
sub
sub
pop
adc
inc
xchg
mov
outsb
xchg
or
mov
cld
daa
outsl
fmul
and
les
arpl
in
mov
xchg
cmp
push
mov
cmp
mov
push
imul
xor
sub
ret
or
ljmp
enter
push
push
fsts
or
mov
dec
les
xchg
add
inc
xor
push
or
dec
pusha
daa
lcall
dec
dec
push
ljmp
push
or
iret
add
in
dec
addr16
mov
pop
mov
push
fisubrs
out
add
inc
lods
or
daa
dec
cmp
lcall
cmp
shlb
arpl
adc
xchg
dec
push
fcomps
inc
fistpll
xchg
out
popa
lock
fwait
dec
repz
outsl
lret
jb
loope
testl
dec
or
jg
xor
cmpsb
dec
xor
mov
inc
sub
arpl
sbb
out
scas
aas
cwtl
push
xor
rcr
sbb
repnz
arpl
fcompl
push
test
xchg
mov
push
stos
das
pop
ficompl
mov
outsl
jo
pop
or
loop
cmp
rclb
les
mov
into
das
stc
push
and
dec
cmp
xchg
repnz
cwtl
sbb
sbb
cltd
inc
lcall
xchg
call
addb
mov
cmp
jg
ds
test
adc
mov
dec
shlb
xlat
push
cmp
mov
lods
cmpsb
cmp
inc
mov
pop
popf
mov
xchg
add
ret
sahf
push
loope
xor
lret
or
mov
stc
push
out
test
mov
jbe
scas
sub
fildll
scas
and
xor
mov
mov
aam
nop
xchg
sub
clc
or
mov
sub
sbb
xor
xchg
dec
xchg
sub
pusha
out
lock
pop
lahf
ret
jg
xchg
sub
sub
dec
xchg
out
mov
sub
pop
ret
xchg
jle
loop
hlt
outsb
loope
cli
cmp
sub
mov
icebp
or
into
test
fisubrs
cmpsb
push
addr16
es
cs
cmpsl
pop
out
xor
jbe
sub
std
sub
mov
fsubs
jb
mov
add
pop
aad
iret
data16
cmc
fsubrp
lret
leave
lret
or
mov
dec
gs
out
js
frstor
jmp
pop
fstp
mov
int3
fbstp
out
adc
into
loop
adc
push
stos
fadds
lds
in
outsl
jmp
or
enter
pop
dec
orb
push
popf
mov
inc
aad
xlat
insl
out
adc
fidivs
mov
cld
pop
ret
cmpsb
add
int3
mov
in
test
cmp
std
jecxz
add
sahf
xchg
and
xchg
or
dec
inc
adc
into
mov
push
mov
repnz
xchg
aam
rcrl
inc
sub
in
leave
fcmovbe
pop
and
push
mov
mov
inc
pop
xchg
aas
push
jno
mov
lcall
or
mov
xor
mov
lret
je
inc
movsl
imul
adc
adc
jmp
fldcw
lods
push
and
scas
and
mov
dec
pusha
test
adc
xchg
rorl
scas
pop
push
iret
mov
and
cmp
shlb
cmp
jl
jo
jne
add
cltd
rcll
sbb
xor
gs
movsl
lock
cmp
scas
push
mov
mov
int
outsl
scas
rcll
scas
sarl
lcall
shrb
fistpl
inc
cmpsb
lret
lret
mov
push
sbb
aad
pushf
mov
add
push
addl
mov
aas
into
mov
inc
cwtl
popf
sbb
test
and
jne
adc
pop
or
push
cwtl
frstor
sub
movsl
repnz
mov
xchg
ds
jne
insb
xor
mov
adc
andb
popf
inc
lods
mov
mov
sub
pop
dec
mov
adc
in
sub
arpl
xlat
cs
inc
mov
ror
iret
hlt
mov
push
dec
xchg
sbb
jmp
sahf
mov
lods
cmp
add
fs
cltd
jns
shll
iret
cmpsb
mov
and
pop
sub
int3
cmp
ret
jp
fimuls
imul
dec
fs
std
cmp
push
daa
jbe
fsubl
or
fwait
arpl
mov
sbb
xchg
push
dec
push
mov
lods
mov
pop
pop
ja
sub
por
cmpsb
push
ljmp
jno
push
dec
pop
sub
mov
das
ret
jp
xchg
push
pop
int3
arpl
out
outsl
dec
push
push
outsl
add
fadd
xchg
iret
in
cltd
ret
call
mov
push
inc
loope
push
cmp
mov
imul
push
les
mov
jns
sbb
mov
xor
lods
inc
push
jl
fidivl
xor
adcl
and
adc
aas
lret
idivl
mov
rol
pop
add
xchg
rol
cmp
lret
or
fidivl
and
lock
cmp
insl
push
push
nop
fnsave
xor
inc
and
and
mov
loop
and
pop
xorl
outsw
push
xchg
fcoml
mull
icebp
ret
xchg
pop
xchg
test
or
xchg
add
outsb
xchg
xor
rcl
jg
mov
pop
fistpll
lock
mov
sti
fs
and
xlat
mov
cld
movntps
aam
cmp
cmove
jne
pop
xor
les
dec
loop
cmc
aam
shufps
jmp
repnz
std
stc
sar
pop
sbb
mov
pushf
xchg
add
push
iret
or
gs
adc
out
cld
pop
ljmp
push
mov
mov
push
push
iret
andl
es
movsb
pop
jae
jge
cld
scas
in
mov
lcall
aaa
clc
push
fbstp
pop
adc
fsubrs
pop
mov
jge
fwait
mov
and
lea
popa
clc
inc
into
inc
hlt
xchg
jle
pop
jnp
dec
out
ja
int
subl
jp
jmp
rorl
inc
jmp
sub
or
jbe
subb
dec
xor
nop
stos
pop
mov
fnstcw
dec
addr16
push
rclb
mov
dec
or
mov
add
icebp
enter
cmp
mov
dec
pop
and
shll
fwait
loop
jmp
andl
cmp
adcb
scas
sbb
sub
aad
push
sbbb
push
and
push
or
sbb
push
inc
jns
dec
lods
inc
push
pusha
aam
and
ret
push
xlat
jecxz
insb
je
pop
jnp
test
mov
mov
cmc
or
fisubrl
or
push
inc
sub
je
xor
mov
add
insb
xor
jge
pushl
push
repnz
mov
pop
orl
lahf
pop
dec
aas
ja
jns
xchg
mov
test
mov
pushl
push
pusha
cli
out
jl
mov
cmp
repz
mov
push
inc
js
test
in
jg
stos
fs
adc
jns
inc
inc
adc
xor
fisubl
stos
cmpsb
mov
pop
shll
xor
repz
dec
cmp
jge
movsb
das
stos
sub
dec
ffree
jmp
js
fcoml
rcl
aas
inc
xadd
fs
out
or
imul
lea
or
xchg
push
cmp
hlt
addr16
leave
and
xchg
rolb
mov
leave
pop
add
dec
das
sub
mov
fsub
hlt
rclb
jmp
cmc
loop
sub
lods
jmp
es
shlb
ss
addr16
jne
ret
fdivrp
enter
ss
adc
popa
testl
and
movsl
int3
sub
xchg
iret
loope
lret
jg
test
call
in
jne
pushl
pusha
mov
enter
pop
es
dec
outsb
and
in
popa
mov
data16
pop
scas
cmc
xlat
or
test
and
sbb
ds
cmp
imul
cltd
lock
icebp
insb
push
sbb
xchg
cmp
fsubr
mov
ljmp
outsb
add
adc
sub
push
outsl
mov
repnz
inc
stos
mov
lret
arpl
cwtl
orl
shll
and
fmuls
bound
fwait
sti
jp
test
xchg
pop
ljmp
xchg
popa
fmull
cwtl
jbe
and
mov
push
sub
push
sbb
loop
pop
add
mov
std
xchg
xchg
cmpsb
daa
cmpsl
and
cmp
adc
test
int
fbld
jp
jecxz
mov
mov
shll
es
sbbb
sub
mov
push
rclb
jns
pop
jl
lret
shl
pop
push
les
adc
push
dec
cmc
lds
pop
setge
jecxz
mov
mov
lock
scas
pop
icebp
xor
lods
mov
ss
pusha
rclb
test
xchg
jb
inc
cld
mov
frstor
int3
out
jnp
jns
push
push
or
inc
sbb
es
das
fidivrs
add
hlt
test
inc
or
ljmp
jb
pop
imul
cmp
iret
imul
rcr
add
jo
js
sub
lock
mov
xor
inc
dec
adc
mov
cs
js
repz
pushf
in
push
adc
into
pop
jl
sub
andl
jae
out
popf
add
pusha
fdivrp
fucomip
adc
dec
inc
mov
xchg
adc
dec
sub
dec
adc
daa
cmp
insb
push
repz
in
pushw
movsl
pop
mov
lret
pushf
dec
mov
ds
sbb
sbb
jp
and
in
cmpsb
or
fistpl
dec
cld
fwait
xor
mov
enter
jnp
and
pop
aas
xor
xchg
sub
mov
sbb
xor
mov
aas
mov
pop
inc
mov
mov
xchg
addr16
sub
mov
cmp
out
lcall
repnz
pop
sbb
jle
shlb
popa
inc
xchg
xor
and
sbb
inc
jle
shr
jmp
xchg
add
sbb
jo
mov
fucomp
cs
pusha
or
leave
push
sub
inc
test
pop
cltd
je
sbb
test
pop
std
jno
test
dec
out
or
mov
mov
pop
xor
inc
sbb
adc
adc
add
adc
mov
outsb
in
scas
xor
outsb
jno
inc
call
mov
je
xchg
add
sarb
es
sbb
pop
mov
push
cmp
xor
sub
repz
jnp
mov
repnz
clc
in
jnp
subb
bnd
sbb
cld
and
or
sub
inc
sub
dec
fisubrl
ds
push
jb
fcompl
rol
adc
ret
pop
in
addr16
enter
adc
hlt
pop
sarb
pop
jno
cmp
into
pop
push
popl
inc
adc
hlt
imul
pushf
adc
inc
ljmp
push
aaa
andb
pop
push
int3
inc
push
fnstenv
test
out
inc
xor
adc
lods
test
sbb
adc
cmpsl
lds
clc
sti
addr16
fstps
shll
and
repnz
ror
mov
adc
jg
dec
adc
ret
cmpsl
vmovq
jnp
or
je
insl
add
xchg
sub
call
xor
push
xor
push
jmp
push
cwtl
aas
push
cltd
fiaddl
movsl
dec
cmp
cmpsl
sbb
stos
loope
shll
jo
sub
xor
out
sti
fisttpl
outsb
cmp
decl
xchg
or
mov
sbb
iret
adc
jb
out
jmp
mov
cmpl
jl
insb
jmp
sub
das
ret
mov
cli
repz
add
mov
push
lahf
xor
mov
ret
sub
mov
inc
jb
js
and
loopne
pop
out
and
add
dec
test
test
in
sahf
cltd
mov
insb
jno
in
push
xchg
mov
movsb
jmp
mov
imul
imul
or
scas
out
push
adc
push
repnz
jno
mov
ja
adc
and
inc
dec
aaa
ret
sbb
pushf
xor
or
inc
cmp
sbb
pop
lcall
addb
mov
jbe
jle
test
cmp
mov
clc
std
in
adc
inc
cli
seta
xorl
jg
loopne
movsl
js
out
cmpsb
jp
push
xor
lock
pop
inc
pop
loop
xor
dec
jmp
dec
mov
adc
ss
dec
mov
faddl
pop
in
imul
pop
outsb
das
mov
cltd
ret
out
out
mov
lret
xor
insl
jge
int
shlb
inc
pop
push
leave
push
movsl
cli
cmp
dec
fbstp
ljmp
scas
call
aaa
sahf
mov
testl
xor
stos
push
pop
sub
adc
sub
mov
fwait
jle
xlat
push
jl
ljmp
test
push
or
ficomps
mov
dec
inc
fstpt
jge
dec
pusha
xlat
xchg
jbe
push
std
add
mov
in
lock
fsubrp
add
add
cld
and
pop
and
fstl
mov
dec
mov
ja
cld
cmpsb
sti
xchg
fld
add
mov
enter
adc
sub
sub
das
xor
enter
testb
push
mov
dec
cmp
mov
aas
cmp
cmp
rep
cs
mov
rcl
call
dec
bound
int3
inc
inc
shll
pop
mov
jnp
repz
xchg
dec
sti
mov
lods
out
jmp
in
push
out
mov
mov
add
call
mov
jns
dec
imul
ja
sub
xchg
adc
lret
sub
repz
or
adc
inc
cmp
xchg
xor
pop
mov
pop
adc
mov
inc
mov
scas
xor
mov
sbb
add
out
dec
cmpsb
sti
rorb
repnz
inc
ds
jge
cmp
mov
mov
mov
mov
or
outsl
push
xlat
jo
repnz
dec
in
mov
adc
testb
jecxz
clc
adc
pop
bnd
hlt
dec
jp
fldenv
cwtl
rolb
push
hlt
add
add
adc
adc
rcll
push
mov
push
adc
pop
pop
xchg
test
cmp
sub
out
push
sbb
xchg
inc
orl
or
or
movsb
pop
jg
and
stos
mov
cmp
mov
push
repz
xchg
popf
sub
leave
int3
movsb
cld
scas
es
xlat
adc
inc
arpl
scas
scas
mov
mov
inc
sbb
sbb
sbb
in
int3
sbb
rcrb
aas
adc
aas
mov
outsb
clc
out
push
pop
ds
repz
pop
lods
pop
shll
pusha
push
mov
cmpsl
mov
inc
aas
movsl
xorb
sbb
inc
push
add
or
inc
xchg
mov
push
jl
adc
cmp
pop
xor
mov
sbb
inc
stc
fimull
mov
sti
out
call
aad
cmp
xlat
cmc
loope
sub
sbb
lods
insl
and
jp
inc
repnz
aaa
loope
push
xchg
fisttps
popf
mov
into
gs
ljmp
mov
inc
add
pop
stos
pop
inc
in
inc
std
inc
xor
call
subb
mov
mov
sbb
and
sti
dec
repz
aad
push
jne
neg
enter
dec
inc
pop
jne
pop
mov
adc
or
xlat
hlt
push
xorb
and
inc
cmpsb
jl
imull
les
roll
faddl
dec
std
rcrb
xchg
jecxz,pn
jb
jns
lock
pop
lcall
test
out
jnp
adc
out
js
les
aad
xchg
jge
mov
sar
push
es
mov
loop
es
push
add
mov
shr
mov
in
cmc
mov
mov
fisubs
or
stos
pop
nop
sub
push
stos
fists
adc
or
sub
insb
sub
xchg
lods
mov
and
cmp
pusha
clc
adc
sub
data16
pop
int
jge
sbb
add
push
sub
bound
aas
das
outsb
xor
or
dec
lock
push
jmp
rcll
cmp
mov
dec
loopne
adc
add
xor
in
mov
push
rcrb
je
sbbl
or
out
cmpsb
repnz
mov
das
inc
dec
sti
inc
push
ss
das
adc
xor
and
push
movsl
int
jp
fldcw
inc
add
xchg
sub
repnz
xchg
stc
out
mov
sub
xchg
out
call
dec
loop
test
push
mov
push
call
loope
scas
les
jb
subb
loop
xor
inc
iret
jb
pusha
pushf
dec
push
cmp
jp
in
jno
inc
add
sub
dec
mov
dec
push
cmp
inc
imul
jmp
xor
sub
mov
idivb
pop
mov
inc
dec
inc
jns
les
or
fstl
shll
jg
mov
dec
testb
movsl
xor
rolb
test
ret
lock
add
test
add
ss
stos
leave
inc
xchg
iret
and
mov
xor
xchg
mov
adc
in
pop
mov
xor
adc
inc
bound
ret
dec
xor
mov
imul
int
mov
movsb
cs
adcb
lock
dec
in
inc
pop
popf
jae
call
lea
jns
inc
ljmp
popa
cld
flds
push
cmpsl
enter
data16
inc
jecxz
test
aas
neg
outsl
scas
popf
add
pop
or
push
xchg
out
inc
xor
cmp
push
stc
iret
add
push
add
aaa
mov
jbe
test
xor
fwait
test
and
cmp
mov
mov
lret
xchg
sub
fidivs
mov
sub
mov
daa
mov
pandn
rorl
cwtl
testl
jg
popf
stos
fwait
cmp
pop
incl
xor
sub
sbb
roll
jmp
subl
mov
mul
mov
jne
mov
fsqrt
pusha
sti
pop
jge
xchg
fsubl
inc
cli
add
push
arpl
or
pushf
in
test
ljmp
and
shrl
orl
sbbb
and
push
xor
dec
sub
pop
xor
inc
pusha
insl
push
loope
xchg
push
adc
add
ds
out
repnz
pusha
pop
repz
push
pop
adc
jp
shll
shrb
out
outsb
clc
pop
bound
mov
ds
jle
jne
rcrb
dec
popa
mov
outsb
cmc
cmp
xor
iret
movsl
and
pop
add
loopw
in
sti
insl
inc
lods
push
inc
cmp
imul
cmp
mov
mov
adc
add
xchg
add
sbb
add
hlt
dec
stc
lcall
push
sar
mov
and
pop
jg,pn
sahf
insl
cmp
adc
push
call
test
cmp
scas
call
cld
fs
std
sbb
in
push
mov
pop
xchg
fs
mov
and
jnp
mov
stos
jmp
cmp
xchg
out
stos
in
jp
je
fdivrl
cmpsl
stos
mov
xlat
movsb
cld
aaa
mov
xor
fsincos
cmpsl
sub
mov
mov
lock
xlat
sti
mov
gs
xchg
test
jb
xor
les
add
stc
mov
jb
jp
ljmp
cltd
sub
lret
addr16
mov
push
jo
push
hlt
sub
adcb
jle
adc
mov
or
shlb
ret
ret
mov
pop
xor
in
stos
ss
fldt
popa
sbbb
add
mov
ret
fsubrl
push
rep
ljmp
dec
sub
jg
jb
test
ja
inc
cmp
pop
xor
cmp
or
sbb
inc
fcmovu
test
pop
mov
xchg
or
jecxz
adc
adc
cmp
push
push
mov
push
out
add
and
inc
jbe
out
cli
scas
xchg
repz
int3
loop
cmp
push
push
and
add
jmp
mov
hlt
cli
rol
nop
xchg
lods
test
xchg
ret
js
je
pop
mov
pop
adc
test
cwtl
pop
lcall
sub
mov
inc
dec
pushf
cli
in
cmp
out
test
fbstp
cltd
sti
adc
mov
lea
push
sub
insb
push
divl
test
add
pop
xor
pop
fcomps
dec
pop
icebp
jmp
add
xlat
sbb
push
adc
js
sahf
xor
inc
sbb
and
ret
call
pop
lahf
fnsave
mov
in
push
mov
pop
xchg
sub
jecxz
test
mov
xchg
pop
dec
out
cmp
jb
cwtl
in
pop
es
lret
mov
cmc
aas
lcall
rcrl
push
ljmp
jno
ja
enter
dec
cmpsl
out
fists
adc
cs
jge
jns
ss
dec
cmp
xor
and
aad
adcb
aad
out
sub
or
or
cmp
sbb
push
out
dec
sbb
pop
rep
pop
test
rol
jp
stc
scas
jae
mov
cwtl
out
call
mov
aas
mov
rorl
stc
aaa
sbb
dec
lret
dec
in
mov
push
jae
mov
pop
rolb
cld
lock
test
push
and
pop
cwtl
inc
pop
lret
ss
out
lret
daa
mov
or
inc
loope
cmc
lret
xchg
repnz
rcr
stos
ret
or
pop
test
adc
cmpsb
xor
data16
dec
nop
xchg
sbb
pushf
jl
pop
hlt
pop
jp
mov
inc
jnp
push
mov
pop
lock
pop
int
cmp
adc
add
std
cwtd
pop
je
and
xchg
in
sti
bound
sbb
sbbb
aaa
sbb
push
lret
mov
je
addl
stos
jp
or
sub
sbb
pop
rcrb
fdiv
mov
shrb
aaa
jbe
adc
adcb
js
mov
js
mov
iret
pop
cmp
pushf
sub
xor
test
scas
ja
cmpb
sbb
out
or
adc
repnz
iret
lcall
nop
iret
xbegin
std
cli
enter
jp
xor
fsubs
add
mov
gs
lahf
loopne
add
xchg
div
test
inc
movsl
ss
outsl
dec
mov
sub
pop
test
xorl
xchg
or
pop
lock
xrelease
js
test
xor
fistpl
or
popf
dec
jecxz
cmp
lods
int
dec
jnp
in
cmpl
cli
dec
dec
loop
call
sbb
enter
lods
pop
xor
ds
jge
addr16
ja
push
scas
jmp
std
or
aaa
pop
mov
fldt
cmp
cmp
dec
cld
or
repz
sub
push
pop
adc
jl
imul
out
insb
jmp
jo
cmp
sbb
mov
mov
rcl
mov
popa
fcompl
mov
pop
repnz
dec
cmc
cmp
cs
dec
pusha
addr16
fsubrl
lret
lea
mov
jbe
fsubs
aas
sub
pop
int
clc
or
mov
cli
std
cmp
push
jle
mov
outsl
into
sbb
arpl
ja
dec
sbb
pop
mov
inc
enter
sbb
jb
mov
aaa
scas
jnp
hlt
mov
popf
inc
lock
and
cmp
add
shll
push
mov
jo
pop
in
sti
dec
sub
ds
mov
imul
xchg
mov
movsl
notl
add
mov
adc
sub
xor
imul
mov
pop
and
sbb
divb
pop
mov
shrl
ror
cmp
or
cmp
mov
ljmp
cmp
out
cmp
push
mov
pop
hlt
mov
imul
dec
add
cmc
mov
and
insl
inc
cwtl
into
pop
jle
jmp
xorb
faddl
sti
mov
xchg
jge
loop
rcrb
sub
bound
and
loope
mov
inc
jmp
mov
ljmp
in
or
push
movsl
outsb
fistpll
mov
push
lcall
nop
arpl
jmp
sub
in
out
fimull
mov
movsb
cwtl
mov
daa
jg
sbb
fimull
sbb
xor
inc
cltd
insl
mov
outsl
add
popa
fdivl
push
test
pop
and
xchg
push
xor
jmp
adc
mov
mov
adc
or
ds
stos
imul
outsb
sbb
add
clc
les
xchg
mov
ret
add
fsubrs
xchg
cmpl
sub
addr16
jp
dec
nop
or
pop
cmp
aam
jg
xchg
push
call
lret
out
mov
or
mov
scas
es
mov
insl
xchg
pop
xchg
cli
cmp
or
pop
ud1
call
jns
inc
jecxz
jle
sub
mov
jecxz
push
movb
mov
sub
ljmp
xor
pop
shl
mov
sti
or
mov
inc
ficompl
dec
dec
int
popa
neg
or
icebp
subb
lahf
mov
mov
jge
test
mov
fidivrs
pop
pop
repz
dec
add
divl
mov
enter
in
ret
xchg
imul
shrb
lret
mov
stos
lock
mov
ja
jle
xorl
in
arpl
ss
fldt
std
xchg
test
pop
es
mov
inc
out
and
inc
mov
pushf
adcl
mov
sbbl
das
inc
push
cmp
es
or
ret
mov
movsb
scas
sub
add
adc
mov
jecxz
and
pushf
xor
mov
and
cli
push
push
movsb
xlat
insl
rorb
out
pop
mov
je
cld
fdiv
test
sti
xchg
push
adc
sbb
test
ja
aam
fwait
and
xchg
sahf
out
shr
xchg
pop
push
jnp
out
nop
pop
sub
jne
pop
aas
pop
xor
xchg
sub
sub
pop
imul
ja
and
pop
adc
test
dec
ret
mov
movsl
inc
lock
negb
mov
jnp
xchg
cmpsb
insb
outsl
daa
lds
mov
scas
es
mov
inc
xchg
push
xorb
clc
icebp
cmp
dec
jl
sub
cmc
mov
cmp
push
fisttpl
xchg
or
mov
or
pshufw
dec
and
dec
fisttpl
adc
gs
xchg
stos
lcall
testb
xchg
movsb
ss
mov
dec
mov
addb
mov
fs
cmc
jno
nop
jl
stos
std
jl
mov
and
test
ljmp
push
jnp
mov
fisubrs
pop
add
pop
fstps
bound
mov
jno
push
sbb
sarb
imul
adc
aas
mov
sbb
ficoms
jg
xchg
cmpsl
bound
negl
push
inc
push
fimull
fbld
arpl
pop
cwtl
pop
push
scas
lock
xlat
enter
stc
inc
adc
fildll
sahf
cld
test
cs
lock
pop
into
loop
xchg
out
in
fwait
mov
arpl
in
xchg
xchg
mov
inc
rcl
mov
sti
sbb
dec
mov
or
shll
jecxz
push
mov
ss
icebp
xchg
movb
jge
or
mov
bound
inc
xor
lds
lahf
negb
mov
ja
sbb
mov
test
xchg
test
jne,pn
popa
cmp
mov
imul
sub
fsubr
inc
in
dec
inc
xchg
xor
lods
jne
repnz
mov
dec
icebp
lds
cmp
xchg
ss
test
imul
or
sub
lods
cmovge
and
call
jae
stos
inc
lods
push
adc
adc
xor
daa
data16
into
sarl
push
push
xor
pop
add
cmpsb
lock
cmp
push
mov
fsubrs
popa
jg
or
inc
bound
or
add
sbb
shl
repnz
push
or
pushf
add
adc
xor
addl
or
mov
adc
inc
mov
mov
add
in
push
lret
dec
aaa
add
mov
mov
jg
in
aas
and
aaa
sbb
jmp
fcmovb
roll
sbbb
test
mov
jb
enter
sbb
sahf
sub
sbb
or
popa
cmpsl
sub
int3
arpl
idivl
iret
jmp
xrelease
inc
jecxz
test
out
lds
pushf
or
mov
bndstx
sub
or
pusha
mov
jns
cmp
iret
push
inc
mov
dec
sub
idivb
jno
inc
add
jp
jbe
mov
shll
xchg
jp
stos
cmp
dec
aad
scas
mull
xor
push
out
or
mov
les
in
ds
iret
push
and
ds
cld
or
cmp
scas
inc
shll
in
imul
cmpl
out
lcall
rcll
call
xchg
mov
jno
cmpsb
pop
push
mov
or
scas
nop
push
loopne
mov
scas
in
es
iret
es
sub
inc
insl
inc
subl
push
mov
pop
shrb
adc
pop
add
cmp
daa
popw
mov
and
push
test
inc
cmpsl
out
int3
jge
outsb
mov
xchg
inc
pop
mov
mov
adc
popa
fsubrp
fld
inc
inc
and
out
dec
adc
scas
shr
sahf
clc
mov
mov
mov
cli
hlt
ss
leave
pop
push
xor
movsl
jno
push
xchg
dec
fisubs
xlat
mov
dec
push
xchg
mov
cmp
mov
popa
in
add
cmp
push
in
pop
jmp
mov
in
or
ds
rolb
mov
push
repz
fdivr
cwtl
repz
cld
pop
mov
mov
push
and
fildl
or
xor
insl
push
mov
dec
push
loop
push
mov
shrl
stos
xchg
add
add
xchg
mov
movsl
jecxz
mov
and
sub
cmp
mov
jp
xchg
push
inc
mov
arpl
xchg
inc
jae
dec
shrb
jno
push
arpl
stos
mov
pop
push
adcb
mov
jle
push
stos
sbb
add
dec
fsubrl
mov
ja
negl
mov
out
xchg
push
xor
sub
out
jo
jl
add
jb
outsb
movsb
repz
inc
call
jge
out
push
dec
test
cli
shll
gs
lods
divb
fldcw
or
push
lret
mov
xchg
clc
movsb
cmp
mov
mov
mov
icebp
and
and
loope
cmp
stos
jge
decb
stos
xchg
fstpl
or
sbb
inc
push
data16
in
test
gs
fs
push
cmpsb
inc
popa
sbb
bound
or
cltd
nop
cmp
pop
jge
leave
sub
jnp
test
shl
sub
pop
repnz
into
movsb
inc
xlat
push
lds
adc
outsb
gs
gs
arpl
sahf
inc
in
inc
push
movl
stos
ret
dec
jmp
stos
sub
popf
xchg
xchg
adc
jb
lods
and
sahf
or
into
leave
mov
add
push
popf
dec
ret
idiv
xor
jle
add
sbb
dec
pop
outsb
rcrb
data16
push
outsb
sub
add
fisubs
sbb
enter
push
xlat
xchg
xor
enter
lods
in
push
ljmp
jb
mov
jle
push
xor
ss
and
mov
icebp
std
and
das
lret
int
aad
adc
mov
xchg
xor
rclb
mov
mov
mov
xchg
mov
sbb
popa
ss
addr16
mov
or
lahf
jb
push
or
dec
adc
add
sub
sbb
mov
inc
in
adc
sub
sub
dec
aad
mov
push
frstor
jae
adc
and
adc
dec
lods
sbb
jp
clc
addr16
cmp
movl
push
stc
push
fisttpll
dec
cs
xor
inc
cli
adc
mov
push
pusha
fildl
cli
xchg
fs
inc
pop
adc
cltd
lock
and
xor
adc
js
sbb
inc
cmpl
jle
mov
xor
aad
lods
in
push
pop
iret
test
sub
stos
inc
dec
xor
enter
sti
pop
das
mov
push
ljmp
mov
pop
call
jo
mov
jle
dec
pop
cmp
adc
out
or
outsb
ljmp
jnp
mov
add
xor
ret
xchg
and
lds
jle
adc
xchg
jo
repnz
loop
clc
xchg
addr16
call
or
jecxz
popf
call
pop
mov
adc
or
mov
adc
jecxz
outsl
and
negb
ret
xchg
mov
jge
mov
add
pop
add
mov
push
xchg
xor
js
jne
int3
test
add
jae
push
cmp
test
push
add
movsl
test
aad
push
scas
xchg
scas
mov
push
mov
pop
inc
jle
rcl
add
inc
push
sbbl
or
cltd
sahf
jae
adc
ret
and
dec
aam
sub
or
cs
jae
xchg
jae
jecxz
rcll
add
mov
inc
in
inc
fwait
sub
dec
mov
mov
daa
cld
mov
jg
dec
sbbl
pop
mov
add
cmp
inc
aaa
or
and
sbb
xchg
push
shr
inc
xor
fstps
lret
and
popa
mov
cmp
decl
loope
push
and
jg
push
pop
je
dec
mov
adc
rcrl
adc
jp
mov
inc
cmpsl
add
jmp
push
bound
loopne
adc
or
adc
outsl
cmpsl
ljmp
lret
xchg
dec
mov
mov
imul
fildll
gs
mov
lea
sbbl
subl
loop
mov
in
mov
push
stos
push
test
loop
xor
inc
test
mov
mov
ljmp
stc
pop
sub
leave
arpl
cmp
js
mov
mov
nop
pop
mov
push
lods
pop
in
in
imul
cmp
mov
icebp
int3
mov
or
add
push
mov
cmp
push
mov
loopne
insb
fldl
lret
sbb
ja
orl
shll
pop
sbb
pop
pop
xor
push
movsb
cmp
inc
scas
add
pusha
pop
jmp
pop
sti
adc
inc
arpl
in
add
enter
les
sbb
movsb
jge
sub
loope
push
add
mov
push
mov
xchg
xor
cwtl
sub
in
xchg
rolb
inc
inc
push
in
test
add
push
push
fisubrs
jle
cmp
loope
push
add
shl
gs
sub
pop
sub
arpl
jns
mov
int
pop
adc
jmp
cmp
leave
and
fisubrl
jae
and
sti
push
pop
repnz
cmc
pusha
dec
mov
mov
xor
in
pop
mov
icebp
imul
shrl
sub
aad
lock
cmp
fldlg2
stc
cs
cmp
test
add
fwait
cltd
ja
pusha
push
fidivs
add
popl
nop
add
out
mov
sbb
dec
lods
out
and
jmp
mov
in
stos
gs
xlat
xlat
adc
sub
xchg
int3
iret
clc
cwtl
sbbl
dec
loop
add
push
and
push
ja
repnz
cmp
dec
cmp
ret
pop
gs
jbe
hlt
fdivrl
test
lret
div
repnz
scas
or
ss
mov
gs
out
sbb
sub
push
stos
divb
shlb
movsl
mov
dec
add
push
ror
fsubr
pop
fistpl
clc
push
out
sbb
sbb
mov
loopne
mov
adc
aad
imul
jl
inc
dec
or
cltd
negl
sub
mov
in
pushf
mov
shrl
pop
pop
lods
cmp
scas
cmp
push
dec
adc
leave
and
shrb
aam
sub
loopne
scas
fisubrs
sahf
xor
mov
pushw
add
in
sahf
xor
jle
push
push
or
push
popf
cmp
inc
stos
aas
fcomps
enter
leave
testb
out
ret
je
xor
outsb
add
in
cmp
inc
jae
leave
addr16
pop
daa
mov
ffreep
subl
in
cltd
clc
into
mov
cmpsl
push
dec
andb
jg
push
lcall
inc
xlat
push
cmp
pop
adc
fs
adcl
xor
pop
mov
xchg
fidivs
movsl
sbb
push
shll
jb
out
in
cli
or
call
push
imul
xor
dec
xchg
adc
mov
popf
ss
les
inc
scas
sbb
jbe
lods
mov
sbb
pop
je
add
add
mov
push
ljmp
sub
adc
data16
aas
xchg
jl
pusha
test
lret
fidivs
fidivrs
iret
inc
int
and
jmp
jge
and
repz
jae
aaa
into
mov
xchg
les
sub
sbb
in
or
arpl
je
sarb
rorb
cli
pop
xor
in
loopne
add
push
xorl
cmp
xchg
mov
out
sub
fildll
aam
dec
idivb
daa
cmp
inc
imul
jl
push
sub
shlb
push
sub
dec
sti
cmpsl
jg
cmp
ss
adc
je
and
jg
movsl
adc
xchg
mov
lret
les
adc
cmp
dec
pop
lea
popf
push
roll
ss
ss
xlat
repz
push
leave
rolb
cmp
in
cmpsl
cmp
ret
aad
dec
xchg
mov
jl
mov
fsubrp
lds
stos
repz
repnz
xor
jmp
pop
cmp
call
pop
repz
ja
push
out
mov
adc
outsl
movsb
push
daa
imulb
jbe
ljmp
rcrb
mov
xchg
adc
mov
imul
jp
scas
stos
stc
sbb
cmpsb
dec
xor
push
mov
push
rorl
outsb
push
test
cmc
mov
leave
pop
ljmp
push
sahf
xor
movsb
hlt
mov
adc
and
jbe
xor
dec
xchg
in
in
rcll
lds
into
pop
pop
xchg
shrl
js
test
add
add
xchg
push
inc
push
cmp
jns
add
xor
pop
push
outsb
test
pop
cmpsb
xchg
or
fstpl
fsubrs
xor
or
dec
inc
mov
pop
out
sbb
fisttpl
hlt
push
loopne
es
mov
fldcw
rclb
andb
dec
jecxz
mov
mov
dec
push
repz
test
imul
mov
dec
xchg
cmp
data16
adc
add
adc
push
in
scas
test
xchg
xchg
mov
xor
sub
ret
into
gs
lret
in
daa
jp
xor
jle
mov
push
mov
fldl
sub
test
mov
outsb
jl
and
pop
cmp
lds
popa
mov
mov
test
fs
xor
pop
mov
mov
cmpsb
xlat
test
mov
stos
or
dec
jne
mov
xor
out
pusha
shlb
dec
fnsave
jecxz
xchg
loope
or
rolb
aad
push
cwtl
or
pop
outsb
or
subb
pushf
push
push
imul
repz
mov
mov
fdivrs
push
xchg
mov
pop
sbb
stos
sbb
mov
leave
xor
jle
arpl
xchg
pop
push
movsl
push
xor
bound
cmp
inc
rcr
shll
xor
cs
jb
lods
pop
popf
daa
inc
ret
sbb
jg
sbb
pop
out
ret
scas
ret
jle
ds
xor
movsl
lds
std
testb
mov
jae
inc
fisubs
pop
mov
push
or
notb
hlt
push
jmp
subl
cltd
jno
inc
inc
lods
imul
pop
push
add
mov
adc
cmpsl
roll
dec
adc
mov
les
rcrb
xchg
popf
add
test
fs
bound
mov
leave
cmpsl
xchg
out
cmp
pop
push
sub
and
mov
adc
push
loope
push
js
in
test
xor
out
lret
pop
mov
sbb
out
inc
lods
dec
fs
jae
insl
sar
enter
adc
rorl
inc
xchg
in
test
rcrb
mov
mov
sbbl
loop
popf
filds
sbb
jbe
cmpsl
sub
stc
mov
jnp
adc
lret
xchg
pusha
inc
pop
iret
xor
dec
mov
mov
out
test
mov
repz
or
mov
sub
mov
add
idivl
xor
imul
jle
add
repnz
mov
leave
pop
inc
pop
lods
push
xchg
add
sub
pushf
jge
icebp
movsl
test
loop
pop
inc
jl
or
scas
adc
jl
mov
popa
mov
push
or
mov
nop
daa
lds
push
fwait
lods
xchg
sub
test
jne
lret
cld
add
ja
icebp
lods
jo
sub
jge
mov
fcoms
or
aas
dec
jbe
lods
push
and
or
mov
fisubrs
sub
fwait
pop
adc
mov
xchg
mov
lret
mov
frstpm(287
cwtl
sarl
push
jecxz
mov
xchg
lock
and
fwait
loop
dec
jg
jle
imul
push
dec
pop
cmpb
jnp
lds
xor
xchg
xor
lret
aaa
jmp
mov
in
push
add
xor
stc
clc
adc
push
inc
pop
inc
cli
add
iret
mov
loop
aaa
cmc
mov
lea
mov
or
and
pusha
jle
into
jle
hlt
jbe
cltd
std
pop
lahf
pop
xchg
imul
cmp
lods
adcl
enter
mov
jle
pop
xchg
pop
xchg
pop
jno
fimuls
sarb
pushf
stc
pop
stos
outsb
inc
xchg
lods
xchg
or
lret
scas
cmp
loop
push
mov
fmuls
ret
lea
lret
sbb
repnz
dec
mov
insl
fldl2t
xchg
cmp
cmp
leave
js
jne
push
mov
mov
mov
and
inc
std
and
xchg
push
mov
scas
fcoms
adc
cmp
out
pop
or
inc
and
push
outsb
mov
fidivs
jns
jnp
stos
adcl
add
pop
xlat
in
jp
dec
fucom
push
mov
mov
push
add
shrl
inc
pop
pop
hlt
lcall
out
pushf
hlt
jmp
and
xlat
pusha
bound
sub
inc
mov
xchg
enter
jo
jns
or
xchg
or
or
sbb
inc
leave
pop
sub
push
sbb
hlt
pop
cmpsl
add
idivl
fidivrl
pop
sub
inc
mov
pop
test
out
or
mov
pop
out
or
dec
jns
xchg
arpl
mov
jmp
xor
cmp
out
into
cmp
aad
or
pop
sti
dec
push
sahf
hlt
addr16
leave
int
mov
inc
fldcw
or
rcrl
dec
xchg
out
popf
sub
jno
dec
sub
mov
pusha
test
xor
xchg
jle
daa
in
aam
inc
negb
insl
jge
mov
cmp
mov
sarl
mov
cmp
sbb
sbb
or
cmp
shrb
inc
movsb
aam
test
jle
mov
bound
pop
les
leave
and
jbe
fldt
jne
scas
adc
int
test
lods
stos
cmc
jge
fstps
out
test
insb
pop
cmc
insl
test
ja
stos
xor
add
xor
scas
add
das
js
rol
xchg
test
xchg
outsl
subl
out
dec
ljmp
cmpsb
in
mov
add
or
lret
cmp
pop
loop
dec
add
inc
mov
pop
xchg
popa
pop
jmp
enter
push
test
nop
mul
js
pop
fwait
es
shrl
mov
sarl
mov
cmp
scas
scas
pop
cltd
rol
subb
movsb
lret
cmp
rcl
cltd
pop
mov
jbe
frstor
rclb
add
popa
es
push
mov
mov
sbb
jns
rorl
push
sbb
jp
data16
mov
sbb
inc
mov
cmc
cmp
stc
cmpsl
test
stos
inc
int
insl
leave
pop
lahf
adc
inc
jns
rolb
and
shrb
dec
sbb
aas
imul
lock
stos
push
cmc
int3
jecxz
mov
ds
out
mov
sbb
xchg
jno
das
pop
or
push
lods
cltd
pop
lods
stc
pop
scas
add
cmpsb
repnz
cmovs
repnz
jp
cmp
mulb
push
call
scas
pop
sub
ret
jl
mov
sbb
mov
dec
fidivl
dec
pop
leave
pusha
lahf
pop
test
arpl
loop
pop
dec
ljmp
pop
mov
bound
arpl
repnz
fistps
into
out
fisubl
inc
ret
or
testl
mov
push
lahf
lods
xchg
out
inc
sbb
dec
arpl
add
ljmp
jg
add
hlt
push
lcall
xchg
je
inc
mov
aas
xchg
fnstenv
push
pop
pop
lods
xchg
mov
repnz
push
sbb
data16
and
lret
fs
int
nop
sbb
cmpsb
test
push
mov
add
ds
dec
movsl
mov
or
sub
sub
cmp
or
mov
add
push
dec
sub
pop
push
mov
and
lods
ds
sbb
xchg
ljmp
cmpsb
mov
shll
xchg
pusha
insl
incb
mov
pop
lcall
mov
out
mov
jge
adc
jno
inc
and
inc
scas
jo
and
xchg
orl
insl
mov
lcall
mov
mov
loope
mov
add
iret
xor
jge
insl
in
popf
or
sub
or
and
xchg
cmp
lret
jno
or
cmp
adc
xor
ffreep
push
xlat
push
push
lret
test
mov
xchg
call
inc
inc
in
push
and
or
hlt
mov
mov
push
jo
xor
jne
mull
enter
xchg
js
push
test
out
sahf
inc
lea
mov
push
in
sub
rcl
xor
es
cld
mov
pop
pop
roll
push
pop
dec
push
lret
daa
jl
lds
inc
xlat
insb
push
mov
mov
fmull
or
out
hlt
jns
je
or
call
mov
test
rorl
dec
dec
fsubrs
shlb
ds
xor
sub
pop
sub
push
sub
outsb
fidivrl
scas
sti
notb
mov
mov
scas
and
loop
jle
in
sbb
call
xor
insl
push
mov
cmpsl
sahf
jge
dec
sbb
ja
fsubr
call
in
ss
adc
hlt
xchg
and
pop
lret
lret
arpl
push
out
aam
dec
iret
mov
pushf
or
and
out
orl
sub
xor
fnstenv
iret
dec
idiv
dec
pop
inc
pop
xchg
add
fdivl
or
stos
mov
sub
test
push
mov
int
mov
loope
jo
xchg
gs
lods
cmpsl
dec
inc
insl
jo
lret
mov
call
lock
sub
sub
nop
pop
or
nop
rcll
cltd
adc
add
loope
xchg
fwait
mov
stc
cmp
and
mov
sbbl
jp
xorb
xchg
pop
cmp
js
fwait
push
jno
pop
repnz
xchg
add
out
xor
in
incl
das
pop
adc
jmp
inc
xchg
xor
dec
mov
rcrb
jp
inc
xchg
ret
rcr
and
xor
pop
cmp
int
jmp
ljmp
out
test
pop
test
movsb
fimuls
and
shrl
mov
leave
add
daa
push
cltd
mov
dec
push
sub
loope
and
pop
scas
xchg
popl
push
mov
cli
push
jae
jmp
test
dec
jmp
dec
dec
lods
pop
and
jge
in
int3
pop
jg
jl
lret
sbb
insl
xor
ja
pop
into
mov
push
mov
lret
inc
jmp
pop
lea
es
push
sbb
xor
stos
xchg
mov
les
adc
adc
addr16
dec
pop
mov
dec
scas
aam
js
cld
jle
lcall
inc
idivb
in
pop
stc
testb
jns
fcoms
lret
fstl
dec
pop
cmp
sbb
ret
cld
lcall
jbe
scas
pushf
jno
dec
add
mov
add
mov
adc
jne
insb
sti
pop
sbb
iret
jb
popf
xor
mov
sbb
ret
fbld
shlb
and
mov
add
into
andb
xchg
dec
test
rcrl
xor
pop
mov
and
xchg
enter
mov
mov
dec
add
cmp
jnp
shrl
in
and
dec
fmuls
ds
mov
adc
mov
enter
push
inc
sbb
xor
js
fwait
fs
cmp
mov
ss
push
lea
sbb
call
sahf
and
das
and
mov
andb
push
icebp
dec
mov
jb
jg
or
out
xchg
push
scas
dec
mov
inc
inc
bnd
ljmp
inc
insl
add
cmp
pop
fsubrl
or
mov
lea
sub
test
enter
in
mov
mov
mov
pop
dec
shrl
xor
mov
repnz
add
pop
int3
cltd
adc
xor
push
inc
and
aam
push
sub
pop
mov
repnz
lret
sub
cmp
mov
cmpsl
jle
mov
jno
cmp
repnz
bound
jno
mov
jmp
adc
add
xor
push
aaa
stos
jp
mov
loope
inc
jecxz
jns
mov
aas
xor
call
cld
add
jne
xchg
notl
aam
iret
xacquire
mov
loopne
push
arpl
xchg
sub
sbb
dec
in
jl
out
pusha
imul
sbb
and
cs
xchg
dec
xor
mov
add
ficomps
jle
xchg
adc
mov
fucom
sti
and
ljmpw
pop
pop
dec
add
jb
push
lret
andl
xchg
or
jecxz
bound
add
inc
mov
push
push
cmpsb
jle
adc
inc
cmpsl
ror
lds
jnp
and
pop
pop
repnz
shlb
push
mov
pushf
jb
mov
add
or
fucomip
pop
pop
push
in
stos
cmp
cmp
push
or
loopne
push
lcall
mov
fstl
pop
push
push
mov
mov
add
xchg
pop
cmp
addr16
call
pop
nop
rep
imulb
fnstcw
fwait
xchg
pop
inc
xlat
ret
mov
in
cmc
shl
dec
out
and
push
push
add
insb
gs
xor
push
rorl
mov
jle
adcb
mov
pop
xor
js
mov
js
scas
mov
xchg
jne
mov
xchg
mov
add
lods
adc
nop
adc
notl
int
mov
dec
out
push
pushf
clc
lods
lahf
lret
cwtl
pop
iret
fistl
call
lods
and
int3
sbb
loop
mov
ret
push
inc
cmc
cltd
nop
imul
repnz
or
pop
push
xchg
pop
xor
jno
clc
pop
lods
cmc
mov
aam
pop
add
adc
lahf
jb
insl
test
hlt
out
loope
pusha
sub
sub
pop
add
cmc
sub
aas
mov
mov
dec
ss
test
in
jecxz
cmpsb
push
mov
cmc
dec
subl
out
pavgb
loope
sub
or
inc
call
xor
movsl
icebp
cmp
sbb
data16
add
imul
pop
ret
cmpsl
mov
mov
xchg
pop
mov
cmp
ret
jg
adc
jmp
cs
int3
out
test
testb
push
fisubs
orb
inc
xchg
xchg
cmp
or
insb
mov
xlat
jl
inc
leave
idivl
add
inc
dec
adc
xchg
and
and
insb
sub
repnz
inc
sub
inc
in
nop
xchg
add
adc
nop
test
fwait
adc
sub
lea
push
outsl
cmpsl
cmp
insb
les
cmp
roll
rep
imulb
loope
mov
adc
hlt
push
add
ret
sahf
inc
adcb
push
mov
rcll
and
mov
xlat
test
lock
and
sub
pop
notb
xchg
xlat
in
sahf
adc
icebp
push
and
fnstenv
and
jle
mov
push
cmpb
mov
popf
and
pop
dec
ret
mov
push
je
inc
js
iret
push
mov
pop
ret
decl
ja
mov
inc
mov
hlt
cmp
pop
dec
adc
sbb
bound
xchg
out
idiv
hlt
inc
push
test
fidivrl
enter
inc
pop
xor
jecxz
stos
mov
sbb
int
notb
and
arpl
sub
test
lds
repnz
push
push
loope
xor
jl
xor
sbb
nop
fistl
push
fsubl
lock
fldenv
sbb
push
jae
sahf
mov
mov
jae
cmp
mov
or
jno
xchg
inc
sbb
xchg
clc
clc
or
shrl
rclb
pop
or
mov
ds
out
xor
rolb
bndstx
lods
ljmp
xor
rcll
imul
and
sarl
adc
or
xchg
outsb
scas
notl
cmp
insb
outsb
jle
add
or
clc
mov
adc
xor
xor
add
pushf
insb
push
insl
jp
pop
shll
jp
mov
pop
orl
xorps
mov
mov
push
pop
adc
cld
jns
icebp
mov
clc
imul
int3
cmc
push
int
outsb
inc
and
inc
jo
mov
std
int
xor
dec
lahf
dec
jo
mov
es
icebp
inc
dec
mov
stos
cli
test
sbbl
adc
cmc
mov
and
sbb
cs
and
cli
inc
sbb
sub
cs
inc
xor
mov
mov
iret
fistpl
mov
inc
sub
mov
mov
fcomip
dec
xchg
insb
in
je
orb
jae
jl
test
add
jge
loopne
mov
mov
and
hlt
mov
sub
insb
imull
dec
add
mov
shlb
mov
fcmovbe
outsb
pushf
push
cltd
lahf
jg
shll
movsl
pop
repz
push
ret
jbe
pop
sub
aam
rclb
cs
add
xchg
les
push
ljmp
xchg
clc
inc
call
mov
mov
sahf
cmpsl
movsl
popa
xorl
inc
cmc
lock
xlat
push
mov
adc
je
pop
fisubs
scas
mov
stos
jno
mov
mov
pop
movsb
les
loop
and
pushf
out
scas
test
xchg
cmpsl
push
mov
or
cmp
loope
adc
js
push
xchg
in
pop
outsl
add
mov
xchg
push
mov
add
adc
mov
lods
add
imul
jecxz
ss
sbb
aam
mov
or
in
push
sbb
dec
dec
das
mov
imul
lcall
cmp
insb
ret
imul
mov
jne
xor
xor
in
test
jle
push
test
inc
pop
inc
inc
mov
cmp
push
into
sbb
pop
outsl
xor
add
fs
cmpsl
test
insl
xor
ja
xchg
cmp
xchg
and
mov
daa
cs
jbe
ds
and
nop
mov
das
or
call
test
out
xchg
cmp
pop
mov
adc
push
rcl
push
push
lods
pop
dec
in
int
xchg
cli
mov
mov
fcompl
push
call
push
cwtl
xor
in
nop
nop
test
cmp
outsl
loop
dec
dec
in
popf
loopne
cmp
loop
jo
pusha
sbb
fdivs
das
dec
loopne
ds
arpl
test
and
inc
adc
xchg
dec
ret
es
xor
push
jne
imul
aaa
loop
insb
into
loop
pop
sbb
sub
daa
jns
arpl
add
push
cmp
test
in
test
repz
or
lods
andb
dec
cmp
in
mov
inc
stc
and
cmp
jne
mov
orb
lock
jg
and
pop
push
sti
push
sbb
cwtl
add
leave
dec
push
jp
and
dec
adc
mov
test
jmp
shrl
mov
insl
or
int3
shlb
or
lahf
bound
lahf
mov
jle
ret
xor
out
add
into
ljmp
les
les
clc
jg
mov
pop
pop
xchg
loopne
stos
push
shlb
lea
stc
outsb
xchg
cmp
call
dec
je
rorl
outsb
cmpsl
mov
or
jp
movsb
push
jnp
xor
call
dec
imul
aad
in
jle
cld
push
inc
arpl
sbb
jbe
rolb
mov
push
and
out
add
pushf
lock
fildll
cmp
ret
pop
mov
or
out
push
dec
pop
jp
xchg
pop
mov
notl
push
xor
lock
xchg
mov
pop
xor
shl
mov
add
fwait
mov
mov
ret
jne
les
lret
rcrl
in
lods
cmp
fbld
repnz
mov
insl
xor
adc
push
inc
cmp
or
pop
jg
cmp
pop
dec
mov
dec
hlt
add
add
inc
push
stc
nop
inc
addr16
inc
inc
scas
inc
fsub
jns
pop
fisttpl
outsb
add
call
sub
pop
pop
mov
cli
divb
push
bound
or
scas
cmp
jno
lods
xchg
cltd
loopne
loopne
xchg
push
rcll
and
add
cmp
iret
inc
flds
or
popa
mov
pusha
mov
mov
add
cmp
push
jg
inc
add
aad
test
pusha
mov
mov
lods
jge
lahf
adc
mov
loope
fbld
bnd
xor
je
dec
push
fadd
push
adcl
cwtl
and
inc
adc
push
arpl
adc
and
lret
cmp
inc
push
ss
cmp
std
push
sub
fs
sub
ss
or
sti
xchg
push
leave
adc
and
std
fsubs
or
and
lods
incb
push
xor
ret
push
rol
in
in
mov
push
in
adc
outsb
sub
adc
cmp
popa
stc
sbb
add
or
cmp
pop
jle
popa
push
imul
daa
and
inc
stos
fcoml
cmpsl
dec
jmp
scas
inc
lcall
or
repz
and
mov
or
sbb
ret
dec
or
cmpsl
ljmp
pop
sbb
icebp
xlat
mov
or
fmul
pop
and
sbb
jecxz
mov
add
xor
fmulp
dec
and
ss
out
jge
sbb
les
cmpsl
inc
xor
cltd
lret
push
cwtl
xchg
push
fstpl
lods
dec
xchg
shll
lcall
xor
mov
jo
add
mul
sbb
mov
push
push
jae
xor
mov
inc
shl
add
adc
loope
lcall
jl
mov
xor
xchg
inc
aam
fldenv
pop
cmpsb
sub
add
pop
andb
fbld
dec
push
sarl
subl
inc
repnz
and
xlat
nop
sahf
addr16
mov
sarb
rol
test
imul
rcrl
shrl
jb
pop
fwait
mov
inc
pop
ljmp
ljmp
test
jno
jb
pop
mov
fdivl
fidivl
cmp
pushf
xchg
jge
jecxz
jno
inc
cmp
cmpsb
cld
ficoms
mov
jle
adc
jge
mov
mov
test
push
push
sarb
fdivrl
test
shrl
mov
loopne
ficoml
sub
cmp
pop
xchg
pop
test
aas
cmpsb
in
test
pusha
repnz
xchg
xlat
nop
dec
mov
or
jle
insb
cmp
mov
test
mov
add
enter
push
push
adc
int
adc
or
lods
lock
pop
test
dec
aas
and
xor
mov
xchg
icebp
mov
divl
clc
xchg
hlt
xchg
sub
call
leave
into
jmp
xchg
jo
jne
iret
std
loope
add
in
test
fnstcw
ljmp
mov
mov
test
inc
lods
fdivl
dec
cpuid
lcall
stos
lcall
dec
ja
mov
outsb
mov
push
cmc
out
out
out
and
adc
cvtpi2ps
xor
icebp
cmpsl
imul
xchg
sbb
in
cs
xchg
inc
ljmp
jne
sbb
sbb
jae
ss
stos
sbb
pop
int
xchg
adcl
or
movsb
sbb
add
inc
popf
mov
xchg
mov
and
add
icebp
xor
std
pop
adc
ja
mov
popa
xor
fidivrl
push
test
pop
repnz
lods
and
bound
test
mov
xor
mov
adc
cmc
iret
test
fildll
and
xchg
cwtl
imul
inc
adc
or
xor
xchg
sub
ss
popf
push
hlt
mov
jnp
jmp
pop
xorl
aas
xchg
and
fcoml
dec
inc
fcomps
mov
das
shll
cmc
push
aad
xor
je
pushf
fwait
xor
popa
and
mov
ja
mov
cltd
fsubs
mov
fdivs
sti
mov
or
lods
mull
std
sub
cmp
jnp
mov
cmp
faddl
xorb
push
stos
movsb
mov
adc
pop
mov
push
jecxz
inc
or
cmp
negl
push
push
stos
repnz
pop
jo
std
xchg
sub
test
dec
mov
jecxz
push
sub
int
ss
mov
and
mov
mov
dec
call
or
push
sti
leave
fistpl
sub
fwait
push
mov
jl
inc
mov
int3
xchg
stos
int
out
fwait
fwait
xor
adc
inc
js
aam
and
fstl
push
add
jnp
jo,pt
das
pop
add
popa
pushf
pusha
fs
xchg
cli
add
and
mov
lods
inc
aam
pop
imulb
dec
jge
push
inc
inc
ret
sbb
jecxz
add
cs
mov
daa
sub
mov
test
mov
addb
mov
fucomip
or
cs
push
movsb
ret
rorl
lock
xor
xor
push
push
and
xchg
add
jne
fld
in
out
mov
out
push
mov
pop
repnz
testb
scas
sub
sarl
cmpsl
outsb
or
shrl
and
pop
pop
lock
mov
out
push
mov
xchg
arpl
sub
inc
xorl
mov
scas
and
xchg
das
xchg
fnstenv
std
push
mov
bound
fidivrs
idivb
scas
call
outsl
jp
lret
mov
dec
je
fsubs
xchg
shrl
fbstp
bound
movsb
cmp
sub
cmc
icebp
insl
out
les
jns
push
imul
popf
sbb
loopne
push
pop
lods
mov
cmpb
mov
subb
and
addr16
inc
sbb
mov
lock
mov
inc
movsb
sbb
mov
daa
es
fbld
xor
or
call
frstor
notl
dec
out
shl
or
pop
sub
xchg
jge
and
jmp
mov
fcmove
push
add
test
rcr
sub
outsb
loope
movsb
ja
mov
fidivl
xchg
es
pop
filds
push
popf
ja
pop
stos
in
cltd
and
dec
lods
or
cli
addb
dec
es
call
ljmp
cs
das
xchg
outsl
jge
mov
xchg
or
clc
or
adcb
push
shlb
jb
mov
cwtl
lods
pop
scas
mov
mov
xlat
jl
stos
aad
outsl
inc
mov
gs
cmpsl
dec
pop
inc
rol
shr
pop
jns
xor
mov
mov
decl
test
loop
xor
jp
push
adc
jo
andnps
jne
push
scas
or
andb
xor
movsb
dec
pop
cmp
repnz
aaa
flds
das
push
out
mov
push
inc
ljmp
inc
add
dec
mov
movsl
shrl
cmp
add
les
push
mov
out
sti
sti
inc
stc
divl
mov
and
adc
cmpsb
inc
mov
sub
pop
xchg
sub
scas
das
push
push
fisubs
les
and
fcoml
mov
jne
iret
data16
pop
push
nop
es
test
lahf
or
test
rol
xor
or
mov
test
mov
sub
mov
add
xlat
mov
inc
out
mov
mov
jg
cmp
mov
mov
pop
and
xchg
js
outsb
popa
ss
testl
cmp
inc
lret
shlb
fisttps
mov
subb
lods
and
jae
imul
loop
mov
push
repnz
fldcw
mov
push
movsl
and
xchg
not
lds
sahf
aad
shl
push
or
cmc
mov
jno
in
pop
pop
ljmp
es
pop
pop
pop
lock
xor
xorl
sbb
and
cs
push
div
cwtl
or
pop
push
testb
and
pop
push
mov
out
fbld
imull
xor
inc
mov
es
dec
fcmovne
in
aaa
lods
jmp
jecxz
jmp
xor
and
gs
sbb
dec
push
xor
nop
ja
repz
sbb
test
and
mov
add
push
aam
adc
xorb
inc
sub
sbb
rcrb
xlat
jnp
jg
jae
out
orl
pop
in
dec
or
in
jae
mov
inc
cwtl
mov
cld
push
sahf
xor
sub
push
mov
sub
sbb
in
lds
sub
loope
mov
pop
in
ljmp
les
shll
xor
scas
cmp
xor
outsb
shr
lahf
cmp
lcall
clc
mov
roll
or
movsb
fsubs
inc
fsubrs
push
adc
shll
cmp
pusha
sbb
sbb
testb
mov
out
jno
push
sub
dec
cmc
jns
jo
inc
dec
pop
lock
adc
jle
movsl
push
mov
mov
pop
push
sub
jp
and
pop
loopne
rclb
cmpsl
or
add
cs
rorl
and
push
pop
push
movsl
xchg
pop
stc
dec
into
pop
push
xorl
xor
cmpsl
xchg
sub
out
daa
shlb
mov
push
or
movsb
cmp
dec
mov
pop
mov
call
stos
ljmp
pop
outsb
adc
mov
cmpsb
jl
mov
fists
adc
inc
push
ja
loop
mov
sub
fnstsw
or
lods
cltd
std
xor
mov
addr16
jo
lods
shrl
xor
out
add
cmc
loopne
mov
les
mov
cvtps2pi
addr16
mov
inc
ds
jb
fwait
push
repnz
xchg
add
lea
jbe
push
adc
xchg
push
in
lea
shrb
mov
ftst
cmp
vxorps
jb
subl
movsb
test
nop
js
fstpl
lret
div
jle
addr16
mov
add
int3
xchg
popf
pushl
outsb
mov
popa
sbb
jnp
jns
ds
mov
test
scas
push
push
out
mov
push
mov
adc
or
adc
sbb
push
popf
stos
in
push
ffree
inc
and
mov
xor
dec
iret
pop
cmp
insl
dec
mov
cwtl
iret
xchg
dec
rcrl
cmc
push
ss
jb
pushf
inc
bnd
inc
mov
xchg
and
out
popf
das
sub
or
inc
data16
fisttpll
push
xorb
jae
dec
les
mov
dec
fcoml
sub
je
outsl
cmpsb
add
jmp
inc
es
es
es
imul
cmp
out
dec
shrl
adc
push
push
repnz
shl
mov
inc
adc
mov
and
add
jnp
mov
or
add
push
push
in
sbb
popa
clc
decb
gs
push
test
mov
or
das
or
rcr
or
fnstsw
mov
sahf
xor
fsubp
mov
sub
aam
movsb
pop
loop
xor
andb
push
je
mov
cmpb
adc
lret
in
lods
aas
push
out
jl
andb
rol
xchg
and
outsb
sub
nop
xor
mov
xor
idiv
enter
add
shll
sbb
cmp
movsb
cmp
jne
add
lods
ret
test
aam
dec
out
aad
in
mov
mov
rcrb
test
aas
ljmp
jl
and
xchg
fimuls
mov
jae
jp
jl
fisubrs
dec
and
in
scas
add
sbbl
inc
pop
jp
or
shrl
inc
cmp
pop
aad
mov
repz
cmpsb
mov
lahf
mov
cld
call
cmpsl
test
fsubrs
loopne
test
fldt
movsl
sarb
xor
adc
xor
mov
adc
test
out
gs
lret
jl
inc
lret
adc
int3
sub
jge
clc
scas
insb
bound
xchg
movsb
or
inc
cmp
fsubs
dec
inc
fsubrl
gs
xlat
cmpsb
and
repz
and
in
cmpsl
test
adc
test
lea
adc
out
inc
push
and
cld
stos
imul
jb
mov
mov
jb
and
mov
and
push
insb
jecxz
and
jnp
pop
cs
mov
xor
in
push
test
push
fdivs
jge
jb
jmp
loope
sahf
std
jg
xlat
dec
loope
shll
mov
pop
push
push
inc
ja
cltd
test
loop
outsl
jnp
add
sbb
mov
mov
xchg
add
in
jmp
adc
inc
xorl
test
xor
xchg
add
and
push
loopne
xchg
xchg
jnp
sub
lret
pop
sub
pop
call
sbb
cmpsb
pop
mov
mov
pop
cmc
das
mov
cld
mov
lds
mov
insl
inc
testl
lret
lret
pop
clc
push
lret
xchg
cmpsl
push
fisubl
lret
cld
es
test
into
add
adc
push
dec
les
imulb
pop
inc
push
jmp
cwtl
fsub
mov
mov
jle
mov
rcll
or
sbb
jg
rcll
push
nop
fs
sub
and
dec
pop
push
jge
push
mov
and
sahf
pop
xchg
cld
adc
mov
cmp
lds
fsts
pop
xchg
add
sub
pop
pop
fs
push
jnp
fnsave
or
fwait
adc
mov
xor
dec
mov
xlat
daa
out
ret
das
mov
adc
lea
pusha
rolb
xor
divb
fisttpl
mov
test
test
pop
stc
nop
dec
push
scas
push
add
cli
pushf
mov
push
mov
xor
jno
jl
test
test
cmpsb
in
mov
jecxz
scas
test
sub
or
negl
mul
dec
imul
xchg
mov
jno
popa
push
or
mov
mov
loope
lods
iret
inc
lods
jae
xchg
xor
push
ret
pop
dec
out
popa
bswap
adc
les
push
xchg
mov
rcrl
cmp
mov
pop
ret
mov
jg
mov
jl
jge
test
push
lods
inc
test
xorl
stos
test
incl
pop
dec
int
aad
xor
cltd
cwtl
cwtl
mov
and
push
outsl
xor
fwait
inc
enter
pop
and
ret
divb
push
sbbl
es
sub
push
mov
sbb
scas
movsb
cmp
pop
cmc
adc
test
pop
in
and
ljmp
cltd
dec
pop
sbb
cld
dec
jnp
mov
sti
mov
mov
xor
jp
xchg
lods
ss
out
sbb
jo
aaa
mov
fs
faddl
stos
pop
lock
push
arpl
jbe
lret
xchg
dec
jmp
lds
xchg
add
rol
out
adc
pop
out
dec
push
xorb
out
jbe
sub
mov
rcrb
mov
mov
out
pop
ret
adc
je
fnstsw
popa
fdivp
cmp
adc
es
pop
cmp
lahf
in
lret
addr16
iret
lods
cmp
push
stos
cmp
xchg
ret
pop
mov
adc
stc
sub
mov
dec
insl
jge
out
stos
pop
pop
jno
fdivrs
dec
mov
adc
insl
ja
stc
stc
sub
cli
or
dec
orb
and
es
sbbl
dec
push
loopne
iret
add
jne
jp
push
inc
mov
rorb
add
sbb
dec
xor
lods
lods
xor
jne
xor
inc
stos
push
js
imul
lea
in
pushl
mov
pop
and
jnp
sub
in
cwtl
dec
inc
pop
popa
movsl
xor
aaa
and
das
cmpsb
or
push
dec
insb
add
sbbl
cwtl
jmp
outsb
mov
movsb
in
in
inc
sbb
jno
xchg
xchg
loopne
push
push
pop
pushf
inc
sbbl
xchg
mov
cmc
sub
lea
adc
mov
fidivl
daa
sub
or
test
jp
or
aaa
lret
cwtl
das
loopne
push
ljmp
jno
and
es
ret
xchg
in
jno
mov
arpl
outsb
shl
insb
shrb
mov
cs
jp
jae
and
and
inc
cmp
push
and
mov
cmpsb
adc
cmpps
push
filds
mov
xor
adc
pop
gs
clc
dec
movsb
sbb
pop
pop
push
xlat
outsb
mov
ja
fdivr
lds
mov
call
mov
fcoml
sbb
mov
repz
sub
faddp
sbb
push
loope
xor
adc
jge
pop
fld
gs
ja
in
xor
and
fiadds
inc
mov
in
jecxz
jle
and
push
rol
sbb
clc
hlt
fdiv
les
adc
fimull
rcrl
in
fldt
add
out
cld
movsl
cmp
jge
inc
std
inc
repz
out
into
rorl
cmpsb
mov
je
add
iret
sub
push
sbb
or
adc
mov
jae
cli
push
sub
clc
pushf
stos
movswl
lea
dec
pop
cmpsb
or
je
xchg
pop
and
xchg
mov
insb
ret
push
in
faddl
icebp
pop
mov
fimull
sub
aas
pop
scas
repnz
pop
inc
push
jne
dec
pop
xchg
xor
test
cmp
xor
pop
jmp
stos
mov
jae
xor
sub
add
clc
sub
sub
movl
out
fnstsw
cmp
inc
sub
xor
idivb
pop
mov
jg
jns
lods
mov
movsb
loop
mov
daa
cmp
mov
lcall
in
scas
fsts
mull
mov
rorl
or
push
xchg
xchg
add
jbe
mov
dec
iret
movsb
ljmp
scas
inc
mov
aaa
rclb
loope
mov
lock
push
sub
addr16
push
dec
in
idiv
std
js
lahf
loope
lock
js
xor
mov
ljmp
test
dec
cli
call
or
ret
xchg
stc
scas
lcall
and
je
repz
sub
aam
sbb
jae
mov
out
mov
test
imul
loop
pop
popf
or
movsl
or
adc
pop
stos
cmc
jg
mov
mov
cmp
bound
sbb
mov
and
out
jecxz
aaa
xlat
ss
pop
and
inc
adc
adc
int
mov
aad
loopne
ret
das
mov
popf
mov
out
push
pop
xor
mov
enter
sub
pop
in
or
dec
js
jecxz
xlat
outsb
xor
mov
mov
mov
adc
test
push
ret
test
shr
enter
ret
sbb
clc
adc
movsb
dec
xor
mov
in
cli
jl
and
mov
pop
ret
outsl
lahf
jbe
mov
std
test
mov
inc
cld
sub
or
jbe
fnsave
mov
pusha
testl
lahf
inc
pop
rcll
ss
shll
rolb
es
fidivs
out
hlt
test
cmp
adc
push
je
cmp
push
ficompl
mov
and
jae
push
sub
push
xchg
push
mov
cld
call
or
pop
mov
mov
repnz
and
dec
mov
pop
inc
sub
dec
cld
movsl
mov
stc
repnz
inc
push
call
imul
lahf
imul
and
mov
gs
insl
or
call
pop
adc
inc
popa
mov
jnp
xor
cltd
xor
cmp
ret
jmp
or
pop
xchg
push
into
das
xor
push
in
add
test
outsl
repz
roll
dec
inc
inc
sbb
push
mov
jns
nop
push
mov
xor
lahf
std
cmp
addr16
in
popf
xor
pop
aaa
aas
add
cli
and
or
out
lahf
sbbl
rcr
enter
movsl
push
ja
shll
pop
xchg
jns
xor
push
xor
jp
lea
xchg
mov
out
repz
xor
shrl
pusha
loopne
into
push
or
mov
dec
add
add
xor
cltd
and
adc
in
movsb
fdivrs
ja
mov
mov
rcll
stc
push
sbb
fwait
das
out
xor
inc
mov
cltd
outsl
jge
mov
xor
sbb
dec
test
jecxz
mov
pop
cmp
gs
pop
cmp
xor
jg
sub
hlt
mov
mov
and
pop
sbb
out
je
cmp
loop
mov
inc
repz
xchg
lods
mov
cmpsb
daa
pop
mov
leave
in
jg
jbe
mov
dec
shrl
jmp
shl
and
cltd
push
pop
ret
sbb
outsb
rcr
andl
in
adc
pop
into
sub
xchg
cltd
ficoms
cmpl
dec
sub
lcall
out
repz
stc
ret
jp
popa
clc
fisubs
xorb
mov
push
fists
mov
sbb
xchg
xlat
jmp
mov
pop
stos
mov
xor
jmp
aam
fs
addr16
in
bound
pop
in
mov
les
pop
stos
nop
and
sbb
jmp
repz
sub
jle
inc
in
cmp
inc
mov
dec
loope
ljmp
inc
push
lcall
mov
hlt
xchg
adc
fs
int
and
jne
ficomps
cs
test
ja
jmp
ss
push
or
pop
bnd
test
les
scas
xchg
sbb
loop
leave
pusha
cmp
cmpsl
mov
xor
add
pushf
sub
jno
jmp
or
jmp
push
sahf
aam
psrlq
or
mov
andb
jmp
ror
daa
pop
fs
sbbb
enter
popl
sub
xor
push
insb
iret
xchg
idivl
lret
shlb
jg
mov
jecxz
sbb
and
cmp
mov
mov
mov
in
ja
dec
push
ss
in
fcomip
ret
sbb
xchg
mov
addr16
lods
jge
loop
insl
es
xor
sub
data16
outsb
mov
xor
xchg
arpl
mov
or
xor
jecxz
mov
pop
hlt
testb
sbb
add
rcr
push
xchg
mov
xor
ficompl
mov
fcmovb
sbb
shl
pushf
scas
daa
test
sbb
in
test
pop
loopne
outsl
mov
adc
xor
repz
pop
xor
xchg
and
jle
cmc
mov
mov
push
js
repnz
fists
jp
sub
jmp
adc
push
out
fimull
into
movsb
roll
mov
cmpsl
mov
jbe
add
pop
lcall
jecxz
fbld
cmpsl
icebp
psubusw
shrb
push
in
shrb
dec
in
adc
mov
lock
dec
sbb
fsubs
mov
test
push
inc
jl
push
std
sub
sbb
inc
adc
xchg
negb
fbstp
xchg
mov
mov
add
xor
popa
fcompl
fwait
cwtl
sub
mov
ljmp
out
popa
sbb
or
push
insl
clc
mov
fwait
push
les
and
or
jmp
cmpsl
bound
pop
mov
mov
cmp
sbb
inc
fisttps
cld
ficoms
adc
movl
and
mov
rclb
cmpsl
push
out
or
sub
jo
mov
xchg
stc
mov
fldpi
lods
lock
or
aaa
inc
mov
jmp
out
test
mov
xor
xor
pop
in
cmpsb
inc
sub
sub
pusha
or
inc
mov
push
fucomp
cmp
andb
scas
push
in
dec
cmp
out
les
mov
cmp
loope
xor
xlat
pop
lcall
mov
cld
or
ret
mov
mov
sbbl
sbb
dec
push
add
dec
test
aam
lods
js
push
insb
inc
xchg
lcall
push
mov
lods
inc
jge
lock
sub
outsl
jl
inc
sahf
cmc
lea
fnstcw
fstpl
ficomps
dec
cmpl
jnp
mov
aad
out
stc
mov
push
lea
inc
popf
sbb
push
inc
fwait
call
in
add
jmp
pop
xor
pop
arpl
fistl
daa
pop
adc
inc
addr16
out
sub
test
ret
fdivrl
add
aam
and
lock
and
in
popf
cmp
inc
push
andb
in
in
sub
jne
sahf
stos
inc
xor
sbbl
push
leave
push
pushl
insb
fbld
pop
dec
nop
movsb
cmp
pop
stos
pop
sbb
dec
shr
jge
ret
cmp
and
imul
test
cs
popf
das
leave
les
mov
mov
pop
push
adc
outsb
mov
loopne
sub
mov
fisubrl
adc
imul
test
das
push
and
and
ja
dec
shl
addb
lds
addl
repnz
hlt
shrl
in
add
pop
xor
jbe
test
xchg
repz
jle
or
inc
mov
lds
add
je,pn
cmp
xchg
cmp
cmp
jp
data16
cld
lcall
cwtl
out
adc
xchg
xchg
add
jecxz
jnp
sbb
dec
jno
ds
pop
or
jg
or
dec
push
test
mov
mov
call
push
mov
cmpsb
pop
js
cmp
inc
push
adc
lods
inc
inc
ljmp
xor
ds
add
mov
dec
push
jmp
call
loop
arpl
aam
nop
push
adc
test
add
gs
cmp
lret
aaa
popf
mov
mov
scas
inc
in
jno
jge
aad
lea
mov
cld
mov
movsb
test
xchg
xlat
mov
roll
push
push
add
jo
jo
test
pushf
loope
pop
push
cmpl
sub
orl
push
call
insb
mov
mov
xor
out
subl
fadd
mov
stos
dec
ficomps
in
test
mov
sti
fwait
gs
adc
add
popa
sub
pop
clc
mov
std
dec
bound
push
scas
imull
clc
push
mov
and
pop
in
jp
xchg
in
ss
jae
dec
cmp
sbb
xor
ljmp
es
inc
push
pop
movsb
in
shll
push
int3
mov
repnz
leave
cwtl
adc
fdivs
mov
pop
add
movsb
out
ret
sub
dec
pusha
ret
dec
pop
icebp
jno
movsb
and
mov
out
cmp
xor
fs
adc
xor
lock
mov
mov
and
add
addr16
sbb
inc
repnz
lret
arpl
or
add
xchg
jg
movsb
test
mov
rcl
jae
rorb
filds
out
jbe
aas
cli
add
push
or
cltd
add
mov
es
sti
in
mov
stos
fcmove
lret
roll
jle
ficompl
cmpsl
pusha
repz
xchg
inc
icebp
movsl
repz
insb
adc
lcall
and
jne
subl
sub
pop
outsb
add
inc
push
sarb
xchg
dec
pop
mov
in
pusha
out
sbb
xor
mov
push
or
es
xchg
lods
daa
push
mov
jle
es
xchg
push
inc
sbb
mov
mov
pop
jmp
out
jl
push
cwtl
cwtl
popf
add
test
and
ficoml
aaa
into
mov
decb
cmp
fdivs
pop
rorb
xlat
cmp
out
mov
aas
outsb
shl
mov
xchg
insb
sub
push
in
inc
sbb
aas
shrb
icebp
inc
fistpl
push
dec
push
jp
test
cmp
arpl
xchg
and
sbb
mov
cmpsl
ja
orl
cmpsb
dec
jno
jo
sti
xor
mov
test
lcall
nop
xor
leave
and
push
mov
fists
es
adcb
lods
lds
push
stos
popf
mulb
subb
and
or
aam
data16
adcl
test
lock
insb
lods
xchg
mov
loop
sbb
or
and
insb
in
dec
aas
daa
jg
jle
xchg
test
pop
mov
ds
lods
xor
adc
xchg
pop
fbstp
cltd
jae
add
fsubr
movsl
add
dec
lods
out
dec
mov
or
movsb
inc
shr
lods
pusha
or
jb
iret
clc
enter
dec
ja
cmpsl
aas
mov
cltd
xor
inc
loope
sub
sbb
stos
add
xchg
push
out
hlt
addr16
inc
push
mov
xor
push
xor
cld
cli
aas
dec
and
dec
pop
fsubrl
push
scas
inc
sbb
adc
das
jmp
cmp
xchg
xor
aad
mov
imul
add
call
adc
xor
inc
pop
ret
pop
enter
jl
cmpsb
adc
or
mov
inc
mov
incl
lds
mov
sti
jb
or
cmp
shr
les
mov
xchg
push
out
outsl
jae
push
mov
adc
or
stc
mov
pop
mov
std
pop
lret
lea
mov
divl
sbb
mov
mov
subl
dec
mov
jns
outsb
xchg
ficompl
insl
mov
xchg
cs
adc
sub
js
repz
adc
jecxz
jbe
cmp
jmp
inc
ljmp
or
push
fldcw
movsl
adc
std
and
int
shl
fildl
pop
mov
mov
cmp
je
adc
enter
xchg
xchg
xlat
push
das
sbb
bound
cld
adc
test
jne
and
jne
push
add
lcall
in
xor
or
xchg
daa
push
or
ror
sbb
push
leave
pop
imul
icebp
mov
cld
or
jae
and
test
xor
enter
adc
or
adc
xchg
std
lret
xchg
add
scas
ja
loope
cmpsl
rorl
or
add
aam
mov
imul
sub
jae
push
mov
push
outsl
cmp
jb
sbb
pop
testb
jecxz
je
add
sub
mov
addr16
mov
repnz
fwait
xor
sub
push
out
add
lret
xor
mov
cmp
push
movsl
jmp
xor
lods
aam
lahf
cmpsb
and
je
rorl
dec
enter
addr16
inc
push
push
pop
add
dec
cmpsb
mov
enter
push
xchg
mov
in
cmpsb
jecxz
jno
sbb
es
out
jmp
fwait
fs
cmpsb
pop
adc
stos
cmp
mov
ds
pop
clc
or
dec
insb
jecxz
dec
sbb
sbb
pop
xorb
mov
inc
adc
mov
push
pop
mov
and
mov
add
test
xchg
decl
stc
or
js
sbbl
int3
xlat
lahf
xorl
mov
mull
inc
dec
add
cld
mov
add
fstpl
or
stos
je
xchg
pop
popf
cmp
sbb
iret
aas
push
jg
push
mov
pop
mulb
les
out
inc
cmpsl
dec
jo
xchg
xchg
inc
std
mov
push
repnz
insb
push
jmp
dec
jo,pt
mov
and
push
and
xchg
xchg
stos
pop
or
cmp
dec
mov
ret
mov
inc
mov
jecxz
dec
int3
arpl
sub
mov
mov
sub
out
sbb
add
leave
xor
in
adcl
cmp
push
or
jbe
clc
inc
mov
xchg
push
call
int3
push
xchg
in
daa
fwait
cmp
mov
scas
push
scas
push
outsl
cmp
mov
loop
outsl
pop
xor
push
fs
sub
ss
addb
ficoml
cmpsl
fs
rcr
jbe
ljmp
sbb
cs
das
pusha
das
ss
pop
lods
mov
in
xchg
loop
cwtl
testl
mov
jb
les
pop
add
push
fisttps
xchg
mov
mov
cs
stos
cmpsl
xor
aas
add
cmp
fsubl
fidivrs
iret
cmovae
loop
adc
jmp
lahf
outsb
mov
lahf
rolb
push
fistl
xor
push
movsl
in
test
ljmp
pushf
ss
jno
inc
pop
mov
jnp
xchg
or
jp
sbb
add
jbe
insb
jg
inc
sbbl
in
loop
xchg
dec
mov
add
dec
fstpt
adc
lods
ljmp
pushf
sbb
popf
adc
sbb
test
push
mov
int
aam
pop
scas
pusha
cld
jmp
stc
nop
mov
push
push
enter
std
test
xor
dec
outsb
sarb
mov
dec
and
dec
fidivs
cmpsl
call
xor
and
push
jnp
cli
push
sub
mov
fidivl
dec
adc
mov
fwait
jmp
xchg
sbb
push
add
je
sbb
cs
aas
mov
loope
cmc
test
dec
dec
jp
jbe
dec
loop
cwtl
js
into
lods
fwait
jge
push
in
jl
addl
sub
push
mov
add
sub
adcl
adc
cmpsb
push
and
pop
sahf
fsubr
test
mov
out
addr16
shll
jmp
inc
sbb
pop
push
dec
in
or
lea
outsl
add
in
mov
ds
inc
int
mov
pop
insb
popf
sarb
pop
icebp
xchg
sub
jbe
jg
jne
loop
aas
inc
xor
adc
pop
adc
mov
mov
out
into
lahf
cmp
in
shlb
sbbb
out
mov
movsb
ds
mov
shrb
out
stos
xor
xor
fsts
or
mov
adc
repz
pop
sub
inc
ljmp
std
aam
xchg
mov
call
adc
ss
pushf
insl
inc
icebp
push
mov
cmp
sbb
cmp
adcl
pop
rorb
add
test
movsb
ja
add
es
lods
aaa
fsubrp
xchg
jae
hlt
pushf
aam
lods
shll
or
das
push
cmc
pusha
jmp
add
and
jge
inc
gs
jmp
dec
loopne
mov
mov
push
mov
test
xchg
pop
adc
xchg
inc
subb
jne
ds
lcall
pop
xor
cmp
in
mov
ja
cwtl
mov
insl
cmc
dec
and
mov
fdivs
push
pop
ret
push
mov
std
push
or
test
lret
jnp
pop
lods
in
jmp
xlat
divl
frstor
mov
mov
ljmp
hlt
mov
sub
scas
pop
cmc
cmpsb
mov
mov
dec
movsl
loopne
xlat
sub
mov
and
mov
cmp
insb
cs
inc
inc
push
std
je
mov
mov
loopne
pop
insl
fidivrl
addr16
jbe
iret
push
lahf
out
jno
sbb
xor
clc
inc
cmp
inc
sbb
loop
in
and
xor
sbb
push
and
lahf
adcb
into
push
int3
dec
sbb
movsl
sti
xchg
mov
ret
imul
and
loop
push
pop
mov
mov
ja
repz
xchg
sub
imul
stos
lds
push
mov
xchg
in
push
dec
mov
arpl
imul
cli
fucomip
mov
mov
xor
or
mov
std
sub
subb
out
es
sub
cmp
jbe
push
jmp
fwait
cmp
int3
je
in
imul
xchg
cs
xor
mov
orl
jns
lret
jp
push
push
push
sbb
mov
es
imul
pop
jle
jbe
leave
mov
mov
pop
push
push
jge
inc
in
fs
int
or
stos
fisubrl
aas
push
cwtl
fwait
pop
je
xor
push
mov
in
jge
sbb
cwtl
inc
cmp
jno
jl
pop
aad
repz
jecxz
out
notl
ljmp
push
cmp
cmpsb
pop
mov
cmp
jp
dec
cmp
xchg
scas
aas
dec
dec
mov
jae
inc
fiaddl
pop
popa
clc
je
mov
xchg
icebp
jns
add
out
je
into
xchg
mov
in
orl
xorb
imull
jge
jp
imul
mov
inc
fcompl
mov
push
popf
pop
fadds
insb
cltd
das
out
jg
mov
dec
mov
mov
and
mov
push
sbb
loopne
aaa
iret
inc
test
mov
rorl
push
pop
scas
imul
cld
fiaddl
cwtl
jge
mov
loope
cwtl
mov
inc
das
jae
fistpl
dec
aam
sahf
xacquire
ljmp
outsl
js
lcall
lcall
and
pop
jg
jge
jnp
out
push
sbb
or
shl
jge
imul
test
xchg
repz
sub
outsb
and
push
jae
push
jecxz
stos
cltd
jg
mov
mov
mov
xor
jae
pop
xchg
sub
mov
push
jns
dec
jmp
dec
aad
jl
out
imul
ret
pop
cltd
test
fidivl
insb
add
cmc
jns
pop
mov
rcll
lret
xor
inc
into
sahf
clc
fsubrl
sub
repz
pop
mov
std
insb
pop
dec
mov
dec
jg
sub
pushf
jnp
jno
rolb
xchg
pop
dec
popf
ret
lock
outsl
dec
or
popa
and
out
adc
push
or
in
sbb
clc
push
xor
cld
addr16
jge
inc
inc
jne
jae
mov
sub
dec
shll
in
in
xchg
jo
push
scas
nop
pop
insl
jl
in
pop
lea
inc
je
gs
push
dec
cmp
push
pop
inc
xlat
sarb
pop
and
xor
xlat
iret
xor
gs
mov
imul
lods
mov
adc
adcl
fildll
cwtl
sub
cmpsb
jecxz
dec
xchg
lret
cld
mov
lods
insl
sbb
ja
dec
push
mov
les
xor
enter
stos
and
xchg
into
and
cmc
data16
push
pop
lds
xchg
fwait
jmp
testb
inc
push
scas
cmp
aad
bound
lock
push
mov
pop
scas
or
mov
add
cmp
cmp
mov
shrl
leave
pop
adc
je
xorb
xchg
icebp
sub
push
fstps
sbb
lock
mov
mov
fisubs
inc
es
lcall
ret
push
in
xor
clc
and
push
test
pop
cltd
mov
rorl
xor
adc
adc
jo
xchg
and
je
loope
inc
lods
add
xchg
ret
dec
arpl
enter
sub
push
or
pop
inc
mov
popa
mov
into
pop
je
rcl
bound
pop
iret
das
mov
push
hlt
into
or
out
dec
out
jbe
stos
in
cltd
or
xor
cmp
sub
pop
insb
push
or
sub
sbb
inc
pop
push
mov
test
aaa
aas
push
push
jg
mov
push
mov
insl
pop
mov
or
cs
ljmp
mov
mov
pop
cs
inc
clc
or
push
hlt
shlb
shlb
popf
scas
sahf
mov
sti
aas
mov
sub
pusha
andb
test
pop
das
aas
out
aad
icebp
sub
jge
cmp
sub
addl
repnz
xchg
negb
mov
inc
frstor
inc
xchg
cmp
fldenv
adc
dec
std
aam
cli
pop
outsl
repnz
scas
in
mov
jnp
das
lock
dec
test
xchg
mov
adc
dec
pushf
and
sbb
mov
mov
insb
clc
add
sub
mov
cs
insb
loopne
pop
sbb
aaa
frstpm(287
jp
sbb
xchg
xor
insl
jg
mov
cltd
lods
inc
int
xchg
ja
mov
arpl
mov
mov
push
jae
les
dec
mov
mov
sub
leave
push
fsubl
adc
xor
mov
sbb
aaa
pop
xor
mov
and
movswl
jg
lods
xchg
mov
mov
cmpl
movsl
xchg
sbb
jl
sub
mov
fsubl
fdivrp
pusha
mov
cwtl
jp
movsb
dec
pop
jnp
cmc
mov
inc
leave
imul
xor
cs
mov
inc
adc
adc
mov
xchg
jae
les
push
mov
insb
or
aam
mov
and
xor
xor
js
mov
jl
or
scas
adc
fimull
gs
test
jle
into
shll
inc
jl
inc
imul
int3
xorl
shr
test
cwtl
cwtl
adc
dec
out
insb
xor
inc
insb
jl
rclb
pop
adcb
arpl
gs
gs
xchg
dec
xchg
add
pop
push
mov
cltd
inc
or
mov
js
cmp
pop
sbbb
cld
xchg
pop
inc
xchg
mov
lods
shlb
jecxz
push
push
push
or
cs
cmp
sahf
inc
call
in
in
scas
paddusb
mov
data16
ret
xchg
adc
mov
shl
lcall
jl
jg
xchg
jecxz
inc
jle
push
mov
mov
jno
test
xchg
sbb
rsm
insb
mov
mov
dec
adc
je
iret
test
mov
stos
test
sub
xchg
pop
jb
movl
jb
pop
mov
xchg
dec
mov
dec
popa
in
in
bound
std
insl
rorb
fnsave
dec
push
ja
mov
inc
adc
xor
pop
jo
cmp
sbb
adc
out
and
scas
jle
aad
jmp
adc
decb
xor
movsl
fisubrl
aam
xchg
dec
mov
xchg
aam
gs
and
or
aad
xlat
xlat
and
dec
and
push
insl
jo
adc
mov
leave
jno
pop
outsb
inc
adc
inc
inc
dec
mov
movsb
and
xchg
rorl
and
sbb
inc
jmp
jmp
push
xor
jmp
in
mov
inc
adc
lds
in
ss
arpl
push
and
out
out
cmp
cmp
inc
movsl
mov
mov
je
add
fcomip
jg
lds
sahf
mov
std
sbb
or
repnz
test
lahf
shll
in
enter
lret
and
pop
mov
add
push
pop
adc
push
lock
and
mov
push
push
lock
lods
inc
pushf
xlat
sub
fistpl
hlt
xlat
repz
and
push
xchg
xor
je
add
addb
sti
xchg
lret
cld
and
pop
int3
mov
or
cmp
or
mov
sbb
mov
inc
xchg
sub
shrb
sbb
std
ret
aaa
hlt
push
imul
cmpsl
sahf
cmp
jae
fistpl
cmp
stos
ret
fwait
repz
scas
in
mov
int3
aad
cmpsb
mov
jmp
aaa
adc
ss
cmc
xchg
ljmp
jge
mov
lods
ja
pop
das
movb
mov
daa
sub
repz
movsb
addr16
fcmovnb
or
jne
or
or
fbld
int
push
jbe
or
sbb
jno
leave
jnp
out
leave
xchg
and
push
jno
jmp
cmp
repz
xor
inc
pop
arpl
cmp
shl
test
scas
mov
int3
mov
rclb
dec
scas
mov
xor
fucomp
ret
sbb
jle
subl
jl
inc
repnz
adc
add
arpl
inc
into
add
xchg
pop
jno
repnz
adc
call
insl
dec
push
adc
orb
enter
inc
movsb
inc
xor
cli
std
lea
and
cli
sbb
pop
out
popf
sahf
jmp
xor
dec
cmp
dec
mov
pcmpeqb
fldenv
sbb
lret
jae
push
pop
fs
pop
icebp
lret
mov
inc
popa
xor
xchg
xor
aaa
lods
cmp
cmp
adc
xor
push
aas
mov
sbb
sbb
repnz
sbb
sbb
sub
push
mov
pop
insl
aam
adc
pop
jle
test
mov
inc
loopne
mov
jmp
imul
repz
mov
xorl
ja
cltd
or
cs
cmp
pop
js
pushf
int
int
mov
jbe
test
movsl
lcall
dec
jle
inc
push
out
fidivrs
inc
fmuls
out
fimull
loopne
mov
xchg
add
jge
mov
pop
leave
aad
mov
add
xchg
mov
fwait
jae
add
pop
adc
dec
test
inc
mov
ds
out
inc
hlt
scas
fisubrs
push
leave
pusha
dec
mov
mov
in
je
push
add
hlt
push
jae
push
jl
mov
negb
pop
lock
jge
mov
sahf
mov
fbld
cmp
inc
fildl
in
inc
fs
mov
ja
loope
les
sub
pop
cmp
rorl
inc
fmull
pushf
outsb
jb
jo
or
stos
push
fldt
adc
pop
es
or
outsl
xor
push
mov
lods
mov
jne
inc
cmpsl
and
mov
scas
into
ficomps
fsubl
mov
pusha
mov
test
adc
enter
movsb
mov
push
lods
push
test
adc
outsb
xor
sbb
push
adc
rclb
shll
add
jl
arpl
jnp
cmp
fmull
dec
lock
mov
les
sbb
cmpsl
sbb
mov
cmc
imul
movsl
stos
data16
sub
pop
loope
popf
ret
bound
in
popa
fmul
andl
xchg
mov
fidivl
jae
cwtl
dec
ja
fucomp
xor
inc
push
pushf
std
ret
mov
rorb
leave
or
mov
pop
inc
push
inc
test
inc
movb
add
aad
sbbl
andl
push
mov
repz
xor
sbb
and
shl
push
fisttpll
sub
lahf
sub
mov
das
jns
andl
xchg
add
add
jo
out
pop
push
imul
mov
dec
sti
lods
gs
adc
push
or
stos
insl
and
pop
cld
xchg
dec
or
ret
push
cmp
mov
push
adc
ficomps
fadd
mov
jno
mov
sbb
cli
push
push
inc
adc
fidivl
cwtl
cli
push
mov
sbb
iret
mov
insb
push
xor
inc
add
aad
sbb
lret
pop
jg
test
jns
cld
push
and
and
andb
sub
popa
pushf
popa
out
add
cmp
add
loopne
outsb
xchg
mov
mov
push
cld
xchg
xchg
and
xor
mov
or
fmull
pop
add
jg
push
inc
or
scas
test
sarl
loopne
adc
dec
xor
inc
lock
pop
inc
std
jl
cmp
inc
cs
cmp
pushl
setns
mov
cli
test
lret
dec
xchg
mov
or
mov
and
cld
ja
daa
push
mov
aas
add
aas
jmp
popa
out
push
inc
sbb
adc
inc
pop
and
jecxz
mov
sbb
inc
mov
sbb
pushf
jae
cmp
jmp
aaa
mov
jae
es
pop
cs
push
push
pop
mov
daa
fildl
mov
mov
or
lock
rcrl
jecxz
mov
pop
subb
push
repnz
scas
lods
push
jbe
mov
lds
sbb
loopne
adc
adc
and
mov
sbb
add
imul
pop
imulb
lods
push
test
test
xchg
mov
jp
pop
repnz
cmp
rorl
push
cmp
sti
xchg
sbb
pop
adc
mov
aam
lea
mov
into
push
or
sub
repnz
fst
sbb
pop
cmp
lods
movsb
out
xlat
lods
and
mov
lods
gs
sub
jnp
cmpsb
lods
cmc
xor
or
push
mov
in
pusha
sarl
cmc
xchg
add
mov
jg
pop
test
jns
mov
lret
pop
mov
inc
fisubs
insl
sub
cmpsl
sbb
mov
mov
dec
outsl
rcrb
rol
add
dec
jecxz
lret
in
push
push
cs
sbb
aaa
pop
pop
in
lds
fadds
dec
inc
add
ja
push
cmc
xor
add
in
mov
push
push
enter
mov
popa
cmpsb
sbb
test
sub
loopne
jo
sbb
fcompl
lret
andb
jne
adc
movsl
xchg
jno
insl
cmp
mov
xchg
adc
push
orl
dec
test
pusha
loop
cs
xchg
mov
in
pextrw
lods
cmp
push
push
stos
fidivl
push
in
add
and
mov
lea
sar
cld
outsl
mov
mov
adc
jnp
cmp
cli
subb
lahf
and
mov
pop
outsl
sub
push
int3
fs
stc
mov
lcall
data16
scas
and
fisttpll
cmpsb
push
aaa
into
insl
inc
imul
mov
or
adcl
notl
add
pop
cmpsl
or
add
push
mov
jnp
les
xor
xchg
pop
mov
jnp
iret
dec
es
cs
inc
aam
idiv
fyl2x
cs
sbbb
ss
and
push
jmp
xchg
ljmp
arpl
add
cmp
xchg
test
icebp
inc
in
cmp
ljmp
imul
rclb
sbb
ljmp
cmp
stc
je
addb
jg
or
jo
xchg
pop
rcl
sbb
ret
pusha
sbb
sbb
sub
and
push
or
les
jmp
ljmp
xor
scas
scas
jl
std
imul
orb
adc
cmpb
mov
push
scas
sub
and
add
hlt
push
xor
sub
xchg
fsubrs
rolb
lcall
sahf
jno
loop
mov
mov
and
cmp
das
arpl
xchg
cmpsb
fdivrl
xchg
insb
int3
out
cmp
movsb
repnz
push
popa
cs
add
jge
movsb
and
mov
int3
pop
adc
xor
shll
pop
call
add
js
xor
mov
pop
push
push
cmc
int
ss
out
ret
aam
mov
dec
sbb
mov
fisubrl
cmpsw
jecxz
mov
fs
adc
lods
cmpl
cmp
adc
xchg
ja
es
data16
cs
mov
mov
lods
hlt
shrb
stc
add
sbbb
jl
xor
push
mov
pop
jno
aad
daa
nop
xabort
pop
cltd
sahf
out
jnp
add
xchg
pop
and
pop
ss
arpl
inc
sbb
pop
fisubrl
cmp
imul
out
mov
mov
push
inc
popf
sahf
or
sarb
xlat
inc
jo
ljmp
cld
mov
daa
or
scas
mov
shll
mov
mov
imul
sbb
mov
out
xchg
push
xchg
mov
sbb
out
sahf
aad
mov
data16
sbb
cmc
fs
iret
jno
or
or
jmp
ficoms
sub
add
inc
xor
sbbb
xchg
inc
clc
inc
xlat
sub
push
fidivl
pop
cmc
fs
pop
idivb
andb
ret
or
xor
cwtl
out
and
pop
addr16
or
mov
jne
add
in
push
insl
lcall
push
lcall
pop
xor
mov
mov
mov
push
in
in
xchg
into
in
jl
lcall
add
icebp
lahf
arpl
lret
pop
xor
cli
out
sub
stos
clc
gs
mov
jmp
ss
cli
sbb
mov
push
pusha
jnp
rclb
test
stos
repz
sub
movsb
mov
adc
mov
mov
pop
adc
mov
adc
fists
pop
jb
outsl
push
jo
xor
shl
arpl
lock
ja
fisttps
cs
mov
test
adcb
fdivp
adc
sbb
inc
jg
orb
out
ja
std
stos
inc
xchg
or
leave
call
push
adc
pop
xchg
cmpsb
ds
mov
cmp
dec
mov
xchg
arpl
flds
cwtl
in
xor
xchg
mov
fistpl
aam
sub
xor
icebp
bound
xchg
sahf
mov
inc
pop
sbb
int3
icebp
mov
fs
sbb
mov
int
aam
jg
push
or
mov
mov
sub
mov
mov
cli
insb
dec
pop
pushf
xor
insl
lahf
mov
ljmp
insl
stc
xor
sbb
fldl
in
dec
test
jno
cld
out
shrl
sub
stos
cwtl
mov
adc
mov
sti
xchg
and
or
add
xor
lock
mov
or
or
shll
xor
mov
push
jno
push
dec
or
inc
fmull
dec
fucomp
pushf
fimull
pop
fiadds
arpl
mov
push
and
rcr
lock
cli
dec
fildll
test
data16
loopne
mov
cmc
cmovg
subb
rorb
repz
jo
cmp
je
pop
push
test
testb
xor
mov
in
inc
outsb
sbb
pop
cltd
out
pop
sbb
outsl
mov
jle
or
jnp
mov
mov
movsb
mov
ljmp
sahf
prefetchwt1
xor
fldt
mov
out
das
cmp
pop
pop
mov
dec
mov
add
sbb
stos
inc
cmp
and
leave
mov
test
loopne
pusha
mov
insl
movsb
or
dec
jl
lret
lods
xor
dec
notb
mov
pop
ds
pop
dec
movl
mov
cmp
jns
fcomps
xor
decl
clc
jge
ljmp
inc
les
cmp
mov
cltd
xchg
jns
jecxz
mov
cld
shrl
push
and
data16
and
mov
xchg
fwait
dec
sub
cmp
movsl
jns
ficompl
lahf
cmpsl
sbb
cwtl
imul
lret
mov
push
stos
popa
test
cli
mov
in
mov
imul
jo
outsl
add
test
rcl
adc
fmulp
fildl
xchg
fcmove
mov
lock
sti
lahf
adc
or
push
in
ss
dec
xchg
cs
adc
sub
cmc
jne
in
das
lret
pop
cmp
int3
dec
int3
jbe
bound
xorb
lea
xchg
add
scas
jl
pop
std
push
sahf
push
sti
jecxz
stos
das
and
push
mov
pop
fnstsw
fsub
iret
dec
lcall
or
and
pop
addr16
xchg
cltd
xor
xchg
xor
jecxz
inc
aad
lods
js
in
mov
pop
imulb
inc
jge
xchg
movsl
sbb
pusha
xor
xchg
sbb
out
adc
imul
dec
xor
pop
insb
push
mov
cmp
mov
cmpsl
testl
xor
mov
dec
iret
sbb
add
fisttpll
sub
es
movsl
ficoml
les
cmp
or
push
iret
sub
stc
add
out
push
movsl
fdivrl
lret
xchg
lds
rep
leave
int3
fdivrp
adc
daa
xor
stos
xchg
stc
xor
inc
lahf
jmp
inc
fistps
mov
popa
divl
mov
fbstp
imul
rcrl
mov
adc
repnz
dec
shl
testb
cmc
jns
movsb
dec
pop
mov
jb
inc
mov
inc
jnp
mov
sbbl
jmp
mov
ret
cwtl
pop
sub
fdivrp
sbb
int
or
mov
aaa
scas
xchg
push
arpl
into
ljmp
push
pop
loope
fistl
in
sub
fcmovb
pop
subb
fnstenv
dec
scas
jno
sub
repnz
dec
rclb
xchg
jns
cwtl
xor
sbb
lea
push
inc
pop
scas
xor
out
and
and
stos
jp
mov
xchg
daa
xor
xchg
add
fcoml
push
cmp
mov
cmp
sarb
pop
cmp
gs
adc
push
jne
mov
popa
stos
cmpsb
push
jb
mov
repnz
push
xchg
sub
pop
or
cwtl
add
xchg
daa
data16
aaa
sub
les
fildll
adc
jmp
repnz
rcrl
mov
fildll
push
test
shrl
cmc
xchg
scas
inc
out
add
sbbl
shrb
mov
int3
mov
out
cmp
xor
call
mov
popa
clc
stc
push
and
enter
ret
ret
adc
int3
push
arpl
test
mov
sahf
pop
je
jl
nop
push
mov
push
andb
mov
cmp
fs
fimull
les
adc
mov
adc
into
xchg
lock
mov
xchg
adc
adc
daa
pusha
dec
mov
xchg
dec
dec
push
push
xor
ljmp
loope
in
js
test
insb
stos
mov
xchg
pop
push
dec
insb
add
cmp
adc
sub
sub
xchg
jne
pop
imul
mov
mov
mov
nop
popa
add
xlat
mov
xchg
cwtl
int3
in
jne
in
and
fsubs
dec
fsubl
jecxz
adc
pushf
bound
fnstenv
mov
mov
les
sbbb
xor
sahf
or
xchg
adc
mov
xchg
mov
or
outsb
xor
jmp
pop
adc
dec
jecxz
mov
inc
adcb
insb
js
jge
stos
adc
push
rorl
call
push
mov
xchg
mov
cmp
sti
imul
ret
inc
or
xchg
pop
mov
jl
mov
and
adcb
pushf
sub
mov
xchg
jg
fmulp
jl
pusha
mov
adc
icebp
int
pop
sub
aaa
lods
inc
push
nop
je
aad
orl
and
es
push
insb
cmp
aaa
jns
xchg
popa
push
ljmp
ret
push
jle
addr16
jne
xor
sub
ja
cli
xor
cmp
pop
add
test
and
add
scas
xor
shll
dec
hlt
xor
fmuls
shrb
fdivl
jbe
outsb
lret
in
xchg
ds
add
scas
fisubrs
sub
jl
inc
mov
adc
fbstp
fidivrl
insb
cmp
pop
mov
or
sbb
lcall
adc
insb
les
pop
mov
jb
dec
fs
jns
sarb
and
jp
and
push
jae
hlt
adc
push
fs
stos
movsl
das
cmp
test
stos
adc
push
inc
xor
pop
sub
repz
jle
xchg
pop
sarl
in
ret
pushf
sub
lds
jecxz
jbe
movsl
shll
vmovq
add
cmp
jmp
sub
jns
xor
mov
and
or
stos
inc
and
push
cs
int
in
pusha
mov
loope
repnz
mov
or
rcrb
adc
mov
and
cmpsb
std
fiadds
fwait
insb
lock
dec
aam
or
xor
mov
cmpsb
mov
push
das
js
pop
sub
out
cmp
inc
and
arpl
stc
jne
das
ret
pop
push
xchg
scas
cmpl
xor
or
cmpsb
adc
dec
std
cmc
wbinvd
sti
ret
mov
dec
fistl
lock
xor
jecxz
mov
fldl
mov
pop
mov
mov
or
jne
inc
mov
xchg
adc
lock
xor
js
aad
push
mov
add
mov
mov
movb
popf
mov
push
push
push
adc
sbb
xchg
adc
xor
cltd
test
clc
movsb
sbb
jno
push
mov
rcrl
xor
fistpll
or
and
cmp
pop
and
xchg
dec
jns
push
jmp
sbb
and
jb
pop
cmp
out
and
adc
hlt
mov
xchg
outsl
xchg
testl
add
sbb
inc
sbb
mov
mov
in
adc
xlat
sub
pop
cld
loop
repz
jns
push
addr16
cs
xor
adc
inc
out
pop
mov
int
sub
and
inc
cli
push
or
pop
xor
aam
sub
in
xor
pop
mov
loopne
js
or
subl
sahf
push
mov
or
daa
inc
insb
in
int3
mov
xor
test
xor
jne
push
sub
xchg
mov
sbb
repz
popf
or
cmc
and
out
ror
xchg
jnp
pop
cmpsl
ret
xor
add
data16
xchg
mov
xchg
mov
pusha
arpl
inc
aad
outsl
sbb
cmp
adcb
or
xor
lret
xor
add
jnp
call
mov
mov
dec
in
cltd
into
mov
pop
xor
cmp
imul
add
enter
sub
pcmpeqb
adc
xchg
adcl
loope
lcall
mov
fsubrp
dec
pushf
sbb
shll
or
xor
xchg
xor
pop
repnz
mov
jns
loope
test
cmp
sbb
push
mov
dec
cmp
mov
popf
dec
mov
inc
mov
fdivrs
cmpsl
or
jb
movsb
cmp
popa
subb
repnz
sarb
add
xchg
popa
je
js
stc
push
icebp
inc
sarl
mov
push
mov
fs
int
cmc
dec
scas
jo
popa
les
mov
dec
push
xlat
sti
xchg
jle
fwait
pminub
fwait
mov
push
push
gs
jmp
loope
shl
jecxz
imul
fdivrl
ja
pop
sbb
inc
inc
dec
jne
jnp
cwtl
lds
fisttpll
dec
jno
cmpb
sub
jp
repz
inc
cli
push
mov
jecxz
in
sti
mov
pop
xor
xor
test
adc
enter
out
jnp
mov
inc
inc
push
shrb
or
xchg
ja
dec
sbb
mov
shr
dec
repnz
mov
sbb
pop
pop
call
sbb
fcmovnu
jge
push
mov
shl
aas
jge
inc
test
pop
fwait
pop
mov
fbstp
scas
out
sbb
sarb
xchg
sub
adc
xlat
cmpsl
jo
jmp
ss
sub
hlt
or
jb
les
or
movsb
fldcw
jnp
pushf
das
push
popf
xchg
push
movsl
jl
mov
sbb
popa
test
sbb
fsubr
mov
xor
sub
inc
lock
shrb
es
fidivl
adc
scas
xchg
icebp
inc
roll
inc
fdivl
ret
roll
fincstp
ret
outsb
xor
or
cmp
pop
push
push
sub
lods
inc
sahf
add
es
mov
mov
cltd
xchg
scas
push
fistps
sbb
and
pop
out
jecxz
cmp
inc
in
incb
mov
adc
mov
mov
or
sarb
pminub
xorl
push
bound
sbb
push
mov
inc
fnstcw
xor
popf
sub
xchg
mov
cld
mov
pop
hlt
cmp
mov
cmp
adc
cltd
outsl
push
cwtl
sub
lcall
and
sbb
in
mov
test
sub
neg
lahf
pop
lret
xchg
inc
nop
sbb
loop
jmp
cmp
icebp
movsl
testl
loop
daa
cmp
shll
imul
mov
mov
rcrb
stos
fs
loopne
mov
repz
or
jge
mov
lods
and
inc
stos
mov
or
ffree
xchg
jl
dec
pusha
pusha
add
cli
sbb
jge
dec
daa
lods
in
xchg
and
leave
mov
add
cmpsl
mov
xchg
pop
in
adc
jns
add
and
xchg
push
pop
out
xchg
int3
idiv
cltd
fdivrs
or
and
jl
std
movsb
mov
adc
mov
mov
fcomps
lret
dec
mov
js
pop
jo
push
sarl
pop
fstpt
ss
jmp
inc
popa
xor
mov
cmp
jl
push
jb
push
mov
dec
mov
adc
fmull
mov
mov
sub
xor
cmp
adc
pop
aad
xor
clc
outsb
sub
call
dec
sub
dec
hlt
dec
pop
cmp
in
mov
pushf
icebp
add
sbb
lahf
test
pushf
pop
insb
sub
cmp
ret
in
cmp
dec
cmp
sbb
jge
inc
mov
test
push
call
jnp
cltd
or
cwtl
sub
jle
mov
mov
sub
push
push
lods
xor
dec
dec
fsub
xor
xchg
jb
mov
fsubrl
push
rcll
mov
mov
xor
lock
push
shrl
std
inc
loope
test
pop
scas
push
icebp
sub
addr16
movsb
adc
pop
add
and
push
push
mov
cwtl
ja
loope
adc
inc
sbb
jne
sub
xchg
mull
outsl
inc
dec
sbb
mov
xchg
insb
nop
jnp
mov
call
bswap
sti
iret
movl
pop
iret
daa
pop
hlt
test
cmp
imul
outsb
ret
mov
sti
adc
cmp
add
aas
sub
dec
fdivl
out
iret
mov
jae
xor
jl
mov
and
adc
leave
xor
pop
cmp
inc
cmp
inc
add
sbb
adc
mov
sub
mov
cmp
mov
popl
jb
std
push
js
cltd
sbb
jmp
xor
leave
dec
sti
sbbl
sarb
outsb
jmp
lahf
mov
lcall
mov
mov
push
push
inc
fdivl
stc
insl
ja
dec
or
pop
insl
test
mov
clc
stos
push
popf
in
push
andl
sbb
stos
jg
icebp
mov
and
dec
adc
cmp
inc
in
cmc
lahf
sahf
iret
movsl
cmp
xchg
subb
add
imul
mov
mov
add
push
test
push
icebp
nop
mov
testl
add
dec
outsb
push
sbb
insb
scas
mov
int
lock
mov
push
sub
dec
cmp
mov
int3
insb
dec
push
jnp
xchg
xchg
xchg
cmp
inc
scas
sub
in
ret
outsl
push
outsb
mov
and
mov
ret
idivl
push
or
repnz
xchg
ss
pop
ret
dec
xlat
or
ljmp
mov
arpl
shrl
in
inc
bndstx
bound
add
mov
push
cmp
sub
arpl
push
sub
pop
outsl
enter
cmc
or
xchg
adc
add
popf
xor
xor
jmp
pop
in
inc
xlat
push
inc
fdiv
jnp
in
lret
fstps
mov
dec
add
cs
scas
jns
sbb
jb
leave
push
and
sbb
adc
pop
mov
pusha
pop
cs
dec
mov
push
shrb
mov
sahf
in
pop
sub
outsb
add
adc
popa
inc
lock
push
xchg
into
clc
lahf
jbe
das
loopne
push
addl
mov
xlat
push
inc
inc
inc
mov
clc
filds
push
add
scas
jno
jno
je
sbb
jne
ss
mov
cwtl
mov
inc
cmp
je
push
add
roll
add
popa
jg
or
xchg
xchg
pop
stos
in
inc
aas
in
sbb
lahf
popa
cmp
mov
xchg
pop
mov
mov
jo
push
in
push
mov
pusha
loop
jg
sti
sbbb
jecxz
ljmp
iret
inc
mov
sarb
fldl
inc
mov
adc
sbb
inc
pop
jnp
rolb
ss
push
lcall
sub
push
fstpt
fnstsw
rcll
and
ljmp
sub
dec
mov
xor
fcomps
pop
mov
cs
dec
shlb
ds
xchg
push
push
jne
insl
pop
add
ret
push
or
adc
sub
mov
xchg
testl
fbld
arpl
mov
out
in
data16
pushf
cmp
push
outsb
std
jae
das
imul
xchg
push
pushf
dec
stos
cltd
xor
fwait
jnp
or
jne
mov
sub
cmpsb
inc
leave
xor
out
xchg
lret
pusha
stos
sbb
xor
pop
shll
stos
mov
pop
inc
repnz
and
in
and
mov
movsb
push
sarb
scas
push
xor
mov
ja
pushf
mov
mov
popa
sti
push
bound
fbstp
roll
ljmp
cmp
mov
dec
int3
mov
fsubr
jp
add
arpl
sbb
jns
lds
mov
fisubs
test
or
inc
std
and
mov
iret
call
or
arpl
test
fnstcw
rclb
addl
adc
fmuls
mov
pop
pop
imul
stos
fsubr
dec
jle
push
mov
call
xor
js
in
inc
ret
scas
push
mov
int
cltd
scas
adc
je
adc
outsl
loopne
mov
mov
cmp
jle
orb
scas
inc
or
push
push
out
cmpsb
mov
sar
inc
push
jae
jmp
into
bnd
lea
sarl
or
cmpl
cmpsb
dec
add
sbb
lahf
call
fidivl
sub
pop
xor
nop
mov
jp
arpl
aam
inc
enter
pop
fnsave
push
mov
or
and
movsb
std
pop
ja
test
mov
push
cmp
div
les
add
movsl
sbb
cmp
mov
mov
mov
adc
test
lods
cli
push
mov
add
inc
pop
sbb
mov
mov
int3
and
or
shr
mov
test
imul
jnp
inc
sar
jo
sbb
aaa
ja
pop
cs
dec
pop
js
rcrl
stos
or
imul
jge
arpl
movsb
mov
icebp
mov
fsubrs
mov
je
daa
mov
mov
sarl
rcl
fs
add
es
jecxz
and
imul
sbb
ret
dec
inc
sbb
ficoml
cmp
fsubrl
lret
inc
and
add
int
pop
daa
dec
lahf
adc
sbb
negb
in
mov
xchg
cld
scas
ret
sbb
jns
sarl
cli
es
xchg
adc
adc
fs
sbb
cmpsl
lds
subb
pop
scas
and
and
sbb
mov
and
data16
push
imul
jae
mov
dec
mov
sub
popa
adc
pushf
mov
out
loop
pop
aam
test
xchg
cmp
test
aas
icebp
movsl
icebp
add
dec
cmpl
les
sbb
cs
jns
push
mov
fisubrs
or
xor
leave
push
pop
adc
xor
popa
ss
addb
daa
jbe
nop
cli
pop
aaa
mov
xchg
aam
and
mov
lods
push
imul
out
fsubl
jbe
mov
rorb
push
negl
shlb
inc
fistl
cmp
mov
pop
adc
or
sbb
sub
pop
xorb
scas
ret
mov
rorb
fldl
cmpsl
mov
scas
xor
mov
jne
popa
bnd
pop
andl
sahf
push
cmp
fldcw
sbbb
push
jecxz
dec
les
add
inc
movsb
dec
ljmp
gs
inc
test
dec
or
repnz
loope
mov
aam
cmp
and
testl
jle
lods
mov
out
in
xor
mov
in
cmpsl
cwtl
mov
into
push
jg
cmp
int3
fs
call
jae
test
push
in
stos
inc
dec
pop
jg
in
inc
mov
mov
ret
bound
fcmovnbe
hlt
push
int3
and
repnz
aaa
hlt
ret
mov
jge
cli
mov
xchg
fdivrp
outsb
lds
or
pushl
lds
leave
andb
aam
cmp
add
mov
xor
test
xor
cwtl
mov
je
aad
and
aaa
and
mov
adcb
hlt
xor
in
mov
push
stc
mov
mov
jg
add
xchg
icebp
and
or
mov
je
add
pop
insb
jns
sbb
int
dec
jb
clc
push
stos
inc
pop
out
sbb
jns
sbb
mov
pop
jmp
loope
ds
dec
lret
xor
push
insl
dec
adc
jnp
jle
cmp
lods
sub
pushf
popa
outsl
std
jo
int3
mov
out
int3
cmp
push
mov
repnz
dec
and
pop
add
xchg
sub
sub
cmp
xchg
push
gs
cli
pusha
bound
lret
inc
arpl
xor
fiaddl
imul
call
filds
aam
orl
mov
jp
or
mov
ret
aad
mov
loopne
jo
cmpsl
push
push
mov
cli
in
clc
mov
pop
arpl
inc
int3
dec
pop
xchg
int
mov
ljmp
mov
aaa
adc
in
xor
mov
loop
inc
pop
sbb
testb
push
lea
cmpsb
out
push
mov
cmp
and
xor
mov
idivb
mov
ja
andb
inc
lods
clc
adc
pushf
ror
jg
std
mov
fidivrl
ja
mov
mov
sarb
lret
lock
je
outsl
dec
mov
sub
jp
stos
mov
xchg
leave
mov
dec
mov
and
xor
movsl
ret
sbb
cs
dec
loopne
adc
xchg
inc
xor
subb
cmp
movsb
ja
pop
inc
lret
ficoml
or
dec
or
mov
pop
pop
push
or
stos
mov
pop
xor
pusha
inc
rcrb
rol
test
in
lcall
std
fcoml
jne
pop
cld
jne
dec
loop
xchg
test
mov
stos
mov
cwtl
gs
into
xchg
adc
inc
cwtl
xchg
xchg
loop
std
insb
mull
sahf
fmull
insl
jge
pop
sub
mov
outsl
sub
mov
dec
jl
xlat
outsb
add
pushl
sbb
dec
pop
sarb
mov
and
fs
add
int3
or
pop
cmp
nop
outsl
xchg
cwtl
andb
movsl
pop
jno
movups
or
lods
mov
aam
orl
pop
and
jae
add
test
cmp
js
int
in
jecxz
inc
inc
xlat
dec
mov
pop
adc
inc
mov
fidivl
mov
and
xor
xor
test
jle
or
test
mov
outsb
cmp
add
test
call
sbb
mov
aaa
test
rcrl
and
push
dec
pop
xor
mov
push
sti
js
scas
movsl
scas
push
sub
jle
fmul
xor
jmp
and
mov
pop
sahf
cli
xchg
mov
xchg
mov
arpl
outsl
scas
mov
and
cmp
mov
fucomp
bound
xchg
or
push
shrl
pusha
jno
sbb
mov
enter
dec
insl
cmpsl
push
call
movb
in
js
mov
sti
sub
hlt
sarl
lds
inc
add
inc
pop
dec
cmp
or
cmp
dec
adc
les
adc
xor
dec
sub
mov
fstl
ds
push
sub
inc
scas
fldl
cmp
sub
nop
xor
cmp
dec
dec
fidivrl
mov
mov
decl
xor
jp
inc
cwtl
inc
rcrb
push
fildl
xchg
cmp
fadds
loope
mov
add
xorl
push
pop
sahf
inc
pop
adc
pop
cmpsl
mov
xorl
xchg
addr16
inc
or
inc
ljmp
pushf
imul
and
leave
dec
loope
repz
dec
dec
dec
add
stos
fwait
xor
pop
lods
call
je
jg
jp
fwait
xor
fsts
push
test
in
js
xchg
mov
or
lds
in
pusha
movsb
mov
jecxz
enter
pop
mov
lock
sti
into
enter
aam
mov
jno
aam
cmpsl
add
dec
in
cmp
push
lods
ljmp
out
xchg
add
das
rcrb
xchg
aad
push
ret
aad
repnz
pop
cmp
xor
dec
add
in
xchg
scas
imul
xchg
out
jno
or
scas
dec
fstpl
inc
fs
jno
lock
or
push
out
loope
out
or
aaa
movsl
dec
fnsave
xchg
loopne
fadd
push
jns
imul
adc
leave
mov
outsb
loope
fwait
les
movsb
push
lcall
push
call
push
sbb
xchg
xchg
lahf
adc
inc
insl
jno
iret
cmpsb
cmp
std
mov
jmp
jne
iret
push
inc
outsl
mov
int3
hlt
and
xlat
push
push
push
mov
insl
sub
dec
add
mov
cwtl
jecxz
inc
dec
loop
iret
loope
fwait
dec
imul
inc
lret
aad
and
scas
dec
scas
ljmp
xchg
aaa
int3
mov
fstl
and
outsl
stos
hlt
popa
mov
nop
pushf
sbb
nop
pushf
mov
xor
clc
dec
int3
rcrb
outsl
jns
xlat
loopne
mov
add
lods
xchg
jp
push
lock
scas
scas
inc
fstl
inc
aaa
mov
lret
dec
aad
jge
shr
lods
pop
orl
dec
push
cmc
push
es
test
aaa
adc
jl
xor
bound
jae
sbb
fwait
push
into
daa
test
dec
imull
lods
cmp
sbb
fs
fimuls
insl
push
imul
or
inc
fisubrs
mov
pop
cltd
mov
pop
iret
enter
lret
scas
loopne
adcl
sbb
mov
push
jae
aaa
inc
rclb
ficompl
aad
sbb
jno
scas
in
int
aas
shll
dec
in
loope
dec
loope
aad
sub
lods
inc
call
outsl
das
icebp
loopne
rcl
in
jl
out
push
ljmp
pushf
cli
cmpsb
cmp
int3
push
pop
aas
xchg
je
loop
movsb
int
scas
int3
lds
decl
bound
cmp
adcl
inc
fisubs
dec
mov
cli
cmpsl
mov
xchg
dec
mov
sub
dec
test
jno
pop
sahf
pop
xor
imul
idivb
shlb
and
inc
test
pop
mov
test
sahf
in
mov
and
clc
sub
sbb
jg
and
jo
ds
notl
aad
adc
test
ja
cmc
mov
sbb
test
in
pop
frstor
xor
aas
repnz
sahf
and
push
mov
sub
divl
pop
stos
stos
fnstenv
jae
and
cli
or
clc
cwtl
pop
push
jne
cmp
sub
ds
imulb
sub
out
dec
orb
adc
push
popf
test
aas
jb
inc
and
inc
repz
scas
test
inc
push
call
lock
arpl
mov
lods
nop
lods
rcl
hlt
cmc
cmp
xor
aas
push
cld
test
inc
lcall
adc
aaa
ret
daa
imul
mov
sbb
push
sub
add
jbe
stos
mov
and
add
mov
jo
sti
adc
incl
sbb
mov
out
add
out
notb
add
mov
stc
hlt
or
movsl
sbbl
shll
pop
rorl
fcmovnbe
push
jno
into
lahf
jg
and
dec
adc
mov
into
dec
jecxz
clc
adc
mov
and
inc
out
test
aaa
sbb
lcall
mov
std
push
fdiv
test
loop
xor
sub
mov
cli
xchg
adc
xchg
movsl
cmc
sub
dec
dec
in
lock
xlat
jecxz
add
aad
imul
jae
adc
jnp
add
jno
pop
repz
sbb
cmp
add
sub
sbb
stos
into
push
xchg
cmp
sub
mov
ret
cmp
pop
sarl
aaa
data16
push
fs
xlat
mov
or
in
fldenv
ds
out
cmp
add
lds
and
std
jns
imul
jns
push
syscall
testb
cmp
mov
lret
fsubs
push
cli
adc
in
push
inc
cmp
inc
mov
movsl
cmp
inc
fistpl
cld
stos
jp
ljmp
xor
shl
adc
sbb
xchg
repnz
xor
dec
adc
mov
push
inc
cmp
sbb
cmp
or
push
pop
and
insb
mov
mov
bswap
cmpsb
mov
or
mov
out
shrb
dec
leave
inc
test
xchg
std
cld
jo
pusha
push
outsb
xchg
push
xchg
fldenv
test
popa
int
aad
mov
dec
push
hlt
pushf
jge
test
sub
int3
inc
sti
outsb
sbb
mov
xorl
cmpsl
inc
rorb
ja
mov
sbbl
shrb
mov
pop
jecxz
fldcw
mov
pusha
cld
fisubs
inc
je
clc
sahf
mov
movlps
mov
pop
adc
pop
daa
mov
xor
popa
rorl
iret
dec
mov
ds
out
shrb
lret
gs
cmpsl
cmp
dec
insl
in
xchg
xchg
jnp
ret
cmp
push
rep
add
icebp
stos
jae
mov
mov
aad
mov
adc
xor
inc
insl
sbb
adc
and
add
inc
jge
jmp
xchg
dec
jmp
or
mov
jae
enter
lret
iret
add
pop
inc
cmp
pop
jno
daa
xor
pop
mov
arpl
ret
fcomi
hlt
mov
bound
out
int3
push
into
stos
xchg
lret
push
aad
xchg
mov
mov
or
xchg
jl
xor
jg
in
out
mov
mov
jg
cmp
lcall
cwtl
incb
sbb
fstpl
into
mov
imul
nop
adc
adcb
add
add
mov
movsb
push
scas
filds
aas
and
lret
adc
inc
xlat
mov
sahf
insb
popf
iret
aaa
adcl
add
cltd
xor
repnz
stos
add
xchg
mov
xchg
and
xchg
xchg
lcall
pop
push
es
adc
in
mov
gs
or
lret
or
mov
sbb
mov
cltd
std
es
test
inc
lcall
fs
clc
jge
dec
stos
jmp
mov
and
imul
movsl
or
mov
cmp
testl
mov
fsubl
sub
clc
in
xchg
pop
mov
popf
xor
add
inc
arpl
cmp
fs
or
adc
repz
add
inc
addl
mov
cmp
out
outsb
sti
lcall
lcall
push
test
mov
les
loop
out
xchg
pop
pop
jo
clc
out
je
inc
aaa
add
cmp
push
add
sbb
fldcw
fildll
pop
adc
pushf
push
bound
pop
sbb
push
jno
clc
gs
movsb
sub
jge
push
dec
iret
lds
fidivl
shll
push
mov
or
js
and
lcall
push
mov
daa
rcr
pop
push
pop
pusha
jl
inc
scas
mov
mov
stc
mov
setae
gs
ret
insl
push
insl
xchg
sub
movsl
jne
loopne
mov
int
test
mov
jns
jae
pop
dec
cmp
and
inc
repz
inc
add
in
add
out
xchg
and
call
shr
add
sub
arpl
into
fsubrp
inc
loop
inc
fdivl
add
popa
jbe
sti
push
dec
enter
mov
sub
es
divb
paddb
add
sbb
cmpsl
inc
lods
mov
movl
adc
or
dec
lds
out
adc
xchg
push
repz
jge
dec
push
movsb
sti
das
mov
cli
mov
pop
inc
lock
arpl
jbe
and
and
int3
sti
pop
movsl
jbe
shll
sbb
loopne
fs
imul
inc
dec
cmpsl
or
and
cmp
mov
push
inc
fistps
mov
push
pop
jo
mov
mulb
jbe
daa
xor
push
cmp
rolb
mov
jmp
and
rol
mov
jg
gs
lcall
push
mov
test
lods
fnstenv
mov
lds
xchg
pop
jno
in
gs
and
mov
ljmp
shl
adc
jecxz
les
xor
mov
add
mov
jg
or
xor
and
xchg
add
fsubs
and
xlat
push
shrl
sbb
leave
aas
pop
cmpsb
mov
out
add
push
cmp
add
mov
xor
lahf
xor
fs
lret
pop
cmp
cmpsb
mov
xchg
jae
rcrl
mov
and
lods
push
inc
push
inc
inc
fwait
push
jno
rclb
xchg
popf
das
xchg
fidivl
enter
sub
dec
adc
adc
push
outsl
aas
inc
add
mov
fistpl
xchg
or
aam
xor
sub
jnp
ret
mov
sti
push
adc
adc
sbb
mov
cmp
sbb
mov
mov
out
cmp
push
ret
xchg
mov
in
sbb
jmp
add
test
hlt
cltd
cltd
add
jns
fisubs
push
jbe
cmovb
jl
shll
lahf
je
and
mov
or
push
or
iret
and
sahf
cmc
mov
clc
std
mov
or
and
xchg
pop
sub
or
mov
or
xor
movsl
and
inc
xlat
xchg
jo
fwait
dec
inc
int
aas
jmp
movq
out
dec
add
fidivrs
pushf
and
icebp
add
mov
ficompl
or
mov
mov
mov
dec
in
adc
imul
jg
push
push
inc
pop
xchg
jbe
ljmp
push
xlat
jmp
sbb
push
ds
test
mov
cmp
add
pop
loop
pop
fwait
lds
in
push
ss
jb
mov
add
das
in
and
adc
cltd
cs
aas
loopne
imul
sbb
cwtl
dec
add
je
ret
fstps
stos
outsl
jnp
jb
pop
xor
add
outsb
sub
push
stos
test
iret
fnstsw
movsb
add
pusha
pop
and
or
lods
mov
cltd
sbb
cmc
leave
cld
inc
arpl
insl
xor
cmc
pop
xchg
addr16
xor
cmp
or
daa
mov
push
shrl
dec
popa
mov
test
or
mov
cmp
movsb
stos
jo
push
dec
push
adc
repnz
cmp
gs
in
xchg
out
shll
cmp
in
cli
push
outsb
sub
jl
push
jns
xlat
mov
negb
scas
ds
imul
in
and
daa
outsl
inc
stos
mov
jmp
add
xor
sbb
add
inc
and
and
test
jbe
loop
sti
push
fsubrs
out
mov
add
add
xor
jl
xchg
fistpl
xchg
xor
cwtl
cwtl
and
pop
sub
aas
push
neg
repz
mov
xorl
xchg
push
outsb
adc
jae
fildl
cmp
insl
jmp
es
cmpsb
jmp
and
sub
jecxz
outsb
push
orb
sbb
cwtl
xchg
inc
bound
out
cmpsl
sbb
push
loopne
sbb
lods
xchg
jp
fsubrp
aad
dec
jp,pt
push
mov
out
sub
jp
push
lods
adc
stc
dec
les
xchg
or
xchg
sarb
shlb
inc
pop
dec
mov
testb
cmp
push
pminub
push
dec
mov
pop
fwait
mov
imul
iret
push
and
orps
sti
leave
andb
adc
nop
out
aas
lds
lock
in
cmp
adc
sub
fisttps
outsl
clc
sti
mov
sbb
movsl
das
lods
inc
popa
dec
dec
mov
fidivs
pop
jnp
jl
mov
lea
pop
push
roll
cmpsb
lahf
imull
push
mov
jge
ds
scas
aad
das
jmp
loopne
xchg
jnp
int
sahf
popa
ss
adc
push
call
inc
adc
push
hlt
lock
movsl
lods
push
les
aam
jp
jne
sub
in
flds
xchg
pop
mov
sub
stc
push
sub
pop
jle
loope
scas
lahf
fisubrs
mov
sbb
xchg
mov
ds
stc
fwait
scas
inc
cmp
mov
sbb
rorl
into
call
mov
icebp
in
cmp
sbb
adc
sbb
mov
mov
adc
mov
sub
movsl
cmp
out
sbb
dec
ret
fdivl
xchg
fsts
call
in
mov
pop
jmp
jb
adc
or
push
push
pop
lret
inc
popf
xchg
mov
sbb
mov
jg
mov
pop
mov
or
call
fcmove
add
xchg
jbe
inc
gs
inc
stos
ret
jno
and
sbbb
test
fcoms
sbb
inc
lods
and
inc
xor
loopne
xor
mov
int3
rol
push
pop
jg
lods
sbb
fs
bound
cmc
inc
mov
push
sub
xlat
add
jne
sbb
dec
dec
sub
mov
xor
movsb
addr16
stos
notl
nop
xchg
loope
leave
test
sbb
and
jo
mov
rorl
fisubs
xlat
push
test
lret
jne
das
sarl
ret
pop
add
pop
aaa
fsubrl
xchg
rcll
add
xor
adc
cmp
idivl
xor
push
mov
inc
inc
xchg
outsb
mov
jmp
addr16
insb
sub
pop
ja
popf
adc
inc
cmp
jo
out
pop
into
popa
jle
sub
arpl
stos
js
sti
xchg
lcall
cs
xchg
mov
pusha
in
pushf
cmpsb
mov
xchg
mov
mov
and
in
loopne
sbb
jae
pop
mov
xchg
rcrb
push
lods
les
ficoml
jle
sahf
or
xor
clc
movsl
jge
inc
cmc
bound
movsl
cmp
xlat
dec
fisubrs
cmp
fsubr
cmc
and
movsb
xchg
int3
nop
mov
push
and
rorl
lea
jns
jb
or
mov
cmp
pop
lahf
cmp
daa
ss
push
leave
shrl
stos
into
movsb
mov
jmp
push
mov
leave
fldt
shll
add
ffreep
adc
xchg
mov
cs
repz
pusha
ds
sbb
mov
call
loope
sbb
fs
js
or
sbb
std
shlb
lret
mov
cwtl
sub
push
ss
cli
xchg
enter
pop
call
sub
or
pcmpeqd
outsb
mov
sbb
and
inc
decb
dec
in
imul
mov
jnp
inc
push
fsubs
dec
dec
sub
sbb
movsb
pop
push
add
lock
std
xchg
loop,pt
inc
loopne
dec
xor
jge
dec
mov
push
xor
mov
stos
out
imul
adc
jns
sbb
sbb
arpl
sbb
jg
inc
push
imulb
cmpsl
ds
dec
fwait
inc
cmp
aas
adc
cmp
les
aam
rolb
mov
sbb
daa
ret
insl
jnp
xlat
dec
rclb
fwait
xchg
dec
xchg
notb
inc
add
cmp
pop
flds
push
push
insb
jle
rep
mov
addr16
mov
inc
ljmp
add
xchg
jno
fsubrp
sti
mov
outsl
inc
or
jnp
data16
mov
fsubrl
and
fcmovu
xchg
shl
movd
je
pushf
xor
mov
add
aaa
pusha
xchg
lock
inc
lods
sbb
ss
xor
repz
xorb
cwtl
or
xchg
psrlq
cs
mov
mov
xchg
add
cwtl
jb
or
pop
scas
dec
arpl
ds
lahf
in
das
push
mov
stos
jl
or
xchg
sbb
jae
dec
fwait
and
repz
test
ja
mov
add
mov
mov
mov
inc
ja
sub
andb
sbb
xor
rclb
jb
divl
in
cmp
fdivs
dec
pop
ds
arpl
lods
dec
or
xor
incl
in
fucomp
dec
add
inc
inc
inc
pop
mov
inc
lcall
and
push
mov
or
xor
push
mov
mov
jb
cmp
pop
cmp
negb
or
cwtl
cwtl
inc
les
xchg
subb
in
lea
cmp
push
mov
mov
sbbl
test
mov
pushf
stc
daa
cmpsb
outsl
loopne
pushf
push
sub
mov
lahf
outsl
in
xchg
shll
sahf
jle
or
or
lret
jg
jb
scas
out
inc
daa
mov
mov
push
xor
jp
sub
mov
data16
cwtl
outsb
sbb
or
lods
stos
dec
or
sub
rcll
and
jns
cltd
jge
sbb
lock
hlt
xchg
xor
jecxz
push
fucomp
xor
out
dec
imul
mov
in
sbb
xor
movsb
sbb
ja
add
cwtl
jae
inc
cmp
outsb
jl
repz
adc
xor
aas
in
mov
mov
lret
dec
movsl
and
cmpb
int3
inc
fs
xor
sub
and
push
sub
jno
mov
dec
stos
ss
stos
out
iret
xchg
imul
leave
nop
adc
jle
cmp
dec
loop
mov
aas
sub
roll
dec
scas
dec
mov
je
sub
rcl
inc
das
clc
cli
pop
inc
or
mov
out
cmp
adc
and
lret
cld
push
pop
data16
sti
fisubl
sub
ret
pop
xor
xchg
cmc
push
inc
nop
push
cmc
mov
sbb
dec
pop
jl
aam
faddl
test
outsb
out
in
cmc
rolb
push
cmp
mov
add
mov
fnstsw
pop
adc
pop
sub
jne
push
add
fstl
adcb
pop
aas
shl
jge
cmp
pop
scas
xchg
jo
sbb
inc
pop
cltd
lea
and
mov
push
fidivl
ret
repz
and
push
mov
test
lret
popf
jge
mov
int3
outsl
jge
sbb
mov
in
sub
rcrl
add
insl
add
and
inc
add
fwait
jmp
es
and
push
and
inc
mov
pop
out
loopne
and
mov
test
test
adc
or
fmul
fs
bound
fisubs
adc
mov
pop
repz
into
and
pop
jmp
repz
add
cltd
jae
and
inc
fidivl
jp
ljmp
ljmp
pop
cmp
js
dec
jmp
push
imul
inc
push
adc
movsl
cmp
mov
les
enter
jo
call
cmpsl
outsb
or
push
dec
push
aaa
jbe
or
mov
add
or
inc
fs
push
jle
cmpsb
inc
imul
adc
sti
xchg
inc
shr
std
mov
jl
mov
add
sub
lahf
mov
fistl
mov
movsl
sbb
iret
push
push
aas
das
mov
mov
jl
push
scas
daa
and
stos
adc
dec
data16
into
add
lods
in
lcall
out
gs
mov
inc
mov
ffree
mov
cmp
bound
push
mov
notb
adc
clc
and
mov
in
inc
cmp
sti
sub
pop
sahf
xchg
mov
fnstenv
sbb
push
mov
mov
pop
or
dec
pusha
sub
xchg
inc
fisubrl
cli
in
push
jecxz
stos
jmp
cmp
fwait
mov
clc
mov
push
movsb
add
mov
in
out
lahf
loop
andb
mov
mov
in
or
cmpsl
insb
ret
sbbl
xchg
fs
jle
fiadds
add
adc
pushf
dec
push
andb
mov
lahf
jmp
pop
adc
cmp
fildll
push
fnstsw
cmpsl
decb
and
pop
jns
xor
jnp
push
cwtl
leave
pop
add
dec
dec
xor
bound
int
dec
and
adc
lcall
loope
pop
adc
add
sbb
adc
adc
outsb
push
aam
loopne
dec
fisttpll
shrb
filds
jle
or
stos
jnp
cmpsl
jns
dec
mov
dec
imul
sbbl
cmp
push
shll
movsl
in
in
cmpsl
lods
pusha
and
repz
imul
mov
hlt
jecxz
js
push
movw
pop
inc
mov
lahf
jb
xchg
add
dec
and
xor
mov
mov
mov
mov
sub
outsl
loop
inc
fnsave
pop
pop
dec
jp
dec
dec
test
mov
mov
and
mov
jb
in
jo
fdivs
xchg
fiaddl
ljmp
shlb
out
in
sbb
and
ljmp
aas
gs
mov
ja
mov
add
fildl
lret
sti
sbb
mov
in
jecxz
jg
xchg
adc
aas
mov
fidivrl
ljmp
dec
sbb
mov
inc
les
push
jb
aaa
sti
es
out
add
add
mov
int3
push
xlat
xor
nop
jle
push
inc
test
jno
mov
ret
jno
add
dec
ret
es
and
sub
hlt
push
add
loopne
pop
popf
lods
mov
push
ret
mov
ret
xchg
adc
pop
xchg
mov
xchg
cmp
out
jnp
loop
xchg
imul
testb
cwtl
sub
dec
lea
insb
push
push
mov
push
push
leave
arpl
xor
or
in
hlt
sub
es
sbb
dec
or
aas
mov
stos
mov
mov
and
pop
pop
pop
xor
mov
popa
and
dec
loope
popa
out
sub
outsb
das
das
addl
jl
sub
mov
mov
lcall
inc
push
sub
lahf
out
add
lock
ret
and
imul
pushf
fs
push
jb
les
xchg
sbb
inc
mov
push
gs
cmpsl
xlat
xchg
outsl
inc
scas
push
in
xor
in
les
xlat
fwait
xor
subl
cmc
in
mov
mov
pop
lret
aaa
sahf
int
imul
test
es
cmp
nop
daa
add
sbb
xor
pop
cmp
mov
jmp
dec
push
xchg
lods
aas
imul
lcall
clc
push
mov
add
out
xchg
adc
ret
outsl
loop
nop
enter
pushf
out
orl
jmp
add
add
pop
iret
push
fidivrs
sub
inc
mov
shlb
outsl
pusha
aaa
adc
js
insl
lock
dec
xor
or
ss
lods
push
mov
xchg
push
enter
sub
loope
movsl
mov
popl
popa
xor
out
es
jnp
int3
nop
push
ss
mov
in
sub
inc
lcall
inc
fcompl
sbbl
cli
and
pop
cmp
enter
jne
pop
push
pop
lea
in
in
jecxz
add
xor
sub
pop
cli
insl
scas
push
jle
mov
shll
dec
movsb
sub
fwait
pop
arpl
xor
and
jp
push
dec
xchg
addr16
and
dec
push
jbe
cmpsb
fidivl
movsb
or
rep
push
and
inc
cli
xchg
and
bound
mov
sub
std
int
jecxz
mov
sub
sahf
push
imul
icebp
bndstx
and
imul
out
stos
in
mov
mov
sbb
clc
insb
insb
sbbb
adcb
sti
rcrb
add
dec
int3
testw
cwtl
rcl
hlt
lds
adc
xchg
insb
jo
push
in
inc
shr
jg
cmpsb
push
adc
dec
movsl
lock
and
fcoml
aad
jmp
jecxz
jno
inc
or
jp
insl
pop
insb
lahf
xor
in
fcompl
add
out
cs
into
cmp
mov
cmc
pop
nop
out
push
insl
dec
pop
xchg
test
fwait
hlt
push
sbb
in
lret
mov
sub
pop
notl
popa
jae
and
or
sub
xchg
cmp
push
clc
je
jl
ret
lods
cmp
adc
cmpsl
inc
push
jbe
roll
jmp
mov
stc
pop
out
out
xchg
es
fsts
ss
leave
pop
push
lret
add
inc
xor
add
int3
xor
xchg
insl
jl
jne
mov
push
lret
xlat
outsl
xor
push
insb
and
dec
call
or
je
repnz
data16
fidivs
fcoms
repz
mov
mov
insl
sub
sub
roll
stos
inc
mov
outsl
test
ret
xchg
cltd
or
mov
push
rorb
insb
mov
push
scas
fldl
mov
adc
dec
lds
adc
imul
aam
out
repnz
imul
cmp
pusha
ss
into
outsb
jle
xchg
leave
cmp
push
cltd
pop
movsb
lea
or
loopne
mov
mov
dec
mov
notl
stos
inc
cs
bound
jmp
mov
push
pop
cltd
repnz
or
lcall
adc
andl
inc
stc
sbb
addb
stc
xchg
aaa
mov
ja
and
adc
mov
or
pop
ja,pt
jb
dec
and
fadds
into
adcl
addr16
fisttps
repz
movsl
jbe
lods
xor
and
dec
dec
adc
jp
pop
imul
fcmovnbe
out
pop
cmp
nop
fisubrl
jno
sub
cld
lea
es
jp
inc
cmc
lods
mov
mov
mov
loop
subl
cltd
xchg
push
out
cld
jb
adc
push
sub
mov
mov
push
andl
or
lcall
mov
popf
out
jo
cli
jecxz
push
sbb
js
pop
xor
nop
arpl
pushf
orb
mov
cltd
push
int
scas
das
inc
rorl
rorb
out
and
add
mov
jbe
sbb
in
dec
insl
push
sub
les
xchg
add
movsl
push
sbb
enter
and
cltd
in
cmp
lcall
das
arpl
push
mov
lods
cld
pminub
mov
int
inc
pushf
sti
jecxz
ds
push
fnstsw
or
out
popa
lods
mov
aam
mov
pop
add
nop
mov
fs
aam
xor
mov
rcl
inc
into
cmp
cmpsl
ret
std
movsb
dec
mov
and
pop
dec
int
lods
jp
add
push
aam
lret
mov
cwtl
push
ficomps
add
insb
cltd
sub
xchg
jl
mov
cmpsb
in
mov
pop
insb
sbb
xor
sbb
testl
and
inc
cmp
fucom
inc
leave
xlat
push
adc
mov
push
mov
push
popa
add
cmp
pusha
push
fsubrp
dec
inc
mov
out
push
fcom
clc
popf
or
sbb
arpl
jo
push
aas
dec
or
pop
cs
cmp
jno
sbb
mov
ds
mov
les
movsl
jnp
push
mov
xor
cs
popa
mov
es
mov
aam
arpl
pusha
roll
sub
pushf
or
shlb
daa
ljmp
cmp
mov
add
lahf
ss
push
out
mov
mov
jp
adc
inc
cmpsb
scas
and
mov
pop
inc
cmp
ja
and
sarb
jo
inc
adc
mov
shrl
loope
adc
insb
mov
cmp
cmp
xlat
pop
push
cmp
popl
xor
mov
daa
test
in
ljmp
pushf
xor
test
inc
hlt
dec
cld
xor
xchg
movsl
cwtl
shrb
ret
xor
sub
push
fcom
popa
dec
jo
loopne
jbe
xchg
sbb
stos
jecxz
inc
cmp
xchg
push
arpl
xor
insl
inc
lahf
outsl
das
insl
add
or
test
pop
pusha
xlat
maxps
je
mov
aaa
mov
push
mov
jp
push
rcl
pop
lds
push
inc
loop
and
pop
sbb
adc
and
push
and
ud0
ret
and
xchg
popa
adc
or
add
mov
push
test
push
das
xor
pusha
divl
loope
push
inc
mov
inc
stos
sub
out
cli
xor
test
fcomps
xchg
inc
lcall
inc
clc
sbb
je
cmp
sub
mov
pop
mov
in
jo
pop
rcll
inc
loop
mov
inc
xor
outsl
notb
mov
and
push
js
xlat
movsb
out
add
xchg
xchg
jecxz
cmpsb
xor
or
add
iret
mov
mov
mov
popf
shrb
aaa
dec
mov
xor
ret
aaa
pushl
mov
mov
outsl
pushf
inc
std
pop
sti
xchg
mov
dec
cmc
or
mov
xlat
dec
out
in
cwtl
inc
stos
add
outsl
lods
mov
jmp
or
shll
ss
nop
add
dec
adcl
outsb
inc
fstps
cmp
in
lcall
mov
xor
rclb
stc
mov
mov
ds
ss
das
cmp
push
pop
mulb
ja
incl
out
dec
push
and
call
xchg
adc
mov
inc
ja
cmc
ljmp
xor
psrlq
push
mov
fnsave
addr16
xor
cmpsl
out
mov
movsb
lods
jbe
jne
mov
pop
lods
adc
mov
imul
cli
mov
inc
mov
cltd
push
lcall
push
push
cmpb
mov
push
xor
aad
xor
in
rorl
lcall
or
mov
daa
mov
xor
inc
fdivrl
or
aaa
cld
add
xlat
subb
mov
cmpxchg
adc
test
adc
jns
pushf
xor
loope
cmp
sbb
outsb
push
ljmp
cmp
mov
mov
bound
jmp
out
or
int3
cmpsl
das
xlat
jmp
dec
pop
shll
mov
and
inc
push
mov
and
sub
or
xchg
add
imul
es
mov
inc
fnstsw
mov
movsl
jge
incb
sahf
sub
pop
dec
adc
or
cli
push
xlat
add
das
push
xor
jne
movsb
nop
xor
clc
int
div
adc
outsl
inc
sbb
jnp
jno
pop
fidivs
test
es
movsb
shll
std
adc
jnp
pop
lock
fwait
sti
shl
daa
dec
loope
sahf
dec
rorl
clc
cs
in
mov
pushf
push
std
mov
das
xor
sbb
movsb
mov
sbb
decl
fwait
inc
in
xor
shlb
scas
mov
shlb
je
jnp
cmp
adc
cld
jne
jecxz
mov
or
movsl
cli
xchg
xlat
movsb
lods
in
pop
jnp
aaa
mov
cltd
std
imul
inc
push
xchg
xchg
add
pop
das
cmpsb
loop
clc
enter
fildll
xchg
or
mov
jnp
pop
mov
xlat
outsb
cmp
cmc
sub
int3
xchg
sub
mov
shl
fbstp
dec
ret
cmpb
push
mov
leave
jle
movsl
std
jne
leave
fstps
cmpsl
int3
inc
fdivrs
outsb
or
inc
into
iret
test
das
dec
mov
push
fsubl
aaa
fisubl
das
arpl
push
cmp
sbb
and
xor
sub
in
mov
movsb
inc
adc
jae
sub
movsl
mov
cmp
mov
sbb
fucomi
pop
pop
or
mov
jne
repz
mov
jno
xchg
into
sbb
xor
push
pop
xor
aam
fsubl
cmp
xchg
cli
add
inc
push
shrb
mov
inc
aam
jae
jbe
out
mov
in
add
sub
dec
in
movsb
and
pop
push
add
loop
lret
mov
add
lds
mov
shlb
icebp
mul
addl
repnz
stos
pop
lahf
xchg
pop
mov
arpl
pop
and
cltd
jle
jecxz
int
repz
adc
and
sbb
loopne
sub
lahf
pop
icebp
lcall
inc
sbb
shrl
add
dec
clc
inc
mov
lcall
and
or
xor
lea
or
sub
leave
lahf
mov
or
adc
dec
loope
xlat
rep
cs
jno
xchg
cmp
subb
addr16
sbb
test
lahf
jno
scas
sbb
or
xchg
or
test
sub
xchg
mov
inc
cwtl
fbstp
in
sbb
mov
std
cltd
in
call
pop
push
inc
inc
movsl
dec
fwait
pop
outsb
xor
aas
cmp
xchg
pop
cld
xchg
jbe
mov
lret
popa
xor
xchg
enter
jns
cmpsl
pop
cmp
mov
int3
adc
fadds
cwtl
xor
xor
or
inc
push
sti
adc
stos
lds
fisttpl
fldenv
shll
or
ficomps
mov
mov
popf
sbb
xchg
xor
push
jae
mov
int3
jne
cmp
jp
pop
in
sbbb
test
pusha
test
xchg
push
stos
xchg
inc
pop
aaa
shll
jge
jle
sub
pop
icebp
push
ljmp
and
pop
cld
std
mov
and
dec
lock
stc
or
sar
adc
sahf
clc
and
sahf
gs
hlt
mov
adc
std
movsb
ljmp
fs
and
lret
and
mov
test
gs
hlt
inc
xchg
ret
cmp
pop
push
sub
ret
adc
mov
adc
mov
out
addr16
scas
inc
mov
cs
fwait
jns
add
jecxz
std
adc
dec
in
push
add
pop
aam
sub
shl
mov
pusha
sarl
cld
and
ret
jle
lods
sahf
push
or
into
in
add
repnz
push
std
loop
pop
and
scas
call
arpl
jae
mov
aaa
ficoms
mov
xor
daa
lcall
adc
shrl
leave
out
dec
dec
test
pop
rcl
sbb
pushf
andl
bswap
rclb
inc
mov
push
inc
sbb
mov
mov
insl
jg
outsb
mov
sbb
pop
and
mov
repnz
inc
fiaddl
ret
xchg
mov
decl
xor
pusha
test
out
pop
pushf
dec
aaa
lds
insb
jo
mov
adcl
adc
repnz
xchg
pop
ficoms
pusha
or
shr
dec
cltd
data16
mov
call
aaa
int3
push
repz
fwait
scas
xchg
cmp
enter
lahf
push
aas
mov
inc
outsb
cld
ss
sub
pop
mov
add
scas
call
fnstcw
pusha
rolb
xchg
rclb
out
insb
popf
mov
fldl
jbe
out
mov
cld
out
fmulp
fistpll
push
fcmovnbe
test
pop
pop
clc
and
les
mov
push
dec
xlat
mov
xor
ret
push
cmp
nop
push
sbb
xchg
iret
pusha
rcr
and
sarb
popf
imul
pop
xor
mov
call
aaa
push
push
push
push
in
insb
pop
ret
xor
jg
lods
out
hlt
xchg
adc
dec
cmp
cmpsl
inc
sub
fcoms
mov
popf
mov
and
xor
scas
or
js
lds
sub
xchg
bnd
outsb
cmp
jp
arpl
add
je
icebp
int
jbe
inc
lea
dec
cld
push
repnz
arpl
mov
mov
ss
test
sub
add
in
pop
adc
inc
cmp
inc
pop
outsb
pop
push
add
sub
roll
psubsw
xor
lds
and
cmc
push
call
add
aas
dec
outsl
mov
mov
lds
jmp
pop
test
and
dec
dec
out
dec
add
inc
inc
fisubrl
or
repz
push
js
xchg
test
shlb
mov
mov
sbb
scas
push
daa
clc
ja
mov
push
lret
int
add
mov
sbb
in
sbb
push
je
dec
repnz
ss
adc
cmc
pusha
mov
lret
popa
clc
adc
shrb
mov
push
scas
push
fildl
dec
sbb
cmp
and
hlt
popf
pop
mov
mov
adc
xchg
cmp
pop
lds
or
or
pop
push
cltd
dec
mov
sub
xchg
and
push
int
pushf
mov
pop
das
lcall
sub
pop
imul
mov
cmpsl
nop
repnz
xchg
cmp
cmc
mov
push
out
jo
inc
mov
fisttpl
sbb
retw
int
mov
icebp
mov
push
xchg
add
leave
sbb
fildl
inc
cmp
lea
mov
movd
fdivrl
movntps
pop
sub
dec
add
mov
push
mov
push
orb
mov
cmp
pop
insl
mov
pop
sti
xchg
into
out
dec
xchg
out
sbb
mov
lds
data16
jge
mov
add
rolb
jne
imul
stos
pop
sbb
xchg
mov
lock
mov
addr16
lods
mov
movsl
pusha
je
dec
dec
cmp
loop
insb
jl
loopne
sub
cmp
rorl
lcall
sbb
xor
daa
call
and
adc
popa
push
xor
jae
loopne
repnz
int
add
or
push
loop
imul
dec
das
cmp
loope
push
inc
mov
fstp
or
lret
jne
lods
scas
sbb
je
jnp
or
cli
pop
sbb
loopne
sub
mov
fisubs
push
fbstp
and
and
pushf
or
fcmovu
or
mov
sti
cmc
insb
mov
mov
add
test
adc
mov
jle
sbb
jle
movsb
cmp
jle
push
divb
adc
add
xor
mov
faddl
bound
add
in
ja
adc
mov
cmp
dec
cmp
adc
loop
cltd
cmc
pop
adc
fsubrl
mov
mov
clc
hlt
sbb
cwtl
int
lea
flds
sub
aaa
and
fnstcw
push
jp
xlat
sahf
add
inc
idivb
scas
std
outsl
push
aam
orl
mov
in
push
pop
inc
push
jnp
aas
div
push
aad
xor
xchg
in
imul
cmc
xchg
sbb
mov
inc
xchg
popa
not
and
cmpsb
jmp
cltd
mov
jo
clc
jbe
es
xchg
pop
rclb
faddl
insb
fidivs
push
and
inc
inc
mov
sub
test
add
xor
repnz
fmull
xor
mov
outsb
test
popf
sub
push
add
inc
je
fs
pop
and
sbb
es
aaa
js
mov
mov
lcall
jmp
sarb
loop
sbb
push
inc
fistl
ds
stc
cmp
push
nop
roll
sub
xchg
and
sti
cmp
dec
mov
jnp
arpl
pusha
notb
gs
fldl
inc
sub
push
cmpsb
cmp
clc
jae
rorb
adc
sbb
jno
scas
cmp
sbb
iret
js
xchg
sub
dec
scas
and
mov
xchg
push
das
jg
stos
shrb
les
lret
fadd
and
pop
jmp
fisttpll
test
pmaxub
or
loop
jmp
xor
fnstsw
sub
jbe
cmp
les
decl
rcl
push
fldenv
in
or
xchg
cld
pop
dec
dec
or
ret
add
push
data16
push
iret
outsl
inc
jle
fwait
sub
data16
pop
repz
sub
inc
sub
add
repnz
lret
dec
sbb
mov
enter
pushf
insb
mov
or
dec
push
mov
popf
push
imul
and
out
subb
imul
xlat
popf
aaa
mov
sbb
pop
in
xchg
pusha
outsl
adcl
icebp
mov
filds
mov
xor
pmullw
ds
or
adc
jno
lods
dec
cmp
push
stos
push
xor
cltd
cmc
push
pushf
gs
adc
inc
and
xor
xor
push
mov
rcrl
push
cmp
arpl
add
xor
cmp
cmpsl
inc
fdivr
xchg
sub
sbb
inc
push
lods
inc
mov
push
jne
dec
pop
add
or
in
sub
sbb
dec
jnp
test
daa
data16
xor
cmp
repz
test
add
imul
and
xor
lods
nop
push
out
stc
test
dec
pushf
dec
or
test
ja
jg
adc
dec
inc
aas
push
nop
dec
subb
pop
lcall
popa
clc
int3
push
scas
jg
jg
gs
outsl
int3
xchg
cmpsb
inc
lods
in
mov
inc
mov
movsl
pop
cmp
in
sbb
outsl
push
arpl
lea
loopne
insb
jp
jge
int
rcll
jge
mov
les
push
cmp
insb
test
sti
pop
ficoms
enter
jbe
aaa
test
xor
mov
rclb
repz
jnp
pop
lds
pop
xor
pushf
lods
inc
out
xor
cmpsb
jmp
aaa
stos
adc
sbb
loope
mov
jmp
es
decb
cmp
addr16
xchg
cltd
pusha
cmp
xor
sbb
icebp
popa
movsb
push
fmull
sbb
jp
imul
pop
pop
xchg
mov
fisubs
aam
arpl
imul
push
push
and
mov
push
cmpsb
out
test
adc
mov
pop
cltd
xor
ljmp
lahf
or
dec
cmp
push
icebp
jo
sbb
rclb
or
dec
sub
shl
aas
sub
in
insl
dec
jle
ja
mov
push
jmp
mov
or
push
out
and
add
dec
in
and
faddl
xlat
daa
movsb
adc
or
xchg
mov
cmpsb
sbbl
pop
xlat
sbb
fld
arpl
stos
pushf
xor
adc
outsl
imul
lods
jge
push
sub
andl
mov
xor
shl
inc
mov
push
push
adcb
pop
ss
adc
sub
fsubrp
lods
or
insl
xor
xor
inc
add
push
jne
push
leave
mov
xor
push
xchg
inc
mov
in
add
test
mov
enter
imul
mov
cmpsl
and
clc
mov
adc
fidivl
out
imul
lcall
inc
mov
rcrb
fmuls
push
sti
clc
insl
ja
sbb
ret
mov
fsubrs
add
mov
in
fstpl
orb
idiv
js
sub
push
push
stc
xchg
das
outsl
test
js
mov
lret
lret
out
push
insb
jp
lods
jmp
xchg
movsl
cmp
lds
mov
mov
pmulhuw
ljmp
icebp
pusha
imulb
insb
add
sub
in
jnp
out
ja
sub
inc
or
inc
sbb
mov
adc
add
cltd
pop
outsl
xorl
les
movsl
mov
rorb
aas
jns
cs
cmp
sbb
outsb
xorb
rcrb
sub
out
movsl
sahf
sbb
jo
jb
iret
mov
test
mov
je
xor
xor
pop
cmp
pop
or
mov
push
sub
pop
mov
sub
mov
sbb
inc
repnz
bound
jge
lods
push
fstpl
mov
jmp
clc
sbb
pop
add
cmp
and
nop
faddl
mov
xchg
daa
xchg
hlt
jp
lcall
in
stos
sub
imul
in
adc
cli
jb
cmp
je
adc
aas
mov
sbb
out
adc
mov
es
sub
out
cs
inc
pop
mulb
xor
in
adc
inc
mov
ffreep
and
dec
cmp
xor
xorb
adc
sbb
mov
jmp
aas
cmpsb
frstor
jo
test
in
and
rcr
out
call
enter
pushf
insb
pop
lods
push
sbb
out
and
mov
add
inc
cmc
jmp
inc
enter
test
andb
dec
inc
roll
cltd
xor
imul
popf
lret
aas
lock
jmp
pop
and
mov
push
sub
inc
sub
jl
pop
and
fistpl
push
or
fistl
imulb
stc
jge
into
clc
ss
cmc
mov
or
push
repnz
das
cli
roll
cld
test
lahf
adcb
inc
lock
inc
lret
jb
dec
lahf
iret
sahf
pop
mov
and
push
test
gs
cvtdq2ps
jne
adc
iretw
test
mov
and
fdivs
jbe
jo
adc
je
je
setns
cs
movsl
pop
imul
mov
maxps
and
negl
and
in
loopne
mov
nop
sbb
fldcw
mov
mov
cmp
add
dec
push
sub
movsb
and
inc
rol
jmp
test
xor
adcb
clc
pusha
mov
inc
sbb
and
xchg
adc
lds
test
mov
and
dec
jecxz
sub
aad
movb
pusha
jge
inc
mov
jns
cmp
ss
gs
add
lods
jmp
cmp
fwait
sub
in
mov
out
rorl
cmp
jmp
das
popf
scas
pop
push
pop
mov
in
fdiv
mov
ret
mov
and
mov
mov
rorl
add
sbb
outsb
push
push
fwait
imul
fimuls
seta
and
jge
and
cmpsl
adc
mov
xchg
dec
push
adc
fmulp
inc
add
pop
out
cmp
es
pop
or
cmp
icebp
mov
fldenv
or
cmp
push
mov
pusha
mov
shlb
stos
dec
jp
mulb
ljmp
xchg
jmp
add
mov
call
mov
pop
mov
cmp
in
jle
lds
add
xchg
lds
es
and
mov
repz
imul
cmp
xor
ja
jmp
push
into
jns
insl
xchg
jp
rolb
mov
mov
adc
hlt
dec
test
out
add
inc
or
push
xor
lea
xor
xor
pop
cwtl
stos
xor
mov
push
mov
clc
push
inc
and
inc
pop
and
rolb
fdivrs
addb
int
sahf
mov
in
push
xchg
or
mov
or
ss
test
sbbl
xchg
add
ljmp
xchg
dec
xchg
and
repz
inc
int3
xchg
js
insl
push
fdivrs
movsb
scas
dec
push
push
test
out
dec
pushf
jns
icebp
shlb
mov
cmpsb
out
mov
jno
and
or
ss
and
ret
outsb
pop
dec
pusha
test
lret
push
add
icebp
xor
popa
popf
ror
les
aaa
or
loop
ret
daa
shrl
ljmp
add
daa
mov
js
aas
mov
jmp
ret
jae
pop
and
sbbl
insb
outsl
fs
push
xor
in
sub
aam
pop
hlt
call
dec
fs
push
rcrl
lahf
push
jcxz
mov
nop
mov
out
sbb
imul
test
adc
mov
jne
sbb
xchg
dec
fldcw
loopne
ror
stc
fucomp
ljmp
push
cld
dec
xchg
rorb
sub
loopne
int
push
js
sub
push
xchg
jno
mov
ds
push
sbb
cmp
push
ret
and
mov
dec
cmpsl
js
dec
xor
jmp
sahf
or
ficoml
pop
mov
xchg
pusha
adc
shlb
jno
movsb
imul
jns
mov
jl
and
add
adc
ret
in
hlt
test
add
sbb
adc
popa
inc
pop
cwtl
cs
push
leave
mov
xchg
xlat
and
les
sbb
jl
add
test
xchg
mov
pop
mov
hlt
sbb
jne
cmp
cltd
pop
repnz
in
stc
nop
addb
cs
popf
mov
inc
pop
repz
push
repz
test
std
jo
sbbb
ja
out
add
jp
xchg
pushf
rcll
and
add
inc
daa
out
xchg
nop
insb
rorl
jnp
mov
add
sub
int3
lahf
pusha
imul
sub
ret
pop
adc
dec
fwait
push
push
out
mov
cmp
bound
pop
mov
push
xor
icebp
mov
cwtl
jne
js
mov
pop
mov
pop
or
sub
mov
cs
jmp
clc
mov
jmp
lds
jg
add
out
cmpsb
push
sbb
gs
popa
stos
shrb
sahf
aam
inc
fcmovnb
js
jno
ljmp
lods
int3
push
xlat
sbb
mov
aas
and
sti
popf
push
mov
push
loope
inc
loope
fidivs
xchg
push
cmp
cmp
bound
cmpsb
cmp
mov
aas
shrb
adc
add
pop
loopne
cmpsb
mov
push
sbb
mov
cmpb
push
std
mov
xchg
inc
scas
dec
adc
and
stos
jno
mov
lock
aas
sti
push
and
or
or
dec
aam
or
cmc
cmp
sbb
or
and
aad
pop
out
jle
push
fdiv
push
xchg
stc
fs
pushl
inc
and
xchg
push
push
data16
inc
stos
and
dec
jbe
pop
rcrl
daa
inc
jle
xchg
ja
sbb
int
inc
fadds
cmpsl
movsb
dec
adc
push
in
sbb
loopne
jmp
sbb
mov
xchg
aad
xor
and
sub
and
fnstenv
or
stos
adc
test
mov
sbb
dec
push
aad
cmp
xchg
lods
cltd
dec
mov
jge
fstpl
dec
lock
stos
pop
pop
adc
adc
jg
push
jo
jne
cmp
sub
jg
add
mov
mov
push
mov
dec
jge
lret
sahf
shll
add
inc
mov
jmp
cltd
sbb
cmc
cltd
sub
push
sub
inc
push
push
lods
aam
clc
adc
int3
inc
fdivr
fbld
aad
rcr
mov
push
fsubs
cmpsb
xchg
inc
mov
inc
and
pop
nop
out
push
arpl
mov
xor
mov
int3
aad
std
cmp
adc
xchg
bnd
jo
mov
inc
outsl
push
jp
mov
sbb
cs
imul
cmp
mov
shrb
sub
mov
lret
repnz
das
orb
or
adc
mov
sbb
mov
icebp
mov
or
xchg
mov
lods
mov
das
arpl
cmp
out
mov
jae
and
inc
call
jp
cwtl
adc
mov
cmp
in
cbtw
shr
enter
insb
push
and
jbe
xchg
xchg
js
cmpsl
lcall
push
imul
or
fstpt
jns
ja
or
adc
daa
roll
mov
and
mov
pusha
jb
mov
fildl
shll
or
fcmovnb
loopne
pop
or
and
call
mov
mov
enter
mov
icebp
aam
negb
addl
and
mov
adc
push
mov
repnz
sbb
rorb
mov
adc
mov
test
mov
pop
orl
add
xor
xlat
adc
add
rol
imul
pushf
aad
lock
cld
rol
lods
and
dec
jae
or
jbe
lcall
xchg
ja
fwait
insb
cmp
pusha
lods
xor
push
shrb
mov
daa
dec
fidivrl
lcall
adc
and
and
pop
repz
jbe
jecxz
add
lcall
fimull
mov
loopne
dec
adc
inc
lock
adc
sbb
xor
and
lock
pusha
vsqrtpd
pop
js
cmp
dec
lcall
sbb
dec
dec
push
mov
and
inc
xchg
push
xlat
add
adc
adc
loope
ss
adc
negb
movsb
stos
cld
or
mov
out
add
adc
cli
xchg
icebp
fimull
sahf
jno
aam
aad
sbb
test
test
lahf
loopne
inc
cmp
aas
or
mov
les
mov
rcr
clc
rol
cmp
sahf
inc
in
popa
and
mov
lods
jp
ret
iret
inc
cmpsb
ficoml
push
insl
and
jbe
loop
mov
inc
out
stos
fnstenv
jmp
sbb
mull
or
and
cmp
rol
jl
xchg
mov
jle
mov
repz
sub
mov
movsb
mov
add
jg
fsubr
sbb
divl
aaa
scas
xor
aaa
int
push
pop
orb
add
ret
cs
lock
into
jmp
enter
inc
call
sub
pushf
inc
cmp
jne
xchg
sbb
and
pop
or
xor
orl
stos
dec
pop
cmp
nop
out
adc
inc
mov
dec
mov
add
or
scas
mov
fmuls
or
in
and
xchg
xchg
dec
pop
cmp
mov
dec
and
xlat
aad
js
stos
mov
stos
dec
and
dec
add
jnp
mov
cmpsl
arpl
xchg
into
hlt
jge
aas
out
jnp
sti
mov
gs
and
sub
jle
dec
je
fisubrl
rorl
addr16
in
fisubs
xor
adc
clc
mov
data16
sbb
adc
push
mov
int
sbb
int3
push
cmc
sub
mov
sbb
notb
daa
mov
push
iret
mov
lcall
cli
xchg
test
mov
cli
jp
sbb
xchg
xchg
dec
enter
add
ja
push
mov
xor
les
insl
xor
fs
pop
push
cmp
mov
cmc
fs
add
sub
scas
call
xor
insb
sbb
pop
or
mov
js
shll
inc
add
xor
sub
push
mov
and
roll
push
add
mov
daa
inc
cmp
mov
scas
sbb
jp
cmp
push
outsl
inc
ficompl
icebp
push
mov
or
sub
push
repnz
mov
lds
jle
fldenv
int3
fildll
sub
scas
stc
aaa
push
and
lret
das
pop
inc
pop
hlt
mov
jo
sub
cmpsb
js
dec
decb
in
pushf
cmp
inc
add
jae
jecxz
adc
xor
insl
xor
push
push
into
mov
in
shll
push
scas
enter
or
inc
xchg
shrb
iret
mov
cwtl
mov
adc
gs
and
int
ss
outsl
or
jnp
adc
pop
xchg
out
in
shlb
inc
out
aas
mov
sub
ljmp
cs
xchg
xor
pop
jge
xchg
movsl
pushf
stc
faddl
mov
jae
lret
int
xchg
out
popl
push
insl
pop
gs
mov
mov
daa
rclb
cli
xchg
inc
pop
push
not
jecxz
jl
mov
add
add
add
test
push
outsl
add
mov
clc
aad
sbb
sbb
xchg
test
loope
in
push
jle
test
out
xchg
aad
movb
jl
push
fsts
xlat
outsb
inc
jae
cmp
pop
cmp
pop
mov
shr
loopne
cmpsb
adc
push
std
push
lahf
lock
lcall
pushl
inc
mov
testb
mov
push
push
mov
imul
or
xchg
call
or
sbb
adcb
pop
dec
inc
aas
add
xchg
sbb
jnp
shrl
push
pop
outsl
xchg
jmp
or
fistpll
and
in
push
inc
lahf
adcl
jg
adc
push
jne
aas
xor
adc
jo
mov
vmovdqa
mov
inc
cmp
stc
ficoms
sti
loopne
imul
inc
sub
jle
stos
cmp
rcl
rcl
push
or
and
lret
push
data16
fwait
repnz
push
sub
sbb
bound
fimull
push
pop
sarl
inc
mov
and
cmpsb
stos
mov
fsubl
es
mov
jle
add
rcrl
sbb
clc
or
imul
sbbb
jnp
adc
xchg
fcoml
mov
jge
mov
mov
cmp
mov
mov
int3
fstpt
dec
push
xchg
mov
cmp
inc
inc
fidivs
std
xchg
and
push
rol
repnz
in
or
iret
aas
sub
sbbb
sub
mov
into
lahf
xchg
mov
mov
ss
out
imul
xor
and
mov
call
scas
jns
sbb
mov
les
outsl
add
in
push
sub
cmp
lret
xchg
pop
pusha
test
dec
fiaddl
lret
ja
push
inc
popf
or
push
ja
push
jle
shlb
or
push
scas
call
adc
out
cmpsl
xor
call
cmp
shr
cmp
xor
out
dec
popf
xchg
cmpsb
jle
std
scas
ljmp
xor
fldt
je
mov
mov
lret
fisttpll
xchg
test
hlt
and
sti
lret
stc
inc
push
jne
test
adc
test
add
divb
loope
jbe
movsb
xor
stos
in
or
out
popf
add
inc
andb
jnp
out
mov
sbb
add
outsl
daa
pop
insl
push
lret
loopne
scas
xchg
stos
or
popf
xchg
ret
fldenv
stc
lahf
mov
iret
popf
xor
fxch
xchg
arpl
sub
in
jp
fidivl
push
popl
push
outsl
cmpl
out
mov
ss
test
insl
xor
jle
enter
mov
in
push
loope
xor
adcb
ret
push
pop
cmpsl
popa
jo
imul
xchg
mov
movsl
xchg
aad
push
jne
push
seta
test
cld
add
das
je
cwtl
add
mov
adcl
sbb
jae
add
addr16
sahf
sub
and
leave
and
cmp
mov
mov
sub
pop
push
mov
inc
push
dec
fnstsw
adc
add
jne
repz
lcall
ljmp
and
push
mov
mov
adc
test
gs
pop
push
dec
and
fwait
iret
arpl
insb
mov
pop
and
push
cmp
popf
and
sbb
jle
xchg
rol
fadd
clc
cmp
dec
rcrl
mov
imul
xchg
lock
xor
fsubs
clc
xchg
in
jbe
xchg
je
scas
fnstenv
xchg
fnstsw
outsl
xchg
mov
imul
aad
leave
mov
jg
adc
lret
fldt
pop
shrb
or
cmp
movsl
add
xchg
gs
pop
lock
gs
out
cmp
and
jecxz
add
or
adc
bound
xor
and
pop
mov
add
cmc
repz
cmp
pop
jle
aas
call
out
ja
mov
jp
mov
test
stos
shr
mov
test
in
or
in
xor
push
jo
stos
lcall
fldpi
cli
xlat
mov
sbb
ds
sbb
mov
mov
mull
mov
mov
clc
sbb
sub
loop
lds
popf
sub
shll
lds
repnz
fdiv
int
addr16
mov
mov
imul
pop
sti
inc
nop
xchg
xor
daa
sub
pop
popf
sub
inc
cmp
lahf
cmp
sbb
enter
and
out
push
daa
idivl
inc
inc
lds
aam
adc
or
cmp
mov
mov
mov
bound
lcall
push
scas
cmp
inc
inc
cltd
and
test
lret
lcall
in
adc
or
lds
rcl
inc
in
adc
or
or
sbb
sbb
adc
push
xor
iret
test
aas
push
jg
repz
mov
je
insl
mov
xchg
insl
fwait
es
mov
inc
push
mov
stos
aas
shll
ret
push
pop
rolb
push
cmp
xor
jmp
pop
dec
fst
subl
and
and
repz
das
std
dec
pop
cs
mov
in
into
xchg
notb
add
aam
pop
mov
xor
je
pusha
jl
xchg
sbb
lcall
popf
mov
mov
loope
cmp
sti
jno
lods
and
push
les
call
cmpsl
icebp
pop
repnz
jne
push
aas
push
in
jo
sub
lock
stos
cmp
jmp
mov
mov
push
sti
push
movb
loope
inc
cmp
add
jno
push
cwtl
clc
scas
dec
aam
and
push
adc
cld
mov
faddl
fistpll
daa
adc
push
mov
mov
mov
mov
addb
fsubp
mov
jno
cmp
push
and
and
popf
xchg
nop
adc
in
rorb
sahf
fadd
iret
pop
xchg
add
dec
shlb
call
hlt
sti
xchg
nop
jne
pop
dec
dec
cmp
mov
push
push
pushf
pop
out
add
xor
imul
adc
adc
out
cmpl
inc
xor
or
notl
mov
outsb
pop
divl
add
cltd
mov
das
mov
pop
jno
add
adc
pop
scas
call
aas
mov
loope
jb
mov
pusha
push
ret
adc
lds
dec
pop
arpl
fdivrl
add
cmp
mov
push
shll
mov
icebp
testl
cmp
outsb
xchg
dec
dec
mov
xor
pushf
sub
pop
xchg
insl
ss
dec
or
adc
jge
les
xchg
out
mov
inc
xor
xchg
cmpsb
ljmp
jg
imul
push
pop
loop
dec
mov
sbb
fdivrl
cmp
xchg
push
adc
test
les
scas
stc
xor
into
jo
push
xor
xor
lret
pop
add
or
push
leave
dec
push
jno
inc
rcr
cwtl
popf
mov
adc
xor
loopne
mov
into
shlb
cmp
enter
test
dec
mov
mov
jbe
arpl
shl
jnp
into
imul
jae
jg
sti
ret
das
inc
bsr
enter
in
push
leave
fmuls
mov
mov
lods
mov
mov
dec
loope
sbb
xor
add
dec
pop
adcb
ds
jne
jb
gs
std
xchg
push
add
jae
jmp
test
inc
fdivr
add
mov
xor
dec
popa
add
data16
xchg
cs
cmp
lods
test
ret
sbb
jmp
or
mov
das
mov
inc
and
testl
lods
ss
cmpsb
jg
arpl
mov
adc
mov
lret
es
lahf
xlat
repz
in
inc
ds
aaa
gs
cmpsb
in
mov
jae
shlb
in
mov
jo
in
pop
fxtract
cmp
fstpt
ljmp
cld
push
or
cmpsl
loopne
jg
and
ja
cmp
xor
xlat
in
and
inc
cmp
xchg
stos
fisubl
mov
gs
sahf
xor
cs
fnstenv
cld
mov
jge
es
xchg
xchg
andb
clc
and
xchg
das
mov
lahf
test
jo
mov
movsb
sub
in
sub
jecxz
pop
test
dec
jne
xchg
and
or
add
mov
pop
and
pop
xor
mov
or
ret
jne
loope
rclb
cmp
push
push
cwtl
test
das
sbb
push
xor
dec
mov
scas
lods
into
pop
je
dec
sbb
mov
adc
dec
ret
dec
add
push
leave
push
xchg
xlat
mov
lahf
jg
fwait
jo
and
cltd
js
aam
or
cmpb
xchg
insl
outsb
incb
hlt
xor
enter
jg
inc
imul
mov
jb
xor
xchg
lret
loop
sarb
adc
dec
lahf
andb
ljmp
pop
mul
out
ret
lock
pop
je
shrl
and
addr16
xchg
es
jle
rorl
sub
faddl
fwait
sub
push
adc
addr16
mov
lods
push
lret
shll
pusha
cmp
xor
incl
mov
test
push
cmp
and
ret
dec
sbb
aam
xor
insb
inc
sub
mov
inc
inc
xchg
aam
aad
mov
in
pop
mov
movsb
and
pop
adc
pop
clc
in
mov
push
scas
in
add
jg
arpl
jmp
sbb
pop
jae
adc
cmpsb
ljmp
inc
and
popa
push
pop
xor
sub
jmp
add
mov
daa
jnp
insb
popf
xor
push
std
xchg
dec
mov
movsb
cmp
hlt
cmp
out
adc
dec
cmp
fwait
lret
jbe
inc
push
sbb
xor
lcall
repnz
aad
xchg
arpl
pop
mov
jmp
movsb
pusha
test
mov
pusha
in
pop
pop
mov
sahf
cwtl
sub
leave
xor
inc
and
pop
xor
push
push
lock
sbb
jl
dec
fldcw
std
dec
xor
ret
cwtl
push
cmp
xchg
scas
rcrb
cmpsb
fiaddl
xlat
or
xlat
rcrl
jne
jl
push
jns
cld
mov
insb
adc
dec
insb
push
js
int
sub
aaa
rol
leave
and
inc
jo
cmp
cmpsb
inc
cmp
imul
xchg
mov
mov
cmp
dec
or
faddl
insb
cld
and
xor
lods
por
jns
mov
nop
inc
lods
repnz
and
stc
lds
stc
inc
lret
je
mov
xchg
xchg
push
je
shll
ja
pop
add
sub
lret
mulb
push
sbb
ljmp
paddsw
mov
stos
fcomi
aad
mov
xor
in
cmp
ret
insl
push
icebp
inc
mov
jle
in
mov
into
xor
jmp
adcl
orl
aaa
repnz
in
mov
jp
fimuls
aam
outsl
or
bnd
nop
and
icebp
xor
lea
out
subl
les
and
pop
insl
mov
cmp
jmp
aad
and
rcrb
aad
jge
lahf
ss
leave
adc
daa
pop
fidivl
add
test
jmp
fbstp
cmp
and
jle
sub
cmp
xchg
clc
ja
jge
xchg
dec
notl
or
jmp
jle
inc
es
fwait
sarl
aam
mov
pop
hlt
jnp
push
pushf
xchg
cmp
xchg
fmul
and
pop
cmp
pop
push
adc
adc
in
outsl
fwait
ss
mov
gs
xor
ljmp
mov
fsub
test
shll
aam
imul
mov
xchg
jbe
leave
mov
mov
push
xor
and
fcomp
jae
inc
daa
ret
cli
lret
jns
mov
fsts
leave
jle
dec
push
jb
dec
enter
dec
lret
rclb
shrb
adc
xor
imul
scas
cmp
jo
or
movsb
rorb
mov
adc
jg
insb
or
test
popa
push
enter
cmp
dec
lret
imul
mov
inc
pop
or
popf
xor
dec
mov
clc
iret
inc
imul
cltd
xchg
lods
iret
mov
jae
cmp
sbb
or
aad
push
pop
xchg
mov
cbtw
das
xchg
pop
jno
jnp
mov
out
imul
xchg
xchg
out
mov
cmpsl
sbb
pop
test
loop
and
mov
cmpsb
and
sub
add
pop
or
pusha
or
xchg
aad
xchg
add
negb
add
adc
jno
mov
adc
filds
or
push
cwtl
out
dec
pop
adcl
sub
and
dec
out
xor
movsb
addr16
in
lcall
or
cmp
stc
xlat
mov
ret
jmp
les
mov
sahf
in
jnp
mov
adc
enter
mov
stos
push
mov
xor
ja
add
sbb
cmp
or
or
sbb
ret
ret
pop
clc
cmp
sbb
mov
jecxz
cmpsb
and
cmp
addr16
out
inc
dec
in
addr16
cli
push
jb
sbb
sub
sub
rorl
and
push
jmp
sub
inc
sbb
cmc
sbbb
sbb
movsl
dec
in
call
mov
or
mov
and
cltd
imul
stc
sub
lret
and
dec
inc
loope
xchg
push
imul
movsb
hlt
gs
repnz
add
lcall
and
scas
push
repz
cmpl
xchg
mov
sahf
bound
rclb
lret
adc
adc
pop
dec
pop
cmp
mov
pop
adcl
and
aas
mov
das
sbb
sti
mov
in
mov
and
push
in
sbb
sbb
lds
mov
inc
inc
lds
push
fnsave
jg
aas
decl
popf
fwait
jae
pop
cld
push
gs
add
je
enter
jge
cmc
jl
mov
sbb
pop
lret
imul
inc
je
adc
loope
cmpsb
fsubrp
inc
pop
les
fdivrl
frstor
pmullw
jnp
pop
or
dec
xchg
sub
push
in
test
sbb
into
xchg
push
push
shrl
and
les
rol
test
hlt
sub
cmpsl
test
mov
push
adc
fimuls
dec
pop
adc
push
mov
xchg
repnz
mov
xchg
mov
xchg
mov
out
rcl
repnz
lret
imul
mov
cmpsl
les
mov
jbe
push
cs
mov
repnz
jo
fsubs
or
test
mov
inc
lea
fcmovu
ret
aam
call
cmc
movsl
ljmp
lahf
cwtl
xor
jae
test
xchg
les
insb
mov
fcomi
xorb
pop
fists
xchg
and
inc
shrl
mov
icebp
inc
pop
inc
pop
cmp
icebp
test
test
cmpsb
push
adc
xlat
dec
pusha
int
xchg
imul
xor
or
inc
push
lret
mov
test
cmpsb
push
insl
push
dec
dec
push
scas
cmp
inc
test
fstpt
dec
and
arpl
adc
add
mov
cmpsl
inc
inc
jae
insb
mov
cmp
ret
imul
fcomip
push
aad
loopne
adc
cli
inc
fwait
xor
sbb
and
mov
push
pop
mulb
inc
jge
inc
lock
fsubs
mov
mov
in
clc
repz
iret
fcmovnb
adc
pushf
cmp
push
jp
pop
xor
addl
xchg
pop
mov
je
test
dec
arpl
test
pop
pusha
testl
imul
adc
pop
mov
jp
add
sbb
loope
outsb
loope
mov
arpl
cwtl
pop
int
into
cmp
xchg
lcall
mov
jmp
mov
gs
shrb
sahf
add
fwait
mov
out
xchg
push
sbb
outsl
jnp
ret
fildll
idivl
cltd
je
fsubrs
movsb
clc
xchg
lahf
notb
mov
add
xchg
out
pop
sbb
pop
fistps
add
push
sbb
fwait
jg
lret
sub
pop
cmp
hlt
inc
xor
sbb
repnz
das
pop
out
test
jnp
xor
and
push
push
insb
pop
rolb
jmp
test
inc
test
inc
fisubrs
loope
insb
lret
jmp
add
add
imul
xor
pop
mov
int
ret
pushf
sbb
shl
stos
and
pusha
stc
mov
loopne
push
cmp
sub
add
movsb
push
xlat
mov
lahf
and
nop
push
jno
mov
or
adc
mov
fidivl
sbb
and
sti
clc
jo
push
mov
push
arpl
and
and
lds
and
xchg
pusha
inc
scas
sbb
inc
fdiv
ja
in
xchg
arpl
int3
cld
dec
lret
lods
push
sbb
pushf
sbb
dec
add
cs
test
pop
sar
push
shlb
mov
jge
push
pop
jle
outsl
cmpl
movsb
xchg
pushf
int3
mov
xchg
scas
adc
mov
sub
test
jle
mov
out
push
add
iret
repz
popa
jmp
cmp
pop
mov
mov
cmpsb
adc
and
adc
out
ret
andl
aad
add
push
test
std
xchg
sub
jns
adc
fstpt
sub
or
xchg
xchg
popa
sbbl
aas
sbb
sbb
lcall
aaa
into
testl
cmpsb
xchg
lods
repz
scas
push
fcmovbe
out
or
outsl
push
and
je
pop
jle
movsb
movsb
std
mov
lds
mov
sub
jecxz
fstpl
mov
fldt
or
std
sbb
push
ja
push
add
mov
cmpl
inc
push
ds
pop
adc
ljmp
aad
and
test
xor
imul
stc
nop
push
mov
pop
sub
cmpsb
int
push
push
jb
push
jne
pushf
inc
popa
jge
xor
xchg
cmp
dec
in
lret
call
jne
out
fildll
push
xor
fdivrs
push
cmp
aaa
inc
std
movsb
xor
out
adc
outsl
loop
sbb
mov
shrb
cwtl
pop
loope
ljmp
mov
jg
sub
mov
in
cmpsl
repnz
and
pop
das
jle
pusha
adcb
vmread
subl
mov
add
push
jo
xchg
push
fstp
jmp
pop
lock
add
or
push
insb
lret
sarl
leave
jmp
int3
xor
push
adc
pusha
mov
popa
jo
xor
push
mov
shll
mov
cmpsl
insl
int3
repnz
insb
add
in
outsb
das
inc
mov
repnz
push
and
stos
in
inc
pop
push
sarb
mov
cmp
dec
outsb
aam
sbb
mov
jecxz
mov
add
cmpsl
jmp
fs
mov
test
or
or
mov
pop
testb
cwtl
fistpl
xor
xor
inc
imul
pop
pop
repz
dec
pop
sub
pop
test
js
fnstcw
in
mov
mov
lods
inc
cmp
sub
or
push
push
imul
lret
xor
daa
out
push
lahf
ss
push
jecxz
inc
sbb
into
lds
pop
inc
gs
and
and
mov
int3
aaa
cmpsl
mov
dec
mov
add
sub
inc
movsl
mov
inc
inc
xor
inc
stos
fildl
test
jae
xor
add
xor
jno
in
adc
in
or
sbb
xor
aas
jl
test
dec
mov
dec
dec
loop
mov
dec
insl
pushf
imul
xor
adc
push
mov
cwtl
neg
xchg
jle
pop
sbb
fcmove
js
and
mov
cli
pushf
dec
adc
adc
fldl
xchg
mov
jle
ljmp
ret
imul
sbb
jg
rclb
aam
imul
mov
dec
testl
repz
lock
loop
lcall
sub
arpl
or
push
notl
push
pop
hlt
leave
xor
into
and
sbb
movsb
dec
mov
adc
jns
dec
mov
fildl
lea
xchg
stos
cli
push
add
out
push
fstpt
mov
and
call
orl
jle
sbb
mov
mov
outsb
mov
lahf
jb
stos
jmp
data16
in
mov
shl
push
sub
sbb
out
icebp
adc
imul
push
and
xchg
arpl
add
sti
testb
cmp
mov
jae
push
lods
pop
sub
xor
int3
pop
les
cmpsb
lret
cltd
push
jge
mov
adc
sub
mulb
enter
adc
test
jecxz
pop
lahf
into
xor
out
add
or
hlt
out
aam
movb
lea
add
loopne
je
test
gs
adc
aas
dec
push
mov
jae
int3
loopne
push
and
cmpsl
cmp
mov
nop
in
out
mov
dec
ffree
dec
andb
stos
sbb
cmp
cmp
jb
dec
dec
mov
jecxz
push
aas
adc
lea
inc
shrb
shll
sbb
clc
lea
lcall
int3
test
or
inc
pop
clc
imul
scas
and
jg
mov
andb
int
cltd
ds
mov
fs
in
and
aas
dec
dec
ljmp
insb
sub
push
xor
movsl
sbb
orl
lods
jl
xchg
outsb
fidivs
push
cmp
outsb
rclb
sbb
sbb
aaa
push
cmp
aas
loop
fists
scas
cltd
sbb
cmp
scas
dec
and
jnp
jae
je
bound
hlt
add
inc
push
das
mov
int3
sub
jo
lock
sti
inc
in
cmpsb
jp
xlat
xchg
ss
xor
imul
dec
sbb
call
pop
cmp
cltd
das
test
or
push
adc
out
inc
je
test
test
ffree
arpl
ret
jo
jecxz
repnz
pop
pop
xchg
dec
in
xor
dec
dec
inc
mov
push
cltd
mov
pop
out
push
sub
inc
jno
jecxz
into
movsl
pop
add
dec
cmp
xchg
adc
pop
adc
call
ret
pop
sbb
jmp
lods
mov
lret
in
addr16
sbb
pop
mov
mov
add
cld
insl
lahf
gs
mov
rcrb
gs
and
xor
sub
pop
repz
xor
cmc
iret
jl
iret
sub
sub
flds
jmp
leave
pop
xchg
cmp
stos
and
mov
out
mov
int
outsb
hlt
popw
lret
enter
sbb
xor
stos
fcmovnb
push
xchg
adc
jbe
gs
arpl
inc
jg
mov
lds
jge
outsl
imul
or
outsl
jg
pop
adc
mov
jmp
js
call
lea
mov
sub
lods
push
rcr
dec
inc
adc
mov
decl
aad
insb
fstps
sbb
aaa
rcrl
pop
pop
daa
outsl
add
inc
push
or
sbb
aam
mov
lods
xchg
out
cmp
mov
adc
mov
mov
lret
stos
sub
dec
jno
loop
pop
dec
inc
inc
sub
ja
out
sbb
inc
push
mov
pop
stc
push
sbb
and
add
stos
cs
insb
or
in
add
or
mov
scas
push
test
nop
sbb
test
mov
xchg
jbe
push
adc
xchg
insl
jae
sahf
hlt
rclb
mov
jp
pop
sbbb
add
pusha
add
rorl
bound
mov
sub
sub
aaa
cmp
mov
test
stos
and
aam
mov
cli
mov
test
sbb
hlt
cmp
inc
pop
adc
call
push
jo
mov
xor
mov
inc
das
mov
icebp
mov
dec
mov
ret
pop
cmp
in
cmp
mov
cmpsb
cmp
imulb
outsl
ret
sub
jmp
adc
mov
mov
loope,pt
stc
xor
push
add
xchg
push
orb
stc
mov
xchg
cmp
lret
fnstsw
pop
repz
fnsave
dec
aam
add
cld
xchg
adc
inc
insl
rcrl
mov
lahf
and
and
xchg
out
dec
cmp
je
push
mov
mov
xchg
sub
jg
lret
adc
mov
lea
fdivrs
or
outsl
movsb
repnz
fcoml
adc
add
sbb
out
stc
dec
imul
cli
sti
xchg
sub
es
dec
sbb
pop
or
cld
nop
mov
xchg
mov
movsl
stos
in
mov
mov
xor
adc
shll
jne
movsb
and
daa
cld
lcall
in
stos
mov
pop
hlt
sti
insl
andl
and
jl
jns
sbb
call
push
pop
fldcw
enter
jb
and
jp
push
sub
lahf
push
iret
sub
cltd
cwtl
and
xchg
push
mov
fs
out
add
sbb
xor
sub
loope
rol
repnz
addr16
into
dec
hlt
cmp
mov
adc
fs
xor
arpl
mov
jp
stos
inc
clc
mov
shl
push
loope
jno
test
test
subl
push
ds
subl
sbb
ljmp
push
jne
xor
inc
fcomps
js
cmp
or
and
outsl
jns
lock
ds
jl
pop
clc
rcrl
push
dec
mov
and
daa
mov
sbb
cmpsb
or
xchg
dec
aam
sbb
out
cmc
aam
adc
out
call
pop
repz
lods
inc
sub
cmpsl
nop
inc
mov
dec
mov
fst
pop
push
stos
mov
mov
xchg
insb
or
mov
lods
sub
ret
dec
dec
movsl
sub
imul
outsb
leave
inc
dec
jbe
jnp
and
das
xor
fprem1
stc
inc
push
mov
lock
sbbl
mov
cmp
cltd
jae
sbb
lock
scas
test
or
test
es
fs
and
mov
and
jp
jp
out
jo
and
aam
icebp
dec
dec
fdivs
add
and
insb
and
gs
pop
mov
mov
paddusw
cmpsl
xchg
fwait
sub
inc
jne
jae
inc
mov
jae
cmpsl
jbe
adc
fwait
int3
cli
mov
in
adc
pushw
incb
stc
push
in
test
xor
jns
push
dec
sbbb
in
imul
and
shlb
or
jbe
jle
in
push
lret
mov
ret
and
pushf
mov
push
xor
and
ret
pop
out
popa
xchg
ret
add
jb
pop
call
push
ds
out
push
sbb
cwtl
stos
xor
loop
pop
sub
loopne
shrl
shrb
outsl
sbb
sbb
movsl
dec
imul
iret
sub
jo
hlt
lods
lock
out
mov
out
mov
add
adc
add
fs
xchg
outsl
iret
popfw
jbe
ljmp
jmp
jle
xchg
fdivrl
inc
test
xchg
sbb
shr
in
pop
jbe
jmp
mov
or
pop
iretw
mov
adc
rcrl
pop
push
xchg
movsb
add
jbe
and
stos
dec
push
std
xchg
outsb
jbe
push
push
insl
add
pop
xchg
in
jmp
and
ds
lods
dec
arpl
cmp
fbld
fldenv
lret
insb
in
sub
aas
pop
mov
lea
mov
fnsave
push
push
jg
ds
push
mov
nop
push
jne
inc
push
pop
add
es
cmp
jle
es
imul
push
cli
and
ss
leave
mov
xchg
fsubs
xor
mov
dec
aad
stos
lret
push
sbb
ss
pusha
dec
mov
xor
push
mov
lret
sbb
lret
add
sub
in
test
vpmacswd
xchg
cld
sub
cmpsb
mov
frstor
les
mov
fistpl
xor
sub
pop
push
dec
pop
cltd
in
sub
clc
adc
lret
jb
jae
dec
lods
rolb
movsl
mov
xor
sbb
or
js
jns
xchg
cltd
loope
cwtl
cmpsb
pop
int
test
mov
mov
cli
test
in
scas
enter
jb
adc
test
movsl
rorb
jp
or
adc
int3
inc
shrl
das
or
sub
roll
insb
mov
imul
push
or
sbb
fistpll
aas
inc
ds
push
lods
add
into
and
xchg
ja
adc
cli
pushf
jge
push
iret
into
jp
daa
jle
push
in
stos
jle
mov
sar
dec
push
cmpsb
sahf
mov
mov
shrb
scas
or
xchg
dec
jno
int3
mov
notl
cs
aaa
add
imul
pusha
sti
push
mov
xchg
mov
mov
jmp
add
pop
dec
lcall
adc
mov
popa
dec
dec
push
pop
push
fistl
push
imul
xor
xchg
lret
scas
push
jo
mov
xchg
lret
and
push
xchg
mov
mov
sbb
ret
lea
inc
xchg
sbb
mov
cmp
loop
ljmp
out
test
sub
push
pop
push
popf
jnp
repnz
or
xor
test
sub
repz
pop
shrb
pop
shr
decb
fs
subl
and
push
repz
dec
xchg
lea
sbb
dec
mov
or
push
int
jno
repz
mov
jle
dec
push
lcall
adc
sbb
cwtl
push
shlb
jg
push
xchg
and
xor
push
pop
cmp
sti
pop
ret
dec
inc
std
add
xor
ss
mov
add
mov
jno
nop
in
outsl
sbb
imul
sbb
addr16
cs
cmpsb
loopne
aam
mov
or
in
sub
ss
sti
pop
dec
bound
es
cmp
lret
test
pop
cmpsb
ds
pop
xor
pop
pop
cmpsl
pop
mov
out
jge
push
pop
outsb
adc
and
mov
ss
dec
dec
fdivrs
scas
and
ret
and
mov
mov
fdivs
xchg
cmp
mov
or
dec
sti
loop
jge
jb
jae
sub
arpl
stos
or
mov
jle
test
push
xorb
sbb
jmp
dec
adc
push
xor
ss
popa
xor
jo
in
test
fidivs
adc
shl
adc
xchg
push
pop
xor
adc
enter
mov
je,pt
test
clc
xor
decl
shrl
pop
mov
mov
cmp
and
loope,pt
rolb
shl
rolb
mov
jl
sbb
dec
scas
nop
outsb
ret
rol
push
fsubrs
dec
mov
shlb
dec
gs
imul
jbe
notl
jl
mull
loop
movsb
mov
mov
mov
sti
mov
das
scas
sbb
ret
jmp
ss
adc
mov
or
jg
and
adc
repz
inc
addr16
outsb
lods
in
aad
push
or
popa
adcb
js
mov
jecxz
gs
xor
inc
sub
push
sbb
cmpsb
adc
sti
mov
push
aaa
ljmp
ss
cmp
stos
fisubl
aaa
add
or
sbb
hlt
cmp
scas
inc
jmp
push
mov
xor
adcb
sarl
add
in
jl
lcall
fstps
jg
and
xchg
lahf
lods
inc
adc
dec
clc
pop
lahf
fnstenv
cmp
inc
rcrl
inc
lahf
and
shl
das
jae
or
mov
push
rcll
push
sub
xchg
cmp
pop
lods
pop
mov
inc
gs
pop
loope
lods
testb
mov
cmpsb
imul
pop
aad
mov
adc
xchg
sbb
repnz
in
rol
cmp
sub
fcomps
xchg
in
mov
and
loope
cmp
and
add
push
jnp
lea
in
into
lods
andl
outsb
jbe
je
mov
int
sti
pop
stc
pop
push
lret
push
xor
jmp
mov
mov
add
ds
pop
pop
call
add
rcll
insb
pushf
xor
and
dec
repnz
push
adc
mov
scas
je
pushf
xor
add
nop
repnz
dec
inc
jmp
bound
or
jnp
addr16
arpl
push
mov
in
lock
or
lret
nop
sub
pop
jb
xchg
ret
shll
ficompl
jmp
js
sbbl
ja
aaa
cmpsb
mov
ds
out
mov
mov
pop
pop
testb
dec
loop
jge
aad
cmp
rep
iret
xor
mov
call
xor
jae
pop
repnz
pusha
repnz
jns
fdivrs
push
sahf
dec
dec
dec
in
sub
push
jb
dec
xor
test
add
out
jp
mov
movsl
dec
xor
xchg
dec
lret
scas
inc
dec
pusha
out
jb
shrb
jl
cmp
loope
sbb
push
adcb
mov
icebp
popa
xor
jg
inc
pushf
test
push
and
mov
pop
dec
and
imul
sbb
mov
outsb
and
andb
pop
mov
sbb
or
in
cmp
daa
cmp
mov
dec
in
xchg
push
and
or
sub
or
testl
insl
inc
cmp
insb
jne
adc
repz
or
dec
repnz
or
nop
adc
mov
sarl
mov
rcrl
mov
cld
sbbb
iret
pop
out
shrb
scas
das
add
mov
adc
std
cmpsl
ds
xor
jmp
clc
popf
or
in
dec
dec
std
out
test
test
mov
out
jae
adc
pop
cmp
jp
test
xchg
insb
aas
repz
adc
mov
or
sbb
out
lahf
dec
dec
jne
mov
dec
pop
or
cmp
idivl
fcompl
dec
test
mov
xor
pop
outsb
hlt
in
das
ret
das
jne
sub
popf
and
inc
mov
lret
push
inc
leave
fmuls
dec
dec
in
stos
mov
mov
decl
xor
xchg
sbbb
mov
or
cli
mov
jb
sbb
in
mov
or
jno
dec
movsl
or
mov
sub
lcall
test
jne
sub
stos
out
test
xor
mov
cmpsl
or
xchg
popf
outsl
push
iret
cmp
insl
out
lea
dec
rcl
out
lcall
cltd
je
cld
aam
popf
inc
negl
dec
sub
xchg
pushf
and
in
lret
sbb
es
jl
or
scas
lcall
jmp
in
sarl
mov
push
je
imul
ja
arpl
jl
std
sub
pop
xor
addl
fbld
push
pop
adc
jmp
movsb
cmpsb
inc
cmpsl
mov
jne
bound
ss
jnp
jbe
or
aam
jne
pop
xor
or
adc
jp
cmpsb
cld
push
in
adc
add
sbb
push
pop
mov
rclb
jnp
loopne
daa
or
icebp
js
push
pop
call
inc
pop
jmp
xchg
mov
fmul
and
sahf
push
insl
xor
push
xchg
push
mov
adc
ss
mov
out
pop
sbb
cmp
push
ret
pop
adc
dec
sub
xor
ljmp
lods
cmp
xor
out
pop
movsl
sbb
adc
mov
addr16
mov
int
ja
out
push
inc
mov
iret
xchg
jg
and
jge
jb
out
cmpsl
push
adc
mov
stc
aad
imul
mov
mov
push
ljmp
pop
mov
aaa
incb
inc
push
lock
sbb
std
dec
sub
xor
aas
push
movsb
jp
xor
dec
repz
cwtl
das
lea
mov
xor
fidivs
ret
jb
enter
jb
cmpl
sbb
mov
in
and
sbb
mov
outsl
push
mov
mov
sbb
sbb
aas
dec
out
addr16
inc
ljmp
call
xchg
and
fwait
das
sbb
and
dec
sti
fdiv
int3
sub
cmc
pop
int
das
jmp
loop
mov
cmp
insb
iret
loop
sbb
orb
adc
call
rolb
pop
sahf
iret
push
push
icebp
and
push
ffree
mov
xchg
test
neg
sbb
cmp
push
sub
nop
dec
mov
repnz
dec
arpl
pushaw
gs
inc
dec
mov
outsb
sub
and
pop
out
outsb
jbe
dec
lods
cmp
les
adc
pop
mov
shrl
dec
mov
call
in
adc
push
std
es
out
inc
cwtl
negl
cmpl
sahf
push
adc
and
shlb
stos
sbb
bound
out
mov
push
or
mov
les
lea
add
inc
aaa
add
nop
mov
bound
xchg
mov
repz
cmc
pop
std
xchg
shl
int3
xchg
pop
mov
in
sub
scas
mov
stos
xor
sbb
pop
xor
pop
inc
call
in
mov
pushf
jbe
arpl
jnp
daa
outsl
push
sub
imul
ret
mov
mov
pop
add
xor
loopne
ds
orl
movsl
pop
sub
jg
bound
cwtl
mov
or
jno
jne,pn
cmc
sbb
dec
pop
pusha
popf
or
ss
inc
fmul
jle
mov
ljmp
ret
xchg
sbbb
pop
adc
mov
sub
orl
mov
dec
jmp
cmpl
cmp
cmp
call
and
outsb
mov
je
mov
loope
mov
loop
inc
sub
flds
sub
dec
sti
push
dec
push
jge
stos
pusha
jl
add
std
or
in
inc
rcrl
loope
and
cmp
test
jae
mov
into
or
mov
cmp
out
push
and
aaa
inc
sahf
jmp
mov
cmc
push
xor
mov
jp
popa
and
rol
fcomps
sti
lret
sub
mov
insb
dec
dec
aaa
dec
leave
loop
pop
mov
popa
jg
in
shrb
add
arpl
inc
mov
stos
jae
or
stos
mov
and
inc
xlat
inc
dec
ss
andl
notl
pop
decl
adc
cmp
pop
shrl
mov
out
clc
cmp
fildl
fdivrl
cmp
push
xchg
adc
out
mov
add
mov
adc
pushf
dec
jg
dec
mov
lds
push
pusha
sub
xor
lods
nop
repz
scas
das
rorb
bound
adc
popf
adcb
add
movsb
cli
inc
je
enter
lods
sbb
loop
fstps
adc
push
repz
fidivrs
ds
pushf
ds
leave
add
pop
loop
es
das
pusha
inc
test
add
inc
test
sub
in
inc
int
mov
jecxz
mov
cmp
push
mov
shlb
add
cmp
add
or
mov
aam
adc
add
out
xchg
lods
add
jnp
jbe
or
or
dec
inc
push
mov
xor
test
bnd
int3
mov
jbe
xchg
daa
sub
or
stos
ss
pusha
pop
pop
rcrl
jle
jae
jbe
repz
out
sbb
loope
dec
mov
shrb
andps
or
sub
mov
ja
jb
loope
jb
lahf
sub
popl
pop
call
adc
or
cmp
sti
negl
push
sub
movl
or
and
scas
push
cs
xor
lock
pop
cmp
into
sti
int
jge
pop
bound
mov
lock
outsb
stos
cmp
mov
int3
mov
mov
cmpsl
dec
add
sub
cmc
in
andl
pop
out
mov
fnstenv
mov
fcmovbe
mov
adc
jo
insl
je
mov
mov
fisubs
pusha
mov
mov
inc
cwtl
das
pop
movsl
addr16
xchg
and
inc
sbb
xor
test
test
imul
mov
cmpsb
or
psllq
in
insl
subb
add
xchg
jo
mov
mov
stos
inc
into
test
adc
popf
xor
into
pop
or
sbb
or
pop
jle
lods
dec
lods
jo
sbb
jae
push
fdivl
mov
push
adc
in
or
adcl
and
xchg
ja
out
cmpsl
mov
mov
mov
aam
stos
cmp
data16
push
ret
push
pop
in
iret
inc
sbb
push
ljmp
out
cmpl
push
enter
imul
leave
outsb
adc
and
adcl
scas
fnsave
dec
scas
xor
out
jg
hlt
add
xchg
dec
pop
fildl
sub
or
into
dec
mov
jnp
sbb
iret
sahf
or
iret
lock
add
mov
inc
jnp
test
xchg
sub
push
add
cmp
mov
xlat
push
mov
add
lcall
in
sbb
outsb
adc
push
shr
fidivrl
cmc
test
mov
sbb
pop
icebp
jge
cmp
xchg
add
push
sbb
dec
jbe
popa
stos
mov
ret
sbb
cli
orl
daa
cmp
ret
sub
dec
cmpsl
sub
adc
lods
jns
xor
andb
jne
jns
push
jl
ficoms
jge
pop
lcall
stos
fcomi
push
fnsave
into
push
jbe
cmpsl
es
fcomip
sub
pop
pop
int
dec
loopne
out
dec
loop
jnp
mov
bound
out
mov
jbe
es
jbe
movups
fs
rorl
and
imul
pop
xlat
ja
int3
rep
in
dec
fistpll
insb
add
jmp
mov
mov
cwtl
aas
sti
pop
jno
push
out
or
dec
cmc
cli
outsb
inc
mov
pop
push
pop
or
inc
fdivrl
sub
fcom
sbb
or
std
inc
sbb
shl
outsl
popf
stc
leave
imul
int3
arpl
sub
icebp
lock
cmp
fbstp
rorb
cld
adc
pop
sti
mov
es
xlat
fbstp
push
push
mov
sahf
mov
xchg
push
mov
or
sbb
data16
or
jle
leave
int
mov
iret
push
inc
jle
xchg
rcrl
hlt
push
lcall
push
in
xchg
lods
ret
nop
ja
ret
inc
push
xchg
mov
in
adcl
sbb
test
movl
ret
sub
mov
xor
test
fstpl
mov
push
lods
ljmp
pop
inc
push
insl
lea
lcall
pusha
stc
pop
pop
xchg
sbb
outsl
negb
push
mov
add
adc
sub
mov
rcr
mov
loop
out
jle
int
test
notb
mov
insb
fidivrl
in
sahf
stos
in
mov
jp
leave
loopne
jg
push
mov
int
and
ljmp
xor
addr16
jnp
fsub
aaa
adc
lea
outsb
add
sbb
mov
out
cmp
cmpsb
xchg
in
xchg
scas
inc
lahf
mov
int3
arpl
jl
jbe
sahf
jno
dec
aaa
std
xchg
imul
les
cmpb
ret
ds
stos
jge
lods
add
mov
push
shr
jle
cmp
sbb
sti
and
fidivs
dec
stos
add
dec
dec
sub
ret
orl
cmc
fs
leave
push
insb
leave
push
jl
push
rol
ja
pop
fstps
dec
pop
jns
inc
fsubr
call
pusha
stos
jno
outsl
cmp
mov
mov
lret
and
andb
xchg
lods
or
movsl
cmpb
and
scas
adc
jne
xchg
pop
rcll
in
push
stc
xorl
shr
and
mov
pop
loopne
je
les
popf
cmpsb
addr16
jbe
lock
sahf
and
sbb
stc
aad
insl
add
pop
mov
pop
mov
insb
mov
push
jg
cld
push
jno
lods
mov
xor
inc
push
imul
xchg
scas
or
mov
mov
add
pushf
mov
push
and
cmp
jo
fsubrs
ret
inc
sahf
stos
dec
cmp
call
xchg
les
mov
fwait
add
shlb
sbb
addl
mov
in
mov
fcomps
test
and
lea
push
adc
inc
lods
lret
ds
adc
cmpsl
cld
pushf
cli
push
pop
daa
cmp
decl
imul
pop
sbb
mov
pop
stos
fdivp
xchg
int3
pop
ljmp
mov
repnz
mov
cmc
adc
push
push
into
gs
test
jg
mov
mov
stos
jbe
popf
stos
fcmove
inc
clc
je
movsb
mov
mov
mov
lret
insl
lea
shll
adc
adc
or
add
loopne
jno
jle
popa
jae
xchg
mov
xchg
dec
sarb
or
movsb
sub
imul
cwtl
or
mov
ret
jo
lods
stos
push
test
inc
insb
mov
in
out
leave
inc
pop
jle
mov
xor
pushf
lea
xchg
inc
div
mov
out
leave
jbe
cli
lods
insl
ja
les
insb
push
sub
std
xchg
icebp
mov
sbb
pop
mov
movsl
insl
cmp
stos
rolb
sbb
filds
hlt
lcall
mov
push
inc
mov
pop
fs
lcall
lret
xorb
nop
daa
sbb
pop
mov
cltd
mov
and
cltd
or
test
sub
xchg
pop
mov
pop
into
inc
loopne
je
movsl
dec
loopne
sbb
insl
mov
lds
or
int
push
mov
aad
push
daa
inc
mov
cmp
ds
and
adc
jo
out
cli
dec
xchg
inc
notl
jecxz
iret
subb
cmp
stc
mov
fucom
and
dec
ja
dec
movsl
pop
push
push
xor
das
push
add
mov
std
or
mov
dec
aad
rorb
imul
dec
jmp
fsubr
xchg
xor
mov
sub
int3
mov
in
fldt
insl
add
jne
ja
add
lcall
mov
scas
mov
lahf
aas
clc
out
ljmp
xchg
jae
ja
iret
or
shr
scas
xchg
add
loope
push
mov
fwait
in
je
cmp
cmp
jnp
out
pop
adc
dec
ret
mov
mov
mov
and
sub
push
mov
xchg
aas
mov
push
out
test
push
int
imul
pop
xadd
mov
xchg
fidivrl
insl
gs
cmp
das
ja
jnp
inc
lods
dec
push
xor
xchg
out
pop
push
adc
aad
hlt
lods
cmp
ljmp
mov
shl
or
mov
out
pop
movsb
out
cwtl
xor
pop
das
insl
sub
push
sahf
push
sub
fmull
pop
or
push
pushf
loop
and
pop
mov
sbb
jno
cmpsl
sub
in
jb
in
jbe
mov
pop
inc
cs
xchg
jb
push
cltd
jmp
lds
ljmp
in
int3
fimull
add
leave
pusha
andl
cmp
leave
decl
scas
mov
aam
pop
leave
ret
rcrl
fcoml
inc
sbb
mov
add
sbb
lods
add
pop
insl
xorb
fs
sbb
jae
insl
jecxz
jo
lahf
or
cltd
xorb
inc
lods
pop
sbb
jle,pn
or
xor
push
in
fisttps
xor
adcb
mov
mov
cmp
sub
scas
scas
push
lahf
mov
outsb
or
loop
cmpsb
imull
sbb
sbb
mov
je
int
inc
add
adc
xchg
mov
lock
lods
das
jns
push
bound
nop
int3
pop
imul
mov
jbe
add
sub
lret
jmp
ficoms
push
inc
test
aaa
push
inc
popaw
add
fs
pop
inc
adc
pop
mov
mov
pop
mov
cmp
lds
sub
mov
jno
mov
and
sar
insl
fistpl
test
inc
mov
out
fsubrl
xor
xor
sbb
xor
jle
adc
cli
lret
fldl
hlt
gs
inc
shr
sub
pop
fsubrs
leave
addb
inc
sbb
je
jno
push
jmp
dec
bnd
sarl
test
mov
sbb
nop
in
daa
inc
xlat
mov
or
sub
aad
sub
jg
pusha
mov
inc
das
xchg
push
out
cmpsb
pop
mov
jne
filds
jecxz
jb
sbb
fistps
push
jnp
stc
aas
push
stc
push
xchg
das
inc
cli
test
mov
pusha
cmp
push
pop
push
adc
xchg
sbb
cwtl
or
mov
or
cli
lds
aaa
mov
inc
test
xchg
and
mov
aas
fildl
mov
sbb
movsb
sbb
out
out
es
adc
hlt
lcall
in
jle
fwait
daa
mov
inc
dec
mov
es
sub
or
push
addr16
cld
jge
and
repz
fcmovb
imul
mov
pop
pop
adc
fwait
add
pusha
insl
jge
movsl
fisubl
es
sbb
into
sti
xchg
ja
call
fistps
test
data16
add
mov
fwait
mov
popa
loopne
mov
addr16
and
mov
jb
xor
push
dec
inc
pop
add
sbb
mov
or
mov
cmp
inc
outsb
lods
std
mov
mov
rcrb
aaa
xchg
sarl
lcall
ficoml
pop
iret
add
adc
leave
sbb
inc
fnsave
adc
sbb
cmp
cmp
xchg
mov
cmp
add
dec
xchg
jmp
dec
jge
jl
jp
sarb
cmp
mov
push
mov
or
mov
push
mov
imul
stos
add
cmp
out
shlb
int
pusha
xor
push
xor
mov
fistpll
arpl
mov
mov
add
mov
ret
aam
fidivrs
xchg
cld
lret
lret
xor
inc
xchg
xor
sub
inc
dec
cmp
xorb
jb
or
repz
mov
icebp
xchg
add
mov
adc
dec
xchg
lods
aad
test
cmpsl
push
or
iret
mov
arpl
add
add
mov
lds
fisttps
daa
and
lds
ljmp
test
jno
stc
rcrl
clc
mov
stc
mov
pop
sbb
setb
jmp
stos
add
std
int
stos
inc
fdivs
xor
mov
xor
inc
out
test
loope
fcmovnu
jne
add
aad
mov
test
dec
fistpl
add
stc
aas
fldenv
scas
rcll
jns
add
sahf
stos
fcompl
shlb
mov
and
pop
push
imul
mov
iret
rcrb
adc
and
mov
mov
ja
movsb
sbb
pusha
xor
pop
jmp
adc
imul
jae
out
fdiv
jns
shlb
pop
jge
xlat
and
sbb
mov
jb
or
and
dec
scas
nop
dec
push
es
cmp
mov
xchg
push
in
jecxz
stc
sbb
push
or
bound
cmpsl
xor
or
mov
filds
int3
fistpll
fiaddl
shll
mulb
mov
lea
nop
daa
repnz
loopne
cld
push
scas
out
sbb
push
jne
pushf
add
sbb
and
cmpl
in
iret
sub
push
insb
shlb
shll
adc
or
loope
aam
insl
shrl
cltd
lcall
lds
cmovge
pushf
lcall
call
jg
pushf
test
and
mov
jne
in
lods
and
dec
adcl
push
dec
pop
lret
push
je
adc
lock
paddsb
and
imul
cli
jns
test
push
fsub
bound
iret
xchg
cmpb
idivl
push
enter
add
arpl
or
pop
lea
movsb
cmp
xchg
sbb
lods
push
out
jae
shrl
dec
sub
dec
pop
jl
cld
in
sbb
ja
sbb
push
sahf
cmc
ret
xchg
fistps
pop
pop
pop
push
outsb
sbb
ret
mov
es
aas
dec
add
jno
hlt
adcb
mov
add
lods
xchg
inc
das
lds
cmp
fists
dec
inc
sub
push
stos
and
iret
and
xchg
mov
js
je
lret
ds
pop
add
jbe
inc
addr16
movsb
fistpll
inc
gs
adc
sub
cmp
adc
mov
cmp
je
movhlps
xchg
cmp
push
fadds
cmp
data16
and
and
stc
xchg
xchg
pop
imul
rcrl
mov
mov
ficoml
mov
pop
repz
sub
lds
mov
push
lods
mov
aas
mov
cmp
adc
clc
add
sbbl
push
cli
popf
popa
aaa
pop
sub
and
pop
sbb
jp
add
fidivl
cmp
inc
pop
push
roll
jno
sti
xchg
lock
mov
sbb
add
xadd
sub
pop
divb
scas
jns
mov
pop
push
mov
adc
clc
fwait
and
cwtl
sub
and
dec
dec
int3
jb
or
das
cmpsb
dec
xlat
push
in
mov
add
fisubs
hlt
cs
push
pop
mov
xor
or
cmp
jmp
or
out
cmp
inc
inc
xchg
mov
push
mov
int3
xchg
push
sbb
mov
sbb
dec
dec
das
repz
out
or
lds
scas
lock
or
pop
add
mov
xchg
test
dec
ret
adc
pop
daa
fcmovb
jbe
stc
pop
aaa
lds
test
out
cmpsb
outsb
std
sub
jp
cwtl
or
sti
sub
mov
adcb
sbb
inc
in
ljmp
mov
jmp
test
into
sahf
in
stos
cli
mov
adcl
dec
out
add
push
sub
enter
aad
dec
mov
jge
jnp
cltd
ja
add
and
gs
pop
mov
jecxz
jmp
mov
push
mov
fninit
jp
dec
lods
iret
jge
add
push
dec
mov
jmp
adc
addl
mov
jbe
repnz
add
jle
sub
frstor
add
gs
and
in
push
push
mov
in
pop
insl
sahf
and
jnp
lret
insb
clc
mov
lcall
xor
bound
xchg
mov
add
dec
aaa
addr16
jmp
fstpl
jo
xchg
std
sbb
stc
stos
dec
clc
add
and
inc
gs
jno
imul
and
inc
dec
inc
push
call
mov
ret
stos
jbe
int
aad
pop
push
ss
cld
test
loope
push
scas
pop
test
dec
push
pop
mov
jns
or
sub
hlt
es
mov
sahf
lahf
arpl
iret
mov
push
adc
sbb
pusha
sub
insb
mov
lods
mov
clc
inc
test
dec
int3
out
pop
pop
imul
cmp
out
push
sbb
cmc
gs
jl
mov
pop
mov
xorl
loope
insb
lea
pusha
push
scas
repz
mov
jecxz
or
push
inc
adc
jae
popa
cmp
pop
outsb
lods
fwait
mov
dec
jl
push
pop
cmp
dec
loopne
cltd
call
sub
cmpsb
push
fisttpl
or
push
flds
ficoms
jmp
or
ss
idivl
stos
pop
pop
dec
pop
add
dec
xchg
mov
mov
jg
push
mov
shl
adc
cmp
std
out
cmp
aam
lds
cmp
pop
push
xor
decl
mov
cmpsb
pop
stc
in
mov
aaa
pop
ret
outsb
insl
test
scas
cmp
je
sub
or
add
push
fbstp
pusha
adc
lahf
pop
xor
add
pop
push
xor
stos
mov
xchg
push
jl
mov
adc
dec
push
insl
mov
lock
adc
fs
adc
sahf
and
jnp
push
out
push
fnsave
stc
movsb
pop
xor
repnz
ret
jg
adc
jg
aas
outsb
sub
decb
pusha
scas
sbbl
push
sub
jb
cmp
push
test
stos
dec
and
sub
or
mov
jmp
and
sbb
lods
push
enter
inc
jmp
jge
cmp
pop
ljmp
out
test
ss
movsb
xchg
arpl
dec
sahf
and
out
dec
int3
dec
adc
imul
ret
ficoms
aam
pop
inc
mov
ljmp
iret
int3
inc
insl
rclb
fiaddl
repnz
cltd
mov
cltd
mov
fdivs
rolb
mov
mov
dec
cli
mov
int3
leave
dec
xor
call
cmc
dec
add
insl
jmp
insb
fidivrs
sub
mov
enter
lret
je
adc
push
jecxz
cmp
jo
call
stos
inc
push
sahf
insb
in
mov
sub
mov
clc
jp
xchg
mov
ds
xlat
loopne
cmpsb
cmpsl
pusha
es
sbb
ffreep
jp
pop
scas
std
dec
sbb
xlat
pop
mov
sbb
jg
push
or
xor
push
jbe
addr16
fcoml
aad
mov
fcmovu
jp
pushf
loopne
or
sub
cmp
push
outsb
lahf
lods
inc
rorl
inc
fildl
sub
mov
in
rcll
mov
ja
je
movsb
sub
push
sbb
inc
sti
push
jnp
subl
leave
pop
inc
les
hlt
or
int
mov
pop
icebp
nop
in
cmp
out
loope
push
mov
outsl
call
cmp
fisubs
addl
sbb
adc
pop
xchg
xchg
pop
ds
mov
dec
xor
sub
cs
in
xor
das
add
nop
mov
xchg
inc
pop
lods
lahf
mov
sbbb
cmp
pop
leave
xchg
mov
pop
aaa
ds
shl
pop
stos
mov
pop
jge
mov
in
cmp
pop
push
lret
pop
inc
daa
stos
xchg
jl
je
add
mov
les
push
call
xchg
iret
mov
mov
inc
sti
stos
mov
subl
dec
jp
jecxz
in
pushf
aad
dec
dec
dec
sub
inc
dec
xor
aad
sub
aaa
pop
push
adc
data16
mov
sbb
popf
mov
mov
loope
fsubrs
test
add
ret
mov
cmp
aad
pop
mov
cmp
push
imul
dec
push
mov
ljmp
outsl
push
mov
push
sub
sub
rcrb
cmp
sti
push
adc
aas
add
fnstenv
es
inc
mov
cmp
jne
and
shr
cmp
out
cmp
ret
in
mov
icebp
test
xchg
add
dec
cmpsl
mov
fldcw
sbb
mov
icebp
xchg
sub
mov
jne
cmp
inc
in
in
test
or
enter
imul
loopne
inc
test
pop
push
push
addb
lock
adc
or
xor
dec
inc
jb
lods
ljmp
fistpll
imul
movaps
out
cmp
push
sub
repnz
shl
jle
xlat
push
sti
test
push
mov
jmp
pop
mov
adc
sub
icebp
fbstp
sahf
sbb
sbb
inc
or
loope
cmpsl
push
push
and
inc
popa
inc
loop
ja
fs
int3
sbb
sti
dec
int3
cmp
lcall
jb
xchg
pop
push
dec
and
lahf
stos
shlb
lods
add
cmp
stos
cli
mov
pop
mov
sub
push
inc
cmc
dec
loop
pop
xor
iret
imul
push
aaa
fidivrl
pop
lret
ret
jno
js
clc
fdivp
imul
cmpsl
adc
gs
jne
or
sub
or
dec
xor
loope
fstpt
cmp
xchg
out
push
sahf
nop
mov
push
jmp
or
jno
movsl
mov
fcomp
hlt
fimull
stos
inc
scas
je
xor
sub
push
aaa
add
in
fcomip
adc
mov
enter
or
push
push
mov
movsl
lahf
add
loop
jge
jbe
movsl
sahf
add
imul
xor
jae
xor
pusha
adcb
jnp
xchg
jae
into
je
pop
roll
fstpl
les
sbb
mov
movsb
les
lds
sbbb
pushf
add
jmp
sarl
inc
stos
jl
mov
lret
and
xchg
xor
or
inc
shlw
rep
cmpsl
jnp
mov
and
jle
push
or
pop
cltd
jns
repnz
loop
or
jg
xor
pop
negb
sti
lods
rcrl
add
les
stos
enter
dec
dec
and
jmp
and
sub
aam
fdivrl
loopne
jnp
or
frstor
aaa
into
shl
test
aas
lods
jmp
inc
lcall
inc
fidivl
test
dec
lds
push
rcrb
dec
call
cmp
sbb
xchg
jne
movsb
nop
sbb
add
mov
loop
daa
jne
mov
jge
inc
into
fidivl
je
daa
push
call
mov
inc
cmp
adc
les
pop
cmp
add
scas
mov
mov
xchg
sub
fldenv
int
add
fs
outsl
inc
jle
xchg
daa
xor
add
aad
ja
dec
mov
mov
std
and
or
add
jns
sub
nop
scas
jbe
outsb
jle
je
xchg
sahf
inc
shll
in
jecxz
std
push
addr16
leave
test
addb
sbb
mov
or
out
sbb
faddl
test
adc
cmp
into
sbb
lahf
push
add
ss
push
in
xchg
jecxz
mov
clc
das
insl
xchg
jns
lret
aas
mov
fwait
push
imul
movsl
lcall
xor
loop
sub
nop
ds
std
nop
adc
dec
add
lock
jg
bound
jle
test
xchg
xor
inc
push
adc
or
cmp
imul
jns
movsl
add
push
mov
xchg
xchg
add
ljmp
inc
loope
icebp
push
addb
arpl
int
or
aaa
sub
mov
test
mov
in
loop
adc
add
jg
ret
sbb
and
ljmp
loop
stos
pop
aaa
pop
cmp
mov
repnz
dec
daa
lock
inc
cmp
cmpsl
pushf
sahf
mov
js
aam
inc
add
dec
inc
mov
adc
sbb
push
sti
mov
adc
and
or
pusha
shll
ss
test
inc
push
sahf
data16
je
popf
push
mov
dec
negl
icebp
leave
jmp
fsubr
rcrb
decb
nop
and
inc
pop
lret
and
push
mov
dec
sub
popa
add
dec
fwait
push
int3
dec
cmc
cmp
xlat
xlat
sbb
or
push
cmp
cmp
dec
test
popa
adc
xor
dec
shr
or
adc
adc
adc
mov
dec
lock
adc
push
inc
sbb
pushf
fnsave
setle
and
decb
mov
push
cltd
mov
fidivrl
add
daa
ret
pop
fbstp
push
mov
inc
pop
pop
xchg
push
call
cmpb
mov
sbb
push
ds
push
jmp
xchg
sub
stos
sbb
es
push
popa
jns
push
movsb
dec
xchg
out
or
scas
and
xchg
lods
and
or
test
cld
ljmp
xchg
shr
inc
pop
inc
add
mov
mov
xor
fiadds
jmp
scas
loop
push
adcb
clc
dec
sarl
mov
jge
call
or
jl
ret
xor
pop
jg
adc
jmp
or
shll
lds
lret
sti
ror
sahf
mov
ljmp
rcrb
ljmp
lock
jle
bound
adcb
mov
xor
stos
jae
call
icebp
ds
xor
in
test
cli
add
enter
sub
push
sbbl
insb
cmp
jle
mov
xchg
dec
xchg
pushl
je
outsl
aad
shlb
push
mov
out
mov
shlb
push
icebp
xlat
cmpsb
jo
pop
test
into
mov
cmp
pop
out
jle
dec
sarb
xchg
es
jns
cli
push
cld
xchg
dec
adc
pop
aam
orb
pop
adc
or
mov
inc
loop
xchg
call
lea
insl
js
mov
jae
xor
je
scas
lds
rol
repz
or
ret
jne
loope
sbb
inc
dec
cmp
jge
inc
lods
pop
loope
loope
cmp
xor
lods
sbb
fisubs
repnz
inc
dec
add
dec
jno
xchg
lret
mov
imulb
fdivrs
stos
scas
je
lods
dec
inc
negb
daa
fisubs
push
adc
int3
in
mov
or
test
mov
push
jp
lret
das
pop
scas
pop
sahf
xlat
mov
xor
jne
fldcw
mov
cli
push
jbe
mov
mov
int3
mov
out
test
dec
cmp
scas
stos
dec
or
cltd
cmp
mov
gs
incl
nop
in
dec
test
sahf
xor
mov
mov
and
scas
push
sbb
dec
and
mov
or
cmp
fidivrs
push
inc
stos
fsubr
pushf
out
mov
fisubrl
pop
sbb
lahf
push
nop
add
jmp
lea
xlat
mov
xor
out
push
mov
cs
pop
insb
int3
jle
or
push
and
dec
adc
mov
jno
add
sub
and
insb
fists
shl
adc
add
push
iret
and
xchg
jmp
repnz
and
adc
stos
inc
push
sbb
arpl
data16
jno
clc
icebp
into
imul
mov
in
adc
xchg
xor
jmp
and
out
dec
jnp
mov
mov
cmp
push
das
fsubrl
popf
arpl
dec
pop
pusha
nop
mov
inc
mov
pusha
andb
lods
subb
mov
xor
inc
cmp
addl
xchg
push
mov
int3
std
lods
add
frstor
daa
pop
loop
inc
mov
sub
cmpsl
lods
dec
fwait
mov
enter
jnp
fidivs
push
addr16
jne
insb
inc
or
insl
hlt
cmp
add
gs
repz
popf
dec
les
ljmp
add
pop
cwtl
or
inc
aas
leave
sub
gs
pushf
dec
pop
dec
sub
sbbl
push
push
popf
inc
mov
and
fwait
push
pop
repnz
mov
divps
mov
cli
xchg
xor
push
sbb
mov
mov
rorb
adc
push
popf
js
ret
xlat
popf
mov
aam
dec
testl
xlat
sbb
call
sbb
lods
add
ja
test
fisubrs
jmp
lret
lret
lcall
rcrl
mov
lods
outsb
cli
xor
nop
movsb
mov
rcrb
jmp
pop
imul
jmp
add
js
pop
test
imul
aaa
das
dec
or
lea
in
mov
mov
repz
dec
or
mov
push
sti
add
dec
imul
sub
cmc
data16
sbb
cmp
mov
dec
rorl
add
jle
push
cmc
push
ss
xchg
cld
in
sti
movsb
testl
cli
mov
push
add
stc
popf
jl
jae
repnz
mov
loope
lret
lret
lods
sbb
cmp
dec
mov
je
adc
jo
lret
jae
mull
push
andb
push
stos
in
push
inc
fs
insb
and
es
mov
test
jnp
das
icebp
ficoml
push
lret
cmc
dec
mov
outsb
jbe
test
cmpsb
xor
adc
push
inc
pop
test
push
clc
push
inc
push
add
ja
scas
mov
adc
xor
rol
add
ret
daa
push
test
cmp
sub
and
mov
mov
mov
inc
bound
push
and
outsl
jnp
and
add
xchg
push
in
or
pop
popa
or
mov
xchg
ficompl
sbb
xchg
jae
popf
push
jl
inc
xor
jno
add
pushf
add
push
mov
fsubl
pusha
inc
movb
fisubs
fmul
pop
repnz
nop
lahf
dec
mov
lods
imul
sub
filds
sub
pop
lahf
sarl
pop
pop
out
adc
push
call
aas
mov
dec
ret
xchg
pop
or
mov
aam
push
and
push
xorl
adc
inc
rcll
sbb
jg
imulb
inc
cmp
pop
dec
jo
and
jb
xlat
pop
daa
pop
mov
lret
xchg
push
sarl
out
dec
enter
pop
push
push
mov
cld
xchg
lods
rclb
push
cmp
dec
out
into
pop
jge
lods
fistl
fdivrs
stc
and
cmp
push
lret
iret
xor
outsl
psubsw
or
stos
inc
cmpsb
xchg
mov
push
push
decl
jb
fisubrs
in
mov
ljmp
popf
icebp
hlt
scas
and
cltd
xlat
push
mov
adc
scas
imulb
lea
sub
mov
sbb
mov
jle
dec
jno
jmp
adc
mov
fstpt
xchg
lods
out
test
sbb
jmp
ljmp
sub
gs
inc
cmp
xor
in
subl
or
iret
xlat
test
jnp
cmpsb
out
cmpsl
mov
loope,pn
fbstp
add
fdivrs
cmp
push
les
or
mov
inc
push
pop
mov
lret
jle
cmp
dec
bound
scas
mov
fwait
cltd
mov
cmpb
dec
mull
mov
mov
enter
pop
mov
std
std
push
testb
test
jae
cmpb
adc
nop
mov
cmpl
and
sub
mov
jo
or
jge
stos
mulb
stc
je
sbb
ret
cmpsl
push
out
sbb
ret
jcxz,pn
les
dec
sub
in
and
cmp
inc
popf
mov
imul
inc
repnz
ficomps
lcall
push
or
loop
inc
rorl
clc
and
sbb
pop
add
inc
dec
daa
jmp
insb
nop
mov
daa
jl
xor
adc
pop
aaa
add
pushf
xor
dec
div
pop
push
mov
ss
pushf
ret
ljmp
scas
pusha
sub
rcl
mov
insb
mov
mov
mov
cmp
fndisi(8087
mov
shlb
mov
ret
mov
inc
jne
sarb
cltd
mov
cmpsl
out
mov
fs
push
pop
bound
jb
stc
loop
adc
call
aas
out
cmpsl
cmc
insb
jne
mov
dec
xchg
add
push
and
inc
add
into
cmp
inc
push
push
inc
push
mov
das
cmpsb
movd
sub
fstpl
rolb
icebp
mov
push
nop
push
fstpt
xchg
in
int
rcrl
push
sti
insb
into
gs
cld
cmp
jmp
sub
dec
add
push
aaa
pop
lock
pop
xchg
xchg
add
enter
cmp
cli
pushf
jo
sub
popf
negb
jno
cmp
mov
adc
sub
into
fsubl
negl
mov
addr16
mov
mov
adc
lock
xor
xor
mov
cmp
jb
sbb
fidivrl
sbb
xor
dec
jp
fiaddl
es
push
mov
and
sbb
push
push
fidivl
popa
adc
sub
mov
pop
mov
jae
popf
pusha
dec
pop
roll
cmpsb
ja
clc
js
imul
daa
outsl
sbb
jns
ja
insl
cmp
repz
test
hlt
je
sahf
leave
out
mov
or
jne
loop
pop
fisttpll
ss
cmp
or
jmp
sbb
ret
in
aaa
mov
push
insb
mov
fldenv
sbb
mov
jbe
ficompl
mov
mov
test
dec
dec
xchg
jnp
pushf
jo
cmp
mov
inc
jl
idivb
mov
adc
mov
push
mov
pop
xlat
jmp
ret
mov
or
imul
call
add
mov
pop
mov
xchg
xlat
mov
cmp
xor
mov
je
ror
and
mov
mov
and
ror
jo
scas
mov
xchg
cmpsl
jbe
mov
push
push
jb
icebp
sub
hlt
int
arpl
sub
push
jg
pop
adcb
dec
sbb
jl
sub
out
imull
imul
loop
int3
sbb
jae
xchg
addr16
inc
pushf
enter
sbbl
fnstsw
adc
testl
push
sti
mov
ljmp
mov
xor
cltd
or
cli
pushf
aaa
mov
arpl
nop
mov
cmp
lock
cmpsl
js
negl
dec
in
xor
out
adc
xchg
push
outsb
sbb
adcb
xchg
xor
cmp
sbb
hlt
mov
lods
or
addl
mov
add
push
cltd
das
jmp
rcrb
mov
sbb
add
in
mov
dec
fucomi
stos
inc
in
or
cltd
or
mov
dec
lods
jle
ljmp
xchg
jns
sub
icebp
or
stc
lods
jne
mov
adc
jbe
sbb
sbb
cli
pop
std
adc
jb
fldenv
sarb
cmp
in
jge
or
add
push
sub
dec
icebp
fs
insl
fld
aad
bound
movsb
jmp
xor
add
lods
sbb
cmp
shlb
pop
call
push
out
xor
ja
sbb
outsl
pushf
sub
push
push
int
fxch
fdiv
fmul
cmpsb
jg
icebp
mov
add
mov
xchg
test
sbb
push
adc
call
sub
dec
pushf
push
xchg
dec
popf
int
push
adc
gs
push
or
pop
pop
jbe
scas
add
out
imul
aam
dec
repz
insb
adc
or
mov
adc
icebp
aad
stc
pop
imul
jmp
cmpsb
cmp
or
outsb
aaa
add
shll
jl
dec
aaa
mov
xchg
xchg
or
pop
rcl
mov
repnz
cli
cmpsl
xchg
scas
lahf
inc
lret
lcall
dec
adc
add
jecxz
sub
in
sahf
imul
xor
movsb
test
cwtl
dec
sub
leave
push
push
mov
mov
test
mov
pop
sub
out
and
scas
mov
xchg
sbb
ss
mov
shlb
icebp
movsl
sahf
xchg
enter
cmp
dec
xchg
pop
vmovups
pop
jg
fisubs
mull
dec
cmp
popf
push
aas
ret
pop
rorb
outsb
cmc
icebp
in
adc
sbb
and
push
call
fidivs
sahf
insb
push
add
outsl
pop
cli
push
adc
pop
ljmp
push
jmp
nop
inc
mov
and
push
test
push
jae
mov
sub
mov
or
adc
int
xor
insl
push
ljmp
fadds
hlt
inc
dec
addr16
fcmovnbe
in
lea
repz
xchg
ret
std
cli
mov
aas
pop
and
add
xchg
jl
sub
loop
and
inc
mov
lret
cmc
cmp
xor
pop
mov
notb
gs
into
push
mov
and
jns
add
js
pusha
adc
xchg
pusha
dec
and
ljmp
scas
and
push
aam
outsb
and
sarl
xchg
ret
ds
insb
fisttpll
inc
cmp
insl
icebp
shl
and
lahf
or
xor
in
jne
call
inc
idivl
imul
jnp
and
pop
rclb
pop
imul
shlb
adc
jl
ret
insl
xor
lahf
xor
popf
sbb
leave
mov
sub
cmc
inc
adc
xchg
scas
loopne
mov
in
xchg
cmc
inc
push
mov
jge
sub
mov
out
push
sti
pusha
or
jne
subl
cltd
jb
stc
rol
push
dec
sub
jmp
fbld
pusha
fidivl
cs
xchg
push
xorl
cmp
pushf
xlat
pop
ds
lcall
xor
xchg
stc
sub
xchg
sahf
xchg
ja
mov
dec
pop
mov
int3
fidivs
loope
je
sti
xchg
repz
mov
ljmp
cmc
data16
or
dec
sub
mov
sbb
lahf
sbb
out
in
movsl
icebp
scas
dec
add
popf
add
xchg
repnz
and
adc
or
add
and
sbb
jbe
call
lds
xchg
in
stos
jecxz
shrl
add
es
loop
lods
inc
sbb
mov
cmpl
ljmp
lea
lahf
mov
mov
sbbl
pushf
popf
mov
or
lock
mov
dec
test
arpl
pop
mov
fsubr
push
je
insb
cmpsb
xor
lret
lahf
divl
cmp
push
out
pop
lcall
enter
addr16
sahf
xor
xorb
in
pop
xor
mov
roll
fistpl
popa
sarb
cli
adc
dec
sub
cli
es
rorl
gs
mov
adc
repnz
mov
aam
dec
cmp
dec
mov
cmpsl
inc
jo
std
test
sub
jnp
pop
dec
adc
lahf
out
xor
jae
pusha
mov
loopne
inc
call
mov
outsb
jl
out
dec
in
jnp
mov
xor
jmp
adc
sub
icebp
cmp
aas
jne
into
subl
mov
mov
enter
xchg
cmp
gs
or
xor
in
stos
fnstsw
mov
insb
lea
sbb
cmpsl
mov
jg
adc
leave
test
mov
loopne
cmc
out
repz
test
movsl
mov
loope
mov
enter
fstpt
movsb
mov
mov
xchg
lds
icebp
mov
imul
icebp
push
loop
jb
xchg
push
sbb
out
xchg
es
xchg
fcoms
aam
jne
lods
xor
mov
jnp
test
loop
add
dec
adc
add
push
xchg
and
sub
inc
push
xlat
dec
push
adc
jae
jns
nop
inc
popa
xchg
arpl
fwait
sub
add
andb
pop
add
xchg
pop
testb
cvtdq2ps
jge
push
and
jge
sti
stos
in
sub
sub
roll
loop
sahf
jno
fstpt
in
mov
jg
insl
sbb
or
call
pop
out
cli
sar
inc
fnstcw
fisubs
jge
repnz
ja
xchg
xor
out
dec
or
repnz
lahf
cmp
jne
les
pushf
adc
rorl
cmp
mov
in
add
in
push
adc
sahf
push
into
rorl
jnp
mov
ja
sbb
gs
mov
pop
jg
push
dec
xchg
sub
rcrl
clc
mov
notl
xor
adc
add
push
cli
or
arpl
sbb
or
jo
aam
xor
xchg
xor
sub
pop
sub
int
popl
jecxz
cmp
inc
out
pop
dec
fdivs
in
cmp
or
es
mov
mov
jbe
mov
or
dec
push
add
movsl
shll
or
in
xchg
sbb
sub
mov
in
push
pop
dec
push
sub
gs
push
pop
and
jnp
push
daa
and
sti
jbe
sbb
ds
sub
adc
cmp
sbb
stos
pop
mov
xor
mov
into
aas
hlt
xor
gs
sarl
lea
dec
xor
jp
jl
push
mov
loope
xor
stos
mov
cmp
mov
mov
cmp
call
sarl
in
lcall
push
aad
adc
aam
xchg
outsb
xor
imul
nop
push
and
mov
aas
xchg
lock
jge
adc
test
cwtl
xor
add
mov
call
xchg
xchg
mov
leave
push
pop
and
lea
xor
mov
add
outsb
dec
adc
mov
xchg
mov
xchg
mov
or
dec
stc
push
imul
fimull
add
jp
jne
addr16
je
jne
inc
pop
ja
ljmp
shr
push
fs
into
jbe
fnstsw
dec
add
loop
inc
sub
fsubrp
mov
xchg
icebp
mov
inc
push
fs
mul
or
or
or
sub
mov
pop
mov
aas
loope
cmp
cmc
shll
or
cmpsl
pop
jle
or
js
lock
jecxz
movsl
xchg
pop
or
jb
js
popf
xor
cltd
sbb
sbb
jb
adc
mov
out
jns
add
lods
enter
ljmp
movsb
pop
ret
bound
call
pop
mov
cmpsl
push
and
cmp
icebp
mov
pop
scas
adc
cmc
xchg
push
call
push
push
stos
bnd
and
mov
add
out
xchg
shr
dec
add
popa
dec
test
sti
mov
push
hlt
add
lods
shrl
fisubl
fsubs
arpl
adc
and
cmp
mov
out
inc
mov
pop
cmc
mov
test
push
and
adc
push
adc
mov
dec
cmpsl
fnstsw
mov
cli
pop
add
sbbb
add
dec
cmpsl
incl
mov
xlat
xor
enter
mov
fcmovnu
hlt
add
es
pusha
or
inc
test
xchg
scas
mov
call
movsl
fldenv
push
adc
daa
push
mov
pop
into
mov
dec
sub
pop
sub
inc
cwtl
test
fldcw
mov
pushf
jo
dec
mov
gs
idivl
fs
cmp
into
arpl
cmp
dec
sarb
pop
loop
cmp
or
rolb
lea
test
hlt
xchg
inc
xchg
and
push
movsl
stos
inc
push
loope
jne
xchg
cmpsl
in
fcoml
hlt
fidivl
sbb
inc
pop
adc
sbb
mov
enter
add
call
test
pop
cmpsb
fmul
inc
fisubrl
jbe
xchg
dec
popa
jg
cmp
outsl
decb
push
ljmp
adc
call
cmp
or
ret
push
jmp
dec
out
or
ret
insl
mov
dec
in
mov
in
aam
cmp
test
add
lahf
fs
push
inc
ljmp
arpl
xchg
xchg
adcb
es
add
cltd
and
int3
ret
cs
dec
cwtl
sub
in
fs
mov
lock
fsts
das
jecxz
cmp
lock
ret
sbb
ret
mov
aad
addl
pop
dec
mov
mulb
cmp
cmc
or
icebp
adcl
sub
out
or
adc
pusha
fnsave
std
scas
mov
dec
mov
jmp
adc
or
ret
rcl
das
shlb
popf
data16
pop
loop
in
test
test
mov
jp
mov
inc
lock
mov
xor
aad
mov
sahf
pop
ret
and
out
mov
or
pop
mov
aaa
lret
into
popa
fldpi
jp
inc
inc
inc
jg
push
pushf
out
mov
mov
stos
inc
or
sub
mov
inc
and
push
xchg
negb
and
mov
pop
lret
addl
adc
ja
psllq
scas
nop
inc
aaa
push
dec
xchg
jg
aam
xchg
call
outsl
cs
dec
inc
int
xor
ret
rorl
popa
and
mov
mov
xchg
jnp
inc
push
cmpsb
inc
fnstenv
test
int3
mov
adc
scas
xchg
mov
scas
imul
leave
int
leave
or
cmp
lods
outsl
jno
cld
xchg
sbb
pushf
adc
xchg
sub
or
hlt
cmp
sbb
les
mov
popa
es
dec
sbb
fisubl
cmp
and
divl
sarb
dec
sub
daa
das
daa
inc
pop
into
push
sbb
scas
cmp
mov
mov
sbb
xchg
mov
ret
in
dec
mov
dec
ds
popa
out
inc
test
mov
sbb
test
xor
mov
jmp
inc
in
xchg
stc
dec
fwait
jne
sbb
or
push
mov
loope
adc
xchg
pushf
daa
push
ss
cld
jecxz
xchg
dec
ret
mov
inc
jae
pop
jb
aas
fdivs
mov
mov
cld
cmpsl
arpl
mov
push
or
jne
adc
xchg
fwait
sti
pop
pop
adc
decl
popa
out
sbb
popf
mov
dec
in
and
push
adc
and
fldt
jns
xor
add
push
fnstsw
mov
sub
les
and
in
ret
jae
sbb
fmuls
xchg
fistpll
loope
lcall
xor
lcall
icebp
jo
aas
in
pushf
mov
bound
mov
or
fmuls
rorb
bound
out
push
std
sti
call
sub
fucompp
sti
dec
pushf
cmc
sti
sbb
push
dec
xor
cmp
iret
mov
push
les
cmp
cmp
mov
inc
fs
inc
mov
fdivrl
mov
int
sbb
lcall
test
mov
fwait
mov
loop
gs
ljmp
pop
fldt
pushl
lret
out
or
mov
sub
insl
data16
fcmovnb
inc
and
and
iret
inc
popa
add
and
dec
in
jg
jno
dec
dec
xlat
jo
adc
and
repz
jne
sub
push
loopne
mov
inc
sub
add
insb
jo
aam
popa
push
sbb
xorb
mov
add
call
sub
cmp
arpl
sub
cmovl
jnp
sahf
sub
loopne
int
je
imul
rclb
jle
jns
andl
adc
lcall
and
hlt
mov
push
xor
mov
xchg
insl
out
cld
imul
sub
pop
mov
mov
mov
scas
xchg
inc
fs
int3
or
outsb
clc
sbb
or
out
sbb
and
aas
pop
rcll
int3
pop
push
cltd
add
xor
xchg
push
loopne
clc
cmp
or
xchg
js
xor
clc
dec
movsl
jb
out
rol
push
push
add
ss
sbb
jp
loop
rcrb
inc
pop
sbb
or
xor
sub
call
mov
adc
xor
push
ja
rorl
ljmp
stos
fnstcw
bound
insb
iret
out
ficoml
sub
cltd
repnz
mov
pop
adc
push
daa
jmp
lahf
mov
enter
pop
imul
cs
pop
test
mov
loopne
repnz
cmp
insb
jle
pop
loope
dec
cmc
cmp
jecxz
stos
adc
jae
xor
add
xchg
movsl
or
mov
pop
mov
repz
mov
sub
rcrl
dec
call
mov
popf
in
movsb
stos
jle
mov
out
jge
mov
inc
in
xchg
lcall
push
inc
push
lret
fs
pop
lret
daa
stos
dec
and
cmp
push
jge
out
pushf
dec
pop
xchg
xor
cmp
sarl
cmc
add
pop
loope
or
setnp
pop
mov
inc
and
mov
cs
push
fidivrl
cmp
aaa
dec
leave
pop
repnz
imul
sarb
xchg
icebp
in
adc
inc
dec
les
xchg
pushf
mov
cmpsb
mov
cmc
loope
xchg
lods
mov
sub
shlb
cli
sub
movsb
dec
push
dec
outsl
dec
xchg
adc
cmp
insb
mov
pop
aad
jmp
lods
xor
lcall
js
imul
icebp
sarb
rol
mov
or
insl
mov
in
lods
jg
jo
ja
xchg
movsb
inc
lahf
mov
std
sub
fs
gs
or
mov
mov
movsl
cmp
aad
sub
aas
and
lret
repnz
cltd
add
inc
dec
sbb
cmp
out
lock
add
cmp
imul
dec
cmp
adc
jns
and
adc
pop
adc
jbe
test
call
mov
push
fsubrl
fmull
mov
lods
adc
shrb
push
jmp
push
pushf
bound
lret
int
mov
popf
out
pop
push
mov
cmp
movsb
inc
mov
adc
adcb
scas
or
imul
sbb
mov
or
xchg
sbbb
out
cmpsl
xchg
add
aaa
mov
loopne
rorl
push
outsl
les
aas
or
adc
fldcw
and
sti
pop
std
inc
enter
int
pop
fs
or
cs
inc
sub
jnp
stos
in
push
in
push
out
jl
arpl
sbb
jge
and
xchg
push
test
ret
ret
push
bound
testb
fst
and
loopne
stos
pusha
cmpsl
mov
mov
add
arpl
lahf
arpl
add
and
adc
jae
sarl
data16
sbb
mov
mov
cmp
pop
xchg
gs
arpl
mov
loop
xchg
pop
mov
lahf
inc
mov
daa
adc
jbe
mov
xchg
loope
test
mov
add
int3
sbb
sub
mov
or
out
popf
add
daa
cli
lods
inc
xor
gs
pop
fsubs
mov
cmpsb
push
jmp
jno
mov
orl
mov
clc
bound
lret
mov
adc
inc
xor
ss
xchg
lea
jp
mov
sahf
or
add
mov
stos
lods
or
lldt
sbb
ljmp
inc
aaa
jl
js
icebp
cltd
push
xchg
mov
scas
mulb
icebp
imul
sbb
dec
inc
adcb
adc
lods
orb
cli
dec
addr16
das
cli
test
pop
shll
enter
cmpsl
imul
and
pop
pop
jae
mov
in
jnp
sbb
add
imul
inc
push
fimull
mov
cmp
leave
and
imul
je
add
es
sbb
adc
mov
mov
pop
cmp
outsb
rcr
add
mov
mov
fldt
jle
or
mov
stc
push
mov
xor
iret
data16
idivl
pop
inc
and
aas
push
jmp
insl
cs
xchg
or
call
adc
xchg
scas
outsb
sbbb
dec
cmp
cmp
in
test
sti
cmp
inc
jno
lret
mov
jle
jge
lahf
out
das
icebp
movsl
add
mov
add
xchg
push
sub
sbb
inc
fdivl
cmp
mov
mov
cmp
inc
fcmovbe
sti
sub
push
pop
adc
call
add
push
xor
ljmp
icebp
mov
jbe
jle
sub
sbb
aad
push
jo
shlb
adc
or
cmp
das
sar
aam
push
xchg
test
sub
fistps
pop
xchg
test
push
in
ss
dec
push
cld
xor
maxps
imul
sub
fildl
pusha
mov
push
jno
jne
pushf
out
fimull
dec
addr16
frstor
sub
pop
push
incb
aam
jecxz
mov
dec
mov
push
cmpsb
fistps
mov
push
aam
cmp
push
cmpsb
xor
mov
fistps
outsb
adc
or
loope
sbb
repnz
push
push
bound
inc
sbb
jecxz
les
addr16
fbstp
and
xchg
xor
inc
push
and
mov
jbe
out
xchg
sub
cmp
out
and
lcall
mov
mov
push
stos
add
loopne
cs
loop
gs
movsl
add
xchg
decl
fwait
loope
push
mov
dec
lret
and
stos
cli
xor
das
addr16
jp
push
mov
imul
sbb
lahf
cmp
icebp
divl
je
stos
mov
lods
je
pop
in
cmp
inc
jecxz
in
dec
mov
jecxz
loope
inc
and
aad
pop
pop
xchg
jae
sub
mov
xchg
enter
inc
js
stc
addr16
adc
leave
push
int
inc
inc
mov
gs
xchg
xchg
add
repnz
idivl
cld
push
xor
lods
cmp
aad
mov
testb
mul
rclb
test
shlb
push
cltd
enter
call
cmp
cmpsl
in
cs
into
fimuls
pop
add
mov
push
fsts
test
hlt
cli
hlt
stos
sbb
pop
inc
es
add
andl
jp
push
cmc
mov
push
imul
jmp
imul
cld
jl
jno
inc
mov
xor
mov
imul
xor
test
inc
call
sub
inc
mov
repnz
rclb
add
or
mov
sbb
out
jg
ret
add
jnp
jno
insl
sub
xchg
aas
cmc
fistpll
fcmovnu
inc
push
sub
push
adc
jmp
sbb
shrl
ret
push
mov
xchg
sbb
sbb
pushf
js
iret
pop
cmp
or
scas
pusha
inc
xlat
test
out
int
pop
aad
popa
sub
insb
in
add
ucomiss
testb
fistpl
rcrb
negl
add
ds
mov
jnp
jnp
fwait
or
or
mov
mov
xlat
jnp
repz
in
and
sbb
loope
gs
pop
out
push
lret
jnp
mov
inc
adc
insb
test
cmpsb
mov
sbbl
test
jnp
std
aad
outsl
jg
cltd
scas
imul
and
test
jo
xor
bound
xlat
aas
or
adc
sbb
lret
cmp
xor
iret
stos
out
out
or
xchg
sbb
jne
pop
cmp
jmp
mov
cmp
mov
in
repnz
daa
mov
mov
bound
jnp
out
mov
mov
stos
popa
jo
jmp
inc
cmpsl
xor
nop
dec
data16
jle
mov
pop
dec
cli
bswap
lret
and
jl
pop
push
shl
xor
sub
push
test
add
fs
mov
lods
std
rolb
and
stc
sub
in
xchg
or
sub
push
inc
fcmovne
cmp
mov
in
cmp
test
xor
nop
sbb
pop
jae
mov
or
fstpt
pop
insb
mov
mov
and
adc
xchg
std
adc
pop
popa
pop
push
sbb
cmp
jp
out
sub
and
insl
cmp
loopne
leave
xchg
enter
xor
call
or
call
in
lds
cwtl
cli
pop
fildll
orb
jb
adcl
aaa
fwait
mov
in
dec
out
adc
mov
xchg
sub
mov
aas
mov
test
lods
or
sub
sub
arpl
je
push
xor
rorb
iret
ss
outsb
and
clc
push
mov
notl
xchg
or
cmpsl
push
mov
lods
dec
es
je
ficomps
popf
shl
xchg
out
xchg
arpl
xor
hlt
fsubr
xor
jnp
lods
cmc
inc
popw
inc
lods
mov
mov
mov
push
mov
repnz
dec
pop
aaa
mov
cli
ss
push
xchg
fisubs
int
mov
fs
out
jns
adc
pop
lods
nop
scas
ds
dec
xchg
add
inc
pop
adc
mov
sbb
stos
cli
sbb
xchg
nop
fucomip
cli
adc
inc
sarb
inc
and
jo
stos
inc
jbe
xchg
leave
daa
scas
fnstsw
std
xchg
out
test
or
cmp
xchg
add
repz
into
mov
jae
jle
daa
aad
inc
mov
test
es
push
cmp
mov
adc
adc
mov
test
ljmp
xor
shrl
cmp
imul
mov
xchg
rol
or
lea
in
sub
sub
xchg
in
out
lahf
jecxz
mov
loopne
cmp
jecxz
bound
mov
movsl
cmp
xchg
pop
inc
fimuls
add
js
fcoms
cmp
cmpsl
and
fwait
xor
lahf
ss
aad
cltd
cmp
jb
loopne
ja
pop
icebp
les
sbb
mov
push
jg
and
add
in
cld
cmpsb
xor
inc
mov
xchg
insl
mov
jb
lods
cltd
sub
andl
fdivrs
es
mov
shll
add
movsl
push
mov
jp
jb
imul
and
xor
aas
add
lds
mov
out
cwtl
pop
mov
outsb
stos
cld
pop
loope
inc
mov
xchg
push
lea
xchg
mov
mov
popa
inc
gs
add
addb
inc
fildll
in
popa
inc
ja
xor
or
gs
adc
push
ss
inc
cmpsb
bound
lret
or
jo
daa
lcall
cs
lret
fsubp
pushf
inc
aam
mov
mov
popf
movsl
shlb
push
pop
jbe
mov
adc
clc
cwtl
das
xchg
ds
popa
jns
popf
rcr
je
mov
cmpsb
jp
push
inc
push
sbb
push
inc
jg
xorb
lret
fwait
test
jmp
ja
gs
movsl
icebp
lcall
pop
lahf
sbb
pusha
int
mov
roll
inc
test
mov
das
int3
dec
mov
ljmp
pshufw
sbb
xchg
pop
xor
and
pop
call
jb
addr16
mov
in
fidivl
mov
iret
sbb
hlt
test
jns
sbb
adcl
das
inc
cltd
aad
jae
repz
outsl
jmp
cmp
push
push
mov
adc
jg
adc
insb
es
dec
imul
lahf
test
mov
ljmp
daa
mov
rclb
test
mov
dec
xor
pop
jge
std
or
movsb
aas
inc
cmpsb
cmp
test
int3
bound
dec
shrl
ss
scas
out
or
adc
das
cmp
fisubs
lret
imul
jae
mov
push
jmp
mov
lret
cld
cmp
ljmp
addl
add
in
mov
and
sub
pop
sbb
jae
dec
mov
addr16
repnz
jp
lret
jb
into
and
pushf
inc
scas
stos
xchg
inc
lods
ret
mov
lods
neg
jp
pop
hlt
testb
cmp
cmp
add
xchg
imul
ret
shrb
popf
pop
outsb
loop
outsl
sbbb
in
mov
mov
mov
xor
dec
shrb
xchg
lods
test
mov
lahf
repnz
bound
xchg
mov
popf
jmp
test
fildl
sahf
or
xchg
sbb
or
shlb
mov
leave
fs
jle
mov
dec
ret
bound
add
into
pop
jo
cmp
shlb
arpl
xchg
add
es
pop
sbb
aas
dec
jl
push
xor
cmp
and
outsb
add
lods
les
push
movsb
out
popf
push
movsl
je
aaa
cmpsl
mov
clc
mov
pop
jnp
or
int
loope
inc
addr16
cwtl
fs
insb
and
or
inc
push
jl
or
jnp
and
adc
mov
sahf
inc
xlat
iret
mov
jecxz
adc
cwtl
das
or
dec
sarl
aam
cmpsl
jmp
stc
pop
mov
add
roll
sahf
pop
sahf
rcrl
inc
addr16
or
add
inc
or
in
push
pop
movsb
add
cmc
jae
daa
cmp
jle
add
popf
xor
dec
bound
pop
popf
push
mov
adc
clc
into
sub
call
xchg
pop
xchg
sti
sbb
cmpsl
out
das
dec
mov
mov
out
scas
lret
push
movsl
mov
std
sub
lcall
rcrb
sbb
sti
cmp
mov
sti
add
mov
dec
fadd
inc
pop
mov
xchg
into
fcomps
push
push
out
cld
mov
mov
gs
test
and
add
pop
subb
shlb
pop
into
xchg
mov
pop
cmpsl
arpl
std
mov
or
push
ficoml
xchg
pop
adc
cmp
ljmp
and
xor
jmp
mov
js
imul
inc
aam
enter
in
push
ljmp
insb
shlb
mov
dec
ret
cwtl
inc
lds
imul
dec
popa
inc
daa
lahf
stos
stos
loopne
rcll
mov
rcrl
ljmp
sub
xchg
xor
orb
cli
mov
leave
out
aas
xor
daa
push
pop
mov
dec
sub
inc
outsl
scas
inc
popf
mov
push
imul
je
in
imul
pop
shll
mov
cmpsb
int
pop
rcr
or
inc
out
cmp
insl
lahf
cmp
xor
jne
cmpsb
dec
insl
jle
repnz
mov
sbb
rorl
mov
mov
bound
cmpsb
sahf
in
leave
pusha
ds
data16
pop
out
xor
inc
and
dec
sbb
xlat
jne
dec
or
mov
sbb
or
stos
cmp
fldl
and
and
xlat
or
mov
movsl
add
call
push
inc
push
fcompl
inc
fcoms
inc
pop
imul
fsubr
sbb
aas
call
xchg
xor
notb
mov
out
adc
mov
add
push
in
add
addb
jns
xchg
sub
push
xor
cli
mov
mov
jnp
mov
mov
rcrb
inc
jmp
aaa
das
xchg
or
scas
mov
pop
xlat
icebp
fsubs
mov
push
sub
mov
mov
pop
cwtl
dec
mov
rclb
or
xchg
decl
stos
and
adc
cmp
in
add
sub
mov
or
jle
enter
and
cmp
mov
mul
push
sbb
andb
xchg
pusha
ss
push
ss
jecxz
ljmp
lcall
xorb
mov
push
mov
insl
sbb
aad
jo
outsb
mov
push
xor
pmaxub
pop
sub
jo
push
hlt
sub
int
bound
ret
ret
and
rcrl
xor
imul
inc
test
iret
lods
fnstcw
add
lret
add
mov
cs
scas
mov
fisubs
int
popf
stc
lock
jg
lock
adc
and
out
xor
daa
outsl
sbb
sbb
into
jge
fsub
jp
in
insl
sub
xor
xor
adc
xchg
push
je
fcomi
cmpsb
sbb
in
mull
mov
mov
rol
mov
sahf
fcmovne
out
mov
addb
outsb
popf
push
adc
or
pusha
xor
shlb
es
lods
mov
pop
roll
sub
dec
cmpl
adc
pop
js
xor
pop
mov
rcr
in
mov
arpl
sbb
imul
mov
pop
insl
ja
mov
fildll
nop
sub
adc
test
and
in
es
aas
movsl
pusha
mov
mov
add
sahf
pop
or
sbb
dec
in
mul
push
imul
or
adc
fnsave
shlb
leave
lea
test
negb
rcrl
cmp
shll
out
shl
push
pop
fsub
add
mov
mov
mov
rcrb
out
adc
jp
sbb
push
dec
inc
sbbb
stos
fdivrs
push
rol
xchg
ret
jmp
lock
mov
jg
adc
cwtl
out
mov
cwtl
jo
out
test
mov
test
push
adc
pusha
testb
aaa
enter
fnstsw
shl
cltd
stos
pop
xchg
shlb
mov
adc
in
push
or
loope
mov
aam
cli
xchg
andb
test
lods
adc
xor
add
and
arpl
mov
pop
rcl
jb
std
jns
mov
adc
xchg
add
inc
adc
cwtl
push
mov
cmp
cltd
mov
dec
pop
cmp
bound
inc
cmp
sti
sbb
enter
cmpsb
pushf
lds
push
xchg
mov
fwait
xor
ret
mov
lock
or
int
out
push
jnp
lcall
and
dec
inc
out
inc
jb
add
mov
aam
scas
mov
test
fsubr
pop
insl
inc
jecxz
stc
mov
test
or
cli
or
aaa
fnstsw
pusha
test
mov
push
fs
sub
pop
push
es
xchg
sbb
sbb
clc
loop
inc
or
in
mov
int3
pop
cmp
out
fbld
testb
test
popa
mov
daa
mov
jbe
push
xlat
stos
pop
movsb
adc
sub
xor
in
adc
sub
jns
push
jo
imull
inc
or
insb
nop
repz
sbb
daa
add
xchg
xor
mov
andl
lcall
gs
sub
out
inc
int3
add
js
shll
adc
mov
inc
out
jno
inc
fs
icebp
push
orb
ret
mov
rcrb
fwait
out
movsb
cmp
test
aaa
push
fnsave
jno
nop
scas
dec
pop
cmp
jmp
out
fdivrp
xchg
cld
dec
push
fstpl
jl
addr16
xor
movsb
shl
mov
mov
std
jg
sub
int3
inc
gs
pop
imul
mov
std
in
and
jl
cmp
xchg
cmp
clc
stos
pop
push
push
enter
mov
sub
sbb
add
xor
mov
pop
test
jae
aam
in
test
divb
clc
sub
mov
dec
or
push
xor
mov
dec
lahf
and
test
pop
adc
dec
pusha
mov
push
push
push
pop
fcoml
jle
and
lods
xchg
rorl
pop
gs
dec
cmc
push
mov
inc
lahf
rolb
fwait
sahf
int3
arpl
cmp
mov
xchg
out
test
cmp
aas
hlt
stos
in
jae
pop
int
xor
ds
mov
es
clc
test
mov
jbe
leave
pop
mov
aam
aam
mov
adc
adc
dec
aas
mov
call
adcb
test
inc
xchg
cmpsb
push
jae
notb
daa
sahf
ja
mov
jae
jmp
mov
pop
addr16
lret
lds
frstor
pop
loopne
mov
popa
mov
pop
jb
cmp
cmp
pop
in
pop
fistl
adc
hlt
mov
scas
sbbb
in
adc
xor
das
dec
mov
sbb
adc
add
and
inc
cmc
mov
rcr
push
mov
jb
lods
inc
pop
int3
jbe
mov
enter
test
ret
sub
mov
lock
dec
mov
idivl
lret
mov
add
popf
pop
mov
jp
mov
inc
pop
push
or
jmp
sub
arpl
in
pop
mov
mov
xor
imul
mov
lods
cmp
enterw
push
shlb
scas
xor
ljmp
xchg
jecxz
add
mov
cwtl
mov
inc
pop
imul
clc
lcall
push
out
test
addr16
xor
inc
lea
xor
out
xchg
lcall
insl
in
jl
push
mov
lods
cmp
test
adc
outsl
shrl
popf
pushf
pop
sbb
mov
pop
imulb
adc
orl
test
movsl
aam
inc
adc
repnz
shl
pushf
inc
xchg
adc
popf
xor
xchg
and
inc
pop
jb
xchg
dec
sbb
addr16
cmp
lcall
js
push
mov
jmp
outsl
ss
adc
sbb
cmp
push
mov
ret
aad
xor
or
jl
xor
dec
sbb
lret
pushf
daa
inc
mov
rcrl
sarl
outsb
imul
out
mov
loop
add
aam
push
test
dec
cld
inc
out
lret
roll
movsb
mov
dec
cmc
sbb
cltd
pop
cmp
testl
jbe
out
sbb
push
inc
and
mov
push
mov
push
aam
les
sub
rcll
mov
dec
cwtl
push
je
jae
mov
mov
mov
or
sub
push
lock
cmc
cmp
or
mov
add
jns
lcall
cmpb
rcr
or
insb
shl
sahf
dec
pop
add
movsl
mov
nop
dec
data16
in
mov
aas
push
add
movsb
jecxz
popf
hlt
ret
imul
out
push
push
xchg
dec
sbb
mov
dec
cwtl
stos
dec
shll
xor
push
fnstcw
aaa
cmp
iret
adc
xlat
bnd
mov
das
sbb
cmc
push
sarb
inc
ret
aam
mov
or
and
push
xchg
fmul
sub
dec
inc
or
dec
outsl
add
daa
xchg
popa
and
sbb
push
mov
add
adc
fildll
mov
mov
pop
dec
je
jno
adcl
adc
sbb
xchg
sti
lea
mov
inc
jbe
mov
mov
fistl
nop
dec
mov
dec
sbb
loop
push
jp
inc
int3
push
movsb
or
add
xor
fldcw
cmp
push
push
xor
pusha
int
mov
jns
push
and
adc
mov
jns
rclb
dec
popa
clc
cmp
mov
lds
jp
or
push
cs
aas
dec
ret
popa
push
lock
add
outsb
add
insl
cmp
in
sub
jnp
rol
aaa
push
pop
jl
cmp
ja
xor
mov
jp
jns
leave
push
xchg
fwait
jb
notl
lods
pop
xchg
repnz
push
and
push
test
movsb
jo
xchg
call
std
movsl
push
test
ja
dec
sbb
inc
push
pop
mov
xchg
insl
jle
out
pop
push
mov
hlt
rclb
xchg
popa
into
pop
aad
ss
jae
adc
xor
hlt
cmc
pop
hlt
outsl
dec
push
jae
test
adc
in
in
stos
fldenv
test
push
shll
leave
imul
shrl
xchg
jmp
mov
and
sub
nop
pop
xor
nop
arpl
add
mov
stos
in
cmp
pop
popa
jns
xchg
cld
cmp
lods
inc
mov
pop
xchg
gs
dec
stc
popf
in
ret
cmp
mov
push
pop
jb
mov
in
repnz
enter
vaddpd
add
stos
mov
dec
push
outsl
adc
mov
in
aam
adc
sub
push
add
in
jecxz
imul
lahf
xor
push
jl
push
or
std
xorb
xor
sbb
mov
xor
or
xchg
nop
dec
pop
lret
shr
xchg
hlt
push
lds
and
movsl
pop
insb
xlat
sbb
mov
lea
repnz
je
jo
pop
shrb
inc
adc
sub
xlat
adc
pop
cwtl
mov
cs
lds
mov
sbb
sti
sub
mov
adc
pop
mov
repnz
cld
dec
mov
add
out
test
cmp
fnstsw
dec
fcompl
icebp
cmp
sbb
xchg
lret
shlb
popa
and
inc
fsubs
jg
mov
stos
push
repz
pop
add
int
mov
popf
rorb
aas
mov
inc
mov
xor
jbe
mov
inc
inc
scas
jmp
sahf
cmp
push
hlt
inc
or
xchg
pop
outsl
lods
not
mov
dec
jmp
xor
jmp
outsb
add
xor
mov
jo
test
or
mov
jnp
faddl
mov
cmp
mov
mov
jae
push
mov
cmp
fdivl
repnz
cld
sbb
xchg
dec
ljmp
test
fldt
loope
ljmp
fprem
or
pop
lock
jge
add
arpl
add
mov
mov
mov
jl
inc
jnp
fsubl
dec
loop
inc
fbstp
mov
adc
jo
test
xchg
cwtl
das
enter
callw
ficompl
dec
xchg
xchg
gs
test
or
mov
fsts
fmuls
mov
mov
stos
jb
fmull
fcoms
movlps
or
in
and
cmpsb
push
cmp
jns
add
push
add
mov
and
jae
mov
sti
sahf
mov
outsl
add
imul
das
dec
pop
xor
pop
push
cmp
xchg
cmp
xchg
add
cwtl
xlat
pop
inc
sahf
out
inc
or
loop
mov
repnz
add
xor
mov
out
pop
stc
pop
or
push
aaa
fwait
and
outsl
mov
loop
xor
xchg
fldl
mov
pop
stc
or
ljmp
adc
inc
movsb
mov
and
sub
je
lret
and
jle
fnstsw
push
fisubs
jns
ja
mov
add
rorb
std
or
adc
mov
out
dec
jle
sar
adc
in
inc
jne
andb
nop
sub
ficoml
out
jmp
cmp
loop
mov
outsb
or
lock
xor
or
push
xchg
clc
push
pop
testb
scas
pop
fs
ds
outsl
sbbl
repz
pop
and
add
pusha
inc
shlb
cmc
sub
jmp
out
add
inc
ja
push
leave
push
cmpsl
out
mov
cmp
ucomiss
mov
rol
sub
fildll
aad
add
cltd
insb
enter
sub
mov
cwtl
and
sbb
adc
add
inc
adc
xchg
lcall
mov
enter
mov
add
sarl
adc
xchg
sbb
xchg
ss
add
movsl
jo
insl
xor
xchg
pop
lock
push
fidivrs
mov
test
fists
and
adc
daa
mov
lahf
cs
pop
clc
adc
lahf
pop
cmp
xchg
mov
dec
in
ds
sub
pop
loop
dec
popf
and
pop
icebp
adc
dec
cmp
sbb
pop
movsl
mov
aaa
addr16
mov
fs
sub
outsl
add
and
clc
mov
adcl
cli
test
aad
push
cmp
xor
arpl
fmul
or
xor
sub
cmpsl
lds
aad
or
adc
mov
int3
jns
in
jo
xchg
sub
ret
hlt
cwtl
mov
dec
sbb
ja
aad
inc
add
inc
sbb
fnsave
rol
repz
dec
outsl
mov
mov
int
mov
lret
jb
iret
data16
dec
lock
dec
jg
scas
and
pop
jnp
clc
xchg
xor
jne
push
adc
mov
push
clc
mov
test
imul
cltd
dec
dec
and
pop
xor
decl
sub
lret
cld
cmc
ljmp
xchg
outsl
sbb
xorl
xor
lahf
sub
jmp
cmpsb
mov
push
rol
add
outsl
stos
xor
je
push
insb
divb
add
in
and
cmpsb
cmpsl
insb
aas
push
mov
mov
sub
inc
push
aam
cmpsl
aas
cli
in
loopne
mov
cmpsb
addr16
popa
cmp
adc
adc
or
inc
sbb
popf
ljmp
cmc
cmp
pop
icebp
add
inc
or
loopne
stc
nop
mov
in
pop
scas
sbb
jbe
push
call
rclb
pop
add
inc
mov
push
xchg
mov
cmp
push
cmc
jbe
nop
sub
pop
lret
xor
aas
sti
jne
inc
gs
push
fmulp
bts
bound
mov
xchg
push
push
sub
pop
int
sbb
jmp
sbb
jmp
xor
add
jp
pop
inc
movsb
mov
mov
fldl
xchg
adc
pop
push
jno
into
jo
jle
mov
jecxz
cwtl
jge
pop
data16
pop
dec
push
ficompl
out
pop
lock
aas
popa
pop
mov
pop
scas
jo
shr
jecxz
lahf
mov
pop
mov
inc
dec
ficoml
test
addb
inc
dec
and
lods
mov
mov
push
dec
adc
or
lods
inc
out
sbb
or
pop
cmp
pop
scas
es
outsb
cmp
mov
rclb
rcll
and
sub
loop
cmp
lahf
out
sti
rorb
add
aad
out
int
lea
adc
and
xor
pop
mov
dec
out
xor
in
xchg
sbb
shr
fucomp
imul
push
rcr
xor
xchg
or
or
cmc
jg
sub
dec
jg
add
dec
pop
aam
push
inc
test
dec
jbe
arpl
loop
and
sub
sub
cmpsb
andl
lods
mov
call
in
pushf
mov
ss
add
gs
or
or
fs
mov
xor
gs
fldcw
cmp
and
fidivl
pop
fs
mov
cmp
int
sar
in
mov
sub
mov
test
push
cmp
ja
test
inc
clc
aad
jg
xlat
and
lret
sub
xchg
pop
lret
or
xor
inc
frstor
mov
cmpsb
or
lods
jno
loopne
mov
scas
inc
cli
data16
lret
push
pop
insb
mov
inc
fucomi
mov
bound
fwait
mov
pop
mov
dec
in
cmc
movsb
inc
daa
pop
mov
adc
insl
scas
add
add
inc
push
stos
out
inc
sub
jns
dec
dec
pop
jge
mov
je
pop
outsb
or
test
mov
add
mov
dec
aaa
sti
mov
cmp
rcrl
xor
add
das
inc
adc
push
nop
faddl
mov
push
xchg
bound
lahf
jmp
fsub
loop
xchg
icebp
add
into
aad
popf
andb
aas
iret
arpl
inc
dec
dec
lret
jle
adc
divl
xchg
sub
push
mov
or
movsb
repnz
xchg
xor
stc
popf
pusha
and
shrl
jno
les
pop
push
stos
sub
shll
enter
das
scas
call
mov
enter
mov
jns
les
call
cwtl
dec
sbb
jmp
or
aam
loope
or
fwait
je
and
icebp
fwait
or
out
out
add
pop
cmpsl
das
inc
jp
test
push
pop
jae
xchg
sub
les
mov
pop
mov
pop
int3
dec
mov
dec
mov
xor
jns
sarb
iret
pop
mov
inc
or
mov
push
sahf
rcpps
shll
mov
xor
jns
pop
and
test
jbe
xor
sbb
cmp
fmulp
inc
outsb
pop
scas
lahf
das
int3
fcompl
mov
xor
scas
jne
insl
add
push
mov
xor
pop
mov
sbb
int3
xor
fstpt
test
hlt
dec
jecxz
jg
mov
jg
mov
adc
fisttpll
add
arpl
stos
fmull
sti
das
out
jle
xchg
insl
lods
add
or
sub
scas
adc
jg
hlt
push
es
xchg
dec
or
pop
scas
push
mov
inc
aam
dec
ret
pop
mov
mov
push
jbe
rcrb
ds
inc
inc
fidivs
dec
xchg
in
mov
jecxz
push
outsb
jae
sub
jle
or
dec
mov
pop
xchg
sub
inc
pop
jg
je
call
add
mov
and
or
add
ljmp
jbe
inc
push
fwait
inc
bound
adc
popf
test
adc
loope
test
bound
mov
stos
sub
and
mov
xchg
lods
and
jb
ljmp
jle
andb
mov
insl
bound
push
test
loop
scas
push
into
sbb
lock
inc
into
gs
push
loopne
and
xor
lea
push
shlb
ss
orb
push
pushf
or
call
add
lcall
sub
sahf
leave
xchg
pop
cmp
mov
les
js
stos
into
into
jae
mov
push
adc
or
paddd
jne
pop
fxtract
subl
out
cld
cmp
or
call
mov
push
insl
adc
add
cltd
pop
mov
pop
pop
insb
add
xor
pop
testb
andb
ror
popf
mov
mov
pop
lock
iret
stos
inc
fsubr
nop
insl
jge
mov
mov
ret
xor
jo
fimuls
mov
mov
stos
addl
lahf
lock
stos
mov
fs
and
and
dec
dec
adc
sub
outsl
pop
test
pop
test
rcl
xor
mov
jne
inc
hlt
dec
add
clc
out
push
inc
inc
arpl
adcb
clc
jl
cmp
sahf
lods
mov
mov
lock
fsubrp
inc
or
xchg
jb
pop
movsb
dec
scas
pop
mov
inc
in
jb
cmp
les
pop
lret
aam
add
insl
xchg
scas
mov
sahf
xor
aas
cltd
pop
mov
fcompl
sub
idivb
movsb
mov
hlt
xchg
aaa
cmp
insb
pop
pop
cli
add
push
jbe
loope
inc
cmp
lret
xlat
in
lcall
pop
fwait
push
sbb
mov
inc
movsl
cmp
movl
out
sbb
test
imul
sbb
or
cltd
jbe
sub
inc
push
mov
addr16
pop
stos
cmp
call
inc
mov
insl
or
lds
cmp
repz
sub
add
aad
mov
pop
hlt
xor
push
popf
mov
mull
jmp
adc
push
xor
and
mov
jge
push
insb
icebp
sahf
jg
dec
pop
sbb
insl
lret
bound
shr
je
pusha
andb
inc
inc
sub
pop
sahf
or
cld
or
push
pop
ret
call
mov
xchg
xor
pop
sbb
inc
or
aaa
scas
call
mov
cmp
mov
push
fs
daa
loop
pop
rcrb
int3
jns
js
or
shlb
adc
repnz
mov
addb
ret
xchg
aas
lea
and
arpl
jl
dec
pop
cli
xchg
pop
mov
xor
add
push
in
fistl
je
sub
shrl
imul
and
pop
push
mov
jmp
mov
data16
xchg
adc
xchg
mulb
xchg
add
outsb
fucomp
int
movsb
std
jmp
das
cltd
cli
and
lcall
lret
dec
sbb
or
sbb
sbb
daa
shrl
add
sub
icebp
bound
cltd
movsl
mov
mov
inc
aaa
or
fsubr
les
lods
inc
push
pop
je
or
adc
sti
mov
mov
nop
movsl
inc
pop
es
cmp
push
jo
pop
push
xchg
enter
testb
movsl
or
xchg
stc
push
fnstenvs
fs
mov
push
xor
jno
adc
xchg
scas
jne
cmc
in
sbbl
hlt
adc
push
sahf
adc
xor
push
scas
imul
sbb
testb
mov
mov
addr16
out
cmp
jmp
mov
and
mov
scas
hlt
xchg
inc
mov
pop
mov
lret
aam
idivl
loop
fwait
adc
cmp
icebp
cmp
aad
xchg
aas
pop
pop
fisubrs
pop
add
and
mov
lahf
pushf
cld
lahf
jne
jge
cmp
jnp
test
aad
sub
mov
jp
mov
cmp
repnz
add
lds
inc
loope
sbb
xor
mov
scas
daa
or
sbb
push
mov
test
out
jle
inc
hlt
iret
sub
mov
jno
mov
dec
mov
pusha
mov
inc
push
mov
movsl
mov
pop
loope
push
fwait
jmp
int3
das
arpl
aad
cmp
mov
icebp
and
lods
std
ficoms
movsl
dec
inc
or
mov
cmp
lahf
stos
pop
push
out
xchg
les
in
or
mov
rcrl
xchg
adc
dec
aad
jl
imul
push
sbb
sbb
fildll
sar
adc
jne
aas
ret
in
pop
mov
clc
test
xchg
jmp
mov
xlat
outsb
adc
clc
int3
mov
xor
adc
gs
fbstp
inc
xchg
je
cmpsb
shl
xchg
lea
jmp
adc
imul
fwait
test
jp
out
lods
sbb
fsubrs
testb
outsl
ljmp
or
data16
scas
pop
mov
sub
jmp
int
mov
lcall
and
cmp
cmp
add
clc
adc
mov
out
pop
out
xor
es
cs
mov
outsb
mov
jbe
icebp
push
into
std
ret
push
jae
popa
push
sbb
dec
pop
sbb
lods
push
idivb
popa
xor
int3
jb
pop
scas
in
inc
push
inc
jno
pop
mov
sbb
mov
cmp
xor
jle
insb
xchg
int3
fnstsw
or
mov
pop
pop
pusha
and
stos
xor
pop
adc
cmp
lahf
adc
push
gs
pushf
sbb
mov
mov
por
ret
movd
scas
pop
sbb
xor
lcall
out
push
and
push
jmp
lret
fnsave
pop
jne
scas
sti
adc
pop
imull
sbb
sti
push
mov
push
clc
fstps
cmp
or
std
sbb
cmpsl
mov
ja
adc
test
adc
ret
mov
pop
decl
push
jp
lds
and
jns
sahf
insl
in
sbb
ret
lds
and
dec
in
cmp
mov
and
and
mov
mov
jmp
jl
incb
cmpl
negb
mov
jb
pop
sbb
das
out
addr16
xor
mov
int
sub
test
push
and
pop
aas
or
shr
js
sub
or
sub
clc
mov
push
rcrl
outsl
shrl
ficomps
pop
xor
clc
xor
mov
fistpl
mov
jmp
push
out
das
xlat
repz
sbb
add
mov
or
lcall
inc
insl
lret
testb
xchg
jg
leave
out
dec
jmp
ret
inc
mov
pop
jge
iret
fstpt
dec
push
jbe
inc
sbb
mov
int3
into
jge
mov
mov
mov
out
das
jmp
and
leave
outsb
jl
xchg
cmpsl
orb
mov
pop
mov
push
dec
jmp
imul
push
add
in
cmp
inc
scas
insb
push
jg
dec
or
jb
jge
aas
push
fisubrs
pop
bound
fs
or
jo
jmp
sbbl
mov
idivb
and
xor
push
push
cmp
sbb
negl
xchg
js
fdiv
xchg
sub
sub
xor
call
push
cmpsl
cwtl
lahf
insl
inc
aam
data16
call
lret
gs
and
popf
cmp
stos
mov
fldcw
lock
iret
add
or
cmp
shll
adc
lahf
and
insl
sbb
std
pop
inc
dec
add
xor
xchg
adc
inc
test
pop
test
adc
inc
hlt
stos
inc
es
xchg
add
dec
shlb
icebp
out
lods
clc
lods
inc
fcmovnu
popf
mov
xchg
push
arpl
das
xor
shl
dec
or
and
fs
push
rcrb
mov
pop
cmc
and
jbe
enter
aam
xchg
cmp
xchg
mov
mov
push
std
xchg
push
inc
sub
jne
das
mov
icebp
fsubrs
js
cltd
or
mov
pop
push
add
into
cmp
jnp
scas
cmpb
mov
push
adcl
cmp
adc
push
pop
repz
lock
mov
out
push
mov
cmp
jns
testb
xor
sub
mov
sti
movhlps
sarl
sub
cld
and
cmp
push
inc
mov
cs
ret
add
cmc
imul
dec
insb
leave
cwtl
sbb
cwtl
dec
xor
fucomp
cld
addl
or
nopl
mov
aas
aaa
aaa
cltd
xor
mov
add
ret
dec
js
lods
popf
sub
cli
fidivs
hlt
cli
clc
and
jp
out
enter
push
push
enter
sub
pushf
out
mov
cli
xchg
pop
dec
sbb
sub
pop
dec
frstor
testb
adcb
popf
inc
rorl
xor
daa
pop
cmc
pop
addr16
lods
aaa
add
sbb
pop
lods
push
xorl
ljmp
call
and
push
mov
jnp
mov
adc
mov
jb
jnp
xlat
lods
mov
mov
mov
fbld
mov
push
in
adc
data16
pushaw
lds
cli
scas
sbb
dec
cmp
int
sar
aam
pop
xchg
push
pop
or
xor
in
addr16
jge
dec
xchg
and
addl
adc
or
shrb
test
iret
rcrl
stos
adcl
sbb
inc
out
sub
mov
popa
addr16
fimuls
xchg
adc
jns
popf
cmp
inc
cld
add
adc
mov
xor
clc
cmpsl
ret
pop
addr16
or
cwtl
cld
repz
mov
fucomp
icebp
popf
std
les
xor
cmp
xchg
loope
and
cld
test
stc
out
je
and
test
pop
out
xchg
and
mov
mov
pop
push
sub
cmp
push
xor
aas
in
out
jb
add
add
movsb
outsb
movsl
stc
lcall
iret
insl
call
push
push
sbb
ja
movsb
mov
xor
push
mov
add
and
sub
fidivs
sbb
cmp
xlat
cmc
mov
out
pop
fisubrl
adc
outsl
mov
testb
pop
sbb
in
sub
jmp
test
cld
add
sub
shlb
popa
lcall
mov
pop
or
fldl
and
xchg
mov
test
jne
push
inc
fnsave
push
jge
seta
inc
nop
pop
mov
das
add
push
mov
scas
lea
add
jl
xor
std
and
ret
shlb
in
mov
push
mov
test
sarb
push
mov
and
pop
scas
dec
pop
enter
mov
dec
dec
push
mov
adc
into
cmp
cmp
fists
negl
jg
movsb
popf
sub
xorl
into
into
gs
mov
push
fidivrs
push
aaa
in
bound
dec
push
shlb
and
test
stos
jno
adc
pop
mov
pop
mov
rcrb
adcl
mov
add
or
xchg
mov
push
pop
leave
mov
lcall
sbb
sub
rorb
lcall
sti
je
fbld
notl
ja
xchg
shl
adc
lods
push
bound
shr
jl
xchg
and
mov
out
mov
sub
adc
lret
pop
lahf
jmp
dec
decb
int
xchg
in
or
adc
mov
or
mov
das
cmp
cli
adc
mov
notb
aad
cltd
fdivrs
xchg
js
mov
lock
fisubs
inc
fpatan
jnp
pop
cmp
lock
dec
clc
mov
jae
lds
push
cwtl
jmp
add
rorl
adcb
je
cmpsl
pop
inc
fimull
mov
or
je,pn
and
sar
int
adc
jl
dec
pusha
clc
jae
jnp
in
sub
dec
jmp
popf
xor
and
pusha
ds
dec
out
dec
xlat
clc
in
mov
out
xor
test
in
sub
scas
push
jae
fldcw
leave
adc
loopne
int
or
pop
inc
xchg
lds
jecxz
mov
aad
sbb
lods
orl
lcall
out
decb
xchg
repnz
pushf
or
aam
xchg
shll
mov
outsb
mov
mov
or
leave
fstpl
cmp
mov
mov
fnsave
add
jne
bound
mov
add
add
repnz
popl
xor
mov
lods
cli
xlat
fwait
cld
mov
orb
scas
das
pop
cmpsb
hlt
inc
test
cwtl
shlb
mov
gs
xchg
test
sbb
call
fiadds
imul
mov
insl
cs
xor
cmp
sbb
fdivrs
fnsave
dec
fmuls
cltd
scas
inc
rcrl
lods
stc
xor
pop
dec
idivb
andl
push
mov
add
sbb
xor
and
or
push
call
mov
inc
sbb
scas
imul
ret
xchg
push
sti
ds
es
cli
scas
dec
mov
cwtl
fbld
loopne
rolb
and
enter
inc
xchg
pop
sahf
pop
sub
jle
mov
push
lock
push
sbb
push
pop
adc
out
jae
and
dec
in
push
mov
das
in
cs
andl
xchg
mov
pop
adc
ds
jne
movsb
loop
mov
aaa
adc
pop
adc
push
xchg
loop
test
mov
cld
push
inc
test
mov
xor
sbb
das
jno
into
enter
and
mov
cmovp
mov
les
adc
loop
pop
sbb
in
insl
lods
adc
call
mov
lret
pop
inc
sbb
add
es
rorb
sbb
loop
pop
repnz
out
lcall
mov
xor
mov
or
aaa
cmpsb
pusha
add
popa
and
ret
inc
fisttpl
add
andb
sub
std
fdivs
xchg
xor
xchg
sub
std
add
pop
mov
push
push
adc
call
pop
cmp
stc
and
outsl
bnd
add
int
mov
jl
ja
rol
lods
lcall
mov
lret
mov
popf
lods
cld
test
iret
imul
push
lret
out
pusha
daa
and
mov
add
jge
cmpsb
in
jnp
cmp
dec
pop
outsl
xchg
inc
pop
ljmp
test
leave
adc
pop
xchg
inc
xlat
adc
xchg
sub
out
cs
das
mov
adc
push
cmp
or
fistps
int3
or
mov
fcmovnb
rclb
xor
mov
addr16
cmp
mov
xor
inc
negl
cli
mov
jo
or
pop
push
sub
cwtl
inc
sub
call
push
inc
mov
arpl
or
adc
xchg
inc
popf
sub
mov
int3
cli
or
mov
stc
inc
jbe
fwait
mov
and
push
inc
lret
lds
push
push
sbb
test
dec
mov
ljmp
dec
pop
fprem
xor
dec
dec
out
lea
ret
sahf
inc
mov
mov
in
testb
dec
add
dec
in
std
lret
push
fidivl
shl
inc
fistl
cmc
and
fstpt
rol
arpl
test
mov
movsb
ficoml
and
gs
cmp
jp
rol
jno
pop
push
clc
push
test
nop
or
rorl
pop
dec
sbb
cwtl
jmp
xchg
lds
jbe
aaa
shll
push
push
push
or
les
mov
fwait
mov
iret
scas
lret
jb
mov
jle
ss
jns
imul
inc
popa
insl
popa
add
mov
loop
cld
in
in
subl
xchg
pop
sahf
pushf
jo
add
push
adcl
enter
std
fs
int
enter
push
jmp
or
int
jl
pop
push
mov
enter
jbe
xlat
mov
fisttpl
sarl
mov
out
jle
mov
or
adc
xchg
sub
idivl
call
mov
gs
sbb
jno
mov
adc
dec
sarw
sub
icebp
add
das
out
iret
test
adc
pop
outsb
loopne
lret
and
cli
xchg
mov
ficompl
ror
sbb
or
push
lds
out
test
xchg
dec
jp
dec
out
push
sbb
or
cmp
daa
add
sahf
push
adc
test
ljmp
or
dec
adc
mov
hlt
cmp
insl
jge
push
sub
dec
fldt
pop
adc
and
mov
out
xchg
sbbl
mov
cmp
dec
fucomi
mov
std
xchg
sbb
aad
pop
dec
cmp
roll
in
mov
inc
xor
mov
xchg
inc
xor
rcrl
xor
rep
testb
jns
adcl
lcall
jo
xor
adc
test
pop
and
inc
ljmp
jno
sub
testl
mov
dec
mov
sub
pop
mov
push
adc
lahf
ds
jnp
xorb
mov
push
popf
lods
push
insl
aad
ss
in
fists
repz
shll
int
std
sub
sbb
mov
shr
xor
addr16
js
loope
dec
movsl
jmp
pusha
js
dec
fs
pop
pop
and
and
cmp
add
cmc
adc
cmp
cwtl
insb
mov
or
mov
fcmovu
cwtl
sbb
pop
add
cwtl
xor
lret
mov
std
dec
add
fisttpl
lods
mov
rcrl
adc
je
add
adc
mov
es
pop
pop
iret
jbe
incb
mov
orb
lret
sbb
arpl
adc
and
cmp
cmp
mov
insl
rcrb
hlt
push
stos
add
fs
sbb
ror
inc
mov
inc
or
mov
cmp
and
subl
jno
std
mov
mov
stc
pop
sub
push
mov
mov
jb
xlat
outsb
pushf
and
es
int3
mov
shl
mov
and
jg
jmp
and
aad
sbb
dec
lods
stc
out
dec
in
sub
orb
xchg
add
adc
cmpsb
out
dec
sub
pop
push
rcrl
cli
int
testl
sbb
dec
outsb
sub
pop
sub
add
mov
sbb
scas
push
movsb
out
xlat
aam
cmp
inc
xchg
sub
ret
mov
test
mov
xor
scas
xchg
push
jge
in
jl
dec
mov
popf
je
or
aam
xchg
clc
mov
sub
add
cmp
push
cmpsb
in
cmp
jmp
nop
push
fs
leave
mov
jnp
or
ret
xor
rorb
cmp
lods
sbb
pop
outsb
aas
sub
fildl
mov
pop
xchg
mov
mov
nop
fs
add
xchg
sub
cmpxchg
out
mov
dec
cmp
cmp
or
aaa
pop
sahf
xor
pop
sub
jns
cmp
sbb
rcrl
cltd
imul
mov
outsl
mov
out
cmpsl
shrb
mov
sarl
jbe
ja
sahf
subl
pop
rolb
xor
lea
dec
aaa
jo
xchg
pop
loopne
dec
sbb
xlat
shlb
loop
mov
sub
jno
lcall
lret
cld
nop
aad
or
jecxz
ficomps
scas
scas
into
sub
lods
ret
cmpsb
ret
ja
jno
sub
push
in
stc
or
inc
push
jbe
in
daa
cmp
stc
or
sbbb
sub
cmp
sub
xor
shll
stos
lret
dec
sub
cmpsb
les
les
xor
sbb
inc
and
adc
gs
iret
stos
xor
fisubrs
or
xor
jbe
push
outsb
add
daa
out
out
cld
mov
stos
scas
add
outsb
add
subps
adc
cmp
inc
cmpb
nop
shlb
cltd
mov
add
sahf
insb
add
dec
shl
jo
loope
jne
adc
dec
dec
popf
inc
test
fdivs
movsl
lret
lret
inc
inc
push
push
shrl
xchg
pop
icebp
adc
cmp
in
dec
xlat
aas
hlt
sahf
push
aas
std
mov
cmp
sbb
repnz
lds
dec
and
inc
fwait
xor
lret
out
inc
loopne
xchg
sbb
cli
test
popf
fstps
and
sub
sub
xor
mov
cmp
add
daa
cmpl
mov
dec
mov
testl
inc
inc
arpl
pop
jecxz
add
test
cld
push
sbb
repz
mov
and
in
sub
fildl
mov
mov
dec
loope
test
jo
negb
lcall
ja
push
scas
loope
movsb
cs
and
push
jle
xchg
sbbl
mov
cltd
jne
or
lcall
and
fldenv
xorb
jns
int3
arpl
test
in
repz
cmpsl
ds
xchg
into
jne
fnstcw
int3
ja
out
pop
mov
xlat
jo
cmp
out
mov
movups
outsb
sbb
pop
ret
stos
mov
fyl2x
xlat
imul
xor
daa
int3
jae
sub
test
insb
outsb
xor
inc
stos
inc
dec
aas
jno
xor
fs
inc
mov
sub
pop
jecxz
rclb
cs
pop
mov
push
in
jmp
mov
pop
inc
add
mov
les
mov
loope
and
add
pop
inc
mov
in
inc
and
les
dec
dec
fisubrl
pop
jmp
dec
movsl
cmp
sahf
dec
insb
jb
popa
cltd
xlat
mov
pop
sbb
mov
das
fisubrl
mov
adc
jecxz
xor
push
out
mov
bound
or
push
add
or
mov
and
hlt
xchg
inc
pop
bnd
movsb
sbb
jp
leave
jl
add
lret
loopne
cli
lret
push
outsl
jb
sbbb
mov
fcompl
orb
mov
subl
ror
gs
xor
ret
mov
jno
dec
out
rorl
loopne
adc
and
inc
jns
fisubs
gs
cmp
ret
dec
in
mov
mov
pushl
jmp
dec
das
sti
sbbb
inc
aad
insl
iret
mov
push
mov
lahf
daa
lret
mov
cmp
lds
adc
out
dec
loop
test
dec
push
or
adc
in
test
das
pushf
jno
cltd
cltd
jb
xchg
lret
mov
fcomps
and
fbstp
popf
fldt
dec
sub
in
push
cmp
cli
shlb
fisubrl
dec
pop
stos
in
scas
and
arpl
jle
ds
lcall
pop
les
and
pop
fs
nop
fildl
mov
mov
mov
xorl
iret
push
push
mov
testl
jbe
int
imul
mov
jle
movsl
ds
loopne
scas
adc
inc
fcmovnbe
aas
mov
fwait
loop
fisttpl
mull
xor
fs
test
inc
push
add
dec
adc
mov
or
mov
js
lret
inc
test
cmp
lea
fsubr
test
aaa
adc
sub
cmp
loope
dec
lcall
xor
into
gs
scas
jb
stos
sub
inc
in
lret
in
cmp
stos
cmpsl
xchg
add
xor
popf
add
fimull
testb
mov
jne
rclb
dec
jl
scas
mov
mov
icebp
mov
fidivrl
rcrl
lds
out
inc
push
push
popl
inc
xor
mov
pop
push
jge
pop
xchg
sub
push
xchg
xchg
js
mov
mov
in
xor
je
pop
out
jge
cmpl
jbe
mov
push
jmp
or
sub
xchg
rol
inc
mov
pop
repnz
sbb
testb
pop
nop
fs
ss
scas
ret
sbb
dec
dec
jbe
pop
rcll
outsb
cmpb
sub
sbb
jnp
ss
push
push
mov
and
or
push
orl
cmp
or
mov
stc
cmpsb
aam
add
arpl
jp
mov
int3
mov
push
sub
cli
aad
das
mov
cld
test
push
fucom
cmpsb
dec
xchg
sahf
xor
out
sub
in
xchg
cs
jge
and
mov
jnp
rorb
dec
aad
mov
aas
and
fwait
add
mov
mov
cmpsb
sbb
pop
jns
pushf
inc
aaa
fisubrl
xor
inc
ss
inc
lods
xor
bnd
xlat
stos
xchg
fstps
pop
loop
jg
sub
test
loop
pop
jae
inc
pop
out
je
pop
xor
push
in
test
cs
jg
stc
adc
sarl
inc
scas
inc
jns
loopne
xchg
mov
xchg
mov
call
notl
rclb
add
jecxz
jp
cmp
ja
dec
cs
pop
out
lea
jbe
cmpsl
cmp
pop
add
add
mov
xor
jecxz
adc
mov
mov
jecxz
frstor
outsl
iret
sub
repnz
test
aas
inc
mov
shll
stos
notl
div
ja
dec
pop
pop
jno
sbb
cmp
mov
pop
jge
shll
filds
inc
or
stos
ja
mov
cmp
cmpsl
jl
xchg
adc
mov
test
cmpsl
lock
es
aad
cs
inc
xor
lock
pop
insb
inc
adc
xchg
sub
repnz
in
aam
pop
mov
daa
mov
sbb
inc
loope
adc
ljmp
xor
inc
adc
xor
cs
rcll
sbb
mov
int
sbb
stos
mov
clc
xchg
ja
test
int3
mov
repz
in
push
mov
dec
leave
or
dec
dec
push
movsl
jl
pop
xor
jmp
sbbl
cltd
push
dec
pusha
les
jo
cmp
mov
pop
mov
inc
xor
xchg
mov
dec
rcrl
mov
adc
subl
daa
jg
sbb
push
xorl
movsb
movsb
mov
fsubr
fidivl
shl
sub
mov
rolb
mov
hlt
cld
sbb
aam
es
out
test
int3
jmp
xor
mov
inc
popf
aad
inc
imulb
jl
ss
mov
jge
fwait
and
sub
push
add
movsl
enter
stos
jmp
fucomip
out
jbe
xor
jae
stos
adc
pop
js
mov
sub
pushf
jb
dec
mov
push
pop
mov
pushf
push
daa
ret
inc
cmpsl
mov
push
out
and
mov
inc
cld
inc
inc
sbb
push
push
notl
xlat
aas
fsubl
mov
incl
adc
into
inc
sub
mov
dec
mov
pop
ret
dec
fbld
xchg
sub
add
aad
xchg
gs
pop
int3
mov
mov
arpl
cltd
xchg
jns
push
daa
pusha
out
xchg
adc
rcr
loop
or
int
lods
ja
shlb
inc
adc
gs
sub
jne
push
sahf
add
dec
shlb
cmp
jg
mov
xor
jg
loope
push
inc
mov
xor
subl
push
mov
jg
jge
dec
leave
pop
in
jnp
jno
pop
xor
fcomps
lock
pop
mov
dec
or
in
daa
xor
pop
mov
subb
int
pop
sub
mov
xor
movsb
inc
jecxz
mov
mov
fisttps
xchg
loopne
sbb
sub
imul
xor
rorl
out
jae
jecxz
jmp
mov
jb
stos
imulb
out
jae
test
xlat
jne
je
data16
data16
mov
clc
rcrl
iret
pop
jl,pt
xchg
lds
aad
xchg
or
iret
mov
dec
sbb
outsl
shll
fs
mov
or
and
ss
movsb
push
push
test
std
in
jg
mov
jle
mov
jns
cmp
mov
lea
add
cltd
arpl
jmp
or
pop
cmp
xchg
cs
shrb
test
jp
or
or
cmp
aas
fistps
ljmp
jg
inc
test
jnp
xor
mov
pop
lahf
cs
jg
add
push
stc
push
test
mov
gs
addl
and
rcrb
mov
cwtl
push
in
mov
ret
jg
mov
jmp
xor
popa
hlt
or
or
out
jo
xor
pop
xchg
shlb
xchg
fidivrs
ret
mov
adc
jbe
ds
rolb
lret
push
inc
mov
sub
xor
ret
jo
out
mov
sub
sbb
orb
xchg
sub
les
fidivs
fcmove
fs
add
out
jmp
aam
ror
mov
lods
cmp
push
bt
fwait
cmp
push
add
jecxz
loope
cwtl
adc
imul
stc
leave
and
into
xchg
scas
add
repnz
xchg
mov
aas
dec
lahf
rclb
fwait
call
outsl
inc
shlb
push
jo
mov
sub
pop
insb
out
faddl
cmpsl
imul
mov
push
xor
sub
push
sbb
or
xchg
add
sbb
test
fdivs
jno
push
cmpsl
fisubl
insb
pop
fs
sarl
pop
xor
mov
mov
push
xchg
scas
and
ja
pop
cmpsl
pop
shll
add
cwtl
out
sub
imul
dec
mov
jns
mov
push
adc
or
dec
sarb
in
add
popl
xor
pop
fld
dec
mov
mov
icebp
inc
sbb
bound
std
aad
out
test
jb
scas
push
or
inc
jmp
cmp
jmp
xchg
mov
and
cmp
dec
outsl
test
jno
nop
shr
movsl
out
imul
sbb
sbb
dec
or
adc
sub
cmc
ds
gs
cmp
adc
ljmp
cmpsb
push
nop
mov
test
xchg
mov
dec
add
fmul
shrl
shr
cmc
and
or
das
jge
clc
scas
push
insb
inc
sbb
mov
add
or
lret
sub
xchg
popf
arpl
mov
mov
cmp
or
cs
jb
lret
jg
stc
frstor
ret
cmpsl
cmp
mov
mov
test
shll
stos
out
test
outsb
pop
shrb
mov
inc
fcoml
icebp
mov
jno
and
je
jl
cwtl
mov
push
inc
add
out
pop
xor
loop
mov
ret
and
insl
stc
out
cwtl
addr16
je
lret
test
inc
into
js
jbe
xchg
push
sbb
pusha
subb
push
jbe
lret
jne
mov
leave
hlt
cmp
icebp
shrb
mov
ds
lods
lock
imul
mov
scas
repnz
lea
repnz
shrl
inc
or
push
sub
cmp
pop
fwait
xor
lock
inc
pushf
fimuls
sti
or
jle
push
add
push
in
addl
and
mov
sbb
xchg
idivb
dec
movsb
mov
iret
pop
andl
fsubrp
or
xchg
sub
add
lds
stos
cmp
in
leave
xchg
fidivl
mov
in
test
dec
loopne
add
cmp
xlat
addr16
loope
mov
push
add
xchg
int
dec
movsl
mov
repnz
jae
adc
aam
call
bound
xor
sbb
xor
les
fucomi
dec
xlat
or
popf
sub
testb
push
dec
pop
out
icebp
mov
jl
ret
adc
lock
sahf
fucomp
nop
pop
inc
fbld
jae
jmp
push
lds
ss
lcall
and
inc
lods
xorl
and
cmp
add
push
mov
mov
lret
mov
dec
lahf
lods
push
mov
sbb
push
cmp
sbb
ret
loopne
in
add
cmpsl
scas
orb
nop
pusha
mov
push
sbb
dec
sub
jb
call
adc
sbb
inc
push
inc
pushf
jg
add
cs
loopne
sbb
out
pop
ficoms
aas
popa
lock
lock
loopne
dec
xor
inc
addr16
mov
lods
lea
faddl
fdivs
or
adc
mov
addr16
cmp
mov
ds
es
nop
ss
push
mov
or
mov
pop
fs
ficompl
xchg
sub
dec
addr16
adc
xor
xor
stc
mov
sub
out
shrb
in
xchg
dec
cld
mov
clc
cmp
and
or
leave
jnp
xchg
outsl
add
rclb
mov
cwtl
lods
cmpsl
cld
push
in
adc
aas
inc
push
icebp
push
movsb
mov
ret
hlt
mov
jecxz
mov
add
add
cmp
adc
push
mov
cmp
aas
sti
lock
push
fdivp
xorl
ret
lss
cmpsl
ds
or
das
cmp
mov
pop
out
fwait
xchg
xor
add
das
cmp
mov
xor
cwtl
cmp
sti
xchg
mov
outsb
cmp
insl
pop
es
xchg
cld
repnz
sbb
outsl
shl
fdivrl
pop
cwtl
int
cwtl
jb
jle
mov
cmp
js
sbb
or
sub
aas
push
cltd
mov
sub
xor
xchg
inc
faddl
and
mov
sahf
aam
cmpsl
enter
cwtl
je
push
imul
xchg
xchg
cmp
adc
cltd
push
xchg
sub
es
icebp
and
mov
push
xor
inc
jge
or
add
out
cmp
out
in
adcl
cmp
cmp
inc
lret
bound
inc
fisttpl
int
das
add
pusha
test
jge
cmp
pop
sub
fnstsw
pop
insl
shr
jmp
loopne
mov
int3
mov
je
pop
shll
rorb
xchg
push
push
or
test
mov
test
sub
mov
aaa
mov
adc
loope
cmp
cltd
xor
xchg
add
loope
fs
imul
adc
pop
dec
movl
and
push
ss
hlt
jae
iret
fildl
push
and
jle
or
clc
shll
mov
lea
inc
cmpsb
cmp
in
inc
sub
sbb
or
xor
in
fildll
cmp
pop
mov
dec
aad
dec
aaa
idivb
pop
daa
jbe
sub
cld
push
mov
nop
pusha
adc
nop
mov
call
pop
add
fisttpl
dec
and
cmpsl
xchg
pushf
jmp
ret
xor
cmpsl
pushf
dec
xchg
and
sub
push
ficompl
add
pop
in
scas
cli
push
iret
sbb
xor
fistpll
fsts
iret
push
pop
in
mov
sbb
jge
pop
mov
jmp
mov
lds
mov
rclb
jno
outsl
out
xorl
call
sub
jge
lock
cmp
shll
xor
add
cmp
pop
or
ds
cld
xchg
adc
mov
add
mov
hlt
lret
mov
add
shrl
xchg
lret
add
xchg
scas
push
push
mov
insl
ret
sub
lret
add
push
scas
sbb
cld
shlb
data16
jg
mov
adc
push
aas
mov
stc
imul
push
aad
shl
mov
fidivs
mov
test
adc
sbb
pusha
pop
pusha
mov
jg
jge
xchg
insl
adc
in
jbe
pop
sub
adc
shl
mov
scas
pop
dec
mov
push
andl
xor
shrl
add
ljmp
mov
out
xchg
push
inc
xchg
push
pop
movsl
cmp
xchg
jnp
mov
shrl
sbb
loop
lea
fcompl
xchg
movsb
sbb
inc
cmp
mov
fnop
jp
adc
ret
pop
sbbb
mov
and
xor
pushf
in
mov
mov
cmpsl
mov
ret
outsb
hlt
or
cmpsl
sbb
leave
call
mov
jge
add
and
stc
iret
mov
jp
daa
shrb
sbb
in
lds
mov
stc
xlat
loope
test
pop
cmpl
hlt
fwait
loop
xchg
aaa
aad
ss
xlat
lret
mov
cmp
or
pop
testl
mov
adc
sub
mov
js
inc
cmc
jae
lcall
pop
lret
pushf
loope
fcomi
mov
arpl
out
int3
xor
or
inc
into
orb
pop
xlat
mov
jne
scas
ret
pop
and
dec
jmp
pop
pop
dec
stc
fnsave
sbbb
sub
mov
ds
cwtl
mov
mov
lea
cwtl
lock
inc
sbb
jnp
loopne
push
mov
and
cld
mov
and
jns
inc
inc
xchg
pushf
and
push
mov
stos
mov
leave
and
push
jmp
jp
sub
inc
mov
pop
or
unpcklps
dec
out
mov
jmp
mov
pop
xchg
repnz
xor
xor
push
movsl
push
adc
daa
pop
xorb
inc
push
cli
cmp
in
rcrb
mov
mov
add
push
aam
orl
and
mov
ret
or
mov
or
cli
fnstsw
push
jmp
scas
addr16
in
sub
sbb
mov
mov
orb
push
sub
cmp
inc
gs
pop
mov
jl
outsl
cmp
inc
iret
lcall
cmc
mov
add
add
xchg
in
jle
clc
cmpsl
inc
cmpsl
and
xchg
scas
dec
sti
or
xor
mov
xor
mov
sbb
or
movsl
and
loope
xor
fwait
add
pop
imul
xchg
push
cmp
dec
push
enter
pop
icebp
les
vpcmpeqb
or
and
or
enter
adc
sbb
aam
push
inc
popa
fucomip
out
out
test
inc
into
xor
push
das
xor
cmp
and
push
add
mov
das
pop
shll
hlt
aaa
push
jl
sahf
mov
rolb
test
mov
lahf
inc
filds
hlt
notl
xchg
stos
or
xchg
js
xchg
push
cmp
imul
inc
out
daa
or
mov
mov
cltd
dec
sbb
sub
xorb
lods
mov
call
mov
call
lods
mov
xor
lods
sub
imul
lock
mov
cmpsl
mov
int
mov
and
add
insl
jl
popa
mov
xchg
lahf
mov
dec
out
into
gs
push
cmpsl
inc
mov
jae
stos
lods
lret
ret
js
jl
jmp
jnp
addl
add
les
lods
sbb
jp
pop
mov
popa
mov
xchg
popf
jnp
stc
aas
int3
out
jecxz
cltd
xor
out
mov
jmp
dec
sbb
xchg
sub
aad
xor
cltd
loopne
lahf
cwtl
mov
out
test
mov
xchg
insl
jnp
mov
mov
jp
andl
push
std
sbb
cltd
push
mov
adc
inc
cltd
xor
sub
xchg
mov
fisubrl
sub
imul
cltd
gs
fsub
push
popa
clc
jb
rol
sbb
ret
subb
lret
and
les
das
cmp
pop
aam
sar
mov
fcmovnu
jge
inc
jg
jb
std
jo
and
iret
push
xchg
notl
push
insb
mov
inc
arpl
bound
fmuls
jg
loope
leave
inc
inc
not
outsb
xlat
shr
pop
pop
jecxz
arpl
or
add
cwtl
and
xor
stos
mov
xor
data16
bound
dec
push
scas
push
les
push
add
sub
aam
ss
add
mov
mov
xchg
inc
ffree
mov
sbb
pop
mov
lods
repnz
pop
mov
mov
inc
call
mov
pop
dec
add
add
out
dec
sub
lahf
outsl
cmpsl
outsb
inc
inc
mov
mov
fwait
movsl
in
and
pop
sub
jle
scas
cmp
pop
outsb
iret
pop
jp
aas
adc
cwtl
sbb
repnz
jo
call
lcall
and
pop
pop
test
loop
jge
xor
sub
push
sbb
xchg
or
xchg
lods
lahf
ss
repnz
mov
mov
xchg
add
and
pop
cwtl
sbb
dec
pusha
inc
stos
mov
push
or
sbb
fwait
pop
fldenv
mov
pop
inc
push
les
xor
mov
repnz
and
push
hlt
outsb
std
out
test
mov
shrb
or
imul
pop
xor
leave
pop
sub
insl
jg
rcrl
test
jp
xchg
out
out
or
cmp
outsl
sbbl
mov
cwtl
sub
icebp
mov
out
mov
out
test
and
push
call
mov
outsl
icebp
es
or
inc
sub
rcl
sbbl
mov
inc
or
sbb
jns
mov
jp
sbb
movsb
scas
rorl
fbstp
sub
imul
push
xchg
cmc
repnz
mov
or
mov
push
mov
push
jne
pop
test
fwait
xchg
sub
cmpsl
mov
rcll
jmp
mov
arpl
pop
mov
mov
cmp
addr16
pop
add
inc
lods
imul
push
loopne
jge
test
mov
inc
testl
iret
fldcw
xchg
out
adc
out
lock
xchg
push
xor
adc
adc
in
cmpsl
imulb
adc
jo
fistl
mov
cli
test
lret
jg
icebp
xchg
dec
mov
test
loop
cmp
mov
cmp
sbb
fnstsw
ficomps
mov
sbb
jns
sbb
aas
mov
fprem
cmpsl
pusha
mov
xchg
enter
mov
stos
mov
sub
ja
adc
add
pusha
pop
xchg
dec
adc
cmp
adc
stos
jge
in
inc
in
mov
dec
sbbl
adc
popa
xchg
addb
dec
ret
pop
and
push
loope
xchg
cs
sbb
sub
sub
arpl
in
ret
mov
cmc
fchs
dec
addb
and
lret
adc
pop
sbb
imull
pop
rorb
mov
fdivrl
in
cli
adc
popf
mov
mov
cmpl
scas
movsb
jle
pusha
popa
mov
loop
js
lock
and
mov
jb
push
push
pop
sbb
testl
outsb
mov
cmp
leave
or
shl
adc
mov
int3
arpl
mov
movsb
ljmp
imul
xchg
add
in
cld
pushf
jnp
mov
pop
cltd
mov
cs
dec
fistps
lret
cmp
test
add
daa
or
loopne
fildll
mov
sub
push
data16
add
cmp
pop
or
lods
mov
cmp
cwtl
sub
repz
ret
insl
rclb
mov
repnz
pushf
sub
stos
jg
out
jl
fsubr
lea
dec
sbb
out
pop
in
lods
or
jl
inc
loope
sahf
sbb
lods
inc
adc
dec
lret
repnz
mov
mov
mov
dec
pop
ds
imul
scas
cmp
loopne
add
dec
cmp
out
rcl
loop
or
mov
notb
testb
jb
bound
cmpb
pop
js
pushf
mov
fidivl
push
mov
and
faddl
pop
or
push
lods
inc
mov
out
pop
hlt
mov
je
fdiv
xchg
mov
inc
lret
fsts
inc
sarl
inc
stos
sub
mov
xchg
sbb
dec
lods
xchg
and
xchg
pop
inc
in
adc
or
mov
rclb
scas
aad
in
push
pop
cld
repz
andl
jl
mov
mov
mov
pop
mov
mov
xor
push
rcll
mov
jae
loop
filds
sbbl
nop
out
dec
sbb
cmp
aas
fidivl
adc
xchg
mov
test
mov
repz
stos
sbb
lcall
xchg
inc
fdivs
pop
pop
cmc
in
mov
sbb
repnz
xor
mov
mov
push
sbb
jl
and
aas
mov
sub
mov
add
scas
add
ds
dec
cwtl
or
mov
mov
mov
outsl
loopne
add
fnsave
dec
loope
shrl
sbb
adc
lock
scas
push
and
stos
xor
insl
jnp
inc
shrl
cld
rorb
imul
and
mov
jne
xor
test
push
shrb
notb
jae
push
or
mov
adc
and
sbb
sub
dec
lea
fldenv
lret
xchg
imul
addb
pop
loop
adc
stos
mov
push
jg
or
aam
push
mov
loope
lcall
mov
mov
push
inc
sar
fimuls
cs
sti
pop
fstpt
inc
pop
push
cwtl
mov
fsubs
sti
mov
ss
push
adc
dec
inc
cmpsb
fildll
dec
in
test
cmpsb
mov
insb
rcl
outsb
fbstp
repz
cmp
std
or
mov
test
sub
loope
mov
lods
mov
gs
pop
repnz
xchg
adc
mov
pushf
sub
dec
pop
and
dec
or
push
pop
push
sub
dec
mov
rclb
stos
sbb
repnz
jp
and
pop
mov
jb
sub
into
sbb
test
out
je
xchg
movsb
in
cmp
fmuls
or
out
aam
adc
pop
notl
dec
fldenv
push
addr16
dec
adc
lret
dec
push
bound
cmp
xor
in
add
jle
rorl
cmc
into
inc
mov
xor
ret
js
dec
repnz
xlat
dec
and
enter
push
add
sub
sub
jne
xchg
cmpsl
lods
pop
sub
mov
xchg
les
pop
push
sub
or
xor
cli
popa
mov
mov
loope
negb
hlt
lock
in
inc
in
lea
aas
cli
test
add
mov
lock
push
stc
nop
ja
in
add
inc
sub
xchg
int3
loope
mov
loope
xor
stos
clc
pop
xchg
lods
inc
ljmp
dec
cmp
sbb
mov
out
iret
jecxz
jecxz
fldl2t
xor
sarb
sub
cmp
cmpps
ret
shll
mov
sbb
je
dec
cmc
insl
and
dec
pop
pop
add
je
inc
sbb
mov
stos
push
sub
sbb
jne
addr16
xchg
push
inc
testb
popa
push
aaa
dec
repnz
sub
fsubr
ret
nop
sti
leave
or
cmp
imul
dec
out
cmpsl
out
inc
mov
sbb
fcoml
xor
mov
inc
pusha
or
dec
push
mov
rol
ss
test
dec
push
outsl
fcmovbe
ljmp
fcmovnu
mov
dec
mov
into
outsl
push
cmpsl
jp
ret
ret
and
enter
je
int
ljmp
aas
and
cld
push
addl
sti
sub
push
mov
xchg
sub
dec
lods
inc
xchg
dec
mov
xchg
mov
xor
out
sarl
mov
ss
dec
fbld
ss
jae
dec
es
popf
stos
push
cvttps2pi
out
loope
or
or
mov
rcrb
pop
subl
inc
xor
push
fwait
in
sub
stc
lods
insb
js
dec
mov
inc
or
loopne
sub
pshufw
mov
push
xchg
hlt
test
add
movsb
sub
xor
jg
pushf
sub
mov
das
sub
aas
bnd
cmp
push
and
test
dec
fucomp
mov
jo
dec
fiaddl
das
xlat
testl
pop
push
xor
mov
aam
mov
bound
and
sar
xchg
fcomps
mov
lods
push
push
or
call
dec
add
inc
sbb
pop
add
leave
scas
outsb
pop
js
dec
sbb
jp
in
and
in
add
and
popa
into
scas
scas
inc
inc
adc
lret
bound
shrb
mov
jo
add
sbb
out
les
outsb
add
mov
xchg
lods
in
push
mov
and
mov
pop
add
dec
clc
and
jne
push
loop
xchg
push
fldl
gs
ljmp
adc
sub
lret
cli
pop
repnz
aam
popf
ret
sbb
data16
mov
subl
or
or
daa
push
xor
out
dec
std
and
lock
mul
loope
rcr
dec
repz
jl
add
mov
call
or
fwait
cld
mov
mov
mov
aam
mov
js,pn
stos
popf
ja
loopne
lds
cmp
or
or
packsswb
rcrl
arpl
ljmp
mov
lret
mov
dec
adc
and
xchg
or
inc
mov
and
mov
inc
cmp
std
loopne
sbb
pop
mov
cltd
xor
cmp
adc
ss
sub
push
ljmp
call
sbb
call
pop
push
cwtl
lahf
push
pop
mov
mov
and
mov
es
inc
andl
fstl
pop
test
and
ja
jbe
out
push
fnstenv
push
scas
scas
dec
cli
mov
dec
ja
mov
in
test
notl
cmp
test
dec
cmp
xor
mov
leave
pusha
push
or
sti
add
cmpb
mov
mov
jnp
fcompl
mov
inc
lea
or
xor
pop
inc
add
adc
mov
ret
js
cmc
dec
cwtl
das
jle
cmp
sub
dec
loop
add
xor
stos
outsl
adc
jecxz
xor
mov
inc
ss
jae
push
sahf
xchg
ds
aas
dec
or
push
leave
scas
out
mov
inc
xchg
repz
scas
xchg
nop
fs
addb
adc
inc
dec
into
or
ret
mov
cwtl
jmp
fstpt
daa
shlb
fbld
mov
mov
and
dec
sti
or
lea
lret
aam
sbb
js
loop
imul
hlt
dec
add
in
out
push
pop
jae
lds
mov
add
cmpsb
pop
aas
sbb
inc
and
mov
scas
and
inc
adc
add
jge
mov
flds
mov
fiaddl
lods
or
fwait
out
push
sub
lods
push
cld
test
mov
movsl
aaa
dec
xchg
mov
leave
test
sbb
mov
ljmp
insb
test
lods
stos
aaa
fsts
mov
mov
stc
xchg
sbbb
loop
jecxz
pop
push
outsb
popf
push
sub
or
popf
addr16
pop
insb
cld
pushf
mov
pop
in
push
cltd
hlt
ret
push
fcomip
inc
fisubrl
jmp
adc
push
fldenv
movsl
sub
call
bound
aad
or
dec
ds
dec
sbb
adc
aas
mov
packsswb
xchg
dec
sub
bound
outsl
mov
sarb
sbb
lea
sbb
fwait
pop
sbb
fcomip
sbb
adc
mov
and
std
leave
mov
push
ss
add
sub
jmp
cmp
repnz
jno
pop
lcall
and
and
movsb
lods
mov
push
or
jnp
int3
repnz
cli
or
insb
dec
dec
lods
cltd
pop
mov
mov
cwtl
aas
push
sarl
negl
jne
xor
adc
repnz
ret
shll
imull
daa
fnsave
and
or
das
sub
nop
pop
test
fwait
hlt
dec
gs
mov
aas
out
js
jbe
cmp
xchg
es
pop
shll
fs
mov
clc
mov
sub
mov
add
push
mov
inc
das
mov
jbe
inc
push
xchg
dec
loop
mov
jl
imul
xchg
sahf
xor
loop
mov
fcomps
outsl
sbb
hlt
scas
les
vcvtsd2ss
xor
or
dec
pop
push
outsl
push
rolb
adcb
inc
fwait
cmpsl
shrb
or
sbb
mov
aam
pop
mov
xchg
sbb
outsb
jle
jl
lahf
int
rcl
push
clc
xchg
cmp
add
inc
aaa
xchg
icebp
or
insb
jle
mov
int
sahf
adcb
ds
mov
fidivrs
pop
lds
and
adc
inc
fsubr
and
pusha
push
or
repnz
inc
sbb
lds
mov
mov
les
movsb
leave
imul
jmp
mov
neg
jbe
jno
push
std
xor
mov
push
stos
das
popf
mov
mov
jno
in
out
shrb
clc
stos
add
loop
push
das
ja
jmp
ja
dec
pop
dec
cwtl
int
idiv
popa
divl
in
dec
xchg
jle
inc
jle
movsl
push
bound
xchg
js
ret
lahf
pop
push
mov
mov
loope
inc
adc
adc
std
pop
pushf
testl
add
in
out
xchg
sbb
testb
cmpsb
mov
mov
into
mov
shll
jae
mov
dec
rcl
in
inc
std
jne
pop
hlt
mov
pop
push
and
sbb
in
ljmp
xchg
mov
jg
arpl
pop
pop
mov
cwtl
sarl
xor
jae
cltd
jg
lret
xlat
jmp
pop
out
xchg
push
inc
std
insl
add
aas
pop
loop
dec
mov
and
lds
lret
cld
and
insb
cwtl
fcmovnu
mov
adc
jmp
sub
add
stos
dec
xchg
sub
xor
lea
sub
xor
sbb
push
or
and
xchg
pop
mov
lret
fldcw
shl
mov
adc
fwait
ret
das
xor
inc
push
je
add
je
xchg
test
pop
fidivl
xlat
lock
es
ret
ret
pop
hlt
adc
sub
enter
push
outsl
sub
ljmp
sbbb
or
fisubrl
sbb
call
sub
push
jne
aaa
inc
xor
sti
fistl
xlat
and
cmp
add
mov
bound
shrb
insb
test
inc
in
cmp
pop
jae
dec
jnp
arpl
xchg
and
out
out
test
inc
mov
push
inc
mov
or
pop
jmp
stos
imul
mov
cli
add
fnsave
dec
in
call
or
fyl2x
pusha
push
xlat
lods
test
test
cltd
mov
loop
xchg
cmp
dec
add
xor
pop
mov
push
scas
ret
sbb
jecxz
mov
insb
js
stos
xchg
cs
lcall
fadds
fisubrl
sub
jmp
add
xor
in
out
or
push
mov
call
ret
movsb
xchg
mov
and
mov
pop
adc
mov
cmp
lds
xlat
dec
out
rorb
std
or
mov
xchg
jl,pn
xor
aad
mov
lea
jmp
or
ds
mov
out
or
into
push
xor
mov
add
dec
or
add
mov
push
mov
test
aad
jae
jno
daa
mov
push
mov
pop
sub
xchg
cmc
lock
insl
jge
pushf
daa
gs
xlat
mov
cltd
mov
add
iret
or
add
mov
repz
adc
lret
add
push
sub
sbb
jne
xor
sbb
mov
or
cmpsl
dec
xchg
fcmovu
add
xchg
and
iret
sbb
jbe
jecxz
adc
and
enter
loope
inc
fldcw
add
pusha
or
and
cs
xchg
dec
imul
cmpsl
xchg
or
cli
idivb
icebp
lahf
clc
rcr
push
int
xor
iret
mov
ficoml
enter
fdivs
xor
cli
cld
mov
enter
sbb
imul
repnz
arpl
adc
xor
pop
mov
and
incb
out
and
fcomps
lea
jo
jno
add
pop
lock
jg
dec
adc
mov
aaa
xlat
mov
not
mov
add
popa
inc
push
popa
aas
push
xor
jmp
xorl
daa
push
fwait
xor
mov
mov
stos
sti
sub
jmp
xchg
orb
or
clc
fisttpl
mov
daa
outsl
xchg
std
jo
sub
fstpl
add
fptan
push
fs
arpl
mov
jl
cmp
push
stos
pop
clc
rorb
ret
pop
jmp
cmc
sbb
ret
aas
sub
insb
jno
out
arpl
jae
cmpsb
ret
add
cmp
hlt
js
loop
ret
insl
pop
cmpsb
sub
or
lahf
cmp
push
cltd
pop
es
out
or
add
cli
pop
lea
sbbb
jg
ret
push
mov
sbb
mov
dec
push
loopne
rcll
fcomps
add
ds
fdivs
ficoms
dec
in
pop
ds
inc
ljmp
arpl
sbb
mov
mov
mov
adcb
or
cmp
jne
xchg
dec
xor
hlt
mov
jns
rorb
cmpsb
jle
adc
mov
pop
stos
imul
sti
hlt
adc
je
pop
cmpsb
push
jp
sbb
movsb
stos
mov
aam
std
subl
loope
push
es
mov
adc
je
outsb
cld
insb
add
dec
fstp
mov
faddl
sbb
es
mov
adc
repz
push
push
push
sti
and
test
sub
dec
loope
xor
lods
mov
into
mov
cmp
leave
enter
in
push
call
test
jmp
xor
jbe
fnsave
pop
fiadds
mov
xor
imul
jge
pusha
sub
fwait
sti
ljmp
fistpll
cwtl
lcall
into
insb
jle
in
stos
push
xor
push
mov
negl
cmpsb
daa
bndstx
rorb
dec
movsb
cmp
inc
mov
andb
lea
call
int3
mov
stos
call
outsl
repz
cmc
jp
mov
leave
fstpl
mov
dec
insl
outsb
add
dec
fisttps
shll
sub
fisubs
ss
pushf
ss
cli
mov
push
mov
insb
inc
pop
dec
pusha
pop
push
leave
lock
xor
mov
adc
inc
xor
add
xchg
cs
mov
jbe
mov
negl
inc
fisttpll
mov
pop
in
ret
adc
aas
mov
add
or
hlt
push
mov
je
push
popf
or
sarl
scas
xchg
cld
inc
mov
jg
push
pushf
jnp
xchg
es
mov
mov
incl
cmpsb
jg
inc
mov
dec
mov
lahf
jmp
cwtl
es
lods
sarl
ja
movsl
mov
test
andb
add
aam
leave
xchg
lods
inc
mov
rclb
cmpsl
pop
lods
xlat
jmp
jp
xchg
fs
loop
xor
mov
jecxz
faddl
cmp
dec
shlb
shll
xchg
stos
push
je
xor
shl
xorl
ret
push
sub
popf
rcrl
sbb
dec
and
int3
fnstsw
mov
ret
pop
sub
mov
subl
xor
imull
subl
aas
mov
divb
jae
jl
nop
xchg
mov
imull
or
pop
mov
jl
sbb
jle
in
xchg
addr16
jnp
ud0
into
mov
rorl
in
jp
pop
test
push
push
cmp
mov
fstpl
ss
repz
cmp
jg
inc
loopne
mov
and
cmp
add
or
inc
xor
sub
adc
imul
or
jbe
cmpsl
cmp
add
fldenv
in
test
mov
insl
insl
jnp
ljmp
cmp
stos
pusha
jl
pushf
adc
mov
fsubr
cli
inc
imul
roll
into
cltd
repnz
lret
lcall
inc
jge
arpl
jg
sbb
orl
cli
out
adc
fsubrp
lcall
int
loope
outsl
pushf
sbb
jae
loop
sub
sub
mov
mov
sti
jbe
lea
dec
pop
repnz
pop
push
pop
mov
mov
out
adc
loopne
inc
sbb
xchg
shll
dec
xorl
adc
or
pop
es
pushf
xchg
adc
out
les
cmp
dec
out
inc
hlt
xor
rorl
addb
js
mov
adc
sub
mov
sbb
or
cmp
fldl
mov
aad
insl
jge
shll
test
xchg
fistl
lock
ffree
pop
sub
cwtl
inc
js
mov
shlb
jno
push
pop
xor
xchg
scas
mov
loopne
int3
adc
mov
mov
out
cltd
pop
xor
pop
sub
pusha
pop
dec
and
xor
pop
call
loopne
push
testb
data16
icebp
xchg
cli
ljmp
movsl
nop
daa
notb
int3
scas
mov
call
mov
jle
adc
adc
test
ja
out
xchg
sbb
dec
push
dec
into
enter
adc
push
cmp
lods
popa
add
add
mov
xor
and
mov
mov
ret
jecxz
imul
call
mov
mov
push
cmp
xor
inc
rcll
into
in
jl
pop
pop
cltd
cmpsl
sti
mov
mov
mov
jp
aas
lret
xchg
dec
jmp
hlt
sbb
sbb
outsl
mov
mov
jmp
adc
ss
clc
addr16
imul
adc
mov
fldenv
or
mov
pop
cltd
popa
clc
leave
add
imul
sbb
clc
mov
shrl
outsl
mov
jne
popa
notl
shll
into
pop
arpl
pcmpeqb
cmpsl
lods
ja
test
xchg
addps
and
ficompl
int3
shl
stc
enter
sbb
bound
or
sub
pop
jp
insb
mov
jne
lea
lea
lods
imul
psadbw
add
push
mov
jecxz
mov
dec
hlt
or
js
icebp
shl
and
ja
pushf
inc
stc
or
test
and
jns
lret
aaa
rcrl
lock
mov
jmp
adc
dec
lret
pop
loop
pop
es
imul
das
test
jp
pop
dec
fdivp
sbb
jmp
idiv
shlb
in
adcl
sub
shrb
inc
int3
mov
mov
xlat
cmpl
mov
addr16
mov
push
cmp
testl
cmp
lock
push
pop
add
xchg
stos
adc
cld
xor
fsubrl
jecxz
jb
into
das
sub
jb
push
push
push
ret
sbb
sub
add
mov
enter
int3
pop
ret
ror
cmpsb
clc
sbb
dec
mov
scas
cmpsb
sub
xor
mov
aaa
es
rorl
ss
pushw
out
mov
sub
scas
lock
pop
popf
pop
shlb
aaa
or
sub
scas
scas
add
xchg
dec
fbld
mov
xor
push
mov
aaa
and
jo
push
outsl
movsl
aaa
cmc
jl
inc
sub
out
into
nop
aam
sbb
mov
and
outsl
addb
xor
push
adc
mov
mov
add
pop
jmp
push
ljmp
add
repnz
rcrl
mov
adc
andb
imul
fstl
push
xor
fdivrl
jge
out
add
xchg
xchg
ja
jle
loope
lcall
clc
lock
dec
aad
popf
or
nop
pop
cmp
add
push
adc
outsl
gs
clc
aam
add
ds
push
mov
ss
add
pop
xchg
sbb
xchg
leave
push
in
add
jmp
xor
stc
push
outsl
jle
fisttps
sarb
insb
sub
hlt
or
outsl
inc
lahf
outsb
xlat
fnsave
xor
jae
gs
cmp
push
or
cmp
dec
fisttps
jg
cmp
sbb
push
push
push
clc
push
adc
pop
xchg
das
dec
arpl
in
test
push
adc
xor
or
or
mov
dec
aaa
inc
add
loope
aad
cmp
cltd
mov
mov
stos
mov
mov
inc
aas
loopne
out
cld
ret
fsts
pop
loope
pop
pop
xchg
test
mov
sbb
jl
insb
jle
jns
js
fstpt
bound
sbb
jp
xchg
dec
mov
mov
movl
sub
std
jne
out
lcall
fists
jg
in
push
cmp
lea
or
push
inc
std
cmp
idivl
rcrl
imul
mov
adc
leave
pop
repnz
arpl
mov
or
iret
lods
jbe
aad
mov
jns
std
mov
insl
leave
xchg
xchg
jmp
sub
test
jmp
push
adc
jns
dec
lods
push
pop
xor
sbbb
fs
pushf
sbb
jp
mov
cmc
lods
mov
stos
into
lea
dec
cmp
bt
or
jp
stc
and
clc
bound
into
jmp
mov
sbbb
loop
push
lret
sahf
sub
int3
stos
loope
and
iret
jbe
aam
dec
xchg
test
jp
jecxz
mov
jae
xor
cwtl
xor
sub
and
cmp
fldl2t
loop
sbb
mov
ds
jmp
xchg
repz
xchg
add
mov
imul
jecxz
xor
into
mov
adc
push
cmpsb
mov
or
jbe
jo
mov
inc
fnclex
add
into
sub
js
int
popf
adc
pop
in
inc
push
pop
shrl
mov
xor
inc
jmp
lods
sbb
sbb
pop
inc
addb
mov
xchg
inc
fisttpll
inc
dec
int
fnstsw
mov
mov
xor
mov
mov
outsb
mov
inc
and
cmc
nop
adc
sbb
icebp
movsl
movsl
or
out
mov
or
mov
add
push
inc
test
mov
ljmp
int3
bnd
inc
dec
push
cmp
data16
push
icebp
mov
stc
cli
jne
js
aas
cmc
int3
jg
pop
adc
rolb
outsb
pop
fsubr
sub
and
xchg
push
fmulp
out
xchg
push
fs
daa
inc
sub
cmp
jns
mov
jb
mov
push
rclb
loopne
pushf
adc
dec
cld
pop
xchg
sbb
lds
inc
cmp
imul
or
outsl
xchg
sub
rorb
popf
ficomps
cmp
add
mov
in
push
fldt
xchg
sub
setle
movsl
cmp
mov
mov
popa
inc
lret
ja
roll
pop
dec
push
pop
fidivl
pop
rcll
shlb
scas
stos
lcall
or
stc
popa
or
jge
xchg
adc
frstor
xor
adc
popf
ljmp
adc
ss
add
mov
std
les
iret
xlat
pusha
jl
dec
stc
xchg
inc
inc
clc
mov
add
inc
dec
out
mov
xchg
jmp
es
adc
fwait
push
or
loop
cmc
adc
xchg
adc
insb
add
das
push
jmp
add
mov
or
out
jl
pop
sub
out
dec
fsubs
jns
vpsadbw
jg
or
fidivl
dec
or
hlt
test
xor
push
jnp
sbb
xor
stc
adc
cbtw
dec
xlat
jecxz
mov
imul
push
sub
int
loopne
sti
scas
jecxz
push
ss
jb
std
mov
in
call
lea
stos
sub
push
scas
icebp
lret
push
jae
fs
pusha
mov
mov
testb
xchg
lods
and
jle
fisubs
xchg
xchg
push
adc
scas
imul
push
add
in
push
mov
loopne
cltd
push
mov
shlb
add
add
sbb
ret
scas
pop
cltd
mov
int3
nop
inc
or
clc
lret
xchg
push
ret
pop
or
cmpsl
cmp
or
lret
push
push
adc
mov
cmpsb
movsb
icebp
pop
cltd
sbb
jle
and
mov
jge
aas
cmp
pop
out
and
fisubrs
cld
addr16
adc
xchg
push
inc
dec
ret
pop
pop
out
cltd
outsb
add
dec
insb
mov
push
sti
pop
pop
scas
sbbl
lahf
nop
and
decl
pop
cmp
sub
enter
xor
add
ret
in
lds
shll
aad
popf
divl
add
mov
inc
fcom
cmp
mov
pusha
gs
mov
xor
mov
dec
dec
pop
cmc
jge
jae
adc
pop
loop
insl
pop
outsb
lahf
stos
imul
in
dec
dec
lock
lods
dec
popf
mov
call
in
add
les
sub
dec
rorl
lahf
and
ljmp
jo
xchg
adc
add
lods
and
mov
mov
stc
dec
rcrl
inc
pop
mov
in
jp
out
test
jns
fcompl
xor
idivb
pop
jmp
pop
add
add
sub
jecxz
jp
xchg
pop
push
sbb
add
bound
xchg
jo
les
or
sbb
jns
ljmp
and
jns
sbb
xor
lock
dec
out
adc
inc
inc
jae
fdivrs
fisubs
xchg
dec
push
and
jle
dec
bound
aam
pop
cmp
xchg
mov
mov
dec
fisubrs
mov
mov
ljmp
push
faddp
imul
mov
cmc
dec
out
dec
adc
pop
sbb
pushl
xchg
xchg
mov
mov
sub
ror
cmp
sbb
sub
test
mov
add
js
cmpsb
imul
inc
mov
cli
test
jg
and
jge
arpl
jl,pn
cmp
inc
out
fidivs
xorb
scas
cld
inc
jbe
push
popf
xor
movsb
jmp
mov
jns
xchg
mov
inc
inc
lret
flds
adc
jae
ret
fcoml
add
cmc
or
movsl
pop
inc
sbb
std
scas
pop
cmc
xchg
pop
sahf
loope
and
or
adc
jbe
xchg
cmpsb
xchg
pop
negl
mov
outsl
scas
mov
mov
fistpll
mov
leave
push
dec
inc
pop
mov
in
push
shlb
pop
add
jbe
push
xor
leave
and
jno
xor
les
mov
sbb
shl
outsl
imul
mov
mov
adc
lcall
into
and
ljmp
insb
rcrb
cwtl
loop
lret
mov
pop
insl
cmpsl
cmp
and
jl
out
aas
dec
dec
adc
or
pop
and
ficompl
test
movsl
icebp
xor
test
enter
daa
inc
enter
push
push
xor
cld
mov
mov
adc
mov
scas
and
fdivrs
mov
or
cmp
adcl
call
and
mov
sub
xor
inc
or
pop
adc
scas
call
add
sahf
lods
popa
arpl
jne
mov
and
scas
inc
xchg
sbb
xchg
jecxz
stc
lcall
repz
dec
fnstsw
js
mov
ficoml
or
xor
cmp
call
sub
clc
jo
int3
loopne
push
jo
rcll
call
xor
stos
pop
pop
shlb
rcrl
sub
mov
test
jno
fcomps
sub
scas
scas
bound
push
ljmp
into
xchg
push
popf
in
sbb
cmc
dec
mov
mov
lods
negl
loope
ret
sti
pushf
daa
call
fidivs
lahf
dec
push
inc
push
jge
jecxz
sub
push
cmp
dec
jecxz
aad
xor
divb
mov
cmp
sbb
mov
cwtl
rclb
add
xchg
gs
mov
jns
insl
out
int
sahf
cmp
pop
inc
mov
jb
dec
nop
lods
je
sbbb
ljmp
cwtl
enter
pushf
repnz
rol
repz
lock
push
adc
cmp
loope
mov
rorl
and
aas
mov
pop
out
push
pop
filds
cmpsl
out
xor
mov
iret
sbb
int
jl
or
mov
push
dec
dec
mov
cmp
call
int
mov
adc
mov
mov
movsb
ja
ucomiss
pop
out
sahf
fs
xchg
lea
jbe
or
fldt
xchg
xor
nop
pop
jg
cmc
aaa
push
dec
xchg
xor
lahf
cmp
roll
pop
lods
outsl
out
mov
xlat
ret
inc
das
call
js
divl
data16
pop
lods
mov
pop
movsl
das
movsl
inc
loope
int
lret
in
jmp
xchg
rol
movb
xlat
lock
fsubl
fbld
mov
xchg
and
lea
ja
in
add
addr16
dec
pop
jns
xchg
pop
cltd
andb
mov
dec
cmp
in
cmc
mov
mov
cmp
mov
rclb
aaa
clc
adcl
push
lret
jle
ficoms
imul
cmpsb
mov
ret
push
sbb
or
dec
fsubl
je
pop
jmp
sub
rcl
inc
dec
mov
xor
cmp
notb
mov
loopne
inc
adc
sub
fldcw
stc
test
je
mov
call
rclb
int
fnstenv
jmp
mov
add
cmc
cmp
push
dec
and
mov
fidivrs
mov
mov
fcoms
data16
push
aaa
and
test
adcl
inc
pop
call
pop
sub
xchg
mov
sbbl
sub
mov
repz
arpl
lahf
scas
mull
add
pop
imul
adc
test
mov
pop
sub
cmpsb
xchg
cmpsl
stos
jns
insb
cs
mov
shl
sbb
rcrb
xor
or
adcl
loope
dec
mov
mov
or
push
test
in
jne
imul
cld
dec
scas
jno
loopne
subl
cli
mov
call
xchg
sbb
call
mov
ficomps
test
xchg
pop
fldcw
jp
sbb
xor
lods
jp
fwait
loopne
movhps
lcall
cwtl
push
xor
mov
mov
dec
std
std
je
in
loopne,pn
jno
lahf
cli
hlt
sbb
or
rcrb
push
push
hlt
lahf
hlt
loopne
xchg
test
jns
xchg
int3
or
push
call
or
fcmovbe
ljmp
jb
sbb
sub
idivl
popa
sarl
loopne
jne
sbb
and
adc
rcrb
add
aad
cli
sub
dec
lcall
sub
lods
in
adc
dec
gs
movsb
jle
cmc
sub
data16
decb
sti
dec
call
cli
push
jb
add
cmpsl
es
or
enter
jnp
dec
and
cltd
inc
stc
or
add
sub
and
out
shr
into
stos
bound
cmp
adc
aas
aad
mov
cltd
add
adc
test
out
into
mov
loop
and
call
push
mov
dec
mov
mov
out
cwtl
nop
add
push
rcll
lret
push
mov
dec
sbb
jo
imul
leave
mov
xchg
fistl
into
fldl2e
pop
imul
mov
mov
or
lcall
icebp
jae
inc
aas
adc
insl
out
or
push
dec
jne
dec
xor
bound
mov
pop
or
arpl
loop
mov
movsb
fidivrs
cmpsw
add
pop
stos
mov
in
jae
add
xor
mov
xchg
sub
jl
popa
jmp
cmp
into
xor
sbb
and
pop
add
ja
lcall
setne
into
lock
hlt
mov
push
mov
mov
adc
cmp
stc
or
cmp
imul
jns
mov
ljmp
cmc
push
inc
fadds
out
jno
insl
scas
mov
sti
pop
inc
repz
xor
mov
pop
rcll
xor
jae
jae
and
inc
fmulp
mov
push
cmp
arpl
out
cmc
mov
cld
inc
jns
mull
ja
lret
fbld
jb
orl
mov
stos
mov
mov
sbb
push
and
movd
fwait
mov
shl
inc
mov
or
push
ja
fbstp
push
push
int3
sub
ljmp
mov
cmp
sti
int3
sub
test
dec
clc
sbb
fistpll
push
in
adc
ret
xchg
sahf
xor
xchg
mov
pop
aaa
add
daa
inc
inc
lret
fistpl
or
mov
and
ret
push
jo
pop
out
repz
mov
xor
pcmpeqd
and
push
xor
cltd
xorl
sub
or
fists
dec
push
jno
test
rcr
fcoml
repnz
aad
inc
fisttps
pop
stos
lahf
fsubrs
sti
test
iret
pop
stc
nop
push
incb
in
pop
xor
dec
mov
dec
sbb
mov
mov
ret
lret
adc
xchg
mov
lds
jg
jge
lcall
enter
test
lahf
popf
fnsave
outsl
jb
push
mov
xchg
scas
and
xchg
inc
xor
or
rcrl
and
sub
mov
inc
in
imul
rorl
clc
stos
mov
sbb
xchg
mov
imul
sbb
dec
in
dec
das
ficomps
lea
jmp
or
add
paddb
aaa
mov
fs
cli
jmp
push
aas
dec
adc
inc
scas
xor
xchg
mov
sub
andb
jo
test
push
cmp
push
sub
add
ljmp
jo
inc
lods
lods
mov
pop
sti
outsl
daa
repz
xor
fisttpl
insl
mov
ret
mov
mov
jp
cmc
push
cmc
jmp
fildll
imul
pop
mov
sbb
push
xchg
sub
add
movsl
mov
or
cmc
jns
sti
sbb
dec
cli
nop
fistpll
jp
cmp
je
les
push
jp
arpl
sub
test
push
push
mov
mov
outsb
sti
mov
mov
and
loope
imul
mov
add
or
push
imul
mov
jne
int
push
sbb
or
push
lcall
jle
in
test
sub
out
adc
pop
imul
sub
mov
popf
cmp
inc
inc
lock
adc
je
lods
push
jb
jg
inc
aad
push
shrl
xchg
out
test
jo
and
pop
push
xlat
nop
movsb
lret
mov
mov
insl
sub
push
mov
scas
fnstsw
xlat
std
or
mov
dec
jmp
sub
pop
push
fucomip
dec
mov
inc
aad
jle
jbe
int3
arpl
cmpl
outsl
mov
xchg
lods
xchg
mov
mov
push
pop
jp
inc
mov
dec
leave
and
mov
stos
xchg
sub
stc
or
scas
dec
mov
cmpl
lret
sti
scas
push
jmp
dec
add
cmp
lahf
aad
add
jns
lcall
jnp
push
js
lock
or
stc
aad
cmp
and
push
dec
movsl
jb
in
aaa
mov
sub
cmc
aam
xchg
movb
fbstp
test
pop
in
cmpsb
lea
jns
xor
adc
cld
add
add
sahf
xchg
dec
add
mov
jmp
in
xchg
stc
test
mov
cwtl
or
mov
dec
and
jg
adc
in
xor
aaa
loop
mov
mov
outsb
and
lea
sbb
pop
inc
loop
fsubr
fucom
scas
and
ja
inc
ret
inc
mov
add
jge
test
dec
mov
inc
int3
push
insb
xor
ja
xchg
into
pop
in
repz
xor
cmp
inc
cmpsb
xchg
xchg
cltd
or
mov
repnz
fistpll
int3
push
mov
jg
dec
test
iret
jbe
lcall
loopne
pushf
out
push
cmp
and
popa
xorl
cmc
mov
es
xor
push
cmpsl
data16
mov
lds
xchg
inc
sub
push
nop
fs
lret
cmp
jns
push
mov
add
popa
subb
lea
xor
sub
pop
inc
dec
sbb
jb
push
insb
push
rorl
lock
xor
sub
in
fidivl
ds
or
push
rcrb
decl
pop
sahf
or
cmpsl
pop
clc
sbb
lock
sub
stos
mov
cld
outsb
xor
cmpsl
out
subb
scas
xor
aam
pop
sbb
xor
shlb
inc
cmp
mov
cmp
jmp
imul
sti
jl
xor
lret
aam
mov
add
aad
mov
js
je
cmpsb
subl
aam
aas
jo
dec
sub
lea
into
cmp
xchg
adc
push
sar
xor
jns
sub
sub
ficompl
push
cmpsl
sub
mov
lcall
pop
or
sbbb
dec
xor
bound
loopne
fisubrs
sbb
ror
xchg
or
fyl2xp1
mov
jo
sbb
mov
rorl
pop
lcall
cwtl
fs
push
scas
jno
les
loop
in
stos
fs
movsw
mov
shrb
pop
dec
adc
adc
pushf
adcb
inc
into
gs
xor
pusha
xor
andl
jmp
and
or
cltd
xchg
es
or
lret
jb
orl
adc
lods
add
pop
pop
ja
or
setbe
pop
testb
jge
cld
jle
loop
sbb
push
js
inc
es
aad
jbe
cmpsb
jno
pushf
test
pushf
push
jmp
in
outsb
aas
or
sub
ljmp
push
and
ficoml
jnp
loop
sbb
call
scas
cmp
fwait
xlat
cmp
jb
inc
testl
or
psubusb
xor
notb
ljmp
and
and
mov
lret
dec
cmp
add
enter
dec
add
scas
add
scas
out
test
rcl
in
sbb
incb
mov
inc
inc
test
movb
pop
xlat
jbe
pop
ret
pop
sahf
hlt
jnp
out
mov
int
pop
jbe
pop
ret
mov
push
call
movsb
in
outsl
daa
inc
jl
mov
test
lret
addr16
call
cltd
test
xorb
add
pop
xor
ret
mov
fdivrs
push
or
cmpl
mov
xchg
inc
in
cmp
mov
movsl
fnstenv
or
cmpsl
out
imul
fidivs
mov
adc
stos
pop
mov
mov
pop
gs
cmp
jbe
mov
es
std
cltd
mov
imull
push
jne
test
xor
pushf
jp
movhps
xchg
pop
cmp
cmp
sub
stos
push
pop
mov
lret
dec
dec
data16
shlb
sbb
xor
fisubrs
mov
or
rcll
and
xchg
and
negl
mov
inc
xor
jb
popa
xor
and
fs
lcall
adc
adc
push
into
outsb
out
mov
orb
repz
xor
orb
loope
mov
jne
or
sub
xchg
out
fstl
and
push
pop
cwtl
das
mov
movsl
lods
mov
loope
cmp
scas
adc
rcll
dec
mov
jo
push
pop
inc
dec
sbbl
push
mov
mov
loop
push
adc
jo
xor
je
enter
mov
pop
cmc
cmp
pop
jl
nop
jne
je
nop
lcall
push
lock
mov
test
xchg
and
push
movsl
fs
call
mov
montmul
cmpsb
add
sub
aad
jbe
test
popw
sahf
xchg
lea
movsl
mov
loopne
xor
dec
sbb
xor
push
pushf
outsl
mov
popf
mov
pop
hlt
fidivrs
jnp
xor
cmp
test
fs
and
sbbb
in
dec
adc
add
jae
pop
mov
xchg
push
mov
enter
repz
addr16
ss
mov
cmc
leave
iret
das
std
inc
shlb
push
dec
in
cltd
out
test
insb
push
lods
popf
cld
cmp
xor
pop
icebp
and
insl
adc
add
pop
sti
scas
inc
sub
dec
int3
arpl
mov
mov
push
jl
sub
add
pop
out
rcrb
cmp
dec
dec
cmp
jge
sbb
rclb
inc
fildl
insb
add
call
mov
dec
dec
pop
icebp
jp
call
rcrl
lds
push
jmp
dec
filds
movsl
mov
and
jl
jb
pop
mov
test
test
jno
les
xor
and
and
inc
clc
jae
popf
xor
stos
sbb
pop
inc
fidivs
rorl
repz
mov
mull
jle
mov
jno
dec
loopne
xchg
sbb
dec
in
fstl
insb
mov
lcall
gs
test
mov
jno
dec
shrb
mov
mov
rorl
jle
sti
stos
pop
data16
dec
int3
sbbb
insl
xchg
dec
mov
mov
outsb
pushf
xor
lea
xchg
or
add
push
xchg
stc
enter
push
add
gs
les
mov
push
out
push
mov
ss
hlt
data16
outsl
mov
outsb
repnz
mov
leave
sarb
stos
xchg
ljmp
sbb
imul
scas
jns
fbld
cltd
dec
sbbl
rclb
popf
xchg
and
xchg
pop
icebp
enter
leave
pop
sbb
mov
push
nop
pushf
test
roll
xor
js
add
fisttps
les
push
jbe
scas
call
pop
mov
push
push
fwait
scas
mov
hlt
mov
imul
dec
loopne
or
aad
outsl
xor
psrad
shrb
outsb
lret
bound
mov
dec
imul
in
js
xor
jnp
adc
jle
scas
aaa
pusha
mull
arpl
movsl
mov
inc
fisubrl
jge
jbe
mov
mov
inc
outsl
add
fucomi
inc
ficoml
mov
test
insl
stos
inc
mov
jb
pop
mov
jae
push
mov
je
xor
jns
xor
mov
inc
loope
or
cmpsl
bound
cmp
mov
enter
shll
fisubl
jno
stos
mov
je
mov
loop
cmp
jge
rcrl
es
lret
or
mov
push
and
cmp
andb
aas
push
out
gs
sbb
adc
fisttpll
adc
xor
sti
inc
fldcw
xor
mov
out
fcoml
or
shrb
enter
lea
mov
or
pop
out
cltd
sub
cmpsl
pop
mov
lds
xlat
stos
inc
add
es
aaa
dec
in
fs
push
into
in
lret
stc
nop
std
pop
insb
add
xchg
dec
jecxz
enter
jmp
fbstp
add
adc
push
fwait
xor
cwtl
cltd
xor
rcrb
add
cmc
mov
xchg
mov
fdivrs
movsb
mov
cmp
inc
xchg
sbb
push
pop
testl
rcl
pop
pop
pop
mov
mov
fbstp
xchg
inc
fcmovb
fcomps
mov
adc
xchg
inc
xchg
and
std
or
rorb
jge
int
mov
clc
push
lahf
subb
mov
mov
pop
stc
dec
mov
andl
cltd
xor
lret
sub
stc
push
mov
jae
lahf
pop
mov
int
sub
push
pop
testb
jne
rcl
inc
fmull
dec
pop
sahf
jp
into
gs
mov
pusha
testl
sbb
rcl
lahf
ss
rep
push
sub
lea
cmp
fbstp
pusha
sub
xchg
repnz
sub
cltd
xor
cmp
mov
je
repz
out
mov
pop
aaa
mov
aam
mov
inc
fisubs
stos
fdivp
faddl
insb
je
jle
das
xchg
out
push
enter
sub
sahf
sbb
fisubrl
fidivs
mov
push
dec
jl
jg
mov
or
int3
jecxz
sub
cs
and
jb
inc
repnz
icebp
mov
lcall
pop
lock
jp
insb
mov
lret
rcr
testb
imul
in
sbb
sbb
sub
lret
sti
mov
adc
sbb
imul
lea
ret
testl
mov
ja
daa
xor
push
mov
pop
call
or
lds
movsl
cmp
pop
push
movsl
inc
stos
pop
neg
popa
shrb
add
xor
cld
mov
xor
out
ja
insl
mov
hlt
mov
xor
lret
mov
mov
imul
cmpsl
in
xchg
sub
cmp
xor
out
movb
nop
jnp
xorb
aad
sahf
xor
mov
add
pop
clc
cmpsl
sub
icebp
inc
dec
fiadds
and
flds
cmovo
mov
ljmp
bnd
or
call
test
add
xchg
dec
shrb
and
insb
jg
cmp
js
pusha
cmp
cmp
cwtl
xchg
mov
jmp
leave
mov
jmp
mov
dec
loop
mov
push
pusha
icebp
fwait
pop
iret
and
pop
incl
mov
pop
mov
xchg
js
nop
pop
lods
cmp
jg
pop
and
dec
les
out
das
repnz
cld
and
rorb
or
out
push
mov
mov
out
imull
out
cwtl
addl
inc
je
pop
jp
daa
cmp
lret
data16
push
dec
dec
xor
jbe
mov
and
mov
xchg
popf
sub
push
outsl
dec
xchg
xchg
pop
cmp
movsb
stos
mov
adc
add
cmpsb
aam
sbb
lock
ret
mov
inc
fstpt
xchg
jle
xor
or
or
push
cwtl
fldcw
cmp
pop
lidtl
mov
jae
stc
push
out
test
outsb
sub
and
add
and
jne
shrl
xor
xchg
lcall
out
cmc
mov
fistl
push
stos
jns
add
lock
js
rcrb
out
repnz
sub
outsl
aad
nop
fisttps
cmp
xchg
adc
and
push
cmc
inc
lods
push
out
popa
jl
inc
mov
dec
loop
push
int
pushf
and
push
adc
pusha
movsl
incb
addr16
adcl
ret
pop
jp
insl
fsubrs
in
and
les
push
cmp
lods
jne
push
cmp
in
xor
cmp
xchg
aas
or
jp
jmp
pop
out
push
movsl
int3
inc
clc
pop
and
inc
lods
mov
int3
push
xor
inc
ja
adc
push
and
and
sbb
js
lcall
xlat
ret
dec
pop
imul
add
out
cmc
xor
jae
xchg
lret
dec
push
ljmp
aas
icebp
sbb
es
testl
movsb
mov
adc
clc
outsl
mov
mov
pop
rcr
testl
popf
or
cmpsl
imul
ljmp
push
add
pop
mov
and
pop
fs
xor
push
orb
popa
sbb
cltd
jnp
sub
aam
mov
les
loope
cmp
nop
test
push
mov
shrl
mov
sti
inc
lret
lret
pop
shlb
mov
pop
ret
add
fimuls
mov
std
cld
jg
push
mov
add
xor
xchg
rorl
aam
call
sub
jg
mov
dec
cmp
cmp
mov
aaa
xlat
imul
rcrl
mov
mov
ss
mov
loop
lds
shlb
ret
dec
out
and
mov
adc
push
xchg
cld
pop
sub
add
or
sbb
in
dec
pop
hlt
mov
jb
mov
sbb
and
jns
adc
xor
repnz
out
push
insb
movsl
cmp
add
imul
lea
pop
cmpl
jmp
mov
adc
add
in
lcall
stc
mov
xlat
cmp
jmp
shrl
xlat
xchg
inc
mov
ljmp
ficoms
sbb
xor
or
xor
pop
adc
into
aas
jno
enter
fisttpll
xor
fs
fsubl
lret
cmp
xchg
je
jne
rclb
imul
subl
xchg
xchg
jmp
xchg
xor
jb
lods
aaa
pushf
jo
jns
data16
pop
cmp
sbb
out
xchg
movsl
xchg
sbb
insb
jmp
cmp
cmp
scas
jno
pop
rorb
jl
dec
in
popf
lods
arpl
cmp
fisubrs
jmp
out
mov
insl
add
add
cmp
sub
add
popf
fs
mov
mov
sub
int3
lcall
aad
xchg
lea
clc
and
enter
dec
sbb
aam
mov
and
fistl
xchg
sbb
adc
into
lcall
pop
shlb
out
xor
fs
jno
rcr
dec
xlat
jge
cmp
les
push
lock
xor
mov
leave
pop
sub
xchg
stos
movsl
push
stos
cmpsb
mov
sbb
and
hlt
sub
or
dec
xchg
dec
fstpl
les
popl
jl
or
mov
add
xchg
sbb
clc
lahf
add
lcall
inc
fsub
std
and
mov
jmp
test
push
stc
orb
fs
inc
lcall
jo
cmp
fwait
xchg
jp
insl
mov
pop
push
lds
outsb
mov
jmp
sub
push
mov
sbb
sbb
adc
xor
adc
cwtl
lods
in
ss
leave
pusha
adc
and
add
sbb
xchg
and
jl
mov
xor
or
add
sahf
xor
xchg
push
pop
jl
cmpsb
xor
iret
fisubrl
push
cmp
or
fisubrs
fwait
ljmp
mov
repnz
add
xrelease
sub
mov
lret
push
xor
adc
psubq
lods
loopne
and
in
and
repnz
imul
test
xchg
divb
push
add
pop
cld
ss
and
cli
sub
ja
test
out
fnstcw
into
xor
adc
cmpsb
mov
push
adc
xchg
mov
idivl
hlt
loope
push
mov
adc
and
popa
fwait
mov
lods
fidivrs
testb
pop
mov
testl
cmc
jle
pop
mov
dec
adc
mov
or
mov
cld
out
test
ret
fsubrs
mov
fildl
shll
or
add
and
xlat
mov
loope
sar
shr
and
or
push
push
dec
add
stos
jl
xor
mov
stc
and
adc
xor
push
nop
fs
aaa
pop
mov
xor
push
out
loope
mov
and
repnz
arpl
adc
xchg
mov
dec
fisubrs
and
int
push
mov
rcl
fbld
xor
bound
cmp
jge
in
clc
jle
mov
sti
sub
adc
es
cmp
test
je
xchg
xchg
sub
mov
or
mov
push
sbb
cltd
movsl
push
add
jle
vmlaunch
movsb
jnp
ret
aam
lahf
pop
sub
dec
imul
pop
mov
adc
out
and
inc
call
fsubrl
sub
ret
sub
outsl
ret
inc
dec
enter
cmpsl
pop
jge
mov
xor
stos
xchg
std
test
les
push
outsb
hlt
mov
sub
call
add
test
mov
imul
push
test
and
outsl
push
jns
pop
enter
cmp
fdivrl
sti
push
lcall
aas
imul
fstpl
add
sub
in
dec
test
lods
inc
int
push
or
lock
mov
push
and
stc
xor
cwtl
and
fnstenv
inc
rorl
std
lods
jo
sub
xor
and
hlt
subb
or
inc
testb
les
enter
mov
and
insb
xchg
mov
dec
ret
and
jle
xor
cmp
dec
out
pop
jnp
pop
icebp
sub
ret
push
aaa
ljmp
jno
xor
fs
cmp
push
into
mov
adc
fisttpl
scas
sub
add
das
aaa
push
pop
repz
gs
arpl
xor
fwait
test
push
mov
xchg
xchg
test
lret
fsubrl
insb
push
mov
aas
out
clc
aad
iret
cmc
daa
mov
ret
aam
movsl
fadd
cwtl
das
lock
rcll
mov
cmp
xlat
or
outsl
xor
jge
mov
sti
sub
enter
pusha
jmp
dec
mov
ret
xor
fidivrs
pusha
scas
lods
int
shl
int
pop
jmp
pop
ljmp
or
cmc
sbb
stc
sub
adc
bound
dec
scas
sub
fstps
sbb
stos
in
and
mov
jb
lahf
loop
in
mov
call
js
xchg
outsb
mov
test
push
mov
out
add
int
bound
aad
xor
rcr
imul
add
sub
lods
movsl
imul
in
addb
sarb
stos
inc
mov
push
mov
xchg
shll
fidivl
inc
mov
pop
test
int3
cmc
xchg
cs
sub
setnp
pop
sti
imul
mov
sbbb
pop
aam
mov
ljmp
mov
enter
pop
sarl
mov
and
ret
xchg
xchg
cmp
adc
subb
fwait
addb
cmp
dec
push
ljmp
lret
xchg
shll
mov
lods
jns
cmp
dec
loope
cmp
mov
iret
data16
xchg
xchg
out
test
sub
mov
fbstp
pop
dec
mov
fsts
push
xchg
fldenv
pop
add
and
and
inc
ja
pop
rcrl
mov
ret
cmp
sbb
push
sbb
inc
stos
pop
out
dec
int3
ja
ficomps
dec
inc
xlat
cmpb
ret
pop
mov
mov
imul
xchg
sub
add
loop
sti
xor
rcrb
add
lds
xchg
sub
mov
add
std
stc
pop
lret
es
cld
xor
nop
leave
pusha
ret
cmp
in
inc
ret
sbb
into
mov
xor
jae
enter
jo
scas
mov
add
lret
sbbl
pushf
fildl
pop
fisttpl
add
push
sar
lret
add
cs
clc
addr16
mov
mov
dec
jb
mov
outsl
out
cmp
ja
jnp
out
pop
dec
jns
andb
mov
ja
adc
dec
xchg
dec
stos
pop
dec
adc
inc
inc
cmp
cmp
jmp
inc
int3
pop
mov
jb
arpl
cmp
lcall
aas
mov
jns
das
les
fwait
add
sub
push
loopne
mov
add
inc
inc
mov
inc
sbb
push
pop
rorl
and
sbb
sahf
mov
add
xchg
jge
cmpsb
push
cli
pop
inc
mov
mov
inc
mov
inc
mov
and
fistpl
dec
lds
add
out
inc
push
stos
adc
es
xchg
cmpb
lock
push
mov
mov
jns
pop
pushf
xor
xchg
jl
jb
mov
icebp
dec
ret
inc
ret
jg
call
scas
pop
mov
dec
dec
mov
insb
dec
in
and
es
add
xchg
popf
psrlq
imull
mov
dec
xchg
ret
adc
mov
repnz
xchg
jl
mov
push
xor
xor
mov
ret
rorl
test
out
lock
sbb
pop
lock
mov
add
push
and
xlat
xor
sbb
icebp
repz
push
sti
inc
xchg
mov
and
sbb
cmp
and
cmp
pushf
nop
daa
dec
xor
dec
xor
inc
test
cli
rcrb
pusha
push
ljmp
or
insb
mov
comiss
out
popa
lock
movsl
lret
inc
lds
fisubl
mov
cmpsl
loopne
rol
repz
mov
fldt
xchg
iret
xor
pop
pop
psllq
push
icebp
xchg
dec
lock
sbb
test
imull
pop
or
into
dec
inc
repz
lahf
mov
jmp
test
push
cwtl
subl
scas
mov
out
push
xchg
into
pop
xorl
jg
or
mov
xor
jnp
cld
dec
mov
inc
imul
lods
ljmp
incl
hlt
push
int
rcrb
jecxz
pop
sbb
pop
jno
loopne
push
sbb
cli
push
imulb
and
movsl
call
cmpsl
jae
add
stos
jne
sahf
test
lods
js
sbb
inc
rclb
sbb
test
add
cs
test
insl
sti
jne
fldcw
mov
lods
cld
pop
lea
cmpsb
pop
sbb
imul
mov
sarb
xchg
add
cltd
test
out
fs
jae
cmp
fsubrs
jne
addr16
imul
mov
sub
cs
jmp
ss
in
in
and
push
int3
arpl
lods
add
adc
lea
loope
add
push
xchg
dec
lahf
orl
mov
fstps
fisubrs
sti
lret
jl
rclb
fsubr
add
pusha
lahf
xchg
cmp
popa
fwait
mov
in
repz
cli
sub
int
bswap
stos
out
fnstsw
jne
fisubrs
outsl
push
rclb
out
pop
mov
outsb
rcrb
sbb
insl
mov
cmp
jae
jbe
dec
ret
xchg
lea
enter
pop
push
sbb
cld
xor
out
in
and
shll
inc
iret
inc
xor
cwtl
lods
arpl
push
fdivl
outsl
xchg
lea
cmpb
jl
sbbb
push
lcall
test
cmc
push
rcrb
cmpsl
pop
sahf
xchg
fnstcw
push
sub
mov
mov
ret
mov
mov
jns
and
adc
mov
hlt
gs
pop
or
mov
mov
js
jne
and
adc
mov
or
cmp
inc
jo
lds
ss
xchg
and
add
and
jp
insl
imulb
adc
mov
push
jae
add
out
mov
cmp
push
or
inc
lahf
pop
jl
mov
enterw
xor
lds
loop
jmp
jg
xchg
ret
mov
fwait
mov
add
adc
push
fwait
xor
movsb
push
jbe
or
cmpsl
imul
lea
and
xchg
jle
js
movsl
cmp
mov
pcmpgtb
push
cmp
jnp
dec
subb
lods
rcll
fcom
les
sti
in
aam
mov
jle
jg
movsl
jno
inc
out
dec
mov
ficoml
outsl
iret
mov
ficoml
call
cmpsl
cmp
insb
icebp
mov
pop
mov
fwait
ja
mov
xchg
es
mov
enter
mov
stos
and
popl
and
jnp
sahf
orb
mov
sub
int3
cmpb
and
push
clc
leave
jns
stc
dec
ficomps
std
cmp
outsl
or
dec
jg
shlb
rorl
fldcw
or
inc
mov
inc
and
or
insl
mov
hlt
push
shll
fmull
xchg
sub
inc
cmp
inc
sbb
xlat
movsl
dec
xor
push
clc
sbb
loop
ds
add
jno
sbb
loope
or
inc
mov
ret
leave
cmp
cmpsl
xchg
fimuls
or
cmp
mov
fs
es
je
hlt
or
mov
je
pusha
std
mov
xchg
cltd
cwtl
das
in
sbb
adc
sbb
rorb
xor
cwtl
fidivl
aaa
or
lods
lret
pop
lret
cmp
mov
clc
pop
repnz
in
into
cmp
in
out
and
ret
and
fldl
int3
jns
femms
movsl
xchg
sub
insl
mov
loope
xchg
mov
in
jle
filds
clc
push
cmp
xor
or
dec
lahf
test
in
cmc
push
scas
inc
push
xlat
das
loope
jae
incb
adc
int
cmp
jne
repnz
leave
inc
out
xchg
or
xor
sbb
jno
daa
pop
mov
push
mov
inc
dec
pop
rep
push
push
cli
inc
js
sub
sbb
mov
cltd
cs
arpl
push
inc
js
cmpsb
xchg
sbb
ds
nop
jmp
in
add
shlb
or
loopne
lret
inc
arpl
mov
and
sbb
xor
enter
cmp
pop
cmpsb
lock
int
add
rcr
test
lds
scas
int
or
mov
lds
or
div
sbb
inc
add
xor
and
pop
xchg
sub
pop
jge
jnp
inc
pop
mov
loop
cmpl
test
movb
ffreep
adc
cmp
or
sub
mov
lahf
int
mov
sub
dec
rcr
jo
jle
fisttpl
lahf
or
movsb
mov
cltd
push
mov
pop
arpl
aaa
dec
inc
fdivrl
sub
leave
sub
aas
insw
inc
int
sub
sub
daa
inc
fisttpll
add
pop
aas
adc
sahf
fwait
outsl
adc
mov
scas
mov
cmp
in
pushf
xor
dec
jb
pushw
push
ss
je
push
jp
sub
push
jmp
mov
stc
icebp
sub
cld
out
and
imul
aam
xor
jno
mov
xor
repz
jne
pusha
inc
inc
inc
into
pop
mov
cld
jp
xchg
sub
orl
cwtl
push
rcrb
lcall
xor
xor
or
lcall
xor
xor
jae
sbb
xor
dec
cmpb
or
sbb
cli
lahf
clc
pushf
jg
adc
xchg
shll
aad
pop
scas
test
or
lods
fs
shl
ret
bound
in
dec
mov
mov
dec
mov
sbb
in
jns
outsl
lcall
jge
mov
out
or
cwtl
dec
sub
pop
icebp
dec
out
push
inc
rorl
dec
cmp
dec
rol
and
pop
or
addr16
fidivl
inc
sbb
inc
sbb
lea
push
imul
repnz
stc
mov
cmpsb
insl
dec
jecxz
loope
pop
ret
cmp
pop
and
jno,pt
pop
xor
cmp
inc
mov
jb
rcll
bound
cld
test
and
xchg
sub
shll
rclb
shlb
pop
into
mov
cmp
mov
ret
movsb
popa
jecxz
xor
sub
mov
sbb
test
or
aas
fwait
xor
lock
mov
inc
hlt
fcmovb
inc
icebp
movsl
xchg
jle
mov
outsl
hlt
xchg
mov
push
xchg
cmp
push
sbb
sbb
sti
adc
sbb
sbb
sbb
div
sub
sti
mov
imul
stos
jne
mov
add
inc
pop
fisubrl
leave
and
fdivr
dec
leave
and
mov
imulb
jmp
fstpl
jmp
test
cmpsb
and
call
mov
shlb
shrb
cmp
push
push
cmpsb
jo
out
dec
hlt
ret
sbb
sub
lods
push
mov
or
mov
outsl
mov
or
lods
or
lods
jmp
sub
jnp
enter
loopne
test
testl
push
int3
push
push
and
mov
xchg
pop
sbb
pop
add
sub
mov
sub
rcll
addr16
sub
movsb
pop
mov
ficoml
andl
je
sub
mov
cmp
pop
push
mov
ret
jl
mov
clc
push
pop
aam
sbb
inc
fildl
int3
ficoml
test
iretw
fsubrs
xor
movsb
mov
mov
ja
sti
sub
and
pop
xorb
es
cmp
mov
fcoml
pop
adc
and
je
insl
dec
cmp
sbb
or
mov
add
mov
mov
loopne
sarl
repz
icebp
sarl
jbe
cmpl
sbb
lock
inc
test
mov
movsbl
out
outsl
mov
xchg
and
jne
repz
insb
or
pop
push
adc
push
cmpsb
xchg
sti
and
out
jne
imul
cmp
mov
pusha
jo
mov
inc
fwait
mov
jl
push
jb
push
dec
cmpsb
ja
pop
jnp
pop
pop
movsl
cmp
jl
les
data16
cmp
xor
jge
lods
scas
pop
mov
mov
xor
add
push
jmp
xor
push
adc
clc
test
fstps
lods
inc
dec
cli
dec
in
insl
lret
bound
shr
repnz
mov
rcll
or
and
es
ja
inc
fucomi
cwtl
in
lret
cli
cmp
add
cmp
lahf
and
gs
test
adcb
stos
daa
arpl
push
xchg
mov
cmpsb
fadds
or
sbbb
sub
flds
or
dec
loop
adc
add
push
sub
outsb
inc
fcompl
mov
aad
inc
push
mov
mov
nop
adc
push
jecxz
rclb
pop
jb
pop
push
data16
mov
jp
cmp
out
test
mov
scas
adc
fstl
rorl
dec
lahf
loopne
nop
daa
dec
add
mov
xchg
jmp
or
jmp
xchg
push
enter
mov
fwait
xsha1
cmpsb
int3
cmp
jge
in
sub
ja
push
mov
xor
mov
xchg
xchg
scas
inc
mov
mov
mov
xchg
lret
pop
lock
inc
jo
lods
test
sub
loopne
pop
adc
fidivs
sarl
sub
andb
je
icebp
mov
adc
and
lods
mov
sete
inc
sahf
adc
rol
mov
pushf
popa
repz
call
sub
pop
fnstenv
cmp
gs
shlb
popa
mov
pop
insb
pop
jp
int
adc
sub
cmp
mov
sbbl
cltd
lahf
cs
mov
test
rorl
cmpb
stos
sub
adc
pop
divb
mov
lock
imul
fistpl
arpl
adc
pop
outsb
rcl
adc
push
jge
cmp
int
and
adc
repz
add
pop
cs
loopne
fs
push
fisubrl
jae
rcrl
sbb
cwtl
mov
fsubl
leave
xor
mov
pop
cmp
rsqrtps
enter
stos
gs
aad
orb
shrb
jae
mov
mov
add
cmp
adc
repz
aam
fidivl
pop
adcb
in
mov
push
into
hlt
pop
push
push
dec
ja
bound
dec
jg
cmp
fs
xchg
cmp
add
ret
mov
pop
mov
xchg
mov
sub
mov
sbb
sbb
or
ss
out
cltd
pop
jge
out
mov
lds
adc
jae
call
push
mov
insl
add
lods
sub
jb
lcall
xor
jmp
xor
jnp
cmp
mov
mov
inc
ret
lret
cld
test
les
int
repnz
pop
cmp
insl
cmc
jno
popf
pop
leave
push
adc
lret
pop
arpl
push
sbb
or
pop
jle
pop
dec
mov
add
dec
push
pop
lods
rcll
push
cli
jmp
lcall
fldt
sub
outsb
pop
outsb
out
xchg
xor
ja
add
stos
push
sbbl
loop
testl
push
mov
mov
pusha
sub
push
push
jnp
nop
repnz
adc
out
testb
xor
xlat
popa
clc
enter
sbb
dec
pop
mov
sub
out
iret
arpl
rclb
adc
shrl
notb
pop
sub
and
push
cmp
xchg
lods
mov
cli
repz
in
stos
inc
pop
mov
sub
cld
jno
push
arpl
inc
fidivl
shll
add
pop
repnz
push
xor
out
jg
mov
jne
xchg
inc
mov
mov
rcr
mov
mov
push
inc
push
add
dec
jns
cmc
in
pop
shrl
mov
mov
mov
pop
cli
xorl
push
fstl
loope
jp
xor
mov
mov
pop
cli
mov
xchg
sub
push
icebp
mov
aam
mov
shr
and
jno
shl
imul
loope
sub
rolb
scas
arpl
pop
ds
addr16
iret
das
pop
add
and
in
popa
les
mov
jo
shlb
mov
js
dec
adc
sub
rclb
cmp
jno
test
sub
mov
into
xchg
gs
stos
js
roll
fsubrs
lds
das
mov
cmp
js
inc
or
imul
cmp
sub
mov
adc
je
aam
push
adc
movsl
jp
pop
mov
hlt
pop
ret
ficomps
dec
inc
or
shll
ja
mov
or
sub
pop
lret
pop
dec
je
ret
xor
ret
and
adc
aad
and
or
xchg
std
pusha
jmp
inc
or
add
les
movsb
daa
fildll
imul
dec
push
stc
push
cltd
inc
fldl
xchg
aaa
inc
or
xchg
inc
xchg
stos
ss
aaa
cltd
loopne
mov
mulb
icebp
mov
unpcklps
leave
mov
lea
cs
jbe
sbb
clc
lea
ljmp
leave
jle
lock
loop
inc
cmpsb
jnp
jmp
push
jmp
inc
or
jp
jecxz
sarl
ds
lret
call
jae
ret
adc
push
sarb
stos
cmp
inc
sti
push
std
push
jg
sbb
pop
adc
fisttpll
dec
adc
lahf
push
in
mov
or
fstp
ja
add
jnp
hlt
mov
dec
popa
mov
pop
idiv
mov
sub
subl
in
mov
mov
scas
push
jmp
int
lret
repz
out
clc
adc
lods
mov
pop
cli
out
push
stos
mov
cmpsb
pop
arpl
jmp
xor
mov
test
and
fsubs
std
lods
mov
jecxz
mov
repz
add
pop
and
inc
adc
fldenv
jle
and
add
repz
push
pop
cmpsb
mov
test
data16
cld
mov
outsl
jmp
movsb
jmp
adc
cld
cmp
daa
daa
mov
jl
jg
loope
add
xor
mov
cld
pop
or
mov
sbb
clc
std
fdivl
in
xchg
and
add
dec
inc
adc
movsl
xchg
adcb
or
and
xor
sbb
xor
or
cs
mov
test
mov
ret
into
mov
and
mov
andb
and
mov
dec
or
cmp
jg
in
addr16
mov
xchg
lods
daa
mov
roll
scas
and
cmp
icebp
arpl
cmc
bound
es
mov
mov
aad
mov
test
adcb
cmc
bound
enter
cmp
lret
mov
movsb
push
mov
mov
cmc
popa
adc
nop
movsb
dec
hlt
bound
aad
mov
xchg
lods
push
add
cmp
popa
xchg
ffreep
nop
jge
je
lcall
xorl
lods
adc
mov
mov
adc
inc
sub
xchg
ss
mov
stos
inc
adc
les
pop
pop
adc
roll
dec
or
arpl
mov
push
addb
mov
imul
xchg
aas
push
cmpsl
adcl
inc
adc
movl
jo
push
stc
pop
xchg
out
jae
lret
call
lcall
in
jae
out
pop
insl
out
sti
xchg
fs
or
jl
outsl
fimull
cmp
clc
cmp
mov
fisttpl
mov
pop
mov
lods
hlt
pop
adc
jmp
inc
xchg
cmp
shlb
xor
pop
add
and
mov
scas
int3
xchg
xchg
psubd
into
xchg
pop
push
or
fisttpl
pop
add
mov
scas
int3
xchg
adc
cld
xchg
or
mov
enter
test
adc
gs
or
xchg
add
mov
scas
add
aam
ljmp
xchg
shlb
data16
btc
test
inc
or
mov
lret
insl
add
out
pop
sbb
xlat
lea
jb
mov
mov
pop
dec
adc
adc
lret
push
pop
lahf
inc
dec
test
fstps
pusha
ljmp
inc
or
aad
add
filds
cltd
inc
int
out
rcrl
insl
cmc
aam
pusha
ljmp
lds
fsubl
add
pop
or
jmp
fiaddl
gs
test
inc
push
jmp
int
loopne
add
mov
stos
loopne
cmp
imul
adc
mov
dec
inc
les
xchg
or
gs
sarl
das
clc
fs
and
jns
mov
mov
rorb
andb
mov
mov
movsl
push
std
cmp
js
mov
mov
sub
int
stc
push
int3
xchg
and
or
sub
fldl
xor
mov
mov
icebp
sbb
sub
mov
scas
std
pop
fcoms
cmp
int3
mov
mov
rcrb
sahf
hlt
fs
cmc
add
stos
xchg
jae
jmp
adcl
push
add
scas
out
insb
sbb
dec
stos
sub
pop
cld
notb
and
and
mov
jo
mov
cmp
xchg
inc
roll
pop
adc
insl
push
test
xchg
stos
dec
sbb
jp
sbb
cmpsl
cmc
lods
ljmp
dec
loope
sub
and
lea
adc
jle
cmp
or
xor
pop
pop
push
and
lock
sti
fdivrs
shll
pop
jno
std
stos
test
mov
fneni(8087
sbb
xor
mov
mov
enter
out
dec
add
shll
sti
out
jnp
push
std
repnz
in
pusha
shlb
pop
pop
push
mov
mov
add
loop
jae
insl
incb
mov
test
ret
xchg
mov
pop
jle
mov
xchg
pop
xchg
xor
xchg
ds
mov
sbb
rol
mov
push
mov
lcall
push
mov
mov
sahf
sbb
mov
fcmovnu
pop
ret
pop
add
aas
test
pop
mov
imul
fsubs
das
add
xor
mov
adc
xchg
dec
add
test
mov
adc
sbb
xchg
aas
mov
pop
fsubrs
mov
mov
mov
pop
pop
jle
nop
sbb
shlb
mov
push
mov
mov
ljmp
aaa
fwait
insb
std
xchg
aaa
adc
test
cli
xchg
cmp
jo
inc
jb
es
xchg
cmp
dec
loop
in
xchg
ret
inc
pop
adc
ss
cmp
and
data16
add
cltd
jp
xchg
cmp
insl
sub
inc
push
sub
movsl
xchg
cmp
ja
push
int3
lds
and
push
icebp
mov
ret
xchg
push
fwait
jns
pop
cmpsb
leave
xchg
cmp
mov
inc
push
add
lods
sbb
dec
xlat
jns
or
dec
cltd
lahf
cmpsb
sub
mov
mov
orl
sti
fs
inc
sbb
cwtl
out
push
orl
adc
push
sbb
scas
push
dec
iret
popl
sbb
or
xor
mov
scas
or
in
pop
pop
stc
test
adc
fwait
cmp
xlat
xchg
mov
mov
or
mov
jmp
inc
aam
add
sbb
jae
mov
push
ficompl
shll
rolb
lods
mov
xor
repz
add
das
fnstenv
xor
add
inc
and
cmpsb
adc
add
hlt
dec
aad
aaa
jmp
lock
in
adc
mov
addr16
mov
mov
mov
outsl
push
dec
aad
fiadds
outsl
dec
adc
push
pushf
imul
jno
sbb
pop
mov
mov
das
jae
dec
mov
mov
fidivs
lret
push
dec
adc
mov
cmp
ss
pop
add
mov
negl
mov
xlat
cmp
sbb
mov
push
dec
in
and
push
hlt
ds
xlat
sub
pop
jo
arpl
pop
inc
adc
hlt
mov
out
lcall
mov
add
inc
xchg
xchg
aaa
mov
sbb
mull
inc
loop
je
sbb
lea
call
fcomip
pop
les
pop
divb
data16
sub
aam
in
test
test
lds
out
jmp
jbe
out
sbb
mov
jno
andl
cmpsl
ss
jo
mov
mov
sahf
outsb
sbb
xchg
inc
js
popa
mov
roll
jle
dec
push
jge
adc
bound
xor
xlat
cld
fnstcw
or
pop
pop
pop
mul
sbb
jne
cld
mov
inc
add
mov
popa
cmc
clc
lods
mov
fistpll
jl
imul
mov
mov
fnstcw
mov
orl
mov
in
inc
pushf
adc
add
jnp
cmp
jge
stos
sub
adc
dec
fucomp
outsl
repz
jbe
push
stos
fs
jb
mov
push
stc
xchg
test
shl
jbe
xchg
xchg
rcrb
test
mov
movsb
inc
mov
in
pushf
sti
pop
lcall
lods
daa
nop
mov
pop
cmp
push
fldl
test
add
mov
jno
test
stos
fld1
filds
mov
mov
test
lret
loop
jp
je
mov
dec
loope
inc
or
not
sbbb
scas
sub
or
dec
or
jmp
inc
fwait
sbb
imul
push
test
adcb
leave
lea
leave
sub
js
mov
adc
inc
pop
mov
lods
mov
ffree
mov
cmpsb
pop
add
mov
adcb
rolb
cmp
fsubp
and
test
push
loopne
mov
and
mov
jo
cld
add
push
clc
stos
rolb
fs
aad
mov
mov
fdivrl
or
js
leave
mov
push
jo
jne
jno
out
jmp
jge
dec
or
iret
sbbl
push
pop
push
add
loopne
xor
out
mov
and
sub
add
mov
shlb
mov
xchg
cmp
in
pop
mov
sbb
mov
dec
sub
cltd
iret
lock
add
sbb
cmp
sub
rorb
movsl
or
js
popf
cmp
arpl
pop
xchg
ret
fbld
cmpsl
dec
adc
imul
cmc
cs
jecxz
push
xor
or
iret
pop
dec
pop
jb
divb
xchg
inc
imul
pushf
orl
mov
ret
sti
dec
pop
mov
adcl
lea
mov
mov
pusha
cmp
add
sbb
imul
xlat
mov
pop
sti
adc
jmp
lret
xchg
push
add
stc
jns
push
ss
or
sub
pop
jp
fiadds
and
rdpmc
paddsw
daa
add
sbb
pop
add
mov
adc
xor
inc
lock
inc
nop
popf
mov
mov
mov
roll
movsb
inc
pushf
cmp
pop
icebp
out
add
fs
fiaddl
or
faddl
jmp
cld
cmp
push
dec
adc
jp
jne
scas
and
mov
out
hlt
cmpsl
arpl
adc
aad
leave
inc
sub
push
fsubs
lods
enter
cmp
orl
jge
loope
jl
into
cmpsb
sub
orl
dec
or
dec
cmc
rclb
or
dec
aaa
cs
adc
lods
cli
xchg
clc
or
push
testl
pop
scas
xor
lret
dec
adc
adc
pop
lds
aam
push
sbb
push
adc
xchg
leave
jb
mov
imul
test
xlat
dec
aaa
arpl
push
xchg
lea
pop
mov
mov
mov
inc
sbb
lods
sub
inc
mov
mov
or
pop
xchg
cs
xchg
fcmovb
mov
das
or
aam
int
gs
sbb
jl
cmp
stos
imull
insl
repnz
adc
adc
loope
mov
xor
sbb
cmpsb
sub
push
flds
jno
xlat
jecxz
jg
sar
mov
inc
cmp
test
jo
xchg
outsl
adcb
adc
fcmove
xchg
test
adc
push
push
out
jo
andl
filds
lret
jecxz
xor
cmp
aaa
cmpsb
scas
rclb
mov
adc
daa
movsb
xor
mov
jp
cmpsb
pop
mov
push
and
and
cmp
cmp
mov
sbb
mov
cmc
in
lods
dec
adc
stc
xor
sahf
loope
outsl
pop
lret
xchg
cmp
xor
pop
mov
mov
or
nop
cmpsb
daa
mov
mov
add
stos
and
adc
push
add
cmpsb
mov
mulb
push
imul
xchg
ljmp
sahf
cmpsl
cmp
xor
jns
adcl
cmp
sbb
inc
daa
mov
mov
popa
call
push
add
cwtl
pop
test
pop
mov
pop
add
insb
arpl
push
lahf
jno
pop
test
aam
out
mov
xor
arpl
adc
lds
adc
jnp
rclb
sub
lret
mov
inc
push
pushw
ja
cmp
or
iret
xor
movsl
cs
aam
mov
xchg
in
mov
cmp
or
pop
adc
aad
fs
cmp
push
scas
sub
fst
jb
aaa
jne
jg
shll
sbb
xchg
in
loope
cmp
sub
mov
pop
pop
cld
aas
lahf
adc
icebp
sub
stos
je
sub
movsb
insl
repz
lret
mov
into
and
mov
mov
mov
mulb
mov
sbb
imul
cmp
dec
insb
dec
adc
pushf
out
jecxz
lock
psubw
pop
cmp
adc
xchg
dec
sub
incl
out
das
sub
jno
movsb
shrl
inc
push
push
push
int
jno
xor
and
insb
pusha
stc
pop
inc
jb
mov
lods
test
xchg
cmp
enter
sub
das
mov
cmp
outsb
xchg
cmp
mov
mov
xchg
push
mov
ljmp
incb
pop
sub
clc
dec
lock
jg
imul
push
das
lods
enter
fcoml
xorl
sahf
cmp
cli
pop
lock
in
repz
cmpsb
push
add
jmp
dec
loope
lret
cmp
cld
rcrl
shr
and
into
shll
jmp
adc
test
cmpsb
in
mov
faddl
pop
mov
jno
jg
jns
cmp
xor
repnz
jno
addr16
jp
xchg
js
iret
shrb
mov
sbb
push
pop
imul
inc
data16
rcrl
test
jmp
add
icebp
add
cmp
pop
sub
fiaddl
push
pop
push
clc
out
aas
mov
bswap
rcrl
data16
aam
lods
mov
pop
jmp
in
sahf
js
xchg
cld
sbb
movsl
aas
lahf
xorl
sbb
mov
decl
adc
fidivrs
dec
ret
fidivrs
lcall
inc
adc
or
pop
pop
fnstcw
test
mov
and
inc
adc
aas
or
imul
ja
mov
stos
mov
push
xor
cmp
mov
scas
mov
dec
and
pop
movsb
sub
les
addr16
xor
mov
hlt
dec
or
mov
mov
js
adc
jge
mov
mov
ret
repz
lods
jecxz
out
mov
je
ret
rclb
out
in
adc
imul
clc
or
std
mov
mov
or
adc
add
pop
xor
mov
jecxz
and
orl
mov
aad
jbe
ja
subb
filds
cwtl
inc
js
sbb
lahf
cmpsb
cmp
addl
je
sbb
push
data16
inc
sarl
sbb
jne
and
call
xor
xor
out
arpl
lods
div
pop
xor
jb
add
pop
push
std
movsl
es
or
lds
test
mov
cmpsl
sub
fadds
repz
lcall
pop
add
repnz
inc
add
xor
mov
mov
adc
les
loop
lods
sub
orb
adc
or
scas
adc
mov
lods
or
pop
dec
adc
inc
pop
and
jg
cld
pop
jle
scas
xor
mov
in
dec
fistl
pop
mov
test
mov
mov
outsb
cltd
inc
orl
cmp
pusha
ljmpw
and
outsl
mov
or
dec
loopne
jnp
pushf
jo
sub
stos
xor
inc
xor
in
pop
xchg
cmp
cmp
push
mulps
fdivrs
test
hlt
cmp
ret
mov
sarb
test
xor
inc
dec
or
cmpsb
pop
std
adcl
dec
add
push
add
ljmp
xchg
lock
fildl
inc
test
lods
test
dec
or
nop
daa
out
lea
rclb
or
ret
cli
push
adc
dec
adc
add
sub
mov
lahf
inc
aad
faddl
push
mov
popa
and
ja
clc
ds
in
in
mov
mov
xor
add
push
pop
popa
mov
test
mov
xchg
mov
hlt
xchg
pusha
mov
ja
mov
push
in
xchg
test
jecxz
sub
mov
push
and
push
pop
aaa
popa
jmp
inc
sbb
inc
sbb
inc
or
popa
loopne
adc
mov
shll
adc
push
push
sti
and
jl
add
popf
inc
repz
fwait
inc
mov
inc
or
fmulp
xchg
add
mov
push
or
cmpsl
test
js
mov
loope
or
andl
inc
or
int
xor
xchg
push
and
push
sti
and
popa
inc
cmp
inc
inc
inc
or
xchg
dec
adc
and
shll
movsl
std
popa
inc
push
pop
push
xchg
pop
add
rorl
xor
fistpll
and
adc
fisubrl
test
loope
fdivrl
mov
std
pop
arpl
loopne
jge
out
sbb
inc
add
pop
pop
test
cld
pop
adc
orb
jne
mov
movsb
test
cmpsl
ret
dec
sarb
xchg
insl
in
mov
les
xorb
add
inc
pop
mov
pushf
cli
pop
jl
loope
xchg
popa
arpl
xchg
hlt
call
data16
fdivrl
dec
rorl
negb
add
mov
cmp
test
inc
jmp
rcrl
das
mov
pop
and
dec
clc
fstl
shl
lds
or
pop
push
int
shl
int3
mov
dec
or
out
push
pop
xchg
inc
dec
add
mov
add
and
ja
roll
add
push
fistl
lock
add
mov
sti
fcmovu
push
repz
pop
and
fmuls
jmp
push
push
stos
xchg
xchg
lahf
rol
mov
lret
push
adc
mov
pop
mov
push
leave
dec
or
in
insl
or
popa
clc
or
popa
jmp
push
enter
mov
addr16
add
pop
mov
fbld
fiaddl
dec
mov
inc
fldl
jg
jb
add
xchg
bound
pop
cmp
sahf
inc
mov
inc
dec
lods
jbe
jb
and
iret
bound
lcall
das
mov
xor
inc
xchg
xchg
cmp
mov
push
fwait
scas
pop
add
push
cli
pusha
sub
jecxz
jbe
aaa
cwtl
push
insl
out
movsb
into
test
test
or
xor
mov
inc
out
jecxz
cwtl
aad
mov
mov
xchg
xchg
adc
pop
sti
mov
cmpsl
xor
cmpsl
loopne
adc
add
fcmovu
imul
call
repz
inc
pop
xchg
pop
mov
sub
insl
add
jecxz
std
pop
stc
mov
mov
sahf
cmp
scas
daa
test
imulb
lret
fldl
pop
in
call
cli
es
mov
sbb
inc
int
mov
aaa
rol
jnp
adc
mov
int3
dec
adc
lret
pop
push
leave
lds
imul
cmc
sub
jle
jecxz
sub
pop
lock
pop
push
dec
testb
lock
jle
adc
int3
pop
stc
add
add
inc
and
jg
sahf
outsb
ljmp
movsl
xor
clc
sub
fucomp
adcl
sub
scas
shrl
push
inc
fiaddl
mov
test
pop
aas
adc
xchg
sub
pop
leave
pushf
push
add
adc
ss
sti
mov
ret
and
les
mov
adc
jae
add
mov
or
cltd
mov
in
fbstp
dec
out
sub
icebp
mov
adc
mov
in
scas
scas
add
sub
xor
vcvtdq2pd
jne
fdivrl
imul
in
rcll
add
sbb
sub
jae
clc
dec
xchg
cmp
mov
adc
pusha
or
adc
leave
movsb
adc
sbb
call
lret
or
dec
ja
dec
adc
rorb
sahf
inc
mov
mov
pop
sbb
dec
adc
shrl
outsb
les
fcom
pushl
cld
sqrtps
popf
out
push
js
mull
data16
ret
nop
inc
dec
mov
cmpsb
lcall
xchg
jle
sbb
fbld
mov
ficoml
mov
cmp
aam
stc
sub
mov
sub
adc
dec
loop
and
jb
pop
je
and
mov
call
cli
pop
add
fnstenv
out
mov
mov
add
cmp
out
outsl
sbb
dec
pop
orb
fdiv
gs
push
add
or
jecxz
aaa
movsb
sahf
cli
pop
std
mov
insb
out
shl
jae
mov
sbb
push
pop
js
fs
out
xchg
fs
cwtl
ja
lea
mov
std
arpl
in
leave
xchg
hlt
or
insb
fucom
dec
adc
por
mov
fldl
mov
inc
or
out
jno
adc
pusha
inc
fiadds
lods
push
mov
loope
aas
pushf
scas
stc
les
in
add
jo
mov
outsb
imul
or
daa
lods
les
and
pop
xchg
cmp
cmp
aad
test
pop
les
sbb
aad
mov
mov
add
jne
xor
mov
and
ljmp
dec
adc
dec
pusha
daa
das
scas
into
jns
out
rclb
add
into
or
arpl
dec
pop
ret
mov
mov
lahf
cmp
add
pop
add
lret
lea
adcb
adc
sub
add
cmpsb
ss
lret
mov
add
adc
mov
int
subb
jns
aaa
xchg
inc
or
jmp
cmp
and
aas
cmpsb
cmc
and
outsb
in
je
jl
lea
sub
ret
push
enter
jb
aaa
lods
sub
loop
fsubrl
imul
jns
mov
mov
cli
pop
jmp
in
es
mov
or
lods
adc
dec
pop
xchg
cmp
popf
loope
shll
mov
orl
fidivrl
mov
sbb
adcb
pop
ret
push
sbb
or
stos
das
stos
cmp
sti
adc
dec
lret
adc
push
test
xchg
scas
push
xchg
inc
mov
test
stos
jne
out
imul
jno
sahf
sbb
dec
sbb
xchg
test
test
sub
push
dec
stos
pop
mov
add
pop
mov
inc
loopne
inc
out
popf
lcall
hlt
scas
sub
cmp
je
arpl
insb
lods
roll
mov
pusha
iret
dec
jl
scas
adc
sbbl
lahf
scas
add
or
mov
daa
lods
add
xchg
cmp
rclb
cmp
mov
mov
mov
orl
call
mov
data16
xchg
inc
enter
sbb
and
inc
or
ret
add
mov
jl
bswap
test
cld
pop
dec
mov
movsl
jo
popa
icebp
xchg
lahf
frstor
ret
les
arpl
cmp
flds
fnstcw
icebp
arpl
cmp
xchg
out
mov
cmpsb
rclb
ret
jg
daa
mov
or
cmp
into
les
scas
in
sbb
jg
xchg
inc
outsl
or
xor
mov
inc
jp
jae
lret
xchg
adc
aas
inc
inc
inc
or
inc
push
cmpsl
stos
xor
pop
mov
mov
push
jns
sub
subl
out
jne
outsl
test
and
mov
add
xchg
lods
sbb
push
cwtl
inc
adcb
push
jge
push
cld
sbb
dec
iret
xchg
mov
cmpsb
sub
cmpsl
in
in
dec
push
dec
repnz
add
rcrb
inc
addl
mov
hlt
nop
mov
movsb
sub
dec
mov
and
mov
and
ret
les
push
or
jecxz
fsubrl
cmp
es
or
jl
and
xchg
inc
mov
mov
sbb
xchg
push
jl
cltd
leave
ret
ret
fdivrl
aad
subb
clc
cmpsb
sub
mov
push
mov
shr
push
movsb
sub
mov
jp
movsl
dec
sub
arpl
xchg
les
push
sti
aas
fwait
lret
push
sbb
fnstcw
mov
xchg
inc
push
dec
push
out
jns
pop
mov
or
sbb
dec
adc
dec
lret
xchg
fimuls
mov
mov
stos
add
adc
lods
pop
inc
sbb
out
jp
mov
out
jb
inc
pushf
aas
pop
cmp
or
leave
jle
mov
insb
push
cli
cmp
mov
fcoml
int3
mov
lea
std
dec
rcrl
xchg
int3
mov
in
js
adc
loop
in
adc
inc
repnz
jae
mov
stos
fidivrs
mov
xor
in
cmpsb
sub
rcll
leave
ret
cmp
popa
nop
rclb
xor
lret
push
pop
les
sbb
fimull
inc
adc
jl
decb
das
test
cmp
lret
cmc
stos
sbb
leave
push
mov
jo
insb
adc
iret
xchg
imull
cld
pusha
mov
stos
xchg
cmp
cwtl
inc
cltd
jl
xlat
and
fwait
inc
cmpsl
ss
ja
mov
fsubs
mov
cmp
imul
icebp
mov
gs
pop
std
sbb
cmp
inc
mov
xchg
lods
sub
pop
mov
dec
dec
pop
xchg
mov
ja
call
push
clc
or
sub
xor
cltd
and
pop
leave
popf
mov
popa
jl
stos
xor
imul
dec
pop
xor
rcrl
and
aad
in
out
shll
xchg
jae
push
jl
mov
jbe
inc
pushf
mov
hlt
fs
add
adc
jae
outsb
inc
fistpl
shrb
rcrb
hlt
movl
or
cmpsb
mov
cmpsl
mov
fimull
jae
test
and
adc
xlat
xchg
add
test
mov
fsubrl
stos
daa
jle
xlat
test
data16
sbb
mov
les
int
cmpsl
ds
pop
adc
push
pop
les
mov
cli
pop
and
cmp
sbb
pop
cld
mov
sub
fsubs
pushf
xchg
inc
sub
xor
leave
pop
xchg
add
pop
rolb
inc
and
and
cmp
cmc
mov
push
adc
stc
fimull
pop
out
stc
jb
mov
cmp
and
gs
xor
mov
int3
xchg
mov
sub
cmp
mov
pop
and
mov
mov
jns
jbe
fneni(8087
inc
or
or
cmpb
push
add
jmp
cwtl
mulb
lods
xchg
ljmp
cmp
add
sahf
hlt
pop
sbb
inc
or
cmpsl
or
insl
out
or
sarl
movsl
inc
out
push
jne
jle
sbb
rorb
clc
stos
push
maskmovq
pop
add
out
xchg
lock
xchg
mov
cli
gs
fldt
push
inc
mov
shrl
mov
mov
push
cli
adc
xchg
pop
push
mov
lds
lea
ds
mov
ret
test
ret
rorl
das
dec
ret
cmc
pop
inc
pushf
push
lods
xchg
or
sub
les
xor
ds
xchg
loopne
fdivrs
icebp
or
fidivrl
mov
pop
enter
lea
test
repz
aam
cs
lock
mov
or
jne
cmpsb
sub
addr16
pop
or
jb
int3
and
fs
movsb
and
mov
xor
pop
jne
xor
shlb
into
cwtl
add
mov
push
in
ljmp
or
pop
xchg
sub
mov
inc
in
push
jge
iret
data16
sahf
mov
rcrb
test
lods
or
jbe
sub
das
cwtl
loop
lret
fiadds
mov
push
mov
cmc
sbbl
nop
cmp
rorl
jp
pop
icebp
adc
pcmpgtd
fnsave
xchg
sub
je
mov
or
shrb
call
lock
push
movsl
push
lea
mov
loopne
sub
jp
loope
xor
std
xchg
fs
fldpi
orb
movsl
cmp
sub
mov
idivl
mov
dec
rolb
add
popf
and
push
mov
sbbl
inc
lahf
ss
bound
xchg
sbb
adc
insl
fdivl
pop
cwtl
das
cmp
cli
xchg
repnz
mov
mov
sbb
fbld
into
xchg
add
mov
mov
in
call
or
movsl
das
pop
xchg
sub
mov
inc
loop
imul
add
xor
and
push
in
test
stos
or
je
sub
sub
dec
inc
fidivrs
add
sarb
pop
mov
repz
mov
cmp
pop
repnz
jns
fs
fnsave
xchg
cs
fnstenv
mov
sub
push
out
into
pop
xor
mov
push
in
imul
jae
mov
ficoms
loop
xor
add
test
fs
mov
dec
xlat
jmp
or
cmp
pop
les
jl
mov
dec
into
inc
fdivr
push
cwtl
fwait
and
mov
sbbb
push
ds
lds
repz
sbb
adc
imul
popf
add
sti
xchg
lock
mov
mov
sbb
frstor
iret
xchg
repz
mov
in
out
adc
cmp
xchg
sub
scas
mov
loope
imul
add
addr16
mov
int3
push
out
test
test
lds
sub
sub
jecxz
dec
dec
fistpll
add
sarl
pop
mov
repnz
and
cmp
cmp
pop
repnz
push
lret
xor
in
fidivs
test
xchg
jno
mov
or
shrl
in
iret
push
jle
mov
rorl
cmpsb
add
sub
sub
jbe
loop
xor
add
or
mov
mov
dec
in
orl
cmpsb
cmp
pop
ret
hlt
jnp
mov
inc
int
push
gs
push
mov
sbbl
or
aad
les
repz
pop
rclb
jp
loop
fidivs
add
xchg
out
push
mov
mov
sbb
rclb
mov
out
out
adc
cmp
xchg
sub
mov
loopne
imul
add
push
lret
xchg
test
movsb
fnstcw
lds
sub
sub
dec
loopne
in
cwtl
push
lahf
addr16
shlb
pop
mov
icebp
test
mov
cmp
pop
repnz
jns,pn
pusha
jmp
jbe
adcb
jo
mov
pop
xchg
sbb
pop
in
rclb
ss
out
addr16
montmul
cmpsb
add
sub
sub
je
loop
das
mov
popa
imul
mov
mov
dec
aad
test
insl
cmpsb
cmp
pop
rol
bnd
shrb
inc
fdivrp
add
dec
mov
test
mov
ret
mov
repz
rcrl
jp
loopne
fbstp
add
xchg
out
push
mov
xchg
sbb
inc
cmpsl
aad
fldenv
rcll
mov
out
in
adc
cmp
xchg
sub
icebp
dec
in
lods
mov
filds
add
shrb
xchg
mov
enter
test
cmpsl
sbb
lds
sub
sub
dec
loope
jecxz
cwtl
adc
push
mov
lock
mov
ficompl
or
jns
pop
ljmp
mov
xchg
outsl
shll
mov
shrl
jecxz
rcll
icebp
mov
incb
lds
xchg
sub
dec
jecxz
sub
push
testb
and
out
test
es
push
mov
sub
test
lret
sti
add
dec
mov
mov
outsb
test
or
cmp
mov
hlt
mov
pop
inc
lods
jnp
fisubs
ja
lcall
xchg
in
push
mov
test
sbb
insb
xlat
pusha
cmp
xchg
clc
repz
mov
lock
adc
aaa
popf
das
into
pop
xchg
sub
and
add
shrb
xchg
mov
push
lock
push
movsl
xlat
cmp
pop
insl
clc
sub
sub
dec
loope
loop
cwtl
adc
pop
mov
out
xchg
mov
fstps
or
jns
pop
jmp
xchg
cs
xchg
outsb
shlb
mov
and
cmp
adc
mov
int3
std
xchg
mov
fsts
mov
ret
push
cmc
jg
addr16
mov
dec
shr
test
cmpsl
ds
and
lds
sub
test
in
inc
leave
dec
arpl
cltd
xchg
sbb
dec
mov
mov
insl
test
pop
aas
cmp
mov
hlt
mov
ret
stos
jnp
frstor
ja
cltd
xor
mov
mov
orl
insb
pop
cmp
nop
div
mov
mov
lock
adc
ss
das
int
xchg
sub
pop
stos
mov
fldl
add
shrb
xchg
mov
push
lock
movsl
push
movsl
cmp
pop
insb
imull
sub
dec
loope
loope
cwtl
adc
mov
out
xchg
mov
movsb
cmp
pop
repnz
jns
pop
call
xchg
cs
xchg
insl
shll
mov
and
push
loope
rcll
js
mov
lret
cld
test
mov
lds
xchg
sub
jo
jecxz
sub
add
jle
addr16
mov
inc
shr
test
imul
pop
out
jbe
shll
dec
bound
cltd
xchg
sbb
dec
mov
mov
insb
test
push
aas
aaa
mov
pop
hlt
mov
ret
stos
jnp
fsubl
ja
std
cltd
xor
mov
mov
orb
aad
cmp
div
mov
mov
lock
adc
xor
push
xchg
sub
push
stos
mov
fdivrl
imul
std
shrb
xchg
mov
lds
xchg
movsb
push
movsl
aad
lds
sub
daa
jecxz
mov
loopne
cwtl
adc
pop
mov
in
xchg
mov
movsb
cmp
pop
repnz
adc
loopne
sbb
cs
cmp
xchg
insb
shlb
mov
and
push
loopne
rcll
ja
mov
lret
sti
test
mov
lds
xchg
sub
outsl
dec
jecxz
sub
add
jge
scas
adc
and
out
test
push
or
push
mov
sub
cmpsb
push
in
inc
dec
popa
add
dec
mov
mov
imul
ss
pop
hlt
mov
ret
test
loopne
xchg
cld
cltd
xor
mov
mov
orl
aad
aam
cmp
mov
repz
mov
lock
adc
xor
das
lret
push
xchg
sub
sbb
imul
cld
shrb
xchg
mov
les
xchg
mov
lds
sub
es
jp
inc
dec
loope
filds
cwtl
adc
pop
mov
in
xchg
mov
movsb
cmp
pop
repnz
xchg
ret
sub
pop
out
ja
jl
cs
cmp
xchg
imul
dec
add
shrl
fistpll
rcll
jbe
mov
leave
cli
xorl
sbb
lds
sub
outsb
dec
jecxz
sub
add
jl
scas
adc
test
cmpsl
ds
and
push
mov
sub
movsl
or
dec
fcomip
pusha
add
dec
mov
mov
push
sbb
add
xor
push
pop
hlt
xchg
ret
test
adc
arpl
ja
sti
cltd
xor
dec
mov
orb
mov
mov
cmp
hlt
repz
scas
pop
lock
adc
xor
xchg
sub
sbb
mov
fidivrl
shrb
xchg
mov
ret
dec
lock
mov
lds
sub
and
inc
dec
loope
fiadds
cwtl
setns
lret
mov
jmp
sbb
mov
movsb
cmp
pop
repnz
xchg
ret
daa
jns
pop
in
ja
jnp
lods
cmp
xchg
push
mov
add
push
fidivrs
rorl
jne
mov
enter
xorb
sbb
lds
xchg
sub
insl
dec
jecxz
sub
add
jnp
lods
adc
test
cmpsw
ds
and
push
mov
sub
movsb
or
jnp
lds
negb
cltd
nop
pop
decb
and
fwait
add
xor
mov
hlt
xchg
ret
cmpsl
jnp
fldenv
ja
cli
cltd
xor
xchg
call
or
insb
rcrb
rorb
pop
lock
test
add
xor
xchg
sub
sbb
imul
cli
shrb
nop
mov
ret
xchg
cmpsl
ds
lds
sub
and
jecxz
mov
fldl
cwtl
push
cwtl
push
mov
ljmp
mov
movsb
cmp
pop
repnz
es
pop
in
ja
jp
lods
aaa
xchg
imul
sbb
mov
fdivrl
rorl
cs
out
pop
adc
mov
das
dec
rcll
popf
es
pop
mov
shlb
adc
test
fs
xchg
pop
or
pop
jmp
or
jl
ret
dec
loopne
pop
add
inc
scas
and
cltd
add
xor
pop
cmc
test
jl
xlat
pusha
loope
xchg
clc
lcall
dec
mov
mov
sahf
insl
rcrb
rorl
lods
pop
icebp
fldl
jne
js
xor
xchg
sub
sbb
insb
add
shrb
dec
lock
test
adc
push
movsl
shlb
sub
and
dec
loope
faddl
cltd
or
and
sbb
movsb
cmp
pop
repz
ret
and
loopne
adc
cwtl
das
stos
xor
mov
decb
aad
push
fidivrl
rorl
jae
mov
adc
mov
xor
dec
rcll
pushf
and
dec
push
mov
shlb
adc
test
arpl
movsb
dec
mov
pop
call
or
jge
rorl
pop
add
lea
push
mov
xchg
add
xor
pop
testb
jge
pop
loope
nop
negl
xchg
in
mov
mov
popf
xlat
outsb
iret
push
cmp
mov
cmc
mov
stos
pop
icebp
fildl
stos
je
js
cs
xor
dec
xchg
sub
sbb
insl
add
not
imul
dec
lock
test
movsl
into
xor
pop
out
sub
and
dec
loope
fildl
lcall
and
sbb
movsb
cmp
pop
hlt
add
jnp
push
loopne
ja
js
xor
lret
mov
std
xchg
mov
insl
push
fdivrs
rorl
jb
mov
adc
scas
pop
xor
dec
iret
xchg
sub
push
out
and
add
jne
cmpsl
jl
test
bound
movsb
dec
mov
pop
out
sub
sahf
or
jle
mov
add
incl
and
xchg
incl
xor
pop
testb
jge
aad
loope
negb
xchg
jecxz
mov
mov
pushf
xlat
outsb
into
push
cmp
xchg
cmc
mov
test
adc
sub
dec
xchg
sub
sbb
insl
add
cmc
shrb
lea
xchg
test
movsl
int
pop
gs
sub
pop
xchg
jl
inc
dec
loope
fiaddl
lcall
and
pop
jg
mov
movsb
cmp
pop
hlt
add
adc
loopne
adc
xor
lret
cld
test
mov
insl
dec
xlat
cmp
or
mov
les
test
lods
push
xor
inc
into
xchg
sub
imul
push
mov
shlb
push
mov
inc
out
test
popa
stos
inc
xchg
sbb
pop
out
sub
popf
pop
out
cmp
add
incl
and
xchg
incb
das
mov
cmp
push
pop
testb
jge
aam
loope
mov
fwait
xor
mov
xchg
loop
mov
mov
fwait
xlat
outsb
int
cmp
xchg
cmc
mov
test
icebp
flds
stos
jb
js
sub
xor
lds
sub
pop
mov
insl
add
hlt
shrb
mov
xchg
test
movsl
int3
xor
pop
fs
sub
push
xchg
jl
aas
dec
loope
flds
lcall
and
push
jle
scas
aaa
movsb
cmp
pop
hlt
add
jnp
push
fsubp
ja
jbe
xor
leave
mov
sti
test
mov
insl
dec
cmp
pop
jo
mov
ret
adc
lods
adc
xchg
sub
addr16
out
and
add
jae
push
ds
out
xchg
pop
stos
inc
xchg
sbb
movsl
dec
mov
pop
in
sub
pushf
add
dec
loope
pop
add
add
and
xchg
cld
inc
fsubrs
dec
pop
idivb
les
mov
loop
mov
fwait
xor
inc
mov
mov
cltd
xlat
outsb
lret
push
cmp
mov
cmpsl
pop
repnz
adc
sub
xchg
jle,pn
dec
out
mov
insl
add
repz
mov
mov
test
cmpsb
lret
xor
pop
in
sub
jl
ds
loop
xlat
add
ret
sub
mov
push
jl
lods
aaa
movsl
cmp
into
pop
hlt
decl
jl
push
fucom
js
je
xor
mov
mov
sbb
outsb
dec
aad
rolb
outsb
cmc
mov
rcll
bnd
push
stos
adc
leave
inc
int3
xchg
sub
gs
out
pop
mov
push
mov
add
movsb
or
xchg
pop
stos
inc
sbb
cmpsb
dec
mov
pusha
loop
sub
jg
mov
push
popf
xchg
push
inc
test
mov
xchg
cli
inc
fldcw
mov
cmp
jge
lds
jle
rcrb
jp
icebp
pushf
xor
scas
add
jbe
and
leave
push
ds
ljmp
xlat
cmp
jp
sub
cwtl
das
jge
push
out
lahf
mov
shll
add
and
mov
mov
fldt
cmpsl
lret
pop
pusha
jmp
lds
out
mov
dec
jecxz
aad
fwait
push
nop
push
ret
mov
adc
cmpsb
cmp
std
mov
pop
mov
fsub
jns
jb
xor
mov
mov
sbb
outsl
dec
sarl
add
testb
mov
js
test
lret
cld
arpl
xchg
sbb
outsl
push
out
shrl
or
mov
pop
lods
inc
lea
adc
loopne
lds
mov
pop
sahf
test
add
cmpsb
and
and
mov
ds
popa
clc
jnp
pop
cmp
jnp
out
popf
xor
lods
add
je
and
enter
sub
mov
movsb
pop
repz
adc
adc
xor
rorb
jnp
push
call
iret
xor
gs
and
repnz
stos
inc
or
adc
pop
jmp
out
mov
dec
jecxz
aam
pushf
add
and
adc
fsubrs
lret
pop
idiv
xchg
pop
mov
jns
jno
xor
les
mov
pop
fnstenv
sarl
add
mov
mov
js
cmpsl
adc
inc
enter
bound
xchg
sbb
pop
out
shrl
pop
es
icebp
mov
pop
lods
inc
mov
cmpsl
inc
lods
lret
fbld
lds
mov
or
aaa
jno
xlat
repnz
lret
je
faddl
and
test
sbb
inc
stos
lods
dec
rcrb
movsb
jp
lret
mov
xchg
dec
imul
pop
fcmovb
sarl
js
fistpll
pop
lds
add
ljmp
inc
lods
sub
mov
lock
cltd
mov
in
pop
add
icebp
std
push
mov
ss
pop
jecxz
in
jnp
out
test
ljmp
sub
mov
cs
inc
pusha
or
jmp
push
inc
mov
mov
into
dec
imul
pop
and
icebp
fucomi
jge
add
lea
pop
cmp
add
pushf
ljmp
mov
out
mov
roll
xchg
loope
mov
lock
push
xchg
es
test
xor
mov
xor
lret
mov
xchg
dec
mov
jns
bound
mov
stc
pop
mov
int
orb
ja
lret
imul
in
in
or
xor
inc
xchg
sbb
adcl
das
nop
leave
test
inc
adc
insl
pusha
test
sbb
and
dec
sub
xor
mov
pushf
xchg
lea
in
push
mov
jp
je
dec
je
cmp
popf
pusha
out
scas
jae
sub
loop
xchg
xchg
cmp
xor
mov
mov
xor
and
cmp
push
rcl
gs
sbb
jno
pop
out
add
inc
outsb
mov
jne
mov
jo
scas
add
scas
pop
sbb
mov
daa
outsb
popa
sbb
test
in
mov
xor
xor
adc
repz
in
les
in
popf
xlat
repz
dec
daa
outsl
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
addr16
ret
adc
mov
stos
or
and
lahf
jecxz
fucomi
sbbl
mov
push
outsb
mov
les
outsb
xchg
fadd
loope
adc
scas
mov
aas
pop
cmpsb
rcrb
scas
nop
out
dec
jb
push
xor
mov
mov
mov
lock
xor
inc
outsb
push
add
cwtl
mov
notl
mov
xor
mov
sbb
hlt
dec
orl
rclb
les
hlt
sub
xor
fstl
add
jmp
push
incb
cmp
cld
mov
sub
fsubrs
sbb
adc
xor
insl
jl
rcl
xor
inc
int
and
in
push
data16
int
and
jo
xor
pop
jl
sbb
or
cli
bnd
in
test
add
aas
data16
mov
shlb
test
push
push
scas
test
and
pop
push
cmpsb
imul
or
ss
mov
xchg
adc
mov
inc
dec
rclb
std
es
lods
out
fs
stos
xchg
cmpb
dec
jo
lret
jl
adc
pop
inc
daa
adc
cmpsb
imul
in
mov
bound
mov
outsl
out
pushf
cmp
sbb
test
pop
or
addr16
call
pop
add
cmp
nop
in
pop
jo
enter
int3
pop
pop
loope
push
push
movsl
shl
pop
loope
stos
xchg
lret
xor
rorb
pop
hlt
aas
push
loop
cmp
stos
loop
jb
jle
push
sbb
pop
fbstp
and
or
push
das
jo
in
pop
cltd
push
push
and
fsubs
add
jmp
push
add
dec
xor
mov
push
les
mov
pop
jg
jp
xchg
add
dec
ljmp
mov
adc
adc
cmp
adc
jp
sbb
stc
lret
ss
daa
sbb
push
data16
std
mov
add
inc
mov
sub
lods
sarb
and
sub
mov
dec
cmp
ret
or
push
test
sbb
jg
out
sahf
js
jae
mov
lret
mov
cmp
xchg
inc
scas
sahf
jae
pusha
cmpsl
rol
adc
cmp
sbb
jne
aam
jmp
xlat
push
insb
and
lds
xor
inc
and
xchg
out
cwtl
insl
dec
inc
fnstenv
cwtl
mov
sbb
subb
mov
fs
dec
mov
jmp
stos
push
inc
push
push
stos
mov
cld
push
mov
mov
lcall
icebp
jecxz
scas
outsb
or
inc
push
jg
sbb
lds
and
repnz
cmp
sbb
loopne
pop
inc
inc
lahf
mov
or
jle
shr
rol
cmp
insl
scas
cmp
imul
pop
adc
push
xchg
jmp
adc
shr
cwtl
cltd
sbb
test
in
ret
xor
xor
sahf
movsb
int3
add
dec
bound
testl
movsl
jno
jl
pop
push
add
mov
arpl
xor
lret
mov
adc
into
xor
orl
clc
sub
dec
xchg
pop
insl
jno
test
jno
aas
scas
xchg
sahf
arpl
rolb
push
mov
xor
mov
sub
push
stos
rorl
adc
rclb
cmp
jnp
xor
mov
fdivrl
mov
dec
push
or
sti
hlt
ljmp
adc
add
cwtl
lret
push
insl
sahf
inc
mov
outsl
sbb
cli
mov
cmp
and
cli
pop
xor
sti
push
js
idivb
inc
sbb
mov
stc
sbb
push
sub
pop
cmpsb
dec
adc
pop
mov
add
popf
fs
adc
mov
adc
pusha
stc
in
jne
cli
adc
fidivrs
adc
cmc
xchg
hlt
jge
or
pop
div
shrl
xor
repz
and
jle
dec
xor
push
cmp
shrb
inc
mov
lods
out
popa
sub
loopne
enter
sub
adcb
dec
xor
imul
movsb
cmp
int
pushf
rol
lods
push
cmp
mov
ja
jnp
mov
test
out
add
idiv
data16
shlb
movsb
inc
lret
sbb
add
push
popf
inc
add
int
mov
mov
sbb
mov
bound
arpl
jno
dec
nop
add
into
mov
pusha
adc
in
adc
dec
or
cmp
popa
subl
jb
sub
cmp
push
cmpsl
pop
ja
sub
scas
pop
sbb
cwtl
dec
xor
scas
add
pop
fisubl
popa
push
out
fwait
dec
movsb
jnp
lret
in
and
cmp
iret
mov
mov
inc
les
data16
inc
pinsrw
cs
dec
jl
sub
cmp
pop
sahf
sub
in
ss
xor
jb
shll
adc
mov
xchg
cmp
iret
inc
mov
and
cmp
es
cmp
jne
into
mov
dec
cmp
pop
hlt
jb
jl
or
nop
cmp
push
mov
rolb
mov
stos
inc
mov
hlt
mov
dec
popa
add
lea
jg
cmpsb
outsb
std
out
xchg
and
push
and
push
pop
adc
scas
ret
mov
lods
jmp
xchg
sarb
dec
das
jle
out
xor
jge
sbb
pop
cwtl
rolb
or
mov
mov
jae
inc
mov
or
and
dec
xor
aaa
arpl
add
pslld
insb
xchg
mov
outsl
push
sub
jne
jg
mov
dec
xchg
push
test
pop
pop
cmc
iret
adc
mov
inc
dec
mov
adc
pop
xorl
add
xor
arpl
lahf
daa
sbb
xor
and
movq
cmp
push
dec
aaa
add
out
cli
pop
les
mov
cmp
or
sbb
or
sbb
sbb
cmpb
lret
jecxz
xor
jg
mov
stos
scas
shll
add
sbb
pop
aas
push
xor
dec
stos
fsts
loopne
rorb
cld
xchg
jp
mov
add
imul
fistpll
add
arpl
cmp
out
clc
sbb
pop
and
je
sbb
mov
hlt
mov
mov
in
int
imul
fs
inc
call
cwtl
sub
call
insl
xor
mov
push
pop
fldenv
add
add
sbb
fsts
cltd
stos
clc
ret
pop
mov
dec
fwait
xchg
std
push
lds
dec
lret
imul
dec
adc
mov
pop
shlb
sub
mov
jmp
lea
lcall
xlat
push
rclb
or
inc
or
mov
sar
scas
out
or
jbe
outsl
stos
mov
scas
cwtl
nop
and
dec
pop
sbb
cmpsb
xchg
mov
sahf
mov
int
cmpsl
dec
mov
outsb
sbb
sub
push
out
bound
mov
test
xchg
call
pop
jge
add
and
je
in
xor
adcl
movsl
adc
jae
jbe
pop
jne
jne
movsb
hlt
testl
popa
jmp
jge
push
pop
fsubrs
pop
mov
in
aad
pop
ds
inc
dec
sbb
insl
rclb
sti
aaa
cmp
adcl
mov
cmp
xchg
jbe
stc
stos
push
mov
cmp
jg
insl
xor
stos
std
mov
mov
pop
loop
out
sub
mov
ret
pop
push
sbb
leave
push
inc
jle
push
pop
push
notl
cmc
pop
loopne
sub
cmp
xchg
or
sub
pusha
push
dec
stos
insl
inc
add
out
add
or
frstor
push
aas
into
xchg
sbb
sub
shr
mov
