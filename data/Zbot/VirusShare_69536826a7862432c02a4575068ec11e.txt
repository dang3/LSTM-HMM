sbb
add
adc
mov
repz
call
scas
ret
js
inc
lret
dec
fistpll
test
adc
pop
xlat
adc
out
js
pop
inc
insl
push
push
xor
xchg
test
cmp
push
daa
jo
fisttpl
or
bound
dec
lds
jb
ficomps
int
add
xor
and
lods
inc
mov
mov
lods
jmp
js
insl
enter
daa
mov
and
sbb
sub
mov
mov
insb
aas
fcomip
out
mov
scas
xchg
nop
iret
push
pop
movsl
cmc
cmp
aad
or
mov
push
cmp
ret
mov
insl
bound
mov
mov
cmp
inc
sub
in
shll
adc
leave
cmp
packssdw
repnz
movsb
cmpsl
xchg
dec
mov
mov
sar
mov
jle
mov
and
and
leave
inc
int3
or
push
xchg
out
orl
imul
xchg
iret
xor
jns
fstpt
xchg
mov
dec
ss
ficomps
mov
or
aas
loope
mov
or
lock
fwait
loop
aas
cwtl
into
xor
xchg
int3
adc
adc
pusha
mov
shlb
scas
insb
xor
std
ret
dec
shrl
sarb
in
movsb
pop
aad
fldenv
fsubrs
iret
mov
mov
adc
fadd
inc
pop
push
std
gs
xchg
pop
xchg
adc
iret
aas
data16
imul
lret
xchg
sub
sbb
push
icebp
pop
cmc
and
mov
pusha
jbe
iret
jo
rcrb
and
daa
xchg
push
out
in
push
leave
fsubl
mov
cmp
push
ret
push
insb
cmpsl
dec
sub
int
dec
shll
cmp
loopne
sbb
leave
xor
repnz
jo
push
pop
movsb
jle
inc
outsb
push
and
xchg
adc
pop
sub
push
lahf
and
lock
out
lcall
xchg
adc
pop
in
push
inc
inc
or
jp
xor
mov
xchg
xchg
decb
daa
mov
scas
scas
mov
in
adc
push
in
inc
loop
jmp
test
lods
pop
in
mov
fwait
test
das
sahf
cmp
adc
mov
push
pop
inc
push
nop
rolb
ljmp
cmpl
negb
jl
movsb
inc
es
mov
addb
and
mov
stos
fsubl
mov
jle
jmp
inc
cld
jl
fmulp
jbe
xor
and
fadd
jg
lods
sub
orb
icebp
shrl
xorl
aad
add
jnp
or
xor
and
mov
dec
repnz
mov
jge
sub
and
push
cltd
add
or
mov
iretw
add
mov
xchg
fisubrs
jle
mov
enter
pop
outsl
lahf
loopne
out
testl
outsb
xlat
loopne
out
ret
inc
fs
movsb
mov
popa
xchg
subl
ds
jo
sub
in
cmp
cmp
cmpsl
cmp
sbb
nop
loop
or
mov
push
pop
xor
sub
jo
push
xor
gs
lahf
ret
psubw
repnz
pop
sub
in
roll
cmp
pop
fmull
iret
insl
test
stos
int
jno
or
and
cld
add
adc
fs
and
jle
divb
out
cmp
stc
add
jno
xchg
adc
dec
sahf
push
push
mov
push
insb
inc
jbe
xchg
addr16
outsl
inc
jno
xchg
add
adc
pop
test
jne
nop
mov
aam
or
xchg
stc
icebp
cwtl
insb
xor
xor
imulb
dec
pop
mov
std
fwait
dec
jmp
aad
xorl
push
sbb
mov
xor
fdivs
mov
mov
inc
adc
loop
fists
cltd
gs
fnstsw
and
out
mov
stc
xchg
cltd
sahf
insb
int
dec
sub
fcom
sub
mov
pop
cmp
xor
insb
xor
cltd
arpl
leave
mov
mov
fsubrl
jns
xchg
push
loopne
cs
imul
jecxz
ret
fnsave
add
cmpsl
push
les
daa
jns
mov
jle
das
dec
push
dec
xchg
cli
shrl
scas
mov
bound
faddl
dec
stos
push
out
mov
arpl
mov
fnstsw
repnz
leave
daa
xor
or
sbb
jecxz
les
mov
xchg
std
or
inc
push
cmpsl
aam
adc
repz
cltd
cmp
or
loop
xchg
inc
ljmp
push
inc
or
les
pop
xor
fistps
rclb
cmp
sub
in
pusha
cmc
xchg
mov
pop
cmp
mov
cmp
bound
xor
lds
ss
or
ret
out
or
cmpsb
adc
cmp
xor
push
stos
cmpsl
cld
sarb
hlt
push
pop
scas
sbb
xchg
push
fcoms
lret
inc
popa
loope
inc
addr16
add
mov
daa
test
mov
dec
imul
in
mov
fdivs
mov
xor
xor
push
insl
shll
les
inc
cltd
test
add
cwtl
bound
jmp
push
and
mov
add
mov
or
inc
sub
inc
test
iret
xor
fildll
jmp
jecxz
mov
dec
arpl
lahf
test
sti
aam
cs
and
in
roll
rcll
push
hlt
mov
xchg
into
or
lock
push
mov
cld
je
arpl
rol
jg
insb
mov
mov
push
inc
jno
call
mov
xor
inc
aas
imul
stc
sti
les
bound
lods
iret
fsubl
gs
clc
fs
xchg
or
int3
pop
push
pop
or
imul
xchg
inc
in
mov
pushl
push
pusha
in
inc
pop
fldt
mov
push
xchg
hlt
je
dec
xchg
cmpsl
jl
test
in
outsl
int
xchg
outsb
mov
sub
cmp
adc
mov
mov
jecxz
inc
xor
adc
daa
jo
mov
insl
sub
and
dec
mov
push
shrb
mov
fiadds
test
adc
test
repz
shl
mov
dec
xor
mov
gs
add
xchg
mov
fbstp
lret
cvtpi2ps
das
adc
push
popf
cmpsl
cmp
sub
push
cmpsb
enter
mov
mov
jl
cmpl
insb
mov
cmp
inc
gs
lea
fsubrs
ds
dec
enter
call
sbb
cmp
xor
adc
or
icebp
sub
push
mov
insl
stc
roll
lods
jo
sti
xchg
insl
das
test
test
inc
xchg
pop
fs
jecxz
jnp
adc
xchg
mov
out
or
pop
mov
jno
lods
push
inc
xor
pop
mov
shr
sub
bnd
dec
cmp
adc
mov
es
xor
mov
mov
xchg
jno
inc
dec
gs
jb
pop
inc
pop
paddb
cmp
dec
incb
dec
cmpsb
mov
idiv
sub
xor
xor
sub
cmpsl
xor
or
mov
push
cltd
inc
insl
xchg
hlt
icebp
stc
jbe
ljmp
test
ds
jno
lret
push
pop
mov
push
fs
pop
imul
dec
cmp
mov
das
shlb
lret
sub
call
mov
add
movsb
in
jns
jae
scas
aas
imul
add
xor
lcall
pop
push
rclb
jns
int
mov
push
scas
mov
mov
inc
adc
inc
xor
xchg
stc
push
test
fs
mov
xchg
sub
xor
xchg
inc
mov
pop
ret
iret
cmpsb
and
mov
mov
cmp
loopne
pop
push
and
add
add
mov
push
xchg
divb
sti
adc
out
cmpl
xchg
sarl
imul
inc
sbb
lret
stos
inc
xlat
sbb
mov
ret
jl
jbe
rcrb
out
insb
out
aaa
mov
stos
repnz
or
lahf
int3
ret
loopne
repz
dec
dec
rcrb
cmpsb
cmp
or
xchg
push
test
jg
mov
sub
out
cmc
push
sahf
mov
into
jl
loope
repz
pusha
push
ljmp
inc
jg
dec
jle
ret
cmp
in
es
and
aaa
outsl
mov
rol
sbb
sbb
data16
push
aad
mov
adc
inc
push
or
insl
push
dec
cmpsl
mov
test
imul
fidivl
into
jmp
sub
xchg
addb
mov
jle
dec
xor
in
adc
es
mov
pushf
push
movsb
push
pop
push
push
sbb
in
cmc
lods
notb
jg
mov
pop
cmp
mov
xchg
mov
stos
and
inc
inc
add
ret
inc
outsl
sbb
add
retw
sub
and
inc
mov
add
std
jp
test
cltd
lods
in
mov
adc
xor
insl
add
imul
push
ljmp
subb
pop
das
in
dec
xor
sub
dec
push
xchg
sarl
inc
push
hlt
and
mov
lcall
cmp
xchg
out
pop
push
fnstcw
out
test
lock
les
adc
jmp
xchg
daa
sub
cli
inc
lcall
cli
mull
stos
jne
push
cmpsl
outsl
inc
and
fldcw
imul
or
cmpl
push
testl
inc
adc
pop
incl
cmp
sbb
push
ret
jmp
inc
das
add
mov
pop
cmc
outsb
cmp
jae
mov
add
and
test
iret
repnz
divl
sub
mov
pushf
mov
mov
pop
std
ja
cs
mov
aam
loop
dec
ror
jmp
dec
out
loop
dec
mov
add
dec
shr
dec
imul
out
aaa
repnz
sub
add
mov
scas
jge
shlb
in
cmp
jnp
leave
pop
into
test
fimull
push
xor
cmp
std
arpl
icebp
push
repnz
mov
popf
cmp
loop
mov
mov
add
out
mov
dec
push
sbb
xchg
fbld
xchg
push
imul
mov
dec
cmpsb
add
cmp
xchg
dec
mov
sahf
cwtl
pop
add
sbb
std
mov
inc
jb
push
add
ds
pop
cmpsl
push
jl
sub
jo
xor
or
pop
adc
xchg
clc
xor
mov
insl
pushf
pop
loop
lahf
pop
inc
addr16
fildl
mov
push
icebp
xchg
mov
inc
lods
daa
inc
das
es
add
test
sub
mov
fildl
jecxz
lods
lcall
mov
pop
dec
sti
xchg
das
mov
jge
lock
insl
lods
in
test
sti
loopne
dec
rcl
mov
test
test
mov
cs
or
and
pop
aas
cs
in
test
and
jmp
xor
cmp
pop
push
cli
scas
inc
sbb
pop
jl
sbb
dec
rolb
dec
dec
lds
mov
mov
mov
hlt
arpl
mov
dec
data16
inc
push
inc
or
add
mov
jns
scas
jo
in
rorb
mov
mov
mov
mov
adc
ljmp
jo
ja
pop
jb
ja
addb
es
mov
cltd
xor
insb
inc
leave
fstl
xchg
push
lahf
js
mov
aam
adc
adc
jne
lea
sbbb
mov
psubsb
jl
popf
mov
pop
push
dec
dec
and
pop
insl
mov
cmpsl
shll
ret
fwait
mov
ret
mov
dec
imul
pop
xchg
fnstcw
std
or
in
push
icebp
adc
outsb
jp
ss
cli
jno
rcll
jo
cltd
scas
ja
add
pop
adc
xchg
sbb
pop
mov
iretw
pop
push
repz
push
test
fidivrl
jl
call
cltd
mov
dec
cltd
repz
addl
test
mov
mov
ret
pop
or
shlb
cmp
dec
lods
lahf
dec
pop
call
insb
dec
adc
ja
push
jno
xchg
rol
sbb
lcall
orl
adc
sub
popa
rorb
inc
scas
adc
xlat
lcall
fs
mov
insl
jmp
mov
inc
jnp
add
xchg
sbb
out
xor
cmc
adc
or
in
daa
jecxz
or
mov
fstpt
jno
movsl
outsl
xor
mov
inc
cmp
adc
fnsave
popa
test
enter
pop
push
fsubrs
mov
or
and
mov
inc
adcb
xchg
push
rolb
cwtl
addr16
ss
sbb
jno
ds
jmp
jb
push
pop
mov
sub
addr16
lods
shlb
push
enter
or
xor
lods
inc
cmp
mov
xchg
incb
xchg
popa
lea
aam
scas
or
or
jbe
cmpsl
mov
sbb
adc
sub
rcrl
movsl
and
xchg
sub
mov
test
sub
adc
inc
mov
addr16
ljmp
cmp
stc
xlat
cmpsb
test
cmp
or
out
imul
scas
dec
push
push
hlt
orb
pop
push
mov
lret
std
dec
push
push
test
out
inc
or
mov
leave
xor
pop
outsb
fistl
xlat
xchg
mov
cmp
fcmovbe
pop
xchg
ja
jecxz
dec
cltd
fiadds
jmp
andl
xchg
mov
leave
xchg
or
adc
mov
jne
pop
outsl
adc
insb
jbe
pop
imul
hlt
xor
dec
mov
ss
mov
insb
popa
mov
js
dec
or
clc
sbb
and
inc
ss
ljmp
push
pop
and
test
addr16
adc
les
mov
fsincos
xchg
mov
mov
mov
mov
movsl
fs
movsl
in
std
in
fidivrs
das
dec
fcomps
pop
sbb
mull
add
mulb
dec
popa
shl
in
sub
ljmp
popf
add
adc
ret
popa
movsb
sub
jge
cmp
mov
jbe
xlat
orb
arpl
adc
daa
sbb
repz
pop
orl
jae
stos
outsl
repz
and
daa
repnz
imulb
jl
mov
adc
cld
mov
add
mov
test
mov
sub
clc
lret
rclb
add
rcrb
inc
iret
or
jns
mov
adc
scas
pop
add
adc
adc
sbb
cltd
xchg
add
pop
mov
daa
fisttpl
inc
sbb
cltd
adc
mov
mov
adc
sbb
pop
scas
adc
imul
pop
mov
cli
popa
ja
mov
mov
xlat
fdivs
jle
shlb
sub
cmp
sbb
gs
mov
js
fwait
sbbb
aad
xchg
and
insl
in
xchg
sarb
dec
and
fistl
sarl
inc
jp
andps
xchg
and
movsl
fisubrl
repz
add
orb
test
stc
xchg
fnstenv
sbb
pop
dec
in
pushf
ss
sahf
pop
mov
push
clc
cwtl
stos
xchg
lods
push
out
cmc
nop
subl
repnz
xchg
cs
test
ret
minps
inc
mov
aad
mov
push
mov
lods
jne
sbbl
jb
dec
gs
cmp
cmc
int
fisubrl
in
imul
icebp
lods
sti
int3
mov
in
cmc
ret
gs
sbb
jl
push
sbb
fstpl
or
and
frstor
and
mov
adc
adc
jno
inc
and
dec
or
sti
stos
sarb
rolb
cmpsb
shlb
int
vmovq
insl
xor
enter
jne
pop
test
clc
clc
mov
int
repnz
pop
std
adc
loop
jb
xor
push
lcall
fimull
rcll
push
mov
sub
sarb
xchg
std
es
les
and
jle
sub
jecxz
mov
push
sbb
add
lock
mov
mov
pop
jns
mov
sbb
cli
sbb
data16
sbb
arpl
inc
push
sbb
jae
imul
pushf
ffreep
iret
or
test
adc
iret
and
adc
sahf
mov
adc
push
jmp
add
xchg
ljmp
jns
pop
lret
mov
sub
leave
les
stc
mov
sahf
sub
icebp
pop
add
sbbl
add
jae
lret
mov
adc
xor
negb
xor
insl
out
test
lahf
push
pushf
cmp
loopne
mov
cltd
lret
sar
mov
mov
outsb
and
aam
jo
subb
dec
lahf
fisubrl
mov
ds
arpl
sbb
adc
cmc
repz
and
sub
inc
dec
aaa
rorb
outsb
cmc
cmp
push
push
scas
fsubs
mov
xor
add
loopne
popl
push
roll
mov
testl
adc
hlt
leave
imul
repnz
pop
pop
xorb
dec
xchg
in
push
bnd
jo
push
or
sbb
fstpt
es
mov
jecxz
xchg
ret
jp
sub
xchg
imul
mov
inc
pop
sbb
xchg
mov
fildll
jmp
lahf
jg
adc
fmulp
mov
inc
mov
dec
repz
sahf
in
ds
int
iret
fisubrl
cwtl
mov
push
in
cmp
ljmp
repz
lods
cltd
lods
out
fs
std
or
jnp
rcll
pop
fsubl
mov
jne
add
ret
dec
mov
out
jne
mov
fidivs
push
inc
scas
imul
adc
jp
push
cmp
inc
into
mov
rol
rclb
sub
insb
push
pop
mov
mov
in
and
and
and
pop
push
lret
ss
fstl
stos
lcall
pushf
push
fnstenv
adc
sub
imul
rorb
fsts
dec
sbb
das
mov
adc
loop
bound
push
xchg
lods
bound
pop
and
inc
mov
hlt
xor
xchg
xor
xchg
pushf
dec
pop
into
mov
xlat
push
cmpsb
ljmp
out
xor
xchg
xlat
or
inc
mov
cmc
and
gs
cmp
dec
movsl
dec
lea
pop
adc
insb
lcall
enter
cmp
cmp
push
pop
fstl
push
out
repnz
push
cmp
decb
fbstp
imul
mov
mov
divl
or
mov
subl
popf
test
aaa
jne
arpl
jge
cs
lock
jecxz
enter
add
outsl
add
aaa
fistpl
jo
inc
pop
cvtpi2ps
xchg
push
xchg
inc
dec
aaa
mov
test
and
cmp
mov
stos
xor
dec
adc
xchg
xchg
cli
lds
dec
adc
add
mov
jp
idivb
imul
out
aaa
mov
sbb
xchg
mov
outsl
stos
sub
xor
mov
xchg
add
repz
std
jno
mov
mov
out
or
popf
icebp
int3
pop
movsl
call
in
es
xlat
push
cmp
sub
neg
xor
mov
jb
cwtl
fsubl
dec
cli
fcmovb
out
adc
or
or
addr16
movl
mov
fistpll
push
lea
ss
icebp
sub
or
test
dec
jno
nop
jb
ljmp
stc
inc
dec
cmc
iret
mov
lea
push
scas
mov
or
outsl
mov
sbb
lret
inc
rorl
sub
stc
jno
repnz
mov
adc
mov
mov
gs
inc
stos
lahf
sub
mov
xor
aam
dec
mov
sub
and
lods
sub
sbb
or
test
lds
dec
inc
dec
xchg
xor
outsl
inc
in
sarl
jb
xchg
int
xor
leave
and
xor
mov
pushf
std
sbb
outsb
outsl
daa
push
out
and
push
pop
jne
mov
ret
dec
adc
rcrb
adc
pop
push
ss
in
out
mov
sub
imul
push
push
pop
shrl
aaa
je
mov
add
mov
mov
test
lds
pushf
pop
inc
dec
gs
out
rcr
es
adc
xor
xor
add
aaa
into
pop
shrl
push
jg
jbe
loope
mov
mov
mov
inc
dec
sub
and
jns
xchg
aad
daa
dec
mov
insl
mov
lahf
jbe
sbb
fidivrs
jge
pop
pop
pop
push
or
mov
insl
xchg
insl
iret
mov
xor
jns
push
outsb
lock
enter
fwait
cmp
test
repnz
adc
adc
pop
gs
cmovs
and
icebp
insl
repnz
lods
ror
enter
nop
lahf
jo
jle
fmull
xchg
clc
mov
addr16
fildll
das
lret
jmp
mov
in
adc
je
loope
aam
aam
mov
jmp
and
jb
idiv
ljmp
sbb
mov
xchg
out
sub
scas
cmpsl
sbb
mov
loopne
push
xchg
mov
test
pop
sub
cmp
xor
movsb
ss
sub
popf
or
mov
into
mov
xor
insl
sbb
mov
xchg
cmp
adc
cmp
test
leave
fdivrp
lods
movsl
sbb
ret
pop
into
fwait
cmp
aam
adcb
pop
jbe
jle
fdivs
push
xchg
push
mov
inc
lahf
inc
data16
arpl
add
je
sti
xor
or
pop
fs
test
sbb
pusha
mov
shlb
push
loope
cld
push
fcompl
or
mov
xor
ret
xlat
call
pop
pop
fwait
xor
int3
add
or
cmp
popa
loopne
stos
sbb
les
bound
xchg
add
mov
jbe
dec
cli
or
loope
xor
push
push
movsb
sub
mov
ret
mov
add
lds
push
aam
testl
inc
push
stos
fs
and
adc
jnp
sub
inc
or
sbb
pop
xchg
dec
jb
jl
insb
pop
pmuludq
lock
and
movsl
add
lahf
movsb
jmp
adc
mov
int
adc
call
lahf
mov
cmp
stc
sarl
ja
sti
xor
jnp
loopne
mov
pop
addl
cmpsb
jcxz
divb
nop
xchg
cmc
pop
xchg
jmp
lret
dec
mov
subl
cmp
cs
fcomps
add
adc
scas
into
in
dec
inc
sti
in
jmp
bound
cmp
insb
sbb
rep
mov
mov
in
mov
outsl
pop
and
out
sub
ja,pn
xchg
or
push
adc
pop
out
or
jg
push
pop
in
psubsw
sub
or
addr16
xor
pop
jnp
mov
lea
les
or
sub
and
js
jns
sbb
jno
sbb
aad
sub
fmuls
aam
dec
ds
popa
pop
jg
bound
mov
pushl
in
and
pop
pushf
fsubrl
fsubrs
dec
iret
icebp
lret
sub
and
mov
jmp
lock
shlb
xor
cmpsl
frstor
test
mov
loop
mov
mov
lock
arpl
jl
pop
cmp
out
sbb
sub
push
addr16
jmp
pop
and
and
mov
in
addr16
ret
lahf
inc
gs
arpl
test
and
shrb
popa
test
dec
or
iret
leave
icebp
dec
push
mov
adc
fdivrs
or
sub
fidivrs
inc
mov
enter
push
add
daa
in
lds
popa
ficomps
mov
aad
out
sub
xor
push
lcall
cli
jp
mov
fmull
cwtl
out
repnz
jmp
jmp
xchg
dec
mov
sbb
fwait
rol
les
xchg
insb
or
call
jnp
cwtl
hlt
stos
pop
cmpl
mov
push
jp
or
in
push
and
cltd
lret
dec
lret
out
push
cli
mov
pop
pushf
stos
lret
push
int
jge
jb
lea
sub
sbb
pop
xchg
stos
fwait
lods
xchg
cmp
mov
in
fadds
rorl
gs
mov
jb
sbb
pop
pop
mov
ljmp
sti
popf
mov
sbb
fs
inc
fwait
int
jge
push
outsl
fs
sbb
aam
jbe
arpl
sub
mov
in
push
outsl
mov
lahf
push
jb
dec
pop
mov
sahf
js
cmpl
ljmp
testl
ljmp
jl
out
jns
and
neg
cmp
mov
insl
mov
pop
movsl
in
ljmp
push
aas
leave
test
xchg
xorl
push
xchg
je
jecxz
adc
xlat
popa
push
or
cmp
sarl
push
mov
shlb
rolb
pop
notb
cs
rol
mov
pusha
push
rorb
shrl
lret
cmp
inc
sbb
jnp
ret
cmp
push
movsl
loop
cmp
push
loopne
push
loope
push
fisttpll
nopl
int
or
in
mov
push
xor
mov
aam
cltd
nop
or
or
ret
push
scas
lock
mov
pop
xchg
test
add
je
hlt
cmpsb
jne
jecxz
jp
dec
pop
mov
into
int3
ret
filds
pop
cmpsl
or
or
pushf
mov
fimull
popf
mov
xchg
push
sarl
mull
dec
loope
test
cmp
in
scas
cmp
push
negl
push
fidivs
ret
inc
jle
mov
and
faddl
testb
sub
and
sbb
add
jmp
pop
sbb
inc
scas
mov
mov
inc
jno
ds
popa
stos
movsl
pop
fnstcw
js
add
insl
shll
or
sub
repnz
pop
push
dec
dec
fwait
inc
cmp
arpl
mov
bound
xor
or
addr16
loopne
lahf
dec
pop
sti
dec
mov
inc
ja
ret
add
push
sbb
pop
cltd
jecxz
mov
adc
iret
mov
divl
sti
sbb
cmp
cmp
xlat
sub
cmpsb
mov
mov
xchg
lahf
out
adc
aaa
sub
std
push
jmp
xor
mov
dec
sub
cmc
or
iret
sub
imul
test
add
in
sbb
add
inc
and
rcll
in
out
cmp
jae
xchg
stc
ret
dec
cmp
mov
jmp
jecxz
push
popf
add
pushf
ret
scas
pop
ret
cmp
add
testl
dec
stc
xchg
pcmpgtb
mov
mov
cmpsb
js
xor
repnz
cmp
xor
mov
sbb
ret
push
fdivrl
pop
jbe
mov
icebp
or
cmp
and
pop
in
push
sub
cmp
jecxz
clc
pop
mov
mov
aas
out
mov
xor
pop
divl
popf
cmp
or
imul
sub
in
and
dec
push
jl
mov
sbb
loope
adc
adc
mov
cmp
lret
lret
in
adc
or
pop
mov
loopne
shl
sbb
push
xchg
aas
add
cld
push
push
mov
adc
push
xor
xchg
addr16
scas
ds
repnz
mov
cwtl
adc
fldenv
stos
xchg
repnz
movsl
adc
idivl
cs
stos
push
mov
inc
enter
fcomps
std
outsl
or
mov
shll
jbe
imul
dec
ss
push
mov
hlt
inc
pushw
cmc
fmull
sub
imul
rol
scas
push
pop
loopne,pt
rorl
int3
jne
push
xchg
cmp
aad
push
ja
ds
mov
add
sub
pop
scas
fistl
aam
ret
adcb
inc
lock
inc
ds
add
pop
lret
loop
mov
push
pusha
push
add
icebp
jg
outsb
into
into
mov
sub
icebp
or
xchg
dec
xchg
mov
rclb
pop
sub
or
scas
xchg
int
insb
fmull
jo
xchg
mov
outsb
insb
sbb
sbb
mov
divb
jl
les
and
stc
adc
stos
or
out
jg
xchg
mov
outsl
cwtl
xor
ret
int
inc
mov
or
cmp
xlat
or
or
xchg
pushf
pop
mov
add
mov
mov
cmpsb
shl
fimuls
add
jne
inc
loop
mov
xlat
jp
add
or
movsb
mov
jnp
fucomp
and
pop
ret
int3
xor
js
pop
mov
cli
push
daa
icebp
int
mov
adc
stc
ret
fucompp
mov
push
add
inc
dec
jp
add
enter
mov
sbb
sbb
mov
jecxz
jnp
sbb
nop
sbb
mov
mov
mov
inc
jo
ret
jno
adc
jnp
repz
mov
push
adc
pushw
push
pcmpgtb
push
cwtl
test
lods
scas
stos
adc
or
and
push
clc
jb
dec
xor
inc
clc
xor
int3
pop
fstl
mov
mov
std
hlt
idivl
aad
xchg
xchg
cmp
out
sub
xchg
mov
mov
lods
sbb
rclb
popa
mov
mov
dec
int3
cwtl
imul
mov
cmp
pop
cmp
stos
jnp
cmpsl
lods
inc
shll
pop
xor
push
cltd
rol
sub
sti
repz
call
pop
mov
mov
mov
leave
adc
pop
jl,pn
lods
in
xor
ret
fdivl
dec
jns
jmp
xchg
jge
pop
addr16
loopne
test
test
inc
int
mov
mov
fs
stc
mov
clc
sbb
inc
lods
ror
fistpll
add
dec
xor
or
testl
ret
iret
ljmp
sbb
stos
xlat
jmp
sbb
fs
test
in
in
es
repnz
cltd
lret
jmp
loop
addl
xchg
insl
addr16
test
or
sbb
pop
add
xchg
loopne
mov
lret
mov
jno
fisttpl
into
and
mov
inc
lock
dec
pop
out
inc
out
movsl
sarb
cmpsb
jge
mov
adc
sub
gs
push
and
mov
bound
test
ret
cmp
xchg
fldenv
ss
orl
mov
stos
out
hlt
mov
jne
add
add
mov
and
into
xchg
dec
xchg
pop
test
adc
shlb
fwait
mov
movsl
nop
push
in
push
outsl
int
mov
frstor
and
imul
incb
xor
data16
cltd
sbb
outsl
icebp
push
jp
cld
std
adc
inc
pop
push
out
dec
call
pop
ss
jne
scas
jle
cli
xor
sbb
insl
or
xor
xchg
jp
pop
movsl
test
xor
cmp
pop
fcoms
sahf
sbb
and
adc
xchg
into
stos
add
fcmovnbe
ds
clc
pop
scas
loopne
out
adc
jno
iret
lock
dec
mov
jl
subl
lea
jnp
ljmp
stc
aaa
pushf
lcall
dec
out
xchg
and
xchg
mov
leave
shl
pusha
and
cltd
in
push
pop
sub
dec
sbb
xchg
daa
adc
dec
adc
dec
pop
or
cmpsl
test
jae
dec
lds
mov
lcall
sbb
into
pop
mov
add
and
outsb
and
dec
clc
xchg
sbb
or
rorl
jg
sbb
jmp
mov
inc
sbb
ret
jle
mov
in
inc
mov
popa
xchg
push
pop
jg
rcl
pop
xor
inc
mov
or
iret
cmp
test
jle
dec
fs
mov
xor
pop
hlt
xor
loopne
mov
sub
xchg
pop
imul
inc
mov
push
sbb
and
je
inc
bnd
pop
mov
fs
or
fsubrs
add
fnstenv
in
aad
dec
jg
lods
push
fbld
xor
xor
pop
add
xlat
les
outsl
mov
push
aad
clc
cmc
cli
xlat
xchg
ficoml
pusha
adc
add
cs
cmp
xchg
mov
inc
in
cmc
clc
cld
xor
test
notb
frstor
aad
sub
call
xchg
and
jmp
lret
les
adc
inc
cli
and
leave
cmp
add
jmp
and
test
lods
jo
fs
lret
dec
dec
inc
fcoms
out
pop
add
mov
lock
gs
lahf
aam
cld
cli
mov
jle
fs
icebp
mov
and
push
sbb
jmp
loopne
pop
ficoms
dec
mov
movsl
and
xor
xchg
push
push
iret
add
out
xor
adcl
cmp
or
lods
rorl
xlat
je
or
push
call
movsl
cmp
push
xchg
popf
es
pop
cmp
pop
xchg
ret
sbb
or
jbe
cmp
aaa
ss
inc
dec
pop
lods
cmc
shlb
dec
adc
clc
psllq
jae
frstpm(287
fwait
dec
add
xor
push
mov
add
pushf
jg
fsubrs
adc
xor
xor
or
ds
bound
sub
in
inc
jmp
or
stos
ja
enter
push
fdivl
test
sub
stos
and
mov
rorb
xchg
push
sub
rcl
pop
and
aas
insb
sahf
or
sbb
mov
xor
aad
xchg
cmc
push
arpl
jecxz
in
mov
repnz
in
insb
cmp
insb
or
loope
or
test
inc
adc
push
push
in
push
push
das
inc
cmp
repnz
lcall
push
dec
roll
shl
aad
mov
lea
jle
adc
call
lea
mov
jge
sbb
jbe
mov
and
mov
std
sbb
ret
jl
push
clc
xchg
cmp
mov
pop
push
ss
push
daa
lea
data16
pop
cmpsl
insb
lret
jb
mov
pop
imul
xlat
clc
pop
push
jo
add
fwait
lahf
hlt
pop
mov
setl
adc
or
cmp
iret
mov
inc
rcll
jbe
mov
mov
pop
loope
push
in
xchg
movsb
call
sub
rorl
push
cli
mov
add
aad
adc
es
sub
jnp
push
xor
mov
mov
hlt
ds
dec
icebp
push
or
pop
sub
mov
sarb
jle
mov
out
int
sbb
xor
or
inc
mov
cmp
mov
test
imul
xor
adc
loopne
pop
push
xor
push
insl
jl
push
adc
or
xor
cmp
fidivrl
ret
inc
sbb
push
pop
pushf
sbb
pusha
sbb
push
icebp
xchg
bound
xchg
or
jo
std
leave
dec
push
add
add
call
aas
sti
push
and
pop
cmp
mov
mov
mov
push
int
sahf
shr
sub
pop
push
negb
mov
xchg
jmp
sbb
mov
aaa
out
mov
cli
fidivl
xor
scas
sub
ss
lock
cli
orb
push
sbb
dec
cld
aas
inc
popa
aas
data16
cs
ss
jno
cmc
inc
or
sub
shlb
adc
movsl
cmp
nop
add
push
aad
loopne
lret
mov
push
jae
inc
arpl
addr16
movsb
cmp
js
outsb
lahf
lods
fidivl
push
sbb
push
sbb
jmp
int3
std
cmp
pop
sbb
inc
or
scas
out
pop
mov
fwait
lods
jmp
mov
cmp
mov
adc
fisubrs
mov
jmp
push
xor
insb
inc
or
out
jne
test
add
daa
add
daa
jl
mov
hlt
rolb
lahf
and
imul
push
mov
aam
or
sbb
inc
sahf
cld
sub
pop
or
pop
dec
inc
and
fbld
mov
clc
push
paddsb
cmc
xchg
mov
add
scas
mov
push
mov
fwait
mov
ss
outsl
inc
jmp
mov
inc
push
push
lret
pop
adc
sarb
call
adc
lods
mov
cmc
out
add
xchg
mov
xor
add
inc
cwtl
dec
xlat
dec
leave
cmp
mov
mov
adc
insl
lret
je
sbb
mov
stc
push
aaa
and
inc
push
call
testl
add
cmp
mov
jp
fwait
mov
loopne
mov
in
out
fwait
pop
testl
xchg
push
lahf
jl
cmpsl
cmp
stc
mov
sbb
in
mov
fsubl
das
push
xchg
fsub
jle
and
cwtl
in
add
xor
pop
lods
inc
jg
inc
jb
pushf
inc
dec
xchg
xchg
lods
push
addr16
mov
or
or
lods
std
ret
jb
mov
ds
lret
pop
fcomp
add
mov
out
shlb
insl
mov
les
cwtl
das
dec
cld
sti
adc
addb
and
jns
lret
and
jl
pop
cmpb
add
aaa
mov
mov
pop
rcrb
mov
sbb
or
pop
xchg
out
and
inc
jnp
dec
pop
mov
mov
and
dec
mov
jae
add
jg
xchg
jo
lea
in
sbb
lock
sbb
out
sub
or
out
jmp
adc
xchg
sahf
xchg
cmp
rcrb
add
push
push
iret
mov
rolb
mov
dec
or
push
or
add
rorl
mov
repz
pushl
das
mov
xchg
pushf
dec
clc
cwtl
sbb
pusha
sub
loopne
push
mov
movsl
jo
incb
inc
cmpl
imul
jl
xchg
jmp
jo
sub
ja
imul
inc
sub
cs
pop
in
pop
js
xchg
repz
out
out
cwtl
cltd
cmp
pop
xchg
and
pop
fs
movsl
loop
lcall
cmp
sti
lods
hlt
das
sub
jns
mov
rcrb
ss
pop
jne
insb
mov
push
or
loopne
mov
jb
mov
loope
push
and
or
and
jb
mov
icebp
and
dec
cmp
push
mov
pusha
push
jnp
adc
cs
enter
ja
sahf
mov
psubw
mov
das
xor
mov
orl
movsb
aas
xor
xchg
stos
mov
pusha
pop
fiaddl
inc
ret
fmull
and
push
rcr
push
les
jne
dec
jecxz
push
test
mov
xlat
xchg
stos
ret
orl
mov
or
push
loopne
ja
lea
jle
or
sub
jo
test
loope
es
lcall
sahf
lock
adc
sahf
loope
addr16
iret
mov
inc
clc
jns
cmc
mov
pop
popa
es
mov
mov
repnz
dec
movsl
adc
mov
or
mov
sar
cld
mov
sub
mov
and
dec
or
inc
adc
sete
xchg
in
jne
or
jnp
pop
mov
jb
mov
mov
push
inc
fists
xchg
fs
shlb
cli
bound
mov
push
dec
xchg
imul
sbb
pop
movl
shl
es
push
push
sar
aaa
push
mov
into
dec
lds
xor
xchg
fs
adc
push
sub
shrb
hlt
sub
sbb
sub
xchg
sbb
inc
mov
push
das
aas
sub
lahf
cmpsb
int3
add
in
mulb
lahf
xorl
sarb
adc
das
jne
subb
fnsave
cmp
and
lcall
mov
testb
aad
pop
cmp
xor
cli
decl
push
dec
lea
daa
push
and
incl
mov
push
cltd
add
xor
mov
mov
out
push
dec
loope
rorl
jne
sar
fimull
add
pop
call
fisttpll
push
cld
cwtl
inc
cmpsl
cmp
lods
aam
xchg
fimuls
mov
pop
lock
pop
push
ja
out
cwtl
cli
push
and
push
sbbl
stos
pop
add
adc
fstps
add
xchg
dec
push
daa
xchg
and
add
shl
call
faddp
sub
jg
jl
mov
push
addl
xor
stos
cmp
adc
sub
sti
movsl
cmp
lret
inc
test
aad
mov
adc
fidivl
push
mov
outsl
mov
fsts
mov
pop
lcall
push
pusha
leave
jl
mov
adc
dec
pushf
cmp
add
iret
xor
push
call
pushw
mov
out
or
push
fistpll
or
aaa
push
pop
xchg
lock
mov
push
push
imul
mov
leave
hlt
or
ja
jae
adc
cmpxchg
xchg
mov
fisubrl
neg
cmp
sahf
rcll
dec
pop
pusha
mov
xchg
add
outsl
adc
fld
xorl
jmp
mov
or
jl
dec
mov
mov
cli
lods
inc
pop
fisttps
and
mov
cmpsb
dec
das
pop
cmpsl
rcl
mov
pop
mov
cltd
icebp
inc
push
shll
dec
inc
mov
sbb
sahf
ja
iret
mov
pusha
and
xor
in
add
add
push
loopne
xchg
andl
data16
push
and
lcall
add
lcall
dec
fs
mov
fadd
mov
outsl
dec
cwtl
and
dec
mov
movb
xchg
xor
test
lock
rcll
pop
and
or
sub
cld
pusha
aad
mov
cmpsl
das
adc
add
loope
into
xchg
nop
push
aaa
add
xlat
and
mov
dec
xor
sub
pusha
push
cmp
pusha
mov
pushf
xchg
push
in
push
jno
add
and
and
stc
xchg
ljmp
mov
pop
sbb
fisubrs
adc
lods
mov
adc
ds
inc
add
test
lahf
in
notb
test
or
lds
pop
loop
adc
je
sbb
scas
sbb
jp
aaa
add
insl
ja
push
add
int3
mov
add
jecxz
jb
bnd
and
pop
ret
popf
sub
or
xlat
cmp
and
arpl
das
lds
fstpl
or
cmpl
js
xor
movsl
jmp
sbb
cmp
outsl
mov
push
push
das
lods
je
sub
movsl
dec
stos
cmp
xchg
scas
sub
pop
push
addr16
jns
repnz
mov
imul
adc
fsubl
add
sbbb
shll
or
pop
mov
jmp
mov
les
jl
mov
push
xchg
push
sarl
gs
mov
push
in
xlat
addr16
push
or
sbb
stos
or
cmpsb
arpl
jecxz
or
out
movsb
cltd
jl
mov
pushf
add
mov
fidivl
fstpt
push
add
xchg
jne
mov
inc
dec
rolb
in
fsub
js
mov
add
mov
lret
mov
sub
jp
clc
sbb
movsb
xchg
add
jo
adc
adc
xchg
jp
mov
loop
loope
popf
xchg
cmp
loop
nop
sbb
inc
mov
and
les
or
push
sahf
push
sbb
sti
cli
ss
mov
das
mov
adc
fisubrs
sbb
add
xchg
aas
ret
lahf
xlat
lods
inc
scas
adc
cltd
xchg
adc
mov
pop
inc
notb
sub
lods
je
scas
pop
xor
rcr
pop
xchg
push
sar
cltd
inc
jl
fs
test
add
daa
outsl
insb
in
dec
jp
jo
ljmp
jl
bound
mov
push
std
or
jns
bound
push
sbb
inc
shll
aad
dec
loope
int3
inc
outsl
mov
shll
mov
subl
xor
push
or
imul
push
xor
jns
mov
ss
test
iret
xchg
pop
mov
xor
js
sbb
adc
mov
push
or
imul
loop
lea
and
iret
jo
push
jno
push
adc
jnp
je
push
in
sbb
cli
popf
add
xchg
and
sub
jge
jle
test
jge
in
jl
insb
xor
jae
call
cmc
pop
jle
leave
ja
shll
jo
cmp
pop
push
arpl
and
bound
or
insb
fcmovnu
or
mov
pushf
jo
arpl
jecxz
pushf
je
daa
stc
adc
mov
mov
in
lahf
sub
sbb
pop
xor
and
mov
push
xchg
and
call
dec
dec
daa
jo
ss
imul
sub
mov
loop
inc
pushl
loope
push
movb
and
cmp
xlat
imul
push
scas
sarb
lret
inc
ret
adc
shlb
inc
scas
stos
lret
inc
jmp
out
mov
and
cmp
pop
jnp
das
cs
int
sbb
inc
iret
and
pop
dec
dec
nop
xor
jbe
mov
bound
or
cmp
cmp
dec
mov
inc
mov
js
sbb
stos
xchg
dec
movsl
les
shll
and
icebp
xlat
or
frndint
pop
xor
rclb
rcr
imul
call
cmp
xchg
lcall
cmpsb
ja
fimull
and
jmp
shll
mov
pushl
jns
out
mov
push
cwtl
int
inc
dec
jne
xchg
mov
add
adc
push
and
iret
je
loope
jae
cltd
sub
les
xchg
idivl
xor
outsl
addr16
pop
add
cmp
jo
gs
jl
iret
mov
xchg
mov
xor
pop
mov
mov
xorb
add
jnp
fmull
pop
in
hlt
stc
pushf
xor
adc
cmp
dec
out
leave
mov
ja
adc
push
cmp
lret
insb
fs
out
push
stos
mov
iret
cld
out
adc
dec
pushf
movsb
jo
mov
sbb
push
fcomip
sbb
xchg
pop
scas
mov
popa
mov
sub
test
or
pop
push
in
inc
jne
sub
add
lret
in
cli
pop
jge
xchg
enter
dec
dec
cmp
pop
cmp
inc
pop
ret
xchg
jbe
ja
ss
pop
filds
adcl
lds
rcl
scas
scas
sub
push
nop
orl
push
pop
pop
adc
fidivrs
pop
adc
pop
pop
inc
sbb
test
out
mov
rorl
adc
jl
and
insb
es
or
mov
lods
jae
cmpsl
jecxz
mov
dec
cmp
push
cmpsb
sbb
mov
dec
and
ja
sti
jnp
hlt
jg
stos
mov
push
inc
jno
push
inc
jb
fwait
gs
sahf
xlat
cltd
xchg
mov
cmpsl
sub
stos
js
movsl
rorl
and
push
lods
lret
es
inc
add
xor
bound
data16
sti
incl
arpl
scas
bound
ret
dec
mov
in
out
arpl
lock
pop
call
jae
inc
aad
stos
and
repnz
xchg
fcmovnu
mov
push
lds
jle
cwtl
les
insl
sub
psrlw
out
out
cmp
sub
sbb
adc
std
icebp
or
outsl
dec
and
jl
xchg
dec
call
push
ja
push
xor
cmpl
inc
fnstenv
cs
jmp
and
lea
cmp
cmpsl
test
jmp
rorb
mov
cmpsb
in
je
rorb
dec
iret
fstl
dec
rcll
loope
jns
gs
or
cwtl
es
push
jnp
mov
inc
mov
js
arpl
xchg
fmull
dec
negb
mov
pop
add
push
cmp
lfs
call
and
cmp
jbe
mul
aaa
repz
jae
pop
addr16
arpl
lds
lods
cmc
sbb
insb
jno
shrl
je
jbe
add
nop
mov
out
mov
fists
mov
mov
shll
pusha
sbb
mov
add
mov
cli
loope
pop
sub
int
push
sub
mov
pusha
jns
xchg
loop
bound
lods
xchg
hlt
push
mov
jmp
out
sbb
mov
pushf
mov
rol
dec
into
mov
inc
std
loop
xchg
jmp
jnp
unpckhps
jl
jbe
dec
loop
and
adc
mov
cmp
loop
or
outsl
push
fdivrs
mov
daa
adc
out
cmp
inc
sub
jo
push
mov
stos
out
inc
leave
mov
cmpsl
ss
cmp
and
inc
push
pop
inc
cmp
in
lret
std
sbb
pop
lds
call
int
scas
and
dec
push
pop
aas
jno
imul
pop
shr
subb
inc
cld
pop
shr
add
popa
cmp
jne
adc
push
jnp
jne
test
arpl
in
xchg
enter
cli
inc
sahf
lret
and
xlat
xor
fnsave
xor
ret
cwtl
dec
sti
scas
dec
dec
cmp
mov
xor
mov
lea
cmp
mov
sub
insl
ret
icebp
mov
hlt
or
jecxz
and
inc
mov
mov
push
push
adc
or
addr16
jnp
test
push
out
mov
out
jg
or
jae
test
xor
cltd
fs
arpl
sub
sbb
fidivrs
dec
inc
daa
jle
out
in
lret
inc
dec
or
or
aaa
jg
and
data16
fistpl
lock
or
inc
fistpl
add
xchg
adc
pop
jae
in
adc
rcrb
inc
adc
scas
dec
jns
xor
sub
inc
shrl
lods
adc
in
stc
and
cmc
pop
xchg
cmp
aam
mov
push
movsb
cltd
or
add
push
mov
mov
out
imul
in
data16
xlat
sbb
sar
inc
divb
inc
popa
movsb
xor
adc
push
popf
dec
push
ret
or
push
in
outsb
fisubs
push
test
mov
mov
and
popa
lret
cmp
js
scas
or
jl
inc
lods
movsb
and
cwtl
clc
inc
sub
paddd
js
inc
and
jbe
push
inc
incl
sbb
sahf
xchg
lods
mov
iret
push
xor
push
push
xor
adcl
push
xor
push
push
pop
and
dec
popa
dec
mov
test
repnz
ljmp
in
imul
in
xor
xchg
xchg
cmc
dec
stos
sub
stos
addr16
cmp
inc
addr16
mov
mov
or
outsl
mov
jae
sti
xchg
mov
cli
je
mov
xor
jg
push
mov
or
cld
inc
inc
mov
popl
inc
out
ret
mov
or
mov
jbe
popf
fstpl
jb
shlb
in
add
lcall
rcr
pop
and
push
mov
call
push
jecxz
jnp
cmp
mov
jnp
xor
mov
inc
in
ret
cmp
mov
fsubrl
out
aam
iret
push
xorb
mov
xorl
lods
pop
fcomip
and
adc
cmc
push
rcll
jge
push
std
and
ret
mov
xchg
adc
adc
inc
mov
jg
fbstp
jno
xchg
int
pop
je
mov
cmpsl
in
push
ds
cmc
xchg
or
jne
mov
cld
mov
jl
pop
ds
rolb
push
imul
mov
xor
xchg
loopnew
je
jno
mov
cltd
sbb
xlat
aas
roll
aad
test
or
out
repnz
mov
in
inc
or
push
cli
addr16
cmp
adc
out
mov
and
and
adc
lea
cmp
lcall
fldenv
movsb
outsb
push
out
jo
xchg
push
into
or
mov
adc
xchg
jge
test
incl
dec
stc
repz
scas
outsb
pop
outsl
pop
push
js
arpl
push
jo
test
jno
loope
xor
mov
xorb
inc
adcl
in
xchg
push
sbb
xchg
in
rclb
sbb
test
jp
cmp
xor
push
push
nop
sbb
pusha
stc
ja
jmp
mov
xchg
loope
outsl
inc
jmp
outsl
inc
jmp
mov
jge
cmpb
insb
mov
pop
mov
ja
fwait
inc
scas
lods
or
roll
in
cwtl
repz
scas
pop
adc
rorb
movb
fmul
mov
mov
cs
iret
pop
inc
cmp
dec
addb
or
nop
enter
sbb
sub
cmp
pop
fdivs
stc
stos
ja
mov
mov
jo
xchg
push
pop
scas
scas
sbb
inc
roll
cld
mov
je
ss
xcrypt-ofb
cmpsl
test
shrl
xlat
mov
cmp
mov
xchg
shlb
or
cmp
dec
xchg
sub
pop
sbb
outsb
fstl
sub
ja
or
jmp
mov
aam
lds
fildll
xor
mov
iret
loope
sub
out
add
scas
data16
je
mov
mov
mov
inc
andb
adc
jge
mov
rclb
call
sub
inc
in
fisttpll
sub
xchg
and
mov
inc
push
rolb
push
gs
inc
push
je
cmp
int3
sbbb
fs
in
jg
out
lcall
push
mov
daa
push
sahf
xor
adc
push
iret
lock
xor
add
enter
xor
fcmovnu
add
xchg
and
addr16
shlb
cmp
arpl
sub
sub
jae
add
movsl
pop
sub
pop
jbe
in
adc
scas
andl
and
in
jo
cmp
mov
mov
adc
pop
cmpsb
cld
and
into
xchg
data16
pop
in
loopne
and
lock
and
andl
push
lock
cmp
inc
adc
gs
fsts
daa
and
cltd
jl
test
mov
push
in
xlat
mov
pop
ja
push
sbb
test
enter
movsb
lods
pop
jno
sbb
add
xchg
xchg
aad
loope
outsl
mov
loope
imul
aad
and
iret
lret
jl
xchg
xchg
jle
mov
push
fs
sbb
jecxz
mov
pop
and
and
and
pusha
insl
aaa
lret
cmp
ljmp
xchg
sub
push
xorb
and
adc
and
aad
das
mov
mov
mov
push
inc
or
nop
leave
clc
fisubl
and
out
jle
data16
mov
add
xlat
xchg
push
ss
je
lea
aas
mov
adc
loop
scas
imul
lret
mov
jp
outsl
or
xor
or
xchg
jns
mov
sub
out
jp
cs
mov
push
push
les
test
sbb
xchg
nop
into
or
fsubrl
sub
jl
scas
ret
and
test
dec
xor
js
pop
cmc
xchg
inc
loope
pushf
nop
cltd
xchg
lret
jo
dec
ror
div
ja
sub
into
lock
lods
sbb
inc
aad
cmp
testb
or
aaa
xor
ja
cltd
add
push
mov
dec
cli
push
xor
aad
mov
and
out
ljmp
lcall
cs
cmc
lods
xchg
xor
jae
and
mov
int
icebp
xchg
xor
xchg
add
in
adc
jg
mov
lcall
pushl
dec
sub
jecxz
dec
outsb
std
mov
sub
aad
shrb
fsubrl
sub
xor
push
mov
pop
pushf
hlt
fs
adcl
xchg
fistps
loopne
mov
xor
adc
inc
cmpsl
cmpsl
add
adc
xchg
imul
hlt
in
push
outsl
xchg
cmpsl
sub
fdivl
jg
les
lcall
dec
and
push
scas
mov
roll
and
addw
xor
xchg
aad
nop
pop
sbb
xor
or
pusha
fwait
enter
xchg
dec
pushf
inc
adc
cwtl
icebp
ss
or
sub
xor
xchg
xlat
xor
jbe
jbe
test
arpl
addr16
jo
cmpsl
inc
pop
push
pop
jp
clc
sbb
pop
inc
fwait
mov
js
inc
jecxz
int
popf
and
mov
mov
subb
jo
lret
ljmp
push
cwtl
scas
lret
int
or
and
inc
lcall
sbb
scas
loop
cltd
movsl
repnz
jl
repz
adc
add
ss
int
repz
mov
inc
call
test
imul
and
rol
add
jl
jg
fildll
push
jae
fwait
pop
add
out
scas
mov
lock
mov
cmpl
xchg
aas
fwait
test
divb
inc
jno
ss
ds
test
lods
sbb
cmp
outsl
loope
or
or
fistps
jmp
lock
pop
or
das
into
mov
pop
addr16
or
cmp
lahf
cmp
loope
xchg
sbb
mov
imul
mov
pop
mov
mov
js
into
leave
repz
and
lock
add
sub
jmp
sbb
bound
push
sbb
jecxz
push
mov
xor
push
or
inc
pop
jb
mov
adcb
mov
fs
add
js
jmp
andb
add
sbb
sbb
mov
mov
mov
adc
ficompl
cmp
and
sub
cmpl
lcall
cmp
mov
in
ret
jge
xlat
and
lret
aaa
int3
das
or
push
in
imul
fs
ret
loope
xchg
mov
ret
xor
sub
push
push
mov
pop
pop
sub
inc
pop
sbb
mov
xchg
nop
adc
int3
das
push
repnz
sbb
xor
idivl
xchg
xlat
stc
roll
pop
lcall
repz
iret
and
push
add
add
cmpsb
fldcw
or
sbb
cmp
pop
mov
shrb
rorl
stc
inc
cmp
sti
into
mov
push
lods
sub
adc
fwait
sbb
fcomip
jge
and
pushf
movsl
xor
xor
cmp
mov
and
mov
scas
int3
xchg
add
dec
out
f2xm1
inc
aas
out
add
fidivrl
xor
xchg
inc
mov
fmul
sub
adc
xor
jecxz
test
lcall
lahf
sub
sbbb
push
test
jl
mov
hlt
out
out
xchg
add
fwait
bound
or
jg
or
xchg
enter
movsl
stos
push
and
int3
mov
lahf
sbb
jbe
inc
jbe
mov
ds
fldt
pop
inc
xor
xchg
dec
lods
mov
fcoms
or
mov
mov
mov
mov
clc
mov
pop
cmc
push
mov
adc
cmp
iret
inc
insb
ret
xorb
int
jge
push
inc
scas
mov
insl
lock
ljmp
iret
xchg
jb
outsb
les
out
mov
dec
scas
push
nop
inc
fidivs
enter
cmpsb
leave
dec
fs
and
stos
andl
lods
push
pop
cmpsl
jecxz
into
mov
sbb
push
mov
popa
xor
lahf
or
aaa
gs
cmp
fbstp
push
jbe
fistpl
xchg
mov
rcr
je
dec
js
sub
pop
pop
add
cmp
push
push
adc
js
adc
je
or
cmp
pop
xlat
mov
and
mov
jae
jo
cld
xor
sbb
cmp
sbb
adc
scas
clc
cmc
push
or
xor
outsb
movsl
mov
dec
aam
inc
push
add
lahf
add
arpl
popa
in
lds
cmp
mov
sub
in
xchg
jl
fidivrl
xchg
fisttps
fisttps
in
lcall
in
jno
rcrl
jne
pop
inc
mov
shrb
xor
sbb
adc
xor
stos
imul
dec
add
sti
sbb
pop
test
cmc
sbb
xchg
sub
mov
sbb
lret
dec
addr16
repnz
sbb
cltd
std
add
or
dec
jmp
xchg
dec
data16
jno
push
outsb
fisubrs
sbbl
jns
lahf
lods
mov
xchg
adcl
decb
dec
loopne
pop
mov
pop
xor
js
xchg
or
dec
gs
ja
sbb
pop
lcall
subb
xor
mov
scas
nop
insb
and
mov
push
lea
mov
jg
cwtl
std
push
mov
lock
jne
daa
loope
xor
jbe
xchg
test
shll
arpl
insl
push
push
aas
dec
and
shll
pop
bound
fwait
in
push
jb
enter
das
dec
loopne
lea
mov
out
push
inc
mov
fsubs
jnp
ja
pop
xlat
adc
adc
xor
mov
push
jnp
shrb
pop
sub
arpl
mov
or
pop
call
mov
in
push
sub
add
arpl
iret
mov
mov
push
aas
lea
ljmp
movsb
shlb
jge
sub
icebp
aas
add
dec
xchg
scas
cmp
sbb
pop
and
pop
iret
sub
xor
cmp
rcll
cmp
fidivs
leave
scas
dec
sbb
jl
shrb
dec
test
loopne
jge
push
and
and
loopne
lods
arpl
jmp
adc
mov
sub
cld
sub
cwtl
mov
xor
inc
xchg
ficoml
or
inc
xor
mov
cwtl
mov
fistl
stc
mov
jge
lcallw
xchg
idiv
push
mov
push
loope
xchg
mov
add
push
jmp
in
sbb
data16
fnstcw
mov
pop
jnp
xchg
xchg
adc
pusha
mov
dec
ds
icebp
fsub
vphaddbd
rcll
add
sbb
lods
dec
into
jno
lea
es
out
pop
mov
sub
outsl
mov
xchg
xchg
clc
sbb
push
xchg
lds
loope
data16
pop
pop
pop
jge
andl
sub
insb
mov
and
dec
push
aad
inc
movsl
ret
hlt
out
jb
stos
cld
fisubrs
loopne
dec
adc
clc
adc
lods
jmp
mov
or
add
sbb
aas
insb
cmp
jo
inc
xchg
subl
in
mov
repz
arpl
pop
enter
lret
sbb
lret
lret
adc
fsubs
cld
ds
shrb
scas
iret
xor
fs
jns
push
mov
sub
or
ljmp
sub
iret
jne
jmp
pop
popf
testb
aaa
mov
imul
mov
cmp
inc
idivl
loop
xchg
sarb
pop
in
xor
cld
push
or
inc
and
cmpsb
sub
orb
out
mov
pop
repz
mov
add
je
ds
out
xchg
inc
mov
cmc
test
jbe
cmpsl
in
inc
orb
sahf
pop
cmpb
jg
cmp
sub
sahf
or
repnz
test
lea
mov
fsts
insl
dec
add
pop
push
in
je
lods
xor
ljmp
sbb
loop
ja
je
aaa
and
lret
jecxz
das
stc
jl
xor
jge
inc
and
and
add
cli
push
or
in
inc
cmp
adc
arpl
loope
repz
and
push
ss
push
xchg
add
imul
xchg
sub
jb
mov
pop
lahf
jmp
cld
lds
ret
movsb
call
mov
jecxz
or
out
mov
push
scas
lret
roll
les
jg
data16
dec
int3
shl
outsl
mov
int3
cli
mov
pop
ror
sti
xchg
test
xchg
inc
push
mov
loope
in
lods
stos
lock
mov
inc
pop
ret
iret
int
xchg
lods
mov
lret
fmull
sbb
icebp
andl
pop
mov
stc
sbb
jmp
shll
ret
cmp
imul
inc
and
je
fiadds
cmp
inc
inc
ljmp
lods
cmp
fsubl
popl
mov
loope
add
ss
xchg
int3
jl
xchg
jmp
xchg
xchg
inc
sub
mov
or
mov
xor
insl
inc
pop
cmp
sahf
imul
movsb
faddl
into
daa
je
aaa
add
xchg
lock
cltd
jae
fcoml
jg
sbb
cld
sti
jp
jmp
pop
in
ss
testb
jge
nop
out
js
test
icebp
pop
and
fadds
stos
negb
ret
andb
jmp
add
push
stc
imul
mov
jge
in
and
xor
mov
call
aad
ret
dec
mov
daa
into
jge
sbb
inc
cld
scas
out
lods
ret
lret
or
xor
std
lock
mov
stos
decb
std
or
mov
cli
shrl
add
add
xchg
jge
add
inc
sub
jbe
jl
int3
sub
jp
xchg
mov
outsb
add
ficompl
sarl
mov
and
mov
xchg
add
sbb
loopne
push
negb
mov
or
test
jo
add
dec
testl
dec
push
cmp
jbe
push
addr16
push
jp
fcmovne
aam
enter
mov
jp
cmp
or
sub
xchg
mov
jmp
jb
xorl
sti
and
xlat
mov
jmp
ljmp
cmpsl
fidivs
xchg
loop
jno
jo
test
add
xor
push
pop
add
icebp
dec
pop
rorb
inc
mov
pop
xchg
lods
mov
xchg
lods
popf
xchg
scas
mov
test
or
and
int3
aaa
scas
pusha
fisttps
pusha
jg
pushf
cmp
jo
lds
sbb
adc
mov
ret
inc
mov
popf
js
es
int3
push
pop
xchg
jmp
cltd
iret
iret
xor
xchg
ss
es
mov
xchg
or
push
pop
imul
mov
nop
pusha
idivl
mov
dec
fiadds
sbb
adcb
push
movsb
icebp
jmp
aas
push
mov
imull
jl
dec
cmpsl
cmp
movl
out
dec
push
cwtl
js,pt
adc
cmp
or
mov
mov
cmp
shlb
mov
pop
leave
xor
cli
insl
mov
cld
mov
xlat
pop
lret
cmp
ds
pushf
loope
ljmp
stc
push
inc
js
push
sub
pop
sbb
cli
mov
sahf
cld
movups
jae
ljmp
mov
ret
outsb
xor
test
imul
and
fldcw
push
or
or
cmovno
test
dec
fdiv
dec
xchg
cpuid
jge
dec
das
mov
cmp
jae
push
pop
sub
data16
jg
xchg
mov
pop
outsl
int3
je
int
test
lds
std
jbe
cmp
rcrl
ljmp
or
cmp
in
fldt
shlb
and
jecxz
out
arpl
stos
fs
and
jns
push
ss
cmp
mov
mov
lods
insl
lea
xlat
xchg
aas
insb
sub
mov
cmp
mov
or
xchg
fistps
ret
cwtl
test
add
stos
pop
fsubs
push
mov
cmpsb
push
xor
push
lds
aas
shrb
cmp
mov
imul
daa
mov
sub
cmp
ret
xor
testl
xor
scas
aam
cld
mov
inc
lock
and
out
test
cmpsb
jo
rorb
popf
dec
cld
into
jge
lahf
popa
rcll
notl
dec
insb
lret
xor
mov
jl
xor
inc
sahf
pop
aad
jo
pusha
repnz
cmp
push
imul
cmp
or
and
movsl
cmp
or
movsb
jbe
or
sbb
hlt
jg
or
push
repnz
xor
xor
pop
daa
sbb
adc
nop
inc
cmp
gs
sbb
sub
test
ljmp
add
decb
cld
jb
addr16
aaa
and
jnp
dec
mov
rcrl
es
pop
fdivrl
cmpb
inc
inc
add
aam
out
xchg
inc
aaa
jge
or
sbb
dec
imul
subl
in
push
xlat
mov
ret
jmp
jnp
jmp
sub
inc
repnz
stos
jbe
mov
rcrb
dec
and
repnz
fisubrl
pop
adc
sbb
je
scas
lahf
cs
idivl
dec
jnp
addb
inc
cmp
daa
push
inc
mov
aas
sub
es
and
sbbb
lcall
dec
adc
push
xchg
mov
shrl
movsl
pop
cmp
mov
movsl
in
test
jl
fisubrs
out
loop
fistpll
inc
fadd
sub
pop
xor
jl
dec
inc
int3
xchg
aam
xor
sub
ds
inc
cmp
add
mov
ficompl
adc
ds
arpl
xchg
testl
push
push
ss
mov
loop
sbb
xor
sahf
dec
jmp
and
xchg
outsl
push
and
sbb
outsl
mov
cltd
pushf
or
and
xchg
mov
repz
pop
sbb
cmp
push
dec
mov
int3
fsubs
mov
jnp
cmpsb
pop
fwait
jmp
repnz
stos
lds
lods
jns
xchg
xchg
sbb
xchg
cmp
fdivs
inc
ja
mov
lcall
and
xchg
loopne
lock
adc
push
repnz
lods
scas
mov
add
mov
lods
mov
lea
dec
pusha
pop
les
jle
jbe
lods
mov
fs
cmpsb
cli
sbb
sbb
dec
sbb
jno
adc
push
mov
adc
int
stos
jb
outsb
test
push
sbb
and
push
cmc
dec
add
jl
adc
les
sarb
outsb
out
dec
ljmp
add
insb
fdivrp
xlat
fistpl
aaa
stc
cs
xchg
dec
add
xor
add
shlb
int3
loopne
fld
dec
xchg
xchg
and
and
jmp
xor
mov
repz
rorb
cltd
sub
idivb
pop
outsb
insb
ja
dec
mov
inc
fisubs
das
lea
pop
cmp
mov
cmpsb
mov
xor
sub
jg
outsl
xchg
pop
sub
ficoml
adc
cmpsb
mov
or
or
into
andl
aas
sub
cmp
push
mov
dec
sti
lret
imul
jo
adc
xor
clc
jno
xchg
xchg
xchg
and
mov
fstl
andb
xchg
inc
adc
loop
push
xlat
dec
sub
dec
andb
pop
jmp
or
inc
rcl
ficomps
rolb
push
insb
and
js
enter
jecxz
push
jmp
shll
lret
inc
ja
and
xchg
mov
push
inc
pop
adc
mov
out
filds
jg
or
or
mov
xor
push
cmp
hlt
mov
cmc
stos
sbb
adc
sahf
sub
xchg
out
test
aas
fistpl
dec
xchg
mov
adc
xor
sbb
imul
jge
add
je
cwtl
add
xor
lea
cmp
xchg
jle
pop
pop
ret
mov
mov
mov
push
jl
iret
std
pop
pop
dec
scas
push
mov
add
push
imul
adc
xor
push
imul
xchg
add
mov
pop
in
mov
or
lahf
mov
jbe
fstpl
cmpsb
test
mov
sub
xor
fs
scas
xor
fadds
aaa
imul
out
pop
popa
xchg
lret
pop
loope
adc
pop
lret
xor
movsb
sbb
daa
mov
in
push
cmp
repz
test
mov
add
ss
sti
sub
push
xchg
cmp
jnp
ret
mov
enter
and
hlt
xor
pushf
xor
pop
mov
jmp
in
insl
jae
sarb
jl
mov
inc
fwait
outsl
or
cs
out
pop
sbb
inc
sahf
push
stos
stc
push
pop
xor
pop
mov
movsl
ret
addr16
cltd
xchg
and
cmp
gs
cmp
mov
in
xchg
push
jbe
add
cmp
mov
sub
test
pushf
sub
xchg
push
test
or
sbb
mov
dec
inc
int
mov
xchg
push
shll
mov
inc
out
pushf
jns
adc
loope
cs
push
lock
mov
push
imul
jne
imul
cmp
movsb
and
lcall
dec
pop
xor
lds
cmp
int3
in
fs
stc
repnz
sti
or
fistl
dec
and
mov
enter
pop
out
test
sub
loopne
adc
push
cmp
mov
mov
add
bndldx
arpl
in
dec
cmp
lea
insl
lea
pop
dec
push
xchg
add
adc
mov
cmp
sti
pop
dec
shlb
gs
mov
push
mov
jecxz
jbe
mov
adc
inc
cs
repnz
lods
out
adc
int3
fdivp
push
jnp
pop
sub
and
fisttps
add
or
sbb
sub
inc
fimuls
addb
lret
aas
mov
cmpsl
adc
fstpt
das
movsl
add
outsl
dec
xlat
add
cmp
ret
ds
fnstsw
dec
dec
xchg
mov
jp
push
mov
push
and
rolb
jbe
mov
loopne
bnd
test
das
loope
add
xor
lea
fldl
mov
sub
lods
sbb
icebp
pop
cmp
sub
cmpb
out
sbbb
xor
push
out
cli
mov
dec
jo
fstpl
push
mov
je
js
movb
fnstsw
add
inc
push
imul
sbb
jno
or
test
aas
test
push
iret
incl
in
shll
sbbb
pusha
repnz
pop
sub
outsb
push
mov
fisttps
iret
mov
cmp
js
in
cmpsb
or
add
xchg
std
jle
out
adcl
loop
imull
xchg
xor
mov
incb
mov
mov
dec
ljmp
sub
mov
jbe
sub
and
lret
popf
ret
xchg
scas
in
adc
jne
mov
popa
vmovsd
stos
jno
inc
into
lcall
jnp
mov
jp
lahf
xchg
rcrl
shll
test
sub
les
mov
xchg
call
sbb
inc
add
pop
stos
xlat
and
leave
mov
sub
popf
inc
adc
xor
rol
sbb
das
mov
cmp
sbb
outsb
and
inc
test
mov
fldl2e
popf
pop
mov
push
aad
mov
adc
not
in
loope
mov
je
inc
test
and
outsl
out
xor
popf
ret
js
push
inc
outsb
lret
cmpb
cmc
movsb
push
sarb
lret
jmp
loopne
push
pop
and
fdivp
pop
mov
mov
cli
jnp
sub
inc
dec
in
ljmp
out
and
cld
test
jecxz
scas
dec
rcr
dec
lcall
push
sub
jl
inc
lods
outsb
js
rolb
jp
and
lcall
cmp
pop
je
dec
aam
dec
inc
rolb
popa
xchg
adcl
ds
aam
shrb
push
leave
push
push
outsl
lea
mov
div
faddl
lea
inc
inc
testb
pop
ja
mov
jbe
loope
cli
dec
push
andb
add
jl
out
lret
pop
mov
sub
sbb
mov
add
cmpsl
push
leave
gs
adc
insb
ret
das
adc
xor
ret
addr16
pop
push
nop
mov
sbb
ljmp
add
mov
popa
add
jbe
ds
inc
mov
adc
stc
cmp
ret
sarl
ret
cwtl
fmull
jge
ror
je
arpl
push
xchg
mov
lcall
xchg
pop
and
je
adc
sahf
cwtl
sbb
mov
add
in
jg
pushf
int
add
pop
sub
mov
sti
xchg
xor
inc
adc
lea
mov
pop
mov
mov
fsubrl
loopne
or
int3
ficomps
mov
push
mov
fs
cmpsl
push
scas
push
xbegin
dec
push
add
bnd
xor
dec
orb
rcr
xlat
xchg
sti
dec
es
mov
stc
xchg
pop
cmp
inc
addl
orb
pop
push
push
iret
dec
add
xor
xor
mov
int
sbb
std
inc
fimull
push
aaa
push
jmp
inc
adc
lret
sub
nop
scas
and
sub
push
daa
mov
ljmp
test
clc
jno
mov
sbb
push
dec
inc
imul
cwtl
cmp
scas
dec
cmp
outsb
push
xorb
cltd
and
dec
icebp
inc
xor
scas
inc
inc
imul
roll
mov
cmp
sbb
mov
jo
pop
xchg
xor
pushf
cld
loop
jmp
lea
movups
std
push
push
out
imul
push
fisubs
mov
out
fsubrs
test
inc
mov
sbbl
and
sbb
dec
pop
jo
sbb
sbb
cmp
mov
cwtl
and
inc
mov
push
pop
push
ret
bound
stos
push
into
into
jp
or
dec
or
jb
int3
leave
mov
jp
jg
jbe
mov
stos
jmp
xchg
adc
cmp
add
push
dec
pusha
popf
inc
and
xchg
mov
mov
mov
sbb
hlt
leave
dec
mov
out
out
push
mov
xchg
inc
out
or
mov
scas
test
stos
out
outsb
or
sahf
pop
adc
daa
pop
out
pop
jp
push
xor
es
lock
cmpsl
into
fldenv
add
lods
push
data16
jecxz
mov
sarl
mov
mov
scas
xor
in
int
cld
inc
fsubrl
xor
lcall
inc
lock
adc
icebp
xchg
fldenv
mov
adc
mov
push
push
add
mov
mov
and
out
jg
xor
int
inc
int3
sub
sub
outsb
fdiv
cmpb
pop
adc
mov
stos
inc
jbe
mov
fldt
data16
outsl
jbe
stos
mov
pop
cmp
xrelease
fwait
adc
repnz
add
mov
push
andl
inc
cmp
test
or
sbb
aam
ret
call
and
xor
clc
xchg
cmpl
mov
add
xchg
repnz
jno
add
xor
sahf
icebp
inc
or
and
jge
jmp
jo
lahf
nop
push
std
lea
dec
sbb
jne
lret
push
inc
xchg
cld
adc
pop
movsb
divl
in
jno
jg
ljmp
lods
test
mov
or
dec
lcall
xor
xor
mov
mov
or
jle
fadd
mov
jmp
aad
subl
cmpsb
int3
or
mov
hlt
sbb
rcl
shrb
xchg
push
loopne
inc
fsubrs
test
divl
or
cmp
out
ja
rorl
pop
adc
aaa
pop
mov
fildll
leave
sbb
lret
push
cld
jno
or
jmp
xor
int
mov
and
xor
int3
out
in
adc
pop
cmp
or
inc
add
fs
call
inc
or
test
jl
outsl
mov
loopne
inc
mov
icebp
inc
lcall
popa
jb
fsub
sub
jne
idivl
mov
stos
fwait
and
dec
inc
mov
add
incb
ss
pop
or
dec
lods
push
popa
fs
das
std
cmp
outsb
push
lret
add
adc
jno
lea
cmpsb
in
sbb
leave
loopne
xor
or
call
in
xchg
xor
lcall
pushl
inc
jo
xchg
pop
sub
cmp
add
fimuls
pop
jb
dec
data16
mov
es
mov
jb
or
jg
jns
call
pop
fs
fistpll
sbb
nop
adc
jmp
push
xchg
inc
add
loop
fsubrs
push
xor
xor
in
mov
nop
je
cli
aas
bound
rolb
dec
ret
dec
popf
push
sbb
pop
in
test
sub
mov
call
lods
rcrb
jle
fbld
and
lods
lea
adc
int
push
add
enter
cmpb
inc
out
mov
xor
addr16
int
decb
into
leave
enter
dec
cmp
lea
xor
stc
jmp
fcomp
out
mov
insb
test
sub
add
stos
ret
dec
icebp
int3
lahf
mov
dec
sti
in
ret
pop
std
lret
xlat
push
cltd
scas
mov
xchg
frstor
sub
dec
mov
pop
sub
sub
mov
scas
out
into
enter
shll
clc
jg
rorb
inc
nop
mov
and
test
cld
ljmp
popa
xor
lahf
popf
data16
add
mov
or
add
out
outsl
and
ret
and
mov
dec
mov
daa
icebp
fdivp
into
push
dec
xchg
sub
xchg
mov
outsb
dec
add
das
aas
add
mov
mov
and
jns
nop
ret
rcll
in
jae
hlt
mov
aad
and
das
pop
out
xchg
pop
addr16
clc
test
lods
mov
movsb
fsts
sarl
mov
jl
loopne
inc
and
pushf
inc
dec
cmpsb
imul
sahf
pusha
or
cli
jecxz
xor
push
mov
or
jp
add
jle
imul
xchg
out
cmc
adc
adc
mov
xor
rol
stos
test
jne
dec
dec
test
jge
cwtl
in
adc
lret
mov
out
rorl
add
xor
pop
adc
daa
xchg
jns
cmp
xor
inc
cltd
mov
xchg
subl
test
imull
push
sbb
push
test
mov
into
sahf
in
push
and
mov
cmp
popa
nop
push
pop
pop
or
jo
lea
lds
cmpsb
sub
and
jg
jge
mov
hlt
xchg
repnz
rcrb
loop
mov
jecxz
or
add
jg
test
shrl
lcall
mov
sbb
xchg
pop
xchg
xor
push
rorb
ljmp
dec
int
loop
cmp
sub
sarl
sub
in
mov
jg
pop
or
mov
mov
int3
or
sub
int
xor
insl
ss
cmp
cs
xorb
push
cltd
jnp
inc
add
jg
push
cmpsb
pusha
xchg
stos
add
std
leave
mov
adc
xchg
jle
mov
divb
pushf
fsubrs
jmp
jp
xor
in
mov
push
faddl
mov
pop
adc
mov
sub
repz
inc
push
stos
mov
lea
jmp
mov
lahf
add
push
inc
push
pop
push
loope
xchg
jnp
xchg
cmc
and
jb
jmp
pop
das
jmp
push
inc
and
cmp
mov
xor
loop
ja
clc
xchg
adc
lds
inc
cli
mov
dec
mov
hlt
faddp
int3
cmpsb
cmp
jbe
mov
pop
add
and
fadds
aam
sti
fsubrl
dec
aas
cmp
out
inc
jp
jne
cmp
sbb
jge
cmp
mov
adc
and
pop
sbb
xchg
stos
adc
or
pop
push
add
jb
movb
fidivl
sub
fwait
sub
repz
imul
fs
sub
adc
mov
icebp
data16
jo
lock
sbb
mov
cmp
lods
in
cmpsb
push
pop
xchg
in
fiaddl
pop
cli
dec
jns
sbb
daa
push
add
cmc
cmc
jp
sub
xor
and
mov
sub
push
jle
push
out
js
enter
add
xchg
add
jl
mov
clc
hlt
scas
loopne
clc
mov
sub
adc
add
movsb
cli
sub
mov
popf
test
fidivs
adc
pop
inc
fildll
cmp
into
push
pop
sbb
nop
test
dec
fidivs
std
mov
mov
outsl
jle
xchg
sbb
sub
shl
shll
cmp
and
xor
cmp
pop
and
mov
push
sahf
fsubrl
xlat
and
imul
sub
dec
xchg
ds
pop
insl
cmpsl
shlb
popa
cltd
push
js
test
and
pop
sub
pop
cmp
dec
or
or
rclb
and
lods
lret
sbb
call
pop
jnp
out
cmp
sbb
shrb
call
or
cld
and
push
mov
ret
fildll
daa
lahf
bound
mov
xor
xchg
in
in
pop
call
mov
loop
daa
add
pop
jne
sbb
sbb
mov
cltd
movsl
fdiv
out
enter
cmp
add
xchg
mov
jno
cmpsl
pop
xchg
std
pop
les
test
add
sbb
mov
ds
daa
sub
dec
push
subb
jp
push
pusha
xor
mov
xor
test
popa
mov
mov
or
jns
imul
xlat
cltd
cmp
mov
xchg
in
mov
sub
stos
xchg
jne
call
rclb
sahf
mov
cmp
push
out
repz
inc
mov
enter
into
cmp
pop
sbb
addr16
xchg
movsb
hlt
in
stc
aaa
dec
jmp
and
sbb
sbb
push
stos
pop
lods
fldcw
iret
lea
jae
jl
repz
and
dec
rolb
ja
mov
rcrb
vmovntdq
pusha
into
push
xchg
imul
inc
jae
xor
cmp
hlt
iret
inc
mov
pop
or
add
stos
sbb
lock
in
iret
add
or
loop
divb
push
jle
movsb
mov
ret
insl
mov
adc
push
xchg
insl
mov
sti
test
arpl
cmp
hlt
lcall
adc
jae
xor
inc
andl
adc
jnp
and
jae
xor
mov
jb
mov
pop
add
inc
xchg
inc
das
ja
loop
enter
data16
xchg
sahf
sub
sub
xor
cld
and
cmpsl
mov
lret
and
xchg
jle
pop
cmp
push
cmc
jo
sub
loop
idivl
xor
push
adc
cltd
pop
test
push
mov
js
or
and
xchg
pop
and
push
mov
mov
mov
sbb
add
mov
mov
cmp
popf
jmp
jp
cmp
or
fsub
cmpsb
dec
jbe
repnz
jnp
pusha
outsb
pop
xor
adc
xchg
aam
jge
test
mov
sbb
repz
fwait
xchg
jnp
xorl
fwait
lret
ds
mov
sub
and
lea
jle
cli
and
sub
fnstsw
aad
movsl
out
les
push
lods
pop
xor
push
dec
sub
pop
xor
jmp
jle
jge
mov
jmp
test
or
xchg
insl
pop
hlt
sub
scas
mov
into
out
nop
nopl
ret
cli
mov
mov
and
lods
outsb
cwtl
sbb
fimull
mov
stc
xchg
add
add
xor
xor
mov
cmp
cmp
pop
push
push
xchg
and
out
adc
int3
inc
aam
out
xchg
mov
xor
push
adc
cmp
in
sbb
cmp
sub
adc
and
sub
mov
pushf
mov
ja
push
pcmpgtb
or
and
popa
dec
mov
movsl
inc
sbb
or
mov
cli
rorl
insl
out
ret
cmp
subl
andl
sbb
test
xor
in
mov
hlt
xor
movsb
scas
shlb
lods
aaa
in
sbb
sbb
mov
and
mov
mov
ret
mov
adc
scas
add
in
enter
sbb
add
mov
dec
pop
cmpl
cltd
movsb
in
negl
scas
mov
xor
inc
inc
lcall
movsb
inc
fld
add
push
push
sbb
sbb
sbb
dec
int3
mov
push
shlb
jmp
cwtl
movsb
js
jmp
lcall
pop
icebp
int3
mov
cmp
jmp
xor
dec
pop
jb
mov
and
scas
lahf
mov
mov
imul
xchg
fcmovnu
xorb
add
dec
sub
pop
add
ds
jae
loopne
pop
cli
cli
out
inc
aas
mov
sub
mov
mov
arpl
cmp
jae
dec
sub
rorb
rcr
loopne
fisttpl
jbe
mov
js
stc
das
ficompl
inc
lea
mov
pusha
rorb
cmp
adc
sub
jbe
xchg
sarl
test
add
push
fldenv
bound
xchg
dec
adc
or
mov
hlt
into
jg
imul
sub
dec
mov
jmp
outsl
mov
mov
jl
stos
cmp
jmp
pop
mov
xor
ret
xor
sbb
jnp
push
dec
call
sub
dec
add
xor
push
cmp
mov
das
enter
push
xor
filds
iret
add
inc
outsb
xchg
mov
push
lcall
mov
decb
sub
cmp
fdiv
push
mov
movsl
das
and
or
jno
xchg
loope
adc
rorb
and
sub
sbb
mov
push
mov
xchg
adc
mov
push
test
clc
int
cmpsb
adcl
inc
xor
insb
aas
push
out
lods
pushf
test
je
imul
inc
push
mov
movsl
pop
sar
mov
sub
loope
mov
mov
sbb
daa
mov
fucom
jmp
mov
iret
and
and
jb
cmovne
dec
repz
mov
cmp
mov
test
mov
cmp
pop
test
cmp
aam
fstl
loope
repz
out
repz
repz
dec
push
rol
jg
xor
dec
call
push
push
rcl
stos
cltd
mov
xchg
das
out
sbb
inc
cmp
ja
cmp
xchg
sbbb
scas
jmp
mov
imul
add
cmp
cwtl
lods
or
ficompl
test
jno
ljmp
imul
add
xchg
xor
mov
shrl
cmp
scas
into
insl
add
dec
push
dec
inc
xchg
sbb
mov
in
dec
dec
das
sbb
ds
and
add
xchg
gs
sub
jmp
xor
dec
mov
xor
jge
jecxz
scas
not
sub
loop
cmpsb
sub
jmp
adc
movsb
outsl
ja
jge
mov
sbb
sub
mov
pop
lret
ret
mov
gs
adc
cmp
mov
cwtl
push
cmc
jg
leave
mov
js
test
mov
xchg
sbb
mov
out
pop
outsb
mov
pop
test
fwait
mov
push
push
mov
cs
aad
mov
ret
pop
sbb
mov
nop
xor
sub
stos
cld
inc
dec
lods
lret
sub
lahf
sbb
xchg
cwtl
movsb
sub
pushf
data16
mov
inc
mov
mov
inc
push
sti
xor
add
xchg
inc
imul
aas
xchg
shll
or
mov
shl
mov
andl
icebp
lods
jo
xchg
push
mov
std
xchg
mov
jg
jns
pop
xor
xlat
mov
lods
ja
push
ret
mov
arpl
loop
inc
dec
sub
cmp
add
mov
hlt
inc
xor
testb
pop
jmp
mov
loopne
jl
cmp
lret
lods
bound
mull
add
push
add
shrl
sbb
repz
xchg
out
mov
push
pop
addr16
push
push
mov
cmpsl
stc
fcoms
stc
and
test
out
out
add
aas
mov
xor
mov
loop
cs
push
cmpsl
mov
inc
xchg
aad
or
repz
mov
les
dec
push
mov
jae
in
fprem1
sub
xor
mov
test
cmp
das
fidivrl
pop
jno
nop
pop
scas
mov
and
popf
fs
xchg
fnstsw
clc
in
fs
orl
mov
movsb
mov
loop
addr16
incb
nop
ficomps
outsb
aas
iret
jno
rclb
inc
or
jbe
push
loope
sbb
sarb
icebp
sbb
into
add
incb
xchg
xor
push
xor
xchg
xor
xor
insb
int
outsl
adc
fidivs
pop
in
iret
push
js
out
fisubrs
cmp
data16
test
lcall
push
sub
jg
sub
jecxz
imul
jp
sahf
jmp
xchg
popf
add
and
jmp
or
dec
inc
mov
data16
cmpsb
xchg
add
sub
outsb
mov
sbb
scas
dec
insl
aaa
daa
xor
xor
jno
fcoms
cwtl
dec
ret
push
loop
push
out
mov
test
jl
les
sub
mov
inc
les
arpl
xor
xor
aam
adc
mov
jecxz
sar
das
repnz
add
jle
mov
loop
bnd
adc
fnstsw
fidivl
out
leave
roll
and
dec
jbe
cmp
bound
mov
js
inc
mov
jmp
outsb
gs
mov
test
aaa
ret
inc
cli
jp
adc
xchg
stos
aad
cmp
mov
mov
jbe
movsl
gs
pop
pop
pop
xor
insl
jnp
add
dec
movsb
pop
cmpsb
push
xchg
lods
stc
mov
xchg
cmp
or
push
pop
mov
mov
jns
popa
imul
test
insb
out
out
das
nop
adc
mov
in
jmp
jae
and
leave
insl
add
mov
js
cmp
mov
rclb
test
and
and
push
imul
testb
in
insl
lcall
push
enter
adcb
jbe
outsl
cmpsb
push
inc
mov
test
daa
jmp
bnd
sbbb
cmpb
int
pusha
jmp
js
cmpb
inc
repz
jne
mov
imul
sahf
in
pop
das
mov
popf
out
or
rclb
rorb
sub
jno
push
lret
push
iret
xor
outsb
mov
push
pop
adc
pop
push
jl
popf
repnz
dec
pop
std
inc
mov
inc
pop
or
pushf
xchg
push
sub
sub
mov
or
xor
inc
add
fsts
mov
sbb
rorb
sbb
aam
inc
inc
lods
adc
xor
mov
andl
jg
std
cmp
xchg
mov
test
jmp
adc
sbb
clc
xchg
pop
outsb
mov
push
xor
ss
cmp
xchg
into
lods
mov
pop
dec
jnp
out
test
sub
mov
nop
or
out
cmpl
loope
or
mov
push
ss
popf
outsb
gs
xchg
jge
arpl
stc
add
jg
jbe,pn
push
outsl
mov
sar
andl
outsl
sub
adc
jbe
adcb
dec
es
sub
add
daa
movsl
fwait
push
clc
adc
push
push
jo
out
bound
insl
mov
mov
adc
js
imul
andl
sub
mov
xchg
lret
jp
jnp
mov
sub
jae
mov
mov
inc
data16
cld
fidivrs
jo
mov
stc
aaa
add
je
fldenv
push
stos
int
loope
loope
nop
arpl
ja
jmp
cld
pushf
movsb
aaa
dec
je
sahf
icebp
and
filds
pop
fistl
mov
mov
ret
adc
es
mov
add
scas
setnp
cmpsb
add
add
jmp
rcrb
lods
pop
lret
mov
popa
mov
mov
pushw
push
test
pop
ss
pop
cmp
insl
inc
xor
call
sbb
ljmp
mov
lds
fwait
iret
out
and
jg
jno
test
sbb
adc
mov
lock
bound
mov
jg
mov
xlat
mov
mov
test
movsb
xchg
mov
lods
cmpsl
add
in
popa
cmpsl
repz
push
dec
ja
xorl
push
add
fldcw
lock
cmpsl
test
dec
and
movl
jmp
daa
add
and
cld
sbb
repz
pusha
inc
out
lds
testl
lcall
jecxz
cmp
dec
dec
cmp
dec
cmp
ss
mov
adc
faddl
dec
jmp
shr
aam
shufps
mov
fstpt
inc
stc
xchg
jns
iret
lods
pop
jne
nop
aad
stos
add
out
shll
mov
ds
arpl
mov
jmp
adc
leave
sbb
sub
xrelease
add
loope
ret
adc
je
in
dec
xchg
icebp
xchg
fistpll
cmp
in
pusha
pmaxub
repz
stos
leave
fs
lcall
push
cmpsb
or
shlb
inc
es
cli
inc
or
stos
push
jns
cmp
insl
fldl2t
cmc
mov
pop
inc
out
into
dec
sarl
xchg
or
movsb
lock
popw
cmpl
stos
push
dec
addr16
xchg
inc
shlb
push
fiadds
cmp
imul
cmp
xchg
mov
data16
cmpsb
sub
inc
pop
repz
call
and
aad
popa
add
mov
mov
ficomps
push
loopne
ficomps
ss
inc
jbe
mov
pop
xlat
arpl
imul
mov
adc
adc
in
mov
jne
ljmp
out
movsb
fs
insb
jns
inc
das
mov
xlat
stc
addr16
cmp
push
fsubrs
jp
and
cmp
jg
add
mov
sbb
add
loop
negl
or
mov
lods
jmp
mov
sub
push
mov
xor
scas
pop
or
xchg
js
mov
neg
pop
dec
data16
popa
mov
mov
push
add
inc
in
jge
bound
ret
mov
adc
mull
into
jns
xlat
rolb
mov
enter
sahf
dec
push
in
and
mov
xor
push
test
nop
ss
daa
lods
je
sbb
out
adc
scas
push
pushf
mov
push
cmp
lret
lahf
and
data16
leave
int
mov
subl
xchg
dec
daa
outsb
push
mov
frstor
xor
jb
movsl
push
cmp
cmc
jmp
and
cli
mov
sbb
popl
push
inc
mov
jbe
outsb
push
test
xchg
xor
fiaddl
xchg
mov
or
pop
aam
jg
push
loop
filds
orl
jbe
pop
popa
push
stc
lods
dec
call
mov
jl
inc
xchg
in
mov
lea
cmp
cwtl
dec
cmp
aas
mov
cmp
scas
add
test
xchg
js
test
xchg
aam
or
lock
imul
repz
sub
rcrl
xor
mov
push
inc
dec
adc
jmp
dec
jbe
and
xor
or
fdiv
mov
cmpsl
mov
popa
mov
sbb
xchg
outsl
mov
jle
lahf
lcall
xor
idivb
aad
test
push
dec
sbb
jbe
dec
cmp
add
daa
arpl
pop
mov
lret
les
adc
cmpsb
mov
popa
lcall
xor
cmp
clc
and
mov
daa
in
into
leave
fistl
push
sbb
mov
movsl
push
or
mov
sbb
scas
mov
fnstcw
mov
pop
lahf
loope
mov
mov
jle
xor
or
xor
add
dec
lods
dec
sub
out
in
daa
sub
add
mov
xchg
jp
daa
push
and
mov
sarl
fxch
cmc
add
push
jo
sbb
mov
rolb
insb
out
sbb
push
lea
shll
or
lcall
les
or
ds
bound
outsb
or
outsb
fidivl
and
add
test
int3
jmp
aaa
rcll
jne
dec
addr16
sub
test
or
aaa
and
insl
mov
shll
clc
xor
inc
pop
push
add
mov
cmc
mov
or
push
lods
pushf
or
sub
and
sub
ljmp
enter
repz
and
les
ss
push
cltd
std
fs
ret
mov
add
sbb
xchg
repz
cwtl
jne
lret
xorl
mov
ret
xor
stos
test
loope
push
int3
push
lret
dec
xchg
stc
mov
jmp
lret
jecxz
subl
sub
xchg
adc
sub
test
je
push
clc
push
shlb
int3
mov
outsb
add
pop
xchg
movsb
mov
dec
aam
mov
lds
adc
or
xlat
ja
and
jbe
xchg
lea
jo
adc
sub
mov
pop
pop
lea
ja
cwtl
js
jl
dec
pop
stc
aaa
add
mov
and
imul
xor
test
test
jmp
lock
ret
and
mov
pushf
bound
sub
xchg
jbe
scas
xor
iret
pop
mov
test
pop
cmp
sbb
xor
mov
in
dec
mov
cmpb
mul
or
jb
mov
mov
roll
stc
add
xchg
jb
sbb
jbe
fbld
inc
mov
repz
out
jno
mov
in
mov
fsubr
adc
lock
pop
out
xchg
jnp
dec
test
mov
int
xlat
inc
jb
cmpsl
or
pop
or
mov
sahf
out
jmp
scas
adc
in
stos
mov
mov
int3
cmpsl
fisttpll
mov
sarb
daa
sbb
add
or
sub
into
mov
dec
lds
lahf
add
or
into
stos
mulb
stos
cmp
pop
dec
adc
or
xor
push
lret
mov
push
jbe
fdivp
add
mov
js
mov
insb
sti
sahf
mov
inc
xchg
scas
jl
insb
and
jnp
inc
inc
inc
and
sbb
aas
shrb
sbbl
pop
out
cld
stos
inc
loopne
fistl
jecxz
je
mov
rorl
xor
pusha
dec
mov
repnz
cmp
push
lods
and
mov
cmc
cwtl
es
xor
jmp
jg
pop
inc
lret
add
addr16
jecxz
lret
add
loop
je
ficompl
mov
je
mov
aaa
dec
movsb
adc
inc
and
movsb
push
hlt
scas
inc
and
mov
inc
sub
sbbl
lea
mov
inc
sub
movsb
push
add
out
cwtl
xlat
push
fimull
push
mov
sub
call
dec
stc
pop
inc
test
xchg
int3
and
mov
sbb
sub
mov
sub
adc
mov
cmp
shll
jmp
imul
aad
adc
ret
mov
pop
inc
and
out
ja
rorb
gs
mov
test
mov
pop
aam
bound
and
loop
push
cld
sbb
ret
jbe
pusha
cli
add
lret
inc
inc
cltd
ret
pop
movsl
push
lcall
jg
sbb
outsl
cmp
and
shlb
push
cltd
mov
cs
in
adc
cmpsb
xlat
xor
sbb
or
push
xor
into
mov
jmp
repz
fldl
cmpsb
sbb
mov
sbb
inc
andl
and
mov
repz
mov
lret
inc
mov
fsub
cmp
xlat
ficoms
mov
add
mov
mov
out
lret
mov
add
sbb
scas
sbb
cmp
adc
inc
ljmp
or
and
adc
or
test
imul
adc
fdivp
push
jge
jnp
adc
push
das
mov
jmp
stos
push
icebp
loopne
push
jb
mov
sbb
jae
or
pusha
xor
cmp
in
mov
jns
bound
divl
inc
xor
lret
sub
mov
stc
mov
test
aas
and
xor
fwait
gs
orl
jbe
and
or
mov
mov
xchg
dec
and
pusha
arpl
sbb
add
movsb
movsl
aam
push
inc
mov
cltd
mov
mov
sbb
aad
movsb
and
xor
movsl
sub
push
pushf
jl
sub
iret
jo
xor
mov
sub
cli
sarb
loop
int
xor
and
cmp
ret
pop
or
stos
adc
enter
xor
cs
mov
sarl
cmp
jge
shll
sbb
cmp
sbb
jne
notl
sarl
xor
inc
mov
mov
sbb
sub
movsb
out
lea
scas
cmpsl
icebp
mov
in
pop
or
sub
pop
adc
shll
xor
out
adc
imul
or
out
sti
and
or
pop
in
mov
movl
mov
xchg
or
shrb
mov
sbb
pop
fildl
add
fwait
push
stos
mov
and
clc
sbb
rcrb
test
out
xorl
jecxz
xor
push
and
ljmp
adc
cli
jmp
cs
jns
scas
icebp
loopne
jnp
adc
dec
mov
mov
movsl
ret
sbb
outsl
out
push
jl
sub
pop
cld
out
rep
push
daa
imul
sbb
mov
jnp
jmp
out
or
shlb
sbb
icebp
rolb
inc
adc
mov
or
test
stos
xor
push
xor
iret
bnd
pop
inc
mov
sub
mov
jne
dec
cltd
lock
arpl
mov
cmpb
or
mov
add
out
aad
or
pop
mov
add
pop
cmpsl
mov
or
mov
mov
cld
push
fsubr
adc
imul
mov
mov
and
cmpsb
mov
sbb
or
jo
push
jbe
jecxz
dec
cs
cltd
clc
sub
and
insl
inc
sub
cli
mov
sbb
repnz
out
inc
add
into
mov
pop
add
or
cmp
adc
inc
xchg
call
stos
dec
adc
stos
in
testb
int3
cmc
push
xor
cmp
and
fisttps
ret
iret
mov
jmp
out
sti
mov
imul
jo
jb
aad
loope
test
cld
insb
jp
cmp
std
cmp
mov
hlt
shlb
loop
out
call
nop
loop
cmpsl
jne
testb
xchg
lret
sarl
aam
mov
fimuls
push
push
xor
stos
xchg
inc
fstpt
add
cwtl
inc
inc
and
and
lods
push
loope
push
and
pop
adc
shll
sbb
push
out
aam
xchg
out
out
dec
pop
pushf
jbe
jbe
inc
jmp
mov
lret
test
fcompl
dec
jno
add
xlat
outsb
subl
lea
andb
hlt
jne
add
dec
inc
repnz
push
test
test
inc
gs
xor
dec
movb
inc
cld
or
adc
cmpsl
stos
mov
sarb
ds
mov
leave
icebp
cmp
push
cwtl
jg
push
je
mov
test
lahf
mov
es
out
je
mov
fcomp
test
out
cmpsb
test
dec
outsb
xor
cmp
jmp
sub
dec
subb
lods
mov
scas
push
pop
add
adc
cmp
scas
jb
pop
xor
xor
mov
sahf
inc
js
test
adc
out
fcmovne
stos
jns
sbb
add
xchg
dec
xchg
add
je
push
adc
push
lods
and
addr16
in
mov
push
mov
jne
cld
mov
sahf
outsl
jns
outsb
push
popa
sbb
in
xchg
int3
lahf
pushl
adc
push
mov
mov
cmp
mov
shl
push
push
sti
cld
pop
xlat
fisttpl
xchg
shll
in
xor
es
and
cwtl
std
mov
test
xchg
js
loopne
cmp
sbb
loop
push
pop
fistl
test
imul
dec
je
jge
ret
mull
cmp
ljmp
or
stos
fisttps
daa
sub
stc
orl
cltd
push
packssdw
int
cs
das
mov
repz
in
mov
sahf
js
add
inc
out
int
call
mov
leave
cmp
inc
push
mov
std
nop
inc
int3
sbb
adc
cld
mull
pusha
jbe
into
aaa
lret
jnp
jnp
call
loopne
dec
inc
pop
pop
scas
das
inc
stc
shrl
cwtl
mov
fbstp
movsl
push
mov
push
imul
roll
xchg
jns
push
aaa
xchg
shrl
ss
push
aam
mov
lea
adc
xchg
adc
cmp
ja
shlb
jl
out
xchg
in
daa
mov
or
mov
cli
pop
addr16
mov
xor
push
gs
out
or
out
into
fsubrl
cmp
mov
pop
aas
sub
jae
inc
dec
pop
aas
pop
out
cmp
hlt
imul
sub
inc
outsb
jns
out
pop
jne
cmp
jl
xor
aam
jp
add
xchg
cmc
cmp
popf
rcl
xor
ss
mov
lods
dec
lret
sub
mov
mov
lods
repnz
repz
nop
inc
stos
inc
outsl
test
lea
or
cs
outsb
repz
fdivrl
push
mov
loopne
push
add
adc
xor
add
cmp
fbld
sub
mov
xchg
pop
mov
in
jns
cs
mov
mov
sbb
fidivs
int3
inc
sub
insb
push
adc
or
aam
adc
inc
pop
call
pop
adc
mov
jp
dec
in
jle
stos
gs
mov
push
fnstsw
mov
pop
lods
addr16
mov
push
lods
ret
insb
fdivrl
test
and
gs
jo
xor
sbb
dec
adc
push
push
and
push
clc
out
inc
imul
aas
out
js
adc
fdiv
test
and
stc
mov
jae
xchg
mov
pop
cmpsl
insb
mov
mov
cld
sub
shlb
dec
les
inc
mov
ret
mov
adc
stos
and
int
fs
and
mov
lods
mov
enter
jmp
clc
mov
push
mov
or
pop
and
jnp
roll
mov
ljmp
pop
mov
adc
test
xlat
ror
nop
add
add
jle
adc
adc
rcrb
test
enter
enter
cmp
adc
inc
rcrb
push
data16
push
test
ds
mov
test
dec
mov
fsts
je
push
sub
mov
xchg
cltd
xchg
test
fwait
shlb
dec
cmp
into
stos
repz
jo
cli
in
mov
in
dec
adc
inc
push
jmp
xchg
cmp
lock
xchg
inc
and
jecxz
or
sar
sub
lods
pop
fnstcw
mov
addr16
or
ffreep
scas
jns
ljmp
dec
or
and
push
in
lods
lds
pop
frstor
sbb
jp
mov
sbb
adc
and
loopne
cmp
or
lret
repz
out
out
mov
test
mov
xor
push
adc
stos
ficomps
adc
lcall
into
vmovshdup
adc
fcmovb
pusha
cmp
pop
punpckhdq
fsubrl
aad
sub
xchg
fidivrl
xchg
pushf
movsl
add
push
jne
mov
int
out
sbb
cs
lret
mov
shrb
rcrl
inc
lods
push
cmp
mov
ret
int
flds
pop
int
in
mov
test
push
cwtl
mov
lods
out
cwtl
mov
dec
sbb
sbbb
push
mov
push
cli
sar
inc
inc
mov
push
xchg
pop
in
je
push
pop
hlt
lret
sub
pop
mov
xchg
insl
mov
mov
mov
cmc
addr16
inc
cmp
ja
sbb
xchg
pop
cmc
jle
into
jg
loopne
rol
testl
out
cli
outsl
shlb
fdiv
insb
ds
subl
dec
lahf
inc
loop
gs
jle
into
cmp
jecxz
pop
xchg
or
pusha
int
std
int
scas
mov
nop
mov
cmp
push
out
mov
pop
in
mov
stos
cltd
lea
jno
pop
sbb
jb
out
pusha
xchg
fstl
in
lret
pop
std
ds
addb
pop
mov
loope
lcall
subl
jo
mov
lcall
dec
xor
pop
outsl
imul
inc
inc
sub
cmp
jle
scas
mov
ljmp
cltd
or
cmc
and
gs
js
and
and
sbb
mov
into
mov
fcoms
filds
jecxz
cmc
adc
addr16
push
aaa
into
sbb
adc
cmp
dec
sbb
loope
push
andb
push
dec
movsl
movsl
out
cmp
inc
or
add
insb
add
push
sub
into
jp
es
sti
pop
mov
and
call
adc
out
adc
and
jecxz
xlat
mov
xchg
dec
lcall
rorb
cld
xchg
jns
das
scas
adc
fdivrp
and
imul
mov
loopne
jmp
mov
mov
movsb
inc
loopne
pop
ljmp
in
dec
call
rcrb
jp
lcall
or
xchg
mov
loop
mov
sub
nop
je
rorb
cmc
dec
mov
adc
jl
mov
add
cmc
test
push
jne
or
cmp
and
xchg
fcompl
dec
lds
cld
xchg
shl
clc
mov
sub
loopne
jno
outsb
sbb
test
aam
call
adc
outsl
jge
iret
inc
adc
cmp
dec
out
mull
jnp
add
bound
pop
ss
incb
pop
hlt
xchg
les
adc
xchg
or
dec
inc
add
inc
mov
popf
mov
cmp
aam
xchg
in
xor
push
cli
bound
dec
xor
outsl
jle,pt
inc
movsl
add
sbb
aaa
push
loopne
stos
inc
int3
mov
movsb
orb
clc
lahf
stc
sti
in
xchg
pop
es
inc
sub
fstl
xor
cmpsb
mov
je
aas
leave
jne
das
in
xchg
and
ret
sahf
mov
ret
lret
movsl
jp
mov
shrl
imul
pop
lret
mov
pop
imul
mov
inc
ror
loopne
aad
jp
out
sub
nop
fisubrs
jl
lods
ret
pop
mov
or
inc
aaa
ror
repz
insl
inc
je
sbb
add
sub
scas
and
push
pop
mov
mov
or
jmp
inc
hlt
out
in
dec
fstpt
mov
cmpsb
sahf
mov
jmp
loope
mov
or
popa
xchg
add
jb
or
ss
sahf
inc
popf
and
mov
inc
inc
dec
dec
scas
pop
cltd
pop
into
ljmp
fs
sub
cs
push
xchg
lock
jmp
and
pop
testb
push
jp
outsl
adc
ret
mov
xor
or
test
ss
pop
outsb
cmc
or
push
jg
insb
lcall
stos
rclb
jne
dec
cmp
leave
mov
cmp
in
xor
inc
xchg
dec
inc
jg
lcall
lods
adc
mov
movsl
cmpsl
xor
cmc
mov
sub
stos
popa
dec
mov
and
adc
mov
mov
into
rcll
fnstenv
cwtl
inc
push
in
push
js
ds
push
jmp
xchg
jno
xor
mov
addr16
nop
fmull
jo
push
inc
push
aas
jmp
and
js
cmpb
push
outsb
les
mov
jmp
inc
mov
rcrl
add
xchg
inc
jae
int
stos
movsl
cmp
mov
mov
cmp
std
jae
sub
pop
adc
or
mov
arpl
sbb
loope
sahf
mov
or
xor
xchg
das
subb
pop
xchg
popf
mov
jmp
xchg
xchg
pop
pop
xor
cmpsb
mov
fwait
in
mov
mov
or
outsb
mov
gs
stos
dec
and
cmpsb
shr
or
cmp
test
adc
ss
scas
push
mov
push
adc
lods
ret
xor
jne
das
into
clc
mov
cli
and
popa
decl
cmpsb
sbb
xchg
aas
mov
mov
and
lock
mov
cmp
inc
fs
lcall
lret
and
enter
iret
fsubs
adc
addl
inc
icebp
add
mov
test
push
lret
mov
shl
xchg
imul
sbb
jp
push
xlat
mov
sub
xor
je
loopne
mov
xor
mov
xchg
fcompl
push
xchg
xor
xchg
jbe
imul
shlb
sbb
sti
mov
xchg
inc
fwait
sub
jno
jne
adc
inc
xchg
out
aad
sbb
push
mov
and
ja
fld
sub
das
std
pop
rol
lret
push
or
mov
ficomps
loopne
sbbl
xor
dec
cmp
push
je
jbe
pop
scas
popa
pop
sub
mov
sub
xor
lods
out
inc
imul
mov
ja
sub
mov
push
repnz
mov
clc
or
pop
and
imul
xchg
mov
push
sarb
daa
xchg
mov
push
aam
gs
js
adc
dec
ljmp
push
pop
mov
sbbl
call
jo
fnsave
or
cmp
repnz
sub
imul
enter
mov
out
movsb
sub
lret
mov
mov
xor
jb
inc
sbb
andl
sbbb
sub
push
cmp
sbb
cmc
int
decl
sub
cs
and
xor
aaa
inc
pushf
imul
cwtl
shlb
and
imul
ficomps
jb
xor
adc
stc
je
fistpl
mov
xor
xchg
repz
cld
lret
and
insl
testb
pusha
add
sub
nop
sbb
mov
popf
nop
mov
cmp
mov
faddp
daa
inc
xorl
aam
xchg
daa
fnstsw
push
mov
mov
ret
add
push
push
iret
in
cmpsb
inc
push
pop
stos
push
dec
mov
sub
negb
sub
xor
in
arpl
and
xor
or
inc
dec
popa
ja
lea
repz
inc
nop
jb
movsb
daa
jbe
iret
mov
fstl
into
jg
add
pop
ret
adc
add
fsubl
pop
pop
incb
and
or
pusha
jbe
xor
test
popf
xor
and
ja
jae
sahf
shl
or
fnstcw
inc
iret
popf
sub
ljmp
call
sbb
repz
add
xchg
arpl
jae
stc
scas
xor
icebp
aaa
movsl
jg
cmpsb
out
fadds
push
jle
cmpsb
xor
push
xor
mov
sub
loope
hlt
out
xchg
aas
outsb
std
popa
icebp
rcrb
cmp
jnp
cld
push
insb
add
add
loope
cmp
or
push
or
lock
in
gs
push
mov
pop
lds
fwait
icebp
sub
mov
pop
push
mov
mov
ror
jno
jp
stc
xorl
cltd
test
fucomi
movsb
lahf
ss
jb
in
inc
inc
insb
xor
adc
push
ds
inc
fucomp
lock
test
jp
ss
cmp
pop
loop
mov
inc
lret
ret
lahf
and
dec
arpl
sahf
lods
pop
or
add
pop
add
or
mov
dec
pop
int3
pop
sub
aam
xchg
imul
mov
xor
in
fsubrs
or
jmp
jbe
jge
inc
loop
lret
jmp
sarl
cmpb
aam
cmc
xor
outsl
push
xor
mov
dec
inc
sub
or
clc
repz
into
dec
lods
cld
into
add
adc
das
scas
dec
push
mov
xlat
mov
add
pop
push
xchg
xor
pop
push
test
sbb
dec
test
out
jae
gs
lcall
sahf
in
clc
push
out
fnstenv
imul
mov
sub
dec
rclb
nop
mov
push
lcall
or
movsb
fimull
cmp
push
jo
fcomp
loope
jge
mov
imul
stos
mov
sub
jbe
aad
fiadds
subb
inc
aam
lock
xor
inc
dec
aaa
jne
clc
pop
loop
or
aam
loopne
sub
scas
pop
cmp
mov
repz
inc
movsb
mov
pop
mov
arpl
lock
daa
enter
sub
jns,pn
test
popa
ficoml
mov
mov
cmpsl
ja
or
xchg
test
sarl
xor
adc
scas
sub
inc
push
js
cmp
scas
lods
and
xchg
add
or
ss
pop
out
sti
push
insl
push
std
ficompl
and
adc
dec
mov
enter
std
jl
cmp
fldcw
stos
sahf
in
sbb
inc
in
jae
add
iret
fsts
inc
fimuls
dec
mov
push
movsl
outsb
jb
sub
mov
xchg
adc
push
fidivrs
lcall
idivb
lods
cmp
iret
mov
clc
lods
inc
fadd
in
sub
imul
mov
pop
incl
lret
std
arpl
in
pop
dec
adc
xchg
adc
jb
xchg
aaa
stos
jns
outsb
push
mov
xchg
inc
insb
jecxz
mov
push
inc
cmp
icebp
out
movsb
push
mov
fadd
jns
ja
aad
push
lret
inc
leave
testl
cli
push
test
int3
out
call
fcmovb
jb
hlt
xorl
cmp
cwtl
hlt
pop
adc
cmpb
lods
mov
add
jb
mov
mov
mov
jmp
adc
dec
lret
pop
in
loope
push
in
and
dec
mov
inc
inc
pop
loope
mov
xor
aam
and
xchg
ret
push
mov
fcomp
dec
arpl
ds
add
stos
ret
xchg
pop
inc
es
jmp
ss
jns
cmp
cs
push
jnp
or
or
fwait
add
lahf
aaa
adc
lock
adc
push
in
nop
lock
daa
sub
movsb
test
popf
mov
mov
push
adc
repz
addr16
xlat
push
daa
pushf
push
cmp
hlt
cmp
dec
pop
mov
mov
aaa
fistpll
es
cltd
shl
daa
mov
add
pop
mov
adc
push
dec
push
ja
and
xor
lcall
sti
pop
loopne
das
rcr
and
inc
add
shrb
jae
mov
sub
pop
mov
push
in
je
or
inc
inc
scas
cmp
add
mov
ret
or
mov
test
int3
sub
int3
lret
movsb
cld
rcrb
popf
lret
or
arpl
inc
inc
or
pushf
arpl
mov
mov
popa
xchg
xor
dec
mov
adc
sub
out
ss
sti
clc
sbb
dec
lcall
test
xor
scas
addb
stc
mov
mov
jecxz
xchg
xchg
in
outsb
sub
cmp
inc
jne
xchg
xchg
stos
push
cld
out
mov
out
adc
mov
hlt
jecxz
and
outsl
pushf
adc
test
jge
lods
and
fs
xor
aam
pop
lea
push
jae
jmp
imul
cmc
call
cmp
mov
and
jecxz
push
jo
cs
test
cmp
adc
es
mov
jle
pop
fwait
out
cmp
mov
loopne
cmp
fidivs
mov
jae
mov
mov
data16
hlt
or
pop
aaa
gs
or
push
sbb
outsl
mov
aas
sbb
clc
in
mov
jecxz
scas
inc
lcall
stos
in
outsb
xor
add
popf
scas
fldenv
jnp
neg
and
sub
lret
movsb
cmc
iret
fiadds
out
or
mov
and
jl
or
jne
ljmp
pop
std
xchg
repz
pop
sti
fstpl
pop
mov
int3
jg
sbb
loopne
cmp
cs
fadd
push
fisubrl
out
mov
push
fs
sbb
cmp
lods
cmp
xchg
or
cmpl
into
add
in
fcoml
aaa
push
lahf
mov
fldt
inc
into
lods
neg
fs
bnd
jne
jmp
lcall
fmull
adc
aam
pop
cmp
fsubrs
insb
mov
mov
or
push
or
jne
fwait
push
js
sbb
add
stos
aas
inc
push
rcrl
lahf
add
ja
test
sub
push
testl
inc
add
mov
hlt
jae
add
bound
aad
in
xchg
or
sti
nop
fisttpl
inc
mov
mov
cmpsb
rcll
push
insl
adc
pop
repnz
cmp
in
or
arpl
sahf
testl
inc
xlat
frstor
sahf
push
ss
outsl
arpl
push
push
fnstenv
push
rorb
xor
sub
and
sti
mov
ljmp
enter
add
cltd
movsl
inc
pusha
cwtl
inc
xor
adc
popa
gs
or
jp
fmull
push
xchg
xorb
shrl
jge
pushf
aam
dec
add
jnp
std
sub
dec
add
push
aad
outsb
mov
notb
xor
scas
loop
xchg
jne
mov
adc
pop
sti
shll
fcoml
xchg
xchg
popa
pusha
int
inc
pop
fcomi
ret
cmp
xor
dec
sub
or
push
dec
jp
cmp
mov
popa
jge
mov
fwait
es
lret
jecxz
push
frstor
adc
pop
outsb
push
xchg
xor
fwait
out
mov
fs
xchg
bound
fiaddl
pushf
sbb
cmp
out
pop
es
pop
jo
dec
push
xchg
push
jo
testl
cmpsb
xor
clc
push
int3
or
push
repz
xor
nop
cmpb
fisubs
or
fimuls
aam
es
mov
leave
out
mov
fs
js
jo
out
rorl
push
sub
movsl
adc
mov
push
push
mov
push
sub
fcompl
adc
push
jmp
xchg
cmp
push
fsubrl
int3
push
and
pop
push
lret
xor
frstor
outsl
dec
jo
sbb
cmp
mov
push
inc
test
pop
stos
or
leave
je
mov
xchg
test
xchg
lret
inc
iret
fnstcw
imul
pop
or
int3
and
daa
fildl
into
das
xor
shrb
fildl
mov
mov
test
xchg
sbb
xor
sbb
fwait
xchg
jecxz
lods
mov
mov
jnp
pop
adc
sbb
lret
push
jp
sub
adc
sbb
repnz
jae
sar
mov
icebp
into
sbb
fs
jg
sbb
cmp
js
pop
std
js
fbstp
dec
fmuls
push
imul
xor
mov
aad
stos
mov
mov
push
pop
push
std
mov
xor
test
ljmpw
pusha
neg
mov
fdiv
ss
lahf
mull
fsubrl
clc
movsl
cltd
fiaddl
mov
lods
dec
icebp
push
cmpsb
test
int
jb
sbb
cld
mov
jns
push
xlat
ljmp
int
lods
inc
int3
cmp
cmp
inc
adc
xor
push
xchg
out
jg
cmpsl
loope
imul
xor
rcrl
ret
lock
fsubrs
lret
mov
add
dec
addr16
daa
ss
adc
xchg
push
add
sbb
repz
sub
test
in
push
inc
jge
clc
cmc
in
xor
pushf
pop
in
fimull
inc
mov
scas
xor
idivb
in
inc
and
jno
push
lret
mov
movsb
test
nop
sub
test
pushf
adc
movsb
inc
add
lea
xor
test
dec
xorb
js
or
pop
sti
mov
enter
adc
loop
jne
jge
mov
popa
xor
test
push
jge
aad
fcmovu
add
inc
stos
std
xchg
orl
or
jno
fdivr
mov
or
js
scas
lds
xchg
mov
cmpl
or
ret
mov
cli
fdivs
push
add
test
inc
cmp
icebp
sub
jno
mov
in
push
movb
xlat
outsl
cmp
mov
inc
mov
loop
testb
pusha
nop
scas
fsubrl
inc
sbb
push
ret
inc
je
adc
cmp
test
mov
in
inc
cmpsb
cld
adc
or
add
mov
jnp
into
loop
push
mov
arpl
jp
mov
faddp
gs
or
shl
push
loop
mov
daa
out
lss
xchg
pop
sub
jno
das
cmp
clc
popa
rorb
cmp
fidivrs
mov
mov
jnp
and
inc
mov
dec
mov
jo
pushf
mov
dec
sub
mov
leave
dec
dec
adc
dec
jnp
cli
iret
cld
dec
leave
pop
repnz
inc
insl
je
ljmp
icebp
jb
xchg
pushf
lods
mov
repz
cld
loope
sub
fstps
jno
test
out
pop
jl
mov
scas
sarb
bound
pop
test
xchg
call
and
adc
push
cwtl
insl
movsl
lods
mov
jns
lret
lret
xor
iret
fldenv
in
xchg
pop
sub
xchg
adc
pop
mov
test
lock
lods
fdivl
xor
pop
jp
push
jb
cwtl
pop
subl
lret
xchg
adc
push
decb
mov
push
addr16
push
xor
hlt
xchg
dec
mov
fstpl
imul
mov
add
mov
sti
and
jle
xchg
int3
int3
push
fbld
xchg
je
cmpsb
out
and
cmp
imul
mov
cmp
jmp
add
jb
dec
xchg
popf
mov
nop
test
jno
fs
movsb
in
faddl
scas
outsl
pop
sbb
push
das
adc
xchg
and
mov
pop
imul
sub
xchg
fldenv
daa
mov
mov
xchg
xchg
fldenv
ss
shrl
movsb
push
mov
cmp
xchg
std
test
ss
dec
add
xor
jg
ret
mov
cli
std
push
mov
cmp
cmp
testl
cltd
cmp
push
call
lcall
into
cmp
ljmp
and
cmc
mov
add
dec
jmp
mov
cli
sbb
loopne
mov
xor
and
lea
cmpsl
add
subl
pushf
adc
mov
loopne
je
fisubrl
mov
sbb
shlb
loopne
fwait
lret
mov
hlt
clc
aaa
jp
test
loopne
xchg
jbe
xchg
sbb
add
pop
or
xor
adc
mov
aad
cmp
dec
movsb
out
repz
mov
je
sub
and
inc
cmpsl
jns
movsl
xchg
idivl
bound
sub
dec
inc
lcall
jecxz
ss
mov
lahf
xchg
daa
ds
fs
mov
addb
mov
inc
inc
xchg
sub
cmpsl
popa
lcall
pop
leave
loope
dec
iret
mov
sub
cmp
iret
int3
pop
add
pop
cmp
jns
rolb
fmuls
sub
pop
repz
sbb
jno
and
push
arpl
lahf
bound
push
xor
loopne
gs
outsl
popf
fldt
dec
outsb
lds
push
mov
adc
sti
dec
mov
lods
fucomp
push
aad
jge
pop
mov
xor
inc
dec
mov
xchg
mov
mov
rorl
lcall
movb
push
fstpl
cmp
push
dec
xchg
hlt
mov
scas
aad
je
pop
mov
lret
es
xchg
rcrb
add
shlb
in
cmp
jp
lahf
cmp
addb
mov
sbb
rorb
xchg
xor
push
pop
fldl
xchg
test
loop
dec
sub
in
in
jb
loopne
ret
clc
add
mov
mov
jg
into
push
mov
mov
sbb
inc
stos
dec
push
jno
sub
mov
pop
cmp
sahf
jg
xor
sbb
jno
lret
int
dec
add
into
lahf
sbb
add
xchg
shll
test
lods
ljmp
inc
or
fsubp
int
fwait
sbb
mov
shll
push
push
cmpb
insb
sub
inc
mov
daa
stos
pop
fwait
sbb
inc
add
pushl
and
pop
loop
mov
xorb
jecxz
incl
mov
xchg
or
fldl
dec
mov
mov
rcll
jge
jmp
imul
xchg
mov
roll
es
cmpl
add
das
cmc
sub
xor
je
lahf
push
shr
add
data16
divl
inc
xchg
negb
or
mov
std
pop
ja
adc
lret
mov
sbb
push
ljmp
gs
out
outsb
jle
mulb
adc
mov
xchg
cmc
push
lods
inc
add
jmp
lea
test
enter
jo
mov
mov
mov
stos
jg
imul
xchg
scas
jno
in
pop
jne
lods
jae
mov
lods
lods
add
cmp
mov
push
mov
mov
mov
lret
dec
lods
pop
jle
sahf
or
mov
sbb
lret
pop
and
xchg
inc
push
shlb
cmpsl
pop
fdivp
mov
mov
inc
cltd
fstps
jecxz
cwtl
inc
sub
ds
xchg
in
mov
xor
inc
sbb
pop
lea
push
cmp
outsl
insl
sub
gs
or
cwtl
popf
fwait
pop
jmp
adc
dec
rcrb
pop
sahf
or
leave
sub
pop
or
push
cmpsb
lock
jne
hlt
out
in
mov
fcompl
fisubrl
inc
sbb
and
pop
pop
jp
aam
subl
fs
test
test
dec
pop
lds
fsub
fnstsw
and
ret
sub
mov
divb
sbb
cmc
pop
mov
mov
flds
jmp
mov
cmp
or
sbb
jo
cs
std
mov
out
pop
outsl
fidivl
imul
push
or
scas
pop
sub
xchg
fidivrl
cmpsl
icebp
jae
jo,pt
mov
outsb
xor
xchg
and
imul
xchg
xor
add
lds
addr16
push
mov
fsubrs
xlat
sbb
lods
inc
mov
xchg
sahf
sbb
imul
pop
push
mov
roll
or
and
ds
sti
lods
sbb
jnp
gs
or
scas
sub
jmp
sbb
xor
scas
and
ljmp
xchg
ficoml
in
dec
stos
push
pop
scas
sub
or
dec
push
insb
xchg
push
cmp
outsb
inc
xchg
cmp
mov
out
vsubpd
aad
lods
popa
cmp
cmp
add
xor
mov
in
std
inc
inc
xor
ret
pop
cli
adc
jmp
loope
or
dec
xchg
out
sbb
popa
jp
sub
test
movsb
mov
and
mov
mov
in
xor
xlat
lea
filds
adc
or
in
mov
inc
cwtl
lock
lret
mov
out
dec
jecxz
repnz
int3
in
add
xor
dec
push
cmp
neg
xor
lea
clc
xchg
repnz
daa
sub
pop
loopne
sub
fisubrl
push
jb
cltd
hlt
out
addr16
add
daa
jno
fimull
pop
sub
cmp
out
adc
fcomps
push
shr
int
shr
jmp
out
jno
enter
mov
sub
lock
mov
sbb
push
and
mov
xlat
or
push
fistl
inc
das
sub
xchg
sub
pop
pop
sbb
mov
mov
sub
into
dec
sti
push
out
sahf
subb
ret
add
ljmp
das
mov
arpl
dec
jns
fwait
pop
int
int3
loopne
jo
or
ret
test
sbbl
xchg
ds
mov
stos
sbb
loope
push
pop
repnz
dec
mov
push
jno
ds
cli
aaa
add
pop
fidivs
sti
jne
mov
sbb
not
ret
int3
enter
fwait
test
inc
mov
mov
scas
cmp
in
sbb
cld
ljmp
sahf
push
push
dec
pop
cwtl
dec
loope
outsl
jmp
hlt
xor
add
jno
scas
jno
push
xorb
mov
xchg
movl
inc
push
xchg
lret
xlat
cld
dec
or
mov
in
mov
rcr
jne
in
pop
rol
push
in
hlt
xchg
xlat
lea
inc
rolb
ficompl
ret
or
push
in
dec
adc
imul
pop
lock
in
in
pop
dec
in
dec
jnp
cmp
mov
push
aam
mov
inc
xor
std
dec
xor
pop
lock
or
sahf
in
pop
jb
mov
cwtl
test
lret
gs
cltd
pop
repz
jg
notl
xchg
mov
adc
imul
adc
icebp
shll
inc
fs
cmp
scas
xlat
mov
jne
sub
loop
aam
inc
pop
sub
add
in
pop
insl
lods
outsb
xchg
xor
dec
sub
inc
adc
iret
and
fistl
adc
jno
testl
enter
xor
into
cmp
sbb
push
mulps
jmp
out
add
stos
loopne
shl
sub
sti
inc
fsubl
sbb
int
andb
push
test
sbb
bound
dec
stos
clc
adc
adc
gs
adc
dec
sbb
adc
cwtl
xchg
add
das
pop
test
jbe
jecxz
push
sub
mov
pop
jp
sbb
or
das
popa
xchg
xor
ds
mov
sbb
imul
xchg
orb
es
dec
mov
lahf
and
or
pop
bound
mov
test
xorb
cmpsl
pop
addr16
push
sbb
jmp
or
jmp
arpl
movsb
jmp
imul
mov
notl
sub
imul
fmuls
jns
loopne
push
sub
sub
ja
test
push
cmpb
in
adc
add
mov
xor
add
clc
inc
rclb
cmc
mov
shlb
lret
mov
sbbl
mov
das
and
jp
jmp
inc
dec
out
push
inc
test
push
cmp
xor
rorb
outsl
rorl
clc
dec
dec
mov
adc
repz
mov
sbb
fstpt
mov
addr16
mov
jmp
inc
out
fisttps
pushf
in
or
insl
add
cli
and
and
push
icebp
pop
nop
mov
out
ficoms
adc
adcl
dec
fdivrs
mov
mov
xchg
sub
sub
popa
push
mov
movsl
incb
fidivrl
out
xchg
add
or
lcall
out
push
and
jl
mov
ss
mov
jae
pop
leave
mov
in
outsb
dec
mov
mov
push
or
clc
mov
repz
into
pusha
push
push
xchg
push
std
and
pop
andl
mov
ljmp
pop
push
xor
mov
fcomip
sub
lods
aas
mov
mov
clc
ret
dec
lcall
xchg
rcl
test
push
jbe
pop
and
hlt
imul
imull
or
jbe
aaa
pop
cmp
xchg
pushf
sti
jp
xchg
adcl
mov
lock
incb
xor
and
das
dec
pop
pop
int
arpl
test
add
mov
cmpsb
fmuls
jge
out
jp
js
movsl
xor
xchg
decl
ds
xchg
xor
lret
in
testb
je
out
test
xchg
and
sub
cmp
or
sahf
je
dec
out
ss
mov
mov
mov
stos
lret
out
mov
xchg
dec
mov
call
out
mov
scas
inc
xor
jae
xchg
xchg
xor
add
jecxz
les
push
lcall
or
xor
sub
loop
rorb
xor
pop
inc
stos
sbb
and
dec
xor
jnp
mov
xchg
jg
cmp
addr16
in
ret
fists
push
outsb
mov
cmp
sbb
aam
adc
mov
and
push
xlat
inc
dec
ret
xchg
pusha
jmp
inc
lcall
roll
jp
add
loope
mov
mov
imul
aas
mov
mov
adc
imul
push
mov
loopne
lea
mov
inc
int
xor
jge
jp
inc
push
cwtl
xor
and
sbbb
push
popa
shrb
dec
es
dec
xor
or
cs
mov
ret
lods
dec
xchg
movl
aad
dec
mov
lret
or
jle
js
leave
movsl
sbb
sub
shlb
push
popf
ficompl
jo
imul
sti
int
popa
xor
xchg
aas
stos
mov
pop
into
cmp
into
mov
in
push
mov
add
cld
out
push
ss
or
fcoml
xchg
xor
xchg
dec
scas
adc
call
jmp
lea
out
and
or
push
jo
add
out
insb
dec
mov
jne
xchg
mov
push
mov
shlb
sar
inc
mov
hlt
addr16
sbb
jno
das
dec
xchg
cmpsb
ja
add
movsb
int3
in
fs
mov
mov
ficoms
sub
or
pusha
xor
cld
jl
lds
movsb
nop
popf
jmp
xor
jl
and
fadds
or
pop
andb
xchg
inc
mov
cmp
cltd
mov
adc
dec
xchg
lock
ds
nop
and
shll
inc
mov
add
aaa
shrb
push
daa
fwait
cmovbe
or
add
mov
insl
push
inc
in
push
shll
pop
lea
jmp
add
lcall
add
jae
adc
in
icebp
xchg
inc
push
popa
mov
pop
mov
lret
cwtl
addl
or
add
xchg
mov
mov
mov
sbb
insb
iret
push
xchg
es
std
push
and
cltd
orl
pop
xor
insl
das
pop
ret
les
jnp
lcall
lea
inc
aam
or
lcall
or
cmp
push
je
jo
out
push
add
pop
out
push
xchg
movsb
jle
fisubl
daa
sub
sahf
push
mov
les
adc
ret
rolb
adc
jge
xor
add
ret
jae
or
mov
jb
test
test
pop
inc
jp
cwtl
jg
and
xchg
xor
inc
xchg
fcmovnbe
cli
loop,pt
stos
and
clc
int
ljmp
push
jl
add
gs
dec
pop
fnstcw
jle
and
xchg
insb
and
outsb
insl
pop
push
call
fs
shr
jecxz
inc
outsb
cmp
dec
mov
sub
orb
fmuls
inc
sub
stos
outsl
faddl
cmp
and
add
jo
cwtl
pop
pop
xorb
xor
pop
mov
xor
cmpsb
pop
lret
push
sbb
mov
shrb
adc
cmp
pop
push
repz
clc
push
push
inc
ljmp
push
inc
xor
xchg
movsl
shll
in
dec
jne
pop
jo
pop
lea
adc
mov
imul
loope
and
js
ret
movsl
in
adc
pop
pop
insb
mov
int
xchg
adc
shlb
ret
or
xor
push
sub
call
cwtl
push
adc
xchg
jb
mov
test
mov
xchg
std
stos
add
adc
mov
sub
sahf
pop
adc
addr16
push
lods
in
scas
stc
adc
test
int3
loop
push
shll
push
add
cmp
and
and
idiv
mov
loopne
cmpl
inc
dec
jge
fadds
inc
lock
jb
mov
adc
xor
or
adc
jno
fidivrs
jmp
jbe
jmp
or
lahf
imul
xchg
stc
out
shrl
adc
jle
mov
jbe
pop
dec
mov
sub
xor
pushf
or
popf
jge
out
fsts
and
or
mov
lsl
jg
jmp
xchg
scas
mov
mov
pop
test
arpl
push
inc
ss
mov
pop
rcr
or
loope
push
fnstenv
into
and
jg
add
jbe
scas
popf
aas
andl
xor
ja
inc
cmc
les
cmp
popa
inc
jb
xchg
mov
xchg
lock
std
out
xor
jecxz
jns
in
addb
lds
jmp
and
fimuls
aad
mov
and
jg
jle
int
cli
sahf
and
mov
and
adc
stc
movsb
push
mov
mov
enter
shrb
pop
xor
in
mov
add
push
les
xchg
loopne
push
out
mov
cmpsb
mov
xor
jl
enter
jbe
jne
xchg
popf
pop
pop
push
push
pop
add
sbb
push
in
lds
mov
dec
in
xchg
push
jbe
add
pop
aam
cmc
inc
daa
or
sbb
cli
inc
into
dec
adc
inc
rol
test
push
mov
test
adc
dec
lds
shrb
adc
adc
outsl
and
push
jecxz
xchg
add
dec
sarb
mov
in
inc
xchg
sub
call
sbb
out
repz
cs
iret
xor
push
imul
cmpsl
pop
das
into
or
fldenv
push
cmpsl
in
inc
ss
std
add
insb
inc
decb
inc
pop
inc
mov
xchg
in
fidivs
adc
lods
js
gs
daa
fwait
shlb
xchg
push
arpl
call
loopne
fidivrs
sub
xor
inc
call
dec
mov
sti
pop
mov
xchg
lds
dec
jno
jl
cmpl
js
sub
ss
aaa
xchg
icebp
mov
sbb
cld
orb
aas
dec
dec
in
lret
adc
add
in
add
cmpsb
push
imul
fs
mov
sbb
xchg
out
adc
ret
xchg
loope
adc
out
sub
lret
scas
ss
cmp
cmp
in
popf
cmp
imul
pop
mov
in
jmp
aaa
loopne
dec
sbb
shr
cmc
in
cmp
pop
mov
push
sbb
mov
pop
sbb
dec
add
int3
pop
fsubs
test
lods
and
dec
into
push
xchg
cmp
sbb
test
push
pop
and
xor
and
lcall
lea
add
adc
int3
pop
out
std
cmp
inc
rcl
imul
and
loop,pt
push
push
adc
cmpsl
push
dec
sbb
xor
std
adc
mov
fbstp
xchg
outsb
jecxz
das
mov
dec
arpl
scas
mov
nop
inc
xor
or
xchg
pushl
sbb
clc
or
repz
rolb
add
repz
sub
jno
fdivrs
mov
scas
xchg
lahf
in
jbe
dec
or
lahf
in
movsb
into
jne
in
cmc
xchg
ror
in
in
sbb
sti
mov
mov
adcl
aas
insl
jge
rcr
out
mov
inc
or
cmp
jae
or
xorb
jmp
ret
dec
sbb
aaa
dec
mov
xchg
add
mov
push
add
stos
or
mov
jbe
inc
int3
stos
stos
xorl
xchg
ja
cmp
popa
xchg
adc
sbb
fidivl
dec
shrl
scas
cmpsb
mov
loopne
mov
dec
or
pop
inc
outsb
pop
enter
ja
lods
jne
dec
push
cmc
mov
repnz
sbb
inc
nop
rcrl
jle
xchg
in
push
mov
sub
inc
pusha
vmread
pop
or
or
sub
lret
mov
mov
push
push
aas
in
mov
pop
subb
jns
mov
imul
lret
stos
xchg
aaa
push
cli
lret
or
bound
out
sbb
adc
push
pop
jp
hlt
in
xchg
push
and
cmpsb
popa
repz
ss
adc
jns
or
mov
and
xchg
cmpsb
stc
rcrl
or
enter
scas
inc
popa
insb
jle
icebp
inc
inc
push
js
adc
add
push
jl
cmp
cld
arpl
jo
arpl
test
lret
nop
lock
xor
xor
std
in
and
pop
pop
jb
ret
idivb
push
mov
inc
lret
es
dec
andl
aaa
outsl
sbb
jns
into
mov
sbb
pop
jo
sarb
pop
fmul
push
mov
leave
test
jge
ret
movsl
shlb
outsb
mov
outsb
push
vmovdqu
sbb
ja
int3
xor
push
jp
push
adc
sbb
outsl
dec
aam
push
or
ja
popa
lods
adc
add
and
jnp
adc
adc
cld
jle
inc
mov
test
adc
jns
int
roll
mov
clc
pop
subl
fistpl
xor
mov
leave
inc
inc
xchg
sub
adc
fsts
adc
popf
in
mov
fcoms
cs
push
pop
xor
jl
and
adc
ficompl
push
or
pop
or
pusha
test
mov
mov
push
test
aas
xlat
cs
fists
arpl
mov
jge
mov
mov
pop
test
lock
or
fistpl
test
ja
mov
mov
movsl
and
xchg
mov
cmp
jns
dec
inc
adc
pop
mov
imul
imul
xchg
fsubl
mov
sub
std
lea
les
mov
scas
cmp
xchg
pop
push
std
movsb
sarb
xor
pop
pop
xchg
jb
test
jle
lock
lods
addl
outsl
enter
sub
push
loopne
stc
insl
popa
in
fiadds
in
outsl
icebp
popa
push
fwait
ret
loope
pop
mov
push
and
pop
pop
ljmp
faddl
xchg
imulb
xchg
popf
lds
mov
adc
fcompl
dec
cmp
das
enter
jb
lret
ret
dec
lock
push
dec
sbb
xlat
lods
popf
sarb
imul
filds
sahf
or
xchg
repnz
lds
cmp
pop
adc
add
es
idivl
push
push
js
pop
push
cli
sub
add
pop
adc
add
outsb
mov
jno
mov
outsl
in
ret
sahf
rorb
or
inc
mov
cmp
or
shrb
ds
imul
or
add
ficomps
add
int
add
fisubl
ret
jmp
fsts
jle
hlt
cmp
insl
push
imul
iret
outsb
add
sub
insl
dec
push
pop
in
cmp
adc
inc
shlb
sti
lcall
data16
pop
ljmp
mov
or
push
jns
xchg
or
hlt
xor
mov
lods
mov
cltd
jnp
pushf
mov
mov
pop
or
and
ja
enter
dec
dec
adc
fidivrl
ja
mov
mov
gs
jns
std
xor
fsubrl
gs
in
cmc
push
jl
scas
jne
scas
movsl
lock
idiv
pop
and
sbb
and
out
aad
cmpb
lods
dec
rorl
pusha
popa
cwtl
stc
pop
out
or
jno
enter
sahf
mov
or
aam
push
jb
push
cmpsb
ss
add
sbb
sub
jno
dec
les
loopne
in
cli
imul
inc
push
jg
xchg
in
dec
dec
cltd
lret
jmp
pop
repz
mov
adc
popf
sarl
mov
imul
popf
pop
fstl
push
push
mov
adc
sbb
andl
imul
loopne
mov
mov
andl
incb
or
adc
divl
dec
xchg
pop
fs
xor
cmpb
cmp
loope
jmp
adc
shr
jns
shrl
cs
adc
imul
imul
lods
cmc
xor
jle
sti
addr16
testl
loope
add
sub
adcb
ds
inc
sbb
adc
ret
lock
add
iret
jnp
cltd
enter
and
cmp
rorb
mov
pop
push
push
xor
into
int3
jbe
jge
lods
xlat
jp
in
push
jp
inc
test
insb
lods
and
xchg
outsb
cltd
out
inc
xchg
pop
aaa
popa
xchg
stc
sub
data16
inc
mov
movsb
mov
fs
andb
xchg
inc
mov
pop
xchg
cltd
inc
daa
push
pop
bswap
ljmp
dec
imul
mov
fcmovnu
sahf
fildll
pushaw
incl
cs
mov
dec
xchg
pop
and
mov
mov
sbb
dec
pop
xor
and
movsb
rorb
xchg
leave
and
fldenv
call
cmp
repz
mov
push
rcrb
in
arpl
pop
mov
in
fisubs
sbb
mov
outsb
inc
jne
aam
pop
popa
mov
ret
lods
fildl
mov
insb
mov
data16
adc
push
rcrb
push
stc
jl
mov
dec
inc
pop
inc
jbe
adc
imul
clc
outsl
sub
clc
ljmp
xchg
lret
pop
adc
repnz
jae
dec
xor
adc
lds
add
jno
pop
or
mov
out
push
stos
out
lock
rorl
sbb
lods
inc
mov
jmp
xor
xchg
out
mov
push
mov
add
jo
repnz
jbe
int
and
je
add
pavgb
cmp
orl
pop
mov
pop
jmp
xchg
sbb
inc
sbb
sbb
mov
invd
cmp
loopne
push
mov
movsb
push
jmp
add
cmp
es
sbb
int3
xchg
das
xchg
clc
pop
jno
cld
dec
adc
jae
jle
xorl
fwait
iret
pop
pop
cmp
inc
pusha
push
or
insb
jne
jge
jns
mov
lcall
dec
subl
pop
lahf
adc
inc
mov
mov
lahf
insb
mul
repnz
jg
cwtl
xchg
lret
mov
adc
test
inc
enter
fs
adc
jne
pop
stc
xchg
hlt
xchg
and
fwait
cs
pop
cltd
sbb
xchg
shll
inc
lods
adc
dec
xor
leave
mov
inc
mov
push
pop
cwtl
das
pusha
addr16
xchg
cmc
fimuls
dec
ret
popf
mov
mov
pinsrw
dec
shlb
cmp
jg
shrb
mov
pop
xchg
sub
inc
mov
outsb
lods
loope
daa
xchg
lods
loope
ds
xchg
gs
and
sbb
xor
cmp
inc
pop
insl
aad
sub
push
jno
pop
sub
xor
lds
data16
add
sub
xchg
out
ds
gs
test
or
sbb
inc
xor
xchg
jnp
jnp
inc
cltd
cld
jp
fnsetpm(287
mov
shrl
adc
test
out
or
inc
cmp
push
mov
test
mov
imul
pop
sub
dec
aaa
mov
and
adc
insl
loop
xor
mov
insl
xchg
test
mov
orb
sub
es
xorb
pop
fwait
pop
lds
xor
push
jae
rcrb
in
aas
shl
pop
std
out
adc
pusha
movb
pop
call
imul
mov
enter
xlat
or
cmc
xor
and
aad
orb
mov
mov
push
jae
sbb
fcoml
push
out
test
xor
inc
fcomi
into
rol
imull
stos
push
pusha
add
push
mov
or
inc
cmp
dec
cmp
mov
pusha
test
into
adc
xlat
and
or
and
dec
jge
loopne
or
inc
cmc
repz
adc
shrl
imul
sub
adc
mul
loop
cmp
data16
shrl
jmp
loopne
in
sbb
mov
adc
cld
add
inc
sahf
jo
sahf
and
jns
dec
pushf
icebp
cmp
mov
adc
fidivrs
aam
inc
pop
mov
mov
xchg
into
scas
add
or
rcll
sub
adc
jae
test
mov
cli
jecxz
sub
int3
cmp
hlt
cmpsl
shll
and
nop
shrl
leave
scas
ja
mov
xor
shrl
pop
cmpsb
popl
pop
xor
jp
out
ljmp
ja
dec
les
in
lods
push
rolb
ljmp
popa
imul
mov
xchg
jb
flds
sbb
inc
mov
inc
adc
leave
add
lahf
cmp
clc
movb
call
jmp
movsb
cmp
pop
mov
mov
divl
incb
bound
les
sub
jne
aam
fucomp
add
inc
cmp
repz
pop
movb
inc
or
fildl
cwtl
sbb
test
bound
xchg
frstor
insl
xchg
sbb
xchg
arpl
and
scas
movsl
mov
aam
dec
pop
pop
add
xor
pop
or
mov
stos
xchg
cmpsl
mov
mov
mov
push
push
ret
and
jl
movsl
cmp
cmp
les
add
out
xchg
mov
mov
cmp
adc
dec
xchg
mov
fildll
cmp
push
sbb
xchg
into
and
or
cmp
fcompl
loopne
cs
jmp
lret
jb
xchg
ret
das
dec
pop
shll
cmp
push
dec
sbb
mov
out
rcrl
inc
mov
test
data16
shll
mov
repz
int3
mov
fsubrl
pushf
out
xchg
xor
out
aam
insb
and
push
out
rclb
sysenter
lcall
mov
or
push
popa
mov
shll
into
sbb
stc
push
mov
inc
mov
inc
in
adc
mov
clc
fimuls
xchg
insl
loopne
or
mov
mov
aas
push
test
cmp
std
inc
lods
pop
dec
push
or
pushf
push
add
xchg
pop
pop
mov
ja
loope
or
rclb
mov
push
pop
xchg
add
outsl
cmp
cmp
sub
inc
roll
push
out
xchg
inc
shrl
jmp
into
lock
in
vsqrtpd
xchg
in
sub
fs
dec
test
pusha
ret
push
xchg
rolb
out
sarb
mov
jno
ljmp
fs
in
aas
push
sbb
xchg
push
sub
xchg
into
in
add
mov
insb
clc
insl
in
xorl
lret
rolb
xchg
in
loop
xchg
clc
push
sbb
and
out
jecxz
jbe
leave
jg
subb
imul
mov
lahf
in
dec
clc
hlt
pop
cmp
jle
xor
in
push
or
dec
adc
insb
push
lods
push
pop
add
jmp
sbb
xchg
xchg
jae
adc
xchg
push
outsb
test
rcl
xor
mov
mov
ss
into
std
decb
pop
stc
sbb
shl
jo
inc
dec
movsb
cltd
mov
push
or
test
icebp
loopne
push
sbb
pop
jle
xor
mov
subl
pop
lods
inc
js
cmpl
stos
ret
dec
pop
idivl
hlt
sbb
mov
jecxz
jnp
and
mov
jp
outsb
jg
movsb
out
lock
enter
mov
push
stc
add
sarl
repnz
test
dec
dec
iret
inc
arpl
xchg
cwtl
lcall
or
test
stos
lcall
mov
jge
xchg
adc
push
sub
xchg
jnp
and
outsb
push
out
inc
xchg
adc
and
jne
sub
push
pop
adc
mov
mov
ja
sub
sub
popa
repz
and
dec
ss
incb
xor
jo
bound
mov
add
clc
mov
scas
mov
inc
movsb
dec
les
mov
enter
xor
xchg
cltd
cli
call
sub
js
cmp
fldl
lahf
shr
xchg
xchg
jnp
ret
rcrb
dec
mov
and
adc
mov
xor
cmp
mov
sub
and
mov
in
or
je
cmpsb
ss
and
push
dec
out
out
test
push
and
stos
lret
loopne
mov
lds
xchg
scas
iret
clc
cmc
imul
aas
es
cmp
stos
or
mov
and
into
and
ret
pop
xchg
ja
mov
or
roll
stos
push
cld
xchg
cmpb
mov
xor
pusha
lret
cld
mov
inc
or
push
sahf
into
or
inc
test
sub
mov
inc
lods
xchg
or
ljmp
and
adc
push
or
jnp
or
cli
ret
sbb
add
pop
int3
push
ret
fmuls
pop
or
xchg
popf
xchg
inc
enter
sbb
add
lds
int3
aaa
adc
push
les
xchg
loop
jle
cmp
loope
mov
mov
je
lret
stc
repnz
scas
iret
xchg
fstp
push
out
mov
mov
or
xor
minps
xchg
in
sbb
cmp
jecxz
pop
testb
cmp
std
jmp
psadbw
sbb
mov
mov
dec
int3
and
aas
adc
fcmovb
sub
out
out
mov
pusha
pop
mov
stc
add
adc
mov
or
cmc
bound
xor
push
cs
and
int
push
dec
or
enter
mov
xchg
xor
movsb
jp
out
xor
xchg
mov
sub
mov
in
cwtl
loop
imul
jbe
jb
dec
dec
fiadds
sar
dec
out
pushf
push
xchg
jnp
lcall
ss
outsl
sbb
xchg
xorl
or
pusha
data16
cmp
jl
and
mov
mov
mov
lock
ss
nop
das
popa
mov
inc
fucompp
sbb
lods
rorl
cmp
jbe
lods
shrb
xor
imul
test
mov
jmp
movsl
bound
xchg
xchg
fucomi
push
mov
iret
aaa
aam
pop
insl
push
mov
pop
adc
lret
sub
outsb
fcomp
aaa
pusha
jo
mov
mov
adc
jno
xlat
imul
push
pop
in
jmp
lret
push
or
cmp
sbb
ss
mul
pop
repz
mov
xor
cld
push
shrl
xlat
leave
gs
mov
xchg
jns
sub
and
test
mov
out
movb
inc
addr16
test
push
in
lods
jo
addr16
shlb
dec
lds
adc
scas
inc
bswap
loop
sbb
aaa
mov
cwtl
cmpsl
lea
push
add
xor
stos
mov
fisubrl
aas
add
xchg
mov
pop
mov
sbb
mov
or
test
cmp
mov
lcall
pop
sarl
test
add
aaa
aaa
mov
aam
int3
dec
scas
push
out
sub
mov
out
xor
push
jb
sub
popa
mov
cs
cmc
mov
jo
popa
shrl
adc
pushf
in
pop
inc
fnstenv
push
mulb
fidivl
daa
outsb
scas
lret
xor
and
clc
test
inc
dec
clc
fs
outsl
pushf
clc
push
lret
pop
loop
cs
lcall
addr16
mov
iret
or
add
adcb
add
nop
mov
adc
jno
mov
mov
dec
mov
cmp
cltd
or
inc
pop
bound
xor
pop
xor
ljmp
mov
lcall
mov
outsb
into
pushf
fisubrl
pop
cmp
or
sbb
aaa
sub
out
inc
adc
jecxz
fistpl
push
stc
lock
ds
lds
push
mov
lcall
out
popf
scas
lds
jmp
sub
scas
test
dec
lret
vpshufhw
mov
adc
push
lea
and
ret
cmpsl
push
sbb
xchg
icebp
xor
aam
inc
xchg
les
sub
scas
mov
xlat
fbld
imul
sbb
repz
and
shl
sub
dec
cmpsl
sub
ret
call
mov
enterw
mov
loope
inc
push
aam
repnz
repz
sbb
push
fdivrl
addl
mov
hlt
add
fldt
scas
test
cwtl
cmp
xchg
dec
push
adc
imul
rorb
lock
scas
mov
clc
call
rorl
jecxz
shll
and
clc
daa
jmp
sub
jne
dec
mov
sbb
roll
cltd
mov
cwtl
stos
cmp
push
inc
test
sub
dec
xchg
fsubs
es
in
jnp
xchg
and
int3
or
mov
mov
mov
cmp
pop
pop
test
int
adc
jp
jmp
sbb
mov
lods
and
jp
inc
push
das
icebp
mov
fidivl
pushf
andl
inc
adcl
das
pop
xor
sub
dec
sahf
or
fwait
insl
jg
out
adc
fisubl
add
sub
mov
push
and
jnp
cmp
in
shll
push
ret
test
leave
xor
push
sbb
dec
adc
push
das
insb
push
and
je
das
push
jae
mov
sbb
imul
xchg
pop
out
shlb
sahf
pop
xchg
leave
cmp
fcompl
cltd
mov
push
popa
dec
pusha
call
mov
daa
popa
int3
test
mov
call
loope
add
add
lods
es
aas
in
jo
sub
mov
push
mov
out
pop
idivl
and
fs
mov
mov
push
mov
xor
jno
mov
aad
dec
sub
repnz
adc
enter
inc
lds
jp
mov
lods
leave
add
push
ljmp
add
adc
fcom
mov
add
filds
cmp
ja
out
loopne
cmp
mov
xchg
cmovne
in
mov
imul
pop
sahf
mov
mov
subb
cmpsb
in
fcmovu
jecxz
insl
mov
pop
inc
jae
xchg
fisubs
adc
pop
add
xchg
cmpsb
cmp
cmp
xchg
cltd
in
mov
or
push
ja
lea
mov
add
ds
adc
dec
and
jecxz
cmp
bound
stos
or
dec
js
xchg
mov
sbb
and
lcall
mov
loopne
jmp
xchg
stos
sub
push
into
add
add
lahf
lods
mov
mov
sti
mov
nop
cmp
addl
adc
pushf
cmp
push
cmpsl
jecxz
push
cwtl
mov
lds
cltd
mov
sub
xor
xor
pushf
push
in
lods
lods
dec
sub
insl
dec
xchg
sub
mov
stos
ret
rcrl
pop
cmp
or
jge
jno
ss
pop
or
negl
pop
negl
std
push
pop
push
cmc
fimuls
xchg
pusha
sub
push
lahf
pop
add
inc
pop
std
lds
sub
add
pop
dec
sub
dec
scas
ja
adc
out
dec
push
loopne
lret
mov
mov
dec
and
dec
jge
mov
pushl
xlat
pop
icebp
pop
lret
insb
pop
xlat
pushl
push
inc
add
fidivl
inc
add
dec
es
adc
pop
fs
aaa
push
cmc
jbe
lret
shr
pop
or
pop
fnclex
push
push
jnp
mov
and
lret
mov
mov
jge
mov
add
and
cwtl
pusha
ficoml
movsl
jg
rcl
and
push
stos
iret
cmp
mov
inc
pop
mov
push
inc
sbb
mov
repnz
dec
clc
mov
and
ret
shr
push
inc
in
pusha
repz
gs
xchg
pusha
fxch
aas
adc
int3
xchg
and
adc
sbb
sbbl
testl
sbb
ret
out
push
sti
or
aas
jmp
mov
mov
pop
push
and
xchg
xchg
or
xor
fistpl
es
std
xchg
adc
movsl
xchg
jae
ss
or
jae
pop
repz
or
pop
cmpsl
mov
mov
push
cltd
jne
addr16
jl
mov
dec
cmp
mov
xor
push
imul
stos
and
mov
mov
ja
ljmp
dec
jne
daa
sub
mov
pop
push
add
lods
and
je
adc
add
mov
loop
je
or
daa
dec
decb
xchg
in
xchg
cmp
cmp
jo
ja
jnp
aaa
jge
lds
ss
inc
mov
ja
fucomip
cwtl
ss
out
sbb
sbb
fistpl
mov
lea
movsb
test
clc
xor
dec
in
dec
dec
adcb
clc
mov
add
adc
jb
xchg
lods
push
sbbl
sbb
movsb
push
roll
xorb
repz
pop
xchg
xchg
mov
add
cmp
inc
enter
add
aaa
lcall
sbb
sub
push
repz
dec
lret
pop
cmpsl
mov
aas
inc
in
pushf
loop
and
rcl
jg
jns
push
lock
flds
jmp
mov
pop
outsb
stos
pop
idiv
inc
lock
adc
adc
ret
fldenv
ret
loope
cmp
mov
jnp
movsb
push
xor
leave
jl
and
adc
sub
out
or
add
mov
mov
lahf
addl
adc
or
xor
jbe
fwait
addl
mov
rcrl
cmc
sub
and
jno
xor
jp
mov
sbb
out
jle
popf
xchg
dec
and
xchg
cmpsl
inc
stos
fmuls
adc
mov
jns
jb
sbb
jb
or
ja
inc
inc
mov
out
adcl
or
add
jae
inc
enter
and
push
sti
ficompl
dec
push
fldl
cmp
xchg
push
pusha
iret
das
scas
xchg
jne
rclb
push
adcb
pop
insl
imul
in
cli
and
cmpsl
jle
and
dec
mov
xchg
je
or
cmp
push
xchg
and
ljmp
push
cmpb
pop
bound
into
mov
pop
xor
pop
adc
push
adc
mov
cmpsb
xchg
adc
insb
cmc
scas
shll
lods
push
jne
pop
adc
mov
es
ljmp
jecxz
gs
inc
lret
adc
aaa
jecxz
pop
xchg
mov
loope
sahf
add
dec
cmp
xchg
pop
inc
jb
pop
mov
add
fcompl
add
jp
dec
stc
mov
inc
aas
push
cmc
or
sbb
push
imull
scas
cmp
mov
adcl
add
and
sbb
cwtl
xor
ret
imul
aas
cmc
cmc
cld
sbb
cltd
int
lods
mov
lock
fstpl
push
jl
int3
sbb
and
pop
lock
loopne
pop
divb
mov
ret
adc
mov
sarl
xchg
inc
incb
mov
xacquire
aas
inc
call
cmc
enter
push
lahf
das
sti
pop
jle
jg
test
bound
mov
nop
and
cld
pop
incl
rcrl
fcomps
je
cmp
mov
push
cmp
mov
mov
cmpsl
rcll
popa
xchg
inc
pop
lcall
push
out
ret
out
jae
pop
cmc
jne
cs
dec
lock
clc
inc
sub
cld
xor
xor
roll
stc
cmp
sbb
xchg
in
pop
pushf
je
into
add
xchg
data16
addb
insl
addr16
ss
movsb
mov
imul
mov
mul
and
sub
cld
jmp
xor
imul
hlt
mov
and
movsb
add
nop
out
data16
sahf
test
push
test
mov
ret
cmc
movsb
fnsave
inc
and
icebp
scas
add
mov
stc
add
cmpsb
fimuls
inc
jnp
xor
adc
pop
prefetchnta
sbb
mov
into
call
cs
and
popf
and
stos
pop
rcll
pop
adc
ss
cld
jnp
or
mov
out
lods
into
and
mov
ds
pushf
inc
fistps
cmp
in
mov
dec
popf
ss
xchg
imul
push
insl
into
les
sub
sub
hlt
in
xor
jno
mov
movsb
repz
sbb
lods
insb
dec
dec
xor
in
push
dec
dec
add
mov
mov
adc
jcxz
xor
inc
repz
xchg
mov
test
lcall
sub
fistpl
into
les
add
pop
mov
push
jbe
sti
daa
jb
mov
fwait
movsb
outsl
imul
lock
test
in
in
cltd
sarb
incl
inc
pusha
cmp
and
mov
out
cld
imul
pop
inc
nop
push
xchg
gs
cs
push
xchg
cli
inc
das
aas
shrb
es
mov
ljmp
cmp
xor
dec
pop
imul
call
sub
mov
dec
ret
test
aad
cmp
cmp
push
mov
xchg
cld
or
jle
dec
movsl
popa
imul
int
and
je
xchg
pop
cld
xor
xchg
mov
aaa
ss
icebp
add
subl
adc
cmp
outsl
pop
das
dec
mov
outsb
out
xchg
xor
iret
jae
mov
mov
pop
fisubrl
jp
sbb
push
jo
sbb
int
jo
mov
stos
std
hlt
jne
add
test
mov
jmp
inc
test
jge
repz
pop
and
mov
xchg
mov
push
or
and
xchg
lea
test
stos
mov
push
cltd
mov
jae
adc
in
sbb
xchg
in
lret
arpl
mov
mov
inc
lds
lds
outsb
sbb
ja
xor
sub
insl
dec
lahf
movsl
pop
fwait
lahf
test
xchg
push
shufps
sbb
lcall
les
out
stc
mov
stc
push
ja
pusha
mov
mov
cmp
ud2
leave
lock
je
shr
jp
sub
inc
sti
or
clc
jl
shl
pushf
mov
icebp
fwait
mov
pop
cltd
cwtl
les
test
push
or
inc
fdivs
add
pop
notb
icebp
mov
push
les
call
pop
idiv
sub
out
xor
stc
and
test
sbbb
ss
test
fucomp
in
imul
sbb
loop
push
je
test
cmp
shll
cltd
incl
ljmp
mov
shrb
mov
jl
add
fs
cmpsl
adc
shl
sarb
lret
inc
jb
loop
inc
sub
les
adc
inc
pop
pop
repnz
outsl
inc
jbe
insb
scas
push
pop
sub
mov
cld
and
jb
out
sbb
jg
inc
xchg
loope
pusha
std
insb
sub
sahf
arpl
fsubs
jmp
mov
and
fnsave
test
xchg
sbb
jne
in
or
aam
repz
xor
test
popa
ljmp
fadd
movb
nop
sarl
cmp
movsb
shl
sub
pushf
fnstcw
leave
ds
jns
jns
dec
inc
push
les
stc
xchg
rorl
dec
adc
push
mov
dec
jle
rclb
in
lock
sub
inc
jno
push
sbbb
cmp
stos
mov
jl
sbb
mov
add
scas
loop
or
or
faddl
mov
xchg
xchg
cmp
test
lods
jle
sti
adc
pop
inc
scas
inc
call
sbb
xchg
cmp
leave
fstps
imul
dec
pushl
rcrl
lret
loop
pop
sarb
add
cs
cmp
outsb
movsl
lret
sahf
xchg
nop
pop
cli
lods
cli
jb
shlb
pop
jo
xchg
sub
cwtl
mov
repz
jo
pmullw
mov
enter
in
clc
stc
insb
out
jnp,pt
jo
and
jns
sbb
mov
iret
mov
push
sbb
and
and
bound
dec
maskmovq
testl
pop
dec
xor
mov
dec
or
rcrl
dec
daa
adc
mov
fstpt
pop
lods
cmp
inc
cmp
push
cmp
mov
inc
mov
xor
sti
cli
gs
das
leave
shlb
push
sbb
fdivl
ljmpw
fnsave
inc
in
cmp
push
jg
push
mov
aaa
mov
xlat
push
cmp
xchg
or
sarb
push
inc
int
pop
xchg
cli
adc
mov
jp
dec
adc
mov
cmpsb
dec
mov
stc
cwtl
js
mov
cmp
insb
push
mov
pop
jp
dec
movsl
inc
sti
cs
test
inc
sbb
icebp
and
rorl
mov
pop
ret
sbb
push
adc
or
iret
mov
call
ret
mov
and
or
sbb
xchg
out
shlb
mov
outsb
pusha
xchg
insl
push
push
int
inc
sub
and
lock
sub
fldenv
or
leave
das
scas
and
sar
andb
jae
adc
scas
mov
cmp
lods
jbe
hlt
xor
pop
sti
and
mov
ds
sbb
lcall
jbe
jge
cs
sub
adc
sub
cmpsb
out
dec
adc
adc
punpcklbw
xor
push
int
pop
lock
jmp
mov
sub
dec
in
mov
push
les
ficoml
jb
jg
cltd
lcall
and
xchg
hlt
fistpl
fidivs
lds
aam
jecxz
loope
lahf
dec
mov
data16
sub
pusha
repnz
sahf
or
xlat
jo
pop
or
pop
add
sahf
mov
jmp
test
jg
rcll
daa
lret
push
push
and
sbb
in
mov
lret
pop
jne
pusha
jecxz
fcomps
add
lods
daa
movsb
push
or
and
inc
xchg
out
sti
pop
jae
sub
jecxz
loopne
repz
dec
dec
pop
popf
dec
test
cmpsl
shl
cwtl
xchg
leave
or
aam
mov
sbb
push
sub
adc
add
stos
push
mov
aaa
or
shr
icebp
cmp
pusha
stc
fisubrs
mov
nop
mov
push
cmp
imul
jae
fcomip
sub
adcb
push
xchg
fcompl
fidivrs
lds
dec
adc
pop
add
or
adc
subb
leave
lods
inc
sub
lock
insb
cmc
insb
adc
and
jmp
mov
dec
sbb
test
scas
mov
inc
sbb
dec
into
fwait
out
sub
jecxz
pop
cli
cmp
sub
cmpsl
and
dec
call
pop
pop
push
and
mov
inc
ja
lcall
out
rorl
add
loope
lods
test
nop
xchg
cmp
and
iret
sub
sub
insl
enter
mov
mov
out
in
fbstp
and
xchg
jp
js
je
mov
xchg
mov
mov
dec
mov
sti
aam
test
and
shll
test
mov
inc
inc
sbb
sbb
enter
mov
aas
xor
cmp
stc
loopne
fldenv
xchg
or
jecxz
jo
adc
enter
ret
outsb
mov
push
aam
es
jns
or
xchg
stos
rcpps
es
pop
sbb
xchg
mov
push
dec
jmp
imul
sub
xchg
nop
aad
pushf
ds
mov
ljmp
add
rcrl
testl
enter
sub
hlt
inc
fdivl
and
sbb
ret
lret
mov
and
pop
push
dec
popa
push
lcall
xchg
adc
mov
test
inc
cwtl
inc
pop
mov
inc
cs
xchg
shrl
mov
repz
leave
movsl
xchg
das
pop
popl
or
call
push
pusha
and
fdivr
outsl
jp
jo
or
adc
sahf
push
jg
loop
push
addr16
xchg
adc
xchg
xchg
js
lahf
push
ffree
dec
mov
paddusw
jo
add
mov
adc
xchg
stos
iret
or
pop
adc
fdivs
fiadds
jae
mov
xor
sub
xchg
xlat
push
in
int
jg
cmp
cmp
pusha
mov
xchg
push
jo
out
adc
jge
aam
pop
mov
jp
repnz
loopne
lret
mov
mov
test
add
loope
je
aaa
inc
and
push
cmp
and
pop
sub
dec
sub
pop
es
test
xor
mov
andl
push
into
adc
push
imul
stc
push
std
int
sub
add
xchg
gs
and
adc
dec
and
xor
pop
mov
repnz
imul
sbb
jbe
inc
push
cmc
pop
push
ret
iret
ja
shll
lea
pop
push
jle
mov
sahf
jge
add
mov
out
dec
mov
push
cmpsl
aad
test
dec
dec
xchg
lea
adc
add
pop
pop
movsl
rcr
out
frstor
sbb
add
mov
adc
mov
cmp
dec
dec
and
jb
adc
mov
imul
mov
rcl
das
cmpsl
sbb
mov
fdivs
pop
insb
outsb
push
icebp
pop
addr16
insb
scas
sbbw
aam
clc
in
cli
mov
dec
sbb
arpl
push
bound
add
fwait
and
cs
sub
add
ja
jcxz
test
ror
push
scas
inc
push
pop
cmpsl
mov
mov
es
sbb
sbb
pop
imul
jl
sarl
bound
xchg
and
mull
aas
pushf
mov
ret
or
xchg
popf
fsubs
dec
ror
enter
ret
sub
pop
insl
mov
xchg
pop
push
scas
dec
fdivs
cli
in
and
xchg
add
mov
mov
fwait
stos
push
push
jmp
push
cmpsl
adc
leave
fadd
insb
pop
pushl
mov
mov
xor
loopne
mov
lahf
rcll
fwait
sarb
adc
negl
mov
push
arpl
sub
inc
sbb
cwtl
mov
inc
mov
loope
and
or
mov
jmp
push
pushf
mov
pop
add
shrb
dec
mov
cld
mov
jb
fucomi
mov
out
add
pop
jb
test
jno
or
add
mov
mov
into
pop
dec
ret
lret
ja
jl
ds
push
sub
lea
pmulhw
jnp
lahf
addr16
mov
loope
scas
jle
add
in
jg
rcll
or
cmp
cmp
mov
or
jnp
mov
adc
adcl
pop
mov
pop
ret
pop
xor
mov
rcrl
mov
scas
call
scas
mov
popl
mov
gs
dec
push
daa
inc
int
fimull
ret
push
ljmp
sub
cld
and
in
mov
lcall
rcrl
sub
in
fdiv
jmp
arpl
enter
dec
test
mov
aam
subl
add
subl
add
mov
std
pop
shl
mov
xchg
scas
in
nop
aam
ds
sbbb
in
dec
icebp
lock
mov
and
fsts
or
jge
mov
mov
mov
xor
and
mov
add
xchg
test
pop
adc
xchg
outsl
add
pop
jecxz
popa
in
inc
insl
push
sbb
cmc
lea
decb
test
es
xor
push
fisubrs
adc
adc
stos
mov
js
xchg
lahf
xor
sub
repnz
pop
and
inc
pop
xchg
scas
in
jo
mov
pop
hlt
mov
cli
scas
mov
pop
andb
jb
call
lcall
mov
test
lock
iret
bound
addr16
sub
loopne
jg
fs
shll
jmp
ffree
and
mov
mov
add
inc
adc
jae
mov
je
pop
sub
jle
xor
fbld
xchg
test
test
add
or
movsl
cmp
jecxz
pop
shl
daa
mov
fwait
xchg
sub
or
hlt
xchg
inc
pop
xor
ljmp
mov
je
push
das
ret
mov
mov
aas
pop
into
adc
orps
mov
cmp
popa
sbb
addr16
in
iret
lret
sbb
fwait
ss
mov
inc
inc
sbb
mov
push
cmp
enter
fcomi
pushf
adc
test
mov
mov
inc
addr16
mov
sahf
aas
push
cltd
in
inc
lcall
psrld
xor
popf
xchg
adc
push
sbb
repz
dec
ret
adc
outsb
int3
arpl
cmpsb
jle
int3
sbb
dec
jae
into
jne
test
adc
cmp
lret
push
fildll
sbb
cmp
shll
test
andl
daa
push
add
mov
shrb
loope,pn
mov
mov
xlat
stc
pushf
cmp
xor
xchg
sbb
mov
dec
popf
xor
sbbb
jae
xchg
adc
adc
fdivrl
dec
jae
push
push
adc
xchg
testl
jle
jmp
ret
pushf
mov
out
das
outsl
popf
idivl
mov
or
test
out
sahf
sarb
mov
jae
call
jle
jle,pn
xchg
sbb
jnp
aaa
adc
mov
movsl
push
cmp
sbb
inc
pusha
adc
inc
aaa
std
mov
pusha
fstps
mov
push
out
sarb
les
out
pushf
cwtl
lret
repnz
xchg
std
test
lahf
adc
xchg
sub
std
pop
push
adc
sbb
lret
push
gs
xor
out
lds
into
sbb
stos
icebp
pop
jo
pop
nop
sarb
jne
int
sub
or
popf
push
dec
and
sub
sar
popf
lods
mov
orb
cmp
fcmovbe
sub
imul
fdivrs
cwtl
mov
mov
aad
loopne
jno
repnz
lods
pop
ja
jl
cmp
xor
mov
dec
and
xor
inc
scas
adc
out
int
into
fxch
test
cmpsl
add
sti
xor
stos
ljmp
jno
lcall
fs
out
pop
loop
mov
pop
enter
lea
and
cli
add
aas
repz
insl
push
mov
cmp
inc
jns
pop
test
push
push
sbb
jne
mov
push
mov
xor
jg
xchg
jo
es
imul
dec
or
cmp
nop
mov
mov
fmull
repz
fnstsw
mov
sub
test
lret
enter
lahf
into
mov
sub
pushf
or
in
cmp
add
insl
add
sub
ja
cmp
pop
mov
popa
or
aaa
into
cmp
jmp
xchg
sub
and
xchg
ja
adc
inc
sub
pop
sbb
fstps
shrl
mov
and
xchg
cmp
xlat
les
jae
pop
xor
inc
xor
push
mov
sbb
enter
adc
adc
in
rcrl
mov
push
cltd
jg
loop
ds
pop
cmpsb
aaa
xchg
popa
lret
hlt
lods
pop
xor
in
arpl
xchg
and
add
loope
sti
sti
sbb
dec
jae
rclb
push
loop
repnz
add
lret
adc
fdivrs
push
je
leave
add
sub
pop
mov
adc
stc
xchg
add
not
and
call
xchg
mov
cld
push
and
mov
loopne
push
mov
in
dec
insl
pop
dec
adc
dec
mov
and
repz
lds
jecxz
mov
sahf
nop
loop
dec
mov
aam
mov
jns
push
cmp
mov
popa
jle
sbb
dec
pusha
cmp
outsb
sub
inc
negb
lods
mov
push
sti
ljmp
jne
xor
xchg
push
cmpsl
inc
push
sbb
jns
cmpl
mov
ljmp
jg
jnp
mov
fs
add
cmpsb
mov
push
loope
stos
sarb
insb
pop
ficompl
leave
add
leave
popa
xor
test
cmpsl
mov
pop
bound
pop
xor
push
das
xchg
data16
xchg
cmp
stc
mov
lods
inc
pop
mov
pop
in
std
or
cmp
fwait
lods
mov
jmp
testl
mov
adc
xchg
out
test
mov
sbb
bound
inc
pop
lods
xor
test
push
push
add
adc
not
int3
inc
jbe,pt
imul
mov
mull
adc
pop
inc
xor
and
push
stos
ss
xor
dec
cmp
or
cmpsl
in
cmp
clc
xor
movsb
sbb
loopne
mov
inc
stos
mov
adc
adc
or
xor
aam
pop
sub
xchg
cltd
adc
pop
fwait
and
or
jp
adc
dec
idiv
jle
popf
out
ret
push
or
push
cmp
lcall
jmp
fs
das
es
adc
xor
jle
pop
out
mov
scas
scas
cs
jp
xchg
xlat
mov
adcl
test
cmp
stos
mov
jo
inc
jle
sbb
movsl
jge
int3
data16
int3
xlat
movsl
adc
or
inc
mov
movsb
add
mulb
sub
jns
icebp
sub
inc
movsl
lret
mov
cltd
dec
inc
aas
sbb
outsl
out
adc
dec
ret
rclb
jp
inc
lods
jo
pop
push
sub
fcompl
dec
fildll
adc
clc
or
lcall
aad
out
mov
cwtl
pop
flds
push
mov
test
popa
and
clc
rcrb
aam
mov
xchg
add
aam
mov
ljmp
sub
and
daa
pop
in
xor
int
add
sarl
mov
xor
dec
xorb
imul
cmp
sti
test
dec
sub
fdivrl
lahf
jae
pushf
hlt
mov
mov
inc
add
mov
jbe
iret
pop
rcrl
push
pusha
test
das
fildll
ret
inc
popf
sub
xchg
in
int3
cmp
scas
hlt
xor
mov
xor
sbb
add
dec
mov
sub
in
pop
dec
into
loopne
xchg
xchg
mov
jbe
push
gs
aas
cmp
icebp
lret
mov
movl
push
pop
mov
ljmp
lret
add
jmp
jl
sahf
push
ljmp
pcmpgtw
sbb
xchg
add
sarl
in
pop
dec
jb
xor
inc
jo
and
sahf
fbstp
test
popf
pop
mov
js
pop
pop
ja
and
hlt
jl
pop
filds
and
outsb
pushf
rorl
xor
stos
add
rcrl
jmp
fstl
ss
or
mov
int
fbstp
inc
imul
mov
mov
int3
pop
insb
jle
rcl
mov
pop
and
jp
push
push
dec
das
aam
call
insl
lret
sub
sti
push
sub
enter
in
ret
mov
pop
xor
push
lahf
jecxz
daa
and
movsb
test
mov
mov
jno
xchg
adc
clc
xor
inc
enter
ret
mov
cli
in
mov
data16
xchg
add
je
test
jl
les
or
lock
insb
scas
push
xor
mov
and
pop
xchg
das
add
sbb
mov
test
sub
fsts
rcr
out
mov
je
aaa
xchg
lea
into
rol
and
mov
add
in
rcr
jl
movsb
push
sbb
jl
aad
cmp
mov
mov
enter
jl
mov
mov
movsb
lret
dec
mov
or
outsw
sub
add
pop
test
outsb
add
sbb
inc
jg
rcll
xor
dec
inc
mov
mov
out
scas
jmp
mov
sub
sbb
pop
out
aas
lods
fstpl
push
sub
jbe
fsubs
sbb
adc
sbb
or
add
adc
scas
inc
fwait
jmp
adc
cmpsl
mov
pusha
fs
xor
std
out
sub
repz
ss
into
testl
push
je
ror
sbb
scas
xchg
out
loopne
push
adc
cli
push
filds
mov
dec
or
mov
xor
or
push
mov
xchg
sahf
in
pop
ret
sbb
push
aam
dec
leave
cli
lea
ja
xor
js
pusha
loopne
fwait
loope
mov
leave
jno
pop
mov
inc
clc
int3
pop
pop
mov
lds
daa
dec
cmp
in
pop
inc
sbb
cmp
jo
sbb
jns
fcomps
aad
pop
adc
add
sub
lods
pop
fmuls
xor
cmp
dec
test
and
or
pushf
cmp
push
test
cmp
es
int
sbb
xor
gs
scas
jb
jns
add
jp
scas
and
std
icebp
jae
inc
xchg
lods
adc
mov
insl
and
icebp
shll
out
mov
aam
fs
mov
repz
push
add
movsl
dec
jmp
xor
hlt
or
into
daa
outsb
ret
or
cmp
inc
adcl
xchg
pop
stos
in
cmp
push
lahf
lds
ds
xlat
and
cltd
xchg
pop
nop
js
push
cmp
push
sbb
fcomip
test
push
pop
inc
mov
stc
mov
sbb
add
clc
pop
ret
push
test
cmpsl
jnp
addr16
jo
jo
xor
mov
lods
arpl
xor
inc
rcl
jg
test
ljmp
xchg
xchg
mov
and
loop
popf
push
in
pop
popa
jne
mov
jns
pop
shlb
mov
xchg
xchg
outsb
mov
test
sbb
mov
popf
mov
xor
jle
cli
sbb
lds
pop
ret
mov
lret
push
inc
fisttps
add
test
xchg
mov
dec
sti
inc
dec
adc
sarl
mov
sahf
or
fistpl
dec
or
pop
cltd
test
cmpsl
mov
sbb
xor
xor
dec
cmc
push
jbe
insb
test
jb
sbbb
mov
fs
movsb
push
xor
pop
jecxz
aam
pusha
lds
adc
xor
xor
out
cs
xor
aam
inc
mov
lahf
push
rcr
loop
inc
sub
mov
jge
mov
jns
adc
mov
jbe
push
add
sub
mov
or
shrl
aad
insb
jae
cwtl
ror
adc
cmpsl
lret
and
pop
and
mov
sbb
push
stos
cld
aad
hlt
out
out
adc
xor
push
adcb
pushf
adc
cmp
sbb
inc
add
addb
mov
js
adc
mov
pushf
pusha
cmp
or
adc
sarb
adc
cmp
std
or
ljmp
push
mov
jnp
movsb
push
cmc
inc
ret
cmp
sub
outsl
xchg
mov
adc
sub
fcmovnbe
add
stc
clc
cmp
shrb
cmpb
sub
bound
dec
orb
ss
movsb
aam
mov
ret
imul
jecxz
pop
cmp
ljmp
add
and
idiv
js
int3
inc
icebp
pop
imul
adc
lahf
ds
test
jb
mov
lahf
arpl
cmp
dec
mov
jle
ss
or
lods
mov
pop
mov
aaa
pop
jb
push
adc
imul
cltd
xor
mov
pushf
inc
pushf
push
xor
xchg
or
cs
jmp
jmp
xchg
add
mov
inc
in
add
and
sarl
sbb
inc
dec
les
xor
cld
sti
cli
cmpl
rcr
mov
shr
mov
sbb
lods
fnstenv
dec
jbe
sub
push
mov
dec
push
cli
hlt
and
leave
in
xchg
push
xor
test
inc
pop
repnz
mov
call
loopne
out
test
out
cs
inc
jl
xchg
fstpl
repz
scas
xor
pop
push
sub
xor
cwtl
mov
orl
bound
dec
dec
inc
pop
cmp
cmpl
pop
mov
adc
push
repnz
cmp
mov
push
pop
cmpl
jns
sbb
dec
rcrb
jne
loope
in
outsl
frstor
xchg
fwait
pop
mov
out
pop
outsb
sub
das
cmp
mov
jge
sbb
xchg
mov
fs
movsb
or
mov
lods
aaa
adc
bswap
mov
xchg
sti
addb
add
dec
popl
adc
loope
arpl
ficomps
xor
scas
lds
mov
bound
leave
stos
int3
cmp
pop
movsb
mov
sbb
in
mov
call
sbb
jge
fsts
stos
push
adc
cmp
push
iret
fwait
push
jmp
movsl
inc
cmpsb
mov
movsb
loopne
mov
inc
daa
and
mov
and
or
inc
das
mov
notl
jecxz
roll
adc
sbb
bound
ljmp
jb
in
ljmp
fisttpl
loopne
xor
push
mov
or
pop
sbb
sbb
mov
xchg
fwait
repz
stos
lahf
rcll
xchg
in
data16
aas
jb
jbe
jbe
cmpsb
and
pushf
test
jbe
lahf
stos
sbb
shlb
ja
sub
fwait
mov
test
jb
and
in
cmp
add
test
or
pushf
fwait
and
xor
cmpsl
sub
pop
push
jp
jl
out
roll
dec
xchg
pop
lods
fistps
jp
sbb
inc
jne
or
add
daa
xchg
ret
insl
adc
or
bound
xor
push
xor
push
inc
cmp
cmp
and
push
xchg
cmc
sub
push
push
inc
jbe
xor
xor
lsl
ret
sub
clc
mov
sbb
mov
dec
mov
xchg
pop
mov
pop
jp
cmp
jle
sub
adc
jo
into
xor
pop
pusha
scas
sub
fdiv
leave
orl
mov
nop
pop
and
sbb
sbb
shrb
xchg
sbb
mov
xchg
push
add
cmpsb
imul
push
imul
inc
cmp
mov
lock
mov
int
jo
mov
mov
ret
ljmp
faddl
lods
dec
aaa
jno
sbb
xchg
cli
inc
push
sub
push
movsl
lcall
dec
adc
xor
mov
outsl
iret
arpl
rolb
pop
dec
mov
cld
add
mov
cmc
xchg
aas
dec
inc
mov
cmp
lcall
pop
scas
adc
cmpl
call
jp
ja
stos
and
mov
clc
stos
mov
xchg
cmpsb
adc
adc
enter
jae
jno
icebp
lods
shlb
xor
lds
sub
in
orb
jl
jmp
mov
vrsqrt28ps
in
xchg
xchg
out
and
or
jp,pt
in
push
ljmp
in
mov
inc
add
add
or
arpl
mov
pop
add
dec
lea
aad
mov
out
pop
inc
mov
inc
enter
cmp
jne
mov
sub
stos
adc
push
rcll
adc
xchg
jp
nop
jge
std
push
push
hlt
lods
into
jg
dec
mov
sbb
bound
addr16
ret
lock
add
push
aad
mov
out
add
insb
adc
xchg
sub
xchg
clc
pop
pop
cltd
adc
scas
fwait
pop
movsl
les
outsb
jo
cltd
or
or
jge
dec
movsb
fs
push
xchg
scas
sbb
mov
mov
add
aad
fdivl
sbb
cmp
jno
mov
push
adc
mov
cld
push
shlb
push
roll
sub
femms
icebp
inc
adc
xchg
sub
shlb
scas
jle
dec
cmpb
bound
xor
cmp
shrb
ljmp
popf
jnp
adc
fimull
ret
sub
mov
mov
stos
cld
mov
scas
add
nop
insl
mov
xchg
mov
imul
rcrb
outsb
push
stos
jno
mov
loop
cld
xor
cmpsb
push
inc
imul
adc
in
jns
in
lds
aad
movsb
ljmp
repz
mov
lods
jno
dec
and
or
jmp
lcall
xchg
aaa
leave
shrb
rcl
fucomip
sbb
outsl
dec
das
sarl
pop
mov
dec
jmp
ret
adc
fisttpll
icebp
jge
add
mov
hlt
mov
adc
nop
mov
or
cmp
pop
jbe
xchg
enter
adc
stos
bound
movsl
push
xor
repnz
fcompl
js
mov
out
and
inc
lods
sti
jo
loop
pop
pop
cmp
mov
sub
xchg
jge
lods
loopne
rcll
cmp
and
inc
je
push
ja
jno
adc
ljmp
rep
cmpl
inc
int3
mov
or
scas
lods
paddq
cld
mov
in
cmp
lods
mov
stos
nop
mov
mov
xchg
lret
lods
or
out
mov
mov
push
cmp
push
fildll
add
xor
pop
cs
sbb
dec
or
data16
push
jle
insl
popa
inc
adc
sahf
rorl
xor
add
mov
xor
push
jecxz
or
mov
insb
xchg
int3
pop
fimuls
decl
sbbb
sbb
mov
add
or
outsl
inc
inc
dec
dec
std
rol
push
jns
test
jo
inc
adcb
arpl
pop
pop
mov
push
out
adc
insb
sbb
inc
fldt
int
imul
pop
push
or
clc
push
jae
sbbb
xchg
pusha
repz
movsb
arpl
push
jmp
int3
cmp
sub
shl
sbb
sbb
call
cmp
lods
je
cs
push
sahf
pop
out
pop
xchg
push
or
cmpsb
loopne
mov
icebp
mov
add
pop
and
push
jmp
into
cmp
mov
imul
inc
test
dec
fidivl
push
in
lret
test
pusha
jne
jle
fmull
dec
data16
fwait
xchg
shl
mov
cli
cwtl
inc
sti
aas
scas
fstps
mov
cld
pop
stc
xchg
and
aad
push
insl
dec
mov
inc
mov
and
popf
xchg
in
mov
cmp
lret
fs
ret
push
int
cmp
jno
push
pop
aas
adc
cmp
push
push
out
out
mov
adc
pop
stos
lock
aaa
ja
adc
hlt
add
rorl
mov
stos
arpl
popa
sbb
jmp
call
lea
and
xor
dec
aaa
dec
aaa
mov
lahf
mov
add
push
add
movsb
dec
aaa
pop
cmp
and
outsl
cmp
imul
les
sbb
mov
adc
fidivs
imul
sub
movsl
inc
push
push
in
mov
cmp
and
inc
jmp
stos
mov
test
sub
bound
add
xchg
xchg
test
loop
out
xchg
add
mov
xor
pop
repz
mov
fdivrs
out
imul
and
mov
cli
aaa
add
add
int3
fildll
lods
jne
push
test
mov
sub
xchg
addl
xor
daa
lock
daa
addr16
popf
or
ret
dec
cmp
fsubrl
push
pop
rorl
and
mov
mov
in
std
sub
sub
aaa
cmp
push
mov
insl
push
popa
dec
mov
sahf
push
lret
adc
stos
and
xlat
repz
test
adc
stc
pop
mov
xchg
jl
sub
aad
popf
out
aaa
xchg
cmp
cmpl
arpl
pop
into
cmp
jp
adc
inc
and
repnz
hlt
mov
push
cld
cltd
orl
pop
pusha
pop
sbb
sbb
clc
jmp
rcrl
inc
mov
pop
push
lcall
pusha
mov
loop
scas
sub
xchg
push
pusha
mov
jg
and
jge
cmpsb
out
mov
loope
les
outsb
jge
lret
xchg
fs
pop
lret
sub
sub
mov
mov
xor
adc
sub
sbb
sub
ficompl
mov
scas
ror
inc
aad
inc
adcb
pushl
jmp
es
sub
lcall
loop
mov
pop
mov
add
xor
idiv
push
loopne
and
fiaddl
mov
push
lods
or
jp
dec
daa
int3
imul
lea
lcall
jbe
dec
cmc
lahf
xor
gs
adc
pusha
test
sti
in
mov
add
scas
cmp
imul
and
scas
test
mov
cmp
push
mov
add
add
cmp
outsb
jecxz
inc
jge
into
out
enter
add
addb
fwait
or
xchg
cmp
and
adc
shlb
cmpsb
push
ret
mov
imul
lds
fdivrp
and
sbb
mov
inc
js
dec
jo
dec
pop
sub
lret
xchg
mov
repz
push
cltd
popa
pop
enter
adc
jecxz
aaa
inc
insb
fildl
or
jbe
ficompl
loopne
stc
pop
pop
loope
lock
adc
xchg
xchg
pop
push
test
pop
cmpsb
aas
cmp
mov
daa
xor
jge
andb
insl
ja
imul
sbb
les
xchg
aad
sbb
mov
xor
test
jno
jmp
mulb
or
sbb
inc
mov
mov
push
cmp
gs
divb
jnp
aam
cmpsl
ljmp
ds
test
aaa
dec
aad
aam
ljmp
fs
xchg
cwtl
mov
seta
mov
or
lods
and
inc
repz
mov
cltd
sub
sbb
std
lahf
jne
cwtl
cwtl
jl
adc
movb
in
cltd
int3
add
and
leave
or
xlat
aam
add
and
fadds
rorb
ja
dec
cmp
call
fldl
sbb
rcrb
or
ficoms
lcall
push
pop
push
sbb
inc
add
push
xchg
pushf
pusha
xchg
out
out
sub
jbe
cs
sub
test
mov
jo
mov
jmp
adc
cmp
iret
dec
push
cmp
lods
dec
push
shrl
push
cmpsb
cmp
loope
into
push
inc
lahf
mov
int
hlt
lahf
test
push
test
imul
loop
push
test
das
daa
jp
mov
cld
add
inc
cmc
dec
jb
jp
push
outsl
adc
lahf
ret
dec
jle
adc
lds
gs
mov
jl
push
or
mov
mov
subl
or
movsb
pop
xor
rorl
pop
push
mov
inc
lock
cmp
andl
call
pop
mov
dec
jbe
pop
int3
pop
add
pop
xchg
shrl
dec
or
jle
push
scas
push
pop
inc
movsb
test
push
cmpsl
jae
movsb
jg
je
fnstsw
iret
movsb
jbe
pop
shlb
mov
lret
xor
jp
fcmove
rcr
cs
mov
xor
and
test
and
sbb
stc
pop
idivl
aaa
jae
cwtl
ret
int3
dec
cs
add
mov
push
push
pop
xor
test
mov
test
ffreep
cmp
stos
ret
loopne
out
inc
repnz
mov
and
inc
jp
mov
pushf
jnp
push
jae
jl
jbe
lock
sbb
lcall
xchg
jg
dec
test
push
sub
inc
repnz
add
xor
fs
lret
ljmp
pop
push
sbb
lcall
jl
fs
mov
mov
adc
leave
push
pop
pop
mov
adc
push
dec
filds
sub
scas
cmpb
jae
sub
das
xrelease
addr16
icebp
lock
loop
jb
and
xor
stos
stc
or
xor
xor
ljmp
xchg
ss
adc
std
out
decb
jno
rorb
adc
and
mov
jmp
lcall
jb
ds
cltd
pop
mov
sbb
lock
scas
es
and
test
fldl
jns
adc
jmp
xchg
sub
movsb
cmp
push
cs
push
incb
repnz
into
ljmp
jnp
pushl
int3
xor
sti
decb
outsl
adc
push
cmp
ret
pop
adc
and
jne
xor
dec
push
sbb
or
adcl
push
xchg
js
addl
fwait
das
and
cmc
jo
adc
ss
cld
fwait
lds
enter
sub
pop
xor
sub
sbb
jecxz
imul
rclb
mov
mov
add
xor
pop
je
out
repnz
jno
add
dec
jmp
lods
shr
dec
mov
ds
cmp
add
out
mov
inc
sub
js
xchg
das
or
sbb
inc
sbb
mov
adc
cmp
std
subb
out
rorb
adc
push
cmc
push
arpl
aas
inc
jne
xchg
dec
mov
cmpsl
popa
les
mov
ror
mov
cmp
dec
stos
jmp
in
leave
dec
ljmp
push
adc
xchg
sbb
insb
aaa
cmp
jle
inc
sarl
fsubr
pop
out
test
cmpsb
aaa
push
cmpsb
dec
dec
callw
lea
shrl
sub
cwtl
push
pop
mov
test
xchg
jns
out
or
xlat
add
movsb
sub
mov
mov
dec
call
sub
jmp
add
cmpb
adc
movsb
mov
xchg
inc
adc
or
ret
sub
mov
cmp
sahf
mov
in
or
or
in
push
jge
pop
xor
aam
or
daa
jmp
mov
push
aaa
cmp
adc
rcrl
mov
cs
out
dec
out
sbb
popf
dec
sub
sub
jbe
push
fisubrl
in
sbb
or
push
xlat
ror
or
into
scas
push
out
jno
pop
jp
mov
or
ret
pop
sahf
mov
cmp
jno
pop
popa
inc
or
sti
cmp
lods
xchg
mov
setp
and
aam
and
ljmp
inc
add
gs
mov
mov
xlat
dec
and
nop
push
fs
addr16
and
mov
cmp
inc
rclb
sti
shll
mov
aad
mov
jle,pt
dec
add
jecxz
push
imulb
pop
mov
call
inc
or
fnstsw
dec
xor
inc
in
rcrb
test
decl
loope
mov
pop
leave
add
and
mov
xchg
push
movb
pushf
adc
dec
lock
cmp
je
cmp
xor
push
jbe
mov
test
adc
fs
loope
div
mov
mov
into
fcmovnbe
out
sub
or
mov
cmp
mov
mov
mov
outsb
in
movsb
pop
push
das
jo
mov
jp,pn
mov
scas
sahf
pop
test
pop
push
negb
xchg
xor
lcall
jnp
adc
jno
shrl
clc
fbstp
repnz
jb
enter
xor
test
lret
cmp
push
push
xor
cmp
cmp
jg
lret
into
pop
in
das
push
ss
stc
lds
mov
dec
add
ja
jae
std
movsb
jne
pop
pushf
adc
dec
testb
dec
jo
xor
addl
out
dec
ss
or
push
cmc
jnp
into
cmp
and
insb
fisubrl
ficoms
sub
ds
xchg
add
mov
jcxz
flds
arpl
into
and
fnsave
daa
jp
daa
shrb
in
stos
adc
je
stos
and
in
fstl
daa
adc
pop
out
sub
inc
pop
xchg
pop
stos
xor
mov
out
jle
shl
jns
ds
jne
test
cmp
xchg
mov
lods
push
push
out
lods
gs
mov
popa
hlt
sub
sub
testb
mov
and
pop
push
sub
lods
push
jnp
fidivl
stos
outsb
and
xchg
pop
xchg
pusha
dec
cwtl
mov
nop
les
xchg
ss
dec
mov
rcrl
sti
scas
sub
idivl
jnp
inc
dec
and
pop
ficoml
xor
mov
push
mov
movsb
jne
mov
fistps
cs
xor
xchg
outsl
lock
cld
in
mov
jnp
push
xchg
call
cmpl
sbb
insb
xor
push
ja
add
inc
jns
lcall
and
push
mov
lea
je
mov
inc
mov
mov
in
std
repnz
lea
mov
push
sahf
push
mov
push
dec
sbb
call
sbb
push
inc
jne
test
push
adc
and
mov
cs
je
jg
clc
mov
or
out
mov
cld
xchg
inc
test
adcb
sub
and
loopne
les
aad
push
pop
xor
mov
loopne
pop
push
dec
jbe
daa
cmpl
push
dec
pop
shlb
pop
cmpsl
mov
push
mov
push
push
ds
add
lds
shlb
and
cld
or
test
xchg
cli
mov
push
in
and
xchg
shl
and
fnstsw
sbb
loop
mov
fidivs
add
mov
jmp
pop
jge
and
xor
add
and
jnp
jno
ljmp
sti
fmul
push
icebp
dec
cs
popa
adc
fistps
roll
popa
push
bound
or
xchg
call
sbb
pusha
mov
cwtl
jno
mov
and
lret
sti
daa
shrb
es
xchg
jns
loop
mov
imul
fbld
fwait
inc
mov
ret
pop
xchg
and
add
cmpsb
imul
cli
xor
mov
les
cmp
lds
movsb
mov
adc
jns
test
cmpsl
jmp
sti
mov
fsts
jmp
out
sbb
test
mov
xchg
or
insl
cmp
cmp
cwtl
xchg
ds
adc
in
addb
xlat
ficoml
imul
call
jecxz
daa
pop
shll
cld
jmp
and
inc
jne
daa
int3
std
pop
push
dec
rcll
je
mov
aaa
daa
je
xor
xor
mov
mov
fadd
clc
and
or
testl
cli
inc
push
dec
clc
stos
cmc
js
arpl
xor
popa
inc
or
movsb
dec
mov
test
mov
mov
bound
js
stos
xchg
mov
ds
icebp
lahf
sarl
dec
ss
lods
outsb
jne
int3
es
push
leave
or
cs
dec
xchg
jns
cwtl
dec
dec
mov
mov
bound
mov
int3
inc
cs
lret
pushf
xor
fcmove
dec
xor
lcall
lods
ss
mov
std
sub
jo
mov
xor
out
imulb
fwait
out
scas
notb
xor
mov
test
xchg
inc
sahf
mov
test
push
rolb
cmp
je
das
sub
mov
jg
pop
mov
sub
jno
adc
daa
dec
ss
xor
push
rorb
repz
loope
or
subl
sub
subb
mov
insb
push
xor
leave
xor
cmp
in
pop
add
jbe
es
add
jmp
add
add
stc
std
adc
sub
je
sub
pop
outsb
lret
nop
sbb
stos
ja
push
stc
andb
lock
popa
cmp
and
inc
sbb
pop
test
divl
xor
rol
out
std
js
stos
cli
arpl
sub
sbb
cmp
mov
or
cmp
scas
and
ljmp
gs
aaa
mov
pop
mov
jecxz
aas
cmp
pop
jl
das
outsl
pop
sub
fisubrs
int
repz
pushf
test
mov
push
sbbb
sbb
mov
adc
adcb
movsl
dec
imul
jge
fiaddl
dec
mov
aad
int3
xor
ficomps
fisttps
dec
jge
ja
ss
aaa
clc
pop
scas
std
pop
inc
cmpsl
addl
mov
fidivrl
push
xchg
out
dec
sbb
loop
jl
aaa
push
out
jp
rcll
xor
xor
cmp
pushf
jb
and
mov
push
mov
jb
sbb
daa
inc
cmp
dec
sbb
aam
adc
add
mov
pop
and
mov
iret
repz
mov
mov
mov
mov
je
xlat
sub
inc
xadd
std
dec
fidivrs
pop
dec
adc
sti
cmp
dec
add
test
lock
ja
popl
pop
ret
push
mov
lcall
test
push
mov
js
scas
mov
mov
mov
xor
mov
imul
scas
bound
jo
pause
or
push
inc
lea
jo
push
pop
sahf
jbe
out
inc
repz
stc
pop
mov
mov
cmc
adc
int
add
cmp
sbb
ja
xor
adc
aas
dec
cmpsl
loopne
dec
lods
cld
sbb
mov
xor
enter
fs
jmp
loope
pop
ficoml
adc
popf
cld
inc
mov
outsb
fsubr
shlb
mov
cli
dec
sub
lcall
pop
or
xchg
jo
cmp
add
dec
xor
xor
cmp
scas
test
popa
insl
adc
add
pushf
jo
int3
sub
sbb
and
sub
lret
hlt
inc
push
cmp
ret
js
addr16
movsl
arpl
das
push
dec
push
sbb
test
int
jno
xorl
pop
cmp
gs
inc
mov
cmpl
cld
adc
jmp
adc
outsb
pop
xlat
adc
jno
mov
lcall
push
or
lock
push
decl
pop
int3
jae
outsb
pop
pop
out
ret
sub
fdivp
add
dec
mov
sub
cmp
xor
mov
dec
test
stc
push
ret
pushf
dec
pop
shl
fnstcw
inc
and
or
jns
jns
jnp
inc
fdivr
lret
lds
iret
sub
mov
mov
ffree
std
mov
jae
mov
push
push
cmp
shll
mov
ljmp
aad
add
jg
mov
jne
test
push
jb
dec
xor
mov
or
sbb
shrb
nop
mov
test
pop
push
pushl
andb
fs
pop
popa
xchg
stos
mov
sub
xchg
sarl
sub
or
sub
jmp
xor
xor
daa
loop
xor
and
shr
dec
call
movsl
addb
jge
aad
mov
xchg
jmp
and
jecxz
aaa
dec
daa
xadd
cmp
jecxz
jnp
pusha
nop
xchg
clc
or
or
cli
stos
ljmp
inc
ds
inc
mov
dec
and
pop
xor
outsb
pusha
sub
xchg
shll
inc
je
and
cs
test
sbb
aam
pop
inc
pop
fisttpl
fnstenv
jo
lock
pop
into
inc
idivb
mov
and
gs
fsubrs
lahf
mov
sbb
and
inc
jmp
ljmp
dec
outsb
mov
je
xor
iret
push
pop
fiadds
test
xor
add
lret
dec
cmp
pusha
xor
pusha
repz
repz
gs
outsb
jl
aaa
adc
sub
xlat
dec
ljmp
das
mov
sub
and
pop
aaa
rolb
std
cmp
clc
test
cmp
push
fisubrl
lock
xor
insl
pop
scas
loop
in
dec
push
sbb
mov
adc
out
mov
cmc
cld
xrelease
fdivrl
cmp
cmp
ret
and
inc
shll
std
xor
pop
xchg
fldcw
out
out
in
orb
push
sub
lret
bound
mov
cmpsl
imul
iret
repz
jge
add
inc
inc
cltd
jmp
bound
repz
pushf
sbb
mov
jns
filds
pop
pushf
movl
jmp
lods
popf
andb
icebp
jo
jmp
xor
int3
dec
les
lret
and
mov
sub
icebp
adc
aaa
mov
mov
mov
clc
cmp
or
mov
adc
adc
jbe
ja
adc
movsb
nop
test
je
cmp
sahf
add
dec
mov
idivl
punpckldq
imulb
fwait
dec
flds
jae
idivl
xor
stos
sbb
lds
xor
inc
test
inc
incb
testb
dec
aaa
cmpsl
hlt
aaa
mov
adc
nop
into
fs
loope
rolb
sbb
sub
aaa
pop
out
mov
push
cmpsl
pop
mov
push
mov
std
aas
dec
in
stc
rcll
xor
lcall
dec
subb
stc
fdivl
push
pushf
insb
movsl
bound
push
xlat
lea
or
inc
je
sub
lret
add
sbb
int3
or
scas
loopne
gs
push
inc
mov
push
lahf
dec
lods
addr16
cld
inc
push
mov
int
movsl
imul
cmpsl
mov
fs
dec
or
inc
or
xor
adc
insl
and
xor
cmpb
jle
mov
loop
mov
mov
movsb
sahf
rcrb
sub
in
jle
pop
daa
sbb
sbb
dec
ret
in
pop
and
add
add
movsl
fsubrl
sar
inc
dec
jae
ds
pop
aaa
mov
loope
addr16
sti
inc
andl
cmp
cltd
pushf
int
xor
mov
xor
mov
cmp
jg
push
sbb
mov
xor
and
mov
pop
pcmpgtb
cmp
subl
cmp
lock
scas
cmc
sub
fcoms
jge
mov
xchg
test
mov
xor
cmp
jne
xor
outsl
adc
fwait
mov
jno
aad
je
rol
lea
push
enter
sahf
mov
add
pop
push
sti
enter
push
mov
int3
imul
sbb
sub
sti
inc
into
mov
rorl
xchg
xorb
mov
jg
fwait
pop
aam
fcmovb
sbb
popl
or
mov
mov
mov
cmpb
mov
jle
in
fwait
cwtl
fcmove
popf
mov
adc
ret
popa
xor
sahf
mov
dec
arpl
call
sbb
jno
je
mov
imul
push
inc
sub
push
ja
cmpsl
cltd
add
xlat
sahf
daa
mov
adc
adc
inc
addr16
add
cmc
stos
test
lahf
out
inc
xchg
outsb
test
fmull
adc
outsl
mov
enter
push
jmp
shlb
jae
stos
mov
push
pop
ja
pop
pop
aad
sbb
cmp
rol
addb
mov
arpl
and
adc
inc
pop
xchg
mov
cli
push
stos
lret
sbb
stc
xchg
popw
pop
out
push
addl
sub
ret
andb
sbb
cmpsl
jecxz
lret
icebp
enter
xor
mov
jg
in
icebp
bsf
test
mov
or
hlt
push
movsl
jae
ds
and
push
jns
std
in
push
rcl
xor
mov
cmp
arpl
cbtw
mov
add
jl
and
insl
leave
repz
cli
nop
sub
mov
xor
or
stos
mov
test
in
pop
test
clc
mov
dec
lock
jae
inc
mov
rcrl
pop
bswap
lret
cmc
and
add
xchg
push
sub
xor
fmull
xor
cs
add
fld
or
push
hlt
cltd
pop
mov
setnp
xchg
lods
aam
push
jns
jecxz
stos
xchg
mov
addr16
pop
test
test
lea
push
ss
das
lcall
ds
inc
push
cld
arpl
inc
dec
adc
inc
mov
rcrl
fistps
js
aaa
adc
mov
scas
mov
or
ret
cmpsl
or
or
inc
arpl
inc
fmulp
decl
roll
shlb
hlt
xchg
lahf
cmp
in
inc
mov
fsubrl
mov
cmp
aam
rorb
int
sbb
jae
inc
imul
xor
pmullw
lret
cmpsb
cwtl
stc
lods
fmul
stos
cmc
dec
mov
pop
arpl
dec
sub
int
fimuls
push
out
lods
mov
pop
xchg
leave
or
mov
jp
clc
push
or
push
sbb
dec
gs
mov
xor
in
fwait
xor
lods
xchg
repnz
pop
cmp
mov
and
sbb
pop
xlat
mov
mov
pop
idivb
addb
cmp
rolb
and
xchg
mov
mov
mov
cmpsl
push
jecxz
xchg
cmp
pop
jl
or
jne
or
mov
xor
out
adc
jne
icebp
or
insb
leave
cmpl
adc
aam
mov
cli
data16
jg
gs
xchg
stos
int3
push
mov
or
sbb
push
jl
push
lods
xchg
stos
popf
ret
sahf
mov
test
leave
mov
out
pop
and
or
add
sbb
cmp
inc
mov
jp
xor
add
or
xchg
lahf
sub
lahf
test
mov
divb
and
mov
in
in
mov
lret
enter
pop
xchg
and
dec
add
hlt
jmp
xchg
mov
dec
lahf
aas
push
or
jge
adc
add
push
inc
and
fisttpll
repnz
push
add
sub
pop
inc
mov
fisubrl
js
imul
lret
pop
mov
mov
inc
lods
lret
das
pop
cltd
jp
fisttpl
cmp
out
push
cwtl
push
idivl
mov
movsb
push
hlt
jmp
cld
int3
scas
dec
push
cmp
cmp
pusha
inc
hlt
add
cwtl
lock
and
xchg
push
inc
jnp
jae
nop
push
push
into
cld
movsb
cmp
std
inc
int3
mov
jmp
jns
push
mov
fistpll
fs
xchg
or
ds
push
fcompl
loope
mov
sub
push
pop
inc
adc
call
mov
addr16
sbb
add
add
jg
jno
mov
inc
psllq
sub
iret
cs
enter
iret
xchg
pop
cmp
xor
push
lock
push
fs
mov
aad
call
xchg
nop
je
jo
xor
sbb
push
pop
or
loopne
pop
in
flds
cs
pop
pop
or
sbb
sbb
mov
hlt
lret
lret
mov
das
fimuls
xlat
add
xchg
es
sub
lahf
jb
ret
mov
movsb
cmp
les
jae
sub
pusha
lcall
div
sbb
and
adc
int
nopl
loop
mov
push
pop
dec
pop
dec
fst
mov
movb
pop
cltd
cltd
lret
sbb
and
lahf
ficomps
sbb
lds
into
inc
mov
push
lock
mov
or
pop
fbld
fmuls
mov
cmpsl
mov
sub
stos
xchg
xchg
mov
fwait
addl
xor
fmul
arpl
mov
fists
outsb
push
popa
clc
inc
mov
cmp
dec
in
push
enter
mov
cltd
lret
xlat
adc
jns
loopne
mov
fcomip
sub
loope
mov
enter
aaa
dec
sub
jbe
and
adc
mov
pop
mov
arpl
dec
cmp
cmp
sub
insb
iret
inc
sbb
add
stos
sbb
sub
call
call
pop
aas
leave
and
jge
iret
icebp
sub
xlat
inc
mov
mov
sahf
cld
mov
jno
push
mov
sub
aas
xor
fbld
mov
jp
jno
pop
fnstsw
add
mov
mov
lahf
pop
icebp
stc
outsl
jp
ret
pop
bswap
lahf
xlat
push
popa
fdivr
aam
ffreep
pop
int
sub
sbb
gs
cmp
outsb
daa
xlat
or
mov
pop
and
inc
and
xchg
add
jno
fsubl
loopne
inc
add
adc
jne
xchg
xchg
imul
or
insl
popa
push
out
dec
leave
pop
test
sub
push
cmp
mov
xchg
cmp
adc
xchg
clc
jnp
mov
fwait
int3
stos
xchg
lods
adc
rclb
xchg
mov
push
or
jno
in
mov
outsb
inc
mov
lret
jmp
pushf
js
mov
xchg
imul
jb
or
add
sbb
xchg
xchg
loope
sbb
lcall
enter
sarl
mov
mov
mov
lods
cs
adc
pop
mov
cltd
lret
popa
pop
mov
mov
cli
ds
stos
add
rcrb
imul
pop
adc
dec
fsubp
inc
push
mov
add
mov
dec
add
and
pop
and
xchg
paddsb
cli
aas
mov
dec
dec
jmp
js
cmp
shrl
enter
std
mov
addb
xchg
jae
jae
je
cmp
or
imul
cmpsb
dec
enter
jns
add
jp
xchg
int3
popf
push
arpl
pushl
mov
xor
popa
push
rcrl
or
push
loop
inc
in
or
or
lret
call
into
jae
mov
mov
lret
pop
les
fadds
ret
mov
rcl
mov
jl
and
imul
repnz
into
xchg
in
loop
or
or
sbb
mov
xor
add
mov
mov
lods
push
sub
mov
fcmovu
push
pushf
enter
mov
add
xor
mov
mov
sbb
and
adcl
xlat
ljmp
adcb
push
pop
stos
test
data16
in
outsb
lcall
mov
add
mov
cmp
sub
jecxz
imul
mov
pushf
ss
gs
je
sbb
shl
cmp
loop
loop
pushf
pop
in
scas
test
test
pop
sbb
imul
xor
idivl
push
pop
popa
mov
mov
scas
push
in
es
lcall
lods
mov
nop
scas
sub
fstl
xchg
setb
xchg
shll
incb
jl
sbb
push
xchg
jno
jl
inc
daa
imul
xchg
push
in
pop
notb
jae
movb
inc
xor
pop
sub
xlat
jg
or
fadd
or
pop
popa
push
or
in
int
test
pop
mov
pop
stos
dec
pushf
push
jge
je
adc
xchg
cmpsl
loope
repnz
cmpsl
cmc
inc
out
leave
xor
loop
fs
or
cwtl
shll
xchg
cmp
jp
bound
sub
inc
mov
dec
sti
dec
sub
add
sub
push
dec
pop
cmc
and
loopne
shlb
mov
adc
jo
data16
sub
ja
push
pop
mov
or
inc
inc
xchg
add
mov
adc
test
insl
mov
fs
xchg
adc
jns
mov
add
mov
stos
fwait
enter
pop
roll
ja
lahf
mov
jg
incl
pop
test
sahf
ret
sub
push
push
sub
ret
add
std
xor
sub
sub
and
dec
push
inc
rcrl
jg
lds
sbb
inc
outsl
mov
aas
fstpl
cmp
xchg
push
jbe
loop
xor
enter
cmpsl
repz
outsb
fisttpll
and
iret
dec
inc
xor
nop
mov
xchg
stos
mov
inc
gs
or
lods
push
xor
push
lret
or
cmp
sub
sbb
sub
pushf
dec
icebp
add
xor
repnz
leave
clc
mov
sbb
push
cli
insl
aad
nop
add
xchg
addl
mov
sub
roll
sbb
mov
sub
shlb
pop
shll
subl
movsl
into
mov
dec
stc
popf
cmpsb
push
jecxz
dec
insl
xchg
add
pop
mov
push
imul
jns
pushf
add
jg
push
pop
jl
xchg
pushf
add
xchg
test
and
sbb
adc
scas
adc
es
ret
push
in
and
jns
jbe
inc
jns
int
cld
and
mov
aaa
ficoml
andl
jo
inc
mov
mov
bound
xchg
jae
adc
out
daa
mov
xchg
in
pop
int3
in
pop
mov
out
test
imul
push
fistl
in
test
pop
push
mov
jle
xor
cmp
push
ficomps
adc
sbb
repnz
add
test
rcll
push
ret
sub
xor
std
mov
jb
bnd
daa
sti
mov
in
dec
test
mov
gs
cld
mov
mov
jmp
jecxz
ret
adc
cmp
cmp
lds
mov
adc
movsl
pop
adc
lods
mov
adc
cmpsl
shrl
paddq
movb
pop
rclb
in
mov
sbb
rcrb
push
cld
mov
add
xchg
pop
sbb
sub
js
pop
adc
out
enter
lock
jne
and
or
pop
enter
es
movsb
xchg
cltd
sbb
sbb
jge
shrl
or
fcom
mov
sub
sub
in
aad
sbb
sub
je
dec
fimuls
les
addr16
dec
mov
or
adc
les
pusha
clc
sbb
lcall
inc
dec
out
xor
pop
xchg
aad
pop
mov
add
fwait
inc
out
add
in
iret
lcall
sub
mov
xchg
lahf
insl
lea
out
pop
mov
out
mov
or
push
movsb
addr16
loopne
and
adc
dec
xlat
roll
push
cmp
mov
mov
out
sbb
in
imul
je
mov
inc
cmpsl
mov
pop
adc
sti
pop
xor
ljmp
mov
adc
je
push
ret
fnstsw
or
lds
xor
in
mov
jns
jp
adc
pop
sub
sbb
fisttps
cmpsb
iret
add
mov
sub
mov
rclb
sbb
cltd
shrl
scas
aaa
mov
imul
mov
xor
jl
test
add
lea
dec
gs
jp
rcr
xchg
psrlw
adc
test
call
sbb
adc
mov
rclb
test
dec
sbb
ljmp
mov
imul
fwait
push
sub
movsb
push
cmp
inc
cmp
mov
into
out
sbb
xchg
sahf
xor
imul
imul
bound
push
cmpsl
push
xor
and
xor
pop
inc
out
mov
xchg
adc
and
ja
sbb
roll
jmp
lret
dec
test
sbbb
inc
push
inc
hlt
mov
mov
push
lods
jg
aas
mov
stos
pop
sbb
out
push
dec
push
and
nop
stc
aam
xor
sub
dec
push
jle
dec
lea
pusha
idivb
icebp
dec
dec
lea
ret
xchg
xchg
rcrl
xor
sub
shll
xor
and
dec
enter
pop
sbb
pop
test
clc
mov
add
notb
daa
sub
sub
lods
sahf
and
lock
nop
mov
push
dec
sub
lock
lods
pushf
adc
push
cmpsb
out
xchg
pop
das
adc
pop
mov
scas
mov
push
mov
fcompl
mov
movsb
lret
cmp
push
ret
stos
lret
sub
sti
push
nop
aaa
lret
daa
insb
mov
je
les
dec
leave
jmp
fucomp
and
add
push
jne
les
lcall
icebp
fisttpl
ss
mov
fildl
test
mov
roll
mov
xor
gs
movsb
repz
sub
repnz
mov
and
or
out
pushf
jo
push
fdivrp
fimuls
jmp
aaa
aad
lret
sets
push
pop
jmp
insb
sti
jmp
xchg
jns
jge
push
sbb
sbb
lods
hlt
test
gs
adc
jnp
jbe
push
lret
jmp
sbb
xor
pop
inc
jns
ds
inc
xlat
les
cmpsb
imul
fidivrs
mov
les
adc
push
out
cld
or
add
addr16
mov
in
xor
inc
lods
and
sbb
jo
xchg
stc
xor
push
repnz
scas
sahf
adc
mov
push
sbb
outsl
push
aaa
cmp
dec
sub
push
jmp
cmp
call
rclb
and
mov
push
dec
push
adc
and
ljmp
lret
call
cmc
add
jg
test
icebp
dec
in
scas
ficompl
out
mov
jl
sti
test
fcmovnu
mov
popa
ss
cmc
and
sbb
push
ret
sarb
push
sub
test
fcmovnu
dec
jae
pop
subb
jns
cmp
jle
pushf
push
div
std
add
and
lret
cmp
imul
lea
insl
pop
lods
add
mov
dec
add
les
outsl
and
hlt
sbb
scas
push
mov
inc
xlat
pmulhw
les
ret
adc
repnz
mov
mov
out
gs
gs
jns
aad
fidivrs
sbb
sbb
and
addl
push
mov
cmp
lret
stos
and
mov
inc
ljmp
and
test
jg
lahf
cld
inc
pop
mov
cmp
in
data16
leave
hlt
pop
or
jmp
clc
xchg
jno
push
jns
dec
cmp
notb
mov
adc
jmp
fcomip
push
mov
push
test
std
pop
outsl
push
shufps
fldt
int
lret
pusha
fstl
inc
arpl
rcrl
pop
and
mov
adc
sub
xchg
int3
enter
subb
orb
mov
add
imul
dec
or
and
mov
cli
iret
ror
xchg
adc
pop
subb
mov
xor
sub
inc
orl
ret
fists
sbb
xor
sbb
cmp
sub
push
dec
imull
jl
add
inc
add
sbb
gs
cs
cwtl
scas
dec
mov
fadd
push
rolb
cmp
mov
cwtl
pop
xor
test
xor
or
mov
jmp
insl
scas
clc
fidivrl
xchg
mov
mov
pop
notl
mov
ret
stos
jnp
ss
lock
cmc
ljmp
hlt
pushf
out
jg
inc
and
jbe
adc
push
xchg
sahf
cmp
jno
jnp
or
or
out
out
sbb
into
into
aaa
arpl
xchg
pop
pop
bound
aaa
loop
dec
pushf
loop
jmp
lcall
out
insb
aam
xchg
jae
mov
verr
xor
mov
adc
out
jge
scas
mov
sbb
cwtl
lods
or
mov
sarl
fsub
or
or
cmp
lock
aad
div
stos
push
test
rorb
arpl
sbb
adc
xchg
xchg
cli
fdivs
jns
pusha
fidivrl
notb
xchg
daa
push
test
xchg
jnp
mov
fdivs
loopne
into
push
jbe
xor
xor
scas
jmp
popa
cmpl
das
les
movsl
pop
pop
pop
add
add
shr
sbb
lahf
mov
sahf
scas
js
outsl
pop
jp
into
bound
push
into
or
xchg
cmp
sbb
mov
out
clc
jb
adc
loopne
pop
stc
pop
jno
test
repz
fcoms
sub
xor
mov
popf
jg
adcb
negb
add
and
sbb
cmp
orps
pop
scas
mov
xchg
int3
imul
shlb
out
adc
sbb
mov
sub
and
add
test
adc
cmp
cmp
in
lods
mov
xchg
cmp
ficoms
popa
fs
dec
ds
stc
je
jl
icebp
mov
fists
imul
aaa
mov
mov
or
ror
dec
jp
cltd
mov
push
cmc
jle
test
mov
lret
push
ss
test
xor
adc
test
popf
ja
jns
popf
loopne
push
dec
aaa
ret
and
ss
mov
jmp
js
sbb
arpl
in
sbb
mov
xchg
dec
test
sbb
adc
jbe
out
sbb
cmpsb
mov
nop
fistpl
dec
ja
sub
xor
hlt
arpl
cs
sahf
xchg
push
lret
or
nop
mov
mov
jp
mov
stc
pop
jmp
popf
xchg
inc
pop
and
jnp
rolb
mov
gs
inc
jno
pop
mov
imul
add
stc
cmpsl
fists
in
xor
xor
in
push
or
or
mov
repz
sbb
jbe
ja
mov
xchg
or
ss
bnd
jecxz
jo
or
test
aad
mov
rorl
dec
std
or
sub
mov
aas
and
repz
mov
cmp
add
inc
mov
fsubl
jl
int3
arpl
lods
inc
xor
movq
mov
ret
pop
mov
and
mulb
add
cld
stos
ja
fwait
add
adc
mov
outsl
sub
fstp
jp
popa
rorb
push
out
xchg
lock
out
imul
pop
sbb
lds
out
in
mov
dec
jmp
loopne
ficoml
cli
push
dec
popa
aad
lahf
lcall
pop
xor
popf
stos
push
popf
leave
addr16
xchg
notl
loopne
aam
out
or
fldl2e
das
vmread
in
shlb
cmpsb
cld
imul
stos
pop
mov
inc
dec
fimuls
cmp
sub
jbe
and
jae
push
rclb
push
leave
push
push
sbb
loopne
aam
push
fcomip
out
insb
push
iret
fwait
xor
sti
test
and
hlt
mov
stc
push
lods
push
stc
push
les
fldcw
mov
loopne
add
iret
mov
pop
add
leave
jmp
xchg
xor
xchg
dec
inc
das
xchg
pop
mov
xchg
andl
sbb
lret
jecxz
mov
repnz
or
loopne
mov
popa
fwait
repz
dec
push
or
push
pop
sub
jns
jmp
push
and
jne
xchg
pop
lret
cmc
aaa
orb
mov
iret
pop
inc
dec
lret
sti
stc
inc
scas
ds
inc
sbb
gs
int3
insl
cmp
jg
push
jp
jnp
cs
add
lahf
daa
push
iret
cmpb
int
dec
icebp
je
cmp
inc
fcomp
pop
insb
pop
loope
aam
mov
sbb
ja
test
cmc
lods
mov
mov
push
in
orl
mov
cltd
in
shlb
xor
ljmp
push
cld
je
repnz
push
sub
aaa
sbbl
cs
or
mov
in
jg
lret
dec
push
pop
adc
sub
or
imul
mov
hlt
cmpsl
jecxz
mov
mov
sbb
mov
ret
inc
stos
adc
out
adc
cld
mov
add
imul
out
pusha
mov
fstpt
jle
pop
jb
scas
pop
xor
xchg
jnp
shll
jecxz
aam
xchg
fcomps
out
adc
add
jp
loop
lds
push
pushf
push
addr16
movsl
mov
cmp
push
pop
adc
ret
or
lea
movsl
dec
pop
sahf
sub
movsl
out
stos
pop
std
shll
sahf
movsb
xchg
inc
popa
loop
and
cmpsl
cmp
iret
mov
pop
add
dec
mov
adc
push
mov
lods
shll
popf
repnz
sub
inc
xor
out
lret
mov
push
lds
push
dec
pop
cmpl
sarb
lods
mov
push
mov
cmpsl
add
enter
cltd
out
push
movsl
les
rcrl
jl
enter
cmp
cmp
pop
dec
and
sbb
cwtl
cltd
nop
pop
add
sbb
ss
das
bound
test
loopne
or
push
test
lock
inc
movsb
js
dec
cld
mov
movsb
and
dec
xchg
sbb
mov
call
mov
jg
add
int
inc
dec
je
pushf
jb
mov
xchg
and
sub
test
cmpsb
pusha
xchg
jge
call
dec
and
in
pop
rorb
sahf
pop
fs
mov
sbb
add
clc
cmpsb
test
mov
nop
inc
mov
in
fst
adc
int3
pushl
mov
fldcw
xor
and
movsb
cmpsb
ljmp
inc
rcll
loopne
jecxz
je
jecxz
cmp
movaps
cs
outsb
out
outsl
test
jno
ret
sub
int
push
xchg
movsl
ja
and
inc
rcrb
sub
icebp
test
push
daa
movsl
lret
cli
jno
call
xorb
sub
fldl2e
mov
iret
mov
push
add
cltd
dec
adc
sahf
push
push
sarl
call
repz
sti
sbb
test
test
repz
sbb
jg
jbe
mov
cli
or
test
out
fs
leave
pop
out
into
ja
mov
adc
or
outsb
in
xchg
mov
mov
jbe
cmp
sub
orb
sbb
and
clc
push
xor
pop
mov
jb
jecxz
mov
adc
imul
scas
gs
cmp
xchg
test
mov
out
test
sbb
lods
xchg
jecxz
pop
dec
mov
test
cld
repnz
xor
lret
pop
xchg
aam
shrl
dec
or
scas
or
push
out
mov
lds
or
ret
pop
es
ljmp
cmp
inc
cmpw
call
js
inc
fstl
push
roll
sub
mov
xor
arpl
fnclex
and
cld
or
pusha
insl
mov
ljmp
adc
insb
jmp
or
fisubs
pop
push
push
push
out
jecxz
and
jns
push
and
js
push
jmp
adcl
pop
xor
lret
jp
dec
xor
inc
icebp
cmpsl
cmc
cmp
add
mov
gs
enter
add
int
test
addb
pop
sub
inc
jns
subl
cmpsl
adc
insb
cld
loop
in
lahf
pop
addl
xchg
aam
dec
arpl
xchg
test
fs
popf
cltd
fs
clc
lea
sub
xor
jbe
xor
or
notl
out
loope
rorl
repz
dec
out
in
pop
pop
punpcklwd
jo
pushf
xchg
jp
movb
cld
std
dec
out
idiv
aas
stc
adc
lcall
jae
xor
cs
mov
std
aam
test
push
dec
aam
cs
dec
insb
sbb
fs
dec
push
cmp
mov
push
cmc
stos
out
push
mov
xor
pop
imul
jecxz
mov
ret
and
out
popf
movd
xor
or
inc
mov
mov
mov
scas
sub
es
push
outsl
xchg
jbe
inc
std
sub
popf
lcall
mov
jb
shl
pop
mov
inc
inc
test
dec
mulb
xchg
sub
sub
call
inc
daa
or
outsl
push
popf
jae
dec
dec
fcmovnb
mov
rcl
in
bound
mov
mov
jae
xor
icebp
jge
cmp
pop
cmp
je
faddl
mov
adc
test
mov
cmp
pop
sub
mov
sbb
aaa
inc
push
xchg
ja
test
data16
outsl
test
fisubl
mov
jecxz
mov
xchg
and
mov
adc
push
xor
jo
test
shll
fadd
pop
fcoml
outsb
cmp
dec
or
jp
adc
and
or
push
pop
imul
or
repz
cmp
and
adc
adc
rol
bound
ds
inc
fdivs
jo
in
inc
test
aas
dec
dec
or
inc
sub
adc
sub
sti
sbb
sbb
shrl
xor
mov
jns
push
cltd
and
pushf
push
xor
add
adc
aas
clc
push
aad
mov
jle
js
sbb
stos
sbb
imul
jmp
pop
and
xor
sbb
stos
scas
mov
aaa
xchg
mov
jmp
test
mov
xor
jl
gs
rcll
in
or
shll
inc
push
cmp
clc
adc
pop
sub
or
sbb
orb
lcall
xchg
pop
mov
mov
cltd
mov
repz
add
adc
imul
and
inc
imul
lahf
dec
mov
mov
xor
std
das
bound
mov
aad
jp
xor
movsl
xchg
loop
insl
cmp
or
sub
xchg
pop
leave
subb
jnp
js
sbb
cwtl
sub
push
addb
sar
faddl
fiaddl
iret
and
mov
lcall
leave
and
push
pop
jecxz
push
clc
js
call
sahf
cmp
xchg
xchg
inc
adc
je
inc
ja
adc
imul
ja
cltd
hlt
cli
xor
push
lods
int3
pop
and
and
mov
sti
scas
mov
lock
pop
add
cmp
mov
jmp
test
inc
decl
jnp
test
mov
ret
addr16
lahf
mov
sub
lock
test
inc
mov
mov
loopne
pop
notl
xchg
outsb
sbb
sbb
inc
inc
lods
bound
rcr
and
cmp
mov
in
fsubs
sbb
arpl
je
adc
stos
or
xchg
inc
jp
loop
clc
aas
or
in
jnp
mov
pop
mov
aad
rorl
inc
sbb
lret
subl
mov
sub
out
fistl
cmp
xor
pop
mov
lods
pop
out
jns
out
and
stc
mov
push
push
or
testb
rorl
or
stc
mov
add
and
sub
aas
xchg
lds
adc
mov
insl
ret
and
add
lods
mov
jecxz
in
mov
push
ds
push
je
setp
test
in
sbb
mov
ss
cmpl
or
xor
adc
mov
pop
sbb
insb
aam
jnp
fwait
loopne
clts
push
jb
xlat
push
lret
xor
xor
mov
sub
clc
cltd
sbb
ret
cwtl
or
fnstenv
jg
lcall
push
mov
enter
daa
cwtl
pushf
xchg
pushf
ret
sub
sbb
cmp
jg
je
and
movsl
or
dec
pop
push
hlt
divb
loope
pop
lret
pop
dec
inc
adc
push
add
pushf
out
stos
inc
xorb
jmp
push
cmp
sub
xlat
test
push
mov
test
imul
rclb
mov
xor
and
mov
push
popa
ficomps
insl
cmp
mov
stos
cltd
and
add
loop
or
jnp
mov
sbb
test
or
test
nop
stos
call
or
push
les
sub
push
clc
repz
push
loope
mov
sbb
in
dec
aad
push
out
cmp
stos
cmp
ja
mov
sbb
cmpsb
lods
dec
jecxz
mov
cmp
pop
sbb
shlb
and
das
cmp
leave
adc
cld
sub
jo
mov
jle
sti
popa
cmp
aaa
test
sbb
cltd
xor
cmpl
xor
data16
mov
dec
xchg
or
lcall
xchg
sub
aas
outsb
imul
jno
cmp
adc
vphaddubq
inc
loope
cmpsl
test
pop
dec
jmp
scas
nop
sbb
addr16
cltd
mov
iret
fadds
dec
out
dec
bound
daa
pop
xor
cltd
xor
outsb
xchg
push
lret
icebp
push
addr16
mov
xorl
add
sub
ss
mov
out
jecxz
stos
lret
and
mov
stos
pop
cs
cmp
outsl
sub
xchg
ljmp
mov
pop
xor
enter
push
xchg
xor
aam
cmpsb
or
dec
hlt
or
sub
cmpsb
sti
push
adc
mov
cld
xlat
cmp
fimuls
test
jg
std
sbb
in
mov
jo
in
jg
in
repnz
pop
push
mov
test
loope
jle
cmp
js
jns
into
xchg
popa
adc
pop
mov
outsl
push
je
and
push
nop
mov
data16
sbb
dec
fiadds
inc
fcomi
adc
shll
cli
mov
adcl
jnp
mov
dec
xor
or
movsl
and
lret
test
lock
insb
mov
je
ljmp
adc
jnp
sahf
pushf
mov
clc
mov
repz
xor
push
ds
sbb
xchg
movsb
sub
in
sub
sbb
lds
cmpsb
add
jo
xlat
push
push
jge
mov
dec
xchg
call
mov
popf
push
mov
flds
pusha
jg
jnp
iret
fs
mov
sbb
icebp
or
adc
scas
xchg
inc
gs
lret
xor
sbb
fmuls
jecxz
pop
xor
fs
js
addb
jecxz
or
stc
fmull
xchg
in
xchg
scas
fiadds
mov
fisttps
loopne
arpl
loope
lods
fstpt
sahf
sub
fbstp
hlt
inc
lods
and
scas
dec
xchg
in
mov
ret
jae
out
dec
lret
pop
add
push
pop
mov
stos
scas
pushf
mov
cmp
das
movsb
fldenv
cwtl
dec
fisubl
mov
lcall
pop
bswap
mov
mov
jecxz
cmpb
jno
ret
and
and
pop
mov
stc
subl
sbb
cwtl
xor
addl
testl
enter
adc
psubw
sbb
rcr
jge
push
imul
aad
sub
cmp
fmuls
mov
push
inc
ja
push
dec
cmp
add
mov
js
xchg
aad
jbe
sbb
push
mov
leave
xchg
out
pop
xor
sbb
or
insl
sbb
shll
shlb
popf
stc
repz
xchg
loop
push
addr16
push
push
ret
mov
lahf
cmp
pop
and
pop
fidivl
sti
xor
call
out
dec
mov
jb
jg
dec
mov
jne
ffree
mov
mov
aam
test
clc
lahf
cmpsl
inc
je
rcll
and
stos
sub
ret
dec
out
js
jnp
pop
repnz
or
dec
jb
xchg
adcb
sub
int3
pop
inc
sahf
mov
sbb
fnstenv
push
cmp
sbb
sub
test
jns
push
fs
mov
daa
cmc
rorl
xorl
pop
jae
push
pop
sub
arpl
push
or
jno
mov
adc
mov
pop
inc
fisubs
xchg
xchg
fwait
adc
sahf
lods
sbb
mov
dec
xor
fxam
mov
dec
inc
pop
add
dec
mov
subb
xlat
outsb
jle
pop
and
testb
aam
pop
insl
orl
push
imul
xchg
movsb
and
ret
sbb
inc
fdivrp
out
add
jp
and
push
xchg
or
or
shl
push
ss
sahf
hlt
sub
subl
jne
cmpsb
aas
lret
xchg
push
cmp
fdivr
push
aas
test
mov
ljmp
movsb
inc
adc
repz
sbb
filds
pop
dec
push
xor
dec
mov
and
std
loope
cmpl
lret
or
std
mov
push
leave
sub
in
push
daa
add
xor
inc
insb
fnstenv
popa
jns
sub
stos
lret
pusha
fwait
mov
sbb
xchg
fwait
mov
repz
ret
gs
ss
clc
shl
inc
bswap
dec
adc
cmpsl
mov
cld
mov
push
loope
jnp
mov
or
jno
repz
xor
sbb
flds
daa
ds
fs
adc
test
aad
fnstcw
xchg
push
fsubs
loope
mov
popa
push
xchg
imul
mov
sub
jp
stos
imul
xor
aad
dec
ljmp
inc
mov
push
adcb
cmp
div
in
pop
cmpsb
std
jecxz
loope
sub
adc
hlt
push
arpl
push
xchg
mov
mov
bound
aaa
pop
adc
out
test
aaa
das
mov
lret
lahf
push
and
aad
push
rorl
ljmp
fndisi(8087
sub
lret
pop
pushf
dec
lods
fiadds
lea
testl
push
push
pop
leave
lcall
loope
xor
lcall
jb
lock
push
xchg
inc
jecxz
loop
aas
push
js
decl
and
jnp
cmpsl
imul
xlat
sahf
sub
fcmovnb
jp
lret
lret
fstpl
cmp
out
mov
jo
mov
sahf
dec
loopne
cmp
call
cmpsb
out
lock
in
and
jnp
xor
jae
sub
ficomps
xlat
inc
arpl
arpl
sub
cmp
mov
jmp
pop
cwtl
xchg
pop
pop
test
sub
outsl
mov
es
mov
sub
out
mov
sti
fidivs
and
out
test
mov
dec
lock
add
mov
fists
imul
aam
mov
mov
jns
into
jecxz
sbb
jmp
lods
ret
es
mov
add
pop
sub
mov
mov
lea
pop
ficompl
sub
jg
sub
addr16
sti
daa
in
mov
scas
cmp
dec
subb
mov
jo
push
sub
and
out
pop
test
xor
sub
xor
mov
jle
add
pop
hlt
inc
sub
adc
hlt
out
addl
lea
fsub
fcmovnb
movsb
cmpsb
stos
popw
sub
cmpsl
fnstsw
mov
imull
sbb
dec
pop
hlt
dec
and
push
test
add
lret
xchg
aam
rolb
sahf
or
mov
mov
lcall
movsl
and
and
push
scas
mov
inc
or
cmp
shrb
cmpsb
pop
pusha
jl
pop
jmp
loop
mov
dec
scas
lret
or
cmp
ljmp
mov
rol
pop
mov
insb
test
pushf
in
dec
mov
test
inc
pop
xor
push
mov
xor
pop
jo
xchg
pop
fstp
in
sbb
mov
or
pop
ss
jmp
mov
popf
pusha
stos
pop
jle
cmp
pop
cmpsl
popf
into
push
jnp
daa
jp
jl
test
insl
les
adc
aaa
call
movsb
inc
into
or
and
ja
xchg
xchg
dec
cmp
xchg
shlb
jg
andl
mov
inc
push
aad
std
inc
cmp
scas
ja
int
mov
mov
xor
jmp
push
cld
psubusw
jecxz
test
es
jecxz
xlat
cltd
mov
rcll
xor
or
testb
daa
daa
inc
sahf
mov
jl
cmp
mov
repnz
jns
pop
jno
push
xchg
jmp
or
pop
pop
mulb
sbb
ja
lea
cmp
mov
mov
xchg
pop
fisttpl
popa
xchg
in
andl
cli
adc
cmp
cmpb
dec
fwait
fs
mov
cmc
dec
push
adc
xor
test
insb
jmp
loopne
mov
and
push
mov
imul
mov
ror
insl
mov
pop
shlb
or
ror
jnp
movsb
ss
sub
push
xor
xor
out
iret
cmp
repz
cltd
and
rcl
fs
sbb
in
jbe
xor
insl
test
push
popl
ret
pop
cwtl
sbb
stos
mov
cmp
add
pop
popa
or
std
shrb
jbe
pop
mov
jmp
js
sub
cmp
mov
rcrb
lods
inc
xor
jmp
je
and
adc
sub
mov
mov
pusha
ret
mov
orl
outsl
lahf
in
xor
push
jne
imul
std
mov
ljmp
mov
inc
repnz
mov
stos
and
jg
jae
inc
in
xchg
pusha
sbb
cmp
gs
add
frstor
pop
mov
repz
pop
lcall
and
arpl
jge
and
out
sbb
sbb
jg
mov
xor
mov
xchg
enter
or
and
and
out
nop
in
xor
test
ss
data16
cmpsb
mov
stos
mov
inc
push
test
cmp
ja
mov
dec
push
ljmp
cmp
js
jnp
lret
and
jecxz
jnp
sbbb
dec
add
cmp
ret
sub
mov
mov
mov
movsl
sbb
in
outsb
pop
pushf
lea
fsub
and
sub
repz
xchg
xor
mov
cmp
cltd
push
mov
lret
popf
test
in
fnstsw
push
jne
and
movsb
add
cmpsb
jg
fistpll
pop
fdivs
fnstenv
xchg
cmp
mov
lahf
xor
inc
stos
clc
mov
std
dec
clc
mov
cmpb
or
imul
shrb
push
fsubrl
imul
mov
lcall
dec
jo
push
ja
sti
lret
loope
and
mov
jae
xchg
leave
aad
inc
lcall
adc
or
in
or
or
addr16
or
and
push
addr16
mov
mov
xchg
pop
jno
jnp
jmp
sbb
mov
mov
xchg
movsl
xor
mov
leave
nop
pop
mov
push
aad
sti
and
pusha
sbb
add
cmp
leave
and
popf
jbe
cwtl
sarb
push
sbb
mov
divb
scas
xchg
cltd
xchg
repnz
push
das
in
ret
xor
or
pop
das
lret
cmp
inc
mov
xor
loope
mov
test
pop
fstpt
sbb
pop
xor
cmp
jmp
cli
add
rcrb
out
mov
lahf
adc
incb
or
sbb
mov
fistpll
xchg
mov
xchg
pop
jb
pop
lock
lret
mov
popf
fwait
jecxz
xchg
pop
fmuls
mov
ret
popa
jnp
addl
and
scas
cmp
roll
out
mov
in
fwait
add
sbb
mov
jne
loop
xlat
mov
test
into
cmc
shrb
jle
divb
rcrb
ds
pop
sbb
enter
push
mov
cmpl
xchg
push
sub
pushl
loope
mov
mov
mov
jbe
pop
arpl
clc
sti
test
popf
loopne
pop
bound
mov
aaa
fadd
lock
cmp
mov
inc
hlt
mov
pop
es
jbe
test
pop
jmp
cli
sbb
sub
in
cmp
add
inc
sbb
xor
sti
cmp
sbb
fmull
fwait
add
xchg
xchg
ud1
fwait
jo
mov
push
mov
nop
repnz
test
pop
cmp
fisttpll
int
cmp
sub
inc
rcll
int3
mov
and
mov
jnp
lods
daa
js
jo
sahf
xchg
leave
lret
pop
pop
inc
jns
xor
push
pop
lods
sbb
je
dec
out
outsb
push
xor
and
jne
pop
insl
mov
fcompl
push
in
scas
jle
imul
ret
sbb
rorl
adc
loop
cli
daa
or
daa
test
in
dec
xor
xor
loopne
repz
cmp
out
andl
adc
arpl
lods
outsl
test
or
in
xchg
xorb
or
aad
fmuls
or
in
dec
mov
push
xchg
xor
fiaddl
add
and
or
xorb
test
jo
sub
test
test
push
scas
mov
iret
rcr
test
inc
ja
cmp
push
ljmp
dec
and
cmp
cmp
in
dec
fnstsw
inc
popa
and
or
shrb
cmc
pop
faddp
mov
mov
mov
lods
push
lret
fiadds
stc
js
sub
pop
clc
mov
sbb
push
push
or
push
es
and
inc
dec
in
popa
jp
xchg
ja
sbb
mov
rorb
inc
scas
xchg
adcb
push
mov
sub
ja
inc
or
and
shlb
daa
lds
aas
xor
divb
push
leave
push
in
mov
cltd
clc
mov
repz
shll
pop
js
xchg
jge
inc
iret
addr16
jp
push
mov
iret
dec
mov
push
jmp
and
hlt
dec
mov
sahf
sbbb
jo
ja
rorl
mov
sub
stos
pop
cmp
or
andb
outsb
xorb
fwait
dec
out
std
lea
cmp
pushl
and
inc
cli
hlt
imul
and
pop
mov
mov
mov
test
das
ja
les
sub
inc
ret
jmp
cmp
add
dec
pop
lea
dec
cmp
scas
jecxz
jle
adc
imul
xchg
fstps
push
pop
jecxz
popf
jp
jne
mov
lcall
cli
into
mov
mov
dec
cmp
icebp
cld
sbb
pop
mov
scas
insb
add
inc
sub
cmpsb
mov
xor
cmp
scas
sub
mov
scas
xchg
in
mov
lock
lock
cmc
or
add
outsl
jg
cmp
mov
jno
repnz
fs
mov
les
in
icebp
jae
mov
cld
jns
ret
aam
jge
loopne
lods
pop
out
out
pusha
and
jp
bound
pop
push
mov
fwait
xchg
inc
icebp
scas
sbb
ret
cli
xchg
adcl
cmc
jns
push
cmp
fwait
push
mov
ds
sahf
mov
inc
ljmp
jbe
aaa
pop
cld
push
mov
lods
xchg
imul
xor
mov
das
test
adc
add
jl
xchg
pushf
push
xorb
aam
jnp
mov
push
int3
adc
test
fnsave
inc
jge
inc
js
add
lock
out
cmp
pop
stos
cmpsl
pop
xchg
and
push
mov
push
or
cmp
push
pop
popf
xchg
inc
les
rolb
pop
cmp
jbe
adc
jno
inc
mov
xchg
jae
jne
inc
jg
outsl
push
imul
or
je
or
cmc
das
xor
ljmp
fbld
and
sub
mov
addr16
sub
jo
push
sbb
or
dec
jns
cmc
add
push
cmp
into
shl
jae
rorb
icebp
cmp
inc
xor
inc
jb
int3
jae
jbe
fisubrl
cmpsb
jb
scas
sub
leave
add
lds
es
fimuls
outsb
xor
mov
jl
je
sbb
or
std
xchg
pop
adc
stos
mov
mov
lahf
insb
sbb
ljmp
sbb
icebp
vsubsd
out
negb
pop
in
mov
imul
inc
mov
out
pushl
sub
push
jp
mov
lahf
add
mov
fisubrl
jl
pop
or
decl
mov
imul
adc
outsl
filds
xor
add
in
fbld
mov
mov
jnp
mov
out
mov
loop,pt
mov
and
jbe
add
adc
icebp
ret
dec
rcl
adc
leave
dec
inc
cli
xor
faddp
rorl
gs
pop
jno
mov
sbb
daa
mov
mov
sbb
mov
jnp
cwtl
inc
in
outsl
cmp
addb
fcomi
leave
or
stc
lock
test
fsubrl
jecxz
std
data16
fstpt
sub
jmp
mov
sub
cmc
push
adc
mul
imull
lods
sub
test
popa
fs
aad
xchg
inc
pusha
adc
fwait
divb
or
popf
mov
push
movsb
adc
call
mov
jnp
stos
add
dec
mov
or
dec
mov
mov
lahf
jge
andl
pop
enter
sbbb
add
sub
sub
mov
in
pop
pop
add
inc
cmp
lret
adc
imul
into
jo
clc
sbbl
mov
xchg
jbe
leave
in
insl
sbb
add
call
cmpsb
sar
loop
dec
hlt
pop
ror
inc
jns
xor
pop
adc
fs
mov
int3
mov
fidivrs
rorb
pop
mov
test
addb
mov
pop
push
dec
add
xchg
jmp
stc
out
js,pt
ja
pop
mov
jno
je
lea
sbb
jb
outsb
icebp
push
jnp
or
mov
mov
push
mov
popf
sub
inc
dec
leave
jae
jg
pop
jbe
int
jmp
jno
pusha
insb
and
clc
sub
sahf
push
sbb
nop
stos
popa
mov
aam
out
pusha
jecxz
ret
add
dec
add
inc
push
lcall
xor
mov
mov
test
enter
pop
shrl
lea
mov
popa
and
and
cld
fcompl
jle
and
sub
dec
test
lcall
mov
popf
daa
stos
sub
dec
sub
xchg
test
pop
xor
mov
das
cwtl
dec
jae
adc
rcll
aas
xchg
ss
sub
in
xchg
mov
stc
fwait
je
sub
addl
les
dec
test
adc
cwtl
pop
mov
nop
idivb
in
popf
fnsave
cmp
mov
push
sub
call
mov
cwtl
jb
dec
push
and
adc
xlat
mov
clc
xor
sarl
push
cli
aas
scas
cmp
cmp
jmp
inc
jg
arpl
int3
sub
mov
rcr
das
pop
cmp
ss
fnstsw
in
sarb
fadds
mov
test
out
pop
inc
daa
cmp
lock
mov
or
cmpb
out
sbb
add
jle
mov
jbe
pop
aad
lea
xlat
aad
jns
rorb
mov
inc
fwait
xor
push
addr16
rorl
hlt
imul
test
dec
js
xor
rolb
xchg
clc
mov
data16
jo
jnp
ja
movsl
add
and
push
sbb
xchg
pop
pushf
into
icebp
mov
ret
and
loope
xlat
jb
mov
fs
daa
add
xchg
xor
pop
fimuls
lock
xor
and
cmp
sti
mov
inc
xlat
fisubl
push
gs
xlat
cmpsl
jno
incl
lods
shlb
ret
jo
fnsave
stos
js
sbb
stos
inc
sub
std
xchg
push
lods
loopne
pop
leave
inc
mov
adc
adc
fucomp
stc
mov
andl
mov
or
cmc
adcl
jmp
je
ja
add
cmp
sbb
fcompl
mov
add
ja
mov
inc
mov
clc
push
mov
mov
insw
push
das
test
pop
insb
dec
cmp
lock
scas
sub
adc
arpl
push
pop
add
mov
ret
push
add
data16
xlat
cli
cmp
jg
es
pop
lock
movl
jg
jo
out
mov
lds
packssdw
push
pop
in
ror
mov
dec
mov
repnz
scas
int3
pop
jo
cmc
add
mov
cmp
leave
xchg
or
xchg
outsl
inc
lret
and
ror
pop
sub
fs
aam
sbb
sub
push
sub
inc
adc
jmp
rorl
sbbl
or
into
xchg
getsec
les
std
das
cmp
leave
jnp
call
dec
imul
push
movsb
scas
ss
movsl
sub
or
sbb
push
cmp
outsl
popa
push
test
cmpsl
repnz
out
pop
test
push
nop
loopne
mov
mov
daa
int3
je
adcl
sub
call
mov
pop
mov
pop
mov
add
stos
mov
scas
xchg
sbb
cmpsb
inc
add
cmc
and
mov
ficoms
jecxz
clc
iret
inc
add
add
dec
xchg
mov
mov
pop
jb
dec
pop
je
add
add
adc
mov
push
mov
push
call
sub
inc
push
cmp
pop
push
loope
es
mov
lea
mov
fists
add
test
loope
xchg
fs
push
out
mov
or
xchg
jne
sbb
ficoms
push
loope
int
mov
xor
jae
lret
add
daa
pushf
nop
popf
cmp
sahf
push
xchg
mov
sub
into
mov
push
xor
mov
pop
push
aas
cs
les
xor
push
adc
jl
dec
push
add
in
out
ss
neg
dec
cwtl
test
push
hlt
ljmp
je
xor
mov
test
jmp
out
pushf
pusha
lods
fstpt
repz
data16
popf
aam
mov
sbb
loopne
adc
cmp
or
out
scas
add
in
jl
outsb
jns
fstpt
les
inc
mov
les
pop
ret
inc
pop
pop
rolb
and
ret
adc
add
movsb
push
ret
dec
xchg
fwait
test
pop
pop
cmp
adc
repnz
push
sbb
xor
push
aas
mov
jmp
mov
fsubrl
lcall
notb
and
inc
scas
mov
ljmp
sbb
mov
gs
add
je
jp
pop
sti
or
dec
fstpl
aaa
pop
jmp
rclb
jnp
aad
push
jbe
or
mov
or
inc
cmpsl
sub
nop
pop
test
and
fldcw
mov
lahf
add
jecxz
shll
xchg
fldenv
push
inc
loop
mov
adcl
pop
add
push
xchg
pop
enter
add
idiv
inc
test
cwtl
mov
addb
leave
cmp
xor
pop
lret
and
sub
jo
ja
mov
mov
pop
add
push
repz
mov
inc
rorl
andl
and
test
xchg
loopne
and
jge
jbe
push
mov
mov
mov
and
js
jl
loopne
outsb
cmp
jno
aas
or
cmpsl
inc
addr16
pop
bts
sarl
mov
repnz
ds
or
push
mov
mov
movsb
pop
pop
scas
loope
xlat
jle
lds
mov
pop
mov
sbb
or
sahf
dec
mov
pop
loop
outsl
rclb
xchg
jno
dec
repnz
jo
call
mov
adc
push
push
test
pushl
loope
sbb
xchg
or
push
push
inc
mov
mov
pop
mov
repz
dec
movsb
clc
adc
insb
pop
fisttpl
ffree
into
fldcw
imulb
out
loopne
mov
adc
int
pop
cmp
scas
mov
enter
add
jge
out
and
fs
mov
fdivs
sahf
add
push
adc
adc
sahf
jne
test
cmpb
pop
jae
les
sahf
imul
xchg
insb
push
add
std
sub
lods
aad
or
lcallw
lea
loop
imul
jbe
je
cmp
gs
jp
je
mov
test
aad
je
cmc
js
cmp
pop
pop
rcll
push
mov
inc
jbe
stos
adc
mov
sub
mov
mov
sti
cs
jge
loope
cld
int
mov
and
pop
in
fisttpl
pop
shlb
mov
aas
cld
in
mov
lock
mov
cmp
inc
or
imul
lods
mov
lcall
pop
and
test
out
scas
sahf
lcall
dec
aaa
or
or
pop
lock
push
sub
mov
push
punpckhwd
pushf
lret
push
out
xor
mov
and
pop
int
and
dec
inc
jo
push
pushf
push
and
sti
pop
shrb
mov
ja
push
sbb
inc
sbb
inc
nop
fcompl
mov
cmp
and
imul
bound
xor
and
cmpsb
movsl
int
loope
mov
or
lret
into
sahf
and
out
mov
pushf
xor
aad
jno
push
subl
jno
dec
leave
iret
push
xor
stos
and
cmpsb
add
sub
mov
mov
dec
jne
fxch
push
mov
xchg
or
out
aas
mov
into
sub
inc
lds
push
pushf
call
sub
and
dec
mov
fiadds
gs
sub
jle
test
jecxz
cmc
or
sub
outsb
rorb
pop
xchg
jl
movsl
dec
xor
dec
roll
in
test
cmp
mov
fstpl
mov
jl
or
jge
mov
push
ds
and
push
enter
mov
mov
jnp
mov
inc
adc
or
xor
xorb
daa
dec
in
sbb
mov
ret
xlat
fcomp
inc
int3
sahf
orb
mov
jb
pop
push
dec
mov
xchg
or
adc
and
test
sub
addr16
xchg
xchg
iret
ss
lods
cmp
dec
ret
loop
popf
movb
adc
jmp
add
mov
add
repnz
push
sbb
std
and
jb
pusha
lods
out
inc
clc
cli
negl
mov
cwtl
cltd
fistpll
or
daa
sbb
loop
fisubrs
clc
daa
fwait
adc
cmp
adc
adc
jmp
push
outsl
fs
mov
leave
subb
ss
xchg
xlat
inc
or
inc
scas
les
push
add
mov
into
push
in
xchg
nop
xor
or
inc
or
push
pop
add
stos
mov
leave
dec
push
lock
mov
enter
fidivl
fbld
sub
jecxz
decb
push
sub
movsl
ret
add
mov
in
inc
add
or
dec
les
inc
test
xchg
cs
shlb
sub
xorl
shlb
add
test
jecxz
inc
or
jge
jnp
mov
lret
or
out
ror
mov
sbb
xchg
repz
insb
inc
pop
movntps
add
add
loop
push
popa
nop
pop
sbb
push
test
aad
cli
adc
cwtl
orl
cmp
movl
scas
scas
and
jmp
idivl
lcall
and
mov
lgs
mov
cmp
fchs
fdivrs
scas
int3
test
pop
mov
push
jno
jae
repz
hlt
inc
es
rolb
inc
and
rcr
cmp
loope
xchg
pop
mov
mov
loope
popa
push
mov
sub
pop
movsb
lods
lods
in
test
jl
jns
inc
push
out
leave
or
sub
test
sarb
lods
ret
and
pusha
js
xchg
sub
xchg
sbb
push
mov
mov
pop
subb
jecxz
pop
adc
xor
xor
sbb
add
push
lds
das
leave
inc
shr
pop
test
xor
jp
lods
loope
xor
push
ljmp
mov
jecxz
xchg
pop
jl
inc
icebp
jl
scas
mov
mov
lods
stos
or
pop
pop
mov
xor
jp
call
bound
xor
mov
cmc
mov
pmullw
sub
sbb
push
aad
adc
mov
lea
mov
fmulp
lods
push
xchg
fstps
and
cwtl
lret
mov
lock
sbb
jge
add
lcall
add
imul
xlat
jecxz
adc
pop
aaa
mov
pop
aam
sahf
mov
push
mull
imul
adc
xor
lds
outsl
add
mov
stc
lret
shlb
ljmp
sbb
jl
out
inc
shl
mov
clc
pop
pop
push
lret
jmp
dec
fldcw
jmp
cmp
mov
sbb
mov
aas
int
orb
in
inc
out
dec
xchg
pop
outsl
imul
inc
icebp
stos
xor
out
in
aas
adc
in
xchg
pop
adc
jb
xor
icebp
xchg
rcrl
jbe
addr16
mov
cld
out
or
nop
mov
sub
test
mov
jecxz
hlt
cltd
dec
jno
dec
notb
sarb
xchg
fiadds
clc
push
xchg
pusha
mov
insl
sub
xchg
pop
xor
aad
dec
fiaddl
rolb
sub
add
ljmp
mov
sub
inc
pop
add
mov
in
push
inc
push
adc
imul
push
add
xorl
adc
jecxz
jnp
pusha
mov
jle
push
sub
dec
int3
fists
decb
pop
xchg
sbb
or
mov
xchg
cmp
mov
push
push
cli
and
inc
adc
cli
repz
and
jmp
test
out
push
inc
pop
sub
cwtl
ja
jae
popf
adc
add
push
dec
or
mov
pop
jge
or
repnz
pop
mov
adcl
insb
dec
cmpsl
inc
rclb
push
xchg
pop
push
xchg
jg
push
push
fmull
xor
cmp
fs
inc
mov
pushf
stos
push
or
cmp
xchg
rclb
fisubs
das
pop
lcall
sbb
jb
dec
lods
pop
push
insb
movsl
fistps
or
rcrb
cld
pop
std
add
pop
enter
sarb
cld
jb
pushl
loopne
push
jp
movsl
add
and
mov
les
cld
xor
adc
les
inc
test
and
pop
ret
inc
xchg
pop
pop
out
movsb
jae
sub
cmp
ljmp
inc
lret
xchg
xor
mov
push
adc
add
repz
push
jne
pop
popf
push
mov
pop
jg
add
iret
mov
dec
popl
push
pop
mov
sbb
xlat
cvtpi2ps
xor
mov
mov
rclb
lods
outsb
mov
imul
xchg
inc
inc
dec
fdivrl
lock
jns
jnp
dec
in
or
sub
addr16
mov
add
negb
dec
leave
pop
fwait
cld
dec
lods
arpl
pop
test
pusha
and
ljmp
fstps
lcall
mov
mov
xchg
pop
daa
and
imul
enter
sub
insb
dec
xor
sarb
mov
dec
lcall
xlat
mov
popf
mov
mov
aam
pop
daa
decl
or
lret
sarb
bound
cli
insl
inc
xchg
dec
jne
lea
cwtl
jne
pop
xor
cwtl
jmp
movsb
sahf
mov
out
in
mov
inc
lods
mov
mov
adc
out
adc
cmpsl
aad
addr16
pop
and
or
jne
aaa
xchg
jo
les
xchg
inc
push
pop
jp
mov
psadbw
cmp
sbb
or
mov
subb
push
pushf
enter
pop
sub
popf
in
stc
ret
sub
inc
mov
insl
ja
shll
jae
inc
xorl
inc
cmp
mov
movsb
dec
mov
jg
pop
dec
sbb
fisubrs
jnp
mov
or
loop
lock
sbb
leave
dec
cmp
les
mov
loope
popf
imul
and
aas
push
pop
mov
xchg
pop
jge
fldt
stc
adc
call
cli
inc
push
outsl
outsb
repz
repz
imul
cli
bound
and
jno
xchg
andl
push
fdivrp
scas
and
pop
jns
rclb
inc
pusha
jecxz
lret
adcb
jp
jns
adc
cmp
push
je
push
cmp
imul
pushl
rolb
stos
mov
fnstsw
mov
rorb
inc
mov
out
ret
popa
or
jne
xchg
mov
sub
push
stos
mov
mov
adc
or
mov
ficomps
in
sub
cmpsb
push
dec
out
lods
xchg
inc
push
scas
mov
loopne
xchg
iret
mov
cmc
or
outsl
jg
and
push
xchg
stos
aaa
xchg
xor
outsl
rcrl
cmp
test
stos
aaa
ljmp
pop
dec
sub
movsb
stc
xchg
nop
push
es
rclb
int3
xor
in
jb
xor
mov
shlb
add
jno
push
int
imul
loope
mov
je
sub
leave
sbb
shrb
push
das
add
adc
cmc
sbb
stc
xchg
loop
ds
adc
aad
outsb
mov
push
and
aaa
xchg
xchg
addr16
insl
cmp
push
adc
mov
jecxz
or
or
fwait
xor
xor
les
xchg
sub
sbbl
pop
cmc
xchg
mov
loopne
sbb
shr
push
dec
cltd
xchg
fwait
test
fnstsw
jb
xor
loope
imul
and
push
int3
outsb
cmp
mov
mov
xchg
cs
pop
insb
fs
xor
push
push
repnz
aam
xor
orb
xchg
mov
adc
push
test
jae
loopne
js
pop
add
loope
les
frstor
cs
adc
pop
add
ret
and
in
mov
adc
mov
int3
cmpsl
mov
or
arpl
cmp
lods
lock
loopne
pop
pop
dec
xchg
pop
push
sbb
je
sbb
mov
fs
xor
test
sahf
movsb
fbstp
nop
cmpsl
fistpl
testb
push
add
xchg
ds
pop
orl
mov
stos
push
mov
or
gs
aad
dec
fcomps
int
xchg
sahf
push
adc
divb
cmp
sbb
test
xorl
or
jae
push
mov
mov
punpckldq
cmp
and
roll
mov
push
mov
adc
push
jg
ret
or
imulb
jle
stc
out
fdivs
insb
inc
mov
mov
xlat
aad
rcll
xchg
idiv
mull
int3
or
inc
sti
lcall
and
out
pusha
mov
sub
dec
or
push
stos
and
cltd
aad
ret
inc
rorl
popf
shrl
nop
sub
mov
stos
dec
inc
inc
nop
lret
cmp
jl
xor
in
mov
cmc
dec
dec
leave
xchg
adcb
aad
jnp
jnp
imull
jbe
sbb
or
adc
bound
sbb
xchg
mov
movsl
inc
loopne
negl
ds
sub
fs
and
or
and
pop
and
jp
subb
mov
leave
sbbb
lods
mov
jp
add
inc
enter
scas
sarb
stc
pop
scas
cmc
scas
popl
sub
les
xor
aam
pop
dec
dec
xchg
ficoml
cli
flds
jge
pop
mov
add
ljmp
lds
cmp
scas
repz
lret
es
cmp
xor
cmc
testb
jae
mov
mov
cbtw
pop
jno
push
leave
ret
sbb
sbb
lea
inc
cmp
jp
and
cmp
je
xchg
pop
fs
rol
outsb
arpl
outsb
mov
fwait
aad
in
movb
sbb
cs
mov
mov
xchg
in
mov
popf
or
std
inc
fildl
movb
pushf
out
adc
xor
fxch
mov
sub
js
xor
push
rcrl
into
popa
jle
lret
xor
mov
outsl
pop
push
leave
inc
stos
stc
mov
xor
test
sub
das
add
xchg
enter
sub
push
mov
mov
in
or
mov
ret
and
out
xchg
les
ja
sub
add
pop
adc
xor
imul
aam
movsb
xor
cmp
jne
mov
btr
hlt
stos
daa
sbb
mov
xchg
push
mov
incl
lock
xchg
enter
add
mov
mov
pop
cmpsb
repz
cmp
divl
sub
sbb
and
les
pop
and
jno
xchg
jp
fidivrl
fnstenvs
xchg
cltd
inc
loope
cmp
iret
les
push
fnsave
xchg
lret
lods
mov
jo
test
mov
jo
daa
adc
dec
out
arpl
cmpsb
pop
add
imul
and
cmp
gs
xchg
push
scas
push
loop
insb
xchg
mov
push
cwtl
sbb
push
insl
xchg
sub
repz
mov
aad
test
mov
mov
ljmp
pop
mov
push
cltd
dec
notb
clc
dec
jmp
jb
aaa
cs
out
inc
repnz
daa
push
out
cwtl
lock
cmp
outsl
mov
popa
xchg
out
add
pop
ljmp
jp
sub
je
inc
sbb
add
ss
push
pop
mov
pop
jg
insl
mov
js
or
imul
mov
inc
in
pushf
out
sbb
lea
push
sar
jno
mov
lods
mov
lods
sbbb
push
pop
cmpsb
idivl
loopne
lret
add
dec
es
inc
out
cwtl
lcall
push
sbb
mov
mov
pop
sub
mov
mov
inc
pop
or
pop
and
mov
jecxz
push
adc
loop
jnp
xor
inc
int3
fdivl
fcoml
push
mov
push
and
or
xor
inc
dec
push
in
push
repnz
mov
xor
push
mov
scas
cmpsl
test
repz
iret
andl
sbb
and
push
sub
push
jo
sbb
repz
test
mov
lds
sar
and
inc
aas
les
fstp
jle
xor
pusha
ret
imul
inc
nop
es
mov
in
leave
imul
xlat
imul
jne
jns
push
aad
lds
pop
addr16
ja
inc
lret
dec
pop
loop
pop
sbbl
roll
xchg
cmp
ret
leave
add
std
hlt
sbb
in
add
repnz
es
lret
jecxz
ss
mov
hlt
add
ror
jle
mov
sbb
push
popf
imul
mov
lock
inc
stos
mov
ljmp
neg
fst
fs
sub
loopne
lahf
xor
pop
and
sti
jno
jmp
mov
das
out
inc
dec
add
out
pop
mov
sbb
ficompl
push
dec
cmp
jge
mov
std
fiadds
mov
adc
popa
aad
adc
sbb
shlb
xor
dec
fs
fcmovb
xchg
mov
jmp
pop
cltd
pop
lea
or
or
stos
shll
or
mov
test
stc
pop
adc
lret
dec
or
and
scas
pop
pop
repnz
aam
cmpsl
xchg
shrl
dec
ljmp
sti
inc
xchg
lds
orl
mov
push
or
jns
jmp
in
out
lds
mov
popf
das
adc
mov
mov
inc
sub
jno
gs
dec
mov
push
test
enter
cli
sub
fcompl
xor
push
sub
pop
cwtl
jae
and
dec
and
popa
bound
cmp
sahf
mov
jge
sub
lock
nop
jnp
xchg
lods
jmp
xchg
or
pusha
lret
pop
add
push
lds
push
push
xor
leave
ret
pushf
sti
test
arpl
inc
xchg
pop
insl
stos
das
dec
xchg
loop
scas
sbb
movsl
loop
sub
stos
popa
imul
jae
xor
lret
ljmp
clc
inc
push
dec
or
mov
jne
sub
cmp
cmc
mov
push
mov
adc
insl
sbb
test
lret
fwait
lcall
sarl
add
ret
stos
push
rorb
icebp
mov
pop
mov
dec
sahf
mov
ds
dec
cmp
popa
jge
fistps
mov
pop
add
cli
es
adc
inc
push
inc
inc
lods
adc
jbe
aas
fs
push
push
sbb
mov
nop
sbb
inc
loop
or
xchg
adc
sbb
fwait
adc
movsl
scas
dec
js
mov
pop
jne
pop
mov
imul
adc
sbb
xor
xor
lret
and
outsb
and
fsubs
xor
pop
inc
dec
hlt
mov
cmpb
jmp
dec
add
xor
loope
repnz
jo
lea
and
jbe
push
or
pop
in
and
mov
cmp
pusha
hlt
dec
and
lods
lahf
mov
aaa
fstps
ret
sub
xchg
adc
mov
rcrb
pop
jae
test
imul
fs
cli
push
or
pushf
je
addb
dec
xchg
int3
sbb
add
popa
cmp
adc
add
negb
xor
mov
ror
stc
je
andb
jne
clc
sti
jecxz
imul
mov
fsubrl
daa
sbb
inc
add
xlat
sub
pop
cmp
jge
aas
mov
mov
xchg
cmc
clc
xorb
dec
sub
push
pop
cmp
cmp
pop
int3
cld
jmp
mov
fadds
inc
mov
or
cmpsb
sbb
push
xor
cwtl
mov
inc
ja
sub
inc
shlb
mov
gs
aad
pop
mov
lods
pop
lahf
sti
or
sub
push
sbb
add
mov
addr16
jo
mov
cmp
adc
test
jns
pop
adcb
arpl
aas
in
out
les
jo
ret
lea
xchg
inc
add
cmp
imul
out
lock
mov
inc
fnstsw
test
mov
adc
shlb
sbb
les
aad
hlt
mov
int3
jp
test
mov
mov
fisubrl
adc
mov
push
mov
cmp
xor
xor
push
sub
mov
pop
lret
push
enter
adc
pop
jb
cltd
in
xlat
inc
adc
js
jne
insb
mov
push
adc
mov
pop
push
lret
rolb
sub
ja
mov
mov
pop
jmp
xor
xchg
call
push
sub
push
sbb
loope
xchg
mov
mov
in
das
sbb
jge
and
adc
pop
loop
xor
or
cmp
imul
mov
adc
jo,pn
lock
testl
jge
push
jle
inc
pop
mov
adc
cmp
cltd
inc
in
scas
mov
mov
int3
cli
or
js
jge
movsb
cmp
xchg
scas
daa
mov
gs
mov
in
rclb
push
push
sbb
inc
xchg
cmp
mov
es
xchg
jne
add
xchg
mov
inc
or
jecxz
inc
adc
imul
into
jge
negl
xor
cli
cld
pop
mov
rcrb
ds
aad
dec
out
mov
test
add
stc
push
jl
int
sub
mov
sub
movsl
mov
out
push
pop
loopne
fcmovnu
mov
lret
push
fwait
in
or
aam
jmp
mov
xchg
cmp
shlb
and
cmp
test
push
andl
jecxz
sub
into
test
ja
mov
and
add
cli
inc
sub
cli
xor
sub
cmp
fcomp
out
stos
aas
push
daa
mov
ret
push
test
jmp
outsb
aas
push
sbb
cli
sub
fldcw
mov
loopne
jno
pop
rorl
stos
pop
fists
mov
push
mov
test
xchg
pop
pop
ret
cmp
cmp
in
add
sbb
outsl
lock
jg
dec
xchg
xor
bound
cli
pop
imul
inc
mov
fnstenv
or
xchg
inc
fwait
push
push
iret
inc
test
dec
cmc
adc
in
and
outsb
or
and
insl
sub
aaa
mov
popf
or
push
or
test
push
push
gs
cltd
xlat
rcr
add
inc
mov
loope
mov
pop
mov
pop
negl
xor
pop
jge
mov
push
cmp
sub
in
mov
push
mov
xor
sti
sbb
xchg
sbb
xchg
pushf
clc
xchg
xchg
loop
aas
stos
mov
scas
adc
adc
stos
es
adcb
sti
lret
dec
inc
sub
ljmp
push
clc
js
jmp
and
movsl
shlb
xor
pushf
aam
mov
mov
jl
mov
imul
insb
push
mov
xchg
mov
loopne
inc
jecxz
push
out
out
mov
loop
hlt
fadd
cmpsb
push
movsb
hlt
add
cs
into
scas
jns
xchg
fcmovne
xor
push
lea
add
inc
sub
xor
dec
lcall
add
inc
fsincos
cltd
mov
nop
lds
push
incb
testb
repz
xchg
sub
les
xor
dec
mov
inc
cld
jmp
dec
in
fstl
dec
test
jbe
jmp
adc
lea
dec
adc
mov
jg
cs
push
push
pop
sub
in
int3
inc
sub
dec
outsl
jne
sub
mov
add
push
sbb
adc
insl
shlb
hlt
rcrb
loopew
clc
sahf
cmc
jecxz
pop
cmp
aam
sub
sub
jae
cmp
shll
pop
aam
or
movsl
insl
loopne
popa
pushf
scas
mov
pop
inc
pop
ror
sbb
or
sbb
imul
pop
fcmove
xchg
adcl
mov
loopne
in
orb
or
nop
scas
cmp
or
idivl
lret
rclb
xor
frstor
xor
ds
dec
cmp
mov
sti
movlps
pusha
out
imul
lcall
jle
pop
std
pop
icebp
jo
inc
jne
cwtl
or
lods
popa
xchg
es
dec
push
fwait
adc
push
mov
call
nop
cli
adc
lcall
js
ret
jae
jmp
in
shlb
ret
repz
ror
and
jge
push
push
data16
or
movsb
in
ret
xchg
push
fnstenv
push
ja
cs
mov
popf
orl
jns
xor
and
gs
fcmovnb
stos
xor
mov
xor
sti
cmp
fistps
sbb
vpcomuw
int3
xchg
push
outsl
dec
or
inc
inc
push
daa
pushf
mov
insb
bound
inc
push
xor
push
mov
test
fcmovu
jno
lds
sbb
fmuls
mov
rorl
or
and
outsl
arpl
sub
inc
push
ret
cmpsb
jmp
mov
jo
pushf
pop
repz
or
mov
das
cmp
push
mov
into
mov
int3
mov
mov
out
add
inc
xchg
in
insb
push
sbb
mov
mov
xor
nop
lea
ror
test
ds
clc
dec
adc
loope
jo
mov
and
or
inc
lret
jle
push
lret
push
inc
xchg
stc
andb
xchg
sub
mov
push
and
out
sbb
and
sbb
test
sbb
dec
xchg
cmc
sbb
pop
adc
add
jnp
test
fstps
jns
je
xchg
mov
pop
loop
jns
mov
adc
mov
pop
xor
loop
in
pop
fildl
add
cmp
std
pop
push
sub
xchg
add
movsl
jno
pop
stos
aad
xchg
jns
scas
and
stos
inc
loop
sbb
and
jb
outsb
ja
sub
inc
repz
xchg
jae
or
xor
or
jmp
push
xchg
xor
or
je
enter
in
imul
insb
into
push
fsubs
in
cli
xchg
movsl
push
pop
inc
sbb
addr16
inc
cmpsb
sbb
adc
frstor
arpl
iret
sahf
daa
or
mov
sub
gs
jg
jbe
out
fcomip
cmp
cmpb
popf
push
mov
add
push
mov
lret
mov
inc
mov
faddp
stc
sub
iret
cmpl
mov
cmp
in
int3
adcl
jp
movsl
jbe
std
cmc
cmp
mov
inc
popa
sarl
cmpsl
stc
mov
mov
adc
je
cwtl
or
jmp
adc
out
cmp
mov
in
cmc
push
mov
rolb
sub
insl
jmp
adc
ds
push
push
xchg
push
add
daa
ficoms
sub
mov
adcb
jns
and
sbb
push
mov
push
test
scas
jl
adc
push
loop
mov
xor
push
shlb
cmp
pop
roll
lods
adc
push
adc
cmp
cmp
mov
dec
rcl
xchg
mov
xchg
cld
into
mov
lods
jbe
push
cltd
hlt
fstl
mov
jo
adcl
cli
jecxz
in
push
into
dec
mov
test
sub
repnz
pop
add
adc
inc
jp
mul
test
add
inc
cmp
pop
sub
mov
inc
jmp
iret
mov
call
push
pop
fbstp
stos
outsl
imul
add
pushf
dec
scas
sub
fxch
mov
sti
cltd
std
dec
fsubrs
pop
inc
cmpsl
daa
mov
loope
mov
pop
mov
ja
dec
scas
mov
dec
lret
jg
das
in
rcr
cld
insb
int
fsubrs
roll
push
cmp
fadd
loopne
adc
jno
in
inc
push
xor
mov
test
jge
jle
and
mov
mov
and
adc
mov
test
fstpl
lods
add
jle
in
divl
jp
out
hlt
mov
into
orb
aas
pop
gs
mov
test
xchg
repz
jb
jne
sbb
cwtl
sbb
sub
inc
push
pop
mov
inc
add
lds
ljmp
and
call
lret
subl
aam
pop
xchg
cmp
mov
test
loopne
pusha
aas
push
xor
aam
add
cmp
xchg
imul
xor
mov
and
and
push
movsb
mov
or
inc
fsubr
xor
rcr
mov
sbb
jno
mov
dec
lret
adc
cmp
aaa
lea
cmp
pop
push
inc
sbb
jmp
pop
pop
loopne
enter
sub
data16
clc
or
flds
jge
frstor
mov
fwait
pop
clc
push
imul
stos
outsb
gs
sub
push
into
adc
popa
js
popa
cltd
ss
out
push
mov
xchg
xchg
stos
mov
push
repz
mov
out
ret
test
adc
sti
jo
shr
xor
push
or
inc
js
pusha
or
bound
adc
xor
xor
aas
push
xchg
in
pop
mov
fiaddl
push
outsl
xchg
enter
or
or
dec
or
push
aaa
test
sub
cs
pusha
cs
decb
adc
clc
and
into
jmp
movb
loope
or
cmp
repnz
out
imul
rclb
mov
xchg
stos
fwait
sbb
cmp
xchg
cmp
shrb
add
or
and
mov
mov
setns
daa
push
ds
push
mov
xorb
fbstp
lods
outsl
arpl
stos
adc
push
mov
cmp
push
cmp
or
jl
add
mov
scas
xor
popa
xor
and
xchg
mov
mov
cltd
ss
data16
sbb
pop
lea
out
xor
or
lret
in
add
adc
cmpsb
add
adc
je
out
adc
js
sbb
jns
xor
out
rcrb
add
xor
add
in
bound
fs
mov
push
xor
das
xlat
enter
sbb
cld
stos
adcb
stc
mov
sbb
sahf
adcb
mov
sarl
addr16
imul
xchg
pop
decl
jge
mov
mov
stos
jns
xchg
xchg
pop
mov
inc
cmpsl
adc
jno
int
mov
inc
cmp
pop
orb
sbb
sti
and
fwait
cmp
clc
ret
sahf
jne
sti
xchg
jp
ljmp
sub
gs
cmc
data16
scas
adc
imul
shlb
push
hlt
cli
sub
mov
push
mov
mov
stc
sbb
mov
mov
into
cmp
cmc
cli
and
arpl
test
test
inc
mov
popf
sahf
sti
orb
outsb
rorb
sub
push
les
in
xchg
lock
scas
xchg
and
sbb
jmp
and
loope
shll
xchg
sarl
stc
into
daa
push
mov
mov
imul
sub
scas
mov
inc
mov
jo
push
bound
fbstp
cmp
xor
mov
xlat
mov
add
outsb
mulb
cwtl
std
jae
pushf
aas
sbb
ror
test
or
lret
jnp
fdivl
sbb
sbb
add
push
push
adc
mov
mov
dec
mov
push
mov
popa
mov
lock
xor
loope
mov
repz
mov
jns
gs
enter
out
push
es
scas
xchg
ds
bound
into
pop
mov
pop
sahf
popf
xchg
pop
rcrl
pushl
lret
or
adc
popa
repz
xchg
cli
mov
mov
ljmp
push
lds
loope
test
popw
daa
jl
jmp
pop
dec
mov
mov
adcb
gs
jae
push
xor
out
and
imul
cmp
adc
lret
dec
testb
or
cmc
push
jle
jge
jg
xchg
and
movsb
adc
and
push
ret
inc
test
or
mov
adc
pop
sti
add
testb
loop
push
test
outsl
push
jo
mul
sbb
and
stc
leave
repnz
add
lcall
gs
je
icebp
mov
shll
mov
and
cmp
inc
repz
add
ss
xorb
push
andb
adcl
clc
xchg
test
out
xchg
sahf
lods
mov
not
lret
sti
and
cld
ja
sahf
dec
push
jb
arpl
out
int3
sti
stos
mov
push
pop
cmpsb
aas
adc
hlt
fs
xchg
xchg
movsb
jg
mov
jnp
stos
call
sbb
pop
je
jp
mov
jg
mov
dec
jmp
mov
out
sbb
jmp
cmc
dec
dec
out
dec
jecxz
fwait
xchg
arpl
scas
cs
sbb
lods
inc
or
xchg
fstpl
xchg
cwtl
ret
fsubrp
adc
push
xor
adc
mov
and
xchg
dec
mov
pop
add
fdiv
das
outsl
js
clc
and
xlat
call
sub
negb
mov
jle
sub
push
outsb
fstpl
in
fisubs
add
pop
mov
jmp
xchg
and
xchg
fcoml
xor
dec
mov
ret
mov
cmp
jb
fldenv
lcall
mov
push
adc
arpl
adc
and
mov
into
push
aas
cmp
fs
or
sti
push
mull
jl
sbb
push
test
xor
arpl
lock
sbb
xchg
shl
repz
jb
subl
mov
scas
dec
xchg
jp
xor
cmp
test
addl
push
movb
sbb
movsb
mov
or
pop
xchg
jmp
pop
sbb
and
movd
test
loopne
ljmp
lods
std
mov
iret
jno
xchg
mov
hlt
xchg
jno
js
enter
std
push
xchg
fldenv
mov
or
cmpsl
inc
cwtl
mov
stc
das
inc
aam
xchg
ja
xor
pop
mov
in
cmpsl
mov
mov
sub
cmc
repz
dec
test
push
aam
jg
adc
xchg
xchg
mov
pop
in
or
repnz
clc
or
mov
inc
insb
js
lods
jecxz
arpl
or
loopne
lret
mov
out
and
xchg
nop
inc
mov
jmp
inc
xorb
inc
je
cmp
test
movsl
or
or
pop
rcl
stos
cld
cmpl
mov
add
div
add
in
sub
push
inc
sub
into
inc
cs
jle
stos
mov
jne
gs
testl
idiv
push
mov
idivl
shr
xchg
call
cmp
shll
lahf
shufps
cmp
loope
mov
add
cmp
test
xor
repz
mov
inc
dec
push
cld
mov
test
sub
or
jne
movsl
inc
xchg
in
pop
fiadds
mov
jo
aas
or
stos
mov
into
add
or
adc
jb
dec
lock
cwtl
aad
inc
pop
push
popf
xchg
and
mov
mov
idivl
adc
mov
lahf
mov
in
sub
mov
mov
outsb
mov
add
sbb
push
in
push
mov
xor
pop
mov
std
stc
shrl
gs
cmc
inc
jnp,pn
and
lds
sahf
out
das
pusha
mov
shlb
lock
mov
mov
popa
fdivr
mov
or
hlt
sbb
jle
imul
mov
pop
or
loope
pushf
inc
mov
dec
add
in
out
mov
scas
andb
bound
insl
lret
pusha
dec
and
lods
jecxz
idivl
pop
clc
xchg
pop
jge
repz
mov
jmp
xchg
push
stos
pop
push
out
lods
les
aad
mov
jl
xchg
xor
loopne
add
push
xchg
jecxz
lea
xchg
adcb
mov
fdivp
xlat
push
inc
leave
lods
jge
out
dec
dec
lcall
cmpb
mov
xor
js
sbb
lcall
aam
out
add
data16
faddp
xor
mov
fnsave
and
int3
push
daa
sarl
dec
xor
pushf
mov
cmpsl
test
loopne
cs
sbb
or
push
jg
mov
frstor
stc
lock
pop
frstor
int3
out
cmpsl
call
movsb
lods
fimuls
movb
mov
xchg
dec
lock
lods
or
andb
std
adc
xor
mov
xchg
mov
ja
imul
adc
add
ror
inc
adc
rorl
pop
jmp
aas
pop
ljmp
inc
scas
clc
sbb
jmp
add
jne
popl
dec
test
xor
lahf
or
test
out
inc
orl
xchg
outsb
sub
dec
ffree
sbb
popa
inc
sbb
pop
dec
jae
lahf
fiaddl
sahf
mov
xchg
repz
mov
test
js
scas
out
pop
loopne
jae
call
in
pop
xchg
xor
arpl
out
sbb
adc
xchg
or
das
xlat
imul
add
jne
daa
xor
imul
out
xlat
inc
xor
dec
inc
into
and
clc
cmp
imul
clc
xor
aaa
pop
aaa
mov
push
insb
xchg
push
inc
stc
jo
cmp
xlat
cli
sub
xor
push
rcl
test
in
scas
rorb
jge
pop
out
mov
mov
adc
add
push
loope
sub
adc
dec
push
sbb
cmp
dec
adc
addl
jge
lret
mov
icebp
inc
scas
test
xchg
jne
sbb
add
out
mov
pop
stos
loopne
xchg
cs
fstpl
add
ljmp
mov
xchg
lock
nopl
jecxz
sbb
shrb
data16
imul
jne
nop
scas
in
sbb
jns
cmpsl
xor
sub
pushf
stc
push
cmp
mov
mov
in
xor
lret
inc
shll
or
lret
out
call
cmpsl
fcomip
icebp
mov
xor
sub
test
and
dec
sub
in
imul
xor
add
jl
ja
scas
orl
jbe
pop
add
xchg
aam
mov
ja
cmpsl
dec
xchg
add
iret
or
test
and
rol
mov
cmpsl
xchg
inc
pushf
outsl
xor
inc
add
rcrl
and
scas
or
inc
sbb
add
aam
and
shrb
dec
leave
pusha
push
inc
fsts
rorl
push
or
sbb
dec
pop
push
mov
cmp
aaa
ljmp
xchg
dec
aad
mov
das
cmp
lds
pop
pop
lock
jbe
rorl
lahf
insl
xor
pop
mov
cld
mov
xchg
mov
push
aas
int3
inc
mov
gs
lock
dec
mov
ret
mov
hlt
sub
in
mull
fs
sbb
mov
popa
mov
or
jo
jl
stos
int
jne
cli
xchg
cmc
dec
aad
xor
movsb
xor
out
leave
gs
sbb
addr16
sub
int3
dec
jmp
dec
faddl
push
stc
mov
fucomip
lods
cld
jle
fiaddl
addr16
jge
cmp
pop
mov
lea
jg
lds
fs
clc
rcrl
mov
lret
inc
lock
dec
xchg
push
loope
mov
sti
ficompl
xor
enter
sahf
addr16
add
add
sub
push
in
or
arpl
pop
xor
cmpsb
scas
xor
adc
ss
fists
leave
cmpsl
lret
sub
mov
mov
xor
orb
and
popa
mov
mov
mov
cmp
subl
adc
outsb
movsb
add
sti
out
push
lea
out
mov
jg
das
mov
push
sub
add
es
pop
cltd
jo
jl
or
movsl
test
icebp
and
jmp
in
add
jo
pop
adc
sub
dec
cmp
jno
mov
paddsb
inc
dec
mov
std
repnz
sar
outsl
pop
nop
lret
pop
fmuls
test
sahf
jbe
ljmp
aas
adc
push
inc
clc
cs
popa
das
xor
aas
ja
xor
adc
pop
pusha
jecxz
outsb
aad
xor
push
mov
push
ret
popa
lret
mov
dec
sbb
mov
in
or
je
fisttpl
adc
jl
iret
jle
jle
adc
sbb
cmovl
popf
pop
shl
mov
rorl
fadds
popf
mov
mov
ljmp
mov
xchg
mov
int3
mov
fsubs
push
aam
shll
xchg
vaddss
xor
orb
xchg
int3
int
cmc
je
loop
cltd
cmp
xor
or
in
xchg
fidivrl
xor
data16
sub
imul
js
cli
daa
outsb
push
popa
outsl
xlat
scas
mov
or
add
das
loope
xchg
sub
gs
cmp
jne
xchg
mov
or
pop
gs
fdiv
xchg
or
jle
xor
popf
xor
adc
ret
pop
or
mov
cbtw
fistpl
out
insb
jbe
clc
cmp
cmp
in
fwait
mov
sub
cmp
arpl
add
cwtl
mov
jb
or
dec
scas
dec
push
in
and
dec
call
and
jnp
xchg
sub
cmp
xchg
mov
pop
sub
sbb
test
cmp
cli
jbe
aaa
push
and
lods
push
add
outsb
and
cmp
cmp
pop
sbb
mov
and
cld
mov
xchg
sbb
test
mov
testb
push
ljmp
push
scas
sub
ja
inc
push
and
fcomi
les
add
daa
aas
xlat
lahf
dec
add
das
popa
scas
xor
pop
and
xor
inc
pop
sbb
push
daa
out
addr16
rcrl
std
gs
jo
insl
xlat
sub
cmpsb
dec
ds
call
pop
cltd
cmp
or
cmp
std
testb
inc
out
bound
icebp
mov
jne
sub
jae
adc
push
cmp
jge
subb
movsl
pop
push
jbe
insl
dec
push
loopne
adc
mov
test
loopne
mov
loopne
repnz
xor
dec
push
push
jae
mov
fxch
inc
in
icebp
bound
repz
test
mov
xor
jle
orl
fimull
mov
or
mov
cmpl
mov
add
cmp
jecxz
movsb
stos
fadd
repz
pop
lcall
lcall
in
loopne
imul
mov
sbb
aad
inc
leave
xchg
and
mov
inc
lahf
or
xor
movsb
daa
push
bound
xchg
lret
js
dec
outsb
test
pop
into
mov
out
mov
shr
push
shl
sbb
push
fwait
movsb
jl
or
mov
lret
push
mov
inc
pushf
xor
jmp
out
cmp
jl
push
cmp
into
cwtl
shrb
ds
and
addr16
cwtl
vpperm
xor
sub
xor
imul
pop
sub
cwtl
sub
ss
sahf
cmp
xor
and
dec
jmp
pusha
movsl
and
sti
stc
pop
push
xchg
insb
outsb
fwait
and
out
and
fistl
hlt
mov
push
fldl
mov
fsubrs
ss
cmpsb
push
popf
mov
mov
add
xor
ljmp
mov
enter
sbb
jl
dec
push
pop
incl
out
icebp
xchg
js
xor
mov
mov
gs
sub
fldt
cmp
test
mov
add
cmp
sahf
mov
sbb
cmp
orl
fidivrs
cs
sbb
jno
out
cmp
xor
xchg
mov
dec
adc
outsb
xchg
out
movsb
mov
mov
sbb
clc
inc
setg
cmpsb
je
mov
dec
das
or
in
or
lock
mov
xor
stos
dec
cmpb
jg
jne
adc
js
shl
sbb
mov
mov
xor
adc
jl
xor
mov
mov
push
cmp
leave
xchg
in
dec
xor
jmp
mov
jmp
insl
sub
arpl
outsb
pop
daa
jne
adc
push
mov
xchg
shlb
call
mov
cmc
cld
push
mov
push
inc
xchg
lds
sub
ss
jge
les
and
repz
out
push
lret
add
push
push
jno
mov
int3
cmp
lret
hlt
mov
push
cmp
insl
add
xchg
dec
mov
fisttps
push
mov
sbb
roll
scas
xchg
or
shll
fucomip
mov
sub
cwtl
nop
addl
rcr
test
bound
and
sub
sbb
push
and
add
cltd
cmpsl
test
pop
dec
fidivs
xlat
daa
xchg
push
cmp
scas
xchg
movsl
adc
pop
loop
shrb
dec
mov
xor
outsb
xor
in
jge
cld
fwait
jb
pop
cli
mov
cmc
das
sbb
xor
pop
lcall
dec
nop
jl
js
sbb
push
sub
in
dec
push
or
sub
add
aaa
mov
jae
lds
inc
or
daa
jo
push
repz
sub
push
fsubr
test
or
iret
lcall
mov
or
push
repz
insl
push
jo
mov
pushf
out
sub
negb
sub
mov
insb
push
inc
cmp
adc
jmp
sbb
mov
mov
add
cmpsb
jp
mov
dec
and
rolb
movsb
pop
mov
sub
xor
fsubrs
mov
jno
sbb
cli
mov
jecxz
mov
jns
ljmp
pop
or
cmpsl
or
out
adc
xor
movsb
in
addr16
scas
ljmp
inc
mov
jg
lock
pop
arpl
std
je
dec
pop
mov
addr16
inc
cwtl
cmp
adc
mov
mov
scas
int
cli
sbb
ret
fsub
sub
call
dec
out
lds
mov
mov
fstpl
mov
out
push
dec
data16
enter
shll
sub
orb
rclb
cmp
mov
hlt
xchg
ficoms
test
leave
or
rorb
sbb
idivb
sbb
sub
sbb
inc
lahf
mov
cmp
adc
insl
push
mov
cmc
test
fisttpll
push
dec
or
pop
cmpl
shlb
out
xor
out
xchg
cli
sub
ds
mov
jl
in
loope
out
js
dec
add
mov
pop
dec
xor
mov
push
jo
into
and
inc
lods
movsb
sbb
xchg
push
lock
fsubrs
lock
cmc
sarb
std
cs
roll
pusha
and
arpl
mov
mov
cmc
mov
loope
int3
dec
sahf
mov
pop
mov
dec
aam
add
adc
cmc
sti
cli
lods
add
xchg
scas
inc
pop
sahf
enter
adc
cmp
sub
cmc
leave
icebp
xor
mov
imul
push
add
sbb
push
xor
add
xor
xlat
int
cmpsl
stos
xor
clc
int
rol
in
sbb
push
sub
push
filds
mov
in
mov
repnz
cmp
test
icebp
sub
jo
xchg
add
adc
mulb
fidivs
scas
ja
arpl
loopne
icebp
pop
cs
jl
xchg
cmp
icebp
mov
fldl
xchg
int
or
cmc
mov
xor
addl
fincstp
imul
and
das
jecxz
sbb
dec
repnz
mov
pop
jge
push
daa
cmp
lds
bound
jbe
push
inc
rolb
sub
mov
mov
add
xor
jne
hlt
inc
aad
mov
cmp
dec
and
pushf
ffreep
repz
test
pop
das
cmp
sub
jae
in
aas
inc
push
xlat
add
and
push
pop
mov
dec
pusha
decl
movhps
mov
jae
xchg
cltd
stos
adc
rol
push
arpl
and
dec
add
push
and
mov
push
fs
cmpsl
fistps
cwtl
iret
addr16
out
xor
xor
adc
xchg
fadd
movsl
int3
push
cmp
stc
xlat
dec
jae
call
mov
inc
cmpsb
pop
fistl
stos
mov
shl
ror
inc
adc
int
push
add
sub
mov
orl
ret
bound
out
enter
jmp
add
cmp
aad
std
divb
int
sbb
aad
test
inc
fs
cmp
outsl
popa
daa
inc
jae
cmp
hlt
imul
inc
jmp
mov
std
pop
stos
sub
or
cmpsl
nop
xor
xor
dec
sub
adc
das
lret
lods
mov
inc
test
test
add
mov
or
mov
leave
js
scas
fcmovu
jno
bound
hlt
sahf
stos
jns
push
mov
xchg
fwait
adc
push
rcr
outsl
sbb
ret
iret
je
cld
jmp
mov
repz
scas
fcomps
xchg
mulb
imul
sbb
dec
cltd
mov
pop
js
cmp
mov
pop
mov
cmp
xorb
push
add
roll
pushf
mov
mov
nop
push
sbb
sbb
and
jne
test
outsl
insb
loopnew
fistpll
cmp
fwait
mov
stos
jbe
lods
push
outsl
xchg
add
pop
dec
cmp
out
or
adcb
cmc
into
stos
mov
bound
pop
incl
add
and
xor
dec
repnz
imul
xor
dec
sbb
or
fbld
push
dec
xor
jge
pop
sbb
orl
mov
clc
jno
sub
test
decl
sub
add
arpl
fmulp
daa
mov
bound
loopne
inc
sbb
fsubl
inc
lods
sub
leave
pushf
movnti
cmpsl
push
lock
cwtl
notl
jmp
add
sub
sub
inc
adc
jo
add
clc
mov
jno
lahf
fwait
imul
sarl
jnp
loopne
movb
clc
pushf
dec
inc
insb
gs
fwait
xchg
test
jge
int
notb
ss
ja
xor
inc
inc
sbb
mov
jnp
cltd
lods
pushf
mov
push
cmp
or
push
mov
aad
xor
xlat
test
fcomps
cmp
inc
std
add
adc
push
jmp
xor
or
ja
insb
and
push
mov
pop
mov
sub
sarl
dec
pop
dec
mov
stos
cmp
fnsave
inc
les
sbb
jae
pop
push
ja
leave
mov
inc
sbb
scas
pop
mov
jmp
ds
out
imulb
bound
lock
xchg
in
push
stos
mov
push
pop
jle
cmpsl
push
inc
in
xchg
pop
and
dec
sbb
sub
jns
cmp
mov
outsb
xlat
jge
add
jmp
xchg
add
mov
in
pusha
xchg
fwait
scas
sbb
popa
outsl
hlt
cmp
call
iret
or
inc
mov
out
dec
push
xchg
dec
lcall
lahf
or
lods
insb
sbb
jg
out
gs
fsts
ss
fsubs
sbb
xchg
mov
cwtl
mov
daa
cmp
mov
bound
lahf
cltd
cmp
fwait
loope
push
andl
mov
in
mov
lret
xchg
movl
pop
addr16
xchg
lret
pushl
push
icebp
jb
test
sub
repz
add
repz
enter
dec
mov
push
xchg
sti
out
add
rorb
out
xor
call
stos
cmp
mull
out
jge
mov
and
cmpsl
push
or
and
out
stos
jmp
popa
push
cmp
mov
push
xlat
mov
mov
in
pop
inc
jg
inc
sub
jae
imul
xchg
mov
in
or
adc
insl
and
cmp
lret
inc
xchg
lods
xchg
push
rcll
loopne
bound
ret
idivl
pop
iret
icebp
lods
pop
ds
push
sbb
movsl
and
xor
xchg
data16
movq
jb
cmp
divb
and
hlt
aaa
add
xor
lret
xor
pop
push
loopne
sub
sbb
movaps
fcompl
call
fsubl
mov
std
sbb
inc
push
scas
sub
mov
aas
movb
xchg
and
shl
or
lds
mov
fcompl
loop
or
push
or
xor
push
fidivrs
movsb
or
cmp
aaa
arpl
imull
sub
movsb
idivb
js
sub
iret
iret
mov
cmpsl
shrb
scas
stos
xchg
test
iret
popl
iret
stos
pop
xchg
sub
stos
cmp
push
cld
add
lahf
mov
mov
cmpsl
lods
or
cmp
inc
loopne
sub
push
aas
dec
mov
insl
das
xor
push
jmp
xlat
insl
pop
cmp
lret
xchg
imul
or
jns
ljmp
mov
nop
push
lock
int
jecxz
dec
push
leave
pop
push
fbld
clc
insl
lock
add
add
out
dec
mov
ja
shll
sub
pop
cmp
subb
bound
int
movsl
xchg
mov
mov
stos
inc
cmc
sub
add
xchg
sub
iret
jbe
pop
xchg
mov
jle
addb
cmp
inc
jnp
xchg
ret
es
fwait
sbb
and
dec
outsl
lock
mov
into
push
sub
mov
mov
inc
pop
fnstenv
ficomps
cmp
jb
lods
mov
sub
sti
lock
imul
aad
and
ds
dec
call
xorl
xchg
fcom
mov
jne
xor
imul
xchg
xor
mov
movsl
xor
xchg
xlat
scas
push
int
mov
out
cmp
mov
into
fwait
pop
sub
in
ret
pop
mulb
es
fcompl
xchg
inc
dec
sbb
jmp
mov
cmpsl
mov
lcall
mov
lods
out
stos
imul
das
mov
imul
ss
nop
mov
rcrl
pop
pop
add
imull
xchg
int3
lcall
xchg
cltd
cwtl
je
andl
inc
lret
jp
jl
and
fcomps
xchg
push
nop
int3
jbe
adc
insb
or
fwait
lock
loopne
sbb
and
clc
andb
mov
test
outsl
push
fimull
pushf
or
popa
mov
rclb
and
testb
pop
xor
adcl
mov
inc
pop
jle
ret
mov
loopne
xor
jp
xchg
dec
aad
aad
mov
fadd
in
or
mov
fcoml
outsl
push
sbb
xchg
lret
and
arpl
sub
xchg
int
mov
jmp
fdivrl
jae
rcr
test
out
fnsave
leave
push
into
push
enter
ss
push
xlat
ret
mov
sti
xchg
sarb
test
out
xlat
faddl
outsb
sbb
lods
or
sbb
out
or
mov
sub
pop
daa
insb
andl
jle
nop
fildll
movsb
cmpsb
in
sahf
scas
mov
outsb
push
fnstenv
mov
push
inc
sub
leave
xchg
cld
mov
mov
mull
pop
lcall
dec
mov
fisttpll
inc
add
mov
add
and
adc
cwtl
lock
sbb
mov
fnsave
lcall
lock
cli
fisubrl
xor
sub
dec
push
inc
mov
cmp
inc
push
leave
adc
jecxz
mov
mov
aad
xor
mov
push
jns
xchg
faddl
stos
push
and
lds
mov
mov
repnz
adc
cmp
pusha
leave
rorb
pop
dec
mov
bound
aas
dec
cli
test
push
or
add
dec
cld
andl
movsb
cmc
mov
dec
scas
fisubs
pop
and
push
aas
jge
outsl
mov
or
mov
add
lret
xchg
lock
xchg
add
daa
sub
lods
shlb
mov
sarl
adc
or
sbb
movsl
add
jae
xchg
ret
frstor
fildl
sub
add
xchg
inc
mul
packsswb
inc
arpl
mov
lcall
push
out
or
or
adc
in
movsb
inc
push
push
loop
inc
out
mov
mov
hlt
ret
pop
ret
aaa
xchg
xor
mov
mov
ret
push
fnstenv
jno
sub
notb
inc
mov
into
mov
movsb
add
ja
cmpsl
mov
jp
repz
fs
or
xchg
adc
push
and
or
clc
inc
ret
jg
push
dec
aas
ret
inc
ljmp
mov
mov
sbb
xchg
dec
add
mov
dec
in
cmc
mov
dec
sub
xchg
push
or
and
fildl
mov
aaa
ss
push
rcll
std
inc
fdivrs
insl
gs
mov
adc
fwait
imul
cmp
mov
push
xchg
push
shlb
mov
mov
aas
stos
scas
mov
mov
sub
mov
sub
enter
jo
xor
or
pop
xor
bound
sub
leave
pop
out
push
rcrb
or
pop
jecxz
in
and
nop
sbb
cmp
mov
jno
sub
xor
fs
xlat
jmp
and
sub
ss
in
test
or
xor
aas
jmp
xchg
inc
and
in
or
lods
xor
fbld
mov
sub
sbb
xchg
stos
pusha
and
jnp
inc
repnz
sub
sbb
pop
sbb
in
repnz
mov
into
es
cmpsb
stos
lcall
scas
insb
xchg
sbb
mov
nop
outsb
add
adc
out
push
add
fbld
jl
cmp
je
add
mov
nop
test
loop
lods
pusha
ljmp
loope
sbb
jns
push
lea
sub
push
push
cmpl
fcomps
aaa
push
addr16
stos
sub
sub
dec
loope
out
test
andl
dec
pop
push
sub
sarb
andl
mov
mov
cmp
lods
and
mov
js
out
mov
mov
cmp
daa
ret
test
inc
mov
push
in
lea
ret
adc
ja
xchg
mov
sub
test
scas
aas
push
dec
cwtl
jne
test
iret
ljmp
daa
jns
add
and
mov
addr16
add
adc
jmp
xchg
inc
adcb
rorl
stos
movsb
cmp
std
mov
lock
aad
push
jmp
dec
jo
loop
sbb
adc
rcrl
ja
loope
scas
and
outsb
dec
loopne
cmp
xchg
outsb
aam
dec
and
movsl
xor
sub
lahf
lods
iret
scas
jmp
clc
rcll
mov
xor
fsubr
push
xor
push
lds
mov
sub
testl
stos
dec
icebp
out
pop
outsl
out
jle
push
or
mov
aam
clc
int3
out
nop
rcrb
fsubrp
sbb
js
leave
inc
outsb
inc
mov
fstl
ret
pop
xchg
push
ljmp
pushf
addr16
sbb
pop
and
push
cmp
sti
cld
inc
into
cmp
in
dec
pusha
push
push
sub
mov
and
mov
cmc
dec
jno
adc
xrelease
jg
roll
jno
jmp
out
cltd
jge
and
scas
std
sbb
aad
repnz
jo
repnz
push
sub
lcall
out
jge
xor
xchg
xchg
addr16
std
mov
mov
faddp
and
pop
mov
jb
mov
out
pop
add
in
sbbl
mov
and
imul
sbb
das
cltd
push
add
push
test
out
ret
dec
push
icebp
mov
int3
inc
leave
push
out
xchg
and
inc
leave
jns
pop
dec
popa
inc
mov
jmp
inc
loopne
xchg
jns
jmp
lret
push
mov
or
pop
jl
add
scas
and
ret
cmc
and
sbb
mov
popf
arpl
insb
cmpsl
shll
ret
icebp
addr16
adc
xchg
xchg
inc
in
push
push
fstps
mov
stos
ror
sahf
imul
mov
aas
ja
jae
jp
sti
or
and
dec
dec
cmp
int3
lds
daa
xchg
pop
inc
roll
cltd
imul
mov
pop
cmpsl
call
inc
outsl
and
rorl
xor
or
stos
inc
nop
pop
pop
xlat
out
push
and
jecxz
pop
in
ret
cmpsl
dec
sbb
cli
ds
lret
xchg
jno
jmp
lock
xchg
fidivl
and
rcll
popf
fwait
mov
out
std
or
add
or
xorb
int3
addr16
sub
lods
cwtl
mov
sbb
adc
mov
ror
ds
or
adc
jae
out
nop
add
into
xor
out
push
dec
push
pushl
and
jg
jl
pop
repnz
jns
sbb
cmp
mov
sub
xchg
movsl
sub
inc
rclb
pusha
nop
cmpsb
mov
lret
repnz
mov
lea
mov
push
jg
and
push
or
mov
xor
cmpsb
inc
mov
dec
sub
sub
xchg
into
dec
or
popa
push
insl
mov
iret
push
icebp
xchg
jg
aaa
sub
std
aad
lret
jae
push
dec
xor
test
aaa
push
pop
mov
jg
std
sar
add
pop
outsl
fadd
cmp
int
leave
jle
inc
pop
jecxz,pn
add
jge
call
inc
andb
in
stos
cmp
stos
jle
out
cmp
xor
ss
repnz
add
push
cmp
stos
pop
rclb
insb
inc
push
test
lcall
dec
mov
fs
xchg
or
aaa
mov
lods
xchg
and
jo
mov
mov
jecxz
jmp
xchg
std
or
adc
jecxz
aaa
sbb
adc
dec
stos
xor
insb
mov
jnp
out
mov
lret
or
daa
les
sbb
mov
lods
cmp
and
cmp
dec
orb
cmpsl
ljmp
loop
xor
pop
dec
out
bound
pop
inc
sub
daa
sub
in
sbb
jns
ljmp
outsb
enter
inc
repnz
push
repz
mov
jne
and
sahf
cmp
lea
and
aas
pop
ficomps
rcll
xor
and
mov
movzbl
xchg
mov
jecxz
mov
imul
fwait
xchg
outsl
cltd
push
push
push
cmpsl
in
test
outsb
adc
loopne
loope
ret
cmp
dec
lret
rcrb
or
pop
out
xchg
mov
iret
xor
jne
mov
imul
xchg
mov
push
sub
cmp
xor
pop
fcomps
jecxz
push
daa
cwtl
stc
cli
call
je
aaa
mov
jle
repnz
decl
jmp
cmc
lock
lds
test
fisttpl
push
pop
into
pop
fs
or
dec
jl
lcall
fs
add
sub
cmpsb
inc
std
iret
mov
add
add
shll
jle
and
stos
xchg
jo
xlat
call
lods
lds
and
mov
scas
jb
and
xchg
repnz
ret
inc
loope
or
fcmovnbe
addr16
in
jg
es
lock
andl
cmpsb
jno
outsb
inc
xor
pushf
sbb
out
push
inc
xor
adc
stos
pop
dec
dec
dec
adc
push
jns
out
lcall
jns
xor
xchg
mov
enter
cmp
ss
mov
sub
mov
out
iret
ljmp
mov
int3
xchg
aad
or
jno
or
ja
hlt
arpl
pop
mov
push
int3
stos
mov
pop
cmpsl
cmp
bound
mull
shl
pop
int3
mov
jge
cld
les
loop
js
rclb
xchg
mov
mov
push
ds
daa
pop
cmp
stc
pop
and
insb
imul
jmp
cmp
xchg
xor
or
mov
scas
cmpsb
into
adc
in
cwtl
xor
mov
sahf
fiadds
loope
shr
sub
xor
sbb
das
or
push
fadds
xchg
cltd
pop
xor
mov
jp
shlb
mulb
stos
icebp
addr16
fsubrl
xchg
xor
ds
scas
cltd
popa
push
mov
sub
push
cmp
int3
mov
mov
bound
sti
andb
add
pop
push
sbb
and
loop
imul
sub
mov
inc
push
sbb
dec
sahf
inc
out
mov
mov
xor
in
pop
in
clc
ljmp
or
jns
repz
and
test
adc
sbb
or
cli
scas
dec
hlt
adcl
cwtl
xchg
pusha
shlb
clc
aam
xorb
inc
movsl
pop
jb
jle
xchg
clc
inc
and
mov
jmp
mov
or
inc
in
pop
push
insb
add
inc
adc
fbstp
mov
cli
mov
mov
nop
xor
and
xor
sub
dec
insb
ret
dec
jae
cmp
stos
ret
fldcw
mov
xchg
fsubrs
test
adc
and
inc
nop
or
push
inc
mov
sbb
jo
cmp
jb
add
clc
subl
hlt
cmp
in
jbe
mov
inc
movsl
out
push
mov
mov
xor
sub
push
in
rolb
stos
aam
mov
shll
mov
fwait
mov
lcall
jns
push
pop
dec
rcll
test
lock
mov
jmp
jp
mov
leave
sub
pop
std
arpl
test
aam
arpl
fcmovnu
dec
xchg
inc
mov
push
jnp
dec
es
movsb
adc
gs
sti
mov
outsb
shlb
stos
shl
sbb
lcall
xlat
pop
sbb
test
push
stos
inc
mov
daa
pop
data16
sub
icebp
mov
fstpl
aad
negb
les
ljmp
in
push
sahf
shr
mov
cmp
sub
mov
cs
popl
addr16
xchg
mov
xchg
loopne
adc
mov
xlat
mov
outsb
pop
mov
dec
add
inc
sti
cmp
fstpt
loope
add
int
push
add
faddl
inc
out
add
mov
mov
fisubrs
mov
lods
mov
and
nop
andl
stos
rcll
hlt
gs
xchg
inc
daa
movsb
in
js
xor
inc
repz
xchg
add
cmp
iret
xchg
sub
fcomp
jle
mov
adc
mov
jge
sub
pusha
call
jo
pop
pop
aam
mov
add
jno
out
loope
cmp
fwait
push
dec
fwait
add
ret
fmul
push
fdivl
into
push
and
scas
shr
jecxz
addr16
or
xor
cmp
push
ficomps
add
test
mov
gs
test
push
jge
dec
repnz
imul
test
nop
cmp
dec
popa
insl
xor
cmp
out
dec
cmpsl
inc
and
mov
in
lret
adc
xchg
lds
icebp
andb
mov
mov
into
mov
repz
mov
call
mov
in
xchg
or
loope
sbb
push
push
push
adc
mov
in
inc
jge
xor
sub
jecxz
cwtl
pushf
adc
xor
imul
pop
or
pop
pop
mov
mov
fists
jo
rorl
fsts
mov
push
and
pop
cmp
ljmp
imul
in
rolb
out
shlb
cltd
cmp
push
cmp
sbb
jb
xor
adc
mov
pushf
push
aaa
popf
outsb
popf
loopne
popf
inc
test
rorl
pusha
pop
pop
adc
xchg
imul
jae
inc
mov
push
loop
mov
sbb
sbb
shll
addr16
lds
popf
adc
pop
inc
sbb
jle
sbb
mov
sbb
sub
repnz
sbb
repz
das
sbb
pop
adc
jbe
or
push
pop
add
mov
loop
rorl
push
jg
lea
out
imul
outsb
fld
add
stc
xchg
adc
test
or
mov
int
pop
cli
in
mov
incb
call
pusha
sub
pop
in
cmp
jne
and
imul
stos
sahf
insl
adc
inc
pop
xor
push
inc
insb
lret
inc
ss
push
adc
jb
int3
nop
dec
sub
pop
arpl
xor
mov
incl
ficomps
int3
test
cld
in
lret
test
imul
sbb
xchg
ljmp
dec
and
push
push
loopne
mov
int3
insl
sti
jnp
inc
pop
xchg
lret
test
mov
outsb
fdivl
into
inc
cmp
lahf
sub
xchg
stos
push
popa
dec
push
mov
fwait
and
shlb
cmp
xor
lahf
fcoms
fisubs
loopne
enter
pop
dec
scas
mov
rcr
inc
and
inc
aad
sbb
push
idiv
lods
daa
mov
jge
jmp
shlb
xor
in
mov
jbe
mov
popf
dec
rorl
rclb
sub
int3
push
fistpll
bound
mov
and
nop
in
fcompl
cli
fmull
rolb
popf
clc
inc
push
xchg
or
mov
sahf
decl
xchg
popw
popf
mov
mov
sub
iret
pop
or
xor
movsb
call
fxch
daa
fldt
or
ljmp
lret
sbb
pop
add
ret
push
mov
or
pop
push
sbb
push
sub
jnp
das
repnz
mov
cmp
shrb
sbb
add
xlat
inc
and
sub
adc
xlat
xchg
xchg
ljmp
cmp
test
adc
jns
dec
out
ret
or
add
pop
ret
pop
sti
sbb
sbb
xchg
fldt
mov
cmc
jns
add
out
sub
jo
addb
push
push
mov
cmp
mov
dec
and
xchg
cmp
sub
push
lds
push
xchg
push
daa
arpl
cld
mov
xchg
adc
fwait
inc
or
xchg
mov
out
jecxz
test
sub
sbb
and
lahf
xchg
pop
cmpl
mov
dec
jbe
jns
adc
or
jne
aas
push
sbb
das
add
push
fistps
nop
lds
movsb
jno
mov
fs
dec
cmp
or
or
fnstenv
and
adc
jle
mov
pop
dec
sarb
xchg
movsb
and
pusha
sub
cmp
jecxz
mov
jbe
ficoml
push
loopnew
iret
mov
imulb
leave
jg
adc
iret
icebp
mov
push
xchg
mov
inc
mov
call
push
dec
ret
or
add
pop
add
lcall
xchg
int
dec
out
push
mov
mov
cld
bound
das
je
inc
stos
pop
lea
data16
in
jnp
imul
loop
cmpsb
in
xor
lret
fbstp
ss
pop
pop
popa
sub
enter
dec
sub
or
fsubl
mov
pop
fnop
enter
loope
xor
movsl
adc
outsb
jae
adc
cli
test
frstor
mov
xor
fstpt
movsl
push
adc
lcall
xchg
pushf
push
jb
sub
cmp
mov
and
lcall
repz
jns
inc
xchg
repz
fs
add
mov
sub
lds
pop
arpl
je
fmuls
enter
scas
jge
mov
jg
dec
popf
xchg
mov
pop
xor
dec
mov
test
and
fcmovnbe
jno
loopne
clc
mov
scas
jge
mov
mov
mov
popa
jne
das
cld
pop
xchg
call
fcompl
mov
mov
gs
out
push
push
sarb
cs
iret
outsl
js
xchg
mov
sbb
outsl
sbb
mov
mov
sbb
ljmp
dec
xor
lret
add
sahf
cmpsw
loopne
xor
sub
xlat
popa
test
pop
jno
fcoml
xchg
jp
call
mov
cmp
sar
fidivs
mov
popa
in
push
mov
mov
push
push
orb
cmp
dec
inc
cmp
pop
fnstenv
sbb
cs
call
pusha
xchg
add
lcall
mov
shl
push
push
jae
and
cld
inc
adc
dec
mov
call
jge
call
or
rcl
xchg
aad
mov
push
call
mov
push
ror
add
fcoms
sbb
loope
mov
push
mov
cltd
adc
in
test
xor
dec
jecxz
clc
insl
mov
int3
jge
adc
mov
push
adc
fwait
mov
or
pop
out
add
xchg
jo
and
lods
or
or
out
rep
xchg
sub
jle
rclb
lods
lock
in
dec
cmp
les
sarl
push
push
mov
daa
mov
or
stos
mov
gs
mov
rorb
mov
mov
jle
addl
adc
xorb
cmp
mov
sub
mov
fisubrl
movl
pop
addb
gs
enter
add
pop
mov
call
imul
jp
insl
clc
daa
jle
int3
inc
sbb
fdiv
bound
pop
mov
lahf
inc
or
xchg
stc
cmp
adc
call
cltd
mov
inc
icebp
pushf
lahf
sbb
cs
clc
dec
or
or
or
inc
cmp
gs
jg
fistps
jmp
xor
inc
dec
imul
mov
outsb
add
in
push
add
repnz
xor
cmpsl
das
cmpsl
pop
lret
stc
ja
or
fldenv
lods
in
test
dec
outsl
mov
in
iret
or
inc
add
insl
push
lcall
test
mov
lock
jne
adc
lock
ror
lock
adc
mov
adc
jmp
lods
or
js
pop
push
add
in
mov
push
sub
add
mov
mull
or
out
cwtl
in
arpl
int3
les
jns
mov
dec
sbb
cmp
leave
outsb
sub
push
inc
sarb
dec
insb
shrl
or
test
pop
sub
mov
cld
mov
out
icebp
adc
adc
inc
and
xlat
cmc
inc
andb
nop
adc
fs
inc
xchg
jmp
ret
pop
inc
loop
test
dec
jbe
pop
movsl
push
je
insb
inc
fstps
push
ficompl
loope
clc
xor
push
mov
mov
add
aad
mov
adc
mov
pop
pop
repz
fiadds
sbb
aam
or
jns
push
mov
xchg
das
mov
inc
cmp
pushf
mov
jbe
stos
cmp
push
aaa
dec
jl
popa
push
mov
jb
loop
mov
sub
xchg
cmp
idivb
cmp
push
in
cmpsb
idivb
sub
xchg
pop
inc
movsl
dec
xor
xchg
xor
mov
push
mov
adc
test
fsubs
cmpsb
outsl
sub
ljmp
rcrb
mov
out
clc
mov
repz
mov
iret
jne
or
sti
imul
inc
add
into
fcmovbe
out
ret
addb
test
sbb
fnstsw
adc
in
dec
push
push
gs
repz
push
or
inc
xor
xchg
xchg
jmp
jle
mov
pop
imul
and
mov
lods
inc
or
or
mov
xchg
insb
add
sahf
push
jnp
push
dec
roll
push
pop
arpl
stos
and
sub
arpl
and
sub
nop
rcll
xor
mov
out
mov
das
ljmp
frstor
sub
sbb
sbb
cld
outsl
push
cmpsl
std
mov
lea
xchg
je
in
pop
xorb
cmp
cmp
pop
dec
mov
add
das
xor
sbbb
outsl
xlat
imul
arpl
loope
lcall
dec
push
fisubrl
add
or
add
frstor
sbb
cli
add
int
mov
mov
aad
inc
pop
insb
fildl
cmpsb
shrb
imul
pop
adc
addl
out
xchg
mov
ds
sbb
adc
test
push
cmp
push
sub
adc
enter
scas
icebp
jecxz
adc
inc
push
daa
iret
popl
or
mov
pop
outsl
scas
inc
cmp
xchg
sbb
mov
xchg
pop
mov
pop
or
gs
das
sub
aas
call
inc
out
imul
lcall
and
xchg
aaa
cmp
insb
push
or
int3
jne
jecxz
xchg
sahf
enter
nop
and
jne
mov
outsl
push
out
int
out
in
pop
bound
loope
adc
push
in
lea
cli
adc
or
jecxz
mov
and
mov
jbe
popa
sbb
add
cmp
into
mov
mov
mov
jecxz
xchg
cmc
mov
cmpl
xor
add
xchg
lret
imul
xchg
jae
add
movl
jl
jl
pushf
mov
imul
sbb
ds
std
test
cmp
inc
pop
divl
nop
ficompl
cmp
outsb
and
dec
arpl
movsb
nop
clc
mulb
jae
call
xor
pop
lods
inc
imul
adc
and
and
sbb
shlb
mov
dec
and
insl
mov
cwtl
pop
leave
out
jne
je
sahf
push
jg
daa
pushf
push
dec
clc
sbb
ja
pop
and
push
fsubl
les
and
pop
stos
xchg
shrl
loopne
adc
pushf
in
dec
ret
xchg
jl
add
popf
push
scas
jbe,pn
xor
or
mov
and
mov
dec
iret
scas
xchg
xor
repz
sub
sbb
mov
or
dec
push
mov
fs
int3
aas
cmc
pushf
xor
js
pop
inc
fimull
or
push
mov
ja
or
cmp
stos
lods
shrb
fdivr
pop
pop
nop
sub
out
xor
cmp
mov
add
lahf
pop
cmovle
mov
xchg
sub
ret
xchg
lea
lock
icebp
sub
pop
dec
or
push
sbb
adc
dec
outsl
imul
pop
outsb
add
and
and
xchg
mov
imul
xor
push
jae
cli
pop
iret
sti
sub
push
sub
push
push
xchg
enter
jns
cmp
fsubrs
mov
sbb
popf
jge
xor
mov
cmp
sbb
mov
lds
push
pop
cmp
sub
out
imul
mov
sub
hlt
mov
fdivs
stc
ret
fucomip
std
mov
or
jae
adc
inc
sub
ffreep
pusha
shlb
arpl
lahf
in
ret
sbb
lret
popa
mov
and
and
sbb
inc
adc
push
jg
leave
hlt
stos
or
sub
fs
test
in
fdiv
mov
filds
inc
or
aas
loopne
sub
cwtl
push
jbe
dec
jle
loop
mov
das
cmp
jne
outsb
ret
ja
jnp
sarb
xchg
sub
das
daa
sbb
scas
xchg
enterw
rclb
rolb
stc
jae
clc
jno
repnz
aad
mov
sbb
cmp
or
inc
pop
lret
fld1
dec
mov
leave
inc
jno
into
mov
push
xchg
mov
mov
mov
loop
movsb
lahf
aad
cli
and
gs
jno,pn
cmpsb
popf
sbb
dec
fldcw
fimull
imul
push
aad
das
addb
push
sub
dec
xor
jl
inc
jecxz
jl
ja
daa
lret
jne
xchg
sub
test
xchg
fisttps
rorb
push
stos
outsb
and
inc
inc
daa
fs
fstl
out
out
shrb
rorb
inc
cmp
xchg
sarb
cld
das
push
repnz
rorl
mov
dec
pushf
lods
and
mov
xchg
push
xchg
std
jns
inc
sbb
pop
mov
or
rol
mov
fisttpl
loopne
fbstp
mov
sub
jbe
test
pop
inc
and
xchg
pop
sub
pop
dec
mov
mov
jbe
push
mov
les
nop
xchg
lret
aam
popf
mov
jne
pushf
mull
sub
cld
adc
bound
jl
lock
loope
cmp
subb
push
or
mov
mov
rorl
mov
xchg
jno
icebp
call
sub
test
xor
xchg
mov
int
enter
aas
and
mov
in
js
aad
daa
lcall
mov
cli
repz
hlt
cltd
xchg
fucom
jecxz
nop
setae
out
sbb
loopne
test
fwait
jb
hlt
imul
mov
mov
fs
stos
xor
out
imulb
jmp
icebp
imul
insl
push
dec
mov
add
pop
push
inc
in
test
xor
loopne
cmc
jne
jae
push
lods
aas
in
sub
in
mov
and
push
dec
ds
lods
iret
leave
mov
sbbl
shrb
cmc
out
sub
dec
out
xchg
push
sarl
mov
inc
adc
lcall
into
out
sbb
xchg
das
push
shr
inc
mov
dec
jns
lods
js
cs
pop
hlt
pop
nop
addr16
jg
call
aad
and
aam
repnz
and
ret
cltd
in
insb
in
lock
aam
jle
xlat
cwtl
mov
lea
inc
jl
ficoms
out
lret
es
or
enter
aas
push
iret
fisttps
scas
adc
jae
mov
leave
rol
mov
push
insl
pushf
cmp
test
clc
nop
dec
mov
hlt
ss
mov
in
push
jno
shrb
je
repz
sub
das
std
xor
and
or
iret
imulb
xchg
into
leave
xchg
xor
mov
dec
test
or
test
add
or
aad
fwait
std
in
outsb
fwait
popf
ret
sub
ret
in
lods
dec
mov
das
xor
xor
mov
and
out
fdivrl
js
fwait
adc
mov
orb
xor
mov
imul
sbb
mov
rorl
pushf
dec
mov
jns
xchg
cmc
xchg
inc
sbb
test
mov
lods
shrb
jbe
imul
adc
inc
rcrl
cmp
and
cmpl
fiaddl
insb
mov
ret
xchg
imul
test
sbb
test
mov
insb
int
sub
cmpb
or
add
and
addps
mov
mov
clc
sahf
test
xchg
sar
or
jl
bound
mov
loope
and
rcl
jnp
out
inc
or
popa
pop
lods
jmp
sahf
rorl
mov
punpcklwd
ljmp
push
icebp
or
adc
nop
jnp
repnz
in
or
or
push
lods
addb
push
iret
dec
and
data16
shrb
fadd
cmp
mov
shr
xor
adc
cs
xor
jno
sub
inc
outsb
fmulp
sbb
jecxz
mov
mov
ljmp
push
and
sbb
jnp
inc
mov
nop
pop
dec
dec
ret
xchg
add
xchg
push
leave
jg
add
inc
and
pushf
push
aam
jnp
inc
fwait
jp
scas
mov
cwtl
callw
adc
xor
pop
inc
inc
test
sahf
add
sub
nop
dec
pushf
xor
out
mov
sarl
leave
dec
test
fldenv
inc
int
repnz
sahf
add
leave
imul
imul
imul
aaa
push
pop
cltd
dec
fbstp
and
in
dec
inc
mov
pop
xor
jne
cmp
jo
inc
sti
dec
ljmp
lret
or
pop
adc
loope
pop
pop
insb
mov
adc
xor
mov
xor
repnz
cld
lcall
pop
push
mov
xchg
into
aad
dec
cli
das
jmp
jle
jbe
xchg
xchg
push
cs
pop
cmc
cltd
mov
loope
push
lock
int3
lcall
data16
mov
iret
jl
xchg
insl
push
out
xchg
and
rcl
leave
fs
xchg
cmc
aas
repz
mov
push
cmpsl
mov
dec
mov
jl
mov
jo
insb
dec
lds
or
dec
xchg
pop
pop
scas
ds
jbe
mov
sbb
jnp,pn
int3
sbb
cpuid
enter
daa
cwtl
outsb
mov
push
xchg
iret
push
fs
inc
xchg
mov
in
iret
lods
push
in
outsb
xchg
mov
jle
add
rorb
imul
jno
adc
dec
ss
sub
cmc
xchg
inc
sub
or
cmpsb
xchg
test
adc
femms
sub
pop
subl
push
jbe
mov
mov
aas
pop
pop
cmp
out
leave
fcmovb
pop
jae
sarb
repnz
lock
idivl
sbbb
mov
or
lret
ss
lahf
ficoms
dec
inc
adc
rorb
xchg
push
jnp
mov
loop
mov
pop
and
aas
pop
into
outsl
stc
xor
scas
xlat
fwait
enter
and
loope
mov
dec
js,pt
ret
fisubrl
pop
pop
and
ret
aam
xchg
inc
jno
fldenv
test
neg
dec
cld
into
in
sbb
addr16
mov
pop
or
pop
or
add
leave
dec
cld
loop
dec
mov
fwait
psubusb
pop
rorl
add
sub
cmp
movsb
fcoml
push
inc
push
mov
jl
pop
cltd
test
pop
rcl
data16
mov
and
xchg
pusha
adc
mov
es
add
inc
inc
pusha
push
lcall
fimull
hlt
iret
mov
or
xchg
cmp
xchg
inc
orb
jmp
leave
and
and
aam
scas
pop
mov
ret
jne
cmc
sub
sbb
roll
daa
call
insb
test
daa
out
xor
out
adc
inc
push
jmp
dec
push
add
clc
cmpsl
jno
cmp
xchg
sbb
stos
inc
mov
mov
aad
outsl
iret
imul
cmp
leave
xor
sarb
jne
mov
xor
xor
pushf
js
push
mov
pop
ja
pop
dec
popf
arpl
xchg
pextrw
sbb
fimuls
popa
add
fdivrl
jmp
cli
stc
mov
push
andb
insb
xor
out
pop
sub
pushf
mov
dec
push
add
adc
clc
mov
dec
jmp
jg
shl
inc
repz
adc
mov
mov
mov
cld
pop
cmp
push
sbb
xchg
adc
das
cmp
push
outsl
repnz
mov
push
shlb
popa
xchg
xchg
add
push
and
xlat
mov
sub
inc
hlt
add
cld
inc
xchg
inc
loopne
insb
cltd
add
loope
out
inc
push
mov
mov
scas
push
fsubl
push
out
mov
jae
lahf
dec
lret
jecxz
mov
pushf
xchg
test
fcoms
repnz
cwtl
xchg
dec
cmp
jmp
pusha
test
fucomi
dec
call
inc
push
xchg
test
mov
pop
insb
adc
rolb
sbb
aaa
mov
pusha
nop
cwtl
jae
test
dec
das
mov
shlb
mov
ficoms
cmp
outsb
cmp
insb
sti
cmp
fnsave
mov
cs
jle
sub
mov
call
adc
mov
xchg
mov
daa
xchg
out
cmp
adc
pop
push
test
nop
jb
aaa
dec
mov
pop
lret
ds
sbb
sub
aam
flds
mov
add
fisubrs
ljmp
popa
popa
xor
test
mov
lock
pop
xchg
xchg
mov
cmp
mov
cmp
fisubrl
sub
mov
mov
push
mov
jge
sti
xor
and
adc
pop
cmp
loopne
in
jl
pop
js
inc
hlt
lods
movsl
sub
mov
je
or
jns
nopl
jmp
lock
mov
outsb
cmp
jo
push
and
aam
int3
pushf
arpl
jg
mov
push
mov
rcrb
fwait
inc
aas
pop
mov
mov
orl
loope
jb
inc
push
daa
pop
loop
push
test
mov
mov
popf
add
lds
or
orb
jno
jo
pop
popf
xchg
icebp
ja
jno
out
lret
clc
imul
mov
mov
daa
ljmp
outsl
out
rorb
aaa
inc
and
sub
cli
pop
mov
in
jl
les
imul
outsl
mov
pop
cmp
sbb
sarb
lea
xor
push
and
insl
pop
jb
ret
sub
cli
ja
rorl
sbb
mov
rcr
pop
push
repz
insl
pushf
fstpl
repz
inc
pop
lcall
add
fnstcw
out
add
pop
ds
pop
shlb
xchg
adc
dec
mov
xor
jb
adc
int3
adc
xchg
sub
cmp
add
push
adc
imul
dec
pop
mov
lock
jmp
pop
in
popf
fisubrs
ffree
enter
pop
sub
and
xchg
push
or
xchg
aad
inc
lret
sub
sbb
push
mov
add
mov
js
jo
pop
inc
cmpsl
bnd
jmp
aad
out
jle
mov
es
cmp
add
lods
aam
lret
push
cwtl
push
pop
cmp
xchg
inc
xchg
divl
pop
adc
je
andl
dec
adc
push
ja
mov
adc
xchg
and
pinsrw
ret
pop
xchg
mov
mov
add
out
movsl
and
jge
mov
and
pop
shl
or
fistps
xchg
push
mov
daa
sbb
push
test
sar
push
out
xor
add
std
rorb
mov
mov
mov
sarl
outsb
pop
faddl
mov
jge
jmp
cmp
je
mov
adc
cli
jp
cmp
into
mov
inc
inc
cmp
adc
loop
mov
loope
pop
lds
fs
xchg
mov
jg
mov
jno
jnp
jno
mov
jns
sbb
xchg
push
mov
push
in
in
mov
fprem1
xlat
movsl
xor
test
push
push
push
mov
in
push
push
lahf
mov
fsubrs
jle
gs
sub
or
xchg
fcmovnb
sarl
sbb
cmp
mov
das
push
sti
repz
loop
mov
xor
inc
xchg
jo
arpl
pop
jb
cmp
pop
sbb
int3
cmp
test
adc
jecxz
div
pusha
sbb
ds
dec
ja
cmp
and
push
ljmp
sub
rcll
or
inc
push
dec
inc
and
dec
or
xchg
insb
setg
push
jle
loope
jno
nop
add
add
imul
das
mov
mov
sbb
lods
xchg
push
hlt
jno
repnz
ja
pop
lods
je
dec
cld
and
xchg
dec
mov
dec
dec
xchg
popa
adc
mov
inc
sub
mov
add
out
or
add
mov
mov
jl
mov
repz
sub
cmp
xchg
push
or
jl
shrb
sub
inc
mov
mov
dec
pop
movsl
cmp
sbbb
cmpsb
mov
jno
push
cmp
xor
clts
sbb
mov
mov
adc
jbe
add
mov
fcomps
add
add
push
and
jbe
jne
cmp
mov
or
mov
cmp
sti
cmp
fs
mov
dec
jae
in
outsl
addr16
out
sbb
mov
dec
in
add
add
dec
inc
cli
inc
in
iret
pop
jo
stos
push
loop
xor
je
popf
in
insb
clc
outsl
xor
jmp
pushf
cmp
and
mov
je
lock
mov
cmp
mov
lcall
sub
roll
adc
push
jge
push
jno
test
sahf
mov
out
addr16
push
jnp
dec
add
out
xchg
cmp
push
pushl
or
stos
popf
pop
stos
test
std
es
mov
xor
lds
or
dec
jl
stc
mov
mov
subl
inc
out
popl
sub
mov
pop
iret
add
pop
sbb
or
and
sub
jecxz
sub
iret
add
xor
fimuls
mov
adcl
sub
mov
dec
or
dec
pop
int
mov
out
sub
jno
daa
or
movb
dec
test
mov
fs
and
insl
jp
imul
test
inc
test
cmp
cwtl
inc
movsl
testl
jae
sub
mov
cmpsl
fadd
inc
pop
adc
mov
sub
insl
xor
hlt
push
pushf
in
jb
adc
inc
inc
popa
pop
out
loope
sarl
xchg
lahf
jae
cmp
pop
mov
sbb
mov
dec
rolb
mov
or
data16
adc
cmp
add
mov
inc
repz
shlb
movl
jo
stc
insl
out
call
out
xchg
dec
dec
sub
mov
dec
jp
mulb
in
loopne
xchg
adc
dec
cwtl
push
lcall
inc
cmp
mov
int3
ret
dec
xor
in
das
sub
or
shl
or
lods
leave
sti
jmp
lret
inc
dec
inc
cmpsl
dec
ss
sbb
js
neg
and
gs
mov
dec
jmp
pop
push
jbe
xor
or
adc
pushf
add
push
test
lret
xchg
adc
mov
ja
aam
pusha
js
movsl
fstpl
push
adc
xchg
adc
dec
mov
arpl
xchg
or
sti
push
into
call
rcl
aam
in
jecxz
mov
fsubs
iret
jae
cmp
addr16
aaa
lods
int3
and
sbb
out
movsbl
mov
and
lea
lret
dec
sub
sbb
mov
or
jle
adcl
cltd
jns
das
in
pusha
mov
and
mov
push
or
mov
adc
mov
adc
lea
lcall
sti
jp
stos
bound
mov
pusha
test
adc
xchg
mov
andb
inc
pop
xchg
jg
jbe
outsl
in
ret
in
dec
add
loopne
mov
packuswb
mov
fwait
mov
dec
pop
pop
adc
lods
xchg
adc
sbb
mov
xorb
test
cmc
push
icebp
adc
ds
addr16
ficompl
xchg
rclb
add
xor
sbbl
or
mov
add
jo
jp
sub
cmp
out
xchg
inc
push
mov
xchg
addb
or
mov
push
dec
push
jo
stos
sahf
mov
xor
sahf
inc
xor
outsl
xchg
push
test
aaa
rolb
mov
mov
shlb
xchg
adc
dec
push
inc
xor
xchg
add
adc
icebp
push
andb
int3
jae
loop
mov
mov
sub
fs
mov
push
andl
or
jno
cs
pushf
lds
pusha
les
lods
mul
mov
xchg
adc
sti
ljmp
mov
fadd
fmulp
ss
fisubl
mov
pop
pop
jbe
fwait
jne
mov
bound
pusha
and
rorl
ds
outsl
pop
fidivl
repnz
inc
jb
pop
cmc
jnp
fimull
imul
xchg
arpl
push
loope
add
jmp
data16
sbb
or
test
rcl
cli
popf
jg
push
adc
dec
cmpsb
or
pop
xor
or
mov
movq
fdivs
aaa
jge
mov
jle
jae
push
out
lret
cli
cmp
jecxz,pn
lcall
movsl
xlat
push
mov
sbb
pop
loop
inc
in
lret
mov
xchg
mov
mov
xchg
mov
loop
pop
into
stc
add
cmp
jmp
popf
sbb
jnp
mov
xor
cmp
jle
shlb
int3
adc
movb
cmpsb
aam
inc
add
call
xor
test
cmp
mov
aas
cmp
or
sbb
jp
mov
lret
bound
out
arpl
imul
adc
push
mov
bnd
cmpsl
xor
jl
xor
fs
mov
inc
xchg
jp
xchg
mov
fbld
popf
pop
and
fwait
push
cwtl
mov
std
cmp
nop
ss
mov
repz
rolb
xor
lcall
jmp
subl
sub
rorb
add
mov
outsb
and
mov
sbb
outsb
pop
das
cmp
cli
mov
mov
js
mov
pop
sub
or
inc
jecxz
test
inc
mov
stos
cmp
dec
pop
stc
test
mov
int3
and
adc
jo
inc
lds
cltd
xchg
push
and
xchg
pop
xchg
push
in
sub
bound
fidivrs
inc
lea
test
test
fwait
xchg
subl
push
and
pop
inc
movsb
mov
inc
movl
pop
xor
arpl
imul
xlat
decl
pop
cmpsl
mov
nop
lods
or
or
jecxz
stos
inc
mov
mov
sbb
ja
xor
imul
dec
dec
lods
or
jo
fisubs
and
jae
sbb
dec
nop
outsb
imul
sub
pop
or
push
icebp
into
pop
ljmp
push
or
jecxz
jb
inc
mov
enter
ret
add
sbb
cmp
pop
mov
and
mov
xchg
cmp
bound
orl
mov
xor
xor
mov
inc
rcrl
mov
adc
dec
test
push
xchg
outsl
jbe
lods
int3
negl
mov
inc
jmp
mov
fcmovb
push
out
and
fisubrs
push
inc
jmp
mov
push
sub
insb
inc
xor
or
xchg
shll
sbb
inc
fmull
in
insl
clc
xor
add
xor
in
mov
clc
xchg
rol
arpl
ss
push
jo
sahf
pop
loop
cmc
pop
loop
inc
jg
push
cwtl
out
or
sbb
fisubl
lea
or
jmp
dec
or
push
dec
push
imul
cmp
xor
cltd
dec
lahf
mov
in
sub
pushf
shr
cli
imul
add
jno
xchg
jge
iret
or
lock
repz
je
fnstcw
pusha
lock
into
movb
sub
adc
dec
ljmp
inc
arpl
sub
push
stos
sub
inc
sahf
xlat
out
xor
adc
andl
xchg
aam
jge
xchg
pop
icebp
pushf
cmpsl
add
mov
jnp
pop
cmp
pusha
push
mov
inc
cwtl
add
mov
dec
pop
icebp
xchg
loop
int
and
in
adc
int3
mov
add
cmc
lcall
pop
scas
ss
xchg
dec
pop
sub
je
push
jno
pop
inc
arpl
es
cmpsb
inc
sbb
lds
fcomps
xchg
xor
adc
lcall
mov
int3
dec
mov
shl
imul
sbb
push
jns,pn
jmp
cmp
cs
lahf
aas
ja
adc
jns
or
fldcw
out
lahf
fdivrl
loop,pn
pop
mov
pop
pusha
jbe
add
pushf
pop
inc
pop
ja
data16
mov
lret
fadd
clc
push
or
jno
mov
cmp
pop
push
fldt
stos
sbb
lcall
shlb
shlb
add
mov
sbb
vmread
subb
rcrb
out
add
repz
mov
dec
filds
adc
cmpb
lcall
movsb
sbb
mov
ficoml
xor
sbb
test
ss
enter
sub
mov
testb
push
mov
fsubs
mov
push
mov
loop
fldl
xlat
movsl
xor
xor
out
aas
inc
or
adc
icebp
push
or
and
and
sub
je
mov
mov
outsb
sbb
arpl
xchg
mov
ja
jp
xchg
outsb
adc
jb
pop
inc
cmp
sbb
jae
xor
enter
inc
and
out
mov
adc
shrl
push
push
add
push
pop
mov
mov
out
dec
mov
inc
sub
fidivrs
jecxz
dec
mov
mov
divl
mov
pop
insl
adc
inc
pop
loopne
mov
mov
mov
sbb
das
pop
dec
jo
fwait
stc
and
icebp
mov
pusha
pop
in
iret
out
or
and
sti
aaa
pop
iret
adc
popa
aaa
jo
adc
ds
cmp
and
push
push
ljmp
repz
and
leave
mov
loope
hlt
imull
mov
mov
add
fimuls
adc
push
repnz
or
jl
inc
xchg
lds
mov
out
fimull
movsb
cltd
add
adc
movsb
ret
mov
pop
jge
adc
mov
stos
mov
mov
push
mov
or
fstpt
and
repnz
repnz
iret
aad
cmp
push
aas
dec
sub
jno
inc
daa
imul
and
jle
aas
sbb
vandnps
cltd
out
jl
pop
cwtl
mov
mov
mov
push
addl
jb
loop
xchg
mov
ljmp
imul
call
mov
bound
dec
movsl
push
cmpsl
fs
in
test
cmp
and
pop
xlat
loop
lock
xor
mov
xchg
ljmp
xor
jno
xchg
xor
mov
cwtl
xchg
push
int
sub
push
jne
mov
repnz
xchg
jns
add
sbb
jnp
jp
scas
ret
addr16
jle
cmp
std
dec
sbb
mov
xchg
xchg
fnstenv
mov
pop
xlat
and
mov
inc
xchg
ss
sub
insl
imull
xor
out
fistpl
cmp
lock
in
dec
inc
test
adc
inc
stos
mov
pop
mov
cli
pusha
rorl
xlat
lret
sti
aaa
mov
inc
adc
pop
inc
sbb
cwtl
lods
xlat
divb
xchg
jno
mov
jmp
or
hlt
fiaddl
es
popa
cmc
xor
adc
mov
or
and
ja
pushf
sbb
imul
pop
or
jbe
loope
mov
mov
nop
cmpsb
rcrl
adcl
movsb
scas
cmp
das
push
push
out
icebp
inc
jle
lret
cwtl
jae
aam
cmpsl
or
sub
shl
fistpl
pop
stc
fistpll
pop
sub
out
add
pushf
lea
leave
cmp
fadd
jp
mov
mov
call
ficompl
jbe
data16
push
fs
push
rcrb
ret
rorl
add
pop
insb
xorb
in
js
loop
in
mov
mov
rcl
xchg
scas
aaa
int3
fsubrs
loop
jae
cmp
js
sti
leave
scas
into
and
push
aam
fwait
mov
enter
outsl
ret
cmpsb
mov
push
into
mov
mov
jl
cli
icebp
mov
rclb
aam
jb
icebp
das
pushf
fdivp
jecxz
add
not
fstl
enter
jg
pop
test
pop
and
and
std
shl
inc
loop
xchg
xchg
xchg
adc
jns
mov
sbb
add
add
mov
sti
daa
dec
jmp
fcomps
xor
push
dec
push
jecxz
stos
mov
jg
or
xchg
mov
add
mov
jno
sbb
loopne
jns
pop
mov
jp
stos
cmp
mov
sub
lret
mov
push
out
or
es
nop
and
mov
xchg
xlat
inc
xor
add
fidivs
cmp
xor
repz
pushf
inc
pop
push
mov
fs
or
or
loope
scas
mov
sarl
mov
je
mov
imul
mov
xor
nop
mov
push
mov
dec
and
sub
mov
xchg
and
sbb
and
movsl
push
outsb
and
push
fdivrl
jae
fsts
cli
dec
xchg
iret
stos
loope
stc
xchg
jl
repz
ljmp
ret
sti
adc
inc
loopne
cmpsb
mov
pop
imul
xchg
inc
into
pusha
jge
fwait
sahf
mov
lea
inc
xor
bound
scas
clc
and
dec
stc
test
xor
cmp
sub
hlt
insl
dec
mov
sub
mov
mov
add
sbb
call
in
mov
and
fisubl
jb
mov
cmp
test
es
shrl
dec
clc
jge
enter
enter
adc
out
test
push
aam
loop
incl
shll
stos
xchg
sub
pop
inc
mov
cwtl
jb
mov
or
into
xchg
inc
push
cmc
rclb
push
nop
test
adc
fistps
inc
add
sbb
adc
movsb
lds
jmp
in
sahf
ret
pop
cmpsb
les
cmpsl
mov
out
stos
pop
cs
inc
push
mov
pop
pushf
shrl
xor
lret
push
sbb
scas
sbbl
into
sub
dec
out
xor
in
sbb
adc
hlt
and
stc
push
test
and
push
and
jbe
sarl
call
pop
and
dec
xchg
mov
cltd
jl
dec
mov
mov
clc
pop
js
lods
cmp
jns
out
sub
fwait
imul
enter
lock
or
lret
in
stc
rorb
jecxz
mov
cmp
stc
bound
mov
pushf
scas
jle
sbb
outsb
repnz
jae
mov
loopne
inc
add
push
leave
mov
addr16
enter
sub
test
rol
les
jb
add
movsl
xor
ss
out
adc
push
xor
mov
data16
aad
iret
rcrl
insb
scas
fs
lea
mov
add
cwtl
lahf
sub
testb
aam
sbb
add
movsl
movsb
leave
es
ds
jb
ljmp
mov
in
or
bound
scas
fdivs
andl
sbb
cmp
aaa
push
jbe
cli
loopne
xchg
out
in
je
mov
mov
adc
jge
in
push
xchg
ret
mov
xchg
mov
popa
popf
cmp
aas
outsb
shl
and
orb
sbbl
pop
into
test
dec
out
add
xchg
adc
pop
push
aam
xor
inc
lods
or
ret
mov
mov
jge
fstl
push
sbb
ds
adc
pop
add
push
push
into
repnz
aad
xor
ss
sub
in
sub
fnstcw
fists
xor
mov
inc
movsb
iret
imull
in
jne
or
arpl
inc
mov
call
sbb
shlb
ds
or
int3
fimuls
adc
lahf
jne
sub
cwtl
imul
insb
jl
bound
dec
cmc
scas
lock
push
fistpll
test
mov
lods
mov
clc
or
push
repnz
lea
jp
int
shll
fs
adc
std
push
insl
sbb
sbb
testl
adcl
loop
jecxz
xchg
sub
push
cmp
ds
lods
jl
pop
or
ja
in
and
pop
inc
sub
arpl
and
dec
sub
mov
adc
add
aad
adc
xchg
mov
ud0
sar
and
sub
movsl
fld
mov
popf
mov
fiadds
movsb
mov
fcompl
mov
pop
jne
movsl
fdivrs
jo
les
cmpl
mov
insl
inc
shll
les
xchg
adc
or
imull
sbb
add
dec
pop
cmp
jecxz
pop
aam
dec
mov
mov
pop
inc
and
ss
mov
into
call
pop
cmp
add
pop
stc
mov
fbld
cwtl
or
sbb
lock
cmc
xor
dec
adc
orl
std
movsb
pusha
repnz
add
or
shrl
pop
adcb
jmp
jb
outsb
pop
lods
xchg
dec
lret
mov
mov
dec
cmp
stc
fcmovne
out
and
rorb
push
sahf
lcall
mov
inc
lret
adc
xchg
push
mov
jb
pop
or
outsb
mov
push
sarl
hlt
cmpsl
sub
in
pop
sub
clc
mov
dec
jns
push
fnstcw
pop
mov
sub
movsb
sahf
xchg
andb
stos
repz
lock
fcomps
push
les
leave
xor
gs
jnp
lret
test
xor
xor
jmp
or
sub
fidivrs
test
cli
fcmovbe
xchg
insb
in
adc
fists
push
hlt
addr16
ret
push
mov
out
add
inc
xchg
pop
mov
ljmp
jb,pn
inc
push
adc
shrb
push
jge
cmpsl
sub
fldenv
rolb
dec
fadd
loopne
pop
arpl
fwait
xorb
xchg
lahf
xchg
leave
push
cmpsl
aas
mov
pushf
xchg
sti
jb
stos
cli
mov
stos
mov
jge
test
adc
jge
imul
js
push
jmp
data16
daa
sbb
adc
cli
jae
adc
push
int
out
adc
hlt
push
js
or
mov
loopne
jp
inc
popf
mul
cmpsl
cmp
mov
mov
pushf
test
dec
mov
ret
in
pop
and
fs
cli
loope
xchg
jl
and
hlt
jbe
mov
or
pop
mov
xchg
int3
mov
popf
lods
sbb
lods
cmp
int3
stos
inc
popa
xor
or
daa
test
ja
out
les
xor
stos
cmp
sub
xchg
push
addb
xchg
ljmp
movb
rcll
and
inc
jge
daa
aaa
cmp
dec
xor
jae
push
fstl
add
stc
inc
mov
xchg
inc
xchg
inc
sbb
scas
clc
mov
js
in
stos
data16
mov
xor
lods
adc
out
shlb
add
bound
mov
sub
sub
fstl
dec
aaa
fwait
adc
pop
in
lcall
test
or
lea
cld
xor
or
test
frstor
std
rcrl
jbe
loopne
movsl
pusha
mov
out
xchg
xchg
jbe
xchg
pushf
adc
in
repnz
pushf
in
add
xchg
into
lret
adc
push
xor
push
sub
fwait
sub
jo
sub
mov
movsb
adc
psubb
lea
leave
shl
xor
xchg
and
jmp
push
dec
subb
cmp
pop
xchg
jo
cmpsb
push
imul
push
jge
aaa
and
or
jae
cmp
jae
scas
or
xor
or
lea
dec
fsubs
int
pop
pop
lds
sarl
ret
jbe
sub
push
push
jmp
and
sub
in
sbbb
adc
aam
or
adc
in
mov
ds
xor
mov
cmpsl
outsl
jp
stos
xchg
xor
push
dec
hlt
test
push
test
pusha
push
sbb
cmp
cwtl
sbb
push
xchg
adc
jmp
arpl
scas
inc
fs
xor
pusha
mov
out
aam
or
xor
sbb
jbe
ja
aas
hlt
pop
mov
sbb
ljmp
stos
jnp
cmp
mov
andl
jns
mov
jno
mov
or
je
mov
in
or
pop
negb
cli
out
dec
jo
or
fs
int
in
push
fisubrs
jp
xor
pop
pop
daa
xchg
pop
pop
movsbl
nop
mov
mov
out
loop
loopne
push
push
pop
jp
outsl
sub
hlt
aam
out
adc
int
xchg
ret
inc
xorl
dec
loop
roll
jp
sub
pop
push
pop
and
movl
mov
xchg
sub
icebp
scas
out
inc
lret
sbb
leave
mulb
mov
mov
js
and
ljmp
jns
lret
add
ja
push
cmp
adc
icebp
dec
int3
lds
or
and
aam
and
adc
or
dec
sti
push
sub
and
mov
cmp
adc
fistl
pop
int3
jl
addr16
movsb
mov
repnz
cmp
call
sahf
sbbl
ss
mov
nop
sub
loope
dec
adcb
push
sbb
pop
out
jmp
outsb
cmp
mov
negb
and
jmp
ja
pop
sbb
cs
cltd
sub
dec
aaa
adc
aam
lret
xor
lds
int3
dec
push
jns
test
in
push
test
jl
gs
out
mov
cmp
insb
aad
mov
cmp
mov
xor
dec
push
int3
clc
fisttpl
fstps
dec
mov
lea
adc
mov
mov
fdivl
fildl
dec
mov
ret
into
ja
sbb
pop
movsl
ds
push
dec
and
cwtl
jle
dec
jne
jge
cmp
mov
sahf
mov
mov
sbb
in
xchg
scas
inc
andb
inc
jno
lock
lds
pusha
mov
mov
mov
es
stc
shll
sbb
mov
cmc
and
jp
jno
pop
pop
and
jne
fnstsw
inc
inc
mov
insb
mov
cmp
pop
cs
mov
xor
lods
lea
stos
xor
push
dec
xchg
push
lea
fstpl
jnp
fabs
pop
loopne
push
pop
xchg
inc
bound
or
jae
inc
in
jge
in
cwtl
aad
fnstcw
sbb
addr16
or
add
lock
jae
lcall
outsl
pop
fistps
stos
ljmp
pop
mov
sub
and
outsb
sbb
or
pushf
movsl
es
fnstcw
push
sbb
xor
jmp
and
cmp
leave
rcll
pushf
shlb
push
ja
imul
push
js
lods
pop
push
dec
mov
xor
and
flds
push
xor
add
sub
sbb
xor
mov
rcr
int
ret
mov
inc
mov
iret
or
dec
negb
adcl
cvtdq2ps
ja
stos
push
dec
lahf
jecxz
nop
pop
jb
pop
cltd
incl
add
jl
ss
sbb
inc
lds
aaa
inc
testl
jae
xchg
xor
cmpsb
mov
jnp
xor
xor
push
jl
jecxz
aad
pop
pop
push
call
imul
mov
push
push
popf
cmc
and
xchg
add
jecxz
pop
nop
arpl
xor
mov
popa
cmpsb
xor
scas
imul
popf
cli
dec
es
int3
mov
icebp
xchg
pop
repnz
pop
mov
shrl
pop
lock
and
push
push
es
xlat
add
push
ds
stos
ja
sub
fildll
mov
push
imul
mov
and
sub
sbb
cmp
sub
inc
out
mov
or
icebp
roll
ljmp
cli
mov
mov
mov
les
jnp
dec
test
jnp
push
gs
xchg
das
rorb
std
sbb
push
mov
jg
sbb
push
xchg
sub
outsb
jo
gs
mov
inc
in
insl
add
xor
inc
repnz
pop
outsb
lods
and
inc
mov
fistps
mov
lcall
insb
push
dec
push
cmpsl
mov
bound
imul
sbb
add
mov
mov
outsb
sbb
pop
lods
inc
ljmp
insb
dec
xchg
mov
movsl
out
loopne
xor
in
out
lock
sub
je
cmp
push
push
aad
pop
aad
cli
cmp
imul
outsl
testb
rolb
test
mov
jmp
stos
out
inc
scas
xchg
jmp
sbb
test
dec
out
xchg
xor
add
and
sbb
sbb
rcrl
xchg
push
mov
insl
xor
std
adc
outsb
sbb
sbb
inc
xor
xchg
and
push
cltd
inc
add
jns
push
push
inc
ljmp
in
ds
mov
iret
fdiv
xchg
mov
out
test
mov
scas
xchg
and
lcall
adc
mov
or
sbb
and
mov
jg
sub
inc
test
add
sbb
adc
loope
mov
push
imul
adc
mov
out
in
mov
mov
push
dec
lret
cmp
lods
mov
loope
xor
mov
loop
add
ljmp
sub
cmpsl
xor
outsl
jne
dec
fwait
sub
rorl
mov
ss
sub
adc
lcall
push
cld
into
ret
cs
mov
jnp
inc
sbb
mov
lds
shlb
jecxz
repz
xor
in
mov
add
pop
orl
sahf
aam
and
fdivrp
imul
call
movsb
pop
cmpl
stc
loope
stos
xor
push
fmull
cmpsb
push
mov
inc
fstpl
dec
fdivs
cmp
push
lcall
mov
push
inc
mov
mov
jg
lret
mov
xchg
ficompl
mov
lock
jbe
stc
jb
xor
xchg
aam
scas
das
xor
mov
fwait
ret
cmp
lcall
sbb
sbb
and
cmpsl
cltd
loopne
sbb
in
movsl
outsb
xchg
pop
into
pop
stos
pop
test
push
add
adc
adc
cmpxchg
sbb
enter
push
sbb
lock
jl
mov
nop
xchg
cld
jae
cmp
pop
adc
loope
lcall
lds
jge
mov
inc
mov
push
lock
test
mov
inc
outsb
call
in
jno
daa
int3
fsubl
mov
or
pop
push
add
incb
mov
inc
and
mov
ss
fisttps
jae
mov
stc
loop
dec
mov
add
mov
sbb
xchg
lahf
jmp
loopne
and
ficoml
ss
cmpl
aam
into
int
push
enter
jnp
sbb
lahf
pop
popf
mov
adc
sbb
imul
mov
sbb
jb
adc
mov
icebp
aas
push
and
insl
push
mov
push
push
mov
into
lea
imul
stos
dec
jle
mov
mov
push
push
repnz
sub
dec
test
pushf
lods
or
in
scas
iret
pop
jo
scas
lock
out
clc
int3
dec
in
js
insl
mov
rcr
cmpsl
xchg
std
dec
jae
lods
lahf
js
pop
jno
jecxz
sarb
cltd
rolb
movsb
jecxz
in
into
lahf
data16
adc
pop
dec
or
insl
fcomps
adc
sbb
jecxz
push
add
push
mov
push
jne
jecxz
outsl
and
sti
dec
pop
aad
pushw
dec
push
xor
push
xor
or
add
cwtl
mov
outsl
jnp
dec
fimuls
int3
imulb
sub
aad
cmpb
in
stos
pop
or
xor
hlt
nop
enter
dec
adc
movsl
lcall
jle
lret
xlat
rorl
aad
xchg
stos
rorl
shll
popa
fcomps
out
push
repnz
pop
outsb
sbb
repz
cmpsb
sbb
das
or
aad
mov
jo
sbb
sbb
into
fidivrs
das
je
fists
sahf
sub
into
pop
pop
or
cmc
out
inc
cmp
test
pextrw
cs
sti
je
inc
mov
call
into
in
fwait
outsl
xchg
scas
or
nop
pop
sti
push
outsb
sub
dec
out
mov
xor
out
sbb
mov
mov
mov
popa
movsl
popa
jnp
mov
pop
sub
dec
jns
cwtl
outsl
push
mov
jne
dec
mov
sub
and
jg
leave
jne
push
popa
xor
adc
loopne
rcrl
rcr
and
jbe
or
aas
mov
inc
dec
out
pop
push
aam
popf
jns
inc
mov
lahf
outsb
aam
pop
addr16
sub
sbb
sub
movsl
addr16
pop
add
mov
ror
lcall
popf
xor
cmp
and
or
popa
xor
into
stos
inc
pop
adc
jae
les
lods
shrl
loopne
lret
and
mov
lods
xor
std
add
daa
pop
and
jecxz
jb
jmp
cli
cmp
cmpl
imul
mov
cmp
add
out
cltd
jge
pop
cs
dec
fldl
cmp
add
std
dec
inc
mov
cli
add
pop
lret
call
add
push
pop
shlb
fidivs
add
clc
cmp
std
inc
repz
inc
sarb
sbb
mov
test
and
cltd
mov
mov
std
mov
mov
test
pop
mov
jmp
push
mov
nop
xchg
cmp
loope
pop
outsb
pop
xchg
mov
scas
pop
stc
xchg
xchg
pop
pop
fnstenv
movl
icebp
mov
cmp
push
xchg
cmpsb
imul
es
inc
or
xchg
outsb
outsl
and
loope
movsl
imul
in
pop
call
push
das
jb
add
add
in
cwtl
aas
push
jbe
movl
push
lods
ds
mov
xlat
dec
mov
mov
mov
lret
ds
and
inc
adc
test
mov
or
out
pushf
push
mov
jl
sbb
xor
jecxz
loope
mov
push
out
adc
sub
xor
dec
dec
and
enter
imul
gs
fs
inc
dec
scas
in
lds
sar
scas
sbbl
sbb
xchg
lock
mov
jmp
imul
imul
sbb
test
xbegin
sti
lret
out
dec
push
xchg
pop
xchg
or
ret
or
jbe,pt
adc
scas
arpl
test
stos
add
push
mov
mov
fcom
push
mov
enter
inc
dec
movsb
stc
sti
jecxz
adc
cltd
scas
sbb
xchg
add
add
mov
push
push
fnstcw
push
fnstsw
incl
jae
cmp
movb
imul
mov
rorb
and
add
arpl
mov
ja
arpl
xchg
xor
aam
jns
push
jmp
pop
fdivs
cmp
mov
add
imul
cld
push
js
dec
mov
out
scas
adc
sbb
pop
pusha
xchg
cmpsb
cmp
movsb
daa
sub
push
jo
insl
mov
dec
scas
das
push
inc
stos
xchg
gs
out
pushf
fs
sub
and
mov
jp
rcll
aad
mov
into
out
push
movsb
adc
hlt
mov
mov
cld
cmp
sub
rcr
add
test
push
add
sbb
inc
cli
mov
scas
push
je
add
push
mov
inc
or
inc
cwtl
hlt
pop
repz
lret
clc
mov
call
jo
and
fwait
ja
xorl
lods
mov
push
in
call
mov
xor
mov
sub
scas
cltd
and
xor
sub
xlat
pop
insb
cs
and
or
dec
aaa
push
mov
test
mov
mov
jle
mov
xchg
xor
out
imul
sbb
fimull
fs
dec
pop
pusha
rorl
jl
push
shll
int3
aas
in
in
jns
rolb
nop
or
mov
jns
xor
das
push
cwtl
push
adc
inc
ja
pop
dec
sub
and
adc
ret
adc
adcl
cmp
mov
xor
jno
jb
cmpsl
xlat
int
ret
movsl
movsb
add
addr16
pop
scas
jecxz
data16
mov
mov
int
mov
push
out
jl
popf
fwait
ljmp
icebp
fld
dec
arpl
dec
bound
jle
cmp
jg
dec
xor
mov
sbb
icebp
jmp
mov
lods
and
int
mov
push
loop
cli
mov
adc
add
pop
fsubs
and
iret
mov
cwtl
sub
fists
and
sahf
movsb
iret
pop
sbb
and
or
les
xor
push
sub
fcomps
scas
ficompl
out
xor
repnz
add
daa
jge
add
xchg
jg
bound
jb
xchg
and
mov
and
push
and
add
ret
sarl
stos
sbb
push
icebp
or
loopne
shll
sub
repnz
scas
repz
incl
adc
inc
and
out
fidivs
push
mov
add
jnp
stc
push
add
mov
or
jnp
clc
xchg
lret
inc
mov
sahf
mov
aas
pop
add
mov
pop
pop
shlb
andb
jmp
ret
jl
pop
lret
jmp
int3
mov
push
cmpsb
lods
inc
in
or
dec
cmpsl
and
fsub
je
push
mov
or
fistps
sbb
xor
or
pop
push
jle
add
subb
addr16
rcrl
xor
dec
jno
lods
xchg
sahf
out
ja
pop
fs
mov
aas
loop
push
mov
xchg
rorl
mov
rorb
cmp
add
xlat
fwait
inc
push
and
cmp
es
push
fwait
xor
addr16
xor
in
mov
jbe
xchg
pop
jl
scas
push
loope
nop
xor
ret
jecxz
lods
sub
pop
stos
jg
cmc
jnp
xchg
inc
mov
jns
jns
sar
test
push
jns
ja
cs
cmpb
mov
adc
loop
imul
lock
cmp
push
in
cltd
push
cmp
imul
pushf
mulb
dec
lahf
and
xchg
xor
and
sarl
das
loop
xor
xorb
xchg
insb
subl
pop
jmp
aam
jnp
jno
or
inc
xchg
jne
jge,pt
stos
jnp
test
in
add
lods
xchg
mov
mov
mov
xor
imul
hlt
or
nop
and
cmc
icebp
mov
xor
push
nop
nop
vcvtsd2si
roll
xchg
lods
sub
push
roll
aas
dec
push
iret
mov
shl
pop
dec
push
push
push
repz
xor
sti
idiv
inc
or
lods
es
jp
dec
js
inc
pop
fimuls
push
outsb
mov
push
add
call
xchg
xchg
inc
stos
inc
mov
pop
jmp
clc
jae
lods
xchg
rol
cld
rolb
icebp
mov
pop
mov
jo
outsl
cltd
or
dec
in
sub
jge
push
sub
cmp
xchg
js
pop
sub
jmp
test
out
imul
cmpsl
stos
sbb
push
dec
in
jmp
das
rcll
in
jecxz
shl
stos
inc
dec
or
cmp
sbb
repnz
pop
inc
icebp
xchg
sub
mov
out
jbe
dec
and
sub
dec
pop
gs
xlat
lds
int
jbe
sub
ss
mull
push
jle
fwait
xchg
pop
and
imul
cmpsb
popa
in
mov
cmp
in
adc
lds
adc
sub
cmpl
fsubrs
std
ljmp
pushf
inc
or
scas
out
mov
sbb
mov
imul
nopl
jno
lret
cmc
mov
jne
push
jecxz
int
sarl
repnz
gs
lds
pop
xchg
xorl
lods
das
cmpsl
icebp
test
insb
test
sbb
cltd
push
dec
test
jae
adc
cmpsl
imul
leave
xor
mov
push
shlb
mov
arpl
xchg
pop
mov
loope
enter
jae
pop
jns
popa
push
cmpsb
jnp
cmp
scas
jl
push
jg
loop
ljmp
cmp
xor
lea
in
loopne
out
fiadds
ss
push
push
mov
and
es
pusha
loop
mull
movsb
push
or
mov
cltd
push
pop
lods
mov
sarl
sbb
test
jecxz
xchg
hlt
sub
adc
mov
pop
insb
xor
test
or
mov
rclb
mov
cs
leave
pop
lods
push
push
lea
outsl
push
int3
sbb
lcall
iret
lock
pop
loope
and
cmc
pop
fisttps
inc
cmpsl
or
xchg
stc
jnp
sahf
xor
jmp
sbb
mov
test
sbb
mov
xor
in
fisubs
ret
in
cmp
outsb
repnz
clc
mov
fsubrl
iret
clc
ret
in
sub
dec
mov
inc
mov
jnp
adc
int
lds
mov
aaa
dec
mov
call
xchg
lcall
cmp
and
fstl
and
aad
cmp
xchg
aas
out
push
sub
call
ja
mov
inc
inc
cs
sbb
mov
repz
lock
ja
enter
aam
pop
jns
jmp
mov
mov
or
test
push
xor
push
jge
in
or
out
pop
pop
aaa
mov
hlt
aad
sub
lods
loopne
ret
mov
sbb
sub
jno
js
insl
enter
cli
imul
jns
push
sub
adc
push
mov
xor
stos
pushf
cmpsb
jb
pop
add
ja
cmp
into
aam
popa
or
jp
bound
pop
test
sub
mov
dec
xor
push
mov
xlat
in
xor
cmp
adc
icebp
fisubs
or
sub
sub
and
xor
jl
xor
push
mov
cmp
insb
mov
insl
in
push
mov
and
mov
xchg
es
pusha
les
xor
rolb
cld
in
push
add
nop
mov
push
mov
fldt
loop
dec
cmp
sub
and
mov
mov
ja
out
xlat
dec
sub
nop
sahf
pop
insb
add
cltd
stc
fcoml
dec
xchg
dec
xchg
repnz
popa
or
inc
clc
inc
cmp
lret
xchg
pop
pop
dec
jmp
push
mov
mov
sbb
out
fnsave
ret
or
mov
dec
stc
push
pop
pop
cmpsb
adc
sub
fstpt
notb
fcmovbe
and
or
out
xor
es
or
dec
lret
fwait
push
push
repnz
fucom
cmp
mov
and
push
ss
mov
pop
mov
xchg
cmp
mov
xchg
subb
pop
sub
dec
xor
or
cltd
aam
jnp
add
fisttpl
inc
psrlq
mov
mov
mov
mov
mulb
int3
mov
call
dec
test
sub
lcall
repz
pop
ss
addb
ss
mov
xor
shl
aam
jmp
pop
jno
inc
jb
ficomps
or
fucomip
mov
or
sbb
sub
fdivs
push
inc
iret
lcall
mov
dec
inc
int
inc
xchg
mov
lods
ds
push
pop
inc
fsubl
dec
insl
and
sbb
pop
movsb
jmp
sub
mov
ror
les
cmpsl
mov
push
js
cmp
pop
xchg
mov
in
adc
hlt
fnsave
pop
xchg
cwtl
clc
lock
push
and
add
mov
pop
cmp
or
scas
add
mov
in
adc
arpl
or
out
mov
jmp
call
fmuls
and
pop
in
and
inc
inc
repnz
and
lock
insl
in
sbb
int3
xchg
pop
iret
cmpsb
popf
xor
sub
repnz
ret
pop
sub
cmp
divb
stos
jae
sbb
adc
mov
sti
cmp
out
ja
aas
push
jecxz
push
mov
leave
shr
mov
scas
mov
mov
loop
and
fcmovu
mov
jg
rclb
outsb
inc
pop
orb
rolb
mov
dec
jecxz
icebp
jecxz
dec
ds
adc
pushf
jns
cmpsb
aas
mov
lock
jp
movl
into
mov
call
bound
test
jmp
inc
push
push
mov
add
mov
lods
mov
pop
imul
movsl
or
add
cmp
cmp
add
ret
and
lock
mov
xchg
gs
loop
push
fucomp
sbb
daa
int3
jp
sub
sarb
aad
test
push
sub
adc
jae
mov
sub
jbe
out
cmp
cmpb
dec
add
adc
arpl
ss
push
inc
adc
mov
xor
and
cmp
mov
incl
pop
adc
ret
mov
mov
ret
lcall
add
clc
xor
lods
jl
pushf
aaa
outsl
nop
mov
add
nop
xor
pop
cltd
call
aas
lock
out
ficompl
mov
push
and
xchg
jecxz
push
inc
shrl
cmp
xor
dec
add
pop
icebp
popf
cmc
xchg
and
add
jnp
inc
add
sub
fs
arpl
add
imul
cli
ret
and
lock
mov
adc
lods
sbb
jns
lods
test
ja
lods
icebp
outsl
and
jne
dec
in
mov
mov
aas
mov
jo
dec
insb
mov
jle
mov
xlat
lahf
aad
popf
mov
mov
movsl
lcall
jecxz
pop
sarb
and
nop
fidivs
mov
or
fildll
call
dec
jno
out
in
stc
lcall
jae
jecxz
les
arpl
pusha
jb
mov
pop
dec
icebp
mov
fdiv
stos
aas
and
dec
jmp
mov
add
cmp
mov
in
shlb
out
sub
inc
out
movzwl
xchg
mov
sub
lods
int
pop
or
mov
xchg
mov
jp
pop
ret
data16
or
jp
or
jae
mov
in
mov
int
mov
shl
mov
sbb
scas
inc
xor
sub
mov
mov
aam
cli
loope
cmp
inc
pop
cmp
sub
fcoml
int3
pop
sub
add
testl
or
xor
cld
and
lcall
out
enter
mov
pop
stc
js
jne
mov
xor
xchg
push
fmull
jb
mov
and
push
into
dec
ja
pop
in
mov
fsin
scas
rol
pop
sti
hlt
into
cmp
ljmp
push
icebp
pop
clc
mov
cltd
fsubrl
sbb
movsl
xchg
adc
pushf
fwait
mov
out
lods
dec
mov
push
pop
mov
or
mov
or
fbld
adc
aam
xor
push
mov
imul
lods
lods
adc
cmpsl
or
dec
sub
add
jae
lahf
pushf
or
and
js
xlat
jp
ljmp
add
ss
lea
in
push
iret
xchg
testb
out
mov
enter
adc
cmpsb
push
xchg
mov
shrb
shll
fwait
mov
mov
icebp
shll
lahf
inc
cwtl
push
shll
xchg
cmpsb
adc
cmc
mov
cmp
and
loope
fisttpll
imul
dec
inc
lods
fnstcw
push
inc
sbb
daa
add
mov
xchg
adc
sbb
push
xlat
aas
daa
adc
sbb
or
js
enter
adc
roll
iret
imul
pop
movsb
ret
xlat
sub
sti
sarb
push
pushf
dec
out
lods
push
adc
sahf
inc
jns
js
push
mov
push
xor
fisttpl
fbstp
call
jns
ds
lahf
shlb
or
movsb
xchg
arpl
vcvtsi2sdl
je
testb
lret
out
movsl
dec
test
sar
inc
sub
fcomp
and
xchg
lcall
mov
pop
mov
sub
inc
aam
js
idiv
fmull
popa
mov
test
and
test
test
add
cmpsl
cmp
adc
loop
movl
jbe
pop
lds
pop
jle
cmp
gs
sub
nop
mov
cmp
scas
bnd
cwtl
pop
cmpsb
xor
add
out
dec
arpl
xor
pushf
sbb
ficomps
in
test
jne
stos
fistpl
call
adc
cmpxchg
or
je
add
xor
aam
pop
dec
out
je
pop
nop
shl
icebp
lret
lods
outsl
aam
pushf
loope
loope
jns
fwait
xor
mov
mov
and
jmp
push
lods
lret
pushf
adc
stos
fucomi
xorb
pop
cmp
or
popf
mov
sbb
push
jl
mov
sbb
stc
push
and
or
insb
fisubl
test
or
clc
or
shll
mov
fldenv
mov
rcrl
lods
xchg
add
adc
dec
or
out
mov
ja
cwtl
cmp
testl
gs
mov
bound
out
cmpsb
fimuls
int
xor
std
test
jae
pushf
ret
lahf
add
sbb
out
inc
push
sub
pavgb
stc
cli
or
sub
ss
inc
in
and
stos
ja
arpl
enter
push
xor
sub
adc
out
loopne
jo
pop
adcb
mov
push
inc
fnstenv
mov
xchg
out
cmc
jns
icebp
icebp
insb
jl,pn
rcr
stos
rorb
mov
fisttpl
aas
fistpl
push
xchg
or
repnz
idiv
iret
cmp
push
aad
inc
or
shrb
jne
mov
call
jb
pop
add
mov
cmpsl
and
jns
bound
icebp
sub
xor
test
js
sub
cmp
fwait
lret
test
sub
add
sbb
mov
xchg
lret
outsl
repnz
sar
mov
cmpsb
rorb
push
lret
je
mov
sub
adc
outsb
fs
cmp
addr16
pop
imul
std
les
data16
lods
push
pop
mov
ss
hlt
push
popa
test
incl
jbe
push
std
adc
adc
xorb
imul
test
popa
lods
mov
add
cmpsb
lea
jno
add
mov
cmpsb
out
scas
cmpsl
jl,pt
mov
aad
inc
xor
inc
orl
stc
dec
and
repnz
cmp
xchg
cmc
adc
mov
fstps
mov
in
mov
hlt
lds
cmc
mov
lods
mov
xlat
xor
lods
cld
sbb
mov
mov
adcb
sti
cmp
and
call
push
mov
xor
cld
sti
and
or
jle
out
dec
mov
bound
enter
dec
cmp
or
inc
sbb
dec
sti
dec
jns
dec
and
insb
adc
sahf
lret
fists
call
xchg
mov
jbe
add
adc
or
push
inc
ss
ficomps
pop
jle
pop
imull
test
lods
rcrb
and
pop
cwtl
xchg
push
sbb
pop
fisubl
loope
xor
loop
fwait
imul
out
outsl
xor
lock
ss
stc
fisttpll
sbb
sub
pop
push
adc
cmp
inc
adcb
pop
mov
js
mov
repz
in
cli
sub
sub
in
addr16
lds
dec
pushf
mov
sarb
sub
testb
dec
js
arpl
ljmp
mov
cltd
mov
ret
xchg
cmp
out
cmc
lcall
clc
ret
ss
enter
loopne
cwtl
mov
sbb
ret
mov
inc
sbb
ja
into
outsb
cmc
aas
sbb
or
jnp
je
movsb
pop
push
dec
mov
inc
faddl
mov
jl
scas
arpl
js
adc
jae
inc
cmp
mul
addr16
shrl
in
mov
outsw
sbb
rorb
cmp
cmp
jp
xor
mov
xor
mov
xchg
loope
sbb
lcall
in
gs
sbb
or
mov
cmc
mov
mov
pop
mov
roll
sbb
dec
inc
or
scas
hlt
sti
insl
aad
pop
dec
stos
arpl
ret
adc
inc
lret
mov
ret
mov
xor
push
mov
jo
pushf
shrb
sbb
stos
cmp
pop
pop
fidivs
stc
inc
jmp
enter
jo
addr16
pop
mov
mov
xor
leave
push
stos
pop
push
imul
dec
sbb
ja
cltd
lahf
lods
out
dec
xchg
into
in
in
outsb
xor
pop
sbbl
icebp
push
cltd
push
mov
sahf
aad
xor
fdivrs
iret
mov
mov
xchg
push
or
pushf
add
xor
jecxz
or
xchg
jp
in
fcoml
and
xchg
pop
jns
xchg
xchg
icebp
push
andb
xor
or
mov
mov
and
push
insl
xchg
dec
xor
push
lret
pop
lcall
pop
sub
mov
repnz
fcoms
das
mov
cmp
rcrl
cltd
pop
ret
and
pop
mov
insl
loope
setg
fs
roll
out
mov
push
sbb
push
sub
dec
mov
leave
adc
xchg
cmc
pop
or
ljmp
dec
bound
aam
std
cwtl
fmull
ficoml
mov
outsl
mulb
jge
and
inc
stos
and
fdivl
cmc
imul
adc
cld
add
xorl
cmpsl
out
dec
out
movsl
mov
mov
pop
cld
jb
push
cmpsb
or
jno
cmc
jle
pop
ds
sub
cmp
leave
mov
push
push
add
push
pop
xchg
dec
or
lret
push
arpl
movsb
mov
xchg
sub
test
jecxz
into
mov
adc
shlb
add
push
adc
pop
push
cmc
push
jo
ljmp
lods
lods
dec
mov
out
in
lret
les
add
and
and
ret
sarb
ljmp
cmp
xor
test
and
jnp
ja
and
push
stos
add
inc
in
sahf
xor
scas
pop
ficomps
mov
ds
jns
loop
sbbb
roll
pop
xchg
sbb
dec
mov
pop
add
mov
add
movl
mov
test
lock
push
sub
push
cmpsl
cmp
in
add
ljmp
dec
sub
rorl
clc
insl
sub
sbb
popa
ljmp
mov
imul
filds
dec
sbb
ret
andl
call
jl
out
mov
js
inc
and
jecxz
out
push
scas
mov
mov
rorl
fidivrs
lea
xor
lahf
adc
das
popf
addr16
add
xchg
repnz
mov
xchg
je
and
push
out
popf
pop
repz
cli
mov
mov
lcall
dec
cwtl
outsb
push
jbe
mov
in
sbb
push
les
xchg
sarb
or
jg
pop
shlb
fisubl
shll
and
sub
out
lock
fsubrl
cmp
jg
inc
and
push
imul
inc
dec
xor
mov
xor
stc
cmp
rorl
add
jb
cmpsl
mov
push
mov
test
xchg
sbb
sub
cmp
add
xchg
fldt
adcl
cld
mov
mov
pop
mov
push
push
addr16
mov
repz
push
dec
gs
inc
lods
orl
das
push
testb
pusha
pushl
std
test
aad
movsl
mov
fstl
mov
pop
pop
ret
jnp
rorl
data16
data16
mov
add
dec
gs
sbb
cli
mov
xor
jge
mov
incb
dec
das
push
inc
push
test
sub
sti
sub
inc
leave
daa
pop
xor
imul
push
mov
jns
adcl
and
push
jp
push
add
push
or
aad
test
jge
shll
push
dec
inc
push
rolb
jns
je
cmp
fs
xchg
dec
stc
call
das
and
aaa
in
cmc
mov
inc
xchg
clc
mov
sbb
xor
loopne
jl
aam
cmc
aaa
mov
js
sbb
xchg
aad
test
enter
mov
mov
pop
divl
sbb
add
pop
repnz
jbe
mov
lahf
ret
clc
in
adc
cmp
outsl
fldl
out
dec
mov
sbb
cld
jp
xchg
dec
jnp
lods
adc
mov
cmp
outsb
mov
cmp
add
add
stos
cmc
leave
jbe
or
add
adc
popf
mov
out
pop
adc
aaa
push
or
loop
jb
out
nop
aas
cmp
mov
jmp
adc
mov
imul
fiadds
jno
pushf
pop
mov
in
fildl
mov
outsb
add
fildll
mov
outsl
push
fwait
pop
lret
ljmp
and
mov
jmp
loopne
xor
imul
cmc
cmp
jno
jmp
jbe
inc
xor
std
jns
loopne
add
push
inc
mov
mov
into
xor
cmp
or
scas
scas
sbb
add
jmp
lahf
add
pop
or
cmc
jns
nop
jge
testl
pop
stc
dec
stos
jg
dec
xchg
sub
push
sub
stc
or
incb
xor
je
inc
rorb
push
js
fdivs
in
cmc
inc
sub
mov
repz
mov
das
or
fwait
in
lods
data16
mov
pop
pop
in
fldcw
pop
stos
fsubp
sti
popf
cli
bsf
idiv
push
jle
leave
xchg
xor
cmp
xchg
pop
mov
aad
imul
jle
fwait
push
add
addl
leave
and
repnz
and
mov
leavew
mov
out
adc
scas
jae
nop
xor
nop
arpl
push
ds
adc
adcl
jge
cltd
mov
mov
cmp
add
call
inc
xor
dec
das
test
rol
rcrb
xor
or
outsl
sbb
pop
jbe
les
add
lahf
cld
je
xor
fstpt
inc
sub
sbb
shll
or
cmpsb
in
sti
mov
ret
adc
or
loope
pop
mov
rclb
sar
mov
inc
frstor
lock
icebp
xor
push
mov
sub
sub
cmp
pop
fistpll
mov
sbb
out
push
pop
adc
imul
mov
jae
dec
aas
movsl
outsl
mov
adc
pop
xchg
dec
pop
mov
pop
in
pop
lock
sbb
xchg
out
push
and
loop
mov
iret
adcb
mov
pop
xor
mov
mov
je
test
push
dec
cmp
into
dec
out
dec
push
lods
inc
dec
mov
or
adc
cmp
cmpsb
sti
xor
jmp
cmp
addb
imul
pop
gs
scas
sbb
jge
fcoml
jp
in
das
sbb
test
ds
pusha
test
rolb
cmp
and
cmp
add
mov
icebp
xchg
jno
pusha
lret
lds
inc
lock
scas
mov
testb
shufps
inc
in
adc
dec
fldl
push
subl
and
in
ffree
fnstenv
fidivs
mov
call
lds
ljmp
jnp
mov
jb
bound
mov
fildl
movsl
sub
and
leave
xchg
mov
clc
scas
xchg
or
mov
fwait
jne
fistps
jmp
sbbb
loope
cmpb
mov
sti
mov
movb
ds
cmp
repz
jg
jno
adc
aad
xor
jbe
cmp
mov
in
mov
push
mov
je
mov
fadds
mov
cld
jnp
shrl
call
int
inc
ja
loopne
loopne
mov
es
jno
add
dec
and
lods
sub
xchg
adc
pop
insl
pop
andl
jge
ss
shlb
inc
lods
fistpll
jmp
in
scas
fsubr
xchg
sti
ret
mov
cmp
lock
mov
push
cwtl
mov
xor
fistps
imul
aas
cmp
adc
xchg
xor
outsl
adc
cmpsl
int3
ja
stc
popf
push
cmp
and
dec
inc
fmull
imul
pop
push
push
push
sub
xchg
dec
adc
mov
insb
scas
cs
fwait
lret
fistps
addl
dec
sbb
test
dec
push
fwait
or
cmp
stc
clc
jne
jg
mov
cli
push
out
lods
ja
mov
into
xchg
jne
fistpll
bound
sub
cld
iret
sbb
and
xchg
mov
cmpsl
xor
repz
mov
movsb
mov
xchg
cmp
lock
xor
sub
push
or
pushf
cwtl
ja
push
fidivl
cmp
inc
in
pop
jo
lods
js
jmp
xchg
cmpsl
cli
xor
out
adcb
mov
mov
insb
pop
inc
mov
mov
scas
fdivs
out
shll
rcll
int3
outsl
shr
inc
mov
jl
xchg
int3
sub
insb
mov
or
and
xchg
jmp
sbbl
jne
int
mov
push
pop
ret
aaa
inc
xor
fidivrs
out
fstpl
sbb
lds
dec
jb
bound
or
imul
lods
cli
jmp
imul
je
mov
pop
mov
into
js
or
in
je
dec
cmc
fs
mov
ja
add
push
jnp
lds
insl
das
push
in
in
and
adc
jns
push
or
pop
popa
cltd
ds
mov
addl
fwait
pop
dec
int
sub
sbbl
ja
jg
icebp
push
stos
mov
sub
in
out
adc
cmp
inc
inc
dec
testl
js
pop
sub
pop
mov
xchg
xor
mov
fldt
sbb
cmp
and
popl
cmp
jp
dec
imulb
xchg
inc
jg
add
xchg
lahf
pop
mov
nop
xor
sahf
leave
adc
mov
test
xor
add
ja
movsl
outsl
sub
mov
mov
icebp
daa
cld
mov
mov
fidivrs
lds
mov
push
fdivl
push
and
scas
mov
pop
cmp
adc
mov
push
and
cmp
push
into
adc
sti
test
add
mov
loopne
jb
fsubrl
pop
imul
ret
orb
jmp
mov
jb
jle
movsl
jbe
loope
push
pop
mov
fstps
pop
out
push
sub
sbb
push
sbb
mov
hlt
inc
jno
les
dec
hlt
mov
xchg
xchg
fmuls
ljmp
push
cmp
out
push
cmc
push
add
mov
in
sbb
insl
cltd
pop
add
lret
fnop
adc
movsb
jae
lahf
and
adc
jo
cmp
sahf
mov
fnstsw
mov
cmp
ss
pop
rclb
fs
jmp
mov
cmpb
aas
das
xor
scas
sahf
hlt
adc
inc
adc
or
jns
loop
lds
or
stos
cs
dec
pop
mov
arpl
int3
cmp
adc
xchg
xor
xor
pop
and
mov
in
popa
mov
jecxz
stc
jae
mov
dec
xor
subl
int3
push
lret
dec
mov
outsl
dec
loopne
lods
ss
jl
jns
out
lock
xchg
das
mov
in
notl
ja
repnz
movsl
sbb
fcoml
sahf
jne
enter
xor
scas
cmp
xchg
cld
outsb
xchg
lea
adc
mov
jge
cmp
or
loop
test
ss
fcmovbe
sub
xchg
and
enter
jg
or
iret
fcom
cmp
push
mov
fdivrl
pop
sub
jns
sub
mov
sahf
das
shr
repnz
add
cmpsb
jmp
in
cli
dec
pop
push
cmp
mov
and
push
stos
mov
mov
pop
loop
rol
mulb
enter
push
lahf
sbb
adc
fwait
inc
int3
inc
cmp
push
sbb
std
lods
and
clc
jmp
mov
clc
out
in
adc
test
movsl
push
cld
mov
insb
pop
adc
fstl
pop
out
dec
in
and
sub
aas
mov
xor
cwtl
out
mov
add
pop
pop
sub
push
jp
subl
fs
push
les
outsb
test
nop
bound
inc
push
orl
push
mov
and
and
rolb
lahf
dec
mov
add
popa
jbe
pushl
sbb
xchg
add
ss
jg
pop
pusha
outsb
or
pusha
int3
mov
xorl
mov
loop
test
loop
push
out
push
xor
test
hlt
push
xorb
add
pop
mov
pop
dec
or
imul
jl
jae
sbb
in
push
leave
jg
mov
mov
and
cmp
sahf
jge
jb
outsl
xor
out
mov
xchg
sbb
aas
xor
mov
jne
mov
scas
bound
and
push
mov
pop
testl
sbb
sbb
adc
adc
adc
or
cmp
ja
mov
xchg
outsb
adc
je
or
push
pop
sbb
lods
dec
inc
adc
and
out
cmp
in
mov
decb
jb
pop
ficoml
xor
mov
ljmp
mov
mulb
popf
stc
repnz
adc
cmp
push
mov
sub
mov
dec
jle
jl
dec
test
inc
cmpsl
fstl
push
xor
inc
mov
out
bound
fldl
cmp
fisubrs
sbb
rcl
hlt
or
sahf
mov
aas
lea
daa
mov
push
and
jno
mov
fs
or
xchg
sub
arpl
stc
std
sub
cld
and
in
mov
push
lret
and
fidivrs
cmpsb
add
fisubl
push
enter
xchg
cmp
fnsave
jp
mov
xchg
lock
mov
lret
dec
inc
mov
rcl
lret
cwtl
mov
mov
shll
or
mov
sbb
inc
jmp
rorb
mov
adc
loop
jnp
pushf
inc
pusha
pop
mov
xchg
dec
cmp
sbb
insl
push
rcll
pop
sbb
in
inc
xchg
mov
lods
daa
jmp
iret
jmp
jle
xchg
xor
pop
jg
arpl
out
cmpl
push
filds
push
adc
or
lds
arpl
jp
sbb
push
pop
pop
loopne
jecxz
out
xlat
mov
push
xchg
mov
lcall
test
pop
shlb
fsubrp
inc
adc
xchg
mov
popf
in
mov
jnp
sbb
xchg
leave
ficoms
mov
add
and
sub
mov
scas
in
test
ret
stos
mov
decb
mov
xchg
das
cltd
pop
sti
pop
xor
mov
sub
rdtsc
xor
cltd
adc
jne
ljmp
ss
enter
or
cli
stos
mov
sarb
inc
daa
jnp
les
leave
add
mov
jecxz
ret
repnz
xchg
jnp
lods
fisubrl
stos
lock
ds
repnz
pop
adc
jno
cmp
cmp
jle
xor
leave
and
sbb
adc
into
outsl
lret
mov
mov
push
imul
aas
sbb
xchg
je
xchg
push
push
sbb
inc
sahf
or
adcl
fistps
sub
sbb
sbbl
ja
rclb
fstpt
mov
add
ljmp
rcrl
mov
rcrb
nop
vshufpd
add
push
mov
test
mov
push
test
push
popa
lret
sub
xchg
roll
push
cmp
out
xchg
dec
imul
jne
and
pop
cwtl
mov
mov
notl
test
add
add
add
jmp
sbb
rclb
lret
bound
inc
jnp
scas
adc
inc
gs
and
inc
lock
and
aad
lds
stc
movb
test
inc
hlt
jl
jmp
dec
cli
aas
pusha
jl
pop
orl
cmp
push
mov
inc
jbe
in
inc
mov
repz
push
inc
pop
fnstcw
ret
mov
ret
stos
loop
xchg
test
lea
mov
dec
cmp
mov
sarb
jnp
int3
push
nop
in
jne
fucom
sbb
aas
jge
insl
push
fidivs
pop
add
loope
nop
arpl
dec
daa
imul
push
out
xchg
push
pop
fsubrs
aad
daa
lcall
mov
rorl
mov
neg
push
jg
aam
shlb
inc
adc
sahf
inc
add
and
loope
aad
lea
stos
test
outsl
mov
sub
ds
dec
mov
fiadds
adc
imul
lret
push
pop
sbb
stc
shll
bound
push
push
sub
or
rcll
and
jle
test
or
mov
push
mov
mov
aam
or
fs
jmp
pusha
mov
nop
lcall
faddl
pop
test
adc
jl
std
frstor
or
mov
push
lock
mov
in
or
fcmovu
jo,pt
push
lahf
sti
jle
hlt
adc
xor
pop
mov
ljmp
jne
jl
fcmovnb
cmc
jg
lods
push
imul
jo
jae
test
xchg
insl
and
setns
shlb
pop
sbb
add
add
shl
lret
cmp
popf
je
push
outsl
jb
mov
mov
int3
pop
mov
pop
aam
mov
enter
push
pop
push
bound
push
sbb
mov
add
or
mov
int
fucom
dec
xor
lods
pop
sub
push
push
lock
xchg
xchg
fadds
push
or
inc
cmc
xor
xchg
ret
cli
mov
jnp
out
cwtl
jae
sub
sbb
dec
leave
mov
adc
ret
jmp
mov
lock
mov
mov
inc
xor
insb
add
shrb
daa
mov
cmpsb
jge
add
das
insl
mov
mov
lret
subb
pop
pop
xchg
push
lock
jle
popa
mov
xor
xor
shll
jmp
lods
mov
aad
inc
shrl
roll
jle
push
stos
cli
adc
subl
mov
jb
adc
mov
mov
pop
mov
cmp
dec
push
loop
fwait
sar
jnp
xchg
add
std
add
cmp
nop
inc
jmp
mov
and
pop
mov
shll
gs
inc
inc
jns
mov
rcr
test
leave
ja
mov
pop
fst
mov
rolb
inc
mov
loop
jl
cmp
xchg
enter
lcall
or
mov
stos
pop
movsb
int3
adc
and
sub
mov
adc
pop
jb
push
pushf
movsl
sbb
and
in
popa
xor
or
shlb
ret
adc
cmp
mov
std
stc
shll
hlt
jecxz
and
mov
fnstsw
out
leave
jo
dec
cmp
sub
mov
sub
in
ja
jmp
push
fisubrs
leave
dec
push
add
sub
mov
mov
and
xor
hlt
jnp
mov
cmp
rcl
mov
mov
mov
dec
emms
lds
add
lds
popf
fldcw
jb
push
stos
ljmp
or
push
test
inc
sti
inc
mov
inc
in
lret
cmp
inc
inc
movl
inc
jae
popa
imul
cmp
lea
push
push
jge
jb
clc
or
push
cld
cmp
popa
in
mov
inc
sub
pop
testl
daa
ja
cpuid
push
out
lea
xlat
inc
add
adc
aas
ficoml
adc
enter
pushf
push
imul
fdivs
mov
aaa
adc
and
in
mov
loop
mov
lock
push
add
jno
mov
mul
push
pusha
imul
cwtl
pop
push
xor
xchg
mov
scas
pop
dec
and
push
push
fimuls
cmp
icebp
cmp
dec
xchg
add
test
cmp
je
cmp
lods
out
pinsrw
xchg
xor
push
addb
bound
mov
daa
scas
xchg
sarl
push
insl
or
shl
pop
mov
adc
sbb
das
adc
cltd
out
cmp
jno
fldcw
call
dec
jno
cli
xor
pop
cmp
fmuls
jl
mov
xlat
out
sbb
jp
cmp
popa
add
and
test
fstps
adcb
scas
cmpsb
jp
jp
xchg
pop
adc
sti
and
fstp
add
fldcw
xchg
jne
add
adc
pop
push
sti
sbb
adc
fistpl
ljmp
push
and
dec
pop
aam
int
shrb
negb
mov
cmp
mov
rorl
loop
ret
dec
inc
sub
jae
mov
lods
xchg
mov
loope
pop
arpl
je
insl
xchg
dec
push
and
sub
push
psadbw
inc
push
ss
pop
insb
pop
xor
fstpt
mov
popf
insb
mov
jl
cmp
lods
dec
sbb
mov
push
dec
movsl
clc
ss
adc
cmpsl
int3
push
mov
mov
sub
imul
xchg
mov
push
inc
ret
clc
adc
sbbl
inc
ret
mov
or
pop
mov
or
test
mov
test
adc
push
movsb
push
fldt
nop
fwait
inc
lcall
mov
fsubrl
test
les
add
cmpb
cmpsl
dec
push
sti
sbb
outsl
sbb
xchg
mov
jle
dec
in
inc
and
ljmp
pop
dec
inc
or
cli
hlt
aad
sbb
xchg
inc
mov
mov
cmp
sbb
cs
aad
add
stos
or
lcall
push
out
inc
testl
mov
daa
add
repz
mov
dec
sub
outsl
push
test
jb
flds
sti
fistpl
sbb
xchg
xor
cmp
xchg
jecxz
jne
test
sete
lret
dec
movsb
lock
or
xchg
adc
jmp
fstl
lret
or
jl
shll
pop
outsl
mov
jo
sub
inc
testl
clc
test
push
cmpb
mov
mov
sbb
and
adc
fsts
lock
or
ljmp
add
ret
mov
shll
into
inc
test
mov
add
mov
je
sub
sub
fcmovne
stos
inc
cmpsb
fsubs
roll
inc
push
mov
pop
and
jecxz
xlat
and
negl
icebp
scas
call
lahf
stc
mov
cmp
mov
gs
mov
pop
insl
lcall
jl
hlt
repnz
pop
daa
pop
rolb
jle
mov
mov
add
jno
sti
bound
cmc
bound
cmpsb
popf
fdivrl
jle
lds
outsl
pop
push
gs
jns
nop
add
ret
xor
xor
and
jbe
lret
in
xchg
adc
pop
xchg
push
push
nop
sbb
jb
test
dec
insl
scas
cmpsb
fsubr
pop
adc
dec
lods
xchg
cltd
or
pop
test
mov
or
push
test
out
ret
pushf
cmp
xor
mov
in
movsb
jmp
xchg
rcll
inc
sub
in
in
outsl
add
inc
popf
lds
add
ret
leave
or
inc
xchg
call
iret
pop
or
push
pushf
sbb
push
out
push
mov
sbb
addl
data16
and
pop
aam
fldt
dec
sbb
enter
inc
mov
ret
jns
arpl
pop
mov
or
repnz
lock
dec
dec
push
add
lock
mov
in
roll
mull
rcrl
push
jo
lods
pop
insb
xchg
std
xor
adc
adc
dec
lret
inc
sub
or
rcr
mov
mov
js
fwait
imul
mov
sbb
xchg
lods
jmp
add
vpcmpuw
push
add
sbb
push
stos
xor
loop
sub
int3
ja
fiadds
sbb
mov
inc
pop
fidivs
cmc
mov
mov
xor
inc
cmp
aaa
addr16
fiadds
and
nop
xchg
push
ret
lahf
movswl
pop
int3
dec
cltd
push
push
mov
mov
cltd
pop
lds
sub
movsl
pop
iret
cmp
movsb
mov
adc
lds
mov
pop
xchg
mov
adc
xchg
int3
stos
inc
repnz
jl
add
add
loopne
mov
push
jnp
outsl
xor
mov
adc
sub
and
lahf
sbb
addr16
fsts
or
sbb
adc
mov
ret
cmp
xor
pop
lock
mov
sarb
add
fwait
shr
push
sub
cmpsb
js
mov
test
pop
jno
lcall
add
in
add
or
lahf
cmp
mov
sti
aam
adc
jg
pop
mov
repz
into
loope
inc
fwait
cmp
in
fs
shl
lret
mov
sub
test
inc
call
add
dec
inc
add
or
aas
sbb
fisubl
mov
and
push
jmp
xor
repnz
mov
rcrl
je
sbb
jp
in
sub
adc
aaa
add
fstpt
sbb
rol
aaa
in
cs
add
aad
rcll
mov
push
add
scas
mov
inc
fstps
jmp
xor
add
xchg
xor
add
sub
mov
jbe
dec
jo
js
lods
mov
lods
pop
lret
icebp
and
dec
movsb
inc
int
jg
xor
jp
lahf
cltd
mov
fld
aam
adc
mov
test
lea
shr
push
dec
mov
stos
mov
loop
mov
test
into
pop
sbb
mov
divl
orl
lock
pop
push
pushf
mov
jp
sarb
mov
rorl
and
push
or
fnsave
je
test
rolb
test
xor
scas
pop
mov
cmpsb
std
fcmovu
sti
pop
les
les
lret
icebp
leave
ja
lcall
lods
adc
pop
aaa
lahf
sahf
push
push
xor
sarl
loope
out
pop
fcmovnbe
test
les
pusha
iret
fstps
nop
out
pop
enter
xchg
and
cmpsb
cld
pop
in
fbld
sub
movsl
lahf
sbb
dec
clc
imul
mov
and
movsb
dec
adc
fs
cmp
or
push
jo
sub
xchg
lods
and
and
fcoml
stos
xchg
mov
add
pop
out
or
mov
and
shrb
add
fstps
lds
outsb
mov
cmp
inc
and
push
fildll
jo
pop
and
in
icebp
xor
push
out
inc
scas
mov
jb
mov
or
outsb
orb
div
andl
xor
outsl
mov
imul
push
adc
in
adc
imul
shl
das
into
std
icebp
and
mov
lahf
and
ds
andl
push
push
xor
lahf
lds
fidivl
or
jae
std
ss
xchg
mov
sbb
int3
pop
iret
ret
xchg
mov
jae
inc
mov
or
push
mov
icebp
sbb
sbb
lea
ret
xchg
cmp
cltd
sbb
pop
loope
mov
mov
scas
lods
lret
dec
lds
mov
jmp
cmp
add
jp
insl
insb
stos
or
push
cmp
inc
call
pop
adc
dec
test
and
pop
faddl
mov
dec
jbe
xchg
inc
pop
jp
cmp
sahf
subb
sbb
sub
or
scas
sub
xor
es
test
pop
loopne
mov
jle
fnstsw
das
adc
js
lods
int3
dec
imul
scas
adc
cmp
mov
js
es
sub
cmpsb
decl
mov
fs
fwait
test
ja
sti
sahf
xchg
push
fldcw
sbb
add
fwait
addr16
dec
push
xchg
mov
mov
jns
lods
mov
pushf
lock
sub
es
jnp
in
cmp
pop
movsl
jae
test
ds
or
sub
pop
je
mov
ljmp
pop
cmp
popa
and
mov
pop
dec
xchg
fsts
adc
icebp
add
es
jns
mov
add
cwtl
push
idivb
lods
test
js
hlt
and
push
jno
loop
lahf
push
mov
sbb
and
mov
ljmp
adc
ss
ss
pushf
aam
cld
xor
sbb
dec
int
imul
ljmp
rorl
lahf
or
add
mov
nop
outsl
insl
cltd
add
jl
stc
in
xchg
gs
notb
enter
mov
jno
das
cmpsb
clc
cmp
push
out
xchg
test
lcall
bswap
adc
sbb
fimuls
xor
outsb
xlat
pusha
gs
lcall
and
or
xchg
jg
inc
ficompl
lahf
fildll
cs
xchg
test
call
loope
xchg
push
mov
cmp
xchg
out
movsl
add
loopne
jg
mov
dec
xchg
daa
shl
fmull
mov
cmp
cmp
sarb
dec
clc
add
xchg
xchg
mov
repz
push
push
jp
add
int
mov
fisubrl
iret
push
leave
enter
scas
lock
inc
jg
stos
jmp
mov
jnp
inc
jp
mov
push
int3
insl
xchg
loope
pop
dec
push
sti
mov
dec
sahf
cmp
pop
push
leave
push
andb
xor
clc
fldl
adc
pop
loop
stos
dec
popa
xlat
scas
loop
xchg
in
in
int
dec
inc
ret
jle
adc
jp
je
jo
sub
and
push
jge
pop
cmp
fimull
dec
pusha
sahf
pop
or
outsb
adc
jne
das
cltd
stc
in
outsl
out
mov
std
js
test
push
mov
push
cmp
sbb
mov
ljmp
lret
lods
cld
mov
pop
cmp
pusha
scas
mov
xchg
mov
call
daa
int3
hlt
cmp
in
enter
or
jle
xlat
insl
out
mov
shll
out
push
fldenv
sbb
out
xchg
int3
xchg
adc
cmp
and
test
mov
in
mov
js
add
inc
stc
fists
mov
cmp
pop
sub
test
adc
andl
add
bound
sarb
aam
or
add
push
jae
mov
outsb
and
xchg
imull
sti
pop
aad
add
dec
adc
push
or
mov
shll
mov
ficompl
testl
mov
rcll
pop
push
inc
push
lcall
inc
adc
push
inc
push
xor
mov
loop
test
fdivrs
mov
or
sbb
or
xchg
push
push
and
lds
dec
xor
jmp
xchg
lea
and
or
loopne
divl
push
adcl
inc
sub
mov
movsl
pop
negb
sbb
js
or
popf
sub
adc
add
and
push
pusha
movl
shlb
mov
cmp
out
pop
call
cmpsl
insb
or
jae
repnz
test
dec
lret
jns
pop
add
repz
mov
jmp
std
clc
int3
jnp
pop
roll
pop
rclb
sub
stos
std
ss
xchg
push
mov
cld
or
sti
or
mov
jae
pop
xor
push
cmp
jmp
das
hlt
push
mov
scas
lret
ja
sub
out
adcl
xor
push
into
pop
cmp
and
das
fimull
repnz
loope
jae
adc
addr16
cmpsb
out
xlat
or
cmp
es
push
add
sub
scas
scas
cwtl
mov
popa
repz
sarl
cmp
imul
pop
int
inc
adc
aas
mov
xor
pop
add
arpl
dec
bound
dec
cs
mov
das
xchg
inc
pusha
hlt
adc
push
jmp
out
lods
int
pinsrw
add
mov
adc
xor
pushf
jns
or
scas
enter
jg
sub
cmp
xor
xchg
aaa
jl
lea
leave
sbb
sbb
xchg
int3
inc
push
arpl
or
aad
icebp
xchg
imull
xchg
jmp
shll
or
mov
js
outsb
loopne
mov
jae
or
adc
push
cwtl
hlt
mov
xor
jnp
xor
dec
mov
leave
xchg
jbe
mov
adc
setle
sahf
leave
xchg
add
call
jnp
lret
jae
sbbb
or
scas
cmp
inc
outsb
jo
add
nop
insl
mov
xor
lods
mov
mov
sahf
mov
loope
stos
lds
lahf
inc
out
rcr
lea
mov
xchg
fsubrl
jmp
push
loope
push
iret
xor
out
adc
imulb
add
fwait
inc
shrl
idivb
push
ret
xlat
int
mov
fs
dec
int3
cld
dec
xor
add
add
out
ret
fs
xchg
inc
xor
out
je
dec
push
shll
movsl
pop
test
repnz
mov
int
add
cmp
arpl
cmp
adcl
adc
inc
mov
stc
bound
fistps
incl
cli
push
jns
or
add
jl
inc
cmp
pop
incl
push
ret
daa
inc
mov
sub
xchg
mov
xor
fmul
mov
dec
dec
in
and
test
add
xchg
push
lahf
add
enter
cwtl
jp
test
lea
dec
dec
xchg
movsl
jg
push
sbb
arpl
xchg
out
test
adc
repnz
push
jne
adc
ja
or
add
push
jp
shll
insl
fwait
xlat
jmp
movsb
lret
or
icebp
add
jo
add
xchg
cmc
inc
sub
sbb
xor
xchg
pusha
dec
push
test
or
imul
cmc
add
push
fsts
add
mov
js
xorb
add
ja
addb
xor
insl
popa
sbb
jne
mov
push
jg
std
add
cli
call
nop
lahf
add
loope
push
cmp
sbb
mov
adc
lock
test
test
dec
test
scas
jle
arpl
cmpsl
sbb
scas
adc
arpl
mov
in
pop
sbb
fdiv
mov
test
insl
mov
inc
scas
adc
aas
movsl
ja
loop
repnz
cs
dec
sbb
push
aas
pusha
inc
add
fildll
inc
push
shlb
stos
mov
hlt
pop
mov
cmc
aas
in
neg
shll
iret
cmp
adc
cmp
fstpt
dec
and
insb
ret
outsb
push
movsl
push
ja
xor
mov
push
pop
or
pop
push
mov
mov
mov
orb
or
aaa
xchg
scas
adc
and
outsb
fimull
clc
popa
jo
ret
out
or
cltd
jle
sbb
mov
stos
cmp
sub
inc
out
mov
jg
xchg
xchg
aam
imul
xchg
cwtl
and
dec
outsl
mov
mov
nop
out
fcmovb
mov
mov
inc
sahf
ss
insl
jg
int
mov
sub
jecxz
rorb
mov
scas
imul
pop
xor
das
shr
jbe
addb
push
rcl
outsl
test
cmpsb
pop
xorl
test
std
mov
stos
sub
stc
andl
lret
mov
pop
jmp
cwtl
sub
cmp
ds
fimull
adc
cmp
push
mov
xchg
ss
cli
mov
iret
mov
mov
lahf
fchs
sbb
idivl
jb
sub
int
sub
shll
hlt
mov
push
cmp
fldenv
imul
aam
dec
add
mov
adc
push
adc
std
inc
xlat
and
dec
divb
nop
pop
int3
loopne
dec
movsb
lock
fucomip
dec
adc
js
imul
roll
add
pop
adc
mov
arpl
rorb
and
and
aaa
sbb
mov
sbb
pop
fdiv
fbld
xchg
adc
adc
inc
mov
mov
pop
setb
ret
jge
fcmovnu
call
stos
lea
popf
addr16
jp
popf
xor
cmp
cmp
push
sub
test
sbb
out
mov
pop
int3
mov
mov
mov
jae
enter
push
test
pusha
data16
out
shll
jmp
hlt
jo
sub
das
jg
mov
xorl
ljmp
dec
mov
cmp
push
shl
fs
cmp
mov
pop
aaa
out
pop
and
outsl
push
fs
adc
push
dec
dec
loopne
imul
cld
push
fnstenv
jp
mov
jnp
xor
or
roll
pop
scas
lret
imul
and
xchg
sub
dec
cmpb
aaa
jne
pop
push
cmp
push
mov
hlt
dec
loopne
mov
adc
xchg
ret
jl
dec
sub
aas
pop
mov
push
dec
sub
jb
dec
lcall
xor
sub
sbb
cmp
movsb
or
push
stos
fcom
inc
push
movsb
sbb
inc
xor
dec
mov
rorl
into
jp
ljmp
pusha
or
fiadds
sbb
jge
decl
in
cli
cltd
push
lahf
int3
dec
add
mov
ficomps
push
xor
lds
leave
xchg
fistpl
mov
xchg
insl
cltd
mov
imul
jmp
xor
insb
push
cli
popa
roll
scas
mov
xchg
loope
sbb
scas
out
scas
arpl
in
xchg
sarb
ss
mov
movsl
nop
xchg
and
sub
outsl
add
popf
cmp
xor
adc
repnz
mov
cwtl
inc
cmp
les
es
fsub
adc
pusha
adc
sub
adc
jmp
stos
cli
and
push
jns
add
mov
adcb
pusha
mov
mov
dec
xlat
xchg
pop
fisttpll
mov
and
lds
enter
jo
loop
test
cmp
sbb
lock
xchg
out
std
call
pop
lock
jns
jae
push
pop
push
jmp
lret
mov
pop
bound
and
out
icebp
push
mov
iret
adcl
fcmove
sbb
mov
jae
loope,pn
or
cmp
push
add
popa
test
inc
lods
sti
xor
pop
and
and
gs
cmp
repz
push
xchg
lcall
rcl
mov
mov
jmp
idivl
mov
fistpl
xor
shl
aad
xor
sub
or
sub
mov
inc
mov
call
fildl
stos
jge
loopne
lret
pop
xchg
enter
bound
jl
add
mov
or
mov
or
aaa
test
clc
arpl
push
jb
data16
insl
iret
xchg
mov
xchg
sahf
push
jmp
jp
jp
push
mov
inc
fsubs
dec
mov
adc
mov
xor
lcall
fs
mov
adc
xchg
div
ret
pop
scas
call
xor
sbb
mov
int
or
sub
cmpb
dec
mov
rorb
or
loopne
pop
adc
jno
mov
subb
int
or
les
mov
pop
or
out
test
repz
std
push
jl
lods
mov
sti
mov
mov
jle
push
pop
int3
xchg
mov
mov
imul
xor
adc
vpperm
xor
movsb
dec
aad
jmp
xchg
js
and
cltd
jg
adc
cld
ret
adc
test
xor
mov
shll
ret
rcll
fldt
push
xchg
jb
add
shll
insl
lcall
js
jp
lret
xchg
sub
mov
test
sarl
repz
lock
jb
cmp
clc
lods
inc
loope
sbb
push
cwtl
ds
decb
or
loope
adc
test
ds
fs
push
outsb
sub
push
xchg
jg
sbb
lret
sbb
sbb
cwtl
fildl
data16
out
jne
xchg
pop
pop
imul
push
test
lods
lret
push
cltd
adc
out
mov
mov
aas
lahf
stos
jo
push
mov
repnz
dec
xor
popa
cmp
ds
jnp
pop
jo
pusha
pop
xchg
push
ss
push
lods
push
cmc
mov
dec
jge
out
pop
xor
gs
jle
push
dec
push
test
ss
jmp
movsb
jl
sbb
out
mov
pop
push
mov
cltd
scas
mov
push
lcall
lahf
movsb
xor
push
xor
pop
enter
and
sarb
mov
stos
mov
inc
mov
xlat
mov
dec
lock
jnp
xor
pop
pusha
sub
adc
mov
xchg
xor
inc
push
dec
push
insb
push
push
fldt
inc
lcall
push
pop
jmp
fisttpl
in
xchg
nop
pop
rcll
or
orb
push
inc
addb
jae
dec
subb
xchg
pop
repz
sti
repz
ja
xchg
adc
fadds
jnp
cmp
adc
lea
fistps
lea
sub
lahf
std
mov
mov
cld
jo
scas
je
aad
pusha
jle
mov
push
dec
leave
in
push
jge
popa
push
in
fs
cmp
addr16
pop
mov
insl
sahf
xorb
test
ds
lret
sub
add
add
mov
loope
xchg
pop
pop
dec
hlt
or
pushf
sub
pop
rclb
jnp
daa
sbbl
cli
dec
adc
adc
outsb
pop
mov
test
insl
or
into
addr16
repnz
jp
icebp
xor
lds
arpl
int
mov
cmp
push
push
add
push
notl
jp
dec
xchg
cmp
sahf
or
subl
mov
jp
or
pop
push
and
out
mov
iret
add
aad
lods
cmpsl
je
and
mov
inc
in
loop
and
fmull
adc
cmc
adc
mov
xor
sbb
pop
push
sub
push
cmp
je
ffree
sub
add
out
and
xchg
push
adcl
notl
mov
jbe
mov
push
xor
movsb
sahf
imul
ja
aad
aaa
ret
push
sub
xor
dec
sbb
popa
movsb
dec
or
jno
xchg
ret
jmp
cmc
sbb
and
jmp
adc
mov
jmp
cmp
mov
test
add
cmp
xchg
mov
cmp
push
sbbb
ret
fwait
int
xor
jnp
fidivs
addl
popa
sub
xor
das
imul
sub
mov
lods
cmp
lock
pop
enter
rep
xchg
test
dec
cmpb
jmp
popa
add
popf
and
lock
inc
fs
movsl
psubd
add
mov
andb
lcall
iret
ret
cwtl
dec
addb
pop
adc
lcall
xlat
xchg
ret
mov
adc
das
lret
jmp
mov
inc
adc
cmpsb
ja
and
aaa
push
push
inc
dec
aaa
pop
mov
inc
daa
mov
pop
xchg
lds
push
adc
mov
scas
stos
mov
xchg
rclb
fs
pop
outsl
je
std
lret
cltd
ljmp
shll
sahf
push
addr16
loop
rcrl
mov
lret
adc
xchg
pop
mov
iret
push
mov
dec
ja
jo
cmc
xchg
jns
pop
es
and
repz
push
into
or
dec
sub
cmpsb
ss
cmc
in
xlat
daa
lcall
mov
pop
psubsb
pop
mov
hlt
repz
aas
lods
loope
inc
leave
fiadds
xchg
add
dec
xchg
push
outsl
jp
std
sahf
fwait
mov
lret
xchg
mov
xor
test
iret
mov
pop
mov
and
adc
and
pop
xlat
mov
lcallw
dec
and
xlat
adc
cmp
cmp
hlt
icebp
mov
into
leave
xor
mov
mov
jne
sbb
leave
idivb
iret
inc
ret
fildl
mov
mov
dec
push
add
notl
mov
addl
mov
push
adc
add
bound
add
xchg
mov
cli
mov
push
daa
call
into
test
out
popa
mov
std
sub
jo
mov
ja
movsb
incl
fadds
test
xchg
in
cld
cmp
leave
dec
inc
icebp
ret
fldt
ss
sbb
scas
in
rclb
stos
sbb
dec
push
or
addr16
xchg
rcrb
in
push
nop
add
xor
add
cmp
ja
or
mov
dec
hlt
repnz
mov
inc
sbb
sbb
lret
cwtl
pop
xlat
mov
ret
fsubs
jp
mov
mov
inc
insl
mov
jmp
test
dec
cmpsb
push
mov
or
and
or
jae
insl
imul
cltd
rorl
adc
add
lahf
xor
cmc
loope
dec
cmp
mov
fstpt
mov
sub
and
ljmp
sbb
or
mov
ret
lods
fnstenv
jp
xor
mov
pop
into
out
dec
stc
aaa
lret
sbb
xchg
pop
push
je
clc
out
push
sub
or
dec
rol
cs
mov
add
jmp
scas
or
push
sahf
leave
leave
push
movsb
shlb
pop
subb
lea
pop
fdivr
jnp
int3
sahf
add
mov
cmp
xchg
in
cltd
int3
xchg
xor
cmpb
andl
loopne
arpl
sti
aaa
mov
mov
nop
sub
mov
psrad
push
loope
adc
dec
arpl
add
or
adc
loope
add
xchg
enter
dec
push
popf
icebp
call
notl
cmp
mov
mov
xorb
aaa
xor
lea
xchg
pop
dec
jne
mov
cmp
sub
mov
out
mov
jns
fwait
mov
imul
sbb
std
ja
mov
out
mov
push
mov
mov
xchg
je
inc
clc
pop
das
mov
dec
pop
dec
std
jae
addl
loope
pop
jb
xchg
lods
sub
inc
pop
adc
and
pop
cmpsb
push
mov
jecxz
ss
loop
sarl
shrb
or
pop
mov
jno
rcl
cmc
adc
or
xchg
xchg
in
lods
cmp
xor
xchg
sub
dec
cli
jecxz
push
and
or
dec
sbb
clc
and
push
cli
inc
data16
addr16
mov
enter
inc
jecxz
mov
out
rcrb
mov
fcmovne
push
ss
out
xlat
out
call
ficomps
pop
test
push
mov
ret
rcrb
mov
xor
jbe
stc
and
mov
icebp
mov
jo
dec
scas
xchg
out
mov
xchg
mov
lock
add
daa
lods
mov
je
mov
dec
mov
push
scas
aaa
cld
jne
rcl
cltd
sub
pop
push
jl
dec
cltd
adc
dec
xrelease
or
mov
cmp
scas
sbb
stos
pop
or
jnp
jg
jp
jae
inc
cmp
cmp
test
push
push
hlt
icebp
pop
jmp
lock
inc
xor
adc
imul
mov
mov
sub
push
rol
dec
inc
push
dec
movsl
dec
inc
ret
xor
push
pop
mov
int
push
xchg
cmp
scas
xchg
xor
rol
addb
or
or
imul
mov
addb
xchg
sub
dec
push
inc
aas
mov
cmpsb
stc
lea
sbb
sub
jns
in
ficoml
push
sbb
cmp
xor
dec
pop
notl
add
jne
push
push
divl
dec
je
ffree
push
mull
adc
fs
cmpsl
mov
push
pop
movsl
or
mov
pop
mov
inc
movsl
sub
jl
mov
or
pop
adc
or
into
pop
xchg
sahf
cmp
out
inc
xor
std
cmp
sti
push
cmp
mov
dec
lock
jb
xor
mov
pop
jb
lret
inc
mov
add
in
xor
pop
mov
xor
scas
das
dec
jge
mov
mov
jg
push
mov
add
jbe
pushf
adc
mov
addl
daa
cmc
imul
es
mov
loopne
mov
sahf
dec
or
jno
lret
test
popf
dec
jo
cmp
mov
into
push
cmp
ror
sub
jno
mov
mov
xchg
fstp
fisttps
xchg
dec
pop
in
test
sub
push
add
nop
pop
adc
lock
loopne
inc
lods
sahf
out
pop
xchg
mov
sub
call
sbb
arpl
es
mov
dec
and
or
fdivs
mull
push
mov
jae
cmp
pop
leave
push
push
mov
fistpll
push
lcall
sub
mov
out
int
rcl
add
mov
das
push
in
inc
xor
xlat
push
add
mov
sbb
lret
mov
push
mov
xor
dec
fsub
ret
stos
cwtl
out
dec
pop
ss
lret
test
sti
out
add
fmuls
dec
in
test
xchg
sub
repz
push
movsl
pop
sbbl
fidivl
dec
xor
fsubs
daa
mov
jp
rcrl
addr16
repz
mov
and
inc
addr16
repz
lret
push
adc
int3
dec
pop
sub
cmp
mov
cld
mov
leave
insb
push
xchg
adc
outsb
push
sub
outsl
or
mov
add
pop
daa
in
push
leave
movsb
popf
les
ds
mov
andl
cld
inc
sbb
in
out
testl
mov
das
test
jecxz
fdivrl
mov
sti
repz
adc
push
std
fdivr
mull
sbb
cld
pop
mov
push
lock
push
nop
call
fdivl
lock
lcall
xchg
sbb
ds
or
cmc
or
sub
fimuls
aaa
xchg
rorl
pop
jns
cs
data16
sti
add
inc
aas
fcomp
or
adc
or
sub
mov
enter
pop
push
fst
fcompl
add
lods
test
push
inc
lahf
int
or
and
inc
cmp
add
arpl
in
enter
les
in
lcall
xchg
dec
data16
das
push
outsl
lret
in
jb
mov
jne
std
fwait
mov
mov
ficompl
mov
sbb
fsubl
imul
mov
jmp
out
push
arpl
aad
addl
decb
fsubrp
dec
adc
mov
add
mov
push
adc
test
jb
mov
rol
int
mov
mov
add
shr
out
in
mov
push
pushf
mov
jmp
scas
pop
ljmp
cmp
sub
pop
cmp
nop
in
outsb
cmp
mov
push
inc
adc
clc
add
lds
xor
mov
pop
aaa
test
cmpsl
cld
mov
test
enter
pop
fldt
jle
mov
or
shlb
jl
mov
arpl
test
and
enter
pop
mov
xor
xchg
and
inc
lds
insl
bound
inc
dec
cmp
sub
dec
add
adc
loopne
pop
jns
pop
mov
enter
in
add
add
dec
mov
dec
mov
pop
mov
clc
sbb
std
lret
push
mov
sbb
dec
and
leave
test
xlat
add
adc
imul
loope
pushf
xchg
enter
subb
sub
daa
outsb
or
and
mov
cwtl
mov
jae
dec
les
sub
lcall
enter
mov
jno
inc
mov
mov
leave
in
sub
mov
mov
mov
push
xchg
repz
imul
outsb
aaa
push
cmp
sub
mov
mov
cs
and
dec
sbb
push
sbb
and
clc
rdpmc
xorl
movsl
cld
add
lods
add
jb
adc
lds
in
pop
movsb
jns
pop
mov
push
icebp
pushf
es
addr16
mov
lds
das
insl
clc
stos
jno
scas
fldt
sbb
loop
mov
mov
dec
mov
add
and
mov
mov
mov
add
xchg
mov
pop
mov
imul
inc
int3
lods
lock
imull
nop
adc
fsub
out
mov
and
into
div
call
outsb
dec
jbe
sbb
sub
xchg
sbb
sahf
jmp
pop
sbb
aaa
and
jmp
nop
lahf
pusha
mov
cld
sbb
ja
cmp
push
inc
push
aad
lods
mov
or
sub
pop
xor
mov
dec
xor
and
adc
or
fisubrl
push
lahf
xchg
cmp
popf
and
shl
xor
in
in
fidivs
mov
ss
xor
mov
cmp
add
add
inc
es
lods
lret
in
xchg
rcrb
popw
test
sbbb
xor
not
jmp
std
mov
sarb
rclb
and
cld
inc
test
pop
jge
fildl
aas
push
cmp
and
out
push
dec
pop
rcrl
jne
das
aas
stos
adc
add
mov
inc
fwait
xchg
es
adc
stos
mov
mov
addl
je
ja
mov
les
scas
in
outsb
xchg
sub
mov
jno
push
sub
mov
push
inc
mov
nop
jb
sbb
sarl
push
xchg
dec
dec
aas
push
in
das
int3
mov
cmp
sub
fisubs
mov
adc
pop
push
imul
jb
mov
hlt
mov
std
call
int
or
jge
jle
sub
out
insl
and
fistpl
sti
sahf
cmp
add
adc
jmp
test
jns
push
fwait
cmp
or
outsb
jg
xor
mov
dec
or
or
bound
sub
arpl
fdivrl
int3
movb
outsl
gs
mov
movsb
int3
push
add
jo
iret
sub
mov
push
test
ss
push
aam
add
icebp
inc
sbb
call
das
popf
mov
xlat
aas
inc
add
or
enter
mov
daa
jno
lret
outsl
loope
dec
xchg
or
mov
scas
xchg
lds
lret
lcall
jle
std
mov
cwtl
mov
call
sti
es
inc
int3
inc
jo
fisubs
jns
nop
int3
xchg
ljmp
aam
mov
push
dec
sbb
insb
daa
push
dec
cmc
lea
jge
mov
in
cmpb
or
nop
lret
or
out
test
lahf
cmp
enter
push
push
xor
in
pop
jp
sub
or
inc
lret
sbb
hlt
sub
lret
and
adc
sbb
xchg
adc
nop
pushf
mov
mov
pop
fsubr
mov
popa
mov
xlat
bound
les
pop
adc
aad
mov
mov
aad
nop
pop
lods
mov
push
out
inc
and
out
ds
inc
out
mov
xlat
inc
push
mov
int
push
nop
pop
incb
es
std
int3
push
call
fsubrl
insl
dec
and
mov
les
mov
rol
dec
out
idivl
loope
in
dec
inc
mov
pop
sub
popf
lea
jne
out
stc
in
subl
xchg
das
arpl
pushf
add
imul
cld
imull
mov
fists
in
sub
and
mov
popf
cmc
jmp
movsl
adc
cmp
in
jno
mov
aas
and
jnp
xor
push
adc
xchg
and
fiadds
adc
call
push
and
mov
mov
incl
xor
inc
rcrb
mov
js
int
shrb
jmp
repnz
loopne
push
xchg
gs
add
pop
and
mov
jl
xchg
lock
pop
inc
jp
cs
imul
inc
pop
in
and
scas
lahf
jbe
push
je
push
add
loope
inc
xchg
cwtl
ret
fs
mov
mov
sub
push
mov
xor
out
mov
mov
sti
das
stc
loop
ljmp
pop
cwtl
mov
enter
mov
rorl
sub
aad
outsb
ret
fcoms
push
xchg
movsl
xchg
pop
into
rolb
loop
push
nop
outsb
loope
in
push
mov
fidivrs
cmpsb
fdivp
xchg
and
jmp
jle
inc
push
push
mov
push
cmp
addr16
sbb
cmp
daa
lods
push
stc
mov
fstps
jge
add
jbe
dec
ss
dec
cli
mov
inc
add
in
test
fisttpll
addr16
cmp
fisttpll
das
dec
adc
lahf
mov
scas
push
mov
cmp
sti
adc
sahf
notl
xchg
mov
sti
cmc
cmp
cmc
inc
call
push
xchg
add
mov
stos
rorl
js
and
insl
xor
lcall
loope
test
pop
jg
fnsave
xchg
lds
jg
xchg
nop
dec
fisttpll
adc
fs
mov
push
movsl
or
outsl
movntq
push
cs
arpl
xor
pop
jo
jg
sub
add
dec
jne
add
stos
ja
mov
xchg
inc
xor
cmpsb
mov
mov
xor
in
negb
mov
push
mov
push
mov
mov
jbe
fs
and
mov
sub
out
dec
add
int
clc
sbb
data16
mov
cmp
rorb
in
jbe
xchg
int
sbb
xchg
sbb
xchg
scas
mov
fiadds
adc
pop
out
leave
jne
xor
mov
dec
push
test
push
mov
cs
add
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
mov
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
nop
nop
nop
nop
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
addb
add
add
js
add
test
add
call
add
add
add
addb
add
or
add
add
sub
add
sub
add
add
add
add
add
addb
add
add
add
sub
add
push
add
addb
add
or
add
add
add
add
and
add
or
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
jo
add
mov
add
add
add
add
add
xor
add
and
push
add
add
add
add
add
add
addb
add
or
add
xor
add
pop
add
addb
add
addb
addb
add
or
add
add
add
add
mov
add
or
add
add
add
dec
add
loopne
add
or
add
add
add
or
add
add
add
add
add
add
mov
or
add
add
add
add
add
add
mov
pop
add
or
add
imul
add
add
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
addb
add
or
add
add
add
add
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
enter
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
jae
je
popa
add
and
push
add
data16
add
jb
add
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
insb
add
jae
and
push
add
jb
jb
jns
and
inc
add
insb
add
add
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
cmp
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
insb
add
gs
xor
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
outsl
jo
push
imul
inc
outsl
arpl
