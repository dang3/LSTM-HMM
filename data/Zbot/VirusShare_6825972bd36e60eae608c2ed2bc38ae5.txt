sbb
add
outsl
std
out
test
cld
jl
test
sbb
daa
frstor
fsubr
xor
sub
adc
pop
sub
aas
add
lea
rcl
mov
mov
bound
jb
sub
test
lahf
and
add
scas
movsb
sti
repnz
movsl
jae
pusha
cmp
xor
loop
xchg
outsb
inc
sub
das
lahf
dec
cmp
xchg
mov
inc
dec
arpl
adc
cmp
push
fsubl
mov
dec
mov
outsb
and
inc
jp
jbe
mov
lret
sub
mov
in
mov
adc
test
call
mov
sub
push
mov
mov
ds
outsl
lcall
mov
filds
clc
xchg
aas
jmp
jae
xchg
push
pop
push
int
lcall
push
push
out
fs
mov
xchg
push
sahf
inc
int3
mov
loop
insb
repnz
lock
lret
enter
fs
adc
mov
out
xlat
or
mov
leave
enter
cmpsl
jecxz
mov
insb
dec
cmp
jg
fnstenv
mov
xchg
mov
and
stos
sbb
int3
dec
fsubl
lahf
or
mov
lods
mov
nop
add
cmp
adc
out
or
dec
mov
pop
and
test
jo
adc
jne
jl
imul
inc
mov
rorl
arpl
les
cld
adc
int
mov
jp
sahf
shll
aas
or
bound
xchg
fsubp
out
inc
outsl
in
mov
outsl
cmp
jg
inc
or
repz
sub
or
in
or
inc
pop
in
je
mov
mov
scas
movsl
and
xor
mov
sub
inc
add
fidivrs
push
leave
push
mov
cmpsl
enter
xor
nop
imul
or
out
mov
add
push
arpl
cmp
cld
adc
pop
cwtl
inc
sbb
xor
sub
hlt
dec
add
inc
addr16
inc
outsl
mov
mov
daa
pop
roll
lock
leave
mov
mov
mov
jle
push
out
ljmp
das
hlt
add
fs
imul
xchg
into
mov
sub
iret
push
ucomiss
add
popa
inc
inc
add
sbb
movsl
jnp
test
jns
lock
or
lret
push
test
fs
sub
push
pop
sbb
pop
push
mov
fwait
les
mov
cmp
data16
mov
mov
cmp
jno
sub
inc
mov
icebp
jb
inc
pop
and
stos
mov
mov
adc
jb
sbb
or
test
mov
aam
fildll
fwait
addr16
xor
lea
xor
int
aam
adc
clc
cltd
mov
cltd
cmp
inc
xor
pop
cli
adc
mov
negb
icebp
decb
dec
rorl
cs
mov
test
xchg
sub
repnz
in
test
sub
xor
push
sbb
pusha
loop
sti
jmp
xor
fisubrl
dec
cmp
pop
dec
xchg
imul
and
aam
call
lods
iret
mov
das
aaa
xchg
sahf
pusha
ljmp
fs
loope
pushf
ret
das
inc
and
int3
adc
dec
insb
sbb
mov
pop
dec
push
lret
push
inc
cld
cmp
jae
add
push
jmp
or
rsm
push
sarl
ljmp
das
lea
add
lds
outsl
lods
nop
mov
popf
pushf
ds
loop
push
jge
jle
mov
inc
pop
xchg
or
or
insb
add
push
out
cmc
or
push
jb
mov
dec
mov
and
mov
cmp
cmp
xchg
jecxz
out
jmp
sbbl
push
xor
inc
adc
lds
push
jnp
pop
inc
push
jne
push
inc
push
clc
das
jbe
lret
test
xor
hlt
repnz
test
adc
adc
sbb
pop
mov
and
cmc
adc
adc
or
test
fs
jmp
mov
into
push
adc
rorl
nopl
scas
lds
push
or
xchg
jecxz,pn
push
out
mov
popf
pop
push
xchg
not
loope
or
xchg
ficompl
adc
pusha
dec
mov
and
arpl
mov
inc
adc
adc
fiaddl
sbb
lea
stos
or
into
scas
rolb
inc
stc
out
les
and
mov
pop
or
sbb
lahf
shll
call
insb
adc
mov
jg
arpl
or
sub
adc
lock
xchg
jp
pop
pushf
fcoml
push
in
adc
insl
pop
push
fsubrs
ret
xor
or
push
lock
mov
mov
lods
pop
repnz
or
sbb
ss
sub
xor
mov
mov
ret
add
sarb
mov
fsubl
xchg
dec
mov
mov
out
test
into
push
lods
dec
ljmp
push
push
cmp
popf
lret
mov
dec
and
cmp
add
sub
lret
out
fnstsw
fwait
cmp
xor
jno
clc
or
adc
add
mov
sahf
pusha
int
fwait
dec
loop
xchg
push
cs
je
xchg
out
xchg
test
pop
adc
or
mov
xor
out
adc
fwait
mov
gs
mov
outsb
sbb
mov
cmp
hlt
push
push
lods
filds
mov
mov
add
push
leave
jl
mov
dec
push
imul
leave
fs
lret
aas
stos
stos
into
in
add
push
cwtl
aam
rclb
jg
lahf
sbb
add
arpl
push
and
pop
adcb
ss
push
bound
xchg
or
sbb
cmp
and
bound
sub
mov
rcrl
inc
or
icebp
sub
xor
in
xor
cmc
out
fsubr
jb
add
dec
aad
pop
cmc
inc
pop
mov
xchg
jle
hlt
sub
jno
out
mov
or
pop
mov
div
lods
pop
xchg
push
lret
jno
inc
mov
ret
xor
popa
fwait
xor
or
push
inc
xchg
shll
in
sbb
cmp
and
lods
cmp
arpl
lods
mov
dec
inc
dec
fbstp
jno
cmp
in
adc
sub
aaa
lods
push
pop
testb
sub
mov
pop
fdivp
fnstsw
jne
xchg
push
mov
test
mov
dec
out
xchg
lret
xor
jle
inc
add
pushf
mov
shr
mov
mov
mov
vpsubusw
aad
in
add
cmp
sub
mov
popa
stos
ss
jne
sub
push
xchg
lock
int
xchg
and
or
lcall
jp
ficoms
js
pop
lods
icebp
or
push
mov
movb
je
adc
mov
clc
sbb
xchg
int
int3
jno
sub
daa
int
xor
pushf
add
insl
dec
fildl
sbb
pop
mov
imul
adc
inc
sub
sbb
lcall
scas
sub
pop
in
inc
dec
pop
jl
sahf
cmp
fwait
mov
dec
fcmove
mov
rclb
cmp
pop
in
repnz
lret
imul
rorl
inc
adc
push
add
and
pop
mov
and
xor
mov
in
mov
mov
dec
in
cltd
sti
pop
mov
adc
xchg
add
add
pop
ror
push
xchg
xor
xchg
xor
outsl
jae
shll
ror
loope
fsub
push
lods
out
daa
enter
imul
mov
sti
jmp
xchg
adc
nop
dec
pushf
cltd
sub
aaa
rol
and
lahf
pop
in
cmpsb
and
loope
cmp
adc
sub
mov
repz
outsl
icebp
cmp
repz
xchg
jmp
insl
insl
jmp
fwait
pop
jge
ja
pop
fld1
cmpsb
pop
mov
jae
inc
ljmp
pushf
js
and
add
push
dec
add
das
popf
pop
mov
cmpsl
in
inc
xchg
shl
push
inc
xor
lretw
mov
aam
ficomps
rorb
inc
lods
xor
jnp
cmp
add
repz
mov
or
fs
loope
push
push
pop
mov
lea
cmp
sbb
add
jmp
mov
mov
push
iret
and
repnz
into
test
arpl
shrl
into
jg
mov
sub
pop
fdiv
out
xchg
xor
or
punpckhdq
pop
stos
mov
les
icebp
scas
cmp
insl
xchg
cs
divl
lock
cmp
fmull
arpl
xchg
jmp
mov
xchg
mov
xor
mov
fbstp
jle
xor
and
cmc
fldcw
movsb
cmp
ds
sub
mov
xor
push
push
std
test
movsb
sub
mov
int
ljmp
pop
insb
dec
movsl
cmpsb
psrad
aaa
pusha
add
xchg
xor
push
sahf
mov
fsubp
adc
lock
dec
adc
jl
insl
notl
dec
loopne
test
daa
xchg
test
pop
sub
leave
xchg
orb
sbb
push
mov
jae
mov
pop
inc
test
mov
inc
andl
mov
lret
js
mov
pop
or
andl
mov
aad
outsl
push
xor
cld
addr16
popa
ret
rcll
imul
cwtl
jge
dec
sub
and
mov
lods
pop
dec
push
test
stos
dec
jo
pop
and
call
push
jle
test
sub
inc
lds
int
mov
mov
aad
jno
inc
push
dec
hlt
sar
cld
lods
loop
insb
fstps
mov
testl
push
xchg
cmp
jg
fcomp
jns
mov
cmpl
sar
jnp
ja
fistpll
sbb
adc
outsl
bound
or
enter
test
aam
call
mov
cmpsb
add
mov
in
dec
fisubl
nop
inc
dec
mov
in
dec
imul
push
lret
inc
arpl
xor
shrb
pop
fnstenv
mov
add
sarb
lods
inc
xchg
cs
dec
clc
mov
mov
js
scas
cli
pop
test
xor
inc
dec
pushf
rol
rcr
cld
out
jmp
sub
mov
loop
pop
pop
dec
aas
sbb
add
xchg
arpl
dec
push
mov
inc
pop
xchg
insb
mov
dec
or
mov
hlt
mov
sahf
in
arpl
lods
jns
leave
and
pop
xchg
cwtl
mov
repnz
std
lret
mov
loope,pt
fisttps
pop
inc
sbb
out
movsl
cmpsb
sbb
push
mov
jmp
lods
arpl
pop
jne
ds
push
dec
dec
or
lea
dec
mov
lret
loop
addl
scas
cmpsl
div
xchg
mov
jo
fildll
inc
xchg
imul
sub
in
jae
dec
insb
mov
adc
imul
ljmp
sahf
inc
shlb
add
cmp
pop
pop
hlt
mov
inc
daa
pop
pop
jle
adc
leave
sbb
test
jle
ret
jno
insb
xchg
fwait
cmp
pop
les
dec
lods
or
in
das
xor
pop
jne
dec
imul
in
sub
jmp
jge
ss
sbb
mov
aas
pop
cmp
inc
jg
rol
jbe
and
jb
pop
pop
popf
scas
jns
loope
dec
arpl
adc
dec
nop
out
ret
call
loopne
jae
xchg
mov
mull
cwtl
sub
arpl
or
or
rolb
repz
xchg
mov
pop
out
jg
popf
xor
cmpsb
adc
jge
pop
outsl
push
fcomps
mov
sub
fstpt
dec
insl
push
mov
push
mov
mov
sub
sbb
in
movlps
xchg
cmp
sub
jmp
in
loop
pop
sbb
pop
push
es
ret
jnp
int3
call
lret
dec
push
jmp
lods
mov
lds
add
ret
fdivrs
or
jae
push
shrl
out
sbb
out
xchg
lahf
lock
jae
sti
pop
loope
jne
add
cmc
leave
pusha
xor
mov
dec
dec
in
std
mov
add
iret
stos
add
dec
or
mov
inc
int3
std
inc
xor
mov
or
xchg
rol
jae
in
mov
jne
dec
fs
sbb
call
mul
and
lcall
mov
xlat
cwtl
mov
inc
pop
pop
inc
fwait
aas
push
adc
outsb
rol
jge
jns
mov
pop
pushf
mov
cld
mov
adc
ret
xchg
xchg
jnp
mov
rcl
sti
cmpsb
sbb
cmpsl
lods
lds
sarb
adc
mov
or
subb
dec
mov
adc
jne
mov
fdivl
dec
push
lods
xchg
sub
add
dec
mov
fwait
sbb
lcall
leave
push
lods
loopne
cmc
clc
ja
jp
sbb
sbb
pop
rcl
sub
fsubrs
outsb
lds
andl
inc
jbe
or
push
xlat
cli
mov
insb
push
jo
jle
out
xchg
jne
xchg
loope
inc
cld
dec
fnsave
in
sbbl
lods
mov
or
cmp
fbld
data16
icebp
aam
mov
adc
jb
lods
leave
mov
fwait
sahf
adc
and
mov
popa
sbb
jl
and
cmpsb
rclb
xor
push
sub
icebp
loopne
cmp
pushf
hlt
mov
lcall
stos
add
shl
loopne
cmp
sub
mov
mov
jp
les
mov
push
or
loop
int3
mov
xchg
mov
or
lret
xor
add
pop
and
mov
jo
sbb
adc
mov
mov
mov
jno
lock
loope
pop
ret
add
das
lret
std
lds
jb
es
lock
or
je
in
je
xchg
xchg
popf
xor
sahf
jecxz
outsl
sub
sbb
mov
inc
and
aaa
cmp
outsl
cmpsb
leave
cmpsl
and
mov
adc
xrelease
cmc
out
movsl
loop
repz
push
push
mov
fstpl
cli
jae
sub
xor
pop
sbb
in
fimuls
test
mov
jecxz
or
inc
mov
subb
mov
loop
ss
mov
xor
mov
mov
mov
add
out
testb
xchg
xor
push
stc
mov
mov
es
push
into
fdivr
mov
fbld
ljmp
dec
xchg
bswap
cwtl
push
xchg
mov
fidivrl
rcr
xor
mov
or
stc
or
loope
mov
leave
xchg
and
xchg
adc
sbb
adc
in
roll
jns
mov
mov
mov
ficomps
inc
inc
mov
jmp
jo
cmp
xor
mov
xlat
in
mov
push
adc
lcall
mov
imul
mov
mov
and
call
cmp
int
xchg
shll
dec
mov
aas
xchg
push
arpl
imul
mov
test
inc
dec
iret
cld
or
pop
mov
sbbl
rolb
hlt
jmp
jl
pop
or
sbb
ja
mov
xchg
jl
or
fcomp
xchg
rcrl
ja
jno
mov
push
out
sbb
loopne
sub
adc
leave
fsubrs
push
sbb
pop
insl
daa
add
bound
ljmp
pop
roll
cwtl
popa
or
lahf
jmp
mov
add
or
outsb
jle
fadd
lea
pusha
scas
daa
pop
lods
cmp
ds
jge
repnz
int
shr
cld
mov
push
add
shrb
ja
sbb
outsl
arpl
pusha
push
sub
push
add
or
jmp
fstpl
out
add
ja
sbb
jae
shll
mov
xorb
sahf
jg
jecxz
test
inc
sti
cmp
fstpl
dec
push
add
push
test
pop
insl
pop
mov
cli
mov
cmp
xlat
scas
pop
cli
pop
in
pop
lahf
jo
sti
ja
pop
cs
jg
jns
sub
in
jbe
sub
mov
outsb
je
jecxz
fstl
and
aad
lret
adc
xchg
data16
out
cli
fwait
dec
add
sbb
inc
jle
fsts
bound
xor
xor
out
cmp
dec
xchg
lods
sbb
inc
jmp
inc
lahf
psadbw
jmp
scas
ds
or
dec
push
jae
xor
xchg
mov
bound
cmc
fsubrl
push
fs
jl
lods
shrl
xor
or
mov
fcomp
xchg
dec
imul
inc
mov
jno
pop
xchg
into
inc
cmp
mov
sti
cmp
jb
test
bound
push
mov
jmp
cmp
sti
mov
repnz
mov
jmp
xor
imul
jl
jbe
jl
inc
jecxz
xor
cmp
xchg
pmaddwd
ret
test
or
scas
push
add
dec
in
jl
cmp
andl
pop
inc
jns
xor
lock
cli
xor
imul
sbb
mov
mov
xchg
std
push
mov
outsb
adc
mov
stc
mov
loopne
cwtl
test
stc
call
test
das
lcall
cmc
loop
adc
jg
and
lcall
outsl
out
cmp
cmp
out
pushw
pop
je
cmpsb
sbb
scas
adc
ficoml
cli
push
cld
and
out
clc
das
mov
pop
popf
repnz
inc
aaa
pop
scas
in
cmp
mov
add
push
xor
pusha
test
cmp
add
movsl
mov
pop
std
mov
clc
enter
stos
xlat
inc
inc
std
scas
dec
xchg
mov
xchg
inc
idiv
movsb
pop
dec
or
jecxz
lret
lock
pusha
xchg
pop
pusha
push
jbe
xchg
mov
clc
jg
xlat
subl
das
jg
cmpsb
mov
jge
push
mov
fcompl
adc
push
je
dec
and
test
shlb
in
repz
push
scas
mov
or
push
gs
cmpsl
int
daa
cwtl
xchg
xor
icebp
add
lret
inc
mov
dec
je
cmp
addps
mov
cltd
inc
mov
cli
mov
addr16
enter
int3
cmp
and
shrb
mov
mov
in
movsb
divl
and
mov
xchg
scas
pop
mov
xor
movsl
ja
adc
xor
cmp
nop
mov
mov
xor
test
dec
sar
insl
fstps
pop
cmp
pusha
pop
daa
mov
push
and
dec
mov
fbld
xor
xor
popf
fildl
pushf
test
xchg
dec
mov
daa
inc
sub
push
cmp
mov
daa
fwait
jbe
dec
lock
push
xchg
mov
insb
out
iret
cld
push
dec
and
jl
scas
or
out
fs
sub
jg
scas
or
push
enter
in
cmp
movsb
sub
jge
cmp
mov
insb
sbb
inc
shlb
sub
mov
mov
mov
enter
mov
push
ss
dec
xor
and
dec
mov
leave
sbb
ret
fistpll
dec
dec
dec
mov
sbb
stos
lahf
or
jnp
int
cs
movsb
mov
fsubrp
sbb
in
xchg
push
adc
test
dec
jae
push
xchg
jno
adc
lods
scas
push
lret
out
sub
ret
stc
sub
icebp
dec
testl
testb
jg
sbb
mov
mov
clc
or
add
mov
cli
add
loope
fadds
inc
push
xchg
fsubr
sbb
mov
xchg
jg
dec
mov
pushf
jp
pop
add
sub
call
cmc
into
outsl
mov
push
rcr
sub
sbb
push
dec
push
cmp
jnp
mov
mov
movsl
gs
add
jbe
push
xor
sbb
cmp
xchg
loop
stc
imul
cmp
fcompl
cmp
icebp
push
loop
sub
cltd
jae
dec
sub
in
shll
add
dec
insb
leave
loope
loope
ljmp
icebp
sub
rclb
jmp
and
inc
xchg
push
add
inc
aam
adc
ror
xlat
nop
loopne
aad
adc
inc
loopne
mov
jo
pop
pop
xchg
jo
fs
mov
test
xchg
es
xchg
mov
insl
inc
fcoms
add
inc
xchg
push
or
or
dec
pop
mov
cmp
adc
loope
xlat
sub
sbb
ljmp
and
je
and
mov
inc
shll
push
fwait
loopne
loope
das
mov
xchg
out
push
mov
aam
or
mov
xchg
cmp
jae
push
mov
lods
add
xchg
call
mov
mov
mov
and
dec
push
arpl
rclb
push
insl
shlb
xor
mov
mov
or
ret
mov
test
dec
xor
outsb
push
jb
in
push
adcb
mov
imul
roll
pop
fwait
sub
and
add
fists
inc
popf
test
sbb
fdivrs
mov
movl
push
adc
arpl
es
mov
mov
daa
call
iret
and
popa
inc
je
sub
cmc
add
repnz
movsb
and
popf
sub
mov
adc
call
fcompl
andb
pop
movsb
xor
mov
jle
jbe
lds
shlb
sbb
int
jl
pop
and
jbe
je
or
jg
test
out
ror
xlat
push
test
push
mov
jo
cmpsb
mov
fsubrs
xor
mov
or
cmp
cli
sub
pop
sub
xchg
push
adc
and
je
out
fsubs
push
mov
mov
add
xor
test
mov
outsb
jnp
nop
or
mov
cmp
add
shrb
pop
and
fs
fcmovne
xor
jae
cmc
adc
aaa
cli
in
jp
xor
mov
shll
leave
stos
cmp
jge
pop
xchg
sbb
jbe
mov
cmpsb
test
std
loope
incl
mov
je
imul
add
mov
into
stos
push
lret
pop
cmp
mov
jmp
pop
xchg
push
or
sbb
pusha
cld
into
ficoms
mov
lcall
fwait
push
push
icebp
pop
push
cltd
xchg
fwait
stos
jns
test
fwait
adc
dec
xor
test
adc
fsubrl
rorb
insl
sbb
into
lahf
inc
cmp
mov
outsl
fistpl
add
pop
cmc
xchg
mov
in
push
pop
outsl
cmpsb
xchg
cltd
cmp
inc
xor
out
out
dec
in
pop
das
mov
hlt
push
in
push
mov
sbb
xor
rcrb
push
xor
ljmp
pop
lret
xor
mov
call
cwtl
mov
cmp
inc
test
cld
pop
adc
jbe
mov
ljmp
loopne
shlb
fdivl
in
jne
ds
sbb
aaa
lcall
pop
pushf
mov
push
lret
loope
cmpb
cltd
addr16
xchg
dec
jmp
cmp
movsl
adc
lds
xchg
pop
shl
add
xchg
testl
fmuls
jns
push
pop
popa
pop
fstpl
jmp
jnp
pop
jo
xchg
jmp
mov
mov
addl
clc
mov
lret
flds
outsb
bound
jl
mov
iret
cmpsb
sbb
cld
push
mov
mov
stos
scas
mov
inc
adc
sub
sbb
sbb
mov
call
pop
out
shl
mov
cbtw
pop
rclb
lahf
push
fsubrp
test
and
lds
outsb
mov
xchg
je
adc
addr16
out
push
sub
lods
daa
cmp
ja
push
inc
push
jns
es
mov
sbb
mov
jp
pop
xchg
jo
mov
pop
insb
scas
push
ja
mov
je
popa
std
jg
pop
pop
jnp
sub
jb
xchg
das
aas
sbb
stos
jle
imul
fwait
push
mov
hlt
inc
ja
mov
cmp
mov
aaa
data16
jae
xchg
add
mov
push
xchg
cld
xchg
lcall
inc
sub
cmp
popw
sub
stos
jg
dec
nop
imul
inc
and
icebp
shl
jbe
sbb
mov
sub
mov
add
in
mov
sbb
dec
nop
lret
sbb
push
jno
push
popa
clc
imul
ret
pushf
jp
fdivr
add
xorl
int3
lock
cmp
addr16
inc
hlt
fsts
lret
push
mov
insl
lea
ss
cmpsb
sbb
xchg
push
jne
push
bound
xchg
and
add
pop
sbb
jg
loope
add
add
loopne
movsl
repz
jns
sub
and
aam
dec
aad
shl
jne
sub
js
and
push
jle
mov
das
fwait
jg
lock
or
push
and
sahf
rorl
sbb
pusha
repnz
mov
js
inc
lcall
into
mov
pop
cld
mov
push
fs
out
lock
pop
ret
push
jmp
dec
adc
fisubs
ss
rclb
movsb
loop
scas
sbb
shlb
arpl
sub
imul
mov
ret
cltd
and
or
aam
cmp
jle
sbb
jmp
testl
dec
loopne
clc
sbb
push
gs
into
sub
leave
jnp
inc
pop
in
dec
push
inc
xchg
dec
dec
adc
out
jp
sub
scas
and
mov
jae
adc
imul
shll
in
sub
fmull
cmc
jmp
les
loop
iret
cs
inc
sub
mov
in
mov
xchg
cli
popa
movsb
mov
minps
lret
cli
out
add
cmp
pop
loope
add
mov
loopne
xchg
mov
ss
test
pop
aad
mov
outsb
jne
insb
sbb
add
cmpsb
xor
mov
mov
xchg
mov
inc
not
xchg
adc
or
sbb
data16
push
fmuls
pop
mov
je
notb
jle
mov
xlat
fisttps
pop
xor
cmp
cmp
add
cmp
mov
jbe
nop
out
insb
adc
addr16
jae
dec
mov
inc
scas
cmc
jle
dec
mov
fs
aam
xor
jg
lret
mov
jb
mov
jmp
mov
jbe
xorb
inc
aam
inc
lahf
insl
test
mov
cmpsl
gs
pop
dec
out
adc
add
xchg
es
jg
arpl
frstor
pop
xchg
addr16
fisttpll
aas
rolb
mov
push
sub
pop
mov
add
push
rcr
test
sub
dec
mov
ljmp
stos
xchg
mov
xor
xchg
xchg
inc
pusha
mov
gs
xchg
xchg
shlb
mov
clc
adc
jp
int
push
loop
cmpsb
cltd
out
push
xchg
and
xchg
mov
movl
lret
repz
out
inc
fsubrl
push
mov
xchg
mov
xlat
mov
jbe
mov
bound
or
jl
xchg
lock
and
movsl
ja
in
ja
push
mov
lret
dec
icebp
mov
movsl
orb
xor
mov
out
aad
xor
inc
jo
rcll
sahf
pushf
mov
popf
stos
pusha
dec
and
cmp
adcl
mov
mov
mov
xchg
mov
and
imul
jae
mov
jbe
mov
outsl
repz
rorl
call
fsubr
push
cmp
xor
mov
inc
and
fldt
cltd
scas
pop
inc
data16
outsb
sub
insl
mov
jo
push
inc
jecxz
lcall
xor
mov
gs
rorl
cmp
movsl
inc
in
sub
xchg
mov
lcall
jae
or
cmp
mov
add
arpl
dec
das
mov
xchg
dec
and
bound
lea
mov
push
push
dec
jno
cmp
das
xchg
insb
movsl
faddl
xchg
cmp
in
sub
pop
jecxz
jne
cmc
ljmp
cmp
mov
inc
out
xchg
addr16
test
ds
leave
scas
movsl
mov
aam
dec
ss
aad
sarl
jo
ror
cmp
cmpsl
mov
cmpl
in
mov
sub
out
inc
adcl
adc
push
pop
push
rorb
pop
inc
iret
mov
pop
jg
pop
aad
in
out
loop
iret
js
pusha
or
lcall
cmp
mov
xchg
xchg
jbe
xor
test
hlt
rclb
and
in
inc
or
fcom
xchg
das
add
leave
jl
sub
push
push
xor
adc
popf
test
inc
fwait
dec
addl
andb
rcr
xor
lods
cmp
pushf
adc
dec
cmp
and
xor
xor
mov
jno
jp
ss
mulb
jmp
in
repnz
mov
cmp
sub
dec
jmp
pushf
mov
sbb
lahf
data16
adc
push
cmpsl
jnp
out
leave
jge
popa
cmp
add
aad
inc
fstpt
ljmp
call
lea
mov
sahf
sub
fcmovnu
in
sbb
out
or
out
pop
lock
cmpsb
sahf
or
shll
jecxz
mov
clc
mov
dec
lret
icebp
les
sub
imul
rol
pop
dec
shrl
xchg
std
adcl
lods
nop
imul
fdivs
test
inc
dec
mov
jns
xor
cwtl
inc
mov
gs
and
imul
and
or
inc
inc
adc
and
cmp
xor
pop
inc
mov
aad
hlt
out
xor
lcall
adcb
js
sub
or
rcrl
ja
in
test
dec
pop
jne
adc
aad
mov
cwtl
stos
movsb
sbb
sbb
shlb
gs
inc
lods
add
out
into
sbb
out
in
mov
fisttpl
pop
add
call
subb
mov
xor
add
adc
negb
imul
pusha
outsb
addl
stos
jb
icebp
lret
pop
movsl
or
sub
jge
fwait
jo
jp
daa
xor
icebp
jge
cltd
jno
shr
in
dec
adc
fbld
or
jnp
mov
push
outsb
mov
xchg
cmpsb
lock
xor
aad
push
pop
push
int3
es
fistl
jmp
mov
enter
add
jp
or
jb
faddl
add
xor
xor
jno
cmp
mov
xlat
cmp
or
push
xchg
and
adc
mov
inc
sbb
repnz
jo
push
cs
mov
cmp
xor
gs
jnp
fidivl
pop
rcll
ret
ficoms
mov
jecxz
sbbb
dec
jl
xor
lock
or
stos
mov
dec
das
adc
jne
mov
jnp
mov
cs
jno
or
das
scas
lds
pop
jae
fcmovbe
mov
jno
mov
pushf
rcll
cmpsb
test
loop
repnz
jb
pop
in
cmp
imul
pop
lds
xor
into
push
lock
call
js
test
stos
aad
pop
mov
xor
sub
ficompl
repz
loop
xchg
cmc
fmuls
pop
or
inc
mov
out
fldl
ret
xor
cmc
lods
dec
sub
loope
cli
outsb
stos
pop
dec
out
js
xlat
es
lea
jge
stos
nop
jne
sub
pop
xor
xor
fwait
jae
les
dec
jb
adc
and
and
mov
test
pop
mov
xchg
xchg
sbb
loop
dec
mov
repz
pop
aaa
push
mov
loope
push
lret
xchg
mov
test
pop
mov
mov
and
xchg
adc
jo
popf
sub
arpl
xor
sbb
dec
fistpl
daa
add
lock
mov
test
sub
mov
jo
mov
ljmp
mov
cmp
push
jne
in
mov
sbb
mov
push
sub
dec
in
push
fcmovbe
or
cmc
ret
add
shrb
jb
mov
es
adc
or
loope
mov
dec
sub
sar
xchg
lret
jp
jo
loope
sub
xor
je
xchg
mov
jmp
lds
jge
mov
or
jle
ficoms
ljmp
testl
jb
fcompl
lea
mov
in
clc
repz
xchg
dec
mov
jns
cmpsb
hlt
mov
sub
fstl
lds
ror
sbb
cwtl
cmp
mov
repnz
xor
and
cld
jbe
popa
cmp
mov
stos
arpl
dec
xor
addl
mov
dec
movsl
iret
fcomi
leave
xlat
cmp
cmc
sbb
pop
dec
mov
out
ficoms
insl
push
or
mov
xchg
mov
movsb
jg
mov
jnp
imul
into
ror
sub
sub
mov
jmp
sahf
or
mov
cmc
sbb
lock
cmpl
and
mov
jbe
addr16
fldl
add
outsb
es
push
mov
call
jns
in
push
push
sahf
push
js
jmp
les
xchg
sbb
jge
mov
jmp
pop
pop
xlat
cmp
insb
mov
pushf
inc
or
into
ret
icebp
test
lods
xlat
into
xchg
cmp
jns
mov
fldl
pop
and
out
lcall
ja
les
mov
mov
or
or
cld
in
pop
aas
and
leave
idiv
mov
adc
js
mov
xchg
add
sbb
pop
mov
xor
lret
jne
notl
addl
xor
imul
out
xchg
xor
loope
scas
inc
pop
out
push
push
sbbl
adc
imul
adc
scas
int3
push
imul
or
cmp
mov
lods
cmp
dec
mov
and
push
adc
dec
push
cmpsl
testb
adcb
jnp
cmp
cmp
mov
bnd
fucomp
in
dec
inc
scas
repnz
enter
imul
call
stc
adc
or
or
mov
shr
jnp
fs
sbb
mov
pushf
in
ljmp
jl
sub
pusha
in
cmc
stos
pop
nop
insl
loopne
fwait
pop
mov
jns
rcrl
adc
adc
xchg
test
or
repnz
outsl
cmc
sub
repz
sbbb
mov
push
idivl
jp
aaa
and
call
scas
mov
fmuls
or
add
outsl
mov
push
push
and
call
mov
jo
mov
inc
sub
adc
pusha
pop
dec
adc
cld
das
xlat
outsb
adc
fs
hlt
adc
aad
or
mov
fsubs
mov
cmp
mov
das
lea
fidivrl
push
cmp
xor
mov
shlb
decb
fldcw
xor
adc
xor
push
pop
test
rorl
popf
jno
shl
add
outsb
push
bound
push
adc
dec
test
ss
mov
jae
mov
mov
push
adc
scas
xor
xchg
push
add
mov
push
jne
pop
or
out
jb
fldpi
daa
jmp
and
push
ret
push
mov
mov
aad
xchg
and
es
pop
inc
mov
imul
jnp
ficoml
mov
aaa
pop
pop
add
pushf
imul
fisubs
fnstcw
negb
insb
pushf
cld
cmp
push
insb
test
cltd
bound
pop
dec
test
mov
lahf
cmc
pop
sbb
rcll
cld
push
pop
or
test
xor
xchg
push
pop
push
clc
mov
pop
sbb
xchg
frstor
insb
fdivrl
xor
mov
mov
fwait
lods
add
mov
movsb
pop
add
clc
adc
mov
filds
add
cs
xchg
sub
xor
inc
out
sbb
lahf
inc
sbbb
sub
mov
push
call
mov
xor
int
pop
add
aas
jecxz
inc
dec
out
insb
pop
mov
add
jp
adc
mov
xchg
jbe
inc
ret
fisttpl
sbb
fsubr
stos
add
ficoml
popf
ljmp
inc
in
out
pop
int
pop
cmp
fidivl
je
pusha
xor
hlt
mov
sahf
call
fcomps
js
aad
out
std
stc
rorl
sbb
movsl
sbb
stos
adc
leave
stc
das
mov
jne
js
scas
push
aas
mov
mov
xlat
je
push
hlt
pushf
sbb
mov
pop
xorl
push
push
cltd
arpl
hlt
sub
sbb
xchg
xchg
nop
sbbb
sti
and
in
xchg
cmp
jp
inc
fisttpl
push
sub
test
dec
push
pop
inc
mov
jo
mov
sub
rolb
dec
xchg
dec
insl
pop
mov
mov
pop
cmpsb
sarl
mov
add
mov
mov
mov
sahf
enter
es
xor
cmp
int
lahf
lret
adc
adc
sti
sub
cmp
mov
sbb
out
mov
cmp
test
xlat
aas
int3
shl
jbe
or
mov
or
loopne
adc
decb
mov
ret
mov
mov
inc
adc
repnz
pop
mov
pop
mov
lea
pop
xor
push
std
cmp
std
xor
aad
scas
lds
ret
push
pop
and
mov
adc
movb
jp
jl
sahf
xor
jb
cmpsl
or
push
pop
out
jge
pop
sbb
adc
lods
mov
bound
mov
stos
push
xchg
loope
adc
add
lcall
mov
std
imul
mov
add
jo
sbb
xor
imul
mov
jg
scas
mov
mov
subb
nop
sahf
xchg
fists
ja
loopne
mov
fwait
nop
arpl
hlt
iret
insb
call
mov
test
js
test
push
pop
jecxz
std
call
cwtl
mov
sub
lods
sbb
mov
push
arpl
loop
stos
addr16
mov
sub
imul
mov
test
mov
pop
shrb
pushf
or
ds
pushf
arpl
insl
stos
subb
dec
cwtl
add
adc
push
out
clc
inc
mov
cmp
adc
outsl
mov
bound
jbe
cmp
pop
fs
sub
test
dec
jnp
int3
fiaddl
ret
mov
sub
test
pop
xor
lods
xchg
cs
inc
inc
xchg
jle
jo
jl
scas
fldenv
mov
gs
sbb
add
dec
pop
loop
lods
stc
stos
xchg
les
cmp
push
scas
sub
fsubl
leave
fcom
xor
inc
shlb
repnz
aam
cwtl
xor
daa
roll
xchg
lahf
pop
jbe
mov
sub
cmp
sbb
cmp
mov
mov
test
or
add
pop
xchg
sub
sbb
mov
push
adc
mov
push
cmpsl
cmc
pop
lret
mov
loope
pop
jb
push
mov
xchg
out
sub
insl
push
xor
mov
pop
pop
push
sub
mov
adc
push
xchg
outsl
jl
mov
sbb
hlt
ret
jmp
xor
je
test
in
mov
or
gs
mov
xchg
lods
rep
mov
test
call
mov
sbb
push
mov
ret
ficoml
and
arpl
call
adc
sub
out
pop
add
lds
mov
push
loop
xchg
int
push
scas
lods
frstor
dec
or
sub
cmc
ljmp
lret
fimuls
cmc
cs
pop
jmp
loop
cmp
arpl
cmpb
xor
or
mov
bound
orb
push
inc
xor
inc
or
imul
pop
mov
and
imul
cmp
call
sub
fstpt
inc
mov
pop
jl
arpl
pop
jmp
mov
shlb
out
insl
or
neg
xor
aad
mov
gs
mov
pusha
add
outsb
int3
sub
shl
in
push
mov
loopne
dec
icebp
in
in
jg
mov
movsb
insb
jp
lret
pop
pop
and
xor
bound
icebp
jecxz
xor
stos
cmp
ss
xchg
test
cmp
sub
std
fcomi
call
xchg
shll
je
sub
loope
fidivs
push
divl
fisubl
lds
rclb
jne
lea
frstor
push
jp
sbb
lods
ss
dec
sbb
xor
sbb
add
fdivrs
insl
cltd
ss
sub
pop
sbb
sub
xchg
insl
pop
pop
add
lea
inc
in
sub
in
sbb
inc
pop
cmc
mov
sbb
push
inc
mov
pop
pop
rcrl
mov
xor
jmp
cmp
fmull
adc
test
testl
inc
xor
int
fidivl
push
shll
iret
clc
jge
sbbl
cs
xchg
push
xlat
pushf
mov
fs
sub
jle
outsl
hlt
mov
clc
out
shlb
iret
pop
xor
dec
cltd
testl
or
sub
jge
mov
loop
sbb
mov
ja
nop
mov
sbb
pop
xor
sub
fs
add
mov
out
jns
xchg
dec
ret
gs
push
mov
in
mov
mov
sub
sahf
jb
add
mov
pop
icebp
or
xchg
ja
push
fsubrl
mov
jo
dec
ja
push
insl
into
cs
jp
lahf
call
lods
push
addr16
mov
dec
scas
push
cmp
mul
xor
mov
mulb
movsl
cli
cmpsl
cwtl
cmp
bound
mov
es
dec
subl
cmp
decb
adc
add
lods
bound
jne
push
in
mov
sub
push
sub
in
push
pushf
add
ret
push
mov
xlat
push
push
mov
add
add
push
add
sti
cmp
or
sbb
cmp
dec
mov
cmp
rorb
jg
pop
subb
inc
repnz
jo
les
lahf
in
and
rorl
pop
push
mov
pop
ss
aas
mov
cmp
lcall
jle
jbe
jb
fisttpll
test
loope
imul
jne
pusha
insb
inc
mov
push
xor
test
sbb
imul
mov
inc
scas
das
xor
jle
xor
mull
add
jl
sarb
test
fdivs
shll
dec
in
rcr
sbb
and
push
add
jae
stos
fld
add
sub
fucom
test
aad
notb
das
xchg
and
shrl
out
and
dec
jns
xor
jbe
fmul
mov
je
pop
pop
mov
xorb
insl
lcall
push
loopne
lods
pop
jecxz
xchg
mov
cmp
sti
push
add
sub
xor
lea
in
icebp
xlat
into
repz
mov
fdivrp
dec
pop
in
push
inc
call
pop
cmp
mov
jg
frstor
jnp
push
pop
mov
inc
pop
arpl
popa
and
inc
jno
or
ficoml
movsl
hlt
test
adc
push
aad
sub
and
icebp
loop
ret
jmp
pop
insb
xor
int
leave
leave
sbb
int3
loop
movsb
pop
popa
pop
cmp
stos
lret
jb
mov
jle
dec
lcall
flds
movsl
call
jecxz
cmp
stos
push
dec
jnp
dec
loop
cmp
setnp
popa
call
xchg
data16
faddl
push
fs
xor
mov
loope
repnz
mov
pop
movsl
xor
lods
in
int
and
imul
jae
jnp
sahf
sarb
add
in
int3
cmp
push
cli
xchg
es
xchg
sub
or
push
and
or
lods
xor
pop
push
push
dec
je
and
sub
mov
in
xor
ljmp
cmp
mov
cmp
adc
xchg
imul
cli
mov
jnp
out
pop
daa
inc
jge
xor
dec
aas
aas
push
xor
lret
xchg
adc
into
dec
fsubrl
bound
std
adc
push
mov
ljmp
cs
pop
jge
repz
mov
leave
push
fstl
xchg
xchg
divb
ss
je
shl
sub
inc
lds
sub
push
sbb
sti
sub
cli
inc
inc
and
and
jnp
dec
pop
imul
cmp
in
cmc
inc
shrl
lahf
cld
mov
test
movsl
sar
movsb
cwtl
insl
mov
add
cld
adcl
js
cld
jl
sbb
outsb
stc
stos
les
fstps
sub
enter
test
mov
mov
enter
gs
and
repz
aas
jg
testl
icebp
push
fld
xchg
dec
clc
aas
pop
mov
jb
test
push
or
popf
shlb
add
xlat
stos
addr16
jmp
es
outsb
jg
subl
ss
fwait
mov
shrb
dec
inc
shll
lock
pop
pop
lret
cltd
pop
mov
fdivrs
mov
stos
ja
fs
cli
loope
test
inc
stc
jo
aaa
add
dec
fwait
cmp
cs
jo
mov
decl
fcmove
dec
xchg
test
and
andb
mov
and
cmpsl
aam
inc
mov
mov
aas
pop
mov
jae
and
push
xlat
popl
xor
mov
mov
ss
cs
inc
out
mov
cmpsb
mov
ret
jnp
rclb
fistl
sbb
test
popa
scas
mov
adc
adc
lahf
imul
jecxz
push
dec
inc
jb
sbb
int3
dec
jmp
xchg
xor
daa
mov
outsb
pop
int
shrb
add
xchg
adc
and
dec
pusha
test
adc
out
fldl
xor
aam
xchg
rcrl
dec
sbb
inc
xchg
fsts
pushf
test
xchg
pop
lds
rorb
outsl
shlb
fnstsw
xor
shll
mov
std
sti
lcall
je
sub
mov
es
cmp
iret
adc
cmpsb
rcl
xchg
std
out
mov
repnz
add
out
nop
push
daa
mov
cmpsl
bound
test
out
lock
loopne
shrl
iret
xchg
mov
mov
fsubs
push
movzwl
xchg
jecxz
nop
xor
popa
in
inc
mov
push
jno
lcall
mov
ja
mov
test
sar
ds
inc
add
xchg
or
loopne
iret
mov
out
es
push
dec
out
dec
push
xor
or
inc
or
mov
mov
loop
push
xlat
mov
push
ret
in
and
dec
add
mov
outsb
insl
push
cmc
mov
aad
push
cmp
mov
xlat
cmp
cmp
loop
sub
pop
xor
cmp
push
add
and
scas
mov
xor
aam
int
dec
or
pop
loop
outsl
xor
dec
daa
push
pusha
lcall
popa
popa
movsl
shrb
adc
add
pop
mov
aas
insl
jo
imul
or
jp
cwtl
xchg
in
lods
pop
test
cs
push
clc
jp
xchg
aas
test
mov
add
clc
or
adc
out
push
pop
aaa
mov
pop
cwtl
lock
popf
ficoms
push
mov
inc
cmp
pop
jg
add
dec
or
stos
stc
test
aas
or
xchg
jp
or
std
push
add
jne
inc
add
scas
into
rorb
add
std
mov
dec
xorb
cmc
sub
sbb
cltd
push
fs
xor
xchg
pop
mov
xchg
xchg
jg
xlat
add
dec
dec
pop
jg
sahf
or
sub
mov
mov
lds
mov
sbb
adc
cltd
mov
idivb
add
push
lret
fisubrs
push
cs
dec
push
jge
jge
xor
pop
dec
pop
scas
jle
scas
movsl
mov
lods
clc
fildl
mov
lahf
or
sbb
push
xchg
scas
cmp
cli
repz
data16
mov
mov
movl
mov
movsbl
sti
in
popa
shl
cmc
lods
aad
ret
pop
sbb
lods
enter
dec
imulb
sbb
fstpl
jne
test
pop
pop
add
push
fisubs
cmp
xchg
fmull
jne
std
es
fucom
loope
xchg
and
test
adc
xchg
mov
popa
inc
and
sarl
cmp
outsb
hlt
je
aad
inc
pop
jge
jge
fistps
mov
mov
lock
xchg
dec
xlat
jmp
jmp
sbb
and
rorb
ss
into
mov
out
mov
repz
repnz
xor
in
jp
cltd
fisttps
lods
inc
fiadds
sbb
ret
push
call
movsl
sbb
rorl
push
orl
push
sub
jne
cmpw
add
adc
cs
arpl
dec
out
inc
in
stos
nop
test
ss
lods
mov
fs
loopne
in
cs
jl
in
jne
adc
inc
xor
inc
movsl
enter
xor
test
ja
push
mov
mov
sbb
bound
adc
adc
xor
and
mov
push
cmpb
jbe
inc
jle
pop
adc
gs
lret
sbb
imul
fdivs
test
fstl
mov
lcall
dec
jg
js
cmpsl
adc
rclb
cmpsb
iret
mov
dec
lods
int
push
lret
js
xchg
jnp
add
out
cmp
pop
cmp
lds
insb
pop
mulb
in
cs
imul
rcr
rorl
std
stos
xchg
dec
push
adc
rcl
addr16
icebp
add
mov
mov
clc
out
pop
inc
mov
aaa
inc
pushf
aad
data16
test
mov
iret
push
or
sbb
mov
fwait
xchg
faddl
push
pop
dec
jnp
jnp
sub
dec
xor
mov
outsl
dec
mov
lret
icebp
ljmp
sub
sub
gs
push
or
and
insb
add
and
or
mov
cs
jg
sbb
xor
adc
jae
pop
pop
jnp
ds
jb
dec
repz
test
fisubrs
and
sub
lock
shll
dec
ret
xchg
stc
pop
sbb
shl
or
dec
insb
fimuls
sbb
ja
inc
scas
cmp
push
sti
dec
lods
jbe
xchg
adc
insb
mov
mov
jo
lods
hlt
jbe
das
pop
push
adc
pop
inc
iret
cmpsb
mov
popa
xor
cmp
sub
je
dec
mov
xor
dec
xchg
in
inc
ljmp
inc
adc
lret
out
icebp
insb
int
sti
fistpll
dec
dec
sub
shrb
addl
xchg
shlb
bound
rclb
pop
mov
rcll
sbb
cmp
out
cltd
int3
jg
stc
fsubs
leave
jle
mov
addr16
pop
mov
cmp
lods
push
movsl
ja
jae
adc
pop
out
xor
cs
icebp
mov
pop
cmpsb
or
cmpsl
mov
mov
es
lds
cmp
leave
dec
pop
das
bswap
push
push
sub
lds
enter
je
negb
and
lock
repz
in
push
mov
sub
xchg
lret
jmp
mov
int
cmc
jbe
jle
aad
xchg
and
lods
jle
and
mov
movsl
mov
repnz
in
mov
or
dec
add
sbb
jne
jp
out
or
fcomps
xchg
aas
sti
push
push
data16
out
cmp
addl
imul
orb
push
icebp
push
dec
int
cli
call
cmp
out
jb,pn
and
or
mov
or
dec
jp
mov
jo
cmpsb
xor
add
push
xor
in
and
ss
jae
test
in
sbb
mov
dec
popf
mov
sub
mov
dec
add
lret
rcrb
data16
inc
pop
jmp
int3
outsl
lods
mov
pusha
mul
popf
mov
movsb
dec
inc
xor
mov
mov
add
into
hlt
repz
mov
or
jp
lea
lea
stos
xchg
and
das
sub
cmp
jmp
or
mov
hlt
movsb
in
shr
push
adc
rolb
nop
mov
jnp
mov
clc
ds
lods
jnp
mov
outsb
pop
ret
clc
cmpsl
cmp
jle
cwtl
jb
sti
xor
not
push
in
in
das
jecxz
lods
cmp
ds
arpl
mov
and
mov
in
mov
dec
sbb
repz
hlt
push
sub
mov
enter
xchg
mov
sbbl
push
gs
jno
inc
inc
xor
xor
fsubrs
xchg
dec
xchg
sbb
fmuls
in
jl
stos
icebp
data16
push
lea
or
test
pop
jmp
jno
xor
jnp
add
mov
mov
xlat
xrelease
mov
icebp
add
jp
rol
iret
or
pop
insb
jle
fs
or
ljmp
xor
jae
sub
cld
mov
cmc
adc
leave
gs
jecxz
mov
repz
in
push
out
mov
dec
pop
in
pop
pop
mov
adc
xchg
or
jle
lret
pop
jbe
inc
scas
mov
and
jl
xor
cmpsl
loopne
cmpsl
push
or
arpl
xor
cld
xor
pop
lahf
test
mov
out
mov
les
mov
clc
cmp
mov
or
js
shll
dec
dec
xchg
rcrl
add
int3
and
xchg
push
mov
fsubrs
rol
lods
sub
xor
jecxz
jno
pusha
xadd
cli
fisubl
push
xlat
clc
xchg
sti
jne
adc
jnp
sbb
addr16
adc
loop
and
imul
jnp
jo
in
jge
fs
sub
jne
mov
xlat
cmp
out
enter
aaa
pop
call
mov
fisttpll
sbb
imul
pushf
sbb
sahf
or
lods
cmp
fimuls
out
aad
mov
cmp
dec
cmp
lock
insl
push
mov
push
adc
xchg
sbb
dec
mov
scas
dec
out
lea
hlt
addr16
les
jecxz
dec
loope
push
lods
or
lahf
jp
cmp
or
xchg
stos
into
test
xchg
loopne
fsubrs
je
fwait
cmpsb
lret
adcb
in
or
xor
and
test
push
dec
pop
bswap
mov
mov
xor
arpl
pop
and
das
mov
loopne
aas
xchg
cmc
mov
loopne
push
add
xchg
adc
lret
sti
pusha
subl
sbb
in
daa
rolb
jle
push
mov
loop
add
loope
sbb
mov
pop
mov
das
xor
fwait
push
testl
sub
jge
sbb
dec
jo
adcb
cld
mov
cld
mov
mov
out
nop
and
jecxz
pop
and
cmp
dec
lock
aad
lods
adc
test
js
cmc
je
stc
dec
insb
adc
fistps
adc
jecxz
in
or
popf
mov
mov
mov
dec
shl
add
pop
adc
data16
cwtl
bound
rcll
push
inc
rol
ds
shll
rcrb
pop
jne
inc
je
movsb
dec
xor
xchg
daa
popa
out
and
pop
adc
pop
sub
push
call
xchg
repz
icebp
push
adc
jl
clc
fwait
sub
imul
mov
inc
xchg
aam
leave
mov
nop
mov
mov
aaa
adc
sbbb
mov
dec
push
push
int3
test
test
pop
out
xor
add
das
jno
adc
jg
lcall
adc
sbb
xor
and
das
addr16
mov
dec
mov
adc
in
push
es
popf
ss
xchg
and
push
or
sbb
shlb
mov
andl
lret
cmpsl
pop
scas
xchg
and
es
fidivs
inc
dec
sub
rcrb
in
lret
mov
push
psubusb
jo
cmc
hlt
lcall
mov
mov
lods
sub
out
mov
jae
mov
cmp
shll
push
mov
xor
or
and
sti
insl
xchg
mov
pop
fldl
je
inc
jge
call
hlt
insl
ror
cs
out
cmp
pop
lds
or
aaa
pop
mov
mov
outsb
push
mov
xchg
ljmp
xchg
in
add
ds
nop
push
data16
inc
stos
hlt
jae
pop
leave
daa
push
xchg
mov
xchg
insl
es
mov
les
outsb
in
aam
mov
jmp
xor
push
mov
leave
es
jae
xor
movsl
mov
add
in
mov
push
adcb
mov
test
xor
inc
rcrl
pop
ljmp
adc
sub
add
ror
adc
sub
jecxz
push
sahf
sti
add
or
loop
cltd
xor
push
cmpsb
jle
cld
and
sbb
cmp
cmp
mov
insl
fnstenv
inc
xchg
dec
test
inc
js
add
insl
push
xchg
xor
in
push
mov
mov
mov
push
test
pop
jne
add
lea
xchg
insl
js
in
push
jp
mov
push
stc
pushf
dec
pushf
sahf
jecxz
dec
ret
pop
xor
nop
add
sti
or
mov
mov
push
xchg
dec
iret
xchg
jns
in
mov
outsb
pushl
adc
sub
je
cmc
pop
sbb
push
out
test
test
dec
jmp
add
mov
mov
xchg
js
mov
mov
xchg
push
lods
cld
ret
leave
sti
es
int
repnz
hlt
fwait
dec
sbb
pop
aad
sahf
xchg
cmp
sub
add
ret
mov
movsb
mov
xchg
xchg
leave
jg
out
cmp
jns
imul
jge
add
addr16
dec
sub
xchg
ret
dec
inc
sub
mov
jb
xor
cli
xor
iret
sbb
and
sub
mov
iret
xchg
mov
fwait
insl
inc
faddl
pop
or
sub
mov
fcomi
or
xchg
push
xchg
inc
out
lds
sbb
inc
adc
insb
sub
add
adc
pop
cmpsl
pushf
outsl
and
imul
sahf
cmp
mulb
fwait
es
clc
push
and
adc
jnp
inc
mov
jnp
sahf
clc
mov
dec
gs
jg
and
js
dec
repnz
cmpsl
pop
fsubl
js
movsl
inc
enter
adc
roll
push
jg
scas
adc
sbb
pop
pop
xor
and
arpl
push
jbe
lcall
in
inc
sbb
fcmovnb
add
add
hlt
ja
outsl
or
mov
ss
pop
testl
adc
or
cmpsl
lret
inc
in
jb
jbe
mov
aam
sti
xlat
xchg
xchg
inc
in
adc
and
lret
xchg
les
push
adc
lret
leave
add
inc
rcrl
mov
sub
mov
fwait
jno
imul
cmp
jecxz
decl
push
cwtl
insl
inc
icebp
clc
sbb
cltd
pushf
pop
test
fisubl
fldt
aas
lds
cmpsl
popf
sub
scas
mov
lret
sub
fwait
subb
mov
and
sbb
adc
arpl
lret
rcrl
xchg
or
adc
ret
cmp
int
ret
mov
mov
rcl
leave
cmp
cmp
mov
fst
inc
xchg
push
sub
mov
and
jle
addr16
scas
lods
push
inc
pop
adc
inc
xor
or
xor
sub
adc
orb
jmp
int3
lods
fists
cmp
out
clc
imul
pushf
rorb
mov
pop
dec
jmp
cltd
scas
mov
lret
dec
xchg
lock
mov
lods
pop
fdivrl
stc
push
jge
pop
cmp
or
xor
mov
jns
jns
push
test
xchg
xchg
imul
dec
cmc
xchg
mov
data16
jecxz
fidivl
addr16
adc
xor
fistps
aas
fmul
fst
sti
fisttps
les
xchg
jae
add
sub
lods
scas
and
xlat
jge
addr16
jl
aas
xor
or
mov
add
add
mov
jbe
and
aas
enter
add
aad
mov
jmp
mov
jo
es
dec
pusha
mov
and
mov
pushf
adc
add
xor
outsb
add
pop
imul
jmp
dec
xor
jl
xchg
repz
jo
mul
cld
cs
jmp
mov
inc
mov
jg
inc
mov
fidivl
imul
and
scas
or
nop
cmp
jge
jg
repz
inc
cmp
jg
inc
popa
inc
jo
xor
pop
dec
xorl
loop
jae
lock
xor
lds
sbb
adc
jge
inc
pop
jns
jge
jle
shlb
popf
arpl
sub
xor
jae
roll
sti
ret
or
add
dec
or
mov
cmp
dec
daa
mov
adc
inc
sub
or
sub
pusha
mov
mov
icebp
enter
sub
jecxz
mov
jns
mov
call
cmc
daa
mov
adc
pop
clc
mov
in
scas
dec
andl
insb
subl
lods
les
subb
lds
or
fistpl
repz
jmp
aaa
pop
jl
xlat
xlat
xchg
add
jbe
dec
jp
iret
ja
mov
ret
dec
ret
sahf
outsb
ja
xchg
test
push
inc
and
xor
and
xchg
cltd
out
jle
jecxz
add
or
cmp
jmp
jle
test
jecxz
sbb
add
je
out
xchg
repnz
mov
push
ja
mov
ja
testl
stos
cld
sub
shlb
sub
dec
and
sbb
loope
popa
or
sti
mov
pop
jno
arpl
inc
push
pop
adc
int3
inc
cld
fimuls
das
ror
xor
pop
in
nop
xchg
sbb
and
jp
fcmovnbe
insl
pop
shll
and
inc
adc
test
repnz
push
jle
dec
outsb
rcr
mov
aas
in
mov
pusha
xchg
inc
popf
mov
xchg
cmp
inc
add
and
mov
pop
faddl
jecxz
lcall
pop
out
mov
sbb
jns
icebp
sbb
out
sub
dec
mov
mov
addb
push
pushf
sub
cmp
mov
sub
inc
xchg
add
cmp
lahf
out
fistpl
data16
jnp
call
mov
ja
leave
and
decb
cmp
test
imul
or
cmpsl
rcll
lods
push
sti
xchg
out
clc
ds
mov
sbb
stos
stos
mov
mov
fsubrl
aaa
push
pop
sbb
sub
fwait
lahf
xor
mov
xor
popf
pop
pop
fucomp
xchg
lds
dec
ss
adc
sub
orl
sbb
scas
popf
aaa
mov
push
jp
leave
cli
xchg
pusha
push
lock
sbb
lcall
sbb
pop
xchg
push
dec
addr16
inc
movsl
sahf
in
cmp
subl
in
out
lds
push
cmpsl
jnp
roll
adc
ret
xchg
stc
lret
ljmp
mov
or
lret
std
mov
xchg
pop
mov
dec
xor
outsl
sub
mov
cltd
mov
lahf
xchg
inc
mov
ret
mov
mov
pop
mov
dec
mov
inc
inc
es
mov
out
cld
dec
negb
add
and
movsb
adc
cmp
jbe
lock
fwait
daa
test
out
adc
inc
andl
push
lods
or
and
popf
xor
stc
mov
mov
addr16
dec
jae
mov
push
jmp
sbb
fwait
rorl
fucompp
mov
push
pusha
push
int
inc
aas
es
call
bnd
dec
dec
lea
ja
std
cmc
xchg
mov
loopne
cmp
xchg
stc
int3
out
push
cmpsl
jmp
bound
pop
popf
je
lods
or
mov
adc
jae
fildl
or
push
dec
out
sub
jnp
pop
lret
jne
fcmovne
icebp
mov
pop
fcmovb
add
adc
mov
mov
les
mov
xor
sbb
neg
pop
arpl
shrl
ret
add
lea
mov
mov
jg
cltd
psrld
cmc
xlat
bound
jne
fstpt
ja
loop
mov
xchg
add
pop
fiaddl
in
pop
aad
sbb
pop
pop
stos
or
popf
faddl
or
sub
fiadds
jmp
sbb
xor
out
dec
dec
sti
mov
sub
imul
and
xor
cmp
mov
das
ud1
push
fisubl
das
push
mov
insl
mov
cltd
jecxz
mov
xchg
fldcw
push
cs
xchg
shrb
shl
mov
mov
bnd
or
shll
lock
cli
mov
mov
stos
inc
sbb
jne
fwait
cmp
stos
inc
jl
mov
xchg
sbb
sahf
push
ljmp
pop
pmulhuw
dec
shlb
xor
ror
fidivs
ss
aad
insl
sbb
jmp
sbb
rorl
ljmp
repz
cwtl
adc
push
push
addr16
adc
repz
dec
pop
lcall
or
mov
sub
pop
xchg
repz
popa
pop
and
sbb
lods
aad
int
adc
fdivl
js
push
scas
push
mov
mov
out
jge
les
sbb
pop
mov
xor
inc
add
dec
sbb
pop
dec
adcb
ss
jb
xrelease
mov
mov
lea
push
xor
adc
add
aaa
adc
inc
test
out
test
sub
stos
js
call
fs
mov
ljmp
test
ret
and
mov
fstps
mov
ret
push
pop
jae
loop
and
mov
icebp
repz
addb
repnz
clc
pop
lahf
inc
and
sub
and
push
or
push
hlt
mov
call
and
outsl
lea
addr16
enter
jmp
or
loope
in
test
incb
jb
jmp
push
addr16
jno
int3
sbb
dec
lods
inc
add
jmpw
mov
test
mov
rcll
mov
or
xor
stos
roll
pop
stos
jg
dec
jno
push
mov
cwtl
pop
std
movsb
push
cmp
pop
cmp
sub
mov
sub
push
iret
inc
shll
sbb
stc
push
or
jne
push
mov
mov
push
sarb
add
push
clc
add
mov
stc
lods
js
aam
cld
in
shl
cmp
jp
test
and
add
mov
sub
jb
xchg
pop
or
dec
mov
inc
scas
lea
clc
mov
dec
xor
imul
or
adcb
xchg
add
sbb
sahf
adc
stc
test
ret
andb
mov
jae
sub
and
gs
jo
push
mov
push
and
fwait
sbb
or
leave
insb
jl
adc
clc
aaa
pop
xchg
adc
rcll
mov
dec
mov
in
repnz
dec
mov
jbe
jb
xchg
pop
fsts
mov
jl
stos
push
dec
popf
aad
xor
sti
addr16
repz
xlat
sbb
jne
push
js
mov
shll
cmp
dec
lret
xorl
fdivr
mov
sub
pop
scas
iret
int
mov
or
scas
cmp
mov
adc
out
jle
mov
fnstsw
or
xor
push
daa
shlb
sub
aam
adc
mov
shll
arpl
in
jg
or
xchg
shrb
filds
xchg
sbb
push
or
lods
icebp
addr16
ror
ds
adc
inc
ret
jecxz
mov
dec
sbbl
stos
push
data16
add
xor
push
add
icebp
cli
ficomps
mov
aad
sub
cli
mov
cmc
mov
inc
lcall
std
insb
cmpsl
or
cmp
jle
jp
cmp
idivb
decb
imul
jmp
add
push
je
mov
mov
cmp
fcompl
repz
shr
lcall
fyl2x
lods
push
cmp
loop
adc
jno
lods
xchg
call
xchg
xchg
insb
mov
stos
mov
cmp
ds
push
add
std
mov
notl
sbb
jmp
jle
push
insl
add
je
sar
or
cmp
lret
mov
sub
sub
fsubrs
or
rcl
js
xchg
sbb
arpl
add
jecxz
cwtl
push
inc
or
daa
xchg
add
ja
mov
push
push
movsb
filds
jae
xchg
andb
pushf
sarl
push
or
sub
xchg
fisttpl
negb
mov
xor
adc
das
in
in
sarb
adc
leave
fisttpll
inc
xchg
ds
ret
arpl
cmpsl
cmp
pusha
mov
bound
xchg
ret
test
jle
hlt
push
nop
lods
lret
push
aas
addr16
sub
jle
outsb
mov
pop
cmp
mov
sub
out
adc
xchg
jo
cmp
ret
adc
mov
rolb
push
pushf
enter
rorb
inc
cli
or
xchg
out
test
dec
jb
xchg
jae
and
lret
sarl
inc
mov
or
repnz
cmp
fwait
movsb
cmp
mov
xor
es
inc
test
inc
ret
pop
mov
pop
cmc
or
in
jmp
pop
mov
jbe
xchg
push
cmp
push
fdiv
xchg
push
cmp
lret
xor
les
cmpsb
hlt
add
push
mov
imul
pushf
mov
es
into
or
or
sti
jecxz
inc
cld
ljmp
addr16
out
push
lahf
sub
mov
dec
jns
jns
mov
clc
cmp
ljmp
sub
add
call
mov
mov
push
push
adc
pushf
fistpll
inc
mulb
mov
out
push
call
pushf
jp
xor
sti
out
imul
sbb
out
push
push
mov
imul
jnp
sub
popf
pusha
pop
pop
sub
lds
pop
push
jmp
mov
outsl
lcall
sbb
rorl
dec
aaa
bound
inc
shlb
out
loope
pop
mov
jge
bound
push
lods
ret
sub
rcrl
sbb
cwtl
jle
dec
notl
pop
test
dec
pop
mov
dec
in
dec
jmp
pop
rcll
lcall
les
shlb
aas
push
call
andps
ret
aad
nop
in
rorb
or
cmpsb
bound
sbb
lret
ss
cmp
fcmovnu
cmp
loopne
jmp
je
frstor
push
jge
push
or
ljmp
aad
fists
cwtl
outsb
aaa
adc
shrl
xor
and
outsl
cmpsb
adc
aas
adc
mov
xor
mov
inc
cmpsl
cld
jmp
add
mov
outsb
mov
jno
xlat
pop
and
mov
cmpsb
push
aad
arpl
cmpsl
adc
or
into
sbb
and
fucompp
hlt
ret
pop
xchg
fisubrl
cmc
and
jne
push
sub
repnz
fsubrp
sub
int3
mov
inc
stc
mov
mov
push
adc
and
and
mov
cmp
mov
fidivrl
negb
mov
adc
lret
or
loop
enter
test
mov
setl
xor
stc
shld
mov
xchg
leave
push
out
cmp
shld
cs
loopne,pt
jne
jnp
cmp
xchg
push
add
push
mov
rorl
mov
arpl
test
adc
lret
test
call
mull
xor
aad
addr16
sbb
sbb
push
sbb
mov
lcall
test
js
pop
pop
int3
out
subb
orb
add
push
pop
dec
cmpsl
cmp
outsl
loopne
push
sbb
test
sbb
pop
xor
std
pop
pop
mov
inc
mov
je
int3
cs
aaa
cli
sub
push
mov
push
sbb
cltd
sbb
sbb
jb
out
mov
sti
bound
dec
pop
or
dec
test
test
out
data16
lcall
mov
mov
call
stos
jbe
ja
inc
fs
fldl
repz
add
movsl
and
lcall
push
push
mov
loop
test
fists
dec
movsb
out
arpl
in
enter
sbb
jb
mov
inc
int
or
mov
xor
repnz
jle
out
int
js
and
mov
jl
jmp
in
es
xchg
jecxz
mov
js
sbb
pop
mov
mov
pusha
xchg
mov
push
and
imul
mov
shlb
mov
add
jbe
dec
ja
xor
mov
rclb
adc
clc
imul
add
cmpb
lahf
and
fsubl
push
ljmp
mov
dec
insb
in
std
jbe
les
outsl
scas
std
inc
fisttpll
sub
xor
repz
mov
mov
frstor
cmp
xlat
sbb
and
loope
test
dec
imulb
fnstenv
xchg
push
and
pusha
call
cmp
xor
and
adc
or
cmpb
popa
dec
stos
cmp
xor
cld
daa
out
mov
push
adc
mov
inc
mov
mov
push
mov
inc
es
andb
inc
pop
or
loopne
bound
or
call
sbb
or
ljmp
pop
xchg
shl
add
mov
dec
pop
jle
ljmp
aaa
push
mov
mov
push
outsb
sbb
in
inc
inc
cld
mov
iret
sbb
insb
cld
mov
movsb
leave
aam
jmp
cld
jo
add
sub
xlat
inc
clc
pop
sarl
inc
pop
mov
dec
jo
scas
out
fcmovne
cmpsl
mov
jmp
adc
cltd
int3
adc
fcmove
push
rcl
call
and
sti
ds
mov
in
xchg
lods
std
push
mov
adc
pop
adc
stos
push
xchg
add
int
xchg
aad
fldl
repz
fnstenv
sub
fsubp
xchg
dec
jbe
jo
rsqrtps
inc
push
cs
js
cmpsb
pop
mov
rol
xor
bound
mov
push
in
das
and
lods
imul
xchg
mov
and
adc
push
pop
and
jno
repnz
cs
aam
cmpsb
sub
dec
pop
test
cmp
fisttpll
ror
call
push
ret
mov
xchg
sub
movsl
out
daa
icebp
or
pop
add
add
in
push
outsb
jg
push
in
adc
inc
jp
mov
or
das
int
dec
les
sub
ss
repnz
lock
sbb
dec
out
cmpsl
sub
push
ljmp
mov
scas
mov
xchg
fcmovnu
adc
mov
idivb
sub
scas
mov
or
and
push
rcrb
pop
pop
pop
mov
mov
sub
pusha
sub
xchg
mov
cmp
adc
inc
js
mov
popl
loope
scas
popf
push
jle
xlat
cmpsb
icebp
in
das
dec
stos
mov
inc
icebp
lods
leave
xchg
loope
adc
push
pop
sti
fstps
jge
js
fidivrl
jno
sub
add
shll
or
mov
pop
lods
sub
sbb
mov
push
dec
in
push
cs
dec
mov
jno
aam
sub
loop
aad
mov
in
leave
push
xchg
rcr
popl
and
xchg
lods
mov
jno
mov
xor
mov
xor
popa
testl
sbb
inc
sbb
leave
sbb
and
xchg
pusha
es
bnd
sbbb
or
mov
jbe
push
dec
sbb
push
sbb
pushf
cli
cmp
mov
imul
xor
out
push
mov
pop
pop
aam
ror
shlb
imul
test
sbb
lods
loopne
jbe
cmpsb
add
cmp
and
mov
mov
xor
cmp
xchg
lea
mov
and
mov
and
xchg
dec
scas
test
cmpsb
aam
or
dec
jne
fidivl
call
dec
push
je
test
jns
and
push
xchg
pop
or
pop
divb
mov
ljmp
sub
jl
pop
les
fcmovbe
push
sub
sub
into
xchg
mov
cmp
jp
or
aaa
and
adc
and
push
push
xor
pop
adc
rcrb
inc
push
jae
xchg
pop
push
imul
inc
ret
icebp
jge
lcall
and
int3
sbb
nop
fbld
jne
pop
aad
pop
mov
mov
sahf
fdivl
mov
sub
scas
push
rcll
xor
jl
outsb
mov
sub
insb
in
out
mov
lret
sbb
enter
ds
pop
enter
mov
ja
sahf
leave
and
jb
push
popf
in
mov
xor
adc
push
or
cmp
sbb
loopne
mov
xor
add
push
jo
sbb
mov
lahf
fnsave
jge
push
push
clc
into
push
adc
add
cld
ret
mov
xor
sti
pop
jne
dec
adc
pop
xorb
mov
jno
jae
dec
cmp
mov
subb
and
stos
insl
mov
mov
lcall
mov
cwtl
bound
in
xchg
addb
adc
enter
ret
lea
idivb
aam
jbe
test
and
push
push
test
dec
inc
or
adc
out
into
addb
dec
out
cmp
pop
xor
addl
push
mov
push
adc
test
sub
mov
je
ss
andb
inc
xor
dec
hlt
cmp
mov
mov
add
std
sarl
inc
push
int3
iret
and
and
testl
clc
in
push
into
subl
mov
mov
inc
cmpsl
in
hlt
stos
in
sti
push
xor
in
pop
popa
mov
mov
int
jl
cmc
bound
mov
mov
frstor
jp
cmp
test
and
aam
sbb
call
adc
mov
push
inc
mov
cmpsb
insl
and
push
cmpsb
jbe
popf
imul
jl
in
fcomps
and
pop
xchg
inc
add
add
inc
or
cli
fstpt
pop
inc
icebp
inc
mov
ss
jb
js
cmpl
nop
iret
lcall
lea
enter
stos
jns
pop
or
movsl
adc
std
testl
ds
movsl
add
in
js
xor
cltd
adcb
lock
add
ret
outsb
pop
sarb
inc
js
cmp
adc
sbb
mov
adc
imul
mov
mov
mov
adc
dec
imul
mov
fsubrp
xchg
lea
std
add
mov
fidivrl
loope
imul
lcall
popa
dec
jle
push
dec
add
sub
adc
xor
dec
std
cmp
push
inc
lret
push
iret
into
rorl
scas
cmc
in
mov
sub
jne
jnp
xchg
js
in
imul
fcoms
clc
pushl
idivl
xor
push
xchg
int3
xor
popf
pop
or
aaa
ret
fdiv
test
mov
hlt
fwait
cmpsl
mov
int3
lds
dec
push
mov
dec
jg
xchg
outsb
clc
loop
mov
push
or
xor
addr16
insl
bound
iret
hlt
fwait
mov
fadds
mov
filds
mov
dec
lds
lods
cwtl
pushf
in
sar
movsb
fadds
push
cmp
or
dec
cmpsb
popf
cmovo
lahf
andb
sbb
bound
push
outsl
fwait
mov
test
in
pop
sbb
cwtl
inc
jle
int
jbe
dec
cs
outsb
cmp
sahf
fwait
sub
cs
mov
int3
cmp
push
sbb
dec
jae
cld
xchg
mov
xchg
ret
in
adc
aaa
mov
outsb
push
and
pop
xor
inc
pop
pushf
pop
mov
adc
js
repnz
jns
cmp
out
imul
insb
jno
jge
stos
dec
insl
push
shlb
int
mov
in
scas
xchg
dec
mov
lcall
inc
int3
icebp
adc
sub
pop
imul
pop
mov
aam
mov
mov
pop
add
daa
rcr
xor
inc
jg
and
out
ret
inc
in
out
outsb
std
jns
pop
adc
fidivrs
out
repz
or
xlat
pusha
test
pushf
cld
rolb
mov
int
cmc
mov
popf
stos
jmp
inc
imul
call
aam
fistpll
add
pop
jge
add
jmp
mov
es
and
fildl
inc
mov
cmpsb
jp
std
sub
jmp
out
arpl
lods
mov
les
pop
jg
aas
inc
sbb
sub
in
out
mov
xchg
fildll
loopne
sub
push
popa
xor
mov
push
data16
mov
cltd
push
mov
dec
pop
leave
pop
int
mov
ja
jnp
jbe
pop
mov
fildll
sti
test
das
aam
popf
andb
xchg
stos
xor
subl
mov
xchg
fwait
std
dec
or
sbb
mov
xlat
lods
mov
pop
jge
in
add
loopne
cmp
scas
les
jmp
je
shl
dec
xchg
dec
adc
lahf
dec
add
shrl
sbb
and
push
pop
mov
inc
or
push
inc
lock
in
inc
sbb
repz
mulb
or
cmc
mov
pushf
mov
std
mov
inc
aaa
dec
pop
imul
sti
mov
stos
std
mov
sbbl
call
mov
aam
mov
or
and
xor
lret
adc
dec
and
sub
add
sbb
or
sbb
addr16
cli
jne
int3
pop
lock
sbb
shlb
test
sbb
jo
mov
sbb
push
testb
jno
and
mov
repnz
inc
rcl
mov
adc
xchg
call
jmp
sub
test
lcall
inc
aad
fstpl
push
pushf
xchg
aas
xchg
cli
push
add
in
fnstenv
dec
lods
adc
sub
jno
sti
pop
mov
mov
ret
aam
inc
out
jl
leave
cmp
ljmp
push
aaa
jl
ja
fdivrl
in
in
shlb
pusha
or
sbb
lahf
xchg
scas
sub
das
std
sub
aas
add
test
mov
or
pop
sub
in
add
xor
cwtl
repz
jle
mov
ds
lcall
xor
cmp
sub
push
in
sbb
xchg
and
and
push
sbbb
into
pusha
or
xor
adc
std
sub
pop
mov
imul
iret
mov
jo
xchg
fisttpll
js
xchg
gs
enter
adc
xchg
mov
mov
arpl
and
mov
mov
adc
pusha
sbb
xor
pop
repnz
loop
or
xchg
hlt
sbb
jo
lret
and
mov
out
jno
mov
cli
gs
push
orl
jl
sub
out
popf
test
sub
nop
cmp
int3
test
mov
mov
stos
cld
dec
sub
dec
mov
out
jg
aas
mov
test
push
cmp
int3
pop
push
je
fmuls
cmp
jle
mov
push
add
xchg
jno
sbb
sub
push
mov
push
movsl
fisttpl
neg
lcall
xor
dec
mov
aaa
pushf
pop
jae
xor
add
lcall
dec
rolb
aas
xchg
sti
fstl
xchg
mov
mov
push
sub
add
sarl
jne
popf
ret
add
mov
loopne
jbe
xor
jne
clc
scas
push
pop
dec
mov
jne
and
daa
dec
scas
push
ja
add
movsb
push
xor
int
ljmp
push
push
clc
gs
sbb
ret
jo
test
aaa
and
pop
lock
jmp
enter
lcall
jae
dec
add
push
in
cs
shlb
inc
or
in
pop
adc
lahf
js
or
bound
jno
fsts
popa
mov
aas
mov
xor
pop
push
inc
cmp
test
add
xchg
mov
push
push
leave
into
inc
or
or
or
xchg
inc
movsl
dec
pop
ds
mov
les
lcall
sub
nop
gs
out
or
shl
out
loope
outsl
xchg
into
lahf
xor
insl
adc
fimuls
sbb
rol
js
ds
sub
adcb
sub
add
dec
cs
movsl
imul
adc
jns
out
pop
mov
jae
inc
and
mov
daa
test
mov
in
jno
jp
inc
out
mov
mov
push
leave
ss
dec
push
dec
mov
add
ds
in
push
jb
push
xchg
inc
fimuls
sub
push
add
aam
daa
nop
mov
pop
fiaddl
mov
or
mov
adc
lret
xchg
jge
sbb
push
lds
cmp
out
mov
dec
jae
leave
xchg
data16
adc
ds
cmp
inc
mov
fcmovbe
sub
test
pop
lret
inc
imull
fnstcw
ss
pop
outsl
shll
mov
xor
shlb
sbb
xor
mov
dec
cli
adc
dec
out
js
xchg
shl
pop
rcl
and
sahf
dec
ljmp
sub
repnz
mov
icebp
xor
push
mov
push
mov
pop
repnz
mov
pop
shlb
mov
nop
xor
pop
push
imul
stc
cmpsl
nop
movsb
mov
loopne
clc
inc
inc
adcl
pop
mov
movb
in
cs
cwtl
inc
cmp
shll
lcall
int
das
clc
mov
inc
movsl
test
icebp
mov
push
cmp
test
add
bound
mov
out
add
daa
call
test
sbb
sbb
lods
push
dec
sub
push
adcl
mov
jmp
lds
mov
push
inc
repnz
mov
pushf
cmpsb
jne
lcall
xorl
addr16
push
testl
jge
aaa
movsb
daa
inc
outsl
lds
lock
or
mov
add
lahf
loope
fdiv
xchg
mov
fcoml
aaa
das
pop
mov
cmp
adc
mov
xchg
vmwrite
lret
jge
jae
pusha
sbb
popa
call
mov
call
push
pop
push
cmp
mov
aaa
repz
sub
push
jle
mov
pop
js
inc
js
stos
adc
je
mov
cmp
je
mov
dec
xchg
and
les
into
shrb
push
inc
addl
hlt
mov
xchg
adc
cwtl
xchg
add
inc
sbb
inc
pop
xorl
jge
xchg
xlat
jno
sub
mov
mov
sub
mov
fyl2x
push
popfw
loop
inc
cmp
inc
mov
dec
into
lea
jne
in
jg
sub
push
sub
mov
out
xor
add
cmp
ficoml
xchg
xchg
mov
xor
adc
xchg
mov
jne
adc
dec
or
test
movsl
mov
mov
and
loope
jl
jmp
sub
mov
mov
sub
in
or
hlt
jp
cwtl
add
add
jbe
into
std
push
rorb
je
adc
shrl
adc
xchg
sub
xchg
adc
stos
mov
inc
dec
and
rorb
les
incb
add
test
outsb
jns
add
adc
sbbl
sub
les
jae
jl
iret
jno
cmp
mov
push
mov
scas
mov
jmp
sbb
imul
test
push
popa
aaa
sub
sub
or
cld
adc
mov
das
decb
scas
lahf
mov
pop
mov
leave
sbb
cmp
adcl
and
movsb
inc
hlt
inc
loop
fldt
cmpsl
fs
js
jle
mov
orb
xor
adc
and
jbe
xrelease
sbb
cmpsb
jns
std
mov
int
fsubrl
sarb
loopne
mov
scas
cld
and
jnp
adc
fildll
xchg
lods
xchg
mov
mov
call
testb
stc
mov
dec
adc
pop
popf
divb
rcr
mov
std
xchg
inc
mov
in
lret
sar
scas
inc
or
pop
adc
xor
adc
scas
mov
loop
or
pop
cmp
int3
jnp
shr
add
repnz
sbb
mov
movsb
mov
cmp
mov
jg
sub
dec
subl
shrl
xlat
jae
and
nop
xchg
cmp
jmp
testl
das
jecxz
mov
xor
stos
pop
aam
stos
int
xor
and
lahf
fcoms
fimuls
out
or
xor
xchg
mov
iret
or
hlt
aad
dec
fsub
mov
in
mov
jg
clc
mov
xchg
cltd
call
into
push
enter
mov
lods
dec
ljmp
jmp
enter
push
out
mov
sub
neg
pusha
lcall
shll
fwait
ret
adc
inc
lds
cs
in
in
int3
inc
pop
in
dec
imul
int3
mov
xchg
lret
dec
adc
je
mov
push
xor
inc
daa
ljmp
mov
xor
and
fnstenv
cmpb
out
out
jl
pop
sarb
icebp
inc
cwtl
pop
icebp
mov
jb
ret
cld
push
outsl
add
xchg
pushf
xor
mov
mov
push
sub
mov
mov
loopne
or
insl
sbb
hlt
xchg
mov
fwait
aad
ret
sbb
pop
enter
scas
push
xlat
pop
mov
imul
icebp
dec
mov
or
sub
cmp
out
test
adc
add
jb
push
aad
movd
mov
cld
pop
movsl
lcall
xor
cmp
and
rcrb
xchg
ficompl
shlb
mov
iret
fdivrs
jmp
out
xchg
jl
loop
adc
aas
push
fcomps
adc
push
sub
sbb
popf
adc
stc
out
enter
add
je
pop
mov
ret
xchg
mov
adc
mov
mov
and
add
sbb
pop
pop
xor
adc
cmp
in
call
pop
jae
data16
inc
bound
loop
and
or
in
or
xor
dec
dec
or
fwait
xchg
sbbl
lahf
mov
ret
pop
inc
mov
xchg
enter
xorb
out
dec
outsb
pop
xchg
subb
push
adc
lock
or
cmp
jmp
add
sbb
rorl
repnz
ret
clc
in
or
sbb
mov
jo
mov
sub
sbb
xchg
jl
xchg
lret
pop
mov
gs
and
mov
adc
arpl
lahf
xchg
lock
fidivrl
mov
inc
sahf
cmp
sahf
roll
and
cs
stos
rcrl
push
and
xchg
push
mov
jno
cmp
pop
pusha
gs
daa
and
adc
imul
and
jae
jae
lret
xchg
pop
cmc
inc
pop
push
push
int3
insl
cli
stc
je
sbb
addr16
inc
call
lods
inc
xor
mov
aaa
aam
popa
mov
leave
mov
jge
push
xor
dec
inc
out
adc
inc
out
into
inc
das
lock
inc
fwait
imul
das
adc
add
mov
outsl
or
ret
push
jge
push
adc
setnp
test
aam
imul
or
pop
in
stos
push
xchg
int
insl
mov
ds
pop
test
mov
int
mov
jae
cmp
mov
negb
stos
mov
pop
in
push
and
mov
mov
push
dec
xchg
dec
je
test
enter
or
fildl
push
lcall
inc
mov
js
add
pop
lahf
cmp
out
cld
jmp
idivb
mov
sbbb
add
push
xchg
or
mov
aas
mov
in
push
lret
mov
dec
rorb
je
push
int
push
movsb
mov
mov
sbb
xor
data16
or
add
fldl
jecxz
sbb
shl
jp
leave
mov
in
and
mov
cltd
add
fidivl
in
outsl
pop
clc
jne
adc
push
jle
int3
cmp
aam
sub
rorb
rorl
xchg
lret
and
pop
out
mov
out
xchg
lcall
mov
lods
adc
xchg
jecxz
out
adc
inc
aaa
push
dec
dec
mov
clc
mov
push
mov
int3
shl
mov
cmp
mov
cmp
sbb
into
and
xor
push
aas
push
inc
mov
dec
out
pop
push
movb
inc
cmp
inc
movsl
lret
xor
std
movsl
mov
cwtl
or
in
jle
scas
mov
fimuls
inc
loopne
test
xchg
xor
jecxz
aas
pop
iret
or
outsb
je
loop
pop
addr16
xchg
movsb
test
in
sub
test
mov
adc
outsl
jle
xor
jg
mov
addr16
mov
js
ds
or
mov
call
fsubrs
ljmp
sub
mov
fildll
aam
in
fincstp
leave
dec
lea
dec
out
movsb
add
jmp
shlb
mov
xchg
fidivrl
sbb
fwait
add
imul
inc
ds
push
sub
xchg
test
lret
pop
push
lea
in
and
inc
adc
push
call
xor
rcrl
gs
mov
push
jp
and
mulb
adc
cmp
imul
call
mov
mov
daa
ja
int3
lret
sbb
push
or
insb
xchg
loopne
sub
push
xor
arpl
shll
or
adc
fistpll
jno
inc
jno
pop
sbb
sahf
add
jns
popf
shl
pop
pop
mov
mov
movsb
push
mov
push
insl
mov
add
ret
lock
push
out
test
dec
push
xor
scas
aas
les
ljmp
or
jp
push
xchg
out
xchg
rorb
push
lock
xabort
pop
jno
imul
outsb
jae
sti
or
push
cmp
outsl
cmp
aam
int
jae
xchg
movsl
test
jp
in
cmp
jo
imul
and
inc
add
fbld
int
cld
clc
push
mov
inc
out
insb
sub
fs
cmp
cmpsb
in
or
dec
stos
jns
and
push
cmpl
fscale
js
lea
cmp
jp
add
dec
ds
enter
push
insl
jmp
push
ficoms
lock
arpl
stos
jmp
icebp
push
pop
mov
mov
sub
xchg
mov
jl
test
xchg
adc
ror
pushf
cmpb
dec
aam
rcl
add
cmp
xchg
xchg
mov
push
mov
inc
popa
outsb
psllq
push
mov
fwait
mov
adc
ss
testb
cwtl
mov
movsb
push
enter
lock
sbb
inc
les
movsb
sub
adc
push
push
mov
lods
jo
push
mov
add
xor
cli
aas
out
sub
data16
mov
out
jnp
inc
pusha
or
dec
lret
pusha
bound
inc
shll
jno
imul
lock
push
test
push
xchg
xor
mov
fidivrs
mov
inc
cwtl
fistpl
repnz
stos
dec
clc
pop
lcall
jnp
xor
sub
jle
scas
shll
jle
test
inc
test
pop
outsl
cld
andnps
aam
cmp
daa
sub
clc
into
sahf
es
jg
push
stc
sbb
aaa
in
pop
out
adc
imul
mov
lds
xchg
and
sbb
shrb
loop
or
or
lahf
adc
fsubrl
push
mov
hlt
cld
push
adc
enter
inc
pushl
call
pop
pop
xchg
inc
gs
nop
fcmovnbe
icebp
ret
adc
call
xor
lret
lahf
mov
sub
notl
test
push
fsubrl
pop
xor
push
lods
jp
xchg
mov
sar
notl
int
cltd
cli
sbb
ret
add
out
scas
mov
cmpsl
pop
flds
mov
jecxz
xchg
adc
sti
jl
dec
add
mov
sahf
mov
mov
pop
xor
rolb
cwtl
mov
dec
dec
inc
pop
pop
fnstenv
adc
icebp
pop
cli
sub
pop
vandnps
pop
inc
sbb
mov
inc
inc
cmp
mov
cwtl
adc
cmp
xor
fwait
test
loopne
mov
pop
stos
or
add
shl
inc
jge
insl
push
adc
sbb
inc
hlt
fdivr
loopne
sub
push
pop
pop
jp
jmp
mov
mov
push
cli
pop
insl
shll
xchg
mov
stos
ror
popl
cmpsl
pop
add
aaa
arpl
fwait
cmpsb
or
and
sub
mov
adcl
mov
xchg
stos
shlb
jb
outsb
rorb
loop
push
xor
sbb
cltd
add
cld
test
repnz
xchg
push
test
add
push
sbb
dec
xor
pop
mov
jae
dec
cli
call
leave
dec
mov
cmp
sbb
and
adc
movzwl
cmc
inc
mov
sub
stc
stc
push
scas
lods
or
pop
pop
insl
stos
and
push
jns
mov
jo
xor
cmp
or
mov
or
mov
sub
mov
or
xchg
cs
aad
sub
jg
aaa
sbb
scas
addl
nop
inc
ljmp
pop
popf
leave
or
mov
pushf
pop
addr16
xor
xchg
insb
addr16
cmp
movsb
or
test
in
icebp
jbe
push
add
dec
lret
mov
pushf
jbe
mov
lcall
lods
sub
push
sub
inc
inc
jp
push
dec
leave
test
iret
mov
cmp
xor
xor
dec
mov
cmp
fldenv
jp
leave
mov
rorb
inc
es
dec
cmp
mov
das
icebp
out
fcmovu
cmpsl
fisttps
dec
mov
icebp
mov
jl
mov
sbb
push
pop
movb
xor
jg
rorl
shl
ss
sbb
mov
loope
scas
xchg
adc
ljmp
jp
dec
and
pop
rcrl
xchg
pop
and
inc
test
or
or
popf
inc
push
pop
je
jge
pop
jae
int3
or
mov
ss
add
lahf
mov
dec
rorl
dec
add
cmp
lods
add
jl
jecxz
pop
sub
lret
inc
xor
push
fisttpll
cmp
or
mov
cltd
test
lock
ficompl
outsb
push
dec
dec
popf
mov
sbb
ficomps
push
xor
pop
stos
stc
adc
movsb
adc
movsl
mov
test
pop
shrl
add
aaa
arpl
mov
in
xor
xchg
test
aam
shlb
lcall
push
lds
mov
int3
cli
pop
fsts
mov
sti
mov
insl
out
adc
sub
jnp
adc
dec
push
lret
inc
pop
aaa
orl
pop
sub
xor
sbb
cld
jo
jnp
push
repnz
cwtl
stos
push
fdivr
out
mov
rorl
and
bound
push
call
cmp
loope
cs
lea
push
insb
sbb
neg
ljmp
mov
popa
mov
xchg
mov
scas
mov
test
hlt
add
push
insl
cmpsl
js
push
lcall
test
mov
leave
push
jmp
outsb
stc
loope
xor
js
in
sahf
lds
xor
popf
lock
fmull
aam
xor
xchg
jne
xor
pop
pop
inc
xor
mov
push
mov
outsb
sub
in
aaa
sbb
jle
pop
sbb
ret
js
gs
loopne
mov
mov
mov
imul
test
adc
cmp
rol
cmp
cli
ficoms
das
andb
mov
mov
sub
adc
or
add
sahf
mov
xlat
movsb
leave
xor
outsb
xchg
or
jp
lret
ret
loop
mov
mov
cs
lret
xchg
sbb
cltd
dec
pop
ret
scas
cld
pop
int3
mov
cld
movsb
sbb
mov
mov
ffreep
out
sbb
inc
push
in
shrb
mov
rcr
cwtl
mov
stc
mov
aad
mov
sub
divl
sbb
test
xor
daa
xchg
arpl
aaa
mov
push
jae
xor
mov
int
sbb
fwait
xchg
add
xchg
dec
dec
addr16
sub
sub
push
leave
xor
cmp
jnp
jle
mov
or
push
mov
fsubr
xchg
je
inc
xor
pop
outsl
ja
jns
je
and
adc
lahf
add
loop
scas
ja
cmp
insl
inc
jl
addb
sbb
push
repnz
and
push
dec
add
inc
cmp
cmc
adc
pop
jg
mov
xchg
cmp
push
mov
shlb
cmpsl
scas
and
inc
and
cs
lahf
gs
lock
adc
cmp
xor
lock
push
cmp
pushf
insb
push
test
xchg
mov
pusha
lret
sbb
xchg
jnp
lock
sub
repnz
cs
jge
stos
test
shll
in
hlt
nop
or
stos
mov
xchg
xchg
cmpsb
jecxz
adc
out
sarl
outsb
lret
jecxz
mov
aaa
xor
dec
ja
call
dec
pop
arpl
inc
jae
adc
push
loopne
dec
cmp
ret
or
sti
test
je
xchg
jg
and
adc
bound
lods
outsl
test
insb
les
sub
dec
aam
add
cmpsl
inc
insl
pop
jns
sarl
mov
xchg
mul
stc
subb
jns
mov
movsl
mov
outsl
jb
xor
add
mov
cmc
decl
loop
mov
xor
xor
xchg
or
push
jnp
fsubrs
call
pop
sbb
mov
faddl
xchg
push
dec
testb
jo
call
add
dec
test
je
fwait
stos
dec
add
inc
sub
or
sbb
cmp
pop
cld
push
mov
mov
fcom
lcall
mov
hlt
push
repnz
dec
sbb
jg
push
pop
scas
test
aad
fsubp
mov
scas
adc
sub
test
pop
push
lret
xchg
push
aam
fsubrl
pop
ss
les
fnsave
test
cltd
je
dec
jno
jb
ss
fnstcw
jnp
call
xor
rolb
jnp
xchg
xchg
sub
and
mov
aam
mov
cs
pop
subb
inc
jae
jbe
or
jo
mov
test
and
cmc
sub
nop
out
in
xchg
adc
mov
adc
icebp
sbb
pop
inc
outsl
fiaddl
pop
sub
inc
push
or
mov
jmp
mov
adcb
push
sub
lock
inc
jmp
cmp
sub
push
adc
xchg
loope
call
mov
dec
push
cli
scas
xor
mov
adc
xor
pop
xorb
into
inc
adc
xchg
mov
int3
mov
xchg
cld
pushf
pop
add
push
sti
dec
mov
cmp
rcrl
lea
cli
cli
test
int3
add
in
out
push
test
add
dec
cmp
lea
arpl
jl
insl
jg
dec
pop
lea
sarl
sub
sbb
xor
xor
lock
ret
fwait
out
mov
lahf
cmp
cmc
int
push
adc
scas
mov
je
sub
aas
lret
lock
sub
sub
int
xor
repz
cmp
repnz
loop
adc
stc
dec
scas
cli
pop
cmp
sbb
mov
lahf
lcall
jae
push
jbe
cli
xlat
popa
pop
lods
push
outsl
aaa
mov
cltd
push
mov
leave
push
jb
outsl
sub
mov
call
std
mov
in
dec
testb
shl
xchg
or
push
fimull
jge
or
clc
xchg
add
mov
push
mov
in
aam
push
pop
out
mov
mov
shl
notb
in
popf
or
test
fimuls
jb
adc
adc
xchg
pop
or
cli
imulb
outsb
int
loopne
mov
je
push
xor
stos
push
in
movsl
push
adc
jno
ljmp
int
adc
cmpsl
orl
adc
lcall
mov
daa
jmp
add
imul
icebp
or
les
push
ja
jg
add
pop
out
hlt
xchg
inc
fbstp
das
out
test
sbb
mov
into
cmp
inc
rcrl
add
dec
jbe
sbb
addr16
stos
xchg
negl
icebp
jns
cmc
cli
fbstp
hlt
insl
repnz
fnsave
sahf
lea
xor
lret
repz
adc
add
xlat
sub
fcoms
jbe
out
fwait
ds
or
dec
mov
mov
ja
xchg
jecxz
dec
dec
mov
adc
stos
push
jae
add
mov
dec
test
cmp
mov
aad
push
ljmp
mov
sbb
xor
cmc
sbb
push
adc
out
xchg
lods
or
orb
mov
mov
mov
xor
mov
loopne
and
dec
insb
add
xchg
pop
pop
sbb
adc
push
or
sahf
out
out
lea
popa
xchg
inc
cmp
je
push
test
in
rolb
and
pop
dec
dec
mov
mulb
sbb
scas
mov
inc
int3
adc
lea
jmp
aam
dec
mov
mov
inc
aas
xchg
xor
inc
cmp
pop
add
cmp
push
les
test
cli
dec
into
lock
in
push
addr16
mov
ja
negb
cli
inc
ficoms
jmp
lods
inc
mov
mov
mov
jbe
pop
lret
jbe
aad
inc
mov
lods
into
xchg
dec
lods
jge
sbb
jbe
add
gs
inc
jne
mov
and
mov
jl
and
push
lret
cmpsl
or
and
mov
add
lock
or
dec
adc
push
mov
pop
mov
ror
xchg
insl
je
call
rolb
out
jecxz
and
dec
int3
ret
hlt
je
mov
xor
lcall
into
fisubrs
ljmp
add
lret
ret
ja
jl
push
lock
inc
adcl
add
inc
jmp
mov
std
jmp
jecxz
jecxz
sbb
fcomi
clc
dec
lea
mov
scas
adcl
and
nop
jmp
daa
mov
lods
cltd
adc
dec
fwait
jns,pt
lock
add
out
and
mov
test
imul
popa
loopne
mov
cli
xor
jbe
add
mov
lods
fisttps
cmp
pop
push
in
sub
cmp
movsb
aad
popf
and
mov
addr16
pop
sub
ljmp
push
test
aam
jp
jp
hlt
in
add
dec
jge
test
pop
sbb
sub
jg,pn
test
iret
mov
popf
mov
mov
cmpsb
data16
cmpsl
sub
mov
cmp
fists
xchg
push
push
mov
shll
fneni(8087
xor
add
dec
jp
ret
pop
stos
adc
mov
xor
test
xor
xor
xchg
pop
lds
mov
sub
adcl
cmp
or
call
aad
sub
int
aad
repnz
mov
and
cltd
jnp
pop
mov
sbb
fbld
sub
out
outsl
cmp
fsubl
xor
movd
dec
xor
jo
xchg
push
dec
jae
nop
push
movsl
inc
sbb
cmp
adc
jle
daa
or
inc
sub
mov
loopne
ret
sub
jg
pop
xor
pop
test
xor
push
hlt
rclb
stos
stc
pop
sbb
adc
movsb
inc
pop
es
cli
add
test
jle
bnd
bnd
push
pop
inc
sbb
popa
xor
loop
lcall
jo
aam
or
adc
inc
sarl
or
add
sbb
arpl
cmp
lcall
sub
pushf
imul
orb
adc
add
ja
push
mov
push
adc
lcall
mov
into
sti
inc
out
cmp
sub
cmpsl
imul
fistl
call
inc
cmpsl
pop
std
arpl
and
lods
mov
and
test
in
mov
push
mov
iret
stc
decb
adc
pusha
movaps
lock
xchg
enter
adc
test
outsb
aaa
shrb
sub
into
pop
ds
sbb
sar
scas
sub
mov
cmp
add
ret
jp
add
imul
add
push
les
insl
in
jp
testb
dec
push
cltd
imul
or
mov
jp
jno
add
sbb
mov
sti
jge
dec
cwtl
inc
test
inc
inc
das
sbb
hlt
or
fidivrl
lret
scas
lods
or
aam
sti
imul
mov
sbb
mov
dec
dec
inc
xor
push
xor
mov
mov
xchg
dec
xchg
stc
jbe
enter
xchg
sbb
cmp
mov
push
jle
arpl
mov
sbb
call
inc
pop
arpl
mov
inc
pop
fistpl
lock
test
sarb
lods
xchg
mov
mov
aad
xchg
das
add
push
add
sbb
int
xchg
sbb
rcrb
add
pop
mov
lock
mov
in
xchg
pusha
mov
xchg
inc
out
cmp
rorl
stos
inc
and
fs
lret
cmp
mov
ja
ljmp
dec
aad
mov
aaa
and
das
sub
mov
jo
cmp
adc
imul
mov
repnz
lods
fwait
cmp
gs
psubw
cld
lss
mov
push
push
nop
imul
pop
adc
push
dec
mov
and
fbstp
mov
and
or
outsb
lcall
gs
int
sub
xchg
xchg
mov
sarl
stc
adc
dec
adc
xchg
stos
stos
mov
pop
movsl
and
out
xor
iret
cmc
lret
insb
sub
ret
jg,pn
imul
lret
sahf
mov
fldl
lret
xchg
hlt
jno
movb
in
stos
or
pop
dec
aad
inc
fldcw
stos
repz
out
push
dec
push
repz
sub
imul
push
dec
mov
xor
and
fsubs
add
inc
inc
xorl
push
fidivl
jnp
insb
mov
cmp
stc
pop
sti
cmp
cmp
and
aas
inc
add
insl
or
sub
fstp
sub
scas
leave
pusha
pop
sti
mov
mov
repz
pop
shrb
cld
lea
xchg
xchg
int
in
int3
and
fcom
cwtl
push
push
xchg
cmp
add
call
cmp
adc
sbb
mov
int3
gs
jp
jmp
dec
out
stos
xchg
jmp
popf
mov
insb
xor
jmp
clc
es
mov
ja
pop
adc
fcmovb
aam
testb
sbb
pop
xchg
imul
cmp
dec
xor
sub
adc
rorl
adc
aaa
ds
mov
rcll
xor
mov
int
cli
aas
aad
jl
mov
cmc
or
mov
sub
or
dec
jge
pop
pop
push
mov
std
xchg
mov
or
mov
jge
sbb
or
outsb
inc
test
sahf
and
adc
cmpsl
dec
push
ret
xlat
call
shll
je
sahf
lret
sbb
mov
mov
in
and
ljmp
push
inc
lret
lock
cmpsb
scas
inc
inc
stos
cli
adc
adc
dec
cmp
and
inc
call
mov
aam
dec
and
mov
jmp
mov
adc
addl
xchg
lock
mov
mov
cli
out
adc
xchg
aad
pop
out
movsl
lods
idiv
imul
push
xchg
push
cmp
pop
add
inc
outsb
xchg
cs
adc
wrmsr
popf
adc
outsb
xor
or
les
nop
jns
ljmp
sub
sub
pop
push
addr16
ss
sahf
arpl
ljmp
in
inc
js
popf
inc
scas
inc
xor
mov
cmpb
xor
mov
jp
xor
jae
jmp
pop
aad
lret
scas
mov
lret
daa
daa
mov
xor
push
loope
add
aad
shlb
push
push
mov
fmull
cmp
ret
nop
dec
sub
out
ret
call
dec
cs
int3
les
pop
add
and
repnz
aaa
push
adc
rcrl
push
incl
jno
ret
faddl
adc
lcall
movsl
mov
shll
cmp
cld
adc
negb
and
insb
push
aas
jns
arpl
or
jb
pop
stc
mov
enter
jns
push
or
mov
loope
sarl
ja
imul
into
xchg
out
daa
sub
shll
stc
insb
in
or
push
lods
xchg
fcomp
cmc
inc
lods
or
xchg
cmpsl
ja
rcr
sbb
sub
mov
mov
fidivrs
jmp
test
vmread
push
push
ret
sub
inc
inc
push
out
mov
add
dec
mov
or
adc
jne
mov
push
orl
mov
out
and
movsb
jge
sbb
dec
popa
lds
xchg
mov
push
jns
push
sub
sbb
test
push
ljmp
fidivrs
in
mov
sub
xchg
adc
js
mov
adc
jecxz
sub
aaa
and
and
push
or
test
flds
xor
adc
push
aam
nop
call
inc
add
xchg
push
leave
ret
or
negb
mov
jecxz
rclb
push
and
clc
xchg
or
ret
fiadds
aaa
and
pop
aas
pop
pop
pop
inc
out
cmpsb
les
cmp
imul
mov
and
les
in
mov
in
ret
jl
cmp
ret
fs
add
pushf
cmp
jg
cli
enter
dec
pop
xor
dec
cs
in
mov
enter
mov
imul
pop
out
push
into
cmp
inc
cld
xor
mov
sti
rol
ret
ss
jns
int
cmp
arpl
rolb
imul
add
jp
sbb
test
mov
and
or
int3
imul
dec
mov
add
fwait
pop
mov
pop
pop
cli
mov
mov
nop
jp
push
ljmp
jb
jae
out
push
or
fiaddl
insb
lahf
push
fcomip
inc
mov
aam
filds
test
sbb
cmp
xchg
inc
push
lods
sbb
jae
push
xchg
push
jae
adc
xor
es
lock
and
cmp
fcompl
in
xchg
int
and
icebp
and
cwtl
cmc
stos
xor
insb
mov
cmpb
repnz
xor
dec
rcrl
mov
push
and
cs
jb
wrmsr
pushf
pop
mov
sub
jp
jmp
mov
sarl
fs
shll
insb
push
xor
outsl
and
xchg
cmpsb
mov
rcr
jae
mov
dec
cs
push
push
inc
pusha
neg
adc
sbb
sbb
adc
xchg
ja
clc
ljmp
or
xor
ror
in
fbstp
loopne
dec
bound
push
jne
xor
pop
and
cmp
outsb
sarb
fidivl
mov
mov
push
into
aaa
fmul
movl
jmp
hlt
inc
or
push
sbb
in
sbb
adc
xchg
imul
std
fcoms
pop
outsl
and
inc
push
push
iret
sub
mov
mov
pop
stc
or
cmp
add
mov
mov
xchg
in
ds
xchg
mov
shll
pop
pop
shr
jl
mov
out
jbe
cld
jg
cmp
imul
sbb
idivb
nop
ja
xor
cltd
leave
xor
idivl
add
lods
out
or
sbb
inc
ljmp
cmc
sub
daa
and
push
and
ljmp
jne
mov
cld
cmc
dec
xor
mov
roll
insl
js
push
xor
or
cmp
mov
and
adc
sbb
daa
rorb
mov
jae
mov
jb
icebp
inc
ljmp
ss
mov
fwait
xchg
push
xchg
fsubp
or
sbbl
daa
addr16
and
cmpsb
data16
adc
dec
lret
fidivl
cmp
push
or
or
pop
cli
std
sbb
enter
mov
or
mov
sbb
pop
jb
imul
push
push
add
mov
pusha
pushf
or
adc
push
dec
add
xchg
repnz
dec
jb
dec
and
aaa
imul
lods
jno
fxtract
jg
push
adc
add
lds
test
gs
movb
and
shll
lahf
xlat
or
cmp
mov
mov
mov
mov
mov
jbe
movd
xchg
or
popf
jno
mov
jmp
push
clc
fdivl
in
dec
adc
inc
jae
pop
testl
lods
repnz
cmpsl
dec
push
cmp
aad
add
in
lret
mov
adc
push
in
cmp
push
bound
sub
je
ds
mov
xor
or
data16
push
das
cs
in
pop
mov
sbb
push
push
int
push
inc
rol
mov
dec
xchg
fnsave
cmp
adc
xchg
mov
mov
adc
or
cmp
imul
arpl
cmc
call
ret
mov
sub
std
fcomps
sahf
jmp
gs
mov
sub
xchg
insl
js
cmp
test
daa
stos
subl
aas
mov
sbb
xchg
fldenv
lods
adc
mov
inc
adc
mov
aas
out
sbb
clc
push
nop
xchg
cltd
xor
pop
enter
cmp
out
test
je
add
push
imul
jmp
imul
push
mov
imul
inc
mov
inc
cmc
in
dec
jmp
mov
ja
push
int3
bound
and
insl
stos
jbe
shrl
mov
in
sub
sub
test
adc
xor
add
push
lcall
mov
nop
dec
cli
inc
adc
fildll
std
outsl
pusha
sub
in
jle
rorb
dec
sahf
dec
insb
cld
sub
push
or
movsb
mov
fimull
pop
out
fwait
ljmp
pop
add
aad
outsb
jae
dec
and
adcl
jnp
scas
sahf
push
test
mov
xor
xor
nop
xchg
pop
fsubl
test
or
add
mov
jle
lods
and
mul
outsl
paddsw
xlat
pop
rol
pushf
jb
sbb
enter
pop
ljmp
jl
sub
xchg
pop
aaa
in
in
jnp
mov
mov
cwtl
shrl
sub
adc
xchg
mov
lcall
sti
divb
add
into
ljmp
shrl
out
mov
adc
sbb
out
sub
xor
outsb
cmp
enter
movsb
sbb
subl
sahf
pop
fdivrl
cld
ss
jecxz
dec
inc
or
push
adc
adc
sti
sbb
mov
and
or
shll
and
cld
xchg
pop
pop
daa
sarl
sbb
arpl
lahf
icebp
inc
enter
stos
mov
xor
cwtl
inc
out
lahf
inc
mov
inc
test
dec
mov
jae
jle
cmp
imul
rcrl
adc
movsb
jmp
jae
or
mov
fwait
mov
add
in
hlt
or
mov
sub
jp
mov
jle
mov
sub
mov
add
xchg
lret
jge
imul
mov
cmp
mov
popf
pop
vxorps
dec
insb
aas
loopne
dec
repz
sbb
xor
notb
jl
sahf
mov
leave
mov
sub
inc
push
lock
enter
test
mov
decl
sbb
push
addl
fsubrp
std
pop
sub
push
xor
or
sbb
outsl
push
pop
in
out
xor
sbb
adc
outsb
jno
push
out
xchg
push
mov
stc
mov
mov
mov
cmpsb
rcrb
inc
cmpsb
aad
mov
out
jmp
das
mov
and
pusha
data16
or
inc
inc
int3
push
in
mov
lcall
cmpsb
push
rol
pop
outsl
nop
jge
mov
imul
in
fstl
inc
aaa
sub
inc
add
or
or
int
sbb
push
inc
fldcw
enter
sub
aam
and
xor
sub
loopne
push
scas
mov
mul
in
rolb
rolb
mov
dec
fstpt
pop
cmp
stc
decl
or
xchg
mov
cs
jp
sub
in
or
cmp
pop
cld
outsl
xchg
mov
ds
fst
mov
pop
rcll
cwtl
adc
nop
cli
cmp
fwait
in
push
stc
inc
mov
ljmp
push
movsb
pop
ljmp
jbe
xlat
cmc
cltd
jmp
xchg
cmp
pop
int
lods
les
shll
sbb
das
add
nop
xor
mov
xchg
pop
sbb
fcom
cltd
mov
adc
and
xor
cwtl
test
popa
and
push
xor
cmpsl
adc
leave
and
jge
shrb
std
cmp
lret
mov
es
sar
dec
lds
or
jns
je
sub
fstpl
and
lcall
ret
inc
aas
imul
lahf
ret
xchg
loop
xor
test
rcrl
mov
lds
jmp
push
mov
insl
and
and
mov
pop
decl
cmp
inc
pop
dec
scas
rcrl
pop
mov
push
bound
lretw
je
pop
pusha
fs
mov
jo
jne
ljmp
fcoml
jnp
mov
popf
push
iret
xlat
call
inc
frstor
jp
sub
ret
inc
or
xchg
inc
xor
enter
ret
xor
xchg
cs
pushl
dec
stc
cli
scas
or
pop
loope
or
daa
xchg
aam
lahf
addr16
fwait
xchg
shll
pusha
divl
js
inc
xchg
aam
or
jo
pop
push
jno
push
adc
cmpsl
inc
and
movsb
xchg
dec
aaa
lret
fs
arpl
xchg
push
notb
stos
sub
stos
sbb
dec
xor
mov
mov
repz
jge
in
push
mov
lods
fldcw
out
jp
jp
xchg
movsl
xchg
dec
test
jo
xor
inc
mov
rcl
rcr
adc
ret
push
movsb
push
rcrl
and
fdivrs
test
call
out
pop
cmp
sub
and
into
sub
xchg
cmp
push
bound
xchg
icebp
mov
lods
loop
test
bound
push
pop
or
shlb
mov
and
add
loope
js
out
test
mov
into
add
sti
sbb
andb
jbe
dec
aad
pop
leave
pop
hlt
rcrl
push
shr
mov
cmp
sub
les
loop
dec
in
stos
sub
out
mov
jmp
pop
insb
adc
mov
call
shrb
dec
push
add
adc
in
out
ss
repnz
aas
fsub
int3
out
inc
sub
gs
hlt
mov
aaa
pop
mov
scas
jns
xor
sbb
lret
ljmp
adc
in
mov
xor
mov
pop
mov
pop
jp
or
nop
add
cmp
es
daa
repnz
mov
fimull
shll
fldcw
mov
mov
outsb
push
mov
jb
pop
xor
push
lods
add
cld
mov
push
shl
pop
icebp
fildl
pop
fs
dec
cltd
fistl
fucom
sbb
and
aam
mov
iret
mov
stos
lea
sub
push
pop
dec
mov
cmpsb
sbb
test
jne
mov
jl
aad
jbe
and
inc
pop
xchg
lahf
inc
push
out
and
dec
iret
cmc
push
out
mov
imul
notl
dec
pop
xchg
dec
pop
jnp
inc
aas
mov
jg
xor
aad
insl
mov
stos
push
icebp
repnz
cmp
jg
lods
scas
out
into
repz
jo
jbe
dec
in
rcrb
sub
mov
add
sub
mov
into
shl
daa
jle
jnp
cmpsb
aas
xor
jbe
sub
cmp
stos
and
fdiv
stc
sbb
fdivs
adc
iret
mov
fcmovnu
sahf
add
mov
cmp
sub
pop
imul
add
jge
lods
fimuls
sub
fmul
mov
out
jg
push
clc
call
xor
push
out
mov
or
sahf
mov
lret
pop
mov
jbe
and
add
rcrb
pop
dec
xchg
push
scas
in
call
xchg
mov
adc
in
hlt
or
movsl
dec
mov
fstl
fdivs
cli
call
inc
lock
adc
cmp
cmp
in
sbb
fcoml
shr
or
push
movsl
and
or
loope
bound
loope
test
jo
popa
mov
mov
jb
pop
ss
adc
not
xor
test
lahf
repz
cli
movsl
cmpsl
insl
inc
sahf
xchg
jmp
stos
outsb
sub
inc
push
icebp
cmp
fcmovnbe
push
xchg
gs
pusha
jl
ret
cs
in
fdivrl
sub
mov
call
sbb
popf
push
fisubrs
fisttpl
test
adc
xchg
push
dec
es
dec
and
inc
lods
xchg
pop
pop
aas
cmp
mov
cmpl
shl
mov
cmpl
adcl
test
and
add
or
lret
pusha
dec
mov
inc
pop
sbb
adc
cmpsl
repz
js
testl
or
repnz
leave
iret
adc
cmp
mov
mov
xchg
lock
mov
data16
or
faddl
xor
sub
ds
jp
sbb
adc
mov
test
mov
xchg
xchg
testl
sub
add
insl
sub
stc
fmuls
jnp
andl
dec
jmp
popf
in
cld
jg
mov
mov
sbbl
jb
xor
cwtl
addr16
bound
mov
jle
adc
lock
out
leave
adc
push
adc
fisttpl
dec
push
scas
xchg
push
fdivp
aad
aam
fildll
pop
cmp
push
addr16
mov
mov
jb
loop
xor
aad
lock
mov
ja
sarl
jns
ret
out
movsl
movd
jo
and
fnstenv
add
or
dec
add
cmp
gs
test
adc
js
sbb
cmpsb
sub
in
xchg
mov
push
addr16
out
mov
sbb
notl
cltd
jecxz
jb
mov
ds
ja
scas
sub
sbb
mov
addr16
stos
mov
scas
call
inc
enter
mulb
or
mov
pop
xchg
sbb
ja
push
xchg
call
dec
hlt
stos
mov
jo
adc
jae
rep
dec
dec
cmp
or
sub
aas
lods
add
or
xchg
sub
mov
inc
sbb
mov
dec
in
adc
xchg
mov
push
call
shlb
lret
idiv
and
testl
mov
mov
push
mov
mov
xchg
push
dec
std
inc
shll
bound
push
adc
in
faddl
and
mov
jne
inc
cmp
pop
mov
dec
jb
out
fistpll
jno
pop
or
out
es
add
or
cmc
xchg
insl
xchg
mov
jge
mov
jae
xor
xlat
loop
test
sub
mov
pop
push
test
repnz
push
mov
pop
inc
mov
pop
rol
xor
stc
std
xor
mov
xchg
and
sbb
sub
lea
jecxz
inc
lea
cwtl
sbb
inc
cmp
jb
scas
pushl
push
popa
enter
fidivl
push
daa
pause
mov
jp
dec
xlat
jg
mov
dec
fwait
mov
fcomps
in
or
mov
gs
loopne
aad
sub
out
push
sbb
fs
push
imul
insl
push
ss
fs
xchg
cmp
mov
loopne
push
mov
in
jge
fsubrs
adc
out
cmp
ret
adc
shrb
dec
addr16
sbb
shr
push
dec
int
pop
mov
inc
push
mov
mov
lahf
xchg
ret
popa
mov
cmc
xchg
cli
mov
fcomps
loop
ret
out
cmp
and
inc
inc
mull
add
xor
dec
ret
and
jo
add
dec
es
repz
cmc
mov
mov
shrb
int
imul
xchg
and
dec
sub
lret
fisubrs
pop
in
in
icebp
push
les
push
cmc
inc
cmp
xchg
int
gs
leave
aas
pushf
in
lret
add
xchg
push
movsl
test
shl
data16
test
out
push
in
add
jl
arpl
lahf
lahf
hlt
pop
jmp
inc
lds
rcl
out
sub
mov
in
addr16
rcll
movsb
jae
jb
push
mov
sti
jnp
adc
mov
inc
dec
inc
jbe
sbb
cld
out
dec
inc
test
and
sbb
mov
dec
popf
push
bound
jbe
mov
cmc
add
cs
push
and
sub
mov
add
xchg
fiaddl
test
fidivrl
test
sbb
jno
mov
sti
std
aam
xor
mov
jmp
xchg
mov
jge
enter
push
and
jno
in
out
xor
aad
sub
mov
sbb
fcoml
in
rorb
and
dec
or
jp
pop
push
and
ljmp
mov
add
pop
xchg
test
stc
dec
fisttpll
std
pop
inc
adc
push
out
cmp
aaa
sbb
sbb
test
pop
sbb
lea
ror
or
adcb
mov
xor
sarb
stos
divl
pop
add
mov
cmp
std
iret
xor
sub
cltd
fisubrl
shlb
adcl
les
xchg
push
push
aam
jge
pushf
jno
or
mov
rclb
sbb
aad
sarb
xchg
jl
je
push
jp
arpl
lock
in
add
mov
mov
adc
mov
xchg
mov
in
adc
push
out
in
pop
cmp
dec
fcmovnbe
xor
xlat
inc
popf
mov
imul
imul
or
xchg
ret
mov
mov
scas
stos
out
inc
dec
cmpl
scas
subb
xchg
int3
stc
filds
dec
fwait
mov
add
dec
mul
test
fldcw
mov
test
push
loope
sbb
inc
push
add
xor
cmpsl
fiadds
enter
sbb
shll
pop
pop
and
imulb
pop
in
les
sub
mov
pushl
push
jle
jns
stc
lods
es
or
dec
add
push
scas
push
cmp
push
adc
add
aam
xchg
and
pop
push
pop
push
push
movsl
stos
jbe
sbb
pop
xor
or
aad
out
xor
mov
xor
out
push
xlat
fs
and
xlat
xlat
xchg
hlt
xor
int
sbb
out
arpl
fisubs
xchg
inc
test
bnd
int
fisubl
mov
mov
ret
cmp
popa
or
pop
jnp
and
movsl
inc
jne
lods
xchg
mov
inc
call
adc
lahf
sbb
pop
xchg
push
mov
jo
sahf
addr16
xchg
leave
jle
mov
shll
xor
test
cmpsb
jecxz
andl
dec
out
mov
sbb
clc
fwait
adcl
movsb
ss
mov
cmp
inc
fidivs
mov
iret
xchg
mov
outsl
insl
imul
cmp
pop
xorb
add
loop
push
or
xor
lahf
ret
sub
pop
sbb
xor
push
and
jmp
sub
int
je
in
fwait
call
and
adc
dec
ja
jbe
arpl
fstpl
fidivl
jb
mov
clc
insb
roll
scas
and
lcall
mov
mov
les
inc
mov
cmpsb
ds
divb
test
das
jno
ss
xor
repz
fsubrs
mov
push
notl
push
mov
sbb
daa
cmp
mov
enter
jle
inc
fistpl
sbb
pop
mov
jg
fwait
push
or
fwait
jmp
mov
fbstp
lret
call
es
sbb
out
pop
dec
out
jne
dec
dec
mov
mov
adc
add
popf
fiadds
daa
adc
cwtl
loope
sub
jmp
cmpsl
mov
or
sbb
mov
sbb
imul
jmp
mov
pop
shlb
out
jo
cmp
jns
cmc
arpl
xorb
dec
or
cld
roll
cltd
xchg
cmp
sub
insl
push
sbb
iret
roll
mov
hlt
cmp
aad
push
xchg
iret
dec
xchg
adc
punpckhwd
je
movsl
popa
mov
adc
adc
gs
mov
and
inc
aaa
push
sbb
and
cmp
lret
aam
jb
mov
cmp
or
inc
pop
les
out
gs
fcoms
std
iret
adc
xchg
cmp
xchg
add
stos
pop
clc
repz
popl
pushf
andnps
cmc
push
push
and
aaa
js
lahf
adc
push
testb
lahf
lret
jo
mov
movsb
fnstenv
and
and
add
adc
ja
mov
mov
lret
push
pusha
testl
and
repz
push
lds
int3
in
je
in
sbb
dec
push
in
sahf
pop
add
jbe
mov
sarb
xchg
xor
dec
arpl
mov
lds
rcll
mov
cmp
pop
shrb
dec
cs
push
inc
iret
mov
aad
cmpsl
stos
ret
sbb
mov
mov
movsb
add
add
or
dec
and
pop
cmp
jno
jnp
mov
push
aas
in
rorl
in
sbb
call
cmpsb
retw
fs
cmpsl
shrl
sub
jb
popf
lret
sbb
out
xchg
push
gs
je
push
cltd
lods
les
lods
mov
push
cltd
sub
cmp
add
add
lea
add
jmp
outsl
sub
push
or
scas
icebp
mov
cli
das
sbb
rcr
bswap
iret
in
sub
or
jmp
test
inc
xor
jns
cmpsb
pusha
adc
or
cmpsl
fdivr
sbb
mov
xchg
ljmp
fisubrl
pop
notb
push
push
or
adc
jecxz
lock
out
pop
shlb
dec
fmull
insb
lds
push
loop
xchg
pop
push
mov
lock
leave
sbb
cmc
pop
shrl
testb
rolb
adc
inc
jg
aaa
js
aad
int3
mov
xor
shlb
xor
push
jmp
xlat
mov
mov
push
mov
rcll
sbb
rolb
xchg
roll
data16
stc
sahf
and
adc
jae
popl
jl
cmp
jmp
cmpb
mov
cmp
inc
sbb
test
pop
gs
test
jmp
sti
cmp
sbb
dec
addr16
pusha
dec
jle
adc
push
adc
scas
stos
in
pop
adc
addb
nop
xchg
inc
mov
or
rclb
das
adc
cmpsb
jns
out
xchg
fwait
push
jmp
push
loopne
insb
jb
adc
sub
pop
cwtl
or
js
roll
std
xor
sub
and
mov
fwait
sar
push
push
out
dec
fs
lea
add
add
cmp
inc
xchg
lahf
push
add
orl
push
mov
or
aaa
or
push
sar
add
dec
out
cmp
or
scas
jno
xchg
int
fidivrl
movsb
mov
sub
cmp
nop
arpl
add
push
cmp
test
sbb
mov
xchg
inc
and
gs
jo
pop
or
mov
xor
jmp
negl
ja
sahf
pushf
lods
clc
dec
loopne
js
push
push
imul
dec
aad
jle
push
call
xor
cs
mov
aad
mov
fdivrp
xor
mov
roll
sahf
pop
jecxz
dec
xchg
dec
scas
out
lods
in
fwait
decl
in
pop
cmp
sbb
pop
cli
fdivrl
pop
xlat
dec
mov
xchg
sahf
mov
mov
push
test
and
adc
repz
mov
push
ror
jge
ljmp
shl
mov
dec
add
es
xchg
xor
mov
outsb
js
andl
imul
or
insb
pusha
lret
insl
add
roll
jne
enter
cmp
mov
push
mov
mov
lea
push
adc
pushf
sbb
call
mov
pop
out
loope
ja
push
sub
inc
out
sbb
dec
iret
fldcw
mov
jae
mov
push
mov
inc
inc
add
dec
adc
sub
xchg
dec
in
and
jp
sub
int
lock
leave
inc
xchg
push
push
stc
inc
xchg
dec
aas
lret
inc
xor
fists
xor
fwait
mov
gs
cmpsl
pop
mov
mov
clc
pop
jmp
push
cltd
xor
cmp
and
push
sbb
das
sub
and
mov
add
fdivl
scas
push
stos
enter
push
jle
sub
cld
int3
sbb
cmp
loopne
pop
addps
rorl
jmp
data16
sbb
push
fisttpll
jbe
movsb
fdivrl
jmp
and
push
mov
test
out
dec
loope
or
aam
call
jle
dec
pop
xor
arpl
push
xchg
icebp
or
and
in
in
add
in
ret
mov
daa
push
mov
pop
insl
in
mov
inc
add
jg
add
mov
rcl
jne
fisttpl
pusha
pop
imul
mov
push
enter
pushf
xlat
iret
adc
mov
inc
mov
aaa
xchg
js
jg
mov
js
mov
out
mov
adc
mov
fsubrp
adc
push
int3
and
adc
das
inc
mov
lret
icebp
int
negl
in
xor
mov
call
pop
pmaxsw
sarb
shrb
push
repz
push
or
sahf
aam
sub
jge
cmp
cmp
dec
xchg
sbb
shl
mov
jae
push
or
inc
std
cmp
lea
leave
cmp
popf
xchg
cmc
in
adc
fcmovb
sub
sbb
mov
or
and
push
add
stc
popa
loop
pop
mov
aas
pop
add
in
inc
jg
mov
ret
aad
lcall
dec
out
jl
push
pop
jae
xor
push
push
mov
sub
inc
pop
fiadds
fistps
pushf
mov
xor
repnz
aad
rol
dec
jb
jnp
das
pop
aam
sbb
mov
lea
iret
xorl
push
pavgb
mov
sub
cmp
pop
sbbb
jo
fstl
sbb
out
or
mov
sub
rol
xor
dec
jmp
lahf
pop
mov
xor
stc
mov
outsb
cmp
sbb
xlat
cmp
jbe
push
cs
or
scas
and
in
arpl
push
orl
adc
xchg
test
xor
aam
or
mov
gs
or
cmp
push
into
inc
arpl
ficoml
cli
testl
xor
or
arpl
and
dec
pop
sbb
dec
mov
mov
das
mov
inc
les
stos
xor
xchg
popa
mov
and
add
popa
mov
int3
fcoms
in
arpl
cmpb
push
inc
cmpsl
mov
mov
sbb
mov
cmpsl
std
imul
push
test
xor
iret
or
xor
std
add
hlt
fwait
shrl
das
or
in
lock
xor
lret
sbbb
lods
lods
negl
inc
lcall
xor
stc
aas
ret
popf
sahf
sbb
out
gs
hlt
popf
addb
lods
xchg
dec
push
dec
ljmp
cld
pop
mov
aas
xor
test
cmp
stos
mov
sbb
jns
cmp
test
cmpsb
jg
push
xlat
scas
jbe
icebp
dec
sub
sbb
jne
sahf
xchg
sbb
loop
sbb
rcrb
loop
loop
pop
fwait
adc
addb
rorl
enter
xchg
bound
stc
mov
pop
cmp
push
mov
jb
inc
sti
jmp
insl
shlb
mov
fisttpl
mov
or
sub
out
pushf
sti
pop
in
hlt
sub
rcrl
imulb
fisttpl
jno
je
sub
jecxz
loopne
and
loop
out
jno
mov
mov
xchg
imul
pop
and
jge
rorb
loopne
pop
cmc
idivl
ja
mov
or
cmp
dec
jg
fwait
jne
push
iret
adc
dec
repnz
cli
push
ja
mov
js
add
lods
clc
xchg
sarb
or
add
movd
push
in
pop
pop
xchg
out
mov
mov
imul
bnd
jb
daa
jg
jmp
fidivrs
popa
lahf
jp
pop
jle
lods
js
sarb
xchg
fistpl
or
pop
insl
out
aas
mov
stc
cli
pop
aas
ja
adc
sbb
adc
adc
push
mov
rcll
mov
sub
out
or
in
subb
xlat
cmp
mov
test
xchg
das
out
sub
xchg
sbb
mov
mov
add
insb
into
mov
fistpl
push
lret
lea
popf
clc
xchg
pop
js
xor
mov
cmpsb
aam
inc
in
fstpl
int3
nop
test
test
xlat
ljmp
std
mov
pop
fistpll
mov
cmp
push
pusha
adc
cmp
xor
push
repz
sub
or
lock
pop
bound
jno
inc
lds
scas
mov
xlat
rclb
sbb
mov
pop
aam
or
inc
test
stos
scas
or
inc
jg
xchg
aad
cld
std
xchg
mov
xor
and
ljmp
jbe
je
aad
mov
std
add
ficoml
in
cli
sub
in
movsb
mov
sbb
jo
aas
cmp
outsb
addps
pop
lret
dec
jns
mov
push
add
dec
js
push
stos
xchg
adc
sbb
add
mov
mov
push
clc
mov
movsl
lret
or
rclb
lock
and
popf
icebp
push
lret
fdivp
add
push
ret
out
sbb
nop
fstpl
sub
out
fdivs
enter
xchg
out
xchg
pop
sbb
test
push
or
sub
ret
imul
and
cmp
sbb
jmp
jne
clc
mov
cmp
aam
jne
aaa
pop
sub
in
rcrl
call
ja
fldt
lahf
mov
int
sub
xchg
sub
add
test
orb
call
fisttpl
rcrb
pop
or
dec
jae
aaa
outsl
mov
sbb
js
mov
pop
cmpsl
mov
out
sbb
fiaddl
xor
imul
movsb
xchg
adc
xchg
rorl
ret
xor
and
adc
cs
jge
xor
jnp
adc
stos
jle
mov
jge
fidivrs
in
lcall
push
mov
xchg
xchg
xchg
fwait
mov
mov
cmp
push
xchg
push
stos
jne
ja
and
and
loop
or
mov
popf
loope
aad
mov
push
cmp
lds
mov
pop
xchg
scas
xchg
push
call
mov
lock
mov
mov
sub
cmp
mov
insb
xchg
andb
and
ja
push
pusha
in
sti
pop
test
jnp
adc
inc
mov
cmp
xchg
sub
mov
push
pop
lret
imulb
lcall
in
sub
outsl
mov
sbb
ret
mov
icebp
mov
mov
lods
adc
sbb
andl
fs
sub
mov
mov
jbe
in
dec
insb
icebp
sub
or
inc
aas
sarb
mov
cmp
sahf
dec
out
test
es
mov
fs
or
mov
je
lods
xchg
movsb
les
sub
push
push
sub
push
mov
push
jno
imul
mov
movsb
ds
sub
push
fnsave
and
insl
cld
add
or
push
mov
fstp
cmp
sbb
sub
xor
repnz
stc
or
jecxz
das
dec
lds
or
jmp
inc
into
imul
pop
nop
adc
xor
dec
xchg
lods
out
sbb
sub
into
sbb
mov
xchg
je
cmpsl
mov
pop
out
mov
and
inc
cwtl
inc
lret
mov
aad
sub
jp
bnd
and
and
lds
ret
and
outsl
outsb
pusha
add
gs
pop
repnz
je
dec
out
testb
or
jge
out
aam
dec
and
js
pop
ficomps
cmp
fdivrl
xchg
imul
pop
insl
in
xchg
mov
int
adcb
dec
push
adc
cmp
dec
pop
pop
insl
pushf
or
mov
imul
jb
loope
scas
and
inc
sbb
mov
aad
xchg
in
insb
xor
inc
orb
in
bound
outsl
stc
mov
in
xor
inc
ljmp
ja
adc
gs
jno
les
sbb
aas
daa
popa
mov
repnz
ljmp
mov
sub
leave
repnz
xorl
push
and
fistl
sbb
jecxz
je
cwtl
jecxz
cmp
fnstcw
mov
dec
or
xchg
jb
adc
mov
lods
iret
in
call
das
testb
pushf
ret
mov
aad
ret
movb
std
jge
lahf
js
sbb
jns
adc
test
addr16
xchg
icebp
adc
push
test
ds
inc
and
dec
pop
or
idivl
or
stos
testl
andb
mov
jne
xchg
xchg
and
test
jb
ss
pop
leave
shrb
pusha
fwait
jg
add
jmp
pushf
push
test
dec
mov
mov
lret
movsb
stos
mov
xchg
adcb
cwtl
sub
or
pop
popf
mov
inc
cld
push
push
xchg
push
lods
add
or
stos
mulb
mov
xchg
fwait
cld
inc
ficoml
mov
cld
mov
bound
fs
dec
adcl
mov
repz
aad
and
inc
lods
jns,pn
and
cs
dec
out
insb
scas
movsb
dec
int
shlb
mov
mov
xchg
in
sar
je
mov
bound
enter
bound
das
xorb
inc
pop
fwait
dec
ds
stos
addr16
aaa
push
xchg
sub
aam
out
shrl
inc
jo
fwait
rorl
out
sbb
lods
out
into
mov
lock
sub
pop
xor
lods
roll
callw
mov
cmp
cmpsb
push
pop
rcr
repz
inc
pop
push
in
stc
sub
jp
xor
xchg
lahf
push
sbb
enter
push
aad
pop
inc
add
out
pop
push
mov
xchg
jne
das
jnp
pop
jb
mov
mov
pop
shll
pop
or
push
dec
jge
push
lcall
das
or
or
mov
sub
in
jmp
pop
push
xor
inc
xor
aaa
inc
and
lods
and
dec
add
xchg
addr16
mov
test
data16
push
lock
stc
sub
insb
test
insl
addr16
and
mov
les
mov
arpl
or
jo
and
inc
lahf
fwait
cmpb
adc
jl
or
repnz
jle
movsl
cltd
sub
popa
outsl
dec
push
cld
scas
fisubrs
mov
push
fs
mov
xchg
pop
mov
call
inc
dec
pop
mov
aas
sbb
popl
fwait
in
adc
sub
xchg
cld
ret
fadds
std
pop
sub
or
test
push
ds
out
int3
mov
sbb
ret
das
bound
xchg
shll
fcmovnb
xchg
lods
sbb
add
arpl
shrb
outsb
mov
mov
je
imul
aam
lahf
daa
ret
inc
dec
inc
mov
jmp
pop
or
cmp
push
addr16
add
cltd
aas
mov
repnz
cmc
mov
cmp
mov
or
jbe
jg
lret
hlt
push
popa
mov
xchg
adc
cltd
das
xchg
sbb
adc
std
fbld
pop
pop
cmpsb
push
sub
adc
das
jl
in
or
jecxz
mov
nop
pop
cmpsl
xor
sti
mov
or
jmp
or
enter
cmp
test
cmp
out
dec
inc
add
nop
outsb
pmaddwd
push
xor
leave
std
enter
inc
scas
add
dec
cmp
push
jnp
fnstenv
das
daa
dec
icebp
jmp
inc
adc
xor
pop
cmpsb
and
ja
in
adc
adc
dec
dec
pop
jns
and
xor
adc
mov
mov
jns,pt
mov
enter
out
dec
mov
add
leave
aaa
int
sahf
mov
je
adc
jl
pop
push
scas
cmp
adc
call
and
or
sbb
inc
imul
ret
and
fnstenv
test
es
imul
and
test
inc
add
mov
rorb
cmp
sbb
mov
cmp
and
xchg
rcll
cmpsb
xchg
fcoms
jbe
mov
and
enter
jp
jge
xor
xor
or
pop
lock
push
pop
inc
out
out
cmp
fcompl
jns
mov
dec
cs
cmp
xor
shl
push
dec
mov
call
pop
or
hlt
mov
roll
pop
pop
movsl
cmc
movsl
mov
mov
push
dec
lret
out
jge
int
icebp
xchg
lret
popf
jg
pop
popf
neg
pop
aad
std
insl
xchg
lret
jb
mov
fbld
and
aas
sbb
shlb
jmp
adc
shl
jno
xchg
adc
cmp
pop
xchg
jl
jb
bnd
mov
cmp
out
repz
cltd
aaa
xor
mov
out
lods
mov
pop
jns
xchg
jbe
dec
out
mov
jp
jnp
std
dec
pop
into
sbb
and
int
pop
mov
inc
sarl
mov
cli
iret
dec
stos
or
pop
shrl
mov
clc
ret
dec
jbe
out
aad
mov
mov
push
xor
icebp
fxch
jmp
insb
xor
xor
push
loopne
lods
mov
negl
mov
mov
push
mov
pop
cs
add
xchg
push
ret
vsqrtss
add
and
out
je
negb
sub
call
mov
fwait
push
pop
sbb
pop
mov
fidivrl
mov
and
mov
daa
pop
or
mov
mov
loope
shl
divl
mov
push
scas
in
mov
or
pop
xlat
jp
jge
push
sbb
xor
les
xchg
and
in
rcrl
xchg
push
jb
jmp
sbb
loope
nop
mov
inc
mov
mov
push
or
sbb
cmpsl
in
das
stos
stos
adc
jle
scas
push
enter
das
loop
add
cmp
repz
jne
push
mov
xchg
inc
mov
cmp
mov
into
pop
and
loopne
cmp
aaa
lea
xlat
in
mov
shl
pusha
and
scas
ljmp
adc
and
mul
and
pushf
xor
and
lahf
xchg
xchg
aaa
popa
dec
add
xor
xor
lods
test
sti
int
mov
push
bound
mov
adc
es
push
notl
lds
stos
decl
xchg
push
lds
adcb
dec
jecxz
arpl
sbb
lret
stc
enter
out
xchg
pop
jnp
jne
jge,pn
testl
mov
pop
test
negl
gs
pop
out
lret
mov
psllw
int
cmp
ds
frstor
xchg
test
icebp
fwait
pushf
lcall
arpl
add
push
test
js
cmp
adc
push
cmp
cmc
mov
mov
and
out
xchg
jmp
inc
xor
dec
es
push
in
aad
xchg
and
jne
fcom
sbb
xchg
pop
jb
mov
pop
mov
xor
mov
fwait
movsl
push
loop
dec
sbb
push
mov
sub
add
fwait
imul
push
int
das
push
pushw
aam
fdivrs
pop
movsb
int
fdivrs
or
adc
add
cs
pop
pop
dec
adc
and
mov
rclb
dec
in
arpl
rcrl
pop
repnz
popa
popf
xor
or
loopne
sbb
arpl
outsb
fwait
push
rcrl
push
ffree
xor
mov
ds
rolb
mov
pop
cmp
divl
mov
push
pop
jmp
mov
and
add
daa
je
pop
dec
inc
lret
add
movsl
push
dec
adcl
or
incb
test
xchg
test
cmp
cld
fsub
adc
rorl
loopne
pop
mov
adc
xchg
and
out
add
aas
popa
or
in
push
and
pop
sbb
sbb
mov
repz
xchg
negl
cmc
in
mov
xor
shrl
data16
mov
divb
popa
sub
vcvtps2qq
mov
cmpsl
cmp
mov
pop
dec
inc
xor
imul
or
jo
xor
jno
leave
das
mov
cwtl
xor
sarb
inc
or
and
stc
push
stos
sub
inc
push
xor
sbb
mov
cld
xor
sbb
jmp
cmp
adc
mov
sarb
lcall
cmp
leave
out
icebp
into
test
gs
mov
dec
ffree
in
cmp
jno
sbb
push
sbb
in
andb
aam
inc
xchg
inc
xchg
cltd
hlt
push
mov
lahf
mov
fwait
mov
imul
jnp
pop
pop
jb
sub
inc
into
cld
pushf
push
jb
arpl
ss
fstl
dec
jge
lret
shll
arpl
pop
add
sub
push
outsl
pop
jle
dec
or
out
mov
sbb
pop
jg
or
adc
imul
stos
xchg
nop
add
lds
pop
add
pop
cmp
mov
xchg
xchg
xchg
cmp
cs
inc
test
sbb
sbb
push
test
add
pop
orl
shl
and
sub
and
divl
adc
fnstcw
mov
mov
xorb
lea
pop
cmp
push
inc
cs
fcompl
std
pop
mov
push
or
xor
mov
stc
fisubrs
lret
test
jne
and
and
sub
mov
dec
lret
rcll
insl
leave
xor
movsb
jge
clc
inc
not
mov
mov
or
and
mov
dec
mov
mov
dec
jne
scas
sti
xchg
xchg
insb
xor
lcall
in
pop
cmp
jl
or
adc
and
mov
mov
stc
lds
jmp
adc
adc
mov
fildl
pop
dec
pop
push
dec
lret
insl
push
je
pop
inc
mov
dec
cli
jns
fs
sbb
in
je
push
xchg
das
lds
sbb
ljmp
push
xor
test
push
addr16
mov
push
mov
xor
jbe
call
xor
out
add
mov
pop
push
or
sub
rcrb
xchg
sbb
call
dec
xchg
jno
fsubs
inc
mov
sub
xchg
fildl
inc
imull
sbb
sub
adc
xchg
insb
mov
repz
fmulp
stos
jne
addl
jle
dec
stos
test
leave
icebp
std
hlt
xchg
adc
xchg
jecxz
repz
adc
pushf
scas
jbe
and
ss
push
lret
inc
push
cltd
inc
push
sbb
jae
iret
shrb
roll
cmp
or
sub
loop
dec
push
sub
ret
imul
xchg
xor
jo
clc
sbb
lsl
das
test
lret
push
movsb
jecxz
xchg
push
in
loop
addl
mov
or
jnp
iret
clc
inc
push
rorl
mov
ljmp
rcl
dec
add
imul
loope
and
lret
imul
dec
cmpsb
push
adc
jle
mov
repnz
out
lock
or
pop
loop
pusha
xor
adc
sbb
push
lahf
insl
insb
stos
mov
lcall
int
rclb
mov
xor
cmp
sbb
jle
mov
hlt
adc
pop
loop
enter
test
outsl
sub
jb
fwait
lock
ds
in
fsubs
ret
arpl
mov
repz
sbb
int
mov
sub
enter
cmp
pop
jl
into
and
mov
cmp
jo
xchg
loope
jne
mov
sbb
xor
cli
xchg
movsl
cmc
call
cmpsl
test
inc
jno
or
mov
imul
in
dec
jae
mov
add
xor
jns
scas
push
jl
sbb
dec
lods
xorb
dec
lock
movsb
xor
js
clc
sbb
mov
mov
out
sub
push
or
ret
or
cmp
adc
inc
sbb
lds
pop
nop
jb
fdivrl
repnz
mov
ret
nop
jge
jns
mov
movsb
mov
push
aam
test
leave
jne
xor
push
mov
jl
aaa
jle
add
fcmovb
inc
mov
jo
jo
mov
test
sub
popw
aad
das
ret
inc
into
dec
pop
loopne
mov
push
and
mov
sbb
aad
cmp
pop
repnz
repnz
cmc
push
sbbl
mov
dec
mov
jg
jge
stos
test
scas
stos
mov
jb
inc
imul
lods
iret
push
xchg
lret
lret
and
ret
mov
xchg
inc
repz
imulb
mov
or
pusha
bound
xchg
sub
inc
cld
cmp
cmc
sti
addr16
fcmove
stos
dec
aam
lcall
sti
pop
mov
sarb
pop
sbbb
rcr
je
outsb
pop
xlat
adc
imul
lds
push
enter
divb
inc
mov
call
int3
dec
es
icebp
push
push
outsb
xchg
lods
jne
mov
das
inc
sub
js
sub
pop
pop
and
push
sti
lods
lcall
fldl
mov
xor
inc
imul
sbb
arpl
movsl
push
add
fdivl
adc
arpl
mov
pop
pop
xchg
cmpsl
pop
add
push
jle
shrl
das
cmc
int
fildl
int
mov
mov
push
mov
pop
or
jnp
dec
cmpsl
lahf
cmp
push
aad
pop
inc
mov
pop
hlt
ret
fcmovnb
adc
pop
xchg
pop
shll
popa
or
push
xchg
jecxz
mov
push
fcoml
loope
leave
mov
mov
sbb
xor
sub
push
dec
imul
sahf
lcall
popl
fnstcw
outsl
cmpsb
fldl
mov
fadds
inc
mov
in
sbbb
mov
xchg
pop
push
inc
push
in
sbb
pusha
push
das
adc
cmc
mov
movsb
jle
sub
loop
or
lret
sbbl
and
aam
jns
xorb
push
test
out
lock
xchg
ret
push
xlat
aaa
sbb
jb
lahf
inc
sub
push
jmp
jp
jge
inc
rolb
mov
insb
lods
push
xchg
xor
loop
inc
ror
jl
xchg
or
inc
pusha
fisubs
mov
dec
lret
xchg
mov
jno
imul
xlat
jl
mov
out
addl
mov
roll
fisubrs
sub
push
and
mov
ficomps
xor
imul
adc
and
movsb
xor
movsb
aam
jl
push
fs
push
push
addr16
and
aaa
add
adc
test
push
insb
add
imul
cs
and
lret
rorb
push
repnz
aaa
mov
inc
pop
jne
lock
imul
mov
mov
sbb
dec
jecxz
out
in
lcall
ja
mov
or
add
clc
fisubl
pop
pop
outsb
mov
push
and
dec
and
mov
test
in
push
stos
push
shll
subl
pop
mov
js
daa
negl
add
fxch
fsubrs
bound
daa
pop
mov
push
add
jp
xchg
xchg
jnp
fldt
lret
jb
mov
mov
ss
test
adc
out
clc
movsl
pop
sahf
dec
push
xor
roll
inc
arpl
push
loop
inc
and
cmp
adc
push
jmp
or
in
sarl
push
loope
xchg
fisubrl
xchg
out
in
sbb
lret
andl
test
pusha
adc
sub
jp
scas
imul
loop
fidivrl
loope
add
adc
mov
popa
xchg
stc
jo
test
cld
pop
shll
lock
jbe
sar
call
das
xchg
test
jbe
out
and
add
xchg
movsb
adc
xor
mov
lods
fdivp
mov
fidivrl
pop
arpl
in
jmp
shll
andl
jp
adc
lar
sub
pop
mov
add
jns
sarl
aam
stos
dec
cld
lods
push
aad
sbb
pusha
push
fs
lahf
mov
faddl
mov
pop
pop
lods
daa
ja
cmc
fldcw
dec
pop
add
push
mov
sahf
fldl2e
aad
and
xchg
in
mov
pop
lods
out
add
fs
enter
cmpsb
mov
push
mov
mov
shl
mov
lock
xchg
mov
pop
cwtl
call
xor
int3
and
test
xor
test
jae
sub
push
arpl
and
gs
aas
out
clc
sbb
sbb
push
jge
mov
cs
sbb
mov
rorl
sub
div
in
ds
xor
pop
mov
mov
cmp
inc
fcoms
xchg
cmp
mov
and
and
add
ja
dec
lea
sub
jp
pushf
insb
bnd
popa
xlat
imull
fs
jecxz
dec
dec
lods
dec
ret
mov
and
or
cmp
push
and
outsb
cwtl
cmc
cs
mov
mov
fldt
hlt
and
dec
pop
sub
cltd
clc
fnstenv
sbb
dec
mov
jecxz
out
mov
adc
cmp
sub
xor
push
mov
pop
mov
sub
inc
sahf
rcrl
push
rol
sbbl
pop
lds
cwtl
mov
daa
aad
int3
mov
mov
rep
adc
dec
pushf
sahf
in
sbb
adc
push
push
xor
int3
sub
sbb
adc
adc
and
mov
dec
lds
loopne
mov
dec
sahf
and
imul
push
scas
out
test
sub
mov
pop
and
add
out
mov
mov
hlt
mov
les
cmpsl
in
shlb
inc
xor
push
mov
xor
inc
xchg
fists
sbb
mov
pop
test
dec
inc
lea
jl
outsl
int
mov
aad
xor
xor
pop
in
sahf
decb
pop
add
mov
jno
cmpsb
xchg
addr16
push
stos
mov
roll
dec
inc
inc
decl
scas
clc
enter
loop
jb
fistps
sarl
test
cmp
add
mov
pop
vpshab
mov
aad
jae
mov
push
jo
adc
jp
adc
mov
add
sub
pop
std
mov
stc
ss
movsb
fbstp
inc
fcompl
fildll
sbb
popf
lea
lret
lods
into
cmp
pop
pop
repnz
xchg
xor
sbb
adc
loop
inc
sti
jne
call
sbb
cmp
inc
cwtl
jmp
inc
push
xor
add
xor
adc
test
cmpsb
scas
iret
xchg
adcl
roll
inc
repnz
shrl
imul
jmp
dec
imul
imul
imul
cs
clc
dec
out
enter
sti
mov
pushw
notl
sahf
push
jae
mov
dec
call
inc
mov
sbb
jl
push
movsl
in
cmp
iret
dec
sarb
mov
out
addb
aas
inc
and
sub
outsb
rcrl
int
test
xor
fwait
xor
arpl
pop
daa
stc
cmp
sbb
push
ja
and
mov
add
lock
and
fwait
andl
pop
push
and
cmpsb
fdivrs
xor
mov
adc
pop
jge
imul
dec
std
mov
pop
jl
sub
cs
dec
push
jle
fisubrl
mov
cmp
loop
pop
stos
cli
sub
or
outsl
sub
int
ja
jae
test
imul
jle
ljmp
sti
leave
mov
iret
mov
and
xchg
jmp
inc
lock
shlb
pop
sti
and
lret
dec
cld
js
add
addr16
ss
fcompp
xchg
and
pop
arpl
inc
imul
imul
insl
inc
lods
jae
sbb
dec
mov
sub
pusha
mov
out
push
and
xchg
ljmp
cmp
icebp
in
sbb
xor
xchg
xchg
push
adc
enter
xor
xchg
xchg
test
cltd
mov
dec
sub
pop
add
rep
enter
mov
jge
cmp
inc
adc
enter
aaa
es
bound
adc
fdivrs
lods
clc
pop
xlat
cmc
dec
cmp
xor
pop
and
movsl
or
cmp
movsb
into
inc
in
mov
add
mov
sbb
rol
into
or
lods
std
fs
rolb
pusha
in
xchg
iret
repz
add
nop
mov
outsb
adc
mov
sub
xchg
out
test
push
inc
in
test
cmpsl
into
xchg
int3
dec
insl
repnz
push
test
shl
or
xorb
pop
xchg
sbb
es
inc
mov
or
adc
mov
sbb
cs
sub
jo
out
add
fistl
stos
xchg
clc
push
mov
cwtl
jne
mov
pusha
pusha
mov
orl
jmp
sub
mov
fucomp
jmp
pop
cmp
imul
fmul
pop
std
mov
testl
pop
pop
jp
cmpsb
bound
in
mov
subl
mov
mov
mov
push
add
sub
push
sahf
in
mov
add
movsl
inc
or
push
adcl
ss
mov
and
lcall
nop
xor
rsqrtps
js
pop
test
xchg
mov
mov
insl
insb
test
adc
jo
ficoml
dec
ja
lret
out
mov
stos
dec
fistpl
add
mov
cmc
inc
sarl
pop
lods
push
test
adc
sbb
fistpll
dec
and
out
inc
call
add
lds
jo
std
data16
xorl
sub
and
jae
dec
mov
aaa
ss
push
mov
aad
into
push
cmp
mov
lea
sarb
les
loop
mov
daa
pop
xorb
inc
outsl
fistpl
adc
pop
ret
add
mov
in
xchg
mov
hlt
ds
jns
pop
ds
shlb
mov
hlt
nop
pop
sub
or
inc
xor
gs
push
adc
inc
jmp
xor
aam
jbe
lahf
jno
lods
xchg
adc
or
mov
enter
push
aam
xchg
repz
and
cmp
dec
loope
inc
movsl
inc
mov
xchg
mov
ss
fiadds
xor
push
sub
insl
daa
ret
subl
popf
adc
icebp
shrl
sbb
hlt
ljmp
leave
in
pop
mov
mov
mov
pop
sub
sbb
mov
cs
popa
mov
outsb
inc
jnp
jmp
lock
mov
orl
add
or
sbb
pop
sub
add
int3
pmaxsw
loopne
jno
flds
sub
loopne
pop
nop
jne
sahf
mov
inc
mov
or
jmp
and
pop
incl
pandn
in
sbb
out
push
mov
push
shll
pop
jge
ss
aam
mov
mov
outsl
mov
inc
into
cmp
mov
ficompl
testb
arpl
adc
repnz
cmp
mov
and
std
inc
dec
lock
push
cwtl
pop
pop
xor
movsl
dec
push
je
xchg
dec
or
mov
push
cli
call
out
mov
or
dec
and
inc
push
mov
jp
pop
adc
sbb
push
shr
pushf
testb
addl
daa
adc
xor
or
mov
aam
sbb
scas
stos
and
out
adc
jle
dec
stc
sbb
outsb
into
pop
mov
xorl
insb
cmc
aad
subl
sub
rcrl
aaa
icebp
jecxz
ss
sub
pop
xor
or
pop
arpl
repnz
mov
repnz
push
and
fsubr
pop
enter
or
gs
sbb
cli
in
mov
dec
cli
push
jo
shrb
sub
out
test
xchg
pop
ret
lods
pop
lds
call
cwtl
sub
aam
cmp
ret
and
and
dec
subl
arpl
xchg
jl
pusha
inc
andb
js
test
pop
loop
and
fimull
js
cmp
insb
fidivrl
rcrl
push
adc
adc
jb
mov
mov
ret
adc
push
xor
jmp
sub
loope
jmp
adc
mov
jnp
fmull
xchg
jo
push
js
add
ss
call
push
test
ret
inc
int
mov
in
cs
pand
add
or
shlb
dec
push
mov
ret
addr16
in
test
inc
push
add
enter
mov
sub
inc
iret
adc
lds
sbb
xchg
mov
out
ret
loopne
add
fdivr
pop
jp
cmp
cmp
sub
xchg
in
dec
adcl
aad
mov
pop
xchg
push
mulb
arpl
push
inc
inc
lods
mov
repz
jb
adc
add
xchg
mov
roll
sahf
push
gs
les
idivb
test
ds
call
pusha
add
and
adc
jb
cmpsl
ss
xor
into
xlat
jl
gs
rorl
in
je
ficoml
filds
dec
push
cli
mov
test
sub
push
mov
sti
loop
ret
stos
addr16
adc
gs
mov
enter
cmp
pusha
and
xchg
dec
popaw
aad
pop
sub
mov
xchg
xchg
pop
mov
imul
inc
mov
cmp
jle
push
add
imul
xchg
mov
push
xor
dec
and
out
adc
sbb
dec
shrl
pop
adc
push
pop
fnsave
lock
push
jp
or
cmp
iret
movsl
inc
mov
jae
imul
cmpsb
or
daa
je
pop
xor
and
add
cmpsb
ja
or
xor
cmpsb
mov
fldenv
in
push
dec
mov
mov
sbb
jae
outsb
dec
fsubl
push
sbb
aas
test
lods
xor
imul
rcr
fnsave
test
adc
sub
xchg
mov
popa
loope
dec
cs
push
imul
or
adc
fidivs
jbe
xchg
push
in
sbb
pop
cs
scas
lock
loop
js
mov
pop
negl
cmp
or
out
fsubrp
in
sub
call
cmp
int3
mov
pop
add
jg
dec
pusha
jo
and
mov
cmp
xor
inc
and
fiadds
xchg
loopne
mov
xchg
xchg
push
jo
sbb
ja
mov
decl
cs
shr
into
mov
negl
push
add
push
mov
mov
mov
pop
adc
and
inc
divl
mov
test
scas
adcl
pusha
jno
mov
pop
in
out
dec
xchg
cwtl
cmp
dec
sbbl
pusha
or
inc
aam
xorb
xorb
iret
cmp
push
pusha
push
int
cwtl
jno
stos
imul
cwtl
jmp
rcr
mov
adc
push
adc
stc
sub
sahf
pushf
fcomps
mov
call
and
test
arpl
mov
scas
adc
enter
lret
aas
in
push
outsl
icebp
mov
sub
push
xchg
sub
js
mov
xor
mov
sbb
xor
pop
stc
sbb
jl
sbb
sti
leave
jmp
ret
pop
jp
sbb
jecxz
divl
repnz
adcb
test
jo
test
xchg
clc
insb
das
mov
insb
mov
clc
lcall
mov
mov
bound
mov
push
stc
sbb
fistps
ret
repnz
mov
scas
stos
push
mov
xlat
fistpll
nop
adc
pop
mov
adc
nop
fbld
gs
mov
hlt
test
adc
mov
lods
nop
jo
push
dec
sub
scas
mov
cld
mov
mov
push
add
aad
adc
in
dec
fnsave
data16
xor
and
test
pop
lcall
enter
dec
xchg
and
mov
ljmp
mov
jb,pn
ja
outsl
and
mov
mov
jl
inc
mov
xor
movsl
mov
or
or
cmp
imul
sbb
fwait
shrl
shll
ss
insl
hlt
push
mov
mov
mov
out
sub
add
daa
and
jb
daa
fs
or
insb
js
pop
or
cmc
and
mov
push
ret
sbb
sbb
push
fdiv
cli
fistpl
jae
into
adc
jo
pop
jbe
mov
mov
pop
daa
mov
adc
add
stos
xor
mov
mov
xor
arpl
ljmp
fidivl
xchg
xchg
pusha
jmp
mov
cmp
mov
in
movsl
sub
dec
sti
adc
repnz
mov
xor
notl
out
stos
rcrb
jl
xchg
push
cmp
pop
inc
cli
subb
cmpl
not
jns
paddq
imul
mov
fstl
leave
xorl
int3
push
popf
fldenv
jle
adc
xorl
std
ret
fscale
inc
xorb
ss
in
mov
mov
lea
dec
aam
lods
pop
or
mov
cmpb
rolb
xlat
xchg
jg
jle
hlt
jl
in
fbld
adc
icebp
xor
adc
jb
push
stos
jecxz
pop
shlb
rolb
adc
mov
sub
out
mov
add
and
les
in
gs
loope
int3
sarl
cmc
call
jmp
sub
sarb
fisubrl
mov
sub
push
daa
add
and
pop
mov
mov
sti
jp
out
dec
jno
je
stos
cmp
movsb
in
inc
imul
es
pop
ljmp
push
sub
cld
pop
nop
add
mov
fs
push
cmpsl
scas
xlat
stos
add
pop
ret
movsl
orl
ja
push
pop
aad
xor
jbe
js
jo
add
pop
mov
mov
jbe
jle
les
jno
inc
push
inc
xor
fcmovnbe
dec
or
push
fs
jns
dec
cmpsb
xchg
scas
sbb
pop
mov
mov
push
mov
cmpsl
sbb
adcl
xor
add
mov
sarb
mov
xchg
rcrl
ficoml
xchg
lahf
mov
sbb
or
lods
or
sbb
add
fdivrp
add
cmp
lret
xor
push
sbb
and
mov
pop
ss
mov
push
sub
jnp
xor
sti
insl
mov
adc
mov
ja
jns
pop
fists
cmp
es
addb
push
insb
jo
inc
out
add
sbb
mov
test
inc
call
fidivs
inc
std
int
and
sub
xor
sahf
subl
jge,pn
sub
dec
popf
test
test
sahf
add
pop
dec
imul
inc
inc
pop
cmp
jmp
imul
mov
cmp
xchg
in
mov
ds
test
in
cmp
test
mov
aam
xchg
ret
mov
leave
lcall
sbb
sbb
arpl
xchg
test
xor
xor
sbb
fisubrl
xchg
cmpsl
insb
sbb
sbb
mov
into
sarl
mov
fwait
addl
test
repz
divb
enter
xchg
test
sbb
jge
ret
and
add
dec
mov
aaa
fwait
mov
aad
loop
lods
movsb
dec
lcall
dec
les
sbb
or
jmp
jbe
popa
mov
and
inc
or
jns
leave
stos
into
in
movsl
mov
cmpl
ret
fildl
mov
dec
jge
xor
adc
add
xchg
mov
push
jbe
jg
and
shlb
ffree
inc
shll
enter
and
jbe
fdiv
test
int
mov
adc
ror
shll
push
addl
sbb
in
mov
fisttps
data16
aaa
lahf
std
dec
sub
pop
pusha
jmp
add
imul
test
test
loope
rcll
int3
and
sub
mov
int
jecxz
negl
sub
add
in
cmp
out
repnz
mov
addr16
int
das
mov
cmp
dec
cmpsb
inc
loope
sbb
out
xchg
pop
out
and
add
sbb
cltd
mov
xor
sarl
mov
ds
aas
dec
dec
pop
mov
sbb
pusha
andb
lret
pop
lock
dec
add
shrl
ret
mov
mov
and
adc
lahf
cmp
subl
jmp
inc
ja
mov
or
rclb
out
add
je
movsl
push
aam
andb
push
xchg
jb
xor
ja
mov
inc
add
lods
popa
out
test
outsl
pop
popf
dec
or
cwtl
ret
push
inc
imul
mov
dec
lods
sub
xchg
insl
dec
cmc
call
mov
lods
push
dec
mov
enter
pop
push
or
ds
sub
push
and
mov
repz
test
into
add
adc
mov
pop
xchg
and
cmpsb
fcmovbe
daa
inc
mov
sbbb
neg
lods
dec
xchg
daa
add
lret
cli
fistps
test
pushf
push
inc
adc
out
xchg
sub
iret
pusha
roll
leave
adc
push
cmpsl
sti
in
enter
jp
lea
mov
and
or
movzwl
mov
jge
jp
sub
call
in
call
mov
adc
sbb
in
incb
pop
mov
sub
mov
gs
fsubl
push
mov
xorl
shl
arpl
leave
add
jge
lods
push
or
loop
and
push
cli
xlat
pop
stc
dec
xchg
into
enter
out
jmp
lods
arpl
xor
fcomps
pop
ret
popf
mov
jge
jo
add
cltd
lods
clc
push
sbb
loopne
leave
add
cmp
xchg
pop
and
adc
pop
dec
insl
mov
mov
push
scas
cmp
adc
cmp
jno
jmp
popf
and
push
push
xchg
inc
test
mov
inc
mov
jg
jo
jl
mov
cmp
clc
pusha
std
pop
xrelease
cmp
insl
xor
data16
inc
adc
add
add
xor
jl
dec
and
inc
mov
mov
aad
add
cld
mov
aas
out
push
pop
ds
fcoml
dec
jmp
or
xchg
lods
add
mov
dec
mov
imull
mov
mov
adc
dec
insb
imul
mov
lock
insb
scas
xrelease
adc
jecxz
out
int
test
mov
lahf
scas
ret
mov
rcrl
ret
cmc
ja
jne
lcall
fildll
arpl
outsb
or
mov
lahf
imul
enter
addr16
insb
push
push
ds
sub
cld
movsb
dec
fwait
push
push
daa
push
and
mov
mov
push
jmp
mov
scas
repnz
push
arpl
or
lcall
pop
popa
pop
jle
jno
mov
shll
xor
sub
fildll
xchg
sub
test
pop
mov
shlb
xor
out
rorb
xchg
insl
xchg
add
movsb
xor
inc
push
xor
iret
int
fmulp
fidivrs
push
sbb
inc
addr16
mov
stos
incl
pop
mov
inc
enter
mov
mov
fldt
mov
xchg
imul
mov
negb
lea
sbb
jne
shlb
jp
ja
pop
hlt
adc
mov
into
fdiv
cmp
sbb
idivl
add
mov
pop
icebp
mov
inc
lods
or
je
mov
fcomip
or
mov
flds
shll
lds
push
mov
stos
out
mov
gs
dec
push
add
or
pusha
dec
pop
aaa
movsb
sub
pushf
in
aam
lods
cmp
push
int
daa
icebp
inc
add
jecxz
sbb
jecxz
xchg
push
cwtl
mov
dec
cli
adc
add
in
mov
cmpb
xor
cmp
mov
add
dec
sti
sbb
push
fst
pop
frstor
fsubp
ja
push
cmpsl
xchg
push
sti
fs
xchg
cmp
jnp
mov
xor
jnp
insl
rolb
inc
sub
add
out
pop
lret
adcl
sbb
cmpsl
jg
mov
jecxz
ljmp
xlat
jno
xchg
mov
inc
add
or
lcall
mov
gs
aas
cmc
pop
or
and
fstpt
inc
mov
nop
sbb
rorb
sub
sub
sub
imull
scas
lret
popa
int
test
xor
pop
mov
fidivrs
dec
ret
pop
lcall
decl
cmpsb
dec
or
jne
or
and
cs
xabort
icebp
mov
push
stc
leave
inc
xchg
xchg
jns
push
test
sbb
imul
cli
adc
mov
iret
ds
xchg
sbb
push
mov
lea
add
in
dec
mov
mov
cwtl
or
inc
sub
xor
push
leave
std
jno
cs
push
xor
adc
test
aam
mov
mov
inc
sbb
or
push
sahf
aaa
ja
adc
jnp
daa
add
lcall
lods
push
sbb
imul
mov
pop
xor
mov
mov
xor
sub
adc
cmc
pop
inc
call
ror
aam
sbbl
into
data16
xor
jge
or
inc
out
addr16
push
rcll
sbb
pop
or
dec
jmp
loope
addr16
loopw
popa
dec
mov
mov
mov
or
and
jle
mov
pop
cmpsl
in
push
mov
and
testl
aaa
jo
loope
cs
aaa
lret
int3
push
jno
cmp
mov
gs
popa
xchg
cmp
ret
ds
push
pushf
jbe
jmp
insb
adc
jg,pt
lods
cs
imul
pop
jecxz,pn
add
pop
inc
rcrl
add
push
xchg
cmp
xor
xchg
sti
daa
mov
push
fldl
cli
lock
xchg
repnz
jl
in
mov
sub
js
mov
sbbl
subb
xor
outsl
pop
stos
ds
or
push
mov
lret
ffreep
mov
sbbl
jge
xor
out
xor
mov
push
fidivrl
push
jns
mov
inc
and
add
mov
rcl
outsl
and
xchg
or
cmpsb
fisubs
or
and
xor
scas
sub
xchg
and
mov
lods
mov
lods
cltd
mov
xor
jbe
push
inc
add
dec
xchg
and
dec
pop
fdivl
es
cld
add
int3
movsb
mov
xchg
sbb
sbb
lahf
nop
lock
lret
and
xor
xor
test
je
inc
aaa
movsl
dec
cmp
mov
ret
sub
jbe
in
xlat
mov
push
mov
xchg
ret
ficompl
pop
push
js
lea
stos
out
and
cmp
lea
mov
fstps
jns
add
push
cmp
add
cwtl
jne
cmc
inc
mov
and
ljmp
test
test
in
pop
aam
dec
dec
and
inc
aad
aas
dec
fstp
and
xchg
mov
xchg
xchg
or
and
and
or
sub
jbe
test
mov
test
cld
push
sub
push
and
cmp
jo
inc
push
shlb
mul
push
ret
inc
movsl
mov
or
mov
mov
std
xchg
cld
adc
jmp
mov
leave
dec
mov
test
xchg
xchg
mov
push
mov
mov
jno
arpl
std
push
pop
mov
je
popa
push
cmp
loope
inc
negl
xchg
lcall
ret
insl
and
push
test
or
cmp
xlat
rorl
sahf
mov
in
repnz
cmp
mov
or
mov
outsl
cmp
adc
xorb
test
les
add
std
sbb
arpl
cmp
insl
jl
mov
ss
mov
loop
dec
sub
mov
out
shlb
xchg
test
and
inc
in
scas
inc
xchg
adc
xchg
adc
pop
xor
cmp
rcrl
test
add
inc
leave
lahf
jle
cmp
push
xchg
ficomps
iret
cmp
pusha
sub
arpl
xchg
and
jecxz
in
loopne
mov
div
xlat
daa
inc
insb
pop
cs
sahf
push
jg
mov
mov
es
int3
mov
fnstsw
add
xchg
push
loopne
in
std
push
mov
clc
xchg
cli
sbb
xchg
inc
fidivrs
inc
push
call
push
mov
push
ds
add
cs
lods
inc
movsb
outsl
push
imul
loope
jp
dec
or
xor
insl
add
cmpb
aad
pminub
xchg
add
cmp
decl
test
dec
test
jl
repz
cltd
xor
aam
and
mov
gs
pop
jb
pop
call
sbb
xchg
out
fisubl
or
mov
sti
insl
fnstcw
cmp
rclb
int
mov
and
cmp
lret
negb
call
adc
jnp
jecxz
pop
mov
mov
xchg
push
inc
mov
xorl
xchg
ror
pop
fldl
scas
in
push
cli
mov
loop
mov
jb
push
mov
push
mov
xchg
mov
call
rol
pop
mov
push
pop
mov
lret
and
and
ljmp
sar
in
ja
idivb
pop
xchg
int3
hlt
push
fucomip
cmp
in
lret
leave
fwait
jb
sub
ret
jp
mov
ds
mov
sub
mov
and
in
inc
lods
cmp
pop
ja
addl
imul
cmpsb
bound
js
push
ljmp
pop
out
sub
aaa
in
mov
je
or
sahf
sbb
cld
or
mov
mov
outsl
in
stos
mov
xor
fwait
das
in
or
mov
mov
iret
out
or
loope
push
cmp
cmp
pop
xor
sbbl
dec
inc
pop
or
cltd
repnz
inc
push
sub
sbbl
jmp
cmp
and
out
adc
icebp
in
daa
iret
outsl
mov
cmc
jb
pusha
xchg
leave
aas
cmp
inc
pop
xchg
in
jle
mov
mov
mov
dec
add
cmp
mov
stos
pusha
add
bound
sub
rcrl
call
xchg
inc
or
loope
or
sti
xchg
or
insb
xchg
test
gs
sub
int
out
inc
pop
pop
adc
jno
fdivr
push
cld
leave
movsl
daa
add
and
fsubs
movsl
arpl
sub
call
jnp
das
jg
hlt
sbb
sbb
fs
fildll
fistl
push
ret
insl
imul
fcomps
and
pop
stos
mov
divb
out
mov
subl
adc
mov
scas
rclb
sbb
data16
mov
mov
mov
adc
jmp
incl
bound
xor
daa
leave
xchg
lds
loop
xchg
sub
xchg
in
in
addl
push
mov
out
jp
outsl
adc
sub
push
andl
jns
pop
mov
xor
jge
adc
sbb
stos
mov
sbb
adc
jle
and
hlt
lahf
jl
pop
into
scas
fcomps
jns
in
out
pop
dec
sub
or
pop
call
push
addl
outsl
test
fwait
or
lahf
pop
and
mov
loope
rcr
rolb
stos
jge
inc
sahf
or
addb
push
xor
insb
jecxz
mov
sub
dec
and
jge
mov
mov
or
push
dec
jae
pop
xor
sub
aaa
cmp
loope
jnp
jno
divb
repz
dec
stos
adc
popa
inc
jbe
out
mov
mov
xor
iret
sub
icebp
test
mov
inc
sub
daa
sub
outsb
mov
push
and
ss
arpl
stc
xorb
bound
sbb
adc
mov
xchg
mov
mov
sub
mov
icebp
loop
sub
pop
xchg
scas
cmp
mov
xchg
cmp
fstl
pushf
andl
adc
test
jo
rcll
ds
icebp
add
pop
mov
arpl
or
xchg
pop
ja
mov
cld
icebp
pop
or
cli
xorl
dec
add
subb
daa
sub
dec
push
jge
ljmp
cmc
adc
jo
pop
mov
cltd
pusha
sar
cmp
cltd
insl
out
fldt
push
cmp
ss
in
enter
in
inc
xchg
gs
dec
lea
xchg
push
cmc
xor
xor
sahf
test
push
or
jnp
ret
sbb
rolb
push
mov
xor
shr
dec
pop
repnz
js
inc
xor
in
popf
jae
cmpsl
int3
rorl
pop
xor
xchg
sbb
stos
mov
xchg
xchg
adc
jne
dec
lods
ss
adc
mov
lea
in
loop
bnd
push
enter
sub
lods
iret
push
sar
fwait
mov
and
xchg
sub
and
imul
outsl
lret
ret
ret
fwait
push
nop
in
idiv
arpl
or
and
push
stc
jbe
out
aad
js
pop
adc
add
hlt
mov
or
push
mov
or
fwait
ljmp
sbb
mov
lcall
pop
jnp
lcall
add
ds
push
pop
insb
dec
pop
pop
das
add
xchg
or
sub
mov
inc
cs
adc
sbb
aaa
sub
decl
out
hlt
aad
fidivs
stc
pop
and
cmp
cmp
test
inc
mov
xchg
fmull
aad
adc
add
lods
sbb
mov
out
jns
pusha
lea
cmp
or
arpl
aad
cmp
mov
push
push
pop
ss
cs
hlt
cmc
sbb
jge
pusha
mov
ljmpw
out
xlat
dec
jbe
adc
jge
dec
xchg
cmpsb
lret
stos
push
std
cmpsb
mov
sub
js
in
mov
std
out
testl
pop
adc
dec
cmp
jbe
adc
or
pop
push
shlb
mov
push
rcr
inc
cmp
add
popf
sti
xchg
mov
fisubrs
fmuls
or
mov
fucom
in
adc
cwtl
data16
andb
in
mov
xor
sub
pushf
rclb
incl
rcrb
es
ss
and
dec
jo
mov
data16
dec
daa
insb
push
push
test
stos
inc
pop
stc
cmp
xor
ss
fisubrl
stos
fdivrs
insb
or
lods
daa
pop
fisubs
mov
mov
mov
popa
out
pop
aaa
fcmovbe
lahf
jl
pop
and
jl
ds
push
loop
aaa
insl
not
mov
rorl
sub
sub
scas
adc
in
outsb
xchg
fcomps
xchg
stc
xchg
pop
in
push
ret
pop
mov
test
movsl
dec
mov
ret
bound
test
call
ret
iret
push
imul
mov
add
jne
je
enter
mov
hlt
test
outsl
roll
cmp
and
xor
mov
repz
mov
and
ja
mov
and
cmc
stc
out
jmp
pop
out
fcoml
fisttpll
lea
add
daa
mov
test
xchg
test
das
adc
iret
pusha
inc
clc
mov
lods
sub
push
pop
cs
int
pop
mov
cmp
jns
push
jbe
cmp
and
out
xchg
mov
xor
fdivrp
aaa
hlt
xchg
pop
fwait
in
jno
sarb
dec
xor
sub
adc
cmp
testl
xchg
cs
sub
iret
in
movsl
fsts
pop
or
add
in
mov
jp
sbb
lock
sahf
aas
popf
pop
mov
cmpsl
ss
stos
mov
test
add
cltd
mov
fsub
mov
adc
cli
mov
shll
testl
test
lds
push
cli
ss
jge
sbb
cmc
aaa
jmp
sbb
mov
lahf
push
lock
decb
das
lahf
push
xchg
dec
movsl
movsl
das
xor
cmp
sarl
xor
mov
adc
mov
cs
sub
push
lahf
mov
push
ret
fwait
sub
xor
push
cmp
jnp
aaa
cmpsl
call
ja
mov
cmp
dec
adc
and
sub
lods
scas
outsb
mov
movl
mov
sti
push
sub
xchg
mov
cmp
out
enter
dec
pop
cmp
jecxz
jmp
jecxz
mov
iret
stos
bound
popa
inc
add
or
stos
mov
outsb
test
ja
mov
and
aam
ljmp
sub
cmp
clc
cld
and
cltd
pop
cli
lock
stc
mov
mov
cmp
cs
jbe
jge
ja
adc
scas
cmc
xor
cmp
cld
pusha
gs
add
orl
mov
add
mov
pop
lret
out
insb
mov
and
idiv
dec
push
xchg
pushf
and
dec
popa
mov
pop
fs
jmp
imul
in
pusha
lahf
push
pop
or
sbb
and
add
dec
fcmovbe
and
js
int3
mov
clc
sbb
les
inc
test
arpl
out
in
movb
cmp
ret
jmp
insb
pusha
mov
popa
jge
loopne
mov
fnclex
push
aas
push
jp
out
data16
iret
arpl
adc
xchg
cmp
push
push
in
fwait
mov
add
mov
inc
xchg
sti
jl
into
xchg
popa
add
mov
and
or
dec
iret
mov
add
cwtl
test
cs
xchg
in
sub
mov
inc
and
mov
jecxz
and
cmpsb
or
mov
repnz
mov
andb
aas
push
mov
xor
mov
push
or
adc
adc
scas
hlt
in
scas
or
in
mov
lcall
pusha
push
cwtl
ja
into
mov
leave
push
or
mov
loope
push
xchg
jge
popa
jbe
fnstenv
pop
ja
ja
addr16
mov
popf
adc
sub
ds
mov
ja
aad
pop
inc
in
jge
push
ret
iret
pop
lock
loope
push
fnstenv
fiadds
test
mov
mov
add
out
daa
loopne
pop
mov
xor
add
mov
rcrb
daa
cmp
inc
nop
shll
cmp
test
pop
js
dec
jno
ud0
pop
dec
andl
xchg
add
fdivrl
stc
dec
mov
jmp
rclb
and
orb
pop
aam
pop
je
cs
push
or
call
shll
fisttpl
inc
add
sub
or
pop
fwait
adc
repnz
les
repnz
js
outsb
inc
or
testb
popa
movsb
dec
fs
std
mov
add
xlat
push
jl
paddd
mov
jecxz
or
jns
mov
cmp
pusha
dec
movsl
test
dec
xor
sbb
stos
adc
sub
ja
xchg
adc
xor
inc
sub
adc
es
xchg
inc
nop
pushf
or
sahf
pop
pushf
popf
inc
or
pop
pop
xor
or
pop
dec
cmp
adc
adc
movsl
repz
push
push
int3
clc
scas
sbb
inc
xchg
dec
test
cwtl
ss
outsb
or
fstpt
fs
xchg
test
xor
clc
and
arpl
pop
jbe
fisubs
sub
and
test
push
lods
lods
xorb
rorb
mov
sub
mov
aaa
jmp
test
jne
loope
fwait
jbe
jbe
and
sarb
dec
mov
xchg
pushf
popa
enter
cs
outsb
aam
arpl
rcl
cwtl
or
aam
mov
dec
mov
sahf
imul
sbb
dec
xor
loopne
fldt
cwtl
fistpll
das
hlt
push
push
mov
call
iret
cltd
scas
rorl
sti
and
push
mov
lret
addl
mov
add
jns
cmpsl
cmp
xchg
nopl
rorb
out
and
add
push
xchg
dec
fidivs
xor
dec
int
mov
jmp
inc
mov
fwait
or
sti
out
dec
jle
int3
sbb
dec
mov
icebp
sbb
cmp
pop
cmp
pop
inc
xchg
lret
in
aas
mov
or
dec
popa
mov
daa
xchg
call
xchg
mov
imull
or
push
xor
dec
cs
jle
in
loopne
cmp
pop
adc
mov
lock
das
xchg
xchg
and
mov
dec
mov
pop
in
mov
mov
mov
inc
lahf
movsb
aam
andb
hlt
ljmp
mov
mull
ljmp
int
and
jbe
fndisi(8087
push
add
xchg
jno
push
lods
adc
sub
sub
pop
push
in
sub
js
dec
sbb
xchg
imul
iret
lods
icebp
jo
fistpll
int3
dec
sti
xor
or
push
ljmp
fidivrl
cmc
cmp
mov
pop
dec
adc
jmp
shl
mov
pop
sti
pop
mov
xchg
mov
fsub
mov
fisubrs
xorb
or
cmpl
mov
call
pusha
and
inc
enter
mov
cmpsl
add
push
push
xor
incb
xor
loop
add
jp
or
cli
shr
clc
pop
pushf
adc
xor
cli
add
adc
subl
fwait
or
pop
inc
outsb
jno
adc
gs
xchg
das
mov
sub
sbb
inc
jns
jmp
je
adc
sbb
dec
out
push
push
xchg
inc
sbbb
cmp
push
in
subl
adc
push
ljmp
cmp
fcmovne
add
test
add
ret
rorl
dec
and
or
cmp
jle
mov
pop
add
pop
mov
ds
in
mov
xor
pop
repz
xchg
filds
push
mov
insb
inc
sub
stos
xchg
sbb
movsb
loop
push
or
mov
and
mov
hlt
shll
sub
repz
fsts
leave
dec
hlt
mov
jecxz
ret
xchg
lock
out
ljmp
sub
jmp
into
call
imul
add
sbb
jnp
sarl
leave
sahf
inc
xchg
mov
xchg
dec
add
jmp
outsb
loope
pop
mov
aam
mov
test
sti
shlb
not
gs
test
fisubrs
adc
dec
adcl
popl
les
aaa
xchg
jno
cld
bound
xchg
inc
rorb
sbb
lea
repnz
movsb
pop
int3
push
push
cmp
pop
int
mov
jne
adc
pop
je
dec
in
push
mov
rcr
xlat
jo
aad
mov
mov
push
adc
loop
dec
push
inc
or
test
push
cld
jbe
mov
and
pop
inc
xchg
int
nop
jno
ret
push
or
mov
js
shl
outsb
jae
imul
rorl
mov
stos
xchg
movsl
cmpsl
jnp
outsb
push
or
mov
or
dec
push
mov
aam
call
loopne
dec
pop
add
decl
xorl
in
mov
pop
pop
inc
aaa
xor
mov
push
pop
testl
call
xor
cmp
roll
repz
test
int
les
mov
stos
out
jp
imul
mov
dec
jb
scas
inc
lods
adc
pop
je
rcrb
mov
add
and
cli
int
sahf
cld
jb
call
dec
std
mov
mov
xchg
lds
xlat
ss
push
repz
bound
dec
cmp
inc
mov
inc
aad
in
adc
aas
push
cmp
jg
icebp
add
inc
stos
arpl
sub
lea
jmp
cltd
jo
loop
xchg
pusha
cmp
nop
nop
inc
cmp
inc
scas
sub
mov
lret
mov
rcl
lret
or
adc
test
mov
push
lods
in
test
shrl
sub
add
in
es
mov
out
push
jp
jecxz
fwait
lea
cmpsl
mov
loope
xchg
lea
cltd
mov
add
xchg
fs
xchg
mov
sub
and
pop
leave
mov
cwtl
dec
and
je
jl
ja
pmulhw
dec
inc
aas
ret
hlt
xlat
or
cmp
xchg
ds
xchg
pushf
fbld
nop
mov
sbb
adc
pop
mov
pop
push
movsb
xchg
repz
aaa
outsb
dec
or
and
xor
aam
pop
mov
ljmp
sub
dec
push
adc
repnz
insb
sub
and
fimull
cli
inc
test
and
imul
bound
xor
rclb
adcb
sbb
xor
pop
lods
jnp
sbbl
mov
xchg
fs
aas
add
js
repz
std
outsb
mov
mov
sub
outsl
cmp
inc
fidivs
scas
outsl
push
jb
outsb
add
mov
xorb
loopne
sbb
nop
scas
mov
stos
cmp
sbb
jo
jge
cmpsl
push
add
push
mov
inc
pop
out
sbb
jo
scas
in
and
nop
mov
fdivr
xchg
add
xor
fistps
in
addb
pusha
jecxz
jecxz
sub
call
cltd
mov
jp
shll
or
gs
ja
sbbl
xchg
inc
adc
jnp
push
lds
jne
push
les
xor
mov
pop
dec
push
push
cmpb
outsl
cmp
cltd
dec
movsl
adc
xlat
push
add
xor
mov
lods
jl
and
mov
pop
xor
add
imul
cmc
adc
insb
mov
scas
leave
sbb
mov
xchg
stos
aas
rcl
movsb
std
push
stos
jmp
add
adc
clc
sub
push
imul
and
icebp
scas
xchg
mov
ss
int
stos
pop
roll
iret
cmp
mov
sbb
loopne
cld
test
sti
push
xchg
or
gs
out
cmp
movsl
out
insl
xchg
pusha
lret
and
sbb
xchg
movsb
mov
jno
or
clc
or
push
stos
jb
aas
add
push
mov
scas
in
xor
insl
xchg
sbb
lahf
push
pop
cld
outsb
and
int
mov
sarl
loop
roll
fs
mov
dec
loope
adc
dec
add
push
inc
fwait
jl
fldenv
popf
mov
xchg
add
add
scas
test
adc
loop
xor
push
pop
pcmpeqw
jmp
sub
lea
dec
mov
aam
pop
xchg
jno
jnp
mov
movsl
ret
popf
into
and
mov
imull
xchg
shlb
sti
cs
fs
divl
pop
mov
sbb
imul
jo
mov
pop
aad
jns
js
pop
mov
stos
and
push
add
mov
lods
mov
imul
push
cmpl
lret
pop
pop
cwtl
in
incb
data16
nop
out
call
xchg
or
cmp
mov
add
es
cld
outsb
sti
sbb
call
pusha
push
mov
lea
sub
adc
sbb
mov
adc
jg
mov
mov
jno
stos
mov
inc
inc
inc
inc
dec
push
rcl
jp
out
aaa
clc
cli
mov
jle
loope
sub
adc
xlat
push
aaa
out
or
rcr
fsubrl
adc
cwtl
call
and
dec
mov
jo
mov
rclb
jmp
cmpsb
adc
add
decb
stos
mov
pushf
mov
adc
cmp
frstor
pop
mov
or
aas
in
jg
or
jo
and
out
push
or
mov
cltd
jns
stc
sbb
stos
xor
adc
push
jecxz
mov
test
sbb
jp
add
cli
push
mov
mov
fwait
push
mov
ficoms
in
fdivs
mov
and
scas
mov
lcall
outsb
xor
cmp
sti
mov
es
frndint
test
or
adc
bnd
add
arpl
xor
dec
mov
filds
fs
dec
jno
dec
xor
std
xchg
es
loope
aas
xor
test
sub
arpl
sub
inc
mov
popf
xchg
cmp
pop
es
push
mov
outsb
xor
push
dec
das
mov
and
lds
jne
test
mov
push
and
jo
cmp
jno
fistpl
test
adc
scas
sahf
lahf
popl
mov
cli
add
mov
leave
mov
mov
xchg
pop
jecxz
jb
loop
sbb
test
xlat
daa
mov
pushf
mov
jno
fstpl
pusha
or
push
clc
scas
adc
call
push
mov
jno
jae
mov
lock
dec
hlt
ljmp
in
xor
arpl
cmc
out
in
dec
lret
or
fxch
push
push
in
ds
mov
and
stos
insl
mov
leave
fistpll
lret
aad
sub
cmp
out
xchg
leave
enter
jl
das
add
dec
js
push
ret
leave
push
mov
idivb
push
xchg
inc
call
mov
popf
dec
addr16
inc
ja
je
jae
mov
inc
out
into
adc
xchg
adc
les
xor
xchg
sub
mov
cmp
push
inc
ffree
cs
daa
enter
push
out
add
mov
xchg
fcmovnbe
and
xor
fisttpl
aaa
xchg
jmp
sub
push
mov
pop
sbb
mov
repz
jmp
cltd
fwait
jg
push
dec
or
jge
mov
out
jae
sbb
mov
mov
cmp
pushf
dec
stos
mov
js
dec
or
sub
dec
imul
cltd
jp
xchg
pop
or
push
mov
cli
adc
dec
mov
xchg
loopne
das
pop
in
icebp
inc
dec
adc
int3
int3
cld
ja
adc
sahf
pop
outsl
jo
addr16
inc
mov
out
decb
cmp
sbb
loope
dec
jns
rcll
push
int3
adc
lret
mov
xor
out
cs
sbb
xor
xchg
int
insl
cld
jp
push
jl
movsl
or
sbb
stos
xor
or
out
lret
repz
add
jp
jns
mov
ficoml
push
cmpsl
test
push
adc
jb
or
clc
pop
lret
and
push
cmc
cmpsl
out
inc
or
mov
jle
inc
lods
mov
ret
call
jbe
fwait
sar
cltd
divl
push
ja
mov
test
and
dec
shlb
mov
sbb
pop
fnstenv
pop
lret
mov
mov
mov
or
fmull
repnz
dec
sub
sahf
cmp
ret
jle
xchg
pushf
dec
mov
pop
pop
pop
pop
pop
rolb
xchg
daa
je
push
fwait
gs
test
pop
inc
int
loop
seta
loopne
int
pop
lods
leave
int
mov
outsl
lds
divb
add
inc
push
rcr
dec
inc
cmpsb
inc
xchg
push
notb
enter
adc
mov
pop
add
mov
xchg
outsl
mov
ret
pop
lea
jb
jae
rcrl
push
int3
dec
das
inc
std
adc
popl
ljmp
pushf
push
cltd
add
mov
inc
push
mov
pop
sbb
push
lds
jmp
mov
arpl
mov
es
or
scas
mov
mov
push
jo
lock
and
cmpsb
ret
aas
inc
cmp
sbb
push
inc
xchg
cmc
incl
sbb
mov
aaa
mov
dec
gs
pop
popa
out
push
lahf
or
das
ficompl
and
fiadds
add
xchg
loope
scas
js
int3
imull
sbb
sti
mov
cmpsl
sub
mov
in
jle
add
call
push
mov
mov
mov
adc
fnstenv
dec
inc
jnp
inc
roll
jmp
js
out
cmp
add
roll
xchg
inc
out
loope
lcall
jo
xlat
enter
add
mov
cmp
scas
jno
int3
imul
push
pop
ds
dec
fdiv
jle
cmpsb
adc
repnz
pop
movsb
jbe
fnstcw
push
sub
mov
test
ljmp
ljmp
stos
jae
pop
daa
sub
dec
jbe
push
mov
les
xchg
out
or
and
in
inc
nop
in
loop
jmp
or
jp
insb
sahf
in
pop
cmpsl
xorb
xor
pop
outsb
xchg
call
mov
jae
mov
jbe
subl
mov
imul
test
pop
xor
dec
aam
mov
dec
jecxz
movsb
or
insl
mov
lcall
fs
pop
mov
and
cs
push
jno
xchg
das
leave
inc
lret
divb
cmpsl
add
xchg
jne
loopne
push
xor
aas
loop
cli
xchg
out
sbb
mov
pop
scas
xchg
cld
mov
mov
xor
jb
push
mov
sbb
mov
scas
mov
mov
aad
add
lock
sub
push
inc
sahf
or
js
jno
push
jo
imul
adc
inc
stos
fcoms
jg
not
dec
xchg
hlt
mov
and
jl
adc
ljmp
mov
lea
dec
popf
jae
insl
push
mov
xor
lds
push
sbb
xchg
dec
cmpsb
es
in
inc
test
movsb
jne
or
mov
cmpsl
mull
xchg
xchg
aad
into
gs
sti
inc
or
jns
adc
mov
arpl
xor
rdtsc
jle
dec
sbb
inc
sbb
jo
jle
mov
mov
push
outsl
pop
push
add
dec
sbb
test
stc
cmp
jno
inc
popf
jns
mov
mov
sbb
mov
sbb
mov
xor
pop
dec
push
or
in
lods
rcrb
or
dec
mov
adc
mov
cmp
cmp
push
inc
cmp
xchg
fs
cmp
test
push
and
mov
std
imul
add
andb
jmp
mov
test
cmpsb
add
shl
jp
jl
mov
stos
arpl
std
or
insl
cmc
inc
add
jmp
add
popf
dec
fildl
add
pop
lds
outsl
xor
push
lahf
mov
pop
in
sti
nop
inc
xchg
adc
or
cltd
test
jmp
jnp
xlat
shlb
mov
sahf
jb
sar
fs
test
xchg
int
inc
sub
aas
add
es
mov
dec
in
dec
hlt
pop
mov
jnp
jb
scas
jl
lods
pop
ljmp
fcmovnb
stc
jns
sbb
mov
fstps
cmp
in
push
adc
push
shrb
sub
rcr
mulb
inc
mov
sahf
movsl
sbb
loop
mov
xlat
xchg
leave
repnz
out
xchg
lret
in
and
jle
mov
rcl
pop
cmpsl
push
adc
loope
xor
and
push
cmp
xor
mov
mov
js
lcall
jne
add
inc
dec
xor
mov
xchg
mov
mov
std
xchg
dec
and
mov
xor
jmp
xchg
dec
out
push
stos
pusha
sbb
aaa
dec
fs
pop
xor
mov
cld
sbb
inc
test
xchg
push
test
jno
cmpsb
std
outsb
or
scas
cs
testb
mov
cmp
scas
xchg
das
lds
sub
pop
push
pop
stos
xor
movsl
sub
pop
push
xor
and
scas
lcall
jle
orb
mov
aas
sbbl
ficomps
test
jp
push
pop
int
mov
jl
cmp
insb
nop
sbb
scas
pop
rcr
inc
jnp
insl
out
pop
lds
inc
sub
mov
mov
sbb
out
pop
adc
fisubrs
notl
in
dec
movl
out
pop
lods
sub
test
lods
push
lahf
mov
dec
loopne
jb
jne
add
out
movsl
sbb
pop
aas
mov
add
mov
fadds
inc
add
mov
jge
xor
fcmovbe
jmp
pop
ljmp
call
jmp
movsb
cltd
push
push
jns
test
scas
push
pop
or
rcll
in
outsb
lods
cld
dec
outsl
fwait
testl
cmovg
outsb
repz
pop
out
testl
jg
insl
inc
adc
jg
sub
jge
push
inc
dec
sub
negb
cwtl
rolb
jge
push
mov
lret
or
into
sbb
cmpsl
sub
imul
cltd
add
das
rorl
rcrl
xor
lret
imul
pop
adc
mov
gs
test
rorl
ret
nop
adc
scas
cmp
inc
mov
mov
jg
mov
loope
nop
push
cs
mov
popf
mov
xchg
or
cmp
pushf
data16
inc
pop
fcom
imul
push
cmp
pusha
xor
jnp
pop
jg
nop
sub
bound
mov
xor
js
repz
and
push
scas
add
cwtl
adc
ljmp
into
fsubs
int3
rcrl
lds
outsb
cwtl
push
mov
popa
scas
fdivrl
into
cmp
dec
or
adc
mov
loop
add
fcmovnb
push
mov
adc
lret
shll
ficompl
pusha
dec
pop
adc
add
adc
xchg
pop
cmpsl
push
and
jge
loopew
dec
in
pop
pop
addr16
aas
mov
das
jmp
xor
or
rcrl
dec
fcoml
jae
aas
adc
sti
je
gs
add
sarb
imul
push
test
test
xchg
rolb
sub
out
je
iret
mov
negl
inc
cmp
mov
jp
rol
pushf
and
mov
sti
or
je
push
sub
rcrb
lcall
mov
push
test
jne
push
cmp
fldl
xchg
stos
and
test
test
lods
pushf
lds
pop
in
mov
pop
out
adc
les
cmp
pop
sbb
into
outsl
sub
add
cmc
in
cmp
jl
mov
sbb
jp
sub
cmpsb
lahf
aam
popf
or
int3
loopne
pusha
add
out
roll
outsb
mov
sub
cld
mov
inc
fwait
hlt
mov
imul
sbb
xchg
movb
int3
mov
mov
xchg
cmp
sbb
pushl
aaa
sub
cmp
call
pop
bound
lds
addb
push
icebp
sub
lcall
stc
sub
mov
sub
out
fst
repnz
jl
sbb
enter
aad
adc
test
pushf
xchg
dec
pop
mov
inc
push
add
pop
je
cmp
or
lods
cld
mov
inc
popf
lock
pop
pop
xchg
xor
into
dec
ret
mov
insl
mov
orb
daa
das
dec
shlb
loopne
ss
flds
and
xor
lret
out
sti
pop
jb
ret
bound
dec
mov
inc
push
jmp
nop
stos
add
lods
das
jno
lret
xchg
sub
int3
aad
scas
jo
push
mov
mov
cmp
ret
cmpsl
push
mov
add
add
add
movsb
cmp
push
inc
and
mov
xchg
inc
ljmp
rcl
sub
and
fsubrl
sbb
divps
adc
mov
pop
mov
repnz
and
mov
test
lock
rcrb
ja
stos
sbb
or
dec
cmp
pop
clc
ljmp
lret
sub
sub
xor
sub
divl
jno
mov
adc
jecxz
xchg
add
cmp
pop
ja
xor
aaa
and
cwtl
pusha
rcll
push
mov
jne
decl
push
fdivrl
lret
gs
sub
and
mov
stos
or
push
fmul
sbb
cmp
inc
pushf
sti
pop
hlt
and
sub
and
scas
sbb
jl
jb
xor
and
test
xor
sub
mov
lret
sahf
pop
inc
pop
loope
push
mov
inc
xor
xor
loop
insb
ret
push
adc
aam
shlb
cmp
hlt
jg
inc
mov
lret
out
in
dec
test
jecxz
sub
out
cs
and
lock
bound
sub
mov
sub
xchg
stos
sbb
dec
sbb
pop
jne
lret
inc
cs
mov
leave
sbbb
adc
dec
lock
mov
adc
jmp
dec
ja
xor
sbb
and
test
push
inc
mov
xchg
xor
add
ss
inc
cmp
std
addr16
sahf
dec
push
push
divb
in
push
or
cmpsb
dec
mull
push
mov
add
xor
subb
nop
movsl
sub
aam
pushf
dec
cmp
addr16
pop
fdivrl
gs
xlat
pop
cmpsb
add
fdivrs
xor
data16
mov
loope
mov
push
dec
leave
pop
jo
push
mov
or
jne,pt
lahf
xchg
and
loop
imul
dec
mov
jge
jnp
and
int
dec
jb
xor
outsl
repnz
cmp
push
int
pop
or
std
iret
mov
or
and
pop
dec
shll
inc
jae
cli
sbb
enter
pop
nop
rolb
add
xchg
cmp
push
jb
hlt
mov
xchg
andl
adc
insb
add
cmp
mov
rclb
fisttpl
sti
pushf
inc
rcl
lods
fisubl
cs
into
sub
rcrl
test
jl
es
lds
pop
aas
mov
pusha
clc
pop
mov
les
lods
pop
cli
cmp
cmc
out
in
call
lcall
gs
stos
cltd
out
imul
adc
cmpsl
xchg
add
rorl
out
std
push
and
sbb
jae
loope,pt
lods
adc
daa
loopne
rclb
lock
inc
add
xor
pop
dec
jae
mov
add
and
pop
mov
scas
rol
lcall
jo
adc
xor
cmp
jno
jmp
inc
cmc
jb
enter
inc
test
push
call
fldcw
js
push
or
pop
fcoml
mov
push
push
lods
sbb
sub
xor
dec
mov
pop
arpl
mov
aas
fstl
loop
cmpsb
popf
push
sahf
mov
adc
push
test
mov
cs
outsl
iret
inc
push
mov
inc
or
xor
shlb
std
pop
sti
lods
cs
adc
popa
pushf
xchg
jmp
leave
mov
jb
loope
and
push
fistpl
inc
or
mov
lods
xchg
push
and
outsl
pusha
xor
popa
popf
stc
ret
add
test
xchg
into
fsubrl
sti
sbb
mov
lahf
inc
add
and
inc
lret
and
ja
aam
ret
notb
nop
repz
call
in
inc
sub
insb
pop
sub
and
fdivl
sbb
sahf
pop
inc
xor
outsb
sbb
xchg
push
fbstp
test
or
enter
addb
scas
test
xlat
cmp
fs
mov
or
call
cmp
movsb
xchg
mov
ss
test
sub
add
cltd
ss
dec
dec
stos
mov
dec
dec
dec
mov
pop
out
movsb
cmp
push
jne
jne
sub
inc
jns
push
sahf
xor
sbb
sub
mov
push
ja
push
gs
mov
and
sbb
fxch
push
cld
sub
jne
ljmp
mov
sub
int
xchg
mov
popf
xchg
int
fs
repz
mov
mov
movsl
pop
test
sarb
jo
lret
les
ss
sub
dec
fistpl
imul
inc
and
enterw
and
jp
pop
in
fsubrl
lretw
lods
aad
dec
jmp
xchg
inc
xor
push
daa
jl
push
loopne
jle
push
push
jb
test
or
nop
adc
mov
add
cmc
xchg
inc
repnz
push
xchg
aas
lds
mov
push
xchg
jle
jns
jb
neg
rcl
xorb
faddp
push
shrb
leave
inc
and
imul
sub
scas
xchg
mov
push
pop
sbb
popf
sub
loope
dec
iret
or
ret
add
mov
outsl
push
out
jmp
xchg
mov
aas
dec
jg
insl
inc
pop
test
pop
cltd
lret
add
ljmp
ljmp
mov
or
mov
mov
shlb
xchg
imulb
mov
stos
sbb
mov
and
cmp
fldcw
dec
sarl
test
adc
sbb
pop
fdivs
ret
loope
push
shrl
sub
xchg
xchg
jno
adc
pop
xlat
pop
js
fisubs
dec
shll
insl
mov
aaa
mov
movsb
in
jo
cwtl
rclb
orl
test
mov
std
jb
jp
inc
nop
xchg
xor
imul
inc
push
xchg
push
mov
lret
mov
xor
inc
mov
cwtl
fildl
mov
cmp
call
adc
imul
jo
sti
leave
js
out
cltd
js
es
add
das
inc
xor
fbstp
push
fildll
les
lds
and
sbb
lcall
xchg
adc
mov
int3
out
xchg
das
and
cwtl
adc
pop
push
stos
jno
pop
add
mov
add
mov
mov
cli
cltd
fcompl
adc
scas
add
aaa
xor
es
rolb
xchg
pop
jb
bound
adc
push
or
es
pop
arpl
addb
shlb
outsb
rolb
xor
iret
lds
push
roll
mov
xchg
insb
and
mov
mov
leave
stos
addb
push
xacquire
je
in
sti
lock
mov
xor
aaa
mov
cmp
sbb
js
push
xchg
dec
lret
leave
call
push
in
cli
jmp
or
iret
jg
push
mov
fdivrl
loope
push
push
fldlg2
leave
out
ljmp
in
adc
mov
cs
ljmp
fcoml
fwait
loop
pop
and
push
cmp
repz
jle
roll
fsubrs
in
faddl
iret
lret
mov
std
lea
mov
sti
ds
ret
pop
notl
ljmp
aas
cmc
cmp
push
xor
jne
or
pop
cmp
lahf
jo
dec
mov
stos
xor
into
and
out
rorb
cld
int
sub
sbb
pop
add
std
nop
or
sub
cmpsb
mov
mov
cmpsl
xchg
lods
jl
mov
hlt
in
sub
xor
mov
into
inc
sbb
cmp
push
jmp
cmp
repnz
jmp
jnp
xor
cli
cmp
mov
jbe
and
add
lahf
xchg
cli
jno
adc
ror
les
js
idivl
lcall
fnsave
js
andl
cmp
pop
nop
push
adcl
adc
lods
push
int
movl
adc
testl
mov
dec
sbb
mul
ret
ja
popa
jb
pop
mov
push
xchg
in
sub
out
jge
loope
es
push
aad
roll
loop
push
dec
lcall
dec
push
sub
mov
pop
mov
mov
pop
popf
repnz
xchg
push
push
mov
lcall
fstpt
xchg
and
pop
xor
dec
daa
xchg
mov
fildl
gs
xchg
repz
inc
jne
loopne
dec
adc
xlat
movsl
inc
cmpsb
mov
repnz
jle
fistl
ljmp
cmpsb
inc
add
dec
jb
xlat
xorb
mov
add
or
insb
rcr
xor
adc
stos
lret
cmpsl
mov
rolb
pusha
dec
movsl
and
xchg
int3
mov
xchg
mov
xor
cmp
addl
inc
lods
js
outsb
in
mov
aaa
out
add
mull
mov
enter
mov
sahf
push
mov
call
stos
jns
lock
ja
loop
xor
xor
insl
mov
push
inc
cli
jmp
cmpsb
mov
cwtl
adc
nop
arpl
stos
cmp
xor
xchg
inc
add
inc
lret
cld
mov
jge
jnp
push
ss
and
adc
js
or
adc
fucom
cmp
fiaddl
sarb
xor
sahf
mov
out
out
out
xor
cwtl
or
cmovb
fsubr
mov
orb
pop
mov
mov
fistps
jbe
mov
xor
push
mulb
cld
cmpsb
stos
fistps
dec
sbb
out
add
push
jmp
adc
cwtl
push
and
or
neg
mov
inc
push
test
pop
pusha
mov
mov
and
imul
and
out
jle
into
mov
sbb
mov
nop
push
push
mov
ss
movsb
stc
or
sub
xchg
iret
bound
pop
inc
cmp
mov
pop
std
pop
push
movsl
lea
and
dec
mov
and
loop
mov
pop
mov
adc
mov
sti
xorb
pop
scas
push
sarb
push
into
mov
push
jmp
jge
inc
cli
imul
sbb
bnd
push
inc
hlt
xor
stos
insb
ljmp
imul
or
cmpsb
xor
mov
jo
sahf
cld
sbb
fistps
imul
lds
or
and
sbb
sub
dec
mov
stc
push
mov
in
jg
addl
and
shlb
loopne
fstl
or
xor
jmp
mov
pop
out
pop
sbb
add
aaa
leave
mov
xchg
adc
or
shll
clc
jecxz
movsl
mov
stos
mov
cwtl
out
stc
pusha
pop
call
jecxz
mov
pop
imull
inc
repnz
cli
mov
sahf
in
inc
cmpsb
aam
mov
sbb
xor
mov
cmp
into
add
xlat
outsl
lods
cmp
adc
ret
addr16
pushf
pop
add
sbb
ljmp
cwtl
fs
call
push
pop
add
add
and
jge
inc
sub
dec
sub
push
loop
roll
rclb
aaa
xor
adc
fs
mov
mov
loope
mov
arpl
repnz
repnz
lods
dec
lcall
mov
jns
rcrl
test
or
jns
mov
mov
sbb
rorl
lods
adc
fs
mov
gs
out
ret
mov
mov
adc
sub
mov
push
ljmp
sbb
mov
mov
fwait
pop
jns
mov
push
ja
cmp
inc
sbb
pop
cmp
mov
stc
cmpsb
pop
jb
pop
mov
int3
mov
hlt
mov
xor
test
pop
mov
fwait
out
pusha
stc
lods
sar
jmp
stos
cld
jmp
sahf
stc
outsb
out
mov
lds
and
out
sahf
xor
out
imul
insb
call
jae
jg
jp,pt
push
ret
dec
gs
test
in
int3
xchg
repz
jle
and
pushl
test
arpl
addb
xchg
add
xchg
cmp
pop
rcll
xor
push
hlt
in
xor
push
ds
push
stos
xchg
das
xchg
ret
adc
ret
aam
mov
or
mov
mov
cmpsb
and
repz
mov
sbb
jl
xor
push
mov
inc
jmp
adc
fadd
into
cmc
pop
adc
sub
push
test
mov
jo
call
cltd
lea
fcmovnu
mov
lcall
das
cmp
push
push
push
loopne
sbb
lods
mov
sbb
js
cmp
pop
or
dec
cmp
inc
mov
push
add
jmp
clc
inc
push
out
cmp
jg
clc
lea
into
sbbb
mov
fists
mov
adc
sti
xchg
cmp
bound
push
mov
adc
mov
push
sbb
je
dec
aas
lods
xor
std
xchg
mov
roll
push
sahf
sbb
adc
mov
std
scas
jns
out
xor
shll
sub
push
xlat
xor
repnz
mov
fnstenv
jle
sub
enter
push
rolb
andl
cwtl
jno
mov
cmpsl
push
inc
cmc
ja
lea
stos
adc
sub
push
lret
and
lds
pop
mov
sbb
cmpsb
daa
pushf
outsb
cmpsl
roll
sbb
clc
xchg
iret
xchg
lahf
xor
pop
sbb
movsl
add
mov
mov
mov
inc
jne
out
dec
xchg
std
jecxz
fldl
cmpsb
push
add
clc
loopne
and
daa
fidivs
rolb
push
mov
add
push
add
jb
imul
pop
repnz
lea
sub
pushl
daa
xchg
push
push
push
cmpb
imul
mov
shlb
in
cli
adc
daa
and
xor
int
cmp
or
fwait
into
test
pusha
adc
ja
mov
cmp
push
hlt
and
icebp
ljmp
iret
and
insl
mov
mov
dec
enter
cmp
lahf
iret
mov
sar
out
pop
sbb
das
mov
loope
cmp
lret
cli
add
inc
cs
inc
jae
mov
sarb
mov
push
std
lahf
mov
lahf
mov
mov
sbb
enter
pop
lcall
and
xchg
jg
dec
dec
cmc
leave
inc
pop
xor
and
sahf
repz
push
cmpsb
fisubl
push
jb
dec
xchg
lret
jae
inc
pop
sbb
lods
dec
cs
adc
jmp
rorb
mov
shll
sbb
mov
jae
adcb
das
push
dec
inc
cmove
jg
cmp
iret
sahf
xchg
bnd
jae
rcrl
jl
cmp
insb
enter
out
rcrl
mov
or
pop
std
daa
out
jg
mov
js
repnz
push
imul
mov
test
popf
insl
jg
pop
ret
mov
fldt
mov
pop
mov
cmp
repnz
inc
ret
mov
negb
xchg
xchg
mov
adc
arpl
sbb
adc
hlt
pop
iret
xchg
and
push
js
push
mov
mov
loope
sbb
jbe
xor
mov
lcall
mov
xorl
sahf
leave
popa
inc
loopne
xchg
sbb
cld
les
int
cwtl
mov
mov
bound
sub
mov
cmp
loope
imul
sub
mov
js
scas
negb
add
nop
push
pop
and
push
mov
dec
jo
or
push
fs
add
sub
clc
mov
repnz
insl
sahf
lahf
pop
and
xlat
les
jp
mov
xlat
sub
popa
pop
push
push
cmp
aaa
not
xchg
jmp
dec
adc
inc
cld
add
stc
ljmp
xor
xor
dec
cmp
lea
xor
scas
and
inc
sbb
cli
sbb
sub
je
mov
mov
sub
out
dec
je
cmp
test
cmp
fsubl
jp
leave
push
mov
fcmovne
leave
adc
mov
mov
xor
mov
adc
ja
sub
pop
test
mov
and
pop
or
movsl
lret
and
mov
cmp
push
repz
fs
jmp
mov
scas
mov
movsb
inc
divl
jo
aad
cmpsb
arpl
mov
xlat
out
aas
xor
push
repz
or
call
mov
nop
add
and
adc
lret
pop
cmc
and
xor
lods
imull
stc
jg
pop
and
ret
movsb
pop
jle
pop
xor
cli
ds
xor
add
fsubs
sub
addb
jo
btr
mov
xorb
sbb
sbb
xor
adc
test
xchg
data16
lods
mov
lea
inc
sahf
icebp
add
cmp
enter
cmp
sti
fdivr
jge
mov
stc
lods
in
hlt
dec
add
sub
jno
sahf
scas
pop
xchg
mov
iret
push
mov
push
push
xchg
xor
jno
stc
jno
adcb
xor
pop
jne
mov
mov
xchg
lods
mov
imul
es
insb
js
call
inc
inc
jb
fimull
loope
mov
repz
cmp
mov
nop
jle
aam
mov
ret
dec
int3
lret
sub
and
mov
add
adc
push
cltd
xor
pushf
imul
add
into
loope
sub
dec
adc
lods
test
js
push
jle
aas
xchg
inc
add
adc
daa
loop
popf
icebp
sub
lock
sub
push
cmp
shl
imul
es
mov
jb
dec
std
xchg
jp
xor
dec
jno
mov
mov
or
movsl
mov
mov
and
jnp
inc
les
inc
push
or
clc
popf
and
push
ret
lea
call
jne
test
inc
out
mov
repz
jg
cli
push
sbb
inc
fwait
push
inc
xchg
outsb
dec
fimuls
xchg
imul
mov
pop
ficoml
mov
or
xor
cmc
xchg
insb
mov
arpl
inc
xchg
insb
in
sub
mov
jae
cltd
push
xor
cmpsl
addl
testb
pop
in
pushf
adc
pop
mov
cld
in
xor
lods
and
xor
inc
js
jo
xor
jl
mov
cld
xchg
mov
jne
adc
and
outsb
insl
push
pop
ljmp
shll
nop
sbb
cwtl
sub
cltd
jle
test
cltd
fadd
push
outsb
frndint
fwait
dec
push
cmp
mull
nop
test
sbb
mov
aas
arpl
rolb
outsl
pop
push
les
add
lret
faddp
repnz
or
jecxz
jbe
das
test
pop
inc
fisubl
sbb
xchg
loopne
js
in
jp
xor
ficomps
sbb
or
push
stos
adc
cld
cwtl
orb
cmpsl
dec
aas
cmp
dec
fcomps
mov
sub
push
addr16
sbb
adc
rorb
cs
sbb
in
mov
ret
xchg
add
mov
loope
mov
jb
call
mov
pop
in
sbb
test
adc
xchg
add
adc
nop
rorl
xor
test
or
movsl
sbb
shll
scas
adcb
sbb
sub
ret
sbb
loope
ja
dec
test
or
jmp
pop
push
push
jno
shl
std
mov
push
cwtl
test
or
imul
pop
pop
loope
mov
fwait
xchg
xchg
or
jbe
into
enter
cmp
ret
push
ret
and
jo
fisubl
lock
mov
jns
mov
mov
subb
push
aad
xor
pop
loopne
pop
cmpsl
fs
jmp
icebp
push
mov
pop
rclb
adc
jmp
push
inc
xor
mov
push
inc
jmp
jmp
jge
int3
and
cmp
cmp
xchg
xchg
lahf
fisubrl
insl
xor
hlt
fisubl
mov
insl
subb
int
fisttpll
in
mov
and
imul
mov
sub
dec
dec
cli
unpcklps
mov
arpl
aaa
nop
sub
mov
lret
nop
outsb
add
ret
or
mov
jl
jno
mov
jae
inc
add
outsl
pop
or
sahf
mov
push
push
movlps
push
sbb
sub
fdiv
cmp
out
mov
cwtl
pusha
fwait
mov
inc
inc
xchg
adc
sbb
div
adc
adc
imul
xorl
jg
inc
jae
aas
jnp
push
cltd
rolb
lock
scas
sub
jp
popf
dec
inc
movsb
stc
lcall
pop
inc
mov
mov
xor
inc
mov
add
jmp
sub
sub
shlb
repz
xlat
int3
rcrl
aad
fdivrp
je
push
shrb
push
xchg
popf
pop
push
xchg
ret
mov
ljmp
xor
int
test
rorl
lock
jle
lcall
roll
cld
rcl
inc
enter
mov
fdivrs
inc
sbb
mov
in
roll
jno
cli
xor
or
je
jl
lret
mov
jnp
pop
or
add
cmp
sub
xor
std
inc
stos
in
sar
pop
xchg
and
push
add
and
jno
xchg
inc
lods
cmp
shrb
por
iret
push
cmp
sbb
dec
rclb
push
les
jmp
cmp
cmp
lods
sub
decb
add
lcall
out
stc
mov
outsl
lcall
popl
or
pop
add
xchg
xchg
xchg
push
mov
movsb
sub
sub
xor
inc
ficomps
and
sub
lea
xor
movsl
jl
les
dec
push
jl
push
rclb
mov
ljmp
js
sbb
add
imul
xchg
pop
pop
addr16
adc
std
imul
sub
mov
mov
repnz
insl
in
fnstcw
mov
and
xor
call
in
js
mov
movsb
pop
inc
stc
arpl
into
sbb
inc
sti
dec
xlat
mov
mov
mov
xchg
and
adc
aad
das
lret
cwtl
mov
idivb
test
in
push
sti
fcoms
int
addr16
lock
adc
adc
aam
add
push
shl
push
ret
repz
mov
cmp
arpl
jnp
jae
and
pop
int
mov
xor
ds
cmpsb
aam
mov
add
call
adcl
sbb
mov
jo
inc
mov
in
or
scas
push
or
mov
mov
insl
mov
cltd
repnz
hlt
imul
inc
push
or
inc
stos
cmc
subb
test
fisubrl
and
jl
ja
std
sahf
mov
adc
jno
add
xchg
cld
dec
outsl
sub
or
pop
mov
scas
std
mov
jl
mov
xchg
jne
iret
or
scas
or
add
test
adc
subb
jle
sti
leave
jns
jno
sti
cmp
sbb
mov
mov
mov
mov
or
jl
and
arpl
mov
pop
popa
push
sbb
sbb
repnz
insb
fimull
push
jl
cmp
sbb
mov
xchg
stc
add
sbb
sbb
aam
ss
cwtl
jp
push
push
call
ljmp
jo
adc
cld
shrb
mov
lcall
icebp
mov
daa
lahf
daa
aad
cmpsb
or
mov
pop
sub
mov
mov
and
out
fistps
adc
inc
rorl
stos
jmp
add
mov
adc
leave
pushf
cld
push
cs
mov
pop
mov
dec
mov
push
test
xchg
dec
inc
mov
xchg
xchg
enter
xor
outsl
mov
subb
sub
cs
jmp
jl
imul
dec
jne
les
scas
pop
dec
or
mov
lret
lock
or
inc
stc
test
test
pop
xchg
push
mull
push
icebp
repnz
addb
cs
inc
imul
sbb
pop
bound
in
cmpsl
bound
push
mov
sub
sbb
scas
mov
and
fcmovu
cld
in
dec
inc
sbb
mov
imul
loop
cmp
andl
xchg
lahf
push
mov
in
pandn
imulb
pop
shrb
jg
push
mov
adc
dec
inc
cld
xor
cmp
or
mov
pop
fisttpll
adc
mov
fnstsw
int3
inc
add
enter
out
push
lock
jle
lahf
add
popf
pusha
rcrb
jnp
xchg
mov
stc
adc
push
ret
es
add
cltd
cmp
popf
gs
insb
sbb
mov
sbb
sub
leave
jp
pushl
dec
loop
jae
mov
or
mov
orl
test
xchg
fs
iret
adc
cmp
popa
mov
out
pushf
in
insl
cmpl
inc
sub
cmp
sbb
movl
inc
fwait
inc
lcall
mov
pop
pop
cmp
fildl
pop
sbb
add
or
sbb
push
jge
arpl
inc
iret
xlat
sbb
insl
shlb
dec
rolb
push
pop
mov
jmp
jecxz
icebp
stos
xor
xor
hlt
stos
cwtl
sub
sarb
jne
jno
pop
insl
or
out
scas
subl
stos
xchg
cli
and
rolb
out
add
push
sub
out
and
fildl
dec
test
dec
pop
test
mov
cmpsl
jns
movsl
or
ret
push
push
dec
mov
push
adcl
push
in
push
push
mov
xchg
and
push
in
pop
popf
loop
push
xor
pop
shl
out
nop
push
cld
fmuls
and
cs
jae
xchg
or
pop
cmp
cmp
mov
aad
mov
xchg
or
adc
mov
sti
pop
lahf
mov
push
arpl
or
icebp
popf
cli
or
or
inc
mov
inc
xchg
sub
ret
sar
shlb
adc
mov
adcl
xor
mov
mov
in
fcmovnu
mov
negb
stos
pand
inc
xor
sub
loopne
jbe
sbb
cmpl
insl
mov
push
pop
xor
rorb
cmp
jnp
and
add
mov
dec
sub
push
ficoms
sbb
pushf
mov
shrl
loope
pop
fcmovne
and
in
lds
and
sub
inc
cmpsl
stos
lods
jno
out
cmp
pop
pusha
pop
subb
fiadds
push
mov
push
jae
inc
cmp
testl
push
loopne
inc
mov
dec
in
addr16
jge
mov
sub
js
xchg
clc
jecxz
inc
mov
mov
imul
mov
pop
pop
pusha
add
shr
movsl
xchg
mov
push
outsb
aad
js
in
pushf
and
cs
jno
pop
mov
mov
popa
cmpsb
jl
xchg
jae
lock
lahf
pop
shll
mov
sysexit
insl
pushf
sbb
arpl
fadd
xchg
jbe
gs
pop
out
sub
out
out
push
jg
cmp
lock
idivl
pusha
loope
out
push
imul
loop
jecxz
and
pop
incl
cld
dec
lahf
ficompl
xchg
popa
lods
movsb
subl
push
bnd
cld
aas
ret
addr16
push
test
and
or
and
sbb
or
jg
insb
ret
lods
mov
lea
decl
cmp
or
xor
je
jp
adc
out
or
lds
fcoms
sbb
cld
jns
dec
cwtl
xchg
loop
loope
ss
inc
pushf
inc
std
jmp
outsl
add
jae
scas
push
xchg
les
repnz
jo
inc
mov
loope
adc
jbe
xlat
xchg
shr
sete
cmp
repnz
notl
or
and
divb
repz
leave
cli
loope
movsb
lea
test
xor
add
jo
add
test
loopne
dec
and
movsb
inc
inc
rcrl
cltd
and
cltd
insl
aam
xor
dec
mov
das
xchg
out
inc
mov
in
test
aad
scas
sarl
pop
shlb
std
sti
bound
adc
les
loope
xchg
leave
xchg
xchg
pop
sbb
push
nop
orl
repnz
push
push
sbb
loope
out
sbb
jmp
mov
jg
cli
loop
in
lcall
jns
arpl
divl
inc
add
scas
sbb
mov
adc
xchg
lcall
ljmp
dec
mov
pusha
mov
mov
inc
add
cmp
les
adc
adc
push
mov
mov
push
add
inc
repz
adc
inc
xchg
fcompl
sbb
int
into
or
mov
in
movsl
fwait
rorl
or
mov
iret
jle
or
jp
fs
ljmp
add
sbb
jmp
sbb
pop
jne
sbb
lcall
aam
test
xor
mov
pop
push
in
jl
xor
and
push
sub
sbb
pop
xor
xor
dec
dec
sbb
cmp
fwait
xor
pop
stc
scas
inc
or
int3
cmp
outsb
mov
or
or
jbe
xchg
and
popw
xor
cmp
in
stos
inc
subl
xchg
inc
push
cmp
and
xchg
fnstsw
push
dec
xchg
outsl
add
push
adc
xor
push
and
cmc
pop
imul
loope
fwait
fstpt
adc
sbb
push
movsb
and
jnp,pn
xorb
and
bound
ret
loop
ret
push
shrb
pushl
jp
xlat
xor
mov
sub
loopne
add
fiadds
push
popa
outsl
mov
mov
pop
xor
sti
ss
sub
int
loop
out
pop
stc
xor
inc
daa
mov
cmc
pusha
mov
or
das
in
je
frstor
fwait
or
out
xchg
and
test
mov
add
fs
ret
mov
push
stos
loop
out
loop
mov
cltd
jg
mov
inc
mov
mov
jb
mov
mov
inc
or
ss
mov
push
nop
sbb
dec
inc
dec
ja
inc
pop
and
in
mov
or
sarb
mov
repz
jle
mov
sbb
clc
jecxz
jge
xchg
les
jns
sbb
push
shll
jle
jo
rclb
adc
inc
sahf
icebp
pop
mov
dec
inc
inc
push
jmp
out
push
mov
pop
pop
sub
inc
mov
sub
adc
dec
dec
mov
ret
jp
sub
and
push
loopnew
and
mov
enter
out
out
dec
lods
pusha
sub
enter
add
jmp
xchg
repnz
ja
aas
add
mov
and
cwtl
cmp
mov
mov
push
pushl
adc
pop
mov
pop
rorb
das
cmpsl
in
and
jecxz
or
fildll
lcall
dec
adc
fidivrl
roll
xor
xchg
out
enter
sbb
and
pushf
xchg
out
lcall
popa
and
scas
lea
mov
add
clc
out
mov
loop
adc
dec
lock
pop
fcomip
loope
mov
fdivs
clc
adc
push
int
test
push
mov
inc
cmp
xor
mov
add
js
push
stos
dec
aaa
jne
inc
mov
xchg
inc
pusha
sub
jp
loope
cmp
sub
xchg
dec
add
cmc
mov
inc
cmp
popa
ficoms
push
cmpsb
cmpsb
cli
dec
lods
fimull
fs
and
in
into
add
ss
faddl
mov
cmc
subb
movsl
out
shl
mov
mov
icebp
popl
sub
ljmp
cmc
les
mov
sbb
mov
negb
nop
mov
cmp
test
insl
push
arpl
jg
in
mov
jmp
mov
ds
mov
cld
sahf
pusha
cmp
xchg
adc
int3
shl
xor
adc
jl
stos
mov
push
mov
cld
mov
stc
ret
divb
dec
test
jae
fcompl
mov
int3
xchg
clc
aaa
xchg
out
dec
lock
ss
rorl
cmp
xchg
sbb
mov
adc
mov
int
filds
xor
roll
dec
call
loope
mov
jmp
jg
std
mov
mov
ja
fwait
pop
clc
das
popf
and
movsb
cmp
xchg
xor
jnp
pop
add
iret
push
xchg
cmp
fiadds
gs
nop
in
and
cmp
stos
call
sbb
roll
inc
sbb
or
ss
fcmovb
mov
cwtl
cmpsl
jmp
decl
por
gs
push
inc
inc
lret
fsubrl
and
arpl
cli
push
insb
and
out
test
andl
dec
fs
pushl
clc
fnsave
ret
mov
xor
adc
jmp
inc
dec
sti
test
jg
lahf
sbb
rcl
outsb
fcomi
popf
enter
ss
inc
mov
addb
inc
jns
mov
in
lea
clc
sbb
scas
or
loope
pop
stc
orl
jg
push
gs
sbb
xchg
sbb
xchg
push
fwait
xchg
mov
scas
int3
cmp
pusha
push
push
fldenv
push
inc
sub
mov
rcr
inc
cmc
xchg
xchg
out
and
jo
rcll
cmp
std
rcl
imul
mov
aas
mov
adc
xlat
jbe
arpl
push
and
test
test
outsl
push
in
mov
sbb
mov
sub
ds
int3
jp
jbe
dec
sahf
inc
test
mov
lahf
decl
xor
es
or
push
sarb
push
aad
in
inc
sarb
add
xor
pop
pop
aad
imul
lea
xor
cmpsb
mov
sub
push
test
cmp
movsb
in
out
push
sbb
cmp
inc
jl
push
xor
mov
daa
dec
pop
in
or
xchg
testl
cmp
dec
push
adc
shlb
addr16
mov
pop
jne
dec
cmp
inc
cld
xor
dec
mov
popa
or
ljmp
test
xlat
leave
popa
popf
subb
and
inc
dec
pop
sahf
ret
sbb
nop
xchg
add
cmc
sub
arpl
jmp
icebp
cmp
or
sti
aaa
mov
push
cmp
test
pop
jp
jns
inc
and
lods
inc
dec
mov
push
mov
pop
rcrl
mov
outsb
sub
sbb
fs
mov
out
sbb
push
mull
mov
xchg
and
imul
push
and
jle
mov
cmpsb
xchg
mov
in
rclb
adc
dec
mov
mov
mov
outsb
xchg
dec
xor
or
mov
push
daa
stos
sub
xchg
jg
cmp
adc
inc
out
push
xor
mov
pop
fld
xor
orb
aad
jle
neg
insl
jg
in
inc
sti
push
data16
mov
movsl
aam
pop
jnp
and
andb
jbe
and
js
mov
rcl
sbb
xchg
and
inc
sub
mov
data16
inc
bswap
aaa
jp
and
dec
mov
add
sti
cs
cs
loopne
mov
or
jbe
mov
xchg
push
stos
out
push
sub
js
out
aam
add
call
arpl
pop
xor
adc
cmp
dec
fstpt
xchg
pushf
iret
dec
push
cmpsb
jge
popf
cld
aas
lea
cwtl
arpl
push
mov
aam
push
scas
jl
jge
mov
push
psadbw
jl
jns
inc
in
push
lret
add
lret
xchg
add
dec
dec
mov
push
lret
test
lds
add
outsl
adc
stc
push
mov
ficompl
adc
into
add
mov
add
jo
scas
rorb
jg
cwtl
mov
ret
mulb
mov
pop
xor
data16
pop
cmp
and
mov
arpl
and
dec
xor
leave
imul
test
mov
fwait
push
inc
ror
icebp
loop
sti
outsb
jne
push
arpl
mov
js
cmp
push
cli
in
inc
in
cmpsl
inc
sahf
ja
and
cmpsl
jecxz
test
fadds
in
xlat
imul
in
mov
dec
add
mov
hlt
add
aam
mov
add
xchg
shr
and
xchg
fprem1
fnstsw
insl
fisubrl
iret
ss
mov
iret
adc
cli
xlat
stc
mov
sub
pop
fidivl
inc
rcrl
fcoml
sahf
aad
push
mov
popf
cmp
sub
or
adc
fwait
mov
add
idiv
pop
dec
push
xor
dec
sub
sbb
aam
or
inc
inc
insb
lods
daa
jno
fldt
cwtl
fdiv
pop
dec
jp
mov
push
push
sbb
lods
dec
dec
dec
aas
out
mov
add
dec
pop
sub
sbb
enter
mov
ljmp
lea
stos
jg
push
jmp
sbb
and
cmc
in
arpl
test
jns
jo
scas
sub
mov
hlt
inc
jp
sbb
add
scas
sahf
std
jae
cld
jg
jbe
push
pusha
mov
dec
sbb
mov
push
xlat
sub
icebp
ret
cltd
xchg
jle
cmp
and
test
dec
xchg
jg
mov
test
mov
pop
out
dec
mov
and
loope
das
stos
and
lea
nop
cld
daa
cmpsb
inc
jecxz
lcall
sbb
mov
sub
rcr
xchg
adc
xor
jmp
mov
mov
cmp
xchg
sub
or
inc
cmp
inc
out
mov
pop
lds
xchg
idivb
dec
jbe
hlt
test
sar
fs
or
mov
mov
cmp
cmp
jae
jo
lds
inc
adc
pop
add
add
movsb
imul
or
fs
dec
nop
lds
cmp
xchg
stos
xor
or
scas
xor
ja
xchg
dec
sbb
sarb
jnp
sub
loope
pop
mov
test
outsl
fstp
popf
cltd
xchg
bound
in
ret
inc
pop
movsb
subl
dec
adc
adc
lret
stos
mov
cld
pop
lods
data16
je
cmp
jo
movsl
cmp
mov
adc
jno
loop
andl
pop
jne
sbb
push
or
mov
fstps
testb
into
lock
push
cmpsl
sarb
xchg
xlat
cmp
pop
shlb
mov
mov
or
jl
mov
dec
push
in
inc
lock
add
xor
mov
test
cmpsb
mov
es
and
push
xchg
mov
movsb
test
pop
out
test
aaa
aad
dec
mov
xor
std
cmpsb
jg
mov
inc
out
or
pop
xor
adc
loop
fsubrs
cmp
outsl
dec
inc
sbb
inc
cmp
xor
mov
inc
adc
add
lret
rcll
into
xor
xchg
xchg
xor
pop
lods
pop
cmpsb
jnp
mov
jg
add
dec
aad
in
jmp
lea
pop
imul
xor
and
ds
loopne
movsb
jle
pop
xor
xlat
jne
dec
movsb
sub
inc
mov
mov
dec
aaa
xchg
rorb
mov
xor
sti
icebp
inc
dec
ror
jb
addr16
jb
push
and
inc
inc
and
pop
lods
mov
mov
mov
imul
out
cmp
leave
push
jle
and
aam
add
es
adc
sub
sub
sbb
mov
add
xor
mov
lock
jp
push
sub
leave
or
jno
dec
ret
addr16
adc
outsl
insl
jge
sbb
pop
xor
sbb
mov
outsb
jle
mov
mov
lock
mov
pop
dec
jo
ljmp
mov
mov
add
ljmp
addb
cmp
int
ljmp
mov
mov
jne
stos
or
rol
dec
push
movsb
jmp
movsl
push
jb
pop
femms
scas
mov
scas
cmp
insb
push
in
add
test
cli
lock
pop
cwtl
and
outsl
rcrl
jmp
sbb
gs
out
push
push
cmp
dec
jne
call
sbb
dec
inc
sahf
xor
xor
mov
pop
cmp
ljmp
cmpsl
jle
js
mov
adc
xchg
sub
mov
jbe
call
fisttps
fyl2x
mov
push
lea
mov
jp
push
xchg
push
or
sub
mov
mov
jne
xchg
cld
repnz
add
jg
test
pop
repnz
xorl
lods
dec
in
lret
sti
dec
lahf
pop
ss
fistps
inc
aam
push
adcl
sbb
mov
stos
sbb
and
sub
push
mov
pusha
test
movsl
movsl
imul
mov
mov
test
xor
xor
mov
je
pop
mov
jb
stos
lea
inc
mov
loop
xor
imul
jns
mov
jne
mov
sbb
jno,pt
xchg
js
shll
js
nop
adc
pop
cltd
cmpsb
rcr
repz
loope
scas
stos
mov
push
jnp
add
mov
jbe
mov
push
idiv
push
and
cmp
es
outsb
xchg
push
ss
dec
push
xchg
push
pop
in
dec
jns
push
psadbw
adc
push
sbb
jns
xor
test
pushf
mov
jne
test
mov
dec
inc
cmp
add
mov
lret
repz
testb
push
push
mov
mov
mov
mov
mov
mov
inc
roll
fmuls
sbb
pop
leave
jno
push
mov
inc
scas
push
in
pop
mov
out
dec
js
in
roll
jbe
push
jecxz
imul
mov
sbb
rorl
inc
scas
in
sub
in
push
mov
lcall
js
lods
in
hlt
push
std
mov
int
xor
cmp
test
mov
aas
jl
mov
mov
popa
sbb
insl
test
orb
andb
mov
dec
sbb
addl
pop
lret
call
lds
sti
lahf
and
outsl
loop
popa
fwait
cwtl
test
cmp
push
and
mov
or
xor
mulb
push
jle
pand
cmpsb
xor
adc
imulb
jle
pop
dec
ret
jb
cmp
lahf
sbb
add
jne
jge
leave
mov
push
cli
fs
mov
xchg
cmp
int
call
jb
gs
cmp
imulb
adc
fs
aas
pushf
pushf
jo
xchg
mov
mov
stos
scas
jmp
mov
cwtl
ja
sbb
or
cwtl
inc
and
mov
aam
cmp
xor
add
mov
jae
loopne
mov
sub
pushl
daa
jp
cmp
in
into
aam
mov
or
psraw
dec
jns
aas
lods
inc
loop
cld
mov
adc
scas
pop
cmp
daa
ret
sub
mov
adc
dec
jno
mov
int
rcr
orl
out
add
cmp
or
loop
sahf
aad
jno
and
inc
repz
movsl
mov
mov
jge
rclb
int3
pop
xchg
dec
dec
xor
mov
mov
xchg
fwait
je
std
sbb
fidivs
icebp
dec
sub
mov
jb
outsb
pushf
clc
adc
stos
mov
push
cmp
xor
aas
es
test
pop
das
mov
cmp
jae
jle
movsl
pop
popa
int
cmp
pop
cvtdq2ps
and
pop
test
and
pop
sbb
mov
jg
aaa
stos
dec
xor
mov
mov
in
stos
call
or
sbb
mov
inc
pop
cli
fdivl
out
dec
scas
xor
push
or
outsl
mov
insl
sub
push
or
leave
insl
sbb
inc
ss
or
push
jo
in
lret
mov
fucomip
aaa
in
inc
testl
insl
xchg
jecxz
icebp
test
lahf
inc
nop
add
fistl
jo
push
into
pop
push
sahf
mov
dec
lret
mov
adc
add
arpl
mov
fdivrs
repnz
popf
sub
int3
add
jmp
minps
mov
fisttpll
or
fwait
lcall
fadd
push
mov
testb
and
in
out
jno
mov
int
mov
nop
xor
adc
xor
mov
jmp
mov
sbb
imul
in
cwtl
or
arpl
sbb
cmc
pop
mov
in
rorb
insb
cli
jmp
jecxz
andl
mov
xchg
pusha
outsl
push
cld
aam
inc
inc
cs
ds
jmp
adcl
aaa
mov
inc
rolb
test
and
sbb
xor
stos
cmp
lret
pop
push
cmp
xchg
sub
inc
sahf
cmpsb
repnz
mov
movsb
jmp
cmp
pop
sub
fsub
jb
shlb
dec
out
jl
push
rcll
scas
add
ret
movnti
mov
dec
dec
cmp
into
push
popf
cmp
xlat
lahf
sub
sub
inc
daa
xchg
rolb
cli
in
movsl
int
icebp
in
insb
and
cli
adc
mov
mov
xchg
jae
inc
xor
inc
outsl
pop
ficomps
aaa
loop
test
xor
aas
and
hlt
adc
cwtl
sbb
sbb
jb
jle
lock
repz
mov
loope
sti
lahf
pop
test
mov
les
cmpsl
cli
xchg
mov
leave
nop
out
cmp
lret
sahf
inc
xchg
xchg
sti
pop
out
jge
mov
fs
pop
ds
push
xor
jo
push
adc
pop
pop
imul
xorb
xor
pop
fcmovu
mov
std
push
xor
les
insl
xlat
daa
jmp
cmp
xchg
popf
movsl
xchg
mov
addr16
mov
arpl
cld
cmp
push
sub
dec
push
ds
mov
push
adc
fprem1
dec
arpl
cmp
jb
ljmp
push
ret
sarl
mov
arpl
push
sbb
out
pop
dec
stos
out
cwtl
movsl
sub
xchg
in
fildll
xchg
leave
imul
adc
stc
fstpt
int3
jmp
jnp
inc
pop
repz
jle
daa
mov
rcrb
sbb
clc
xlat
lds
popf
jg
sub
mov
test
push
mov
in
cmp
cmpsl
sub
popf
insl
and
sub
mov
es
dec
rcrl
aas
dec
cmpsb
dec
xlat
mov
dec
pop
inc
pop
cmp
add
cltd
mov
imul
or
dec
adc
sub
out
test
cld
fucomi
jmp
cmpsb
mov
lea
xchg
dec
pop
pop
stos
add
mov
lods
xchg
dec
call
cmp
mov
adc
popf
gs
cwtl
sbb
int3
xchg
mov
imul
test
sub
dec
stc
cmp
jl
mov
pop
adc
sub
aad
add
add
push
sbb
adc
fildll
jmp
push
and
sbb
adc
rolb
mov
xlat
xchg
add
push
call
xchg
sub
adc
xor
aam
in
inc
std
fmulp
pop
mov
enter
mov
lods
stc
add
xchg
cmp
fwait
sub
xchg
sti
mov
test
adc
rcrb
add
std
pop
out
mov
mov
rcll
jl
movsb
fmul
inc
add
hlt
int
in
emms
jecxz
push
inc
push
and
lods
fnstcw
cmp
loopne
frstor
js
inc
xchg
fs
les
stc
loope
push
repnz
ret
data16
xlat
jbe
mov
and
push
ds
jg
movd
into
adc
in
xlat
push
inc
sbb
bound
jno
lcall
push
loopne
adc
cmp
mov
push
cmp
call
dec
mov
mov
stos
mov
push
cmp
or
test
scas
call
mov
lahf
add
in
xor
daa
loope
lock
add
pop
pop
push
and
jo
inc
dec
je
cwtl
xor
pop
mov
das
mov
jne
mov
adc
mov
jg
xchg
jb
fcmovnb
inc
sbb
repz
push
addr16
push
sbb
lret
xchg
adc
into
ficompl
mov
ds
sub
out
inc
fmulp
dec
out
dec
sbb
pop
js
add
add
xchg
pop
sub
outsb
mov
movsl
xchg
sbb
push
or
popa
jge
andl
and
or
int3
fidivs
mov
xchg
xlat
pop
jns
rcrl
xchg
pop
xchg
imul
leave
cmp
ret
pop
adc
dec
mov
cltd
cwtl
push
mov
cltd
in
and
push
sub
sti
lcall
pop
xorl
insb
sahf
insl
pop
pop
and
push
mov
sbb
xchg
sbb
and
int
jmp
ret
enter
cmp
mov
xor
fmul
push
out
dec
dec
mov
addr16
push
jg
sbb
cmp
jbe
shlb
out
cmp
jae
vsubps
ficompl
mov
xchg
jo
jl
xchg
sahf
inc
mov
arpl
or
fisubrl
outsb
in
test
daa
mov
mov
sub
leave
adc
sbb
fstpl
push
daa
fwait
jp
mov
push
pop
aas
mov
xor
mov
adc
jns
add
jl
in
jle
xor
mulb
cmpsl
repz
mov
popa
inc
aad
fiaddl
loop
leave
cmp
sahf
setne
jno
push
fadds
js
shlb
mov
dec
jo
adc
in
cltd
sbb
clc
call
jmp
sub
add
jns
adc
inc
nop
jno
and
jne
push
int
mov
inc
jmp
cld
xor
leave
int3
fstps
inc
pop
dec
stc
push
stos
fcoml
mov
xor
sbb
cmp
and
inc
jns
ret
add
inc
fwait
jnp
aad
or
or
cmc
sahf
sub
fldl
jae
xchg
adc
dec
push
add
inc
loop
sbb
add
test
or
sub
cs
adc
fisttpll
icebp
mov
xchg
outsl
adc
dec
cmp
jecxz
test
lret
jg
fsubl
mov
mov
mov
sub
stos
cmp
es
aad
mov
int3
mov
mov
lcall
cmp
std
iret
mov
mov
pop
out
das
mov
lret
inc
in
int3
add
js
filds
xchg
lcall
mull
mov
sbb
xchg
cmp
fsubl
pushf
and
and
sbb
pop
cmp
test
jecxz
lcall
sub
call
pop
popa
scas
test
enter
pop
insb
mov
xorb
je
mov
xchg
or
push
idiv
leave
aad
jle
lahf
or
in
scas
test
mov
xor
add
aam
shll
leave
call
xchg
cmp
or
testb
xchg
pop
cmp
push
adc
jecxz
arpl
jmp
mov
push
cs
inc
lret
testb
daa
sbb
cmpsb
cli
xchg
aad
jns
pop
or
movsb
and
mov
xor
repz
outsl
pusha
push
fistpl
adc
add
cli
inc
adc
push
xchg
lea
cmp
cmp
push
clc
dec
lcall
adc
jbe
call
push
js
xor
adc
popf
jg
cmp
ss
fnstsw
aad
jecxz
dec
scas
sub
pop
movsb
inc
push
sbb
stos
xchg
ljmp
inc
mov
mov
int3
sbb
dec
ret
or
ds
or
bnd
jb
sub
movsl
mov
xor
dec
loope
dec
repnz
or
mov
mov
jge
andb
dec
gs
hlt
push
pushl
mov
mov
push
sub
outsb
xchg
sbb
push
lret
flds
loop
in
lods
jmp
mov
pop
loope
adc
insl
mov
push
movsl
and
jp
push
leave
adc
mov
mov
adc
popf
scas
sbb
pop
push
cmc
dec
das
cli
fisubrl
adc
ret
fwait
out
mov
pop
adc
jp
adc
dec
ret
and
adc
arpl
cmp
fistpll
hlt
push
mov
push
mov
mov
xchg
mov
lds
sbb
jmp
loopne
xchg
movsb
jecxz
rcll
sub
cmpb
cmp
adc
cmp
xchg
les
shll
scas
sar
scas
cmc
and
loope
bound
in
dec
arpl
mov
or
aaa
loope
xor
mov
and
jns
dec
loop
scas
stc
and
mov
pop
les
enter
adc
pop
mov
lret
push
cmp
cmp
leave
xchg
scas
cwtl
add
mov
mov
sbb
push
sbb
dec
push
or
pushf
mov
and
push
jg
out
mov
ffree
xor
push
mov
mov
cmp
sub
xchg
and
adc
testb
mov
sub
push
push
mov
aaa
loopne
pop
xchg
lods
adc
aad
bnd
push
into
imulb
dec
cmpl
sbb
push
insb
jmp
pop
push
inc
pop
xor
icebp
sbb
stos
xor
je
stc
sahf
movsb
imul
div
add
add
inc
fcomps
test
lods
mov
aaa
out
lcall
dec
or
jns
test
testb
aad
jnp
lret
sbb
imul
cmpsb
or
pop
mov
nop
cmpsl
pop
pushf
cmp
sbb
cmovb
adc
push
sti
xchg
ret
rorb
and
imul
sbb
andb
xor
scas
xchg
xchg
loope
mov
out
or
sub
cmp
inc
add
mov
ret
sub
mov
jne,pt
inc
sub
adc
push
dec
loope,pn
sti
or
or
dec
xchg
push
xchg
repnz
lock
rolb
cmc
dec
int3
loopne
push
aad
jle
hlt
pop
js
inc
cld
sbb
add
les
jne
in
xlat
dec
cmp
xchg
mov
rorb
cltd
xchg
push
fstpt
add
mov
sub
and
mov
popf
mov
into
cmp
and
dec
jge
ret
stos
cmp
and
ret
int
xchg
lret
leave
test
jmp
ds
divb
lret
mov
or
jne
or
sbb
cmp
les
cmp
jns
scas
mov
sbb
addr16
mov
jle
mov
shll
sbb
lea
xor
and
das
xchg
mov
ret
leave
xor
xorb
adc
jl
pop
in
dec
dec
mov
inc
stc
sub
jecxz
ss
lock
pop
test
nop
pop
test
and
call
jno
mov
push
and
repnz
inc
cmpb
mov
add
sarl
cmp
mov
dec
or
mov
cmpsl
adc
int
cwtl
shll
loopne
scas
inc
xor
test
sbbb
sub
jp
or
or
sti
jp
ror
test
sub
pop
jns
daa
loope
sub
notb
outsb
fmuls
and
push
push
lcall
hlt
inc
mov
or
clc
mov
xor
leave
aad
pop
jns
jbe
in
daa
jne
lock
cmpsl
das
shrd
out
inc
call
mov
popl
bound
stos
lcall
mov
pop
xchg
dec
xchg
lods
xor
call
cmpl
xchg
xchg
test
les
rorb
jecxz
cmp
lret
push
xchg
test
in
out
xorb
mov
mov
jmp
shlb
inc
xlat
cmp
ds
jno
jl
jns
popl
and
into
bndstx
add
daa
pop
gs
push
enter
pop
jecxz
fisubrl
aad
fidivrl
in
rcr
imulb
lret
ret
mov
cmpsb
ja
in
sub
leave
adc
add
and
sub
test
mov
sbb
mov
inc
loop
xchg
int
pop
in
or
jne
movsl
push
jnp
mov
or
lods
rol
orb
dec
adc
inc
mov
rorl
xchg
shll
jecxz
xchg
je
int
lods
dec
loopne
lret
jp
push
iret
aaa
imul
int3
cmc
lahf
push
sbb
pop
das
ret
pop
jnp
fwait
jecxz
outsb
pop
push
and
xchg
stos
and
cmp
test
push
movsb
inc
and
test
xor
xchg
ds
int3
in
fimull
das
std
xor
neg
enter
and
or
incb
jp
add
pop
or
sbb
fcomi
aad
aad
addr16
jnp
es
sub
jns
lock
pop
mov
int3
mov
cwtl
pop
fisubrl
repnz
or
cmp
pop
jl
xchg
push
pop
stos
xchg
jl
push
pop
jno
xor
mov
fs
jle
aad
cmc
imul
and
and
cmp
and
sbb
repnz
mov
inc
pop
push
pusha
inc
pop
aad
sbb
insl
scas
mov
mov
loope
xchg
push
mov
enter
sbbl
inc
xor
outsb
cmp
ja
movsb
fcmovb
leave
cltd
outsb
int3
mov
xor
daa
test
mov
inc
and
stos
push
pushf
stc
pop
mov
in
ss
xor
test
in
scas
incl
or
mov
popa
or
popf
pushf
adc
out
mov
addr16
movsl
xchg
pop
push
adc
and
outsl
inc
mov
mov
add
data16
pop
ja
mov
mov
xchg
cmpsb
mov
and
aaa
fnstcw
push
bound
lahf
movsl
push
lcall
push
ss
pop
adc
lds
stos
mov
clc
std
imul
inc
add
shlb
pop
push
loopne
gs
xchg
jns
and
js
repnz
sbb
push
push
movsb
mov
stos
adc
gs
mov
and
add
ss
jmp
adc
lea
sub
sbb
pop
fidivrs
movsl
dec
or
aad
and
push
sbb
xor
lret
arpl
inc
lret
inc
shr
out
clc
mov
out
repz
js
dec
call
outsb
int
iret
inc
mov
cltd
mov
push
divb
enter
repnz
inc
pop
lret
inc
rolb
daa
inc
mov
xchg
lods
fwait
in
jecxz
movsb
shll
add
cli
jg
pop
repz
movsb
push
inc
lock
iret
les
jle
pop
mov
or
xor
aad
fwait
adc
dec
outsb
mov
jo
add
xor
add
jo
mov
pop
lea
inc
cld
jb
mov
mov
out
sbb
jo
iret
inc
fistl
cmpsb
addr16
jnp
ds
cwtl
or
je
pop
aas
popf
xchg
pop
arpl
dec
mov
test
sub
aaa
or
adc
xlat
or
pop
push
mov
pop
xchg
pcmpgtd
adc
ret
into
icebp
push
pop
dec
pushf
test
mov
cmovb
lods
rcl
jl
js
and
mov
jo
dec
sbb
push
insl
jmp
mov
popa
cmpsb
cmpsl
pop
mov
outsl
repz
aam
mov
cmp
sbb
out
pop
xor
mov
push
aaa
xor
cmpsb
xchg
add
inc
pop
push
in
dec
mov
jge
cmc
inc
dec
dec
int
sbb
fidivl
dec
outsb
stc
loope
std
hlt
bound
push
ffree
mov
jmp
and
sahf
and
mov
fsubl
jle
ss
ficompl
mov
scas
inc
pop
mov
jmp
popf
clc
ljmp
jae
std
ds
and
sbb
jge
ja
or
push
jecxz
or
fwait
push
push
mov
popa
test
pop
dec
dec
in
push
sub
rcrl
mov
imul
jb
jl
cmp
daa
mov
out
and
mov
push
pop
xchg
sbb
aam
rorl
leave
fdivl
mov
xor
mov
push
arpl
push
xchg
les
mov
fwait
lcall
jp
mov
push
mov
sbbb
je
enter
push
jae
xor
ret
pusha
ljmp
lret
or
or
rorl
adc
and
scas
mov
cmpsb
test
cmp
or
inc
stc
fsubrs
enter
pusha
mov
inc
bound
cmp
pusha
popf
sub
pusha
test
shl
push
cmp
mov
into
sbb
lods
sub
add
mov
and
popf
xlat
scas
scas
pushf
lcall
lret
push
push
insb
movsl
lods
les
mov
mov
ljmp
int
mov
imul
popa
fistpl
jo
cmp
sub
dec
xchg
movsb
pop
mov
test
sub
pop
sbb
or
adc
pop
mov
mov
stc
cltd
sbb
and
out
mov
add
mov
aaa
xor
push
leave
mov
mov
xor
sbb
xor
out
sti
push
js
aad
xchg
lret
push
mov
mov
inc
sub
adcb
sbb
sbb
jmp
xchg
jl
or
mov
inc
add
dec
adc
cltd
xchg
mov
mov
mov
ja
dec
and
mov
loope
mov
fiaddl
lock
mov
jb
push
add
pop
int3
stos
scas
xor
add
cs
push
jecxz
fldcw
sbb
mov
push
adc
mov
and
jne
jmp
adc
lods
sub
xor
pop
pop
nop
push
enter
sub
imul
jo
popa
mov
push
jecxz
xor
push
fldcw
add
jb
movsl
stos
mov
iret
mov
add
pushl
aas
add
mov
inc
jecxz
addr16
out
addb
subl
mov
xor
xchg
repz
xor
mov
push
jecxz
push
mov
mov
xchg
in
lea
pop
add
and
loop
je
idivb
fadds
stos
sbb
cmp
es
out
ds
jp
pop
sub
cmp
in
scas
cmp
sti
mov
push
cmc
pusha
sbb
inc
mov
sub
pop
mov
fdivp
dec
ret
mov
add
mov
pop
repnz
roll
xor
mov
andps
iret
jle
clc
pop
movsb
dec
mov
lcall
pop
sbb
push
mov
mov
sub
test
xchg
aas
jge
push
addr16
or
cmp
shrl
dec
xchg
mov
arpl
xchg
nop
aam
and
jge
jno
ss
dec
adc
dec
bound
insb
repnz
hlt
xchg
loope
mov
jno
mov
shrl
jmp
jae
movsl
push
icebp
push
pop
or
ret
scas
xor
inc
add
or
or
inc
mov
scas
add
clc
test
insl
push
push
stos
out
imul
icebp
sahf
mov
sbb
pop
inc
mov
loop
imul
scas
cmp
adc
pop
js
stos
shll
pusha
fs
andl
xlat
or
and
adc
add
jnp
pop
or
dec
jp
fs
cltd
aam
test
xchg
repz
mov
pop
jb
sbb
loop
dec
or
dec
and
clc
xchg
sub
cwtl
sub
lods
out
sbb
aaa
inc
pusha
mov
fwait
cmpsl
shr
popa
lcall
stos
and
mov
or
test
rcll
js
jp
insl
rcr
mov
jmp
into
shll
or
inc
xor
or
adc
lret
push
incl
mov
test
push
leave
jmp
popa
cmpsb
xor
jecxz
mov
movsl
dec
pushf
sbb
cltd
sbb
xchg
cmp
imul
testb
iret
mov
jl
mov
or
in
fnsave
inc
inc
xchg
sbb
jnp
inc
test
sbb
sbb
mov
leave
sbb
mov
jnp
jecxz
pop
cmp
std
mov
add
mov
pushf
xchg
or
lds
cmp
pop
push
hlt
fnstsw
or
sub
lcall
addr16
jo
lcall
shl
pop
jno
xchg
mov
push
mov
inc
in
jg
out
or
mov
xchg
sub
mov
in
fisubl
cmp
sub
adc
mov
xor
adc
inc
cmp
sarl
scas
or
inc
jp
movsl
aad
daa
jo
les
clc
jmp
jnp
push
sbb
and
pop
sub
mov
out
dec
mov
setnp
icebp
jb
fisttps
xchg
xlat
insb
sbbl
mov
std
sbb
int3
fcmovu
adc
xchg
mov
pushf
cs
test
int3
mov
or
cmp
arpl
loope
lahf
lods
adc
push
and
pop
stos
xchg
sbb
mov
pop
push
subb
andl
pop
nop
jmp
mov
rcrl
cmp
nop
rolb
jmp
or
pop
jns
mov
bound
pop
adc
mov
add
sahf
inc
test
and
adc
cltd
les
lods
mov
pop
icebp
sub
sarb
jle
push
mov
mov
xchg
xor
hlt
mov
mov
pop
shrb
scas
push
nop
imul
call
xor
insb
mov
mov
sub
int3
cmp
dec
push
mov
cmpsl
jle
mov
outsl
stc
or
popf
rorl
add
cmp
xchg
fimuls
imulb
and
push
xor
dec
adc
outsl
push
icebp
xchg
jecxz
xchg
pop
xchg
mov
or
or
test
lahf
fsubl
popa
loope
jge
push
xchg
gs
xchg
sahf
sub
sti
fstpt
fisttps
mov
lock
xchg
sahf
cltd
add
or
xchg
or
inc
pop
loopne
fmuls
mov
push
loop
and
loope
flds
jg
jns
pop
cld
adc
sahf
es
test
xchg
sbbl
mov
or
loopne
add
subb
std
iret
add
jo
movsb
sub
lret
jge
cwtl
xorb
add
into
loope
clc
ret
pushw
icebp
jmp
push
fisubs
jg
adc
aam
cmpsb
stos
mov
pop
pop
test
cwtl
xlat
out
test
cmp
aad
insl
btrl
mov
lds
mov
xorl
call
mov
pop
push
and
add
cmp
ljmp
push
icebp
push
std
push
add
ret
inc
ret
inc
ss
sbb
in
shl
jnp
insb
sub
mov
mov
mov
movsl
lods
sbb
adc
out
arpl
push
arpl
mov
das
sbb
pushf
push
mov
inc
aad
xchg
aas
mov
adc
adc
mov
out
mov
das
mov
icebp
mov
icebp
test
repnz
sub
dec
mov
stc
dec
mov
sub
out
lahf
push
jno
xchg
sub
fsubs
sar
fiadds
sahf
aad
pop
add
bound
cltd
sti
dec
adc
jns
and
jle
mov
sub
xorl
stos
sub
cmp
pop
jo
dec
out
lods
leave
jle
out
ficoms
inc
mov
fwait
mov
loop
mov
bound
inc
test
xor
inc
sub
jbe
cltd
inc
ror
add
mov
repz
mov
sub
mov
js
cmp
pop
mov
mov
inc
mov
enter
mov
rcll
xor
jo
jmp
mov
in
mov
dec
mov
jnp
fnstsw
in
add
fnstenv
mov
nop
lea
pop
aad
pushf
add
jnp
xchg
push
sbb
icebp
stos
xchg
call
lods
inc
daa
pushf
call
xor
mov
mov
mov
sbb
jl
imul
arpl
xchg
sbb
stos
push
sbb
inc
pop
mov
out
adc
sbb
sub
dec
lock
std
cltd
icebp
lds
lock
lcall
add
jp
cmc
cmp
sbbb
movsl
mov
or
orl
push
cld
mov
ja
sub
adc
inc
jae
rcl
subb
data16
jae
imulb
call
movsb
test
filds
inc
pop
adc
mov
xchg
cmpsb
push
adc
mov
sbb
jmp
xchg
lcall
imul
in
imul
xchg
xor
xlat
mov
push
inc
push
fsubs
ljmp
fisttpll
out
sar
decb
je
and
mov
cmpsb
xchg
ds
out
push
imulb
or
adc
dec
pop
adc
mov
cs
and
lret
sbb
pop
hlt
push
xchg
push
lock
add
push
mov
jbe
push
lahf
xchg
je
and
mov
icebp
xor
loope
stc
stc
push
lods
lcall
insb
cli
add
xchg
arpl
pop
sbb
push
out
daa
pop
aad
jecxz
cmp
jg
inc
mov
addr16
pop
pop
and
jmp
push
sbb
jle
inc
incl
xlat
mov
or
call
jns
lock
inc
cmpsb
mov
stos
jmp
push
cmp
ret
int3
lret
push
sub
lret
inc
mov
xor
mov
sbb
fwait
sub
jmp
xchg
or
ss
mov
and
jne
pop
andb
je
mov
cmp
int
jbe
mov
inc
out
mov
sub
call
add
xchg
shlb
mov
or
xor
mov
fldl
into
fdivs
push
cli
je
push
std
and
xchg
push
lea
xor
xchg
fs
jp
pop
sub
cmp
sub
lods
mov
inc
cmpsl
inc
shll
imul
or
cmc
xlat
sub
or
pop
push
insb
lods
movl
and
cmp
jne
jnp
pop
add
loop
and
pop
iret
push
mov
cltd
std
pop
add
popf
add
arpl
aaa
or
fnclex
xchg
mov
lods
jl
jp
call
in
pushf
scas
ja
and
inc
dec
push
xchg
loopne
leave
mov
loope
cwtl
scas
sub
ja
imul
addr16
fldenv
rcl
jnp
add
out
std
xor
mov
xchg
stos
inc
out
push
jo
cltd
call
cli
loopne
jbe
int
sbb
lea
cmc
dec
shlb
cmp
and
adc
xor
inc
pop
fst
popl
sub
shlb
pop
cmpsl
add
loopne
pusha
push
and
pop
insl
sbb
call
mov
ret
xchg
mov
lods
cmpsl
data16
sbb
enter
dec
loop
dec
mov
xor
pop
pop
into
dec
inc
mov
rcll
fwait
aas
cmp
or
lods
adc
dec
lcall
std
mov
mov
mov
mov
pop
movsl
out
ficompl
arpl
mov
adc
add
in
sub
or
jb
mov
xchg
pop
add
gs
ss
std
xchg
shll
loop
adc
mov
dec
and
outsb
mov
lds
les
mov
cmp
leave
imul
push
jp
sub
adc
int
pop
jnp
mov
aaa
bound
leave
bound
push
jmp
xor
lds
sbb
push
dec
sub
or
pop
and
push
into
daa
mov
or
call
into
pushf
push
and
mov
xor
jg
adc
mov
loope
dec
lcall
lret
and
fiadds
jbe
sub
movsl
inc
or
xchg
dec
cmp
call
cmpb
sbb
aas
xor
jecxz
cmc
push
js
cli
mov
out
mov
ds
mov
stos
push
pop
jo
cmp
movsl
data16
xchg
sub
pop
iret
jb
pop
ror
inc
insb
lret
ret
sub
lock
pushf
lret
cltd
adc
nop
push
jns
stos
push
cmpsb
cmp
sub
insl
mov
fisubs
pop
cmp
adc
test
jle
pop
into
xor
mov
sub
xchg
fwait
push
inc
es
sbb
sub
mov
mov
out
add
loopne
sub
enter
adc
dec
leave
fwait
imul
mov
or
xor
out
mov
cs
inc
mov
and
cmp
jmp
std
shll
mov
inc
mov
bswap
out
out
mov
and
xlat
push
and
pop
insw
pop
pop
sub
fwait
stc
fcmovne
adc
insl
jl
pop
lods
daa
loope
cwtl
sbb
mov
xchg
fdivp
or
lret
popa
ja
imul
and
push
icebp
xchg
sbb
pushf
xchg
cmc
in
push
test
stos
test
lds
add
inc
aam
xchg
xor
hlt
mov
out
xchg
fisttps
push
dec
test
mov
cmp
addr16
movsl
inc
int
mov
cmp
mov
or
pop
push
pop
ret
jo
ss
fstl
cmpsb
cmp
inc
je
fstp
cmp
aad
mulps
jmp
icebp
movsb
add
inc
pop
xchg
push
cmp
movsb
lea
pop
dec
add
push
mov
lock
xchg
pop
fldln2
sti
sub
pop
insl
add
inc
sub
xchg
or
adc
lods
test
inc
nop
dec
xchg
xor
or
jecxz
jl
xchg
fidivl
and
aas
arpl
addr16
dec
inc
lgs
test
stc
sub
sub
fdivrs
push
test
scas
mov
adc
nop
shrl
adc
push
movsb
pop
inc
pop
pop
mov
sub
scas
popl
mov
fdivl
sub
aas
pop
lods
fsubl
push
subl
dec
loop
lcall
and
xchg
leave
or
repnz
mov
add
mov
push
insb
xlat
lea
or
fldt
cmp
xor
jno
cmp
and
jecxz
or
cwtl
lds
lcall
xlat
xchg
pop
cltd
push
cwtl
mov
and
cmp
lods
imul
xchg
adc
lahf
mov
subl
inc
fbld
cmpsl
hlt
sar
pop
in
outsl
xchg
rcll
inc
adc
and
mov
push
cltd
nop
adc
mov
sub
xchg
and
imul
xchg
or
mov
mov
loope
es
push
stos
dec
mov
xchg
mov
lret
mov
xor
sub
mov
idivb
ja
xlat
enter
test
sub
fiadds
mov
mov
or
out
push
imul
nop
ror
xor
lahf
or
xor
fdivrl
sub
add
jmp
adc
lret
mov
sub
mov
jg
push
mov
mov
cmp
add
inc
add
add
mov
in
ficoml
cmp
mov
movq
div
popa
es
shl
scas
mov
dec
sti
or
cmpsl
cltd
loop
nop
cmp
les
jnp
rclb
jmp
into
xchg
lcall
sbb
cmp
fs
lds
adc
xchg
dec
inc
inc
lahf
bound
and
cmpsl
jbe
push
xchg
cmp
cwtl
rorl
xlat
jp
push
mov
xor
cld
mov
jnp
pop
fisubrl
ljmp
adc
stos
sub
fldcw
mov
add
or
push
push
aam
sub
mov
sbb
jg
dec
inc
les
mov
and
pop
jnp
sbb
mov
popf
fcomps
inc
push
dec
aad
hlt
xor
xlat
xor
push
inc
subb
mov
imulb
aaa
adc
lds
jl
mov
sbb
or
and
sub
js
push
mov
cmovns
lret
shl
push
xor
shlb
push
sub
iret
sti
notl
push
xchg
jns
mov
jecxz
subb
adc
add
lahf
imulb
scas
loope
xchg
mov
jecxz
dec
je
insb
inc
and
push
pusha
push
cltd
push
fisubs
jae
and
mov
inc
mov
push
js
aam
add
fdivl
in
mov
adc
loop
mov
inc
mov
cmpsl
pusha
leave
or
in
jno
cmp
mov
shlb
sbb
xchg
aad
imul
imul
or
sbb
es
aas
sub
xchg
popf
fisttpll
mov
mov
dec
scas
test
decb
xor
dec
hlt
adc
and
in
aad
stos
mov
mov
cwtl
ret
fadd
and
xchg
xor
outsl
and
ret
fistl
dec
pop
imul
jle
int3
add
cmp
adc
mov
sbb
in
js
ds
sub
pop
popa
jle
out
in
mov
cwtl
jmp
sbb
adc
stc
aam
int3
in
inc
sbb
push
leave
mov
les
jp
les
jae
xchg
mov
add
adc
aas
daa
stos
comiss
lcall
out
jl
mov
mov
sbbl
inc
cmpsl
sub
lods
dec
imul
and
mov
in
inc
aas
out
cmpsl
cltd
jp
cltd
ret
cmp
ret
sarb
lcall
add
xor
adc
jmp
ret
inc
sbb
aaa
gs
mov
pushf
fildl
insl
mov
pop
ret
pop
mov
add
ljmp
sub
mov
dec
test
ds
sub
clc
push
out
xlat
test
lret
pop
cmp
shlb
insl
in
popa
popf
xchg
mov
xchg
sbbl
pop
push
inc
xchg
cmpb
lock
xchg
cmpsl
das
daa
inc
xchg
cs
jl
std
scas
mov
adc
push
xchg
cmpb
push
lret
xchg
fadd
and
pop
in
or
mov
fsubr
insb
stos
call
es
mov
dec
pushf
mov
dec
nop
insb
ret
xchg
nop
jp
dec
xchg
xor
mov
sub
cmp
adc
in
add
xchg
dec
pusha
nop
repnz
outsb
je
mov
leave
fildl
adc
pushf
push
je
mov
mov
and
push
mov
jo
cmp
aam
cltd
cs
or
out
push
dec
mov
arpl
in
sti
pop
in
or
imul
add
js
fisubs
imul
sbb
cltd
cld
mov
scas
cmp
adc
stc
stos
xor
add
out
jle
sub
lock
add
jno
add
pop
xchg
inc
mov
fldl
jns
jecxz
mov
out
leave
mov
sub
int3
pop
outsl
clc
and
repnz
lea
ljmp
jecxz
cmpsb
push
inc
test
es
jmp
cli
mov
movsl
mov
inc
adc
mov
aam
xchg
divb
insl
cmpsb
jns
test
pop
addr16
cmp
mov
mov
out
lret
or
fidivl
sub
jo
cmp
incl
stc
mov
lds
mov
shrb
aam
jl
es
out
mov
inc
lcall
fdivrl
xchg
lock
add
rcll
sbb
xor
mov
bound
cmp
jmp
imul
scas
mov
fisubl
jae
fcompp
call
cmp
shll
aas
cwtl
dec
jle
add
ror
sbb
xchg
mov
inc
mov
data16
cmc
aad
cmp
sub
es
adcb
stos
int
sbb
roll
add
mov
mov
push
push
mov
mov
nop
leave
push
sub
dec
jb
jnp
sti
pop
pop
sbb
ljmp
sahf
call
in
inc
addr16
fwait
push
lahf
int
inc
cmpsl
jo
push
mov
cltd
push
fildll
mov
ja
cltd
dec
hlt
test
push
das
add
mov
jl
popf
out
test
movsb
and
cmp
inc
mov
jns
mov
xor
leave
fs
mov
nop
insb
mov
or
into
and
and
and
cmp
push
dec
add
add
es
jb
xlat
sbb
mov
xchg
pusha
push
push
pop
loopne
cmp
mov
sub
arpl
add
mov
adc
mov
and
push
adcl
jae
pushf
incl
or
in
and
sub
sub
adc
mov
adc
and
call
pop
add
jne
loopne
xor
loope
aaa
adc
aaa
mov
testb
push
mov
fs
ds
cs
outsl
push
fidivl
xchg
mov
lret
add
es
xchg
push
mov
shr
lock
xchg
clc
jle
imul
dec
or
cltd
dec
out
popa
pop
jmp
std
ret
xchg
leave
movsl
or
sub
lahf
adc
and
mov
mov
icebp
into
fldenv
rorb
mov
xor
outsl
cmp
mov
dec
gs
rcrb
push
mov
push
in
movsb
pop
cmp
jae
insl
inc
aam
rolb
inc
out
test
in
xchg
pop
and
jne
ss
js
les
inc
inc
dec
outsl
mov
cltd
popf
lcallw
adc
push
sarb
mov
cwtl
inc
popf
lea
imul
outsb
push
scas
mov
mov
add
inc
mov
inc
mov
push
inc
mov
lods
popl
pop
adc
mulb
push
imul
xchg
push
jno
insb
add
xchg
pop
dec
push
xor
aaa
pop
std
inc
cld
pop
jbe
fidivrl
out
jmp
out
out
adc
push
in
or
scas
aad
insl
pop
sub
mov
and
xlat
repnz
pop
rorl
sbb
leave
mov
mov
adc
out
sbbl
int3
outsb
push
das
jno
int
loopne
xlat
fldt
sbb
scas
das
loop
sbb
stos
outsb
loop
rclb
arpl
popa
lcall
and
movsl
adc
lret
xchg
xchg
xlat
mov
pop
mov
stc
cmp
mulb
or
dec
xlat
inc
sti
mov
lock
mov
shrb
push
mov
lret
enter
inc
dec
aaa
scas
jmp
and
out
dec
and
mov
mov
inc
xchg
out
mov
xlat
xorb
push
call
in
inc
cmp
jne
or
jmp
mov
aas
repz
jo
mov
sub
out
jp
mov
inc
insb
jmp
jl
ljmp
dec
imul
sbb
xchg
movsb
out
popa
inc
popf
sub
xlat
adc
push
out
les
out
dec
data16
sti
jp
stos
mov
ret
mov
lock
sbb
jae
xorb
cld
shll
pop
in
outsl
inc
sbb
xchg
adc
mov
pusha
cmp
into
outsl
cmpsl
mov
int3
push
add
xorl
pop
cmc
cmpsl
lods
pop
icebp
add
sahf
pop
orb
movsb
or
sub
jbe
xor
mov
iret
pop
xchg
lock
sahf
movsb
leave
dec
incl
add
data16
xor
imul
xlat
xchg
sbb
in
push
aas
and
add
adc
fldcw
fsubrl
std
add
mov
scas
imulb
add
inc
mov
adc
scas
div
pop
cmp
xchg
add
stc
les
es
sub
and
inc
pop
pop
sbb
ficoms
rolb
inc
cs
ret
into
clc
and
mov
push
lahf
xor
xlat
cmp
out
adc
out
mov
cmpsl
into
push
mov
fisttps
sub
and
jae
cmp
lods
ret
adc
lahf
aas
jae
sub
jle
sbb
hlt
imul
sub
xor
inc
add
fcmovne
sub
scas
bound
mov
jne
icebp
dec
push
adc
pop
pop
pop
fiaddl
inc
push
popf
mov
xchg
fwait
push
cmp
adc
xchg
push
aas
xor
inc
sub
mov
cli
cmc
pop
push
movnti
cld
and
filds
jg
push
mov
mov
mov
jne
int3
pop
data16
lds
shll
push
lock
mov
push
mov
mov
mov
ficompl
xchg
lret
mov
xor
not
mov
jae
push
lock
and
gs
int
mov
jns
pop
stos
shlb
insl
mov
arpl
incb
dec
outsb
fwait
push
outsl
les
icebp
inc
aad
sub
andb
cmp
fisubl
movsb
test
or
add
sub
flds
stos
testl
mov
test
cmp
popa
inc
mov
xor
sbb
sub
pop
jno,pn
or
mov
jne
out
xor
dec
mov
cmpl
or
loopne
int3
pushf
pusha
lds
repz
mov
and
out
xchg
iret
sub
add
popa
sbb
jns
push
cmp
stos
jmp
mov
inc
movsl
cmc
lods
data16
cltd
test
repz
and
ljmp
mov
ja
mov
mov
scas
sti
mov
loopne
test
xchg
sbb
ret
test
fiaddl
xor
add
mov
mov
inc
or
sub
mov
jmp
mov
lret
dec
pop
cwtl
lds
cmp
ja
aam
popf
testl
nop
lods
stos
xchg
loope
and
xor
jmp
data16
mov
push
push
add
dec
adc
dec
subb
filds
mov
jecxz
lcall
or
loope
not
mov
cmpsl
lods
xchg
es
jp
imul
sub
fisubrl
ds
into
ja
xchg
jae
shll
push
lock
pop
stos
xor
cltd
xor
sub
decl
xchg
pop
test
push
lock
lods
adc
shlb
adcl
pushf
xor
repz
repnz
icebp
stc
pop
xchg
js
and
shl
mov
push
sub
addl
xchg
das
xor
pusha
pop
jnp
inc
dec
js
adc
mov
jmp
inc
mov
loope
mov
mov
cmp
adc
add
dec
cmp
adc
sub
push
shrb
js
add
call
jns
sahf
push
imul
das
or
ja
pop
or
mov
push
jns
pop
stos
inc
data16
xor
pop
push
das
jge
cwtl
int3
or
addb
inc
in
test
dec
jo
pop
lret
ljmp
jle
test
sub
mov
sub
mov
gs
mov
xorb
xor
cmp
loop
daa
inc
imul
xchg
xor
out
mov
inc
mov
or
dec
cld
sbb
push
jb
sub
rorb
xor
les
adc
movsb
mov
in
jae
loopne
in
mov
movsb
add
xor
jp
fidivrl
std
ficompl
or
push
inc
mov
add
mov
pop
out
mov
inc
adc
rcrb
jmp
call
mov
dec
mov
and
sbb
enter
mov
test
push
int3
jb
cli
push
cmp
outsl
fwait
xorb
add
mov
loopne
sub
cmpsl
pop
push
jl
ja
cmpsl
xor
ffreep
loope
xchg
hlt
xor
nop
pop
cmp
imul
fs
test
int
mov
adc
int3
test
loope
ficompl
pop
push
shrb
xlat
adc
mov
das
pop
sub
sub
mov
int3
mov
jl
popa
mov
jg
mov
fwait
cmc
mov
jo
adc
push
and
xchg
xlat
ffreep
jecxz
insl
pop
dec
mov
out
insb
js
mov
sub
push
jae
dec
add
and
lret
xor
jo
fnstenv
adc
scas
sti
cwtl
inc
cli
jne,pt
fsubs
sbb
push
mov
cmp
je
sub
mov
fsubl
xchg
fsubrl
in
ret
jb
push
test
push
and
jge
mov
mov
test
push
pushf
mull
cmpsb
aam
mov
lret
add
cmp
mov
mov
out
out
icebp
mov
mov
sub
icebp
mov
cmp
in
rclb
push
pop
stos
fcoml
out
jo
int3
es
fidivrl
jnp
mov
sub
inc
push
jb
jno
xchg
dec
test
sti
mov
or
and
adc
push
rcrl
mov
aam
inc
scas
sbb
loop
aad
rcr
bound
cs
push
rclb
push
mov
push
hlt
sub
inc
mov
imul
leave
popa
outsb
pop
mull
frstor
jnp
dec
cli
cmp
add
jmp
es
js
ss
punpcklwd
or
movsb
ja
xchg
aam
ja
xor
and
lret
insl
inc
add
shll
push
scas
int3
in
jl
mov
stos
outsl
leave
in
imul
add
jl
dec
push
push
and
inc
hlt
loop
mov
cltd
int3
fstpt
mov
add
pop
push
mov
mov
leave
mov
fimull
add
inc
ljmp
pop
sbbl
xchg
in
in
test
scas
lea
aaa
jge
pop
push
sub
out
push
pop
ds
enter
test
jb
fdiv
dec
mov
testw
jno
es
mov
pop
dec
inc
cmpsb
ret
cmp
pop
mov
xchg
ret
je
add
pushf
cwtl
jb
insl
subb
jmp
xchg
mov
inc
fwait
pop
pop
pop
mov
mov
push
mov
adc
leave
mov
xorl
jbe
push
mov
sbb
cmp
in
sbb
cmpsl
je
repz
in
stos
mov
jecxz
inc
jmp
in
ret
sub
dec
popf
or
mov
orl
adc
loope
pop
cwtl
scas
cmp
fidivl
test
mov
and
gs
mov
cmp
loop
scas
mov
mov
mov
daa
popf
repz
hlt
or
pop
and
scas
rol
jmp
add
jne
repz
add
lods
dec
inc
xchg
xor
std
imul
fwait
cmp
loop
pop
clc
sub
out
jno
mov
cmc
test
pop
jp
fcomi
mov
and
out
push
popa
cld
jge
push
mov
pop
inc
xchg
adc
gs
adc
pop
adc
xchg
jmp
in
pop
dec
pop
sbb
inc
xchg
jns
jp
xor
add
in
cmp
subl
mov
mov
jns
jmp
push
dec
xchg
xor
repnz
and
pop
add
into
sub
xchg
pop
in
inc
push
gs
adc
fwait
add
or
mov
imul
mov
repz
mov
ds
repz
fistpll
mov
clc
jl
fisubrs
xchg
adc
xlat
idivb
sbbl
adc
in
fidivs
inc
inc
ret
dec
xchg
jge
test
call
mov
sbb
cmp
add
loopne
insl
int
xlat
jbe
jmp
lods
pop
daa
loopne
lret
xchg
mov
or
out
aas
or
adc
mov
or
sbb
adc
jle
and
push
rorl
into
outsl
ljmp
std
adc
dec
xchg
inc
leave
sub
jae
cld
cwtl
jmp
lods
mov
std
sub
dec
mov
adc
repz
jg
push
jg
xor
xlat
es
jmp
push
popf
xor
cmp
jp
push
inc
nop
daa
lret
sub
mov
popa
icebp
insb
jne
nop
lea
movsb
xchg
dec
sub
push
sbb
mov
mov
pop
in
add
push
imul
xchg
shll
fadds
add
xchg
loopne
mov
std
test
inc
dec
jbe
mov
lret
cmp
ds
in
popa
mov
repnz
push
add
fs
loop
xchg
in
imul
cltd
popf
inc
mov
pop
mov
jmp
pop
cli
rcr
push
aam
push
adc
and
rorl
out
test
xchg
dec
mov
xchg
into
and
sbb
add
add
clc
outsb
mov
out
mov
mul
mov
adc
push
mov
stos
adc
sbb
into
jno
push
movsl
insb
ss
jl
dec
xchg
mov
push
or
popf
mov
add
sbb
stos
sbb
mov
jo
std
scas
fistpll
int3
scas
stc
clc
mov
into
mov
push
xchg
jno
pop
orb
mov
out
cs
mov
mov
push
lods
nop
testl
test
and
repnz
fs
data16
cld
pop
xchg
sub
push
pop
movsb
jp
fldenv
mov
mov
xchg
jns
push
aas
test
mov
inc
pop
mov
mov
mov
inc
lock
mov
or
adc
push
insb
mov
das
adc
cmp
push
jge
push
scas
ljmp
inc
repz
pop
iret
ret
xchg
mov
xchg
adc
pop
repz
in
movsb
jne
imul
xor
subl
rcrl
and
or
popl
inc
push
jle
push
test
addl
inc
jl
adc
add
mov
mov
sub
inc
cmp
jle
dec
pop
xor
dec
mov
lods
push
or
sbb
bnd
pop
xor
movsl
fcomip
ret
popf
jl
jle
mov
andb
int
arpl
lret
mov
and
push
mov
inc
les
xor
and
jnp
xchg
or
cmpl
stos
in
clc
loopne
pop
out
dec
adc
add
inc
mov
scas
push
mov
xchg
inc
sahf
incb
inc
mov
loop
sbb
adc
cmpsl
test
sub
loope
js
negb
and
push
xor
mov
fimull
xchg
subb
sbb
outsl
jge
repz
ficomps
mov
imul
sbb
lret
dec
clc
hlt
in
xchg
rolb
xor
sti
repz
sbb
gs
xchg
cltd
dec
sbb
sbb
xchg
push
lods
xchg
rcl
cmp
icebp
rolb
xor
repnz
xchg
nop
cmp
ss
add
mov
jnp
loopne
xchg
push
dec
movsb
cmp
jns
xor
out
cmc
sbb
mov
fs
push
sbb
hlt
dec
mov
jg
jb
cmp
mov
xor
aas
stos
lret
and
sbb
sbb
loope
test
ret
and
cmp
mov
pop
xchg
push
dec
fistpll
je
xorb
mov
cmpsl
cmc
rcl
mov
popf
dec
test
pop
sub
int3
push
inc
shll
or
xor
shll
fimull
lods
je
pop
add
inc
mov
rorl
enter
sbb
xchg
lds
mov
cmp
jns
pop
cmp
mov
outsb
jae
aam
mov
iret
dec
aaa
addr16
stos
mov
adc
fsubl
mov
xor
fidivs
in
or
or
xchg
jae
push
ljmp
je
fstpt
mov
ljmp
js
pushl
addr16
bound
mov
add
inc
loop
add
or
xor
shlb
scas
or
shrb
call
lahf
adc
add
in
push
fiadds
and
and
out
xor
rcrl
sbb
lods
pop
cld
scas
jmp
xorl
xchg
pushf
adc
mov
jnp
jecxz
inc
rol
jnp
dec
push
jae
jnp
cwtl
inc
mov
sbb
mov
jle
inc
xor
lcall
pop
outsb
cmpl
paddb
hlt
inc
add
mov
inc
or
add
lret
js
jecxz
test
mov
leave
in
push
fisubs
in
pop
and
mov
lea
xlat
mov
sti
cmpsl
or
test
fs
mov
or
cmp
mov
add
xchg
ja
popf
add
pop
sub
and
movsl
xor
iret
adcb
push
in
stos
xchg
mov
mov
movsl
sub
push
and
jb
clc
pop
negl
scas
add
jnp
pop
jae
inc
test
scas
xchg
dec
insl
roll
cmp
test
dec
movb
je
jmp
shlb
push
dec
pop
mov
xchg
lods
mov
aam
cmpsl
insl
pop
aad
xchg
adc
int3
iret
mov
jge
jno
dec
fldt
sbb
push
repnz
cmpsb
dec
repnz
loop
jne
imul
icebp
inc
fs
test
iret
adc
test
push
scas
aaa
popf
adc
mov
xchg
fdivl
mov
push
orl
mov
push
stc
cmp
cli
jnp
jae
push
pop
xor
sub
push
and
std
dec
adc
outsb
sub
adc
push
pop
push
mov
int
incl
or
fcmovu
xchg
icebp
insb
fbld
jbe
push
xlat
and
aaa
and
nop
xor
pop
inc
xor
inc
pushf
mov
jge
out
sbb
mov
or
cli
and
xchg
in
adcb
cmp
or
test
fs
lss
call
int
cmc
mov
fucomp
mov
pop
jge
pop
add
mov
lods
fs
shrb
cmc
ja
ret
add
fimuls
sbb
popa
idivl
inc
add
and
cmp
push
iret
fnstenv
xchg
mov
es
rolb
jp
inc
pop
jb
mov
mov
in
lods
jge
inc
dec
int3
and
call
iret
mov
fistl
mov
or
clc
mov
rcrb
push
xchg
jnp
jl
es
dec
xor
lret
pop
int
or
es
js
pusha
out
xchg
ja
sbb
loop
jg
jne
daa
leave
mov
or
cmc
cltd
test
out
push
addb
jbe
rcrb
dec
mov
jno
add
imul
outsb
lods
lret
loop
dec
xchg
cmp
add
mov
fistps
cmp
das
sub
dec
nop
imul
sub
clc
sbb
mov
aad
stos
pusha
lcall
sbb
clc
push
xchg
xor
dec
imul
push
iret
cmp
ljmp
push
push
lds
push
fimuls
cmpsl
int3
out
addr16
inc
adc
jnp
test
stos
addl
push
mov
mov
add
negb
xchg
or
mov
mov
jg
fwait
jne
mov
gs
mov
cmp
mov
xor
dec
xchg
mov
ss
xlat
imul
or
and
adc
cmpsl
cltd
push
rclb
jg
and
lock
loope
xor
jl
xchg
push
mov
mov
shr
push
loop
inc
xor
fcompl
and
insb
jecxz
push
cmpl
cmp
mov
movsl
or
lds
std
icebp
icebp
dec
mov
je
insb
out
sbb
rorl
jg
insl
cmp
pop
cmc
mov
pop
rol
push
or
enter
iret
test
mov
and
xchg
mov
mov
ret
or
xchg
sub
sarl
adcl
shrl
or
jne
mov
ljmp
fnsave
movsl
xchg
xchg
daa
ret
decl
dec
adc
xor
xchg
sbb
pop
ss
xchg
enter
mov
arpl
out
xchg
inc
decb
enter
std
lcall
lret
cmp
test
call
xchg
inc
std
jmp
push
xchg
xchg
dec
ljmp
rolb
xor
or
jmp
xchg
dec
pop
xchg
push
mov
idivl
rcrl
mov
addl
adc
mov
jae
cmp
jne
push
popa
xor
adcb
add
int3
popf
xchg
jecxz
sbb
adc
mov
and
mov
or
fildl
push
ja
cmpsl
out
and
gs
push
mov
xchg
inc
jg,pn
aad
or
jne
data16
lds
inc
ljmp
cmpxchg
dec
in
xchg
aaa
imull
lahf
add
push
jno
cmp
sbb
adc
ljmp
jbe
and
push
mov
repnz
and
lret
mov
xchg
cmp
das
sub
insb
dec
mov
aaa
fimuls
out
mov
imul
jmp
shll
icebp
imul
pop
push
cmp
mov
sbb
sub
jb
lock
in
stos
fwait
test
ds
mov
push
push
sbb
jmp
ja
mov
pop
fmul
cmp
sbb
scas
sub
ss
xor
push
jecxz
pushf
filds
pushf
dec
mov
dec
mov
es
cmp
xor
mov
test
movsl
jo
push
dec
add
sbb
nop
imul
repnz
js
sbb
pop
lods
jo
mov
ljmp
lret
pop
cmp
enter
mov
jne
imul
mov
push
or
mov
insb
ret
dec
int
cmpsl
sbb
add
ret
inc
mov
pop
inc
pushf
mov
sahf
adc
cmc
push
ljmp
cwtl
jle
inc
std
mov
shll
sub
movsl
int
mov
bound
xchg
arpl
mov
loop
push
aad
add
mov
push
and
and
sbbb
and
pop
add
sbb
mov
ret
out
arpl
call
and
stos
push
test
rorb
imul
xchg
rorl
fsub
mov
popa
cmp
aad
rclb
inc
and
adc
lods
and
and
xchg
push
leave
out
enter
mov
push
addl
xor
mov
push
pop
xor
shll
push
mov
add
push
pop
aad
adc
or
xchg
mov
sbbl
and
stos
call
sub
loope
fs
jns
xor
xorb
lcall
jecxz
mov
roll
call
mov
cmp
push
shr
adc
shll
fnstcw
push
test
es
idiv
xchg
in
std
test
mov
pop
jne
das
out
daa
mulb
add
aas
jnp
test
sub
pop
outsb
shrl
dec
iret
movsw
movsl
mov
arpl
and
mov
sbb
adc
add
fsubs
shl
dec
aam
xor
dec
sub
pop
fnsave
cmc
fnstcw
push
js
in
outsb
push
enter
test
jb
inc
xchg
mov
cmp
cmp
pop
cmpsl
adc
aam
nop
and
pop
das
loopne
bound
cmp
les
dec
xor
punpckhdq
pop
mov
std
inc
pop
pusha
pop
mov
pop
rorb
stos
stc
bound
fisubrs
mov
insl
cmp
sbb
mov
sti
jle
orb
rcl
sbb
mov
sahf
or
fnstcw
push
xor
sbb
push
in
inc
push
xor
pop
sbb
push
and
xchg
adc
cmc
jo
outsb
mov
in
jne
xlat
rcrb
into
pop
and
push
xlat
in
jl
jne
ja
pop
lea
add
and
ljmp
pop
cmp
mov
ret
int
rcrb
gs
xlat
inc
inc
fmuls
add
popf
xchg
adc
dec
shl
movsb
lods
and
pusha
out
mov
leave
leave
push
rcr
push
pop
or
lds
adc
mov
adc
jno
sti
sbb
or
jae
loopne
push
jo
pop
mov
cltd
dec
out
or
lea
xor
adc
xor
test
xchg
xchg
pusha
mov
push
aaa
push
mov
leave
cmpsl
add
xchg
jp
dec
ffree
sbb
aad
xchg
cwtl
mov
push
sbb
inc
xor
in
lods
xchg
or
mov
rolb
popf
jl
test
and
aam
idivl
mov
mov
ljmp
mov
subb
scas
adc
jg
inc
add
inc
test
scas
sub
mov
icebp
stos
adc
adcb
cmpsb
pop
xchg
push
add
inc
and
jno
inc
popf
jbe
push
push
mov
push
shll
stos
lahf
notl
dec
daa
add
push
call
and
adc
mov
jns
ss
mov
add
jbe
mov
inc
test
out
jecxz
xor
ret
imul
pop
xor
sarl
call
sub
hlt
adc
lods
push
cwtl
or
or
jnp
sbb
add
dec
pop
rol
lret
jo
xchg
enter
outsb
inc
loop
jbe
mov
jle
jbe
stc
mov
fnsave
push
add
xchg
inc
mov
test
clc
jmp
mov
loopne
or
aas
mov
jg
xlat
cmpsl
push
dec
aam
cltd
hlt
fsub
lock
stos
xor
faddl
int3
jb
inc
inc
movsl
shl
stc
inc
sbb
push
push
icebp
jecxz
cmp
popa
popf
out
in
aam
in
add
add
or
adcb
shr
or
adc
dec
xchg
aad
mov
in
std
ljmp
in
mov
inc
jns
mov
fucom
sbb
sbb
lods
jle
fs
sub
push
inc
pop
pop
pop
adc
push
add
in
or
daa
lcall
jmp
inc
or
insb
out
lods
in
hlt
int3
and
pop
jl
ror
xlat
scas
into
out
rcrl
aad
ljmp
pop
testb
imull
push
notl
stos
adc
inc
pop
fcmovnbe
and
int3
cmp
jae
inc
jp
into
cmp
ja
clc
mov
sarl
sahf
mov
aad
xchg
out
push
xor
in
jge
jb
mov
add
mov
sbb
sbb
negl
or
jb
in
xchg
out
pop
std
test
mov
icebp
pop
es
mov
in
dec
test
add
int
push
mov
mov
cld
cmp
aaa
popf
add
sub
pop
movsb
imul
cmp
dec
cmp
and
push
sub
dec
mov
dec
mov
or
mov
fwait
test
nop
or
push
mov
sbb
fildll
cmp
in
jge
jp
insl
push
movsb
insb
les
mov
cmpl
shl
out
adc
pop
and
sti
fbstp
test
cmp
xchg
add
imul
or
add
test
inc
push
push
call
test
in
int3
clc
out
cmp
cwtl
ss
cmp
mov
mov
icebp
mov
sbb
pop
adc
or
imulb
aam
outsb
adc
mov
xrstors
out
insb
insb
pop
xchg
jnp
neg
js
push
inc
pop
xor
loop
cmpsl
dec
mov
repz
inc
dec
pop
js
xor
mov
js
jno
mov
scas
cmpsl
push
test
xchg
rcr
mov
or
cmpl
mov
mov
addb
mov
jb
cmp
lea
shl
cwtl
repnz
push
pop
mov
cmp
jb
push
mov
add
jl
enter
xor
aas
mov
or
addb
or
daa
sbb
add
dec
scas
cs
jge
add
adcl
push
cmp
or
mov
mov
fwait
cld
jge
dec
mov
dec
mov
mov
push
fstenv
mov
lret
add
enter
push
into
jbe
loop
and
mov
jae
repnz
fcmovbe
inc
outsl
or
test
mov
jl
dec
lods
jl
dec
add
mov
sti
cmp
sbb
mov
sti
mull
push
loopne
mov
push
pushf
push
sar
inc
mov
xchg
xor
int
inc
lea
out
jns
lods
mov
loop
repnz
scas
add
jmp
adc
arpl
outsl
mov
mov
lahf
mov
inc
test
ss
mul
mov
test
jo
in
xor
jl
inc
jno
rorl
ds
es
adc
push
cli
lret
lock
in
xchg
mov
pop
pusha
nop
push
jae
js
dec
jge
mov
and
insl
pop
or
pop
fiaddl
cmp
adc
ret
sti
loopne
test
pushl
stos
enter
aaa
push
push
pop
mov
subl
sbb
fcomp
stos
arpl
shrl
int3
or
pop
shll
fmul
cmp
arpl
inc
pop
int
mov
repz
xlat
add
cmp
pop
jg
mov
into
and
adc
xor
xor
iret
mov
xchg
sbb
push
ja
cmp
and
in
sbb
movsb
xchg
mov
mov
mov
mov
repnz
fmuls
sbb
and
adc
push
sbb
lock
std
popf
mov
or
out
call
repz
pusha
inc
xor
or
std
fidivrs
sub
dec
mov
mov
rcl
sub
scas
mov
repnz
xor
and
lea
std
loop
mov
fiaddl
imul
out
inc
jl
and
jbe
popf
imul
xchg
rol
pop
sub
pop
sbb
dec
leave
or
jle
scas
mov
lods
xor
andl
out
ljmp
stos
xor
and
lds
jg
imul
jne
xor
cmpsl
pop
mov
xlat
push
loope
data16
xchg
xor
xchg
je
mov
jne
xor
cmp
pop
stos
mov
cmpsb
divl
add
cmp
loop
js
test
sahf
xor
fistps
push
inc
add
daa
push
xor
test
cmp
mov
push
xor
inc
adc
mov
jns
dec
xchg
inc
stc
call
xchg
cltd
push
pop
rcr
cmp
adc
cli
rcr
inc
mov
add
cmp
jbe
ret
xchg
xor
dec
enter
stc
and
js
aad
test
dec
mov
insb
repz
jle
mov
js
push
call
mov
or
jge
dec
inc
push
mov
ss
lar
mov
ss
xor
pop
movsb
into
sarb
inc
pop
cltd
shr
jb
jge
mov
pop
fsubr
xor
rol
pop
or
jp,pt
in
cmp
mov
mov
sub
movsb
xor
push
loope
mov
xchg
pop
jge
mov
fisttpll
or
dec
dec
mov
mov
mov
inc
inc
jbe
lret
es
jge
xlat
out
cld
hlt
iret
lea
pop
loope
sti
pushf
leave
cmc
loopne
enter
and
incl
and
cmp
in
dec
ljmp
loope
jge
cmp
dec
andb
and
cmpsl
xchg
je
jecxz
add
jne
iret
pop
push
push
cmc
stc
js
inc
mov
jmp
push
fnstenv
dec
jl
dec
push
ret
mov
push
pop
test
inc
aas
xlat
rcl
fidivs
ss
mov
jnp
jp
ficoms
mov
es
adc
push
push
xor
insl
push
out
or
ja
popa
mov
cltd
sub
jne
xchg
leave
ffree
sub
inc
xchg
dec
addr16
out
push
andb
cwtl
jmp
shr
test
int3
add
xchg
enter
int
pop
das
popf
xchg
adc
roll
xor
jnp
dec
jmp
sarb
dec
gs
outsl
iret
movsl
ljmp
std
sub
stos
push
push
rcll
and
ret
cli
cmp
insb
shrl
loopne
mov
aaa
and
jge
push
sti
push
int3
mov
mov
ret
inc
test
mov
adc
sbb
movsb
sub
stc
or
sub
sahf
lds
mov
adc
push
negl
popa
bound
nop
sub
and
add
xchg
cwtl
popf
cltd
enter
jae
dec
in
mov
cld
xor
xchg
cmp
test
sahf
dec
test
outsb
push
jmp
mov
loope
xchg
arpl
adc
addb
cmpsb
leave
imul
loope
inc
jmp
sub
mov
push
mov
scas
cltd
pusha
or
cmp
pop
cwtl
inc
mov
dec
hlt
mov
lret
out
push
pop
inc
mov
loopne
push
mov
movb
sub
mov
jo
and
inc
push
jmp
jns
jp
fmuls
cmp
dec
jnp
andb
clc
sub
filds
fsubp
sub
jb
outsl
js
push
notb
adc
addb
mov
imull
lcall
pop
push
les
arpl
arpl
xchg
push
js
jb
sub
fstl
mov
hlt
and
inc
out
adc
jp
aad
scas
cmp
stos
repz
cmp
movsb
in
jecxz
test
imul
adc
scas
mov
sbb
and
mov
mov
mov
inc
ds
das
cmp
pop
ljmp
sbb
mov
xor
xchg
mov
jb
inc
sarl
lods
inc
sub
xchg
incb
adc
loop
dec
push
mov
cmpb
rcrl
popf
and
cs
push
push
sub
out
mov
sbbl
cmc
push
mov
jnp
mov
lea
mov
dec
stos
inc
jecxz
scas
int
jle
xlat
dec
mov
sub
adc
loopne
xchg
bound
or
mov
pop
ds
mov
lcall
dec
orl
lcall
jno
mov
jnp
lret
shl
mov
add
in
in
sbbl
pop
fnstsw
aaa
inc
inc
mov
pop
dec
cmp
mov
shll
inc
and
mov
mov
sti
cld
pop
test
in
into
pop
shr
ret
and
cmp
dec
fdivrs
xor
dec
or
ljmp
mov
pop
inc
sub
inc
add
test
fistpl
mov
pop
cmp
into
or
imul
add
enter
sbb
test
pop
push
fdivrs
bound
xor
inc
cmpsl
inc
enter
jb
insb
clc
idivl
lahf
adc
inc
sub
mov
dec
in
loop
fidivrl
dec
push
outsb
mov
cmp
pop
lock
adc
sub
bound
cwtl
mov
dec
int3
insb
and
lahf
pushf
jnp
xchg
pop
arpl
in
cmp
adc
push
sub
inc
dec
lods
mov
xor
mov
xor
loopw
subb
mov
dec
inc
std
fwait
push
adc
or
mov
popf
inc
leave
enter
lcall
bound
mov
arpl
push
xlat
cmp
gs
test
loope
mov
imull
cld
lods
or
add
into
insl
dec
std
or
xor
mov
outsb
add
sub
hlt
dec
mov
add
add
mov
push
push
les
mov
das
dec
sbb
xor
aad
push
fsubrs
and
and
xor
aas
jbe
mov
movsb
dec
mov
andl
mov
fxch
push
lea
and
idiv
jg
lret
fisttps
imul
lret
sub
sub
cmp
mov
adc
out
pop
stos
outsl
ds
fwait
adc
mov
mov
shrb
and
mov
xchg
push
leave
mov
loope
pop
insl
es
daa
imul
pop
arpl
xchg
icebp
push
xor
bound
sub
daa
dec
mov
stos
mov
lock
sub
ret
lods
sahf
into
push
mov
xor
dec
fcmove
pop
insb
lret
bound
pop
xchg
jmp
xor
stc
or
push
add
push
jns
jg
es
pop
push
cmc
push
out
mov
fimuls
das
inc
xor
mov
ss
rorl
inc
out
shrb
js
sub
cld
pop
ficomps
lods
inc
in
cmpsb
pop
iret
dec
push
bound
adc
jmp
lock
addr16
sbb
jnp
jno
jbe
xchg
mov
mov
push
lock
jne
adc
sub
xor
sbb
fs
ret
add
and
cmpsl
pop
dec
icebp
scas
mov
int3
pop
das
cmpsb
and
mov
cmp
push
push
sub
jae
jecxz
adc
and
in
cmc
loope
gs
outsl
sbb
cmc
divl
adc
ljmp
push
fucomip
ljmp
dec
fdivrl
add
fwait
stc
mov
inc
lods
jne
xor
and
in
or
ljmp
popa
dec
mov
pusha
cltd
lahf
pop
jne
cmp
call
jg
cmpsl
sbb
xchg
jne
or
jns
daa
mov
loopne
push
add
sbb
add
cmp
cld
mov
dec
js
adc
pushl
test
fs
dec
cmp
out
cmp
mov
and
mov
cmp
mov
scas
xor
xchg
adc
lret
repnz
inc
cmp
adc
addr16
lock
adc
sbb
out
mov
fcmovu
test
idivb
pushf
nop
mov
shrl
aaa
in
inc
sti
data16
lock
sbb
lods
add
js
outsl
insl
pandn
jle
in
orl
arpl
cmpsl
daa
pop
mov
outsl
adc
mov
roll
call
bound
pusha
out
cmpsb
jmp
and
test
roll
ret
pop
and
shrb
mov
sub
pop
vmulps
lods
mov
jl
inc
ret
and
das
ja
inc
sbb
in
mov
fistl
int
or
stc
cwtl
cld
popa
cmpsl
push
leave
popl
push
stos
iret
imulb
cmp
sbb
ja
pop
arpl
lret
mov
and
xchg
fwait
jbe
fxch
jbe
pop
imul
xchg
imul
cmp
movsb
cs
mov
push
and
addl
std
adc
sub
pusha
dec
sbb
ret
int3
dec
outsb
or
add
cmp
movsb
and
addr16
sbb
ja
push
mov
sbb
jl
shl
add
aam
lret
pop
fmuls
sti
mov
dec
call
hlt
shl
stc
add
sbb
and
adc
add
pop
mov
cmc
test
xchg
lcall
and
pop
pop
mov
scas
jo
pop
lret
das
mov
or
scas
dec
fwait
mov
nop
lret
push
stos
mov
inc
orb
loope
pushf
mov
test
sbb
xchg
add
lock
fwait
adc
xchg
push
outsl
or
xor
in
stc
into
and
sbb
or
sub
cmp
js
sub
mov
repnz
cmc
pop
loope
ficoms
and
jnp
shll
xchg
outsb
xchg
add
push
imul
pop
pop
xor
or
mov
adc
xlat
mov
cli
push
bound
icebp
lods
jmp
adc
lret
or
inc
imul
or
and
inc
push
loope
mov
lock
mov
jno
dec
and
inc
mov
add
daa
fimull
jp
push
rol
movsl
and
sub
inc
aaa
rorl
loop
jb
pop
fadd
gs
or
mov
stos
sub
int3
in
imul
loopne
pop
and
cli
fs
push
push
int
push
xor
jb
repz
xchg
inc
lds
mov
push
std
mov
mov
dec
cmp
pop
lcall
outsb
xor
xchg
shll
cmc
fildll
and
test
dec
jbe
fists
xchg
insl
repnz
iret
shll
aaa
sub
call
cmp
int3
xor
in
ret
shlb
mov
xlat
hlt
bound
mov
in
pushf
jb
xor
mov
imul
test
cld
adc
inc
cmp
into
shlb
loope
xor
jno
imul
fwait
push
inc
shrb
pop
xchg
xchg
pop
adc
ret
rorb
shrb
push
jnp
xor
gs
arpl
test
jo
dec
into
sub
aad
icebp
inc
ds
and
in
dec
mov
or
frstor
cmc
loopne
fldenv
fstpl
negl
sarb
lahf
xchg
xlat
add
repz
cmc
in
cmp
push
int
arpl
stc
testb
scas
pop
ja
sahf
repnz
push
repnz
cmpsl
frstpm(287
xchg
ror
hlt
mov
mov
out
cmp
rcr
in
data16
test
fdivs
sbb
xor
ficoml
jae,pt
fildl
sbb
or
sub
sbb
inc
test
xchg
xor
mov
pop
dec
dec
cmpsl
mov
xchg
imul
cmp
jnp
clc
adc
jne
inc
dec
mov
pop
mov
add
mov
test
lds
sub
or
xor
loop
int3
cmp
dec
dec
push
enter
inc
xchg
lea
je
mov
shll
mov
and
into
idiv
mov
lods
push
inc
mov
pop
adc
pusha
pop
sub
pop
lret
push
sub
mov
push
into
jae
in
mov
dec
lods
int
pop
xchg
xchg
lock
cmpsb
lcall
dec
pop
cmp
or
xor
sub
mov
add
push
and
push
stos
jnp
test
xor
shll
cmp
out
xchg
int
sub
inc
jle
fs
xor
push
push
dec
xor
jmp
les
lahf
mov
fwait
mov
and
or
sub
xchg
jle
mov
pop
leave
out
leave
std
xchg
xor
das
push
add
nop
mov
aam
out
std
inc
iret
pop
dec
cmp
fwait
mov
mov
mov
push
push
in
xchg
lcall
cli
inc
add
mov
push
out
fiaddl
aad
movl
lock
mov
jne
cli
insl
and
push
shl
lcall
add
sbb
mov
mov
push
inc
jne
in
fcompl
cli
ret
jbe
ds
inc
mov
cltd
insl
aaa
push
jne
mov
jne
mov
or
pop
fwait
rorb
out
lret
fs
aam
mov
xor
pop
mov
std
sbb
inc
lret
mov
jbe
mov
adc
bound
lods
test
pop
push
ds
jne
repnz
mov
iret
sbb
push
jmp
push
add
jae
flds
cmp
fisubrl
xchg
add
add
ret
xor
cltd
dec
adc
js
lods
jecxz
jnp
mov
scas
sbb
pop
xchg
xor
scas
xchg
jecxz
jns
mov
outsb
cmc
adc
mov
jmp
ret
jnp
cmp
fidivs
mull
cmp
push
fsubl
fcomip
pushf
fdivrs
lret
pop
loope
ret
aaa
inc
cwtl
scas
enter
enter
dec
sub
inc
call
cmp
cmp
jl
lret
std
pop
lock
jne
inc
into
mov
xchg
dec
rorl
sahf
xor
pop
imul
rorl
sub
fidivrl
jns
test
aaa
push
int
or
out
loope
int3
lcall
call
pop
and
mul
sub
push
int3
pop
push
jb
push
cwtl
in
mov
xchg
push
mov
lock
mov
sbb
popf
mov
gs
loopne
lcall
jb
aad
shrb
inc
mov
cltd
sub
sbbl
daa
pop
add
pop
lahf
mov
push
arpl
mov
movsl
push
inc
cmpsb
pop
outsb
pop
jns
jne
xchg
adc
xchg
ss
sub
fcmovnbe
data16
mov
enter
cli
lods
jbe
test
stos
sub
push
cmp
xor
inc
imulb
or
sub
adc
jp
pop
es
push
aaa
cmp
cmp
lods
mov
sahf
adc
orb
in
add
sub
push
xor
in
add
roll
je
pop
sahf
dec
mov
int3
inc
or
mov
or
data16
sub
jno
js
cmpl
jnp
adc
sahf
shlb
mov
mov
mov
lods
xor
mov
jl
mov
mov
xchg
not
shl
loope
mov
and
leave
lcall
outsb
repnz
xor
addb
sbb
aad
or
add
ret
pop
pop
ret
loope
popa
aaa
mov
push
jmp
mov
fcmovb
or
dec
lcall
push
sbb
lods
int3
add
cmpb
xchg
mov
sub
repnz
hlt
insl
andl
jae
ja
int3
cmp
jmp
jmp
mov
lcall
sub
addr16
mov
inc
orps
or
xor
repz
int
js
or
jge
jo
mov
loop
or
dec
xlat
into
xor
sbb
stc
or
popa
cmp
inc
xchg
and
shlb
loopne
dec
ljmp
xor
es
shl
outsb
sub
pushf
cmpsb
in
rcr
adc
mov
bound
jnp
mov
test
jge
dec
rcll
sbb
div
and
stc
loope
popa
push
movsl
mov
and
sbb
mov
fs
mov
push
dec
mov
push
xlat
bound
fxch
and
test
cmc
xchg
push
sub
adc
imul
add
cs
scas
cmp
inc
xchg
sub
sub
ds
adc
or
repz
pop
arpl
push
jl
and
mov
pop
movsl
aas
std
pop
mov
adc
lret
and
push
frstor
xchg
or
jg
repz
and
mov
jmp
test
ds
mov
out
outsb
dec
mov
mov
mov
leave
mov
aam
sbb
push
sub
or
cmp
jecxz
dec
push
sub
mov
sbb
mov
ret
and
test
cmpsb
insl
jae
inc
dec
fdivl
mov
shll
loope
jne
xor
outsl
xor
mov
into
inc
into
sub
xlat
cmpsl
sub
add
cmpsl
imul
aad
scas
in
arpl
adc
inc
inc
or
add
add
rcrb
fisubrs
mov
fsubrs
sub
add
mov
fisubl
adc
mov
inc
push
les
mov
xor
or
add
daa
rcrb
dec
in
dec
imulw
in
loope
repnz
subl
mov
test
in
dec
and
push
addr16
push
nop
cltd
rcr
sbb
addr16
push
negb
inc
ret
shll
call
mov
push
mov
dec
push
aam
or
fcoml
scas
jmp
test
repnz
sbb
sbb
negl
imul
push
test
pusha
test
mov
leave
mov
fcmovnbe
gs
std
into
sub
addb
sub
and
jmp
dec
xchg
enter
cmp
imul
cmp
test
bound
cmp
imul
sub
mov
fwait
arpl
aad
mov
repz
jle
mov
or
xchg
mov
sbb
aas
push
aam
adc
js
adc
mov
test
cmpsb
fsubl
sub
push
stos
movsb
mov
insl
notl
and
pop
das
xchg
insl
push
out
dec
loopne
dec
lcall
scas
hlt
divl
or
rcrb
mov
in
int
jge
ss
ficoms
adc
rcll
push
jae
mov
fwait
cs
inc
inc
add
jl
repnz
scas
nop
xor
test
test
xchg
and
mov
outsb
ret
lcall
mov
iret
popf
push
pop
leave
stos
mov
sub
fidivs
daa
adc
in
outsb
and
in
popa
enter
or
sbb
lret
cmp
or
scas
insl
add
call
scas
xchg
int
adc
mov
push
sub
sub
imul
sub
or
daa
enter
mov
int3
fdiv
jg
dec
out
pop
clc
cwtl
adc
jo
push
lods
inc
in
idiv
test
movsl
sbb
sbb
xor
adc
push
jno
and
pop
cmp
jp
movsb
cmpsl
aam
lcall
arpl
mov
jae
rorl
and
and
fidivrl
stc
inc
insl
xor
pop
cli
ret
sbb
sbb
lahf
mov
pusha
mov
addl
pop
call
mov
xchg
cltd
fwait
lods
rcll
xchg
cld
jae
adc
jl
add
dec
or
or
loop
xchg
and
push
fidivrl
sbb
dec
ret
fadds
mov
inc
inc
sub
es
xlat
dec
int
mov
jecxz
mov
adc
add
test
mov
xchg
test
sbb
fwait
xorb
jb
scas
movsb
sbb
fnstcw
cmp
add
push
mov
mov
imul
jno
aas
cwtl
mov
push
xor
add
popf
or
arpl
fcomps
sarl
popa
cmc
aas
add
fistps
dec
cmp
xchg
or
add
jp
pusha
mov
mov
cwtl
mov
mov
push
xor
out
add
xchg
enter
sbb
adcl
mov
ljmp
sbb
inc
sub
loope
mov
sbb
sbb
cmp
push
cmp
sbb
sub
jg
push
mov
mov
test
add
cli
insl
mov
cld
xor
ret
add
push
xlat
loop
and
inc
jge
lock
push
adc
out
inc
data16
mov
cmp
out
and
mov
movsb
sub
daa
xchg
mov
pop
inc
dec
fadds
and
in
leave
in
xchg
fidivl
rolb
add
mov
scas
ret
fldl
mov
mov
sbb
sub
test
idivl
sub
mov
push
test
inc
hlt
js
push
adc
loop
inc
imul
mov
test
sti
jns
into
push
inc
rorl
add
sti
mov
push
fnstsw
inc
inc
iret
cld
in
cli
mov
enter
dec
addr16
movsb
cwtd
mov
outsl
dec
xchg
xor
rcll
icebp
sub
arpl
jle
jle
jmp
sub
cs
mov
lret
xor
inc
ret
leave
lea
cmc
pop
test
sti
mov
das
in
js
xor
fcomps
cltd
xor
xor
jl
mov
sub
mov
sbb
cltd
cmc
adc
jmp
movsl
ret
inc
dec
inc
adcb
dec
mov
mov
outsb
cmpsl
xchg
mov
rorl
and
sbb
inc
sbbb
mov
xchg
sub
dec
into
dec
push
fsubs
fucomp
sahf
cmp
xchg
or
or
jns
imul
adc
popf
or
pop
test
cs
movsl
stos
mov
cmp
push
xor
pushf
dec
out
test
pushf
fdivr
mov
bound
in
pop
add
jne
dec
or
dec
xchg
enter
sbb
movsl
mov
ljmp
sbb
pop
test
jb
sub
rol
std
out
jbe
xor
adc
pop
cmpsl
out
sbb
mov
call
int3
out
std
push
sahf
jg
push
xchg
sub
pop
leave
inc
add
loop
or
jg
xchg
notb
xor
es
callw
push
sti
lcall
and
btc
gs
scas
or
mov
xor
and
lret
sahf
mov
lea
mov
jg
ljmp
mov
xchg
mov
push
lock
or
inc
jg
lahf
ret
nop
cmp
inc
scas
ljmp
movsb
lahf
and
lahf
mov
faddl
inc
aaa
pop
inc
inc
xor
dec
es
add
cwtl
fsubrs
cli
ja
jle
adc
enter
and
ljmp
add
stos
pop
int
test
fists
cmpb
iret
popf
sub
inc
call
mov
rorb
xchg
mov
cmp
insl
dec
xlat
mov
mov
es
adc
jmp
adc
jg
cmp
xor
icebp
xor
mov
xchg
psrad
pop
test
xor
jmp
das
jnp
shrb
xlat
jmp
adc
loope
pop
push
mov
jmp
fwait
mov
or
icebp
inc
or
push
fs
sub
pop
lock
mov
or
dec
xchg
test
test
cmpsb
lods
sbb
mov
xchg
add
leave
fwait
and
fnstsw
outsl
xor
sbb
dec
outsb
jmp
shl
mov
movsb
repz
jl
enter
les
lock
mov
repz
outsl
sub
in
mov
add
test
or
int3
loop
and
ds
sbb
fisubrl
jmp
jmp
sarl
add
cmp
sub
xor
test
inc
movsl
jae
dec
xchg
iret
xchg
xor
dec
test
ds
or
jl
mov
repz
addr16
lock
rcrb
add
pop
xor
aas
pop
dec
std
sbb
in
leave
iret
fdivrl
or
cli
push
shll
xchg
es
fldt
push
rcrl
pop
jne
lahf
sub
add
gs
rcll
inc
pop
xchg
inc
cmp
shrb
mov
scas
mov
in
jb
outsb
adc
push
fwait
sub
subb
lcall
push
ret
push
mov
push
mov
dec
xchg
xor
scas
xlat
push
fnstenv
stos
pop
icebp
xchg
mov
pop
test
xchg
xchg
xor
stos
push
fs
movsl
aad
pop
scas
xchg
dec
lret
imul
inc
push
sbb
sbb
xchg
fidivrs
mov
fs
insb
icebp
add
and
insb
pop
fisubs
pop
icebp
mov
daa
imul
dec
inc
scas
dec
sub
or
pop
inc
stos
sar
sti
pop
cltd
sbb
jmp
cmp
dec
call
cli
cmp
out
jno
pop
clc
mov
pop
addr16
add
mov
nop
cwtl
or
daa
outsb
sub
loope
push
lret
daa
cmp
mov
out
orl
pop
dec
pop
add
dec
out
mov
sbb
in
push
and
add
push
addr16
xchg
les
fiaddl
cli
bound
out
xchg
or
or
pusha
cmp
stos
pop
cld
mov
stc
cmp
add
sbb
inc
fimull
and
in
fisubrl
push
or
mov
cmpsb
addl
dec
cltd
std
movsb
ds
stos
arpl
cltd
stos
cmp
leave
adc
mov
ds
aas
pop
pop
dec
pop
aaa
ds
lret
pop
push
push
ljmp
in
lods
loop
and
adc
jl
sub
push
sbb
ficoml
insl
aam
loop
mov
dec
xchg
sbbl
add
push
fsubr
mov
stos
sbb
cmp
xor
cs
sub
jecxz
pusha
mov
outsl
jo
ror
inc
lods
add
lea
mov
mov
test
mov
jns
out
cli
xchg
cs
pop
sbb
out
gs
dec
test
dec
out
mov
je
mov
ja
mov
mov
repnz
or
mov
mov
mov
mov
frstor
mov
mov
loopne
xchg
xchg
xor
inc
mov
mov
xchg
fdivs
fucomip
cld
inc
xchg
xor
ret
inc
out
add
push
jae
cmp
and
aas
sbb
iret
movsl
push
sahf
test
js
xchg
pop
cmpsb
cmp
adc
les
int3
ss
inc
inc
or
in
negb
ss
mov
in
daa
xchg
lds
mulb
iret
cli
xor
jnp
sub
iret
and
xchg
insb
in
rorl
repz
cmpl
je
jg
sbb
data16
add
pop
stos
shl
es
push
jmp
orl
mov
dec
add
ja
ficomps
call
movsl
pushf
test
xlat
ret
lret
push
push
jmp
das
xchg
jb
sbb
ja
push
and
push
into
loop
in
testb
sarl
int3
mov
std
daa
xor
sbb
jae
push
dec
lds
dec
and
cltd
and
into
dec
mov
push
inc
push
andl
jmp
mul
orb
pop
repz
mov
pop
mov
ljmp
movsb
mov
adc
xlat
xchg
pop
or
mov
rclb
arpl
lods
xchg
cmp
pop
shl
icebp
fwait
bound
adc
sbb
jge
push
add
ret
imul
shll
jno
mov
cmpsl
push
nop
cmp
xor
jbe
sbb
les
mov
and
lods
add
mov
in
fmulp
jecxz
pop
loope
inc
shlb
out
dec
xor
in
jbe
lods
cmp
and
jl
xor
xchg
sbb
adc
and
pushl
push
rorl
loop
cmp
push
jl
jle
and
and
popf
mov
push
aad
addr16
or
dec
inc
ret
loopne
add
movsl
test
sub
mov
add
jp
andl
xor
push
adc
aas
gs
jo
cmc
cmpsb
lret
lcall
mov
push
pusha
push
fcoms
daa
add
adc
cld
popf
mov
xchg
bound
xchg
xchg
jge
jbe
push
dec
mov
in
pop
xchg
iret
xchg
xchg
xor
and
daa
and
jbe
push
sub
mov
repnz
jl
xchg
loop
int3
addr16
xchg
nop
stc
and
inc
mov
test
cs
or
mov
lahf
insb
jnp
sub
xchg
mov
cmpsb
jmp
inc
pop
lahf
faddp
push
sahf
test
je
adc
sbb
mov
mov
pop
faddl
gs
in
or
lock
aaa
into
lret
sbb
pop
ds
les
pop
cltd
or
mov
and
push
xor
jle
subb
adc
xchg
sub
and
in
mov
adc
xor
dec
fnstsw
dec
test
dec
jg
leave
in
test
push
mov
fiadds
lods
sahf
in
jle
xchg
cmp
scas
fcoml
aaa
jnp
inc
scas
cmp
int3
dec
js
xchg
testb
std
lret
sub
pop
or
dec
xor
xorl
iret
jmp
add
inc
in
inc
test
mov
fstp
sub
leave
add
fsubrs
lods
and
cld
fwait
dec
xchg
loop,pt
scas
or
pop
mov
outsb
in
dec
adc
mov
jne
jp
in
sub
jp
push
xor
jo
push
jbe
int3
mov
mov
push
cmp
pop
testl
cwtl
repnz
cmp
hlt
push
aam
outsb
test
fsts
sbbb
movsb
mov
jo
jbe
mov
sbb
and
aam
add
mov
imul
add
aaa
rorl
insl
push
xchg
pop
xor
inc
adc
pop
sarl
cmp
shll
push
add
push
fwait
mov
cwtl
fstpl
inc
jl
jp
lods
ss
hlt
les
jns
add
faddl
stos
push
rcrb
pop
xchg
fidivrl
leave
ja
and
push
and
test
pop
or
xor
xor
and
fdiv
mov
mov
ret
testl
and
insb
out
sbb
jae
jnp
ja
call
pop
call
sub
xchg
jmp
dec
pushf
xor
loopne
jo
loope
cwtl
movsl
cmp
scas
ds
mov
sahf
push
pop
jae
xlat
push
jo
fadds
or
inc
inc
jmp
or
repz
lret
cmp
inc
jo
popf
je
push
add
leave
pop
cmp
stos
repnz
fimuls
jge
jns
aaa
mov
xchg
jg
pop
or
inc
shrb
iret
ret
clc
or
and
pusha
mov
sbb
iret
mov
ja
pop
xchg
xor
les
sub
sub
iret
xor
pop
or
pop
xchg
push
mov
test
xchg
imul
pusha
push
imul
test
outsb
push
mov
fsubl
hlt
mov
ljmp
push
push
jne
cltd
addr16
scas
xchg
jb
mov
ret
inc
xchg
outsl
mov
movl
ret
and
movsl
mov
pop
movsb
out
mov
jmp
inc
and
dec
mov
ja
xchg
pop
insl
dec
ret
jecxz
dec
popf
ret
mov
out
aaa
bswap
cmp
out
and
lea
push
mov
and
or
pop
lods
scas
rcl
ss
or
stos
sbb
movsl
dec
pusha
or
mov
or
or
in
pusha
push
ret
shrl
rclb
into
mov
scas
lahf
pop
repz
rol
rcll
or
xchg
and
lea
jl
mov
gs
sbb
mov
mov
pop
cwtl
stc
fwait
std
idivb
in
lret
mov
stc
imulb
mov
adc
outsb
jecxz
pop
xchg
mov
and
xchg
and
lcall
fs
mov
test
mov
test
aam
adc
jno
mov
pop
fdivs
jecxz
aas
adc
ds
xchg
popa
sbb
dec
in
pusha
inc
bound
cmc
pop
pop
outsl
test
fs
insb
pop
fldl
add
pop
aaa
lret
mov
aad
push
std
inc
imul
dec
mov
mov
jmp
adc
clc
fstpl
cli
sbb
pop
ficomps
or
pushf
imul
mov
push
push
pop
cmpsb
inc
enter
es
and
aas
imul
xor
cld
mov
and
mov
outsl
fnstsw
insl
fwait
cmp
negb
into
cmpsb
push
rorl
adc
mov
sbb
adc
lea
or
jns
push
adc
insl
int
test
scas
movsl
je
in
lret
rcr
sub
pop
dec
cmp
dec
cmp
fldcw
ds
or
mov
xchg
bound
pop
sti
xchg
xlat
daa
xor
aad
loop
cmpsb
pop
cmc
imul
stc
fildll
and
stos
enter
shl
push
lret
fadds
ljmp
push
mov
dec
jle
decb
xor
sbb
mov
inc
das
bound
add
add
imul
dec
in
lods
outsl
stos
cmp
mov
out
jmp
xchg
add
add
cmc
fcmovu
dec
lods
nop
lods
pop
sbbb
adc
jae
mov
out
xor
sbb
out
inc
xchg
out
sub
out
insl
push
shlb
or
add
xchg
loope
lock
rorl
mov
mov
out
arpl
movsb
pop
pop
cmc
xchg
repz
int3
xchg
fldt
jo
xchg
in
movsl
popf
sub
inc
outsl
jmp
jo
push
cmp
cld
test
repz
or
fstpl
cli
inc
and
scas
sti
xchg
mov
mov
call
out
xchg
mov
hlt
cmp
push
lods
sub
jo
lret
mov
orl
mov
repz
mov
out
inc
xor
vandps
enter
add
cmp
call
pop
fnsave
mov
jne
test
mov
mov
pop
ja
popf
loop
mov
test
xchg
adc
inc
cli
xor
in
iret
sub
arpl
adc
inc
mov
xchg
mov
push
mov
aam
jl
push
rcrb
and
clc
stos
loop
sub
popa
insl
or
lods
enter
cs
sti
fsubl
dec
ja
inc
subb
sub
jnp
mov
push
pop
xor
inc
lds
xchg
sti
aas
adc
std
je
sub
loop
je
ds
in
push
lret
jns
call
imul
imul
std
iret
xchg
xchg
adc
cld
mov
sbb
insb
cmc
mov
or
xlat
out
sbb
and
pop
and
test
mulb
in
cs
popf
mov
push
mov
inc
sub
xchg
ljmp
push
pop
jmp
ds
push
or
out
int
movsb
jmp
xchg
or
or
or
xor
loope
push
xchg
popa
mov
daa
xchg
adc
jp
push
je
fmull
icebp
imul
shrb
mov
repnz
gs
rep
mov
mov
or
xchg
or
adc
sub
popa
pop
aad
push
xchg
push
cmp
inc
add
sbb
cmpl
dec
add
cmp
out
stos
outsl
testl
das
outsl
push
insl
mov
lods
mov
adc
or
cld
push
dec
sar
lret
rclb
mov
in
inc
lods
fs
inc
jmp
shlb
daa
cmp
cmpsl
iret
sub
mov
cmp
jmp
jnp
aam
icebp
jb
inc
sti
push
jo
mov
cmp
es
addb
inc
fcoms
sub
xchg
shrb
pop
mov
les
inc
das
aas
or
mov
xchg
xlat
out
xchg
or
jne
mov
mov
pop
add
loopne
pop
stos
adc
mov
sub
pop
dec
in
mov
adc
std
xor
push
lock
pop
pop
dec
repz
jmp
sbb
lds
inc
fdivp
shll
enter
fwait
dec
cwtl
movsb
mov
je
cmp
push
push
inc
out
mov
loopne
lret
jle
dec
adc
dec
inc
popa
inc
mov
push
iret
andb
jp
je
in
xlat
nop
cmc
repz
fisubs
pop
mov
lock
or
jmp
add
mov
into
push
mov
rol
orb
xorl
aad
shlb
stc
loope
test
lock
pop
pop
nop
or
dec
popl
mov
lret
shrd
adc
mov
sbb
jns
lods
jbe
add
xor
pushf
cmc
ss
fildl
popa
addr16
adc
in
sbbb
and
mov
iret
fdivp
push
stos
je
call
cmp
mov
js
mov
push
mov
lods
jae
pop
repz
enter
push
sbb
outsl
dec
inc
xlat
sbb
icebp
xchg
mov
or
sbb
aad
lea
repnz
add
repnz
and
pcmpeqb
dec
mov
pop
mov
cmp
sti
jns
xor
repnz
push
daa
out
fdivrs
inc
adc
fstp
aas
out
outsl
iret
inc
mov
hlt
cmp
push
xchg
mov
data16
dec
in
pop
mov
mov
loopne
jp
sti
loop
mov
arpl
arpl
jae
adc
mov
lock
fidivrs
inc
lahf
call
stos
imul
mov
mov
cmc
rclb
jg
mov
jo
imull
cs
or
test
pmaxsw
cmp
xor
enter
pop
dec
jle
imul
adc
cmp
push
cmp
out
and
cmc
enter
aaa
test
jne
lcall
or
fs
lea
sbb
lock
js
inc
mov
in
negb
insl
xchg
cwtl
loopne
xor
dec
test
dec
mov
xor
pushf
fcmovnb
in
push
sub
rorb
xchg
or
xchg
cmpsl
cmp
push
and
sub
pop
cmp
and
ffree
scas
loop
fldenv
popf
insb
test
mov
sbb
push
outsb
imul
xchg
stc
int3
cmp
cmp
test
pusha
sbb
out
jl
xchg
dec
repnz
mov
or
pop
stos
or
mov
hlt
iret
push
cld
adc
popa
cld
jl
aaa
jle
adc
mov
xchg
or
lret
xor
inc
scas
jne
insb
gs
imul
jmp
push
mov
add
out
movb
shll
inc
cmp
sub
rcrl
cmp
pushf
dec
pop
sti
sbb
insb
outsl
xchg
pop
jns
xchg
xchg
and
jb
aam
cld
aas
sbb
jb
adc
fsubs
pop
loope
push
sub
jmp
loopne
cld
fwait
push
fwait
adcl
dec
xchg
pop
push
call
es
cli
cltd
cwtl
mov
leave
loope
subl
ljmp
es
fcomps
xor
jae
cmpsb
cmpsb
aas
into
out
xchg
and
sbb
lret
jge
xchg
add
fwait
xor
jae
mov
push
jo
jg
sbb
inc
mov
and
cmpsl
mov
orl
pop
cmpsb
pop
cli
cld
jbe
mov
lcall
adc
mov
lret
jo
cli
mov
sbb
gs
xchg
xor
and
inc
mov
mov
notb
xchg
pop
hlt
ret
loop
movsb
pop
incb
out
lahf
out
pusha
sarb
mov
add
pop
push
jg
scas
into
rcl
lea
push
sbb
call
xorb
jnp
xchg
add
ficompl
in
rorl
scas
sbb
cwtl
lock
fnstcw
cmp
mov
inc
mov
outsl
or
and
in
call
and
xchg
jge
inc
or
cltd
ja
sbb
mov
mov
push
repz
dec
push
insb
mov
inc
push
fadd
or
lock
push
lods
xor
jne
dec
lret
xor
mov
popf
push
in
stc
jecxz
imul
aam
lcall
adc
ja
bound
lock
mov
jp,pn
das
mov
aas
imul
xchg
enter
sub
mul
push
cs
call
repz
insl
inc
inc
arpl
lret
push
jbe
sub
inc
rorl
and
dec
and
ss
inc
cld
mov
test
std
imull
out
add
loopne
hlt
test
pop
mov
sub
mov
add
inc
outsl
add
nop
mov
dec
arpl
and
jle
ja
out
lds
push
aad
fucomip
xlat
mov
out
add
sub
pop
and
repz
cmp
lahf
cld
sub
mov
xchg
imul
aaa
mov
in
repnz
adc
push
push
pop
pop
xchg
arpl
adc
inc
ret
fwait
lods
push
lea
aaa
mov
cmpb
int3
mov
not
daa
cwtl
dec
repnz
mov
push
popa
and
loope
pop
dec
dec
pop
lods
sub
call
int
test
adc
push
movsb
repz
push
mov
loop
insl
inc
jns
hlt
fmulp
dec
ss
add
mov
sbb
bound
add
subl
inc
cmc
mov
pop
and
jmp
sub
xor
fidivs
mov
dec
cmp
cmp
dec
sbb
dec
push
or
addl
push
push
mov
insl
cs
push
fisttps
mov
mov
jb
ss
pop
push
jmp
ret
add
mov
jno
xor
jae
shlb
mov
leave
dec
jp
addb
inc
xor
jno
push
mov
in
icebp
xor
lds
ficoms
movl
xchg
inc
sub
dec
inc
mov
dec
cwtl
pushf
scas
pop
shlb
lods
mov
cmp
add
pop
mov
mov
andb
fisubrs
insb
sbb
cld
ss
cmp
hlt
xchg
jg
iret
shlb
fs
aaa
push
int
lahf
push
add
aaa
pop
cltd
adc
sti
add
outsl
lret
push
mulb
mov
daa
jp
mov
push
push
cltd
fstpl
sbb
inc
fdivs
ret
mov
inc
xlat
jno
fcom
or
dec
dec
cmp
cmp
inc
add
test
sbb
push
rclb
into
sbb
or
scas
and
xor
gs
orl
fisubrl
pop
testl
cwtl
push
xor
in
dec
mov
and
inc
xchg
outsb
dec
xor
jns
movb
jl
jmp
jb
pop
cmp
jns
lods
scas
ret
dec
loopne
addr16
sub
in
dec
jns
stos
or
ds
fisttps
mov
or
lahf
fstps
incl
stc
ret
inc
or
add
repz
pop
inc
mov
mov
xor
aaa
push
mov
mov
fnsave
mov
cli
lret
aaa
mov
ljmp
testb
fimuls
in
or
cmpsl
cmp
mov
jne
ror
pop
cmp
sub
xlat
mov
movsb
mov
cwtl
and
in
jecxz
pop
adc
cli
movsl
mov
lcall
fwait
jmp
repz
pop
lahf
jl
mov
dec
cmpsl
les
and
xchg
pop
ret
pop
into
popf
test
dec
add
lea
mov
stos
popf
sub
push
cmp
cwtl
pop
cmp
push
sarl
push
repz
frstor
pusha
test
shlb
daa
xor
fdivs
mov
sbb
and
lds
and
inc
xchg
cs
push
test
sahf
or
lcall
lock
insl
mov
rorl
std
dec
inc
fwait
and
repz
lods
dec
push
fistpl
push
lahf
jo
sbb
stc
fstpt
dec
je
lods
fwait
inc
cmpsl
lahf
jle
cmpsl
inc
lds
mov
and
or
fcmovu
xchg
inc
jo
lock
aas
adc
push
sbb
int
jb
sub
js
cmp
and
xchg
jb
jae
push
enter
xchg
sub
xor
or
pop
leave
mov
mov
das
or
bound
in
jnp
in
and
mov
inc
jo
out
gs
icebp
out
sub
stos
adc
rcr
cmp
outsl
imul
loop
xlat
movswl
rorl
jg
aas
mov
scas
dec
cld
xorl
mov
adc
adc
pop
xorb
mov
xchg
loop
mov
and
mov
pop
rdtsc
or
out
mov
jbe
ret
adc
fistl
pop
adc
xchg
out
insb
push
mov
mov
and
fsubrl
jecxz
or
ds
sbb
aas
test
in
jo
dec
ss
or
leave
push
int
lcall
xchg
int
adc
mov
add
xchg
aam
stc
pop
jb
fiadds
ret
fisttpll
adc
and
jp
hlt
mov
fmuls
mov
es
jo
mov
cmp
cmp
cmpsl
sbb
movsl
and
mov
mov
loop
mov
es
into
xor
cmpsl
mov
xchg
xor
fs
dec
mov
out
in
jp
push
mov
jb
ljmp
out
mov
push
cmp
add
je
sub
xor
scas
mov
xor
fldt
loope
xchg
fwait
push
jge
or
mov
cmp
fiadds
movsl
jl
cmp
xor
adc
inc
ljmp
jo
xchg
add
or
fcmovbe
xchg
xor
or
fs
lret
sub
push
fcoms
lcall
cmp
cmp
sub
shll
leave
jl
insl
pop
cmpsb
adc
lock
ret
mov
sub
mov
into
out
or
dec
jbe
fnstenv
insl
cmp
xor
jbe
mov
cmpsl
and
sti
loop
lods
scas
leave
xchg
dec
xor
pop
xchg
fildll
negb
mov
pop
mov
pop
cmp
push
pop
int
inc
scas
adc
xchg
mov
pop
add
mov
xor
jecxz
inc
add
mov
cwtl
das
adc
jmp
inc
sti
stc
mov
push
out
ret
mov
addr16
push
addb
inc
cmp
scas
jmp
add
push
fiadds
outsl
lret
jnp
loop,pt
xchg
lret
jl
add
lret
fs
scas
xchg
mov
cmp
enter
ljmp
scas
xor
or
mov
hlt
sub
outsb
inc
mov
mov
in
nop
sub
cltd
inc
push
inc
popf
push
cmpsl
sbb
xchg
out
sub
adc
dec
xchg
cltd
shrb
mov
addr16
insb
lahf
mov
dec
adc
add
out
mov
sbb
jp
xchg
das
fistl
ljmp
xchg
sbb
mov
mov
aam
addr16
scas
in
sub
add
ljmp
cmp
cltd
loop
pop
lahf
insl
and
popa
cwtl
cwtl
jge
out
xchg
sub
push
xchg
mov
cmp
dec
inc
or
dec
and
inc
inc
adc
es
add
or
in
push
pop
out
pop
jmp
fnstcw
mov
sbb
pop
sbb
gs
dec
insb
cltd
dec
outsb
shll
xchg
cmpsb
pop
jg
push
xor
sbb
mov
sub
sahf
xchg
xchg
inc
aaa
cmpsb
sbb
lcall
add
push
ficoms
adc
ret
dec
cmp
loope
adc
nop
popf
jb
movsb
insl
mov
pop
testb
sbb
sti
orb
movsl
or
and
cld
push
test
testb
popa
xchg
stc
inc
push
adcl
adc
jle
push
mov
pusha
jbe
leave
cmp
es
inc
jmp
add
neg
icebp
dec
fidivrl
xchg
lds
fisttps
mov
jb
and
lret
push
rorb
gs
das
add
xor
push
push
mov
adc
xchg
cmc
xor
mov
addr16
xchg
test
fs
adc
jmp
sbb
aam
orl
cmp
mov
mov
imul
cmpsb
leave
adc
pop
cmp
xor
add
pop
mov
mov
jle
lea
xchg
push
into
outsb
pushl
es
ret
sub
jecxz
or
jecxz
cmp
dec
call
push
fnstenv
push
mov
fbstp
rcll
jns
jne
xchg
pop
sub
push
pusha
or
sbb
test
ja
add
push
sub
mov
arpl
int
rorl
and
lds
lret
jb
mov
xor
inc
pop
inc
cmpb
jb
push
lods
xor
cmpsb
rorb
inc
test
push
cwtl
xor
push
aad
cmp
fidivrl
dec
mov
mov
fstl
sbb
fisubs
sub
lcall
inc
iret
push
loope
loopne
movmskps
outsb
orb
add
insb
push
mov
jbe
xor
addr16
inc
aaa
test
add
mov
insb
rorb
loop
and
cltd
add
loope
sub
andl
pop
add
adc
pop
adc
loopne
sub
loope
bound
mov
test
cli
push
dec
nop
into
repz
push
pop
movsl
xor
inc
or
add
mov
in
add
xor
jle
stos
negl
jbe
push
dec
lahf
add
xchg
ss
mov
in
dec
sbb
cld
xlat
or
xchg
fdivs
sub
gs
add
pop
test
cmpsl
stos
mov
fnsave
push
clc
jbe
insl
pop
or
shrb
dec
or
outsl
hlt
cmp
imulb
adc
inc
pop
mov
sarb
jb
fwait
mov
xchg
int3
dec
loope
lods
lods
mov
pop
leave
cmp
and
lock
in
stos
stc
mov
rorl
bswap
push
cmpsb
rclb
xchg
testb
aaa
mov
fnstsw
shlb
ds
push
xchg
das
shrb
inc
nop
icebp
sbb
inc
xchg
fcomps
mov
mov
adc
test
movsl
insb
pop
push
xor
bound
outsl
ret
push
jg
repnz
inc
mov
sub
lret
inc
repnz
test
js
pusha
sahf
aad
shrb
jl
jb
add
roll
fucom
iret
pop
fldl
testl
and
or
inc
mov
dec
pop
fnstcw
loopne
inc
mov
sub
loope
lcall
arpl
lahf
add
cmc
mov
ja
jmp
adc
inc
sbb
cmp
inc
jle
dec
outsb
in
scas
into
jmp
lods
insl
xor
cltd
push
sub
rep
mov
idivb
mov
cmp
adc
mov
ljmp
push
sbb
inc
xor
push
lret
movsb
iret
mov
ja
push
shlb
imul
leave
pop
xchg
into
scas
rcr
or
in
push
xchg
pop
int3
sub
pushf
bnd
add
out
or
inc
cmp
mov
cld
jp
shlb
in
lret
jbe
add
cmp
mov
adc
push
cltd
clc
bound
scas
mov
pushf
jae
cmp
inc
shl
stc
popf
sbb
jae
adcb
test
mulb
cmpsl
loopne
mov
mov
jo
movb
mov
mov
xchg
jg
lods
push
and
mov
mov
mov
icebp
cmpsl
xlat
int3
jo
sbb
ljmp
repnz
pop
mov
shlb
cmp
sahf
ret
imul
mov
xchg
pushf
test
iret
fcoms
movsl
out
shll
sbb
mov
xchg
aas
aad
fdivr
pop
pop
sub
mov
insl
dec
sarb
dec
or
cmp
std
push
addb
or
and
in
jg
inc
subl
sub
mov
movsl
nop
into
mov
les
xchg
or
shlb
lea
hlt
inc
cld
scas
inc
jmp
push
lret
aas
mov
sbbl
aas
push
mov
outsl
jno
push
lea
shrl
test
mov
sar
or
lea
in
push
mov
sbb
sbb
notl
rorb
inc
mov
roll
shrl
xlat
enter
fsubl
stc
ret
cmp
outsl
sbb
inc
mov
cwtl
enter
pushf
xor
lahf
sub
push
addb
sahf
mov
pop
jle
aad
dec
or
mov
lcall
xchg
fwait
adc
nop
sbb
xchg
mov
outsl
std
arpl
push
aas
divl
jae
das
inc
out
dec
rep
das
mov
xchg
imul
aaa
mov
add
pop
lcall
pop
adc
or
mov
push
push
stos
daa
add
mov
out
jl
cwtl
lcall
popa
jmp
fsubrs
jnp
sub
out
das
mov
cmpsl
cmc
loop
cmp
jnp
orb
xor
aas
pop
popf
jle
std
mov
fnstsw
pusha
aad
fisttpl
xor
pop
sbb
scas
or
out
orb
mov
xor
inc
inc
mov
pop
shr
mov
jnp
add
fs
mov
and
mov
shl
sbb
mov
cmc
pop
sbb
imull
sub
insb
mov
jg
cmp
and
pop
js
jo
sbb
data16
mov
jne
jg
fcoml
ljmp
daa
out
rorl
lea
xchg
div
std
pop
inc
or
cmpsb
mov
push
outsb
repnz
fneni(8087
xchg
adc
mov
mov
jnp
int
lahf
ja
cli
add
xchg
inc
fsubs
call
jnp
sub
scas
and
out
rorl
lods
cmp
push
int3
out
adc
lret
test
addr16
loop
mov
dec
xchg
test
fidivrl
and
into
loopne
jecxz
inc
aad
sbb
jge
push
out
ss
push
movsb
lods
and
xor
mov
fisubl
push
cmp
cmp
inc
shlb
mov
sub
jmp
ljmp
mov
push
push
stos
pop
sbb
pusha
lret
dec
daa
add
xor
push
das
lcall
mov
pop
sbb
testb
jns
sbb
or
lret
add
mov
mov
sub
adc
ss
hlt
mov
or
test
cmp
mov
mov
insl
aam
das
cwtl
sub
push
jp
jno
mov
and
sahf
or
pushf
ret
and
mov
sub
in
imul
push
fists
pop
xchg
aaa
sti
loopne
fucomp
out
mov
sahf
mov
subl
cli
jae
fwait
lods
popa
je
in
add
sbb
enter
add
jg
movl
gs
test
mov
ss
outsl
jge
pop
cmc
pusha
cmp
out
cltd
in
inc
mov
insl
sub
mov
test
les
inc
pop
jae
push
iret
pop
fiaddl
sbb
fs
je
push
aas
imul
cmp
movsb
or
js
mov
push
aam
cwtl
std
or
or
arpl
jo
sub
pop
jecxz
aad
cmpsb
jle
insb
adc
cwtl
ret
scas
adc
mov
sub
jbe
inc
inc
xchg
inc
dec
aas
jnp,pn
or
mov
test
pop
or
push
daa
loope
adc
daa
lods
and
scas
test
out
add
cmpl
in
add
and
fdivrs
mov
fcoml
outsb
jecxz
mov
jecxz
add
jne
ja
xchg
sti
mov
xor
and
xchg
fs
iret
dec
push
cmp
movsb
dec
dec
jb
lea
push
mov
mov
ljmp
cmp
stc
pusha
rclb
ret
dec
pop
cli
lods
idivl
pop
in
pop
sub
push
test
test
sub
jmp
in
mov
add
sbb
call
lcall
test
outsb
add
mov
dec
dec
rorb
cmp
movsb
push
sub
jmp
xlat
repnz
les
mov
add
cli
pop
dec
xor
push
je
and
mov
fwait
pop
and
pop
jno
jb
xor
les
lret
addr16
in
lods
mov
shrb
jae
push
lods
into
and
push
sahf
sub
daa
pop
mov
ss
or
or
mov
pop
mov
lahf
jno
xchg
fs
jp
inc
stos
pop
sub
jecxz
movsb
cmpl
out
mov
stos
inc
mov
sub
jbe
ljmp
scas
inc
mov
lods
aad
fstl
scas
test
pushf
test
jb
in
mov
jne
xchg
xor
leave
popf
xchg
jno
adcl
xchg
jae
pop
jg
popf
add
xor
rol
dec
fcoml
push
add
jae
cltd
and
mov
fldt
ljmp
call
dec
xor
sub
sbb
daa
loop
cmp
bnd
push
sub
cmpsb
xor
fscale
es
dec
loop
push
cs
add
scas
mov
hlt
push
xchg
push
sbb
adc
push
daa
pushf
dec
xlat
mov
push
in
sbb
sbbl
xchg
push
mov
test
repz
adc
ret
adc
popa
out
mov
jno
data16
inc
call
stos
cmc
adc
and
jmp
and
and
subl
push
gs
inc
aaa
mov
push
cmpsb
push
cld
pop
jbe
cmp
in
scas
mov
xlat
jnp
xor
jle
push
test
scas
mov
fisttpll
ss
xor
push
shrl
test
cmp
movsl
cmpsl
mov
ljmp
aas
cld
sbb
dec
push
ret
sahf
and
or
or
xor
xchg
push
out
aam
cmp
mov
bound
rolb
flds
push
adc
into
sbb
pop
jno
ds
push
outsb
or
mov
in
outsb
fiaddl
or
mov
pop
adc
cmp
fstpt
xchg
xor
sbb
sbb
shll
xor
cwtl
add
add
leave
hlt
fs
inc
push
xor
jb
fdivr
add
js
rorb
icebp
shll
xor
inc
jbe
sub
arpl
out
fsubrp
mov
je
mov
leave
loopne
movsb
fcomps
out
and
pop
dec
repnz
cmp
adc
push
in
mov
ja
subl
xchg
sti
pop
fildl
aad
cmpsl
add
push
imulb
push
push
les
out
jnp
mov
sbb
pop
aaa
jge
shrl
push
shrb
jo
jge
cmpb
sti
ret
sbb
mov
insb
xor
adc
insl
mov
je
jno
popa
notb
sti
pop
add
lret
xor
dec
xor
pusha
cmp
mov
xor
sarl
nop
xchg
and
jae
std
pop
inc
cli
push
hlt
cs
adc
jg
aas
movsb
sahf
xor
test
add
je
frstor
and
xor
repnz
mov
or
sahf
xchg
push
data16
xor
test
mov
rcrl
cmpb
inc
in
es
add
push
dec
es
xor
or
arpl
ja
int
ds
lahf
clc
xor
into
xchg
cmpsl
out
or
jg
in
sbb
roll
adc
rclb
mov
cmp
ret
inc
mov
lret
in
jb
jle
loop
and
xchg
bound
add
loopne
call
dec
add
stc
inc
mov
dec
mov
xor
aam
stos
test
dec
mov
push
push
mov
std
popf
shlb
ret
jbe
or
mov
sbb
cmp
mov
in
jb
push
lahf
and
test
loope
call
outsl
inc
mov
scas
inc
sar
data16
sub
xchg
in
cld
in
lock
xchg
pop
pop
test
int
jmp
int3
cmp
scas
mov
aaa
lock
aas
insl
call
in
jnp
xor
pop
push
mov
xor
xor
cld
inc
fildll
into
cmp
xlat
stc
xchg
mov
jne
lret
arpl
or
sub
and
neg
decb
mov
add
sub
repnz
repz
pop
mov
push
sti
adc
mov
call
pop
ljmp
inc
push
mov
popf
lea
mov
pop
std
or
xor
rol
fbld
jge
fcmovu
mov
inc
shr
jo
mov
hlt
xlat
xor
mov
dec
insb
cmpsl
mov
pop
iret
mov
loope
adc
xor
imul
cmp
repz
jns
cmpsl
adc
dec
mov
lret
cmp
maxps
mov
pop
fildl
inc
jle
movsb
fidivs
lods
pushl
or
xor
pusha
aas
xchg
jl
scas
or
ja
or
cmp
mov
out
sub
jae
rcll
shll
jbe
scas
nop
xchg
andl
mov
jbe
scas
pop
lahf
nop
and
popa
dec
lock
push
ficompl
xchg
loopne
xchg
repz
test
sub
xor
scas
xchg
xlat
inc
xor
jns
adc
mov
jle
pusha
lea
or
daa
mov
std
mov
daa
rcrb
adc
not
lock
and
jno
jne
bound
pop
mov
push
mov
inc
and
popa
adc
cs
jne
lcall
push
add
in
dec
or
test
js
inc
xchg
les
xor
imul
pop
pusha
push
and
mov
push
addr16
daa
ret
adc
inc
pop
cmp
orb
sub
dec
cmp
js
jg
pushf
or
sbbw
fidivs
xchg
arpl
neg
cmp
jl
xor
dec
or
test
gs
popa
xor
xchg
loope
pop
sbbl
mov
mov
enter
and
insb
stos
xchg
pop
adc
movsb
js
mov
lock
or
dec
subl
pcmpeqd
ds
cmp
jns
inc
xchg
icebp
adc
std
lods
aam
adc
enter
xor
pop
mov
lods
icebp
xchg
cmp
pop
sbb
roll
std
js
dec
in
ljmp
in
jg
fldl
jbe
mov
adc
push
dec
mov
mov
lock
xchg
sub
loop
nop
ljmp
cli
out
jle
jl
xchg
jo
pusha
out
test
inc
stos
or
push
inc
dec
add
push
outsb
sbb
mov
aas
shlb
pop
pop
pushf
sub
bound
addr16
gs
in
shrb
pusha
cld
insb
into
dec
dec
or
cmp
mov
mov
mov
sbb
mov
xchg
mov
xor
roll
xchg
cmc
cmp
shr
sbb
shlb
and
fstps
jle
xor
out
cmc
fsubrl
inc
xor
ret
cld
test
hlt
or
movb
push
scas
cmp
filds
mov
idivb
test
adc
or
lahf
imul
lahf
nop
pop
lea
mov
or
jmp
or
in
movsb
sbb
loop
insb
inc
dec
fisubs
out
mov
cmp
scas
repnz
loope
push
mov
adc
sbb
jmp
inc
ss
lret
mov
and
pusha
xchg
adc
pop
ljmp
sub
mov
fnstcw
lcall
mov
testl
lods
dec
sti
in
loopne
adc
inc
sbb
stc
fcmovne
stos
mov
sarb
mov
enter
popa
out
inc
ljmp
fwait
push
popa
push
adc
mov
fldl
push
movsb
pushf
dec
jo
add
shll
stc
rclb
dec
insb
mov
xchg
out
mov
shrb
insl
jecxz
push
jge
shll
or
incl
gs
mov
js
xchg
or
add
add
punpckldq
mov
mov
xchg
push
bound
mov
mov
jnp
iret
rcrb
lahf
mov
cmp
negb
ret
add
add
lea
xchg
call
test
sub
jl
mov
js
arpl
mov
lods
int3
pop
or
imul
movsl
inc
fwait
pop
fstps
outsl
stc
cmc
cmpsl
cmp
and
dec
adc
enter
inc
xlat
sarb
mov
stos
adc
cld
test
addr16
adc
push
sub
imulb
pop
mov
push
mov
sarb
aad
iret
std
iret
nop
cmp
into
adc
fsubs
loopne
lret
leave
js
push
mov
xor
mov
lds
push
orb
xchg
fisttpll
insb
and
idivb
repnz
or
lret
dec
scas
scas
shlb
cmp
adcb
stos
mov
lea
mov
sbb
clc
mov
dec
xor
mov
push
movsl
rcll
fs
adc
inc
aam
pop
or
mov
or
arpl
popl
xor
mov
fs
imul
movl
insb
cmp
push
xchg
push
leavew
mov
data16
add
cli
or
aad
sahf
jg
adc
jmp
icebp
scas
lret
sub
xchg
test
into
mov
mov
mov
mov
cs
mov
xchg
repnz
mov
jmp
or
jne
mov
es
mov
ljmp
pop
xchg
cli
outsb
addl
dec
loope
or
movsl
dec
int
testb
lods
cmp
movsl
sbb
sarl
addl
cmc
mov
push
adc
mov
jg
ret
cmp
sbb
outsb
xor
inc
or
xchg
dec
lret
jmp
stos
push
xchg
mov
push
and
rcrb
out
movsl
in
movnti
scas
sub
decl
jb
ror
jb
jno
icebp
push
test
cmp
cld
repz
arpl
stc
cs
mov
fstl
movl
bound
cmp
leave
imul
sub
nop
inc
xor
or
sub
cmp
push
rolb
or
xor
xchg
mov
pop
and
sbb
inc
jne
push
lea
cltd
gs
xor
fidivs
jbe
out
mov
ljmp
pushf
adc
rol
cmp
sti
lea
mov
cmp
psrld
fmul
mov
arpl
jae
aas
cmpsl
and
sarl
lret
dec
push
cmpsb
push
insb
fwait
and
mov
rolb
dec
ret
jmp
ret
insb
inc
and
sub
fsubrs
dec
or
cld
jp
popa
push
imul
ret
cmp
lea
jl
push
or
es
jg
icebp
sbb
xor
mov
pop
dec
dec
inc
sub
mov
fsts
cmpsb
mov
shl
pop
dec
sub
inc
adc
xor
jns
shll
cmc
ljmp
cmp
daa
mov
mov
push
jno
cmp
addr16
adc
cmp
xlat
stos
or
dec
mov
pop
out
jl
push
mov
sub
xchg
mov
or
xor
fidivs
lahf
into
ret
dec
divb
adc
push
jb
divb
lcall
sbb
add
jns
imul
push
xchg
rcll
test
pop
cmp
push
bnd
bound
rorl
imul
sub
lret
and
test
loopne
jle
fcmovnbe
lcall
insl
and
adcl
pop
ror
push
mov
ficoms
lods
inc
repnz
dec
mov
mov
call
test
std
sbb
call
sub
fistpl
ss
loop
loop
lds
rorb
lock
mov
pop
jmp
lods
mov
dec
fdivrs
xchg
popa
and
stos
inc
mov
xor
cwtl
dec
in
rclb
cmp
jo
pop
xchg
fidivs
repz
sub
dec
add
dec
inc
fdivl
sub
ret
sub
jnp
or
mov
add
push
stos
sbb
in
xchg
add
lahf
jmp
ljmp
hlt
lret
repnz
inc
iret
push
add
fmull
pop
cmpsb
and
or
je
pop
insb
gs
adc
int3
add
fcoms
jg
cld
pop
push
orb
lods
outsl
jl
pop
mov
clc
stos
inc
xor
loopne
cmp
imul
push
sbbb
mov
xchg
push
icebp
cmp
mov
jbe
nop
push
push
cmp
add
xchg
fdivrl
int
ror
adc
dec
imul
movsl
inc
push
std
fisttpl
in
je
adc
test
and
mov
and
mov
adc
je
or
dec
mov
lret
stos
jae
jnp
movsl
in
fwait
aaa
imull
call
or
roll
sbb
mov
inc
push
and
int
lods
popl
push
jecxz
sub
sbb
pop
mov
adc
sub
dec
ljmp
incl
daa
outsl
ret
or
pop
imul
sub
jge
adc
mov
jnp
jb
or
cmc
inc
mov
rorb
add
aas
cmpb
dec
adc
cmpsb
out
out
or
dec
mov
mov
fdivrl
and
push
add
dec
cmp
into
cmp
repz
lea
inc
inc
push
mov
jmp
or
jbe
imul
mov
outsl
and
jg
test
mov
lea
cmp
decb
cmpsb
sbb
orl
mov
and
cltd
or
inc
inc
hlt
clc
int3
sub
outsb
pop
xchg
jp
ljmp
push
add
loopne
jmp
pop
pusha
cmpsl
lcall
mov
nop
shl
cmpl
xor
xchg
jmp
push
dec
cmc
or
xor
in
jae
push
inc
cmp
mov
cwtl
aaa
xor
and
push
popf
ficompl
lods
mov
addl
ss
rorl
mov
pusha
mov
enter
cmp
test
xor
test
std
adc
add
lret
sti
sbb
jmp
cmp
outsl
sarb
ljmp
iret
in
push
cmpsb
adc
movsl
fadds
repz
add
push
jnp
fcoms
cld
add
imul
dec
sbb
mov
cmc
pop
popa
jmp
mov
fucomp
jge
jmp
out
std
jae
add
jg
push
jmp
in
iret
shll
pushl
out
cli
or
mov
icebp
orl
outsb
jle
popa
pop
xor
mov
dec
sbb
lock
and
jo
ja
stc
subb
mov
test
in
xor
out
sub
std
rol
popl
jo
insb
xchg
push
mov
fistpll
lret
push
fistps
subl
cli
sbb
cmpsl
sbb
jge
mov
push
pop
add
ficompl
and
mov
mov
sti
add
aam
inc
lret
fwait
enter
xchg
addb
pop
mov
sub
push
test
lret
mov
scas
sahf
rclb
shlb
mov
sbb
pop
or
fs
imul
jb
cmp
pop
and
inc
mov
add
and
sub
xor
or
jge
aaa
and
add
insb
jg
cmp
adc
subl
mov
xor
in
in
mov
je
cli
sahf
push
bound
and
data16
or
mov
mov
test
mov
dec
nop
and
jg
test
add
ficompl
mov
push
sub
pop
mov
cmpsl
xor
xchg
or
add
fidivl
orl
clc
loope
add
push
adc
fwait
into
mov
mov
lret
dec
xchg
inc
test
push
push
lods
std
fildl
test
out
aaa
xchg
xchg
scas
lcall
lret
jle
add
pop
cmp
pop
jmp
pop
bound
sarl
dec
mov
cmc
test
loopne
repnz
jnp
cs
xchg
xchg
xor
xor
popa
dec
xchg
push
push
out
xchg
xchg
mov
inc
adc
xchg
sbbl
mov
dec
jbe
jnp
cmpsb
ret
hlt
mov
mov
cs
leave
repz
imul
gs
cmpsb
in
mov
dec
fildl
call
xchg
loopne
and
push
sbb
fisttps
mov
movsb
or
push
daa
sub
jecxz,pn
cmp
xor
pop
xchg
dec
scas
out
jmp
stos
xor
ret
xor
mov
rolb
mov
mov
push
xor
push
add
stc
push
add
mov
aad
inc
bound
dec
push
loop
sbb
jle
shrb
jnp
arpl
xchg
xchg
add
rcr
sbb
fwait
jne
xchg
popa
cmp
jle
or
fs
xchg
lock
xchg
and
cmp
test
out
pusha
adcl
mov
out
jmp
inc
cld
xlat
mov
pop
ss
mov
in
outsb
push
test
jg
push
cmp
and
cltd
sbb
sbb
xor
push
mov
mov
push
shlb
test
or
xor
pop
mov
inc
xchg
nop
movsb
pop
movsl
addr16
imul
inc
jbe
jbe
jge
xchg
cmp
inc
out
inc
dec
out
arpl
out
fidivrl
test
pushf
push
fadd
inc
mov
jmp
cli
lods
aas
jae
mov
mov
sub
je
add
sub
push
jg
aam
icebp
lret
xchg
inc
ret
xlat
push
or
testb
push
mov
pusha
fdivl
outsb
xchg
inc
push
pop
es
movb
pop
pusha
xchg
cs
sub
fdivr
jne
xor
xor
adc
sbb
cmp
cwtl
xor
call
dec
jns
ss
pop
dec
pop
in
shrb
xor
jae
pop
mov
les
lods
daa
mov
mov
rcpps
lret
cmp
push
fistpl
daa
jno
inc
insl
lret
iret
stc
add
lahf
pop
ss
and
adc
aam
daa
dec
dec
pop
test
jg
xor
or
adc
jg
stc
mov
push
xor
mov
sub
ljmp
movsb
sbb
loopne
pusha
xor
dec
jle
lret
mulb
sub
mov
dec
lea
cs
je
mov
pop
pop
lret
push
or
sub
jae
sbb
inc
cltd
cmpsl
fcmove
lret
xchg
jecxz
push
popf
dec
adc
out
shlb
mov
mov
sbb
jnp
stc
dec
rcrb
mov
push
call
xchg
ja
pushl
push
sub
xor
pop
inc
out
cld
push
iret
xor
add
xor
mov
popf
fwait
les
loop
xor
push
sahf
mov
mov
leave
pop
lahf
adc
mov
add
into
rcr
pop
mov
xor
into
mov
out
cmp
mov
or
mov
sub
pop
push
xchg
and
xor
inc
sub
dec
xor
lcall
jmp
imul
xchg
pop
mov
hlt
fs
rcrb
movsl
int
fs
test
xchg
and
lahf
out
imull
or
sbbl
cld
outsl
mov
sahf
ret
leave
sub
and
hlt
data16
sub
cmp
imul
xlat
lds
jge
outsb
mov
add
fadds
push
mov
push
mov
stc
pop
shll
xlat
push
cmc
insb
aam
filds
loop
inc
jno
outsb
xchg
fbstp
dec
iret
pop
shlb
or
iret
arpl
inc
lret
adc
enter
jbe
leave
sahf
or
popa
mov
mov
test
rorl
pop
lret
or
je
shll
xchg
test
lret
sbb
shrl
sub
xchg
adc
adc
stos
lock
inc
std
push
int3
jne
sbb
test
shl
pop
fdivrl
stc
cmp
ret
stos
mov
add
and
jne
xchg
scas
jns
les
rorb
add
fbstp
int
mov
jno
xchg
dec
and
shrl
xorb
cmovo
mov
das
loopne
inc
in
repz
aas
jbe
jnp
icebp
and
es
lock
inc
push
imul
cltd
jb
and
addr16
das
adc
rclb
xor
and
add
mov
mov
stos
xchg
sub
das
or
push
jmp
out
sub
mov
add
xchg
inc
and
fisubl
into
cmpsl
repnz
jmp
clc
pop
sbb
shrb
jg
cmp
out
cmp
stos
lahf
mov
jbe
notl
dec
inc
cmp
sbb
sbb
jle
pushf
cmpsl
jno
xor
xchg
dec
mov
jge
and
jge
lds
xchg
lret
lea
stos
js
cwtl
ret
pop
fstpt
add
clc
or
es
in
xor
jne
mov
cwtl
mov
arpl
xor
mov
xor
push
out
jl
add
lock
mov
pushf
push
sbb
dec
dec
mov
fidivs
imul
es
leave
sub
aam
dec
sbb
fnsave
shll
mov
add
mov
push
lods
cwtl
out
xchg
pop
push
call
cmp
mov
sbb
adc
data16
or
cmp
jmp
xchg
mov
push
mov
cmp
das
mov
lods
jns
sub
bound
testl
aaa
inc
hlt
repnz
xchg
leave
cmp
mov
add
movsl
sahf
in
repnz
fwait
and
ret
ss
fisubrs
pop
xchg
add
popa
sub
popa
mov
lock
and
das
fwait
mov
in
xchg
cmp
adc
call
push
cmp
adc
movsb
jmp
insb
and
adc
aad
adc
lcall
mov
xchg
adc
cmp
sub
xchg
int
cmpsl
ss
lret
loopne
lods
testl
or
imul
mov
sbb
xor
xchg
pop
adc
lds
movsl
push
fsubl
sbb
push
sub
cmp
stos
or
push
enter
ret
mov
and
rep
idivb
mov
out
pop
aad
imul
push
mov
pop
aas
ss
outsl
call
in
sbb
lret
or
mov
mov
rorb
add
std
in
mov
mov
add
pop
incl
xchg
sub
sbb
and
sbb
and
dec
mov
push
enter
cmp
sbb
jbe
sbb
mov
js
fadds
mov
pop
and
mov
shlb
sbb
sbb
andl
xchg
hlt
les
pop
mov
shrl
or
sub
cmc
test
pusha
add
gs
xchg
sbb
cli
lahf
sub
mov
cmp
les
out
js
nop
jnp
push
rorl
xorl
cmpsb
imul
orb
push
push
pop
pop
or
and
nop
push
je
inc
push
and
fdivl
mov
rclb
mov
push
fstpt
sbb
andb
adc
subl
xor
stc
mov
jae
inc
out
mov
iret
mov
cmc
rcrb
rorl
decl
adc
mov
sarb
fisttpl
imul
pop
and
and
cmp
add
imul
mov
push
add
repnz
xor
mov
lods
dec
loop
out
stc
ret
xchg
add
inc
cmpsb
mov
xchg
xchg
adc
jb
dec
lds
lret
dec
cli
xrelease
inc
mov
divb
and
insb
jb
xchg
popf
pop
xor
lock
fidivrl
sub
mov
sub
lret
and
jg
add
xor
pop
push
cmp
int3
ret
or
les
in
lret
cmp
test
test
add
push
push
inc
inc
bound
lcall
dec
rolb
inc
pop
sti
test
arpl
inc
sti
sahf
sub
in
aaa
cs
xchg
jb
rcll
cli
cmp
js
jecxz
negl
xchg
aaa
adc
int3
lods
push
xchg
add
jge
sub
lahf
out
mov
xchg
sub
dec
fisubrs
push
inc
push
enter
push
xor
lds
or
mov
xchg
shrb
dec
jo
and
push
pop
sarb
data16
xor
ret
mov
and
leave
outsb
jmp
imul
in
rolb
push
test
adc
pop
cmp
loope
insb
push
xor
leave
cltd
mov
xchg
mov
jns
mov
add
xor
mov
jo
gs
loope
cmp
jbe
mov
inc
mov
or
mov
lods
leave
mov
andl
cmp
ljmp
daa
pop
add
mov
pop
sbb
push
in
ljmp
and
sub
mov
xchg
sbbl
mov
inc
mov
mov
outsl
stc
mov
xchg
xchg
std
popa
jo
mov
mov
adcb
pop
adc
xchg
xchg
sub
push
pop
push
adc
loope
xor
add
cld
aad
inc
aaa
sbbl
rcr
adc
mov
mov
aaa
mov
xor
lahf
cld
jne
mov
sbb
jle
fcompl
es
mov
mov
jno
xchg
push
lahf
adc
dec
or
inc
mov
push
hlt
mov
xchg
neg
rorb
test
adc
mov
and
stos
sbb
aam
pop
jg
inc
jecxz
cmp
lock
pop
mov
and
mov
and
cmpsb
xchg
cs
cs
clc
cmp
mov
push
xchg
cmp
mov
inc
and
fcom
rolb
mov
mov
cmp
shlb
and
cmp
mov
mov
daa
pop
sbbb
add
mov
push
jb
leave
push
dec
cmp
cmp
mov
sbb
mov
mov
mov
je
fistpll
cmp
ret
mov
ds
rcrb
outsl
or
adc
lods
adc
jl
testl
push
dec
and
adc
jno
pop
push
mov
mov
push
lret
test
dec
shl
inc
cli
xor
in
adc
out
xor
imul
call
je
out
pushf
aam
xor
repnz
and
xchg
jno
jle
stc
dec
xchg
and
ficompl
movsw
cmpsb
xchg
inc
or
add
lea
int
fwait
aas
ret
xchg
movsl
jnp
sub
and
test
or
lret
imul
mov
fistps
mov
jmp
lcall
insb
inc
in
adcl
lea
mov
push
mov
add
std
cmp
push
test
and
out
jge
mov
jmp
push
pop
imul
sbb
out
pop
jnp
hlt
pop
jmp
adc
inc
insb
push
pop
insl
popf
mov
fistps
inc
andl
mov
xlat
jns
repz
mov
mov
fwait
adc
test
iret
mov
inc
into
call
hlt
fadd
fsubl
xlat
jg
jle
lret
nop
in
add
dec
inc
shr
popf
cmp
cmp
push
in
jmp
ficompl
sbb
arpl
shrl
aaa
jecxz
push
sub
and
mov
xchg
inc
mov
repnz
jg
loope
stos
scas
pop
xor
jmp
call
mov
popa
jp
mov
ljmp
or
adc
scas
inc
loopne
js
mov
pop
loope
stc
fisubrs
cmp
xchg
cmpsb
movsl
xchg
gs
popf
daa
scas
dec
out
addr16
fmuls
lods
adc
add
push
imul
xor
jb
push
lods
ret
out
add
and
sbb
pop
xchg
push
insl
xor
in
jns
mov
rcr
into
xchg
icebp
cmpsb
sbb
sbb
pop
jno
dec
dec
lcall
jno
divl
fwait
inc
lods
shr
mov
je
jp
and
icebp
test
mov
fdivrl
push
fnstenv
mov
xlat
gs
sti
add
mov
dec
push
incl
adc
lods
lcall
and
cmp
cld
lock
inc
mov
cmp
lods
jge
xchg
mov
sbb
pop
pop
add
out
call
scas
push
divb
je
sbb
jno
out
fists
andl
inc
push
or
shr
idivb
sub
mov
push
add
jge
iret
dec
sub
lahf
mov
sti
mov
les
pop
mov
aam
in
push
mov
jnp,pt
scas
push
fcompl
inc
stc
cmp
jle
cmc
sub
pop
into
jo
ret
jp
pop
xchg
dec
mov
dec
sub
push
jmp
jp
sbb
sbb
dec
pop
mov
inc
inc
mov
cld
adc
mov
cmp
das
mov
imul
lahf
xor
popf
cs
in
addr16
jmp
or
ret
iret
ja
loopne
cltd
inc
or
pop
dec
lret
mov
push
pop
filds
jecxz
xor
sbb
adc
ror
es
jmp
movsb
xchg
xchg
lret
cmpsl
inc
out
pusha
aam
adc
adc
cs
mov
fcoms
mov
sti
stos
cmpsb
enter
lea
jmp
aaa
imul
idivb
ror
popf
mov
cmpsb
nop
inc
shll
popa
lahf
sbb
or
negl
hlt
mov
imul
ljmp
cmp
mov
adc
adc
pop
mov
mov
mov
nop
je
push
push
leave
stos
push
ss
pusha
das
sbb
pushf
push
scas
loope
jno
or
push
lods
sbb
fidivl
movsl
jl
in
sti
jns
and
popf
flds
jb
adc
into
mov
push
test
sub
insb
cli
add
cmp
cmp
clc
push
inc
cwtl
pop
cmp
jg
dec
xchg
movsb
and
add
or
mov
fisttpll
jle
dec
cld
jp
adc
xor
mov
xor
xor
dec
mov
pop
adc
cmp
xor
mov
es
cmp
jmp
andb
mov
mov
sbb
dec
shl
mov
sar
xor
add
add
add
lods
pop
jmp
popl
add
mov
aas
mov
ds
adc
and
enter
pusha
push
mov
push
inc
rcrl
lock
enter
mov
xor
add
add
mov
out
lods
mov
test
xchg
out
arpl
loopne
push
in
and
or
movl
lock
cld
dec
lahf
aad
lret
leave
or
insl
mov
and
lret
pop
mov
adc
sub
icebp
cmp
mov
je
xor
data16
scas
imul
ja
leave
cwtl
mov
inc
push
adc
inc
sti
cmp
aas
call
mov
lock
xchg
xchg
int
negl
sub
jno
in
dec
jge
shrl
jae
mov
sub
mov
or
xor
outsb
xchg
xor
mov
cmp
jne
insl
ficoml
add
jno
jmp
dec
mov
int3
cmc
xchg
add
stos
sbb
out
in
adc
call
add
pop
dec
and
popa
jecxz
call
cmc
fistpll
jno
pop
lcall
mov
in
sti
ja
xor
mulb
aam
xor
jb
sub
add
mov
movsb
imulb
sbb
and
repz
sub
pop
out
xor
lods
clc
or
push
icebp
std
les
add
add
and
jno
arpl
jge
inc
nop
das
test
scas
mov
mov
push
adc
and
repnz
sub
dec
outsb
scas
add
dec
stos
jbe
push
and
mov
data16
mov
mov
int3
lods
xor
sub
int3
andl
mov
idivb
out
pop
imul
fadds
aam
enter
pushf
scas
push
hlt
inc
push
fwait
sbb
mov
shlb
aad
pop
fsubrl
push
cmpsl
mov
and
out
rcrb
jno
sbb
dec
loop
xchg
xchg
in
daa
test
jmp
add
mov
push
push
jno
aad
mov
mov
jp
adc
arpl
sbb
fnstcw
push
adc
jne
enter
std
mov
sub
jbe
lods
add
int3
jno
clc
cmpsl
inc
xor
sbbl
out
aas
data16
andl
and
add
dec
fcmovb
rcrb
clc
mov
and
and
movsl
fwait
push
xchg
mov
fdivrl
adc
pop
pop
je
ds
add
imul
add
mov
cmp
mov
ja
mov
adc
dec
cld
idivl
movsb
sub
cmpsl
sbb
movsl
std
gs
adc
push
rcr
pusha
in
jp
pop
fsts
arpl
jne
jle
add
mov
dec
add
mov
clc
sbb
or
ret
daa
cmp
rorb
mov
stc
psrlw
sbb
or
pushf
pop
test
pop
and
xchg
lds
push
sti
sbb
pop
pusha
lods
ja
or
or
pcmpgtb
cmpsb
or
jb
push
jne
in
dec
pop
xlat
aas
out
test
cmp
sub
addl
out
xor
and
inc
stc
stc
mov
je
xor
aas
xor
hlt
jp
and
mov
xchg
arpl
lret
fisubrl
lret
inc
inc
pop
inc
add
add
gs
sub
adc
mov
inc
jb
gs
cmp
jbe
lds
and
rcl
or
ret
jmp
movsb
jno
cmpsl
dec
aaa
imulb
daa
into
sub
mov
and
dec
inc
test
mov
orl
nopl
mov
adc
clc
imul
sub
cld
movsl
sub
jge
scas
cmp
dec
jg
shrb
movsb
add
lods
cmp
inc
pop
push
fcomps
shrl
inc
adc
dec
in
fs
mov
cwtl
rorl
cmp
jb
dec
push
test
pop
je
out
sub
push
push
pushf
test
int3
enter
xchg
pusha
or
lea
outsb
xor
nop
mov
adc
iret
add
in
lds
mov
sar
cmp
rcrb
pop
jno
scas
jp
add
shl
sahf
cmp
in
inc
mov
push
jo
xor
cmc
outsl
xchg
sub
jno
cmpsl
sarb
sub
mov
jb
push
popf
aas
fcoml
repz
sbb
mull
add
call
insb
int
shll
lret
enter
mov
test
jb
mov
lea
pop
lock
adc
mov
jp
sub
pop
jge
mov
mov
cmpsl
mov
orl
mov
sbb
cmc
in
into
movsl
or
dec
stc
pop
add
sub
jge
pop
outsl
mov
xchg
cmc
xchg
and
cwtl
and
rcr
xor
dec
test
loop
ljmp
bound
and
lret
push
mov
push
iret
sbb
push
xlat
fcoms
xchg
pop
aam
pop
cmp
mov
mov
aas
pusha
mov
mov
mov
in
in
lcall
push
add
movsl
jae
lahf
pop
js
test
aad
rorl
out
jle
jecxz
bound
dec
add
push
jle
xlat
sbb
mov
daa
inc
pop
and
lods
addr16
sbb
test
test
in
mov
push
dec
mov
sub
and
sub
mov
xlat
sub
out
aad
sarl
cli
aad
fnstenv
fisttpll
int
add
mov
push
add
and
xor
mov
les
imul
push
out
lods
cmpsb
mov
mov
xlat
js
aas
scas
inc
dec
clc
xchg
xor
into
or
dec
lods
and
cmp
popf
fsts
ds
out
jl
sub
push
and
fs
cmc
dec
jp
jmp
rcll
or
mov
aad
xor
sbb
mov
push
jp
ljmp
sarl
push
cmp
test
test
test
xor
test
paddusb
sbb
or
dec
fistpll
add
pop
scas
mov
and
jle
sbb
out
cli
nop
jp
bound
inc
sub
jge
repnz
jge
gs
sub
push
dec
sbb
add
mov
leave
popf
in
mov
jmp
scas
jp
inc
mov
pop
xchg
insb
mov
nop
mov
inc
repnz
and
and
scas
call
adc
inc
out
hlt
sub
push
adc
push
xchg
and
inc
and
push
inc
std
std
jmp
je
ret
adc
int3
dec
jmp
xchg
popa
les
int
ljmp
mov
mov
scas
mov
pop
mov
test
lea
addl
jno
add
inc
mov
loopne
dec
sbbb
sub
inc
pop
into
add
lds
pop
cwtl
mov
ret
sub
sub
js
ja
jle
adc
sbb
xor
lods
and
inc
pop
or
push
add
sbbb
imull
or
or
lcall
ja
or
mov
push
inc
jns
sub
add
repnz
test
or
int
jo
adc
cwtl
sahf
shlb
mov
out
mov
fistpl
shll
loop
ja
jecxz
pop
adc
mov
enter
ljmp
xchg
ljmp
xor
das
cmp
push
inc
rcll
and
inc
int3
lea
and
div
shl
les
and
xchg
pop
out
inc
mov
xor
popa
push
mull
xchg
mov
and
out
push
mov
sbb
push
cmp
inc
jmp
push
mov
adc
fistl
lahf
scas
lods
outsl
and
push
sbb
jae
push
test
xchg
push
sbb
sti
jo
jl
xor
arpl
icebp
js
xchg
cld
rol
pop
decb
mov
mov
int
test
xor
mov
cmp
sbb
cld
mov
push
mov
sub
aas
sarb
inc
in
push
imulb
cltd
jge
push
xchg
shrl
pop
or
roll
in
add
sub
cs
notb
add
lret
nop
sub
and
mov
dec
aaa
rcr
jo
cmpsb
popa
xchg
dec
lods
pusha
cmpsb
jae
int3
popa
pop
sub
mov
dec
scas
ret
mov
addr16
xchg
insb
sbbl
xorl
stos
lods
mov
dec
mov
ficomps
mov
pop
push
imul
or
pop
cld
sub
sub
aam
or
dec
pusha
es
xchg
push
adc
test
cli
or
adc
jmp
xor
sbb
pop
and
lods
lods
cmp
push
inc
pop
popa
call
into
out
inc
pop
cmpsb
cmp
ficoml
sbb
jl
imull
roll
movsbl
or
sub
add
jne
mov
iret
and
mov
and
movsl
cmp
leave
ror
cs
adc
loopne
mov
rcrb
pushf
dec
mov
xor
imul
call
jle
cmp
orl
or
adc
sub
adc
popf
popl
inc
sub
sahf
xchg
xor
ret
jmp
mov
sub
xor
or
dec
jp
push
pop
pop
xor
cli
scas
jp
repz
push
fdivs
mov
add
leave
sbb
cmp
int3
add
xchg
lods
xchg
lcall
ret
clc
inc
movsb
lahf
xchg
push
adc
cli
shlb
data16
mov
mov
sub
in
gs
mov
rcrb
adc
mov
js
data16
adc
xlat
mov
push
jnp
data16
in
incl
call
cmc
push
inc
dec
mov
outsb
add
sub
ficoms
loopne
cs
cli
push
mov
fdivrl
pop
mov
movsl
mul
mov
lea
bnd
mov
adc
dec
subl
push
pop
lea
push
vmovaps
lods
popf
jge
cmp
in
imul
sub
in
test
divb
ret
dec
mov
push
popa
popa
sbbb
andb
leave
push
mov
or
ja
cwtl
lock
aaa
fnstenv
xchg
and
andb
sub
or
and
flds
dec
xchg
mov
out
gs
and
push
std
mov
xchg
insb
outsl
cmpb
mov
add
fadds
fsts
pop
ficomps
sub
adc
sbb
push
out
push
push
xor
push
pop
cmp
xchg
cli
mov
inc
int
mov
outsl
lods
mov
hlt
pop
arpl
jno
aad
loopne
das
je
cmpsb
and
pop
je
xchg
cmp
or
xor
mov
push
imul
or
sbb
and
mov
or
imull
pushf
cmp
das
adc
fnstcw
sahf
mov
and
dec
loopne
sub
lods
xor
shrb
or
push
mulb
ret
pop
and
adc
rcrb
cmp
fstps
sbb
or
fwait
insb
push
fucomp
int
out
xor
lcall
mov
mov
fwait
js
push
mov
mov
scas
je
into
scas
loop
enter
cli
aaa
jo
aaa
fnstsw
pushf
mov
fcmove
je
pushf
test
shrw
xor
cli
mov
or
loop
in
inc
mov
and
push
test
push
mov
mov
mov
sbb
jno
fcoms
add
lcall
pop
out
cmove
es
pop
shl
int3
sub
outsb
fistps
ja
mov
divb
sbb
lods
mov
lcall
sbb
insb
mov
out
xchg
jle
xchg
stos
pop
xchg
sti
addr16
push
sub
pop
repnz
xor
sub
insb
xchg
nop
add
and
jl
cs
into
jno
stc
mov
cli
fisubrl
rclb
sbb
xor
xchg
ss
scas
add
jae
aam
add
sub
dec
and
jo
pop
into
mov
in
lds
push
frstor
xlat
sub
dec
adc
testb
inc
sbb
repz
pop
aas
or
sbb
inc
fmuls
sub
push
jle
add
aad
bound
je,pn
js
cmp
inc
sbb
mov
mov
pushf
cmp
repz
ja
loope
xor
rorb
adc
loope
sub
pop
xlat
cmp
sbb
mov
std
xchg
inc
mov
adc
adc
fcmovbe
ret
mov
ljmp
mov
out
mov
lea
mov
call
add
cmc
out
jmp
stos
mov
pop
mov
and
cmp
mov
daa
stc
xchg
inc
dec
jmp
dec
imul
cmpsl
out
arpl
push
pop
mov
cmp
mov
fisubrs
test
or
fimuls
cmp
sbbb
jge
iret
mov
dec
fidivs
jo
fwait
jbe
xchg
add
cmp
mov
xchg
jle
and
fcomip
and
pop
adc
mov
jecxz
fcoms
mov
inc
or
decl
sbb
andl
pop
mov
or
mov
dec
ss
lret
sub
aad
test
lods
lahf
stos
inc
mov
mov
mov
call
jno
cmp
mov
call
xor
mov
rcrb
push
mov
cld
test
cmpl
pop
sub
cmc
je
repz
adc
insl
adc
popf
sbb
fs
push
lcall
aaa
xor
aad
fsubr
push
mov
cmpsl
inc
mov
dec
jnp
daa
cmpsb
decb
xor
je
adc
jne
enter
pop
mov
cmp
xchg
or
cmp
cmp
fbld
ja
fwait
repz
ret
cltd
mov
push
addr16
stos
ljmp
clc
adc
cmp
mov
lds
icebp
ja
ret
and
data16
ss
imul
add
pop
sub
cltd
xchg
xchg
in
icebp
sbb
test
cmpsl
sti
movsl
sahf
jo
lret
add
sar
inc
adc
mov
std
aam
test
ja
enter
mov
push
or
dec
lods
sub
and
call
std
les
mov
jmp
push
movntps
xchg
cltd
clc
lret
repnz
cmp
xchg
lea
call
shlb
fwait
das
sbb
imulb
add
xchg
pop
lret
or
fildll
xchg
sub
dec
or
and
gs
dec
lods
add
pop
push
xchg
xlat
mov
jns
pop
enter
mov
pop
aam
inc
bnd
jl
shr
xor
mov
push
test
sbb
add
add
cmpsl
aad
in
dec
mov
pop
popa
jno
mov
sbb
cwtl
test
rolb
xchg
cltd
mov
dec
inc
cmc
xor
fs
fdivrp
fildl
js
pop
xchg
push
push
aas
push
mov
nop
movsb
gs
xchg
xchg
add
cmpsl
mov
mov
push
dec
sub
test
mov
je
jne
mov
cmp
xchg
sub
sbb
int
push
cmc
xchg
fmull
cmp
push
jno
jg
in
nop
lret
and
xchg
gs
lods
mov
dec
scas
xor
lock
pop
aad
inc
push
sbb
push
pop
mov
xchg
js
test
adc
jo
push
in
pop
call
xchg
mov
sarl
add
cmp
pusha
sbb
popa
fldcw
pop
scas
lods
aad
jo
sub
inc
dec
cwtl
adc
mov
in
cmp
push
jp
pop
pushf
inc
mov
addr16
push
mov
popf
mov
pusha
pop
outsl
or
cli
cwtl
sbb
sbb
sub
scas
mov
clc
ds
in
cli
adc
into
pop
xlat
jle
pop
mov
repnz
jmp
cwtl
mov
xchg
ret
sub
sbb
pop
addb
xchg
mov
jbe
es
imul
push
sub
xor
fwait
pop
pop
mulb
test
pop
clc
lods
mov
sub
adcb
adc
mov
xor
cmp
in
xor
mov
shlb
test
pop
mov
aam
and
in
jmp
test
mov
aas
push
push
inc
lods
outsl
mov
sub
ds
pop
xor
xor
pop
dec
pop
inc
add
add
and
call
xor
jnp
faddp
pop
xor
lock
gs
mov
outsl
gs
mov
cmp
adc
cmp
cmp
stos
mov
dec
push
inc
or
fbstp
aad
mov
mov
inc
dec
adc
mov
xor
dec
jb
push
aaa
out
aad
stos
adc
fwait
xchg
mov
mov
movsl
adcl
das
ss
xchg
movl
xchg
test
popf
pop
fimuls
addr16
push
sub
emms
add
lods
mov
jne
pushf
mov
bound
mov
mov
lods
dec
adcb
jmp
insb
xchg
add
dec
ljmp
pusha
mov
adc
pop
mov
mov
dec
push
movsb
aas
and
rcr
rcl
mov
xchg
mov
stc
mov
push
dec
fsubl
xlat
add
fdivl
sbbb
push
icebp
movsl
test
repnz
addb
adc
ret
pop
add
mov
jmp
in
mov
push
hlt
inc
jmp
pop
sbb
scas
add
add
mov
and
or
add
popf
push
jo
xor
out
movsl
gs
test
sub
add
pop
shrb
and
ljmp
jl
sbb
ds
mov
jno
push
push
adc
arpl
mov
cmp
sub
sub
lock
cmp
sbb
inc
mov
loopne
and
stc
in
sarl
mov
subb
outsb
inc
mov
jmp
mov
push
lock
mov
push
mov
pop
fidivrs
xchg
arpl
push
and
je
aaa
ds
jmp
fsubp
cli
and
adc
mov
jle
xchg
adcl
push
scas
xchg
shrl
out
pop
add
lea
gs
push
popa
es
shlb
jae
mov
out
cltd
inc
orps
in
xorb
repz
xorl
jp
jne
fwait
je
aaa
loope
out
into
xor
adc
mov
xchg
jmp
add
cmpsl
jns
cs
inc
inc
sbb
mov
lahf
sbb
daa
add
and
add
mov
jmp
jmp
loope
bound
mov
sbb
iret
mov
or
test
hlt
sub
sarb
aaa
lcall
jo
lods
cli
sti
dec
scas
or
out
into
pop
push
fwait
in
negb
mov
fucomip
fldt
push
or
mov
imul
pop
adc
mov
mov
cli
scas
leave
in
int3
xor
test
daa
jle
movsb
push
js
popf
shl
inc
sti
popa
inc
imul
cmp
test
leave
gs
in
mov
leave
xchg
jl
dec
xor
mov
lahf
cltd
sub
lods
mov
push
sub
push
mov
test
xchg
sahf
movb
rorb
test
pop
dec
sub
xlat
sub
push
adc
imul
das
mov
fwait
and
or
jg
cmp
ret
mov
es
dec
outsb
inc
add
inc
inc
mov
mulb
push
popl
shl
dec
mov
loop
xchg
mov
push
push
popa
test
dec
pop
pushf
lock
outsb
and
xchg
movsl
sbb
fwait
and
stc
gs
mov
mov
jmp
sti
stos
pop
jge
clc
scas
pop
mov
cmp
sbb
bound
add
inc
dec
cmp
sbb
mov
jae
push
into
fidivrl
or
dec
dec
aaa
call
popa
inc
mov
sub
add
mov
imul
and
pop
sahf
or
xor
ficoml
fldl
cmpsb
xchg
jecxz
cld
das
mov
mov
mov
jne
fdivr
dec
mov
fbld
iret
ljmp
das
xor
adc
lret
lcall
pusha
inc
push
fiaddl
xchg
or
lcall
adc
pop
arpl
or
sub
jns,pt
cmpl
lods
mov
or
out
in
dec
in
fs
sar
cmc
icebp
xor
bound
clc
repz
push
inc
inc
mov
in
mov
mov
mov
adc
lahf
mov
push
xor
adc
rolb
ret
or
fcomip
sbb
add
sti
ljmp
mov
cmp
xchg
pop
or
and
rcr
mov
in
icebp
jo
sti
mov
int3
stc
push
out
mov
sub
pop
out
add
pop
mov
popf
or
mov
push
xchg
outsb
pop
push
jnp
push
adc
mov
pusha
jno
in
pop
cmp
insl
cmp
pop
xchg
jbe
mov
xor
imul
std
sub
cmpsb
jl
push
mov
mov
sub
cli
mov
addr16
idiv
out
fmuls
lds
or
xchg
pusha
outsl
inc
insb
divb
js
stos
sahf
pusha
lahf
int
add
sarl
mov
push
dec
dec
repz
test
mov
cmpsl
nop
dec
dec
je
mov
mov
pop
loopne
mov
inc
fs
or
xchg
jecxz
jbe
cmp
or
inc
mov
jae
lock
push
jp
xchg
nop
jae
or
mov
push
idivb
add
mov
sbb
dec
fisttpll
cmp
mov
xchg
test
imul
sbbb
flds
in
jmp
adc
push
cli
sub
sti
add
mov
push
test
or
push
lock
xchg
xchg
pop
ja
adc
getsec
xor
lret
ret
xor
out
push
xlat
pusha
xor
leave
cli
push
sbb
cmpb
loope
xchg
dec
daa
lahf
loope
dec
das
add
aad
testb
pop
mov
pop
insb
insb
inc
dec
in
fmull
push
outsb
loopne,pn
addr16
jno
jnp
xchg
ffree
mov
pop
adc
daa
lahf
gs
es
lcall
mov
mov
xchg
lcall
ret
scas
cmp
outsl
fiadds
call
inc
or
xor
pop
or
jb
test
lock
ss
sbb
outsb
pusha
cs
sti
pop
dec
leave
add
lcall
dec
push
ljmp
jecxz
inc
cmp
push
in
xor
sub
xor
repz
rcrl
cmp
test
daa
add
push
xchg
repz
dec
clc
and
jle
into
jae
adc
add
pop
mov
test
or
dec
push
pushf
jne
call
mov
adc
adc
outsl
mov
imul
loopne
test
xchg
pop
or
mov
or
pop
sub
push
xchg
sub
adc
sub
and
insb
es
pop
in
das
mov
pop
dec
icebp
fldcw
pusha
mov
fiadds
inc
add
xor
jecxz
xchg
xchg
mov
mov
adc
sub
adc
std
pop
jae
dec
cmp
imul
jmp
lret
push
cmp
pop
push
out
arpl
adc
sbb
cmp
pop
cmc
jnp
push
mov
inc
or
aad
jmp
movsb
jg
push
mov
scas
das
mov
mov
andb
sub
pop
mov
xchg
movb
push
fsubrl
std
xchg
jb
xchg
jp
sbb
jg
add
sti
inc
or
out
mov
inc
test
push
adc
fimuls
out
sub
std
inc
in
jne
adc
jb
fwait
repz
jae
hlt
fistpll
int
cli
lret
inc
xor
adc
push
dec
cli
xor
test
push
cwtl
fisubrl
pusha
loopne
lret
repnz
lods
or
or
movsb
rcr
xor
push
ljmp
push
imul
xchg
pop
inc
rclb
clc
mov
mov
cmp
shll
or
xchg
call
mov
add
push
test
mov
ret
nop
imul
mov
xlat
xor
and
sub
cmp
es
stc
adc
loope
pop
push
sub
outsb
out
stos
and
push
mov
mov
inc
adc
or
mov
arpl
jae
mov
push
mov
inc
jnp
repnz
gs
int
push
or
pusha
sbb
std
jmp
pand
ds
push
rorb
es
std
sbb
sub
mov
adc
sbb
clc
pop
push
imul
sub
imul
cmp
sbb
pop
sub
lods
xor
lret
nop
push
xchg
pop
call
mov
pop
mov
adc
imul
xlat
push
out
sub
sbb
popa
stos
push
xchg
std
movsb
test
mov
pop
cmpl
lret
adc
lods
adc
lods
xchg
cmp
push
push
jl
mov
sbb
leave
aad
fwait
test
pop
or
lock
pop
loopne
push
pop
mov
inc
nop
inc
std
cmpsl
xchg
pushf
jno
mov
push
shll
imul
das
dec
sub
sub
jno
dec
adc
lds
mov
sub
and
and
idivb
lcall
and
repz
mov
mov
pop
cmp
mov
adc
mov
aad
es
mov
xchg
outsb
popf
add
lcall
lcall
sbb
push
or
mov
adc
icebp
jns
es
push
jne
je
cs
int3
aad
lea
pop
sahf
fdivrl
cmp
mov
imul
mov
sub
jne
das
xor
lock
mov
call
add
xchg
pop
ret
jmp
and
jl
inc
adc
movsb
in
mov
or
int3
add
mov
rorl
movsl
scas
lahf
andl
push
scas
add
js
sbb
jle
jmp
ret
dec
lahf
ja
push
rol
sub
sub
outsb
or
mov
cli
push
pop
mov
dec
dec
push
imul
cmc
sub
adc
insl
sub
call
pop
fstpt
sti
lds
test
push
daa
rcpps
xlat
lcall
mov
cld
rolb
xor
xlat
pop
fimuls
pop
adc
lods
lods
int3
daa
std
add
cmp
aad
mov
jecxz
dec
jl
xchg
mov
push
iret
jbe
mov
pop
jae
mov
mov
sbb
daa
adc
imul
lret
lea
push
shl
add
icebp
xchg
ds
pop
popa
lret
insl
sub
pushf
or
mov
addl
scas
xchg
dec
ss
sub
lea
sbb
in
das
adc
mov
fwait
call
inc
inc
mov
add
popa
movsb
jbe
testl
subps
ret
push
xchg
orl
push
jl
mov
xlat
mov
mov
mov
enter
fists
and
stos
fucomip
outsb
pop
insb
sub
xchg
frstor
pop
push
fsubrs
xor
int3
xor
imul
leave
cmp
mov
and
jae
sti
sbb
cmp
add
mov
jb
test
sbb
fbld
scas
push
add
enter
int
cltd
lock
rorl
int3
pop
fstl
sbbb
out
sbb
inc
mov
cli
mov
mov
test
scas
mov
jg
xor
xor
mov
cmp
jp
stc
dec
add
xor
arpl
fiaddl
mov
test
and
mov
pop
adc
inc
and
popa
loope
mov
xchg
out
fwait
cmp
data16
stc
dec
mov
mov
cmp
mov
pop
call
xor
imul
push
jmp
mov
add
inc
decl
in
scas
xchg
stos
xchg
ja
call
pop
shll
inc
mov
mov
icebp
mov
ljmp
xor
adc
stos
inc
nop
call
cmpsb
jne
popa
or
cmc
ljmp
xchg
mov
pop
cld
stos
jle
pop
sub
rolb
xchg
sub
or
dec
cmp
in
cmpsb
xlat
dec
daa
sub
mov
insl
ret
sbb
push
push
out
and
lret
nop
std
mov
dec
jbe
dec
pop
dec
int
aam
dec
jle
std
enter
and
xchg
and
lock
pop
fistl
mov
sub
sahf
adc
das
jns
rorl
loop
sbb
mov
scas
out
push
ret
and
sub
in
and
les
push
je
fucomp
test
mov
nop
shrl
pop
shl
sbb
jge
and
pop
jmp
inc
cmp
int
mov
mov
stc
sub
movl
addr16
pop
mov
mov
dec
inc
ds
inc
cltd
adc
or
jno
ja
vmread
scas
and
jmp
jecxz
out
fistl
mov
scas
jns
dec
sbb
subb
outsb
inc
in
pop
jo
adc
testb
mov
std
and
inc
or
ja
lret
out
pop
testb
inc
ret
scas
addr16
xchg
aaa
aad
mov
adc
cmp
mov
scas
in
rol
out
sub
mov
jge
add
into
dec
xor
xor
sbb
xor
movsb
sbbl
leave
push
fs
mov
push
sbb
notl
add
stos
sbb
push
cmp
in
push
call
jns
push
xchg
mov
cmp
iret
add
in
fsubrs
xchg
lods
xchg
shl
adc
loop
cmp
call
movsl
pop
adc
rol
fmul
dec
dec
xchg
push
and
xor
add
mov
adc
fcmovnu
addl
dec
dec
cmp
mov
adc
mov
fdivs
mov
inc
stos
jge
push
mov
js
mov
repz
inc
rcr
xchg
mov
mov
lret
mov
xor
mov
fdivr
test
movsl
stos
lret
inc
into
pusha
mov
or
insl
add
push
inc
adc
xchg
xlat
cmp
cwtl
push
iret
out
xor
addr16
push
mov
jg
ds
dec
sub
pop
in
les
rclb
ret
mov
setns
rorb
mov
jle
mov
cmp
andl
aaa
out
pop
xor
mov
lods
jne
imul
xor
pusha
dec
or
hlt
sbb
ficoml
mov
emms
inc
mov
and
mov
dec
insl
add
out
mov
xchg
scas
push
call
int
cli
cmp
clc
ss
xor
fistpll
xchg
or
clc
ror
xorl
or
pop
mov
xor
mov
das
test
ds
dec
or
push
mov
push
js
loop
mov
jnp
adc
fwait
mov
movsb
ljmp
insl
jp
enter
push
mov
cmp
loopne
repz
or
ja
pop
rclb
mov
pusha
hlt
pop
ret
sarl
sahf
dec
test
fstpl
outsl
jbe
mov
and
adc
jb
nop
fsubl
test
fidivl
sub
add
mov
aas
jne
add
mov
adc
or
pop
cmp
mov
jno
cmc
cmp
sbb
call
jecxz
test
aaa
bound
push
cmpsl
rcr
push
inc
mov
xchg
test
cs
dec
inc
fldcw
dec
mov
and
cmpsb
pushf
cmpsl
pop
mov
or
and
push
xor
mov
outsb
mov
outsl
in
cltd
dec
iret
jb
add
gs
clc
mov
xchg
adc
ss
adc
int3
stc
mov
out
mov
sahf
inc
or
pop
aas
insb
js
leave
jmp
push
dec
jo
js
scas
loop
dec
pop
aam
dec
popf
sub
repnz
dec
mov
jecxz
sti
lds
out
jno
aas
cld
int3
mov
ret
mov
fs
pushf
les
loopne
mov
fcmovnb
pop
pusha
cmc
sbb
push
pop
outsl
jmp
mov
adc
push
xor
sub
mov
sub
je
xor
rcll
xchg
push
jecxz
mov
dec
dec
sbb
add
inc
mov
push
pop
inc
add
fwait
aaa
icebp
loopne
imul
mov
push
inc
sbb
in
mov
insb
test
je
dec
aad
ljmp
pop
adc
test
lret
pop
sub
adc
stos
inc
and
cs
sbb
lahf
mov
lds
gs
outsl
loope
jae
ja
mov
lahf
dec
popf
or
mov
push
and
test
insl
or
cwtl
adcb
jmp
cmc
loope
mov
popa
les
rcrb
mov
jno
push
fmuls
sub
stos
mov
sub
cmc
sbb
outsb
scas
pop
push
push
outsl
inc
push
js
mov
fisubl
int
hlt
and
lret
sti
mov
lahf
mov
xchg
lds
xchg
out
stc
lret
jne
cmpsb
pop
roll
mov
aaa
outsl
xchg
dec
daa
xchg
inc
movsb
xor
add
cmp
sub
aam
or
into
into
mov
sub
add
out
lock
enter
iret
mov
sub
sbb
pop
in
xchg
pop
cmp
ficoml
stos
xchg
test
pop
ret
fildll
inc
test
push
jg
aam
push
and
pusha
sub
xchg
mov
xchg
dec
in
stos
dec
divb
fisubl
or
and
adc
mov
js
dec
pop
in
pop
mov
cmp
xlat
mov
jnp
mov
js
bswap
stos
ret
lahf
mov
in
mov
cmpsl
mov
and
outsb
xor
pusha
lahf
push
xorl
sahf
loopne
add
or
loope
std
dec
cmp
fisubs
enter
dec
push
iret
sub
sub
add
xor
push
sub
out
xchg
jbe
jbe
cmpsl
jg
mov
lods
xchg
jg
popa
into
cmp
or
pop
mov
in
ret
aad
dec
dec
mov
repz
cmpsb
std
jmp
rol
xchg
sub
add
xor
in
aad
sbb
adc
cmp
aas
dec
fnstenv
jp
mov
repnz
add
xchg
out
xchg
dec
push
dec
int
xor
out
sbb
in
xchg
xor
sbb
loope
icebp
imul
data16
xchg
mov
jns
jmp
mov
push
sti
rcrb
outsl
test
icebp
xbegin
inc
pop
push
push
stc
std
add
dec
js
xchg
pop
sub
xchg
cmp
out
fs
dec
mov
xchg
rcr
fnsave
mov
add
daa
adc
xchg
dec
lods
fwait
push
pop
pop
cmp
jno
jnp
pusha
insl
daa
popa
ret
cmp
js
push
mov
stc
mov
enter
out
mov
fisubrl
jg
ret
test
shrb
cli
dec
ljmp
cmp
dec
and
dec
xchg
push
cmp
orb
adc
sbb
fwait
fwait
cmpsb
push
lods
jg
cltd
cli
orb
cmp
cs
nop
test
mov
aad
sub
lea
mov
and
fdivs
mov
jne
fwait
push
stos
mov
pop
mov
sub
pop
xchg
imul
jmp
aam
data16
cwtl
or
sub
pop
and
cmpsb
push
enter
lret
dec
push
push
sahf
popa
xlat
cmpsl
xchg
les
push
sub
pop
mov
rcr
pop
setno
aad
xchg
sub
push
inc
jg
lds
sub
lret
fisttpl
js
mov
js
and
scas
in
stos
pushf
lahf
cmp
out
insl
and
mov
call
aas
imul
cld
pop
jns
in
xorb
cmp
sbb
iret
imul
jp
jno,pt
dec
and
aam
inc
xor
enter
pop
bound
js
pop
adc
xor
loope
lods
push
push
inc
fmull
mov
adc
push
clc
and
out
daa
sub
sbb
cwtl
push
sbbb
add
push
pop
add
lahf
push
scas
inc
xchg
repz
jg
ret
fcomp
out
jb
das
inc
add
and
sub
sbb
mov
xor
fisttpl
andb
enter
dec
pop
mov
call
nop
dec
push
push
shrl
cmp
fisttps
les
cs
insb
or
aam
inc
jb
loopne
fs
lahf
out
pusha
add
jl
stc
inc
imul
incl
ja
jb
add
lahf
mov
leave
cmp
sbb
fidivs
lods
in
xor
mov
out
jmp
loop
test
cmp
push
insl
and
int3
es
ljmp
sub
sub
dec
pop
xchg
jne
mov
pop
push
lret
dec
or
les
mov
lock
cli
lahf
push
inc
movsl
popf
xor
cltd
roll
jl
mov
jbe
leave
mov
xchg
lods
enter
mov
loopne
cmp
subb
cli
gs
into
rcll
in
aas
push
dec
adc
sti
add
mov
dec
test
test
or
addb
call
xchg
jae
addr16
mov
js
push
mov
lret
cs
fstps
xlat
dec
xlat
jmp
imul
cmpsb
xchg
xchg
push
sub
push
jle
enter
in
das
aad
arpl
or
es
movsl
insl
repz
push
cmpsb
insl
stc
popa
jecxz
xlat
fiaddl
dec
jns
in
mov
movsl
lock
push
mov
stos
pusha
shrb
out
fs
jo
sub
jmp
add
pop
inc
insb
cs
ret
mov
fildl
mov
fprem
adc
std
popf
add
sbb
imul
inc
cmp
mull
aas
adc
pop
pop
push
cmp
out
test
icebp
scas
sbb
xor
jge
adc
sti
shrl
add
add
add
sbb
jns
mov
cmp
mov
ljmp
mov
imul
pop
jecxz
sbb
mov
push
rol
addl
push
rcrb
loopne
or
dec
fcmovu
ljmp
jle
sbb
pop
shll
popa
inc
adc
aam
push
repz
add
pop
and
jo
sub
addr16
jno
adc
push
gs
or
xor
je
push
out
xor
bound
mov
cmovae
push
out
mov
pop
xlat
daa
sahf
and
addr16
push
lock
test
pop
lock
shlb
push
jle
mov
out
bound
mov
ljmp
sub
test
clc
xchg
push
xor
addr16
push
idiv
rcrl
inc
vmptrld
inc
sarl
sub
inc
out
jle
rorl
jo
xor
and
xchg
mov
dec
rorl
mov
scas
push
mov
scas
cwtl
ss
movsl
cmpsb
leave
jle
fldenv
sbb
mov
or
hlt
out
ljmp
push
xchg
sub
add
rcl
pop
adc
sub
or
pop
sti
fdivp
xor
xlat
cltd
out
pop
test
xchg
push
mov
push
and
lds
xorl
sar
xor
ja
fisubrl
out
sahf
and
sub
addr16
mov
add
cmp
jbe,pn
fidivl
stos
insb
mov
mov
cwtl
decl
call
imul
pushf
ljmp
shrb
les
fdivr
std
stc
stos
adc
sbb
cld
pop
cs
arpl
mov
pop
pop
mov
popa
addr16
data16
dec
imul
dec
add
adc
push
iret
inc
cmpsl
push
pop
test
mov
xchg
sub
cmpsl
enter
adc
rorb
sahf
sbb
int3
stos
bound
stc
testl
scas
pusha
or
xor
xor
xchg
into
mov
lds
and
jne
mov
mov
es
inc
push
push
mov
mov
je
iret
pop
cltd
xchg
mov
scas
inc
pop
inc
sbb
lcall
xlat
es
inc
pop
jns
mov
mov
adc
xchg
popf
and
dec
outsl
add
xor
mov
outsl
sbb
inc
cld
sbb
cltd
xor
cld
mov
sub
xchg
leave
icebp
push
dec
aas
out
cmc
sbb
xlat
jo
or
sarb
xor
lret
inc
adc
dec
dec
jbe
mov
test
jo
iret
sbb
sub
mov
push
int3
test
sub
fdiv
pop
jnp
push
lea
lret
cmp
jl
ja
cmp
push
pop
mov
ss
je
mov
cmp
mov
popf
adc
in
movsl
mov
lcall
repz
test
sbb
movsb
mov
sub
sbb
repnz
xor
push
add
out
out
push
mov
test
xchg
xrelease
cli
dec
cmp
jp
fsubrs
sbb
add
push
enter
inc
jae
pop
pop
movsl
lods
fdivrs
push
cmp
ds
xchg
out
data16
and
rcl
jnp
ss
adc
xor
cmp
mov
lds
stc
ja
loopne
dec
xchg
fmuls
or
pop
adc
leave
pop
xor
lcall
repz
leave
cmp
orb
pop
jp
mov
stos
decb
and
fucompp
sarb
adc
sub
jmp
inc
mov
mov
dec
int
test
popa
arpl
std
pop
sbb
sahf
pop
test
xchg
sub
aas
xchg
jl
jbe
or
lock
or
mov
pop
fbld
or
and
insb
jne
inc
aas
mov
push
add
pop
out
adc
lods
and
sti
ss
pop
sarl
dec
divb
jbe
lret
mov
loop
mov
test
push
movsl
addr16
push
inc
adc
cmp
bound
and
nop
mov
mov
sub
mov
mov
cmpsl
loopne
lock
mov
lahf
mov
or
xchg
ljmp
inc
or
aad
insb
in
mov
push
ret
pusha
and
cmp
sti
aas
ficompl
mov
mov
xlat
jne
inc
addr16
sbb
inc
lahf
mov
lahf
rcll
ret
int3
mov
and
int
int3
jmp
movsl
jecxz
aad
je
inc
sbb
push
dec
ljmp
mov
ficompl
std
jo
lret
lea
ds
pop
orl
mov
xchg
or
sub
insb
js
mov
idiv
lds
ljmp
lock
cmp
repnz
outsl
jnp
cmp
pop
stc
or
fwait
adc
jo
icebp
mov
mov
xchg
in
stos
ds
sub
inc
scas
xchg
add
jbe
inc
push
lock
pop
shlb
stc
sbb
cmp
fdivr
and
mov
rorb
sub
fisubrs
sahf
mov
cmpsl
and
test
int3
cmpsb
rcrl
xchg
and
sbb
call
and
shr
mov
in
adc
xor
cmc
xchg
jae
jo
lds
rcrl
into
mov
cmpsb
arpl
mov
pop
cli
pop
pusha
scas
ljmp
push
mov
cld
jbe
dec
inc
or
xchg
inc
test
push
cmpsb
dec
dec
push
cwtl
std
or
stos
jbe
jne
inc
stos
lahf
ret
push
push
pop
cs
inc
lods
lcall
lret
movsb
mov
dec
push
stos
adc
addr16
cmp
push
sarb
jno
inc
or
push
add
xchg
push
dec
stc
leave
mov
lods
sahf
scas
in
xchg
push
mov
jb
and
or
cmp
and
aam
ret
pop
add
out
mov
fildll
popf
cmp
fdivrl
insb
mov
mov
iret
push
clc
mov
inc
sarl
or
xchg
jo
andl
and
ss
add
repz
mov
xor
test
cmpsl
fcomps
adc
jp
mov
push
daa
dec
sub
cltd
in
loop
mov
mov
out
pop
cwtl
lods
fcmovu
addr16
hlt
mov
adc
insb
in
test
cmpsb
cmpsl
pop
xor
push
lahf
xor
jl
leave
inc
push
jmp
fidivs
and
xor
cmpsl
lcall
or
imul
mov
mov
lcall
in
cmp
and
xor
insl
xchg
dec
fisttpl
mov
xor
mov
inc
pusha
lods
sbb
jns
mov
cmp
mov
out
mov
pop
std
inc
push
stc
push
cmpsb
mov
xchg
adc
out
and
sub
mov
cmpsl
pop
jl
int
pop
test
xchg
push
xlat
lret
mov
jecxz
outsl
inc
adc
mov
cmp
daa
adc
test
lret
out
div
lret
dec
mov
push
mov
cmp
xchg
lret
mov
sbb
xor
cltd
ret
inc
scas
push
das
inc
cmp
test
lods
xchg
out
mov
dec
scas
pusha
stos
xor
out
mov
adc
push
jge
shrl
sahf
stc
xorl
mov
stc
lcall
or
imul
dec
mov
cwtl
ja
inc
test
test
dec
insl
call
repnz
cwtl
scas
dec
sahf
repnz
jg
xchg
mov
pop
and
mov
je
add
mov
adc
dec
cmp
mov
xchg
push
ror
jae
jo
cmp
mov
sub
jl
mov
int
test
pop
clc
push
cmp
dec
ret
loop
andb
and
cmpsl
and
lock
out
pop
jmp
mov
test
das
xor
mov
and
mov
and
aas
lcall
sbb
into
aam
cld
lahf
inc
push
push
mov
stc
scas
mov
push
mov
shr
jb
cs
shlb
pop
mov
fidivl
ficoms
push
popf
cmpb
enter
les
sbb
jbe
cmpsl
mov
cld
sub
push
pop
mov
fmul
fidivrl
pop
xor
cmpsl
out
push
shlb
mov
scas
push
pop
dec
sarb
in
scas
adc
gs
negl
sbb
dec
aad
lds
imull
pop
scas
lock
dec
in
mov
shlb
dec
sbb
adc
repnz
std
jecxz
sbbb
push
nop
icebp
test
inc
lds
cmp
pop
arpl
scas
js
add
leave
loope
loope
mov
dec
in
dec
inc
iret
and
sub
push
sahf
jne
and
aam
dec
out
scas
dec
sub
push
cltd
mov
cmp
mov
sahf
mov
movsb
stc
cli
push
shlb
pop
fldt
or
ret
mov
inc
push
xchg
shr
or
push
loop
cmp
xchg
jle
mov
and
jle
scas
bound
pop
insb
roll
js
xorb
mov
ja
lret
sub
fs
lcall
pusha
scas
test
in
in
ljmp
stos
lret
aad
jg
push
sub
xor
xchg
call
rcrb
inc
xor
insb
call
ror
pop
cmp
sub
leave
push
jle
fcompl
call
repnz
adc
insl
cmp
je
outsb
cmpsb
and
adc
mov
adcb
jnp
adc
mov
push
das
jmp
cs
dec
inc
push
popa
fisubrl
cmp
out
push
movsb
std
dec
loop
ljmp
testl
repz
xchg
cmp
in
mov
push
xor
ja
sbb
sbb
jmp
addb
gs
fildl
pop
mov
jbe
pop
cmpxchg
adc
xchg
xchg
adc
mov
js
arpl
dec
adc
pop
and
mov
pop
dec
push
arpl
daa
push
das
bound
rorl
cwtl
cmpsl
loop
mov
cmp
mov
and
inc
mov
ss
sub
mov
and
cmp
fsubrl
push
shlb
xchg
repz
ljmp
mov
loopne
dec
xchg
popf
stos
xlat
sahf
xchg
add
push
jg
xchg
mov
add
dec
jmp
mov
adcb
or
xchg
lods
das
out
jmp
xchg
loope
hlt
push
addb
sbb
test
or
sbb
out
sti
imul
sbbl
rcr
je
enter
or
leave
cvttps2pi
dec
cltd
and
mov
shr
inc
shlb
and
adc
xchg
mov
addr16
and
hlt
inc
loopne
push
push
lahf
sub
shlb
gs
add
clc
fld
sahf
cmp
mov
xor
xlat
push
push
cmp
ret
xor
fsubrp
push
pop
fcoml
pop
hlt
out
jae
aad
xchg
and
negl
stc
nop
jl
add
xor
lahf
leave
and
data16
divl
call
dec
xor
clc
sahf
jl
pop
rclb
jl
xlat
add
sti
add
aas
cli
mov
mov
clc
fucomp
dec
dec
ljmp
xchg
mov
orl
mov
cmpsb
cmp
je
test
cmc
scas
cmpl
or
adc
sbb
push
lods
ss
jb
mov
adc
in
jl
int
cwtl
add
mov
pop
ljmp
push
sahf
or
mov
js
pop
cmp
mov
sbb
jo
cli
fwait
inc
sahf
mov
jno
and
icebp
sbb
daa
mov
xchg
xor
or
inc
pop
sbb
xor
adc
and
dec
fsubs
and
je
and
pop
pusha
shl
dec
lret
in
pop
out
fdivrp
ficompl
sub
jmp
in
ss
ja
icebp
in
mov
pop
jns
mov
aaa
loop
xchg
subl
xchg
adc
sub
stos
in
mov
lahf
scas
repnz
sbb
ret
dec
dec
out
mov
xor
jnp
fcomip
push
loope
aad
jo
adc
in
xchg
cmp
mov
pop
xchg
mull
mov
sti
insl
xchg
decl
mov
cltd
fmull
rclb
cmp
jo
sub
jbe
cmpsb
sub
mov
jecxz
add
test
sub
pop
addl
dec
lods
push
ljmp
cmp
and
jecxz
push
arpl
dec
pop
mov
pusha
add
ret
ss
push
outsl
popa
popf
or
movsl
insl
in
fidivrs
cltd
leave
movsl
scas
sbb
add
push
jg
sub
insb
xor
or
and
sbb
mov
inc
mov
fwait
outsl
adc
iret
leave
jb
popa
pop
xor
and
push
cli
adc
inc
mov
mov
cmp
jle
fildll
push
sbb
inc
jne
dec
jl
ret
clc
dec
aam
add
cmpsb
xchg
cs
push
cmp
aaa
push
and
mov
in
mov
adc
mov
xchg
jmp
enter
ret
dec
or
xor
pop
pushf
ret
pop
push
cmp
fisubs
adc
outsl
rcrb
ds
into
in
loop
mov
mov
inc
repnz
pop
repnz
aas
or
inc
sarb
int3
jns
mov
push
push
int3
xchg
in
es
adc
push
mov
in
mov
lds
fildl
leave
or
cmp
xor
and
mov
repnz
stos
push
sbb
lods
les
adc
jo
xchg
cmpsb
push
movsb
mov
sbb
mov
jle
mov
or
pop
dec
in
and
add
cmp
xchg
xchg
add
fidivrs
push
push
mull
lret
dec
gs
dec
popa
dec
jge
inc
ds
mov
lds
add
ja
push
idivb
fdiv
imul
dec
pop
xor
xchg
clc
mov
inc
add
out
sahf
jp
lods
loop
pop
insb
mov
insl
scas
outsl
scas
inc
int3
push
iret
cltd
xlat
aad
jl
fwait
imul
pop
hlt
pop
fsts
jnp
cmp
int
test
mov
and
sub
jecxz
mov
pop
lds
or
adcl
addr16
das
xor
mov
dec
push
xor
pop
adcl
ja
roll
lahf
das
xor
lret
cs
ret
push
into
sbb
movsl
inc
outsb
aas
shll
add
lods
push
sub
repnz
mov
pop
test
jns
adc
mov
scas
fisubrs
sbb
out
pop
jb
clc
shrl
xor
pop
pop
sub
aas
dec
out
mov
sarb
outsl
ds
cmp
push
cmpsl
mov
test
aas
push
sbb
pop
mov
out
popa
js
cmp
and
fistps
dec
pop
mov
in
push
pusha
call
push
stos
in
and
lret
mov
add
into
nop
ljmp
dec
push
adc
pop
pop
int3
cld
pop
adc
or
sub
pop
mov
add
pop
xor
nop
aaa
push
pop
sbb
shll
add
ja
push
inc
sahf
mov
fdivl
popf
call
mov
push
das
jo
xor
insl
cmp
mov
cltd
xor
popa
rorl
mov
popw
mov
sbb
mov
out
push
aad
push
ds
fsts
das
and
imul
xor
xchg
enter
mov
pop
push
or
scas
dec
shlb
les
dec
add
sbb
push
cltd
cmp
cmpsl
out
add
pop
fcmovne
jb
hlt
pop
clc
push
mov
cmp
pop
lcall
addr16
shlb
movsb
cmp
fwait
and
int3
iret
scas
cltd
xor
das
add
push
aas
pop
es
cmpsl
dec
and
cmp
xchg
les
lahf
mov
aad
push
mov
notl
rolb
decb
or
ret
xorl
repnz
jp
jmp
mov
pop
jo
in
fstl
lcall
pop
scas
out
test
test
sbb
imul
movsl
pusha
hlt
stos
cltd
pop
sti
call
or
push
xchg
adc
jae
jbe
jbe
jae
insb
in
jo
cld
jae
or
cmp
bound
imul
sub
xlat
mov
rcr
fsub
jne
fistl
xor
insb
std
scas
lret
addr16
fs
push
and
popf
mov
adc
enter
int3
daa
sbb
repz
cmp
andl
cmp
mov
sbb
dec
test
fisubl
ret
pop
cmp
loopne
aaa
dec
lret
cmp
sbb
stos
dec
out
movsl
icebp
sub
or
mov
fcomps
mov
add
test
push
test
mov
jo
add
jo
pop
mov
repnz
inc
mov
mov
xor
inc
add
and
fptan
push
or
sarl
pop
dec
inc
out
sbb
or
cld
push
pop
cld
js
cli
inc
lcall
and
aas
inc
or
xchg
ret
clc
pop
push
cwtl
daa
andb
xchg
jp
or
or
jecxz
inc
aad
jne
testl
cwtl
scas
mov
call
adcl
or
adc
sarl
cmp
cmc
aam
mov
addr16
fbld
adc
insb
push
and
jo
loope
jne
or
add
mov
jns
fdiv
xchg
bnd
int
into
push
cmp
aam
sbb
pop
adc
add
mov
xlat
mov
cmpsb
repnz
fiadds
enter
fwait
pop
or
push
mov
mov
bound
pop
push
ja
mov
push
jecxz
leave
cmp
mov
addr16
xchg
aam
insb
inc
or
int3
sub
dec
ds
loopne
scas
adc
inc
cmc
jecxz
add
push
mov
adc
int3
xchg
mov
cwtl
test
sbb
imul
push
xchg
pop
xor
adc
rcll
adcl
out
push
imul
mov
arpl
lea
popf
std
shrb
push
fstpl
jne
shlb
mov
mov
cmp
xchg
jbe
adc
mov
int
and
dec
push
aad
sbb
xor
das
cli
and
or
shl
push
mov
addb
sti
push
or
outsl
lret
insl
mov
outsl
dec
jno
add
clc
pop
or
jae
inc
jle
out
cmpsl
add
fistpll
cmp
dec
adc
push
dec
add
xchg
add
jb
daa
mov
mov
outsb
insb
popa
stos
add
mov
cmp
fldl
cmc
ficomps
jge
dec
push
jbe
or
sbb
hlt
inc
in
sbb
add
cli
in
jl
in
movsl
in
push
sub
push
mov
out
or
xchg
nop
sbb
mov
inc
ja
mov
stc
arpl
and
ss
dec
jge
xchg
adc
ds
and
sub
ss
dec
mov
xchg
sub
mov
popf
dec
scas
ret
cwtl
jecxz
adc
mov
add
aas
pop
lds
dec
jns
outsb
sbb
lock
push
pop
adc
test
jp
mov
ljmp
dec
movsb
jae
icebp
mov
sbb
aaa
loope
xchg
or
xchg
gs
popf
movsl
or
xchg
sahf
xchg
js
popa
lret
lret
cmc
outsl
insb
clc
ja
scas
pop
mov
ljmp
cmc
mov
cmp
rep
fidivs
imul
test
data16
loope
add
lods
stos
cli
imul
pop
into
leave
outsb
pop
call
add
fs
sub
sbb
je
sub
mov
xchg
lret
push
lock
sbb
cmp
sbb
imul
int
pushf
push
push
mov
mov
push
and
cmpl
out
jmp
adc
adc
mov
test
jns
and
xchg
add
das
mov
sbb
mov
rcrb
jb
dec
mov
dec
jnp
imul
nop
mull
sub
lea
mov
cmp
imul
push
sbb
rcl
xlat
addb
mov
xor
sbb
pop
mov
mov
fmull
jb
data16
mov
xchg
xlat
jno
ret
inc
inc
clc
fisttps
sbb
sbb
push
shl
mov
xlat
and
aam
fwait
lods
mov
sbb
mov
push
inc
insl
test
loope
mov
push
out
aaa
popf
lock
mov
outsb
ljmp
push
mov
dec
stc
ds
pop
sahf
dec
cltd
xchg
flds
xlat
fsubrl
loopne
js
add
int3
xchg
and
pop
imul
xor
sahf
jbe
cmp
cltd
jmp
xor
stos
xchg
and
jo
cmpsb
cli
dec
push
adc
pop
cmp
daa
sub
cmpsb
or
mov
icebp
ja
or
test
pushf
mov
jb
xchg
mov
je
mov
lret
jl
and
sbb
jbe
or
scas
prefetchwt1
inc
lahf
pop
and
hlt
divl
cmp
call
dec
cmp
and
sbb
das
iret
mov
ret
stos
and
push
sbb
scas
icebp
inc
les
out
roll
aaa
mov
or
mov
xor
mov
icebp
out
pop
jns
in
das
rorb
jno
ret
pop
aas
push
xchg
loop
mov
incl
jnp
and
lods
dec
jl
pusha
test
ret
mov
cmp
adc
aam
dec
mov
jp
fistps
xchg
addr16
rcll
movsl
dec
or
lods
xor
push
add
imul
xchg
mov
mov
ffree
xorb
xchg
out
jmp
dec
ret
dec
out
dec
aaa
dec
pop
inc
inc
xor
sahf
adc
shrb
xor
inc
pop
push
sbb
dec
adc
lods
scas
mov
fs
aam
test
ficomps
scas
jmp
sub
push
pusha
sbb
gs
adc
sub
shll
andb
xor
sub
addr16
and
dec
xchg
in
mov
inc
mov
lea
jne
xor
add
pop
mov
cmpsl
in
loopne
fbld
inc
out
cmp
cltd
int3
adc
xor
cli
sbb
sub
repnz
and
add
imul
test
dec
outsl
and
pop
jo
imul
out
cmp
pushf
jae
loop
hlt
sti
push
movsb
fidivrl
cltd
adc
subb
inc
popa
dec
loope
inc
jl
mov
outsl
sub
lds
add
insl
mov
fdivs
cmp
leave
sbb
pop
lahf
stos
add
sub
aam
das
aas
pop
sub
inc
fstpl
addr16
pop
xlat
pop
loope
jmp
je
in
enter
adc
cmp
pop
cmp
jbe
sub
pop
add
repz
test
sbb
sahf
lret
movsb
sbbl
inc
movsl
out
sub
xchg
or
dec
adc
out
lahf
sub
imul
or
mov
jno
int
jbe
sbb
cmp
out
scas
stos
aam
mov
jl
add
es
in
pop
sbb
and
into
adc
fld
pop
mov
dec
das
fsubrl
mov
inc
hlt
inc
mov
outsb
scas
fistpll
push
mov
loope
jo
sbb
les
and
push
push
js
jns
mov
dec
inc
ss
jns
push
fdivs
decb
shlb
inc
outsl
lods
jl
cwtl
lods
jg
push
test
xchg
pop
shr
out
scas
jnp
nop
in
imul
insb
jl
cs
mov
lcall
out
ja
mov
ja
push
dec
fcompl
mov
mov
incb
aas
push
int
int
mov
mul
sub
rorl
cli
popf
adc
movsl
je
sbb
push
js
mov
lahf
jp
lea
xor
push
das
outsl
adc
mov
dec
push
in
gs
orb
mov
cmpsl
mov
repnz
dec
pushf
andb
cld
pop
fisttpll
cs
fiaddl
and
inc
adc
sub
mov
sub
jnp
xchg
mov
mov
sbb
jmp
push
xchg
push
sub
fdivr
mov
jp
xor
mov
sbb
icebp
fsts
rorb
add
sbb
xchg
xchg
pop
sarl
negb
testb
loopne
pop
fcmovnbe
fs
jge
cmp
push
and
iret
loop
repz
adc
jle
scas
cmp
repz
mov
sbb
mov
xor
mov
cld
and
mov
sub
jle
lea
cltd
andl
pop
mov
imul
push
cltd
and
cmp
fdivl
jle
popa
pop
xor
pop
fisttps
add
cs
fistpll
add
xchg
xchg
xchg
xor
inc
int3
mov
nop
jo
scas
nop
lahf
ljmp
jns
sub
andb
push
addr16
lds
add
aaa
les
aam
or
std
mov
adc
xlat
cmpb
arpl
dec
adc
stc
and
shlb
push
hlt
mov
repz
mov
dec
stos
aaa
sbb
fwait
xor
popa
inc
mov
mov
mov
sbb
outsb
call
divb
inc
popa
std
add
ljmp
or
and
mov
mov
push
cmp
xchg
mov
lret
and
and
pushf
sahf
mov
stos
push
adc
sub
push
dec
sahf
mov
xor
xchg
enter
dec
xor
cmp
xchg
stos
popl
or
shll
ret
loope
sub
jecxz
pusha
push
mov
push
xchg
jo
or
je
pop
scas
in
faddl
dec
xor
ret
pushf
xchg
dec
dec
ret
or
dec
cmpb
pop
sbb
lret
fisubs
cmc
jg
mov
neg
ja
hlt
or
dec
fsubrl
dec
mov
sbb
fistpl
cli
or
or
shrl
dec
shr
hlt
test
and
ss
sub
scas
xor
mov
xor
inc
xlat
adc
add
adc
test
leave
adc
pusha
out
imul
ret
ret
mov
mov
lods
mov
inc
xchg
mov
mov
fs
in
cmpb
rcll
bound
pop
popf
nop
inc
and
pop
cmp
and
das
pop
push
cmpsl
pop
imul
sbb
mov
mov
cmc
in
fdivl
bound
mov
ror
pop
cmp
xor
jp
bound
or
enter
test
mov
cs
jne
mov
and
inc
aaa
mov
adc
pop
sbb
sbb
xchg
rolb
jns
ret
popa
clc
xchg
xchg
and
mov
add
lahf
lret
pop
addr16
add
pop
mov
lret
cmp
cmp
jnp
jnp
sbb
pop
aad
and
mov
add
mov
cmp
add
lcall
and
ret
sbb
xor
pop
mov
js
mov
loop
out
imul
jbe
or
lds
lcall
stos
inc
xor
mov
dec
mov
mov
mov
inc
fwait
sbbb
xchg
dec
int
mov
repz
sbb
scas
push
sbb
nop
fsubrs
xchg
mov
sub
bnd
pop
addr16
jae
xor
test
fiaddl
sub
and
xor
ljmp
lods
add
xor
movsb
mov
mov
repz
xor
xor
xchg
ret
and
push
daa
push
cmpsl
inc
push
lock
add
shl
stc
leave
adc
into
fstpl
sahf
pusha
scas
sbb
xchg
sub
cli
xchg
popa
sub
mov
cmp
shrb
or
push
loop
insl
addr16
into
pop
xor
in
push
sbb
fildl
lock
sub
fisttps
adc
sub
icebp
add
jp
inc
aam
lods
pop
fcoms
push
iret
mov
iret
flds
dec
cmp
adc
rcll
jno
add
and
inc
dec
icebp
cltd
add
lock
outsb
rolb
mov
push
jle
push
pushl
movsl
and
push
pop
push
in
xor
sarb
add
push
mov
inc
ret
dec
mov
in
mov
xchg
out
jecxz
mov
cmpb
stos
and
movsl
repnz
or
push
movsl
punpckldq
lret
in
std
mov
dec
mov
lds
mov
adc
sbb
int3
movsb
fldl
dec
leave
inc
xchg
cmc
jns
xor
push
inc
jns
scas
loopne
test
icebp
jbe
popa
cmpsb
xor
xor
mov
cmp
sar
lock
aaa
rorl
pop
into
jo
lahf
and
fsubrl
mov
inc
push
cmp
sub
jp
or
ror
cmc
test
lods
int3
je
movsb
out
enter
pushf
lret
push
cmp
fneni(8087
xor
inc
and
sub
and
xor
lock
pop
lcall
sbb
push
cli
rcrl
mov
adc
rorb
mov
jmp
daa
mov
loop
incb
aam
test
mov
lahf
sbb
jbe
shll
dec
rolb
testb
adc
jmp
cmpb
push
fcmovbe
and
std
lahf
ds
int3
mov
ja
cmpsb
and
push
pop
ret
sbb
sub
mov
or
xor
fwait
ss
and
sub
fdivrl
jae
pop
mov
mov
fsts
or
incb
dec
xor
ror
out
imul
sub
mov
mov
outsl
pop
das
mov
rclb
mov
jo
xor
sub
rorb
fidivrs
cmc
push
leave
pop
fadds
mov
outsl
dec
jo
jl
nop
movsb
lods
iret
and
fwait
sub
push
and
pop
and
pop
mov
xor
pop
xor
repnz
aaa
outsb
fdivrl
into
mov
xchg
adc
adc
pop
pop
lcall
xchg
lock
mov
aas
scas
and
scas
xor
mov
insl
xlat
in
insb
jno
gs
mov
add
fcmovnb
xor
in
sub
xor
push
pop
jbe
in
sbb
xchg
dec
into
cmp
hlt
mov
jl
xchg
xchg
sub
popf
mov
enter
xchg
fists
or
add
jge
cli
add
jp
jo
mov
or
div
data16
xchg
rclb
je
inc
enter
pop
outsl
clc
loop
sarl
fs
sbb
ret
faddl
push
mov
fldl2t
fisttps
std
sbb
or
mov
jp
ret
pop
push
xorl
test
int
scas
insb
shlb
adc
fs
pop
mov
mov
push
push
sarl
lret
xchg
addr16
pop
mov
sbb
cmp
xchg
movsl
ret
pop
leave
push
dec
lret
or
mov
adc
jge
pop
aas
push
dec
shll
jle
pop
in
hlt
pop
xor
stos
faddl
and
pop
lods
push
imul
and
add
dec
and
call
pop
aad
push
and
mov
xchg
aad
pop
xchg
fwait
mov
stos
inc
insb
xor
cmp
pop
inc
jne
mov
loope
or
or
outsb
and
or
and
xchg
push
lods
sti
dec
push
lods
mov
dec
movsb
cmp
and
xchg
loopne
enter
add
div
sbb
das
mov
inc
iret
push
and
ljmp
aad
pop
mov
pop
mov
int
mov
pop
mov
inc
das
dec
push
xor
outsb
rol
lret
fisttpll
js
dec
jne
jne
sub
sahf
dec
outsl
sbb
cmp
jae
out
push
lods
pushf
imul
sbb
push
sub
sub
fbld
dec
pop
imul
mov
push
mov
mov
test
dec
sub
shrl
or
cmp
lea
dec
fs
inc
xorb
pop
jmp
lods
adc
sub
jb
and
push
or
out
sub
dec
out
jp
dec
xchg
out
cmp
fdivs
das
add
popf
arpl
repz
arpl
xor
movsl
outsb
scas
and
sbb
or
cmp
mov
mov
loop
stos
out
pop
cmpsb
test
lods
in
jl
dec
lods
mov
imul
outsb
jp
pop
fwait
sub
lcall
add
mov
lret
jbe
repz
jle
jb
arpl
lods
popa
sub
fstp
daa
pop
lret
inc
je
inc
dec
pop
add
push
enter
push
mov
inc
cmp
push
cmc
dec
in
bound
arpl
lahf
mov
xor
arpl
aad
andb
sbb
movsl
outsb
lcall
hlt
sub
mov
inc
jnp
jne
scas
mov
leave
xchg
pop
fwait
or
lods
mov
sub
outsb
jo
ret
or
xor
scas
cmpsl
adc
cmc
sub
cmp
xor
inc
in
jg,pn
pop
add
pop
lods
out
fmull
push
sahf
loope
insl
lds
testb
mov
sbb
add
cmp
popa
mov
xor
push
jae
test
mov
inc
adc
in
or
and
ds
jg
arpl
cs
inc
divl
icebp
fcoml
dec
fsub
or
xchg
mov
pop
pusha
inc
dec
daa
bound
aad
cmp
in
lock
inc
insb
jne
loop
xchg
dec
fimull
jmp
and
cmp
ljmp
jnp
popf
xchg
test
sub
ss
into
out
divb
fnstsw
jg
pusha
hlt
pop
in
lret
lods
nop
mov
mov
pop
cmp
sbb
mov
mov
out
sub
insb
leave
xorb
jmp
cwtl
orl
sbb
adc
loope
mov
or
outsl
cvtps2pd
mov
int
xlat
ret
iret
mov
inc
js
jbe
rol
in
lret
aad
sbb
sub
rolb
jne
mov
jp
cmp
loope
push
rclb
inc
int
xchg
or
enter
dec
ds
mov
aaa
sub
push
mov
add
adcl
xor
rcrb
fwait
mov
in
push
test
imul
or
insb
hlt
lock
pop
dec
mov
and
mov
mov
add
test
pop
lret
sbb
pusha
clc
insb
xor
pop
cmp
ret
cmp
enter
inc
xor
mov
movsl
js
add
ja
xor
lds
pop
cmpsl
inc
mov
daa
daa
mov
mov
cmove
daa
or
je
mov
insl
and
sub
xchg
or
pop
mov
jl
icebp
shl
push
add
loope
jae
dec
fcoms
mov
or
dec
pop
pushf
fldt
and
mov
call
mov
addb
sti
bnd
and
jno
push
jle
mov
movl
sub
add
pop
mov
push
mov
insl
or
shl
adc
cs
xor
jne
bound
scas
add
ds
adc
sbb
adc
in
mov
sub
push
mov
repz
mov
mov
clc
js
adc
xchg
aad
xchg
test
jge
push
mov
fldl
mov
and
stos
push
aam
push
cmc
xchg
xchg
and
lods
lods
testl
pop
insb
bound
jne
ss
xor
stos
sub
repnz
lock
out
movb
aad
in
das
push
push
in
xor
inc
insb
and
inc
xchg
rcrb
sbb
pushf
lock
inc
arpl
push
add
adc
xchg
into
pop
mov
cmp
das
jg
sahf
sar
cwtl
lcall
pop
xchg
add
mov
insb
or
xchg
mov
jo
fistl
jmp
lcall
inc
out
sahf
pop
pop
cltd
dec
lods
mov
cltd
scas
insl
in
btr
or
adcb
loope
mov
sub
jae
ljmp
lea
cs
xchg
sub
nop
lods
cmpsb
adc
punpckhbw
adc
dec
fiadds
mov
mov
arpl
je
lahf
inc
test
icebp
movsl
jecxz
arpl
add
mov
and
shll
out
xor
stc
add
and
cmpsl
inc
inc
push
fnstcw
push
lret
push
in
std
add
cmovo
std
mov
cmp
xor
sbb
packssdw
dec
push
or
pop
inc
sub
mov
xchg
jmp
inc
xchg
mov
ret
neg
jmp
stos
lcall
xorl
lret
ret
dec
inc
das
sbb
inc
out
ss
pop
adc
shll
push
jbe
in
cmp
sbb
pop
xor
jno
loopne
in
sub
xor
mov
daa
sub
lret
out
and
fimuls
aad
pop
repz
movsb
test
cli
std
push
stos
mov
aam
hlt
mov
mov
add
sub
mov
andl
cmp
loop
jmp
popf
stos
cmpsl
aas
mov
jae
sbb
popf
add
xchg
sub
lock
xchg
xchg
clc
fwait
sub
ficoml
cmpsb
into
divl
int
mov
dec
pop
out
in
daa
mov
test
xlat
dec
fcompl
sbb
mov
aad
sub
jl
lahf
adcb
mov
xchg
inc
pop
push
jae
incl
in
sbb
ljmp
fsubl
or
fwait
mov
sub
jb
or
into
cmp
xor
mov
out
stos
lsl
adc
or
iret
push
xchg
test
mov
loope
cld
arpl
movsl
cs
or
pop
lods
stos
jl
scas
shrl
add
ss
lods
mov
jge
pop
inc
pushf
xchg
cmp
cmpsl
cmpl
out
jp
stos
out
hlt
inc
pop
add
outsl
cmp
ds
orl
add
sti
aas
cmp
insb
inc
push
aam
out
push
jmp
sbb
adc
xchg
test
jg
mov
aas
lea
pop
mov
dec
push
mov
sbb
loop
fists
push
loop
xchg
outsl
shrl
mov
adc
mov
cmpsl
jecxz
dec
cmp
mov
mov
hlt
mov
mov
stos
or
sbb
scas
pop
cmp
mov
decl
into
inc
add
inc
push
adc
frstor
pop
ljmp
aam
mov
jbe
idiv
fwait
mov
or
or
repnz
ljmp
cmpsb
cmp
xchg
cmp
jecxz
jnp
stc
cmp
loopne
xor
nop
mov
data16
in
cs
and
dec
enter
and
xor
push
xor
xchg
lds
xchg
arpl
pop
and
mov
and
jmp
out
xor
imul
je
cmp
xor
mov
mov
jnp
adc
repnz
sbb
ret
or
pushl
push
xor
adcb
sbb
js
pop
ret
fists
mov
jl
imul
xchg
les
les
mov
in
cltd
ror
jl
rcl
clc
jnp
adc
xchg
stos
xchg
and
xchg
ret
fstl
xor
nop
sbb
xchg
bound
mov
sub
lahf
add
rorl
dec
sarl
int3
push
je
cmp
or
popa
imul
mov
mov
dec
xchg
cmp
push
pop
xlat
mov
mov
and
outsl
cmp
sub
or
in
popa
sarl
imul
loop
loop
in
mov
scas
inc
lods
pop
mov
mov
mov
add
jmp
stc
mov
cmp
pusha
add
mov
or
outsl
inc
adc
adc
mov
add
ss
and
mov
sub
lret
bndstx
adc
sub
nop
push
xor
sub
out
xchg
mov
bound
pop
rorl
cmp
popa
out
outsl
push
mov
scas
mov
ret
pop
not
cmpsl
sbb
dec
xor
pop
push
cltd
jge
dec
loope
cmpsl
addr16
sub
pop
sbb
ret
mov
cwtl
push
adc
sub
shll
int
ja
add
jmp
sub
inc
mov
xor
subb
xchg
xor
dec
inc
int
pop
xchg
xchg
add
lea
sbb
adc
inc
xchg
icebp
xor
mov
ret
lcall
xor
push
xchg
sbb
loope
shrb
xchg
cmp
call
pop
imul
xor
mov
or
mov
movl
or
mov
out
fiadds
hlt
notl
push
stc
mov
add
fisttpl
in
pop
in
mov
shrl
lods
in
pop
sbb
xor
mov
sub
fimuls
lret
inc
add
pop
dec
imul
adc
mov
dec
mov
in
jp
xchg
sbb
xlat
or
add
jge
push
fisttpll
adc
cld
out
fnsetpm(287
inc
xor
imul
ds
mov
cmp
xchg
imul
call
pop
mov
es
xchg
or
inc
xor
fs
sub
clc
cltd
push
mov
sbb
inc
sub
and
mov
sub
out
mov
cmp
or
jnp
fildll
shrb
jl
or
and
inc
mov
sub
clc
insb
mov
add
arpl
in
or
popa
sahf
jae
xchg
in
or
xchg
ds
dec
xchg
adcl
imul
dec
idivl
lret
push
mov
popf
pop
data16
insl
fmuls
scas
leave
mov
jb
sti
sbb
pusha
or
mov
cmp
test
sbb
mov
adc
xor
mov
jmp
lret
add
add
cld
mov
scas
add
inc
mov
pop
jmp
call
in
test
or
sub
pushf
push
lret
and
and
dec
daa
movsb
cmpb
jbe
push
and
and
popf
xchg
xor
or
mov
push
cmp
push
sbb
jno
dec
pop
sahf
out
lods
jo
lret
jbe
ret
sub
popa
adc
mov
cmp
add
loope
lds
sub
inc
mov
xor
inc
lock
mov
mov
cld
ja
sub
mov
xor
xchg
pop
jle
sbb
or
and
scas
jle
mov
enter
sbb
mov
loopne
cmpsl
mov
dec
test
cmpsb
push
xchg
mov
imul
sbb
jb
je
sub
push
pop
lock
xchg
add
cmp
mov
iret
sbb
xchg
ds
pop
mov
outsl
mov
xchg
mov
incl
and
enter
cltd
rcrl
cld
cmp
arpl
cmp
fisttpl
pop
mov
push
fwait
leave
xchg
fldcw
into
xor
mov
imul
pusha
in
xor
jnp
push
add
pusha
lahf
cli
rcrb
out
das
dec
inc
pop
out
test
cmp
mov
stc
pop
popa
dec
cwtl
xor
jecxz
pop
pop
mov
lret
inc
cwtl
adc
int
mov
push
stos
cmp
lods
repnz
cs
mov
or
or
adc
lcall
pop
mov
mov
sbb
and
add
push
sbb
popa
cmp
insl
pop
aas
sbb
lds
inc
pop
dec
add
faddp
cmc
bound
aas
rcll
jle
in
cmpsl
aaa
test
push
push
jmp
jp
mov
les
jl
lods
jle
es
jns
test
mov
mov
fs
dec
jge
les
pop
adc
jnp
adc
jns
jbe
or
xor
lods
pop
and
cwtl
sub
mov
jecxz
lcall
jmp
jg
pop
mov
jle
mov
mov
and
loope
dec
das
icebp
jne
pop
stos
or
jl
mov
mov
scas
fcmovne
iret
rcrb
into
int3
push
les
inc
and
mov
int
mov
sbbb
or
mov
dec
push
call
dec
jl
or
dec
cmp
mov
in
stc
pop
jnp
mov
ljmp
jno
cmpsl
push
pushf
popf
jl
xor
addr16
mov
pop
push
mov
gs
int3
push
popl
mov
pushf
pushf
das
sub
gs
ffree
scas
jne
lret
dec
xchg
jae
insl
push
xor
xchg
cmpsl
ret
aam
inc
pop
mov
outsl
pop
push
inc
jecxz
adc
mov
mov
fs
insb
insb
movsb
sub
fcom
das
jne
adc
gs
bound
test
bound
jle
jbe
dec
cmp
adc
fmuls
fwait
icebp
push
mov
fcmovb
pop
sub
xorl
notl
jnp
mov
add
dec
outsb
jnp
cmpsb
rorl
mov
mov
aas
inc
xor
mov
ret
add
test
xor
addr16
fst
inc
pop
dec
and
movsb
cmp
and
adc
lods
jne
lods
cmp
sahf
push
mov
scas
outsl
scas
cs
adc
mov
aam
pushf
jecxz
andb
inc
mov
or
xchg
scas
lahf
mov
sub
scas
test
and
pop
cli
jb
mov
add
sbb
push
push
leave
imul
xor
test
lcall
jns
in
scas
jle
outsb
pusha
or
icebp
xchg
fiaddl
repz
scas
sahf
addr16
mov
lahf
mov
fldl
gs
out
add
cmp
mov
pop
leave
inc
pop
xor
scas
pop
dec
fsubrp
push
dec
inc
jno
daa
shlb
inc
jb
lcall
pop
dec
mov
sub
pop
mov
mov
int3
in
and
std
fldcw
jl
xor
pop
fcompl
rep
mov
jge
mov
rcll
rclb
mov
leave
lret
cmpsb
pushf
xchg
rolb
das
lret
icebp
fldenv
popa
test
pop
sbb
testl
sub
fld
mulb
and
mov
fidivrl
subl
lods
sbb
aad
mov
mov
in
and
cmp
push
bound
xchg
push
adc
mov
pop
push
hlt
outsb
add
leave
pop
sub
adc
fdivrp
ljmp
xchg
cmp
push
sbb
inc
sti
push
cmpsl
flds
int3
cs
mov
fwait
mov
adcl
or
mov
rol
or
fistpl
and
jne
outsl
xlat
jmp
jl
push
imul
call
xor
and
or
dec
and
pop
dec
jmp
lret
add
cmp
inc
lahf
stos
pop
dec
inc
jae
sbb
int
bound
test
pop
inc
inc
arpl
add
mov
push
xor
pop
scas
jb,pt
jae
outsb
cli
es
jge
rol
in
pop
aas
adc
movsb
jbe
sbb
xchg
and
movsl
adc
js
xor
cmp
jno
and
and
mov
hlt
jnp
xor
sbb
and
scas
loope
test
mov
inc
push
pop
hlt
jecxz
pop
xor
jmp
pop
sub
adc
dec
mov
fiaddl
mov
scas
sub
iret
adc
loopne
mov
ror
push
lret
jecxz
das
outsb
fistpll
mov
mov
insl
cmpsb
xchg
sbb
out
std
mov
jge
lcall
sbb
insl
lret
aas
lods
mov
ficompl
dec
jbe
jno
rclb
sub
cmp
pop
in
cmc
pop
imul
sarl
or
fdiv
orb
or
jp
mov
sbb
xchg
sub
sbb
stc
ljmp
and
xchg
mov
sub
cmp
out
push
arpl
popf
stc
jbe
fs
sub
andb
decl
add
add
clc
pop
mov
scas
jmp
das
sub
push
xchg
sbb
jno
mov
add
lahf
popa
cli
mov
jg
or
or
mull
popa
and
stos
arpl
dec
xchg
lea
xorl
cmp
iret
push
ljmp
or
js
sub
xchg
lds
jb
mov
xor
lahf
imul
pop
pop
adc
push
sub
pop
jecxz
jbe
es
push
ds
inc
sbb
ja
gs
jns
and
or
jl
test
enter
xor
int3
xlat
stos
sbb
push
sti
rorb
mov
shlb
icebp
mov
mov
fs
mov
mov
fwait
addr16
es
and
lock
clc
jl
aam
jne
iret
or
stos
push
cmp
mov
testb
lea
imull
pusha
mov
popa
fwait
xor
test
mov
ror
nop
adc
rcr
fistpl
mov
jecxz
stos
push
push
data16
ljmp
in
sbb
cmp
add
jl
ljmp
icebp
xchg
loope
fisttps
push
jo
sbb
fildll
jl
sahf
jl
or
sbb
mov
pusha
jnp
sub
mov
xchg
test
fsubp
sub
dec
clc
pop
loopne
arpl
inc
imul
insb
mov
xor
std
mov
fmul
push
pop
fs
loopne
ffree
mov
xchg
sbb
sbb
or
lahf
dec
mov
aaa
jge
insb
push
pop
inc
xchg
mov
in
idivl
subb
movsl
push
mov
push
pop
or
mov
jmp
movsl
and
rcrl
es
stc
cmpsl
or
test
inc
mov
pop
xor
aam
dec
ret
xor
mov
pushf
out
push
xor
cmp
pop
xchg
sbbl
movsb
fsub
cmp
pop
sahf
sbb
sti
and
iret
push
xchg
pop
mov
sbb
mov
and
or
pop
dec
dec
ljmp
mov
rep
aad
adc
sub
lahf
add
out
fcmovu
outsb
mov
mov
push
mov
syscall
outsl
not
fs
out
out
cli
pusha
add
jno
test
xlat
orb
xor
adc
movsb
xor
push
stos
movsb
or
jp
cmp
rcrl
mov
in
in
sub
push
and
loopne
sbb
add
jns
pop
jp
or
sub
adc
mov
mov
call
rolb
xchg
xchg
mov
cmp
pop
test
scas
xchg
sti
inc
xor
add
pop
cmc
fsincos
add
gs
xor
testl
pushf
pop
xchg
xchg
cmp
jnp
pushl
sub
adc
push
dec
cmp
das
add
push
loopne
test
inc
stos
mov
ds
scas
sub
or
sahf
out
fs
xchg
mov
push
sti
repnz
xorb
cld
mov
and
dec
mov
jecxz
imul
lods
iret
ficoml
cli
mov
scas
pusha
loopne
incl
push
push
sbb
jg
pop
jae
sub
in
stos
mov
jmp
adc
pop
std
adc
jecxz
sub
cmp
das
enter
jge
xchg
and
pop
cmpsl
xor
in
add
sbb
aaa
sub
xchg
cmp
pop
aaa
jecxz
movsb
aam
mov
mov
test
push
mov
mov
bound
inc
mov
mov
out
xchg
pop
ss
bound
jb
out
dec
xchg
ds
in
pop
lods
inc
int
pop
clc
jnp
dec
mov
sub
or
sbb
jno
pop
xchg
popa
data16
inc
insl
outsl
sub
adc
pop
orb
test
popa
out
xor
test
push
push
xchg
popa
mov
lods
pop
or
or
setae
mov
xchg
imul
push
lea
repz
out
data16
aas
int
je
pop
mov
xlat
add
dec
jp
xchg
lock
lea
jne
insl
sbb
xchg
addl
mov
push
push
fs
in
cmp
or
push
pusha
fs
mov
roll
xor
scas
add
mov
add
je
push
ret
pop
sbb
sbbb
dec
mov
mov
add
outsb
push
fsubrl
sbb
xor
or
inc
in
mov
rolb
in
in
jbe
popf
fistpll
mov
fmuls
and
mov
out
and
bound
les
xlat
dec
les
repnz
fstpl
xor
fs
repz
jg
xor
and
popf
push
rcr
fwait
int3
xor
sub
xchg
mov
movsb
add
arpl
lods
fists
pop
aam
xor
push
add
mov
loope
lock
test
test
pop
dec
mov
aas
xor
pop
sbb
adc
fdivrs
push
imul
pop
ret
fs
loop
mov
push
xchg
sahf
iret
mov
repz
adc
xchg
cs
sub
fdivrp
cmp
jecxz
push
jp
lds
lods
and
and
mov
push
or
out
sub
push
cmp
inc
test
lea
or
xchg
repnz
xlat
push
sub
dec
sub
cmp
mov
popa
cmp
int3
aas
jecxz
sbb
mov
aas
jae
lock
shr
lret
push
outsb
push
aam
jns
dec
jge
test
xlat
pop
jle
cmpsl
xor
leave
jmp
xchg
mov
lret
into
fdivp
roll
outsb
or
xor
sub
pop
out
into
push
out
lahf
sub
andl
movsl
loopne
mov
lahf
pop
outsl
out
hlt
sbb
inc
mov
popf
loope
gs
lcall
push
stc
pushf
dec
aad
mov
pop
jle
fsts
hlt
jp
push
sbbb
inc
jecxz
sarb
add
mov
loop
rolb
lods
ret
jge
adc
jbe
daa
into
scas
adc
les
add
lret
loope
or
mov
adc
leave
adc
ds
cs
repz
xchg
adc
mov
outsb
jecxz
push
addr16
fldt
mov
xchg
jnp
lcall
sbb
and
rclb
shrl
daa
dec
inc
dec
movsl
xlat
mov
sbb
cwtl
mov
frstor
lahf
mov
jne
adc
jecxz
mov
mov
hlt
lods
push
sub
pop
fs
sahf
icebp
arpl
dec
js
in
clc
inc
mov
or
imul
cmc
lcall
insl
aam
pop
sarl
scas
stos
adc
bnd
popa
fcmovb
adc
mov
js
imul
insl
xor
add
push
in
loope
xor
in
mov
jl
inc
int3
scas
sarl
sbb
inc
int
push
cli
adc
inc
lods
lea
sbb
cs
loope
outsb
fwait
hlt
pop
xor
imul
jl
push
popf
xchg
mov
mov
pop
sbb
insl
sti
movl
enter
ret
add
cmpsl
insb
std
jmp
scas
mov
mov
lret
pop
cmc
into
cmp
fstp
lds
adc
mov
add
gs
pop
push
xor
ja
fcomps
pop
sub
jae
shlb
sub
cmpsl
pop
push
and
jb
imul
push
jmp
inc
out
sub
push
xchg
test
addl
xchg
dec
adc
pushf
xchg
orb
fisttpll
add
push
dec
or
push
stos
stc
mov
inc
notl
mov
push
push
sub
inc
xor
mov
xchg
inc
data16
cmpsb
cltd
imul
mov
xor
mov
xchg
jns
adc
jne,pn
mov
ljmp
xchg
test
lds
xor
xchg
push
sub
push
push
xor
lret
sahf
jo
add
fldenv
pop
loop
push
mov
xlat
sbb
cltd
popf
xchg
jnp
dec
movsl
mov
enter
jle
cli
and
in
xchg
push
pop
mov
and
sub
int3
std
pushf
or
scas
into
sub
pop
mov
stc
dec
xor
jl
inc
sbb
push
jecxz
pop
lcall
dec
push
or
cmp
insl
sbb
les
sbb
push
andb
sub
jo
jg
add
and
mov
and
ss
sub
fldl
lcall
and
mov
cli
adc
out
jb
push
mov
push
dec
cmp
inc
or
xor
aad
aas
sbb
push
iret
dec
iret
jl
xchg
adc
jo
or
sbb
jge
mov
inc
jo
rcrl
sub
js
add
mov
icebp
loope
shl
repz
xor
jae
mov
cmp
pushf
sbbl
add
loop
lods
inc
mov
or
sub
mov
es
inc
jne
cmp
sbb
push
sub
into
aas
cmp
fsts
loopne
add
or
adc
mov
jb
xchg
rcll
xchg
leave
and
imul
popa
movsl
stos
mov
pop
adc
test
fnsave
lret
push
out
loop
fstpl
dec
aam
lcall
test
stos
xchg
sub
add
inc
xchg
scas
cmp
adc
cmp
jg
ds
sub
incb
jecxz
xchg
fisubrs
cmp
repz
xor
popf
jmp
xor
push
stos
cmp
mov
and
lods
cmp
mov
push
stc
mov
scas
out
movsb
outsl
adc
sub
jl
sbb
out
bound
int3
pushf
adc
iret
xchg
xchg
stos
or
inc
push
push
ss
fsubr
add
jns
cmc
mov
out
and
or
mov
cwtl
add
pop
nop
fisubrs
push
cli
stos
mov
shll
ret
dec
es
mov
cmc
or
cltd
mov
or
fisubl
pop
jmp
cmpsl
lret
rorl
pop
outsb
ror
and
xchg
inc
outsl
bound
call
pop
sbb
lea
les
mov
lods
test
jg
leave
jb
mov
repz
add
out
mov
push
ror
cmpsl
jno
out
cmp
jo
lods
cmp
out
std
into
mov
mov
push
xchg
cmpl
sahf
lcall
mov
cwtl
pop
adc
cmp
adc
lock
xor
xlat
lcall
jno
nop
sub
push
mov
xchg
mov
fildll
ja
and
adc
stos
pop
jmp
jbe
decb
jle
push
fdivp
orl
dec
add
or
add
cs
out
push
push
mov
fistl
push
les
hlt
jbe
int
test
push
dec
push
stos
sub
mov
aad
leave
sbb
push
pop
mov
loopne
mov
add
imul
cmc
fcmovbe
mov
clc
mov
mov
insb
aas
push
cmp
xchg
jl
es
call
out
test
jg
add
push
xchg
in
ja
jl
mov
adc
push
sub
xchg
jo
lods
jl
es
rcl
out
jb
divb
test
dec
xchg
imul
addl
fwait
cli
cmpsb
and
insb
push
je
leave
pop
int
int
lock
push
adc
push
lods
inc
fwait
push
adc
adc
or
and
jne
mov
pusha
and
push
out
mov
jb
lods
test
hlt
cmp
lcall
lds
imul
pop
xor
xor
popa
sahf
xchg
les
mov
ret
mov
sub
pushf
cmpsl
push
inc
test
push
push
or
ja
xchg
sub
and
lret
daa
sbb
sbb
xor
in
imul
or
or
jge
cs
fwait
sub
jl
sub
loope
push
cwtl
jne
dec
enter
fidivl
pop
xor
sbb
cli
push
xchg
dec
std
pop
test
sbb
daa
mov
icebp
add
xchg
pop
popf
xchg
adc
pop
xor
cmp
rorl
add
sub
das
imul
jns
adc
sbb
out
jb
shrb
fcmovnbe
and
mov
pop
loop
ret
loopne
jl
jb
sub
repnz
mov
adc
psrlq
faddl
and
and
mov
mov
fs
pop
jnp
and
fdivrl
fidivrs
bound
clc
sub
sarl
fnstenv
cmp
dec
xor
popa
mov
lds
fstps
lods
popf
xchg
xchg
lea
int
into
movsl
or
pusha
jg
mov
and
call
xlat
inc
add
xlat
and
xchg
data16
mov
not
ret
test
sti
ss
inc
xor
fisubrs
out
fwait
sarl
outsb
lret
ljmp
fs
ret
mov
outsl
push
or
out
sub
test
sbb
push
divl
sub
shrb
in
cmp
inc
insl
xchg
pop
push
mov
sbb
jp
push
cmp
addr16
mov
lods
mov
out
sbb
cli
sub
shll
pop
push
subb
test
dec
and
rcll
aam
scas
cmp
sub
or
fs
adc
jno
sti
mov
adc
mov
adc
sahf
mov
adc
enter
out
test
mov
xchg
aas
pop
loop
xor
adc
add
mov
sbb
in
xchg
mov
lret
cmpsl
jmp
orl
mov
sub
xchg
sub
insl
pop
jge
lock
out
movsb
data16
js
lret
lods
aaa
loope
pop
mov
mov
in
add
or
out
mov
dec
xor
cmp
xchg
imul
pop
ljmp
pop
xlat
aas
mov
out
add
cmp
fmull
jl
outsl
dec
lods
stos
pop
ret
mov
adc
inc
fcomip
adc
adc
sahf
stos
lods
jmp
gs
jge
sbb
adc
roll
dec
inc
out
fwait
imul
and
xor
push
xchg
stos
out
shll
lock
mov
mov
clc
dec
inc
rcrb
lahf
pop
je
lret
fcoms
cmp
arpl
stc
arpl
and
testb
int
fldenv
jns
out
jl
stc
mov
negl
rorb
lahf
jne
push
jge
lock
jl
mov
lcall
cmp
jne
testb
adc
mov
jge
loopne
xor
scas
sub
lcall
clc
shl
or
neg
cltd
cld
fcmovbe
or
aam
push
dec
mov
dec
imul
ljmp
push
int3
add
cmc
jb
cwtl
and
outsl
int
insl
lods
adc
xchg
aas
sbb
scas
pop
and
and
daa
in
dec
outsb
ja
stc
xor
cmp
loope
sarb
sbb
jbe
movsl
xchg
pop
jge
fiadds
icebp
sub
mov
mov
mov
mov
fiaddl
mov
test
jne
imul
mov
jle
std
sub
scas
jb
pop
pushf
ror
orb
cmp
push
test
cmpsb
cmp
loopne
leave
jo
es
mov
add
test
pop
push
pop
or
jo
pop
in
lods
flds
xchg
arpl
add
push
mov
cmp
xor
leave
pop
inc
ja
aas
in
js
out
std
or
sarl
add
xor
insb
mov
sub
jecxz
test
aaa
fsub
cltd
xchg
xor
xchg
sahf
mov
movsb
outsb
push
adc
push
push
sub
enter
fcoms
sbb
mov
kandnw
imul
fidivl
lret
add
fstl
cli
adc
imul
sub
fistpll
cmp
subb
sub
fnstsw
push
arpl
imul
insl
stos
std
out
push
xchg
jnp
cltd
leave
jae
enter
sub
adc
ljmp
in
mov
outsb
sub
adc
lcall
mov
iret
ds
fisubl
je
loope
pop
gs
mov
ljmp
mov
mov
mov
sub
shrd
repz
testl
bound
mov
lods
ja
mov
mov
or
mov
fs
int
xchg
sbb
xchg
aas
cmp
cmpsb
test
xlat
fstp
fistpll
push
and
push
and
xchg
idivb
sub
jne
cmp
ss
ja
xchg
scas
hlt
xchg
decb
xor
repnz
lods
loopne
dec
sbb
cmp
xlat
push
sub
sub
mov
and
out
insb
fisttps
and
out
outsl
test
mov
sbb
sbb
test
mov
inc
mov
xor
add
sub
jnp
mov
dec
dec
push
imul
mov
jge
jecxz
push
test
outsb
aad
iret
mov
das
mov
mov
arpl
xchg
data16
pop
push
or
daa
xchg
int
jo
cltd
loopne
and
mov
dec
aas
fcoms
dec
scas
adc
dec
in
mov
inc
int
push
cld
and
outsl
jo
dec
das
mov
sub
dec
adc
push
mov
mov
ja
push
fidivl
sub
das
in
jns
aam
push
push
dec
pop
xlat
dec
loope
or
test
dec
std
inc
mov
lahf
dec
ret
sbb
mov
fnstenv
out
xor
arpl
dec
pop
int
testb
stos
movsl
roll
cmp
dec
add
jo
aas
dec
mov
inc
cmpsl
mov
mov
popf
ret
or
icebp
popl
sub
pop
filds
pop
and
fildl
pop
xlat
xchg
fcoms
insl
jb
add
or
adc
out
inc
sbb
sbbb
mov
ds
xchg
mov
daa
leave
insb
xchg
stos
je
movsl
push
hlt
lea
inc
out
ret
js
push
push
mov
das
ss
xor
dec
cltd
mov
push
cld
adc
jge
hlt
lret
adc
pusha
nop
mov
pop
inc
out
sbb
subl
push
loope
adc
xchg
sub
inc
xchg
adc
addl
pop
jge
loop
mov
pop
jo
push
push
icebp
lock
pop
push
pop
push
insl
mov
jecxz
jmp
and
rclb
add
inc
dec
adcl
loope
sbb
mov
or
adc
cvtps2pd
cmpsb
loop
sahf
push
stos
cs
mov
dec
cmp
dec
dec
scas
lds
pop
std
push
fs
sbb
sbb
mov
sarb
test
sbb
scas
negb
jecxz
andl
mov
dec
sbb
pop
sub
insb
inc
inc
mov
cmp
hlt
xchg
xor
adc
pop
push
insb
int3
popa
inc
jl
ret
imul
test
inc
repz
repnz
pop
mov
popa
push
mov
and
mov
fcoml
mov
andb
cmp
pop
mov
pusha
mov
and
pop
outsl
push
stos
lret
sub
push
rclb
insb
pushf
push
xchg
mov
dec
test
fisubl
fsubs
xchg
stc
jo
fbstp
xlat
inc
loop
outsl
jge
sub
mov
aad
mov
push
adc
and
scas
sub
jns
imul
cmpsb
push
pop
pop
xchg
add
mov
xchg
repz
xchg
inc
fisubs
or
js
inc
scas
dec
out
add
aas
add
dec
flds
pop
cmpsl
into
adc
insl
fisttpl
mov
lds
xor
ljmp
lret
into
dec
xchg
mov
dec
sub
orb
ds
cmpsl
xchg
pop
cbtw
dec
int
in
aam
pop
sbb
inc
jecxz
fcompl
int
lds
hlt
push
clc
xchg
or
pushf
mov
jno
mov
loope
ja
mov
mov
hlt
cmp
push
outsl
add
cmp
xchg
mov
lods
outsb
mov
ret
inc
int3
xor
cmc
push
nop
dec
xorb
adc
out
pushf
adc
loope,pt
jne
popa
mov
cmp
jne
test
adc
inc
cld
add
lods
rorl
or
add
outsb
test
push
push
sbb
lcall
stos
lds
mov
outsb
loopne
cmpsl
popf
nop
push
cmc
mov
mov
pop
and
aaa
add
mov
rcr
dec
pop
in
rcrb
rol
xchg
shr
mov
clc
mov
jb
outsl
stc
push
paddq
mov
fdivrs
or
out
out
jo
inc
dec
inc
mov
mov
xchg
inc
std
dec
ret
stc
lods
or
aas
inc
pushf
dec
pop
pop
dec
lods
mul
xor
jb
push
sbb
sub
or
mov
rorb
mov
shl
xor
xchg
dec
addr16
jns
or
mov
fistps
add
arpl
pop
inc
fdivl
push
push
sahf
clc
rolb
push
jb
iret
fwait
sub
pop
hlt
mov
lock
dec
adc
xor
jle
cmp
lahf
dec
fstl
in
or
mov
jp
je
int3
mov
pusha
and
inc
int3
or
loop
xor
stos
cmp
ret
inc
adc
sarl
mov
insl
in
jecxz
xor
xor
shlb
mov
movsl
mov
out
shrl
sbb
jae
lods
xor
adc
ja
rcrb
daa
shlb
in
and
movsb
fsubl
and
dec
cltd
adc
lds
setp
leave
inc
out
inc
ja
jns
pop
pop
push
in
mov
mov
in
cmp
mov
add
xchg
push
xchg
mov
mov
dec
sbb
jo
push
fdivs
mov
and
scas
rcll
dec
xchg
mov
inc
mov
xor
lahf
adc
imull
pop
decl
dec
enter
aas
mov
fidivs
sbb
jne
push
xlat
sbb
mov
mov
icebp
jbe
das
scas
stos
pop
enter
cmpb
icebp
fcmovu
cltd
adc
dec
adc
fnstsw
cmp
rol
adc
mov
imul
scas
xchg
cvtps2pi
imul
inc
lret
mov
sbb
mov
insl
push
in
lahf
jecxz
subl
xchg
int3
mov
lea
mov
jge
das
imul
repnz
roll
cmp
nop
insl
addl
shlb
nop
sbb
bound
adc
xchg
ret
push
pop
add
adc
and
stc
paddsw
cli
pop
decl
fucomp
pusha
mov
movsl
inc
pop
and
sahf
adcb
enter
and
cmp
pop
iret
lcall
loope
bnd
stos
stos
jbe
fidivs
imull
push
outsl
ret
pushl
mov
cmc
sub
push
or
xor
lret
and
rol
sub
sub
inc
mov
test
inc
mov
adc
fldt
repnz
add
loopne
xlat
shrl
pop
sbb
lret
jmp
pop
mov
dec
push
fcomps
inc
sbb
outsl
movsb
jae
rorb
int
mov
push
dec
shrb
testl
cmp
das
sub
aam
pop
or
mov
int3
and
lds
js
sub
push
cmp
inc
sbb
outsl
xchg
pop
orl
data16
adc
icebp
lahf
popa
les
add
sub
mov
inc
or
test
aaa
jnp
in
or
sar
je
cld
ds
loop
adc
mov
push
je
xor
xchg
cmp
xor
pop
add
not
fmul
cmp
inc
mov
scas
push
orb
mov
and
mov
dec
adc
xchg
xchg
and
push
lea
shr
add
inc
nop
xor
add
in
jns
mov
xchg
inc
sahf
es
mov
sbb
lds
push
add
out
notb
mov
loope
pop
cwtl
mov
cmp
xchg
push
ja
cmp
mov
xchg
addr16
scas
pop
lret
inc
das
popa
and
sub
daa
outsb
test
shrb
push
rcrl
fwait
repz
lods
push
add
push
xlat
pop
call
test
idivb
push
xchg
lds
or
lods
add
mov
jle
xchg
xor
clc
pop
jmp
test
dec
inc
notl
mov
sti
xlat
cs
mov
xor
mov
sbb
mov
sbb
jae
jo
push
inc
add
imul
sub
fdivrs
stos
xchg
cwtl
in
xor
jb
sbb
and
inc
push
dec
push
lret
adc
push
stc
sub
add
sti
sbb
inc
call
mov
test
and
xchg
adcl
cwtl
mov
pop
jmp
adc
jl
outsl
daa
mov
popf
arpl
or
adc
aad
pop
mov
rcrl
ret
mov
adc
adcb
hlt
inc
add
xchg
add
repnz
repz
inc
lea
ljmp
dec
imul
xor
mov
push
sbb
cmp
es
rcr
mov
popf
mov
ljmp
push
sbb
lcall
sub
mov
test
push
mov
mov
dec
push
jl
sub
pop
cs
jno
dec
and
mov
lods
push
jo
sbb
jo
inc
add
pop
pop
sbb
add
jp
push
pop
mov
cmp
xor
mov
push
sbb
roll
mov
dec
add
mov
mov
arpl
bnd
push
xor
xlat
fsubrs
hlt
jg
movsb
test
lret
sti
ret
cmp
dec
daa
adc
and
or
cmp
or
pop
test
idivl
insl
and
and
pop
and
push
dec
ffree
cwtl
mov
or
pushf
outsb
mulb
mov
adc
out
adc
or
sub
cltd
dec
dec
pushf
jmp
cli
and
jge
insl
mov
cwtl
int3
inc
loop
daa
cltd
lret
mov
ret
ret
sbb
dec
xchg
mov
ss
sti
insl
mov
notl
jp
leave
mov
adc
nop
fyl2xp1
and
jecxz
xor
inc
add
sbb
push
jb
mov
xchg
mov
add
pop
pusha
dec
inc
imul
aam
sub
or
inc
in
lcall
mov
movsl
push
jo
call
lods
pop
dec
pop
mov
or
loopne
jp
and
or
jle
mov
outsl
jl
cltd
adc
sub
imul
cmp
subl
inc
push
mov
inc
outsl
cmpsw
gs
icebp
loope
xor
les
pop
outsl
in
mov
or
cmpb
sub
xchg
mov
insb
xor
push
or
sbb
fs
testb
adcl
fsubs
out
xchg
pusha
pop
mov
pop
inc
fwait
pop
rcrl
add
cmp
mov
popa
mov
cwtl
clc
dec
ss
dec
pop
pop
pop
std
xor
sbbb
jp
or
sbb
mov
sbb
xlat
arpl
leave
cmc
sbb
aad
or
and
insl
std
jbe
or
popf
lods
mov
jnp
push
aaa
jae
testb
and
and
fnop
dec
add
andb
and
inc
in
mov
repz
xchg
cmp
cmp
int3
stos
push
adc
xchg
xor
mov
daa
cltd
xchg
jmp
lock
dec
ret
xchg
cmp
sub
mov
and
push
sub
jecxz
jnp
cli
sbb
cld
lock
jge
mov
ljmp
and
adc
or
movsb
or
jle
dec
clc
or
pop
mov
add
xor
mov
int3
jbe
inc
insb
scas
cmpsl
xor
or
sbb
into
out
jecxz
cmp
std
push
xchg
jle
sbb
inc
jbe
jae
sub
add
pop
pusha
inc
pop
rorb
mov
sbb
cmpsl
sub
pop
negb
lahf
das
xchg
sbb
ljmp
mov
mov
mov
push
xor
jne
jns
pop
js
inc
aas
pop
movsb
aam
outsb
pop
xchg
insb
sahf
lock
mov
dec
addr16
aaa
fwait
out
lcall
aad
es
and
sub
lret
imul
outsb
push
sub
outsl
sub
cmpsb
lret
aaa
les
add
jecxz
test
push
sti
icebp
xor
mov
push
sbb
ficompl
ss
leave
aaa
or
das
pop
sub
js
jmp
mov
aas
mov
repnz
adc
arpl
jo
xor
out
lret
xchg
out
mov
cs
lret
cwtl
fstpt
inc
push
jp
mov
mov
dec
nop
stc
cmp
jne
cmpsl
inc
cmp
xchg
inc
inc
pop
pop
mov
movsl
push
outsb
dec
pop
pop
stos
sbb
or
and
sub
mov
mov
mov
dec
add
mov
mov
rcll
fisttpl
leave
lret
cmp
cld
out
add
test
inc
mov
pop
cmc
aas
fsub
or
mov
pop
dec
mov
mov
mov
clc
pop
es
data16
and
sti
jg
and
or
es
inc
stc
jp
shr
mov
push
adc
adc
imul
adc
movsl
repz
mov
in
test
sbbb
pusha
mov
jne
imul
inc
pushf
cli
adc
ds
push
push
push
push
mov
mov
or
sub
in
femms
cltd
nop
test
test
daa
mov
faddl
popf
sub
or
cmp
xorl
les
repnz
mov
ret
in
xorb
in
xorb
cmp
xchg
dec
icebp
jae
pop
pop
gs
push
ljmp
fcompl
adc
pop
or
push
mov
and
repz
add
mov
lods
xchg
out
push
xchg
mov
sub
in
mov
xchg
je
sub
pop
ja
popf
xor
setns
dec
jle
out
dec
mov
adc
sahf
jo
lahf
push
adc
es
mov
jmp
fmull
xchg
iret
cmp
arpl
push
and
adc
jle
movl
mov
fimuls
sbb
vorps
lret
ds
add
sbb
lcall
scas
pop
int3
cwtl
jmp
test
adc
int
test
test
cmp
loop
mov
inc
xchg
mov
ja
fadd
sub
imul
push
and
lea
loope
xchg
add
outsl
jp
push
xor
jae
cmp
lods
rclb
out
sbb
and
clc
push
sbb
insb
ss
test
arpl
test
testl
clc
in
sub
cli
jo
in
or
shlb
xchg
sbb
dec
je
int3
sbbb
adcb
jne
icebp
daa
xchg
repnz
push
lods
mov
or
mov
insl
sbb
out
cmpsb
inc
test
pop
jge
imul
add
mull
ds
add
fdivl
pusha
dec
add
fs
push
and
jno
xchg
push
pop
push
xchg
sarb
add
push
addl
mov
xor
adc
cmc
gs
insl
fimuls
mov
stc
push
jmp
fdivr
mov
js
inc
dec
std
or
sahf
jl
mov
lock
push
outsb
mov
popf
lret
or
mov
bound
fists
cld
repz
mov
jecxz
lcall
sbb
jb
rcrb
add
dec
mov
pop
sbb
lds
or
wbinvd
sub
cmpsl
inc
pushf
sbb
test
repz
fldl
lods
inc
pop
xor
mov
jg
xchg
push
push
jne
arpl
aad
rcrl
in
test
test
loope
js
movl
pop
dec
mov
fs
lret
and
ret
or
cmc
fidivrs
adc
loope
loopne
ror
or
push
or
inc
inc
pop
add
jp
jae
shlb
mull
xchg
ljmp
cmc
js,pn
repnz
mov
sub
and
cmpsl
mov
adc
sub
enter
aad
loopne
add
test
mov
in
mov
push
test
add
aad
xchg
adc
cmpsb
inc
insb
mov
inc
or
adc
ss
and
or
setge
int3
repz
leave
xor
popf
cmp
xor
je
in
sbb
inc
cld
stos
popa
hlt
outsl
sub
dec
mov
movl
jg
dec
stos
or
mov
cld
sbb
or
out
xchg
stos
clc
aam
ret
mov
data16
xchg
imull
enter
pusha
icebp
sbb
ja
dec
xchg
lahf
sbb
mov
jbe
and
jle
pop
fwait
dec
and
andb
std
cli
xchg
ret
mov
sahf
mov
mov
cmpsl
stos
or
push
fnsave
cmpsb
pop
mov
rorb
push
push
mov
int
divb
cmp
iret
push
nop
cmp
jb
sti
push
inc
sub
and
inc
mov
adc
icebp
xor
pusha
push
or
outsb
and
fisttpll
inc
cltd
sbb
push
xor
jnp
mov
sbbb
xor
push
push
push
fcmovu
jne
in
inc
jmp
pop
pop
andb
icebp
aad
outsb
rcrb
pop
cmp
inc
xlat
out
pop
adc
mov
mov
xor
popa
mov
leave
xlat
or
adc
mov
out
xor
jno
mov
testb
cmc
mov
sbb
xor
and
imul
mov
or
inc
xchg
aas
jge
es
mov
icebp
mov
loopne
jns
pop
pop
into
cmp
add
mov
push
adc
or
cmp
icebp
push
in
movsl
xor
adc
loope
jp
fs
pop
add
xchg
ret
add
and
test
nop
daa
pop
push
xor
adc
or
std
pop
mov
push
sti
leave
movsb
mov
jns
push
data16
cmc
divl
call
rcr
cltd
xchg
je
aas
xor
push
mov
mov
or
mov
xor
test
cmp
adc
inc
mov
out
xchg
jo
jle
xor
into
repnz
cmc
pop
adc
andb
pop
fistl
mov
mov
inc
sub
repnz
aam
shll
sub
xchg
push
test
add
fs
bound
adc
sbb
cltd
repz
jmp
shll
and
inc
in
mov
fwait
ret
scas
jecxz
inc
scas
sub
sbb
inc
and
shll
sub
push
dec
bnd
jns
jge
jbe
repnz
add
sub
cmp
lods
jns
popa
sbb
rorl
sub
push
mov
xlat
mov
sub
mov
xor
rol
xchg
ret
xchg
lock
adc
dec
nop
add
popa
mov
inc
adc
jmp
test
lds
pop
xor
xor
dec
mov
push
mov
push
in
outsb
inc
or
push
pop
mov
inc
ret
scas
dec
stc
lock
fsubrl
subl
out
inc
mov
fadds
or
out
push
mov
push
cmp
sbb
lods
ficoml
int
test
push
push
int
shrb
aam
xchg
sarl
paddb
cmp
or
add
outsl
pop
or
inc
mulb
mov
xchg
aas
inc
push
out
test
sub
sbb
dec
lods
xor
xor
ret
lea
pop
jne
out
push
out
xor
mov
jl
adc
pusha
test
inc
fnstsw
fwait
ljmp
xchg
or
in
ja
mov
mov
and
ljmp
dec
cmp
mov
test
mov
mov
sbb
pusha
pop
std
ss
ficompl
mov
out
jno
pop
sbb
add
xor
push
add
and
cmp
sub
pop
mov
inc
xor
cmpsb
mov
and
popa
jle
in
iret
jmp
imul
mov
cmp
cmp
pop
in
add
jecxz
pop
repnz
push
push
int3
mov
in
xor
lods
or
sahf
jecxz
mov
jge
fldenv
dec
cmp
cmpsl
push
cmpsl
jge
dec
mov
xor
adc
shl
or
test
testb
sarl
push
lods
rolb
rorb
mov
iret
sub
add
xor
xor
xor
jb
lret
aas
xchg
xchg
je
mov
lods
es
pushf
mov
cmpsb
mov
dec
pusha
ja
mov
sub
mov
lods
in
inc
mov
add
lock
mov
call
sarb
cltd
push
mov
mov
adc
or
ja
push
mov
in
std
insl
mov
in
div
mov
sub
ljmp
into
sub
sub
pop
add
rep
or
mov
push
mov
lcall
add
enter
orb
add
jge
inc
mov
pop
in
or
stc
das
lods
fldl
pop
add
ja
cmp
call
mov
aam
xor
and
push
shl
mov
bound
clc
stc
leave
movsl
xlat
scas
shrl
or
test
sub
xor
push
iret
dec
adc
hlt
dec
inc
rcrb
ror
mov
xor
stc
popa
shll
mov
mov
jecxz
icebp
jo
jnp,pt
jp
lods
nop
xchg
clc
divl
std
cmp
das
and
jecxz
rorb
sar
mov
mov
sbb
fwait
fwait
cmp
sbb
sbb
dec
cs
lea
sub
mov
out
mov
outsl
fiadds
and
mov
repz
test
mov
rclb
cmp
scas
rcr
push
fadds
jp
xchg
inc
cltd
in
jle
aad
rcrl
pusha
inc
std
jmp
sbbb
mov
xor
lret
sub
xor
push
xchg
sbb
sbb
iret
and
decb
jmp
and
popf
sbb
mov
loopne
mov
push
and
xorl
repz
dec
xchg
je
inc
pop
fbstp
sub
fwait
sbb
stos
sub
add
fsub
add
push
mov
or
xchg
je
inc
in
popa
mov
hlt
les
mov
shl
push
pop
fnstsw
mov
add
in
pop
xchg
cwtl
into
repz
mov
aas
mov
xor
stos
jge
int
push
add
idivb
leave
cmp
mov
dec
sbbl
adc
nop
dec
call
iret
out
adcb
cwtl
ljmp
subb
xchg
test
dec
cmp
shl
mov
movsb
imul
pushf
xchg
xchg
inc
pop
jae
inc
xchg
popf
ss
jae
fidivs
mov
sub
je
mov
pop
sub
inc
popf
adcb
fs
add
into
dec
scas
pop
movsb
loopne
xchg
mov
rclb
fwait
outsb
enter
rcr
inc
lret
mov
je
jl
xchg
sarb
push
mov
adc
pop
xchg
imul
es
jne
iret
icebp
lahf
inc
dec
mov
jl
jo
or
dec
mov
outsl
lods
aaa
fnstsw
test
outsb
mov
adc
shlb
push
hlt
xchg
loope
push
mov
xchg
cli
stc
xchg
fbstp
push
jb
jmp
lahf
loopne
cmp
mov
xchg
mov
jnp
hlt
cs
pop
and
fisttpl
pop
sbb
ljmp
out
mov
lret
std
nop
je
je
in
les
shl
sub
fistps
scas
fiaddl
leave
into
fmulp
push
das
scas
adc
addb
xchg
jg
test
push
cmp
pop
sti
mov
mov
dec
push
mov
loopne
sbb
test
mov
in
dec
mov
outsb
push
push
sub
xor
or
out
mov
das
js
xlat
pusha
cmp
push
jbe
sbb
mov
mov
sarb
shll
enter
scas
loopne
fldcw
nop
in
xor
and
aad
out
fcmovu
movsb
fwait
dec
push
repz
lret
lea
fucomi
mov
add
das
roll
pop
in
fs
movsl
lret
adc
fstpl
sbb
adc
enter
mov
add
cmp
push
jo
jns
imul
and
xchg
sbbb
call
inc
pop
push
dec
mov
sub
data16
mov
add
aad
push
stos
add
and
xor
xchg
inc
lds
sub
xchg
jne
dec
psrad
dec
xlat
cmp
adc
pop
pop
inc
scas
mov
cmp
lahf
std
add
push
dec
add
dec
outsb
loope
inc
dec
loope
mov
shlb
jo
test
mul
pop
and
es
mov
pop
sub
xchg
lods
cld
push
lret
mov
pusha
or
aad
push
inc
sbb
in
pop
ja
push
cli
pop
aaa
out
cmp
loope
sbb
out
adc
out
dec
mov
jecxz
push
rcr
push
dec
add
adc
sbb
xchg
out
add
cmp
push
out
cmc
and
sub
testl
xchg
int
xor
pop
xchg
fistps
aad
xor
xchg
xchg
push
in
mov
out
xorb
add
inc
mov
adc
adc
push
cmc
cs
xor
imul
mov
add
add
adc
jecxz
insl
ljmp
or
adc
or
daa
or
add
or
mul
ficompl
ret
aad
inc
pop
xchg
dec
dec
sti
dec
jno
outsb
pop
test
jecxz
xor
lcall
je
arpl
mov
sbb
pop
cli
push
sub
adcb
xor
or
dec
mov
pop
and
js
bound
jmp
xor
gs
sbb
sbb
push
add
xor
pusha
out
nop
jp
hlt
jno
dec
jbe
mov
jnp
mull
mov
cmpsl
xchg
lret
fwait
movsl
adc
pop
aaa
push
stos
repnz
jno
mov
xor
outsl
xor
mov
and
popf
adc
stos
mov
mov
or
or
arpl
inc
sbb
adcb
xchg
ret
aaa
scas
inc
int3
fisttps
repnz
jnp
stc
clc
cmpb
mov
xchg
sbb
outsl
mov
rcll
sti
out
fdivrl
out
inc
pop
push
aam
test
pop
adc
ret
mov
mov
out
pop
std
and
pop
push
rclb
jne
push
sub
mov
movl
ja
jnp
arpl
pop
sbb
xchg
mov
sti
dec
mov
cwtl
cmp
mov
or
sbb
dec
jge
fs
cltd
pop
call
std
and
sahf
mov
jbe
mov
jle
ss
movsl
vpslld
inc
int
rorb
scas
push
pushf
mov
jb
adc
add
imul
push
push
loopne
add
push
push
mov
and
imul
into
cmp
push
arpl
jg
shlb
or
mov
cmc
sbb
and
enter
pop
cld
jns
stc
fcmovnbe
jmp
dec
incb
mov
pop
ds
fwait
and
arpl
dec
push
adc
mov
adc
std
cld
out
push
ss
loopne
jl
outsl
mov
insb
push
int
mov
insb
insl
and
test
repz
in
movsb
lahf
xlat
inc
movsb
xchg
xchg
es
adc
test
into
mov
xchg
cmp
xor
add
adc
sbb
and
xchg
push
idivb
pop
je
adc
push
dec
adc
movsb
or
dec
test
jle
daa
lods
xor
mov
add
rcl
in
mov
iret
sub
add
ljmp
and
fwait
mov
cmp
jge
fcoms
loopne
mov
test
aas
cmp
fcomi
fwait
ret
jo
insb
pop
je
scas
popf
fcoms
test
call
inc
hlt
xchg
mov
mov
mov
add
or
dec
insl
push
dec
cld
insb
ror
sbb
shrb
dec
je
jne
ja
jns
jecxz
movsl
dec
pop
pop
sub
sub
sub
es
cltd
add
notl
mov
fsubs
fdivrl
lret
push
repnz
mov
sahf
jmp
xchg
decl
mov
jmp
es
in
imul
mov
jns
call
pop
imul
add
xor
ljmp
iret
dec
dec
pop
lea
rcrb
pop
lret
rclb
adc
scas
ljmp
ret
cmp
mov
xchg
aas
xlat
outsl
lea
es
test
add
fstpl
pushf
and
pop
outsl
push
mov
cltd
idivl
mov
test
inc
sbb
outsl
or
mov
xor
xchg
jl
je
fidivrl
cmp
add
or
jle
cmp
jbe,pn
push
mov
out
inc
cmpsb
ret
jno
ljmp
pop
outsl
enter
and
xchg
mov
mov
fucomp
movsb
xor
out
mov
shll
les
enter
mov
mov
push
out
popa
push
loopne
cli
out
adc
rcll
dec
leave
cmp
fmull
int
jbe
dec
divl
pop
mov
loope
or
jg
fsubrp
xchg
inc
pop
fdivs
repz
sub
xchg
xor
rorl
ja
data16
decl
mov
sbb
sti
jae
jno
inc
cmp
mov
and
pop
lahf
aas
or
mov
push
push
aaa
sub
cmp
out
dec
sti
addr16
xchg
lret
cmp
shrb
or
call
lods
aas
imul
insb
mov
xor
xchg
shrb
mov
or
sarl
dec
xor
xchg
repz
aad
jae
dec
addps
pop
aam
insb
add
imul
or
push
lods
xchg
icebp
aaa
push
stos
sub
mov
sbb
jo
sbb
lret
ds
push
inc
adc
dec
pop
pop
bnd
sbb
jecxz
outsb
cmp
lahf
pop
jecxz
mov
leave
fs
push
negb
or
push
aas
leave
xor
mov
scas
or
inc
push
dec
jns
stos
outsl
out
clc
icebp
jg
loope
es
adc
sub
adc
sub
das
out
into
mov
sahf
sbb
aas
sub
xchg
lret
subb
imul
pop
xchg
pop
rclb
mov
cli
inc
das
adc
ljmp
pop
fldcw
mov
je
pop
jnp
addr16
fmuls
and
daa
push
xlat
push
std
andb
sbb
mov
clc
rclb
ror
adcl
and
jnp
jo
jmp
fimull
jb
pushf
push
or
add
sbb
inc
adc
paddd
mov
jmp
inc
outsb
nop
or
std
jo
notl
push
mov
mov
push
addb
or
xor
dec
push
jbe
add
sub
nop
mov
cmpsl
nop
lahf
inc
idivb
popl
lds
fldt
jb
xor
out
dec
scas
inc
ja
mov
mov
xchg
hlt
mov
jmp
pop
adc
jo
fstps
in
dec
jbe
jnp
aaa
stos
outsb
out
sub
push
sbb
lret
jo
in
jb
test
les
or
xor
jp
aaa
inc
scas
inc
rcr
sbb
inc
cmpsb
mov
xchg
lahf
daa
aad
mov
jecxz
jne
jmp
int
sbb
and
or
xchg
imul
jae
push
mov
movsl
xor
mov
inc
jmp
xchg
call
adc
cmpsl
pop
cld
fldcw
cmp
cwtl
lods
push
xchg
sub
xor
ficompl
cmp
popa
div
adc
push
sbb
out
add
push
imul
push
inc
mov
je
enter
and
mov
pop
xchg
dec
mov
sti
cmpsb
test
enter
repz
pop
lock
sbbb
shrb
adc
leave
cs
test
mov
dec
push
js
push
xor
or
xchg
jge
inc
ficomps
dec
inc
decl
mov
les
dec
xchg
xchg
mov
adc
popl
push
adc
pushf
clc
sbb
adc
fsubrl
sbb
in
data16
pop
cmpsb
stos
add
sbb
add
mov
mov
pushf
push
sub
inc
loopne
xor
fsts
mov
loopne
fsubrs
dec
mov
inc
test
je
je
xor
pop
scas
sbb
cwtl
cwtl
push
sub
cs
add
add
lahf
call
aad
mov
rcrb
iret
out
add
mov
mov
xchg
mov
mov
fimull
add
xor
or
xor
mov
xchg
xchg
mov
icebp
dec
rorb
in
dec
sbb
dec
pop
imul
mov
cld
ret
inc
mov
xchg
pusha
push
movsb
divl
out
cld
mov
push
mov
dec
xchg
mov
es
insb
repnz
add
xor
cld
fmull
ss
hlt
popa
xchg
and
fcom
pop
testb
xchg
daa
sub
jge
cmp
push
push
mov
mulb
pusha
imul
lods
std
xchg
jmp
cltd
fldt
mov
test
lahf
out
repz
lret
xor
lock
jb
cmp
out
js
out
or
lahf
mov
ja
lods
cmc
in
xchg
sbb
cmp
mov
lcall
icebp
mov
pop
mov
xor
iret
push
push
cmpsb
mov
lahf
pop
dec
mov
out
push
daa
sbb
pop
fistl
je
imul
or
rcr
xchg
cli
push
bndldx
dec
inc
adc
inc
outsb
adc
pop
and
fsubs
add
cltd
test
push
xor
cltd
in
out
mov
mov
mov
cmc
cmp
sbb
mov
arpl
jne
test
fsubrs
andl
out
test
push
dec
sbb
nop
sbb
mov
mov
add
adc
xchg
jle
jge
sti
mov
pop
pop
in
jae
ret
and
mov
dec
imul
data16
jbe
test
sub
dec
xchg
push
les
call
add
in
jmp
mov
xor
lahf
rdmsr
mov
mov
mov
testl
jmp
in
jle
mov
out
mov
int3
jb
cmp
mov
xchg
xor
test
mov
sbb
aad
pop
pop
fstpt
mov
push
add
aaa
add
push
cmc
add
push
scas
pop
and
dec
sbb
out
push
cmp
aaa
mov
jo
jmp
je
ljmp
movsb
insb
in
aad
add
add
in
bnd
in
or
fcmovnb
loop
pop
mov
std
dec
cmp
shll
sahf
shlb
sbb
js
jbe
ljmp
pushf
sub
mov
cli
call
nop
jne
dec
xor
out
bound
stos
popa
js
sahf
out
into
xchg
mov
inc
or
mov
fs
bound
lods
icebp
jno
push
jne
push
or
das
cmp
and
in
pop
iret
xor
dec
jns
loop
mov
adc
mov
fidivrs
arpl
fs
jg
dec
lods
jge
mov
aam
and
fstpl
and
bound
sbb
cmp
inc
sub
jno
sbb
test
add
xchg
and
fstps
xor
sub
mov
mov
pop
es
mov
leave
jnp
enter
mov
leave
push
dec
movsb
loope
push
mov
fcoms
nop
loope
and
cs
mov
or
shll
loope
inc
xor
aam
imul
jmp
insl
xchg
shll
stc
and
jns
dec
dec
sub
and
push
out
jno
in
call
int3
int3
sbb
rcrb
adc
test
push
decl
ret
jo
pop
push
sbb
fistps
shlb
adcb
mov
xor
inc
fs
and
lahf
aaa
sarl
pop
in
imul
loop
fwait
inc
inc
stc
hlt
mov
loope
xor
popf
pushf
add
insl
rcl
in
jl
aas
shlb
cli
pop
addr16
add
xchg
or
shll
fs
jno
xchg
cmc
movsl
pop
cmp
lds
lret
shll
pop
daa
mov
mov
inc
js
inc
test
popa
cmp
sahf
iret
push
jnp
ret
aam
les
rcl
int3
sub
xlat
or
in
stos
jge
dec
sub
xor
jo
ljmp
cmp
mov
sbbb
test
das
xor
notb
insb
in
ja
icebp
idiv
test
mov
and
and
in
xchg
mov
sar
test
stc
in
shlb
sti
lock
xchg
jl
cmp
jno
add
push
leave
push
push
setg
popf
imul
dec
testb
inc
adc
jo,pt
xchg
dec
jne
pop
out
mov
inc
xor
imul
cmc
and
shr
push
xchg
jl
xor
lret
ss
aam
insl
mov
enter
negb
push
loope
test
jecxz
inc
loopne
gs
addr16
stc
xchg
hlt
xchg
mov
inc
mov
lds
insb
mov
cltd
adc
or
sbb
faddp
push
mov
cltd
inc
xor
mull
xor
daa
or
sbb
fscale
sar
in
jb
test
inc
jns
mov
jp
dec
inc
sar
sub
push
cmp
cs
cltd
mov
add
loopne
cmp
das
ss
mov
fstpl
shll
xchg
xor
lock
gs
push
xor
out
adc
cmc
jecxz
jbe
pop
add
lods
int
lahf
push
clc
sbb
add
sbb
mov
aam
adc
mov
and
fisubrl
mov
or
sbb
cs
test
rcr
xor
stos
xchg
xchg
mov
cmp
jl
pop
jmp
js
loop
rol
xchg
aaa
test
pop
add
cmp
mov
frstor
dec
outsb
and
insb
in
aam
ret
out
mov
lret
ljmp
push
loope
lcall
adc
sahf
inc
movsl
test
push
push
jg
inc
pop
shrb
sub
jb
inc
shrb
jg
lods
test
adc
sbb
out
lods
in
outsl
movsl
leave
or
pop
lods
jns
icebp
push
cli
jl
sbb
in
dec
sti
lahf
sub
xchg
loope
mov
push
test
ret
mov
loope
int3
pop
mov
popl
pop
jge
inc
sarb
cmc
std
dec
xchg
xchg
fadds
push
pusha
fistpl
rorl
xor
jne
cltd
mov
stos
pop
in
adc
into
fiadds
out
loope
mov
mov
ja
push
cmc
and
adc
aaa
add
inc
sub
ficompl
ljmp
xchg
push
mov
mov
mov
jge
adc
mov
sbb
mov
dec
adc
xor
dec
dec
inc
sbb
out
in
dec
repz
push
enter
lock
sub
imul
pop
out
out
shlb
cs
icebp
into
int3
jp
dec
mov
fcmovbe
or
cmp
daa
mov
or
mov
xchg
xlat
gs
stos
inc
mov
jle
jne
xor
sub
inc
xor
add
sub
jmp
lret
xchg
out
aas
pop
scas
and
daa
sub
int
adc
inc
jo
inc
sbb
mov
stc
sub
xchg
cmp
sbb
mov
mov
les
sbb
push
add
in
lret
mov
adc
loop
cmp
pushf
dec
data16
or
cmc
cmc
icebp
pop
or
insl
clc
sbb
mov
adc
dec
mov
pop
call
in
aam
inc
in
inc
pop
inc
dec
push
sub
or
xor
clc
cmp
push
sub
dec
jle
aam
pop
adc
xchg
adc
int
or
pop
sbb
jl
lock
ret
js
push
mov
pop
cmp
in
mov
dec
cwtl
lcall
xor
adc
jle
sub
push
imul
jnp
lea
mov
cmp
lret
push
out
mov
and
jg
aam
inc
cmp
xor
cmp
sub
pop
cld
mov
ljmp
loop
fxch
sbb
xor
pusha
xor
lods
pop
psubw
push
sub
cmc
movsb
out
cmp
pusha
xchg
ror
dec
pop
dec
adc
fwait
shrl
nop
aad
jge
mov
mov
test
stos
stos
int3
adc
push
aam
add
add
test
adc
stc
cmc
push
test
add
lahf
or
mov
and
mov
testl
push
ljmp
sbb
out
sub
cltd
fwait
imul
adc
mov
cmpb
daa
stc
mov
add
dec
and
pop
or
sub
mov
rcrl
in
enter
movsl
mov
cli
sbb
add
cmpsl
fstps
adc
idivl
es
aas
adc
imul
je
xor
data16
in
fidivl
and
push
test
mov
into
mov
and
mov
into
mov
push
jns
add
xor
push
outsl
cmp
cld
dec
call
adc
xor
test
push
jle
cmc
add
loope
out
push
incb
aam
cmp
dec
in
inc
adc
mov
add
xchg
cmp
into
pop
cli
nop
out
std
or
mov
dec
adc
ja
repz
notl
fiadds
test
out
inc
cmc
fistps
daa
nop
and
mov
mov
in
in
dec
stos
xor
lahf
and
cmp
faddl
imul
fbstp
add
mov
and
fstl
push
movsb
mov
push
pop
lods
leave
pop
jle
sbb
mov
push
mov
jmp
les
aam
mov
cmpsl
cmpl
push
add
cltd
add
add
xor
fsubrl
and
mov
cld
push
and
sub
inc
decl
pop
fwait
mov
mov
push
dec
mov
and
out
jmp
mov
les
pop
rolb
mov
call
loopne
out
pop
mov
lea
xchg
dec
out
push
mov
push
daa
in
pop
fmul
push
jns
gs
jecxz
xor
xchg
pop
rclb
fwait
shll
filds
loop
in
jbe
ja
scas
lahf
xor
mov
and
out
sbb
sub
jae
dec
mov
mov
setl
xchg
pop
adc
fnstsw
cmpsl
leave
aad
mov
scas
iret
pop
imul
mov
test
into
cli
mov
adc
bound
cmpsb
jg
out
or
or
je
popa
clc
test
or
add
xchg
les
xchg
inc
dec
cmp
jp
insl
aad
mov
mov
jp
incl
xchg
std
ret
and
push
adc
jp
repnz
xor
lods
add
mov
test
movsl
lcall
push
aas
insl
mov
test
inc
cmp
pop
and
cmp
fstps
in
aaa
cmp
repz
push
xchg
dec
pop
mov
sbb
div
dec
xor
aaa
dec
mov
mov
cli
xor
fld
out
jbe
je
mov
adc
mov
jbe
or
std
test
or
mov
jns
inc
adc
aaa
leave
or
jmp
rorl
add
jge
fmull
arpl
into
test
and
push
xchg
xchg
mov
std
sbbb
pop
sub
xor
add
cmpsl
xor
xor
mov
rcll
fldenv
dec
push
inc
and
pop
pop
push
dec
cmp
idivb
out
addr16
adcb
jmp
movsb
xor
test
xchg
jne
out
pop
cmc
add
ret
dec
out
ficoms
push
mov
mov
xor
push
outsl
dec
ljmp
jns
loop
bound
xchg
adc
add
push
mov
popa
jbe
and
popa
iret
adc
push
iret
sub
movsl
shlb
cmc
cmc
sbbl
push
gs
xor
xchg
push
into
mov
xchg
mulb
add
cli
jne
pop
insl
outsl
clc
stos
pop
add
pop
rcl
lds
or
shl
jo
lods
mov
and
xor
fsubp
nop
xchg
sub
loop
and
mov
cmp
and
mov
ljmp
pop
les
xchg
lock
mov
cld
pop
insl
repnz
xchg
es
adcl
or
fsubs
in
addr16
not
jmp
aaa
mov
jg
fnsave
add
jmp
pop
and
sbb
jg
inc
lds
jle
lods
rcl
adc
push
and
and
rol
pop
lock
in
int3
cmpsl
push
popa
add
push
cmpsb
adc
and
mov
mov
repnz
jbe
xchg
mov
scas
dec
adc
popa
lds
ret
xor
xchg
xchg
add
sub
arpl
mov
dec
cmp
jl
xchg
sbb
out
out
jmp
mov
xchg
cmp
hlt
in
es
mov
sub
test
je
test
stc
xor
mov
mov
int
mov
mov
adcb
ja
dec
mov
xchg
pop
cmp
jecxz
inc
scas
loopne
pusha
loopne
push
cmc
frstor
adc
inc
ja
cmpsl
addr16
sbb
sahf
jl
call
push
xchg
mov
xchg
shll
jne
cmp
test
add
adc
pop
shl
add
iret
pop
xchg
lret
or
dec
mov
push
out
sti
and
add
imul
addb
test
outsb
test
mov
xlat
shlb
lea
sub
push
repnz
daa
xchg
popf
inc
inc
imull
adc
js
rsqrtps
mov
es
in
adc
jl
adc
mov
push
xchg
jl
cmp
mov
dec
test
xor
inc
push
fidivl
xchg
pop
fs
rolb
out
sbb
mov
mov
pop
les
popf
and
sub
mov
sahf
cmp
jg
pop
test
mov
outsl
mov
xlat
xor
jecxz
jb
nop
call
inc
aam
rcll
in
xchg
inc
scas
iret
punpckhdq
and
xchg
sbb
or
movsb
lea
aad
sub
mov
jne
mov
out
ljmp
insb
sbb
inc
fildll
cmp
hlt
imul
std
in
or
movsb
lcall
hlt
xchg
notl
push
mov
mov
dec
sbb
loopne
lds
xchg
add
stc
lret
negl
jbe
enter
lods
pop
lds
pop
and
push
xchg
sub
orl
mov
mov
out
fstl
stc
popf
ljmp
addl
test
inc
addb
sbb
fdiv
ljmp
jno
test
adc
add
lods
dec
sarl
out
stc
aaa
mov
es
jbe
mov
sub
push
cmc
lret
dec
scas
inc
jno
sahf
adc
fstps
pop
push
pop
mov
jp
xor
and
test
fcmove
cmc
or
scas
jl
insb
inc
push
jp
pushl
xor
sbb
pop
jg
add
inc
add
mov
loopne
popf
mov
repnz
mov
dec
bound
fdiv
xchg
jbe
pop
adc
or
inc
nop
mov
fcom
aaa
mov
mov
jae
inc
sbb
mov
and
push
int
das
sti
sarb
xor
or
cli
adc
jne
jmp
pushf
hlt
gs
push
jb
jg
jp
or
jns
or
arpl
adc
lods
testl
and
out
pop
inc
inc
cmp
push
lock
roll
mov
mov
adc
add
xor
outsl
fiaddl
insb
out
mov
sub
loopne
loopne
push
mov
push
testl
add
push
and
mov
add
leave
in
inc
inc
daa
sub
xor
bound
adc
pop
sarb
and
outsb
pop
pop
jmp
sbb
jnp
cld
mov
gs
xchg
outsb
and
sub
mov
lock
cmp
mov
and
cli
push
sub
sbb
jg
sub
cmp
enter
clc
bnd
xchg
decb
cld
inc
xchg
notb
out
push
loop
xchg
cmc
mov
push
orb
add
cwtl
aad
inc
icebp
mov
dec
ret
fdivr
xchg
sbb
and
dec
dec
xchg
jle
pushf
xchg
pop
jbe
push
outsb
jmp
dec
bound
lods
add
je
int3
stc
cmpsl
jl
push
push
mov
cmpb
sub
neg
add
lret
jle
adc
pop
ja
inc
ljmp
sub
icebp
loopne
push
arpl
add
shrb
jnp
xchg
fldl
cltd
ficompl
pop
lahf
mov
pop
mov
cmp
mov
or
xor
dec
outsb
pop
dec
call
or
scas
popa
flds
pushf
call
and
pop
cli
imul
mov
loop
mov
and
ret
cs
pop
insl
into
push
xchg
adc
dec
es
add
enter
and
fcoml
push
sbb
ljmp
push
dec
push
cmp
xor
ja
aam
into
into
mov
dec
cli
mov
lods
mov
adc
das
sub
fs
jns
inc
add
enter
shlb
cmp
rol
andl
jecxz
icebp
imul
loope
push
pop
pop
cld
fs
sub
push
jge
jp
jb
ja
mov
pop
mov
xor
test
xchg
mov
sahf
pop
mov
xchg
arpl
imul
mov
das
xchg
pushf
mov
imul
mov
mov
pop
mov
aam
jo
inc
aaa
sub
sbb
test
mov
insl
testl
fnstenv
repz
dec
stos
pop
repz
imul
or
inc
insl
adc
fisttpl
inc
leave
cltd
dec
jle
popf
popa
jb
pusha
addl
popa
movsl
stos
mov
fidivl
cmp
mov
imul
rorb
jo
add
cmp
lret
jle,pt
xchg
lret
ret
aas
fdivl
movsl
adc
fs
mov
scas
xchg
cmp
out
aas
xor
test
jl
sub
jb
into
jp
adc
add
and
mov
loop
push
xchg
cli
sbbl
mov
pop
shll
loop
test
add
push
mov
add
push
hlt
movsb
inc
pop
cld
mov
dec
movb
and
xor
pusha
cs
idiv
sbb
pop
jne
test
mov
int
dec
and
fnstcw
movsl
add
movsl
adc
jmp
lret
cmp
xor
pop
hlt
movsl
add
mov
push
imul
push
fildl
lds
imul
pop
and
mov
data16
xor
xor
push
xor
aad
mov
mov
cmp
sbb
jne
scas
adc
inc
fwait
pop
scas
cltd
sub
bound
mov
test
inc
adc
iret
adc
sahf
dec
enter
mov
xchg
mov
aaa
int
and
hlt
lahf
push
popa
dec
fwait
sahf
cmp
inc
inc
nop
ds
in
cmpsl
pop
mov
sub
push
leave
cmp
popa
lods
adc
mov
aaa
mov
or
and
fisubl
arpl
or
sub
cmpsl
sar
ds
mov
push
frstor
adcb
cmp
mov
aam
jmp
sub
push
jmp
mov
rolb
adc
cmpsb
imul
xchg
fs
mov
cmpl
mov
mov
aas
mov
add
lcall
data16
test
jl
aad
icebp
mov
mov
sbbl
push
xchg
or
pop
adc
mov
sbb
pop
aaa
push
xor
ljmp
cmpl
cmp
cmc
test
add
and
mov
outsl
xchg
push
mov
das
sbb
jo
jne
shlb
lods
shrb
or
negb
mov
xchg
push
jmp
sbb
dec
mov
push
and
out
inc
add
push
add
cmp
sti
pop
push
sub
outsl
mov
xchg
sub
adc
in
pop
cmp
fwait
cli
or
fcmovnu
loope
sahf
jnp
jmp
js
cmp
sbb
ficomps
or
pop
js
outsb
inc
adc
xor
sbb
pusha
xlat
push
pop
out
lea
decl
daa
stc
jg
mov
fimull
xchg
mov
inc
adc
popf
add
ja
jl
sbb
xchg
in
sub
mov
push
jo
or
xor
cs
pop
mov
repz
sub
test
dec
inc
cmpb
cltd
repnz
mov
fnstcw
leave
das
lods
jae
lahf
jmp
push
lods
daa
push
fisttpl
cli
push
scas
push
in
nop
leave
pusha
lods
addr16
rcrl
pop
pop
mov
leave
stc
adc
mov
mov
adc
lock
add
or
pop
adc
sbb
push
enter
aas
jge
clc
mov
mov
add
adc
shrl
push
insl
push
out
xor
mov
jne
mov
out
lods
rorb
pushf
xorb
adc
mov
clc
cltd
push
rolb
loopne
jmp
pusha
repz
push
leave
popf
push
js
inc
aas
xchg
dec
sbb
call
aaa
xchg
cmpsb
in
xor
lret
and
mov
mov
lock
sub
sub
bound
call
cmp
jl
add
dec
adc
rclb
lods
pop
neg
cli
pop
or
repz
mov
jo
jae
mov
jle
imul
inc
addr16
out
fidivs
adc
out
cmp
mov
lahf
and
cmc
and
shr
push
inc
sti
inc
lret
addb
pushf
scas
and
mov
cli
and
push
inc
mov
push
lds
and
push
fnstsw
loopne
gs
les
cwtl
mov
sub
cmpsl
cld
addr16
das
add
lock
jne
xor
or
js
inc
daa
xor
sahf
cli
dec
icebp
cmp
jbe
cwtl
out
adc
cmp
xchg
mov
mov
push
xchg
cli
mov
daa
leave
pop
push
push
cmpl
mov
pop
add
or
mov
pop
jp,pn
xchg
cmp
and
arpl
loope
sub
adc
fcmovnb
out
sbb
pop
lds
arpl
jl
out
dec
dec
je
ficoml
shll
inc
pop
mov
xor
and
xchg
sub
mov
adc
mov
jae
and
out
sub
push
in
dec
mov
sbb
push
movsb
in
call
js
pop
jmp
adc
fs
ds
or
mov
lahf
push
data16
popf
popf
mov
push
push
hlt
and
push
leave
daa
arpl
mov
cli
mov
dec
data16
xchg
clc
cs
mov
jecxz
mov
in
jo
call
or
xchg
push
or
movsl
fadds
push
pop
push
xchg
cmpsb
cmp
insb
dec
jp
sbb
mov
mov
jnp
sahf
sub
std
xor
int
addl
outsl
xchg
and
and
stos
jecxz
cmp
mov
mov
mov
cmpl
out
fs
incl
adc
ret
jle
mov
aaa
mov
ja
call
movsl
sbb
push
in
in
lds
cmpsb
repnz
push
xchg
adc
in
dec
add
jle
push
mov
icebp
xorl
pop
adc
movsl
xlat
sub
cmp
icebp
ds
adc
or
jae
lahf
in
xor
sarb
bound
pop
xchg
mov
push
sbb
mov
daa
pop
sub
add
or
or
loope
pop
jmp
insb
addr16
out
popa
xor
cld
ret
jmp
fstpl
jbe
push
add
push
or
and
stos
jnp
cli
sti
das
and
stc
pop
and
imul
dec
inc
int3
lea
pushf
adc
jae
neg
pop
roll
aaa
mov
mov
add
jle
mov
cmp
std
shl
add
pop
stos
add
arpl
popa
mov
shll
pushf
nop
ss
pop
cmpsl
nop
gs
sub
inc
shrl
mov
adc
imul
aad
arpl
js
dec
fcompl
ret
jae
push
fldl
jo
hlt
pusha
lahf
movsl
sbb
xchg
je
adc
aas
jb
rep
mov
inc
idivb
and
fistpll
ret
negl
std
dec
mov
addl
in
shlb
sti
cmp
adc
dec
cmp
ret
iret
mov
scas
jb
cmp
pop
aaa
aad
adc
cmp
inc
and
in
mov
in
add
icebp
arpl
in
outsb
mov
adc
mov
dec
xchg
xchg
mov
fdivl
lock
push
pop
sbb
mov
stos
fsub
mov
test
jbe
test
or
scas
inc
inc
clc
addr16
ror
jmp
movsb
aam
sbb
cmp
push
dec
hlt
rorl
aad
test
rcrl
jle
dec
stos
into
loopne
pop
xor
sarl
and
leave
and
inc
sahf
mov
adc
fwait
insl
lcall
jno
test
dec
mov
out
ret
jp
out
xchg
pusha
jns
mov
das
pop
imul
std
aas
xchg
call
popf
jle
and
stos
iret
jo
arpl
adc
cmp
mov
imul
inc
cli
sbbb
pusha
insl
lds
add
dec
hlt
arpl
jmp
ds
daa
adc
cmpsb
ss
mov
and
pushfw
nop
push
in
adc
sbb
gs
push
push
fwait
xor
stos
xor
data16
sar
es
aad
movsl
scas
je
fwait
xor
or
std
gs
xchg
gs
pop
outsb
ficompl
and
pop
add
jbe
xchg
pop
lret
jnp
xchg
cmp
repnz
mov
xor
inc
std
jmp
in
aaa
mov
mov
and
adc
nop
aas
call
push
xchg
jle
outsl
ja
mov
dec
adc
in
cltd
call
mov
inc
sub
push
add
loope
pop
rorb
jle
adc
adc
push
pop
pop
jnp
mov
sbb
jb
sti
sub
into
mov
dec
add
pushf
jbe
sbb
repnz
push
push
mov
mov
mov
jp
xchg
dec
push
and
aam
loopne
test
movl
shrb
cltd
int
cltd
push
cltd
ss
aad
dec
out
mov
loop
or
jo
push
mov
pop
adc
scas
mov
push
movsl
cld
sbb
jp
data16
lock
mov
imul
movsl
int
in
lea
sbb
xor
iret
dec
push
mov
jg
cmp
inc
mov
cmp
xchg
adc
or
mov
outsl
xchg
lods
imul
cli
loope
ror
pop
je
out
mov
scas
loop
inc
add
xor
xchg
jge
xchg
addr16
adc
mov
mov
xor
pop
rorb
mov
into
decb
jbe
dec
push
pop
dec
jmp
add
int
pop
mov
movsl
divb
push
xchg
jbe
mov
sub
pop
mov
in
fdivrp
jl
cli
jno
movsb
add
cmp
push
xor
push
sti
adc
push
inc
aas
xor
mov
lds
imul
fnstcw
outsb
mov
inc
inc
or
push
dec
mov
out
dec
cli
adc
jecxz
xchg
dec
notb
out
mov
in
insb
xchg
cltd
insl
movsl
dec
adc
call
out
rcrl
cwtl
add
call
gs
sbb
lods
mov
js
imul
ljmp
enter
or
jne
mov
stos
cwtl
push
mov
arpl
dec
aam
xchg
es
add
insb
or
xor
adc
fcmovb
or
mov
xchg
out
cld
dec
gs
mov
into
ljmp
xchg
cwtl
push
sbb
inc
negl
pop
cmpsb
dec
add
cwtl
push
dec
movsb
ds
rcr
sub
pop
or
adc
fsubs
add
arpl
fs
dec
out
cmpsl
movsl
add
mov
pop
jno
mov
das
ficoml
jmp
out
lret
lods
outsb
sub
mov
test
pusha
mov
lahf
vmaxsd
xor
and
repz
mov
lcall
cmp
or
dec
xlat
sbb
xchg
in
testb
or
push
sbb
jo
fildl
add
lock
call
jae
sub
and
or
int
insb
pop
sarl
aad
cli
loop
pop
bound
lock
lcall
mov
mov
mov
rcr
mov
lret
mov
adc
mov
out
int
cmp
mov
pop
and
mov
sti
bound
fisttpl
popa
les
fcmovnu
mov
jbe
mov
ret
jno
pop
fwait
mov
lods
sbb
push
mov
xor
cmp
or
jo
mov
or
lret
jnp
inc
rclb
adc
adc
outsb
out
sahf
enter
stos
mov
daa
mov
loopne
loopne
inc
inc
and
xlat
pop
jbe
into
dec
into
repz
sub
fcmovnbe
sti
inc
push
ja
push
das
icebp
nop
push
fisttpl
js
push
xor
push
icebp
js
or
jge
int
xor
jbe
and
mov
mov
loopne
ss
push
cmp
jb
repnz
mov
ds
divb
and
arpl
fisubrs
pushf
popf
mov
and
mov
mov
icebp
pop
push
push
mov
cmovge
mov
or
mov
sbb
shr
sbb
mov
es
sub
cltd
call
pop
and
pop
pop
in
sbb
ljmp
ss
dec
hlt
cmp
jg
mov
fs
mov
decb
xlat
jmp
imul
mov
inc
dec
xchg
insb
fwait
push
dec
lret
cltd
jecxz
lods
mov
hlt
inc
push
fsub
xchg
dec
lods
sbb
push
and
or
hlt
dec
cmpsb
pop
inc
inc
cmc
cltd
mov
test
scas
sti
mov
mov
xchg
imul
notb
xchg
loop
mov
push
fldcw
mov
dec
cmpsb
ror
fs
shlb
out
lock
leave
sti
test
enter
jle
scas
fnsave
andb
bound
rcll
faddl
adc
mov
xchg
lea
ret
inc
mov
dec
sti
test
int3
pop
and
add
pop
fmull
add
cmpl
pop
pop
jp
int
push
orb
pusha
xor
shrl
repz
add
jnp
outsb
push
fldenv
stc
fistpll
lahf
mov
mov
push
jecxz
dec
mov
ret
jg
push
jbe
mov
adc
lea
pop
jge
sbb
jns
daa
in
dec
cmp
rolb
sbb
lahf
in
jecxz
insl
cld
cli
nop
and
and
inc
and
sbb
inc
mov
shll
jecxz
inc
ljmp
jge
cmpsl
test
sbb
in
xor
or
push
sub
int3
sti
test
aas
inc
jnp
pop
jge
adc
xchg
scas
pop
xchg
pop
ss
leave
add
push
push
adc
test
pop
cmp
aad
mov
inc
jo
inc
shrl
mov
add
ljmp
xchg
push
ficomps
out
add
divb
xchg
imul
mov
mov
pop
xchg
shlb
push
sub
cmp
aaa
dec
popf
and
mov
xchg
cs
out
sahf
or
and
test
fisttpl
vaddpd
push
cmc
les
idiv
add
or
xchg
aam
iret
bound
cmovl
pop
cmc
lea
enter
mov
jl
cmpsb
sbb
xor
bound
test
stos
nop
cmp
lods
ljmp
xorb
mov
jmp
sbb
fiaddl
xchg
push
sarb
jg
and
addr16
insl
xchg
test
lea
inc
or
inc
daa
hlt
rcrl
mov
ljmp
pop
cmp
ret
out
cmpsl
xchg
fwait
xor
sbb
and
push
enter
jl
xlat
dec
adc
lcall
xchg
mov
negb
or
in
aas
or
lcall
jo
mov
mov
mov
inc
stos
ds
repz
data16
jns
outsl
add
mov
pop
mov
jecxz
or
in
sbb
test
xor
jne
sti
add
dec
rclb
lahf
mov
ss
jge
fsubrp
int3
xchg
xchg
push
stos
sbb
fiadds
scas
cmpsb
jbe
xor
rolb
cmpsl
xor
test
pushf
stc
inc
cmpsb
mov
leavew
daa
icebp
add
mov
mov
add
xor
push
movsb
mov
push
sbb
jno
cld
add
mov
dec
es
and
nop
inc
inc
jno
sub
pop
popa
jnp
mov
add
in
inc
pop
adc
pop
hlt
test
sbb
loopne
out
pop
push
xor
ljmp
sti
jp
testb
inc
into
mov
mov
out
jecxz
and
out
aad
outsb
jmp
jae
push
pop
or
or
icebp
jb
mov
mov
mov
sub
loop
and
push
stc
push
sbb
xor
jne
data16
push
sub
frstor
repnz
adc
jb
fcoml
jg
sbb
fsubrp
xchg
ss
fstpt
lock
mov
aas
insb
loop
jp
movsb
ret
lcall
stos
mov
sub
sbb
pop
mov
inc
jl
fwait
push
cli
push
scas
or
call
punpckhdq
sub
mov
push
loop
jo
gs
push
sub
pop
loop
jge
jo
lods
rep
dec
loope
mov
pop
fists
or
andb
push
lea
test
aaa
or
lret
and
sarb
subb
or
iret
xchg
std
push
in
int3
cmp
loopne
js
ror
push
iret
jge
and
cmp
int
sub
fisubl
add
scas
pop
xor
xor
push
xchg
cmpsl
jg
jl
subb
pop
jl
adc
rclb
sub
notb
inc
cltd
std
add
mov
test
xchg
jp
stos
imul
mov
inc
xor
addr16
dec
xchg
sub
xor
daa
fwait
lea
cli
mov
scas
enter
fdiv
pushf
sahf
aaa
int3
xchg
and
data16
sbb
test
inc
xlat
ja
xchg
pop
daa
sahf
insb
pushf
cmpsb
aad
sbb
mov
inc
out
pop
sti
fisubl
xchg
lods
loope
movsb
ljmp
inc
mov
popa
sub
mov
stc
lods
ret
xlat
out
add
pop
lds
add
xchg
insl
pop
data16
pmulhuw
xchg
bound
cwtl
and
bound
add
not
leave
outsl
mov
stos
mov
pop
lcall
int3
enter
push
loopne
fmul
in
mov
or
or
mov
stos
sbb
sahf
aad
gs
sbb
push
dec
add
mov
dec
push
mov
cmpsb
mov
adc
fcmovne
cltd
xchg
cld
or
mov
cltd
push
popa
test
push
push
gs
inc
xchg
in
les
lods
mov
pop
inc
and
inc
inc
cmp
push
mov
addr16
xchg
pop
or
les
out
cmp
inc
sub
dec
pop
dec
xchg
mov
js
or
fstpl
mov
jae
sub
cmp
mov
fisubl
and
icebp
and
or
ror
pusha
cli
bound
mov
cmp
rcrl
xchg
xor
idivb
adc
mov
mov
pop
xchg
jbe
push
cmp
xchg
and
les
aam
icebp
push
leave
cmpsb
idiv
std
cmc
xorb
stos
sub
sub
jecxz
cmp
sub
push
je
test
inc
fnstsw
cld
enter
or
mov
jne
icebp
pop
cltd
in
cmpsb
das
pop
out
jge
pop
and
icebp
adc
shll
fwait
xor
xor
inc
pop
push
add
mov
sub
push
push
ret
dec
pushf
jns
mov
cmp
and
sbb
or
cltd
test
sbb
mov
jge
jnp
insb
test
out
jno
jmp
aas
gs
adc
fwait
jae
or
inc
adc
aam
pop
movsl
ds
notl
dec
jl
cld
movsb
cmpsl
dec
lcall
out
mov
out
ret
push
lea
dec
jae
inc
add
filds
scas
or
sarb
bound
or
es
xor
mov
out
into
cltd
pushf
std
loopne
jge
or
mov
popf
nop
sub
rcr
adc
sub
xlat
mov
pop
into
inc
jg
cli
mov
xchg
mov
es
ret
icebp
dec
jecxz
push
test
popf
mov
std
add
sub
int3
pop
pop
repnz
mov
mov
lods
jno
sub
hlt
enter
es
pop
shll
int
push
or
mov
mov
cld
push
jmp
fs
xor
mov
sub
aaa
mov
cwtl
xchg
xor
call
lods
std
jp
and
lret
call
jle
pop
in
sub
fcomps
sub
mov
pop
dec
mov
inc
test
test
xor
xchg
mov
repz
mov
jecxz
pop
inc
lret
mov
pusha
xor
sbb
mov
cs
mov
push
push
pop
pop
pop
addb
jo
insl
int3
adc
jb
push
ds
ljmp
adc
addl
shl
dec
push
hlt
lahf
adc
in
xor
and
or
stos
jns
and
xor
and
sbbb
enter
pop
xor
xchg
aaa
out
aaa
mov
in
lds
clc
adc
cmp
popa
mov
js
fcompl
movsb
add
add
jae
rorb
xor
add
test
mov
mov
mov
sarl
mov
jl
ljmp
jno
je
subb
lahf
pop
and
lcall
lcall
push
push
sbbb
out
cmpsl
jno
adc
pushf
popa
xchg
cmp
leave
fnclex
int3
rol
add
rolb
mov
pop
or
aas
dec
mov
out
jge
pop
pop
shrl
fs
shr
iret
xor
xchg
mov
dec
clc
mov
dec
or
loopne
pop
push
mov
inc
into
adcl
ret
xor
adc
popf
sbb
adcb
loopne
lahf
and
mov
jns
fisttpl
imul
cld
lcall
out
xchg
test
add
cmc
fdivl
call
movsb
xchg
mov
and
mov
mov
lret
aam
mov
inc
sub
push
call
fsubrl
sbb
shl
push
cmpsl
fcoms
cmc
mov
adc
jns
out
adc
rcr
mov
shl
jno
cmp
sbb
lcall
jecxz
leave
jecxz
xchg
mov
int
mov
stos
xchg
or
mov
cld
stc
movsb
push
dec
fwait
xchg
jg
lock
mov
into
outsl
push
mov
xchg
clc
mov
pop
in
xchg
push
aaa
jp
and
arpl
add
dec
jno
jl
jle
imul
mov
push
loope
ficomps
lret
or
fsts
push
jno
xor
mov
test
adcb
pop
inc
jge
dec
cli
mov
sub
add
loopne
out
push
stos
push
jg
icebp
in
out
repz
pop
inc
xchg
int
test
add
xchg
adc
je
push
std
jg
sbb
or
jb
jp
aas
and
sbb
dec
stos
out
enter
jae
fmuls
push
jno
and
pop
xor
addr16
or
sbb
xor
and
enter
into
call
insb
xchg
xor
insb
cwtl
lea
pop
cmc
mov
pop
adc
sub
push
fwait
add
outsb
mov
jae
outsl
popf
ss
lret
push
js
add
pop
cmp
jbe
fucomi
neg
sahf
aas
icebp
jp
mov
fdivrl
js
sar
or
xor
dec
std
and
leave
ljmp
mov
insb
into
iret
lret
and
mov
in
int
loop
push
mov
ret
cmpsb
dec
inc
dec
mov
stc
dec
pop
push
mov
push
inc
xchg
loope
cli
lock
mov
mov
int
mov
inc
fidivs
sbb
test
cltd
jns
out
mov
dec
mov
jb
mov
mov
fistps
add
arpl
xchg
inc
jbe
loop
pop
adc
pop
test
in
outsb
jns
jnp
push
jg
or
fistl
xchg
sbb
push
adc
or
loope
dec
xchg
lods
mov
pop
out
icebp
das
xchg
jmp
mov
movsb
cmp
fsubrs
test
add
fsubrl
push
in
or
mov
aas
inc
sub
aam
and
xor
mov
int3
sbb
cmpsl
push
jmp
and
test
xchg
mov
out
pop
cltd
jge
bound
mov
repz
adc
jae
mov
add
sarb
inc
cmp
push
cmpl
jmp
imul
fsubl
xchg
mov
cmp
rclb
cmp
sbb
cmpsb
mov
rclb
push
loopne
arpl
inc
xchg
inc
xor
mov
testb
adc
or
xchg
clc
in
mov
mov
pop
in
fs
cmp
out
fwait
ljmp
or
icebp
ja
out
ret
mov
lock
loope
mov
inc
pop
cltd
cmc
add
push
cmpb
mov
dec
jbe
in
add
mov
mov
mov
push
test
seto
mov
orb
sbb
call
push
aam
pop
lea
clc
mov
add
dec
mov
mov
int3
mov
pop
imull
xlat
pop
call
in
jb
pusha
and
cmp
jge
rol
jmp
fcmovnb
dec
bound
dec
add
cmpsb
jnp
into
sahf
dec
cmp
inc
cmp
js
and
jb
test
and
stc
inc
addb
ret
xorb
sbb
xchg
rclb
mov
enter
inc
sub
pop
sbb
fimuls
cmc
adc
dec
push
jl
mov
mov
add
ljmp
xchg
call
sti
out
insl
pop
stc
push
cmp
and
scas
test
sub
jbe
add
pop
int
mov
dec
adc
push
pop
mov
jns
xchg
sub
cmc
cld
insl
leave
pop
mov
cltd
ret
popf
imul
adc
add
mov
loope
inc
xor
sub
lahf
ds
cmpsb
adc
mov
cld
xor
ficompl
cmc
loopne
pop
inc
mov
adc
sarl
gs
xchg
cmp
out
push
jb
xchg
ja
dec
pop
sbb
cmp
lret
push
pop
xor
fstl
push
loope
lea
mov
push
jl
xchg
inc
xchg
mov
cmp
mov
pop
enter
clc
inc
mov
jge
call
stos
lea
cmp
push
xor
jnp
mulb
cli
stc
movsb
mov
or
sti
add
test
jb
loopne
and
or
clc
cmpsl
mov
mov
pop
dec
jo
gs
mov
mov
js
imul
inc
mov
mov
jmp
fs
fwait
jnp
xchg
pop
data16
mov
test
addr16
icebp
ret
int
jecxz
rcrl
dec
cmp
aaa
fsubs
push
fdivr
mov
lcall
loope
in
cld
mov
ds
ror
jle
pop
cmpsb
mov
mov
mov
add
jbe
mov
rep
push
sbb
out
sarl
push
bnd
out
xchg
push
gs
arpl
adc
jno
jno
cmpsl
sbb
jbe
fsubrp
mov
and
inc
inc
push
lret
addr16
mul
xlat
std
inc
scas
or
out
into
cmp
iret
notb
lcall
leave
adc
ret
push
nop
or
aad
mov
xchg
mov
ret
push
cmc
shlb
cs
aas
or
ja
out
icebp
les
push
cmp
cwtl
movsl
je
rclb
fldt
push
jbe
mov
fcoms
js
xor
mov
in
or
scas
loop
jle
and
mov
dec
xorb
sbb
push
dec
popa
scas
mov
stos
ret
popf
lret
arpl
push
repz
gs
gs
mov
mov
xchg
xchg
ficoms
mov
stos
orl
bswap
and
pop
stos
lods
mov
sbb
mov
negl
fcmovbe
or
insl
xchg
leave
out
aam
xchg
into
ljmp
inc
sahf
adc
out
loopne
popf
dec
ficomps
dec
xchg
das
sub
sbb
in
out
scas
xor
jne
add
aaa
mov
stos
divb
pusha
loop
jnp
inc
icebp
jle
jecxz
cld
push
in
sbb
jbe
inc
insl
repz
inc
dec
add
ret
dec
xchg
sub
or
stos
dec
xchg
adcb
add
clc
push
add
mov
push
dec
fdivrl
in
std
mov
movsl
inc
add
gs
jmp
dec
mov
xchg
xchg
shl
add
ljmp
mov
xchg
xacquire
out
stos
dec
aaa
cwtl
cmp
xor
imul
mov
inc
repnz
out
sbb
sub
das
or
pop
mov
mov
stos
insl
fstl
inc
add
mov
std
aaa
pop
lcall
jb
mov
mov
outsb
adc
sub
xlat
daa
or
lds
ret
inc
dec
enter
repnz
push
scas
loope
mov
jg
pop
or
push
jae
das
xor
xor
add
test
enter
fidivl
rol
cltd
jg
cli
cld
into
shrl
xchg
or
rorb
in
leave
push
jns
ds
sarl
xor
mov
popf
int
into
pop
in
popf
mov
push
cmp
icebp
xchg
xor
cld
clc
pop
ss
mov
or
cltd
fmull
jge
jb
les
pop
js
mov
sub
inc
mov
cmp
aad
and
repnz
int
ja
cs
mov
notb
pop
mov
popf
mov
cmc
xchg
xchg
mov
cmp
mov
pop
mov
mov
and
cltd
sub
mov
adc
pop
aas
fstl
enter
dec
add
scas
push
push
adc
sbb
test
test
jle
jo
xor
push
jno
xor
mov
pop
dec
mov
call
mov
cmp
popl
outsl
fwait
inc
push
inc
dec
into
imul
fiaddl
jne
push
xchg
pop
sub
cmp
jnp
aas
pop
dec
test
addl
stc
or
out
mov
xchg
xor
loopne
jge
xchg
ss
gs
xor
out
mov
xchg
mov
mov
insb
xchg
push
xor
adc
cld
rorb
rolb
movsl
mov
lea
pop
xchg
add
setle
xor
sub
mov
xchg
push
test
cli
jne
sbb
xchg
sub
test
negb
ljmp
pop
xchg
mov
mov
call
stc
xor
sbb
imul
out
dec
xorl
xchg
bound
xor
inc
inc
inc
lcall
fsubrl
mov
je
pop
xor
insl
pop
mov
mov
cmp
add
and
xor
mov
shl
rorb
int
pop
sub
add
lcall
inc
cmp
jge
mov
xchg
rcrl
and
stos
pop
sarb
data16
fsubl
pop
ffree
jb
in
inc
dec
jl
pop
cli
fmull
data16
pop
clc
ds
jno
jns
inc
cmp
in
imul
aad
adc
in
ljmp
lods
loop
ds
cmp
adc
lods
lods
mov
test
arpl
cmc
xchg
cmp
fnstenv
pushf
out
add
ljmp
jmp
adc
xchg
call
sbb
lds
ljmp
in
mov
loopne
mov
bswap
or
shl
sbb
aam
int
insl
sbb
scas
fbstp
dec
xchg
je
pop
into
fwait
hlt
icebp
add
sbb
inc
shr
xchg
and
int
je
mov
cmpsl
outsl
mov
or
shrb
mov
push
sti
stos
jmp
sbb
pop
push
inc
xchg
cld
add
gs
cmp
ror
aad
mov
lods
repz
and
add
jmp
push
xchg
and
call
adc
sbb
scas
inc
inc
mov
cmp
out
out
cmp
xchg
mov
mov
sbb
and
cmp
popf
lea
int3
pop
dec
jo
sub
jmp
cmp
xchg
sahf
stc
lea
ret
add
lret
aaa
push
push
mov
mov
std
adc
daa
lods
xor
movsl
shr
cs
fxch
and
mov
in
dec
or
movsb
mov
scas
out
pop
lods
xchg
pop
out
fisubrs
push
pop
pop
scas
push
pop
icebp
xchg
or
fidivl
pop
aam
push
int
pop
fsubl
cmp
outsb
scas
jb
aad
shrb
movsl
repz
mov
out
adc
xchg
notb
divl
pop
cmp
pop
imul
into
jb
mov
add
imul
aad
pop
dec
scas
lea
pushf
xchg
sub
push
add
mov
cmc
call
mov
fwait
jb
sbb
out
dec
sbb
lcall
xor
inc
and
dec
mov
mov
mov
mov
dec
loope
add
bound
fs
insl
xchg
sbb
int
push
lds
push
mov
mov
jge
in
mov
sbb
or
inc
jg
jae
pop
xchg
loop
jnp
mov
aaa
jno
adc
js
out
or
shll
seto
sub
js
lock
outsl
flds
iret
jno
cmp
sub
mov
cmp
dec
xchg
cmpsl
sub
jp
or
mov
sub
fwait
adc
std
shlb
stos
push
and
outsb
add
mov
jge
inc
xor
pop
imul
pop
inc
aad
mov
dec
inc
mov
mov
dec
mov
and
ja
cmc
push
jle
jge
in
cmpsb
in
mov
cmp
dec
out
arpl
mov
pushf
fmuls
pop
jnp
mov
rcll
decb
mov
aaa
fsubrp
lahf
fsubrl
into
adc
xchg
xorl
adc
stc
push
mov
pop
orl
fidivrl
ljmp
in
dec
jae
xor
fs
negl
stos
sbbb
and
loope
or
cmp
in
lcall
pusha
xlat
xor
adc
or
ret
inc
jp
nop
lret
data16
and
cmc
sbb
adc
cmp
ret
orb
popf
mov
mov
inc
out
stc
jmp
std
mov
pop
mov
adc
mov
dec
sbb
adc
fisttps
pop
les
loopne
mov
ficoml
aaa
pop
pop
mov
dec
jle
sbb
mov
js
xor
mov
test
mov
sub
shrb
negb
sbb
sub
and
xor
push
test
std
jns
pusha
outsb
pop
les
xchg
dec
sahf
adc
pop
mov
lahf
roll
push
imul
stos
jo
and
jge
es
push
push
fstpl
movsl
dec
aas
ds
fcomps
add
mov
test
push
mov
fs
lcall
sbb
add
pop
mov
push
loope
in
push
sti
clc
outsb
jns
loope
and
dec
mov
pop
outsb
xchg
mov
or
cmp
lods
popa
and
or
nop
push
dec
pop
out
jb
hlt
sbb
daa
lcall
dec
push
das
ret
sarl
push
outsb
leave
es
hlt
xor
mov
jecxz
mov
pop
lods
inc
cmp
ds
inc
adc
ja
or
jge
cwtl
dec
into
sub
mov
int3
dec
mov
rcrb
mov
mov
sub
call
push
cmp
fs
push
jle
nop
fwait
or
out
pop
add
aad
pop
test
inc
pop
inc
ret
js
mov
shlb
add
sarb
or
sub
or
inc
jl
in
divb
int3
ret
test
imul
ljmp
xor
scas
jl
and
sub
int
insb
or
push
push
and
mov
bnd
and
lahf
pushf
repnz
pop
or
rcr
mov
outsl
ja
lcall
mov
std
mov
popa
das
xchg
xchg
or
test
and
mov
mov
shrb
jbe
xchg
scas
je
xor
pop
xchg
add
fdivs
push
sub
jp
add
out
je
popf
imul
mov
repz
loopne
dec
add
stc
imul
push
repnz
jg
addl
sub
mov
inc
pop
mov
lea
shl
pusha
popa
fsts
cmp
add
dec
adc
popa
insl
lret
inc
arpl
in
pop
xlat
lret
push
fcomip
xchg
sbb
adc
mov
lret
hlt
lret
out
inc
les
dec
sub
xor
xchg
mov
cmpsb
imul
inc
inc
addr16
shlb
je,pn
push
mov
jno
jge
jo
out
imul
mov
dec
cmp
sbb
add
fwait
jbe
cld
hlt
scas
jg
lock
lret
xor
push
mov
jbe
fdivl
jge
outsb
mov
xchg
pop
xor
pop
and
xor
sti
mov
aad
mov
jb
dec
cs
push
movsb
add
out
lea
insb
xchg
lcall
pop
push
push
repnz
scas
jbe
pop
jp
inc
add
xor
out
add
out
and
in
aas
sub
inc
dec
xor
lods
pop
xchg
mov
je
icebp
push
fcomps
arpl
ds
or
test
loope
xor
and
out
sbb
or
mov
push
jmp
lret
std
sbb
pop
inc
les
and
rclb
ss
xchg
sub
pop
cmc
or
add
mov
jb
push
cmp
out
xchg
jge
cmp
jns
lods
or
mov
movsl
xchg
sbb
or
xlat
pop
jbe
loope
xchg
das
lods
jecxz
xchg
stos
rol
mov
clc
jnp
and
stos
aaa
retw
add
xor
pop
or
or
std
adc
out
pop
inc
push
lods
roll
ret
mov
test
mov
mov
ret
cmp
mov
es
ret
dec
jmp
push
xchg
sub
loopne
mov
mov
repnz
int3
mov
lods
xor
pop
ret
push
pop
jg
dec
cs
mov
lret
adc
xor
dec
stos
repz
jge
ds
adc
mov
push
adcb
outsl
pop
dec
and
imul
stos
mov
ror
adc
inc
mov
and
sub
mov
insb
orb
sbb
jmp
adc
add
xor
cmpsl
pop
cmpsb
push
imul
lea
dec
cmp
clc
sub
jnp
add
xlat
pop
mov
push
mov
add
or
frstor
and
imul
imul
je
ja
mov
call
xchg
outsb
pop
adcl
push
cmp
ficoml
call
dec
lcall
mov
into
dec
stc
jmp
subb
jmp
scas
ss
jmp
icebp
inc
mov
adc
fdivrl
inc
xor
cmc
jecxz
nop
gs
sub
mov
dec
call
out
pop
push
gs
push
mov
fldenv
je
cmpb
data16
mov
mov
jle
mov
lcall
setns
shr
fwait
mov
mov
inc
and
add
mov
dec
and
leave
mov
sbb
popf
pop
fwait
rcll
and
int
mov
xor
add
xchg
call
call
test
dec
xor
dec
fwait
jns
mov
movsl
jmp
loopne
sbb
mov
xor
js
enter
push
mov
pop
mov
aas
fdivp
fsubs
pop
dec
dec
mov
pusha
outsl
pop
aas
cmp
sbb
adc
fldt
fucomp
ljmp
adc
and
ret
xor
sub
int
mov
lret
int3
push
repnz
js
inc
test
insl
and
fs
jbe
insb
fldl
and
inc
idiv
jnp
add
lods
pop
loop
dec
fsubrl
orl
push
jae
cld
or
mov
sub
repz
cmpsb
in
push
insl
mov
jb
or
test
pushl
push
pop
push
testb
aas
mov
ds
mov
inc
cmp
dec
pop
mov
gs
mov
movsl
xor
mov
stos
add
mov
jno
pop
incb
rcl
in
bound
xchg
clc
mov
push
sbb
mov
mov
mov
ljmp
mov
ss
xor
fwait
popf
xchg
adc
imul
ds
ds
shlb
icebp
cmp
jge
aad
add
bound
sub
testb
and
insl
jo
push
jmp
xor
shlb
pop
mov
jne
xor
repnz
jno
fwait
dec
cltd
mov
fcomps
pop
lock
mov
push
xchg
jo
pop
or
js
aas
lods
leave
out
lret
fisubs
scas
pop
jnp
push
outsb
out
xor
out
sahf
jecxz
les
pop
sub
or
lahf
mov
mov
call
jae
inc
dec
aaa
aad
xor
sub
cmp
sub
shll
xor
mov
ja
xchg
inc
inc
rcrb
and
movb
pop
pop
repnz
dec
mov
sbb
mov
mov
add
inc
and
popa
sbb
sbb
xor
and
mov
xor
pop
dec
cmpsl
test
add
jl
ljmp
cmp
aad
or
aas
negb
add
mov
jg
pusha
mov
mov
insl
xorb
pop
xor
xor
adc
add
xor
sbb
sbb
ret
es
xor
xor
pop
sbb
fld
xor
ror
inc
pop
dec
push
in
dec
jp,pn
not
mov
ret
inc
mov
add
insb
xor
dec
mov
inc
imul
mov
or
jg
sbb
loope
lods
and
sub
popf
orb
mov
inc
int3
xor
sbb
jns
in
mov
or
es
lcall
mov
xchg
loopne
sbb
faddl
out
stc
sbb
jnp
xor
sbb
sub
insl
repz
mov
scas
xor
push
sahf
cmpsb
push
es
lea
cmp
xchg
test
add
cmpsl
cmpsb
or
adcl
test
sub
arpl
hlt
xor
pop
popf
cmp
and
and
xor
cld
int
adcb
pop
cmpsb
sbb
js
in
pop
outsb
inc
adc
cmp
sbbl
out
pop
arpl
rcl
scas
inc
cs
and
sbb
mov
dec
jmp
or
xor
loopne
pop
or
sbb
push
ret
pop
sbb
sbb
adc
mov
jmp
movb
sti
jae
cli
xchg
inc
sub
lcall
repz
ljmp
inc
stos
stos
push
out
xchg
xchg
pushf
mov
aaa
jae
mov
pop
lahf
push
test
mov
cld
lahf
lahf
sub
fs
test
inc
arpl
movsb
movsb
cmpsb
pusha
stc
scas
pop
aaa
xchg
pushf
dec
dec
dec
jmp
leave
aas
nop
jno
mov
imul
xor
fnsave
aaa
scas
push
mov
xchg
shl
sub
loop
or
adc
das
pop
mov
pop
leave
scas
xchg
in
and
in
test
cld
loopne
sti
les
ret
enter
inc
fistl
adcl
fwait
or
xchg
or
inc
and
in
inc
push
in
mov
sub
jmp
add
sub
inc
cmpsl
cmp
outsl
in
negl
mov
mov
cmp
outsl
mov
xchg
sbb
xor
or
inc
insl
aam
test
bound
rcll
cmp
aad
push
inc
sti
push
push
test
or
inc
xchg
je
ljmp
ffree
mov
pop
and
js
pop
data16
loope
xchg
mov
arpl
dec
cmp
xchg
les
fadds
std
fdivl
rclb
xor
jmp
sahf
pop
jns
sbb
push
adc
fcmovnu
in
iret
and
cs
mov
jno
push
pop
sbb
pop
cwtl
jmp
adc
in
mov
addl
cmpsb
movsb
add
in
fsubs
iret
ljmp
rclb
inc
inc
inc
pusha
mov
jno
loop
mov
sbb
or
push
stc
mov
and
mov
push
testl
ss
lds
push
mov
jns
mov
mov
or
mov
inc
loopne
xor
gs
or
repnz
cmpsb
out
adc
jecxz
aam
into
rcr
pop
xchg
xchg
push
inc
or
imul
jne
testb
xlat
jecxz
push
adc
fnstenv
rol
jmp
movsl
pop
or
fidivrl
jno
fnsave
imulb
cmpsb
mov
add
subl
cs
mov
fsts
into
dec
xlat
loopne
js
jae
or
and
cmp
pop
adc
sbb
sbb
lods
sub
push
lock
das
jmp
and
fistl
loope
outsb
xchg
bound
push
addr16
popf
lock
rolb
in
ret
dec
dec
xchg
outsb
inc
push
cmp
cmp
adc
jne
clc
push
pop
add
sbb
push
aas
sub
cmp
add
cmp
enter
inc
sbb
xor
in
and
lahf
jno
xchg
jo
hlt
clc
pop
jl
fmuls
and
sub
mov
push
dec
dec
mov
sti
mov
sbbl
jno
add
in
cmp
ret
fs
cmp
jge
nop
adc
outsb
cmp
inc
idiv
arpl
inc
push
cld
pushf
mov
dec
mov
xchg
sbb
jecxz
incb
scas
or
mov
cwtl
out
jne
fistpl
testb
inc
xchg
push
aas
cmp
pop
xchg
sti
cmp
adc
and
mov
push
xchg
mov
sbb
push
or
test
loopne
xorb
sub
js
mul
imul
and
sbb
je
mov
dec
into
flds
mov
mov
jle
popf
inc
roll
sub
je
pop
outsl
cmp
and
mov
and
fbld
cmp
mov
ja
jnp
test
jg
lods
sbbl
jecxz
mov
or
pushf
jecxz
pop
ljmp
add
test
or
shrb
push
test
cmp
sbb
hlt
sub
cmpsl
je
je
xchg
cmp
das
ds
hlt
shll
cmp
mov
xchg
sub
mov
outsl
addl
lods
adc
jp
mov
fdivl
ret
xchg
lock
sub
mov
loopne
pop
stos
xor
ret
psubw
sbb
fxam
jg
and
data16
cmp
es
and
orl
dec
into
inc
mov
and
mov
jb
aad
adc
inc
jnp
cmc
xchg
jne
dec
loope
mov
mov
aam
cmp
or
popa
fsts
ss
es
jne
mov
out
stos
test
jns
sub
push
mov
jecxz
cmc
xor
insb
pop
fimuls
insb
mov
add
enter
adc
mov
cmpsl
les
cmpsb
mov
shrb
flds
and
adc
pop
mov
push
xchg
and
sbb
xor
xchg
xchg
sbb
cmpsl
aaa
jne
mulb
cmpsl
dec
jmp
and
add
dec
mov
ds
cwtl
pop
andb
sub
cmpsl
push
fs
negl
xor
sub
mov
inc
adc
outsb
inc
clc
lea
mov
out
mov
ret
add
pop
scas
pop
out
fadds
dec
mov
test
xor
fildl
stc
ljmp
sti
cwtl
mov
popf
nop
arpl
mov
mov
inc
mov
mov
pop
lret
adc
mov
nop
loopne
xchg
ljmp
pop
xchg
roll
arpl
xchg
xor
vpunpckhqdq
sbb
dec
sbb
out
enter
jne
push
in
xchg
pop
xchg
dec
mov
jae
mov
pop
test
gs
jno
daa
xor
ljmp
or
xchg
mov
das
mov
pop
decl
jg
ss
lea
sarl
repz
js
adc
insb
pop
sub
stos
addr16
mov
sbb
sub
mov
call
int3
pop
xor
lock
stc
inc
mov
movaps
stc
fiaddl
in
ficoml
pop
test
scas
ja
xor
jo
inc
out
fists
inc
repnz
push
mov
pop
xor
outsb
pop
je
stos
std
inc
jnp
pop
xor
sub
aaa
dec
xor
pop
dec
mov
cs
out
lret
test
sbb
fbstp
sbb
mov
repz
or
outsb
and
add
dec
sub
arpl
ficoms
lods
mov
and
sub
icebp
sub
mov
lcall
push
pop
pop
jge
mov
jbe
jnp
outsb
adc
sbb
cmp
ja
fdivrs
ss
add
scas
push
mov
in
leave
and
add
mov
xchg
fxtract
cmovno
out
sub
add
idivb
sbb
xchg
sub
clc
daa
andl
jne
add
sbb
sbb
outsb
pop
pop
inc
icebp
popa
lds
and
stos
je
push
push
iret
push
add
mov
and
add
adc
icebp
adc
xor
inc
cmpsb
out
jecxz
cli
mov
xchg
pop
inc
icebp
add
pop
out
inc
or
adc
xchg
push
jbe
push
sti
dec
daa
or
adc
or
cmp
inc
cmp
jmp
sbb
xor
inc
lods
adc
mov
sub
dec
movsl
and
lcall
movsb
in
les
es
and
xor
push
pop
test
in
aas
cwtl
mov
dec
jg
push
iret
fbstp
cmpsb
ret
test
cwtl
sahf
adc
push
andb
repz
cwtl
dec
negl
mov
test
fstpt
mov
dec
dec
mov
nop
jo
repz
popa
cmpsl
push
pop
xor
mov
fdivrl
cmp
outsl
clc
cmp
std
cs
int3
popf
imul
icebp
push
inc
divl
mov
cmp
popf
cmp
push
jmp
inc
cmpsb
lcall
mov
icebp
mov
pop
imul
push
mov
push
add
pusha
repz
es
xor
lret
inc
sbb
inc
lret
mov
ja
add
jno
and
sub
push
mov
push
in
cmp
xlat
inc
mull
data16
push
xchg
aad
cmp
jb
testl
push
je
inc
stos
xchg
popa
inc
mov
out
cmpsb
jo
test
cmpsl
test
mov
xchg
mov
imul
jb
cltd
cwtl
call
add
inc
into
stos
repnz
mov
out
adc
sbb
sub
push
sub
mov
adc
nop
or
xor
or
pop
iret
sub
dec
notl
jb
lods
and
imulb
pop
mov
aas
xor
repz
test
sbb
and
repnz
jbe
mov
dec
ja
jp
shr
lock
push
in
dec
stos
pop
mov
lret
popf
push
adc
outsl
sub
mov
out
mov
mov
mov
jge
push
fs
enter
jl
mov
pop
xchg
push
jmp
or
inc
push
xchg
scas
cmp
test
ffree
xchg
pusha
cwtl
shlb
xchg
shr
inc
pusha
loope
cmp
adc
test
leave
ret
shrl
dec
sub
divb
mov
clc
mov
xchg
dec
insl
jp
cwtl
xor
pop
or
orb
shll
mov
mov
or
fbstp
mov
inc
sbb
sbb
arpl
and
popf
or
or
test
cs
cmpsl
gs
or
cmp
or
cltd
fdivs
icebp
adc
jge
cld
or
mov
rolb
repz
jg
aad
add
movsl
sbbl
cli
pop
testb
faddl
mov
dec
xchg
mov
sti
bound
imul
xor
jp
mov
stos
adc
cmp
repz
fistps
out
or
push
or
lahf
mov
jmp
ljmp
fwait
in
outsl
sahf
pop
loopne
cmpsb
cmpsl
jg
adc
jg
cmp
sbb
mov
mov
out
push
sbb
cltd
push
adc
cwtl
bound
inc
fidivrl
scas
fiaddl
cmp
fcoms
cmp
lret
es
xor
mov
negb
xchg
push
mov
xlat
xchg
mov
push
arpl
cmp
jg
mov
mov
jmp
jle
push
cli
subb
pop
and
mov
cmp
movl
sti
inc
adc
or
flds
subl
inc
add
les
aam
cld
push
sub
push
xchg
data16
ljmp
jl
inc
stos
jb
cmp
rcrl
xor
push
lahf
jge
fwait
mov
aad
xlat
mov
mov
leave
lods
insb
idiv
pop
jnp
sti
add
or
movsl
inc
add
ficoml
mov
jmp
and
push
dec
aas
sbbl
cmovne
jb
xchg
xchg
lret
sahf
cmpsb
cmp
imul
mov
fadd
stos
cmpsl
dec
out
xchg
mov
imul
pop
fcoms
push
dec
stos
lea
sub
cmp
cmpb
inc
ljmp
adc
test
adc
pop
loopne
push
insl
rcrb
xchg
push
hlt
stos
sbb
pop
jno
push
jo
lahf
rclb
jo
hlt
mov
mov
add
stos
pop
cmc
mov
sti
push
xor
jmp
arpl
arpl
jecxz
push
in
pusha
push
mov
pop
dec
stos
jno
jmp
fs
and
dec
mov
sbb
or
leave
movsb
adc
ret
std
clc
or
dec
inc
test
fs
cmp
or
mov
scas
push
insb
xor
clc
fstpl
iret
movsb
add
jae
sbb
in
or
fistl
into
fisubs
mov
jb
cs
sub
jns
mov
in
dec
push
mov
mov
mov
lcall
push
jne
inc
imul
and
call
test
xchg
in
xlat
movsb
adc
mov
and
xor
outsl
adc
mov
xlat
jo
in
mov
mov
sarl
lock
aad
jmp
jmp
cltd
addr16
arpl
jae
lret
dec
out
cmp
sbb
out
pop
out
sbb
int
jbe
jg
lcall
mov
xchg
lock
push
cs
add
insl
cmp
jle
or
jecxz
push
and
cmp
flds
inc
or
out
jo
mov
ret
nop
sub
push
mov
movsb
jne
jns
xlat
lods
loope
add
sub
cmc
lret
nop
inc
insl
push
jmp
pop
in
add
filds
inc
mov
popa
gs
cmp
push
fwait
scas
push
aad
xchg
fildll
pop
inc
pusha
xor
push
inc
ljmp
pushf
jge
inc
inc
inc
scas
or
jns
mov
dec
add
jecxz
mov
cmpsb
push
ljmp
dec
sbb
cmp
into
adc
sti
ret
xor
sbb
cld
jb
frstor
cli
popf
add
dec
mov
or
jo
ficompl
push
jg
xchg
mov
sbb
xchg
scas
aad
cli
adc
shl
fmull
mov
negl
mov
scas
push
fs
fmull
insl
jb
ror
fimull
inc
mulb
fnstenv
and
jle
add
and
ljmp
popa
mov
and
mov
mov
and
mov
aad
mov
popf
fwait
push
sub
lods
movsb
dec
push
pop
out
ret
js
adc
repz
and
mov
sub
out
xor
push
push
std
cltd
ud2
incb
jne
daa
xchg
lahf
in
das
ds
fs
aam
pop
dec
ds
dec
and
cltd
loopne
cmpsb
add
fisubrs
or
push
sbb
push
adc
mov
lret
cmp
or
inc
xchg
inc
dec
xor
mov
aad
scas
sahf
dec
adc
dec
es
push
imul
add
not
movsb
xor
lahf
mov
fisttpl
bsf
andb
and
adc
xchg
data16
cmpsb
xlat
cmp
xchg
xor
stc
xor
cwtl
dec
xor
cs
jo
aad
sbb
mov
lret
push
mov
pop
add
inc
adc
and
fs
sub
adc
sub
insb
mov
movsb
lods
lods
push
addb
clc
shll
inc
lret
push
fsts
sahf
inc
insl
sbb
cltd
push
in
int
xchg
data16
push
mov
jae
sub
test
cs
push
es
sbb
add
jb
push
inc
mov
push
sub
cwtl
stos
dec
pop
mov
or
sub
sbb
frstor
mov
jp
ss
cmp
fs
mov
xchg
loopne
mov
frstor
inc
andb
lret
pop
mov
jno
setns
cmp
movl
pop
mov
sbb
xor
jbe
or
xorl
lahf
cmp
sbb
test
mov
add
mov
or
movsb
fistpl
inc
adc
add
cli
push
idivb
popf
sbb
sub
sub
adc
int
inc
dec
and
mov
mov
dec
test
add
sbb
inc
pop
lods
adc
cmp
xor
lret
sbb
pop
or
popa
add
ljmp
mov
mov
sbb
addl
mov
mov
imul
loope
addr16
sbb
enter
jno
stc
jmp
pushf
leave
and
test
in
sarl
sbb
lcall
into
add
bound
call
xlat
mov
and
fcomp
dec
jmp
push
jo
mov
mov
push
in
mov
cli
mov
push
lock
push
or
jg
incb
mov
pop
dec
dec
loopne
sti
nop
inc
add
mov
jne
dec
pusha
pop
or
pop
sub
adcl
test
xor
stos
dec
or
mov
cmpsl
je
inc
lahf
cs
mov
jmp
sub
jl
and
enter
jecxz
enter
xchg
jecxz
push
mov
and
dec
xchg
inc
xorb
mov
fcmovb
in
fstp
sti
add
out
shlb
cmp
notl
in
xor
mov
and
push
fldcw
xchg
fwait
pop
sahf
lret
insb
adc
pushf
jmp
and
sahf
pop
cmp
or
test
ljmp
das
es
insb
push
mov
pcmpgtw
js
pop
xchg
call
sub
xchg
mov
dec
fnsave
jl
bound
cmp
call
pop
or
inc
out
das
xor
int3
stos
sbb
leave
inc
mov
push
dec
pop
cmp
xchg
lret
out
cs
add
inc
inc
push
xor
cmp
test
clc
mov
or
pushl
bound
xchg
push
mov
loope
pop
mov
push
pusha
cmp
push
sbb
sub
xor
stc
mov
sub
sub
out
push
sub
loopne
cld
movsb
int
mov
loopne
test
mov
pusha
fbstp
pusha
shl
mov
rcrb
in
sub
call
sar
mov
daa
push
mov
push
jb,pt
into
jb
in
data16
mov
mov
xchg
popa
jp
dec
push
mov
mov
mov
dec
jl
mov
jb
int3
xor
fadd
stos
test
sbb
loope
icebp
sarb
stc
mov
popf
lods
push
mov
pop
jb
xchg
add
xor
scas
pop
sbb
mov
popf
adc
push
push
mov
popf
mov
and
sub
orb
lea
pop
lahf
das
pop
cs
or
fsubp
jl
in
or
mov
xchg
jo
mov
mov
in
jl
mov
shr
outsb
in
shll
test
iret
add
outsb
bound
test
mov
or
push
pop
cmp
test
aad
negb
dec
mov
ss
inc
cwtl
loop
or
sbb
jno
fildl
xchg
xchg
loop
lret
filds
out
aas
adc
adc
pop
roll
xchg
int
sbb
hlt
sbb
push
lods
sbb
rolb
bound
dec
xchg
mov
and
push
pop
dec
push
in
sub
dec
xchg
xchg
call
sti
xor
or
and
lods
xchg
xor
addb
pop
lock
std
fwait
cwtl
adcb
push
xchg
repz
or
dec
aad
xchg
mov
lds
imul
nop
cs
cmp
mov
inc
loop
call
outsb
dec
mov
cmp
pop
gs
mov
adc
and
xchg
mov
fs
insl
xchg
dec
pop
jl
xchg
dec
xchg
cwtl
push
xorb
pop
movsbl
arpl
pop
out
repz
sahf
add
js
or
dec
adc
out
or
pop
xor
in
neg
imul
push
or
mov
pop
xor
adc
loope
in
inc
xor
jnp
rolb
out
in
mov
fmul
pmulhw
or
pusha
sahf
stc
int
and
fldt
push
jmp
inc
lahf
int3
adc
push
movsl
adc
pop
add
int
mov
and
pop
jmp
add
jle
push
pop
push
leave
add
das
fldt
jge
stos
inc
mov
lock
rclb
add
or
notb
sub
dec
cwtl
push
adc
test
pop
sarl
daa
sbb
cmpsb
fwait
sbbb
scas
or
xchg
xchg
js
inc
mov
inc
jecxz
dec
insb
lcall
ror
mov
sbb
inc
icebp
bound
dec
mov
mov
xchg
mov
xor
out
lods
outsb
dec
iret
mov
imul
jecxz
outsl
or
jno
xchg
cmp
mov
xchg
cmp
sti
xchg
cmp
pushfw
and
or
popa
sbb
mov
shll
mov
fucomip
arpl
mov
dec
xlat
mov
adc
or
outsl
outsl
xchg
cs
mov
push
cmp
aad
sub
inc
sbb
xchg
jb
movsb
dec
and
insb
mov
push
xchg
mov
mov
movsb
inc
pop
push
test
lds
jge
sub
jb
es
clc
cmpsb
sub
jno
scas
or
test
add
mov
xchg
inc
dec
sub
into
and
out
cmp
scas
mov
mov
movsb
xchg
les
jnp
ror
lea
mov
movsl
xor
pop
ljmp
ljmp
loopne
es
dec
in
add
test
movsl
lock
fnstsw
fcmovbe
and
jb
add
adc
adc
push
sub
test
fisttps
mov
or
jae
inc
sbb
das
adc
test
stos
mov
push
push
leave
mov
mov
repz
imul
jb
push
mov
sub
mov
imul
hlt
xor
pop
cmpsw
xchg
jge
dec
nop
outsb
sbb
pushf
or
jecxz
outsb
imul
inc
roll
mov
stos
lret
and
and
cld
xchg
subb
mov
adc
es
jnp
cmpsl
gs
jg
cmp
aam
mov
inc
mov
xlat
sub
sarl
mov
sub
push
inc
out
insb
inc
pop
pop
jo
pop
jne
mov
rcrl
es
and
xchg
enter
movb
mov
xor
js
push
and
not
rcr
test
xadd
iret
add
cs
data16
pop
mov
xor
rcll
cmp
or
jbe
mov
mov
sahf
adc
xchg
int3
sbb
mov
movsl
mov
jp
ljmp
cltd
in
mov
in
lods
ret
scas
mov
mov
dec
xchg
xchg
adc
jb
mov
mov
popf
push
pop
cltd
repz
insl
mov
add
repz
sbb
jp
push
popa
fstpt
push
in
scas
push
xchg
mov
mov
mulb
loope,pt
sub
scas
xor
cmp
out
sub
shlb
data16
cmpb
inc
xlat
xchg
or
inc
and
push
fcoml
cmp
outsb
mov
push
add
es
push
jecxz
aad
add
pop
and
dec
scas
adc
test
push
arpl
js
int3
in
mov
mov
roll
int3
xchg
xor
movl
xchg
adc
sub
sbb
sahf
add
aam
or
add
das
jne
cwtl
xchg
fnsave
cltd
jno
mov
outsl
dec
inc
les
adc
loopne
jg
outsb
ror
and
cmp
imul
add
lahf
xchg
enter
repnz
and
add
inc
mov
push
into
daa
shlb
pop
cmp
dec
adc
aaa
negl
mov
pop
ret
clc
pop
insl
sbb
into
mov
idivl
and
imull
xchg
mov
xchg
testb
div
jne
or
mov
add
repz
or
dec
dec
push
sub
mov
pop
shll
adc
pop
lret
pop
cmp
fucomp
cmp
cmp
scas
aam
push
aaa
ret
insb
jns
addr16
faddl
aam
mov
aaa
jl
pop
adc
mov
adc
popf
in
mov
cmpl
in
sub
pop
jbe
push
insb
jmp
adcl
mov
dec
lea
push
add
out
push
or
push
adc
mov
ljmp
dec
in
testb
outsl
jnp
cmp
and
sbb
movsl
xchg
jae
cli
test
jns
dec
out
push
sbb
mov
adc
sarb
enter
add
ficomps
ss
int
xchg
mov
daa
cmp
sarb
add
stos
mov
cmp
stos
in
push
pop
sarl
into
inc
pop
aaa
fnstcw
shll
and
rolb
arpl
cmp
mov
and
insl
rcll
repz
mov
addr16
je
pop
adc
and
xchg
imul
repnz
int
sub
into
jle
scas
or
or
mov
mov
pop
adc
dec
jge
jo
fmuls
or
loope
jl
push
xchg
aad
sbb
inc
pop
ja
popf
popf
mov
xor
xchg
mov
outsb
or
out
jb
cld
jg
mov
lcall
mov
inc
jg
cmp
imul
xchg
push
inc
call
mov
mov
xlat
sbb
loope
sti
push
mov
jge
into
dec
or
rol
adc
outsb
ljmp
js
inc
or
sbb
int
cld
pusha
cld
inc
pop
je
adc
nop
ret
lahf
mov
test
inc
jle
lcall
dec
sbb
pop
or
pop
loope
adc
mov
test
mov
shrl
iret
mov
adc
mov
adcl
add
scas
and
jae
sbbb
hlt
mov
xchg
or
cmc
push
cmp
mov
popf
sbb
add
pop
xchg
imul
dec
rcll
sbb
loop
rcr
mov
sarb
mov
sbb
stos
loopne
sbb
jne
test
sarl
adc
in
out
xchg
sub
jp
insb
ljmp
dec
ljmp
mov
scas
adc
decb
inc
cmp
mov
add
pushf
mov
cli
lcall
jns
sti
fwait
outsb
leave
hlt
push
jl
cmp
adc
lahf
pushf
in
xor
loop
xor
pop
inc
fstp
fld
add
xor
dec
movl
popf
mov
and
lock
sbb
into
test
enter
add
aad
pop
mov
gs
cs
test
jmp
aam
push
call
xchg
pop
mov
leave
push
ss
iret
inc
ljmp
clc
or
aas
insl
mov
inc
clc
aaa
push
fstl
popf
or
lea
loopne
push
repz
mov
or
cmp
or
clc
mov
cwtl
mov
sub
out
lret
in
pushf
sbb
push
cmp
xchg
add
adc
add
mov
jns
mov
insl
cwtl
lahf
dec
push
ja
fsubs
fidivrs
cmp
test
fsubs
xor
pop
das
cmp
filds
ja
mov
mov
mov
cmp
daa
mov
push
and
jae
cmpsl
push
push
sbb
lock
sbb
sti
xor
push
and
pop
pop
dec
fnclex
dec
cmc
and
mov
add
stos
mov
mov
cmp
xor
out
add
mov
fwait
push
es
ds
in
add
mov
mov
jno
cld
or
mov
mov
jb
mov
xchg
popf
daa
fadd
push
xlat
push
das
fstpt
rcr
or
cli
mov
xchg
cmp
dec
lahf
sarl
pop
sti
or
pop
cmp
dec
fdiv
mov
xor
sbb
addb
cmpsb
sbb
xchg
shrl
sub
popf
xlat
mov
xor
xchg
dec
movl
cmp
stc
std
xlat
roll
sub
dec
xor
ret
and
sub
data16
inc
enter
add
or
mov
dec
sbb
inc
scas
hlt
es
popf
pop
xchg
and
stc
pop
xlat
xchg
sub
ret
pop
mov
pop
push
and
push
test
into
sbb
adc
push
pop
inc
flds
rcll
rorl
cmpb
shr
filds
pop
loope
add
cmpsl
stc
pusha
sahf
iret
orl
das
mov
jno
loopne
sahf
dec
outsl
push
jno
mov
leave
dec
push
pushf
mov
inc
cmp
cld
cwtl
xchg
pop
test
into
xchg
rolb
imul
mov
cmp
sti
adc
cmpsb
fwait
or
fdivrs
mov
xor
popa
lret
jne
lea
aas
mov
fidivl
scas
push
es
cwtl
mov
push
mov
rorl
dec
cmp
fcmovnb
int
outsb
cs
jmp
lods
fdivrs
dec
xchg
rolb
xor
pop
or
cmp
sbbl
cltd
movsl
xor
imul
cs
lock
mov
cmp
or
cmpl
sbb
push
cwtl
xor
cmp
and
int3
test
push
mov
iret
int
fmuls
cld
jo
and
bound
lock
adc
repz
sbb
sbb
xchg
mov
out
xchg
loopew
pop
add
scas
ljmp
fnstenv
push
xor
push
sbb
pushf
mov
xchg
roll
data16
jl
inc
push
lds
ja
mov
mov
mov
jae
movsl
xchg
int
mov
inc
leave
mov
pop
inc
idivl
mov
dec
les
hlt
fidivrs
mov
cmpsb
lcall
jl
jo
movsl
mov
and
cmp
leave
sbb
jo
std
call
sbb
shl
xor
addb
and
jo
data16
lods
inc
jle
mov
mov
adc
or
add
jecxz
cli
push
lcall
mov
out
mov
inc
ljmp
lret
rcrl
jmp
xchg
push
pop
lcall
lods
icebp
push
dec
jl
lret
fwait
sbb
mov
xchg
lock
dec
inc
xchg
lcall
fisttps
add
or
add
gs
test
cmpsl
add
dec
dec
mov
mov
sbb
ret
mov
inc
test
icebp
pushf
scas
pop
lods
loope
addr16
sub
inc
xlat
sbb
adc
popa
xchg
daa
inc
ficoml
adcl
mov
mov
lret
push
ljmp
lret
xchg
sbb
dec
ret
cmp
push
aad
cmp
add
push
mov
add
pop
sub
je
inc
mov
cmpsb
add
mov
pop
add
mov
movzwl
loop
mov
mov
sahf
push
aam
repnz
hlt
pop
movsb
aam
and
aad
movsl
out
adc
lds
lcall
jbe
sti
fs
and
cmp
inc
psrlq
jle
sub
lret
cld
inc
jb
pop
xchg
leave
movsb
popa
jmp
scas
sub
jp
fnstenv
inc
fmuls
ds
hlt
or
rclb
xchg
or
ss
cli
push
outsl
sbb
dec
sbb
loop
lret
sbb
pop
dec
ficoml
mov
push
pop
outsl
mov
imul
xchg
jmp
movsl
test
clc
xchg
adc
push
in
push
iret
in
or
scas
movsl
movsb
loope
mov
and
jnp
ss
xchg
lods
lods
aam
mov
inc
test
push
sub
cmpsb
inc
mov
xor
scas
inc
fiaddl
mov
cld
mov
and
add
push
cmp
es
bound
mov
xor
dec
into
mov
pop
mov
mov
popf
outsl
sub
mov
loopne
sti
or
and
sbb
and
sti
lea
xchg
xchg
mov
adc
loopne
adc
test
adc
jno
inc
xchg
jbe
mov
xor
sarl
jle
dec
jl
inc
inc
inc
stos
push
xchg
pop
push
mov
loop
adc
dec
xor
popa
adc
mov
mov
add
cmp
cmp
sub
test
xchg
jbe
jb
jb
rcrb
stc
test
mov
aad
xchg
or
out
je
sub
push
dec
shll
lods
in
stos
mov
pushf
divb
aam
scas
mov
push
pop
popa
add
add
lea
addr16
sbb
pop
inc
addr16
mov
and
xchg
mov
ds
shrb
je
lret
addr16
scas
scas
xchg
lods
push
pop
loopne
iret
fbld
ljmp
enter
jo
iret
pop
fildl
cmp
inc
in
dec
cmp
pushf
jb
ja
jb
enter
mov
aaa
mov
sbb
or
xor
dec
lds
sub
jae
cmp
cmpsb
lock
add
jnp
pop
mov
cmp
stos
jl
xchg
jb
fmull
cmpsl
popl
jecxz
mov
and
xchg
or
or
fwait
cltd
adc
cmpsb
jp
add
stc
scas
adc
inc
or
pop
xchg
lret
das
and
jecxz
inc
lret
push
pop
mov
daa
adc
lret
dec
mov
stos
add
mov
mov
xchg
and
mov
jo
jno
xor
gs
scas
ret
adc
movsl
std
xor
dec
das
fcoms
mov
mov
jae
jmp
cwtl
stos
std
cli
pop
mov
dec
xchg
cmpsb
mov
mov
das
fiaddl
fwait
and
and
and
cmp
mov
repnz
xor
cmp
lcall
lcall
in
ret
in
mov
mov
dec
adc
jbe
aam
pushf
leave
int3
setle
jmp
insb
adc
mulb
sbb
push
ljmp
sbb
imul
aam
jg
pop
popf
jns
mov
inc
and
in
add
andb
imul
mov
cmc
cmp
jecxz
sahf
mull
mov
sub
iret
adc
cwtl
rsqrtps
mov
adc
cmc
push
xor
jmp
inc
add
ficomps
psubsw
call
inc
xchg
daa
fldcw
sahf
push
add
or
mov
movsl
lock
test
pop
sbb
fwait
scas
inc
int3
aad
cmp
lea
sbb
lock
lret
stos
rorl
std
jecxz
xchg
dec
scas
mov
addl
fwait
mov
pop
xchg
push
sbb
sub
movsl
mov
inc
sub
mulb
popf
and
sahf
xor
sbb
pop
lock
mov
adc
adc
add
lea
adc
push
xorb
mov
or
dec
cmp
xchg
jns
jnp
add
sbb
test
loop
clc
push
mov
test
pop
cmp
adc
pop
push
test
jmp
icebp
adc
sbb
mov
xchg
enter
test
imul
jle
push
or
cwtl
xor
notl
lock
cmp
sar
mov
push
gs
jle
lods
jge
pop
in
rorb
lods
xchg
jo
push
test
cmp
pop
inc
xor
cltd
outsb
jo
popf
arpl
lcall
dec
hlt
xor
lahf
outsb
add
sbb
enter
enter
sbb
cmc
mov
sbb
test
into
mov
and
mov
test
lret
dec
mov
fisubl
push
inc
mov
or
add
jle
jle
adc
mov
hlt
jo
push
push
dec
test
cmp
loop
pusha
dec
cmp
fstp
lea
pop
into
loope
mov
dec
or
std
scas
mov
xchg
iret
and
test
cltd
inc
lods
popa
mov
int
pop
arpl
jecxz
lahf
mov
mov
or
mov
sub
mov
add
arpl
adc
aaa
out
es
stos
bound
int3
and
pushf
rorb
lret
jno
das
or
fbld
into
pop
addr16
dec
mov
lret
fcompl
inc
jmp
push
xor
ja
cwtl
rol
jmp
mov
loopne
xlat
fdivl
xchg
mov
adc
pop
inc
push
push
lods
dec
sub
pop
add
cmp
rorb
inc
ljmp
imul
stos
push
pusha
loopne
push
pop
stos
out
sub
push
jbe
mov
sub
scas
sub
into
outsl
aam
xor
daa
ja
out
add
push
insb
shrb
push
movsl
es
add
je
add
clc
sbb
popa
xlat
fisubl
pusha
in
jl
outsl
test
mov
cmp
mov
dec
push
nop
daa
adc
jne
es
dec
stc
out
or
aam
stc
and
inc
or
jge
dec
outsb
add
in
mov
repz
ret
add
insb
mov
arpl
mov
jecxz
lock
push
insb
loope
lcall
xor
scas
xor
test
mov
shrb
lods
fsubrp
fprem
ret
xchg
clc
loop
mov
dec
and
mov
xchg
lcall
in
mov
jg
mov
and
push
out
enter
mov
clc
std
test
aas
and
mov
push
pop
popf
fisttps
bound
push
add
dec
pop
inc
xchg
movsl
or
sub
sub
pop
fwait
sbb
in
push
sub
xchg
addr16
imull
xlat
test
mov
add
or
pop
aam
cs
mov
or
mov
test
jo
loop
cmp
flds
mov
cmpsb
xchg
xor
lds
adc
and
icebp
out
xor
rolb
movsb
gs
outsb
jnp
fisttpll
lock
outsb
inc
movsl
xchg
fisubrs
cmp
imul
ret
pop
inc
jnp
jp
das
das
inc
sub
jg
dec
and
push
pop
cltd
das
sub
fcoml
adc
mov
or
outsb
xchg
fwait
xchg
pop
fisubrl
lret
push
out
loop
mov
nop
push
arpl
adcl
pop
dec
cmp
in
adcl
sub
xchg
sub
leave
add
int3
pop
sub
clc
xor
push
mov
mov
or
into
leave
cmp
add
mov
loop
int
pop
lcall
insb
xor
sbb
movsb
sbb
rol
lret
or
shl
jo
sbb
pop
addb
sti
daa
push
pop
gs
fdivr
cmpsb
mov
and
int
insb
xchg
movsl
xchg
shrl
sub
jnp
add
pop
jge
js
add
loope
je
dec
scas
push
xchg
fistpl
outsl
dec
aaa
dec
loop
andb
fldt
call
adc
test
push
push
adc
adc
lcall
test
inc
push
imul
and
adc
add
adc
mov
xchg
xchg
lea
or
sbb
movsb
fidivrs
adc
xor
push
inc
out
out
xchg
push
stos
mov
mov
lcall
sub
stos
xchg
xchg
sbb
repnz
push
test
cmpsl
pushf
sub
int
leave
xor
dec
lahf
loope
sub
cltd
sub
nop
sbb
in
pop
sub
mov
or
mov
stos
arpl
xchg
pop
fistl
idiv
mov
push
push
dec
sahf
inc
call
dec
int
push
xchg
lea
movsl
fistpll
into
cmpsb
fstps
adc
pop
ret
or
cmp
sbb
in
cltd
xor
les
jbe
orb
sahf
sub
cmc
daa
fisttpll
jae
cmp
push
jg
popf
pop
sub
fstps
orb
lcall
xor
xchg
lods
mov
jnp
mov
lret
inc
sub
call
or
xchg
pop
test
jae
cmp
mov
push
pop
add
jne
ds
sbb
push
push
add
push
dec
das
ljmp
int
jns
fsubs
xchg
cwtl
stc
mov
pop
inc
inc
adc
out
push
loope
push
aam
dec
sbb
adc
loope
ljmp
jmp
jbe
jo
xchg
pop
cwtl
push
loope
loop
push
daa
add
in
cmp
and
mov
push
or
inc
mov
inc
cmp
xor
in
add
loopne
xor
mov
inc
xor
ljmp
enter
movsl
inc
fdivr
leave
inc
test
or
addb
aad
dec
jb
jo
out
dec
mov
sahf
out
push
outsb
popa
enter
cmpsb
xchg
lahf
dec
les
pop
pop
xlat
int3
push
divb
fldl
xchg
rorl
je
sti
hlt
scas
push
xchg
fst
jg
lcall
fstpt
mov
xchg
incl
lock
pop
xchg
mov
aas
xchg
ret
and
pop
sbb
outsb
pop
outsl
xchg
and
jge
sbb
xor
inc
xor
mov
pop
jp
addr16
cs
movsl
loope
cmp
pop
arpl
push
cmpsb
aad
mov
dec
das
sbb
loop
ja
pop
iret
mov
cs
and
pop
iret
test
lcall
add
sub
lods
movw
sub
cmp
clc
imul
pusha
mov
or
insl
push
ljmp
jae
bound
lea
fxch
sub
inc
mov
cltd
lods
ljmp
shr
pop
sbb
fdivs
or
lcall
popf
mov
fstps
dec
pop
pushf
popf
ret
lea
test
xchg
stc
sarl
nop
dec
add
andl
jecxz
push
rcrl
pop
test
rolb
movsl
loope
dec
mov
mov
stc
dec
push
push
dec
jmp
push
insb
inc
xor
icebp
rolb
pusha
xchg
or
cmp
shrb
fnstcw
dec
inc
or
cmc
mov
add
mov
push
mov
xor
or
fs
ljmp
sub
cmc
push
push
in
xor
mov
jns
lret
pop
out
inc
fstp
hlt
cmp
ret
adc
arpl
fwait
dec
ja
mov
dec
stos
iret
loope
sbbb
dec
push
mov
les
dec
add
xor
add
and
dec
dec
xor
dec
xchg
sbb
sbb
mov
dec
sbb
pop
xor
out
or
lcall
jl
scas
inc
outsl
cli
lock
in
cld
cmpsb
in
in
xchg
add
cmp
dec
adc
dec
jne
mov
mov
inc
ret
inc
push
insb
hlt
and
in
and
ja
popf
push
dec
nop
aam
iret
sbb
mov
sbb
xchg
mov
push
enter
pop
mov
adc
xchg
inc
pushl
scas
lods
push
sub
inc
cmp
aas
pop
sbb
icebp
xchg
popf
xchg
mov
addr16
sar
dec
or
cmp
cmpsb
adc
es
out
notb
lret
pop
nop
cmp
push
or
es
push
das
or
lcall
pop
cmp
enter
ret
iret
out
mov
pop
push
jecxz
push
popa
call
ljmp
jge
and
nop
fistpl
sbb
ljmp
jne
adc
cmp
adc
and
adc
mov
pop
mov
xchg
ss
jo
scas
mov
pop
fcmovb
mov
pop
popf
addl
repnz
xor
loope
iret
dec
cmp
test
mov
stos
push
cmp
adc
shl
mov
cmp
mov
xchg
out
lods
cmpsb
adc
or
mov
jns
stos
fdivs
std
pusha
xchg
orl
insb
shrb
xchg
xchg
push
dec
fiaddl
mov
add
push
sub
xlat
ficoml
jmp
lret
test
call
cltd
inc
pop
mov
imul
cmp
add
iret
and
lock
xor
incb
push
outsb
pop
dec
dec
add
mov
scas
pusha
mov
inc
mov
sbb
adc
lock
push
jle
mov
jge
mov
test
jmp
pop
add
mov
pop
insb
fcmovu
mov
fidivrl
or
mov
mov
popf
call
fisubl
adc
stos
stc
sti
mov
xor
or
out
or
mov
or
scas
mov
lods
movsl
test
mov
je
out
cmpsb
sub
jne
and
mov
lods
inc
mov
xchg
mov
fnstsw
bound
mov
faddl
mov
add
arpl
adc
into
insb
iret
stc
xchg
dec
mov
loop
dec
jecxz
mov
and
push
sub
mov
shl
cmp
test
clc
aad
mov
xchg
gs
cmp
mov
sub
scas
lock
push
movsb
adc
inc
push
dec
jmp
fadds
push
cli
bound
repnz
sbb
stos
fimull
testl
mov
icebp
jb
pusha
andl
xor
jb
and
imul
ljmp
imul
loope
pusha
mov
sbbl
cmpsl
fadds
ljmp
cmp
mov
dec
mov
ljmp
push
push
mov
add
outsl
lret
ljmp
test
sbb
jg
or
mov
xchg
shll
cmp
cmp
and
add
inc
imul
xchg
add
in
ror
rclb
cwtl
push
ret
sbb
push
mov
adc
xor
and
lcall
test
add
pop
pop
imulb
pop
nop
insb
adc
ficomps
adc
out
cmpsl
push
rolb
test
sub
xor
pop
shll
push
fdivrs
mov
enter
loope
xor
xor
and
pop
adc
testb
inc
mov
dec
xchg
pop
test
or
and
add
and
cwtl
stc
xchg
ret
bound
test
xor
mov
ljmp
int
mov
stc
or
pusha
popa
rcl
xchg
fwait
cmp
push
push
jmp
rorb
add
mov
sbb
mov
jge
cmc
xchg
xor
xor
in
enter
xchg
divl
or
xor
jge
push
fnstcw
add
pop
out
mov
fstps
sbb
pop
or
lahf
dec
add
push
lock
in
push
xchg
cmp
adc
call
faddl
cmp
ja
pushf
mov
xlat
adc
xchg
mov
cmp
repnz
int3
movd
cmp
sbb
mov
push
xor
hlt
jl
jnp
add
stc
mov
andb
imul
cmp
in
ds
mov
aaa
mov
add
lock
test
pop
aad
packsswb
push
push
dec
shlb
or
in
mov
aas
iret
mov
xchg
fdivrl
scas
lcall
cwtl
push
cmp
or
out
mov
push
inc
out
and
rclb
jg
in
in
pop
or
out
je
mov
adc
sahf
cld
js
push
daa
outsl
loop
test
mov
fdivp
pop
cmp
inc
push
sub
sub
testb
cld
out
loop
call
in
xor
imul
pushw
pop
cmpb
jl
jmp
js
adc
cmp
mov
push
mov
test
inc
mov
cmp
mov
ss
out
mov
xor
sub
or
cmp
movsl
inc
test
adc
xchg
add
cmpsb
jo
in
fisubrs
sub
sarl
test
or
mov
jb
push
in
or
std
stc
pop
std
mov
cmpsl
in
in
xchg
and
mov
ret
pop
inc
dec
adc
push
repnz
idivl
icebp
xorb
dec
cld
adc
pop
fs
xor
inc
pop
dec
call
pop
movsb
repnz
addl
adc
add
icebp
jle
push
arpl
mov
orl
inc
out
out
imul
bound
in
ficomps
mov
push
and
cmp
jbe
push
xchg
xchg
cmc
sub
sub
xor
add
mov
or
adc
fs
push
jp
adc
ret
fwait
sub
xor
mov
leave
ret
enter
cmc
xchg
xchg
inc
xor
inc
loopne
mov
es
add
xor
int
add
add
mov
outsl
das
mov
lds
push
push
push
adc
and
cmp
sub
fstpl
push
and
aam
dec
popa
jnp
push
notl
cmpsl
or
test
scas
scas
iret
push
orl
pop
push
iret
and
das
iret
xchg
jno
std
dec
ds
lock
clc
xor
sbb
pop
add
lahf
cmp
push
pop
outsl
inc
mov
push
cwtl
push
fisubs
aam
fmull
leave
aas
aam
cmp
out
cs
push
fistpl
mov
pcmpeqd
addb
call
and
xchg
mov
adc
push
jecxz
xor
jo
lcall
mov
aad
xchg
mov
cwtl
xorb
fsubrl
xchg
inc
movsl
push
push
test
adcl
cld
ret
mov
enter
std
sub
and
jno
movsb
xor
dec
xchg
add
jmp
sbb
ret
imul
jecxz
sbb
movl
scas
es
mov
mov
aaa
ss
fsubrl
jp
out
dec
push
or
xchg
outsl
and
sub
cmp
les
cld
out
pop
pop
adc
andb
push
push
sbb
inc
cmp
sub
and
hlt
jae
pop
fldenv
sbb
cmc
push
je
mov
and
jae
call
inc
sbb
jp
sti
dec
sahf
cmp
xor
mov
or
push
inc
jb,pt
mulb
orb
lock
and
outsb
dec
cmp
arpl
int3
sti
clc
cmp
adc
arpl
pusha
outsl
add
iret
pop
jnp
xchg
and
and
mov
ss
pusha
jae
or
fwait
xlat
lods
inc
clc
mov
cltd
out
jnp
add
inc
fninit
outsl
pop
jne
push
je
xchg
or
ljmp
or
cmp
fistpl
js
loopne
lds
mov
mov
imul
mov
inc
adc
inc
stc
rorl
cmc
icebp
sub
iret
in
adc
test
push
cwtl
pop
jae
pop
pop
push
pop
lcall
and
aaa
andb
cmp
sahf
je
fcomi
sub
mov
and
scas
aam
cld
iret
test
es
jmp
xchg
pusha
les
jbe
paddusw
sub
into
les
out
xor
fiadds
cmp
in
rolb
stc
push
sbb
rolb
fcomps
idivb
mov
divb
inc
mov
lds
sub
pop
call
jno
cmc
ret
sbb
adc
mov
mov
lods
imul
pop
pop
and
andl
std
sbbb
ret
stc
xor
rolb
cmp
mov
outsb
add
mov
testl
mov
mov
mov
jae
cmp
es
insb
gs
add
aas
int
adc
sbb
pop
pop
ror
les
sbb
outsb
in
lret
lcall
inc
jle
cwtl
jns
push
loope
or
aaa
xor
cltd
sbb
cmpsb
cltd
aaa
leave
aaa
subl
inc
sbb
imul
push
iret
rolb
mov
arpl
adc
jns
insb
xor
mov
jno
inc
mov
out
jae
adc
pop
in
mov
adc
dec
xchg
popf
push
les
ljmp
adc
cld
push
cmp
or
xchg
scas
out
xchg
ret
dec
loope
cmp
jae
inc
test
xor
jge
jns
push
das
loope
jb
fdivl
jnp
or
cmp
push
mov
clc
jne
sub
ds
add
outsl
fwait
stc
icebp
inc
cmp
lea
dec
adc
call
and
dec
stos
icebp
mov
mov
insl
sbb
inc
cmpl
fs
fwait
ret
adc
aad
push
scas
pop
adc
jae
aaa
pop
loop
xor
jge
mov
adc
movsl
inc
into
ds
xchg
popa
adc
or
inc
ficomps
test
fiadds
repz
sbb
mov
cwtl
clc
dec
shlb
out
mov
xchg
movb
xlat
adc
stos
sub
dec
fcoms
pusha
mov
test
inc
cld
jl
insl
incl
scas
mov
xchg
dec
dec
fwait
stc
xor
aas
in
sbb
and
daa
sti
dec
mov
fistpll
push
fsubl
fmull
dec
mov
cli
lret
sbb
cmp
inc
add
notl
popf
cs
xor
push
outsb
in
test
ljmp
dec
lret
aam
repz
jle
jl
out
addr16
xlat
mov
push
push
cltd
mov
pop
mov
pop
xorl
fs
jmp
jmp
adc
sub
pop
push
fxtract
hlt
out
in
iret
cmpsl
ja
xorb
jmp
andl
xor
inc
rorl
out
inc
push
pop
pop
pop
test
push
add
and
dec
sarl
bound
sbbl
fldl
les
xchg
jnp
push
mov
sbb
sub
pop
cmp
or
cmc
sbb
cwtl
fbld
pcmpgtd
and
dec
jne
ss
ret
sub
iret
inc
and
mov
inc
mov
cmpsb
out
and
xor
lahf
fidivs
insb
inc
out
test
jmp
pushf
fmul
testb
lods
out
mov
jbe
aas
mov
jns
repnz
dec
outsl
popa
mov
and
dec
scas
xor
jae
fistps
add
loopne
dec
or
or
add
push
lret
and
jnp
mov
or
xchg
jbe
mov
insb
stos
les
lret
out
rorb
push
push
jge
jb
mov
sti
fldcw
aas
out
pop
mov
jae
xchg
jle
and
xchg
lret
or
es
mov
decl
adc
mov
aad
cmp
or
fiaddl
cld
mov
movsb
icebp
push
xchg
popf
ret
xor
ftst
push
out
jno
xor
jnp
test
ss
stc
dec
movsl
push
daa
jge
scas
cmp
push
scas
mov
and
or
lret
je
in
adc
xchg
jb
rclb
mov
inc
xlat
loope
sbb
sbbl
or
xchg
cld
adc
jge
stos
cli
idivb
cmp
out
inc
fstl
aam
rclb
mov
loop
inc
rclb
inc
mov
jns
les
and
shl
mov
cltd
cmp
adc
adc
arpl
xchg
insl
sti
mov
test
pop
movsl
outsb
int
xchg
enter
out
fnsave
cli
lret
testb
repnz
mov
pushf
pop
xor
pop
outsl
repnz
mov
out
mov
mov
cwtl
repnz
xor
cmpb
es
mov
mov
dec
mov
xchg
cli
and
sahf
fdivl
mov
hlt
xor
jae
mov
in
push
mov
es
or
or
mov
and
dec
hlt
aaa
ret
pop
cmp
stc
ret
xchg
xlat
mov
pop
out
das
iret
ret
cmc
dec
insb
mov
mov
mov
mov
dec
inc
inc
cli
dec
ret
clc
push
jge
sbb
xchg
pop
jmp
xor
dec
pop
emms
leave
inc
icebp
or
pop
inc
mov
icebp
xor
mov
clc
inc
mov
shrl
pushf
lahf
pop
call
popf
andb
in
mov
push
pusha
fs
add
and
test
lret
inc
ss
loopne
jns
pop
add
xor
push
dec
dec
in
sub
pop
adc
or
movsb
push
and
repz
xor
jmp
lods
std
sub
ds
add
dec
pushf
mov
or
xchg
fstl
xor
cmpsb
jg
cs
push
xchg
push
dec
bound
mov
xor
jns
add
adc
pop
xorl
or
jge
cltd
cmp
outsl
cmp
out
sbb
ret
cmp
and
in
lea
adc
ja
pop
int
pop
push
bound
or
sub
negb
inc
or
sarb
in
daa
and
fcompl
mov
mov
in
add
inc
adc
mov
xchg
fnstenv
xchg
jp
int
jbe
or
stc
mov
out
xor
mov
sbb
aad
dec
xor
rclb
xchg
mov
pop
repnz
sbb
dec
jmp
sbb
lcall
xchg
lcall
gs
lcall
mov
or
push
sub
addl
mov
dec
ljmp
sbb
dec
int3
imul
add
icebp
shll
sbbl
mov
sti
andb
mov
outsl
mov
dec
out
adc
push
addr16
hlt
repnz
mov
jae
cmp
dec
cs
in
shll
sarb
mov
fdiv
lock
add
cmp
jno
loope
aas
std
sbb
pop
cmp
fnstsw
sub
mov
iret
mov
cmp
std
and
ret
add
aad
fsubr
and
jle
insl
pop
dec
mov
xor
sbb
cmpsl
fwait
jae
lret
stos
push
outsb
popf
lcall
xor
inc
test
jl
shl
and
cmp
lea
xchg
stos
adc
leave
add
sub
cmpsl
mov
lock
xchg
sbb
xor
xchg
out
mov
rcr
jb
sbb
mov
dec
loope
clc
dec
inc
jmp
mov
mov
jns
add
int3
scas
push
idivl
pop
lret
and
ret
cwtl
dec
fmulp
shrl
add
jge
stc
movsl
movsb
ljmp
xchg
xor
data16
xchg
icebp
dec
pop
jecxz
sub
stos
push
xor
lahf
and
test
insb
bound
sbb
push
and
pop
insb
mov
sub
lds
aaa
daa
decl
dec
idiv
mov
sbb
inc
push
test
inc
pop
lret
dec
jns
xchg
mov
push
mov
push
dec
mov
jne
add
mov
fidivrs
cld
and
test
pop
fs
loopne
icebp
bound
dec
ja
lcall
imul
stc
rolb
jae
or
xchg
and
pop
pop
out
leave
lock
pop
dec
out
and
arpl
sbb
js
rclb
mov
call
add
xor
leave
or
or
scas
pushf
xlat
fsubl
das
add
inc
pusha
pop
mov
fwait
mov
fwait
loope
add
cs
cmc
sarb
jno
fdivr
xchg
mov
jmp
push
or
out
inc
gs
mov
bound
push
cmp
test
mov
xchg
jo
and
push
mov
pop
xchg
das
aam
andl
aas
inc
mov
cmpsl
int
push
xchg
mov
ss
mov
mov
scas
xor
sbb
push
mov
addl
dec
push
or
or
jecxz
arpl
pop
mov
enter
jg
cltd
sahf
sub
or
sti
mov
mov
iret
push
pop
adc
pop
lcall
jecxz
mov
dec
dec
pop
test
rcrl
xchg
outsl
ja
jmp
jl
rcrl
jecxz
push
mov
pop
nop
or
pop
jecxz
or
arpl
arpl
in
popa
jl
lret
add
fdivs
dec
mov
gs
push
cmp
loope
pop
push
dec
adc
lret
inc
lret
negb
sarl
sarb
imul
pushf
jp
ss
jb
pop
dec
or
int3
shll
mov
stc
jmp
xchg
xor
movl
jge
adc
pop
adc
rcrb
xlat
pop
inc
andl
cmp
into
mov
dec
ret
mov
push
clc
xchg
iret
nop
fidivl
insb
cli
out
hlt
out
cli
mov
adc
fcoms
mov
pop
adcb
jno
xchg
fs
or
bound
inc
dec
push
fstpl
test
fcos
jnp
imul
xchg
adc
add
mov
cmpsl
push
jb
adc
sbb
push
sbb
nop
mov
xor
divl
push
test
xorb
test
push
stos
mov
scas
sub
dec
out
subb
add
mov
out
out
mov
push
daa
stos
rclb
dec
fisttpl
int
cld
sbb
pop
leave
aam
or
push
repnz
mov
cs
cmp
or
push
and
inc
pop
mov
dec
pusha
inc
sbb
xchg
adc
bound
mov
sahf
mov
xchg
imul
addr16
adc
mov
mov
jne
jg
addr16
pushf
cmp
mov
imul
lds
scas
lahf
mov
arpl
cli
rol
repnz
cmc
pop
dec
pop
dec
in
pusha
or
xor
cmp
or
xor
ss
cs
mov
dec
jmp
subb
rorb
inc
pop
ja
xchg
clc
pop
dec
cs
mov
push
faddp
repnz
ror
or
push
clc
movsl
lret
repz
js
and
add
sub
sub
adc
mov
pop
jnp
lea
mov
es
xchg
and
add
bound
enter
dec
test
aam
xchg
and
call
push
or
xchg
pop
sub
imul
out
jne
xchg
push
jecxz
add
mov
icebp
jo
mov
in
cli
push
push
ss
inc
inc
adc
or
arpl
or
dec
in
xchg
out
cld
and
scas
call
mov
dec
daa
fsubrs
xchg
pop
das
sti
mov
pop
std
pushf
cmp
adc
mov
or
mov
sub
cmpb
mov
in
sbb
mov
add
push
ret
inc
std
inc
xor
jo
movsb
data16
cmp
cmpsl
and
dec
mov
lahf
inc
cmc
movsl
push
ds
div
dec
sub
fbstp
sbb
mov
xlat
popa
sbb
sarl
out
sti
and
fisubrs
mov
daa
cmp
sbbl
cmp
mov
pop
rcrl
sub
frstor
es
xchg
call
push
xorb
scas
xor
pop
pop
fildl
pop
or
loopne
imul
leave
mov
cmp
xchg
push
and
lcall
inc
sbb
lods
stos
leave
adc
mov
int3
fstpl
jno
lcall
inc
jb
aas
arpl
inc
dec
mov
mov
fdivrl
push
pop
dec
sub
test
inc
pop
sahf
jo
push
rclb
fcomps
fwait
dec
pop
or
sub
shll
es
loope
ss
push
pop
and
leave
mov
jbe
dec
or
mov
stos
pop
arpl
ss
xchg
call
rcll
aad
shrd
int
stc
std
shlb
flds
hlt
cltd
mov
inc
sub
and
and
add
psubd
jnp
arpl
mov
pop
inc
incb
bound
inc
shll
or
dec
mov
shl
mov
pushf
xor
pop
mov
scas
and
sub
out
cld
sbb
jg
cmp
or
inc
pop
sub
fcomps
dec
cmpsb
jnp
xchg
xchg
dec
ljmp
cmp
pop
mov
xlat
jg
testl
aaa
sbb
xor
xchg
push
js
adc
xlat
out
push
push
sbb
sbb
pop
add
adc
push
jnp
push
cmpsl
ret
sbb
or
pop
sbb
fbld
stc
daa
mov
orb
dec
and
mov
and
jmp
adcl
insb
out
imul
repz
or
imul
insl
leave
aam
dec
pop
repz
fistpl
outsb
aam
andl
inc
xchg
dec
mov
icebp
sub
mov
mov
cs
imul
push
mov
sub
mov
jle
scas
cmpsb
bound
push
pop
sub
mov
ljmp
movsb
sbb
cwtl
mov
jp
cmpsb
insl
out
test
addl
xor
ret
mov
addr16
pop
pop
adc
repnz
xchg
lods
daa
dec
enter
pushf
and
pop
add
in
mov
movsl
and
repnz
mov
push
xchg
push
enter
jecxz
push
xchg
pop
or
jae
pop
test
cld
pop
push
dec
xchg
jle
aas
loope
xchg
mov
orl
sub
and
xchg
shll
pusha
daa
adc
mov
add
push
adc
lods
stos
adc
repnz
in
data16
das
sbb
lock
jge
fcoms
adc
jl
mov
pop
or
dec
shlb
frstor
jo
fnstcw
aas
nop
sbb
scas
jno
out
xor
rolb
fwait
pop
jne
jg
call
pop
xchg
push
and
jecxz
jmp
xor
lds
mov
pop
xor
hlt
mov
cltd
neg
int3
cmp
in
and
lds
cs
test
out
and
int
adc
popf
ljmp
xchg
adc
sbb
inc
and
dec
jbe
add
cmpsb
push
pop
sbb
add
popf
mov
out
ljmp
int3
aas
sub
leave
cmp
push
movsb
push
lret
add
push
push
mov
inc
push
and
pop
mov
idivb
outsl
notb
sar
ret
xchg
push
lods
testl
mov
xor
push
add
insb
mov
ss
and
call
jl
stos
xchg
mov
cld
divb
scas
gs
fstps
cmp
mov
xchg
mov
aam
call
push
shl
iret
pop
lea
leave
arpl
dec
jl
mov
and
shl
ffree
andb
push
or
fcompl
test
popa
add
dec
jae
test
pop
pusha
dec
xchg
stos
sbb
dec
and
inc
sbb
mov
mov
mov
into
call
int
adc
mov
std
mov
imul
and
sbb
aad
xorb
loopne
sub
or
sahf
sti
arpl
jge
sti
lret
xchg
out
pusha
fwait
mov
xlat
hlt
jne
mov
mov
pop
test
lods
cmp
stc
lods
dec
xor
adc
mov
and
adc
cmp
movsl
lods
mov
or
sbb
fwait
imulb
pushl
add
outsb
mov
dec
jecxz
arpl
sbb
adc
cmp
cmpsl
mov
ss
mov
jge
push
in
and
bound
push
fwait
xor
mov
nop
xchg
js
fcompl
mov
xor
sar
mov
cmp
aad
cwtl
xor
adc
xor
mov
shrb
pop
test
xor
and
mov
inc
adc
inc
sub
int3
ja
mov
cmp
lea
fsubl
out
inc
adc
out
and
sub
sbb
dec
nop
mov
pop
icebp
insb
aam
push
ja
jbe
dec
fs
mov
jns
push
in
test
jg
jno
lahf
sub
sarl
aaa
pop
lods
nop
inc
sbb
dec
scas
out
mov
scas
xor
sahf
push
daa
repz
out
testl
pop
les
inc
jl
stos
push
outsb
test
rcrl
jae
es
jae
lock
xor
mov
rcrb
fidivrs
inc
mov
push
lods
and
or
sub
inc
shl
fsubl
pop
mov
mov
pop
in
mov
loopne
clc
xchg
push
push
scas
jmp
out
and
icebp
fs
mov
sbb
xchg
pop
inc
ja
in
mov
mov
xchg
in
loope
jbe
cmp
mov
dec
mov
mov
and
test
rorb
jno
mulb
lock
lea
imul
in
lods
rcr
push
pusha
sbbb
push
int3
iret
nop
mull
xchg
loope
icebp
mov
push
mov
pop
jb
es
aas
sub
jno
sub
xor
int
pop
xor
mov
test
pop
pop
sbb
insb
in
push
mov
xor
push
lret
xchg
and
jo
fsqrt
mov
mov
outsb
popf
or
mov
ret
fmull
stos
push
cs
dec
and
sub
ss
fs
sbb
cmp
mov
add
jecxz
mov
inc
and
mov
jbe
ds
arpl
push
ljmp
jne
push
cmc
std
inc
ss
add
imul
hlt
mov
xchg
push
icebp
xor
cld
enter
inc
daa
jle
and
cmp
jne
cmpsb
add
or
mov
gs
xor
in
push
dec
xor
mov
sub
sbb
hlt
lea
mov
mov
sarl
cwtl
or
cmpsb
jle
cmp
ljmp
xchg
or
xor
push
jl
dec
nop
cmp
fmulp
lret
sti
sbb
idivb
in
xchg
das
pop
in
les
inc
xchg
dec
daa
cmp
cmpsl
loopne
adc
xchg
add
lret
sti
adc
mov
xor
cmp
dec
xchg
or
add
clc
xchg
roll
adc
int3
or
ret
movsl
sbb
jbe
mov
push
mov
adc
mov
jl
mov
pop
cli
inc
xorb
pop
xor
xchg
inc
xchg
dec
gs
inc
data16
notb
push
scas
test
or
or
cs
je
push
add
inc
lods
fmull
in
xchg
repz
jmp
rorb
sbb
stc
sti
push
ret
outsl
xchg
mov
in
sbb
sbb
jmp
jecxz
push
clc
jae
jbe
stc
cmpsb
mov
gs
repnz
stos
lret
sub
test
mov
add
or
mov
leave
inc
mov
cmpsl
aam
je
push
push
and
lcall
dec
xor
cmp
psadbw
xor
mov
stc
pop
stc
dec
jns
es
sbb
ds
out
scas
push
gs
cltd
inc
mov
xchg
enter
pop
orl
xchg
cli
or
stos
repz
ja
test
inc
dec
fsts
jbe
loop
loop,pn
test
hlt
and
mov
jmp
pop
push
push
mov
sti
mov
or
mov
and
je
inc
push
and
dec
xor
jle
xchg
loopne
xlat
sbb
test
cmp
lock
loop
into
enter
and
push
outsl
mov
fisttps
into
repz
push
test
cltd
push
cmpsl
add
mov
pusha
adc
lods
and
mov
xor
fnsave
insl
enter
xchg
jge
lret
sar
pop
scas
adc
sbb
mov
or
cltd
mov
adc
or
repnz
fiadds
cmp
push
pusha
insl
dec
pop
mov
daa
jmp
jns
adc
pop
add
push
inc
lahf
inc
popa
dec
dec
test
les
shlb
int
stos
outsl
scas
insb
popf
imul
push
out
jp
push
add
jl
insl
lock
loope
and
and
add
mov
push
mov
jmp
or
xor
cmpsb
andb
pop
bound
mov
cmp
loopne
xchg
lret
gs
stc
dec
das
or
cmp
aaa
aas
cli
scas
dec
punpckhbw
mov
mov
dec
je
lds
and
mov
movsl
repnz
lock
icebp
in
mov
dec
pop
shl
movsb
inc
push
std
cmp
lret
mov
xchg
ljmp
out
subl
fisubl
daa
or
cld
and
in
and
idivl
cwtl
out
ret
mov
loopne
out
leave
inc
cwtl
and
mov
rcll
sti
icebp
cmp
pop
mov
icebp
enter
push
push
jae
aam
in
or
push
cmp
fstpt
push
call
test
cli
cmpsl
ja
jle
movb
xor
jle
sub
loopne
xchg
clc
mov
sti
pop
mov
sub
lea
jnp
pop
push
mov
inc
inc
pop
pop
xor
mov
mov
cs
testb
into
push
test
adc
mov
scas
add
lock
popf
aaa
adc
loopne
add
pop
fildll
ja
or
adcb
popa
xchg
stos
sub
mov
test
xor
jp
scas
mov
arpl
jmp
shrl
fs
add
jmp
pop
or
mov
outsl
xchg
jne
dec
or
outsb
mov
jl
pop
push
stos
mov
movsb
mov
fsubrl
xor
jbe
scas
push
push
pop
or
mov
aaa
fwait
out
mov
adc
sub
cltd
test
mov
lock
fisubl
stos
sbb
sti
jp
cmc
clc
scas
mov
adc
and
push
cmp
bound
inc
push
cmp
orb
xor
shll
cmp
mov
dec
rorl
sub
pop
data16
and
mov
xchg
mov
xchg
aad
add
mov
push
imul
sti
pop
stos
and
inc
std
test
jle
insl
mov
rolb
or
lods
and
jp
xchg
push
xor
mov
inc
lock
xchg
lret
inc
xchg
and
sub
cmp
xchg
cmc
mov
inc
pop
jmp
test
out
push
shl
mov
adc
pop
bound
sub
movsl
imul
xchg
mov
aad
mov
sub
mov
dec
stc
repnz
outsb
inc
xor
imul
mov
pop
cltd
into
dec
outsb
aaa
cmpsl
push
mov
jno
pop
mov
add
or
fbstp
imul
mov
xchg
push
cld
dec
cld
and
test
xchg
mov
sub
xchg
jle
ds
cmp
adc
push
sbb
mov
and
adc
pop
cli
outsl
aad
js
lock
xor
push
sub
pop
rorb
inc
dec
or
xor
cmp
loope
or
test
mov
mov
shl
pushf
fisubl
divb
mov
das
lock
mov
jge
xlat
les
rcrb
les
sti
add
or
mov
xchg
adc
ss
imul
and
mov
lods
jecxz
xchg
mov
clc
mov
stos
imul
les
shll
shll
inc
call
mov
lahf
sarl
sarl
aaa
push
jo
cmp
inc
int
out
mov
stos
stos
loopne
mov
mov
iret
dec
cmp
sub
jp
movsl
lret
sub
je
mov
sbb
rorb
push
inc
decl
and
jns
adc
dec
dec
shl
mov
cwtl
jo
jne
call
ljmp
cmc
fcmovnu
outsl
rolb
pusha
lock
mov
pushf
jg
sbbb
adc
and
cmp
gs
push
mov
push
aas
and
add
sub
sbb
mov
xor
jp
sbb
lds
xchg
add
loope
adcb
stos
adc
adc
popa
loope
mov
mov
mov
sbb
sar
xor
xchg
bound
call
stos
nop
jbe
cmp
dec
arpl
andb
mov
mov
xchg
push
push
cmp
ja,pt
inc
repz
pushf
rclb
call
xchg
ret
dec
sub
jo
add
data16
lret
add
sti
out
dec
jle
mov
sti
mov
in
inc
fs
pop
ret
dec
stc
call
cmp
push
xchg
sarl
pop
push
xor
sbb
scas
imul
sarb
int
lods
add
lea
inc
inc
sub
fldz
sahf
inc
xchg
xchg
adc
lret
sub
mov
lods
xchg
movl
add
out
push
je
pop
cmp
add
jnp
xlat
and
out
cmp
fdivp
jnp
aad
xchg
test
sahf
sbb
mov
loope
call
or
gs
cld
ja
inc
scas
lahf
imul
lret
cmc
xlat
imul
cmpsb
or
rorb
in
push
int3
imul
stos
scas
cwtl
pop
inc
add
leave
sub
push
stos
je
adc
mov
sahf
cmpsl
idiv
lea
xchg
add
and
out
insl
pop
push
pop
dec
outsl
inc
ds
testl
pop
xchg
das
je
cmp
inc
fcoms
mov
stos
rorb
add
cwtl
lock
cmp
and
pop
es
adc
mov
inc
lret
imul
pushl
push
dec
jb
and
pop
cmp
fmuls
push
aaa
mov
adc
jns
mov
movsb
push
gs
out
arpl
xor
out
cmp
cmp
aad
addr16
rcrb
out
pushf
xchg
mov
adc
dec
xchg
and
xor
push
daa
sub
or
push
push
adc
repz
mov
cmpsl
push
xchg
mov
mov
inc
or
out
cmp
mov
adc
fs
add
inc
xchg
fs
cmpsl
stos
lock
jbe
ljmp
push
pop
cmp
addr16
or
xlat
cmp
mov
cltd
inc
imul
xor
movsl
jno
inc
dec
or
xor
jecxz
insb
mov
xchg
and
cmp
lret
xor
mov
shrb
out
mov
adc
xor
pop
xchg
lret
rcr
in
push
lea
xlat
jno
dec
js
or
or
push
pushf
sub
int
mov
pop
arpl
lods
pop
mov
lcall
dec
cs
sti
cmp
lods
cltd
fcomp
in
push
mov
aad
cli
xchg
dec
rcr
sarl
fdiv
mov
or
cmp
mov
inc
adc
imul
xor
cmp
cmpsl
mov
dec
cmc
les
add
sub
sub
out
out
dec
daa
xchg
aam
sbbb
cmc
fstps
xor
mov
jae
repnz
test
aaa
push
das
sub
cmpsb
and
xor
stc
cld
out
fwait
leave
outsl
mov
jo
fst
pop
clc
inc
scas
jae
mov
inc
insl
lret
insb
lcall
push
or
insb
sbb
adcb
xchg
inc
insl
insb
ret
pop
mov
sub
hlt
ret
test
popf
push
cwtl
in
mov
pop
inc
xorb
cmp
into
push
xlat
jle
mov
ret
test
mov
cmp
add
movsb
test
mov
pop
dec
fdivrl
lock
daa
push
push
or
mov
add
filds
pop
jnp
int
sar
sub
and
nop
rclb
push
imul
add
xchg
int3
and
int3
into
js
mov
pop
out
in
scas
push
and
jne
add
mov
mov
sti
push
xchg
insl
out
mov
xor
sbb
imul
mov
mov
push
lcall
mov
or
insl
add
repz
push
fists
pop
xchg
addb
or
pusha
or
cmp
mov
nop
fs
xor
enter
out
and
pop
add
xlat
adc
sub
clc
sub
fmulp
pop
shrb
jp
shll
lods
fwait
cmpsl
jl
jecxz
mov
aaa
in
mov
sub
add
cmp
sub
repnz
mov
or
scas
mov
dec
lahf
pop
add
int
push
adc
rcrl
movsb
jno
rcrb
push
jae
xor
xor
lret
xchg
add
shr
cltd
xchg
popa
add
lea
lret
incb
cli
inc
or
jae
gs
cmpsb
add
lods
or
loope
adcb
sub
sub
cmp
fidivrl
mov
hlt
stos
ret
jo
loop
out
sub
sarl
lds
jno
add
lods
mov
les
lea
insl
mov
sbb
jne
test
repz
out
jle
data16
and
jg
jge
popa
sti
clc
sbbl
mov
add
jmp
ss
cmp
jp
adcb
mov
mov
data16
arpl
idivl
add
movsb
jmp
or
rcrl
sub
movl
mov
es
jns
out
ret
mov
adc
mov
ficompl
dec
arpl
sbb
pop
sbb
out
hlt
loop
rcrl
les
mov
cmp
sub
lods
push
cmp
es
pop
sub
push
push
or
xor
lods
cmp
lods
add
xor
dec
dec
ja
and
les
mov
inc
mov
cld
outsl
cmc
popa
add
adc
cmp
sbb
in
fs
adcb
shlb
cmp
jb
pop
fsub
scas
ss
in
xorl
stos
jmp
sub
add
scas
xor
mov
mov
imul
cmpsb
pop
push
stos
icebp
in
jo
lods
mov
and
pop
fwait
outsl
add
pop
sbb
sub
rcrb
out
cmp
in
mov
jp
lods
call
insb
push
rclb
imul
adc
ss
xor
lcall
mov
or
test
sub
das
push
add
dec
cmp
jle
sahf
jg
orb
lods
fiaddl
push
mov
addl
in
inc
subb
cmp
daa
insb
gs
lret
sbb
mov
and
test
inc
and
xor
pop
sahf
xchg
pop
inc
sub
int3
sub
push
pop
mov
scas
and
dec
xchg
addr16
scas
test
add
sub
push
loop
popa
or
mov
inc
pop
sub
ret
je
xor
xchg
xchg
cmp
cmc
repz
loop
fldl
inc
das
pop
mov
pop
testl
add
movsl
nop
repz
xchg
subl
mov
repnz
adc
jl
enter
mov
lods
adc
aam
out
and
pop
pop
cmpsl
jbe
mov
mull
mov
or
movsl
inc
push
daa
xchg
stc
sbb
shld
jge
std
aad
mov
sub
in
add
das
mov
pop
pop
inc
insb
test
add
adc
icebp
push
cmc
test
cmpsl
aad
cmc
cwtl
mov
push
mov
data16
lods
fwait
into
mov
roll
xor
loop
xchg
and
cmp
xorb
cmp
mov
cmpsb
fistl
mov
test
in
dec
cmp
adc
or
mov
sub
cmc
test
imul
adc
leave
fnsave
ds
pop
lret
popa
adc
dec
in
fcmovnbe
jns
cmp
scas
pop
in
es
mov
fidivrs
cmc
not
lock
adc
mov
sbb
test
sub
fistl
sbb
into
inc
sti
mov
jne
xchg
inc
sub
je
loope
and
xchg
or
fsubl
cltd
add
fmull
ljmp
cmc
call
jae
xchg
ljmp
and
les
pop
xor
outsl
lock
mov
inc
rcrl
fwait
jae
inc
mov
arpl
mov
mov
sbb
adc
dec
sub
cmpsb
jmp
mov
push
xor
mov
test
xchg
jp
add
loope
sbb
movsb
xchg
aas
stos
add
fdivs
xor
cltd
jae
dec
dec
fs
adc
xchg
je
daa
scas
push
ret
adc
dec
les
mov
pop
mov
push
xchg
insb
fdivl
ja
movsb
insl
inc
push
sahf
incl
xchg
adc
and
sub
leave
mov
adc
aas
mov
pop
ss
das
das
jl
lcall
pushf
ss
rcrb
je
scas
aas
arpl
push
data16
add
mull
scas
push
out
jmp
mov
testl
mov
pop
mov
inc
pop
andb
jp
movsl
test
jbe
pop
or
bound
jne
pushf
inc
mov
mov
pop
mov
xor
jle
add
mulb
test
and
test
xchg
fs
dec
scas
mov
popf
ljmp
loopne
push
in
xchg
adc
lretw
lds
inc
outsb
pop
pop
sub
cmpsl
xchg
pop
fldl
pop
dec
jl
call
mov
outsl
and
loopne
rclb
cwtl
scas
stos
fisubl
add
xchg
push
ret
push
and
lock
jp
lods
cltd
popa
mov
roll
sti
sti
mov
leave
les
cmp
xchg
push
jmp
pop
xor
mov
inc
xor
loope
ret
push
push
jae
std
scas
push
dec
cmp
test
fisubrl
push
jno
sub
into
cltd
les
sub
imul
dec
mov
icebp
test
call
push
mov
lea
stos
lcall
test
outsb
popa
dec
in
xor
gs
ffree
lea
icebp
adc
add
movsb
loopne
addl
mov
test
sbb
popa
out
mov
xor
lea
jns
jno
mov
and
repz
and
mov
xchg
sub
loope
das
jp
cmpsl
lds
repnz
in
sub
mov
mov
adc
decl
out
mov
lea
addl
sbb
dec
sub
dec
in
jne
cmp
add
jbe
cs
mov
sub
inc
imul
pop
dec
cmp
sbb
sub
daa
xor
out
int3
pop
je
stos
xchg
pop
shrl
cmp
shl
lret
jbe
xchg
cmc
data16
enter
mov
inc
jge
outsl
push
insb
sub
jns
push
arpl
sub
outsl
mov
subl
stos
dec
lods
int3
xchg
mov
aad
cs
out
stos
frstor
gs
mov
or
dec
pop
mov
inc
push
loop
out
andl
outsb
push
jo
shlb
jl
push
add
cli
shrb
sbb
push
sbb
push
add
dec
xchg
clc
in
incl
sti
sbb
loope
mov
xor
cmp
jno
or
mov
xchg
shll
jb
fisubrs
cmc
lods
lods
dec
gs
shrb
xchg
sub
mov
popa
adc
mov
call
test
jbe
bound
test
movsl
pop
movsl
jg
xchg
mov
int3
in
pusha
mov
mov
mov
add
mov
mov
xor
les
ficoms
sbb
inc
mov
insl
aas
lret
cmp
xorb
mov
pmulhw
ljmp
test
fst
mov
adc
fmull
mov
clc
cmp
xchg
mov
mov
out
pop
push
dec
cmpl
sub
in
cmp
or
leave
pop
xchg
xor
jns
pop
xor
push
inc
xchg
xor
or
pop
xor
pop
mov
push
fstps
mov
aas
gs
call
mov
xor
and
aam
inc
loop
adc
xchg
loopne
xchg
mov
ret
fwait
pop
sub
add
dec
dec
pusha
lds
loop
je
fwait
pop
xor
dec
mov
xchg
dec
push
sub
xchg
sub
out
or
in
inc
loope
lods
in
mull
andb
and
aam
jmp
mov
mov
adc
sbb
out
mov
sbb
shrb
mov
lock
cmpsl
ss
mov
rorb
xchg
les
sub
dec
xor
sub
call
dec
imul
cli
cmpsl
lea
jg
and
ficoms
test
xchg
dec
fldl
lcall
leave
lcall
pushf
jae
inc
sarb
jecxz
push
inc
int
cmc
sub
mov
adc
xor
pop
lods
bound
xor
outsl
stc
and
lret
mov
mov
xor
cld
pop
adcb
out
dec
cs
dec
inc
dec
stos
lahf
pop
sub
loope
fstpl
push
sbb
jne
cld
outsl
fistl
loopne
add
mov
cmpsb
jo
xchg
sar
dec
mov
aas
iret
inc
int3
lcall
movsb
arpl
loopne
stos
aas
sbb
icebp
cmp
loop
or
mov
mov
shll
push
jp
dec
mov
cli
ljmp
inc
cmpsl
std
pop
mov
test
movsb
xor
dec
xor
mov
pop
push
push
mov
inc
inc
jns
orb
mov
inc
sahf
jle
loopne
inc
imul
push
mov
shll
push
xor
je
and
mov
stos
mov
shr
pop
ja
pop
in
sub
insl
pop
scas
rcl
xchg
push
lds
movsb
pop
xchg
enter
shlb
mov
push
movsb
push
pop
cmp
mov
out
mov
and
mov
fs
pop
call
sbb
scas
popf
jnp
pop
out
add
jmp
sbb
pop
push
loop
imul
or
cmc
adc
and
inc
sahf
adc
pop
std
cmp
jb
and
jp
lods
fisubl
jnp
daa
pop
lods
cmp
push
es
add
push
adc
bound
mov
inc
dec
enter
xorl
xchg
aas
sahf
sbb
pop
xor
push
fdivrl
rolb
inc
sub
push
loope
sub
jae
fcmovu
imul
add
mov
inc
icebp
scas
xor
clc
xchg
lret
cmp
mov
imul
leave
fbld
xchg
jb
or
jnp
mov
mov
divl
push
sub
push
dec
mov
adc
push
fisttpll
lret
sub
fbld
lahf
dec
dec
leave
gs
sub
inc
std
xchg
fadd
stos
add
stc
dec
rcrb
push
jle
cmp
adc
in
xchg
push
mov
or
out
iret
in
aas
out
adc
dec
jbe
lea
and
loopne
push
fstl
scas
fsubrl
aad
mov
sub
cs
lods
pop
scas
pushf
and
cmc
mov
adc
mov
popa
paddusb
hlt
ljmp
test
jno
rorl
ja
sbb
out
icebp
insb
xchg
test
pop
push
out
xor
or
repz
lock
pushf
pop
xchg
mov
test
movsl
jns
mov
movsl
ret
arpl
inc
adc
xchg
push
in
xor
add
xor
repz
insb
adc
test
dec
mov
cld
aad
sbb
andb
jno
xchg
enter
in
aam
mov
mov
sarl
or
test
shrb
adc
sub
insl
test
mov
cwtl
pop
mov
pusha
add
pop
nop
mov
sahf
idivl
clc
sbb
mov
out
loopne
mov
insl
dec
call
nop
push
arpl
jecxz
adc
lret
jp
es
call
mov
cld
fdiv
bnd
nop
mov
mov
gs
imul
cmpsb
aaa
pop
xchg
cmpsb
mov
fnsave
test
dec
or
imul
cwtl
sbb
push
iret
add
outsl
daa
sbb
roll
xor
mov
cmpsb
cltd
shl
loope
loopne
jno
add
fwait
adc
out
js
test
in
ror
cmp
add
rolb
xchg
push
jge
loope
into
xchg
mov
cmp
cld
lret
fidivl
push
jg
sub
fnstcw
inc
xor
pop
pop
rclb
push
nop
push
mov
pop
mov
or
mov
test
cmp
xor
jo
xor
out
jno
std
jno
sarb
sub
les
pop
jmp
xchg
lahf
scas
jnp
cmp
push
loope
xor
rorb
inc
xor
hlt
mov
loopne
mov
mov
das
pop
push
adc
and
lock
mov
adc
add
popa
jge,pn
aaa
mov
arpl
test
or
addr16
mov
mov
dec
cltd
sub
inc
jae
mov
push
mov
test
inc
rcrb
push
das
dec
push
xchg
inc
rcrb
sub
inc
mov
loope
ja
hlt
pushf
push
mov
movsl
sub
adc
xor
pop
imul
imul
pop
mov
fidivl
out
jae
pop
ss
outsb
pushf
rorl
add
jp
pop
loop
and
jle
mov
push
push
mov
jns
lret
enter
pop
out
jae
stos
cltd
pop
fwait
lock
add
pop
jp
mov
cs
test
ss
xchg
push
cmp
or
hlt
daa
cmp
cmp
sub
mov
push
dec
insb
push
mov
add
into
xchg
bound
addb
pop
mov
jno
loope
imul
cmp
loop
sub
stos
cltd
stos
dec
jo
fidivs
mov
insb
cltd
scas
addr16
sti
pop
lcall
add
fbstp
pushaw
rolb
pop
fcompl
fs
adc
or
lods
jnp
sbb
push
jl
xchg
push
lods
loop
repnz
sbb
loope
xchg
mov
sub
mov
je
cmp
rcrl
inc
mov
inc
sti
aad
mov
sbb
shl
cmpsl
in
xchg
rclb
sbb
fst
xor
push
pop
jg
sti
ljmp
mov
push
mov
sub
pusha
imul
mov
les
cmpsb
cmp
push
mov
sub
dec
shll
jecxz
loope
pusha
sbb
faddl
xchg
mov
push
popf
stc
sahf
aas
shlb
shlb
and
inc
outsb
jnp
sbb
iret
adc
jbe
aaa
repz
xchg
aas
nop
jbe
flds
fucomi
mov
sub
lret
jo
test
mov
and
adc
adc
pushf
nop
pop
xchg
mov
mov
movl
sub
lret
in
xchg
insl
mov
push
mov
lods
lods
andnps
insb
sub
inc
cmpsl
xchg
andl
mov
sbb
mov
mov
out
je
jns
lcall
inc
jne
aaa
xor
and
cltd
jno
sbb
or
jecxz
fmuls
cli
mov
std
outsb
nop
jo
mov
jb
adc
mov
sti
es
jmp
sbb
scas
aad
or
mov
mov
jge
loope
das
imul
aad
fucomip
test
sub
bound
scas
dec
cmp
sub
pop
cmp
xor
cmp
xchg
or
ss
sub
dec
and
dec
shr
inc
test
pop
pop
jecxz
push
outsb
dec
jnp
mov
push
jne
sub
cmpsl
cmp
sqrtps
or
ja
mov
into
adc
push
cmpsl
cs
lods
out
inc
test
push
or
insl
adc
in
in
std
imul
adc
jns
popa
fisttpll
sub
adc
imul
mov
adc
rorb
add
adcl
mov
push
test
rcrl
dec
sub
lcall
sbb
xchg
push
sarl
xchg
pushl
push
xchg
push
vpsraw
inc
sub
mov
lock
mov
pop
and
lds
pop
xor
pop
jle
test
push
enter
add
xchg
cmp
aas
dec
cmp
lahf
mov
inc
fwait
mov
test
in
mov
hlt
fimuls
pop
cld
sub
in
pop
mov
xchg
mov
imull
ds
cmp
jno
ja
les
adc
or
cmp
pop
jecxz
lods
lahf
ljmp
adcl
ljmp
or
fldt
repnz
push
mov
mov
sub
and
pop
aaa
mov
cmpb
xor
and
jne
xlat
ljmp
add
pushf
mov
dec
fildll
xor
inc
lret
inc
iret
and
aas
dec
mov
push
aam
mov
jg
repnz
dec
ror
push
movsb
jbe
cmpsl
and
arpl
adc
shrb
xchg
es
clc
pop
sub
add
les
cmp
ljmp
cmp
push
mov
lock
adc
cld
or
into
adc
and
mov
cltd
or
push
out
lods
ret
dec
outsl
add
ja
popf
cmpsb
dec
mull
or
std
or
push
repz
or
push
jecxz
push
lock
adc
mov
lods
adc
sub
inc
and
inc
rcl
les
sti
push
mov
jno
divb
aam
cmc
cwtl
xor
ds
inc
mov
mov
jo
imul
fcmovnbe
aas
hlt
fdivs
mov
mov
leave
outsb
gs
cmc
je
ret
popa
pop
jmp
loop
out
adc
int
inc
adc
mov
lea
mov
out
jo
adc
fadds
fdivl
out
addl
pushf
push
sub
fs
mov
mov
test
add
mov
mov
add
xchg
cwtl
mov
xchg
lods
test
push
mov
dec
scas
shlb
fiadds
es
jbe
ja
xchg
dec
clc
mov
ja
jbe
and
pop
dec
cmp
cwtl
sbb
cld
xor
pop
mov
leave
fdivs
mov
stos
popa
xchg
out
std
rcll
cvtpi2ps
es
adc
jg
jg
push
pop
lods
test
or
inc
icebp
dec
into
mov
or
ret
mov
or
mulb
cmp
subl
push
and
mov
loopne
cmp
add
jecxz
push
and
outsb
jnp
cmc
jp
in
lods
in
lds
push
lahf
jp
testl
fsubr
cmp
loop
aam
fistps
push
mov
push
lock
xchg
jae
mov
les
ds
mov
push
sbb
push
and
out
dec
pop
lds
pop
loop
inc
es
ja
lcall
or
dec
aam
inc
dec
xlat
daa
push
and
clc
stos
sbb
jge
push
lret
xchg
push
das
lret
cmc
pop
mov
push
sub
and
mov
popa
lock
inc
and
jecxz
in
push
mov
lret
mov
pushf
jle
out
stc
repz
xchg
mov
addr16
cmp
push
andb
loopne
push
jmp
cli
popf
mov
inc
ret
add
pop
mov
push
stos
ret
xlat
mov
jnp
dec
xchg
cmpsb
push
xchg
leave
ja
das
push
or
dec
mov
pop
jp
loopne
lea
sub
add
jns
mov
mov
push
push
lock
loope,pt
stos
std
push
lds
movsl
fiadds
aaa
xor
inc
test
sbb
adc
icebp
lods
dec
jae
push
dec
push
mov
fs
push
aaa
outsb
and
inc
fldt
repz
daa
jmp
aas
xchg
adc
pop
incb
clc
test
pushf
fistpl
mov
insl
mov
sbb
repz
sbb
hlt
lcall
add
imul
sbb
rorb
leave
inc
lahf
int3
inc
xorb
inc
xor
inc
js
or
adc
mov
pop
pop
push
into
shl
pop
lcall
sbb
arpl
mov
jl
xlat
mov
add
mov
cmc
lods
push
mov
inc
repnz
lcall
cmp
xchg
push
lea
pop
lods
lods
push
push
rcrb
push
push
aam
fld
mov
movsb
xchg
sbb
out
cmp
mov
push
cmp
ss
testb
xor
testl
cmc
scas
sarb
data16
mov
js
dec
jns
insb
mov
push
cltd
bound
fidivs
xlat
jecxz
gs
pop
add
lods
fimull
jns
ret
or
cmp
int3
add
dec
mov
insb
inc
mov
dec
sar
sub
and
mov
jae
insl
push
test
aas
push
popa
ds
sarl
negb
mov
add
mov
and
jmp
pop
jl
or
sbb
jae
jl
fstps
mov
or
aas
aaa
sbb
stc
sbb
addr16
pop
lea
stos
call
icebp
inc
mov
inc
xchg
daa
pop
mov
sub
in
or
dec
pop
mov
mov
ds
mov
addr16
in
jmp
jb
push
jne
push
or
jg
push
lret
repnz
inc
cld
xchg
lahf
sarb
push
pop
xchg
add
and
rorl
mov
xchg
andl
repz
out
shll
int3
adcl
xor
cmp
mov
in
fisttps
js
sbb
xor
xor
rclb
mov
xchg
rol
xchg
ret
daa
mov
dec
cmp
mov
jne
mov
push
rorb
scas
pop
fistps
mov
lods
inc
imul
and
mov
sbb
xor
mov
inc
cmc
repz
test
loope
repz
out
insl
mov
jge
dec
xchg
scas
pushf
mov
leave
mov
add
inc
les
sbb
mov
aaa
or
repnz
jecxz
sbb
ljmp
iret
je
mov
ljmp
rdmsr
hlt
loop
out
fiaddl
movsl
repnz
inc
int
dec
sbb
or
in
imul
pop
sbb
or
mov
xor
cmp
sub
jno
mov
xor
jg
inc
fs
test
or
stos
jnp
psubw
jmp
out
pop
push
push
pop
gs
shlb
and
addr16
push
pop
mov
sub
sbb
add
cli
lea
fs
cld
or
out
jecxz
dec
mov
fwait
mov
sbb
xchg
imul
inc
lods
xchg
mov
fs
jae
daa
enter
test
mov
xchg
xlat
dec
cltd
in
xchg
add
arpl
out
sbb
mov
cmpsl
jl
hlt
push
or
mov
das
xor
mov
xor
sbb
pusha
nop
fisubrl
add
adc
lcall
lds
add
pusha
cmp
sbb
cld
cmp
into
mov
int
shl
xor
xchg
mov
jg
xchg
and
fwait
fs
sub
in
fldl2t
pop
mov
fisttps
int
dec
in
mov
jo
or
xor
sub
or
adc
xor
mov
scas
cmp
pop
jb
add
dec
add
sub
cwtl
sub
mov
loope
jge
in
lock
cltd
rorb
and
dec
inc
mov
jl
jecxz
and
imul
inc
in
or
test
and
dec
ret
pop
push
mov
jbe
out
insl
imul
jecxz
mov
mov
arpl
push
push
mov
or
jno
call
pop
mov
insl
fdivs
into
cmc
shl
xchg
inc
sbb
push
mov
or
pop
and
cmc
mov
inc
push
cmp
aaa
pop
out
sbb
xlat
movsl
cmp
insb
mov
pop
pop
sub
enter
mov
mov
filds
mov
mov
mov
sub
mov
sar
xor
add
mov
mov
nop
outsb
mov
ljmp
fwait
lods
rcrb
clc
xchg
out
dec
aad
sbb
xlat
sbb
pop
push
xor
jecxz
push
push
mov
inc
pop
lods
fadds
dec
stos
pusha
jno
mulb
push
ret
std
int3
int
out
jo
jbe
mov
inc
scas
cmp
pop
dec
test
icebp
cmpsb
push
add
fsubp
ret
lret
ret
inc
sbb
aad
out
scas
clc
mov
sub
in
sbb
das
in
fcoml
outsb
pop
bound
inc
or
pop
je
jecxz
adc
aas
out
imul
jo
xor
mov
test
cs
add
cli
scas
add
sub
and
adc
xchg
sbb
ds
lret
jmp
out
lods
jg
jbe
sti
inc
dec
xchg
scas
adc
inc
in
adc
imul
add
into
sbb
gs
loop,pt
int
fcoms
adc
lods
leave
xor
jge
mov
stos
add
jge
sub
pop
push
lcall
jae
jae
repnz
out
xchg
popa
scas
stos
enter
adc
lret
inc
add
and
sub
jbe
xor
inc
pop
cmp
push
lret
inc
push
sbb
aam
sbb
sar
jg
xchg
xor
sbb
fwait
mov
jmp
rcl
das
inc
or
fistl
inc
dec
push
sub
outsb
jns
or
loopne
sub
pusha
inc
and
sarl
pop
mov
mov
imul
cmp
test
mov
push
lahf
test
sub
push
je
pop
jmp
jmp
cld
enter
lods
cli
pop
mov
ffreep
push
dec
mov
mov
pop
sbb
inc
or
pop
mov
push
adc
roll
xor
outsb
shll
mov
dec
and
insb
xchg
addr16
movsl
nop
jo
add
xchg
mov
scas
fdivrs
mov
pop
fldenv
lret
stc
stc
jae
pop
xor
or
enter
cmpsb
lcall
dec
sbbb
and
push
inc
adc
int3
adc
nop
rcl
cltd
mov
and
jno
sbb
bound
scas
jl
pop
in
pusha
ljmp
sbb
add
and
mov
mov
loope
in
cmp
cmp
jl
loope
jae
push
pop
push
aam
scas
lcall
pushf
lea
fnstsw
mov
dec
jbe
dec
in
int3
mov
cmpsb
xor
cmp
aaa
lret
fstl
push
inc
jnp
fs
mov
or
lret
and
inc
adc
push
or
arpl
testb
jno
lods
cmpl
sub
and
insb
repnz
leave
mov
in
aad
sub
fs
outsl
scas
inc
add
sub
movsb
mov
and
add
mov
movsb
sbb
je
fnstenv
out
cmc
cmp
scas
sahf
mov
popa
jne
pop
mov
inc
lret
jns
xchg
and
es
xor
test
scas
add
push
mov
outsl
fwait
cmpsl
dec
stos
cmp
add
adc
push
inc
mov
mov
sbb
xchg
mov
add
jnp
push
nop
orb
jne
push
je
xor
add
mov
loop
inc
sub
sti
sub
repnz
cltd
ror
out
mov
or
mov
or
inc
xor
int
outsb
icebp
gs
sub
push
mov
sbb
jle
inc
and
sahf
push
pop
in
add
push
push
popa
xor
inc
pusha
ja
loope
xchg
clc
push
popa
push
xor
pop
loopne
outsl
std
adc
mov
push
push
shlb
add
scas
mov
sbb
mov
ficoms
repz
rcrb
clc
inc
adc
push
je
stos
icebp
push
mov
pop
add
or
jmp
pop
push
mov
pop
xorb
test
bound
data16
xor
cmp
push
inc
mov
mov
lds
adc
sbb
inc
data16
xor
addr16
lods
cmpsl
stos
sbbb
pop
std
jp
add
xor
test
sub
or
shll
mov
add
push
cmc
jnp
es
fs
jp
shll
xchg
outsl
loope
lahf
jb
dec
pop
ss
adc
sub
mov
xchg
ljmp
popl
ds
insl
mov
cmpl
insl
and
add
push
std
dec
cmp
enter
pop
jp
mov
or
pop
movsl
mov
loop
pop
testl
leave
popa
icebp
push
ds
movb
adc
idiv
cli
shl
fdivrs
sub
repz
fmul
shlb
sbb
in
cmpsl
iret
insb
aaa
add
movsb
das
outsb
ds
jno
std
popa
jle
lgs
insl
data16
lods
cmp
loopne
rorb
dec
aaa
fiaddl
ror
pop
adc
pop
cmp
js
cmc
ret
mov
push
scas
mov
repz
pop
mov
or
mov
daa
mov
xchg
mov
pop
xchg
fimuls
mov
mov
xchg
dec
xchg
je
cltd
int3
enter
fldt
out
push
mov
je
sarl
pop
out
nop
pop
xlat
stos
inc
test
or
int
xchg
fcmovbe
mov
repnz
in
inc
push
or
or
in
sbb
jns
push
xor
int
arpl
es
jg
ret
lods
and
ss
cmpsb
pusha
outsb
or
fldl
fadds
add
adc
fcmovnbe
mov
shlb
pop
jno
ja
hlt
cmpsb
gs
add
xchg
adc
cmp
fbstp
in
lods
xor
ffree
fdiv
add
jp
inc
stos
imul
pop
outsl
jmp
inc
xor
jb
cmp
inc
inc
in
mov
mov
scas
pop
outsb
jp
inc
sti
sub
cltd
loope
jb
cli
mov
inc
fsubs
add
in
push
arpl
pop
mov
pop
cmpsl
add
into
mov
sub
inc
or
outsl
xor
stc
cld
jle
fcomi
cmp
test
mov
mov
add
push
jecxz
xchg
popa
fistps
mov
loope
sbb
sub
mov
imul
mov
dec
leave
je
xor
jns
in
filds
sub
cli
or
inc
in
jnp
mov
test
dec
and
shll
movsl
pushf
cmp
fdivs
les
call
into
shrl
xor
scas
shl
adc
inc
dec
pop
ss
mov
pop
xor
add
sbb
gs
mov
imul
call
cmp
adc
xor
jnp
xchg
push
das
pop
lret
pop
xchg
jmp
insb
inc
mov
icebp
jae
dec
nop
fsubl
outsb
push
push
das
push
inc
mov
test
std
pusha
push
sub
xchg
dec
out
mov
jae
testl
jecxz
scas
repnz
mov
cmp
jecxz
insl
into
shrb
inc
and
sbb
out
cmp
aad
add
jbe
mov
push
shr
out
fcoms
ficomps
mov
add
dec
enter
jne
push
icebp
fldcw
leave
inc
call
jnp
and
pop
push
adc
popa
into
hlt
add
inc
inc
push
dec
and
les
inc
mov
cmpsb
sub
push
les
jo
lret
mov
sar
fsubs
pop
cmp
mov
pusha
roll
out
xchg
gs
cmp
pop
fcom
test
jmp
mov
mull
incb
orl
fucom
cmp
aaa
adc
push
xor
jmp
cmp
mov
popa
sub
dec
inc
add
shll
jl
fcmovnb
stos
sbb
fwait
mov
mov
pop
cmp
sti
andb
xchg
loopne
fstpl
mov
popa
dec
pop
pop
sbb
mov
sub
inc
into
adc
jecxz
and
cli
mov
ljmp
xlat
add
adc
and
xor
cmp
stos
dec
lcall
in
das
adc
push
jp
xor
divb
sbb
subl
outsb
shrl
ret
inc
dec
sub
push
push
ljmp
sbb
dec
hlt
je
mov
loope
inc
sbb
cmpsl
dec
pop
mov
shll
jbe
mov
sbb
mov
fsubl
sub
xor
mov
pop
ljmp
adc
repz
pop
popl
jecxz
sub
movsb
and
js
test
out
lods
pop
out
sub
adc
addb
stos
xchg
loop
cmp
push
xor
pop
adc
push
stos
into
sub
pop
push
xor
test
pushf
sub
mov
push
or
es
mov
xchg
ror
mov
dec
dec
mov
push
xchg
repnz
stos
mov
pop
and
pop
mov
sub
jl
dec
movsb
dec
xchg
mov
insb
cmp
sbb
xchg
test
push
lods
les
mov
and
xor
les
out
mov
icebp
push
imul
repnz
call
test
xlat
test
mov
push
or
ja
pop
sti
mov
insb
push
or
lcall
movsb
mov
jmp
jg
sub
outsb
dec
mov
std
pop
inc
leave
jle
jo
lret
test
dec
test
sub
xorl
icebp
lcall
pusha
push
mov
out
fisttps
movsb
aas
js
fnstenv
add
fcompl
xorb
aas
test
stc
lds
mov
call
pop
cmp
imul
aaa
pushf
loopne
insb
mov
and
mov
dec
cltd
inc
inc
popf
jl
into
mov
mov
out
dec
pop
or
xor
mov
out
roll
xor
jle
sbb
pushf
ljmp
or
xchg
and
mov
bound
fwait
and
xor
sub
sub
inc
aas
leave
or
adc
push
xor
or
xchg
je
jbe
mov
pop
xor
negl
out
mov
xor
dec
or
loope
rorb
lds
jnp
divl
jmp
cli
add
and
test
je
pop
mov
jle
subb
jb
xchg
sbb
fs
pop
mov
xor
lret
push
out
sbb
jns
mov
cmpsl
jecxz
ret
mov
adc
sub
and
test
stos
jbe
sub
mov
hlt
xlat
addr16
sbb
lock
dec
cs
andb
addr16
and
mov
ljmp
or
push
test
ffreep
aaa
xlat
test
arpl
cmp
cmp
aaa
dec
lahf
popa
pop
fisubrl
sub
sahf
cmp
movsb
data16
imul
mov
insb
movsl
or
loop
pop
xchg
sbb
in
fisubl
mov
iret
inc
xor
imul
pop
mov
cmp
mov
sti
add
jecxz
push
inc
inc
cwtl
sti
aad
scas
adc
cli
ret
ficomps
mov
lock
fwait
push
js
or
sahf
mov
jne
adc
mov
xchg
into
out
mov
mov
enter
cmp
jg
aam
push
dec
aad
repnz
and
push
pushf
jl
stos
xchg
inc
jl
popf
add
filds
sbb
jmp
int
adc
or
push
fdivr
dec
addr16
pop
push
lea
imul
sub
hlt
or
jg
iret
imul
repz
xor
lret
mov
les
adc
fdivr
lods
cmp
pusha
pop
xchg
imul
or
addr16
out
fldl
pop
rcrb
pop
pop
out
shrb
sub
repnz
shlb
inc
sub
hlt
popf
mov
aaa
mov
cmpsl
xlat
inc
add
cmc
mov
push
push
int
cli
xor
shll
sbb
fidivs
pop
inc
inc
popa
and
jl
pop
imul
ja
jp
xchg
mov
push
lods
scas
in
fcmovnu
sub
xor
imul
jno
ret
testb
cs
popa
or
lock
cwtl
push
push
into
push
test
add
scas
aas
mov
cld
and
mov
in
loopne
stc
in
std
xchg
inc
push
mov
cltd
cmpsb
mov
inc
dec
pop
rorl
and
callw
sub
dec
sbb
or
movsl
notb
pop
xor
pop
mov
and
push
xchg
iret
ja
or
out
clc
fcoms
sbb
sub
pop
movsb
mov
fstp
or
fistpl
sub
aaa
nop
insl
mov
pop
jp
cwtl
dec
push
and
and
adc
fs
icebp
inc
lcall
jnp
xor
xor
or
push
aaa
cmp
jg
xchg
cli
push
fcomip
in
ljmp
push
push
jecxz
imul
testb
sbb
test
jge
repz
in
ja
mov
mov
push
push
fiaddl
or
push
idivb
ret
std
fwait
mov
fwait
sbb
jbe
ja
inc
pop
jns
adc
es
inc
mulw
jle
sub
cmpb
mov
sub
mov
int
pop
push
dec
shlb
ret
or
rclb
addr16
pop
xor
lgs
add
popa
sahf
imul
daa
shll
js
pop
mov
cmpl
loopne
aas
and
ret
adc
xchg
inc
mov
or
loop
mov
xor
jnp
push
jecxz
mov
xchg
inc
mov
ljmp
jle
mov
dec
sub
scas
imul
dec
cld
adc
cmp
mov
sti
dec
out
aam
data16
and
xchg
sbb
loopne
xlat
jae
int
test
add
test
pushf
sarb
outsb
sub
fistpll
mov
bound
inc
ret
movsl
sbb
incb
add
outsb
xor
mov
ss
outsl
not
scas
loop
lret
inc
sbb
iret
rcl
and
lock
or
lods
loop
shll
push
mov
push
stos
adc
or
imul
and
fwait
pushf
push
sti
out
pop
or
movsb
or
sbb
cli
hlt
out
sahf
jb
mov
cmpsb
orb
jge
idivl
add
xchg
repnz
cmpsb
rcll
xchg
out
add
xchg
fwait
pop
jno
out
mov
dec
inc
or
mov
push
sbb
xchg
or
and
xchg
add
add
loop
sub
mov
push
adc
hlt
push
es
outsb
test
xchg
dec
mov
das
push
or
int
or
jnp
scas
sarl
or
cs
add
mov
adc
nop
scas
int3
xlat
dec
sbb
aas
sbb
in
in
fldenv
adc
mov
sub
out
shl
mov
dec
mov
mov
lret
inc
iret
cmp
int3
dec
repnz
or
xchg
cmp
xchg
cmp
jb
mov
test
stos
sbb
pop
gs
push
cli
sub
pop
cwtl
mov
js
lret
jge
popa
test
jle
in
movsb
adc
hlt
sbb
and
testb
add
xchg
aaa
push
daa
aad
push
sarb
xor
add
fsubrl
mov
xlat
sbb
cltd
scas
lahf
ljmp
xadd
adc
rcl
sbb
dec
or
test
pusha
jo
inc
arpl
inc
lret
push
js
gs
std
sarl
inc
jne
lret
leave
ds
jecxz
and
fwait
mov
mov
xchg
mov
xchg
sbb
and
test
stos
inc
push
pop
push
inc
push
cltd
jne
push
xor
in
xchg
add
push
dec
cmp
lods
push
sbb
lods
out
outsb
aam
das
xor
sbb
lahf
adcb
mov
push
sub
clc
in
loopne
mov
pop
filds
cmp
je
sbbl
repz
adc
and
add
inc
shr
adc
es
dec
adc
jge
dec
mov
std
mov
lcall
decl
ret
cmp
cmovbe
test
sub
je
adc
in
fwait
ja
int3
cmpsl
adc
cmp
mov
push
mov
jmp
dec
or
jmp
jne
rcrl
sub
jno
jle
cmp
std
shl
fwait
push
adc
xchg
pop
lcall
push
mov
sub
pop
and
hlt
int
cmp
mov
sarb
pop
push
and
rcrb
mov
cmc
lods
push
fs
inc
dec
sbb
push
inc
mov
cmpsb
lret
push
mov
inc
jmp
ret
jnp
push
lods
icebp
stos
lods
mov
adc
and
xchg
testl
adc
and
adc
sbb
jl
push
inc
lock
lods
lds
in
fcmovne
dec
out
inc
sbbl
push
int3
add
mov
test
movsl
outsl
out
fs
mov
inc
enter
jo
adc
xor
push
lods
mov
jb
mov
test
fwait
ja
push
das
sub
subl
sub
test
fwait
and
sbb
dec
ljmp
aam
fsubr
and
xor
jae
mov
call
mov
adc
fcomip
imul
inc
loope
inc
js
xchg
push
sti
scas
jp
lret
or
addb
mov
add
out
mov
push
movsl
xor
jne
mov
inc
xchg
xchg
sub
adc
mov
pop
add
decl
xchg
and
inc
andb
jno
xchg
shll
and
dec
scas
pop
popa
aaa
xlat
das
pushf
and
pushf
nop
pusha
pushf
and
and
push
sub
enter
mov
push
mov
rcrb
sbb
mov
imul
jge
xor
dec
cmp
adc
xchg
and
cli
sub
loop
inc
dec
xchg
repnz
sbb
fs
sub
cld
jns
test
gs
xchg
lods
scas
cld
push
pop
mov
das
cmp
andl
call
out
add
xchg
ror
jne
loopne
or
test
cwtl
test
adc
les
push
popf
movsb
mov
std
loop
xchg
pusha
cltd
jle
sbbb
push
sbb
lahf
sub
shrb
xor
fwait
cmpsb
or
jae
call
or
mov
out
jae
popf
mov
pushf
mov
xor
imul
loopne
push
lods
xor
jp
pop
mov
jo
mov
jae
cwtl
inc
cmp
push
xor
mov
mov
lods
mov
mov
dec
rolb
arpl
in
dec
gs
outsb
inc
lret
pushl
jle
dec
out
pop
sub
xor
mov
push
push
fcomps
xor
lret
jbe
or
sub
cmp
push
adc
cmpl
xor
inc
ss
sbb
sbb
cld
sahf
push
add
xchg
dec
fdivrs
xchg
xchg
xchg
pop
popf
hlt
xlat
sub
sti
sub
data16
lret
push
and
cmpsl
in
out
out
push
aam
mov
ljmp
dec
and
aaa
rol
testb
jns
in
push
addl
mov
mov
xchg
sbb
loope
in
and
aas
push
sbb
xchg
repz
gs
movsb
mov
push
mov
pop
popa
in
pop
pop
cmp
sbb
je
push
xchg
add
loope
pop
adc
xor
jge
ljmp
add
sti
jnp
into
inc
dec
mov
je
push
xchg
xchg
xchg
sub
xor
mov
outsl
and
scas
jge
jle
push
orl
cmpsl
loop
je
inc
es
shlb
icebp
sar
dec
out
outsb
and
orb
inc
dec
fmuls
jg
cmp
sbb
push
add
mov
pop
imul
mov
int
outsb
shrl
pusha
jae
jge
and
lods
ja
xor
loope
xor
xchg
lret
xor
adc
mov
stc
adc
mov
dec
adc
mov
xor
jo
int3
mov
or
lods
in
icebp
inc
repnz
arpl
sub
dec
pop
int3
push
dec
mov
sahf
push
xchg
jns
dec
sbb
enter
cmp
imul
shrb
fdiv
lock
movsl
push
xor
pop
dec
jp
or
cmp
xlat
lahf
inc
xchg
pop
xchg
mov
adc
call
loopne
repz
lock
pop
mov
outsl
mov
and
pop
mov
ret
mov
mov
sbb
sub
jecxz
lods
int
add
add
add
ss
out
div
sahf
cld
test
add
std
pop
lret
mov
scas
xchg
mov
push
fs
das
and
lods
pop
mov
testl
cmp
std
fs
jnp
xor
and
sub
jnp
js
pop
push
xor
mov
cs
outsl
out
xlat
xchg
xor
adc
pop
push
std
fsts
xchg
adc
in
inc
pop
je
or
mov
hlt
stc
jg
pop
mov
mov
rorb
mov
mov
pop
push
loopew
push
sub
adc
pop
into
adc
add
outsb
test
ret
dec
dec
jnp
mov
icebp
ret
inc
out
sub
sti
cmp
outsl
lds
popa
mov
in
jmp
hlt
daa
dec
xchg
push
or
pop
inc
call
and
inc
push
xchg
jl
call
xorb
iret
jae
jae
xchg
inc
pop
orb
inc
je
mov
and
dec
enter
stos
and
shrl
imul
cmc
add
mov
add
pop
pushf
mov
push
xchg
jnp
bound
test
adc
addr16
xorb
lods
jbe
jnp
jae
inc
int
push
ror
push
mov
ljmp
lret
sub
dec
or
add
inc
dec
dec
or
stos
mov
fwait
push
dec
fsts
jnp
jmp
jae
mov
rolb
push
fisubrs
stos
mov
movsb
notl
andps
js
add
push
in
jns
cmc
repz
inc
push
out
das
repz
jne
and
xor
popa
add
and
xchg
dec
inc
inc
out
and
test
jnp
sbb
mov
mov
add
hlt
lea
mov
mov
add
dec
sub
ja
dec
adc
or
insl
mov
mov
mov
cmp
aad
sub
jp
dec
les
mov
mov
cmp
pop
adc
mov
push
sbb
iret
mul
out
mov
je
shrl
test
stc
push
pop
pop
fs
push
dec
or
bound
das
enter
sahf
pop
mov
std
out
pop
movsl
dec
inc
sbbb
push
xchg
xor
out
xor
jecxz
and
jmp
loopne
lcall
sub
jns
test
pop
int3
adc
and
mov
dec
inc
mov
push
fisttpl
das
jne
in
jo
lea
shll
fadds
pop
inc
insb
xor
and
xor
push
mov
or
movsl
repz
push
scas
in
cmpsb
repz
and
mov
add
xchg
mov
mov
and
mov
sub
push
xchg
mov
popf
sti
out
sub
shrl
inc
sbb
cwtl
mov
lods
lahf
pop
sahf
xor
xor
push
fmull
and
sbb
fldl2t
pop
fisttpll
in
push
or
jp
cmp
sub
cmp
testb
add
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
lods
cmpsl
lret
add
add
add
add
add
sub
add
push
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
jo
add
add
lods
cmpsl
lret
add
add
add
add
add
addb
addb
add
lods
cmpsl
lret
add
add
add
add
add
cwtl
add
add
add
add
mov
add
lods
cmpsl
lret
add
add
add
add
add
rolb
addb
add
lods
cmpsl
lret
add
add
add
or
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
cli
cld
stc
add
cli
stc
add
incb
cld
clc
cli
add
stc
cld
add
sti
add
stc
clc
add
or
add
adc
bndldx
sbb
and
add
add
cli
stc
add
cld
incb
stc
cli
add
cld
std
add
sti
incb
cld
stc
std
add
std
stc
add
push
inc
sbb
and
pop
and
pop
lahf
sbb
loope
and
push
lcall
and
adc
aaa
std
adc
sub
stc
cli
add
cld
cld
add
xor
sub
cmp
mov
xor
ljmp
ss
and
jmp
sub
xor
and
adc
call
cmp
add
add
dec
pop
xchg
ja
push
mov
dec
pop
mov
inc
dec
ds
xchg
inc
dec
jb
cmp
cmp
push
sub
push
lcall
push
call
pop
cmp
sbb
mov
add
ud0
incb
clc
clc
clc
add
jae
imul
incl
xchg
incl
mov
cmp
ds
ja
xor
ljmp
xor
jmp
and
and
std
cli
add
cli
cld
add
std
incl
pop
insl
lahf
jae
imul
dec
pop
call
test
dec
bound
decl
incl
jnp
cmp
aaa
pop
lcall
and
jmp
es
popl
add
adc
add
add
imul
imul
insb
jne
std
pop
data16
call
xchg
std
push
pop
mov
dec
pop
xchg
incl
xchg
ds
cmp
dec
xchg
xor
jo
sbb
push
pop
jmp
add
add
gs
jno
outsb
mov
jmp
mov
push
addr16
push
xchg
std
push
imul
call
cmp
inc
imul
xor
imul
std
xchg
outsl
inc
addr16
incb
outsb
jg
ja
xorb
outsb
andl
std
push
bound
decl
sahf
decl
sahf
pushl
cs
ljmp
inc
lcall
push
cmp
addl
imul
outsl
jns
lcall
lods
lcall
mov
jmp
mov
call
call
test
pop
push
mov
sub
ljmp
dec
lcall
sub
jl
xor
cmpl
jae
mov
std
jnp
sar
mov
pushl
mov
jp
mov
jo
test
jl
xchg
incl
popa
push
lcall
dec
pushl
mov
mov
lods
aam
movsb
mov
lds
movsl
rcll
fs
testl
aam
jmp
pop
fnsave
dec
jmp
lret
dec
mov
jnp
cld
incb
stc
incl
sti
sti
add
std
std
add
incb
sti
sti
add
sub
shll
outsb
fnstcw
ljmp
jmp
arpl
lret
ljmp
lahf
je
pop
sahf
push
xor
cli
clc
add
sti
sti
add
cld
add
cld
incb
sti
std
incl
stc
stc
add
mov
jp
mov
ret
jmp
into
addr16
xchg
pusha
call
adcb
cli
cli
add
stc
incl
cli
cli
add
std
add
stc
cld
add
cli
add
sti
incl
clc
incl
jp
dec
aas
pop
enter
lret
into
rorl
inc
cmpsb
insb
std
cltd
movsl
data16
jp
pusha
or
stc
add
std
cld
add
stc
clc
add
sti
incb
cli
add
clc
add
sti
add
stc
incl
clc
std
add
rclb
into
test
imul
sti
add
cld
clc
add
cli
clc
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
call
add
add
add
add
adc
add
add
add
add
add
fs
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
pop
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
add
je
jae
add
imul
add
outsb
add
add
jp
add
add
push
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
jb
jbe
push
add
insl
add
jns
insl
add
jp
jbe
jne
jp
imul
data16
insb
add
add
add
add
dec
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
arpl
add
insb
add
jne
push
bound
outsl
add
jb
jb
ja
arpl
jne
js
add
add
xor
push
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
jno
jne
add
jb
and
add
add
cmp
adc
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
insb
add
js
insb
add
jns
jne
and
add
xor
adc
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
js
popa
add
js
jno
add
jae
add
add
xor
adc
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
cmp
adc
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
sub
or
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
outsl
add
outsb
add
add
cmp
adc
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
arpl
outsl
add
outsb
add
add
js
add
add
js
add
js
add
js
add
js
add
jns
add
jns
add
jns
add
jns
add
add
add
add
add
addb
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
inc
dec
dec
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
ds
loop
mov
mov
xchg
filds
xor
lret
test
popa
jne
jmp
cmp
mov
sub
inc
pop
out
pop
push
cli
cmp
shll
sbb
pop
loopne
fimuls
ljmp
pushf
xchg
insb
add
iret
xor
stos
mov
movsb
stos
cmp
aad
scas
test
stos
xchg
call
movsl
push
jg
mov
jns
js
pusha
aad
push
push
sbb
jae
mov
jb,pn
push
popf
sbb
cmc
int3
xchg
mov
inc
mov
jecxz
fmull
mov
out
enter
lret
dec
or
mov
xchg
mov
cld
inc
sub
rcrl
das
hlt
bound
add
xchg
aaa
mov
push
cmpsb
xchg
fldenv
ret
cmp
lea
dec
cli
movsb
bound
test
adc
cs
mov
pop
gs
jnp
push
sahf
cld
push
pop
pop
loop
roll
loop
andl
push
xor
in
std
cmpsb
jb
cltd
lods
call
mov
pop
pop
stos
sti
testb
cmpsl
cmp
out
pop
fldenv
cmp
mov
and
movsb
imul
jmp
lcall
xor
dec
stos
cs
movsb
cmc
push
lods
pop
insl
aaa
mov
mov
or
push
lods
or
outsb
jge
mov
sbb
and
mov
cmp
or
repz
mov
mov
fsubp
icebp
dec
jns
xor
andl
fldenv
gs
ret
or
xor
mov
lret
scas
push
mov
cmp
es
jnp
jmp
adc
push
dec
add
rcr
.byte
cwtl
