push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
call
mov
push
call
add
mov
mov
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
movl
movl
mov
movzbl
cmp
je
mov
movzbl
cmp
je
mov
movzbl
cmp
je
xor
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
push
push
call
test
jne
mov
jmp
jmp
call
xor
mov
pop
ret
push
mov
cmpl
jne
mov
mov
mov
push
mov
push
mov
push
call
add
mov
push
call
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
mov
push
push
call
push
call
mov
movl
jmp
mov
add
mov
mov
cmp
jae
mov
add
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
xor
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
movl
mov
pusha
movl
movl
call
test
je
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
movl
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
movl
mov
mov
mov
push
call
add
mov
mov
add
mov
push
mov
push
mov
push
call
add
mov
add
mov
popa
push
mov
mov
sub
mov
mov
ret
xor
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
shr
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
add
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
movl
mov
add
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
add
mov
mov
cmp
jae
mov
push
mov
push
call
add
sar
cmp
jne
mov
push
mov
push
call
add
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
lea
push
call
movl
jmp
mov
add
mov
mov
cmp
jge
cmpl
jne
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
call
push
push
push
push
push
push
lea
push
call
mov
cmpl
je
cmpl
jne
jmp
mov
add
mov
add
mov
mov
jmp
mov
cmp
jne
mov
sub
push
mov
push
mov
push
call
add
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
add
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
mov
mov
push
lea
push
call
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
jmp
mov
pop
ret
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
movzwl
mov
mov
mov
pop
ret
int3
int3
push
mov
sub
mov
mov
mov
mov
movl
mov
cmp
jae
movl
mov
jmp
jmp
movl
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
mov
cmpl
je
mov
add
mov
mov
mov
mov
call
mov
mov
mov
push
mov
push
push
call
add
mov
jmp
mov
pop
ret
int3
add
add
add
push
call
cwtl
xor
mov
xor
add
cwtl
fildl
add
loopne
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
out
cmp
movsl
in
aas
in
popf
aas
mov
lret
add
mov
add
cs
xor
jns
dec
jmp
xor
in
mov
xor
ljmp
xchg
sbb
inc
jmp
pop
xor
call
mov
xchg
call
divb
je
adc
xor
out
dec
xor
out
jnp
jmp
out
fdivs
inc
out
in
and
out
xor
out
xor
out
xor
hlt
out
xor
out
xor
call
les
out
xor
out
xor
out
xor
out
xor
out
xor
inc
call
insb
xor
test
fdivl
mov
add
imul
sub
ss
jmp
add
jo
add
jo
add
jo
add
add
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
add
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
add
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
add
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
add
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
add
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
add
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
add
add
jo
add
jo
add
jo
add
jo
add
jo
add
add
add
inc
add
mov
arpl
mov
add
mov
popa
lods
mov
jb
test
add
mov
popa
lods
mov
jb
test
add
scas
mov
jne
lea
gs
jo
add
mov
gs
jl
inc
imul
jb
mov
add
aaa
mov
mov
outsl
inc
test
imul
jns
jo
add
aaa
mov
jne
adc
mov
push
jo
add
insb
fadds
test
inc
add
inc
add
fiadds
rcr
inc
add
mov
arpl
mov
mov
mov
fs
lods
jns
add
add
mov
xor
xchg
mov
insb
jo
add
inc
scas
jbe
inc
cmpsl
cs
scas
add
dec
mov
add
sbb
cmpsl
cs
add
add
movsb
add
push
mov
je
mov
outsl
arpl
add
mov
mov
outsl
arpl
add
popf
mov
popa
rorb
inc
cltd
scas
add
mov
je
xchg
cmpsl
add
mov
scas
insb
outsl
xchg
fildl
add
jb
dec
scas
xor
mov
add
aaa
mov
arpl
scas
dec
gs
stos
add
jo
incb
jo
pop
add
add
jo
add
jo
add
jo
add
jo
add
jo
add
add
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
jmp
add
jo
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
add
jmp
jmp
jae
add
jae
add
jae
add
jae
add
jae
add
insb
faddl
mov
jae
add
jae
add
insb
flds
loop
roll
jmp
movsl
fildl
jmp
iret
faddl
jmp
adc
add
jae
add
sbb
jmp
in
jae
add
jae
add
jae
add
jae
add
xor
add
out
jmp
jae
addl
fxch
add
leave
ficoml
add
lret
cltd
fiaddl
add
fiaddl
add
jno
add
flds
add
fiaddl
add
add
pop
fiaddl
add
add
dec
fiaddl
add
pop
lret
stc
ret
dec
fiaddl
add
add
sbb
add
sbb
add
or
add
or
add
sbb
add
sbb
add
or
add
or
add
add
add
jo
adc
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
outsl
sbb
add
les
add
adc
jo
mov
ljmp
add
jo
add
jo
add
jo
add
rol
pusha
popa
mov
andb
jo
jecxz
jo
or
jo
lret
add
add
jo
add
jo
add
jo
add
xor
bound
jo
lods
sub
jmp
daa
jo
jmp
add
jmp
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
add
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
add
add
jae
add
jae
add
jae
add
jae
add
sbb
add
or
add
or
add
add
add
leave
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
add
add
add
dec
fiadds
add
add
pop
fiadds
add
add
dec
fiadds
add
add
sbb
add
sbb
add
or
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
add
add
jo
mov
add
mov
add
mov
add
lret
add
lret
add
mov
add
mov
add
mov
add
ja
jae
inc
mov
jae
mov
mov
jae
sarl
fcmovnbe
mov
add
jne
jae
xchg
mov
jae
sbb
mov
jae
idivl
jae
lods
mov
jo
dec
ret
jae
gs
jae
xchg
jae
ret
sub
ret
jae
in
jae
movsl
ret
jmp
ret
add
xor
add
faddl
gs
add
add
faddl
lea
faddl
jnp
faddl
xchg
faddl
lahf
mov
add
mov
add
mov
add
mov
add
jae
add
sahf
fildl
jmp
xlat
fildl
mov
fildl
xchg
add
fildl
addr16
fildl
push
fildl
xor
fildl
and
fildl
mov
and
add
push
fildl
repz
fildl
add
add
test
add
inc
add
mov
add
inc
add
lods
inc
add
roll
add
inc
add
jns
add
mov
dec
add
jns
add
addr16
add
std
dec
add
stos
dec
add
cmpsl
dec
add
jecxz
add
inc
dec
add
lds
add
add
pop
dec
add
cmp
popa
dec
add
jne
add
push
dec
add
das
dec
add
xchg
dec
add
mov
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
mov
jo
ret
add
ret
add
ret
add
les
jo
ret
add
ret
add
ret
add
ret
add
jo
aam
jo
aam
jo
aam
jo
aam
jo
aam
jo
aam
jo
scas
add
scas
add
lods
add
lods
add
lods
add
xchg
stos
jae
jg
jae
popa
stos
jae
dec
stos
jae
push
stos
jae
pop
stos
jae
daa
stos
jae
imull
jae
out
stos
jae
xchg
stos
jae
jg
jae
cmpsl
stos
jae
lods
stos
add
xor
jae
mov
jae
shrl
jae
popf
test
jae
add
jae
out
test
jae
or
jae
pop
lods
jae
aas
lods
jae
add
fadds
pop
or
fadds
push
sbb
fadds
aaa
or
fadds
neg
xlat
add
add
xlat
add
int3
xlat
add
xlat
add
fcmovnbe
add
lret
xlat
add
fadds
outsl
sbb
add
or
add
sbb
add
adc
add
or
add
or
add
out
add
add
out
add
xlat
add
xlat
add
xlat
add
in
add
pop
dec
add
and
add
xor
add
add
push
dec
add
and
inc
add
dec
filds
add
add
adc
add
or
add
pop
filds
sbbb
add
add
add
fwait
sbb
add
sbb
add
fiadds
add
push
add
aaa
push
add
push
push
add
push
push
add
sub
sub
pop
push
add
sbb
jo
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
jnp
add
mov
add
add
jo
mov
add
mov
add
jo
rolb
sbb
add
rolb
cmp
add
rolb
adc
add
add
jae
arpl
jae
and
jae
aaa
shlb
shlb
mov
jae
iret
jae
sbb
jae
das
shlb
shlb
shlb
shlb
shlb
shlb
jae
pop
jae
popf
rolb
shlb
shlb
shlb
shll
shll
shlb
shll
shll
shll
shll
shll
ret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
faddl
dec
das
faddl
inc
aaa
faddl
pop
xor
add
xor
add
mov
faddl
xchg
xor
add
xor
add
xor
add
xor
add
sub
add
mov
add
mov
add
fildl
push
mov
add
mov
add
lods
fildl
add
push
add
add
add
inc
push
add
xor
adc
add
mov
rcll
add
inc
sbb
add
add
xor
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
sbb
add
std
dec
add
decl
add
add
cmp
add
sti
sbb
add
sbb
add
ret
add
ret
add
jo
ret
add
ret
add
lds
jo
add
jo
aam
jo
aam
jo
add
add
jo
roll
jo
roll
jo
roll
jo
rolb
jo
roll
jo
roll
jo
roll
jo
rolb
jo
roll
jo
roll
jo
roll
jo
roll
jo
roll
jo
roll
jo
mov
add
roll
add
roll
jo
roll
jo
aam
jo
int
jae
jae
jmp
add
faddl
jo
xlat
add
out
add
popa
mov
jae
clc
add
lcall
fcmovnu
add
or
jae
pop
mov
jo
stc
add
jmp
jo
testb
pop
aas
mov
fstpt
add
jo
ljmp
pop
out
add
in
add
or
jae
call
add
pop
add
push
flds
in
fildl
in
fildl
scas
rcr
rol
fadds
mov
rcr
popa
mov
fadds
andl
fadds
cmp
inc
fadds
and
inc
fadds
pop
and
add
and
add
jae
add
jmp
xlat
add
fcom
add
fcom
add
mov
xlat
add
xlat
add
fadds
add
xlat
add
leave
xlat
add
add
ds
jnp
dec
stc
shl
mov
lahf
cmp
sbb
testb
push
jae
sbb
sbb
ficompl
es
cs
cmpsl
cwtl
mov
sti
mov
sbb
repnz
lret
fisubs
cld
and
pop
insb
pop
cmp
pop
inc
repz
xor
jno
enter
xchg
stos
adc
mov
mov
xor
pop
je
adc
push
ds
jo
je
in
mov
add
add
push
sbb
das
xchg
or
mov
iret
sbb
call
out
ds
pop
mov
mov
pusha
mov
pop
jb
sub
fnstcw
ja
in
xchg
pop
pop
jns
inc
sarb
jbe
adc
inc
cmp
movsl
jl
sub
mov
and
jge
mov
dec
inc
or
mov
jge
add
cs
lea
jmp
xchg
jo
cs
aad
push
jo
jmp
ss
jmp
daa
gs
ret
jmp
popf
jo
scas
lods
call
daa
scas
jo
jmp
ss
jmp
mov
jmp
gs
jmp
popf
bound
outsb
jo
jmp
push
jo
jmp
call
push
aaa
jmp
push
jo
jmp
enter
clc
lret
dec
cmp
add
jae
add
cmp
sub
dec
push
fcmovnb
cs
push
and
sbb
inc
insl
aam
adc
fsts
gs
push
sbb
test
fcmovnb
scas
fildl
in
lock
mov
adc
push
push
add
jmp
jge
adc
fcmovnb
scas
stc
push
and
imul
sub
adc
pop
add
xor
dec
add
movsl
jge
mov
into
rcll
cmpsl
xor
rolb
and
add
adc
faddl
dec
jb
rcll
out
add
push
bound
inc
add
fldl
stos
mov
dec
sub
rclb
and
add
movb
xor
rclb
les
std
fucomip
gs
add
subb
scas
xchg
in
xor
subl
mov
jecxz
sbb
adc
add
mov
mov
jns
rolb
xorl
xorl
scas
push
cmp
popa
outsl
mov
mov
mov
sbb
movsb
mov
iret
xor
mov
das
mov
popa
xchg
add
pusha
sbb
push
lret
mov
adcl
js
aad
xor
popa
fistl
lcall
jmp
std
add
fndisi(8087
add
add
add
or
xor
in
jbe
leave
add
fucomi
add
add
jns
xor
icebp
add
fstpt
xor
icebp
add
ficompl
xor
loope
push
fldt
jo
jns
mov
leave
add
fucomi
add
pop
add
jb
add
jb
adc
cwtl
add
jae
add
jae
add
fildl
jmp
imul
aad
mov
fldt
add
imul
jmp
outsb
roll
jmp
imul
jmp
imul
imul
clc
outsb
fldl
jmp
imul
jmp
add
add
imul
jmp
outsb
ljmp
dec
shrb
add
mov
pop
rorb
add
mov
dec
rorb
sbb
lock
fldl
or
push
add
rclb
and
jecxz
sub
sub
or
je
or
xor
enter
or
add
iret
and
test
fxch
add
add
iret
test
leave
iret
inc
add
fmull
add
iret
sbb
cltd
cwtl
add
iret
jl
mov
cmp
pop
rcr
add
push
pop
jo
or
or
hlt
or
jo
or
hlt
or
jo
add
jo
or
hlt
or
jo
or
jo
or
jo
or
jo
or
jo
add
jo
or
hlt
or
jo
or
hlt
or
jo
or
jo
add
jo
or
hlt
or
jo
or
hlt
or
fucomi
or
add
fucomi
or
fucomi
or
fucompp
or
jmp
or
mov
add
fucomi
or
fldt
or
fcmovnu
add
fucomi
or
jmp
or
jmp
or
fucomi
or
jmp
or
fucomi
or
jmp
or
jmp
fnsave
jmp
jnp
add
add
add
je
add
imul
jnp
add
jp
add
imul
jmp
jnp
add
je
decl
fildl
jmp
jnp
add
jnp
add
jb
add
imul
jmp
jb
add
imul
jnp
add
je
add
imul
jmp
jnp
add
je
clc
add
add
imul
add
fnstsw
add
aam
add
rolb
pop
fstl
add
imul
pop
iret
mov
dec
aam
add
mov
sbb
dec
add
iret
repnz
fldl
or
push
add
aam
add
aam
add
add
aam
add
shll
add
fmull
gs
shll
add
roll
add
into
ljmp
repnz
repnz
jo
add
repnz
hlt
or
jo
add
jo
or
hlt
or
jo
or
jo
or
hlt
or
jo
add
jo
or
jo
or
jo
or
jo
add
jo
or
hlt
or
jo
or
jo
add
jo
or
hlt
or
jo
or
jo
or
xor
jmp
add
jmp
or
jmp
add
fucomi
or
fucomi
or
add
fucomi
or
fucomi
or
fucomi
or
jmp
or
add
jmp
or
sub
fcmovnu
add
jmp
or
add
jmp
or
fildl
jmp
jnp
add
jnp
add
push
clc
jo
add
jnp
add
jnp
add
add
add
jo
add
jnp
add
jnp
add
push
add
jo
add
jnp
add
jnp
add
push
add
imul
jmp
jnp
add
insb
std
decl
std
jmp
jnp
add
imul
jmp
jnp
add
insb
sbb
stc
rolb
jmp
fnop
and
leave
iret
mov
add
cltd
rolb
add
std
add
cltd
rcrb
cltd
rcrb
add
std
cmp
pop
sarb
pop
sarb
add
roll
pop
std
ltr
push
add
mov
dec
rorb
add
rorb
add
iret
icebp
add
std
add
sbb
push
add
rclb
and
jecxz
sbb
sub
add
iret
je
fxch
xor
leave
into
leave
add
decb
repnz
or
repnz
jo
or
repnz
jo
incb
jo
or
or
repnz
jo
or
or
add
fnstenv
std
push
jo
or
or
add
mov
jo
or
jo
or
jo
sti
add
or
add
adc
or
jo
or
fucomi
or
cld
jp
jmp
or
fsubr
or
jmp
or
fucomi
or
fucomi
or
fucomi
or
jmp
cld
mov
jmp
or
lcall
cld
fucomi
or
fucomi
or
fucompp
or
jmp
or
cld
je
jmp
or
sub
fildl
lods
add
jnp
add
imul
clc
int3
call
add
imul
jmp
jnp
add
jnp
add
imul
add
mov
add
jnp
add
imul
jmp
insb
jle
jmp
imul
sti
dec
add
jnp
add
imul
jmp
jnp
add
jnp
add
sbb
decl
fildl
jmp
or
ltr
pop
add
hlt
outsl
add
hlt
das
add
test
or
fxtract
pop
add
hlt
pop
add
mull
lcall
hlt
aas
add
in
add
hlt
pop
add
in
add
ja
dec
hlt
aaa
add
roll
dec
in
add
add
daa
add
mov
sbb
pop
add
hlt
xchg
or
inc
add
div
add
or
jo
sti
push
jo
sti
adc
adc
add
or
jo
sti
je
add
xor
add
lret
or
jo
sti
and
add
stos
jo
sti
add
add
test
sti
inc
jo
cld
ljmp
sti
pop
jo
sti
sbb
add
lcall
sti
jl
add
cmp
add
fidivl
or
jo
sti
insb
add
sti
sub
add
mov
jo
sti
mov
jmp
cli
or
stc
or
jmp
sti
fcmovnbe
sti
mov
fimull
xchg
fucomi
sti
fucomi
sti
mov
or
jmp
sti
xchg
fucomi
cli
fucomi
sti
jb
jmp
sti
xor
jmp
or
jmp
sti
add
jmp
or
fucomi
sti
lcall
or
jmp
sti
mov
jmp
jmp
sbb
jmp
or
clc
js
add
sti
mov
jmp
in
cmc
fidivrl
add
fldt
fldt
clc
js
add
mov
mov
inc
add
stos
faddl
jmp
fwait
pushf
add
mov
stc
js
add
jnp
add
jnp
add
push
add
js
add
pop
jbe
jmp
dec
push
add
js
add
cmp
sub
add
icebp
or
add
icebp
dec
add
clc
std
add
in
add
in
add
in
add
jecxz
adc
enter
shl
add
jecxz
add
jecxz
inc
leave
jecxz
add
jecxz
add
jecxz
and
jecxz
add
jecxz
or
jecxz
add
jecxz
add
jecxz
sbb
pop
add
add
push
jecxz
add
pusha
jo
pop
add
ljmp
jo
or
pusha
adc
or
add
shll
add
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
add
jmp
jo
jmp
jo
jmp
jo
jmp
jo
ljmp
fucomi
add
ljmp
frstpm(287
add
in
add
in
jo
in
add
in
jo
in
add
in
jo
jmp
repnz
fndisi(8087
add
push
imul
add
out
add
jmp
add
jmp
jmp
add
call
add
jmp
jo
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
add
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
pop
fldl
add
add
dec
fldl
add
add
pop
fldl
add
add
dec
fldl
add
add
sbb
add
sbb
add
push
fldl
add
fldl
add
xlat
or
add
or
aad
or
test
or
cmc
xlat
or
xor
fmuls
add
or
inc
xlat
or
test
or
add
fmull
add
or
movsl
fmull
add
fmull
add
xlat
or
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
add
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
out
add
add
scas
add
daa
add
js
js
xchg
push
fildl
js
incl
js
ja
push
add
mov
add
jg
push
fcomi
add
outsl
add
add
fistpl
add
fisttpl
add
fstpt
add
fstpt
push
fldt
add
js
aas
add
fildl
divl
add
jecxz
call
je
add
je
add
insb
jecxz
mov
enter
dec
je
add
jae
add
jecxz
mov
je
add
je
add
jecxz
clc
jae
add
jae
add
jecxz
and
mov
insb
jecxz
nop
add
add
jecxz
shlb
add
xorb
xor
mov
jecxz
add
fimull
add
fimull
add
or
add
or
hlt
fmuls
add
or
mov
or
inc
add
fmuls
add
fmuls
add
add
fmuls
add
add
xchg
fmuls
add
or
cld
fmuls
add
or
or
or
jl
or
in
xlat
or
sub
or
or
or
insb
xlat
or
cmp
or
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
or
add
jo
add
add
add
or
add
jo
add
jo
add
or
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
or
add
jo
rolb
imul
inc
add
inc
add
fistl
add
fistl
add
jns
addb
fildl
add
fildl
add
jns
jb
jns
mov
add
fistl
add
adc
fnclex
add
loop
imul
push
add
fildl
add
fcomi
add
repnz
out
add
out
imul
add
cs
add
add
jae
add
add
add
jb
add
aam
inc
jae
add
je
add
jae
add
jae
add
jae
add
jb
add
aam
jbe
aam
sahf
jae
add
je
add
jae
add
jae
add
jb
add
aam
push
jae
add
aam
jbe
aam
jae
add
jb
add
jae
add
add
add
aam
pop
jb
add
cmpsb
fisttps
add
fimuls
add
fmull
add
fmull
add
fimuls
add
or
xchg
or
data16
add
fisttpll
add
fisttpll
add
or
jbe
or
out
or
fisttpll
add
fisttpll
add
fisttpll
add
or
jbe
or
push
fisttpll
add
fimuls
add
fmull
add
fmull
add
fimuls
add
fisttpl
add
fldl
add
pop
add
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
add
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
jmp
add
loope
insl
fcomi
add
in
add
aad
jne
in
insl
fcmovne
add
jmp
insl
add
jecxz
insl
fcomi
add
jne
out
add
xlat
add
out
insl
fcmovne
add
call
add
loopne
insl
fcomi
add
in
add
aam
jne
in
insl
fcmovne
add
ljmp
fnclex
add
repnz
out
add
add
add
insb
flds
in
loopne
out
imul
pop
loope
rorl
loope
rorl
lock
or
jp
or
jne
or
insl
rorl
repz
repz
or
je
or
insb
rorb
repnz
bnd
or
ja
or
outsl
xlat
or
xlat
or
jg
or
ja
or
outsl
xlat
or
xlat
or
jg
or
jbe
or
hlt
data16
in
fmuls
add
aad
or
pop
int3
push
push
dec
push
push
push
push
iret
lret
push
push
mov
lret
push
push
push
push
iret
lret
push
push
lahf
lret
push
push
mov
lret
push
push
lret
push
push
mov
lret
push
push
lahf
lret
push
push
mov
setle
movd
divps
cmovle
int3
divps
divps
str
nop
int3
nop
pshufw
movq
movq
emms
repnz
popa
add
adc
out
pop
adc
xchg
adc
jle
push
pop
addr16
sbb
pop
or
sbb
sbb
mov
sbb
mov
sbb
jns
sbb
jns
sbb
imul
sbb
add
sbb
pop
fcomps
sbb
call
sbb
jp
sbb
push
sbb
push
sbb
pop
or
sbb
add
mov
add
mov
repnz
repnz
loop
imul
sbb
aad
pop
int
push
movl
pop
jl
in
pop
je
in
insb
fstpl
fs
aad
pop
int
add
and
cmc
pop
jl
in
pop
je
in
insb
fstpl
fs
aam
pop
int3
and
add
sar
test
hlt
and
in
and
in
insl
rcr
rolb
nop
rcrb
push
rcrb
push
rcrb
push
rcrb
je
add
push
jnp
or
jns
or
outsl
iret
or
data16
out
je
psubusw
adc
arpl
adc
or
clc
or
sti
or
adc
pusha
into
adc
pusha
into
adc
addr16
adc
pop
adc
xchg
adc
jg
adc
xchg
adc
add
adc
adc
pop
enter
enter
pop
enter
pop
pop
push
pop
pop
cs
pop
pop
push
pop
pop
and
sbb
and
sbb
jno
sbb
jno
sbb
loope
sbb
loope
sbb
rol
sbb
rol
sbb
mov
les
sbb
sbb
jo
sbb
mov
les
sbb
les
sbb
ret
sbb
jae
sbb
jae
sbb
add
sbb
jp
sbb
push
sbb
push
sbb
pop
or
sbb
mov
sbb
mov
sbb
jnp
pop
sbb
pop
sbb
pop
sbb
pop
sbb
add
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
add
add
jo
add
jo
add
jo
add
jo
add
jo
sbb
add
fldt
add
leave
add
mov
add
fisttpl
add
fisttpl
add
fucomi
add
jmp
add
call
add
ljmp
add
loope
jo
fldl
add
flds
jo
loope
jo
or
add
sub
fisttpl
add
fldt
jo
test
add
fldt
jo
add
insl
fildl
jmp
addr16
jmp
imul
jmp
arpl
add
pop
fildl
jmp
and
jmp
push
fildl
jmp
add
ja
add
inc
movsb
aam
shlb
jb
sbb
jp
mov
ja
sbb
add
test
out
or
jno
or
insb
push
es
xchg
nop
or
xchg
cs
inc
stos
mov
test
sbb
cmp
insl
sub
hlt
xchg
pop
roll
cltd
outsl
imul
std
add
xchg
adc
mov
arpl
in
cli
test
or
imul
addr16
add
push
add
int3
pop
or
movsl
ret
jno
xor
out
mov
lods
stos
mov
xor
inc
fdivl
out
stos
jo
repz
add
and
test
and
add
adc
mov
sbb
add
pusha
fimull
xlat
stos
or
outsb
aaa
outsl
pop
add
enter
xor
out
fisubs
faddl
xchg
jecxz
fmuls
adc
pop
jl
mov
or
mov
mov
dec
mov
or
cli
lcall
das
fcomip
insb
js
jle
adc
call
push
sbb
and
adc
das
add
jmp
repnz
jno
sub
addr16
fldl
jbe
lods
dec
push
jl
dec
mov
sbb
mov
cmp
test
loopne
and
lea
push
mov
aaa
or
mov
nop
push
xchg
add
popf
push
rol
loop
mov
cwtl
int
push
cmpsl
das
mov
cltd
jnp
add
cmp
fdivs
inc
sub
stos
mov
into
fst
inc
push
inc
sub
daa
fldenv
mov
int3
loopne
push
cmp
dec
and
das
inc
mov
out
mov
sub
fsubrl
fisubrs
mov
js
das
loop
cwtl
mov
dec
xchg
ror
xchg
in
push
sbbb
arpl
lea
scas
mov
ds
lods
pushf
cld
mov
mov
sti
js
loop
leave
ds
add
insb
or
xchg
lahf
pmulhuw
or
cmp
jge
insb
push
lock
cmp
xchg
add
negl
notl
clc
arpl
add
repz
mov
adc
adc
scas
mov
mov
dec
mov
pop
popa
mov
jno
xlat
imull
mov
fisttpl
mov
cmpsb
mov
mov
mov
mov
or
notl
or
lcall
xor
shll
jo
outsb
popa
sti
jbe
add
inc
jno
mov
and
outsl
dec
xchg
mov
or
cmp
add
jo
mov
add
sub
xor
dec
xchg
flds
fisubrs
mov
popa
push
int3
xchg
insl
jb
cld
or
in
or
outsl
dec
sti
pop
jo
imul
sub
add
out
add
fnsave
mov
leave
shrb
popa
sub
xchg
inc
push
xchg
movsb
sbb
pop
adc
sbb
dec
cmp
dec
xlat
dec
pop
repz
dec
js
fcomps
insl
inc
pushf
jo
ss
lea
popa
xchg
sarl
mov
cmp
movsl
jp
aad
insl
mov
xchg
ja
adc
mov
inc
cmpsb
idivb
shll
inc
dec
ret
aas
and
scas
lods
sub
mov
sbb
xchg
test
add
nop
ret
cmc
mov
xchg
lret
mov
and
pop
imul
and
xchg
cmp
inc
pop
push
dec
inc
sub
mov
out
add
pop
insb
rcr
sub
jae
add
mov
aaa
xor
mov
jbe
inc
inc
pop
push
push
jb
dec
rcrl
enter
roll
out
cli
loop
cmc
jecxz
sbb
pop
mov
sahf
fsubrp
cwtl
xchg
ret
mov
cmc
js
lret
sbb
popa
test
aaa
xchg
dec
cltd
sbb
arpl
addb
fwait
xchg
test
xchg
cwtl
aaa
test
sub
int3
inc
aam
fstps
jo
jmp
lahf
in
dec
mov
arpl
test
loope
aam
enter
mov
ja
stos
pop
pusha
pop
sbb
in
shrb
scas
jo
push
pop
sbb
sub
sti
push
jnp
in
sbb
clc
inc
lahf
xor
pop
scas
rclb
pop
xchg
daa
imul
sbb
xchg
sbb
out
fs
loopne
outsb
lahf
addr16
shrb
fs
cmp
mov
movsb
or
sbb
frstor
lret
movsb
xor
cltd
es
mov
jge
test
insb
data16
in
adc
mov
push
loop
xchg
cmc
call
and
mov
inc
mov
xchg
dec
cmp
mov
js
out
cld
bound
std
imul
pop
and
cmp
dec
into
mov
rorb
movsl
mov
sbb
mov
add
add
out
or
subb
fs
stos
mov
push
test
mov
add
out
sbb
mov
xor
xchg
sub
mov
call
xchg
js
rcl
xor
jecxz,pt
dec
adc
push
cmp
ss
jp
sbb
cs
cmp
and
add
push
popa
push
add
incl
xor
aas
lret
enter
mov
add
test
data16
xor
or
scas
adc
sub
pop
mov
hlt
inc
add
fldcw
rol
je
in
pop
repz
mov
insl
rcrl
jbe
dec
test
xchg
js
mov
dec
add
mov
inc
inc
pop
push
adc
sub
add
or
mov
daa
test
add
jo
add
shlb
and
add
mov
xor
fs
xchg
flds
sbb
daa
insl
int3
xor
popf
sub
sub
jo
sub
pop
enter
add
mov
add
call
sub
pop
shrb
lcall
mov
fisubrs
mov
call
lock
dec
mov
jmp
test
push
ja
cli
inc
pop
icebp
mov
mov
fwait
sub
subb
cmpsb
aam
cli
movsb
fbld
mov
insl
xchg
mov
jecxz
cld
mov
inc
sti
push
cs
xchg
fsub
pop
push
or
insl
add
mov
cmp
pop
and
test
or
imul
xchg
jae
arpl
pushf
xchg
test
in
inc
and
orb
iret
jp
dec
mov
pop
aad
pop
dec
test
arpl
xchg
pop
sub
sahf
imul
add
mov
inc
xchg
cld
and
push
sub
add
jmp
and
testl
int
js
test
mov
push
push
mov
movsb
xrelease
stos
ljmp
mov
adc
add
cs
mov
pop
dec
nop
aas
mov
jmp
imul
in
arpl
lds
jg
rclb
out
inc
negl
popa
adc
fildl
add
lock
sahf
test
adc
add
or
jb
lret
add
loope
adc
dec
rcl
pop
dec
xchg
or
or
sbbb
push
andl
or
arpl
mov
mov
mov
jbe
cld
imul
in
push
enter
outsb
imul
testl
mov
cmp
loope
std
pop
jp
mov
pop
in
dec
test
fwait
sbb
cwtl
inc
mov
out
mov
jne
adc
or
ret
pop
sbb
push
inc
push
iret
xchg
inc
fistl
add
js
fcomi
inc
js
testl
aaa
sar
repnz
stc
or
mov
ljmp
add
leave
ljmp
std
push
add
add
incl
gs
cld
daa
jbe
dec
pop
mov
jle
popa
hlt
mov
inc
ret
cmp
inc
pop
mov
inc
and
enter
outsb
cmp
insb
dec
or
cmpsl
dec
add
outsb
sbb
adc
jp
mov
nop
insl
data16
insb
cmpsl
or
outsb
nop
cld
shrb
into
xchg
add
inc
imul
or
inc
leave
push
push
cmpl
pusha
cwtl
sub
popa
sbb
cltd
aaa
arpl
data16
push
mov
dec
testb
jbe
dec
andb
dec
and
out
dec
jnp
xor
test
dec
jno
xchg
inc
jle
aam
add
add
addb
inc
dec
pop
push
inc
add
inc
mov
out
push
outsb
fnsave
push
aaa
inc
je
pusha
cltd
mov
aad
stc
push
andb
stos
fidivrl
add
pop
push
sub
addr16
cwtl
dec
movsl
pop
or
jbe
pop
xor
pop
in
lods
pop
pop
aad
loope
psadbw
xchg
jb
in
cmp
out
call
sarl
jo
cmp
xchg
test
xchg
popf
cwtl
mov
in
mov
stos
mov
dec
imul
rcl
pop
inc
sbb
dec
mov
sub
cmp
sahf
cmp
fwait
add
cltd
add
and
inc
or
push
fmul
add
mulb
inc
js
nop
in
mov
mov
xsaveopt
cmp
mov
fidivrl
cmp
mov
sbb
jle
xchg
in
pop
adc
adc
lods
cmp
movsl
sahf
cld
lahf
push
fidivrl
mov
movsb
dec
lahf
popf
jae
in
mov
sbbl
xchg
sub
xchg
cmp
jnp
mov
push
notb
int
jb
test
pop
imul
mov
fcmovnu
insb
add
jle
inc
das
aas
xchg
fildl
xchg
movsb
hlt
mov
sahf
sahf
and
pop
lahf
adc
or
push
or
mov
add
mov
call
mov
movsl
filds
popa
pop
orb
jmp
sbbb
sub
test
test
ds
test
lahf
shll
jo
movsl
stos
cmp
into
sub
je
lods
lods
mov
js
cmpsb
add
je
pop
mov
mulb
and
mov
sub
les
scas
xor
shrb
mov
xor
mov
ljmp
xor
xlat
mov
pop
gs
mov
test
mov
mov
pop
mov
jo
add
jo
sub
sbb
jb
bound
out
adcb
push
jnp
add
cmp
adc
mov
add
push
mov
fists
cmc
enter
shrb
dec
test
adc
lcall
pop
push
jb
fisubrs
into
xor
iret
cli
adc
pop
movsb
dec
es
add
aam
iret
pop
jb
jae
ficoml
mov
xor
rcl
jo
jnp
lret
out
cmp
mov
pop
add
mov
inc
les
xchg
dec
pusha
addr16
pop
mov
mov
call
outsb
repz
mov
sbb
sub
mov
rol
fwait
mov
movsb
cmp
rcl
xchg
and
cmp
mov
inc
pop
or
scas
add
and
cmpsb
mov
push
add
push
sub
and
add
test
mov
jnp
rclb
push
sbb
aam
out
cltd
mov
jl
aas
inc
out
sbb
jp
andl
lods
enter
gs
cwtl
pop
mov
lahf
loopne
and
cmc
std
out
dec
insb
xlat
cltd
ror
add
inc
push
adc
leave
cmpsb
test
pop
sub
mov
cmpsl
std
out
cmp
push
movsb
push
orl
lods
fidivs
movsb
cli
push
or
add
out
sub
insb
xchg
lret
cmp
inc
fwait
addl
xchg
je
xchg
sub
testl
mov
dec
push
rcll
adc
das
inc
ds
fwait
push
fwait
out
in
add
icebp
jno
mov
leave
dec
pop
clc
fistpl
imul
adc
divl
rorl
jns
stos
pop
in
push
loopne
fldenv
dec
insb
aas
jmp
mov
lret
data16
subb
mov
jae
push
or
mov
add
push
push
pop
mov
jb
in
add
push
das
out
jmp
pop
in
push
mov
stos
xor
cmpb
arpl
in
push
cmp
das
xor
iret
data16
jae
cld
jne
jmp
pop
push
dec
cmc
cmovne
and
fcmovu
pop
pop
arpl
mov
lret
insl
mov
lods
test
mov
aam
fmulp
mov
cltd
adc
pop
and
xchg
xchg
mov
mov
push
mov
lcall
inc
roll
pushf
loop
stos
ret
push
pop
xor
sahf
cld
jecxz
or
gs
pop
jno
fisubrs
push
loop
mov
cmp
mov
mov
cli
jmp
inc
int
sub
xchg
fmull
fyl2xp1
jb
popa
inc
xchg
nop
jae
sub
or
ja
cmpsb
gs
push
lret
sub
add
lret
int
fstl
xor
gs
pop
lock
cmp
gs
adc
lret
sbb
dec
push
ja
fs
fsub
insl
xchg
cmp
lock
daa
daa
lea
mov
add
out
mov
loope
lgs
mov
mov
aam
add
cmpb
push
pop
lods
out
xchg
movsl
push
icebp
push
idivl
aam
xchg
mov
mov
ss
push
jle
sbb
ret
outsb
add
jne
out
mov
xchg
mov
repz
test
out
leave
adc
shll
dec
ss
mov
or
pushf
xor
adc
bound
sbb
divb
fiaddl
or
inc
test
daa
mov
or
jnp
fcom
mov
cmp
fildl
or
addr16
mov
mov
or
inc
and
add
mov
add
add
fsubp
pop
popa
mov
or
les
stos
and
gs
inc
sub
jmp
call
out
push
jl
fisttpl
pop
jne
cmc
push
pusha
aaa
add
jnp
rcll
pop
add
inc
std
mov
mov
mov
sub
in
xchg
sti
daa
call
lcall
sub
lret
add
or
enter
xchg
pushf
sub
sbb
and
mov
xchg
stos
mov
push
cmc
mov
sbb
push
call
movsb
mov
sbb
sti
add
xor
and
and
iret
int
and
push
iret
or
mov
sub
enter
pop
mov
cbtw
mov
jbe
lahf
scas
push
push
or
ja
mov
fs
push
cltd
aas
xchg
xchg
fisubrs
lahf
pop
sbb
popa
add
in
sub
push
mov
add
push
xchg
movsb
shll
xor
xchg
mov
add
into
test
test
cwtl
sbb
repz
out
negl
lock
hlt
push
hlt
pop
int3
cli
xor
mov
mov
mov
sarl
or
mov
jl
sbbb
subl
repz
mov
adc
pusha
pop
mov
and
je
and
loop
test
in
xchg
insl
fisubrl
sti
jo
sub
sbb
fnstcw
mov
js
mov
jecxz
add
mov
or
pushl
mov
or
pusha
imul
neg
sub
dec
movsb
daa
test
jnp
aam
imul
mov
jbe
mov
cwtl
push
add
cmp
icebp
sbb
fwait
add
insb
sbb
cs
mov
dec
loop
xor
or
mov
imul
jmp
dec
rcrb
pop
lret
and
jae
cmp
es
inc
sub
or
aaa
out
or
repnz
add
cwtl
add
adc
adc
xor
push
sub
into
sub
push
mov
xor
dec
mov
mov
cmpsl
xor
dec
pop
push
iret
mov
dec
push
push
mov
ds
adc
dec
mov
cmp
mov
mov
inc
lock
cmp
data16
loope
xor
icebp
dec
mov
outsb
push
fstpt
dec
pushl
imull
jo
popa
xchg
xchg
enter
cwtl
push
fmuls
jns
mov
pop
pop
sbb
mov
aaa
movsl
outsl
xor
jb
mov
push
ljmp
fwait
cmpsb
in
adc
inc
add
je
test
mov
add
popf
mov
add
daa
add
mov
or
fidivs
aas
cmp
test
dec
subb
sub
lret
jno
fwait
xor
mov
mov
mov
and
jo
aam
jb
inc
popa
push
clc
dec
xchg
int
es
pop
ds
loope
adc
ja
mov
out
fsubrl
add
loop
lret
or
lahf
jmp
fdivr
rol
xlat
int
jo
jmp
cmp
call
outsl
push
addl
mov
sub
adc
and
lahf
ljmp
stos
pop
mov
sub
pop
xchg
add
cmp
dec
scas
ret
dec
sahf
sub
xchg
pop
lcall
push
repnz
jp
ret
push
xchg
add
push
mov
jne
mov
push
pop
loope
addr16
push
sub
add
sbb
and
cld
cmp
mov
adc
rorl
ror
add
jo
lock
sbbb
adc
loopne
lcall
pushf
and
xlat
pop
das
inc
ficomps
mov
mov
add
test
out
sub
insb
cmpsb
and
bound
stos
xchg
lret
call
mov
popa
inc
adc
insb
lds
push
out
jae
leave
shlb
jmp
push
add
sbb
inc
sbb
sub
in
jl
mov
dec
inc
sbb
pusha
clc
add
mov
out
rcrl
scas
push
stos
and
lea
push
or
adc
bnd
sub
push
in
imul
fdivl
jne
xor
cmp
fwait
mov
pop
dec
je
js
xor
fucomip
mov
adc
jns
push
out
cmp
push
js
add
sahf
sbb
push
cmp
loope
add
pop
sbb
push
in
sbb
cmp
fidivrl
and
fld
popa
aas
les
arpl
cmpsb
into
test
xor
popa
arpl
mov
aas
insl
adc
enter
pop
insb
cltd
push
into
lcall
rcrb
and
xchg
cltd
or
mov
jp
test
xchg
cld
adc
xchg
stc
and
lret
xchg
jecxz
imul
movsb
pop
xchg
push
mov
cmp
jne
rorl
gs
push
enter
pop
out
dec
iret
iret
pop
cmp
adcb
cmp
push
xor
add
cltd
iret
js
mov
inc
out
std
sbb
xor
fneni(8087
sub
sub
or
add
sbb
mov
sahf
mov
je
jbe
dec
sbb
push
push
hlt
rolb
fxam
lock
stos
movsb
fcomps
arpl
xchg
sbb
push
stos
inc
mov
pop
fldt
bound
ret
adc
sbb
push
xchg
pop
jmp
ljmp
adc
cmp
frstor
lcall
test
adc
inc
cmp
rclb
xchg
pop
and
mov
xchg
pop
or
inc
add
call
gs
shrb
jns
in
sbb
loope
insl
enter
dec
call
mov
sub
aaa
and
shrl
out
dec
data16
jnp
lea
cmpb
pop
dec
int
into
push
cld
jnp
adc
pop
std
jmp
or
loop
cmp
stos
and
icebp
iret
xchg
inc
xor
lea
adc
fbstp
pop
xorb
add
dec
imul
jo
mov
imul
dec
inc
xor
or
aaa
jno
adc
mov
push
push
mov
test
jmp
add
leave
xorl
out
add
cmc
cli
cmpsb
std
or
xchg
xor
xor
imul
xor
decl
push
sbb
dec
xchg
jle
popf
mov
add
ja
arpl
dec
call
mov
js
ret
cmp
inc
insb
hlt
xor
fldcw
lret
fs
xor
push
push
inc
dec
or
das
jl
jb
mov
adc
cmpsl
mov
cmp
mov
adc
bound
into
jge
out
mov
mov
je
mov
mov
ret
xor
pop
push
push
ss
jo
sbb
stos
jb
stos
ljmp
jo
call
jg
cmp
adc
cld
xlat
out
mov
in
jbe
push
out
shlb
stos
pop
cmc
jo
test
cs
mov
gs
dec
push
repz
add
repnz
push
cmp
adc
in
pop
movsb
inc
out
es
fists
daa
shrb
loope
rcr
cmp
add
hlt
sti
mov
push
fadds
cmpsb
fnstcw
faddl
mov
adc
ljmp
pop
jnp
gs
shll
loope
sub
aad
fimull
ret
xchg
movsl
mov
scas
icebp
push
or
outsb
or
les
fsubrs
outsb
add
ss
shrl
dec
ds
sbb
ljmp
jecxz
sub
mov
das
xchg
cmp
dec
dec
add
cmp
jnp
jns
and
repz
jb
fistps
andb
andl
ja
cmpsl
pop
leave
lcall
mov
or
out
sbb
pop
scas
sbb
push
daa
and
call
icebp
jb
push
inc
jo
jl
call
pop
clc
pop
jle
mov
xchg
jmp
je
ljmp
mov
sub
scas
add
test
mov
xchg
fmuls
push
jb
xchg
cmp
mov
fldt
and
push
mov
cli
push
mov
lret
push
jnp
mov
es
movsb
arpl
xor
add
subl
decb
sub
adcb
mull
imulb
jnp
enter
or
adc
jmp
sbb
mov
mov
mov
test
mov
pop
imull
loope
mov
mov
add
cmp
rorb
jb
push
cmpsl
mov
add
scas
insl
pop
push
cmc
test
and
xor
jp
add
inc
adc
mov
rorb
int3
xchg
scas
pusha
rcrl
rclb
mov
mov
jecxz
movb
loope
jae
fisubrl
int3
and
pusha
mov
je
add
pop
mov
jle
lock
cmp
sbb
push
aas
push
sti
pop
gs
int3
xor
xor
repnz
add
mov
push
mov
repz
lods
pop
and
sub
les
daa
push
addr16
cmc
dec
fnstenv
jmp
cmp
xor
inc
jno
jmp
sbb
adc
aad
xchg
daa
jb
jle
mov
dec
fcomi
push
int3
lret
sti
dec
imul
xchg
icebp
lods
test
das
les
andb
je
es
inc
jle
rcrb
pop
fidivl
xchg
xor
pop
cld
pop
add
inc
pop
add
pop
fcoml
push
push
lret
daa
daa
ljmp
rol
cmp
lods
add
ds
jns
or
add
pop
xor
mov
aas
mov
outsl
xor
loope
cmp
cltd
cmp
popf
or
negb
sub
dec
repnz
sbb
xor
or
xor
mov
aas
aam
push
fldt
mov
gs
and
inc
data16
fimull
ljmp
mov
aas
sub
sbb
mov
icebp
ret
test
dec
testl
jnp
lahf
mov
sub
dec
sar
pop
inc
mov
mov
aaa
test
fdivrs
adc
loop
int3
jle
cwtl
mov
xchg
pop
xchg
xor
xchg
add
in
add
push
mov
push
mov
fistpl
lock
jae
add
ds
jl
mov
enter
xchg
dec
push
mov
stos
xor
jecxz
lods
sbb
in
dec
fs
mov
mov
add
lcall
mov
push
cmp
sahf
or
inc
adc
xchg
add
gs
push
test
fldl
inc
ss
jl
es
add
add
mov
dec
rcrb
jmp
popl
adc
lods
mov
in
lods
mov
out
mov
push
add
mov
imul
sub
xchg
loopne
push
dec
dec
pop
jle
sub
xor
xchg
pop
xor
or
stc
idiv
mov
push
std
xor
sti
jp
dec
push
xchg
outsl
test
or
mov
rcrl
lahf
shlb
pop
and
sbb
sub
pop
mov
pop
sub
jbe
add
lret
sub
pop
push
xchg
stos
aas
sub
nop
mov
xchg
into
or
dec
test
jg
incb
push
mov
movsb
jo
pushf
and
pop
data16
mov
jl
inc
out
sbb
jg
stc
dec
das
jbe
testb
adc
rol
mov
aaa
rorl
pop
jnp
mov
std
xor
push
out
and
in
push
xchg
or
repz
ja
pop
add
lock
and
push
add
dec
jnp
jle
shll
loopne
pop
das
inc
push
rcll
pop
paddusb
in
add
je
data16
xchg
aaa
mov
or
fwait
pop
cmp
es
je
mov
jl
jmp
leave
push
or
aas
sarb
mov
xor
outsl
sub
leave
or
mov
dec
inc
and
ljmp
in
icebp
sbb
jge
cli
fwait
or
and
enter
adc
lret
add
push
pop
scas
mov
rorl
negb
or
out
push
addl
inc
aad
and
pop
add
cmp
pusha
xor
hlt
in
fwait
or
insb
push
add
movsl
in
pop
rolb
xchg
sub
scas
sub
mov
inc
adc
imul
dec
cltd
lods
imul
shlb
pop
sbb
hlt
aaa
jns
ds
xchg
je
out
repnz
mov
add
jbe
rorl
dec
mov
imul
fstps
popa
and
imul
pushf
add
bound
fdivrs
pop
push
jo
lock
ljmp
test
inc
loope
add
fnstcw
sti
sbb
xor
inc
xchg
clc
add
dec
scas
mov
inc
cmpsb
icebp
push
loope
xchg
das
imull
pop
movsb
inc
iret
in
jbe
jb
add
test
in
push
jp
mov
xchg
push
pushf
in
mov
lea
pop
mov
jb
rclb
push
out
xor
jge
stc
in
sub
or
iret
enter
es
je
or
fs
sub
sahf
xchg
adc
dec
fs
mov
mov
sbb
les
adc
cs
scas
je
xor
ds
xor
jge
dec
incb
dec
xchg
or
jle
xor
xchg
inc
adc
jmp
push
fcompl
in
shl
or
or
outsl
adc
movsl
iret
movsl
sub
aad
subl
icebp
cmp
mov
mov
jp
sbb
fisttpll
flds
sub
push
movsl
ret
dec
cmpsl
and
outsl
lea
fdivrl
ljmp
add
jae
add
jae
add
jae
add
jae
add
jae
add
insb
mov
add
insb
loop
add
xlat
jno
add
loope
or
add
or
add
or
adc
or
adc
sbb
adc
sbb
adc
enter
enter
fcmovnu
adc
fcmovnu
adc
lret
add
fsts
add
fsts
int3
fsts
add
leave
add
flds
add
flds
mov
add
add
pop
add
cmp
das
add
fdivrs
xorl
incb
outsb
mov
add
add
mov
add
mov
add
jo
add
jo
add
jo
add
jo
add
lahf
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jnp
jne
push
jmp
push
and
jno
dec
fbstp
and
jo
and
fs
pop
lock
sti
sub
es
lock
inc
and
es
jecxz
xor
pop
shl
add
mov
mov
daa
insb
mov
out
jo
in
xor
push
adc
push
add
and
add
jo
pop
xor
or
jo
out
xchg
jecxz
into
aaa
add
not
aaa
push
call
sub
push
jecxz
xor
sti
pop
sub
add
jae
or
imul
icebp
jae
add
loop
add
loopne
add
and
sbb
mov
sbb
mov
or
sbb
ret
out
sbb
mov
or
or
pushw
int3
add
aad
or
rorl
enter
mov
jae
add
jae
add
jae
add
jae
add
jae
add
aaa
add
mov
add
ljmp
add
jns
add
gs
add
ljmp
add
jns
add
js
add
inc
add
inc
add
inc
add
fnsave
stc
fnsave
and
fildll
fldl
add
jecxz
or
fldl
add
or
fs
lcall
add
mov
add
sub
add
cmp
fadds
jo
add
jno
add
jno
add
sbb
pop
jno
add
add
push
add
jae
add
jb
add
pop
add
jno
add
cmp
jb
add
sub
pop
jno
add
push
add
xlat
add
jb
add
leave
add
add
add
jno
add
jno
add
add
add
int3
add
jno
add
jno
add
jno
aaa
add
cmp
xor
cmp
aaa
fidivl
and
pop
add
fisubl
add
ficoml
add
fimull
add
jae
int3
add
outsl
fcmove
add
mov
ret
add
ficoml
ficompl
add
mov
dec
fiaddl
add
push
fisubl
test
fimull
push
sbb
push
mov
mov
pop
fiaddl
js
sar
outsb
mov
jmp
clc
call
jmp
outsb
in
jbe,pn
call
outsb
mov
decl
outsb
pop
add
jne
add
insl
loop
into
jne
call
insl
mov
mov
mov
cmp
mov
decl
sub
decl
sar
inc
outsb
jmp
decl
cmp
add
lcall
outsb
ljmp
outsb
push
fisttpll
fisttpll
dec
fldl
add
add
push
add
sub
cmp
inc
add
fisttpll
fnsave
add
test
push
add
loopne
add
loopne
add
fildll
add
filds
jmp
dec
add
fbstp
add
fbld
out
imul
test
add
cmp
or
cmp
or
sub
jecxz
xor
loop
xor
loop
xor
or
pusha
push
cmpsl
pusha
imul
jecxz
pusha
pop
or
inc
cs
inc
and
or
inc
xor
mov
mov
or
xorb
insl
push
lods
subb
subb
pusha
pop
push
mov
pop
push
mov
push
push
mov
pop
push
mov
inc
xor
push
mov
mov
inc
push
mov
aas
push
lret
fldt
pop
lods
lret
pop
pop
movsl
lret
and
mov
lret
xor
ret
pop
mov
lret
xor
pop
sahf
lret
aaa
pop
xchg
lret
cmp
push
lret
sbb
push
lret
sbb
push
lret
sbb
dec
lret
adc
push
lret
mov
or
scas
or
mov
sbb
mov
or
lret
mov
add
lds
add
lret
fmul
inc
or
or
stos
imul
push
and
mov
push
es
push
xor
push
xor
push
and
push
and
push
xor
imul
push
push
jns
push
sbb
push
sbb
push
sbb
push
sbb
push
mov
add
push
mov
js
push
mov
push
aad
leave
js
pop
mov
pop
mov
pop
mov
pop
test
pop
add
jecxz
push
mul
inc
push
out
inc
push
icebp
jecxz
push
and
inc
push
and
dec
push
xor
dec
push
insl
jecxz
push
cmp
dec
push
das
jecxz
push
jecxz,pn
push
dec
jecxz
push
push
jecxz
push
add
fcoms
mov
fmuls
mov
push
add
fcoms
mov
push
add
fcoms
loope
pop
add
fcoms
repz
add
pop
add
fcomps
fmuls
add
fstps
cltd
fsts
and
pop
add
add
add
add
iret
push
add
insb
jno
pop
je
pop
or
or
je
pop
or
or
or
pop
pop
nop
je
pop
push
insb
stc
push
pcmpeqb
push
dec
insb
ret
push
xor
xor
inc
je
push
xor
mov
push
inc
insb
inc
add
je
add
insb
cmp
je
add
insb
dec
add
je
add
insb
aaa
add
je
add
insb
add
aas
xlat
mov
lcall
xlat
pushf
add
jle
ds
and
xor
pop
xlat
and
and
xlat
or
add
inc
xlat
or
adc
add
xlat
add
add
iret
add
xlat
roll
xlat
rolb
add
lret
add
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jae
add
arpl
dec
jae
add
popa
add
inc
add
pop
add
pop
add
jb
add
jb
and
cwtl
fldcw
mov
scas
add
lods
add
nop
add
int3
add
lret
add
fxch
add
fnstenv
add
fimull
add
fsts
dec
fsts
add
push
fstps
add
lcall
fstps
cmpsl
fstps
add
mov
add
add
add
jae
add
jae
add
jae
add
jae
add
pop
add
jae
add
mov
jae
add
jae
mov
jae
add
jae
inc
jae
inc
jae
inc
jae
inc
jae
inc
jae
add
jae
add
jae
add
jae
add
jae
mov
mov
mov
daa
mov
mov
push
mov
mov
sarb
mov
push
sti
adc
mov
push
sti
cmc
mov
inc
sti
ud1
sti
or
pushf
sti
dec
mov
mov
dec
mov
sub
insb
mov
and
jbe
das
sti
cmp
and
inc
mov
ss
sarb
add
dec
pop
and
cmp
lds
xor
and
mov
scas
sbb
and
adc
and
add
and
hlt
imul
mov
mov
and
aad
and
int
and
test
loope
push
lods
mov
inc
movsl
loopne
inc
popf
jecxz
push
xchg
dec
fbld
inc
test
and
jge
and
jne
and
add
and
mov
add
mov
and
inc
mov
and
adc
add
jmp
add
ljmp
and
test
and
test
and
test
and
test
and
test
and
test
test
and
test
or
test
test
adc
push
and
test
push
test
add
and
test
and
clc
sub
xchg
mov
pop
xchg
shl
xchg
mov
pop
xchg
ret
xchg
dec
sti
and
sti
adc
sti
rclb
mov
push
sti
lret
sti
scas
dec
fs
pop
push
arpl
sbb
sti
sbb
dec
sti
sbb
xor
cmp
sbb
insl
sti
stos
xchg
pop
sti
mov
push
lret
dec
sar
lods
push
adc
in
adc
stos
push
push
sti
lods
dec
adc
sti
mov
jne
add
cli
or
adc
or
add
pop
sar
rol
aam
xchg
ror
mov
xlat
stc
jg
fdivr
add
mov
stc
sarb
xchg
popf
stc
pop
rcll
lahf
rcll
fs
jae
xchg
gs
lea
clc
pop
fstpt
dec
mov
daa
clc
fildl
sub
and
js
and
push
lock
add
and
dec
xchg
and
cmp
and
cmp
and
ja
and
addr16
cmpsb
pusha
lock
pusha
stos
add
pusha
stos
add
pusha
lods
add
subb
subb
mov
add
pusha
mov
add
pusha
movsl
add
andb
andb
add
jmp
add
add
cmp
loop
mov
loope
jge
in
jl
jecxz
jg
out
dec
xlat
in
jno
call
add
clc
jmp
or
ljmp
push
cld
jmp
push
out
jmp
push
out
jmp
push
icebp
jmp
push
inc
jmp
push
inc
jmp
push
xor
or
xchg
jmp
push
and
or
aaa
jmp
push
add
jmp
push
jns
adc
or
femms
or
adc
jo
adc
data16
adc
pop
adc
outsb
add
adc
jle
adc
jbe
adc
outsb
sub
sbb
adc
pop
adc
outsb
int
pop
data16
and
push
and
push
and
push
and
push
and
aaa
push
and
outsb
xor
cmp
sub
push
sub
push
sub
push
sub
push
sub
dec
push
sub
outsb
cmp
push
xor
cmp
popa
aad
punpckldq
cmp
arpl
xor
inc
aad
aad
cmovbe
push
aad
push
aad
pop
aad
setp
xor
jg
aad
cmpxchg
or
mov
or
add
aad
push
mov
int
scas
aad
push
mov
iret
push
mov
aad
push
stos
aad
push
cmp
xchg
push
xor
mov
sub
aad
push
and
jns
and
jp
and
add
das
pcmpeqb
maxps
orps
sqrtps
jle
js
popa
leave
das
mov
das
test
or
das
dec
or
das
push
popa
ret
popa
shrl
popa
shrb
add
das
outsb
lds
xchg
das
cltd
jle
xor
sbb
jnp
sbb
jp
sbb
jne
pop
xor
xor
sbb
xor
adc
add
aad
xor
aad
xor
aad
xor
aam
xor
call
dec
xor
aam
xor
push
xor
dec
xor
push
xor
push
xor
rcll
xchg
rcll
xchg
push
xor
rcll
adc
xor
rcrl
rcrb
iret
rcrb
into
rcrb
leave
shlb
call
shlb
fcmovbe
popa
xor
shll
adc
jo
or
popa
dec
or
popa
cmp
popa
insl
or
adcl
mov
ret
or
or
popa
adc
popa
adc
or
or
or
popa
fmull
mov
popa
out
or
addl
cmpps
movsb
inc
inc
vmread
movq
jno
mov
lret
xchg
push
in
sahf
push
dec
push
fucomi
orb
jmp
push
mov
mov
mov
icebp
inc
fcoml
and
mov
mov
mov
andl
dec
and
mov
dec
and
mov
mov
push
and
mov
cmp
mov
out
add
loopne
jo
loopne
jo
repnz
jo
jmp
jo
add
dec
fildl
fdivl
add
cmp
add
jae
add
sub
add
jae
add
jb
add
dec
fildl
lds
add
jae
add
jae
add
push
jae
add
jae
add
fildl
mov
jb
add
jb
add
jae
add
fildl
or
stos
fildl
add
add
add
xor
add
fildl
add
add
pop
and
add
and
add
rcr
add
add
add
sbb
add
and
add
and
add
and
add
fildl
add
and
add
and
add
add
sahf
and
add
fildl
add
and
add
fildl
add
and
add
or
jo
add
jo
pop
add
add
add
pop
add
add
jo
pop
add
add
jo
pop
add
add
jo
pop
add
add
jo
pop
add
add
jo
pop
add
add
jo
pop
add
add
jo
pop
add
add
jo
pop
add
add
jo
pop
add
add
add
add
jo
pop
add
add
jo
pop
add
jo
add
jo
lcall
fistpl
add
fstpt
fildl
fstpt
jo
inc
add
fistpl
jo
push
add
fisttpl
jo
incl
jo
inc
pop
jo
adc
add
cmpsb
pop
jo
fadds
jo
daa
pop
jo
flds
jo
sub
fstpt
pop
jo
mov
add
sub
fistl
jo
xchg
add
sub
jo
jbe
jo
add
leave
fildl
jno
fildl
scas
mov
fildl
mov
je
add
je
add
je
add
je
add
je
add
fildl
cmpsl
dec
fildl
imul
fildl
push
sub
add
fildl
sbb
fildl
push
fildl
sbb
fildl
gs
add
mov
fildl
cmp
jae
add
push
and
add
and
add
and
add
add
cmp
add
add
and
aad
add
add
add
add
xor
add
repnz
add
and
add
and
add
add
xlat
add
cltd
xlat
add
mov
add
sbb
inc
add
add
pop
filds
add
lock
add
add
loope
add
jo
jne
jo
add
jo
add
jo
jne
jo
add
jo
add
jo
jae
jo
add
add
add
jo
jne
jo
add
jo
add
jo
add
jo
xchg
xor
xchg
adc
pop
jo
xchg
or
xchg
cmp
add
xchg
fiaddl
jo
xchg
adc
adc
lock
in
cmp
jo
add
jo
add
lahf
xchg
jne
xrelease
fucomi
xchg
fucomi
test
fcmovnb
xchg
fldt
add
fistl
add
fistpl
add
add
fistl
xor
rolb
fildl
xor
testb
fisttpl
xor
and
jbe
jae
xor
or
imul
fcomi
add
xchg
jecxz
mov
sbb
xchg
test
sbb
nop
jae
add
je
add
jae
add
je
add
out
sbb
in
jae
add
in
sbb
gs
add
in
sbb
sbb
mov
sbb
and
test
sbb
and
test
add
add
sbb
push
je
add
sbb
lea
add
out
sbb
sbb
or
mov
or
jne
inc
add
fistpl
add
popa
inc
add
or
add
or
pop
pusha
inc
add
faddl
add
inc
add
pusha
inc
add
ficoms
leave
pop
inc
add
fimuls
add
pop
inc
add
fimuls
add
add
add
pop
inc
add
fimuls
add
inc
add
pop
inc
add
fildl
jno
inc
add
testl
mov
fldl
jo
jle
jo
add
jo
jle
jo
add
inc
jo
add
jo
jle
jo
add
jo
jle
jo
add
jo
jle
add
add
inc
jo
add
jo
jg
jo
add
jo
jg
jo
add
jo
jg
jo
add
jo
jg
jo
add
jo
jle
jo
add
sbb
inc
jo
add
jo
jg
jo
add
jo
jg
jo
xchg
add
jle
fldt
mov
add
jl
fstpt
add
fcmovnu
add
push
jl
add
fistl
add
jae
mov
test
imul
mov
jnp
fcomi
add
jp
fisttpl
jl
fstpt
jl
fisttpl
add
add
mov
add
cmp
add
insb
mov
sbb
jo
loopne
insl
cld
sbb
xlat
jae
add
sbb
or
imul
int3
add
lret
sbb
mov
mov
fiadds
mov
insb
iret
add
fwait
sbb
push
insb
aad
rorl
faddl
stc
jnp
add
jae
add
clc
sbb
lahf
jae
add
insb
fadds
mov
add
add
jae
add
sbb
add
arpl
inc
fmuls
add
arpl
stos
fcomps
add
arpl
or
sub
add
fadds
inc
arpl
rcr
add
sbb
add
or
sbb
add
bound
or
push
add
int
inc
add
fmuls
std
pop
inc
add
add
pop
inc
add
fistps
add
inc
add
fildll
add
add
inc
jo
add
jo
test
test
test
in
add
jo
xchg
inc
add
jl
inc
jo
add
test
jo
xchg
ret
jo
xchg
jo
add
inc
jo
add
inc
jo
add
aam
inc
jo
add
jo
mov
jge
pop
jo
mov
out
add
jo
mov
push
add
jo
mov
fisttpl
add
fldt
xor
filds
jbe
mov
fcmovnu
add
xrelease
mov
fldt
push
add
jl
lahf
mov
mov
fcomi
mov
fcmovnb
mov
fcomi
mov
fninit
mov
xchg
add
fisttpl
add
fisttpl
jle
filds
dec
clc
sbb
adc
insl
call
out
imul
je
add
out
sbb
sub
or
je
add
je
add
clc
sbb
push
je
add
je
add
out
sbb
push
out
sbb
and
std
lock
xor
adc
jae
add
jae
add
jae
add
sbb
add
xchg
sbb
popf
pop
inc
add
fcoml
add
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
add
add
xlat
add
add
pop
inc
add
sbb
aad
inc
add
faddl
add
fmull
add
fmull
pop
inc
add
fstps
add
fldt
add
pop
inc
add
add
adc
add
add
inc
jo
add
inc
jo
add
jo
addl
add
jo
addl
add
jo
addl
add
inc
jo
add
jo
test
mov
add
jo
add
inc
jo
add
jo
addb
add
inc
jo
add
jo
addb
add
jo
addb
add
jo
addb
add
jo
addb
roll
xorl
cmp
fcmovnbe
lret
stos
add
lret
xor
jg
adc
fisttpl
outsl
lret
outsb
add
outsl
lret
ret
jnp
jmp
aas
lret
add
sbb
lret
sbb
mov
dec
fldt
lret
sbb
pop
fcomi
lret
sbb
jne
out
pop
fistpl
sbb
add
jb
add
sub
add
jae
add
jae
add
lods
add
jae
add
add
add
fildl
mov
sbb
insl
insb
fildl
jb
sbb
insb
insb
fildl
ficomps
fildl
popa
mov
add
fildl
stos
pop
sbb
popa
insb
fildl
popf
dec
sbb
jo
fildl
lods
pop
sbb
arpl
pushf
dec
sbb
jb
fildl
lea
sbb
gs
fildl
bound
sbb
add
inc
add
jle
add
jle
add
sbb
add
add
inc
jle
add
fadds
add
je
add
fadds
add
je
add
fadds
add
inc
add
push
add
add
stos
push
add
fadds
add
add
jl
inc
add
fadds
add
push
add
fadds
add
fadds
add
imul
add
push
add
add
jo
icebp
inc
jo
add
jo
lock
jo
ja
jo
add
jo
add
jo
xchg
xchg
xchg
addb
jo
test
sbb
add
add
add
add
add
add
add
jno
add
jb
add
jb
incb
insb
addb
je
add
add
add
addb
jb
add
jb
add
insb
js
add
incb
jno
call
add
out
jae
ljmp
fsubrp
add
ljmp
fsubrp
add
fsubrp
add
call
add
call
add
jmp
add
call
add
jmp
in
jo
out
jo
out
jo
out
jo
out
jo
out
jo
out
jo
out
jo
out
jo
out
jo
add
mov
add
jae
sub
pop
mov
xor
xorb
jmp
adc
popa
test
add
sbb
imul
jmp
push
mov
jne
stos
jecxz
jmp
dec
sar
popa
inc
cmpsl
jmp
fwait
repz
mov
jne
stos
jecxz
or
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
pop
fldl
add
add
dec
fldl
add
add
sbb
add
sbb
add
or
add
or
add
add
fldl
add
fldl
add
fldl
add
fldl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
pop
incl
pop
incl
pop
incl
pop
call
pop
inc
pop
pushl
inc
call
inc
decl
inc
incl
inc
test
inc
pushl
mov
add
jae
incl
pop
flds
loope
or
push
pushl
push
js
out
addb
mov
fists
inc
dec
mov
adc
mov
cmp
scas
inc
inc
jmp
push
inc
call
jno
add
add
add
add
jo
add
jo
out
jo
out
jo
out
jo
out
jo
out
jo
out
jo
out
jo
out
jo
out
jo
out
jo
out
jo
out
jo
out
jo
out
jo
out
jo
out
jo
out
jo
out
jo
out
jo
out
jo
out
jo
out
jo
out
add
out
jo
out
jo
out
jo
out
jo
out
jo
out
jo
out
jo
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
insb
faddl
call
insb
fdivr
out
fdivr
out
fdivr
out
fdivr
out
fdivr
out
faddl
call
je
jmp
insb
fdivr
out
je
jmp
jb
jmp
jb
jmp
jb
jmp
jb
jmp
jb
jmp
jb
jmp
jb
jmp
jb
jmp
jb
jmp
jb
jmp
jb
jmp
jb
add
cltd
flds
add
flds
add
add
pop
flds
add
add
dec
flds
add
add
pop
flds
add
add
dec
flds
add
flds
add
sbb
add
or
add
or
add
sbb
add
sbb
add
or
add
or
add
add
add
leave
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
jb
add
add
jo
cmp
mov
leave
jmp
mov
add
mov
repnz
xor
aas
pop
sbb
add
jge
mov
and
cwtl
inc
xchg
xchg
xchg
out
dec
jbe
push
and
and
jl
sbb
mov
push
rcrl
pop
xchg
mov
push
xchg
fwait
pop
in
mov
push
data16
sti
call
adc
inc
sbb
inc
jnp
adc
test
sbb
inc
or
stos
sbb
iret
pop
cmpsb
ds
repnz
jo
xchg
sarl
call
inc
add
orl
in
aaa
mov
aas
cmp
out
test
and
jge
dec
push
adc
push
out
mov
mov
gs
cmc
pop
add
xchg
pminub
inc
fs
test
add
stos
push
loope
repnz
add
pop
lea
add
adc
jb
sbb
stos
testb
push
xor
movl
fildl
nop
jae
add
fildl
or
fildl
xorl
dec
jle
add
fildl
bound
add
data16
int3
jae
add
jae
add
fildl
les
add
fildl
imul
add
jb
add
fildl
add
add
test
xlat
add
cltd
fldl
add
fadds
pop
xchg
aam
or
int3
adc
popf
enter
sbb
xor
jl
and
and
jno
sub
inc
jb
das
add
outsb
xor
cmp
data16
adc
cmp
fs
xor
insb
outsl
jns
jo
jge
je
popa
and
pop
pop
sub
arpl
sbb
insl
dec
mov
mov
daa
stos
mov
jge
repnz
cli
mov
out
add
xchg
xchg
pop
or
sahf
call
mov
pop
pop
imul
loop
mov
out
mov
jmp
jle
fbstp
inc
aaa
mov
dec
into
das
ret
and
push
leave
pop
fcmove
int
fidivrs
jnp
and
ja
sub
into
outsl
mov
xor
cmpsb
addr16
stos
arpl
jb
jecxz
jbe
fisttps
aam
or
xlat
adc
int3
rcll
xchg
iret
sbb
ret
jle
pop
in
mov
in
cltd
mov
call
subl
jmp
pop
sahf
cmpsl
movsb
xchg
cli
andl
bnd
out
ja
sub
add
and
pop
lea
sbb
and
mov
dec
sbb
popf
or
adc
lds
sub
in
pop
andb
xchg
push
mov
dec
mov
dec
xchg
push
add
push
add
lcall
cmp
adc
sub
mov
mov
and
mov
and
mov
lret
into
add
rcl
test
xlat
xlat
cmp
test
mov
ljmp
test
div
loope
cli
sti
int
decl
flds
add
flds
add
flds
add
add
dec
flds
add
dec
flds
add
std
add
flds
add
flds
add
add
sbb
add
sbb
add
or
add
or
add
sbb
std
add
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
cmp
ja
add
jo
add
jo
add
jo
add
jo
add
jo
add
add
add
jo
add
jo
cmp
outsl
jb
add
add
jo
add
jo
add
jo
add
jo
add
jae
cmp
testl
add
jo
add
jo
add
jo
add
jo
out
jo
sbb
cmp
pop
add
out
jo
out
jo
out
jo
out
jo
fidivs
add
pop
xlat
aaa
mov
add
out
jo
out
jo
out
jo
out
jo
popf
aaa
jo
jmp
add
out
jo
out
jo
out
jo
out
jo
data16
dec
pop
call
add
out
jo
call
add
add
jae
add
jae
add
fildl
jmp
add
call
jae
add
jae
add
jae
add
jae
add
jae
add
fildl
imul
pop
add
xchg
sbb
jg
sbb
xchg
add
jae
sub
cmc
sbb
push
adc
popa
in
adc
popa
in
adc
sub
adc
sub
adc
imul
adc
popa
in
adc
add
adc
dec
in
adc
dec
in
adc
cmp
adc
sbb
add
sbb
add
or
add
or
add
add
add
leave
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
pop
fldl
add
add
dec
fldl
add
add
pop
fldl
add
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
cmp
bound
jno
aas
arpl
movsb
ret
cltd
fs
and
xchg
ret
add
pop
es
in
add
pop
push
pop
fcmovnb
mov
shrd
fisubs
addr16
cmpsb
or
pop
sbb
adc
mov
cmpsb
cmp
lcall
sbb
sub
xor
lcall
inc
or
inc
mov
ja
jecxz
or
xchg
xchg
jnp
outsl
xor
mov
iretw
sahf
push
push
sub
loopne
jae
xchg
jmp
jle
ret
xchg
push
lods
mov
mov
or
shll
inc
imul
mov
dec
adc
jg
push
or
dec
jge
xor
sub
cli
movsl
push
jo
leave
idivl
or
jo
add
xchg
insl
add
subl
sub
aas
emms
sub
ret
mov
add
add
mov
repnz
sub
pop
sub
add
mov
or
shrl
sti
lds
xchg
inc
pop
sbb
outsb
push
stc
push
sub
dec
out
pop
push
dec
jecxz
sarl
pop
scas
mov
cwtl
push
and
pop
icebp
test
lret
xchg
fs
add
repnz
jns
cmp
nop
out
xor
das
inc
add
and
inc
mov
sub
gs
push
push
lret
push
fidivl
gs
ljmp
add
push
xchg
call
xchg
jp
inc
fisubrl
mov
xor
jp
adc
push
lcall
push
mov
movsb
aam
or
jo
jge
or
push
notl
sbb
or
test
testb
negb
imulb
mov
shl
fisubrs
jmp
int
sub
dec
inc
out
fstpt
clc
jmp
out
clc
sti
pushf
inc
testl
popf
xor
pop
pushf
xchg
pop
lret
mov
or
es
push
adc
movsl
mov
mov
mov
inc
test
in
jg
xchg
xlat
mov
mov
mov
ss
stos
mov
and
dec
sbb
add
cmp
pop
or
clc
pop
or
clc
pop
or
clc
outsl
outsb
push
and
sbb
ja
fidivl
inc
add
xor
adc
repz
jmp
pop
jmp
adc
jmp
dec
fldcw
dec
lods
xchg
jl
sti
xchg
shrl
xor
add
sti
cmp
mov
cmp
pusha
jmp
fnstsw
ret
int3
sub
pusha
mov
ret
pushl
test
cmp
shll
cmp
and
cmp
pop
cmp
add
jge
imul
jp
cmp
loope
aas
mov
fstpl
ds
mov
dec
sahf
mov
add
mov
add
fiadds
add
inc
mov
jge
push
xor
push
xor
sub
dec
test
pop
dec
jmp
cmp
xor
dec
jl
sub
aaa
jecxz
fdivrl
jbe
jne
in
sub
roll
cmp
cmp
stc
cmp
inc
sbb
cmp
inc
inc
cmp
inc
popa
cmp
inc
mov
inc
xchg
cmp
inc
mov
addb
add
cmp
dec
or
gs
out
xor
pop
fucomp
inc
push
push
out
push
dec
lahf
in
push
cmp
dec
in
sbb
adc
push
cmpsb
jecxz
addr16
push
jmp
popl
add
add
jo
repnz
dec
lock
jno
je
shr
testb
divb
test
cmc
sub
imul
inc
cmpsb
jl
je
cwtl
ret
mov
in
lock
in
data16
jmp
adc
jmp
adc
add
adc
adc
cmpsb
out
ja
es
ficoml
popa
in
xor
mov
pop
adc
in
mov
mov
jae
fisttpl
jo
or
push
or
repz
or
icebp
cmp
jmp
lock
or
ret
or
testl
mull
imul
push
pusha
notl
pop
add
mov
sub
xlat
mov
fnsave
lock
ja
sti
pushf
mov
aaa
xor
pop
cmp
jbe
push
pop
nop
cmp
dec
mov
cmp
add
cmp
outsl
cmp
dec
xchg
aas
in
sbb
pop
and
popf
daa
jle
sub
lret
cli
pop
sahf
inc
fwait
or
sahf
das
mov
into
repz
mov
out
ret
adc
adc
mov
sub
fimull
fwait
out
sbb
cmp
cltd
push
mov
push
xchg
fcompl
sti
xor
xchg
fdivrl
push
push
fdivrl
push
push
faddl
cmp
out
push
xorb
mov
les
push
pop
fcompl
adc
push
add
mov
fdivrl
push
jo
push
cmp
add
pop
add
dec
add
mov
sbb
aad
add
fsubrl
sbb
add
dec
shl
or
add
in
mov
fcoms
add
inc
add
jo
mov
add
add
jo
add
jo
lods
jmp
inc
add
jo
lods
call
call
add
nop
add
pop
add
fiaddl
add
fildl
add
mov
es
jns
push
mov
mov
dec
or
add
or
fildl
add
fstpt
add
in
add
aam
adc
sarl
lret
mov
lods
sahf
mov
test
lds
test
into
movsb
lcall
les
add
jae
add
jae
add
out
fimuls
test
mov
and
mov
or
ret
addr16
loopne
and
stc
and
insl
or
dec
decb
mov
add
sarl
popw
imul
aad
add
ljmp
push
fmuls
jmp
jae
add
je
add
into
add
je
add
and
push
add
fisubs
sub
add
imul
mov
in
jb
add
imul
mov
dec
jg
je
mov
decl
imul
mov
inc
mov
ss
add
imul
dec
jl
imul
sbb
dec
add
push
gs
andb
fiadds
add
jl
dec
inc
jg
gs
outsl
arpl
sbb
jns
xor
add
sahf
push
test
ja
bound
mov
add
sahf
push
jne
mov
outsb
and
scas
adc
and
sub
ret
loop
out
in
shrl
jo
mov
sbb
add
jo
mov
push
shlb
sub
jo
lahf
int
scas
sub
rcll
fs
pop
add
fldt
mov
dec
sti
stos
xchg
add
fstpt
popf
mov
scas
mov
cmp
test
inc
lods
jae
dec
mov
cmpsb
mov
jo
aaa
mov
scas
pop
add
add
fistpl
add
fldt
add
fistl
add
fistpl
add
fcmovne
add
fcmovnbe
add
fistpl
add
fistpl
add
jnp
add
je
add
insb
fildl
fimull
pushf
add
mov
lods
jae
add
pop
fwait
add
fwait
add
jg
add
xchg
add
gs
add
gs
add
test
add
lcall
pop
fwait
add
pop
lcall
cmp
pushf
add
je
add
insb
mov
add
add
je
xchg
fists
filds
add
fildl
add
add
fildl
add
sub
aaa
fildl
add
add
add
add
fiaddl
add
fiaddl
add
sarl
add
aas
add
sarl
add
sarl
add
aam
add
aam
add
fiaddl
add
jns
cs
xlat
aas
add
inc
add
repz
jo
hlt
inc
jo
cli
inc
jo
push
dec
in
test
xor
mov
adc
pop
popa
add
inc
shrl
fldl
mov
incl
daa
lea
pop
and
xchg
mov
iret
popa
mov
incl
lea
pop
add
fldl
mov
jmp
or
pop
in
ja
cs
shlb
jne
mov
pop
push
subl
mov
rolb
fdivl
pop
rorl
jo
push
sbb
fstpt
ljmp
les
jo
scas
mov
inc
daa
rolb
fistpl
lret
pop
inc
lret
add
fcmovnbe
add
fcmovne
add
add
lods
les
cwtl
cltd
cmpsb
push
iret
mov
jo
movsl
les
lcall
mov
scas
les
popf
jnp
and
dec
cmpsl
and
sub
xchg
add
push
fwait
jg
dec
sbb
fildl
les
add
lcall
add
mov
jb
adc
addr16
add
fs
into
sahf
js
jae
add
fistpll
jb
rol
addr16
rcrl
mov
jae
add
jae
add
mov
pop
jae
add
jae
add
jae
add
mov
inc
insb
fildl
jmp
jne
lcall
scas
jge
add
jb
inc
insl
jae
gs
call
jo
jb
insl
jns
dec
filds
add
inc
jb
js
fnsave
sub
call
push
jb
js
fsubrl
jb
insb
outsl
arpl
push
jne
insb
jns
out
outsl
jb
ja
imul
out
gs
fiadds
add
imul
jae
push
inc
insl
gs
sub
cmpsb
cwtl
incl
test
mov
outsl
clc
test
scas
xchg
cwtl
inc
int3
call
mov
jo
add
add
jo
add
jo
add
jo
add
jo
add
jo
add
xchg
inc
jo
add
sbb
arpl
jo
add
test
outsl
jo
add
add
imul
jo
add
popa
add
adc
dec
jo
add
add
movb
jo
add
fistpl
fildl
fistpl
sbb
ds
add
fstpt
add
fisttpl
cmp
fistpl
add
add
fistpl
add
fistl
add
ret
add
fildl
add
fildl
test
fcmovnb
add
fcmovnbe
add
xchg
movsl
loop
xchg
popf
loop
inc
rol
inc
rol
loopne
jge
lret
cs
enter
lods
sub
int
cltd
ror
push
push
clc
int3
jo
popf
icebp
jne
fucomp
bound
mov
sub
add
int3
jo
dec
icebp
jne
std
in
gs
sbb
mov
cmp
incl
popa
or
add
fildll
add
jae
add
pushf
push
mov
xchg
add
and
add
or
movsb
lods
inc
test
popf
dec
add
fildl
add
sbb
add
fildl
add
adc
bound
add
inc
inc
push
push
dec
push
jle
decl
mov
incl
decl
paddd
jns
dec
push
pop
sbb
popa
xlat
add
mov
dec
inc
or
add
fcoml
push
inc
sbb
add
fmull
add
sbb
fiaddl
add
or
dec
pop
leave
fiaddl
add
outsl
add
jo
mov
sub
lret
dec
outsl
push
jo
mov
jo
rolb
add
jo
mov
pushl
test
jae
xchg
stos
lcall
xchg
outsb
fdivr
out
stos
fs
stos
outsb
into
xor
add
test
jae
fcomps
incl
pop
and
adc
insl
xchg
jge
push
jo
xchg
bound
sahf
fs
stos
je
fistl
mov
dec
mov
mov
push
lret
jo
adc
jnp
add
add
add
fisttpl
mov
mov
add
sub
fistpl
mov
cli
pop
mov
dec
shll
push
add
fcmovne
add
fstpt
xor
fcmovnb
xor
fildl
in
fildl
iret
xchg
lcall
jle
add
jge
add
jne
add
jb
add
lcall
push
lcall
add
add
lcall
test
lcall
xchg
lcall
insb
leave
add
je
add
jae
add
je
add
insb
lods
add
jae
add
jae
add
jae
add
jae
add
add
add
fdivs
mov
outsb
add
xlat
inc
add
xlat
insb
add
in
xlat
inc
add
fsubs
push
fcomps
xlat
xor
fst
js
lods
xlat
xor
insl
xlat
js
inc
xlat
and
sbb
add
push
xlat
push
add
add
ja
je
mov
filds
add
aas
add
fidivrl
add
inc
add
pop
inc
add
add
inc
add
and
inc
add
and
es
jo
sbb
cmpsl
sub
inc
cmovno
or
add
jne
gs
add
dec
add
add
mov
outsb
jo
add
pop
add
mov
jo
add
jo
add
jo
in
jo
add
jo
add
jo
xchg
insb
jo
stos
js
fnop
jl
std
add
jo
xor
xor
cmp
inc
in
xchg
sub
fldt
inc
sbb
xor
add
imul
adc
fisubl
cmp
iret
inc
push
sub
inc
xor
xor
pop
adc
je
jbe
jo
bound
fisttpl
shlb
test
dec
jae
negl
jnp
addr16
test
dec
lcall
pushf
add
jmp
stos
dec
jmp
cld
out
jo
addr16
jg
dec
pop
imul
test
fnstenv
ficoms
imul
add
icebp
jg
push
repnz
xlat
xor
rcrb
inc
lcall
and
add
mov
add
adc
adc
and
xchg
sbb
outsl
movsl
pushf
adc
jmp
jo
sbb
jno
sub
inc
faddl
and
sub
sub
aas
rcrl
fsts
cmp
ljmp
cmp
sub
adc
push
iret
cmp
pop
fidivrs
cmp
faddl
add
xchg
scas
lods
add
scas
lods
add
fildl
add
and
rorb
and
add
mov
repnz
mov
adc
test
pop
mov
shll
xchg
stos
add
stos
mov
adc
add
and
mov
add
cld
in
jo
sub
adc
loopne
pusha
and
adc
or
add
mov
and
stc
pop
cmp
sub
lcall
sti
lds
add
inc
sub
mov
and
jg
inc
es
sbb
jb
jl,pt
ret
aas
loopne
push
mov
add
mov
sub
and
mov
movsb
jbe
inc
add
jo
xchg
in
jg
jo
dec
mov
add
out
jo
in
jle
adc
pusha
mov
or
xchg
xchg
mov
lds
add
ljmp
xlat
int
rcr
or
div
adc
or
xchg
test
imul
xchg
call
adcl
andb
pop
incb
insl
cwtl
push
mov
mov
fistpl
sub
add
mov
insb
test
mov
sub
pop
xchg
inc
jmp
stos
scas
jne
pushf
inc
adc
rcll
mov
mov
mov
and
mov
roll
in
out
adc
dec
mov
dec
stos
add
mov
fstps
inc
jmp
xor
ret
js
cmp
push
shrb
cmp
aam
sbb
fstpt
cld
add
add
dec
inc
lahf
outsl
daa
sub
sbb
mov
dec
pusha
insb
pusha
inc
jnp
js
inc
jb
jg
ja
ljmp
arpl
scas
in
stos
mov
lock
xlat
add
clc
movsb
mov
mov
mov
inc
mov
add
xlat
add
or
jg
arpl
add
cmpl
js
or
pop
cmp
pop
inc
push
jo
mov
repnz
jl
movsl
mov
decl
cmp
aaa
mov
push
xorl
add
add
lahf
jp
sub
mov
jp
xor
add
add
jo
stc
jle
cmp
push
dec
pop
insb
xchg
dec
test
cmp
sbb
pop
stos
cmp
shrb
sub
jnp
and
xor
cmp
push
div
pop
fwait
cmc
clc
rclb
add
jo
sub
test
xor
nop
cs
sub
push
lds
mov
sub
shlb
test
mov
cmpsb
fnstenv
jo
paddusb
fcmovnu
shrb
pushf
les
fcomi
add
fsubp
out
jne
in
sti
push
pushf
idiv
dec
int3
cli
clc
jl
lcall
adc
jnp
xchg
mov
dec
int
jb
cmp
jae
add
data16
jmp
js
dec
fistps
jae
add
lcall
ja
dec
sub
fisttpl
into
xchg
push
loope
xchg
rorb
or
rolb
push
mov
shlb
sbb
xor
pop
ret
sbb
push
rcrl
lods
xchg
inc
ret
inc
mov
lock
scas
fcomp
inc
cmpsb
enter
fidivrs
push
cltd
faddl
add
xchg
mov
sub
ljmp
fiadds
add
out
aad
xchg
into
ret
faddp
adc
int
xor
aad
mov
dec
pop
test
dec
outsb
push
dec
dec
test
js
pop
dec
add
faddl
add
mov
add
test
repnz
mov
add
scas
mov
cmc
mov
mov
jo
adc
mov
iret
push
in
loop
in
lea
add
mov
sbb
scas
push
mov
cli
vmaxsd
mov
add
mov
jo
mov
sar
inc
mov
sti
stos
call
sahf
fs
stos
push
mov
lret
mov
jo
shll
mov
in
sub
inc
add
jo
pop
mov
neg
pop
shrb
add
mov
mov
cmp
fucomi
jne
mov
cmc
add
out
jo
mov
xor
ds
sub
pop
call
arpl
gs
add
data16
jo
pop
jmp
push
jns
jbe
je
andl
push
imul
call
dec
into
pop
movsb
adc
push
and
pop
icebp
jo
arpl
jle
add
cs
stos
sub
sub
and
sub
pop
das
xor
dec
fildl
loop
into
xor
mov
sbb
mov
adc
jae
add
push
xor
rorb
fildl
loopne
shlb
flds
or
jae
add
jo
repz
popl
movsb
je
jg
arpl
loope
popa
xor
mov
jnp
jae
add
ss
cmp
je
loop
jae
add
push
mov
mov
leave
fadds
add
dec
jbe
out
push
add
incl
fadds
add
mov
add
push
int
out
loopne
sarl
vpxor
enter
pop
pushw
dec
imul
sarl
xchg
add
popf
int3
fsubr
cmpsb
leave
xchg
mov
adc
or
add
xor
lret
fcompl
mov
add
jo
js
mov
mov
test
inc
add
jo
cmp
faddl
add
notb
jo
aad
popa
and
xor
pop
dec
and
sub
xor
add
or
add
ret
pop
dec
cmp
sub
aad
xor
add
inc
in
push
xorb
ss
adc
and
repnz
pusha
out
iret
fildl
sbb
inc
push
push
or
dec
push
shll
cmp
insl
xchg
dec
adc
push
ret
subb
jno
out
inc
sub
mov
cld
add
jo
or
jl
pop
ret
sbb
jbe
pop
gs
bound
loopne
es
and
jle
jo
movsl
inc
sub
xchg
cmp
les
sbb
lds
and
push
jo
xor
cltd
mov
add
sbb
fdivrl
imul
sub
pop
xor
int
test
lea
mov
les
push
int3
push
jae
add
pop
adc
and
jmp
cmpl
jae
add
xchg
rorb
jmp
xor
rcrb
aas
fnstcw
shll
mov
ja
js
insl
scas
sbbb
mov
iret
cs
arpl
pop
sub
push
loop
add
sub
add
movb
or
push
add
es
sbb
and
adc
sub
or
sub
into
and
or
ficompl
add
into
jmp
jns
idivb
leave
out
mov
add
sahf
sbb
sub
xchg
add
pop
and
or
xchg
mov
testl
test
add
push
movsl
fsub
jg
int
push
mov
int
dec
mov
cld
inc
inc
mov
pop
inc
mov
push
add
push
jns
fistpll
lods
dec
jo
adc
shrl
jo
mov
jnp
je
insb
push
popf
jb
xor
add
cmc
push
add
aad
jo
aam
sub
lret
fdivrp
inc
adc
loop
or
rcrb
imul
and
iret
aam
outsb
out
jmp
fmull
add
jmp
pop
jbe
icebp
or
icebp
pop
call
add
cltd
and
sbb
cmc
adc
xchg
sbb
cmp
popf
adc
push
fistpl
mov
ja
mov
cmp
mov
push
insb
fldt
jmp
jo
mov
jb
jmp
jl
push
or
jne
sub
pop
push
jecxz
pushf
int
aam
ret
mov
inc
push
jl
add
scas
aam
sub
add
mov
insb
push
call
add
dec
mov
jae
add
add
fildl
pop
mov
xadd
leave
sbb
sbb
mov
adc
sti
xor
pop
flds
jg
jmp
lcall
pop
jne
cli
dec
add
les
xor
xchg
jmp
xchg
mov
jo
arpl
add
mov
mov
mov
dec
mov
mov
test
mov
ja
out
inc
push
xchg
test
js
lcall
add
int
and
pusha
clc
and
call
push
xchg
adc
jbe
lods
add
cmpsl
cmp
xor
xchg
lods
imul
mov
add
mov
mov
mov
xchg
test
mov
inc
push
lods
adc
cltd
pop
add
pushf
nop
repnz
sbb
mov
xchg
mov
add
xchg
lcall
sahf
mov
inc
add
jo
dec
pop
daa
pop
dec
dec
dec
inc
and
aas
jb
inc
xor
add
fs
pop
sub
xor
pop
jp
aaa
insb
cmp
cmp
rcr
push
add
cld
or
mov
je
scas
pop
adc
out
push
jge
sysret
jge
push
mov
mov
xlat
ss
out
xor
shlb
sti
lret
aas
lods
clc
into
ds
pop
jb
in
adc
add
add
inc
daa
andl
add
add
shl
adc
lea
adc
jnp
fistpll
jae
fisubs
xor
into
movsl
jbe
lods
rcrl
std
mov
pop
and
nop
add
scas
lea
mov
inc
sub
cmpsb
mov
inc
int3
jno
ds
inc
scas
dec
add
xor
cmp
lret
xchg
push
lods
sbb
push
push
xchg
gs
xchg
insl
fildl
pop
cld
inc
test
cld
ds
dec
cld
inc
xchg
push
mov
xor
decl
scas
call
popf
jno
pushf
jne
hlt
loopne
sub
sti
cs
rcl
adc
mov
adc
rolb
add
enter
jmp
das
adc
fdivl
mov
sub
in
das
sub
and
es
in
xor
adc
ficompl
mov
fcomps
sbb
les
mov
sbb
jo
arpl
cmp
fmul
xlat
xor
jo
mov
mov
dec
call
imul
add
jo
sahf
cmp
test
xor
add
pop
adc
sbb
jo
jne
add
ja
and
jo
xlat
clc
push
push
stc
cld
or
add
jo
or
jne
jnp
inc
add
popa
jo
aaa
inc
inc
jo
mov
add
fiaddl
icebp
mov
and
movsl
add
fisttps
push
frstor
jge
fdivrs
inc
lods
fistpl
xor
ljmp
pop
push
dec
xchg
mov
cmc
insl
je
idivl
stos
shlb
jo
stos
fstpl
jns
in
fstpt
fsubrs
nop
movsb
sbb
fisttpl
jp
push
mov
out
jo
cmp
rcrb
inc
in
movsl
sub
add
fildl
or
xlat
add
or
add
jg
jnp
xchg
jae
add
pop
fwait
pop
repnz
nop
hlt
push
xorb
push
xor
add
hlt
push
sahf
cmpsb
rorl
pusha
out
dec
mov
sub
mov
push
or
mov
fildl
push
and
mov
pop
pusha
imull
outsb
mov
jmp
imul
imul
inc
pushf
xchg
add
xchg
scas
push
out
and
mov
bound
cmp
das
ss
fnsave
aas
add
gs
call
inc
add
ss
sub
out
xor
cld
scas
sbb
add
push
mov
aas
inc
cmp
pop
dec
mov
xchg
dec
inc
mov
or
sbb
add
jo
icebp
icebp
mov
out
int3
mov
mov
add
cmpsb
in
fisubs
fidivrs
in
pusha
sti
pop
out
scas
pop
fcoml
sub
xchg
mov
ja
push
fistpl
fs
sub
dec
shlb
add
mov
add
sub
inc
or
popa
js
and
lea
and
fistpl
das
test
or
sbb
add
pfnacc
push
or
inc
aam
arpl
cwtl
jge
mov
hlt
jne
fistl
aas
xor
shll
add
lds
mov
pop
cwtl
fildl
dec
push
mov
loopne
test
jnp
movsb
and
mov
push
push
sar
mov
scas
das
inc
cmp
lock
movsb
sahf
out
jo
mov
leave
mov
fildl
ja
iretw
jmp
outsl
out
xchg
cltd
inc
mov
filds
jnp
das
mov
fstps
decb
adc
mov
jae
add
jae
add
jmp
add
mov
enter
fildl
cmp
sub
sub
adc
scas
add
mov
inc
aad
mov
shrl
rclb
mov
add
pop
or
jmp
test
lret
mov
das
into
dec
fiadds
add
imul
mov
push
cmpsb
mov
cmp
xchg
cltd
fldl
add
cltd
rorl
and
xchg
ret
xchg
pop
cmp
fldl
add
test
xchg
filds
add
xor
jle
jb
imul
cmp
clc
outsb
push
sub
add
dec
push
sarb
rclb
or
xor
or
add
dec
push
and
or
inc
dec
push
push
dec
inc
dec
inc
dec
push
inc
dec
aas
sbb
jp
add
jbe
push
cmp
pusha
arpl
outsb
push
insb
dec
addr16
push
pop
and
fistps
ja
nop
push
jle
pop
add
jo
mov
jmp
mov
subl
add
add
pop
push
movsb
add
add
pushf
incl
jo
mov
mov
mov
ret
mov
push
inc
mov
pop
xor
test
pop
mov
pop
jl
jg
fisubl
fs
lret
mov
fs
push
and
movl
jo
jg
jo
jg
jo
das
jo
xor
jg
jo
jg
jo
dec
pop
fistl
jo
pop
jbe
fstpt
jbe
fisttpl
jo
jmp
ljmp
flds
repz
in
repz
in
jecxz
in
sbb
addr16
fildl
cmovle
add
dec
mov
xchg
fildl
jmp
xor
sahf
dec
mov
mov
push
cwtl
and
scas
pop
shrb
mov
test
mov
jecxz
jb
fists
jp
jl
xor
and
fildl
jmp
mov
and
push
lea
dec
xchg
jne
inc
test
sub
mov
inc
inc
lea
dec
test
push
pop
mov
push
insl
ret
and
insl
ret
pop
pop
jecxz
pop
pop
xlat
test
popa
stos
jl
gs
subb
mov
insl
js
jno
flds
add
mov
mov
sub
ja
fcmovu
dec
add
fnstenv
int
push
add
fsubs
sahf
fbstp
add
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
filds
jo
add
and
jae
jo
add
add
sub
outsb
jo
add
push
add
push
add
jno
jae
add
add
add
jo
add
jo
add
jo
add
jo
add
xchg
add
fisttpl
rcr
inc
add
fistpl
jo
and
add
fisttpl
mov
aaa
lcall
cmp
mov
xlat
xor
mov
fistpl
dec
xor
lret
push
and
mov
push
dec
mov
add
fcmovnbe
popa
or
ja
fisttpl
add
add
inc
fcmovnu
add
fcmove
add
fcmovnb
add
fcmovne
add
fildl
jmp
ja
add
push
sahf
add
into
rolb
jne
jae
add
sahf
add
mov
adcl
js
jmp
inc
mov
std
mov
jae
add
and
add
and
add
inc
xchg
jae
add
fwait
popf
add
jae
add
jae
add
jae
add
jae
add
add
add
aas
fisubs
rcr
add
add
dec
fiadds
add
fiadds
add
mov
adc
mov
xor
mov
or
xchg
fstps
je
test
jle
xchg
push
test
mov
adc
adc
jae
stos
push
ret
cwtl
fldl
inc
mov
adc
add
xchg
lret
shr
dec
add
sbb
add
jnp
rcll
rorl
add
add
ret
lret
dec
xor
jge
sub
pop
or
sub
or
iret
std
orb
inc
clc
enter
inc
inc
mov
mov
add
mov
ja
inc
int3
mov
mov
fadds
ror
push
push
scas
daa
cli
out
popf
add
jmp
test
sbb
inc
jg
leavew
ja
cmp
outsl
adc
jnp
in
adc
jmp
pop
adc
aam
jb
test
pop
jo
jg
mov
adc
pop
sbbb
enter
out
xor
aaa
fimull
adc
movsl
mov
ret
fildl
mov
adc
fstl
add
xchg
pandn
out
adc
xchg
xlat
jo
insb
int3
mov
ret
mov
out
jo
in
add
test
arpl
push
add
out
cltd
paddd
lods
ret
bound
jo
and
mov
add
xchg
sahf
pop
mov
mov
out
add
xlat
call
ds
dec
jne
jecxz
jmp
icebp
jae
ljmp
fucomip
mov
insl
sbb
in
ja
les
jmp
fcmovnu
xchg
push
aad
adcl
sbb
jo
push
jb
pop
in
cmc
add
add
vxorps
xchg
jns
jns
fsubr
pop
mov
add
dec
sbb
inc
sub
fiaddl
lcall
andl
fiaddl
popf
out
mov
sbb
add
or
mov
lea
lea
mov
add
pop
sbb
jb
std
push
int
mov
add
xchg
inc
and
test
std
je
in
call
mov
in
adc
mov
jle
je
ds
adc
cwtl
or
jg
fiaddl
add
sub
adc
ja
inc
add
cmpb
scas
gs
lcall
mov
insb
mov
add
push
inc
add
lcall
add
loopnew
add
jo
fisubl
add
incl
sub
jae
push
push
mov
mov
jne
mov
push
lea
sbb
cmp
add
rclb
inc
clc
xchg
mov
mov
jl
adc
aam
cli
xchg
jg
xchg
inc
dec
mov
inc
xchg
rep
je
mov
jl
fsubl
add
sbb
xchg
jl
mov
call
push
mov
mov
jo
test
add
and
jg
outsl
dec
out
cmp
xorl
add
mov
clc
imul
out
push
add
or
jmp
xlat
mov
jmp
push
lods
call
loopne
jmp
xlat
mov
jmp
out
mov
add
jae
jmp
stc
add
pop
and
cltd
sahf
and
mov
repz
fstpt
and
imul
and
push
mov
out
insb
stc
fildl
jmp
mov
jmp
jae
test
inc
or
dec
mov
dec
mov
add
and
jns
ds
dec
push
cmp
add
add
adc
decl
pop
and
loop
adc
adc
add
mov
add
rorb
mov
lcall
test
add
fiadds
xor
mov
test
or
xchg
xchg
add
jns
fmuls
icebp
test
andps
imul
jmp
dec
incl
out
clc
aas
push
adc
jno
or
fdivp
jmp
dec
out
je
push
jo
inc
lea
add
cmc
mov
mov
pmulhuw
sbb
add
into
and
add
jo
ja
push
into
lods
jo
add
dec
hlt
mov
xor
sbb
fstpt
sbb
call
add
dec
int3
cmpl
sbbb
push
sub
mov
in
mov
out
jg
add
mov
fildl
jo
sub
int3
daa
sub
and
js
lods
mov
adc
sti
xchg
fcmovnu
push
sub
add
pop
add
ret
pop
mov
mov
in
xlat
sbb
jl
add
insb
vaddsubps
pop
stc
dec
fmuls
mov
cmp
xchg
jno
movsb
pop
stos
cmpsl
pop
push
bound
mov
jmp
sahf
or
incb
push
stc
mov
cmp
or
fisttpl
push
enter
mov
je
movsl
std
inc
shr
jge
push
mov
mov
aas
or
in
jae
rol
push
inc
cmc
clc
inc
jne
or
mov
pop
pop
test
ljmp
jmp
pushf
add
add
or
xor
mov
movsb
or
cltd
stc
je
add
add
adc
fiaddl
jge
fidivrl
add
inc
data16
cmp
jnp
xor
and
add
push
push
jecxz
std
jne
in
idiv
lods
shr
popf
push
stc
decb
or
fimuls
insb
aad
call
jmp
mov
and
je
cmp
out
loope
iret
mov
aaa
call
lret
arpl
ret
aaa
push
jmp
mov
mov
add
fcoms
jmp
imulb
cmp
push
filds
add
mov
pop
xor
add
out
xor
sahf
insl
jecxz
mov
popf
sub
clc
push
mul
add
cmp
sub
or
aad
test
inc
mov
je
sub
aaa
loope
ja
inc
jo
movsb
adc
pop
push
popf
and
out
enter
imul
popf
bound
push
cmpsb
dec
push
ret
cld
xchg
sar
cld
pushf
fwait
xor
add
outsl
xchg
xchg
clc
cmpsl
jge
dec
add
jb
jl
sub
ja
add
xor
xchg
popf
push
push
mov
push
pusha
mov
std
hlt
mov
inc
jmp
xor
bound
sbb
jmp
adc
call
jne
or
add
push
in
jae
ljmp
pop
es
std
faddl
outsl
add
icebp
nop
mov
movb
in
jae
add
xor
idivb
jg
add
jl
gs
fistl
in
and
adc
add
push
out
xor
out
je
out
xorb
xor
nop
mov
dec
inc
fnstcw
inc
xchg
jns
inc
test
test
movsb
dec
subb
test
add
fsubrp
nop
add
xlat
add
lret
jno
fidivs
rolb
js
fisubs
xlat
xchg
jmp
ja
push
hlt
je
push
imul
stc
cmpsl
add
aad
jb
loop
jo
lds
les
add
incb
insl
int
push
hlt
mov
mov
jo
sbb
jl
sbb
test
nop
sub
add
add
iret
cmp
inc
push
or
sti
cmp
in
mov
xor
cwtl
sar
jo
push
and
mov
jmp
mov
and
icebp
xchg
inc
dec
adc
rcll
shrl
mov
jg
rorl
pop
jl
adc
push
stc
pop
popf
or
cmc
imul
push
data16
fisubs
stos
divb
xchg
iret
out
jle
sti
fdivrl
inc
movsb
stos
into
mov
pop
hlt
fsubl
inc
addb
hlt
mov
scas
push
mov
testb
inc
fucom
cmpl
push
insb
int3
cmpsl
jmp
mov
cmc
mov
jg
and
out
push
jmp
das
cmc
cwtl
std
xor
add
mov
mov
mov
insl
dec
inc
add
cmp
push
subl
test
testl
add
jae
shll
push
jbe
push
stc
fbld
jmp
bound
loope
int3
add
ja
xchg
je
sub
pushw
call
inc
sub
pop
fnsave
test
mov
inc
adc
jb
push
repz
or
outsl
add
test
outsb
add
sbb
inc
pslld
lahf
fisttps
pop
rol
jno
inc
add
add
sbb
mov
jmp
mov
orb
inc
or
add
stc
in
inc
add
xor
pop
jmp
leave
dec
not
mov
out
add
xchg
add
int
inc
icebp
mov
inc
mov
xlat
jg
ljmp
cli
cmpsb
fadds
add
hlt
ljmp
and
add
add
out
cwtl
dec
push
xor
xor
push
in
xor
jnp
xorl
test
xor
inc
add
inc
add
add
inc
add
ret
and
loope
mov
inc
ljmp
jecxz
inc
jo
adc
add
xchg
hlt
push
shr
orb
mov
inc
shrl
inc
jo
rorb
and
mov
out
test
sub
in
dec
fidivl
cld
notb
cmp
les
cli
les
cmpsl
out
stos
mov
cltd
out
add
inc
jo
movsl
fstpt
fwait
out
filds
fiaddl
lock
cld
xchg
jo
stos
insb
rolb
add
out
negb
xchg
mov
jo
cmp
jo
lea
inc
jo
aad
pop
pop
sub
cld
add
xor
hlt
xchg
pop
cltd
std
test
add
ljmp
xchg
jmp
lods
xchg
sub
mov
mov
and
std
mov
add
sbb
adc
lahf
pop
sbb
lods
ja
jbe
pop
xchg
and
inc
fwait
mov
scas
xlat
xor
enter
sbb
fadds
popf
ret
movsl
xor
and
and
add
incb
cltd
xlat
add
pop
and
call
xchg
and
adc
or
stos
and
fwait
cli
pop
pop
dec
aam
push
rolb
sub
lods
std
jne
pop
popf
lcall
test
jmp
stos
adc
aam
into
dec
lds
sbb
or
aam
loop
pop
ffreep
inc
sbb
dec
inc
or
cld
mov
mov
cmp
into
js
add
fimuls
adc
hlt
push
dec
xchg
adc
jo
es
flds
sub
add
inc
subb
sub
add
inc
pusha
aam
inc
jo
pop
adc
push
hlt
jo
and
xor
add
fsubrl
call
jo
lret
ja
mov
stos
mov
cltd
imul
or
add
inc
or
scas
cmc
sub
sbb
inc
fisubl
cmp
jmp
mov
aam
push
xchg
pop
popf
stc
jle
and
out
iret
subb
xorl
sub
bound
pop
arpl
data16
mov
daa
stos
cmpsl
add
sub
mov
sub
dec
push
movsb
or
notb
outsb
outsb
lret
int
jecxz
dec
ja
ret
push
imul
pop
push
cmp
mov
out
or
add
clc
add
jmp
jmp
call
lahf
adc
fucomp
cmpb
std
push
cmpsb
lahf
or
add
pop
fs
adc
out
lods
and
pushw
mov
add
call
out
inc
loope
jle
cmc
mov
filds
push
jb
out
lock
xchg
fisttps
fnsave
out
call
push
popf
add
divl
fildl
call
push
ss
push
add
sub
stos
push
mov
outsb
test
push
testb
push
dec
filds
add
fs
ret
incl
mov
mov
sub
add
dec
fldt
inc
ret
mov
stos
call
push
pop
dec
fadd
js
add
fisttpl
mov
add
mov
incl
or
jns
push
or
mov
xor
jecxz
jo
pop
std
out
add
out
push
add
jo
add
mov
lret
mov
out
cwtl
mov
lcall
pop
add
jo
lret
ret
sbb
dec
jecxz
jo
cmp
push
rcll
push
inc
add
movl
push
imul
mov
fdivrl
xor
add
jmp
pop
push
mov
jge
test
mov
fisubrl
xor
mov
mov
jo
stos
iret
cmc
out
cmc
pop
pop
add
aaa
rcrl
sub
push
jo
pop
mov
push
out
sti
icebp
jg
jb
out
mov
jo
outsb
add
out
in
pop
inc
push
jo
xchg
fucomi
add
pop
aam
jo
mov
xor
add
es
pop
jno
das
fcomi
idiv
sarl
add
sub
adc
imull
je
jmp
out
xor
xchg
fildl
jmp
jae
xchg
fildl
jmp
mov
js
push
pusha
dec
xor
enter
sub
int
jmp
jae
push
out
sub
ljmp
push
movsb
fcos
call
insb
fildl
mov
jae
push
push
fstps
add
jne
xchg
sbb
add
shrb
add
dec
jecxz
decl
pop
mov
mov
cwtl
scas
mov
imul
add
sbb
xlat
addw
ret
jge
into
shlb
mov
add
add
push
int3
push
movsb
add
push
cli
add
pop
scas
std
xlat
ficompl
or
dec
pop
loope
sbb
add
dec
pop
push
in
xchg
leave
add
jo
xor
test
push
pop
add
pop
call
les
ja
inc
fadds
dec
jo
sti
cmp
lcall
jo
jge
js
add
or
addb
jg
ljmp
add
dec
add
addr16
jno
add
jo
push
shll
mov
push
mov
add
push
lret
pop
jo
hlt
incl
jo
sbbb
orb
sub
jne
daa
jmpw
sbb
out
inc
outsb
out
ja
out
mov
jb
lock
out
add
fldt
lock
into
mov
ja
jo
aaa
sub
add
shlb
push
jl
repz
add
xchg
jp
jecxz
mov
data16
push
dec
sub
sti
pop
mov
repnz
test
in
jo
add
adc
jae
call
push
mov
jmp
insb
fildl
cltd
lock
and
sub
int3
call
jmp
pop
inc
add
jae
pop
iret
pop
in
jae
dec
add
add
dec
add
jae
cmpl
popa
mov
pop
mov
std
push
mov
adc
xor
cmp
xorl
push
pop
outsl
daa
popa
dec
orb
mov
and
aam
movsb
add
push
lcall
push
inc
sbb
and
jne
scas
or
add
xlat
ret
sbb
shr
jb
and
or
dec
add
fsts
sbb
enter
sbbb
dec
push
push
pop
cmpsl
std
je
mov
push
push
jmp
cmp
xchg
mov
jecxz
jge
cmp
nop
xchg
or
jge
adc
push
push
add
pop
stos
std
adc
jo
inc
and
jnp
int
add
subl
add
repnz
daa
push
and
xor
jo
shlb
adc
dec
rorl
push
pop
adc
push
int
xchg
in
push
out
icebp
adc
add
ret
push
out
or
cmc
xchg
cmpsl
sti
xchg
add
inc
add
bound
jmp
cmpb
sbb
aas
jo
and
jg
sbb
adc
daa
push
in
jl
sub
lds
pushf
jle
pop
dec
hlt
mov
lret
cmpsl
add
mov
ss
mov
sti
testl
insl
les
jle
shl
inc
jo
cmp
push
fs
adc
in
mov
jns
out
aaa
sbb
cmp
inc
out
adc
add
push
test
jnp
cld
iret
xchg
add
jbe
inc
loope
outsl
or
mov
cwtl
std
call
add
pop
xor
andb
fistl
bound
cld
push
cmp
mov
lods
add
jno
ja
adc
je
test
cmp
lret
pushf
mov
insb
adc
std
scas
fs
adc
pop
cmp
xchg
test
leave
inc
add
test
sub
fsubrl
std
mov
insb
mov
jge
sahf
jae
jle
jl
pop
jns
inc
sbb
and
test
pop
pushf
add
sbb
or
and
jno
xlat
add
ret
sbb
rolb
mov
pop
add
add
xlat
push
push
lea
pushl
push
add
inc
lock
adc
inc
fimull
push
xor
testb
leave
inc
inc
jl
jne
adc
inc
sbbl
inc
das
xor
clc
js
fnstsw
add
add
and
in
pushf
das
jl
out
ret
dec
stos
add
mov
sub
sbb
enter
mov
inc
test
push
or
out
pop
add
push
or
aaa
inc
jo
pop
and
mov
js
adc
pop
sub
ret
pop
fwait
out
add
xchg
inc
xchg
fucomip
sub
xchg
mov
add
and
jp
mov
js
rorl
daa
xchg
out
movsb
xlat
pusha
add
insb
lods
daa
fistpl
jge
jo
loope
insb
sarl
fidivl
cmpsl
inc
jmp
idivl
sub
mov
jmp
push
add
mov
mov
jae
jb
push
jne
fwait
add
cli
insb
fildl
ja
jp
ss
call
insl
xor
jb
xlat
call
daa
xchg
je
cmc
pushf
and
jae
inc
jo
jmp
xor
add
mov
mov
iret
subl
dec
or
std
jb
shr
data16
fldl
ss
sub
xor
pop
add
faddl
pushf
add
mov
push
add
add
cltd
fnsave
shlb
or
add
pop
add
add
dec
fmull
call
sbb
push
adc
pop
xchg
sarl
pop
mov
cmc
andl
push
mov
mov
or
fs
lds
push
xor
inc
and
call
mov
ljmp
sub
xor
lock
add
xor
ljmp
jge
and
jge
and
lret
cmpsl
pop
mov
add
in
ljmp
pop
jb
and
hlt
jp
xchg
in
fidivrl
jno
add
dec
xchg
pop
add
shll
fiaddl
inc
cmc
add
test
mov
pop
repz
lock
jle
sahf
jmp
hlt
jbe
xchg
lret
cli
add
mov
out
mov
dec
push
jno
arpl
and
bound
xchg
push
dec
fcomi
lcall
mov
test
sbb
lods
dec
call
inc
mov
out
fstpt
pop
sub
add
test
xchg
add
pop
or
jb
out
scas
fwait
out
das
lret
cmpxchg
add
fistpl
xchg
add
movsb
out
pop
add
cwtl
mov
xor
add
fwait
add
inc
clc
std
into
fisttpl
and
sub
call
xchg
xor
adc
data16
add
roll
cltd
xchg
addb
fadds
xor
mov
sub
mov
and
loopne
and
cmp
inc
jmp
jae
inc
lds
cmp
add
push
pushl
out
add
cld
adc
adc
cltd
add
bound
jne
push
xchg
and
jns
xor
inc
xor
inc
cltd
in
add
sbb
decl
pop
mov
test
push
inc
push
icebp
push
push
jl
add
inc
and
fld
push
jno
inc
add
add
incl
push
push
les
roll
push
mov
subl
fadds
push
sbb
xor
mov
adc
mov
sbb
add
std
mov
mov
aaa
sbb
sti
jmp
je
and
test
mov
aaa
sbb
or
cmpsl
jle
push
add
je
add
ss
add
cmpxchg
shlb
jae
xor
mov
jge
push
pushl
adc
dec
sub
adc
repz
pop
test
xchg
jecxz
aam
popa
push
jne
mov
cltd
in
adc
lcall
pop
sbb
ljmp
or
test
add
cmp
jmp
loop
sbb
loop
or
enter
insb
cmpsb
stos
cmp
cmp
out
lods
mov
repz
jo
lods
mov
xor
add
lds
cs
lret
xchg
inc
jmp
jae
iret
add
sahf
and
add
lahf
or
jmp
mov
add
cmc
add
push
push
clc
jno
loop
sbb
mov
xchg
xchg
mov
adc
in
adc
xchg
jbe
shlb
xchg
push
pop
pop
repnz
mov
arpl
jbe
mulb
add
arpl
add
or
and
push
jb
push
mov
data16
lea
push
sbb
add
pop
fadd
inc
fmull
sub
fdivr
inc
popf
push
inc
hlt
dec
cwtl
clc
sub
or
and
pop
leave
lret
roll
push
add
push
push
stos
add
pop
jns
or
sbb
jg
mov
mov
push
add
loopne
adc
fcoml
or
mov
jmp
aas
insl
mov
and
in
mov
movsb
add
stc
ss
push
mov
add
jmp
mov
stc
ss
fcomps
ljmp
or
test
mov
jmp
adc
sub
mov
js
add
popf
leave
shrl
dec
cli
test
test
fmull
xor
pop
or
push
jmp
jnp
mov
fildll
or
bound
sbb
call
add
out
dec
stos
cltd
cmp
repz
neg
push
sbb
out
push
cmc
mov
ret
fucom
mov
add
stos
push
gs
faddp
lods
xor
jmp
inc
ds
xor
pop
jecxz
add
sbb
jno
mov
shrb
lods
and
add
xchg
out
mov
add
dec
es
jae
data16
adc
movsb
outsl
mov
cltd
mov
sub
fistl
add
pop
in
loope
fildl
mov
push
imul
jae
mov
out
adc
mov
addr16
mov
testb
fiadds
mov
pop
push
insb
mov
push
ja
push
shrl
pop
jecxz
call
and
pmulhw
mov
jo
lds
push
popf
aas
push
xchg
das
sub
flds
and
hlt
and
incl
sahf
fmuls
inc
fnstsw
add
jmp
ret
imul
or
mov
add
fcoms
dec
pop
incb
jb
cmp
push
add
push
dec
hlt
sbbb
pop
sbb
inc
loope
incl
movsl
loope
decl
inc
mov
ret
enter
scas
mov
decb
adc
jno
cmpb
push
lods
call
jmp
inc
push
std
xchg
mov
lock
add
sbb
pushl
je
sub
je
inc
xor
cmc
add
sti
fldl
imul
inc
jns
or
pop
sbb
mov
push
je
js
adc
jecxz
in
mov
push
out
daa
add
fwait
repz
mov
adc
divb
fidivl
push
or
or
and
pushf
cs
mov
repz
je
inc
xchg
push
jl,pn
xchg
or
lock
adc
sub
iret
dec
into
out
cli
cmpsb
iret
dec
sbb
out
push
movsb
test
fldt
cmp
pop
cmp
sub
in
std
lods
dec
es
aas
jo
pop
bound
push
add
stc
imul
daa
push
shl
pop
add
sub
push
bound
adc
jae
mov
add
fdivr
mov
inc
call
inc
call
popa
scas
adc
jae
mov
in
incb
lcall
xchg
decb
add
out
fdivr
xor
mov
lock
pop
fsubr
add
jmp
cltd
pop
pop
fucomi
add
test
hlt
inc
mov
mov
mov
inc
dec
fsubrs
je
sbb
faddl
add
mov
inc
ret
cmc
fcmovu
push
push
fistps
lcall
popf
push
mov
pushf
cmpsl
jno
xchg
lret
and
mov
std
jae
sbb
rol
lahf
outsl
hlt
sbb
clc
add
add
push
test
add
mov
faddl
mov
jo
adc
jo
jge
sbb
mov
xchg
aas
add
xchg
mov
or
ljmp
add
in
push
push
dec
and
decl
inc
and
xchg
fadds
ret
pop
dec
cld
mov
test
push
in
cwtl
stc
out
and
les
dec
dec
adc
add
pop
mov
dec
iret
cmc
jb
or
inc
ret
das
mov
xor
add
sub
rcrb
inc
mov
stos
ljmp
sbb
sbb
mov
sbb
jno
sub
in
inc
push
fucomip
mov
aaa
push
rcrl
mov
mov
bound
cli
cltd
fistpll
jge
imul
adc
xor
or
push
add
fisubrl
test
popa
in
jno
mov
jo
out
mov
dec
xor
jae
sub
push
mov
jl
lds
xchg
mov
std
aas
push
pop
mov
std
pop
inc
mov
push
mov
fcmovnb
out
insl
lcall
push
mov
add
add
iret
inc
jmp
stos
fs
jmp
mulb
sub
fucomi
sahf
mov
std
fisubrl
adc
mov
add
jno
std
dec
sbb
lds
pop
adc
ja
jno
int
fstps
mov
push
adc
mov
test
pop
flds
lea
int
js
out
mov
and
sbb
xorl
jmp
sbb
sbb
pop
cmp
ret
iret
and
mov
call
pusha
lret
sub
jo
add
xchg
cmp
es
inc
je
inc
in
pushl
dec
add
cmc
inc
sub
add
stos
movsl
enter
mov
jo
jl
and
arpl
scas
dec
rcrb
jo
xchg
jo
sbb
xchg
push
dec
xchg
add
lret
dec
std
ds
daa
sub
stos
pop
jb
cmp
add
jno
add
out
shll
inc
jo
cmpxchg
pop
add
inc
cmc
dec
and
push
add
sub
and
aas
pushf
push
outsl
call
mov
push
scas
sbb
jne
ja
jne
cmp
dec
pusha
adc
push
mov
add
and
std
add
pop
or
das
popa
movsb
jae
cs
pop
jmp
jb
add
sarb
add
push
mov
std
es
inc
add
insb
jg
std
push
inc
push
negl
inc
pop
fstpl
xor
subl
sar
push
adc
cmp
push
inc
pop
inc
and
pusha
je
shr
adc
adc
pop
std
call
nop
sar
xchg
sar
sbb
push
push
jbe
rcll
cmp
xchg
je
lock
push
push
shr
add
pop
mov
decb
or
add
cmpl
mov
call
and
add
jnp
in
xor
sub
adc
in
adc
cmc
mov
jne
xchg
cwtl
fisttpll
test
sbb
outsl
jns
pop
fldl
add
xor
lahf
out
addb
pop
cmc
jmp
fldl
inc
xchg
arpl
lcall
adc
ret
adc
stos
jg
jge
pop
ret
push
push
aaa
jno
testb
push
mov
les
push
jmp
movsl
adc
ret
enter
jno
add
aas
mov
add
mov
aad
cmpb
pop
daa
lods
je
inc
cs
jo
loopne
std
test
add
ret
std
lods
dec
mov
out
mov
ds
lds
fwait
cs
mov
out
fidivl
lods
incb
fistpl
sbb
cld
pop
sbbl
xchg
xor
push
push
push
mov
iret
xchg
fwait
xor
dec
mov
dec
mov
pop
add
or
call
mov
pop
push
add
fstpt
aas
sbb
lods
jl
stc
inc
jo
cmpsl
cld
repz
out
jo
mov
in
jg
xor
in
adc
add
adcb
pop
xchg
int
xchg
js
les
adc
faddl
push
scas
inc
icebp
push
jmp
call
mov
leave
into
std
insl
cmp
shll
xchg
pop
jb
std
pushf
and
mov
sti
outsb
js
jae
cmc
out
mov
jno
fildl
fdivs
std
pop
enter
je
jmp
xchg
enter
sub
enter
in
push
out
aaa
add
or
add
inc
jmp
dec
mov
inc
dec
dec
sbb
incl
inc
sbb
or
mov
inc
or
jle
inc
sbb
adc
xor
or
adc
lret
add
add
add
repz
leave
jno
nop
enter
or
xor
mov
ljmp
lock
outsl
fstl
pop
xorb
push
add
daa
out
cmp
jo
sub
test
rorb
dec
icebp
cmp
add
mov
in
scas
cltd
push
or
add
ret
dec
pop
rolb
cmc
mov
stos
aad
shlb
lock
or
fldl
stos
or
mov
hlt
add
add
push
clc
xlat
add
xor
dec
pop
cmp
adc
jl
repz
sbb
sub
mov
ljmp
repz
fistpl
dec
sbb
add
fwait
das
pushf
mov
call
jl
fbld
sub
push
mov
jle
fldt
jno
out
add
jae
adc
outsl
js
daa
stc
in
xchg
jmp
xchg
daa
inc
jmp
arpl
jo
movsb
push
daa
stc
repz
add
insb
xchg
cmpsl
fsubrl
jno
out
sub
aaa
push
jo
aaa
pushf
fdivrl
add
adc
add
faddl
jmp
pop
pop
sub
fisttpl
and
sbb
add
dec
mov
xchg
scas
mov
jmp
sbb
jmp
fisttpl
ljmp
add
xchg
subl
pop
inc
jmp
fildl
fadds
xchg
mov
pop
call
and
cltd
inc
lret
or
mov
push
xor
shll
lock
add
or
clc
or
xchg
add
push
mov
insw
dec
fimuls
call
mov
loopne
add
mov
subb
jmp
pop
jl
sbb
test
or
add
fcmovnu
add
push
pop
adc
loopne
fldl
add
pop
mov
adc
adc
faddl
sbb
jno
repz
jge
push
jmp
mov
enter
mov
add
jae
or
mov
add
jo
jp
pusha
dec
cmp
jg
lods
add
sub
or
ret
push
lds
jl
js
ret
dec
inc
hlt
or
stos
mov
mov
mov
bound
mov
jmp
add
add
cmc
mov
dec
inc
or
int3
jp
js
std
xorps
sub
daa
sub
jl
and
and
call
clc
cli
adc
sbb
and
mov
sub
scas
enter
dec
in
fwait
sbb
call
push
add
dec
pusha
jg
dec
out
push
sti
mov
out
mov
jo
pop
push
movsb
mov
push
pop
xlat
push
enter
lods
sbb
add
lock
pop
mov
mov
fucomi
jle
enter
popf
inc
shll
xor
pop
shl
push
call
stc
mov
std
xor
mov
subl
add
notb
jmp
insl
call
mov
mov
imull
aad
ficomps
push
dec
xor
repz
xchg
mov
jae
inc
xor
lds
xchg
call
bound
pusha
notb
jno
jbe
sbb
xor
sbb
mov
ja
mov
shlb
inc
mov
loopne
mov
loopne
mov
push
inc
add
inc
cld
ficomps
decl
ficoml
std
pop
jmp
mov
ret
xlat
in
or
and
test
and
xor
mov
add
dec
cld
fcompl
les
or
push
add
mov
popf
jno
mov
lds
pop
or
sbb
into
inc
add
ja
lea
xor
jo
cmp
fwait
out
push
pop
adc
decl
nop
dec
push
add
or
mov
lea
inc
and
mov
clc
ret
adcb
sub
mov
xor
mov
push
inc
sub
jno
mov
jo
sub
jo
sub
mov
imull
jo
movsb
idiv
or
dec
push
in
add
sub
arpl
or
out
mov
pop
mov
into
sub
and
frstor
fldt
mov
push
mov
jl
jl
jo
outsl
cmp
ret
fucomi
popl
in
mov
out
push
mov
push
test
xchg
popa
jnp
add
jmp
pop
adc
lds
lret
adc
xor
and
icebp
lcall
add
and
addr16
cmp
outsl
into
inc
jmp
das
mov
dec
and
sub
hlt
fucomip
inc
jmp
adc
xchg
ret
shl
clc
popf
pop
sub
js
or
jns
sbb
jge
jge
mov
in
dec
jl
jmp
dec
and
in
mov
std
dec
out
mov
out
dec
sub
icebp
loope
je
testb
int
add
xlat
push
je
push
sub
ficompl
je
jbe
testb
ljmp
jbe
ret
dec
fisubrs
jg
mov
or
push
add
cmp
cmovo
add
add
mov
in
cli
lahf
icebp
jg
scas
adc
or
icebp
or
cmp
jg
jmp
xlat
pushf
sbbb
mov
imul
lcall
out
aas
jo
inc
and
cmp
call
imul
sbb
lea
nop
pop
mov
popf
xor
js
cmp
and
push
cmp
and
fisttpl
in
out
jnp
incl
jmp
push
lock
iret
jb
adcb
xchg
out
shrb
jno
out
xor
out
xor
push
into
add
daa
push
in
add
add
nop
sbb
stos
cmp
push
cmpsb
xor
or
sub
std
mov
push
ljmp
aad
dec
add
rcrl
pop
mov
and
lods
pop
push
add
jae
inc
lds
mov
cmp
xor
mov
subl
add
push
ds
adc
js
mov
sub
leave
jmp
xchg
pop
push
jb
paddd
pop
fildl
out
movsl
push
leave
jo
jo
mov
and
mov
mulps
adc
out
sbb
add
xorl
ds
mov
jae
add
sbb
xchg
lcall
xchg
nop
mov
adcb
adc
jb
ret
add
repnz
mov
fisttpl
dec
rcl
ds
fiaddl
test
mov
dec
mov
fildl
push
repnz
dec
push
call
adc
addl
mov
and
cmp
ret
cmp
in
jmp
xlat
add
jno
inc
sub
xchg
jb
shll
push
push
lods
movsl
xor
xor
in
pop
sti
push
aaa
ret
xor
add
xor
or
pop
or
jmp
or
sub
xchg
mov
cmp
clc
in
clc
sysret
hlt
stos
xchg
jno
add
pop
sbb
sub
das
in
lds
xchg
mov
jo
inc
aam
jge
cld
ret
lcall
mov
addb
add
and
packssdw
popf
rcrl
lods
push
lcall
in
ds
cmp
jno
add
xor
mov
stos
call
add
xchg
xchg
mov
xchg
mov
mov
xchg
sbb
adc
mov
sub
push
jnp
daa
lgs
mov
dec
movsb
fwait
popl
add
push
cmpsl
adc
xor
dec
mov
inc
add
lret
dec
sub
push
cmp
test
je
dec
mov
hlt
push
sbb
cli
adc
pop
inc
mov
jl
mov
js
inc
in
cld
or
ficoml
pop
popa
lret
sub
or
jae
call
jb
push
dec
out
cs
xor
stc
jae
mov
jnp
adc
add
fimull
out
in
ds
in
sub
mov
push
xchg
xchg
push
push
mov
push
cmp
jne
push
inc
add
pop
call
push
testb
xchg
push
dec
mov
mov
je
push
je
fs
pop
push
add
push
xor
roll
fldl
inc
stc
or
int
or
fsub
mov
pushf
add
mov
stc
or
add
xchg
push
cmp
mov
or
pop
sub
add
clc
loopne
cmc
jmp
xorb
test
testl
ret
add
mov
repz
cmpsb
cmp
mov
jns
push
clc
sub
cmc
cli
add
add
lcall
std
outsb
popf
push
fcoms
dec
inc
bound
ss
mov
das
adc
mov
add
rorl
add
adc
fidivl
cwtl
rol
xchg
mov
in
push
push
vmovaps
lock
fs
iret
inc
das
inc
jo
cmpsl
out
xsha1
cmpsb
dec
add
cmpsl
stos
cmp
cwtl
cli
sbb
xchg
jl
bound
push
movsb
xchg
xlat
and
out
daa
cmpxchg
daa
ss
shll
xor
fs
mov
pop
daa
punpckhdq
divl
ljmp
rorl
jmp
add
add
cmp
rclb
sbb
mov
jo
pop
in
adc
shl
std
scas
lock
mov
js
cmp
popf
add
clc
sbb
push
filds
std
adc
in
fs
int
adc
or
xor
data16
in
lahf
std
push
jb
shrb
fisttpl
test
or
fildl
xchg
lea
cmpsb
pop
cli
test
dec
aas
add
bound
repz
call
xor
pushf
push
mov
lea
cmc
mov
add
or
test
fildl
add
imulb
setne
add
sbb
or
test
add
cld
add
or
mov
inc
stc
add
add
leave
fimull
add
fdivp
inc
fldpi
std
xlat
xor
decl
push
decb
jo
jmp
shr
add
jae
jmp
ja
les
push
lock
add
mov
je
lea
or
dec
mov
push
mov
add
jle
sti
js
pop
dec
pushf
imul
jge
inc
and
push
cltd
mov
sub
inc
cs
lds
pushl
testl
cmp
test
ret
jmp
popf
ljmp
mov
mov
fstpt
inc
inc
lret
mov
add
jl
xchg
cmpb
bound
jo
jb
pop
popa
outsl
xchg
out
add
pop
out
jo
xor
mov
dec
dec
arpl
aaa
mov
sahf
andb
daa
mov
xor
out
xor
ret
adc
mov
dec
adc
std
push
imul
mov
lret
push
sbb
sti
into
sti
cwtl
xor
jb
repnz
add
call
flds
jmp
mov
call
bound
jmp
jnp
divb
call
jb
xor
pop
sbb
push
push
popa
int
sbb
jae
into
rcl
std
mov
xor
test
cmp
jno
fildl
ljmp
push
xchg
subl
sub
bound
lcall
pushf
testl
filds
sub
pop
mov
mov
lcall
add
mov
prefetch
add
aaa
addb
filds
or
add
mov
adc
lahf
mov
add
push
filds
call
xchg
sbb
add
sbb
inc
lock
and
leave
or
jo
fldl
or
add
jno
add
test
xchg
imul
add
push
hlt
inc
add
jo
mov
cmp
mov
clc
addr16
jns
pusha
cmp
mov
inc
inc
sub
mulb
inc
sbb
adc
lds
xor
fnstsw
lds
add
adc
xorb
lret
fs
jo
movsb
xchg
into
sub
pushf
hlt
jne
add
pop
cmp
ljmp
div
lcall
jo
and
mov
daa
iret
lret
add
sub
xor
enter
dec
mov
sti
cmp
call
mov
repz
sub
jp
add
mov
sbb
jp
mov
add
arpl
push
in
das
xor
add
mov
shlb
mov
daa
icebp
inc
mov
std
add
cld
mulb
sbb
out
or
fdivr
lret
cli
pushf
jmp
stos
jae
adc
lock
cmp
hlt
dec
cmpsl
inc
jmp
in
les
sbb
xabort
mov
std
sbb
mov
in
in
or
je
les
std
pop
pop
rcrb
push
push
pop
push
add
pop
mov
adc
out
sub
pop
adc
stos
sbb
push
out
jb
popf
in
adc
and
les
add
inc
cmovo
pop
cmp
enter
rcll
fdivrs
cmpsb
add
pop
xor
add
dec
sub
mov
cmp
fs
pop
jne
outsb
pop
add
mov
cmp
add
lcall
add
lods
add
and
inc
push
out
mov
xor
sub
xor
mov
xchg
jg
mov
loop
ss
enter
fadd
jmp
cltd
test
push
jg
mov
xor
cwtl
imul
les
incl
jo
adc
jle
inc
inc
into
mov
mov
das
incl
repnz
jmp
sbb
hlt
popa
sbb
fwait
xchg
sarl
mov
adc
ret
mov
pop
icebp
outsl
test
add
adc
sti
pop
fwait
outsl
add
fucomi
add
adc
xor
fstpt
lds
ja
mov
fwait
pop
or
fistpl
lret
test
faddl
fsubl
push
lods
out
cmpsl
and
in
fwait
idivb
fsub
add
add
sub
jmp
and
mov
fildl
bound
push
addl
or
jmp
insb
add
cld
out
lret
sti
mov
push
cli
popa
lock
add
sbb
lods
je
push
movsl
mov
jae
add
lret
cmpsl
inc
jmp
lahf
lods
jae
push
xchg
call
adc
pop
xchg
popa
leave
mov
xchg
std
pop
pop
mov
fucomip
lods
jmp
pop
cwtl
testl
scas
in
ss
decb
shll
xor
mov
push
sub
mov
lcall
adc
lret
pop
add
fsubl
je
ss
add
inc
dec
pop
ret
jbe
or
andb
inc
mov
add
jno
daa
add
lmsw
inc
and
inc
repz
fists
pop
push
cmovo
push
incb
stc
hlt
mov
sub
rep
mov
in
es
cmp
and
or
paddsb
add
jo
test
rcrl
jmp
jle
addr16
dec
out
mov
mov
jo
clc
test
mov
add
inc
fidivrs
mov
cmpl
add
in
add
jo
ds
pop
push
and
int3
jae
jb
mov
jo
ds
sub
add
add
iret
add
push
and
div
aad
add
xlat
xchg
call
xchg
inc
jo
xor
push
mov
dec
daa
stos
scas
adc
icebp
or
add
es
xlat
in
test
out
in
les
fsub
mov
hlt
ljmp
add
and
ljmp
aaa
jmp
xchg
cmpsb
das
fadds
out
xor
out
add
lock
addr16
xchg
push
add
jae
call
rcr
test
jmp
ja
push
bound
pop
roll
sbb
sub
fildl
lds
xacquire
add
jl
sub
jmp
add
push
jl
add
fiaddl
jb
sbb
pusha
lret
std
mov
and
add
mov
lcall
sar
jle
jae
lds
xchg
shrb
filds
push
and
xor
add
push
mov
and
inc
push
xchg
dec
faddl
inc
jne
add
jp
inc
sub
jne
and
jge
addb
jmp
and
add
in
std
je
xlat
mov
pop
lret
and
xchg
lock
pop
je
ret
xchg
in
out
add
in
cmp
xlat
dec
mov
xchg
jmp
xchg
jl
jo
sti
push
mov
ja
or
aas
test
aas
inc
and
fmull
inc
add
jp
enter
pop
sub
sti
push
lds
int3
jns
mov
std
cmovbe
dec
cld
pushf
lds
mov
add
stc
negb
ss
jmp
and
mov
xor
and
sar
imul
imul
jge
fisttpl
add
jg
das
mov
insb
mov
add
sti
lock
fcmovnb
push
je
stos
lea
lock
dec
mov
push
cmpsb
push
ds
add
notl
add
in
sbb
das
call
add
mov
mov
imul
fs
and
add
xor
lret
in
sbb
enter
das
clc
addb
xlat
mov
scas
pop
and
inc
add
push
imul
inc
adc
lds
fcomps
jne
push
or
sub
mov
dec
loopne
jmp
mov
imul
add
and
inc
lcall
mull
mov
adc
call
push
xchg
jae
or
or
cmp
jne
jle
xor
push
dec
inc
incl
mov
mov
hlt
xor
mov
adc
dec
in
jle
leave
mov
pop
pop
pop
mov
pop
fimull
xchg
sete
fdivp
dec
fisubl
jg
out
shrb
push
ret
pop
add
daa
mov
fiadds
sbb
dec
add
leave
mov
add
cmpl
ror
mov
push
push
cmp
lods
pop
sub
in
jbe
out
rcrb
push
push
push
mov
mov
insb
fcomi
add
fnstenv
mov
xor
add
sub
scas
mov
sub
dec
outsl
fidivrl
add
sub
jmp
imul
repnz
ret
repz
fmuls
clc
jb
and
jb
or
mov
xor
scas
cmp
jno
ss
inc
cmp
repz
inc
push
jmp
test
test
mov
ja
popa
mov
mov
aas
addb
push
jbe
xor
mov
test
xchg
push
sbb
and
out
in
das
dec
push
mov
xlat
repnz
push
sub
repnz
in
in
loop
mov
cmp
stc
pop
mov
cmc
jbe
sbb
sti
pop
movsb
sub
push
mov
cmpsl
stc
jp
sub
sti
pop
in
cmp
dec
mov
mov
insl
aam
push
clc
bound
mov
push
hlt
push
std
insb
cltd
xchg
pop
inc
cmpsl
and
jmp
mov
add
in
out
nop
aaa
mov
or
lods
cmp
push
fwait
dec
xchg
add
jae
pop
fbstp
andl
sub
std
jb
aad
sub
fadd
ljmp
mov
dec
aas
loope
or
fcmovu
std
add
aam
negb
sbb
mov
add
sbb
jne
xor
push
leave
fmull
es
or
in
mov
mov
pop
mov
jne
dec
ret
sub
leave
faddl
call
sub
pushl
and
mov
inc
fcoml
sub
xchg
jmp
add
inc
dec
cmovo
push
in
adc
cmp
inc
call
push
push
xor
add
add
test
adc
dec
sbb
push
imulb
push
cmp
movsb
bound
test
cmpsb
adc
aas
inc
dec
shrl
pushf
xor
pop
and
testl
or
sar
aad
and
je
test
and
nop
or
mov
inc
je
ret
mov
jmp
pop
testb
lock
add
add
fsubrl
jno
out
test
fs
arpl
sbb
inc
push
and
daa
or
sahf
aam
pusha
sbb
xchg
daa
in
jl
pop
jnp
ret
scas
push
daa
divb
call
push
jl
cmpsl
add
lcall
ljmp
jnp
xor
jmp
test
daa
or
inc
out
jo
jae
mov
daa
add
pop
aam
ret
sbb
inc
pop
cmpsl
icebp
mov
lret
inc
jmp
adc
popf
aaa
lcall
pop
insb
fisttpl
sbb
push
std
sbb
std
pop
ret
cmp
cmp
sahf
adc
jl
add
aaa
sub
jae
loope
mov
mov
and
mov
cmp
pusha
mov
test
and
jae
add
mov
jmp
jmp
jbe
jmp
aaa
stos
daa
stc
into
add
xlat
pop
mov
jge
ret
insb
dec
jmp
add
je
or
adc
test
lods
sbb
add
adc
test
lods
or
push
and
test
add
pop
movnti
cmp
leave
ret
in
dec
jmp
xor
mulb
xchg
stc
cmp
push
inc
test
incl
inc
add
fmull
or
inc
add
mov
push
dec
cld
jo
in
pop
pushf
mov
dec
push
ret
jl
in
incl
mov
push
cmpsb
push
mull
jle
pop
cwtl
cmp
sahf
adc
das
mov
psubusb
mov
add
cmpsb
jecxz
je
adc
mov
sub
repnz
mov
add
jle
mov
jne
jmp
in
aas
jo
imul
aas
fcompl
adc
jmp
adc
add
andl
fldt
addr16
movsl
stc
push
cmp
sti
and
js
jmp
out
imul
out
jnp
xchg
imul
sbb
out
cli
xchg
push
xor
jns
dec
aam
scas
arpl
jae
lock
es
mov
xchg
mov
ret
ja
sub
scas
out
lahf
fildl
out
arpl
js
add
insl
add
jae
gs
jae
push
insb
push
jnp
xchg
fldl
inc
inc
fwait
push
pop
std
push
std
fs
push
cmp
insb
fbstp
pop
in
push
cltd
pusha
mov
fmull
xor
les
cmpsl
sub
and
and
xchg
add
mov
xor
pushf
jnp
adc
sbbl
add
pop
jb
dec
mov
mov
adc
dec
adc
call
loope
push
jge
mov
call
push
cmp
jmp
adc
pop
pop
sbbb
add
add
rcll
mov
add
fstl
out
add
dec
sub
out
or
cltd
fcompl
in
jmp
push
adc
mov
inc
in
add
dec
jmp
adc
faddl
push
pop
or
inc
pusha
in
pushl
xor
or
mov
icebp
lods
hlt
add
lret
push
cmc
push
jns
pop
test
je
fsubrs
jns
decl
dec
mov
jmp
mov
data16
enter
jo
inc
or
lock
ds
xchg
inc
sub
add
jge
and
mov
mov
add
sbb
push
pushl
mov
ja
xchg
mov
mov
mov
add
jo
fs
xchg
out
cld
pusha
xchg
jbe
xchg
aaa
jne
inc
repz
pop
push
mov
xchg
call
add
jo
stos
adc
xchg
mov
inc
out
jo
jg
outsl
push
outsb
ror
icebp
pop
add
aam
cli
mov
or
mov
xchg
out
in
dec
add
xchg
push
shll
call
fsts
add
sub
addb
sbb
aas
fildl
jmp
mov
adc
add
xchg
inc
add
faddl
jmp
inc
xchg
mov
sub
cmpsb
mov
pop
sub
in
fwait
pushaw
test
push
push
push
icebp
pop
xchg
jae
xchg
push
pop
jmp
es
movsb
xlat
sbb
jmp
insl
fildl
add
or
fsubs
ljmp
xor
orl
cmpsb
enter
push
mov
push
push
fists
std
addr16
xchg
cmp
mov
jae
or
aaa
mov
or
subl
je
inc
cld
test
xchg
rorl
adc
push
or
icebp
out
add
leave
or
and
inc
clc
jo
into
enter
push
add
cs
xor
xlat
mov
adc
insl
jle
fcom
idivl
jo
cmp
mov
jo
jb
fsubr
idivl
jo
aaa
mov
lea
insb
or
jns
and
inc
incl
dec
iret
je
hlt
xlat
add
jo
inc
push
hlt
lahf
add
jo
repz
inc
sti
inc
sti
cmc
idiv
xchg
insl
mov
cmp
inc
incl
fisubrl
cmpsb
add
dec
add
test
add
lahf
lahf
jg
bound
fiadds
ret
xchg
xchg
ja
or
mov
aam
testb
jle
lret
idivb
aaa
or
jo
jae
ret
daa
pop
cmpsl
imull
imul
push
jo
adc
fwait
mov
fiadds
outsl
fidivrs
rcl
andps
jo
add
popf
aam
cmp
jo
cld
outsl
jbe
jo
jo
add
push
mov
and
mov
sub
push
jo
jle
aaa
mov
or
ret
arpl
sbb
lods
pop
and
call
imul
mov
inc
xor
adc
sbb
pop
xlat
int3
jb
dec
imul
lahf
pop
mov
insb
sub
std
xor
nop
push
xchg
stc
push
mov
push
or
and
cmp
bound
icebp
xor
push
xor
test
rorb
adc
clc
inc
fnsave
rcr
pop
leave
pop
std
push
add
push
mov
xchg
add
adc
mov
mov
sub
pop
fldl
jb
push
jmp
in
mov
pop
xchg
add
call
rorl
add
adc
xchg
push
pop
pop
pop
sbb
out
push
jb
add
or
xchg
incb
sbb
jp
fildl
test
cmp
jl
js
add
add
fmuls
scas
sbb
decl
xchg
dec
xor
inc
je
sbb
add
cmpb
push
sar
in
sar
jge
sbb
dec
jl
pop
jmp
or
push
inc
ljmp
inc
inc
push
sbb
lea
cltd
jmp
adc
pop
out
out
cld
je
fidivrl
roll
dec
fdivrl
rcl
add
mov
in
pop
xor
jo
jae
stos
idivl
movsl
pop
jns
out
mov
add
xor
inc
jg
mov
cli
mov
jo
out
sub
jmp
fwait
add
mov
or
pop
daa
clc
insl
sub
push
repnz
int3
xchg
lcall
jp
out
fsubr
daa
add
repz
filds
xor
arpl
jg
add
sbb
call
idiv
jmp
popa
out
data16
or
mov
inc
outsl
pop
pop
push
jae
xor
mov
movsl
call
movsl
into
add
std
push
test
jns
jmp
jl
add
data16
push
cs
cld
out
jmp
add
fildl
xchg
ja
dec
icebp
and
cltd
mov
or
jae
add
subl
mov
out
add
cmp
cmp
xchg
in
popf
fadds
test
xchg
addl
dec
add
push
cmpsb
movb
lcall
cltd
std
test
push
add
add
add
ss
mov
sti
call
in
add
lcall
dec
adc
call
add
adc
mov
les
ret
in
ja
std
call
adc
stc
rolb
add
inc
pop
and
iret
in
cld
lahf
add
sti
add
adc
mov
pop
daa
ret
push
jp
repz
add
je
icebp
jg
cwtl
add
push
mov
xchg
cmpsl
sar
leave
add
insb
clc
inc
ljmp
xor
scas
inc
into
enter
push
jmp
aam
mov
ljmp
jbe
stc
imul
cmc
ret
mulps
add
fcmovbe
add
jo
rcrb
mov
pop
out
jo
sbb
jo
cli
ffree
mov
mov
fstpt
adc
push
sub
ja
aam
xchg
daa
wrmsr
fldt
and
imul
lahf
fsubl
movsl
xlat
xchg
xor
xchg
fwait
stos
cli
sbb
add
je
mov
add
xchg
cmp
adc
sbb
movb
in
xchg
pop
push
shrl
fsubr
fcmovb
addb
fildl
fildll
iret
test
jae
shlb
and
push
bound
pop
in
aad
xor
inc
mov
fldt
pushf
hlt
inc
jae
add
ss
faddl
outsl
out
inc
jmp
enter
jae
add
jae
jmp
jmp
jp
mov
cmc
cmp
jp
push
mov
inc
or
jae
pop
pushf
in
push
push
pushf
add
jns
adc
push
pop
jb
push
pushf
in
cmp
mov
add
jge
filds
mov
push
sbb
jmp
hlt
movb
in
popf
std
test
adc
adc
cmp
mov
adc
xchg
lcall
dec
data16
pushl
push
adc
movsl
sar
dec
enter
data16
stos
push
jnp
jb
inc
pop
ror
enter
push
jmp
sub
in
pop
mov
jnp
add
jge
inc
roll
repz
add
jbe
fs
pop
data16
std
lock
lahf
addr16
sub
xchg
jle
add
data16
or
or
out
dec
pop
gs
push
fldt
ret
fistps
pop
fstp
dec
ds
cld
pop
inc
inc
out
das
push
clc
pop
sbb
add
fwait
lret
add
movsl
push
lret
shll
fcmovne
paddq
daa
add
sbb
ljmp
adc
add
int3
sahf
gs
lahf
stc
ret
mov
push
sub
jae
out
sbb
jbe
mov
in
iret
adc
in
xchg
sbb
push
movsb
addr16
xor
fldenv
add
jae
sbb
das
jo
add
ss
lahf
mov
stc
imulb
adc
cmp
push
addl
jns
mov
mov
push
insb
adcl
icebp
and
dec
inc
jae
fwait
and
sbb
popa
sbb
push
add
shrl
std
sub
xchg
jb
pop
std
aad
pop
inc
push
add
wbinvd
add
jne
mov
test
sbb
add
mov
clc
movsb
add
rcrb
mov
in
clc
pop
fs
or
cmp
cld
cmp
pushf
jmp
jne
clc
roll
mov
jno
push
test
clc
xchg
movsb
mov
lods
es
and
test
popf
test
lods
aad
jne
clc
roll
insb
stc
dec
ljmp
add
xor
enter
push
sti
out
mov
repz
pop
jmp
cmpsb
bound
mov
testb
stc
cmp
mov
mov
jge
mov
push
imull
or
inc
je
inc
clc
lahf
xorb
push
sti
mov
cmp
out
out
pop
add
stc
mov
test
or
clc
mov
cmpsl
add
xchg
in
inc
cmp
sub
adcb
in
lcall
outsl
push
movsb
pop
dec
rcll
fdivrs
jae
cmpsl
das
test
mov
mov
jnp
lea
hlt
ret
ljmp
or
push
sub
aaa
icebp
aam
shll
fildl
cld
ret
jo
lea
insb
inc
inc
mov
jne
mov
push
add
push
pop
insl
adc
inc
popa
adc
je
xor
pop
xor
in
jbe
cwtl
mov
outsl
into
rclb
pop
arpl
insb
cs
bound
cmc
add
push
fs
adcb
xlat
std
pop
je
fs
inc
bound
sub
inc
mov
ret
dec
in
movsb
jmp
test
sub
je
inc
xchg
add
adc
xorb
sti
roll
add
cltd
or
mov
jmp
mov
fidivs
rorb
enter
push
mov
inc
push
xor
aad
dec
divb
add
fdivrp
jne
push
pop
cld
sbbl
inc
hlt
ret
test
xlat
add
adcb
insl
fadds
add
xor
nop
sub
cmp
roll
add
jae
jne
push
clc
jo
sti
cwtl
sbb
add
and
clc
inc
add
stc
mov
cmp
je
lea
jae
add
sub
test
test
jb
add
adc
repnz
jo
test
jb
mov
jo
cmpb
xor
sahf
stos
imul
adcl
out
push
add
inc
stos
mov
fsts
cmpsb
fadd
push
and
iret
hlt
fadds
adcb
jae
adc
jb
fwait
hlt
cmpsl
pmaddwd
mov
jo
movsb
or
fmull
fiaddl
movsl
pop
ret
adc
sbbl
out
add
jb
add
movsl
daa
jmp
adc
mov
enter
das
or
sbb
jg
enter
ficomps
and
pop
test
sbb
xor
aas
sub
push
add
mov
cmp
push
cmp
jmp
je
push
aam
test
jae
std
imull
adc
mov
lret
mov
mov
or
bound
adc
xlat
add
jae
je
xchg
leave
std
cld
daa
ljmp
inc
mov
out
inc
xchg
call
sbb
fisubrs
je
add
imul
push
data16
xor
or
inc
xlat
call
push
repz
xor
dec
in
sub
add
in
add
cltd
jmp
inc
repnz
jne
repnz
mov
push
call
sbb
lcall
inc
enter
push
mov
dec
jnp
push
jl
xchg
test
adc
fidivl
fildl
and
inc
sub
jb
nop
cmp
inc
xor
daa
je
nop
dec
sub
push
gs
idivl
ss
je
jo
out
add
xorl
add
jae
inc
mov
cmp
lods
ror
mov
pop
ljmp
mov
or
das
or
add
nop
jmp
and
iret
pop
jg
jmp
ret
jl
shl
mov
mov
xchg
add
mov
gs
jo
inc
pop
fwait
lret
inc
add
mov
repz
hlt
push
mov
jo
out
add
clc
ret
sti
mov
dec
popa
sbb
push
lret
push
xor
test
add
pop
push
sub
repz
jecxz
xor
pusha
mov
dec
call
aaa
pop
and
xchg
lock
daa
add
xchg
repz
daa
xor
pop
in
pop
jo
hlt
push
test
xlat
pusha
lret
outsl
jo
ja
xor
add
push
and
mov
out
pop
jl
dec
rorb
pusha
scas
decl
xlat
push
ja
add
xor
in
mov
pop
inc
icebp
ja
sar
adc
jae
cmp
clc
sbb
add
pop
in
stc
hlt
fmuls
jmp
add
inc
mov
push
inc
lds
icebp
add
sbb
cmp
inc
jmp
jae
pop
push
fisttpl
jmp
jae
shlb
inc
negl
adc
mov
jb
rolb
enter
dec
call
push
push
mov
inc
and
stc
jne
iret
push
jge
fsubrp
pop
inc
xchg
and
sbb
lea
push
jmp
je
das
in
lcall
push
das
in
pop
fiadds
test
fimull
inc
jp
add
sar
xor
jecxz
lock
mov
negb
test
xorl
pop
imul
scas
jno
incb
mov
lea
dec
in
pop
pop
mov
mov
jl
or
mov
inc
add
scas
mov
rolb
adc
jne
push
shll
jmp
xchg
sahf
jo
push
jne
dec
stos
sahf
jo
out
sbb
ljmp
sub
clc
repz
sahf
sbb
jo
out
mov
sub
clc
mov
inc
add
xchg
fcmovnb
inc
les
sbb
add
mov
ljmp
jl
adc
arpl
xor
fs
fisubrs
jbe
push
repz
idivb
fsub
add
push
int3
imul
push
jno
jecxz
ja
out
sbbb
pop
imul
mov
push
dec
jmp
or
cmpsl
add
repz
jmp
clc
in
mov
lods
out
icebp
addb
lret
insb
rorb
xor
inc
add
test
lcall
inc
xor
js
add
call
push
cmpsl
rcll
out
clc
fs
cmp
stc
je
add
xorb
scas
mov
push
jb
cmpb
add
mov
inc
jmp
jae
inc
jbe
idiv
ljmp
xor
sbb
fiadds
mov
jmp
push
pushl
push
cmpsb
cmc
int3
push
out
xor
pop
fimull
popf
ds
lcall
fs
mov
mov
sub
add
movsl
or
mov
std
out
push
call
or
xlat
ud0
fnstcw
jb
xchg
mov
jno
or
adc
data16
xchg
jo
mov
lods
cld
mov
sbb
ret
int
in
push
mov
mov
fwait
push
pop
xor
mov
cmc
cmp
pop
push
push
je
mov
out
mov
out
int
add
dec
lods
std
xlat
movsb
jle
fmuls
push
inc
call
addb
inc
lods
cmp
mov
pop
int
jo
inc
sub
jnp
cltd
xchg
jg
jge
icebp
test
mov
je
pop
sbbl
jle
jecxz
leave
add
in
push
pop
push
call
pop
iret
stos
mov
jo
in
stos
fadds
jo
daa
fldcw
daa
pop
or
out
sti
fdivs
test
out
cmp
out
inc
imul
jp
out
pop
lock
push
inc
imul
cmpl
mov
push
rorb
in
cmpsl
cmpsl
je
sbb
xchg
push
xchg
xorl
add
jecxz
jb
jne
bound
push
or
fisttpl
int
fisttpll
cmp
in
mov
ret
mov
jae
jmp
shlb
fbstp
movb
sahf
fwait
lret
jae
rcrl
pop
in
out
bound
jl
shll
jne
sub
subl
sti
mov
jne
inc
sbb
jl
call
cmp
rolb
jge
add
xlat
add
call
push
roll
add
jne
mov
cltd
add
add
add
mov
lock
sbb
add
movb
jge
fimuls
leave
pop
jecxz
push
pop
fcmovb
add
fists
push
fistl
in
adc
push
rorl
jb
imul
add
inc
mov
jmp
aaa
loopne
je
lock
and
out
or
mov
jne
into
add
add
add
jmp
or
in
or
out
jge
je
int
orb
jae
add
mov
scas
mov
idivl
jo
inc
or
ret
aad
lods
add
int
sahf
int3
pop
lcall
adc
push
sub
shlb
in
sti
gs
add
add
fadds
pop
adc
test
mov
insb
pop
jae
imul
push
pop
and
je
hlt
jp
pop
cmpsl
fcomps
cmpsl
cld
or
pop
subl
out
aad
add
sub
cmc
fwait
shl
lods
pop
sub
mov
lret
cmp
jno
inc
xchg
push
xchg
inc
jae
xchg
pop
lock
out
loopne
adc
add
xchg
jno
jno
les
push
fisubrl
xor
cmp
jns
add
aad
out
push
ret
jecxz
enter
sub
and
test
add
shr
lcall
lock
fsubrs
jae
mov
jmp
xor
ljmp
enter
not
push
fmuls
sti
movsl
popf
cmp
inc
fmuls
fsubrs
push
shll
stos
jb,pn
fsubrs
bound
rcr
movsb
add
add
jb
je
subb
cwtl
add
pop
out
add
movb
xchg
ja
add
mov
push
add
push
add
jns
or
jmp
shlb
testl
pop
adc
testb
jne
sbb
outsb
sub
std
ljmp
std
jg
fmull
xor
sbb
ret
mov
add
es
mov
dec
push
push
out
inc
call
leave
fiaddl
jo
add
dec
lret
push
inc
enter
and
mov
lahf
add
divl
sti
iret
sub
add
iret
pop
jo
aad
ja
aad
mov
pop
packuswb
incb
iret
add
jo
cmp
xor
pop
pop
add
push
lock
ds
mov
mov
pop
aaa
dec
xorl
in
mov
and
testl
mov
inc
fcomp
push
add
mov
mov
cs
jo
mov
cli
jle
mov
pusha
sbb
inc
add
fstl
pop
xchg
mov
daa
hlt
add
fldt
rorl
cld
jno
out
hlt
push
loopne
pop
out
js
outsl
dec
sub
insl
out
pop
sub
dec
ss
mov
add
aad
leave
outsl
fsts
inc
fwait
test
xchg
xor
pop
stos
dec
push
pop
add
push
adcb
imul
cmp
test
xchg
mov
fsubrs
sub
jbe
imul
or
shlb
call
mov
fildl
ss
adc
mov
add
insl
push
adcl
xchg
std
mov
mov
mov
or
movsb
mov
insb
pushf
sbb
and
insb
adc
mov
pop
add
lea
lea
adc
dec
lea
dec
jmp
jne
push
sbb
pop
jmp
push
pop
add
loopne
or
andl
scas
mov
in
inc
in
adc
and
or
addr16
lcall
cmp
mov
incl
inc
dec
call
push
add
jmp
fsts
xor
push
fimull
jne
jl
add
orl
je
aas
jo
inc
je
jns
pop
xlat
pop
icebp
incb
mov
cmp
cltd
out
inc
pusha
mov
test
xor
sti
lahf
je
ret
inc
adc
jnp
repz
dec
push
in
push
cmp
mov
lea
mov
mov
cmp
cmpsb
sti
mov
roll
in
mov
dec
sti
ds
cmp
daa
decb
repz
decl
xchg
or
mov
movsb
dec
cmp
cld
mov
push
testl
out
hlt
lcall
sub
pusha
cld
ljmp
cld
cmpsb
out
mov
add
xchg
mov
icebp
addr16
daa
add
pop
nop
cmpsb
sbb
inc
mov
lock
jmp
mov
icebp
fwait
lret
cmpsl
add
jb
ds
sub
lret
cmpsl
add
pushf
mov
pushf
lcall
testb
mul
jg
add
jae
cmp
push
dec
inc
and
xchg
dec
roll
inc
or
jmp
cltd
fs
jae
add
jmp
aaa
test
jb
loopne
push
mov
push
inc
in
jecxz
iret
jae
jbe
mulb
mov
bound
idiv
pop
or
out
inc
xor
lcall
add
pop
or
mov
repz
add
push
pop
cmp
enter
stmxcsr
inc
lds
add
in
jmp
cmpsb
add
xor
mov
movsl
push
into
jmp
outsb
mov
xchg
sbb
add
gs
mov
arpl
call
adc
rcl
push
xchg
mov
add
push
add
add
lods
pop
aas
jo
pop
aas
jo
pop
aas
jo
pop
aas
jo
pop
aas
jo
pop
aas
jo
pop
aas
jo
pop
aas
jo
pop
aas
jo
pop
aas
jo
pop
aas
jo
pop
aas
jo
js
repz
pand
iret
aas
jo
cmpsb
out
outsl
adc
je
inc
mov
movsl
add
jo
test
je
pop
inc
out
aas
jo
mov
add
stc
mov
jp
inc
sub
in
mov
mov
jbe
cmpl
hlt
lods
call
mov
aas
mov
das
jg
call
arpl
out
neg
out
inc
data16
xor
mov
pop
push
add
dec
les
out
and
jmp
add
inc
data16
sbb
mov
repnz
and
cmp
sub
ret
jg
cmpsl
mov
mov
sbb
mov
out
add
in
cmc
bound
adc
mov
push
sbb
mov
push
inc
jmp
or
inc
jmp
scas
call
adc
stos
gs
jo
mov
pop
imul
cmpsb
or
jae
cmpsb
or
pop
je
adc
xor
aaa
add
pop
int
mov
gs
bound
lret
sub
and
and
incl
inc
dec
sbb
lods
fwait
sar
and
in
mov
decl
mov
jne
scas
and
incl
xchg
jne
pop
ret
fcoml
std
jne
sbb
push
pop
ret
int3
adc
fdivs
pop
test
add
sub
jmp
ret
sbb
sahf
push
pushl
sbb
mov
pop
adcb
add
mov
push
arpl
push
pushl
leave
cmpxchg
repz
lds
adc
test
subl
mov
xor
jge
adc
testl
inc
mull
shll
test
adc
out
inc
jae
popa
mov
xlat
fistpll
incb
fdivr
pop
sbb
inc
jo
inc
je
mov
adc
je
dec
pushf
and
repnz
dec
add
add
mov
addb
or
rorb
testb
and
mov
out
aas
hlt
call
pop
hlt
lcall
mov
push
cltd
call
fs
xorl
mov
push
push
mov
push
movsb
aas
aaa
bound
cmc
call
pop
hlt
lcall
or
jae
xchg
mov
sbb
mov
mov
mov
mov
add
popa
push
in
and
repnz
std
xchg
data16
add
pushf
jecxz
jmp
lahf
in
adc
mull
je
cli
mov
jg
or
popa
je
clc
popa
je
jns,pt
mov
leave
fisttpl
cli
mov
ret
jae
mov
stc
data16
loope
jmp
aad
popa
push
sbb
popa
in
neg
add
popa
jmp
ret
mov
add
in
mov
inc
lcall
fwait
incb
pop
iret
mov
arpl
mov
push
int3
mov
or
int3
cmpsb
je
sbb
push
jae
push
pop
das
and
add
and
std
adc
xchg
movsb
test
mov
inc
xlat
mov
inc
int3
mov
negb
mov
adc
or
testb
jae
test
lock
add
fsts
mov
lock
xlat
add
aad
or
cmp
cmc
cmpsb
pop
jo
mov
xchg
xchg
adc
jb
int
dec
testb
lahf
xchg
and
sahf
imul
jge
pop
inc
jo
inc
jae
das
sbb
jno
mov
xor
pushf
adc
mov
test
call
sti
lods
idiv
jge
out
mov
jge
cmp
xor
cli
lods
xchg
fwait
mov
or
pop
roll
xorb
jo
je
mov
add
push
iret
shrl
sub
jmp
push
cmp
pop
lahf
fcmovb
jg
sbb
std
mov
mov
out
aad
icebp
ljmp
pop
hlt
aas
dec
enter
pop
fs
push
out
shrl
or
sub
push
pushf
or
sbb
jae
jb
lock
cwtl
filds
lcall
mov
push
movsb
psllw
add
mov
add
imul
pusha
out
mov
sbb
or
sti
fisubrs
jmp
fs
inc
jb
fnstenv
aas
fs
bound
dec
mov
xchg
add
lock
xor
push
sub
mov
jp
call
inc
fwait
orl
inc
sub
sub
repz
popf
pop
aad
call
popa
sbb
xor
addl
fistl
push
add
dec
lock
pop
movb
sub
push
adc
push
scas
enter
mov
add
iret
inc
xchg
add
inc
mov
push
add
add
ret
pop
or
popf
jnp
push
add
call
rolb
je
shr
out
add
jp
adc
sbbb
add
fmuls
jg
fadds
test
lods
push
jmp
adc
iret
xor
mov
push
enter
mov
inc
pop
dec
xor
add
mov
int3
xor
mov
loopne
add
cli
shlb
jmp
and
mov
ret
lret
shlb
in
jl
jo
jns
addr16
add
lods
call
add
dec
je
jmp
sub
mov
sar
cmp
or
jb
call
mov
scas
ret
sbb
xchg
push
sbb
iret
lret
pop
add
lahf
ret
adc
cmpsl
or
stc
lahf
add
cwtl
jp
add
or
fstpt
data16
sub
hlt
inc
ja
out
inc
push
stos
scas
and
aas
sub
mov
ret
inc
inc
xlat
add
outsb
mov
and
adc
imul
mov
pop
lds
jo
loope
inc
pop
add
mov
in
add
fists
std
scas
or
iret
inc
in
outsb
jae
orl
mov
in
ds
and
jmp
das
jo
xor
push
and
in
std
mov
xchg
push
std
jmp
jae
mov
jge
pop
loope
incb
cld
add
data16
jb
fdivr
sbb
insb
fildl
jb
add
mov
pop
add
fstpl
fildl
mov
data16
pop
mov
inc
jmp
mov
in
add
push
shlb
arpl
imul
nop
cltd
fsubr
add
add
andl
dec
mov
mov
mov
pop
ret
push
mov
or
incl
adc
inc
sub
es
faddl
mov
cs
mov
pop
fidivl
jecxz
or
jg
test
inc
jb
inc
jae
lcall
cmc
imull
fistps
lret
out
xchg
add
in
add
lea
out
mov
loopne
sub
add
repnz
call
ss
aaa
inc
add
fldl
rcrl
inc
add
pusha
jg
js
mov
jo
mov
mov
add
fimuls
sub
hlt
fisttpl
mov
lods
es
es
push
rorl
mov
out
sub
cmpsl
call
push
add
adc
ds
push
je
mov
cmpsb
call
jmp
daa
sub
test
mov
out
xchg
or
jo
sbb
gs
mov
bound
shrb
lock
sahf
mov
xlat
xor
out
lea
add
call
or
push
jge
add
dec
jp
pop
add
push
pop
push
lock
std
jle,pt
jae
jmp
push
add
sbb
jmp
cmp
mov
dec
xor
sbb
imul
jno
sbb
mov
loop
xor
inc
add
movsb
push
adc
pop
fwait
add
push
shrl
jmp
nop
stos
dec
insb
sub
xchg
sbb
std
hlt
pop
jmp
add
pop
inc
clc
ret
push
in
sbb
andb
dec
bound
imul
inc
popf
add
in
jmp
gs
fists
lods
push
push
lea
xchg
push
mov
xor
faddp
adc
mov
and
push
push
xchg
icebp
call
and
add
add
jb
aad
adc
je
add
stc
jmp
pop
mov
mov
lea
jo
add
lods
pop
xor
xor
ljmp
inc
adc
lret
jle
jge
adc
xor
mov
repz
inc
ljmp
cmpsl
mov
push
add
jo
std
mov
leave
sbbl
add
xchg
xlat
cmc
or
sbb
sub
push
repz
int
pop
outsl
mov
sbb
mov
cwtl
fistpll
lods
sbb
xor
mul
fsub
jl
dec
fs
mov
movl
les
das
or
repnz
shl
enter
xor
bound
mov
jo
pcmpeqd
fsub
jge
mov
int3
mov
or
jo
xchg
jl
stos
jb
xchg
push
push
je
imul
fsub
add
pop
add
push
std
inc
insb
stos
insb
add
jae
popf
jno
fisttpl
cmc
notb
sub
test
add
add
add
lcall
outsb
mov
jmp
negl
jmp
stos
shl
call
add
call
xchg
push
std
cwtl
ds
nop
add
push
call
insl
xor
push
jb
push
cmp
pop
dec
fadds
xchg
popf
mov
cmp
sbbl
push
mov
or
sbb
and
add
pop
xchg
nop
jecxz
call
xchg
add
push
push
jmp
xchg
sbb
rcrl
int3
push
in
test
add
jmp
pop
pop
add
rolb
mov
dec
sti
icebp
add
fcoml
adc
mov
or
push
rcrb
mov
hlt
std
mov
xor
push
test
pushl
mov
jae
or
sub
cmp
mov
jo
enter
cs
clc
inc
add
jmp
sbb
incl
jmp
daa
inc
stc
mov
stos
pusha
std
pop
mov
fidivl
add
jb
mov
pop
jmp
mov
repnz
sub
add
outsb
lock
mov
mov
and
or
inc
lds
inc
fisttpl
cmp
fmul
mov
dec
jns
push
aad
in
arpl
ljmp
add
popa
sbb
call
add
stos
mov
fs
dec
push
mov
bound
inc
jo
out
hlt
jmp
sub
movsb
dec
pusha
scas
add
dec
hlt
lahf
gs
out
lods
xlat
push
jnp
pusha
jmp
mov
lret
aad
rcrb
arpl
outsl
stos
jo
xchg
inc
add
inc
dec
std
gs
xor
out
jmp
lahf
lock
std
xor
popa
inc
int
lock
xorl
popa
fiadds
jmp
fimuls
sub
dec
dec
insl
cwtl
xbegin
fcompl
mov
adc
fistl
jmp
dec
jle
pop
xchg
lock
push
mov
std
push
dec
xchg
or
push
inc
mov
xor
mov
int
jmp
aaa
scas
add
push
jle
cltd
mov
push
outsl
add
shrl
add
movsb
jmp
mov
sub
jnp
add
call
ja
inc
push
lret
cmp
cwtl
sub
pop
decl
mov
sbb
inc
fcompl
dec
neg
adc
imul
sub
sti
push
mov
push
lock
jo
sub
gs
out
add
fnsetpm(287
std
lahf
cmp
jmp
aad
inc
jnp
mov
mov
pop
or
mov
sub
pop
cli
dec
insl
lret
jnp
pop
jo
jle
icebp
gs
add
mov
cmp
push
jmp
jle
pop
jb
add
js
cld
pop
add
in
sbb
pop
inc
add
jno
add
jo
xchg
cld
xchg
adc
and
mov
insb
inc
and
xchg
add
xchg
sti
lcall
mov
inc
jbe
jge
jo
pop
jg
dec
sub
jecxz
add
sbb
jg
fsub
add
pop
pop
call
addr16
xchg
scas
ficoml
sbb
or
outsl
sub
repz
lcall
sub
fildl
insb
icebp
cmpsl
add
pop
add
mov
mov
jmp
mov
jae
mov
xor
mov
jae
mov
loop
movsb
jnp
jnp
je
jnp
push
adc
jmp
jae
mov
stos
push
shll
out
call
ret
jb
call
aad
pop
jb
inc
hlt
jecxz
fildl
jae
push
xchg
mov
divl
dec
mov
ficompl
xor
repz
dec
sahf
add
pop
cmp
jmp
and
add
dec
mov
cmpsb
add
pop
and
add
add
pop
jl
mov
mov
fldl
xor
data16
inc
aam
shr
or
std
pushl
dec
lea
fiadds
setg
or
xchg
sahf
sub
mov
pop
mov
pop
mov
jo
mov
repz
pop
in
inc
je
mov
into
incb
mov
add
jo
sub
mov
push
push
inc
js
add
loopne
add
jo
sbb
dec
int
pop
jmp
jp
loopne
add
iret
mov
lcall
loopne
dec
sahf
jns
js
add
jo
sti
sub
out
adc
clc
out
movsl
cmp
out
push
add
scas
fcmovnb
lret
jecxz
add
inc
push
add
mov
cltd
fists
fbld
push
push
iret
inc
jb
outsl
push
in
aaa
fbld
xchg
xlat
bound
cmpsb
push
stos
fildll
lahf
div
mov
or
cli
xchg
in
jnp
cld
js
push
daa
adc
lahf
or
faddl
push
in
scas
scas
jae
sub
jnp
arpl
ds
cmp
out
std
iret
lret
sti
mulps
test
mov
add
scas
mov
fisttpll
jmp
jae
add
call
insb
pop
pop
in
mov
fwait
add
pop
sarb
jbe
lock
jge
inc
inc
in
lock
xlat
dec
push
fisubrs
adc
insb
pop
jnp
add
rorl
cmp
xor
jmp
sbbl
dec
mov
add
inc
mov
xchg
mov
add
fisubrl
cmpsl
sbb
addr16
or
mov
ja
fld
mov
or
fiaddl
test
ret
fdivr
or
ret
push
mov
or
push
push
ret
lock
icebp
cmp
add
notb
movsl
sahf
stc
add
adc
push
insb
inc
lock
add
mov
test
push
push
push
leave
mov
push
out
pop
jo
xchg
comiss
add
xchg
repnz
fimuls
or
testb
adc
testl
gs
mov
pushf
cmpsl
into
inc
ja
repz
mov
add
jo
and
jmp
jo
mov
cwtl
flds
negl
add
enter
push
sti
test
sbb
std
call
gs
std
call
mov
jo
or
dec
mov
cmc
add
cmpsb
ret
repz
cmpsb
lret
divl
push
in
jmp
dec
mov
das
aam
and
out
jo
in
xor
pushl
mov
lods
jae
in
mov
bound
hlt
dec
fiadds
or
add
mov
add
inc
push
jo
lock
pop
call
out
cli
shll
cs
hlt
jno
add
cmc
dec
add
in
and
jmp
add
mov
inc
pop
call
movntq
insb
inc
jae
push
sahf
and
repz
and
insb
rolb
inc
dec
inc
std
jmp
jae
mov
mov
rolb
das
mov
je
jmp
mov
mov
cli
and
add
and
jae
in
add
pop
inc
mov
jne
adcb
cmp
xchg
cmp
dec
mov
test
pop
inc
dec
lea
xor
call
mov
sahf
je
iret
sbb
push
or
mov
pop
add
scas
cli
inc
and
push
jns
fnsave
mov
in
test
add
cmp
add
sbb
mov
cmp
mov
jle
in
xchg
or
add
inc
sub
repz
xor
cs
push
jmp
mov
sti
push
inc
je
push
call
repnz
lret
sti
hlt
jb
add
sub
aam
jo
sub
xor
push
mov
shrl
out
mov
sbb
xor
mov
add
lret
sti
jmp
or
add
mov
add
in
repnz
and
test
xorl
ret
add
pop
and
movsl
divl
es
cmc
dec
inc
imul
bound
lret
dec
ss
inc
add
frstor
lds
out
ljmp
or
test
pop
out
out
lahf
mov
mov
in
add
sbb
add
mov
mov
aas
icebp
mov
push
lods
pop
ljmp
add
jg
idivl
test
stos
push
push
inc
in
or
jmp
jae
mov
ds
add
call
gs
xchg
test
stos
lret
sar
add
pop
sar
fimull
out
adc
adcl
fs
xchg
sub
sbb
ljmp
ret
jae
movl
mov
add
jno
xchg
mov
adc
inc
inc
xor
rcrb
or
lds
lea
and
pushf
add
je
jmp
push
xchg
add
mulb
xor
test
sbb
inc
es
out
cmp
add
cmp
xor
xor
add
leave
push
add
cld
add
stc
ficoms
mov
mov
inc
test
js
add
sti
xor
nop
pusha
xor
add
xor
push
fsub
icebp
aas
jo
sbb
in
jb
pop
std
divl
dec
stc
lcall
gs
aas
jo
or
shll
lods
cmp
pop
mov
sub
iret
lds
xorl
decb
repz
mov
movsl
imul
daa
sub
movsb
iret
mov
mov
or
mov
mov
sbb
ret
lahf
or
mov
xchg
sbb
ret
xchg
test
sub
lcall
sbb
mov
fistpll
ljmp
daa
jg
fwait
mov
inc
sbb
xor
add
in
mov
sbb
mov
call
mov
mov
test
cmp
cwtl
lret
cmp
mov
xchg
xor
ljmp
mov
jno
dec
add
fistl
jge
jg
arpl
jb
push
aas
mov
stos
pcmpgtd
cmp
loop
je
aaa
push
sbb
pusha
shlb
inc
movsl
std
loop
xor
std
sbb
mov
cmp
pusha
sar
data16
pop
mov
jbe
lock
cmp
hlt
and
fiadds
bound
dec
or
dec
sbb
data16
fimuls
or
rcll
lcall
push
loope
lea
push
in
mov
xor
loopne
fisttpll
lcall
jne
shll
pop
jp
imul
push
std
out
mov
mov
add
push
push
test
push
xchg
mov
mov
incl
scas
mov
xor
jo
add
test
add
pop
or
aas
jo
sbb
and
lods
add
fadds
add
mov
mov
std
das
js
add
aaa
inc
loopne
ja
xchg
repnz
jp
add
xchg
mov
lds
sbb
idiv
sbb
add
pop
adc
add
mov
incl
add
je
mov
test
add
out
sub
out
add
cmp
into
inc
icebp
xchg
jo
and
mov
ja
popf
or
fistpl
mov
cld
cmpsl
jge
out
mov
lcall
ret
ffree
ja
and
rep
jecxz
pop
int
inc
add
and
jo
xor
inc
fs
cmpsb
inc
cs
aaa
cmp
jle
mov
or
bound
lock
mov
scas
hlt
jne
sbb
aaa
add
cli
scas
aam
fcmovnu
add
ljmp
mov
xchg
andl
flds
aaa
out
xchg
sub
and
xchg
mov
lret
nop
stos
jae
outsl
jbe
and
xchg
loopne
mov
push
out
pop
cmpsl
adc
insb
mov
hlt
bswap
inc
jmp
mov
test
jb
add
pop
or
call
dec
sbbl
mov
insb
std
hlt
xchg
inc
add
mov
jne
pop
push
add
dec
aad
ss
call
pop
bound
test
bound
jl
add
mov
jne
rclb
lret
sbb
or
std
push
adc
pop
jl
jle
test
mov
std
call
add
pop
fimull
test
filds
mov
push
mov
fs
adc
adc
popa
inc
fcoml
stc
add
mov
comiss
add
stos
jbe
imulb
mov
out
adc
fisttps
orb
or
jmp
sub
sub
cld
out
pop
addl
dec
jge
jae
push
mov
xchg
add
xchg
pop
adc
incb
rorl
inc
mov
add
hlt
jns
or
clc
and
test
idivb
jo
push
add
cmpxchg
jo
jecxz
popl
push
push
cmpsl
cmp
push
call
int3
loopne
push
nop
stos
push
xchg
gs
cli
shll
cmpl
pushf
add
pop
cltd
flds
clc
xchg
arpl
stos
xor
add
cmp
stos
cmp
adc
rcll
inc
ja
sub
push
inc
repnz
and
rcll
sub
arpl
leave
jmp
or
xor
mov
sub
mov
lcall
sub
int
mov
mov
fcomps
sbb
add
mov
jae
mov
sub
pop
outsb
mov
test
in
call
nop
xchg
dec
lcall
icebp
call
add
dec
outsb
mov
fldenv
mov
gs
jp
adc
add
mov
mov
jae
and
mov
into
push
xlat
andl
das
gs
xchg
jae
in
push
sbb
fnsave
and
push
jle
pop
push
cmp
and
leave
pop
push
add
imul
push
jo
sahf
or
imulb
mov
incl
inc
add
fimuls
add
sub
push
jg
push
sahf
cmc
pushf
add
stc
mov
add
jno
add
fildll
jmp
idiv
push
adc
push
and
add
addb
and
lret
movsb
cli
jl
lods
cli
jg
sarl
xor
add
cmpsl
fildl
fst
lahf
mov
sahf
ret
aas
mov
sbb
mov
enter
jo
push
adcl
xor
daa
subl
cmpsl
jge
aaa
fs
iret
test
imul
xor
mov
and
jecxz
jo
lcall
mov
cltd
outsl
sbb
xchg
pop
repnz
insb
inc
cld
fistps
inc
pop
or
jno
pop
mov
divb
std
je
pop
inc
frstor
cmp
jecxz
xor
pop
xor
xor
add
xor
xor
gs
and
add
jbe
jmp
jb
fdivrs
out
flds
jmp
xor
notb
xchg
call
add
add
jae
adc
jl
jb
clc
and
jbe
sbb
lods
mov
in
scas
insb
fildl
add
add
cltd
shll
cs
je
pop
cmp
mov
jne
mov
or
push
inc
add
aad
adc
xchg
fisubs
js
pop
std
lds
out
fiadds
add
inc
insb
mov
mov
mov
shl
cmpb
xor
push
dec
push
cmc
std
loopne,pn
call
and
push
lea
cld
decl
in
add
popa
ja
jo
ja
outsl
jge
pop
test
test
add
jo
js
push
sub
add
sbb
dec
das
js
add
inc
mov
test
idivb
jo
mov
sti
cmc
stc
subb
inc
insb
pop
or
lret
std
call
mov
inc
js
lahf
stos
sarb
jne
mov
test
aaa
je
cmp
cmpsl
mov
pop
and
mov
mov
jb
pop
lds
add
xor
add
xchg
jle
and
add
out
xor
pop
repz
jno
out
cmc
push
mov
jns
adc
add
mov
dec
jae
out
icebp
adc
xor
add
cmpsb
sbb
test
out
xorb
jbe
dec
ficompl
sub
orb
pusha
sub
add
push
daa
xchg
xorb
add
add
push
add
mov
jae
insl
clc
std
push
jnp
dec
sub
push
call
lods
fisttpll
xchg
and
jmp
inc
leave
inc
jmp
test
lods
jmp
call
bound
jb
push
xchg
aad
jmp
mov
aad
jmp
add
jmp
push
loopne
dec
insb
fildl
fs
dec
push
add
cltd
pop
dec
jne
lods
je
adc
in
mov
push
lea
cmp
add
inc
add
or
push
test
aam
jmp
pop
cld
pop
dec
filds
jmp
mov
add
dec
mov
adc
aad
sbb
inc
dec
pop
call
xor
sbb
je
and
or
lds
xor
pop
sub
dec
lret
pop
clc
js
sub
push
jbe
shlb
clc
mov
xchg
or
sub
imul
push
jne
iret
pop
test
insl
push
stc
add
mov
shll
jae
jbe
popa
fwait
add
jb
inc
pop
into
mov
cmp
jmp
sub
push
enter
js
add
andb
shl
pop
ret
loopne
jmp
in
mov
pop
dec
insb
cmp
in
pop
shll
inc
jmp
jl
ret
bound
and
mov
bound
inc
jbe
sub
sub
call
push
mov
add
fstpt
cmp
sbb
outsb
xor
or
loopne
jl
ret
bound
push
mov
aam
pusha
cmpsl
neg
sbb
sbb
bound
es
shrb
pusha
cmpsl
idiv
sbb
push
jmp
sti
xchg
jp
sub
in
inc
adc
jle
test
xor
stos
scas
das
push
add
jecxz
add
jo
loope
data16
pusha
out
add
cmpsb
ret
ja
test
and
fistpll
jmp
jno
add
in
in
sub
scas
mov
push
test
and
push
fidivrs
jmp
push
fwait
add
xchg
filds
cld
add
or
test
sub
pop
test
pop
mov
add
lret
idiv
adc
add
mov
push
mull
std
add
and
scas
enter
or
push
push
dec
daa
mov
daa
xor
loopne
clc
mov
sbb
les
loope
mov
mov
and
stos
sahf
cmp
in
inc
data16
adc
jns
mov
add
and
xchg
xor
push
adc
ret
cwtl
inc
adc
arpl
sbb
cwtl
cmp
je
inc
lcall
adc
jae
movsb
jo
jo
js
dec
movb
xor
sar
je
add
scas
jns
int3
mov
sti
mov
roll
popf
out
outsl
add
inc
out
xor
ret
sbb
div
jno
call
jmp
icebp
mov
test
add
push
add
adcb
decl
add
in
pop
add
jo
or
xor
add
div
test
jge
jo
add
stc
cld
mov
or
ret
xor
cli
mov
push
add
ljmp
and
loope
and
push
and
xchg
cs
rorl
shlb
pop
add
push
mov
mov
mov
imul
jae
ljmp
pop
daa
jae
pop
mov
insb
negl
and
testl
jno
jmp
aam
sub
push
insb
add
push
shll
test
or
dec
popf
jae
rolb
xlat
add
js
sub
das
fucomi
sar
add
ljmp
ja
jl
inc
push
pop
inc
push
fwait
push
xchg
ds
jb
cmp
xor
xchg
mov
pop
test
jmp
aas
loop
jne
mov
incb
std
out
sbb
mov
pop
adc
jae
jb
or
ss
cmp
dec
fcomip
fadds
and
repz
cmp
cmp
filds
cmp
addb
mov
jne
fdivs
ret
inc
adc
pop
dec
cld
push
push
inc
loopne
lret
das
rcr
xchg
pop
dec
cld
push
in
shr
push
add
pop
faddl
push
mov
jns
fadds
mov
push
inc
cmp
push
jg
fsts
test
aas
stos
pop
adc
adc
mov
xrelease
faddl
jmp
adc
das
js
inc
loopne
je
push
jmp
add
jmp
adc
mov
inc
in
out
loopne
jae
les
pop
and
test
add
repz
push
push
mov
loope
inc
cmp
dec
xchg
stos
add
xchg
xor
shl
cli
sbb
add
mov
cld
ja
add
jge
roll
gs
mov
xor
imul
fstpt
fdiv
fsub
xor
push
sub
idivl
mov
jb
js
out
jo
lcall
add
pusha
jbe
push
in
cmp
cmpsb
rorl
fisubrs
jle
shl
ja
push
mov
or
xchg
mov
pop
cs
icebp
sbb
in
sahf
pop
sub
ret
mov
bound
sbb
push
push
movsb
call
insl
fcmovnb
loope
mov
push
jae
add
les
std
aam
leave
inc
jmp
mov
jecxz
xor
and
add
addr16
je
cmp
fstps
push
ss
inc
jmp
bound
rep
jae
jae
mov
inc
xchg
push
shlb
lcall
imul
adc
add
fdivr
xor
add
gs
mov
push
mov
adc
push
mov
xor
add
fdiv
inc
jne
std
jae
xchg
inc
cmp
add
flds
js
leave
fcmovnb
push
xchg
movsb
inc
add
push
push
in
mov
dec
ret
hlt
adc
fildl
add
and
call
shrl
fstpt
or
fcmovnb
add
add
push
std
jge
cmovo
dec
cld
mov
cs
push
enter
jo
sti
std
jo
cld
jae
dec
js
pop
xor
adc
xorl
andnps
scas
mov
out
cmp
adc
subl
js
repz
call
or
dec
xor
movb
daa
add
xchg
pushw
mov
push
lods
pop
jmp
fistpl
mov
fwait
out
mov
sbb
je
push
add
fldt
dec
pushf
shrb
js
jmp
adc
xor
xor
pushf
adc
cli
xchg
jmp
fcoms
cmp
lret
adc
lret
jbe
xlat
ficoms
js
roll
popf
testl
repz
push
movsl
or
sbb
mov
std
std
cld
addr16
inc
jmp
ljmp
jg
push
adc
aad
add
jo
clc
fisubs
push
adc
adc
aam
inc
lds
testb
insb
mov
or
jmp
push
pushl
fildl
sbb
das
orl
mov
adc
fwait
add
push
bound
and
dec
add
adc
push
lea
jg
stos
inc
lcall
das
daa
pop
fdivs
icebp
and
dec
push
inc
mov
dec
inc
or
imul
add
test
imul
or
inc
int3
mov
je
lcall
jne
and
sub
cwtl
add
sbb
mov
repnz
jne
sub
push
inc
xor
in
jno
add
push
fwait
cld
push
adc
mov
push
and
testl
std
jo
cli
jae
in
inc
cld
cld
xor
add
cmp
add
xor
cmpl
std
dec
adc
add
add
xor
ret
add
or
dec
mov
scas
addps
scas
push
pop
xor
in
adc
push
rol
les
fs
dec
je
xor
pop
rorl
sarl
dec
cmp
add
add
mov
mov
les
inc
push
jmp
sbb
sbb
outsl
push
lock
shlb
rcrb
or
jecxz
arpl
faddl
adc
sbb
insb
fistl
sbb
clc
sbb
nop
fisttps
xchg
icebp
daa
add
push
jecxz
mov
pop
stc
arpl
cmpsb
jno
insb
sbb
dec
xchg
cmpsl
inc
mov
jmp
lds
add
mov
adc
test
mov
ret
scas
mov
and
call
xor
call
insl
xor
addl
arpl
xor
stc
fdivr
push
adc
push
cmp
xchg
add
popa
mov
sub
xor
data16
add
jae
xchg
rol
sbb
push
std
add
adc
adc
sub
ret
movsb
lret
or
out
inc
lcall
xchg
arpl
jmp
in
call
test
pop
jns
dec
mov
incl
hlt
aaa
sti
adc
or
pop
adc
ret
cmpsb
xchg
ljmp
shld
ds
jecxz
lods
xchg
jmp
sbb
sbb
dec
xor
shlb
add
add
pop
adc
pop
add
mov
scas
les
mov
push
std
push
push
notb
push
adc
in
shll
lock
or
cld
xor
je
push
divb
rcll
cmp
inc
add
jno
or
jge
or
jns
call
cmpsl
adc
add
xor
ret
dec
mov
call
push
cmpsb
lcall
jle
repz
mov
call
cli
fldt
or
pop
jmp
stos
sbb
pop
add
pusha
add
mov
jecxz
xchg
sub
outsb
cmc
stc
push
int
jecxz
pop
cmc
xchg
add
scas
sbb
add
bound
test
add
shll
popf
hlt
pop
push
xchg
add
add
aas
js
cmpsl
pop
icebp
push
jmp
mov
fs
push
out
cmpb
add
add
xchg
add
jo
clc
jl
bound
loop
jo
std
sahf
fsubl
loope
out
mov
std
xchg
sbb
jle
pop
sar
sbb
sbb
xor
add
push
idiv
lods
mov
add
or
ljmp
sub
movsb
inc
mov
sub
lods
call
add
push
bound
add
in
and
xchg
arpl
sbb
test
lods
std
add
cld
jno
or
dec
iret
cwtl
add
jge
push
sbb
dec
or
inc
fnstenv
imul
leave
mov
lock
cmp
push
xchg
lock
int
jmp
int
push
or
je
mov
add
pop
je
shlb
out
add
pop
push
mov
adc
decb
adc
pop
cwtl
add
sbb
adc
add
or
sti
adc
jo
les
mov
pop
add
aad
or
int
or
repnz
jge
pop
inc
jo
stc
lcall
fldl
pop
mov
mov
inc
jns
push
inc
mov
rorb
push
fcomps
fidivrs
add
repnz
inc
add
inc
inc
push
in
aad
sti
aas
stc
imul
and
inc
inc
and
fnsave
fcmovnu
inc
cmp
push
or
nop
scas
add
mov
ja
xchg
mov
mov
arpl
call
fld
flds
cwtl
icebp
inc
xor
push
stc
sbb
iret
test
inc
push
pusha
mov
lock
roll
jne
xlat
lock
ss
adc
out
sbbl
pop
jo
fwait
daa
je
xchg
daa
insb
adc
xor
fildl
sub
push
bound
pop
in
adc
jb
fs
bound
push
add
jae
cmp
jo
lds
cmp
filds
shrl
aas
aad
hlt
jg
inc
jmp
jae
sub
jecxz
and
stos
mov
fiaddl
jmp
jns
aam
fnsave
movsb
aas
lea
insb
pusha
mov
jb
pop
ret
or
add
fmull
mov
or
out
mov
add
push
push
mov
ret
xlat
sti
je
je
jno
add
in
popf
add
and
dec
jae
ret
push
mov
pop
in
sub
xchg
lock
add
dec
pushf
add
movsb
popf
push
lea
mov
call
add
add
push
inc
aam
mov
cmp
jno
sahf
xchg
adc
loop
sti
jne
add
jo
les
add
imul
fsubrl
daa
sbb
sarb
jns
repz
add
and
jmp
clc
adc
add
jbe
jge
std
data16
aad
inc
jne
repz
out
out
add
add
jmp
cld
scas
jno
inc
hlt
cmc
cmp
add
out
mov
mov
jmp
adc
push
jg
stc
cld
pop
sbb
inc
jo
leave
orl
std
in
jp
dec
fdivl
ret
mov
aam
ja
add
cmpb
adc
icebp
adc
js
push
movsb
out
adc
out
sbb
push
add
hlt
lahf
push
add
push
xor
in
data16
scas
aad
sbb
add
and
ja
push
adc
mov
rcll
mov
mov
jns
pop
push
add
mov
sti
mov
sar
cwtl
cmp
out
or
add
fildl
jmp
mov
add
mov
mov
jae
std
faddl
mov
xor
sub
mov
mov
bound
mov
adc
push
cld
mov
je
fcom
mov
stos
ja
push
xor
xor
sub
shrl
xor
add
daa
lret
sahf
fwait
add
jmp
andb
inc
jmp
inc
add
je
dec
sbb
insb
add
add
pop
cmpsl
sti
adc
rcll
pushl
xor
cltd
add
xchg
clc
push
call
push
scas
add
das
sti
xchg
jle
mov
xorl
xchg
jl
push
push
sub
test
add
xor
int
das
fstpt
sbb
sbb
add
inc
mov
jl
adc
add
sbb
cmpsl
inc
add
clc
fsubrs
xor
lds
lock
jo
cli
jo,pt
jmp
inc
add
popf
fisttpll
clc
addb
lods
or
jb
jno
pop
std
push
std
ficoms
inc
jo
inc
clc
repz
jae
icebp
jmp
jle
add
inc
icebp
ja
add
repnz
mov
lods
jo
push
push
jmp
push
ljmp
test
dec
jle
add
outsb
fisttpl
add
xchg
cld
mov
out
mov
add
in
lcall
xchg
and
ret
sarl
jmp
xor
push
jo
repz
push
or
push
push
jecxz
inc
push
roll
inc
int
fdivrl
sbbb
fcmovnu
add
and
jo
cld
out
sti
nop
jg
dec
jae
jmp
lock
popf
hlt
mov
pop
lods
std
hlt
inc
jmp
jmp
mov
or
aaa
add
pop
negb
lret
fildl
mov
arpl
inc
jmp
mov
testl
insb
inc
dec
mov
mov
insb
pop
cmp
fwait
add
push
in
aaa
rolb
insl
mov
scas
jne
add
cmp
dec
ffreep
add
cwtl
stos
sti
adc
add
bnd
ror
or
sbb
cld
pop
fldl
add
lods
sti
jne
hlt
adc
popf
add
leave
je
add
or
inc
orl
enter
push
andb
push
pop
adc
push
adc
jno
pop
aas
icebp
inc
leave
xchg
sti
adc
rcl
push
sbb
jo
shl
scas
pop
add
and
add
inc
add
repnz
psubsw
xor
jns
mov
inc
add
ss
pop
dec
stc
mov
mov
push
jl
cmp
int
xor
mov
or
gs
adc
daa
jg
je
enter
or
adc
cmp
ljmp
test
jge
adc
shl
add
loop
add
push
and
repz
testb
jle
inc
icebp
daa
add
sbb
push
jmp
mov
js
add
inc
push
shll
fs
lods
lret
stc
sahf
fistpll
jb
fs
movsb
fbstp
out
repz
pop
mov
jo
imulb
pop
test
jo
out
mov
aaa
in
ljmp
push
fld1
add
add
push
std
jmp
mov
sbb
add
frstor
mov
call
das
repz
lcall
pop
pop
cmp
aaa
aaa
push
push
std
xlat
addr16
adc
outsl
fwait
add
orl
fildl
aaa
xchg
push
mov
push
inc
pop
scas
sbb
jmp
sbb
std
negb
stos
add
testl
stos
pushw
je
addb
mov
sti
jne
xchg
sti
push
int
rorb
sub
add
add
mov
sbb
repnz
sti
jne
adcb
jne
mov
call
test
flds
mov
add
pop
fsincos
jne
or
stc
add
inc
jne
sarb
sarb
adc
add
jl
testb
je
adcb
push
jmp
in
push
inc
push
add
iret
daa
in
adc
repnz
inc
cltd
lret
jb
clc
jno
or
sub
adc
mov
loope
mov
ja
xor
cmp
add
jg
mov
addr16
leave
inc
fs
sub
jo
sub
adc
int3
cmpl
dec
test
dec
icebp
add
repz
xchg
ds
je
inc
std
add
push
lock
inc
imul
ss
dec
loopne
arpl
xabort
in
daa
add
popf
mov
mov
out
jmp
andb
cwtl
mov
add
or
sti
or
repz
es
add
push
push
test
mov
loop
shrb
jo
out
dec
insb
in
add
pop
mov
jo
out
fwait
shll
shl
lcall
push
jge
je
or
cs
add
out
adc
add
jae
std
push
adcl
rolb
std
shrl
test
call
jl
mov
jbe
dec
mov
sbb
add
jae
xchg
add
out
or
lods
bnd
push
js
add
xchg
dec
pop
not
pop
cmpsl
std
mov
inc
cli
cmc
int
fildl
pushf
inc
push
push
xchg
jb
into
push
sbb
shrb
iret
add
sbb
je
jbe
add
fimuls
push
mov
xlat
xchg
push
les
sub
dec
sti
jne
sti
xlat
dec
sbb
add
xchg
push
push
out
inc
jg
popf
dec
jmp
push
push
push
lock
fsubl
push
inc
adc
mov
push
or
test
jae
inc
and
pop
arpl
dec
call
add
notl
adc
ja
dec
in
cmp
rcr
xor
insl
sub
jbe
jne
push
sahf
stc
mov
pushf
lods
add
add
mov
enter
aas
pop
mov
int3
push
jge
pop
or
push
pop
shrl
rep
out
jmp
sbb
lcall
jo
add
add
push
add
or
shrb
sub
push
push
inc
add
mov
add
sbb
add
add
mov
out
inc
pop
in
lock
out
mov
fwait
out
fucom
shl
xchg
xor
sub
xchg
jmp
add
push
icebp
mov
fnstenv
lds
xchg
inc
jo
push
fbld
flds
mov
jmp
xchg
mov
mov
add
push
cmc
mov
mov
loopne
fistl
cmp
test
cli
out
dec
mov
lods
rorl
inc
xchg
mov
sbb
popa
sbb
addr16
jge
sbb
sbb
loope
sbb
cmc
cmp
add
fucomi
out
lcall
popa
lods
std
sbb
add
mov
je
shl
push
sbb
hlt
add
dec
enter
jmp
jmp
xor
push
xor
int
pop
rol
or
iret
add
xor
loop
or
add
jno
das
add
pop
icebp
inc
sbb
fisttpll
aaa
fsts
mov
xchg
dec
dec
incl
pop
hlt
pushl
xchg
jno
push
xchg
cld
adc
flds
jmp
push
inc
cld
cltd
flds
add
lcall
jge
data16
add
add
jg
jo
push
add
add
jmp
push
jl
mov
adc
sarl
das
push
in
aad
test
fdivr
pop
mov
push
or
xlat
out
outsb
les
ret
and
push
add
hlt
in
add
sbb
mov
cmp
js
das
mov
add
cmp
push
jno
add
mov
pop
fcmovne
sub
cld
imul
fstpt
jmp
dec
ds
sbb
sub
lcall
add
orb
cld
jnp
sbb
add
jmp
cmp
push
ret
fistpl
adc
jo
cmp
and
enter
xchg
cld
iret
and
add
cmpsl
or
pusha
out
jo
and
jo
bound
out
sahf
ret
repz
add
and
call
add
dec
xor
jmp
dec
jmp
movsl
addr16
lcall
jns
jae
mov
fildl
push
sti
jmp
jge
add
jmp
sbb
je
loope
stos
xor
das
je
mov
call
jae
into
push
mov
call
rcrb
adc
mov
dec
push
mov
adc
call
and
push
pop
out
ficomps
push
push
mov
cmp
mov
push
push
dec
adc
out
cwtl
sbb
fstl
jle
lea
xchg
xor
je
icebp
gs
stos
sti
adc
add
or
icebp
cmp
addr16
adc
popf
add
and
in
pop
in
xor
pop
lea
sub
sbb
inc
sbb
inc
dec
sbb
mov
or
in
call
xorl
xor
inc
in
add
add
mov
icebp
into
sub
push
mov
sub
mov
ss
cmp
fs
or
filds
in
mov
sub
test
fimuls
add
and
mov
sub
push
lods
xor
lahf
ret
rep
lahf
lret
sti
jb
out
lods
lahf
lret
and
out
sub
add
mov
jo
stos
sbb
mov
or
mov
repnz
and
clc
sbb
mov
repnz
add
imull
ret
mov
lcall
nop
jo
fsubl
or
clc
push
or
adc
xlat
dec
fistl
push
bound
adc
cmc
dec
sbb
sbb
jmp
lods
cmpsl
mov
js
or
xor
std
clc
imul
fdivp
push
add
jae
inc
popa
ljmp
or
xlat
push
inc
les
add
jae
sarb
call
jb
pop
mov
mov
push
dec
clc
adc
mov
insb
mov
cmpl
ja
mov
outsl
and
iret
push
add
dec
daa
sti
call
sbb
sahf
adc
leave
xchg
dec
filds
in
std
ds
lods
pop
mov
sti
inc
cmc
arpl
ficompl
cmp
lock
xchg
aam
call
sub
mov
mov
sti
push
adc
jno
xchg
cmc
push
flds
push
push
or
pop
or
out
or
xor
clc
push
push
add
std
and
jle
inc
mov
cmp
inc
int
jne
mov
push
xor
jae
jns
mov
pop
dec
add
jne
sbb
inc
dec
sbb
in
mov
push
mov
dec
sbb
out
movsl
aam
jmp
icebp
mov
aam
add
add
xor
push
pop
xor
std
test
xchg
mov
cmp
xor
add
fiadds
add
cmp
inc
jo
repz
xor
mov
jle
test
pop
in
xorl
ss
bound
fnsave
les
jp
or
cmpsb
jg
and
fisttpl
pop
pop
jae
add
pop
filds
add
inc
hlt
popa
int3
jns
mov
xor
pop
dec
shlb
sub
mov
rcrb
insb
div
std
jmp
repz
call
ret
ds
mov
jb
repz
xor
loope
fstl
and
in
mov
cld
bound
cmp
add
sbb
ljmp
cs
xchg
stos
cmp
push
jae
push
push
out
call
div
cld
push
jl
jb
mov
lock
aad
sbb
jle
jmp
lock
test
icebp
dec
xorl
xchg
and
xchg
xacquire
or
fisttps
push
into
mov
push
add
cmpsl
adc
scas
pop
shlb
sbb
pop
test
out
or
push
mov
jae
into
jbe
sbb
in
lea
cld
fisubrs
sti
push
xchg
pop
shlb
sti
aam
cld
dec
cmpsl
push
call
ret
push
int3
mov
push
scas
mov
push
scas
cmpsl
adc
xor
add
fmuls
jno
add
or
jo
les
gs
jo
push
mov
sub
mov
outsb
jle
enter
xchg
add
mov
les
mov
rorl
ja
mov
sbb
iret
add
je
aaa
or
std
and
dec
outsl
call
clc
mov
jns
and
add
call
repz
fadds
les
add
movsl
or
mov
add
sub
out
testl
lcall
fisttpl
dec
fwait
out
cwtl
fucomi
add
jmp
stos
out
iretw
or
lock
jbe
call
int3
lea
insb
lods
add
out
outsb
pop
xor
mov
mov
mov
loopne
enter
fsubr
add
xchg
push
jnp
pop
mov
mov
push
daa
push
pop
add
jae
aaa
mov
fiadds
mov
call
hlt
lock
mov
int
out
pushf
movl
inc
scas
arpl
cld
sbb
iret
xor
in
xchg
popa
inc
lods
sbb
push
je
pop
sti
sahf
mov
push
cmp
push
lsl
arpl
mov
ss
mov
imul
push
mov
js
or
cmp
add
adcb
enter
or
fistps
je
bound
or
push
push
stc
pop
inc
test
jmp
mov
sysexit
or
pop
jno
adc
call
push
loope
pop
add
jecxz
gs
testb
je
andl
insl
sub
add
lahf
fcompl
add
icebp
pop
repz
repnz
add
mov
push
sti
ds
mov
aas
aad
jl
push
js
outsb
mov
fsubs
pop
fbstp
clc
inc
pop
roll
mov
pop
lock
lock
mov
dec
sbb
movl
jns
cld
mov
into
std
dec
inc
hlt
js
punpckhdq
ja
fcompl
pop
enter
jle
push
jae
cmc
addr16
add
adc
fistpl
iret
fidivl
sti
pop
inc
fcos
idiv
adc
dec
stos
sbb
xor
test
xchg
and
mov
xor
lods
fucomip
jecxz
ss
mov
ret
insl
push
mov
inc
fsubl
xor
mov
jle
test
xor
pusha
sub
sbb
fdivl
mov
mov
fmuls
pushl
jo
cmp
and
outsb
enter
sti
idiv
adc
pop
mov
std
outsb
cmp
dec
out
insb
fistl
lock
mov
or
popa
push
cmc
pop
aad
arpl
mov
fildl
fs
or
fucomip
imul
stos
shrb
jmp
jb
imul
insb
fildl
lcall
xchg
xor
push
push
inc
push
inc
int
add
pop
cs
xchg
call
ds
xorl
add
fisubrs
inc
fsubl
push
dec
adc
in
mov
or
scas
in
xor
filds
mov
incb
add
jmp
inc
in
js
add
addr16
hlt
mov
lock
mov
push
cs
call
into
lcall
xorb
mov
push
add
incl
add
pop
xchg
jo
scas
aaa
int
push
jne
pop
add
insl
mov
add
ljmp
add
adc
xor
dec
add
mov
add
cmp
add
cmp
inc
sti
stos
jnp
clc
lret
sub
jno
jl
add
mov
jmp
mov
and
in
lahf
pusha
mov
cmpl
cmp
sbb
repz
and
xor
bound
std
fidivrl
add
or
lods
call
jle
pop
jmp
das
sub
int
jo
mov
or
and
dec
mov
fidivrs
inc
movsl
xor
mov
add
or
jmp
repz
sti
imul
adc
arpl
xchg
enter
jl
push
sub
add
pop
add
inc
out
into
stos
sbb
and
popa
adc
add
adc
sahf
mov
call
lds
out
arpl
and
cmc
jae
mov
jae
mov
pop
arpl
pop
rorb
pop
dec
dec
das
out
jo
jmp
daa
popa
fildl
insb
xor
test
xchg
sti
push
das
mov
push
jg
std
push
lock
jmp
dec
loope
xor
cwtl
push
fiadds
add
jae
rcr
sub
decl
or
scas
sbb
leave
lock
push
pop
call
loop
or
popa
push
jae
push
call
xchg
mov
mov
fdiv
add
xlat
jle
mov
lcall
pop
popa
or
test
fcompl
call
push
fwait
or
loope
push
fdivr
popa
push
jmp
fiaddl
test
xchg
or
jo
ret
std
stc
mov
pop
hlt
jo
push
mov
push
add
jmp
clc
mov
sub
push
rclb
jo
add
mov
push
fsubrl
mov
xlat
add
push
leave
add
xchg
ret
std
mov
hlt
ja
or
hlt
sti
roll
mov
repz
loope
mov
sub
jg
je
cmp
rolb
mov
dec
add
fisubl
dec
xor
xor
xor
lahf
out
xor
jo
stos
out
test
js
in
les
jecxz
lods
repz
adc
test
pop
insb
add
adc
outsb
mov
addb
fcomps
out
mov
mov
js
bound
cmovs
les
in
pop
js
pushf
fistps
in
js,pt
mov
mov
jb
fs
add
jno
je
call
pop
sar
add
sbb
cwtl
or
cs
mov
sbb
sbb
jl
dec
mov
adc
sbbl
or
rolb
or
imul
dec
loope
repnz
out
sub
mov
mov
push
and
sub
jb
fs
jno
fildl
fidivl
mov
xchg
cltd
adcl
into
adc
mov
callw
std
pushl
mov
jne
jg
adc
xlat
xchg
cmp
pop
pop
mov
rcrb
call
xor
loope
pmullw
add
dec
pop
clc
incl
ds
mov
imul
std
lcall
push
lea
dec
mov
test
rol
xor
inc
add
mov
adc
aaa
mov
pop
jge
push
in
outsl
mov
std
arpl
stos
add
cmp
xchg
lahf
adc
js
inc
lock
les
add
xor
push
aad
xor
sbb
hlt
mov
jmp
dec
mov
ja
insb
cmp
mov
inc
fdiv
outsb
xor
pop
xchg
push
mov
testl
loopne
hlt
add
das
fldt
fsubs
movsl
add
lods
scas
mov
rclb
sbb
rclb
out
add
out
scas
in
fsub
add
push
cs
xor
sub
pop
jg
stc
fsubl
push
lods
push
sti
push
pop
mov
jo
stos
shll
jge
in
aam
add
stos
adc
fsubr
add
es
and
inc
movsl
sub
hlt
lock
jo
add
inc
sbb
jae
lds
add
mov
call
fisttps
es
dec
out
pop
shr
sub
call
jmp
mov
lea
pusha
adc
cld
sbb
shl
fs
call
jmp
mov
lea
fldenv
imul
testl
add
sbb
add
cmpsl
lcall
faddl
fdivl
push
push
sub
dec
cmp
test
add
push
xchg
call
enter
fdiv
add
cltd
fildl
lea
push
cmpsb
mov
dec
test
rolb
mov
pop
or
adc
iret
or
pop
in
mov
lea
dec
fadds
and
cwtl
dec
fildl
mov
xchg
fidivrl
jo
jae
xor
mov
cld
es
mov
xor
xorl
or
fcomps
mov
jmp
dec
xor
std
test
jo
les
mov
add
xchg
cmpl
push
repz
mov
hlt
add
ret
test
loopne
xor
int3
add
hlt
inc
mov
add
out
inc
add
adc
into
imul
sbb
mov
js
es
mov
mov
mov
jmp
inc
aam
ret
pop
mov
add
push
fcoms
fidivrs
sbb
xchg
iret
mov
push
push
rclb
mov
jl
cmp
jmp
ret
jb
push
push
out
push
pop
mov
mov
fcoml
or
jle
sub
jmp
outsb
in
push
adc
sub
push
fistps
jb
add
add
shll
imul
jae
clc
pusha
xchg
sti
orb
push
pop
call
out
push
pop
call
popa
notl
pop
call
rcr
mov
push
dec
cltd
and
pop
rcr
mov
add
sbb
addl
xlat
add
arpl
sti
incl
subl
xchg
dec
or
xchg
inc
xlat
add
jl
in
push
fldenv
dec
adc
pop
or
bound
push
lock
push
ljmp
jp
add
sbb
cwtl
shlb
test
and
lcall
xor
sub
or
scas
and
idivb
pop
sarb
inc
lock
xchg
jo
xchg
inc
dec
push
push
fcmovb
mov
mov
mov
add
in
aas
inc
pop
xor
gs
adc
inc
shlb
inc
notb
mov
repz
mov
xor
les
test
pop
hlt
jbe
les
sub
les
jmp
sbb
test
add
or
sub
mov
mov
or
xchg
push
or
push
movsl
mov
sub
mov
mov
insb
jmp
ljmp
and
xor
push
cmp
mov
xor
dec
mov
jmp
sub
add
flds
pop
into
lods
jp
jg
mov
fpatan
stos
sub
jmp
sbb
rcr
lcall
mov
je
call
jecxz
rolb
stc
sahf
in
or
fnstsw
fwait
dec
push
push
xor
out
sbb
mov
aaa
rclb
lcall
leave
lcall
mov
mov
add
lret
aad
or
push
add
in
fstpl
sbbb
xchg
in
out
xchg
pop
cli
loopne
in
addr16
jge
mov
out
dec
or
hlt
popf
in
inc
in
lock
mov
add
cmpsb
ret
je
mov
jle
ret
test
inc
pop
es
jle
les
cmp
push
fs
cmp
pop
mov
sti
cmp
inc
sbb
aad
jb
int3
mov
add
pushf
or
sbb
add
mov
xchg
inc
add
sub
ljmp
adc
push
lea
inc
dec
cltd
or
leave
fstpt
shrl
ljmp
fildl
ret
jo
jo
cs
js
add
add
stos
mov
les
in
cmp
add
jne
or
mov
sbb
aas
add
js
mov
sub
sti
or
or
mov
ret
arpl
divl
inc
shlb
mov
mov
les
mov
sarl
aaa
iret
ja
jg
mov
xor
add
sub
sti
std
sub
js
add
inc
stos
gs
mov
xor
and
xor
rcll
mov
iret
clc
inc
jo
sbb
int
fucomi
cmpb
ljmp
out
shll
mov
jecxz
lret
push
jg
push
cli
mov
jecxz
mov
aad
jg
mov
insl
pop
jo
jmp
dec
cmp
fucomp
add
pop
ja
jmp
cli
mov
in
cmpsl
aad
push
jmp
jb
out
and
dec
jb
jae
add
jp
adc
jo
mov
test
mov
insb
mov
ljmp
aaa
test
jmp
add
int3
in
ljmp
add
add
sbb
dec
or
aam
jmp
iret
jb
out
pop
cld
add
test
push
ljmp
add
je
add
ljmp
call
or
outsl
xchg
xor
cltd
sub
adc
cs
pop
dec
mov
clc
mov
add
popf
adc
push
pop
jnp
inc
out
sub
jecxz
add
dec
fnstenv
add
ja
dec
dec
fmuls
add
idiv
push
icebp
or
push
sub
push
out
dec
hlt
inc
sbb
adc
mov
and
jmp
mov
incl
or
push
icebp
call
mov
ficoml
inc
jo
movb
sbb
rolb
add
iret
jne
inc
jo
mov
test
inc
add
jmp
std
addr16
or
call
repz
xor
jge
je
add
into
dec
mov
js
add
jns
scas
std
movl
pop
scas
xor
das
pop
test
push
jmp
pop
std
jge
scas
jae
adc
or
clc
cld
test
sbb
fldt
add
leave
pushf
sbb
iret
add
sub
inc
jmp
mov
jecxz
sbb
xor
pusha
fs
aaa
push
inc
add
fidivs
jecxz
adc
fs
testb
inc
fwait
loopne
ljmp
or
cmc
cmp
cmp
mov
pop
or
cltd
mov
push
out
add
shlb
jmp
push
add
pushf
rorl
xor
sbb
fnsave
mov
loopne
adc
inc
push
test
push
cmc
pop
sbb
push
mov
test
sahf
in
sbb
mov
call
push
mov
sti
cld
sub
mov
jae
mov
sub
fcoml
fs
rorb
or
push
cmpsb
or
push
cmpsb
or
mov
push
inc
sbb
pushf
jo
dec
xchg
jne
jno
aaa
add
dec
xor
sbbb
idivl
mov
dec
inc
and
outsl
add
adc
and
xorl
adc
call
lcall
and
jg
jne
adcl
cmp
sbb
call
test
or
sbb
in
jo
lods
std
jmp
or
dec
jge
ret
push
push
or
adc
cmpsb
cwtl
adc
ret
pusha
dec
insl
or
add
add
lds
adc
cmp
lea
jno
add
call
mov
or
mov
push
std
test
je
adc
mov
jo
push
cmp
sbb
inc
sbb
jl
add
shll
or
inc
pop
and
inc
scas
add
outsb
lret
jmp
jmp
cli
jp
jecxz
add
pop
andl
add
iret
jno
cwtl
into
fisttpll
sbbb
xorb
cmp
push
fildl
into
pop
cmp
js
jmp
insl
jo
jmp
add
call
mov
lret
add
add
pop
stc
fcompl
cld
dec
and
cmp
jne
icebp
ret
aad
jne
stos
dec
xor
push
jle
stc
hlt
jg
into
dec
sbb
mov
xor
pusha
pop
lret
call
jo
ret
call
add
jle
or
in
insb
ss
push
pop
xchg
adc
cmp
inc
icebp
mov
add
fildl
jmp
jb
inc
andl
sbb
push
adc
adc
xchg
adc
imul
adc
push
jmp
add
adc
adc
scas
push
pop
leave
mov
inc
or
cmp
add
repnz
cltd
jne
add
sbb
and
enter
sbb
jg
pop
fadds
xchg
addl
fsubrs
mov
inc
or
insl
repnz
jo
test
jb
add
sbb
cld
leave
roll
or
add
lds
ret
out
cld
adc
ret
jmp
clc
ss
xchg
add
mov
imulb
add
cmp
sub
jmp
rolb
pop
xchg
jl
add
mov
push
push
cmp
push
mulb
push
add
subb
mov
push
and
jl
xor
add
inc
pop
pop
lret
ljmp
push
and
lds
push
sub
int
stc
lret
imul
jne
jmp
stos
je
jmp
add
andl
inc
jo
and
cmc
dec
jmp
cli
mov
cmp
or
lcall
test
shll
mov
out
sub
sbb
add
test
jb
add
movl
stc
jb
add
andb
testb
inc
jmp
lods
sub
mov
jbe
sti
mov
in
inc
adc
mov
jmpw
mov
or
dec
call
cwtl
mov
cltd
enter
pop
shr
test
cld
cmp
test
jmp
add
dec
or
mov
cld
add
inc
inc
sbb
ja
in
sti
lcall
sub
fldl
adcl
or
add
pusha
cli
add
sbbl
decb
cmp
push
fdivl
add
leave
clc
sub
add
faddl
jne
gs
add
fmull
imul
jbe
mov
call
adc
sbb
imul
std
movsl
push
add
imul
xchg
and
out
imul
pop
add
xor
fcom
mov
jo
xor
jg
lds
movsb
add
or
adc
sti
mov
add
jo
repz
add
lea
add
xchg
adc
ljmp
push
add
add
xor
sti
outsb
clc
imul
jmp
cmpxchg
cmp
xchg
add
div
push
mov
inc
push
and
add
jmp
mov
fstpt
icebp
ret
add
imul
jmp
icebp
ret
push
pop
pop
adc
sbb
in
or
div
fidivrl
cmpsb
int
push
jo
inc
push
mov
fsubr
add
add
movsl
movb
pushf
movb
xchg
ljmp
cli
sbb
jmp
out
cld
into
adc
repz
mov
inc
mov
jmp
daa
add
fs
xchg
fadds
or
cld
pop
adc
shll
cli
mov
inc
or
mov
lcall
push
fimull
jle
mov
mov
xchg
mov
fdivs
push
adc
jno
cli
decl
ja
or
sub
xor
popa
mov
and
pop
or
dec
flds
jne
inc
js
bnd
lret
call
push
cmp
mov
inc
sbb
sbbb
flds
adc
adc
fnstenv
incl
leave
inc
pop
lock
in
add
fscale
cmc
mov
sub
aas
add
mov
mov
pop
mov
sbb
push
or
test
sbb
bound
mov
stos
dec
jno
lea
xor
call
jno
pop
divb
ret
mov
pop
cli
dec
jno
mov
inc
push
add
mov
mov
jo
add
pop
sahf
cmp
add
sub
stc
xchg
dec
add
std
pop
fcmovnb
clc
outsl
fistl
jo
test
add
stos
mov
add
fildll
pusha
sub
clc
fucomip
sub
fwait
pop
or
sbb
mov
ret
pop
fwait
sub
xchg
mov
jmp
fistpll
cltd
mov
jo
jmp
ret
andl
or
outsl
inc
in
aas
pop
stos
cs
clc
xchg
test
push
ret
mov
inc
inc
push
or
mov
cld
jmp
cltd
inc
jle
je
add
pop
callw
jmpw
jmp
add
rolb
scas
jae
push
cmp
test
mov
ss
sub
div
or
mov
and
mov
addb
cld
jmp
jne
cmp
test
mov
xchg
filds
sub
sbb
out
ljmp
and
or
add
xlat
add
loope
lcall
aad
je
push
push
push
rcr
decl
jo
mov
test
mov
jne
sti
push
jl
jge
fdivl
add
sbb
add
xlat
add
repnz
testb
jne
push
imul
push
jmp
push
pushl
pushf
mov
scas
sbb
jnp
mov
push
and
movsb
jo
add
mov
add
ret
inc
mov
mov
insl
mov
add
cwtl
mov
mov
pop
pop
xchg
std
pop
mov
add
sub
jo
sub
jb
add
mov
add
stc
imul
js
add
add
xor
add
push
jl
xchg
les
dec
hlt
push
fucomp
add
inc
ds
arpl
faddl
and
sahf
aad
popf
xor
in
pop
push
mov
rorl
in
adc
fldt
or
ljmp
fldt
ret
test
mov
inc
lds
add
inc
repnz
mov
ljmp
pop
into
pop
repz
push
jecxz
rcrb
lods
fldt
jo
add
jae
or
imul
jae
mov
je
add
xlat
das
sub
cltd
add
inc
fdivrp
lods
fnsave
fcomi
in
movl
shr
add
out
fwait
jne
adc
add
add
mov
insb
fildl
bound
imul
je
sub
fildl
sbb
mov
dec
inc
incb
mov
je
dec
aas
pop
inc
inc
xchg
mov
lcall
sub
orps
xor
lahf
push
add
push
idivl
pusha
pop
pop
and
adc
ficoml
inc
pop
adc
add
pop
push
jmp
lods
mov
pop
jle
or
repnz
test
cmp
imull
jne
ds
sbb
mov
mov
jo
or
sbb
xor
mov
push
xor
pop
addl
jo
popf
std
inc
jb
inc
stos
jno
add
cmpsl
rclb
mov
sarl
lret
jl
add
jne
xchg
inc
jo
ss
sbb
jo,pn
test
inc
jo
adc
lahf
jo
sub
xlat
jle
mov
add
mov
add
mov
notb
pop
jb
xorl
repz
rolb
xor
pop
test
lods
mov
inc
inc
lea
shr
aaa
rcll
add
add
loope
xchg
imul
lcall
jnp
add
daa
add
inc
int
sbb
ljmp
push
aas
jo
push
iret
mov
mov
ljmp
push
movsb
sti
mov
jmp
or
mov
jle
addr16
test
stos
add
jecxz
add
mov
jmp
or
mov
ss
mov
push
scas
and
adc
les
cld
xchg
ljmp
jmp
out
or
or
sbb
iret
sti
fsub
mov
in
mov
cli
add
adc
mov
mov
pop
xchg
mov
add
jecxz
push
add
mov
stc
ljmp
aam
fildl
out
or
pop
stos
pusha
mov
add
or
lret
je
out
call
ret
mov
fs
cltd
and
call
xchg
jbe
sti
or
addb
jnp
cmpl
fsub
cmpb
ljmp
add
fistps
imul
jmp
pushf
push
mov
pop
lds
lahf
jo
adc
cld
dec
jno
inc
add
pop
xor
mov
fsub
push
lcall
inc
dec
pusha
lds
mov
sbb
aas
fldcw
dec
fldcw
xor
xor
add
mov
or
aas
jo
test
cmp
mov
jo
cld
incl
or
jne
push
cmc
mov
das
enter
jo
ret
add
in
add
test
fstps
push
jmp
xor
std
outsl
cmp
jl
jno
jmp
inc
xchg
sti
shll
lret
cs
xchg
rol
jne
jmp
mov
insl
jge
mov
xchg
xor
jo
lar
cs
dec
dec
neg
ja
fidivs
fbld
das
and
mov
adc
cwtl
add
fistpl
cli
es
clc
cs
sbb
jmp
cmpb
jmp
insb
adc
add
jae
ret
cmp
das
and
ficomps
push
inc
mov
inc
add
mov
out
in
and
sbb
fcmovu
add
ljmp
sbbl
das
and
or
inc
or
add
bound
sub
jmp
jb
or
push
mov
jne
loop
and
shl
xchg
push
pushl
sub
shlb
shrl
inc
and
arpl
push
into
jmp
fnstcw
loope
inc
data16
and
in
xor
mov
xchg
pop
call
push
and
lret
push
jns
and
call
sbb
jne
push
jo
sub
jo
add
or
add
clc
mov
lods
or
test
int3
cmp
xchg
or
nop
lea
je
xchg
xchg
sti
loopne
sti
mov
mov
test
adc
add
test
icebp
aas
jo
lea
push
or
and
aam
andb
add
cmp
push
sti
es
movsl
addl
push
inc
jne
mov
fstpt
inc
jo
lds
jecxz
data16
cmpsl
add
jo
in
jg
sbb
repnz
ljmp
ficompl
xchg
xorl
int
xchg
mov
jo
insb
nop
jo
jmp
add
in
lea
and
cmc
lahf
divl
std
packsswb
ljmp
mov
push
and
jmp
ss
mov
mov
push
mov
push
test
cmpsb
lcall
jae
jmp
pop
test
cmpsl
push
push
mov
inc
jmp
mov
icebp
sub
push
sub
cmp
fs
mov
fdivl
mov
cmc
test
fisttpll
pop
cld
std
cltd
data16
mov
mov
pop
js
mov
jmp
add
repnz
jae
lock
mov
or
mov
and
push
xor
add
pop
dec
aam
xor
call
or
jne
pop
mov
ljmp
fimuls
or
repz
add
push
push
and
xor
add
out
in
call
mov
or
rclb
add
fadds
sahf
pop
and
in
ret
ret
jl
in
push
jp
std
jne
xchg
push
mov
xor
hlt
scas
bound
je
dec
xor
pushf
dec
les
mov
lea
add
test
push
and
sbb
addl
ret
push
cmp
test
inc
or
mov
aas
repz
adc
dec
mov
add
lock
cld
jge
cmc
aas
jo
inc
std
jno
add
inc
add
mov
add
aas
jo
xchg
adc
inc
std
aas
int
ret
xor
and
jmp
mull
ljmp
mov
jp
cmpsl
popa
push
cwtl
or
add
inc
andb
icebp
mov
add
hlt
out
add
gs
pop
mov
xor
cli
repz
popl
out
jo
std
mull
ljmp
pop
adcb
pop
leave
add
fcmovnu
add
mov
ret
cmpsl
adcb
fs
imul
mov
and
mov
dec
test
xchg
add
movsb
or
ret
testb
addl
jno
scas
cld
xchg
imul
jmp
sub
fdiv
repz
popa
add
jae
inc
add
cld
mov
mov
fcomi
sub
ds
cmp
add
push
sub
push
pop
mov
bound
cli
shlb
test
sbb
cmp
or
add
fstps
hlt
and
ss
push
shll
clc
adc
std
cs
mov
pop
jo
pop
and
call
dec
test
pop
mov
pop
pop
call
aad
jne
xchg
and
add
push
in
dec
fidivl
lcall
call
mov
pusha
push
push
lock
adc
push
rorl
sti
incl
ficomps
lock
jge
scas
jg
fistps
pushl
cwtl
call
cli
decb
rcl
in
fadds
inc
add
xchg
jp
add
inc
cmp
push
inc
inc
sbb
cmp
roll
push
loop
add
jns
pusha
aas
lds
jo
add
jo
add
pop
ret
add
add
js
add
shr
jne
cld
jo
add
mov
inc
and
add
lock
fcmovb
add
mov
fucomi
add
test
dec
daa
fildl
out
jmp
add
jmp
add
fsubl
dec
xlat
scas
cwtl
sub
push
jo
mov
add
or
mov
rolb
test
nop
sti
sbb
adc
pusha
push
adc
jne
lods
repz
fcmovbe
mov
xchg
jmp
xchg
mov
cmp
pop
lock
mov
jo
rcrl
inc
stc
lock
mov
jmp
ljmp
cmc
les
es
bound
test
jecxz
fcoml
leave
inc
jmp
lock
jne
push
xchg
jmp
mov
and
jmp
xor
cld
push
test
mov
jne
pop
stc
out
in
pop
push
filds
pop
inc
pop
jge
and
xchg
or
push
push
push
adc
sub
add
sub
and
push
jne
add
out
call
test
fcomps
test
adc
mov
daa
add
rcrl
je
popf
add
fiadds
adcl
or
in
mov
lcall
push
fiaddl
mov
jo
xchg
hlt
add
push
sub
push
icebp
push
call
loop
push
lea
dec
push
push
fimull
lcall
adc
cmp
add
add
std
jae
sub
adc
ja
ja
or
jge
jl
lds
add
subl
cmp
jge
in
adc
dec
repz
add
cmp
or
outsl
movsl
rolb
aad
and
xor
push
jo
jl
faddl
mov
xor
test
mov
lds
iret
lret
int
add
loopne
std
repnz
add
cmc
or
xchg
pop
cld
mov
das
in
jmp
pop
rcr
jecxz
jo
push
jmp
cwtl
ret
adc
in
sub
add
mov
jmp
cs
fucomp
add
pop
adc
jecxz
outsb
ds
fildl
insl
xor
adc
insb
in
cld
fdivp
sub
into
negl
test
push
fildl
jmp
xor
cld
sbb
ror
sti
std
add
movsl
cld
pop
mov
inc
lds
lret
xchg
iret
lret
sti
ffree
xlat
call
cmpsb
mov
inc
add
cmpsl
fucomip
mov
mov
inc
lds
dec
int
adc
xchg
aas
roll
call
ficomps
in
or
add
ds
jne
and
inc
sub
incl
sbb
shll
clc
int3
pop
push
loope
pop
add
shll
leave
or
jmp
lcall
fcmovnu
add
mulb
cmp
clc
pop
ret
jmp
loope
movsb
push
cs
arpl
fmulp
out
pop
enter
and
lcall
add
dec
mov
cmc
in
nop
sti
dec
movsl
das
call
std
mov
xor
push
daa
cmpsl
cld
adc
or
xchg
mov
hlt
add
sub
jl
in
inc
xchg
fs
jnp
sub
repz
subl
mov
cs
cmpsl
xchg
push
inc
adc
add
mov
fidivrl
mov
mov
insb
movsb
enter
popf
std
test
popf
jmp
enter
jo
jge
dec
iret
xchg
in
xchg
mov
icebp
lahf
fiadds
ficoml
int
aas
mov
xor
test
sbbb
sub
std
rcrb
jo
ljmp
movsb
xchg
js
pop
cmpsb
out
repnz
adc
movsl
jnp
pop
push
in
jbe
lahf
sbb
jmp
sbb
jle
cs
xor
inc
lods
fwait
movsb
inc
cmpb
add
inc
push
inc
adc
push
sbb
xor
adc
outsb
lret
lea
cmpsb
push
in
inc
in
bound
mov
pop
add
filds
pop
imul
hlt
and
or
inc
in
xchg
stos
leave
push
in
push
jae
mov
push
stc
add
shrl
sbb
test
jae
push
add
mov
push
inc
mov
call
add
std
int3
pop
jo
rclb
rcrb
fldcw
mov
jns
fists
sub
adc
sbb
lods
pop
movb
or
add
or
dec
mov
adc
push
test
xlat
std
adc
pop
push
jnp
push
push
inc
clc
inc
pop
dec
lahf
incb
int
cmp
divb
shlb
jmp
aaa
js
sbb
mov
scas
sub
mov
cld
in
push
addl
mov
jle
xor
xor
pop
insb
orl
lcall
lahf
test
mov
xchg
dec
jne
test
mov
add
push
or
inc
jo
adc
xor
cmp
mov
fdivr
jbe
mov
ss
fidivrl
lea
rcl
xchg
sbb
mov
push
xlat
dec
cmp
xor
aas
outsl
mov
mov
fdivrs
ret
pop
push
test
pop
stc
adc
mov
add
cmp
rcrl
pop
add
imull
xor
rcll
inc
mov
sub
test
out
add
add
andb
ljmp
push
and
add
fistpl
shll
jae
cld
aam
roll
out
fwait
jbe
gs
ljmp
fadds
push
jae
or
sub
mov
lock
add
hlt
adc
jo
out
jmp
inc
jmp
jo
jecxz
jmp
in
cmp
das
add
sub
add
fadd
imul
sbb
pusha
hlt
adc
jmp
shr
inc
dec
push
push
leave
fisttpl
push
xchg
fildl
mov
shrl
rcrb
add
and
jl
fwait
cld
mov
shll
xor
dec
or
push
call
inc
pop
push
inc
or
dec
mov
add
add
adc
inc
sbb
push
addr16
cmp
mov
inc
inc
sbb
push
sbbb
mov
leave
dec
dec
or
fcompl
cld
and
add
les
aaa
mov
inc
add
cmp
add
mov
inc
std
jg
inc
push
cld
mov
xor
adc
jo
aas
push
jmp
jle
jl
sar
mov
add
ljmp
xchg
orb
jo
or
add
in
mov
mov
xorl
lcall
sti
pop
xchg
aam
scas
and
push
stos
clc
dec
pop
cmc
jg
jo
jmp
aam
daa
out
rorb
push
push
mov
shll
arpl
pop
jmp
stos
pop
loopw
clc
xchg
push
movsb
or
fiaddl
jmp
adc
mov
jmp
and
shll
cmpsb
and
fwait
jecxz
xor
dec
js
aad
insb
stos
jmp
add
add
rclb
in
jmp
test
or
push
jae
subb
or
aam
push
xchg
sahf
cld
mov
inc
fildl
xor
and
rclb
pop
fmuls
push
aam
mov
cld
push
and
gs
add
xor
das
sub
icebp
add
mov
out
scas
xor
inc
js
inc
add
orl
test
dec
pop
fcoms
lret
mov
add
push
and
mov
decl
push
test
add
es
add
jb
decl
xlat
add
adc
push
int3
xor
inc
test
in
and
or
addl
fcmovb
jbe
jge
jl
adc
addl
jbe
xchg
pushf
call
call
push
mov
jbe
xchg
mov
sbb
call
push
out
xchg
ja
je
cmp
mov
or
in
inc
icebp
add
iret
or
int3
cmp
jo
pop
scas
adc
add
mov
std
sbb
inc
test
aaa
and
push
push
std
pop
sbb
inc
jo
rorb
fisttpl
sti
push
stc
mov
cmp
add
mov
add
int
jmp
daa
movmskps
test
movsl
push
mov
pop
inc
scas
mov
lea
sub
aam
xor
sti
fst
iret
cmpb
lcall
dec
xchg
or
call
push
lcall
outsl
mov
add
scas
imul
jns
mov
ds
stc
mov
jge
mov
test
xchg
out
ja
lods
add
cmp
jge
sbb
pop
sbb
xor
and
xchg
jl
adc
sbb
stos
imul
ja
out
daa
jae
loope
je
call
mov
xor
add
cmp
adc
mov
mov
lea
pop
in
ffree
add
jb
bound
outsl
xchg
cld
or
cld
aam
add
sti
mov
xchg
jbe
call
cwtl
jg
fmuls
push
push
lock
repz
adc
or
lcall
and
lods
dec
push
mov
faddl
mov
mov
in
sbb
in
push
mov
clc
jns
inc
or
iret
std
adc
push
pop
jo
fwait
sbb
or
xchg
fs
cld
adc
mov
es
in
sbb
adc
pop
pop
addr16
xchg
hlt
stos
add
pushf
lock
sahf
mov
mov
std
jne
push
xor
inc
fisttpl
inc
jo
add
dec
nop
xchg
or
mov
aam
pop
sub
decl
xor
or
test
push
xchg
jae
dec
mov
xor
scas
add
xor
fdivs
push
adc
mov
mov
jl
xor
add
adc
jae
add
fwait
addl
fnstcw
jg
repnz
icebp
xor
mov
into
cld
jge
sbb
sbb
hlt
pusha
sbb
cmpsl
add
negl
sbb
inc
outsl
mov
call
adc
xchg
daa
add
lcall
add
xchg
aad
sbbb
cmp
adc
add
xchg
cmc
aas
bound
ljmp
lcall
jmp
ret
pop
lock
jmp
je
xchg
cmp
icebp
sub
xor
or
sub
cli
mov
sbb
pushf
popf
sub
add
xor
inc
jmp
xchg
mov
add
lock
xor
inc
jmp
xor
clc
mov
cwtl
lcall
insb
xchg
push
mov
sbb
shlb
movhps
dec
or
jmp
sbbl
inc
jmp
inc
fwait
call
loope
mov
adc
leave
std
rcrb
xor
add
dec
mov
in
sub
cmpsb
mov
arpl
test
pop
call
in
jb
mov
rclb
aaa
ret
or
shlb
cmpl
icebp
inc
add
xchg
pop
je
mov
inc
or
or
orl
je
mov
fmull
xor
je
mov
inc
add
aam
les
inc
pop
jne
jae
rcll
mov
dec
mov
mov
shlb
clc
cld
xchg
sbb
popa
inc
add
daa
or
push
jne
cld
gs
inc
jo
inc
or
or
sub
incl
dec
inc
push
stc
pop
fildll
cmp
lock
rclb
add
sbb
std
and
pop
jae
mov
or
jg
ljmp
pop
inc
pop
je
cmp
lcall
or
fmull
std
ljmp
jb
fwait
lahf
cmp
jecxz
fsubr
jle
sbb
push
icebp
paddd
sahf
pop
popa
pop
xlat
push
hlt
cli
push
push
cld
aaa
shlb
mov
xor
addl
ret
mov
xchg
adc
adc
xchg
test
add
jo
or
in
movsl
push
repz
push
sbb
hlt
adc
jmp
loopne
adc
and
jo
or
inc
in
lea
add
pop
pop
and
adc
mov
orb
sub
repz
shll
cs
inc
hlt
fildl
jmp
inc
in
clc
stc
mov
sti
adc
call
fstps
leave
adc
ret
dec
mov
push
clc
mov
faddl
push
pop
scas
add
faddl
sbbb
jmp
test
add
add
jmp
test
dec
xor
push
mov
lea
sbbl
mov
cmp
jae
xchg
movsb
sub
fildl
daa
mov
or
dec
pushl
jo
test
inc
jo
inc
je
insb
or
cli
add
mov
xor
fsubr
add
in
insb
call
mov
ret
or
jmp
das
lret
js
std
aas
xor
ja
icebp
nop
and
jo
mov
in
std
pop
fldl
orl
std
mov
pushf
cli
divl
test
sub
inc
jae
imul
add
mov
test
add
and
insl
cwtl
sbb
add
pop
rcrb
ljmp
adcl
jo
insl
inc
add
insl
enter
mov
lock
in
insb
enter
out
movb
fucomi
xchg
pop
pusha
mov
xor
inc
ret
incb
jo
sti
pop
insb
ljmp
enter
movl
mov
outsl
test
ljmp
shll
pop
add
scas
popf
push
scas
mov
add
lods
cld
cld
mov
sbb
sbb
popf
jle
push
inc
orb
sbb
data16
push
test
fmull
mov
lods
push
bound
aad
ret
lret
call
mov
inc
fs
push
jmp
xchg
push
add
xchg
test
insb
fbstp
lea
jo
and
push
push
inc
call
ss
roll
mov
ja
inc
fdivl
inc
or
inc
into
or
bound
neg
add
inc
or
iret
xchg
xchg
int
outsl
adc
add
fisubs
add
xor
rcrb
int
push
iret
push
data16
call
les
mov
sbb
je
shll
mov
add
xor
sub
fadds
cwtl
jo
add
fdivrs
mov
jo
add
int3
xchg
testb
add
mov
mov
jnp
icebp
or
rcll
sbb
decl
int
std
jg
fdivrp
jbe
xor
mov
jnp
aam
sar
aaa
push
mov
pusha
push
inc
fs
and
xlat
jo
jl
movsl
jg
or
aas
dec
push
fs
sar
gs
inc
jo
je
pop
bound
ljmp
test
ja
mov
jo
insl
inc
inc
xlat
aas
clc
call
mov
rcrb
subl
out
sub
sub
ficoms
jmp
mov
mov
lock
jae
push
jo
gs
ret
fdivrs
fnstsw
sbb
push
icebp
sahf
out
js
xchg
mov
mov
js
dec
lcall
fiaddl
lock
insl
push
mov
pop
push
addr16
jbe
adcb
sbbl
mov
add
push
dec
subl
mov
sbb
fdivr
jo
sti
xor
add
hlt
fwait
jmp
aam
cld
aad
dec
lahf
add
adc
sti
stos
jae
inc
call
jae
pop
sti
mov
adc
jno
je
and
inc
insl
push
xor
popf
cld
gs
lcall
pusha
fwait
push
push
dec
in
push
fwait
or
push
fwait
or
jp
push
sub
mov
addl
mov
enter
jns
push
out
sub
mov
inc
out
add
push
test
jne
ffreep
push
push
sub
or
jns
call
fdivrl
call
int3
jns
call
ret
mov
pop
jo
int
xor
push
mov
ljmp
add
sar
popf
jge
jno
movsl
repz
sbb
scas
sar
ljmp
nop
mov
lcall
and
jge
cld
data16
jle
repz
push
scas
push
sahf
cmp
or
push
outsl
add
mov
repz
icebp
daa
cmpsl
lds
gs
inc
jo
push
call
jo
sub
jp
cmc
and
ljmp
fcoml
fadd
incl
dec
es
ljmp
mov
add
sbb
fadd
iret
and
mov
pop
push
icebp
jg
test
cmp
pushf
lock
mov
negl
das
dec
lcall
jb
jmp
add
rcll
cmp
movsl
add
fucomi
add
add
add
lret
negl
add
add
inc
sub
ja
add
and
and
fidivl
xchg
gs
imul
jae
cld
hlt
pop
in
inc
jmp
stos
lea
je
inc
add
xchg
inc
jmp
int3
xor
jmp
je
xchg
jb
inc
lds
pop
mov
inc
add
movsb
push
pop
add
jge
mov
xor
or
test
mov
inc
and
incl
mov
xor
setno
add
insl
roll
lea
and
cltd
fisttps
add
add
fmuls
add
inc
or
add
adcb
add
ret
ljmp
push
fadds
jo
add
jae
add
std
sbb
popa
rcll
bsf
push
add
in
mov
cmp
add
inc
mov
xchg
xchg
mov
jo
jae
xchg
add
pop
adc
test
call
cmp
push
ja
add
std
cmc
sub
xchg
xor
rolb
cmp
xchg
mov
hlt
and
out
sbb
mov
repz
int3
sub
xchg
shl
outsb
cwtd
scas
daa
jnp
dec
adc
sbb
adc
mov
subl
shr
adc
bound
sarl
daa
outsb
mov
mov
sti
pop
push
les
push
sub
add
fistps
xchg
ret
pusha
leave
jno
sub
or
pop
into
ret
out
sbb
mov
sub
push
roll
jecxz
mov
adc
cmpl
in
add
mov
arpl
jge
arpl
or
cmp
repz
and
jae
inc
loope
push
and
lock
pop
and
jmp
mov
mov
daa
pushf
add
push
addl
fldcw
mov
test
sbb
mov
sbb
mov
and
mov
sub
add
add
aas
jae
decb
and
pop
shll
and
mov
cmp
or
jmp
cmp
test
inc
xor
pop
call
lea
repz
pop
push
add
fisttpll
add
cmp
roll
add
add
fldpi
test
leave
faddl
cmpl
push
adc
add
cltd
hlt
std
out
mov
cmp
jo
pop
cmc
ss
cmp
jb
or
addb
jnp
jle
jb
test
jb
add
sti
ret
and
call
loop
dec
popa
lea
idivl
je
or
out
jb
push
test
jb
clc
mov
xchg
je
mov
out
add
leave
and
test
and
sbb
cmp
test
mov
sarb
hlt
das
dec
sub
xchg
xor
xchg
fimuls
add
add
cs
or
scas
sbb
sbb
loop
push
aas
mov
jno
xchg
lods
sbbb
fsubr
in
clts
das
imul
nop
mov
fnstenv
jmp
lds
or
sub
jae
sub
test
mov
jge
pop
lds
push
hlt
xlat
sysret
add
lret
cltd
jge
bound
cld
jb
out
adc
add
packssdw
in
repnz
fstps
clc
lcall
ja
cld
aad
mov
aad
mov
into
push
jg
insb
mov
add
ss
mov
adc
shll
out
xchg
xor
lds
lret
jae
data16
lret
xchg
push
icebp
mov
pop
dec
pusha
daa
mov
aaa
insb
push
fidivrl
js
jne
stc
fildl
push
pop
rorl
and
add
jge
shl
ja
pop
add
sar
inc
lods
cmp
lods
mov
ret
push
in
jl
jmp
push
sar
add
add
sbb
dec
jge
popa
push
pop
and
out
out
jbe
push
mov
mov
dec
addl
mov
inc
and
inc
pop
pop
xor
ret
dec
mov
in
jo
inc
push
add
push
fsubrl
jo
add
and
inc
jo
add
jge
out
aas
jo
aas
je
or
mov
mov
or
mov
xor
cmp
xchg
or
cld
cs
push
inc
xchg
push
mov
cwtl
std
aaa
jb
cmp
test
ret
fildl
mov
lds
enter
jo
cwtl
out
jb
jae
sbb
scas
fnstenv
mov
imul
jb
jmp
pop
mov
sbb
in
aas
push
sub
movsl
movsb
inc
lret
out
pop
mov
jnp
mov
jl
pop
jge
jmp
mov
jp
xor
jecxz
lea
jmp
lahf
mov
pop
mov
fistl
pop
dec
mov
test
cmpsb
pop
movsb
inc
dec
pop
xor
pop
pushf
push
dec
lea
add
jmp
jo
mov
data16
lock
jmp
jae
inc
or
je
pop
int
popa
pop
add
push
pop
inc
add
jae
lods
jmp
fcmovnu
add
or
push
add
push
fwait
jbe
call
fildl
cltd
clc
push
and
pop
mov
pop
inc
call
xor
inc
jmp
shll
mov
addr16
and
bound
sub
and
bound
jns
inc
and
lds
inc
and
fnsave
cltd
sbb
insl
loopne
add
jge
add
and
call
mov
and
fs
push
gs
and
fadd
pmullw
add
pop
bound
add
gs
and
adc
mov
icebp
je
push
or
jo
out
das
cmpsb
jmp
push
pop
dec
inc
incl
sti
mov
adc
and
stc
and
jnp
or
push
push
dec
push
mov
inc
ficomps
or
add
mov
xorb
in
in
lea
lea
ret
aad
push
mov
push
fsubrs
aas
jo
pop
dec
pusha
aas
jae
test
jl
push
xor
jae
std
mov
je
fisttpl
mov
push
into
sti
call
andb
jo
insb
mov
andl
ret
xlat
fs
loop
xor
icebp
mov
ret
mov
pop
and
in
and
aad
repz
push
test
and
andl
xchg
mov
fsubr
mov
scas
pop
nop
ffreep
inc
jg
add
gs
mov
ret
outsb
or
sidtl
fst
test
and
bound
mov
roll
test
or
mov
xor
jae
add
and
rcr
add
cli
daa
and
sub
stc
pop
add
hlt
pop
and
jbe
cmpb
sti
pushf
jmp
bound
pop
cld
adc
andl
mov
pusha
push
jne
out
popa
inc
or
stc
push
and
arpl
mov
add
dec
data16
and
add
push
enter
fiaddl
fcoms
push
jne
std
sub
addr16
pop
stc
fdivl
jne
push
fadd
push
cmpsb
les
les
jne
popa
pop
test
cltd
flds
movsb
hlt
fiadds
lea
pusha
call
adc
add
andl
in
sbb
test
movsl
add
add
orl
xor
sub
cld
mov
cmp
xor
gs
cmpl
jae
gs
xchg
cmpl
push
jle
mov
xchg
inc
mov
or
pop
mov
push
push
jo
inc
std
and
or
xor
add
mov
sti
jecxz
roll
ret
add
insl
dec
push
inc
jo
mov
jo
inc
ficompl
xor
mov
push
adc
xchg
sar
fisubrl
iret
add
lret
pushf
stos
and
adc
sahf
lds
ljmp
mov
sahf
or
out
add
in
xlat
sub
mov
xlat
aad
add
mov
jmp
xchg
out
jmp
cmpsl
ficompl
mov
popf
jae
jg
pop
mov
cmp
loop
addr16
sub
or
pop
ficompl
std
adc
sbb
jl
add
pop
inc
in
push
adc
out
out
fists
sbb
movsb
mov
pop
inc
fnstcw
fs
aad
loopne
and
add
adc
outsb
jmp
jb
adc
filds
xchg
dec
add
cmc
inc
jmp
add
inc
add
jmp
fildl
jmp
orb
xorl
add
inc
and
fiadds
jle
fldl
mov
jne
pop
jne
xor
push
arpl
add
ficoms
divb
std
adc
sbb
inc
xchg
add
add
mov
add
add
xchg
xchg
icebp
movsl
mov
pop
les
mov
jnp
jg
gs
call
daa
push
rorl
push
leave
mov
jo
jo
pop
adc
ja
xchg
sub
test
sbb
push
or
sbb
adc
and
add
or
je
mov
mov
push
jae
std
mov
inc
mov
mov
imul
mov
les
in
inc
aam
mov
sub
jno
jnp
dec
loop
inc
push
loop
js
fucomi
pop
daa
inc
fwait
push
jmp
jo
xchg
outsb
movl
xchg
lret
rorl
fiaddl
ljmp
jl
push
sub
jo
outsl
push
or
jmp
daa
js
mov
sahf
andl
ljmp
dec
xchg
popf
out
add
sbb
dec
outsb
mov
sub
imul
dec
jecxz
jp
or
jnp
or
subl
jmp
cmp
mov
add
push
inc
cld
lds
fwait
aas
adc
insb
addl
fildl
ret
fcmovbe
jg
rcr
and
push
push
outsb
cld
rolb
movsb
cmpsl
pop
rcr
or
dec
cltd
scas
push
sbb
push
add
jae
icebp
ret
outsl
push
icebp
jp
push
push
and
xchg
mov
xchg
dec
jg
jb
jg
and
xchg
lock
cmp
outsl
push
add
shll
cld
cltd
icebp
aas
cld
rcrb
push
push
popa
aaa
push
inc
pop
adc
lock
or
jle
jne
push
sbb
cld
mov
arpl
je
repnz
sbb
and
dec
and
icebp
add
sbb
cmp
mov
jo
push
xchg
adc
fcoms
sub
jg
cld
insl
mov
add
push
stc
cltd
jg
dec
jb
push
fistps
or
push
mov
test
inc
mov
jns
inc
jmp
pop
pop
xchg
mov
add
sti
jo
add
in
std
mov
xchg
scas
push
dec
rcrl
xor
addl
outsb
and
push
js
ret
sti
sti
adc
mov
jns
sti
je
cld
mov
int
xchg
mov
mov
jae
aad
or
xchg
dec
std
iret
stc
dec
add
add
mov
into
adc
push
repnz
push
dec
movsl
pusha
fiaddl
mov
add
dec
and
cmp
and
sub
cmpsl
js
add
mov
popa
cmpsl
test
or
pop
les
mov
add
rcr
daa
sti
push
mov
mov
dec
or
pushf
addr16
adc
jo
fs
fisubs
das
mov
jmp
bound
fbstp
push
ljmp
sub
xchg
jno
jmp
mov
add
fldcw
push
push
jb
push
inc
stc
and
loope
out
adc
stos
push
es
inc
stc
add
aam
push
add
add
insl
je
shll
sahf
ret
fldcw
lods
sarb
call
incl
add
jmp
adc
leave
fiadds
xor
rol
lods
jge
js
popf
mov
clc
loop
pop
pop
std
daa
push
dec
outsl
mov
push
mov
mov
ficoml
adc
ljmp
pop
shll
shr
filds
add
call
cld
push
add
add
mov
sub
xchg
cmp
adcb
rorl
clc
stc
xor
xor
call
mov
std
cld
clc
add
pushf
cmpsb
std
scas
incl
movb
add
ds
lret
jmp
cmp
loopne
je
and
xor
stc
stc
mov
or
add
jo
jge
xor
sar
ret
jo
dec
enter
jo
or
sub
add
push
leave
fdivl
xor
std
cmp
push
icebp
stc
mov
jmp
into
cmpsl
fistl
cmpsl
add
inc
iret
imul
mov
fildl
dec
mov
fcmovne
push
fs
add
sarl
pushf
movsb
push
gs
add
cmpsb
stc
dec
mov
adc
sahf
cmpsb
std
dec
mov
adc
dec
mov
cmc
repz
leave
dec
mov
cmc
sti
js
fdivrp
dec
add
mov
or
jmp
jne
addr16
gs
add
ja
stos
jae
push
mov
jae
sub
mov
in
add
gs
xchg
adc
imull
rcr
test
rcl
inc
sbb
shll
test
fucomip
jae
cmp
jae
or
push
add
ljmp
ja
outsl
scas
sahf
or
ljmp
insl
add
shll
jmp
jmp
or
inc
add
pop
shll
xor
fistl
sbbl
hlt
inc
fstps
inc
add
fcompl
ljmp
ret
mov
ret
push
jl
xchg
faddl
add
fwait
add
cmp
push
imul
fldt
shl
push
imul
test
cmp
dec
fiaddl
lea
push
jo
icebp
das
xorl
std
pop
inc
pop
aam
jae
xorl
mov
xor
mov
inc
add
daa
ja
icebp
addr16
je
inc
js
scas
push
daa
jge
xchg
add
jo
cmc
test
jae
add
adc
push
jmp
add
lds
dec
std
ja
jp
add
jae
push
addl
fidivl
test
mov
jnp
mov
addr16
inc
rorb
xor
jle
lock
inc
sar
insl
dec
sti
sub
shlb
sbb
and
arpl
lock
clc
call
fneni(8087
lahf
bound
add
cltd
enter
bound
add
call
rol
test
add
adc
ja
mov
jns
pop
mov
jne
jmp
push
dec
leave
sub
repz
aas
add
sbbb
jmp
jo
add
sar
ljmp
pop
add
test
movsb
jae
push
xchg
aad
add
lahf
xlat
push
push
test
std
cmp
adc
sti
incb
jge
arpl
inc
jmp
jae
ret
jno
sbb
push
push
mov
dec
data16
rcl
scas
sti
mov
jae
xchg
jae
mov
fs
xchg
push
cmp
or
add
les
mov
cmp
aas
imul
or
push
mov
inc
imul
clc
lcall
fiadds
test
sbb
stos
push
arpl
mov
fiadds
jmp
movb
mov
cld
mov
clc
ljmp
enter
mov
decl
xor
addr16
fiadds
xorb
enter
aas
push
das
scas
inc
jno
add
pop
mov
inc
jo
das
andl
out
enter
mov
sti
pop
sbb
push
incl
mov
fs
inc
in
enter
sbb
xor
mov
filds
test
call
daa
xor
sub
std
lahf
out
or
mov
sbb
cmc
out
dec
sti
jg
sub
push
clc
fildl
addr16
xchg
lds
mov
xor
call
les
fstpl
sbb
cld
xor
lock
je
arpl
popa
aas
push
inc
fwait
adc
fsubs
pusha
fisubl
mov
pop
fstpt
xor
ja
sbb
in
jo
pushf
fadds
call
pop
or
idivl
pop
or
mov
shlb
test
inc
add
testl
fisttpl
insb
fisttpl
jmp
sbbl
dec
scas
fildl
fwait
jbe
mov
jo
xor
xchg
jae
add
fdiv
stos
jae
add
outsb
fdiv
stos
jae
push
mov
mov
add
lcall
cmpsl
int
jmp
jae
roll
xor
push
xchg
insl
fldl
jmp
scas
pop
sti
cld
jae
inc
jmp
xor
into
clc
lcall
push
push
push
xor
lcall
add
int3
rolb
popf
xlat
std
mov
xor
push
test
std
incl
icebp
sar
call
mov
pushl
popa
clc
pushl
pop
std
pushl
sahf
punpcklbw
lcall
shlb
add
sbb
call
cmp
popf
std
sub
enter
cmp
cmp
xchg
je
out
jae
add
clc
jecxz
jno
add
addr16
mov
jge
jo
add
fadds
jmp
xchg
hlt
dec
push
cmp
fnstsw
jae
pop
out
daa
in
add
lock
pop
std
xor
add
movsb
cmp
decl
add
add
stc
sub
outsl
add
iret
jle
enter
outsl
je
push
daa
out
and
jb
add
pushl
sarl
lock
add
out
in
mov
add
sbb
xchg
movl
shll
jmp
inc
jo
sub
ret
enter
stos
es
sarl
loopne
test
ss
dec
pop
ror
test
add
loopne
in
aad
xor
xor
fdivrp
jbe
inc
insb
aaa
outsl
into
push
jo
add
dec
pop
call
clc
adc
cmp
pop
xchg
repz
rcrb
inc
jmp
fistl
xchg
pop
in
add
pop
jbe
out
cltd
sbb
or
out
pop
cltd
mov
add
add
sub
test
cmp
add
inc
jmp
fildl
jmp
test
adc
mov
das
add
xlat
mov
jb
dec
mov
pop
cli
inc
cltd
test
jne
lcall
addl
shll
mov
add
sbb
push
xchg
jo
add
xor
push
push
adc
cld
test
mov
push
push
cld
mov
mov
adc
aam
push
mov
inc
or
mov
mov
cld
sub
pop
cli
inc
mov
das
dec
push
outsb
lods
jg
jo
add
xor
faddp
lcall
cld
stc
xor
jae
cmp
daa
cmp
in
test
aaa
std
cmp
pop
inc
add
sub
pop
xorl
lods
jno
xor
inc
mov
inc
jo
mov
mov
leave
jnp
popf
inc
cmp
cld
frndint
jl
test
jg
add
xchg
cmp
rclb
inc
sub
mov
sbb
add
adc
stos
fisubl
adc
mov
sti
pop
mov
pop
cmpsl
push
imul
push
push
and
mov
gs
sbb
mov
fs
jecxz
je
push
xchg
movsl
add
fildl
mov
scas
adc
fucompp
add
or
xchg
lret
arpl
or
pop
cs
pop
fidivrl
cmc
pop
lcall
in
add
scas
jmp
jbe
movsb
xchg
insl
ret
add
jae
lea
cld
inc
test
pop
cmc
pop
or
test
mov
add
test
xchg
xor
add
fwait
icebp
fsubr
jae
ret
sbb
fwait
mov
add
repz
les
ljmp
stos
jae
add
jmp
pop
das
pop
and
insl
and
jle
ljmp
adc
fdivrl
sbb
xchg
sub
sbb
dec
in
in
ficoms
jmp
pop
leave
lcall
adc
je
push
jbe
sub
jne
pusha
js
and
pop
call
cmpsb
mov
filds
add
sbb
mov
xlat
roll
fucomi
mov
loopne
push
aam
jno
out
push
push
fs
push
pop
test
cmpsb
push
or
push
jae
xchg
xor
pushf
hlt
push
pushl
movsb
mov
je
sti
mov
dec
push
xlat
mov
pushf
call
les
lea
mov
jno
or
cwtl
nop
dec
add
jg
add
ds
push
jae
insl
inc
add
lods
mov
adc
ss
inc
dec
add
mov
mov
sub
fs
lock
mov
into
adc
adc
add
sbb
add
sarl
repz
push
ss
inc
sub
jo
outsb
add
enter
aad
in
add
jmp
mov
dec
adc
mov
mov
cli
ja
movsl
push
adc
push
repz
into
fnsave
inc
bound
add
call
inc
je
sbb
push
pop
into
cld
pop
push
ljmp
push
ljmp
fwait
jmp
xor
pop
push
xorl
fildl
mov
add
sbb
or
push
cmp
fbstp
loopne
inc
add
fwait
lea
push
addb
cld
push
les
adc
jne
call
push
cld
jb
pop
jbe
decb
jns
jae
pop
push
push
push
fmull
sbbb
and
ss
iret
call
mov
arpl
call
xchg
test
jmp
pop
jo
mov
dec
notb
aad
packuswb
or
adc
cld
addb
pop
leave
fwait
push
cld
push
inc
cld
jnp
cltd
push
cld
ljmp
or
loop
je
adc
jmp
jmp
dec
mov
inc
add
fadds
add
pop
hlt
inc
dec
mov
mulps
or
add
inc
mov
cwtl
test
add
jg
jo
jmp
pushf
xor
xor
sbb
cltd
inc
add
out
and
xor
pop
adc
imulb
cs
jo
mov
cli
mov
jmp
hlt
sub
add
adc
jo
shll
rol
jmp
sub
jo
cmp
pusha
sub
jmp
sub
or
outsl
or
add
cmp
fistpl
lret
jae
xor
clc
dec
jg
popa
dec
dec
pop
daa
sahf
jmp
xor
fucomi
out
xor
in
jl
sbb
sti
add
dec
dec
add
fistps
sub
mov
fldt
jb
or
enter
add
xchg
cmp
push
dec
pop
jg
jmp
mov
outsl
push
xor
aaa
loopne
add
fadds
jmp
nop
call
and
loope
pushf
sti
jmp
add
push
test
inc
int3
or
js
cld
jmp
jae
mov
inc
loopne
add
stos
test
imul
jae
adcb
int
push
negl
jne
in
push
cld
jge
arpl
cltd
pusha
in
pusha
fidivl
in
scas
mov
fwait
add
out
mov
rolb
pushf
mov
push
or
push
jmp
pop
pop
ret
sbb
leave
or
xchg
lock
adc
decl
xlat
call
call
jmp
in
xchg
call
test
or
fsubrs
push
cld
out
inc
add
lods
into
dec
cmp
inc
sti
dec
int3
fildl
jne
into
dec
add
mov
enter
mov
call
inc
add
nop
sub
icebp
shlb
cmp
jbe
fiaddl
inc
call
jmp
repz
imul
push
sbb
jae
fiaddl
cld
inc
lods
jecxz
imull
sbb
inc
add
les
add
lret
mov
cld
icebp
fsubr
or
iret
push
inc
aad
dec
lcall
sub
str
dec
inc
in
pop
xchg
out
lret
repz
xchg
out
xchg
out
pop
inc
dec
stos
jp
fs
jae
sub
call
pop
dec
popl
stc
into
int
xchg
lds
add
fsubr
add
add
fldt
hlt
sbb
xchg
fsubr
add
fs
xchg
mov
fwait
in
jns
iret
push
and
lods
pop
scas
out
stos
jg
or
add
xchg
dec
aad
jg
add
or
idivl
jmp
hlt
shr
inc
jmp
xor
jle
fildl
xor
movsl
sti
lcall
inc
jmp
jae
call
inc
or
add
cmp
lea
and
jmp
fcomp
add
enter
testl
sbb
and
jmp
ds
insb
mov
cmp
fiaddl
jmp
aad
std
adc
or
and
cwtl
dec
jmp
jb
xor
sbb
call
xor
ljmp
push
add
xor
cld
jne
fadds
hlt
and
int
and
daa
fs
jp
sub
inc
pop
decl
cld
imul
pop
cld
mov
je
es
adc
out
shrl
out
sti
mov
push
movb
mov
push
adc
and
push
in
pusha
cmp
add
pop
test
lahf
sub
xchg
jl
jno
add
jo
shlb
sbb
add
shrl
inc
jo
push
std
pusha
popa
adc
add
or
or
test
add
stc
add
frndint
pop
push
jnp
je
ret
inc
dec
cwtl
inc
jo
add
pop
fneni(8087
sub
outsl
into
daa
jo
jmp
push
jo
adc
dec
repz
dec
xor
jne
outsb
inc
jge
test
jo
shlb
pop
sahf
jmp
xchg
pusha
sahf
jmp
sub
push
into
sub
jmp
add
sahf
pop
fdiv
and
jmp
fildll
stos
pop
out
lods
insb
jg
shr
add
inc
js
dec
inc
xorb
add
mov
or
out
std
fs
mov
dec
mov
in
rorl
out
addr16
push
sub
add
insb
pusha
jne
push
mov
or
cltd
in
call
fistps
inc
int
cltd
data16
in
js
xor
int3
addr16
xlat
fdivrp
std
pop
icebp
sti
xchg
dec
iret
and
cltd
cs
pop
inc
push
jge
addb
jl
inc
add
filds
addb
je
repz
dec
sbbl
out
adc
fsubp
jae
mov
xchg
pop
pop
rol
fistps
pop
inc
cld
push
adc
dec
push
fisttps
push
mov
std
test
inc
sbb
faddl
push
mov
repz
sbb
mov
sub
dec
push
fsts
fisttps
pop
xor
clc
jle
movb
pushf
je
mov
ss
or
stos
divl
mov
add
jb
mov
add
pusha
test
jo
adc
dec
jl
xor
mov
mov
test
pusha
fldl
cmp
cmp
sub
push
inc
jb
jae
sub
or
xor
push
xor
cs
jo
jp
movsb
and
inc
jo
jmp
jno
pop
push
jmp
inc
call
and
fcomi
insl
mov
dec
add
inc
add
xlat
aad
daa
lds
sbbb
xor
scas
fcompl
adc
test
inc
inc
sbb
jne
sub
jl
mov
sar
ss
mov
ss
sbb
and
out
movsl
adc
cs
in
sbb
jg
call
pop
adc
es
jge
add
sbb
jge
fldcw
xchg
or
lea
xor
push
lret
lock
jmp
adc
xor
sahf
sbb
in
xor
fcompl
adc
clc
cli
rorb
jo
shr
mov
in
jle
lret
add
sbb
dec
inc
cld
mov
inc
insb
lods
dec
bound
inc
test
dec
inc
mov
pop
jbe
icebp
scas
and
dec
cwtl
cld
call
pop
cmp
sub
les
fistpl
outsl
hlt
push
push
jne
out
xlat
incb
ds
adc
fnstcw
add
fldcw
sar
ret
ret
and
clc
add
or
jle
int3
adc
fmuls
jle
in
push
fadds
mov
fwait
dec
push
cmpsb
popa
sub
jbe
cld
call
cwtl
je
ret
adc
inc
std
adcl
std
cmpl
subl
mov
or
add
xor
mov
jae
addl
cmpb
fbld
sbb
int3
enter
jnp
or
jns
repz
mov
or
sar
add
xor
xchg
mov
add
lcall
mov
inc
or
jo
xchg
jae
sub
mov
movsb
out
mov
fcmovnbe
enter
daa
sbbb
pusha
lret
pop
scas
jno
pop
push
and
nop
xor
and
sbb
xchg
inc
cltd
ja
mov
mov
xor
repz
fdivl
aas
xchg
add
lcall
push
inc
stos
jmp
call
repnz
jnp
xchg
jo
cltd
add
sti
ss
das
pop
dec
dec
enter
push
sub
and
jmp
sub
fstpl
push
jmp
xlat
sbb
jge
adc
out
mov
adc
mov
pop
pop
xchg
pop
stc
in
call
or
loope
xchg
cld
sti
mov
pop
jle
outsb
inc
mov
xchg
in
clc
popa
mov
into
add
add
into
adc
bound
test
xor
pusha
cmp
xchg
mov
addl
jnp
nop
sbb
loop
mov
jmp
sarb
push
push
push
lcall
add
cmp
push
cli
test
mov
das
jne
pop
or
add
add
dec
flds
pop
fs
push
sti
wrmsr
fwait
sbb
adcb
or
or
pushl
fdivr
je
inc
mov
loop
call
mov
call
rol
push
decl
mov
mov
jb
pop
mov
int
mov
add
inc
push
repz
and
pushl
mov
test
add
fstpl
sub
pop
jnp
adc
mov
out
jo
mov
std
sbb
pop
adc
faddl
xchg
push
or
mov
gs
std
repz
or
pushf
outsb
cltd
inc
or
stc
xchg
icebp
shll
or
adc
out
enter
inc
addr16
jae
mov
cltd
outsl
push
xor
xchg
pop
push
sub
iret
repnz
bound
shrl
jle
setle
adc
rcrl
popf
push
mov
mov
push
stos
repz
incb
push
decb
imul
ds
add
add
jmpw
xchg
push
rcll
add
pop
pop
rcl
mov
pop
stc
in
cmpsb
xchg
adc
dec
xchg
and
hlt
arpl
ret
inc
addr16
je
jae
rcrl
and
push
ret
push
xor
sbb
sbb
lea
cltd
hlt
cltd
mov
inc
jmp
add
sar
call
lea
push
js
str
fnstenv
rclb
xor
xchg
xchg
movsb
sub
cld
push
cs
lock
cmp
fs
sbbl
cmp
cmc
pop
xlat
ret
in
add
xchg
adc
push
adc
sub
fs
dec
and
dec
add
adc
add
xlat
adc
jmp
sahf
lock
leave
fsubs
addb
xchg
cld
imul
repnz
jo
cld
call
mov
stos
sbb
ljmp
out
mov
mov
aas
jo
inc
je
stos
test
xor
aas
jo
aaa
add
xor
aaa
add
add
pop
std
fs
pop
testl
add
lea
xorl
mov
sbb
lahf
xor
pop
lcall
mov
fwait
jmp
sbb
out
cmc
daa
iret
test
stc
push
mov
test
fcompl
add
mov
mov
mov
fwait
jmp
out
adc
ret
xchg
mov
mov
pop
shrl
fcompl
lret
out
cmp
pusha
je
in
adc
add
lods
pop
fcoms
xor
fsubr
add
jmp
out
add
jae
dec
stc
jmp
cmpsl
pop
or
pand
jmp
icebp
lock
lock
lods
or
inc
gs
add
sti
pop
push
rolb
negb
or
fidivl
cmp
jmp
push
lods
test
push
pop
jge
mov
das
test
inc
sbb
movsb
pop
fdivrl
adc
cmpsl
imul
in
adc
or
or
in
in
jge
fnsave
and
int3
in
imul
sbb
lea
imul
mov
add
fldcw
cmp
mov
popf
pop
pop
andb
adc
filds
add
push
fmull
or
push
shrl
js
mov
inc
sub
std
incb
jo
jmp
addl
mov
rolb
cld
and
sbb
pop
push
add
jo
fdivrp
dec
je
push
push
scas
fildl
cmc
orl
std
pop
lcall
lcall
mov
push
mov
jnp
jge
mov
rolb
jo
aas
add
int3
or
movsl
dec
add
ljmp
pop
jae
fdivr
sbbb
cmc
lods
scas
or
into
mov
int
repnz
incl
fistpl
add
dec
fsubl
repnz
xchg
outsb
adc
ss
out
repnz
push
dec
sbb
pop
and
pop
ds
mov
mov
scas
mov
repz
jg
mov
sbb
add
and
std
nop
xchg
scas
fimuls
mov
fs
push
out
add
add
jg
mov
add
sub
and
scas
and
lds
push
sbbl
xchg
es
jmp
fs
sarl
sbb
ljmp
or
lret
iret
inc
jmp
push
arpl
xchg
jno
sarb
filds
aas
ljmp
out
mov
ret
or
arpl
cmp
dec
or
js
int
in
xor
roll
and
mov
std
je
adc
or
or
push
fsts
xor
or
cmp
pop
and
enter
cmp
push
push
inc
js
mov
add
push
js
cmp
or
or
xor
testl
jo
stc
cmp
or
push
inc
mov
and
data16
subl
add
testb
inc
outsl
popf
addl
repz
cld
gs
out
aas
jo
rep
addl
add
das
inc
and
mov
dec
jns
inc
xchg
les
sar
sub
inc
call
pop
sbb
mov
xchg
mov
sbb
movsl
mov
ljmp
xor
sub
jns
daa
inc
cwtl
lods
int3
xor
inc
loopne
mov
jb
xor
jb
jmp
mov
cmp
mov
pop
daa
icebp
inc
mov
adc
add
rclb
sub
jb
stos
hlt
mov
jae
aam
aaa
xor
add
mov
add
shlb
scas
jns
cmc
sub
cmpsb
stc
sub
sub
pusha
and
sub
pop
pop
jge
xchg
sti
pop
jae
inc
jbe
out
jmp
push
mov
adc
out
call
cld
insl
xor
sbb
bound
imul
fldcw
cld
cld
mov
inc
jmp
dec
xor
repz
jmp
jae
lcall
adc
insb
pop
add
dec
call
imul
sbb
and
fcoms
fcomp
mov
mov
cmp
add
fisubrl
xchg
jae
pop
jns
rcll
imul
xchg
inc
mov
add
mov
mov
stc
xchg
popa
addl
jmp
filds
je
push
hlt
test
add
hlt
daa
sub
add
pop
hlt
sub
fldl
jg
cmpsb
incb
dec
fldl
jmp
pop
mov
or
inc
inc
or
test
pushl
inc
add
stc
sub
push
mov
mov
add
mov
leave
cmp
cmp
imul
mov
push
call
lcall
lret
in
jb
add
jo
fidivs
mov
les
jl
jae
mov
in
jb
add
jo
ljmp
lods
push
clc
jne
fldt
xor
push
pop
lcall
ret
neg
testb
out
add
mov
test
loopne
mov
jmp
ktestw
sbb
adc
xchg
jle
mov
dec
xor
add
mov
add
popa
lea
add
mov
icebp
inc
sbb
xor
and
test
pop
xor
call
int
pop
fildl
jo
jg
sbb
test
fisttpll
add
in
pop
sub
es
call
rcll
mov
cli
xor
fisubl
lret
sbb
dec
loop
cmp
out
andb
out
out
sub
pop
in
jmp
sbb
test
jo
cmp
loope
cmp
add
mov
imul
sub
call
filds
jge
je
repz
add
dec
fisubl
adc
cmp
push
add
jg
adcb
js
cltd
fbstp
jle
mov
or
or
adc
pop
hlt
cmp
arpl
or
sbb
lcall
out
fdivr
xor
jo
pop
iret
xor
jae
push
ret
mov
icebp
push
pop
or
and
push
sbb
sub
enter
add
sbb
lcall
sbbb
xor
mov
ret
dec
enter
add
ss
push
xchg
jg
xchg
pop
or
mov
ret
inc
enter
add
xor
out
jg
xor
sti
add
icebp
add
or
add
and
add
xchg
repnz
repnz
repnz
repnz
repnz
repnz
repnz
repnz
add
xchg
pop
test
orb
pushf
pusha
lods
repz
pusha
cli
shl
popa
cs
ja
cs
andl
notl
or
mov
ljmp
sub
arpl
mov
pushf
pop
addl
je
test
lock
jmp
repnz
xor
sbb
xor
sbb
ficoms
xchg
adc
mov
arpl
inc
imul
fiaddl
jmp
and
sbb
and
adc
and
or
bound
or
add
flds
or
fcmovnbe
add
repz
jae
push
add
add
fiadds
sub
or
fadds
jmp
and
ds
repnz
sub
add
stos
sbb
sti
xchg
and
add
push
aad
dec
xor
fimull
int
sti
decl
clc
mov
inc
add
leave
mov
adc
or
add
pushf
in
add
pushf
inc
add
enter
and
lcall
push
cmovl
push
add
pusha
jge
lods
ffree
inc
fmuls
jo
push
sbb
sub
aad
or
jo
mov
cmpsb
cwtl
das
xorl
faddl
pop
mov
js
mov
testl
jo
mov
jg
nop
inc
jl
xor
subb
stc
andl
add
ss
ljmp
or
or
btr
add
jle
xor
add
jnp
add
ss
cmpsl
or
jg
or
jae
gs
jmp
mov
add
xor
or
jl
lret
insb
inc
sbb
pop
cmp
scas
out
mov
cli
ja
push
out
push
lods
lock
test
rclb
or
stc
sahf
int
cwtl
sahf
in
sbb
fsubr
add
popf
fstp
mov
stc
jl
xlat
out
outsl
inc
pop
or
clc
mov
fsts
dec
lods
loope
rclb
mov
inc
jp
call
test
add
outsb
xchg
out
sti
sbb
xor
pusha
inc
icebp
sbb
and
push
lahf
adc
lahf
and
add
or
xor
in
pop
xchg
fdivl
ret
in
movsl
aas
iret
or
sub
push
int3
mov
test
out
icebp
xchg
dec
xlat
daa
mov
xchg
xchg
add
xchg
pop
sti
xor
pop
inc
jns
adc
add
xlat
test
outsl
sub
push
sti
sbb
je
cli
mov
clc
add
add
loopne
cld
jmp
gs
jmp
push
gs
add
push
jg
mov
mov
sahf
idivb
add
push
jnp
dec
mov
adc
and
sub
add
add
jmp
mov
push
jne
movsb
add
cs
xchg
roll
sbb
lcall
clc
xchg
xor
incl
mov
add
mov
std
cld
cld
repz
lock
push
or
orl
xor
out
in
add
lock
add
add
mov
or
xor
jp
xor
scas
xor
out
push
add
lock
pushl
mov
or
cmp
xor
add
ss
out
fcomi
add
daa
xor
rcrb
mov
aam
inc
dec
pop
xchg
aam
push
and
lods
popf
call
add
pop
and
and
fdivrs
jmp
fcos
pop
add
jg
mov
inc
sub
add
aad
movsb
repz
cmp
add
mov
clc
das
and
mov
push
and
sarb
loopne
sbb
sbb
add
lret
jae
jmp
imul
popf
add
push
or
jae
clc
mov
mov
popf
push
iret
clc
arpl
pushf
gs
arpl
jmp
jo
leave
out
cltd
shl
push
adc
lock
xchg
cltd
adc
or
aam
jmp
mov
pop
jmp
inc
push
or
jmp
mov
jae
add
mov
rolb
or
shrl
in
push
add
leave
mov
inc
int
cmp
pop
or
inc
ret
xor
je
sbb
pop
je
pop
stc
and
jecxz
xchg
fiadds
andb
outsl
or
sti
mov
or
pop
pop
stc
or
adc
inc
dec
jmp
push
push
fiadds
andb
repnz
xchg
adc
jmp
cltd
and
jge
pop
stc
or
test
jp
add
push
imul
or
cmp
jg
or
movsbl
jp
add
testl
mov
pop
insb
je
repz
add
je
repz
je
gs
jae
jns,pn
or
lret
sub
push
ss
add
lret
xor
dec
jns,pn
add
jb
inc
jle
jmp
fsubrl
sbb
xchg
pop
ss
cmpsl
loop
jl
xor
xchg
loop
mov
jmp
adc
mov
jle
scas
cltd
repz
lret
stos
dec
pop
lret
mov
add
xlat
mov
dec
xchg
lret
mov
push
mov
fucomi
lea
push
out
xchg
and
jbe
push
mov
jge
adc
sbb
jo
add
fimull
aaa
push
loop
out
adcb
jae
adc
lods
sub
and
repz
jnp
inc
filds
jge
add
mov
jge
add
or
add
test
cmp
jmp
xchg
imul
add
jae
imul
out
xorb
stos
or
test
pop
cld
jmp
popa
pop
clc
mov
pop
lds
ret
add
xchg
test
add
pop
stc
inc
push
push
arpl
sbb
ret
enter
fildl
xorb
sti
push
push
mov
add
pop
stc
inc
ficoms
or
fcmovb
inc
shr
jae
and
je
pop
repz
add
enter
pop
stc
push
movsb
fadd
inc
xchg
jmp
paddq
push
add
inc
push
inc
xor
add
and
jne
cmp
scas
sbb
pop
mov
or
sbb
scas
push
adc
outsl
mov
add
pop
pop
jo
xor
and
add
sub
in
adc
into
jno
push
jae
int3
pop
jo
cmp
and
add
and
and
inc
add
jge
das
jns
mov
add
stc
jmp
cli
xchg
fldt
fucomi
mov
int
jle
fucomi
subl
jne
cmpsl
and
ja
pop
out
and
lock
pop
iret
je
cmpsb
add
fiaddl
jmp
notl
imul
add
jl
jae
popa
inc
mov
push
sub
cwtl
or
jo
jmp
repz
sub
xchg
add
mov
cmpsl
out
mov
flds
popa
mov
xchg
mov
int3
notl
cmp
fucomi
in
jnp
add
mov
add
repz
testb
call
out
fildl
mov
xor
add
repz
out
adc
inc
call
jae
addb
push
cld
cmpsl
sub
add
repz
idivb
dec
je
inc
add
jecxz
dec
filds
lea
sub
or
pusha
lcall
sbb
jno
bound
inc
sbb
jecxz
push
filds
andb
or
fistps
add
shlb
or
ljmp
out
ret
das
in
das
push
sti
sub
scas
add
or
cwtl
ret
mov
add
stos
adc
jmp
test
jmp
pop
stc
or
jl
je
testl
adc
scas
add
out
or
add
ret
mov
mov
les
cmp
jo
js
jl
jno
jmp
sbb
stc
iret
and
jp
orb
mov
inc
jno
jo
repz
je
test
add
or
jo
inc
add
les
jb
in
rolb
add
ss
add
fiaddl
add
mov
stos
add
jo
loop
mov
push
aad
jmp
xor
push
stos
out
icebp
adc
or
insl
in
jo
into
mov
test
aaa
xchg
call
into
add
jo
sub
inc
mov
mov
add
inc
jno
dec
jo
outsb
xlat
cmp
int3
xchg
loope
cmp
fucomi
shll
jmp
lea
call
cld
jmp
out
inc
jge
jae
test
imul
insb
nop
loope
jmp
dec
repz
jae
inc
ljmp
or
pop
cld
jmp
in
dec
jge
jae
test
insb
fildl
imul
sahf
pushl
fiaddl
fisubs
sub
imul
xorb
pop
cld
scas
xor
push
nop
mov
popf
jmp
fiaddl
dec
mov
cmp
xor
inc
cltd
mov
adc
or
incl
decb
mov
lcall
inc
add
movsb
add
add
dec
lret
cmp
ja
dec
xchg
andb
test
pushf
decb
sbbb
or
and
xchg
je
sbb
ret
fninit
outsb
add
add
pop
sti
bound
or
add
or
jo
and
pop
inc
push
mov
adc
mov
xor
mov
pop
mov
adc
dec
std
add
repz
sbb
jo
and
jo
cmp
dec
inc
scas
add
jmp
xchg
add
inc
jno
out
lock
je
jmp
jo
das
sarb
and
xor
dec
xchg
xor
inc
jae
testb
add
aam
and
jmp
sti
and
pop
dec
push
out
pop
aas
dec
jmp
ret
sub
pushf
pop
sub
popa
movsb
push
mov
push
popf
rorb
clc
lahf
add
out
cmp
addr16
mov
jmp
add
adc
jo
sbb
inc
push
movsl
out
xor
or
add
call
jmp
add
add
xor
push
in
fstpt
jne
rcrl
pusha
inc
mov
stos
fadds
jmp
pushf
les
mov
jae
cmp
ret
in
or
fildl
std
shl
xchg
sub
and
punpcklbw
add
lock
and
add
inc
call
pop
adc
jb
out
negb
int3
sti
out
cld
out
aaa
jb
shr
pop
cli
in
mov
fisttpl
add
sti
dec
pop
jecxz
xchg
fadds
sub
lret
dec
jecxz
prefetch
add
mov
test
mov
cmp
fiadds
adc
or
add
adc
sldt
mov
dec
or
or
fiaddl
mov
or
lcall
pop
adc
xor
add
sbb
or
add
test
cld
ja
loope
jo
jge
push
out
add
inc
add
lret
mov
addr16
ja
aad
add
nop
jo
jo
mov
lea
incb
scas
cmp
adc
add
jo
in
or
addr16
pop
xorl
xor
gs
cmp
add
repnz
jae
ds
fimull
or
pop
xor
sti
jp
jmp
repnz
roll
insl
pop
int
add
mov
iret
jno
jmp
inc
jno
mov
icebp
movsb
adc
mov
sbb
je
test
cld
insb
pop
popf
add
jb
inc
lahf
jno
jmp
mov
or
bnd
lods
add
mov
fdivs
mov
insb
jg
fucomi
subl
xchg
jmp
add
xchg
fldl
jmp
js
add
mov
cmp
jae
ret
shl
fldl
jmp
inc
and
jo
rcrl
or
fidivl
bound
insl
inc
fldl
jmp
out
push
or
xchg
or
push
out
adc
js
cld
ds
adc
out
out
jmp
arpl
jae
inc
div
fiadds
arpl
das
add
sbb
jg
or
add
fisttpll
adc
leave
fstpt
test
jecxz
fidivl
rorl
je
and
mov
fildl
call
adc
jo
add
mov
sti
lcall
add
aam
or
decl
sbb
mov
cli
push
orl
std
xorl
sbb
clc
mov
or
jmp
mov
add
mov
cli
test
xorb
jo
sti
mov
push
scas
mov
add
or
dec
fldl
add
or
test
inc
add
jp
jb
test
cmp
sti
jg
nop
sub
add
mov
cmp
add
add
cmp
icebp
jp
fiadds
jae
or
jmp
je
lret
pusha
and
add
cmp
test
add
cmpsl
and
pop
shr
fs
push
add
js
and
xlat
xor
add
lahf
add
mov
sbbb
loopne
repnz
jge
mov
cld
lock
add
fnstsw
pop
hlt
and
push
out
fs
lods
add
add
dec
jl
mov
cmpsl
aas
fs
loope
push
add
sahf
loope
in
dec
xor
lcall
loope
mov
mov
ret
inc
out
fcoml
add
mov
shll
mov
jo
cmpsl
cs
ret
clc
fdivl
sbbb
or
adc
testb
int
test
sar
xchg
and
pop
sbb
paddq
push
arpl
mov
and
jo
mov
pop
out
inc
push
mov
mov
loope
call
pusha
and
xlat
jmp
jl
pop
data16
push
inc
add
xchg
aas
and
xchg
repz
fs
jmp
jl
sbb
push
sub
xlat
add
cmpsb
push
fiadds
cltd
xlat
mov
mov
add
xchg
int
jmp
xchg
inc
pop
lods
pop
or
loope
adc
pshufw
push
cmc
js
pop
sub
inc
popl
xchg
jnp
push
dec
movsl
pushl
inc
adc
or
pushl
inc
adc
sbb
inc
sbb
fnsave
or
je
mov
add
push
rorl
mov
addb
hlt
cmpb
cmc
divb
mov
in
repz
jmp
call
sub
xor
pop
jg
or
adcl
or
lods
repnz
inc
pop
hlt
into
cmc
sub
jo
jge
jb
test
ljmp
in
inc
add
movsb
adc
mov
addb
jmp
xchg
testb
push
addr16
out
jmp
clc
repnz
and
scas
add
aaa
mov
sbb
or
jge
repnz
imul
inc
adc
add
or
jbe
test
jae
sub
filds
mov
outsb
xchg
and
popf
push
lret
add
pop
sarl
pop
or
pop
mov
jnp
lock
sti
push
sbb
jnp
je
jle
adc
xor
sbb
mov
cmp
cld
mov
dec
sahf
adc
xor
repnz
popa
xchg
or
cld
cmpsb
and
mov
or
add
arpl
dec
xchg
fdivr
xchg
fcoml
xchg
fdivrl
xchg
fcoml
or
mov
xchg
xchg
fistpl
mov
enter
fcomp
xchg
mov
fistpl
enter
enter
sbb
add
mov
add
cwtl
filds
mov
fists
mov
pop
fists
mov
push
mov
push
mov
add
sti
mov
sbb
mov
sbb
mov
mov
mov
movsl
sti
mov
mov
xor
leave
jmp
add
jmp
add
sti
xor
or
in
xor
aas
in
add
xor
cltd
in
xor
loopne
xor
mov
xor
mov
xor
or
xor
jecxz
xor
sbb
xor
inc
add
mov
add
sub
mov
imul
add
loop
add
jecxz
add
jecxz
add
cmc
mov
std
add
sub
insb
sub
pop
sub
pop
sub
pop
sub
push
sub
pop
sub
pop
test
add
test
add
test
add
fidivl
sldt
push
sub
fs
or
data16
push
mov
stos
sub
jmp
jo
pop
sub
ret
jnp
cmpsl
ret
iret
fadds
add
jmp
cmp
lock
mov
fisubrl
test
mov
mov
push
jmp
pop
pop
jge
pop
test
adc
insb
int3
rorb
lsl
iret
push
jmp
cld
pop
cmp
shrb
jecxz
or
ja
test
pop
mov
and
inc
fnstsw
roll
jo
jecxz
je
jno
xchg
lret
sub
andb
cwtl
add
repz
imul
mov
stc
jl
mov
sbb
jl
add
push
add
stc
sbb
fstps
jg
sub
jl
out
push
loop
push
aam
in
jmp
push
test
cwtl
add
aam
sti
wbinvd
fsubrs
jle
clc
add
fadds
jne
jecxz
in
lock
add
lahf
xor
mov
mov
dec
sub
push
jo
ljmp
enter
mov
out
jg
in
jmp
rcll
add
push
insb
or
mov
jl
jo
ljmp
ja
aam
movsb
dec
std
test
push
inc
jo
mov
mov
cltd
in
mov
hlt
adc
inc
xchg
mov
and
add
pushl
hlt
jg
fldt
lock
jb
jb
icebp
mov
cltd
call
or
insb
pusha
arpl
sbb
cmp
jmp
pop
scas
idivb
mov
sub
sti
and
dec
inc
sub
xchg
mov
sbb
loop
mov
mov
jne
jecxz
pop
sub
push
lods
or
mov
addr16
jb
mov
daa
sbb
mov
jl
pop
jecxz
jmp
add
stos
xchg
insl
in
add
pop
stc
inc
jne
in
test
inc
add
cld
inc
jb
data16
shr
sbb
fildl
stos
ja
push
bound
cmc
int3
lock
dec
aas
dec
push
mov
jmp
add
dec
int
stc
mov
jae
sti
fsubl
pop
icebp
push
mov
or
mov
adc
mov
lea
cli
xor
lea
mov
mov
icebp
nop
fwait
add
mov
jl
adc
ljmp
cmp
and
xlat
je
imul
rcrb
cs
sti
incl
cltd
ret
jne
sti
decl
pop
cld
lcall
js
aaa
jecxz
cld
cmp
test
mov
test
cmp
test
cmp
mov
add
dec
faddl
lcall
int
lret
pop
movl
xchg
cli
push
dec
pop
pushf
add
jo
jle
jge
push
std
xor
inc
adc
dec
adc
std
iret
jbe
or
nop
loope
mov
sbb
imul
loope
mov
pusha
jge
add
inc
push
sbb
out
mov
jle
or
out
aaa
call
in
mov
test
std
mov
or
call
lcall
add
mov
in
jo
jmp
add
sub
jo
adc
jo
jmp
push
test
outsb
sub
fucomi
add
repz
jo
xor
cmpsb
cli
ret
push
push
mov
popf
mov
mov
mov
filds
iret
fists
roll
mov
mov
add
xchg
and
add
sub
fldt
jl
sub
cmpsb
mov
fiadds
mov
xchg
out
jo
add
adc
sti
adc
and
lods
jecxz
mov
mov
mov
xor
sbb
cwtl
mov
loope
hlt
cmp
out
into
pop
shll
mov
rcll
scas
mov
jo
cmp
jmp
pusha
xor
mov
push
pop
jge
pop
lds
push
pop
test
push
push
push
int
pop
out
cmp
negb
mov
dec
cwtl
pop
jmp
jmp
hlt
mov
in
jecxz
stos
sbb
sbbl
push
cld
mov
cld
incl
add
jnp
fadds
mov
in
cmp
adc
inc
enter
lock
xchg
xchg
aas
lock
scas
cmp
push
std
mov
movl
lcall
adc
pop
daa
mov
icebp
imul
in
add
loop
out
ficomps
fbld
and
mov
mov
mov
clc
cli
ds
popf
cwtl
cmp
push
jmp
sub
jo
mov
outsl
fisttpll
out
add
jo
arpl
jo
push
cmp
stc
xchg
lock
inc
clc
enter
jo
mov
hlt
sti
sub
stos
je
cld
and
sub
in
pop
mov
inc
lock
loopne
mov
push
fmull
fstpt
xor
add
sub
movsw
fucomip
sub
insb
fucomi
fdivrl
mov
out
cmp
lods
xlat
clc
jns
fdivl
jmp
ds
fmull
hlt
jbe
fstpt
pop
aam
and
fidivl
jmp
mov
sbb
fucomip
add
sbb
cmc
and
fsubr
add
sbb
add
mov
scas
add
pop
test
inc
pop
test
mov
push
xchg
aaa
inc
shlb
call
sbb
ret
bound
pusha
pushf
filds
out
mov
lahf
filds
fdiv
mov
clc
jl
stos
scas
call
aas
faddl
sarl
sbb
mov
pop
push
and
bound
xchg
ds
push
lods
insl
das
insb
mov
sub
xor
xchg
icebp
lods
dec
call
rorb
testb
mov
faddl
add
sbb
add
xor
or
adc
push
push
test
shlb
add
mov
pop
lcall
push
sahf
adc
ror
cltd
pop
idivb
data16
dec
cltd
add
inc
in
sbb
cmp
faddl
lret
xlat
dec
jne
mov
pop
fcmove
mov
cmp
push
fyl2xp1
out
ss
pop
sub
incl
jo
imulb
test
and
notl
mov
test
je
les
mov
shll
dec
push
cmp
lahf
sbb
lea
xor
enter
xlat
xchg
jl
test
and
or
mov
jnp
das
adc
fwait
add
shlb
ret
jge
and
jge
and
fldt
je
xor
cmp
sbb
cld
daa
pop
mov
lahf
sbb
add
sub
jo
mov
add
fbld
dec
mov
cs
xor
pop
je
mov
push
jecxz
adc
sbb
xor
sbb
jmp
fucompp
add
jne
add
out
mov
pop
push
repz
fists
inc
je
mov
enter
lods
pop
stos
pop
in
dec
ljmp
stos
add
dec
out
cmp
jo
jne
cmp
out
adcb
jb
clc
jo
idivl
sbb
js
bound
inc
ljmp
or
mov
jg
js
sarl
cwtl
cld
push
scas
aaa
movsb
and
mov
push
idiv
insl
mov
pop
bound
filds
ljmp
mov
into
mov
push
mul
sti
sub
bound
cli
cwtl
hlt
add
fwait
clc
cmp
add
sub
add
sub
push
sub
pop
pop
cmpsl
es
bound
cld
int3
sbb
fists
mov
add
repnz
jl
insl
fildl
push
popa
hlt
mov
movsb
or
jge
std
jmp
add
std
inc
or
xor
mov
mov
add
fidivs
add
cld
mov
popa
mov
push
repz
push
jns
dec
add
add
push
jo
add
lods
push
nop
ds
mov
repz
inc
push
cmc
mov
add
or
jno
mov
cld
mov
int3
sub
out
rcl
cld
jmp
mov
mov
negb
adc
dec
cs
gs
aas
jo
rorb
add
jmp
jns
or
sbb
jno
cmpl
mov
pop
dec
fucomi
xchg
insb
inc
mov
repz
jo
scas
pop
repz
sub
loope
lods
add
ret
fs
stos
jg
imul
hlt
add
xlat
je
je
sbb
bound
cmpsb
pop
ss
bound
sub
and
mov
and
cltd
xor
mov
pshufw
pusha
pusha
xchg
pop
sti
sahf
int
inc
repnz
push
xchg
fs
inc
roll
clc
insl
or
xchg
idiv
out
xor
mov
rcrl
fnstsw
int3
data16
lock
and
icebp
fwait
and
mov
fstpt
jo
inc
sahf
jne
mov
mov
sub
or
filds
hlt
ja
mov
push
gs
data16
je
xchg
loopne
in
sbb
ljmp
inc
loope
add
jmp
sbb
add
fimull
ret
cmp
fdivr
into
stos
rcll
mov
pop
call
push
loope
mov
mov
xor
jo
add
mov
std
mov
cltd
add
call
jae
xchg
lods
xchg
lods
std
adc
lret
test
and
jl
mov
add
jb
jmp
inc
test
pop
add
ret
xor
ja
add
mov
iret
adc
add
mov
hlt
inc
repz
or
fcomi
cmp
pop
cmp
jmp
fdivp
inc
push
or
scas
sub
shlb
outsb
loopne
push
movsb
in
xor
mov
testb
mov
mov
adc
xchg
lds
shlb
cmp
sub
aam
ljmp
add
lahf
pusha
lds
ficoml
loopne
pop
mov
rcl
arpl
jle
incl
leave
mov
pop
sub
lods
aaa
lock
dec
xchg
mov
ja
adc
fwait
pop
iret
jle
jmp
pop
pop
outsb
out
lcall
sbb
jg
out
xchg
out
jp
repnz
sarb
push
xchg
leave
test
jle
jecxz
rcrb
pop
leave
bswap
rcl
das
inc
add
cmp
add
insl
shr
mov
sub
sti
gs
sub
testb
daa
rolb
out
mov
fisttpl
into
scas
out
sti
sub
stc
jns
add
inc
js
add
cmpsl
leave
insb
pushl
pop
test
daa
leave
push
movsl
push
popa
inc
jge
jno
outsb
daa
and
lea
sti
push
ss
sti
test
or
pop
pop
inc
sbb
adc
add
xchg
das
push
push
aaa
out
inc
add
cmpsl
std
adc
dec
int3
xor
fiaddl
jne
adc
inc
sbb
sarb
inc
add
cwtl
add
pop
push
psubb
cmc
sti
inc
mov
push
mov
std
call
test
cld
adc
lret
notl
add
jae
data16
das
cltd
add
add
pop
adc
xor
push
std
cmp
jle
pop
lods
add
inc
cmpsl
add
data16
xchg
mov
out
mov
imulb
std
mov
add
and
xchg
cmpl
bnd
imul
inc
dec
ror
rclb
jns
sub
add
mov
push
sub
add
std
add
cmc
aas
jo
jmp
pop
ret
fs
or
lock
add
pop
faddl
xchg
pop
ret
and
rcrb
pop
stos
out
cmpsl
pop
movsb
idivb
in
ss
xchg
leave
xorb
addl
sbb
jle
rcrb
inc
pop
pop
cmpsb
lcall
fucom
gs
xchg
sub
mov
sbb
sub
testb
sub
mov
repz
jo
mov
pop
pop
sbb
nop
sbb
ret
pop
jne
xor
mov
iret
pop
mov
or
inc
or
pop
push
jmp
xchg
jne
dec
mov
cmpsb
mov
or
mov
arpl
fisttpll
pop
xchg
fsubl
shl
jg
add
addb
push
bound
mov
add
sub
arpl
fisttpll
xchg
dec
fsubl
mov
jg
js
pop
test
bound
test
lea
xlat
aaa
jl
adc
inc
call
stos
jg
fsubrp
or
dec
mov
or
cmp
icebp
push
in
inc
incl
ds
sbb
dec
xchg
lock
xor
xchg
or
push
cmp
adc
popa
in
addl
pusha
rclb
pusha
hlt
incl
cld
jne
push
insb
or
filds
mov
adc
adc
lahf
sar
push
stos
call
pop
jo
ret
xor
roll
add
xor
jo
dec
insl
repz
xor
push
pop
push
outsl
dec
rcrb
jne
jge
cld
pop
ljmp
cmp
out
xor
cmp
mov
repnz
es
xchg
repnz
add
mov
dec
jmp
cld
imul
data16
jle
outsl
and
call
mov
lock
jnp
das
insb
mov
insl
push
in
repz
push
and
jge
cltd
enter
sti
lahf
push
and
imul
in
pop
jo
fwait
sti
pop
shll
leave
sbb
xor
jae
pushf
jl
pop
push
int3
add
testb
inc
repz
xchg
out
inc
fs
stos
dec
add
and
in
ljmp
jmp
cs
add
pop
push
mov
jg
nop
mov
je
push
repz
les
call
sti
aad
mov
sti
fistpl
mov
sbb
ret
pop
shll
lods
fwait
add
shll
jmp
sub
adc
push
dec
fstpl
jmp
pop
sbbb
leave
adc
xor
sti
push
push
call
outsl
sbb
mov
push
mov
lcall
movups
lcall
sbb
jnp
add
push
outsl
xor
into
std
jne
sbbl
and
sbb
cld
jne
sbb
adc
sub
push
mov
data16
pop
or
add
and
fldl
leave
fnstcw
xchg
gs
cltd
flds
test
flds
add
sub
mov
ja
ret
or
repnz
repz
call
cld
stc
mov
jnp
jo
call
jns
push
ret
xor
insb
push
and
test
pop
iret
add
mov
jbe
fs
xor
lods
ret
in
test
inc
inc
add
int
pushl
ret
add
in
mov
inc
sti
ja
cli
cmpsl
cmc
or
jl
filds
outsb
pop
into
jb
rolb
jo
push
incb
into
je
insb
jg
out
lds
jmp
dec
in
add
jmp
inc
jo
stos
dec
xorb
daa
in
add
in
inc
bound
dec
out
arpl
test
aas
pushf
andb
fistl
aam
les
mov
xchg
mov
mov
sub
dec
je
out
or
mov
adc
out
fnsave
imulb
je
fldcw
push
or
insb
and
gs
scas
mov
add
xor
fcomi
in
loop
jmp
dec
nop
inc
jmp
mov
test
add
mov
call
mov
rcrl
xchg
add
xchg
loopne
adc
mov
mov
sarb
aas
and
arpl
mov
iret
std
sbb
or
call
fstps
testb
dec
mov
xchg
xchg
pop
xchg
xchg
mov
add
fadds
add
scas
movsb
or
push
sbb
and
call
adcl
ret
dec
mov
sub
pop
pop
int3
push
push
xchg
add
inc
xchg
or
fs
inc
mov
loopne
std
jge
sbb
jne
or
xor
test
repz
lcall
jp
clc
in
mov
retw
lea
pusha
sbb
pusha
jo
mov
dec
jb
add
inc
in
repz
adc
jae
sbb
pusha
cmp
cmc
lret
test
hlt
ret
jns
jl
xor
subl
dec
jg
mov
mov
rcrb
add
jo
out
int3
cbtw
mulb
push
movsl
mov
daa
xlat
out
pop
fistpll
add
shll
int
dec
mov
mov
jecxz
jecxz
sbb
ss
mov
sahf
add
out
fsub
push
pop
loope
add
add
insb
lea
fucompp
add
lea
sbb
sbb
push
imul
gs
lods
insb
test
add
mov
cltd
adc
adc
lods
mov
pop
add
call
add
ficoms
out
dec
popf
adc
shl
xor
and
pop
inc
in
in
pushf
or
mov
or
xchg
or
rclb
data16
sub
cmc
hlt
filds
aaa
divl
loopne
xor
mov
mov
sti
sahf
in
fists
dec
jbe
mov
fildl
adc
pop
xor
xor
sti
sbb
lret
add
pop
shl
sbb
nop
pop
clc
add
movsl
or
sbb
mov
xor
bound
leave
push
aam
in
push
in
mov
std
fsubrl
in
add
add
cmpsb
push
dec
mov
dec
int3
push
dec
call
or
outsl
add
fadd
ret
cmp
lret
shll
push
cmpl
adc
push
shrb
sub
add
xchg
cld
push
icebp
frstor
dec
push
hlt
mov
lcall
cs
mov
push
aas
adc
test
xlat
movsb
push
std
xorl
jb
sbb
mov
verw
movsl
cmp
pop
xchg
in
inc
jns
push
or
lds
clc
dec
hlt
sub
cwtl
push
stos
std
cmpsl
push
sbb
sti
adc
incl
sub
inc
add
sti
lahf
mov
ret
mov
mov
popf
pop
pop
sub
or
popf
jns
dec
rol
pop
add
lock
inc
pop
mul
mov
and
fsubrl
jno
mov
sub
jge
clc
repz
and
fmul
sbb
mov
mov
add
stos
insl
pop
daa
out
idivb
mov
test
faddl
cmp
add
lods
fsubr
xchg
pop
mov
ss
push
sub
pushf
sti
fldl2t
add
pop
roll
stos
cmp
fcoml
push
mov
or
mov
mov
cld
outsl
cmp
mov
pushf
push
inc
in
into
mov
jo
xchg
into
mov
pop
xchg
cmp
in
mov
ljmp
inc
xor
mov
xchg
mov
mov
rcl
xlat
add
call
or
ret
sbb
and
adc
cmp
xor
sub
fdivr
xchg
daa
bound
lock
pop
xor
inc
popa
ret
ret
loopne
add
test
adc
cmp
adc
adc
data16
and
jl
push
add
and
mov
dec
sar
jb
addl
or
xor
pop
pop
int
leave
ficoms
adc
ljmp
fisubl
fiadds
enter
test
cld
call
addr16
rorb
cmp
out
addl
fiadds
jmp
imul
xchg
xchg
shl
xchg
xor
jo
gs
push
lock
loope
mov
fldt
add
mov
leave
outsb
dec
dec
cmp
rclb
into
or
imul
mov
sbbb
in
or
xorb
adcb
add
xor
mov
jmp
fdivr
xor
cld
cmp
test
or
das
mov
adc
adc
push
mov
add
fldt
jmp
call
test
mov
sahf
add
mov
stc
push
push
sub
mov
add
es
mov
add
push
dec
ret
scas
jno
sub
movmskps
mov
int3
sub
into
adc
jmp
mov
xchg
dec
xchg
add
or
jo
pop
inc
cwtl
or
mov
mov
dec
jg
call
jmp
mov
push
sub
and
or
gs
bound
mov
sbb
sbb
xchg
or
xor
fmuls
add
pop
ljmp
hlt
and
or
fs
bound
mov
mov
clc
in
push
push
xchg
push
ss
idivb
rcrb
call
bound
sub
ret
loopne
aam
idiv
push
bound
xor
sub
add
outsb
adc
adc
sti
call
xchg
cld
test
push
cmp
xor
fiaddl
push
and
incl
xchg
std
decl
outsl
sbb
fimuls
sub
xchg
cld
push
xchg
add
add
xchg
jne
pop
cmp
add
mov
test
test
in
push
mov
push
hlt
mov
hlt
pop
clc
push
add
fnstsw
pop
lock
data16
jo
adc
xlat
fwait
mov
rorb
or
add
push
scas
inc
mov
cmp
das
fmulp
xorl
jae
in
call
mov
mov
xor
ret
jae
mov
fcompl
xchg
cmpsb
add
test
mov
lret
pop
inc
pusha
sub
loop
fucomi
push
dec
sub
mov
sahf
adc
jo
or
aaa
push
mov
mov
dec
xchg
bound
inc
jo
sub
or
int3
stos
add
dec
ds
in
ljmp
aam
mov
xor
outsb
inc
cwtl
adc
mov
xchg
aam
mov
jmp
mov
ja
imul
rcrb
pop
stc
lea
mov
lock
pusha
pusha
inc
out
sub
aam
in
inc
jmp
xor
or
repz
xlat
call
and
dec
loope
jg
jp
jae
or
dec
jecxz
lods
arpl
imul
xlat
lea
negl
mov
push
in
inc
jmp
mov
jg
dec
fisubs
jmp
mov
push
inc
loope
jmp
lea
idiv
add
xchg
ds
pop
xchg
das
pop
jne
xchg
into
push
mov
jne
xchg
into
incb
pop
pop
loopne
pop
add
ljmp
adc
push
inc
hlt
lret
arpl
pop
mov
sti
push
hlt
pop
mov
lret
fistl
fbstp
outsl
mov
decl
add
cmpb
int3
cmpsl
ljmp
mov
scas
cld
inc
xchg
fidivrl
jle
cmp
cltd
aaa
or
stc
or
add
call
xchg
pop
dec
rol
mov
sbbl
pop
add
fidivrl
je
jmp
pusha
lret
xor
jge
out
ret
repnz
dec
in
aad
insb
lcall
xor
bound
sub
ficoml
sbb
flds
xlat
inc
sub
push
ret
jae
jo
pop
mov
enter
fwait
into
cmp
add
mov
sbb
xchg
pop
movsl
ljmp
ret
aam
pop
inc
push
lahf
jno
cli
subb
add
mov
data16
jnp
cld
mov
dec
fisubrl
add
push
fisubrs
out
sbb
sub
push
cli
sub
sbb
je
xor
stc
mov
add
add
jle
jb
xchg
jmp
sbb
addr16
add
sub
cld
aam
jmp
or
aas
fistpll
and
add
sti
mov
jmp
lret
push
iret
call
pusha
add
inc
adc
call
dec
adc
xchg
ret
cmp
das
dec
and
fistl
outsb
or
cwtl
out
int3
xchg
daa
add
jae
add
fstpt
std
xlat
mov
and
jne
outsl
jb
xchg
push
jbe
cld
jne
outsl
int3
xchg
rcll
pop
es
fisubrl
mov
fildl
inc
and
jmp
test
pop
xor
mov
xchg
sub
incb
cld
test
push
and
testb
jne
mov
icebp
ljmp
arpl
mov
xlat
cmpsl
xchg
out
or
jmp
enter
scas
cmc
xor
add
mov
mov
decl
mov
pop
mov
rorb
stc
mov
hlt
cmpl
mov
daa
jmp
mov
roll
fs
stos
adc
ja
mov
test
add
jle
js
mov
and
out
rcrb
popa
mov
add
jo
out
mov
push
enter
lods
shl
out
sub
insl
into
mov
sbb
mov
sub
jo
movsl
out
adc
cld
loopne
jo
push
sub
je
xchg
mov
jae
sbb
dec
pop
lds
stc
mov
inc
insb
pop
push
cld
add
bound
add
fisubs
xchg
inc
add
pop
fstps
or
ljmp
xor
add
and
sbb
divl
inc
or
jmp
push
jecxz
sub
mov
jmp
es
scas
sbb
idivl
cltd
push
pusha
inc
lds
mov
add
pop
dec
adc
dec
add
sti
insl
sub
inc
add
insb
fildl
scas
and
cmc
jae
push
insb
test
and
clc
mov
jg
and
push
inc
and
jo
mov
jne
cmp
mov
fbld
push
push
testl
ret
js
jo
movsl
push
inc
and
jle
add
ss
je
xchg
jle
and
pop
lds
in
cld
je
jecxz
pop
and
lea
xlat
std
decl
xor
or
jmp
psubsb
test
decl
mov
pop
js
cmpsl
add
adc
pusha
jle
test
incl
lock
jmp
push
xchg
ja
aam
xor
stc
xchg
jbe
lods
cmp
aam
fidivl
dec
ja
mov
lahf
mov
clc
jb
adc
cmp
jg
cld
mov
mov
inc
or
repz
jo
cmp
stc
push
popa
cmpb
notb
std
out
dec
rcr
inc
rclb
pop
mov
stos
or
cmp
lret
cld
mov
outsb
add
leave
fs
push
lods
pop
push
adc
jmp
stos
int3
mov
cltd
leave
iret
add
mov
popf
lods
leave
retw
mov
and
js
lret
test
push
jge
lea
xor
data16
sbb
scas
push
and
call
out
add
mov
cmp
add
dec
icebp
shrl
cmp
lret
test
jae
jne
jl
jmp
jbe
sbb
jne
inc
xor
push
inc
movsb
sar
out
frstors
push
inc
insl
and
adc
push
aam
movsb
dec
lds
sbb
add
jo
mov
jl
xlat
mov
add
add
mov
fiadds
dec
int
outsb
or
add
rorb
push
add
sbb
or
xlat
add
lea
add
xchg
and
add
gs
fiadds
pop
add
imul
jae
jl
sbb
orl
cld
inc
popa
inc
aas
clc
sbb
arpl
and
jmp
test
fldl
add
xorb
add
xor
je
shlb
push
daa
inc
or
jge
std
test
inc
jo
mov
subb
jbe
cmp
or
fildll
imul
incl
lret
jmp
xlat
and
mov
mov
lds
dec
sbb
clc
sub
push
imul
addr16
xor
test
sarb
out
ljmp
xor
decl
xchg
fildll
iret
fsubr
add
ret
or
add
push
jb
repnz
mov
jb
imul
jmp
push
mov
data16
sbb
sub
aaa
mov
lahf
ffree
iret
add
out
sbbl
ljmp
mov
mov
repnz
jmp
fwait
into
in
jmp
cmpsl
jle
icebp
jp
mov
mov
scas
push
inc
jns
add
add
arpl
xor
pop
mov
test
add
stos
pop
mov
pop
into
sbb
fdivs
ror
dec
pop
pusha
mov
lea
sti
jle
ret
push
xor
bound
push
dec
sub
int3
jecxz
push
pop
ret
adc
aam
push
out
push
in
add
mov
lds
pop
or
sti
jmp
mov
sti
push
or
or
add
add
lcall
mov
mov
or
incl
inc
pop
pop
jge
dec
testb
scas
xlat
add
push
jle
jbe
xchg
decl
pop
adc
cltd
cld
std
add
add
test
repz
xchg
xor
push
add
dec
fistpll
jne
jge
fdivs
push
cmp
add
inc
inc
mov
add
test
or
mov
adcl
add
mov
movsl
cld
in
icebp
xor
sti
inc
hlt
lds
dec
hlt
cld
fnstsw
pop
mov
testb
lcall
lods
pusha
js
sub
in
jmp
cwtl
xorb
hlt
mov
inc
movsl
jb
loopne
fld
out
jns
and
cmp
jmp
mov
push
sbb
ljmp
fs
xchg
cmp
shr
mov
add
pop
sub
add
push
cmpsl
insb
ret
inc
mov
mov
ss
loop
dec
dec
fisubrl
dec
lret
cwtl
ret
dec
xchg
adc
add
xchg
cmpsl
or
sub
lock
xchg
jecxz
cmp
pop
out
imulb
push
into
call
fucomi
add
mov
inc
jo
cmpsl
mov
outsb
pushf
repnz
sub
insl
mov
sub
xor
test
mov
xchg
jne
add
cmpl
insb
xor
into
stc
pop
inc
or
sarb
je
call
sar
notb
sti
fidivl
pop
pop
aaa
js
rolb
loopne
jmp
ja
mov
js
and
call
add
faddl
add
movsl
add
xchg
or
cmpsl
cmpb
cltd
jecxz
mov
fmuls
add
adc
cmpsb
sarl
fisubrs
inc
insl
mov
dec
insl
mov
ret
sti
decl
sti
push
icebp
pop
notrack
push
mov
fnstcw
and
pop
ja
mov
and
ret
push
mov
inc
jg
pop
xor
mov
shl
mov
mov
and
mov
incb
jmp
add
mov
inc
cmp
mov
mov
push
std
lods
repz
mov
xorl
add
lods
fdiv
scas
sbb
adc
aaa
popf
clc
jecxz
outsb
mov
sbb
cld
add
dec
dec
add
insb
aad
cmp
cwtl
push
insl
lcall
popf
xor
xor
and
mov
lcall
mov
stos
mov
mov
sub
jle
sbb
pop
mov
add
pop
mov
dec
add
cmp
add
sub
jmp
fcmovnbe
or
mov
stc
sbb
mov
mov
aaa
aaa
std
out
repnz
pop
jmp
in
mov
enter
idivb
inc
push
insb
mov
pop
fistpll
mov
fistpl
xor
dec
xor
mov
mov
pop
aad
add
xchg
pop
sub
push
bound
ds
jmp
jle
addr16
lret
stos
jp
push
clc
shll
mov
insb
add
out
add
jae
mov
in
sti
xchg
mov
sbb
push
mov
add
and
cwtl
add
or
mov
imul
imul
inc
jge
lcall
mov
lcall
imul
mov
lcall
mov
lcall
push
hlt
out
jnp
pop
flds
add
ljmp
sbb
pop
jg
jne
pop
push
cld
cmp
add
push
jnp
jle
pop
cld
mov
jo
test
in
dec
popf
xchg
mov
inc
jae
push
sahf
jb
xor
andl
push
cwtl
outsb
pushl
inc
cld
mov
stos
decb
hlt
popf
cld
call
out
ss
orl
sub
mov
std
aas
add
pop
mov
adc
add
test
std
jmp
cld
add
stos
pushl
cmp
mov
xorl
lret
mov
jmp
scas
jecxz
jmp
xor
pop
repz
inc
repnz
push
addr16
inc
popf
movsb
hlt
movsb
mov
mov
out
inc
sahf
or
jbe
mov
call
repz
mov
sbb
jns
adc
fwait
xor
xor
push
push
gs
mov
aaa
stos
pusha
loop
xchg
gs
add
in
or
scas
mov
mov
jae
dec
pop
cmpsl
xchg
lea
mov
in
push
or
out
sbb
mov
pop
cmp
add
jae
lret
jb
jmp
mov
lea
or
cld
ja
inc
jmp
call
lock
idivl
jg
push
ss
call
pop
adc
sub
add
jmp
xchg
in
rolb
outsb
add
out
add
faddl
jmp
cmp
push
pop
mov
cli
ret
ret
add
popf
mov
lods
call
cmpl
add
and
or
pusha
ljmp
pop
call
mov
popa
idiv
xchg
mov
decl
outsl
and
lcall
jnp
cld
mov
push
cld
test
adc
or
mov
in
call
ret
mov
hlt
dec
sbb
inc
lds
sub
sbb
cmp
and
dec
aad
xlat
cmp
cmc
cmp
cwtl
xor
mov
cmpsl
xchg
mov
lcall
in
inc
push
cmp
out
push
imul
or
cmp
and
ret
cwtl
jae
xchg
mov
pop
js
cld
aas
fsubl
jmp
shll
sub
mov
aas
dec
out
cmp
rclb
fistl
lock
fnsave
push
andb
mov
xor
sbb
add
mov
jecxz
mov
xchg
stc
mov
stc
stos
or
fidivrl
fucomi
add
das
push
loopne
gs
cwtl
test
lea
ret
lret
outsl
mov
ret
je
or
jo
outsb
shlb
add
out
sbb
add
adc
rorl
pop
loop
cmpsl
fs
outsb
sbb
mov
jmp
xchg
jae
inc
int
es
cld
pop
repnz
jecxz
addr16
add
bound
popa
xor
sqrtps
ja
pop
hlt
xor
test
fildl
imul
inc
or
sti
mov
jb
pop
repnz
gs
addr16
ret
movsb
add
filds
push
rcrl
adc
mov
and
fnstenv
int3
and
xor
adc
push
jbe
sbb
test
inc
mov
call
push
dec
jle
add
test
push
jmp
add
hlt
and
and
ja
mov
je
adc
jecxz
push
dec
cld
push
xor
mov
in
lcall
repz
decl
sbb
jo
pop
jmp
and
add
hlt
frstor
lea
adc
jmp
sar
dec
push
add
in
std
loopne
mov
dec
mov
mov
xlat
roll
aad
xchg
cld
jmp
cmp
xchg
jae
mov
push
jno
ljmp
adc
inc
sbb
ret
jg
jmp
fistpll
outsb
pop
mov
push
jmp
fisttpl
adc
fucomi
jg
loop
mov
je
inc
pop
mov
aas
xadd
bound
jl
cmpsl
add
aas
add
sbb
xor
gs
jg
fsubr
add
mov
sti
les
fisubrs
inc
push
subb
loop
jb
mov
ficompl
add
sub
sub
push
push
push
add
fildl
jmp
lcall
stc
cltd
inc
push
add
fs
xlat
jb
nop
divb
and
in
jecxz
callw
call
insl
xor
xor
inc
jmp
fucomi
inc
ret
scas
sti
bound
xor
call
fistl
add
mov
add
lds
ljmp
mov
sub
jge
cli
add
or
add
mov
add
or
incl
and
xor
pop
mov
xchg
call
cld
xor
adcb
fisttpll
jne
push
xorl
push
repz
xchg
call
dec
xor
mov
sbb
mov
pop
adc
and
call
bound
jge
mov
xor
stc
push
not
clc
push
pop
dec
dec
or
pushf
outsb
adc
clc
push
push
rorl
push
ret
call
cld
ljmp
cld
daa
sub
pop
test
cmp
andb
xor
frstor
addb
xchg
aad
ret
xor
add
add
lea
inc
sbb
and
jo
and
jo
mov
out
mov
pushf
mov
out
into
nop
mov
dec
dec
mov
pop
test
jb
pop
adc
cmpsb
out
cld
inc
mov
jb
pop
imul
mov
push
xchg
xchg
xchg
fs
fwait
pop
dec
add
or
pop
push
xchg
adc
add
scas
sbb
loop
shrb
jl
jl
clc
sbb
nop
ret
inc
mov
cltd
sbb
and
ficoml
and
mov
ret
nop
lods
popa
cmpsb
sub
lcall
or
in
jo
cmp
pusha
fs
fsubrs
jmp
nop
bound
flds
and
mov
scas
sti
jmp
pushl
or
mov
sbb
pop
test
inc
loopne
cld
aam
leave
inc
jmp
out
pop
hlt
and
scas
push
adc
pop
sti
push
out
insl
je
into
pop
hlt
add
scas
push
adc
fs
imul
insl
je
add
or
xlat
push
insb
jmp
sbb
sti
jae
pusha
test
aam
mov
fwait
xchg
mov
test
in
shll
fistl
dec
loopne
aas
pop
imul
sub
add
mov
je
xchg
ds
xchg
add
xor
add
mov
mov
fldenv
fsubl
jecxz
add
add
push
push
fstpt
imul
jne
jle
cmp
cld
push
xchg
and
or
pop
pop
ds
sbb
xlat
push
push
push
insb
js
add
cwtl
call
push
cmpsl
dec
fimuls
mov
cmc
imul
das
std
pop
repnz
jo
les
cmpsl
popl
push
jmp
mul
fisubl
mov
daa
je
shll
mov
cmovl
jmp
mov
fdivrl
repz
pushl
xor
xchg
xor
das
ret
insb
ret
or
mov
push
cmpsb
in
inc
fcom
ret
rcll
gs
pushf
mov
icebp
xor
stos
inc
movsb
decb
inc
jo
popf
outsb
mov
pop
data16
scas
stos
jmp
xorl
inc
add
adc
ljmp
mov
fwait
clc
jmp
inc
pop
push
mov
pop
out
sub
xchg
cmpsl
jle
mov
cltd
sbb
jmp
add
pop
or
fucomi
mov
repz
jo
test
enter
aas
in
cmpsl
adc
insb
mov
test
fildl
xchg
data16
hlt
cmpsl
sti
jb
scas
or
add
test
adc
push
add
cmp
xchg
pop
xchg
call
dec
bound
das
movsb
add
test
jmp
mov
cs
xchg
scas
or
xlat
mov
hlt
or
jecxz
xor
pop
fsubrl
imul
scas
or
stos
sti
jmp
mov
add
sub
sbb
dec
push
incl
mov
adcl
shrb
jae
push
lcall
hlt
fcom
popf
std
rclb
testl
mov
bound
pop
rcll
mov
scas
cwtl
mov
mov
push
jg
cld
ljmp
adc
test
sti
mov
filds
add
les
call
push
dec
xor
inc
mov
jo
xchg
aaa
hlt
cld
imull
dec
fs
out
out
decl
inc
cli
cld
xlat
dec
and
cmp
lret
lds
cmp
pushf
mov
mov
xchg
xchg
or
sub
add
add
addr16
xlat
addb
inc
jmp
repz
mov
jg
sarb
dec
testl
mov
stc
mov
jp
push
test
pop
cmp
lret
jo
loopne
mov
jmp
push
iret
push
imul
push
mov
ja
dec
subl
pop
pop
test
lahf
clc
sbb
mov
insl
aas
movsb
or
ljmp
pop
jp
mov
clc
fnstsw
iret
call
mov
aas
pop
loopne
aas
push
fisubl
inc
aam
pop
inc
loopne
test
add
clc
push
inc
or
xchg
ficoms
inc
sarl
fsubs
sti
jmp
jae
xchg
jae
add
add
je
enter
jb
add
add
jmp
xchg
movsl
sti
jmp
jae
xchg
movsl
test
outsl
rorb
jg
out
add
jae
inc
loope
pop
scas
or
add
in
in
add
jae
shr
sub
imul
imul
in
push
push
mov
add
add
pop
push
bnd
lea
cld
pop
outsl
bnd
ret
push
push
inc
dec
xor
mov
fldcw
push
notb
lods
ja
pop
filds
add
outsb
add
lahf
call
pop
dec
in
mov
or
push
loop
mov
rcrb
fisttpll
pop
testl
lcall
das
test
lods
rolb
inc
or
add
jge
int3
mov
mov
jmp
push
out
mov
cmpb
jmp
mov
into
mov
cmc
ja
mov
aaa
shlb
add
cmpsl
xchg
mov
mov
inc
test
repnz
sub
sub
inc
cmp
cmc
mov
jmp
idiv
xchg
add
movsl
or
insb
ret
jl
push
add
loop
lods
iret
pop
cmp
mov
nop
shrb
push
dec
nop
out
popf
and
out
xor
jo
sub
iret
mov
sbb
fwait
pop
cld
jmp
addr16
jge
insl
inc
lahf
mov
ffree
clc
sbb
in
stos
das
mov
mov
fwait
sbb
add
inc
pop
push
test
mov
add
ja
cmp
xchg
adc
jae
mov
push
or
inc
aad
sub
mov
and
sub
neg
jne
dec
sbb
insb
mov
cmpsb
jne
cmp
jae
out
repz
jg
sbb
std
jmp
mov
jae
jg
jb
add
mov
cld
ljmp
outsl
or
pop
stos
dec
cmp
adc
push
ds
shl
clc
cmp
cmpsl
sbbl
add
fdivrp
jne
pop
push
clc
sti
popf
sti
pop
inc
add
mov
xorl
mov
push
mov
fldenv
inc
sbb
int3
test
leave
fldl
mov
andl
xchg
cld
lea
sbb
lcall
pop
push
hlt
jo
mov
outsl
mov
or
push
add
jo
mov
jno
decl
clc
sub
repz
sar
jmp
pop
xorl
leave
imul
mov
aaa
sti
lock
xchg
fmuls
repz
cmc
mov
sbb
xor
aam
pop
mov
inc
or
jb
pop
cli
out
jg
cs
setg
jl
sub
sub
call
outsb
inc
push
fdivl
cltd
pop
dec
push
mov
mov
push
icebp
cmp
add
sbb
mov
cmpsl
add
add
jmp
add
lods
jnp
mulb
jmp
add
add
in
test
jmp
addl
dec
push
sbb
push
inc
stc
adc
addl
in
adc
jmp
jae
xchg
xchg
mov
es
mov
fildl
push
push
clc
sti
pop
call
push
mov
jmp
movsl
xchg
das
sbb
sub
mov
fildl
mov
add
nop
jo
push
inc
stos
push
dec
pop
call
and
rcll
bound
xor
add
sub
je
mov
push
bound
in
xlat
adc
icebp
jb
add
je
push
add
jl
add
fiaddl
add
add
cld
push
adc
mov
push
push
push
add
int3
push
sbb
pop
ficoml
sahf
add
mov
xor
pop
dec
lea
pop
call
mov
adc
dec
test
fiaddl
push
push
push
xchg
cmp
push
or
add
pop
enter
notb
and
dec
test
push
jnp
pushl
iret
xchg
xor
add
fwait
xorl
xchg
cmp
add
fwait
mov
incl
jo
fwait
xchg
add
cld
aas
jbe
lds
cmp
arpl
and
jno
add
cld
das
cmp
scas
call
dec
add
outsl
dec
add
pushl
pop
jmp
mov
jl
xchg
pop
mov
psllq
mov
inc
mov
add
in
lock
divl
imul
push
pop
fistl
push
mov
popa
sbb
nop
hlt
fucomip
add
push
push
insb
fs
jo
push
or
in
call
imull
sbb
add
push
addl
dec
push
push
pushf
jmp
mov
fucompp
add
mov
mov
add
cwtl
xor
fisttpl
sbb
pop
mov
mov
pop
shlb
lahf
test
clc
xchg
call
insb
xor
push
xchg
repnz
jbe
pop
je
inc
fwait
leave
sub
push
cmp
jae
push
das
aaa
cwtl
add
xchg
sti
fsub
in
inc
jmp
jae
sti
cs
call
xchg
sti
insl
mov
inc
cmc
xor
jmp
add
xor
jmp
jl
rclb
aas
in
ret
xchg
adc
add
push
add
fimuls
ds
test
fiadds
ljmp
aas
decl
pop
psubb
sbb
ret
mov
ljmp
inc
out
add
xchg
mov
lcall
lds
fiadds
hlt
xchg
hlt
adc
fnsave
mulb
mov
lcall
nop
insl
mov
arpl
scas
and
leave
jo
mov
pop
jmp
adc
mov
outsb
xlat
imul
mov
mov
pop
clc
push
inc
jo
inc
or
inc
icebp
push
jmp
sar
xchg
orl
add
mov
or
push
jno
incl
lods
sub
mov
mov
fidivs
jno
add
cld
jo
decb
das
bnd
sbb
adc
addb
lods
cltd
pop
cmp
add
popf
std
push
xlat
popf
xor
mov
cwtl
rorb
repnz
add
cwtl
jmp
mov
cmp
stos
shlb
imul
call
mov
jmp
shlb
adc
dec
pop
add
fistl
scas
fucomi
subb
rclb
outsb
push
jno
inc
in
dec
cltd
mov
jp
out
and
addr16
xchg
pop
sbb
and
andb
outsb
pop
pop
ljmp
paddusb
sub
jns
jecxz
and
jg
pop
sar
xor
or
enter
dec
shll
sti
cmpsb
out
cld
ds
stos
test
push
bound
pop
in
cmc
in
cld
cld
jmp
jnp
fsubs
outsl
add
jae
inc
push
std
sbb
pusha
daa
xchg
sti
insl
lods
or
pop
jecxz
hlt
dec
in
inc
jmp
es
test
jg
jae
xor
jecxz
add
outsl
or
lahf
add
jl
out
push
inc
xlat
jl
sti
dec
test
jmp
iret
ret
inc
ret
add
notl
lods
add
jno
std
call
push
negl
and
or
cmp
push
cmc
fdivs
xchg
mov
sbb
mov
sar
scas
push
mov
jmp
pushf
lea
aad
adc
jo
pop
jmp
xchg
and
jo
xor
test
or
in
loope
movsl
movsb
jmp
push
add
repz
or
mov
ds
int3
mov
inc
jl
test
cmp
and
clc
jo
shl
insl
adc
xorl
dec
xchg
xlat
cmc
push
std
aas
inc
dec
sti
xor
inc
es
xor
insl
aaa
jae
jg
cmp
popf
and
lods
adc
outsl
enter
stos
clc
cwtl
adc
xor
test
inc
hlt
xchg
jno
call
sub
dec
scas
xchg
lret
xor
push
test
jmp
add
addr16
clc
mov
mov
psllq
test
sarb
xor
mov
sub
or
xchg
jmp
xchg
inc
xchg
add
and
add
xchg
add
popf
xchg
sti
jmp
add
jge
lea
xchg
sti
jmp
fs
mov
popa
fwait
dec
jae
add
stc
mov
test
xchg
sti
insb
xor
and
add
loope
lret
shlb
or
rorb
sbb
and
pop
inc
in
call
xchg
sti
push
popl
xchg
int3
add
dec
fstpl
add
sub
dec
filds
fs
out
shlb
std
cld
out
adc
adcl
out
ret
fisttps
cmc
pop
out
stos
mov
fs
ficoms
mov
cld
mov
inc
add
pop
add
fimuls
and
lcall
fiadds
mov
cmpl
add
jmp
mov
hlt
adc
outsb
or
xchg
jl
out
shll
ret
mulb
les
repz
sti
xor
mov
sti
pop
test
out
lret
in
ret
jmp
or
outsl
push
pop
test
out
cmp
in
inc
clc
add
rorb
aaa
ds
add
rorl
xor
cmp
rorb
loop
dec
int
test
adc
out
jg
adc
test
outsl
fadd
into
cs
icebp
add
fistl
fucompp
add
push
push
mov
xor
cmp
xlat
es
es
jg
push
imul
xchg
mov
jmp
mull
ljmp
jo
shrl
lods
fs
popa
sbb
jl
addr16
daa
dec
fucompp
add
cmp
mov
pusha
push
pop
call
daa
in
fucompp
add
push
sub
add
fildl
jmp
je
add
imul
je
jae
mov
xchg
sti
jmp
add
mov
push
push
mov
sti
callw
lea
dec
sti
call
push
insb
add
pop
or
jae
lea
in
sti
jmp
sub
call
dec
out
outsb
adc
sti
jmp
mov
filds
jl
mov
insb
push
add
jp
xchg
push
push
scas
xor
lea
or
adcl
aad
and
fnsave
cld
decl
test
or
incl
jecxz
in
or
cmp
xchg
inc
leave
adc
or
add
sti
decl
jo
jo
mov
std
mov
or
xlat
pop
pop
test
push
cmc
cld
pop
lcall
iret
or
std
daa
decl
iret
cld
pop
pushf
adc
cld
mov
test
jae
test
lcall
cmc
adc
aad
adcl
jo
jl
jo
pop
mov
jno
cmp
or
add
jo
subl
decl
jo
aaa
jb
mov
jae
fldt
xchg
mov
outsl
xchg
cmpl
jne
sub
xchg
jmp
or
lea
daa
pusha
xlat
xlat
arpl
call
enter
mov
jo
push
push
fucomp
add
insl
sub
fucomi
add
mov
add
fadd
out
push
sub
bnd
add
gs
adc
jmp
sub
jo
ljmp
pop
jmp
icebp
pop
and
jae
add
out
dec
jne
cli
push
sub
fisttpl
repnz
outsb
lock
and
jae
add
orl
xchg
je
insl
push
mov
jmp
clc
dec
test
or
mov
sub
jae
mov
pop
flds
jmp
arpl
fidivrs
jp
inc
pop
and
mov
cmp
jmp
bound
and
aam
add
andb
call
add
pop
jg
insl
mov
int
clc
cld
call
push
testb
or
jmp
pop
pop
les
filds
setl
add
arpl
je
out
mov
popa
jg
push
scas
jecxz
jbe
cld
xor
testl
xor
je
ss
fmuls
add
add
sbb
fdivr
ret
cmc
jmp
inc
je
add
xchg
inc
push
adcb
or
lods
add
inc
jo
les
nop
inc
insb
aam
scas
and
pushf
pushl
hlt
and
sub
aaa
je
adcl
jo
insb
aam
aas
and
add
cld
and
test
mov
jmp
cwtl
cmp
out
inc
adcl
xchg
fcmovnb
push
push
mov
jns
mov
shrl
or
jmp
popa
cmp
lea
fucomi
rcrl
outsl
insb
je
or
inc
jnp
in
sti
pop
adc
xchg
xlat
jmp
lock
mov
imul
mov
cmp
xchg
in
xchg
push
mov
mov
jg
push
xchg
div
xchg
xchg
mov
testl
or
fcomps
imul
mov
fucomi
add
add
pop
repnz
roll
sub
pop
rorb
cs
xchg
sbb
cltd
aad
sti
orl
xor
cmp
and
fstpl
std
jb
subb
fildl
mov
imul
push
inc
cmc
test
je
mov
call
incl
and
test
icebp
andb
push
lea
lcall
xlat
insb
push
mov
mov
pop
mov
add
sahf
add
add
jecxz
push
repnz
mov
pop
shlb
add
mov
call
jae
data16
hlt
push
insb
inc
fwait
sti
adcb
pop
or
inc
aaa
xlat
lcall
sub
add
xlat
and
outsb
hlt
xor
jo
inc
add
jl
mov
hlt
test
out
aam
fisttps
clc
mov
movsl
push
xor
inc
cwtl
jl
mov
insb
cld
and
je
cld
and
jge
cld
xor
jae
lcall
insb
loope
outsl
add
stc
pushf
xor
int
xor
jmp
inc
jl
outsl
outsb
inc
inc
sahf
gs
movsb
mov
sti
mov
cld
lds
fistpl
out
or
push
add
fsubr
jl
push
imul
xlat
loop
ja
out
pop
lds
push
adc
cs
lods
test
fstps
push
cmpsb
pop
dec
push
jecxz
pop
pop
call
clc
es
xor
mov
push
cmpsb
pop
stos
mov
fisttpll
dec
pmaxsw
test
sti
mov
jo
inc
icebp
ja
sub
add
add
aas
sti
cs
daa
pop
xor
jo
add
ret
loopne
xchg
pop
sbb
xorl
or
dec
xchg
test
push
jge
jmp
jl
xlat
push
adc
and
sti
mov
or
fmull
pop
adc
add
popf
sbb
ret
inc
int
or
pusha
rolb
jmp
fildl
gs
push
add
or
and
and
orl
push
adc
ljmp
push
sbb
add
mov
add
xlat
call
test
mov
call
xor
xchg
push
push
add
shrl
dec
fbstp
fisttpl
sbb
inc
dec
decb
clc
mov
test
roll
xor
outsl
adc
pop
xlat
std
je
out
je
out
bound
gs
dec
jl
jae
jl
frstor
sar
cld
pop
sbb
movsl
lret
sbb
in
pusha
sbb
call
inc
pop
inc
cmp
mov
jmp
cld
inc
inc
mov
pop
lret
jne
dec
push
xchg
call
inc
std
jmp
push
in
or
and
lods
scas
notl
xchg
or
in
sbb
mov
push
jae
cmp
inc
pop
push
adc
leave
push
push
enter
icebp
xchg
cmc
pop
jo
add
fistl
xchg
js
sub
hlt
mov
repz
out
je
sub
fucomi
add
or
pop
jo
jns
clc
shlb
mov
inc
jno
jo
pop
mov
mov
sbb
mov
push
fsubs
sarl
insb
pop
cmp
sub
sub
sub
incb
jno
push
dec
loope
or
gs
jg
lahf
andb
cmp
push
test
sti
mov
aas
ja
or
jmp
pop
mov
sti
insl
lods
or
bound
push
dec
icebp
sbb
jmp
gs
adc
fcoms
push
jae
adc
jg
mov
lods
cmp
pop
adc
jae
in
in
es
bound
fadds
loopne
pop
adc
sub
mov
mov
loope
or
ffreep
inc
jne
sti
mov
fmuls
adc
sbb
dec
inc
fcoml
xor
adc
mov
outsl
xor
sar
and
xchg
add
pop
pop
adc
or
aam
mov
loopne
sbb
rol
inc
add
ljmp
cmp
stos
sbb
in
adc
sbb
add
loope
mov
out
cmc
data16
in
and
mov
lea
aad
jg
je
mov
xor
inc
cld
aaa
stc
xchg
sbb
test
shlb
dec
icebp
dec
pop
in
lret
fcomps
icebp
fldl
add
mov
xor
data16
popa
pop
data16
or
imul
dec
lock
mov
stc
ds
loope
cld
inc
jecxz
cld
test
aas
jo
cltd
inc
push
addb
adc
cmc
cvtdq2ps
add
jmp
cli
lahf
imul
negb
lea
ja
jle
imul
jmp
push
cld
clc
aad
fwait
add
jmp
in
sbb
jmp
jle
add
loopne
add
outsb
inc
arpl
push
add
mov
pusha
fsubl
insl
adc
adcl
loop
mov
push
push
or
aam
loope
scas
sarl
bound
and
sub
mov
push
push
jb
pop
jp
jae
sbb
out
push
insb
mov
jge
outsl
jae
push
into
jg
lods
or
shrl
fnstenv
fildl
adc
inc
sti
push
fdivrl
sub
push
icebp
bound
mov
mov
ret
data16
push
adc
pop
add
clc
cmp
in
fwait
out
add
inc
push
mov
add
mov
mov
add
or
test
lock
mov
sub
sbb
and
sbb
hlt
xchg
and
aam
xlat
sbb
call
mov
inc
inc
dec
out
mov
jge
loope
dec
inc
or
hlt
jbe
mov
jmp
test
xlat
add
movsb
pop
adc
lcall
sbb
pop
cld
cmpsl
cmp
mov
mov
call
insb
adc
pop
xor
les
scas
mov
inc
mov
ret
jno
incl
mov
in
inc
pop
xor
mov
sbb
pushl
enter
roll
mov
sahf
or
notl
les
fdivrl
jo
into
mov
lock
mov
pop
jo
mov
inc
fistpl
mov
xor
rcrl
aas
sbb
test
jmp
fdivs
pop
mov
pusha
mov
andl
mov
or
dec
push
jae
dec
pusha
test
call
mov
mov
data16
mov
mov
sti
sub
data16
fistl
push
out
jns
mov
lret
pusha
ja
lods
idivl
shll
call
mul
daa
and
adc
jo
fdivp
jnp
jmp
pop
jae
xor
pop
leave
fiadds
cmp
jmp
cmp
jne
xor
or
call
and
iret
xor
jmp
imul
lcall
lods
pop
bound
bound
jmp
in
fwait
call
gs
test
fildl
xchg
je
jp
fisttpl
jle
jae
jae
lds
cmc
iret
adc
cld
jae
imul
mov
add
ljmp
pusha
fs
imul
mov
add
insl
push
or
sbb
mov
adc
xor
mov
xchg
mov
imul
rcll
es
adc
cmp
xchg
or
xchg
fwait
mov
push
fwait
pop
add
fstpt
inc
jo
std
mov
cmp
aas
call
and
xor
jg
jp
andb
test
xor
cmp
cwtl
das
push
cld
jg
mov
inc
addb
psubsw
lock
xlat
or
imul
addb
addb
and
divl
add
mov
push
inc
pusha
or
stc
push
gs
incl
mov
cmp
fucomi
add
pop
into
or
ljmp
mov
fucomip
mov
out
cmc
inc
insb
notl
jle
movsb
xchg
jbe
nop
fucomi
add
push
movsb
pop
insb
sahf
loop
ljmp
pop
cmpsb
or
jnp
adc
dec
out
add
sbb
call
sbbl
jbe
ja
movsb
pop
repnz
mov
cli
adc
out
inc
jbe
sti
outsl
ss
dec
jmp
jne
in
push
incb
jmp
or
adc
fcoml
dec
fstpt
add
sbb
dec
dec
fisttps
push
fadd
out
les
jo
int
call
pusha
jge
outsb
mov
pushf
cmp
pop
inc
fucomp
pop
sbb
xor
ljmp
pop
repz
jae
add
int3
mov
add
cs
cld
call
fdivrs
cld
fsubl
xchg
push
or
rolb
sbb
cmp
or
mov
ror
lahf
jge
filds
sbb
fadds
mov
aam
decl
fadds
mov
rorl
inc
mov
icebp
push
inc
and
fbstp
pop
pop
lahf
or
add
popw
add
inc
outsb
pop
fdivrs
jo
push
popf
add
mov
int
push
and
testl
imul
pop
jmp
addr16
loopne
push
mov
lret
daa
jmp
sbb
in
ror
repz
add
mov
add
mov
inc
mov
push
imul
out
adc
add
mov
je
lods
push
push
leave
and
sti
repz
jae
xchg
addr16
add
clc
push
jge
fistpl
dec
fucomp
add
idivl
call
cmc
xchg
jo
add
data16
inc
or
rclb
out
out
int3
out
out
iret
ss
jg
icebp
mov
cmc
ret
out
jo
push
sub
xchg
daa
jb
jmp
mov
jb
cmp
add
pop
xchg
outsb
xor
cwtl
xchg
movsl
out
fucompp
lods
call
fucompp
mov
data16
mov
push
arpl
sbb
pop
mov
outsl
or
jmp
fildl
pusha
es
insl
out
jno
jmp
ja
sti
jmp
cmp
in
add
mov
pop
sub
jae
lea
jo
jmp
add
sbb
rcrl
add
push
das
and
jae
mov
add
dec
mov
notl
sarl
add
out
cld
aaa
ret
daa
and
jae
xchg
out
or
inc
inc
loop
je
push
outsl
clc
xchg
mov
sti
decl
push
add
adcb
inc
mov
add
add
xor
jne
adc
xor
pop
pop
nop
sbb
in
out
insl
fistl
xor
push
mov
faddl
add
mov
je
cmc
jle
lock
call
adc
fmull
add
lock
decl
inc
lock
addl
mov
out
clc
sti
fiadds
mov
fldl
add
jo
pop
xchg
sbb
lea
dec
jb
in
enter
cmp
sti
es
push
fists
push
das
iret
loopne
call
insb
jno
pop
enter
scas
pusha
mov
mov
call
popf
test
cwtl
mov
push
daa
sbb
push
mov
jnp
ja
pop
sbbb
inc
pop
fdivl
pop
arpl
sbb
testl
outsb
aam
sbb
jl
adc
daa
xor
pop
outsl
mov
bound
xor
or
push
call
in
test
add
cmp
cmpl
and
movsl
lods
call
fistpl
fwait
sub
jo
pop
sub
add
ljmp
fisttpl
or
add
in
sti
jo
add
stos
ds
das
test
jae
push
sbb
mov
lods
pusha
shrb
icebp
jb
pop
mov
popa
mov
jb
add
jbe
pop
jae
aaa
sub
and
and
push
mov
mov
sub
mov
sbb
or
jecxz
gs
dec
lods
rorb
mov
sbb
add
std
add
add
fcoml
or
jne
lret
loopne
ja
out
mov
pop
flds
int3
in
clc
pushl
xchg
stc
lea
cld
adc
xchg
bound
mov
dec
incl
sbb
push
inc
or
jo,pt
out
mov
xchg
arpl
jne
pop
mov
call
mov
adc
inc
leave
popa
ret
add
lods
sti
inc
mov
cmp
jo
adc
inc
jo
jl
add
lret
cli
addr16
enter
enter
mov
cld
test
incl
jo
xor
pop
daa
addr16
inc
jp
jmp
lods
pop
repz
call
add
jbe
fsubrl
scas
push
dec
fsubs
jo
jbe
fsubrs
inc
xor
jmp
ljmp
cmpsl
sub
or
jg
adc
mov
push
jmp
ficompl
insb
adc
imul
inc
je
jnp
imul
inc
add
fildl
adc
sub
add
insb
xchg
push
dec
mov
movsb
imul
test
rorb
add
cld
xlat
sbbl
mov
jle
inc
cltd
mov
call
add
add
faddp
push
jne
sub
int
jae
cli
xor
xor
mov
fwait
pop
inc
or
repz
jbe
and
pop
in
or
lret
ficoml
cld
sbb
sbb
jge
jae
add
push
ret
popa
adc
cmp
rolb
lods
jecxz
mov
inc
sbb
push
mov
pop
clc
add
nop
decb
ljmp
mov
jecxz
cld
dec
sub
testl
lods
adc
jmp
ds
les
jo
sub
mov
ja
or
mov
lcall
pop
and
data16
xor
or
xlat
add
or
cs
add
and
popf
pusha
dec
add
push
push
jo
adc
dec
sahf
leave
aas
jo
ja
push
xchg
inc
adc
cmpl
pop
xor
sti
js
xor
dec
inc
mov
lret
xadd
lret
and
shl
add
mov
or
aaa
jb
jnp
insl
sbb
enter
js
mov
pop
jo
fldl
mov
pop
out
aas
jo
js
xchg
shlb
aas
or
fidivrl
add
outsb
mov
inc
inc
enter
pop
push
rorl
mov
mov
or
rolb
mov
or
mov
pop
dec
add
fildl
sbb
test
insb
rclb
fucomi
jl
or
out
pop
shrb
add
pop
into
sbb
data16
sbbl
aad
inc
add
lahf
fucomi
jbe
mov
push
lahf
in
add
fldcw
inc
add
mov
sub
add
mov
pop
add
jae
mov
push
add
jae
mov
fdiv
cmp
and
jb
add
jae
add
in
lcall
aaa
mov
je
dec
push
imul
outsb
jae
mov
test
ret
fadds
mov
or
push
test
dec
data16
mov
adc
add
push
pop
add
out
pop
lcall
adcl
popa
push
fsubrl
jne
sub
adc
and
pop
adc
or
add
fsts
decl
adc
lcall
cmp
add
cmpl
filds
add
push
test
out
mov
sti
lcall
in
and
sub
adc
and
pushl
cmpsl
out
xor
js
mov
out
dec
jmp
and
jno
jmp
ffreep
inc
cld
outsl
add
repnz
xchg
sbb
and
jbe
inc
pop
andl
and
jnp
movsb
jb
jmp
sbb
pop
std
sbb
das
mov
pop
in
xor
jno
mov
cld
addb
jmp
scas
xor
lods
add
es
cld
daa
aas
jae
stc
rorb
pop
in
lret
push
xchg
push
jl
insl
mov
bound
icebp
fistpl
push
scas
mov
int3
arpl
cmp
push
mov
and
pop
and
jp
add
sub
add
jge
je
movsl
pop
xor
pop
and
xor
jno
mov
je
rcll
mov
movsb
mov
popf
fldl
mov
xlat
test
push
cwtl
inc
sbb
mov
mov
fsubl
jbe
fdivrp
xchg
imul
sbb
bound
jmp
mov
cmp
jb
add
xchg
xor
mov
dec
adc
test
lods
push
add
fistpll
fdivl
bound
aad
pop
ja
pop
xchg
mov
or
aaa
sub
outsl
out
jp
jg
pop
xchg
add
repnz
add
jbe
add
xchg
lcall
icebp
mov
ss
mov
pop
pop
lcall
add
mov
mov
sbbb
inc
add
xchg
cmp
icebp
adc
inc
adc
aaa
pop
mov
mov
pop
sub
lahf
inc
adc
popf
sti
mov
imul
sarl
jmp
and
pop
sarb
xchg
mov
ja
add
mov
jo
inc
push
sti
dec
sub
jo
push
mov
pop
jmp
pop
inc
cld
sti
mov
shll
add
aam
push
push
add
push
mov
iret
jge
jb
push
and
movl
test
mov
js
sbb
aas
je
enter
ds
std
push
subl
mov
stc
andb
std
fisubrs
add
dec
mov
cld
dec
enter
fisubl
mov
in
cmp
cli
out
sub
jmp
dec
mov
fnstcw
jecxz
pop
dec
insb
pop
aam
out
std
and
push
push
aam
iret
push
sub
movntq
out
xchg
xlat
jmp
dec
add
push
movsb
aas
cwtl
data16
fisubl
ficompl
psubq
insb
or
jmp
sub
inc
lret
fwait
cmp
or
sbb
mov
push
inc
fiaddl
divl
pop
xchg
adcb
rorb
sbbb
ja
add
in
outsb
test
mov
ja
add
add
ds
pop
cs
xchg
mov
or
les
push
add
sbb
fs
mov
fildl
bound
pop
or
pop
sti
jmp
pop
push
lea
mov
test
ret
xchg
add
mov
les
aas
lcall
add
sbb
std
jne
dec
ds
add
mov
xchg
dec
outsl
icebp
push
add
cmp
flds
mov
xchg
add
and
je
xchg
outsl
and
and
mov
lret
mov
mov
or
add
std
ss
ret
lock
xlat
jmp
cld
jge
sbb
jo
sar
cmpsb
in
xchg
cmp
mov
adc
pop
pop
outsb
nop
pop
push
jg
jo
jecxz
or
in
or
imul
mov
add
jb
mov
inc
jae
out
mov
push
mov
jb
push
add
ret
sbb
xchg
xchg
add
mov
sub
sti
jb
xorb
fs
in
mov
subl
decl
addr16
sbb
fcompl
xlat
mov
pop
jmp
cmp
repnz
jae
sub
addl
outsl
push
and
jmp
push
pop
mov
test
mov
or
add
add
out
stos
daa
dec
movsb
fwait
das
push
stos
or
mov
jbe
adc
sbb
test
mov
xchg
add
jb
lea
mov
in
sub
inc
xchg
int
push
cs
mov
add
ret
sbb
pop
jecxz
rcrl
push
push
add
cmp
bound
jecxz
xor
adc
jl
ret
jae
xchg
insb
data16
jmp
aam
cmpsb
popa
jne
stc
loop
mov
out
and
gs
sti
jmp
lock
jmp
gs
inc
push
je
jge
data16
pop
sahf
shlb
adc
mov
adc
out
mov
push
pop
xchg
cs
jg
xchg
push
mov
jle
jg
std
je
iret
ds
jne
arpl
or
and
jne
arpl
jns
fdivrs
pop
jo
pop
sbb
xchg
and
call
push
sahf
outsb
add
call
xchg
or
add
inc
mov
mov
add
mov
push
fdivl
pop
subl
in
xor
addl
or
cmp
mov
pop
test
add
pop
test
inc
rclb
mov
dec
sbb
into
jmp
movl
iret
sar
push
push
jo
cmpb
inc
xchg
mov
sti
inc
lcall
jg
lcall
mov
sub
lods
pop
sbb
insb
pusha
data16
rsqrtps
cmp
fstpt
ljmp
add
pop
test
push
push
vmwrite
push
mov
ss
fcmovnu
add
mov
or
popf
rorl
int
add
pop
test
cmp
jno
mov
jecxz
repnz
aam
add
int
adcb
hlt
shll
pop
mov
fcoms
mov
push
sti
insb
mov
push
add
add
repz
jmp
aas
test
insl
mov
out
sub
push
add
bound
cmp
cld
sbb
fildl
push
push
add
inc
aas
call
test
mov
std
inc
jg
js
push
push
add
fistl
jo
add
jae
sti
fdivl
fsubs
dec
mov
mov
std
adc
push
xchg
out
addl
ds
jmp
adc
sar
cld
jne
adc
adc
sbb
cmp
jo
xchg
adc
push
jbe
mov
inc
adc
adc
sbb
cmp
out
jge
std
jne
adc
adc
sbb
xor
xor
rcrb
sbb
or
or
mov
je
adc
inc
lods
cld
jne
inc
rclb
cmp
pushf
or
arpl
les
cmp
xchg
cmp
in
call
jb
mov
enter
test
ss
dec
stos
add
aaa
cld
inc
cld
mov
jp
cs
push
mov
cld
es
aas
call
inc
mov
sub
add
xor
add
cmc
test
std
add
repz
xchg
mov
adc
jo
data16
iret
or
icebp
push
out
jb
lods
adc
dec
jmp
mov
mov
or
xlat
inc
sbb
add
lahf
int
jmp
testl
jecxz
add
scas
inc
loop
jo
addl
mov
pop
int3
outsl
or
popf
jle
xor
mov
iret
in
out
fmuls
ds
out
call
add
mov
sbb
cmp
jle
add
jno
add
mov
aad
jmp
push
hlt
cmp
mov
adc
call
clc
mov
mov
mov
dec
push
loopne
xchg
clc
xchg
and
mov
push
test
mov
sub
pop
clc
in
icebp
or
or
add
fdecstp
sahf
and
add
push
je
test
movsl
pop
dec
out
negb
je
arpl
loope
idiv
jle
mov
inc
mov
push
push
inc
in
sub
enter
sbb
add
out
ljmp
or
xorl
add
fs
and
push
cmp
ljmp
loopne
xchg
push
in
add
pop
ret
mov
push
imul
push
mov
arpl
xchg
pop
lea
lods
add
and
pop
push
add
sub
inc
test
jl
xor
push
leave
lahf
push
fcomps
aad
je
mov
inc
clc
js,pt
push
xchg
dec
test
push
push
mov
daa
xchg
add
incl
gs
incb
xor
adc
jo
icebp
jae
addb
fs
cmp
xor
fimull
cmp
repz
cmp
mov
cmp
inc
mov
fs
roll
popf
jmp
mov
fwait
dec
xchg
adc
mov
inc
out
jle
iret
les
jo
pop
sub
add
sahf
scas
add
lods
pop
xor
repz
add
fistpl
or
lods
add
dec
jle
dec
fdivrl
dec
lods
xchg
shlb
sbb
in
sub
mov
loope
movsl
fbstp
outsl
bound
sbb
mov
shrl
xchg
add
inc
addr16
sub
xor
push
inc
or
dec
cli
aam
ljmp
gs
push
add
bound
push
sti
ds
out
out
lock
sti
jmp
aad
adc
lods
add
xor
inc
jb
stos
add
movsb
testb
insb
lret
add
dec
push
jg
stc
add
jle
jl
dec
call
js
dec
add
jmp
leave
xor
dec
add
call
mov
pop
ret
jl
out
sbb
sti
decb
data16
shrb
dec
xchg
or
push
xlat
add
adc
or
or
inc
je
push
repz
sub
imul
fiaddl
inc
popa
sub
jne
dec
je
push
xorl
jo
sbb
ret
in
aaa
jno
add
adc
pop
xor
sbb
daa
cld
jl
jl
inc
inc
ret
lcall
xlat
aaa
cmp
add
mov
js
adc
add
xor
pop
sbb
test
pusha
mov
xchg
popw
std
add
fnsave
notl
or
jo
aam
sti
jmp
ljmp
stos
sbb
fsub
call
aaa
popa
fwait
jmp
add
std
add
fistpl
ret
cmpsb
adc
xbegin
add
lods
fstpt
add
fistpl
movsb
fisubrl
inc
inc
out
sbb
out
addr16
pusha
jmp
inc
and
xchg
subb
add
pop
hlt
mov
or
repz
xchg
fucomi
add
pop
add
das
dec
xchg
arpl
jmp
xor
push
push
sbb
mov
xor
das
dec
push
mov
sub
dec
adc
sbb
pop
or
mov
cmp
jl
add
mov
outsl
mov
dec
push
pop
ss
mov
add
ret
ret
scas
insl
cmpsl
icebp
test
adc
cmpsb
test
test
ret
ljmp
mov
popf
roll
js
add
aad
gs
incb
and
cli
inc
dec
cli
into
lcall
inc
pop
sbb
inc
fiadds
repz
adc
inc
push
pop
sbbb
pop
xor
add
decl
in
das
xchg
das
imul
dec
mov
shlb
ret
out
cs
jg
cmc
xlat
xchg
das
xchg
das
imul
shl
cmpb
add
imul
outsl
inc
jb
xor
imul
jmp
inc
mov
addr16
imul
xor
call
xor
aad
sbb
mov
sahf
popa
adc
add
lods
aas
aam
mov
pop
add
je
jle
pop
inc
xor
cmpb
sbb
pop
int
xor
imul
mov
jmp
adc
fistpl
scas
stos
pop
inc
cmpsl
xor
xor
cli
into
lods
int3
push
cmp
jo
jns,pn
scas
and
stos
jmp
mov
mov
fucomi
js
scas
pusha
rcll
je
push
and
jno
jmp
jns
pop
mov
cmp
inc
test
dec
dec
xor
lret
jmp
lods
jecxz
in
push
inc
sub
pop
inc
jg
jo
dec
xchg
rclb
mov
int
mov
jae
dec
pop
and
jmp
cmp
dec
cs
push
inc
popf
inc
scas
mov
inc
adc
fs
or
adc
aas
test
std
xchg
sub
xchg
lcall
fs
push
ret
mov
inc
add
sub
pop
jne
inc
cmc
imul
mov
gs
fdivl
push
call
add
xchg
adc
lods
stc
fiaddl
lea
lds
popf
pushf
jo,pt
fildl
add
jbe
lea
push
sbb
jmp
jnp
add
adc
leave
jno
push
int
inc
xchg
sbb
push
incb
dec
mov
and
in
jo
jnp
add
test
xor
add
jg
dec
or
aam
in
inc
sub
popl
xorb
mov
jb
gs
pop
repz
icebp
das
lahf
pop
jo
test
xor
cld
mov
sub
or
jnp
outsl
mov
jl
sbb
fwait
lcall
mov
hlt
incl
out
enter
pusha
jbe
fcomps
or
test
iret
jg
fsubr
add
push
and
movsb
dec
insb
push
je
add
mov
lret
xchg
imul
sbb
xchg
jmp
into
outsl
add
div
and
add
pushf
sti
clc
sahf
fnstsw
push
jo
dec
pop
fcomi
repz
jo
add
jne
mov
fistpl
out
fbld
das
pop
mov
add
rolb
gs
jb
jo
outsb
enter
dec
insb
pop
add
fildl
imul
inc
sti
jmp
mov
or
jmp
sbb
cmp
jae
lea
sti
push
pop
mov
jmp
pushf
inc
je
ljmp
call
gs
dec
jb
xor
pop
xchg
scas
push
xor
mov
faddl
jmp
push
inc
call
push
sarb
dec
enter
xchg
lea
cmp
mov
sbb
xchg
inc
add
add
cvttps2dq
cld
lcall
loope
call
cld
xorl
jge
push
loopne
xchg
pop
pop
add
negl
lcall
adc
jp
popa
fldl
add
pop
mov
or
dec
mov
jne
lds
inc
adc
ret
fdivrp
dec
call
addb
push
jo
aad
test
inc
jo
mov
jmp
jae
push
shlb
mov
jmp
repz
and
jl
and
sbb
mov
cmp
jl
jle
xchg
ret
jns
incb
cmp
push
in
fstpl
inc
lock
jo
aas
aas
xor
push
jmp
and
mov
dec
jb
call
loop
jae
inc
out
cli
add
sti
jns
dec
add
shl
xchg
sbb
aam
cld
cmp
pop
fwait
jmp
jp
test
and
mov
sub
and
std
lret
xchg
daa
lods
add
lods
fbstp
movsl
fistps
lods
fbstp
push
movsl
fistps
lods
fbstp
movsl
fists
stos
insb
mov
fildll
mov
jo
stos
enter
call
enter
add
sar
lahf
fucomi
mov
std
dec
sbb
test
fcomps
sbb
test
and
imul
inc
or
in
xchg
ja
add
fs
lods
xchg
faddl
xchg
divb
ret
out
jg
inc
jmp
add
pop
sti
push
notl
push
jb
pop
in
lea
cmpsb
push
pop
cmp
sub
outsb
mov
sti
sbb
pop
add
sbb
lea
call
arpl
jecxz
xchg
xlat
add
lret
push
rclb
fwait
push
jae
data16
call
orl
push
cld
call
sbb
dec
orl
out
test
test
push
adc
cmp
cmpb
data16
xlat
add
dec
cmp
rolb
sbbl
fdivs
sub
add
xchg
or
dec
ja
mov
lods
daa
mov
mov
fwait
add
cs
sbb
adc
mov
stc
out
and
jo
push
aas
repz
inc
int3
in
cld
inc
mov
repz
jge
xchg
pop
in
outsl
dec
imul
xchg
jecxz
daa
jnp
xor
mov
adc
jmp
fimuls
or
lcall
mov
fldt
ljmp
rdtsc
and
sbb
test
sbb
seta
cld
pop
and
test
xchg
ror
push
data16
push
sub
xor
push
dec
mov
jmp
daa
pop
push
xlat
lock
mov
cmpsb
rcr
xchg
cltd
jmp
mov
out
jl
sbb
add
jmp
pop
mov
jmp
ljmp
cmpsl
aas
rolb
push
call
inc
stc
inc
xchg
add
push
inc
or
jne
add
int
test
fimull
sahf
jg
call
insb
adc
cmp
mov
push
pusha
mov
inc
push
test
add
adc
jle
and
add
pop
jmp
xchg
jmp
and
push
sub
push
xchg
push
aas
or
lds
lcall
ja
sub
or
add
xchg
inc
sbb
and
xchg
inc
add
icebp
xlat
mov
xchg
pop
adc
call
push
adc
sub
or
add
adc
cmp
sbb
and
xlat
xchg
dec
call
adc
fadds
add
dec
decb
int
push
or
jae
loope
and
daa
fdivl
push
dec
and
das
sbb
and
push
cmc
and
cmp
stc
mov
add
jmp
lods
jle
out
sbb
fcmovnbe
mov
sti
dec
daa
mov
add
cld
pop
mov
inc
jae
mov
cltd
adc
jae
stc
cwtl
and
cwtl
and
js
fucomi
add
inc
sahf
andl
xchg
icebp
cmp
sbb
into
pop
repnz
scas
dec
mov
and
cld
call
mov
sbb
sbb
mov
pop
sbb
fistl
dec
add
jmp
inc
out
cmp
xor
mov
imul
lahf
imul
jo
testb
xchg
mov
leave
icebp
cmp
add
sti
add
jmp
mov
add
add
or
add
inc
stc
add
std
adc
std
xchg
xchg
sbb
repz
cli
jae
pop
add
xor
pop
mov
sti
xor
mov
pop
inc
out
out
cmp
ror
add
nop
push
add
jp
xor
mov
out
add
mov
dec
add
dec
jle
add
fiadds
jmp
fistpll
jle
mov
dec
sbb
fcoms
add
fldt
cwtl
or
adc
push
addr16
or
and
lea
aad
mov
call
jmp
arpl
pop
outsl
jecxz
rcl
cld
mov
jg
cmp
shlb
sti
fldenv
adc
pop
cld
str
dec
andl
fstps
jne
add
mov
insb
xchg
insb
imul
jo
cld
pop
lock
jo
pop
cld
or
push
and
scas
jb
rcrl
mov
mov
push
cmpsl
aas
inc
jg
mov
aas
sbb
cmpb
sbb
jg
nop
or
pop
or
cmpsb
loopne
inc
cwtl
lret
pop
sub
enter
mov
out
cmp
scas
imul
cmp
scas
fldt
test
shr
xchg
std
mov
mov
sub
xor
out
popf
flds
shr
sub
pop
pushf
adc
or
or
stc
cli
sbb
js
sub
cmp
pop
ficompl
rolb
adc
rcll
fwait
jns
cltd
and
pop
jo
pop
daa
lock
mov
aam
pop
mov
xor
jp
ja
add
stc
dec
jo
stc
and
aaa
sti
push
pop
jbe
gs
add
add
cwtl
or
sub
ss
and
cld
push
push
adc
inc
add
ljmp
hlt
sbb
adc
push
clc
adc
pop
inc
add
jae
in
lahf
pop
add
jae
fs
push
inc
add
adc
and
rep
add
out
hlt
lea
sar
call
incl
push
lahf
outsl
ss
sbb
xor
fdivr
je
inc
jecxz
mov
adc
jmp
aas
and
data16
and
pop
mov
and
add
std
adc
in
lds
add
out
and
jno
inc
add
popa
fsubs
sti
addr16
add
cs
add
out
sub
pop
mov
inc
add
nop
sti
dec
push
push
push
dec
xchg
and
pop
push
test
daa
sbb
inc
jo
scas
imul
rolb
leave
add
adc
fisttpl
jo
decl
pusha
lret
xor
push
pop
adc
aas
push
jae,pt
mov
inc
mov
cld
movsb
aam
mov
add
rcl
incl
jno
add
out
sbbl
icebp
mov
sti
xlat
jnp
add
data16
das
fsubl
testl
gs
daa
lods
std
addr16
add
pop
enter
enter
mov
sahf
jmp
mov
mov
xor
loopne
fucomi
add
add
jo
jge
fstpt
sub
test
pop
int
add
fmuls
or
orl
bound
popf
and
jmp
xor
hlt
ja
inc
jmp
lret
jbe
sbb
aad
inc
pop
add
xchg
mov
repnz
add
dec
fnstcw
test
add
jb
add
fisttps
fs
sti
xor
mov
pop
xor
out
cld
adc
fstl
adc
fsubs
rcrl
into
clc
jo
add
xor
jo
or
outsb
or
inc
arpl
leave
fsubl
cld
jne
int
or
xor
jne
scas
outsb
or
and
push
inc
and
push
outsb
or
jecxz
and
cld
pop
sbb
cld
jne
imul
adc
cmp
add
cld
mov
call
int
outsl
inc
wbinvd
cmc
cmp
sub
xor
je
push
sti
lcall
mov
outsb
or
push
add
sbb
cmovo
jo
jl
pusha
mov
in
dec
in
clc
dec
inc
imul
pop
repz
jb
out
and
repz
sub
enter
mov
cwtl
xor
add
add
push
push
adc
push
mov
les
call
add
int3
jae
or
setl
xchg
lcall
fsubr
arpl
add
in
add
loope
bound
ret
mull
call
andl
jg
je
xchg
sti
cmp
scas
inc
decb
mov
test
jle
mul
sbb
bound
popf
test
adc
pop
xchg
jg
push
xchg
outsl
cs
pop
add
jmp
inc
sbb
jl
pop
inc
or
ds
dec
scas
mov
dec
push
sub
xchg
pusha
lods
out
hlt
je
mov
cs
push
loop
and
jae
out
popa
test
jl
and
or
pop
cli
adc
jae
sti
sbb
enter
add
in
add
stc
adc
cli
adc
scas
stc
and
mov
ljmp
hlt
and
mov
pop
inc
pushl
loope
xchg
pop
xor
pusha
test
or
outsb
and
pop
mov
adc
push
pop
push
xor
fdivs
repz
add
mov
push
push
xor
adc
fdivr
and
outsl
add
out
fs
adc
jle
mov
sbbb
call
adc
xchg
xor
inc
and
adc
jne
pusha
and
je
push
xchg
jo
cltd
or
adc
aaa
rorl
xor
add
aas
jo
inc
pshufw
jmp
or
jb
mov
jae
mov
mov
in
dec
xchg
sbb
push
dec
cwtl
adc
scas
dec
and
adc
scas
rolb
sbb
mov
cwtl
pop
imul
inc
lods
pop
mov
call
test
pminub
or
add
adc
add
in
cltd
inc
mov
sbb
xor
push
lock
cwtl
je
cli
out
shrl
add
push
aad
das
mov
or
movsl
xchg
mov
negb
mov
cmpsl
fistpl
ja
cmpsl
and
sub
int3
scas
sti
cwtl
pop
hlt
out
and
and
add
fisubrl
ja
lock
jo
jecxz
add
jo
ja
pop
idivl
test
or
pop
fadd
outsl
inc
imul
scas
or
decb
adc
cmp
push
jne
nop
cld
xor
jecxz
fisubl
sti
insl
mov
or
decb
add
aaa
sti
out
fs
movsb
cld
xor
push
jb
pop
jge
jb
adc
int
cmp
inc
dec
push
jne
test
faddl
xchg
add
sahf
into
sbb
jge
xor
dec
pop
ffree
jmp
loopne
pop
call
jle
adc
push
add
sbb
cmp
lea
xlat
xchg
popa
mov
test
dec
fldl
mov
lret
fnstsw
ret
movsl
arpl
mov
rcll
insl
push
push
add
sub
adc
cmp
cmpsl
or
dec
pushf
mull
nop
aad
or
jno
mov
jne
xchg
lds
leave
fsubr
jge
filds
lea
mov
outsl
push
call
or
or
pop
sbb
jne
adc
xor
dec
in
jno
decl
pop
mov
or
pop
cmp
jnp
add
icebp
nop
push
mov
xor
cmp
push
nop
xor
push
adc
lock
adc
mov
repnz
pushl
or
cld
fbstp
mov
dec
inc
ret
jg
js
hlt
add
sbb
repnz
mov
mov
daa
lcall
hlt
inc
fldt
repnz
out
add
sub
ret
addr16
sub
jo
mov
movsl
es
out
pusha
fwait
jmp
inc
ret
aad
mov
fbstp
loopne
push
add
sbb
daa
decl
nop
outsb
sbb
aaa
stc
cmpl
fadd
mull
xor
loop
jmp
notb
xor
add
mov
sbb
and
adc
push
wrmsr
fucomi
inc
jb
add
add
jns
clc
sti
mov
imul
push
int
dec
jns
inc
icebp
push
add
jae
out
fistl
mov
cmp
cltd
or
mov
call
je
and
imulb
adc
aad
pop
js
adc
push
rolb
movb
xchg
xor
xor
jmp
mov
add
add
cs
rorb
mov
xchg
icebp
pushf
xchg
decb
lods
les
pushf
dec
call
aam
outsb
sub
xor
inc
pop
inc
cli
lcall
cld
adc
push
lock
jg
mov
mov
dec
lcall
jo
sti
lcall
pop
sahf
enter
add
dec
lea
lcall
enter
fmuls
lea
faddp
das
imul
aaa
jmp
lds
pop
arpl
clc
je
jo
sbb
movsl
mov
lcall
sub
test
jo
add
add
sub
js
js
xor
add
mov
jl,pt
xor
add
sbb
adc
push
cmpsl
call
push
mov
cli
incl
jb
sbb
cld
out
jbe
insb
stos
test
xlat
out
mov
fistl
lods
mov
add
into
nop
jnp
jmp
xchg
div
push
xchg
popa
addl
fistpl
and
jmp
jns
subl
ret
push
dec
adcb
pop
mov
mov
add
fildl
je
and
js
mul
mov
test
add
push
and
ja
idiv
mov
fcoml
sub
pop
inc
lods
out
jmp
loopne
jg
or
add
push
insb
mov
or
daa
sahf
and
jecxz
inc
int
xchg
std
mov
call
xorb
data16
popf
and
lock
out
push
add
jae
mov
jmp
pop
and
pop
je
inc
push
pop
lds
mov
fcmovnu
add
fs
and
jo
add
jae
add
hlt
mov
and
add
call
pusha
std
or
cltd
push
test
insl
cli
dec
insl
xchg
sbbb
insl
outsb
xlat
add
or
mov
test
and
mov
mov
adc
je
movsb
sub
aam
pop
pusha
pop
fldl
mov
inc
jne
mov
ud1
mov
fldl
mov
sbb
mov
in
lcall
fildll
add
ret
pushl
les
cmp
mov
imul
push
enter
mov
mov
xchg
add
xor
cwtl
mov
divb
dec
cld
enter
add
jbe
push
fisubl
aam
mov
xor
clc
pop
sti
add
ljmp
shll
iret
push
pop
xchg
xor
jge
out
add
sbb
sahf
or
add
push
xor
in
add
out
pop
rcll
jmp
str
fstpt
add
pop
movsl
movntps
jmp
push
and
inc
push
loop
dec
nop
mov
cltd
insl
int
aas
add
repz
and
push
and
cwtl
sbb
push
mov
mov
ret
or
leave
xchg
sbb
rclb
adc
fcompl
mov
add
cmp
push
sar
sti
scas
in
sub
and
mov
add
cmpl
jle
fsts
fisubl
pop
stos
pop
push
jb
sahf
jge
jae
jne
int
push
cli
xor
cmp
clc
out
xchg
or
jo
or
iret
faddl
jmp
add
icebp
adc
add
xor
cld
push
jne
dec
fsubr
cmpsb
mov
push
pop
or
add
cs
push
xor
bound
push
movsl
or
mov
push
inc
cltd
push
les
xchg
cld
push
jae
call
mov
push
out
jne
out
jmp
dec
inc
cld
or
and
pop
scas
and
sub
adc
cltd
add
call
mov
aam
push
mov
push
test
xor
mov
add
scas
inc
fsubl
jb
jle
daa
nop
inc
int3
loop
bound
pop
out
cwtl
add
dec
and
sti
mov
sbb
push
js
bound
data16
mov
push
jmp
jg
insb
test
popa
push
daa
mov
or
outsb
sti
push
dec
xlat
idiv
push
scas
les
hlt
inc
add
jo
dec
or
sti
sti
aaa
mov
imul
outsb
hlt
mov
xlat
jmp
or
sbb
notb
jge
mov
jo
rclb
jg
cmp
xor
xor
inc
add
xchg
fbld
adc
popf
xchg
jmp
xlat
jmp
inc
jnp
jns
sub
add
stc
imul
fucomi
nop
inc
jmp
fsubrp
add
nop
cmp
ss
cmc
ret
push
adc
insb
xor
call
ret
loop
les
add
or
call
aam
stc
shrb
mov
stos
jl
push
jb
lods
push
sbb
scas
lea
stos
push
xchg
fistl
sti
xchg
jmp
fildl
sub
sbbl
push
jge
test
out
std
mov
mov
ret
jg
jne
inc
imul
jl
sahf
add
add
aam
jb
add
int3
push
add
mov
push
fs
jmp
mov
leave
dec
jecxz
push
bound
jnp
loope
dec
push
cmp
mov
or
jl
call
mov
pusha
out
jne
lret
shr
bound
pop
xchg
in
push
notl
ss
mov
add
push
test
sub
jo
enter
pop
push
lods
les
add
js
inc
xor
addr16
jo
jmp
sbb
or
push
mov
insl
adc
and
repnz
hlt
jb
cmp
push
or
add
ror
push
call
addl
mov
push
repz
and
jo
dec
push
and
add
xor
rolb
jge
push
xchg
out
and
cwtl
pushl
hlt
test
pop
pop
push
fcomp
addb
outsb
ret
dec
cmpsb
push
sti
pop
mov
fcompl
mov
out
push
jmp
add
adc
sub
sbb
mov
lds
mov
fwait
push
cmc
popf
std
push
mov
add
xchg
std
jmp
outsb
repz
adc
negl
fldl2t
add
pcmpgtb
inc
jmp
loopne
cmp
and
je
pop
ret
sub
sbb
jae
push
push
loopne
test
xlat
shrb
fldl
jmp
fistpll
sti
ds
or
sub
mov
add
out
sbb
inc
sbb
sti
mov
std
xor
push
adcl
jae
decl
xorl
jmp
aam
clc
fcompp
mov
xor
push
add
ds
in
sbb
test
push
shl
sti
cmpsb
cmc
and
sub
jge
fisubl
xchg
lret
shll
jnp
adcl
cli
mov
jne
mov
sbb
data16
push
fsubrs
bound
stc
decl
enter
sbb
les
push
testl
shll
jnp
adcl
cli
mov
pop
or
mov
mov
and
fs
push
cmpl
xchg
sbbb
mov
push
sti
add
pop
clc
xchg
cmpb
insb
push
mov
fs
addr16
push
ljmp
xchg
stos
or
jo
pop
das
xor
pop
pop
lret
mov
pop
xor
decb
leave
aaa
sbb
ljmp
jmp
cli
test
cltd
mov
mov
add
push
lock
mov
cmpl
mov
das
sar
sub
addr16
icebp
js
sar
or
push
lcall
out
sub
pop
sbb
imul
inc
push
xor
les
pop
pushf
testl
call
xor
rclb
mov
not
int3
dec
jmp
pop
dec
stos
call
inc
dec
fistpll
add
ljmp
sbb
add
mov
icebp
mov
jecxz
dec
add
add
stos
or
mov
mov
mov
out
xchg
sub
dec
cmc
jmp
loop
fs
frstor
filds
jb
fistpll
out
sbb
jb
fildl
lcall
add
sub
popa
sbb
pushf
mov
aad
jl
pusha
aas
jmp
add
xchg
push
mov
lock
push
je
jl
sti
cld
pop
in
inc
jmp
inc
test
jmp
fs
add
mov
callw
pop
shlb
shr
arpl
jmp
sti
dec
lea
push
decl
inc
pop
pop
les
dec
cmpsl
add
push
adc
add
adc
add
add
sbb
push
mov
aaa
add
adc
jl
or
div
jmp
lock
idivb
sub
ret
push
jo
or
les
das
add
cs
cmp
jae
add
push
add
add
pop
insb
jge
add
aas
add
pop
je
mov
sti
repz
sti
cmpsl
mul
add
inc
jae
pop
popf
sti
lcall
inc
call
add
je
push
call
or
mov
incl
jae
hlt
sar
or
pop
fcoms
fcomi
add
aam
data16
lods
xor
xchg
jle
adc
clc
xchg
or
out
sbb
fldt
cmc
xor
xchg
fucomi
add
xor
in
lds
rclb
daa
jl
xor
test
les
out
les
fucompp
add
fwait
jmp
ss
add
jle
mov
xchg
adc
add
bound
jg
add
fnsave
fisttpl
cmp
or
stos
adc
inc
cmpsl
and
ret
test
jb
mov
rorl
mov
or
xor
mov
adc
cmp
or
adc
xchg
faddl
out
ret
stos
scas
push
in
sub
jle
pop
in
adc
cli
inc
jge
je
jl
je
jle
je
add
sbb
add
fdivp
mov
add
fldt
rcrb
inc
and
mov
cmp
leave
fiaddl
add
adc
or
xor
mov
movsb
pop
or
mov
xchg
je
imul
add
cltd
pop
jge
cltd
xchg
push
out
xchg
call
incl
sub
inc
or
sbb
dec
xchg
inc
and
lea
stos
mov
call
test
test
aad
sub
xchg
and
popa
mov
pushl
jge
push
sbb
dec
dec
push
dec
xchg
add
inc
xchg
inc
jbe
mov
fdivrl
lock
add
push
scas
mov
dec
aam
cmc
mov
xor
mov
xor
mov
adc
mov
sti
xchg
aaa
xchg
gs
ja
jl
xchg
and
addr16
mov
add
xorl
or
mov
cmp
out
lock
hlt
ret
daa
aaa
and
ss
and
jno
lock
int
in
lahf
lds
or
lock
stc
sub
jecxz
cmp
pop
mov
add
js
shrl
mov
sarb
mov
ret
mov
add
out
mov
pop
jnp
pop
dec
dec
mov
jge
mov
sub
or
or
out
dec
dec
call
daa
pop
add
icebp
sub
ret
lret
lods
add
sub
jb
mov
and
incb
mov
mov
xchg
mov
mov
fwait
data16
mov
jo
mov
cmp
data16
sahf
mov
das
mov
sbb
lock
mov
loopne
mov
out
jns
jmp
mov
test
insl
fildl
mov
xlat
test
add
add
mov
nop
and
dec
nop
and
adc
addb
filds
add
pop
inc
and
scas
mov
call
mov
jl
add
out
add
fyl2xp1
jae
mov
pop
and
cli
jae
jge
shll
fiadds
fs
xlat
add
pop
mov
add
pop
test
loopne
add
adc
mov
fimuls
jnp
lea
mov
test
outsl
shlb
inc
pop
or
into
jge
and
repz
decl
sbb
inc
pop
dec
pop
lea
dec
and
xor
mov
push
inc
jo
dec
and
jge
and
fs
xchg
mov
add
sub
mov
sub
hlt
decl
cmpb
fs
xchg
adc
inc
xlat
outsb
sti
mov
and
mov
jp
and
fisttpl
jmp
xor
movsl
daa
mov
dec
ficompl
daa
jl
sub
sbb
add
pop
xchg
daa
imul
ljmp
in
fistl
fcom
lret
inc
mov
in
or
jmp
or
pop
fwait
or
sbb
mov
fstpt
test
mov
fucomip
push
div
ljmp
add
dec
faddl
call
add
sbb
in
sub
idivl
add
jge
punpcklwd
adc
push
sti
push
pop
or
sub
pop
sub
sti
jne
fisttps
insb
addl
out
fiadds
fimuls
add
push
lret
mov
add
inc
pusha
in
push
jae
das
ret
or
and
popa
sub
add
add
aas
add
mov
add
pop
lods
push
incl
inc
dec
pop
clc
add
xchg
add
fcomi
ja
test
mov
call
xchg
sbb
test
loopne
add
dec
call
push
sbb
jbe
call
push
or
repz
adc
lcall
jnp
incl
adc
je
jp
dec
push
fidivs
lea
push
add
mov
insb
fsubl
push
jmp
sti
movsl
cmp
jo
jnp
dec
jne
push
cmc
ss
push
dec
adc
cmp
std
ds
call
lods
jp
pop
int
jne
pushf
bound
jo
mov
pushl
jnp
in
aam
push
out
sti
cli
add
cmp
jo
jb
ss
jno
inc
sti
cmp
jge
js
out
jg
icebp
jo
repz
push
repz
push
cwtl
jnp
add
outsb
repz
or
out
cmpsl
xchg
fsubl
push
insb
pop
add
jb
mov
add
stc
ficompl
fcoml
mov
pop
and
fildl
in
dec
xor
cmc
sbb
mov
jl
call
dec
mov
adc
add
mov
sbb
add
jno
xor
jno
inc
enter
mov
fucomip
fstpt
adc
jmp
or
insb
mov
cmpsb
popa
arpl
sub
insb
push
xor
jmp
mov
mov
push
adc
pop
add
mov
mov
test
rcr
pop
popa
adc
push
dec
inc
pop
lock
push
mov
cltd
cmpsb
xor
ss
outsl
adc
jns
push
sub
sti
popf
fisttps
insb
jge
adc
fiadds
negb
add
sub
jmpw
neg
into
inc
add
inc
pop
in
push
mov
dec
push
jle
mov
ret
mov
ret
pop
fmull
sbb
add
rorb
sbb
mov
jl
movsl
adc
xchg
sqrtps
scas
dec
cmp
or
mov
jle
test
mov
add
or
pop
mov
test
mov
fimuls
ljmp
daa
sub
jbe
test
imul
lcall
test
stc
cli
idiv
adc
add
jo
jno
xchg
sub
ds
sbb
mov
in
fs
jg
in
sbb
aas
add
out
add
adc
daa
sbb
std
dec
sti
adc
inc
jo
mov
mov
ret
jecxz
das
inc
xlat
mov
hlt
out
xchg
adc
xor
sti
pop
push
inc
push
sub
fdivrs
jmp
push
inc
dec
jb
xchg
or
push
push
incb
jo
jp
inc
rol
pop
jbe
jmp
jns
lahf
cmpsl
incl
repnz
jp
pop
add
fsubr
fildl
fimull
call
outsb
xlat
iret
out
faddl
mov
push
inc
hlt
add
xor
add
dec
sub
fucomi
add
xchg
lock
add
adc
add
and
xchg
adc
cmp
xchg
pop
pusha
repz
cld
xchg
popa
sbbb
xor
jmp
sub
out
sbb
mov
insb
aam
test
inc
inc
sub
or
sub
dec
in
pop
add
rcr
jns
push
into
jbe
push
testl
mov
imul
cmp
add
push
dec
test
rolb
mov
mov
and
jae
in
xchg
shlb
shr
push
leave
or
add
lock
rcll
add
iret
add
les
pusha
jp
cmp
cmpsl
pop
orl
mov
dec
ds
mov
icebp
lock
decl
jge
dec
movsl
or
xlat
into
lea
jecxz
push
fildl
call
lea
push
call
xchg
sbb
cmpsb
and
pop
mov
push
and
int
or
enter
iret
js
je
les
jb
mov
in
xor
add
and
sti
inc
stc
add
adc
je
jno
or
hlt
stc
scas
loopne
nop
dec
push
adc
scas
fcoms
add
inc
jo
jne
insl
push
hlt
dec
push
push
pop
mov
loopne
sbb
push
or
cmovbe
xchg
loope
push
fisubl
loope
pop
outsl
mov
fistl
cmp
fsubrl
xchg
cmp
push
jge
jo
jmp
or
push
ja
jo
dec
hlt
xchg
scas
inc
loope
shrl
mov
loope
mov
jo
insb
adc
or
mov
add
pushf
cmc
sbbl
mov
inc
push
jnp
rcrl
or
pop
in
jno
adc
imulb
push
xchg
jg
cmp
insl
inc
shlb
call
in
jle
jmp
in
mov
fldt
cmpsl
push
inc
cmc
pop
sbb
dec
sbb
ljmp
movsb
mov
cmp
push
mov
movaps
ret
push
add
push
lret
scas
sarb
movsb
leave
stos
push
jns
call
repz
cmp
add
js
in
push
add
xchg
roll
mov
jmp
jae
sbb
pop
jbe
or
add
cmpl
clc
call
fldcw
rolb
test
inc
aam
dec
out
testl
movsl
adc
lea
jbe
out
mov
cmp
out
leave
fists
mov
in
or
add
or
add
or
test
jmp
xchg
pushl
aas
or
hlt
std
dec
push
das
fadds
data16
mov
rcrb
je
push
aas
inc
jle
add
jle
adc
ret
ja
add
inc
test
xchg
jge
out
cmc
aam
jle
ds
cmc
sub
sti
ja
add
cmp
je
mov
mov
push
lahf
test
jo
insl
lret
add
outsl
out
xor
sar
lock
fistpl
push
mov
outsb
into
sti
lret
lcall
mov
pop
add
add
js
fwait
mov
in
jae
sub
mov
fucomip
add
and
push
insb
cli
rep
jle
jmp
mov
or
iret
test
inc
mov
dec
testb
push
repz
addr16
inc
stc
call
std
bound
bound
shl
lock
sub
and
push
push
outsl
pop
lock
xor
sub
stc
push
call
cld
fisttps
jb
jle
sub
push
das
sub
add
or
fildl
jmp
jae
test
arpl
cmp
jmp
fildl
push
insb
mov
shl
add
negb
adc
test
cmp
cli
enter
push
mov
inc
and
addr16
and
imul
adc
add
mov
cli
jne
imul
pusha
rorl
fwait
and
mov
pop
add
bound
sbb
and
add
movsl
add
test
mov
cli
pop
ret
pop
adcl
cli
gs
add
mov
add
shlb
lcall
inc
or
daa
je
loop
bound
jo
out
jle
cld
mov
dec
lea
xchg
jp
or
in
aad
jmp
out
mov
movsl
test
add
out
ljmp
mov
jo
andb
andb
mov
imul
cs
inc
clc
jns
rorl
out
mov
inc
lock
jmp
faddl
jg
addl
add
inc
mov
hlt
jmp
push
xchg
sbb
pop
jo
jmp
cmp
fucomi
mov
push
xchg
mov
jbe
jmp
fnstcw
adc
jo
insb
mov
jo
push
fnstcw
and
fisubrs
xchg
fwait
jmp
fldpi
add
ret
or
leave
lods
hlt
or
in
shlb
inc
push
pop
repnz
sbb
fucomi
mov
outsl
test
sbb
imul
fidivl
in
test
jns
add
test
xchg
in
repz
mov
lods
cli
imul
pmaddwd
shrl
test
cmc
cli
jmp
ds
cmp
cli
insl
mov
push
fs
cs
xchg
lret
pop
add
adc
mov
scas
xchg
in
fisttps
out
mov
xchg
mov
cli
into
xor
cmp
push
pop
pop
andb
idiv
ficoml
int3
push
or
sahf
dec
fadds
jmp
rcrb
call
jmp
fldt
cmp
cwtl
add
aam
dec
mov
or
test
pop
mov
pop
orl
inc
clc
add
fiadds
add
pop
xorl
rsqrtps
mov
add
add
jno
push
call
or
lock
inc
lock
inc
cld
outsl
adcb
out
aaa
rcr
jo
incl
pop
dec
sub
xchg
movsb
pushl
xor
inc
pop
add
or
cs
mov
inc
ljmp
xor
pop
aad
dec
cmpsb
cmpsl
push
pop
imul
in
aas
stos
push
xlat
stos
jle
faddl
les
in
and
jg
mov
jns
and
fcompl
lahf
fnclex
pushf
rcr
jmp
add
and
and
ret
repnz
in
fs
push
add
pop
repnz
jne
jo
jmp
add
js
add
xchg
jns
dec
mov
aad
push
test
rorl
mov
sbb
jo
mov
xor
xchg
sub
or
jl
xorl
xorl
fildl
pop
shl
or
in
call
add
jae
pop
cmc
or
das
mov
add
inc
add
jae
fdivl
fiaddl
push
fildl
jmp
xchg
repz
jns
jne
fld
lea
mov
aam
int
jmp
xor
jb
das
mov
int
pop
call
pop
xchg
mov
jge
and
jmp
mov
mov
rcrl
lods
repnz
adc
inc
test
inc
mov
or
call
push
adc
fdivs
sub
pop
inc
clc
xchg
pop
mov
mov
mov
add
bound
mov
jge
int3
mov
idiv
les
jne
scas
xchg
call
push
and
decl
or
push
les
add
pop
lea
cmpsb
call
mov
push
fsin
mov
jne
jo
hlt
jo
push
xchg
jo
jmp
sti
inc
insb
lods
call
in
iretw
call
hlt
sbb
or
mov
call
mov
or
mov
sbb
ret
push
ds
das
xor
add
lahf
jns
test
leave
sbb
add
in
push
jg
xor
aaa
bnd
je
or
adc
xor
call
inc
rcll
dec
cld
push
xor
xchg
in
in
bound
fldt
and
push
or
pop
outsl
fidivs
inc
xchg
pop
loopne
add
lretw
sub
pop
je
out
daa
fidivrs
add
xchg
cltd
push
repnz
ficoml
fstl
pop
mov
ret
jecxz
mov
sahf
cwtl
mov
or
int
data16
pusha
mov
xchg
mov
adc
ret
xchg
addr16
mov
lea
sub
fs
subl
or
jnp
and
mov
sub
add
nop
mov
push
push
sbb
repz
je
repz
lahf
or
xor
outsb
stc
fldenv
ljmp
fimull
push
xor
jns
leave
jle
faddl
setnp
pop
stos
jl
data16
cltd
bound
shrl
ret
jae
add
ss
push
sbb
mov
int
mov
call
pop
xchg
and
enter
jno
push
pushl
mov
push
adc
addl
mov
fsts
jne
cmpsb
repnz
push
cltd
xlat
jnp
dec
sbb
add
or
je
and
add
leave
xchg
sti
xor
sbb
rcrb
mov
movsl
jnp
movsl
xlat
lea
test
add
bound
jo
pop
or
out
adc
add
inc
fdivrl
jne
icebp
mov
push
sti
fnsave
jne
jns
xchg
inc
incl
in
std
clc
mov
incl
jo
test
icebp
sbb
push
cmp
mov
lret
sti
add
xor
sub
rolb
xchg
pop
or
add
shlb
xorl
stos
jns
rorl
jecxz
sub
and
out
pop
xor
dec
mov
xor
jl
sbb
pop
pop
testl
add
add
jo
jmp
add
mov
test
push
sub
pop
sub
lret
rolb
cmpsl
or
cmp
ss
repz
fdivrs
pop
mov
cld
das
nop
outsl
mov
cmc
in
loope
add
sbb
add
push
out
sbb
iret
jo
or
dec
mov
loop
push
out
lock
jo
bound
jge
mov
push
in
jecxz
outsb
and
mov
and
xor
ljmp
pop
out
lds
out
sbb
sub
lock
cmp
out
add
popa
test
and
jge
ja
sub
fstpt
add
int3
shr
pop
clc
incl
cmc
je
shl
adc
add
sahf
cli
test
mov
incl
or
pop
je
mov
pop
negl
loopne
cmp
add
pop
fs
lret
shr
pop
idiv
add
cmc
je
out
adc
adc
lea
pop
shlb
pop
push
adc
rclb
or
loope
pop
fidivs
push
add
inc
das
xchg
ja
je
insl
jmp
jg
jns
or
push
sbb
jmp
iret
sti
test
cmp
jb
mov
rolb
xchg
jp
mov
cmc
es
cwtl
test
sti
cmpsl
mov
mov
add
jne
and
repnz
insl
cmpsl
xchg
cmp
aas
add
lret
in
lds
sar
dec
xor
mov
jmp
repz
out
ret
pushf
lret
scas
out
pop
jl
stos
xor
jl
lret
or
fdivrp
lods
sub
lcall
lock
leave
test
push
daa
idivb
mov
data16
outsl
std
xchg
loope
push
add
cli
add
mov
mov
mov
test
pop
xchg
fs
pusha
mov
adc
iret
add
aam
in
loopne
pop
ds
and
dec
scas
shl
sbb
testl
push
push
into
cmp
pop
adc
pusha
call
iret
xor
test
add
js
lahf
fs
aaa
cmc
loope
call
enter
repz
pop
xchg
mov
loopne
add
adc
sbb
flds
insl
jmp
enter
sbb
out
js
push
addr16
leave
push
and
repnz
xchg
decl
xchg
cs
mov
dec
dec
cmp
negl
in
add
loope
push
add
popa
pop
xchg
adc
or
scas
dec
xor
fimull
cli
loopne
add
push
and
mov
dec
push
add
lcall
test
data16
add
lcall
fimull
add
shr
mov
loopne
jo
add
decb
pop
test
scas
cld
subl
add
sub
popf
imul
inc
js
popa
cld
jo
pop
add
jnp
clc
dec
cmp
jle
icebp
jmp
repz
out
jnp
fcompl
jne
fdivs
hlt
jo
inc
lock
jbe
jnp
dec
or
loop
push
addb
imul
hlt
jmp
pop
clc
xor
or
cli
iret
add
jmp
cmp
js
fucomi
add
out
shlb
loop
jg
push
rol
mov
sub
jp
fistps
add
dec
inc
jmp
fnstsw
push
sbb
in
xlat
jno
cmp
aad
mulb
dec
jp
roll
aam
movsb
lret
jnp
mov
lret
loop
inc
mov
test
jp
fistps
cwtl
lret
mov
fwait
pop
xor
notb
add
jb
push
jb
bound
jmp
jmp
cld
pusha
out
stos
pop
popa
shr
jae
xchg
repz
xor
scas
fadds
out
adc
jmp
dec
fbstp
stos
mov
popa
cmpsl
jmp
add
add
mov
sbb
cmp
repz
mov
popa
stc
lock
fadds
out
adc
add
adc
adc
and
jb
cmp
adc
sub
fcompl
dec
addb
add
xor
mov
xor
test
testl
adc
or
adc
mov
mov
je
popa
shll
int3
shrb
inc
add
add
inc
sbb
ljmp
arpl
mov
adc
add
popa
shlb
clc
inc
mov
inc
and
and
fcmovu
or
inc
fiaddl
push
jg
jp
ja
pop
push
cmp
mov
add
xchg
mov
out
repz
add
fs
lea
std
rorl
dec
add
jo
jne
repz
in
jl
mov
stc
jne
or
push
decl
jne
clc
cs
aaa
mov
xorl
jb
mov
xchg
or
pushf
repz
mov
fiadds
jmp
fstpt
popa
and
inc
ljmp
fimull
mov
xchg
add
repnz
nop
mov
lea
mov
xchg
add
movsb
in
les
ljmp
std
lods
mov
hlt
fldcw
xchg
sbbb
jecxz
paddsw
jmp
stos
add
xchg
ret
add
gs
rclb
testb
filds
push
mov
or
jecxz
in
in
shlb
inc
loope
jg
push
fldl
rolb
clc
shlb
inc
mov
mov
cli
push
loop
aas
lds
cmp
out
jle
js
push
mov
add
jg
pusha
lahf
jecxz
or
rolb
jb
jecxz
lods
imul
in
ret
sbb
mov
or
mov
outsb
and
push
clc
or
aam
addl
add
cltd
mov
std
int3
jnp
mov
scas
add
push
shlb
add
mov
add
and
mov
lea
dec
dec
or
jne
add
xchg
lock
popf
sbb
popf
clc
add
scas
and
push
add
dec
push
jge
or
pop
mov
lahf
aas
mov
inc
lock
cmp
sti
jae
scas
cmpb
in
push
imul
das
add
sti
sub
sbb
ja
dec
sti
jg
xchg
leave
xor
cli
fldl
lods
fld
add
mov
sti
add
xchg
jns
test
cmpsl
adc
cmp
incb
mov
nop
jo
xor
add
dec
xchg
adcl
cmp
ljmp
scas
aaa
cmp
mov
mov
mov
mov
jge
mov
pop
cmp
pop
outsb
push
push
into
ljmp
sub
mov
push
cmp
pusha
xchg
aaa
pop
push
test
es
aad
ljmp
cmp
sub
or
pop
fmulp
mov
movsb
gs
jp
test
popf
repnz
mov
in
or
jecxz
mov
push
sahf
cli
aam
lods
imul
movsb
push
or
push
call
insb
push
or
mov
call
mov
jae
dec
bound
pop
sti
fisubs
je
jge
add
mov
aaa
cmpsb
mov
xor
je
add
add
in
xorb
dec
or
xchg
je
xchg
xchg
bound
lea
xchg
jne
push
lods
jne
mov
hlt
add
pop
ret
sahf
sti
addb
cmp
loop
fwait
ret
inc
out
nopl
adc
mov
dec
or
mov
cmp
in
push
and
test
pop
add
rcll
xor
sub
std
call
push
pop
fdivrs
jl
add
dec
cmpsb
inc
pop
jg
cmp
or
xor
and
cmp
mov
jmp
jne
pop
push
mov
or
fisubrl
mov
dec
dec
daa
jo
adc
ss
cli
jo
mov
sti
jge
adc
or
push
xor
mov
mov
lock
mov
in
xchg
lods
inc
rorl
mov
in
xor
ret
jmp
jg
out
sbb
jo
out
mov
pop
test
and
outsl
mov
fs
mov
jecxz
out
test
mov
sub
dec
out
sbbb
icebp
mov
imul
stc
hlt
daa
incl
pop
arpl
popf
aam
mov
push
cli
xor
push
repz
ficompl
insb
rcll
xlat
jmp
cli
xchg
imul
sub
pusha
insb
pop
ret
lods
xchg
cli
pop
add
dec
push
or
or
inc
cli
xchg
push
jb
push
cli
ss
out
mov
fdivrp
cld
mov
roll
and
jne
arpl
cld
jb
call
pusha
jno
rcrl
mov
rclb
mov
mov
dec
xchg
xor
or
add
xchg
je
cld
jns
cs
add
xchg
pop
je
cld
add
loopne
pop
push
stc
xchg
pop
popf
sti
gs
ficompl
lret
pop
mov
push
out
fstps
cltd
push
int
mov
xchg
mov
and
xchg
mov
int
je
sbb
into
jmp
add
adc
jne
add
add
add
fidivs
leave
add
dec
push
or
dec
inc
mov
icebp
es
push
push
adc
inc
inc
adc
jg
push
test
cmp
add
ljmp
test
daa
scas
inc
inc
sar
xchg
sti
hlt
add
or
fnstenv
adc
in
xchg
jl
pop
sbb
rol
push
xchg
xor
out
xchg
mov
adc
xchg
test
out
jo
mov
stc
and
pop
inc
je
in
jle
xor
addr16
fadds
in
movsl
call
sbb
fwait
cmp
mov
fidivrl
add
push
fsubrs
fcomps
or
out
fimull
push
fcmovne
sub
inc
sbb
js
in
mov
xchg
push
sub
fs
jmp
xor
push
rol
and
xchg
daa
push
jnp
pop
adc
fldt
jnp
add
call
cli
jb
lret
xchg
or
push
cmpsb
int
in
inc
xchg
fnstenv
in
leave
or
xchg
mov
out
repnz
cli
xchg
mov
ss
outsb
pop
imul
shl
mov
lock
pop
push
pop
mul
outsb
pop
push
dec
push
xlat
xchg
push
inc
ss
xchg
insb
out
cli
test
sbb
add
mov
sbb
cmp
out
test
xchg
out
inc
add
xchg
add
scas
out
xchg
or
sbbb
inc
add
fwait
push
adc
cli
jae
sarl
adc
dec
idiv
outsb
add
rcll
test
decl
inc
aam
adc
mov
adc
fsubl
adc
sub
dec
rclb
adc
call
add
jmp
test
cmp
or
pop
mov
outsl
jp
jns
push
shr
adc
mov
mov
xchg
cli
dec
mov
xchg
or
adc
push
sti
lcall
fs
or
xchg
add
mov
mov
cmp
hlt
sub
xor
push
add
inc
xor
jo
dec
clc
pop
lret
nop
dec
cmp
fcmovnb
xchg
push
jnp
daa
dec
push
add
pop
push
divl
mov
push
add
in
loop
add
leave
out
dec
fsubl
jg
push
test
daa
or
mov
fnstsw
shl
mov
cmpb
sbb
les
hlt
fldt
cmpsl
pushf
not
iret
add
push
shl
mov
jmp
pop
sub
addr16
ja
std
repnz
inc
loopne
and
enter
push
rcrb
dec
insb
fildl
lcall
stc
add
add
jb
shll
test
call
jae
aad
add
mov
sbb
jmp
fildl
bound
inc
or
inc
push
int3
rcl
jmp
cmp
mov
cli
jbe
shlb
xor
jo
lret
mov
pop
popa
dec
add
cmp
mov
arpl
jne
enter
fadds
add
rcr
adc
fimull
or
cmc
pushl
mov
lea
not
int3
lcall
xchg
test
and
sbb
mov
out
cmc
jmp
rol
sbb
rorl
push
gs
mov
rcll
adcb
mov
loopne
push
inc
mov
dec
xlat
add
test
call
test
notb
aaa
inc
aam
sbb
xchg
inc
sbb
verr
jnp
insb
cmp
aaa
mov
add
mov
inc
in
lods
jge
in
scas
sti
stos
add
push
mov
jbe
dec
fiaddl
mov
sub
aaa
popf
roll
test
popf
mov
ret
xchg
adc
jl
add
or
mov
mov
rcl
add
mov
out
ja
loop
filds
jge
push
test
cmpsl
add
push
sub
testb
stos
out
adc
fistl
fwait
int3
xor
sub
cs
dec
jmp
call
scas
iret
inc
cmp
jne
jmp
mov
sub
add
adc
cmp
jo
sbb
scas
jge
flds
jo
and
mov
jne
and
fadds
aad
outsl
sbb
jmp
rclb
pop
sbb
jo
cmp
lret
jne
inc
shlb
inc
in
lahf
in
fnstenv
fildl
lods
mov
pop
adc
iret
dec
xorl
jae
stc
je
arpl
scas
cmp
jb
imul
js
stc
hlt
fcmovnu
inc
jmp
jne
dec
lods
sti
mov
je
popf
adc
arpl
add
outsb
add
aaa
pop
add
mov
pop
cmc
adc
push
push
jecxz
adc
filds
adc
enter
xor
xor
notb
add
or
or
aad
add
ljmp
xor
outsb
add
hlt
push
xchg
adc
sbb
mov
js
les
push
add
jl
je
push
je
cs
push
fdivp
loopne
dec
fisttps
mov
divl
inc
pop
pushf
fisubrs
xor
pop
rclb
cli
cli
jge
adc
cmp
jnp
movsb
sub
sti
add
inc
add
adc
or
je
dec
cmp
xchg
jne
fidivl
in
mov
jb
dec
in
ret
fisttpl
cld
inc
ret
cmpsb
sub
aaa
mov
jne
cltd
adc
xor
data16
cmp
jmp
xchg
jecxz
jp
sti
jge
cmpsl
push
sti
out
mov
lods
add
push
sub
mov
xor
add
lahf
inc
fisubs
dec
rorb
stos
dec
pop
lods
sbb
mov
gs
and
das
xor
ss
sbb
xchg
dec
dec
jnp
les
pop
fdivp
test
out
es
mov
out
pop
cmp
mov
stos
add
pop
test
mov
mov
cld
pushf
clc
mov
test
fisubs
add
push
cld
push
inc
loope
faddl
in
pop
jmp
cmpsl
mov
sub
push
gs
cli
jb
rol
out
rorb
les
sub
mov
sbb
pop
jne
add
push
adc
cli
test
jne
sbb
test
jg
stc
hlt
out
in
inc
jmp
push
aaa
add
rorb
decl
push
push
jmp
adc
fists
add
push
mov
mov
add
add
sub
call
dec
lcall
or
out
inc
add
mov
add
ljmp
push
jmp
adc
fiaddl
add
divl
jno
or
jo
call
notl
mov
lock
and
add
push
jl
dec
mov
lock
pop
inc
lds
ljmp
pusha
push
inc
jo
lds
cs
mov
inc
or
mov
push
adc
ret
es
out
mov
cmp
and
mov
out
lds
sbb
xor
add
repz
js
add
jmp
mul
outsl
insb
test
add
fsubr
mov
sbb
inc
push
pop
loopne
dec
pop
pushf
les
test
fwait
xor
or
insb
add
lods
fldt
add
fwait
adc
cmpsb
dec
loopne
insl
or
test
gs
cmpsb
sti
mov
ficoms
outsl
fucomi
push
out
es
and
push
adc
cmp
dec
lret
pop
out
jo
std
xchg
call
das
mov
adc
es
aad
add
push
pop
add
push
shrl
cli
fdivp
inc
adc
push
notb
dec
sar
fdivl
jmp
jmp
add
stc
inc
pusha
adc
cld
mov
mov
jae
xor
in
out
fnstenv
fistpl
mov
mov
fcmovbe
stc
fsubl
je
inc
rclb
sbb
scas
sub
mov
dec
lock
fildl
cli
and
dec
jmp
insl
sub
bound
popa
pop
incl
call
test
lds
xor
or
inc
iret
cmc
jbe
jp
adc
icebp
or
push
ret
notl
lcall
call
notl
jae
cmc
jbe
inc
stc
push
sub
inc
add
adc
data16
or
inc
aas
sbb
dec
jmp
adc
ficoms
mov
or
out
cmc
jne
sub
inc
add
ficoms
jo
jbe
lock
push
out
add
mov
das
sub
mov
aaa
mov
jecxz
jo
decb
hlt
leave
pushl
insb
jl
mov
out
and
div
js
pop
pop
bound
pushl
mov
cld
cltd
decl
mov
push
push
and
add
and
in
pop
cmp
push
fildl
add
cmp
mov
ja
in
lods
mov
cmpsl
mov
dec
inc
dec
shll
data16
incb
lock
jno
cmpb
add
jo
gs
rol
push
sub
jle
shrb
mov
rclb
sub
out
push
xor
mov
repz
push
add
lock
lods
jnp
out
adc
sub
lock
lcall
test
push
cli
mov
adc
rcll
adc
push
fs
aas
add
jae
jmp
push
aam
cli
jmp
sbb
shll
in
fdivs
mov
add
lahf
xchg
mov
in
aas
in
leave
mov
call
xor
push
test
test
ja
add
push
sldt
cmc
xlat
add
loope
or
jne
loop
and
add
sti
and
jne
mov
repz
cmc
je
mov
add
aad
add
sub
nop
sbb
add
or
mov
pop
add
cs
add
lock
lea
test
mul
cmpsl
xor
add
inc
rcrl
pop
ret
in
dec
in
xorl
cmpsl
push
xchg
mov
mov
cmp
enter
mov
push
jbe
push
pop
pop
push
sti
jge
repnz
jo
mov
lea
int3
mov
add
inc
mov
mov
movsl
mov
sti
std
cs
call
add
negb
sti
jo
sbb
jo
rclb
cmp
inc
hlt
pusha
movl
addr16
lcall
pushf
jecxz
outsl
sub
pop
dec
xlat
sub
inc
loopne
std
shrb
testl
aaa
adc
fs
call
push
jo
out
add
mov
pop
sub
adc
sub
jo
out
sbb
mov
sti
movsl
mov
push
shll
add
out
hlt
xchg
add
lods
mov
add
mov
sub
fsubl
andl
lea
inc
aam
addr16
jae
stc
testl
mov
call
bound
mov
xor
hlt
lcall
shl
in
mov
out
push
in
testl
inc
jmp
loopne
in
js
stc
hlt
jmp
inc
jmp
mov
add
sub
dec
push
adc
inc
add
xlat
add
ds
mov
mov
push
cs
leave
xlat
add
push
xchg
add
addl
mov
jne
lods
flds
push
data16
adcl
add
movsl
sbb
sbb
pop
rcll
inc
and
out
cmc
rcll
shll
aas
adc
sahf
adc
adc
mov
add
fsubrs
xchg
mov
jg
enter
mov
mov
jg
mov
test
mov
loop
sti
add
xchg
adc
cmp
jl
inc
adc
jg
daa
push
mov
adc
les
lea
mov
das
imul
mov
add
mov
jb
jle
pushf
pushf
dec
cmpsb
mov
data16
aas
sub
mov
push
loope
lods
adc
jl
lret
mov
jp
pop
ret
xchg
pop
xchg
in
mov
inc
pop
cmp
add
push
pop
pusha
mov
mov
aas
out
xor
test
fwait
into
fimull
add
mov
pop
negb
mov
call
add
jo
add
jecxz
xlat
pop
iret
daa
sahf
gs
xchg
cmc
push
shrb
mov
mov
xchg
mov
xor
loopne
ret
leave
or
mov
xchg
jo
add
lods
fbld
mov
jmp
inc
mov
cmc
mov
and
stc
ret
add
dec
inc
dec
lret
and
jae
push
inc
cmp
add
jo
or
jo
ffreep
sub
push
and
icebp
fs
call
sbb
in
fisubrs
sbb
adc
inc
pusha
in
push
ljmp
fucomp
mov
out
mov
out
addl
push
or
out
rorl
push
add
add
push
cmpl
mov
inc
sub
fildl
cmp
dec
imul
fidivl
jne
rorl
mov
int3
in
adc
push
idiv
sbb
rcr
push
test
xor
sbb
jb
lret
pushf
push
imul
int3
call
in
mov
push
sahf
pushf
ss
lcall
test
sub
inc
rcl
cli
jb
mov
xchg
jne
rcll
into
lods
sub
jb
test
sub
push
mov
repz
std
sti
add
outsl
ja
rdtsc
push
xor
jbe
xchg
sti
dec
ret
hlt
add
push
sti
jle
test
cmp
jle
mov
dec
add
add
jae
jge
ret
jb
or
push
repz
jecxz
ret
xor
repnz
insb
bound
in
xchg
xor
or
lods
mov
mov
mul
out
test
out
das
or
insb
jg
mov
cltd
mov
loopne
mov
cmp
in
roll
and
cmc
out
in
jbe
add
movsl
pop
dec
jmp
flds
sub
notb
sub
test
pop
insl
add
jae
dec
inc
insl
cmp
add
out
pop
in
mov
cmpsb
out
aad
mov
insl
mov
jns
mov
sub
push
mov
insl
mov
popa
push
xchg
jl
call
inc
push
inc
mov
cmc
fmul
adc
mov
subl
lret
mov
adc
stc
push
fwait
jne
fsubrs
push
adc
xlat
jns
or
mov
dec
filds
sbbl
test
jl
or
ljmp
loope
cmp
or
cmc
ljmp
cmpsb
mov
xor
add
leave
movsl
test
rclb
add
jp
xchg
nop
shll
mov
mov
cmp
loop
sub
fadds
add
mov
mov
xor
out
jp
jo
adc
jae
repnz
jae
decb
adc
inc
adc
mov
mov
xor
dec
clc
push
subl
sahf
daa
xor
addl
mov
dec
icebp
pop
data16
jg
ret
adc
inc
xor
or
scas
push
push
lahf
xchg
adc
xlat
rorl
jmp
je
inc
or
xchg
jnp
mov
cmp
rolb
xor
mov
dec
fistpl
xor
mov
rcll
adc
lea
cmp
hlt
sub
movsl
xchg
rol
xchg
sbb
popw
jl
push
mov
mov
lds
loopne
mov
loopne
mov
loopne
mov
iret
popa
sbb
fdivs
mul
add
lcall
inc
inc
loop
jno
jae
push
leave
daa
add
stos
addr16
mov
add
cmp
add
je
sub
nop
out
fdivl
ret
or
ss
adc
rcrl
lret
inc
jmp
notb
push
cwtl
pusha
or
sub
or
aam
cli
je
jecxz
ss
mov
loope
cs
pusha
pop
mov
fsubr
lret
data16
jne
lock
add
popf
pop
je
sbb
xchg
jo
stc
jmp
lretw
stc
jmp
dec
cmp
arpl
loopne
popa
pushf
daa
or
lret
stc
fistpll
jg
fnsave
jbe
xchg
out
jne
inc
je
xchg
push
push
sbb
addl
outsl
jne
rclb
rcr
call
mov
pop
jl
mov
adc
add
jmp
dec
xor
mov
cld
call
es
call
inc
movsl
push
pop
xor
add
icebp
dec
mov
fldt
add
sbb
mov
pop
idiv
lods
sbb
shrb
jns
sub
hlt
repz
dec
mov
mov
add
add
or
pop
nop
clc
aas
jo
lds
testl
sti
fmull
add
add
jg
mov
xchg
out
push
in
call
add
les
push
jmp
notb
xor
shl
fcmovnu
jnp
inc
mov
jb
cmp
sti
inc
mov
sub
testb
fisttpl
stc
adc
cmp
fucomi
add
pop
daa
scas
inc
xor
scas
aad
add
inc
mov
mov
daa
inc
scas
adc
cmp
jl
test
flds
repnz
sbb
bound
xchg
or
push
cmp
lods
ret
cmp
push
inc
xchg
fldt
inc
xchg
lret
lods
out
jo
jo
dec
scas
xchg
xchg
mov
fidivs
lods
jnp
cmp
lods
add
mov
push
repz
dec
bound
push
bound
add
sbb
out
fwait
jne
and
mov
insl
fildl
push
in
pop
loope
popf
jmp
lods
sti
bound
xlat
dec
fs
mov
out
loopne
mov
cli
inc
cmp
push
out
ret
test
scas
dec
mov
out
cli
scas
add
mov
test
jbe
push
test
adc
add
push
push
dec
adc
xchg
add
int
cli
mov
fdivrs
sahf
ljmp
orl
xor
sub
imul
cmp
idiv
xchg
cwtl
je
xlat
push
testl
xchg
aam
jmp
in
push
rorb
leave
rolb
incl
call
dec
pop
divb
dec
or
roll
push
push
and
pushl
adc
ret
js
jg
lahf
movsl
out
gs
mov
push
xor
mov
fisubl
clc
and
ss
into
xor
das
lds
aam
jg
mov
negl
xchg
xor
clc
push
seto
adc
sub
frstor
and
add
inc
aaa
add
sbb
mov
outsl
aas
add
mov
add
stos
std
xchg
jle
call
inc
jo
rcrb
hlt
fwait
hlt
add
enter
or
and
dec
clc
pop
int
add
pop
cmp
lods
xchg
cwtl
fwait
xchg
call
xor
xor
fwait
jp
call
cld
push
fwait
test
idivl
adc
ds
jge
clc
enter
stos
pop
les
leave
ljmp
sbb
pop
daa
add
adc
and
jge
loopne
test
movsb
xor
add
fisubrs
or
sub
popa
inc
loope
cli
add
mov
add
ja
test
cmc
test
add
cmpsl
add
sar
stc
jmp
out
push
inc
or
lods
push
inc
add
icebp
push
std
cwtl
push
in
adc
add
xor
add
xor
mov
fiaddl
push
mov
or
flds
fcomp
xchg
inc
pop
xor
sbb
mov
push
pop
dec
cld
mulb
inc
in
jg
add
push
call
rcl
or
mov
jl
out
dec
push
out
mov
in
addl
inc
and
adc
imul
pop
mov
fs
fdivrl
dec
adc
lret
into
mov
ljmp
mov
decl
sub
adc
mov
les
inc
call
cmp
aas
adc
sub
add
cmp
aas
add
jbe
mov
stos
jnp
adc
adc
jg
mov
or
sbb
ja
mov
add
mov
or
mov
sbb
mov
lock
mov
jg
lahf
popa
inc
xchg
push
and
sti
push
popf
clc
xor
pushf
shl
cmpsb
aad
insl
sbb
divl
movsl
sti
cmpsl
xor
sbb
push
daa
add
js
add
mov
call
rorl
push
lods
lahf
dec
aad
les
sahf
movsl
lahf
call
sbb
negl
or
stc
adc
add
fsubp
sbb
pop
fisttpl
sbb
cmpsl
add
xchg
or
and
xchg
mov
mov
sub
inc
cli
mov
add
pop
inc
dec
call
xlat
push
add
aas
std
jmp
ja
test
mov
call
in
adc
dec
insb
mov
out
sbb
inc
sub
mov
jle
out
mov
sub
ret
add
lds
cmp
inc
add
sub
aaa
xchg
dec
add
push
mov
daa
adc
rcrl
xchg
inc
add
push
cmovbe
sti
lds
or
lea
fildll
leave
lret
cmp
imul
push
mov
ret
data16
dec
push
mov
pop
fadds
pushw
cmp
rcrb
jo
sub
or
pop
mov
xchg
cmp
push
mov
mov
shlb
movsb
adc
call
jnp
mov
xchg
inc
cmp
imull
aas
inc
into
stc
cs
add
jo
sub
sti
scas
mulb
lret
jne
adcl
add
sti
or
push
insl
mul
out
loope
sti
stc
jb
or
jle
xchg
fsubrl
lcall
call
sti
inc
cmp
jl
xor
pusha
push
sbb
push
aam
mov
mov
jno
adc
cmp
mov
mov
mov
popa
sub
pop
push
mov
mov
mov
loopne
sarb
sub
bound
les
mov
jno
adc
cmp
roll
mov
mov
jno
push
leave
test
sub
or
jecxz
loopne
sub
or
mov
shrb
jmp
mov
mov
fcoms
push
mov
jns
push
bound
mov
jb
mov
xchg
push
add
xlat
call
jo
xlat
test
mov
movsl
mov
lods
pop
je
dec
pop
ret
pop
dec
add
push
icebp
scas
and
lods
jae
ret
mov
add
pop
pop
adc
sbb
jle
sbb
add
divb
or
add
and
add
frstor
xor
add
cmp
jns
int3
rcrl
mov
sbbb
add
pop
stc
add
xor
mov
mov
bnd
jns
rcrl
inc
fldl
lcall
dec
xlat
add
sub
out
add
jo
cltd
inc
add
mov
cmp
outsb
add
xchg
mov
xchg
mov
add
loopne
or
add
shlb
or
jb
add
lret
mov
clc
jno
push
ret
add
movsl
dec
jb
add
mov
add
leave
lahf
bound
enter
add
mov
add
out
add
pop
fdivrs
adc
addr16
mov
neg
in
dec
mov
mov
in
aas
push
lods
pop
mov
sbb
jmp
fucom
pop
outsl
jmp
aaa
xor
add
fisttpl
add
arpl
xorb
mov
push
cmc
aas
into
sbb
jmp
add
sbb
xchg
cmpsl
sbbl
xchg
sahf
adc
js
fistl
andl
test
jmp
pop
movsb
cli
push
out
lcall
cs
cli
daa
push
fcoml
mov
mov
sub
fists
jl
or
lahf
add
hlt
cmpsl
ds
mov
lcall
mov
cli
scas
outsl
dec
hlt
sub
cmpsb
jg
movaps
aad
pop
add
push
mov
jae
xchg
dec
jmp
inc
dec
loope
nop
movsb
xchg
cli
je
xor
std
jle
test
cmc
int
sbb
add
nop
cmc
lret
push
jle
clc
adc
fcoms
frstor
idiv
adc
or
fistpll
call
adc
inc
mov
cld
pop
lret
push
inc
add
inc
add
xor
jo
ret
xchg
std
xor
repz
call
cs
add
pop
in
icebp
or
fadds
je
push
rcll
shr
push
xchg
ret
or
push
rcll
or
lea
aam
sti
in
ss
mull
sti
jno
pushl
test
add
data16
outsl
or
jg
imul
add
das
add
xor
jg
fdecstp
sbb
sub
std
daa
rclb
out
xchg
push
pusha
mov
cmpsl
mov
fcoms
inc
mov
ja
pop
clc
bound
pop
loope
xor
outsl
add
sbb
lea
out
and
mov
and
add
out
dec
out
push
pop
pushf
clc
add
sub
xchg
add
fstl
mov
cmp
bound
sbb
ffree
xchg
je
add
cmc
fidivrl
sub
lea
mov
pop
shl
xchg
je
fcmovnb
sub
ret
or
push
dec
mov
aam
xchg
je
lret
sbb
ds
flds
pusha
shll
inc
fwait
dec
sbb
flds
lcall
jmp
bound
jb
ret
shr
sub
sub
icebp
adc
jae
sbbb
pop
inc
out
dec
jge
jae
adc
add
jns
dec
and
xchg
or
call
or
je
sbb
add
or
psubsw
int3
pop
jne
ficompl
sti
dec
add
stc
mov
sbb
or
xchg
aaa
jmp
call
mov
divb
das
mov
in
jne
add
pop
divb
arpl
or
mov
mov
or
cmc
mov
jge
pop
or
jge
repz
pushl
and
jl
adc
std
xor
inc
popa
jge
mov
xlat
enter
cli
sahf
or
pop
dec
jp
push
or
jp
insb
jp
xchg
cmp
dec
js
cli
pushf
ficomps
das
pop
shl
jl
icebp
and
sti
pop
jmp
repz
testl
jne
pop
or
mull
in
mov
add
sbb
out
add
and
shr
adc
call
stos
orb
xchg
outsl
je
cld
stc
push
fsub
add
pop
and
stc
outsb
ret
call
fistl
mov
sarl
outsl
jl
lock
repnz
sub
lock
add
gs
push
fildl
out
pusha
rcll
push
fildl
jmp
jno
and
push
loope
enter
cmpsb
in
add
jmp
or
cli
xchg
pop
icebp
fs
addb
std
or
mov
lods
jae
adc
sbb
bound
lcall
clc
or
add
jae
or
out
xchg
xor
xchg
andb
gs
roll
je
gs
jns
enter
xchg
push
or
scas
adc
unpckhps
add
cltd
pushw
lea
addl
add
dec
xchg
pusha
dec
or
movsb
push
mov
push
enter
stos
lea
stos
jnp
dec
test
inc
add
sbb
push
mov
pop
jge
dec
adc
nop
sbbb
lahf
jo
icebp
jle
repz
xor
mov
xor
cli
xlat
push
je,pt
sub
adc
movsb
jns
xor
scas
ljmp
inc
cli
incl
xchg
cmpb
test
test
pop
add
jmp
repz
pop
add
js
dec
sub
and
jnp
les
addb
add
add
mov
mov
xor
setae
js
daa
fcomps
fistl
sub
xchg
gs
pop
fsubl
add
fsubrs
enter
push
adc
addl
jbe
mov
mov
sbbb
mov
test
arpl
and
sub
inc
add
fdivl
mov
imul
sahf
mov
adc
iret
daa
add
jg
push
ret
iret
out
xchg
add
test
insb
fildl
je
mov
jbe
out
fwait
add
jae
inc
cmc
bnd
jo
out
fsubrs
xchg
cli
jb
pop
repz
inc
aaa
add
jae
jl
jae
inc
mov
xchg
cli
mov
pusha
test
sbb
repnz
lock
jne
ljmp
xchg
xchg
jmp
scas
lock
add
jae
cli
aad
pop
shlb
mov
test
xchg
cli
add
pop
and
sbb
adc
shll
mov
rcll
push
sub
xchg
ljmp
or
adc
push
push
rcll
mov
pop
lds
pop
je
xor
call
test
mov
add
fildl
jge
fnsave
aas
pushl
sub
xchg
test
push
push
jle
jne
cmp
adc
dec
popf
cli
mov
dec
jmp
ss
test
hlt
addb
pop
pop
add
repnz
bnd
pushf
test
push
push
and
jne
fdivs
add
in
addr16
add
gs
adc
mov
sbb
pushl
mov
jae
add
mov
mov
cwtl
mov
cmp
or
cli
ss
mov
adcl
sar
mov
out
hlt
fisubrs
and
int3
fsubrl
rcrl
pop
or
cmpsb
sub
or
out
incl
xor
mov
lds
xlat
pop
in
and
lcall
push
or
in
sub
xchg
ficoms
jae
clc
jo
adc
sub
add
nop
std
imul
into
sbb
xor
mov
fisubrl
add
mov
ja
sbb
jmp
mov
lods
jae
popf
leave
jbe
add
sar
addr16
cmp
add
fists
jnp
sti
sub
jmp
sti
cld
mov
inc
jmp
enter
dec
xchg
addb
sub
jb
sbb
push
cmp
jae
call
insl
xor
test
je
add
fidivrl
call
clc
ds
jae
imul
out
inc
add
jnp
imul
fnstcw
pop
fiaddl
mov
aaa
xlat
add
xchg
cli
mov
and
add
add
shll
push
mov
decb
inc
and
arpl
je
pop
jne
mov
fld1
mov
or
lea
adc
mov
cmp
rolb
lock
in
adc
push
call
or
and
mov
mov
jo
mov
clc
cmp
pop
mov
stc
and
adc
xor
jno
jmp
fdivr
mov
lcall
sbb
sub
jno
je
add
pop
pop
data16
lods
sahf
out
out
xchg
adc
addb
dec
jnp
inc
xchg
stos
into
mov
in
fimuls
or
mov
incl
stc
pop
lahf
cmpsl
add
addb
jno
sbb
decb
lock
cld
loope
ja
sbb
pop
orb
fimuls
les
nop
or
xor
cmc
pusha
mov
xchg
jmp
pop
les
cmc
adc
sarb
cltd
in
add
add
mov
sti
arpl
call
sti
iret
xchg
jo
push
sub
jb
sub
add
mov
xchg
add
jmp
add
data16
jae
xor
inc
mov
fsubr
jmp
test
js
test
int3
fnsave
jae
cld
insb
notb
sub
call
jb
addb
add
sbb
lret
int3
sub
mov
das
mov
pop
jae
clc
jbe
mov
das
addb
push
push
sub
inc
jmp
cmpsb
andb
xchg
pop
mov
sbb
xor
and
cs
mov
mov
addl
jecxz
adc
xchg
pop
add
ror
je
rcr
test
pop
ljmp
dec
icebp
sbbb
adc
add
sub
add
rorl
jne
pop
xor
fldl
jle
mov
je
adcb
ds
mov
and
outsb
push
dec
ja
es
mov
bound
jg
adc
jo
repnz
ds
adc
xorb
cmp
inc
pop
incb
lret
push
test
std
pusha
jg
xchg
rcll
sahf
int
mov
out
cli
pop
xchg
jo
inc
inc
repz
jne
sbb
sar
aaa
inc
push
ret
gs
jne
sti
jmp
adc
jge
xor
fldenv
push
add
push
sbb
xlat
mov
sar
aaa
inc
call
jmp
bswap
pop
jp
sub
divb
xor
sub
push
lods
js
jne
outsl
fisubrl
les
pop
jne
test
pop
mov
jae
cmpsb
idivb
mov
xchg
mov
insb
dec
cmp
and
push
notb
sub
push
mov
add
push
movsl
ja
push
xor
shr
rorl
ret
int
jmp
stos
pop
mov
mov
push
movsl
ja
push
add
das
std
xchg
mov
jb
pop
stos
pop
jne
sbb
inc
out
jne
add
js
and
mov
filds
xor
ja
test
ss
adc
je
ja
mov
sbb
cli
gs
gs
mov
mov
and
inc
jmp
pop
and
mov
sub
mov
cs
addb
mov
fimull
out
adc
cli
test
lods
jmp
fstpl
dec
call
into
mov
call
dec
mov
call
loop
push
pop
mov
lods
xor
mov
jne
pushf
jp
mov
inc
data16
cmp
in
inc
add
cmp
mov
cmp
nop
cmp
push
cmp
jbe
cmp
jne
cmp
icebp
add
jae
mov
je
xchg
lock
adc
cmpl
repz
mov
mov
ljmp
jo
shl
jb
aaa
cmp
jg
cmp
mov
pop
pop
repnz
jae
ja
cmp
incb
cmp
inc
or
and
pop
dec
sub
jae
outsl
jae
xor
int3
decl
imul
add
add
addr16
aam
push
jo
out
xor
add
cmpsl
enter
push
repz
call
push
jb
add
cmp
icebp
xor
xchg
xor
iret
jnp
psraw
test
pop
add
out
xor
xchg
add
and
pop
loopne
call
push
ja
outsb
mov
or
dec
imul
rolb
or
push
pushf
and
ja
addb
inc
sbb
dec
imul
rorb
pop
rolb
mov
pop
jne
and
inc
icebp
mov
push
inc
jno
dec
pop
mov
lea
popa
outsl
push
sub
sbb
pop
inc
mov
in
popf
xlat
sbb
mov
adc
jno
in
sub
pop
jl
notl
pop
pop
add
out
icebp
xchg
sti
push
xchg
and
roll
pushf
add
sbb
icebp
push
cli
push
sub
rolb
adc
add
leave
fimuls
cmc
loop
mov
mov
mov
into
and
out
pop
clc
xor
jp
je
add
jae
or
aas
jae
pop
clc
cmp
in
mov
pop
repz
mov
add
cmp
daa
shr
pop
loopne
fxtract
pop
xcrypt-ctr
cmpsl
sbb
std
jg
into
cli
fstps
sbb
lret
pop
add
mov
ret
and
and
das
jno
leave
das
jb
cmp
or
cmp
or
repnz
arpl
iret
cmp
shrl
mov
incb
mov
mov
mov
mov
cltd
icebp
and
and
sti
ja
js
pop
jne
rol
std
inc
std
pop
jg
lahf
cmpl
mov
sti
cmovo
mov
orb
pop
mov
sub
jbe
inc
shrl
arpl
mull
out
cmp
adcl
lds
xor
sub
es
and
jno
das
andl
loope
out
mov
out
ja
aad
outsl
sbb
jle
push
fnstsw
jg
daa
addr16
call
sbb
push
xor
xor
sbb
sub
jl
jo
lock
xchg
pusha
bound
pop
pmulhw
sbb
push
pop
adc
pop
sarb
orl
repnz
repz
jns
push
jne
inc
roll
icebp
shrl
xorl
mov
fidivl
std
adc
add
shl
and
jb
xchg
xchg
ja
inc
popf
out
adc
add
scas
stc
cli
int3
fwait
sti
add
cmp
and
xlat
cmp
aas
roll
add
jecxz
aam
and
nop
filds
decl
dec
push
push
jle
or
les
je
inc
xchg
repnz
add
mov
fucomp
jae
inc
add
adc
xchg
inc
notl
sbb
or
shlb
jge
in
stc
xchg
sti
sbbl
imul
cmp
les
jno
cmp
add
sub
and
jb
mov
mov
test
pop
jne
in
gs
adc
mov
or
jl
loope
jne
cwtl
push
outsb
ljmp
enter
push
jmp
test
add
cli
add
mov
pusha
jne
sti
sar
mov
dec
push
and
mov
push
sub
test
add
je
aaa
add
jge
daa
push
sub
in
dec
call
push
aas
xchg
mov
xlat
addr16
ja
sbb
xchg
rcr
push
push
movsl
pop
iret
xchg
mov
mov
test
roll
pop
push
loopne
insb
sub
jg
mov
pusha
iret
ss
and
out
and
push
cmp
inc
addb
add
je
test
push
adc
sbb
repnz
sarb
cld
adc
repz
test
pop
ljmp
push
hlt
sbb
jle
nop
cmp
cld
adc
mov
or
data16
pop
jae
cli
jl
adc
popf
roll
out
nop
clc
subl
aaa
push
or
mov
sub
add
xchg
add
punpckhwd
mov
jne
add
jmp
data16
notb
jmp
jmp
adc
mov
add
mov
and
add
add
mov
push
and
xchg
sbb
jne
aad
mov
call
cmp
mov
add
jmp
in
leave
filds
add
dec
push
gs
pop
jo
leave
divb
movl
jo
scas
les
mov
insb
das
inc
pop
test
mov
mov
pop
push
je
add
or
pop
or
stos
test
pop
test
incl
adc
push
incl
scas
mov
rorb
xlat
cmp
bound
sti
stos
mov
inc
mov
repnz
addl
pop
je
fisttpl
inc
inc
push
lcall
adc
adc
jp
mov
jmp
pop
mull
clc
mov
and
xchg
data16
mov
mov
and
jo
pop
jo
xchg
mov
fs
adc
add
or
mov
or
iret
cmpsl
add
push
sub
fcomp
fwait
and
push
sbb
sub
lea
out
clc
mov
lret
add
mov
lea
int3
inc
jmp
mov
jne
insb
add
out
rcl
add
js
adc
popa
mov
or
int
add
add
jmp
xor
test
es
or
push
jno
shrb
fistl
push
jo
xchg
xorb
out
dec
xchg
call
ja
movsb
sub
push
fs
jae
xorl
add
push
iret
test
pop
xchg
sub
aam
test
and
cmpsl
push
call
adc
test
and
sub
jne
sub
lea
incl
pop
shll
loop
cmp
divb
fidivs
add
sub
jmp
or
test
jne
adc
add
adc
adc
sub
adc
add
add
shl
jo
data16
in
pop
pop
ljmp
sbb
cli
cli
test
aas
jo
insb
cmpsl
xchg
push
test
loopne
sti
pop
lock
jo
cmp
inc
xor
sub
mov
sub
mov
pop
das
dec
push
call
add
out
push
ret
jmp
repnz
enter
push
scas
dec
sti
mov
ljmp
or
cmp
std
adc
pop
cmp
cmpb
jne
inc
imul
jo
outsb
mov
aas
lcall
sub
ds
insb
pop
jne
mov
cmpsb
je
or
iret
lret
out
xchg
pop
push
xchg
lock
or
mov
je
or
iret
sub
pop
fistpl
pop
push
pop
testb
pop
gs
ret
testl
cmp
fwait
add
iret
inc
jmp
sub
add
pushl
mov
into
sub
mov
xor
push
hlt
roll
and
fisubrs
out
clc
mov
sub
push
mov
filds
sbb
xchg
jmp
add
mov
fwait
jo
add
hlt
lahf
jmp
xorb
inc
movsb
jno
gs
arpl
fiaddl
jmp
fs
sti
jmp
xlat
mov
or
adc
add
xchg
cli
mov
and
call
adc
in
cmpsb
or
mov
push
add
in
std
cmpsb
or
jl
or
mov
je
test
int3
sti
icebp
jmp
sub
cmp
adc
fs
adc
notb
jp
out
je
testb
or
shlb
inc
adc
cmp
mov
je
add
lock
inc
stc
mov
leave
cli
fildll
adc
cs
dec
mov
int3
add
jno
decb
push
push
xor
in
out
dec
call
hlt
inc
add
pop
or
add
jp
jne
in
fmuls
pop
scas
push
sti
fnsave
repnz
cmp
lods
push
mov
pop
adc
addr16
push
push
daa
addr16
call
jmp
mov
fisttpl
in
out
add
mov
add
rol
out
gs
xor
loope
add
xor
mov
ret
pop
mov
jb
or
sub
jo
xchg
mov
inc
cld
lret
outsl
or
imul
jge
push
ret
mov
shlb
mov
adc
inc
je
xor
dec
pop
test
filds
add
add
outsl
lea
or
les
in
push
std
imul
xchg
int
add
adc
je
cmp
push
iret
adcb
js
xchg
cs
push
add
stc
add
pop
psubd
and
mov
or
and
jp
jne
inc
jb
test
mov
adc
sbb
icebp
sub
adc
clc
adc
stc
add
push
push
lea
movb
jle
idiv
and
mov
mov
add
push
cs
loop
add
lea
sub
stc
mov
addb
int3
lods
inc
pextrw
scas
inc
cld
stos
fildl
add
fdivrl
lcall
mov
inc
or
pop
inc
fsubrl
and
add
push
or
add
pop
inc
fdivrl
je
jo
imul
in
inc
xchg
xor
inc
leave
add
xchg
push
sti
lock
cmp
jne
sub
dec
sti
mov
or
push
faddl
std
aaa
dec
push
sti
mov
dec
ror
pop
fnsave
clc
ret
test
pop
fwait
jge
cmp
decb
aaa
dec
dec
and
mov
cmp
cmp
add
cwtl
inc
pop
cltd
cld
inc
add
inc
mov
xchg
out
inc
dec
fucomi
push
sbb
in
jo
out
jnp
test
lods
ja
add
mov
insl
fs
jnp
and
fcmovnb
or
ja
repz
faddl
jno
out
hlt
xlat
jae
mov
add
subb
popf
pop
mov
adc
add
in
sub
add
pop
dec
insl
fisubrs
pop
lods
jnp
xlat
outsl
xchg
and
jmp
outsb
fildl
jmp
in
cli
jmp
sub
jmp
aam
xor
add
or
faddl
jmp
sub
or
fildl
jb
aam
shl
pop
test
and
cltd
sub
add
push
shr
and
jmp
stos
jno
and
pop
bound
sub
gs
add
popf
leave
push
inc
sti
loop
stc
out
pop
sbb
add
jo
cli
dec
fadds
mov
inc
idivb
lods
or
add
fdivrs
pop
lahf
fildl
dec
xchg
lock
imul
notb
mov
push
rorl
testb
leave
fisubrl
add
and
ret
lea
jmp
gs
adc
sbb
aam
cltd
cltd
xlat
add
mov
sbb
jo
xchg
sti
enter
lods
or
les
mov
test
jb
sub
lods
push
or
add
jb
decl
fimull
sub
pop
sbb
xlat
cmp
push
add
scas
loop
test
jmp
adcb
das
testb
addl
leave
dec
test
pop
idiv
rolb
imul
std
addl
cmc
in
rcll
add
sbb
mov
jae
ljmp
ds
pop
test
dec
aaa
mov
fadds
stos
fimuls
lods
cmpsl
scas
test
mov
fisubl
in
pop
sub
or
xor
ljmp
lcall
data16
add
out
loopne
sub
mov
pop
call
lods
jecxz
inc
cmp
negl
fidivrs
into
lock
xor
test
jae
mov
or
cmp
cmpsb
cld
or
inc
jmp
out
filds
jmp
mov
push
test
notl
movsl
cmp
cli
pusha
push
stos
stc
dec
sub
and
test
ss
push
jmp
insl
cmp
add
lret
imul
push
xchg
cmc
adc
adc
xor
add
rolb
out
push
faddl
inc
incl
jne
loop,pn
xor
testb
loopne
add
mov
cmc
orl
pop
stc
in
faddl
cmpb
xchg
jo
decl
in
sbb
testb
add
cmc
jne
call
imul
fdivl
jne
ljmp
push
lahf
dec
idiv
jge
hlt
aas
jo
cmp
add
aam
in
lock
outsl
xchg
inc
pusha
cmc
add
jo
jmp
sarb
incb
inc
jne
inc
inc
lds
test
fdivr
daa
jne
push
pop
rcrb
pusha
lock
jo
push
mov
or
outsl
push
jge
divl
jbe
test
je
popa
jmp
sbb
xlat
sbb
inc
sti
jge
pop
jb
popa
repz
push
and
adc
pusha
fmuls
pxor
pop
add
cld
sarl
in
pusha
mov
jnp
jne
mov
dec
pop
enter
pusha
test
in
mov
cmp
jo
insb
call
js
repnz
rorb
adc
dec
or
jns
dec
jne
sti
or
loope
sub
gs
shrb
insl
xchg
aad
inc
jl
inc
cmp
lods
and
add
pop
test
cmp
mov
mov
sbb
imul
add
jae
dec
pop
jle
or
add
hlt
popa
adc
fnstenv
add
jae
adc
push
push
test
cmp
inc
in
jecxz
test
mov
push
icebp
in
jae
add
es
out
je
add
flds
call
xor
dec
out
push
add
add
fldcw
lea
sub
call
adc
jmp
mov
iret
rorb
loope
int3
adc
xchg
cld
push
adc
pop
adc
in
bswap
sar
pop
into
lret
out
int3
inc
sbb
push
dec
ret
mov
mov
je
xchg
cwtl
push
cmp
xchg
out
fistl
add
mov
decl
fadds
mov
push
mov
divb
in
subl
dec
sti
inc
sbb
jle
inc
sti
mov
out
mov
mov
lds
lahf
inc
xor
jge
lock
jo
sbb
addr16
mov
jo
popa
stc
out
sbb
addr16
add
mov
push
in
adc
dec
lcall
aas
jne
add
inc
data16
fildl
jb
jmp
fstpt
pop
pop
inc
sti
jge
fdivrl
je
mov
mov
out
fcmovne
add
cmc
xlat
sbbl
cld
inc
lret
lret
cmp
mov
xchg
fdivrl
and
stos
push
movsl
daa
mov
inc
add
arpl
div
or
daa
xor
shl
add
xor
jbe
sub
lds
bound
rcrb
xor
inc
sub
jnp
xchg
add
cmp
ret
jge
jnp
adc
add
insb
loop
jge
test
shlb
arpl
dec
add
or
inc
cs
shr
xor
jmp
sub
icebp
mov
ss
fimull
mov
rolb
mov
outsb
or
jl
data16
pop
mov
or
in
dec
sub
sbb
out
cli
mov
xchg
mov
push
sub
notb
jp
xchg
mov
jnp
sbb
sbb
mov
push
imul
iret
pop
jl
fistl
mov
ds
notb
es
push
and
cld
mov
lcall
lea
push
call
jle
fimuls
outsb
sub
add
dec
push
add
adc
inc
fisubrl
fnclex
and
xor
pop
stc
ljmp
icebp
mov
incl
pop
rolb
jmp
orb
mov
call
testb
insl
inc
sti
pop
lds
stc
imul
lods
dec
out
xchg
adc
jb
shrb
sti
xlat
or
fcompl
sbb
repz
outsb
mov
bnd
add
pushf
inc
sti
jmp
push
jmp
scas
cs
add
jo
ds
stc
scas
add
or
out
addr16
sti
pop
jb
pop
je
inc
call
sti
and
jne
fsubl
sbb
arpl
test
fisubl
pop
outsl
cmp
pop
jmp
or
push
lods
push
inc
jae
pop
fistpl
mov
inc
xchg
cltd
pop
cmp
add
lret
pop
outsl
leave
mov
or
jbe
pop
add
std
shl
mov
pop
mov
pop
dec
xor
lret
inc
jnp
pop
inc
cmp
inc
jno
add
mov
adc
rcrl
mov
je
mov
test
sti
jbe
call
pusha
je
mov
repz
xor
clc
call
jnp
jmp
push
popa
fdivrp
ss
fsub
ljmp
cli
push
xor
fadds
cmp
pop
idivb
lods
pusha
cli
imul
xor
fidivs
out
inc
mov
je
inc
mov
div
sbb
mov
pop
dec
in
and
jnp
adc
xchg
push
add
ficoms
and
mov
adc
leave
fdivs
les
flds
enter
lcall
in
int3
mov
inc
push
xor
cmp
add
pop
xor
adc
xchg
cmc
push
dec
inc
hlt
or
je
setne
add
inc
push
aam
jo
cmc
enter
xchg
xor
ds
xor
jg
push
jmp
shl
je
inc
sti
inc
cmp
std
outsb
ds
inc
stos
add
scas
sub
call
nop
aam
cld
add
fsts
pushl
mov
xchg
ss
sti
xchg
cmc
cmp
pusha
xchg
jb
cli
jo
dec
rcrl
mov
jo
loop
jo
leave
adc
sub
sub
sbb
or
sbb
push
add
fsub
add
fs
fisttpl
leave
push
lods
pop
cmp
add
loope
and
dec
ljmp
vmulps
jo
rcll
dec
aas
mov
push
cmp
inc
push
sub
call
fcomip
ret
pop
sub
daa
inc
mov
std
dec
prefetch
or
jno
pop
bound
divb
sti
cli
pushf
sbb
fcmovb
in
addr16
into
and
fisubrl
cli
cmp
push
adc
test
shrl
push
scas
cmp
fiadds
call
rcll
mov
push
adc
test
data16
mov
mov
xchg
mov
add
mov
dec
push
inc
pop
fildl
jmp
mov
cli
push
cli
dec
mov
xchg
in
in
arpl
loop,pn
dec
pop
testb
xor
inc
sbb
loop
add
push
testb
cwtl
cmp
divb
fs
or
and
pop
lock
add
or
loop
inc
sbb
mov
leave
add
adcl
iret
std
push
push
cmp
push
add
pop
je
inc
dec
aad
pop
bound
scas
into
decl
idiv
sahf
pusha
pushl
cmp
inc
mov
scas
xchg
add
cli
jle
pop
insl
inc
mov
lods
daa
movsb
mov
mov
pop
call
sti
xchg
cmp
pop
mov
cli
vmwrite
dec
or
cmp
test
aam
mov
cmp
clc
xlat
ss
xor
or
divb
popf
shll
inc
mov
add
mov
jne
fisubl
mov
les
rorb
pop
sub
bound
shrb
add
outsl
leave
dec
bound
jno
out
lods
push
gs
mov
add
vmovsd
adc
lods
push
repz
push
outsb
adc
cmp
imul
mov
cmp
add
xor
and
rol
pop
dec
cmp
out
insb
fcoml
ret
out
mov
mov
xchg
in
test
popa
in
call
hlt
arpl
call
filds
sahf
push
cs
push
jne
inc
lods
test
inc
inc
xchg
jno
pop
add
xor
adc
sub
adc
jbe
enter
loope
aas
mov
loope
jae
test
dec
out
adc
fisttpl
addr16
jmp
sar
push
out
push
addr16
clc
mov
add
xchg
push
dec
add
out
loope
dec
filds
inc
testl
loop
adc
nop
leave
flds
loope
data16
push
out
mov
jg
inc
pop
pusha
mov
add
sbb
jbe
in
dec
xor
bswap
std
cli
shlb
add
subl
pop
add
out
dec
cli
pop
clc
xor
inc
leave
pop
sti
mov
pop
jl
flds
jmp
pop
or
push
mov
aam
push
lret
int3
add
repz
xchg
lret
out
mov
jge
inc
or
cmpsl
adc
es
inc
mov
sbb
and
in
cmpl
push
inc
add
dec
or
movsb
std
pushl
hlt
icebp
inc
nop
std
fisubl
repz
ss
add
ljmp
add
add
cs
inc
loopne
jno
pusha
jo
negl
and
into
faddl
jecxz
inc
jp
dec
aas
xor
ds
and
add
call
in
sbb
mov
gs
mov
xchg
rolb
outsb
sbb
leave
and
sbb
and
xor
in
or
fldl
call
push
mov
clc
cwtl
jl
scas
roll
fsubr
enter
data16
mov
lock
jmp
pop
or
div
mov
test
test
push
jb
pop
add
shl
call
insb
cli
out
insb
sub
fstl
push
out
sti
ljmp
cmp
and
pop
in
into
add
std
or
pop
call
jg
outsl
pusha
inc
scas
lock
stc
sahf
xor
rorl
jae
test
std
es
xor
and
mov
mov
jo
mov
add
inc
push
mov
enter
iret
push
inc
data16
push
and
cmp
mov
add
mov
scas
dec
jg
sbb
testl
add
jne
cmove
dec
popl
push
daa
pop
pop
rcrb
decl
or
adc
imul
cli
adc
mov
std
jo
jle
ds
cli
fs
add
jge
or
lds
mov
incb
cmp
je
mov
push
mov
add
lcall
js
and
jae
lds
mov
ss
dec
rolb
add
ja
rorb
xor
das
sbb
int3
xchg
sub
sti
pop
mov
xor
inc
mov
fistpl
clc
cmp
ror
call
hlt
sub
out
sub
negl
andb
arpl
add
sub
fs
sub
mov
mov
and
jnp
clts
negl
in
shl
and
pushl
pop
arpl
inc
out
lahf
lret
push
in
lret
outsb
xor
jmp
out
cmp
inc
mov
add
movsl
pusha
inc
jmp
dec
lock
dec
dec
xchg
out
stc
xchg
outsl
push
test
enter
mov
or
cli
adc
outsl
insl
push
ret
test
cli
cli
xor
push
bound
or
lret
push
dec
outsb
in
mov
dec
lods
test
jl
cli
mov
lret
or
xchg
in
mov
cmp
bound
push
push
xlat
push
add
or
mov
sub
push
pop
into
jl
add
xchg
xor
in
dec
mov
push
call
je
mov
nop
xchg
add
out
dec
call
and
add
fsubs
mov
cld
push
or
and
add
add
movsb
call
jmp
daa
jnp
dec
into
int
cmpsl
lock
cli
push
or
add
into
decb
addl
sti
pop
lret
pop
pop
adc
test
add
das
lret
jl
xor
cmc
cmpb
call
dec
sbb
xor
addl
inc
add
adc
bound
jbe
jmp
dec
jge
mov
flds
ds
ja
sub
adc
cmp
fwait
adc
ljmp
xor
repz
xor
out
leave
sbb
aad
pusha
fdivrs
fists
jnp
imul
xor
ret
pop
or
fcomps
out
xchg
jecxz
fstl
imul
popf
iret
dec
mov
adc
out
xchg
jecxz
jge
sbb
stos
in
adc
fldt
jae
add
jo
jmp
je
popa
jmp
xchg
lods
in
dec
leave
and
clc
jmp
out
xor
pandn
sti
int
rolb
int
inc
adc
fs
add
movsb
mov
cmp
inc
pop
inc
fldl
xchg
inc
adc
bound
pop
loope
pop
mov
jae
aaa
cmp
test
add
push
jb
lock
mov
jae
add
inc
jmp
insl
sub
imul
inc
je
dec
rorb
lcall
xchg
fwait
cmp
mov
mov
or
addl
inc
adc
sbb
lahf
jae
jecxz,pt
adc
ficoms
dec
jecxz
adc
dec
jmp
or
lds
loope
out
or
loope
dec
int
pop
mov
pop
testb
cli
adc
sbb
jae
dec
jecxz
adc
adc
dec
push
and
hlt
adc
fstl
cmp
push
push
add
lods
cmc
inc
xorl
inc
add
mov
cmp
cmp
repz
sti
js
inc
pop
add
dec
aaa
dec
cmpsb
or
popf
cmp
insl
aas
cs
mov
sti
lcall
cmp
cli
pop
jp
inc
jo
enter
lret
jne
xchg
jecxz
out
add
in
jb
jo
fs
cli
shlb
dec
in
sti
mov
pop
xor
dec
in
mov
incb
lock
int
cli
xor
aad
iret
ret
pop
cmc
leave
adc
shll
push
mov
dec
pusha
subb
pop
gs
mov
aam
pop
clc
out
sbb
fcomps
insl
push
in
mulb
out
add
sbb
xchg
ret
sbb
in
js
jmp
mov
movsb
sub
fistl
aad
inc
sbb
iret
cmc
call
call
mov
ret
cmpsl
add
sbb
iret
stos
call
or
popa
sbb
imul
inc
dec
lahf
and
adc
pop
fwait
add
mov
mov
jae
subb
and
pop
icebp
ret
fdivr
mov
xchg
ret
jg,pt
pop
cmpsl
les
cmp
push
jb
sti
or
popf
iret
pop
lds
test
mov
push
aaa
sub
data16
add
aad
fwait
inc
fsubl
iret
aam
adcb
flds
test
add
add
ljmp
push
jmp
mov
add
test
lock
es
popf
or
ss
push
icebp
jne
mov
cmp
je
pop
rolb
mov
test
mov
jg
or
or
ret
push
repnz
leave
les
push
addb
jbe
addb
fistpll
je
test
xchg
xchg
es
ss
jo
jle
cmp
mov
scas
xor
ja
xor
fdivl
jge
xor
cmp
mov
cmpb
jno
jp
ljmp
inc
or
iret
push
mov
jnp
inc
jb
cmpsl
jmp
sub
ja
push
je
enter
in
xorb
daa
out
sbb
iret
inc
add
lcall
jo
mov
cmp
jo
cmp
mov
pushf
stos
data16
mov
xchg
shl
dec
testl
movsl
testl
aam
jle
iret
out
mov
ds
cmpsb
mov
and
out
test
fldcw
inc
add
pop
pop
inc
xchg
push
jmp
inc
test
pusha
or
popf
stos
leave
inc
adc
pop
inc
pop
mov
cmp
lods
je
lret
xor
pop
aaa
sbb
hlt
adc
xor
inc
pop
pop
test
stos
andl
xlat
sub
insb
into
aas
jmp
out
sbb
in
adc
xor
adcb
je
and
lock
or
mov
aam
add
mov
inc
loope
out
bound
jb
pop
mov
push
loop
push
mov
dec
jb
fimull
xchg
popl
cmpl
mov
in
pop
adc
or
vorps
sbb
call
add
js
cld
xor
in
loop
aas
cli
cmc
test
mov
cmp
stc
je
rolb
sub
lret
adc
push
cltd
out
inc
aas
lea
addl
int
out
in
cs
loope
xchg
stc
je
cli
pop
mov
pop
leave
ret
adcl
push
push
iret
out
or
sti
out
loopne
enter
mov
ja
push
and
dec
inc
into
cli
and
clc
xchg
clc
out
nop
and
mov
ja
and
jge
xor
add
push
add
in
scas
xchg
jmp
adc
jo
jle
xchg
mov
divl
sar
add
jo
fsubrs
and
in
dec
jl
int
ret
cmp
mov
sbb
and
fcmovb
sti
js
jmp
scas
jnp
sub
lods
mov
pop
push
cmpsl
fldenv
jl
frstor
and
jb
inc
jns
mov
out
out
loop
dec
xor
in
outsl
mov
stc
rcl
inc
dec
cmp
js
stos
cwtl
addb
shl
scas
jb
xchg
add
iret
lods
testb
and
push
mov
pop
ret
mov
mov
add
repz
call
adc
inc
cli
push
or
mov
mov
out
inc
add
pop
xabort
adc
stc
pop
pop
sbb
push
adc
mov
stc
mov
clc
pop
jmp
cli
bound
fiaddl
push
jae
mov
push
inc
jmp
jb
mov
add
fnstcw
add
xor
xlat
stc
aaa
xchg
push
dec
loope
fsubrl
lea
or
fs
adc
fs
adc
fs
adc
adc
jmp
xchg
push
mov
in
pusha
int
add
sbb
push
mov
nop
add
dec
lea
icebp
pushl
xchg
ss
shll
sti
push
and
lods
xchg
cli
cmc
push
in
movsl
sti
jbe
push
decl
inc
pop
dec
inc
or
fcomip
jne
jo
ljmp
sti
call
repnz
mov
fiaddl
jo
incb
fisttpll
sti
out
loope
cli
inc
cmp
cmp
imul
xor
test
pop
sti
pusha
inc
addb
add
push
lahf
mov
popf
mov
push
mov
add
cmp
xchg
js
jne
push
dec
ret
add
cwtl
mov
fcompl
sub
push
sti
mov
ficompl
sti
mov
inc
add
aaa
lods
mov
in
test
cmp
and
cmp
sbb
cmp
iret
outsb
cmp
xchg
push
pop
stos
push
fs
adc
fidivl
in
xchg
and
test
data16
enter
cmp
and
clc
je
mov
xor
jo
arpl
outsb
adc
fisubrl
xor
mov
sub
dec
gs
dec
cmp
mov
fbld
gs
fld
aaa
push
sub
cmc
fiaddl
notb
out
inc
adc
insl
rclb
aad
pop
movaps
insb
push
or
int
ljmp
stc
cld
xor
inc
jmp
mov
mov
add
in
xchg
xchg
adc
mov
mov
add
fstpt
ds
mov
loope
fisubrs
sub
ret
mov
jmp
add
aas
or
adc
incl
inc
or
jl
xor
dec
loopne
fbld
or
push
push
jmp
outsb
divl
cmc
adc
inc
lahf
jae
inc
and
call
add
enter
popf
add
test
sbbl
xchg
mov
das
je
cmc
pushl
jae
fcom
sub
jne
loop
outsb
fisubrl
idivl
or
scas
or
or
in
sbb
fdiv
pop
adc
mov
add
out
pop
push
inc
mov
jo
push
inc
aad
adc
mov
mov
or
clc
test
fildll
mov
mov
in
pop
push
or
aas
jo
mov
mov
sti
ja
cmp
mov
mov
and
std
pop
sbbb
cmp
ret
aaa
ret
icebp
nop
add
and
fiadds
aaa
jmp
stc
enter
jo
gs
cmp
mov
in
cmpsl
sub
mov
mov
scas
fwait
sub
xchg
pop
lahf
out
and
addr16
je
jo
imul
jo
outsb
inc
and
jl
cmp
in
pop
js
jnp
cwtl
sub
fstpt
sbb
out
pop
add
jae
mov
jae
mov
jae
mov
cli
jecxz
adc
and
add
mov
stc
hlt
xchg
jmp
push
push
mov
mov
shll
add
call
jecxz
je
xor
gs
clc
aas
pop
into
in
mov
test
jns
aaa
hlt
add
std
pusha
loopne
data16
pop
jae
stc
cld
xchg
inc
jmp
sub
mov
stc
add
jne
add
add
mov
dec
fildl
int3
mov
add
fldenv
jne
xchg
sbb
leave
ret
push
mov
fildl
push
aas
push
mov
aam
inc
jl
es
push
shl
call
stos
cmc
xor
and
and
push
mov
es
push
jp
notl
push
sahf
jbe
adc
inc
lods
jo
fstpl
adc
push
add
mov
mov
sti
mov
mov
mov
in
sarb
xor
lea
add
movb
gs
aas
jo
pop
jp
sbb
data16
nop
sarl
sbb
leave
xlat
test
cli
pop
test
mov
xlat
ficomps
dec
rcll
jo
mov
and
je
hlt
xor
and
jg
xor
inc
sbb
sub
hlt
xchg
call
iret
inc
xor
pop
fs
xor
stc
ret
das
pop
lea
jo
movsl
adc
aad
add
xor
movsb
add
pop
sbb
in
pop
rcrl
mov
jg
in
push
jo
out
aas
add
std
add
add
data16
inc
jno
imul
add
jae
inc
push
and
je
ds
cli
insl
lods
scas
pop
pushl
xchg
jne
call
add
fwait
jnp
sti
jmp
xor
jmp
sbb
pop
add
out
pop
stc
fs
scas
xor
or
xor
add
xor
loop
mov
cmpsl
xorl
loop
scas
pop
aas
add
test
xor
add
mulb
push
addr16
or
or
movsb
iret
cmc
adc
or
je
fdivl
push
call
fimull
add
inc
lea
push
scas
iret
pop
rorl
decl
aam
lock
inc
mov
shrb
sti
decb
lret
loope
inc
call
lcall
lret
loope
add
call
push
dec
ljmp
out
mov
jo
add
clc
sti
call
out
fwait
and
jo
mov
scas
inc
aas
sub
sbb
push
cmp
add
pop
sbb
jno
xchg
das
inc
nop
mov
mov
sahf
int3
xchg
cli
roll
add
mov
out
lret
addl
je
lods
sti
gs
inc
sti
pusha
mov
test
icebp
pop
cli
std
filds
push
aas
pushf
add
jo
mov
mov
xor
iret
test
lahf
xchg
push
out
jp
mov
fwait
out
cli
ret
jg
gs
jne
push
mov
sbb
sbb
xor
add
test
xorb
stos
orb
cmp
sbb
mov
and
pushl
adc
xchg
arpl
or
aas
pop
decb
xor
add
iret
inc
sti
xor
adc
out
daa
add
mov
test
jae
repz
notl
xchg
popa
lock
cmp
jle
mov
mov
aam
out
inc
jmp
inc
cmpsl
rcl
jb
inc
gs
push
jmp
je
pop
push
xchg
or
mov
xchg
pop
jl
xor
mov
xchg
mov
push
xchg
adc
js
dec
inc
out
fs
inc
gs
adcb
insb
bound
std
enter
sbb
mov
mov
push
add
pop
inc
test
and
popf
jle
lcall
cli
cmp
test
cmc
push
pop
andl
sbb
cmp
cmc
mov
sub
push
rcrb
adc
or
add
cmp
adc
dec
bound
icebp
add
add
fisubl
jmp
nop
dec
and
mov
roll
sar
stc
loopne
inc
adc
aad
gs
aas
jo
dec
je
hlt
mov
in
in
std
call
cmpsl
sbb
push
or
sti
mov
mov
xor
mov
aas
jo
xchg
sbb
testl
pusha
push
jnp
pushw
inc
call
ja
inc
or
jno
push
jmp
roll
shll
dec
adc
pinsrw
jno
repnz
out
std
outsl
inc
or
sub
iret
push
lds
popf
jg
aas
adc
mov
and
xchg
adc
sub
out
stc
cltd
and
add
adc
add
jo
mov
push
fistpl
xor
adc
pop
cmpsl
mov
inc
cmpsl
adc
mov
mov
stc
pop
imul
pop
enter
adc
ret
iret
or
jl
test
jae
add
cmp
test
xorl
loopne
mov
xchg
or
adc
in
add
xchg
call
sbb
jae
stc
fmull
inc
jmp
jae
xor
sbb
call
pop
in
add
xchg
call
ja
inc
xor
push
cs
cmp
and
xchg
sub
dec
bound
adc
add
xlat
dec
mov
scas
ds
push
shll
roll
xor
inc
add
push
shll
xlat
bound
incb
imul
cli
mov
push
jmp
scas
adc
je
jns
adc
stos
pop
cli
mov
addr16
or
pop
push
jns
xlat
jbe
add
shll
mov
fldl
add
rclb
or
addl
jo
adc
add
ret
jo
add
inc
scas
cli
pop
add
aas
jo
xchg
xor
test
imul
in
je
sbb
pop
sbb
aas
jo
add
jo
xchg
or
sbb
or
xchg
pop
sbb
xor
decl
and
mov
xor
addl
push
or
mov
cli
xor
loop
push
cld
std
leave
xchg
arpl
jmp
mov
jne
add
imul
add
push
inc
xlat
fcompl
call
pop
pop
popa
jo
out
imul
jo
out
jae
cmpsl
sbb
int3
jle
repz
dec
add
jo
hlt
push
dec
dec
add
hlt
pop
inc
sbb
negl
daa
xchg
fcmovbe
add
pop
cltd
add
fsubl
inc
pop
add
jnp
test
imul
mov
pop
sarl
or
pop
jmp
rcl
inc
jmp
fsubr
add
arpl
add
add
mov
dec
inc
jb
stc
cld
xchg
int3
inc
jmp
icebp
cmpsl
and
aad
inc
adc
lds
in
daa
sbbl
aam
movsl
push
lods
call
add
lahf
jae
jmp
fsubr
xchg
adc
test
or
or
loope
repz
incl
jae
in
in
mov
and
sahf
cli
mov
cwtl
cmp
push
insl
movsb
adc
popa
movsb
push
add
pop
push
add
fstpt
in
sbb
pop
mov
test
lods
jae
mov
test
and
test
in
pop
movsb
inc
call
inc
cld
push
mov
xor
cli
jge
icebp
aas
jo
cli
pop
shl
aas
jo
cmp
jnp
sbb
in
sti
lds
xor
xchg
mov
add
jo
jns
jo
jmp
shll
fdivrs
jp
fbstp
xchg
and
ret
fdivs
cmpsb
mov
push
xor
cmpsl
shl
or
pop
in
mov
or
iret
jns
repz
or
in
add
pusha
or
xlat
add
fcmovnu
orl
call
sti
sub
dec
lock
cmc
and
out
xchg
lret
out
or
cmpsl
add
popa
rclb
out
mov
or
xchg
daa
add
sbb
and
stos
lock
daa
add
stc
xchg
out
pop
loop
loopne
cmpsl
stos
fs
sub
push
add
fildl
jbe
call
imul
mov
add
movsb
cmc
dec
dec
pop
stc
jmp
add
adc
inc
in
pusha
out
clc
adc
iret
clc
adc
jno
adc
pop
in
xor
mov
je
and
clc
sar
mulb
add
add
inc
or
fildl
jmp
ret
test
sbb
and
mov
pop
repz
pop
jp
jmp
fwait
xchg
dec
add
jae
xor
adc
dec
movsb
xchg
pop
fsubs
mov
add
jmp
sbb
jmp
rclb
sub
sbb
ljmp
or
or
add
or
rclb
js
sbb
xorb
push
repz
add
adc
xlat
add
inc
daa
notl
mov
pop
mov
cwtl
call
sbb
mov
or
fs
sub
rclb
jo
add
jo
mov
and
and
pop
cmpsb
outsl
mov
or
shlb
or
add
js
mov
or
xchg
dec
aad
lret
mov
push
jmp
test
mov
cli
out
or
add
lock
and
test
mov
mov
dec
cmpsl
lret
sbb
int
add
inc
and
inc
in
nop
or
call
adc
xor
or
test
push
sbb
daa
add
mov
fdivs
aaa
fucomi
jp
inc
push
push
insb
inc
in
push
inc
mov
in
add
mov
jp
sub
adc
sahf
out
rcll
mov
and
xorb
out
lret
out
pop
cmpsl
xlat
push
test
outsb
mov
xlat
addr16
push
jmp
clc
push
gs
ficoml
ja
cmc
or
out
add
add
jge
lock
and
sbb
ss
jne
test
sti
and
jmp
arpl
aad
cmpsb
or
and
pop
jp
stc
fcompl
je
adc
cmp
xor
pop
xchg
mov
add
and
jmp
pop
lods
pop
add
sti
push
jg
jne
add
call
jne
outsb
cmpsb
adc
int
push
aam
sub
jne
out
insb
cmpsb
adc
mov
or
push
add
int3
mov
pop
ret
push
mov
roll
lock
cli
add
mov
loop
in
fprem1
test
dec
adc
sbb
stc
inc
dec
push
or
cmp
orl
jae
mov
cld
pushl
das
divl
dec
outsb
divl
xlat
adc
cli
pop
aam
adc
int3
mov
testl
sub
and
in
lahf
shlb
mov
pop
cli
je
and
pop
mov
pop
add
jne
jno
adc
mov
xchg
cld
cli
gs
aas
jo
mov
xchg
add
add
rcrl
dec
jg
test
add
ss
add
out
cli
mov
in
pop
sbb
sti
pop
lret
popf
faddl
jne
pop
add
pop
jmp
mov
movsb
pop
mov
push
sti
and
inc
jo
xor
fadds
les
mov
loop
mov
push
xor
sti
add
push
xchg
out
ja
adc
pop
jnp
out
add
jge
outsl
fstpt
dec
lcall
cld
dec
xchg
push
sbb
iret
ds
push
out
jo
testl
fs
popf
or
sbb
add
xor
add
cli
js
test
imulb
stc
aam
movl
stc
jae
test
leave
lock
fildl
out
adc
jno
test
jmp
ds
push
test
xchg
repnz
stc
cld
mov
je
mov
cmpsb
or
xchg
jae
pop
sub
push
jb
sub
sub
add
leave
push
je
cmpsl
cli
call
add
test
movsb
jae
adc
outsb
mov
cmc
jne
xor
sti
into
adc
movsb
sbb
and
dec
jmp
cmc
jne
fistl
pop
xchg
cwtl
add
adc
clc
adc
jae
adc
xor
sarl
ret
xor
inc
adc
mov
pop
and
add
pop
and
ret
add
out
lods
out
out
add
add
movsb
es
pushl
divb
test
cli
fbstp
sub
std
out
fcoml
mov
inc
fsub
out
fmull
xor
jge
sbb
int3
lds
pushf
mov
daa
jle
out
clc
add
xor
push
jmp
push
je
insb
sub
xchg
cmpl
je
push
sti
inc
mov
mov
sahf
lods
inc
hlt
rolb
fadd
fisttpl
add
fwait
out
sub
in
popf
data16
fcmovne
icebp
add
je
pop
jbe
push
in
scas
std
fcos
repz
adc
aaa
fincstp
js
data16
sbb
js
test
push
std
test
push
cwtl
seta
jp
and
push
push
fcoml
jl
faddl
mov
mov
xor
loopne
std
jle
jecxz
out
out
ja
add
sub
add
mov
fs
mov
push
lret
jae
cli
fwait
or
lret
adc
push
jmp
pop
lret
push
insb
inc
sub
adc
sti
out
in
fdivs
push
shrb
cld
inc
out
inc
jmp
jae
test
cmp
push
inc
test
mov
add
arpl
cmp
sar
push
cli
jle
frstpm(287
lret
mov
pop
mov
fwait
or
cli
jb
jecxz
mov
push
test
pop
xchg
std
mov
addr16
pushl
daa
mov
in
jecxz
bound
mov
pushf
add
aad
sub
jno
idiv
pop
pop
jb
dec
sub
jb
leave
imul
out
test
pop
ljmp
push
faddl
jne
lret
shlb
cs
imul
jecxz,pn
test
add
cmp
xchg
push
mov
fldl
xorb
jne
jge
out
or
lcall
xor
xchg
jge
out
sti
std
ljmp
pusha
xchg
jmp
push
test
outsb
or
push
lock
jmp
xor
lret
decl
jg
std
cli
dec
mov
sbb
jge
jle
sbb
in
std
std
incl
pop
or
jmp
or
jg
js
cli
jg
push
jmp
sbb
adc
sbb
jae
mov
cmp
gs
cmpsl
add
dec
mov
dec
xchg
sbb
or
mov
add
xor
out
or
movsb
daa
test
sub
lcall
repnz
xor
push
bound
dec
and
dec
mov
push
popa
inc
push
jmp
sarl
push
jo
pop
in
aaa
pop
stos
sti
mov
cli
jp
out
ja
adc
out
sbb
out
gs
cmpsl
mov
adc
imul
inc
mov
aas
adc
insl
sub
test
fildl
jb
loop
test
insb
push
add
mov
cli
push
fstpl
add
jae
jne
cmpl
insb
push
test
mov
mov
pop
jge
jnp
jae
inc
add
in
xchg
and
mov
aas
xchg
add
sbbb
sbb
add
dec
xchg
xor
or
pop
test
inc
add
and
mov
test
daa
call
mov
push
popa
push
lcall
mov
flds
cld
add
fsubr
clc
fcoms
testl
mov
mov
rsm
aaa
xor
add
add
xchg
mov
pop
call
add
andb
std
inc
call
idiv
in
inc
jno
sti
cmp
in
in
std
aas
add
dec
shl
stc
das
jg
jae
sub
pop
movb
sti
gs
adc
add
nop
jo
decb
sub
push
push
in
cmp
push
hlt
sbb
dec
mov
call
add
inc
push
sbb
push
je
or
fcmove
pop
test
xchg
shrl
ret
sbb
stos
aas
xchg
loop
push
cmpsl
scas
incl
clc
pop
lret
cld
inc
jo
fcompl
imul
pop
sub
pop
es
xchg
mov
add
xor
jo
lods
pop
inc
pusha
movsb
pop
inc
stos
adc
out
and
add
and
mov
and
mov
mov
subl
inc
dec
lahf
out
pop
cld
add
repz
xchg
mov
add
mov
jmp
pop
adc
jne
arpl
jmp
inc
adc
call
mov
add
mov
cli
xor
add
push
jae
push
fs
push
jmp
jb
jecxz
push
lahf
add
xor
add
inc
fs
jae
ds
xchg
call
inc
sti
rolb
shll
repnz
call
mov
mov
add
add
or
pop
or
incl
cmp
or
pop
aam
add
out
dec
fldl
push
mov
mov
testl
inc
or
mov
and
call
push
fwait
testb
jne
push
mov
and
fldcw
rolb
jo
push
push
loopne
out
adc
hlt
mov
mov
fwait
pushf
xchg
jmp
in
dec
repnz
outsl
inc
add
stc
cwtl
repnz
inc
add
data16
cmp
mov
jae
cli
imul
or
pop
add
clc
mov
imul
sbb
mov
test
cli
in
shll
test
insl
adc
daa
aas
lock
in
loop
xor
cli
add
pop
push
out
fistl
jb
dec
sub
or
mov
mov
addl
mov
push
jecxz
js
aad
pop
fwait
out
jl
fadds
bound
inc
mov
mov
cli
mov
ja
mov
mov
xchg
add
or
fs
add
sbb
ljmp
hlt
pop
nop
add
imul
lret
bound
jmp
imul
out
pop
ja
mov
push
jmp
mov
stos
call
cmp
ret
addl
push
add
push
mov
fwait
jne
je
mov
dec
cli
push
cmpsl
xchg
push
invlpg
push
data16
xchg
ret
arpl
in
pusha
jl
ja
jmp
fs
push
push
jns
str
ficoml
pop
mov
mov
or
xchg
push
lea
ret
mov
cmp
sbb
int3
incl
jge
or
pop
lods
and
xor
adc
add
paddq
decl
mov
sub
xchg
add
and
adc
nop
inc
or
add
scas
repz
mov
flds
jne
or
dec
repz
leave
fdivrs
loope
jns
jo
std
jae
pop
inc
pushw
fdivl
cli
pop
pop
adc
test
stos
push
inc
add
adc
testb
decb
mov
jnp
jg
es
pop
int3
push
sti
inc
mov
repz
inc
add
mov
outsl
sbb
adc
cld
cmp
mov
jl
add
lcall
test
lods
add
xor
hlt
int
cli
neg
pushf
sti
xlat
mov
daa
push
add
mov
jae
pushf
jl
push
add
inc
incl
add
and
sti
int
or
push
out
fs
sbb
daa
fistpl
add
or
add
or
xchg
sbbb
lock
xchg
ret
call
sub
adc
pop
repz
xchg
sub
jno
dec
xlat
data16
add
or
test
stos
add
sub
jae
call
jb
mov
jge
xlat
add
pop
push
xor
pop
daa
pop
jae
clc
leave
js,pt
push
icebp
xchg
and
bound
xchg
lock
or
xlat
lock
outsl
adc
repz
cltd
imul
test
add
loope
mov
add
insl
xor
sub
and
test
and
jae
add
mov
or
or
es
xchg
cli
mov
push
call
push
xchg
and
popa
test
inc
pop
ds
lods
call
test
or
lea
sbb
cmp
test
test
rclb
sbb
or
and
frstor
aam
and
jae
push
call
fisubl
push
push
pop
ds
scas
push
ljmp
mov
and
inc
pop
or
fnstsw
jne
data16
add
mov
jmp
das
mov
adc
add
add
stc
xorl
cmp
or
add
cli
arpl
dec
pop
cmp
pop
mov
std
push
sti
cs
in
push
jg
add
js
hlt
out
jno
cli
repz
in
jmp
mov
addr16
inc
int3
mov
sbb
in
fidivl
inc
cmpsb
or
aas
push
aad
pop
in
mov
jns
mov
fistpl
in
pop
jmp
pop
adc
push
xor
std
xchg
xor
mov
sbb
push
push
jecxz
addr16
aad
outsb
subl
pushf
mov
cmp
sub
and
dec
cmc
mov
inc
imul
jbe
hlt
lods
gs
ret
jmp
cs
add
stc
fsubrl
inc
loopne
add
loope
in
out
adc
pop
out
sbb
ljmp
fs
int3
add
loop
repz
mov
jmp
mov
adc
out
repnz
pop
jg
push
call
jno
divl
add
in
out
sbb
sbb
sub
verw
iret
test
fisubl
adc
sub
mov
fldt
add
std
sbb
add
loope
mov
insl
adc
add
or
xorl
add
mov
test
je
pop
movl
xchg
xchg
push
ret
cli
inc
fs
xchg
pop
lcall
or
adc
pop
jp
mov
loope
or
and
lahf
dec
xor
es
orb
data16
cmpsl
enter
popa
rep
or
lea
push
in
das
lods
push
jp
pushf
icebp
add
cmc
scas
leave
enter
cltd
mov
pop
mov
ret
xor
mulb
std
inc
mov
int3
add
add
or
iret
aad
or
dec
out
mov
push
pop
bound
jl
lcall
xchg
sub
adc
mov
and
jp
cld
add
adc
mov
pop
xchg
outsl
jle
cmp
je
push
js
imul
jne
push
and
inc
lahf
sbb
sub
mov
jg
add
out
jo
hlt
jl
repnz
test
aaa
in
scas
sti
dec
out
and
imul
call
jo
lods
clc
sbb
pusha
cmp
pop
sub
aaa
shll
leave
cld
cltd
call
ja
out
mov
add
mov
inc
jne
in
and
jp
in
insb
jb
fs
xchg
add
mov
mov
cld
pusha
mov
add
add
jo
shl
sahf
mov
pop
pop
jae
aad
or
pop
add
xor
std
sub
xor
jmp
cmp
inc
mov
dec
in
inc
jmp
mov
adc
es
add
or
add
xchg
or
push
jge
sbb
push
in
clc
adc
xchg
mov
and
or
mov
inc
xor
cltd
scas
cli
adcl
shl
je
out
inc
push
movsl
push
inc
or
or
fsub
ret
push
stos
and
jmp
mov
push
arpl
aad
outsb
add
or
ror
push
xor
add
add
call
jmp
lret
rolb
cld
xchg
cld
push
sti
insb
loope
iret
mov
pop
into
xor
cli
mov
add
mov
outsb
orl
je
dec
aaa
loope
add
xor
je
jb
std
pushf
stc
cs
xchg
jnp
out
jb
add
mov
inc
ss
or
js
xor
shl
mov
les
or
xor
dec
cli
push
cs
outsl
fistpl
mov
jp
mov
lods
movsl
push
sbb
in
sarb
insb
rcrb
push
or
mov
sbb
aaa
cmp
cmp
jle
jmp
pop
add
jnp
test
mov
outsb
inc
jl
fnsave
addl
out
add
stos
pop
mov
fcmove
pop
cmp
jp
stos
xor
fstpt
iret
mov
jns
jecxz
arpl
std
fwait
mov
lcall
pop
inc
stc
jo
out
or
mov
xor
xor
or
call
xor
add
push
adc
mov
fcomps
push
notb
int
mov
jb
jmp
test
stos
jmp
sub
outsl
pop
cwtl
clc
ljmp
lret
je
inc
or
push
xor
bnd
mov
or
shlb
xchg
cmpl
addl
mov
fmull
mov
clc
bound
add
loop
in
mov
dec
call
sbb
aad
lcall
dec
call
xchg
loopne
dec
fiaddl
mov
rolb
mov
and
or
movsb
mov
pop
adc
sbbl
aam
cmp
jbe
push
jne
xlat
dec
jge
jo
pop
lock
into
jl
mov
repz
jmp
outsl
add
mov
andb
jl
repz
hlt
ss
mov
push
call
inc
mov
mov
sub
clc
sti
call
fdivs
shll
inc
add
lea
pop
xchg
adc
sbb
lahf
dec
jl
nop
dec
jae
cmp
ja
cmp
mov
out
jo
movsb
mov
testl
mov
out
mov
ret
out
iret
sbb
cli
jmp
cs
jbe
jo
mov
push
xor
mov
outsb
aaa
push
push
and
popa
aaa
sbb
sbb
in
jge
and
pop
sbb
fcomi
mulb
pop
aas
pop
fdivrs
mov
test
cmp
lea
fnop
xchg
hlt
call
cmpsl
les
push
sub
lods
fwait
push
dec
stc
pop
mov
idiv
popa
sti
nop
lods
into
call
xchg
mov
add
bound
iret
xchg
mov
or
xchg
pop
and
cmp
jmp
sahf
in
push
mov
dec
cmc
jns
xchg
bound
lock
cli
shr
lret
scas
clc
add
mov
add
xor
inc
push
sbb
add
add
enter
int3
jmp
addr16
adc
rorb
imul
shr
lcall
mov
adc
jge
addr16
hlt
adc
mov
lods
dec
xor
lods
push
adc
sbb
out
lock
push
dec
pop
hlt
mov
gs
fidivrs
jmp
mov
jne
jo
aas
fsubr
ds
mov
adc
shll
add
inc
loopne
jne
jle
xchg
inc
dec
in
push
jg
nop
add
mov
loopne
out
mov
pop
adc
mov
fisttpl
jge
cmp
lea
enter
dec
aam
insl
dec
in
in
push
xlat
icebp
out
insb
dec
adc
ljmp
xchg
mov
movl
sahf
inc
add
sahf
and
jbe
add
bound
jo
addr16
js
popf
mov
jmp
pop
pop
fidivrs
arpl
mov
test
aaa
xchg
mov
add
jae
mov
add
xor
dec
outsb
fwait
xor
outsb
xchg
in
or
xchg
fnsave
or
movsb
mov
push
inc
call
add
aas
in
adc
cmc
jae
stc
outsb
mov
aam
arpl
sahf
cli
push
lock
ds
outsb
lock
stc
ljmp
inc
std
lock
jo
divb
pusha
inc
shl
xchg
stc
pop
sahf
mov
into
dec
mov
sub
notl
jbe
std
orb
es
sbb
xchg
cli
faddl
mov
repz
mov
movsl
or
cltd
arpl
nop
lods
cld
cmp
fiaddl
mov
adcl
mov
xor
mov
mov
repz
test
flds
add
xor
call
in
mov
add
or
orl
movsb
fmuls
dec
loope
dec
loop
cld
mov
dec
adc
aaa
sbb
mov
inc
jo
pop
adc
decl
sbb
pop
hlt
lea
lea
push
in
jo
push
aaa
jne
pop
pushl
cltd
add
test
xchg
aas
inc
mov
ljmp
inc
loop
and
inc
lea
das
hlt
dec
dec
rolb
jg
mov
or
adc
sti
mov
dec
in
add
xor
lock
clc
cld
aad
jne
pusha
xor
cmp
int
fs
jo
jp
xor
cmc
testl
out
dec
and
in
adc
xchg
add
xor
daa
in
loope
mov
pop
dec
aam
and
rcr
je
mov
arpl
stc
jbe
mov
jo
mov
pusha
xchg
fucomip
cmpsb
jecxz
mov
mov
mov
mov
in
sbbb
pop
outsl
add
cld
mov
inc
cmc
outsb
sbb
jecxz
mov
bound
mov
incl
xorl
xor
data16
testl
dec
leave
lock
ljmp
inc
aad
addr16
daa
cltd
lock
fildl
push
xor
cld
repz
cld
jge
inc
pop
dec
icebp
in
mov
dec
lahf
adc
inc
pop
push
add
fmul
add
enter
adc
cli
mov
inc
in
inc
push
pop
out
fldl
add
dec
mov
add
push
mov
iret
rorb
test
add
mov
jecxz
add
int3
push
mov
dec
andl
add
clc
mov
xor
add
xchg
pop
pop
fsubs
dec
push
lock
clc
lcall
loop
xchg
or
pshufw
sti
into
or
xor
jg
push
add
fs
add
fs
add
cmp
mov
mov
mov
mov
mov
xchg
jge
or
add
cmc
mov
add
mov
mov
pop
repz
cmp
xchg
mov
jmp
call
aas
fidivs
aas
in
ds
mov
jo
aas
fisubl
mov
sub
xchg
ret
dec
jbe
jp
xor
jb
add
loopne
add
ret
xorl
xchg
mov
les
pop
in
jnp
cwtl
les
in
aas
push
sub
fidivl
mov
sub
lock
repnz
pop
add
addr16
js
mov
movsl
mov
in
pop
testl
cmp
mov
jecxz
jb
add
mov
or
in
cmpsb
scas
hlt
lcall
xor
jb
or
arpl
inc
mov
mov
mov
jne
jae
sbb
repz
xchg
mov
call
ljmp
jae
insl
sub
jge
addr16
mul
xchg
pop
aas
out
fdiv
sbb
call
xchg
cmc
mov
hlt
test
pushf
data16
ljmp
stc
ljmp
addb
insl
int3
test
push
dec
decb
jmp
inc
sub
aam
mov
push
sbb
push
or
shlb
pop
leave
or
stc
push
ret
in
cmp
sub
rorb
popa
push
fcoml
jmp
mov
jecxz
add
bound
mov
arpl
pusha
mov
xchg
faddl
sbbl
loope
and
or
sub
add
stc
aas
mov
in
inc
mov
pushl
aam
mov
push
pop
sti
mov
xchg
or
cmp
scas
cmp
mov
aas
clc
jns
mov
mov
jge
enter
push
pop
add
aam
lea
jge
out
mov
cmpl
into
jnp
inc
fildl
repz
ljmp
jmp
pop
jp
fisubrl
mov
or
jle
out
cmp
loop
cwtl
cwtl
pusha
pop
cwtl
fstl
cld
add
mov
jl
add
jl
add
push
outsb
cmp
sbb
andb
add
xchg
fwait
addl
out
out
sahf
pop
jnp
movsb
insl
inc
fisubs
sbb
pushf
sbb
bound
push
inc
adc
in
cmp
fadds
xor
loopne
jae
add
and
mov
add
pop
lock
xor
mov
jne
jl
sti
xchg
clc
jo
pop
ss
mov
test
push
dec
int
or
call
lods
adc
icebp
je
movsb
xchg
roll
jo
pop
inc
ret
jge
jge
adc
repz
jne
aam
and
inc
dec
add
adc
jo
cld
andnps
incl
repz
fmuls
inc
adc
imul
or
faddl
out
add
test
stc
xor
or
push
loop
jnp
cltd
push
sbb
outsb
dec
lock
mov
push
sti
stc
dec
add
mov
dec
mov
andb
out
filds
sub
gs
enter
push
aad
inc
shlb
in
fwait
movsb
add
fwait
mov
inc
lods
popf
add
sub
imul
stc
aaa
ss
add
inc
mov
imul
lds
mov
or
mov
sbb
je
jge
or
fsqrt
dec
insl
inc
clc
add
dec
hlt
repz
lods
push
sahf
mov
repnz
in
repnz
ljmp
ret
jl
enter
jmp
inc
add
xor
sbb
cmp
pop
loopne
add
lahf
pop
jnp
movsb
movsb
stos
inc
loopne
dec
shl
aam
sub
out
jae
movsl
repnz
push
lods
scas
pop
mov
lods
out
xchg
adc
push
pushf
fisubrl
push
loopne
dec
inc
fsubrl
push
mov
pop
dec
sub
mov
loop
dec
sbb
and
add
rolb
jp
mov
aaa
push
outsb
mov
testb
je
les
aad
andl
ja
jl
jae
orl
mov
subb
sbbb
mov
jno
push
or
add
inc
iret
je
shrb
sbb
icebp
fistpl
ljmp
add
cmpsl
mov
add
in
mov
mov
in
add
pop
gs
jle
sti
out
add
cmp
clc
clts
test
pushl
divl
bound
fdivrp
mov
jecxz
inc
pop
addr16
incl
bound
sti
dec
jle
lock
push
call
mov
jnp
insl
jmp
inc
cmp
aam
rorb
sbb
and
addb
insl
enter
mov
addr16
add
pop
push
mov
mov
push
sti
push
inc
adc
insl
push
hlt
xor
in
icebp
pop
lock
cltd
daa
bnd
jns
or
add
push
sti
mov
ffree
movsl
int3
or
xor
cld
mov
add
fcomps
repnz
nop
jns
sbb
das
repnz
xor
inc
insb
icebp
mov
cmpsb
je
add
add
out
jecxz
jp
add
fildl
cmp
pop
faddl
inc
mov
in
aas
mov
mov
negl
mov
icebp
jnp
fwait
sub
imul
jl
and
cli
icebp
outsb
pop
lret
fiaddl
add
push
dec
jg
xlat
loop
inc
loopne
fdivs
mov
int3
add
mov
out
jo
cmp
jge
push
roll
jo
ficoml
push
mov
mov
fadds
and
jp
call
pop
add
testl
stos
sbb
roll
addl
hlt
and
add
add
xor
fisubrs
add
add
addr16
jae
or
jmp
jg
stos
or
push
inc
adc
aam
xor
test
sbb
ss
pusha
xchg
shrl
fnstsw
push
inc
fst
lods
jae
dec
gs
add
add
pushf
hlt
add
fs
add
fadds
mov
out
mov
loope
jne
stc
imul
loope
fadds
inc
rorl
stc
inc
push
ficomps
movb
adc
pop
scas
xchg
dec
or
rolb
mov
das
mov
loop
aad
xlat
add
mov
femms
push
add
mov
sbb
lods
call
mov
xor
mov
ror
jo
jl
jno
hlt
or
cmc
push
pushl
or
cmpsl
xlat
sahf
add
test
std
jg
testl
outsl
jno
add
jl
mov
call
fwait
mov
sbb
shl
mov
adc
outsb
sbb
mov
cmc
cmp
lods
dec
lret
pushl
movb
outsl
sgdtl
jo
jl
stos
mov
adcb
in
out
xchg
add
fidivs
jp
push
aam
jmp
push
xor
out
cmpsb
loope
pusha
push
faddp
popf
repnz
je
sahf
dec
and
jp
jo
ljmp
mov
mov
pop
aad
inc
int3
cmp
ds
testb
jl
xor
pop
inc
xchg
push
popf
in
mov
mul
addr16
ret
repz
jg
add
xchg
or
mov
add
xor
or
shlb
xor
test
fldenv
and
jb
jmp
test
fldenv
arpl
bound
out
test
fldenv
inc
fldl
loope
gs
in
js
or
out
jae
add
repz
scas
in
mov
mov
mov
daa
fnstsw
mov
out
scas
fsubs
pop
cli
pushf
stos
pop
inc
cmp
fadds
adc
mov
adcl
jne
rcrb
jo
dec
push
jecxz
cs
fmuls
and
rcrb
call
mov
rolb
call
inc
int3
pushf
fwait
decl
nop
mov
add
popa
dec
or
mov
idiv
push
mov
add
jmp
test
mov
cmp
out
add
mov
or
sbb
data16
imul
jne
jae
outsl
push
aad
pop
out
les
cs
mov
std
cmp
je
sbb
jns
sbb
adc
mov
std
sub
sbb
mov
xchg
js
xchg
in
jne
mov
std
push
jmp
sub
and
pop
sbb
or
mov
js
jmp
les
add
add
movsb
jp
outsl
js
add
out
add
out
imul
sti
push
stos
pushl
cwtl
cli
add
push
stos
stc
push
cmpsl
add
bnd
shll
push
mov
cld
cmpsl
outsl
fwait
out
mull
push
cwtl
mov
add
cmp
in
xchg
rcll
xchg
out
push
mov
fidivrs
dec
sbb
pusha
pop
test
hlt
into
call
or
and
imul
or
push
pop
add
xchg
pop
adc
sbb
jb
push
stos
psubusb
mov
daa
sti
add
sub
xchg
sti
faddl
enter
jmp
jnp
xchg
sub
lcall
lret
push
int
sub
add
jae
shrl
add
jae
push
push
mov
or
add
add
jae
shll
add
jae
inc
ret
inc
dec
inc
or
sbb
sti
push
mov
inc
add
inc
add
addl
sbb
inc
mov
xor
adc
xor
aad
sbb
ss
aas
or
aas
or
xchg
xor
int3
pop
outsb
add
ss
inc
sbb
adc
pop
sbb
mov
add
sarl
call
pop
pushf
cmc
add
enter
sbb
push
and
repz
jmp
pop
pop
dec
stos
ret
popf
ss
fcmovnb
adc
add
add
sahf
adc
jo
ss
inc
sar
add
sbb
sar
pop
shlb
inc
dec
sar
dec
sbb
mov
sahf
test
push
std
cli
jo
rol
sbb
or
sti
mov
jo
std
jmp
mov
rcr
mov
mov
fldt
enter
mov
pusha
cmp
add
fidivrl
mov
aaa
insb
mov
lods
jge
sub
popf
filds
lds
sbbb
add
pop
pop
xor
adc
xchg
js
jo
rorb
fxch
mov
jmp
out
mov
iret
add
sub
mov
sub
xchg
xor
sbb
mov
add
insb
ret
leave
out
push
aad
sub
lret
out
fisttpl
cmp
push
cli
je
cmpsl
call
fs
mov
fisttpl
push
sub
or
bound
adc
sub
cld
notb
xchg
add
jae
bound
sub
fildl
bound
shll
je
ret
inc
sbb
xor
pusha
add
pusha
inc
xchg
cli
mov
adc
fdivr
mov
movb
lods
mov
pop
faddl
and
lahf
fsts
shrb
shll
mov
jne
in
mov
jl
cmp
testb
testb
jmp
add
arpl
pop
pop
fsubrl
out
add
sbb
lea
adc
dec
call
aad
push
test
add
cltd
sbb
add
xchg
dec
or
loopne
add
fimuls
lea
mov
test
ret
inc
mov
inc
clc
sub
cld
mov
or
test
xchg
popf
cli
test
push
inc
jo
jae
jns
mov
add
bound
and
mov
or
stos
leave
and
push
mov
xchg
lds
les
cmpb
por
shrl
mov
pop
jnp
test
mov
or
push
std
and
fadds
mov
or
or
xor
fbld
add
insb
inc
aam
push
ss
test
stos
imul
pop
clts
jo
insb
mov
cld
mov
rclb
jp
testl
sbb
repnz
ljmp
cmp
insb
mov
lret
sub
lea
cs
pop
mov
mov
fs
cmc
dec
in
push
roll
out
icebp
mov
jmp
fcomp
add
call
xchg
call
push
rorb
insb
sbb
stc
jmp
xor
cmp
lock
jmp
jae
push
subl
jae
sbb
call
lods
ja
or
mov
push
fs
jae
stc
pop
add
shll
add
inc
in
mov
loopne
adcl
jbe
stc
jns
push
fldcw
scas
nop
je
push
popf
loope
pop
xchg
testb
fildl
add
test
nop
add
fs
adc
aad
clc
fsubr
cmc
dec
xor
or
mov
rclb
loop
jecxz
dec
call
add
adc
and
popl
int
idiv
push
xchg
je
jo
or
add
cli
jmp
or
add
adc
xorl
std
or
pop
mov
test
cmp
pop
test
lds
jb
std
inc
ja
ret
jo
inc
or
pusha
add
jo
or
or
add
mov
push
call
hlt
add
test
mov
xor
jo
stc
mov
mov
cmpsl
or
cmp
add
xor
out
pushf
add
jo
out
and
outsb
shlb
mov
xchg
add
mov
movsl
add
movsl
mov
daa
or
add
add
push
enter
mov
leave
loop
jge
out
or
mov
mov
mov
arpl
push
out
pushl
outsb
jl,pt
mov
mov
inc
mov
add
call
test
inc
pop
pop
clc
push
icebp
cmp
push
xchg
into
out
shl
mov
call
sub
fldenv
mov
or
addr16
pop
je
add
push
out
hlt
xor
subl
push
inc
js
fldenv
xor
je
sbb
pop
inc
and
push
icebp
jae
push
loopne
repz
push
test
dec
adc
cmp
dec
cli
outsb
addr16
add
xchg
sti
ljmp
out
add
loope
pop
rolb
orl
leave
subb
jns
add
pop
enter
enter
add
loope
pop
rorb
fldcw
leave
shll
sysexit
xchg
dec
cmp
jp
test
xchg
lret
mov
cmp
adc
pop
push
leave
pushf
inc
subl
jp
fxam
lock
mov
je
nop
add
aas
fmull
add
out
inc
jo
or
andb
add
add
in
jbe
dec
dec
ffree
stc
das
shrl
push
or
imulb
xchg
lret
cli
mov
xorb
fldl
outsw
aaa
cmp
pop
cmpb
sarl
roll
inc
dec
cmp
mov
adc
cli
jo
into
xchg
ret
ja
out
lret
negb
in
ret
sub
outsl
into
xchg
mulps
je
enter
jo
icebp
xchg
shlb
add
xor
inc
ret
lods
lods
out
sbb
or
push
movsb
add
cmpsl
lock
orl
inc
into
mov
retw
jb
and
in
imul
daa
or
inc
xor
add
roll
lock
imul
gs
rolb
ljmp
int
movsb
ret
sbb
loop
out
add
sar
inc
mov
push
jmp
or
outsl
ret
rolb
jae
test
xor
data16
push
in
hlt
cli
mov
out
xchg
call
or
mov
push
mov
jmp
cmc
aad
add
mov
add
mov
add
add
add
mov
xchg
outsl
stos
int3
mov
inc
push
js
pop
fldcw
mov
roll
lea
jge
push
push
pusha
add
fnstcw
sub
sub
repz
add
add
inc
push
add
mov
fldcw
add
jmp
mov
fists
inc
sbbb
rclb
mov
or
mov
cmp
sti
xchg
gs
jnp
or
add
sbbb
push
ljmp
sub
cli
jo
jp
mov
mov
push
mov
out
xchg
sar
leave
sti
mov
jmp
out
inc
rcll
cld
leave
jnp
jne
mov
xlat
xorl
add
pop
mov
add
cld
cli
popf
jle
inc
add
adc
add
mov
scas
fisubl
fcomp
out
fwait
inc
hlt
fwait
cld
sahf
dec
mov
cmp
add
inc
test
pop
fstpt
ficomps
mov
fwait
loop
lock
add
dec
lock
jmp
inc
cld
sub
sti
lret
out
dec
test
dec
js
dec
ljmp
cwtl
pop
xor
testl
sti
push
pushf
and
ja
test
cs
or
jnp
xchg
add
push
pop
xor
push
das
cs
push
cmp
mov
jmp
subl
pop
dec
adc
test
jae
hlt
and
lds
incb
pextrw
jae
fstpt
adc
jecxz
dec
iret
in
dec
jmp
cmp
xor
stos
pop
fistl
and
repnz
mov
inc
fcmovb
add
call
add
inc
push
leave
sub
sbb
jl
sub
stc
push
cli
adc
pop
mov
jns
jns
loop
add
test
xrstors
ljmp
js
lcall
decl
inc
adc
mov
or
hlt
mov
adcl
mov
cmp
testl
xchg
mov
add
notb
mov
hlt
shrl
or
cmpsb
decb
mov
incb
and
mov
daa
sub
dec
pop
mov
std
test
add
xor
mov
testl
xchg
in
dec
lcall
test
vrsqrtss
mov
loope
mov
cli
jle
loope
add
jmp
std
ljmp
or
notb
mov
cmp
stc
adc
daa
loopne
data16
jne
push
and
inc
ret
stc
cld
bnd
add
cmp
jl
mov
pop
jmp
ret
out
ret
out
jmp
jo
add
in
je
call
add
fcmovnu
jne
fildll
int3
push
movsb
out
sbb
pop
inc
cwtl
repnz
jp
lods
jae
ds
jg
ds
scas
fdivs
xlat
jno
insl
pushf
add
jmp
dec
jns
mov
fcomps
xchg
shll
icebp
mov
pop
inc
fsqrt
std
mov
popf
sbb
jae
xchg
fildl
je
arpl
movsb
jmp
add
jae
inc
insl
adc
mov
mov
subl
push
push
fwait
jecxz
fisttpl
popa
std
std
add
lock
add
or
sub
stc
cmpsl
ret
negb
inc
clc
dec
or
call
xor
je
mov
je
pop
clc
push
mov
add
loopne
rolb
addr16
leave
flds
push
out
lcall
je
ss
incl
lods
shl
aaa
jb
xorl
add
add
lahf
insl
or
call
flds
add
aam
inc
pop
flds
movq
add
sarl
ret
xor
hlt
or
jo
decb
cmc
xor
and
jo
lods
fs
add
jo
jp
mov
and
andl
add
fsub
or
mov
mov
mov
fistpll
ret
ss
je
cli
xor
cmp
in
cmp
xchg
dec
inc
adc
je
or
xor
pushl
inc
in
jmp
lcall
mov
jl
inc
xor
in
repz
add
addl
cmpsl
das
push
push
sbb
add
call
ret
faddp
out
out
addb
inc
xlat
callw
loop
jo
out
aas
jl,pt
jg
shlb
in
sub
stos
sbb
outsb
aas
jl
mov
aas
xchg
push
daa
push
jmp
lret
out
xchg
push
lods
mov
fwait
in
pop
dec
adc
jl
icebp
inc
jo
mov
pop
dec
jl
lret
bnd
jo
xor
jno
add
and
mov
stc
dec
rolb
push
jb
add
movl
sub
or
mov
pop
xor
or
rol
lret
fnstcw
jge
dec
or
or
stc
jmp
dec
mov
sbb
add
enter
add
jae
rol
cltd
stc
pushf
pop
lds
jmp
cld
push
sbb
test
xchg
push
stc
lcall
inc
int3
setne
scas
inc
add
xchg
adc
idiv
or
add
add
sbb
add
pop
fs
fstps
jbe
test
jns
mov
fnstsw
add
stc
sbb
idivl
mov
cmp
jne
adc
roll
in
bound
and
inc
adc
jmp
pshufw
cli
aas
shlb
inc
dec
inc
lock
scas
cmp
jb
jbe
adc
mov
sbbb
pop
dec
aaa
mov
lock
adc
rcl
idivb
mov
inc
push
mov
jnp
pushf
mov
sub
xor
cmp
fisttpll
in
movsb
cli
outsl
dec
inc
in
repz
decl
pusha
cmp
fwait
in
cmp
movsl
pop
pop
flds
and
popa
sbb
ljmp
mov
ljmp
lcall
xchg
sbb
lods
mov
adc
sub
notl
adc
dec
mov
jo
out
push
fmull
fwait
or
push
push
stos
add
stos
add
dec
repz
and
out
jo
add
xchg
add
jmp
dec
jae
add
iret
mov
push
adc
cltd
pop
adc
aas
or
adc
xor
and
add
push
sub
fstpt
jno
inc
fsqrt
inc
add
jae
mov
add
sbb
jae
dec
in
push
fcmovbe
jae
test
sbb
jae
test
jmp
ret
int3
dec
or
push
sbb
addl
std
adc
push
inc
inc
sbb
bnd
scas
inc
sbb
sbb
jae
call
in
add
jns
sbb
adc
es
call
dec
pop
add
sbb
out
insl
and
or
xorl
adc
maxps
sti
sarb
add
lcall
mov
mov
inc
loopne
dec
or
mov
add
jo
dec
and
mov
std
or
outsb
add
pop
add
adc
or
jae
test
les
stos
xchg
xor
clc
div
call
add
imul
aas
inc
sub
sbb
fldl
push
xlat
pop
cmc
xchg
out
call
repz
or
aaa
cli
jmp
inc
je
dec
fildl
mov
cmp
push
mov
test
fs
jecxz
hlt
add
adc
lret
add
push
dec
jno
pop
push
ss
pop
or
ja
out
cmpsl
cld
xchg
pop
add
fistl
loop
jmp
ret
out
ret
loopew
inc
mov
adc
mov
add
stos
add
lret
dec
jno
push
push
mov
lcall
es
add
add
je
pusha
xor
aas
in
decb
out
gs
jae
mov
add
dec
int
pop
insb
adc
sbbl
inc
es
addr16
shll
leave
jo
cs
not
arpl
jb
add
out
cltd
sbb
xchg
in
ss
loop
out
cmp
or
fistpll
jo
dec
test
push
and
add
xchg
adc
and
lcall
jnp
movl
add
pop
gs
mov
fiadds
add
fiadds
dec
mov
idiv
mov
dec
addb
push
push
jnp
sbb
repnz
movsb
mov
lret
aaa
pop
je
mov
out
enter
addl
loopne
and
int3
mov
fsubrp
cmpl
inc
add
dec
mov
or
mov
xchg
jg
rcrb
mov
leave
xchg
sub
ljmp
push
ja
or
jo
or
mov
lods
incb
ficoml
fiadds
jo
std
xchg
roll
movsl
xchg
or
or
jg
stos
mov
or
das
jle
enter
sub
jmp
test
pop
lret
incl
sti
or
sahf
add
adc
insb
mov
dec
sahf
push
daa
push
in
into
add
testl
jno
add
pop
dec
ds
pop
or
out
scas
clc
mov
adc
int
sbb
test
xchg
fucomi
pop
fs
leave
mov
sub
iret
lret
mov
insb
mov
insl
inc
call
mov
or
mov
icebp
imul
mov
xchg
je
push
jmp
mov
or
test
or
stc
daa
and
jg,pt
mov
clc
popf
push
es
stc
xchg
addr16
loope
sub
push
add
sub
jmp
in
mov
ficomps
and
cmpsl
rcr
add
push
test
in
add
pop
cld
call
call
scas
inc
fistpl
add
mov
bound
scas
orb
push
add
loope
push
or
sbb
fidivrs
sbb
orb
push
push
paddusw
clc
pop
pop
mov
dec
fiaddl
mov
fiaddl
adcb
stc
lcall
adc
or
pop
popf
loope
stc
sti
out
fwait
sbb
add
fbld
cli
push
fistps
add
or
mov
out
nop
mov
aas
add
adc
mov
std
pushl
out
rorb
inc
cmp
xchg
aad
xchg
xchg
mov
inc
andb
inc
subb
xchg
jo
std
test
outsl
fdivrl
stos
adc
clc
mov
stc
cmp
incl
daa
ret
mov
add
or
xor
out
aas
jo
outsb
inc
pop
pusha
pop
or
push
clc
mov
mov
sub
enter
lret
lock
hlt
adc
sub
jo
pop
in
sub
fidivrl
mov
lcall
xchg
cmp
inc
push
in
out
test
out
lods
jmp
inc
adc
push
mov
pusha
push
lcall
adc
jp
adc
pop
mov
inc
push
in
andl
adc
jmp
jg
xor
sub
mov
mov
sahf
pop
dec
inc
movsl
xchg
je
popf
adc
aaa
std
sbb
jae
inc
icebp
es
leave
mov
cwtl
lret
add
pop
fisttpl
out
or
sub
mov
sub
add
jae
in
in
sbb
ljmp
adc
jae
lds
sub
pavgw
int
jmp
ja
aas
add
xchg
aas
sub
sbb
cmp
call
push
mov
fiadds
add
js
pop
add
jg
notb
inc
insb
shlb
cmp
sbb
test
loop
push
out
mov
pop
mov
push
addb
sarl
jecxz
mov
add
xor
dec
fidivrs
pop
loop
mov
fucom
xchg
lret
add
jnp
add
lcall
inc
sbb
das
pop
xchg
jl
lea
aaa
mov
or
ljmp
in
jmp
mov
ja
rcll
jo
cmpsb
sub
add
es
sahf
ljmp
mov
test
std
push
sub
insb
ds
sub
cmc
stos
ljmp
js
call
mov
or
out
ljmp
aaa
fsubl
mov
push
loope
sbb
daa
adc
and
popa
inc
call
mov
mov
ret
pop
push
negb
fmull
ret
mov
cmp
cwtl
sub
call
jo
loopne
push
fidivrl
mov
aas
mov
adc
test
mov
fsubs
in
shrb
jmp
mov
sbb
mov
icebp
stc
bound
jecxz
adc
xor
call
sbb
outsl
je
sub
or
add
stos
in
pop
and
fildl
sbb
xchg
mov
lcall
lds
mov
call
in
rcrb
jb
push
shl
in
outsb
ffree
inc
add
cmpsl
imul
fisubrs
repnz
push
aam
sbb
mov
roll
sbb
xchg
and
push
xchg
fdivs
add
xlat
mov
adc
lea
cmp
add
push
idiv
cmpsb
arpl
cvtdq2ps
incl
fs
jl
lcall
xchg
in
psllq
out
enter
pop
cmp
xlat
xchg
pop
inc
imulb
icebp
out
xlat
inc
idivb
daa
imulb
jo
dec
ljmp
add
pop
xchg
cli
aas
test
add
xor
stc
pop
add
xchg
push
fstl
dec
dec
and
mov
ljmp
add
inc
mov
cs
arpl
mov
sub
xor
data16
jno
mov
jle
jne
cli
ja
add
insb
mov
cli
dec
into
and
repz
cli
ja
push
cli
sti
outsl
shlb
test
pop
lods
xchg
dec
lods
ljmp
fsubl
sub
and
repnz
sbb
mov
daa
aad
in
add
out
repnz
loope
ljmp
mov
scas
lret
fwait
add
fsubl
lods
mov
fwait
scas
stos
xchg
xchg
repnz
scas
lcall
mov
sbb
into
sbb
add
out
test
outsb
add
mov
mov
sbb
jae
xor
gs
scas
stc
inc
out
mov
sti
ss
stc
or
mov
dec
jae
add
out
inc
sti
push
loop
sbb
stc
loopne
stc
mov
sti
add
jb
jb
add
stc
out
and
sub
add
gs
scas
stc
mov
adc
jmp
divl
add
cli
gs
mov
in
add
jns
decl
getsec
mov
inc
filds
inc
xchg
sahf
outsb
sub
mov
faddl
mov
push
test
pop
idiv
sbb
cli
lcall
faddl
mov
cld
ljmp
stc
pop
add
filds
lcall
sbb
jle
rorb
cmp
scas
sti
scas
dec
cmp
imul
repnz
ficomps
out
cld
dec
idivb
jo
and
repz
mov
xchg
xchg
outsl
cmp
mov
in
mov
jg
pop
sti
inc
and
and
out
adc
pop
jo
add
or
cli
jge
cld
ljmp
test
jp
addl
mov
addl
add
arpl
aam
add
and
cmpsl
fisubl
add
xor
jg
cmp
and
inc
sbb
les
dec
aam
les
data16
pop
push
movsb
xchg
sahf
push
clc
adc
cltd
push
fildll
ja
xor
push
xchg
pop
push
mov
add
loopne
test
loop
shll
mov
push
loop
pushf
scas
ret
inc
imul
jo
mov
bound
lods
inc
jnp
mov
jo
ljmp
push
fistl
ja
push
sub
push
add
jne
add
test
mov
cmpsl
xchg
das
or
movsl
stc
hlt
push
stc
bound
shrb
lds
mov
sub
call
mov
push
cmpsl
mov
or
int
test
notl
and
addr16
stos
movsl
stc
push
jle
inc
adc
xchg
or
mov
ds
test
xor
pop
add
pusha
push
aad
cs
bound
mov
add
rclb
add
pop
adc
inc
cmc
fcomp
mov
inc
loope
rorl
inc
out
negb
in
pop
test
mov
or
mov
and
and
and
or
adc
fcomi
jne
and
hlt
data16
lock
ret
call
add
stc
lcall
div
jmp
test
add
frstor
cmp
int
cmp
call
gs
xor
subl
addr16
jle
mov
mov
mov
loopne
test
inc
nop
mov
nop
mov
sub
inc
clc
repz
add
lahf
mov
mov
jle
mov
dec
dec
lods
dec
xchg
cmp
adc
jmp
cld
cmpb
aad
out
popa
mov
jmp
jbe
in
cmp
mov
into
lods
es
sub
jecxz
out
mov
out
scas
jmp
and
nop
mov
out
jae
cmpb
movsl
mov
je
sub
jmp
loope
sti
repz
pop
fcoml
jp
and
aas
movsl
outsb
inc
mov
jno
push
or
sbb
jle
aaa
xlat
mov
xor
arpl
pop
jge
sbb
inc
jno
fs
in
add
add
out
out
ljmp
stos
xor
mov
jmp
fidivl
sbb
out
inc
adc
arpl
frstpm(287
mov
mov
jmp
test
loop
push
inc
test
cltd
std
xchg
test
add
pop
push
call
idivb
std
jmp
xor
stc
or
push
push
inc
push
mov
mull
add
jae
out
push
fs
pusha
mov
xchg
add
pop
loop
pop
sti
cld
add
cwtl
cmp
data16
loope
js
mov
push
inc
leave
mov
inc
add
dec
cld
adc
clc
test
rorl
mov
adc
clc
stos
testb
test
test
xlat
add
shl
xor
mull
dec
hlt
shr
cld
inc
shl
adc
adc
jmp
sbb
insb
jp
movsb
scas
adc
add
add
addr16
hlt
clc
out
mov
xor
cltd
aas
jmp
or
sub
in
jo
jp
pop
mov
mov
int3
and
lods
daa
insb
and
divl
ja
repnz
dec
cmc
xchg
cmp
in
pushf
adc
xor
cmp
mov
sub
jl
mov
test
mov
pop
fcmovnb
xchg
inc
mov
mov
popa
ds
mov
lea
jmp
aam
mov
je
inc
mov
in
xchg
mov
cmp
lcall
pop
add
mov
cltd
and
jo
out
jmp
and
jnp
or
jbe
mov
pop
shrl
mov
pop
cmp
pushf
out
mov
push
and
imul
add
test
cld
sarb
das
outsb
push
shrb
inc
aad
movsb
pop
adc
jb
pop
test
mov
or
in
sbb
out
mov
jl
jae
adcl
movsl
stc
rorb
or
lods
stc
xchg
pop
and
jbe
testl
pop
pusha
ret
push
push
pusha
lret
stc
aam
movsl
jae
and
pop
inc
test
test
aas
faddl
cmp
xor
push
pusha
cmp
jmp
push
insb
push
pop
sahf
clc
jbe
push
mov
sbb
inc
rcl
sbb
xor
out
in
decl
lret
xchg
add
in
mov
call
nop
incl
loop
push
mov
faddl
loopne
mov
jp
pop
inc
test
dec
fildl
mov
fnstsw
add
mov
test
arpl
xchg
out
xor
cld
jo
cmp
jno
std
ljmp
jne
inc
add
cld
sarb
das
fnstcw
or
in
jle
mov
rcl
mov
pushl
mov
aam
xchg
decb
clc
nop
and
jo
inc
jg
out
inc
add
testb
sub
lods
mov
repnz
sbb
add
pop
push
hlt
repz
add
test
repnz
mov
add
mov
inc
push
mov
inc
xchg
xchg
push
fcmovbe
mov
loop
pop
jnp
and
fistps
cltd
sarl
repz
push
push
jp
mov
push
xor
push
loope
adc
popf
mov
jo
push
sub
imul
jo
pusha
loope
loope
add
roll
sbb
test
test
mov
jne
dec
push
cmp
cmp
movsb
xchg
ficoms
push
inc
mov
push
decb
mov
in
test
adc
mov
mov
add
add
clc
je
repnz
cmc
sbbb
sub
sbb
or
repnz
sbb
loope
mov
or
loop
mov
adc
fildl
and
add
shl
pop
testb
xlat
add
pop
push
clc
add
leave
jns
pop
testb
cmpsl
int
cmp
and
test
and
lcall
or
dec
add
leave
test
jae
testb
les
add
cmc
cmp
pushf
sub
jg
push
into
popa
add
mov
outsb
and
jo
or
mov
add
xor
mov
mov
shll
icebp
add
test
adc
mov
jb
aaa
inc
and
pop
and
popf
mov
adc
sti
test
bnd
ja
repz
jo
int3
ss
jl
cli
xchg
mov
jno
mov
jb
pop
pop
jnp
mov
scas
jo
jo
std
mov
sub
fwait
incl
sub
adc
xor
inc
push
jecxz
dec
clc
daa
xorb
cmpsl
sbbl
push
inc
mov
outsb
into
aas
xchg
dec
mov
call
inc
call
sub
movsb
jae
dec
mov
daa
mov
inc
jp
mov
imul
mov
fbstp
mov
movsb
jae
add
into
xchg
in
stos
mov
pop
aam
ficompl
ficoms
add
int
pusha
shrd
sub
pop
sbb
push
stc
mov
adc
mov
cs
jge
pop
or
lcall
mov
call
xchg
mov
xor
ljmp
cmp
mov
rcl
fdivp
and
jmp
jae
sbb
shl
sub
xchg
xor
pop
neg
es
test
dec
pop
loop
and
xlat
ja
bound
cmp
jae
or
add
fnsave
inc
add
cmpsb
sub
int
jmp
gs
clc
lcall
or
add
faddl
cmp
jge
pop
sbb
add
les
sbb
mov
add
pop
icebp
add
addr16
xor
jmp
testl
ret
loop
es
gs
xchg
adc
sti
adc
stos
or
ja
jo
std
or
sbb
sti
pop
jo
sbbb
js
cli
mov
ss
jl
inc
call
fwait
div
outsb
pop
add
mov
adc
std
push
sub
or
dec
pushl
fisubrl
add
repz
or
imul
or
mov
jnp
icebp
fisubl
jge
jl
aas
adc
xor
test
add
jo
stos
movb
mov
add
out
fstpl
out
jnp
xchg
mov
andl
imull
jge
push
xchg
out
cmc
cmpsl
jne
dec
xchg
and
jns
cld
std
sbb
inc
add
sub
sbb
add
aas
add
pop
add
out
fstpl
xchg
and
jmp
xchg
push
add
fmull
outsl
cmc
jnp
pop
std
test
xchg
add
je
xchg
cmp
inc
cmc
test
fildl
cmpsb
mov
call
jne
mov
fildl
repnz
add
push
test
sahf
jnp
or
fdivp
sub
xchg
adc
jg
icebp
xchg
stc
jmp
mov
rolb
sub
add
mov
int3
mov
jmp
popf
xor
mov
and
test
test
jns
aad
orl
adc
incl
fsubr
mov
sub
xor
sahf
pop
pop
add
cs
das
addl
jcxz
add
add
add
popf
jns
push
loope
int
adc
call
fsubr
insb
fadds
add
jecxz
ret
lret
add
fsub
add
cs
out
jnp
xorl
add
insb
xchg
ret
addb
loope
ja
movl
fmul
bound
jo
push
cmp
mov
adcl
cmp
repz
add
scas
push
sti
lret
je
les
test
test
mov
neg
dec
fnsave
into
mov
lret
xabort
sbb
imul
or
or
ljmp
adc
pop
jb
xchg
adc
pop
mov
xor
add
scas
inc
cmp
and
test
out
imul
inc
insl
pop
popa
push
push
insb
xchg
stos
js
out
mov
mov
into
inc
push
stc
pop
pop
xchg
data16
ljmp
daa
je
cmc
xchg
jo
sub
or
rolb
jo
dec
pop
std
jns
lds
arpl
add
pop
inc
mov
hlt
adc
jmp
pop
or
bound
pop
push
in
push
call
insb
xor
push
bound
sub
pop
sbbb
lds
repnz
xor
pop
cmp
xor
adc
cmc
pop
inc
in
mov
rcl
mov
pop
fsubs
adc
test
les
or
mov
mov
out
add
add
xlat
add
incl
mov
cvtdq2ps
and
pusha
inc
and
mov
cmp
or
mov
decl
jne
add
in
or
leave
flds
cmp
aam
add
xlat
jmp
enter
push
pop
jge
rorb
cmp
lea
cli
push
mov
xchg
leave
aad
jne
add
adcl
hlt
pop
jo
jns
or
add
js
jo
std
or
addr16
out
jb
test
insl
pop
iret
fdivs
es
add
mov
addr16
mov
add
mov
cli
rep
and
in
ret
jae
popl
ja
jo
std
or
je
ja
les
xor
jae
fwait
call
cli
dec
xchg
je
add
mov
add
or
push
rcll
clc
daa
test
or
pop
stc
mov
add
insl
fisubs
add
mov
sbb
lea
jne
xchg
jmp
hlt
cmpsb
icebp
je
pop
in
push
jnp
mov
stos
mov
hlt
add
movsl
jne
mov
les
pushf
cmp
jp
or
jp
jnp
push
ljmp
bnd
pop
fiaddl
mov
loop
jae
mov
jmp
movsb
xchg
cmp
jl
lcall
aad
pushf
or
stc
cs
insl
div
pop
sti
push
fs
ljmp
add
inc
xor
incb
stc
lods
addr16
aad
mov
aaa
and
xor
iret
add
jge
add
xchg
test
add
outsl
loopne
shl
xchg
stc
sub
pop
adc
jl
comiss
mov
mov
idiv
mov
std
mov
push
push
xor
jecxz
add
fs
std
or
call
xlat
jmp
push
mov
mov
insb
or
cmp
lods
push
cmpl
dec
push
cli
mov
out
add
xlat
add
lcall
inc
adc
jo
or
std
mov
mov
cld
mov
addb
cmpb
add
adc
mov
daa
aas
adc
lods
xchg
cld
jo
psubq
adc
decb
repz
ljmp
or
pop
jo
movl
rclb
in
push
lods
jl
or
mov
add
nop
jns
sar
or
lcall
mov
cmpb
js
ds
pop
fsubl
les
mov
jg
jno
push
sbb
xor
cld
sub
xchg
scas
roll
out
pop
std
sar
xor
or
jo
out
stos
pop
les
add
mov
shr
adc
add
jecxz
idivl
pop
xchg
lahf
add
add
xor
mulb
push
jno
xlat
ljmp
mov
adc
mov
out
add
jno
jo
add
mov
leave
imul
ljmp
mov
jbe
loopne
inc
fwait
add
das
jne
in
push
and
add
sahf
ljmp
mov
arpl
inc
jmp
test
adc
fldl
movups
stc
pushf
fildl
subl
pusha
clc
jecxz
fildl
jb
mov
push
cltd
and
sbb
sarl
prefetchw
or
add
idiv
or
pop
test
xchg
incl
fisubl
sti
subb
dec
mov
add
loope
orb
idiv
arpl
call
push
mov
dec
insl
mov
ljmp
je
adcb
lret
psubd
mov
xor
pushf
stc
in
test
fisubrl
insb
imul
negb
mov
outsl
jo
xchg
addl
jo
int3
pop
in
xor
push
jmp
dec
pop
dec
jp
std
jle
push
pushl
clc
or
mov
pushl
inc
call
jmp
sub
adc
pop
ja
add
movsl
fdivrp
mov
loop
aas
jo
stc
pop
jae
sar
test
stc
cli
gs
add
mov
mov
add
std
mov
out
push
push
cli
mov
bound
push
xorl
xor
sbb
insb
add
out
and
ret
mov
push
mov
cmpsl
std
hlt
lahf
lock
outsl
dec
xchg
jns
mov
daa
aam
adc
cld
loope
push
jnp
cltd
test
cmpsl
add
or
lock
cs
imull
pop
insl
jl
outsb
cmp
adc
pop
lock
sub
fwait
repnz
aam
add
jecxz
insl
lret
add
inc
arpl
fistl
fidivrs
add
sub
and
or
loop
lahf
jecxz
bound
je
jae
jo
push
mov
aam
or
loop
cmp
rolb
dec
xchg
pusha
sub
cmp
jbe
pop
and
test
or
loope
xchg
repz
test
jo
push
ss
std
sbb
jb
xorl
push
pop
rcr
mov
add
fnstcw
fwait
add
popa
aad
decl
flds
jmp
add
je
jle
mov
mov
stc
movsb
xlat
stc
xchg
je
loop
divb
bnd
icebp
dec
xlat
out
pop
mov
add
xor
cld
sahf
lock
mov
in
mov
filds
sahf
mov
movntq
out
cmc
jne
subb
sahf
mov
add
fst
jmp
mov
pop
enter
add
push
cmc
jmp
jne
call
ss
loopne
stc
or
jmp
jae
mov
fnstenv
mov
pop
stc
mov
xchg
cmc
std
pushl
mov
dec
cwtl
icebp
call
je
cmp
std
lcall
jle
fs
jb
inc
push
xor
sbb
or
cli
pop
shl
mov
sbb
jo
and
imul
push
jecxz
and
push
rorl
popa
les
fildll
jp
loop
jp
mov
mov
push
pop
xorb
clc
and
jmp
inc
push
aam
cmp
movsb
pop
dec
jge
iret
pop
mov
push
or
call
iret
outsb
out
sbb
adc
adc
adc
iret
outsb
out
push
adc
loope
imul
iret
jo
or
add
jae
rolb
add
dec
pop
and
leave
mov
out
aas
add
bound
je
push
out
xchg
test
xchg
cmp
test
fs
sbbl
fildl
shl
jp
mov
mov
or
les
pop
xor
das
xor
or
pop
add
jae
inc
adc
or
hlt
pop
inc
fstps
fildl
flds
add
jae
inc
add
loope
cld
cmpsb
xrelease
sahf
call
xor
fldl
nopl
sti
mov
mov
mov
inc
and
jne
sbb
mov
add
mov
fstpt
mov
add
rcrb
xchg
inc
or
sar
inc
loopne
out
pop
jg
add
lock
clc
testb
std
cmp
adc
adc
adc
test
sbb
jbe
shlb
ljmp
push
inc
jo
rorb
aaa
sbb
push
or
jle
outsb
and
test
cmp
mov
mov
or
xor
mov
sbb
jo
rcrb
lahf
popa
lock
cmp
je
enter
pop
lock
xchg
out
data16
cli
jmp
fucomi
testb
out
jo
lock
jg
jg
add
lcall
fiaddl
jo
jecxz
out
notl
mov
and
add
jnp
aam
sbbl
fisubrl
aaa
add
jnp
adc
repz
push
notb
les
addr16
add
insb
je
jg
sub
iret
imul
jg
test
add
lods
cmp
test
out
out
dec
mov
xchg
fildl
inc
dec
pop
xchg
jmp
cmp
stc
push
pop
xchg
je
or
mov
sub
test
push
push
cmc
mov
cli
pop
add
in
aam
jmp
mov
aad
add
jae
inc
icebp
lret
jo
in
in
mov
jmp
loopne
sahf
divl
in
incl
add
ret
loope
mov
testb
flds
add
testb
je
mov
cmc
jne
add
jmp
roll
adc
add
loope
push
div
test
stos
jmp
adc
xor
sbb
divb
dec
push
hlt
mov
ret
mov
outsb
adc
in
call
inc
clc
jo
inc
out
stc
into
jnp
dec
fcoms
pop
fdiv
insl
orl
xchg
pop
cmp
or
cli
stos
das
pop
or
bnd
cli
fisttps
enter
and
inc
and
inc
jle
mov
cmc
push
scas
addr16
cli
sbb
ljmp
jg
out
jo
sub
mov
insb
cmc
push
lea
mov
mov
outsl
imulb
push
inc
sbb
popf
and
adc
popf
mov
enter
adc
pop
add
jb
imul
ret
jp
sub
jnp
ret
dec
sarl
adc
fsubrs
mov
pop
testb
pop
push
push
jae
stos
jnp
enter
daa
push
xlat
jnp
sbb
jecxz
dec
and
jp
in
pusha
cld
sarb
xchg
lock
add
jmp
mov
insl
sbb
sub
sub
test
fwait
call
insl
inc
out
sub
xchg
pop
adc
movsb
fwait
not
inc
out
popa
inc
int
cmp
sbb
mov
lret
cli
and
repnz
mov
divb
imul
and
mov
sahf
jp
je
popa
rclb
sahf
ljmp
fadds
ss
test
inc
popa
dec
add
inc
cmp
aam
data16
jl
push
pop
test
add
pushl
cmp
jg
add
addb
mov
incl
pop
or
arpl
push
cmc
mov
incl
push
mov
or
jmp
inc
clc
shlb
call
pop
xchg
in
sbb
mov
fs
xor
lds
inc
pop
lcall
lods
mov
xchg
sbb
sti
mov
fdivr
xchg
mov
je
push
xlat
or
rorb
int3
cmp
in
inc
fsubrs
jo
and
mov
and
or
aam
pop
ss
or
daa
pop
cli
ja
std
jns,pt
push
or
mov
adc
loope
sbb
rcrl
push
out
in
cli
add
loop
mov
js
mov
out
nop
insb
fucom
add
sbb
or
dec
enter
mov
clc
add
xchg
js
mov
adc
push
loop
outsb
int
call
mov
add
imul
pop
pop
xor
push
fcoms
xlat
outsb
ss
fisttps
ja
mov
mov
sbb
lcall
jo
lods
daa
xor
daa
and
mov
lret
or
stc
fiadds
mov
insl
out
pop
in
mov
mov
mov
pop
imul
jno
and
jb
int
ja
adc
pop
rcll
out
jae
mov
or
daa
fucomip
dec
cmp
ljmp
add
jb
lods
fistps
add
cld
andl
fildl
cmc
jl
sbb
add
test
sahf
pop
sbb
mov
jnp
test
jae
adc
push
push
sub
cmp
idiv
les
pop
test
cld
idiv
xor
enter
adc
sub
outsb
jp
or
test
jmp
testl
jmp
testl
sbb
mov
pop
mull
mov
icebp
or
flds
pushl
push
or
je
mull
clc
cmp
cmp
ja
mov
jg
or
cmp
in
cmc
add
addr16
test
pop
sbbl
les
sahf
jo
std
jg
js
test
cmp
mov
jo
das
addl
adc
jle
sbb
push
cli
inc
and
jle
imul
repz
and
popa
iret
movsb
filds
push
cli
fistpl
mov
mov
fildl
add
int3
push
jae
or
into
add
or
sbb
outsb
test
fucomip
decl
pop
leave
mov
addb
ljmp
mov
push
jae
call
adc
repz
cmp
arpl
or
arpl
je
pop
mov
push
push
add
pop
xlat
outsb
xor
in
out
mov
je
pop
lret
in
out
imul
sbb
fidivs
idiv
es
jge
xchg
inc
or
mov
mov
mov
mov
xchg
cmp
lods
jae
xor
jae
sub
jae
cmpsl
ss
sahf
jae,pn
xchg
ss
test
ss
test
ss
outsb
jae,pn
data16
test
ss
test
jae
test
jae
stos
jae,pn
aaa
ss
das
jae,pn
mov
scas
jb
xchg
mov
je
scas
jb
add
cltd
stc
sbb
mov
stc
mov
dec
cltd
stc
add
or
int
cltd
stc
scas
dec
cltd
stc
push
dec
cltd
stc
cmp
stc
outsl
push
cwtl
stc
jge
cwtl
stc
mov
cwtl
stc
xchg
push
cwtl
stc
sbb
add
stc
loopne
cwtl
stc
out
loopne
stc
mul
xchg
stc
add
lret
dec
fistl
stc
pop
inc
cwtl
stc
repnz
stc
lods
adc
stc
mov
sahf
dec
ret
pushl
ret
jmp
ret
pushl
rol
call
ret
pushl
mov
ljmp
ret
pushl
ret
jmp
enter
cs
decl
mov
pop
mov
aas
test
jae
add
add
or
jnp
add
ja
or
mov
adc
cld
adc
pop
negb
fildl
testl
mov
cvttps2pi
ret
test
mov
cmp
mov
dec
and
adc
lods
rorl
inc
cmpsb
mov
sbb
mov
sbb
and
sbb
stos
mov
lds
int3
incl
mov
inc
cmp
sarl
mov
shrl
mov
daa
bound
pop
jp
rorl
lods
roll
lahf
sar
add
mov
push
xor
outsl
fldenv
mov
sbb
ss
adc
sbb
outsl
scas
cmp
mov
out
mov
inc
pop
mov
inc
aaa
mov
pop
and
outsl
mov
mov
outsl
pop
scas
xor
cmpsb
xor
sahf
xor
movsl
xor
popf
xor
xchg
xor
lea
outsl
mov
xor
mov
xor
lods
xor
add
cltd
stc
pop
rcrb
stc
lock
stc
push
popf
cltd
stc
insb
add
cltd
stc
push
inc
add
add
in
lcall
xchg
jmp
fisubl
or
lret
lret
jge
loopne
rorl
popa
push
call
inc
shl
pextrw
lcall
rorb
aad
decl
push
adc
push
inc
xlat
test
push
fiaddl
cmp
pop
jo
dec
call
pushl
mov
test
movsl
mov
cli
fisttps
test
mov
sub
jae
cli
cmpsl
call
cmp
mov
mov
adc
jae
lret
data16
dec
lret
test
dec
cli
mov
outsl
sbb
cli
jmp
xchg
mov
adc
add
xor
das
fwait
jg
xor
data16
and
push
sub
clc
push
nop
add
push
hlt
inc
enter
jo
fs
insb
dec
add
push
in
or
mov
fmuls
call
sub
jecxz
mov
push
add
push
outsl
push
push
pop
lret
iret
jle
jo
push
bound
insb
lret
jecxz
pop
pop
mov
add
and
call
fs
jno
xchg
mov
stc
pusha
clc
add
xchg
fildl
outsb
fs
push
je
jo
push
dec
pop
andl
bound
add
mov
cs
push
inc
icebp
sbb
or
call
mov
mov
ljmp
and
jae
add
push
jne
fildl
stc
jae
dec
or
add
ds
insl
jb
add
lahf
stc
jae
fiaddl
add
je
jae
jmp
mov
xor
incl
data16
add
call
mov
push
ljmp
fmull
idiv
xor
bound
add
aad
movsb
pop
stc
mov
idiv
data16
mov
idiv
jbe
push
mov
idiv
data16
push
push
or
mov
pop
flds
jo
sbbb
cltd
push
xchg
sti
cwtl
xor
out
repnz
and
jmp
call
cmp
sub
divw
mov
add
jge
push
mov
iret
dec
cli
iret
imulb
outsl
sahf
dec
call
scas
ds
add
std
out
std
ret
notb
sti
xchg
enter
ja
cltd
sbb
bnd
mov
push
aas
cltd
cli
stc
mov
sti
add
loop
in
cmpsl
fimull
fstps
add
push
sub
jle
aam
cs
xor
in
test
sbb
push
xchg
insl
dec
popf
xor
fs
xor
fistps
or
mov
std
ljmp
push
out
inc
adc
push
aam
ret
add
ljmp
jp
add
fldt
pop
add
pop
add
sub
xchg
add
pop
lahf
dec
jp
ljmp
insb
repnz
pop
fdivl
sub
mov
into
jae
add
fildl
mov
sub
xchg
pop
icebp
jo
xchg
test
pusha
push
lea
insb
dec
in
sbb
jae
in
mov
cli
ffree
lds
add
lahf
stc
bound
jns
push
mov
mov
jmp
es
cs
or
xchg
push
call
push
xchg
add
sbb
jmp
sbb
testl
ret
sub
xchg
idiv
cs
ja
in
cmp
or
dec
fidivl
mov
cs
out
cmp
xor
jl
sub
cmp
mov
mov
push
mov
jecxz
pop
cs
getsec
rorl
cmp
push
pop
test
add
lret
loope
cld
xchg
sub
mov
or
jb
inc
jl
subl
lds
std
pushl
andl
add
jmp
pushl
mov
jg
jl
daa
je
pop
repz
jae
jns
jle
dec
je
stc
ret
insw
mov
in
xchg
aas
fcomip
dec
out
pop
dec
cli
sti
cs
test
stc
mov
sbb
xchg
iret
sbb
push
mov
xchg
fisubl
js
mov
or
testl
dec
push
mov
shr
in
pop
mov
loope
stc
mov
fs
out
lock
sbb
cli
pushw
push
fbld
leave
pop
test
sarb
imul
negb
add
mov
mov
movsb
dec
push
daa
pop
mulb
pop
add
outsb
cwtl
or
fildl
jmp
jbe
icebp
popf
push
lods
dec
sbb
inc
jb
loope
cwtl
or
fildl
jmp
jg
icebp
push
jb
rcrl
jmp
addr16
or
fiaddl
jmp
sub
adc
mov
cmp
adc
push
push
pusha
stc
xchg
js
sub
jbe
push
jb
stos
push
jnp
pop
out
pusha
lock
sbb
cmp
and
mov
pushf
aaa
call
loope
in
mov
bound
call
jge
cltd
xlat
add
xchg
push
mov
xor
roll
dec
fistpll
ja
idiv
cmpsl
pop
xor
push
loop
add
cmpl
cmp
je
mov
inc
cld
and
cmp
adc
xor
and
in
sub
jmp
xchg
inc
data16
call
pop
pop
pop
test
add
jo
or
mov
out
mov
dec
test
roll
jnp
sbb
inc
cli
cmp
repz
outsl
fscale
jae
out
jns
pop
imul
inc
jno
fimull
sbb
mov
push
lock
popf
rorl
jge
movsl
sbb
push
mov
pop
jge
test
enter
mov
cli
out
leave
or
cmpsb
mov
jne
fldt
cmpsl
mov
je
mov
pop
inc
dec
push
xchg
dec
xchg
dec
xor
pop
push
ljmp
xchg
arpl
fstpt
add
popa
aam
push
sbb
gs
aam
sub
fsubrs
dec
xor
add
sbb
hlt
xchg
cmp
add
push
dec
add
mov
clc
aad
mov
call
add
jp
pop
push
add
mov
jge
add
push
insb
jo
clc
push
das
gs
das
loope
icebp
jecxz
inc
fptan
and
cltd
ss
push
and
scas
fiaddl
push
jmp
xor
mov
stc
fsubr
jl
jmp
scas
add
mov
ret
inc
sbbl
sub
adc
mov
adc
add
push
jne
push
xchg
pusha
and
in
fiaddl
push
leave
or
add
add
sbb
shr
add
and
xor
pop
stc
ret
in
dec
rolb
add
fisttpll
jno
dec
adc
and
andl
mov
mov
test
push
xchg
add
inc
pop
lock
adc
dec
mov
inc
into
xlat
jae
andb
xorl
push
xor
adc
movsl
cld
xchg
test
mov
mov
cmp
xchg
mov
jge
or
je
xchg
dec
or
dec
decl
gs
jo
std
xchg
jo
dec
add
lret
std
repnz
xor
mov
lds
jae
test
pushl
je
or
inc
std
pushl
adcb
std
push
lahf
cli
mov
js
je
das
shlb
adc
outsl
jae
iret
xchg
pop
sti
arpl
pop
addr16
insb
jg
pop
out
xchg
fsubrs
into
cmp
push
mov
fcompl
push
mov
pop
inc
push
cmpsb
pop
out
adc
pop
dec
push
cmpsb
repz
adc
pop
nop
push
cmpsb
jmp
fwait
jl
bound
jl
mov
je
inc
fwait
out
aas
pop
push
out
sbb
mov
popa
repz
pop
mov
push
push
pop
cmp
inc
in
and
cli
mov
fisttps
insb
add
or
fadds
jmp
cmp
cli
call
jg
jmp
fsubrp
pop
cli
inc
xor
jnp
insb
out
cli
xor
sub
add
mov
repnz
outsl
jg
cmp
add
or
xor
test
imul
jmp
xor
add
push
add
idiv
nop
xchg
mov
leave
and
adcl
pushf
mov
cmpb
add
aad
inc
in
dec
add
push
add
xchg
mov
cmovle
mov
addl
and
xlat
adc
popa
dec
inc
call
push
push
mov
lcall
je
loop
arpl
add
call
testb
add
pushf
pop
adc
sahf
add
sbb
cld
pop
and
decb
inc
inc
je
mov
add
or
aas
cli
hlt
test
test
inc
std
jmp
adc
rol
js
hlt
aas
adc
push
mov
cs
mov
stos
mov
sbb
xchg
int
iret
repz
dec
incl
clc
ja
push
jmp
inc
inc
mov
xchg
xchg
and
mov
xor
test
je
mov
sub
aaa
and
cmpsb
pop
fldt
pop
fucom
add
pop
fcompl
fwait
out
xchg
jecxz
lea
inc
xlat
ds
pop
inc
cltd
out
pop
outsb
xor
push
cld
pop
into
pop
mov
incl
call
lods
pop
out
cmpsb
pop
dec
packssdw
add
sub
add
fistps
inc
ja
out
jp
xor
jo
cmp
imul
fildl
out
and
call
call
sbb
stc
jae
jae
pop
fmull
insb
cltd
fildl
jmp
insb
fisttpl
gs
fildl
jmp
jmp
jae
ljmpw
lcall
jbe
dec
call
and
jno
jg
inc
fildl
jmp
ljmp
out
bound
jmp
loope
stc
push
scas
stos
push
mov
outsl
call
mov
inc
icebp
sbb
push
push
js
xchg
in
clc
add
jge
add
imul
fildl
add
in
dec
push
push
push
sahf
dec
jmp
pop
repnz
hlt
mov
andl
lea
jmp
imul
xchg
add
dec
sub
cmp
adc
xchg
rolb
enter
xor
sti
dec
push
jne
jno
std
mov
push
cmp
aaa
xchg
mov
mov
sti
sysexit
shll
sub
mov
mov
sub
inc
jle
xorl
std
fbstp
cmp
lret
loopne
xor
dec
cmp
xor
cs
xchg
add
ja
push
or
mov
mov
std
pushl
int
scas
fldt
stc
lahf
pop
subl
jmp
add
sbb
lahf
adc
in
lahf
das
aam
scas
je
and
cmp
push
pop
and
lock
fcmovnb
mov
pusha
cmpsl
or
rclb
ret
negl
pop
gs
mov
jno
out
add
mov
scas
dec
push
js
jo
outsb
mov
mov
dec
add
flds
mov
dec
jmp
and
add
lock
cs
inc
or
sbb
jmp
xor
sbb
mov
pusha
cs
andl
pop
scas
jmp
rolb
hlt
out
jge
add
sbb
lahf
leave
push
mov
addr16
ljmp
in
call
dec
mov
mov
jne
and
and
loope
test
cmpsl
mov
pop
ret
inc
in
lahf
movsb
inc
insb
gs
add
fs
lock
test
fistl
sbb
dec
mov
fidivl
pop
jge
std
cmp
mov
fadds
jmp
push
pop
hlt
int3
orb
leave
and
cmp
push
mov
cmp
lahf
shlb
incb
and
mov
pop
adc
jmp
fs
inc
sbb
mov
inc
inc
in
enter
xchg
sti
add
sbb
repz
sub
sub
xchg
fisubrs
ja
std
add
rcrb
push
mov
add
jp
out
mov
pop
clc
push
add
sbb
mov
inc
std
cli
lahf
cld
mov
sbb
or
xchg
lret
xlat
cmp
or
sub
sti
inc
lods
fldl
adc
push
test
mov
rcll
inc
add
test
mov
jns
jb
out
daa
rorl
add
push
or
add
xlat
stos
subl
pop
aam
cmp
mov
gs
lea
movsb
dec
dec
arpl
idiv
repnz
sbb
jg
fsub
add
cmp
loop
shr
add
sub
jo
xor
add
pop
scas
cmp
inc
sub
out
lahf
pusha
sub
iret
sub
add
push
rcr
test
call
in
push
mov
cli
xlat
jnp
stc
push
mov
cmp
xor
push
test
push
loop
lods
mov
push
test
sub
lcall
rorl
lret
inc
inc
call
stc
jo
xor
pop
in
dec
jne
add
mov
mov
aas
in
leave
sub
sahf
cmpsl
arpl
repz
stc
fimuls
add
addl
mov
pushf
add
or
xchg
ds
inc
hlt
jp
mov
dec
jl
jle
add
mov
xchg
dec
jl
dec
into
movl
add
inc
lock
add
shrb
mov
add
faddl
xor
add
fdivs
andb
je
or
in
sub
dec
add
sbbb
jae
fs
jg
sub
jae
mov
jl
push
jns
cmpsl
ja
mov
adc
addb
inc
add
mov
jne
sub
inc
and
xchg
pushf
jns
fnstsw
xchg
mov
shl
jno
inc
inc
idiv
decb
ds
inc
mov
xor
leave
mov
int
push
insb
test
test
sub
cwtl
mov
sub
loop
add
dec
mov
xor
inc
jg
stc
dec
push
mov
inc
scas
jbe
aam
jae
mov
out
cwtl
cmp
dec
adc
movsb
pop
out
iret
aas
sub
pop
sbb
int3
dec
incl
les
xcrypt-ctr
cmpsl
pop
dec
repnz
scas
sub
sbb
cmpsb
and
incl
pop
cmpsl
outsb
daa
lock
or
fildl
push
inc
add
mov
push
cmpsl
push
dec
stc
xchg
jle
push
sub
in
decl
mov
inc
jmp
imul
sbb
fstpt
outsl
mov
jno
push
pushf
add
iret
in
pushf
imul
negb
sub
push
sahf
push
subl
scas
test
pop
cwtl
lock
bound
loopne
test
dec
cli
hlt
dec
fiadds
mov
test
add
add
mov
jo
push
push
lea
loope
xor
testl
or
or
and
call
or
add
xor
mov
ds
movl
pop
fsubr
pop
out
testl
ljmp
add
mov
mov
dec
test
or
call
push
mov
cwtl
sbb
push
aam
lahf
in
adc
xor
js
xlat
insb
cs
mov
jae,pn
shll
dec
lret
add
add
scas
js
sahf
mov
mov
inc
std
lcall
scas
mov
xchg
cs
jmp
int
fwait
mov
out
jae
or
push
mov
adc
mov
les
cli
aaa
gs
sbb
addb
loop
outsl
pop
fs
add
fistpl
cli
pusha
cmpsl
add
sbb
fs
inc
add
fs
in
mov
add
pusha
mov
lret
add
fwait
xor
not
sbb
cmpsl
add
je
decl
sub
cmc
push
xor
sbb
vaddps
cmp
sahf
cld
mov
clc
xor
inc
jae
sbb
cmp
inc
rcll
in
dec
add
call
pop
add
sahf
pop
dec
out
inc
push
insb
mulb
call
rorl
dec
stc
mov
mov
int
in
int
fnsave
int
fldt
or
outsl
inc
push
cmp
add
insb
inc
cmp
test
fwait
inc
jb
inc
int3
or
mov
dec
cli
xor
push
mov
mov
test
insl
add
test
jb
add
dec
fldl
dec
movsl
fisttps
adc
clc
or
repnz
jne
cs
cmp
clc
je
pop
xorb
push
sub
testb
fld
push
push
sbb
mov
dec
inc
cwtl
or
aaa
dec
xchg
add
lods
dec
push
out
adc
clc
orb
fs
dec
fdivr
mov
mov
loope
jo
sub
hlt
icebp
stc
test
xor
std
into
push
out
sub
add
pop
cmpsl
mov
xor
xor
gs
sub
sub
mov
gs
fistpll
sub
movl
add
scas
enter
mov
cli
lahf
mov
sub
dec
mov
or
loop
cli
ja
jo
outsl
push
sub
jbe
loope
pop
testb
dec
lods
cmpps
xor
cli
sub
ja
ljmp
or
xor
cli
inc
arpl
je
ret
xor
sub
inc
xor
enter
lret
pop
iret
sub
mov
pop
jecxz
leave
lret
pop
xor
cltd
inc
push
mov
femms
cld
pop
inc
notb
inc
xchg
shr
jns
cld
add
dec
lret
lods
iret
add
cmovle
jb
repnz
rolb
lods
lret
sbb
jne
test
xor
or
jne
ljmp
sub
sbb
inc
inc
stc
cmp
pop
ret
repnz
fs
push
shll
cli
cmpsb
lock
xchg
cmpsl
pop
cmp
sub
les
cli
jbe
scas
call
data16
daa
mov
cmp
jge
add
dec
cli
mov
mov
adc
cld
cs
mov
inc
add
call
gs
xor
cli
dec
add
or
mull
mov
je
pop
jb
leave
mov
testb
jg
or
jne
pop
dec
clc
rorl
inc
clc
mov
cwtl
fadds
mov
mov
shrb
pop
jo
fistl
xchg
jns
shrb
out
or
testl
std
and
out
cmc
push
sbb
std
jmp
jmp
pop
int3
ret
test
clc
dec
iret
inc
je
sti
out
mov
test
aas
add
les
xor
mov
fcmovnbe
xorl
dec
xor
lcall
ja
sbb
xchg
push
sub
mov
out
jo
jns
jno
out
pop
mov
out
ja
dec
adc
add
jl
push
mov
leave
adcb
test
jl
out
inc
pop
xor
mov
inc
insb
inc
mov
mov
mov
jl
xor
in
test
xchg
pop
mov
mov
into
push
push
fstpt
ficomps
xor
sub
out
dec
iret
xchg
mov
mov
sbb
test
out
inc
sub
add
cwtl
movsb
push
je
and
pop
dec
mov
insb
divl
inc
jle
push
inc
stc
cltd
cmc
inc
cli
mov
or
cld
mov
dec
jnp
mov
insb
xchg
sti
testb
mov
or
mov
dec
inc
stc
xor
into
cwtl
sarl
pop
push
rcrl
jno
leave
inc
jmp
pop
cmpl
movl
add
jno
mov
cmc
lcall
repz
add
daa
push
push
enter
repz
xchg
jp
mov
pop
stc
push
mov
dec
sbbl
idiv
lret
mov
dec
call
outsb
jno
call
push
outsl
jmp
lcall
fstpt
and
divb
loopne
xchg
jae
jp
inc
repnz
stc
jge
fstpt
add
fsubrp
inc
jo
adc
lea
cld
xchg
sbb
insb
xor
icebp
xchg
jle
js
and
sub
cli
jmp
and
mov
push
int
pop
repz
dec
sahf
mov
jbe
mov
jmp
add
jge
push
and
test
inc
cmp
jno
std
jg
xorb
jmp
or
jns
inc
mov
loopne
fldenv
mov
mov
aaa
out
jo
insl
repz
mov
mov
je
jnp
pop
mov
push
mov
add
lcall
dec
and
shlb
insb
aas
aas
out
movsb
iret
incl
xor
jp
xlat
into
sub
nop
ror
shlb
jle
aas
pusha
sar
loop
ja
cmpsl
cmc
repz
add
pop
dec
iret
cmp
out
jmp
inc
int
mov
fs
add
cmc
lret
jmp
shlb
dec
jne
lock
mov
jae
fisubrl
test
shrb
roll
mov
sar
mov
dec
inc
jmp
dec
add
and
mov
clc
add
dec
inc
jmp
dec
adc
jnp
cmp
stc
jl
lods
stc
aam
jmp
jmp
movb
outsb
inc
stc
bound
loop
add
inc
sbb
mov
mov
aas
cmp
inc
jnp
xlat
div
mov
push
push
pop
rcrb
cltd
loop
push
insl
icebp
call
repnz
and
jge
mov
dec
mov
enter
cmp
rolb
arpl
dec
loope
xchg
xchg
push
test
add
je
bound
lea
idiv
jo
out
sbb
fists
sbb
mov
push
mov
scas
loop
das
pop
xchg
cmpsl
enter
scas
mov
mov
std
bound
dec
jle
daa
mov
sub
nop
add
lods
mov
inc
mov
push
in
gs
mov
jb
xchg
je
add
ja
insb
push
nop
mov
mov
sbb
lcall
add
mov
and
dec
scas
mov
cmp
lea
sbb
adc
das
ds
divl
adc
push
adc
negb
mov
roll
cmc
cld
ds
jae
arpl
fs
jae
clc
in
fsubrl
out
cwtl
nop
cmp
fsub
add
sbb
mov
pop
push
dec
lods
cmp
mov
fidivrl
setbe
add
xor
insb
push
scas
inc
push
xor
pop
fsubl
aad
push
mov
xor
pop
stc
xor
insb
out
jecxz
fildl
jmp
mov
stos
mov
stos
stc
cli
xorl
jns
dec
sar
push
pop
shr
sar
call
lea
xchg
loop
insb
fidivrl
stc
jmp
jae
jae
pop
pop
dec
pop
push
mov
add
mov
lcall
pop
inc
or
pop
flds
or
cmpl
jge
add
jnp
fisubs
add
fldl
decb
gs
adc
inc
sahf
push
test
fiadds
add
adc
jae
insl
notb
add
stc
inc
test
push
in
call
cmovo
aas
add
daa
or
or
addr16
adc
addb
push
or
xchg
inc
hlt
call
pop
idivl
jo
inc
or
mov
out
pop
cli
stc
mov
mov
inc
inc
testl
sbb
pop
jmp
or
daa
inc
inc
push
fdivs
cmp
in
sbbb
mov
lcall
xchg
inc
xchg
shlb
jno
and
jbe
mov
jae
mov
in
mov
jge
repz
jo
xchg
dec
or
add
scas
sub
pop
adc
cmc
popf
or
arpl
xchg
mov
pop
add
scas
xchg
mov
mov
popf
ret
mov
adc
jnp
popa
xor
out
xor
outsb
xchg
pop
fdivrl
mov
xchg
outsl
cmp
push
jecxz
sub
inc
xchg
push
repz
xchg
add
out
repz
xor
imul
jo
jo
pop
lds
cmp
adc
lret
jo
dec
pop
add
jne
jle
jae
add
mov
out
mov
jmp
ja
subl
popf
add
mov
je
repz
inc
and
shr
jge
mov
jo
push
jge
jbe
dec
push
xor
sub
inc
cmpsb
add
xor
out
mov
cmp
inc
ret
hlt
test
clc
call
insb
push
dec
pop
and
jae
stc
sbb
push
pop
test
fdiv
test
divb
xchg
stc
jg
jl
aad
mov
addl
push
pop
jl
movntq
push
xlat
testb
fsubrs
push
popa
jmp
and
repnz
jge
divb
je
xor
dec
push
add
mov
xor
fdiv
decl
div
fadds
add
add
pop
fcoms
jo
mov
cli
dec
stos
ret
or
push
add
mull
xchg
adc
inc
sbb
mov
shlb
pop
add
imull
icebp
xor
sti
das
loope
sub
add
push
inc
jo
hlt
or
cmpb
aas
in
sub
add
inc
repz
ljmp
sub
incb
std
cmp
incb
cwtd
imul
jnp
lret
in
mov
jge
out
lods
inc
outsb
roll
pop
lods
daa
pop
lock
sbb
xor
inc
data16
or
daa
nop
xor
fistl
or
mov
pop
hlt
iret
xchg
push
clc
iret
mov
lret
call
mov
sahf
push
rorb
pop
sbb
in
sub
or
xor
mov
add
push
stos
mov
pop
jp
or
pop
cli
dec
push
adc
pop
cli
ds
test
lock
icebp
xchg
or
jge
sbb
lret
xor
pop
adc
cli
test
in
push
sub
cmp
cld
fimuls
fiaddl
ss
gs
test
fildl
cli
add
sub
jmp
and
dec
push
xlat
mov
lock
cmp
inc
test
push
mov
jmp
inc
dec
insb
mov
loope
idivb
or
adc
dec
push
addr16
incl
adc
cmc
adc
inc
sbb
and
jne
pop
inc
or
fiadds
xor
pop
stc
jae
xchg
xor
xlat
sub
dec
dec
sbb
xchg
fsubs
loope
fldl
divb
jns
and
pop
sbb
nop
aas
jo
mov
and
pop
jae
add
adc
xor
out
addr16
stos
sbb
cwtl
mov
aaa
ljmp
daa
scas
inc
dec
add
shr
xlat
jge
std
gs
xchg
and
xor
xchg
mov
test
cmp
inc
mov
and
adc
cmpb
inc
pop
cmpsl
pop
jl
cld
ret
xor
loopne
inc
push
xchg
jns
outsb
jp
mov
mov
xor
aaa
test
fcmovu
sarl
mov
add
jecxz
sbb
add
mov
aas
fs
out
fnstcw
scas
ret
jecxz
add
push
jl
cld
ret
fbstp
push
loopne
xor
pop
fs
out
inc
neg
push
fs
ret
mov
add
nop
loopne
cmc
icebp
mov
sahf
jle
je
add
xor
call
push
es
adc
aaa
pop
sub
cli
aad
jmp
out
stc
dec
idiv
cmp
mov
ds
xchg
cmp
call
insb
xlat
cli
and
clc
lcall
int
pop
lds
aaa
pop
adc
and
and
or
addr16
adc
outsb
enter
out
loope
addr16
loop
insl
aaa
mov
or
mov
pop
xor
jge
divb
idivb
push
mov
loope
push
testb
imul
push
sbb
test
testb
sbb
and
push
call
xchg
iret
test
add
inc
test
push
push
add
or
mov
jo
jo
lea
fdiv
mov
mov
stos
sti
cli
test
aas
jo
mov
dec
ds
ljmp
into
sbb
cld
and
cld
mov
mov
pop
xor
mov
xchg
leave
aas
jae
push
out
xchg
lret
out
fs
adc
bound
mov
cmp
stos
xchg
stos
cmp
jg
inc
std
gs
cmpsl
add
sub
icebp
push
xor
out
repz
adc
and
and
push
cli
cs
sub
daa
sub
hlt
stos
cmpsb
jecxz
stos
mov
pop
fldt
fsts
and
divl
out
xchg
sti
sti
jp
out
sbb
int
jno
leave
popa
cmpsb
scas
mov
pusha
dec
mov
test
adc
shr
aaa
sub
subl
fists
jl
ret
pop
arpl
cwtl
lahf
pop
movsb
or
lret
in
sbb
test
add
or
inc
in
cmpsb
sbb
dec
repnz
out
push
sbb
xor
leave
movsb
jmp
pusha
add
shll
mov
pop
js
stc
pop
test
adc
test
add
or
cmp
xor
cmp
shll
add
or
xor
pop
pop
jae
jb
iret
adc
xor
das
sub
adc
sbb
aam
jmp
jae
stc
add
adc
test
insl
pop
add
into
adc
ficompl
stc
pop
sbb
in
pop
sti
or
fimuls
push
stos
test
mov
notb
mov
adc
cwtl
push
stc
inc
lods
sar
lcall
int3
je
loope
xchg
std
out
outsl
popa
js
push
stc
fldcw
adc
lcall
mov
call
lret
xorl
dec
lea
outsl
divb
lods
jp
rorb
test
push
frstor
dec
jge
out
xor
add
std
pushl
cs
idivl
and
xchg
bound
cmp
pop
jo
unpcklps
call
xor
and
add
add
mov
cmc
mov
negb
lods
addr16
xor
incl
dec
xor
cmp
xor
mov
je
cld
daa
inc
xchg
ja
jb
insb
pcmpgtd
add
fs
pop
daa
or
cmovbe
adc
pop
and
and
xchg
xchg
push
and
lret
sarl
mov
scas
repnz
scas
sub
stos
into
cmc
pop
fsubrs
orl
sbb
scas
adc
sbb
cwtl
mov
data16
mov
in
hlt
adc
inc
and
cltd
jbe
data16
mov
inc
push
sbb
sub
mov
mov
or
fs
scas
jno
aad
out
das
pop
jge
test
mov
xor
sarb
push
add
mov
test
mov
fsubs
xchg
pushf
out
insb
xor
push
subl
loope
push
cmp
sub
cmp
fistpl
and
adc
xor
jnp
in
mov
fildl
mov
mov
stc
mov
das
dec
call
pushf
lcall
or
add
xchg
push
sbb
mov
fstps
pop
jp
test
sti
fld
sub
cmpsb
fdivrs
sbb
mov
push
lea
or
jno
pop
mov
and
faddl
add
add
loope
idiv
repnz
xor
call
push
sbb
jmp
xor
mov
mov
xorl
lahf
vmaskmovdqu
icebp
mull
std
push
imull
and
xor
mov
ds
js
icebp
minps
xor
ds
out
mov
cmc
jae
add
pop
std
pushl
sarl
cmp
jae
scas
dec
pop
test
stos
repnz
ja
cld
xchg
ret
jns
add
movsl
or
lret
mov
pop
fcompl
and
daa
xchg
arpl
jo
je
iret
and
test
sbb
push
and
sbb
scas
jecxz
jno
daa
cld
repz
out
jo
movsb
decl
fistps
aam
inc
clc
sahf
fistpl
xchg
rorl
repz
adc
fwait
out
add
in
mov
add
cmp
clc
out
jo
mov
or
sbb
std
xor
push
roll
ljmp
mov
sub
cli
imul
ret
push
adcl
stc
mov
jae
xor
push
lahf
stc
push
lock
lahf
adc
add
call
icebp
sub
ljmp
mov
rcrb
mov
stos
lahf
and
aas
pop
sub
jmp
push
inc
jmp
pop
cs
jbe
and
out
inc
jne
add
push
sti
outsb
inc
dec
push
call
sub
scas
jne
lcall
lcall
pop
pop
mov
xor
inc
mov
dec
mov
mov
sub
negb
push
and
fwait
cmp
inc
leave
fwait
cmp
inc
cltd
jl
inc
jne
mov
mov
call
sbbl
pshufw
xchg
incb
mov
nop
jbe
pop
mov
add
orl
pop
popa
jmp
outsl
fldcw
mov
mov
dec
std
je
dec
cwtl
lret
add
dec
pop
cmc
enter
leave
mov
sub
jbe
mov
and
ja
sub
cmpsl
mov
ror
out
cli
scas
jmp
fsub
sub
push
cli
in
loopne
cwtl
pop
out
cli
xchg
or
ret
out
daa
push
sbb
stos
xor
and
sbb
mov
pop
mov
jae
sub
cmc
mov
data16
jle
and
and
nop
jbe
not
mov
jg
out
pop
push
sbb
cli
push
daa
stos
xor
add
jg
mov
fbld
jge
dec
xlat
aas
sbb
and
pop
add
pop
xor
stos
pop
hlt
adc
fildl
jmp
add
and
ja
hlt
cmc
mov
mov
insl
and
xchg
sbb
inc
lds
je
imul
jmp
dec
and
aam
jp
jae
push
and
and
push
sbb
call
ret
hlt
out
iret
inc
jmp
movsl
mov
add
jae
fnsaves
hlt
aad
pop
mov
call
ss
mov
add
jmp
into
mov
sub
mov
cmp
je
movsb
movl
adc
jne
mov
jmp
mov
dec
call
ret
repz
bound
mov
outsl
mov
mov
jmp
or
mov
mov
loope
psubusw
xor
bnd
or
jmp
inc
add
sahf
push
idiv
add
adc
mov
xchg
xor
std
bound
and
imul
out
test
add
stos
jno
or
cmp
lock
jo
aas
pop
scas
leave
aas
push
sti
lahf
jg
pusha
out
mov
jae
popa
stos
push
cmc
or
mov
jbe
test
pusha
lahf
xchg
repz
xor
ja,pn
call
jecxz
stc
out
or
bound
inc
fadds
aas
pop
push
stos
gs
sub
jg
add
sbb
adc
mov
mov
lcall
inc
add
mov
mov
addr16
lods
int
mov
daa
add
sahf
jp
mov
outsl
sbb
bsf
movsl
push
lods
add
mulb
outsb
adc
into
jecxz
dec
fistpl
add
ror
shr
jmp
rcr
sub
push
and
xchg
add
jl
xchg
xor
push
jb
iret
sub
fisubrl
ret
test
sahf
shl
xor
add
hlt
ret
aas
push
lret
xor
cmpsl
fistps
sbb
jmp
mov
fisttps
sub
mov
cmpsl
dec
jo
pop
xor
fdivrl
ret
cmp
pminub
xor
das
jae
rcrb
and
hlt
cwtl
add
sub
jge
xchg
xor
movsl
into
mov
xor
mov
push
xor
sub
mov
stos
scas
fdiv
xor
mov
or
clc
ret
repnz
mov
je
adc
arpl
mov
add
ds
adc
mov
mov
add
stos
jle
inc
dec
inc
and
fcmovu
fwait
jo
mov
inc
add
pop
fildl
inc
fcoml
stos
mov
inc
add
fildl
add
lods
test
and
inc
add
popf
sbb
movsl
mov
rcrb
popf
shlb
inc
jo
in
xor
mov
andb
inc
add
add
mov
sahf
nop
jge
add
andb
adc
and
mov
sahf
shlb
add
subb
inc
jo
inc
in
add
xor
inc
std
pushf
mov
aaa
pop
inc
jo
fs
mov
add
cmp
sbb
fildl
aam
out
in
cmpsl
add
push
inc
jo
sub
add
fildl
mov
cmc
dec
lret
inc
jo
sti
push
xor
xchg
xchg
popf
out
in
out
daa
add
sub
inc
jo
and
mov
inc
jecxz
popf
out
mov
or
pop
mov
xchg
adc
cmpsl
add
jmp
inc
jo
iret
pop
mov
xchg
adc
adc
jae
xor
fistpl
add
cld
cmp
adc
jae
push
add
fistpl
dec
push
cld
cmp
aam
adc
insb
jbe
int3
xor
lahf
pop
js
add
int3
iret
adc
je
nop
les
fistpl
dec
or
cmp
adc
or
mov
fwait
add
cld
cmp
or
adc
jae
rolb
lahf
dec
add
add
sbb
loopne
fwait
lock
pushf
add
cmp
fiadds
rclb
fwait
adc
add
cmp
pusha
adc
mov
repnz
add
fiadds
ds
adc
fistps
mov
ljmp
adc
out
cltd
add
add
inc
push
adc
out
cltd
add
cli
cmp
inc
jo
movsb
adc
pushf
shlb
inc
jo
mov
nop
addb
fidivrs
add
inc
jo
fucom
xor
fsubs
std
gs
pop
fnsave
add
lock
roll
cmp
stc
mov
push
test
push
inc
add
xor
cmpsb
pushf
inc
mov
add
popf
jo
aas
add
insb
dec
add
add
adc
cmp
pushf
mov
add
add
rcrb
add
sub
dec
inc
jo
cmpsl
in
fstpt
lahf
hlt
adc
js,pt
push
aam
rcrl
aam
rcrl
ret
add
push
mov
cld
arpl
lret
add
adc
cmpsb
xor
pushf
out
mov
out
inc
pusha
push
aaa
lds
fldt
add
bound
sbb
or
mov
add
call
test
out
jmp
fs
out
add
mov
add
cltd
or
jne
mov
je
stc
cld
jg
inc
jmp
aad
cli
mov
add
fstpt
pop
cmpb
je
incl
adc
dec
data16
add
jecxz
test
mov
mov
push
jno
cmpsb
sbb
push
das
and
mov
pop
in
and
push
test
clc
ljmp
and
adc
call
nop
lcall
and
or
pop
shlb
cmp
adc
fadds
call
jmp
test
mov
test
lea
lea
pop
adc
test
adcl
xchg
bound
in
cwtl
push
incb
push
xchg
shlb
in
xor
jo
jns
lds
imul
dec
stc
gs
inc
jo
or
mov
dec
jge
or
test
inc
jo
mov
call
lahf
jb
mov
fmuls
sti
out
scas
sar
testb
add
leave
jmp
mov
loopne
testl
scas
jle
and
je
xor
les
cs
mov
test
xchg
add
inc
cmpl
xchg
add
fcmovu
sti
clc
in
call
sub
jl
in
jo
cmp
out
pop
jecxz
jb
lods
sbb
push
sub
data16
push
in
or
xbegin
dec
mov
popa
in
sbb
lea
mov
out
jo
aam
jo
call
icebp
pop
add
jmp
pop
and
psllq
mov
add
mov
add
rcll
insb
frstor
push
bound
dec
ss
adc
out
out
dec
int3
jae
add
xor
mov
add
lret
jno
fwait
add
mov
sub
adc
nop
jmp
ja
mov
popf
enter
les
sahf
mov
fildl
aaa
mov
loopne
insb
pushf
cld
jb
jmp
sub
je
xchg
fwait
str
mov
mov
add
pop
mov
sbb
mov
sbb
sar
pop
or
fsubrs
shr
cmp
addb
dec
fmuls
add
faddl
jmp
nop
rorb
push
test
stc
insl
cld
stos
divl
or
testl
xlat
add
cmpsb
or
mov
mov
sarb
cmp
jo
imul
add
sbb
push
pop
inc
das
sarb
push
test
or
std
mov
pop
clc
stc
aaa
cmc
insb
xorb
gs
jo
mov
in
inc
lods
repnz
push
data16
cmp
xchg
repnz
mull
aad
xor
rcrb
ror
bnd
jg
clc
int
repnz
add
popl
je
add
ja
or
jecxz
dec
cmc
jmp
je
lret
push
sbb
repz
pop
rorl
or
negl
lahf
jg
xchg
cmc
ret
jmp
sub
mov
insb
les
pop
outsl
je
and
mov
inc
jo
dec
leave
insb
push
push
subl
inc
outsl
add
dec
sub
xor
arpl
aas
orb
push
inc
add
outsl
je
hlt
fwait
out
sbb
xlat
add
add
testb
jmp
jl
ret
jmp
xchg
pop
shl
es
jae
push
je
dec
mov
cmpl
enter
fildl
jae
sbb
test
sub
add
sbb
push
cld
push
sarl
push
inc
cmp
nop
enter
add
lret
xor
sarl
mov
fiaddl
xor
jge
cmp
push
add
mov
std
scas
or
mov
clc
scas
xchg
add
jne
push
test
call
fsubl
hlt
push
jae
dec
push
out
and
xor
xchg
clc
jbe
lea
mov
movd
and
xchg
adc
or
divl
or
or
testl
add
jo
ja
mov
in
adc
das
cmp
movl
xchg
shr
inc
mov
pop
inc
add
push
repz
cmp
nop
lret
mov
adc
add
mov
inc
mov
hlt
aad
daa
hlt
xchg
xlat
sbb
std
iret
adc
or
adc
daa
cs
jle
enter
jo
lret
adc
mov
incl
sbb
add
sub
mov
outsl
sub
test
add
rorl
push
jbe
jecxz
sbb
sub
leave
in
dec
cmp
in
das
sahf
clc
mov
cmp
test
xchg
andb
pop
push
mov
ret
ja
ds
jle
arpl
and
push
mov
and
inc
mov
add
and
lcall
ja
xchg
repz
and
add
pushf
sub
push
in
aas
clc
dec
xor
mov
fildll
call
inc
inc
in
jnp
out
dec
aaa
scas
jle
in
movsl
xor
aas
pop
and
mov
or
pop
mov
fisttps
arpl
fists
dec
mov
cmp
jns
outsb
shr
sub
in
aas
rclb
xchg
lcall
xchg
sub
mov
bound
mov
or
test
ljmp
shrl
mov
cmp
cmpsb
icebp
push
les
or
call
repz
test
xor
insb
cmpsl
clc
jl
sbb
filds
inc
push
xor
add
es
add
clc
idiv
inc
imul
jbe
adc
test
dec
push
aam
outsb
jmp
testl
dec
or
sbb
jle
pop
dec
inc
std
cmpb
fbstp
notl
jge
aad
rorb
push
push
in
jbe
cmc
xlat
mov
jmp
in
mov
xchg
mov
les
imul
ljmp
jle
cmc
popl
dec
stc
pop
pop
cmovo
mov
stc
outsl
leave
add
jo
cmp
in
fsubl
ss
cmp
mov
sbb
fnstenv
cld
dec
movb
in
mov
add
mov
out
stc
push
and
jmp
in
es
repz
add
movsb
lahf
or
out
jo
pop
xor
push
jl
test
fldt
inc
mov
in
das
push
sub
insb
fsub
add
data16
addr16
sbb
bound
add
push
or
dec
insl
fwait
out
xor
test
add
stos
jp
push
jmp
xchg
push
addl
pop
mov
dec
xchg
or
mov
pusha
inc
xor
inc
push
flds
stc
mov
pop
arpl
push
ficomps
cli
je
add
xor
ds
out
inc
sbb
pop
jae
add
add
sub
inc
mov
fisttpl
mov
lods
mov
lods
data16
cwtl
clc
cmp
mov
or
inc
in
mov
je
mov
add
flds
test
xchg
clc
jne
lret
out
cmp
pop
xchg
fadds
add
push
push
popf
clc
push
divl
mov
testl
pop
pop
jle
cltd
fadds
mov
or
ret
add
fadds
cmp
outsl
adc
pop
shlb
cwtl
xor
notb
pop
mov
push
loope
pop
ficomps
je
les
rclb
stc
shrb
pop
test
and
in
mov
decb
in
push
out
out
inc
push
call
cmc
mov
sub
jg
add
mov
push
and
add
mov
add
addl
in
inc
mov
hlt
lahf
orl
stc
xchg
adc
mov
jae
and
stc
in
out
mov
scas
fsub
jo
out
imul
orb
mov
shlb
sbb
jo
push
jmp
mov
pop
daa
jo
push
fs
incl
push
push
pop
pop
out
insb
stos
je
clc
push
cmp
inc
scas
aas
sbb
xchg
push
jmp
ja
mov
mov
outsl
je
movsb
ljmp
mov
out
stc
ja
ss
rcll
imul
fmul
push
mov
jnp
add
rcll
stc
cmpsb
add
fldt
and
out
xor
xchg
push
insb
xchg
xor
jbe
stos
dec
sbb
sub
mov
cmp
adc
xchg
mov
pop
add
aad
add
icebp
push
leave
stos
call
lods
rcll
lock
sbb
pand
out
cwtl
push
cmp
add
pop
lods
stc
mov
push
into
add
hlt
imul
data16
incl
jl
mov
test
scas
push
int3
es
push
lods
dec
push
imulb
xor
ja
test
pop
cmp
jae
lcall
data16
inc
mov
xchg
add
xchg
lods
call
test
pop
insl
or
sbb
repnz
jge
jae
notb
adc
xor
sbb
jmp
jl
or
repnz
jge
sbb
lret
stc
sbb
inc
jo
hlt
int3
cmp
jo
loope
sbb
stc
daa
lahf
ja
sbb
call
std
jbe
cli
pop
jno
sbbl
dec
data16
mov
inc
inc
js
loop
loope
inc
gs
stc
cmpsb
or
jp
lahf
cmp
push
sub
mov
idivl
addr16
arpl
scas
pusha
xchg
add
mov
cwtl
cmp
je
shrb
jmp
dec
push
dec
push
dec
out
pop
cmpsl
mul
sbb
ret
test
push
insb
jmp
lcall
out
lods
incl
jo
addr16
inc
inc
jo
mov
js
shll
stc
stos
insb
xorb
out
xor
jecxz
out
stos
insb
andb
out
adc
jmp
out
inc
dec
add
jnp
decb
js
jecxz
out
stos
insb
cmpb
testb
clc
out
push
xor
add
cmp
sbb
mov
xlat
add
add
dec
cmpb
add
push
out
test
repz
add
int3
inc
fildl
mov
sbb
je
mov
sbb
xor
inc
int3
sub
dec
movsb
sbb
and
ret
fildl
stc
lock
add
mov
pop
jge
add
addb
test
add
pop
jo
add
out
jbe
loop
adc
cmp
sub
stos
or
or
int3
fldl
fs
xchg
insl
or
sbb
add
push
jge
add
sar
jnp
jae
sub
cs
inc
je
pop
negl
add
insb
sbb
sbb
xchg
add
cld
jae
sub
in
sub
xor
xorb
xor
mov
xor
inc
jno
or
ret
add
out
mov
loop
inc
mov
repz
mov
mov
les
dec
and
mov
mov
cli
mov
pop
jns
cmp
mov
or
sub
push
sti
sub
les
ss
xor
push
mov
fcmovnbe
ret
sub
sbb
add
mov
inc
out
jp
jmp
pop
jo
stos
iret
xor
pop
dec
je
pop
fistpl
hlt
arpl
ret
fcomip
ret
cltd
push
dec
add
mov
aaa
aaa
sbb
xor
sbb
in
pushf
filds
pop
jo
mov
add
cmp
call
mov
stos
pop
lret
data16
outsl
jmp
sahf
xchg
add
stos
fisubrs
bound
daa
int3
xor
mov
int3
pushf
out
pop
dec
lcall
xchg
cld
shrb
stc
bound
shlb
fwait
insb
jb
mov
icebp
stc
scas
push
shl
xor
mov
fs
cmp
push
sub
mov
daa
push
cmpb
lcall
out
mov
xor
sub
test
loope
out
adc
adc
push
nop
xchg
push
cmp
or
cli
cmp
add
pop
or
xor
pop
mov
push
add
int
add
dec
push
insb
mov
loopne
cmp
or
jmp
pop
xchg
addl
scas
mov
fldl
lea
insl
mov
sbbl
inc
pop
xor
pop
mov
out
addl
jo
dec
or
aaa
push
xchg
jg
je
jge
dec
jmp
xor
mov
repnz
jmp
inc
sub
sti
jno
xchg
cmp
insb
inc
and
imul
sti
enter
bound
add
std
sti
sbbb
mov
cmp
insl
insb
jg
jae
sbbb
outsb
add
incl
fisttpl
add
mov
add
stos
pop
movsl
sbb
in
outsl
roll
inc
xchg
lds
push
into
cmc
adc
mov
out
and
pop
add
mov
lds
subb
les
out
cmc
add
dec
in
jo
push
ret
roll
iret
sbb
push
int3
test
cmp
in
in
pop
dec
push
add
cmp
data16
push
cmp
mov
pop
dec
pop
sti
push
jb
out
sub
hlt
clc
jmp
jae
insl
ljmp
jge
je
push
jb
add
pop
mov
pop
rcr
inc
add
add
inc
ljmp
xchg
fistps
pop
insb
fildl
jmp
push
rcl
jle
xchg
rcrb
insl
pusha
push
icebp
jo
in
andb
cmp
pop
cmp
add
imul
dec
fwait
call
mov
pop
jb
leave
lea
movzbl
sub
sub
add
pop
call
testl
jb
sub
repz
out
mov
dec
in
bound
adcl
lret
sbb
add
pop
ljmp
sbb
or
addl
shlb
mov
flds
add
std
push
dec
add
imul
add
les
mov
xor
sub
inc
xor
call
sti
inc
imul
sub
xadd
in
pop
addr16
pop
repz
lea
rolb
sub
js
imul
mov
inc
xor
sahf
or
dec
jo
mov
jns
jge
xor
mov
fisttpl
jb
pmuludq
in
gs
cmpl
jo
pop
loope
sbb
enter
enter
mov
xchg
sahf
mov
repz
inc
and
loope
jo
xchg
es
hlt
push
mov
int3
add
pop
jl
jo
imul
addb
jecxz
inc
pop
repz
pop
fists
cmc
cltd
pop
mov
cmp
and
mov
ja
loop
fnstenv
inc
xor
sub
popf
dec
pxor
aas
pop
in
jbe
cmp
pop
sbbb
push
add
out
dec
bound
jg
jo
cltd
subl
aam
cmpsl
pop
pop
push
std
push
and
add
clc
jmp
inc
call
push
jecxz
cmpsl
adc
mov
jle
insb
fildl
dec
in
movsb
insb
inc
test
adc
jae
inc
add
fiadds
xsave
pop
mov
adcl
push
mov
add
aaa
push
add
jecxz
rcl
nop
adc
imul
cwtl
add
fnstsw
ss
add
stc
lcall
flds
mov
in
sbbl
push
loop
xchg
adc
imul
iret
push
shrl
inc
push
adcb
cld
jmp
fs
inc
es
movsb
jge
test
add
lcall
jae
xor
mov
mov
insl
aaa
dec
sti
mov
or
shrl
inc
add
inc
sbb
aaa
xor
inc
inc
or
idivb
inc
push
jnp
push
outsl
xchg
aas
insb
jmp
inc
test
ds
xchg
dec
adc
dec
mov
test
pushl
aas
insb
jmp
cmp
xchg
stos
ds
add
jns
out
cwtl
das
mov
loopne
dec
daa
lods
test
mov
jo
test
cmp
mov
gs
cmc
pusha
inc
out
imul
insl
outsb
adc
out
xchg
lock
adc
out
cmc
pusha
outsl
out
out
pop
add
popa
movsb
push
loop
leave
add
pop
push
add
fldt
hlt
enter
push
imul
scas
ret
cs
jo
add
cmc
dec
jne
in
inc
enter
iret
and
push
pop
dec
sub
ljmp
stc
xor
cmp
popa
mov
mulb
bound
ftst
cltd
pop
xchg
data16
jbe
loope
lock
or
clc
pop
xchg
mov
xor
repnz
mov
jae
jge
ja
xchg
leave
add
and
into
xchg
jle
dec
add
leave
rcll
push
push
pop
add
dec
dec
fiaddl
adcl
cmp
push
sub
xor
cmpsl
pop
xchg
enter
dec
fsts
lcall
je
arpl
test
js
add
cmp
adc
xor
addl
push
and
inc
add
bound
push
lds
cltd
pusha
dec
pop
inc
or
lcall
incb
add
test
mov
aaa
pop
mov
enter
enter
enter
mov
ret
inc
mov
lods
xchg
decl
std
test
inc
je
or
aaa
add
sti
sub
pop
add
es
scas
cmpsb
jge
outsb
add
incl
add
dec
add
in
sub
movb
jmp
lock
test
sub
insb
sti
add
int
jns
cmp
inc
pslld
sbb
xor
test
mov
mov
inc
add
mov
cmc
test
mov
stos
mov
outsb
push
fdivl
adc
test
ss
out
negl
push
nop
push
cmpsl
pop
scas
mov
test
out
inc
pusha
cmp
pushf
mov
or
jmp
push
mov
mov
inc
add
jo
enterw
arpl
jmp
pop
mov
jl
push
jge
aas
pop
and
add
jg
xchg
add
imul
sub
xchg
outsb
push
jp
cwtl
js
movsb
in
or
ljmp
ljmp
aas
sarb
aaa
fsubs
inc
mov
sbb
jmp
popf
popf
js
cli
and
jmp
jg
mov
pop
pop
int
jmp
int
mov
out
clc
jmp
mov
ljmp
sub
bound
cwtl
jp
cwtl
fiadds
lea
fidivrs
push
or
stc
decl
ljmp
dec
movl
js
loop
inc
inc
jp
arpl
jle
push
fiadds
mov
mov
mov
pop
xchg
pop
xchg
add
addr16
sub
pop
testb
push
insb
mov
xor
scas
lret
addl
inc
pop
jo
cs
xchg
jnp
push
notb
mov
es
jbe
cmp
xchg
add
adc
xchg
add
mov
jnp
inc
sbb
cld
pushl
aas
js
inc
pop
add
jne
or
inc
insb
aaa
mov
cld
shlb
incl
sti
mov
andl
pop
test
hlt
adc
pop
repnz
pop
movb
pusha
push
mov
shrb
lret
out
repz
cltd
mov
les
pop
jbe
add
pop
dec
fcoml
out
sahf
out
shl
push
inc
stc
push
call
out
xchg
call
pop
jbe
shl
add
pop
xchg
daa
call
push
movsb
sbb
inc
or
add
jo
fs
dec
out
jo
imul
mov
add
sub
loope
pop
inc
adc
in
add
addl
lahf
mov
pop
inc
xchg
or
inc
mov
add
push
aas
popa
or
xchg
ja
scas
push
push
out
ds
inc
shl
dec
push
mov
call
push
pop
nop
pusha
inc
icebp
cltd
lahf
lods
mov
pushl
test
leave
add
in
pusha
jg
test
add
push
add
popa
xchg
aad
stc
popf
stc
lock
dec
push
shlb
jle
cltd
fiaddl
lea
fiaddl
insb
adc
jnp
fwait
mov
mov
or
mov
pop
fisubrl
loop
pop
test
decl
and
sub
jp
mov
sub
add
add
stos
call
mov
lret
sarb
out
push
pshufw
dec
jno
incb
mov
jo
add
fadds
dec
js
mov
jb
mov
jo
mov
fisubrs
hlt
cld
test
and
repz
aad
add
test
inc
adc
andl
imul
ror
das
mov
int3
and
ja
sti
cld
push
arpl
lret
ja
je
ret
jnp
sbb
fistpl
clc
imulb
jp
ret
pop
xor
mov
jb
test
testl
mov
inc
fbstp
insb
push
xlat
and
imul
and
add
scas
pop
out
xchg
xchg
jp
cmp
out
jg
out
mov
sub
outsl
in
int3
imul
and
lret
dec
in
cs
mov
pop
stos
mov
sbb
sbb
push
or
mov
je
add
cmp
xchg
pop
pop
push
fstps
cmp
in
and
xchg
fcmovne
sbb
testl
loopne
pop
stc
fisttpll
push
bound
cmpl
fldcw
out
add
daa
fs
std
imul
add
aad
in
mov
clc
mov
pushf
xor
xor
adc
mov
mulb
aas
add
push
leave
mov
les
push
aas
xor
or
add
cmp
or
and
mov
mov
pop
or
clc
mov
adc
mov
int3
test
int3
int3
in
popa
in
mov
out
dec
xor
mov
add
pop
jne
xchg
mov
add
pop
mov
mov
mov
and
loope
mov
mov
mov
inc
sub
pop
int3
mov
cld
gs
shr
sbb
jae
shll
mov
fwait
lahf
ret
jge
or
jnp
sbb
imul
enter
iret
jl
subl
jnp
mov
sub
or
repz
pop
ss
ret
push
sub
lods
stc
jg
and
add
inc
dec
nop
in
cmp
aaa
xor
pop
jo
cld
shlb
mov
add
cmpsb
mov
adc
lea
adc
addr16
jl
mov
xor
and
add
mov
cmc
xchg
mov
leave
scas
pop
stos
imul
cltd
mov
mov
fisubrs
or
out
jo
outsb
ficomps
sbb
les
decl
jne
cltd
pop
out
out
jo
inc
jp
stos
pusha
inc
push
push
xchg
sbb
idivl
fmulp
fidivs
mov
shlb
jo
add
mov
and
sbb
je
add
sbbb
bound
test
and
cmpsb
sarl
pop
jnp
jnp
test
clc
push
push
aad
lea
cmp
mov
push
dec
jge
push
or
mov
and
xor
test
fs
call
bound
jge
cwtl
pop
jp
push
pop
push
add
xchg
cmpl
andl
cmpsl
sbb
add
adcl
shlb
fcmove
mov
push
xor
mov
int3
int3
fs
in
mov
in
add
scas
jge
push
pop
mov
sbb
cmpl
testl
fstps
or
in
test
mov
insl
or
add
into
pop
xchg
adc
fidivrl
ret
xchg
out
lcall
ljmp
add
cmp
cmp
push
loop
cmp
jo
int
dec
push
lods
inc
fadds
jo
cld
push
jmp
or
shl
pushl
cmc
pop
subl
xorb
test
jo
mov
jo
jg
pusha
mov
add
hlt
call
mov
fidivrs
in
repz
call
rep
hlt
insl
xchg
jge
or
add
in
add
or
or
gs
repz
add
jne
pop
sbb
mov
jle
jns
ret
mov
add
pushf
lret
popf
add
push
add
aaa
repz
push
adc
hlt
pop
fucom
add
sbb
std
xor
int
shr
hlt
repz
out
jo
push
shlb
fidivrs
sbb
mov
mov
ja
add
pop
inc
hlt
das
loope
dec
jbe
lods
sti
hlt
xchg
xor
pop
dec
xor
push
int
fildl
jmp
cwtl
xlat
test
lock
or
xlat
jge
pop
pop
rclb
clc
jmp
push
jne
xorl
std
fldt
loope
xchg
test
shl
lcall
xchg
pop
push
aas
stc
add
shrl
jl
add
stos
push
out
fildl
jb
rol
sub
sub
popa
fstl
jmp
mov
xlat
fimull
add
enter
mov
mov
loopne
fisubl
not
lret
jb
push
or
int3
sub
add
mov
imul
push
or
push
sbb
ret
pop
add
out
add
andb
mov
lahf
loopne
mov
mov
xchg
inc
adc
loopne
add
mov
lahf
fimuls
arpl
mov
pop
in
push
and
mov
push
adc
sbb
xlat
sub
pop
add
insl
inc
ret
out
jnp
les
test
aam
add
ja
clc
lods
lock
inc
in
jge
int3
test
movsb
cs
and
xor
incb
add
pushl
xrelease
je
out
andl
je
inc
in
clc
push
test
inc
bound
sbb
rep
cs
add
and
xchg
aad
cmpsb
fisubl
or
xchg
fildll
orb
or
ljmp
ljmp
cmp
repnz
shr
fcmovnbe
fsqrt
xor
repnz
outsb
sbb
movsb
imul
mov
ret
loop
push
out
dec
pusha
fucomi
add
fmuls
push
jb
sub
jmp
dec
push
mov
add
call
fildl
aad
push
idiv
pop
stc
or
fildl
insl
adc
add
pusha
lea
ss
mov
inc
mov
mov
jmp
das
cld
sbb
jo
sbb
xchg
mov
jae
clc
jmp
loopne
in
loope
flds
push
aam
sub
sbb
fisttpl
add
scas
xor
or
mov
int3
pop
rcll
fildl
add
mov
add
push
out
add
fisttpl
test
filds
add
and
in
xchg
addb
mov
xchg
fs
rorb
add
jge
sub
aas
bound
shrb
sub
dec
adc
sub
mov
push
mov
fisttpll
imul
push
pop
xchg
dec
jge
add
sahf
add
add
add
push
pop
hlt
jmp
mov
daa
lods
push
push
inc
pop
pop
inc
jo
mov
dec
aas
sbb
xchg
rcrb
inc
xchg
and
les
add
add
das
test
les
outsl
movb
in
adc
add
outsl
inc
jg
jo
cmpl
pop
test
add
arpl
or
add
inc
cld
dec
ds
push
test
test
test
dec
mov
out
jb
xor
and
pop
out
push
pushf
pusha
and
mov
push
test
in
jo
repnz
iret
and
dec
mov
jmp
add
mov
cmc
daa
mov
shll
mov
pushf
push
pop
fbstp
mov
mov
roll
sbb
mov
out
add
pop
stos
aaa
jno
sub
jo
jmp
add
fucomi
les
add
add
out
es
adc
jae
jl
jae
add
xlat
add
out
push
push
jmp
incl
out
out
sub
sbb
jb
sti
mov
pop
dec
add
stos
dec
adc
sbb
pop
inc
or
scas
mov
sbb
cmpsb
roll
call
xlat
jae
in
adc
add
add
pop
inc
aad
daa
stc
bound
ret
dec
add
add
shll
sbb
add
pop
jl
leave
push
clc
pop
add
fisttpll
inc
sbb
test
or
pop
mov
roll
xlat
add
sbb
add
pop
sti
adc
xlat
add
ficoml
or
dec
fisttps
mov
xchg
dec
cld
shlb
ret
or
sub
add
mov
mov
imull
sti
ss
mov
scas
in
rolb
pop
repz
xchg
cmpl
add
add
lods
mov
les
test
inc
sbb
add
shlb
add
jo
add
les
push
mov
jl
pop
add
in
jge
add
jb
outsw
mov
cs
or
repz
insl
push
dec
movl
jo
inc
jmp
stos
ret
or
test
js
jmp
ret
bnd
ljmp
or
fmull
fucomi
add
dec
push
fiadds
jns
dec
or
dec
fistl
add
iret
sub
jo
or
mov
jae
mov
jmp
or
scas
repz
lods
pop
jb
pop
jne
jmp
das
fs
xchg
lret
pop
fucomi
add
ss
jae
sub
ds
jno
pushf
jmp
add
iret
add
jg
or
jae
scas
jmp
and
loope
cmc
popf
or
roll
hlt
aad
sbb
push
les
roll
in
in
roll
inc
rcrb
jmp
jo
add
jae
out
lret
jmp
hlt
leave
clc
cs
push
add
jmp
xor
into
jmp
add
test
or
add
lcall
gs
or
push
sbb
mov
repz
fsts
imul
fs
add
jbe
out
repnz
sti
and
jne
in
or
cmp
jle
pop
ja
adcl
push
and
fadds
add
movsb
jle
cmpsb
test
lcall
out
rcrl
cli
outsb
xchg
cmpsb
jge
mov
xchg
les
ja
addr16
jo
mov
les
add
cmc
cmp
lods
mov
shrb
add
mov
fnstcw
xchg
mov
mov
shrb
push
jo
mov
movsb
dec
push
clc
sti
jmp
les
mov
inc
cld
dec
ja
ljmp
mov
inc
mov
out
mov
pop
add
mov
push
cmp
jg
loope
add
in
mov
iret
arpl
sub
jecxz
dec
or
roll
mov
sar
outsb
pushf
jmp
ret
int
jb
dec
mov
sub
insb
pop
nop
push
das
dec
or
cmpsl
int
mov
aaa
popa
inc
xor
data16
xchg
push
orl
adc
jmp
jmp
mov
dec
lds
adc
push
iret
jae
lock
cmc
jmp
jae
pop
aas
add
inc
in
call
dec
mov
ljmp
mov
pushf
loop
in
jnp
sub
push
fistpl
aaa
sbb
test
mov
ret
jae
sub
add
jae
inc
add
jmp
divb
jmp
sub
or
jnp
add
mov
jg
push
or
inc
add
roll
jmp
mov
aam
mov
inc
dec
movsb
pop
icebp
add
fadds
into
sbb
dec
fadds
add
fcomps
xchg
and
mov
call
mov
inc
fmuls
test
into
clc
incl
imul
leave
dec
inc
fs
cmp
or
adc
dec
mov
add
jle
aad
push
ret
jo
add
add
sar
mov
ss
jl
clc
cld
or
adc
incl
jp
subb
mov
int
xlat
fdivs
pushf
test
or
jge
xor
jg
les
addr16
mov
xor
enter
mov
cld
or
jnp
in
inc
ja
sbb
jne
das
les
decl
push
sub
mov
fidivrs
pop
sub
cli
gs
fcmovnbe
xchg
xchg
in
mov
arpl
and
sbb
and
loop
imul
push
lea
in
and
add
xchg
mov
les
jns
jo
out
sub
inc
jge
pop
lret
fwait
jmp
int
jo
aam
and
lcall
cmc
mov
xlat
popa
inc
lea
xchg
lcall
fdivp
test
jmp
and
loope
cmpsl
inc
push
aam
inc
mov
lahf
ret
cmp
data16
adc
inc
shr
sbb
sub
mov
rol
shlb
je
cmc
inc
cmc
jmp
jae
pop
jg
ret
dec
xchg
aam
inc
adc
sub
popf
or
stos
push
inc
out
sub
add
addr16
or
fld
jg
and
jne
lcall
cmpsl
mov
add
inc
inc
hlt
xchg
and
add
add
rclb
pop
add
cld
sub
add
jne
test
insb
sbb
and
jmp
dec
inc
add
arpl
push
out
jge
fbstp
push
and
xchg
ljmp
inc
inc
enter
js
sbb
or
pop
mov
add
orb
testl
jne
xor
nop
lock
add
jmp
and
mov
push
dec
das
mov
lcall
push
mov
sbb
dec
jo
add
dec
dec
fsubr
hlt
testl
scas
pop
jne
sarb
lock
add
cmc
cmc
inc
push
mov
mov
pushl
jnp
dec
in
push
add
add
data16
stos
inc
jo
add
cwtl
pusha
stos
repnz
scas
test
push
adc
add
fiadds
mov
cmc
add
push
je
fistpl
addr16
ljmp
pop
inc
jp
lret
popa
cmp
stos
not
jb
push
push
mov
push
out
sub
push
mull
pop
add
mov
jb
insb
push
xor
pop
popa
push
fcoms
js
fildll
push
pop
inc
mov
aaa
or
add
mov
mov
xchg
ret
ljmp
das
mov
cmp
fwait
andb
fildl
mov
fstps
inc
jb
push
mov
add
mov
mov
pop
clc
push
movl
call
les
cmc
into
xchg
loope
inc
das
inc
push
aam
rorl
loope
movsb
pop
mov
jl
dec
and
inc
std
adcb
jmp
inc
sbb
mov
rcrb
cmpl
cltd
loopne
add
add
orb
mov
pop
add
mov
shrl
mov
dec
hlt
mov
add
add
xchg
mov
jge
inc
hlt
dec
pusha
or
dec
cwtl
test
popf
jae
and
mov
jo
sub
jo
js
jne
add
push
mov
lret
js
movsb
je
cld
add
mov
or
jle
inc
xchg
mov
lcall
dec
cmp
repz
xchg
add
std
xor
cmp
sti
mov
mov
shlb
xor
push
mov
test
jecxz
mov
add
jmp
mov
jno
rcll
fcmovnu
jl
stos
mov
mov
cmp
pop
ret
arpl
cmpsb
add
jmp
add
or
arpl
jmp
ret
jmp
call
shlb
js
sub
inc
stos
add
rclb
jl
adc
add
sbb
out
dec
dec
sarl
imul
add
jo
push
and
jg
xlat
jmp
stos
mov
loope
negb
rcr
dec
pop
mov
ret
jae
loope
add
and
jae
inc
lcall
add
sbb
jmp
jae
mov
cmp
add
jae
rorl
mov
inc
mov
add
ljmp
cmp
sbbb
push
mov
add
jae
scas
jmp
adc
ljmp
add
das
clc
lcall
ffree
loopne
add
xor
dec
and
inc
std
adcb
jmp
pusha
add
cmp
or
test
les
mov
sahf
loopne
and
int
inc
test
mov
mov
fisttpll
cltd
faddl
shr
aas
dec
in
mov
rol
aas
dec
hlt
cwtl
adc
mov
leave
mov
sub
add
ret
mov
gs
inc
hlt
mov
xchg
pushf
test
lcall
jo
js
jae
add
mov
lret
je
sbb
cs
mov
int3
or
ja
inc
int3
mov
incl
xlat
mov
int
dec
cmp
rep
cmc
xchg
test
std
mov
xor
mov
xchg
mov
shlb
xor
mov
sub
in
and
mov
add
jmp
mov
jno
rcll
fistpl
jge
mov
inc
pushf
into
bound
xchg
stos
or
stos
add
pop
and
add
and
rcrl
div
push
push
jge
adc
add
push
xor
xlat
dec
or
cmp
in
add
dec
add
stos
mov
xchg
bnd
ret
jmp
cmp
push
pop
cmp
fsubr
add
dec
ficoml
or
pop
adc
outsb
mov
add
add
jae
subl
clc
jmp
pop
lret
mov
dec
clc
shll
cmp
daa
dec
push
push
fwait
sbb
jae
pop
fs
mov
xor
mov
or
mov
dec
cmc
jo
sub
sub
mov
mov
or
sbb
jo
lahf
cmp
push
ljmp
sbb
test
lods
aaa
push
ds
lahf
lret
cmp
cwtl
in
add
jb
orb
dec
faddl
jle
addl
sub
pusha
orb
or
sbb
add
fidivrl
roll
movb
in
dec
testl
roll
fadds
add
mov
idiv
cltd
pop
jl
cltd
movl
pop
aas
or
add
ret
fadds
add
call
jp
jo
in
andl
add
repz
insb
mov
sbb
xor
cld
jo
js
jno
add
fisubrs
scas
int
jo
ret
inc
clc
jae
cmp
inc
mov
inc
add
dec
push
or
clc
movb
cltd
dec
push
call
mov
jns
mov
dec
and
lods
ds
in
pop
or
jo
xchg
dec
cmp
stc
hlt
hlt
xchg
cmpb
mov
inc
pusha
fdivl
push
sub
jge
ljmp
mov
xor
push
in
movsl
jo
ljmp
out
xor
pop
aam
les
repnz
jl
movsl
or
sbb
jecxz
sbb
scas
pushf
out
adc
loope
out
out
ljmp
imul
hlt
jmp
jmp
out
cmp
add
ficomps
mov
fwait
mov
notl
add
xchg
test
dec
xlat
and
out
and
and
mov
mov
jmp
jno
jle
loop
clc
popa
shll
pop
enter
jae
ds
mulb
mov
mov
xor
pusha
push
in
sub
xor
clc
jmp
jg
or
pushf
mov
mov
fstpt
jmp
cmpsb
aaa
xchg
testb
jnp
mov
dec
icebp
gs
or
sub
mov
push
cld
loopne
adc
jno
jg
jno
jb
add
jge
test
xchg
jge
lcall
sbb
loop
jge
loope
and
in
or
cltd
rorl
fiaddl
add
sbb
mov
sahf
data16
sbb
add
fld
inc
add
stc
loopne
das
scas
testl
ret
inc
sbb
jmp
lods
je
aas
mov
inc
inc
and
jo
sbb
sti
ja
test
jb
xchg
mov
add
ja
push
or
push
cld
and
push
cs
stc
mov
xchg
leave
in
jae
add
or
jo
add
repz
jae
or
or
add
sti
lock
mov
inc
sahf
inc
xrelease
fldl
jge
lock
push
add
fldt
rcr
ss
cs
movsl
loopne,pn
or
in
addr16
mov
mov
lahf
lret
fwait
pop
mov
aas
in
shrb
sub
mov
xchg
shrl
sahf
sub
mov
out
fldt
jmp
fisttpl
in
xor
lcall
fistpl
lock
fcmovne
out
mov
pop
icebp
test
inc
icebp
jl
inc
icebp
je
add
popf
testl
orb
add
lahf
testl
lahf
mov
mov
testl
popl
add
testl
sub
testl
add
testl
inc
and
add
and
add
sbb
testl
sub
cli
dec
bound
repnz
jo
rcrl
inc
add
fs
xor
lahf
insl
or
mov
mov
or
jge
xchg
bound
adc
roll
xchg
flds
add
mov
call
push
cli
pushl
fld
int3
gs
int3
test
fs
xchg
and
pop
add
stc
rcrb
fdivs
push
cmove
push
and
mov
fmuls
mov
lahf
fstpt
jo
sub
les
mov
pop
mov
mov
inc
shrl
push
jmp
xchg
sub
add
add
aad
xchg
stc
jmp
mov
rcr
xchg
jae
mov
xchg
jge
jg
mov
sub
xchg
add
xchg
mov
jne
shll
add
mov
popf
add
int3
and
enter
mov
inc
push
cs
jmp
loope
xor
and
add
sbb
and
mov
sub
ret
ficompl
test
add
mov
xorl
scas
sbb
in
and
xor
sub
xor
push
mov
mov
fwait
movsl
xchg
fiadds
ret
scas
jae
js
sub
test
sub
test
fildl
inc
out
push
stos
mov
lds
mov
dec
push
out
xchg
pop
repnz
fildl
xchg
ds
sahf
add
mov
test
inc
mov
mov
in
and
and
push
stc
mov
push
xlat
mov
sbb
ret
loope
push
stc
sub
jecxz
and
cltd
outsb
out
or
mull
cli
das
mov
lods
fisttps
inc
xor
push
mov
test
dec
push
call
pop
fwait
std
mov
adc
cld
inc
in
ret
push
clc
fdivs
or
xor
jne
pop
dec
cld
pop
jg
out
push
jbe
xchg
pop
leave
mov
or
leave
fs
push
fucomp
call
addl
hlt
cltd
cwtl
ja
or
mov
out
std
pop
push
cli
adcl
enter
cltd
pop
ja
or
pushf
addl
dec
int
movsl
xor
shrl
jge
je
int3
jae
sub
mov
sub
xchg
ret
ficomps
daa
clc
dec
sub
pop
stc
rolb
test
test
shll
add
inc
add
ret
sti
xorb
sub
ror
out
int3
cmp
mov
in
repz
xlat
dec
add
jbe
push
sub
and
push
das
out
and
popa
push
or
push
aas
jo
push
jl
sub
jne
mov
pop
in
mov
ret
xor
fucomi
mov
xchg
jno
les
movsb
repz
das
repnz
scas
ljmp
popa
add
add
je
jmp
xchg
xorl
or
sbb
xor
pushf
shll
jb
add
add
jns
cs
fildl
bound
lahf
or
fildl
jmp
cmp
dec
adc
mov
ret
jmp
add
cmp
lcall
jo
stos
in
out
hlt
or
pusha
sub
hlt
shlb
mov
mov
mov
jnp
cli
in
scas
clc
lcall
std
in
fucomi
jmp
xchg
mov
fisttpl
sbbl
add
add
lcall
mov
inc
jle
add
sbb
mov
movsl
jge
or
outsb
adc
lcall
test
inc
sahf
jge
aad
cmpl
rorl
add
fcomip
add
mov
jl
fiaddl
je
sub
jg
orl
lcall
or
popa
push
call
icebp
nop
inc
lock
pop
pop
inc
inc
jb
ret
cmp
stc
aaa
cmp
cld
ret
stc
jge
pushf
cmp
add
inc
lods
jge
stos
sub
pop
xor
in
repz
fmuls
or
aas
sub
or
lods
sub
cmp
call
xchg
mov
cmp
call
jo
mov
add
inc
jo
test
pop
sbb
js
mov
push
push
aas
mov
xorb
pop
xchg
jo
fimull
testl
in
jo
jmp
lahf
pop
sbb
xorb
ds
sub
out
pop
insb
fucomi
add
fucompp
add
adc
sbb
sar
aaa
xchg
pop
dec
mov
add
jae
movsb
pop
lods
add
fucomi
xchg
push
fisttpll
or
sbb
out
adc
xchg
or
adc
bound
popa
hlt
adc
mov
dec
es
add
sarl
mov
ja
add
jae
jmp
test
push
fisttpl
mov
fildl
push
iret
jge
jns
mov
sbb
add
rorl
in
movsb
shrl
lret
cmp
add
das
test
inc
movsl
dec
pop
xor
imul
addb
cmpsl
testb
loope
je
push
sarl
or
rclb
fisttpll
pop
daa
push
call
mov
inc
lock
pusha
pop
lcall
jb
sbbb
cmp
dec
or
call
add
add
inc
push
dec
adc
loopne
add
mov
cmpsl
std
ror
popa
mov
mov
movl
call
sbb
xorl
lea
nop
push
sti
xorl
pop
ss
add
jb
subl
dec
jmp
jbe
dec
pop
xchg
add
ss
add
repnz
pop
ja
or
lods
xchg
stc
pop
xor
fsubl
frstpm(287
hlt
out
fnstcw
insb
aaa
mov
stc
xlat
aas
inc
cld
and
or
les
or
mov
pop
cld
jno
jg
xchg
jno
test
fstpt
xor
pop
sbb
add
lahf
out
xchg
xor
fs
ret
cmpsl
sbb
xor
andb
xchg
fsubs
test
subb
out
xlat
movsl
das
nop
cmc
sbb
cmp
xchg
mov
fcoml
sti
xor
jae
insb
adc
in
mov
bound
cmp
push
pop
push
xor
cmc
adc
leave
add
jno
adcb
shlb
cmc
cltd
mov
jae
roll
data16
repnz
mov
xor
or
sub
daa
push
fildl
out
sahf
push
jo
fisttps
sbb
xor
lds
sbb
pop
stos
xor
add
cmp
push
add
inc
cmp
pop
ljmp
inc
add
push
xor
push
push
outsl
inc
pop
inc
cltd
fidivl
jge
shll
push
orl
call
ficompl
add
enter
rcr
divb
adc
inc
sbb
mov
call
push
cli
decl
into
cmc
adcb
push
nop
sti
and
call
pop
sahf
std
test
pop
mov
out
jge
jo
jns
cwtl
cmp
add
jae
std
bnd
test
movsb
ja
fsub
jns
mov
test
outsl
xor
add
jb
std
repnz
lret
jmp
stc
aas
xor
add
repnz
repnz
test
in
inc
mov
stc
sti
je
mov
lret
jno
test
mov
stc
jmp
aam
cmp
fimull
clc
mov
les
ret
cmp
push
test
push
jp
jg
inc
pusha
or
mull
sbbb
std
sahf
out
mov
jmp
xor
push
sbb
aam
xchg
jno
sbb
in
push
pop
subb
pop
es
repz
mov
push
fmuls
jae
or
es
repz
mov
fs
arpl
fsts
pop
repz
inc
sbb
cltd
cmp
xor
cli
mov
sti
mov
rcll
int3
pop
sbb
insb
dec
lahf
push
lret
mov
mov
rcll
sbb
push
jb
mov
jbe
movsb
test
jbe
int3
mov
mov
ljmp
sub
jbe
int3
xchg
cmc
pusha
imul
es
insb
pop
aad
dec
je
add
bound
test
mov
stc
cmp
jl
ret
dec
mov
pop
shlb
cld
add
xor
in
adc
adc
adcl
cmc
adcb
push
jge
push
jl
aam
je
fcmovbe
sbb
inc
lds
adc
jl
push
sahf
data16
xchg
push
jbe
lods
fisubrs
sbb
mov
lea
mov
inc
jecxz
or
jne
in
shll
jne
jl
fdivrs
or
incl
ja
pop
sub
call
add
jecxz
into
rep
in
sub
fadd
jae
movsl
les
stos
js
inc
sub
mov
aaa
mov
cld
add
jne
sbb
aad
das
mov
shlb
das
mov
inc
and
and
movsb
xlat
jne
adc
pop
jmp
inc
xor
mov
and
jg
es
xor
adc
dec
arpl
clc
icebp
mov
sub
cli
push
fidivl
in
xchg
ret
mov
xlat
fs
add
jb
in
sbb
jbe
mov
xchg
mov
imul
push
cmpsl
test
stos
jmp
push
ret
mov
in
lock
jge
mov
xchg
sbb
sub
push
push
pop
lret
add
sub
jb
jmp
lods
inc
adc
call
dec
fwait
insl
jmp
cmpb
fildll
push
push
mov
pop
lahf
push
aas
sbb
or
cmp
xchg
jmp
push
jge
pusha
mov
shll
ds
movsb
pop
aas
fldl2e
xchg
jmp
push
fsubr
fmul
adc
jb
jmp
call
xchg
andl
pop
fsubs
cmpsl
mov
les
inc
add
lahf
jg
cmp
pop
sbb
xchg
push
test
pop
xchg
add
fidivl
test
aam
mov
sub
push
test
pop
jl
ret
inc
mov
into
adc
pop
push
nop
push
in
push
mov
dec
push
mov
cmp
pop
pop
mov
add
popa
cli
test
int
xorl
and
jl
add
jecxz
mov
jge
jne
inc
mov
popf
inc
push
jo
lods
jge
movsb
lret
rolb
test
dec
jnp
xchg
icebp
adc
popl
or
inc
cld
mov
mov
add
push
jo
or
repz
add
cmp
jmp
pop
ds
push
jmp
and
mov
mov
in
add
mul
test
loop
inc
js
jns
jl
jns
pusha
ret
je
xor
ret
push
fcompl
sub
mov
push
js
cmp
js
mov
add
mov
sbb
ljmp
push
mov
outsb
test
jmp
test
jmp
jno
inc
xchg
and
fucomi
add
fucomi
fwait
mov
mov
cmc
xchg
sti
ret
cmc
xchg
or
int3
jne
call
and
add
jns
std
and
je
lods
mov
cmpsb
mov
popl
sbb
scas
dec
bound
jge
jbe
test
pop
pushf
mov
jbe
mov
xchg
dec
pop
std
call
add
xor
jmp
hlt
sbb
or
lock
mov
daa
or
inc
sub
fdivrl
clc
repz
js
mov
fiaddl
jmp
jae
mov
faddl
jmp
add
adc
insb
sbb
add
fidivl
dec
add
pop
add
insl
flds
add
filds
xchg
pop
add
sbb
out
ds
xor
mov
xchg
cltd
jle
mov
jg
push
in
mov
jge
sub
int3
aam
in
aam
jge
test
sar
mov
jg
xchg
xor
cmc
xchg
loope
add
shlb
add
dec
xor
jo
int3
dec
mov
test
mov
jmp
xchg
pop
fsincos
ret
call
repz
incl
daa
shll
icebp
inc
js
cmp
xchg
stc
xlat
lock
inc
int3
push
xchg
or
cmp
incl
mov
xchg
pop
enter
push
call
stc
repz
or
cmpsl
push
xchg
aaa
sar
ret
push
dec
or
repz
push
pop
lds
ja
pop
fs
cmp
fwait
into
adc
pop
push
or
fidivrs
stc
cwtl
aaa
mov
lcall
outsb
sbb
fstps
repz
xchg
add
test
lea
xor
insb
iret
mov
subl
cwtl
fistps
fwait
dec
pop
adc
pop
mulb
adc
add
add
pop
fnsave
insb
cs
push
bound
enter
sbb
mov
in
hlt
mov
inc
gs
clc
aad
pop
clc
fsubrl
rclb
jb
jmp
add
jbe
jmp
sub
insl
in
mov
clc
push
lock
aas
fsin
and
mov
inc
xchg
clc
push
fistpll
cmpsl
faddl
jb
xchg
test
pop
mov
adc
add
fiadds
add
sub
add
xchg
add
rcrb
inc
mov
or
add
pop
mov
add
sbb
adc
lcall
push
nop
pushl
push
jle
rcr
sbb
bswap
jge
add
mov
add
cli
mov
jge
leave
leave
mov
add
fiaddl
xorl
jge
test
test
js
add
jo
mov
mov
dec
dec
int3
cmp
mov
repz
adc
jmp
xchg
add
jecxz
ret
mov
test
ficompl
stc
xchg
or
mov
add
jle
or
or
mov
add
sti
inc
adc
lcall
test
jo
enter
daa
adc
xor
cmp
pop
ljmp
rcrb
jo
jmp
dec
jo
jmp
test
jmp
mov
jecxz
inc
cmc
movsb
jmp
mov
stos
cld
adc
mov
fsubr
add
mov
test
fucomi
add
loop
add
addl
jb
dec
pusha
mov
or
mov
jmp
test
movsl
in
in
pop
mov
jns
add
jl
jb
add
fwait
add
jae
ds
pusha
mov
aaa
sub
push
jae
add
insb
and
cmp
pop
mov
jae
push
xchg
jl
add
lock
or
les
jb
add
pop
popf
jae
add
ds
jae
push
jb
add
jae
push
cs
push
mov
mov
sub
inc
add
add
das
loopne
inc
aad
jp
rcrb
add
add
mov
mov
add
movsb
xchg
jne
dec
out
loope
filds
mov
dec
xor
mov
inc
fisubrl
pop
sarl
jnp
or
sti
lcall
lret
mov
jnp
bound
push
rcr
pusha
mov
mov
jns
inc
insb
inc
pushf
or
push
int
mov
sbb
jo
xchg
sti
ret
sub
pop
test
js
js
call
jne
sub
inc
jae
std
leave
ja
lret
or
out
std
ljmp
adc
test
add
cmpsl
adc
cmpsb
xchg
mov
inc
aaa
roll
leave
outsl
lahf
xchg
push
ljmp
aam
subl
decl
fucomi
mov
or
cltd
add
fucompp
add
out
stc
ja
outsl
lcall
imul
andb
iret
jns
pop
fstps
jae
lret
popf
out
leave
xor
inc
mov
loopne
fsubs
test
std
fucomip
inc
and
scas
dec
cmp
cmpsb
dec
xor
adc
lea
nop
int
test
cs
add
jae
rcr
jmp
mov
mov
xlat
add
pop
add
jae
jle
insb
fildl
jl
enter
fildl
jl
push
inc
jns
and
pop
jbe
in
push
inc
je
push
sar
add
jecxz
aas
xor
mov
jmp
jo
jmp
aas
dec
nop
mov
jmp
xchg
stos
into
add
jecxz
cmpsb
lock
jmp
jae
mov
sbb
ret
in
lahf
lds
movsl
sbb
int3
xchg
sbb
int3
cld
pop
in
xchg
fdiv
fldenv
mov
leave
fildl
lea
sti
pushl
movsb
mov
jecxz
add
xchg
cli
push
push
addb
xchg
xor
mov
stc
sbbl
push
cli
jmp
or
fs
out
cli
push
icebp
shl
jmp
out
loope
mov
inc
in
jl
or
add
cmpsb
sahf
push
push
jo
mov
inc
mov
add
enter
jo
inc
adc
lock
repnz
outsl
test
mov
lret
pop
mov
cmpsb
lea
add
mov
add
mov
movsl
outsl
stc
in
push
cli
addr16
insb
ljmp
add
inc
inc
out
mov
pop
outsl
mov
movd
daa
insb
dec
in
pop
add
inc
je
fldt
or
pop
stc
lea
stos
mov
jbe
subb
pop
sub
int3
pop
xor
push
mov
rol
sub
movsb
mov
jne
fildl
cltd
pop
es
lcall
xor
into
jne
pop
push
jo
lea
jne
xchg
out
xor
jmp
xor
mov
je
lea
xchg
xchg
sbb
mov
jge
add
nop
xorl
push
jle
test
push
pop
testl
test
jo
int3
es
sbb
loop
mov
push
bound
xchg
clc
decb
or
scas
xchg
enter
add
jle
std
xchg
clc
pop
div
fcompl
clc
mov
jne
scas
les
mov
insl
ljmp
testl
sahf
push
mov
lahf
pop
cli
call
lcall
adcb
mov
inc
imul
leave
bound
sub
in
decb
cmc
stc
call
jle
sbb
or
pop
popa
inc
in
sahf
push
xchg
and
pop
cli
push
inc
cmpsl
inc
lea
adc
sti
lcall
sub
les
shll
call
push
sbb
dec
fnsave
jae
das
pop
dec
in
bound
je
cmc
aaa
stc
sti
ljmp
stc
pop
add
mov
xor
cmp
stc
out
dec
add
mov
cld
repnz
int3
test
cwtl
jae
mov
mov
jae
pop
fnsave
repz
jl
xchg
ja
push
jns
stc
cmc
iret
jo
in
imull
ja
pop
push
pop
cltd
jae
sub
mov
in
jg
push
std
fdivr
std
mov
fs
cmp
nop
jb
push
insl
pop
sub
jbe
sbb
pop
or
sub
cld
pop
xor
pop
dec
add
mov
clc
insl
fs
mov
clc
jne
movsb
ja
loopne
lock
push
cmc
pop
mov
rcrb
out
jno
addl
pop
cmpsb
or
lcall
ret
xchg
imul
xchg
mov
mov
mull
roll
mov
in
lahf
std
imul
and
pop
jle
addb
pop
andl
mov
popa
orb
sub
ljmp
fwait
insl
ljmp
testl
and
clc
testb
lret
ljmp
clc
and
clc
pop
bound
jl
in
dec
jae
add
mov
mov
sar
push
pop
mov
push
or
push
js
xchg
or
or
or
pop
pop
ficompl
dec
mov
cwtl
mov
loope
into
mov
xchg
jo
or
sub
xlat
xchg
push
dec
faddl
add
faddl
xor
stc
incl
or
mov
call
mov
xchg
cli
mov
orb
adc
add
clc
mov
mov
adc
mov
hlt
jo
push
in
adc
inc
enter
int3
test
inc
int3
sub
inc
int3
and
inc
int3
cmp
jnp
repz
push
jmp
clc
sub
lcall
jo
add
jge
jae
jmp
xor
inc
lods
fbstp
cmp
lret
int
jge
add
jmp
sarl
js
lods
jmp
in
jecxz
xchg
test
jecxz
mov
ljmp
xchg
cmpsb
aas
cmp
xor
clc
ja
mov
mov
pop
push
add
outsb
in
sbb
jp
out
aad
sub
outsl
ds
lock
sub
dec
cltd
out
mov
push
aas
lods
xchg
cs
movsb
xchg
es
mov
pop
jmp
lret
cmp
stc
cli
sbb
movsl
inc
test
xchg
jp
rol
jbe
roll
bound
or
inc
les
frstor
mov
aaa
inc
or
jmp
and
addb
cmp
adc
jmp
push
xlat
jge
sbb
push
inc
sti
cmp
xor
out
add
jae
add
mov
mov
icebp
lahf
add
shll
jmp
pop
jg
stos
jae
inc
sbb
fsts
add
sarb
in
push
adc
adc
pop
add
jae
mov
jae
xchg
adc
add
sbbb
sbb
stc
adc
ficompl
pop
outsl
aaa
cltd
decl
negl
hlt
xchg
mov
sbb
inc
or
jae
cmp
mov
mov
add
mov
iret
adc
xlat
add
push
pop
mov
leave
xlat
jne
pop
jmp
call
xor
jae
xchg
idiv
add
mov
lahf
jno
in
mov
pop
jo
add
out
and
call
xchg
adc
fdivr
jp
jo
add
jmp
std
pushl
ret
das
stc
cmc
mov
jo
ja
in
je
jo
movsl
add
aad
mov
jmp
je
dec
mov
imul
or
pop
sti
or
add
jo
jg
insb
cmpsl
fidivl
aas
shl
cld
pushl
add
jo
je
jo
jmp
jle
pusha
ljmp
push
dec
add
lock
add
imul
jo
jb
imul
fucomi
ss
jo
jmp
add
test
out
outsl
push
xor
imulb
ljmp
or
jmp
lret
or
insb
push
pop
outsl
jle
ja
fcomip
adc
mov
pop
sbb
add
cmp
cld
xchg
and
mov
mov
call
jb
enter
push
loope,pt
rorb
fildl
rolb
clc
fidivrs
mov
in
xchg
or
int
push
push
lds
pusha
fcmovnb
popf
js
lds
push
outsl
mov
pop
inc
icebp
and
add
insb
stc
add
pushf
imul
icebp
jae
lds
pop
outsl
push
mov
add
add
fdivrl
mov
add
leave
faddl
push
cltd
faddl
add
out
test
add
faddl
add
faddl
add
lcall
pop
ret
aas
push
std
jae
sbb
lcall
rol
xlat
add
dec
cltd
mov
or
add
sbb
add
faddl
add
int3
int3
aad
int3
mov
lret
jne
push
jo
push
pop
sahf
add
jo
aad
inc
adc
in
xor
test
shl
or
mov
push
adc
xor
jmp
xor
mov
mov
das
int3
lods
pop
jne
jmp
adc
pop
test
push
cmc
mov
push
in
pop
insl
mov
sbbb
cmp
clc
jl
jns
movsb
aad
inc
and
cmp
js
shl
mov
jecxz
push
add
rorb
mov
mov
test
fistl
call
push
inc
leave
adc
push
cmp
cmp
nop
jp
iret
fiaddl
sbb
andl
push
xchg
mov
popf
and
adc
sub
ret
addr16
stos
lock
jle
mov
dec
mov
add
push
and
mov
aaa
xor
cmpsb
aaa
sub
xor
jnp
iret
mov
addb
add
fbstp
xchg
or
mov
jge
ror
fcoml
int
jmp
jno
shlb
mov
lds
inc
pop
pushf
cli
outsb
test
add
mov
xor
icebp
xchg
clc
push
cmpb
sbb
sbb
sub
sub
stos
add
jo
cmp
jmp
pushf
subb
add
mov
cld
shlb
mov
jge
andl
jge
sbb
jle
xor
push
cld
ficoms
ret
int3
add
int3
dec
ret
int3
aam
in
adc
imul
adc
insb
add
int
dec
inc
pop
loopne
je
inc
jae
add
add
pop
and
mov
and
and
mov
dec
adc
stc
adc
jo
imul
test
rcrb
add
in
mov
pop
add
jns,pt
es
jns
je
sub
adc
insb
ja
and
aam
jge
adc
mov
pop
adc
lods
sti
pop
jmp
mov
in
sti
push
lock
orb
insb
scas
aas
int3
cmp
push
int3
xor
push
int3
sub
push
int3
and
xchg
sti
mov
stc
mov
add
aaa
cpuid
sub
adc
add
sbb
repz
lret
imul
xlat
mov
stos
add
fucomi
shl
jmp
push
mov
cs
lods
cmpsl
es
movsb
cmpsl
pop
xchg
fucomi
add
adc
push
fstpt
xchg
fbstp
fldenv
insb
mov
jmp
jmp
lea
lock
fstpt
insb
movsbl
fisubrl
lcall
jae
add
std
clc
mov
jae
xor
in
clc
movsb
divl
mov
int
jmp
jae
mov
int
jmp
aaa
cmpsl
lds
daa
cmpsl
lds
add
or
jb
loope
push
add
or
jae
add
and
fildl
dec
pop
pop
lods
add
jg
decl
xchg
mov
push
or
lahf
outsl
lds
xchg
adc
or
jge
sbbl
clc
mov
addr16
or
fdivrl
xor
push
lret
test
adc
xor
mov
loope
adc
fsubrl
pushf
lahf
xor
add
in
mov
fwait
std
lcall
xchg
push
cmp
fistpll
lret
jg
mov
mov
fdivs
test
and
jo
test
movsl
inc
mov
jo
mov
aad
cmp
int3
lods
lods
inc
int3
movsb
lds
mov
mov
test
xchg
pop
stc
push
insb
test
xor
push
jmp
jp
test
jb
jmp
rolb
cmp
mov
fucomi
add
arpl
or
pusha
mov
xor
jo
jo
add
sbb
jo
jo
mov
arpl
or
bound
dec
jb
je
jmp
shr
fnstenv
cmp
jmp
mov
xchg
popa
loope
fs
aaa
je
add
ficoms
jmp
jb
insb
fucomi
mov
outsl
push
and
fidivl
lea
xchg
pop
dec
add
inc
push
fsubrs
inc
jp
in
sub
mov
es
mov
stc
mov
xchg
hlt
aas
bound
jp
cmpsb
out
and
lahf
push
jne
ljmp
jb
sub
xchg
lahf
outsb
inc
enter
psubsw
inc
xor
outsb
sub
pop
jno
into
out
fimuls
add
add
icebp
hlt
jb
insl
test
ljmp
inc
fiaddl
add
push
jns
push
flds
mov
adc
lretw
cmp
flds
add
repz
cmp
flds
jne
popfw
and
flds
add
pop
das
add
arpl
sbb
idivb
fmuls
in
add
arpl
mov
inc
or
cld
test
add
mov
pusha
jl
adc
insl
push
adc
or
fadds
add
sti
jg
push
jge
xchg
out
popf
add
mov
jmp
cld
test
fnstenv
xlat
addr16
pop
test
pop
fistps
lcall
sbb
adc
scas
pop
test
lea
jae
pop
push
jae
clc
jmp
dec
add
jbe
jae
int3
mov
jmp
mov
movsb
lods
inc
int3
mov
ss
repz
dec
push
push
mov
sti
mov
adc
mov
pop
stc
xchg
ficompl
pop
negl
pop
shll
sub
outsl
xor
sub
pop
jo
jg
lods
push
call
je
jo
jmp
lea
fs
frstor
pop
imul
adc
loop
mov
subl
int
fs
fs
mov
icebp
loope
push
pop
fsubrs
jmp
push
jo
push
icebp
sub
hlt
fisubrl
add
repz
or
jae
add
jae
xor
add
push
stc
fs
out
or
fiaddl
jmp
bound
call
test
fildl
jmp
xor
mov
ficoml
pop
bound
lahf
lds
out
jle
jge
push
dec
jb
in
pop
outsb
rcl
out
imul
data16
push
clc
sbb
cs
std
call
add
or
and
add
dec
fwait
lock
in
xor
dec
faddl
fmull
clc
lcall
jge
rclb
jge
sub
sti
jg
sbb
lods
jnp
jb
or
inc
lock
add
pop
popf
and
fldl
add
dec
mov
loopew
add
bound
push
scas
adc
faddl
sub
into
mov
mov
xchg
pushl
loop
sahf
cwtl
sub
bound
xchg
adc
or
in
lods
adc
outsb
repz
xor
mov
or
ljmp
les
sti
push
or
jl
test
add
incl
add
cmpsl
outsb
es
into
xor
dec
bound
stc
icebp
fwait
adc
test
popf
call
jl
addb
fs
loopne
repnz
out
test
inc
out
mov
addr16
clc
iret
ficompl
ja
jmp
jg
fldl2t
add
dec
or
inc
ljmp
lock
jo
cli
add
rcrb
sbb
lock
cs
fisubrs
outsl
add
lock
jo
lea
mov
mov
mul
jae
cmc
or
mov
xor
add
out
in
sbb
fsubl
xor
dec
push
out
imull
lock
pop
cwtl
sbb
mov
add
sbb
mov
cltd
xchg
pop
cmp
inc
popa
jmp
dec
mov
jae
mov
leave
add
add
into
pop
call
fistpl
pop
pop
mov
outsb
clc
xchg
fbstp
add
outsb
clc
ret
dec
in
sub
lahf
imul
clc
jmp
les
jge
outsb
clc
repnz
icebp
pop
fdivrp
dec
mov
jae
mov
stc
rorl
mov
pop
add
jmp
jge
mov
cmpl
inc
xor
xchg
adc
shl
jle
lock
jmp
jle
mov
inc
adc
cltd
pusha
jl
cwtl
xor
jns
mov
dec
andl
mov
hlt
add
mov
add
retw
or
mov
jge
decl
xchg
lock
mov
lret
add
stc
jo
into
pop
stc
cmpsl
push
dec
push
jnp
mov
and
cmp
add
call
push
add
jl
aam
ljmp
dec
js
lock
repnz
adc
mov
cmpl
rcrl
xor
nop
adc
add
sti
xchg
mov
add
xor
jns
fwait
adc
cmpl
jo
add
or
repz
shr
add
push
mov
loope
add
pop
jb
sbb
sbb
dec
sub
jo
jo
lret
hlt
cmp
and
mov
ja
or
xor
add
lcall
imul
pusha
popf
pop
add
testb
push
pop
lcall
bound
shr
add
call
cwtl
hlt
lea
adc
push
testl
leave
pop
pusha
hlt
and
jmp
ja
shl
fistpl
pop
pusha
mov
push
pop
aad
mov
sbb
bound
jb
daa
psubsw
jae
ret
jb
iret
popa
dec
dec
mov
mov
int
jmp
hlt
and
jmp
ficomps
fucomp
or
mov
pusha
xchg
xor
clc
jb
loope
cmc
jb
xchg
xchg
sub
bound
add
push
arpl
shll
popa
mov
nop
out
mov
or
bound
flds
and
add
frstor
jmp
decl
pop
pop
imul
test
add
movb
fldl
sub
dec
clc
adc
mov
mov
sub
mov
and
lcall
mov
mov
gs
jge
decl
loop
adc
leave
push
adc
pop
in
adc
xchg
in
mov
jge
cmp
cld
insb
mov
jb
mov
test
nop
aam
add
sti
scas
pusha
lcall
sub
int3
pop
out
mov
std
cmpsb
imul
stc
loop
adc
jne
aam
jnp
or
ljmp
mov
nop
adc
ljmp
jne
idiv
cli
nop
adc
jne
mov
mov
jge
jnp
push
stc
cs
bound
jne
add
mov
mov
mov
and
add
out
in
sbb
jb
adcl
fucomi
jl
shll
push
fucomi
jl
ja
stos
subl
sbb
push
popf
outsl
jp
fadds
jo
popa
mov
shr
add
lret
mov
jae
shr
add
rolb
add
popf
push
push
lea
mov
imul
es
pop
fucomi
add
loopne
inc
icebp
out
jb
add
jae
ds
jae
add
lcall
scas
cmp
call
mov
aam
xchg
mov
jl
lods
xor
push
bound
lret
add
divl
aaa
fs
xor
add
repnz
or
in
mov
mov
mov
leave
add
or
or
and
jmp
je
or
jmp
xor
xchg
cld
mov
insl
clc
decl
adc
sub
mov
ret
xchg
mov
andb
sbb
fstl
add
pusha
mov
rcl
mov
fstpt
lea
call
das
bound
and
adc
aam
arpl
daa
push
adc
mov
push
or
pusha
mov
add
ficomps
add
scas
push
pop
fnstcw
jo
jnp
push
xchg
test
cmpsb
in
incl
cmpsb
adc
sbbl
add
and
xor
add
xchg
sti
jle
jle
add
arpl
loopne
jnp
mov
xor
mov
in
test
push
out
call
icebp
cmp
repz
add
aam
rclb
arpl
lods
pushf
sti
xchg
call
sub
test
pop
out
decl
dec
lock
jmp
pushl
jb
add
sbb
bound
int
add
into
xchg
pusha
mov
out
jae
inc
cmp
js
sbb
in
pop
xchg
cmc
pop
fs
lock
mov
in
pop
xor
imul
pop
fucomi
adc
mov
jo
jo
bound
int
add
in
push
aam
je
mov
data16
shr
add
adc
in
js
mov
enter
jns
add
enter
or
jno
shl
cmpsl
pop
aam
ja
int
jmp
add
pop
xor
inc
mov
mov
call
mov
int
jmp
jae
jmp
sti
sub
in
sbb
pop
addr16
jg
add
clc
pop
lahf
sbbl
jae
shr
push
mov
jae
add
out
out
pop
add
push
sub
loope
push
popl
sub
sbb
cli
mov
push
out
lcall
ret
push
cli
incl
xor
adc
mov
in
xor
pop
and
mov
imul
add
loop
add
pop
xchg
andb
and
mov
fs
mov
fldl
shlb
inc
inc
and
mov
adc
leave
ficoms
dec
test
test
dec
jne
jo
xchg
jo
add
cmpsl
fdivl
jp
jno
xor
xchg
ja
push
lds
mov
sti
icebp
lcall
xchg
cwtl
sbb
add
sti
inc
call
inc
fs
cwtl
stc
mov
sti
stos
lock
push
sbb
std
insb
mov
mov
jne
js
in
and
in
push
lock
jmp
mov
adc
adc
fldcw
mov
scas
sti
je
pop
jb
test
cmp
add
imul
and
incl
xchg
jl
leave
jmp
add
ss
pop
pusha
ljmp
pusha
mov
sbb
adc
loope
dec
xor
das
pusha
out
xchg
or
lock
cmp
out
mov
out
xchg
call
push
and
in
or
jnp
lret
and
jmp
xchg
xorb
mov
imul
add
push
add
jae
pop
pusha
add
psubsw
pop
jb
add
out
and
pop
jle
es
jae
mov
add
or
loop
loope
out
dec
mov
jo
outsl
pop
sbb
pop
dec
loope
nop
xor
pop
clc
div
inc
mov
cmp
push
adc
div
inc
mov
and
add
loope
mov
psubsw
push
cltd
das
sbb
add
fisttpll
rorl
adcb
fistps
jmp
cmpb
lcall
pop
mov
or
orb
jae
enter
mov
sbbb
into
je
shrb
xchg
fbstp
or
add
inc
ror
jle
jge
mov
loope
inc
pop
bound
adcl
cwtl
push
jo
jmp
adc
jo
add
mov
sbb
mov
imul
mov
cwtl
in
add
lahf
xor
scas
sbb
bound
out
add
xchg
jne
mov
jg
int3
add
cmc
scas
sbb
add
je
or
add
mov
fadds
pushl
jae
push
jg
xchg
adc
cld
in
jmp
in
mov
bound
inc
jo
scas
or
enter
je
xchg
mov
fucomi
add
mov
pop
imul
dec
sti
bound
push
divb
push
mov
mull
clc
add
jo
insb
fadd
jmp
jnp
lret
arpl
out
push
fucomi
js
shll
outsb
push
jp
sbb
inc
mov
pop
hlt
lea
movsl
push
jmp
in
testl
scas
sbb
jo
fadd
jmp
cmpsb
jnp
jb
int3
hlt
lcall
enter
xchg
mov
enter
pop
lahf
lods
cmp
aam
xchg
push
cmpb
push
and
movsl
lea
lahf
mov
push
pop
jl
pop
inc
xor
pop
jb
stc
rorl
mov
mov
push
lret
xchg
psubsw
jno
lret
divl
push
xor
pop
aaa
lret
xchg
psubsw
jno
test
or
in
xor
mov
or
pop
add
add
outsl
mov
push
loop
jle
loope
xchg
mov
lret
fwait
stc
ljmp
xchg
int
add
add
dec
xlat
adc
cltd
loope
pop
mov
mov
add
ret
gs
int3
inc
stos
int3
inc
stos
int3
jecxz
mov
out
add
dec
imul
mov
test
dec
xchg
inc
inc
lret
shlb
stc
pop
xchg
or
xlat
aad
add
fidivs
jo
jg
les
add
out
repz
jo
add
nop
int3
jecxz
filds
mov
add
jmp
adc
addb
jo
add
sub
out
mov
jo
aas
int3
movsb
pop
dec
int3
mov
mov
loop
jno
dec
inc
mov
hlt
ret
fwait
loope
sub
dec
int3
and
dec
int3
cmp
mov
fistl
jae
dec
jp
call
jb
test
ljmp
mov
mov
jno
jg
sub
xchg
and
call
bound
fucomi
faddl
jae
add
xor
divb
sbb
popa
and
xchg
xchg
fcomip
jmp
test
xchg
lock
enter
rolb
jo
sub
daa
push
push
sub
cs
and
es
cmp
arpl
pop
add
std
out
or
mov
jmp
adc
xor
mov
push
lea
rolb
sbbl
pop
dec
loope
stos
or
sti
xchg
psubsw
adc
fisubrl
mov
add
cli
bound
stos
das
daa
lds
aas
daa
lds
das
mov
dec
imul
loope
iret
inc
bound
jmp
mov
mov
or
and
dec
sti
ljmp
mov
fldz
jge
inc
push
repnz
repz
add
mov
or
lds
mov
push
daa
adc
jns
cmp
push
and
pop
mov
inc
lds
sbb
add
int3
cltd
int3
les
cmpl
and
add
rorb
mov
push
fsubs
packsswb
jo
pop
mov
pop
test
mov
jecxz
push
mov
cwtl
and
mov
jne
andl
push
or
jnp
popa
jmp
push
ss
out
test
sti
in
push
and
test
push
inc
int3
mov
mov
repz
or
sti
sbb
or
sub
cmp
and
add
push
fs
add
jo
add
imulb
add
add
jo
push
jp
fildl
mov
push
push
mov
stos
aad
jo
pop
xchg
loopne
add
sahf
in
in
or
jo
jmp
lock
fldcw
stc
xor
dec
gs
sbb
jo
jmp
es
mov
sub
call
arpl
jmp
add
xchg
cmp
jmp
add
jo
icebp
sbb
jmp
insb
sbb
xchg
mov
push
data16
push
stos
or
jae
jl
jmp
hlt
jb
fmull
cltd
xchg
add
xchg
mov
mov
jb
adc
jmp
push
clc
xor
push
std
imul
dec
in
out
jle
jmp
cmc
stos
or
jae
test
fiadds
jmp
jae
dec
pusha
in
stos
or
jae
add
pop
xchg
push
inc
clc
add
filds
adcl
add
ret
adc
fistpll
add
xor
decl
xchg
push
dec
filds
mov
data16
in
add
mov
fimull
xchg
and
xchg
jmp
mov
pop
adc
fidivrs
iret
ss
leave
pop
mov
mov
mov
push
pop
test
dec
loope
mov
dec
in
adc
fimuls
mov
jge
push
push
fldenv
int
testl
add
inc
xchg
adc
shrb
add
mov
inc
icebp
cmp
out
mov
add
arpl
add
leave
pop
jmp
inc
add
cs
ljmp
xchg
cmp
inc
add
and
xchg
xor
xchg
mov
inc
int3
lods
adc
add
mov
inc
add
inc
pop
pop
jmp
pop
fcomi
add
push
rorl
pop
push
rcll
sub
pop
or
jmp
mov
bswap
ret
das
mov
ja
shl
add
je
push
fwait
jmp
mov
adcl
jno
adc
mov
js
shl
add
sub
js
jp
fs
jmp
mov
and
imul
addb
adc
call
jae
ret
mov
lahf
inc
clc
jb
test
sub
inc
add
adc
jmp
mov
push
dec
test
in
add
dec
pop
xor
add
mov
fildl
push
in
inc
sbb
mov
jecxz
stos
xlat
pop
loopne
xchg
psubsw
scas
orl
or
pop
loopne
push
or
stc
inc
lds
adc
sub
mov
jmp
adc
jns
mov
dec
dec
pop
mov
loopne
mov
add
jge
sub
in
add
ljmp
pop
add
in
jle
mov
mov
imul
nop
bound
dec
stc
jo
loope
add
push
sub
push
add
lds
mov
in
mov
int3
or
jl
pop
cltd
adc
stc
lahf
orb
out
mov
add
icebp
mov
mov
test
add
cmc
sar
inc
add
fidivs
cmp
test
std
les
repnz
cmc
das
xchg
cmp
rcr
sti
daa
aad
mov
add
fsubr
sti
add
leave
xor
stc
jmp
imul
inc
mov
repz
out
andl
cmp
fstps
bound
inc
and
jb
imul
arpl
mov
mov
ss
adc
call
mov
jmp
add
repnz
jns
dec
add
jb
hlt
in
add
into
in
mov
xlat
push
imul
popf
in
sbb
setb
addr16
fucomi
add
insl
xchg
push
jo
bound
fsts
add
fildl
bound
jmp
adc
pushl
mull
cmpb
mov
hlt
pusha
push
psubsw
mov
call
pop
cmp
jmp
add
out
mov
jmp
stc
pusha
sub
jae
mov
pop
add
xor
cmp
xchg
arpl
jmp
loopne
add
and
rorl
lock
or
add
bound
mov
lock
stc
insl
vmovsldup
adc
nop
pop
mov
mov
rclb
add
in
dec
fisttpl
mov
rclb
add
pop
push
dec
adc
sbb
mov
jge
aad
add
xchg
mov
ret
xchg
mov
nop
enter
adc
stos
loopne
adc
mov
rorl
mov
int3
aam
jo
add
xor
ret
cmp
iret
mov
or
jb
inc
enter
mov
or
add
int
pop
mov
inc
int3
mov
out
dec
jmp
adc
jmp
cmp
stc
addr16
jge
xor
or
and
cs
jo
scas
add
ljmp
icebp
fsubrs
add
fsubrs
shll
or
imul
into
lcall
add
push
dec
incb
ljmp
inc
jl
push
pusha
into
sub
or
jmp
jns
fisubs
mov
mov
jmp
xor
fucompp
imul
filds
jns
sub
push
loopne
inc
push
and
incb
movsl
test
fldt
add
jmp
add
push
xlat
mov
sbb
imulb
mov
jae
mov
insb
sbb
add
imul
dec
call
jno
dec
jmp
push
add
jno
dec
ljmp
dec
in
insb
push
add
jno
dec
in
insb
push
add
jno
dec
out
insb
push
add
jno
dec
out
insb
push
add
jno
dec
loope
push
add
jno
dec
lock
push
add
add
dec
jecxz
push
add
jno
dec
repnz
push
add
jno
dec
in
push
add
jno
dec
add
out
add
mov
pandn
add
mov
fsubrp
add
fucomip
adcl
dec
andps
addr16
repnz
out
imul
fistpll
addb
mov
mov
or
add
or
mov
decl
or
pop
imul
add
fdivrl
add
adc
xchg
add
mov
jo
std
divb
add
jae
add
jae
add
jae
clc
mov
ss
jae
clc
mov
xor
clc
mov
cmp
testl
push
dec
add
jae
clc
mov
cmp
divl
clc
mov
dec
add
jae
clc
mov
inc
add
jae
clc
mov
dec
add
jae
clc
mov
ds
jae
divl
jae
test
pusha
xor
or
ficoml
dec
pushf
rcr
jne
fisubl
adc
mov
add
mull
xor
pushf
add
fnstenv
and
test
dec
inc
mov
mov
cmp
into
insb
sbb
shr
jmp
jnp
dec
mov
adc
jmp
inc
jge
sar
shr
push
out
cmp
jo
sub
push
imulb
and
sti
pop
imul
clc
jmp
push
js
clc
fidivl
sub
mov
mov
or
inc
add
jae
loop
jb
add
push
xor
out
fldt
test
jecxz
aad
jmp
neg
cmp
insb
notb
sbb
imul
jae
mov
out
sub
test
roll
jmp
jmp
stos
test
add
add
pop
and
stc
add
and
inc
sbb
or
ret
fadd
bound
jecxz
fadds
add
fdivrs
insb
fsubs
inc
popf
leave
dec
cmp
push
nop
mov
rorl
popf
fldenv
add
add
dec
adc
cltd
xor
add
sub
add
cwtl
call
add
dec
cmp
adc
lcall
add
dec
push
add
cmp
sbb
xorl
add
or
jo
add
bound
test
sbb
jmp
inc
in
mov
stc
jo
add
fs
add
mov
sbb
xor
add
hlt
cld
test
mov
and
and
sub
sub
dec
ja
mov
or
add
xor
test
push
sub
jo
jmp
lock
pop
repnz
ljmp
fucomi
add
fwait
jmp
les
pop
add
in
sub
add
xor
inc
or
fucompp
add
out
add
fwait
jmp
add
testb
and
mov
sub
inc
ljmp
add
add
lods
lea
sbb
add
fiadds
insb
pop
fldt
lcall
jmp
mov
fstl
push
jae
cld
jnp
or
fcmovbe
jge
dec
inc
clc
push
xlat
jb
xchg
clc
mov
outsb
inc
ret
rcr
je
add
test
sbb
or
inc
add
jae
xor
je
inc
jmp
insb
out
xor
insb
hlt
inc
jmp
cltd
fsubl
das
inc
mov
add
mov
dec
test
mov
nop
dec
lret
mov
pop
faddl
shll
sub
sbb
rcrl
add
int3
aam
in
in
inc
or
fisubl
add
inc
loopne
int3
repnz
pop
or
lret
xchg
mov
or
mov
jge
add
push
rorb
test
pop
sbb
in
sti
fdivrp
cmpb
outsl
inc
jo
add
mov
cmpsl
test
das
int3
sub
das
int3
and
rcll
mov
and
pusha
fdivs
jmp
fdivrs
jmp
lods
test
mov
cmp
push
xchg
push
mov
adc
fadds
jo
lds
sbb
std
ljmp
outsb
mov
lcall
or
pop
sti
jne
fdiv
fisttpl
paddsw
jmp
add
jae
call
loopne
fidivrl
fdiv
icebp
mulb
fidivs
xchg
jmp
outsb
lods
add
movsb
imul
jp
fwait
jb
mov
int
mov
or
add
out
mov
adc
jge
fucomi
add
ds
jnp
fucomi
add
cmpsb
hlt
call
push
es
into
mov
add
loopne
enter
divl
xchg
xlat
jb
xchg
sti
add
fs
cmp
cmpsl
push
inc
xchg
aad
jmp
mov
jmp
ja
outsb
fucomp
xchg
xor
bound
faddl
inc
add
ret
inc
clc
jmp
mov
roll
add
fildl
lds
clc
mov
jmp
pop
add
cmp
push
rorb
arpl
or
into
lea
add
jg
insl
sarl
imul
insb
and
fcomi
mov
jge
add
adc
call
jno
mov
or
popf
sbb
and
idiv
mov
xor
or
fadds
mov
mov
insl
das
jge
insl
sarl
std
xor
jg
ret
mov
dec
cmp
ss
lds
add
lds
add
lds
add
lds
add
xlat
add
fcom
add
lret
add
xlat
add
add
add
jo
add
jo
cld
pushl
cld
pushl
add
jo
add
jo
add
jo
cmc
decl
dec
std
pushl
ja
pushf
ljmp
sbb
jo
sbb
pop
ret
push
lcall
jo
sbb
jo
sbb
jo
sbb
jo
sbb
jo
sbb
stc
jae
sbb
ja
sbb
add
sbb
pop
loope
stc
aaa
cmp
outsl
xor
out
push
inc
fstpt
les
xor
jae
call
maskmovq
negl
std
div
mov
mov
out
sub
sbb
incl
add
fucomi
dec
notl
mov
hlt
in
mov
pusha
enter
rolb
xchg
out
add
mov
fs
out
jmp
mov
lods
fisttpll
inc
data16
xlat
negb
inc
dec
or
call
and
scas
std
or
and
cmpsl
dec
out
jmp
idiv
adc
pop
pusha
leave
fidivl
dec
stos
pop
out
adc
add
std
or
imul
jae
add
arpl
shll
mov
divb
cmp
pop
jne
push
mov
add
sbbb
jae
outsl
xchg
jecxz
push
mov
in
out
sbb
jae
add
mov
inc
xor
and
xor
xor
sub
test
adcb
add
mov
loope
or
add
shll
jne
pop
add
inc
pop
fiadds
add
inc
push
sbb
inc
dec
filds
add
dec
pop
add
adcb
data16
push
vmovlps
adc
addr16
and
aas
rorl
sub
cmp
add
add
cwtl
and
inc
add
inc
fdivrp
jo
sbb
shlb
dec
hlt
or
jne
add
and
sbb
add
xchg
inc
subb
pusha
push
and
pop
stos
inc
mov
inc
gs
and
pop
inc
xor
pushf
call
cltd
or
jmp
and
and
iret
push
out
ss
fistpll
and
aam
mov
int3
fiadds
lock
xchg
push
icebp
rclb
mov
stos
hlt
mov
sub
jo
jmp
cmp
and
add
scas
mov
xchg
add
inc
jns
push
add
add
sub
inc
fs
add
mov
xorb
jno
es
add
cmpb
pop
add
stc
data16
push
ss
dec
adc
imul
stc
sbb
mov
add
aaa
andb
mov
ljmp
loop
out
jb
add
fildl
jmp
add
cmp
jb
stc
or
mov
push
push
xor
push
xor
jge
jno
add
je
add
mov
ss
clc
add
ja
jmp
add
adc
fsts
fwait
or
sbb
clc
je
inc
mov
jmp
adc
repz
add
add
dec
inc
sub
lret
pushf
mov
bound
jbe
fisubrl
fcomi
sub
inc
rorb
dec
sub
enter
insl
cmp
mov
dec
sbb
or
pushf
mov
fcomi
sub
mov
fnstcw
and
icebp
dec
lock
and
je
push
sub
push
aad
test
cmp
or
dec
loopne
ja
and
dec
pop
loopne
lds
or
push
pop
mov
sub
out
cmp
mov
subb
jl
inc
add
and
cmp
jp
cmp
fucomi
cmp
add
test
xor
mov
int3
fildl
add
adc
pop
pop
int
add
sbb
int3
xor
jo
push
jns
in
or
sbb
xchg
inc
lret
psllq
rcr
sbb
stos
sti
or
out
jns
test
imul
out
cs
push
loopne
loop
sub
mov
or
or
add
adc
or
fisubl
hlt
js
inc
add
fildl
push
in
push
jnp
ret
sbb
fbstp
xchg
xor
and
cmpsb
sbb
out
sbb
jnp
test
xor
sub
out
cmp
jb
add
xor
ljmp
subl
std
and
std
or
cwtl
xor
movb
cltd
add
xor
mov
sbb
loopne
dec
jb
pop
add
xor
jmp
lcall
ret
popa
push
and
add
jge
loope
or
lret
punpckhdq
or
mov
lahf
jge
xchg
inc
decb
jge
mov
faddl
add
or
mov
cmp
push
jo
or
lahf
jge
inc
add
lcall
lahf
jge
jne
icebp
fldenv
dec
and
mov
xlat
add
lcall
je
and
mov
fdivrp
in
arpl
and
inc
fwait
repz
in
dec
addb
sahf
lret
push
es
out
add
in
dec
rcll
movsb
jmp
fdivs
jmp
fsubrs
stos
repz
adc
jmp
in
lret
adc
out
fwait
xor
into
ds
into
ret
push
test
mov
test
test
sub
push
mov
add
fistl
or
fsubr
add
repz
xchg
negl
pop
test
add
push
repz
cmpsl
std
out
pop
xlat
les
jne
add
push
add
xchg
std
mov
mull
jo
adc
push
aaa
cmp
mov
bound
mov
sub
int
stc
inc
cmpsl
ficoml
cmp
push
out
bound
std
negl
add
adc
roll
pusha
enter
add
pop
in
repnz
mov
addr16
jae
rorl
mov
add
loopne
pop
lcall
and
mov
call
test
ret
repnz
cld
inc
jp
repz
repnz
stos
cld
jno
stc
adc
cmpsb
test
ret
call
adc
jmp
fisubl
lock
in
sbb
call
popa
mov
mov
fildll
add
xchg
int3
lds
in
lds
push
jns
mov
rcrl
adc
sbb
inc
lods
pop
inc
test
sbb
jge
inc
mov
or
and
or
ljmp
or
add
push
sahf
add
das
cmp
lods
arpl
add
idivl
loope
or
leave
fadds
nop
lcall
inc
sub
pop
stc
add
leave
jg
jo
fcmovb
push
aaa
mov
test
jmp
xor
imul
aas
jno
add
and
inc
clc
test
lods
shrb
add
inc
pop
sti
push
mov
mov
inc
fnstcw
movsb
jg
add
jo
xor
movsl
pop
incl
test
mov
inc
je
xchg
add
mov
xchg
adc
rcrl
inc
aad
jae
mov
jp
push
scas
cmpsl
jecxz
dec
pop
mov
mov
out
popf
notb
ljmp
fucomi
add
or
popf
pop
xchg
in
aad
in
popf
notb
enter
mov
test
pop
xor
jmp
pop
mov
outsb
mov
shll
ficoml
mov
push
mov
outsl
pop
xchg
repz
ret
cmp
sub
out
arpl
mov
sub
leave
add
inc
jmp
movsb
jb
and
sub
jo
push
mov
les
clc
jmp
insb
fildl
xchg
jno
ds
sahf
aam
sub
adc
jae
mov
fnstenv
sub
mov
sub
jmp
mov
xchg
mull
push
mov
popf
sti
add
push
fcmovu
add
shll
add
cmp
fldl
nop
idiv
mov
call
add
dec
aam
fs
jge
fldcw
push
ret
pop
shufps
enter
or
adc
add
inc
adc
push
jp
ret
clts
fnstsw
mov
and
dec
faddl
aaa
stos
cld
pop
aaa
test
adc
adc
pusha
mull
ss
push
fiaddl
iret
xor
mov
stos
mov
add
add
cmpsl
xchg
mov
lahf
in
mov
xor
jo
inc
and
js
mov
sub
add
jo
sbb
mov
xchg
xor
add
adc
xorl
clc
mov
mov
into
jae
jnp
sbb
cld
pushl
jge
add
stc
pushl
add
jno
movsl
scas
adc
filds
in
xchg
stc
add
lret
jnp
ss
in
punpckhwd
adc
sti
push
or
lods
popf
int3
and
out
xchg
lea
loope
sub
jno
arpl
jl
xor
aaa
pop
fidivrs
adc
cmp
inc
daa
ljmp
nop
dec
xchg
mov
mov
dec
fistps
repnz
xchg
cmpsb
in
lds
and
xor
je
mov
movsb
jmp
add
jae
roll
insb
or
test
and
jl
movsl
cli
xchg
add
shrb
filds
jmp
or
add
and
push
cmp
jno
ds
mov
add
push
pop
jo
push
add
mov
scas
sbb
loope
xor
into
pop
dec
sti
lcall
add
sub
mov
cld
lea
in
add
jge
fstp
or
inc
das
and
pop
mov
mov
aaa
mov
int3
pop
mov
jge
sbb
insb
adc
arpl
mov
inc
mov
push
push
lock
push
insb
mov
xchg
das
jge
xor
imul
jo
ror
pushf
add
or
int3
gs
int3
add
int3
jo
jnp
jmp
cld
test
cmp
pop
mov
mov
cmovb
pop
shl
out
pop
mov
enter
lret
aaa
lret
push
pop
scas
or
cmp
in
jmp
lock
jmp
add
repz
xchg
les
inc
int3
movsb
inc
inc
int3
cmp
inc
int3
xor
inc
int3
add
jns
jmp
hlt
jl
add
pop
ret
mov
push
mov
subl
add
cld
mov
aas
xchg
jo
sub
inc
or
js
pop
push
xor
and
bound
stos
add
push
pop
and
and
jp
push
in
test
and
jp
push
int
add
and
or
mov
cmpsl
or
dec
insl
pop
imul
movsl
jmp
mov
xor
jge
dec
mov
add
mov
clc
xchg
push
jle
outsb
and
bound
fisttps
inc
xchg
cmc
ss
call
jbe
clc
jb
es
add
aaa
testb
and
std
shl
mulb
xor
mov
add
jae
les
mov
into
jnp
lds
cmp
sahf
loopne
je
add
jb
add
lea
add
pop
repz
imul
xchg
das
dec
mov
push
aaa
test
dec
out
fistps
int3
add
jecxz
int3
xchg
push
mov
insb
jge
ror
jb
push
fs
aad
inc
mov
push
jmp
mov
cld
mov
movsb
pushf
and
fldl
add
arpl
inc
push
mov
add
hlt
cmc
je
adc
jbe
mov
add
mov
sbb
imul
enter
test
jl
mov
adc
mov
cld
and
fiadds
jno
inc
cmpsl
pop
jmp
test
mov
out
int3
lods
out
das
int3
movsb
mov
test
jo
add
and
mov
cmc
int
daa
in
cmp
adc
xor
lcall
xor
incl
ja
sbb
outsb
jno
jge
fcomi
test
push
jge
adc
bound
jno
std
out
aas
cmpsl
mov
ret
das
mov
popf
daa
mov
popf
pop
mov
inc
jo
jmp
or
and
adcl
xchg
jecxz
out
pop
fcmovu
and
daa
ljmp
push
jge
jmp
ljmp
push
sbb
xor
cwtl
rorb
in
xchg
icebp
jl
cmp
mov
mov
lods
arpl
xchg
call
dec
push
jmp
stos
int3
sub
and
hlt
pop
add
fmulp
mov
imul
mov
in
pop
add
jb
into
mov
insb
pusha
jmp
clc
jb
dec
mov
and
std
hlt
pop
add
jb
iret
mov
xor
jmp
mov
test
cmp
pushf
mov
outsl
mov
or
fistpll
sub
add
pop
adc
mov
push
adc
fwait
add
or
jmp
mov
or
xchg
dec
or
push
fcom
push
adc
fwait
add
pop
push
fistpll
push
dec
das
mov
sub
sub
out
mov
or
shlb
adc
testl
cltd
mov
jne
adc
dec
stc
pushl
test
clc
xchg
mov
cmp
and
push
jmp
in
add
mov
or
jb
out
popf
xchg
sbb
jns
jo
mov
sti
testl
test
test
xorb
push
test
mov
cmp
mov
aaa
insl
gs
js
mov
scas
add
scas
and
lret
jns
and
add
sub
add
bound
adc
ds
mov
cmpsl
jnp
dec
ljmp
daa
sarl
push
cmc
repz
popf
sbbl
in
movsl
fnstcw
daa
imul
popf
vmwrite
add
repz
pop
jg
sbb
add
xor
jae
in
and
cmc
leave
sbb
cmp
mov
mov
fbld
sahf
filds
ret
dec
fwait
jecxz
push
push
mov
and
jmp
mov
pop
mov
inc
sbb
jmp
inc
pusha
pop
icebp
enter
and
mov
cmp
mov
insl
cld
mov
lea
je
lea
loop
mov
fiadds
mov
jae
mov
jae
mov
jb
loop
push
sbb
add
jg
add
fiadds
add
inc
dec
ret
adc
add
mov
add
and
out
dec
popa
ror
call
test
sbb
popl
imul
cmp
out
fnsave
add
out
push
xor
loop
add
and
ffree
or
scas
nop
sbb
mov
fdivrp
adcl
push
push
push
mov
ljmp
into
sub
xor
stc
mov
lds
mov
insb
add
sub
mov
sub
push
jmp
dec
push
add
lods
cld
gs
mov
mov
dec
call
scas
fcoms
xor
xchg
cli
dec
dec
aaa
pop
and
iret
add
daa
xchg
add
lret
cmp
lret
xor
add
jle
pop
lea
inc
lea
jge,pt
or
dec
leave
fistpl
dec
mov
xchg
adc
fs
add
sbb
mov
jecxz
rclb
add
out
inc
pusha
adc
or
call
ljmp
fs
adc
popf
xchg
lea
pop
xchg
add
ljmp
fs
lcall
popf
repz
fisubl
clc
pop
and
fs
in
ja
aaa
add
jae
shrl
adc
mov
and
xchg
clc
lcall
fimuls
mov
pusha
pop
inc
in
hlt
test
add
jno
add
mov
pop
pop
lds
adc
sbb
mov
fildl
jmp
pop
xchg
cmp
lds
xor
jmp
jbe
add
jmp
xor
push
mov
fnstsw
pop
push
add
xchg
stc
mov
das
pop
aad
pop
mov
loop
push
push
das
jge
orl
adc
movsl
clc
mov
out
push
sbb
cli
je
popa
dec
add
and
push
or
movsl
add
jg
cmc
into
pop
out
jl
jge
add
popa
inc
or
loopne,pn
out
stc
mov
xor
stc
jmp
scas
jge
mov
or
pushl
idiv
dec
pop
push
inc
jo
sub
inc
add
lods
je
dec
mov
sbb
rolb
test
adc
cwtl
in
fidivrl
test
xor
inc
dec
sub
rorb
loopne
icebp
cwtl
xor
jl
add
push
mov
or
in
mov
sub
into
aas
je
xlat
jmp
sub
aas
je
int3
sbb
mov
sti
sub
jmp
sub
mov
push
aam
sub
loope
js
or
mov
or
daa
test
mov
mov
sbb
shlb
jno
jno
movsl
daa
pusha
call
lds
mov
test
adc
sub
cli
add
adc
mov
adc
mov
out
in
in
pushf
dec
add
add
cmc
test
test
jo
push
add
add
aad
in
insb
fildl
nop
and
inc
jo
add
pop
jmp
add
cld
inc
jmp
add
add
mov
pop
insl
daa
jmp
in
cld
inc
jmp
mov
cwtl
cld
dec
lods
sti
inc
jmp
push
pop
loope
mov
shr
add
fildl
jmp
je
cmc
into
mov
mov
jmp
xor
in
mov
pusha
add
sub
add
seta
fwait
add
sahf
test
incl
pop
inc
or
stc
adc
shl
decl
sahf
add
jmp
mov
int3
mull
and
jecxz
jne
arpl
arpl
lret
testl
call
and
popa
rorb
cmp
jmp
rorb
mov
or
jo
into
aam
pop
into
xlat
jnp
jb
daa
xchg
xchg
pop
loopne
adc
cmp
loope
shrl
cmp
or
cld
insl
or
or
sub
or
and
adc
push
icebp
lock
cli
int
int3
add
mov
pop
mov
mov
dec
mov
and
add
rcr
cmp
lea
and
mov
jmp
cs
dec
mov
mov
jae
mov
in
pop
xchg
cmp
scas
sub
cmpsb
sub
arpl
mov
jecxz
dec
cmpsb
fucomi
popa
aas
fcmovbe
lcall
std
push
pop
pop
add
fucomi
jo
int3
sbb
shlb
mov
scas
sub
mov
pop
es
stos
pop
arpl
and
xor
jb
cmp
mov
rcrl
jae
int3
fwait
push
jmp
icebp
sbb
or
aas
insl
push
jbe
hlt
xchg
add
cmp
jb
jecxz
mov
push
jae
lods
mov
rcrl
xchg
pop
sbb
add
cmpl
mov
call
push
sidtl
inc
add
fsts
pop
insb
mov
xor
das
and
call
mov
pop
rcll
notl
test
loopne
mov
hlt
out
mov
clc
rclb
ds
jnp
in
fcmovnb
add
mov
or
jge
xor
cld
add
adc
lcall
sbb
jp
fildl
ret
xchg
into
sbb
xchg
xchg
sbb
and
jge
sub
into
sbb
jle
mov
or
jge
jge
icebp
fs
jmp
xlat
into
sbb
sahf
stc
hlt
shl
sbb
add
scas
stc
xor
adc
sbb
adc
adc
sbb
ret
push
out
cmp
fisubl
inc
add
jl
pushl
hlt
test
push
lock
push
mov
std
mov
add
jo
mov
fadds
add
mov
loope
roll
movsl
jns
clc
jge
out
jb
jne
or
es
mov
cmp
cmp
lods
jae
xlat
int3
add
addr16
clc
int3
or
mov
mov
add
lahf
jo
add
inc
mov
orb
and
sbb
dec
mov
adc
pop
lods
bound
adc
mov
mov
or
sub
add
jmp
int
sbb
hlt
in
add
and
dec
in
xchg
mov
sbb
lahf
std
cmc
xchg
add
hlt
hlt
xor
mov
cs
hlt
sub
in
and
xchg
out
dec
mov
jb
push
fistpll
in
mov
cmp
scas
xor
int3
and
out
icebp
hlt
or
es
bound
or
ljmp
adc
jge
add
mov
push
adc
faddl
cmpsl
cmp
fildl
mov
sbb
fildl
xchg
into
add
into
add
jae
add
adc
fsubrs
int
jmp
fstl
clc
or
int
jmp
mov
int
add
int
jmp
outsb
push
stc
call
add
push
stc
incl
pushf
add
pushf
add
dec
filds
add
adc
pushl
pushf
add
add
push
adc
lcall
add
add
filds
add
psubw
insl
loope
add
add
filds
add
aad
add
aam
add
fiadds
add
psubw
pop
aad
add
aaa
add
fiadds
add
aaa
add
or
jo
add
add
in
clc
push
cmc
jo,pt
cmc
jo,pt
add
jo
hlt
clc
outsl
push
fdivrs
jo
fdivrs
jo
add
jo
hlt
clc
dec
push
cmc
jo,pt
cmc
jo,pt
add
jo
hlt
clc
das
add
jo,pt
ds
add
jo
hlt
clc
setle
aas
jo
xor
jo
add
jo
repz
out
mov
repz
jo
add
jo
repz
add
cmpsl
repnz
jo
repz
jo
add
jo
jmp
add
mov
mov
pusha
jmp
por
add
in
jmp
add
in
jmp
add
ljmp
call
ljmp
jl
jmp
add
add
jmp
add
jmp
jmp
add
jmp
add
jmp
add
jmp
jmp
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
add
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
mov
adc
fstpt
cltd
fldt
fstpt
cltd
fistpl
mov
add
add
adc
add
dec
fcomi
adc
clc
adc
in
adc
mov
adc
mov
sbb
mov
adc
adc
fldt
adc
or
sub
sbb
and
jo
add
hlt
add
pusha
hlt
add
hlt
add
pusha
hlt
add
hlt
add
add
hlt
add
xor
cld
addr16
add
jg
add
ja
add
outsl
hlt
add
addr16
add
xor
add
xor
mov
pop
hlt
add
popa
hlt
add
hlt
add
xor
shrb
mov
jg
add
hlt
add
jg
jmp
jmp
add
jmp
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
jmp
add
jmp
add
jmp
add
aam
add
jmp
add
aam
add
jmp
add
pusha
aam
add
add
jmp
add
add
jae
pop
jmp
jae
pop
jmp
jae
pop
jmp
jae
pop
jmp
jae
pop
jmp
jae
pop
jmp
jae
pop
jmp
jae
pop
jmp
jae
adc
jae
adc
jae
adc
jae
push
jmp
jmp
jae
pop
jmp
jae
pop
jmp
jae
pop
jmp
jae
pop
jmp
sbb
lods
push
or
lods
push
or
mov
movsb
push
test
leave
xlat
pushf
push
leave
xlat
mov
push
cwtl
push
leave
xlat
loopne
leave
xlat
aam
cltd
xlat
fmuls
cltd
xlat
int3
push
mov
rorb
mov
les
add
xlat
mov
push
mov
rorl
pop
fbstp
push
dec
filds
mulps
mov
pop
filds
dec
fbld
filds
fists
push
or
inc
push
jo
add
hlt
add
hlt
add
hlt
add
data16
add
hlt
add
jbe
add
hlt
add
jg
add
add
add
hlt
add
xchg
add
hlt
add
jns
add
hlt
add
imul
add
gs
add
jge
add
jne
add
insl
hlt
add
gs
add
jge
add
jne
add
insl
hlt
add
data16
add
hlt
add
ja
jmp
add
shr
add
iret
jmp
add
iret
jmp
add
jmp
add
shr
add
iret
jmp
add
jmp
add
iret
jmp
add
iret
jmp
add
iret
jmp
add
ljmp
xchg
ljmp
enter
into
jmp
add
jmp
add
mov
popl
jmp
jae
or
jae
add
jmp
jae
add
jmp
jae
add
jmp
jae
add
jmp
jae
add
jae
add
jmp
jae
add
jae
add
jae
add
jae
push
jmp
jmp
jae
push
jmp
jae
pop
jmp
dec
fsubl
cmovns
rorb
mov
sbb
mov
or
fdivl
or
fsubrl
or
fdivl
or
fldt
or
or
fcomi
push
leave
push
leave
add
fcmovnbe
push
mov
fimull
cltd
fcmovne
push
cltd
fcmovnbe
push
mov
push
mov
pusha
or
fistl
fistpl
dec
fisttpl
fistl
jo
add
add
hlt
add
add
hlt
add
hlt
add
insb
hlt
add
hlt
add
jl
add
hlt
add
insb
hlt
add
hlt
add
jl
add
hlt
add
add
adc
hlt
add
jl
add
hlt
add
insb
hlt
add
hlt
add
jl
add
jnp
add
imul
hlt
imul
lock
add
jnp
add
imul
in
hlt
add
jnp
add
jnp
add
imul
add
jmp
add
jmp
add
jmp
add
shr
add
shr
add
jmp
add
shr
add
shr
add
shr
add
shr
add
ljmp
hlt
jmp
add
shr
add
shr
add
shr
add
shr
add
shr
add
jmp
add
shr
add
jmp
add
jmp
jmp
jae
add
jmp
jmp
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
add
or
jae
or
mov
fmull
pop
fdiv
or
in
dec
fsubr
or
int3
or
cmp
or
xor
sbb
rorb
sbb
les
or
enter
lods
or
fcomps
or
fsubrs
or
pushf
or
xlat
mov
or
xlat
cwtl
or
xlat
mov
nop
or
xlat
test
add
xlat
mov
leave
xlat
jl
cltd
xlat
orb
xlat
test
mov
in
mov
insb
or
repnz
add
repnz
add
jp
add
push
add
push
add
jp
add
jp
add
push
add
push
add
jle
add
jp
add
push
add
push
add
jp
add
jp
add
push
add
add
add
jp
add
jp
add
push
add
push
add
jp
add
jp
add
push
add
imul
jp
add
jp
add
imul
add
jmp
add
in
add
jmp
add
in
add
jmp
add
jmp
add
xor
jmp
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jmp
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
jmp
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
add
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
cltd
fcompl
or
mov
pop
or
fcoml
cltd
fdiv
or
fsubr
or
inc
or
out
or
repz
out
pop
fsubr
or
fisttps
dec
fsub
or
xor
sbb
or
fmul
or
or
fadd
or
fmul
or
fcompl
or
fmull
or
fcoml
or
fildl
or
fldt
or
leave
or
fistpl
mov
jp
add
js
add
push
add
js
add
js
add
push
add
js
add
js
add
push
add
ret
add
jp
add
push
add
push
add
jp
add
jp
add
push
add
push
add
add
add
jp
add
push
add
push
add
jp
add
jp
add
push
add
push
add
jp
jmp
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
xchg
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
add
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
xchg
leave
fmuls
or
fadds
or
fdivrs
add
fsubrs
cltd
fdivs
cltd
fsubs
mov
push
mov
pop
or
fcoms
mov
pop
or
fcoms
pop
fadds
dec
fmuls
dec
fdivrs
or
inc
or
or
cmp
dec
fsubrs
or
fdivs
or
fsubs
or
fsubrs
or
fcomps
or
fsubs
or
fcoms
or
fcomps
or
add
add
add
jns
add
imul
add
jns
add
jns
add
push
add
js
add
js
add
push
add
js
add
js
add
push
add
js
add
js
add
push
add
js
add
js
add
push
add
mov
add
mov
js
add
push
add
cmpsb
js
add
js
jmp
add
jecxz
add
in
add
in
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
jecxz
add
scas
jecxz
add
jecxz
add
jecxz
add
jmp
add
jmp
add
add
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
or
jae
call
jae
or
jae
call
jae
call
jae
add
add
add
jae
call
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
or
cmpsb
pop
or
pop
add
sbb
push
add
or
dec
add
inc
add
leave
fmull
jle
addb
fdivl
leave
fsubrl
add
mov
sub
cltd
fcompl
cltd
fsubl
mov
push
pop
mov
pop
pop
pop
fmull
pop
fcoml
dec
faddl
dec
fdivr
add
faddl
add
dec
fdivl
pop
dec
fdivrl
pop
jo
add
outsl
add
ja
add
outsl
add
ja
add
add
add
ja
add
outsl
add
ja
add
outsl
add
ja
add
outsl
add
ja
add
outsl
add
ja
add
outsb
add
jbe
add
outsb
add
jbe
add
outsb
add
jbe
add
outsb
add
jbe
add
outsb
add
jbe
add
outsb
add
shlb
add
outsb
add
test
subl
jmp
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
jmp
add
jmp
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
push
aad
add
aad
add
aad
add
xlat
add
jae
cld
call
jae
add
jae
call
jae
call
jae
call
jae
call
jae
call
jae
call
jae
call
jae
call
add
std
call
jae
std
call
jae
call
jae
std
call
jae
call
jae
decl
movb
fnstcw
add
sbb
mov
add
or
cmpsb
add
sbb
sahf
add
or
xchg
add
add
fmuls
add
mov
leave
fadds
add
cltd
fsubrs
mov
jb
mov
add
push
cltd
fcomps
mov
bound
pop
fcomps
jo
add
jne
add
insl
add
jne
add
insl
add
jne
add
insl
add
jne
add
insl
add
add
add
insl
add
jne
add
insl
add
jne
add
insl
add
jne
add
insl
add
jne
add
insl
add
jne
add
insl
add
jne
add
insl
add
je
add
insb
add
je
add
insb
add
je
add
insb
add
je
add
insb
fucomi
add
jmp
add
jmp
jmp
add
loopne
add
loopne
add
loopne
add
fucomip
add
fucomip
add
fucomip
add
fucomip
add
fucomip
add
fucomip
add
fucomip
add
fucomip
add
loopne
add
loopne
add
loopne
add
loopne
add
fucomip
add
fucomip
add
fucomip
add
fucomip
add
fucomip
add
fucomip
add
fucomip
add
fucomip
add
push
fucomip
add
filds
jmp
jae
cld
call
jae
cld
call
jae
cld
call
jae
cld
call
jae
cld
call
jae
cld
call
jae
cld
call
jae
cld
call
jae
cld
call
jae
cld
call
jae
cld
call
add
cld
call
jae
cld
call
jae
add
jae
add
jae
add
cltd
fucom
add
fstp
add
fst
add
fiaddl
dec
add
rolb
pop
ffree
add
pop
add
sbb
dec
fisttpll
add
fstl
add
fldl
add
fnsave
add
fnstsw
add
fldl
add
add
or
sti
add
fucomp
add
fdiv
add
fsub
add
fsubr
add
add
fsub
add
add
add
fmul
add
fadd
add
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
and
adc
enter
cld
pushl
inc
add
add
repz
or
inc
jbe
cld
pushl
aas
sbb
insb
js
push
xor
stc
shlb
clc
je
xchg
or
sub
and
mov
xor
jmp
inc
jne
popl
es
fildl
adc
mov
push
data16
test
fimull
out
nop
out
pop
loope
shll
flds
jo
out
and
push
jae
mov
add
fwait
call
push
and
dec
jb
sbb
add
mov
jmp
scas
fidivs
jbe
cmc
cmc
jb
add
in
popa
or
inc
filds
ret
push
fldenv
aad
push
test
jns
insl
in
cltd
sbb
lods
bound
inc
jecxz
lods
push
in
lret
and
sub
cmp
lret
test
insl
out
sbb
clc
out
aas
daa
jmp
stos
repz
add
mov
jecxz
mov
in
jmp
xor
nop
xchg
in
jmp
lret
jne
xchg
addr16
lcall
adc
and
sbb
fwait
cltd
jae
sbb
add
add
sbb
ds
stc
inc
jp
jne
dec
cltd
jae
xchg
xchg
idivb
dec
flds
call
jge
cmp
mov
int3
rorl
add
sub
inc
sbb
stc
inc
add
jne
push
jae
cs
adc
jge
in
push
mov
idiv
fstps
jge
stos
in
or
decl
insb
pop
mov
repz
dec
sbb
and
mov
xchg
bnd
shl
mov
outsl
decl
insb
lods
mov
repz
in
fcomi
pop
lods
adc
mov
clc
inc
jno
sbb
xorl
add
cmp
pushl
addb
sarb
mov
xor
sub
inc
repz
mov
mov
out
sahf
rcl
xchg
int
push
or
fisttpl
in
int
repnz
jo
stos
xorl
out
and
push
jne
sub
add
out
add
push
push
fsubrs
sub
pop
movsl
and
imul
sub
repz
cmp
sub
sub
jmp
add
push
int3
aam
dec
add
push
mov
add
add
lret
cmpsb
imulb
jae
add
daa
fucomp
jno
fildl
stos
add
gs
push
fiadds
push
sar
mov
jne
mov
out
dec
or
andl
imull
call
rolb
mov
repz
jmp
cmpsb
loope
jl
pusha
cmp
sub
faddp
shr
in
mull
mov
adc
incl
lret
add
fnsave
jne
pop
inc
and
sbb
fstpt
adc
and
sbb
cltd
jae
icebp
outsl
cli
call
sbb
add
adc
jne
jp
jae
and
stc
jmp
adc
orl
ret
negb
in
fildll
adc
orl
ret
sti
incl
es
inc
and
sbb
mov
or
pushl
dec
adc
testl
xor
push
add
mov
clc
xlat
xor
inc
sbb
mov
dec
push
fimuls
clc
cwtl
cmp
clc
lahf
jne
adc
testl
mov
jp
repz
add
lret
clc
add
jbe
jp
inc
sbb
xor
daa
cld
inc
rcr
xchg
cmp
lret
or
jnp
inc
push
jno
pop
jge
fisttpl
add
pop
push
repnz
addr16
cmp
push
and
test
mov
movsl
leave
fdiv
pop
enter
inc
fimull
add
roll
pop
ficompl
in
and
add
add
sbb
test
jge,pt
lea
and
sbb
fistps
fcoml
pusha
idiv
leave
aad
mov
in
cwtl
jecxz
mov
add
rolb
cmp
cld
out
testl
push
add
insb
repz
popa
or
clc
pop
movsl
jmp
ljmp
jmp
sahf
mov
popa
or
mov
fildl
pop
cmc
fdivp
jmp
mov
loopne
stc
hlt
popa
or
js
gs
cmp
imull
hlt
pusha
push
ljmp
insb
mov
mov
push
sub
test
in
jmp
jne
push
jnp
sbb
stc
dec
pop
jnp
add
add
pop
adc
jnp
pop
mov
lods
loope
je
lcall
orl
or
mov
subl
mov
lea
lea
stc
dec
incb
decb
push
mov
aam
testb
and
push
stc
call
ficoml
mov
ret
ret
add
jo
and
adc
mov
das
lret
in
hlt
daa
out
jp
repnz
add
das
leave
clc
rdmsr
cmpl
push
add
dec
leave
clc
divl
cmpl
push
add
push
leave
clc
fbstp
cmpl
push
add
xchg
enter
cmpl
push
add
jle
clc
scas
xor
add
mov
inc
push
inc
sbb
add
xchg
cmpb
push
add
leave
clc
pop
mov
jp
fucomi
push
jb
mov
dec
fsubrl
cmpb
lods
leave
sub
push
outsb
fdivs
or
imul
dec
decb
sahf
int3
vmovhps
xlat
xor
xlat
mov
vxorps
fistl
pop
adc
xchg
add
push
std
in
jno
fcomp
jo
outsb
lds
jecxz
sbb
push
add
fisttpll
js
arpl
pop
fisubl
and
aam
push
in
add
aam
push
in
add
aam
push
in
add
ret
aam
fs
jae
and
hlt
xor
orl
out
add
mov
mov
into
fisubrs
mov
push
jbe
jo
sub
mov
jbe
scas
dec
call
mov
jbe
xchg
dec
adc
shl
pop
lock
or
das
out
shrl
mov
cld
cmpsb
lahf
mov
or
testb
and
fbld
in
divl
push
cld
jbe
mov
add
cmp
adcl
stc
es
je
adc
or
int
jmp
mov
jae
pop
sbb
subps
call
andl
push
xchg
call
lret
push
popf
adc
call
jo
cmpb
cmp
pop
pop
mov
jp
xchg
cmp
dec
and
clc
dec
inc
inc
push
jae
in
sbb
inc
inc
adc
sbb
les
jae
fcmove
notl
lret
jp
das
or
xorl
sti
test
pop
ljmp
mov
clc
repz
add
jno
jl
mov
add
jo
xchg
hlt
lahf
push
mov
cld
jb
fistl
mov
push
xchg
in
adc
pop
jmp
mov
jmp
add
mov
outsb
fsub
mov
fucomi
add
adc
sub
adc
and
rcrl
fs
inc
aam
sarl
stos
mov
pop
xor
jae
fldcw
add
add
or
lds
lock
ljmp
sbb
add
pop
lock
sub
push
xor
call
inc
jp
in
inc
xor
ret
jb
in
add
cwtl
call
push
jmp
rclb
xor
addl
cli
divb
cwtl
subl
clc
add
out
fidivs
pop
jbe
insb
dec
cmp
push
push
jbe
jne
adc
dec
lret
imull
jle
call
stos
in
push
pminsw
call
decl
adc
call
ret
and
lcall
lahf
jl
sbb
and
sbb
inc
and
fiaddl
adc
ja
cmp
jae
add
out
lcall
jl
cmp
mov
pushf
fimuls
add
test
idiv
sbb
inc
and
fucomp
xor
bound
shll
and
out
add
fiaddl
xorl
stc
sarb
add
bound
inc
push
dec
dec
push
lock
loope
std
lds
mov
or
ret
mull
in
imull
les
add
addb
ljmp
add
roll
xor
add
xor
dec
sbb
jge
pop
jae
lcall
sub
xchg
jae
into
pop
jae
push
gs
or
inc
add
add
push
std
mov
jo
cmc
lods
insl
add
movsl
outsb
add
sbb
xor
in
cs
add
push
in
push
pop
xor
jmp
lar
insb
pop
ljmp
shll
push
jmp
loop
push
int3
sbbl
mov
mov
gs
xlat
jmp
push
jae
cltd
rcr
add
push
sbb
imul
rol
bound
testb
je
jl
je
add
jo
subl
sbb
aaa
cmc
sbb
loop
out
sbb
clc
dec
and
in
icebp
out
xchg
jg
add
jae
shr
mov
add
jae
mov
jb
mov
fcomp
out
out
les
pushl
shlb
mov
mov
and
mov
mov
testl
rolb
add
leave
arpl
dec
cmp
les
lcall
mov
decl
adc
add
jp
and
call
fwait
cmp
pop
fiadds
jl
gs
ret
fidivrl
add
jge
addl
divl
xchg
push
mov
and
aaa
lcall
clc
push
xchg
mov
add
jb
jno
stc
call
lcall
jo
mov
out
jg
ja
add
mov
inc
mov
cmp
js
mov
scas
cmp
push
jno
fistpll
std
mov
add
add
xor
clc
mov
sbbl
cmpb
cmp
dec
adc
jo
add
mov
mov
sub
add
lock
mov
add
fsubl
stos
and
into
mov
xor
push
jne
stos
ret
jmp
bound
loopne
inc
mov
push
add
push
sbb
pop
cld
adc
xchg
jmp
in
jno
in
scas
ss
imul
faddl
jno
push
push
pop
dec
or
aad
xor
and
mov
dec
xrelease
fisttpll
mov
js
add
out
enter
jno
cmp
shr
lret
not
cmc
sbb
call
int
ret
jmp
mov
adc
jmp
in
mov
dec
jbe
jo
and
lods
adc
jmp
ljmp
push
in
push
ja
call
int
ds
aam
movsb
pop
into
cmp
add
sbb
xor
cmp
jmp
push
dec
cmp
int3
push
clc
lcall
adc
call
mov
jne
out
jns
mov
fbstp
int3
lcall
or
je
sahf
push
in
or
loopne
stc
xchg
push
or
xor
push
in
je
xchg
clc
ret
and
out
add
pop
inc
sbb
push
adcl
ret
ltr
add
or
cmp
sub
mov
jp
in
dec
repnz
ret
cmp
les
add
mov
mov
sahf
or
test
mov
pop
mov
scas
mov
mov
jmp
jl
mov
sbb
jo
add
xor
clc
mov
popa
pop
inc
in
ja
test
mov
dec
pop
daa
mov
pop
add
mov
mov
ret
mov
repz
jge
fsubr
xor
or
and
cmpsl
hlt
mov
cltd
push
jns
fiaddl
jne
icebp
cmp
int3
stos
addb
fmull
shl
aaa
jb
jns
enter
fmul
cmpsb
mov
push
add
xor
push
test
stos
stos
lahf
aad
xchg
int3
jmp
add
dec
ret
jl
insl
adc
popa
jb
int3
jmp
add
lret
mov
jo
loope
inc
int3
add
jae
add
jae
add
sbb
xchg
mov
jae
add
jae
add
das
iret
testl
jae
add
jae
add
test
idivl
sbb
imul
jae
add
jae
add
into
idivl
push
iret
imul
jae
add
jae
add
mov
testl
iret
imul
jae
add
jae
add
test
add
testl
add
add
dec
mov
add
mov
filds
add
filds
add
hlt
incl
cmp
decl
filds
add
filds
add
flds
add
fiadds
add
fiadds
add
jmp
add
fiadds
add
lods
hlt
call
jmp
add
cltd
fiadds
add
lods
hlt
inc
out
add
inc
cmp
pushl
add
jo
add
jo
sar
inc
mov
addr16
aaa
mov
add
add
jo
sar
pop
insb
push
add
add
jo
add
jo
add
jo
add
jo
add
jo
lret
cld
out
int3
cld
fistpll
int3
cld
xlat
dec
int3
cld
iret
outsl
lret
cld
dec
int3
cld
add
test
cld
scas
mov
mov
cld
xchg
sti
mov
popl
mov
xchg
mov
cld
ja
mov
outsl
fsubl
mov
push
leave
inc
mov
inc
leave
cltd
mov
xor
popa
mov
and
dec
mov
adc
and
mov
cld
enter
hlt
enter
enter
enter
fisttpl
ret
dec
ret
enter
enter
enter
enter
enter
enter
fcmovne
rorl
sarl
mov
mull
div
xor
negl
negl
testl
divl
xor
divl
divl
aad
test
jae
add
and
fildl
mov
xchg
idivl
mull
idivl
divl
testl
inc
negl
and
div
push
testl
push
negl
dec
cmp
incl
cmp
inc
ss
incl
add
ss
ljmp
ss
lcall
cmc
jmp
dec
cmc
ljmp
dec
cmc
decl
dec
cmc
jmp
dec
cmc
jmp
cmc
decl
dec
cmc
decl
aaa
cmc
call
dec
cmc
jmp
dec
cmc
mov
dec
cmc
pushl
cmc
inc
dec
cmc
call
cmc
jmp
cmc
incl
jne
cmc
pushl
jno
jno,pt
xchg
jno
jg
jno
ja
jno
outsl
jb
cld
or
pop
adc
cld
push
and
cld
dec
mov
mov
cld
aaa
mov
das
jp
cld
daa
pushf
ret
cld
pop
insb
ret
cld
pop
jo
cld
invd
int
pop
and
cld
incl
cld
testl
cld
out
aam
fbstp
addr16
iret
fwait
imul
gs
jg
cld
mov
imul
adc
jno
pushf
lds
imul
imul
je
leave
push
lds
pop
lds
push
lds
push
lds
push
lds
push
lds
and
mov
imul
vpunpckhwd
leave
imul
out
insb
in
lret
insb
fadd
subl
mov
int3
les
insb
mov
les
outsl
sbb
divl
adc
divl
add
not
adc
not
or
not
add
imul
fadd
divl
testl
negl
add
imull
not
lret
negl
fwait
mul
mov
test
fwait
negl
jle
mull
xchg
imull
jle
testl
test
pop
testl
testl
arpl
dec
dec
cmc
decl
dec
cmc
jmp
xlat
add
xchg
test
test
hlt
lcall
add
dec
filds
orb
andb
adcb
sbbb
add
xor
gs
hlt
incl
hlt
lcall
filds
add
hlt
ljmp
hlt
decl
hlt
decl
hlt
cmp
call
hlt
lcall
hlt
cmp
pushl
mov
cld
mov
mov
mov
cld
cmpsl
jo
cld
lahf
fs
cld
mov
cld
jg
mov
cld
outsl
adc
cld
addr16
lock
mov
cld
dec
mov
add
mov
cld
das
push
cld
daa
mov
add
sar
pop
sar
mov
cld
pop
jp
cld
lcall
sar
out
lods
sar
or
mov
aam
scas
int3
ror
mov
rcl
lods
sar
movsb
rcll
pushf
roll
mov
jne
test
cmp
shlb
insb
roll
pop
sar
push
rcll
dec
rorl
cmp
leave
shlb
shrb
roll
rcll
sarl
rcrl
shrl
add
mov
ret
lret
ret
add
mov
imul
mov
neg
mov
test
scas
mov
notl
out
mov
imull
mov
testl
mov
divl
xor
idivl
xor
idiv
xor
testl
xor
mov
testl
mov
divl
xor
mov
testl
pop
xchg
hlt
lcall
hlt
push
xchg
hlt
call
cltd
hlt
jmp
hlt
pushl
hlt
dec
xchg
hlt
lcall
pushf
hlt
ljmp
hlt
incl
jnp
hlt
lcall
popf
hlt
pushl
hlt
aas
popf
hlt
ljmp
popf
hlt
ljmp
popf
hlt
ljmp
popf
hlt
call
jle
pushl
jle
dec
lcall
sti
lcall
dec
lcall
jo
ret
cld
jmp
ret
cld
divl
add
int3
cld
fists
int
add
mov
add
sar
mov
and
cld
scas
sbb
cld
cmpsl
adc
cld
lahf
cld
xchg
movsb
sar
pop
sar
xchg
cld
jg
sar
ja
sar
outsl
sbb
cld
addr16
cld
pop
and
cld
push
sub
cld
dec
and
cld
aas
ror
cld
aaa
fcmove
cld
das
fs
daa
nop
sar
pop
outsb
sar
pop
fucomi
add
in
add
jo
hlt
add
out
add
out
jo
jno
in
push
mov
jo
pop
add
pop
jo
lret
mov
mov
cmpsl
mov
mov
flds
jo
jmp
jo
out
add
pop
mov
mov
ljmp
pop
out
jo
aam
jo
leave
mov
mov
call
mov
jo
jg
sub
faddl
jo
add
mov
sub
fildl
mov
and
negl
sarl
addr16
push
ret
mov
mov
testl
sarl
mov
jae
add
enter
mov
mov
mov
notl
pop
mov
testl
jb
bound
jmp
add
inc
xor
arpl
jg
push
outsb
in
jo
loopne
jno
out
std
pop
insb
in
xlat
mov
sbb
fs
pop
sti
inc
imul
fdivs
gs
loopne
gs
clc
jo
xor
popa
push
add
jecxz
jae
call
sub
mov
xor
outsl
push
in
fs
sbb
popa
add
jo
cmp
push
and
arpl
pushf
and
popa
add
cmpsl
xor
lahf
xor
jbe
pop
xchg
or
lea
push
je
pop
and
push
es
pop
les
fidivs
or
insb
pop
sbb
push
and
dec
dec
and
std
ss
sbb
daa
inc
outsb
or
sbb
rclb
adc
sbb
les
ljmp
inc
outsb
fnstenv
push
arpl
mov
imul
fistpl
push
jne
shrl
ds
pop
mov
lret
das
add
fcompl
pop
orl
lahf
dec
test
pop
xor
adc
dec
das
popl
fidivs
and
dec
push
inc
xor
cmp
daa
sbb
cld
or
inc
sbb
and
adc
mov
and
add
xor
dec
push
sub
das
ljmp
sub
inc
inc
jmp
cwtl
das
inc
into
xchg
sub
int3
stos
sbb
pop
cmp
jmp
dec
das
push
mov
pop
or
pop
inc
test
jae
inc
cmp
jae
add
cmp
jge
dec
push
push
fildl
ss
gs
pop
inc
aas
inc
pusha
cmp
cmp
cmp
add
insl
sbb
add
pop
dec
das
pop
cmp
pop
add
dec
incl
loope
gs
outsw
push
pop
fs
add
pop
add
add
das
rcrb
out
jmp
push
popa
fildl
pop
bound
filds
hlt
add
jmp
push
jb
fldt
popa
add
out
add
cmc
add
xchg
filds
add
add
jne
cmp
add
sbb
dec
jo
in
push
jb
arpl
fbstp
gs
or
jecxz
cld
cmp
xor
or
loop
push
ja
les
les
outsb
aad
pop
sub
movsb
les
jno
push
je
mov
or
cmp
jo
pop
add
or
inc
insl
push
or
bound
jo
push
add
push
sbb
push
dec
and
or
pop
and
and
and
add
adc
pop
push
sbb
sbb
pop
aas
ljmp
sub
adc
inc
sub
loopne
adc
sbb
add
and
es
das
ljmp
and
sub
ret
cmp
add
fisubrl
es
test
fs
ljmp
das
mov
das
inc
inc
jp
push
es
sub
dec
adc
fwait
or
add
inc
xor
sub
cmp
inc
cmp
add
sbb
dec
inc
pop
sub
sahf
sub
xchg
inc
data16
das
push
cmc
cmpl
and
push
fisttpl
es
jg
popfw
dec
inc
pop
xchg
inc
sbb
pop
punpckhdq
sbb
aas
cmp
mov
inc
pop
xchg
addl
jmp
cwtl
das
inc
push
xchg
adc
xor
jae
std
cmp
subl
add
ljmp
xor
ljmp
dec
add
jbe
imul
inc
imul
add
arpl
arpl
push
pop
insb
sub
add
jne
add
fildl
pop
fs
icebp
add
enter
ljmp
or
jmp
das
pop
addr16
fs
add
fs
icebp
xlat
fiadds
push
addr16
jmp
jmp
arpl
call
sbb
arpl
and
dec
adc
ret
jno
and
es
dec
push
mov
imul
sub
les
insl
je
pop
je
jecxz
je
xchg
adc
les
dec
jne
adc
adc
les
mov
outsb
popf
fwait
and
push
jo
imul
insb
dec
xor
inc
dec
sub
inc
ss
push
dec
sub
fisttpl
das
aaa
ljmp
cmp
adc
xor
add
fldt
adc
cmp
daa
cmp
sub
cmp
sub
outsl
add
sub
sti
rolb
popf
sbb
adc
daa
fcomp
mov
adc
xor
xor
fisttpl
add
inc
mov
sub
pop
mov
xchg
pop
xchg
cs
fldt
xor
mov
push
inc
jp
dec
aas
jge
das
inc
add
pop
push
inc
pusha
cmp
pusha
inc
aas
inc
dec
ds
push
dec
add
pop
cmp
cmp
adc
add
je
push
xchg
pop
push
nop
pop
push
or
cmpb
add
adc
mov
push
cmp
fnsave
push
andb
mov
mov
mov
push
sbb
add
xor
test
loopne
jb
aad
add
mov
add
pusha
insb
and
pop
insl
xor
rolb
cli
push
fs
fs
out
push
cli
insb
inc
xor
fs
xor
arpl
xlat
out
xchg
cli
insb
inc
jo
fs
jo
fs
fstpt
xchg
fs
in
push
sti
insb
inc
inc
clc
arpl
cli
imul
add
jns
imulb
sub
flds
add
and
add
arpl
dec
push
je
das
inc
push
dec
add
jno
and
and
jo
icebp
cld
imul
push
je
out
inc
arpl
and
insb
add
dec
dec
adc
and
sbb
add
std
inc
aad
dec
imul
clc
push
addr16
or
inc
int
xor
loope
insl
ret
jo
imul
xchg
add
jge
je
insl
pop
jae
lahf
inc
addr16
xchg
dec
pop
xchg
lahf
xor
jo
imulb
fistl
xor
sub
xor
ja
aaa
aas
lods
push
pop
jl,pt
xor
sub
add
adc
xor
adc
and
cmp
pop
jo
xchg
add
cmp
inc
xlat
sub
inc
add
cmp
pop
mov
pop
add
fstps
pop
mov
inc
std
dec
lret
adc
cltd
cmp
pushf
sbb
cmp
xchg
lcall
pop
mov
cmp
push
data16
pop
xchg
sub
data16
daa
pop
jnp
push
data16
sbb
pop
pop
cmp
push
inc
addr16
jl
add
jno
je
bound
bound
jae
jno
dec
sbb
xchg
daa
push
jmp
xchg
daa
inc
adc
cmp
jae
xchg
cmp
aaa
add
sbbl
lret
add
fdiv
outsl
cmp
leave
add
sti
push
jo
lret
add
cld
insb
push
sti
cmc
push
gs
leave
dec
gs
enter
call
imull
fsub
add
data16
mulb
cli
data16
iret
add
fcmovu
inc
gs
push
jb
clc
arpl
and
leave
outsl
add
stos
push
imul
outsw
cmp
iret
add
iret
fiaddl
dec
cld
push
inc
jo
sbb
add
jo
clc
dec
lea
push
mov
sbb
add
add
dec
xor
popa
and
imul
jo
notl
sub
cmp
adc
adc
sub
and
addr16
in
cld
xchg
je
pop
je
or
arpl
push
sub
addr16
cld
or
insl
aad
aaa
jb
stos
pop
add
add
movsl
xor
lret
mov
cmpps
xchg
fldt
add
leave
setae
mov
adc
pop
add
aaa
xchg
aas
aaa
sahf
and
ss
cmp
jle
adc
fsubrl
adc
cmp
pop
sub
push
pop
sbb
ljmp
cmp
xor
mov
xor
pop
mov
aaa
add
fcompl
sub
aas
sub
cs
cmp
test
add
xchg
fs
cmpb
lods
jb
push
outsl
adc
push
pop
or
inc
jno
addr16
cmp
nop
inc
pop
test
xor
pop
jg
fildl
adc
addr16
cmp
add
ds
pop
ss
dec
js
add
aaa
gs
dec
fildl
cmpsl
push
cmp
je
add
jle
bound
mov
insl
xor
pop
fucom
add
data16
add
sub
arpl
rcl
imul
and
into
add
add
loope
gs
jb
add
out
add
push
fs
add
inc
repz
insb
in
arpl
imul
adc
inc
sbb
xor
fdivrl
add
push
jb
cld
dec
lods
in
add
filds
test
je
jo
and
test
cld
inc
aad
xor
loopne
push
test
jbe
pop
cmpsl
imul
xchg
push
dec
lea
emms
jo
cld
inc
push
outsb
cmp
push
and
dec
or
outsb
pop
push
sub
imul
jo
cld
inc
dec
es
arpl
and
and
stos
std
dec
adc
cmp
push
and
adc
add
cld
jnp
lds
push
pop
insl
jecxz
or
add
push
ljmp
inc
or
les
cld
es
xchg
add
aas
iret
sbb
loop
movsl
inc
shlb
inc
fistl
lds
xchg
cmp
add
push
xchg
and
xor
ljmp
xor
sub
ljmp
xor
sub
adc
ljmp
sbb
adc
and
fildl
pop
jb
pop
xor
xchg
sub
push
xchg
cmp
jmp
das
inc
cld
cmp
xorl
jae
add
dec
das
inc
enter
fisttpl
add
jb
pop
aad
aaa
bound
dec
or
pop
jb
pop
mov
lea
blcfill
xchg
addl
mov
or
xchg
pop
jp
push
pusha
dec
fildl
imul
jno
imul
insb
dec
mov
repnz
add
fiadds
jge
pop
outsb
jge
jno
insb
clc
insb
add
sbb
jae
add
pop
fistpll
into
rep
push
adc
insb
gs
fs
sub
push
jae
flds
into
rep
dec
mov
leave
jae
and
bound
fdivs
sbb
push
jb
enter
in
add
mov
int3
push
imul
adc
fbstp
push
pop
or
add
sbb
xlat
in
cld
ret
jb
sub
push
fs
inc
imul
jo
add
sub
xlat
dec
cmp
xchg
xchg
cmp
cltd
pushf
pop
imul
push
xchg
jmp
dec
jnp
pop
push
push
add
std
inc
push
inc
das
imul
push
add
add
pop
sub
jmp
daa
adc
push
or
dec
xor
xor
xor
add
sub
inc
push
aam
pop
add
fcompl
ret
cmp
xor
ds
add
fstpl
sbb
sahf
cmp
sub
cmp
xor
fisttpl
add
sbb
add
cmp
push
ds
add
fsubl
daa
das
daa
test
push
mov
push
stos
es
xor
xor
dec
xor
xchg
add
je
jae
jge
pop
inc
push
fildl
fbstp
push
push
adc
pop
fildl
pop
jb
pop
cmp
jge
cmp
es
daa
dec
sbb
cmp
jmp
mov
push
or
mov
mov
push
xor
int3
jae
add
pop
sub
xchg
xor
add
loope
scas
mov
dec
test
push
xchg
xchg
daa
pop
add
add
ret
hlt
loopne
jae
clc
popa
gs
jo
lret
push
push
mov
fstl
jl
popa
push
push
leave
dec
jne
lret
pop
jo
cld
dec
bound
push
je
add
arpl
xchg
inc
je
rcrl
das
out
add
xchg
inc
gs
gs
push
push
stc
insb
dec
pop
sti
imul
ret
jo
decl
daa
push
xor
push
gs
adc
jo
add
xor
adc
sbb
dec
add
sbb
pop
je
loop
add
incb
int
sub
and
loope
push
mov
adc
sar
outsl
jo
push
arpl
mov
imul
mov
dec
jo
punpckhwd
xor
mov
jno
data16
dec
fisttpl
add
ss
das
dec
sub
test
adc
fildl
sub
xor
add
aaa
aas
adc
xor
lret
push
sarl
pop
mov
cmp
jo
and
mov
push
xor
mov
es
xor
setae
stos
pop
scas
sub
inc
jo
jbe
mov
rolb
int
inc
sub
and
fildl
xlat
jae
popa
mov
outsl
xor
mov
mov
pop
aaa
inc
mov
loopne
test
xor
cmp
sub
cmp
push
pusha
cmp
mov
jae
mov
adc
jnp
pop
xor
xor
pusha
cmp
jae
add
imul
adc
add
jae
add
push
or
add
mov
sub
loope
gs
push
pop
into
add
popa
fadds
loopne
push
push
ffree
jo
adc
cmp
out
in
dec
lret
insb
in
jmp
add
repnz
cmp
das
out
pop
outsb
sub
les
pop
fsts
mov
insb
dec
lods
lds
insl
imulb
flds
add
xor
imulb
jle
in
jp
gs
ret
sub
imul
data16
jnp
bound
adc
mov
imul
adc
mov
push
jno
and
or
imul
je
outsl
add
dec
adc
sbb
adc
sub
stc
std
inc
or
cld
add
in
adc
hlt
adc
loop
addr16
cld
and
sti
push
jo
sahf
aaa
arpl
mov
xchg
jo
and
fcmovnu
and
ss
add
ficompl
push
inc
sub
and
mov
xor
scas
xor
lods
and
ljmp
adc
dec
sub
adc
or
outsb
and
ss
push
inc
push
add
dec
pop
or
es
fnstcw
pop
roll
adc
or
ds
scas
add
add
paddw
insl
pop
or
xchg
and
inc
jo
add
jno
stc
pop
add
jbe
gs
adc
jae
push
movsb
mov
pop
gs
stos
adcl
jb
adc
add
pop
mov
sahf
add
pop
insb
mov
popa
cmp
jae
add
bound
jno
cmp
jno
orb
dec
jnp
add
fdivs
jl
cmp
push
jnp
pop
and
sub
jno
mov
jae
and
mov
fisubrs
add
popa
inc
sub
push
je
shll
in
add
sbb
sbb
cmp
add
in
arpl
in
imul
repnz
fstl
clc
insb
push
add
inc
jne
sbb
je
out
imul
jo
lea
lret
adcb
mov
fistps
xchg
addl
jb
popa
mov
jo
cmc
cmp
out
bnd
mov
iret
push
sahf
loopne
insl
xchg
mov
add
in
bound
call
bound
mov
insl
daa
addb
jno
repnz
inc
pop
stc
data16
ljmp
jno
sbb
fbld
adc
sub
out
or
ljmp
hlt
jmp
insl
fprem
pop
lret
fucomi
add
sub
jmp
mov
pop
add
fstpl
jmp
mov
push
loop
call
shl
cli
mov
pop
lcall
adc
in
push
jg
dec
add
adc
mov
push
jno
cmc
push
or
sbb
fistpl
cmp
or
inc
repnz
inc
in
or
ficomps
add
jae
cmp
push
add
or
sub
cmp
adc
push
and
sbb
cmc
sbb
arpl
add
das
cli
jae
in
jo
loopne
push
enter
subl
mov
mov
stc
jae
mov
or
add
sub
mov
push
bound
bound
add
cwtl
jae
jb
or
arpl
push
fwait
jle
outsl
cmpsl
xchg
bound
mov
call
fidivl
push
insb
mov
add
mov
sbb
lea
or
xchg
bound
pop
add
xor
dec
mov
lea
inc
gs
lea
loopne
idiv
dec
fnstcw
jae
jl
insb
rorb
pop
fs
fs
mov
in
jae
and
imul
push
sar
pop
and
inc
sub
rcl
jmp
int
in
mov
hlt
push
jo
cld
inc
mov
jmp
decl
enter
lds
in
call
test
fdivl
push
call
inc
dec
cmpsb
call
push
jo
add
jbe
ds
pop
rcrl
repnz
jmp
add
std
dec
adc
in
dec
adc
inc
fcompl
pop
lock
or
outsl
xchg
xchg
add
xor
stc
shrb
add
decb
jmp
fidivrl
clc
lea
sub
test
ljmp
sbb
repz
ljmp
sbb
icebp
inc
fcomi
add
bsf
add
test
iret
xchg
or
dec
or
add
setl
sbb
cwtl
lahf
xchg
out
add
ret
add
xchg
dec
sub
cmp
imul
dec
pop
pop
das
push
push
pop
push
insb
add
push
punpckhwd
dec
sbb
or
arpl
sub
push
insb
sub
add
and
or
push
stc
adc
pop
ficompl
mull
fistpl
mov
into
add
rcr
add
jmp
rorb
imul
jb
outsl
jg
add
add
imul
stc
mov
adc
xlat
push
popa
lds
jae
xchg
stos
xchg
push
incl
dec
ficoms
test
fs
outsb
adcl
jge
imul
sahf
idiv
add
push
popa
adc
jp
push
leave
js
push
leave
fldl
push
jmp
push
add
jl
push
jo
out
bound
loop
or
je
dec
pop
inc
roll
dec
pop
out
jo
cld
dec
mov
sbb
arpl
xor
pop
fsubrl
aam
dec
jns
cmp
into
push
leave
data16
push
mov
aad
bound
icebp
jae
icebp
cld
dec
test
enter
sub
add
jo
loopne
bound
out
insb
push
cltd
loopne
scas
add
movsl
in
jbe
inc
fistl
in
imul
add
sahf
loopne
es
sbb
push
jb
jg
lcall
sarl
popf
pop
cmp
mov
cmp
fisubrl
test
inc
add
ficompl
lock
adc
mov
pop
jmp
dec
fistpl
push
or
sbb
xchg
testb
test
and
mov
int3
in
pop
fcmovne
add
sub
ljmp
shl
inc
fildl
shll
xchg
int3
imul
add
jae
stos
popf
cld
popa
jge
sbb
xchg
xor
nop
idivl
into
addr16
mulb
pusha
mulb
dec
or
jae
add
pop
push
addr16
inc
mulb
dec
or
pop
xor
sbb
jp
add
add
or
add
mulb
sbb
pop
and
testl
dec
mull
les
stos
popa
fnstsw
sub
imul
jae
test
idiv
das
xlat
cmp
add
js
gs
gs
jle
add
jae
popf
mov
jae
add
xlat
xor
gs
bound
inc
inc
sbb
jno
push
imul
dec
bound
push
je
fisubl
add
bound
lods
inc
inc
pop
xlat
mov
inc
lods
mov
jo
mov
fnsave
imul
inc
xor
jae
push
std
dec
adc
and
cmp
adc
dec
adc
xlat
inc
xor
jae
pop
in
ret
lcall
incb
sbb
incl
add
into
data16
in
push
mov
lcall
mov
sbb
push
jo
sarl
mov
aad
push
push
neg
repnz
fcmovnu
add
test
mov
out
pop
mov
add
mov
data16
and
ja
mov
add
sub
out
and
jne
int3
pop
ljmp
push
inc
icebp
lret
lock
jmp
add
ljmp
and
jecxz
jmp
rcll
mul
pushf
mulb
add
fildl
push
and
push
add
testl
test
clc
arpl
jae
add
sar
enter
rcl
stc
addr16
nop
pop
bound
mov
mov
pop
xchg
mov
and
jb
addl
jg
stc
addr16
inc
sub
push
punpckldq
jae
add
das
stc
insb
sub
add
enter
add
adc
insl
or
clc
addr16
punpckhbw
aaa
mov
xor
add
jnp
jo
addl
mov
mov
idiv
fcmovnu
xor
insb
push
mov
add
ficoms
add
dec
dec
dec
in
mov
add
lods
jae
sti
test
xor
outsb
add
xor
add
jns
data16
je
mov
outsb
lcall
add
jp
insb
mov
pushf
bound
jbe
imul
imul
add
mov
bnd
xlat
bnd
nop
fsubrl
aaa
sti
fbstp
push
inc
dec
xor
sahf
mov
add
dec
push
insl
inc
xchg
out
add
jo
lcall
push
icebp
jbe
jb
push
jo
fnsave
add
fdivl
loopne
mov
add
int
loop
ret
outsl
movsb
sbb
imul
sbb
xchg
jmp
xchg
clc
pop
push
add
pmaxsw
add
or
loope
fdivr
push
or
iret
mov
repz
mov
call
inc
incl
cmp
or
call
add
ljmp
pop
loop
hlt
sar
sub
cmp
rorb
sub
enter
in
sub
adc
add
or
data16
sbb
adc
pop
add
sub
and
fdiv
data16
out
pop
aad
bnd
inc
jmp
or
enter
cwtl
clc
insl
les
xchg
mov
adcl
jg
adc
jae
test
push
jmp
push
or
push
cli
insb
cmp
dec
or
or
sub
jge
arpl
fistpll
outsb
pop
jle
outsb
insb
addl
lea
js
push
inc
pop
jp
insb
push
gs
bound
push
fs
imul
add
fisttpl
std
mov
jle
gs
mov
inc
gs
lods
gs
add
jns
push
sti
jo
outsb
out
jnp
add
jge
outsb
lods
addl
jae
jo
lock
mov
loope
rclb
fisubs
add
mov
call
jb
loope
inc
xchg
shr
bound
addb
xchg
clc
cmp
rcr
fs
mov
mov
push
add
dec
mov
xor
sub
fsubrp
imul
stc
jo
fidivs
popa
fisubrs
push
out
inc
push
pop
loopne
jg
add
adc
outsl
fnstenv
out
popa
into
pop
in
inc
loop
inc
jmp
mov
pop
leave
leave
push
dec
add
push
push
lds
pushl
add
cli
sbb
xchg
or
lds
xchg
sti
call
out
test
aam
pop
sbb
das
adc
enter
add
fisubrl
fidivrs
inc
loop
add
add
or
add
or
fisttps
pop
stc
jp
or
add
push
test
shrb
pop
dec
push
icebp
jo
jae
std
pop
cmp
arpl
test
push
js
jo
inc
std
add
and
sbb
outsl
jmp
sbb
arpl
add
cli
int
jno
icebp
insb
pop
je
add
data16
cld
data16
xor
ja
pop
aam
repnz
les
jae
xchg
cmc
insb
call
flds
cmpsb
cwtl
pop
aas
andb
imul
add
mov
push
push
popa
mov
filds
add
jnp
push
mov
imul
jp
add
inc
push
push
inc
dec
jne,pn
imul
roll
in
pop
insb
je
push
jb
fidivrs
push
mov
movsb
mov
stos
mov
cmc
mov
mov
idiv
add
fiaddl
arpl
pop
fiadds
jo
shlb
fisubrs
arpl
push
jo
or
pop
loop
int3
sub
arpl
and
push
mov
push
decl
iret
imul
aad
outsl
jl
aad
mov
loopne
lea
fbstp
iret
in
jae
aas
fsub
imul
add
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
jmp
add
icebp
daa
xor
and
xor
call
add
fiadds
jo
push
sbb
fucomi
add
out
add
add
jmp
daa
mov
jmp
add
jo
out
jo
jmp
add
pop
bound
inc
cmp
jo
leave
add
loop
add
jmp
add
jmp
addr16
fcomi
add
add
outsl
fildl
imul
icebp
jae
add
jae
add
jae
add
fildl
jmp
jae
add
add
jle
jmp
jae
add
jnp
inc
jmp
jae
add
fadds
jae
add
jae
add
clc
roll
jae
add
jae
add
aaa
roll
jae
add
jae
add
inc
into
inc
jmp
jae
cmpb
inc
jmp
cltd
fildl
and
fildl
add
add
fildl
mov
dec
sub
cmp
lcall
push
pop
inc
jns
cli
and
jo
jne
cwtl
imul
lea
xor
add
inc
xchg
mov
cmpsb
hlt
ds
popa
adc
fmuls
push
pop
push
scas
mov
imull
push
mov
add
xor
mov
jno
mov
es
lock
fmull
fidivrl
cmc
xor
mov
fidivrs
push
das
rolb
mov
pushf
mov
adc
add
int3
mov
xor
ret
mov
loop
outsl
ss
dec
or
mov
add
pop
test
dec
and
sbb
test
aas
in
popf
cmp
or
sub
aas
push
or
add
sbb
stos
mov
aaa
jl
cwtl
es
dec
repz
movsb
addr16
cmpsb
jbe
out
fildl
testb
lahf
in
push
dec
mov
push
or
mov
movsb
lahf
sbb
cmp
jge
mov
and
and
dec
adc
or
sarl
sbb
inc
mov
aaa
jnp
fdiv
xchg
or
cli
xor
daa
movl
js
push
loop
fcmovb
xor
mov
pcmpeqw
add
and
push
mov
out
or
sbb
or
adc
aaa
dec
or
test
aas
cltd
test
aaa
dec
or
les
and
test
mov
sbb
adc
xor
mov
cmp
sarb
std
decl
jb
push
pop
hlt
cmp
sub
sub
add
adc
out
shlb
cmp
std
mov
andb
mov
jnp
movsl
adc
dec
pop
sub
cmp
sub
fbstp
add
sbb
push
sbb
mov
outsl
xor
int3
pop
mov
jo
pminub
pop
push
insb
aas
xchg
xlat
push
add
add
add
jo
lods
pop
jmp
test
add
add
jo
add
jo
add
jo
add
jo
add
jo
xchg
jo,pt
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
add
add
jo
jmp
add
jmp
add
fucomi
add
jmp
add
fucomi
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
fucomi
add
jmp
add
xchg
jmp
add
jmp
pop
data16
add
jmp
jmp
outsl
mov
add
jae
add
jae
add
mov
add
jae
add
jae
add
jae
add
jae
add
jae
add
jl
add
jae
add
jae
add
jae
add
mov
fildl
jmp
jae
add
jge
add
jae
add
jae
add
jae
add
clc
mov
jmp
jae
add
jae
add
cli
mov
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
leave
fildl
add
fs
add
fildl
add
gs
add
fildl
add
fildl
add
add
pop
fildl
add
arpl
add
add
jo
add
jo
test
jo
add
jo
add
jo
test
jo
add
add
add
jo
test
jo
add
jo
add
jo
mov
jo
add
jo
add
jo
mov
jo
add
jo
add
jo
test
jo
add
jo
add
jo
test
jo
add
jo
add
jo
jo
jmp
add
jmp
inc
sbb
jmp
add
jmp
pop
ds
add
jmp
add
lock
sahf
fucomi
add
jmp
add
adc
jle
jmp
add
jmp
push
pop
fucomi
add
jmp
add
push
push
ds
add
jmp
add
sbbl
sahf
fucomi
add
jmp
jmp
pop
mov
jmp
jae
add
jae
add
mov
jmp
jae
add
jae
add
jae
add
jae
add
jae
add
jp
add
jae
add
jae
add
jae
add
mov
jmp
jae
add
jae
add
jnp
add
add
add
jae
add
jae
add
jae
add
jae
add
jae
add
mov
add
add
pop
fadds
add
add
nop
mov
add
sbb
add
sbb
add
inc
aam
add
fadds
add
fadds
add
fadds
add
fadds
add
xlat
add
add
sti
cs
add
add
add
cmp
aaa
add
xlat
add
cltd
xlat
add
cltd
xlat
add
stos
inc
aaa
add
xlat
add
cltd
xlat
add
pop
inc
aaa
add
filds
add
add
jo
xchg
aas
jo
add
jo
add
jo
add
jo
xchg
aas
jo
add
jo
add
jo
add
jo
cmp
add
add
add
add
jo
xchg
aas
jo
add
jo
add
jo
add
jo
dec
aas
jo
add
jo
add
jo
loope
jo
int3
aas
jo
loopne
jo
int
jo
loopne
jo
loope
jo
loope
jo
xlat
aas
jo
xlat
aas
jo
xlat
aas
jo
test
scas
fistps
fstpt
filds
jg
leave
fbstp
cmc
fildll
in
addr16
fistps
rcr
push
fcmovne
fmuls
leave
fadds
xchg
fdivrs
fistpl
insb
scas
fildl
cmpsl
fcmovnb
jae
fstpt
jae
fcmovnbe
jae
fcmovnbe
jae
fcmovne
jae
jae
frstpm(287
jae
fndisi(8087
jae
fcmovnu
jae
fucomi
jae
jmp
add
add
jae
add
jae
add
arpl
in
jae
add
daa
cmp
push
cmp
pop
ja
stc
pop
outsl
cmp
cmp
xor
sub
jp
ss
test
test
ss
xor
mov
movsl
jp
aaa
stc
jp
aaa
loope
iret
aaa
leave
push
aaa
rcrl
mov
add
fildl
jmp
jae
add
mov
aad
ds
pushf
ds
aam
ds
aad
ds
aad
ds
aad
jge,pt
hlt
ds
aad
aas
sbb
aad
aas
std
aam
aas
pop
aam
aas
pop
aam
aas
lods
aam
aas
mov
aad
aas
popf
aad
aas
in
aam
aas
jge
mov
sbb
sbb
aam
aas
std
aam
aas
fnstcw
lcall
lret
add
popf
lret
adc
jge
and
jge
xor
jo
adc
adc
adc
adc
adc
and
mov
rclb
mov
loopne
in
subb
addb
sbb
loopne
sub
enter
popa
rclb
popa
test
pop
inc
and
inc
test
jl
add
inc
or
mov
or
mov
sub
faddl
call
or
sbb
fildl
push
pop
test
lods
adc
adc
lods
adc
in
dec
push
or
inc
push
adc
dec
push
sbb
and
sub
push
push
test
in
fs
int
mov
or
adc
lods
stos
inc
adc
jl
gs
test
inc
adc
stos
dec
adc
stos
movsl
adc
test
test
test
add
fildll
aad
iret
sub
cmpb
lods
addr16
sub
sub
mov
out
sub
addr16
sub
jg
sub
ja
sub
outsl
das
sub
addr16
sub
jg
sub
ja
sub
outsb
outsl
sub
data16
or
adcl
cs
popa
out
cmp
popa
inc
sub
push
andl
sub
lods
popa
ja
add
in
xor
int
adc
mov
frstor
mov
add
pop
fsub
aaa
xor
fdivr
aaa
cmp
rorb
cmp
adc
rcrb
cmp
and
xor
shlb
cmp
iret
jl
xchg
iret
test
test
iret
xchg
cmp
iret
mov
cmp
iret
enter
into
cmp
push
into
inc
cmp
mov
inc
iret
mov
cmp
sbb
mov
adc
mov
and
sbb
insl
sbb
gs
sbb
pop
into
sbb
sbb
dec
sbb
dec
sbb
sbb
sbb
cmp
andb
sbb
clc
sbb
jge
sbb
cmp
or
dec
pop
mov
push
pop
dec
mov
punpckhbw
sbb
jo
test
movsb
scas
je
jmp
fildl
jo
jmp
adc
fstl
nop
lods
mov
adc
lods
xchg
adc
scas
sbb
scas
lret
or
lcall
sbb
xchg
movsl
xchg
sbb
sub
sub
cmpsb
jmp
pop
fwait
cmpsl
ret
cmpsl
mov
xchg
cmpsl
ja
cmc
cmpsb
pop
sbb
cmpsl
lea
int
mov
pop
pop
cmpsl
pop
outsl
test
push
push
test
pop
inc
test
xacquire
ss
add
push
jg
xor
negl
sbb
aaa
or
xchg
jl
aaa
jmp
jae
add
arpl
mov
cmp
loope
out
scas
pusha
out
xor
xchg
int3
ja
sub
jbe
lret
sub
shll
xchg
shll
das
xchg
jge
cmp
inc
cmp
fs
xlat
jl
cmp
jne
cmp
push
insl
cmp
xlat
into
cmp
nop
fsts
bswap
or
addr16
ds
ret
ds
into
repnz
int
aas
cltd
dec
idiv
icebp
filds
add
iret
fdivl
sub
cli
xor
into
pop
shrl
xor
rcll
int
xchg
xor
iret
lods
xor
sarb
xor
iret
push
xor
shlb
in
jae
cmpsb
sarb
rol
xor
iret
mov
add
iret
shll
fwait
cmp
psubd
or
or
add
cltd
push
push
push
iret
add
mov
jns
add
jp
add
pushf
push
push
push
js
and
adc
inc
xchg
mov
aaa
jb
ljmp
add
jo
adc
mov
fmull
push
std
cmpb
cmpl
and
arpl
popa
arpl
push
andl
adc
jno
fcoml
arpl
and
lcall
sbb
scas
cs
cmp
sbb
mov
mov
mov
push
or
mov
das
push
sahf
mov
movsl
or
push
mov
jae
aam
sub
pop
mov
fmuls
int3
cmpsl
mov
adc
cmpsl
and
sub
xchg
push
clc
cmpsl
add
nop
xor
in
fbstp
bound
js
xor
ss
pusha
shlb
and
aaa
mov
fildl
jmp
jae
add
arpl
xor
add
xor
inc
xor
arpl
loope
fdivs
push
adcb
jmp
pop
adc
fs
xor
pop
xorl
test
xor
add
push
sub
jp
inc
sub
pop
xchg
sub
addr16
sub
xor
cmp
xor
ljmp
aaa
ja
xor
pop
int3
inc
aaa
inc
int3
xchg
add
int3
mov
cmp
nop
cmp
sarb
jb
xor
push
xchg
cmp
rcll
cmp
ja
inc
shr
cmp
lret
jo
and
cmp
lret
sbb
cmp
mov
aad
aas
pop
clc
idiv
mov
add
or
pop
xor
int
xor
adc
xorl
enter
sbb
push
sbb
sub
ss
lods
push
bound
inc
or
push
aas
mov
adc
adc
pcmpeqb
repnz
test
push
mov
cmpsl
push
mov
pop
jnp
daa
pop
sub
inc
pop
and
outsl
dec
test
movsb
dec
mov
or
cmp
adc
test
pushf
add
cltd
fildl
or
movsl
js
frstor
xlat
or
movsl
or
cmpsb
xchg
cltd
cmpsb
cmp
inc
cmpsl
cmp
mov
lahf
rcll
mov
je
mov
mov
push
fbld
add
fcmovnbe
adc
stos
mov
shrb
xchg
data16
pop
push
test
pop
lds
stos
mov
call
cmpsb
or
inc
lahf
stos
psubw
dec
adc
mov
xor
cmp
xor
data16
ja
jmp
int
in
movsl
aaa
movsb
je
aaa
cmp
aaa
repz
jmp
jae
add
arpl
xor
mov
cmp
sub
nop
add
xor
popa
fbstp
inc
popa
and
fisubl
xor
jg
das
jbe
call
jns,pn
inc
cs
shrb
mov
and
cmp
aad
cmp
shll
sbb
dec
cmp
rcrl
pop
shll
fst
outsb
cmp
rcl
cmp
aam
cmp
sbb
or
ja
cmp
out
cmp
fcomps
je
cmp
shll
pop
shl
cmp
rolb
cmp
cltd
rolb
aad
ds
add
xchg
aad
aas
mov
xor
add
jbe
aaa
xor
or
inc
add
in
fimull
ret
mov
xor
or
call
andl
int
mov
psllq
push
add
cmp
adc
adc
adc
lock
cwtl
pushf
dec
pop
into
movsb
mov
arpl
adc
stos
jge
adc
test
sarb
adc
outsb
adc
pop
cwtl
adc
pushw
adc
pop
mov
mov
sub
test
adc
rcll
mov
xchg
or
movsb
xchg
or
movsb
mov
movsl
lds
in
insb
or
in
mov
decb
mov
pusha
push
mov
pop
pop
fsubs
sahf
or
or
jmp
add
fcmovnbe
adc
stos
dec
adc
pop
test
fstl
test
bswap
test
mov
mov
das
andl
cmp
pop
cmp
ret
cmp
push
imul
in
mov
loop
out
ss
imul
and
adc
aaa
lds
aaa
mov
arpl
popf
jae
add
arpl
xor
arpl
xor
test
addl
addl
mov
xor
pop
ljmp
pop
lea
fwait
test
xor
pop
xchg
xor
shll
in
xor
xor
int3
es
std
lret
js
jecxz
mov
cmp
iret
je
iret
into
test
iret
into
enter
jmp
cmp
and
dec
rclb
add
iret
jo
xchg
iret
test
mov
iret
lret
cmp
rcl
cmp
shl
cmp
aad
cmp
sarl
cmp
rcrl
dec
shll
cmp
shlb
cmp
arpl
xchg
aas
jo
in
outsl
dec
pushl
ret
lahf
cmp
jo
adc
inc
adcb
inc
xlat
or
inc
leave
or
inc
les
mov
testl
and
subl
popf
orl
or
pop
bound
adc
xchg
adc
inc
pop
lret
inc
fsts
das
cmp
rolb
lahf
icebp
push
mov
jbe
inc
mov
add
mov
and
mov
repnz
mov
sub
or
or
mov
rorb
add
ja
add
push
xchg
or
push
outsb
or
push
sub
jne
imul
out
push
rolb
into
pop
cwtl
pop
rcll
inc
pop
cmp
push
pop
js
jb
xor
sti
pop
dec
sbb
fistpl
mov
push
clc
sbb
push
jb
add
sbb
add
sbb
add
add
and
mov
aaa
push
bound
js
insb
aaa
insb
insl
js
push
jne
aaa
inc
insl
sbb
mov
insl
fildl
jmp
insb
fildl
add
jl
xor
cmpl
andl
lods
popa
in
or
xor
pusha
xor
jb
cmp
leave
sub
fidivrl
cs
add
cs
test
dec
jle
cs
callw
out
out
ss
out
aaa
cmpsl
out
aaa
and
stc
aaa
cmpsb
in
cmp
out
cmp
lods
cmp
loop
cmp
loop
cmp
loopne
cmp
jp
dec
ds
fisubs
aas
mov
lret
aas
jp
aas
mov
add
pop
cmp
fiadds
add
xor
in
add
cmp
xor
ljmp
stc
call
fdivl
dec
clc
or
movsl
repnz
push
popf
clc
stc
pop
test
jnp
stc
cmpb
xchg
gs
stc
lahf
pop
mov
cli
mov
cmp
inc
jb
cmc
cmp
push
stc
and
ds
dec
cmpsb
and
push
sub
jg
cli
mov
movsb
cli
bnd
cli
and
jg
cli
ja
sar
xchg
pop
enter
or
les
sti
filds
sti
jmp
push
cli
testl
push
cld
or
jle
mov
mov
fsts
sti
cld
sahf
adc
cld
xor
sbb
dec
adc
fistl
pop
cld
notb
mov
add
adc
cld
xchg
adc
std
adc
aas
adc
iret
std
add
js
and
xchg
std
sbb
cmc
inc
adc
adc
ja
sbb
or
inc
adc
incl
pop
mov
nop
pop
push
pop
gs
pop
add
xor
incl
jmp
fidivs
pop
add
inc
xor
xchg
jb
mov
jno
add
add
in
jb
add
mov
mov
xor
imul
test
xor
fbstp
cld
sbbb
data16
fwait
arpl
add
xor
inc
loope
aam
divl
cmpsl
inc
bound
push
cmp
xor
add
enter
push
stos
xor
push
pop
xor
into
dec
inc
xor
adc
xor
imul
test
ss
push
xchg
aaa
push
xorl
pop
push
insb
cmp
pop
add
popf
push
adc
mov
daa
cmp
pop
dec
cmp
cmp
push
xchg
cmp
push
mov
cmp
pop
ret
popf
push
idivb
pop
push
and
push
test
jns
sbb
in
push
pop
cmp
pop
sahf
imulb
dec
in
imul
inc
push
cmc
add
outsl
idiv
scas
push
testb
divl
cmpsb
idivl
enter
scas
notl
ja
cmp
loop
pushl
repz
repz
and
and
inc
es
inc
ret
in
xchg
inc
jg
fisubl
fdiv
cmp
mov
insb
repnz
subl
sbb
gs
repnz
or
repnz
setl
xchg
pop
add
add
adc
icebp
add
jmp
add
and
push
or
repnz
xor
add
push
sbb
and
adc
sbb
or
adc
adc
sbb
sbb
and
adc
sbb
insb
clc
icebp
or
pop
clc
loope
push
clc
xchg
clc
sbb
pushf
clc
and
xchg
clc
sbb
sub
xor
xor
cmp
add
cmp
sub
adc
inc
sub
adc
push
sub
repz
in
fildl
add
hlt
cs
cld
cs
add
sbb
or
adc
adc
sub
pushf
xor
lods
adc
mov
add
aaa
das
and
cmp
js
cmp
ja
xor
jmp
mov
aaa
jmp
test
dec
and
pop
inc
cld
xor
call
dec
xor
into
dec
xor
dec
ja
dec
xor
dec
mov
pop
dec
fidivl
int
cmp
xor
dec
shll
dec
out
xor
inc
sub
jl
cmpsb
lods
inc
lock
inc
adc
jbe
inc
aaa
fs
popa
aaa
or
aaa
xor
aaa
movb
in
aam
add
dec
xchg
add
push
sarb
jo
stc
scas
xchg
and
dec
mov
cmc
xor
adc
pushl
inc
jae
das
aaa
add
jo
repz
pusha
repz
icebp
mov
pop
cmp
daa
in
aaa
aas
in
inc
test
hlt
fwait
test
cmc
adc
add
pusha
lcall
popf
test
inc
mov
cld
pushl
in
filds
popa
pop
in
popf
bound
out
pushf
inc
push
lock
add
xchg
inc
jae
sub
dec
repnz
cmpsl
sti
enter
sbb
push
cld
nop
adc
notl
dec
adc
out
adc
jmp
push
cltd
clc
push
adc
cli
adc
fisttpl
ljmp
fistpl
repz
test
add
or
clc
or
divb
pop
or
sbb
jae
pop
or
repnz
aam
xor
adc
cld
push
adc
std
lret
adc
mov
insl
lods
cmp
cmp
pop
iret
cmp
test
imul
dec
xchg
xor
mov
cmp
jmp
jae
add
add
xor
cld
push
xor
add
push
xor
xor
fiadds
out
mov
xor
rcrb
shrb
rorb
and
xor
icebp
mov
cmp
rolb
dec
pusha
aaa
jg
test
cs
jmp
fisttpll
jb
push
add
cmp
bound
cmp
push
and
ss
cmc
cmp
dec
imul
inc
lods
cmp
adc
in
in
or
idiv
push
xlat
add
xor
inc
outsl
xor
inc
jle
inc
dec
mov
xor
dec
xor
mov
xor
dec
enter
fdivl
jo
in
es
sub
cmp
inc
or
push
inc
loop
jp
mov
xchg
mov
fs
mov
mov
dec
in
pop
sbb
cmp
shr
mov
add
lds
in
add
inc
pop
pop
lock
jbe
cmp
or
pop
cli
cmp
test
sub
cld
cltd
or
push
lcall
pop
test
clc
inc
add
or
out
xchg
outsb
push
out
in
notb
shl
push
or
idivl
or
sbb
not
or
notl
dec
jmp
add
fucomi
repz
mov
hlt
pop
or
cmc
rorb
dec
cmc
sub
in
mov
div
popa
or
repnz
lods
repnz
or
add
pop
add
mov
dec
lock
push
test
add
mov
mov
mov
lods
push
mov
mov
repnz
fbld
stos
sub
cwtl
orb
mov
scas
imul
xor
sti
pop
inc
cmp
pop
out
pop
inc
ljmp
inc
xor
negl
icebp
and
xor
push
xor
sbb
xor
xor
add
cs
add
movsb
jnp,pn
xor
jecxz
hlt
das
and
lcall
int3
cmp
icebp
inc
sbb
cmp
inc
mov
cmp
push
lret
ds
call
add
cwtl
dec
jecxz
jecxz
adc
aas
dec
bound
add
dec
mov
xor
dec
cmpsl
xor
cmp
xor
sti
inc
dec
cmp
inc
leave
cmp
or
push
out
cmp
push
jg
jl
icebp
aas
or
stc
fldl
add
xor
dec
lods
xor
and
jo
repnz
add
icebp
fldenv
icebp
adc
dec
lock
add
icebp
gs
lock
inc
pop
lock
out
cmp
out
movsb
mov
nop
pushf
xchg
out
movsb
cmc
out
pushf
xchg
out
test
adc
in
aaa
test
push
jge
out
gs
pop
ret
gs
fistpl
out
inc
sbb
ss
pop
inc
jno
cmpl
push
out
sahf
fsub
repz
fildl
sti
add
push
sti
mov
adc
in
mov
sbb
sbb
add
sub
push
in
sti
add
les
fsubrp
dec
add
in
repnz
in
pusha
add
add
incl
out
pop
add
sbb
std
add
lock
std
or
repnz
or
repz
dec
jmp
add
jo
sahf
repz
or
hlt
loope
cmp
fimull
add
fsubrl
xor
in
xor
fisubrs
xor
xor
mov
and
iret
popf
std
xor
cmpsl
outsb
xor
xchg
sub
mov
jne,pn
sbb
das
push
imul
bound
das
dec
pop
subl
cmp
das
pop
add
das
ljmp
cmp
sbb
cmp
or
cmp
sbb
inc
or
add
xor
cmp
jmp
cmp
xor
cmp
xor
cmp
and
cmp
push
cmp
insl
cmp
xor
sbb
lea
cmp
cmpsl
cmp
xor
sarl
dec
es
dec
push
aas
jbe
imul
rorb
dec
xchg
aas
testb
xchg
mov
in
aas
sbb
cmc
decl
dec
or
xor
repz
inc
addr16
inc
xor
mov
imul
lret
mov
ljmp
xorl
pop
repnz
out
xchg
in
mov
fldln2
and
out
jb
mov
jge
lods
out
movsl
outsb
out
negb
loop
stos
lahf
mov
mov
mov
jmp
jns
in
jp
in
push
in
imul
pop
stos
in
pop
xor
xor
add
lcall
or
out
add
pop
mov
aaa
push
mov
cmp
insl
out
lock
mov
sysret
jecxz
add
push
add
dec
out
sub
mov
jo
sbb
out
or
icebp
dec
or
fs
repnz
or
outsl
rdmsr
clc
jae
push
stc
jae
or
testb
xor
in
mov
add
lock
push
add
mov
int3
add
decb
xchg
aaa
jmp
je
add
add
aaa
xor
loope
xor
loop
xor
xchg
mov
and
fld
in
xor
ret
stos
xor
and
cmc
cmpsl
dec
sub
popf
xchg
cmp
pop
cmp
pushf
call
cmp
mov
stos
pop
sub
mov
xor
add
xor
pusha
jnp
inc
inc
aad
sbb
arpl
cmp
add
adc
aam
addr16
fidivs
lea
dec
xor
aas
push
xor
lcall
pop
cmc
lcall
add
adc
xor
dec
cmpsl
xor
inc
add
xor
dec
push
xor
dec
xorl
adc
xor
dec
push
xor
xor
dec
jp
add
jecxz
in
outsl
xor
inc
mov
xor
inc
out
pop
dec
pop
xor
jbe
xorb
dec
fdivs
jo
in
jle,pn
in
dec
data16
push
mov
mov
pop
popf
out
testb
cs
and
push
inc
popa
in
cmpb
in
mov
lahf
dec
jmp
cwtl
pop
jmp
cwtl
dec
jmp
add
jnp
fnstcw
jmp
js
jmp
imul
jmp
pop
fucomip
pop
pop
cltd
jmp
dec
movsb
ljmp
stc
ljmp
adc
into
movsb
jp
sbb
out
out
fcomi
in
ja
add
pop
add
out
xchg
adc
xor
sub
in
aas
add
xchg
adc
add
or
repz
rep
or
repnz
mov
repnz
imul
push
in
orl
jmp
add
fisttpl
aas
or
repz
or
inc
add
in
adc
push
in
add
in
sub
push
call
pushf
add
jmp
jae
add
add
xor
daa
jmp
cs
ss
xchg
add
cmp
inc
imul
mov
test
xor
add
sub
sub
vpmaxsw
sbb
notl
jne
add
and
push
cmpsb
xor
cmpsl
pop
xor
sahf
imulb
cmpb
in
adcb
add
sub
or
and
cmp
bound
cmp
xorb
fidivl
inc
cmp
cli
xor
loop
pop
cmp
loop
push
cmp
pop
xor
cmp
and
cwtl
cmp
loop
test
fidivl
mov
add
aaa
mov
cmp
cli
sarb
cli
ss
loop
call
lock
imul
add
and
adc
shr
and
ljmp
popa
ljmp
icebp
ljmp
loope
rolb
ljmp
fldl2e
call
add
xor
add
and
adc
shr
and
jmp
xor
jmp
inc
push
stc
jmp
push
inc
fildl
sbb
or
ja
jmp
add
icebp
repz
or
icebp
loopne
pop
icebp
and
mov
push
push
push
icebp
and
gs
icebp
add
aam
pop
out
inc
loopne
sub
xor
adc
pop
cmp
xchg
add
div
mov
aaa
repz
cltd
cmc
adc
and
orl
pop
out
roll
into
lock
lock
adc
dec
push
imul
add
add
pushf
push
cmp
xchg
adc
les
and
xor
dec
in
xor
push
add
xor
pop
movsl
xor
ss
inc
xor
push
push
ja
scas
push
insb
aaa
sbb
and
negl
fildl
clc
add
xor
fsubrl
sub
xor
les
xor
les
xor
movsb
jmp
dec
mov
dec
loopne
mov
dec
dec
jns
or
push
xor
dec
mov
mov
sbb
inc
dec
pop
ss
test
push
dec
aas
aaa
scas
dec
stos
aaa
cmovp
aaa
rorb
aaa
pop
inc
pop
cmp
inc
lods
cmp
inc
sarl
inc
cmp
cmp
jecxz
mov
jmp
cmp
cmp
inc
or
call
inc
pop
cmp
xor
add
dec
cmp
mov
cmp
jmp
imul
jmp
dec
icebp
jmp
dec
mov
jmp
cmp
jmp
test
popf
jmp
cltd
jg
lds
dec
jmp
jns
jmp
jns
jmp
imul
jmp
adc
dec
fucomi
sub
cmp
jmp
dec
stos
jae
push
lcall
mov
jae
stos
jmp
jmp
std
hlt
jbe
or
mov
shl
xchg
jmp
jmp
test
hlt
mov
dec
testb
popa
testb
jne
fsubr
popa
hlt
mov
jmp
jmp
mov
mov
mov
hlt
mov
repnz
call
mov
cmc
call
out
notl
out
mulb
push
testl
mov
repnz
xchg
pushf
aaa
ds
pop
aaa
xchg
aaa
testl
shll
bound
xor
inc
insb
xor
inc
mov
xor
inc
xor
push
cmc
xor
daa
mov
xor
inc
xor
jne
subl
out
sub
dec
sub
fildll
aad
or
or
xor
sub
movsb
lret
mov
shll
testl
mov
add
jp
or
mov
adc
rcll
cmp
cmpsb
cmp
lcall
filds
add
jno
cmp
sbb
mov
sbb
cmp
sbb
cmp
sbb
cmp
iret
cmp
xlat
cmp
sbb
cmp
out
cmp
dec
dec
add
inc
ret
cld
iret
adc
add
int3
mov
mov
mov
scas
add
pushl
int
bound
int
inc
or
jmp
inc
outsb
iret
dec
ds
sahf
cmpsb
pop
sahf
psubusb
fld
lahf
pop
frndint
xchg
cmp
rcl
push
js
das
inc
mov
pushl
int
add
js
xchg
ficoml
aas
call
frndint
xor
hlt
ficoms
xor
cltd
add
leave
rcll
ljmp
sub
dec
aad
ljmp
lret
jmp
lahf
aam
jmp
iret
xlat
push
out
out
xlat
sub
out
or
add
dec
xlat
or
push
xlat
sub
mov
add
adc
out
mov
jle
adc
out
dec
test
faddp
imulb
fisubrs
divl
fidivrs
aaa
testl
ret
lock
xor
fnstsw
mov
das
cmp
cmp
dec
lret
pop
lret
add
mov
cwtl
cmp
stos
cmpsb
cmp
add
ret
fwait
mov
insb
dec
popa
cmp
cmp
cmp
sub
cmp
push
js
mov
adc
ss
mov
add
dec
aas
jmp
adc
jnp
pop
adc
aas
imul
aas
cmp
aas
cltd
adc
aas
imul
jmp
mov
cmpsl
hlt
incl
pop
or
cltd
pop
sbb
jns
sub
mov
cmp
dec
cmovnp
pop
cvtdq2ps
jns
imul
pop
idiv
dec
push
jmp
lsl
sbb
cmovg
cmp
or
ret
xor
shl
arpl
iret
and
iret
inc
inc
push
iret
arpl
cmp
iret
andl
ret
movsb
lock
jecxz
enter
adc
and
fadds
push
fsubs
test
andl
mov
gs
jecxz
or
add
int
ds
inc
inc
ror
arpl
call
into
mov
cmpsb
jo
jecxz
dec
into
add
push
int
jg
int
add
leave
aam
ljmp
mov
ljmp
jmp
pop
aad
jmp
dec
aad
ljmp
and
push
aad
ljmp
stos
jmp
adc
lret
jmp
rcl
mov
jmp
add
jmp
add
jmp
add
jmp
jmp
add
jmp
add
jmp
jmp
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
add
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
pop
faddl
add
add
dec
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
fildl
add
fildl
add
fildl
add
leave
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
fildl
add
add
pop
fildl
add
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
add
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
jmp
add
jmp
add
jo
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
jmp
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
add
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
mov
add
mov
add
pop
fadds
add
add
dec
fadds
add
add
pop
fadds
add
add
dec
fadds
add
add
sbb
add
sbb
add
or
add
or
add
sbb
add
sbb
add
or
add
or
add
add
xlat
add
add
leave
xlat
add
leave
xlat
add
add
add
leave
xlat
add
leave
xlat
add
cltd
xlat
add
cltd
xlat
add
mov
add
mov
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
add
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
jmp
add
jmp
add
jmp
add
jmp
add
jo
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jae
add
jae
add
add
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
add
add
jae
add
jae
add
leave
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
add
pop
faddl
add
add
dec
faddl
add
add
pop
faddl
add
add
dec
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
sbb
add
or
add
or
add
add
add
leave
fildl
add
fildl
add
fildl
add
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
add
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jo
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
add
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
add
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
add
pop
fadds
add
add
dec
fadds
add
add
pop
fadds
add
add
dec
fadds
add
fadds
add
fadds
add
or
add
or
add
sbb
add
sbb
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
add
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jo
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
add
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
sbb
add
or
add
or
add
sbb
add
sbb
add
add
fldl
add
fldl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
add
pop
faddl
add
add
dec
faddl
add
add
pop
faddl
add
add
add
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
add
add
jo
add
jo
add
jo
add
jo
add
jo
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jo
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
add
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
dec
flds
add
add
pop
flds
add
add
dec
flds
add
add
sbb
add
sbb
add
or
add
add
flds
add
flds
add
flds
add
flds
add
flds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
add
jo
add
jo
add
jo
add
add
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
add
add
jo
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jo
jmp
add
jmp
add
jmp
add
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
add
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
jae
add
mov
add
cltd
fldl
add
fldl
add
fldl
add
add
dec
fldl
add
add
pop
fldl
add
add
dec
fldl
add
add
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
faddl
add
repz
fstps
inc
repz
inc
pop
sub
shll
mov
pop
int
or
or
jecxz
data16
adc
outsl
xchg
inc
mov
pop
push
data16
out
sub
push
jae
cld
lcall
arpl
push
fdivl
shr
cmp
cld
jl
repnz
pop
mov
pushf
lea
jle
imul
out
data16
cltd
arpl
jae
and
or
arpl
ss
pop
int
push
add
fistps
mov
inc
lods
insl
xor
jl
pushf
cmp
pop
addr16
xchg
enter
adc
ljmp
movsb
jno
inc
js
cmc
enter
clc
add
dec
xchg
or
mov
fistpll
dec
xlat
lcall
mov
decb
jo
psadbw
push
jo
imul
jge
call
adc
dec
out
add
repz
pop
mov
adc
jae
fcmovnu
sub
mov
cmpsl
bound
push
arpl
add
outsl
and
out
call
loope
orb
adc
aas
push
pushf
pop
rclb
std
push
xor
mov
and
out
sub
mov
pop
insl
add
arpl
sbb
out
mov
pusha
nop
or
jne
pop
pop
pop
pop
arpl
movsb
pop
sahf
add
outsl
or
and
pop
stc
in
sub
pop
mov
push
sarl
int3
xlat
xchg
jl
or
pop
je,pn
add
adc
aam
mov
daa
adc
adc
inc
das
pop
cmp
xorl
jbe
jge
inc
ss
test
fcoms
jns
push
aas
push
imul
insb
or
loopne
fsubs
cmpsl
enter
jo
xlat
iret
xchg
aam
in
mov
adc
add
and
cld
rclb
sbb
loop
outsl
das
daa
int3
movsb
daa
int3
and
sahf
or
jmp
push
ret
lds
push
mov
pusha
jno
jmp
add
testl
mov
aaa
imul
jmp
mov
mov
pusha
in
adc
mov
bound
mov
add
bound
jmp
fmull
js
inc
clc
sti
lods
clc
mov
mov
bound
mov
add
bound
jmp
clc
mov
testl
cld
mov
in
add
add
jns
dec
hlt
repz
mov
addr16
hlt
mov
dec
lock
add
fs
lods
jae
add
rcr
add
pop
add
xor
mov
jecxz
or
inc
fs
in
sti
test
mov
fistpll
dec
rcrb
jmp
iret
rorb
pop
int3
lods
pop
int3
movsb
pop
int3
and
repz
mov
stos
call
xorl
test
add
fiadds
sti
lahf
call
push
lods
push
jo
add
fiadds
pop
call
mov
sbb
add
in
push
in
pop
ret
cmpsl
hlt
sbbl
jae
cmp
fidivrs
jae
add
cmpsl
call
push
xor
mov
arpl
mov
call
mov
sub
push
int3
lods
push
int3
movsb
push
int3
lds
push
ljmp
xor
sahf
or
stc
mov
int3
sub
int3
and
int3
lds
lods
fists
lods
jecxz
jge
push
inc
jo
ret
int3
xor
int3
sub
int3
and
int3
inc
fs
aam
push
dec
fldt
jae
add
arpl
inc
jo
cmp
inc
jo
cmp
jmp
bound
adc
cmpsb
add
sti
xchg
or
cmpsb
hlt
mov
fs
das
xchg
hlt
add
add
imul
lods
jnp
adc
lock
fmull
ja
add
adc
scas
adc
insb
pop
enter
jo
cld
ljmp
ret
int3
mov
int3
lods
push
int3
movsb
push
int3
add
fildl
add
mov
or
int3
mov
int3
lods
push
int3
movsb
push
int3
and
ljmp
jo
jl
jo
add
je
ljmp
arpl
mov
faddl
add
or
jno
inc
cld
jmp
hlt
cmp
sti
cwtl
hlt
mov
pushf
sar
pop
cli
add
mov
bound
addr16
or
icebp
stc
testb
fisttpl
or
mov
dec
clc
sti
xlat
adc
xor
bound
jae
mov
fs
or
bound
mov
push
testl
push
mov
inc
add
cmp
mov
testl
call
call
fs
lock
lock
sti
add
mov
fimull
stc
cmpsl
loopne
xor
fildl
test
fiaddl
add
push
jmp
loopne
sbb
test
cmp
jmp
sti
cmpb
xchg
mov
ficoml
mov
sbb
popa
inc
or
adc
jmp
loopne
mov
add
bound
mov
cmpsb
in
lods
adc
add
mov
pop
js
jo
pop
mov
xchg
lods
adc
add
mov
pop
cmp
fs
inc
fsubl
adc
xchg
and
or
incl
das
stos
mov
stos
call
subl
mov
sahf
or
sti
xchg
hlt
push
pop
fs
lcall
mov
mov
bound
mov
bound
xorl
mov
add
ret
dec
loopne
lcall
pop
xor
int3
inc
pusha
in
add
loop
lock
add
jge
push
inc
jo
cmp
inc
jo
cmp
std
scas
or
cld
jmp
adc
movsl
add
sti
xchg
or
movsl
hlt
mov
push
int3
lds
mov
fsubrl
jge
or
add
pop
mov
test
int3
and
int3
lds
adcl
loopne
xchg
leave
ds
fwait
xor
jmp
add
and
hlt
sti
mov
mov
push
dec
clc
jmp
fildl
add
sbb
mov
add
mov
push
push
sbb
or
push
cmp
mov
out
push
js
cmp
mov
pop
jecxz
dec
pop
push
adc
inc
dec
cmp
rorb
mov
sbb
int3
xor
int3
sub
int3
and
int3
movsl
push
in
adc
mov
add
cld
add
push
enter
xlat
pop
mov
push
push
inc
clc
and
lods
pop
lahf
add
jo
dec
hlt
sarl
push
inc
jo
xor
add
std
loope
add
add
or
add
add
test
add
faddl
sti
out
pushf
push
lods
fildl
add
or
add
fildl
mov
push
inc
jo
enter
push
inc
jo
or
push
adc
inc
jo
mov
stos
call
addl
xlat
mov
jae
or
cwtl
or
mov
pop
int3
and
sarl
inc
insb
mov
mov
fmull
int3
sub
int3
and
int3
movsl
push
in
push
mov
inc
cmp
inc
add
push
cmp
mov
fcoml
jmp
sti
push
mov
out
mov
adc
or
cmp
aas
jo
add
push
enter
iret
pop
mov
push
jae
xor
push
push
or
jmp
sti
mov
stos
mov
stos
mov
lods
call
xorl
inc
pop
faddl
add
or
jno
cmp
sysret
lods
cmp
popf
pop
sti
mov
add
inc
call
test
mov
push
inc
adc
cwtl
loopne
mov
push
mov
lret
popa
mov
cmpsl
inc
mov
inc
or
or
jmp
call
inc
je
call
subl
sub
cwtl
call
in
repz
add
jae
add
push
pop
push
cli
incl
mov
xorl
inc
jo
insl
or
xlat
rclb
fistl
mov
in
cmp
jo
adc
mov
add
jo
mov
test
inc
rclb
xor
push
dec
lock
push
inc
jo
or
xor
xor
mov
test
add
int3
in
cmp
repz
pushf
push
sub
add
jno
push
jmp
hlt
push
or
notl
cmp
push
push
inc
fsubr
scas
fmuls
test
loopne
xchg
loopne
mov
decl
jne
push
inc
jo
call
xorl
push
adc
movsb
jo
add
jl
mov
push
inc
fdivs
mov
mov
push
dec
loopne
inc
push
inc
jo
inc
xor
xor
inc
jo
add
push
sti
out
pushf
push
xor
push
mov
add
push
pop
add
sub
in
cmp
jae
sub
jo
xor
add
mov
movsb
pop
lahf
add
aad
push
lods
fistl
test
push
inc
jo
call
addl
xlat
mov
push
sbb
add
jnp
xor
fwait
add
jo
call
xorl
movsb
data16
add
popf
loopne
jge
push
inc
jo
dec
sub
or
push
cwtl
scas
hlt
incl
sbb
inc
jo
and
lea
jne
mov
gs
or
push
and
loope
aaa
add
mov
pinsrw
adc
int3
movsl
push
in
lods
rorl
int3
and
int3
inc
push
in
ds
mov
jmp
mov
xor
mov
pop
mov
int3
inc
push
in
sbb
les
sub
push
call
add
pop
or
push
out
push
lods
fistl
in
push
int3
movsl
push
in
push
mov
inc
cmp
add
jo
cmp
add
cwtl
in
add
add
lods
pushl
mov
add
inc
or
iret
rclb
fucomi
test
mov
cmp
lea
testl
insl
adc
inc
add
add
jo
or
jne
push
inc
jo
add
jo
xor
add
call
add
repz
add
jne
incl
cmp
push
mov
mov
jmp
sbb
inc
jo
cmp
mov
push
add
push
jmp
nop
push
add
add
insl
pop
push
inc
jo
cld
aas
jo
pusha
add
fisttpl
add
repz
add
push
sub
notl
shl
or
push
sub
push
call
repz
cld
mov
stos
call
subl
les
add
jo
mov
call
push
push
add
lods
or
cld
dec
cmpsb
lock
push
cmp
fsubl
incl
push
xor
mov
and
aam
sub
add
stos
mov
jae
hlt
push
cwtl
daa
stc
lcall
movsl
in
add
push
dec
in
xchg
hlt
add
push
inc
loopne
fwait
rcl
push
mov
mov
repz
mov
add
jo
jmp
jmp
clc
xorl
mov
push
cmp
jae
push
add
add
test
mov
jae
clc
mov
sbb
add
mov
jae
clc
xor
mov
inc
mov
push
and
mov
pop
dec
push
inc
jo
leave
mov
push
inc
jo
leave
mov
push
inc
jo
inc
imull
test
jmp
fiaddl
icebp
repz
jo
mov
mov
mov
push
inc
jo
mov
call
repz
cld
mov
push
inc
jo
call
test
mov
xor
inc
push
inc
jo
mov
enter
add
pushf
push
xor
mov
call
mov
or
xor
push
int3
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
add
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
icebp
lahf
fidivrs
adc
sub
push
imul
sub
xor
mov
in
adc
mov
inc
jae
lock
sub
cmpsb
fdiv
out
mov
push
push
add
add
push
ds
ss
cmp
adcb
jae
insl
xchg
jg
iret
je
fwait
dec
mov
lcall
xchg
leave
push
sub
int3
and
fists
lea
mov
xor
cs
insl
arpl
mov
stc
xchg
pop
mov
add
mov
imull
cmpsl
add
xor
dec
subb
adc
stos
inc
addr16
jp
mov
xchg
mov
arpl
test
cs
xor
push
sti
sub
push
subl
push
jp
shlb
ss
clc
add
das
pop
cmp
xchg
sbb
add
inc
ud1
das
mov
mov
jne
outsb
jo
in
bound
jnp
pop
stos
cli
pushf
imul
add
adc
jnp
cltd
fxch
jmp
nop
pop
add
inc
in
sub
lret
push
and
mov
xor
pop
mov
arpl
push
xor
pop
dec
or
or
pop
mov
arpl
hlt
mov
enter
cli
mov
xor
mov
push
popf
dec
pop
stc
dec
mov
pop
das
push
dec
pusha
inc
int3
cmp
pop
cmpsl
xchg
ret
imull
mov
bound
adc
aam
jae
test
xorl
das
into
lea
aad
cwtl
fdivrs
pop
andps
xchg
add
push
adc
push
xchg
ja
mov
sub
jno
fcoml
cmp
jne
icebp
in
push
mov
add
push
ret
add
push
mov
shl
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
add
push
add
add
pop
add
jne
jb
jb
add
je
inc
add
outsb
add
add
insb
add
add
add
outsb
add
insl
add
add
add
inc
add
inc
add
add
insb
add
insl
add
add
add
xor
dec
jo
xor
gs
add
add
add
gs
je
inc
imul
outsb
gs
xor
add
add
xor
xor
xor
push
push
push
dec
inc
push
push
push
dec
dec
add
add
add
nop
pusha
inc
add
jae
jns
jae
je
xor
xor
xor
xor
xor
arpl
inc
add
jb
imul
add
js
add
add
mov
adc
add
push
mov
sub
add
pop
mov
push
mov
mov
add
cwtl
mov
movsb
mov
mov
mov
fmuls
add
decb
add
push
mov
add
add
mov
inc
mov
add
add
cwtl
mov
movsb
mov
mov
mov
fmuls
add
decb
add
push
mov
add
add
mov
inc
mov
add
add
cmpsl
add
jae
jb
popa
je
add
testb
gs
outsl
fs
gs
popa
outsb
fs
gs
add
and
inc
gs
jb
arpl
fs
jae
add
inc
add
outsl
jae
dec
popa
outsb
fs
add
push
imul
imul
jns
add
jg
inc
jb
popa
je
inc
imul
imul
insb
insb
outsl
arpl
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
fs
arpl
inc
add
inc
push
xor
cs
insb
add
pop
add
addr16
jo
outsb
dec
gs
add
add
addr16
insb
outsl
jae
dec
gs
inc
inc
push
inc
push
dec
xor
cs
insb
add
add
mov
add
sub
aaa
xor
xor
js
loope
sbb
imul
js
jge
xorl
xor
xor
xor
xor
outsb
xor
xor
xor
xor
outsb
xor
xor
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
icebp
aaa
or
ja
mov
cmp
cmp
cmp
cmp
cmp
push
cmp
popf
cmp
cmp
cmp
cmp
cmpb
cmp
add
push
add
sbb
add
mov
xor
xor
xor
xor
xor
xor
xor
xor
pusha
add
or
add
.byte
xor
