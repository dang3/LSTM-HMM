mov
or
sbb
ret
jmp
pop
dec
adc
add
subl
movsl
jo
daa
js
xchg
movsl
or
add
imul
daa
pop
pop
adc
cvttps2pi
jno
js
sbb
mov
fldl
mov
pop
adc
and
mov
sub
pop
movsl
ds
sub
stos
pop
mov
pop
jo
js
sbb
stos
ja
test
sbb
mov
xor
sub
jo
inc
mov
jge
and
test
and
pop
fistpl
pop
inc
mov
fstp
fildll
jo
lea
and
inc
test
lods
insl
or
fsubs
aas
insl
and
stos
fdivs
fstpl
das
ja
adc
xchg
adc
mov
xor
insl
mov
and
mov
mov
xchg
test
out
test
out
mov
sub
in
mov
ss
xchg
popa
mov
pop
mov
and
test
pop
jmp
mov
push
add
stos
test
xchg
and
aaa
jne
adc
dec
or
insl
imul
sub
and
add
aaa
sbb
push
ja
stos
stos
xor
cltd
lcall
lods
mov
movsl
out
push
inc
mov
pop
imul
test
repz
gs
mov
xchg
hlt
and
mov
mov
xchg
cwtl
int
push
cmp
aaa
lods
insl
lods
mov
pop
push
movsb
test
lods
mov
and
xor
add
mov
ret
lods
lret
sbb
js
test
lcall
outsl
negl
jo
daa
sbb
das
rcrb
lods
mov
mov
lods
mov
mov
pop
popf
sbb
push
or
adc
call
xor
ja
sbb
cltd
add
push
mov
add
movl
pop
movb
pop
push
lock
fwait
or
fistpll
mov
ficoms
add
adc
out
sbb
pop
pop
hlt
mov
fimuls
aaa
sub
add
add
add
sbb
out
ja
mov
or
add
sar
shl
mov
cmp
jo
sbb
out
fstpt
mov
pop
clc
sar
or
fbstp
push
jge
sbb
xlat
sbb
test
jne
xchg
lock
mov
fisubs
popa
mov
into
dec
clc
or
push
mov
xchg
inc
add
sbbb
and
std
jbe
jbe
inc
hlt
daa
add
push
lret
or
ficomps
repz
push
lock
add
or
rorl
fldpi
push
not
xor
sbb
jnp
xchg
iret
aam
adc
sbb
adc
cmp
ffreep
negl
jnp
fcmovb
fbld
sbb
std
mov
test
add
mov
mov
adc
or
lea
pushl
push
lea
push
xchg
out
call
sbb
mov
test
jae
mov
test
sub
jmp
sub
lock
js
lahf
xor
loop
ror
jnp
fwait
jecxz
sbb
push
push
cmp
stc
add
in
imull
add
pop
ja
mov
push
xor
lahf
clc
pop
sub
jne
in
iret
ss
ret
in
enter
rclb
sub
add
daa
pop
sti
fs
lock
out
or
outsb
mov
push
adc
sub
nop
aaa
inc
repz
adcb
or
loopne
loop
movsl
fcomps
sub
jb
fst
mov
insl
fnstcw
mov
add
xchg
sbb
pop
loopne
dec
push
and
or
lret
int
out
sbb
add
cmp
mov
sbb
xor
fcomip
sub
push
sbb
push
test
test
jae
pop
cld
shr
pusha
sub
fmuls
pop
aam
cmp
pop
sahf
shlb
or
adc
adc
mov
in
sahf
jmp
add
fcomip
adc
sub
pop
sbb
sbb
shr
pop
pop
test
push
fucom
xchg
xchg
xor
inc
push
fiaddl
imul
sbb
rclb
dec
add
jbe
cli
adc
push
test
jbe
sbb
daa
int3
ds
push
shl
fmuls
sbb
xchg
scas
xor
pop
in
and
clc
cmpsl
xor
or
testb
lock
orl
test
aas
int
cmp
clc
jmp
sbb
cmova
pop
sti
loopne
add
mov
or
xlat
pop
jo
mov
fisttpll
decb
add
fadds
outsb
dec
mov
adc
adc
jecxz
ss
adc
push
repz
in
push
in
stc
pop
aas
jnp
sbb
xchg
or
out
ljmp
inc
outsb
xor
inc
add
pop
fwait
out
jne
in
inc
in
xor
xchg
add
fcmove
in
ror
or
sbb
mov
dec
rcr
xor
push
jmp
test
je
jmp
in
or
fdiv
sub
sub
das
js
add
int
inc
rcl
fwait
pop
sbb
imul
cmp
mov
xchg
push
or
insb
ljmp
fmuls
add
call
lods
xchg
orl
mov
insb
mov
add
fcoms
pop
adcl
into
or
ret
in
fcoml
sbb
adc
cld
push
mov
or
scas
std
lods
pusha
mov
ret
pop
shl
sbb
inc
add
test
fsubl
cmp
pop
notb
and
lock
icebp
jmp
jns
push
and
lcall
mov
and
fiaddl
add
enter
sbb
cmp
xor
adc
or
pop
or
cmp
push
and
mov
mov
sbb
fdivl
sub
pop
iretw
clc
fmull
sbb
adc
inc
or
aas
pop
lea
or
lds
lret
add
add
and
or
and
ret
adcb
fdiv
shlb
imul
mov
or
push
scas
sbb
mov
adcl
jg
or
jecxz
mov
sbb
fisubs
insl
inc
mov
jne
sub
add
enter
ja
and
test
jno
lret
sbb
pushf
inc
in
pop
insb
adc
mov
jo
or
xchg
jg
pop
or
insl
mov
cvtps2pd
and
jno
pop
test
xchg
push
daa
and
in
jno
mov
mov
sub
imul
sbb
and
sub
push
lcall
push
adc
jge
jb
adc
mov
xchg
sbb
std
and
xor
out
test
add
cmp
fs
loop
cmp
mov
mov
jge
test
mov
jne
das
pop
mov
and
lea
out
js
aam
fisttpl
sbbl
imul
cmc
or
cltd
push
out
push
mov
jo
mov
out
sbb
pop
cmp
or
movsl
test
lret
rcr
out
jne
mov
cli
out
rorb
inc
xchg
pop
sub
push
xchg
bound
xchg
int
inc
lods
adc
sub
push
test
add
mov
jo
adc
cwtl
movsl
fsub
cmp
cmpl
test
sub
lods
jb
push
in
jo
int3
cmp
push
cmp
add
xchg
test
lods
popa
flds
int
jae
pop
out
sbb
jb
imul
out
mov
adc
xchg
mov
xor
sahf
push
xchg
or
inc
xor
mov
shrl
or
xchg
add
test
cld
movsb
je
rcll
jle
arpl
pop
mov
or
xor
mov
sahf
lahf
cmp
add
enter
int3
mov
inc
jecxz
out
int3
mov
add
jnp
lock
dec
adc
push
and
es
enter
insl
add
lods
mov
pop
push
insl
jmp
pop
cmp
les
imul
jmp
inc
jne
rcll
movsb
aas
mov
add
jp
mov
mov
pop
cld
jg
mov
shl
mov
sbb
imul
loop
ret
sbb
rcr
mov
dec
dec
adc
dec
adc
push
sub
mov
adc
rcl
inc
testl
jne
cld
adc
mov
lods
dec
test
jecxz
add
lock
test
add
in
outsl
mov
inc
adc
popa
mov
stos
movsl
add
pop
in
adc
sub
js
fmuls
push
jo
jmp
sbb
adc
or
stos
test
nop
mov
and
jb
dec
insl
out
sbb
push
int
stos
push
leave
pop
repz
push
push
arpl
add
pop
push
ljmp
fbstp
sub
sub
pop
stos
imul
aad
push
cmp
add
push
scas
pop
sbb
ficompl
fidivs
rclb
aam
fmul
fcoms
ds
aam
lods
add
test
push
xchg
cmp
xchg
imul
push
pop
fcom
loopne
out
andb
mov
or
inc
imul
data16
jmp
loope
and
mov
adc
mov
jae
insl
sub
push
scas
mov
divl
test
lods
insl
xlat
jecxz
adc
sbb
dec
pusha
cltd
lcall
xor
stos
mov
into
push
sub
loopne
fcmovbe
or
scas
xor
lds
push
dec
fdivl
sbb
pop
mov
sbb
pusha
jae
add
lods
sbb
and
jle
mov
addb
inc
dec
aam
mov
push
popa
bound
ja
pop
sub
sbb
aam
add
iret
push
int3
int3
mov
cwtl
pop
xchg
pop
mov
subb
lock
xor
pop
pop
andb
lock
shrb
sub
xor
or
push
and
add
inc
pop
mov
and
lcall
ror
mov
enter
pop
jmp
mov
das
dec
je
inc
in
faddl
mov
or
mov
shlb
aam
int3
xchg
negb
mov
mov
aad
inc
hlt
mov
mov
movsb
daa
mov
add
xchg
rcrb
shrl
mov
mov
je
inc
mov
push
pop
mov
out
xor
xchg
sbb
and
adc
cmp
es
jl
or
pop
or
adc
test
and
and
sbb
mov
mov
out
adc
pop
adc
pop
pop
pop
mov
inc
cli
sub
jmp
dec
sub
push
rol
sub
cs
push
xor
dec
pusha
daa
shlb
loope
cld
aad
mov
pop
inc
jp
aam
sub
push
mov
nop
ficompl
out
cmp
adc
inc
xor
adc
or
mov
or
add
add
lods
push
cmp
jge
sbb
lock
cli
mov
out
mov
clc
shll
sub
mov
stc
sbb
adc
push
xchg
dec
inc
movsl
cmp
dec
mov
lock
and
int
int3
adc
mov
in
pusha
add
mov
insl
push
jbe
xchg
xchg
testb
adc
cmp
scas
pushl
loopne
imul
add
lret
sbb
pop
mov
lret
sub
adc
adc
mov
repz
push
pop
call
adc
adc
add
aam
and
jo
repz
jecxz
insl
jae
int
call
stos
ss
fldenv
sbb
sbb
push
sub
in
rcl
push
inc
add
jmp
mov
enter
push
jo
jp
fcoms
call
popf
sub
mov
fisttpl
push
js
shl
cmp
negl
cli
add
pop
movsb
or
xor
mov
xor
sub
mov
scas
mov
add
lret
cmp
mov
inc
adcl
jae
pusha
dec
imul
or
ss
inc
inc
sbb
popf
pop
fldt
jnp
pop
hlt
or
dec
pop
sub
dec
leave
add
pop
das
call
xchg
xlat
inc
pop
rorb
fidivrl
xor
jmp
cld
or
push
pop
mov
push
or
js
inc
popa
sub
shrl
outsb
rolb
dec
cli
leave
adc
add
in
dec
pop
push
stc
inc
and
sbb
mulb
and
mov
add
push
add
push
sub
ljmp
in
xor
iret
aaa
loopne
fildl
dec
xor
pop
lock
pusha
adcl
add
and
in
inc
inc
in
add
pop
icebp
jb
nop
pop
mov
add
enter
adc
and
ret
fucomi
sar
adc
std
mov
xor
icebp
out
and
jecxz
mov
mov
adc
cmp
cmp
ja
dec
out
adc
xchg
loopne
or
ret
jne
cld
dec
pop
int
xchg
xchg
stos
aam
adc
add
mov
adc
movsl
push
fsubrs
shl
enter
subl
dec
int
inc
roll
paddb
jmp
rcrb
mov
and
orb
push
cmpsl
sub
ret
data16
or
jge
cli
add
adc
lcall
mov
jmp
test
ja
xor
in
je
ds
sub
pop
sbbb
add
aas
jmp
or
sbb
pusha
ljmp
or
loop
bswap
ja
mov
or
aam
jg
aaa
lcall
ja
push
mov
dec
in
push
push
mov
movsb
adc
scas
rcrb
jnp
addl
add
inc
pop
bound
jge
aad
or
xorb
sub
js
mov
movsl
mov
movsb
xchg
out
pop
sub
add
push
into
or
rorl
xor
adc
std
xchg
stos
xchg
dec
ja
rclb
into
mov
rorl
je
xor
push
fucom
bound
ja
mov
push
fsubrs
stos
push
mov
sub
lods
out
jmp
subl
pop
mov
imul
and
mov
push
int
push
xchg
ss
js
or
xchg
out
ja
pop
rol
push
imul
out
add
imul
mov
push
cmp
out
imul
mov
lahf
sbb
pop
mov
gs
add
pop
mov
or
scas
or
popf
xchg
test
jae
sub
add
add
jl
jae
xor
lret
daa
pop
and
out
push
jo
add
adc
negb
push
dec
data16
adc
pop
push
test
jge
and
xchg
in
xor
push
adc
fs
dec
out
popa
inc
insl
scas
xor
fldt
test
lods
cmpsb
or
mov
jne
arpl
subb
lods
int
lcall
rclb
jge
jns
aam
pop
insl
push
pop
jge
add
or
push
lods
cltd
push
mov
add
call
push
sbbb
push
addb
bnd
stos
adc
sbb
add
mov
mov
js
in
pop
xchg
jg
int3
ja
pushf
movsb
dec
add
xor
outsb
scas
pop
mov
les
js
xor
adc
xor
aas
or
loope
add
jle
mov
sbb
dec
std
jmp
inc
add
sub
lds
xchg
adcl
adc
mul
fdivrs
adc
fistps
gs
push
movsl
addl
sbb
fiadds
enter
loopne
ljmp
cmpsl
addl
mov
adc
xor
mov
mov
int3
or
jo
sbbl
in
jb
shlb
fmuls
rorl
fucomp
mov
cs
xchg
inc
jnp
shlb
push
ds
lods
js
dec
push
int
dec
push
int3
xchg
or
adc
sbb
add
xchg
std
pop
pop
adc
inc
inc
mov
add
sbb
pop
ror
or
xor
sbb
cmp
out
jg
out
nop
sbb
and
jo
lret
mov
hlt
mov
or
add
add
lcall
pop
push
dec
pop
not
insl
push
cmp
jae
out
movsl
add
inc
xor
add
mov
jno
sub
test
add
xchg
fxch
push
push
sub
inc
add
jp
sub
outsl
sbb
mov
sbb
xor
cvtdq2ps
sbb
out
aas
dec
or
stos
cltd
cmp
jno
push
pop
scas
lods
xor
xor
adc
xchg
mov
push
push
dec
lahf
adc
pushf
lret
push
sbb
stos
jae
ss
push
fdivs
aad
fwait
dec
fwait
jno
sub
sub
xchg
lods
adc
pop
insb
adc
push
scas
rcrb
mov
or
or
ja
fs
sbb
push
test
or
and
inc
rcll
stos
stos
adc
pop
lods
stos
push
and
out
lods
mov
xchg
push
xor
fs
cmpsb
out
cli
lods
std
push
cmc
mov
jo
and
sub
sbb
scas
lcall
pop
sbb
sub
push
mov
dec
fcoml
or
mov
push
shll
fcmovbe
jb
adc
mov
scas
pusha
or
stos
out
shl
and
movsl
notl
cmp
data16
mov
xor
xchg
mov
outsl
scas
push
stos
jmp
scas
jne
pop
call
push
scas
mov
out
into
popa
int
scas
add
push
jbe
jmp
roll
repnz
xor
adc
sub
pop
mov
dec
add
sahf
fwait
stos
sub
and
lcall
pop
xchg
stc
mov
aaa
loop
mov
repz
mov
adc
loope
xor
adc
jnp
sahf
out
or
push
adcb
mov
adc
mov
inc
rolb
mov
dec
jno
cltd
lea
push
mov
push
stos
cmpsl
fnsave
rcrb
cltd
test
xor
pop
rcrb
out
add
lods
push
jecxz
pop
push
push
pop
ja
adc
adc
adc
out
aaa
cld
mov
lcall
insl
insb
in
xor
int
add
mov
sbb
jg
xchg
xlat
pop
imul
sahf
mov
add
sub
mov
pop
add
addb
xchg
mov
jb
push
out
pop
test
jae
xchg
sbb
fstl
add
pusha
or
in
mul
xchg
insb
xor
imul
adc
jo
xor
cmp
inc
into
or
jae
or
stos
add
mov
inc
xchg
ds
jbe
xlat
mov
jnp
aaa
pusha
push
mov
int
fidivl
push
out
cmp
pop
imul
dec
cmpsb
data16
pushf
mov
leave
ja
fcomps
test
adc
or
or
jae
loope
mov
and
rcrl
or
scas
stos
add
push
or
push
push
push
pop
cmp
mov
fcom
inc
adc
mov
negl
mov
pop
rcrl
loope
out
cli
aaa
jge
jno
rclb
mov
or
rclb
add
add
jb
icebp
test
adc
leave
or
and
add
orl
stos
xor
or
xor
add
lods
dec
lock
sbb
jl
testl
add
xor
ror
push
and
cmpl
insl
add
pop
adc
pop
mov
nop
into
scas
xchg
stos
daa
adc
call
aaa
mov
pop
xor
fistl
pop
testl
jl
xor
into
rcrb
and
mov
mov
mov
aam
sub
cltd
sbb
pop
loop
jb
jbe
sbbb
dec
push
outsl
mov
adc
lods
dec
mov
roll
xchg
insb
xchg
add
test
adc
and
roll
xor
push
fadds
mov
out
inc
add
cld
insl
jne
dec
add
or
loope
orb
orb
xchg
sbb
xlat
xor
push
insb
cld
test
les
cli
shl
inc
mov
mull
mov
aaa
and
fsubs
push
cld
inc
mov
mov
ds
jecxz
jg
hlt
push
push
adc
shr
push
xlat
fadds
rol
mov
adc
push
lahf
push
in
jl
int3
jnp
fisttps
and
jbe
fcomip
jge
mov
adc
xor
ja
test
es
sub
lods
mov
lret
shlb
mov
mov
inc
mov
push
xor
mov
gs
push
jb
xor
push
stos
stos
aad
xchg
add
outsl
pushf
inc
sub
pop
sbb
insb
and
dec
dec
into
test
adc
jno
leave
addb
js
pop
scas
xchg
roll
adcl
push
xor
dec
xor
ss
push
out
in
ficoml
push
jg
cwtl
pop
scas
popf
test
mov
aad
int
sub
dec
aam
cmp
push
cwtl
xchg
int
mov
jno
lret
out
sti
pop
mov
pop
mov
jnp
push
push
insl
mov
jg
test
test
cmpsb
mov
xchg
pop
lahf
jmp
or
int
movsl
sub
fcomps
xchg
int3
xchg
les
mov
outsl
aas
push
mov
pop
jb
je
add
rolb
scas
fsubs
orl
jb
dec
fwait
mov
inc
mov
push
push
push
fcoml
js
ljmp
dec
pop
sbb
jge
addl
sbb
lods
mov
fadds
es
mov
ja
jno
push
lcall
xchg
pop
lods
xor
sbb
jae
imul
inc
jne
jo
pop
xchg
jne
and
cs
sub
xchg
xor
fbld
addr16
or
push
pop
out
test
orl
scas
imul
fcoms
lods
call
xchg
pop
mov
sbb
lret
imul
jo
sbb
aad
pop
lret
jecxz
mov
jecxz
sub
sub
inc
cmp
pop
dec
add
push
rolb
pop
sbb
fcomps
sub
and
nop
add
cli
cmc
mov
sbb
inc
ret
call
adc
test
jae
enter
pop
jns
fbstp
xchg
sbb
mov
jb
data16
jbe
push
add
or
lcall
inc
pop
inc
pop
push
mov
add
add
jge
fcomi
outsl
test
inc
pop
ret
cltd
int
xor
inc
pop
mov
inc
jae
fsubrs
xor
sbb
pop
stc
incl
lret
cli
push
and
push
add
popa
add
popf
pop
mov
mov
mov
xor
insl
das
jge
adc
int3
inc
test
xorl
rcl
add
sti
fs
fdivrs
lods
and
or
addb
rclb
pusha
les
dec
insl
fsubs
divps
ss
or
inc
adc
iret
mov
push
push
jg
test
out
aas
pop
sbb
sub
mov
pop
jne
xor
or
rorl
or
leave
pop
aad
mov
dec
call
nop
in
push
or
mov
mov
lods
dec
aad
cmp
je
jo
stos
lcall
jns
mov
add
popa
or
test
mov
sbb
cmp
push
shl
daa
and
push
mov
stc
aaa
or
jmp
mov
js
gs
orb
jb
cmc
sub
movsl
jmp
mov
xor
adc
dec
xchg
add
mov
and
scas
mov
push
push
mov
movsl
pop
bnd
out
lcall
mov
stos
popf
xor
jb
stos
mov
movsl
jg
pop
scas
or
mov
and
subb
cmp
mov
push
addb
push
movsl
inc
outsb
jno
xor
loopne
int3
pop
sub
sub
pop
sub
sub
clc
sbb
xor
pop
add
mov
cmpsb
cmpps
ja
test
rorb
mov
jecxz
lret
out
inc
cld
pop
or
rclb
andb
into
test
sarb
orl
push
orb
cmp
add
daa
js
scas
push
scas
xor
and
jae
push
and
xor
sub
cmp
rorb
test
cmpsb
add
inc
xchg
out
ja
rolb
pop
insl
mov
or
loopne
sar
ss
rcrl
out
add
xor
pop
jae
cmpsb
sub
js
jo
jo
enter
stos
or
sbb
jg
add
ljmp
pusha
push
mull
mov
mov
sub
push
jae
add
mov
dec
inc
stc
mov
add
in
scas
sbb
test
sub
sbb
movsb
sbb
mov
jno
subb
xlat
mov
xor
jle
std
lock
pop
xor
mov
mov
inc
pop
scas
xor
dec
inc
xor
dec
xor
jmp
mov
stos
push
lods
dec
sub
mov
pop
push
cmp
pop
dec
scas
pop
cmp
mov
sub
inc
adc
or
mov
jo
mov
cmpsl
and
push
inc
jbe
add
mov
sbb
or
jo
addr16
adc
jne
mov
ret
cmpsb
jno
inc
movsl
jp
shl
cmp
mov
rcrl
pop
lret
push
cwtl
push
insb
pop
sbb
and
add
mov
push
aad
mov
jo
ja
dec
loopne
stos
hlt
into
inc
add
imul
std
mov
out
shll
insl
push
orl
leave
xchg
mov
xchg
adc
movsl
push
and
sahf
ret
xchg
jns
insb
push
inc
out
jno
test
popa
sbb
inc
data16
mov
mov
ja
sub
push
adc
mov
js
cld
mov
test
or
push
cmp
sti
mov
and
sub
fistps
dec
arpl
mov
pushf
arpl
incl
ss
inc
push
ret
mov
mov
rcrl
xor
push
dec
mov
push
pop
gs
aam
push
adc
or
inc
shll
es
xchg
aad
jge
add
jmp
pop
imul
xchg
mov
cmp
fs
jb
cld
push
fbld
add
rol
mov
or
sbb
mov
pushf
push
xor
pushf
jo
jbe
ret
loope
lret
add
xchg
fnstsw
fisubrl
push
mov
imul
ret
xchg
and
pop
add
push
mov
xor
mov
sbb
adc
and
mov
or
loopne
jno
hlt
negl
rcrb
stos
inc
sarb
lods
mov
gs
pop
subl
jo
mov
stc
adc
test
inc
xor
out
sub
mov
lods
pop
jo
sbb
sbb
jno
pop
sbb
xor
pusha
mov
daa
cld
mov
sbb
inc
mov
ret
in
xchg
mov
mov
mov
inc
and
mov
adc
addl
in
sbb
pop
xchg
out
xor
push
adc
mov
or
mov
outsl
out
fs
xchg
ret
movsl
fcom
mov
orl
cmc
push
add
into
dec
dec
cmpsb
or
test
or
jb
enter
push
mov
scas
imull
inc
imul
into
scas
sub
fsubrl
mov
cli
dec
xchg
jo
aaa
jle
ja
daa
rcrb
xchg
je
mov
ficomps
aam
lods
sti
jbe
cmpsb
push
cmp
ret
xor
jmp
adc
xor
sub
cmp
inc
xor
push
fidivrl
xchg
xor
sub
loopne
outsl
adc
mov
cmp
rclb
aam
popf
mov
or
popa
or
xor
mov
ds
rcrb
pop
outsl
cltd
push
mov
sbb
fdivs
cmp
out
ss
xor
ja
mov
push
push
inc
push
cwtl
enter
xor
or
lret
fdivs
cltd
dec
imul
xchg
cltd
xor
mov
add
rcrb
stos
rcll
jo
pop
fsubp
dec
aam
mov
sbb
data16
add
add
data16
and
subl
dec
inc
out
lods
inc
jge
daa
gs
fidivrl
push
xor
push
lcall
mov
xor
sbb
xchg
pop
lcall
sbb
stos
jne
pop
and
ret
jno
das
or
pushf
mov
sbb
xor
xor
sbb
out
and
add
add
or
jle
cs
ljmp
call
mov
mov
dec
ja
or
lcall
push
ja
mov
dec
popf
movsl
inc
hlt
cmpsb
cmc
fdivrl
aam
xor
addl
ss
int
mov
les
scas
push
je
jle
jo
xlat
adc
in
jno
insl
xchg
adc
mov
mov
push
mov
sub
or
in
xchg
pop
xor
push
mov
and
mov
and
xor
jb
sub
shlb
push
xor
pushf
fimull
or
int3
inc
mov
subb
jp
pop
es
adc
xor
test
pushf
mov
mov
sbbl
jb
or
jne
jne
and
movsb
dec
out
adc
mov
outsl
add
sub
nop
add
jmp
sub
jbe
cmp
es
sbb
and
mov
sub
lahf
sbb
inc
and
imul
push
mov
add
adc
mov
mov
pop
repz
push
cmp
or
in
icebp
xor
repz
push
in
add
test
cwtl
and
stos
and
mov
js
test
int
test
int
sarb
pop
cmp
xor
pop
std
push
ljmp
aas
push
xor
imul
push
js
xchg
mov
movsl
mov
dec
rorb
mov
sbb
pop
mov
inc
push
data16
out
shrb
adc
pop
xor
loopne
xor
fs
arpl
jo
mov
hlt
ss
and
out
or
sbb
lods
adc
cltd
or
add
jns
es
popf
or
ficoms
fisubl
mov
fidivl
popf
dec
and
inc
add
or
or
lret
or
leave
inc
xchg
cmp
cmp
sbb
sbb
inc
sbb
cmp
pushf
orl
inc
adcl
inc
and
fidivs
or
or
mov
andl
pop
xchg
xlat
fnstcw
pop
cmp
popf
mov
xchg
or
test
push
xor
iret
test
inc
or
push
or
adc
sbb
mov
xchg
xchg
xchg
jae
mov
xchg
imul
or
lret
adc
sbb
xor
or
sbb
imul
sub
pop
or
pushf
and
test
shll
stos
cltd
jnp
sub
movsl
sbb
nop
ret
lcall
jo
xor
std
scas
notb
push
push
gs
shlb
inc
imul
add
push
inc
sti
icebp
inc
mov
stos
push
push
es
addr16
call
popa
mov
xchg
fbstp
mov
arpl
aam
int3
imul
mov
mov
sub
push
cmp
inc
scas
xor
mov
hlt
add
xorb
push
enter
push
subl
aad
jne
push
add
out
xor
cmp
out
pop
popa
adc
test
aam
lret
adc
sub
xchg
rol
loopne
in
ret
jo
fs
andb
bnd
mov
and
nop
xchg
and
push
dec
cmpsb
add
lds
data16
or
ret
mov
adc
xchg
xchg
xchg
pushaw
js
and
xor
insb
xchg
sbb
cwtl
sbb
mov
push
cmp
out
jl
daa
out
cmpl
stos
mov
leave
add
xlat
and
imul
add
testb
rolb
push
push
scas
xor
add
enter
push
insb
popf
ljmp
shlb
dec
xor
dec
pop
xchg
or
mov
andb
xchg
sbb
push
imul
int
push
cmp
jno,pn
push
inc
sbb
mov
das
push
dec
popa
daa
pop
loopne
int
xor
push
xlat
sbb
jecxz
jmp
pop
stos
xlat
mov
adc
jo
add
ja
cmp
sub
outsl
cltd
pop
cwtl
sub
cld
push
xor
or
mov
lock
test
dec
shll
sbb
sbb
xchg
rcl
insb
xchg
mov
gs
dec
mov
pop
mov
mov
lea
test
cmc
out
xor
ret
inc
aaa
andb
out
push
inc
cltd
push
push
sub
loop
rorl
mov
cltd
jp
jo
and
pop
in
push
dec
or
and
jns
addr16
push
push
mov
xchg
mov
mov
dec
sbb
ret
jmp
mov
pop
jae
mov
xor
sub
pop
test
xchg
adc
push
jae
movsl
mov
scas
xchg
or
aas
add
lcall
push
lcall
push
inc
dec
xchg
pop
cmp
sub
lcall
push
xchg
loop
or
xor
loopne
lds
jmp
push
push
jae
mov
in
jno
cmp
jp
xor
push
jp
gs
inc
mov
or
dec
imull
ror
push
cmp
cmp
adc
pop
in
pusha
sub
inc
jnp
add
push
push
xchg
mov
pop
adc
mov
movsl
fwait
je
mov
cmpb
xor
out
jno
dec
lret
dec
adc
loopne
sub
dec
clc
imul
or
lret
ja
je
xor
inc
cmpl
cmp
push
or
add
fcom
repnz
or
or
jecxz
xor
sub
lcall
insl
cli
push
add
mov
sub
cld
in
pop
mov
push
es
aam
mov
hlt
push
add
int3
ss
test
or
pop
add
mov
pop
pop
cs
adc
stc
add
sbb
pop
ja
or
addr16
mov
sub
xor
mov
or
sbb
imul
jp
cmpsl
lods
cmp
pop
push
daa
js
xchg
subb
or
shrb
push
or
popf
int
mov
add
stos
and
pop
xor
fadds
loop
sub
jne
pop
push
xor
xchg
xor
lret
lods
ret
stos
scas
dec
cltd
pop
cltd
jb
sub
cld
add
outsl
lcall
add
pop
xor
rol
sti
mov
mov
clc
call
mov
dec
dec
pusha
ret
mov
mov
outsl
xor
push
int3
lods
rcrb
mov
pop
subb
mov
mov
xor
dec
test
xor
dec
pminub
pop
rcll
fldenv
pop
scas
dec
inc
gs
jmp
adc
xchg
push
hlt
xchg
inc
daa
push
das
pop
imul
scas
xchg
push
es
or
pop
adc
cltd
inc
sub
rorb
jecxz
add
pop
push
xor
xchg
scas
jo
sbb
cmpsb
stos
add
mov
stos
pusha
or
sub
stc
stos
push
inc
cmpsb
adcb
sub
mov
mov
andl
or
add
add
cmp
stos
inc
sub
les
mov
in
mov
push
shr
aam
aad
pop
hlt
and
sub
insl
push
adc
cmpl
or
rorl
add
addb
adc
sub
push
rclb
xor
jp
js
mov
add
dec
rcll
imul
sub
xchg
push
incl
pop
lock
loopne
mov
adc
bound
into
std
pop
rolb
lods
lret
ret
push
aas
adc
adc
and
frstor
dec
cmp
imul
cmpsl
cmp
dec
mov
xor
sbb
and
mov
sub
shl
cmp
stos
pop
add
cmpsl
or
jle
ret
pushf
cmp
inc
mov
push
and
dec
aam
shrl
inc
fcoml
inc
fcomi
insl
cld
pop
cld
push
lea
cmpsl
aaa
decl
adc
xor
bound
call
loope
mov
test
jbe
jbe
ja
or
neg
rolb
flds
repnz
xor
rcl
shl
loopne
ds
in
mov
das
aas
mov
not
shl
mov
loope
les
cld
mov
rcrb
sbb
jno
es
push
sbb
jge
in
in
rorl
xor
jo
mov
pop
pop
sbb
cmp
int3
rorb
in
pop
stc
daa
lcall
push
dec
je
cmpsb
leave
stos
jno
adc
and
xlat
or
inc
daa
inc
and
test
pop
xchg
adc
sbb
or
and
jl
sbb
dec
scas
jo
xor
sub
add
arpl
adc
loopne
test
fwait
hlt
enter
into
mov
mov
aad
lods
mov
stos
and
pusha
jg
mov
scas
cltd
xor
sbb
xchg
ss
pop
xor
pop
pushw
jo
push
cli
orl
mov
inc
in
in
add
jbe
mov
pop
pop
adc
ljmp
mov
rclb
add
sbb
lret
or
fcomp
sub
cmpl
jo
lahf
sub
jae
lret
inc
jp
adc
dec
mov
push
add
xor
aas
outsl
imul
pop
aam
lods
cmp
add
push
sbb
jo
loope,pn
mov
pop
inc
adc
pop
lret
loope
xchg
pop
push
mov
inc
pop
push
xor
add
mov
pop
mov
pop
rcll
cmp
mov
mov
jg
or
push
adc
xor
adc
pop
xadd
pop
sbb
dec
inc
xchg
mov
imul
and
loop
in
jle
inc
xor
add
pop
les
rep
arpl
mov
push
lret
flds
add
loop
mov
pop
rol
adc
fildl
push
cltd
jbe
dec
aas
aam
lods
push
pop
push
subb
fnstenv
and
roll
jge
test
xlat
add
sub
sbb
sbb
and
pop
xor
jle
inc
mov
loopne
sbb
xchg
mov
push
mov
hlt
pop
mov
pop
or
push
stos
aas
and
push
ja
mov
das
pop
dec
sub
std
sarb
sub
call
pop
or
mov
add
push
loopne
push
and
push
xor
pop
jg
push
jae
bound
and
sbb
jecxz
push
mov
jo
lods
push
add
fisubrs
cmp
mov
stos
or
shll
loop
add
add
jg
dec
push
shl
inc
push
addb
clc
add
sub
sbb
jb
mov
add
insb
jno
repnz
enter
sti
mov
daa
cwtl
loop
jne
jo
hlt
imul
fs
and
or
and
cmp
inc
stos
ficoms
shrb
dec
inc
xchg
gs
ds
add
and
mov
push
rcrb
inc
loope
ljmp
and
jb
fimuls
ret
mov
sub
cmpsl
sub
mov
test
mov
stos
loope
push
push
pop
xchg
and
adc
pop
xchg
lcall
add
lods
subb
pop
pop
stos
xchg
xchg
ljmp
shrb
push
xor
je
out
repnz
lcall
pop
mov
adc
xchg
xchg
stos
loopne
adc
inc
jne
cwtl
push
add
nop
adc
inc
stos
sbb
adc
push
mov
sbb
xlat
pop
mov
xchg
and
lretw
sti
daa
inc
mov
sub
subb
mov
loopne
mov
push
lret
mov
es
cltd
mov
push
stos
rorb
test
enter
repz
out
sbb
xchg
cmc
mov
repz
add
pop
out
aam
push
jo
push
test
subl
cmp
mov
xor
bound
cli
ja
add
adc
adcl
hlt
push
je
mov
in
push
cmpsb
call
fdivrs
add
in
mov
fsub
mov
sub
into
dec
cmp
xchg
or
xlat
or
add
test
or
enter
cmc
mov
mov
repnz
fstl
pop
adc
jb
push
dec
enter
shrb
dec
add
test
hlt
into
negl
mov
add
ljmp
ss
add
bound
sub
push
sub
call
ss
cmp
data16
pop
aas
out
les
addb
fimuls
fmuls
das
loopne
cli
or
dec
add
and
testl
mov
stos
and
mov
xchg
mov
or
or
lea
setno
add
clc
and
push
fisttpll
and
lock
mov
lret
mov
mov
pop
test
shl
cmpsl
sbb
cmc
xchg
or
lods
popf
arpl
not
jmp
fs
andb
xchg
rcll
sti
inc
or
add
adc
imul
call
pop
imull
lret
sub
loope
loopne
cwtl
add
mov
sub
mov
inc
popa
in
test
inc
int3
fdivr
stos
movsb
mov
out
pushf
add
or
ret
lret
in
outsl
inc
jg
clc
imul
dec
add
add
outsl
call
jb
add
sub
dec
aad
stos
in
jo
sbbb
sbb
popa
andb
cmpsl
enter
push
jno
lods
add
in
push
xchg
addb
add
or
jbe
adc
orb
cmpsb
mov
mov
mov
mov
int3
mov
inc
mov
mov
inc
movsl
inc
fcomps
push
or
mov
int3
xchg
pop
sbb
pop
mov
dec
pushf
loop
and
cmp
mov
and
loop
pop
dec
mov
loopne
xor
sahf
call
cld
outsl
mov
mov
jb
mov
ljmp
push
sub
or
lcall
xchg
inc
imul
shlb
out
pop
js
pop
add
jo
fcomps
add
and
and
pusha
rolb
pop
rcl
in
pop
outsb
xchg
stos
sub
test
sbb
mov
test
sbb
fdivl
ds
rolb
popw
push
repnz
mov
addb
xchg
sub
icebp
and
inc
cmp
pop
mov
adc
inc
lcall
adc
add
sub
insb
leave
jb
mov
movsl
inc
and
cmp
shlb
pusha
push
pop
xor
iret
fisttps
xor
xchg
loopne
add
sbb
push
insb
push
sbb
sub
mov
pop
repz
rclb
adc
jbe
pop
sub
scas
ret
pop
ljmp
daa
jbe
sub
scas
xorl
jbe
aad
and
testl
mov
inc
cwtl
pop
jo
sbb
fmul
stos
daa
jno
push
popa
stos
inc
cmpsb
aam
jo
sub
cwtl
xchg
sub
or
dec
es
inc
out
fdivrs
push
mov
dec
aad
test
push
test
fldenv
rorl
dec
dec
lret
fcompl
push
or
xor
aam
js
repz
loope
movsl
rol
icebp
pop
push
or
sbb
sub
jne
mov
sub
add
pop
cwtl
test
in
mov
icebp
and
adc
xchg
cmp
pop
mov
mov
and
scas
shlb
inc
jo
shrl
lret
jle
jne
adc
ret
jns
mov
cmpsb
sbbb
sub
and
pop
fwait
add
push
mov
mov
imul
les
push
fisttpll
xchg
add
inc
cwtl
lret
rdmsr
jecxz
fs
outsb
xor
cmpsb
mov
add
push
ja
or
sbb
data16
js
jp
subl
sbbb
add
jo
sbb
sbb
mov
cmp
mov
xor
add
jg
mov
rolb
jo
sub
xor
iret
inc
scas
pop
lds
jb
add
xchg
adc
mov
push
pop
sbb
hlt
push
andnps
mov
mov
shlb
xchg
in
and
std
add
daa
pop
les
push
cld
sbb
adc
xor
rclb
in
dec
sub
or
rol
shl
fisubl
incb
dec
rcl
adc
ficoml
push
andb
hlt
xchg
add
ljmp
mov
shll
jo
clc
lods
shl
dec
jo
dec
scas
cmp
jb
cmp
lcall
fiadds
incl
mov
jb
inc
les
xchg
inc
mov
cmp
add
icebp
mov
push
xchg
add
mulb
jnp
mov
into
add
test
jmp
jg
clc
test
xor
pop
int3
not
mov
push
sahf
mov
stos
out
pop
mov
dec
xor
in
fdivrp
mov
adc
push
xchg
cmp
pop
sub
jp
dec
inc
mov
enter
xor
inc
mov
add
mov
push
cmp
add
ss
js
unpckhps
mov
stos
in
push
sbb
dec
dec
sbb
adc
imul
es
add
dec
or
sub
fdivl
fsubl
or
cmpl
hlt
cmpl
mov
xor
scas
inc
mov
xchg
es
jbe
les
push
neg
out
add
xor
dec
dec
push
test
pop
adc
jl
arpl
in
shrl
jns
call
ja
dec
dec
sub
or
add
addl
sbb
out
pop
loopne
inc
out
sbb
pop
sub
xchg
jmp
jle
mov
dec
cmpsb
stos
and
cmp
pushf
xchg
and
mov
out
mov
sub
test
jns
sub
mov
push
int
inc
mov
shll
test
sub
popa
xor
push
sub
cmp
inc
daa
stos
scas
loop
or
lret
inc
pop
daa
push
lret
in
je
inc
xlat
mov
aam
pop
pop
loopne
xchg
imul
nop
sub
lcall
xor
jb,pn
xchg
int
cwtl
jbe
pop
subb
repnz
ds
dec
dec
out
add
mov
xor
shlb
js
fimull
aas
pusha
lock
xor
aad
adc
inc
jns
xor
test
cs
xchg
rcrb
sub
outsl
xor
push
xchg
xchg
ja
sub
or
mov
adc
pop
cltd
cmpsb
stos
sbb
sbb
xchg
push
in
jae
jb
js
int
stos
sbb
nop
loop
push
fildll
push
cmp
mov
and
loopne
push
frstor
push
xor
sbb
sub
test
inc
jbe
rolb
push
dec
js
xor
rcll
mov
and
cmp
pop
jae
sbb
push
or
lcall
xor
xchg
or
push
xchg
shll
in
xor
sub
jecxz
mov
mov
roll
xor
in
cmc
movsb
rcrl
in
mov
lret
jmp
cmpsl
hlt
or
out
adc
jge
or
xchg
and
cwtl
mov
inc
pop
rclb
clc
imul
rcr
pop
cmp
fldcw
sarb
add
sbbb
inc
shlb
shll
nop
mov
sbb
aas
loop
inc
add
adc
jle
loopne
add
sbb
push
fsubrl
out
add
jb
adc
mov
adc
push
test
ja
pop
lds
stos
sub
dec
loop
cmp
xchg
fs
dec
not
mov
out
sub
dec
iret
pop
pop
inc
ror
inc
mov
cmp
sub
jmp
testl
add
cltd
ficoml
xlat
dec
dec
add
add
pop
xor
and
imulb
rcrb
xor
jmp
mov
sbb
jge
gs
xchg
ja
sbb
push
push
lahf
ret
or
out
mov
ljmp
push
add
pop
mov
and
adc
adc
push
mov
sbb
movl
adc
push
inc
ljmp
xchg
popa
insb
mov
mov
ret
add
sbb
hlt
sbb
insb
insb
sbb
or
jmp
rolb
fcoms
adc
adc
pop
jo
inc
movl
jmp
icebp
insb
test
or
loopne,pn
push
dec
sub
loopne
ret
fidivs
dec
andb
add
mov
js
add
xchg
sub
and
mov
fimull
xor
mov
sbb
adc
sub
dec
lods
sarb
es
es
in
mov
cmovbe
push
int
icebp
rolb
adc
mov
insl
mov
cwtl
test
sub
aas
adc
jl
xchg
test
mov
inc
gs
sbb
aas
loopne
jg
mov
rcr
and
cli
decl
adc
adc
rcr
or
movsb
jo
mov
push
mov
fwait
ret
je
fwait
sub
push
cmp
inc
and
stos
stos
inc
xchg
lock
xchg
loop
je
push
sub
jge
roll
inc
or
mulb
fstp
add
leave
adc
mov
out
in
dec
test
sbb
call
scas
icebp
inc
pop
add
add
adc
xchg
sar
or
das
cmpsl
not
imul
shrb
nop
jns
nop
andl
push
pusha
sub
sti
pop
mov
and
or
test
jne
gs
mov
test
push
sbb
je
jmp
xor
aad
mov
mov
in
test
sub
mov
inc
es
aas
cmp
pop
sub
sub
sbb
mov
rclb
and
sbb
lods
mov
cmp
sub
stos
dec
sbb
popa
mov
stc
in
sub
adc
sub
daa
mov
push
jae
mov
cltd
addr16
push
loope
dec
xchg
stos
mov
lods
mov
hlt
test
sub
aad
xlat
pop
jne
in
inc
scas
mov
jo
mov
dec
cwtl
js
pop
xchg
sbb
mov
sbb
int3
jo
fsubs
pop
ss
dec
mov
xchg
aas
sub
pop
pop
mov
mov
mov
mov
loopne
pushf
jp
scas
mov
aas
inc
cltd
push
sbb
scas
call
stos
pop
int3
lret
stos
inc
mov
xor
aad
xor
out
mov
jbe
jo
sub
cs
out
scas
mov
xchg
jno
mov
add
shrb
xchg
push
push
xor
outsl
or
add
push
int
pop
cmp
or
into
push
xchg
call
xchg
sbb
lods
pusha
cltd
add
js
push
sar
cmp
pop
das
enter
jno
rcrl
adc
inc
aaa
fildll
mov
andl
pop
or
sub
cmp
pusha
andb
lret
jo
es
ret
stos
mov
sub
jo
jo
loopne
sub
inc
xor
movsl
lods
cmp
adc
or
adc
xor
leave
cltd
add
add
mov
push
lods
xchg
xchg
fistl
push
ret
inc
sbb
add
js
loope
or
jo
das
or
mov
orb
and
test
loop
js
stos
adc
and
scas
add
xlat
dec
mov
in
xchg
aam
dec
cmp
pop
js
push
add
inc
jo
jge
or
sarb
cmp
mov
cmpsl
data16
adc
inc
mov
or
inc
lods
inc
stos
push
xor
push
mov
jl
loope
xor
jl
test
rcll
adc
add
dec
out
ret
or
or
adc
ja
dec
mov
lcall
xchg
hlt
push
push
loopne
sbb
mov
xor
cmp
mov
sti
test
pop
loop
xor
test
andl
and
mov
outsb
mov
scas
mov
xchg
mov
xchg
leave
rcrb
insb
shrl
and
pop
xor
inc
imul
outsb
adc
loopne
cli
push
loopne
scas
fcomp
xchg
lcall
jmp
push
mov
push
dec
pop
sub
rorb
adc
std
outsl
xchg
fwait
inc
lods
rolb
sbb
inc
adc
aam
test
xchg
daa
in
xor
lds
xchg
lret
fistpll
out
push
inc
xchg
xor
jno
mov
enter
xchg
lods
sbb
dec
adc
push
roll
rcrb
cltd
cli
insb
rclb
push
mov
ja
sbb
enter
ss
jge
adc
stos
add
dec
out
jno
mov
sbb
mov
lret
jb
jp
movsl
lea
jo
icebp
jns
sub
arpl
sub
shll
pop
shrl
or
sbb
inc
push
pop
push
sbb
and
cmpsb
sbb
rolb
xor
inc
xchg
mov
cmpsb
pushf
push
lcall
xchg
sub
lcall
pop
pop
pop
pushf
jnp
aas
cmc
sbb
inc
imul
cld
mov
rcrb
xlat
lcall
xchg
xor
inc
aam
jae
movsl
test
sub
add
push
push
out
inc
mov
sub
mov
sub
push
sub
xchg
push
jo
jae
cmpsb
xchg
sbb
mov
pop
jg
sbb
lcall
or
mov
push
push
movl
hlt
loope
cmp
addb
rolb
adc
ss
out
jo
or
mov
movsb
ret
sbb
nop
jg
fdivs
sub
ret
pushf
dec
dec
jl
lcall
movsl
sub
into
jo
jb
enter
push
inc
ret
loope
adc
fdivrs
xor
pushf
aad
mov
js
adc
sub
leave
cli
or
xchg
inc
shlb
jnp
push
imulb
adcb
shll
mov
enter
add
lods
xchg
or
mov
mov
pop
or
xchg
mov
lods
and
mov
addr16
adc
adc
lea
pop
std
and
loopne
cmp
mov
std
add
inc
inc
inc
mov
shl
push
scas
fucom
or
or
inc
pop
pop
pop
and
ja
xchg
mov
add
stos
repz
pusha
push
mov
mov
xchg
jne
int
rcrb
and
dec
scas
data16
mov
dec
inc
test
pusha
or
add
movsl
leave
shl
ret
pushf
stos
js
shll
and
mov
push
jb
fisubrs
pop
add
jl
push
and
xor
or
mov
add
mov
mov
inc
sub
or
adc
sbb
sub
push
lods
jo
sub
or
call
test
push
push
sbb
xchg
dec
incb
arpl
sbbb
xchg
lret
push
cmp
call
mov
ret
and
or
push
cld
outsl
mov
and
ljmp
aad
incl
repz
leave
and
ffreep
inc
insl
dec
xchg
add
fistpll
jb
or
movsb
ja
dec
push
xor
enter
ja
sbb
xor
es
stos
mov
inc
rcll
shlb
pop
leave
jle
int
push
adc
add
add
stos
inc
int
rcrb
int3
fs
xor
xor
int
pusha
popa
or
sbb
sbb
movsb
fwait
mov
inc
prefetch
or
loope
test
aam
mov
movsl
dec
lods
inc
int
orl
xchg
or
cltd
lcall
scas
xchg
mov
js
adc
pop
xor
sbb
es
enter
cmp
int3
dec
inc
jae
pop
fldl
jnp
out
push
jnp
aam
movsl
push
xor
mov
insl
hlt
dec
sbb
sub
jno
test
add
lock
push
xor
stos
mov
jl
cmp
sbb
mov
add
hlt
popa
xor
loopne
cmp
loope
out
int
xor
push
mov
out
mov
lret
aam
mov
cmp
lret
loopne
mov
xor
cs
jae
mov
testb
or
test
sub
mov
nop
sub
add
cwtl
push
or
les
shr
test
xor
int3
or
ss
mov
fsubs
xor
divl
inc
fcoml
popf
jae
pop
add
jbe
jmp
lret
jbe
gs
pushf
es
cmpsb
jbe
inc
sbb
mov
and
add
orb
ret
fiadds
xor
mov
add
lcall
dec
stos
inc
xchg
and
sbb
lret
outsb
sbb
xor
je
in
popa
cmp
inc
push
jecxz
movb
pushf
mov
push
jae
jmp
call
inc
out
jo
adc
orb
ljmp
or
or
jge
dec
adc
add
sbb
mov
and
call
outsl
xchg
or
inc
xchg
jbe
pushf
cmp
fsubs
fisttpl
dec
xchg
xchg
cli
roll
or
enter
arpl
or
mov
out
push
or
jp
xor
mov
aam
push
in
sbb
imul
movsb
in
mov
pushf
sub
xor
push
pop
push
cmp
enter
jne
inc
inc
pop
or
js
cmp
adc
push
pop
es
xor
inc
imul
mov
divl
adc
mov
rclb
rolb
add
inc
cmp
cs
or
push
sub
test
jno
mov
push
out
or
push
jne
sbb
andl
rol
add
xchg
push
xor
roll
mov
add
fmuls
pushl
lret
out
in
push
jae
adc
xlat
mov
hlt
arpl
andb
sub
xchg
push
push
test
xchg
dec
jb
or
out
mov
fwait
shl
push
pop
subl
fs
clc
into
mov
cmp
xchg
daa
dec
adc
or
and
push
cwtl
or
cmp
dec
cmp
xchg
add
sbb
mov
push
lea
push
mov
aad
adc
sub
inc
sub
push
sub
jae
loop
loopne
pop
stos
pop
shlb
stos
cwtl
shrb
std
pop
inc
into
shl
out
jl
hlt
push
fdivl
dec
or
sbb
pop
lcall
lcall
inc
jnp
jno
jp
push
xchg
rcl
imul
push
xchg
sub
mov
xchg
arpl
in
or
mov
and
push
jo
cwtl
movl
cmc
ret
jne
sbb
mov
lods
jle
adc
xchg
mov
mov
xor
push
pop
into
outsl
jge
enterw
es
movsl
sti
xor
pop
test
or
xchg
xchg
popf
ja
out
lret
push
imul
outsb
xor
add
or
xor
stos
imul
add
push
inc
cmpsb
les
xchg
xor
out
and
inc
sbb
dec
es
into
cmpb
mov
add
enter
sub
popf
sbb
adc
aaa
mov
inc
inc
call
gs
mov
mov
xlat
out
push
jecxz
loope
and
push
xchg
sbb
or
adc
inc
adc
ret
mov
pop
push
adc
inc
and
cmpb
adc
and
and
jo
mov
rorb
push
rcrb
jmp
sub
add
decl
xlat
rcr
dec
and
and
sbb
and
mov
lea
pop
cld
int3
aaa
les
rorl
loope
mov
sbb
jnp
ss
outsb
inc
xor
loop
sbbb
sub
pop
and
cmpb
test
shll
pusha
push
aam
loopne
icebp
jb
lret
lret
fisubrs
mov
lods
inc
ret
fwait
pusha
mov
or
sbb
shrl
push
xor
add
cmpsl
call
adc
or
sbb
pop
add
dec
push
roll
inc
pop
mov
jbe
adc
fs
fisttpll
jecxz
and
adc
fucomi
inc
adcb
adc
jbe
fstl
push
mov
sub
scas
in
shll
stos
add
inc
les
mov
push
enter
dec
jne
lret
mov
loopne
pop
mov
lock
xor
adc
lock
testb
pop
popa
jne
or
loopne
mov
jmp
testl
ror
xor
cmp
dec
inc
lret
dec
fisubrs
mov
dec
not
js
and
push
cmp
add
loope
lahf
pop
push
fisttps
mov
jmp
shlb
adc
in
jns
mov
lock
loopne
push
or
sub
fistps
and
sbb
fisubl
xor
iret
pushf
test
fistps
or
dec
or
outsb
push
insl
rclb
push
lock
jp
ret
orb
and
loope
push
push
sbb
and
out
shl
fisttps
shl
jne
rcl
mov
and
daa
dec
lcall
xor
jne
push
dec
jb
sbb
adc
les
dec
xor
shrl
lds
push
dec
cmp
cs
fwait
sub
inc
movsb
fdiv
out
sub
jb
test
and
or
adc
cltd
add
sub
mov
sti
inc
cmp
test
add
addl
jo
pop
xor
lcall
or
sub
jb
js
test
push
mov
or
movsl
rcr
mov
xor
stos
lahf
int3
lret
mov
mov
es
fwait
mov
or
es
sub
sub
int
add
jmp
sub
mov
stos
push
add
pop
addr16
push
sub
push
sbbb
pop
test
xchg
or
mov
add
or
add
push
loope
test
cs
cmp
sbb
mov
jnp
jo
or
dec
cmp
sub
sub
test
mov
out
inc
lds
mov
aaa
pop
or
inc
push
es
push
pop
mov
mov
subl
inc
pop
cmp
mov
xchg
fcomp
adc
dec
xor
and
push
std
mov
in
out
imul
lea
pop
jl
adc
xchg
jae
enter
xor
popa
dec
and
ret
fwait
pop
sub
lahf
rclb
shrl
mov
cld
xchg
mov
add
mov
inc
jge
or
jae
xchg
mov
push
xchg
xchg
lcall
jl
inc
test
jg
js
jb
jo
jnp
or
adc
add
andl
sub
pop
push
or
or
dec
sbb
rcrb
sbb
cmp
sub
adc
or
or
adc
jmp
xchg
cli
mov
xchg
les
ja
sbb
add
int3
loop
cwtl
sbb
push
or
sbb
xor
push
xchg
int3
adc
enter
sub
enter
xchg
enter
dec
sbb
popa
inc
imul
sbb
jb
jmp
rcrl
jp
mov
adc
push
lahf
cmp
cs
add
xlat
pusha
xchg
cmp
dec
add
push
sbb
sbb
pop
cmp
popf
push
pop
jae
xor
xor
add
stos
or
pop
jnp
mov
xchg
jmp
xchg
cmp
or
fsubrp
xchg
out
icebp
in
aaa
movsl
aad
gs
pop
push
dec
add
shrl
and
nop
add
xchg
mov
jns
inc
ret
add
je
xor
sbb
xchg
call
xchg
add
sbbb
cmp
xor
and
push
ja
mov
add
test
out
push
and
mov
pop
jae
cmpsl
inc
lcall
push
ljmp
sahf
and
xchg
and
xchg
inc
int
movsb
mov
mov
mov
sub
mov
push
je
pop
mov
jg
faddl
icebp
push
mov
adc
jecxz
shrl
adcl
and
add
xor
clc
inc
pop
das
push
addl
incb
add
lds
inc
xchg
hlt
adc
sbb
dec
loope
push
test
ljmp
inc
aaa
push
cli
sub
push
inc
aam
aaa
arpl
inc
enter
inc
rcrl
dec
dec
jge
pushf
xor
xor
jp
bnd
shr
jno
sbb
adc
push
mov
fsts
inc
mov
aam
ret
and
xorb
push
add
pop
add
bndldx
pop
adc
pop
cld
cmpsb
adc
gs
jb
sarl
pushw
pop
or
mov
clc
cmpsb
jo
jb
imul
sub
push
roll
ss
fbld
dec
inc
pop
es
xor
fbld
popf
xor
pop
push
jge
cmp
ret
adc
push
add
lret
aas
mov
inc
xchg
sbb
or
adc
push
je
adc
int
loope
gs
je
cmp
loop
movsl
test
cmpsb
stos
fnstsw
inc
jl
je
pop
cmp
cltd
lcall
and
adc
stos
aam
into
jne
stos
insl
mov
adc
js
lcall
dec
xchg
sub
sub
sub
or
in
insb
scas
lcall
xor
lods
jo
cmpl
dec
stos
sub
cltd
sti
mov
adc
sbb
gs
mov
jne
push
sub
jo
mov
mov
or
or
mov
in
xor
mov
xchg
jmp
test
iret
sarb
adcl
decl
orb
xor
jp
inc
jb
add
add
stos
or
adc
inc
pop
adc
mov
sub
jb
loope
jns
dec
ja
and
xor
mov
dec
add
fstl
xor
lret
cmp
dec
push
sbb
test
jae
and
movsl
ja
jmp
bound
inc
mov
push
mov
hlt
dec
add
mov
pop
lods
test
push
aam
cld
mov
inc
xorb
ja
or
dec
test
test
mov
mov
cmp
and
and
mov
fcoms
push
rolb
or
adc
add
xor
push
xor
data16
bound
mov
pop
cmpsb
mov
fbld
movsb
mov
mov
movsb
lea
mov
sub
dec
cmp
outsb
in
ror
cmpsb
inc
add
mov
mov
cmpsl
add
sbb
andb
sbb
pop
in
mov
orl
out
sbb
and
loopne
inc
shl
sub
or
add
fstpl
rclb
dec
xchg
push
mov
sbb
loopne
add
mov
push
xlat
cbtw
or
test
mov
inc
sysret
adc
ficoml
push
lea
mov
jecxz
sub
call
dec
jl
sbb
sub
adcb
lds
push
orl
push
lcall
xchg
add
adc
sub
loope
xor
fildll
sbb
jle
sub
cs
fistpl
adc
test
jmp
das
test
rcrl
mov
push
ss
imul
adc
mov
xor
test
xor
pop
xor
enter
das
imul
adc
stc
mov
nop
and
adc
adc
push
add
cmp
xlat
pushf
and
pop
adc
rcll
aad
enter
mov
mov
xchg
mov
xchg
dec
mov
xchg
stos
cmp
adc
cs
add
add
dec
sub
cli
push
push
lret
inc
inc
aaa
and
arpl
jmp
push
insl
inc
lret
adc
adc
cmp
aad
aas
mov
mov
pop
sbb
in
inc
test
cmp
in
pop
scas
into
push
mov
mov
push
fdivs
push
or
xchg
lret
adc
hlt
popf
test
outsb
iret
data16
rep
loop
popa
sub
xchg
cmp
lahf
shl
push
xor
sub
add
pop
out
push
push
lahf
pusha
rolb
call
int
adc
stos
es
js
imul
pop
push
inc
push
xor
dec
adc
sbb
sbb
sub
adc
sub
js
sbb
rcll
xchg
and
cmp
cmp
xchg
ja
rcr
mov
add
inc
into
nop
mov
mov
add
nop
sub
push
and
out
shrb
xchg
push
and
cmpsb
adc
adc
iret
push
cmp
shrb
gs
sub
js
scas
jnp
xor
xor
cltd
mov
pop
je
add
mov
clc
shll
pop
push
lea
adcl
out
mov
mov
mov
sub
jg
xor
pop
cmp
cmpsb
and
or
add
cmp
cwtl
add
or
mov
cmp
inc
jnp
inc
inc
cmp
orl
aad
add
inc
xor
xchg
sub
mov
sbb
loop
ret
fyl2x
cmp
jecxz
sub
push
pop
and
sub
add
push
hlt
or
cmpsb
and
add
adc
or
test
dec
mov
call
dec
ret
or
test
cmpsl
loopne
cwtl
push
xor
jge
aaa
jo
lret
in
push
push
in
mov
lea
add
adc
and
loopne
repz
pop
xor
out
push
xor
mov
add
aam
mov
imul
cld
ret
jecxz
jb
orb
hlt
dec
mov
sub
add
out
xchg
loopne
lds
pop
jl
adc
mov
icebp
dec
sbb
or
daa
lahf
stos
outsl
xorl
or
fistpll
ss
cmp
mov
lretw
adc
test
add
outsl
aam
shl
aam
add
add
call
or
dec
push
dec
push
mov
xchg
sbb
cmp
insb
push
or
loope
test
cmpl
add
ljmp
mov
test
sub
test
push
int3
jl
icebp
sub
mov
lret
dec
and
sub
adc
inc
adc
sbb
fnstenv
push
mov
and
and
mov
pop
cmp
cmp
je
insl
add
loopne
outsb
and
pop
jmp
dec
cmp
push
std
push
fldl
push
das
js
sbbl
rcll
push
outsb
outsb
or
pop
jo
lret
add
es
sbb
ret
and
add
jmp
sbb
xor
test
push
mov
inc
les
loop
push
es
shrb
shl
fidivrs
or
fnsave
das
mov
pop
cmp
mov
or
int
dec
push
or
lea
push
notl
xor
repz
push
inc
inc
mov
stos
adc
push
scas
inc
mov
leave
movsl
data16
dec
and
pop
rolb
test
out
mov
mov
enter
insb
test
xchg
sub
mov
xor
repz
loop
or
cmp
or
sub
orb
add
dec
push
mov
fimull
pop
nop
xorl
mov
jmp
stos
mov
inc
lods
pop
lods
push
jb
out
mov
aad
cmp
inc
int
jae
cmp
out
add
pop
subb
rcr
cmp
mov
pop
mov
xchg
adc
lods
or
loope
out
das
arpl
or
cwtl
stos
mov
test
or
dec
fdivr
addb
cmp
push
int
lods
dec
frstor
sub
dec
call
sbbb
mov
jp
mov
mov
mov
push
jbe
inc
xor
movsl
jae
adc
daa
int3
and
xor
mov
pop
pushf
adc
aas
and
cmp
lods
popa
call
add
adc
inc
cld
lock
xor
and
push
jecxz
and
and
lcall
bound
push
or
dec
lds
jb
mov
or
push
sub
test
sbb
cwtl
and
adc
lock
sub
push
or
popf
cltd
lods
add
jmp
stos
dec
jp
aas
mov
inc
fcmovnbe
aam
sbb
or
cmp
pop
rcll
xor
addr16
adc
xchg
aam
test
shll
lds
adc
sub
cld
xchg
and
xor
mov
or
mov
sbb
fidivrl
stos
adc
test
fsts
xchg
pop
inc
xor
or
or
cmpsb
inc
push
add
test
in
mov
add
jae
pop
aas
sbb
and
loopne
cwtl
xor
dec
out
enter
dec
std
inc
add
lcall
lcall
addr16
dec
js
or
loop
xor
sub
xchg
movsl
mov
jg
or
add
ljmp
xchg
test
lahf
sbb
mov
sbb
sbb
xchg
out
fildl
adc
add
popa
ljmp
xor
or
cs
and
shl
xor
add
and
das
pop
fcomps
cmp
pop
fidivrs
push
and
push
pop
rorb
leave
js
bound
test
inc
in
mov
fdivs
aad
sbb
test
fwait
out
in
add
pop
aam
mov
out
loop
push
rorb
add
add
shrb
inc
adc
add
add
es
push
jbe
xchg
test
mov
mov
cmc
push
jns
inc
rcr
sar
adc
outsl
inc
cmp
popa
mov
mov
add
cmp
inc
cld
pusha
jnp
dec
rolb
inc
push
pop
lock
add
xchg
inc
and
repnz
add
jns
es
adc
inc
ret
mov
rcrl
fs
out
test
sub
or
call
shr
mull
fimuls
jge
rol
push
or
aam
push
cmc
js
testb
xor
jp
xchg
shl
mov
inc
or
and
loopne
mov
jbe
xchg
and
pop
fists
aam
dec
popa
shrb
sbbl
out
rcrl
les
push
and
push
inc
xor
cmp
dec
iret
mov
push
and
test
incl
pop
ret
shll
dec
clc
sbb
out
xor
sub
mov
lock
fidivl
movsl
or
mov
testb
ja
xor
xor
bound
inc
pop
pop
rol
dec
test
aas
or
shl
sar
and
pop
hlt
lds
pushf
das
fiadds
mov
maskmovq
shr
sbbw
pushf
and
pop
mov
push
int3
stos
ljmp
add
test
xchg
mov
xchg
out
rcll
das
xchg
test
movsb
ljmp
test
fidivrl
mov
shlb
test
push
test
mov
arpl
aam
sbb
jo
mov
pop
xor
jg
adc
mov
bnd
rolb
mov
popa
rorb
dec
add
pop
test
adc
pop
shll
pop
or
push
sbb
icebp
adc
pop
push
sub
mov
sbb
loopne
push
jae
in
inc
jae
and
push
and
pop
xor
xor
xchg
scas
out
and
dec
xchg
and
mov
subl
ret
jnp
lgs
or
inc
push
cwtl
call
jo
ja
mov
sub
js
insb
or
aam
mov
testl
mov
fisubrl
test
sbb
stos
fs
hlt
test
xor
mov
push
inc
pushf
push
jae
shlb
scas
mov
mov
mov
out
and
adc
jmp
rclb
mov
xchg
or
stos
mov
jno
loop
add
or
rolb
sub
test
aad
push
or
ljmp
xor
adc
rclb
sbb
rcll
mov
rcrl
sbb
inc
pop
lret
sbb
add
push
sbb
add
push
fsubrl
pop
pushf
or
mov
or
xchg
mov
xchg
and
push
xor
jmp
out
adcb
fldt
jo
add
lcall
out
adc
lcall
jae
fs
stos
push
jbe
xor
es
out
out
sbb
notb
stos
jmp
xchg
cmpsb
outsb
jle
and
mov
mov
inc
int
cmc
test
sahf
stc
pusha
mov
xorl
out
push
or
stos
mov
repz
mov
sbb
dec
sti
push
sbbb
je
sub
test
mov
mov
mov
ret
nop
mov
in
add
stos
lcall
stos
ret
or
xchg
or
sbb
clc
jo
or
cld
insb
xchg
mov
test
cs
cmpsl
adc
mov
xor
repz
jne
aad
sub
dec
mov
xor
add
sub
int
loopne
sub
inc
mov
add
cltd
ret
rclb
test
fisubl
adc
into
adc
rorl
mov
stos
sub
jg
mov
int3
sarl
mov
stc
push
test
loope
popl
addr16
cmp
or
lock
and
push
mov
sub
dec
xor
movntq
ret
pop
lahf
loopne
test
or
ret
loop
into
add
adc
mov
jmp
sahf
or
mov
mov
xlat
or
lret
or
inc
push
insl
xlat
pushf
xor
ss
push
sbbl
cmp
arpl
cmp
jo
xor
leave
push
loope
jne
mov
sbb
into
xchg
mov
fldl
push
loopne
xchg
add
mov
or
iret
inc
in
cmp
inc
and
xchg
mov
mov
push
adc
test
sti
pop
aad
shll
ret
and
rclb
add
sub
repz
jno
shlb
xor
repz
dec
xchg
dec
fmull
movl
aad
loopne
orl
xor
inc
pop
jae
jno
cmp
in
and
in
push
and
mov
mov
stos
lret
orl
jae
cmpl
dec
rol
lret
push
sbb
dec
sbb
repnz
or
mov
icebp
sub
mov
mov
jl
clc
add
or
sbb
add
roll
inc
shl
loope
ror
lods
icebp
pop
mov
add
pop
rorl
adc
lock
jg
push
dec
loopne
mov
repnz
xchg
test
into
mov
mov
mov
adc
adc
adc
imul
fnstsw
xor
negb
shr
sbb
ror
leave
mov
or
loop
ljmp
ds
push
imul
mov
pop
jne
rcrl
and
add
mov
and
test
sti
div
xchg
pop
fiadds
not
cmp
loop
or
mov
mov
sbb
mov
hlt
sub
cmovo
push
or
xchg
jmp
rolb
test
mov
push
dec
mov
jae
lahf
mov
dec
push
ss
in
rorb
aad
dec
push
mov
fisubrl
sbb
add
xor
cmp
xor
and
test
in
jmp
mov
sub
movsl
in
sub
sub
int
orl
lret
add
jo
sbb
outsl
mov
mov
sbb
push
ret
jno
jb
push
push
in
sub
jg
andb
sub
fadds
mov
test
lods
mov
push
mov
push
mov
je
andb
mov
mov
test
mov
daa
or
outsb
add
sti
jo
pop
int
push
loopne
or
add
test
in
jo
push
push
mov
adcb
int
sub
or
dec
or
push
sub
inc
mov
dec
pusha
jo
pop
scas
push
int3
add
cmp
mov
out
ja
int
loop
inc
icebp
and
fists
cmp
loop
and
pop
lods
xor
cmpsl
mov
add
incb
sbb
add
or
or
pusha
shlb
push
cmp
or
cltd
jmp
lret
fdivl
scas
ja
aam
aas
in
daa
aas
push
imull
pop
addr16
out
xchg
cld
push
in
hlt
insl
push
adc
in
and
imul
mov
mov
pop
str
movsl
andl
mov
fimuls
add
andl
adc
sbb
push
outsb
inc
xlat
cmp
xor
push
test
pop
dec
stos
ret
mov
push
or
mov
roll
in
pop
das
sbb
or
lods
fisubrl
push
mov
or
clc
sub
cmpsl
rcr
add
or
je
adc
jb
and
test
ret
sub
jge
xchg
in
add
push
xor
dec
call
sub
loopne
lds
sbb
add
mov
fcom
mov
dec
push
aas
sbb
clc
add
xchg
add
in
jo
pop
faddl
jp
inc
xchg
lcall
lock
cmp
or
mov
pusha
xor
add
or
add
movsb
sub
fwait
int
lods
outsb
div
adc
mov
fadds
sbb
addl
lahf
cwtl
jne
adc
ret
push
sar
outsb
cs
rcr
sbb
cld
adc
neg
lds
or
pop
dec
inc
fdivrl
adc
les
mov
adc
adc
insl
enter
loopne
jecxz
stc
inc
sub
mov
std
mov
jge
add
rorb
mov
sbb
inc
nop
repz
inc
cmp
and
pop
in
xor
cmc
in
inc
ret
jne
add
jne
test
sahf
rolb
xor
push
or
out
or
pusha
inc
je
jne
or
pusha
ljmp
mov
jo
test
or
mov
inc
neg
lcall
add
outsb
dec
and
mov
sbb
push
ss
inc
repz
or
cld
out
aam
xchg
cld
nop
pop
inc
add
inc
ret
bound
ds
add
mov
enter
pmulhw
stos
pop
adc
add
push
cmp
mov
jae
mov
movsl
inc
out
aaa
dec
lcall
popa
test
jne
cmp
fcmovb
sbb
cld
mov
inc
xor
jmp
mov
inc
je
push
xchg
mov
inc
ror
mov
add
inc
adc
inc
mov
push
hlt
add
push
subb
out
xchg
pusha
pop
fldcw
cwtl
cmpsl
cmp
sbb
add
mov
add
add
xchg
nop
add
mov
and
leave
sarb
xor
outsb
cwtl
or
add
jbe
push
shlb
or
jb
add
cmp
sbb
xchg
xchg
mov
mov
xor
lods
push
adc
or
push
jnp
adc
jo
cmpsb
inc
push
push
sub
movsb
push
xor
mov
adc
in
xor
lods
int
add
test
aam
adc
xorl
jno
sub
loop
icebp
pushf
sbb
sbb
fld
adc
push
imulb
sbb
andb
cld
mov
mov
test
mov
orb
les
ds
sub
fmuls
ljmp
and
push
lcall
lcall
imul
pop
outsb
fdivrs
fisubs
cs
pushl
fdivrs
sub
mov
push
sbb
pop
outsl
dec
xor
jp
and
mov
adc
in
les
xorb
adc
push
je
pop
add
dec
xor
adc
lods
add
jno
inc
inc
add
scas
sub
jg
ret
adc
mov
jne
sbb
and
daa
mov
xlat
xlat
mov
add
xor
and
xor
pop
push
xor
stos
stos
sbb
push
subl
jp
push
test
xor
jg
push
into
ljmp
inc
loopne
out
or
aaa
fbld
mov
add
icebp
add
in
js
adcb
pop
xadd
cmpsl
dec
movsb
or
jp
loop
mov
jo
and
fisttpl
mov
add
mov
sub
xorl
dec
mov
xchg
in
sub
sbb
andl
jle
loopne
jle
add
imul
lods
cwtl
roll
bound
cmp
push
xor
stos
ss
inc
outsb
adc
jno
dec
push
push
add
jo
add
inc
icebp
sbb
push
mov
adc
into
adcb
stos
in
or
nop
add
add
jbe
adc
ret
dec
push
call
add
push
sub
push
lods
fmull
dec
hlt
adc
scas
mov
xor
cmp
mov
orb
sub
sub
inc
std
or
mov
or
mov
and
push
cmpsb
or
xor
lea
mov
add
lods
sub
roll
jmp
fdivs
arpl
mov
daa
lds
mov
add
ret
lcall
add
inc
in
cmp
clc
sub
jbe
cmp
cmp
enter
icebp
test
push
loope
or
pop
jno
or
and
test
shr
pop
inc
cmp
fs
insl
mov
stos
add
enter
pop
jp
test
mov
add
cmp
push
sbb
in
pushf
lcall
movsb
mov
xadd
dec
inc
outsl
jae
lahf
js
cmp
leave
in
pusha
add
ret
pop
int
or
jae
shlb
jo
das
cmp
adc
or
int3
es
xorb
xor
and
dec
in
cli
mov
andl
xor
xchg
and
adc
add
xor
xor
pop
fcmove
mov
test
sti
jb
shlb
jo
jmp
pop
xchg
nop
mov
or
xchg
loope
push
push
xlat
jg
mov
mov
and
mov
loop
push
push
push
sub
jb
pushf
mov
sti
inc
popa
sub
sbb
or
loopne
adc
aas
fildll
gs
cmp
push
inc
andb
daa
dec
stc
call
fstl
push
inc
dec
xor
sub
inc
lds
jb
add
fidivrl
sub
sub
imul
popa
mov
mov
stos
lds
add
pop
xchg
xor
pop
mov
adc
mov
in
xor
fcom
push
push
xor
loopne
jo
push
pop
pop
sbb
add
push
mov
inc
and
int3
in
add
adc
xor
fcompl
or
out
ja
in
mov
repnz
xor
movsl
out
andl
sahf
sbb
enter
adc
and
stos
dec
push
inc
imul
loopne
rorb
call
and
ret
pop
xor
js
and
in
test
cld
aad
inc
and
mov
nop
aaa
arpl
pop
inc
pop
xorb
lea
mov
mov
pop
mov
add
add
push
int
lea
lret
xor
or
aad
test
sub
push
pop
mov
push
adc
mov
sbb
inc
push
push
lahf
sub
inc
dec
into
xchg
stos
or
or
inc
das
test
inc
push
iret
sub
inc
icebp
add
adc
xlat
pushf
leave
leave
ret
and
lea
loopne
std
out
push
stos
enter
in
jle
addb
loopne
or
xchg
test
mov
sahf
divl
push
cmc
add
loopne
add
packuswb
roll
aad
cmp
pop
sbb
push
pop
inc
jp
es
mov
das
add
stos
and
into
or
daa
call
push
movsb
sub
ret
ljmp
inc
shrl
loopne
sbb
roll
pop
call
and
arpl
lds
sub
sbb
es
dec
push
lahf
add
inc
pop
sbb
and
enter
cmc
mov
icebp
add
sahf
das
pop
sbb
lcall
inc
int3
sub
xor
clc
neg
addb
lret
or
stos
mov
aam
jnp
and
fsubrs
cmp
sti
jl
jo
fimull
ret
nop
lods
push
jp
mov
jl
das
fnsave
pusha
subb
jb
lock
mov
mov
mov
ret
and
int3
xor
sahf
sub
adc
lret
aad
push
xor
add
pop
push
mov
push
clc
push
mov
add
lods
lea
movsl
stos
mov
js,pt
or
adc
push
fnstsw
lret
out
mov
or
push
cmp
adc
mov
push
and
dec
test
pusha
ret
pop
inc
mov
pusha
enter
lods
push
mov
inc
orl
add
adc
fimuls
adcb
push
gs
mov
test
call
mov
sbb
stos
mov
adc
lea
scas
mov
xchg
rcrb
or
inc
mov
pop
mov
loope
cmp
cmp
aad
aam
adc
add
mov
add
roll
cmpsl
pop
stos
testl
xor
adc
cwtl
lods
rorb
in
rorb
in
or
xor
push
sbb
add
mov
inc
in
pop
rorl
xor
lcall
add
mov
pop
jbe
jae
jb
adc
daa
lock
fistps
and
mov
mov
sub
sbb
mov
jo
dec
daa
bound
jb
cs
cs
pop
out
mov
or
loop
push
jb
faddl
stos
sbb
lcall
sbb
pop
shlb
mov
test
into
loope
jnp
mov
push
and
mov
inc
test
xchg
and
pop
loopne
dec
loope
mov
pop
jg
pop
adc
out
loope
dec
or
fisttpl
adc
testl
mov
push
or
xor
inc
push
push
test
test
jnp
pop
test
ljmp
shll
inc
in
stos
pop
mov
pusha
adcb
ds
push
int
add
movsb
jno
lret
sub
mov
or
shrl
inc
int
xor
ret
icebp
add
mov
xchg
lcall
jns
cs
mov
cmp
int
cmp
pop
mov
pop
xchg
movsl
outsl
divl
cmp
lea
or
cltd
xor
pushf
xchg
xlat
add
cmp
xchg
inc
rcrb
add
jbe
xor
xchg
rclb
pop
in
fsubs
xor
mov
pop
pop
sub
push
add
lds
jno
inc
add
adc
adc
lcall
lods
movl
lret
add
adc
xchg
adc
adc
cld
and
loop
cmp
cmp
addb
mov
es
or
cmp
inc
or
int3
loope
fldenv
fcomp
das
add
mov
mov
cmp
pop
inc
push
add
dec
iret
add
mov
or
sub
add
es
cmpsb
dec
xchg
dec
mov
xor
jg
sbb
adc
fildll
data16
mov
inc
push
cld
push
push
or
push
sub
call
inc
pop
mov
icebp
insb
push
push
fsubrl
sbb
adc
testl
or
inc
mov
or
test
pop
sbb
ret
clc
add
dec
adc
orl
lods
fwait
mov
sbbb
dec
inc
sub
shl
mulb
xor
pop
fdivs
jnp
out
mov
xchg
es
test
loopne
mov
pop
add
xchg
and
inc
sbb
stos
inc
fmull
or
iret
push
stos
insb
cmp
fs
or
push
mov
inc
test
xorl
push
inc
or
test
andb
push
jne
mov
sbb
sub
add
gs
push
inc
lods
xor
into
aad
pop
aaa
cmp
push
inc
push
test
push
test
push
xor
dec
push
stos
mov
push
sub
std
jno
cmp
push
dec
scas
adc
popl
cmp
rolb
enter
out
ret
dec
xor
cmpsb
call
jp
std
mov
mov
pop
pusha
lret
cwtl
aaa
push
loope
jo
sub
push
xor
and
add
mov
shrb
pop
mov
js
sub
out
or
xchg
fisubs
lahf
add
insl
data16
aam
or
add
xor
xchg
xchg
jo
shrb
popa
enter
inc
iret
nop
shlb
dec
stc
sbb
fildl
add
cmp
imul
pop
or
add
xor
add
shl
push
and
daa
pop
add
rorb
inc
in
mov
ljmp
sbb
orb
pop
adc
xchg
sub
int
add
out
outsb
pop
xor
imul
in
xor
ds
addl
dec
fidivrl
adc
out
jle
push
mov
in
or
mov
xchg
fxch
cli
and
test
leave
addr16
enter
sbb
mov
shld
adc
insb
pop
jns
inc
add
jp
xchg
cmpsb
sbb
rorb
add
flds
outsl
push
cmc
pop
jb
rorl
add
mov
hlt
int3
add
push
or
or
adc
lea
clc
push
lcall
pushf
lock
fcoms
shl
xchg
sub
insl
sar
cld
xchg
fwait
fwait
push
pop
mov
mov
aad
mov
les
dec
adc
mov
cmc
aas
ss
ror
xor
push
mov
daa
or
out
divb
shrl
insb
mov
mov
and
dec
popf
add
out
lret
aaa
ret
cs
popa
nop
adc
adc
sbb
add
and
aaa
test
sahf
add
pop
mov
outsb
shlb
ljmp
mov
lcall
jl
cwtl
loop
mov
ja
das
push
or
adc
test
add
inc
loope
sbb
ss
sbb
push
inc
fdivrs
push
test
xorb
mov
sbb
and
cmp
xchg
sbb
dec
push
inc
mov
xor
mov
or
int
mov
pop
sub
cmpsl
shrl
jb
xor
sar
dec
imul
imul
cmp
aad
add
sub
cli
xor
fsubr
shrb
adc
mov
adc
scas
stos
jo
pushf
jne
mov
shr
cmc
jo
add
jno
test
pushf
push
inc
and
pop
adc
mov
mov
mov
ja
cs
das
sub
loopne
fisubl
js
fs
pop
mov
aam
aad
ds
ja
inc
push
stos
lret
ljmp
bound
push
or
push
cmp
mov
jae
mov
ljmp
cltd
ja
loopne
mov
or
movsl
fstps
or
lods
pop
aas
push
or
and
jo
inc
cmpsb
fstps
fmulp
push
push
sbb
insl
int3
and
sbb
aas
fists
adc
movsb
sub
adc
and
out
xor
or
push
cltd
pop
adc
cmpsb
dec
loope
dec
hlt
enter
xor
loope
add
scas
sbb
xor
enter
push
andl
cmp
sbb
add
push
xor
sbb
int
xchg
and
ljmp
mov
push
push
xor
mov
push
xchg
xor
mov
icebp
andb
pop
mov
sbb
mov
jo
mulb
cwtl
subl
add
jge
icebp
push
sbb
mov
std
mov
add
arpl
sbb
mov
dec
shrl
cmp
jge
imul
sub
add
stos
inc
mov
push
jo
arpl
xor
xchg
inc
inc
push
cmp
int3
jo
or
inc
imul
pop
fisttpl
fwait
lods
jae
cmp
lods
popf
dec
and
fdivs
mov
sbb
sbb
ss
inc
jo
push
mov
addr16
leave
inc
psrlw
sbb
xchg
insb
rorb
pushf
mov
mov
push
test
xor
ja
cmp
dec
pop
mov
test
mov
cwtl
and
push
jle
sbb
mov
pop
add
pop
add
cld
icebp
mov
fisubrs
loop
int3
cmp
push
xchg
imul
aam
mov
pop
mov
addr16
jecxz
add
fucom
cmpsl
daa
or
std
fists
dec
nop
cltd
rcr
rol
cld
jnp
adc
scas
add
lret
shll
je
aam
in
filds
jmp
es
rorb
inc
out
push
adc
push
mov
in
sub
xor
xlat
nop
xor
or
xor
mov
xchg
add
sbb
jbe
push
sbb
sarl
lahf
js
mov
icebp
mov
or
xlat
pushf
stos
push
push
lret
addl
test
xor
popa
add
loope
xchg
test
push
pusha
jb
xlat
pop
push
add
ret
daa
sub
xchg
jae
sbb
cmp
and
js
or
adc
cmp
or
test
ficoms
loopne
enter
inc
in
lds
add
mov
pop
adc
lea
mov
fnstenv
inc
xor
stos
push
add
xchg
sbb
das
loop
inc
cmpsl
xlat
adc
or
dec
icebp
stos
add
add
xorl
sub
lret
pop
aam
jmp
and
cmp
outsl
shl
cmp
add
add
jp
sbb
jne
fdiv
xchg
push
hlt
insl
lcall
mov
mov
js
aam
xchg
xor
inc
inc
sub
loope
shll
adc
subb
out
in
movsl
pop
scas
sbb
jmp
idivl
clc
lahf
ret
add
jno
push
jo
jo
repz
mov
jb
ret
fcompl
mov
adcl
lods
mov
das
test
xchg
test
sub
addr16
test
push
loopne
incl
test
scas
aam
out
pushf
xorl
mov
adc
outsb
das
fiadds
inc
mov
cmp
and
sub
imul
pop
rcll
and
cmp
loopne
inc
cwtl
sbb
into
adc
cmp
jae
nop
and
mov
out
inc
pop
lcall
push
or
push
imul
add
popf
popf
pop
sub
push
xchg
add
mov
test
push
and
es
push
jo
inc
xor
test
xchg
mov
push
dec
cmp
mov
scas
lret
inc
imul
sub
and
and
inc
push
std
pusha
xchg
lret
in
aas
loopne
daa
and
jmp
sti
in
loopne
sub
adc
lods
add
add
inc
xor
cmpsl
mov
adc
lods
mov
adc
and
or
fs
std
movsl
es
pop
in
adc
testb
stos
cmp
in
dec
ret
pop
cmp
inc
and
das
dec
int
sbb
push
jne
jno
enter
jne
jae
jb
lods
sub
enter
out
daa
movsb
mov
mov
or
dec
daa
and
lret
sbb
repz
jns
sub
js
mov
lret
ds
int
add
push
sub
and
in
pushf
xor
stos
fs
jo
sbb
mov
pop
push
jo
or
pushl
enter
in
jno
cmc
fdiv
in
add
or
or
push
cmpsb
lahf
out
mov
mov
ljmp
or
jp
hlt
sbb
dec
and
not
lock
call
cmp
mov
push
sub
sbb
unpckhps
scas
bound
adcb
fbstp
movl
xlat
or
adc
test
xor
jmp
cmc
mov
rcr
sub
cmp
flds
sub
addl
test
jbe
sahf
jne
mov
cwtl
sbbb
imul
push
jnp
push
test
jne
adc
mov
or
push
scas
or
mov
pop
addb
fiadds
repz
inc
cld
jns
mov
or
loopne
cli
add
or
jge
add
sub
mov
rcr
sub
cmovge
aad
sub
dec
cmp
dec
push
addb
or
aas
in
and
and
cwtl
loopne
adc
push
fidivrs
add
xchg
mov
sar
inc
into
sub
inc
mov
push
sbb
and
decb
push
mov
mov
cmp
hlt
add
jae
ljmp
jnp
cli
pop
push
ror
xor
and
push
xor
mov
arpl
or
push
stos
das
xor
add
and
data16
cltd
cld
or
dec
lds
shl
mov
push
jg
add
sub
pop
push
loop
rorl
push
or
add
dec
inc
mov
insl
in
xchg
ljmp
mov
cmp
jle
testl
xchg
leave
pop
cld
jno
mov
leave
dec
rclb
and
leave
loop
add
lods
sub
lock
dec
add
ret
pop
pusha
mov
xchg
lods
add
push
ja
mov
jge
inc
add
dec
xchg
iret
cmp
push
jno
or
jne
enter
stos
out
sub
sub
sbb
rclb
jb
and
xor
cs
lcall
movsl
xchg
pop
pop
stos
out
leave
adc
pop
xor
or
cmpsl
fldt
fidivs
cmp
mov
stos
test
adc
xchg
xorl
jae
inc
sbb
test
mov
out
insl
je
xchg
pop
xor
xchg
orl
xchg
xchg
ljmp
dec
sbb
mov
push
lods
mov
jb
push
pop
cmpsb
dec
mov
int
pop
and
add
push
jb
xchg
cmpl
rcrl
xchg
and
pop
push
pop
pop
adc
xchg
mov
push
push
sbb
pop
rcll
and
loopne
push
sbbb
adc
pop
loope
xor
addl
adc
sub
ds
cwtl
push
ja
add
pop
divl
loope
pop
stos
add
add
test
fdivs
jo
sarb
mov
aas
jl
mov
loop
subl
pop
and
lret
dec
xchg
ljmp
push
push
ficompl
adc
call
jmp
bsr
or
leave
ret
mov
lcall
lock
xor
fcoms
push
push
test
mov
cwtl
outsb
dec
fidivrl
xor
jl
outsl
clc
mov
jle
jae
filds
and
pop
xlat
pop
inc
adc
fucom
xor
sub
cmpsl
aam
xor
push
cmp
xor
and
push
das
int3
dec
mov
pop
push
incl
jo
and
loop
mov
ret
or
add
push
adc
rcrb
adc
and
shl
add
ss
cmp
mov
or
sti
or
inc
dec
sub
sbb
sbb
fisubrs
fisubrs
sbb
jae
ljmp
or
xorb
mov
mov
lds
cwtl
adc
pop
mov
repz
adc
add
inc
int3
push
inc
flds
movsb
add
push
push
jb
ret
jns
movsb
cmp
adc
mov
shlb
int3
data16
mov
addl
sbb
stos
xor
sahf
shll
lock
popa
adc
pop
push
sbb
inc
mov
push
aam
aam
cmp
inc
push
xchg
lds
mov
cmpsl
and
or
into
or
dec
mov
pusha
shl
sub
cltd
mov
or
out
adc
push
shlb
xor
loop
xor
in
dec
inc
xchg
aaa
dec
flds
pop
pusha
sbb
cmp
mov
push
cmp
orl
rolb
cmp
sbb
pusha
jnp
pop
push
jmp
inc
ror
add
adc
inc
push
repnz
or
pop
xor
push
loop
mov
test
in
sahf
inc
fmull
ljmp
test
outsl
pop
add
add
xchg
enter
pop
sarb
adc
pushl
or
loopne
adc
cmp
sub
mov
rcr
jnp
out
shlb
pop
and
adc
ss
pop
cmp
orl
shll
in
jne
je
and
lods
fsubs
mov
js
push
inc
push
push
mov
lahf
xchg
das
filds
add
in
int
xor
and
push
mov
ret
loope
dec
inc
adc
imul
dec
and
cmp
adc
xchg
xlat
mov
inc
jle
mov
add
push
and
js
xor
ficomps
cmp
add
lods
aaa
sub
sbb
mov
dec
int3
sbb
test
add
mov
push
push
add
repz
in
inc
or
inc
mov
xchg
loopne
xchg
ss
or
or
cmp
out
inc
mov
ss
shll
popa
mov
pop
mov
ret
adc
mov
dec
daa
data16
cli
in
shll
push
cld
bound
lock
mov
sub
pop
jo
inc
push
data16
add
sub
mov
or
mov
and
loope
xor
adc
inc
imul
movsl
cmp
sbb
add
aas
pop
or
xchg
icebp
inc
sbb
inc
pop
push
or
sub
cmp
add
or
inc
test
push
sbb
rolb
scas
clc
inc
mov
and
push
loopne
cmp
xchg
out
inc
rorb
sub
add
add
mov
rorl
outsl
es
popf
or
xor
or
faddl
adc
push
mov
loope
xor
fwait
lret
lds
sub
addb
xor
mov
push
sub
xor
or
cwtl
xor
dec
mov
push
es
jb
incb
call
xor
mov
fcompl
dec
mov
ss
add
adc
or
adc
scas
sub
addb
cs
jno
xchg
mov
sub
jnp
mov
mull
mov
lcall
inc
inc
and
test
mov
scas
loopne
pop
jo
stos
push
mov
pop
into
jo
inc
mov
cmp
stos
adc
add
in
daa
push
out
sbb
pop
shrl
clc
or
aas
and
mov
lods
adcb
pop
push
cmp
push
movsl
push
imul
mov
out
test
mov
scas
lcall
mov
jl
push
xorb
xchg
adc
mov
sbb
xor
mov
inc
gs
cmp
add
push
jecxz
outsl
adc
pushf
mov
adc
subl
push
lods
add
movsl
xor
xorb
jmp
sbb
inc
add
aaa
cmp
jne
jno
xor
xlat
nop
push
int
sarb
jne
inc
sub
leave
scas
adc
sbb
test
fwait
cld
or
xchg
lcall
and
xchg
and
repnz
scas
lret
cmp
aam
roll
andl
mov
addr16
enter
stc
in
xchg
and
mov
lcall
aam
cmp
push
imul
jb
xchg
pusha
das
movsb
mov
and
mov
enter
sti
mov
cmpsb
or
adc
popl
add
sub
fcoms
callw
mov
aad
inc
jnp
cwtl
rcrb
add
lret
mov
mov
ds
push
cmp
mov
mov
popa
js
sub
dec
dec
roll
or
scas
push
push
inc
sub
sbb
adc
js
add
and
xor
out
or
mov
leave
xchg
or
add
ja
jp
int3
inc
and
sbb
les
mov
out
or
lock
pop
push
mov
lea
aad
push
in
ds
and
pop
or
adc
or
icebp
into
push
xchg
mov
inc
test
xchg
or
mov
mov
sbb
sbbl
cmp
adc
imul
pusha
jae
jne
pop
mov
sub
stos
xor
pop
sub
or
lds
add
xor
cli
outsb
ljmp
xor
push
mov
xchg
mov
inc
cmp
cmp
je
xor
add
mov
adcb
sbb
pop
nop
add
out
cmp
test
mov
push
pop
les
sbb
sub
movsl
jno
cltd
adc
int
push
adc
push
pop
test
nop
add
gs
sub
stos
lock
and
pop
in
sar
shrb
bound
push
bound
iret
add
call
jl
arpl
lcall
xor
dec
nop
mov
mov
or
sar
out
mov
test
fsubrs
push
pop
jl
dec
adc
mov
dec
cmp
pop
and
inc
or
mov
in
or
pop
sahf
and
in
popa
test
ja
push
add
lret
mov
inc
inc
xchg
mov
pop
add
push
add
lods
loope
xchg
jne
inc
insl
add
imul
mov
outsb
or
jo
iret
or
fs
addb
xor
or
and
jecxz
sub
or
or
mov
push
aas
or
push
jg
mov
bound
mov
add
scas
rcl
add
bound
dec
popa
mov
push
xchg
test
sbb
test
sub
push
add
fistl
adc
daa
popa
push
push
add
and
testb
adc
push
scas
stos
in
xchg
stc
sub
mov
and
mov
sub
xchg
lret
bound
dec
add
test
push
decb
adc
dec
lods
mov
lds
mov
sub
les
or
and
daa
xchg
push
pop
sub
test
lret
lods
cmpsb
or
and
sub
adc
adc
dec
add
and
rcrb
xlat
pop
stos
sbb
pushf
aad
aad
xchg
sbbl
lret
ret
xchg
call
fadd
lock
add
push
mov
pop
add
clc
inc
nop
add
jne
xchg
into
mov
or
sub
outsl
add
jo
in
int
push
mov
ret
mull
jg
jne
xchg
jae
xchg
dec
xchg
adc
sbb
jnp
jle
or
in
lods
dec
mov
inc
sbb
sub
xchg
or
xor
imul
add
cmpsb
mov
test
mull
mov
pop
dec
sub
fwait
stos
mov
push
and
dec
in
or
insl
xchg
jo
mov
nop
mov
mov
mov
call
inc
clc
es
mov
mov
cmp
out
movsl
shl
xor
xor
adcl
bound
dec
pop
xor
sbb
popfw
enter
mov
dec
loop
repz
sbb
js
enter
mov
into
scas
int
push
enter
add
dec
in
int
push
adc
sub
adc
mov
sbb
add
imulb
pop
loope
adc
mov
mov
js
pusha
mov
in
mov
pop
xor
mov
jb
mov
add
xor
dec
in
inc
inc
stos
and
dec
mov
pop
adc
ret
out
xchg
pop
xor
mov
xchg
xor
test
add
and
lahf
mov
test
xchg
mov
xor
or
jg
sub
shrb
cmpb
scas
cmp
out
mov
test
andl
int
xchg
sub
aad
sub
mov
dec
in
dec
nop
sbb
daa
loop
adc
in
out
leave
test
outsb
stos
sbb
and
xchg
dec
pop
xchg
and
dec
push
or
push
inc
lret
scas
xor
pop
lds
push
xchg
mov
lcall
ja
shlb
xlat
mov
push
jae
cmpsb
lods
outsl
cmpsl
jne
dec
sbb
stos
stc
cmp
lea
push
push
mov
and
fcmove
mov
aas
jnp
out
mov
mov
sub
xor
jb
mov
push
add
cmp
mov
mov
sti
out
daa
adc
int
push
mov
pop
int
mov
leave
and
adc
mov
mov
ja
push
pop
daa
xor
add
jae
rcll
in
or
push
scas
inc
dec
ljmp
in
loopne
mov
add
mov
not
or
test
lea
xor
add
test
adcb
xchg
test
lcall
cwtl
pop
test
imul
add
movsl
push
pushf
xchg
or
push
push
push
daa
cltd
out
xchg
scas
je
scas
aas
push
add
pop
pop
ret
mov
or
push
dec
pushf
sbb
push
and
jb
and
cmp
sbb
cmpsl
adc
and
and
xor
add
push
pop
xor
insl
cmp
cwtl
push
notb
aad
or
pop
imul
push
cmp
cmpsb
jb
cmpsb
add
dec
inc
inc
test
sbb
mov
jge
mov
mov
jo
xor
sbb
mov
mov
mov
ljmp
fildll
pop
test
mov
test
ror
rorl
adc
out
dec
fcom
add
clc
outsl
fs
out
in
mov
sub
add
push
push
lcall
add
mov
test
jo
sbb
jb
add
add
and
or
cmp
pop
sbb
sbb
mov
push
add
sbb
in
frstor
in
icebp
rcrb
sbbb
into
jb
js
popf
stos
loop
mov
cmp
xchg
rolb
lret
popa
clc
push
ret
test
xor
popa
jo
popf
sub
imul
in
sbb
pop
mov
adc
jo
or
dec
add
xorl
sbb
adc
lcall
and
stos
or
and
addb
int3
fiaddl
pop
add
mov
ficompl
lcall
lcall
mov
imul
pop
imul
or
pop
xor
pop
xchg
mov
add
mov
pop
shrl
pop
push
add
shlb
in
push
mov
sub
mov
out
cmp
push
dec
testl
mov
shl
lcall
fs
dec
push
mov
stos
cmp
jo
dec
cmp
sbb
daa
sub
cmpsb
adc
mov
add
and
push
enter
out
mov
push
fsub
mov
and
add
adc
clc
cmc
shll
jae
hlt
mov
insl
cltd
aad
rcr
incl
pusha
dec
jge
sahf
outsb
out
mull
dec
add
andl
lret
or
inc
aam
lret
movsb
clc
push
lock
and
or
xchg
cld
sbb
and
repnz
call
std
adc
xor
ss
xlat
sarl
mov
adc
mov
pop
or
pop
add
insb
mov
daa
xorb
sti
lcall
loop
ljmpw
push
inc
sbbb
inc
push
cmp
loopne
lds
pop
adc
out
jbe
pop
adc
dec
sub
xchg
call
into
sbb
insl
add
adc
adc
adc
xchg
xchg
lods
adc
loopne
jo
add
dec
nop
sub
mov
das
mov
mov
aaa
push
movsl
aam
fidivrl
jg
sub
cmpsb
add
je
adc
sbb
rcr
dec
and
scas
js
pop
cld
lock
repnz
jo
clc
prefetchw
sub
add
pusha
sbb
push
rolb
xchg
add
sub
xchg
rorb
dec
sub
add
xor
xchg
or
shlb
or
loope
loopne
sub
loope
movsl
stos
arpl
dec
loopne
loope
mov
xor
pop
add
jle
jecxz
add
push
mov
add
rorl
loop
add
push
lods
pop
jge
pusha
stos
cs
les
or
flds
loopne
lahf
xlat
sbb
pop
cmp
jne
pop
hlt
cmp
cld
mov
or
stos
cwtl
add
add
cwtl
push
cmp
jo
andb
and
or
popf
into
pop
push
aam
sarl
xor
jo
shll
add
rorb
add
push
xor
inc
mov
cwtl
cmp
gs
or
pop
cmp
inc
addr16
daa
cmp
icebp
adc
jecxz
ret
ret
adc
xchg
inc
xorb
xor
pop
cmp
adc
adc
roll
int
arpl
jl
loop
jmp
cmp
and
sbb
push
fimuls
loope
jle
inc
add
sub
mov
iret
mov
sbb
notb
sub
addr16
rcrl
loopne
sbb
fcoml
clc
arpl
movsl
jmp
test
ja
push
nop
push
dec
sbb
add
jb
lds
aad
lret
xor
mov
and
das
cmp
xchg
mov
test
ret
nop
or
daa
into
cmpb
movsl
or
out
lea
mov
xchg
ja
cld
in
mov
add
cwtl
add
arpl
lock
cmp
fwait
cmc
clc
sub
xlat
add
cmc
movsl
mov
sbb
xor
loope
cmp
or
xor
in
cmpb
adc
incb
add
or
sub
daa
xchg
pop
je
or
jns
ret
je
jle
xlat
push
cmp
dec
cld
aam
movb
pusha
sub
adc
flds
das
scas
lcall
cmpsl
mov
mov
xor
pop
inc
inc
out
sbb
pop
dec
sbb
fadds
push
rorb
push
cmp
cmpsb
sbb
movb
call
sbb
add
cmp
leave
mov
inc
mov
int
jecxz
lods
mov
testl
cmp
lds
dec
add
pop
push
mov
mov
mov
mov
adc
lea
lret
shrl
outsb
jo
aaa
add
mov
adc
adc
mov
add
leave
lcall
je
xlat
sub
sbb
cli
test
jne
push
rcl
xor
fucomip
cmpsb
pusha
rorb
int3
mov
adc
xlat
xor
hlt
pusha
lock
les
sbb
dec
sbbl
enter
xorb
dec
jl
rolb
jmp
test
je
add
loop
mov
enter
sbb
jnp
ffreep
cmp
pusha
add
mov
xor
sbb
jbe
clc
pop
add
mov
xchg
xchg
adc
adc
cwtl
adc
push
xor
mov
inc
dec
cwtl
adcw
cld
add
xchg
push
cmp
in
popf
es
jl
pop
inc
jae
js
fdivs
cmovl
adc
mov
jbe
loopne
xor
cwtl
rcrl
xor
jbe
lahf
fwait
sub
rol
push
pminsw
xor
insl
aas
rcrl
notb
add
das
cmc
mov
loope
sbb
xor
sbb
xor
push
sbb
cmp
xor
out
subl
addr16
sub
add
push
xchg
lds
mov
mov
fcom
testl
or
jp
test
mov
pop
fistps
push
mov
ret
xor
sub
std
out
inc
test
jns
mov
push
ds
or
sbb
arpl
pop
or
inc
shrb
dec
scas
jg
xchg
mov
lcall
shlb
mov
fiadds
dec
fcmovbe
sbb
sbb
call
mov
icebp
outsl
add
jo
je
add
xchg
dec
inc
pushw
daa
addl
dec
sbb
ret
idiv
push
push
cmp
lds
leave
adc
in
ja
sti
jmp
add
xor
push
sbb
faddl
repz
fs
cli
add
sbb
or
dec
andb
push
xchg
or
fisubrl
and
jl
scas
shl
push
outsl
push
in
movsl
xor
sub
bound
mov
push
ret
jne
pop
push
movsb
or
jo
inc
and
inc
cmpsl
cmp
mov
push
fcmovb
inc
mov
test
add
or
out
adc
ret
movsb
outsl
sbb
mov
addb
inc
movsb
mov
push
and
or
mov
or
add
xlat
sub
xchg
pop
push
test
push
nop
pushf
popa
inc
cmp
nop
loope
repz
cmp
int
loop
mov
pop
push
add
hlt
pop
pusha
push
xchg
mov
stos
sub
testb
or
out
cmp
outsl
cmpsb
add
or
xchg
popa
cmp
popf
or
cmp
inc
add
orb
ljmp
add
aam
or
int
and
xor
push
pop
sbb
push
call
adc
addr16
mov
mov
adc
jne
or
and
dec
sbb
movsb
sbb
dec
push
call
add
mov
icebp
xor
and
outsb
out
dec
arpl
inc
pop
sti
sub
rorl
adc
gs
or
loop
mov
mov
or
push
mov
mov
push
cmp
ja
es
popa
mov
cmc
iret
fmul
andl
jae
addr16
loopne
or
cld
or
ja
adc
or
adc
adc
jb
and
cmp
adc
sub
out
add
xor
out
or
and
ror
mov
inc
xor
test
scas
push
and
add
mov
sub
dec
inc
push
adc
or
push
leave
stc
pop
push
test
jae
aam
nop
xor
rcrl
jge
dec
leave
or
inc
xchg
repz
popf
lea
sbb
fdivr
and
and
sub
inc
jge
adc
cmc
filds
out
sub
cmc
stc
mov
negb
lcall
es
into
mov
jmp
mov
test
dec
push
pop
sahf
cmp
push
add
into
push
dec
loope
pop
sbb
or
stos
xor
xchg
or
mov
or
add
adc
sbb
xor
add
dec
out
sbb
ljmp
mov
adc
repnz
fildl
movsb
jp
pop
or
jno
sbb
xchg
fwait
jne
fistpl
mov
inc
mov
inc
mov
cmp
inc
icebp
lock
sbb
inc
adc
or
mov
jecxz
dec
jle
fcomp
xchg
sbb
cmp
lahf
sbb
mov
fcmovnbe
add
lods
inc
adc
scas
lods
inc
inc
mov
test
mov
and
or
mov
jmp
xchg
filds
pop
pop
add
repz
sbb
or
dec
push
jo
mov
or
cmp
lea
jl
data16
dec
xchg
or
decb
pop
sbb
subb
or
fidivl
orb
hlt
or
out
cmp
and
add
dec
stos
cmp
push
test
mov
jl
inc
cmp
mov
orb
cmp
or
in
ret
int3
push
xorb
in
sbb
ret
stos
and
popf
adc
push
cmpsl
ret
cmpsl
gs
jne
filds
or
xor
call
pop
and
mov
icebp
pop
mov
lods
ret
in
out
and
mov
add
sbb
aad
push
bound
add
sbb
pop
mov
int
mov
addr16
ljmp
mov
test
stos
out
add
dec
cmc
fadd
or
add
mov
xadd
add
pushl
cmp
sub
xor
and
add
pop
or
movsb
or
adc
cli
add
pop
xchg
ja
push
inc
pop
pop
cmp
adcb
iret
add
lock
push
and
mov
call
leave
aas
test
jne
sbb
sbb
lods
es
int3
or
sbbb
cld
inc
imul
movsb
lcall
xor
mov
or
adc
ds
mov
out
sbb
jnp
lea
popf
jecxz
push
stos
jmp
test
push
into
fld
jp
adc
lret
mov
pop
shlb
test
push
jnp
data16
cmp
add
out
pop
mov
std
adc
mov
cmp
rclb
mov
inc
popa
mov
dec
cmc
inc
clc
fdivrl
in
pushf
xor
mov
mov
pusha
push
out
sub
xor
int
add
test
clc
shll
shll
pop
pusha
sub
cmp
mov
fimull
jnp
fsubrs
inc
or
lea
add
imul
add
add
jnp
mov
les
test
add
push
jp
sbb
ss
lret
dec
push
int3
int3
loope
and
rorb
js
mov
outsl
fucom
fcoms
loopne
cmp
inc
shll
pop
jo
je
push
mov
ret
sbb
stos
add
mov
sar
dec
or
sub
jno
loopne
loopne
push
or
push
in
dec
test
arpl
add
xchg
out
pop
and
iret
gs
cmc
icebp
xor
subl
mov
stos
rolb
xchg
xor
cld
mov
lahf
fs
aad
and
repnz
cs
fbld
and
sbb
les
int
adc
cli
push
xor
sti
imul
adc
repnz
cmpsb
js
or
and
mov
mov
ret
jo
rcrb
cmpsb
push
mov
adc
in
fildl
sub
movsl
mov
pop
inc
adc
add
adc
cmc
add
mov
adc
clc
xchg
inc
out
cwtl
daa
mov
mov
xchg
xchg
pop
nop
xchg
bound
adc
rolb
adc
cmp
loope
pop
xchg
aad
sbb
nop
in
pop
data16
dec
stos
mov
das
inc
scas
add
push
and
nop
pop
push
aaa
sub
repnz
int
int
jecxz
sbb
mov
test
mov
mov
push
jmp
in
cmp
out
pop
push
or
and
nop
repz
lods
test
ret
outsb
movsl
or
lcall
push
cmp
mov
in
push
xor
ret
in
sub
pusha
jecxz
into
inc
fcomps
out
data16
sbb
sbb
mov
insb
add
inc
testl
cmp
inc
push
add
fadd
add
or
decb
into
push
mov
or
push
testb
cmpsl
gs
adc
lods
aad
cwtl
cmp
jl
ljmp
add
mov
jns
dec
sar
fcompl
loopne
clc
iret
inc
mov
pop
push
fcmovbe
inc
or
adc
or
mov
aad
or
enter
xor
add
push
add
jno
movb
imul
rclb
pop
add
xchg
cmp
lods
inc
jne
and
pop
and
add
add
add
push
xor
icebp
addr16
sbb
fstps
xor
rorl
int3
and
add
test
notb
add
pop
rclb
mov
outsb
dec
rcr
and
aas
add
outsl
jmp
test
push
repnz
xchg
lds
inc
ror
and
mov
scas
addr16
push
cmp
push
mov
aam
dec
mov
push
pop
loopne
or
ss
insb
sbb
mov
xchg
jmp
loop
shlb
outsl
loopne
les
mov
sub
out
push
jno
mov
jo
ret
cmpl
mov
inc
mov
add
or
inc
mov
adc
dec
mov
imul
mov
sub
or
ljmp
cld
cmpsb
mov
mov
popa
mov
add
sub
leave
fdiv
enter
fcoml
dec
sbbb
enter
push
mov
movsb
push
fisttpl
fsts
fldt
sub
mov
mov
cli
rolb
jb
aas
xchg
adc
in
inc
lea
loopne
jp
stos
jo
push
xor
mov
adc
iret
pop
cmpsb
adc
and
push
adc
addb
das
adc
ss
adc
mov
gs
dec
xchg
pop
out
sbb
cmp
adc
mov
ficompl
out
inc
ret
cmp
mov
iret
mov
sub
adc
enter
jmp
push
jecxz
rorl
les
or
lods
sbb
movsb
cltd
cmp
push
dec
popf
push
pushf
mov
inc
stos
repnz
clc
das
mov
xor
aam
inc
xor
add
inc
inc
sub
pop
adc
mov
add
dec
adc
orb
mov
and
jp
enter
gs
dec
je
rcrl
or
sub
dec
repnz
push
lock
sbb
mov
pop
push
add
add
and
sti
inc
push
test
mov
adc
arpl
testl
pop
cmp
jae
dec
sbb
mov
and
lret
jl
or
pop
subb
jmp
shll
test
inc
int3
xor
aam
add
sub
pop
xchg
or
push
int3
clc
and
jmp
add
jb
inc
stos
mov
gs
stos
mov
fmull
sub
add
addr16
out
cmp
sbb
cld
jmp
out
pop
pop
cmp
or
in
stc
pop
push
frstor
int3
jl
xor
and
scas
sbb
add
xchg
std
ret
sub
fldcw
push
insb
sti
dec
inc
cmp
or
mov
fcoml
pop
push
jge
mov
adc
adcb
cmpsl
jecxz
and
pop
addl
test
mov
jne
or
or
test
je
pop
sbb
push
int3
ljmp
jne
ficomps
dec
loopne
sbb
sub
pop
pop
lcall
sbb
adc
adc
movsb
and
loope
push
push
sbb
sbb
sub
mov
vprotd
inc
ficoml
mov
fisubs
fwait
adc
sub
sbb
loope
jnp
cli
mov
lock
lret
inc
xchg
xor
lock
push
push
and
fimull
xchg
push
cmpsb
dec
jl
enter
and
ljmp
shrb
push
push
imul
and
dec
sbb
pusha
push
sub
sub
mov
lea
inc
or
pop
push
pop
js
ret
cld
inc
and
fdivp
mov
pop
mov
push
push
pop
aam
xor
add
fidivrs
scas
in
or
xchg
jno
repz
adc
daa
sub
mov
sbb
ss
adc
xchg
cmc
test
lock
or
mov
negl
add
divb
insb
sub
xor
pop
rorl
aad
cmpsl
jp
cmp
push
bound
sbb
jmp
xor
sbb
insl
sbb
add
mov
or
xor
mov
imul
pop
sbb
sub
dec
shrb
mov
cmp
mov
push
xchg
or
rsqrtps
xor
and
fldt
or
rcrl
pusha
mov
pop
sub
mov
push
out
inc
pushf
cmp
cmp
test
je
xchg
fists
call
push
lock
fcoms
popf
repnz
jmp
adc
pushf
idivb
jne
add
sbbl
fnstcw
roll
dec
add
lret
jns
adc
aas
addr16
sub
push
ror
in
cmp
inc
mov
sbb
sub
out
xchg
pusha
inc
dec
and
inc
cmp
dec
cmpsl
jl
rcrl
jp
xchg
sahf
mov
or
les
mov
or
adc
cmpsl
push
fildll
scas
adc
sub
cmpl
or
inc
mov
scas
test
push
lret
adcb
aaa
stc
loopne
shrb
mov
cmp
pop
push
ja
fwait
dec
ss
arpl
or
addb
push
lds
sti
adc
adc
test
mov
ds
cmp
ds
push
vpcmpeqw
or
xchg
cmp
jecxz
mov
dec
movb
ret
daa
cmp
jbe
dec
mov
xlat
and
aad
jns
cmp
sarb
push
cmc
flds
pop
sbb
bound
call
jecxz
in
mov
out
sub
mov
or
inc
int3
add
or
bound
lea
push
xor
push
rol
xchg
je
add
push
fstpl
adc
mov
pop
mov
inc
add
xchg
jmp
adc
dec
aam
push
jae
xor
es
loopne
dec
enter
daa
add
dec
push
addb
jecxz
mov
add
dec
pusha
fisttps
out
xchg
andb
fdivrl
shll
dec
clc
daa
shll
cs
add
loope
cld
xchg
pop
popa
clc
or
and
pusha
jg
sbb
rolb
adc
xorb
push
xchg
ficoml
pusha
push
lea
and
push
test
lcall
xchg
cli
cmp
out
clc
xor
bound
addr16
cmc
sbb
sbb
push
mov
pop
and
fs
jmp
lods
lods
rolb
int
stc
mov
sub
cld
pop
iret
jp
xchg
cmc
scas
fdiv
and
sub
mov
xchg
enter
and
add
idivl
pop
xchg
add
fcomps
rcl
or
add
add
add
dec
loopne
hlt
rcrl
xchg
or
jb
mov
aas
lret
int3
data16
add
ja
sbb
inc
or
sbb
testb
inc
call
cmpb
js
aam
add
inc
sub
inc
daa
push
in
add
or
push
mov
xor
aaa
sbb
push
daa
les
xor
and
push
pop
leave
pop
mov
mov
sbb
and
push
dec
xor
or
add
push
mov
mov
es
rorb
mov
lock
jbe
jle
dec
xor
mov
or
dec
and
mov
popf
sbb
aaa
rcrb
jne
xchg
pop
loope
ret
xchg
out
lret
and
and
shll
out
les
or
mov
dec
xchg
ljmp
xchg
dec
mov
add
pop
mov
xchg
push
repnz
aad
fwait
stos
push
cmpsb
sahf
and
push
ret
or
test
les
push
dec
jl
jecxz
es
and
imul
cmp
inc
pop
inc
xchg
mov
mov
xor
bound
dec
cmp
push
sbb
movsb
xchg
pop
pop
dec
addr16
mov
and
mov
test
mov
add
jae
popf
adc
sub
roll
or
sbb
sbb
adc
or
in
testl
movsl
pop
mov
jp
sub
jb
mov
mov
scas
push
cmp
ja
ja
aad
roll
roll
push
rcrl
scas
int3
mov
leave
or
cmpl
and
pop
fwait
add
rolb
and
cli
test
paddq
jb
rol
in
sub
xor
shll
pop
lds
adcl
and
dec
mov
adcl
imul
mov
data16
and
sbb
push
cmp
and
pop
movl
pop
mov
and
and
lret
sbb
sub
pop
int3
adc
cmp
sbb
leave
inc
xorl
or
mov
ljmp
pusha
outsb
jecxz
gs
loopne
pop
fcoml
lahf
inc
pop
bound
test
mov
inc
mov
sub
xor
xchg
pop
xor
movsl
rclb
test
cmp
dec
test
inc
xor
and
mov
inc
mov
sbb
inc
mov
xor
fdivs
or
jl
rol
lret
mov
js
push
out
push
sbb
or
and
sahf
xchg
aam
or
push
and
and
mov
lea
sbb
sbb
insl
add
xchg
in
inc
dec
hlt
out
loopne
dec
sub
pop
ljmp
mov
push
inc
push
stc
sub
xchg
ret
sub
test
push
add
xor
das
jmp
push
and
faddl
out
pop
repnz
cmp
call
inc
outsl
or
dec
jg
filds
dec
ss
loop
pop
add
and
rorl
cld
fldt
add
sbb
mov
xorb
add
outsb
push
adcb
clc
outsb
inc
lds
test
sbb
loope
fwait
push
adc
nop
into
fsubr
fistl
sbb
xor
movsb
xchg
test
push
dec
lock
dec
test
adc
out
punpckhbw
addl
push
cwtl
jae
fldcw
decb
and
mov
mov
add
add
xor
pushf
add
loope
inc
jl
add
js
push
loop
push
pop
lret
movsb
ss
ja
pop
add
imul
mov
jg
add
fsts
cmp
adc
xchg
adc
test
jb
mov
sub
push
jno
lahf
dec
loope
xchg
sub
add
mov
ljmp
dec
in
insl
jo
lods
push
outsb
add
pop
loop
inc
fs
xor
sahf
call
adc
into
test
add
add
sub
pop
clc
add
pop
lahf
enter
xor
fdivrp
mov
add
add
shll
aam
and
sbb
mov
inc
subb
xor
shr
push
les
mov
insl
cld
dec
jle
hlt
mov
xchg
pop
and
repz
and
push
cmp
das
les
sbb
addl
or
stos
pop
or
push
mov
cmpsl
xchg
fcomip
mov
xchg
push
sbb
pop
stos
or
idivb
iret
push
adc
xor
xchg
cwtl
add
jge
daa
js
popa
or
andl
sbb
inc
fadd
mov
ja
xor
add
sbb
push
push
mov
pop
jae
add
in
push
sbb
call
das
inc
and
repnz
add
and
add
mov
push
stos
dec
xor
fstpt
shll
pop
add
inc
mov
je
sbb
mov
adc
jmp
mov
loopne
sbb
mov
push
pop
scas
ja
js
push
push
rolb
xor
loopne
clc
addr16
sbb
mov
adc
jg
mov
add
jnp
and
test
or
mov
addr16
xchg
dec
pop
add
push
popa
mov
lock
push
subl
or
shr
jbe
scas
out
scas
and
addb
cmpsl
mov
mov
push
xor
rolb
and
and
adc
jae
mov
and
cwtl
test
cmp
push
aam
or
mov
adc
mov
mov
loop
stos
or
popa
movaps
out
cmp
cli
sub
dec
xor
ret
stos
push
mov
or
and
sbb
mov
rolb
fwait
cmp
xchg
inc
add
out
addr16
or
xchg
mov
jne
add
and
pop
rorl
xor
fwait
sti
xchg
int
jo
pop
std
pop
adc
or
pop
das
ss
inc
or
dec
mov
push
stos
and
adc
subb
lret
push
inc
xor
push
int3
and
sub
or
add
aad
dec
rcl
add
ret
cs
scas
inc
stos
pop
adc
add
out
fldt
adc
xchg
push
fs
pusha
mov
sbb
andb
or
clc
incl
cmp
pop
and
xchg
aas
inc
int
test
rcr
adc
rorb
push
add
adc
add
test
add
lods
call
mov
or
mov
add
xor
sbb
dec
lea
pcmpeqw
add
xchg
lret
pop
xor
mov
roll
mov
ret
add
rclb
lret
movsl
or
addl
clc
hlt
pop
clc
sti
sbb
ljmp
add
add
mov
and
lock
inc
fcomps
xchg
cld
mov
std
or
shl
cmp
or
loopne
ja
fidivs
inc
xchg
pop
xor
rolb
and
ret
push
jbe
les
add
adc
stos
sbb
fs
or
xchg
inc
rclb
lret
add
test
gs
and
push
push
mov
inc
dec
mov
mov
xor
cmp
dec
dec
iret
daa
fidivrs
mov
xchg
stos
jge
pop
xor
pop
mov
call
jl
repnz
repnz
les
mov
repnz
mov
push
es
cmp
jae
pushf
mov
clc
dec
imul
add
sbbb
shr
jno
mov
cmpsb
aam
adc
add
cmpsb
pop
int
inc
pop
add
cmp
testb
sbb
outsb
pop
xchg
rorl
icebp
fsubl
dec
sub
push
icebp
in
sti
sbb
mov
mov
add
cmp
mov
loop
or
jg
sub
mov
or
and
fstpl
insl
pushf
mov
nop
cltd
jb
xor
push
hlt
or
popf
push
mov
pop
out
testl
loope
addl
mov
in
es
pop
add
jmp
cmp
sbb
push
push
xchg
loop
cmp
or
leave
push
loope
adc
mov
fildl
sbbl
pop
fimull
push
jl
dec
in
pushf
add
sbb
aad
mov
xor
outsb
add
xchg
mov
xchg
mov
enter
push
or
or
imul
push
sub
testl
mov
cmp
jmp
pop
dec
jae
out
out
pop
fbstp
xor
mov
ss
xor
bound
push
pop
sbb
mov
mov
mov
inc
xor
pop
pop
cmp
popa
pop
cld
icebp
loopne
inc
mov
je
addb
or
pusha
in
xchg
test
outsl
jmp
loopne
and
ljmp
mov
add
push
jno
bswap
xor
push
lock
xchg
pusha
ficoms
test
pop
mov
dec
xchg
pop
add
mov
sbb
arpl
and
add
js
movsl
push
mov
jmp
jo
dec
jbe,pt
push
int
xor
add
js
mov
add
add
test
inc
mov
repz
or
test
iret
inc
sbb
add
or
xor
fnstcw
add
jp
mov
cmp
ret
push
push
adc
repnz
dec
inc
xor
dec
add
adc
jo
cwtl
loope
es
push
das
mov
cwtl
shlb
push
rcll
iret
xor
or
lock
pop
inc
dec
mov
add
mov
sbb
nop
or
sbb
push
pop
pushf
sbb
pop
cltd
dec
cmp
push
mov
inc
das
jp
push
inc
and
cmp
sub
jge
adc
movsl
aaa
inc
sbb
mov
pusha
ss
fsts
cwtl
adc
xchg
mov
outsl
adc
mov
adc
xchg
add
cwtl
adc
xor
xor
inc
add
rep
loopne
adc
loopne
inc
imul
pusha
mov
xor
inc
repz
addb
dec
jl
cmpsb
mov
jae
xchg
clc
jae
jp
or
xchg
ljmp
aaa
jmp
lds
dec
mov
mov
loope
hlt
push
adc
fists
rolb
and
out
aas
jnp
sahf
adcl
add
test
pushl
or
shr
sarl
clc
add
jmp
jle
sahf
push
push
pop
push
loopne
mov
notb
xor
les
xlat
movsb
inc
xor
rclb
sti
xchg
push
adc
into
jp
in
sub
jbe
cmp
xchg
pavgw
pop
or
lods
cltd
popa
dec
and
xor
and
iret
roll
je
add
sub
clc
adc
mov
loope
inc
loopne
fdivl
xor
ja
add
push
xor
xor
mov
xor
popa
nop
test
test
hlt
mov
hlt
and
js
jnp
loop
dec
or
lret
shrb
pushf
inc
add
ljmp
fadds
test
je
ret
arpl
adc
pop
mov
loop
loopne
or
xchg
pop
lea
sbb
adc
adc
xorb
jns
std
stc
test
jbe
pop
add
adc
mov
cmp
cmpsl
repz
leave
add
adcb
lahf
movsl
sbb
orl
sbb
xchg
ss
jge
les
imul
or
push
icebp
pop
mov
push
outsl
cmp
dec
nop
std
pusha
push
pushf
mov
sbbl
jecxz
jecxz
inc
push
add
push
lret
stos
push
incb
inc
fs
ja
xor
jp
dec
lcall
sbb
add
iret
or
ret
adc
sub
dec
inc
cmp
scas
xchg
inc
cmp
xchg
cltd
lcall
into
and
std
push
mov
mov
fidivs
xor
dec
stos
sahf
xorl
sbb
or
loopne
push
cmc
outsb
xor
cmc
cmp
sti
adc
nop
and
inc
jg
xchg
add
and
icebp
sbb
into
xchg
sti
adc
xor
inc
mov
mov
xchg
or
andb
or
cmp
add
push
rcll
or
je
das
add
cmpl
jbe
pop
xor
push
or
add
stos
lods
arpl
stc
sbb
or
or
aam
stc
or
nop
cmp
call
loop
test
cli
leave
lea
fnstenv
mov
stc
movsl
pop
jo
scas
jb
adc
sub
push
cld
mov
push
sub
lea
mov
loopne
add
cmp
cwtl
inc
lock
add
in
jl
ja
arpl
xor
mull
call
aaa
cmp
scas
fiaddl
aas
sti
adc
dec
pop
xchg
mov
ljmp
out
inc
mov
mov
jmp
and
adc
dec
js
mov
jb
repnz
xlat
aaa
cmp
dec
mov
adc
cmp
test
inc
adc
mov
pushf
ss
mov
pop
inc
jno
addr16
cmp
adc
jbe
shrl
into
push
push
xchg
loopne
jmp
les
mov
mov
fdivr
adc
imul
in
xlat
push
and
adc
push
das
roll
stos
sbb
adc
repz
or
sarl
xlat
cwtl
inc
popf
mov
or
pop
repnz
xchg
shll
or
pushf
push
mov
mov
stos
adc
dec
test
xchg
addr16
pop
xor
test
lock
jle
rcl
xchg
out
mov
repz
xor
mov
mov
mov
adc
dec
mov
add
or
rorb
jle
push
adc
dec
fcoms
cmp
cmp
outsb
add
pop
repz
out
push
je
sub
popa
xor
jno
ret
sub
cli
adc
mov
ret
jb
lret
and
mov
pusha
cli
in
add
mov
and
jle
in
loope
mov
add
mov
push
xlat
inc
sub
add
js
inc
xor
outsb
mov
ljmp
and
xlat
jmp
jns
or
pop
jle
mov
dec
pop
jle
pop
scas
sub
mov
or
adc
or
lods
lret
push
jbe
inc
les
int3
cmp
addl
pop
push
stos
andb
add
jb
mov
inc
out
mov
imulb
jb
inc
cmp
loope
xor
adc
pop
mov
add
jno
adc
into
push
loopne
nop
cmp
or
xchg
jge
inc
mov
or
out
mov
add
cmpsl
push
nop
xchg
js
jb
test
push
pusha
mov
cs
and
hlt
push
out
adc
mov
sqrtps
in
push
adc
dec
jp
cmpsb
add
aas
sbb
loopne
cs
fsts
lret
rcll
je
inc
jge
das
imul
lcall
addb
in
or
add
mov
data16
es
add
push
idivl
push
add
adc
icebp
jb
mov
push
int
adc
cld
push
pop
inc
and
pop
mov
loopne
in
movsb
push
cld
push
xchg
add
pop
dec
dec
inc
cli
insl
sti
pop
negb
adc
or
fwait
cmp
mov
mov
jmp
adc
push
push
in
push
add
and
shll
cmp
jl
and
xor
cmp
loope
iret
adc
and
jnp
or
rcr
mov
xchg
cmc
ficompl
stc
adc
jmp
loope
filds
dec
push
mov
cli
inc
pop
push
add
sub
sbb
and
sahf
pusha
divb
push
jns
shll
add
shrl
data16
scas
div
mov
or
add
out
cmp
incl
or
in
aas
adc
adc
lock
or
cwtl
sarb
ss
push
sub
adc
xchg
xor
lcall
inc
sub
or
in
mov
ret
cmp
xor
adc
cltd
call
syscall
xchg
dec
imul
or
inc
fabs
pop
test
test
lahf
jnp
test
mov
movsb
sbb
xchg
mov
push
inc
loopne
shlb
mov
jne
or
test
cli
andb
dec
sub
add
xor
mov
jae
shrl
adc
pusha
inc
fidivl
xchg
jae
push
lock
sbb
jne
jge
sub
lods
or
repz
add
ljmp
jmp
lods
pop
fs
into
shlb
rcr
cld
shl
popf
pop
sbb
xchg
add
jo
push
push
ret
inc
loop
or
xchg
mov
and
fnstsw
sub
dec
lds
andb
out
push
add
out
sbb
push
pop
lret
ja
outsl
add
add
sbb
xor
push
add
lret
mov
mov
dec
xor
and
popf
add
jecxz
sbb
add
cmp
mov
xchg
or
sub
or
outsl
mov
ret
add
pusha
xor
jae
add
mov
sbb
push
scas
jo
sahf
inc
mov
add
adc
stos
ss
rcrb
or
sbb
jns
pop
and
and
sub
or
mov
mov
cld
add
stc
or
xchg
test
shrb
add
loope
inc
in
test
test
arpl
and
fisttpl
aaa
std
fwait
insb
ljmp
rclb
mov
sbbb
jecxz
insb
ret
inc
jle
cmp
or
sbb
add
mov
lds
test
punpckhbw
imul
xchg
insl
mov
or
jmp
lock
push
pop
mov
inc
sti
mov
hlt
adc
push
xor
mov
mov
loop
lods
adc
pop
cli
mov
push
jnp
mov
or
xchg
das
push
lods
add
inc
add
and
js
mov
ret
dec
lods
xchg
push
adcb
xchg
movaps
xorb
push
mov
push
movb
popl
push
or
or
stos
mov
sub
sub
cmp
fdivrl
faddl
sbb
or
adc
aam
dec
lds
pop
mov
mov
pop
xor
push
jle
ds
push
or
in
sub
inc
ret
popa
xchg
cmp
sub
xor
in
mov
and
mov
insb
mov
adcb
and
add
xchg
xchg
orb
pop
repz
jb
xchg
lcall
xlat
test
jne
aam
rcrb
rol
inc
test
push
lahf
push
fcoml
push
popf
push
sbb
sub
add
fadds
sub
sub
call
into
stc
jmp
cmp
xchg
out
imul
or
cld
mov
mov
pushf
adc
test
add
sub
cli
mov
stos
mov
pop
stc
js
test
loop
fisubrs
shrl
mov
dec
or
or
push
das
in
adc
gs
adc
in
push
mov
leave
or
call
adc
popf
xchg
test
ljmp
loop
loopne
jecxz
xchg
pop
repnz
into
icebp
sub
shrl
adc
mov
pop
push
xchg
xchg
test
inc
xchg
sbbb
repnz
cld
sarb
stos
loope
dec
or
loopne
and
bound
add
pop
cmp
in
jge
add
icebp
or
or
movsb
sbb
mov
and
or
es
sub
hlt
les
loop
mov
rcr
add
adc
push
aas
adc
out
add
mov
ret
jg
push
mov
test
jmp
ljmp
orl
lock
cmp
test
jbe
adc
icebp
rcrl
loopne
sbb
xchg
dec
dec
imul
jge
push
mov
adc
jecxz
mov
sbb
xor
rcl
push
dec
mov
adc
pushfw
das
orb
add
inc
out
lcall
sbb
xor
inc
xor
mov
and
pop
std
jecxz
xlat
and
ss
fldt
sub
les
mov
mov
mov
sub
push
cmpsl
cmp
push
lea
sahf
addr16
pop
push
test
adc
cmp
insb
or
dec
inc
fldenv
jp
push
or
cli
push
pop
push
dec
nop
and
xor
add
add
dec
push
loope
add
or
lcall
add
xor
dec
dec
cmc
into
jle
or
in
test
test
push
sti
push
enter
push
mov
jno
sti
add
pop
sbb
jo
inc
sbb
mov
xchg
sbb
mov
hlt
sbb
dec
or
dec
insl
or
dec
push
xchg
lock
ret
xchg
test
push
cmp
mov
out
mov
aam
andl
mov
mov
and
pop
aam
sub
ss
add
jns
mov
lods
fidivl
daa
lock
mov
sub
pop
leave
adc
ds
hlt
xor
xor
and
push
inc
nop
ret
shrl
stos
hlt
sbb
push
repnz
test
and
or
mov
ja
aad
in
mov
outsb
aad
cmp
or
xchg
sbbl
aam
sbb
xchg
jl
cwtl
cs
or
or
inc
adc
dec
dec
xchg
mov
or
test
shr
insl
push
dec
rcrl
and
jmp
stos
fimuls
jl
das
arpl
sbb
push
add
add
mov
dec
lea
int
xor
sub
fs
or
cmp
inc
inc
add
dec
es
mov
inc
mov
push
sub
inc
popf
xor
push
rolb
movl
cmp
sbb
pop
or
push
push
lahf
fstp
and
xchg
cwtl
pop
add
mov
arpl
push
mov
pushf
arpl
sub
adc
test
cwtl
in
outsb
outsb
cmp
arpl
dec
loope
imul
bound
les
jbe
aam
xor
pop
arpl
aam
mov
sbb
enter
sub
adc
shlb
fdivs
lcall
push
xor
pusha
inc
jge
add
test
sub
bound
dec
outsb
adc
hlt
in
sub
jns
dec
stos
data16
sub
inc
and
movsl
ret
sub
ljmp
sahf
add
repz
subb
pop
or
and
adc
arpl
int3
outsl
cmp
pop
sub
xor
push
mov
sub
mov
dec
add
lock
daa
add
pop
and
mov
sub
xchg
mov
or
or
inc
cmp
add
add
and
adc
push
push
or
shlb
ficoml
xor
mov
sbb
xchg
sbb
sahf
andb
add
inc
sub
lods
test
xor
adc
mov
or
mov
into
dec
addl
mov
jmp
or
and
xchg
mov
in
dec
inc
dec
or
hlt
push
and
test
loope
dec
push
dec
mov
add
bound
pop
inc
adc
aaa
dec
mov
fnstenv
jo
mov
outsb
add
lret
fcomps
pushf
adc
pusha
int
mov
movsb
or
and
mov
sub
mov
cmc
add
aam
subl
add
and
into
mov
mov
leave
cwtl
mov
int3
enter
dec
adc
push
add
jo
cwtl
les
es
inc
adc
adc
sbb
dec
fimuls
xchg
movsb
or
lock
sub
rcll
loop
push
scas
cld
or
subb
fs
loop
sbb
pop
mov
or
stos
dec
faddp
jmp
cmp
cs
jmp
aad
push
xchg
dec
sub
ss
ljmp
lret
stos
jl
cmp
pop
cmpsl
aam
and
or
or
inc
les
mov
jbe
cld
imul
enter
scas
push
lock
test
aad
pop
pop
jo
push
push
push
xor
scas
roll
pop
fldl
push
ja
out
add
cld
out
popa
inc
outsb
push
dec
sahf
adc
ret
imul
or
adc
or
sub
jno
push
mov
test
jnp
rolb
sbb
jo
sbb
jle
sbb
jle
vmread
push
or
and
lcall
push
adc
or
or
les
test
adc
inc
sbb
sbb
loopne
dec
inc
add
lock
mov
mov
xor
push
dec
jl
pusha
jo
mov
push
sbbl
aad
mov
adc
mov
test
jne
pop
shrb
dec
test
or
cmc
xchg
fs
pop
pop
mov
rorl
push
jmp
jbe
add
mov
mov
sub
xor
add
ja
in
fmuls
aaa
enter
xor
mov
jmp
ret
sub
pop
fwait
mov
lea
inc
lret
jo
adc
sub
cwtl
push
mov
cmp
add
lods
addl
fdivs
push
and
nop
call
xor
dec
mov
mov
repz
aad
ljmp
sub
lret
xor
xor
add
sarl
jp
ja
stos
out
loop
add
add
adc
pop
jno
daa
bndstx
push
mov
xchg
mov
sahf
mov
orb
repnz
adc
mov
push
mov
dec
inc
or
push
cmp
xor
cmp
adc
jmp
pop
test
and
mov
mov
add
rorb
cmpsl
jae
sbb
adc
cmp
lret
or
or
adc
pop
add
data16
mov
sbb
sbb
icebp
aam
adc
cwtl
add
jmp
out
insb
mov
lret
push
fsubl
into
pop
push
lock
xor
sbb
jl
sbb
push
add
stos
aaa
js
mov
sarl
stos
fnstsw
and
ret
testl
mov
inc
rcrb
inc
cmove
jo
mov
sub
cmpsb
push
push
cmpsl
cmp
and
ljmp
xor
aad
jae
adc
fcomps
xor
xchg
add
inc
mov
cmp
test
pop
fcomps
push
mov
or
cli
test
jb
sbb
stos
addr16
xchg
imul
loopne
lds
repz
adc
jecxz
push
dec
js
gs
pop
sub
push
popa
popa
aad
rclb
jmp
fs
mov
and
add
add
push
into
push
or
or
cmp
int
mov
push
stos
adcb
and
and
sbb
dec
mov
mov
push
sbb
or
add
popf
mov
sbb
movntq
sbb
cmp
lcall
sti
and
in
mov
test
pop
mov
xchg
in
sub
sub
mov
pop
das
ret
inc
mov
fwait
xor
mov
add
or
nop
shl
lcall
je
dec
shrl
adc
mov
cmp
ficoms
shlb
ret
loop
xor
jmp
xchg
and
xor
xor
sahf
xor
icebp
adc
add
xor
testb
xchg
data16
jbe
xor
add
js
into
test
inc
mov
adc
insl
pop
cmc
or
cmp
dec
xor
sbb
inc
lock
add
or
mov
fisubl
sub
lods
adc
mov
aaa
cmpsl
enter
xchg
or
push
mov
or
or
out
in
jne
int
cmp
subb
stc
out
mov
ffreep
pusha
pop
push
int3
loopne
lahf
jmp
mov
sbb
adc
add
mov
sahf
add
mov
aam
xor
ljmp
and
xchg
loopne
push
mov
sub
fnstcw
jg
nop
push
jge
cmp
cwtl
lds
testl
lahf
adc
add
rcrl
lret
lret
xorb
xor
mov
xchg
dec
data16
push
sbb
leave
test
push
int3
dec
test
xchg
lock
inc
mov
and
push
mov
cmp
and
add
pop
inc
in
inc
enter
mov
hlt
adc
lods
xorl
and
test
loop
mov
inc
push
jne
xchg
add
orl
mov
clc
lds
call
iret
std
dec
sahf
test
jb
cmp
aam
cmp
imul
jmp
xor
adc
cmpsb
add
test
aaa
sub
adc
fcoml
push
jecxz
add
add
push
in
bound
and
fbld
or
arpl
dec
adc
mov
mov
or
cld
jl
sbb
nop
int
adc
dec
add
sbb
bound
pop
and
mov
inc
mov
out
popf
push
adc
jno
out
shlb
out
stos
orb
pop
fwait
sbb
add
stos
test
inc
bound
pop
prefetchw
test
roll
lds
rcrb
xchg
inc
shr
mov
add
or
sbb
push
xchg
push
dec
orb
push
add
and
cwtl
sbbl
negl
jbe
and
mov
cwtl
jo
push
icebp
idivl
pop
gs
ret
mov
push
lock
sbb
outsl
jge
adcl
add
sub
xorb
pop
pop
dec
mov
cwtl
inc
add
js
adc
ret
inc
add
xchg
xchg
push
xchg
mov
ja
cmpsl
pop
pop
pop
leave
ret
cmpsb
pushf
mov
dec
cmpsb
add
or
mov
mov
and
cmpsb
mov
mov
out
repnz
popa
mov
or
mov
push
and
xchg
and
test
or
xor
add
adc
xlat
cmp
adc
add
notb
mov
xchg
adc
or
or
and
jp
shlb
or
mov
insl
xchg
or
inc
imul
imul
inc
call
movsl
out
push
add
mov
subb
scas
sbb
mov
and
or
pop
jo
fistl
inc
imul
xchg
cmp
cmpsb
mov
sub
lahf
jl
and
adc
aam
popf
jo
pop
test
xchg
sub
xor
mov
and
mov
lea
insl
sub
stos
enter
ja
xchg
stos
insl
lods
xor
lcall
mov
inc
cmp
inc
gs
popa
andb
in
jae
gs
xor
push
scas
mov
test
mov
mov
or
push
scas
add
cmc
test
add
inc
rorb
iret
sub
mov
cmp
cmp
addb
dec
inc
fcmovnb
fcom
push
adc
sbb
jo
jae
inc
sbb
rcrb
sub
cmp
sbb
iret
xchg
ja
test
add
stos
fmuls
cmp
mov
js
jo
and
popf
push
pusha
adc
mov
ljmp
cmp
and
shl
int
daa
loop
scas
stc
scas
mov
aam
push
mov
out
and
rol
pop
and
xchg
leave
adc
xor
jl
das
imul
rcl
lret
push
mov
pop
lahf
inc
cmc
push
std
aam
shl
cmovle
clc
sbbb
add
sub
jmp
icebp
push
scas
or
sbbb
imull
xchg
fstp
push
stos
push
sub
pushf
add
inc
popa
push
sub
rcrb
sbb
inc
pop
sarl
adc
xor
jmp
cmp
pop
mov
add
adc
add
mov
dec
lock
and
mov
ljmp
cmp
enter
add
mov
cmp
inc
scas
add
or
sti
aam
add
inc
sbb
or
cmp
xor
outsb
bound
xchg
cmc
push
adc
insb
clc
pusha
push
push
test
or
dec
sub
scas
jl
sbb
xor
cmpsb
clc
mov
add
and
sub
mov
movsw
sbb
roll
cli
leave
andb
outsb
dec
sbb
sbb
mov
mov
jl
loopne
push
adc
in
dec
call
inc
or
mov
mov
stos
inc
dec
call
mov
movsl
xchg
jge
or
and
or
push
mov
fadds
daa
mov
and
test
outsl
stos
mov
and
in
and
rcl
call
or
add
inc
popa
push
clc
rcrb
xchg
stos
adc
aaa
call
pop
pop
loopne
clc
xor
push
sub
dec
or
push
orb
fdivs
fwait
mov
dec
in
test
adc
push
call
pusha
ror
out
push
or
push
inc
rorl
test
push
pop
add
pusha
or
or
push
in
mov
inc
popl
or
popa
xor
adc
sub
pusha
sub
dec
sub
adc
mov
inc
shll
in
lcall
sub
ret
movsl
decb
pop
movsb
insl
inc
divb
sub
fistpll
or
pop
lods
xchg
xchg
cmp
pop
inc
ds
inc
rcll
loopne
loop
xor
fldt
or
sub
call
sbb
leave
enter
mov
fisubl
adc
or
push
push
and
test
adcb
mov
aas
push
mov
push
pop
adc
push
xorl
pop
fs
or
lods
sub
sbb
mov
into
js
hlt
imul
add
dec
test
pop
adc
push
cltd
and
fs
lock
sub
mov
enter
pop
add
cmp
dec
add
stos
mov
add
pop
push
scas
adc
cmp
mov
pop
sub
cmpsl
sbb
es
mov
or
daa
mov
xor
rorl
pusha
mov
sarb
pop
cmp
gs
inc
xchg
dec
jo
xor
out
out
stos
push
jo
pop
push
xchg
pop
push
in
adc
scas
daa
es
into
inc
sub
lret
mov
testl
adc
push
xor
xchg
mov
sub
push
inc
xor
mov
jae
jno
push
cltd
test
fadds
outsb
jae
dec
xchg
mov
push
add
dec
cmp
mov
subb
jno
pop
jae
sti
insl
fcomps
ss
xor
shlb
sbb
movsl
subb
ljmp
bound
test
pusha
inc
ja
sub
cmp
nop
fs
cmp
lcall
inc
addb
xchg
popa
and
jo
jo
inc
int
inc
add
pop
mov
fs
pushf
cmp
add
mov
sub
fsubrs
mov
push
xor
mov
pop
lret
add
add
pop
bound
jge
sbb
sbb
push
sub
pop
push
add
mov
out
andl
adc
pop
das
test
es
xchg
cmp
sub
xchg
mov
cmp
enterw
daa
shl
lcall
addl
inc
daa
jae
aam
sub
mov
inc
bnd
push
in
mov
ret
loopne
sbb
pusha
enter
mov
sub
adc
in
stos
and
call
xor
cwtl
add
dec
in
repnz
mov
sbb
bound
test
push
cwtl
pushf
fistpl
inc
out
pushf
cld
test
sbb
inc
insl
jmp
aam
jae
loop
fwait
xchg
xor
enter
or
pushf
or
in
xorb
xlat
arpl
arpl
push
xor
lds
dec
test
mov
push
jp
arpl
add
fsubrs
jnp
jbe
bound
and
js
mov
push
data16
out
inc
xor
push
fsub
fnstsw
push
add
test
fsts
mov
jecxz
push
or
sbb
sbb
lret
xor
daa
daa
push
adc
mov
fs
inc
in
dec
ja
inc
push
push
lds
ja,pn
adc
pop
jo
clc
mov
loope
push
movsl
rcl
inc
into
adc
mov
push
imul
clc
push
cmp
add
sub
dec
pusha
aas
sti
subb
scas
sbb
jo
or
add
ja
mov
cltd
add
daa
ja
fs
xor
inc
sbb
cmpsl
cmpsb
sbb
push
add
fmuls
or
push
dec
out
mov
dec
add
sub
adc
add
imul
jl
shrl
xchg
dec
mov
daa
inc
in
adc
addb
shll
pop
scas
mov
jmp
push
or
jo
sarb
xlat
or
scas
pusha
or
cmp
xorl
push
push
shrl
int
jb
repz
mov
lretw
jmp
push
push
and
ljmp
stos
lcall
pop
ljmp
sbb
arpl
xchg
imul
mov
into
rorb
sbb
insl
out
add
out
mov
les
xchg
shll
rcrb
sub
lret
or
aaa
ds
and
sbb
sbb
mov
ljmp
xlat
mov
xor
or
jne
push
out
xor
clc
repz
or
decl
fisttpl
test
and
pushl
or
adc
das
inc
sbb
fnstsw
in
and
xor
pusha
or
xor
fndisi(8087
sub
lcall
lcall
les
mov
jmp
xor
test
sahf
loopne
jmp
test
push
push
push
addb
addb
pop
mov
inc
enter
inc
xchg
push
inc
cmpsl
xchg
jb
xor
lods
shll
in
add
test
or
fadd
loopne
mov
jnp
pusha
cwtl
ja
call
ds
pop
cmc
push
pop
pop
lcall
inc
jae
sti
lahf
pushf
and
add
cmpsb
pop
sbb
cmp
add
push
xor
push
pop
in
inc
jnp
dec
and
mov
scas
or
jo
movsb
mov
insl
mov
andb
int
cmpsl
adc
adc
sbb
or
rolb
loope
inc
cmpsb
stos
and
insb
add
xor
push
test
mov
lods
xor
inc
cmp
lcall
add
sbb
sbb
popa
adc
aam
loopne
mov
push
xchg
dec
insb
push
daa
icebp
and
fiaddl
sbb
push
mov
repnz
inc
xchg
mov
xchg
xor
sub
mov
in
shl
test
mov
adc
inc
enter
data16
push
in
and
stos
push
lock
stos
pop
ja
mov
pop
mov
lret
and
stc
adc
cmp
stos
inc
jg
sbb
jo
fld
mov
aam
jg,pn
push
aam
cmp
fsubr
jecxz
mov
loope
ret
add
mov
push
fstpt
dec
adcl
add
pop
push
rcl
popf
add
shrl
test
mov
and
push
fdivl
sub
push
scas
ret
add
imul
push
dec
fwait
addb
shrl
repnz
mov
in
jmp
or
sub
fsubrs
pop
xchg
mov
pop
push
scas
aaa
jecxz
jmp
jmp
or
iret
adc
xlat
mov
cmp
inc
leave
loop
or
bound
sarb
in
xchg
fildll
imul
mov
rolb
lcall
adc
cmpsb
repnz
xor
jae
mov
pop
imul
js
xor
xchg
stos
cmp
inc
std
add
sbb
pushf
push
incb
mov
xor
mov
shlb
add
daa
pop
push
cmpsb
pop
xchg
sbb
loope
loopne
stos
pop
imul
ret
pop
in
inc
cmpsb
scas
cltd
ds
or
inc
pop
movsl
or
pop
js
jno
lret
adc
pop
lods
sbb
ret
sub
ret
pop
ret
or
hlt
adc
outsl
cmp
pop
xchg
into
loopne
call
pop
loope
push
out
inc
iret
imul
mov
mov
xchg
pop
inc
xlat
inc
mov
out
jo
add
call
cwtl
jb
cmp
int3
mov
ror
sbb
mov
jae
ljmp
or
pop
cmpsl
pushf
insb
call
and
roll
dec
cmp
ret
test
pop
xchg
add
stos
pop
fbstp
ljmp
xchg
test
xorb
jge
sbb
rcrl
pusha
test
test
cmpsl
rcl
lcall
call
cmp
stos
and
xorb
ret
pop
xor
out
inc
mov
jae
scas
cltd
dec
es
fwait
test
lret
push
outsl
sbb
push
xlat
dec
xchg
push
jmp
je
push
daa
mov
mov
and
jle
sub
pop
cs
add
daa
pop
dec
in
test
stos
imul
mov
adc
out
dec
sbb
sarb
shr
and
mov
push
mov
sti
cmpsb
push
push
sbb
mov
cmp
gs
pop
cli
cmpsb
out
xchg
out
cmp
add
in
lock
sub
stos
mov
xor
jno
loop
ret
jbe
int
popa
stos
adc
jne
ds
imul
pop
divb
xchg
sbb
ljmp
addb
sub
imulb
cmp
sub
addr16
mov
aad
js
nop
sub
or
test
push
repnz
mov
push
xor
nop
insb
mov
push
push
adc
rcrb
and
or
lea
cmp
aam
cmpl
add
sbb
test
pop
mov
push
mov
fists
dec
pusha
add
sub
xor
mov
adc
sbb
aad
and
fcoms
mov
clc
inc
xchg
add
add
pop
add
and
mov
cwtl
add
mov
add
mov
addl
mov
jge
adc
stos
outsb
cmp
test
push
clc
jg
dec
sarl
hlt
cli
enter
adc
mov
or
and
in
xchg
call
rcrl
ja
add
lret
xor
sbb
cmp
andb
adc
push
add
andl
adc
xor
lcall
enter
sbb
sub
lret
xchg
and
stc
jle
aad
cmpsl
lcall
sbb
and
dec
mov
insl
and
pop
pop
xor
andb
mov
push
dec
gs
inc
scas
mov
stc
insb
stos
xor
push
inc
push
pop
hlt
mov
push
jae
inc
enter
add
ja
in
ret
sub
enter
and
daa
pop
cmp
jp
int
xchg
mov
repz
pusha
ljmp
aam
lods
sbb
mov
sbb
or
aad
stos
add
popf
faddl
popf
jo
pop
xchg
movsl
pop
nop
stos
sub
jp
and
out
loope
test
jmp
jl
sbb
hlt
pop
push
sahf
add
es
push
pop
pop
jnp
dec
xorb
fbstp
pop
xchg
lea
push
pop
add
imul
mov
and
mov
cmpb
inc
bound
mov
les
or
inc
cli
movsl
adc
sbbl
add
out
aam
test
jbe
push
or
sub
mov
aad
sbb
enter
fs
rcrb
push
or
add
and
ret
sub
pop
rolb
lods
frstor
sub
aaa
aam
sahf
rorb
inc
ljmp
adc
inc
scas
dec
sarb
xchg
or
sbb
inc
stos
popa
and
out
cmpsb
ds
cmp
scas
push
mov
loope
stos
sti
pop
ja
push
jecxz
xchg
icebp
xchg
mov
or
push
push
in
inc
mov
inc
fiadds
sti
mov
stos
xor
clc
sbb
shl
sbb
cmp
and
popa
and
adc
jo
lret
cmp
lock
xchg
in
sub
fisubl
sub
push
cli
sub
cltd
push
adc
sbb
cs
movsl
lcall
jle
movsl
jp
push
sbb
adc
hlt
jo
jo
xchg
mov
mov
adc
cltd
push
cld
pmullw
or
sbb
movsb
faddl
lcall
addb
cs
push
fwait
add
testl
shrb
data16
mov
rcrl
push
jmp
es
lret
frstor
xchg
jae
in
fstpt
sbb
mov
add
push
lret
add
filds
in
repnz
xchg
jp
or
subl
stos
add
sub
iret
subb
icebp
sub
adc
adc
dec
es
js
dec
int3
lds
insb
push
jne
daa
or
out
movsl
cs
icebp
les
dec
xchg
rclb
jo
ficoml
mov
inc
aas
jne
or
pusha
push
jmp
in
shld
idiv
mov
call
add
jge
in
orl
popa
push
insb
icebp
daa
movsl
iret
adc
adc
push
test
mulb
push
dec
jmp
push
jno
es
jle
and
dec
hlt
pop
sub
or
ret
pusha
push
add
and
cmpsb
jge
addl
push
popf
cs
mov
dec
in
loopne
mov
push
pop
pop
inc
sar
or
adc
xor
add
or
or
sub
mov
xor
inc
xor
mov
sbb
test
inc
or
mov
mov
shlb
add
sbb
mov
dec
test
movsb
sbb
inc
test
add
inc
and
loopne
xchg
clc
dec
mov
lcall
fdivr
pop
or
xor
xor
add
incl
mov
jle
push
jbe
sti
pop
add
xor
stos
lock
xchg
jecxz
xchg
pop
lea
jmp
inc
mov
enter
sub
cmp
cmp
dec
mov
push
push
mov
sbb
adc
add
cmp
jmp
jno
movsl
jo
sti
fldenv
cld
dec
push
pop
es
push
and
popa
dec
push
cltd
jb
mov
mov
loop
sbb
stos
add
lret
mov
call
ja
fmuls
adc
fs
pop
or
imull
orb
ja
int3
test
adc
pusha
enter
mov
push
xor
jl
les
pop
je
jb
xchg
popf
pop
and
adc
js
pushf
lods
push
sbb
icebp
movsl
add
lock
sub
cwtl
jp
cmp
inc
and
push
int
lcall
orl
sub
sub
mov
adc
cmovp
mov
xchg
dec
pop
clc
mov
jo
and
adc
mov
in
push
mov
ret
iret
cmp
popf
test
xor
xor
jp
xchg
sub
pop
push
sbb
lds
mov
sub
jo
dec
enter
adc
cmp
push
xchg
push
jae
in
ja
xor
xor
pushf
adc
lcall
rorb
mov
jbe
sbb
sbb
fisttps
ret
popf
push
push
test
movsl
pop
sub
cmpsl
sbb
inc
add
jmp
mov
stc
sbb
mov
and
xor
rorb
lods
push
loopne
dec
push
push
sahf
test
adc
push
add
pop
cmpb
pop
jne
add
stos
pop
popf
aas
xor
pushl
pop
cmp
xchg
roll
adc
imul
add
movsl
out
int
cwtl
push
xlat
cli
inc
cmp
test
je
cld
dec
sbb
add
xor
das
xchg
xor
push
lods
shrb
inc
into
add
dec
inc
push
pushf
and
sbb
aas
neg
push
adc
cmpb
pushf
dec
adc
test
and
test
ret
aam
xlat
test
movsb
and
push
inc
push
adc
loope
inc
out
inc
mov
popa
iret
jb
popa
dec
mov
jno
cmp
xchg
js
adc
dec
ficompl
pop
mov
in
int
orl
ss
pop
imul
out
cmp
in
inc
push
xchg
inc
or
loope
lods
mov
mov
mov
sbbb
inc
and
inc
push
pop
xchg
jbe
lods
cmp
push
test
mov
cwtl
mov
and
mov
xorb
push
adc
test
pop
test
pop
lock
ja
and
adcl
jecxz
add
xchg
cmp
lods
dec
out
inc
daa
pop
cmp
aaa
rcll
xchg
enter
stos
pop
sub
sub
orl
loopne
call
hlt
push
mov
mov
xchg
loope
adc
nopl
xchg
test
xchg
rclb
xlat
pop
int
adc
inc
push
jb
fs
cmp
out
ss
fisttpl
xor
inc
mov
inc
mov
adc
aam
scas
push
xor
mov
pusha
dec
cltd
pop
mov
xor
push
mov
and
daa
xchg
inc
add
jns
pop
push
test
push
test
sbb
scas
test
xlat
test
popa
cld
or
push
test
mov
gs
aam
or
pop
push
mov
or
cmpsl
dec
mov
or
or
shl
push
add
jo
inc
push
js
loope
aad
jno
mov
repz
cltd
jo
pop
clc
jecxz
pushl
sarb
mov
dec
int
dec
xor
fnsave
push
rclb
inc
and
or
aam
jo
je
xor
adc
roll
and
sarb
lahf
jo
push
lds
push
lcall
jb
add
out
sbb
pop
xor
or
int3
and
enter
push
subl
sbb
sbb
push
and
mov
add
fildll
adcl
cmp
pop
add
clc
mov
xchg
sub
push
jae
mov
aam
xor
clc
pop
xor
aaa
add
loopne
lods
stos
and
dec
int
push
fidivs
push
mov
testb
push
subl
test
xor
mov
mov
adc
sub
add
lock
addb
lcall
sub
mov
inc
cmp
xchg
aad
pop
mov
fldenv
pop
popf
xor
push
sbb
adc
cmp
dec
mov
push
add
decb
inc
xchg
mov
inc
neg
sub
jp
ja
or
xchg
test
cmp
adc
loop
pop
xchg
or
or
adc
mov
test
test
ljmp
jp
inc
add
adc
imul
and
lret
pop
sbb
das
mov
clc
pop
xor
dec
mov
sub
inc
ret
in
push
aam
xor
dec
loope
push
and
inc
movsb
addl
xchg
jge
xchg
lret
adc
aad
cli
andl
add
sti
flds
andl
xchg
mov
lcall
mov
inc
stos
pop
or
mov
test
add
inc
in
push
loopne
inc
dec
mov
add
pushf
repz
xor
scas
sbb
push
rclb
mov
xchg
inc
xchg
test
mov
inc
loopne
mull
in
pop
pop
lods
arpl
lret
pop
in
les
cs
and
sbb
jno
cmp
adc
test
sub
fcomi
sbb
nop
stos
imulb
xchg
rcll
jb
xor
test
imul
daa
cmc
jb
jb
inc
stos
ret
mov
xor
push
test
xchg
test
in
iret
inc
sbb
jecxz
cmp
arpl
pop
dec
inc
popf
ljmp
cltd
insb
pushf
mov
ret
push
push
addl
sahf
xchg
test
ss
out
push
xor
test
outsl
das
int3
scas
and
xchg
lahf
daa
xchg
jb
jp
mov
add
mov
jecxz
sub
sbb
mov
adc
stos
ret
sbb
shll
scas
ljmp
jmp
shrb
xor
xor
ucomiss
clc
call
cwtl
push
mov
mov
sub
inc
pop
jae
inc
sbb
push
imul
jg
xor
test
xchg
sub
push
mov
aas
mov
cltd
jb
adc
orb
xor
pop
push
dec
and
repz
pop
movsl
je
xor
mov
inc
pop
rcrb
cmp
movsl
mov
cmp
adc
add
push
and
and
add
and
enter
push
pushf
loopne
addb
lcall
loopne
sbb
cmp
call
mov
in
loope
arpl
mov
sbb
mov
test
stos
sbb
popa
jae
aad
cmpsl
mov
pop
xchg
int
add
jmp
mov
xor
adc
pop
int3
adc
or
loope
mov
sbb
dec
lock
mov
jbe
testb
cwtl
rcll
pop
jo
adc
cmp
fistps
pop
sbb
test
imul
insb
pusha
push
jo
jp
fsubrl
push
pusha
lret
xchg
pop
sbb
enter
mov
lock
jmp
rorl
ja
xor
and
mov
dec
popf
jnp
push
push
mov
fadds
out
nop
loopne
push
adc
adc
add
lret
fidivs
stos
fisubrl
push
inc
aad
dec
aaa
push
sub
ret
xchg
test
fwait
adc
push
pop
push
cmpsb
mov
pop
xlat
mov
mov
test
jge
dec
pop
sahf
ja
js
test
sti
sbb
adc
jo
xchg
mov
mov
sbb
pop
cltd
lcall
lcall
sbb
add
in
jne
and
fadd
add
add
lods
sbb
jno
push
push
pop
add
lods
mov
test
xchg
xor
popf
ljmp
sub
adc
sbb
push
stc
aad
sbbl
jmp
fmulp
mov
imul
outsb
inc
jae
pop
dec
movsl
pop
das
sbb
and
arpl
ret
in
and
ficoms
xor
and
stos
inc
sarl
cmp
pop
jnp
test
movsb
mov
sbb
loop
aam
and
inc
cld
jb
xor
dec
xor
and
add
add
or
leave
add
add
lock
or
fimull
fdivs
rorl
push
sub
mov
das
ljmp
xchg
xchg
andb
mov
adc
adc
lock
push
mov
jg
adc
sub
data16
or
jo
call
push
mov
scas
testl
push
pop
adcb
jle
push
or
sub
sbb
loopne
leave
outsb
or
mov
xchg
sub
icebp
scas
fcomps
or
sub
xchg
lods
xor
inc
fdivp
repnz
jno
mov
or
cld
aaa
mov
clc
cmp
sbb
push
xchg
int3
hlt
sub
xchg
inc
aam
or
cmp
push
jb
cld
daa
mov
fisubrs
test
dec
test
stos
push
aam
fwait
lds
mov
add
xchg
xchg
jp
je
cmp
sbb
in
adc
mov
and
jno
call
push
rorb
stos
pusha
adc
subb
push
jne
fisubrl
leave
cmpb
add
test
add
rorb
les
iret
xor
add
mov
sub
inc
dec
shll
out
sbb
pop
or
sub
inc
inc
pop
stos
adc
test
mov
mov
ss
cld
lahf
mov
pop
sti
add
out
rclb
ljmp
rol
icebp
pop
ret
push
jg
in
mov
xor
jns
push
cmp
hlt
cmpsb
xor
mov
add
push
xor
mov
add
jmp
mov
pop
push
ret
inc
lea
lcall
push
sbb
iret
nop
addl
pop
sub
push
das
pop
jp
cmpsb
and
cmp
push
add
ret
ljmp
fabs
mov
scas
lcall
mov
dec
mov
or
xchg
mov
or
stos
add
jb
cmpsb
sub
lcall
add
inc
int
dec
jbe
inc
pop
cwtl
sub
lret
cwtl
mov
or
inc
sbb
subl
and
test
push
enter
enter
xchg
pusha
adc
cmp
popa
push
adc
push
nop
ret
add
mov
push
gs
loopne
mov
adc
inc
jnp
sbb
dec
xchg
pop
or
testl
xchg
loop
add
xor
or
adc
sub
orb
pop
jbe
daa
dec
cmp
pop
jo
dec
rcrb
clc
push
inc
jae
addb
or
xor
icebp
xor
fisubl
rorl
es
cmp
cmp
lret
push
faddl
or
push
mov
andl
mov
cltd
push
and
pop
xchg
dec
sahf
cs
aas
sub
adc
int3
dec
mov
inc
sti
test
je
aam
inc
outsl
nop
jmp
sbbl
xor
loop
add
test
push
adc
or
adc
cltd
enter
jnp
inc
jae
inc
xchg
and
dec
xor
mov
inc
out
orl
cmc
xorb
cmp
push
xor
in
xchg
popa
mov
rcl
loope
test
pop
push
repnz
push
inc
jnp
inc
sahf
stos
insl
push
push
inc
jae
shl
in
orl
ja
mov
xor
and
ret
xchg
jl
push
out
adc
pop
or
loope
jp
orl
stos
sbb
daa
daa
push
push
cltd
dec
idivb
cmp
sub
jno
or
inc
inc
mov
cwtl
xor
xor
pusha
jo
fcoms
pop
scas
and
std
jnp
lcall
loope
cmp
adc
pop
aam
out
cmc
lret
scas
dec
inc
fidivs
mov
add
xchg
adc
mov
or
inc
ja
and
xchg
add
adc
int
ret
push
push
sbb
or
xchg
push
adc
sbb
push
mov
stos
sbb
cmp
mov
aad
or
or
inc
jne
lret
popa
xor
xchg
fldcw
mov
fsubrs
mov
cmp
mov
lds
fsubrs
out
in
loopne
or
add
rorl
sbb
or
adc
push
dec
add
mov
and
dec
push
iret
je
inc
aam
fwait
fs
popf
sub
push
rolb
push
or
xor
andb
popf
es
loopne
dec
push
scas
in
data16
and
inc
movsl
test
shl
cmpb
sbb
mov
test
sbb
sbb
leave
xchg
sub
or
push
les
sub
sub
jp
mov
or
decl
loopne
and
mov
roll
loopne
mov
rcrb
sbb
loopne
mov
lds
cs
cld
aaa
xchg
xlat
shrb
pop
adc
add
lret
ja
sbb
lret
cmp
pop
lea
xor
cmp
add
push
sbb
mov
mov
stos
sarb
cmc
cltd
rcrl
loopne
sub
push
pop
push
cmp
leave
jecxz
push
xor
adc
sub
mov
push
and
mov
sti
scas
jo
into
sbb
mov
dec
adc
inc
loopne
shlb
clc
pusha
lret
adc
xor
xor
and
push
add
loopne
fldenv
adc
mov
icebp
addb
imul
mov
or
pop
shl
push
cwtl
out
mov
or
xchg
mov
sarb
int
cmpsb
dec
shrb
add
int3
mov
sub
sbb
sub
mov
adc
into
inc
test
adc
ret
call
addl
xchg
in
subb
loope
sbb
loope
bnd
jae
and
jmp
xchg
add
sbb
test
sbb
pop
test
mov
jno
cli
jb
xchg
and
js
xor
loop
jp
add
jbe
add
push
movsl
xor
lods
call
push
mov
jae
xor
neg
inc
adc
xor
fstp
pop
xchg
imul
pop
xlat
dec
int
cltd
out
int3
push
pop
jle
int
mov
add
xor
cmpsb
call
movlps
imul
fadds
adc
lret
lock
adcb
jge
andb
pop
in
or
sbbb
leave
ret
mov
mov
mov
push
popa
or
push
or
and
int3
pop
adc
adc
imul
movsl
and
mov
dec
inc
lahf
dec
hlt
pop
add
or
or
add
jbe
out
popa
jae
hlt
test
inc
jns
mov
test
shrb
mov
and
aad
cwtl
and
xor
nop
jle
out
ret
mov
sarl
xor
jne
stos
call
adc
mov
push
sub
neg
add
cs
xchg
mov
or
loopne
add
inc
fwait
sbb
fucom
stos
jo
enterw
adc
dec
jecxz
es
subl
ds
mov
hlt
test
test
jbe
out
lcall
sbb
sub
inc
xor
sbb
add
cmc
bt
push
not
push
jno
test
aad
repz
cmp
sub
or
inc
pop
inc
adc
add
add
push
loopne
es
mov
push
jno
sbb
adc
ret
jo
test
lret
sbb
add
iret
bt
adcb
mov
jmp
mov
jbe
dec
add
adc
sub
pop
push
push
andl
sub
inc
mov
xor
aad
and
add
xorl
test
vmread
jae
push
push
lea
push
or
push
cmpsl
mov
test
or
add
pusha
push
or
add
in
inc
aaa
test
mov
push
in
pusha
sbb
fistl
inc
cmp
push
jno
or
aam
inc
and
mov
test
push
hlt
push
xchg
jecxz
pop
ja
icebp
inc
dec
loopne
idivb
and
jno
push
les
cwtl
movsb
leave
cmp
jne
popf
enter
pop
andb
or
hlt
jno
mov
inc
mov
jp
push
push
mov
fnstsw
pop
mov
jo
outsb
call
jmp
sbb
enter
push
leave
or
push
sbb
push
add
sub
sub
mov
andl
das
int3
pusha
je
pop
add
stos
add
je
or
or
dec
je
fxch
pusha
mov
sub
in
pop
inc
lods
or
and
and
or
mov
lahf
inc
lock
jb
loope
in
andl
add
and
sub
les
cmp
jne
push
test
sbb
in
lock
fcoms
bound
sbb
cmp
int3
or
test
and
xchg
or
xor
mov
mov
rcrl
fwait
xor
insb
mov
shll
xor
jno
orb
push
test
dec
cwtl
roll
sbb
push
add
hlt
sbb
out
sti
call
mov
sub
xchg
cmc
lea
add
sbb
push
shlb
jge
loopne
sub
add
jnp
clc
clc
mov
lock
xor
add
int3
cld
mov
add
xor
add
or
pop
mov
inc
push
push
sbb
mov
mov
mov
and
sbbb
out
mov
stc
cmp
stos
xchg
lock
and
stos
inc
ja
cs
pushf
push
add
mov
xchg
mov
or
stos
push
test
and
dec
imul
sub
cmp
movsl
sub
nop
xor
sbb
stc
adc
mov
arpl
dec
in
repz
jb
loope
jnp
sbb
adc
stc
in
and
mov
adc
xor
and
enter
stos
inc
sbb
or
add
dec
test
test
cmc
xlat
add
nop
xorb
filds
test
sub
mov
imul
sbb
or
xchg
push
stos
sbbl
scas
pop
jmp
fmuls
mov
push
sbb
subl
or
ret
faddl
sbb
pop
movsl
mov
inc
icebp
and
mov
cltd
addb
mov
jo
loop
mov
sbb
adc
and
cld
mov
xchg
mov
mov
out
inc
push
sbb
adc
loopne
adc
xchg
loopne
adc
test
xor
rcrl
fstpt
mov
aad
add
adc
or
or
nop
cld
dec
fiadds
adc
dec
mov
mov
push
mov
popa
iret
test
adc
adc
sbb
ret
aad
fldt
or
fs
push
hlt
and
sbb
cmp
and
mov
sub
mov
mov
mov
cmpsb
loop
mov
inc
or
pop
lcall
pushf
les
fidivl
sti
and
jo
stos
adc
insl
je
mov
sub
mov
out
insl
movsb
push
sub
add
cli
cmp
push
mov
mov
cmpsl
or
enter
or
jge
testl
lretw
arpl
push
stc
or
inc
cmp
cmp
push
into
mov
mov
jae
in
and
xor
xor
orb
enter
lret
sar
sbb
add
mov
xchg
and
jo
add
pop
cmp
push
cmp
or
xor
jb
inc
sub
sub
sbb
dec
add
lds
dec
aam
inc
loopne
subl
test
ret
inc
jle
mov
adc
add
push
int
mov
loopne
inc
sbb
cmp
push
xchg
jbe
inc
push
scas
xchg
test
sub
pop
or
or
ret
xor
loop
mov
xor
mov
sti
inc
int
sub
mov
test
xor
or
cli
push
jb
mov
pop
aam
jmp
mov
aad
sbb
jno
lea
add
mov
add
lcall
shlb
mov
sbb
sub
sub
leave
mov
and
out
inc
cmpsb
out
sbb
mov
push
es
sti
test
mov
adc
xchg
mov
push
rolb
adc
aam
outsl
add
lret
push
test
mov
shlb
je
call
clc
in
or
add
cmp
int3
add
mov
lahf
sub
or
adc
and
enter
in
dec
add
add
cs
in
mov
push
clc
daa
clc
pop
in
sub
lods
cmp
repz
sub
or
loop
cltd
jle
out
clc
sti
insl
popf
jmp
xor
push
int
fistl
sub
and
push
sbb
shll
adc
outsl
cs
notb
fs
ljmp
pop
xor
fcoml
loop
insl
outsb
in
into
pop
push
mov
and
iret
mov
push
and
pop
push
dec
xchg
sbb
or
xor
or
xor
mov
enter
mov
xor
in
mov
push
in
fwait
cmp
pop
rorb
loopne
test
inc
dec
popf
inc
add
cmc
xchg
adc
xchg
call
ficoms
jnp
adc
icebp
jne
or
scas
rclb
repnz
inc
es
inc
sub
add
inc
aas
faddl
int3
aad
andl
xor
adc
testb
mov
pop
add
or
and
add
cmpsl
pop
pusha
push
pop
adc
xor
stos
stc
inc
and
ljmp
adc
incl
loopne
adc
jae
push
push
mov
cmp
inc
jo
sti
lcall
scas
mov
pop
shlb
push
test
decb
roll
inc
xlat
ret
mov
mov
daa
push
pop
adc
adc
pushf
lret
push
lahf
push
aam
sbb
add
dec
popa
sar
lds
adc
movsb
lcall
adc
lcall
xchg
cmp
test
add
push
inc
cmp
push
lds
xchg
test
fcomps
xor
inc
aas
fcmovu
nop
sbbl
xchg
cmpsb
jb
sub
push
lods
inc
adc
add
rolb
call
pop
push
nop
divl
sbb
sbb
test
add
push
jns
sbb
aad
les
int
pop
fstps
pop
sub
add
subl
add
clc
or
pop
xlat
mov
scas
or
jno
sbbl
int
xchg
adcl
add
xchg
sub
ret
push
and
cmp
in
push
stos
scas
imul
mov
lea
loopnew
pop
fimuls
rcrl
or
inc
dec
imul
xor
imul
inc
xor
sub
sub
stos
divb
daa
mov
jae
ret
sbb
popa
test
insb
dec
int
mov
add
sbb
xchg
sahf
out
test
out
jnp
outsb
xor
pop
mov
add
addr16
hlt
cmpsb
lahf
jbe
loopne
fs
stos
shl
fimuls
and
out
xor
daa
pop
dec
add
mov
test
mov
loopne
test
outsl
or
sub
mov
shll
test
cltd
adcb
je
pop
pop
xor
xchg
jmp
adc
fmuls
imul
adc
jae
adc
mov
sub
cmp
jo
leave
jnp
in
mov
je
test
aas
sub
jg
rolb
cwtl
push
sbb
ss
add
mov
mov
pop
rcl
jp
fsubs
enter
ret
xor
pop
adc
fcomp
sbb
stos
cmp
or
rcrb
testb
int
add
es
lahf
push
mov
add
push
inc
shrl
addl
push
or
out
xchg
ja
or
daa
push
inc
movsb
sbb
xchg
jae
test
fimuls
mov
mov
cwtl
xor
xchg
dec
leave
sub
xchg
stos
add
lret
leave
fimuls
mulb
push
jb
adc
nop
jae
and
lahf
mov
xchg
in
xor
adcb
inc
xchg
xor
ja
push
xor
insb
sub
dec
mov
mov
mov
jp
stc
in
mov
mov
lret
cltd
fsts
gs
lods
xor
xor
arpl
pop
jb
inc
mov
mov
jb
cs
pusha
xor
stos
inc
arpl
leave
inc
mov
mov
jae
push
pop
aam
inc
xor
cltd
adc
not
fsubrl
cltd
pop
push
mov
out
push
adc
dec
popf
cmp
lret
mov
inc
mov
xorl
mov
shll
sbb
pop
in
sbb
add
cltd
faddl
inc
js
pusha
xor
sbb
sub
add
out
mov
movsb
mov
and
lods
push
sbb
lcall
mov
push
mov
fsubs
add
xchg
ret
shlb
out
dec
aad
xchg
stos
jo
adc
or
fiaddl
cltd
int
push
inc
mov
movsb
pop
lret
add
pop
lds
inc
cmp
mov
cli
sbb
dec
inc
shll
mov
lcall
push
inc
inc
pusha
shl
gs
fs
nop
jae
mov
pop
ret
dec
mov
repz
mov
pop
mov
dec
push
sbb
aas
je
xchg
push
xorl
jnp
and
out
int3
out
adc
jb
xchg
loope
test
lahf
inc
out
sahf
xor
das
daa
arpl
aaa
stos
std
scas
mov
sbb
push
fildll
push
add
cmc
jecxz
cmp
ficoml
adc
inc
scas
loop
loop
scas
enter
push
stc
inc
dec
xchg
or
or
js
lds
inc
jno
popa
sbb
mov
stos
in
mov
mov
enter
test
and
jae
push
test
shrl
sub
adc
pop
add
xchg
sarl
push
js
xorb
xchg
sub
inc
inc
cmp
sbb
and
lret
mov
faddl
popa
xor
jecxz
jbe
push
aas
add
mov
adc
pop
dec
add
sbb
or
adc
add
inc
cwtl
pop
or
loop
sub
inc
jmp
cmpsl
sub
cmp
loopne
cltd
or
jg
mov
xor
dec
enter
rolb
add
adc
loop
jl
sbb
inc
mov
js
out
sub
shrb
fscale
fwait
cmpsb
pushw
pop
sub
scas
push
xchg
jp
or
es
inc
iret
inc
mov
push
test
ds
stos
cmp
icebp
ja
add
imulb
insl
and
xor
jns
mov
push
mov
cmp
pop
xor
test
lret
sti
insb
pusha
sarb
pop
lock
mov
dec
xor
sub
xorl
mov
bnd
jg
ds
in
sub
cmp
testb
jns
pop
mov
lcall
rolb
pop
mov
mov
jb
xor
in
xchg
test
mov
adc
lret
scas
loope
inc
add
push
and
xorl
pusha
enter
aas
xchg
cmp
scas
push
pop
insb
jbe
jo
mov
hlt
nop
pop
adc
adc
cs
cld
lock
jae
pop
mov
sbb
push
pop
int
scas
stos
mov
sbb
add
jne
pop
dec
scas
add
push
mov
push
add
jg
push
cmc
loop
ds
les
pop
rolb
lahf
jge
stos
sbb
or
cs
add
push
and
dec
push
mov
sub
loope
mov
xchg
fldlg2
adc
xor
mov
mov
fs
test
rclb
push
xchg
test
inc
xor
mov
sbb
mov
call
shr
sub
xchg
mov
inc
or
inc
pop
imul
dec
adc
jp
ret
or
mov
fistpl
or
popa
sbb
cmpsb
pop
hlt
ljmp
pusha
test
pop
xlat
stos
movsl
lcall
rcl
sub
push
rorb
pop
scas
inc
nop
xor
mov
add
jl
or
inc
out
es
cmp
xchg
cwtl
cs
push
fsubrl
pushl
xchg
stos
orb
shrl
adc
outsl
out
cmp
xchg
pop
iret
icebp
loope
pusha
and
inc
xchg
jb
or
xor
cmp
push
pop
sbb
cmp
add
mov
mov
pusha
add
lcall
das
popa
jnp
rclb
pop
daa
lcall
sbb
fnstcw
cmp
lcall
cmpsb
inc
aas
pop
push
or
lods
add
lret
cwtl
sbb
cmp
inc
inc
jno
xchg
test
cs
or
and
jae
or
push
test
and
iret
sub
rcpps
jns
cltd
pop
sbb
pop
mov
xchg
or
or
iret
in
leave
pop
mov
adc
adc
outsb
lret
jl
xor
lcall
sbb
add
jmp
jne
daa
or
jno
hlt
xchg
lret
sbb
mov
in
jmp
xlat
inc
pop
mov
sub
pop
cs
sbb
sbb
jb
push
int3
sub
add
out
or
push
int3
rorl
cltd
and
pop
xor
xchg
scas
icebp
loopne
imul
sbb
pop
dec
push
mov
jo
sbb
dec
push
lea
xor
insb
pop
fsubs
lcall
out
mov
mov
push
rorl
add
fs
cmp
popw
fmuls
daa
sbb
or
mov
sub
add
js
arpl
xor
addb
add
mov
sub
data16
rorb
push
ret
mov
inc
rcrb
add
adc
and
pop
nop
int
push
jno
aam
ficoml
dec
add
push
cmc
sub
adc
ret
sbb
mov
clc
sbb
jo
push
adc
nop
out
orb
push
sbb
imul
cmp
add
xor
mov
notl
sub
push
and
lock
jbe
popf
shlb
ljmp
mov
sbb
inc
test
cmp
pop
inc
pushl
ret
adc
dec
add
mov
test
and
xchg
sub
push
xchg
lahf
inc
pusha
sbb
jmp
test
jae
nop
adc
pop
xchg
rolb
js
stos
lret
add
cmpsl
jb
cs
jmp
in
xor
adc
or
pop
pop
stos
sbb
push
movsb
sarb
fmuls
add
in
xor
jg
mov
pop
dec
cmp
cwtl
dec
stos
add
inc
jmp
jp
jbe
std
adc
push
fdivs
mov
adc
sbb
mov
mov
push
adc
cwtl
mov
push
add
popa
inc
lds
jmp
or
inc
inc
or
push
insb
mov
inc
stos
lret
push
mov
cmp
jo
pushf
inc
dec
xchg
lds
orb
loop
inc
mov
pop
mov
add
or
mov
test
adc
push
xchg
popf
pop
lock
sahf
lods
negb
inc
mov
stos
pop
jne
cwtl
mov
inc
scas
loop
adc
pop
aad
or
inc
cs
jne
test
in
clc
dec
add
test
mov
inc
movsb
xchg
adcb
leave
mov
inc
test
push
and
adc
es
dec
mov
jno
fs
cmp
add
mov
ja
and
pusha
rolb
xor
in
aad
push
dec
popa
repz
loopne
xor
mov
sub
push
pop
or
xchg
jg
adc
fisubl
fstpl
test
nop
shrl
aad
mov
push
movsl
or
or
fbstp
inc
pop
fisubl
rcr
push
sub
jp
scas
daa
sub
jp
stos
mov
and
cmp
popa
stc
inc
mov
pop
in
add
movsl
loop
mov
or
sub
jo
lcall
mov
test
xor
in
test
fimuls
push
lret
adc
jne
sub
jo
dec
orb
push
pop
data16
mov
lcall
inc
ror
cmp
sub
test
mov
lcall
push
dec
xchg
movl
push
faddl
add
out
sub
pop
cmpsb
repnz
push
push
add
push
icebp
nop
into
xor
sbb
mov
aad
pop
add
push
loope
in
cmpsb
iret
xchg
add
and
inc
mov
out
push
outsb
lret
call
out
jo
test
stos
gs
pop
es
cmp
jno
xchg
cmc
rcrl
inc
sbb
or
in
pop
subl
mov
sarl
or
fcmovb
inc
sarb
dec
flds
mov
adc
mov
test
cmp
cmp
scas
mov
lcall
xor
jo
xchg
push
mov
sub
cmp
adc
add
dec
nop
push
js
out
push
push
shlb
ds
rcrl
inc
xchg
sbb
pusha
xor
test
xchg
in
add
fiaddl
push
in
push
js
dec
pusha
xor
lcall
adc
xor
add
in
jecxz
xor
sub
in
in
cmp
pop
in
xchg
test
inc
jae
das
and
add
popf
aad
dec
scas
mov
and
out
shl
or
pop
or
loopne
add
js
xor
repnz
pop
ret
push
jae
repz
push
leave
mov
jle
pop
out
rclb
and
scas
adc
scas
out
cmpsl
fcomps
into
rcrl
icebp
inc
icebp
outsl
enter
xchg
dec
or
mov
popa
push
cld
mov
scas
int
add
ret
mov
push
sbb
xlat
adc
push
dec
aad
inc
test
add
mov
aas
or
add
push
pop
ret
roll
dec
xchg
imul
mov
mov
xor
pop
aad
stos
subb
push
or
ret
daa
jg
push
pop
push
mov
jle
or
xor
lcall
pop
dec
into
shlb
test
in
mov
int
pop
movsl
and
xor
pop
loope
ficoms
mov
sti
add
pop
xchg
sarl
mov
xchg
mov
xor
add
outsl
xchg
scas
inc
push
or
xchg
push
sub
mov
xchg
add
addr16
push
inc
into
jecxz
sti
mov
inc
xlat
sub
aaa
dec
lea
test
lock
nop
stos
fstpl
movsl
out
mov
jmp
mov
jmp
cmova
in
inc
xchg
inc
dec
int
or
pop
mov
push
pop
inc
ljmp
les
rcl
in
das
xchg
jle
ljmp
lds
and
xchg
push
clc
shrb
loope
in
push
out
fwait
adc
notl
or
xor
pop
xor
int
mov
test
rolb
mov
scas
mov
shlb
sbb
loope
sbb
pop
adc
cmp
or
fwait
mov
add
repnz
mov
scas
push
cs
jno
sub
push
es
pop
xor
scas
test
mov
ud2
ret
ret
or
mov
xor
lock
xchg
pop
stos
subb
lea
xchg
and
lret
bndstx
sahf
sbb
ljmp
xchg
adc
jl
pop
loope
aad
xchg
js
lcall
loope
gs
testb
jg
mov
sbb
fnstsw
inc
and
cmove
xchg
rcrl
push
cmp
into
push
loopne
sub
add
addl
data16
mov
ret
inc
stos
dec
ja
push
ja
push
inc
pop
push
fcoms
cltd
jb
test
adc
gs
push
lret
imul
mov
cmp
popf
push
int
lods
jno
push
jbe
test
cmp
ss
xor
cwtl
int3
jae
out
scas
or
sub
xchg
and
mov
addb
and
pushf
add
sbb
or
and
jae
sbb
xchg
push
stos
cmp
pop
in
or
add
adc
jmp
cmp
jmp
test
xchg
adc
xchg
mov
xor
mov
mov
xlat
add
xor
in
pop
cltd
int
dec
xchg
imul
mov
adc
mov
adc
xlat
sbb
daa
add
repnz
inc
xor
out
faddl
and
sti
push
pop
jnp
test
aaa
ret
cmp
sar
cmp
xor
adc
sbb
xchg
push
fimull
pop
loopne
push
push
in
fisttpll
add
xchg
scas
idiv
fistpll
sbb
or
pop
mov
ret
xor
sbb
inc
and
repnz
add
lcall
cmp
shll
jo
andb
ja
xchg
push
pop
mov
jmp
push
js
mov
xchg
rcll
push
adc
mov
pop
imul
xchg
imulb
push
inc
popa
stos
pop
lea
lret
sahf
mov
aam
rclb
adc
cmovbe
inc
imulb
or
and
jb
push
mov
leave
loope
add
mov
js
sbb
pop
cwtl
inc
hlt
dec
mov
xchg
cmp
push
ret
xchg
roll
mov
popf
jg
push
or
es
bound
adc
popf
mov
push
cltd
stos
cmp
sub
adc
add
push
mov
lcall
lods
mov
lret
dec
inc
xor
ret
sbb
inc
rcl
test
iret
add
or
mov
push
pop
shlb
dec
adc
inc
push
mov
inc
sub
lods
cmp
mov
xor
and
add
or
xor
mov
xor
pop
into
dec
sbb
mov
rolb
or
cwtl
std
xor
pop
push
sub
mov
test
cmp
popf
mov
sub
adc
push
stc
shl
jo
call
cmc
sbb
shrb
push
jle
pop
adc
add
push
adc
sub
xor
sub
push
rcrb
pusha
jnp
or
shr
pop
inc
fs
cmp
cmp
mov
in
sbb
sbb
push
aaa
outsb
push
push
xchg
shll
cli
fcmovnbe
insl
stos
xor
filds
stos
cmp
ret
or
add
imul
inc
in
sbb
xchg
add
add
cmpsb
jo
jp
lea
lcall
add
addr16
cmp
mov
mov
xchg
in
lret
push
xchg
in
dec
loopne
les
adc
push
cmp
and
xchg
fadds
adc
hlt
test
sub
stos
loope
jo
ja
into
andl
inc
push
sbbb
jae
jb
ja
fldcw
pushf
popa
loop
xchg
jp
sub
xor
scas
data16
or
mov
fst
and
in
out
cmp
sub
movsl
or
pop
adc
cmp
push
inc
push
cmc
ljmp
loopne
dec
out
call
or
push
xchg
mov
sbb
int
ret
adc
inc
pop
scas
adc
push
mov
jae
push
push
adc
pop
test
xchg
shlb
sbb
in
xchg
stos
imul
scas
add
dec
cli
inc
mov
movsb
and
mov
inc
stos
push
iret
cmc
inc
mov
cmpsb
inc
jl
or
add
repz
push
mov
add
cmp
inc
cmp
pop
into
push
jecxz
and
stos
loopne
pop
mov
xchg
jae
dec
movsb
sub
xchg
mov
xrelease
jo
into
rolb
xor
pusha
sub
mov
mov
push
and
and
or
pop
fsts
jb
lcall
xchg
xorl
or
rclb
test
mov
aad
mov
popf
add
sbb
jp
pop
scas
xor
push
and
xchg
cmp
add
or
fs
push
subb
sub
sbb
xchg
xor
iret
outsb
pusha
cmp
xchg
xor
inc
cs
ja
movsb
sub
lock
fs
loope
xchg
push
popf
hlt
dec
sbb
and
add
das
rorl
inc
pop
cmp
xchg
mov
adc
mov
ds
add
pop
cli
mov
push
call
jo
inc
enter
ja
mov
and
xor
pushf
leave
push
cs
shll
mov
xchg
add
mov
sbb
jb
add
adc
rolb
in
ret
sub
mov
push
xor
or
dec
mov
pop
js
dec
ljmp
sbb
cltd
insl
add
xchg
pop
test
jecxz
cs
decl
mov
hlt
sub
fs
jo
push
xchg
je
jo
add
adc
out
add
push
in
movsl
pop
adc
loopne
gs
testl
mov
push
sbbb
sub
and
jo
mov
jb
and
cmp
xorb
sub
adcb
xlat
xchg
adcb
clc
and
into
inc
mov
push
xor
fwait
xchg
and
stos
movsl
jp
jo
stos
adc
loopne
mov
sbb
jg
adc
cmp
js
je
inc
push
inc
push
cmpb
loopne
push
jae
out
mov
jo
loopne
jae
stos
mov
mov
cmpsb
data16
xchg
lret
pushf
fisttpll
cmp
pop
cmpl
or
aam
es
ss
xor
test
dec
and
mov
stos
mov
std
cs
gs
inc
xlat
int3
or
xchg
pop
insl
leave
in
push
mov
add
xor
shll
out
mov
sbb
popa
xor
in
add
push
cwtl
xor
aaa
mov
sub
cmp
xor
pop
adc
jle
jne
or
mov
push
int
iret
cmp
xchg
out
inc
mov
push
mov
push
mov
adc
mov
clc
mov
in
pop
cmpsl
mov
push
jecxz
das
lea
push
jle
outsb
mov
adc
inc
lea
inc
je
push
jp
movsb
add
add
fnstcw
sbb
shlb
clc
fadds
or
outsb
pop
mov
aaa
shr
add
pop
sbb
mov
dec
lods
js
and
add
jb
hlt
push
arpl
or
adc
mov
andl
push
push
xor
shll
pop
jecxz
cld
cmpb
mov
push
cltd
sub
outsl
push
cmp
pop
fistpll
add
inc
je
add
pop
xchg
or
sti
mov
cmp
stc
mov
xchg
inc
inc
mov
fisubl
or
stc
inc
rolb
hlt
adc
popa
sar
add
nop
sbb
jae
mov
cmp
mul
adc
cmpsb
push
push
jmp
test
xchg
add
or
aad
xchg
jp
pop
mov
sub
cmpb
inc
mov
stos
xor
pop
inc
or
sub
mov
jo
or
out
pop
cmp
inc
les
pop
xchg
add
inc
in
sbb
cld
or
push
jne
ja
cmp
add
pusha
mov
inc
cwtl
in
jmp
jb
iret
adc
test
popa
xor
jmp
jno
mov
call
movsb
add
jno
insb
adcl
push
ja
add
xor
inc
into
cmp
mov
cmp
xchg
xor
movsl
pop
pop
or
hlt
movsl
inc
inc
mov
dec
dec
inc
mov
movsl
mov
add
in
push
xor
ret
mov
adc
int
sbb
add
lods
sbb
xorl
stos
adc
inc
push
mov
add
lods
insl
js
icebp
add
stos
rclb
enter
aas
inc
adc
mulb
and
dec
ja
sub
xor
std
test
or
into
popf
add
pop
pop
clc
mov
stos
jo
insl
mov
cmp
mov
retw
xorl
sti
cmc
cli
sbb
cmpsb
mov
sbb
test
xlat
popa
xor
add
cmpb
xor
mov
rorl
fistl
inc
pop
mov
hlt
hlt
andl
add
addb
cmc
xlat
mov
inc
push
or
in
or
push
xor
cld
rol
loopne
in
add
adc
or
lret
add
orl
inc
test
rcll
pop
cmp
sbb
jecxz
push
int
adc
cmp
testb
adc
or
push
add
adc
push
xorb
ret
rcrb
mull
add
sbbb
add
add
pop
cmpl
add
push
inc
lock
in
mov
sbb
mov
inc
add
push
adc
xlat
add
mov
test
inc
loopne
sbb
ret
mov
or
test
push
inc
repz
aad
mov
mov
add
inc
aad
push
add
push
adc
pop
inc
sarb
popa
test
add
movsb
or
add
mov
pop
call
adc
andnps
cmp
and
lds
adc
add
and
push
in
xchg
push
sahf
test
aaa
mov
mov
mov
in
sub
adc
or
icebp
inc
insl
in
jecxz
ss
or
pusha
add
and
or
pop
hlt
movsl
sbb
scas
loop
sub
push
or
fadds
in
dec
aam
test
add
pop
xchg
inc
add
mov
mov
loopne
sub
and
sahf
xchg
shrl
dec
les
jg
icebp
jno
shrb
mov
inc
push
outsl
mov
call
mov
pop
xchg
add
jnp
adc
loopne
xchg
or
sub
xor
leave
cmp
dec
push
xor
xor
enter
inc
cmp
sbbb
jmp
test
and
push
cmp
int3
pushf
push
adc
lcall
sub
mov
push
and
mov
jns
and
cmpb
sub
jg
adcb
repnz
lea
xchg
daa
int
mov
add
inc
push
push
sbb
or
inc
test
mov
cmpb
mov
enter
mov
rclb
sbb
sub
ss
loopne
sub
pusha
dec
push
sbb
or
adc
pop
xor
movsb
xchg
inc
movsl
ljmp
dec
movsb
sub
add
add
push
jg
cs
out
inc
adc
pop
ja
or
jmp
and
lea
add
mov
in
lcall
aam
jae
lcall
mov
andb
out
sbb
in
pop
rcrl
xchg
push
aaa
inc
addl
cmp
into
push
mov
add
mov
cwtl
sub
inc
test
inc
scas
int3
and
push
jb
or
loope
mov
sahf
xlat
daa
sub
pop
fwait
sbb
dec
jnp
sub
sbb
jns
js
mov
lcall
mov
add
andb
fs
in
dec
jle
xorl
xor
loop
addr16
stos
push
ja
pop
es
adc
int
sub
inc
bound
add
adcl
repz
cmp
in
in
lods
or
or
and
xor
cmpsl
mov
adc
push
pop
push
add
addb
xchg
push
pop
adc
adc
or
into
in
mov
orb
jmp
repnz
or
je
addr16
loope
inc
mov
in
movsb
and
imul
iret
call
cmp
rol
sbb
test
add
fnstcw
in
enter
inc
scas
add
push
sbb
addl
push
roll
pop
ret
sbb
stos
repz
pop
pop
push
adc
or
dec
sbb
jae
xchg
enter
push
dec
mov
fisttps
add
and
mov
add
clc
push
mov
not
and
stos
out
shl
loop
fisubs
pop
mov
mov
sub
ds
or
xchg
je
mov
xchg
and
clc
mov
gs
leave
dec
shll
int3
adc
push
add
sub
hlt
mov
in
mov
push
add
adc
jne
loopne
push
or
mov
mov
enter
sbb
adc
rclb
and
clc
jp
sbb
inc
push
add
sub
jbe
xchg
or
sub
mov
jae
or
add
int
test
fsubs
push
add
push
inc
adc
pop
push
adc
mov
scas
movsl
outsb
testl
lret
inc
inc
jecxz
adc
xor
mov
dec
and
jo
mov
and
stos
sub
xchg
dec
sbb
lret
aam
push
inc
leave
mov
cmpl
sbb
cmp
inc
mov
sub
test
bound
outsl
cmp
add
imul
out
add
add
and
or
gs
add
inc
lock
push
push
mov
cmp
and
jmp
adc
adc
push
int
ja
sub
mov
test
lock
xor
pop
lret
lods
and
test
lods
repnz
imul
loop
mov
gs
jno
xchg
sub
pop
xchg
cmc
push
xchg
rolb
stc
mov
add
xchg
int
xor
adcb
lret
subb
pop
mov
inc
push
sbb
or
sbb
pop
inc
jae
scas
push
cmp
sbb
add
push
cmp
add
sbb
sarl
sbb
jb
push
mov
mov
xor
adcl
jae
aad
cld
xor
and
cltd
xchg
mov
cld
push
lcall
add
add
mov
addb
test
and
sbb
push
test
push
es
or
andl
rcr
popa
and
cmp
lea
or
xor
loope
rcrl
pop
stos
mov
aaa
out
adc
xor
imul
je
cli
push
add
push
inc
adcl
cmp
aam
sub
andb
hlt
xchg
jns
push
int
movl
xchg
shlb
mov
push
nop
sub
imul
mov
adc
cmp
sbb
or
mov
and
sub
or
sub
xor
pop
add
and
push
mov
daa
fdivs
shll
mov
testl
pop
scas
movsl
or
sub
xor
mov
cmp
add
shl
mov
push
add
ret
sbb
fisubrl
xor
xchg
pop
aam
mov
push
orb
sti
or
arpl
cmovo
jmp
imul
or
or
fcoms
add
call
push
clc
push
sarb
cld
in
mov
or
push
mov
dec
scas
add
add
lds
xchg
mov
xchg
or
cltd
push
cltd
pop
aam
jo
jns
lods
jb
mov
mov
add
clc
ret
ficompl
sbb
hlt
in
je
push
mov
sbb
xchg
pop
jae
mov
nop
add
xchg
cmpsb
mov
into
adc
je
mov
cmp
and
ror
add
inc
mov
jae
dec
jmp
xor
xor
ja
in
or
es
mov
xchg
mov
dec
mov
add
test
mov
je
push
mov
addb
cmp
and
in
hlt
add
mov
xor
add
sub
movsl
push
dec
xchg
int3
dec
fchs
mov
adc
fmul
push
add
mov
and
pop
jecxz
mov
ret
rorl
jo
mov
popf
xchg
mov
mov
sbb
pop
pusha
dec
lahf
push
add
or
inc
int
mov
in
push
sub
out
out
add
cltd
mov
lds
jb
dec
test
add
enter
or
fimull
or
xor
mov
sbb
pop
sub
mov
adc
adc
xor
or
push
and
jg
mov
inc
adc
lret
adc
int3
pop
in
sbb
in
add
push
mov
push
cmp
push
rol
insl
pushf
and
sub
push
sarl
inc
xor
jo
mov
add
xor
test
es
adc
inc
sub
jmp
push
jo
and
mov
xor
test
xor
add
loopne
mov
cmp
jnp
loope
jae
sbb
inc
push
sarl
add
lods
inc
icebp
jp
and
ret
in
and
or
pop
dec
adc
aad
xchg
and
aam
sarb
sbb
sub
pop
js
jmp
imul
add
mov
or
xor
or
imul
adc
dec
sub
rorl
add
mov
pop
test
xor
inc
push
jo
inc
push
pop
in
cmp
mov
xchg
sbb
out
add
sbb
inc
dec
andl
jb
and
test
movsl
sbb
add
sbb
adc
loope
cwtl
sub
and
and
sub
test
jae
es
mov
sub
mov
add
push
mov
lret
sub
sbb
test
or
es
sub
add
lahf
imul
or
fcoms
stos
sbb
imul
bound
fildll
sbb
adc
repz
adc
and
popa
push
and
movsl
push
ss
push
scas
adc
push
or
movsl
lds
test
dec
push
and
ljmp
das
icebp
lret
sbb
jb
lret
fwait
test
and
rcll
push
out
xchg
xchg
dec
sbb
mov
std
push
inc
sub
stos
stos
and
mov
cltd
jecxz
clc
xchg
adc
sbb
cmp
inc
loopne
push
pop
cmp
push
hlt
cmp
add
and
jb
pop
jno
fs
mov
lock
es
leave
in
test
dec
pop
cltd
insl
adc
inc
int3
push
scas
enter
jno
movsl
xorb
dec
pop
das
sub
xchg
daa
push
and
sbbl
cli
gs
add
push
push
xor
or
subb
lods
fwait
pushf
sub
jbe
push
jp
mov
and
popa
push
push
mov
xchg
or
fistpl
mov
lea
adc
sbb
pusha
fisubl
rolb
test
nop
xor
push
stos
xor
mov
pop
cmc
ret
stos
mov
or
orb
mov
pop
xorl
dec
push
push
mov
add
xchg
mov
adc
pop
scas
scas
mov
inc
push
mov
loop
in
dec
mov
push
mov
fucom
ret
daa
add
in
push
out
aad
or
popa
xchg
inc
mov
push
or
cmpsl
inc
cmpl
jne
cmp
mov
push
bound
mov
test
jmp
xchg
jl
cmpsb
add
add
adc
xchg
and
jne
jo
test
lods
and
sub
inc
rclb
cmp
lcall
adc
xor
xchg
testb
xor
mov
das
jnp
mov
cltd
pop
mov
loopne
and
insb
mov
push
jbe
stos
mov
add
sbb
lods
xlat
push
or
andl
push
push
mov
andb
xchg
pop
jae
mov
push
push
mov
or
mov
mov
push
imul
push
ret
sbb
insl
cwtl
add
scas
rcl
enter
lock
sbb
cmp
jae
sub
xlat
sbb
dec
hlt
jbe
sbb
or
mov
rclb
and
ret
mov
stos
push
cltd
or
xchg
stos
dec
jmp
hlt
add
out
ljmp
movsl
push
sbb
cmp
vmread
add
add
sbb
dec
js
loopne
lret
sbb
mov
add
jae
into
dec
jb
iret
pop
and
mov
push
scas
ret
push
pop
dec
pushf
or
jns
scas
jns
xor
sub
gs
icebp
jno
subl
xor
aad
loope
out
jo
xor
arpl
fucomip
sub
iret
mov
icebp
push
sub
icebp
lea
jnp
xor
lret
adc
jge
outsl
dec
xchg
push
pop
decl
sbb
mov
adc
leave
add
clc
or
shr
inc
xor
fisubrl
enter
mov
mov
ret
aam
push
subb
outsl
push
push
roll
xor
add
pop
jae
mov
mov
adc
stos
sbb
in
stos
cwtl
lea
enter
inc
mov
jmp
lahf
fwait
lds
add
push
push
push
push
icebp
sub
lds
aas
lar
add
inc
add
in
loop
rorl
adc
or
arpl
xchg
xor
push
adc
imull
test
dec
lock
enter
dec
lock
fdivrs
xor
cmpsl
fcoml
mov
mov
rcll
or
xchg
or
add
testb
es
cmp
xor
clc
pop
pop
test
ret
push
jge
flds
or
lds
inc
insb
rol
add
adc
fsts
out
xchg
adc
or
hlt
add
enter
scas
or
dec
push
popf
xchg
dec
test
jo
and
inc
rorl
xchg
imul
pop
mov
lods
fistl
js
cmp
and
stos
fcos
je
ds
sbb
adc
jmp
push
mov
add
incl
sub
cmpsb
cmp
shll
adc
mov
inc
mov
add
or
popa
fxch
mov
pop
push
pop
add
pop
push
jg
lods
inc
push
stos
rcll
pusha
js
push
inc
add
out
mov
xor
push
sub
xor
cmp
add
clc
scas
xchg
jae
loope
or
dec
cmpsl
pop
push
jno
inc
mov
jle
adc
popa
lret
cmc
or
xchg
mov
pop
stos
pushf
pop
es
push
inc
inc
cmp
rcl
add
out
sub
pop
pop
dec
mov
or
popf
xor
pop
xchg
dec
cmp
std
or
movl
or
shlb
cmp
pop
push
sbb
pop
test
in
dec
add
or
pushf
jp
adc
popa
ss
aad
mov
fwait
ds
call
ret
vmaxpd
shrb
out
and
xchg
cmc
or
or
add
dec
inc
pop
in
mov
push
mov
adc
add
loopnew
push
cwtl
cmp
daa
fcomps
mov
addl
mov
add
sbb
stos
push
mov
cli
pop
mov
add
jo
xor
jnp
jmp
cs
mov
xor
sarl
loopne
sbb
sbb
nop
add
jae
or
addr16
mov
xor
mov
rcr
incl
xchg
inc
dec
jle
aam
inc
pusha
mov
sbbl
xor
inc
and
dec
mov
push
test
ja
jo
add
xor
cltd
imul
dec
inc
lods
cltd
ljmp
pop
jno
cmp
push
into
mov
lock
inc
jae
mov
xchg
mov
push
add
adc
fadds
in
add
push
xor
push
mov
ret
or
je
out
cmp
or
or
or
add
ss
xor
pop
or
mov
xchg
and
inc
jo
and
xlat
mov
and
in
mov
enter
cld
aam
or
test
push
or
pop
jae
inc
xor
loopne
inc
xor
sub
mov
ret
rorl
xchg
jg
sub
jb
push
or
andl
lods
add
loopne
ss
stos
jo
jg
aad
mov
loopne
xor
lcall
add
mov
jo
in
push
daa
out
cltd
jp
dec
sub
and
fildll
sbb
xchg
sub
pop
adc
cs
sbb
lods
push
and
ljmp
inc
jo
push
xchg
xchg
pop
push
push
mov
rcrl
mov
xchg
lock
gs
test
pushw
mov
mov
pop
bound
outsl
jo
test
jb
loop
into
mov
mov
cmp
push
cli
push
pop
orb
shl
inc
pusha
test
mov
pop
jp
ljmp
or
icebp
divl
xchg
or
lret
fldt
cs
adc
dec
push
lods
xor
insb
ret
push
mov
int
sbb
cmc
jns
mov
add
add
inc
xchg
leave
cmp
xchg
rolb
into
xchg
mov
mov
xchg
pop
test
sbb
mov
push
cmp
mov
in
sbb
test
out
std
mov
sbb
or
test
sbb
mov
sbb
jle
xchg
and
lcall
push
sbb
cmp
jo
in
fdivr
insl
mov
xchg
rclb
lret
or
mov
out
and
data16
xor
fdivrs
ja
xor
int
dec
in
push
fs
mov
push
nop
rcll
jl
mov
stos
mov
ret
add
lcall
out
rolb
call
sbb
std
out
adc
xchg
in
sbb
out
adc
gs
sbb
cltd
sbb
xor
mulb
pushf
sub
pop
lds
xor
adc
xor
cli
dec
jns
iret
sub
cmp
sti
addb
rcrl
jnp
rclb
mov
push
jno
test
sub
add
sbb
pop
adc
xor
sub
and
loopne
or
and
sbb
loop
sbb
push
and
lds
push
add
sbb
repnz
push
loopne
add
add
dec
push
mov
sub
adc
lcall
push
les
sub
inc
sbb
push
dec
sub
dec
sub
cltd
add
or
adc
push
shlb
add
mov
mov
pushf
sub
or
lret
pop
sbb
pop
mov
ficoml
out
sub
ja
sbb
push
roll
sti
sbb
stc
jo
jle
and
outsl
sbb
imul
jbe
aam
leave
jne
cli
sub
int
int3
jmp
lds
add
inc
inc
les
add
daa
daa
dec
xchg
or
and
aam
aad
lock
imul
mov
cli
or
sbbb
add
loopne
and
outsl
pop
rcrl
adc
aas
and
iret
data16
addr16
leave
bound
dec
push
adc
or
repz
and
mov
and
out
sub
pop
inc
jg
pop
adc
jb
shlb
lahf
push
loop
inc
sub
cltd
stos
pop
push
mov
add
test
add
add
test
and
sub
pop
or
push
sbb
add
push
addb
add
xchg
ret
test
stos
pop
scas
fsubs
mov
in
sbb
inc
rcrl
adc
pop
call
addr16
stos
sbb
out
lock
inc
inc
sti
xor
push
pop
adc
push
shr
xchg
loop
ret
ficoml
out
mov
fldl
or
adc
lock
xchg
adc
ljmp
pop
add
push
push
shlb
sub
sbb
mov
scas
dec
xchg
addb
jo
lcall
or
push
cmc
shl
pop
adc
adc
push
insb
or
sub
add
adc
xchg
xchg
rcl
out
push
cmp
inc
push
repnz
or
stc
mov
lret
or
dec
jo
outsb
in
cmc
sub
jns
call
or
mov
or
or
xchg
inc
cmp
jne
ja
ljmp
jmp
je
push
inc
xor
shlb
shrb
pop
inc
adc
je
in
add
push
out
icebp
xor
add
inc
inc
mov
sbb
clc
scas
jl
test
repz
push
and
push
jne
pop
mov
pushl
pop
sbbb
aaa
inc
jl
in
loope
or
shll
adc
mov
lret
out
rclb
stos
sbb
and
jno
or
jb
sub
dec
mov
inc
pop
sbb
ja,pn
xor
test
adc
jge
subb
stos
ja
inc
mov
sbb
rclb
test
and
lods
ret
cli
xor
or
mov
into
inc
frstor
dec
js
or
sub
inc
mov
ficompl
jl
push
adc
loop
cltd
enter
or
mov
pop
or
push
ds
add
pop
loope
sub
stos
scas
cltd
jo
and
pop
cmpb
push
mov
add
adc
push
push
cld
inc
jle
push
push
jae
out
ja
addb
xchg
dec
inc
sbb
cwtl
ja
loop
ljmp
and
push
jb
mov
jno
mull
inc
jb
push
out
xor
jae
mov
lret
shlb
or
cs
mov
inc
xchg
fmul
and
stos
sbb
test
add
scas
adc
jo
push
push
fsubs
fmul
xor
adc
scas
jb
jo
sbb
cmpl
jns
sbb
pop
nop
push
insl
push
mov
or
xlat
inc
aad
imul
push
mov
xchg
push
inc
push
cmp
push
jg
cmp
xor
ds
add
ljmp
call
and
lea
push
jae
cmp
xor
cmp
dec
push
into
sub
add
test
lret
rclb
inc
sub
loopne
sbb
rorl
push
gs
and
stos
adc
or
inc
mov
add
cmp
and
mov
shrb
add
es
inc
rcll
stc
sbb
and
mov
cwtl
mov
rorl
push
jbe
es
cmp
xchg
inc
ja
scas
add
mov
push
jo
xchg
push
cltd
mov
mov
mov
jle
mov
add
pop
fistpll
push
add
dec
cmp
mov
cmp
mov
sbb
jno
scas
mov
xchg
xor
xor
push
fimull
mov
in
push
cmpsb
enter
loopne
push
adc
stos
bound
sub
pusha
jb
sub
sbb
jo
dec
pop
push
or
push
xchg
jmp
pop
imul
push
aas
add
subl
popa
and
jge
cmp
fsubrs
stos
mov
xchg
xor
push
push
test
xor
cmc
pop
xor
fmuls
pusha
xor
add
jb
mov
xchg
mov
pop
sub
mov
mov
ja
lret
jnp
xorb
push
lods
sbb
bound
out
or
cltd
divl
pushl
cmpl
jp
ss
outsb
out
cmpsb
mov
in
xchg
add
test
dec
mov
push
inc
stos
fsubl
inc
mov
dec
pop
xor
aad
mov
outsb
xchg
cmp
lcall
jmp
pop
addb
test
mov
or
lret
and
or
pop
cmp
mov
pop
jae
or
test
jae
xor
int
xor
mov
jo
xor
xchg
ret
hlt
mov
cwtl
sbb
inc
cmp
pop
push
sub
int3
subb
les
add
mov
ret
out
push
in
imul
add
inc
jae
xor
imul
pop
jb
rcrl
add
out
sbb
jo
sub
enter
mov
sub
inc
xor
es
movsl
stc
jge
or
jae
sbb
lock
mov
pusha
and
dec
mov
jmp
sbb
adc
adc
add
mov
es
aad
loopne
dec
incb
lea
pusha
shlb
stos
jecxz
lcall
adc
test
push
aad
push
fists
pop
fisubrl
or
es
outsl
loopne
sbbb
cld
int3
xor
add
adc
int
dec
sub
sbb
filds
enter
rcrb
fcoms
loop
in
adc
mov
stos
scas
jns
or
jge
sub
pop
stos
adc
add
sbb
mov
sub
andl
or
lock
inc
xor
push
orl
mov
test
outsl
mov
fdivp
cmc
fwait
jp
adcl
enter
dec
sub
cwtl
insb
icebp
pop
pop
or
das
fmulp
add
idivl
shrb
rcll
orb
add
es
cmp
mov
mov
or
cmp
addb
add
mov
dec
stos
cmp
sbb
daa
mov
out
popa
xchg
mov
mov
fdivs
inc
mov
mov
imul
xchg
test
aam
clc
or
mov
xchg
mov
popf
fadd
test
ret
push
mov
cmp
lcall
and
push
pop
or
mov
data16
mov
cmp
mov
or
loop
lea
push
aam
jnp
data16
outsb
push
dec
push
and
jo
adcb
or
mov
lcall
mov
push
jo
push
push
xchg
mov
sub
sbbb
in
cltd
test
mov
cmpsb
jo
push
shll
out
loop
add
sub
push
int3
sub
xchg
ret
mov
stos
lahf
adc
fsubp
pop
aad
rorb
cltd
mov
cmp
iret
add
mov
jo
push
outsb
and
push
movsl
mov
fidivrs
cmp
xchg
sub
inc
inc
mov
add
sbb
test
out
pusha
mov
pop
ja
xorb
adc
inc
cmp
sub
jb
xchg
lea
mov
orl
das
sub
jne
pop
aam
push
pushf
fidivl
lret
ja
pop
insb
push
cs
sbb
andl
test
inc
sbb
or
or
cmp
mov
loopne
testl
jl
mov
xchg
xor
stos
aad
inc
shll
cmc
cmp
mov
sbb
cwtl
xor
bound
pushf
test
lcall
pop
loope
jo
xor
mov
inc
adcl
xchg
add
jno
mov
es
mov
and
lret
inc
jmp
mov
add
out
popa
push
mov
rorl
jnp
mov
lcall
ficoml
mov
sbbl
sbb
out
sub
inc
push
or
iret
mov
jo
sub
jbe
scas
add
cmc
xor
sbb
lods
sbb
mov
push
lods
sub
loope
addb
sub
mov
shlb
sbb
push
scas
push
cmp
xor
jae
mov
cmp
inc
loope
fiaddl
ror
inc
mov
ficomps
pop
popa
push
into
lds
out
lods
xchg
mov
mov
cmp
push
fiadds
int
sbb
mov
fcoms
out
cmpsb
callw
cmp
nop
adc
rolb
cltd
jo
sub
xchg
sub
inc
lods
cmp
outsb
lea
push
and
mov
clc
mov
push
pop
sbbl
push
inc
imul
shll
jae
jnp
or
push
sub
inc
and
aas
stos
test
or
add
bndldx
xchg
rcrb
aas
push
xchg
xchg
sub
cld
mov
jnp
or
sbb
inc
xor
jbe
les
mov
push
and
es
les
pusha
mov
cltd
or
and
scas
add
sub
nop
sub
sub
or
sub
arpl
xchg
jae
mov
int
mov
dec
int
mov
stos
mov
or
test
mov
cmpl
and
mov
adc
test
movsl
xlat
mov
xchg
or
mov
sbbb
nop
mov
in
push
xchg
sub
add
out
out
imul
mov
fwait
xlat
pop
ret
jle
push
add
xor
xorl
cmp
xchg
jle
cmp
popa
jo
shll
rcrb
inc
pop
push
jb
inc
push
or
inc
js
pusha
mov
and
ret
push
imul
or
pop
addb
pop
inc
into
js
stos
mov
enter
jmp
fidivl
inc
cmpsl
push
push
jnp
jl
mov
jmp
inc
xchg
mov
sub
xchg
cltd
or
push
pop
xchg
fistpl
in
xor
pop
in
das
xchg
mov
add
insb
aam
lcall
add
dec
adc
and
sbb
adc
or
cli
inc
nop
fstpl
mov
js
inc
cld
cmp
lcall
mov
pop
call
mov
repnz
in
clc
sbb
enter
push
or
inc
jno
fnstcw
xchg
add
mov
clc
mov
or
adc
add
loope
xchg
inc
mov
push
xlat
or
je
adc
xor
cmpsb
xchg
loop
dec
mov
addb
pushf
add
stos
add
mov
adc
and
and
std
and
leave
dec
add
xor
jmp
pop
cmp
inc
mov
in
in
inc
fwait
or
jmp
adc
cmp
mov
leave
es
or
push
lods
mov
inc
ret
sub
ja
dec
add
cmpsb
cli
test
or
sbb
cltd
push
rorb
out
out
adc
sub
ja
xor
subb
mov
roll
push
lahf
xor
fidivs
or
ret
rcrl
pop
out
mov
repnz
inc
xchg
out
or
cld
bound
in
or
xchg
mov
popa
add
in
and
sub
leave
adc
icebp
enter
or
fimuls
mov
fildl
mov
loopne
pop
adc
sub
inc
xchg
je
or
std
xchg
test
or
cld
ljmp
cmpsb
or
add
xchg
cmp
add
test
mov
cld
inc
add
fmul
es
arpl
call
add
adc
sbbb
loopne
sbbb
out
mov
test
mov
shrl
sub
push
aaa
add
test
add
push
shlb
ljmp
xchg
xorb
mov
push
mov
mov
movsl
sbbl
icebp
rol
cmp
mov
sub
sbb
adc
jecxz
jnp
pushf
xchg
pop
and
mov
add
int
add
dec
mov
les
xchg
jne
xchg
jno
daa
or
inc
jnp
jg
fcom
xchg
inc
punpckhdq
fdivs
rorl
sub
jmp
fsubrl
enter
and
cmp
loop
and
add
scas
or
add
xor
adc
fdivrs
stc
fildl
aam
inc
mov
sbb
hlt
jae
fcmovne
inc
lock
add
xor
mov
sub
mov
jno
sbb
inc
int
or
inc
pop
inc
xor
notl
xor
push
in
dec
repz
insb
cmpsb
xchg
fisubl
add
je
cmp
mov
inc
les
xchg
adc
or
clc
dec
clc
sahf
push
repz
add
adc
sbb
inc
fmull
dec
inc
popa
lret
sub
ret
imul
loop
shlb
mov
adc
fistps
xor
stos
fdivs
jnp
std
or
out
jmp
movsb
mov
movsb
pusha
add
ret
xchg
imul
jmp
inc
addr16
or
push
cmp
fidivl
pop
std
in
and
jno
test
add
inc
mov
cld
ret
xchg
xchg
in
insl
lret
scas
rorb
sbb
and
push
shrb
jo
xor
daa
push
sarb
push
fistpll
mov
pop
mov
shll
movsb
lods
rcrb
add
or
into
adc
in
sub
loop
call
pop
sub
and
mov
sub
mov
lea
imul
test
hlt
adcb
mov
hlt
ret
pop
fnstcw
dec
add
jecxz
lods
dec
and
dec
inc
cltd
sbbb
call
loopne
xor
scas
sbb
adc
xchg
dec
mov
dec
mov
adc
xorl
pop
or
and
out
xchg
fildl
sub
xchg
sbb
test
mov
test
jae
sub
in
add
aam
mov
pop
add
fs
push
add
test
add
push
or
aas
mov
sarb
test
and
bound
mov
add
je
pop
int
mov
imul
sbb
xor
push
mov
mov
add
call
pop
test
adc
movsl
pop
pop
inc
push
jnp
adc
and
pop
and
mov
push
sub
jo
add
adc
or
mov
dec
jp
push
or
stos
inc
orl
add
xor
mov
cmpsl
mov
cmp
and
insb
out
in
push
aad
mov
jbe
adc
push
and
lahf
push
adc
test
add
mov
or
lcall
and
mov
mov
mov
mov
xchg
and
outsb
daa
cmpsb
dec
cltd
push
inc
mov
imul
test
sti
decb
notl
dec
add
call
push
adc
movsb
into
mov
loope
pop
rclb
inc
imul
rclb
pop
mov
insl
outsl
mov
ljmp
add
jae
add
je
mov
fcoms
sub
sub
mov
cld
in
push
or
clc
sub
sbb
jge
cmp
xchg
push
add
xchg
and
add
jecxz
loopne
test
inc
xor
and
fbld
add
out
mov
add
inc
mov
mov
out
mov
test
push
cmp
data16
popa
enter
pushf
jge
xor
lcall
pop
add
data16
in
cld
or
add
mov
or
cmp
int
or
xor
push
inc
outsl
daa
jp
sbb
and
mov
or
call
movsb
in
out
lcall
and
mov
mov
and
jo
sbbl
xchg
enter
pop
and
jo
push
xlat
cltd
adcb
mov
or
mov
inc
test
push
scas
and
mov
add
enter
loope
push
enter
cmpsb
mov
arpl
imul
inc
test
mov
xlat
in
add
fs
mov
cmp
inc
or
push
push
lock
add
scas
add
xor
adc
push
movsl
lret
pushf
add
add
push
inc
push
and
and
mov
sub
add
xchg
sub
cltd
and
mov
shlb
push
mov
imul
addl
negl
loopne
or
cld
sbb
jo
test
add
sbb
out
pop
push
roll
mov
fwait
adc
inc
loope
repz
jno
test
stos
push
gs
cmpsl
es
and
out
scas
in
sbb
fcoml
call
mov
lcall
addl
lret
sbb
ficoms
dec
cmpsb
idivb
addb
push
imul
leave
inc
mov
leave
mov
inc
xor
outsb
and
add
enter
in
test
in
cmp
mov
inc
test
les
jo
add
xlat
sbb
cmp
jae
cltd
push
rolb
add
dec
lcall
add
faddl
js
sub
addb
in
imul
lret
xor
cwtl
clc
pop
je
jp
push
or
fwait
stos
movl
pop
loopne
xor
or
sahf
std
aam
adc
clc
mov
inc
pusha
addr16
mov
in
mov
js
push
push
pop
sub
scas
jb
xor
or
sbbb
lock
and
adc
or
aad
jnp
jbe
push
call
ret
jl
add
xchg
daa
push
ror
mov
jno
clc
add
subb
or
dec
movsl
mov
rcrb
into
push
push
ret
add
sub
push
ret
mov
cld
mov
dec
cs
inc
xor
sbb
sbb
pop
push
mov
cmovae
insl
cmp
sarb
mov
outsb
test
sub
lcall
shrb
je
xor
adc
add
aad
and
jae
or
ja
mov
xor
rolb
pop
mov
daa
lret
int3
lea
mull
push
cmpsb
ret
inc
roll
mov
lods
sub
mov
clc
dec
call
cmp
inc
call
fcoml
push
sbb
js
dec
cmp
inc
xor
sahf
sub
pop
fstps
xor
call
enter
repnz
ljmp
adc
or
incl
cli
mov
neg
dec
cmp
dec
pop
ss
and
ds
in
sub
std
or
push
inc
adc
dec
push
mov
pop
xor
add
mov
push
inc
mov
add
int
addr16
or
arpl
call
outsl
in
push
cmp
outsl
sbb
and
mov
pop
mov
xor
ficoml
push
mov
inc
adc
lret
add
add
ficoml
sub
push
ficoml
and
fwait
add
sbb
add
mov
cmpsb
sub
int
lea
jp
sbb
inc
push
xchg
out
pusha
enter
fcomps
inc
xchg
or
jle
xchg
cmc
int3
int3
mov
shlb
or
mov
mov
clc
popa
add
adc
push
rorl
mov
xchg
add
xor
inc
ss
inc
and
shll
inc
fdivr
jno
lret
shrb
mov
iret
mov
push
cwtl
mov
sub
out
xor
pop
adc
xlat
add
or
push
dec
cs
ret
lret
subb
xchg
stos
aam
dec
shll
push
cmp
adc
lcall
mov
test
push
xchg
xor
push
out
adc
xlat
jae
pop
push
cmp
add
inc
mov
and
xchg
and
lahf
mov
popf
xor
mov
xor
pop
push
adc
mov
subl
add
es
xlat
mov
push
lcall
or
sbb
daa
icebp
add
ss
cmpsb
add
dec
mov
inc
int
cli
sub
or
leave
xor
or
sub
imul
pop
lahf
mov
jae
adc
push
rcl
test
jl
or
ret
sub
add
cmp
cltd
aam
inc
nop
jnp
sub
mov
aad
into
jo
mov
jb
pop
sbb
data16
inc
sbb
sub
lret
adc
dec
rcr
push
mov
or
sbb
xchg
jno
jo
add
and
mov
cmp
adc
ret
mov
mov
add
jg
xchg
into
push
jp
ret
es
sbb
ljmp
dec
push
das
popl
stc
pop
incb
adc
push
pop
fwait
int3
int3
dec
dec
fiaddl
add
cmc
add
stc
and
sbb
cmp
or
shll
mov
cmpl
jo
adc
adcb
loope
mov
adc
aaa
jo
jge
rclb
lret
jmp
pop
fwait
pop
rorl
shrl
imul
je
adc
add
pop
add
popw
pop
sbb
imul
push
sub
insb
movsl
xchg
and
shlb
aad
stos
dec
add
push
adc
xor
dec
pop
cmpb
jg
popa
sub
push
push
push
cmc
adc
push
mov
pop
add
out
push
daa
and
mov
add
adc
clc
cmp
outsl
dec
out
rorl
inc
add
mov
pop
loop
pusha
inc
adc
jo
fdivr
inc
test
call
inc
pushf
sub
mov
fcomps
pop
adc
or
test
test
cld
in
fs
stos
and
lret
js
xchg
dec
cmp
adc
shl
inc
outsb
gs
mov
arpl
xchg
adc
xchg
sbb
inc
lods
add
cmpsl
xor
sbb
test
add
or
or
fs
popf
push
push
int
sbb
xchg
cmp
jb
lods
dec
cmp
pop
add
add
nop
inc
or
xchg
divb
mov
scas
out
pop
lcall
pop
and
div
mov
sbb
inc
sbb
or
sti
adc
inc
xor
enter
inc
mov
push
in
stc
push
jmp
add
test
pop
sub
and
inc
test
xor
add
cwtl
add
jbe
cmp
add
push
roll
movsb
arpl
push
jae
mov
and
je
pop
add
push
rclb
lcall
add
in
mov
lret
and
jae
enter
dec
sub
fs
stos
jnp
loop
loop
scas
sub
mov
pop
mov
fistps
inc
mov
pop
ljmp
scas
ret
and
xor
jecxz
push
jae
movsl
jl
push
lret
or
dec
mov
inc
mov
add
and
scas
push
insb
dec
inc
fsubs
inc
adc
mov
sbb
inc
cmp
sbb
xchg
cmpsb
mov
sahf
mov
cmpb
addl
roll
mov
cmpsb
cmpsb
jp
icebp
subl
inc
movsl
test
mov
insb
jo
mov
push
and
xchg
and
xchg
lahf
sbb
push
inc
stos
jb
test
shlb
mov
sub
jb
pop
xor
pop
dec
mov
rolb
add
cmp
cmovno
cwtl
stos
iret
cli
xorb
xchg
or
adc
or
or
push
dec
bound
mov
pop
inc
clc
inc
lcall
mov
dec
sbb
sub
pop
mov
subb
ret
cmpsb
add
inc
ficoms
add
loope
js
push
mov
sub
xor
cmp
sbb
xchg
into
inc
gs
xor
push
mov
or
mov
loopne
cltd
fcmove
add
ds
xchg
sbb
pop
mov
test
push
add
jp
aam
push
dec
test
hlt
outsl
adc
xor
xchg
addb
gs
stos
xchg
jecxz
xchg
lcall
push
es
mov
pushl
cs
lahf
mov
adc
mov
dec
adc
jo
into
fmul
add
add
pop
jecxz
out
inc
jo
stos
loope
xor
es
pop
inc
pop
jo
sub
loopne
in
sub
xchg
push
xor
push
stos
adc
aad
mov
and
inc
out
pop
add
inc
jp
and
push
or
adc
rclb
inc
ret
adc
popf
jecxz
cmp
stos
inc
xchg
lock
cltd
push
jae
mov
loopne
sbb
adc
js
push
jo
scas
dec
rcrb
loopne
sar
in
cs
lret
push
rcrb
push
inc
out
dec
enterw
popa
xchg
cld
or
enter
add
roll
add
adc
inc
ret
xor
cli
sub
add
xor
dec
push
or
gs
scas
mov
mov
dec
adc
test
jbe
mov
scas
in
shrb
pop
pop
rcl
addb
ja
mov
lds
fistpl
mov
jb
jae
test
push
jp
mov
push
mov
inc
push
iret
stos
inc
mov
sbb
loope
cmp
insl
frstor
push
cmp
or
or
in
into
ds
fadds
add
mov
lcall
insb
ret
or
lcall
out
xor
pop
loop
or
ror
out
or
mov
fsubs
adc
lock
or
in
mov
inc
or
pop
and
adc
test
outsl
lcall
int3
or
movsb
hlt
adc
or
or
movl
aad
xchg
shl
adc
xor
adc
ror
xor
mov
or
xchg
mov
inc
mov
jae
sbb
je
or
nop
inc
sub
push
add
cmc
xorb
xor
sub
not
mov
rcll
rclb
clc
sub
push
xor
repnz
into
stos
clc
pop
or
ret
insl
insb
cmp
jbe
arpl
push
cmpl
rolb
add
or
sbb
jo
adc
outsb
dec
pop
mov
shr
rolb
sbb
adc
out
xor
and
and
fidivrl
and
xchg
sub
dec
rcrb
push
cmp
add
and
mov
and
add
sbb
popf
xchg
das
adc
ret
in
sbb
mov
and
sbb
popf
test
loope
add
jne
fcmovnb
enter
test
test
mov
mov
and
rclb
out
ljmp
mov
rorb
repnz
jecxz
add
add
arpl
ja
xor
dec
mov
subb
es
popf
pusha
fadds
jl
push
pusha
addl
aam
push
rorb
dec
rcrb
pusha
or
push
icebp
incb
out
repz
jg
and
inc
xor
inc
stc
add
out
loope
inc
ljmp
xchg
mov
aas
es
add
sahf
cmp
adc
inc
xchg
add
test
push
add
pop
xchg
fwait
in
or
loop
mov
and
hlt
in
dec
insb
and
add
cmpl
add
adc
mov
in
fnstsw
dec
int
jae
mov
jg
insl
add
push
xchg
test
fs
dec
xchg
adc
fldcw
mov
mov
aas
or
inc
mov
push
ret
jbe
cwtl
in
and
cmpsb
shrd
add
into
cmp
and
or
orb
cli
pop
and
sub
push
push
add
xchg
test
xor
insb
cmp
adc
in
rclb
popf
push
loopne
dec
out
sbb
add
call
lods
lret
xor
lock
les
dec
repnz
aad
in
call
icebp
jg
adc
mov
push
or
adc
xor
fisubrs
sbb
or
jo
inc
mov
stos
mov
adc
mov
and
or
scas
dec
ljmp
test
cs
fisttps
inc
arpl
popa
stos
dec
mov
pusha
rolb
loopne
pop
push
dec
imul
xchg
inc
lock
dec
cmp
pop
das
and
shl
mov
loop
mov
jo
pop
mov
movsb
pop
add
lcall
xorb
dec
mov
int3
and
int3
out
pop
sub
stos
and
mov
out
sbbl
sub
and
fiaddl
dec
mov
sub
pop
ret
mov
inc
insb
mov
push
push
stos
stos
loope
mov
ljmp
pushf
jo
cwtl
dec
ljmp
popf
mov
pop
xor
inc
push
sub
push
mov
push
inc
outsl
mov
mov
sub
mov
enter
cmp
iret
push
xor
or
sub
test
push
jne
pop
sub
sub
pop
mov
adc
popa
addb
pop
inc
push
js
jnp
rcrl
or
les
add
sahf
scas
sub
sarb
test
es
jno
add
inc
lds
cmp
stos
inc
push
add
pusha
inc
xorl
and
pop
addr16
xor
call
inc
add
shrb
push
int3
or
inc
cld
fisttps
js
popf
push
popf
pop
jnp
cmpsb
addr16
stos
pop
test
pop
subl
ret
leave
je
push
push
sbb
push
mov
out
mov
mov
pop
sbb
aad
adcb
and
ljmp
mov
mov
out
pop
test
fidivrl
jne
sub
push
ja
dec
push
xor
lahf
jmp
stos
fstps
jae
jb
andl
inc
int
gs
or
jb
mov
mov
or
mov
push
mov
pop
adc
add
mov
out
sub
lea
pop
loope
or
jae
cwtl
mov
sbb
or
fcmovbe
ja
mov
fs
and
xchg
mov
pop
out
push
inc
ljmp
sbb
lea
xor
jbe
and
mov
push
add
mov
sub
mov
out
sbb
sub
push
and
insl
or
push
stos
hlt
adc
inc
mov
cmp
rclb
push
mov
mov
adc
and
jp
test
loopne
repnz
cltd
xor
dec
xchg
in
in
pop
xchg
test
inc
imul
sbb
sub
imul
cmp
sub
pop
xchg
add
leave
add
out
or
andl
sub
enter
rolb
fimuls
pop
dec
dec
test
out
add
mov
daa
jl
and
xor
mov
fcoml
into
push
lret
inc
add
cmp
jle
cwtl
mov
pop
xor
inc
outsl
xchg
imul
dec
and
or
jo
popa
push
repnz
pop
sub
adc
sbb
jns
mov
or
mov
stos
stos
mov
xchg
add
and
xlat
ror
adc
push
scas
mov
iret
adc
adc
and
and
subb
push
subl
adc
fisubrs
lret
adcb
or
dec
jno
ja
cmpsb
scas
mov
pop
fistl
push
popa
mov
jp
push
lcall
idivb
or
pop
xchg
sub
das
mov
and
das
push
push
test
or
sub
loop
loopne
imul
das
stos
inc
cltd
or
in
icebp
roll
inc
cltd
pop
mov
pop
mov
pop
xchg
cld
xlat
sub
jno
addr16
add
push
push
mov
jnp
jp
lea
mov
mov
push
pop
mov
movsl
inc
add
mov
or
mov
or
ficomps
jb
pop
pop
dec
and
push
sti
popa
pop
pushf
add
inc
sub
jg
stos
mov
clc
je
enter
sbb
xor
pop
add
dec
cmp
nop
arpl
sub
jmp
daa
or
push
xor
addb
idivl
andl
cmpb
push
loopne
pop
aam
sahf
clc
sub
cmp
pop
cltd
or
add
sbb
into
sbb
stos
push
jne
ffreep
push
inc
das
push
add
push
dec
sbb
adc
and
add
jge
push
stos
add
add
mov
and
push
adc
or
mov
and
or
jae
pop
ljmp
sbb
or
repnz
ds
loop
imul
subl
test
mov
xor
mov
mov
loope
fistl
mov
jecxz
cs
lock
pop
daa
dec
cmpsl
sbb
push
push
mov
call
ror
mov
test
dec
lea
adc
mov
push
mov
sahf
or
jp
add
jae
aad
push
inc
loop
add
mov
add
cmp
inc
in
out
push
xorl
and
cmp
bt
cli
rol
xchg
and
inc
and
sbb
mov
clc
pop
jne
inc
cmpsl
adcb
push
pop
into
aad
xchg
dec
push
sub
or
loopne
mov
lret
aaa
loopne
pusha
sub
add
add
add
jp
ja
xchg
jmp
push
sub
stos
sbb
jecxz
cmp
cs
pop
inc
test
hlt
xchg
sahf
sbb
push
test
adc
sbb
stos
cwtl
int3
adc
lret
xchg
dec
jo
push
dec
es
xchg
shlb
xchg
shrl
ret
or
and
or
addr16
pop
daa
inc
xor
adc
ja
mov
cltd
inc
add
or
outsb
mov
lods
loopne
ljmp
push
sbb
mov
pop
sbb
sahf
xor
hlt
rolb
int
stos
and
adc
push
icebp
dec
push
mov
call
es
xorb
jbe
xlat
adc
test
push
cmp
ja
cmpsl
or
or
daa
dec
mov
xchg
ret
pop
jne
push
sbb
lods
sbb
cmpsb
lret
mov
shlb
adc
mov
inc
pop
jo
pop
popf
cmp
push
stos
loopne
mov
sahf
push
add
cmpsl
sbb
lcall
xor
bnd
out
add
mov
leave
add
adc
xor
sahf
repnz
fisubrs
orb
ljmp
das
int3
xor
inc
mov
push
cwtl
in
cmp
push
xor
push
mov
sub
repnz
push
cmp
int3
or
mov
mov
sbb
or
fbstp
add
lahf
mov
mov
add
stc
push
adcl
lods
cmp
loopne
lret
push
mov
inc
add
int
pop
ja
lcall
call
lds
lahf
jg
sti
jbe
pop
mov
filds
xor
aas
cmc
cwtl
dec
or
mov
pop
add
pop
push
xor
clc
sub
cmp
fadds
fcomp
push
leave
mov
loopne
std
pop
adc
les
cltd
or
add
add
fiadds
mov
mov
xorl
imul
adc
jae
in
mov
sbb
xor
push
movsb
add
fidivrs
std
and
cmp
and
pop
jnp
push
inc
mov
in
lock
mov
sbb
adc
xlat
xor
adc
call
inc
into
push
xchg
icebp
mov
or
sahf
inc
scas
loopne
aam
outsl
push
cmc
inc
rcrl
inc
adc
xor
out
inc
mov
dec
xor
sbb
and
inc
pop
mov
push
cmp
in
mov
jbe
jg
mov
xor
or
xchg
mov
jge
xchg
sub
stos
xor
inc
les
or
inc
or
rolb
nop
leave
test
loopne
lret
ja
pop
jo
or
mov
sbb
sub
enter
test
cmp
aam
xchg
stos
xchg
adc
inc
orb
xchg
lret
ja
imul
loop
dec
pop
add
fmull
test
dec
pop
aaa
scas
add
in
dec
jne
out
add
sub
lock
jno
push
push
add
mov
lret
in
rcrl
call
mov
adc
sbbl
aad
mov
push
fdivl
adc
push
mov
sub
push
xor
pusha
enter
jl
mov
sub
ret
scas
sbb
mov
in
cli
orb
push
pop
mov
mov
add
push
out
loope
mov
sbb
dec
pop
mov
lock
inc
ret
call
sbb
jo
xchg
rclb
mov
movsl
mov
enter
xchg
out
adc
out
dec
sbb
push
mov
mov
mov
icebp
icebp
ret
rcrb
sub
aam
add
sbb
stos
cltd
loopne
insl
clc
sub
pushf
pop
mov
nop
fiaddl
xchg
xor
xlat
popf
fnstcw
add
ljmp
or
rclb
add
add
dec
les
mov
sub
and
insl
mov
mov
add
dec
adc
and
lcall
xchg
add
inc
into
xor
iret
mov
dec
add
pop
inc
sbb
mov
inc
fadd
dec
mov
adc
outsl
add
or
pop
and
sbb
test
sahf
stos
popw
mov
jne
mov
out
add
inc
mov
and
outsb
insb
inc
sub
lea
subb
push
cmp
push
push
fisttps
addl
divb
les
adc
ljmp
shrb
cmp
in
dec
inc
fwait
sbb
les
push
shlb
adcb
dec
aas
out
enter
adcl
fadds
sahf
negl
outsl
inc
sbb
stc
adc
inc
cwtl
mov
sub
cmp
push
and
push
sub
adc
xchg
push
xchg
xlat
mov
push
jne
jb
and
xchg
xchg
hlt
inc
rorb
cmp
lret
ret
stos
in
scas
pop
push
cmp
jmp
addr16
sbb
loopne
in
inc
cltd
fimull
enter
inc
cltd
mov
scas
mov
sbb
inc
cmp
inc
push
out
in
xor
and
add
sub
xchg
dec
lods
push
jo
fildl
out
push
push
mov
jo
jo
inc
popa
sarb
sbb
sbb
dec
push
and
adc
or
lods
xchg
mov
hlt
or
xchg
lock
les
das
or
jo
inc
das
pop
cmpsb
pop
aad
incl
movsl
xchg
lcall
adc
push
add
lret
out
inc
adc
jae
mov
dec
inc
dec
imul
push
dec
imul
mov
aad
mov
movsl
or
add
fcom
or
scas
mov
sbb
push
test
aad
inc
sbb
lcall
ja
or
daa
imul
fs
arpl
push
sbb
add
add
inc
push
mov
lcall
je
scas
adc
jmp
lods
push
jnp
shll
jb
pmaddwd
xchg
pushl
in
loop
mov
and
sub
sub
rclb
mov
test
ret
data16
je
ja
inc
cmp
gs
inc
icebp
or
stc
scas
mov
pop
scas
mov
xor
adc
xor
xor
insl
or
shlb
cmp
inc
jae
or
or
add
sbbb
inc
and
jnp
pusha
or
and
add
outsb
add
xchg
out
mov
cmp
mov
xchg
and
mov
sub
mov
mov
pop
call
push
pop
in
push
jmp
mov
adc
inc
nop
and
add
mov
push
ret
xchg
push
sub
int
xor
mov
sbb
or
rclb
sub
push
sub
xchg
cwtl
and
pusha
fistps
jge
fsubrl
subb
push
cmc
add
lcall
ljmp
adc
sub
shrl
jo
sahf
stos
adc
ret
xchg
leave
push
cmpsb
and
jae
push
jo
addr16
dec
sbb
cmp
adcb
push
xchg
and
ret
test
loope
push
inc
mov
into
out
test
push
add
not
shrb
xchg
jae
shll
les
or
imul
mov
scas
sbb
add
mov
cmp
pusha
add
mov
add
test
mov
inc
mov
mov
cmc
lods
movsb
test
fxch
dec
push
in
sbb
test
add
mov
xchg
adc
xchg
loopne
daa
cli
sub
xor
sbb
out
xor
cmp
andb
cmp
push
jmp
and
xchg
clc
in
cmp
enter
mov
js
push
orl
testl
cmp
loopne
xor
aam
popf
or
cwtl
add
jmp
cmp
pop
sub
push
lret
jp
popa
add
add
and
mov
adc
sbb
xchg
push
outsb
xchg
int
test
adc
outsl
mov
pusha
fadd
clc
pop
not
and
mov
stos
dec
int3
addb
sbb
test
push
or
sbb
mov
enter
mov
sbb
mov
and
fwait
push
xchg
mov
into
or
inc
fsubl
sbb
je
and
adc
sti
sbb
flds
ret
adc
out
adc
add
repnz
cmp
push
call
inc
in
inc
ror
and
mov
inc
or
cli
add
in
lods
mov
push
in
and
push
sahf
les
push
cmp
cld
test
add
movsl
xchg
in
fwait
loope
add
adc
add
or
in
add
les
and
push
mov
jae
pop
adc
aam
adc
loopne
xchg
sub
fcompl
add
rclb
and
push
aad
das
inc
cmp
inc
add
or
xor
hlt
lahf
notb
fiadds
inc
and
js
push
out
or
sub
les
data16
pop
rorl
mov
test
push
fiadds
adc
jo
xchg
add
cli
addr16
add
add
lret
cmp
adc
dec
cli
xchg
inc
ja
adc
popa
and
mov
fldl
cmp
push
push
adc
scas
xor
repnz
pcmpgtd
into
ret
imull
shlb
ret
std
cmpsb
mov
idivl
add
addl
std
xchg
mov
push
push
xchg
sub
fs
lock
and
mov
push
dec
cwtl
cmp
dec
dec
lds
popa
and
nop
aam
xchg
lret
pusha
add
xchg
movsl
inc
test
push
test
int3
jge
cmp
cltd
cli
jbe
jnp
mov
ljmp
test
inc
jge
xchg
mov
cmpsb
lock
push
sbb
dec
push
js
push
dec
and
stos
pusha
cmovge
sub
xlat
push
enter
sub
and
sub
push
push
push
cmp
pop
xchg
sbb
lret
inc
hlt
sbb
dec
pop
and
jg
stos
adc
test
daa
mov
data16
cmp
pushf
addl
xor
daa
adc
dec
dec
mov
jnp
mov
pop
mov
stos
pushf
sbb
inc
inc
scas
or
inc
mov
add
jae
je
vpmulhuw
sahf
daa
stos
push
int
out
inc
imul
mov
leave
adcl
and
add
push
add
mov
cld
xor
inc
test
push
mov
orl
gs
mov
enter
test
ret
xor
rcrl
nop
jae
mov
pop
orl
sub
mov
or
adc
or
adc
jne
mov
jno
ljmp
and
mov
push
loopne
push
out
cmpsl
or
or
add
inc
addr16
cld
fildll
xor
pop
rorl
sub
sub
sbb
outsb
aam
cmp
mov
adc
cwtl
ljmp
add
pop
inc
push
lods
jo
cmp
or
sbb
xchg
or
or
pushf
or
in
push
sbb
cmp
and
push
pusha
and
fnstenv
xor
int3
inc
xor
dec
push
push
popf
push
adc
xchg
and
loopne
push
sarb
adc
enter
int3
add
pop
mov
loope
adc
into
popa
push
push
jle
jne
add
adc
aam
loopne
testl
dec
movsl
enter
push
push
lahf
ja
cltd
sbb
push
mov
cmpsb
jl
imul
push
push
in
adc
and
scas
or
pop
rorl
rclb
push
mov
xchg
orb
shll
sbb
cmp
mov
sub
and
fsubrs
cmp
jl
js
xor
add
filds
sbb
push
sbb
pop
xor
xorb
mov
idivl
ret
jno
sub
sbb
mov
cltd
pop
push
sti
inc
sbb
popa
in
out
sbb
mov
push
lea
xlat
hlt
sub
pop
pop
adc
push
out
mov
push
clc
lcall
sub
and
cmp
or
jmp
add
fimull
lock
mov
adc
pop
inc
mov
cmp
rcrl
adc
inc
xchg
pop
sbbl
add
jge
mov
mov
rclb
in
subb
sub
mov
in
sub
mov
xlat
dec
in
push
xchg
adc
mov
adc
sub
outsl
sbb
cmp
jo
sbb
mov
dec
jl
push
mov
mov
jo
jb
mov
es
outsb
orl
sub
dec
mov
pop
push
imul
rolb
jae
xchg
cmp
add
testl
jmp
lret
aad
mov
rcll
push
stos
xchg
dec
es
mov
and
das
hlt
call
cmpb
mov
scas
subl
addl
mov
shrb
adc
xchg
cmp
cmp
dec
push
xor
mov
mov
ret
int3
and
iret
lcall
cmp
test
test
pop
or
ret
add
mov
push
data16
repz
add
int
mov
out
ss
mov
xor
testl
cmp
cmpsb
push
cwtl
push
inc
add
xchg
xchg
push
pop
scas
testb
jecxz
push
pusha
sub
aas
cmpsb
pop
cmp
jg
mov
mov
xchg
cmp
cmp
mov
push
ret
xor
inc
adc
inc
adc
add
daa
mov
lcall
jb
push
inc
pop
cmc
ret
jp
push
or
inc
hlt
pushf
mov
ret
pop
ds
push
in
jo
cmp
lret
rol
sbb
jmp
push
in
add
loopne
ss
sub
xchg
rcrb
push
mov
out
add
es
xchg
sti
cmp
adc
or
cmp
pop
lret
in
xorb
add
add
mov
aad
cltd
xor
orl
cmp
push
mov
sbb
jnp
push
inc
test
add
jae
rolb
test
cltd
and
clc
pop
int
adc
test
int
mov
push
pop
mov
loopne
gs
mov
test
or
xor
stos
adc
loop
les
dec
in
cld
push
or
inc
cs
push
jb
shlb
clc
adc
cli
cwtl
ljmp
xor
sub
bound
add
cltd
in
mov
outsl
imul
fcoms
xchg
xlat
stc
push
cwtl
lcall
test
xorb
movsl
cmp
inc
fwait
push
add
xchg
shll
sbb
lcall
sub
ret
insb
xchg
addb
dec
mov
inc
mov
fisubl
jmp
dec
orb
mov
push
cmp
adc
cmp
mov
jge
cltd
add
jo
shll
inc
loope
lcall
data16
add
push
xor
push
sti
int
stos
dec
sub
repnz
cmp
inc
jae
adc
and
mov
lea
pop
sti
fisttps
std
dec
push
push
push
xchg
leave
dec
fcmovnb
sbb
jmp
scas
mov
cld
rcrb
jo
xlat
or
loopne
popf
orb
xor
scas
stos
push
sub
stos
inc
inc
ret
in
sbb
shr
stc
ror
sbb
cmpsb
push
sysret
cmpsb
adc
repz
sbb
push
gs
stos
add
add
hlt
lret
xchg
sbb
xchg
mov
popa
xchg
mov
ret
mov
aad
mov
xchg
inc
or
fs
sub
push
sti
mov
enter
inc
mov
test
add
ljmp
sbb
or
cmpsb
and
aam
scas
adc
dec
push
xlat
dec
inc
add
pop
in
push
pop
pop
inc
add
sub
and
pop
push
mov
mov
sub
lcall
sbb
iret
lea
push
sbb
int3
loopne
lock
xlat
xor
and
ja
pop
inc
daa
or
lcall
or
adc
pop
lods
jno
push
sub
sub
cmp
push
fcompl
ret
pop
pmulhuw
pop
loopne
push
rolb
add
sbb
inc
jb
loopne
mov
xor
arpl
dec
cmc
test
call
adc
mov
in
je
int
add
xchg
push
or
push
dec
in
add
fs
repz
cltd
andb
add
sbb
adc
test
stos
xlat
sbb
clc
out
call
add
xor
pop
inc
mov
ret
stos
add
add
inc
adc
orb
in
or
dec
imul
cmpsb
fidivrl
in
or
ja
adc
shll
add
or
or
jo
popa
sub
or
es
addb
add
or
pop
insb
mov
ljmp
shll
add
jecxz
adc
add
sbb
stos
push
stos
jge
push
cmp
aad
pusha
in
xorb
and
cmpsb
xlat
outsl
and
xor
jb
and
inc
call
lock
repnz
cmp
dec
adc
dec
out
into
adc
mov
jge
adc
aam
mov
cmp
push
lret
dec
iret
sub
add
ja
cs
xor
inc
and
xchg
jae
mov
gs
mov
inc
mov
jmp
inc
nop
mov
pop
push
cmp
xor
xchg
xchg
std
mov
push
push
addl
ss
pop
jmp
cmp
xchg
shrb
pop
add
push
cmp
add
push
scas
sbb
mov
scas
xor
cmp
dec
es
enter
scas
jle
push
out
test
sub
inc
shlb
loope
andb
mov
mov
sbb
inc
inc
bound
sbb
add
push
xlat
dec
add
insl
jbe
add
out
rclb
rolb
add
and
das
ja
stos
sub
push
jo
dec
test
pop
jns
inc
push
mov
aad
cmpsb
push
and
adcl
fstps
into
push
sbbl
mov
add
or
aad
push
lcall
sbb
xor
xor
lods
dec
jp
xor
cmp
jb
gs
jno
jp
pop
cmp
in
aaa
sbb
push
xor
and
loopne
xchg
ret
jno
imul
xchg
xchg
icebp
push
pushf
add
pop
adc
xor
xchg
mov
sbb
cwtl
sub
cmp
gs
outsl
lods
ljmp
es
sbb
inc
push
dec
inc
adc
or
icebp
adc
or
in
mov
dec
inc
xor
push
jmp
push
cld
out
cs
iret
or
dec
fnsave
mov
adc
lret
inc
in
push
jno
cmp
push
push
sub
sub
add
ljmp
cmp
adc
sbb
stos
roll
out
aaa
sbb
popf
test
dec
pop
js
lods
int
stos
pop
je
push
fsubs
popa
jb
or
sarb
cmpsb
or
cltd
pusha
fldcw
fsubrl
rcrb
add
inc
loopne
out
xchg
xchg
outsb
push
xchg
ret
loope
mov
scas
add
and
cmp
data16
inc
test
xor
inc
popa
orb
in
sub
jl
or
add
mov
sub
test
sbbl
push
xchg
scas
lcall
jnp
cs
xor
and
mov
adc
enter
stos
xor
stos
test
inc
xor
cltd
mov
or
leave
das
lds
sbb
movsl
hlt
adc
add
das
sahf
ss
xchg
js
test
push
xor
cwtl
lcall
fwait
xor
mov
mov
inc
icebp
cmp
scas
loop
fsubs
ljmp
shll
pop
test
loope
movsl
pop
pop
xchg
lret
sbb
mov
cs
test
add
idivb
cltd
sbb
pop
dec
inc
sar
aam
loope
into
xchg
bound
jae
dec
mov
sbb
jae
sub
dec
aad
aad
out
pop
dec
rcr
jmp
adc
cli
fsubr
mov
sub
push
sbb
inc
add
test
or
mov
cld
dec
add
add
dec
sbbb
loopne
ss
ss
sbb
dec
adc
or
cmpl
and
add
sti
in
push
sub
dec
dec
and
xor
inc
les
jno
push
inc
lock
sub
int3
sar
inc
add
fistps
ret
imul
mov
add
add
xchg
test
inc
das
outsb
sbb
cmp
push
lock
inc
aad
lahf
and
push
push
pop
inc
xchg
mov
mov
aam
or
in
add
mov
cs
rolb
adc
push
adc
mov
or
int3
aad
loopne
je
ds
sbb
add
add
repz
xor
in
mov
add
pop
and
jl
mov
push
leave
addr16
mov
adc
push
int3
lret
add
sub
sbb
mov
je
mov
xchg
xlat
pop
lds
mov
or
xor
cmp
push
lret
add
xchg
fsts
lret
or
mov
sbb
push
sbb
cmp
inc
mov
sub
movsl
mov
xor
shl
test
sbb
test
sbb
js
push
andl
jmp
leave
movsl
cmpl
fisubrs
inc
adc
outsl
mov
scas
push
cmpsb
imul
inc
mov
jb
rorb
cmp
mov
loope
loopne
xor
mov
mov
lret
adc
test
jmp
ret
xchg
add
pop
ret
scas
mov
cmp
sub
sbb
aam
or
sbb
mov
jnp
add
jb
jno,pt
sub
xchg
mov
test
push
lret
mov
adc
dec
cmp
inc
sub
cmp
pop
pusha
or
adc
in
movsl
iret
jo
out
shlb
orb
xchg
imul
jo
stos
xor
pop
or
imul
sbb
bound
adc
jo
les
inc
xchg
int
cmp
inc
imul
fwait
mov
sbb
xlat
and
mov
pop
pop
stos
mov
add
push
hlt
mov
cmp
stos
test
test
mov
test
inc
movsb
aas
jns
inc
or
jbe
push
rcll
cmp
xchg
and
movsl
jl
scas
sbbb
dec
inc
jle
inc
or
loope
roll
or
mov
scas
sub
nop
sti
jnp
addr16
adcb
push
add
dec
loopne
push
add
orl
push
sub
sub
pop
add
xor
int3
jae
aam
test
mov
sub
lret
sbb
decl
and
cltd
stos
ljmp
adc
imul
mov
push
and
mov
jge
jo
mov
rolb
enter
sub
and
adc
cmp
mov
pusha
ret
mov
lcall
iret
jmp
out
mov
pushf
in
jg
loop
or
push
jl
push
into
pusha
sub
je
adc
addr16
pop
xchg
pop
pop
arpl
orl
add
push
cmp
std
ljmp
jae
cmp
push
loopne
adc
add
add
jae
orl
shlb
xchg
arpl
sarb
repnz
pop
inc
jae
or
add
sub
jno
sub
stos
js
cmp
cmc
xchg
push
inc
jo
sbb
js
sahf
inc
or
inc
inc
mov
jae
rcrl
mov
inc
jno
add
js
xchg
movsb
out
mov
rolb
repz
mov
mov
mov
imul
lret
mov
and
jp
test
sub
inc
cwtl
enter
xor
xor
sbb
xchg
aas
or
or
bound
cmp
or
aas
push
xchg
mov
imul
jbe
or
jns
popa
jp
push
xchg
dec
pop
mov
lahf
jno
and
push
insl
mov
or
adc
jns
jp
mov
inc
sub
pop
fnstcw
mov
enter
scas
xor
inc
or
jge
out
jg
xchg
aad
sarb
xor
adc
add
lret
dec
dec
mov
sbb
cwtl
mov
out
stos
jb
in
int3
cmp
push
shrl
inc
stos
mov
adc
hlt
or
int
push
xor
mov
pop
sbb
mov
and
and
jo
btr
stos
mov
sbb
inc
xor
test
adc
je
cmpsb
xchg
ja
or
pop
rclb
fistpl
sbb
mov
adc
cmp
adc
mov
ret
mov
cs
push
sahf
pusha
pop
mov
ret
pop
xor
xchg
mov
jno
xor
sbb
push
in
push
or
push
mov
mov
inc
js
in
dec
push
pop
mov
push
aaa
sbb
inc
add
scas
pop
pop
mov
push
jo
in
xor
mov
cmpsl
out
aam
je
sbb
out
js
xchg
adc
adc
inc
jmp
mov
je
daa
mov
adc
aad
sbbl
jl
mov
and
mov
fnstenv
cmpl
adc
sub
adc
push
inc
pop
cmp
adc
xor
push
lods
jp
shl
mov
mov
push
subl
adc
dec
add
or
jo
adc
mov
mov
jo
orb
ror
pop
mov
stos
xor
push
push
mov
negb
hlt
pushf
bound
es
mov
or
nop
or
push
xor
mov
mov
sbb
jo
sbb
notl
cmp
imul
test
push
or
sbb
imul
icebp
aam
faddl
aam
aam
add
rolb
in
fstps
xor
ss
ds
mov
pop
loope
lods
sbb
push
cmpsb
mov
sbb
mov
lahf
nop
sub
scas
or
out
jle
sub
in
jge
lcall
xor
adc
mov
sbb
into
mov
push
orl
push
push
add
pop
push
xchg
cmp
inc
or
cmpsb
out
das
sbb
or
dec
pop
scas
xor
add
pop
ljmp
inc
in
pop
mov
imul
or
or
mov
inc
sbb
add
ss
pop
popa
stos
add
cmpsl
push
test
mov
sbb
nop
push
ret
ret
or
jo
es
or
jg
rcll
xor
leave
sbb
lret
xorb
xor
loopne
stos
es
sbb
pop
in
jne
add
xor
inc
mov
rcll
mov
push
push
sbb
jns
into
sbb
movb
add
cwtl
mov
xchg
jle
shrl
pop
and
loopne
push
pop
add
pushf
les
xor
jno
jno
push
loopne
enter
pop
mov
mov
xor
lahf
mov
adc
or
jecxz
sub
mov
cmp
icebp
aas
mov
lret
aam
popf
lcall
push
jb
push
jae
stc
in
sbb
jo
sbb
or
xchg
jno
fs
xor
rcrl
shl
jmp
pusha
jp
movsb
pop
ja
push
xchg
orl
loop
add
add
sub
mov
sub
cmc
pop
push
sbb
adc
sub
fwait
pusha
loopne
punpckhbw
push
xor
out
lods
pusha
divl
and
add
xchg
ret
or
jns
sub
shl
cltd
movsl
outsl
jl
or
in
sub
and
inc
into
adc
pop
loopne
cmp
rep
movsl
out
idivl
test
stos
movsb
xchg
xchg
into
inc
mov
inc
mov
stos
jo
adc
ret
cmp
adc
loop
lret
orl
jo
test
sub
hlt
inc
rcrl
cmp
push
cmp
pop
mov
push
pushf
stos
ficoms
push
sub
andb
enter
xor
lods
dec
jp
jmp
mov
jmp
or
sub
popf
decl
sub
and
cmp
hlt
imul
inc
pop
scas
and
cmp
xlat
xchg
lret
xlat
cltd
pushf
iret
or
inc
cmpsb
inc
fistpl
add
into
je
or
xor
sbb
mov
lret
or
sub
aad
xchg
aam
xchg
js
sbb
adc
mov
adc
mov
sub
inc
cmp
push
push
xchg
addr16
pusha
or
jb
and
push
cmp
ljmp
push
stc
adc
jecxz
jo
dec
jo,pn
mov
cmp
or
into
xor
pop
andl
pop
xor
add
add
sti
out
mov
jl
rcrl
test
sub
jecxz
adc
push
.byte
mov
or
sbb
ret
jmp
pop
dec
adc
add
subl
movsl
jo
daa
js
xchg
movsl
or
add
imul
daa
pop
pop
adc
cvttps2pi
jno
js
sbb
mov
fldl
mov
pop
adc
and
mov
sub
pop
movsl
ds
sub
stos
pop
mov
pop
jo
js
sbb
stos
ja
test
sbb
mov
xor
sub
jo
inc
mov
jge
and
test
and
pop
fistpl
pop
inc
mov
fstp
fildll
jo
lea
and
inc
test
lods
insl
or
fsubs
aas
insl
and
stos
fdivs
fstpl
das
ja
adc
xchg
adc
mov
xor
insl
mov
and
mov
mov
xchg
test
out
test
out
mov
sub
in
mov
ss
xchg
popa
mov
pop
mov
and
test
pop
jmp
mov
push
add
stos
test
xchg
and
aaa
jne
adc
dec
or
insl
imul
sub
and
add
aaa
sbb
push
ja
stos
stos
xor
cltd
lcall
lods
mov
movsl
out
push
inc
mov
pop
imul
test
repz
gs
mov
xchg
hlt
and
mov
mov
xchg
cwtl
int
push
cmp
aaa
lods
insl
lods
mov
pop
push
movsb
test
lods
mov
and
xor
add
mov
ret
lods
lret
sbb
js
test
lcall
outsl
negl
jo
daa
sbb
das
rcrb
lods
mov
mov
lods
mov
mov
pop
popf
sbb
push
or
adc
call
xor
ja
sbb
cltd
add
push
mov
add
movl
pop
movb
pop
push
lock
fwait
or
fistpll
mov
ficoms
add
adc
out
sbb
pop
pop
hlt
mov
fimuls
aaa
sub
add
add
add
sbb
out
ja
mov
or
add
sar
shl
mov
cmp
jo
sbb
out
fstpt
mov
pop
clc
sar
or
fbstp
push
jge
sbb
xlat
sbb
test
jne
xchg
lock
mov
fisubs
popa
mov
into
dec
clc
or
push
mov
xchg
inc
add
sbbb
and
std
jbe
jbe
inc
hlt
daa
add
push
lret
or
ficomps
repz
push
lock
add
or
rorl
fldpi
push
not
xor
sbb
jnp
xchg
iret
aam
adc
sbb
adc
cmp
ffreep
negl
jnp
fcmovb
fbld
sbb
std
mov
test
add
mov
mov
adc
or
lea
pushl
push
lea
push
xchg
out
call
sbb
mov
test
jae
mov
test
sub
jmp
sub
lock
js
lahf
xor
loop
ror
jnp
fwait
jecxz
sbb
push
push
cmp
stc
add
in
imull
add
pop
ja
mov
push
xor
lahf
clc
pop
sub
jne
in
iret
ss
ret
in
enter
rclb
sub
add
daa
pop
sti
fs
lock
out
or
outsb
mov
push
adc
sub
nop
aaa
inc
repz
adcb
or
loopne
loop
movsl
fcomps
sub
jb
fst
mov
insl
fnstcw
mov
add
xchg
sbb
pop
loopne
dec
push
and
or
lret
int
out
sbb
add
cmp
mov
sbb
xor
fcomip
sub
push
sbb
push
test
test
jae
pop
cld
shr
pusha
sub
fmuls
pop
aam
cmp
pop
sahf
shlb
or
adc
adc
mov
in
sahf
jmp
add
fcomip
adc
sub
pop
sbb
sbb
shr
pop
pop
test
push
fucom
xchg
xchg
xor
inc
push
fiaddl
imul
sbb
rclb
dec
add
jbe
cli
adc
push
test
jbe
sbb
daa
int3
ds
push
shl
fmuls
sbb
xchg
scas
xor
pop
in
and
clc
cmpsl
xor
or
testb
lock
orl
test
aas
int
cmp
clc
jmp
sbb
cmova
pop
sti
loopne
add
mov
or
xlat
pop
jo
mov
fisttpll
decb
add
fadds
outsb
dec
mov
adc
adc
jecxz
ss
adc
push
repz
in
push
in
stc
pop
aas
jnp
sbb
xchg
or
out
ljmp
inc
outsb
xor
inc
add
pop
fwait
out
jne
in
inc
in
xor
xchg
add
fcmove
in
ror
or
sbb
mov
dec
rcr
xor
push
jmp
test
je
jmp
in
or
fdiv
sub
sub
das
js
add
int
inc
rcl
fwait
pop
sbb
imul
cmp
mov
xchg
push
or
insb
ljmp
fmuls
add
call
lods
xchg
orl
mov
insb
mov
add
fcoms
pop
adcl
into
or
ret
in
fcoml
sbb
adc
cld
push
mov
or
scas
std
lods
pusha
mov
ret
pop
shl
sbb
inc
add
test
fsubl
cmp
pop
notb
and
lock
icebp
jmp
jns
push
and
lcall
mov
and
fiaddl
add
enter
sbb
cmp
xor
adc
or
pop
or
cmp
push
and
mov
mov
sbb
fdivl
sub
pop
iretw
clc
fmull
sbb
adc
inc
or
aas
pop
lea
or
lds
lret
add
add
and
or
and
ret
adcb
fdiv
shlb
imul
mov
or
push
scas
sbb
mov
adcl
jg
or
jecxz
mov
sbb
fisubs
insl
inc
mov
jne
sub
add
enter
ja
and
test
jno
lret
sbb
pushf
inc
in
pop
insb
adc
mov
jo
or
xchg
jg
pop
or
insl
mov
cvtps2pd
and
jno
pop
test
xchg
push
daa
and
in
jno
mov
mov
sub
imul
sbb
and
sub
push
lcall
push
adc
jge
jb
adc
mov
xchg
sbb
std
and
xor
out
test
add
cmp
fs
loop
cmp
mov
mov
jge
test
mov
jne
das
pop
mov
and
lea
out
js
aam
fisttpl
sbbl
imul
cmc
or
cltd
push
out
push
mov
jo
mov
out
sbb
pop
cmp
or
movsl
test
lret
rcr
out
jne
mov
cli
out
rorb
inc
xchg
pop
sub
push
xchg
bound
xchg
int
inc
lods
adc
sub
push
test
add
mov
jo
adc
cwtl
movsl
fsub
cmp
cmpl
test
sub
lods
jb
push
in
jo
int3
cmp
push
cmp
add
xchg
test
lods
popa
flds
int
jae
pop
out
sbb
jb
imul
out
mov
adc
xchg
mov
xor
sahf
push
xchg
or
inc
xor
mov
shrl
or
xchg
add
test
cld
movsb
je
rcll
jle
arpl
pop
mov
or
xor
mov
sahf
lahf
cmp
add
enter
int3
mov
inc
jecxz
out
int3
mov
add
jnp
lock
dec
adc
push
and
es
enter
insl
add
lods
mov
pop
push
insl
jmp
pop
cmp
les
imul
jmp
inc
jne
rcll
movsb
aas
mov
add
jp
mov
mov
pop
cld
jg
mov
shl
mov
sbb
imul
loop
ret
sbb
rcr
mov
dec
dec
adc
dec
adc
push
sub
mov
adc
rcl
inc
testl
jne
cld
adc
mov
lods
dec
test
jecxz
add
lock
test
add
in
outsl
mov
inc
adc
popa
mov
stos
movsl
add
pop
in
adc
sub
js
fmuls
push
jo
jmp
sbb
adc
or
stos
test
nop
mov
and
jb
dec
insl
out
sbb
push
int
stos
push
leave
pop
repz
push
push
arpl
add
pop
push
ljmp
fbstp
sub
sub
pop
stos
imul
aad
push
cmp
add
push
scas
pop
sbb
ficompl
fidivs
rclb
aam
fmul
fcoms
ds
aam
lods
add
test
push
xchg
cmp
xchg
imul
push
pop
fcom
loopne
out
andb
mov
or
inc
imul
data16
jmp
loope
and
mov
adc
mov
jae
insl
sub
push
scas
mov
divl
test
lods
insl
xlat
jecxz
adc
sbb
dec
pusha
cltd
lcall
xor
stos
mov
into
push
sub
loopne
fcmovbe
or
scas
xor
lds
push
dec
fdivl
sbb
pop
mov
sbb
pusha
jae
add
lods
sbb
and
jle
mov
addb
inc
dec
aam
mov
push
popa
bound
ja
pop
sub
sbb
aam
add
iret
push
int3
int3
mov
cwtl
pop
xchg
pop
mov
subb
lock
xor
pop
pop
andb
lock
shrb
sub
xor
or
push
and
add
inc
pop
mov
and
lcall
ror
mov
enter
pop
jmp
mov
das
dec
je
inc
in
faddl
mov
or
mov
shlb
aam
int3
xchg
negb
mov
mov
aad
inc
hlt
mov
mov
movsb
daa
mov
add
xchg
rcrb
shrl
mov
mov
je
inc
mov
push
pop
mov
out
xor
xchg
sbb
and
adc
cmp
es
jl
or
pop
or
adc
test
and
and
sbb
mov
mov
out
adc
pop
adc
pop
pop
pop
mov
inc
cli
sub
jmp
dec
sub
push
rol
sub
cs
push
xor
dec
pusha
daa
shlb
loope
cld
aad
mov
pop
inc
jp
aam
sub
push
mov
nop
ficompl
out
cmp
adc
inc
xor
adc
or
mov
or
add
add
lods
push
cmp
jge
sbb
lock
cli
mov
out
mov
clc
shll
sub
mov
stc
sbb
adc
push
xchg
dec
inc
movsl
cmp
dec
mov
lock
and
int
int3
adc
mov
in
pusha
add
mov
insl
push
jbe
xchg
xchg
testb
adc
cmp
scas
pushl
loopne
imul
add
lret
sbb
pop
mov
lret
sub
adc
adc
mov
repz
push
pop
call
adc
adc
add
aam
and
jo
repz
jecxz
insl
jae
int
call
stos
ss
fldenv
sbb
sbb
push
sub
in
rcl
push
inc
add
jmp
mov
enter
push
jo
jp
fcoms
call
popf
sub
mov
fisttpl
push
js
shl
cmp
negl
cli
add
pop
movsb
or
xor
mov
xor
sub
mov
scas
mov
add
lret
cmp
mov
inc
adcl
jae
pusha
dec
imul
or
ss
inc
inc
sbb
popf
pop
fldt
jnp
pop
hlt
or
dec
pop
sub
dec
leave
add
pop
das
call
xchg
xlat
inc
pop
rorb
fidivrl
xor
jmp
cld
or
push
pop
mov
push
or
js
inc
popa
sub
shrl
outsb
rolb
dec
cli
leave
adc
add
in
dec
pop
push
stc
inc
and
sbb
mulb
and
mov
add
push
add
push
sub
ljmp
in
xor
iret
aaa
loopne
fildl
dec
xor
pop
lock
pusha
adcl
add
and
in
inc
inc
in
add
pop
icebp
jb
nop
pop
mov
add
enter
adc
and
ret
fucomi
sar
adc
std
mov
xor
icebp
out
and
jecxz
mov
mov
adc
cmp
cmp
ja
dec
out
adc
xchg
loopne
or
ret
jne
cld
dec
pop
int
xchg
xchg
stos
aam
adc
add
mov
adc
movsl
push
fsubrs
shl
enter
subl
dec
int
inc
roll
paddb
jmp
rcrb
mov
and
orb
push
cmpsl
sub
ret
data16
or
jge
cli
add
adc
lcall
mov
jmp
test
ja
xor
in
je
ds
sub
pop
sbbb
add
aas
jmp
or
sbb
pusha
ljmp
or
loop
bswap
ja
mov
or
aam
jg
aaa
lcall
ja
push
mov
dec
in
push
push
mov
movsb
adc
scas
rcrb
jnp
addl
add
inc
pop
bound
jge
aad
or
xorb
sub
js
mov
movsl
mov
movsb
xchg
out
pop
sub
add
push
into
or
rorl
xor
adc
std
xchg
stos
xchg
dec
ja
rclb
into
mov
rorl
je
xor
push
fucom
bound
ja
mov
push
fsubrs
stos
push
mov
sub
lods
out
jmp
subl
pop
mov
imul
and
mov
push
int
push
xchg
ss
js
or
xchg
out
ja
pop
rol
push
imul
out
add
imul
mov
push
cmp
out
imul
mov
lahf
sbb
pop
mov
gs
add
pop
mov
or
scas
or
popf
xchg
test
jae
sub
add
add
jl
jae
xor
lret
daa
pop
and
out
push
jo
add
adc
negb
push
dec
data16
adc
pop
push
test
jge
and
xchg
in
xor
push
adc
fs
dec
out
popa
inc
insl
scas
xor
fldt
test
lods
cmpsb
or
mov
jne
arpl
subb
lods
int
lcall
rclb
jge
jns
aam
pop
insl
push
pop
jge
add
or
push
lods
cltd
push
mov
add
call
push
sbbb
push
addb
bnd
stos
adc
sbb
add
mov
mov
js
in
pop
xchg
jg
int3
ja
pushf
movsb
dec
add
xor
outsb
scas
pop
mov
les
js
xor
adc
xor
aas
or
loope
add
jle
mov
sbb
dec
std
jmp
inc
add
sub
lds
xchg
adcl
adc
mul
fdivrs
adc
fistps
gs
push
movsl
addl
sbb
fiadds
enter
loopne
ljmp
cmpsl
addl
mov
adc
xor
mov
mov
int3
or
jo
sbbl
in
jb
shlb
fmuls
rorl
fucomp
mov
cs
xchg
inc
jnp
shlb
push
ds
lods
js
dec
push
int
dec
push
int3
xchg
or
adc
sbb
add
xchg
std
pop
pop
adc
inc
inc
mov
add
sbb
pop
ror
or
xor
sbb
cmp
out
jg
out
nop
sbb
and
jo
lret
mov
hlt
mov
or
add
add
lcall
pop
push
dec
pop
not
insl
push
cmp
jae
out
movsl
add
inc
xor
add
mov
jno
sub
test
add
xchg
fxch
push
push
sub
inc
add
jp
sub
outsl
sbb
mov
sbb
xor
cvtdq2ps
sbb
out
aas
dec
or
stos
cltd
cmp
jno
push
pop
scas
lods
xor
xor
adc
xchg
mov
push
push
dec
lahf
adc
pushf
lret
push
sbb
stos
jae
ss
push
fdivs
aad
fwait
dec
fwait
jno
sub
sub
xchg
lods
adc
pop
insb
adc
push
scas
rcrb
mov
or
or
ja
fs
sbb
push
test
or
and
inc
rcll
stos
stos
adc
pop
lods
stos
push
and
out
lods
mov
xchg
push
xor
fs
cmpsb
out
cli
lods
std
push
cmc
mov
jo
and
sub
sbb
scas
lcall
pop
sbb
sub
push
mov
dec
fcoml
or
mov
push
shll
fcmovbe
jb
adc
mov
scas
pusha
or
stos
out
shl
and
movsl
notl
cmp
data16
mov
xor
xchg
mov
outsl
scas
push
stos
jmp
scas
jne
pop
call
push
scas
mov
out
into
popa
int
scas
add
push
jbe
jmp
roll
repnz
xor
adc
sub
pop
mov
dec
add
sahf
fwait
stos
sub
and
lcall
pop
xchg
stc
mov
aaa
loop
mov
repz
mov
adc
loope
xor
adc
jnp
sahf
out
or
push
adcb
mov
adc
mov
inc
rolb
mov
dec
jno
cltd
lea
push
mov
push
stos
cmpsl
fnsave
rcrb
cltd
test
xor
pop
rcrb
out
add
lods
push
jecxz
pop
push
push
pop
ja
adc
adc
adc
out
aaa
cld
mov
lcall
insl
insb
in
xor
int
add
mov
sbb
jg
xchg
xlat
pop
imul
sahf
mov
add
sub
mov
pop
add
addb
xchg
mov
jb
push
out
pop
test
jae
xchg
sbb
fstl
add
pusha
or
in
mul
xchg
insb
xor
imul
adc
jo
xor
cmp
inc
into
or
jae
or
stos
add
mov
inc
xchg
ds
jbe
xlat
mov
jnp
aaa
pusha
push
mov
int
fidivl
push
out
cmp
pop
imul
dec
cmpsb
data16
pushf
mov
leave
ja
fcomps
test
adc
or
or
jae
loope
mov
and
rcrl
or
scas
stos
add
push
or
push
push
push
pop
cmp
mov
fcom
inc
adc
mov
negl
mov
pop
rcrl
loope
out
cli
aaa
jge
jno
rclb
mov
or
rclb
add
add
jb
icebp
test
adc
leave
or
and
add
orl
stos
xor
or
xor
add
lods
dec
lock
sbb
jl
testl
add
xor
ror
push
and
cmpl
insl
add
pop
adc
pop
mov
nop
into
scas
xchg
stos
daa
adc
call
aaa
mov
pop
xor
fistl
pop
testl
jl
xor
into
rcrb
and
mov
mov
mov
aam
sub
cltd
sbb
pop
loop
jb
jbe
sbbb
dec
push
outsl
mov
adc
lods
dec
mov
roll
xchg
insb
xchg
add
test
adc
and
roll
xor
push
fadds
mov
out
inc
add
cld
insl
jne
dec
add
or
loope
orb
orb
xchg
sbb
xlat
xor
push
insb
cld
test
les
cli
shl
inc
mov
mull
mov
aaa
and
fsubs
push
cld
inc
mov
mov
ds
jecxz
jg
hlt
push
push
adc
shr
push
xlat
fadds
rol
mov
adc
push
lahf
push
in
jl
int3
jnp
fisttps
and
jbe
fcomip
jge
mov
adc
xor
ja
test
es
sub
lods
mov
lret
shlb
mov
mov
inc
mov
push
xor
mov
gs
push
jb
xor
push
stos
stos
aad
xchg
add
outsl
pushf
inc
sub
pop
sbb
insb
and
dec
dec
into
test
adc
jno
leave
addb
js
pop
scas
xchg
roll
adcl
push
xor
dec
xor
ss
push
out
in
ficoml
push
jg
cwtl
pop
scas
popf
test
mov
aad
int
sub
dec
aam
cmp
push
cwtl
xchg
int
mov
jno
lret
out
sti
pop
mov
pop
mov
jnp
push
push
insl
mov
jg
test
test
cmpsb
mov
xchg
pop
lahf
jmp
or
int
movsl
sub
fcomps
xchg
int3
xchg
les
mov
outsl
aas
push
mov
pop
jb
je
add
rolb
scas
fsubs
orl
jb
dec
fwait
mov
inc
mov
push
push
push
fcoml
js
ljmp
dec
pop
sbb
jge
addl
sbb
lods
mov
fadds
es
mov
ja
jno
push
lcall
xchg
pop
lods
xor
sbb
jae
imul
inc
jne
jo
pop
xchg
jne
and
cs
sub
xchg
xor
fbld
addr16
or
push
pop
out
test
orl
scas
imul
fcoms
lods
call
xchg
pop
mov
sbb
lret
imul
jo
sbb
aad
pop
lret
jecxz
mov
jecxz
sub
sub
inc
cmp
pop
dec
add
push
rolb
pop
sbb
fcomps
sub
and
nop
add
cli
cmc
mov
sbb
inc
ret
call
adc
test
jae
enter
pop
jns
fbstp
xchg
sbb
mov
jb
data16
jbe
push
add
or
lcall
inc
pop
inc
pop
push
mov
add
add
jge
fcomi
outsl
test
inc
pop
ret
cltd
int
xor
inc
pop
mov
inc
jae
fsubrs
xor
sbb
pop
stc
incl
lret
cli
push
and
push
add
popa
add
popf
pop
mov
mov
mov
xor
insl
das
jge
adc
int3
inc
test
xorl
rcl
add
sti
fs
fdivrs
lods
and
or
addb
rclb
pusha
les
dec
insl
fsubs
divps
ss
or
inc
adc
iret
mov
push
push
jg
test
out
aas
pop
sbb
sub
mov
pop
jne
xor
or
rorl
or
leave
pop
aad
mov
dec
call
nop
in
push
or
mov
mov
lods
dec
aad
cmp
je
jo
stos
lcall
jns
mov
add
popa
or
test
mov
sbb
cmp
push
shl
daa
and
push
mov
stc
aaa
or
jmp
mov
js
gs
orb
jb
cmc
sub
movsl
jmp
mov
xor
adc
dec
xchg
add
mov
and
scas
mov
push
push
mov
movsl
pop
bnd
out
lcall
mov
stos
popf
xor
jb
stos
mov
movsl
jg
pop
scas
or
mov
and
subb
cmp
mov
push
addb
push
movsl
inc
outsb
jno
xor
loopne
int3
pop
sub
sub
pop
sub
sub
clc
sbb
xor
pop
add
mov
cmpsb
cmpps
ja
test
rorb
mov
jecxz
lret
out
inc
cld
pop
or
rclb
andb
into
test
sarb
orl
push
orb
cmp
add
daa
js
scas
push
scas
xor
and
jae
push
and
xor
sub
cmp
rorb
test
cmpsb
add
inc
xchg
out
ja
rolb
pop
insl
mov
or
loopne
sar
ss
rcrl
out
add
xor
pop
jae
cmpsb
sub
js
jo
jo
enter
stos
or
sbb
jg
add
ljmp
pusha
push
mull
mov
mov
sub
push
jae
add
mov
dec
inc
stc
mov
add
in
scas
sbb
test
sub
sbb
movsb
sbb
mov
jno
subb
xlat
mov
xor
jle
std
lock
pop
xor
mov
mov
inc
pop
scas
xor
dec
inc
xor
dec
xor
jmp
mov
stos
push
lods
dec
sub
mov
pop
push
cmp
pop
dec
scas
pop
cmp
mov
sub
inc
adc
or
mov
jo
mov
cmpsl
and
push
inc
jbe
add
mov
sbb
or
jo
addr16
adc
jne
mov
ret
cmpsb
jno
inc
movsl
jp
shl
cmp
mov
rcrl
pop
lret
push
cwtl
push
insb
pop
sbb
and
add
mov
push
aad
mov
jo
ja
dec
loopne
stos
hlt
into
inc
add
imul
std
mov
out
shll
insl
push
orl
leave
xchg
mov
xchg
adc
movsl
push
and
sahf
ret
xchg
jns
insb
push
inc
out
jno
test
popa
sbb
inc
data16
mov
mov
ja
sub
push
adc
mov
js
cld
mov
test
or
push
cmp
sti
mov
and
sub
fistps
dec
arpl
mov
pushf
arpl
incl
ss
inc
push
ret
mov
mov
rcrl
xor
push
dec
mov
push
pop
gs
aam
push
adc
or
inc
shll
es
xchg
aad
jge
add
jmp
pop
imul
xchg
mov
cmp
fs
jb
cld
push
fbld
add
rol
mov
or
sbb
mov
pushf
push
xor
pushf
jo
jbe
ret
loope
lret
add
xchg
fnstsw
fisubrl
push
mov
imul
ret
xchg
and
pop
add
push
mov
xor
mov
sbb
adc
and
mov
or
loopne
jno
hlt
negl
rcrb
stos
inc
sarb
lods
mov
gs
pop
subl
jo
mov
stc
adc
test
inc
xor
out
sub
mov
lods
pop
jo
sbb
sbb
jno
pop
sbb
xor
pusha
mov
daa
cld
mov
sbb
inc
mov
ret
in
xchg
mov
mov
mov
inc
and
mov
adc
addl
in
sbb
pop
xchg
out
xor
push
adc
mov
or
mov
outsl
out
fs
xchg
ret
movsl
fcom
mov
orl
cmc
push
add
into
dec
dec
cmpsb
or
test
or
jb
enter
push
mov
scas
imull
inc
imul
into
scas
sub
fsubrl
mov
cli
dec
xchg
jo
aaa
jle
ja
daa
rcrb
xchg
je
mov
ficomps
aam
lods
sti
jbe
cmpsb
push
cmp
ret
xor
jmp
adc
xor
sub
cmp
inc
xor
push
fidivrl
xchg
xor
sub
loopne
outsl
adc
mov
cmp
rclb
aam
popf
mov
or
popa
or
xor
mov
ds
rcrb
pop
outsl
cltd
push
mov
sbb
fdivs
cmp
out
ss
xor
ja
mov
push
push
inc
push
cwtl
enter
xor
or
lret
fdivs
cltd
dec
imul
xchg
cltd
xor
mov
add
rcrb
stos
rcll
jo
pop
fsubp
dec
aam
mov
sbb
data16
add
add
data16
and
subl
dec
inc
out
lods
inc
jge
daa
gs
fidivrl
push
xor
push
lcall
mov
xor
sbb
xchg
pop
lcall
sbb
stos
jne
pop
and
ret
jno
das
or
pushf
mov
sbb
xor
xor
sbb
out
and
add
add
or
jle
cs
ljmp
call
mov
mov
dec
ja
or
lcall
push
ja
mov
dec
popf
movsl
inc
hlt
cmpsb
cmc
fdivrl
aam
xor
addl
ss
int
mov
les
scas
push
je
jle
jo
xlat
adc
in
jno
insl
xchg
adc
mov
mov
push
mov
sub
or
in
xchg
pop
xor
push
mov
and
mov
and
xor
jb
sub
shlb
push
xor
pushf
fimull
or
int3
inc
mov
subb
jp
pop
es
adc
xor
test
pushf
mov
mov
sbbl
jb
or
jne
jne
and
movsb
dec
out
adc
mov
outsl
add
sub
nop
add
jmp
sub
jbe
cmp
es
sbb
and
mov
sub
lahf
sbb
inc
and
imul
push
mov
add
adc
mov
mov
pop
repz
push
cmp
or
in
icebp
xor
repz
push
in
add
test
cwtl
and
stos
and
mov
js
test
int
test
int
sarb
pop
cmp
xor
pop
std
push
ljmp
aas
push
xor
imul
push
js
xchg
mov
movsl
mov
dec
rorb
mov
sbb
pop
mov
inc
push
data16
out
shrb
adc
pop
xor
loopne
xor
fs
arpl
jo
mov
hlt
ss
and
out
or
sbb
lods
adc
cltd
or
add
jns
es
popf
or
ficoms
fisubl
mov
fidivl
popf
dec
and
inc
add
or
or
lret
or
leave
inc
xchg
cmp
cmp
sbb
sbb
inc
sbb
cmp
pushf
orl
inc
adcl
inc
and
fidivs
or
or
mov
andl
pop
xchg
xlat
fnstcw
pop
cmp
popf
mov
xchg
or
test
push
xor
iret
test
inc
or
push
or
adc
sbb
mov
xchg
xchg
xchg
jae
mov
xchg
imul
or
lret
adc
sbb
xor
or
sbb
imul
sub
pop
or
pushf
and
test
shll
stos
cltd
jnp
sub
movsl
sbb
nop
ret
lcall
jo
xor
std
scas
notb
push
push
gs
shlb
inc
imul
add
push
inc
sti
icebp
inc
mov
stos
push
push
es
addr16
call
popa
mov
xchg
fbstp
mov
arpl
aam
int3
imul
mov
mov
sub
push
cmp
inc
scas
xor
mov
hlt
add
xorb
push
enter
push
subl
aad
jne
push
add
out
xor
cmp
out
pop
popa
adc
test
aam
lret
adc
sub
xchg
rol
loopne
in
ret
jo
fs
andb
bnd
mov
and
nop
xchg
and
push
dec
cmpsb
add
lds
data16
or
ret
mov
adc
xchg
xchg
xchg
pushaw
js
and
xor
insb
xchg
sbb
cwtl
sbb
mov
push
cmp
out
jl
daa
out
cmpl
stos
mov
leave
add
xlat
and
imul
add
testb
rolb
push
push
scas
xor
add
enter
push
insb
popf
ljmp
shlb
dec
xor
dec
pop
xchg
or
mov
andb
xchg
sbb
push
imul
int
push
cmp
jno,pn
push
inc
sbb
mov
das
push
dec
popa
daa
pop
loopne
int
xor
push
xlat
sbb
jecxz
jmp
pop
stos
xlat
mov
adc
jo
add
ja
cmp
sub
outsl
cltd
pop
cwtl
sub
cld
push
xor
or
mov
lock
test
dec
shll
sbb
sbb
xchg
rcl
insb
xchg
mov
gs
dec
mov
pop
mov
mov
lea
test
cmc
out
xor
ret
inc
aaa
andb
out
push
inc
cltd
push
push
sub
loop
rorl
mov
cltd
jp
jo
and
pop
in
push
dec
or
and
jns
addr16
push
push
mov
xchg
mov
mov
dec
sbb
ret
jmp
mov
pop
jae
mov
xor
sub
pop
test
xchg
adc
push
jae
movsl
mov
scas
xchg
or
aas
add
lcall
push
lcall
push
inc
dec
xchg
pop
cmp
sub
lcall
push
xchg
loop
or
xor
loopne
lds
jmp
push
push
jae
mov
in
jno
cmp
jp
xor
push
jp
gs
inc
mov
or
dec
imull
ror
push
cmp
cmp
adc
pop
in
pusha
sub
inc
jnp
add
push
push
xchg
mov
pop
adc
mov
movsl
fwait
je
mov
cmpb
xor
out
jno
dec
lret
dec
adc
loopne
sub
dec
clc
imul
or
lret
ja
je
xor
inc
cmpl
cmp
push
or
add
fcom
repnz
or
or
jecxz
xor
sub
lcall
insl
cli
push
add
mov
sub
cld
in
pop
mov
push
es
aam
mov
hlt
push
add
int3
ss
test
or
pop
add
mov
pop
pop
cs
adc
stc
add
sbb
pop
ja
or
addr16
mov
sub
xor
mov
or
sbb
imul
jp
cmpsl
lods
cmp
pop
push
daa
js
xchg
subb
or
shrb
push
or
popf
int
mov
add
stos
and
pop
xor
fadds
loop
sub
jne
pop
push
xor
xchg
xor
lret
lods
ret
stos
scas
dec
cltd
pop
cltd
jb
sub
cld
add
outsl
lcall
add
pop
xor
rol
sti
mov
mov
clc
call
mov
dec
dec
pusha
ret
mov
mov
outsl
xor
push
int3
lods
rcrb
mov
pop
subb
mov
mov
xor
dec
test
xor
dec
pminub
pop
rcll
fldenv
pop
scas
dec
inc
gs
jmp
adc
xchg
push
hlt
xchg
inc
daa
push
das
pop
imul
scas
xchg
push
es
or
pop
adc
cltd
inc
sub
rorb
jecxz
add
pop
push
xor
xchg
scas
jo
sbb
cmpsb
stos
add
mov
stos
pusha
or
sub
stc
stos
push
inc
cmpsb
adcb
sub
mov
mov
andl
or
add
add
cmp
stos
inc
sub
les
mov
in
mov
push
shr
aam
aad
pop
hlt
and
sub
insl
push
adc
cmpl
or
rorl
add
addb
adc
sub
push
rclb
xor
jp
js
mov
add
dec
rcll
imul
sub
xchg
push
incl
pop
lock
loopne
mov
adc
bound
into
std
pop
rolb
lods
lret
ret
push
aas
adc
adc
and
frstor
dec
cmp
imul
cmpsl
cmp
dec
mov
xor
sbb
and
mov
sub
shl
cmp
stos
pop
add
cmpsl
or
jle
ret
pushf
cmp
inc
mov
push
and
dec
aam
shrl
inc
fcoml
inc
fcomi
insl
cld
pop
cld
push
lea
cmpsl
aaa
decl
adc
xor
bound
call
loope
mov
test
jbe
jbe
ja
or
neg
rolb
flds
repnz
xor
rcl
shl
loopne
ds
in
mov
das
aas
mov
not
shl
mov
loope
les
cld
mov
rcrb
sbb
jno
es
push
sbb
jge
in
in
rorl
xor
jo
mov
pop
pop
sbb
cmp
int3
rorb
in
pop
stc
daa
lcall
push
dec
je
cmpsb
leave
stos
jno
adc
and
xlat
or
inc
daa
inc
and
test
pop
xchg
adc
sbb
or
and
jl
sbb
dec
scas
jo
xor
sub
add
arpl
adc
loopne
test
fwait
hlt
enter
into
mov
mov
aad
lods
mov
stos
and
pusha
jg
mov
scas
cltd
xor
sbb
xchg
ss
pop
xor
pop
pushw
jo
push
cli
orl
mov
inc
in
in
add
jbe
mov
pop
pop
adc
ljmp
mov
rclb
add
sbb
lret
or
fcomp
sub
cmpl
jo
lahf
sub
jae
lret
inc
jp
adc
dec
mov
push
add
xor
aas
outsl
imul
pop
aam
lods
cmp
add
push
sbb
jo
loope,pn
mov
pop
inc
adc
pop
lret
loope
xchg
pop
push
mov
inc
pop
push
xor
add
mov
pop
mov
pop
rcll
cmp
mov
mov
jg
or
push
adc
xor
adc
pop
xadd
pop
sbb
dec
inc
xchg
mov
imul
and
loop
in
jle
inc
xor
add
pop
les
rep
arpl
mov
push
lret
flds
add
loop
mov
pop
rol
adc
fildl
push
cltd
jbe
dec
aas
aam
lods
push
pop
push
subb
fnstenv
and
roll
jge
test
xlat
add
sub
sbb
sbb
and
pop
xor
jle
inc
mov
loopne
sbb
xchg
mov
push
mov
hlt
pop
mov
pop
or
push
stos
aas
and
push
ja
mov
das
pop
dec
sub
std
sarb
sub
call
pop
or
mov
add
push
loopne
push
and
push
xor
pop
jg
push
jae
bound
and
sbb
jecxz
push
mov
jo
lods
push
add
fisubrs
cmp
mov
stos
or
shll
loop
add
add
jg
dec
push
shl
inc
push
addb
clc
add
sub
sbb
jb
mov
add
insb
jno
repnz
enter
sti
mov
daa
cwtl
loop
jne
jo
hlt
imul
fs
and
or
and
cmp
inc
stos
ficoms
shrb
dec
inc
xchg
gs
ds
add
and
mov
push
rcrb
inc
loope
ljmp
and
jb
fimuls
ret
mov
sub
cmpsl
sub
mov
test
mov
stos
loope
push
push
pop
xchg
and
adc
pop
xchg
lcall
add
lods
subb
pop
pop
stos
xchg
xchg
ljmp
shrb
push
xor
je
out
repnz
lcall
pop
mov
adc
xchg
xchg
stos
loopne
adc
inc
jne
cwtl
push
add
nop
adc
inc
stos
sbb
adc
push
mov
sbb
xlat
pop
mov
xchg
and
lretw
sti
daa
inc
mov
sub
subb
mov
loopne
mov
push
lret
mov
es
cltd
mov
push
stos
rorb
test
enter
repz
out
sbb
xchg
cmc
mov
repz
add
pop
out
aam
push
jo
push
test
subl
cmp
mov
xor
bound
cli
ja
add
adc
adcl
hlt
push
je
mov
in
push
cmpsb
call
fdivrs
add
in
mov
fsub
mov
sub
into
dec
cmp
xchg
or
xlat
or
add
test
or
enter
cmc
mov
mov
repnz
fstl
pop
adc
jb
push
dec
enter
shrb
dec
add
test
hlt
into
negl
mov
add
ljmp
ss
add
bound
sub
push
sub
call
ss
cmp
data16
pop
aas
out
les
addb
fimuls
fmuls
das
loopne
cli
or
dec
add
and
testl
mov
stos
and
mov
xchg
mov
or
or
lea
setno
add
clc
and
push
fisttpll
and
lock
mov
lret
mov
mov
pop
test
shl
cmpsl
sbb
cmc
xchg
or
lods
popf
arpl
not
jmp
fs
andb
xchg
rcll
sti
inc
or
add
adc
imul
call
pop
imull
lret
sub
loope
loopne
cwtl
add
mov
sub
mov
inc
popa
in
test
inc
int3
fdivr
stos
movsb
mov
out
pushf
add
or
ret
lret
in
outsl
inc
jg
clc
imul
dec
add
add
outsl
call
jb
add
sub
dec
aad
stos
in
jo
sbbb
sbb
popa
andb
cmpsl
enter
push
jno
lods
add
in
push
xchg
addb
add
or
jbe
adc
orb
cmpsb
mov
mov
mov
mov
int3
mov
inc
mov
mov
inc
movsl
inc
fcomps
push
or
mov
int3
xchg
pop
sbb
pop
mov
dec
pushf
loop
and
cmp
mov
and
loop
pop
dec
mov
loopne
xor
sahf
call
cld
outsl
mov
mov
jb
mov
ljmp
push
sub
or
lcall
xchg
inc
imul
shlb
out
pop
js
pop
add
jo
fcomps
add
and
and
pusha
rolb
pop
rcl
in
pop
outsb
xchg
stos
sub
test
sbb
mov
test
sbb
fdivl
ds
rolb
popw
push
repnz
mov
addb
xchg
sub
icebp
and
inc
cmp
pop
mov
adc
inc
lcall
adc
add
sub
insb
leave
jb
mov
movsl
inc
and
cmp
shlb
pusha
push
pop
xor
iret
fisttps
xor
xchg
loopne
add
sbb
push
insb
push
sbb
sub
mov
pop
repz
rclb
adc
jbe
pop
sub
scas
ret
pop
ljmp
daa
jbe
sub
scas
xorl
jbe
aad
and
testl
mov
inc
cwtl
pop
jo
sbb
fmul
stos
daa
jno
push
popa
stos
inc
cmpsb
aam
jo
sub
cwtl
xchg
sub
or
dec
es
inc
out
fdivrs
push
mov
dec
aad
test
push
test
fldenv
rorl
dec
dec
lret
fcompl
push
or
xor
aam
js
repz
loope
movsl
rol
icebp
pop
push
or
sbb
sub
jne
mov
sub
add
pop
cwtl
test
in
mov
icebp
and
adc
xchg
cmp
pop
mov
mov
and
scas
shlb
inc
jo
shrl
lret
jle
jne
adc
ret
jns
mov
cmpsb
sbbb
sub
and
pop
fwait
add
push
mov
mov
imul
les
push
fisttpll
xchg
add
inc
cwtl
lret
rdmsr
jecxz
fs
outsb
xor
cmpsb
mov
add
push
ja
or
sbb
data16
js
jp
subl
sbbb
add
jo
sbb
sbb
mov
cmp
mov
xor
add
jg
mov
rolb
jo
sub
xor
iret
inc
scas
pop
lds
jb
add
xchg
adc
mov
push
pop
sbb
hlt
push
andnps
mov
mov
shlb
xchg
in
and
std
add
daa
pop
les
push
cld
sbb
adc
xor
rclb
in
dec
sub
or
rol
shl
fisubl
incb
dec
rcl
adc
ficoml
push
andb
hlt
xchg
add
ljmp
mov
shll
jo
clc
lods
shl
dec
jo
dec
scas
cmp
jb
cmp
lcall
fiadds
incl
mov
jb
inc
les
xchg
inc
mov
cmp
add
icebp
mov
push
xchg
add
mulb
jnp
mov
into
add
test
jmp
jg
clc
test
xor
pop
int3
not
mov
push
sahf
mov
stos
out
pop
mov
dec
xor
in
fdivrp
mov
adc
push
xchg
cmp
pop
sub
jp
dec
inc
mov
enter
xor
inc
mov
add
mov
push
cmp
add
ss
js
unpckhps
mov
stos
in
push
sbb
dec
dec
sbb
adc
imul
es
add
dec
or
sub
fdivl
fsubl
or
cmpl
hlt
cmpl
mov
xor
scas
inc
mov
xchg
es
jbe
les
push
neg
out
add
xor
dec
dec
push
test
pop
adc
jl
arpl
in
shrl
jns
call
ja
dec
dec
sub
or
add
addl
sbb
out
pop
loopne
inc
out
sbb
pop
sub
xchg
jmp
jle
mov
dec
cmpsb
stos
and
cmp
pushf
xchg
and
mov
out
mov
sub
test
jns
sub
mov
push
int
inc
mov
shll
test
sub
popa
xor
push
sub
cmp
inc
daa
stos
scas
loop
or
lret
inc
pop
daa
push
lret
in
je
inc
xlat
mov
aam
pop
pop
loopne
xchg
imul
nop
sub
lcall
xor
jb,pn
xchg
int
cwtl
jbe
pop
subb
repnz
ds
dec
dec
out
add
mov
xor
shlb
js
fimull
aas
pusha
lock
xor
aad
adc
inc
jns
xor
test
cs
xchg
rcrb
sub
outsl
xor
push
xchg
xchg
ja
sub
or
mov
adc
pop
cltd
cmpsb
stos
sbb
sbb
xchg
push
in
jae
jb
js
int
stos
sbb
nop
loop
push
fildll
push
cmp
mov
and
loopne
push
frstor
push
xor
sbb
sub
test
inc
jbe
rolb
push
dec
js
xor
rcll
mov
and
cmp
pop
jae
sbb
push
or
lcall
xor
xchg
or
push
xchg
shll
in
xor
sub
jecxz
mov
mov
roll
xor
in
cmc
movsb
rcrl
in
mov
lret
jmp
cmpsl
hlt
or
out
adc
jge
or
xchg
and
cwtl
mov
inc
pop
rclb
clc
imul
rcr
pop
cmp
fldcw
sarb
add
sbbb
inc
shlb
shll
nop
mov
sbb
aas
loop
inc
add
adc
jle
loopne
add
sbb
push
fsubrl
out
add
jb
adc
mov
adc
push
test
ja
pop
lds
stos
sub
dec
loop
cmp
xchg
fs
dec
not
mov
out
sub
dec
iret
pop
pop
inc
ror
inc
mov
cmp
sub
jmp
testl
add
cltd
ficoml
xlat
dec
dec
add
add
pop
xor
and
imulb
rcrb
xor
jmp
mov
sbb
jge
gs
xchg
ja
sbb
push
push
lahf
ret
or
out
mov
ljmp
push
add
pop
mov
and
adc
adc
push
mov
sbb
movl
adc
push
inc
ljmp
xchg
popa
insb
mov
mov
ret
add
sbb
hlt
sbb
insb
insb
sbb
or
jmp
rolb
fcoms
adc
adc
pop
jo
inc
movl
jmp
icebp
insb
test
or
loopne,pn
push
dec
sub
loopne
ret
fidivs
dec
andb
add
mov
js
add
xchg
sub
and
mov
fimull
xor
mov
sbb
adc
sub
dec
lods
sarb
es
es
in
mov
cmovbe
push
int
icebp
rolb
adc
mov
insl
mov
cwtl
test
sub
aas
adc
jl
xchg
test
mov
inc
gs
sbb
aas
loopne
jg
mov
rcr
and
cli
decl
adc
adc
rcr
or
movsb
jo
mov
push
mov
fwait
ret
je
fwait
sub
push
cmp
inc
and
stos
stos
inc
xchg
lock
xchg
loop
je
push
sub
jge
roll
inc
or
mulb
fstp
add
leave
adc
mov
out
in
dec
test
sbb
call
scas
icebp
inc
pop
add
add
adc
xchg
sar
or
das
cmpsl
not
imul
shrb
nop
jns
nop
andl
push
pusha
sub
sti
pop
mov
and
or
test
jne
gs
mov
test
push
sbb
je
jmp
xor
aad
mov
mov
in
test
sub
mov
inc
es
aas
cmp
pop
sub
sub
sbb
mov
rclb
and
sbb
lods
mov
cmp
sub
stos
dec
sbb
popa
mov
stc
in
sub
adc
sub
daa
mov
push
jae
mov
cltd
addr16
push
loope
dec
xchg
stos
mov
lods
mov
hlt
test
sub
aad
xlat
pop
jne
in
inc
scas
mov
jo
mov
dec
cwtl
js
pop
xchg
sbb
mov
sbb
int3
jo
fsubs
pop
ss
dec
mov
xchg
aas
sub
pop
pop
mov
mov
mov
mov
loopne
pushf
jp
scas
mov
aas
inc
cltd
push
sbb
scas
call
stos
pop
int3
lret
stos
inc
mov
xor
aad
xor
out
mov
jbe
jo
sub
cs
out
scas
mov
xchg
jno
mov
add
shrb
xchg
push
push
xor
outsl
or
add
push
int
pop
cmp
or
into
push
xchg
call
xchg
sbb
lods
pusha
cltd
add
js
push
sar
cmp
pop
das
enter
jno
rcrl
adc
inc
aaa
fildll
mov
andl
pop
or
sub
cmp
pusha
andb
lret
jo
es
ret
stos
mov
sub
jo
jo
loopne
sub
inc
xor
movsl
lods
cmp
adc
or
adc
xor
leave
cltd
add
add
mov
push
lods
xchg
xchg
fistl
push
ret
inc
sbb
add
js
loope
or
jo
das
or
mov
orb
and
test
loop
js
stos
adc
and
scas
add
xlat
dec
mov
in
xchg
aam
dec
cmp
pop
js
push
add
inc
jo
jge
or
sarb
cmp
mov
cmpsl
data16
adc
inc
mov
or
inc
lods
inc
stos
push
xor
push
mov
jl
loope
xor
jl
test
rcll
adc
add
dec
out
ret
or
or
adc
ja
dec
mov
lcall
xchg
hlt
push
push
loopne
sbb
mov
xor
cmp
mov
sti
test
pop
loop
xor
test
andl
and
mov
outsb
mov
scas
mov
xchg
mov
xchg
leave
rcrb
insb
shrl
and
pop
xor
inc
imul
outsb
adc
loopne
cli
push
loopne
scas
fcomp
xchg
lcall
jmp
push
mov
push
dec
pop
sub
rorb
adc
std
outsl
xchg
fwait
inc
lods
rolb
sbb
inc
adc
aam
test
xchg
daa
in
xor
lds
xchg
lret
fistpll
out
push
inc
xchg
xor
jno
mov
enter
xchg
lods
sbb
dec
adc
push
roll
rcrb
cltd
cli
insb
rclb
push
mov
ja
sbb
enter
ss
jge
adc
stos
add
dec
out
jno
mov
sbb
mov
lret
jb
jp
movsl
lea
jo
icebp
jns
sub
arpl
sub
shll
pop
shrl
or
sbb
inc
push
pop
push
sbb
and
cmpsb
sbb
rolb
xor
inc
xchg
mov
cmpsb
pushf
push
lcall
xchg
sub
lcall
pop
pop
pop
pushf
jnp
aas
cmc
sbb
inc
imul
cld
mov
rcrb
xlat
lcall
xchg
xor
inc
aam
jae
movsl
test
sub
add
push
push
out
inc
mov
sub
mov
sub
push
sub
xchg
push
jo
jae
cmpsb
xchg
sbb
mov
pop
jg
sbb
lcall
or
mov
push
push
movl
hlt
loope
cmp
addb
rolb
adc
ss
out
jo
or
mov
movsb
ret
sbb
nop
jg
fdivs
sub
ret
pushf
dec
dec
jl
lcall
movsl
sub
into
jo
jb
enter
push
inc
ret
loope
adc
fdivrs
xor
pushf
aad
mov
js
adc
sub
leave
cli
or
xchg
inc
shlb
jnp
push
imulb
adcb
shll
mov
enter
add
lods
xchg
or
mov
mov
pop
or
xchg
mov
lods
and
mov
addr16
adc
adc
lea
pop
std
and
loopne
cmp
mov
std
add
inc
inc
inc
mov
shl
push
scas
fucom
or
or
inc
pop
pop
pop
and
ja
xchg
mov
add
stos
repz
pusha
push
mov
mov
xchg
jne
int
rcrb
and
dec
scas
data16
mov
dec
inc
test
pusha
or
add
movsl
leave
shl
ret
pushf
stos
js
shll
and
mov
push
jb
fisubrs
pop
add
jl
push
and
xor
or
mov
add
mov
mov
inc
sub
or
adc
sbb
sub
push
lods
jo
sub
or
call
test
push
push
sbb
xchg
dec
incb
arpl
sbbb
xchg
lret
push
cmp
call
mov
ret
and
or
push
cld
outsl
mov
and
ljmp
aad
incl
repz
leave
and
ffreep
inc
insl
dec
xchg
add
fistpll
jb
or
movsb
ja
dec
push
xor
enter
ja
sbb
xor
es
stos
mov
inc
rcll
shlb
pop
leave
jle
int
push
adc
add
add
stos
inc
int
rcrb
int3
fs
xor
xor
int
pusha
popa
or
sbb
sbb
movsb
fwait
mov
inc
prefetch
or
loope
test
aam
mov
movsl
dec
lods
inc
int
orl
xchg
or
cltd
lcall
scas
xchg
mov
js
adc
pop
xor
sbb
es
enter
cmp
int3
dec
inc
jae
pop
fldl
jnp
out
push
jnp
aam
movsl
push
xor
mov
insl
hlt
dec
sbb
sub
jno
test
add
lock
push
xor
stos
mov
jl
cmp
sbb
mov
add
hlt
popa
xor
loopne
cmp
loope
out
int
xor
push
mov
out
mov
lret
aam
mov
cmp
lret
loopne
mov
xor
cs
jae
mov
testb
or
test
sub
mov
nop
sub
add
cwtl
push
or
les
shr
test
xor
int3
or
ss
mov
fsubs
xor
divl
inc
fcoml
popf
jae
pop
add
jbe
jmp
lret
jbe
gs
pushf
es
cmpsb
jbe
inc
sbb
mov
and
add
orb
ret
fiadds
xor
mov
add
lcall
dec
stos
inc
xchg
and
sbb
lret
outsb
sbb
xor
je
in
popa
cmp
inc
push
jecxz
movb
pushf
mov
push
jae
jmp
call
inc
out
jo
adc
orb
ljmp
or
or
jge
dec
adc
add
sbb
mov
and
call
outsl
xchg
or
inc
xchg
jbe
pushf
cmp
fsubs
fisttpl
dec
xchg
xchg
cli
roll
or
enter
arpl
or
mov
out
push
or
jp
xor
mov
aam
push
in
sbb
imul
movsb
in
mov
pushf
sub
xor
push
pop
push
cmp
enter
jne
inc
inc
pop
or
js
cmp
adc
push
pop
es
xor
inc
imul
mov
divl
adc
mov
rclb
rolb
add
inc
cmp
cs
or
push
sub
test
jno
mov
push
out
or
push
jne
sbb
andl
rol
add
xchg
push
xor
roll
mov
add
fmuls
pushl
lret
out
in
push
jae
adc
xlat
mov
hlt
arpl
andb
sub
xchg
push
push
test
xchg
dec
jb
or
out
mov
fwait
shl
push
pop
subl
fs
clc
into
mov
cmp
xchg
daa
dec
adc
or
and
push
cwtl
or
cmp
dec
cmp
xchg
add
sbb
mov
push
lea
push
mov
aad
adc
sub
inc
sub
push
sub
jae
loop
loopne
pop
stos
pop
shlb
stos
cwtl
shrb
std
pop
inc
into
shl
out
jl
hlt
push
fdivl
dec
or
sbb
pop
lcall
lcall
inc
jnp
jno
jp
push
xchg
rcl
imul
push
xchg
sub
mov
xchg
arpl
in
or
mov
and
push
jo
cwtl
movl
cmc
ret
jne
sbb
mov
lods
jle
adc
xchg
mov
mov
xor
push
pop
into
outsl
jge
enterw
es
movsl
sti
xor
pop
test
or
xchg
xchg
popf
ja
out
lret
push
imul
outsb
xor
add
or
xor
stos
imul
add
push
inc
cmpsb
les
xchg
xor
out
and
inc
sbb
dec
es
into
cmpb
mov
add
enter
sub
popf
sbb
adc
aaa
mov
inc
inc
call
gs
mov
mov
xlat
out
push
jecxz
loope
and
push
xchg
sbb
or
adc
inc
adc
ret
mov
pop
push
adc
inc
and
cmpb
adc
and
and
jo
mov
rorb
push
rcrb
jmp
sub
add
decl
xlat
rcr
dec
and
and
sbb
and
mov
lea
pop
cld
int3
aaa
les
rorl
loope
mov
sbb
jnp
ss
outsb
inc
xor
loop
sbbb
sub
pop
and
cmpb
test
shll
pusha
push
aam
loopne
icebp
jb
lret
lret
fisubrs
mov
lods
inc
ret
fwait
pusha
mov
or
sbb
shrl
push
xor
add
cmpsl
call
adc
or
sbb
pop
add
dec
push
roll
inc
pop
mov
jbe
adc
fs
fisttpll
jecxz
and
adc
fucomi
inc
adcb
adc
jbe
fstl
push
mov
sub
scas
in
shll
stos
add
inc
les
mov
push
enter
dec
jne
lret
mov
loopne
pop
mov
lock
xor
adc
lock
testb
pop
popa
jne
or
loopne
mov
jmp
testl
ror
xor
cmp
dec
inc
lret
dec
fisubrs
mov
dec
not
js
and
push
cmp
add
loope
lahf
pop
push
fisttps
mov
jmp
shlb
adc
in
jns
mov
lock
loopne
push
or
sub
fistps
and
sbb
fisubl
xor
iret
pushf
test
fistps
or
dec
or
outsb
push
insl
rclb
push
lock
jp
ret
orb
and
loope
push
push
sbb
and
out
shl
fisttps
shl
jne
rcl
mov
and
daa
dec
lcall
xor
jne
push
dec
jb
sbb
adc
les
dec
xor
shrl
lds
push
dec
cmp
cs
fwait
sub
inc
movsb
fdiv
out
sub
jb
test
and
or
adc
cltd
add
sub
mov
sti
inc
cmp
test
add
addl
jo
pop
xor
lcall
or
sub
jb
js
test
push
mov
or
movsl
rcr
mov
xor
stos
lahf
int3
lret
mov
mov
es
fwait
mov
or
es
sub
sub
int
add
jmp
sub
mov
stos
push
add
pop
addr16
push
sub
push
sbbb
pop
test
xchg
or
mov
add
or
add
push
loope
test
cs
cmp
sbb
mov
jnp
jo
or
dec
cmp
sub
sub
test
mov
out
inc
lds
mov
aaa
pop
or
inc
push
es
push
pop
mov
mov
subl
inc
pop
cmp
mov
xchg
fcomp
adc
dec
xor
and
push
std
mov
in
out
imul
lea
pop
jl
adc
xchg
jae
enter
xor
popa
dec
and
ret
fwait
pop
sub
lahf
rclb
shrl
mov
cld
xchg
mov
add
mov
inc
jge
or
jae
xchg
mov
push
xchg
xchg
lcall
jl
inc
test
jg
js
jb
jo
jnp
or
adc
add
andl
sub
pop
push
or
or
dec
sbb
rcrb
sbb
cmp
sub
adc
or
or
adc
jmp
xchg
cli
mov
xchg
les
ja
sbb
add
int3
loop
cwtl
sbb
push
or
sbb
xor
push
xchg
int3
adc
enter
sub
enter
xchg
enter
dec
sbb
popa
inc
imul
sbb
jb
jmp
rcrl
jp
mov
adc
push
lahf
cmp
cs
add
xlat
pusha
xchg
cmp
dec
add
push
sbb
sbb
pop
cmp
popf
push
pop
jae
xor
xor
add
stos
or
pop
jnp
mov
xchg
jmp
xchg
cmp
or
fsubrp
xchg
out
icebp
in
aaa
movsl
aad
gs
pop
push
dec
add
shrl
and
nop
add
xchg
mov
jns
inc
ret
add
je
xor
sbb
xchg
call
xchg
add
sbbb
cmp
xor
and
push
ja
mov
add
test
out
push
and
mov
pop
jae
cmpsl
inc
lcall
push
ljmp
sahf
and
xchg
and
xchg
inc
int
movsb
mov
mov
mov
sub
mov
push
je
pop
mov
jg
faddl
icebp
push
mov
adc
jecxz
shrl
adcl
and
add
xor
clc
inc
pop
das
push
addl
incb
add
lds
inc
xchg
hlt
adc
sbb
dec
loope
push
test
ljmp
inc
aaa
push
cli
sub
push
inc
aam
aaa
arpl
inc
enter
inc
rcrl
dec
dec
jge
pushf
xor
xor
jp
bnd
shr
jno
sbb
adc
push
mov
fsts
inc
mov
aam
ret
and
xorb
push
add
pop
add
bndldx
pop
adc
pop
cld
cmpsb
adc
gs
jb
sarl
pushw
pop
or
mov
clc
cmpsb
jo
jb
imul
sub
push
roll
ss
fbld
dec
inc
pop
es
xor
fbld
popf
xor
pop
push
jge
cmp
ret
adc
push
add
lret
aas
mov
inc
xchg
sbb
or
adc
push
je
adc
int
loope
gs
je
cmp
loop
movsl
test
cmpsb
stos
fnstsw
inc
jl
je
pop
cmp
cltd
lcall
and
adc
stos
aam
into
jne
stos
insl
mov
adc
js
lcall
dec
xchg
sub
sub
sub
or
in
insb
scas
lcall
xor
lods
jo
cmpl
dec
stos
sub
cltd
sti
mov
adc
sbb
gs
mov
jne
push
sub
jo
mov
mov
or
or
mov
in
xor
mov
xchg
jmp
test
iret
sarb
adcl
decl
orb
xor
jp
inc
jb
add
add
stos
or
adc
inc
pop
adc
mov
sub
jb
loope
jns
dec
ja
and
xor
mov
dec
add
fstl
xor
lret
cmp
dec
push
sbb
test
jae
and
movsl
ja
jmp
bound
inc
mov
push
mov
hlt
dec
add
mov
pop
lods
test
push
aam
cld
mov
inc
xorb
ja
or
dec
test
test
mov
mov
cmp
and
and
mov
fcoms
push
rolb
or
adc
add
xor
push
xor
data16
bound
mov
pop
cmpsb
mov
fbld
movsb
mov
mov
movsb
lea
mov
sub
dec
cmp
outsb
in
ror
cmpsb
inc
add
mov
mov
cmpsl
add
sbb
andb
sbb
pop
in
mov
orl
out
sbb
and
loopne
inc
shl
sub
or
add
fstpl
rclb
dec
xchg
push
mov
sbb
loopne
add
mov
push
xlat
cbtw
or
test
mov
inc
sysret
adc
ficoml
push
lea
mov
jecxz
sub
call
dec
jl
sbb
sub
adcb
lds
push
orl
push
lcall
xchg
add
adc
sub
loope
xor
fildll
sbb
jle
sub
cs
fistpl
adc
test
jmp
das
test
rcrl
mov
push
ss
imul
adc
mov
xor
test
xor
pop
xor
enter
das
imul
adc
stc
mov
nop
and
adc
adc
push
add
cmp
xlat
pushf
and
pop
adc
rcll
aad
enter
mov
mov
xchg
mov
xchg
dec
mov
xchg
stos
cmp
adc
cs
add
add
dec
sub
cli
push
push
lret
inc
inc
aaa
and
arpl
jmp
push
insl
inc
lret
adc
adc
cmp
aad
aas
mov
mov
pop
sbb
in
inc
test
cmp
in
pop
scas
into
push
mov
mov
push
fdivs
push
or
xchg
lret
adc
hlt
popf
test
outsb
iret
data16
rep
loop
popa
sub
xchg
cmp
lahf
shl
push
xor
sub
add
pop
out
push
push
lahf
pusha
rolb
call
int
adc
stos
es
js
imul
pop
push
inc
push
xor
dec
adc
sbb
sbb
sub
adc
sub
js
sbb
rcll
xchg
and
cmp
cmp
xchg
ja
rcr
mov
add
inc
into
nop
mov
mov
add
nop
sub
push
and
out
shrb
xchg
push
and
cmpsb
adc
adc
iret
push
cmp
shrb
gs
sub
js
scas
jnp
xor
xor
cltd
mov
pop
je
add
mov
clc
shll
pop
push
lea
adcl
out
mov
mov
mov
sub
jg
xor
pop
cmp
cmpsb
and
or
add
cmp
cwtl
add
or
mov
cmp
inc
jnp
inc
inc
cmp
orl
aad
add
inc
xor
xchg
sub
mov
sbb
loop
ret
fyl2x
cmp
jecxz
sub
push
pop
and
sub
add
push
hlt
or
cmpsb
and
add
adc
or
test
dec
mov
call
dec
ret
or
test
cmpsl
loopne
cwtl
push
xor
jge
aaa
jo
lret
in
push
push
in
mov
lea
add
adc
and
loopne
repz
pop
xor
out
push
xor
mov
add
aam
mov
imul
cld
ret
jecxz
jb
orb
hlt
dec
mov
sub
add
out
xchg
loopne
lds
pop
jl
adc
mov
icebp
dec
sbb
or
daa
lahf
stos
outsl
xorl
or
fistpll
ss
cmp
mov
lretw
adc
test
add
outsl
aam
shl
aam
add
add
call
or
dec
push
dec
push
mov
xchg
sbb
cmp
insb
push
or
loope
test
cmpl
add
ljmp
mov
test
sub
test
push
int3
jl
icebp
sub
mov
lret
dec
and
sub
adc
inc
adc
sbb
fnstenv
push
mov
and
and
mov
pop
cmp
cmp
je
insl
add
loopne
outsb
and
pop
jmp
dec
cmp
push
std
push
fldl
push
das
js
sbbl
rcll
push
outsb
outsb
or
pop
jo
lret
add
es
sbb
ret
and
add
jmp
sbb
xor
test
push
mov
inc
les
loop
push
es
shrb
shl
fidivrs
or
fnsave
das
mov
pop
cmp
mov
or
int
dec
push
or
lea
push
notl
xor
repz
push
inc
inc
mov
stos
adc
push
scas
inc
mov
leave
movsl
data16
dec
and
pop
rolb
test
out
mov
mov
enter
insb
test
xchg
sub
mov
xor
repz
loop
or
cmp
or
sub
orb
add
dec
push
mov
fimull
pop
nop
xorl
mov
jmp
stos
mov
inc
lods
pop
lods
push
jb
out
mov
aad
cmp
inc
int
jae
cmp
out
add
pop
subb
rcr
cmp
mov
pop
mov
xchg
adc
lods
or
loope
out
das
arpl
or
cwtl
stos
mov
test
or
dec
fdivr
addb
cmp
push
int
lods
dec
frstor
sub
dec
call
sbbb
mov
jp
mov
mov
mov
push
jbe
inc
xor
movsl
jae
adc
daa
int3
and
xor
mov
pop
pushf
adc
aas
and
cmp
lods
popa
call
add
adc
inc
cld
lock
xor
and
push
jecxz
and
and
lcall
bound
push
or
dec
lds
jb
mov
or
push
sub
test
sbb
cwtl
and
adc
lock
sub
push
or
popf
cltd
lods
add
jmp
stos
dec
jp
aas
mov
inc
fcmovnbe
aam
sbb
or
cmp
pop
rcll
xor
addr16
adc
xchg
aam
test
shll
lds
adc
sub
cld
xchg
and
xor
mov
or
mov
sbb
fidivrl
stos
adc
test
fsts
xchg
pop
inc
xor
or
or
cmpsb
inc
push
add
test
in
mov
add
jae
pop
aas
sbb
and
loopne
cwtl
xor
dec
out
enter
dec
std
inc
add
lcall
lcall
addr16
dec
js
or
loop
xor
sub
xchg
movsl
mov
jg
or
add
ljmp
xchg
test
lahf
sbb
mov
sbb
sbb
xchg
out
fildl
adc
add
popa
ljmp
xor
or
cs
and
shl
xor
add
and
das
pop
fcomps
cmp
pop
fidivrs
push
and
push
pop
rorb
leave
js
bound
test
inc
in
mov
fdivs
aad
sbb
test
fwait
out
in
add
pop
aam
mov
out
loop
push
rorb
add
add
shrb
inc
adc
add
add
es
push
jbe
xchg
test
mov
mov
cmc
push
jns
inc
rcr
sar
adc
outsl
inc
cmp
popa
mov
mov
add
cmp
inc
cld
pusha
jnp
dec
rolb
inc
push
pop
lock
add
xchg
inc
and
repnz
add
jns
es
adc
inc
ret
mov
rcrl
fs
out
test
sub
or
call
shr
mull
fimuls
jge
rol
push
or
aam
push
cmc
js
testb
xor
jp
xchg
shl
mov
inc
or
and
loopne
mov
jbe
xchg
and
pop
fists
aam
dec
popa
shrb
sbbl
out
rcrl
les
push
and
push
inc
xor
cmp
dec
iret
mov
push
and
test
incl
pop
ret
shll
dec
clc
sbb
out
xor
sub
mov
lock
fidivl
movsl
or
mov
testb
ja
xor
xor
bound
inc
pop
pop
rol
dec
test
aas
or
shl
sar
and
pop
hlt
lds
pushf
das
fiadds
mov
maskmovq
shr
sbbw
pushf
and
pop
mov
push
int3
stos
ljmp
add
test
xchg
mov
xchg
out
rcll
das
xchg
test
movsb
ljmp
test
fidivrl
mov
shlb
test
push
test
mov
arpl
aam
sbb
jo
mov
pop
xor
jg
adc
mov
bnd
rolb
mov
popa
rorb
dec
add
pop
test
adc
pop
shll
pop
or
push
sbb
icebp
adc
pop
push
sub
mov
sbb
loopne
push
jae
in
inc
jae
and
push
and
pop
xor
xor
xchg
scas
out
and
dec
xchg
and
mov
subl
ret
jnp
lgs
or
inc
push
cwtl
call
jo
ja
mov
sub
js
insb
or
aam
mov
testl
mov
fisubrl
test
sbb
stos
fs
hlt
test
xor
mov
push
inc
pushf
push
jae
shlb
scas
mov
mov
mov
out
and
adc
jmp
rclb
mov
xchg
or
stos
mov
jno
loop
add
or
rolb
sub
test
aad
push
or
ljmp
xor
adc
rclb
sbb
rcll
mov
rcrl
sbb
inc
pop
lret
sbb
add
push
sbb
add
push
fsubrl
pop
pushf
or
mov
or
xchg
mov
xchg
and
push
xor
jmp
out
adcb
fldt
jo
add
lcall
out
adc
lcall
jae
fs
stos
push
jbe
xor
es
out
out
sbb
notb
stos
jmp
xchg
cmpsb
outsb
jle
and
mov
mov
inc
int
cmc
test
sahf
stc
pusha
mov
xorl
out
push
or
stos
mov
repz
mov
sbb
dec
sti
push
sbbb
je
sub
test
mov
mov
mov
ret
nop
mov
in
add
stos
lcall
stos
ret
or
xchg
or
sbb
clc
jo
or
cld
insb
xchg
mov
test
cs
cmpsl
adc
mov
xor
repz
jne
aad
sub
dec
mov
xor
add
sub
int
loopne
sub
inc
mov
add
cltd
ret
rclb
test
fisubl
adc
into
adc
rorl
mov
stos
sub
jg
mov
int3
sarl
mov
stc
push
test
loope
popl
addr16
cmp
or
lock
and
push
mov
sub
dec
xor
movntq
ret
pop
lahf
loopne
test
or
ret
loop
into
add
adc
mov
jmp
sahf
or
mov
mov
xlat
or
lret
or
inc
push
insl
xlat
pushf
xor
ss
push
sbbl
cmp
arpl
cmp
jo
xor
leave
push
loope
jne
mov
sbb
into
xchg
mov
fldl
push
loopne
xchg
add
mov
or
iret
inc
in
cmp
inc
and
xchg
mov
mov
push
adc
test
sti
pop
aad
shll
ret
and
rclb
add
sub
repz
jno
shlb
xor
repz
dec
xchg
dec
fmull
movl
aad
loopne
orl
xor
inc
pop
jae
jno
cmp
in
and
in
push
and
mov
mov
stos
lret
orl
jae
cmpl
dec
rol
lret
push
sbb
dec
sbb
repnz
or
mov
icebp
sub
mov
mov
jl
clc
add
or
sbb
add
roll
inc
shl
loope
ror
lods
icebp
pop
mov
add
pop
rorl
adc
lock
jg
push
dec
loopne
mov
repnz
xchg
test
into
mov
mov
mov
adc
adc
adc
imul
fnstsw
xor
negb
shr
sbb
ror
leave
mov
or
loop
ljmp
ds
push
imul
mov
pop
jne
rcrl
and
add
mov
and
test
sti
div
xchg
pop
fiadds
not
cmp
loop
or
mov
mov
sbb
mov
hlt
sub
cmovo
push
or
xchg
jmp
rolb
test
mov
push
dec
mov
jae
lahf
mov
dec
push
ss
in
rorb
aad
dec
push
mov
fisubrl
sbb
add
xor
cmp
xor
and
test
in
jmp
mov
sub
movsl
in
sub
sub
int
orl
lret
add
jo
sbb
outsl
mov
mov
sbb
push
ret
jno
jb
push
push
in
sub
jg
andb
sub
fadds
mov
test
lods
mov
push
mov
push
mov
je
andb
mov
mov
test
mov
daa
or
outsb
add
sti
jo
pop
int
push
loopne
or
add
test
in
jo
push
push
mov
adcb
int
sub
or
dec
or
push
sub
inc
mov
dec
pusha
jo
pop
scas
push
int3
add
cmp
mov
out
ja
int
loop
inc
icebp
and
fists
cmp
loop
and
pop
lods
xor
cmpsl
mov
add
incb
sbb
add
or
or
pusha
shlb
push
cmp
or
cltd
jmp
lret
fdivl
scas
ja
aam
aas
in
daa
aas
push
imull
pop
addr16
out
xchg
cld
push
in
hlt
insl
push
adc
in
and
imul
mov
mov
pop
str
movsl
andl
mov
fimuls
add
andl
adc
sbb
push
outsb
inc
xlat
cmp
xor
push
test
pop
dec
stos
ret
mov
push
or
mov
roll
in
pop
das
sbb
or
lods
fisubrl
push
mov
or
clc
sub
cmpsl
rcr
add
or
je
adc
jb
and
test
ret
sub
jge
xchg
in
add
push
xor
dec
call
sub
loopne
lds
sbb
add
mov
fcom
mov
dec
push
aas
sbb
clc
add
xchg
add
in
jo
pop
faddl
jp
inc
xchg
lcall
lock
cmp
or
mov
pusha
xor
add
or
add
movsb
sub
fwait
int
lods
outsb
div
adc
mov
fadds
sbb
addl
lahf
cwtl
jne
adc
ret
push
sar
outsb
cs
rcr
sbb
cld
adc
neg
lds
or
pop
dec
inc
fdivrl
adc
les
mov
adc
adc
insl
enter
loopne
jecxz
stc
inc
sub
mov
std
mov
jge
add
rorb
mov
sbb
inc
nop
repz
inc
cmp
and
pop
in
xor
cmc
in
inc
ret
jne
add
jne
test
sahf
rolb
xor
push
or
out
or
pusha
inc
je
jne
or
pusha
ljmp
mov
jo
test
or
mov
inc
neg
lcall
add
outsb
dec
and
mov
sbb
push
ss
inc
repz
or
cld
out
aam
xchg
cld
nop
pop
inc
add
inc
ret
bound
ds
add
mov
enter
pmulhw
stos
pop
adc
add
push
cmp
mov
jae
mov
movsl
inc
out
aaa
dec
lcall
popa
test
jne
cmp
fcmovb
sbb
cld
mov
inc
xor
jmp
mov
inc
je
push
xchg
mov
inc
ror
mov
add
inc
adc
inc
mov
push
hlt
add
push
subb
out
xchg
pusha
pop
fldcw
cwtl
cmpsl
cmp
sbb
add
mov
add
add
xchg
nop
add
mov
and
leave
sarb
xor
outsb
cwtl
or
add
jbe
push
shlb
or
jb
add
cmp
sbb
xchg
xchg
mov
mov
xor
lods
push
adc
or
push
jnp
adc
jo
cmpsb
inc
push
push
sub
movsb
push
xor
mov
adc
in
xor
lods
int
add
test
aam
adc
xorl
jno
sub
loop
icebp
pushf
sbb
sbb
fld
adc
push
imulb
sbb
andb
cld
mov
mov
test
mov
orb
les
ds
sub
fmuls
ljmp
and
push
lcall
lcall
imul
pop
outsb
fdivrs
fisubs
cs
pushl
fdivrs
sub
mov
push
sbb
pop
outsl
dec
xor
jp
and
mov
adc
in
les
xorb
adc
push
je
pop
add
dec
xor
adc
lods
add
jno
inc
inc
add
scas
sub
jg
ret
adc
mov
jne
sbb
and
daa
mov
xlat
xlat
mov
add
xor
and
xor
pop
push
xor
stos
stos
sbb
push
subl
jp
push
test
xor
jg
push
into
ljmp
inc
loopne
out
or
aaa
fbld
mov
add
icebp
add
in
js
adcb
pop
xadd
cmpsl
dec
movsb
or
jp
loop
mov
jo
and
fisttpl
mov
add
mov
sub
xorl
dec
mov
xchg
in
sub
sbb
andl
jle
loopne
jle
add
imul
lods
cwtl
roll
bound
cmp
push
xor
stos
ss
inc
outsb
adc
jno
dec
push
push
add
jo
add
inc
icebp
sbb
push
mov
adc
into
adcb
stos
in
or
nop
add
add
jbe
adc
ret
dec
push
call
add
push
sub
push
lods
fmull
dec
hlt
adc
scas
mov
xor
cmp
mov
orb
sub
sub
inc
std
or
mov
or
mov
and
push
cmpsb
or
xor
lea
mov
add
lods
sub
roll
jmp
fdivs
arpl
mov
daa
lds
mov
add
ret
lcall
add
inc
in
cmp
clc
sub
jbe
cmp
cmp
enter
icebp
test
push
loope
or
pop
jno
or
and
test
shr
pop
inc
cmp
fs
insl
mov
stos
add
enter
pop
jp
test
mov
add
cmp
push
sbb
in
pushf
lcall
movsb
mov
xadd
dec
inc
outsl
jae
lahf
js
cmp
leave
in
pusha
add
ret
pop
int
or
jae
shlb
jo
das
cmp
adc
or
int3
es
xorb
xor
and
dec
in
cli
mov
andl
xor
xchg
and
adc
add
xor
xor
pop
fcmove
mov
test
sti
jb
shlb
jo
jmp
pop
xchg
nop
mov
or
xchg
loope
push
push
xlat
jg
mov
mov
and
mov
loop
push
push
push
sub
jb
pushf
mov
sti
inc
popa
sub
sbb
or
loopne
adc
aas
fildll
gs
cmp
push
inc
andb
daa
dec
stc
call
fstl
push
inc
dec
xor
sub
inc
lds
jb
add
fidivrl
sub
sub
imul
popa
mov
mov
stos
lds
add
pop
xchg
xor
pop
mov
adc
mov
in
xor
fcom
push
push
xor
loopne
jo
push
pop
pop
sbb
add
push
mov
inc
and
int3
in
add
adc
xor
fcompl
or
out
ja
in
mov
repnz
xor
movsl
out
andl
sahf
sbb
enter
adc
and
stos
dec
push
inc
imul
loopne
rorb
call
and
ret
pop
xor
js
and
in
test
cld
aad
inc
and
mov
nop
aaa
arpl
pop
inc
pop
xorb
lea
mov
mov
pop
mov
add
add
push
int
lea
lret
xor
or
aad
test
sub
push
pop
mov
push
adc
mov
sbb
inc
push
push
lahf
sub
inc
dec
into
xchg
stos
or
or
inc
das
test
inc
push
iret
sub
inc
icebp
add
adc
xlat
pushf
leave
leave
ret
and
lea
loopne
std
out
push
stos
enter
in
jle
addb
loopne
or
xchg
test
mov
sahf
divl
push
cmc
add
loopne
add
packuswb
roll
aad
cmp
pop
sbb
push
pop
inc
jp
es
mov
das
add
stos
and
into
or
daa
call
push
movsb
sub
ret
ljmp
inc
shrl
loopne
sbb
roll
pop
call
and
arpl
lds
sub
sbb
es
dec
push
lahf
add
inc
pop
sbb
and
enter
cmc
mov
icebp
add
sahf
das
pop
sbb
lcall
inc
int3
sub
xor
clc
neg
addb
lret
or
stos
mov
aam
jnp
and
fsubrs
cmp
sti
jl
jo
fimull
ret
nop
lods
push
jp
mov
jl
das
fnsave
pusha
subb
jb
lock
mov
mov
mov
ret
and
int3
xor
sahf
sub
adc
lret
aad
push
xor
add
pop
push
mov
push
clc
push
mov
add
lods
lea
movsl
stos
mov
js,pt
or
adc
push
fnstsw
lret
out
mov
or
push
cmp
adc
mov
push
and
dec
test
pusha
ret
pop
inc
mov
pusha
enter
lods
push
mov
inc
orl
add
adc
fimuls
adcb
push
gs
mov
test
call
mov
sbb
stos
mov
adc
lea
scas
mov
xchg
rcrb
or
inc
mov
pop
mov
loope
cmp
cmp
aad
aam
adc
add
mov
add
roll
cmpsl
pop
stos
testl
xor
adc
cwtl
lods
rorb
in
rorb
in
or
xor
push
sbb
add
mov
inc
in
pop
rorl
xor
lcall
add
mov
pop
jbe
jae
jb
adc
daa
lock
fistps
and
mov
mov
sub
sbb
mov
jo
dec
daa
bound
jb
cs
cs
pop
out
mov
or
loop
push
jb
faddl
stos
sbb
lcall
sbb
pop
shlb
mov
test
into
loope
jnp
mov
push
and
mov
inc
test
xchg
and
pop
loopne
dec
loope
mov
pop
jg
pop
adc
out
loope
dec
or
fisttpl
adc
testl
mov
push
or
xor
inc
push
push
test
test
jnp
pop
test
ljmp
shll
inc
in
stos
pop
mov
pusha
adcb
ds
push
int
add
movsb
jno
lret
sub
mov
or
shrl
inc
int
xor
ret
icebp
add
mov
xchg
lcall
jns
cs
mov
cmp
int
cmp
pop
mov
pop
xchg
movsl
outsl
divl
cmp
lea
or
cltd
xor
pushf
xchg
xlat
add
cmp
xchg
inc
rcrb
add
jbe
xor
xchg
rclb
pop
in
fsubs
xor
mov
pop
pop
sub
push
add
lds
jno
inc
add
adc
adc
lcall
lods
movl
lret
add
adc
xchg
adc
adc
cld
and
loop
cmp
cmp
addb
mov
es
or
cmp
inc
or
int3
loope
fldenv
fcomp
das
add
mov
mov
cmp
pop
inc
push
add
dec
iret
add
mov
or
sub
add
es
cmpsb
dec
xchg
dec
mov
xor
jg
sbb
adc
fildll
data16
mov
inc
push
cld
push
push
or
push
sub
call
inc
pop
mov
icebp
insb
push
push
fsubrl
sbb
adc
testl
or
inc
mov
or
test
pop
sbb
ret
clc
add
dec
adc
orl
lods
fwait
mov
sbbb
dec
inc
sub
shl
mulb
xor
pop
fdivs
jnp
out
mov
xchg
es
test
loopne
mov
pop
add
xchg
and
inc
sbb
stos
inc
fmull
or
iret
push
stos
insb
cmp
fs
or
push
mov
inc
test
xorl
push
inc
or
test
andb
push
jne
mov
sbb
sub
add
gs
push
inc
lods
xor
into
aad
pop
aaa
cmp
push
inc
push
test
push
test
push
xor
dec
push
stos
mov
push
sub
std
jno
cmp
push
dec
scas
adc
popl
cmp
rolb
enter
out
ret
dec
xor
cmpsb
call
jp
std
mov
mov
pop
pusha
lret
cwtl
aaa
push
loope
jo
sub
push
xor
and
add
mov
shrb
pop
mov
js
sub
out
or
xchg
fisubs
lahf
add
insl
data16
aam
or
add
xor
xchg
xchg
jo
shrb
popa
enter
inc
iret
nop
shlb
dec
stc
sbb
fildl
add
cmp
imul
pop
or
add
xor
add
shl
push
and
daa
pop
add
rorb
inc
in
mov
ljmp
sbb
orb
pop
adc
xchg
sub
int
add
out
outsb
pop
xor
imul
in
xor
ds
addl
dec
fidivrl
adc
out
jle
push
mov
in
or
mov
xchg
fxch
cli
and
test
leave
addr16
enter
sbb
mov
shld
adc
insb
pop
jns
inc
add
jp
xchg
cmpsb
sbb
rorb
add
flds
outsl
push
cmc
pop
jb
rorl
add
mov
hlt
int3
add
push
or
or
adc
lea
clc
push
lcall
pushf
lock
fcoms
shl
xchg
sub
insl
sar
cld
xchg
fwait
fwait
push
pop
mov
mov
aad
mov
les
dec
adc
mov
cmc
aas
ss
ror
xor
push
mov
daa
or
out
divb
shrl
insb
mov
mov
and
dec
popf
add
out
lret
aaa
ret
cs
popa
nop
adc
adc
sbb
add
and
aaa
test
sahf
add
pop
mov
outsb
shlb
ljmp
mov
lcall
jl
cwtl
loop
mov
ja
das
push
or
adc
test
add
inc
loope
sbb
ss
sbb
push
inc
fdivrs
push
test
xorb
mov
sbb
and
cmp
xchg
sbb
dec
push
inc
mov
xor
mov
or
int
mov
pop
sub
cmpsl
shrl
jb
xor
sar
dec
imul
imul
cmp
aad
add
sub
cli
xor
fsubr
shrb
adc
mov
adc
scas
stos
jo
pushf
jne
mov
shr
cmc
jo
add
jno
test
pushf
push
inc
and
pop
adc
mov
mov
mov
ja
cs
das
sub
loopne
fisubl
js
fs
pop
mov
aam
aad
ds
ja
inc
push
stos
lret
ljmp
bound
push
or
push
cmp
mov
jae
mov
ljmp
cltd
ja
loopne
mov
or
movsl
fstps
or
lods
pop
aas
push
or
and
jo
inc
cmpsb
fstps
fmulp
push
push
sbb
insl
int3
and
sbb
aas
fists
adc
movsb
sub
adc
and
out
xor
or
push
cltd
pop
adc
cmpsb
dec
loope
dec
hlt
enter
xor
loope
add
scas
sbb
xor
enter
push
andl
cmp
sbb
add
push
xor
sbb
int
xchg
and
ljmp
mov
push
push
xor
mov
push
xchg
xor
mov
icebp
andb
pop
mov
sbb
mov
jo
mulb
cwtl
subl
add
jge
icebp
push
sbb
mov
std
mov
add
arpl
sbb
mov
dec
shrl
cmp
jge
imul
sub
add
stos
inc
mov
push
jo
arpl
xor
xchg
inc
inc
push
cmp
int3
jo
or
inc
imul
pop
fisttpl
fwait
lods
jae
cmp
lods
popf
dec
and
fdivs
mov
sbb
sbb
ss
inc
jo
push
mov
addr16
leave
inc
psrlw
sbb
xchg
insb
rorb
pushf
mov
mov
push
test
xor
ja
cmp
dec
pop
mov
test
mov
cwtl
and
push
jle
sbb
mov
pop
add
pop
add
cld
icebp
mov
fisubrs
loop
int3
cmp
push
xchg
imul
aam
mov
pop
mov
addr16
jecxz
add
fucom
cmpsl
daa
or
std
fists
dec
nop
cltd
rcr
rol
cld
jnp
adc
scas
add
lret
shll
je
aam
in
filds
jmp
es
rorb
inc
out
push
adc
push
mov
in
sub
xor
xlat
nop
xor
or
xor
mov
xchg
add
sbb
jbe
push
sbb
sarl
lahf
js
mov
icebp
mov
or
xlat
pushf
stos
push
push
lret
addl
test
xor
popa
add
loope
xchg
test
push
pusha
jb
xlat
pop
push
add
ret
daa
sub
xchg
jae
sbb
cmp
and
js
or
adc
cmp
or
test
ficoms
loopne
enter
inc
in
lds
add
mov
pop
adc
lea
mov
fnstenv
inc
xor
stos
push
add
xchg
sbb
das
loop
inc
cmpsl
xlat
adc
or
dec
icebp
stos
add
add
xorl
sub
lret
pop
aam
jmp
and
cmp
outsl
shl
cmp
add
add
jp
sbb
jne
fdiv
xchg
push
hlt
insl
lcall
mov
mov
js
aam
xchg
xor
inc
inc
sub
loope
shll
adc
subb
out
in
movsl
pop
scas
sbb
jmp
idivl
clc
lahf
ret
add
jno
push
jo
jo
repz
mov
jb
ret
fcompl
mov
adcl
lods
mov
das
test
xchg
test
sub
addr16
test
push
loopne
incl
test
scas
aam
out
pushf
xorl
mov
adc
outsb
das
fiadds
inc
mov
cmp
and
sub
imul
pop
rcll
and
cmp
loopne
inc
cwtl
sbb
into
adc
cmp
jae
nop
and
mov
out
inc
pop
lcall
push
or
push
imul
add
popf
popf
pop
sub
push
xchg
add
mov
test
push
and
es
push
jo
inc
xor
test
xchg
mov
push
dec
cmp
mov
scas
lret
inc
imul
sub
and
and
inc
push
std
pusha
xchg
lret
in
aas
loopne
daa
and
jmp
sti
in
loopne
sub
adc
lods
add
add
inc
xor
cmpsl
mov
adc
lods
mov
adc
and
or
fs
std
movsl
es
pop
in
adc
testb
stos
cmp
in
dec
ret
pop
cmp
inc
and
das
dec
int
sbb
push
jne
jno
enter
jne
jae
jb
lods
sub
enter
out
daa
movsb
mov
mov
or
dec
daa
and
lret
sbb
repz
jns
sub
js
mov
lret
ds
int
add
push
sub
and
in
pushf
xor
stos
fs
jo
sbb
mov
pop
push
jo
or
pushl
enter
in
jno
cmc
fdiv
in
add
or
or
push
cmpsb
lahf
out
mov
mov
ljmp
or
jp
hlt
sbb
dec
and
not
lock
call
cmp
mov
push
sub
sbb
unpckhps
scas
bound
adcb
fbstp
movl
xlat
or
adc
test
xor
jmp
cmc
mov
rcr
sub
cmp
flds
sub
addl
test
jbe
sahf
jne
mov
cwtl
sbbb
imul
push
jnp
push
test
jne
adc
mov
or
push
scas
or
mov
pop
addb
fiadds
repz
inc
cld
jns
mov
or
loopne
cli
add
or
jge
add
sub
mov
rcr
sub
cmovge
aad
sub
dec
cmp
dec
push
addb
or
aas
in
and
and
cwtl
loopne
adc
push
fidivrs
add
xchg
mov
sar
inc
into
sub
inc
mov
push
sbb
and
decb
push
mov
mov
cmp
hlt
add
jae
ljmp
jnp
cli
pop
push
ror
xor
and
push
xor
mov
arpl
or
push
stos
das
xor
add
and
data16
cltd
cld
or
dec
lds
shl
mov
push
jg
add
sub
pop
push
loop
rorl
push
or
add
dec
inc
mov
insl
in
xchg
ljmp
mov
cmp
jle
testl
xchg
leave
pop
cld
jno
mov
leave
dec
rclb
and
leave
loop
add
lods
sub
lock
dec
add
ret
pop
pusha
mov
xchg
lods
add
push
ja
mov
jge
inc
add
dec
xchg
iret
cmp
push
jno
or
jne
enter
stos
out
sub
sub
sbb
rclb
jb
and
xor
cs
lcall
movsl
xchg
pop
pop
stos
out
leave
adc
pop
xor
or
cmpsl
fldt
fidivs
cmp
mov
stos
test
adc
xchg
xorl
jae
inc
sbb
test
mov
out
insl
je
xchg
pop
xor
xchg
orl
xchg
xchg
ljmp
dec
sbb
mov
push
lods
mov
jb
push
pop
cmpsb
dec
mov
int
pop
and
add
push
jb
xchg
cmpl
rcrl
xchg
and
pop
push
pop
pop
adc
xchg
mov
push
push
sbb
pop
rcll
and
loopne
push
sbbb
adc
pop
loope
xor
addl
adc
sub
ds
cwtl
push
ja
add
pop
divl
loope
pop
stos
add
add
test
fdivs
jo
sarb
mov
aas
jl
mov
loop
subl
pop
and
lret
dec
xchg
ljmp
push
push
ficompl
adc
call
jmp
bsr
or
leave
ret
mov
lcall
lock
xor
fcoms
push
push
test
mov
cwtl
outsb
dec
fidivrl
xor
jl
outsl
clc
mov
jle
jae
filds
and
pop
xlat
pop
inc
adc
fucom
xor
sub
cmpsl
aam
xor
push
cmp
xor
and
push
das
int3
dec
mov
pop
push
incl
jo
and
loop
mov
ret
or
add
push
adc
rcrb
adc
and
shl
add
ss
cmp
mov
or
sti
or
inc
dec
sub
sbb
sbb
fisubrs
fisubrs
sbb
jae
ljmp
or
xorb
mov
mov
lds
cwtl
adc
pop
mov
repz
adc
add
inc
int3
push
inc
flds
movsb
add
push
push
jb
ret
jns
movsb
cmp
adc
mov
shlb
int3
data16
mov
addl
sbb
stos
xor
sahf
shll
lock
popa
adc
pop
push
sbb
inc
mov
push
aam
aam
cmp
inc
push
xchg
lds
mov
cmpsl
and
or
into
or
dec
mov
pusha
shl
sub
cltd
mov
or
out
adc
push
shlb
xor
loop
xor
in
dec
inc
xchg
aaa
dec
flds
pop
pusha
sbb
cmp
mov
push
cmp
orl
rolb
cmp
sbb
pusha
jnp
pop
push
jmp
inc
ror
add
adc
inc
push
repnz
or
pop
xor
push
loop
mov
test
in
sahf
inc
fmull
ljmp
test
outsl
pop
add
add
xchg
enter
pop
sarb
adc
pushl
or
loopne
adc
cmp
sub
mov
rcr
jnp
out
shlb
pop
and
adc
ss
pop
cmp
orl
shll
in
jne
je
and
lods
fsubs
mov
js
push
inc
push
push
mov
lahf
xchg
das
filds
add
in
int
xor
and
push
mov
ret
loope
dec
inc
adc
imul
dec
and
cmp
adc
xchg
xlat
mov
inc
jle
mov
add
push
and
js
xor
ficomps
cmp
add
lods
aaa
sub
sbb
mov
dec
int3
sbb
test
add
mov
push
push
add
repz
in
inc
or
inc
mov
xchg
loopne
xchg
ss
or
or
cmp
out
inc
mov
ss
shll
popa
mov
pop
mov
ret
adc
mov
dec
daa
data16
cli
in
shll
push
cld
bound
lock
mov
sub
pop
jo
inc
push
data16
add
sub
mov
or
mov
and
loope
xor
adc
inc
imul
movsl
cmp
sbb
add
aas
pop
or
xchg
icebp
inc
sbb
inc
pop
push
or
sub
cmp
add
or
inc
test
push
sbb
rolb
scas
clc
inc
mov
and
push
loopne
cmp
xchg
out
inc
rorb
sub
add
add
mov
rorl
outsl
es
popf
or
xor
or
faddl
adc
push
mov
loope
xor
fwait
lret
lds
sub
addb
xor
mov
push
sub
xor
or
cwtl
xor
dec
mov
push
es
jb
incb
call
xor
mov
fcompl
dec
mov
ss
add
adc
or
adc
scas
sub
addb
cs
jno
xchg
mov
sub
jnp
mov
mull
mov
lcall
inc
inc
and
test
mov
scas
loopne
pop
jo
stos
push
mov
pop
into
jo
inc
mov
cmp
stos
adc
add
in
daa
push
out
sbb
pop
shrl
clc
or
aas
and
mov
lods
adcb
pop
push
cmp
push
movsl
push
imul
mov
out
test
mov
scas
lcall
mov
jl
push
xorb
xchg
adc
mov
sbb
xor
mov
inc
gs
cmp
add
push
jecxz
outsl
adc
pushf
mov
adc
subl
push
lods
add
movsl
xor
xorb
jmp
sbb
inc
add
aaa
cmp
jne
jno
xor
xlat
nop
push
int
sarb
jne
inc
sub
leave
scas
adc
sbb
test
fwait
cld
or
xchg
lcall
and
xchg
and
repnz
scas
lret
cmp
aam
roll
andl
mov
addr16
enter
stc
in
xchg
and
mov
lcall
aam
cmp
push
imul
jb
xchg
pusha
das
movsb
mov
and
mov
enter
sti
mov
cmpsb
or
adc
popl
add
sub
fcoms
callw
mov
aad
inc
jnp
cwtl
rcrb
add
lret
mov
mov
ds
push
cmp
mov
mov
popa
js
sub
dec
dec
roll
or
scas
push
push
inc
sub
sbb
adc
js
add
and
xor
out
or
mov
leave
xchg
or
add
ja
jp
int3
inc
and
sbb
les
mov
out
or
lock
pop
push
mov
lea
aad
push
in
ds
and
pop
or
adc
or
icebp
into
push
xchg
mov
inc
test
xchg
or
mov
mov
sbb
sbbl
cmp
adc
imul
pusha
jae
jne
pop
mov
sub
stos
xor
pop
sub
or
lds
add
xor
cli
outsb
ljmp
xor
push
mov
xchg
mov
inc
cmp
cmp
je
xor
add
mov
adcb
sbb
pop
nop
add
out
cmp
test
mov
push
pop
les
sbb
sub
movsl
jno
cltd
adc
int
push
adc
push
pop
test
nop
add
gs
sub
stos
lock
and
pop
in
sar
shrb
bound
push
bound
iret
add
call
jl
arpl
lcall
xor
dec
nop
mov
mov
or
sar
out
mov
test
fsubrs
push
pop
jl
dec
adc
mov
dec
cmp
pop
and
inc
or
mov
in
or
pop
sahf
and
in
popa
test
ja
push
add
lret
mov
inc
inc
xchg
mov
pop
add
push
add
lods
loope
xchg
jne
inc
insl
add
imul
mov
outsb
or
jo
iret
or
fs
addb
xor
or
and
jecxz
sub
or
or
mov
push
aas
or
push
jg
mov
bound
mov
add
scas
rcl
add
bound
dec
popa
mov
push
xchg
test
sbb
test
sub
push
add
fistl
adc
daa
popa
push
push
add
and
testb
adc
push
scas
stos
in
xchg
stc
sub
mov
and
mov
sub
xchg
lret
bound
dec
add
test
push
decb
adc
dec
lods
mov
lds
mov
sub
les
or
and
daa
xchg
push
pop
sub
test
lret
lods
cmpsb
or
and
sub
adc
adc
dec
add
and
rcrb
xlat
pop
stos
sbb
pushf
aad
aad
xchg
sbbl
lret
ret
xchg
call
fadd
lock
add
push
mov
pop
add
clc
inc
nop
add
jne
xchg
into
mov
or
sub
outsl
add
jo
in
int
push
mov
ret
mull
jg
jne
xchg
jae
xchg
dec
xchg
adc
sbb
jnp
jle
or
in
lods
dec
mov
inc
sbb
sub
xchg
or
xor
imul
add
cmpsb
mov
test
mull
mov
pop
dec
sub
fwait
stos
mov
push
and
dec
in
or
insl
xchg
jo
mov
nop
mov
mov
mov
call
inc
clc
es
mov
mov
cmp
out
movsl
shl
xor
xor
adcl
bound
dec
pop
xor
sbb
popfw
enter
mov
dec
loop
repz
sbb
js
enter
mov
into
scas
int
push
enter
add
dec
in
int
push
adc
sub
adc
mov
sbb
add
imulb
pop
loope
adc
mov
mov
js
pusha
mov
in
mov
pop
xor
mov
jb
mov
add
xor
dec
in
inc
inc
stos
and
dec
mov
pop
adc
ret
out
xchg
pop
xor
mov
xchg
xor
test
add
and
lahf
mov
test
xchg
mov
xor
or
jg
sub
shrb
cmpb
scas
cmp
out
mov
test
andl
int
xchg
sub
aad
sub
mov
dec
in
dec
nop
sbb
daa
loop
adc
in
out
leave
test
outsb
stos
sbb
and
xchg
dec
pop
xchg
and
dec
push
or
push
inc
lret
scas
xor
pop
lds
push
xchg
mov
lcall
ja
shlb
xlat
mov
push
jae
cmpsb
lods
outsl
cmpsl
jne
dec
sbb
stos
stc
cmp
lea
push
push
mov
and
fcmove
mov
aas
jnp
out
mov
mov
sub
xor
jb
mov
push
add
cmp
mov
mov
sti
out
daa
adc
int
push
mov
pop
int
mov
leave
and
adc
mov
mov
ja
push
pop
daa
xor
add
jae
rcll
in
or
push
scas
inc
dec
ljmp
in
loopne
mov
add
mov
not
or
test
lea
xor
add
test
adcb
xchg
test
lcall
cwtl
pop
test
imul
add
movsl
push
pushf
xchg
or
push
push
push
daa
cltd
out
xchg
scas
je
scas
aas
push
add
pop
pop
ret
mov
or
push
dec
pushf
sbb
push
and
jb
and
cmp
sbb
cmpsl
adc
and
and
xor
add
push
pop
xor
insl
cmp
cwtl
push
notb
aad
or
pop
imul
push
cmp
cmpsb
jb
cmpsb
add
dec
inc
inc
test
sbb
mov
jge
mov
mov
jo
xor
sbb
mov
mov
mov
ljmp
fildll
pop
test
mov
test
ror
rorl
adc
out
dec
fcom
add
clc
outsl
fs
out
in
mov
sub
add
push
push
lcall
add
mov
test
jo
sbb
jb
add
add
and
or
cmp
pop
sbb
sbb
mov
push
add
sbb
in
frstor
in
icebp
rcrb
sbbb
into
jb
js
popf
stos
loop
mov
cmp
xchg
rolb
lret
popa
clc
push
ret
test
xor
popa
jo
popf
sub
imul
in
sbb
pop
mov
adc
jo
or
dec
add
xorl
sbb
adc
lcall
and
stos
or
and
addb
int3
fiaddl
pop
add
mov
ficompl
lcall
lcall
mov
imul
pop
imul
or
pop
xor
pop
xchg
mov
add
mov
pop
shrl
pop
push
add
shlb
in
push
mov
sub
mov
out
cmp
push
dec
testl
mov
shl
lcall
fs
dec
push
mov
stos
cmp
jo
dec
cmp
sbb
daa
sub
cmpsb
adc
mov
add
and
push
enter
out
mov
push
fsub
mov
and
add
adc
clc
cmc
shll
jae
hlt
mov
insl
cltd
aad
rcr
incl
pusha
dec
jge
sahf
outsb
out
mull
dec
add
andl
lret
or
inc
aam
lret
movsb
clc
push
lock
and
or
xchg
cld
sbb
and
repnz
call
std
adc
xor
ss
xlat
sarl
mov
adc
mov
pop
or
pop
add
insb
mov
daa
xorb
sti
lcall
loop
ljmpw
push
inc
sbbb
inc
push
cmp
loopne
lds
pop
adc
out
jbe
pop
adc
dec
sub
xchg
call
into
sbb
insl
add
adc
adc
adc
xchg
xchg
lods
adc
loopne
jo
add
dec
nop
sub
mov
das
mov
mov
aaa
push
movsl
aam
fidivrl
jg
sub
cmpsb
add
je
adc
sbb
rcr
dec
and
scas
js
pop
cld
lock
repnz
jo
clc
prefetchw
sub
add
pusha
sbb
push
rolb
xchg
add
sub
xchg
rorb
dec
sub
add
xor
xchg
or
shlb
or
loope
loopne
sub
loope
movsl
stos
arpl
dec
loopne
loope
mov
xor
pop
add
jle
jecxz
add
push
mov
add
rorl
loop
add
push
lods
pop
jge
pusha
stos
cs
les
or
flds
loopne
lahf
xlat
sbb
pop
cmp
jne
pop
hlt
cmp
cld
mov
or
stos
cwtl
add
add
cwtl
push
cmp
jo
andb
and
or
popf
into
pop
push
aam
sarl
xor
jo
shll
add
rorb
add
push
xor
inc
mov
cwtl
cmp
gs
or
pop
cmp
inc
addr16
daa
cmp
icebp
adc
jecxz
ret
ret
adc
xchg
inc
xorb
xor
pop
cmp
adc
adc
roll
int
arpl
jl
loop
jmp
cmp
and
sbb
push
fimuls
loope
jle
inc
add
sub
mov
iret
mov
sbb
notb
sub
addr16
rcrl
loopne
sbb
fcoml
clc
arpl
movsl
jmp
test
ja
push
nop
push
dec
sbb
add
jb
lds
aad
lret
xor
mov
and
das
cmp
xchg
mov
test
ret
nop
or
daa
into
cmpb
movsl
or
out
lea
mov
xchg
ja
cld
in
mov
add
cwtl
add
arpl
lock
cmp
fwait
cmc
clc
sub
xlat
add
cmc
movsl
mov
sbb
xor
loope
cmp
or
xor
in
cmpb
adc
incb
add
or
sub
daa
xchg
pop
je
or
jns
ret
je
jle
xlat
push
cmp
dec
cld
aam
movb
pusha
sub
adc
flds
das
scas
lcall
cmpsl
mov
mov
xor
pop
inc
inc
out
sbb
pop
dec
sbb
fadds
push
rorb
push
cmp
cmpsb
sbb
movb
call
sbb
add
cmp
leave
mov
inc
mov
int
jecxz
lods
mov
testl
cmp
lds
dec
add
pop
push
mov
mov
mov
mov
adc
lea
lret
shrl
outsb
jo
aaa
add
mov
adc
adc
mov
add
leave
lcall
je
xlat
sub
sbb
cli
test
jne
push
rcl
xor
fucomip
cmpsb
pusha
rorb
int3
mov
adc
xlat
xor
hlt
pusha
lock
les
sbb
dec
sbbl
enter
xorb
dec
jl
rolb
jmp
test
je
add
loop
mov
enter
sbb
jnp
ffreep
cmp
pusha
add
mov
xor
sbb
jbe
clc
pop
add
mov
xchg
xchg
adc
adc
cwtl
adc
push
xor
mov
inc
dec
cwtl
adcw
cld
add
xchg
push
cmp
in
popf
es
jl
pop
inc
jae
js
fdivs
cmovl
adc
mov
jbe
loopne
xor
cwtl
rcrl
xor
jbe
lahf
fwait
sub
rol
push
pminsw
xor
insl
aas
rcrl
notb
add
das
cmc
mov
loope
sbb
xor
sbb
xor
push
sbb
cmp
xor
out
subl
addr16
sub
add
push
xchg
lds
mov
mov
fcom
testl
or
jp
test
mov
pop
fistps
push
mov
ret
xor
sub
std
out
inc
test
jns
mov
push
ds
or
sbb
arpl
pop
or
inc
shrb
dec
scas
jg
xchg
mov
lcall
shlb
mov
fiadds
dec
fcmovbe
sbb
sbb
call
mov
icebp
outsl
add
jo
je
add
xchg
dec
inc
pushw
daa
addl
dec
sbb
ret
idiv
push
push
cmp
lds
leave
adc
in
ja
sti
jmp
add
xor
push
sbb
faddl
repz
fs
cli
add
sbb
or
dec
andb
push
xchg
or
fisubrl
and
jl
scas
shl
push
outsl
push
in
movsl
xor
sub
bound
mov
push
ret
jne
pop
push
movsb
or
jo
inc
and
inc
cmpsl
cmp
mov
push
fcmovb
inc
mov
test
add
or
out
adc
ret
movsb
outsl
sbb
mov
addb
inc
movsb
mov
push
and
or
mov
or
add
xlat
sub
xchg
pop
push
test
push
nop
pushf
popa
inc
cmp
nop
loope
repz
cmp
int
loop
mov
pop
push
add
hlt
pop
pusha
push
xchg
mov
stos
sub
testb
or
out
cmp
outsl
cmpsb
add
or
xchg
popa
cmp
popf
or
cmp
inc
add
orb
ljmp
add
aam
or
int
and
xor
push
pop
sbb
push
call
adc
addr16
mov
mov
adc
jne
or
and
dec
sbb
movsb
sbb
dec
push
call
add
mov
icebp
xor
and
outsb
out
dec
arpl
inc
pop
sti
sub
rorl
adc
gs
or
loop
mov
mov
or
push
mov
mov
push
cmp
ja
es
popa
mov
cmc
iret
fmul
andl
jae
addr16
loopne
or
cld
or
ja
adc
or
adc
adc
jb
and
cmp
adc
sub
out
add
xor
out
or
and
ror
mov
inc
xor
test
scas
push
and
add
mov
sub
dec
inc
push
adc
or
push
leave
stc
pop
push
test
jae
aam
nop
xor
rcrl
jge
dec
leave
or
inc
xchg
repz
popf
lea
sbb
fdivr
and
and
sub
inc
jge
adc
cmc
filds
out
sub
cmc
stc
mov
negb
lcall
es
into
mov
jmp
mov
test
dec
push
pop
sahf
cmp
push
add
into
push
dec
loope
pop
sbb
or
stos
xor
xchg
or
mov
or
add
adc
sbb
xor
add
dec
out
sbb
ljmp
mov
adc
repnz
fildl
movsb
jp
pop
or
jno
sbb
xchg
fwait
jne
fistpl
mov
inc
mov
inc
mov
cmp
inc
icebp
lock
sbb
inc
adc
or
mov
jecxz
dec
jle
fcomp
xchg
sbb
cmp
lahf
sbb
mov
fcmovnbe
add
lods
inc
adc
scas
lods
inc
inc
mov
test
mov
and
or
mov
jmp
xchg
filds
pop
pop
add
repz
sbb
or
dec
push
jo
mov
or
cmp
lea
jl
data16
dec
xchg
or
decb
pop
sbb
subb
or
fidivl
orb
hlt
or
out
cmp
and
add
dec
stos
cmp
push
test
mov
jl
inc
cmp
mov
orb
cmp
or
in
ret
int3
push
xorb
in
sbb
ret
stos
and
popf
adc
push
cmpsl
ret
cmpsl
gs
jne
filds
or
xor
call
pop
and
mov
icebp
pop
mov
lods
ret
in
out
and
mov
add
sbb
aad
push
bound
add
sbb
pop
mov
int
mov
addr16
ljmp
mov
test
stos
out
add
dec
cmc
fadd
or
add
mov
xadd
add
pushl
cmp
sub
xor
and
add
pop
or
movsb
or
adc
cli
add
pop
xchg
ja
push
inc
pop
pop
cmp
adcb
iret
add
lock
push
and
mov
call
leave
aas
test
jne
sbb
sbb
lods
es
int3
or
sbbb
cld
inc
imul
movsb
lcall
xor
mov
or
adc
ds
mov
out
sbb
jnp
lea
popf
jecxz
push
stos
jmp
test
push
into
fld
jp
adc
lret
mov
pop
shlb
test
push
jnp
data16
cmp
add
out
pop
mov
std
adc
mov
cmp
rclb
mov
inc
popa
mov
dec
cmc
inc
clc
fdivrl
in
pushf
xor
mov
mov
pusha
push
out
sub
xor
int
add
test
clc
shll
shll
pop
pusha
sub
cmp
mov
fimull
jnp
fsubrs
inc
or
lea
add
imul
add
add
jnp
mov
les
test
add
push
jp
sbb
ss
lret
dec
push
int3
int3
loope
and
rorb
js
mov
outsl
fucom
fcoms
loopne
cmp
inc
shll
pop
jo
je
push
mov
ret
sbb
stos
add
mov
sar
dec
or
sub
jno
loopne
loopne
push
or
push
in
dec
test
arpl
add
xchg
out
pop
and
iret
gs
cmc
icebp
xor
subl
mov
stos
rolb
xchg
xor
cld
mov
lahf
fs
aad
and
repnz
cs
fbld
and
sbb
les
int
adc
cli
push
xor
sti
imul
adc
repnz
cmpsb
js
or
and
mov
mov
ret
jo
rcrb
cmpsb
push
mov
adc
in
fildl
sub
movsl
mov
pop
inc
adc
add
adc
cmc
add
mov
adc
clc
xchg
inc
out
cwtl
daa
mov
mov
xchg
xchg
pop
nop
xchg
bound
adc
rolb
adc
cmp
loope
pop
xchg
aad
sbb
nop
in
pop
data16
dec
stos
mov
das
inc
scas
add
push
and
nop
pop
push
aaa
sub
repnz
int
int
jecxz
sbb
mov
test
mov
mov
push
jmp
in
cmp
out
pop
push
or
and
nop
repz
lods
test
ret
outsb
movsl
or
lcall
push
cmp
mov
in
push
xor
ret
in
sub
pusha
jecxz
into
inc
fcomps
out
data16
sbb
sbb
mov
insb
add
inc
testl
cmp
inc
push
add
fadd
add
or
decb
into
push
mov
or
push
testb
cmpsl
gs
adc
lods
aad
cwtl
cmp
jl
ljmp
add
mov
jns
dec
sar
fcompl
loopne
clc
iret
inc
mov
pop
push
fcmovbe
inc
or
adc
or
mov
aad
or
enter
xor
add
push
add
jno
movb
imul
rclb
pop
add
xchg
cmp
lods
inc
jne
and
pop
and
add
add
add
push
xor
icebp
addr16
sbb
fstps
xor
rorl
int3
and
add
test
notb
add
pop
rclb
mov
outsb
dec
rcr
and
aas
add
outsl
jmp
test
push
repnz
xchg
lds
inc
ror
and
mov
scas
addr16
push
cmp
push
mov
aam
dec
mov
push
pop
loopne
or
ss
insb
sbb
mov
xchg
jmp
loop
shlb
outsl
loopne
les
mov
sub
out
push
jno
mov
jo
ret
cmpl
mov
inc
mov
add
or
inc
mov
adc
dec
mov
imul
mov
sub
or
ljmp
cld
cmpsb
mov
mov
popa
mov
add
sub
leave
fdiv
enter
fcoml
dec
sbbb
enter
push
mov
movsb
push
fisttpl
fsts
fldt
sub
mov
mov
cli
rolb
jb
aas
xchg
adc
in
inc
lea
loopne
jp
stos
jo
push
xor
mov
adc
iret
pop
cmpsb
adc
and
push
adc
addb
das
adc
ss
adc
mov
gs
dec
xchg
pop
out
sbb
cmp
adc
mov
ficompl
out
inc
ret
cmp
mov
iret
mov
sub
adc
enter
jmp
push
jecxz
rorl
les
or
lods
sbb
movsb
cltd
cmp
push
dec
popf
push
pushf
mov
inc
stos
repnz
clc
das
mov
xor
aam
inc
xor
add
inc
inc
sub
pop
adc
mov
add
dec
adc
orb
mov
and
jp
enter
gs
dec
je
rcrl
or
sub
dec
repnz
push
lock
sbb
mov
pop
push
add
add
and
sti
inc
push
test
mov
adc
arpl
testl
pop
cmp
jae
dec
sbb
mov
and
lret
jl
or
pop
subb
jmp
shll
test
inc
int3
xor
aam
add
sub
pop
xchg
or
push
int3
clc
and
jmp
add
jb
inc
stos
mov
gs
stos
mov
fmull
sub
add
addr16
out
cmp
sbb
cld
jmp
out
pop
pop
cmp
or
in
stc
pop
push
frstor
int3
jl
xor
and
scas
sbb
add
xchg
std
ret
sub
fldcw
push
insb
sti
dec
inc
cmp
or
mov
fcoml
pop
push
jge
mov
adc
adcb
cmpsl
jecxz
and
pop
addl
test
mov
jne
or
or
test
je
pop
sbb
push
int3
ljmp
jne
ficomps
dec
loopne
sbb
sub
pop
pop
lcall
sbb
adc
adc
movsb
and
loope
push
push
sbb
sbb
sub
mov
vprotd
inc
ficoml
mov
fisubs
fwait
adc
sub
sbb
loope
jnp
cli
mov
lock
lret
inc
xchg
xor
lock
push
push
and
fimull
xchg
push
cmpsb
dec
jl
enter
and
ljmp
shrb
push
push
imul
and
dec
sbb
pusha
push
sub
sub
mov
lea
inc
or
pop
push
pop
js
ret
cld
inc
and
fdivp
mov
pop
mov
push
push
pop
aam
xor
add
fidivrs
scas
in
or
xchg
jno
repz
adc
daa
sub
mov
sbb
ss
adc
xchg
cmc
test
lock
or
mov
negl
add
divb
insb
sub
xor
pop
rorl
aad
cmpsl
jp
cmp
push
bound
sbb
jmp
xor
sbb
insl
sbb
add
mov
or
xor
mov
imul
pop
sbb
sub
dec
shrb
mov
cmp
mov
push
xchg
or
rsqrtps
xor
and
fldt
or
rcrl
pusha
mov
pop
sub
mov
push
out
inc
pushf
cmp
cmp
test
je
xchg
fists
call
push
lock
fcoms
popf
repnz
jmp
adc
pushf
idivb
jne
add
sbbl
fnstcw
roll
dec
add
lret
jns
adc
aas
addr16
sub
push
ror
in
cmp
inc
mov
sbb
sub
out
xchg
pusha
inc
dec
and
inc
cmp
dec
cmpsl
jl
rcrl
jp
xchg
sahf
mov
or
les
mov
or
adc
cmpsl
push
fildll
scas
adc
sub
cmpl
or
inc
mov
scas
test
push
lret
adcb
aaa
stc
loopne
shrb
mov
cmp
pop
push
ja
fwait
dec
ss
arpl
or
addb
push
lds
sti
adc
adc
test
mov
ds
cmp
ds
push
vpcmpeqw
or
xchg
cmp
jecxz
mov
dec
movb
ret
daa
cmp
jbe
dec
mov
xlat
and
aad
jns
cmp
sarb
push
cmc
flds
pop
sbb
bound
call
jecxz
in
mov
out
sub
mov
or
inc
int3
add
or
bound
lea
push
xor
push
rol
xchg
je
add
push
fstpl
adc
mov
pop
mov
inc
add
xchg
jmp
adc
dec
aam
push
jae
xor
es
loopne
dec
enter
daa
add
dec
push
addb
jecxz
mov
add
dec
pusha
fisttps
out
xchg
andb
fdivrl
shll
dec
clc
daa
shll
cs
add
loope
cld
xchg
pop
popa
clc
or
and
pusha
jg
sbb
rolb
adc
xorb
push
xchg
ficoml
pusha
push
lea
and
push
test
lcall
xchg
cli
cmp
out
clc
xor
bound
addr16
cmc
sbb
sbb
push
mov
pop
and
fs
jmp
lods
lods
rolb
int
stc
mov
sub
cld
pop
iret
jp
xchg
cmc
scas
fdiv
and
sub
mov
xchg
enter
and
add
idivl
pop
xchg
add
fcomps
rcl
or
add
add
add
dec
loopne
hlt
rcrl
xchg
or
jb
mov
aas
lret
int3
data16
add
ja
sbb
inc
or
sbb
testb
inc
call
cmpb
js
aam
add
inc
sub
inc
daa
push
in
add
or
push
mov
xor
aaa
sbb
push
daa
les
xor
and
push
pop
leave
pop
mov
mov
sbb
and
push
dec
xor
or
add
push
mov
mov
es
rorb
mov
lock
jbe
jle
dec
xor
mov
or
dec
and
mov
popf
sbb
aaa
rcrb
jne
xchg
pop
loope
ret
xchg
out
lret
and
and
shll
out
les
or
mov
dec
xchg
ljmp
xchg
dec
mov
add
pop
mov
xchg
push
repnz
aad
fwait
stos
push
cmpsb
sahf
and
push
ret
or
test
les
push
dec
jl
jecxz
es
and
imul
cmp
inc
pop
inc
xchg
mov
mov
xor
bound
dec
cmp
push
sbb
movsb
xchg
pop
pop
dec
addr16
mov
and
mov
test
mov
add
jae
popf
adc
sub
roll
or
sbb
sbb
adc
or
in
testl
movsl
pop
mov
jp
sub
jb
mov
mov
scas
push
cmp
ja
ja
aad
roll
roll
push
rcrl
scas
int3
mov
leave
or
cmpl
and
pop
fwait
add
rolb
and
cli
test
paddq
jb
rol
in
sub
xor
shll
pop
lds
adcl
and
dec
mov
adcl
imul
mov
data16
and
sbb
push
cmp
and
pop
movl
pop
mov
and
and
lret
sbb
sub
pop
int3
adc
cmp
sbb
leave
inc
xorl
or
mov
ljmp
pusha
outsb
jecxz
gs
loopne
pop
fcoml
lahf
inc
pop
bound
test
mov
inc
mov
sub
xor
xchg
pop
xor
movsl
rclb
test
cmp
dec
test
inc
xor
and
mov
inc
mov
sbb
inc
mov
xor
fdivs
or
jl
rol
lret
mov
js
push
out
push
sbb
or
and
sahf
xchg
aam
or
push
and
and
mov
lea
sbb
sbb
insl
add
xchg
in
inc
dec
hlt
out
loopne
dec
sub
pop
ljmp
mov
push
inc
push
stc
sub
xchg
ret
sub
test
push
add
xor
das
jmp
push
and
faddl
out
pop
repnz
cmp
call
inc
outsl
or
dec
jg
filds
dec
ss
loop
pop
add
and
rorl
cld
fldt
add
sbb
mov
xorb
add
outsb
push
adcb
clc
outsb
inc
lds
test
sbb
loope
fwait
push
adc
nop
into
fsubr
fistl
sbb
xor
movsb
xchg
test
push
dec
lock
dec
test
adc
out
punpckhbw
addl
push
cwtl
jae
fldcw
decb
and
mov
mov
add
add
xor
pushf
add
loope
inc
jl
add
js
push
loop
push
pop
lret
movsb
ss
ja
pop
add
imul
mov
jg
add
fsts
cmp
adc
xchg
adc
test
jb
mov
sub
push
jno
lahf
dec
loope
xchg
sub
add
mov
ljmp
dec
in
insl
jo
lods
push
outsb
add
pop
loop
inc
fs
xor
sahf
call
adc
into
test
add
add
sub
pop
clc
add
pop
lahf
enter
xor
fdivrp
mov
add
add
shll
aam
and
sbb
mov
inc
subb
xor
shr
push
les
mov
insl
cld
dec
jle
hlt
mov
xchg
pop
and
repz
and
push
cmp
das
les
sbb
addl
or
stos
pop
or
push
mov
cmpsl
xchg
fcomip
mov
xchg
push
sbb
pop
stos
or
idivb
iret
push
adc
xor
xchg
cwtl
add
jge
daa
js
popa
or
andl
sbb
inc
fadd
mov
ja
xor
add
sbb
push
push
mov
pop
jae
add
in
push
sbb
call
das
inc
and
repnz
add
and
add
mov
push
stos
dec
xor
fstpt
shll
pop
add
inc
mov
je
sbb
mov
adc
jmp
mov
loopne
sbb
mov
push
pop
scas
ja
js
push
push
rolb
xor
loopne
clc
addr16
sbb
mov
adc
jg
mov
add
jnp
and
test
or
mov
addr16
xchg
dec
pop
add
push
popa
mov
lock
push
subl
or
shr
jbe
scas
out
scas
and
addb
cmpsl
mov
mov
push
xor
rolb
and
and
adc
jae
mov
and
cwtl
test
cmp
push
aam
or
mov
adc
mov
mov
loop
stos
or
popa
movaps
out
cmp
cli
sub
dec
xor
ret
stos
push
mov
or
and
sbb
mov
rolb
fwait
cmp
xchg
inc
add
out
addr16
or
xchg
mov
jne
add
and
pop
rorl
xor
fwait
sti
xchg
int
jo
pop
std
pop
adc
or
pop
das
ss
inc
or
dec
mov
push
stos
and
adc
subb
lret
push
inc
xor
push
int3
and
sub
or
add
aad
dec
rcl
add
ret
cs
scas
inc
stos
pop
adc
add
out
fldt
adc
xchg
push
fs
pusha
mov
sbb
andb
or
clc
incl
cmp
pop
and
xchg
aas
inc
int
test
rcr
adc
rorb
push
add
adc
add
test
add
lods
call
mov
or
mov
add
xor
sbb
dec
lea
pcmpeqw
add
xchg
lret
pop
xor
mov
roll
mov
ret
add
rclb
lret
movsl
or
addl
clc
hlt
pop
clc
sti
sbb
ljmp
add
add
mov
and
lock
inc
fcomps
xchg
cld
mov
std
or
shl
cmp
or
loopne
ja
fidivs
inc
xchg
pop
xor
rolb
and
ret
push
jbe
les
add
adc
stos
sbb
fs
or
xchg
inc
rclb
lret
add
test
gs
and
push
push
mov
inc
dec
mov
mov
xor
cmp
dec
dec
iret
daa
fidivrs
mov
xchg
stos
jge
pop
xor
pop
mov
call
jl
repnz
repnz
les
mov
repnz
mov
push
es
cmp
jae
pushf
mov
clc
dec
imul
add
sbbb
shr
jno
mov
cmpsb
aam
adc
add
cmpsb
pop
int
inc
pop
add
cmp
testb
sbb
outsb
pop
xchg
rorl
icebp
fsubl
dec
sub
push
icebp
in
sti
sbb
mov
mov
add
cmp
mov
loop
or
jg
sub
mov
or
and
fstpl
insl
pushf
mov
nop
cltd
jb
xor
push
hlt
or
popf
push
mov
pop
out
testl
loope
addl
mov
in
es
pop
add
jmp
cmp
sbb
push
push
xchg
loop
cmp
or
leave
push
loope
adc
mov
fildl
sbbl
pop
fimull
push
jl
dec
in
pushf
add
sbb
aad
mov
xor
outsb
add
xchg
mov
xchg
mov
enter
push
or
or
imul
push
sub
testl
mov
cmp
jmp
pop
dec
jae
out
out
pop
fbstp
xor
mov
ss
xor
bound
push
pop
sbb
mov
mov
mov
inc
xor
pop
pop
cmp
popa
pop
cld
icebp
loopne
inc
mov
je
addb
or
pusha
in
xchg
test
outsl
jmp
loopne
and
ljmp
mov
add
push
jno
bswap
xor
push
lock
xchg
pusha
ficoms
test
pop
mov
dec
xchg
pop
add
mov
sbb
arpl
and
add
js
movsl
push
mov
jmp
jo
dec
jbe,pt
push
int
xor
add
js
mov
add
add
test
inc
mov
repz
or
test
iret
inc
sbb
add
or
xor
fnstcw
add
jp
mov
cmp
ret
push
push
adc
repnz
dec
inc
xor
dec
add
adc
jo
cwtl
loope
es
push
das
mov
cwtl
shlb
push
rcll
iret
xor
or
lock
pop
inc
dec
mov
add
mov
sbb
nop
or
sbb
push
pop
pushf
sbb
pop
cltd
dec
cmp
push
mov
inc
das
jp
push
inc
and
cmp
sub
jge
adc
movsl
aaa
inc
sbb
mov
pusha
ss
fsts
cwtl
adc
xchg
mov
outsl
adc
mov
adc
xchg
add
cwtl
adc
xor
xor
inc
add
rep
loopne
adc
loopne
inc
imul
pusha
mov
xor
inc
repz
addb
dec
jl
cmpsb
mov
jae
xchg
clc
jae
jp
or
xchg
ljmp
aaa
jmp
lds
dec
mov
mov
loope
hlt
push
adc
fists
rolb
and
out
aas
jnp
sahf
adcl
add
test
pushl
or
shr
sarl
clc
add
jmp
jle
sahf
push
push
pop
push
loopne
mov
notb
xor
les
xlat
movsb
inc
xor
rclb
sti
xchg
push
adc
into
jp
in
sub
jbe
cmp
xchg
pavgw
pop
or
lods
cltd
popa
dec
and
xor
and
iret
roll
je
add
sub
clc
adc
mov
loope
inc
loopne
fdivl
xor
ja
add
push
xor
xor
mov
xor
popa
nop
test
test
hlt
mov
hlt
and
js
jnp
loop
dec
or
lret
shrb
pushf
inc
add
ljmp
fadds
test
je
ret
arpl
adc
pop
mov
loop
loopne
or
xchg
pop
lea
sbb
adc
adc
xorb
jns
std
stc
test
jbe
pop
add
adc
mov
cmp
cmpsl
repz
leave
add
adcb
lahf
movsl
sbb
orl
sbb
xchg
ss
jge
les
imul
or
push
icebp
pop
mov
push
outsl
cmp
dec
nop
std
pusha
push
pushf
mov
sbbl
jecxz
jecxz
inc
push
add
push
lret
stos
push
incb
inc
fs
ja
xor
jp
dec
lcall
sbb
add
iret
or
ret
adc
sub
dec
inc
cmp
scas
xchg
inc
cmp
xchg
cltd
lcall
into
and
std
push
mov
mov
fidivs
xor
dec
stos
sahf
xorl
sbb
or
loopne
push
cmc
outsb
xor
cmc
cmp
sti
adc
nop
and
inc
jg
xchg
add
and
icebp
sbb
into
xchg
sti
adc
xor
inc
mov
mov
xchg
or
andb
or
cmp
add
push
rcll
or
je
das
add
cmpl
jbe
pop
xor
push
or
add
stos
lods
arpl
stc
sbb
or
or
aam
stc
or
nop
cmp
call
loop
test
cli
leave
lea
fnstenv
mov
stc
movsl
pop
jo
scas
jb
adc
sub
push
cld
mov
push
sub
lea
mov
loopne
add
cmp
cwtl
inc
lock
add
in
jl
ja
arpl
xor
mull
call
aaa
cmp
scas
fiaddl
aas
sti
adc
dec
pop
xchg
mov
ljmp
out
inc
mov
mov
jmp
and
adc
dec
js
mov
jb
repnz
xlat
aaa
cmp
dec
mov
adc
cmp
test
inc
adc
mov
pushf
ss
mov
pop
inc
jno
addr16
cmp
adc
jbe
shrl
into
push
push
xchg
loopne
jmp
les
mov
mov
fdivr
adc
imul
in
xlat
push
and
adc
push
das
roll
stos
sbb
adc
repz
or
sarl
xlat
cwtl
inc
popf
mov
or
pop
repnz
xchg
shll
or
pushf
push
mov
mov
stos
adc
dec
test
xchg
addr16
pop
xor
test
lock
jle
rcl
xchg
out
mov
repz
xor
mov
mov
mov
adc
dec
mov
add
or
rorb
jle
push
adc
dec
fcoms
cmp
cmp
outsb
add
pop
repz
out
push
je
sub
popa
xor
jno
ret
sub
cli
adc
mov
ret
jb
lret
and
mov
pusha
cli
in
add
mov
and
jle
in
loope
mov
add
mov
push
xlat
inc
sub
add
js
inc
xor
outsb
mov
ljmp
and
xlat
jmp
jns
or
pop
jle
mov
dec
pop
jle
pop
scas
sub
mov
or
adc
or
lods
lret
push
jbe
inc
les
int3
cmp
addl
pop
push
stos
andb
add
jb
mov
inc
out
mov
imulb
jb
inc
cmp
loope
xor
adc
pop
mov
add
jno
adc
into
push
loopne
nop
cmp
or
xchg
jge
inc
mov
or
out
mov
add
cmpsl
push
nop
xchg
js
jb
test
push
pusha
mov
cs
and
hlt
push
out
adc
mov
sqrtps
in
push
adc
dec
jp
cmpsb
add
aas
sbb
loopne
cs
fsts
lret
rcll
je
inc
jge
das
imul
lcall
addb
in
or
add
mov
data16
es
add
push
idivl
push
add
adc
icebp
jb
mov
push
int
adc
cld
push
pop
inc
and
pop
mov
loopne
in
movsb
push
cld
push
xchg
add
pop
dec
dec
inc
cli
insl
sti
pop
negb
adc
or
fwait
cmp
mov
mov
jmp
adc
push
push
in
push
add
and
shll
cmp
jl
and
xor
cmp
loope
iret
adc
and
jnp
or
rcr
mov
xchg
cmc
ficompl
stc
adc
jmp
loope
filds
dec
push
mov
cli
inc
pop
push
add
sub
sbb
and
sahf
pusha
divb
push
jns
shll
add
shrl
data16
scas
div
mov
or
add
out
cmp
incl
or
in
aas
adc
adc
lock
or
cwtl
sarb
ss
push
sub
adc
xchg
xor
lcall
inc
sub
or
in
mov
ret
cmp
xor
adc
cltd
call
syscall
xchg
dec
imul
or
inc
fabs
pop
test
test
lahf
jnp
test
mov
movsb
sbb
xchg
mov
push
inc
loopne
shlb
mov
jne
or
test
cli
andb
dec
sub
add
xor
mov
jae
shrl
adc
pusha
inc
fidivl
xchg
jae
push
lock
sbb
jne
jge
sub
lods
or
repz
add
ljmp
jmp
lods
pop
fs
into
shlb
rcr
cld
shl
popf
pop
sbb
xchg
add
jo
push
push
ret
inc
loop
or
xchg
mov
and
fnstsw
sub
dec
lds
andb
out
push
add
out
sbb
push
pop
lret
ja
outsl
add
add
sbb
xor
push
add
lret
mov
mov
dec
xor
and
popf
add
jecxz
sbb
add
cmp
mov
xchg
or
sub
or
outsl
mov
ret
add
pusha
xor
jae
add
mov
sbb
push
scas
jo
sahf
inc
mov
add
adc
stos
ss
rcrb
or
sbb
jns
pop
and
and
sub
or
mov
mov
cld
add
stc
or
xchg
test
shrb
add
loope
inc
in
test
test
arpl
and
fisttpl
aaa
std
fwait
insb
ljmp
rclb
mov
sbbb
jecxz
insb
ret
inc
jle
cmp
or
sbb
add
mov
lds
test
punpckhbw
imul
xchg
insl
mov
or
jmp
lock
push
pop
mov
inc
sti
mov
hlt
adc
push
xor
mov
mov
loop
lods
adc
pop
cli
mov
push
jnp
mov
or
xchg
das
push
lods
add
inc
add
and
js
mov
ret
dec
lods
xchg
push
adcb
xchg
movaps
xorb
push
mov
push
movb
popl
push
or
or
stos
mov
sub
sub
cmp
fdivrl
faddl
sbb
or
adc
aam
dec
lds
pop
mov
mov
pop
xor
push
jle
ds
push
or
in
sub
inc
ret
popa
xchg
cmp
sub
xor
in
mov
and
mov
insb
mov
adcb
and
add
xchg
xchg
orb
pop
repz
jb
xchg
lcall
xlat
test
jne
aam
rcrb
rol
inc
test
push
lahf
push
fcoml
push
popf
push
sbb
sub
add
fadds
sub
sub
call
into
stc
jmp
cmp
xchg
out
imul
or
cld
mov
mov
pushf
adc
test
add
sub
cli
mov
stos
mov
pop
stc
js
test
loop
fisubrs
shrl
mov
dec
or
or
push
das
in
adc
gs
adc
in
push
mov
leave
or
call
adc
popf
xchg
test
ljmp
loop
loopne
jecxz
xchg
pop
repnz
into
icebp
sub
shrl
adc
mov
pop
push
xchg
xchg
test
inc
xchg
sbbb
repnz
cld
sarb
stos
loope
dec
or
loopne
and
bound
add
pop
cmp
in
jge
add
icebp
or
or
movsb
sbb
mov
and
or
es
sub
hlt
les
loop
mov
rcr
add
adc
push
aas
adc
out
add
mov
ret
jg
push
mov
test
jmp
ljmp
orl
lock
cmp
test
jbe
adc
icebp
rcrl
loopne
sbb
xchg
dec
dec
imul
jge
push
mov
adc
jecxz
mov
sbb
xor
rcl
push
dec
mov
adc
pushfw
das
orb
add
inc
out
lcall
sbb
xor
inc
xor
mov
and
pop
std
jecxz
xlat
and
ss
fldt
sub
les
mov
mov
mov
sub
push
cmpsl
cmp
push
lea
sahf
addr16
pop
push
test
adc
cmp
insb
or
dec
inc
fldenv
jp
push
or
cli
push
pop
push
dec
nop
and
xor
add
add
dec
push
loope
add
or
lcall
add
xor
dec
dec
cmc
into
jle
or
in
test
test
push
sti
push
enter
push
mov
jno
sti
add
pop
sbb
jo
inc
sbb
mov
xchg
sbb
mov
hlt
sbb
dec
or
dec
insl
or
dec
push
xchg
lock
ret
xchg
test
push
cmp
mov
out
mov
aam
andl
mov
mov
and
pop
aam
sub
ss
add
jns
mov
lods
fidivl
daa
lock
mov
sub
pop
leave
adc
ds
hlt
xor
xor
and
push
inc
nop
ret
shrl
stos
hlt
sbb
push
repnz
test
and
or
mov
ja
aad
in
mov
outsb
aad
cmp
or
xchg
sbbl
aam
sbb
xchg
jl
cwtl
cs
or
or
inc
adc
dec
dec
xchg
mov
or
test
shr
insl
push
dec
rcrl
and
jmp
stos
fimuls
jl
das
arpl
sbb
push
add
add
mov
dec
lea
int
xor
sub
fs
or
cmp
inc
inc
add
dec
es
mov
inc
mov
push
sub
inc
popf
xor
push
rolb
movl
cmp
sbb
pop
or
push
push
lahf
fstp
and
xchg
cwtl
pop
add
mov
arpl
push
mov
pushf
arpl
sub
adc
test
cwtl
in
outsb
outsb
cmp
arpl
dec
loope
imul
bound
les
jbe
aam
xor
pop
arpl
aam
mov
sbb
enter
sub
adc
shlb
fdivs
lcall
push
xor
pusha
inc
jge
add
test
sub
bound
dec
outsb
adc
hlt
in
sub
jns
dec
stos
data16
sub
inc
and
movsl
ret
sub
ljmp
sahf
add
repz
subb
pop
or
and
adc
arpl
int3
outsl
cmp
pop
sub
xor
push
mov
sub
mov
dec
add
lock
daa
add
pop
and
mov
sub
xchg
mov
or
or
inc
cmp
add
add
and
adc
push
push
or
shlb
ficoml
xor
mov
sbb
xchg
sbb
sahf
andb
add
inc
sub
lods
test
xor
adc
mov
or
mov
into
dec
addl
mov
jmp
or
and
xchg
mov
in
dec
inc
dec
or
hlt
push
and
test
loope
dec
push
dec
mov
add
bound
pop
inc
adc
aaa
dec
mov
fnstenv
jo
mov
outsb
add
lret
fcomps
pushf
adc
pusha
int
mov
movsb
or
and
mov
sub
mov
cmc
add
aam
subl
add
and
into
mov
mov
leave
cwtl
mov
int3
enter
dec
adc
push
add
jo
cwtl
les
es
inc
adc
adc
sbb
dec
fimuls
xchg
movsb
or
lock
sub
rcll
loop
push
scas
cld
or
subb
fs
loop
sbb
pop
mov
or
stos
dec
faddp
jmp
cmp
cs
jmp
aad
push
xchg
dec
sub
ss
ljmp
lret
stos
jl
cmp
pop
cmpsl
aam
and
or
or
inc
les
mov
jbe
cld
imul
enter
scas
push
lock
test
aad
pop
pop
jo
push
push
push
xor
scas
roll
pop
fldl
push
ja
out
add
cld
out
popa
inc
outsb
push
dec
sahf
adc
ret
imul
or
adc
or
sub
jno
push
mov
test
jnp
rolb
sbb
jo
sbb
jle
sbb
jle
vmread
push
or
and
lcall
push
adc
or
or
les
test
adc
inc
sbb
sbb
loopne
dec
inc
add
lock
mov
mov
xor
push
dec
jl
pusha
jo
mov
push
sbbl
aad
mov
adc
mov
test
jne
pop
shrb
dec
test
or
cmc
xchg
fs
pop
pop
mov
rorl
push
jmp
jbe
add
mov
mov
sub
xor
add
ja
in
fmuls
aaa
enter
xor
mov
jmp
ret
sub
pop
fwait
mov
lea
inc
lret
jo
adc
sub
cwtl
push
mov
cmp
add
lods
addl
fdivs
push
and
nop
call
xor
dec
mov
mov
repz
aad
ljmp
sub
lret
xor
xor
add
sarl
jp
ja
stos
out
loop
add
add
adc
pop
jno
daa
bndstx
push
mov
xchg
mov
sahf
mov
orb
repnz
adc
mov
push
mov
dec
inc
or
push
cmp
xor
cmp
adc
jmp
pop
test
and
mov
mov
add
rorb
cmpsl
jae
sbb
adc
cmp
lret
or
or
adc
pop
add
data16
mov
sbb
sbb
icebp
aam
adc
cwtl
add
jmp
out
insb
mov
lret
push
fsubl
into
pop
push
lock
xor
sbb
jl
sbb
push
add
stos
aaa
js
mov
sarl
stos
fnstsw
and
ret
testl
mov
inc
rcrb
inc
cmove
jo
mov
sub
cmpsb
push
push
cmpsl
cmp
and
ljmp
xor
aad
jae
adc
fcomps
xor
xchg
add
inc
mov
cmp
test
pop
fcomps
push
mov
or
cli
test
jb
sbb
stos
addr16
xchg
imul
loopne
lds
repz
adc
jecxz
push
dec
js
gs
pop
sub
push
popa
popa
aad
rclb
jmp
fs
mov
and
add
add
push
into
push
or
or
cmp
int
mov
push
stos
adcb
and
and
sbb
dec
mov
mov
push
sbb
or
add
popf
mov
sbb
movntq
sbb
cmp
lcall
sti
and
in
mov
test
pop
mov
xchg
in
sub
sub
mov
pop
das
ret
inc
mov
fwait
xor
mov
add
or
nop
shl
lcall
je
dec
shrl
adc
mov
cmp
ficoms
shlb
ret
loop
xor
jmp
xchg
and
xor
xor
sahf
xor
icebp
adc
add
xor
testb
xchg
data16
jbe
xor
add
js
into
test
inc
mov
adc
insl
pop
cmc
or
cmp
dec
xor
sbb
inc
lock
add
or
mov
fisubl
sub
lods
adc
mov
aaa
cmpsl
enter
xchg
or
push
mov
or
or
out
in
jne
int
cmp
subb
stc
out
mov
ffreep
pusha
pop
push
int3
loopne
lahf
jmp
mov
sbb
adc
add
mov
sahf
add
mov
aam
xor
ljmp
and
xchg
loopne
push
mov
sub
fnstcw
jg
nop
push
jge
cmp
cwtl
lds
testl
lahf
adc
add
rcrl
lret
lret
xorb
xor
mov
xchg
dec
data16
push
sbb
leave
test
push
int3
dec
test
xchg
lock
inc
mov
and
push
mov
cmp
and
add
pop
inc
in
inc
enter
mov
hlt
adc
lods
xorl
and
test
loop
mov
inc
push
jne
xchg
add
orl
mov
clc
lds
call
iret
std
dec
sahf
test
jb
cmp
aam
cmp
imul
jmp
xor
adc
cmpsb
add
test
aaa
sub
adc
fcoml
push
jecxz
add
add
push
in
bound
and
fbld
or
arpl
dec
adc
mov
mov
or
cld
jl
sbb
nop
int
adc
dec
add
sbb
bound
pop
and
mov
inc
mov
out
popf
push
adc
jno
out
shlb
out
stos
orb
pop
fwait
sbb
add
stos
test
inc
bound
pop
prefetchw
test
roll
lds
rcrb
xchg
inc
shr
mov
add
or
sbb
push
xchg
push
dec
orb
push
add
and
cwtl
sbbl
negl
jbe
and
mov
cwtl
jo
push
icebp
idivl
pop
gs
ret
mov
push
lock
sbb
outsl
jge
adcl
add
sub
xorb
pop
pop
dec
mov
cwtl
inc
add
js
adc
ret
inc
add
xchg
xchg
push
xchg
mov
ja
cmpsl
pop
pop
pop
leave
ret
cmpsb
pushf
mov
dec
cmpsb
add
or
mov
mov
and
cmpsb
mov
mov
out
repnz
popa
mov
or
mov
push
and
xchg
and
test
or
xor
add
adc
xlat
cmp
adc
add
notb
mov
xchg
adc
or
or
and
jp
shlb
or
mov
insl
xchg
or
inc
imul
imul
inc
call
movsl
out
push
add
mov
subb
scas
sbb
mov
and
or
pop
jo
fistl
inc
imul
xchg
cmp
cmpsb
mov
sub
lahf
jl
and
adc
aam
popf
jo
pop
test
xchg
sub
xor
mov
and
mov
lea
insl
sub
stos
enter
ja
xchg
stos
insl
lods
xor
lcall
mov
inc
cmp
inc
gs
popa
andb
in
jae
gs
xor
push
scas
mov
test
mov
mov
or
push
scas
add
cmc
test
add
inc
rorb
iret
sub
mov
cmp
cmp
addb
dec
inc
fcmovnb
fcom
push
adc
sbb
jo
jae
inc
sbb
rcrb
sub
cmp
sbb
iret
xchg
ja
test
add
stos
fmuls
cmp
mov
js
jo
and
popf
push
pusha
adc
mov
ljmp
cmp
and
shl
int
daa
loop
scas
stc
scas
mov
aam
push
mov
out
and
rol
pop
and
xchg
leave
adc
xor
jl
das
imul
rcl
lret
push
mov
pop
lahf
inc
cmc
push
std
aam
shl
cmovle
clc
sbbb
add
sub
jmp
icebp
push
scas
or
sbbb
imull
xchg
fstp
push
stos
push
sub
pushf
add
inc
popa
push
sub
rcrb
sbb
inc
pop
sarl
adc
xor
jmp
cmp
pop
mov
add
adc
add
mov
dec
lock
and
mov
ljmp
cmp
enter
add
mov
cmp
inc
scas
add
or
sti
aam
add
inc
sbb
or
cmp
xor
outsb
bound
xchg
cmc
push
adc
insb
clc
pusha
push
push
test
or
dec
sub
scas
jl
sbb
xor
cmpsb
clc
mov
add
and
sub
mov
movsw
sbb
roll
cli
leave
andb
outsb
dec
sbb
sbb
mov
mov
jl
loopne
push
adc
in
dec
call
inc
or
mov
mov
stos
inc
dec
call
mov
movsl
xchg
jge
or
and
or
push
mov
fadds
daa
mov
and
test
outsl
stos
mov
and
in
and
rcl
call
or
add
inc
popa
push
clc
rcrb
xchg
stos
adc
aaa
call
pop
pop
loopne
clc
xor
push
sub
dec
or
push
orb
fdivs
fwait
mov
dec
in
test
adc
push
call
pusha
ror
out
push
or
push
inc
rorl
test
push
pop
add
pusha
or
or
push
in
mov
inc
popl
or
popa
xor
adc
sub
pusha
sub
dec
sub
adc
mov
inc
shll
in
lcall
sub
ret
movsl
decb
pop
movsb
insl
inc
divb
sub
fistpll
or
pop
lods
xchg
xchg
cmp
pop
inc
ds
inc
rcll
loopne
loop
xor
fldt
or
sub
call
sbb
leave
enter
mov
fisubl
adc
or
push
push
and
test
adcb
mov
aas
push
mov
push
pop
adc
push
xorl
pop
fs
or
lods
sub
sbb
mov
into
js
hlt
imul
add
dec
test
pop
adc
push
cltd
and
fs
lock
sub
mov
enter
pop
add
cmp
dec
add
stos
mov
add
pop
push
scas
adc
cmp
mov
pop
sub
cmpsl
sbb
es
mov
or
daa
mov
xor
rorl
pusha
mov
sarb
pop
cmp
gs
inc
xchg
dec
jo
xor
out
out
stos
push
jo
pop
push
xchg
pop
push
in
adc
scas
daa
es
into
inc
sub
lret
mov
testl
adc
push
xor
xchg
mov
sub
push
inc
xor
mov
jae
jno
push
cltd
test
fadds
outsb
jae
dec
xchg
mov
push
add
dec
cmp
mov
subb
jno
pop
jae
sti
insl
fcomps
ss
xor
shlb
sbb
movsl
subb
ljmp
bound
test
pusha
inc
ja
sub
cmp
nop
fs
cmp
lcall
inc
addb
xchg
popa
and
jo
jo
inc
int
inc
add
pop
mov
fs
pushf
cmp
add
mov
sub
fsubrs
mov
push
xor
mov
pop
lret
add
add
pop
bound
jge
sbb
sbb
push
sub
pop
push
add
mov
out
andl
adc
pop
das
test
es
xchg
cmp
sub
xchg
mov
cmp
enterw
daa
shl
lcall
addl
inc
daa
jae
aam
sub
mov
inc
bnd
push
in
mov
ret
loopne
sbb
pusha
enter
mov
sub
adc
in
stos
and
call
xor
cwtl
add
dec
in
repnz
mov
sbb
bound
test
push
cwtl
pushf
fistpl
inc
out
pushf
cld
test
sbb
inc
insl
jmp
aam
jae
loop
fwait
xchg
xor
enter
or
pushf
or
in
xorb
xlat
arpl
arpl
push
xor
lds
dec
test
mov
push
jp
arpl
add
fsubrs
jnp
jbe
bound
and
js
mov
push
data16
out
inc
xor
push
fsub
fnstsw
push
add
test
fsts
mov
jecxz
push
or
sbb
sbb
lret
xor
daa
daa
push
adc
mov
fs
inc
in
dec
ja
inc
push
push
lds
ja,pn
adc
pop
jo
clc
mov
loope
push
movsl
rcl
inc
into
adc
mov
push
imul
clc
push
cmp
add
sub
dec
pusha
aas
sti
subb
scas
sbb
jo
or
add
ja
mov
cltd
add
daa
ja
fs
xor
inc
sbb
cmpsl
cmpsb
sbb
push
add
fmuls
or
push
dec
out
mov
dec
add
sub
adc
add
imul
jl
shrl
xchg
dec
mov
daa
inc
in
adc
addb
shll
pop
scas
mov
jmp
push
or
jo
sarb
xlat
or
scas
pusha
or
cmp
xorl
push
push
shrl
int
jb
repz
mov
lretw
jmp
push
push
and
ljmp
stos
lcall
pop
ljmp
sbb
arpl
xchg
imul
mov
into
rorb
sbb
insl
out
add
out
mov
les
xchg
shll
rcrb
sub
lret
or
aaa
ds
and
sbb
sbb
mov
ljmp
xlat
mov
xor
or
jne
push
out
xor
clc
repz
or
decl
fisttpl
test
and
pushl
or
adc
das
inc
sbb
fnstsw
in
and
xor
pusha
or
xor
fndisi(8087
sub
lcall
lcall
les
mov
jmp
xor
test
sahf
loopne
jmp
test
push
push
push
addb
addb
pop
mov
inc
enter
inc
xchg
push
inc
cmpsl
xchg
jb
xor
lods
shll
in
add
test
or
fadd
loopne
mov
jnp
pusha
cwtl
ja
call
ds
pop
cmc
push
pop
pop
lcall
inc
jae
sti
lahf
pushf
and
add
cmpsb
pop
sbb
cmp
add
push
xor
push
pop
in
inc
jnp
dec
and
mov
scas
or
jo
movsb
mov
insl
mov
andb
int
cmpsl
adc
adc
sbb
or
rolb
loope
inc
cmpsb
stos
and
insb
add
xor
push
test
mov
lods
xor
inc
cmp
lcall
add
sbb
sbb
popa
adc
aam
loopne
mov
push
xchg
dec
insb
push
daa
icebp
and
fiaddl
sbb
push
mov
repnz
inc
xchg
mov
xchg
xor
sub
mov
in
shl
test
mov
adc
inc
enter
data16
push
in
and
stos
push
lock
stos
pop
ja
mov
pop
mov
lret
and
stc
adc
cmp
stos
inc
jg
sbb
jo
fld
mov
aam
jg,pn
push
aam
cmp
fsubr
jecxz
mov
loope
ret
add
mov
push
fstpt
dec
adcl
add
pop
push
rcl
popf
add
shrl
test
mov
and
push
fdivl
sub
push
scas
ret
add
imul
push
dec
fwait
addb
shrl
repnz
mov
in
jmp
or
sub
fsubrs
pop
xchg
mov
pop
push
scas
aaa
jecxz
jmp
jmp
or
iret
adc
xlat
mov
cmp
inc
leave
loop
or
bound
sarb
in
xchg
fildll
imul
mov
rolb
lcall
adc
cmpsb
repnz
xor
jae
mov
pop
imul
js
xor
xchg
stos
cmp
inc
std
add
sbb
pushf
push
incb
mov
xor
mov
shlb
add
daa
pop
push
cmpsb
pop
xchg
sbb
loope
loopne
stos
pop
imul
ret
pop
in
inc
cmpsb
scas
cltd
ds
or
inc
pop
movsl
or
pop
js
jno
lret
adc
pop
lods
sbb
ret
sub
ret
pop
ret
or
hlt
adc
outsl
cmp
pop
xchg
into
loopne
call
pop
loope
push
out
inc
iret
imul
mov
mov
xchg
pop
inc
xlat
inc
mov
out
jo
add
call
cwtl
jb
cmp
int3
mov
ror
sbb
mov
jae
ljmp
or
pop
cmpsl
pushf
insb
call
and
roll
dec
cmp
ret
test
pop
xchg
add
stos
pop
fbstp
ljmp
xchg
test
xorb
jge
sbb
rcrl
pusha
test
test
cmpsl
rcl
lcall
call
cmp
stos
and
xorb
ret
pop
xor
out
inc
mov
jae
scas
cltd
dec
es
fwait
test
lret
push
outsl
sbb
push
xlat
dec
xchg
push
jmp
je
push
daa
mov
mov
and
jle
sub
pop
cs
add
daa
pop
dec
in
test
stos
imul
mov
adc
out
dec
sbb
sarb
shr
and
mov
push
mov
sti
cmpsb
push
push
sbb
mov
cmp
gs
pop
cli
cmpsb
out
xchg
out
cmp
add
in
lock
sub
stos
mov
xor
jno
loop
ret
jbe
int
popa
stos
adc
jne
ds
imul
pop
divb
xchg
sbb
ljmp
addb
sub
imulb
cmp
sub
addr16
mov
aad
js
nop
sub
or
test
push
repnz
mov
push
xor
nop
insb
mov
push
push
adc
rcrb
and
or
lea
cmp
aam
cmpl
add
sbb
test
pop
mov
push
mov
fists
dec
pusha
add
sub
xor
mov
adc
sbb
aad
and
fcoms
mov
clc
inc
xchg
add
add
pop
add
and
mov
cwtl
add
mov
add
mov
addl
mov
jge
adc
stos
outsb
cmp
test
push
clc
jg
dec
sarl
hlt
cli
enter
adc
mov
or
and
in
xchg
call
rcrl
ja
add
lret
xor
sbb
cmp
andb
adc
push
add
andl
adc
xor
lcall
enter
sbb
sub
lret
xchg
and
stc
jle
aad
cmpsl
lcall
sbb
and
dec
mov
insl
and
pop
pop
xor
andb
mov
push
dec
gs
inc
scas
mov
stc
insb
stos
xor
push
inc
push
pop
hlt
mov
push
jae
inc
enter
add
ja
in
ret
sub
enter
and
daa
pop
cmp
jp
int
xchg
mov
repz
pusha
ljmp
aam
lods
sbb
mov
sbb
or
aad
stos
add
popf
faddl
popf
jo
pop
xchg
movsl
pop
nop
stos
sub
jp
and
out
loope
test
jmp
jl
sbb
hlt
pop
push
sahf
add
es
push
pop
pop
jnp
dec
xorb
fbstp
pop
xchg
lea
push
pop
add
imul
mov
and
mov
cmpb
inc
bound
mov
les
or
inc
cli
movsl
adc
sbbl
add
out
aam
test
jbe
push
or
sub
mov
aad
sbb
enter
fs
rcrb
push
or
add
and
ret
sub
pop
rolb
lods
frstor
sub
aaa
aam
sahf
rorb
inc
ljmp
adc
inc
scas
dec
sarb
xchg
or
sbb
inc
stos
popa
and
out
cmpsb
ds
cmp
scas
push
mov
loope
stos
sti
pop
ja
push
jecxz
xchg
icebp
xchg
mov
or
push
push
in
inc
mov
inc
fiadds
sti
mov
stos
xor
clc
sbb
shl
sbb
cmp
and
popa
and
adc
jo
lret
cmp
lock
xchg
in
sub
fisubl
sub
push
cli
sub
cltd
push
adc
sbb
cs
movsl
lcall
jle
movsl
jp
push
sbb
adc
hlt
jo
jo
xchg
mov
mov
adc
cltd
push
cld
pmullw
or
sbb
movsb
faddl
lcall
addb
cs
push
fwait
add
testl
shrb
data16
mov
rcrl
push
jmp
es
lret
frstor
xchg
jae
in
fstpt
sbb
mov
add
push
lret
add
filds
in
repnz
xchg
jp
or
subl
stos
add
sub
iret
subb
icebp
sub
adc
adc
dec
es
js
dec
int3
lds
insb
push
jne
daa
or
out
movsl
cs
icebp
les
dec
xchg
rclb
jo
ficoml
mov
inc
aas
jne
or
pusha
push
jmp
in
shld
idiv
mov
call
add
jge
in
orl
popa
push
insb
icebp
daa
movsl
iret
adc
adc
push
test
mulb
push
dec
jmp
push
jno
es
jle
and
dec
hlt
pop
sub
or
ret
pusha
push
add
and
cmpsb
jge
addl
push
popf
cs
mov
dec
in
loopne
mov
push
pop
pop
inc
sar
or
adc
xor
add
or
or
sub
mov
xor
inc
xor
mov
sbb
test
inc
or
mov
mov
shlb
add
sbb
mov
dec
test
movsb
sbb
inc
test
add
inc
and
loopne
xchg
clc
dec
mov
lcall
fdivr
pop
or
xor
xor
add
incl
mov
jle
push
jbe
sti
pop
add
xor
stos
lock
xchg
jecxz
xchg
pop
lea
jmp
inc
mov
enter
sub
cmp
cmp
dec
mov
push
push
mov
sbb
adc
add
cmp
jmp
jno
movsl
jo
sti
fldenv
cld
dec
push
pop
es
push
and
popa
dec
push
cltd
jb
mov
mov
loop
sbb
stos
add
lret
mov
call
ja
fmuls
adc
fs
pop
or
imull
orb
ja
int3
test
adc
pusha
enter
mov
push
xor
jl
les
pop
je
jb
xchg
popf
pop
and
adc
js
pushf
lods
push
sbb
icebp
movsl
add
lock
sub
cwtl
jp
cmp
inc
and
push
int
lcall
orl
sub
sub
mov
adc
cmovp
mov
xchg
dec
pop
clc
mov
jo
and
adc
mov
in
push
mov
ret
iret
cmp
popf
test
xor
xor
jp
xchg
sub
pop
push
sbb
lds
mov
sub
jo
dec
enter
adc
cmp
push
xchg
push
jae
in
ja
xor
xor
pushf
adc
lcall
rorb
mov
jbe
sbb
sbb
fisttps
ret
popf
push
push
test
movsl
pop
sub
cmpsl
sbb
inc
add
jmp
mov
stc
sbb
mov
and
xor
rorb
lods
push
loopne
dec
push
push
sahf
test
adc
push
add
pop
cmpb
pop
jne
add
stos
pop
popf
aas
xor
pushl
pop
cmp
xchg
roll
adc
imul
add
movsl
out
int
cwtl
push
xlat
cli
inc
cmp
test
je
cld
dec
sbb
add
xor
das
xchg
xor
push
lods
shrb
inc
into
add
dec
inc
push
pushf
and
sbb
aas
neg
push
adc
cmpb
pushf
dec
adc
test
and
test
ret
aam
xlat
test
movsb
and
push
inc
push
adc
loope
inc
out
inc
mov
popa
iret
jb
popa
dec
mov
jno
cmp
xchg
js
adc
dec
ficompl
pop
mov
in
int
orl
ss
pop
imul
out
cmp
in
inc
push
xchg
inc
or
loope
lods
mov
mov
mov
sbbb
inc
and
inc
push
pop
xchg
jbe
lods
cmp
push
test
mov
cwtl
mov
and
mov
xorb
push
adc
test
pop
test
pop
lock
ja
and
adcl
jecxz
add
xchg
cmp
lods
dec
out
inc
daa
pop
cmp
aaa
rcll
xchg
enter
stos
pop
sub
sub
orl
loopne
call
hlt
push
mov
mov
xchg
loope
adc
nopl
xchg
test
xchg
rclb
xlat
pop
int
adc
inc
push
jb
fs
cmp
out
ss
fisttpl
xor
inc
mov
inc
mov
adc
aam
scas
push
xor
mov
pusha
dec
cltd
pop
mov
xor
push
mov
and
daa
xchg
inc
add
jns
pop
push
test
push
test
sbb
scas
test
xlat
test
popa
cld
or
push
test
mov
gs
aam
or
pop
push
mov
or
cmpsl
dec
mov
or
or
shl
push
add
jo
inc
push
js
loope
aad
jno
mov
repz
cltd
jo
pop
clc
jecxz
pushl
sarb
mov
dec
int
dec
xor
fnsave
push
rclb
inc
and
or
aam
jo
je
xor
adc
roll
and
sarb
lahf
jo
push
lds
push
lcall
jb
add
out
sbb
pop
xor
or
int3
and
enter
push
subl
sbb
sbb
push
and
mov
add
fildll
adcl
cmp
pop
add
clc
mov
xchg
sub
push
jae
mov
aam
xor
clc
pop
xor
aaa
add
loopne
lods
stos
and
dec
int
push
fidivs
push
mov
testb
push
subl
test
xor
mov
mov
adc
sub
add
lock
addb
lcall
sub
mov
inc
cmp
xchg
aad
pop
mov
fldenv
pop
popf
xor
push
sbb
adc
cmp
dec
mov
push
add
decb
inc
xchg
mov
inc
neg
sub
jp
ja
or
xchg
test
cmp
adc
loop
pop
xchg
or
or
adc
mov
test
test
ljmp
jp
inc
add
adc
imul
and
lret
pop
sbb
das
mov
clc
pop
xor
dec
mov
sub
inc
ret
in
push
aam
xor
dec
loope
push
and
inc
movsb
addl
xchg
jge
xchg
lret
adc
aad
cli
andl
add
sti
flds
andl
xchg
mov
lcall
mov
inc
stos
pop
or
mov
test
add
inc
in
push
loopne
inc
dec
mov
add
pushf
repz
xor
scas
sbb
push
rclb
mov
xchg
inc
xchg
test
mov
inc
loopne
mull
in
pop
pop
lods
arpl
lret
pop
in
les
cs
and
sbb
jno
cmp
adc
test
sub
fcomi
sbb
nop
stos
imulb
xchg
rcll
jb
xor
test
imul
daa
cmc
jb
jb
inc
stos
ret
mov
xor
push
test
xchg
test
in
iret
inc
sbb
jecxz
cmp
arpl
pop
dec
inc
popf
ljmp
cltd
insb
pushf
mov
ret
push
push
addl
sahf
xchg
test
ss
out
push
xor
test
outsl
das
int3
scas
and
xchg
lahf
daa
xchg
jb
jp
mov
add
mov
jecxz
sub
sbb
mov
adc
stos
ret
sbb
shll
scas
ljmp
jmp
shrb
xor
xor
ucomiss
clc
call
cwtl
push
mov
mov
sub
inc
pop
jae
inc
sbb
push
imul
jg
xor
test
xchg
sub
push
mov
aas
mov
cltd
jb
adc
orb
xor
pop
push
dec
and
repz
pop
movsl
je
xor
mov
inc
pop
rcrb
cmp
movsl
mov
cmp
adc
add
push
and
and
add
and
enter
push
pushf
loopne
addb
lcall
loopne
sbb
cmp
call
mov
in
loope
arpl
mov
sbb
mov
test
stos
sbb
popa
jae
aad
cmpsl
mov
pop
xchg
int
add
jmp
mov
xor
adc
pop
int3
adc
or
loope
mov
sbb
dec
lock
mov
jbe
testb
cwtl
rcll
pop
jo
adc
cmp
fistps
pop
sbb
test
imul
insb
pusha
push
jo
jp
fsubrl
push
pusha
lret
xchg
pop
sbb
enter
mov
lock
jmp
rorl
ja
xor
and
mov
dec
popf
jnp
push
push
mov
fadds
out
nop
loopne
push
adc
adc
add
lret
fidivs
stos
fisubrl
push
inc
aad
dec
aaa
push
sub
ret
xchg
test
fwait
adc
push
pop
push
cmpsb
mov
pop
xlat
mov
mov
test
jge
dec
pop
sahf
ja
js
test
sti
sbb
adc
jo
xchg
mov
mov
sbb
pop
cltd
lcall
lcall
sbb
add
in
jne
and
fadd
add
add
lods
sbb
jno
push
push
pop
add
lods
mov
test
xchg
xor
popf
ljmp
sub
adc
sbb
push
stc
aad
sbbl
jmp
fmulp
mov
imul
outsb
inc
jae
pop
dec
movsl
pop
das
sbb
and
arpl
ret
in
and
ficoms
xor
and
stos
inc
sarl
cmp
pop
jnp
test
movsb
mov
sbb
loop
aam
and
inc
cld
jb
xor
dec
xor
and
add
add
or
leave
add
add
lock
or
fimull
fdivs
rorl
push
sub
mov
das
ljmp
xchg
xchg
andb
mov
adc
adc
lock
push
mov
jg
adc
sub
data16
or
jo
call
push
mov
scas
testl
push
pop
adcb
jle
push
or
sub
sbb
loopne
leave
outsb
or
mov
xchg
sub
icebp
scas
fcomps
or
sub
xchg
lods
xor
inc
fdivp
repnz
jno
mov
or
cld
aaa
mov
clc
cmp
sbb
push
xchg
int3
hlt
sub
xchg
inc
aam
or
cmp
push
jb
cld
daa
mov
fisubrs
test
dec
test
stos
push
aam
fwait
lds
mov
add
xchg
xchg
jp
je
cmp
sbb
in
adc
mov
and
jno
call
push
rorb
stos
pusha
adc
subb
push
jne
fisubrl
leave
cmpb
add
test
add
rorb
les
iret
xor
add
mov
sub
inc
dec
shll
out
sbb
pop
or
sub
inc
inc
pop
stos
adc
test
mov
mov
ss
cld
lahf
mov
pop
sti
add
out
rclb
ljmp
rol
icebp
pop
ret
push
jg
in
mov
xor
jns
push
cmp
hlt
cmpsb
xor
mov
add
push
xor
mov
add
jmp
mov
pop
push
ret
inc
lea
lcall
push
sbb
iret
nop
addl
pop
sub
push
das
pop
jp
cmpsb
and
cmp
push
add
ret
ljmp
fabs
mov
scas
lcall
mov
dec
mov
or
xchg
mov
or
stos
add
jb
cmpsb
sub
lcall
add
inc
int
dec
jbe
inc
pop
cwtl
sub
lret
cwtl
mov
or
inc
sbb
subl
and
test
push
enter
enter
xchg
pusha
adc
cmp
popa
push
adc
push
nop
ret
add
mov
push
gs
loopne
mov
adc
inc
jnp
sbb
dec
xchg
pop
or
testl
xchg
loop
add
xor
or
adc
sub
orb
pop
jbe
daa
dec
cmp
pop
jo
dec
rcrb
clc
push
inc
jae
addb
or
xor
icebp
xor
fisubl
rorl
es
cmp
cmp
lret
push
faddl
or
push
mov
andl
mov
cltd
push
and
pop
xchg
dec
sahf
cs
aas
sub
adc
int3
dec
mov
inc
sti
test
je
aam
inc
outsl
nop
jmp
sbbl
xor
loop
add
test
push
adc
or
adc
cltd
enter
jnp
inc
jae
inc
xchg
and
dec
xor
mov
inc
out
orl
cmc
xorb
cmp
push
xor
in
xchg
popa
mov
rcl
loope
test
pop
push
repnz
push
inc
jnp
inc
sahf
stos
insl
push
push
inc
jae
shl
in
orl
ja
mov
xor
and
ret
xchg
jl
push
out
adc
pop
or
loope
jp
orl
stos
sbb
daa
daa
push
push
cltd
dec
idivb
cmp
sub
jno
or
inc
inc
mov
cwtl
xor
xor
pusha
jo
fcoms
pop
scas
and
std
jnp
lcall
loope
cmp
adc
pop
aam
out
cmc
lret
scas
dec
inc
fidivs
mov
add
xchg
adc
mov
or
inc
ja
and
xchg
add
adc
int
ret
push
push
sbb
or
xchg
push
adc
sbb
push
mov
stos
sbb
cmp
mov
aad
or
or
inc
jne
lret
popa
xor
xchg
fldcw
mov
fsubrs
mov
cmp
mov
lds
fsubrs
out
in
loopne
or
add
rorl
sbb
or
adc
push
dec
add
mov
and
dec
push
iret
je
inc
aam
fwait
fs
popf
sub
push
rolb
push
or
xor
andb
popf
es
loopne
dec
push
scas
in
data16
and
inc
movsl
test
shl
cmpb
sbb
mov
test
sbb
sbb
leave
xchg
sub
or
push
les
sub
sub
jp
mov
or
decl
loopne
and
mov
roll
loopne
mov
rcrb
sbb
loopne
mov
lds
cs
cld
aaa
xchg
xlat
shrb
pop
adc
add
lret
ja
sbb
lret
cmp
pop
lea
xor
cmp
add
push
sbb
mov
mov
stos
sarb
cmc
cltd
rcrl
loopne
sub
push
pop
push
cmp
leave
jecxz
push
xor
adc
sub
mov
push
and
mov
sti
scas
jo
into
sbb
mov
dec
adc
inc
loopne
shlb
clc
pusha
lret
adc
xor
xor
and
push
add
loopne
fldenv
adc
mov
icebp
addb
imul
mov
or
pop
shl
push
cwtl
out
mov
or
xchg
mov
sarb
int
cmpsb
dec
shrb
add
int3
mov
sub
sbb
sub
mov
adc
into
inc
test
adc
ret
call
addl
xchg
in
subb
loope
sbb
loope
bnd
jae
and
jmp
xchg
add
sbb
test
sbb
pop
test
mov
jno
cli
jb
xchg
and
js
xor
loop
jp
add
jbe
add
push
movsl
xor
lods
call
push
mov
jae
xor
neg
inc
adc
xor
fstp
pop
xchg
imul
pop
xlat
dec
int
cltd
out
int3
push
pop
jle
int
mov
add
xor
cmpsb
call
movlps
imul
fadds
adc
lret
lock
adcb
jge
andb
pop
in
or
sbbb
leave
ret
mov
mov
mov
push
popa
or
push
or
and
int3
pop
adc
adc
imul
movsl
and
mov
dec
inc
lahf
dec
hlt
pop
add
or
or
add
jbe
out
popa
jae
hlt
test
inc
jns
mov
test
shrb
mov
and
aad
cwtl
and
xor
nop
jle
out
ret
mov
sarl
xor
jne
stos
call
adc
mov
push
sub
neg
add
cs
xchg
mov
or
loopne
add
inc
fwait
sbb
fucom
stos
jo
enterw
adc
dec
jecxz
es
subl
ds
mov
hlt
test
test
jbe
out
lcall
sbb
sub
inc
xor
sbb
add
cmc
bt
push
not
push
jno
test
aad
repz
cmp
sub
or
inc
pop
inc
adc
add
add
push
loopne
es
mov
push
jno
sbb
adc
ret
jo
test
lret
sbb
add
iret
bt
adcb
mov
jmp
mov
jbe
dec
add
adc
sub
pop
push
push
andl
sub
inc
mov
xor
aad
and
add
xorl
test
vmread
jae
push
push
lea
push
or
push
cmpsl
mov
test
or
add
pusha
push
or
add
in
inc
aaa
test
mov
push
in
pusha
sbb
fistl
inc
cmp
push
jno
or
aam
inc
and
mov
test
push
hlt
push
xchg
jecxz
pop
ja
icebp
inc
dec
loopne
idivb
and
jno
push
les
cwtl
movsb
leave
cmp
jne
popf
enter
pop
andb
or
hlt
jno
mov
inc
mov
jp
push
push
mov
fnstsw
pop
mov
jo
outsb
call
jmp
sbb
enter
push
leave
or
push
sbb
push
add
sub
sub
mov
andl
das
int3
pusha
je
pop
add
stos
add
je
or
or
dec
je
fxch
pusha
mov
sub
in
pop
inc
lods
or
and
and
or
mov
lahf
inc
lock
jb
loope
in
andl
add
and
sub
les
cmp
jne
push
test
sbb
in
lock
fcoms
bound
sbb
cmp
int3
or
test
and
xchg
or
xor
mov
mov
rcrl
fwait
xor
insb
mov
shll
xor
jno
orb
push
test
dec
cwtl
roll
sbb
push
add
hlt
sbb
out
sti
call
mov
sub
xchg
cmc
lea
add
sbb
push
shlb
jge
loopne
sub
add
jnp
clc
clc
mov
lock
xor
add
int3
cld
mov
add
xor
add
or
pop
mov
inc
push
push
sbb
mov
mov
mov
and
sbbb
out
mov
stc
cmp
stos
xchg
lock
and
stos
inc
ja
cs
pushf
push
add
mov
xchg
mov
or
stos
push
test
and
dec
imul
sub
cmp
movsl
sub
nop
xor
sbb
stc
adc
mov
arpl
dec
in
repz
jb
loope
jnp
sbb
adc
stc
in
and
mov
adc
xor
and
enter
stos
inc
sbb
or
add
dec
test
test
cmc
xlat
add
nop
xorb
filds
test
sub
mov
imul
sbb
or
xchg
push
stos
sbbl
scas
pop
jmp
fmuls
mov
push
sbb
subl
or
ret
faddl
sbb
pop
movsl
mov
inc
icebp
and
mov
cltd
addb
mov
jo
loop
mov
sbb
adc
and
cld
mov
xchg
mov
mov
out
inc
push
sbb
adc
loopne
adc
xchg
loopne
adc
test
xor
rcrl
fstpt
mov
aad
add
adc
or
or
nop
cld
dec
fiadds
adc
dec
mov
mov
push
mov
popa
iret
test
adc
adc
sbb
ret
aad
fldt
or
fs
push
hlt
and
sbb
cmp
and
mov
sub
mov
mov
mov
cmpsb
loop
mov
inc
or
pop
lcall
pushf
les
fidivl
sti
and
jo
stos
adc
insl
je
mov
sub
mov
out
insl
movsb
push
sub
add
cli
cmp
push
mov
mov
cmpsl
or
enter
or
jge
testl
lretw
arpl
push
stc
or
inc
cmp
cmp
push
into
mov
mov
jae
in
and
xor
xor
orb
enter
lret
sar
sbb
add
mov
xchg
and
jo
add
pop
cmp
push
cmp
or
xor
jb
inc
sub
sub
sbb
dec
add
lds
dec
aam
inc
loopne
subl
test
ret
inc
jle
mov
adc
add
push
int
mov
loopne
inc
sbb
cmp
push
xchg
jbe
inc
push
scas
xchg
test
sub
pop
or
or
ret
xor
loop
mov
xor
mov
sti
inc
int
sub
mov
test
xor
or
cli
push
jb
mov
pop
aam
jmp
mov
aad
sbb
jno
lea
add
mov
add
lcall
shlb
mov
sbb
sub
sub
leave
mov
and
out
inc
cmpsb
out
sbb
mov
push
es
sti
test
mov
adc
xchg
mov
push
rolb
adc
aam
outsl
add
lret
push
test
mov
shlb
je
call
clc
in
or
add
cmp
int3
add
mov
lahf
sub
or
adc
and
enter
in
dec
add
add
cs
in
mov
push
clc
daa
clc
pop
in
sub
lods
cmp
repz
sub
or
loop
cltd
jle
out
clc
sti
insl
popf
jmp
xor
push
int
fistl
sub
and
push
sbb
shll
adc
outsl
cs
notb
fs
ljmp
pop
xor
fcoml
loop
insl
outsb
in
into
pop
push
mov
and
iret
mov
push
and
pop
push
dec
xchg
sbb
or
xor
or
xor
mov
enter
mov
xor
in
mov
push
in
fwait
cmp
pop
rorb
loopne
test
inc
dec
popf
inc
add
cmc
xchg
adc
xchg
call
ficoms
jnp
adc
icebp
jne
or
scas
rclb
repnz
inc
es
inc
sub
add
inc
aas
faddl
int3
aad
andl
xor
adc
testb
mov
pop
add
or
and
add
cmpsl
pop
pusha
push
pop
adc
xor
stos
stc
inc
and
ljmp
adc
incl
loopne
adc
jae
push
push
mov
cmp
inc
jo
sti
lcall
scas
mov
pop
shlb
push
test
decb
roll
inc
xlat
ret
mov
mov
daa
push
pop
adc
adc
pushf
lret
push
lahf
push
aam
sbb
add
dec
popa
sar
lds
adc
movsb
lcall
adc
lcall
xchg
cmp
test
add
push
inc
cmp
push
lds
xchg
test
fcomps
xor
inc
aas
fcmovu
nop
sbbl
xchg
cmpsb
jb
sub
push
lods
inc
adc
add
rolb
call
pop
push
nop
divl
sbb
sbb
test
add
push
jns
sbb
aad
les
int
pop
fstps
pop
sub
add
subl
add
clc
or
pop
xlat
mov
scas
or
jno
sbbl
int
xchg
adcl
add
xchg
sub
ret
push
and
cmp
in
push
stos
scas
imul
mov
lea
loopnew
pop
fimuls
rcrl
or
inc
dec
imul
xor
imul
inc
xor
sub
sub
stos
divb
daa
mov
jae
ret
sbb
popa
test
insb
dec
int
mov
add
sbb
xchg
sahf
out
test
out
jnp
outsb
xor
pop
mov
add
addr16
hlt
cmpsb
lahf
jbe
loopne
fs
stos
shl
fimuls
and
out
xor
daa
pop
dec
add
mov
test
mov
loopne
test
outsl
or
sub
mov
shll
test
cltd
adcb
je
pop
pop
xor
xchg
jmp
adc
fmuls
imul
adc
jae
adc
mov
sub
cmp
jo
leave
jnp
in
mov
je
test
aas
sub
jg
rolb
cwtl
push
sbb
ss
add
mov
mov
pop
rcl
jp
fsubs
enter
ret
xor
pop
adc
fcomp
sbb
stos
cmp
or
rcrb
testb
int
add
es
lahf
push
mov
add
push
inc
shrl
addl
push
or
out
xchg
ja
or
daa
push
inc
movsb
sbb
xchg
jae
test
fimuls
mov
mov
cwtl
xor
xchg
dec
leave
sub
xchg
stos
add
lret
leave
fimuls
mulb
push
jb
adc
nop
jae
and
lahf
mov
xchg
in
xor
adcb
inc
xchg
xor
ja
push
xor
insb
sub
dec
mov
mov
mov
jp
stc
in
mov
mov
lret
cltd
fsts
gs
lods
xor
xor
arpl
pop
jb
inc
mov
mov
jb
cs
pusha
xor
stos
inc
arpl
leave
inc
mov
mov
jae
push
pop
aam
inc
xor
cltd
adc
not
fsubrl
cltd
pop
push
mov
out
push
adc
dec
popf
cmp
lret
mov
inc
mov
xorl
mov
shll
sbb
pop
in
sbb
add
cltd
faddl
inc
js
pusha
xor
sbb
sub
add
out
mov
movsb
mov
and
lods
push
sbb
lcall
mov
push
mov
fsubs
add
xchg
ret
shlb
out
dec
aad
xchg
stos
jo
adc
or
fiaddl
cltd
int
push
inc
mov
movsb
pop
lret
add
pop
lds
inc
cmp
mov
cli
sbb
dec
inc
shll
mov
lcall
push
inc
inc
pusha
shl
gs
fs
nop
jae
mov
pop
ret
dec
mov
repz
mov
pop
mov
dec
push
sbb
aas
je
xchg
push
xorl
jnp
and
out
int3
out
adc
jb
xchg
loope
test
lahf
inc
out
sahf
xor
das
daa
arpl
aaa
stos
std
scas
mov
sbb
push
fildll
push
add
cmc
jecxz
cmp
ficoml
adc
inc
scas
loop
loop
scas
enter
push
stc
inc
dec
xchg
or
or
js
lds
inc
jno
popa
sbb
mov
stos
in
mov
mov
enter
test
and
jae
push
test
shrl
sub
adc
pop
add
xchg
sarl
push
js
xorb
xchg
sub
inc
inc
cmp
sbb
and
lret
mov
faddl
popa
xor
jecxz
jbe
push
aas
add
mov
adc
pop
dec
add
sbb
or
adc
add
inc
cwtl
pop
or
loop
sub
inc
jmp
cmpsl
sub
cmp
loopne
cltd
or
jg
mov
xor
dec
enter
rolb
add
adc
loop
jl
sbb
inc
mov
js
out
sub
shrb
fscale
fwait
cmpsb
pushw
pop
sub
scas
push
xchg
jp
or
es
inc
iret
inc
mov
push
test
ds
stos
cmp
icebp
ja
add
imulb
insl
and
xor
jns
mov
push
mov
cmp
pop
xor
test
lret
sti
insb
pusha
sarb
pop
lock
mov
dec
xor
sub
xorl
mov
bnd
jg
ds
in
sub
cmp
testb
jns
pop
mov
lcall
rolb
pop
mov
mov
jb
xor
in
xchg
test
mov
adc
lret
scas
loope
inc
add
push
and
xorl
pusha
enter
aas
xchg
cmp
scas
push
pop
insb
jbe
jo
mov
hlt
nop
pop
adc
adc
cs
cld
lock
jae
pop
mov
sbb
push
pop
int
scas
stos
mov
sbb
add
jne
pop
dec
scas
add
push
mov
push
add
jg
push
cmc
loop
ds
les
pop
rolb
lahf
jge
stos
sbb
or
cs
add
push
and
dec
push
mov
sub
loope
mov
xchg
fldlg2
adc
xor
mov
mov
fs
test
rclb
push
xchg
test
inc
xor
mov
sbb
mov
call
shr
sub
xchg
mov
inc
or
inc
pop
imul
dec
adc
jp
ret
or
mov
fistpl
or
popa
sbb
cmpsb
pop
hlt
ljmp
pusha
test
pop
xlat
stos
movsl
lcall
rcl
sub
push
rorb
pop
scas
inc
nop
xor
mov
add
jl
or
inc
out
es
cmp
xchg
cwtl
cs
push
fsubrl
pushl
xchg
stos
orb
shrl
adc
outsl
out
cmp
xchg
pop
iret
icebp
loope
pusha
and
inc
xchg
jb
or
xor
cmp
push
pop
sbb
cmp
add
mov
mov
pusha
add
lcall
das
popa
jnp
rclb
pop
daa
lcall
sbb
fnstcw
cmp
lcall
cmpsb
inc
aas
pop
push
or
lods
add
lret
cwtl
sbb
cmp
inc
inc
jno
xchg
test
cs
or
and
jae
or
push
test
and
iret
sub
rcpps
jns
cltd
pop
sbb
pop
mov
xchg
or
or
iret
in
leave
pop
mov
adc
adc
outsb
lret
jl
xor
lcall
sbb
add
jmp
jne
daa
or
jno
hlt
xchg
lret
sbb
mov
in
jmp
xlat
inc
pop
mov
sub
pop
cs
sbb
sbb
jb
push
int3
sub
add
out
or
push
int3
rorl
cltd
and
pop
xor
xchg
scas
icebp
loopne
imul
sbb
pop
dec
push
mov
jo
sbb
dec
push
lea
xor
insb
pop
fsubs
lcall
out
mov
mov
push
rorl
add
fs
cmp
popw
fmuls
daa
sbb
or
mov
sub
add
js
arpl
xor
addb
add
mov
sub
data16
rorb
push
ret
mov
inc
rcrb
add
adc
and
pop
nop
int
push
jno
aam
ficoml
dec
add
push
cmc
sub
adc
ret
sbb
mov
clc
sbb
jo
push
adc
nop
out
orb
push
sbb
imul
cmp
add
xor
mov
notl
sub
push
and
lock
jbe
popf
shlb
ljmp
mov
sbb
inc
test
cmp
pop
inc
pushl
ret
adc
dec
add
mov
test
and
xchg
sub
push
xchg
lahf
inc
pusha
sbb
jmp
test
jae
nop
adc
pop
xchg
rolb
js
stos
lret
add
cmpsl
jb
cs
jmp
in
xor
adc
or
pop
pop
stos
sbb
push
movsb
sarb
fmuls
add
in
xor
jg
mov
pop
dec
cmp
cwtl
dec
stos
add
inc
jmp
jp
jbe
std
adc
push
fdivs
mov
adc
sbb
mov
mov
push
adc
cwtl
mov
push
add
popa
inc
lds
jmp
or
inc
inc
or
push
insb
mov
inc
stos
lret
push
mov
cmp
jo
pushf
inc
dec
xchg
lds
orb
loop
inc
mov
pop
mov
add
or
mov
test
adc
push
xchg
popf
pop
lock
sahf
lods
negb
inc
mov
stos
pop
jne
cwtl
mov
inc
scas
loop
adc
pop
aad
or
inc
cs
jne
test
in
clc
dec
add
test
mov
inc
movsb
xchg
adcb
leave
mov
inc
test
push
and
adc
es
dec
mov
jno
fs
cmp
add
mov
ja
and
pusha
rolb
xor
in
aad
push
dec
popa
repz
loopne
xor
mov
sub
push
pop
or
xchg
jg
adc
fisubl
fstpl
test
nop
shrl
aad
mov
push
movsl
or
or
fbstp
inc
pop
fisubl
rcr
push
sub
jp
scas
daa
sub
jp
stos
mov
and
cmp
popa
stc
inc
mov
pop
in
add
movsl
loop
mov
or
sub
jo
lcall
mov
test
xor
in
test
fimuls
push
lret
adc
jne
sub
jo
dec
orb
push
pop
data16
mov
lcall
inc
ror
cmp
sub
test
mov
lcall
push
dec
xchg
movl
push
faddl
add
out
sub
pop
cmpsb
repnz
push
push
add
push
icebp
nop
into
xor
sbb
mov
aad
pop
add
push
loope
in
cmpsb
iret
xchg
add
and
inc
mov
out
push
outsb
lret
call
out
jo
test
stos
gs
pop
es
cmp
jno
xchg
cmc
rcrl
inc
sbb
or
in
pop
subl
mov
sarl
or
fcmovb
inc
sarb
dec
flds
mov
adc
mov
test
cmp
cmp
scas
mov
lcall
xor
jo
xchg
push
mov
sub
cmp
adc
add
dec
nop
push
js
out
push
push
shlb
ds
rcrl
inc
xchg
sbb
pusha
xor
test
xchg
in
add
fiaddl
push
in
push
js
dec
pusha
xor
lcall
adc
xor
add
in
jecxz
xor
sub
in
in
cmp
pop
in
xchg
test
inc
jae
das
and
add
popf
aad
dec
scas
mov
and
out
shl
or
pop
or
loopne
add
js
xor
repnz
pop
ret
push
jae
repz
push
leave
mov
jle
pop
out
rclb
and
scas
adc
scas
out
cmpsl
fcomps
into
rcrl
icebp
inc
icebp
outsl
enter
xchg
dec
or
mov
popa
push
cld
mov
scas
int
add
ret
mov
push
sbb
xlat
adc
push
dec
aad
inc
test
add
mov
aas
or
add
push
pop
ret
roll
dec
xchg
imul
mov
mov
xor
pop
aad
stos
subb
push
or
ret
daa
jg
push
pop
push
mov
jle
or
xor
lcall
pop
dec
into
shlb
test
in
mov
int
pop
movsl
and
xor
pop
loope
ficoms
mov
sti
add
pop
xchg
sarl
mov
xchg
mov
xor
add
outsl
xchg
scas
inc
push
or
xchg
push
sub
mov
xchg
add
addr16
push
inc
into
jecxz
sti
mov
inc
xlat
sub
aaa
dec
lea
test
lock
nop
stos
fstpl
movsl
out
mov
jmp
mov
jmp
cmova
in
inc
xchg
inc
dec
int
or
pop
mov
push
pop
inc
ljmp
les
rcl
in
das
xchg
jle
ljmp
lds
and
xchg
push
clc
shrb
loope
in
push
out
fwait
adc
notl
or
xor
pop
xor
int
mov
test
rolb
mov
scas
mov
shlb
sbb
loope
sbb
pop
adc
cmp
or
fwait
mov
add
repnz
mov
scas
push
cs
jno
sub
push
es
pop
xor
scas
test
mov
ud2
ret
ret
or
mov
xor
lock
xchg
pop
stos
subb
lea
xchg
and
lret
bndstx
sahf
sbb
ljmp
xchg
adc
jl
pop
loope
aad
xchg
js
lcall
loope
gs
testb
jg
mov
sbb
fnstsw
inc
and
cmove
xchg
rcrl
push
cmp
into
push
loopne
sub
add
addl
data16
mov
ret
inc
stos
dec
ja
push
ja
push
inc
pop
push
fcoms
cltd
jb
test
adc
gs
push
lret
imul
mov
cmp
popf
push
int
lods
jno
push
jbe
test
cmp
ss
xor
cwtl
int3
jae
out
scas
or
sub
xchg
and
mov
addb
and
pushf
add
sbb
or
and
jae
sbb
xchg
push
stos
cmp
pop
in
or
add
adc
jmp
cmp
jmp
test
xchg
adc
xchg
mov
xor
mov
mov
xlat
add
xor
in
pop
cltd
int
dec
xchg
imul
mov
adc
mov
adc
xlat
sbb
daa
add
repnz
inc
xor
out
faddl
and
sti
push
pop
jnp
test
aaa
ret
cmp
sar
cmp
xor
adc
sbb
xchg
push
fimull
pop
loopne
push
push
in
fisttpll
add
xchg
scas
idiv
fistpll
sbb
or
pop
mov
ret
xor
sbb
inc
and
repnz
add
lcall
cmp
shll
jo
andb
ja
xchg
push
pop
mov
jmp
push
js
mov
xchg
rcll
push
adc
mov
pop
imul
xchg
imulb
push
inc
popa
stos
pop
lea
lret
sahf
mov
aam
rclb
adc
cmovbe
inc
imulb
or
and
jb
push
mov
leave
loope
add
mov
js
sbb
pop
cwtl
inc
hlt
dec
mov
xchg
cmp
push
ret
xchg
roll
mov
popf
jg
push
or
es
bound
adc
popf
mov
push
cltd
stos
cmp
sub
adc
add
push
mov
lcall
lods
mov
lret
dec
inc
xor
ret
sbb
inc
rcl
test
iret
add
or
mov
push
pop
shlb
dec
adc
inc
push
mov
inc
sub
lods
cmp
mov
xor
and
add
or
xor
mov
xor
pop
into
dec
sbb
mov
rolb
or
cwtl
std
xor
pop
push
sub
mov
test
cmp
popf
mov
sub
adc
push
stc
shl
jo
call
cmc
sbb
shrb
push
jle
pop
adc
add
push
adc
sub
xor
sub
push
rcrb
pusha
jnp
or
shr
pop
inc
fs
cmp
cmp
mov
in
sbb
sbb
push
aaa
outsb
push
push
xchg
shll
cli
fcmovnbe
insl
stos
xor
filds
stos
cmp
ret
or
add
imul
inc
in
sbb
xchg
add
add
cmpsb
jo
jp
lea
lcall
add
addr16
cmp
mov
mov
xchg
in
lret
push
xchg
in
dec
loopne
les
adc
push
cmp
and
xchg
fadds
adc
hlt
test
sub
stos
loope
jo
ja
into
andl
inc
push
sbbb
jae
jb
ja
fldcw
pushf
popa
loop
xchg
jp
sub
xor
scas
data16
or
mov
fst
and
in
out
cmp
sub
movsl
or
pop
adc
cmp
push
inc
push
cmc
ljmp
loopne
dec
out
call
or
push
xchg
mov
sbb
int
ret
adc
inc
pop
scas
adc
push
mov
jae
push
push
adc
pop
test
xchg
shlb
sbb
in
xchg
stos
imul
scas
add
dec
cli
inc
mov
movsb
and
mov
inc
stos
push
iret
cmc
inc
mov
cmpsb
inc
jl
or
add
repz
push
mov
add
cmp
inc
cmp
pop
into
push
jecxz
and
stos
loopne
pop
mov
xchg
jae
dec
movsb
sub
xchg
mov
xrelease
jo
into
rolb
xor
pusha
sub
mov
mov
push
and
and
or
pop
fsts
jb
lcall
xchg
xorl
or
rclb
test
mov
aad
mov
popf
add
sbb
jp
pop
scas
xor
push
and
xchg
cmp
add
or
fs
push
subb
sub
sbb
xchg
xor
iret
outsb
pusha
cmp
xchg
xor
inc
cs
ja
movsb
sub
lock
fs
loope
xchg
push
popf
hlt
dec
sbb
and
add
das
rorl
inc
pop
cmp
xchg
mov
adc
mov
ds
add
pop
cli
mov
push
call
jo
inc
enter
ja
mov
and
xor
pushf
leave
push
cs
shll
mov
xchg
add
mov
sbb
jb
add
adc
rolb
in
ret
sub
mov
push
xor
or
dec
mov
pop
js
dec
ljmp
sbb
cltd
insl
add
xchg
pop
test
jecxz
cs
decl
mov
hlt
sub
fs
jo
push
xchg
je
jo
add
adc
out
add
push
in
movsl
pop
adc
loopne
gs
testl
mov
push
sbbb
sub
and
jo
mov
jb
and
cmp
xorb
sub
adcb
xlat
xchg
adcb
clc
and
into
inc
mov
push
xor
fwait
xchg
and
stos
movsl
jp
jo
stos
adc
loopne
mov
sbb
jg
adc
cmp
js
je
inc
push
inc
push
cmpb
loopne
push
jae
out
mov
jo
loopne
jae
stos
mov
mov
cmpsb
data16
xchg
lret
pushf
fisttpll
cmp
pop
cmpl
or
aam
es
ss
xor
test
dec
and
mov
stos
mov
std
cs
gs
inc
xlat
int3
or
xchg
pop
insl
leave
in
push
mov
add
xor
shll
out
mov
sbb
popa
xor
in
add
push
cwtl
xor
aaa
mov
sub
cmp
xor
pop
adc
jle
jne
or
mov
push
int
iret
cmp
xchg
out
inc
mov
push
mov
push
mov
adc
mov
clc
mov
in
pop
cmpsl
mov
push
jecxz
das
lea
push
jle
outsb
mov
adc
inc
lea
inc
je
push
jp
movsb
add
add
fnstcw
sbb
shlb
clc
fadds
or
outsb
pop
mov
aaa
shr
add
pop
sbb
mov
dec
lods
js
and
add
jb
hlt
push
arpl
or
adc
mov
andl
push
push
xor
shll
pop
jecxz
cld
cmpb
mov
push
cltd
sub
outsl
push
cmp
pop
fistpll
add
inc
je
add
pop
xchg
or
sti
mov
cmp
stc
mov
xchg
inc
inc
mov
fisubl
or
stc
inc
rolb
hlt
adc
popa
sar
add
nop
sbb
jae
mov
cmp
mul
adc
cmpsb
push
push
jmp
test
xchg
add
or
aad
xchg
jp
pop
mov
sub
cmpb
inc
mov
stos
xor
pop
inc
or
sub
mov
jo
or
out
pop
cmp
inc
les
pop
xchg
add
inc
in
sbb
cld
or
push
jne
ja
cmp
add
pusha
mov
inc
cwtl
in
jmp
jb
iret
adc
test
popa
xor
jmp
jno
mov
call
movsb
add
jno
insb
adcl
push
ja
add
xor
inc
into
cmp
mov
cmp
xchg
xor
movsl
pop
pop
or
hlt
movsl
inc
inc
mov
dec
dec
inc
mov
movsl
mov
add
in
push
xor
ret
mov
adc
int
sbb
add
lods
sbb
xorl
stos
adc
inc
push
mov
add
lods
insl
js
icebp
add
stos
rclb
enter
aas
inc
adc
mulb
and
dec
ja
sub
xor
std
test
or
into
popf
add
pop
pop
clc
mov
stos
jo
insl
mov
cmp
mov
retw
xorl
sti
cmc
cli
sbb
cmpsb
mov
sbb
test
xlat
popa
xor
add
cmpb
xor
mov
rorl
fistl
inc
pop
mov
hlt
hlt
andl
add
addb
cmc
xlat
mov
inc
push
or
in
or
push
xor
cld
rol
loopne
in
add
adc
or
lret
add
orl
inc
test
rcll
pop
cmp
sbb
jecxz
push
int
adc
cmp
testb
adc
or
push
add
adc
push
xorb
ret
rcrb
mull
add
sbbb
add
add
pop
cmpl
add
push
inc
lock
in
mov
sbb
mov
inc
add
push
adc
xlat
add
mov
test
inc
loopne
sbb
ret
mov
or
test
push
inc
repz
aad
mov
mov
add
inc
aad
push
add
push
adc
pop
inc
sarb
popa
test
add
movsb
or
add
mov
pop
call
adc
andnps
cmp
and
lds
adc
add
and
push
in
xchg
push
sahf
test
aaa
mov
mov
mov
in
sub
adc
or
icebp
inc
insl
in
jecxz
ss
or
pusha
add
and
or
pop
hlt
movsl
sbb
scas
loop
sub
push
or
fadds
in
dec
aam
test
add
pop
xchg
inc
add
mov
mov
loopne
sub
and
sahf
xchg
shrl
dec
les
jg
icebp
jno
shrb
mov
inc
push
outsl
mov
call
mov
pop
xchg
add
jnp
adc
loopne
xchg
or
sub
xor
leave
cmp
dec
push
xor
xor
enter
inc
cmp
sbbb
jmp
test
and
push
cmp
int3
pushf
push
adc
lcall
sub
mov
push
and
mov
jns
and
cmpb
sub
jg
adcb
repnz
lea
xchg
daa
int
mov
add
inc
push
push
sbb
or
inc
test
mov
cmpb
mov
enter
mov
rclb
sbb
sub
ss
loopne
sub
pusha
dec
push
sbb
or
adc
pop
xor
movsb
xchg
inc
movsl
ljmp
dec
movsb
sub
add
add
push
jg
cs
out
inc
adc
pop
ja
or
jmp
and
lea
add
mov
in
lcall
aam
jae
lcall
mov
andb
out
sbb
in
pop
rcrl
xchg
push
aaa
inc
addl
cmp
into
push
mov
add
mov
cwtl
sub
inc
test
inc
scas
int3
and
push
jb
or
loope
mov
sahf
xlat
daa
sub
pop
fwait
sbb
dec
jnp
sub
sbb
jns
js
mov
lcall
mov
add
andb
fs
in
dec
jle
xorl
xor
loop
addr16
stos
push
ja
pop
es
adc
int
sub
inc
bound
add
adcl
repz
cmp
in
in
lods
or
or
and
xor
cmpsl
mov
adc
push
pop
push
add
addb
xchg
push
pop
adc
adc
or
into
in
mov
orb
jmp
repnz
or
je
addr16
loope
inc
mov
in
movsb
and
imul
iret
call
cmp
rol
sbb
test
add
fnstcw
in
enter
inc
scas
add
push
sbb
addl
push
roll
pop
ret
sbb
stos
repz
pop
pop
push
adc
or
dec
sbb
jae
xchg
enter
push
dec
mov
fisttps
add
and
mov
add
clc
push
mov
not
and
stos
out
shl
loop
fisubs
pop
mov
mov
sub
ds
or
xchg
je
mov
xchg
and
clc
mov
gs
leave
dec
shll
int3
adc
push
add
sub
hlt
mov
in
mov
push
add
adc
jne
loopne
push
or
mov
mov
enter
sbb
adc
rclb
and
clc
jp
sbb
inc
push
add
sub
jbe
xchg
or
sub
mov
jae
or
add
int
test
fsubs
push
add
push
inc
adc
pop
push
adc
mov
scas
movsl
outsb
testl
lret
inc
inc
jecxz
adc
xor
mov
dec
and
jo
mov
and
stos
sub
xchg
dec
sbb
lret
aam
push
inc
leave
mov
cmpl
sbb
cmp
inc
mov
sub
test
bound
outsl
cmp
add
imul
out
add
add
and
or
gs
add
inc
lock
push
push
mov
cmp
and
jmp
adc
adc
push
int
ja
sub
mov
test
lock
xor
pop
lret
lods
and
test
lods
repnz
imul
loop
mov
gs
jno
xchg
sub
pop
xchg
cmc
push
xchg
rolb
stc
mov
add
xchg
int
xor
adcb
lret
subb
pop
mov
inc
push
sbb
or
sbb
pop
inc
jae
scas
push
cmp
sbb
add
push
cmp
add
sbb
sarl
sbb
jb
push
mov
mov
xor
adcl
jae
aad
cld
xor
and
cltd
xchg
mov
cld
push
lcall
add
add
mov
addb
test
and
sbb
push
test
push
es
or
andl
rcr
popa
and
cmp
lea
or
xor
loope
rcrl
pop
stos
mov
aaa
out
adc
xor
imul
je
cli
push
add
push
inc
adcl
cmp
aam
sub
andb
hlt
xchg
jns
push
int
movl
xchg
shlb
mov
push
nop
sub
imul
mov
adc
cmp
sbb
or
mov
and
sub
or
sub
xor
pop
add
and
push
mov
daa
fdivs
shll
mov
testl
pop
scas
movsl
or
sub
xor
mov
cmp
add
shl
mov
push
add
ret
sbb
fisubrl
xor
xchg
pop
aam
mov
push
orb
sti
or
arpl
cmovo
jmp
imul
or
or
fcoms
add
call
push
clc
push
sarb
cld
in
mov
or
push
mov
dec
scas
add
add
lds
xchg
mov
xchg
or
cltd
push
cltd
pop
aam
jo
jns
lods
jb
mov
mov
add
clc
ret
ficompl
sbb
hlt
in
je
push
mov
sbb
xchg
pop
jae
mov
nop
add
xchg
cmpsb
mov
into
adc
je
mov
cmp
and
ror
add
inc
mov
jae
dec
jmp
xor
xor
ja
in
or
es
mov
xchg
mov
dec
mov
add
test
mov
je
push
mov
addb
cmp
and
in
hlt
add
mov
xor
add
sub
movsl
push
dec
xchg
int3
dec
fchs
mov
adc
fmul
push
add
mov
and
pop
jecxz
mov
ret
rorl
jo
mov
popf
xchg
mov
mov
sbb
pop
pusha
dec
lahf
push
add
or
inc
int
mov
in
push
sub
out
out
add
cltd
mov
lds
jb
dec
test
add
enter
or
fimull
or
xor
mov
sbb
pop
sub
mov
adc
adc
xor
or
push
and
jg
mov
inc
adc
lret
adc
int3
pop
in
sbb
in
add
push
mov
push
cmp
push
rol
insl
pushf
and
sub
push
sarl
inc
xor
jo
mov
add
xor
test
es
adc
inc
sub
jmp
push
jo
and
mov
xor
test
xor
add
loopne
mov
cmp
jnp
loope
jae
sbb
inc
push
sarl
add
lods
inc
icebp
jp
and
ret
in
and
or
pop
dec
adc
aad
xchg
and
aam
sarb
sbb
sub
pop
js
jmp
imul
add
mov
or
xor
or
imul
adc
dec
sub
rorl
add
mov
pop
test
xor
inc
push
jo
inc
push
pop
in
cmp
mov
xchg
sbb
out
add
sbb
inc
dec
andl
jb
and
test
movsl
sbb
add
sbb
adc
loope
cwtl
sub
and
and
sub
test
jae
es
mov
sub
mov
add
push
mov
lret
sub
sbb
test
or
es
sub
add
lahf
imul
or
fcoms
stos
sbb
imul
bound
fildll
sbb
adc
repz
adc
and
popa
push
and
movsl
push
ss
push
scas
adc
push
or
movsl
lds
test
dec
push
and
ljmp
das
icebp
lret
sbb
jb
lret
fwait
test
and
rcll
push
out
xchg
xchg
dec
sbb
mov
std
push
inc
sub
stos
stos
and
mov
cltd
jecxz
clc
xchg
adc
sbb
cmp
inc
loopne
push
pop
cmp
push
hlt
cmp
add
and
jb
pop
jno
fs
mov
lock
es
leave
in
test
dec
pop
cltd
insl
adc
inc
int3
push
scas
enter
jno
movsl
xorb
dec
pop
das
sub
xchg
daa
push
and
sbbl
cli
gs
add
push
push
xor
or
subb
lods
fwait
pushf
sub
jbe
push
jp
mov
and
popa
push
push
mov
xchg
or
fistpl
mov
lea
adc
sbb
pusha
fisubl
rolb
test
nop
xor
push
stos
xor
mov
pop
cmc
ret
stos
mov
or
orb
mov
pop
xorl
dec
push
push
mov
add
xchg
mov
adc
pop
scas
scas
mov
inc
push
mov
loop
in
dec
mov
push
mov
fucom
ret
daa
add
in
push
out
aad
or
popa
xchg
inc
mov
push
or
cmpsl
inc
cmpl
jne
cmp
mov
push
bound
mov
test
jmp
xchg
jl
cmpsb
add
add
adc
xchg
and
jne
jo
test
lods
and
sub
inc
rclb
cmp
lcall
adc
xor
xchg
testb
xor
mov
das
jnp
mov
cltd
pop
mov
loopne
and
insb
mov
push
jbe
stos
mov
add
sbb
lods
xlat
push
or
andl
push
push
mov
andb
xchg
pop
jae
mov
push
push
mov
or
mov
mov
push
imul
push
ret
sbb
insl
cwtl
add
scas
rcl
enter
lock
sbb
cmp
jae
sub
xlat
sbb
dec
hlt
jbe
sbb
or
mov
rclb
and
ret
mov
stos
push
cltd
or
xchg
stos
dec
jmp
hlt
add
out
ljmp
movsl
push
sbb
cmp
vmread
add
add
sbb
dec
js
loopne
lret
sbb
mov
add
jae
into
dec
jb
iret
pop
and
mov
push
scas
ret
push
pop
dec
pushf
or
jns
scas
jns
xor
sub
gs
icebp
jno
subl
xor
aad
loope
out
jo
xor
arpl
fucomip
sub
iret
mov
icebp
push
sub
icebp
lea
jnp
xor
lret
adc
jge
outsl
dec
xchg
push
pop
decl
sbb
mov
adc
leave
add
clc
or
shr
inc
xor
fisubrl
enter
mov
mov
ret
aam
push
subb
outsl
push
push
roll
xor
add
pop
jae
mov
mov
adc
stos
sbb
in
stos
cwtl
lea
enter
inc
mov
jmp
lahf
fwait
lds
add
push
push
push
push
icebp
sub
lds
aas
lar
add
inc
add
in
loop
rorl
adc
or
arpl
xchg
xor
push
adc
imull
test
dec
lock
enter
dec
lock
fdivrs
xor
cmpsl
fcoml
mov
mov
rcll
or
xchg
or
add
testb
es
cmp
xor
clc
pop
pop
test
ret
push
jge
flds
or
lds
inc
insb
rol
add
adc
fsts
out
xchg
adc
or
hlt
add
enter
scas
or
dec
push
popf
xchg
dec
test
jo
and
inc
rorl
xchg
imul
pop
mov
lods
fistl
js
cmp
and
stos
fcos
je
ds
sbb
adc
jmp
push
mov
add
incl
sub
cmpsb
cmp
shll
adc
mov
inc
mov
add
or
popa
fxch
mov
pop
push
pop
add
pop
push
jg
lods
inc
push
stos
rcll
pusha
js
push
inc
add
out
mov
xor
push
sub
xor
cmp
add
clc
scas
xchg
jae
loope
or
dec
cmpsl
pop
push
jno
inc
mov
jle
adc
popa
lret
cmc
or
xchg
mov
pop
stos
pushf
pop
es
push
inc
inc
cmp
rcl
add
out
sub
pop
pop
dec
mov
or
popf
xor
pop
xchg
dec
cmp
std
or
movl
or
shlb
cmp
pop
push
sbb
pop
test
in
dec
add
or
pushf
jp
adc
popa
ss
aad
mov
fwait
ds
call
ret
vmaxpd
shrb
out
and
xchg
cmc
or
or
add
dec
inc
pop
in
mov
push
mov
adc
add
loopnew
push
cwtl
cmp
daa
fcomps
mov
addl
mov
add
sbb
stos
push
mov
cli
pop
mov
add
jo
xor
jnp
jmp
cs
mov
xor
sarl
loopne
sbb
sbb
nop
add
jae
or
addr16
mov
xor
mov
rcr
incl
xchg
inc
dec
jle
aam
inc
pusha
mov
sbbl
xor
inc
and
dec
mov
push
test
ja
jo
add
xor
cltd
imul
dec
inc
lods
cltd
ljmp
pop
jno
cmp
push
into
mov
lock
inc
jae
mov
xchg
mov
push
add
adc
fadds
in
add
push
xor
push
mov
ret
or
je
out
cmp
or
or
or
add
ss
xor
pop
or
mov
xchg
and
inc
jo
and
xlat
mov
and
in
mov
enter
cld
aam
or
test
push
or
pop
jae
inc
xor
loopne
inc
xor
sub
mov
ret
rorl
xchg
jg
sub
jb
push
or
andl
lods
add
loopne
ss
stos
jo
jg
aad
mov
loopne
xor
lcall
add
mov
jo
in
push
daa
out
cltd
jp
dec
sub
and
fildll
sbb
xchg
sub
pop
adc
cs
sbb
lods
push
and
ljmp
inc
jo
push
xchg
xchg
pop
push
push
mov
rcrl
mov
xchg
lock
gs
test
pushw
mov
mov
pop
bound
outsl
jo
test
jb
loop
into
mov
mov
cmp
push
cli
push
pop
orb
shl
inc
pusha
test
mov
pop
jp
ljmp
or
icebp
divl
xchg
or
lret
fldt
cs
adc
dec
push
lods
xor
insb
ret
push
mov
int
sbb
cmc
jns
mov
add
add
inc
xchg
leave
cmp
xchg
rolb
into
xchg
mov
mov
xchg
pop
test
sbb
mov
push
cmp
mov
in
sbb
test
out
std
mov
sbb
or
test
sbb
mov
sbb
jle
xchg
and
lcall
push
sbb
cmp
jo
in
fdivr
insl
mov
xchg
rclb
lret
or
mov
out
and
data16
xor
fdivrs
ja
xor
int
dec
in
push
fs
mov
push
nop
rcll
jl
mov
stos
mov
ret
add
lcall
out
rolb
call
sbb
std
out
adc
xchg
in
sbb
out
adc
gs
sbb
cltd
sbb
xor
mulb
pushf
sub
pop
lds
xor
adc
xor
cli
dec
jns
iret
sub
cmp
sti
addb
rcrl
jnp
rclb
mov
push
jno
test
sub
add
sbb
pop
adc
xor
sub
and
loopne
or
and
sbb
loop
sbb
push
and
lds
push
add
sbb
repnz
push
loopne
add
add
dec
push
mov
sub
adc
lcall
push
les
sub
inc
sbb
push
dec
sub
dec
sub
cltd
add
or
adc
push
shlb
add
mov
mov
pushf
sub
or
lret
pop
sbb
pop
mov
ficoml
out
sub
ja
sbb
push
roll
sti
sbb
stc
jo
jle
and
outsl
sbb
imul
jbe
aam
leave
jne
cli
sub
int
int3
jmp
lds
add
inc
inc
les
add
daa
daa
dec
xchg
or
and
aam
aad
lock
imul
mov
cli
or
sbbb
add
loopne
and
outsl
pop
rcrl
adc
aas
and
iret
data16
addr16
leave
bound
dec
push
adc
or
repz
and
mov
and
out
sub
pop
inc
jg
pop
adc
jb
shlb
lahf
push
loop
inc
sub
cltd
stos
pop
push
mov
add
test
add
add
test
and
sub
pop
or
push
sbb
add
push
addb
add
xchg
ret
test
stos
pop
scas
fsubs
mov
in
sbb
inc
rcrl
adc
pop
call
addr16
stos
sbb
out
lock
inc
inc
sti
xor
push
pop
adc
push
shr
xchg
loop
ret
ficoml
out
mov
fldl
or
adc
lock
xchg
adc
ljmp
pop
add
push
push
shlb
sub
sbb
mov
scas
dec
xchg
addb
jo
lcall
or
push
cmc
shl
pop
adc
adc
push
insb
or
sub
add
adc
xchg
xchg
rcl
out
push
cmp
inc
push
repnz
or
stc
mov
lret
or
dec
jo
outsb
in
cmc
sub
jns
call
or
mov
or
or
xchg
inc
cmp
jne
ja
ljmp
jmp
je
push
inc
xor
shlb
shrb
pop
inc
adc
je
in
add
push
out
icebp
xor
add
inc
inc
mov
sbb
clc
scas
jl
test
repz
push
and
push
jne
pop
mov
pushl
pop
sbbb
aaa
inc
jl
in
loope
or
shll
adc
mov
lret
out
rclb
stos
sbb
and
jno
or
jb
sub
dec
mov
inc
pop
sbb
ja,pn
xor
test
adc
jge
subb
stos
ja
inc
mov
sbb
rclb
test
and
lods
ret
cli
xor
or
mov
into
inc
frstor
dec
js
or
sub
inc
mov
ficompl
jl
push
adc
loop
cltd
enter
or
mov
pop
or
push
ds
add
pop
loope
sub
stos
scas
cltd
jo
and
pop
cmpb
push
mov
add
adc
push
push
cld
inc
jle
push
push
jae
out
ja
addb
xchg
dec
inc
sbb
cwtl
ja
loop
ljmp
and
push
jb
mov
jno
mull
inc
jb
push
out
xor
jae
mov
lret
shlb
or
cs
mov
inc
xchg
fmul
and
stos
sbb
test
add
scas
adc
jo
push
push
fsubs
fmul
xor
adc
scas
jb
jo
sbb
cmpl
jns
sbb
pop
nop
push
insl
push
mov
or
xlat
inc
aad
imul
push
mov
xchg
push
inc
push
cmp
push
jg
cmp
xor
ds
add
ljmp
call
and
lea
push
jae
cmp
xor
cmp
dec
push
into
sub
add
test
lret
rclb
inc
sub
loopne
sbb
rorl
push
gs
and
stos
adc
or
inc
mov
add
cmp
and
mov
shrb
add
es
inc
rcll
stc
sbb
and
mov
cwtl
mov
rorl
push
jbe
es
cmp
xchg
inc
ja
scas
add
mov
push
jo
xchg
push
cltd
mov
mov
mov
jle
mov
add
pop
fistpll
push
add
dec
cmp
mov
cmp
mov
sbb
jno
scas
mov
xchg
xor
xor
push
fimull
mov
in
push
cmpsb
enter
loopne
push
adc
stos
bound
sub
pusha
jb
sub
sbb
jo
dec
pop
push
or
push
xchg
jmp
pop
imul
push
aas
add
subl
popa
and
jge
cmp
fsubrs
stos
mov
xchg
xor
push
push
test
xor
cmc
pop
xor
fmuls
pusha
xor
add
jb
mov
xchg
mov
pop
sub
mov
mov
ja
lret
jnp
xorb
push
lods
sbb
bound
out
or
cltd
divl
pushl
cmpl
jp
ss
outsb
out
cmpsb
mov
in
xchg
add
test
dec
mov
push
inc
stos
fsubl
inc
mov
dec
pop
xor
aad
mov
outsb
xchg
cmp
lcall
jmp
pop
addb
test
mov
or
lret
and
or
pop
cmp
mov
pop
jae
or
test
jae
xor
int
xor
mov
jo
xor
xchg
ret
hlt
mov
cwtl
sbb
inc
cmp
pop
push
sub
int3
subb
les
add
mov
ret
out
push
in
imul
add
inc
jae
xor
imul
pop
jb
rcrl
add
out
sbb
jo
sub
enter
mov
sub
inc
xor
es
movsl
stc
jge
or
jae
sbb
lock
mov
pusha
and
dec
mov
jmp
sbb
adc
adc
add
mov
es
aad
loopne
dec
incb
lea
pusha
shlb
stos
jecxz
lcall
adc
test
push
aad
push
fists
pop
fisubrl
or
es
outsl
loopne
sbbb
cld
int3
xor
add
adc
int
dec
sub
sbb
filds
enter
rcrb
fcoms
loop
in
adc
mov
stos
scas
jns
or
jge
sub
pop
stos
adc
add
sbb
mov
sub
andl
or
lock
inc
xor
push
orl
mov
test
outsl
mov
fdivp
cmc
fwait
jp
adcl
enter
dec
sub
cwtl
insb
icebp
pop
pop
or
das
fmulp
add
idivl
shrb
rcll
orb
add
es
cmp
mov
mov
or
cmp
addb
add
mov
dec
stos
cmp
sbb
daa
mov
out
popa
xchg
mov
mov
fdivs
inc
mov
mov
imul
xchg
test
aam
clc
or
mov
xchg
mov
popf
fadd
test
ret
push
mov
cmp
lcall
and
push
pop
or
mov
data16
mov
cmp
mov
or
loop
lea
push
aam
jnp
data16
outsb
push
dec
push
and
jo
adcb
or
mov
lcall
mov
push
jo
push
push
xchg
mov
sub
sbbb
in
cltd
test
mov
cmpsb
jo
push
shll
out
loop
add
sub
push
int3
sub
xchg
ret
mov
stos
lahf
adc
fsubp
pop
aad
rorb
cltd
mov
cmp
iret
add
mov
jo
push
outsb
and
push
movsl
mov
fidivrs
cmp
xchg
sub
inc
inc
mov
add
sbb
test
out
pusha
mov
pop
ja
xorb
adc
inc
cmp
sub
jb
xchg
lea
mov
orl
das
sub
jne
pop
aam
push
pushf
fidivl
lret
ja
pop
insb
push
cs
sbb
andl
test
inc
sbb
or
or
cmp
mov
loopne
testl
jl
mov
xchg
xor
stos
aad
inc
shll
cmc
cmp
mov
sbb
cwtl
xor
bound
pushf
test
lcall
pop
loope
jo
xor
mov
inc
adcl
xchg
add
jno
mov
es
mov
and
lret
inc
jmp
mov
add
out
popa
push
mov
rorl
jnp
mov
lcall
ficoml
mov
sbbl
sbb
out
sub
inc
push
or
iret
mov
jo
sub
jbe
scas
add
cmc
xor
sbb
lods
sbb
mov
push
lods
sub
loope
addb
sub
mov
shlb
sbb
push
scas
push
cmp
xor
jae
mov
cmp
inc
loope
fiaddl
ror
inc
mov
ficomps
pop
popa
push
into
lds
out
lods
xchg
mov
mov
cmp
push
fiadds
int
sbb
mov
fcoms
out
cmpsb
callw
cmp
nop
adc
rolb
cltd
jo
sub
xchg
sub
inc
lods
cmp
outsb
lea
push
and
mov
clc
mov
push
pop
sbbl
push
inc
imul
shll
jae
jnp
or
push
sub
inc
and
aas
stos
test
or
add
bndldx
xchg
rcrb
aas
push
xchg
xchg
sub
cld
mov
jnp
or
sbb
inc
xor
jbe
les
mov
push
and
es
les
pusha
mov
cltd
or
and
scas
add
sub
nop
sub
sub
or
sub
arpl
xchg
jae
mov
int
mov
dec
int
mov
stos
mov
or
test
mov
cmpl
and
mov
adc
test
movsl
xlat
mov
xchg
or
mov
sbbb
nop
mov
in
push
xchg
sub
add
out
out
imul
mov
fwait
xlat
pop
ret
jle
push
add
xor
xorl
cmp
xchg
jle
cmp
popa
jo
shll
rcrb
inc
pop
push
jb
inc
push
or
inc
js
pusha
mov
and
ret
push
imul
or
pop
addb
pop
inc
into
js
stos
mov
enter
jmp
fidivl
inc
cmpsl
push
push
jnp
jl
mov
jmp
inc
xchg
mov
sub
xchg
cltd
or
push
pop
xchg
fistpl
in
xor
pop
in
das
xchg
mov
add
insb
aam
lcall
add
dec
adc
and
sbb
adc
or
cli
inc
nop
fstpl
mov
js
inc
cld
cmp
lcall
mov
pop
call
mov
repnz
in
clc
sbb
enter
push
or
inc
jno
fnstcw
xchg
add
mov
clc
mov
or
adc
add
loope
xchg
inc
mov
push
xlat
or
je
adc
xor
cmpsb
xchg
loop
dec
mov
addb
pushf
add
stos
add
mov
adc
and
and
std
and
leave
dec
add
xor
jmp
pop
cmp
inc
mov
in
in
inc
fwait
or
jmp
adc
cmp
mov
leave
es
or
push
lods
mov
inc
ret
sub
ja
dec
add
cmpsb
cli
test
or
sbb
cltd
push
rorb
out
out
adc
sub
ja
xor
subb
mov
roll
push
lahf
xor
fidivs
or
ret
rcrl
pop
out
mov
repnz
inc
xchg
out
or
cld
bound
in
or
xchg
mov
popa
add
in
and
sub
leave
adc
icebp
enter
or
fimuls
mov
fildl
mov
loopne
pop
adc
sub
inc
xchg
je
or
std
xchg
test
or
cld
ljmp
cmpsb
or
add
xchg
cmp
add
test
mov
cld
inc
add
fmul
es
arpl
call
add
adc
sbbb
loopne
sbbb
out
mov
test
mov
shrl
sub
push
aaa
add
test
add
push
shlb
ljmp
xchg
xorb
mov
push
mov
mov
movsl
sbbl
icebp
rol
cmp
mov
sub
sbb
adc
jecxz
jnp
pushf
xchg
pop
and
mov
add
int
add
dec
mov
les
xchg
jne
xchg
jno
daa
or
inc
jnp
jg
fcom
xchg
inc
punpckhdq
fdivs
rorl
sub
jmp
fsubrl
enter
and
cmp
loop
and
add
scas
or
add
xor
adc
fdivrs
stc
fildl
aam
inc
mov
sbb
hlt
jae
fcmovne
inc
lock
add
xor
mov
sub
mov
jno
sbb
inc
int
or
inc
pop
inc
xor
notl
xor
push
in
dec
repz
insb
cmpsb
xchg
fisubl
add
je
cmp
mov
inc
les
xchg
adc
or
clc
dec
clc
sahf
push
repz
add
adc
sbb
inc
fmull
dec
inc
popa
lret
sub
ret
imul
loop
shlb
mov
adc
fistps
xor
stos
fdivs
jnp
std
or
out
jmp
movsb
mov
movsb
pusha
add
ret
xchg
imul
jmp
inc
addr16
or
push
cmp
fidivl
pop
std
in
and
jno
test
add
inc
mov
cld
ret
xchg
xchg
in
insl
lret
scas
rorb
sbb
and
push
shrb
jo
xor
daa
push
sarb
push
fistpll
mov
pop
mov
shll
movsb
lods
rcrb
add
or
into
adc
in
sub
loop
call
pop
sub
and
mov
sub
mov
lea
imul
test
hlt
adcb
mov
hlt
ret
pop
fnstcw
dec
add
jecxz
lods
dec
and
dec
inc
cltd
sbbb
call
loopne
xor
scas
sbb
adc
xchg
dec
mov
dec
mov
adc
xorl
pop
or
and
out
xchg
fildl
sub
xchg
sbb
test
mov
test
jae
sub
in
add
aam
mov
pop
add
fs
push
add
test
add
push
or
aas
mov
sarb
test
and
bound
mov
add
je
pop
int
mov
imul
sbb
xor
push
mov
mov
add
call
pop
test
adc
movsl
pop
pop
inc
push
jnp
adc
and
pop
and
mov
push
sub
jo
add
adc
or
mov
dec
jp
push
or
stos
inc
orl
add
xor
mov
cmpsl
mov
cmp
and
insb
out
in
push
aad
mov
jbe
adc
push
and
lahf
push
adc
test
add
mov
or
lcall
and
mov
mov
mov
mov
xchg
and
outsb
daa
cmpsb
dec
cltd
push
inc
mov
imul
test
sti
decb
notl
dec
add
call
push
adc
movsb
into
mov
loope
pop
rclb
inc
imul
rclb
pop
mov
insl
outsl
mov
ljmp
add
jae
add
je
mov
fcoms
sub
sub
mov
cld
in
push
or
clc
sub
sbb
jge
cmp
xchg
push
add
xchg
and
add
jecxz
loopne
test
inc
xor
and
fbld
add
out
mov
add
inc
mov
mov
out
mov
test
push
cmp
data16
popa
enter
pushf
jge
xor
lcall
pop
add
data16
in
cld
or
add
mov
or
cmp
int
or
xor
push
inc
outsl
daa
jp
sbb
and
mov
or
call
movsb
in
out
lcall
and
mov
mov
and
jo
sbbl
xchg
enter
pop
and
jo
push
xlat
cltd
adcb
mov
or
mov
inc
test
push
scas
and
mov
add
enter
loope
push
enter
cmpsb
mov
arpl
imul
inc
test
mov
xlat
in
add
fs
mov
cmp
inc
or
push
push
lock
add
scas
add
xor
adc
push
movsl
lret
pushf
add
add
push
inc
push
and
and
mov
sub
add
xchg
sub
cltd
and
mov
shlb
push
mov
imul
addl
negl
loopne
or
cld
sbb
jo
test
add
sbb
out
pop
push
roll
mov
fwait
adc
inc
loope
repz
jno
test
stos
push
gs
cmpsl
es
and
out
scas
in
sbb
fcoml
call
mov
lcall
addl
lret
sbb
ficoms
dec
cmpsb
idivb
addb
push
imul
leave
inc
mov
leave
mov
inc
xor
outsb
and
add
enter
in
test
in
cmp
mov
inc
test
les
jo
add
xlat
sbb
cmp
jae
cltd
push
rolb
add
dec
lcall
add
faddl
js
sub
addb
in
imul
lret
xor
cwtl
clc
pop
je
jp
push
or
fwait
stos
movl
pop
loopne
xor
or
sahf
std
aam
adc
clc
mov
inc
pusha
addr16
mov
in
mov
js
push
push
pop
sub
scas
jb
xor
or
sbbb
lock
and
adc
or
aad
jnp
jbe
push
call
ret
jl
add
xchg
daa
push
ror
mov
jno
clc
add
subb
or
dec
movsl
mov
rcrb
into
push
push
ret
add
sub
push
ret
mov
cld
mov
dec
cs
inc
xor
sbb
sbb
pop
push
mov
cmovae
insl
cmp
sarb
mov
outsb
test
sub
lcall
shrb
je
xor
adc
add
aad
and
jae
or
ja
mov
xor
rolb
pop
mov
daa
lret
int3
lea
mull
push
cmpsb
ret
inc
roll
mov
lods
sub
mov
clc
dec
call
cmp
inc
call
fcoml
push
sbb
js
dec
cmp
inc
xor
sahf
sub
pop
fstps
xor
call
enter
repnz
ljmp
adc
or
incl
cli
mov
neg
dec
cmp
dec
pop
ss
and
ds
in
sub
std
or
push
inc
adc
dec
push
mov
pop
xor
add
mov
push
inc
mov
add
int
addr16
or
arpl
call
outsl
in
push
cmp
outsl
sbb
and
mov
pop
mov
xor
ficoml
push
mov
inc
adc
lret
add
add
ficoml
sub
push
ficoml
and
fwait
add
sbb
add
mov
cmpsb
sub
int
lea
jp
sbb
inc
push
xchg
out
pusha
enter
fcomps
inc
xchg
or
jle
xchg
cmc
int3
int3
mov
shlb
or
mov
mov
clc
popa
add
adc
push
rorl
mov
xchg
add
xor
inc
ss
inc
and
shll
inc
fdivr
jno
lret
shrb
mov
iret
mov
push
cwtl
mov
sub
out
xor
pop
adc
xlat
add
or
push
dec
cs
ret
lret
subb
xchg
stos
aam
dec
shll
push
cmp
adc
lcall
mov
test
push
xchg
xor
push
out
adc
xlat
jae
pop
push
cmp
add
inc
mov
and
xchg
and
lahf
mov
popf
xor
mov
xor
pop
push
adc
mov
subl
add
es
xlat
mov
push
lcall
or
sbb
daa
icebp
add
ss
cmpsb
add
dec
mov
inc
int
cli
sub
or
leave
xor
or
sub
imul
pop
lahf
mov
jae
adc
push
rcl
test
jl
or
ret
sub
add
cmp
cltd
aam
inc
nop
jnp
sub
mov
aad
into
jo
mov
jb
pop
sbb
data16
inc
sbb
sub
lret
adc
dec
rcr
push
mov
or
sbb
xchg
jno
jo
add
and
mov
cmp
adc
ret
mov
mov
add
jg
xchg
into
push
jp
ret
es
sbb
ljmp
dec
push
das
popl
stc
pop
incb
adc
push
pop
fwait
int3
int3
dec
dec
fiaddl
add
cmc
add
stc
and
sbb
cmp
or
shll
mov
cmpl
jo
adc
adcb
loope
mov
adc
aaa
jo
jge
rclb
lret
jmp
pop
fwait
pop
rorl
shrl
imul
je
adc
add
pop
add
popw
pop
sbb
imul
push
sub
insb
movsl
xchg
and
shlb
aad
stos
dec
add
push
adc
xor
dec
pop
cmpb
jg
popa
sub
push
push
push
cmc
adc
push
mov
pop
add
out
push
daa
and
mov
add
adc
clc
cmp
outsl
dec
out
rorl
inc
add
mov
pop
loop
pusha
inc
adc
jo
fdivr
inc
test
call
inc
pushf
sub
mov
fcomps
pop
adc
or
test
test
cld
in
fs
stos
and
lret
js
xchg
dec
cmp
adc
shl
inc
outsb
gs
mov
arpl
xchg
adc
xchg
sbb
inc
lods
add
cmpsl
xor
sbb
test
add
or
or
fs
popf
push
push
int
sbb
xchg
cmp
jb
lods
dec
cmp
pop
add
add
nop
inc
or
xchg
divb
mov
scas
out
pop
lcall
pop
and
div
mov
sbb
inc
sbb
or
sti
adc
inc
xor
enter
inc
mov
push
in
stc
push
jmp
add
test
pop
sub
and
inc
test
xor
add
cwtl
add
jbe
cmp
add
push
roll
movsb
arpl
push
jae
mov
and
je
pop
add
push
rclb
lcall
add
in
mov
lret
and
jae
enter
dec
sub
fs
stos
jnp
loop
loop
scas
sub
mov
pop
mov
fistps
inc
mov
pop
ljmp
scas
ret
and
xor
jecxz
push
jae
movsl
jl
push
lret
or
dec
mov
inc
mov
add
and
scas
push
insb
dec
inc
fsubs
inc
adc
mov
sbb
inc
cmp
sbb
xchg
cmpsb
mov
sahf
mov
cmpb
addl
roll
mov
cmpsb
cmpsb
jp
icebp
subl
inc
movsl
test
mov
insb
jo
mov
push
and
xchg
and
xchg
lahf
sbb
push
inc
stos
jb
test
shlb
mov
sub
jb
pop
xor
pop
dec
mov
rolb
add
cmp
cmovno
cwtl
stos
iret
cli
xorb
xchg
or
adc
or
or
push
dec
bound
mov
pop
inc
clc
inc
lcall
mov
dec
sbb
sub
pop
mov
subb
ret
cmpsb
add
inc
ficoms
add
loope
js
push
mov
sub
xor
cmp
sbb
xchg
into
inc
gs
xor
push
mov
or
mov
loopne
cltd
fcmove
add
ds
xchg
sbb
pop
mov
test
push
add
jp
aam
push
dec
test
hlt
outsl
adc
xor
xchg
addb
gs
stos
xchg
jecxz
xchg
lcall
push
es
mov
pushl
cs
lahf
mov
adc
mov
dec
adc
jo
into
fmul
add
add
pop
jecxz
out
inc
jo
stos
loope
xor
es
pop
inc
pop
jo
sub
loopne
in
sub
xchg
push
xor
push
stos
adc
aad
mov
and
inc
out
pop
add
inc
jp
and
push
or
adc
rclb
inc
ret
adc
popf
jecxz
cmp
stos
inc
xchg
lock
cltd
push
jae
mov
loopne
sbb
adc
js
push
jo
scas
dec
rcrb
loopne
sar
in
cs
lret
push
rcrb
push
inc
out
dec
enterw
popa
xchg
cld
or
enter
add
roll
add
adc
inc
ret
xor
cli
sub
add
xor
dec
push
or
gs
scas
mov
mov
dec
adc
test
jbe
mov
scas
in
shrb
pop
pop
rcl
addb
ja
mov
lds
fistpl
mov
jb
jae
test
push
jp
mov
push
mov
inc
push
iret
stos
inc
mov
sbb
loope
cmp
insl
frstor
push
cmp
or
or
in
into
ds
fadds
add
mov
lcall
insb
ret
or
lcall
out
xor
pop
loop
or
ror
out
or
mov
fsubs
adc
lock
or
in
mov
inc
or
pop
and
adc
test
outsl
lcall
int3
or
movsb
hlt
adc
or
or
movl
aad
xchg
shl
adc
xor
adc
ror
xor
mov
or
xchg
mov
inc
mov
jae
sbb
je
or
nop
inc
sub
push
add
cmc
xorb
xor
sub
not
mov
rcll
rclb
clc
sub
push
xor
repnz
into
stos
clc
pop
or
ret
insl
insb
cmp
jbe
arpl
push
cmpl
rolb
add
or
sbb
jo
adc
outsb
dec
pop
mov
shr
rolb
sbb
adc
out
xor
and
and
fidivrl
and
xchg
sub
dec
rcrb
push
cmp
add
and
mov
and
add
sbb
popf
xchg
das
adc
ret
in
sbb
mov
and
sbb
popf
test
loope
add
jne
fcmovnb
enter
test
test
mov
mov
and
rclb
out
ljmp
mov
rorb
repnz
jecxz
add
add
arpl
ja
xor
dec
mov
subb
es
popf
pusha
fadds
jl
push
pusha
addl
aam
push
rorb
dec
rcrb
pusha
or
push
icebp
incb
out
repz
jg
and
inc
xor
inc
stc
add
out
loope
inc
ljmp
xchg
mov
aas
es
add
sahf
cmp
adc
inc
xchg
add
test
push
add
pop
xchg
fwait
in
or
loop
mov
and
hlt
in
dec
insb
and
add
cmpl
add
adc
mov
in
fnstsw
dec
int
jae
mov
jg
insl
add
push
xchg
test
fs
dec
xchg
adc
fldcw
mov
mov
aas
or
inc
mov
push
ret
jbe
cwtl
in
and
cmpsb
shrd
add
into
cmp
and
or
orb
cli
pop
and
sub
push
push
add
xchg
test
xor
insb
cmp
adc
in
rclb
popf
push
loopne
dec
out
sbb
add
call
lods
lret
xor
lock
les
dec
repnz
aad
in
call
icebp
jg
adc
mov
push
or
adc
xor
fisubrs
sbb
or
jo
inc
mov
stos
mov
adc
mov
and
or
scas
dec
ljmp
test
cs
fisttps
inc
arpl
popa
stos
dec
mov
pusha
rolb
loopne
pop
push
dec
imul
xchg
inc
lock
dec
cmp
pop
das
and
shl
mov
loop
mov
jo
pop
mov
movsb
pop
add
lcall
xorb
dec
mov
int3
and
int3
out
pop
sub
stos
and
mov
out
sbbl
sub
and
fiaddl
dec
mov
sub
pop
ret
mov
inc
insb
mov
push
push
stos
stos
loope
mov
ljmp
pushf
jo
cwtl
dec
ljmp
popf
mov
pop
xor
inc
push
sub
push
mov
push
inc
outsl
mov
mov
sub
mov
enter
cmp
iret
push
xor
or
sub
test
push
jne
pop
sub
sub
pop
mov
adc
popa
addb
pop
inc
push
js
jnp
rcrl
or
les
add
sahf
scas
sub
sarb
test
es
jno
add
inc
lds
cmp
stos
inc
push
add
pusha
inc
xorl
and
pop
addr16
xor
call
inc
add
shrb
push
int3
or
inc
cld
fisttps
js
popf
push
popf
pop
jnp
cmpsb
addr16
stos
pop
test
pop
subl
ret
leave
je
push
push
sbb
push
mov
out
mov
mov
pop
sbb
aad
adcb
and
ljmp
mov
mov
out
pop
test
fidivrl
jne
sub
push
ja
dec
push
xor
lahf
jmp
stos
fstps
jae
jb
andl
inc
int
gs
or
jb
mov
mov
or
mov
push
mov
pop
adc
add
mov
out
sub
lea
pop
loope
or
jae
cwtl
mov
sbb
or
fcmovbe
ja
mov
fs
and
xchg
mov
pop
out
push
inc
ljmp
sbb
lea
xor
jbe
and
mov
push
add
mov
sub
mov
out
sbb
sub
push
and
insl
or
push
stos
hlt
adc
inc
mov
cmp
rclb
push
mov
mov
adc
and
jp
test
loopne
repnz
cltd
xor
dec
xchg
in
in
pop
xchg
test
inc
imul
sbb
sub
imul
cmp
sub
pop
xchg
add
leave
add
out
or
andl
sub
enter
rolb
fimuls
pop
dec
dec
test
out
add
mov
daa
jl
and
xor
mov
fcoml
into
push
lret
inc
add
cmp
jle
cwtl
mov
pop
xor
inc
outsl
xchg
imul
dec
and
or
jo
popa
push
repnz
pop
sub
adc
sbb
jns
mov
or
mov
stos
stos
mov
xchg
add
and
xlat
ror
adc
push
scas
mov
iret
adc
adc
and
and
subb
push
subl
adc
fisubrs
lret
adcb
or
dec
jno
ja
cmpsb
scas
mov
pop
fistl
push
popa
mov
jp
push
lcall
idivb
or
pop
xchg
sub
das
mov
and
das
push
push
test
or
sub
loop
loopne
imul
das
stos
inc
cltd
or
in
icebp
roll
inc
cltd
pop
mov
pop
mov
pop
xchg
cld
xlat
sub
jno
addr16
add
push
push
mov
jnp
jp
lea
mov
mov
push
pop
mov
movsl
inc
add
mov
or
mov
or
ficomps
jb
pop
pop
dec
and
push
sti
popa
pop
pushf
add
inc
sub
jg
stos
mov
clc
je
enter
sbb
xor
pop
add
dec
cmp
nop
arpl
sub
jmp
daa
or
push
xor
addb
idivl
andl
cmpb
push
loopne
pop
aam
sahf
clc
sub
cmp
pop
cltd
or
add
sbb
into
sbb
stos
push
jne
ffreep
push
inc
das
push
add
push
dec
sbb
adc
and
add
jge
push
stos
add
add
mov
and
push
adc
or
mov
and
or
jae
pop
ljmp
sbb
or
repnz
ds
loop
imul
subl
test
mov
xor
mov
mov
loope
fistl
mov
jecxz
cs
lock
pop
daa
dec
cmpsl
sbb
push
push
mov
call
ror
mov
test
dec
lea
adc
mov
push
mov
sahf
or
jp
add
jae
aad
push
inc
loop
add
mov
add
cmp
inc
in
out
push
xorl
and
cmp
bt
cli
rol
xchg
and
inc
and
sbb
mov
clc
pop
jne
inc
cmpsl
adcb
push
pop
into
aad
xchg
dec
push
sub
or
loopne
mov
lret
aaa
loopne
pusha
sub
add
add
add
jp
ja
xchg
jmp
push
sub
stos
sbb
jecxz
cmp
cs
pop
inc
test
hlt
xchg
sahf
sbb
push
test
adc
sbb
stos
cwtl
int3
adc
lret
xchg
dec
jo
push
dec
es
xchg
shlb
xchg
shrl
ret
or
and
or
addr16
pop
daa
inc
xor
adc
ja
mov
cltd
inc
add
or
outsb
mov
lods
loopne
ljmp
push
sbb
mov
pop
sbb
sahf
xor
hlt
rolb
int
stos
and
adc
push
icebp
dec
push
mov
call
es
xorb
jbe
xlat
adc
test
push
cmp
ja
cmpsl
or
or
daa
dec
mov
xchg
ret
pop
jne
push
sbb
lods
sbb
cmpsb
lret
mov
shlb
adc
mov
inc
pop
jo
pop
popf
cmp
push
stos
loopne
mov
sahf
push
add
cmpsl
sbb
lcall
xor
bnd
out
add
mov
leave
add
adc
xor
sahf
repnz
fisubrs
orb
ljmp
das
int3
xor
inc
mov
push
cwtl
in
cmp
push
xor
push
mov
sub
repnz
push
cmp
int3
or
mov
mov
sbb
or
fbstp
add
lahf
mov
mov
add
stc
push
adcl
lods
cmp
loopne
lret
push
mov
inc
add
int
pop
ja
lcall
call
lds
lahf
jg
sti
jbe
pop
mov
filds
xor
aas
cmc
cwtl
dec
or
mov
pop
add
pop
push
xor
clc
sub
cmp
fadds
fcomp
push
leave
mov
loopne
std
pop
adc
les
cltd
or
add
add
fiadds
mov
mov
xorl
imul
adc
jae
in
mov
sbb
xor
push
movsb
add
fidivrs
std
and
cmp
and
pop
jnp
push
inc
mov
in
lock
mov
sbb
adc
xlat
xor
adc
call
inc
into
push
xchg
icebp
mov
or
sahf
inc
scas
loopne
aam
outsl
push
cmc
inc
rcrl
inc
adc
xor
out
inc
mov
dec
xor
sbb
and
inc
pop
mov
push
cmp
in
mov
jbe
jg
mov
xor
or
xchg
mov
jge
xchg
sub
stos
xor
inc
les
or
inc
or
rolb
nop
leave
test
loopne
lret
ja
pop
jo
or
mov
sbb
sub
enter
test
cmp
aam
xchg
stos
xchg
adc
inc
orb
xchg
lret
ja
imul
loop
dec
pop
add
fmull
test
dec
pop
aaa
scas
add
in
dec
jne
out
add
sub
lock
jno
push
push
add
mov
lret
in
rcrl
call
mov
adc
sbbl
aad
mov
push
fdivl
adc
push
mov
sub
push
xor
pusha
enter
jl
mov
sub
ret
scas
sbb
mov
in
cli
orb
push
pop
mov
mov
add
push
out
loope
mov
sbb
dec
pop
mov
lock
inc
ret
call
sbb
jo
xchg
rclb
mov
movsl
mov
enter
xchg
out
adc
out
dec
sbb
push
mov
mov
mov
icebp
icebp
ret
rcrb
sub
aam
add
sbb
stos
cltd
loopne
insl
clc
sub
pushf
pop
mov
nop
fiaddl
xchg
xor
xlat
popf
fnstcw
add
ljmp
or
rclb
add
add
dec
les
mov
sub
and
insl
mov
mov
add
dec
adc
and
lcall
xchg
add
inc
into
xor
iret
mov
dec
add
pop
inc
sbb
mov
inc
fadd
dec
mov
adc
outsl
add
or
pop
and
sbb
test
sahf
stos
popw
mov
jne
mov
out
add
inc
mov
and
outsb
insb
inc
sub
lea
subb
push
cmp
push
push
fisttps
addl
divb
les
adc
ljmp
shrb
cmp
in
dec
inc
fwait
sbb
les
push
shlb
adcb
dec
aas
out
enter
adcl
fadds
sahf
negl
outsl
inc
sbb
stc
adc
inc
cwtl
mov
sub
cmp
push
and
push
sub
adc
xchg
push
xchg
xlat
mov
push
jne
jb
and
xchg
xchg
hlt
inc
rorb
cmp
lret
ret
stos
in
scas
pop
push
cmp
jmp
addr16
sbb
loopne
in
inc
cltd
fimull
enter
inc
cltd
mov
scas
mov
sbb
inc
cmp
inc
push
out
in
xor
and
add
sub
xchg
dec
lods
push
jo
fildl
out
push
push
mov
jo
jo
inc
popa
sarb
sbb
sbb
dec
push
and
adc
or
lods
xchg
mov
hlt
or
xchg
lock
les
das
or
jo
inc
das
pop
cmpsb
pop
aad
incl
movsl
xchg
lcall
adc
push
add
lret
out
inc
adc
jae
mov
dec
inc
dec
imul
push
dec
imul
mov
aad
mov
movsl
or
add
fcom
or
scas
mov
sbb
push
test
aad
inc
sbb
lcall
ja
or
daa
imul
fs
arpl
push
sbb
add
add
inc
push
mov
lcall
je
scas
adc
jmp
lods
push
jnp
shll
jb
pmaddwd
xchg
pushl
in
loop
mov
and
sub
sub
rclb
mov
test
ret
data16
je
ja
inc
cmp
gs
inc
icebp
or
stc
scas
mov
pop
scas
mov
xor
adc
xor
xor
insl
or
shlb
cmp
inc
jae
or
or
add
sbbb
inc
and
jnp
pusha
or
and
add
outsb
add
xchg
out
mov
cmp
mov
xchg
and
mov
sub
mov
mov
pop
call
push
pop
in
push
jmp
mov
adc
inc
nop
and
add
mov
push
ret
xchg
push
sub
int
xor
mov
sbb
or
rclb
sub
push
sub
xchg
cwtl
and
pusha
fistps
jge
fsubrl
subb
push
cmc
add
lcall
ljmp
adc
sub
shrl
jo
sahf
stos
adc
ret
xchg
leave
push
cmpsb
and
jae
push
jo
addr16
dec
sbb
cmp
adcb
push
xchg
and
ret
test
loope
push
inc
mov
into
out
test
push
add
not
shrb
xchg
jae
shll
les
or
imul
mov
scas
sbb
add
mov
cmp
pusha
add
mov
add
test
mov
inc
mov
mov
cmc
lods
movsb
test
fxch
dec
push
in
sbb
test
add
mov
xchg
adc
xchg
loopne
daa
cli
sub
xor
sbb
out
xor
cmp
andb
cmp
push
jmp
and
xchg
clc
in
cmp
enter
mov
js
push
orl
testl
cmp
loopne
xor
aam
popf
or
cwtl
add
jmp
cmp
pop
sub
push
lret
jp
popa
add
add
and
mov
adc
sbb
xchg
push
outsb
xchg
int
test
adc
outsl
mov
pusha
fadd
clc
pop
not
and
mov
stos
dec
int3
addb
sbb
test
push
or
sbb
mov
enter
mov
sbb
mov
and
fwait
push
xchg
mov
into
or
inc
fsubl
sbb
je
and
adc
sti
sbb
flds
ret
adc
out
adc
add
repnz
cmp
push
call
inc
in
inc
ror
and
mov
inc
or
cli
add
in
lods
mov
push
in
and
push
sahf
les
push
cmp
cld
test
add
movsl
xchg
in
fwait
loope
add
adc
add
or
in
add
les
and
push
mov
jae
pop
adc
aam
adc
loopne
xchg
sub
fcompl
add
rclb
and
push
aad
das
inc
cmp
inc
add
or
xor
hlt
lahf
notb
fiadds
inc
and
js
push
out
or
sub
les
data16
pop
rorl
mov
test
push
fiadds
adc
jo
xchg
add
cli
addr16
add
add
lret
cmp
adc
dec
cli
xchg
inc
ja
adc
popa
and
mov
fldl
cmp
push
push
adc
scas
xor
repnz
pcmpgtd
into
ret
imull
shlb
ret
std
cmpsb
mov
idivl
add
addl
std
xchg
mov
push
push
xchg
sub
fs
lock
and
mov
push
dec
cwtl
cmp
dec
dec
lds
popa
and
nop
aam
xchg
lret
pusha
add
xchg
movsl
inc
test
push
test
int3
jge
cmp
cltd
cli
jbe
jnp
mov
ljmp
test
inc
jge
xchg
mov
cmpsb
lock
push
sbb
dec
push
js
push
dec
and
stos
pusha
cmovge
sub
xlat
push
enter
sub
and
sub
push
push
push
cmp
pop
xchg
sbb
lret
inc
hlt
sbb
dec
pop
and
jg
stos
adc
test
daa
mov
data16
cmp
pushf
addl
xor
daa
adc
dec
dec
mov
jnp
mov
pop
mov
stos
pushf
sbb
inc
inc
scas
or
inc
mov
add
jae
je
vpmulhuw
sahf
daa
stos
push
int
out
inc
imul
mov
leave
adcl
and
add
push
add
mov
cld
xor
inc
test
push
mov
orl
gs
mov
enter
test
ret
xor
rcrl
nop
jae
mov
pop
orl
sub
mov
or
adc
or
adc
jne
mov
jno
ljmp
and
mov
push
loopne
push
out
cmpsl
or
or
add
inc
addr16
cld
fildll
xor
pop
rorl
sub
sub
sbb
outsb
aam
cmp
mov
adc
cwtl
ljmp
add
pop
inc
push
lods
jo
cmp
or
sbb
xchg
or
or
pushf
or
in
push
sbb
cmp
and
push
pusha
and
fnstenv
xor
int3
inc
xor
dec
push
push
popf
push
adc
xchg
and
loopne
push
sarb
adc
enter
int3
add
pop
mov
loope
adc
into
popa
push
push
jle
jne
add
adc
aam
loopne
testl
dec
movsl
enter
push
push
lahf
ja
cltd
sbb
push
mov
cmpsb
jl
imul
push
push
in
adc
and
scas
or
pop
rorl
rclb
push
mov
xchg
orb
shll
sbb
cmp
mov
sub
and
fsubrs
cmp
jl
js
xor
add
filds
sbb
push
sbb
pop
xor
xorb
mov
idivl
ret
jno
sub
sbb
mov
cltd
pop
push
sti
inc
sbb
popa
in
out
sbb
mov
push
lea
xlat
hlt
sub
pop
pop
adc
push
out
mov
push
clc
lcall
sub
and
cmp
or
jmp
add
fimull
lock
mov
adc
pop
inc
mov
cmp
rcrl
adc
inc
xchg
pop
sbbl
add
jge
mov
mov
rclb
in
subb
sub
mov
in
sub
mov
xlat
dec
in
push
xchg
adc
mov
adc
sub
outsl
sbb
cmp
jo
sbb
mov
dec
jl
push
mov
mov
jo
jb
mov
es
outsb
orl
sub
dec
mov
pop
push
imul
rolb
jae
xchg
cmp
add
testl
jmp
lret
aad
mov
rcll
push
stos
xchg
dec
es
mov
and
das
hlt
call
cmpb
mov
scas
subl
addl
mov
shrb
adc
xchg
cmp
cmp
dec
push
xor
mov
mov
ret
int3
and
iret
lcall
cmp
test
test
pop
or
ret
add
mov
push
data16
repz
add
int
mov
out
ss
mov
xor
testl
cmp
cmpsb
push
cwtl
push
inc
add
xchg
xchg
push
pop
scas
testb
jecxz
push
pusha
sub
aas
cmpsb
pop
cmp
jg
mov
mov
xchg
cmp
cmp
mov
push
ret
xor
inc
adc
inc
adc
add
daa
mov
lcall
jb
push
inc
pop
cmc
ret
jp
push
or
inc
hlt
pushf
mov
ret
pop
ds
push
in
jo
cmp
lret
rol
sbb
jmp
push
in
add
loopne
ss
sub
xchg
rcrb
push
mov
out
add
es
xchg
sti
cmp
adc
or
cmp
pop
lret
in
xorb
add
add
mov
aad
cltd
xor
orl
cmp
push
mov
sbb
jnp
push
inc
test
add
jae
rolb
test
cltd
and
clc
pop
int
adc
test
int
mov
push
pop
mov
loopne
gs
mov
test
or
xor
stos
adc
loop
les
dec
in
cld
push
or
inc
cs
push
jb
shlb
clc
adc
cli
cwtl
ljmp
xor
sub
bound
add
cltd
in
mov
outsl
imul
fcoms
xchg
xlat
stc
push
cwtl
lcall
test
xorb
movsl
cmp
inc
fwait
push
add
xchg
shll
sbb
lcall
sub
ret
insb
xchg
addb
dec
mov
inc
mov
fisubl
jmp
dec
orb
mov
push
cmp
adc
cmp
mov
jge
cltd
add
jo
shll
inc
loope
lcall
data16
add
push
xor
push
sti
int
stos
dec
sub
repnz
cmp
inc
jae
adc
and
mov
lea
pop
sti
fisttps
std
dec
push
push
push
xchg
leave
dec
fcmovnb
sbb
jmp
scas
mov
cld
rcrb
jo
xlat
or
loopne
popf
orb
xor
scas
stos
push
sub
stos
inc
inc
ret
in
sbb
shr
stc
ror
sbb
cmpsb
push
sysret
cmpsb
adc
repz
sbb
push
gs
stos
add
add
hlt
lret
xchg
sbb
xchg
mov
popa
xchg
mov
ret
mov
aad
mov
xchg
inc
or
fs
sub
push
sti
mov
enter
inc
mov
test
add
ljmp
sbb
or
cmpsb
and
aam
scas
adc
dec
push
xlat
dec
inc
add
pop
in
push
pop
pop
inc
add
sub
and
pop
push
mov
mov
sub
lcall
sbb
iret
lea
push
sbb
int3
loopne
lock
xlat
xor
and
ja
pop
inc
daa
or
lcall
or
adc
pop
lods
jno
push
sub
sub
cmp
push
fcompl
ret
pop
pmulhuw
pop
loopne
push
rolb
add
sbb
inc
jb
loopne
mov
xor
arpl
dec
cmc
test
call
adc
mov
in
je
int
add
xchg
push
or
push
dec
in
add
fs
repz
cltd
andb
add
sbb
adc
test
stos
xlat
sbb
clc
out
call
add
xor
pop
inc
mov
ret
stos
add
add
inc
adc
orb
in
or
dec
imul
cmpsb
fidivrl
in
or
ja
adc
shll
add
or
or
jo
popa
sub
or
es
addb
add
or
pop
insb
mov
ljmp
shll
add
jecxz
adc
add
sbb
stos
push
stos
jge
push
cmp
aad
pusha
in
xorb
and
cmpsb
xlat
outsl
and
xor
jb
and
inc
call
lock
repnz
cmp
dec
adc
dec
out
into
adc
mov
jge
adc
aam
mov
cmp
push
lret
dec
iret
sub
add
ja
cs
xor
inc
and
xchg
jae
mov
gs
mov
inc
mov
jmp
inc
nop
mov
pop
push
cmp
xor
xchg
xchg
std
mov
push
push
addl
ss
pop
jmp
cmp
xchg
shrb
pop
add
push
cmp
add
push
scas
sbb
mov
scas
xor
cmp
dec
es
enter
scas
jle
push
out
test
sub
inc
shlb
loope
andb
mov
mov
sbb
inc
inc
bound
sbb
add
push
xlat
dec
add
insl
jbe
add
out
rclb
rolb
add
and
das
ja
stos
sub
push
jo
dec
test
pop
jns
inc
push
mov
aad
cmpsb
push
and
adcl
fstps
into
push
sbbl
mov
add
or
aad
push
lcall
sbb
xor
xor
lods
dec
jp
xor
cmp
jb
gs
jno
jp
pop
cmp
in
aaa
sbb
push
xor
and
loopne
xchg
ret
jno
imul
xchg
xchg
icebp
push
pushf
add
pop
adc
xor
xchg
mov
sbb
cwtl
sub
cmp
gs
outsl
lods
ljmp
es
sbb
inc
push
dec
inc
adc
or
icebp
adc
or
in
mov
dec
inc
xor
push
jmp
push
cld
out
cs
iret
or
dec
fnsave
mov
adc
lret
inc
in
push
jno
cmp
push
push
sub
sub
add
ljmp
cmp
adc
sbb
stos
roll
out
aaa
sbb
popf
test
dec
pop
js
lods
int
stos
pop
je
push
fsubs
popa
jb
or
sarb
cmpsb
or
cltd
pusha
fldcw
fsubrl
rcrb
add
inc
loopne
out
xchg
xchg
outsb
push
xchg
ret
loope
mov
scas
add
and
cmp
data16
inc
test
xor
inc
popa
orb
in
sub
jl
or
add
mov
sub
test
sbbl
push
xchg
scas
lcall
jnp
cs
xor
and
mov
adc
enter
stos
xor
stos
test
inc
xor
cltd
mov
or
leave
das
lds
sbb
movsl
hlt
adc
add
das
sahf
ss
xchg
js
test
push
xor
cwtl
lcall
fwait
xor
mov
mov
inc
icebp
cmp
scas
loop
fsubs
ljmp
shll
pop
test
loope
movsl
pop
pop
xchg
lret
sbb
mov
cs
test
add
idivb
cltd
sbb
pop
dec
inc
sar
aam
loope
into
xchg
bound
jae
dec
mov
sbb
jae
sub
dec
aad
aad
out
pop
dec
rcr
jmp
adc
cli
fsubr
mov
sub
push
sbb
inc
add
test
or
mov
cld
dec
add
add
dec
sbbb
loopne
ss
ss
sbb
dec
adc
or
cmpl
and
add
sti
in
push
sub
dec
dec
and
xor
inc
les
jno
push
inc
lock
sub
int3
sar
inc
add
fistps
ret
imul
mov
add
add
xchg
test
inc
das
outsb
sbb
cmp
push
lock
inc
aad
lahf
and
push
push
pop
inc
xchg
mov
mov
aam
or
in
add
mov
cs
rolb
adc
push
adc
mov
or
int3
aad
loopne
je
ds
sbb
add
add
repz
xor
in
mov
add
pop
and
jl
mov
push
leave
addr16
mov
adc
push
int3
lret
add
sub
sbb
mov
je
mov
xchg
xlat
pop
lds
mov
or
xor
cmp
push
lret
add
xchg
fsts
lret
or
mov
sbb
push
sbb
cmp
inc
mov
sub
movsl
mov
xor
shl
test
sbb
test
sbb
js
push
andl
jmp
leave
movsl
cmpl
fisubrs
inc
adc
outsl
mov
scas
push
cmpsb
imul
inc
mov
jb
rorb
cmp
mov
loope
loopne
xor
mov
mov
lret
adc
test
jmp
ret
xchg
add
pop
ret
scas
mov
cmp
sub
sbb
aam
or
sbb
mov
jnp
add
jb
jno,pt
sub
xchg
mov
test
push
lret
mov
adc
dec
cmp
inc
sub
cmp
pop
pusha
or
adc
in
movsl
iret
jo
out
shlb
orb
xchg
imul
jo
stos
xor
pop
or
imul
sbb
bound
adc
jo
les
inc
xchg
int
cmp
inc
imul
fwait
mov
sbb
xlat
and
mov
pop
pop
stos
mov
add
push
hlt
mov
cmp
stos
test
test
mov
test
inc
movsb
aas
jns
inc
or
jbe
push
rcll
cmp
xchg
and
movsl
jl
scas
sbbb
dec
inc
jle
inc
or
loope
roll
or
mov
scas
sub
nop
sti
jnp
addr16
adcb
push
add
dec
loopne
push
add
orl
push
sub
sub
pop
add
xor
int3
jae
aam
test
mov
sub
lret
sbb
decl
and
cltd
stos
ljmp
adc
imul
mov
push
and
mov
jge
jo
mov
rolb
enter
sub
and
adc
cmp
mov
pusha
ret
mov
lcall
iret
jmp
out
mov
pushf
in
jg
loop
or
push
jl
push
into
pusha
sub
je
adc
addr16
pop
xchg
pop
pop
arpl
orl
add
push
cmp
std
ljmp
jae
cmp
push
loopne
adc
add
add
jae
orl
shlb
xchg
arpl
sarb
repnz
pop
inc
jae
or
add
sub
jno
sub
stos
js
cmp
cmc
xchg
push
inc
jo
sbb
js
sahf
inc
or
inc
inc
mov
jae
rcrl
mov
inc
jno
add
js
xchg
movsb
out
mov
rolb
repz
mov
mov
mov
imul
lret
mov
and
jp
test
sub
inc
cwtl
enter
xor
xor
sbb
xchg
aas
or
or
bound
cmp
or
aas
push
xchg
mov
imul
jbe
or
jns
popa
jp
push
xchg
dec
pop
mov
lahf
jno
and
push
insl
mov
or
adc
jns
jp
mov
inc
sub
pop
fnstcw
mov
enter
scas
xor
inc
or
jge
out
jg
xchg
aad
sarb
xor
adc
add
lret
dec
dec
mov
sbb
cwtl
mov
out
stos
jb
in
int3
cmp
push
shrl
inc
stos
mov
adc
hlt
or
int
push
xor
mov
pop
sbb
mov
and
and
jo
btr
stos
mov
sbb
inc
xor
test
adc
je
cmpsb
xchg
ja
or
pop
rclb
fistpl
sbb
mov
adc
cmp
adc
mov
ret
mov
cs
push
sahf
pusha
pop
mov
ret
pop
xor
xchg
mov
jno
xor
sbb
push
in
push
or
push
mov
mov
inc
js
in
dec
push
pop
mov
push
aaa
sbb
inc
add
scas
pop
pop
mov
push
jo
in
xor
mov
cmpsl
out
aam
je
sbb
out
js
xchg
adc
adc
inc
jmp
mov
je
daa
mov
adc
aad
sbbl
jl
mov
and
mov
fnstenv
cmpl
adc
sub
adc
push
inc
pop
cmp
adc
xor
push
lods
jp
shl
mov
mov
push
subl
adc
dec
add
or
jo
adc
mov
mov
jo
orb
ror
pop
mov
stos
xor
push
push
mov
negb
hlt
pushf
bound
es
mov
or
nop
or
push
xor
mov
mov
sbb
jo
sbb
notl
cmp
imul
test
push
or
sbb
imul
icebp
aam
faddl
aam
aam
add
rolb
in
fstps
xor
ss
ds
mov
pop
loope
lods
sbb
push
cmpsb
mov
sbb
mov
lahf
nop
sub
scas
or
out
jle
sub
in
jge
lcall
xor
adc
mov
sbb
into
mov
push
orl
push
push
add
pop
push
xchg
cmp
inc
or
cmpsb
out
das
sbb
or
dec
pop
scas
xor
add
pop
ljmp
inc
in
pop
mov
imul
or
or
mov
inc
sbb
add
ss
pop
popa
stos
add
cmpsl
push
test
mov
sbb
nop
push
ret
ret
or
jo
es
or
jg
rcll
xor
leave
sbb
lret
xorb
xor
loopne
stos
es
sbb
pop
in
jne
add
xor
inc
mov
rcll
mov
push
push
sbb
jns
into
sbb
movb
add
cwtl
mov
xchg
jle
shrl
pop
and
loopne
push
pop
add
pushf
les
xor
jno
jno
push
loopne
enter
pop
mov
mov
xor
lahf
mov
adc
or
jecxz
sub
mov
cmp
icebp
aas
mov
lret
aam
popf
lcall
push
jb
push
jae
stc
in
sbb
jo
sbb
or
xchg
jno
fs
xor
rcrl
shl
jmp
pusha
jp
movsb
pop
ja
push
xchg
orl
loop
add
add
sub
mov
sub
cmc
pop
push
sbb
adc
sub
fwait
pusha
loopne
punpckhbw
push
xor
out
lods
pusha
divl
and
add
xchg
ret
or
jns
sub
shl
cltd
movsl
outsl
jl
or
in
sub
and
inc
into
adc
pop
loopne
cmp
rep
movsl
out
idivl
test
stos
movsb
xchg
xchg
into
inc
mov
inc
mov
stos
jo
adc
ret
cmp
adc
loop
lret
orl
jo
test
sub
hlt
inc
rcrl
cmp
push
cmp
pop
mov
push
pushf
stos
ficoms
push
sub
andb
enter
xor
lods
dec
jp
jmp
mov
jmp
or
sub
popf
decl
sub
and
cmp
hlt
imul
inc
pop
scas
and
cmp
xlat
xchg
lret
xlat
cltd
pushf
iret
or
inc
cmpsb
inc
fistpl
add
into
je
or
xor
sbb
mov
lret
or
sub
aad
xchg
aam
xchg
js
sbb
adc
mov
adc
mov
sub
inc
cmp
push
push
xchg
addr16
pusha
or
jb
and
push
cmp
ljmp
push
stc
adc
jecxz
jo
dec
jo,pn
mov
cmp
or
into
xor
pop
andl
pop
xor
add
add
sti
out
mov
jl
rcrl
test
sub
jecxz
adc
push
mov
popf
insb
xchg
repnz
or
imul
movsl
ret
add
dec
sub
and
out
add
and
ss
loope
inc
xor
sbb
jb
lret
jb,pn
sbb
ret
sbb
dec
test
mov
fmull
push
data16
mov
add
xchg
sbb
lret
pusha
adc
push
mov
iret
mov
mov
jo
or
rolb
jle
es
inc
lock
stc
mov
xchg
sub
mov
or
or
and
enter
ljmp
loop
ja
repnz
arpl
divl
imul
clc
aas
cld
sbb
mov
shll
jo
cmp
jo
lret
inc
sbb
adc
repz
test
outsb
mov
scas
popf
test
scas
xchg
or
mov
pusha
test
mov
loopne
sbb
clc
inc
ret
cmpb
ret
into
jo
cltd
push
stos
aam
es
push
mov
push
aad
pop
test
xchg
imul
lret
pop
sub
cmp
push
cmpsl
pop
add
sbbl
cmp
xchg
xchg
xchg
xor
add
aad
cmpsb
ja
jb
jae
rol
daa
test
and
push
inc
in
call
in
xchg
or
icebp
rclb
rolb
dec
adc
dec
int
mov
add
pop
scas
test
mov
repz
pop
xchg
pop
cmpsb
inc
cs
and
pcmpgtd
inc
xchg
inc
orb
pusha
stos
std
inc
jl
or
cltd
adc
push
sub
aad
and
jae
mov
push
fsubl
add
test
cmp
mov
xchg
addr16
faddl
cs
ljmp
mov
mov
mov
xor
jb
xor
jo
push
jb
enter
xchg
pop
cmpsb
mov
jmp
shll
aaa
push
cltd
stos
lcall
repnz
jle
xor
cli
das
pop
hlt
fsubrs
in
stos
lcall
movb
clc
mov
cli
mov
in
xchg
push
inc
xchg
pushf
pop
pop
aad
inc
ret
iret
sarl
push
push
add
call
add
jle
ljmp
jo
and
das
push
mov
movsl
popa
das
sbb
ss
mov
inc
aam
or
xor
hlt
dec
cli
xchg
fists
lret
mull
push
call
jl
cltd
adc
push
jbe
xlat
sti
sub
push
dec
in
inc
outsl
sub
roll
dec
or
aam
mov
cmp
sbb
hlt
push
icebp
xchg
movb
xchg
mov
andl
les
sbb
movsb
mov
mov
es
int3
inc
je
std
jmp
fsubs
add
mov
jnp
push
xor
loopne
mov
mov
in
inc
fcmovne
iret
mov
shr
arpl
adc
je
push
push
filds
inc
jle
jg
mov
in
sbb
fistpll
dec
add
adc
sub
je
jp
outsl
das
icebp
mov
mov
jp
inc
lock
sub
jecxz
or
stos
sbb
shl
push
push
mov
xchg
repz
adc
notl
or
mov
inc
pushf
push
je
or
adc
int3
cmpsl
sbbb
xor
lds
add
pop
jne
rclb
cs
lret
push
inc
xchg
and
loop
test
sbb
sub
jmp
shll
or
push
mov
dec
int
push
mov
mov
dec
add
int
clc
dec
icebp
stc
or
hlt
pop
jb
ja
sub
out
test
add
popf
push
push
add
and
or
pop
mov
mov
arpl
imul
rcrl
add
add
sbb
orb
xchg
adc
dec
jecxz
push
aad
add
sahf
fmul
mov
mov
mov
push
or
stc
xlat
xor
push
add
rol
lock
lret
stos
mov
adc
cwtl
out
sub
inc
pop
and
dec
aam
push
in
pusha
outsb
test
add
jo
inc
push
adc
les
inc
jne
add
sbb
mov
pushf
jmp
addl
pop
adc
outsb
shlb
das
xorl
pop
adc
dec
pop
cmp
pop
in
adc
or
imul
orb
das
std
mov
push
xorb
sbb
int3
jl
aas
sub
mov
push
xor
repnz
mov
push
sub
add
orl
lods
aas
push
dec
mov
aam
js
add
enter
les
xchg
shrb
inc
nop
dec
inc
ss
lods
xchg
enter
stos
arpl
add
adc
cltd
or
in
add
dec
adc
lahf
aaa
clc
jmp
stos
data16
dec
mov
lods
sub
dec
ret
push
xor
in
dec
and
jp
fidivl
xor
add
shlb
inc
xchg
jmp
fiaddl
dec
mov
dec
hlt
push
or
add
mov
hlt
mov
icebp
or
cmpsl
pop
push
shlb
daa
jge
add
jne
mov
in
sub
adc
jb
pop
push
shlb
pop
sub
push
or
fcoms
xchg
jecxz
testl
add
push
lds
add
lret
inc
adc
push
pop
test
or
into
mov
addl
sbb
stos
push
cld
pop
mov
push
or
add
add
lret
dec
jmp
or
xchg
ret
pushf
dec
loope
or
imul
cltd
sub
jl
std
popa
and
icebp
lret
cs
jp
inc
pop
push
inc
lods
xor
es
sub
adc
inc
cmpsb
pop
cmp
push
mov
adc
in
arpl
aaa
push
mov
test
and
cltd
pop
daa
sbb
lods
xor
cmp
add
lret
in
inc
pop
dec
xor
add
mov
inc
sub
leave
sub
add
xchg
aaa
inc
xchg
mov
or
loope
movsl
xlat
call
adc
decb
sbb
sub
and
loopne
test
popa
adc
pop
addb
jno
pop
loopne
inc
stos
ror
pop
or
call
scas
lds
out
lret
rolb
pop
nop
test
add
xor
mov
inc
pop
xchg
dec
or
mov
fimull
andl
das
adc
add
dec
inc
into
test
pop
std
pop
mov
xchg
pop
out
xor
int3
scas
inc
mov
aam
push
inc
or
aam
sbb
add
pop
push
sbb
int
sub
add
add
xchg
sbb
cwtl
jno
aam
sbbb
mov
mov
inc
push
or
popf
sbb
fs
pop
mov
stos
jns
push
sbb
test
inc
xchg
rol
aaa
insl
adc
adc
push
pop
lock
das
in
or
data16
mov
mov
dec
mov
dec
or
dec
shrb
pop
mov
shr
push
xchg
sub
leave
out
fidivl
ret
cmpb
cmc
jne
or
rclb
xor
jb
mov
pushf
xorl
xlat
lret
fimull
imul
push
sub
cmp
lret
sub
fwait
adc
stos
notb
or
and
fs
and
jle
orl
xor
cmp
add
sbb
jl
add
inc
add
mov
sub
and
push
xor
mul
stos
dec
cmp
mov
pop
adc
add
call
int
popa
sbb
mov
mov
jb
mov
shll
dec
sbb
bound
mov
xor
rorl
push
push
mov
push
mov
out
jnp
andb
sbb
test
adc
add
ret
cmpsl
push
push
es
rcrb
add
mov
ret
inc
push
xor
cmpsl
pushf
and
adc
xchg
imul
xor
lret
lahf
sbb
rol
xchg
pop
mov
scas
outsl
jb
aam
adc
mov
imul
cmpl
dec
adc
mov
es
push
inc
xchg
xchg
movsl
clc
mov
fmuls
clc
ficoms
sbb
popa
mov
or
mov
mov
fnsave
add
int3
cmp
cltd
popf
sbb
sub
inc
cmpsl
mov
jo
xor
or
cld
or
push
pop
icebp
and
roll
jg
xor
push
int3
jl
cli
cld
mov
pop
or
inc
dec
sahf
add
pop
sbb
sbb
dec
rorb
push
push
out
xchg
pop
lahf
aaa
cmp
sub
dec
push
loope
je
mov
fistpl
icebp
mov
cmpb
adc
dec
push
inc
loopne
or
sbb
jno
mov
push
adc
stos
and
rorb
cmp
fcmovnu
dec
and
inc
aad
dec
enter
add
mov
xchg
jno
andb
into
data16
ror
lret
in
add
lcall
in
jno
popf
mov
leave
mov
ds
incl
lods
ret
dec
mov
inc
xor
bound
push
or
cmp
cld
add
dec
sbb
and
mov
test
test
mov
push
mov
inc
ja
in
inc
push
mov
xor
adc
sub
leave
repnz
push
aaa
and
inc
jne
stos
test
push
mov
mov
cwtl
sbb
sub
fs
inc
test
sbb
sub
mov
jo
ret
inc
dec
push
add
inc
sbb
adc
push
jmp
adc
cltd
or
xchg
push
inc
add
xchg
test
mov
push
sbb
mov
adc
in
call
inc
push
mov
mov
inc
in
out
loope
push
mov
into
lods
and
imul
inc
jnp
sub
or
inc
sub
sub
mov
pop
xchg
pop
push
mov
xor
push
or
rcrb
sub
push
sahf
in
loop
stos
fs
lds
enter
adc
push
stos
jbe
inc
mov
fisubrl
rolb
mov
andl
inc
xchg
daa
dec
cmpsb
jb
mov
cmpsb
inc
mov
pushf
and
cmc
sahf
xchg
lret
xchg
cmpsl
or
imul
mov
push
jb
xchg
adc
push
fs
mov
sub
add
pop
std
arpl
loop
add
pop
push
pusha
push
push
xor
xor
adc
nop
push
pop
outsb
hlt
movsb
and
inc
call
pop
in
dec
add
dec
ret
or
adc
ret
enter
cmp
enter
es
imul
mov
cmp
call
or
pop
add
xchg
dec
test
adc
xchg
mov
or
cmp
jns
leave
dec
add
cwtl
sub
jnp
add
movb
sub
iret
sub
inc
lcall
adc
in
jne
sbb
shr
mov
movsl
or
in
dec
push
mov
fwait
adc
mov
cld
pop
add
inc
je
mov
fnstcw
mov
adc
mov
xor
push
jmp
shlb
hlt
inc
pop
dec
ret
cmp
je
popa
std
pop
push
push
add
push
ds
movsb
or
out
orb
sbb
dec
or
dec
std
push
xor
dec
outsb
cltd
sub
cld
jno
jae
mov
sub
fdivr
ljmp
and
adc
xchg
das
dec
or
decl
sub
roll
cmp
xchg
insb
or
xchg
jmp
and
jle
pop
loope
xor
roll
enter
adc
dec
fcmovb
mov
inc
sbb
js
jb
inc
hlt
and
xor
fs
cwtl
mov
sbb
add
ss
mov
cmp
frstor
cmp
inc
pop
cmpsl
inc
jae
dec
mov
cmp
xchg
leave
rolb
mov
fidivrs
push
mov
push
stos
xor
pushf
add
sbb
int
popa
cmp
xchg
cltd
cltd
sub
ficoml
ja
rcrb
sahf
iret
xor
xchg
and
mov
loope
pushf
mov
lcall
jae
sbb
cmp
pop
mov
mov
insl
popa
mov
mov
xor
or
add
popa
shrb
lea
xorl
pop
sbb
int
inc
push
pop
xor
add
push
cltd
lods
jmp
mov
loopne
inc
lds
lret
cld
icebp
push
mov
adc
or
cs
cmp
xor
mov
sub
push
inc
mov
pop
es
ja
add
inc
nop
or
jb
lock
xorb
sar
stos
add
push
sbb
jecxz
ret
stos
jb
mov
jb
or
push
imul
and
subb
aam
lret
pop
push
inc
cs
pop
pop
jbe
loopne
lret
out
andb
xchg
std
jnp
inc
add
aad
lahf
inc
xchg
lods
xchg
pop
add
div
test
push
shll
cltd
push
add
fidivrl
es
xchg
add
dec
cli
int3
push
push
push
hlt
or
into
mov
push
and
or
mov
mov
arpl
push
or
int3
add
cs
cmpsl
and
pop
inc
vpand
or
adc
inc
out
mov
jp
dec
push
mov
testl
adc
rclb
pop
add
mov
xchg
jmp
xorb
out
int
inc
and
pop
adc
sbb
inc
lods
les
dec
hlt
add
pop
jno
adc
mov
fimuls
lret
int
pop
dec
ja
pop
lret
mov
or
pop
inc
xchg
sbb
in
in
jecxz
pushl
adc
and
mov
ds
or
push
shlb
aam
push
add
adc
in
out
fistps
rol
rolb
or
mov
sbb
arpl
mov
add
inc
je
cmpb
call
mov
adc
shll
jecxz
out
orb
sub
cmp
mov
test
or
pop
lock
out
rcrl
sub
xchg
and
cmc
adc
jg
insl
test
jb
cmp
jecxz
xor
sub
xor
cmp
ja
out
push
cmp
movsl
out
sbb
sbb
mov
int3
cmp
and
les
or
test
ja
sub
jecxz
xor
cmpsb
jmp
push
lret
mov
sbb
push
inc
or
add
inc
cmc
dec
fcoms
divl
ror
sti
inc
sbb
adc
rcrl
jle
dec
xor
add
repz
pop
mov
adc
test
xor
fwait
sti
add
fists
inc
adc
xchg
and
and
mov
cmp
mov
pop
jnp
adc
pop
push
test
or
js
test
ret
out
xchg
enter
clc
ds
pop
dec
hlt
inc
jbe
inc
sub
jge
mov
or
add
adc
data16
fistpll
inc
test
in
mov
cmp
add
imul
iret
xlat
push
aam
frstor
rcr
push
nop
inc
cmp
adc
mov
ret
push
fs
cld
and
out
mov
fstl
pusha
loopne
shl
stos
stos
inc
mov
stos
or
xchg
ret
mov
enter
jne
jb
fldenv
sub
push
and
push
popf
or
ror
sbb
dec
stos
enter
push
sbb
mov
test
movsl
push
sub
adc
or
aam
cmp
dec
pop
push
xor
nop
dec
xor
adc
jecxz
and
lods
inc
cmpsb
sub
cmp
jo
or
add
test
add
loop
sbb
push
inc
jmp
push
cmp
sub
pop
push
test
cmpsl
or
inc
testb
push
cmp
push
rcrb
loope
dec
test
sbbb
push
scas
and
scas
push
in
jle
or
aad
or
and
push
je
imul
pop
les
sbb
dec
aad
aad
loope
mov
jo
add
cmp
jae
ja,pt
pop
jp
sbb
sbb
sti
lret
js
sub
push
push
add
pusha
and
adc
inc
jno
inc
icebp
adc
call
movsl
add
pop
stos
inc
jae
iret
iret
mov
dec
mov
mov
ret
and
pop
nop
add
mov
or
dec
adc
mov
mov
inc
pop
inc
push
or
adc
sbb
gs
and
pop
and
rorb
shlb
xor
ss
jo
dec
push
inc
popa
dec
xchg
out
lods
andl
add
loopne
and
lock
xchg
xor
mov
fwait
sub
lock
repnz
cmp
push
add
or
inc
popa
cmp
icebp
sbb
xchg
sti
cmpsb
shlb
mov
jmp
inc
cmp
push
or
mov
cmpb
push
mov
and
push
mov
xchg
cmp
or
les
test
xor
add
mov
hlt
syscall
mov
dec
sbbl
sub
call
fwait
mov
call
xchg
arpl
js
xchg
add
jp
inc
or
test
xor
xor
push
lahf
jge
add
mov
push
push
scas
add
adc
inc
push
or
mov
cmp
rclb
jbe
push
mov
add
mov
subb
dec
stos
and
sub
mov
call
push
js
pushf
mov
xchg
ret
loope
mov
hlt
cltd
fcoms
or
pusha
jmp
push
jp
and
mov
movb
scas
push
insl
pop
cmp
add
loopne
scas
ja
xor
and
adc
les
stos
jo
lds
push
push
adc
push
pop
jnp
mov
or
inc
push
xchg
or
sbb
adc
icebp
fldt
adc
sarl
pop
arpl
in
movsb
push
inc
es
push
loopne
and
cmp
and
add
cwtl
push
cmp
or
sbb
dec
jp
in
xchg
aaa
adc
rclb
xchg
jae
es
cwtl
fimull
sub
inc
adc
push
int
push
and
inc
pop
scas
test
push
pop
subb
loop
cmp
jo
cwtl
dec
int
loope
xchg
outsb
cltd
add
inc
scas
add
add
or
pusha
rolb
test
inc
nop
cld
lds
ja
xchg
hlt
incl
mov
xor
mov
jle
daa
mov
xor
xchg
jl
js
push
lret
movsb
jae
lret
xchg
adc
mov
mov
pop
stos
popa
je
push
pop
cmova
cmp
xchg
sbb
and
inc
je
rcrl
sub
mov
and
inc
sahf
add
adc
sbb
jg
and
jp
dec
in
rcl
push
mov
or
test
ret
shll
fwait
jb
arpl
nop
orb
cmp
cltd
rcr
bnd
xchg
in
adc
arpl
aad
fwait
pop
repnz
or
add
push
adc
iret
fisttps
loopne
xchg
aad
mov
adc
pop
jo
daa
mov
cmp
es
dec
add
adc
cmp
cmpsl
mov
bound
cmpb
xor
aaa
ljmp
or
sub
mov
add
jle
sbb
xor
and
mov
sub
or
or
cmp
cmp
sub
gs
push
mov
xor
and
jecxz
add
insb
jmp
jb
sub
aam
jno
cmc
dec
int
push
enter
mov
xchg
jae
in
jo
xor
xchg
dec
orb
push
sbb
sbb
xchg
or
lods
lcall
aad
xor
rorb
nop
push
popa
mov
xor
divl
adc
popa
or
xchg
cmc
mov
int
pop
mov
push
push
sub
mov
inc
addr16
jnp
ja
cld
aas
mov
div
mov
push
push
push
fcoms
sbb
adc
into
add
test
mov
stos
inc
cmpsl
hlt
and
lods
or
mov
push
xor
or
lods
push
mov
cmpsl
outsb
sub
hlt
adc
js
mov
push
les
jb
das
imul
lds
out
push
sub
push
fiadds
sub
push
cmpl
shr
jne
add
and
dec
inc
dec
sub
scas
dec
testb
adc
dec
mov
adc
cmp
cmp
push
inc
add
xor
sub
mov
add
fiadds
dec
sub
lret
sub
in
sbb
push
cmp
std
mov
push
enter
push
adc
fs
adc
aaa
add
roll
out
cmc
in
popa
test
std
mov
push
popa
add
jne
je
xlat
test
enter
or
inc
jo
adc
test
jo
jbe
pop
mov
lcall
cmp
inc
push
cs
add
xchg
mov
add
or
fstps
or
jle
add
test
pop
xor
push
pop
in
xchg
nop
sub
lret
mov
adc
mov
add
inc
cltd
dec
test
sub
or
sbb
sahf
cld
test
adc
les
add
inc
mov
inc
pusha
sub
stos
jp
or
lcall
push
xor
and
add
jo
repnz
and
dec
adc
adc
push
push
push
push
fdivrs
pop
jne
rorb
adc
into
dec
adc
pop
js
mov
adc
popa
in
inc
and
dec
fsubs
in
push
sarl
mov
lret
xor
stc
xor
dec
xchg
cs
inc
stos
adc
jnp
jo
mov
push
pop
sub
clc
inc
pushf
sub
push
pop
inc
push
lret
adc
dec
stos
jb
shlb
cltd
cwtl
dec
push
xor
roll
mov
cmp
fdivl
push
ret
rorb
andl
sbb
push
push
jb
mov
add
or
int
add
add
dec
ss
mov
and
mov
jp
and
pop
not
pop
and
jb
mov
dec
stos
mov
xchg
inc
rcrb
cwtl
pop
and
mov
push
ds
lea
sub
popf
jb
xchg
orl
js
rorl
or
xchg
inc
cmpsb
push
lahf
movsb
lds
addb
int
in
lret
add
mov
push
push
sub
xor
andb
push
sub
loope
scas
ljmp
stos
adc
rorb
pusha
popa
cmp
inc
jae
sub
mov
inc
cmp
stos
push
push
adc
xchg
orl
xor
pusha
sbb
out
push
xchg
mov
sub
sbb
inc
les
mov
sbb
push
pop
pushf
mov
scas
adc
xor
pop
sub
lods
in
add
js
push
rcrl
xchg
lea
scas
mov
sub
call
push
int
jns
leave
nop
and
ds
fs
jne
or
dec
int3
and
add
pop
add
inc
test
and
loop
jae
dec
addr16
push
subl
leave
xor
shlb
or
push
test
add
loope
cmp
push
fdivrp
sbb
das
addb
or
inc
and
adc
jbe
pushf
mov
jg
loop
xor
fwait
mov
sahf
loop
inc
cmpsb
enter
jmp
test
in
shlb
loop
cltd
lcall
sbb
sub
in
ja
push
xor
pop
lods
jmp
shlb
addr16
rorb
jne
push
test
fidivrs
add
cmp
cmp
and
jo
pop
clc
pop
mov
mov
sub
jo
mov
sarb
push
pop
xchg
in
mov
sbb
lds
cmp
aad
jb
push
push
inc
jae
jnp
jb
sub
out
ret
testb
xor
fsubrl
inc
subl
mov
pop
divb
and
xor
ljmp
mov
push
cs
or
adc
xchg
stos
and
or
jb
xlat
pop
fs
insb
dec
shll
mov
xchg
mov
lret
pop
imul
dec
push
ss
stos
pop
inc
mov
flds
push
fs
push
cmp
or
push
cmp
cltd
rorl
pop
loope
pop
mov
and
rcl
ljmp
dec
jo
lock
sub
push
pop
fdivrl
inc
jae
xor
jl
rclb
and
add
pop
xchg
or
out
dec
in
ficomps
subl
les
mov
xchg
shll
sub
loop
and
cmp
mov
push
xchg
push
push
mov
adc
sub
push
push
xchg
mov
jmp
call
jmp
movsl
dec
mov
push
or
sti
lods
test
pop
add
out
ljmp
fcoms
lods
cmpsb
sub
xor
arpl
xchg
subl
rorl
mov
mov
mov
test
inc
test
inc
adc
inc
cs
mov
andl
and
mov
add
inc
into
imull
loop
fs
or
sub
pop
sarb
push
mov
cmp
scas
xchg
fcomps
jmp
jae
test
sbb
adc
sbb
add
es
in
lea
xor
xor
stos
pushf
xor
mov
mov
or
gs
push
verw
push
test
xor
cltd
push
sbb
sbb
pop
mov
cs
int
mov
sbb
scas
push
cmp
push
adc
jo
pop
add
sub
mov
subb
or
adc
fbstp
adc
sbb
inc
xor
jnp
jo
cmp
lock
push
and
ret
push
gs
mov
daa
loop
adc
shlb
add
xor
and
push
idiv
xor
lcall
movsl
and
xor
mov
mov
jo
das
or
test
push
xchg
nop
add
lret
test
sub
and
mov
jl
sub
xchg
mov
xchg
stos
jo
imul
or
stos
inc
cld
sbb
cwtl
inc
dec
enter
in
enter
mov
loopne
inc
add
mov
lods
mov
rclb
mov
aas
jmp
or
lock
sub
sbb
insl
pop
adc
inc
sub
movsb
push
lea
push
inc
ret
jge
pop
sub
add
pushf
sbb
lret
orb
dec
mov
sub
add
inc
ret
test
push
popl
xor
push
orl
imul
inc
mov
adc
and
inc
sub
or
jne
int3
push
aam
jno
mov
add
or
add
and
sbb
add
mov
mov
mov
sub
mov
mov
and
lock
sub
sbb
imull
mov
sbb
adc
adcl
xchg
sbb
mov
fiadds
push
and
inc
je
ret
arpl
insl
rcr
cwtl
adc
popa
xor
mov
ret
cmpsl
test
rcll
adc
adc
nop
dec
inc
mov
xchg
sbb
out
mov
shlb
mov
dec
cli
js
rclb
inc
adc
xchg
imul
test
xchg
call
sub
add
sbbl
add
or
inc
sbb
stos
add
insl
inc
xchg
or
sbb
enter
call
mov
pop
and
fistps
add
adc
dec
push
daa
clc
testl
pop
and
mov
aad
sbb
cmpb
xor
les
cmp
jo
lock
jae
mov
jo
jb
lret
jo
mov
push
sbbl
mov
xchg
xor
aad
adc
hlt
mov
adc
movsb
scas
adc
ljmp
pushf
mov
push
mov
addl
fisubrl
mov
or
or
pop
test
scas
sbb
add
pop
pop
or
enter
mov
mov
xchg
scas
dec
rorl
cmpsb
test
adcl
andb
iret
rcrl
push
jl
loopne
xor
add
stos
push
mov
andb
cmp
pusha
test
fnstcw
int
dec
mov
lds
or
stos
ret
cmp
xor
out
pop
xchg
out
lods
xchg
inc
sbb
sub
push
mov
mov
push
jbe
ret
in
or
push
mov
sub
xchg
test
pop
mov
dec
adc
cmc
inc
or
stc
call
push
sarl
pop
les
ror
das
pop
push
in
outsl
fimull
push
push
sbbl
mov
add
push
push
movsl
inc
sub
add
fcoms
mov
add
or
inc
pop
ret
xor
pop
scas
das
hlt
leave
ret
jbe
push
push
sbb
mov
dec
in
mov
loopne
test
loop
adc
sbb
or
fsubrs
mov
stos
testl
mov
adc
sbb
shr
test
jno
sub
sub
adc
add
loope
or
in
gs
je
and
push
xor
rclb
or
pop
sahf
xchg
out
shll
and
push
pop
or
mov
xor
andl
shll
pop
cmpsb
inc
xor
cmc
subl
pop
popa
cli
sbb
xlat
in
or
enter
xchg
xor
ljmp
es
mov
scas
lods
dec
jo
xchg
lds
xor
pop
cs
sbb
add
inc
xchg
lods
adc
std
push
test
push
mov
in
inc
shrl
lret
xchg
push
mov
stc
das
js
sbb
cmpsb
stos
mov
lret
popa
ficompl
pushf
and
fcmovu
mov
dec
push
cltd
lret
and
aad
inc
outsb
pusha
jo
jo
shlb
lock
adc
int
test
pop
cmpsl
xor
jl
xchg
jmp
leave
movsl
fimull
sub
sbbb
inc
mov
push
jae
and
xor
cli
into
push
push
inc
loop
outsb
loope
lcall
sub
cltd
inc
adc
lret
out
push
add
ljmp
cs
rcll
stc
adc
mov
daa
xor
pop
or
inc
test
stc
jae
sbb
adc
cmpl
and
mov
sub
mov
in
shll
mov
sbb
lds
cmp
dec
dec
ss
test
out
lret
xor
out
popa
and
jne
stos
out
orb
stos
adc
cmp
addb
adc
repnz
loopne
mov
xor
push
test
das
and
pushf
andb
inc
bound
inc
arpl
out
orl
push
mov
mov
sbb
cmpsl
popf
hlt
sbb
pop
push
popf
and
inc
sarl
xor
dec
jb
int3
stos
cmp
test
popf
or
xor
icebp
out
sbb
bound
ret
ja
cwtl
pop
data16
mov
push
jae
xchg
stos
sbb
stos
lods
push
xchg
adc
dec
inc
sub
jae
push
fisubl
sub
movsl
sarb
or
lea
xor
adc
addb
gs
sbb
loopne
test
push
mov
push
push
aad
or
shlb
xor
cmp
jb
xchg
jnp
mov
cmpsl
add
fcoml
push
pop
sub
mov
jb
sbb
mov
and
dec
fisubl
push
int
cmp
add
popf
pop
adc
jno
push
cmpsl
into
xlat
testl
mov
cmp
xchg
addr16
jb
sub
cltd
les
add
addr16
sub
dec
fs
in
and
adc
sub
mov
pop
out
cli
mov
pop
jnp
add
cltd
jb
movsl
iret
dec
cmp
mov
adc
cmp
mov
daa
sub
cmp
push
inc
fcompl
mov
popa
cmc
ja
xchg
xor
and
clc
mov
sub
xchg
imul
outsl
xor
pop
test
jo
add
or
pop
xor
pushf
test
in
cmpsl
dec
aam
xor
rcll
in
xchg
adcb
aad
roll
sbb
fisttpl
faddl
cwtl
or
fisubrs
mov
or
xchg
lahf
jo
test
add
mov
stos
xchg
push
scas
pop
test
mov
ljmp
cmc
pop
test
sbb
pop
cmp
aaa
flds
lret
mov
pop
daa
xor
mov
push
xor
insl
xlat
jnp
or
gs
xchg
add
add
inc
out
add
in
es
fimull
pop
push
xchg
add
inc
mov
add
mov
and
jno
jbe
xchg
or
std
lcall
js
movsl
mov
jmp
jmp
fcmovnb
cli
cmp
mov
rorb
xlat
sbb
xor
add
cmp
jno
mov
jns
jae
xor
adc
sbb
pop
inc
dec
daa
xchg
shlb
inc
mov
out
or
pusha
aam
push
js
rcl
scas
out
and
sub
out
push
push
sub
sbb
cltd
mov
pusha
xor
push
orl
push
xor
or
and
loop
sbb
pop
pushf
jmp
jb
add
out
fcmovbe
ret
sbb
call
mov
push
sbb
push
out
add
ret
inc
into
gs
pusha
jg
xor
mov
add
loopne
mov
adc
rclb
cmc
pushf
imul
pop
dec
fsubrs
or
mov
mov
andb
dec
sbb
cmp
jne
or
jb
outsb
sub
push
mov
jns
mov
insl
lods
mov
lods
add
test
mov
in
cmp
xchg
mov
add
xorb
push
movsl
xor
gs
enter
outsl
mov
leave
push
sbbb
test
sub
pop
in
xchg
loop
pop
dec
das
addb
xor
cs
pop
jno
imul
call
orl
cmpsb
pop
mov
mov
pop
stc
pop
mov
jle
inc
and
sbb
add
fistpl
or
cmp
outsl
push
jno
ja
adc
insb
ror
sub
xchg
inc
cmpl
int3
add
add
mov
push
cwtl
pop
mov
mov
dec
add
jb
dec
push
jno
and
sbb
push
mov
sub
and
orb
imul
out
ret
sbb
or
mov
add
jb
imul
test
rol
push
roll
jae
push
xchg
dec
pusha
das
mov
jmp
aam
lods
test
add
adc
adc
add
adc
fisubs
pusha
leave
xchg
inc
fcomip
xor
out
mov
add
rcl
add
movsl
movaps
dec
inc
add
lldt
movsb
sub
push
addr16
jle
int3
lods
jno
pop
aam
dec
jbe
mov
jo
cmp
or
mov
inc
ljmp
jbe
mov
adc
cld
jo
adc
test
and
sbb
sub
sbb
stc
cmpb
cmp
orps
mov
cmp
cli
popf
mov
lods
push
mov
mov
data16
mov
pop
sbb
mov
repnz
xor
inc
add
or
adc
add
out
pop
and
or
push
je
inc
es
jo
sbb
sub
push
cmp
pusha
xchg
xor
xchg
pop
push
leave
clc
cmp
adc
pop
ret
add
ret
mov
movsl
cltd
mov
shrl
stos
adc
dec
sub
fidivrl
add
xorb
cmp
xor
xchg
js
and
in
sbb
mov
cltd
add
js
add
fcoms
and
inc
add
push
add
jae
test
add
adc
scas
mov
in
inc
xchg
lret
dec
pop
cmp
adc
cmpsb
ret
and
mov
push
inc
xor
xor
push
adcl
aam
adc
outsb
out
imul
scas
cld
dec
inc
into
inc
imul
gs
xchg
mov
and
xor
or
jnp
dec
subl
sbb
adc
push
and
cmp
stos
subl
rolb
rclb
cltd
dec
and
les
add
mov
xchg
dec
pop
sbb
inc
int
in
orl
fcmovb
add
push
mov
cwtl
lods
xlat
jb
aad
cmpsl
jae
scas
pop
sbb
add
leave
and
mov
aad
in
adc
inc
add
or
int3
push
add
pop
add
dec
shll
dec
inc
adc
mov
shlb
ret
iret
adc
add
xchg
stc
jb
xor
mov
add
mov
jmp
push
xchg
call
xchg
add
xchg
mov
fldl
rclb
push
mov
aaa
sbb
clc
or
int3
stos
ror
mov
mov
xor
dec
sub
fdivr
push
rcll
or
inc
adc
cmpsl
inc
stos
or
jae
cmp
push
add
shlb
sub
add
push
xchg
lods
out
fs
test
lret
adc
adc
pop
inc
xchg
add
mov
inc
data16
gs
fidivl
aam
push
xchg
pop
inc
jb
jne
jmp
add
dec
lcall
pop
lret
mov
inc
out
cltd
loopne
shrb
sbb
scas
add
pop
or
cmp
aad
dec
push
lds
push
cmpsb
mov
es
je
rolb
add
inc
inc
jmp
rorb
inc
adc
cltd
enter
gs
mov
mov
jb
rcl
lahf
fistpll
in
and
inc
in
sub
out
cmpsl
xor
gs
xor
push
call
psubsb
inc
icebp
lods
sbb
sbb
or
subb
inc
xor
or
out
aam
dec
add
fs
outsl
mov
inc
enter
lcall
jg
sub
or
test
jne
xchg
xor
popa
stos
inc
daa
and
into
nop
add
daa
mov
mov
push
jmp
or
cmp
adcl
fiaddl
push
push
xlat
mov
test
inc
and
stc
jg
mov
je
xchg
out
sbb
cwtl
lock
mov
movsb
mov
and
insl
clc
les
cmp
sbb
add
jge
sub
cmp
hlt
sub
inc
shlb
mov
mov
movl
dec
cs
and
add
push
add
sbb
push
mov
mov
sti
dec
sbb
dec
push
cmp
cmp
fimuls
movsb
push
mov
ds
les
pop
inc
sbb
xlat
inc
orb
inc
xor
jbe
outsb
shll
aam
or
orb
insb
and
push
sbb
push
sbb
adc
inc
mov
mov
dec
clc
les
inc
hlt
gs
jbe
cmpsb
pop
test
adc
loope
adc
mov
dec
xchg
inc
clc
fstl
in
adc
push
sub
cmp
les
cld
mov
in
rcr
sbb
mov
icebp
iret
mov
cmp
add
mov
pop
add
pop
pop
sbb
mov
jno
bound
bound
xorl
into
xchg
repz
call
and
sbb
add
scas
mov
cmp
mov
popa
push
push
mov
inc
test
sbb
jp
cmp
js
aas
lds
lret
aam
loope
loope
nop
popf
subl
jne
subb
xor
dec
mov
push
test
cmpsb
mov
es
push
mov
cwtl
cltd
test
filds
mov
rclb
dec
jae
adc
arpl
mov
add
lahf
pop
sti
xchg
push
add
sub
cmp
mov
aas
or
lret
in
dec
xchg
mov
out
mov
pusha
out
cltd
test
and
pop
push
rorl
in
in
subl
or
mov
adc
adc
push
loopne
pop
xchg
mov
cwtl
xor
pop
cmp
dec
mov
scas
sbb
mov
push
jnp
rcll
sbb
sti
dec
or
arpl
mov
push
push
push
push
sbb
cld
pop
add
scas
and
and
xchg
pop
xor
scas
cli
push
xchg
mov
cmp
add
jnp
cmp
loopne
js
pop
pop
stos
add
sub
cmp
lret
shlb
push
shl
adc
jp
data16
shlb
movq
cmp
inc
test
cmc
inc
fidivl
push
movsl
sub
fwait
sub
adc
sbbl
enter
cmp
dec
cmp
decl
pusha
div
das
movsb
pushf
sbb
arpl
push
xchg
sbbl
dec
xor
lret
adc
push
adc
in
push
xor
aad
dec
in
push
iret
mov
inc
orl
repz
ret
das
mov
lods
stos
pop
or
inc
and
cmp
xchg
rol
test
sbb
push
adcb
or
push
mov
dec
adc
and
aaa
jb
and
push
leave
icebp
or
mov
jno
into
addl
pop
add
push
push
hlt
push
cmp
insl
inc
mov
inc
xor
and
out
xchg
adc
lds
inc
in
cld
or
jbe
jge
add
mov
add
repnz
sub
movl
push
xchg
mov
mov
sub
mov
add
inc
xchg
push
mov
jae
jo
mov
sub
xchg
cmc
test
sbb
xchg
add
or
xor
mov
push
and
sub
sbb
jmp
sub
mov
test
inc
int
jae
addb
test
adc
out
int
sub
add
pop
or
aaa
mov
je
jno
xor
loopne
jmp
cmp
jnp
cmp
xor
outsl
mov
adc
inc
js
push
pusha
jo
inc
pop
sbb
inc
mov
push
jge
and
xchg
test
sub
imul
and
lret
loopne
sbb
sbb
mov
sbb
test
std
add
or
inc
jp
lock
adc
adc
inc
xchg
test
add
loopne
push
cld
mov
cmp
gs
push
push
mov
in
add
pop
insb
adc
call
popf
push
xor
adc
or
imul
dec
add
sbb
sub
test
add
loopne
xchg
add
xchg
sbb
cmpsl
push
jo
shrb
loopne
mov
test
lahf
in
xor
cmp
bound
jmp
das
sub
rcr
cmpsb
insb
sti
sub
pop
sub
jne
mov
movsl
pop
push
push
mov
jecxz
push
scas
ss
mov
nop
or
insl
inc
enter
mov
addl
sbb
sbb
pushf
xor
dec
int
js
dec
fcomi
in
inc
add
imul
out
adc
jnp
mov
popf
pop
xchg
into
adc
xchg
cmp
xchg
push
outsl
sub
dec
pop
pop
pop
scas
push
test
pop
and
and
mov
inc
shrl
movsb
add
cmp
call
xchg
loop
cltd
xchg
jmp
xchg
and
adc
sbb
and
movsl
jb
push
pop
jo
leave
shrl
mov
sbb
repnz
lret
xor
aam
ret
add
sbb
cmp
sbb
push
and
jo
jo
push
in
dec
mov
mov
cmp
xchg
xor
daa
mov
stos
jo
inc
inc
lods
js
lods
xor
cmp
cltd
repnz
cs
push
lret
in
pop
and
stos
test
add
sbb
les
xchg
bound
jb
pop
jae
and
in
outsb
pusha
shl
mov
push
jecxz
cmpsl
mov
rolb
push
gs
push
adc
cmp
push
pop
mov
or
xchg
rcrl
loopne
cwtl
or
dec
fdivr
pop
and
ljmp
les
jg
js
sbbb
xorl
fnsave
pop
stc
adc
stos
mov
sub
test
xchg
or
shl
mov
fsubp
add
loop
andb
inc
pusha
test
jo
xor
pop
pop
imul
stos
push
scas
add
aaa
add
mov
xor
into
adc
imul
mov
adc
mov
ret
call
das
push
adc
enter
imul
sub
add
clc
mov
ja
push
cmp
shll
xor
or
add
adc
or
adc
shrl
push
lds
pusha
jo
and
or
das
and
daa
pop
push
aad
dec
cmpl
xor
es
adc
jp
push
int
aad
mov
mov
test
xchg
loop
xchg
adc
test
dec
push
call
movsb
daa
es
push
cmp
mov
push
mov
inc
mov
aam
sub
push
mov
inc
fwait
leave
daa
or
nop
jl
leave
xor
les
sbb
dec
outsl
add
push
mov
out
popa
test
pop
stos
jb
jp
ret
or
push
cltd
jo
xchg
pop
add
xor
jge
inc
cmp
adc
int
out
mov
aad
push
mov
loopne
push
sar
jg
stos
add
inc
jg
mov
andb
jnp
push
push
mov
addr16
imul
fnstenv
ret
lret
xor
xchg
fcomps
out
out
sbb
pushf
data16
mov
sbb
sub
loope
int
mov
movsl
or
pushf
dec
xchg
stos
js
sbb
mov
adc
sbb
inc
ss
pop
add
mov
mov
jo
test
fcom
or
icebp
les
pusha
rolb
stos
mov
dec
aas
movsl
sbb
cmp
fimull
pop
daa
xchg
movsl
sti
sqrtps
pop
cmp
ja
jb
add
movsb
dec
lcall
pop
add
sbb
je
loopne
dec
adc
je
in
ret
xchg
sub
adc
adc
fsubl
stos
stos
pop
test
orl
lcall
nop
xchg
sbb
sbb
inc
pop
mov
js
pop
mov
stos
push
sbb
test
or
jmp
xlat
and
addl
and
add
xchg
ret
mov
addr16
dec
pop
ds
add
clc
jb
xchg
dec
test
xor
sbb
pop
mov
stos
mov
sbb
adcb
mov
mov
mov
mov
lock
xor
pusha
fisubrl
out
std
int3
fstl
rol
jne
cmp
add
adc
jg
add
ficoml
adc
xor
xor
out
js
testl
push
cmp
add
mov
cs
dec
pop
or
xchg
test
leave
xor
cmp
or
inc
out
mov
jb,pt
add
adc
xchg
insb
push
xchg
add
fsubs
into
cmp
push
push
inc
cmp
dec
push
or
dec
clc
std
rclb
aam
mov
lcall
jo
mov
push
daa
or
xchg
or
loope
push
mov
cltd
jb
sub
pop
inc
scas
stos
and
jp
in
adc
adc
or
call
mov
pop
lcall
leave
cs
ret
popf
jbe
push
push
adc
sbb
jb
push
imul
pop
add
loopne
in
or
add
jle
and
xor
mov
add
inc
sbb
add
push
jae
popa
fidivrs
inc
enter
rolb
cmp
loope
mov
or
push
ds
mov
jnp
push
push
jae
dec
scas
inc
and
out
inc
pushf
push
pop
repz
push
inc
push
mov
inc
cltd
sbb
lods
mov
jno
jl
test
rcrl
stos
jo
out
lods
shlb
std
pushf
sub
add
xor
adc
test
or
mov
test
sub
nop
jae
test
push
pop
loopne
fwait
mov
xchg
lea
sbbl
pop
lcall
inc
add
add
outsb
mov
mov
cld
lods
fcomp
cmp
sub
mov
sub
xor
add
add
adc
dec
or
int3
call
pop
xlat
mov
sub
out
call
sbb
add
add
inc
adcl
aam
fadds
not
adc
sub
xorb
mov
add
push
or
inc
sbb
dec
add
int3
sbb
dec
xor
adc
xchg
or
and
add
sarl
mov
lock
fidivrl
addb
mov
dec
test
push
jnp
loop
test
xchg
adc
xchg
mov
cli
adc
mov
adc
pop
add
dec
fldl
cs
push
aad
xor
fdivs
and
push
dec
xor
dec
xchg
or
faddl
daa
test
push
setle
sub
insb
xchg
cmp
std
repz
dec
and
lock
or
jmp
or
pop
jno
inc
cmpsb
push
xchg
btl
inc
test
in
inc
fbld
dec
or
cmp
xor
jae
sub
cwtl
cltd
scas
test
pop
mov
test
sub
mov
sbb
mov
cmc
filds
inc
cld
icebp
and
xor
aam
popl
adc
jnp
outsb
inc
in
or
add
push
test
xchg
or
sub
inc
cwtl
clc
into
add
std
fsubrs
cmp
je
adc
popa
sub
add
and
jns
js
jge
or
scas
mov
stos
packssdw
in
into
add
or
mov
sbb
mov
inc
mov
pop
cmp
lret
mov
adc
mov
jp
add
mov
inc
push
sub
mov
xlat
notb
inc
gs
mov
sti
enter
insl
add
or
mov
jns
inc
mov
andl
cmp
pop
add
rol
inc
fdivrl
lcall
sbb
movsb
das
cmp
je
sbb
ret
sbb
jle
inc
pop
call
test
adc
not
xor
push
xchg
fiaddl
mov
jge
sbb
pop
sub
test
sub
add
adc
in
outsb
lcall
xlat
jmp
sub
adc
adc
fisubs
push
xor
adc
popa
add
mov
pop
aas
out
add
and
mov
scas
cmp
cmp
and
xchg
mov
jo
dec
into
daa
xlat
cmc
daa
subb
adc
pop
test
xor
mov
pop
pop
add
ds
mov
sub
test
or
xchg
ret
leave
xor
inc
inc
jns
test
loopne
or
cmp
cmp
inc
cs
loope
pop
adc
popf
jo
cmp
pushf
sub
jne
inc
sbb
add
push
mov
add
xor
sbb
mov
jo
mov
jno
ret
jo
je
stos
loopne
movsl
mov
adc
add
add
sub
adc
xchg
mov
inc
xchg
mov
imul
dec
or
mov
out
push
or
xchg
hlt
enter
dec
adc
pop
xor
stos
or
pop
xor
pop
out
xchg
sub
push
sub
addb
push
sub
mov
jo
xchg
cltd
out
lret
sbb
rolb
cmpsb
sbb
fistl
lea
test
orb
or
push
and
inc
xor
fistps
stos
shlb
pushf
jmp
and
js
jge
xor
sbb
inc
jnp
cltd
or
mov
mov
inc
movsl
push
xor
adc
mov
and
inc
xlat
adc
mov
movsb
je
inc
mov
mov
test
sbb
mov
stos
jo
and
mov
mov
push
add
jo
shll
lcall
jnp
sbb
xor
adc
add
sbb
je
loope
pop
or
gs
loope
shll
or
jb
cmp
jp
mov
pop
stos
dec
mov
mov
shrl
or
int
sbb
xor
stos
jo
pop
sbb
dec
xchg
or
stc
test
jb
popa
push
rclb
push
aaa
xor
add
int
in
xchg
mov
inc
mov
lock
cmp
mov
mov
push
pusha
inc
loope
push
cltd
inc
into
inc
xchg
mov
jo
lcall
out
rcl
xchg
fs
stos
je
and
mov
push
push
rol
loope
pop
inc
shll
enter
sub
stos
dec
add
xor
add
cmpb
loopne
pinsrw
lock
fcompl
or
xor
xor
scas
and
push
fdivs
mov
lock
ljmp
sbb
scas
push
adc
xchg
aad
subb
dec
push
xchg
sbb
ret
cmp
cmpsl
sub
mov
shlb
mov
or
xchg
call
push
push
inc
pop
shll
lods
iret
pop
imul
and
xchg
add
stc
cld
inc
sarl
fistps
add
xor
dec
adc
or
mov
sbb
cld
or
lock
or
mov
inc
push
or
mov
lock
and
pop
das
test
sbbb
add
pop
mov
xchg
xchg
add
into
mov
jne
push
lds
inc
and
xor
mov
or
dec
lock
rclb
or
sub
sar
ret
test
jbe
mov
cmp
or
pop
mov
cli
into
popa
push
xchg
test
mov
mov
mov
lods
and
xor
sub
ficompl
add
adc
cli
mov
xor
pop
and
inc
lds
or
movsl
sbb
repz
add
sbb
push
out
xor
or
jo
in
imul
and
sbb
out
rol
xor
shlb
add
adc
mov
sti
xchg
sub
std
nop
pop
fcompl
adc
inc
lret
and
fs
clc
fiaddl
mov
add
push
inc
mov
pop
dec
cwtl
outsl
push
cli
or
lock
xchg
or
mov
push
in
sub
adc
push
inc
xchg
inc
sub
push
fadds
fsubp
pushl
mov
aas
jecxz
jg
mov
inc
mov
xchg
cld
mov
add
mov
adc
sbb
pop
lds
mov
adc
in
scas
inc
adc
add
pop
clc
orl
sbb
cmp
ljmp
lock
shll
dec
mov
aas
leave
roll
test
add
ret
push
or
or
ret
call
jle
sub
ds
movsl
xor
pop
mov
fcompl
movsb
in
add
mov
dec
rclb
addr16
inc
jmp
inc
andb
add
stos
mov
cmp
lret
add
sbb
or
pop
push
lret
rcrb
mov
lods
fcomp
sarl
sbb
adc
jbe
clc
adc
push
push
or
pusha
or
push
mov
lds
rcll
jo
add
xor
sbb
lahf
data16
pusha
fdivrl
sbb
bound
add
sbb
pop
push
call
enter
lret
inc
inc
shl
insl
mov
mov
or
loopne
mov
and
and
pusha
inc
pushf
push
outsl
inc
adc
rolb
adc
mov
enter
sbb
push
push
pop
loope
xor
mov
enter
xchg
pop
cli
mov
fdivl
inc
push
xor
ljmp
xor
push
fwait
jno
push
xor
or
and
push
sbb
inc
cmp
cmp
sbb
add
adc
add
sbb
loopne
mov
lcall
or
cmp
lods
ja
pop
adc
rclb
push
call
pop
sbb
inc
pop
testl
mov
mov
adc
pop
inc
fdiv
js
and
push
inc
aam
sbb
fimull
sub
and
ficoms
cmp
adc
pop
adc
push
rol
push
sbb
xor
dec
push
adc
ja
ret
aas
sub
sub
sbb
les
faddp
push
movl
test
in
and
lds
push
dec
insb
adc
in
mov
popf
ror
inc
cmpsl
or
and
pop
push
rorb
roll
push
icebp
adc
mov
add
loopne
fcmovu
or
inc
inc
js
inc
xor
loop
lods
cmp
pop
add
pop
in
push
or
or
inc
add
jp
jmp
cmp
testl
fistps
mov
jo
loop
int3
mov
adc
dec
jl
lods
and
divl
call
push
jg
push
or
or
idivl
inc
jecxz
sbb
repnz
mov
addb
add
imul
stos
or
sub
jb
pop
push
pop
and
fs
lds
je
mov
icebp
addb
lock
mov
jne
add
mov
adc
pop
add
adc
push
sbb
js
mov
mov
dec
cmp
test
dec
ds
push
adc
mov
push
clc
push
dec
adc
sub
adc
xorb
push
sbb
pop
push
jbe
call
sub
inc
cmp
xchg
int3
jb
cmp
in
cmp
mov
stc
int3
xor
lret
cmp
adc
sqrtps
jg
or
jns
cmpsl
push
es
loope
xchg
and
add
mov
xor
sbb
add
cmc
mov
cmp
and
aam
loop
inc
cltd
mov
add
imul
nop
sub
mov
mov
sub
adc
push
xor
or
andl
or
stc
mov
pop
push
mov
fsubs
push
cltd
add
push
or
pop
or
or
adc
push
sub
xchg
stos
xchg
mov
rolb
cltd
cmp
test
shll
push
or
inc
in
adc
sbb
andb
inc
inc
mov
xchg
dec
stos
js
push
shlb
dec
add
jno
bound
push
and
loopne
xchg
test
push
push
or
push
push
adc
inc
or
lea
push
test
mov
cmpsb
inc
and
mov
xchg
enter
jns
mov
ljmp
test
stos
add
mov
push
jno
jo
mov
stos
inc
scas
push
pop
xchg
test
or
stos
sub
pop
rorl
or
add
mov
add
jo
or
scas
pop
sbb
cs
add
ljmp
lahf
mov
cmp
aaa
bound
aad
mov
cmc
add
mov
add
std
mov
hlt
or
mov
dec
in
adc
inc
lock
enter
or
ffree
movsb
add
fidivrs
jecxz
mov
sbb
jmp
into
jle
mov
push
test
jno
xchg
testl
add
popf
and
lds
cmp
jae
int
gs
sbb
mov
in
inc
or
or
loope
adcb
jae
sbb
or
mov
add
sti
test
and
jne
xor
cld
enter
push
inc
inc
pop
mov
mov
add
mov
ss
push
jecxz
cltd
sub
mov
mov
mov
stos
pop
adc
xor
sub
inc
push
xor
pusha
subb
mov
and
adc
jg
adc
hlt
inc
or
loopne
pop
mov
add
xor
adcb
mov
xchg
and
addr16
add
stos
lret
mov
inc
stos
sub
jmp
mov
pop
cmp
pop
xchg
out
test
loopne
rol
rcll
test
test
and
add
sub
push
scas
inc
lods
mov
adc
pop
push
shrl
movsl
mov
cwtl
movsl
xchg
mov
sub
push
mov
push
and
jae
adc
stos
pop
xchg
and
add
mov
pop
inc
sub
leave
jo
les
int
xorl
xchg
inc
xor
and
push
add
cltd
test
test
call
test
push
addl
orb
pop
add
adc
xchg
int3
subl
int3
mov
add
xor
inc
pop
sub
lock
mov
add
test
adc
dec
inc
pop
add
stc
sbb
adc
mov
push
add
mov
xor
mov
pop
jno
shl
loope
dec
call
mov
or
adc
or
mov
add
lock
icebp
pusha
push
mov
or
xchg
and
xorl
adc
in
mov
aam
mov
insb
pop
adc
mov
or
pop
inc
stos
mov
cmp
and
in
hlt
bound
push
pop
xor
bound
push
icebp
xchg
and
or
enter
sbb
sbbb
fwait
xor
inc
insl
dec
xor
add
leave
dec
pushf
push
sub
mov
js
sbb
cmp
jo
les
fsubrl
xchg
dec
and
push
mov
pop
sbb
test
ret
mov
adc
sbb
add
xor
push
inc
mov
fs
push
icebp
jo
pushf
hlt
inc
mov
and
pop
mov
and
inc
add
inc
adcb
push
jg
sub
xchg
or
xchg
clc
in
inc
cmp
or
mov
sub
or
js
cmpsb
mov
sarb
in
dec
pushf
push
inc
xchg
rorl
push
int
add
aad
shrl
lcall
jne
cmpsl
in
rclb
lcall
scas
ja
rol
xor
inc
and
sbbb
push
inc
cwtl
jo
int
jno
xchg
jmp
cmpsl
dec
jns
sbbb
and
and
mov
mov
cltd
js
iret
xchg
adc
daa
jp
sbb
and
xor
stos
sub
mov
mov
sub
cwtl
sbb
inc
mov
add
adc
push
stos
mov
mov
sahf
in
inc
pop
scas
aaa
jns
fnsave
adc
stos
jg
xor
xor
out
fs
imul
sub
ret
pop
jae
lcall
jo
adc
xchg
adc
stos
lret
and
cmp
and
std
xlat
xchg
and
and
shr
add
repnz
add
sbb
xor
push
mov
cmp
imul
mov
add
cmp
nop
mov
jae
sub
je
jecxz
test
or
cld
rorb
sbb
sub
sbb
or
pop
and
xchg
rcrb
adc
mov
pop
adc
or
add
and
mov
mov
jbe
loope
inc
addb
adc
pushf
test
popa
mov
add
loopne
add
rol
cmp
xchg
adc
adc
mov
push
loope
cmp
cmp
xor
orl
scas
cmp
pop
addb
or
inc
inc
cmp
mov
mov
in
jecxz
push
out
and
dec
mov
aad
cltd
lea
cld
jo
pop
mov
ror
sbb
adcb
fnstenv
enter
ret
rolb
int
and
sub
mov
add
sbb
lods
mov
sub
cmp
ret
pop
orl
nop
ret
sbbb
std
inc
loope
rorb
push
jnp
cmp
sub
aam
xlat
ret
in
rcrl
vmovss
adc
jo
loopne
inc
adc
ljmp
int
popf
jo
stos
mov
xor
xchg
daa
movsl
ljmp
pop
or
and
push
sbb
or
jl
stos
fdivrl
inc
rcrb
inc
jno
or
inc
cwtl
jmp
lock
decl
arpl
addb
loop
adc
and
or
test
adc
sub
loopne
sub
inc
sbb
or
jne
inc
add
jl
add
in
jns
mov
jne
add
push
push
call
jae
or
sub
shl
icebp
add
dec
jns
call
push
jbe
ror
std
or
pop
adc
mov
out
mov
hlt
fcoml
push
push
push
push
push
leave
cs
inc
pushf
das
arpl
push
cmp
mov
adc
add
mov
xor
or
sbb
cmp
and
inc
adc
push
ss
xchg
ds
rcll
dec
inc
ret
pop
push
sub
adc
add
and
sahf
xchg
rorl
loopne
cli
sub
jge
push
std
sbb
sbb
add
adc
ficomps
mov
gs
cmpsb
ljmp
sub
mov
cwtl
lods
add
test
ret
mov
push
push
mov
sub
sub
inc
stos
and
inc
rcrl
mov
sbb
shll
xchg
pushf
sub
or
or
sbb
pop
push
int
push
subl
stos
fbstp
xor
and
pushl
jb
les
cltd
sbb
add
dec
inc
sub
dec
iret
jb
not
lahf
sbb
xchg
sub
sbb
loopne
xchg
push
enter
jo
push
ret
stos
aaa
in
pop
aas
mov
xchg
sub
add
push
adc
mov
in
fmull
pop
popa
inc
cmc
jo
jb
sub
xlat
adc
mov
jno
fdivl
push
js
mov
ja
leave
loopne
adc
dec
mov
lea
in
lcall
adc
loop
mov
and
mov
xchg
sub
xchg
adc
lds
mov
pushf
and
sbb
inc
clc
xchg
stos
adcl
insb
inc
mov
stos
add
or
movsb
ret
mov
pop
roll
push
add
add
sub
aad
stos
ret
je
sub
add
ss
cs
xchg
std
jg
push
fwait
mov
test
adc
inc
pusha
pop
mov
and
repnz
jp
xor
dec
out
dec
sbb
loopne
jb
push
and
imulb
pop
jbe
push
addl
mov
sbb
in
cwtl
das
incl
xchg
sbb
sub
faddl
lret
das
ds
xor
jp
sub
into
pop
addb
xorb
sti
jg
adc
lcall
push
mov
push
mov
xor
or
inc
or
pop
or
xchg
adc
sbb
cmp
js
shlb
mov
testb
pushf
cwtl
xor
mov
es
inc
sub
aam
mov
stc
pop
xchg
pop
cmp
xor
mov
pop
hlt
popf
or
mov
sub
sbb
dec
pop
sub
cltd
push
pop
ja
aad
push
xchg
mov
add
mov
lret
add
push
add
mov
add
int
aam
push
into
xchg
mov
push
cmp
and
dec
pop
adc
addb
push
xchg
rorb
and
jo
or
insb
add
add
inc
icebp
inc
push
inc
mov
mov
shrl
test
or
adc
push
pop
inc
inc
orl
push
adc
or
mov
push
mov
fstpl
sbb
std
lahf
and
inc
in
inc
repz
mov
les
jae
shll
ljmp
xchg
dec
idivb
fdivrl
cmp
test
xchg
or
xchg
adc
mov
insb
jae
out
jnp
dec
paddb
or
jne
sub
popa
jp
imul
xor
mov
cmp
xchg
jmp
mov
fdivr
jbe
mov
dec
aam
add
mov
pop
cmove
rcrl
inc
arpl
add
add
cmc
aaa
inc
mov
jns
and
in
mov
xchg
dec
push
popa
sbbb
aaa
xchg
sahf
jns
xlat
loopne
das
xchg
rorl
mov
addl
xchg
mov
dec
or
push
test
add
lods
sub
adc
adc
jb
cmp
xlat
pop
add
mov
data16
stos
or
adc
cmpsb
push
xor
mov
adc
cmp
xchg
mov
dec
nop
leave
in
push
ret
popa
xor
lret
orl
and
shrb
aad
addb
sbb
sub
enter
add
gs
jge
sbb
in
es
or
dec
mov
jo
push
jae
je
out
pop
movsl
enter
nop
ja
inc
cmp
mov
pop
sarb
inc
mov
sbb
inc
mov
add
push
mov
xor
stos
push
inc
mov
es
hlt
leave
add
cld
cmp
push
cmovb
mov
mov
out
xor
push
sub
add
add
test
push
inc
mov
rorl
inc
lret
and
adc
push
or
pmullw
insb
mov
push
out
xchg
mov
add
xchg
pop
hlt
mov
sbb
aad
cmpb
mov
arpl
adc
icebp
out
add
pusha
add
scas
stos
adcl
jne
add
push
and
aam
and
dec
loop
data16
mov
fisubrl
inc
pushf
push
es
jae
pop
push
lret
ljmp
inc
jmp
pop
dec
fildl
dec
rcr
push
addb
inc
dec
push
jno
outsb
or
jae
sub
cmp
ljmp
daa
or
pop
loopne
cmpb
sub
gs
xchg
pop
xchg
xor
outsb
add
adc
xor
add
jne
mov
lock
aas
or
mov
push
hlt
pop
push
hlt
in
pop
xor
loop
in
add
fidivrs
or
adc
mov
dec
push
push
inc
or
mov
or
xchg
add
adc
lcall
sbb
mov
xchg
cli
adcb
jnp
dec
or
mov
pop
dec
xlat
movb
dec
lock
adc
mov
jnp
mov
lock
xor
inc
out
mov
fcmovnbe
push
addl
mov
cwtl
xor
sub
or
add
and
and
xor
adc
add
xor
fistpll
aas
adc
cmp
pop
xchg
and
add
cs
cmc
pcmpgtb
in
pop
mov
rcrl
mov
add
mov
addr16
and
xchg
or
pop
rolb
and
jb
jo
out
sub
cmc
sub
xor
jnp
xor
pop
push
mov
add
and
mov
and
roll
popf
adc
shr
in
adc
add
or
dec
loopne
rcr
mov
scas
jbe
gs
sbb
push
imul
rcl
scas
cmp
mov
push
daa
lret
aad
sub
xor
adc
xor
js
inc
xlat
pushf
mov
enter
jo
sbb
adc
push
adc
pop
dec
in
lcall
mov
icebp
mov
mov
andl
ret
cld
daa
loop
or
pop
scas
repnz
xchg
stos
cmp
into
xor
icebp
cmp
int
loopne
and
pop
aas
fs
and
pusha
push
push
mov
roll
sbb
pop
xchg
push
outsb
mov
pop
testb
imul
fs
pop
lock
push
mov
hlt
lds
adc
xchg
jo
and
cmp
inc
xor
sbb
mov
daa
scas
mov
fsubl
dec
jmp
push
adc
sbb
jnp
enter
testb
or
jl
addr16
push
add
xorb
xor
lods
add
fistps
mov
xchg
jp
in
out
idiv
and
adc
test
bound
ret
test
out
lds
inc
xor
gs
out
test
xchg
xchg
cltd
js
lcall
ja
adc
and
push
add
dec
lcall
xor
out
or
bound
adc
dec
push
jb
scas
pop
xlat
xor
pushf
addl
sbb
out
push
xor
cmp
scas
stos
add
push
adc
cltd
jo
in
xor
or
xchg
and
sbbb
xlat
mov
mov
xor
adc
inc
pusha
data16
or
xchg
xchg
inc
mov
js
jae
cmp
xchg
call
pushf
mov
mov
cs
in
aad
lods
adc
aam
or
movhps
cmp
xchg
xchg
or
insl
cmp
andb
xchg
mov
mov
stos
or
ja
je
mov
stos
test
loop
xchg
mov
inc
xor
jns
inc
pop
cmpsl
loope
lods
sbb
mov
inc
xor
pop
cmp
adc
xor
adc
fimuls
adc
sub
mov
inc
jbe
pop
xchg
mov
pop
mov
mov
mov
push
leave
out
popa
jb
inc
ja
and
xchg
mov
dec
roll
sar
add
sbb
add
fildl
shr
fcmovnb
mov
mulb
test
add
xchg
inc
add
push
mov
sbb
sub
in
lahf
and
bound
add
and
mov
loope
ret
add
dec
or
lea
jno
sbb
inc
ss
xor
repz
fnsave
mov
mov
xor
jg
inc
sub
stc
ret
mov
mov
sub
add
pop
add
jp
push
push
or
lock
jae
push
mov
sbb
iret
inc
cmc
adc
dec
jbe
stos
lds
ret
inc
cmpsl
lock
rorb
push
std
ja
in
xor
adc
xchg
int
xor
xchg
mov
fwait
lods
loope
and
jmp
inc
jne
mov
in
jl
fidivl
add
iret
mov
loopne
xchg
cmpsb
or
and
mov
cltd
sub
adc
push
mov
cwtl
sahf
test
js
shl
aad
test
popa
or
add
cld
mov
scas
fs
enter
fld
add
stos
scas
ret
xor
xchg
dec
test
or
popf
push
xchg
push
out
inc
adc
lock
andb
jle
loope
loope
aad
xlat
push
or
mov
dec
int
push
outsl
pusha
xorb
mull
lret
add
movsb
and
jg
in
push
jnp
inc
cmp
sub
push
loope
push
dec
popa
mov
ud2
data16
insb
adc
mov
sub
push
mov
sbb
lret
sbb
dec
sub
push
dec
adc
aam
mov
xor
mov
jb
outsb
or
inc
pop
sbb
sub
or
add
inc
adc
push
stos
mov
pop
add
or
out
leave
jecxz
jecxz
add
or
int
int
addr16
xor
stos
add
scas
call
ss
push
call
pushf
or
mov
jg
add
mov
fmul
fsub
test
pop
inc
scas
fdivl
sbb
cmp
dec
xchg
xor
pop
in
push
mov
or
jb
add
inc
sub
pop
xchg
cmpb
mov
adc
push
sub
cld
dec
xchg
repnz
xchg
out
stos
mov
sub
out
nop
or
out
inc
xor
aas
mov
arpl
ret
add
lea
push
arpl
xchg
sub
lcall
cmp
bound
xor
inc
and
imull
xor
pushf
and
pop
subb
cltd
imul
hlt
jb
cmc
and
push
mov
jo
sub
roll
jmp
jle
adc
popa
sub
pop
into
sbb
push
inc
lret
and
add
movsl
jo
aam
int3
dec
or
mov
testb
cs
leave
out
lea
ret
xchg
adc
int
jo
push
imul
mov
jae
xor
les
loopne
sub
outsl
sub
add
jno
aad
jae
sbb
dec
out
pushf
or
add
aam
inc
cwtl
sbb
cwtl
rolb
aad
dec
stos
stos
inc
into
aam
mov
fcomp
push
jne
dec
mov
lcall
aas
adc
add
dec
cs
push
sub
pop
pop
add
fmull
movaps
or
sbb
xor
mov
mov
cmp
shl
pop
inc
xchg
push
inc
add
data16
xor
inc
lret
xorb
icebp
sbb
cmp
sub
jnp
sbb
incb
or
add
add
sub
ja
in
adc
mov
push
mov
out
repz
or
pop
mov
sub
repnz
add
sbb
dec
shrl
add
add
imul
inc
push
ror
stos
test
xor
inc
adc
sbb
fimuls
or
adc
sub
and
mov
test
pusha
mov
or
xor
inc
outsl
pop
scas
test
hlt
push
fistpl
jnp
xor
enter
testl
adc
lods
and
les
sahf
imul
roll
or
and
pop
mov
addb
add
or
pop
les
push
lcall
add
and
inc
dec
aaa
rolb
rolb
push
sbbb
adc
test
adc
push
cmp
xor
aad
or
rclb
shlb
movsl
fcomps
add
adc
pop
lahf
and
aad
repz
ret
jnp
pop
dec
sub
and
and
hlt
popf
pusha
push
mov
adc
xchg
mov
add
cld
and
xor
pop
push
jo
push
push
and
xor
sahf
imul
mov
jo
xchg
mov
repz
or
rcrb
shll
push
icebp
pop
int3
mov
insb
daa
dec
xor
sbb
push
pop
adc
repnz
jmp
ret
loop
inc
lahf
neg
imul
add
push
add
cltd
les
fs
dec
sbb
or
cmp
cwtl
push
clc
mov
int
sbb
and
add
lock
inc
sbb
cld
pop
sub
adc
adc
cmc
xor
je
adc
mov
pop
int
fwait
cmp
adc
inc
adc
inc
rcl
lock
jg
or
and
mov
adc
insl
mov
mov
sub
add
jo
mov
jns
inc
test
cmp
ljmp
loopne
lds
lock
xor
push
or
xlat
test
mov
xchg
mov
pop
data16
add
and
rcrb
cmpsb
pop
sbb
cmp
add
lock
xlat
mov
push
or
inc
mov
mov
sbb
loope
js
icebp
bound
mov
push
cwtl
sub
jo
inc
inc
jnp
lds
dec
loopne
je
inc
add
add
add
mov
test
cmp
out
or
js
out
pop
jle
add
push
cltd
loopne
pop
cmp
in
jno
loop
add
sub
mov
imul
out
pop
add
lods
push
lcall
je
push
pop
add
bound
add
arpl
add
leave
jo
and
sub
xor
add
add
inc
xor
and
test
sbb
jo
xchg
xchg
cwtl
mov
rclb
mov
mov
push
add
push
sbb
cmp
loopne
mov
ret
add
imul
in
sub
in
mov
xchg
ja
popf
jo
xlat
add
movsl
xor
cmp
out
ja
and
jne
xchg
and
hlt
mov
loopne
mov
inc
jae
out
add
push
jae
jb
lock
xchg
imul
xor
rol
sub
mov
sbb
fimull
stos
inc
rsm
test
loope
movsb
jo
and
out
push
outsb
aad
ret
add
mov
ret
cwtl
jp
pop
lea
sub
mov
push
mov
pop
icebp
leave
sub
loop
mov
addb
je
xor
mov
ret
cmp
adc
and
nop
pop
push
push
ds
or
lds
and
ljmp
dec
and
loopne
xor
mov
rorl
roll
adc
inc
add
ljmp
xor
lock
aaa
jo
rorb
xchg
adc
cld
xchg
adc
lret
inc
les
outsl
adc
add
and
ret
inc
mov
adc
dec
loopne
in
mov
test
roll
and
mov
int3
xor
inc
mov
add
pop
jg
sbb
pop
cwtl
cmpsb
sbb
push
repz
gs
sbb
inc
js
xor
mov
or
push
pop
inc
in
test
in
cmc
inc
add
test
ljmp
or
jno
iret
je
mov
sbb
pop
lods
and
and
push
add
dec
push
pusha
lret
sbb
insb
xchg
cmp
pop
fs
fcomps
jae
cmpsl
rolb
dec
pop
scas
mov
jle
mov
mov
xchg
dec
cmp
adc
js
mov
fcoml
adc
xchg
cmp
dec
aam
inc
xor
xor
mov
push
int
outsb
mov
push
mov
xchg
pop
sub
loopne
cmpsb
out
sbb
mov
or
je
inc
sub
push
cli
test
and
mov
pop
lds
popa
cmp
lret
cltd
sbbb
aaa
add
push
xchg
dec
in
test
cmpsl
push
inc
loopne
adc
or
push
xchg
aas
and
pop
rcl
stos
mov
lock
cmpsl
and
or
imul
aam
mov
stos
gs
xor
shrb
dec
pusha
insl
str
xor
sub
adc
add
lcall
jg
xchg
jnp
sub
mov
add
push
jae
xchg
rorb
push
popf
mov
lret
dec
mov
aam
push
inc
in
sub
mov
test
addr16
lcall
dec
mov
int3
sbb
xchg
mov
cli
sbb
push
fsubrs
adc
stos
pop
adc
sub
loopne
fidivrl
jne
mov
lods
or
xor
inc
fstpt
sbb
push
inc
add
out
out
lods
fcoms
sub
inc
mov
dec
add
push
push
out
sbb
sub
int
sbbl
loope
sub
cmp
and
xor
xlat
jb
push
or
pushf
inc
xor
sbb
sbb
dec
push
inc
stos
pop
imul
jno
cmpl
cmpsb
sub
movsb
cmp
imul
mov
ljmp
pop
add
in
cwtl
data16
fs
pop
push
add
dec
rolb
xchg
or
add
scas
inc
subl
or
dec
inc
push
adc
adc
add
inc
adc
lret
sarb
into
add
sub
add
sbb
push
icebp
or
push
mov
sbb
cmp
sbb
xlat
cltd
inc
cmp
xlat
pop
es
fs
sbb
adc
push
into
jge
mov
jae
clc
inc
stos
sahf
and
push
mov
loope
mov
out
in
arpl
xor
xchg
xchg
xor
outsl
inc
or
add
pop
ret
dec
adc
outsl
xor
lret
mov
iret
lcall
pop
xchg
jno
insl
out
push
add
xor
sub
out
cld
scas
jp
push
xchg
lret
aam
cltd
xorb
pushf
ret
mov
into
and
xchg
enter
jg
jo
sbb
cwtl
sbb
add
in
test
rolb
mov
scas
xchg
cmp
or
mov
cltd
sub
adc
ret
leave
xchg
popf
ja
xchg
mov
aad
mov
test
shrb
push
js
add
vshufps
add
jge
xor
xchg
mov
ret
lea
bound
mov
push
and
inc
rcrb
out
pop
adc
fcompl
add
sbb
in
xchg
dec
adc
pushl
rcr
outsl
shl
stos
and
push
xlat
inc
cmpsl
movsb
andb
mov
or
adc
fisubl
stos
add
xor
and
xchg
add
shll
ljmp
stos
bound
lea
mov
std
inc
adc
test
xlat
sahf
sbb
mov
jne
test
in
mov
mov
or
js
je
and
add
and
fisttpll
aad
xor
adc
add
mov
cmp
xor
adc
push
mov
inc
mov
jg
mov
repnz
add
or
push
pop
mov
shrb
dec
jle
xchg
mov
ret
xchg
adc
test
les
stos
and
adc
sub
jo
xor
js
adc
test
mov
adc
enter
mov
iret
insb
cmc
testb
orl
aam
and
lcall
cmp
add
mov
inc
ret
outsl
inc
inc
or
xchg
jp
stos
jg
negb
and
push
ljmp
inc
adc
dec
cs
sbb
sub
aaa
inc
adc
les
inc
rcr
loop
in
ret
call
mov
fcom
sbb
push
push
mov
addr16
inc
in
loope
xor
bound
adc
mov
add
jmp
xor
add
xor
push
adc
sub
push
lock
lock
call
pop
inc
bound
push
or
or
inc
push
mov
xor
inc
fimull
pop
mov
aaa
push
push
pop
mov
push
add
and
xor
lods
lods
into
scas
adc
and
pop
pop
neg
mov
and
daa
icebp
popf
add
dec
or
push
add
fsubrs
mov
cmp
add
push
sahf
iret
fadds
leave
push
xchg
add
and
or
adc
push
add
jnp
push
inc
mov
shlb
loope
push
daa
stc
or
and
lret
pop
out
ss
lea
jp
ljmp
aad
xor
cmpl
cmp
xor
das
or
xor
dec
sbb
xor
rcrb
sbb
fildl
cwtl
cmp
dec
sub
jg
dec
nop
and
cmp
adc
shl
xlat
push
add
and
fcomps
or
or
sbb
adc
daa
je
sub
add
or
ja
push
inc
cwtl
push
rolb
mov
jno
xlat
fiaddl
pop
fs
mov
adc
iret
shll
or
sub
sbb
inc
xchg
out
adc
jmp
outsb
add
lahf
popl
xchg
inc
inc
sbb
jnp
daa
pop
push
jge
popf
add
in
mov
pop
mov
stos
push
mov
and
push
jl
adc
fmuls
xor
inc
lock
ret
adc
cmp
mov
push
insl
cltd
adc
add
nop
xchg
push
aad
mov
push
mov
idiv
adc
push
sbb
sub
add
in
pop
cmp
add
rcl
or
cmp
mov
push
lret
mov
rol
stos
inc
shrl
cmpb
sbb
cli
movsb
test
sbb
pop
lods
inc
fs
cld
xchg
cld
mov
aaa
gs
mov
fcoms
scas
test
imul
js
and
scas
dec
push
sub
test
jcxz
lret
insl
and
xor
adc
push
sbb
and
jae
hlt
shl
adc
sub
inc
gs
loop
sub
js
es
in
sub
pop
adc
pop
das
arpl
cltd
add
icebp
sub
jne
push
punpckhdq
pop
adc
or
lea
jno
inc
cltd
jb
int
aam
stos
jae
add
xor
inc
inc
bound
and
xor
add
or
in
xchg
pop
sbb
and
mov
mov
fwait
mov
sub
inc
dec
add
int
push
xchg
or
sbb
sbb
bound
adc
bound
test
in
roll
subl
pusha
and
pop
or
add
adc
ss
push
and
aam
fistpl
or
inc
into
dec
sub
mov
sub
add
enter
push
mov
xchg
lods
mov
imul
mov
cli
and
icebp
mov
sub
adc
std
ficompl
pop
mov
data16
out
int
mov
jmp
xchg
jns
push
add
add
jg
add
mov
sti
es
adc
xlat
xor
shl
shll
jmp
jne
fcmovnu
adc
sbb
sbb
dec
sar
add
or
sub
lcall
push
rcll
data16
or
pop
sbb
addb
inc
mov
and
fstpl
or
mov
xor
pop
mov
adc
adc
adc
ss
sarb
dec
sbb
jne
and
jecxz
mov
pop
inc
push
jo
push
insl
mov
xlat
repnz
ja
cs
push
popf
rol
add
inc
pop
mov
mov
clc
and
mov
push
shlb
push
out
push
adc
mov
push
xor
cmp
jle
add
out
jecxz
mov
push
loope
lds
dec
xchg
jb
cmp
test
lea
out
xor
lret
adc
sbb
clc
ret
xor
mov
ljmp
push
or
dec
inc
add
xor
xor
xchg
lret
inc
mov
loope
lock
or
xchg
sarl
sbb
stos
jno
mov
pop
jo
sub
mov
dec
xchg
sub
fiaddl
sbb
cmp
inc
push
sarb
inc
sbb
mov
sub
aad
int3
and
xorb
pop
sbb
add
xchg
sahf
dec
jp
dec
in
push
test
insb
loope
out
add
scas
and
enter
xorb
sbb
adc
pop
rorl
xchg
jo
mov
xor
decl
repz
jb
dec
insb
dec
jne
push
mov
pop
add
jmp
mov
cltd
push
lods
add
pop
inc
adc
jb
shrb
bound
rclb
call
mov
xchg
jae
push
push
into
pusha
inc
or
movsl
xchg
andl
push
inc
test
pop
add
mov
xor
sbb
adc
cmpsb
dec
mov
push
sub
lcall
and
adc
add
inc
test
add
fiaddl
pop
aad
sbb
adc
push
pop
jno
mov
shlb
or
xor
gs
pusha
andb
mov
nop
stos
sub
xchg
es
mov
addl
dec
xor
add
add
xor
jo
cld
push
xor
lcall
sub
lcall
daa
add
mov
je
push
mov
stos
fisubl
push
push
mov
jge
or
push
sbb
inc
xchg
jae
push
or
inc
rol
dec
scas
and
add
adc
shrl
movsl
andb
mov
sbb
sbb
jo
popf
imul
cmp
mov
sub
add
int
subl
add
stos
mov
and
pusha
rclb
stos
rclb
int3
cmp
popf
cmp
pop
sbb
mov
scas
or
push
mov
xchg
mov
xchg
neg
adcl
popa
clc
xchg
pop
jae
and
dec
out
in
inc
aam
es
int
pop
mov
popa
mov
adc
push
loope
pop
mov
sarl
jb
adc
push
pop
and
adc
nop
jne
and
xor
test
cwtl
adc
dec
cmpb
and
mov
in
or
push
cltd
pop
pop
or
dec
jmp
xor
cmpsl
hlt
dec
push
sub
mov
imul
sbb
daa
sub
cmp
cwtl
dec
or
pushf
ja
cmp
shrl
adc
out
lret
sbb
dec
lods
xor
cmp
mov
addb
jo
mov
dec
cmp
stc
mov
adc
rcl
xchg
sub
sarl
js
in
pop
xchg
or
adc
add
and
pop
loop
addb
cmp
inc
cmp
popa
je
cld
sub
loope
test
aad
push
test
inc
push
mov
lret
addb
push
cmp
xchg
xlat
test
xor
cmp
mov
aaa
popa
pop
cltd
adc
sbb
sbb
inc
rorb
ss
pop
push
mov
into
rorb
jae
out
and
ret
xchg
adc
popa
loop
sub
cmp
push
movsb
jno
mov
jmp
add
sub
sbb
push
mov
sbb
or
cmp
add
cltd
test
cmp
push
mov
xlat
cwtl
cmpsb
push
ja
sub
je
adc
dec
mul
sub
xchg
dec
mov
xchg
inc
mov
push
es
push
xor
outsl
rcll
addl
cmp
loop
inc
pusha
popf
mov
js
cs
ljmp
sub
fdivrs
mov
dec
push
jle
mov
inc
dec
fisttpll
cmp
sbb
push
xor
cmc
add
cmp
sub
pop
icebp
mov
inc
addl
fs
fiadds
inc
mov
push
adc
push
xchg
outsb
push
sub
mov
cmp
mov
stos
mov
inc
int
sbbl
adc
rcll
and
dec
loopne
loope
inc
addr16
inc
xchg
add
rorb
xchg
scas
add
and
adcb
in
mov
push
or
dec
or
in
cmpsl
sbb
xchg
rolb
int3
push
cltd
enter
loopne
popa
enter
jae
cld
popa
rcl
fs
sbb
jnp
aad
aam
bound
push
and
pop
aam
dec
or
scas
sub
out
push
push
push
or
mov
leave
mov
enter
mov
mov
xor
mov
ret
inc
dec
lds
es
add
add
popa
sub
fisttpl
or
dec
pop
sub
mov
mov
lcall
jo
lcall
xor
in
ljmp
lret
iret
cmp
test
and
mov
push
and
cltd
xor
ds
and
decb
xor
push
in
adc
ja
add
cltd
int
pop
lock
les
sbb
out
add
jle
push
push
jo
inc
dec
cmp
and
push
repz
push
int3
push
xchg
mov
iret
or
fadds
mov
out
adc
adc
outsl
xchg
push
pop
or
shlb
pushf
mov
adc
test
les
lret
sub
pop
mov
xor
mov
sbb
pop
push
cmc
les
mov
cmp
jb
and
mov
adc
in
outsl
rcrb
repnz
in
mov
adc
dec
add
sbb
loopne
dec
or
rorl
adc
and
jmp
or
sub
and
test
mov
cs
jbe
jmp
orb
dec
xorb
jne
sub
or
push
add
jl
pop
scas
sbb
jecxz
pop
and
ja
inc
and
jl
cmp
imul
call
movsb
fisttpll
adc
movsl
cmp
pop
push
add
add
jp
add
scas
sbb
mov
add
push
or
ficompl
int
les
sub
jne
pop
inc
rolb
adc
cmp
stos
jg
mov
push
push
lods
addb
or
or
adc
popa
push
xchg
cmp
mov
sarl
mov
imul
adc
adc
push
cmp
fsub
pop
daa
mov
xor
cs
ja
ja
in
or
add
add
sbb
and
inc
xchg
cmp
mov
add
adc
mov
sbb
ret
loopne
adc
sti
and
pop
aam
sbbb
and
mov
push
fcompl
subb
or
pusha
cmpsl
or
cwtl
cltd
in
and
sbb
jne
roll
call
call
or
repz
out
adc
andb
out
and
aas
outsb
arpl
in
jns
pop
iret
add
jmp
sarb
shr
jb
les
fidivrl
push
add
stos
sub
mov
fadds
mov
adc
cmp
fmull
and
push
fists
add
push
or
std
push
fldl
push
push
das
pop
add
out
mov
inc
push
mov
mov
repz
push
pop
into
add
or
pop
fidivrl
xchg
sub
dec
jo
testb
cwtl
adc
sub
cmp
inc
jp
lds
scas
jecxz
jle
movsb
subb
std
popa
push
cld
ret
mov
sub
jg
cmc
sbb
pop
pushf
mov
mov
mov
sbb
adc
xchg
adc
cmp
dec
push
add
loope
push
daa
inc
nop
pop
add
test
inc
icebp
ret
sbb
xor
int3
mov
inc
push
mov
mov
enter
push
or
sbb
push
pop
mov
mov
xchg
add
push
out
add
dec
or
into
xchg
adc
adc
adc
sub
cltd
mov
add
mov
push
call
sbbl
mov
call
nop
cmc
mov
pop
lods
call
inc
das
push
add
push
push
adc
es
mov
sbb
aad
sub
sbb
mov
scas
bound
mov
jle
es
and
jbe
insb
lods
push
nop
and
aad
inc
icebp
stos
and
pop
inc
mov
fstps
fs
or
jp
sbb
or
loope
mov
les
imul
and
loop
adc
mov
stos
test
loope
ret
dec
adc
inc
add
call
or
icebp
aaa
push
mov
and
mov
mov
jno
daa
inc
int
popa
dec
mov
push
inc
es
inc
es
mov
test
add
fs
dec
inc
mov
popa
mov
mov
push
test
icebp
mov
daa
mov
pop
push
mov
add
or
out
pop
loope
loopne
mov
adc
bts
xlat
pop
adc
inc
adc
movsl
mov
stc
push
and
add
sarl
gs
lea
xor
and
and
dec
xchg
mov
or
push
jae
testl
xchg
gs
push
xor
add
mov
inc
sbb
xchg
push
pop
sbb
push
dec
cmpl
lcall
or
add
or
lcall
or
subl
insb
loopne
mov
int3
jle
jecxz
add
test
jb
mov
aas
popa
mov
add
cmp
sub
idiv
fisttps
jno
xchg
adc
push
sub
dec
vpsrlvq
into
andl
jne
or
xor
xchg
mov
and
cltd
push
xor
xor
lcall
lock
adc
dec
add
popf
sub
jne
xor
int
mov
and
or
add
push
pop
vunpckhps
add
cltd
pop
mov
xor
int
ja
dec
jo
aam
mov
and
xor
and
sub
jge
inc
xor
es
xor
call
push
insb
jo
scas
enter
jae
loope
xor
pop
scas
pop
ret
mov
daa
rorl
dec
jecxz
inc
push
xchg
xchg
push
xchg
dec
test
in
push
xor
cs
pop
push
addr16
loope
scas
push
clc
stos
and
push
sbb
jbe
sub
xor
scas
popa
fbld
add
mov
pop
or
add
aam
sub
add
outsb
loopne
popf
dec
es
inc
rolb
movsl
int3
adc
mov
out
fcmovnb
inc
push
and
frstor
lcall
dec
add
test
add
cmpsl
adc
add
pop
subl
or
push
push
bound
cmp
fwait
movsb
mov
push
xor
push
jecxz
mov
int3
incl
rclb
pop
clc
jp
ljmp
rolb
xchg
jl
xor
xor
adc
pop
sub
pop
ja
mov
popf
insl
xor
pop
cmp
fcoms
push
or
pop
jno
or
stos
loopne
daa
jnp
cmpsl
mov
mov
mov
push
mov
test
xchg
mov
stos
adc
clc
repnz
scas
sbb
mov
pop
add
cmp
int
sub
shlb
push
and
add
pusha
shlb
cltd
or
cmp
mov
adc
cmp
jo
movsl
cmp
inc
xor
sbb
pusha
mov
aam
and
inc
imul
inc
loope
movsl
loopne
push
push
int
pop
push
jae
jnp
pop
and
add
cltd
mov
out
or
lcall
pop
les
add
pushf
rcrb
and
subb
cltd
mov
push
ret
mov
inc
push
mov
xchg
adc
mov
test
xor
xor
lods
push
loope
pusha
and
xchg
or
mov
add
movsl
imul
push
out
add
dec
lods
jl
jae
mov
enter
sub
and
xor
ret
sbb
loope
pop
int
push
lds
adc
fdiv
or
mov
shrb
mov
jo
jecxz
and
outsl
mov
ficoms
dec
repnz
inc
adcb
or
dec
stos
mov
scas
movsl
or
push
pop
push
pop
or
sub
loop
dec
adc
sub
adc
ret
notl
or
push
loop
inc
outsb
jmp
inc
das
out
les
push
daa
inc
loope
mov
xor
add
aas
test
stc
and
out
pop
loopne
loopne
sar
or
mov
dec
ret
scas
sbbb
push
or
sbb
push
xor
cmp
add
mov
add
imul
add
lahf
mov
or
cmp
or
adc
test
lea
dec
pop
test
dec
inc
pop
fsubl
divb
xchg
fwait
insb
jb
leave
mov
ss
add
xor
daa
push
mov
and
imul
mov
in
adc
ljmp
ret
sbb
mov
testl
add
mov
inc
xchg
add
out
sbb
adc
icebp
rcrl
push
mov
imulb
xor
outsb
mov
sbb
push
mov
push
and
cmpsb
push
ret
loope
mov
pop
dec
pushf
xorb
movsb
in
pop
and
dec
mov
cld
mov
or
push
mov
addr16
stos
xchg
push
jns
pop
mov
push
mov
push
ljmp
jno
mov
daa
pop
test
pop
or
inc
inc
mov
mov
adc
outsb
sub
add
pop
inc
ljmp
adc
jo
shrl
mov
push
jae
jbe
pop
mov
inc
pop
push
sbb
push
xor
sbb
push
mov
addr16
dec
push
test
xchg
mov
cmp
adc
stos
or
rol
stos
jo
mov
or
push
sbb
sbb
jle
xor
subl
pop
imul
xor
mov
adc
rorl
loop
cs
xchg
sub
bound
adc
fldenv
ja
test
sbb
flds
call
js
jecxz
or
xor
ficomps
xor
pop
xchg
adc
or
xor
xchg
push
mov
cs
adc
push
stos
or
into
inc
sub
pop
sub
or
push
xor
inc
hlt
cmp
inc
cmp
incl
mov
aaa
cmp
jle
sbb
and
insb
cs
stos
sub
add
in
adc
push
std
insb
dec
sbb
jnp
lock
jo
adc
xlat
out
xor
inc
loopne
call
add
xchg
jae
adc
and
sbb
nop
xor
inc
sbb
test
adc
subl
add
xor
cmp
aad
push
in
popa
lret
lods
shl
mov
dec
mov
cmp
dec
xchg
sbb
mov
out
rcrl
adc
and
lcall
cmp
rolb
sub
pop
xor
outsb
scas
stos
pop
pop
mov
adcb
push
or
cmp
enter
es
loopne
add
adc
and
adc
mov
adc
sub
jb
loopne
jae
xor
pop
xchg
aaa
into
jo
add
push
lods
inc
rclb
sbb
lret
sti
add
sub
ljmp
mov
inc
insb
lods
leave
xor
pop
testl
or
popf
and
adc
aad
lods
out
inc
pushf
dec
mov
loopne
push
pop
mov
and
popa
add
dec
add
inc
loope
or
clc
mov
lock
mov
push
adc
add
cmp
jns
push
push
xor
cmp
es
ret
lds
or
outsl
ffreep
and
sbb
xchg
xlat
jnp
daa
mov
inc
pop
pop
inc
lds
cmpsb
and
xlat
push
push
into
icebp
push
test
and
add
or
les
mov
cmc
ja
sbb
je
sbb
bound
add
mov
subl
mov
sub
or
inc
scas
lea
jo
enter
inc
icebp
cmpsb
push
cmp
jecxz
dec
add
xor
push
inc
mov
stos
pop
adc
pop
ret
inc
scas
inc
es
xor
cmp
xor
push
mov
jno
cmp
sub
test
out
push
push
add
push
aam
stos
rclb
or
xor
gs
inc
jae
lret
insl
loop
inc
jnp
sub
pop
fwait
pop
mov
add
ja
ret
sub
xchg
in
inc
adc
ret
add
out
push
sbb
xor
mov
sbb
or
push
mov
xchg
dec
adc
push
xor
adc
ja
aad
pop
jb
mov
add
mov
test
push
scas
bound
pop
pop
pop
mov
sub
pop
push
lods
sbb
adc
push
mov
mov
stos
dec
das
call
shrl
cmpsb
enter
sbb
adc
adc
lods
roll
pop
das
inc
push
int
dec
icebp
sar
rorl
push
jo
out
or
adc
inc
flds
icebp
out
jmp
add
ss
jmp
aas
repz
push
xor
les
push
push
popf
scas
cmp
rcl
sbb
adc
addl
sbb
push
adc
add
sbb
xor
loop
dec
loop
adcl
push
inc
dec
adc
ret
sub
cmp
sbb
mov
mov
xchg
inc
test
rcll
inc
add
xor
test
rorb
inc
fdivrs
or
inc
aad
call
mov
or
cmpb
enter
notb
dec
jge
icebp
xor
sub
addr16
rcll
loopne
out
adc
mov
and
cmp
data16
and
faddl
fistpll
test
add
mov
mov
in
loopne
sbb
adc
cmp
mov
xlat
push
adc
cltd
pop
adc
movlps
popf
adcb
mov
aad
mov
push
dec
sbb
jno
jnp
adc
test
in
lods
cli
add
icebp
pop
cmp
xchg
enter
sbb
ljmp
push
ret
add
pusha
loopne
xlat
movsb
inc
fs
inc
dec
adcb
cmp
out
lret
test
lock
in
shll
push
sub
ret
mov
xor
add
stc
fwait
and
sar
movsl
movsb
test
push
add
xor
jl
or
mov
jno
xor
add
add
or
and
sbb
xlat
add
or
sub
add
out
dec
loop
leave
xchg
jle
push
jmp
xor
xchg
adc
stos
scas
jp
mov
xchg
add
cmpsb
add
cmp
add
stos
cmp
cmp
sarb
ja
mov
lock
pop
xchg
jb
loop
fsubs
enter
xchg
sub
in
and
insl
sbb
in
inc
out
add
push
cltd
pushf
and
add
push
pop
xor
and
in
shrl
fdiv
or
out
add
pop
rorl
dec
jne
cs
cltd
push
les
push
jno
push
test
sahf
mov
imul
sub
xchg
inc
sub
aam
lret
push
sub
mov
xor
cltd
add
mov
jae
mov
stos
imulb
add
stos
jo
mov
fwait
mov
xchg
imul
pushf
push
mov
add
or
add
add
sbb
xchg
inc
sbb
dec
mov
inc
push
and
int3
bound
inc
lds
push
stos
in
adc
mov
jb
xor
fists
scas
and
cwtl
xor
ret
insl
jecxz
xchg
rorb
ficoml
jo
dec
adc
pop
adc
inc
xor
push
loopne
lret
push
stos
sbb
add
dec
cmp
scas
imul
pop
inc
pushf
or
mov
loope
sbb
adc
rcrb
xor
adc
inc
jo
mov
adc
jo
mov
in
jo
cmp
stos
or
aas
jb
xor
push
mov
mov
int
cmp
loope
test
xchg
and
sbb
xor
sbb
pop
xor
pushf
add
call
imul
mov
jne
out
loopne
shll
inc
push
stos
data16
scas
cmpsb
add
ret
test
and
mov
mov
stos
mov
shll
dec
adc
xor
adc
nop
adc
sbb
and
mov
add
cmpsb
push
dec
lock
icebp
out
add
addb
or
add
or
push
and
push
xchg
movsl
dec
popa
xor
inc
mov
sbb
jo
inc
sbb
loope
ret
fdivrl
mov
or
mov
add
xor
cmp
add
add
push
pusha
loope
scas
mov
insb
add
cmpl
bt
push
sahf
adc
mov
or
sub
add
mov
stos
xor
out
shl
incl
mov
jbe
notl
rcl
les
sbb
or
inc
pop
mov
in
cmp
jne
push
rolb
inc
sub
push
es
push
les
rcrl
rorb
iret
sub
adc
adc
loope
add
sub
das
inc
cltd
xchg
add
orb
add
les
or
add
push
push
cmp
cmpsb
sub
push
sbb
call
repnz
enter
repnz
nop
mov
adc
sbb
int3
fdivrl
cs
or
push
add
movsb
pavgb
aas
aaa
or
and
add
lds
add
cmpsl
mov
sub
loopne
add
shrl
xlat
fidivrl
or
add
hlt
stos
decl
in
adc
dec
xchg
sbb
ljmp
inc
sbb
fcoml
shlb
ss
push
dec
mov
lahf
push
inc
mov
mov
xor
int3
add
and
and
ljmp
shl
sbb
sub
lods
sub
add
xor
mov
sub
sbb
push
les
out
mov
mov
push
test
add
fistpll
push
sub
rolb
sbb
sub
dec
push
pop
xchg
xchg
cmp
movsl
cmc
rol
les
sub
ljmp
pop
iret
jecxz
pop
add
pop
adc
add
cltd
jo
sahf
mov
sarb
sub
adc
jo
cmp
sub
das
nop
cli
dec
cmp
mov
inc
scas
mov
add
push
push
push
pop
add
mov
sbb
or
sbb
scas
mov
test
inc
jae
or
and
dec
mov
sahf
xchg
add
push
sbb
sub
or
ljmp
xchg
adc
xor
add
pop
sbbb
jnp
lock
je
sub
jg
pop
sub
clc
push
jg
mov
daa
dec
adc
add
dec
in
jle
out
pop
lock
lods
xor
gs
add
xchg
and
test
movl
int
icebp
and
jb
and
dec
test
pop
popa
test
mov
jbe
dec
xchg
nop
shll
mov
fcmove
adc
mov
xchg
cs
jo
cli
mov
rorl
or
xor
adc
xor
dec
adc
pop
push
loopne
rcll
aam
ljmp
pop
bound
repnz
idivl
add
or
add
cli
pusha
adcb
dec
orl
xor
jo
inc
lret
push
pusha
jo
test
mov
shrb
or
lahf
sbb
test
cmp
rorb
mov
adc
jo
dec
pop
mov
call
xchg
loope
sti
jmp
mov
add
loopne
fdivrs
orb
sbb
ja
mov
add
jno
popa
stos
into
or
jmp
mov
mov
sub
rorl
faddl
mov
fsubrl
icebp
pop
test
mov
xchg
xchg
rcr
sub
mov
in
loopne
mov
push
es
adc
ficoms
and
test
inc
and
cmp
out
push
nop
mov
xor
mov
adc
mov
fnstenv
adc
dec
sbb
sbb
loopne
andb
addb
cmp
push
add
xor
sbb
adc
lock
mov
mov
jo
adc
mov
outsl
or
xor
aaa
mov
cmp
aad
out
xor
sub
cli
loop
jb
jb
inc
sbb
mov
lcall
sbb
movsl
dec
sarb
adc
pop
decl
mov
pop
push
pop
xchg
adc
push
pop
add
pop
pushf
out
push
add
aas
loope
ja
pusha
stos
dec
pop
lret
aad
mov
lods
push
adc
sub
add
lret
cmpsb
in
push
or
das
js
xor
jo
ljmp
iret
fdivr
enter
out
dec
test
dec
gs
cmp
fisttpl
mov
lds
sbbl
imul
mov
xchg
loopne
mov
push
pushw
push
movsl
push
inc
cwtl
or
push
xor
test
xor
xchg
push
popa
mov
nop
popl
push
jae
je
mov
xchg
mov
pop
xor
lds
xchg
add
and
cmp
movsl
scas
add
stos
popf
mov
dec
es
jae
mov
sbb
sbb
dec
lods
or
ret
out
sbb
inc
aad
jge
xchg
mov
push
or
push
stos
pushf
add
enter
outsb
sub
mov
adc
sub
xor
cli
pop
clc
lock
pushf
pmaxsw
ja
rclb
gs
sub
jne
ljmp
divb
mov
jle
mov
jbe
dec
ja
stos
out
test
adc
scas
mov
stos
cmpsl
dec
push
test
xor
push
shrl
pop
mov
xor
mov
inc
add
adc
stos
pusha
cmp
push
and
push
out
jl
inc
xor
mov
lret
xchg
dec
in
fisttps
data16
adc
test
je
adc
inc
pop
push
aas
or
add
cmpl
mov
clc
aaa
lock
mov
cmp
mov
cli
sbb
aas
adc
and
and
mov
adc
pop
or
inc
cmc
sub
cmc
mov
dec
mov
push
push
je
push
cs
adc
pop
pop
inc
mov
iret
or
test
xchg
jb
push
rolb
or
sub
bound
pop
cwtl
add
push
and
jo
adc
sub
int3
or
les
movb
insb
cmp
and
push
es
ret
subl
test
aad
cmp
or
movsb
loopne
inc
jno
adc
adc
mov
dec
inc
les
pop
or
cwtl
jnp
cmp
and
aad
adc
jo
xor
adc
fldcw
enter
stos
rcpps
adc
cmpsl
or
cmp
xor
sbb
ret
test
push
addl
dec
cmpsl
sub
stos
xchg
or
mov
jo
addb
decb
push
fadds
cmp
jne
test
out
inc
lods
jo
in
mov
pop
data16
sub
adc
loope
mov
jo
int
scas
pushf
addr16
add
aad
push
adc
fs
add
cmpl
stos
or
or
jnp
cmp
xchg
push
lds
scas
and
and
push
xor
ret
and
jns
or
mov
add
cmp
pop
jmp
inc
lods
and
or
ja
xor
stos
aas
xlat
push
add
ret
icebp
cld
or
inc
push
and
and
add
mov
scas
das
sbbb
jecxz
stos
out
adc
notl
and
add
xor
lock
xchg
or
mov
mov
flds
push
inc
sub
sahf
or
ljmp
subl
push
jl
inc
push
adc
lods
jle
cmpl
or
and
or
inc
adc
and
stos
adcb
addr16
adc
cmpsb
and
cld
jbe
add
sub
es
outsl
loopne
leave
pop
push
add
adc
stos
mov
std
addr16
and
insl
inc
inc
xor
stos
inc
mov
outsl
aam
or
dec
push
pop
jg
mov
orl
test
add
into
add
mov
insb
inc
rcl
cld
sbb
loop
push
leave
jns
mov
in
rolb
inc
orl
pop
pop
push
cs
add
inc
mov
and
lret
cmpxchg
add
mov
mov
ret
sbb
cmp
ljmp
lea
mov
inc
adc
xor
stos
dec
inc
jnp
and
add
and
cmp
jno
xchg
adc
stos
shll
notb
xor
sub
leave
popa
roll
xchg
sub
jmp
mov
lds
mov
rolb
xchg
js
dec
push
cmpb
test
push
addl
push
fwait
dec
and
fxam
xchg
add
push
and
add
movsl
addb
lcall
push
sbb
xchg
les
out
push
popf
leave
aaa
lret
push
cmp
mov
test
fstl
sub
rclb
push
add
push
pop
jg
lods
imul
and
sarb
pop
cpuid
cmpsl
xor
cltd
or
or
jmp
mov
sbb
shrb
mov
enter
xorb
out
ds
mov
cltd
cwtl
jmp
and
lea
ret
test
mov
sub
addb
sub
test
pop
inc
test
cmp
sbb
clc
out
sbb
jg
rolb
mov
std
mov
les
in
jg
mov
inc
rcrb
rclb
loopne
arpl
pop
push
sub
aad
sbbb
mov
cmp
cmpsl
sbb
or
lret
xchg
add
add
xor
loop
sbb
mov
aad
and
adc
jmp
or
push
dec
sbb
add
mov
addr16
xor
test
mov
loop
push
push
pop
or
iret
dec
xchg
push
pop
cmp
sbb
adc
fistpl
or
mov
mov
or
sbb
mov
or
xor
push
xchg
jns
sbb
adc
stos
sub
cmp
shll
mov
mov
push
test
inc
mov
or
xorb
jle
aad
xchg
dec
cmp
rcrb
add
aad
xor
pop
in
sub
les
sbb
cmp
xchg
test
pop
orb
mov
and
or
mov
sbbb
adc
xchg
ret
aam
cmp
pop
jge
or
es
popa
sub
les
inc
add
sbb
shlb
mov
push
sahf
inc
in
adc
test
cmp
enter
add
gs
outsl
dec
mov
inc
jp
mov
push
popa
mov
or
lea
xor
jno
movsb
icebp
push
sbbl
push
cmp
cmp
add
lcall
sbbl
pop
les
pop
popf
dec
sbb
cmp
test
and
push
test
lds
pop
sbb
push
add
pop
sbb
adc
mov
aad
push
xor
xor
ret
pop
mov
bnd
or
cmc
sub
mov
gs
dec
iret
pop
add
xor
ds
xchg
jns
adc
sbb
push
push
outsb
popw
sub
stos
sub
xchg
add
pop
mov
pop
push
mov
lods
loope
pop
aas
and
insb
ret
cmpsl
adc
adcb
add
pslld
xchg
adc
or
in
enter
in
iret
fmull
or
sbb
lock
pop
into
pushf
mov
push
or
or
mov
lock
push
out
jp
mov
and
std
xchg
cmp
mov
cltd
pop
sub
fs
aam
push
inc
lock
pop
mov
and
sbb
sub
or
call
test
test
adc
xchg
inc
loopne
and
push
push
sbb
rorb
mov
add
imul
adc
xorb
daa
xor
sub
mov
pop
test
mov
sub
push
vcmpngtsd
std
shrl
bound
clc
test
adc
mov
inc
push
xor
mov
add
fsubrl
pusha
inc
xor
push
inc
inc
xor
fdivrl
adc
sbb
int
push
sub
xchg
repnz
popa
and
push
test
mov
not
fwait
pop
jle
or
adc
aam
and
sub
adc
sub
ret
sbb
or
adc
mov
hlt
call
hlt
sub
dec
dec
sbb
or
test
iret
stos
addl
das
or
subb
adc
sbb
rcll
push
mov
add
call
add
push
jge
out
inc
push
dec
int3
pusha
add
adc
sbb
and
inc
and
popa
pop
rcll
popa
or
add
mov
sub
inc
jno
hlt
push
rcr
push
and
or
scas
xchg
or
or
int3
mov
jl
mov
push
fdivrl
jns
add
cmpsl
push
lock
pop
adc
inc
loopne
pop
jmp
inc
mov
stos
dec
outsl
bound
sbb
add
js
adc
cmpl
jnp
lahf
lods
stos
loopne
add
mov
jae
and
fdiv
push
sbb
xchg
aam
ds
cmp
jo
push
push
jge
sub
add
adc
push
test
add
aam
inc
clts
lock
push
push
dec
inc
mov
or
js
add
hlt
sahf
pop
fcmovbe
mov
and
sub
push
inc
push
shr
adc
adc
mov
in
insb
add
data16
add
and
cmp
or
add
imul
lods
addb
ror
adc
decl
lods
sbb
lret
sub
out
mov
xchg
mov
stos
inc
scas
sbb
dec
into
jmp
ret
sub
mov
add
scas
or
sbb
aad
adc
jp
test
or
inc
test
aas
fdivp
sbb
cmp
pop
frstpm(287
sub
scas
stc
or
push
push
dec
inc
sbb
stos
idivl
shrl
lcall
ret
vpminsw
ljmp
lcall
cmp
adc
loope
xor
in
test
add
adc
cltd
cmp
sub
add
test
lret
test
inc
icebp
cmp
cs
lock
imul
and
add
in
xor
add
mov
cmp
adc
popa
fcomps
xor
aaa
movsb
adc
inc
and
sub
cmpb
int3
adc
xor
push
lret
in
inc
lods
cmp
sti
adc
test
bound
xchg
mov
stos
adc
push
adc
test
adc
mov
jo
xor
daa
mov
or
cmp
xchg
fidivrl
add
or
mov
push
shlb
fimull
es
mov
ljmp
out
data16
inc
loopne
push
int
xor
lock
push
popa
sub
adc
or
xchg
mov
cmp
adc
jecxz
fisubs
loopne
lock
movl
or
xchg
pop
xor
push
popl
test
enter
lods
cmpsl
xchg
lret
inc
inc
aam
or
or
pop
neg
dec
mov
jbe
inc
lds
pminsw
inc
add
inc
rcrl
cmp
cwtl
int3
or
adc
lret
mov
pop
sbb
and
test
mov
and
mull
or
lds
jle
inc
add
dec
and
mov
or
xor
add
int3
xchg
rolb
jne
cltd
fwait
inc
add
xor
roll
mov
sbb
push
sub
stos
and
addb
out
mov
push
mov
adc
pop
out
cmpsb
or
outsb
add
mov
imul
sti
jg
mov
push
aam
lret
pop
inc
sub
and
test
inc
dec
addr16
mov
addl
pusha
push
pop
jne
or
in
hlt
or
adc
and
aaa
popa
js
adc
jnp
sub
push
adc
add
mov
negb
and
push
jmp
bound
push
adc
adc
and
push
cltd
stos
pusha
testb
and
sub
mov
pop
pusha
mov
std
in
xor
hlt
in
loop
jge
pop
jmp
bound
mov
or
popf
adc
loop
mov
and
mov
pusha
pusha
inc
lock
gs
sbbb
pop
shll
push
popl
mov
adcl
pop
int
roll
dec
inc
cmp
push
adc
jnp
dec
movsl
insb
repz
fsubrs
loopne
push
mov
fsubl
or
cwtl
cmp
cmovge
inc
jg
xor
enter
mov
cmp
sbb
xchg
and
sbb
add
cmpsb
adc
xchg
or
xchg
lods
push
mov
inc
loopne
xchg
add
jge
jle
mov
adc
push
add
and
loopne
sbb
sbb
mov
add
jb
ljmp
jno
ljmp
movsl
fiaddl
mov
mov
sbbl
sbb
pushf
xor
add
mov
loopne
add
pop
sub
xchg
xor
subb
cmp
test
pusha
add
sbb
test
push
cmp
test
mov
push
mov
sub
jl
or
out
or
or
add
lret
scas
inc
mov
or
push
lods
xor
sbb
testb
ret
int
scas
ficompl
in
and
pop
mov
adc
or
inc
insl
movsl
xor
inc
jae
call
and
adcl
sbb
int
sbb
lea
inc
jae
add
xorl
popa
push
dec
mov
jae
adc
xchg
and
push
test
jae
adc
dec
add
out
mov
loope
ret
inc
mov
enter
pop
or
push
xor
loope
clc
aaa
cmc
sub
sub
and
ffree
push
in
inc
pushf
adc
cmp
xchg
xchg
jno
pop
inc
xchg
pop
add
push
mov
xchg
lret
lods
and
pop
pusha
test
nop
addr16
adc
dec
dec
xor
cmp
adc
aaa
xchg
mov
lods
pop
push
pop
ja
mov
rolb
orl
adc
test
cmpl
arpl
xorb
add
xor
pusha
subb
dec
in
adc
inc
adc
jo
xchg
push
outsl
mulb
gs
rorl
cmp
dec
xchg
cmp
add
loopne
ss
fcomps
adc
js
push
jbe
ljmp
mov
daa
xchg
push
out
xlat
sbb
push
cli
cmp
sub
mov
int
test
popf
testb
add
xor
fsin
call
sub
adc
aad
and
add
lods
js
push
shl
push
scas
cltd
sti
jge
cmp
xor
or
dec
dec
incl
in
inc
xchg
movsl
xorb
xchg
jp
pop
xchg
and
inc
adc
push
mov
jo
cltd
dec
sti
in
and
rorb
mov
push
aad
lcall
inc
loope
or
dec
ficoms
movsb
rcll
ret
add
pushf
mov
cmp
and
xor
push
lds
cmp
add
lcall
push
xor
sub
mov
sub
mov
add
popa
cmp
rcl
inc
daa
xchg
xchg
ret
sbb
lods
dec
push
call
montmul
cmpsb
xorl
jnp
xor
mov
cmpsb
ret
mov
ret
sub
xchg
pop
repz
addl
stos
add
cmp
inc
cmp
xor
repnz
sub
fstps
xor
cmp
pop
pushw
sbb
adc
add
shl
mov
shll
add
inc
mov
lret
fistl
jo
xchg
and
ficompl
add
xchg
inc
out
or
cmpsl
das
test
sub
mov
out
es
loopne
jne
push
jecxz
adc
or
cwtl
jmp
imul
loope
gs
or
and
popa
loopne
and
pop
xor
inc
sbb
and
icebp
pushf
mov
push
cmp
sub
hlt
add
aas
xchg
lret
xchg
mov
pop
sbb
inc
mov
stos
jp
inc
cmp
or
jo
hlt
mov
fisubs
pusha
and
scas
and
add
inc
jns
shlb
movsl
daa
hlt
out
jb
sbb
sbbl
mov
xor
test
in
aaa
sub
cmp
ss
test
repnz
sbb
push
ud2
cmc
jp
push
aad
addb
cmp
mov
mov
inc
shl
inc
mov
hlt
mov
add
mov
mov
mov
inc
ret
rorb
adc
push
push
cmpsl
sbb
sbb
test
decl
cli
jbe
push
mov
mov
insb
xchg
add
or
xor
dec
cmp
adc
push
cwtl
dec
inc
add
sbb
mov
popa
push
push
inc
adc
lcall
repz
mov
lcall
cwtl
xor
inc
cmp
adc
fcoms
jecxz
out
add
insb
xchg
add
push
or
mov
jae
arpl
push
push
in
push
cmpb
xor
push
arpl
inc
scas
pop
inc
in
push
imul
add
cmp
sub
rcl
add
pop
add
push
xor
call
pop
push
fnstcw
mov
pop
out
sbb
jb
add
sbb
xchg
add
test
scas
push
pop
add
movsl
pop
jmp
in
jo
leave
sub
inc
jne
lret
pusha
and
or
xor
mov
sub
loope
pushf
mov
out
dec
addl
shl
cs
loopne
xor
push
in
mov
xor
call
pop
xor
xlat
fdivs
and
jb
sbb
sahf
or
xor
mov
test
mov
cmp
push
adc
scas
call
sub
leave
int
test
clc
jl
mov
or
push
popa
clc
shll
jne
jo
mov
mov
pop
rorl
push
in
xchg
arpl
adc
stos
and
jae
sbb
pop
and
outsl
shlb
or
mov
mov
pop
pop
inc
pushf
nop
ljmp
loopne
dec
dec
sbb
mov
and
test
stos
inc
xchg
je,pn
shll
xchg
movsl
sbb
adc
push
or
outsl
test
jb
jp
sbbb
andnps
jo
xlat
mov
ret
or
add
lea
fs
in
pop
and
adc
sub
pop
hlt
in
sbbl
aam
adc
inc
adc
push
cld
bound
push
add
inc
and
xchg
mov
xor
dec
push
xchg
rcl
inc
and
icebp
mov
daa
sub
mov
jmp
sub
xchg
or
inc
out
adc
xor
dec
and
add
sub
mov
adc
inc
out
inc
xchg
and
subb
iret
in
push
jo
xor
add
xchg
insb
xchg
dec
mov
xor
mov
ret
pusha
or
adc
cmp
jmp
jnp
or
es
pushf
js
mov
xor
in
jbe
add
scas
mov
mov
and
call
insb
sub
jo
mov
movsl
inc
loop
enter
nop
xor
rorb
add
and
in
pop
rolb
test
imul
pushf
ja
inc
dec
pop
test
fidivs
fists
mov
xor
xor
subb
in
jb
das
mov
rclb
add
mov
push
sub
sbb
in
pop
int
call
or
test
xchg
ret
push
mov
sbb
jo
xor
xchg
call
cwtl
or
stos
ja
cmp
test
cwtl
mov
orb
sbb
lea
orl
cmpb
adc
pusha
orb
pop
hlt
loopne
pop
pop
and
fnstenv
test
adc
or
pop
sub
test
cmc
jae
and
dec
mov
ret
test
pushf
cmp
scas
sub
dec
sub
bnd
sbbb
push
daa
pop
in
or
loopne
inc
mov
xor
inc
cmpsb
jb
sub
test
cmpsb
stc
cmpsb
mov
push
sbb
push
test
cmp
mov
hlt
ret
mov
inc
sub
pushf
push
add
fiadds
push
mov
inc
jo
xchg
lret
push
xor
mov
divb
loope
in
movsl
repz
aas
into
push
loope
in
xchg
mov
or
outsb
rcll
or
daa
test
push
push
dec
mov
shlb
outsb
aam
push
xor
xchg
add
xchg
dec
inc
inc
jecxz
pushf
mov
idiv
mov
pslld
clc
adc
jmp
add
dec
inc
push
add
sub
adc
sbb
cmp
decl
add
inc
push
inc
inc
push
insb
data16
mov
incl
gs
gs
xor
cs
dec
dec
insb
jno
and
call
inc
push
dec
je
add
inc
dec
xor
inc
xor
xor
xor
out
mov
popa
inc
pop
xor
dec
push
add
xor
push
xor
xor
add
pop
test
sbb
sbb
xor
add
popf
jmp
lcall
out
movsl
aam
ret
pop
les
or
inc
cmpsl
pop
scas
inc
dec
add
sub
call
lock
lea
testb
lret
sub
and
std
cld
or
pusha
mov
bound
lcall
or
sbb
mov
lahf
fs
adc
stos
cltd
jbe
in
cmp
dec
ficoml
test
cmp
mov
sbb
pop
add
and
jne
in
mov
call
scas
push
cltd
sbb
je
cmp
ret
xchg
inc
jp
enter
call
adc
scas
popa
lds
out
inc
add
push
and
add
jns
jnp
lea
call
imul
xchg
cwtl
cmp
mov
cmp
xchg
push
sbb
mov
jp
add
outsb
repz
mov
mov
mov
jbe
jae
dec
sbb
mov
sar
adc
int
cmp
repz
jge
xlat
push
dec
ret
stc
inc
notb
aad
xor
arpl
aaa
mov
fiaddl
lea
in
je
ds
mov
popf
stos
stc
mov
mov
adc
xlat
xchg
adc
or
jmp
imull
pushl
cmp
push
imul
pop
or
push
stc
sbb
mov
jmp
mov
fsts
sub
lods
imull
imul
std
push
jno
dec
dec
int3
mov
inc
ljmp
shrb
repnz
insb
call
inc
jecxz
mov
adc
push
xchg
les
add
pushl
test
ljmp
jns
push
leave
jge
mov
fcomp
xor
pop
cwtl
test
fcoml
test
xchg
mov
insb
and
cltd
mov
test
mov
pop
popa
orl
add
add
lret
cli
jne
ficomps
push
dec
fwait
imul
ljmp
std
jo
into
ds
sarl
mov
cmp
pushf
outsl
xchg
cmp
repnz
mov
fistpl
std
push
ljmp
pop
cmp
cmpb
dec
sahf
dec
mov
out
xchg
ss
iret
dec
sub
out
pop
pop
inc
mov
inc
xor
arpl
dec
loope
incl
inc
das
aaa
xor
jp
add
xchg
out
jbe
clc
cmp
test
mov
mov
ljmp
xchg
dec
adc
push
arpl
fimull
inc
ljmp
mov
idivl
ljmp
cmp
pop
stos
repz
adc
nop
repnz
mov
idiv
jg
pushl
les
cmpsl
test
mov
cld
cmpsl
sbb
cmp
xchg
and
insb
decl
cld
and
fildll
lret
out
push
sarl
jno
stos
std
iret
in
jnp
jo
inc
fldenv
mov
shl
add
std
lods
dec
push
xchg
push
inc
inc
outsb
jnp
in
ljmp
clc
mov
scas
lret
jecxz
jg
jne
sub
out
lret
jo
decl
push
push
pop
enter
mov
into
mov
aaa
adc
dec
negb
push
call
adc
jne
mov
jl
orl
mov
mov
popa
add
gs
push
xor
movsb
lahf
dec
jg
imul
lahf
sub
cltd
xchg
jmp
push
movsl
popw
imul
stos
dec
mov
dec
leave
cmovns
cmpsb
lds
push
jns
andl
arpl
jp
jg
stc
icebp
add
cltd
shll
test
jnp
add
repz
les
pop
out
jno
imul
rcll
or
incb
incl
loopne
cs
insl
mov
lds
popa
in
xchg
ret
out
cmpsb
pop
xchg
add
lahf
iret
cld
outsl
bound
pop
scas
jecxz
into
dec
andl
fwait
cltd
inc
aam
xorl
sbb
mov
jecxz
mov
pop
add
int
hlt
out
push
insb
lahf
cmpsl
sti
inc
and
leave
xor
cltd
stc
sbb
andb
jge
call
pop
push
daa
cltd
iret
mov
pushl
push
jecxz
aam
arpl
and
push
add
test
fnsave
inc
incl
xor
xchg
test
nopl
push
jb
pop
in
and
inc
pop
dec
dec
xor
sub
jns
ljmp
fnstenv
call
add
add
incl
xlat
fs
push
popf
push
mov
das
enter
aad
test
push
jge
sub
decl
int
sti
rcll
pop
cmpsb
mov
jmp
lods
jecxz,pn
xchg
jp
incl
push
movsl
mov
iret
pop
push
fsts
mov
sub
pop
push
and
data16
out
sub
mov
xchg
mov
adc
movsb
jb
lret
pop
lret
jbe,pt
jmp
pop
ret
int
fisttpll
adc
shll
stc
xchg
lods
daa
pop
inc
cmpsb
pop
mov
incl
push
mov
mov
dec
adc
add
push
dec
inc
adc
xor
aad
jmp
inc
pop
movsl
and
jnp
ljmp
mov
sti
mov
dec
mov
and
popa
xchg
jno
adc
add
mov
cmp
adc
decl
dec
mov
out
jle
jmp
mov
cmc
xchg
and
add
jo
xor
cmp
fildl
xchg
addr16
xor
push
push
mov
mov
pushf
inc
adc
pop
xchg
push
lahf
fldt
gs
test
dec
pop
inc
in
jns
imull
fucom
adc
jno
mov
test
cmp
add
dec
jle
pop
dec
ja
or
sub
mov
dec
dec
out
xor
jbe
mov
inc
incl
or
xchg
mov
dec
mov
cld
sar
mov
pop
out
ret
jle
sbb
std
cmc
in
lea
arpl
jne
lods
out
mov
sahf
mov
mov
test
fucomi
push
and
dec
cmp
mov
daa
jns
sbb
cmp
movsl
xor
icebp
daa
gs
push
es
orl
jbe
jecxz
inc
xlat
cmp
jno
adc
jnp
sub
into
jl
pop
and
sbb
inc
mov
push
leave
push
in
call
cwtl
sub
lea
mov
jp
xchg
stos
pushf
pop
push
insl
imull
ljmp
cltd
ret
out
aam
cmp
mov
sbb
shll
iret
out
mov
adc
mov
dec
int
int
and
push
ljmp
pop
movsl
or
or
cmp
rcl
sti
call
movsl
lds
les
int3
inc
decb
jno
lcall
mov
enter
call
and
je
cld
icebp
push
sub
fwait
jecxz
divb
push
stc
jbe
dec
adc
add
add
call
mov
ss
and
insl
gs
arpl
cwtl
cmp
mov
mov
dec
in
std
add
push
test
xlat
mov
maxps
clc
sbb
stos
push
push
sub
push
jnp
cmc
std
or
outsl
xor
pop
out
xor
sub
clc
call
pop
sarb
cmp
cmc
loope
insl
lcall
loopne
mov
imul
arpl
dec
pusha
das
dec
mov
adc
ret
sbb
ljmp
aam
sbb
fadds
cmpsl
and
xorb
sub
jg
mov
lahf
or
aaa
xchg
les
xchg
pop
pop
fnsave
out
lcall
mov
jae
add
outsl
adc
fcomi
jmp
cs
popa
jg
pop
cmp
shrb
and
sbb
mov
rcrl
cld
decl
mov
jmp
push
lods
cmc
outsl
mov
sahf
xchg
jbe
or
cmp
lretw
pop
in
inc
out
sbb
mov
daa
xor
mov
adc
sbb
xlat
lds
mov
ss
push
leave
icebp
mov
inc
or
or
and
pusha
cmp
data16
mov
mov
in
mov
jg
mov
in
inc
dec
ss
test
inc
ljmp
jmp
cwtl
or
xchg
push
fdivl
cwtl
adc
call
loopne
movsb
push
push
ret
in
das
cs
lcall
mov
add
sub
jb
xor
call
cmp
shlb
push
aas
jl
loope
scas
xchg
push
mov
mov
xor
jo
pop
lcall
jmp
sub
lret
popf
inc
xorl
mov
gs
xchg
add
loop
loopne
sbb
out
into
or
dec
jno
mov
mov
into
xor
stos
nop
mov
cmpsb
pushf
cmp
insl
sti
rorb
aaa
enter
popf
incl
ljmp
cmp
xchg
into
xor
rolb
icebp
adc
dec
or
lea
outsl
insb
icebp
dec
mov
pop
leave
iret
sbb
icebp
filds
adc
sbb
insb
test
stc
sbb
filds
mov
mov
call
pop
pop
movsb
pop
insb
cmpsl
add
xchg
jmp
push
fs
xchg
popf
hlt
faddl
insl
xchg
ljmp
js
adc
ret
and
sub
adc
in
roll
cld
lea
stc
jnp
stc
xlat
sub
stos
cld
imul
bound
daa
repz
adc
shrb
pop
and
outsb
into
mov
pushf
pop
test
bound
sti
or
sub
xchg
xchg
aad
insl
jl
das
std
pop
lock
cmp
shlb
shr
xor
sti
jmp
mov
adc
mov
call
repnz
mov
in
in
mov
sub
adcl
dec
lcall
aad
pop
test
push
mov
aam
or
sbb
xor
lcall
jle
fnstsw
into
jbe
into
push
ret
jmp
xchg
inc
ljmp
jl
xchg
mov
adc
shrl
add
imul
and
mov
or
out
cmc
popa
push
popf
adc
mov
lods
jne
pop
mov
fucomip
jmp
in
lds
mov
arpl
or
inc
or
incl
ret
rcr
and
and
sub
icebp
lcall
pop
decb
add
aaa
dec
call
imul
in
dec
mov
js
cmpsb
sub
sub
ljmp
jmp
jle
or
pop
std
adcl
in
in
xchg
jo
mov
xchg
js
fdivrs
mov
pop
inc
ljmp
iret
ficoml
daa
ljmp
je
addb
decl
jbe
mov
push
shlb
punpcklbw
inc
ret
cs
inc
fimull
out
imul
lcall
cli
gs
cmc
cltd
pop
cmpsb
sbb
fidivrl
mov
arpl
outsb
shrl
sub
ficoms
cmp
out
add
cmpsl
int3
pop
pushl
out
or
push
inc
shlb
xchg
mov
mov
mov
inc
lock
shll
popf
lock
lods
lcall
scas
movsl
lcall
cmp
xchg
xor
sbb
cli
pop
xchg
mov
sar
call
adc
mov
mov
inc
test
fs
mov
dec
mov
roll
aas
imul
or
sbb
loop
dec
sub
loopne
scas
ja
xchg
lock
lods
adc
insl
fstps
ljmp
and
sub
jp
pushf
add
sub
fdiv
inc
jmp
add
jge
push
xchg
nop
fcoml
in
addb
pop
jp
push
in
fcmovnbe
fwait
out
vphaddbd
pop
jns
cmc
das
sarl
outsl
inc
sbb
sahf
mov
mov
daa
cs
or
cltd
xor
cmp
inc
sbb
pop
sbb
inc
fcomps
lret
daa
in
push
mov
push
fisttps
pop
popl
pop
and
test
movsb
or
inc
sbb
xor
add
outsl
cmp
mov
int3
les
or
cmp
rcrl
jg
xchg
outsl
divl
add
shlb
ljmp
jno
dec
and
hlt
xor
jnp
adc
les
enter
sub
push
pop
push
jp
and
and
movsb
pop
aas
daa
ja
loope
xchg
shrb
jmp
ljmp
mov
mov
mov
inc
std
rcrb
jecxz
dec
std
mov
out
mov
push
mov
mov
push
ljmp
lock
imul
inc
xchg
test
dec
inc
or
inc
test
lcall
std
movsl
iret
and
xor
add
or
sub
repnz
lahf
cmpsb
xchg
clc
fisttps
cmp
lret
mov
or
test
mov
push
mov
ds
jno
sarb
fst
pop
cld
mov
push
shll
mov
test
cmp
mov
decl
dec
arpl
movsl
sub
push
xchg
loope
popf
into
sub
push
cmp
es
xchg
nop
lcall
jmp
xchg
xor
lods
dec
fbstp
das
es
xchg
pop
xchg
shr
mov
add
das
sbb
add
xchg
ljmp
aam
cmp
mov
or
xor
fbstp
push
mov
hlt
xor
jle
mov
shll
iret
and
jae
mov
sarb
js
jle
call
xchg
and
out
mov
mov
call
push
push
jo
out
movsb
jecxz
stc
or
or
dec
aam
jae
in
mov
vandnps
adc
sub
cli
sub
push
das
cli
movsb
decb
cmc
push
cli
adc
stos
test
jns
adc
adc
bound
gs
add
icebp
mov
mov
std
xchg
daa
lret
in
push
in
push
fbstp
rolb
jmp
cvtpi2ps
ss
aaa
dec
call
test
loope
sub
clc
incl
aam
pop
push
or
jg
stos
xor
mov
loop
add
and
test
das
hlt
pushl
inc
repnz
sbb
rclb
jne
xchg
jne
push
stos
fwait
call
push
test
xchg
jg
and
mov
push
xchg
lea
dec
push
jne
mov
mov
loope
push
in
pushl
lods
mov
xor
mov
lcall
push
sbb
stc
and
daa
jle
imul
adc
cmp
aam
mov
lcall
rcll
push
sub
into
nop
xor
mov
ret
call
cmp
jns
outsb
dec
dec
loopne
jno
jnp
lret
in
pop
mov
test
faddl
outsb
push
xchg
inc
call
insb
andl
sub
cmp
jmp
mov
inc
mov
or
mov
pop
pop
sub
decl
decl
jl
jge
clc
movsb
outsb
jo
repz
mov
add
gs
ljmp
pop
dec
add
mov
test
scas
mov
and
xchg
or
out
xor
incl
jne
mov
test
and
out
flds
out
mov
adc
out
mov
push
inc
cmp
mov
lds
mov
ljmp
inc
dec
xchg
sbb
rcrb
in
or
mov
xor
das
in
mov
jge
or
cwtl
int3
push
and
shufps
sti
test
rolb
pop
pop
popf
outsb
enter
call
lahf
cmp
int3
aad
adc
ror
dec
mov
mov
jb
pop
pusha
out
push
mov
subl
xor
je
adc
inc
cmp
int
cmp
ljmp
pop
inc
push
lock
jo
rcrb
lock
out
arpl
ljmp
aaa
mov
inc
mov
in
sarl
sub
sub
js
jg
nop
je
mov
jmp
sahf
mov
test
scas
mov
jge
pop
xor
sbb
cmp
add
jg
call
xchg
rorb
fdiv
insl
cwtl
dec
xor
mov
les
cmpsl
xor
cwtl
ret
mov
xor
sub
aam
mov
fdivl
mov
call
in
push
or
and
xor
pop
sub
push
mov
mov
xchg
jbe
or
fidivl
sbb
or
fisttps
movsl
mul
cmp
sti
pop
test
mov
push
les
xor
sub
mov
loopne
incl
mov
cmpb
jbe
ja
popf
and
decl
pop
or
ljmp
mov
aaa
sbb
lcall
add
mov
ret
jo
mov
ds
adc
lcall
idiv
pushl
les
pop
inc
adc
dec
or
in
iret
mov
push
cmp
jnp
or
cmp
insb
mov
outsl
decl
loope
ss
push
mov
ss
xchg
lahf
es
or
das
add
outsb
stos
cmpsb
lcall
cld
fsubrs
xchg
pop
and
jo
fldl
pop
pushl
test
push
push
sub
popa
xor
ljmp
es
je
arpl
popf
push
jmp
mov
add
repnz
sub
add
outsl
std
jne
and
popl
fldl
sbb
xor
in
sub
rcrl
cld
das
cmc
cmp
mov
popa
pushf
mov
mov
mov
cld
dec
ret
add
iret
ret
rcl
enter
ss
lock
push
jecxz
cli
jo
mov
movsb
out
sub
jg
aas
cltd
pop
cmp
pop
cwtl
push
loope
jl
or
sub
add
lods
out
stc
mov
add
fwait
adc
mov
incl
into
mov
inc
repnz
add
push
mov
shrb
sbb
jmp
out
and
out
mov
lahf
enter
pop
decl
mov
aas
cld
jp
dec
fistps
sbb
pop
rcrl
cmc
xchg
pusha
jmp
or
push
mov
lods
lea
mov
into
jae
mov
jns
mov
cli
fbld
rcrl
or
mov
mov
cltd
fidivrs
ret
test
insb
vmovd
and
jmp
test
xchg
or
insb
ljmp
aad
adcb
cmpl
pop
or
cmpsl
cli
adc
ljmp
gs
ja
lea
or
xor
push
cli
in
out
dec
stos
adc
cmpsl
jmp
cmp
jge
ljmp
mov
xchg
fs
jbe
xchg
pop
and
push
sub
ds
sub
and
jg
adc
mov
cs
and
mov
jnp
jb
and
cli
ljmp
lret
mov
jmp
cwtl
stos
sub
mov
add
pop
mov
jle
adc
decl
shlb
lods
push
inc
dec
shl
je
sub
or
scas
pop
ficoml
cmp
shll
je
add
sub
jne
dec
ljmp
jae
jl
fucomip
fimull
cmpsb
das
sub
push
leave
jns
ss
es
inc
aas
mov
push
call
inc
dec
int3
repnz
mov
pushf
add
adc
dec
lret
pop
pop
call
or
es
or
adc
dec
loop
pop
jle
incl
sbb
cmp
xor
out
sbb
ljmp
shl
pop
mov
dec
mov
jmp
or
mov
clc
das
lock
mov
inc
mov
loopne
push
jmp
pushl
fidivrl
loope
xchg
xor
bound
lds
cmp
das
dec
hlt
dec
push
or
mov
cmp
sbb
aad
jb
add
jae
jbe
imul
push
add
inc
jmp
jg
sub
dec
or
fsubl
mov
push
insl
stc
ret
out
fsubr
repz
cmp
push
mov
mov
movsl
jno
rclb
bound
or
in
inc
addr16
shrb
jne
pushl
loope
fstpt
pushf
test
cmp
pop
cli
jmp
jb
outsl
add
add
cmp
pushf
movsl
mov
mov
push
xchg
mov
into
dec
es
xchg
ljmp
orl
mov
daa
mov
in
jmp
movsl
pushf
lcall
xor
lods
xchg
jmp
add
push
test
repz
sahf
push
int3
lds
xchg
in
jmp
pop
add
pop
insl
mov
dec
jle
in
jns
dec
arpl
mov
and
ljmp
in
and
les
int
aaa
adc
lds
ljmp
sub
in
lock
sbb
cmp
push
lret
imul
push
mov
pusha
mov
pushl
stos
push
or
test
xlat
scas
ljmp
mov
incb
std
lret
clc
add
mov
mov
xor
xchg
mov
nop
sahf
mov
dec
cmpl
mov
mov
jmp
and
xor
jo
mov
jge
pop
add
inc
jo
lea
or
jge
lea
movsb
test
push
cmp
add
inc
out
bound
jg
pop
pop
ljmp
jg
scas
data16
pop
or
sub
in
add
lods
pop
xchg
ja
fildl
push
clc
xor
scas
bound
mov
nop
cmp
popl
adc
decl
xor
xchg
testb
sub
into
sbb
xchg
jb
scas
push
jmp
enter
add
xor
int3
ds
sysexit
dec
mov
lods
scas
mov
cmpsl
push
pushl
je
cwtl
jns
push
or
adc
dec
loop
loop
je
lods
inc
hlt
out
pop
pop
add
cld
mov
popa
dec
mov
dec
ds
lock
xor
clc
mov
cmp
xor
ret
movsb
and
hlt
sub
mov
cmpsl
push
and
mov
add
fs
ficoms
mov
mov
mov
jle
and
mov
xchg
lods
or
jno
sbb
and
adc
je
or
jmp
or
xchg
jae
sarl
sti
sar
push
adc
xchg
fdivr
incl
xor
out
xor
stc
mov
xor
iret
push
test
nop
dec
inc
outsb
ret
pop
pop
xor
std
call
jmp
xchg
cltd
and
mov
or
fistpll
lcall
and
adcl
decl
incb
or
out
dec
cmc
and
out
imul
jns
call
sub
push
xor
cwtl
push
inc
cmp
mov
mov
arpl
pop
ljmp
jbe
les
cmpsb
in
sti
cmpl
data16
call
mov
cmpsl
cmp
stos
or
dec
sub
fnstenv
sarl
in
inc
jmp
int
mov
cltd
adc
sbb
add
inc
cmpl
xchg
stc
sti
lock
cs
lcall
aaa
push
js
outsl
push
lret
inc
daa
imul
aaa
add
mov
pop
outsl
cmc
ljmp
mov
mov
mov
lcall
decl
int
cmpsl
xor
outsb
mov
cmp
jge
pushf
sub
roll
test
cmp
or
lods
mov
fsin
pop
adc
sbb
add
sbb
dec
or
das
icebp
decl
clc
mov
pop
outsl
sarb
xor
inc
ljmp
ljmp
xchg
jge
cmp
pusha
mov
test
inc
pop
cmpsl
lcall
daa
fwait
stc
scas
imul
dec
push
adc
fsubr
jo
pop
pushf
in
inc
test
lcall
jmp
jle
or
lahf
pop
mov
lods
dec
fdivs
int
mov
push
std
cmp
xchg
pop
popl
xchg
mov
xlat
idivl
sbb
shl
jb
jg
pushl
lret
pusha
imul
cmpl
or
incl
insb
ljmp
std
dec
pushf
adc
jmp
mov
divl
inc
or
pop
fucomip
fstps
push
pop
call
in
xor
xchg
xor
fcoms
add
mov
xchg
or
mov
int
pushf
mov
idiv
ljmp
cli
mov
in
mov
int
mov
movsb
or
push
pop
mov
jg
xchg
jns
shlb
jmp
pop
pop
adc
push
clc
jmp
xchg
mov
inc
pop
xor
mov
fdivl
call
push
test
mov
js
or
inc
push
idivl
mov
in
aaa
adc
dec
dec
lea
cs
sub
insb
out
test
jp
inc
cli
ret
insb
fldt
aad
imul
push
popf
mov
ljmp
dec
mov
imul
adc
pushl
std
sbb
push
pop
jg
inc
and
test
sub
push
out
add
dec
fst
jno
mov
mov
mov
xor
test
lods
das
cmpsl
in
das
xchg
adc
aas
das
cld
decl
ds
mov
fs
adc
test
lcall
ljmp
jp
jmp
pop
push
push
call
in
faddp
cs
inc
je
add
xor
outsb
std
out
jae
divl
inc
pushl
cli
out
push
mov
lcall
mov
pushl
push
sbb
mov
inc
icebp
pop
xchg
insl
ss
pop
mov
sbb
mov
call
notb
pop
int
aas
ja
call
jae
fcoml
sbbl
andl
sbb
in
outsb
cmp
in
mov
xchg
and
jg
add
xchg
cwtl
lahf
sbb
inc
and
push
cmpsl
cld
pop
test
mov
ret
jmp
adc
push
xchg
inc
jmp
insl
sub
mov
shlb
push
sub
pop
xor
movsl
jle
sbb
mov
pop
mov
int3
push
les
adc
adc
inc
cvtps2pi
pushl
mov
jg
idivl
sub
adc
mov
xorl
mov
cmpsl
mov
add
shrb
jp
dec
and
out
jae
lods
test
fdivrs
out
adc
pop
pop
call
mov
add
jno
mov
call
ret
stos
add
paddsb
in
cmpsl
daa
pusha
stos
fsubrs
xlat
loop
aas
sbb
cmp
faddp
mov
cmpsl
stos
cmp
fcmovnu
push
sub
add
xorb
aas
push
daa
mov
pushf
dec
repnz
add
loopne
call
test
call
loope
dec
pop
dec
xor
pop
repnz
sbb
push
out
dec
sub
inc
into
fisttpll
push
shl
mov
jmp
mov
adc
roll
scas
mov
jns
sub
lcall
mov
or
rcrl
adc
jg
pop
cltd
and
in
in
jl
sub
imul
icebp
xchg
mov
movsb
push
lcall
test
imul
push
pop
arpl
cmp
fsts
ja
xchg
sbb
leave
arpl
ljmp
sub
movsl
pop
imul
inc
xchg
mov
or
decl
fmulp
fxch
fldcw
inc
fstp
lret
push
cli
add
mov
dec
dec
mov
mov
data16
int
jle
jg
outsb
out
cld
loopne
cs
xchg
xchg
sarl
push
iret
shlb
add
pop
std
dec
ss
sbb
or
dec
adc
mov
bnd
adc
incl
cmp
jecxz
xor
adc
mov
mov
cmp
fildl
sbb
incl
dec
mov
push
out
dec
or
inc
inc
jbe
je
popf
pusha
jns
clc
mov
insb
iret
fs
add
cmp
sub
pop
ljmp
shrl
sbb
rolb
dec
loop
cmp
clc
rcrb
rol
mov
jmp
mov
lods
xchg
mov
repz
in
pusha
lods
xchg
xlat
sub
fnstcw
lcall
mov
push
loopne
loope
call
and
sahf
rcll
mov
pop
test
sbb
lods
add
call
inc
mov
je
cmpsl
les
xchg
cmc
and
scas
adc
sbb
mov
test
mov
push
lods
mov
sti
jns
adc
jle
jg
xchg
or
call
imul
jg
pushl
or
xor
outsl
sbb
add
addr16
adc
mov
lcall
sub
mov
icebp
mov
shr
lcall
call
out
sarl
test
sub
jae
rorb
decl
cltd
add
lock
out
pop
or
mov
imul
sub
dec
xor
movl
add
dec
dec
pop
fmull
repnz
ss
or
cld
repnz
nop
movsl
cwtl
xor
xor
pushl
inc
push
or
in
in
cwtl
cmpl
mov
mov
lcall
orb
addr16
cmp
mov
fdivs
push
stos
adc
jl
adc
clc
iret
pushf
pop
jp
adc
enter
les
das
lret
stos
insb
les
push
sbb
incl
popf
cmp
inc
fistpl
sbb
push
sti
pusha
das
sbbl
adc
pusha
push
adc
or
lock
inc
mov
imul
push
clc
add
dec
adc
jle
mov
lods
loopnew
daa
iret
das
push
imul
pop
mov
popa
lahf
jg
shlb
in
daa
rcr
pushf
leave
mov
pop
xor
mov
lret
pop
sti
mov
push
out
push
mov
insl
jo
ljmp
jl
testl
cmpsl
enter
ret
pop
push
daa
dec
and
and
add
aam
in
ds
in
mov
imul
aam
jp
sub
inc
jp
in
dec
jnp
lcall
loopne
xor
and
ret
in
or
aad
sub
pushl
outsb
pop
jecxz
js
mov
outsl
ljmp
pushl
mov
pop
insb
mov
pop
ret
sub
lret
sti
jg
adc
adc
mov
jno
in
test
ljmp
incl
cli
push
call
or
call
sarl
int3
mov
fmuls
outsl
enter
in
out
xchg
pop
outsb
je
mov
clc
push
jno
dec
cmp
sbb
in
in
xchg
sub
push
ljmp
sarb
push
dec
stc
divl
mov
sbb
fs
daa
adc
fwait
movsl
add
rcll
mov
stos
call
jmp
push
sub
push
sbb
cmp
and
aad
test
pushl
shr
add
jge
jbe
and
mov
xchg
push
ret
jmp
xchg
fadd
mov
andb
pop
shl
push
gs
jb
sbb
pop
sub
push
cltd
cmpsl
mov
push
cmpsb
mov
mov
aad
mov
push
fmul
rolb
loope
jg
and
into
pop
inc
push
aad
cmp
cmp
sub
daa
xor
jge
mov
daa
fstps
mov
test
shll
jo
push
cwtl
stos
fistpl
jae
or
pushw
pop
adc
mov
decl
ss
cwtl
nop
sbb
mov
mov
mov
out
xor
jg
mov
xchg
mov
aam
push
jle
hlt
pop
sbb
mov
pusha
into
dec
imul
xchg
insb
aam
mov
rcrb
rcr
and
push
sar
cmp
lcall
std
mov
xchg
cmp
inc
mov
pop
imull
pop
clc
decl
adc
dec
arpl
adc
orb
das
xor
scas
decl
sbb
and
js
jle
arpl
jnp,pt
jecxz
fidivl
push
or
sar
ljmp
sbb
addr16
cli
movsl
loope
xor
das
icebp
decl
xor
pop
into
notl
and
cmpsl
cmp
mov
jmp
pop
out
mov
dec
shrl
insl
push
inc
out
lret
or
jno
dec
inc
inc
sub
decl
mov
and
adc
imul
jg
pop
aaa
es
xchg
fildl
pop
fistl
sbb
or
cld
push
test
mov
loop
incl
adc
mov
lea
mov
pop
faddp
lcall
mov
sub
test
aaa
mov
and
cld
mov
mov
repz
add
mov
ljmp
pop
jle
insb
dec
sub
inc
dec
aad
aad
scas
out
int3
rorl
incl
sbb
lods
xchg
jmp
insb
or
test
pop
dec
and
js
jl
pushl
sub
pop
push
jl
ret
cmpsb
mov
push
inc
test
inc
xor
cli
ljmp
sahf
stc
mov
inc
pop
sti
test
aad
push
pop
and
aas
decl
pushl
jle
jmp
je
pop
out
mov
daa
or
lcall
aaa
cli
and
popf
jo
inc
push
xchg
xor
mulb
jg
jle
outsl
cld
sbb
std
sbb
ret
mov
cmp
dec
mov
adc
jecxz
decl
cltd
dec
push
andl
or
aas
daa
inc
lcall
scas
fistpll
sarl
and
pop
jmp
fiadds
mov
and
es
lods
cli
ret
cmc
fcom
or
decl
jecxz
fucom
mov
jmp
pop
scas
mov
add
mov
xchg
push
lahf
cs
lds
adc
mov
mov
inc
adc
aad
outsw
stc
fucom
int3
ror
mov
jecxz
ljmp
stos
mov
mov
jne
or
sti
ljmp
es
pushl
std
repz
or
stos
das
push
stc
int3
scas
add
lret
cld
movsb
push
push
pop
iret
loop
call
push
aam
iret
mov
into
jns
push
lcall
sbb
in
sahf
test
xor
in
pop
xchg
mov
mov
incl
les
call
int3
adc
in
push
push
and
std
decl
insl
stos
cmpsb
out
aam
xchg
push
lock
jnp
push
in
cmp
add
jmp
sahf
dec
cmp
bound
pop
xchg
push
mov
in
cwtl
mov
call
jmp
popa
movsl
inc
cmp
mov
mov
push
in
mov
int3
bound
int3
push
ret
insb
push
jg
fstpt
mov
sub
lea
mov
xchg
sub
dec
pop
loopne
call
aaa
hlt
inc
jp
ret
popf
decl
fildl
je
fidivrs
shll
cmp
mov
clc
test
xor
subb
dec
fbstp
aaa
pop
fisubrl
sub
notl
movsl
idiv
add
lods
test
lahf
lret
fcomps
orl
xor
jge
movsb
les
adc
mov
lods
jbe
movsl
and
and
stos
mov
hlt
and
aaa
cli
decl
xchg
hlt
stos
cli
add
add
xor
push
scas
jo
mov
lea
addr16
jnp
pop
sub
push
push
pop
xchg
mov
mov
ret
decl
or
jg
sub
mov
loopne
xchg
sub
ss
sub
cmp
ljmp
out
inc
cld
in
aad
dec
mov
cmpsl
inc
cs
mov
or
jl
xchg
ds
jmp
repnz
stos
and
cmp
add
pop
ds
scas
shlb
inc
adc
test
sub
inc
add
cld
call
add
pop
push
cld
xchg
mov
sahf
mov
fstl
ss
xchg
fwait
scas
mov
repz
fs
dec
adc
notb
mov
and
cmc
xchg
fbld
jno
decl
subb
imul
xor
imul
enter
lock
or
xchg
cli
push
push
mov
movsl
movsb
lret
aad
jecxz
xchg
divl
call
bound
pop
cs
mov
xchg
addl
lcall
cmp
mov
mov
xor
cs
fmuls
pop
push
cmc
clc
xchg
and
jne
ficoms
mov
std
sbb
notb
cli
lcall
fidivrs
or
dec
scas
mov
decl
sub
shlb
in
in
and
ljmp
dec
stos
fadds
scas
push
push
mov
jl
inc
ss
sbb
std
push
jne
jle
ljmp
mov
adc
jle,pt
sub
movsl
inc
and
sbb
mov
dec
dec
add
fildl
jbe
pop
daa
jb
inc
out
fwait
and
mov
cpuid
dec
mov
test
mov
mov
jg
mov
call
dec
mov
pop
xor
xchg
cmc
xor
push
jmp
push
pop
aad
lea
or
cmc
and
ljmp
cwtl
sti
cmc
fistps
mov
imul
insb
xchg
mov
adc
rorb
aam
sub
sbb
in
cmpsb
fcom
ljmp
inc
jb
jae
cmp
leave
fwait
test
aam
or
cwtl
or
jmp
sub
jle
or
out
enter
pop
fdiv
bnd
insl
mov
push
decl
rol
popa
outsb
fcoms
cli
jnp
adc
add
decl
cld
mov
pop
push
jno
add
ret
and
push
inc
jmp
fistl
lsl
mov
jne
lcall
andb
xor
adc
cmp
cmp
adc
pop
gs
iret
lea
ja
outsl
cmp
jg
loope
dec
dec
pop
inc
test
add
test
adcb
stc
nop
mov
push
hlt
in
ret
xchg
lock
mov
aaa
js
jne
jb
enter
aam
test
cld
mov
call
sti
out
mov
dec
stc
mov
fwait
mov
and
lcall
mov
movsb
sub
sub
or
stos
mov
je
push
cmpsb
jno
dec
mov
mov
mov
imul
dec
inc
push
mov
sbb
fstpt
and
arpl
pushf
lods
sbb
xchg
push
xorl
ljmp
pushl
mov
lock
enter
mov
pcmpgtw
mov
call
mov
int
jle
sub
xchg
leave
adcl
cmpsl
jns
or
call
jns
and
mov
push
xchg
mov
xor
mov
jg
pop
push
arpl
mov
repz
fidivrs
mov
xchg
call
lcall
adc
mov
xchg
loop
lcall
std
xchg
inc
push
inc
push
push
pop
xchg
stc
js
aaa
push
xchg
pushf
and
dec
xchg
add
sub
inc
dec
dec
adc
mov
inc
sbb
shlb
pop
or
sbbl
ljmp
jno
and
loopne
mov
and
into
jg
cmp
xor
je
dec
xchg
adc
push
shrb
pop
mov
lcall
hlt
stos
cmpsl
push
push
cmpsb
jge
and
jmp
mov
ljmp
ja
imul
movsb
dec
push
or
movsl
in
lcall
pushl
cwtl
lock
xlat
ss
or
lret
mov
push
inc
dec
aad
call
xchg
lods
decl
decl
dec
dec
subb
xlat
out
cmp
ljmp
ljmp
inc
mov
loope
mov
fidivrs
and
adc
pusha
cs
decl
lret
aam
faddl
xor
repz
sbb
lock
cmp
sbb
adc
loopne
jmp
nop
int3
ret
inc
jge
adc
ret
inc
outsl
imul
dec
iret
fistps
or
push
sbb
sub
enter
lea
fimull
jl
mov
jns
dec
push
decl
ficompl
mov
or
sbb
je
cmp
testl
push
adc
and
lods
loop
std
and
aas
pop
outsl
cmpsl
mov
cmc
add
push
psubq
sar
iret
sub
pop
cmp
lods
inc
out
daa
icebp
scas
add
cld
sti
orb
cmpsb
push
jge
inc
xor
cmpsl
pop
lods
lods
jo
pop
lcall
enter
push
out
and
push
mov
hlt
xchg
inc
in
inc
cld
mov
insl
lock
faddp
jp
sahf
cmp
jg
test
call
xchg
inc
or
xchg
out
out
mov
lcall
decl
cmp
nop
jl
push
push
aaa
int
add
mov
mov
and
sub
ds
xor
pop
or
test
mov
decl
test
pop
xor
shlb
rolb
mov
inc
xchg
inc
fildl
add
mov
mov
pusha
fistl
lcall
lods
inc
shlb
mov
add
pop
xor
shll
mov
pop
loopne
sub
lds
daa
push
jge
popf
inc
adc
jge
adc
add
ficomps
hlt
sbb
incl
sbb
inc
push
aam
xchg
mov
lods
clc
call
push
cmp
jae
fs
popl
fcmove
dec
dec
sub
add
xchg
nop
sub
and
orb
add
lcall
jae
sbb
add
push
pop
inc
int3
cmp
jno
sbbb
push
cld
jg
jb
fistpll
xlat
lret
pop
pop
mov
push
mov
jae
pushf
roll
gs
cs
mov
call
mov
dec
or
fstpl
testb
pushl
adcl
sbb
bt
push
fadds
jl
mov
or
xchg
sarb
mov
mov
jmp
cmp
jb
push
les
shll
cld
mov
hlt
nop
adcb
xor
ss
pop
mov
push
inc
inc
dec
inc
jl
aad
out
push
aaa
dec
mov
dec
ja
inc
add
mov
dec
popa
roll
mov
int3
mov
ljmp
mov
test
add
mov
fwait
ror
sarb
push
mov
repnz
and
dec
ja
xor
ljmp
inc
fsubr
jp
nop
or
push
adc
cs
jg
mov
push
decl
insl
mov
dec
cmpsb
ror
inc
daa
jne
andl
and
outsb
mov
fcoms
cmp
repnz
nopl
jb
mov
and
jmp
and
push
add
int3
test
xchg
cmc
jns
adc
adc
scas
mov
std
inc
insl
xor
sub
adc
ret
jmp
addb
push
jo
cmp
and
pusha
dec
sub
inc
mov
int3
std
leave
rcr
fnsave
jg
jle
adc
jo
push
pushf
inc
lea
ret
fsubs
lret
scas
jno
dec
stc
jno
call
dec
mov
mov
sbb
or
fcoms
jp
or
pop
lods
sti
pop
xchg
idiv
std
fildll
fcoml
xchg
sbb
cltd
cli
sti
int3
push
inc
xchg
cmp
cmp
cmp
subl
dec
add
test
mov
cmp
pop
test
jmp
std
pop
std
ret
cld
subb
xchg
repnz
clc
sub
movsl
dec
leave
dec
shlb
lods
pop
push
pop
gs
jecxz
push
mov
xor
and
mov
xor
and
and
add
imul
push
xchg
jp
decl
mov
pop
iret
ja
imul
repz
das
hlt
call
jle
fiaddl
and
outsl
jle
jg
inc
mov
ficomps
inc
sti
jle
mov
leave
or
jbe
incl
ljmp
das
adc
push
fdivrl
lahf
lds
mov
xchg
decl
and
dec
jo
push
jns
into
mov
ja
js
xor
rcll
sub
fidivl
in
aaa
mov
test
pop
jg
lret
xor
fnstsw
mov
xchg
mov
out
rcrl
addl
jnp
fistl
imul
aam
outsl
sti
dec
dec
es
ljmp
hlt
jmp
sbb
dec
test
push
das
lret
outsb
mov
daa
lret
insl
jg
popf
out
dec
decl
push
aas
and
icebp
pop
add
scas
adcl
cmpsb
mov
aad
pop
mov
adc
inc
sub
pop
pusha
add
jg
inc
mov
jmp
jecxz
leave
fcmovnb
or
adc
into
enter
ljmp
aaa
mov
cwtl
xor
push
mov
inc
aam
push
ds
sub
adc
call
mov
jecxz
imul
xor
inc
fildl
out
pop
mov
lcall
std
jmp
jl
and
sarl
fisttpll
loopne
mov
sbb
incl
push
adc
leave
sbb
add
aaa
sbb
int
jge
int
pop
dec
push
mov
test
psubusw
push
cmp
xor
mov
test
jg
lcall
das
xchg
mov
sub
jnp
mov
out
mov
mov
clc
fists
mov
adc
out
mov
mov
cmp
fcoml
push
call
xchg
sarl
cmc
pop
test
test
bound
mov
mov
call
inc
ds
dec
dec
std
loop
pop
dec
sub
ljmp
jnp
jmp
sub
mov
adc
jl
push
fidivs
push
pushl
mov
mov
mov
cli
repz
mov
jne
jg
outsl
cld
push
imul
popa
test
sub
fwait
lods
arpl
dec
jmp
nop
jmp
mov
push
push
add
test
dec
mov
icebp
push
pushl
adc
pop
cmp
ds
mov
in
test
lock
ss
pop
das
jmp
cmpsb
adc
jno
ljmp
ljmp
dec
jae
push
pusha
and
mov
lret
push
pushf
pop
adc
daa
iret
test
jge
js
mov
sub
mov
ficomps
popa
test
pushl
jge
jecxz
in
cli
pop
mov
xchg
iret
sarb
ss
pop
lahf
mov
aam
fwait
repnz
mov
cltd
lods
outsl
mov
icebp
and
or
jmp
mov
xor
add
mov
mov
ficoml
cmpsl
xchg
ljmp
inc
sub
sbb
mov
sti
jecxz
mov
sbb
dec
out
inc
and
pop
mov
xchg
cli
incl
subl
jns
push
lcall
leave
pusha
xor
or
faddl
mov
int3
test
pushl
jb
jbe
mov
fdivr
push
daa
push
cmpsb
and
jp
adc
lods
in
cmpsl
lret
outsl
icebp
jno
mov
and
xlat
enter
mov
mov
pop
or
int
sub
mov
decl
lods
daa
pop
shlb
cmpsb
push
jo
adc
xor
pop
inc
stos
mov
imulb
mov
jg
notl
cmp
test
adc
mov
call
adc
mov
add
mov
pop
sub
cmp
lds
mov
xlat
aas
inc
ss
push
out
add
mov
js
hlt
sbb
dec
xor
call
das
inc
incl
lcall
add
out
jne
cmp
fwait
lcall
mov
add
repnz
ret
xor
fdiv
mov
inc
pop
xchg
push
incl
sbb
jl
mov
ret
cmp
fildll
xor
push
pop
in
jg
arpl
incl
incl
jmp
hlt
mov
clc
xlat
js
sub
push
jmp
in
out
aad
std
aaa
mov
stos
adc
popa
test
push
jp
js
mov
xchg
insl
call
cmp
xchg
or
pop
sti
popf
mov
pop
add
or
daa
add
clc
fnstcw
lds
int
dec
lret
inc
clc
add
sahf
adc
icebp
fs
incl
adc
sub
jbe
stos
popa
adc
stos
sub
adc
outsl
mov
jnp
push
nop
inc
out
lahf
sub
jbe
addl
call
ljmp
lret
sbb
sbb
xchg
mov
filds
fwait
cld
cmp
push
movsl
pushl
jmp
aas
sub
jmp
mov
jns
call
outsl
xor
adc
je
mov
xor
xor
mov
sub
notl
ret
mov
in
push
outsl
xor
xlat
pop
fidivl
out
adc
inc
ljmp
jp
mov
xchg
xchg
dec
xlat
mov
dec
cmp
test
pop
mov
lcall
incl
mov
adc
adc
es
lret
cmp
pop
fs
ljmp
incl
push
fwait
xor
push
sub
jne
push
icebp
fdivrl
bound
ja
jb
incl
cmp
lret
dec
movsb
sbb
daa
xchg
mov
ret
cmc
int
mov
decl
sbb
sbb
sbb
out
movl
xor
sbb
xchg
out
cld
mov
inc
loope
mov
xchg
pusha
or
mov
ffree
inc
decl
sub
das
lods
jl
or
mov
ja
sarb
leave
adc
xchg
hlt
in
incl
push
sbb
adc
in
inc
inc
test
shl
xchg
sti
fstl
ficomps
jmp
xor
pop
test
push
adc
pop
adc
jb
mov
orb
jmp
in
mov
add
leave
iret
jle
bound
incl
jno
in
cmpsb
sbb
orl
ljmp
in
sbb
xchg
ficoms
andb
popa
fnsave
ljmp
enter
andb
mov
sub
mov
mov
sbb
ds
bound
in
pop
sub
imul
xchg
cli
sub
push
je
pusha
sub
sbb
icebp
xlat
ljmp
push
and
push
jae
pop
scas
out
mov
mov
xchg
xchg
mov
push
adc
in
mov
in
es
aaa
repnz
pop
std
lcall
cmpsl
xchg
rcrl
mov
out
cwtl
mov
and
inc
aad
das
insl
nop
and
loop
or
sbbb
les
test
ljmp
cltd
fs
pushf
xchg
and
jns
fwait
add
in
jno
int
in
lcall
and
push
aaa
fwait
cmp
pop
xor
pop
ljmp
int3
mov
xchg
jns
xchg
pop
ja
daa
aas
mov
shll
dec
lds
push
outsb
shll
test
inc
repz
push
push
es
clc
jmp
xor
and
fdivs
popf
mov
mov
lret
bound
jb
or
ret
mov
lahf
not
cmp
cmp
psllw
mov
out
lcall
in
addr16
mov
andl
inc
inc
mov
cmp
mov
mov
lahf
push
adc
das
std
incl
popf
roll
out
ja
lret
out
into
xor
or
call
ds
imul
pop
jb
or
ret
test
sub
rcrl
in
shrl
cmp
adc
clc
das
jge
iret
decb
out
pop
ljmp
ret
inc
jae
adc
nop
cs
push
iret
mov
fwait
lcall
jg
mov
add
inc
movsb
mov
cs
jp
ds
xor
fisubrl
adc
daa
in
test
scas
adc
mov
jbe
pop
dec
jle
sbb
push
cmp
or
insb
push
mov
dec
mulb
icebp
ljmp
jp
dec
ss
je
inc
or
xchg
popa
mov
call
fldcw
scas
hlt
or
into
nop
dec
push
call
inc
pop
outsl
fiaddl
and
mov
insl
gs
mov
and
cld
ljmp
std
out
fnstsw
test
loop
ret
mov
push
cs
decl
dec
pop
or
jns
popa
and
mov
pop
out
dec
dec
cmc
lcall
push
dec
sbb
orb
cli
dec
xor
test
jmp
inc
jo
mov
arpl
loopne
adc
not
add
inc
clc
cmp
les
in
pushl
clc
sbb
out
sub
movsl
xchg
addr16
arpl
xlat
xor
ror
mov
mov
movsb
fists
jl
popf
rolb
pop
pop
pusha
lods
add
nop
test
jg
mov
loopne
sub
sbbl
ficompl
xchg
cli
xchg
aas
rol
pop
or
lock
mov
xchg
sti
fstps
xor
xchg
rcl
mov
lea
shr
jo
or
fucom
std
jl
outsb
xor
daa
pop
xor
ds
lahf
mov
xor
push
out
jno
decl
std
xlat
sahf
insb
and
mov
test
jo
fsts
int3
xlat
jns
out
imul
jmp
pop
cmpsb
push
pop
xchg
out
call
xor
decl
mov
inc
pop
cmp
pushf
pop
shlb
fstl
and
outsl
push
sub
jl
gs
mov
cwtl
add
add
hlt
int3
leave
decl
lahf
jns
cmp
xchg
dec
js
push
test
xchg
fsubrp
mov
mov
cmp
jle
movsl
andl
jp
or
jne
shl
jmp
stos
lret
cmc
cmp
daa
add
nop
std
xchg
push
sub
faddl
dec
mov
call
jo
mov
out
mov
xchg
fsin
jmp
insb
or
mov
fmull
add
push
or
movsb
adc
imull
ljmp
or
mov
add
fists
jp
call
jp
outsl
aam
es
pop
xlat
aam
mov
aad
inc
das
mov
decl
popf
jecxz
in
adc
inc
stc
pop
xor
adc
out
lret
icebp
jmp
pop
push
jbe
sub
xorl
jl
jle
dec
xor
out
inc
rcrl
xlat
stc
cmp
das
ret
push
push
cltd
push
daa
sar
xchg
dec
mov
repnz
mov
sub
xchg
ror
in
outsb
pop
mov
sbb
mov
sub
ja
cmpsl
mov
sar
xchg
fcomip
pop
jle
ret
popf
and
loopne
pop
bnd
add
xor
incl
js
mov
xchg
loop
adc
cli
xchg
sbb
mov
push
icebp
sbb
stc
nop
pop
mov
stc
les
add
outsb
xor
aam
into
mov
aad
ss
fdivr
incl
in
dec
shrb
insb
test
mov
cmp
adc
lcall
std
xlat
test
jne
and
rcl
sahf
xchg
pop
ja
mov
xchg
xchg
es
aaa
sub
hlt
cmpsl
rcll
movsb
xchg
adc
orl
lcall
popf
fwait
mov
dec
inc
ljmp
pop
insl
jge
cmp
push
insb
sbb
jnp
ljmp
cld
mov
fwait
sbb
shlb
and
out
cmp
insl
sub
cmp
adc
movsb
js
sub
lcall
xor
stos
data16
pusha
stos
sub
or
cmp
mov
xchg
clc
sbb
adc
inc
cmp
mov
lcall
test
shll
rclb
adc
mov
push
pop
repnz
lahf
cli
jl
jg
das
fdivs
mov
loop
ret
xlat
jne
cmp
xor
mov
divb
sub
out
dec
rclb
cmp
mov
inc
fcompl
sub
iret
inc
push
cmpsb
and
test
ret
xchg
fdivs
ds
jg
ret
lret
scas
mov
add
clc
pusha
pop
and
pushl
cld
roll
cs
cmp
cmc
xchg
leave
insb
xchg
cld
xchg
pushl
inc
aas
int
jae
add
je
mov
push
bound
mov
ljmp
cmpsb
outsb
aas
outsb
sub
mov
push
pop
or
lret
addr16
scas
clc
cld
inc
jb
shll
mov
xchg
and
adc
pop
adc
insb
sahf
icebp
popf
leave
or
movsl
fwait
loop
sbb
pushl
jbe
or
cmp
adc
xorl
add
dec
flds
pop
dec
movsl
iret
inc
lds
movsl
imulb
xor
popf
scas
inc
mov
sar
jg
adc
jge
fistpll
push
dec
call
fcomps
xlat
and
cmpsb
mov
cmpsb
mov
nop
ss
decl
std
stos
ficoms
and
movsl
lret
ja
push
jae
jge
push
sub
cld
fldl
pop
xor
adc
sbb
in
mov
lret
lods
pop
push
or
incl
fstpt
and
sbb
or
lcall
push
gs
inc
loopne
or
in
dec
rol
add
mov
decl
xor
mov
xor
mov
leave
push
mov
mov
shll
xchg
inc
pop
gs
push
mov
or
mov
cmp
fiadds
mov
xor
and
sbb
mov
outsl
pop
ds
cmp
cs
decl
sbb
push
add
rclb
dec
loopne
insl
fs
mov
or
outsb
jns
je
jg
lods
mov
and
outsw
mov
jge
call
popa
je
lcall
and
xor
jns
mov
incl
pop
insb
mov
jp
and
xor
decl
xor
cmp
mov
mov
push
mov
jnp
ljmp
or
aaa
stc
cmp
jnp
nop
pop
pop
lods
jns
push
fldcw
pushf
mov
imul
add
in
dec
scas
fsubrl
jno
mov
fstp
cli
jg
push
mov
pop
sub
in
rorb
lret
jmp
mov
mov
fadds
dec
cmp
cs
incl
cld
vxorps
inc
decb
cmp
push
pandn
lcall
cs
mov
loop
lock
ljmp
cli
jmp
cmc
sub
rcrl
dec
lea
ljmp
jns
hlt
lahf
cmp
in
lea
or
stos
out
cs
cmp
jno
mov
aam
inc
cmp
cmp
cli
push
mov
dec
adc
push
xchg
clc
pushl
push
push
pop
jbe
adc
push
mov
aaa
sbb
cli
js
jmp
dec
je
hlt
rolb
stos
add
iret
out
jmp
sahf
cmpsb
mov
xchg
inc
mov
or
mov
jbe
iret
jecxz
sub
mov
pop
push
push
inc
jg
inc
pop
pushf
rcr
fsubr
aam
pop
sbb
outsl
sub
into
jg
jle
or
fwait
mov
adc
adc
dec
popf
movsb
mov
and
cli
repz
jg
mov
mov
loop
in
imul
int3
jg
xchg
and
ds
mulb
popa
mov
pop
and
add
inc
fs
subl
call
mov
das
fsubs
inc
jmp
ss
outsb
fisubrs
sbb
cmp
inc
mov
mov
adc
push
ja
mov
call
incl
and
push
and
std
push
push
imul
mov
inc
cmp
adc
bound
jg
aad
enter
cmp
dec
bnd
push
pop
cmpsb
adcl
std
pop
inc
add
aaa
or
call
mov
adc
aam
push
int
push
adc
call
xor
in
push
ljmp
fsubs
test
into
pop
ljmp
hlt
call
or
jno
shlb
add
in
mov
inc
arpl
cmp
rorl
imul
stc
int
scas
jae
cmpsb
sub
es
fdivr
incl
mov
or
call
in
xor
mov
dec
loopne
dec
jmp
jecxz
in
or
xor
add
lea
lahf
out
scas
adc
xchg
push
jmp
mov
adc
call
jno
ljmp
pushl
scas
imul
test
lods
push
mov
std
mov
inc
xor
aam
hlt
sub
cmpl
mov
out
dec
push
add
pop
dec
fmull
and
cwtl
and
add
cli
fdivrs
decl
and
inc
xchg
cli
inc
sbb
daa
jecxz
mov
cs
push
dec
jbe
add
incl
outsl
cld
outsl
sahf
cld
xchg
jno
and
sub
mov
adc
mov
pushl
test
push
xlat
jl
jae
sarb
adc
jmp
gs
add
adc
cltd
dec
stos
movsb
and
adc
push
adc
add
sar
pushl
xor
mov
lds
gs
jbe
add
aam
insl
xor
mov
call
cmp
sbb
add
stos
bswap
fnstsw
lcall
decl
add
cmpsb
adc
js
push
daa
out
popf
lahf
lretw
pushf
adc
mov
lods
nop
stos
pop
pop
call
push
mov
cmc
mov
mov
cmp
adc
sbb
mov
pushf
jbe
adc
push
lods
mov
pop
cs
jg
dec
imulb
test
mov
test
sub
jmp
pop
mov
cmp
adc
adc
lcall
mov
cmc
test
mov
popa
lahf
stc
lods
add
sbb
sub
jo
cwtl
jns
dec
xchg
pop
jmp
dec
push
jb
fisubrs
pusha
adc
fdecstp
pushl
inc
dec
incl
cs
out
cmp
insb
xchg
inc
mov
lods
xor
mov
inc
add
inc
pusha
loope
incl
call
jne
pop
addb
jnp
mov
adc
cmp
ljmp
sbb
ret
decb
scas
adc
fbstp
ficoms
inc
mov
daa
scas
and
and
ret
and
xchg
pop
sbb
jg
mov
jno
hlt
mov
call
xor
ror
rol
shll
call
sub
add
mov
ret
lahf
aaa
out
out
stc
push
push
xchg
xlat
lcall
and
out
fs
mov
pop
pop
out
jae
fsubrs
lret
shrb
push
pushl
cli
decl
lea
and
jmp
pop
test
cltd
mov
jg
adc
clc
and
dec
pop
push
in
pushf
jne
loopne
call
and
mov
repz
in
fwait
stc
rorb
adc
xchg
lahf
cmpsl
mov
push
mov
jnp
scas
push
jno
add
jno
xchg
aas
icebp
outsb
push
icebp
shl
ljmp
mov
negl
lock
cld
push
pop
push
in
lea
pop
es
fucomi
sar
jg
pop
sahf
aas
jbe
fisttpl
in
lea
pusha
or
or
mov
enter
push
repz
std
jae
idivb
std
decl
inc
sarl
inc
ret
lret
test
lcall
mov
inc
pop
xchg
iret
es
jge
xchg
scas
adc
jnp
mov
adc
in
ret
xor
inc
pop
ss
jmp
jle
or
lods
jmp
call
cmpl
lods
sub
faddp
outsb
fsubrs
mov
dec
pop
dec
pop
xlat
inc
mov
pop
xchg
sub
pop
dec
jg
sbb
adc
pop
fcompl
dec
mov
xorb
pop
ss
incb
adcl
pop
in
out
mov
addr16
call
lahf
out
fldcw
push
leave
mov
adc
scas
xchg
fstps
test
shr
mov
push
addl
das
hlt
jmp
pop
pop
addr16
mov
pushw
mov
inc
jne
mov
repz
loopne
push
mov
inc
adc
jo
test
pushl
clc
sahf
mov
imul
jge
ljmp
out
adc
divl
mov
pop
add
inc
rorl
lret
xchg
movsl
incl
rolb
pop
cli
faddl
mov
pushf
loope
push
pop
leave
dec
push
shlb
repnz
popf
mov
shrl
cmpsl
adc
fsubr
jns
rcrl
mov
scas
ljmp
mov
jmp
lahf
enter
std
movsl
dec
dec
xchg
mov
pusha
lods
dec
inc
insl
fildll
ficompl
adcl
pusha
mov
call
pushl
mov
flds
cmp
je
sar
ljmp
ljmp
pop
pop
xchg
sub
shll
leave
int3
cli
stc
stos
in
pop
adc
popa
push
pop
push
nop
cld
fcompl
mov
sar
decl
cmpsl
jb
ret
cmpsl
push
xchg
sub
pushf
mov
in
mov
call
cmpl
adc
lods
sbb
mov
bound
fbld
pushf
lods
in
or
mov
fstpt
pushf
notl
call
inc
lds
scas
pop
cltd
jnp
test
push
pop
and
adc
cld
push
icebp
cmpsl
jl
or
cmp
fcomi
mov
or
movb
repnz
pop
mov
js
test
decl
enter
data16
mov
fnstsw
lea
cmp
or
inc
adc
out
jp
call
cli
popa
sbb
adc
pop
cltd
jle
inc
shrb
imul
add
add
div
jecxz
rcrl
sbb
fstpl
leave
or
lea
std
push
test
mov
int
push
mov
les
in
pop
imul
call
rclb
xor
and
flds
push
dec
test
je
out
and
jle
adc
xor
leave
sub
push
subl
add
loop
hlt
mov
in
cmpsl
xor
jl
and
mov
outsb
jge
push
or
out
psubusw
in
mov
insl
decl
call
pop
mov
sub
xor
mov
call
cli
hlt
out
popa
cmp
imul
loopne
cli
fbld
sub
das
sub
shll
jne
lcall
mov
mov
bound
lahf
mov
repnz
movsb
cltd
sbb
call
rcrb
leave
ret
idivl
inc
xorl
push
sub
enter
mov
call
aam
pusha
pushf
lret
add
inc
sub
mov
xorb
sub
pop
xchg
jmp
pop
jo
lret
loopne
sarb
push
add
outsb
fisttpl
in
movsb
mov
and
mov
push
fistl
and
iret
lea
xor
push
add
cmp
mov
clc
mov
mov
fisttpll
dec
test
sbb
ret
sti
call
into
or
or
jg
push
cli
pushf
sahf
mov
popl
icebp
lcall
in
leave
or
push
adc
nop
cmp
adc
stos
jle
ljmp
loope
xor
mov
repz
and
inc
mov
aas
jnp
cmc
xorb
pop
jno
ljmp
or
ljmp
movsb
mov
sbb
mov
and
aas
pop
test
ljmp
dec
inc
cmp
mov
lcall
not
dec
push
xchg
das
stc
push
sub
mov
inc
mov
cmpsl
mov
or
movsb
jno
fsubrl
push
add
pop
jg
xchg
imul
mov
add
jne
sahf
outsl
jne
cmpsb
div
addr16
jae
mov
dec
insl
adc
push
shlb
ljmp
inc
insl
xor
mov
and
xchg
add
call
js
cli
xor
mov
mov
insl
xchg
pop
xchg
add
lcall
jg
mov
jne
mov
xlat
push
inc
push
psubb
les
repz
cmp
ljmp
popa
or
mov
int
insl
xor
mov
mov
imul
test
incl
jae
cmp
xor
jmp
pusha
cmp
mov
cld
gs
daa
push
fbstp
pusha
sbb
test
add
stc
jno
cmpb
ficompl
push
mov
call
cmp
out
sub
pusha
mov
outsl
mov
pop
filds
jle
and
aam
fucom
incl
xor
rcr
xchg
rdmsr
push
lcall
or
call
mov
inc
cld
lret
js
in
clc
cmp
sbb
decl
fwait
mov
decl
jge
jl
movsl
fsub
jmp
pop
fstpt
js
push
sti
mov
mov
fimull
lahf
sbb
fdivl
mov
iret
sbb
lcall
enter
ja
xchg
lea
sub
in
movsl
stos
mov
dec
mov
jb
call
dec
mov
cs
mov
aam
lcall
daa
pop
jb
test
adc
cmp
mov
push
adc
mov
pushl
xlat
fsubrl
mov
adc
jg
fidivl
outsl
fistl
jmp
outsl
inc
fwait
and
cmp
sub
sbb
pop
loop
fiaddl
mov
xor
inc
inc
cmp
dec
pop
lcall
mov
rcrb
in
mov
int
jno
or
jmp
sti
cmp
addr16
lods
inc
insb
mov
push
pop
bts
or
lea
in
and
loop
sub
jmp
cli
fildl
cltd
or
icebp
hlt
mov
push
adcb
sub
std
push
in
bound
push
push
pop
pop
mov
loope
shll
test
outsl
mov
adc
mov
pop
push
clc
inc
lds
mov
jecxz
pop
je
xor
in
xchg
adc
mov
mov
inc
push
xchg
lcall
sbb
add
cs
jns
les
sbb
xchg
mov
inc
addr16
decl
addr16
jle
mov
scas
mov
rol
xchg
aas
push
push
pop
mov
lahf
cmp
xor
push
cmp
xor
pop
jp
or
fs
sti
sar
aas
sti
in
sbb
fs
pop
jg
jb
cmpb
jmp
subb
fsubrl
inc
pushl
push
lock
lahf
call
popa
xor
push
add
mov
cmpsb
cltd
gs
ret
fldcw
es
cltd
xchg
push
scas
mov
outsl
inc
jnp
rorb
aam
and
mov
push
mov
lahf
je
lret
movsl
pop
mov
mov
jne
stc
jg
pop
jge
xchg
and
sar
es
mov
jg
push
mov
and
ret
leave
pushf
push
xor
or
sub
scas
lcall
arpl
fstps
push
xchg
daa
mov
inc
xchg
mov
jle
cwtl
and
fildll
movsl
test
insl
jge
dec
out
ret
jg
fbstp
push
jo
lcall
das
mov
int3
scas
enter
dec
inc
repnz
fistps
dec
ret
jg
xchg
xchg
cld
fistpll
fcmovne
mov
rcr
dec
shlb
inc
sbb
addr16
jnp
jg
adc
xchg
in
xor
mov
gs
std
xchg
cli
in
pop
pushf
add
inc
ss
xchg
mov
incl
daa
in
mov
mov
roll
gs
cs
push
loop
lods
or
lods
decl
icebp
sbb
popa
loope
xchg
inc
jbe
in
movntps
cmp
arpl
lods
stc
andl
insl
dec
ret
add
lahf
inc
pop
shr
jge
mov
pop
test
mov
push
xchg
jo
cld
dec
gs
cld
xorl
mov
push
mov
cmp
mov
xchg
adc
or
lcall
idivl
xchg
dec
inc
cmpl
adc
fnstsw
xor
std
ljmp
rcl
es
test
xchg
je
bound
mov
popa
jmp
aad
xor
loopne
push
and
repz
je
icebp
xor
jg
outsb
fldcw
sbb
xor
leave
inc
jno
and
ret
scas
adc
std
call
and
fs
jmp
enterw
arpl
push
out
and
loop
repnz
sub
cmpsb
or
std
cmp
mov
in
add
mov
out
sbb
lods
xchg
xchg
pushl
jnp
popa
stos
add
cmp
xchg
cmp
inc
mov
out
push
adc
jne
stos
out
push
and
xlat
or
dec
jecxz
rclb
push
push
test
sahf
aam
mov
push
inc
leave
daa
jle
adc
jmp
sbb
ret
adc
ljmp
call
call
mov
jo
pusha
lock
rorl
mov
jmp
lcall
fstl
loope
adc
jg
bnd
xchg
cmp
or
outsb
test
lahf
inc
mov
ljmp
es
test
add
and
fwait
cmp
push
xchg
inc
leave
loope
scas
mov
push
sti
ljmp
popf
fldl
mov
imul
mov
std
mov
xor
mov
int3
dec
pop
sub
cli
or
je
aad
add
je
mov
xor
jecxz
stc
ret
outsb
fucomip
mov
movsb
and
adc
loopne
cmc
loop
xchg
aaa
aad
pop
daa
incl
mov
stc
gs
ror
fucom
pop
pop
add
dec
add
out
sbb
les
jecxz
mov
bound
adc
addb
pop
xchg
jns
lahf
test
lods
ljmp
incl
shll
push
outsb
outsl
popa
das
jecxz
mov
xor
ljmp
orb
inc
jo
mov
push
jle
adc
cltd
sub
enter
aas
call
leave
aad
aaa
ds
xchg
push
rorb
loope
nopl
pop
daa
mov
aam
lock
jmp
adc
push
stos
mov
mov
dec
lds
test
hlt
sbb
test
std
test
inc
sar
mov
gs
leave
cs
xchg
clc
or
jbe
and
inc
incl
hlt
push
jb
orb
rolb
mov
fs
out
jp
test
andb
shlb
mov
cmp
lcall
fsubrs
or
andb
adc
mov
cmp
adc
sar
fucomip
jmp
adc
arpl
inc
pushf
mov
pop
in
add
mov
or
cltd
inc
push
aas
xor
sahf
mov
mov
push
pop
mov
test
mov
jno
test
lock
sbb
ret
rol
repnz
xor
mov
cmpsb
test
ret
jg
stc
mov
jnp
jge
je
in
mov
enter
mov
cs
or
jle
or
decl
jmp
push
scas
inc
int
enter
pop
lret
mov
nop
cmc
aaa
imul
incl
and
push
cmc
cmpsb
ret
sbb
cmp
xchg
fidivrl
cltd
cmc
imull
call
fldenv
aam
and
xchg
cmp
push
lret
popa
enter
imul
xchg
movsb
in
mov
pop
inc
lret
outsb
mov
jg
call
scas
dec
stos
sbb
test
sub
in
sti
cmp
xchg
cmc
or
push
ja
pushf
add
inc
iret
and
clc
push
jnp
and
xchg
hlt
popa
pop
into
jne
or
or
and
lcall
into
sarl
jne
ret
or
and
xchg
shl
add
sub
inc
jg
ljmp
inc
push
int3
in
sbb
xchg
fcoms
inc
add
in
clc
and
sbb
dec
lcall
sub
xchg
mov
push
je
int3
shl
jo
cmp
call
in
aas
mov
xor
cmpsl
fidivs
or
stos
enter
ds
inc
test
sub
xchg
scas
cli
mov
mov
das
sbb
ljmp
lahf
les
testl
sbb
pushf
js
outsl
fimull
and
ljmp
or
mov
jl
repnz
jp
bound
or
stos
cli
mov
lods
fdivs
neg
call
filds
cld
sarb
cmp
xchg
add
jmp
cmp
call
lea
sysexit
adcb
cmpsl
ljmp
and
sub
repnz
lahf
outsb
add
and
jnp
icebp
inc
hlt
pop
int3
mov
lcall
inc
inc
sbb
xchg
push
movsb
pop
mov
or
sub
mov
das
cld
cmp
push
jns
jge
test
mov
dec
test
lcall
jb
rorl
jl
sub
fistps
add
sbb
fs
push
lcall
cmpl
mov
insl
jbe
lods
mov
lcall
loop
or
mov
cmc
rcrb
jbe
jp
outsl
leave
fwait
movsb
jb
adc
lds
mov
out
add
sahf
sbbb
ror
insl
das
leave
arpl
inc
dec
int
xchg
scas
mov
sbb
xlat
scas
and
cmp
pop
outsb
in
pop
repnz
testl
fs
in
xor
xor
idiv
pushl
insl
cld
lods
test
mov
push
pop
inc
seta
incl
data16
jl
jb
and
or
xor
mov
sti
add
mov
in
mov
sub
pop
adc
mov
hlt
push
ss
jmp
pushl
js
punpckhbw
pop
lock
cmc
movsb
iret
xor
dec
icebp
sar
das
sub
inc
adc
in
cmp
jl
in
in
imul
lock
mov
outsb
dec
popf
ret
sub
add
scas
add
push
test
call
pushl
das
addr16
fistpll
adc
jle
jb
pusha
pop
or
xlat
pushf
rcl
faddp
mov
xchg
orb
sub
add
sub
arpl
jecxz
and
aas
mov
sub
jo
nop
and
jmp
cmp
jb
xchg
mov
xchg
notl
xchg
cli
jmp
lret
cmp
cld
inc
pmuludq
leave
stos
hlt
insb
cltd
out
std
lcall
jp
insb
mov
incl
push
dec
shll
mov
mov
and
inc
hlt
scas
repz
add
pushl
mov
mov
sbb
mov
mov
jae
test
pop
xchg
icebp
xor
das
push
mov
sbb
test
mov
lret
add
ja
mov
testb
adc
sbb
inc
jne
ja
loope
addr16
push
jmp
shr
sbb
in
add
popf
enter
cld
out
mov
xor
xchg
mov
sar
and
mov
jnp
pop
loopne
sub
push
add
sbb
ret
pop
out
xchg
inc
jp
insb
cmc
mov
addr16
arpl
push
int
or
inc
dec
xor
jg
push
insl
pop
lret
mov
loop
adcb
aas
sbb
jg
call
mov
inc
jo
mov
jns
test
inc
stos
stos
ja
clc
in
cmp
gs
cld
pop
mov
push
pushf
lcall
lcall
mov
jg
or
fwait
fwait
jne
push
mov
cmp
xor
push
pop
test
push
or
decl
movl
leave
outsl
cld
decl
inc
jns
ficomps
xor
jmp
mov
js
mov
xlat
mov
sub
add
xchg
gs
jbe
or
inc
bnd
test
dec
sbb
cmpsb
add
mov
add
lcall
lea
mov
rep
mov
xchg
jp
jg
mov
and
mov
lods
mov
in
mov
loopne
hlt
jg
pushl
push
lods
rolb
cmpsl
and
lock
and
or
add
int3
add
pushl
dec
dec
in
mov
cwtl
inc
ds
jmp
cmpl
es
pop
mov
loopne
sbb
cmp
push
add
jge
jg
adc
andl
mov
pop
std
test
ds
mov
dec
out
jae
popf
dec
sbb
ljmp
push
mov
outsl
scas
lret
out
mov
fdivrs
jg
jmp
cld
fs
lock
sub
add
or
add
loopne
dec
fisttps
mov
movsl
loop
loop
rcl
fdivrp
call
fstpl
mov
stc
test
push
mov
or
nop
push
pop
lods
cwtl
lcall
jmp
pushf
mov
inc
mov
out
fisubs
mov
and
clc
decl
or
xor
notl
rorl
fstl
add
lock
cmovb
scas
ja
mov
jbe
jnp
pushf
out
adc
mov
loope
out
cmp
xor
shl
and
mov
decl
mov
cmp
lods
push
fldcw
or
scas
jnp
test
insl
sub
jae
call
call
enter
push
sub
sbb
adc
dec
fdiv
subb
xor
jecxz
and
ljmp
sub
dec
xor
or
jns
stos
arpl
je
xor
pop
dec
xchg
shlb
shl
fs
pushl
mov
aas
add
adc
loopne
cmp
enter
mov
lcall
adc
dec
mov
imul
push
and
pop
push
outsl
std
cli
dec
out
leave
add
xchg
or
fwait
dec
add
pushf
iret
pop
mov
fcmovbe
cmpb
xor
fistpl
lods
in
pop
subb
in
scas
mov
xlat
inc
pop
negl
and
mov
fdivrs
scas
mov
push
jmp
push
sub
fimull
mov
cmp
push
jno
scas
test
mov
push
in
or
add
push
jne
fildl
jg
pop
mov
adc
cmp
pusha
sbb
scas
pop
loope
mov
call
mov
mov
fisubl
popa
mov
cmpsb
pop
mov
sub
movsl
jns
or
or
aaa
or
fbld
add
fnsave
jo
test
loopne
orb
rol
ret
xor
subl
pushl
add
mov
pop
arpl
jns
sbb
insl
and
adcb
stc
mov
mov
xor
and
push
jmp
in
ljmp
incl
xchg
xor
test
outsb
dec
push
insb
sub
cmp
ret
ljmp
push
outsb
mov
pushf
pop
push
add
push
jmp
pop
lods
add
call
dec
addr16
xor
sbb
nop
iret
int
repz
jmp
ret
sub
pop
imul
mov
mov
add
das
dec
gs
dec
idivb
insb
mov
stos
add
arpl
push
mov
add
dec
rcrl
into
pusha
jg
and
and
and
sbb
sub
loope
int
cltd
xor
sbb
ljmp
jnp
push
cmp
cs
mov
add
lcall
aad
jge
inc
pop
fmuls
push
pop
cmp
aaa
pop
shlb
arpl
les
mov
xchg
decl
jns
dec
mov
push
outsl
sbb
mov
loopne
pop
cmp
mov
cmp
adc
fwait
nop
pop
mov
cld
dec
sti
int
xchg
adc
inc
lret
mov
stc
xchg
xchg
mov
adc
imul
scas
aas
jg
jg
lcall
push
fsub
push
sbb
push
insl
dec
xchg
xor
out
cmp
pushl
mov
and
mov
aad
lret
jb
sbb
or
nop
cmp
xchg
mov
lcall
cs
inc
imul
lods
jl
mov
jg
push
push
inc
cmp
xlat
xchg
adc
fnstsw
test
inc
or
dec
std
jns
push
xor
mov
push
into
incl
cli
add
ljmp
jmp
push
and
dec
std
jp
es
lahf
xchg
ljmp
call
out
mov
daa
jg
inc
loopne
xor
add
dec
lds
jl
lcall
jno
sbb
pushl
scas
sub
jb
clc
call
daa
adc
aam
jo
push
loope
aaa
dec
std
pop
ljmp
test
test
lcall
aaa
scas
dec
xchg
fstpt
xchg
and
test
inc
jo
push
pushf
push
and
cmpsb
cmp
nop
mov
dec
xchg
jnp
pop
call
xchg
ljmp
add
test
adc
bound
push
jp
or
inc
sahf
push
aam
or
movsl
fcoms
pop
mov
jb
push
xor
clc
in
push
pushl
jl
je
lea
outsb
rcrl
and
mov
cmp
xchg
loopne
jge
aam
dec
inc
movsb
das
int
push
inc
pop
call
push
loopne
dec
fisubrs
dec
or
test
mov
decl
mov
movsl
pop
add
sbb
mov
adc
or
lcall
aaa
adc
push
aad
push
mov
add
repnz
adc
call
ljmp
out
je
and
call
icebp
call
fdivr
popf
xchg
sbb
sub
sub
cld
pop
addr16
jns
jno
ljmp
lret
sbb
cltd
mov
aas
ja
mov
call
gs
aad
aad
insb
pop
pop
aas
sub
xor
jecxz
cmp
adc
xchg
jnp
shr
xor
mov
push
push
and
jns
inc
bound
sbb
adc
pop
cli
test
hlt
in
mov
imul
add
shlb
push
and
test
call
xor
gs
sarb
stc
pop
cs
cmp
jg
mov
push
mov
out
ljmp
sub
cld
mov
lret
mov
jnp
pop
sbb
cmc
jno
lds
shll
loop
sbb
pop
stos
mov
push
xor
out
cli
in
pushl
cli
decl
fs
mov
mov
sbb
xchg
add
xchg
xchg
add
test
jecxz
leave
out
stos
es
mov
xor
xorb
pop
loopne
pushl
out
cli
sarb
in
jae
and
adcl
adc
dec
mov
leave
push
imul
jmp
add
pushl
inc
addr16
mov
es
mov
mov
mov
idiv
call
xor
negl
and
insb
and
mov
cld
das
icebp
jp
enter
xchg
call
int3
adc
fsubp
decl
insb
scas
sbb
es
rolb
xchg
ljmp
jmp
ficompl
into
dec
pop
push
lock
ror
push
test
fisubs
jl
notl
mov
pushl
jno
fmull
inc
addl
mov
pop
lcall
scas
cmp
adc
faddl
scas
mov
sahf
xor
add
cmp
subl
movsl
lcall
cmpsl
inc
mov
cmpsl
push
inc
ficomps
adc
call
test
mov
mov
rclb
mov
ljmp
lcall
pop
pusha
mov
sar
jle
xchg
xchg
imul
filds
inc
movsl
mov
push
sbb
cmc
jg
rorb
out
sub
fbld
xchg
xchg
pop
lcall
call
icebp
ret
cmp
jecxz
jne
cmpsb
ret
push
jo
incl
call
cmp
lahf
repnz
push
and
ja
mov
jmp
or
jne
lea
insb
iret
xchg
dec
ds
test
sbb
ljmp
mov
and
cmp
cmpsl
sbb
das
hlt
call
and
fcoml
cli
jmp
adcb
pop
loope
outsl
hlt
jmp
mov
mov
add
gs
ror
xchg
out
fcoml
add
mov
clc
lcall
nop
xchg
out
push
jb
xor
mov
mov
lods
lock
test
daa
outsl
xchg
sub
outsb
or
xor
dec
mov
and
dec
pop
adc
mov
inc
jmp
mov
xchg
pushf
lcall
push
mov
xor
call
dec
out
mov
jnp
gs
or
or
cld
fnclex
lea
fiadds
push
pop
cmpb
jmp
fwait
pop
out
pushl
xor
aam
inc
icebp
out
or
pop
and
mov
xchg
xchg
dec
sub
hlt
push
addr16
repnz
mov
pushl
mov
add
xchg
iret
sbb
in
sti
inc
cwtl
sbb
pushl
aad
lds
outsl
adc
loop
outsl
stos
pop
icebp
pop
dec
popf
xchg
andl
pop
sbbb
jg
sbb
leave
mov
std
push
mov
mov
mulb
sti
sar
cli
cwtd
scas
mov
xor
aam
mov
lret
mov
mov
fldcw
mov
test
enter
jg
fisubl
or
mov
inc
ljmp
dec
test
mov
decb
fbld
cmp
cmpsl
call
mov
sub
pop
push
pop
xchg
lods
aas
movsb
cmp
fldenv
scas
lret
incl
cmpsl
cmp
xor
leave
icebp
cltd
sbb
movsl
lret
lock
notl
push
jl
mov
fstpt
inc
ja
pop
dec
insl
xor
stc
add
pop
fisubs
mov
fs
ja
sti
pushl
cmp
mov
neg
into
sahf
jno
mov
sub
ljmp
gs
dec
jl
movsb
xchg
incl
repnz
xchg
popf
push
and
decl
mov
fcompl
repnz
jg
out
xor
add
mov
ljmp
pushf
cwtl
mov
ficompl
push
mov
xor
sarl
in
popf
idiv
negb
enter
repnz
das
movsb
or
jg
add
sub
jp
mov
jge
push
jp
stos
xchg
cmp
xchg
sbb
inc
xchg
jecxz
jp
sbb
leave
arpl
int
xor
imul
pushf
dec
leave
mov
iret
and
adc
xchg
and
push
pusha
test
cs
negb
push
lock
add
or
adc
outsl
jno
mov
sahf
mov
and
call
add
lock
clc
and
imul
jl
cli
mov
mov
fs
into
repnz
mov
cmc
cmp
clc
add
xchg
adc
iret
mov
cmp
inc
pop
jb
push
jge
stos
jae
push
cmp
cmp
inc
ret
mov
mov
loopne
lock
scas
and
loopne
aad
leave
sub
js
inc
data16
mov
pushl
pushf
aam
mov
clc
in
int
pop
dec
stos
jne
xchg
or
jl
jns
inc
stos
adc
incl
lahf
stos
mov
enter
and
lahf
xor
faddp
clc
or
sbb
fistps
mov
fistpl
xlat
push
inc
imul
call
add
into
jge
sti
inc
sbb
mov
dec
cs
shrl
iret
mov
imul
push
pop
adc
pop
dec
clc
daa
xchg
lahf
push
ss
sbb
jnp
stc
cmp
adc
repnz
outsl
sbb
add
hlt
jg
push
dec
pushl
lcall
add
pop
pop
decl
xchg
dec
jno
gs
call
pop
sti
jle
je
lods
rolb
mov
loope
je
mov
xchg
adc
imull
mov
cld
mov
mov
leave
jmp
shrl
lahf
adc
in
ss
add
lret
jne
xchg
movsl
cmp
push
or
sbb
mov
repz
mov
mov
test
push
or
rcrb
out
sahf
dec
std
call
add
cli
add
stos
fdivl
test
sbb
sar
push
jmp
testb
pop
iret
pop
scas
shrb
stc
xor
sbb
pushf
pop
jns
test
aad
jno
jne
mov
push
xor
stos
mov
test
push
cmpsb
or
decl
in
cmp
cmp
rclb
lods
sub
jg
push
xchg
mov
sbbb
js
stos
repnz
decl
loope
stos
cld
adc
and
and
rcll
test
cmc
fimuls
sbb
jle
push
loopne
mov
push
rclb
test
pop
fwait
insl
adc
pop
lcall
lea
out
push
jbe
or
outsb
xchg
cs
jp
dec
inc
push
jp
fsubl
test
test
in
jmp
lods
xchg
int
neg
rcl
xlat
adc
decl
mov
cs
pop
adc
mov
loop
fildl
into
out
sub
jmp
outsb
movsb
divl
fldt
repz
cmp
in
ljmp
adc
ss
sbb
jge
push
stos
mov
adc
call
adc
loop
in
sbb
je
add
aad
mov
fbld
test
mov
jmp
mov
pop
xchg
test
mov
lcall
or
dec
sub
arpl
inc
jg
movsl
mov
xlat
inc
mov
pop
xchg
push
daa
mov
push
push
subb
dec
out
mov
pusha
jp
inc
and
push
js
mov
jae
jecxz
pop
lcall
push
pop
adc
lods
cmc
xchg
sbb
xchg
push
xor
jmp
dec
lock
ja
pop
adc
xlat
xor
cmovl
and
adc
add
in
jg
xor
daa
pop
inc
pop
dec
push
aam
mov
ss
lcall
sub
dec
test
sbb
ljmp
insl
cs
cmpl
mov
fdivrl
jp
xor
or
or
jmp
xchg
adc
xor
pop
shlb
shll
ds
rcll
gs
mov
mov
inc
ret
adc
push
mov
dec
jo
in
or
fistl
nop
imul
ficoms
js
mov
adc
and
insb
std
and
loopne
sbb
adc
shrl
repz
sbb
mov
nop
push
pop
jecxz
jecxz
dec
dec
inc
xchg
pop
xor
and
data16
pop
iret
push
adc
sub
jmp
scas
mov
out
mov
repz
dec
add
inc
clc
jno
jae
hlt
sub
incb
mov
sbb
inc
push
mov
mov
rolb
cltd
rolb
xor
mov
fdivs
movsl
dec
mov
xor
leave
lods
mov
incl
xchg
xor
arpl
sub
daa
repnz
ljmp
xor
sub
xchg
mov
hlt
daa
mov
je
mov
push
cli
mov
jne
dec
xchg
lock
or
sub
es
sbb
rclb
fs
adc
ret
push
popl
and
or
rcll
add
or
mov
add
xchg
sbbl
arpl
mov
push
xor
and
mov
daa
shr
cmp
adc
push
rcrl
pop
pop
add
mov
or
push
mov
mov
mov
out
fisttpl
into
out
cmc
push
inc
scas
jp
fidivrs
mov
xchg
fwait
pop
movsl
inc
xchg
and
and
pop
mov
movsb
add
arpl
clc
ljmp
jmp
sub
dec
xchg
iret
in
mov
cmpl
and
mov
imul
mov
in
mov
fstl
das
insl
push
popf
inc
pushf
xor
cwtl
push
scas
idiv
pushl
inc
sbb
call
cmp
lods
sbb
iret
leave
jns
aas
cmp
call
xchg
push
jle
das
scas
cmpsl
in
decb
lcall
push
mov
negl
lret
out
aas
xor
cld
lea
test
cmc
es
adc
sar
lcall
mov
mov
and
lock
xor
sahf
add
pop
lcall
andl
pop
addl
mov
aaa
hlt
sub
movsl
jne
ljmp
arpl
xchg
rol
sbb
inc
pop
in
xlat
jmp
sti
andb
jns
das
hlt
inc
push
sub
out
aaa
pushl
shlb
cld
aaa
addl
mov
arpl
idivb
xchg
jg
jns
fbstp
pop
dec
or
or
add
pop
pop
inc
mov
pop
es
dec
cmp
or
jmp
mov
outsl
ffreep
push
fcoml
pop
fidivl
cmp
mov
scas
test
dec
pop
and
jmp
jo
xchg
es
insb
data16
add
int3
dec
sbb
sbb
jg
orb
xabort
and
cli
cmp
pusha
ret
ljmp
out
inc
inc
ret
incl
frstor
loope
add
mov
dec
in
xchg
iret
dec
and
sub
dec
gs
call
jnp
lahf
add
sahf
mov
xchg
ljmp
dec
xor
in
xchg
sub
mov
andb
sub
pop
cmp
sarl
jbe
mov
xchg
jno
xchg
add
sbb
je
cwtl
xlat
sbbl
pushl
dec
outsb
lahf
popf
xchg
in
jecxz
inc
cli
pop
mov
dec
pop
mov
push
fmull
and
fs
xchg
out
popa
lcall
adc
push
test
cmpsb
int3
xchg
or
inc
xchg
and
xor
inc
std
clc
push
movsb
repz
xchg
daa
cmp
jnp
mov
lcall
dec
stc
xorb
lods
sbb
cmp
and
rcl
mov
into
push
repnz
decl
shlb
xchg
push
dec
leave
or
out
out
fmull
dec
sbb
inc
lcall
test
cmc
mov
lds
js
cmpsl
jo
incl
push
mov
jns
out
xchg
fisubs
pop
add
cmp
daa
dec
movsl
jmp
jmp
push
clc
push
mov
xchg
dec
adc
cltd
gs
sub
cltd
lahf
cmpsb
sar
lcall
sbb
mov
jp
mov
mov
lret
dec
add
data16
sub
mov
aaa
mov
mov
fstps
es
cli
mov
or
test
stos
add
lcall
dec
mov
dec
pop
pop
sbb
addr16
aaa
insb
push
out
notb
pop
dec
xlat
push
mov
mov
decl
scas
sub
cmp
shll
pop
orl
shl
lahf
mov
outsl
mov
call
decb
les
pop
addr16
pop
aas
ss
cltd
mov
stos
mov
sbb
push
jae
pop
bnd
mov
ret
repnz
and
mov
adc
fnsave
mov
pop
mov
add
cmp
sub
add
pop
std
xchg
movsb
adc
fs
out
and
adc
push
lock
stos
aaa
fs
mov
mov
adc
push
dec
ret
adc
incl
rolb
not
push
jl
fbstp
push
aam
lcall
mov
mov
sbb
movsl
mov
std
pushl
sbb
pop
and
jno
add
xor
pop
lret
adc
decl
loopne
push
jg
mov
fistpll
mov
fcmove
jmp
xor
pop
push
or
inc
loop
test
ficoml
push
mov
test
lcall
dec
loope
jns
xchg
into
xchg
push
dec
inc
mov
std
popf
add
xor
ljmp
imull
xchg
xchg
push
and
jo
mov
jns
out
xor
pop
jo
fsubrl
or
jp
xchg
clc
lcall
aam
das
ljmp
xchg
cmp
sbb
jmp
mov
clc
int
mov
pop
cmc
pop
cmp
push
mov
ljmp
xor
cmc
sbb
jno
in
adc
inc
pop
jmp
and
call
pop
dec
aaa
fdiv
adc
fiadds
leave
mov
jecxz
ljmp
push
shrb
rorl
lock
das
test
pop
push
call
ja
adc
cmp
in
fnsave
pop
shrb
jmp
jg
pushw
js
cmp
adc
pop
sahf
push
lds
push
pushl
inc
sub
adc
mov
push
xor
jno
jmp
xchg
aad
lret
and
das
mov
notb
add
lock
cli
pop
or
in
ds
or
fidivrl
orl
and
pop
pop
adc
mov
test
sbb
jns
cld
incl
jns
mov
inc
loopne
mov
add
or
xor
sahf
mov
loope
push
je
mov
xchg
cmp
aad
xor
dec
sar
jge
mov
fs
xor
clc
or
mov
inc
mov
jmp
mov
mov
shrb
test
xor
loopne
rclb
cmc
mov
lods
stos
jg
in
cmpsb
and
push
mov
cld
sub
push
popa
mov
jns
cs
or
mov
or
or
xchg
xchg
sar
mov
lods
mov
lea
in
shrb
xor
shll
lcall
pop
pop
sub
cli
test
arpl
mov
or
outsl
adc
jmp
push
scas
xorb
mov
clc
push
mov
bound
lock
mov
decb
lods
push
pop
mov
inc
decl
fwait
out
pop
movsl
push
add
fbld
outsl
pop
jne
cmp
mov
fmulp
mov
lods
shlb
xor
lcall
add
pop
je
or
sub
mov
or
insl
scas
and
cmp
lcall
push
or
in
mov
inc
xlat
adc
xchg
popa
pushl
stc
push
ljmp
and
mov
pusha
ror
mov
and
stc
cmpsb
jbe
bound
mov
test
inc
pop
cli
cmp
cmpsl
sahf
lcall
aas
pop
sbb
mov
xor
sbb
cwtl
mov
push
scas
fisubrs
xchg
xchg
sub
inc
popa
enter
call
sbb
into
lods
add
hlt
dec
add
push
add
lahf
dec
jmp
xchg
inc
std
fsubrs
dec
in
ljmp
jl
dec
repz
mov
xchg
cmp
inc
mov
cmp
or
rolw
add
imul
mov
push
les
sbb
aam
jp
popa
iret
aad
ss
divl
fs
cmove
cli
ljmp
out
mov
lods
jmp
popa
adc
decl
jecxz
call
movsl
pop
popa
mov
inc
sbbb
leave
fucomip
call
add
add
dec
jmp
decb
in
lds
cmpsl
sub
pop
in
mov
pop
pop
sbb
push
mov
sti
mov
jns
cld
call
xchg
or
inc
in
fdivl
bound
pop
das
loopne
sbb
pop
insb
adc
outsl
mov
and
jne
pop
ljmp
xchg
pop
mov
jmp
pushf
inc
pop
sbb
or
sarb
mov
pop
cli
dec
mov
sbb
out
shrl
std
enter
das
hlt
jmp
sbb
mov
pop
sbb
adc
jg
jg
jno
push
repz
scas
push
mov
jne
repnz
incl
mov
sbb
addl
call
push
les
fmuls
inc
jge
adc
es
call
fs
icebp
daa
test
ret
pop
cmpsb
movsb
in
lcall
insb
gs
xchg
cmp
inc
adc
decl
mov
inc
jl
push
out
dec
cmpsb
fnstsw
fidivs
lahf
sbb
gs
sar
incl
les
iret
imul
push
mov
xor
pop
add
aas
mov
call
and
popf
out
xchg
cmpsb
jb
lods
push
call
ljmp
and
jg
aaa
adc
ja
mov
inc
mov
outsb
push
call
test
imul
scas
cmp
incb
xchg
pushf
addr16
incl
loop
mov
mov
cmp
sti
xchg
mov
inc
lcall
outsl
mov
lcall
jg
xchg
push
mov
inc
sarl
call
dec
int
inc
mov
pop
loop
jno
cwtl
cmp
and
xchg
lock
outsb
aaa
clc
inc
xchg
sahf
idivl
mov
jg
mov
call
mov
out
pop
ds
mov
das
add
fcoms
cmp
mov
push
sbb
xlat
adc
lahf
push
cmp
jg
lcall
jge
xchg
in
stos
push
stc
add
sub
outsl
lock
inc
fbld
cmp
adc
mov
xchg
ret
call
repnz
mov
popa
xchg
scas
cmp
jg
sbb
arpl
and
xor
xlat
out
sar
cli
jb
cmpsb
mov
cmp
xor
ljmp
jl
jmp
cmc
push
ficoms
aam
inc
sub
sub
cld
dec
xchg
add
xor
cmpsb
mov
loop
inc
je
add
das
test
ret
mov
push
jae
lock
jo
aad
pop
std
mov
shlb
jnp
push
sbb
stos
fwait
loopne
jae
call
cli
cmpsl
out
fcompl
mov
sub
addr16
cmp
lods
decl
lods
lahf
fists
dec
idivl
outsl
sub
mov
push
fdivr
out
das
add
xor
sbb
mov
jns
cmp
pop
dec
pop
loop
clc
jg
pop
push
push
call
jns
adc
in
mov
xchg
pop
sbb
push
mov
mov
mov
dec
pop
jbe
cld
xchg
lock
push
sar
mov
xor
loope
xchg
idivb
dec
aam
call
incb
pop
adc
jbe
aaa
iret
inc
daa
dec
decl
andb
sbb
add
jg
pop
sbb
mov
call
lret
test
insl
push
roll
es
cmp
cwtl
inc
jno
mov
jo
repnz
je
pop
leave
ja
imul
mov
jg
pushl
out
daa
pop
mov
test
mov
xor
cmpsb
movl
test
call
add
mov
xor
scas
push
jmp
pusha
scas
cmc
repz
incl
sub
iret
inc
imul
push
jmp
jl
call
cli
xor
mov
mov
and
dec
sub
jmp
add
jae
cwtl
into
push
test
aaa
push
cmpsb
pusha
adc
andb
mov
inc
cmp
jle
roll
mov
incl
outsb
test
xchg
cwtl
fwait
out
or
sbb
decl
cli
pop
push
mov
mov
int
cwtl
lcall
mov
ret
mov
fisubs
mov
xlat
je
or
mov
cld
pushl
mov
shrb
jp
cmp
int
inc
test
jecxz
push
pop
pop
test
add
push
inc
push
mov
sarb
jecxz
les
inc
xchg
sbb
jae
pop
les
incl
mov
sbb
inc
push
push
xchg
xchg
pop
cmp
pop
lcall
adc
or
mov
addr16
mov
mov
fimuls
cld
add
inc
xor
shll
pop
sub
mov
lret
movsl
jl
mov
sbbb
push
xlat
push
out
arpl
jno
std
xor
lcall
mov
jo
mov
cld
cltd
lret
xlat
pop
mov
in
fwait
repz
adc
sti
or
out
call
test
inc
or
pop
out
xchg
and
add
decl
imul
lret
or
out
hlt
jo
test
incl
push
addb
dec
lret
repnz
decl
je
mov
fstpt
ret
cwtl
out
jae
lea
scas
test
fmuls
movsl
pop
jle
aas
lret
cmp
lcall
dec
js
popf
pushf
fimull
lods
iret
add
repnz
lcall
movsb
xor
cli
jg
or
daa
ret
cmp
xchg
inc
pop
sub
push
push
cbtw
stos
ud0
pushl
gs
js
aas
nop
popa
pop
cmp
pop
in
fldt
fstpt
shll
mov
jg
das
add
cmc
outsb
sbbl
call
lret
push
addr16
addr16
sub
dec
add
in
mov
out
adc
call
lods
enter
jge
mov
loope
inc
jle
subb
sti
pop
sub
ljmp
decl
stos
nop
xchg
push
imul
orb
in
ljmp
mov
cld
decl
xor
in
mov
out
loop
aam
fldt
scas
mov
jl
add
or
sub
pop
sarb
cmp
pusha
dec
mov
fcmovne
jns
nop
and
xchg
push
cmp
xchg
and
sbb
pop
xchg
sbb
mov
xchg
mov
sbb
in
rcrl
das
dec
imul
call
ljmp
jns
push
mov
adc
and
popf
dec
shll
sub
int3
push
idiv
pop
loopne
pop
popf
call
push
insl
cmp
test
enter
jmp
jg
ljmp
das
lcall
dec
jge
xor
pop
ds
outsl
cmp
aaa
or
call
jl
scas
mov
in
cwtl
mov
jnp
les
fdivs
cmp
hlt
movsl
xchg
add
inc
push
orl
js
jmp
jnp
dec
ljmp
jns
adc
ljmp
mov
push
sub
cld
inc
mov
sbb
ret
outsb
mov
mov
movl
jecxz
jmp
rol
push
mov
dec
ret
pop
and
xchg
sbb
jg
test
bound
shr
ret
lock
and
push
dec
add
and
loop
pushl
mov
and
scas
add
or
loope
and
or
dec
pop
cmpsl
inc
adc
lods
inc
add
insb
cmp
test
mov
shrb
stos
iret
cwtl
aas
cs
call
and
daa
adc
inc
ror
add
nop
insl
push
unpcklps
sbb
jae
cld
test
jge
pop
cld
fnstcw
fcomps
sub
stc
fucomip
aaa
aas
fsub
sub
gs
mov
ficompl
test
dec
cmp
mov
push
xchg
in
xchg
mov
mov
lock
cmp
cli
push
ja
cmp
cmc
jle
in
in
xchg
pop
jg
ljmp
xor
jle
pop
out
sahf
lds
ljmp
sbb
and
jle
add
popf
cmc
lea
cltd
movsb
ja
in
sbb
dec
adc
fmull
and
sbb
push
mov
xor
stos
les
inc
cmovs
sub
mov
clc
jno,pn
inc
rcr
mov
mov
pop
xchg
out
into
andb
outsl
lock
arpl
mov
ss
xor
dec
adc
or
pushl
outsb
fldenv
jmp
pop
push
imul
jmp
lahf
xor
hlt
sbb
lcall
xor
mov
call
scas
mov
ficoml
pop
bound
xchg
or
nop
xchg
test
call
ret
cmp
sub
imulb
cmc
insb
pop
ljmp
cmc
lcall
mov
inc
gs
outsl
cmc
mov
inc
mov
mov
jle
test
rcrl
fldcw
push
cli
and
add
xchg
add
subl
sbb
ret
stos
loop
lds
adc
incl
add
adc
xlat
or
pop
push
or
incl
adc
jae
loopne
pop
aaa
in
mov
adc
dec
cmp
sti
push
decb
dec
dec
push
ds
pushf
clc
clc
push
dec
mov
mov
ret
int
mov
jle
gs
cli
aad
xorl
lcall
aas
pusha
pop
dec
mov
push
es
testb
sub
inc
daa
fs
sub
loopne
mov
push
aaa
arpl
push
push
mov
dec
and
fisubrs
decl
pop
cmc
imul
aas
adc
lret
push
and
cmc
lcall
decl
xchg
push
out
inc
lods
je
pop
ret
cmp
push
xchg
sti
inc
jnp
jg
ljmp
dec
adc
std
fildll
mov
jno
sti
mov
jbe
addr16
pushl
loopne
mov
adcb
mov
repz
inc
pop
shlb
lcall
dec
dec
je
xchg
popf
in
push
sbb
mov
jecxz
sahf
lret
rclb
lods
movsl
into
decl
pop
add
cwtl
lods
fs
test
stc
xchg
mov
mov
xor
xor
push
xchg
mov
push
fsubrl
sbb
push
mov
mov
push
stos
pop
cltd
push
lret
add
xchg
pop
and
ljmp
out
ljmp
inc
insl
clc
add
fcmovnb
loopne
aam
xchg
sbb
jmp
ljmp
cmp
xor
cvtps2pd
jp
jb
adc
imul
mov
push
jg
das
shll
and
mov
mov
mov
cmp
pushl
inc
push
cmp
sbb
popa
cld
or
jae
mov
pop
lods
jbe
pushl
xchg
pop
or
ret
fstps
out
and
mov
xor
mov
call
xor
out
sbb
fisubrs
das
xchg
cmp
mov
lret
lret
adc
jle
or
aad
sub
lcall
aam
mov
outsl
push
jne
js
pop
sub
cmp
stos
cmpsb
cmpsl
in
loope
sbbl
pop
jno
popf
addr16
cmp
fwait
adc
cmc
mov
jmp
push
inc
xor
int
cmpl
cmpsb
jo
bound
pushl
lret
imul
xor
xor
mov
mov
daa
mov
popf
popa
cli
call
pushf
dec
mov
jp
sbb
push
jg
mov
out
adc
cmp
test
mov
pop
mov
ret
push
fdivrp
mov
add
icebp
adc
xlat
pop
jle
add
ficomps
mov
jne
jp
or
jnp
outsl
and
or
fldt
cmp
sub
imull
gs
test
xchg
xor
stos
mov
incl
xchg
data16
jmp
mov
mov
fcmovne
mov
dec
inc
hlt
cmpsl
arpl
lret
xchg
sub
popf
xor
sub
leave
mov
sar
rclb
bswap
and
mov
lods
jg
int3
aad
dec
test
jbe
dec
inc
mov
mov
pop
iret
mov
xlat
call
daa
mov
lret
stc
jecxz
and
test
or
xor
test
das
scas
dec
lcall
rolb
sti
mov
repz
xchg
lahf
xor
testl
loop
push
addr16
cmpsl
aas
arpl
mov
sbb
push
lds
fbld
add
cmpsb
dec
cmpsb
jmp
out
jecxz
adc
jo,pn
xor
fistpll
mov
sub
cli
das
cmp
les
push
ja
ja
test
inc
adcl
repz
hlt
mov
sub
lods
divl
inc
mov
ljmp
inc
lcall
jb
lock
xchg
dec
cmp
dec
nop
xor
lods
mov
mov
fmuls
cmc
mov
fptan
mov
adc
mov
jmp
push
push
and
idivl
jg
cltd
cmp
or
stos
sub
movsl
incl
inc
jge
lea
fs
subl
mov
outsb
xchg
dec
arpl
mov
ljmp
fildl
jb
sub
xor
je
sarl
mov
and
sahf
mov
dec
mulb
gs
in
mov
push
jg
jg
jge
push
imul
sub
cs
decl
call
and
adc
lea
movsb
insb
rorl
mov
icebp
js
mov
adc
in
push
push
cmpsl
pop
sti
cs
jmp
test
push
gs
jl
iret
jle
movsl
cmp
mov
daa
fstps
jle
pop
jg
add
popa
inc
fwait
dec
in
enter
shlb
inc
dec
cmp
mov
cli
xchg
cmp
pushf
dec
fstl
mov
push
rolb
mov
movsb
cmpb
dec
fwait
add
push
xor
mov
and
dec
push
imul
mov
sbbl
pop
aad
shlb
cmp
inc
out
mov
sbb
decl
dec
out
fisttpll
xor
push
cli
push
mov
mov
pop
loop
dec
dec
jbe
out
lea
cmp
insb
cmpsl
sub
and
sahf
mov
daa
and
mov
lahf
jno
cwtl
pushf
pop
les
sti
das
cli
scas
mov
lret
fdivrp
mov
xor
and
fcoms
fdivrp
pushl
imul
push
cmp
mov
mov
popa
adc
std
pop
cli
dec
mov
aaa
fistpl
daa
cmp
scas
mov
lcall
lcall
jns
cmpsb
daa
je
push
fwait
xor
push
ss
sahf
negb
pop
pop
loopne
stos
and
jle
pop
sbb
mov
jo
cmpsb
sbb
call
pop
dec
cwtl
push
or
into
ret
cmp
test
xor
imul
jg
cli
lahf
std
fwait
mov
add
pop
push
enter
es
lcall
rdmsr
sbb
sbb
sbb
dec
fwait
cmp
adc
or
mov
jmp
ljmp
cmpsl
cmpsb
xchg
mov
push
or
or
xor
push
mov
rclb
cli
lcall
xor
and
scas
fbld
xchg
repnz
push
inc
fildll
outsb
push
je
and
movsl
hlt
mov
jle,pt
in
jo
call
repnz
add
int
lock
movsb
test
rcll
jg
and
push
insl
cmp
adc
in
decl
xchg
lcall
sarl
mov
out
cmc
inc
aaa
mov
jp
mov
in
leave
xor
cltd
outsb
cmp
push
pusha
scas
loopne
mov
dec
cmp
inc
imul
add
inc
adc
add
aaa
add
enter
add
add
jo
inc
dec
push
adc
lret
pop
inc
add
add
push
call
je
jb
outsl
jb
outsl
fs
outsb
je
jb
outsl
arpl
fs
js
push
popa
outsb
addr16
fs
insb
jae
jb
insl
jo
or
insb
je
inc
jns
push
imul
inc
xor
mov
jmp
insb
inc
insb
popa
addr16
inc
imul
outsl
insb
mov
pop
jne
push
outsl
adc
insb
sti
outsb
je
dec
gs
jo
sub
dec
pop
divb
neg
fs
inc
pop
push
sbb
gs
data16
sti
push
or
push
jge
push
push
fnstcw
addr16
js
sbb
outsl
decb
outsl
arpl
arpl
outsb
arpl
jb
push
imul
or
dec
popa
jae
mov
cwtl
jae
push
lock
inc
outsb
stos
push
gs
out
inc
jae
in
popa
aas
dec
fimull
push
adc
addr16
das
or
imul
outsb
inc
in
dec
mov
mov
gs
inc
sub
outsl
sbb
imul
rorb
shlb
insb
or
inc
stc
mov
iret
mov
jne
outsl
inc
and
or
mov
jae
inc
pop
pop
jns
outsl
fldlg2
push
jns
and
inc
adc
push
ret
jmp
in
fcomps
inc
je
pop
mov
int
mov
inc
or
fmul
fisubrl
mov
in
mov
push
push
out
push
imul
sub
or
mov
inc
mov
dec
pusha
inc
aas
imul
jl
push
shll
out
jo
jno
jnp
adc
shl
pop
mov
lds
push
push
ja
jo
inc
mov
mov
popf
cmp
jbe
xor
push
sbb
test
mov
imul
or
bound
jne
ret
les
mov
cmp
mov
cmp
or
lock
mov
loope
push
cmpsb
add
push
ss
addr16
adc
mov
dec
bound
scas
cmp
jl
data16
outsb
cmpsl
xchg
push
dec
dec
imul
dec
push
sbb
sbb
imul
mov
push
ret
sbb
das
lods
or
mov
es
popf
sti
js
xchg
xchg
enter
or
sahf
lock
push
jne
inc
jbe
xor
mov
aas
push
aad
je
addr16
mov
insb
mov
inc
jns
inc
insb
imul
add
int
lods
mov
inc
mov
inc
imul
xchg
xor
mov
push
imul
adc
fwait
icebp
movsb
pop
lea
or
adc
jae
iret
xor
cmp
shlb
pop
shl
or
push
or
xchg
xor
loope
adcl
push
push
pop
js
repnz
popa
and
dec
jno
cmp
dec
in
dec
and
add
test
loop
adc
add
push
scas
xlat
jmp
pushf
loope
test
loope
cmp
mov
xor
add
mov
sub
cmp
insl
inc
push
in
sbb
in
adc
pop
inc
and
jle
jecxz
lock
dec
inc
ret
pop
in
jae
lds
add
test
or
repz
mov
push
dec
ss
push
inc
int3
int
mov
pop
lea
sbb
inc
pop
das
pop
lret
push
push
insb
and
jmp
ja
imul
data16
xor
outsb
gs
push
cmp
mov
popa
flds
xor
and
xchg
lods
jno
ss
xchg
loopne
jns
mov
pushf
outsb
jne
jle
pop
or
popa
bound
comiss
dec
pop
dec
pop
add
dec
xlat
xor
imul
cmp
xorl
mov
push
jae
bound
fs
mov
jbe
dec
out
inc
mov
mov
cld
jo
mov
popa
js
pop
xor
cmc
xor
insb
add
inc
rorl
arpl
jmp
jo
push
outsb
sub
js
and
jg
jbe
inc
pop
mov
sahf
arpl
cmpsl
mov
jecxz
fstpl
jnp
push
mov
ja
sbb
lods
push
lds
pop
add
xchg
les
xchg
rcl
xor
sub
lock
jae
push
push
dec
gs
cmc
push
push
cmp
insb
addr16
mov
jae
jb
ficoml
insb
push
data16
xor
cltd
into
loope
push
mov
push
or
pop
xor
inc
jae
inc
add
adc
adc
jmp
loop
cmovnp
xchg
or
lcall
jmp
je
and
or
adc
sbb
sbb
cltd
cmp
jo
add
or
jg
jecxz
outsl
adc
push
inc
add
add
fldl
or
loopne
sidtl
add
add
mov
jmp
add
or
add
fcomp
xchg
add
cmp
add
sbb
mov
xor
pop
push
add
jl
push
cs
mov
or
lret
les
push
and
and
add
aaa
outsl
sub
add
add
add
add
inc
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
in
cwtl
push
cltd
cld
add
inc
ss
push
push
ljmp
jp
loopne
ror
fstpl
pop
push
call
lods
lahf
pop
adc
stos
mov
sub
enter
jmp
test
lds
sbb
xchg
mov
mov
imul
arpl
fst
jo
pop
in
or
shlb
movsb
or
and
mov
cwtl
xor
rol
int
add
stos
test
and
jmp
rcll
testb
shr
or
jg
sub
jp
cmc
popf
clc
mov
inc
lcall
mov
mov
loopne
pop
inc
jmp
jnp
shll
mov
ret
shll
adc
clc
xchg
mov
clc
mov
jle
push
or
mov
scas
mov
cmp
dec
jbe
xor
pop
clc
cld
lahf
sti
inc
cmpsb
xlat
std
push
jb
bound
or
jo
andl
adc
ficompl
mov
cmp
sbb
lcall
in
inc
fs
push
sub
movsb
ljmp
outsl
fdivrl
pop
mov
push
sub
cli
fsub
neg
jae
mov
jmp
cwtl
cmp
pop
pop
shl
enter
pop
push
out
sub
movsl
pop
cmp
cmp
cmp
enter
mov
xor
mov
js
mov
sub
jns
lea
lcall
arpl
add
rorl
imul
int3
mov
push
xchg
jns
in
xor
ret
je
push
aad
lea
repz
notb
cmp
sbb
aam
xor
out
cmp
mov
mov
push
.byte
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pop
xor
lods
add
add
add
lods
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
call
add
add
xor
cmp
xor
xor
inc
add
add
add
or
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
popa
add
add
add
add
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
popa
add
and
inc
add
outsl
add
and
inc
add
jae
imul
add
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
push
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
outsl
add
arpl
push
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
and
inc
add
add
outsb
add
add
add
add
add
sub
add
add
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
jne
imul
add
add
add
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
popa
add
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
xchg
xor
je
add
cltd
xor
jl
add
movsb
xor
mov
add
ret
add
xor
loopne
add
out
xor
add
add
cld
xor
add
add
or
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
jb
fs
insb
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
dec
gs
insb
outsl
jae
inc
outsb
jne
add
add
outsb
dec
gs
jo
