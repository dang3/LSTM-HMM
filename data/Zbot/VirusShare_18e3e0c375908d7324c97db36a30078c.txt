pop
stos
stos
xchg
add
in
xor
inc
mov
push
pushf
push
lea
push
lea
push
add
push
push
stc
repnz
ja
xor
or
add
gs
inc
hlt
push
push
dec
lock
push
and
fisttpl
mov
call
mov
loopne
mov
in
in
and
jbe
push
das
push
call
and
sub
test
fsubrl
imul
fcmovnu
and
push
in
push
or
add
xchg
add
outsb
nop
inc
inc
mov
ror
orl
jo
loopne
imul
xor
call
sub
push
jo
dec
push
push
add
jo
outsb
sar
push
jno
push
push
call
lods
jg
ja
add
xor
pop
sbb
push
mov
sbb
sbb
pause
sbb
inc
push
push
dec
cli
push
das
fildl
mov
ss
das
pop
mov
negl
cld
push
mov
push
sub
fisttps
and
add
inc
push
inc
adc
not
jmp
pop
pop
testl
outsb
add
ret
ret
dec
call
pusha
rclb
fldl
jno
fs
add
push
fcmovnu
pop
cmp
gs
sub
mov
subl
inc
pop
push
push
push
jecxz
inc
cli
mov
mov
push
in
sbb
stc
jle
insb
and
sub
pop
mov
das
shll
outsb
dec
pop
arpl
mov
xor
cmp
ss
dec
dec
mov
dec
dec
sbbl
pop
jle
push
sub
lret
ret
leave
ret
in
push
clc
cs
negl
push
sub
push
cld
push
push
cmpsb
sahf
sbb
inc
fcmove
lods
sub
lock
popa
inc
outsb
fs
pop
test
sub
push
push
and
adc
outsl
fdivs
popa
rdtsc
push
mov
loope
dec
dec
pop
xor
push
inc
push
ret
push
mov
inc
jo
insb
add
cwtl
repz
aam
xor
add
cmp
popa
or
add
call
fldl
aam
or
xor
push
shr
xor
imul
js
or
jbe
inc
jno
popf
cmpxchg
dec
mov
in
jne
adcl
je
adc
adc
xorl
mul
movsl
or
rcrl
rorl
repnz
popa
mov
jmp
xlat
std
pop
cwtl
addl
scas
push
insb
sub
sub
cld
push
push
pop
push
fiadds
imul
inc
adc
sbb
in
dec
or
dec
xchg
outsb
dec
mov
xor
mov
cmp
in
and
add
imul
mov
sbb
lods
or
pop
lahf
shl
fmull
call
in
pop
sub
dec
push
dec
dec
call
subl
enter
or
dec
jbe
dec
call
cld
fs
or
lock
mov
icebp
push
insb
xchg
mov
cld
sbb
call
push
pop
outsb
outsl
cmpsb
mov
xor
xor
pop
pop
jg
push
or
adc
test
imul
pop
movsb
or
push
nop
ja
sbb
stos
mov
out
test
inc
jae
add
cmpsl
dec
push
push
sub
inc
sub
jg
mov
sub
fisttpl
jmp
imul
xchg
pushf
fidivs
pop
clc
lea
inc
inc
push
loopne
or
inc
xor
sub
jmp
and
leave
je
psrlq
mov
mov
cmpsl
aaa
jns
inc
jno
sti
lods
mov
push
aam
fcomps
js
fnsave
and
xor
dec
inc
cmp
in
xchg
call
das
push
sub
xor
daa
jae
inc
jp
add
adc
les
and
setns
or
mov
jns
sub
jno
lcall
push
xor
push
cvtps2pi
arpl
aaa
push
and
outsl
addr16
push
rorb
push
dec
xchg
inc
sbb
jb
xchg
sub
xor
mov
and
mov
mov
bound
cmp
push
nop
lods
or
add
push
sub
fildll
xor
les
add
not
sub
sbb
mov
adc
pushl
mov
ficoml
movl
sub
add
jmp
insl
mov
and
adcb
ret
push
cmc
jo
jae
mov
adc
add
mov
mov
jle
xor
mov
aaa
dec
jns
cs
in
call
push
daa
mov
pop
sub
pop
jmp
pop
enter
arpl
jo
push
addl
push
dec
mov
mov
push
jnp
inc
jecxz
ja
push
sar
mov
cltd
sub
rorb
aas
xchg
les
push
add
js
faddl
arpl
in
pushf
sub
sbb
jp
outsl
nop
push
push
and
cli
and
into
insl
adc
mov
cmp
xchg
mov
xor
call
pusha
iret
adc
pop
loopne
mov
flds
push
push
jo
imul
add
push
jns
sbb
add
or
push
je
mov
push
inc
xor
dec
es
push
pop
into
pop
sub
enter
jp
daa
xchg
inc
aaa
rep
inc
insl
outsl
adc
movsl
jae
xor
xor
scas
or
xor
xor
or
inc
arpl
jns
sbb
pop
loopne
sub
ret
jae
dec
or
add
inc
call
mov
xlat
bound
dec
push
fistl
call
sbb
sbb
fprem
stos
mov
aaa
mov
rolb
mov
les
push
dec
dec
or
js
cmp
imul
outsl
movsl
js
hlt
or
fcoms
sbb
inc
pop
or
push
mov
out
cmp
into
sub
icebp
jecxz
push
outsl
cmp
scas
xchg
and
setbe
dec
adc
add
loope
inc
dec
push
dec
cli
push
aam
cli
lds
push
notb
inc
aas
jl
xchg
dec
fcompl
jne
push
inc
mov
rorl
or
icebp
ss
into
lods
shr
jae
push
pusha
xchg
aaa
cmp
lea
push
add
dec
out
jecxz
cwtl
fsubs
jle
addr16
inc
xchg
push
aaa
dec
or
sbb
rorb
xchg
test
mov
pop
push
out
sbb
adc
dec
mov
sbb
inc
jmp
sar
fisubs
push
or
dec
sub
neg
adc
dec
jmp
lret
dec
movsb
jbe
out
sbb
sub
mov
js
inc
inc
ret
test
or
sti
add
jo
test
cmp
stc
sbb
popa
sbb
fistps
dec
push
inc
add
adc
jmp
dec
ret
lock
std
add
imul
fstps
xor
inc
adc
push
inc
iret
hlt
pushw
dec
cwtl
nop
jnp
adc
xor
adcl
push
push
dec
mov
sbb
insb
scas
dec
sbb
xor
jae
sbb
jbe
fisttpl
adc
call
jae
push
mov
ja
pop
mov
push
mov
mov
or
mov
les
mov
xchg
mov
dec
lcall
jecxz
or
lret
es
int3
pusha
hlt
push
or
lock
push
inc
js
and
call
push
insb
addr16
lods
add
dec
outsl
ljmp
push
jno
add
lcall
mov
add
cs
bound
aam
aas
cli
cmp
cli
fsubrs
js
and
ja
mov
xor
rolb
push
scas
jne
cmp
inc
dec
ds
push
in
notb
dec
or
mov
mov
push
and
sbb
ret
jmp
sbb
or
sbb
jnp
push
sbb
leave
std
inc
outsb
bound
call
nop
adc
mov
xorl
push
cmp
loop
sub
fistl
hlt
enter
sbb
cmpsl
inc
inc
ja
ja
outsl
inc
xchg
sti
push
jae
out
das
icebp
pop
dec
mov
sbb
fadds
or
jp
rorl
push
inc
orb
les
outsb
ja
jmp
jae
jb
insl
cmp
cmp
push
xor
sub
mov
mov
sbb
sbb
inc
imul
sti
inc
loop
and
add
fnsave
xchg
daa
ljmp
hlt
lods
movsb
or
cs
or
jno
or
icebp
loope
shrb
xlat
je
jne
pop
test
test
rcr
stos
dec
mov
dec
sub
cmp
hlt
inc
jno
outsb
xor
sbb
jg
loopne
sbb
sbb
inc
mov
outsl
dec
fnstenv
xchg
push
outsl
mov
mov
sarb
inc
mov
cld
or
pushfw
addr16
xor
and
or
xchg
or
push
push
push
push
cmp
lret
push
ljmp
xchg
jns
inc
gs
push
adc
sub
add
adc
mov
or
sbb
xor
jb
stc
lds
imul
out
stc
pushf
sarb
data16
cmc
xchg
je
stos
adc
push
jae
repnz
outsb
push
sbb
ret
xor
push
adc
sbb
andl
add
movsb
add
ror
xor
cmc
es
or
adc
fcompl
mov
jmp
lods
cmp
cs
out
popf
push
jb
add
jno
adc
dec
jae
stos
lcall
je
ss
in
xor
cs
inc
imul
add
aaa
inc
pop
inc
data16
rclb
cltd
pop
dec
push
push
dec
add
mov
pop
rcrl
aaa
pop
call
lret
cwtl
cwtl
inc
pop
push
push
leave
add
mov
xlat
adc
lock
xor
pop
insb
cmp
sbb
icebp
rorb
inc
in
mov
adc
add
jl
out
pop
test
out
adc
inc
cwtl
shlb
push
dec
movl
lods
test
mov
pop
push
push
sbb
push
movsb
xchg
pop
pushf
dec
icebp
mov
mov
jp
or
nop
ds
cld
aam
inc
or
dec
out
sti
mov
ficomps
xor
rolb
shl
fucomip
fucomp
inc
or
adc
divb
test
ret
mov
lods
stos
aam
je
rorb
ljmp
push
aas
roll
bound
outsl
pop
das
loopne
xor
or
push
sub
xchg
notb
jne
fsubrl
jnp
add
dec
js
hlt
or
pop
dec
cmp
inc
adc
dec
mul
inc
out
push
xor
xor
sbb
xchg
jo
ss
movsb
lods
test
xor
hlt
add
mov
inc
cmp
aam
jb
std
sub
jp
sbb
icebp
sbb
mov
je
nop
mov
adc
cmpsb
call
mov
xorl
fsubrs
outsb
push
inc
aas
pusha
sbb
loopne
mov
cmc
sbb
popf
xlat
es
pop
jp
mov
pop
cmp
bound
inc
shll
fsubs
push
pop
push
xor
sub
cmp
jbe
out
clc
pop
xchg
andl
outsl
ja
sbb
xor
gs
push
dec
sahf
mov
mov
call
cmp
mov
hlt
dec
push
xchg
push
insb
idivl
in
dec
cli
daa
nop
inc
movsb
cmp
shlb
mov
cmp
lods
push
lahf
sbb
or
shr
mov
xchg
push
addr16
pop
xor
mov
jle
sbb
push
repnz
gs
dec
inc
dec
xchg
stc
push
xor
xorl
movsl
cmpsb
aaa
sbb
inc
je
push
sahf
dec
jge
push
es
cmp
jae
pop
xor
xor
push
dec
call
xchg
sub
outsb
addr16
cmp
adc
or
mov
cmp
scas
hlt
ljmp
xchg
bound
bound
and
je
sbb
and
ss
ljmp
push
push
xor
fisubrl
and
ss
push
dec
loop
push
pop
add
sub
in
addl
push
dec
ret
shrb
xchg
push
sbb
outsb
mov
jmp
test
and
cli
aaa
aaa
dec
xor
push
or
mov
call
insb
movsl
push
push
pop
mov
imul
rolb
dec
imul
fidivs
adc
inc
pusha
movsb
adc
jb
les
fidivs
xor
ja
mov
mov
cs
mov
push
sub
aad
cmp
mov
imul
jmp
sbb
bound
push
mov
sbb
sub
stc
adc
xor
icebp
inc
add
xchg
incl
lods
dec
sub
dec
add
neg
push
sub
sbb
inc
not
ret
push
add
loope
push
mov
mov
daa
rcl
push
dec
mov
notl
into
dec
or
fadds
sub
add
lret
xorb
jmp
lods
mov
xor
stos
or
dec
xchg
ds
push
add
cmp
fwait
pop
and
push
leave
sbb
insb
je
xchg
mov
cmp
lock
mov
aam
imul
sbb
cmp
push
dec
fisttps
mov
pop
out
in
push
push
push
out
fiaddl
lea
add
call
scas
xor
cmp
pop
xor
fsubs
out
rolb
clc
cmc
nop
fisubl
outsl
jne
movsb
dec
lds
hlt
xchg
imul
push
mov
mov
mov
sub
arpl
cmpsl
inc
je
dec
je
adc
push
add
mov
mov
adc
in
aam
push
pop
xor
fwait
xchg
pop
mov
mov
ljmp
aam
sbb
dec
mov
mov
mov
xor
pop
add
adc
shr
outsb
cwtl
push
jne
fwait
mov
fcmovu
add
inc
or
addr16
add
jbe,pt
jg
push
jns
dec
dec
mov
pop
dec
ss
sub
xchg
test
add
sub
rorl
es
loop
fdivr
pop
jne
dec
adc
dec
inc
mov
repnz
arpl
fucomi
jp
sbb
mov
pop
pop
es
inc
rorb
pop
jmp
inc
jbe
push
xchg
loope
sub
insb
cmp
mov
xor
sub
roll
mov
loope
sbb
ja
inc
jb
outsl
xor
xor
jge
insl
push
inc
xor
or
mov
xor
inc
dec
inc
sbb
adc
sarb
fidivrl
pop
fildl
jp
cltd
rclb
js
rcrl
iret
push
pop
sbb
sub
pop
jbe
dec
mov
pop
pop
hlt
sub
daa
push
cmp
jmp
mov
popa
popf
dec
push
push
imul
mov
mov
mov
add
push
fiadds
scas
sahf
in
addr16
loopne
add
jl
ficoms
sub
sti
orps
jmp
jne
inc
insb
jno
pop
icebp
and
jns
faddl
imul
xor
int3
mov
outsl
add
sbb
cmp
xchg
add
jmp
ljmp
arpl
imul
call
jb
xchg
aad
push
sar
mov
adc
mov
fwait
hlt
rcrb
dec
xor
mov
jp
xchg
jbe
jns
push
jo
inc
or
xchg
inc
ret
mov
jns
push
outsl
pop
push
pop
sbb
or
push
xor
lods
das
les
pop
loopne
jmp
jb
push
mulb
pop
punpckldq
pop
pop
pop
repz
and
push
shrb
gs
jns
stos
adc
gs
sbbl
sbb
mov
repnz
mov
std
xor
dec
outsl
js
aaa
clc
dec
jb
aaa
pop
push
push
jno
subl
adc
dec
adc
fwait
fs
testb
cmpsb
xor
fmull
push
pop
dec
cld
imul
lock
lcall
jmp
mov
pop
fmuls
push
xchg
stos
sub
pop
xor
push
xor
pop
mov
pop
addl
cld
out
clc
lock
out
pop
js
insb
push
jbe
inc
dec
bound
and
adc
mov
lds
data16
ja
pop
jns
gs
addr16
bnd
xchg
es
mov
jmp
mov
pushf
sub
add
add
xchg
inc
sar
addl
mov
sbb
sti
lods
dec
jne
call
dec
movl
mov
dec
inc
pop
push
inc
sti
xchg
or
jge
dec
or
jo
or
jbe
insl
push
add
xor
and
into
mov
lods
ret
jae
lods
pop
std
call
add
shll
cmpsl
incl
mov
mov
push
pop
sbb
sbb
mov
icebp
faddl
movsl
adc
pop
push
jnp
pop
inc
inc
inc
popf
dec
push
aaa
xlat
in
lods
scas
add
pop
pop
pushl
leave
or
ret
mov
lods
pop
add
lods
imul
movsb
mov
sbb
push
pop
mov
pop
fdivr
sahf
pusha
add
sbb
sub
xor
push
jmp
xchg
push
js
nop
or
mov
shll
shll
repz
adc
sbb
push
mov
pop
stos
aaa
mov
insl
jg
lahf
inc
lods
fs
ljmp
imul
dec
in
mov
test
fisttpll
jecxz
inc
jp
scas
insb
fwait
repz
mov
sub
inc
sbb
and
push
xlat
xor
loopne
outsl
dec
mov
add
jmp
push
mov
inc
fdivl
je
mov
addb
add
adc
inc
nop
pop
fwait
jb
mov
mov
pushf
push
test
fiadds
fistps
mov
push
mov
and
testl
mov
pop
inc
sahf
cmc
sub
push
in
lods
fwait
adc
popa
xorl
test
ret
fistpll
or
mov
pop
rol
inc
dec
jo
cs
js
xchg
mov
jbe
addr16
popa
popa
push
add
in
push
xchg
mov
dec
push
je
inc
fwait
mov
jl
popf
sub
push
subl
inc
outsl
rolb
in
outsl
and
sub
outsb
lods
std
inc
imul
loop
pop
dec
or
inc
dec
shrl
idivb
and
pushf
adc
jmp
popa
jae
repnz
insl
call
cmpsb
add
push
dec
jp
jnp
sub
mov
fists
clc
push
js
clc
testb
jno
xor
add
xor
sub
aam
addr16
dec
jns
dec
mov
stos
ficompl
and
mov
add
imul
push
outsb
test
push
pop
fnsave
clc
push
mov
stc
addb
adc
mov
sub
jge
adc
jmp
jg
push
outsl
dec
inc
adc
mov
mov
push
inc
gs
test
roll
xchg
sub
fs
call
hlt
sub
and
pusha
jg
add
jbe
outsb
call
rcll
mov
dec
ljmp
push
clc
jecxz
push
inc
pop
push
jno
call
jl
in
or
insl
jb
dec
sub
inc
jo
inc
mov
call
push
scas
push
outsl
dec
pop
into
jno
outsl
push
call
inc
ljmp
incb
xchg
fiadds
jne
push
stos
test
pop
jae
iret
in
stos
adc
nop
pop
push
mov
popa
dec
jge
sbb
xor
fstpl
mov
inc
dec
dec
pushf
cmp
push
rolb
mov
mov
xor
xor
adc
push
sub
inc
mov
in
mov
dec
dec
add
mov
fcoms
imul
push
insb
push
xor
lods
xor
bound
xor
scas
insl
mov
xor
outsl
bound
lret
adc
ja
popa
std
xchg
loop
push
dec
push
pop
xor
call
lcall
test
mov
jo
or
and
mov
gs
xor
push
dec
cmp
lret
mov
cld
jnp
jge
cs
xor
insb
mov
outsb
pop
test
inc
arpl
inc
call
add
les
xchg
mov
out
dec
dec
repnz
ja
insl
dec
ss
xchg
pusha
mov
dec
sub
loopne
mov
repz
adc
test
inc
cmp
daa
fdivs
inc
loope
pusha
push
daa
dec
adc
pop
cmpsl
int3
or
push
test
fldt
fdivrs
push
arpl
test
add
lods
ret
popa
xor
fstpl
mov
popa
mov
dec
outsl
push
fs
sub
and
stc
inc
test
ret
sub
jmp
rcr
cmp
xor
int3
dec
push
js
call
mov
mov
rcrl
stos
incl
add
mull
push
add
push
jg
pop
or
stos
or
pop
loop
stc
mov
and
dec
pop
adc
not
sub
inc
mov
rcl
push
inc
dec
pop
add
dec
jns
es
mov
dec
inc
add
mov
mov
dec
addr16
mov
xchg
loopne
inc
mov
cmp
in
mov
outsb
xor
addr16
adc
dec
xor
inc
inc
dec
dec
call
clc
andb
add
mov
enter
je
mov
jmp
nop
es
cli
adcb
sbb
pop
xor
add
xlat
in
cmp
fnstenv
inc
dec
std
fnstcw
push
jb
push
imul
inc
push
pop
push
inc
sub
psubusb
pop
icebp
and
jns
sub
es
les
in
jne
in
lret
xor
pxor
cld
inc
inc
push
xor
and
sarl
cld
lock
cmc
jmp
add
sbb
inc
sbb
pop
jnp,pn
stc
inc
jmp
ret
mov
pop
xor
test
add
aaa
pop
out
mov
fnsave
fldl
jbe
inc
fsubrl
xchg
daa
xor
mov
clc
push
cmp
outsb
inc
push
xor
nop
imul
xor
out
adc
aam
aam
mov
add
xchg
dec
aaa
mov
xor
adc
arpl
add
add
stos
pop
push
mov
cmpsl
rorb
mov
shlb
pop
arpl
sahf
jno
outsl
dec
dec
repz
jl
lahf
cmpb
not
mov
sbb
push
push
cmp
inc
fldt
clc
getsec
pusha
sbb
pop
fs
and
jb
loope
lret
aam
adc
lock
adc
dec
push
jle
sub
in
scas
push
addr16
addr16
jg
mov
int
adc
testb
bound
push
dec
jne
sub
mov
adc
neg
jmp
adc
ja
andb
jae
or
push
and
dec
add
add
das
adc
xor
dec
push
push
inc
add
lret
ficoms
push
or
and
rclb
push
xchg
lock
bound
push
out
push
pushf
cmp
dec
sub
push
adc
movmskps
dec
scas
mov
xchg
bound
dec
or
or
lods
aam
pop
xchg
add
xorl
daa
icebp
adc
dec
lods
mov
fists
inc
mov
mov
jbe
loopne
subl
mov
call
iret
inc
call
pop
inc
dec
sbb
ret
out
mov
inc
int
insl
push
sbb
jo
psrld
push
insl
pop
push
ljmp
inc
jmp
mov
inc
je
in
cmp
push
push
mov
shlb
lcall
popa
popa
push
addb
inc
decb
gs
push
jmp
cmp
movsb
mov
jl
rcr
inc
and
test
inc
adc
cmp
cmpsl
add
in
int3
inc
pop
mov
or
ret
in
push
mov
xchg
fidivrs
movsb
add
mov
imul
rolb
mov
nop
call
xor
bound
adcb
cmp
xchg
gs
movsb
dec
push
arpl
pusha
add
pop
addr16
jmp
in
add
sbb
inc
jmp
mov
sar
cmp
or
xchg
ret
push
push
ja
in
call
and
scas
call
and
outsb
rorl
pop
jo
mov
add
adc
bound
call
int3
call
and
mov
push
pop
out
adc
loope
rcr
or
sbb
mov
mov
mov
movl
clc
movsl
adc
inc
ljmp
or
test
pushf
jmp
push
mov
stos
cltd
or
push
inc
push
insl
aas
rol
out
lret
call
fcos
rolb
push
or
dec
sub
jmp
outsl
aad
mov
call
push
mov
push
xor
xor
ss
rorb
outsl
push
xor
inc
negb
jns
add
ljmp
aaa
push
dec
mov
addr16
movsl
push
data16
es
sbb
in
out
orl
adc
xchg
mov
and
adc
sbb
sbb
sbb
les
lret
pop
dec
jmp
incb
lea
mov
loop
js
sub
xchg
fldcw
shll
test
outsl
pop
and
push
jg
xor
icebp
insb
pusha
sahf
lds
ds
mov
push
push
test
mov
push
imul
cmp
sbb
xor
mov
loopne
mov
cs
xchg
sub
rcrb
sbb
sub
arpl
jmp
inc
add
mov
cld
insl
popa
popa
ret
daa
dec
pop
dec
ss
dec
inc
hlt
outsb
imul
xlat
and
and
testb
cmpl
shl
jbe
dec
lds
mov
sub
and
add
mov
add
cmp
inc
xorb
xor
push
sahf
pusha
mov
pop
xchg
push
shufps
sbb
push
sub
outsl
inc
stos
call
mov
dec
aad
shll
inc
cs
cli
jns
fs
push
add
and
gs
push
add
shlb
dec
pop
orb
add
dec
aaa
jns
xor
repnz
sub
jno
mov
inc
add
push
dec
sti
lods
push
jo
or
insb
cld
add
xorl
sti
inc
movsb
adc
fwait
sbb
pop
pop
mov
je
mov
insl
call
rcll
ret
fstps
sbb
imul
cmp
aam
xor
mov
jbe
js
repnz
jne
mov
add
in
mov
mov
fistl
push
jo
das
mov
or
dec
repnz
and
jle
adc
dec
jl
outsl
push
xor
aas
into
jp
dec
int3
clc
push
ficoms
push
cs
pand
int3
rorl
pop
jo
loope
jmp
mov
dec
sub
loop
test
push
cmc
and
lahf
lret
and
sbb
and
fistps
add
jmp
ljmp
or
aam
icebp
shlb
jns
or
mov
push
dec
dec
sbb
arpl
mov
enter
fcomps
xor
jg
xchg
data16
adc
stos
xor
push
mov
cli
mov
cmp
insb
push
push
jb
in
mov
xor
repnz
bound
xor
gs
mov
xchg
pop
rclb
lds
cmp
outsb
dec
mov
in
lcall
lods
dec
mov
pop
push
push
ja
xorl
icebp
add
mov
dec
sbb
jns
movsb
dec
push
lock
sub
mov
push
jae
sbb
js
loope
jns
rorl
rolb
push
hlt
daa
jmp
mov
push
add
in
and
adc
and
or
and
test
inc
or
std
mov
adc
add
adc
test
cld
fcmovne
add
and
adc
inc
and
add
je
jns
scas
cmp
add
adc
ss
outsb
pop
imul
push
and
inc
add
inc
insw
jae
mov
add
sbb
std
fimull
add
add
insl
sbb
inc
mov
test
inc
adc
imul
jno
add
subb
lods
subl
jno
insl
jae
and
and
inc
or
inc
ret
add
adc
or
and
ljmp
aas
add
xor
jno
jbe
fs
ja
imul
out
lcall
jo
aaa
jns
push
push
or
adc
sub
and
and
out
imul
xchg
int
ret
adc
cmp
inc
sbb
fistpl
xor
inc
push
mov
pushl
dec
inc
inc
pop
gs
popa
push
xor
lods
xor
rcll
mov
out
xor
sub
mov
or
into
mov
shll
mov
lret
push
fsubs
pop
mov
test
es
jae,pt
loopne
imul
xor
and
inc
cmp
insl
lods
mov
mov
lods
mov
ficoml
adc
push
cmp
mov
jbe
push
xchg
das
push
adc
fidivl
std
mov
xor
inc
mov
js
fistpl
inc
adc
and
sub
and
add
adc
mov
pop
inc
imul
mov
dec
jb
popa
outsb
fcoms
js
out
lods
cmp
dec
inc
push
jae
pushl
mov
adcl
sti
adc
mov
mov
incl
cmp
xchg
adcb
jo
shr
shlb
dec
jne
and
pushl
std
lds
dec
and
fisttps
add
cmp
cltd
dec
xchg
call
icebp
int3
inc
xor
cmp
cmpl
add
cli
imul
push
mov
jecxz
jne
jbe
and
mov
outsl
fwait
out
cltd
cmpsb
popf
shl
stos
pop
sbb
jmp
and
mov
add
jb
adc
lock
clc
mov
mov
cmp
pop
sahf
mov
aam
xchg
jmp
fcompl
notb
cli
daa
sub
fisubl
ljmp
dec
arpl
ljmp
push
test
and
ss
in
xor
cmp
fs
popf
jg
rclb
mov
lea
and
jle
cmp
cmp
jmp
iret
cmc
push
test
mov
aam
and
mov
push
xchg
cmp
iret
and
insl
lret
mov
mov
test
imul
xchg
mov
cltd
decl
test
psrad
gs
mov
aad
inc
xor
je
inc
lcall
dec
test
cmc
movsb
lods
mov
aam
ret
in
xchg
jmp
out
push
and
in
orb
adc
icebp
xchg
xchg
push
imul
inc
mov
sar
call
lods
jne
es
fwait
pushl
test
mov
enter
repz
pusha
add
lcall
sbb
cli
scas
mov
xor
ror
out
ljmp
sbb
repz
ljmp
mov
jmp
test
je
push
ds
add
inc
xchg
les
inc
xchg
inc
pop
lcall
mov
cmpl
and
sub
movsb
dec
xor
push
js
ljmp
cmpsb
xchg
stos
int3
pusha
add
push
inc
mov
pop
cmp
mov
xor
inc
pop
std
call
lret
sub
push
push
out
jmp
xchg
xchg
jle
call
aas
ja
rcrb
fdivrl
xchg
mov
sti
dec
hlt
or
je
mov
push
loopne
iret
loopne
das
dec
outsl
imul
xchg
and
jae
and
xlat
sbbb
fiadds
lods
pop
xchg
jg
pushl
or
dec
pop
cmp
xchg
inc
push
push
fcos
call
outsb
mov
lcall
adc
bound
ret
inc
dec
popa
bound
rcr
sub
incl
or
sbb
jae
jp
cs
cmpsb
fnstsw
pop
push
inc
loope
into
jmp
cli
xor
in
dec
cmc
adc
lds
movaps
sub
in
sub
clc
or
sbb
lcall
inc
cwtl
xchg
stos
int3
adc
fucomp
or
cld
repz
mov
lcall
mov
sub
xor
addb
inc
scas
sti
pop
push
ljmp
dec
call
addr16
sub
in
push
mov
jmp
mov
in
or
cmp
ret
cmp
push
adc
inc
fsub
pushf
scas
ds
jecxz
xchg
test
push
cltd
hlt
movsl
mov
lret
cwtl
push
sbb
out
out
mov
lock
mov
inc
in
bnd
mov
enter
call
push
cmp
mov
inc
jmp
dec
test
jp
fadds
inc
inc
push
push
fnsave
push
and
lcall
push
stc
test
sub
and
enter
inc
gs
lcall
jg
ja
mov
dec
aaa
cli
call
lahf
xchg
scas
nop
push
inc
aas
or
sti
jg
ljmp
flds
jno
negb
push
decl
or
in
sbb
or
rcrl
js
sub
dec
cmp
out
mov
fdivr
sub
mov
clc
enter
sbb
pop
jnp
sbb
push
push
leave
test
xchg
filds
lahf
or
xor
sti
in
xchg
roll
sar
cltd
pusha
hlt
sub
test
jmp
out
xor
scas
sub
lods
adc
jecxz
int3
in
clc
push
adc
test
inc
or
pop
push
lret
je
pushl
hlt
mov
fcoml
cmpsl
add
outsl
std
pop
mov
incl
sbb
nop
mov
jbe
push
insl
out
pop
ljmp
fisttpll
mov
cwtl
sub
dec
sub
lds
faddl
xchg
fbstp
inc
push
jae
and
ljmp
cmova
ds
or
imul
stc
mov
xchg
fstpl
test
xchg
test
cmpsl
dec
sub
push
dec
fbld
pop
inc
stos
sti
adc
jbe
mov
test
loope
dec
pushf
icebp
lods
sbb
cmpsb
dec
mov
mov
sub
outsb
jno
call
jmp
imul
loop
cwtl
pop
ja
pop
adc
lock
jbe
aam
and
idiv
ljmp
lea
sub
push
sbb
inc
xchg
xchg
add
lods
test
jle
xchg
lret
in
or
fisttpl
fisubl
sub
add
push
loop
add
icebp
cmp
inc
and
pushl
add
ffree
fsts
sbb
lods
out
pop
dec
lods
dec
cmpsl
pop
inc
add
decl
movsb
mov
pop
aas
ret
push
es
cli
pop
stos
pop
jb
lods
xchg
fisubrs
bound
pushf
xchg
loopne
cmp
or
mov
push
movsl
xchg
adc
out
adcb
lcall
push
arpl
jns,pt
inc
pop
lock
mov
mov
leave
push
jg
add
mov
popf
mov
mov
add
outsb
sub
mov
jb
or
push
and
jmp
jne
pop
movsl
das
and
mov
rcr
or
test
pop
cmp
lahf
jo
test
aaa
dec
push
sub
scas
enter
add
adc
pushl
call
ror
xor
popf
fstl
out
pop
clc
fbld
ljmp
sub
cmp
roll
xchg
sub
dec
imul
jbe
cmp
addr16
negb
xor
clc
leave
loope
shll
js
or
in
add
ljmp
cmpsb
sub
int
into
jno
xlat
shr
cmc
out
lcall
push
cmp
and
ds
lods
popf
mov
imul
jg
rclb
jg
xchg
pop
aaa
push
repz
push
xor
and
jb
jmp
jnp
xchg
mov
add
pop
call
jno
sbb
push
add
pop
xlat
cmc
and
fimuls
test
inc
repz
mov
stos
outsl
sbb
decl
and
testb
fs
sbb
mov
cmpsl
cmp
cmp
ds
lock
jmp
mov
push
xchg
adc
fimuls
sar
call
push
sarb
xor
push
fimuls
mov
out
and
xchg
test
inc
cld
adc
js
inc
mov
or
das
ds
xchg
sub
les
pushl
test
xor
call
ljmp
mov
fstp
loop
add
xchg
fidivrl
repz
mov
fs
std
push
pop
shrl
movsb
xlat
fcomps
sti
leave
rep
mov
pop
aaa
pop
inc
hlt
decl
shlb
mov
test
push
mov
ror
lock
adc
stos
loopne
ret
addr16
sahf
lods
push
filds
insl
pop
xor
mov
jl
jp
int
cmp
shll
and
dec
pop
xor
cmp
xor
std
lea
std
das
adc
push
jb
xchg
in
cmpsl
push
cmp
sbb
decl
jae
scas
aad
push
pop
jns
and
int3
lds
icebp
clc
and
sahf
mov
jge
ss
sub
push
jmp
rcr
sub
fdivrs
cli
repnz
xor
dec
int3
std
mov
mov
out
call
pop
inc
mov
push
push
mov
call
enter
push
xchg
aas
xor
mov
call
jmp
fistps
andb
ds
push
xchg
lret
inc
pop
adc
movsl
mov
cmp
in
in
in
fcoml
sbb
in
jl
jno
sti
dec
xchg
cmpsb
decl
roll
dec
data16
or
gs
mul
js
decl
dec
xchg
inc
fists
je
ja
loopne
lea
outsw
push
fwait
adcl
in
aaa
and
lods
add
daa
hlt
jge
fildl
aaa
jge
adc
jmp
jno
pop
sbb
rol
mov
les
cli
es
popa
hlt
lea
sub
daa
xor
or
cmc
ret
xchg
or
bound
cld
adc
ja
ds
jl
and
outsl
sbbb
pop
jne
cmp
mov
mov
pushl
dec
adc
jp
fbstp
pop
and
ljmp
inc
lcall
pusha
test
hlt
sbb
mov
pop
sbb
mov
jno
cmp
incl
push
cld
movsl
pop
pop
je
xchg
call
xor
loope
outsl
inc
jmp
clc
sbb
push
paddusb
push
nop
cld
lcall
jb
cmp
call
sbb
cltd
sbb
pushf
xchg
lret
insl
sar
decl
inc
ljmp
xchg
arpl
cmp
mov
mov
movsl
dec
mov
cmp
shll
xchg
cmp
rcr
filds
jecxz
lcall
dec
dec
stos
xchg
aad
stos
mov
fsubrl
insl
mov
test
decl
dec
rcr
inc
daa
push
pop
cmp
mov
lock
lcall
addr16
inc
jmp
jmp
inc
es
flds
std
xchg
ljmp
arpl
push
xchg
fcomps
ds
xor
hlt
int
add
jg
or
jge
xor
cmpb
packssdw
lret
push
loope
jle
cmpsb
pop
leave
sbb
aas
cmc
adc
cmp
jg
mov
push
sub
xchg
pop
sahf
pop
adc
scas
pop
mov
push
push
sar
jmp
movsl
push
dec
lods
stos
ljmp
das
in
add
test
mov
inc
adc
rcrb
movsl
jns
fmuls
and
xchg
push
and
sti
inc
cmp
or
insl
inc
ss
aam
scas
mov
or
mov
mov
movsb
mov
out
mov
mov
inc
loope
xor
jg
incl
mov
inc
iret
lea
shl
and
loopne
call
push
ljmp
push
in
mov
push
cmpsl
data16
lods
push
xor
mov
or
cltd
xor
xchg
lods
mov
pop
mov
gs
insl
sbb
jmp
notb
fistpl
in
test
cld
jecxz
clc
loope
sub
int
call
cmpsb
jnp
mov
aas
sbb
mov
incl
sbb
sbb
out
imul
cwtl
push
outsl
lock
stos
sbb
mov
or
jmp
repnz
cltd
cmpsb
pop
fs
cld
out
fs
pop
rclb
adc
mov
add
repz
dec
adc
iret
cmp
sbb
incl
jg
jo
dec
sub
std
lock
arpl
mov
jge
sbb
sub
push
movsl
or
jb
ljmp
hlt
call
cltd
xchg
dec
je
test
jo
jnp
and
imul
int3
jecxz
insl
in
cwtl
cmp
add
mov
push
pop
and
in
pop
mov
push
mov
cltd
mov
and
xchg
int
mov
call
push
xchg
sti
out
or
cmp
outsl
shl
gs
adc
inc
repnz
mov
pop
mov
dec
test
or
jae
sahf
mov
mov
mov
stc
jno
jno
pop
rolb
out
loope
aas
jecxz
movb
mov
call
pop
out
mov
rolb
xchg
ret
adc
pop
cli
jg
les
push
loopne
sti
pop
jbe
mov
popa
mov
decl
xchg
ror
fwait
lods
arpl
xor
data16
xchg
mov
fbld
incl
sbb
or
dec
dec
mov
add
jl
jl
push
dec
jl
out
fimull
cld
rcll
mov
ret
repz
push
imul
pop
popa
ret
mul
mov
jg
cmp
adc
fsubp
stc
jg
push
out
scas
test
iret
fisubs
xchg
dec
stos
sub
mov
mov
mov
fldt
xchg
or
repz
popa
fldt
jmp
cltd
inc
sbb
setns
out
inc
imul
lret
mov
add
jmp
add
je
rcrb
in
out
clc
inc
mov
mov
incb
adc
adc
loop
pop
lods
sbb
cmp
mov
push
aas
or
test
sbb
jg
js
inc
mov
push
imul
jae
push
mov
jg
addr16
sbb
loope
ljmp
mov
push
cmp
dec
pop
lods
add
sub
mov
adc
dec
movsl
xorl
gs
ljmp
insl
stos
mov
cli
sti
sub
dec
mov
fdivrs
decl
addr16
push
jbe
outsl
popf
outsl
dec
inc
ds
mov
sub
filds
push
jmp
sbb
fnstsw
mov
call
adc
testb
cmc
jge
xlat
pusha
fstpt
push
push
push
push
push
jmp
sub
andl
mov
adc
call
xchg
inc
inc
pushf
aaa
mov
mov
push
adc
es
ljmp
negb
ds
xor
roll
mov
jmp
cmp
clc
mov
ret
pop
subb
les
jnp
jmp
push
orb
incl
and
sbb
popf
dec
aas
inc
movl
push
mov
ljmp
das
pop
in
mov
push
fnsave
in
push
mov
lcall
cmpsb
push
cmpsb
xor
push
dec
ss
xor
lock
cld
pop
test
mov
jne
dec
shl
push
inc
cld
call
fdivrl
xchg
jb
in
rorl
dec
push
insl
inc
sub
lcall
fcmovb
in
mov
or
data16
shrb
ficompl
outsl
icebp
call
dec
mov
mov
mov
dec
mov
sti
repz
loopne
stos
lods
cmpsl
gs
xchg
shlb
sub
push
scas
jg
push
jmp
push
adc
xor
cli
and
adc
pop
call
adc
fisubrl
lods
scas
xchg
stos
ljmp
loopne
mov
add
xchg
fmul
xor
movsl
lahf
mov
fistps
lret
or
mov
shll
in
add
mov
jg
cltd
push
sub
fsts
mov
sub
in
test
imul
xchg
sub
movsl
ss
out
pop
std
jne
in
fs
ret
hlt
popf
pusha
aas
fdivl
xlat
call
mov
adc
sub
aad
sbb
cmpb
cmp
xor
in
das
pop
xchg
cs
mov
mov
negb
loopne
sarl
jmp
push
pushl
mov
sbbl
pushf
aas
nop
ja
pushl
sub
les
out
adc
bound
push
sbb
aam
ret
pushf
push
jns
fildl
lret
sub
shrl
dec
cmp
pop
push
leave
xchg
das
fdivr
lcall
repnz
inc
mov
clc
adc
sbb
jnp
mov
lcall
or
jne
pop
push
scas
test
jae
xor
mov
xor
xorb
sub
cld
or
clc
push
cli
test
ss
fs
clc
ret
fildl
cmp
sbb
nop
test
dec
lcall
jmp
mov
dec
xor
int3
in
and
mov
mov
sbb
inc
and
fwait
ljmp
lcall
lods
insl
add
push
rcl
and
pusha
loop
testl
mov
das
xor
ljmp
lahf
cli
loopne
out
pop
xchg
out
hlt
or
in
shll
mov
fwait
mov
pop
jp
fnsave
stos
and
sarb
jg
call
pop
pop
clc
inc
pop
cmp
movsb
or
or
mov
rcrl
xor
lea
sbb
andl
dec
push
pop
lods
add
mov
ss
pop
ljmp
jae
jne
add
xlat
out
cmp
and
xlat
ljmp
cmp
jae
mov
ljmp
fldl
scas
jo
push
daa
dec
push
scas
xchg
lcall
gs
cmpsb
xor
mov
sbbl
addr16
pop
daa
stos
mov
sub
je
outsb
mov
mov
and
adc
sbb
and
loopne
std
call
inc
jecxz
icebp
mov
pop
mov
lods
ret
les
push
xchg
dec
xor
dec
outsl
call
movsl
adc
xor
pushf
out
aad
cli
cld
adc
fucom
sti
int3
mov
addr16
jmp
out
call
or
inc
sbb
jl
jl
xor
push
outsl
insl
out
pop
pop
pusha
jnp
and
fwait
add
jl
mov
push
sub
in
mov
push
and
pop
lds
mov
movsl
mov
mov
mov
cmp
sub
mov
nop
test
stc
jmp
inc
addr16
iret
mov
dec
xchg
and
das
jg
xor
push
ja
popf
mov
sbb
inc
xchg
inc
adc
and
lcall
cld
push
pop
std
and
into
sbb
pushf
insb
or
adc
push
stc
mov
cmp
test
mov
adc
cmc
outsl
icebp
jg
iret
lret
push
sub
mov
negb
inc
push
outsb
lods
mov
into
jmp
xchg
stos
rorb
mov
je
sahf
sbb
add
and
mov
mov
jmp
xor
stos
mov
js
fs
mov
mov
dec
xchg
pop
aas
jp
cltd
idiv
inc
sahf
pop
in
adc
jne
pop
bound
dec
pop
mov
lcall
cltd
mov
cli
roll
rcll
call
or
mov
loop
fists
pushl
cli
mov
loop
dec
adc
testb
out
fdivs
inc
xchg
sarb
sbb
mov
adc
clc
aaa
clc
dec
push
test
js
jns
movaps
mov
fwait
clc
stc
incl
call
and
add
jno
ljmp
jp
push
fcmove
mov
shr
lret
lock
xchg
out
sbb
pushl
clc
cs
aas
inc
add
rcrl
jmp
inc
lea
es
test
sub
std
mov
repnz
jle
push
movsb
cmp
add
incl
test
stc
inc
push
pop
dec
data16
mov
push
adc
test
cli
je
mov
or
data16
dec
sbb
mov
insb
mov
mov
or
jg
jmp
popf
sub
outsl
jo
add
xor
in
jecxz
jp
cmp
mov
cld
pop
dec
pop
jne
dec
dec
mov
mov
aad
sub
clc
mov
idiv
cmpsl
mov
stos
scas
int
inc
daa
aam
adc
push
fldt
test
fstl
xchg
jp
fptan
lds
lahf
jns
lods
add
sbb
or
hlt
push
xchg
sbb
cmc
insb
cwtl
mov
in
out
popf
push
aad
movsb
xchg
sbb
out
cmpsl
mov
lcall
pushl
sub
and
lods
pop
push
test
orl
das
out
and
loopne
and
rolb
cltd
mov
rclb
decl
pop
mov
push
scas
add
gs
leave
mov
dec
outsl
hlt
pushl
lcall
lods
lods
in
aaa
push
lds
jle
jecxz
mov
int3
fistps
leave
add
cmp
mov
js
movsl
mov
adcb
std
call
pop
ret
push
arpl
jg
das
lods
mov
mov
pop
pop
dec
xchg
pop
and
decl
insl
or
movsb
lods
xor
fmull
lahf
mov
jg
push
mov
insb
mov
lock
pop
pusha
out
mov
push
jl
aam
std
mov
inc
cs
aad
push
cmc
movsb
out
jbe
dec
gs
pop
jg
add
jg
sbbl
xchg
loopne
and
in
arpl
ljmp
adc
in
jns
xor
das
dec
mov
inc
push
int3
cmp
dec
mov
hlt
jl
in
jle
xor
out
push
jmp
pop
test
push
incl
inc
pop
push
movsl
sbb
mov
jno
lcall
jecxz
vpunpckhbw
mov
mov
dec
inc
ret
test
ljmp
xorl
cmp
out
movsl
add
clc
pop
call
jno
mov
push
ljmp
rcl
add
sbb
or
incl
jbe
mov
dec
push
push
call
clc
or
in
repz
inc
iret
aam
mov
pushl
sub
movsl
jbe
inc
popa
shlb
rcrl
push
jge
mov
cmpsb
push
js
rcll
mov
jmp
movsb
or
jg
add
push
jb
pushf
inc
pop
mov
das
std
mov
outsl
cmpsl
mov
pop
loopne
add
data16
je
cmc
jmp
sbb
xorb
cmc
loopne
or
addr16
jae
sub
cli
incl
dec
pop
fnsave
fcmovnbe
lret
sub
cmp
pusha
popf
push
sub
rcl
call
fimull
pop
lock
cltd
and
rorl
jg
and
pop
pop
sbb
mov
mov
lcall
lods
movhps
adc
test
cli
jg
jmp
jb
push
inc
lcall
mov
nop
in
icebp
call
pop
clc
pop
inc
pop
jno
inc
inc
test
ja
loope
dec
cwtl
aam
int
mov
xlat
or
scas
cmp
push
push
jmp
ret
and
andnps
das
lock
pushl
dec
adc
addr16
pop
xlat
rcrl
xor
test
sbb
lods
decb
cwtl
rcrl
les
in
and
cmc
aaa
movsl
dec
std
jl
or
push
push
dec
xchg
cmp
incl
pop
inc
mov
mov
jne
xor
test
loope
dec
cli
pop
and
clc
out
dec
fcoml
jae
push
shrl
dec
sbb
jne
mov
loopne
cmp
dec
mov
sub
mov
xchg
ljmp
icebp
decl
or
nop
lret
repnz
out
and
adc
mov
loopne
cli
sahf
push
cmp
or
adc
rorl
into
mov
cli
push
mov
dec
cltd
jae
push
pop
xor
decl
adc
jl
or
loop
or
lds
fs
incl
mov
jns
or
jmp
or
xor
lret
mov
mov
pop
sar
mov
jb
push
jle
rorb
mov
push
pop
add
push
jns
push
sahf
pop
test
das
push
cli
pop
das
inc
xchg
mov
daa
push
stos
push
xchg
ret
xchg
pop
loopne
push
lods
ss
push
mov
dec
mov
insb
pop
ja
sbb
mov
cmp
and
int3
lcall
shll
in
push
push
outsl
mov
or
pop
jg
outsl
mov
fnstsw
push
and
mov
fwait
test
mov
ret
loopne
shrb
cld
push
push
cmp
pop
mov
orl
dec
out
add
leave
addb
test
jg
mov
mov
sbb
lods
ljmp
xor
jmp
stc
je
cmp
leave
stos
xchg
dec
fwait
xchg
fcoml
xchg
mov
test
ds
cmp
in
fstps
lcall
add
dec
sub
lcall
call
mov
imul
push
arpl
shlb
incl
mov
jns
gs
fisubrl
sti
call
push
mov
or
inc
cmp
xchg
adc
fwait
sbb
xchg
mov
lock
and
dec
shll
push
sar
call
pop
iret
pop
ss
pop
dec
cltd
add
outsl
fs
and
jnp
movsb
pop
mov
lret
mov
jmp
mov
incb
fisttpl
cmp
ret
or
inc
call
stos
inc
js
test
mov
mov
pop
inc
add
loop
adc
mov
lea
push
inc
sub
lock
sub
movsb
cmp
add
mov
fsubrs
cmp
iret
push
outsl
jno
in
pushl
out
sub
rcll
cmp
mov
in
sbb
sub
dec
ljmp
das
mov
push
enter
cmc
mov
sub
lret
mov
in
mov
rcl
decl
fnstcw
es
mov
push
out
dec
rcll
test
insb
ss
cmc
push
ret
les
es
and
mov
clc
out
inc
clc
jmp
pop
sub
adc
je
psubsw
inc
test
inc
ss
stos
fwait
out
mov
add
out
adc
mov
hlt
test
mov
pop
fstsw
in
xchg
sub
adc
jb
adc
mov
and
sub
sbbl
es
inc
insb
shl
loop
ss
sub
jns
push
mov
sub
sub
mov
xor
decl
decl
xchg
cli
fldcw
xchg
pop
dec
jmp
inc
cmp
and
popf
out
jg
and
cmp
jl
incl
jp
mov
mov
push
pusha
cmp
inc
dec
std
call
les
arpl
mov
in
call
pop
mov
lahf
mov
jmp
mov
fnstsw
jg
insl
fs
push
sub
mov
jmp
or
pop
jecxz
fadd
xor
cmp
dec
adc
mov
cmpsb
shl
sarl
mov
adc
mov
shl
mov
push
call
test
icebp
test
hlt
inc
cmp
in
or
pop
les
xor
cmpsl
test
shl
andb
outsl
ljmp
cld
call
daa
shrl
jl
clc
push
loope
jbe
add
or
rcl
into
test
ljmp
jmp
divl
bound
add
out
out
push
aas
mov
clc
pushl
push
push
shll
ja
or
mov
pop
cmp
ljmp
loop
ss
adc
mov
add
pop
lock
sub
sbb
mov
mov
jl
cld
fcomi
popf
push
out
not
mov
sar
adc
add
or
in
pushl
stos
cmp
test
jbe
stos
aam
loope
dec
add
hlt
shll
hlt
cmp
xchg
sbb
fcomps
loopne
call
sbb
imul
mov
mov
call
sub
adc
adc
jno
lock
jb
or
shrl
fistpll
cmp
pop
ljmp
jle
icebp
cmp
es
out
popa
mov
ljmp
not
cmp
adc
and
adc
jmp
mov
add
fstps
es
aaa
xchg
mov
and
pop
aaa
jg
movsl
std
and
fnsave
lea
mov
cwtl
vmovd
outsb
xchg
push
jne
cs
xorb
mov
mov
lods
mov
decl
sub
fistpl
shll
movsl
popf
dec
vcvtsd2si
stos
lea
dec
mov
jp
mov
sbb
outsl
insl
mov
mov
adc
fcomp
pop
std
ljmp
cmpxchg
pop
fildl
rcrl
test
sbb
cwtl
popf
sbb
nop
dec
push
xor
and
lods
scas
in
inc
inc
xchg
shlb
cmp
mov
cli
lcall
push
in
jb
decl
add
sub
daa
enter
inc
arpl
sbb
or
stos
xchg
mov
adc
sub
test
out
dec
pop
mov
pop
push
fisubrl
pop
outsl
fwait
ja
inc
jp
fisubrs
imul
inc
cmp
pop
shlb
vpcmpeqd
decl
std
movsl
in
fidivrl
mov
into
mov
imul
mov
xor
jl,pt
repz
fstps
cltd
add
xor
fstpt
sub
inc
aas
jb
leave
cli
mov
loopne
decb
adc
stc
jle
and
xchg
mov
aaa
push
sarl
jb
fisttpll
sbb
xchg
mov
ljmp
les
and
lcall
or
inc
in
cmpsb
mov
and
pop
push
loopne
fcos
jg
out
test
push
jecxz
xchg
pusha
push
xlat
push
pushl
jg
enter
aam
aaa
pop
clc
ret
adcb
xchg
push
adc
xchg
insl
push
or
loop
incl
shlb
adc
and
lcall
mov
nop
les
xor
dec
aam
add
cli
mov
jl
inc
das
fwait
cs
mov
adc
push
pushl
cli
mov
mov
gs
lret
jns
lds
roll
pop
sub
in
sub
mov
das
icebp
jmp
xchg
pop
xor
in
jle
pusha
push
lcall
es
inc
lock
jl
mov
inc
jmp
mov
loope
push
xor
imul
pusha
jo
push
loope
enter
xor
mov
imul
add
inc
jb
and
cmp
cmc
cmp
push
out
add
outsl
mov
mov
repnz
pop
push
test
and
fistps
in
add
out
shr
cld
lods
adc
arpl
fcmovnbe
clc
lcall
rclb
cmpsb
pop
fistpl
lods
sti
popa
bound
lods
dec
xorb
mov
push
add
pop
mov
jecxz
pushl
xor
popf
enter
xor
mov
in
in
add
outsl
hlt
mov
lcall
jb
popa
lock
call
ljmp
and
inc
sti
sbb
inc
lcall
mov
push
lret
int
push
stos
mov
js
dec
dec
jecxz
dec
mov
inc
inc
pop
and
pop
mov
test
shrb
jge
pusha
stos
pavgb
jg
ljmp
sbb
inc
push
rolb
in
jbe
std
sbb
mov
call
mov
xchg
lret
xchg
lds
movsb
fdiv
dec
mov
push
movsl
xchg
mov
inc
dec
call
sub
enter
pop
or
addb
push
and
pushl
fst
jae
iret
shr
addb
sti
inc
hlt
cwtl
add
adcl
ljmp
in
adc
movsb
hlt
jb
cmp
dec
repz
xlat
jecxz
aas
sbb
inc
push
fsubl
dec
or
sbb
cmp
mov
and
rolb
xor
dec
scas
es
push
mov
xchg
enter
push
ljmp
adc
jle
adc
dec
xchg
movsb
lods
les
pushl
ds
mov
push
dec
and
cmpsb
sbb
bound
repnz
pushf
push
xchg
dec
or
dec
insb
std
mov
std
ja
jae
jmp
jae
pop
in
sahf
std
decl
test
sub
mov
lfs
mov
arpl
mov
std
das
mov
insb
cmpsl
adc
repz
icebp
or
mov
mov
das
cwtl
sub
insl
aad
out
inc
hlt
and
jmp
jmp
jg
lcall
loop
cmp
mov
pop
ljmp
xor
xor
inc
out
mov
xor
stos
mov
femms
xor
fsubrs
cmp
insl
jmp
bnd
stc
insb
hlt
dec
sbb
push
xchg
and
clc
and
sub
mov
jne
push
aaa
mov
sub
testl
test
decl
adc
adc
mov
mov
cmp
test
inc
cld
fbstp
lea
pop
fistpl
inc
enter
das
cmc
lds
adc
pop
fnstcw
movsl
data16
ficoms
test
mov
sbb
sub
cmp
cmp
daa
dec
icebp
popf
das
and
mov
mov
ss
cmp
gs
mov
pop
push
mov
pop
loopne
outsl
and
xor
push
cwtl
imul
notl
hlt
dec
in
xchg
call
in
les
lcall
call
test
sub
data16
daa
push
push
enter
outsl
stos
sbb
call
ret
push
and
sbbl
andl
aad
sbb
jle
lretw
sub
cmc
jb
add
mov
pop
inc
sbb
lods
in
jge
inc
dec
insl
fs
inc
add
bound
or
in
loop
xor
pushf
outsb
dec
mov
cmp
test
fisttpll
jmp
mov
cmp
pop
pop
aas
enter
jmp
xchg
test
and
out
outsl
test
inc
xchg
arpl
loope
cmpl
pop
dec
jb
add
adc
add
les
js
rcl
jmp
push
sbb
aaa
mov
pushl
cli
incl
or
insb
jg
test
in
inc
pusha
scas
mov
or
inc
jl
lds
pop
sub
decl
pop
fldl
rcr
push
add
in
jne
jne
in
out
pop
jbe
xchg
dec
out
mov
adc
loopne
gs
inc
and
mov
popa
mov
dec
sub
imul
std
ljmp
icebp
jo
mov
add
sbb
inc
cmc
fildl
cs
push
xor
ljmp
cmc
jmp
sub
movl
push
aas
lret
dec
mov
ret
scas
pop
cwtl
lock
fidivl
push
push
sbb
or
jns
xor
mov
inc
jecxz
lods
mov
mov
ret
sub
and
out
dec
lret
or
adc
fists
or
icebp
lret
pop
dec
mov
add
adc
or
inc
decl
fwait
pop
add
dec
jg
lods
je
shll
shr
fildll
lcall
cld
jbe
sahf
and
popaw
ret
outsb
add
icebp
movl
repnz
sbb
cwtl
sbb
in
lock
pop
clc
cmp
call
jae
bound
sbb
lock
push
sub
daa
sarl
push
mov
mov
fiadds
mov
or
xor
jecxz
cmpsl
mov
adc
jmp
fidivrl
loope
dec
decl
dec
inc
sbb
ffreep
ss
xchg
jl
data16
fstpl
jmp
push
add
fisubrl
jp
dec
pop
outsl
ss
sub
or
inc
loope
in
pop
mov
clc
mov
push
gs
lds
insb
out
ficoml
mov
push
das
add
daa
aaa
std
inc
mov
and
cmp
inc
sti
sub
in
cld
fcomi
xchg
pop
adc
movhps
ss
jg
cmp
fisttpl
addr16
cmp
jnp
cld
cmpl
sbbl
decl
push
inc
scas
enter
push
pmuludq
cmp
jmp
add
xor
testl
sub
jns
mov
and
gs
mov
pop
test
outsb
je
nop
ja
repnz
dec
sub
loope
popa
mov
mov
and
mov
aad
add
xchg
jne
outsl
mov
lock
xchg
mov
add
or
hlt
push
ja
cmp
xchg
movsl
jg
inc
stos
test
in
cmp
mov
test
loopne
dec
adc
sti
lret
rcr
pop
daa
inc
add
and
or
mov
pop
call
in
rcrl
push
jecxz
mov
push
gs
ljmp
ja
sbb
xchg
xorb
test
incl
jns
shlb
jb
adc
inc
pop
jb
mov
loopne
arpl
and
rcll
add
adc
fisttps
aas
cmp
ret
dec
and
iret
inc
outsl
jg
jo
lahf
rcr
push
aas
test
rcl
incl
sbb
mov
mov
mov
adc
mov
das
hlt
shlb
out
mov
mov
xchg
mov
sbb
jg
mov
jge
jecxz
mov
aas
mov
imul
lcall
push
clc
loopne
pop
fcoml
outsl
lock
jg
inc
cld
inc
inc
repz
imul
push
jecxz
mov
mov
int
adc
xchg
add
sub
hlt
call
icebp
pop
or
movb
aas
dec
es
pusha
dec
fs
mov
nop
data16
pop
loopne
fistpll
insl
cmc
mov
addr16
call
pop
test
pop
sarl
sbb
push
xor
xchg
xor
subl
mov
lahf
push
aaa
dec
xor
push
mov
outsl
fmuls
mov
push
cmpsl
icebp
push
cmp
lock
out
pop
xchg
pop
mov
dec
xchg
mov
decl
cld
lock
xor
mov
inc
je
movsl
mov
decl
movsb
push
in
mov
sbb
pop
xlat
jmp
push
dec
fs
mov
incl
mov
iret
jbe
minps
mov
or
clc
dec
call
mov
lret
jnp
add
cmc
add
xchg
mov
addb
pop
or
loop
stos
mov
xchg
scas
jl
push
jne
fs
out
pop
pushl
mov
movsb
dec
int
fcmovb
hlt
jne
push
insb
addr16
sbb
xor
outsl
cld
mov
ret
fwait
jne
and
or
scas
mov
mov
push
test
data16
sbb
sub
mov
mov
fildll
jmp
jbe
insl
jge
xchg
jg
pop
or
mov
or
xchg
jae
sar
incl
jmp
in
inc
into
mov
xchg
mov
loop
add
mov
jecxz
lcall
outsb
rorb
je
repnz
in
pushl
mov
jg
cli
nop
outsl
xchg
sub
fildll
push
scas
ret
jg
ljmp
mov
loopne
loope
mov
mov
push
hlt
pop
fldenv
adc
scas
mov
sub
and
pop
test
sub
and
outsl
hlt
lods
sti
push
pop
inc
ds
xor
cli
and
popl
or
inc
mov
and
movsb
stos
lds
adc
xchg
stos
mov
daa
int3
xor
call
jns
lret
inc
cmp
cmc
push
testb
jbe
dec
data16
sub
cmc
ds
das
icebp
jno
mov
add
es
dec
sub
test
decl
ret
gs
imul
gs
mov
insb
xor
jae
sahf
push
xor
ljmp
mov
icebp
xchg
pusha
and
dec
stc
sti
fstpt
pop
jb
fdivrl
xchg
das
icebp
pushl
add
mov
add
out
repz
jmp
push
and
test
mov
notb
ret
add
xchg
mov
icebp
jg
decl
jg
pop
sbb
lret
push
loopne
jo
fwait
pushf
clc
ja
pop
push
and
dec
mov
out
scas
dec
mov
sbb
jns
jg
std
js
sub
outsl
dec
push
out
movsb
push
jp
test
cli
or
ljmp
hlt
nop
pop
ss
inc
sub
clc
jno
cmpsb
out
int3
or
call
ljmp
std
jmp
and
std
mov
mov
lds
rol
adc
jmp
sbb
scas
imul
insl
jno
das
mov
mov
jb
pushf
mov
pop
cli
in
sbb
loopne
fsub
dec
push
xchg
or
addb
jge
mov
ljmp
sbb
lods
push
push
testl
cmp
pop
mov
mov
pop
dec
cmc
sub
dec
and
cmc
xor
test
mov
push
jge
jg
add
rcr
dec
lods
jle
insb
mov
pushl
push
iretw
sti
lock
out
dec
sbb
lcall
and
cmp
outsl
jg
pop
mov
mov
in
hlt
imul
mov
call
loope
imul
sub
outsb
mov
pushf
sti
cltd
test
xchg
stos
stos
lock
cs
mov
sbb
pop
and
or
lcall
shl
jns
cmc
adc
mov
mov
sub
xor
push
mov
fcmovne
hlt
dec
ret
mov
jmp
addb
fnstsw
jnp
clc
and
stc
inc
sub
push
outsb
aad
fwait
in
test
dec
lcall
jmp
push
jle
leave
mov
jne
movsl
cmpsb
rol
add
jg
incl
idiv
add
lock
testl
loopne
and
inc
mov
stos
jl
add
adc
jmp
or
add
cmp
mov
lret
inc
mov
mov
js
jmp
lcall
adc
sbb
sbbb
sbb
outsl
lock
or
xchg
mov
inc
add
fsubl
jl
test
sbb
incl
jmp
in
pop
push
or
mov
add
jg
jg
adc
and
jne
dec
or
cmp
adc
loope
sub
push
fnstsw
out
mov
mov
das
std
push
jo
xor
sarl
xor
outsl
push
jecxz
stc
ficomps
xor
cmp
pop
mov
clc
jmp
movsb
je
mov
mov
add
lret
in
std
nop
push
inc
leave
inc
lret
jg
ret
clc
sbb
xchg
or
sub
add
insb
mov
out
sbb
xchg
push
mov
inc
mov
jae
and
rcrl
mov
movsb
xor
les
or
lods
sbb
lcall
arpl
mov
cmp
dec
pop
mov
out
mov
inc
xor
ljmp
fiadds
out
push
pushl
jo
xor
mov
roll
cld
inc
push
pop
loopne
ljmp
fadds
orl
xchg
adc
add
xor
mov
stos
aas
daa
push
adc
leave
ds
mov
push
fcomi
xlat
clc
push
and
push
jg
repnz
adcb
push
push
or
adc
arpl
into
clc
jl
lock
push
outsl
lock
cmc
test
jl
pop
jnp
pusha
pop
push
dec
xchg
andl
pusha
popf
mov
jl
stc
cmc
jmp
repnz
in
insl
jp
jg
mov
cmp
aam
lahf
pop
sub
lock
testl
mov
or
jp
cmc
xchg
and
loop
mov
mov
les
jae
js
lods
mov
loopne
cli
lcall
call
lea
mov
push
pop
pushl
jnp
xchg
scas
mov
call
lods
lret
mov
movsb
pop
mov
decl
aad
aas
mov
mov
cmpsl
mov
jge
repnz
sub
pop
clc
ljmp
sub
xlat
pop
inc
pop
sbb
and
mov
aaa
clc
call
jl
mov
in
inc
mov
std
in
loopne
outsl
mov
jg
and
orb
mov
xor
dec
pop
mov
push
aaa
clc
inc
fbld
shlb
or
add
pop
sbb
xchg
sub
das
pop
inc
and
mov
push
jb
inc
and
xchg
mov
xchg
fbld
pop
dec
sub
divb
push
mov
xor
push
sub
mov
sarl
lahf
adc
lcall
inc
lcall
test
std
dec
mov
call
aam
clc
mov
fcompl
sbb
loope
xchg
test
inc
in
lods
lahf
mov
es
ret
ljmp
dec
das
push
mov
push
out
push
inc
pop
pop
mov
lea
mov
aad
xchg
faddl
inc
lahf
mov
mov
orb
dec
xchg
movhps
dec
pop
fcomps
loopnew
mov
fdivl
dec
lcall
incl
cmp
adc
cmp
xchg
repz
fwait
nop
inc
pop
sar
outsl
ljmp
imul
insl
cmp
dec
adc
mov
movl
mov
lods
mov
enter
cld
jg
stc
mov
dec
aam
and
cld
in
sahf
mov
pop
jl
jmp
ljmp
xchg
test
mov
shll
or
pop
push
adcl
mov
lock
xchg
mov
and
push
popf
inc
adc
dec
fsubrl
lods
js
mov
mulb
xchg
mov
ljmp
or
pop
addr16
cmc
mov
mov
addl
mov
outsb
call
cmovae
xchg
outsl
mov
pop
push
mov
cmp
dec
inc
add
test
jno
push
daa
push
push
adc
adc
cs
fst
fucomp
xchg
mov
xchg
in
test
aad
aas
jl
imul
cmp
ljmp
fsts
cmpsb
in
cltd
cmpsl
ljmp
fsts
add
aaa
sub
ljmp
mov
and
dec
popl
fistps
ret
and
imul
imul
push
sub
mov
js
in
xor
aas
inc
mov
je
outsl
push
cwtl
push
lcall
call
pop
inc
jp
daa
fdivrs
jns
mov
xchg
dec
xor
xchg
inc
icebp
jl
out
das
cmc
jg
lds
loopne
adc
jge
lds
das
cwtl
outsl
fldl
pushl
fimuls
test
xlat
add
repnz
inc
pop
pop
jg
pushl
movsl
addr16
mov
mov
ret
or
inc
pop
jns
jmp
lcall
pop
popa
adc
pop
data16
ja
sbb
adc
mov
call
sbb
jl
test
pusha
push
cmpsl
jg
clc
outsl
into
mov
lcall
sti
or
int
fiaddl
lcall
mov
call
cmpsb
jae
aad
pop
mov
out
repz
push
push
in
mov
mov
push
inc
jmp
icebp
fsub
std
sbb
cmc
cmp
xchg
std
mov
inc
mov
xchg
xor
mov
inc
add
in
cli
ljmp
inc
negb
lret
repz
popa
data16
sub
aaa
pop
sbb
scas
mov
lret
gs
loope
mov
inc
mov
out
scas
inc
mov
fistpll
cmp
mov
cmp
mov
popa
xor
pop
or
adc
and
leave
jne
push
mov
or
cld
decl
mov
cltd
das
mov
cmpsl
testb
mov
or
xchg
cmovb
dec
je
ljmp
xchg
ret
sbb
test
not
inc
dec
adc
in
jg
dec
cld
lcall
and
in
negb
jge
cld
xor
jg
jmp
push
notl
pop
sub
push
fsubl
add
enter
out
or
mov
roll
pop
mov
sbb
inc
mov
push
mov
mov
movsb
cld
jmp
or
pop
dec
das
or
test
mov
fnstcw
jb
adc
cmp
nop
inc
inc
loopne
insb
call
outsb
mov
fcmovu
leave
fisubrs
shll
adc
push
fdivs
call
xchg
and
jge
and
test
sub
je
cld
daa
test
outsl
cmp
or
pop
push
pop
in
call
lcall
dec
je
fidivs
jge
ret
std
inc
out
aas
fs
lahf
ret
pop
lock
jmp
aas
das
dec
sub
loop
enter
or
cmp
ja
ds
adc
cmp
subl
xor
fcmovbe
enter
test
pop
outsb
dec
dec
aas
xchg
jp
lock
imull
pop
push
outsl
lods
dec
pusha
add
andps
xor
xchg
stos
dec
add
mov
push
lea
push
mov
scas
paddsb
push
pop
ret
or
lock
ljmp
jmp
into
xor
ljmp
jg
add
shrb
insl
repnz
iret
aaa
jle
fstpt
loop
xchg
stos
lods
rol
dec
push
add
pop
sbb
fwait
ja
insl
or
add
bsr
sti
ret
or
xor
jg
adc
xor
cltd
push
movl
mov
xor
cli
jg
mov
ds
sub
out
push
xchg
and
test
jecxz
mov
into
cli
ljmp
jne
push
mov
adc
pop
loope
push
cltd
add
push
int
das
cld
pop
ja
dec
mov
lods
sarb
cmp
sbb
pop
and
pop
fucomp
filds
mov
jbe
jp
outsl
lock
call
xor
bound
xchg
lret
xchg
in
scas
jp
loop
lret
test
mov
pop
and
cs
jl
cmp
scas
jnp
adc
gs
ds
jl
cmpsl
adc
dec
sbb
daa
clc
pop
mov
inc
mov
ljmp
push
jle
lea
cmp
add
adc
add
incl
mov
pop
and
inc
sbbb
xchg
jmp
in
jg
inc
or
cmp
xor
sub
jno
cmp
xor
pop
into
repnz
incl
cmc
or
fmul
pushf
xchg
insl
fwait
wrmsr
dec
popa
arpl
add
ljmp
pushl
mov
mov
jle
decl
in
sub
adc
fisttpl
jg
das
xchg
call
mov
mov
daa
stc
cs
jo
cld
xchg
fcompl
xor
jl
pop
cld
lcall
push
pop
ljmp
sbb
push
mov
icebp
push
jmp
into
and
sbb
rcr
mov
mov
lds
mov
adc
xchg
lcall
jge
add
cmc
cmp
xlat
and
movsb
xor
cmp
aaa
clc
or
lds
xor
lret
fldt
cmpsb
push
decl
cltd
aad
adc
arpl
adc
jae
movsb
subb
xlat
ljmp
jmp
inc
repz
cmp
cmp
sub
int3
jmp
lcall
and
int
out
popf
mov
test
std
adc
pop
scas
lea
xchg
cmp
xorl
subl
jne
mov
add
cmpsb
cwtl
jb
clc
adc
in
jle
inc
push
mov
std
inc
and
addl
add
mov
and
mov
pop
ret
mov
and
std
hlt
push
dec
subl
shl
cmc
lcall
nop
xor
sub
mov
mov
ljmp
jmp
push
mov
sti
mov
pop
sub
and
in
decl
xor
ljmp
cmpsl
movsl
push
push
repz
subb
pop
mov
ret
mov
fnstenv
cld
cmpsl
push
pop
je
test
lea
mov
loop
mov
fistps
jno
decl
push
lea
mov
mov
incl
mov
mov
mov
jle
push
pop
pushl
mov
pushf
mov
adc
fsts
inc
icebp
inc
or
mov
mov
sub
je
repnz
pop
imulb
ds
hlt
leave
jg
decl
push
dec
xor
jnp
xchg
dec
cmc
inc
insl
fcmovne
jp
enter
add
loop
fildll
sbb
adc
loopne
out
push
pushl
fistl
fcomps
mov
mov
lods
xorb
fcompl
sbb
ljmp
setne
imul
jns
jge
mov
jb
mov
dec
fs
add
movsb
sbb
xchg
jg
cmc
cwtl
cs
cmp
shr
and
push
adc
jecxz
push
sub
jo
mov
or
jbe
lea
adc
mov
dec
sub
fsubrs
push
push
jmp
jns
rorb
mov
inc
sub
mov
decl
lret
dec
pushf
dec
jns
in
sub
movsb
and
pusha
mov
popa
and
std
pop
cli
sbb
cmpsl
dec
sbb
stc
out
leave
jle
addl
mov
xor
push
scas
cld
sub
daa
push
xchg
jl
push
adc
mov
add
or
sub
ljmp
hlt
xchg
call
lahf
sar
pop
cmp
jno
jl
jg
fists
nop
cmpsb
ret
das
lret
xchg
int
fbstp
push
lea
stos
jo
addr16
pop
loope
xor
push
inc
incl
dec
push
push
lods
in
test
adc
add
and
pop
stos
je
push
sub
add
aaa
push
xchg
stos
push
dec
fwait
jg
decl
push
jp
jecxz
push
jne
test
ljmp
inc
pop
je
push
jp
call
adc
clc
sbb
lods
pop
mov
mov
jge
mov
aam
arpl
shrl
cld
lea
roll
xchg
jbe
jbe
out
cs
stos
lahf
int
jmp
xor
lea
dec
cwtl
mov
sbb
rorl
jg
jmp
movsl
fiadds
sbb
movsl
xor
in
adcl
outsl
jnp
jg
cltd
sub
push
jnp
ret
outsl
shrl
mov
or
pop
das
cmpsl
in
add
lods
fs
cmp
mov
mov
mov
fsubs
push
cmpsl
cmc
call
cmpsl
push
xor
xlat
ljmp
push
adc
daa
add
sub
cmp
adcb
mov
mov
repz
inc
ja
into
push
outsl
fs
insb
loopne
inc
sub
pop
ljmp
jne
jns
movsl
inc
lea
and
lcall
sub
push
test
inc
movsl
add
mov
mov
bound
cs
push
cmp
dec
dec
clc
outsl
hlt
fistpl
popf
xchg
adc
in
dec
add
jge
pop
orl
mov
mov
shrb
stos
insb
jne
cmpsb
inc
and
sub
sbb
test
sti
push
cmp
jecxz
jg
adc
mov
das
mov
mov
fcomi
testb
insb
sub
test
lcall
mov
mov
cmpsb
push
inc
adc
in
pop
pop
clc
dec
std
cmp
out
mov
xor
mov
icebp
mov
mov
xor
mov
xor
lcall
mov
jge
sbb
mov
cmp
int3
xor
xchg
rcrb
inc
dec
ljmp
mov
in
cltd
in
mov
push
sarl
sbb
divl
sub
jg
mov
xchg
gs
push
xchg
in
mov
lcall
cli
push
insl
push
add
andb
shl
adc
push
jo
adc
popa
inc
inc
aam
movsb
lods
xchg
gs
dec
lcall
decl
iret
mov
lret
jle
pop
pop
pop
sub
xchg
sub
jne
mov
pop
mov
push
push
outsl
cwtl
sub
push
push
adc
mov
mov
cld
pushl
out
popf
das
add
and
repnz
or
jmp
jns
out
xor
ljmp
rol
scas
or
and
orb
pop
outsb
pop
lcall
add
fsubl
test
lret
sbb
fbld
sbb
pop
fmuls
fwait
lods
sahf
es
lret
call
imul
cmp
into
in
loop
sub
mov
insb
mov
or
inc
fsubrs
push
aad
dec
call
scas
enter
or
cmpb
jge
shlb
sbb
adc
mov
jno
setg
outsb
xchg
std
pop
push
mov
push
dec
cmpsl
popf
test
das
jo
and
jecxz
sar
dec
ja
in
xor
xor
iret
cmpsl
test
aaa
mov
dec
pop
das
mov
cld
mov
adc
insl
mov
mov
test
and
xchg
pop
int3
xchg
dec
jecxz
add
fistpl
ljmp
mov
xchg
push
jmp
or
nop
repnz
jl
das
push
and
fcoms
ja
mov
inc
rorb
push
mov
add
dec
cwtl
stos
call
inc
xchg
dec
xchg
push
cld
lcall
shlb
sub
mov
push
das
daa
mov
and
cmp
push
sbb
outsl
hlt
das
rclb
popa
push
push
and
pop
dec
add
incl
or
sub
push
mov
jae
adc
pop
lcall
inc
stos
or
imul
lcall
jle
adc
rolb
or
xchg
sahf
cmp
mov
das
pop
mov
ljmp
sub
mov
call
or
sahf
or
in
cmp
bnd
sti
decl
insb
es
in
dec
mov
or
xor
test
cmc
das
jo
fxch
mov
repz
mov
nop
enter
ficompl
sbb
sbb
cmp
inc
aaa
pop
shll
cli
mov
bound
cltd
sub
repnz
fdivrl
addr16
jo
dec
fs
jae
push
into
daa
mov
fwait
mov
iret
rolb
push
fsts
mov
stc
jp
jg
clc
fwait
mov
into
insl
lea
mov
sbb
sbb
call
cli
inc
push
push
or
pop
pop
test
addl
rorl
testb
jno
inc
aas
inc
pop
pop
daa
fs
pop
sub
mov
test
jnp
sbb
out
cmp
add
xchg
lcall
popa
outsl
les
outsb
mov
sbb
pop
jbe
fcmovnbe
in
mov
outsl
inc
mov
lcall
inc
pop
fnsave
sbb
cli
pop
jnp
pop
or
repz
push
outsl
mov
leave
mov
xchg
fldt
dec
rol
jl
sbb
out
push
pop
pop
mov
aaa
jle
sbbl
aad
inc
xor
mov
aam
jecxz
dec
mov
popf
sub
jl
mov
adc
test
dec
sar
cmpsl
jb
and
decl
rorb
push
fdivl
loopne
sbb
jne
adc
inc
in
add
push
and
test
inc
push
call
push
fildl
lock
ja
push
jle
lock
xchg
out
lahf
jg
into
mov
jmp
aas
repz
push
push
push
and
inc
ficompl
jae
aad
fsub
mov
rdtsc
test
ror
jle
in
pushl
out
shr
cmc
out
xchg
xorb
or
push
xor
sub
fcompl
dec
pushl
jp
xchg
stos
cmpsl
lock
loope
in
mov
sarb
lds
or
icebp
lcall
xchg
jmp
sbb
jbe
fsubr
dec
pop
pop
fwait
rol
in
jnp
outsl
hlt
jmp
xchg
std
xchg
clc
packsswb
cld
int
fwait
or
fucomip
or
xchg
inc
in
hlt
fstl
clc
push
cltd
cmp
mov
and
out
bound
and
xchg
scas
or
das
adc
inc
into
imul
push
adc
insb
lret
cwtl
jns
mov
pop
insl
mov
cs
cmp
inc
xor
mov
scas
call
gs
mov
js
xchg
xor
icebp
or
loop
sahf
gs
in
inc
pop
ljmp
sti
jecxz
xchg
sti
sarb
push
jl
mov
jns
decl
lods
inc
and
mov
and
inc
insl
jecxz
lea
xchg
scas
cs
mov
mov
pop
in
sub
inc
add
mov
icebp
lcall
push
imul
inc
roll
push
decl
insb
or
jae
fnstsw
cmp
decl
mov
dec
dec
sahf
ja
sbb
stos
std
lcall
es
iret
push
add
std
xor
pushf
pop
mov
cmpsl
ljmp
cmc
pop
hlt
outsl
pop
int3
mov
leave
in
add
jecxz
incl
pushl
cmpsb
pop
and
push
outsl
fs
pop
ljmp
mov
add
aad
push
mov
sub
xor
and
xor
or
inc
das
hlt
cwtl
cld
dec
fs
and
ds
add
es
mov
in
rcrl
rcl
sub
or
lret
clc
cmp
inc
or
stos
jbe
pop
xchg
fadds
add
mov
adc
mov
movsb
aad
or
sar
je
cmc
adc
push
insl
aad
enter
sbb
mov
xchg
sub
lock
or
addr16
push
mov
outsl
jo
inc
outsl
addl
stc
xlat
test
sbb
stos
mov
jg
pcmpeqd
in
xchg
dec
aam
adc
dec
inc
jb
or
test
out
out
ljmp
lcall
daa
in
gs
pop
xor
lret
imul
rorl
mov
mov
das
pop
jne
jg
cltd
lcall
imul
cwtl
push
lret
sbb
mov
jg
pop
push
adc
fs
into
cmpsl
cmp
xor
das
cld
pop
outsb
and
xor
sbbb
mov
mov
into
jg
mov
into
sbb
pop
pop
or
mov
bound
sub
dec
push
movsl
loope
push
sub
sbb
lcall
or
mov
jmp
test
test
imul
mov
cmc
sbb
les
and
decl
fwait
out
rcr
or
fsubrp
pop
repnz
out
jnp
xor
adc
or
pop
call
jae
pushf
fs
sub
mov
out
jae
fwait
xchg
mov
adc
pushl
adc
pushf
jp
imul
popf
aaa
addb
sarb
orl
adc
decl
imul
pop
pop
adc
and
jmp
mov
sub
int3
sbb
push
and
cmp
mov
push
mov
ret
fwait
jno
mov
or
pop
imul
pop
fisubrs
mov
inc
in
mov
scas
xchg
loopne
sbb
aas
sbb
fucomip
ljmp
add
dec
cmp
adc
xchg
rol
dec
pop
jl
mov
aas
mov
adc
cwtl
mov
xchg
cmp
sbb
leave
andps
incl
sbb
inc
jle
outsl
inc
mov
cmp
fistl
imul
les
dec
add
fldenv
insl
test
and
cmpsb
ja
fidivl
cmp
mov
push
add
mov
mov
cs
in
fwait
cltd
cmpsl
idiv
adc
jmp
adc
inc
sub
ret
mov
fstpt
test
scas
lods
dec
or
test
dec
jmp
mov
lods
imul
mov
cmp
cs
jle
int
bound
mov
incl
cli
daa
out
xor
sbb
jmp
icebp
rcrl
lock
frstpm(287
dec
sub
repnz
enter
cli
pushl
or
movsl
out
out
inc
pop
jo
sbbb
int
and
push
push
sbb
decl
push
adc
sub
orb
push
icebp
dec
mov
out
aas
hlt
xchg
add
ljmp
jno
call
fdiv
push
lds
mov
or
rcll
inc
pushl
mov
mov
gs
add
scas
inc
sub
cmp
mov
mov
incl
push
xor
sbb
xor
dec
outsb
das
cmc
lret
jg
lods
in
pop
stc
popf
sub
movsl
test
fstl
cwtl
scas
aad
mov
adc
out
push
jg
pop
pop
push
fistps
or
ds
sbb
insb
mov
decl
nop
movlps
xor
rolb
dec
jne
movsl
jmp
adc
sub
std
outsl
cmc
lea
add
xor
pop
dec
js
cmc
decl
lods
push
or
push
mov
pop
push
mov
jnp
or
mov
xchg
cltd
iret
rcrl
pushf
push
gs
and
out
lods
insb
fistpll
or
lret
inc
clc
push
sbb
out
mov
ljmp
cltd
enter
xor
test
test
iret
or
std
mov
cmp
xchg
or
mov
adc
fwait
shll
mov
scas
loop
lcall
testb
std
add
ljmp
addl
mov
mov
mov
jl
incl
cmpsb
jae
leave
sbb
xchg
out
push
inc
pusha
das
lret
out
mov
pop
out
call
mov
adc
popl
inc
sub
add
push
jle
mov
lods
and
imul
push
iret
cli
outsl
cld
fists
cmp
xor
ds
xchg
add
in
jmp
fcmovnbe
and
fwait
mov
sbb
nop
aas
lock
dec
addr16
mov
das
je
mov
dec
inc
mov
test
cld
mov
in
jns
movl
clc
cmp
cmp
pushl
mov
int
push
add
xchg
mov
jg
test
jmp
pop
and
inc
jg
std
outsb
mov
dec
daa
adc
push
add
call
fwait
aas
push
aaa
imul
lds
mov
dec
std
fisttps
adc
push
scas
jnp
inc
movsb
jbe
xchg
gs
out
dec
int
or
test
and
cmp
xchg
cmpsl
mov
jmp
push
enter
cld
mov
sub
pop
jnp
shlb
jbe
dec
fimull
loopne
jecxz
fistpl
pop
stc
cli
scas
inc
aas
ljmp
mov
and
andnps
mov
cwtl
insl
adc
call
divb
lds
enter
cwtl
jno
fldcw
xchg
nop
or
push
nop
ljmp
push
xor
stos
dec
test
ret
pop
aad
popa
mov
xchg
push
mov
data16
or
jg
xor
and
loope
out
popa
iret
xchg
rcr
cmp
stos
ss
call
or
lds
out
sbb
dec
data16
aaa
stos
int
xor
inc
pop
push
std
fistpll
jne
mov
cmpb
cli
repnz
repz
outsl
cmc
outsl
ds
jp
xchg
xor
test
sbb
xchg
mov
xchg
into
mov
fsubrs
cmc
call
mov
dec
sbbb
aaa
pop
stos
leave
or
sub
jae
dec
mov
or
mov
outsb
outsl
out
inc
mov
add
out
incl
fnsave
cmp
test
xchg
mov
js
lods
xchg
mov
or
clc
push
xchg
cmp
lds
lds
lock
cli
pushl
das
outsl
and
mov
sub
add
xchg
decl
and
sbb
push
stos
xchg
out
out
inc
rol
dec
fucom
xor
shl
mov
cmc
sub
stc
lret
aas
push
lds
inc
arpl
lock
pop
sets
cli
jmp
rcr
in
inc
fldl
xchg
lcall
inc
lea
dec
lods
scas
mov
push
sbb
add
or
jg
faddl
xchg
loopne
sti
out
adc
cli
and
sub
add
pushf
test
sbb
xor
dec
call
call
pop
outsl
and
pop
int3
shrl
mov
pop
adc
cld
jmp
pop
add
sub
mov
sbb
std
ljmp
incl
jg
filds
dec
xor
cmp
cmp
mov
imul
mov
lea
mov
sub
inc
adc
pushl
xor
mov
mov
jecxz
test
sbb
inc
add
fwait
inc
inc
fildl
xor
movsb
and
outsb
or
pushl
je
cltd
dec
imul
cld
fsub
sbb
loopne
loopne
mov
add
add
inc
push
cltd
xor
mov
outsl
incl
es
cmc
xchg
and
int3
pop
lret
icebp
sbb
ljmp
pop
sbb
xchg
sub
cwtl
test
push
in
add
lahf
mov
cmp
stos
mov
lea
mov
push
loop
imul
ljmp
jge
lods
clc
loopne
clc
insl
jg
mov
mov
pushl
push
jge
cmpsl
test
pop
stos
mov
negb
xchg
dec
pusha
push
xchg
jl
cmp
out
or
mov
int
rolb
call
xor
xor
cmp
xchg
cltd
mov
pop
mov
aam
pushf
inc
sub
lea
clc
jmp
push
xchg
or
in
vmovdqu
outsl
loopne
pushl
sbb
mov
jl
fistpll
cmpb
outsb
es
sub
pushl
adc
xchg
mov
pop
mov
jbe
imul
loope
jne
fdivrp
in
add
jle
cli
stos
pop
mov
sbb
push
add
call
or
outsb
daa
sahf
cld
push
mov
test
call
test
ret
and
jg
popa
xlat
and
cmp
sbb
lea
std
jmp
in
dec
outsb
repnz
inc
cld
stc
lods
xchg
mov
push
mov
mov
inc
push
sbb
frstor
ljmp
pushl
mov
ljmp
or
out
in
rol
jmp
inc
pop
ljmp
push
je
hlt
mov
outsl
hlt
outsl
jl
or
mov
push
jg
push
sub
sti
ljmp
pushl
inc
jns
lock
insl
mov
jge
fdiv
mov
cs
cli
mov
jno
and
sbb
scas
inc
jmp
cli
call
sti
shl
sti
sbb
mov
aad
xlat
inc
pop
dec
jne
pushl
fwait
sbb
mov
mov
hlt
adc
cmpsl
jecxz,pt
ds
pushl
icebp
aam
mov
in
ret
popa
inc
shl
cmp
lcall
dec
scas
dec
test
inc
adc
outsb
push
flds
or
jp
push
clc
in
pushl
push
push
lret
cs
gs
xor
push
pop
xor
or
jecxz
icebp
or
addr16
jno
mov
mov
out
cmp
incl
cld
insb
test
cmp
pusha
mov
inc
push
sub
mov
filds
std
ficoms
ljmp
fcompl
pop
js
push
push
push
cmp
sahf
xchg
scas
and
push
loopne
cmp
mov
shll
xchg
insl
adc
xchg
aas
scas
cli
das
icebp
sbb
jecxz
dec
inc
xchg
mov
pop
xor
je
icebp
fisttps
sbb
or
test
in
lahf
dec
out
xor
mov
shl
ljmp
ss
lea
adc
pop
push
ljmp
shl
xchg
sub
pop
jg
fdivp
mov
and
and
jmp
fucomi
stc
repnz
popa
mov
jmp
push
mov
inc
jge
arpl
aaa
rorl
test
or
pop
test
sbb
pop
jnp
addr16
cld
mov
inc
mov
sub
test
sbb
inc
aaa
clc
pop
jg
cs
mov
push
inc
sarl
push
inc
decl
incl
cld
and
mov
inc
icebp
xchg
out
subl
pushf
out
loopne
incl
imul
lcall
cli
lcall
insb
fiadds
into
add
push
adc
jo
addr16
cmp
sti
rol
xor
sbb
cli
dec
xor
jmp
flds
rcll
push
jo
push
pop
lods
inc
jbe
push
sbb
cli
movsl
dec
ljmp
daa
xor
dec
ds
fsubs
add
pushf
dec
push
movsl
cmpsb
mov
negl
cld
decl
mov
adc
popa
jp
cwtl
jp
or
mov
call
test
push
add
adc
fisubl
mov
call
sub
es
pop
jno
jle
call
cmc
cwtl
leave
out
sub
inc
loop
adc
test
jnp
adc
mov
mov
ljmp
ret
and
fwait
jge
bnd
xchg
add
xchg
ret
ljmp
jns
adc
jb
das
sub
sub
fwait
jns
add
pop
das
out
mov
aad
shr
adc
sub
push
and
negl
push
std
call
push
push
sbb
and
push
xor
std
or
adc
ljmp
in
mov
adc
fldcw
mov
loopne
pcmpgtw
bound
lods
jle
mov
movsb
cmpsb
clc
icebp
ja
push
hlt
jbe
ljmp
lcall
rcr
aas
pop
insb
push
add
add
sbb
ja
enter
data16
sbb
mov
sub
enter
dec
cmpsl
adc
call
add
rorl
dec
sbb
fstp
mov
mov
xchg
in
jmp
cli
dec
in
or
pop
shlb
pop
fcomip
mull
decl
add
sub
fistpll
cmc
notb
cld
adc
pop
loop
pushl
and
cmpsb
pop
mov
negl
mov
rol
jnp
or
mov
xchg
inc
stc
dec
gs
mov
popf
jae
frstor
call
decl
ret
shll
mov
push
sbb
jb
aaa
jae
cmp
and
test
xchg
and
loope
lock
pop
mov
outsl
scas
shll
xchg
xor
cltd
jp
sti
mov
outsb
jp
pop
shll
jg
daa
sbb
xor
dec
sub
push
repnz
imulb
push
push
adc
xchg
jle
push
or
adc
movsl
jmp
out
adc
loope
dec
fstl
adc
jp
leave
loop
ljmp
xchg
adc
and
adc
in
dec
jg
mov
aaa
filds
xlat
sbb
fstpt
popf
push
fidivs
andb
ljmp
std
in
sub
pusha
test
inc
jecxz
stc
cmp
clc
int3
xor
sub
cli
lcall
incl
pop
lock
mov
scas
mov
gs
or
fcmovnbe
ret
repnz
repz
bound
testb
insl
adc
cmp
in
or
xor
ret
add
and
stos
cli
inc
mov
sub
loopne
ja
arpl
add
pushl
shlb
les
mov
mov
xor
test
mov
dec
sub
pop
shl
sbb
mov
mov
ljmp
fstpl
adc
adc
xor
push
pop
shrb
imul
cli
adc
fwait
popf
iret
adc
jecxz
fstps
pop
loope
out
dec
fsubp
add
mov
cmp
dec
mov
fdivrl
cwtl
adc
jnp
test
movsl
pop
jp
fdivrl
fidivl
aaa
push
lcall
fistl
inc
dec
inc
pusha
pop
movsl
mov
jb
jmp
add
adc
je
mov
loop
mov
insb
xchg
lods
popa
ljmp
cmc
jmp
push
cld
mov
mov
mov
enter
lds
adc
nop
dec
imul
mov
pop
xchg
fsubrs
dec
xor
jne
sbb
pop
dec
test
add
jge
mov
pop
jmp
stos
cwtl
add
add
add
sbb
fisubrs
sub
mov
cmc
popf
mov
dec
sub
sub
or
out
pusha
lahf
test
sbb
out
cmp
inc
or
sbb
xchg
push
sar
jg
cltd
xor
sbb
mov
jl
mov
loopne
into
or
test
mov
int
popa
dec
inc
push
aam
xchg
push
call
clc
hlt
push
pop
in
enter
push
imul
sub
sub
imul
in
mov
inc
dec
add
mov
scas
outsb
inc
or
pop
into
xchg
cmp
and
fcomi
or
adc
roll
dec
dec
cmp
cld
fistpll
mov
cltd
jns
shrb
popf
push
loop
mov
iret
xlat
mov
sbb
jo
jge
mov
xor
mov
ss
cwtl
paddb
pop
jo
fcmovnbe
ds
mov
ljmp
dec
jp
sbbb
pushf
enter
cmp
inc
fwait
mov
lret
xchg
inc
call
call
fdivs
bound
and
xor
mov
pushf
push
push
xor
push
ljmp
jg
jo
dec
push
mov
pusha
mov
pop
mov
pop
jnp
mov
mov
inc
or
jg
fdivrl
test
fidivrl
sub
xchg
enter
sub
jmp
incl
jmp
sar
mov
outsl
adc
adc
pushl
lods
icebp
add
and
cmp
faddl
adc
dec
dec
loop
pop
mov
repz
fwait
jle
movsb
repnz
cmp
adc
adc
imul
fildl
sbb
xlat
rcrb
pushl
mov
push
fcoms
add
mov
jge
dec
daa
and
out
ds
cld
outsb
std
jg
das
inc
cltd
test
add
mov
jmp
xchg
rclb
call
mov
bound
jns
outsl
shll
in
addr16
leave
pop
or
hlt
aaa
bound
inc
xor
or
cltd
dec
loopne
in
xchg
fbld
repnz
fisubrl
sub
popa
mov
fstpl
jg
fwait
inc
leave
aaa
jg
pop
xchg
scas
mov
std
push
out
jnp
data16
lcall
dec
xor
lods
and
rolb
or
cwtl
mov
sbb
cmp
pop
sbb
mov
sbbl
pop
call
push
into
ds
inc
das
cs
iret
in
dec
and
cmpsb
jo
mov
lcall
adc
xchg
scas
cmp
outsl
xor
dec
lcall
imul
adc
mov
lods
inc
fs
cmpsb
loopne
call
xor
sahf
xchg
fwait
std
adc
rorb
movsl
sbb
xor
fisubrl
in
test
dec
mov
je
loopne
loope
aaa
loop
fisttpll
jno
mov
mov
stc
xchg
dec
std
outsl
decl
js
ret
lds
repnz
test
add
jle
lcall
add
mov
or
popf
jle
jmp
in
inc
adc
std
jg
inc
pop
sti
insb
aas
lret
js
fisubl
jmp
lds
xchg
shrl
call
cltd
add
add
fildll
sub
test
leave
push
add
in
test
adc
push
jp
mov
iret
subb
loop
pushf
arpl
cli
inc
into
pop
xchg
push
call
ficompl
in
test
sub
fnclex
push
sbb
lea
aaa
xor
or
jne
push
lcall
dec
les
or
ficomps
cmp
xor
out
xor
aaa
clc
xchg
mov
sub
xchg
sbb
mov
cmp
add
std
aaa
dec
pop
jne
fisttpll
mov
adc
jle
imul
clc
sub
aam
mov
pushl
ja
lcall
movd
outsb
xchg
fbld
adc
mov
jg
nop
je
call
push
adc
pop
pop
into
jle
imul
daa
jae
inc
push
inc
shl
pop
adc
cmp
cmp
dec
mov
push
and
test
inc
mov
mov
adc
js
dec
in
ljmp
or
repz
push
sub
cmp
mov
xchg
and
jg
adc
int
mov
in
xor
push
sub
mov
inc
fwait
xchg
mov
popf
add
call
pushl
xor
and
or
pop
mov
lds
cli
inc
adc
sti
orl
lret
in
mov
scas
ljmp
jge
loope
bound
js
push
jno
aaa
jbe
cmc
push
int3
push
mov
addl
test
inc
loopne
fldpi
add
dec
aam
stos
inc
jp
inc
lcall
loopne
lahf
xchg
mov
lock
mov
push
or
mov
fidivl
lret
fdiv
icebp
ficompl
push
imul
icebp
jg
xor
jne
int3
ja
sub
push
and
lods
jp
enter
mov
sbb
add
fildl
xor
xchg
mov
mov
std
dec
mov
loope
push
adc
sbb
nop
jmp
imul
mov
mov
push
std
lods
pop
jge
mov
adc
lods
and
clc
adc
call
es
ss
mov
popf
loopne
sbb
xor
mov
sbb
iret
add
push
lret
sub
pop
lods
lcall
inc
pop
jbe
dec
rorb
inc
jae
mov
test
inc
lahf
pop
pop
jecxz
js
repnz
mov
mov
add
pop
movsl
jg
ljmp
imul
test
insb
mov
pop
and
loop
cmp
ret
shlb
xchg
xchg
sub
sar
pop
in
loopne
mov
enter
aam
and
loopne
dec
fisubrl
test
sub
pushf
xchg
pop
daa
inc
ljmp
pop
mov
popaw
fisubrl
mov
faddp
fidivrl
call
xor
sub
test
or
sahf
hlt
loopne
sbb
pmaddwd
dec
pop
out
and
push
or
mov
sbb
xor
mov
popf
push
mov
testb
pop
mov
cld
pop
mov
insb
cmp
cmpsl
xchg
call
test
cmc
mov
je
sahf
cmc
or
outsb
push
push
nop
cmp
inc
cmp
das
mov
fisubs
cmp
jge
aad
test
sbb
cmc
adc
sbb
mov
rcr
sbb
aam
pushl
xchg
aas
addl
cwtl
pop
inc
mov
xchg
fnstenv
movsl
mov
lock
pop
cmp
and
pop
sbbl
jecxz
into
push
in
add
pop
sbbl
lahf
loop
or
sbb
push
add
dec
adc
sbb
lods
std
and
shrl
stos
out
sub
popa
jns
dec
outsl
call
sti
les
jecxz
adc
fcoms
lds
and
push
push
in
repz
sbb
mov
or
das
ds
xor
ljmp
cld
testb
sub
and
cmpsl
out
push
call
repz
mov
mov
pushf
daa
popa
mov
enter
add
stc
lcall
jg
xchg
gs
pop
inc
daa
lret
cmp
xor
sbbb
cmc
dec
loopne
and
paddsb
mov
jp
xor
cmp
loop
hlt
ljmp
insb
add
mov
and
xor
jo
pop
rorl
xor
lock
mov
je
xor
incl
or
add
lock
pushl
jge
mov
je
rcl
sbb
stos
icebp
cmp
fbstp
jecxz
push
pop
scas
jg
dec
mov
aam
stos
or
lcall
scas
or
iret
sbb
mov
lcall
pop
jle
decl
outsb
int
xchg
scas
add
mov
mov
call
push
push
mov
fldl
and
pop
jno
dec
adc
lods
stos
dec
fistl
out
xchg
call
pushl
outsl
add
arpl
jae
repz
cmpsb
fucomi
and
push
leave
jae
pop
cmp
push
mov
in
inc
das
mov
dec
std
adc
jmp
dec
lods
ja
fcoml
add
cmp
jbe
inc
and
jg
insl
mov
mov
mov
imul
pushl
fisubrs
jmp
pushf
mov
ja
and
mov
mov
push
pop
xchg
mov
lret
mov
testb
and
dec
mov
mov
les
pop
jge
add
dec
ljmp
push
ja
add
out
scas
sarl
push
push
sub
call
sarl
sub
adc
nop
outsl
lahf
loope
inc
sbb
jno
fimuls
ljmp
sahf
pusha
bound
enter
mov
inc
fdivrp
iret
gs
rcll
test
faddp
push
stos
clc
movsl
jbe
add
mov
xchg
jne
sahf
int3
mov
movhps
mov
mov
and
call
xchg
mov
rcr
mov
in
pop
dec
gs
out
incl
pushf
lock
cwtl
test
jecxz
lea
into
lcall
in
jmp
cmc
mov
cmp
stos
scas
sub
leave
es
mov
xor
mov
loopne
mov
inc
xchg
aad
inc
inc
jae
jl
pop
leave
push
aaa
mov
sbb
xchg
lret
and
mov
push
fwait
inc
pop
xor
cld
push
mov
rclb
jmp
incl
outsb
outsb
mov
adc
dec
popa
mov
outsl
insb
or
ljmp
xchg
in
add
loope
subb
cmp
lea
decl
pop
pop
pop
jae
push
movb
dec
dec
mov
aaa
mov
lods
xlat
les
scas
jnp
cmp
pop
insb
fcmovnbe
lcall
repnz
out
enter
inc
mov
push
pop
das
sub
mov
mov
and
mov
stc
jg
lcall
jle
push
mov
test
negb
lock
jg
popa
jcxz
or
add
xchg
mov
fdivl
cmp
bound
mov
add
sbb
and
daa
sbbl
lods
in
call
sbb
or
in
lock
dec
xor
shld
mov
push
jg
ljmp
mov
test
and
sar
push
cmpl
or
inc
icebp
cld
or
ljmp
hlt
sbb
cltd
rcll
xchg
lcall
mov
pop
xchg
aam
mov
pushf
xchg
mov
jmp
daa
push
xlat
cmp
and
rolb
das
icebp
shll
insl
xchg
lods
cs
ds
xchg
sahf
mov
outsl
jno
imul
dec
and
jge
loop
xor
or
mov
or
clc
sar
incl
xchg
insb
mov
adc
call
jo
fs
jmp
jg
xchg
and
fdivrl
and
add
imul
cld
pop
mov
dec
or
in
in
pop
pusha
incl
jg
jecxz
aaa
enter
mov
clc
xchg
jp
jg
sub
lret
jle
mov
push
push
incl
cmp
in
negl
jns
jg
dec
fmuls
stos
outsb
cltd
xchg
pushl
mov
pop
pushf
test
push
and
popa
or
push
outsl
aaa
fsubp
call
test
stc
pop
or
add
mov
mov
inc
scas
lock
mov
cmpsb
xchg
mov
mov
add
mov
data16
add
dec
push
or
lcall
iret
xchg
xchg
cmp
xchg
push
xlat
xchg
push
adc
ljmp
out
inc
pop
jno
lret
push
pop
lcall
icebp
orl
adc
lret
addl
jae
bound
mov
pop
and
dec
shll
aas
jle
mov
lahf
add
test
jns
inc
xchg
xchg
rolb
or
test
aaa
clc
iret
jmp
bound
xchg
jp
lods
xchg
and
jl
rcl
mov
mov
mov
popa
push
and
notl
mov
cli
enter
arpl
inc
out
ds
lds
mov
xchg
mov
sbb
data16
call
scas
mov
or
jl
pop
sub
dec
pop
push
mov
call
cmp
inc
jg
mov
mov
pop
je,pn
test
mov
std
sti
inc
into
sti
cmp
orb
cmpsb
sub
jl
fists
aaa
fdivrp
jmp
pop
aaa
sub
out
out
sbb
fsubr
jbe
clc
rolb
gs
pop
movsb
inc
sahf
ret
cmp
jmp
loopne
xor
pop
push
pop
data16
sbb
dec
fisubrs
add
stos
sbb
xchg
out
sbb
xchg
add
push
insl
outsl
jb
int
ljmp
cld
in
ljmp
rcr
jo
cmp
pushf
dec
dec
ret
dec
jmp
les
stos
ds
shl
jae
out
adc
aaa
adc
xor
add
rcrb
jb
cmp
test
out
sub
mov
out
call
into
mov
push
inc
push
ljmp
ds
mov
call
pop
cmp
add
cli
and
sub
mov
mov
call
das
es
mov
sbb
fistpll
imul
add
out
and
inc
aas
pop
je
pop
pop
call
roll
jnp
mov
mov
xor
add
das
lock
arpl
mov
dec
addr16
jbe
dec
arpl
lea
xlat
pushl
and
into
cmp
pop
mov
mov
xchg
inc
ljmp
in
arpl
jg
mov
cmp
mov
aaa
call
into
in
les
push
xchg
add
push
xor
aad
lods
enter
pushl
pop
shl
popf
and
jmp
nopl
mov
add
push
jg
jmp
and
aad
push
cmpsl
mov
cmp
add
pop
loopne
mov
mov
add
sbb
test
xchg
mov
pop
adc
or
and
ljmp
xor
fistpll
jmp
test
xor
jmp
cmp
ss
or
push
fstpt
test
inc
aad
pop
push
in
or
mov
popa
inc
fbld
incb
and
aam
jnp
xchg
fildll
xchg
movsl
pushl
hlt
add
pop
adc
les
aaa
push
push
decl
iret
pushf
jl
movsb
and
inc
jnp
lods
add
pop
int3
cltd
and
mov
mov
lea
loopne
add
add
jecxz
cmp
jg
lcall
or
mov
fstps
or
mov
sbb
lds
fdivrs
push
push
shl
push
push
insb
scas
ja
fnstsw
ljmp
mov
jp
je
in
and
and
mov
inc
icebp
loope
imul
sbb
pop
out
inc
sbb
cmpsb
mov
fs
push
loopne
add
inc
imulb
push
outsb
fstpt
xchg
and
sti
inc
cmp
sub
hlt
sar
adc
orl
sub
orb
jg
push
mov
adc
aas
adc
ljmp
fistl
jg
fwait
std
lahf
push
ja
add
popa
jp
ds
aam
lcall
lret
dec
pop
bound
int
ret
into
xchg
push
outsb
or
ret
hlt
aaa
ljmp
cmp
jge
push
rcrb
cwtl
add
adc
jg
test
sub
jbe
jo
nop
adc
fstpt
call
loopne
pop
mov
inc
pusha
cmp
ret
je
insb
decl
stc
cmp
lret
pmuludq
rorb
es
jecxz
mov
lcall
pop
jecxz
popa
add
gs
out
xlat
mov
jle
sbb
pop
mov
pop
es
jg
loopne
jae
push
mov
stos
shrl
fiadds
cwtl
stos
int3
in
aam
lret
in
in
and
mov
lock
sub
jne
push
mov
loopne
pop
loop
out
xorb
xor
mov
xor
add
mov
sahf
inc
or
ficoms
out
add
pop
ja
mov
call
subl
leave
shl
addr16
cmp
mov
xlat
lcall
jg
ja
push
mov
movsl
pop
in
jae
or
in
fnstsw
cs
out
or
add
pop
pop
push
mov
pusha
dec
inc
sub
cmp
call
mov
push
stc
pop
shl
mov
and
dec
pop
push
aaa
clc
push
hlt
sub
mov
push
lcall
push
es
subl
inc
gs
mov
ss
frstor
dec
loopne
cmpsl
iret
mov
adc
les
and
jmp
imul
lret
pop
loope
pop
rcrb
pop
ljmp
and
mulb
cmpsl
inc
mulb
mov
inc
jl
hlt
xchg
test
outsb
xchg
hlt
mov
movsb
xchg
pop
stos
decl
dec
insb
push
test
sbb
push
in
mov
xor
shrb
lds
dec
add
data16
sti
sub
pop
jb
repnz
lret
lret
ljmp
jle
or
and
out
cmp
inc
and
mov
ljmp
call
dec
jmp
es
pop
jb
or
mov
cmp
xor
cmp
sbb
ffree
fucomip
cmpsl
jae
or
sbb
aam
loopne
sbb
mov
sarb
popa
shr
mov
imul
sti
call
xchg
shr
dec
xor
lods
cmpsl
fidivrl
in
mov
jbe
jp
sbb
and
mov
stc
cltd
ja
ficompl
mov
je
and
cmc
push
outsb
sub
in
and
cmc
mov
les
jecxz
outsb
jbe
pop
sub
ljmp
add
jo
lahf
jl
mov
lcall
mov
aaa
out
push
mov
xchg
lret
or
or
dec
decl
push
popa
ss
loopne
or
das
lock
mov
add
aad
mov
lods
push
push
mov
xchg
dec
inc
in
lods
aaa
subb
inc
cmpsb
xchg
scas
push
and
sub
pusha
aas
and
mov
shlb
jecxz
lock
pusha
cld
dec
mov
xorb
cmp
imul
mov
push
fucomi
les
andb
jnp
xchg
test
int3
fstpl
xor
adc
icebp
cmp
sbb
gs
cwtl
pop
js
mov
jo
pop
movsb
rcr
push
loopne
inc
pop
aas
les
sbb
push
or
shl
aaa
loop
dec
jg
fdivr
ljmp
popf
ret
cmc
outsl
pop
adc
mov
outsb
xchg
mov
mov
mov
mov
pushl
pop
push
shll
test
shll
or
xor
cli
das
jmp
fucomip
jmp
dec
pop
add
movsl
and
jno
cmpsb
stc
adc
mov
lcall
into
lods
or
insl
aad
out
into
aad
pop
jne
mov
mov
mov
lods
ret
mov
in
lcall
mov
popa
ljmp
jo
js
lock
pusha
ja
aas
arpl
or
das
add
js
cmpsb
loop
dec
xor
mov
cmp
subb
ret
lcall
and
push
movsb
jp
jb
cld
or
scas
fwait
outsl
std
outsl
hlt
jmp
lea
add
shll
dec
push
decl
pop
pushf
int
stos
stos
insb
ficoml
mov
dec
scas
movsb
pop
stos
lcall
push
out
xor
roll
cltd
sub
pop
mov
icebp
jl
mov
mov
inc
decl
lds
cmc
and
add
pop
dec
insb
mov
ljmp
xor
adc
loop
or
push
xchg
scas
in
hlt
outsl
jne
jecxz
cmpsl
fisttps
outsl
cs
inc
cld
outsl
sub
mov
stc
rorl
mov
push
and
adc
sbb
fwait
shr
testl
jmp
fxch
dec
mov
inc
lods
push
pop
shl
mov
xor
mov
pop
jne
aaa
mov
and
jo
mov
push
add
testb
adc
push
subl
incl
das
jl
fs
push
in
pop
or
mov
fnstenv
mov
pop
inc
hlt
aam
ljmp
add
sub
je
lret
das
icebp
call
push
or
pop
insb
fcom
movsl
mov
ja
lock
lcall
xor
push
push
test
into
jmp
xlat
adcl
das
hlt
inc
mov
jmp
lahf
pop
and
dec
loopne
lock
mov
call
clc
add
fldl
push
xchg
mov
sbb
push
stc
jnp
insl
bound
sar
bound
jmp
dec
popa
pop
aam
popf
jmp
lds
mov
xor
aaa
faddl
lret
lock
lods
mov
xchg
movsl
mov
in
sub
fsubrs
xor
or
cs
loopne
push
adc
push
inc
sbb
stos
aam
cmp
xchg
bswap
xchg
ret
fcmovnbe
outsb
test
jb
pop
into
lahf
daa
jg
ljmp
sbb
das
fisubl
xchg
xor
jl
loopne
pushl
sub
adc
popl
sbb
js
loopne
imul
pop
fsubs
repnz
imul
fidivl
loopne
std
lea
rclb
add
and
test
xor
xor
inc
jecxz
lock
push
mov
fildl
dec
xor
xor
or
lcall
cld
inc
or
nop
outsl
pop
fcmovnu
sbb
add
add
ljmp
lock
enter
repz
sar
enter
add
mov
mov
clc
mov
mov
outsl
fucom
pushl
cmc
es
cmpsl
fstps
and
cmp
lret
rcrl
leave
add
jmp
cmpsl
sbb
jl
sbb
jg
fucomip
outsl
jmp
ja
push
inc
incb
mov
test
push
pushl
hlt
cmp
leave
les
jmp
jg
mov
sub
in
xchg
dec
scas
insb
es
mov
pushl
aam
pop
rcll
cmp
and
jg
mov
stos
aaa
mov
dec
inc
dec
lods
lds
dec
cld
xchg
mov
jg
scas
pop
sub
test
sbb
ds
lahf
int3
daa
and
push
mov
jg
iret
push
movsl
xor
test
xchg
push
inc
add
jle
pop
aaa
call
push
das
mov
sbbl
xor
imul
mov
out
mov
std
push
ret
xor
ret
pop
repnz
lcall
out
adc
cmp
decl
cld
in
dec
in
flds
cmp
and
mov
pop
mov
inc
or
fptan
and
mov
pop
jge
jp
fdivrs
add
cmp
sub
push
in
lds
and
or
or
adcl
jg
lcall
sub
lret
pop
sub
adc
pop
enter
leave
mov
lock
cmpsl
cmp
push
push
cld
rcrl
jns
int
dec
call
jp
stos
aaa
adc
shr
dec
xor
test
sbb
inc
pushl
cmp
jns
push
pop
xchg
shrb
xlat
test
out
fcomp
adc
adc
test
scas
adc
test
std
call
pop
add
mov
push
ret
icebp
sbb
outsl
hlt
push
outsl
mov
add
out
ss
mov
sub
call
and
fcomi
inc
cltd
mov
out
or
mov
jg
movsl
mov
orl
enter
aas
push
sub
loopne
cmp
jle
pop
cmp
stos
in
jnp
fistpll
pop
push
sbb
shrb
icebp
inc
xor
repnz
ficoms
xor
lret
lods
stos
mov
pushl
xchg
cli
outsl
in
aaa
xchg
stc
popf
ffree
ret
pop
jae
cli
mov
sub
orb
sahf
cmpsb
clc
sbb
mov
dec
jmp
adc
aaa
mov
fstpt
repnz
cmp
cli
ljmp
pop
int
shrl
pop
sarb
jbe
xchg
decl
je
mull
and
dec
fcompl
call
mov
and
lods
push
dec
push
mov
into
and
aad
movsl
adc
shll
adc
cmpsl
rorl
mov
or
mov
xlat
push
jg
or
in
push
cmp
pop
cmp
pop
loop
mov
jb
movsl
rcr
cwtl
adc
fcom
push
fwait
movb
in
call
mov
mov
add
daa
in
pop
test
pop
f2xm1
dec
cs
ror
inc
mov
mov
loopne
sbb
jg
outsl
cmc
lret
pop
add
inc
cmc
adc
xchg
mov
jg
and
pop
jl
inc
dec
jmp
stc
enter
loop
mov
mov
mov
adcl
pmaddwd
scas
dec
scas
jno
movswl
jg
xor
jo
inc
fmulp
mov
sub
mov
mov
sar
icebp
adc
push
aam
sub
pop
jnp
lcall
pop
rcrb
popa
repnz
add
insb
sbb
stc
scas
and
mov
flds
push
jl
pop
es
and
jae
push
mov
test
ret
loop
fcomip
jns
lock
loope
lods
outsl
mov
jae
stc
shl
pop
pusha
int3
enter
repnz
incl
mov
leave
test
fildll
pop
cs
incl
gs
pop
xor
jge
clc
lods
inc
pushf
or
fs
ja
sahf
jb
incb
xchg
mov
mov
sub
call
fwait
mov
cwtl
inc
jg
cltd
and
rcrb
les
add
loope
sbb
stc
cmp
push
outsl
clc
iret
filds
xchg
decl
jmp
iret
sbb
mov
push
loop
xchg
negl
jbe
daa
test
jns
cmp
pop
iret
popfw
cmp
sub
add
inc
push
daa
cmp
mov
push
out
adc
lahf
test
insl
repnz
pusha
jb
je
add
stc
out
out
dec
xor
sub
inc
sub
repz
mov
mov
push
std
pop
stos
mov
cmpsb
movsb
in
pushf
cld
test
incl
test
fcomps
push
jecxz
dec
adc
pop
loopne
add
out
dec
repnz
xor
ja
inc
sbbb
pop
icebp
ja
mov
dec
or
xchg
mov
mov
ljmp
call
cmc
cld
push
add
push
or
pushl
xchg
xor
xchg
sbb
sub
sub
cwtl
xchg
incl
call
cltd
insb
jp
shrl
xchg
jle
cmpsb
rorl
sub
mov
ljmp
inc
or
in
xor
dec
arpl
lods
or
adc
shr
mov
pushl
into
xlat
mov
icebp
xor
cmc
call
mov
adc
int
jmp
cmpsl
mov
outsb
push
fcoml
addr16
sbb
add
jle
faddl
jl
repnz
idivb
dec
xchg
jmp
push
cwtl
push
sbb
ljmp
push
loopne
shll
dec
xchg
cmp
movsl
jmp
sub
das
nop
add
mov
cmp
mov
inc
adc
add
mov
and
andb
fdivp
mov
outsb
push
pushl
mov
dec
in
popa
inc
pushl
stc
fbld
add
iret
loope
inc
test
repnz
aaa
clc
mov
sub
shrl
dec
mov
cmp
cld
push
sub
out
pop
cli
ret
cld
jg
gs
dec
xor
lods
les
std
fnstenv
mov
mov
scas
inc
sbb
jecxz
fcmovnu
and
push
bound
incl
and
pop
jb
jbe
cmp
adc
or
test
bound
in
in
add
push
jl
mov
incl
outsl
add
sub
jno
push
shr
ljmp
inc
fnstsw
pop
ds
sbb
jne
lock
pushf
and
jle
dec
jns
cmpsl
movsl
or
xchg
loopne
fwait
iret
es
clc
lcall
mov
test
pop
ljmp
incl
push
or
test
push
jno
mov
xor
sar
lcall
mul
sbb
int3
fldl
jbe
icebp
push
xor
cld
jmp
jge
adc
arpl
dec
mov
outsb
or
jno
fwait
lcall
decl
lahf
mov
xor
shlb
rclb
push
jle
xchg
cmc
xlat
aad
dec
test
stos
cmpb
pusha
das
lock
out
push
jecxz
push
insb
lahf
xor
dec
and
pushl
jo
and
leave
fstps
add
sbb
cs
clc
decl
enter
and
jge
fidivrs
dec
pop
hlt
mov
and
jmp
adc
call
pop
in
add
loop
insb
push
xchg
cmp
jg
sbb
into
push
pop
sarb
or
push
xlat
and
lret
jne
pop
in
pop
cld
xlat
fisttps
dec
dec
xor
jmp
out
xor
orb
pop
clc
call
push
add
jle
lea
das
fwait
clc
push
stos
xchg
push
stos
out
inc
fldenv
rcll
pushl
dec
into
lea
add
mov
into
bnd
nop
subl
call
fcoms
sub
push
mov
cli
add
dec
xchg
xlat
mov
cmp
das
inc
cmp
pop
mov
jge
ss
cmpsl
cs
dec
incl
test
std
dec
xchg
ds
xchg
jno
mov
lock
call
sbb
int3
xchg
shr
lock
xor
pop
inc
add
fwait
test
fs
mov
aam
movsb
sahf
jl
insb
sub
pushl
pop
fwait
or
jbe
je
jl
or
js
into
fldl
inc
mov
aaa
xchg
jno
imul
in
or
aam
ljmp
test
adc
mov
jg
mov
push
addb
stos
fwait
jle
inc
ss
mov
adc
outsl
xchg
jmp
pusha
mov
ret
mov
pop
xchg
popa
mov
cmp
add
stos
pop
and
js
arpl
cmp
arpl
decl
jbe
shll
clc
jl
scas
stos
dec
gs
test
aam
inc
push
mov
jne
das
jnp
mov
cli
enter
mov
dec
sbb
lds
enter
outsl
icebp
ret
loopne
rcll
jne
in
cmpsb
lea
incl
stos
mov
aam
rcrl
movsb
leave
ja
mov
or
pop
std
cvtps2pi
xchg
lcall
decl
mov
inc
enter
and
into
sub
mov
hlt
popa
loop
incl
pop
or
and
iret
repz
mov
ficoml
and
mov
push
push
fwait
popa
or
in
xchg
ss
adc
jg
call
cli
sbb
sub
sahf
and
adc
dec
cmp
jecxz
and
out
jbe
movsb
jno
lock
addr16
call
add
fisubs
outsl
lock
mov
arpl
fucomip
shll
mov
out
jg
lcall
ja
jb
xchg
cltd
cmp
imul
cmp
pushl
jl
sub
in
mov
fs
shlb
inc
sbb
mov
cmp
inc
add
sti
bound
push
daa
cmp
push
mov
sub
xor
outsl
mov
outsl
mov
int
pop
add
jae
stos
repz
jae
pop
pop
sar
inc
sub
out
dec
pop
pop
fidivl
mov
pop
ljmp
fidivrl
or
adc
pop
xlat
test
jnp
cld
lock
hlt
or
pushl
or
push
sub
mov
rolb
push
add
neg
jg
pop
sub
call
adc
loope
xchg
adcl
mov
lahf
lahf
test
outsb
out
stos
mov
jl
add
fs
pop
negl
subb
xor
sub
inc
jmp
dec
jp
inc
mov
fdivrp
outsb
jg
aaa
mov
in
cmp
fwait
inc
out
leave
xchg
clc
repnz
cmp
cli
xchg
ljmp
push
and
mull
js
jg
sar
inc
cmc
pushl
pop
popf
lods
fnsave
adc
inc
incl
jmp
xchg
push
lods
cltd
mov
or
lahf
xor
xchg
jl
or
mov
jp
roll
fmull
or
aaa
jae
cs
xchg
clc
ljmp
push
js
mov
sub
mov
imul
push
fmull
rcrb
push
outsb
jo
test
out
adc
fildl
dec
std
pushl
out
ss
mov
ss
hlt
test
ljmp
jno
ret
cmp
roll
imul
insl
jo
addr16
insl
popa
add
pop
push
xchg
mov
and
mov
add
test
adc
adc
mov
adc
inc
add
aaa
outsb
sub
cmp
and
and
sbb
inc
mov
add
ds
push
and
test
mov
inc
and
and
dec
and
inc
dec
lods
mov
push
stos
popl
data16
ljmp
add
imul
gs
xor
cs
insb
add
xchg
jns
push
or
add
aas
test
adc
add
sbb
outsl
mov
jp
or
add
imul
xor
fcmovbe
mov
and
mov
pop
adc
and
insl
stos
xor
xor
xor
pop
mov
mov
or
or
and
ljmp
pop
pop
push
adc
push
inc
outsl
inc
inc
dec
dec
xor
jb
mov
fidivl
sahf
addr16
dec
les
int
xchg
add
xor
data16
and
pop
mov
imul
and
or
or
mov
pop
mov
cmp
and
inc
out
add
mov
push
mov
inc
push
add
xor
in
sbb
adc
incl
lret
add
lret
incl
call
lret
sahf
nop
lcall
movsl
mov
popa
inc
sar
ljmp
and
inc
cmp
cli
adc
incb
lods
nop
ljmp
or
outsl
push
pop
lret
nop
lret
and
stos
test
bound
or
test
jmp
jg
decl
scas
hlt
lret
lret
dec
ja
aad
mov
pop
call
pop
xchg
xchg
adc
test
sbb
test
scas
xor
mov
js
lret
push
adc
loopne
incl
lret
sub
and
mov
and
in
lret
xchg
outsl
lods
or
adc
adc
jnp
mov
push
pop
loop
push
push
ss
xor
and
push
popa
push
push
test
inc
and
jae
or
inc
push
sub
cmp
xchg
mov
push
ss
mov
ss
xor
pop
push
xlat
aas
sub
mov
adc
jne
push
aaa
adc
add
lods
loopne
mov
test
mov
xor
or
popf
add
push
outsb
ja
imul
add
push
adc
lods
mov
mov
cmp
sub
jb
imul
mov
jae
int
loopne
bsf
dec
lods
mov
aaa
addb
mov
adc
add
adc
mov
mov
cmp
add
lods
cmp
imul
or
and
xlat
loope
xor
add
sub
pop
inc
sbb
push
or
lahf
mov
and
adc
mov
and
sti
dec
pop
outsl
inc
xchg
test
jg
cmpsb
jne
lcall
lds
dec
dec
jbe
cmp
xor
xchg
fisubrl
shl
add
idiv
in
imul
iret
rcrl
adc
testb
cmp
test
shrl
mov
test
inc
or
mov
dec
push
adc
fmulp
push
mov
test
xlat
xor
add
pop
xchg
pop
inc
outsb
fs
fs
out
popa
imul
mov
int
jb
xor
add
test
inc
sub
gs
sub
outsb
outsb
dec
scas
pop
xchg
popa
imul
pop
or
push
dec
dec
dec
dec
dec
inc
pop
push
dec
pop
add
inc
push
jge
and
push
out
sub
lcall
iret
adc
scas
and
fadds
push
dec
push
inc
inc
push
push
scas
inc
ja
xor
mov
test
js
lcall
sbb
jae
xlat
push
sub
ss
test
rcl
popa
adc
add
pushf
push
add
sub
and
sbb
jns
sarb
xchg
jp
aaa
xchg
shll
mov
jg
test
push
and
ljmp
insb
pop
imul
xor
mov
sarl
adcl
jmp
and
xchg
jne
sbb
xlat
lcall
addr16
push
mov
xor
mov
push
aas
mov
pushf
imul
inc
cmp
filds
or
jae
mov
adc
dec
pop
pop
push
inc
inc
sub
dec
pop
push
inc
push
dec
test
pop
add
xor
out
insl
inc
mov
js
jbe
gs
xor
xchg
loopne
adc
inc
add
pop
cmpsl
call
lea
inc
pop
xor
cltd
add
andb
mov
js
jno
outsl
jne
sar
js
outsl
push
pusha
jo
sbb
das
and
js
push
mov
mov
xor
repz
push
inc
add
add
add
add
fs
adc
nop
push
add
add
orl
or
in
push
hlt
lret
sub
sbb
and
aas
mov
mov
jle
insl
or
add
cltd
push
testb
lret
mov
xchg
fidivrl
lret
lods
lret
popl
lret
pop
mov
adc
push
loop
mov
and
and
mov
or
lods
mov
outsb
lret
push
mov
pop
notl
add
mov
mov
ror
test
aam
xchg
jne
add
cli
pop
mov
jbe
cmp
aas
lret
adc
push
lret
popf
cmp
dec
leave
inc
mov
push
addr16
imul
xor
pop
es
insb
lret
lret
lret
fcmovnu
pop
push
lock
ja
inc
add
divl
dec
lret
lret
divb
gs
xor
cmpsl
std
fucomi
adc
add
inc
pushf
ss
mov
and
js
adc
jle
insl
sub
sub
jg
jnp
xchg
lcall
mov
data16
lret
mov
jnp
xor
xor
dec
lahf
xchg
push
sub
dec
mov
lret
lret
fnop
push
lret
lret
insl
jae
cld
xor
jbe
lret
sbb
sub
gs
mov
inc
lret
repnz
shll
inc
jmp
fidivrs
rcl
sahf
popa
ror
cmovs
orl
sub
repnz
sbb
adc
cs
adc
jae
push
icebp
push
mov
lret
push
sub
and
in
imul
ljmp
pop
add
in
adc
pop
sbb
idiv
in
test
xor
cwtl
jg
and
push
insl
cmpsb
lret
adc
pop
clc
mov
lret
out
orb
and
push
mov
ror
push
inc
dec
pop
ret
int
out
fcmovnu
or
lock
lret
or
push
ficompl
sbbl
out
or
xchg
repnz
iret
pop
adc
fstpt
test
mov
lret
and
lret
in
fucomi
stc
add
ja
mov
ret
icebp
adc
lret
adc
popa
mov
jbe
pop
pop
in
add
popf
push
int3
adc
or
decb
dec
dec
jecxz
bswap
adc
inc
lock
scas
inc
pop
mov
ret
cmp
insl
adc
lret
pop
js
mov
sti
dec
stos
adc
mov
push
out
arpl
mov
test
cmp
sub
sub
jle
mov
dec
push
inc
jbe
xchg
inc
cmc
add
test
mov
sbb
push
scas
lret
adc
inc
pop
mov
dec
pop
cs
mov
push
clc
inc
mov
stos
outsl
fistpll
jne
pop
pushf
aaa
rolb
xchg
or
test
hlt
loopne
xchg
inc
push
sub
wbinvd
out
in
inc
sti
or
pop
fmull
out
imul
push
adc
outsb
orb
gs
loope
jecxz
lock
ds
leave
push
ss
dec
xorb
lret
adc
xor
inc
sub
mov
pop
mov
in
insl
pop
sub
mov
and
pop
call
lds
or
jb
divl
iret
jl
out
enter
ret
mov
add
add
sbb
push
add
movsb
xchg
push
out
stc
in
mov
stos
mov
push
inc
int3
lret
push
dec
adc
and
inc
adc
in
dec
push
xchg
loope
inc
jae
lret
sbb
movl
lret
sub
mov
rclb
pop
fcomps
add
cmp
imul
sbb
and
mov
jg
cs
xor
add
lret
out
outsl
outsl
jle
jbe
lds
addr16
or
jne
int
xchg
movl
dec
or
jmp
fstl
mov
cmp
or
pop
imul
pop
push
inc
mov
enter
sbb
leave
lret
movsl
push
imul
pop
or
mov
popa
cmp
data16
pop
xchg
adc
xor
pop
sar
pusha
test
mov
shrl
les
fsts
es
jmp
pop
int3
dec
mov
fnsave
mov
mov
hlt
lods
hlt
ret
sbb
shll
sarl
inc
inc
jmp
or
aam
inc
xchg
sbb
cli
lea
sbb
adc
scas
mov
cs
cmp
cmp
sbb
roll
lret
fcmovne
jo
cltd
cltd
dec
jl
and
mov
mov
lret
xor
das
jg
mov
scas
gs
or
and
jl
sub
enter
stos
dec
sbb
test
mov
out
cli
add
dec
xchg
mov
mov
andb
xchg
ss
mov
fidivs
jae
movsb
fstpt
xchg
mov
mov
idiv
call
push
loop
out
xchg
in
sbb
ss
and
mov
inc
fisubrs
fistpll
out
pop
jno
les
add
fwait
scas
shl
ret
stos
push
ret
push
test
fcom
lcall
data16
fbld
cwtl
mov
jmp
rcrl
lahf
adc
inc
subl
mov
into
mov
or
mov
xor
les
mov
lods
inc
movl
and
jnp
test
or
jno
pop
pop
push
add
dec
jae
jno
in
ret
ss
stos
dec
pop
adcl
jle
std
jmp
ret
stc
pop
adc
lret
mov
in
mov
and
dec
fsubrp
add
outsb
hlt
fucomi
cld
sti
aam
and
jo
fcmovu
cmpsl
add
sub
stc
scas
stos
test
fs
mov
insl
insb
das
jl
sub
or
inc
movsl
popa
mov
mov
cmp
xchg
or
mov
cli
insl
and
adc
dec
insb
js
fisttps
or
lcall
loopne
push
aaa
incb
pop
inc
dec
test
lret
sbb
push
jmp
aam
inc
imul
or
add
add
cmp
outsb
std
roll
mov
ficoms
es
fildl
fs
leave
inc
pop
call
adc
mov
test
fcmovu
mov
adc
sbb
cmp
jae
movsl
in
mov
push
shll
mov
jle
cltd
jb
aaa
insl
jg
cmc
shrb
dec
loope
cmpsb
pop
lods
imul
dec
mov
cs
enter
clc
loope
mov
popa
jg
pop
fisttpl
mov
iret
jne
mov
lret
out
loope
mov
mov
cmp
fimull
in
into
cmpsb
outsl
xchg
pop
cs
sbb
in
subb
popa
clc
lret
aaa
jno
xchg
fwait
mov
add
sub
cmp
adc
outsl
fcoms
inc
jb
rclb
sbb
das
push
pop
mov
push
and
lret
xchg
pop
ficompl
mov
rcrb
mov
mov
xorl
int3
add
imull
push
lret
insb
and
mov
ret
leave
xchg
out
aas
scas
mov
xor
rcrl
sbb
mov
int
jo
aad
aas
cmpsl
push
mov
mov
dec
icebp
push
mov
int
popa
mov
push
mov
nop
aam
pop
push
mov
or
rol
stos
bound
insl
pop
mov
shll
fstps
sbbl
loopne
xchg
aam
rcrb
xchg
pusha
lret
push
inc
sub
dec
push
mov
add
faddl
jp
inc
xchg
jmp
pop
xor
clc
adc
jge
push
insb
mov
mov
pop
out
scas
xchg
xchg
sub
nop
ss
shlb
imul
cwtl
shll
mov
sbb
xchg
sbb
imulb
aaa
lcall
test
fildll
inc
inc
ret
and
cli
stos
ss
loopne
push
sub
jo
fsubrs
int3
push
xor
js
mov
cs
cmp
scas
pusha
mov
jmp
or
mov
dec
dec
dec
int3
mov
lret
hlt
int
popa
aas
xchg
call
dec
repz
loopne
adc
mov
xchg
rol
outsl
sub
pop
mov
cmpsl
test
movsl
test
test
pop
xor
loopne
jno
xor
pop
insb
mov
lret
outsl
add
shr
xchg
fbld
lea
fcomps
je
imul
aad
sahf
cmpsl
lods
lock
inc
dec
shll
aaa
iret
outsl
xchg
aaa
jle
icebp
xchg
jbe
dec
out
pop
fildl
aad
testl
ds
add
or
aas
mov
ds
cmp
movsb
jno
fcoms
xchg
in
or
mov
scas
sbb
mov
push
mov
outsb
mov
es
and
stc
sbb
mov
add
adc
aam
push
js
pop
push
lret
jle
out
mov
pusha
push
or
lods
mov
and
sub
outsb
mov
and
dec
pop
add
pop
outsl
sbb
jmp
sahf
mov
mov
sub
jbe
daa
xchg
inc
fisttps
out
adc
sbb
xlat
xchg
outsl
mov
xor
mov
je
test
dec
rolb
cs
add
cmp
and
sbbb
push
push
syscall
add
sub
jg
icebp
stc
or
or
shrl
mov
add
push
out
pop
xchg
ret
stos
aam
jmp
jb
adc
jg
sub
ret
pop
daa
xor
fistpl
or
sarl
lret
push
rcrb
lea
popa
pusha
pop
aaa
inc
ret
jle
int3
pop
xor
mov
jb
icebp
in
mov
mov
adc
push
shl
gs
mov
jo
mov
pop
xchg
pop
adc
mov
fldt
sbb
push
push
inc
out
pop
pop
dec
adc
lea
sub
sub
mov
jg
mov
mulb
xor
mov
test
jl
and
xchg
rol
cmc
cmp
pop
jnp
dec
ficompl
fldt
add
xchg
pop
xchg
mov
sqrtpd
add
test
mov
jmp
rclb
add
sbb
test
sti
outsl
push
push
dec
imul
outsb
pop
push
sarl
sbb
lahf
mov
fnstenv
xchg
cs
dec
mov
test
in
pop
inc
pop
popa
or
pop
jbe
fidivrs
cltd
xor
aam
pusha
adcb
dec
stc
or
arpl
inc
pop
xchg
in
movsb
cwtl
inc
cmp
sbb
push
in
outsb
orl
andb
insl
and
ret
mov
pop
pop
mov
in
pop
outsl
xchg
outsl
jmp
fld
lods
aam
cli
push
test
mov
mov
push
test
jp
sbb
aad
and
aaa
mov
sbb
adc
mov
movsb
movsb
outsl
cwtl
lret
and
mov
cmp
dec
das
insb
add
loopne
gs
stc
in
add
fistl
mov
nop
ds
xor
outsb
mov
loopne
aas
add
push
jl
or
jle
xchg
inc
sbb
bound
andl
jo
cltd
jbe
inc
aam
in
sub
xchg
adc
or
test
jp
jne
adc
xchg
shlb
into
xchg
fbld
mov
mov
rol
xchg
jl
sub
mov
mov
jge
rcrl
push
and
adc
outsb
sbb
dec
xchg
outsl
adc
call
mov
ss
cmp
xor
ja
loope
mov
sub
jmp
loopne
cmpsl
stos
push
adc
push
push
sub
fnstsw
mov
or
into
dec
mov
push
fnstsw
movl
jb
lds
jbe
xchg
aas
xor
loopne
insb
jo
jle
cltd
jbe
loop
fdivp
push
insb
outsl
and
arpl
adc
ljmp
mov
mov
mov
sub
cli
sbb
sbb
es
push
push
pop
outsb
pop
insb
repnz
and
and
sub
pop
push
cmp
fstp
add
mov
push
push
arpl
sub
mov
fdivrl
hlt
add
push
push
in
fdiv
mov
mov
repz
xchg
pushf
mov
cmc
or
test
je
pop
test
call
sbb
std
cmpsb
sbb
cmp
roll
sbbb
inc
mov
xchg
mov
xchg
movsl
fnstsw
rcr
sub
fnsave
jns
and
flds
and
mov
movsb
repz
jecxz
fistpl
orb
popa
mov
sub
ret
cmp
sbb
dec
int
or
sub
outsb
xchg
ss
pop
cwtl
or
mov
inc
in
insl
pop
or
add
or
sub
imul
enter
sub
sbb
sar
push
shrb
sbb
push
fdivrs
scas
or
jne,pt
rcll
scas
rcll
ret
cmpsl
nop
lock
leave
hlt
int
mov
data16
sub
sbb
push
test
sbb
inc
int
mov
pushf
adc
test
mov
std
push
cwtl
jg
xor
cmpsl
mov
les
rcrb
mov
xchg
xchg
lret
mov
fldenv
mov
outsb
mov
mov
inc
cmp
mov
xor
daa
and
mov
das
cmpsb
pop
insl
dec
rcrl
das
jnp
lret
adc
fisttpl
mov
mov
inc
sbb
test
xchg
arpl
mov
push
sbbl
mov
sub
push
scas
pop
mov
sbb
leave
inc
add
jmp
sarb
std
test
aas
adc
inc
lret
pop
mov
or
jno
sbb
mov
sub
loop
rcr
repz
pop
sub
fwait
out
xchg
cmp
push
pop
pop
andb
cmpsb
les
mov
loope
pusha
and
jns
sub
mov
sbb
js
cmp
jp
aas
pop
fsts
lcall
pop
adc
lods
mov
and
rclb
shlb
int
into
mov
aad
mov
mov
jle
mov
lret
pop
push
mov
shrl
adc
lods
sbb
aaa
repz
adc
lret
les
adc
or
mov
xlat
dec
pushf
or
push
pushf
ficoms
add
jmp
in
orl
mov
lcall
ds
rorb
mov
in
out
adc
mov
mov
mov
imul
dec
rorl
lds
jne
push
or
rcll
mov
dec
imul
pop
rolb
xchg
pusha
fcmovu
outsb
fstpl
in
mov
sbb
pop
jg
popf
push
fcoml
pop
fldcw
inc
mov
pop
cltd
push
lahf
jecxz
add
pop
fildll
iret
lock
mov
shlb
pop
aad
jg
push
mov
out
sbb
fucomi
imul
mov
pop
cmp
in
ss
cmp
out
jl
popa
movsb
push
stos
mov
jbe
mov
mov
test
xlat
mov
inc
push
push
lret
xor
lds
or
shlb
stc
dec
mov
insl
pusha
mov
sub
mov
movsl
loop
jecxz
or
xchg
jno
movsl
test
jge
jmp
or
push
sub
push
pop
divl
sbb
jnp
push
push
inc
rclb
sbb
loopne
mov
hlt
add
shll
insb
sbb
cmp
add
outsl
cltd
das
inc
inc
sbb
sub
shrl
fistl
iret
jbe
jmp
daa
lock
frndint
push
test
into
ret
mov
jno
adc
inc
out
shll
add
xchg
mov
sar
jle
jb
and
jecxz
push
cmp
inc
xchg
outsl
frstor
nop
enter
cli
xor
mov
enter
iret
and
shll
pop
mov
adc
pop
call
jae
dec
dec
mov
add
dec
or
out
jbe
imull
dec
pop
icebp
jno
fcomps
bsr
mov
mov
xor
repz
push
push
mov
mov
jb
inc
cltd
adc
pushw
test
cs
adc
fistps
insb
in
lcall
ljmp
and
mov
arpl
xor
imul
push
mov
movsb
je
mov
popa
fldt
mov
out
xchg
add
pop
mov
mov
cli
adc
cmpsl
ds
mov
lods
lock
inc
mov
in
and
dec
or
mov
cmp
jmp
cs
push
push
add
test
inc
stc
sub
xchg
sub
cli
mov
incb
pop
add
mov
push
in
add
jmp
negb
add
sub
pop
bound
jb
ja
loope
jg
loope
bnd
jne
and
stc
ret
xchg
and
arpl
fnstsw
mov
bound
inc
sbb
std
insl
mov
jbe,pn
dec
xchg
mov
or
push
inc
jns
mov
xor
leave
loop
lods
and
sbb
pushf
push
jg
mov
cltd
xor
sbb
pop
nop
sarb
inc
rcl
imul
or
or
add
mov
clc
test
and
adc
stos
or
xchg
rorl
mov
jae
test
loop
xlat
sbb
push
and
add
pop
fucomi
test
sbb
pop
mov
jae
jg
mov
mov
mov
inc
cs
fisubrs
stos
xchg
sbb
xor
mov
in
sti
or
movups
jno
mov
inc
push
mov
cmpsb
or
xchg
mov
cmpsb
jp
mov
jle
inc
pop
mov
push
jg
sbb
fs
xor
divb
lock
pop
mov
fldcw
push
mov
icebp
push
arpl
rcll
rol
mov
pop
js
mov
mov
scas
mov
in
outsl
std
adc
xor
ja
dec
shld
out
pop
outsb
lret
aad
push
pusha
hlt
cltd
repz
push
ficoml
int3
mov
insb
insb
fisttpl
jbe
adc
pop
rolb
dec
fldl
push
jnp
cld
sarb
outsb
xlat
loope
pop
lods
aam
pop
rorl
test
call
and
lds
roll
jp
push
leave
pop
jecxz
push
cmp
xor
test
cwtl
out
jae
pushf
xchg
insl
aaa
mov
push
cwtl
popa
pop
adc
sbb
lods
dec
inc
xor
mov
push
jmp
mov
out
mov
sbb
notb
pushaw
sub
jl
push
sti
test
jb
or
sbbb
rorl
pop
xor
pushf
pusha
sbb
aaa
inc
roll
loop
push
repnz
jecxz
and
or
sbb
data16
jbe
sbb
test
clc
jbe
rcll
jge
xchg
fcoms
popf
in
xor
mov
xor
mov
xchg
out
lret
lods
mov
jge
in
jg
loop
insl
out
sarl
mov
outsb
sub
insl
sbb
push
push
push
sti
notb
mov
int3
je
cmp
push
cmpsl
stos
xchg
call
ds
push
mov
mov
inc
imul
in
push
sbb
mov
xchg
and
inc
xor
dec
in
cwtl
nop
pop
push
xchg
mov
adc
add
imul
add
xlat
mov
inc
dec
mov
dec
mov
and
cmpsb
out
push
outsl
push
inc
mov
shl
insl
xor
adc
das
cmp
mov
fsts
sarl
pop
js
in
leave
mov
fidivrs
pop
ljmp
push
and
dec
fnstsw
dec
add
jb
xor
mov
cs
out
jbe
xchg
xor
mov
jg
inc
pop
jg
push
test
test
xchg
je
scas
lds
sub
in
hlt
js
mov
testl
outsb
inc
dec
mov
mov
negb
fldl
sub
rclb
adc
adc
in
clc
sub
jp
test
ja
xchg
push
sub
add
subl
pusha
std
mov
cltd
jns
gs
mov
in
add
mov
ret
lahf
rcrb
nop
adc
mov
std
push
pop
sbb
mov
and
inc
mov
inc
jmp
xor
sub
addl
and
jno
scas
xor
mov
or
xor
or
rorl
arpl
jbe
jne
or
sahf
je
inc
mov
fadd
pop
mov
adc
pop
shl
xchg
mov
cmp
jbe
or
push
jg
or
jno
repz
mov
sahf
lock
or
mov
fdivl
mov
pop
add
lea
pop
mov
fnstsw
pop
add
sbb
pop
test
test
sbb
insl
out
clc
inc
xorl
xchg
sub
sub
sbb
inc
xor
in
loop
fmuls
jl
dec
rol
jo
mov
into
aas
xor
jnp
jb
and
je
fsubrs
test
daa
push
lock
pop
mov
outsb
mov
jmp
cmp
test
shlb
pop
ss
xor
dec
aaa
loop
int
inc
add
mov
and
popa
mov
jns
inc
push
pop
xor
cwtl
push
and
gs
mov
mov
and
fcomi
mov
sbb
jp
out
testl
divb
stos
rcrb
or
cmp
je
mov
adc
cwtl
add
mov
rcll
ljmp
incb
adc
negb
push
jp
or
xchg
and
lret
push
test
mov
inc
xor
aad
mov
push
xchg
ss
dec
std
fs
push
adc
mov
cmc
xchg
pop
int3
sti
mov
xchg
dec
pop
mov
aam
ja
or
lcall
daa
movsb
fiaddl
jecxz
xchg
xor
sahf
jns
cs
mov
xchg
imulb
mov
mov
jl
arpl
ret
xchg
add
add
jnp
pop
push
or
movsb
test
cmp
call
addb
mov
in
push
popl
cmp
js
or
rorl
test
mov
nop
mov
sub
pop
cli
int
imul
repnz
cmpsb
in
mov
mov
or
mov
mov
fistpll
sub
pop
pop
pushf
fdivrs
jl
add
inc
or
mov
dec
repnz
test
add
pop
loopne
add
xor
sbb
insl
imul
pop
popa
popa
imull
mov
fcmovnbe
sbb
jae
ret
fcomps
and
in
jb
or
and
mov
add
or
fists
std
lock
scas
dec
mov
jecxz
xorb
sub
idivl
imulb
push
sbb
xor
dec
sbb
stos
cltd
ret
ss
daa
jmp
pop
pop
and
aam
pushf
je
jl
ljmp
xor
mov
mov
daa
jno
add
inc
dec
shlb
out
aaa
lcall
movsl
mov
sbb
jno
ja
ja
stc
lret
mov
call
popf
and
insl
add
mov
test
mov
adc
icebp
movsl
mov
or
and
jne
xlat
jp
inc
lods
fsubrl
and
out
loopne
jns
js
insb
fld
test
inc
or
lcall
ficoml
sbb
in
mov
cmp
mov
loop
rcrl
aaa
push
jge
je
mov
mov
out
adc
and
das
mov
mov
cmp
xchg
mov
mov
mov
rorl
rcrb
cmp
call
mov
test
sbb
into
add
mov
cmp
xchg
pop
test
pushf
fwait
mov
pop
pop
pop
mov
mov
ss
jnp
outsl
outsl
adc
pusha
mov
js
adc
pop
lahf
mov
test
push
mov
xor
enter
ret
mov
insl
add
or
addr16
sub
jg
dec
ljmp
add
mov
loope
pop
mov
fsubr
adc
lods
stos
mov
out
in
cmp
cltd
mov
in
les
dec
testb
adcl
mov
mov
push
mov
das
rolb
mov
pop
iret
xchg
or
cmc
mov
inc
mov
and
sti
sbb
stc
cwtl
rorl
xchg
adc
popa
pop
or
cld
xlat
es
adc
outsl
jle
ja
inc
fcoms
fldt
sub
cmp
test
ret
dec
jg
gs
cli
mov
loopne
jp
mov
in
inc
push
mov
sub
or
xchg
push
jb
repnz
popf
int
mov
cmpsl
xor
rol
cmc
inc
mov
mov
jae
and
outsl
aad
movsb
faddl
lahf
cltd
js
inc
pop
mov
outsb
lret
pop
imul
jno
jle
popa
mov
test
cmp
dec
std
mov
fwait
call
sub
adc
push
lock
pop
xchg
inc
lds
movsb
test
mov
fisttpll
in
movl
insl
scas
push
mov
sbb
stc
or
das
mov
add
mov
pop
or
and
lods
mov
or
pop
ret
outsl
mull
xor
jnp
js
cld
cmp
ret
out
aam
push
or
mov
arpl
movb
mov
dec
frstor
xor
cli
imul
es
fistl
sbb
fildl
cmpsb
fwait
scas
xor
pop
roll
fdivp
in
mov
mov
icebp
int3
outsl
push
inc
and
lcall
jp
jg
icebp
cltd
jbe
mov
sub
pop
sbb
mov
jne
xor
cld
pop
fsqrt
dec
pop
js
mov
xchg
pop
imul
dec
or
sub
and
dec
push
testb
loop
xchg
sbb
dec
mov
pop
jae
sub
ret
imul
xchg
data16
xchg
aad
dec
mov
jmp
jo
stos
bnd
sub
clc
stos
insl
adc
pushf
dec
mov
push
outsl
or
sbb
imul
gs
fisubrl
insl
ds
je
jae
aaa
loope
or
cmp
mov
fisttpl
in
mov
mov
cmp
pop
dec
jecxz
xchg
imulb
out
rcl
aaa
or
mov
cli
test
fistpl
inc
ret
int
xor
mov
imul
rcll
mov
cld
push
outsl
clc
in
jp
xor
add
mov
adc
push
lret
sub
addr16
xlat
pop
cmp
loopne
xchg
loop
inc
inc
lods
xorb
cmc
scas
and
add
scas
outsb
pop
lock
jecxz
inc
sarl
mov
or
push
mov
shlb
das
mov
cmpsl
mov
jne
loopne
inc
dec
dec
adc
cmp
jbe
jle
push
adc
das
daa
dec
andb
mov
mov
js
adc
sbb
inc
lods
fistpl
mov
xchg
mov
movb
aaa
mov
dec
push
repnz
jl
and
cmc
lret
and
dec
jg
mov
dec
pop
jae
sbb
mov
pushf
pop
into
pop
gs
test
insl
jno
stc
jmp
or
test
push
popa
jmp
test
inc
movsb
testb
or
insb
mov
cli
dec
stos
lret
in
lea
cmp
mov
test
insb
or
cwtl
out
mov
mov
out
insb
enter
push
push
insb
cld
add
mov
add
pusha
sub
insl
or
jge
xor
xchg
or
and
dec
xchg
mov
push
and
xchg
cmpsb
dec
repnz
test
bound
cmp
mov
xchg
add
roll
clc
or
aaa
mov
inc
sub
ja
cmp
dec
xchg
cmp
jnp
iret
add
dec
fistpl
inc
and
sub
aaa
mov
outsl
adc
add
mov
outsb
mov
nop
in
mov
mov
push
popf
add
or
sbb
je
adc
les
mov
jecxz
lods
sbb
outsb
leave
dec
dec
jae
and
or
rcll
sub
leave
xchg
mov
mov
sub
jns
pusha
clc
mov
sbb
sbb
cmp
std
idiv
insl
xorl
mov
inc
pushf
mov
rcrl
push
cmp
shrb
xchg
push
push
jecxz
dec
dec
mov
clc
xor
xchg
iret
insb
mov
lds
mov
sub
insb
sahf
rclb
sahf
xchg
add
subl
inc
mov
mov
jge
adc
add
shlb
cmp
jp
sbb
mov
js
stc
mov
shrb
in
loop
lret
adcb
add
jl,pn
js
loope
xchg
hlt
jle
fnsave
in
sub
mov
xchg
pop
inc
mov
fdivrs
add
fsubs
int3
and
int3
cltd
cmp
stos
or
xchg
aaa
in
stc
dec
jl
push
popa
xor
pusha
imul
outsl
and
dec
xchg
scas
inc
jns
inc
push
mov
push
fwait
dec
out
mov
adc
in
mov
add
pop
xor
movsb
rcl
jb
xchg
data16
and
cmp
in
enter
pop
scas
mov
scas
fsubs
pop
jnp
hlt
fistps
outsl
add
fstl
std
push
rcl
jno
push
jb
cmp
popa
stos
add
test
mov
mov
imul
add
jg
xor
pop
imul
add
jle,pn
outsl
hlt
add
mov
popa
outsl
inc
sbb
shlb
mov
imul
clc
mov
roll
insl
xor
push
lods
ss
pop
mov
sub
ficoml
int3
test
pop
stos
mov
outsl
cmp
mov
lret
mov
loop
fbld
cmp
pop
jmp
mov
pop
inc
ja
dec
shlb
pop
jb
jmp
xchg
call
xor
pop
sbb
sub
xor
nop
mov
push
pop
test
ret
add
rorl
mov
in
ret
sub
mov
pop
in
jl
test
mov
stos
jle
icebp
lret
or
insb
lahf
mov
jne
mov
iret
out
lcall
inc
mov
xchg
scas
xchg
imulb
inc
adc
pop
cmp
into
sub
add
cmp
push
fcomps
out
imul
rclb
xor
mov
mov
loopne
popf
cmp
imul
pop
sti
jo
pop
sub
in
add
aas
xor
mov
fs
mov
inc
push
addl
fsts
mov
add
cmp
adc
xchg
shll
pusha
outsb
nop
stc
into
or
mov
pushf
mov
push
movsl
pop
add
adc
pop
or
or
int
inc
and
and
lahf
or
dec
aas
push
mov
inc
adc
cmp
xchg
push
addr16
pop
xor
cmpsb
dec
pop
hlt
int3
sbbb
add
cmp
test
incl
cld
add
mov
lods
in
pop
and
jne
in
pop
mov
dec
psubq
scas
mov
lds
daa
fisttpl
movsb
ds
or
push
mov
adc
insb
test
int
test
jl
mov
pop
in
pusha
dec
lret
cld
mov
inc
push
mov
adc
in
cmp
out
dec
sahf
out
jbe
mov
mov
repnz
repnz
add
lods
xor
shll
ss
popa
orb
lds
add
push
sarb
loop
push
repz
sub
cmovbe
sbb
cmp
call
leave
hlt
leave
mov
clc
jb
out
in
in
dec
dec
add
jmp
nop
add
or
mov
pop
ret
stc
push
fwait
in
insl
aas
add
packsswb
cmc
sbb
dec
or
push
inc
or
pusha
dec
in
mov
inc
dec
das
iret
cwtl
pop
cmp
jl
inc
inc
popw
cmp
xor
stos
shrb
cmpsb
out
fs
hlt
call
push
and
ss
out
add
ljmp
sbb
flds
jnp
and
lds
cli
ret
out
mov
test
stc
ret
mulb
mov
mov
loop
cmp
jno
and
lcall
jbe
out
popa
imul
iret
ja
push
adc
incl
dec
les
sub
cs
jp
test
daa
inc
add
leave
ja
xchg
jle
jne
repz
mov
mov
into
in
sbb
mov
add
pop
add
or
add
mov
jns
jbe
cltd
push
push
inc
jp
sub
mov
insb
icebp
mov
dec
xchg
iret
ret
lret
xchg
jo
out
xor
repz
lret
test
into
fiadds
xlat
or
add
daa
insb
or
pop
leave
cmp
push
add
sbb
in
mov
sub
fwait
lret
mov
cmpl
inc
mov
jle
mov
add
and
sbb
lds
cmp
cmp
daa
or
pop
lock
xlat
jmp
fmul
xchg
or
scas
pusha
int3
mov
jb
test
adc
mov
cmp
push
inc
jns
lods
gs
and
jnp
xchg
mov
mov
cmp
ret
adc
add
mov
or
sbb
cmp
sub
out
rcl
je
andl
outsb
mov
jns
cmp
and
push
pop
std
xchg
mov
xor
out
adc
dec
mov
js
or
or
inc
call
pop
mov
lea
hlt
cmp
inc
adc
js
in
sbb
movsb
loopne
pmullw
add
sub
push
in
xchg
je
or
pusha
inc
into
inc
rcll
cmpsb
mov
inc
lds
fldt
sbb
ss
lret
iret
clc
xchg
and
pop
arpl
in
sbb
aas
dec
aam
mov
add
into
and
jg
add
clc
insb
pop
cwtl
jno
mov
and
jbe
popa
adc
and
mov
into
repnz
adc
mov
add
pop
lret
imul
xor
out
repz
call
jmp
dec
cmp
cli
pop
push
inc
sub
test
push
test
nop
xchg
xchg
call
mov
std
or
test
cmc
mov
sub
push
jo
mov
jmp
std
pop
mov
pop
lock
jl
inc
js
rcr
lods
dec
clc
xchg
es
sbb
ss
dec
cmpb
je
enter
or
add
inc
cmp
pop
int
jne
mov
ja
js
insb
xor
and
pop
and
leave
dec
mov
in
or
cmpsl
cs
or
mov
pop
icebp
or
add
fimuls
roll
mov
add
leave
cmp
mov
add
ficomps
jg
xchg
push
std
dec
fstpl
or
add
fcompl
add
arpl
loope
in
jle
decb
movsl
insb
in
cmp
dec
cmp
mov
pop
popf
repnz
pop
lahf
adc
xchg
push
push
stos
insb
xor
xorb
insl
mov
mov
das
xchg
push
cmp
mov
and
popf
je
xorb
pop
out
lcall
push
lret
nop
mov
add
sarl
xchg
push
mov
cs
popf
xchg
sub
add
enter
jle
push
repnz
mov
outsb
sbb
in
out
addr16
test
lret
icebp
andl
sahf
xchg
icebp
das
or
outsb
mov
jmp
or
test
movsl
arpl
in
stos
push
sub
push
or
mov
lret
mov
sbb
test
cmp
repnz
decl
or
jp
and
das
pop
bound
scas
inc
push
aam
shrl
lds
push
jp
mov
pusha
or
repnz
pusha
inc
inc
nop
sbb
jecxz
cmc
mov
jl
push
test
adc
dec
and
jns
cmp
xchg
in
sbb
clc
cwtl
mov
and
jmp
and
and
cmpsb
add
mov
push
or
pop
mov
loope
or
mov
out
test
loopne
xor
aam
in
mov
ss
or
lea
in
and
sbb
inc
lods
cmovbe
sahf
pop
lret
mov
in
sbb
hlt
jle
pop
imul
cmp
leave
ret
inc
das
fdivrl
mov
leave
fs
inc
push
outsb
bound
and
xchg
pop
cmpsl
and
je
sbb
sub
xlat
ret
mov
or
call
mov
std
cld
pop
repnz
je
xchg
jb
ljmp
xchg
pop
push
into
imul
lds
add
clc
dec
pop
movsb
mov
icebp
ret
imul
psubsw
repz
xor
repnz
aad
adc
add
push
in
stos
and
mov
cwtl
nop
out
inc
adc
fsub
test
jns
jmp
xlat
mov
jb
outsl
fwait
push
or
fisttps
outsl
lea
in
jge
sub
and
clc
mov
sub
rorb
pop
pushf
cmp
push
mov
lret
pop
ret
sbb
lea
fldl
add
dec
adc
lret
mov
fstps
adc
cmp
mov
inc
add
negl
push
sub
rorb
ljmp
js
movsl
lea
rcrl
xchg
pop
sub
aad
sub
pop
loopne
mov
xchg
push
cmp
repnz
jl
pop
pop
sbb
ret
test
das
jne
push
jne
add
repnz
push
jb
pop
xor
add
adc
pop
or
in
pandn
push
cmpl
adc
cmp
das
and
iret
inc
pop
and
popa
inc
movsb
add
das
xchg
cmp
xor
ljmp
rcrl
cmp
jge
or
cmc
mov
xor
ljmp
pusha
xchg
jo
dec
into
into
jl
leave
push
xor
mov
repz
in
repnz
sahf
dec
add
aad
int
jo
mov
jno
daa
jo
and
lea
xchg
and
movsl
xadd
push
sub
sbb
lahf
and
out
jl
xor
mov
jle
incl
pusha
add
pop
xchg
pop
cmp
push
mov
je
push
xchg
rol
xchg
shll
cli
adc
addb
scas
push
adc
dec
daa
fists
or
dec
pop
sbb
imul
daa
or
data16
shr
adcb
repnz
sbb
test
xlat
notb
sbb
outsb
pusha
das
mov
pop
cmp
cmp
xchg
jne
cli
adc
sbb
xchg
data16
lods
add
loopne
dec
jnp
rorl
mov
shlb
inc
loopne
jl
adc
rcrl
xor
push
push
insb
test
adc
dec
mov
nop
jge
and
inc
mov
xchg
iret
scas
cld
lods
repnz
adc
insb
das
pop
cmc
add
mov
adc
je
iret
hlt
inc
shrl
sbb
mov
shlb
enter
cmovnp
or
clc
jb
push
arpl
leave
sub
es
push
rcr
pop
popa
adc
lock
lahf
outsb
fxch
clc
sbb
jbe
inc
or
and
jne
jns
sbb
mov
push
jns
mov
mov
inc
test
mov
xor
fsubrs
jmp
insl
or
push
dec
push
push
int
and
xorb
xor
and
inc
sbb
testl
pop
adc
push
aas
jns
xor
inc
push
das
cmp
sqrtps
pushl
mov
shlb
cmp
xor
pop
das
pop
out
imul
dec
inc
orb
movsb
aas
cmp
jb
pusha
sub
push
js
sbb
popf
inc
fwait
dec
or
cwtl
shrd
sbb
pop
pop
or
sbb
or
fstps
adc
inc
jae
sahf
je
lock
fsts
aas
leave
inc
movsl
mov
push
icebp
mov
xor
lret
ss
push
bound
mov
xchg
jg
mov
add
mov
sub
fnstenv
cmovg
jle
leave
jo
outsl
inc
sbb
sahf
test
and
popa
daa
add
mov
imul
pop
hlt
stos
mov
add
dec
sbb
xor
dec
cs
stos
lods
xchg
hlt
mov
push
push
inc
sbb
adc
sbb
arpl
nop
mov
dec
icebp
cld
pextrw
jno
xchg
iret
jl
imulb
insl
xorb
and
dec
pop
and
jne
push
jmp
lods
mov
into
mov
in
into
sbb
mov
movsb
dec
mov
mov
sbbb
sbb
nop
lret
jecxz
adc
scas
cmpsb
sbb
cli
mov
sbb
dec
mov
and
daa
fmull
mov
dec
and
or
add
and
inc
out
mov
mov
pop
add
and
mov
fnstenv
mov
mov
push
push
movsb
fistl
andl
cmc
shll
lahf
clc
cmpsb
cmp
jnp
dec
cmp
mov
pop
mov
dec
loopne
sbb
xchg
je
sub
sbb
and
and
popf
sub
enter
js
cmp
sbb
add
xor
and
mov
minps
xchg
arpl
dec
cmp
sbb
and
cli
mov
pop
je
inc
add
jmp
ret
push
out
or
stos
sbb
in
call
scas
mov
ljmp
nop
movsb
sbb
sarl
mov
jns
pushf
sub
push
dec
add
and
arpl
cs
xchg
dec
int
sbbl
gs
pop
xchg
dec
lods
repz
add
xchg
ss
scas
sub
inc
mov
ss
xor
cwtl
sub
fisttpl
pop
test
push
inc
mov
ss
mov
vmovlps
hlt
xchg
and
rclb
loop
addl
shlb
pop
or
mov
pop
in
and
adc
jl
adc
stos
dec
loopne
and
sbb
push
movsb
test
push
add
ds
loop
aad
enter
lret
sub
pop
lods
sbb
and
pusha
inc
push
mov
lds
and
pop
sub
and
in
inc
aaa
or
jp
jecxz
aam
mov
pop
pop
bound
dec
mov
mov
mov
mov
mov
repz
stc
fmuls
pop
daa
pop
dec
fxch
imul
mov
inc
filds
cmp
xor
daa
inc
repnz
aam
popf
and
in
sbb
dec
xor
inc
push
push
dec
mov
mov
outsl
pop
and
enter
int
jo
xchg
add
lods
mov
lahf
push
inc
lret
add
hlt
adc
push
mov
ror
adc
mov
mov
sbb
jmp
push
leave
loop
sbb
bound
js
xchg
cmp
shll
xor
xchg
loopne
push
add
sbb
pushf
je
test
jns
lods
inc
sbb
cmp
and
sbb
ret
hlt
daa
cmpb
mov
inc
je
push
out
cs
xchg
lea
jno
clc
js
sti
mov
insb
dec
lea
pop
das
xorl
outsl
insb
pop
pushf
or
and
xchg
cmpsl
scas
in
push
syscall
mov
test
movsb
inc
test
xor
inc
cwtl
cld
mov
jns
mov
fwait
sbb
das
jle
int
or
mov
or
ljmp
outsl
rorb
mov
add
and
call
out
int
pop
fdivr
mov
rolb
fsubs
cmp
cmp
jns
loop
adc
enter
push
ret
sub
aam
es
add
test
sarb
inc
fadd
and
push
jp,pt
and
hlt
loopne
sar
sub
push
sub
xchg
pop
cmp
fildl
call
mov
and
cmc
and
sub
pop
arpl
jecxz
dec
insl
xchg
loope
adc
ret
fs
xor
sti
popa
pop
fildl
mov
pop
or
dec
sbb
sbb
call
jl
pop
pop
xor
notb
mov
mov
sbb
add
and
hlt
dec
or
inc
test
mov
inc
dec
lcall
es
testb
fwait
es
dec
es
call
mov
in
mov
cmpsl
outsl
inc
mov
hlt
add
add
jns
pop
fists
sbb
frstor
xchg
fmul
cmpb
lods
pop
mov
sub
js
sbb
pushf
leave
leave
push
or
inc
lods
xchg
test
mov
push
pop
jle
ret
pop
mov
xchg
test
pushf
jl
jecxz
push
pop
popf
movsb
leave
loop
test
stos
add
cmp
je
push
in
and
rorl
cmp
and
aam
sti
inc
scas
add
lret
xor
dec
clc
jns
mov
cmp
jns
das
std
fsubs
jg
mulb
sbb
je
leave
jae
lods
or
add
xchg
je
xor
xchg
sbb
add
xor
pop
mov
cmp
clc
hlt
les
fwait
push
mov
in
mov
sub
mov
xor
ret
je
add
inc
push
mov
cmp
dec
push
add
sbbl
dec
dec
movsl
xlat
sub
dec
xor
jne
ljmp
sbb
out
imul
mov
sbbl
sbb
pushf
stc
leave
push
mov
mov
sub
adc
in
rcrb
lahf
in
in
popf
pop
dec
loopne
add
sbb
movsl
pop
inc
xor
mov
lcall
xor
sahf
jo
adc
arpl
pop
sub
inc
sbb
daa
or
or
ret
lods
add
dec
insb
enter
scas
scas
iret
aaa
add
and
and
cmp
lret
imul
aas
ret
addb
pop
cltd
push
add
jge
xorb
sti
outsl
shrb
aam
test
inc
std
arpl
fnstcw
mov
lods
sbb
out
jbe
and
mov
int
iret
sub
fcomps
or
pop
insb
jge
insb
insb
sbb
jnp
aaa
xlat
movlhps
xchg
fcmovbe
ja
push
mov
jns
dec
xchg
xchg
inc
adc
lods
add
push
fmuls
cld
test
cs
jl
mov
movsb
xchg
push
sub
jp
xchg
jnp
pop
mov
sub
iret
jecxz
dec
into
mov
data16
fwait
push
ss
xor
sbb
xor
mov
mov
lahf
mov
inc
in
scas
adc
adc
mov
lock
xor
test
inc
inc
scas
cmpl
sbb
test
sbb
and
inc
or
daa
mov
dec
push
adc
iret
jo
sbb
bound
and
or
cwtl
dec
aam
pop
xchg
pusha
fmuls
or
inc
inc
sub
mov
sub
orb
mov
cmp
lods
push
lahf
add
daa
addr16
ljmp
popa
xchg
sub
jo
mov
mov
sub
ds
sbb
icebp
das
pop
repz
xor
loopne
imul
mov
adc
movsb
lods
hlt
xor
jmp
fwait
pop
inc
pop
mov
sub
adc
dec
pop
lds
pop
arpl
sbb
imul
stos
stos
les
sub
sub
jae
das
jmp
imul
movsl
shrl
jl
pop
ja
adc
cmp
push
or
orl
daa
out
mov
daa
cmp
rorl
dec
pusha
adc
cmp
xchg
imul
xchg
mov
mov
sbb
adc
mov
into
jnp
push
iret
xlat
outsb
sbb
mov
dec
aad
or
xchg
push
pop
outsl
jo
ljmp
xor
and
rolb
add
test
xor
xchg
push
out
xor
cmp
or
sbb
sar
dec
or
or
push
loopnew
mov
xchg
add
dec
aaa
popa
cmp
cmp
mov
mov
jmp
xchg
cmpsl
addl
shrl
mov
sahf
pushf
sbb
rolb
data16
mov
and
mov
stos
ret
cltd
push
inc
mov
jo
outsb
iret
inc
cmpsb
mov
lds
sbb
ljmp
dec
rcrb
mov
mov
int
xor
cmp
jb
leave
fadds
mov
lahf
sbb
into
loopne
mov
xorl
aad
add
jo
xor
push
in
cmp
pop
outsb
push
shlb
loopne
insb
lahf
rcrl
fwait
roll
fisubs
pop
inc
adc
push
and
test
addr16
mov
je
or
ja
cmp
popf
inc
pop
shr
dec
fildl
xchg
and
or
adc
mov
shll
leave
and
shll
outsb
pop
fwait
pop
daa
hlt
add
xor
mov
cmp
aam
adc
push
cmp
jo
push
mov
jle
leave
mov
aad
lods
test
scas
add
pop
sbb
mov
lods
mov
xor
lret
mov
pop
adc
in
push
sbb
and
mov
shrb
adc
push
movsb
sub
mov
xchg
mov
push
or
jb
mov
push
dec
lret
loop
sbb
andl
and
sbb
fbld
inc
cmp
icebp
inc
mov
jae
int3
call
les
jl
dec
sbb
in
jl
test
push
dec
out
mov
or
outsl
adc
add
dec
roll
es
fstl
sub
ds
sub
aam
insb
push
xor
jmp
lahf
jl
xor
xchg
jle
or
shlb
popf
mov
xchg
ljmp
nop
sti
pop
pushf
test
insl
cld
add
xchg
mov
fwait
xchg
inc
mov
dec
add
clc
pop
add
dec
js
inc
mov
and
xorl
inc
fsubl
call
mov
pop
std
xor
fstpl
cs
xor
adc
fwait
or
cmp
stos
shr
cmp
rdtsc
jle
add
shlb
test
nop
inc
mov
pushf
lds
xchg
mov
fiadds
pushf
adc
out
in
add
enter
popf
inc
rcll
int
sbb
sarl
dec
xchg
push
or
outsb
cmp
xchg
je
xchg
or
lret
or
cmp
sbb
sbb
mov
and
lahf
ret
add
popa
sub
push
mov
aaa
jae
xchg
adc
fsub
scas
dec
loopne
ja
pusha
out
inc
sbb
rol
add
daa
int
push
das
popf
or
and
add
sub
clc
into
aas
mov
push
xor
clc
mov
movsb
mov
aad
stc
shll
jo
mov
adc
jp
pushf
aam
or
cwtl
std
push
or
imul
int3
movl
jle
daa
shlb
sub
aam
and
jne
add
xchg
sub
test
dec
push
std
mov
lds
add
sub
and
xchg
jno
push
mov
xchg
popl
ret
cwtl
add
ljmp
aas
clc
popf
pop
cmp
ja
and
cmp
xor
pop
daa
or
gs
cld
pop
inc
inc
inc
enter
mov
ljmp
dec
push
ret
adcb
add
mov
xor
dec
xchg
scas
xor
retw
dec
mov
push
aam
xchg
add
dec
fisubs
xor
and
jl
pop
fisttps
push
pushf
fisubs
sub
cmp
mov
xor
cs
cs
xchg
dec
inc
sbb
cmp
jg
adc
test
addl
int
cmp
cld
in
add
ljmp
add
mov
cmp
lret
sub
mov
ss
and
cmpb
pushf
cmc
sbb
imul
cmp
das
adc
adc
xchg
push
mov
test
sbbb
jl
enter
cli
cmpsb
imul
cmc
andb
popf
adc
xchg
xor
pop
dec
imul
add
adcl
mov
jge
push
and
stc
mov
es
add
pop
add
in
dec
ret
pop
dec
pusha
pop
jecxz
mov
shlb
clc
mov
pop
mov
xorb
outsb
and
dec
mov
jp
pop
add
repz
add
fwait
arpl
je
mov
inc
pop
push
add
flds
push
jmp
shll
repz
push
mov
call
outsl
andb
inc
pushf
mov
mov
cs
mov
or
aam
mov
pop
mov
notl
adc
ds
mov
ret
daa
sbb
and
dec
sbb
mov
aaa
cmp
or
test
loop
dec
jo
les
stc
jle
or
sbb
add
dec
or
adc
add
fistps
mov
add
sub
add
push
movsb
rol
outsb
das
adc
xchg
mov
pop
iret
cmpl
mov
leave
dec
aam
push
mov
andl
or
nop
out
cmp
or
movsb
xchg
in
push
out
mov
and
adc
mov
push
xchg
xchg
out
ja
test
scas
dec
imul
pusha
sbb
popf
fcmove
lahf
test
xchg
loopne
repz
arpl
mov
addl
jmp
hlt
and
push
jb
lock
push
out
loopne
pusha
pop
jle
cmp
mov
stos
xchg
dec
sub
divb
test
sub
in
rcrl
push
mov
adc
repz
jne
int
xchg
cmp
adc
xor
call
jnp
inc
addr16
or
pop
fnstsw
mov
stos
and
inc
pop
lock
inc
ret
inc
jmp
xor
repnz
loope
iret
push
add
sbb
fiaddl
popa
or
dec
lret
or
inc
pop
fildl
or
pushf
shr
imul
nop
jo
fsqrt
shlb
outsb
cmp
fisubrl
xor
xlat
push
jno
stos
cmpsl
addr16
sub
dec
mov
das
dec
mov
mov
pushf
repz
clc
xor
lret
and
pop
and
adc
pop
mov
fistl
lea
pop
loope
mov
inc
fwait
jbe
movl
mov
nop
add
dec
lcall
sub
mov
int3
pop
in
lcall
dec
sub
outsb
sbb
push
push
xchg
loopne
out
jnp
mov
push
push
movsb
scas
ss
ja
push
xchg
dec
cmp
pop
repnz
pushl
jne
mov
xor
and
jns
rorl
pop
sbb
scas
in
nop
mov
pop
add
xor
jle
add
in
push
jl
push
clc
mov
pop
xor
popa
jg
insl
inc
xchg
orb
add
fs
sahf
cmp
dec
sbb
aad
jl
stos
icebp
push
or
or
add
inc
mov
jo
pop
mov
pop
or
pop
sahf
sub
mov
rclb
aam
call
cmp
cmp
mov
mov
aaa
adc
rorl
adc
jl
out
xor
fsubrs
scas
mov
ud0
or
pavgw
pop
adc
ret
in
xor
mov
and
push
push
popf
std
cmp
mov
ljmp
mov
xchg
sub
mov
push
les
mov
dec
ja,pt
in
xor
roll
add
add
jns
stos
insl
jmp
pop
dec
pop
push
sub
bound
enter
xchg
dec
mov
push
adc
sbb
pop
aad
mov
sbb
cmp
in
leave
out
mov
mov
and
pop
cvtpi2ps
sbb
clc
outsb
shll
lds
xor
or
mov
sub
andl
shll
dec
loopne
add
popa
ror
insl
mov
js
add
mov
jmp
or
loopne
mov
test
dec
jp
jp
popf
mov
mov
mov
push
in
nop
mov
repz
xor
pop
fnstenv
cmpsl
mov
outsl
xchg
mov
jb
lret
mov
adc
stos
cmp
mov
inc
paddsb
ljmp
mov
mov
sbb
push
add
dec
clc
pop
dec
fistl
ljmp
stc
fnsetpm(287
cmpsb
xchg
xor
cmp
into
loop
mov
adc
popa
pop
inc
sub
pop
and
sub
addr16
mov
xchg
repnz
std
cs
call
and
ss
add
out
cmp
pop
mov
imul
enter
cld
push
add
fcomps
outsb
mov
les
mov
insb
rol
inc
outsb
sbb
cmp
call
adc
cs
cmp
pop
inc
andb
mov
add
push
int
xchg
das
fadd
in
or
testl
cmp
daa
call
or
mov
and
and
lcall
or
jbe
into
adc
insb
jns
cli
xor
adc
sub
xchg
pop
and
hlt
std
inc
test
sub
in
and
out
daa
into
push
xchg
fistl
cltd
idivl
ljmp
push
in
cmp
inc
es
push
mov
add
hlt
orb
mov
xchg
call
inc
dec
cmc
adc
loope
in
sbb
mov
stos
cmp
mov
pop
scas
cs
js
movsb
inc
cmp
js
xchg
pop
repz
dec
adc
sbb
negb
rcrb
fdivl
leave
jnp
cmp
roll
and
popf
lret
dec
mov
inc
pop
stc
movhpd
pop
push
mov
das
les
adc
mov
adc
je
mov
adcl
mov
stos
leave
push
mov
call
inc
cwtl
and
jne
or
jbe
add
mov
insb
inc
sub
xor
mov
xor
add
and
inc
push
cmp
bnd
imul
repz
andb
je
cmp
and
lds
pop
insl
xchg
sbb
cmpl
mov
lahf
test
rolb
daa
daa
dec
mov
std
or
dec
jge
xchg
jne
or
das
stos
mov
or
loope
jne
mov
pop
mov
mov
in
adc
sbbb
lock
loope
mov
and
jne
lahf
dec
out
ror
sbb
cmp
push
adc
fwait
or
push
xchg
add
dec
cmp
hlt
std
add
mov
daa
pop
sbb
das
repz
and
mov
adcb
inc
push
lock
mov
mov
mov
or
inc
and
cmp
int3
rclb
xor
or
pop
xchg
fdivp
mov
cmpl
rcrb
inc
mov
inc
jnp
sub
adc
jns
outsb
xor
insl
enter
in
add
cld
iret
and
adc
jae
pop
mov
inc
sub
test
adc
pop
out
ret
and
adc
mov
and
cmp
popa
sub
clc
dec
lock
pop
repnz
push
lods
rorl
push
mov
mov
insb
cs
push
cmp
jg
nop
jp
mov
stos
add
stc
insb
inc
cmp
das
jge
inc
jle
in
add
daa
sbb
fmul
push
mov
js
jo
cmpsl
pop
adc
es
insb
mov
fstpt
mov
mov
lods
test
les
lods
pop
das
xor
and
test
push
fnsave
aaa
inc
inc
xchg
insl
xchg
ficomps
orl
sub
pop
adc
adc
cmpsl
dec
sbb
pop
or
daa
and
movsb
or
jecxz
inc
or
stc
cmp
popf
mov
xchg
pushf
pop
ljmp
adc
mov
sbb
dec
nop
test
adc
movsl
add
and
sti
aad
ficomps
mov
movsb
cmpsl
and
add
je
nop
cli
sbb
jl
pop
pusha
sub
int3
inc
mov
push
daa
fadds
cld
pop
adc
dec
pushf
mov
popa
addr16
gs
mov
dec
ret
dec
punpcklbw
cli
or
or
inc
xchg
mov
push
and
inc
push
jo
js
dec
cli
push
or
xor
inc
inc
sbb
dec
popf
add
scas
push
xchg
lcall
cmc
sahf
dec
push
test
shl
xor
insb
fstp
or
divb
push
mov
out
adc
jg
xchg
adc
sub
into
xchg
fsubr
dec
push
or
xchg
and
or
sbb
jl
mov
movsb
aad
out
test
mov
rol
imul
sahf
popa
jns
or
rorb
test
dec
push
scas
cmp
stc
push
add
cmp
or
pusha
dec
push
data16
add
sbb
jo
pop
leave
lret
add
and
fs
js
dec
leave
cs
jbe
pushw
imul
xor
jge
movsb
or
adc
fisubl
dec
mov
cmp
in
xorb
loopne
cs
mov
xor
xor
adc
scas
cld
stc
clc
enter
shrb
dec
sbb
aaa
sub
test
sbb
or
push
pop
sub
or
daa
iret
pusha
dec
jecxz
inc
add
xchg
pop
pop
ds
sarl
fs
xor
pusha
aam
cmp
push
add
stos
icebp
mov
mov
in
inc
sahf
out
sbb
inc
add
push
mov
cmpsl
sub
sti
and
cmp
cli
outsb
mov
push
dec
in
cs
cmp
sahf
xchg
leave
mov
mov
stos
lods
pop
mov
xor
or
add
lds
jb
add
test
xor
sub
inc
jae
andb
and
mov
fwait
cmp
movsl
inc
mov
and
dec
fwait
xchg
popf
es
pop
push
popf
addl
loopne
sbb
or
push
jns
les
add
sti
jb
jbe
or
sbb
push
cmp
ret
sar
int3
jb
and
pop
pop
pop
xor
js
cmp
daa
pop
mov
pop
mov
fsubrl
leave
pop
mov
shlb
imul
lds
outsl
popf
fstpt
xchg
xchg
mov
mov
jl
into
loopne
rorl
mov
push
outsb
xchg
add
lock
rclb
mov
dec
stos
clc
inc
ret
les
fldcw
vpunpckhdq
enter
add
pop
fimull
pop
sub
or
xchg
sbb
stos
or
push
cmp
inc
dec
sub
jmp
and
test
or
cmp
push
or
ss
sbb
push
dec
call
fidivs
jbe
cmp
out
inc
sarl
xorb
pop
add
fisttpl
pop
sbb
and
mov
sub
mov
sbb
mov
mov
or
lods
pop
inc
mov
adc
cmp
addr16
jb
add
inc
xor
iret
into
es
or
mov
adc
daa
rcl
and
jbe
test
out
and
pusha
sub
xor
test
je
arpl
and
sbb
xchg
outsb
xchg
sbb
mov
inc
fisttpl
push
mov
jl
aas
mov
lea
mov
inc
gs
mov
pop
push
jl
adc
and
pop
in
adc
or
pusha
pushl
testl
jmp
pop
dec
or
es
dec
sbb
pushf
cmp
xor
fs
pop
test
adc
sbb
mov
inc
xlat
fs
loop
in
jb
push
lcall
mov
stos
dec
pop
sbb
add
sahf
out
cmp
cwtl
mov
add
xchg
ljmp
and
cmp
vmwrite
pop
repnz
or
adc
fldenv
inc
jmp
imul
aam
xchg
xor
repz
pop
push
add
js
in
gs
mov
orl
mov
push
rcrb
mov
lret
mov
xor
movsl
pushf
xor
sbb
sub
fwait
mov
icebp
std
jbe
adc
rcrb
fdivs
insb
sub
out
push
jl
adc
filds
les
mov
es
and
sbb
cltd
push
push
rcrb
and
xor
pop
cli
js
ja
add
cmpsl
loopne
popf
lods
mov
shll
rcl
fdivrp
in
dec
in
mov
imul
insb
xchg
mov
in
sbb
int
rclb
out
add
nop
into
inc
les
popf
and
mov
outsw
pinsrw
inc
and
dec
lds
cmp
or
xor
push
clc
cltd
and
add
leave
xchg
adc
jecxz
cmpb
dec
outsl
pop
out
inc
pop
shrb
pusha
das
je
adc
iret
and
dec
popf
mov
xchg
jb
mov
lods
push
xchg
sub
jo
pop
mov
movsl
inc
loope
ljmp
call
adc
sbb
adc
and
mov
cmp
adc
dec
push
sbb
xor
xchg
sub
dec
das
xlat
dec
adc
xorb
and
out
jne
outsl
mov
push
stc
cs
fimull
xchg
incl
ret
dec
push
fldl
addr16
mov
xor
test
insb
sub
popf
cmp
pusha
jb
outsl
jne
jns
lret
sub
inc
jno
lods
out
xchg
or
and
jb
inc
cmp
mov
lcall
mov
jns
and
popf
inc
add
or
mov
inc
rol
push
sbb
imul
mov
cwtl
mov
cmp
cmc
ret
out
lds
adc
mov
insl
or
inc
pop
fsubrs
and
dec
scas
out
jl
frstor
in
test
jl
add
sub
or
fbld
bound
or
xchg
popf
lock
rorl
add
pop
arpl
dec
lahf
js
mov
or
pop
fcompl
pop
xchg
sub
lock
jl
pop
inc
mov
and
or
xlat
movsl
sub
lds
fbstp
mov
ret
inc
or
xchg
cmpl
cmp
enter
je
dec
das
lahf
dec
inc
adc
mov
or
and
sub
add
adc
xchg
adc
roll
gs
mov
cmp
fldenv
inc
and
nop
add
add
push
out
mov
cmpsb
stos
int
cmpl
ret
pop
mov
or
imul
imul
fdivr
pop
or
outsl
fldcw
dec
push
out
mov
test
bound
lcall
lret
pusha
mov
pop
loop
xchg
push
jle
out
clc
sbb
or
test
test
xchg
es
popf
adc
xchg
out
lea
push
idivb
adc
fnstcw
sbb
jl
lds
enter
lret
push
or
addr16
outsl
gs
xchg
and
dec
sbb
test
xor
ret
fs
jp
movsl
addr16
jl
test
pop
imul
jmp
sub
sbb
bound
cmp
fimuls
sub
mov
mov
xchg
ss
push
inc
inc
rolb
jns
mov
cmp
insb
ror
xorl
and
lods
inc
sbb
addr16
add
push
add
cmp
sub
jle
mov
cmpb
and
cmp
xchg
pusha
hlt
adc
inc
dec
mov
mov
popf
mov
cmpsb
fwait
mov
pop
or
cmc
aad
sbb
pop
dec
inc
cltd
daa
mov
testl
sbb
or
lds
sbb
addl
add
fldcw
or
mov
in
pushf
lock
testb
aaa
sahf
or
icebp
das
inc
in
mov
dec
dec
xchg
icebp
gs
test
add
add
shll
std
subl
in
lods
or
test
pop
dec
push
dec
xor
stos
lahf
int3
flds
aaa
jecxz
insb
sub
mov
lahf
scas
add
xchg
int
mov
test
scas
insl
in
les
mov
sbb
dec
xor
lea
add
xor
adc
loopne
push
xor
cmp
inc
je
xlat
sub
adc
repz
subb
mov
inc
xchg
sub
or
cmp
imul
in
fdivrl
iret
jns
xchg
xchg
xchg
add
jno
popa
or
jo
test
fildll
stc
mov
out
loopne
mov
sbbl
popf
push
cmp
jle
test
call
mov
loopne
xlat
dec
daa
sbb
enter
inc
inc
sahf
or
cmpsl
pop
dec
aam
mov
aaa
test
fmul
jo
inc
mov
xchg
rcrb
movsl
repnz
push
adc
aam
sub
jl
push
push
push
add
pop
mov
shll
and
jb
adc
xchg
lret
loopne
fisubrs
xchg
es
fwait
xchg
add
loope
fidivs
sbb
dec
and
stc
dec
mov
sbb
cs
pop
sbb
test
jl
mov
and
rclb
data16
and
movsb
ds
sub
pop
or
xor
hlt
iret
insb
nop
cmp
push
push
mov
insb
aad
jmp
mov
push
les
outsl
adc
scas
sbb
jno
xor
mov
fcoml
dec
adc
psadbw
leave
shlb
out
stc
test
xchg
dec
das
mov
push
xor
imul
daa
call
xor
xor
push
add
ds
pop
fsts
stos
sub
ficompl
test
xchg
push
xchg
imul
push
lods
out
scas
sahf
loopne
pushw
pop
cmpb
jge
sbb
fsubrl
add
jge
and
cmp
mov
cld
xchg
pop
xlat
push
jns
pop
sub
in
mov
pop
add
pop
bound
mov
scas
jnp
dec
or
sbb
xorl
enter
addl
mov
hlt
and
and
movsl
nop
ja
bound
cltd
mov
inc
pop
shlb
ja
xor
jge
aad
cs
push
mov
inc
cmp
in
lea
clc
loop
ret
pop
les
imul
pusha
sbb
lock
cli
incb
xchg
add
movsb
or
in
mov
inc
xchg
and
ret
movsb
fimuls
push
xor
push
mov
in
mov
xchg
dec
inc
jo
xor
sbb
sbb
and
lods
push
jmp
cwtl
or
test
cs
lahf
add
dec
mov
jnp
pop
sahf
jns
push
repnz
dec
icebp
mov
mov
xchg
pop
rorl
xor
sbb
out
in
call
aam
xchg
or
int
xchg
test
fisttps
jns
into
push
or
js
aam
pop
pop
in
xor
daa
xchg
mov
mov
int
imul
xchg
es
lahf
aaa
inc
bnd
je
pop
sub
data16
das
mov
xchg
inc
xlat
inc
cmpl
mov
aam
xor
std
cmpsb
es
xchg
fidivrs
movsl
and
outsb
daa
mov
sbbl
jne
mov
add
imul
xchg
xchg
call
xor
adc
mov
nop
repz
mov
stos
testl
pop
pop
xchg
mov
rclb
rclb
shlb
pop
xchg
movb
xor
fcomps
enter
dec
jbe
aam
popf
stos
mov
lods
cmp
ds
pop
mov
xchg
scas
pusha
leave
mov
stos
outsb
or
clc
xor
adc
add
push
mov
lds
sub
hlt
lods
sbbb
insb
and
inc
xchg
hlt
cli
clc
or
pop
push
shlb
mov
or
notb
fsubrl
addl
xor
xchg
idivl
push
pop
pop
ret
dec
pop
lock
pusha
adc
movsl
sub
sbb
xchg
xchg
ds
mov
or
aaa
daa
jl
mov
sbb
push
test
daa
add
mov
xchg
add
mov
jle
cmc
add
and
aaa
icebp
inc
ljmp
mov
and
js
mov
add
scas
xor
pop
push
sub
xchg
out
pop
mov
fs
and
adc
add
fistpll
pop
test
int3
sub
sbb
jb
jnp
int
ljmp
xchg
outsb
insb
dec
ret
loop
xchg
mov
inc
adc
addr16
dec
push
in
or
decb
sbb
stos
add
into
orb
fmull
outsl
das
cmp
pusha
xor
xchg
popf
icebp
ror
push
adc
aad
ss
ficomps
out
dec
or
jp
sbb
sub
mov
je
dec
clc
cli
mov
fcmovb
subl
pop
cs
mov
rorb
lcall
pop
iret
rcrb
push
lods
sub
inc
or
dec
mov
sub
cmp
jo
daa
shll
sbbl
mov
or
push
inc
outsl
test
loopne
dec
aaa
rclb
pop
pop
leave
sub
enter
sub
test
mov
xchg
xchg
pop
mov
inc
and
push
jns
iret
aad
xchg
mov
or
mov
and
push
test
decl
repz
inc
mov
imul
cmpxchg
call
dec
xor
lret
xchg
xchg
sbb
stos
hlt
xchg
out
adc
movsb
add
mov
rcll
inc
mov
jns
mov
xchg
enter
les
cmp
add
les
sti
aam
or
dec
adc
pop
mov
ficompl
arpl
dec
jb
xor
push
insb
dec
dec
dec
insb
xorb
cmp
ja
push
clc
sub
pop
pop
and
dec
data16
jg
repz
jae
push
fldenv
aas
inc
add
jg
xor
je
js
xchg
xor
xchg
push
dec
sbb
sub
leave
pop
xchg
iret
int3
mov
std
out
stos
cmp
fisttpl
dec
add
mov
insb
mov
cli
mov
in
loopne
xchg
or
push
rol
inc
add
push
in
lret
scas
jl
bswap
data16
xor
pop
pop
call
mov
es
sub
add
push
mov
mov
loopne
fwait
je
das
jge
loope
dec
xchg
sbb
addb
stc
mov
sbb
mov
sar
pop
push
movsb
dec
adc
mov
mov
adc
pop
adc
shr
das
adc
mov
push
sbb
push
ds
outsl
and
adc
xchg
shll
outsl
das
rol
cmpsb
jo
orb
bound
in
inc
mov
and
fsubrs
inc
xor
jne
es
push
ja
stos
dec
loopne
and
pusha
cmp
adc
nop
sbb
push
sbb
xor
jb
frstor
pop
in
pop
mov
loope
xor
adc
fbld
xchg
shlb
popf
and
bound
or
pop
sar
cmc
cmp
rolb
scas
inc
mov
jo
ja
sbbb
inc
sbb
jmp
push
xor
mov
daa
rolb
push
cmp
mov
popf
jbe
jb
push
decl
mov
push
cwtl
mov
rclb
jb
je
das
and
sti
xchg
or
lods
rorb
ljmp
xchg
or
mov
test
xchg
pop
dec
mov
mov
or
mov
test
ja
inc
orb
fwait
cmp
sbb
sbb
add
hlt
rorl
sbb
xor
xor
jo
xor
mov
lds
mov
mov
negl
mov
xor
pop
cltd
and
loop
pop
push
jne
mov
push
sbb
aam
ss
or
push
jo
cmpsb
add
es
push
xchg
movsb
shll
hlt
lea
add
cmpsl
or
repnz
and
push
and
mov
pop
jle
jo
and
test
ljmp
xorb
and
sbb
jnp
popf
cmp
push
push
adc
mov
push
dec
push
sti
clc
negl
rcl
imul
clc
pop
push
mov
fwait
jle
pop
push
das
cmp
inc
jp
mov
rclb
cmpsl
jns
dec
into
inc
imul
sub
jne
jg
push
xor
or
dec
std
mov
push
xor
xchg
adc
int
fxch
add
dec
dec
loopne
or
mov
mov
mov
xchg
in
pop
xor
mov
out
xchg
loopne
shll
cmp
sub
sbb
popa
push
push
push
xor
push
ljmp
icebp
cltd
aam
les
xchg
push
xchg
mov
into
repz
insl
pusha
mov
sbb
rcr
adc
repz
das
push
dec
pop
pop
cmp
imul
sub
dec
add
mov
mov
test
xor
mov
or
ret
inc
push
inc
jp
add
xchg
add
jl
push
pop
pop
into
xchg
push
cmp
pop
ss
pushf
add
cmp
mov
adcb
jmp
loop
leave
xlat
push
xor
test
pop
xchg
popa
movsl
inc
inc
pop
insb
mov
ss
aad
pop
sub
in
and
lds
push
das
mov
ror
mov
or
inc
pop
lcall
imul
pop
xchg
and
and
mov
mov
mov
adc
sub
jmp
mov
jae
and
roll
fistpl
inc
addr16
or
loopne
addl
push
dec
mov
sbb
adc
loopne
in
mov
movsb
test
push
iret
dec
aam
loope
dec
mov
inc
movsl
arpl
xchg
cmp
xor
inc
cli
iret
or
and
xchg
dec
push
das
cld
test
pop
lahf
add
xchg
scas
mov
xbegin
stos
jne
inc
repz
in
xchg
jmp
push
into
imul
xor
fsubp
stc
nop
lods
adc
enter
bound
push
inc
xor
mov
mov
push
push
dec
loop
push
jle
orb
ja
movsl
adc
mov
mov
fpatan
adc
test
push
das
aas
or
mov
jne
ljmp
xor
mov
push
xchg
iret
add
jle
aam
adc
jecxz
push
insl
xchg
stos
data16
clc
out
jne
rorl
scas
flds
pop
or
mov
sbb
cmp
pushf
add
add
clc
cwtl
mov
adc
addr16
lret
lea
mov
xor
addr16
and
sub
negb
inc
mov
leave
ja
pop
xor
leave
push
mov
and
ljmp
cwtl
pop
pop
jns
push
clc
push
pop
xchg
repz
mov
add
dec
cltd
dec
pusha
repnz
push
arpl
popf
or
jmp
xchg
and
lods
test
jmp
jb
imul
ret
pop
dec
xchg
shll
loope
xchg
dec
lds
xchg
loopne
popf
xchg
push
xchg
and
nop
mov
addr16
sbb
push
sarb
pop
repz
sbb
mov
adc
aad
mov
call
mov
vmwrite
pop
or
sub
xchg
xchg
sbb
pop
mov
das
es
sbb
mov
push
cmpsl
jne
add
inc
leave
cmp
or
int
les
stos
sbb
test
dec
repnz
xchg
xor
add
dec
or
jecxz
aad
cltd
adc
test
ljmp
push
or
lea
in
jp
in
mov
inc
outsb
leave
fisttpl
sbb
mov
iret
inc
mov
aad
insb
outsl
xchg
push
in
xorl
pushf
pushf
lods
aam
mov
push
addl
or
add
in
icebp
enter
int3
xor
xor
call
sbb
xor
in
out
incl
iret
aam
rorb
jmp
data16
je
pop
ss
xorb
lahf
mov
popw
add
sub
add
and
cmp
adc
mov
test
shlb
mov
out
dec
rolb
pop
repz
add
inc
cmpsl
call
ds
and
flds
pop
sbb
mov
std
xchg
add
jl
xlat
xchg
inc
jne
and
xchg
xor
call
dec
xor
outsl
add
ret
gs
and
sbb
clc
cmp
pop
mov
inc
mov
test
and
stos
cmp
shlb
and
jnp
clc
xor
and
dec
out
ret
sbb
stos
rolb
sti
pop
insl
jecxz
pusha
dec
das
pop
push
jge
popa
pop
dec
es
outsb
xchg
xchg
in
sub
lods
pop
or
data16
fmul
hlt
lret
cmpsl
push
mov
add
or
or
and
add
inc
xchg
and
mov
mov
add
mov
add
mov
aas
sub
enter
or
sub
push
lahf
dec
or
adc
inc
aam
sub
jo
imul
cltd
ja
in
je
jbe
cmp
std
stos
gs
nop
sbb
push
xor
icebp
pop
mov
lret
push
add
repz
mov
enter
int
push
imul
add
sbb
pop
testb
xorb
xor
ljmp
mov
lock
jmp
je
int3
or
mov
cmp
sub
sub
insb
lahf
cmpsl
add
dec
cmpsl
mov
cmp
cwtl
repnz
leave
outsb
lock
sub
data16
push
test
in
addr16
jge
mov
and
call
das
sbb
cmpsl
adc
ja
cmp
push
jle
lret
ds
sub
scas
dec
adc
xchg
cmp
sbbl
insl
adc
push
mov
pop
add
dec
icebp
cmpb
cmp
in
push
leave
imul
insl
test
pop
dec
je
repnz
pop
lret
mov
jmp
test
lds
pop
or
adc
xor
xchg
and
leave
push
shlb
or
daa
popa
sbb
sbb
out
jns
or
mov
imul
mov
hlt
push
adc
int
movsb
daa
xor
imul
and
fmuls
cmp
jb
movsl
and
movsb
xchg
xor
lock
dec
sahf
inc
rcrl
mov
ds
inc
or
movsb
sub
in
mov
ljmp
lcall
cld
popa
add
add
lret
and
xor
add
dec
call
bound
in
lret
inc
nop
xchg
out
sub
das
or
mov
cwtl
inc
test
cmpsb
fistpll
pop
and
loopne
test
cmp
dec
mov
add
inc
cmp
lret
xchg
pusha
dec
pop
xchg
mov
aam
clflush
cli
ja
ret
addb
sbb
pop
pop
sub
or
loop
pop
cmpsb
shlb
and
cwtl
mov
sti
inc
or
dec
push
xchg
fdivrs
push
popf
pushf
mov
and
mov
andl
test
cltd
jo
mov
push
fisttps
repnz
flds
lds
loop
je
sbb
mov
adc
sbb
stc
js
insb
into
aam
xor
jb
adc
sub
add
jne
das
cld
adc
subb
pop
ss
addr16
adc
stos
sbb
bound
mov
js
lock
xor
ds
rclb
nop
pop
popa
mov
lods
jmp
sbb
pop
rolb
mov
or
mov
add
cs
sbb
adc
add
mov
addr16
xchg
sbb
loopne
inc
sbb
inc
fbstp
or
das
adc
stos
or
inc
push
pushf
add
adc
clc
decb
icebp
mov
sahf
int
cmp
loope
mov
scas
roll
cmp
xchg
aad
cmp
mov
jo
sub
pop
rcll
nop
lds
test
insl
movb
xor
dec
inc
pop
lcall
sbb
cld
outsb
test
xchg
pop
mov
test
push
add
lahf
cmp
call
inc
test
addr16
push
and
push
and
cmp
fisttpl
inc
inc
adc
xlat
mov
bound
mov
dec
mov
inc
push
and
adc
rorb
jmp
push
sbb
adc
imul
rcrb
mov
scas
fcompl
sub
andb
ljmp
ja
xchg
cmp
sbb
imul
adc
adc
lock
lcall
or
fadds
push
data16
dec
or
xchg
adcb
out
cmp
and
jns
add
mov
push
pop
shll
mov
cmp
pusha
mov
cmp
mov
xchg
adc
and
inc
std
or
jle
imul
dec
inc
ljmp
fs
outsb
rcll
add
jno
inc
dec
dec
cld
xor
ja
push
sbb
or
inc
pop
orl
sahf
repnz
cmp
aad
popf
dec
cmp
shll
jne
mov
rcrb
or
push
dec
mov
pop
popf
xchg
xor
or
ja
lods
or
jo
push
test
jmp
cmpsl
sub
jne
jbe
jle
sbb
mov
daa
mov
sbb
sbb
or
insl
push
shlb
and
hlt
mov
sub
add
bound
dec
jg
sbb
fsub
pop
xchg
inc
xchg
add
cs
hlt
ret
lea
add
mov
xor
stc
push
mov
cwtl
mov
aas
adc
mov
js
test
xor
inc
ja
mov
aam
dec
push
pop
xor
nop
mov
or
mov
jo
aam
and
popf
jo
mov
sbb
pushf
rcrb
push
pop
repnz
dec
xor
add
jecxz
shlb
stos
stos
in
cmp
mov
test
or
aas
lock
movsb
mov
add
dec
xor
shr
adc
push
out
jmp
mov
mov
mov
clc
pop
loope
loopne
mov
mov
out
sbb
imul
jns
xchg
mov
push
js
adcl
cmc
xor
test
sti
in
pop
shll
out
cmpsl
fiadds
xor
push
movsl
mov
ljmp
rcl
fdivr
adc
cli
in
int
les
into
xchg
push
lock
xchg
mov
xchg
cltd
aam
or
in
inc
loop
and
add
sbb
and
dec
pop
imul
jge
ds
out
jbe
inc
test
xor
es
aaa
pop
mov
test
aad
iret
pop
repnz
cltd
and
dec
ss
and
lret
mov
loopne
dec
daa
dec
loopne
inc
xor
cli
xor
jb
mov
ljmp
cltd
hlt
or
rcl
pop
mov
sbb
or
jns
int3
push
and
pop
mov
jbe
push
and
and
add
scas
or
aas
mov
das
mov
nop
inc
xor
mov
mov
cs
or
pop
insl
mov
or
xor
in
mov
jl
in
lods
pop
and
lods
test
pop
ret
adc
xchg
imul
cli
mov
in
insb
push
inc
loope
bswap
stos
dec
cmpsl
jns
mull
cmp
sub
mov
sbb
push
mov
sar
and
jge
jge
fdivrl
add
xchg
mov
leave
leave
dec
scas
stos
sub
test
dec
pusha
inc
xchg
fs
std
xchg
mov
push
sahf
call
and
fcmovne
adcl
pop
pop
clc
adc
outsb
in
or
cmpsb
pop
pop
or
fists
mov
shl
adc
ja
sbb
rcrl
clc
xchg
push
dec
or
pop
jp
xchg
iret
adc
inc
mov
xchg
into
mov
inc
enter
sub
decb
push
adc
pop
clc
sub
imul
and
mov
add
rcr
and
leave
std
adc
call
arpl
and
dec
aam
pop
mov
clc
pop
pop
insb
add
jl
sub
popf
adc
std
rclb
sti
ret
adc
mov
lahf
xchg
xchg
push
xchg
out
or
inc
mov
jae
mov
adc
sahf
jle
arpl
mov
xor
rcrb
jle
sub
popa
std
sbb
sbb
orb
lods
jg
std
jge
fldcw
cmp
mov
das
pop
cmc
pop
sbb
adc
add
pop
popa
sahf
test
add
ficomps
and
aad
or
sub
or
dec
sub
push
xchg
adc
mov
push
aas
leave
inc
dec
push
xor
ret
or
and
cmp
test
jno
jno
xor
loopne
clc
testb
mov
bound
ja
shlb
push
push
icebp
jno
xchg
push
in
mov
lods
dec
lcall
ret
inc
incl
push
jle
xchg
popa
add
dec
pusha
arpl
jl
push
ret
fildl
add
cwtl
mov
push
out
movb
dec
clc
ds
repz
test
fisttpl
into
test
sub
jo
inc
insl
movsb
jle
jecxz
icebp
dec
xor
cmp
xchg
insl
ss
sub
and
out
iret
movsb
sbb
mov
pop
icebp
xor
push
imul
enter
mov
and
dec
fldt
lcall
or
cmp
pop
sub
fidivs
xor
rcrl
icebp
pop
cltd
test
or
clc
mov
imul
xor
bound
mov
add
outsl
shl
cmp
adc
push
jecxz
mov
mov
fidivrl
sbb
dec
bound
lods
xchg
mov
cmp
push
mov
xor
sub
adcl
add
push
xor
cmp
ds
xor
cmpsb
aam
loope
stos
add
push
cmp
jns
add
rclb
mov
in
mov
xor
cmp
repnz
addl
xor
adc
mov
mov
cmp
add
pusha
xor
rcl
mov
mov
sub
mov
jecxz
add
andl
gs
dec
lahf
push
add
pop
jno
pop
lods
sbb
mov
jo
cmp
mov
pop
adc
jmp
outsb
hlt
movsb
dec
mov
outsb
vmwrite
test
int
jno
push
lret
push
es
xor
push
pop
fisttps
push
fsubl
sbbb
or
enter
mov
jnp
mov
iret
pop
push
add
icebp
inc
sbb
adc
adc
ds
mov
xor
xor
iret
leave
add
xchg
call
mov
rcr
xor
lea
jb
ja
xor
xchg
ja
or
out
mov
pusha
clc
je
inc
in
cmp
es
and
test
adc
das
sub
or
daa
push
cmc
stc
pop
test
imul
adc
add
aas
xchg
adc
and
mov
add
cmp
push
sub
ret
call
sarb
mov
xchg
enter
ret
enter
sub
ret
mov
clc
push
cmc
outsb
pushf
xor
jb
sbb
inc
pop
fs
inc
ja
mov
fsts
iret
ja
das
pop
push
push
mov
clc
add
cmpsb
mov
cmp
sbb
mov
mov
and
and
call
dec
fcoms
mulb
dec
add
inc
push
pop
sahf
mov
iret
ja
daa
idivl
fwait
pushf
addb
sub
and
or
sbb
pop
mov
adc
push
sbb
in
pop
fcompl
inc
imul
and
iret
inc
push
sahf
xchg
idivb
jg
addl
fmull
arpl
and
into
push
jecxz
leave
ss
loopne
jmp
das
test
inc
jns
mov
sbbl
xchg
push
add
addr16
inc
pop
call
js
or
pop
testb
popf
and
popa
test
subl
inc
js
scas
into
jo
inc
addr16
sbb
mov
mov
adc
sbb
pop
dec
jb
pop
ret
pusha
mov
movsl
and
adc
pushf
jo
pop
rcll
sbb
sub
adc
mov
movsl
jbe
in
jecxz
leave
loopne
cmp
mov
push
mov
add
cwtl
xor
pop
pop
push
or
int
leave
dec
dec
aam
je
lea
dec
jo
inc
insb
jne
and
dec
adcb
sub
stos
adc
out
and
aaa
dec
fsts
jnp
sbb
rclb
cmp
mov
or
hlt
stos
sbb
xchg
lods
in
dec
mov
jo
adcl
jnp
or
pop
sub
and
inc
cmp
test
inc
pop
jo
push
lods
mov
js
pop
aaa
sahf
jo
push
push
adc
sbb
and
xchg
outsb
lret
mov
adc
jle
push
in
hlt
jnp
mov
cmp
or
ljmp
sbb
pop
and
mov
dec
outsl
xchg
sub
ret
jle
les
movsb
sub
data16
or
add
xlat
cmp
xchg
xchg
std
xor
adcb
cmp
lea
repz
cld
out
mov
and
movsb
aam
xorb
and
stos
cmp
sub
int
dec
inc
xchg
cmpsb
sub
stc
mov
mov
sbb
ret
mov
ficompl
insl
in
leave
mov
rcrl
shrl
cmp
or
shrl
insl
add
popa
xor
jb
mov
jg
repnz
test
fs
jno
popa
rclb
pop
ficomps
xchg
icebp
pop
push
nop
aaa
fwait
int3
or
test
pop
jge
gs
add
addb
fnstsw
imul
push
outsl
sub
sbb
rcrl
adc
incb
aas
pusha
popf
xor
shll
mov
movsl
mov
mov
insb
and
in
xchg
dec
sbb
stos
add
mov
loop
xor
or
test
cli
rclb
and
test
mov
nop
mov
cmpsb
addr16
ja
xchg
sbb
and
loopne
lods
stos
pop
movsb
pop
rol
jmp
add
adc
xchg
mov
cmp
ss
inc
cmp
xor
shll
sbb
jno
leave
pop
sbb
xchg
nop
add
divb
jae
shl
jge
sahf
je
add
push
xchg
lea
xorb
mov
dec
roll
loop
leave
xchg
lcall
lods
and
out
adc
je
jne
pop
ret
adc
clc
jns
jecxz
insb
sti
subb
jne
add
xchg
cmp
shll
loopne
or
add
mov
ds
mov
lock
shlb
in
in
ret
pop
xchg
testb
inc
pop
mov
enter
and
scas
mov
mov
lcall
in
dec
or
and
jb
das
cmp
mov
out
jp
mov
lret
pop
cmc
sbb
dec
mov
dec
les
mov
dec
add
add
pop
sub
mov
sub
or
rcll
xchg
insb
stc
xor
cmpsl
xchg
popf
fisttpl
lcall
jl
push
das
loope
ret
rcll
mov
ss
and
or
xor
cmp
jns
in
or
inc
adc
outsb
insl
sub
stos
int
pusha
jl
in
sub
ficoml
sbb
loop
dec
add
or
pop
mov
pop
shlb
or
pop
xor
cmp
sub
fwait
sti
mov
loope
es
fstpt
scas
mov
cmp
or
ja
and
les
int3
mov
mov
xchg
cmp
ljmp
test
ror
ret
xor
adc
mov
daa
nop
lds
outsl
adcb
sub
cmp
popa
adc
ljmp
mov
fisubs
pop
or
jecxz
sbb
test
rorb
cmc
mov
fs
subb
mov
in
push
and
push
pushf
pop
and
push
adc
cmp
xchg
pop
push
mov
cltd
jno
imul
imul
fimull
call
in
lret
mov
mov
cmp
pop
insl
sbb
sbb
outsl
leave
inc
mov
sbb
pop
sbb
pop
pop
xchg
ds
pop
xchg
addl
mov
pusha
xor
jecxz
mov
loop
popa
add
js
cmpsb
pop
sub
jecxz
rolb
push
andl
adc
sbb
test
cmp
xor
testl
in
and
test
mov
push
jecxz
out
sbb
cmp
cmp
sahf
mov
and
push
adc
adc
cmp
or
add
or
xor
adc
sbb
or
mov
sub
rcl
je
sub
jg
movsl
add
sub
mov
popf
lock
push
push
gs
mov
loope
fldenv
popf
arpl
and
adc
imul
jle
pop
shlb
and
imul
push
xor
ja
das
mov
mov
aam
fwait
daa
loope
add
fwait
inc
and
add
xchg
push
lahf
lock
int3
or
jne
lds
mov
mov
enter
and
xor
inc
add
popf
cmp
jno
push
sbb
cs
sub
jmp
push
jecxz
lds
and
cmp
mov
movsl
sbb
or
adc
jle
aas
pop
nop
jg
jnp
negl
sub
dec
dec
icebp
filds
cmpsb
sub
adc
movsb
lret
loop
pop
dec
inc
inc
inc
stos
ja
sub
mov
xor
pop
adc
xchg
fsubs
or
shlb
das
cmp
leave
add
cmp
inc
test
pop
js
inc
hlt
mov
mov
sbb
sbb
mov
mov
sub
pop
add
call
leave
sti
xchg
aad
and
pop
xor
and
mov
inc
repz
add
imul
mov
and
pop
fsubs
insl
cmp
lods
je
cli
mov
subb
and
dec
push
or
pop
push
scas
in
imul
xor
pop
jmp
data16
mov
shrb
rcr
repz
jo
fbld
pop
mov
hlt
in
int3
arpl
pop
push
mov
int3
mov
test
or
ja
enter
stc
cs
fsts
cmp
or
and
loop
icebp
and
cmp
insb
rep
jne
mov
jmp
loope
stos
push
les
pop
pusha
or
xchg
xor
jns
js
adc
scas
ljmp
sbb
pop
stc
dec
lods
jg
imul
ret
jle
into
andb
sub
repnz
mov
pop
sarl
or
jns
push
mov
adc
mov
xor
cmp
fstpt
outsb
push
dec
pop
jle
xchg
mov
movsb
adcb
aas
ljmp
cmp
aam
mov
ds
add
xor
clc
or
loope
cmc
rorb
jo
and
sub
sub
or
fdecstp
enter
xor
iret
pop
loopne
shll
dec
sahf
push
cli
sbb
xchg
add
in
xchg
pop
inc
lock
cmp
adc
cmp
xor
ds
repnz
aas
xchg
iret
mov
fwait
lods
pop
xchg
fstps
arpl
xchg
loopne
mov
xor
repnz
popa
imul
mov
sbb
push
das
mov
pop
cmp
jb
and
data16
loope
pop
sbb
mov
call
cmp
cmp
popa
addr16
xchg
fstpt
xor
ja
shlb
mov
mov
ret
cmp
insl
in
sbb
punpckhwd
cmp
repnz
test
mov
out
sahf
mov
jecxz
mov
xchg
xchg
jne
sbb
popa
movb
add
andl
add
mov
add
or
adc
adc
xor
in
add
lret
mov
cld
xchg
xor
inc
loope
push
repnz
mov
in
loope
and
pusha
int3
pop
data16
aad
pusha
movb
loopne
lock
mov
add
push
cmp
ss
and
dec
icebp
test
dec
mov
icebp
mov
arpl
jo
cmp
js
sub
add
xor
pop
pop
xor
and
dec
add
out
mov
mov
mov
xorl
add
lcall
mov
add
mov
cmp
mov
pop
fiaddl
xor
push
cmp
push
or
push
rolb
jle
or
ds
mov
add
enter
pop
mov
mov
mov
loop
add
push
mov
add
pop
iret
adc
hlt
mulb
xor
fwait
sub
test
sarb
cmp
dec
push
mov
dec
aaa
insb
push
cli
mov
add
add
or
das
xorb
jle
pop
outsl
or
frstor
lahf
leave
dec
rcll
and
ficoml
mov
xchg
int
jle
xor
xchg
sub
incl
out
mov
jecxz
inc
mov
cmpsb
xor
push
jno
pop
jg
test
xlat
scas
mov
enter
mov
jb
int
repz
lret
lcall
rcrl
sub
adcl
fildl
int
mov
push
push
xor
sub
clc
xchg
jo
incl
mov
lock
mov
scas
add
arpl
add
xor
adc
aas
and
dec
sub
ljmp
and
jecxz
aam
sub
stc
loopne
data16
cmp
and
fwait
inc
add
sbb
aaa
and
rorb
jae
push
add
jmp
rcrb
in
or
mov
add
sub
loope
xchg
je
int
shlb
cmp
fbld
mov
popa
fadds
shrb
insl
pop
shl
je
es
ror
popf
xorb
es
ds
jle
scas
in
xor
out
ret
push
add
xchg
ljmp
rclb
cmp
xchg
xchg
sub
cs
in
and
call
xchg
add
add
cwtl
lods
cmp
shll
test
test
out
sbb
mov
push
rclb
or
lret
movsb
popf
xor
and
and
rcrb
mov
loopne
clc
dec
or
lcall
adc
sbb
or
mov
aas
add
mov
cmpsb
in
sub
mov
lea
mov
sub
aad
cmp
cmp
and
xchg
cmp
sbb
adc
imul
adc
enter
mov
in
push
movsb
ficoml
push
fbld
incl
lock
and
jl
sub
xchg
mov
pushf
cs
bound
popa
cli
aaa
shll
lds
or
clc
inc
divl
add
mov
xchg
test
fdiv
jne
pop
or
mov
push
jo
sar
rcll
pop
out
mov
dec
add
test
and
add
stos
and
add
movsl
imul
pop
dec
bound
and
repz
testb
dec
sub
inc
jne
lea
xor
sub
jbe
out
jg
lea
jl
into
repz
arpl
cmpsb
add
sub
popf
int3
mov
adc
mov
dec
mov
sub
mov
hlt
icebp
cli
sbb
aas
pop
aam
sub
cmc
dec
add
lret
adc
mov
in
add
shl
pop
loop
mov
scas
mov
xchg
shrb
xlat
dec
push
xchg
pop
test
cs
icebp
scas
pop
scas
jmp
pop
sub
or
add
add
lret
mov
cmp
mov
or
fcmovnbe
out
fs
mov
cmpb
dec
jle
jp
cmp
cmp
movsb
add
push
decb
lahf
or
out
shrb
xchg
add
xchg
fsubs
repz
loopne
outsl
add
adc
jmp
ja
xchg
pop
push
or
icebp
repz
xchg
mov
imul
sbb
add
sub
dec
sub
test
pop
cmp
imul
les
mov
loopne
pop
loope
push
xchg
int
mov
flds
into
repnz
sub
sub
ficoms
bound
movsl
ret
popa
sbb
mov
or
popf
int3
in
test
xchg
rorl
or
inc
inc
popf
xchg
pushf
movsb
mov
icebp
inc
inc
and
mov
xchg
loopne
aaa
xchg
jne
sbb
or
pop
adc
cmpsl
jmp
lds
insl
fsubrl
arpl
icebp
push
mov
xor
sbb
and
xlat
xchg
jne
and
fsubrs
sub
pop
loopne
inc
loop
popa
mov
dec
push
pop
push
pop
push
movsb
inc
pop
xchg
rclb
nop
xor
shlb
and
adc
fstl
push
pop
mov
ret
and
pushf
mov
adcl
lcall
cld
das
rclb
das
jns
cmp
das
fldenv
pusha
dec
sbbb
mov
mov
sti
in
jg
push
jne
dec
sub
gs
jo
cmpsl
mov
pushf
aad
pop
adc
dec
cmpb
ret
loopne
jns
mov
je
xchg
les
dec
cwtl
movsb
mov
pop
pop
mov
cs
jle
mov
icebp
mov
push
mov
shrb
mov
lock
bound
test
xor
jo
and
test
mov
jmp
lcall
sbb
test
add
enter
cmpb
fwait
mov
movsl
aad
xchg
inc
cs
push
rorl
sbb
push
push
push
mov
cmp
ret
ret
pop
mov
stos
dec
std
mov
jp
mov
rcrl
dec
dec
push
mov
cmp
loopne
stc
pop
mov
rcrb
sbb
dec
lcall
sbb
or
loopne
mov
lea
dec
xor
mov
outsl
adc
pop
mov
sbb
fbld
inc
mov
cwtl
inc
push
icebp
sbb
mov
push
sti
pop
test
mov
sub
inc
movsl
push
mov
sbb
mov
and
dec
lods
pop
jbe
addr16
pop
xor
or
push
repnz
pop
mov
and
pop
dec
dec
sbb
les
and
lock
mov
sti
addb
lretw
mov
mov
cmp
arpl
mov
fcmovne
cmp
and
add
popa
pop
mov
addr16
or
mov
xchg
push
fstl
scas
add
call
mov
cmp
les
in
rcll
js
mov
cmp
jle
mov
cwtl
adc
hlt
daa
loope
push
scas
xchg
mov
inc
add
iret
leave
shll
add
pop
xor
rol
bound
inc
mov
and
push
sbb
fwait
repnz
jb
aas
dec
rolb
call
fwait
repz
lods
xor
add
jle
fistps
sarb
add
adc
mov
sbb
jae
sub
daa
sub
push
shlb
and
mov
cmp
mov
add
test
and
fdivrs
push
shl
jno
insb
cmp
jns
sub
and
fs
or
into
mov
pusha
sub
repz
sub
loop
es
clc
mov
jge
outsl
jl
insb
cmp
adc
jle
add
push
push
inc
mov
dec
push
jle
push
imul
leave
lahf
addl
push
sub
push
js
dec
shl
lcall
outsb
dec
jne
fnsave
adc
jp
cmpsb
test
stc
inc
sbb
cmp
xchg
fisubrs
loop
popf
inc
dec
pop
mov
mov
add
mov
movsl
mov
gs
xor
faddl
cs
cwtl
mov
scas
adcl
loopne
add
ja
sbb
stos
add
mov
cltd
mov
dec
xchg
das
loop
test
xor
addr16
pop
mov
inc
loop
sbb
aaa
pushf
xor
and
mov
xor
shll
aas
inc
jns
push
or
gs
in
std
cmc
dec
jno
jl
pop
inc
je
repz
adc
cmp
outsl
addr16
pushf
xchg
test
xchg
ret
aad
ja
jno
jmp
repz
outsl
iret
test
sar
adc
out
iret
mov
pop
push
add
push
pop
repnz
roll
and
xchg
mov
adc
inc
imul
and
test
in
popf
add
sahf
stos
xlat
push
cwtl
dec
mov
pop
lods
cmp
adc
push
out
sub
inc
pusha
repz
fldcw
inc
sbb
enter
mull
xor
lods
mov
xlat
es
rcrl
and
std
ret
das
lsl
stos
cmp
rcl
and
aas
lcall
xor
add
mov
and
cmp
bound
imul
xor
mov
mov
divb
push
ja
and
iret
leave
jbe
sarb
mov
cmc
adc
iret
mov
push
mov
or
adc
aam
add
out
jb
and
sbb
cmp
fcompl
sarl
mov
adc
in
call
roll
inc
rorb
jecxz
or
nop
in
xchg
xor
pop
scas
std
repz
push
sbb
lock
adc
mov
jo
push
sbb
es
add
mov
push
dec
in
mov
pop
out
icebp
out
mov
sub
iret
movsb
push
insb
xchg
out
test
sti
add
les
cmpsb
or
cld
mov
lods
outsb
out
std
les
mov
xchg
mov
jmp
ss
cmp
daa
or
add
roll
adcb
mov
fwait
cs
insl
popa
adc
adc
and
sub
jbe
rcr
push
outsl
sub
push
sbb
inc
add
add
push
dec
cmp
sub
outsl
mov
xchg
sub
int3
push
mov
movl
insb
sub
inc
inc
xchg
push
and
es
clc
sbb
or
xchg
fstpt
das
xchg
mov
cmc
clc
push
jecxz
lock
cli
in
lcall
jne
inc
pusha
orl
jmp
jle
int
xor
addr16
adc
push
stos
jl
pop
lods
in
sbb
jmp
mov
insb
outsl
lock
sbb
sbb
pushf
out
push
dec
inc
pushf
nop
dec
pop
cmp
lret
icebp
adc
mov
cmpsl
and
jnp
test
dec
dec
inc
and
cmp
or
jge
cmpsl
outsl
aaa
mov
cmp
test
inc
dec
ret
fildll
or
fcoms
or
adc
dec
sbb
imul
or
jg
mov
ret
xor
loopne
inc
daa
les
add
mov
lods
pop
add
or
xchg
xor
jbe
jmp
dec
int3
repnz
repnz
cmp
jmp
adc
test
cmp
decl
sarb
and
xchg
outsb
jnp
bound
shll
push
and
and
shr
enter
outsb
add
and
int
xor
aam
jb
cwtl
shll
xor
insb
es
sbb
clc
sbb
clc
addr16
nop
movsb
dec
out
push
dec
data16
enter
aaa
cmp
push
and
scas
popa
in
dec
loopne
sbb
xchg
or
push
jo
test
jge
je
jl,pn
lds
inc
or
pop
sbb
scas
push
aaa
outsl
rorl
fsubp
mov
mov
push
inc
lea
inc
repz
mov
inc
jge
or
clc
notb
inc
mov
and
addl
test
mov
inc
cmp
pop
lret
imul
inc
bound
test
xor
xor
dec
push
pop
ds
popa
jle
add
prefetcht2
jmp
pop
les
fcmovu
mov
mov
sub
mov
add
push
xor
cmpsb
adc
xchg
sbb
inc
sahf
enter
xchg
xor
add
rorb
push
loopne
sbb
adc
ret
sar
outsl
mov
or
mov
dec
sbb
mov
or
pop
fstps
xor
inc
add
inc
mov
pop
mov
adcl
mov
or
dec
ja
mov
dec
imul
int
cltd
jecxz
fstp
rol
shl
into
sbb
xchg
inc
and
pop
js
dec
push
push
ss
test
mov
fcomi
std
je
mov
scas
and
cmovp
cli
adcl
ret
rcrl
pop
add
mov
ret
inc
cmc
mov
mov
pop
add
jbe
inc
add
and
add
xchg
in
inc
les
lahf
mov
inc
hlt
andb
bound
add
push
push
jg
mov
jo
fistps
and
loopne
jo,pt
incb
nop
scas
clc
cld
or
and
popa
mov
stos
pop
mov
mov
sbbb
scas
mov
shrb
outsl
std
div
scas
popf
xchg
call
or
test
mov
push
pop
jb
fisubrs
cmp
push
subb
pop
loop
les
cli
in
repnz
fcmovnbe
incl
in
sti
pop
pop
mov
mov
push
push
dec
jp
icebp
mov
mov
cld
imul
adc
push
sbb
mov
push
movsl
aaa
inc
sub
je
in
mov
insb
mov
enter
jmp
test
imul
pop
jnp
stc
sahf
dec
data16
jae
shll
fiaddl
shrl
addb
xor
adc
out
add
lods
jo
mov
mov
mov
sbb
jle
movsl
idivb
jp
je
mov
push
shll
mov
dec
int
inc
in
or
sub
movsl
mov
je
repnz
adc
jmp
mov
cwtl
push
or
or
les
xchg
dec
mov
es
push
jb
xor
es
cmp
jp
push
xchg
inc
das
std
mov
insl
dec
xchg
and
loopne
add
fdivrl
pop
ret
outsl
xorb
into
sahf
add
mov
mov
sbb
dec
mov
jns
adc
inc
arpl
xchg
jecxz
movb
rol
ret
push
mov
lock
das
imul
jecxz
loopne
xchg
add
inc
fisttps
fmuls
int
ffreep
fcompl
bound
rcrb
daa
cmpsb
push
ret
jo
pop
sarb
inc
mov
cld
mov
mov
mov
dec
outsl
inc
insl
jmp
sub
or
aaa
mov
dec
mov
inc
in
and
movsb
addr16
call
stos
enter
inc
nop
xchg
sbb
jo
aaa
sbb
or
mov
movsb
daa
orb
xchg
pop
xlat
pushf
fwait
adc
insl
ljmp
xor
jmp
sub
mov
hlt
filds
leave
jne
add
xchg
or
jp
js
mov
cli
arpl
inc
js
call
in
fisttps
cmp
dec
rcl
ror
dec
fisttps
xor
hlt
movsl
xchg
adc
xor
aam
pop
pop
clc
orl
push
clc
cld
jge
or
xor
xorl
inc
push
adc
outsb
lock
fbstp
aam
jmp
adc
mov
mov
xor
lock
mov
aaa
pop
xchg
gs
pop
pop
mov
mov
cmp
xor
mov
and
or
loop
std
mov
add
mov
jmp
add
test
and
xchg
adc
test
jp
jno
jle
xchg
in
pop
mov
cmpsb
jb
and
ror
xchg
sub
cwtl
pop
jle
cs
cmp
jae
jb
mov
cli
test
fbld
and
das
rcrb
insl
cmp
aaa
inc
rorl
in
push
push
int3
adc
test
icebp
fbstp
icebp
into
inc
cmp
test
pushf
mov
test
push
stos
sbb
dec
xor
jns
pop
inc
mov
icebp
mov
mov
mov
inc
test
cld
push
lock
or
push
sub
test
xchg
les
bound
jbe
addl
lcall
push
fstl
xchg
cmp
insl
jmp
cld
mov
inc
pop
aad
testl
stc
inc
daa
mov
jge
dec
xchg
cli
mov
jle
mov
sbb
rolb
imul
jbe
aam
xor
cltd
sbb
outsl
mov
ja
xorb
and
fdivr
ror
sub
repnz
mov
add
shll
paddw
cmc
movsl
aaa
popf
rolb
loopne
cmp
sbb
insl
mov
pusha
xchg
fldl2e
inc
cmc
jg
and
and
xchg
push
sbb
outsb
inc
aam
push
push
mov
dec
sbb
je
cli
mov
xchg
iret
leave
or
adc
xor
pop
je,pn
add
fs
fmuls
nop
jb
sarb
adcb
and
sub
stc
pop
jl
mov
inc
loope
inc
loope
cmp
sub
inc
dec
sub
add
addr16
ds
decl
insl
lds
addr16
jnp
sub
mov
decl
push
add
lcall
pop
lods
fmull
mov
mov
sub
mov
fistpl
lds
mov
test
sbb
dec
ds
jno
adc
cmpsl
pop
jecxz
hlt
jg
dec
and
dec
push
ljmp
push
mov
ret
mov
loop
mov
xchg
xor
movsb
jp
xlat
cmpsl
push
mov
jb
fs
xchg
add
lret
pop
jo
stos
push
cmp
add
add
add
dec
rclb
decb
mov
or
inc
jnp
mov
and
push
daa
mov
mov
push
pop
mov
daa
sbb
push
push
jno
mov
cmp
dec
ss
jnp
mov
clc
mov
mov
shlb
mov
mov
push
repz
pop
inc
add
cmc
lods
ds
test
ja
cmpsb
ret
jno
adc
mov
lods
lods
lret
dec
enter
push
dec
addl
pop
jno
pushf
push
shlb
addl
xor
mov
and
pop
dec
hlt
push
xorb
mov
in
pop
sub
mov
insl
push
inc
dec
push
rclb
xor
repnz
pusha
int
adc
mov
mov
inc
js
pusha
ljmp
out
jns
outsb
mov
pop
lcall
and
mov
je
push
cmpl
pop
clc
inc
mov
negb
mov
push
js
push
outsl
imul
je
pop
xchg
ret
insl
sti
in
xor
imul
add
inc
sbb
jl
push
mov
mov
into
ds
fldt
pop
std
ffreep
movsl
fwait
mov
bound
cmp
fimull
mov
in
sbb
cs
sbb
or
sar
mov
add
jae
fidivl
outsb
sub
cli
mov
lea
cmp
imul
outsb
add
inc
push
sti
out
loop
mov
fwait
sbb
dec
jge
pop
push
or
jg
jg
and
pop
mov
inc
xor
sub
lds
clc
aaa
xchg
add
xor
test
aad
test
add
je
mov
xchg
jo
lods
aas
xchg
lock
outsb
lret
add
inc
mov
jle
or
incl
popf
leave
lds
aas
andl
sub
in
rcr
shrb
sarb
sub
aad
jle
movsb
pusha
sbb
in
sub
or
and
mov
mov
adc
xchg
xchg
stc
inc
dec
inc
aaa
mov
outsl
lock
dec
sahf
and
add
andl
mov
mov
push
es
dec
or
jl
inc
inc
subb
pop
or
push
sub
push
movsl
jae
inc
inc
or
popa
push
setns
mov
pop
aam
mov
xchg
adc
mov
ret
sbb
mov
push
mov
aaa
vmread
pusha
dec
pop
jns
sub
or
xchg
sbb
sub
je
jp
das
push
adc
ret
rcll
lods
aam
xchg
mov
dec
fildll
in
sub
cmp
out
rolb
adc
cmpb
pop
add
adc
leave
and
vlddqu
movsb
cli
mov
in
popf
popa
mov
jecxz
inc
enter
or
sbbb
and
call
out
in
push
sbb
mov
lea
inc
std
inc
cld
push
cmp
sbb
or
pop
xchg
sbb
mov
push
xchg
lahf
and
ljmp
imul
fucom
sub
mov
pushl
rcl
inc
jecxz
inc
add
dec
rclb
aaa
and
shlb
push
data16
dec
mov
call
push
and
or
jle
lods
pop
jno
jle
jnp
inc
cmp
or
cmpsb
lret
aaa
cmc
or
sub
mov
int3
jns
lods
lods
les
pushf
outsb
or
inc
sahf
test
jp
fdivrp
push
sub
push
sub
dec
mov
in
leave
mov
lods
shlb
push
lds
fsubr
adc
icebp
push
add
jle
incl
nop
push
nop
xor
insl
sbb
pop
negl
pop
sub
in
jg
and
sub
test
push
cmp
mov
jl
fdivr
jg
sahf
mov
ja
repz
lret
push
push
dec
pop
dec
je
popa
pusha
aam
jmp
cmp
add
jne
out
cmc
inc
fisubs
inc
lcall
fisttps
int
add
cmp
cmp
or
xchg
jge
cmc
pop
mov
pushf
mov
outsl
cld
mov
stos
or
cmp
push
inc
dec
rcl
cmc
lahf
mov
inc
mov
sti
cmpsb
add
mov
push
jg
ds
cwtl
loope
fucomip
aam
inc
cmp
div
stc
popf
fxch
rdmsr
aad
shrb
repz
cmp
push
lods
inc
fimull
or
scas
jno
mov
jg
shlb
adc
hlt
push
test
and
jg
insl
imull
xchg
pop
loop
rcrl
pop
and
xorl
mov
push
enter
push
jle
dec
aaa
xor
test
out
mov
cmc
pop
loop
outsl
push
cmp
mov
add
jno
iret
cld
mov
jl
or
xchg
adc
pop
mov
incl
jge
outsl
lcall
or
add
test
xchg
push
clc
mov
pop
mov
js
sahf
and
adc
ret
pop
daa
cs
pop
cli
mov
js
inc
loopne
mov
loope
les
enter
jae
mov
rcll
jl
mov
out
sub
aaa
push
outsb
jmp
add
je
popa
jns
sahf
shll
das
jl
jmp
popf
sbb
adc
push
or
jo
inc
inc
adc
lret
xchg
jp
or
loop
in
std
mov
fisubs
sti
mov
sbb
ret
les
popf
add
fistl
mov
es
or
int3
sub
push
ljmp
mov
or
dec
clc
mov
pop
push
stc
add
lahf
jo
shrb
ret
gs
das
cld
pop
sbb
aaa
dec
adc
faddl
in
pop
popa
mov
jg
es
mov
je
cs
or
xchg
mov
xlat
jmp
in
mov
adc
iret
fs
addb
cmp
push
popa
mov
cld
aaa
shll
call
into
adc
inc
ss
les
jle
nop
in
sbb
or
add
shr
dec
add
dec
les
mov
scas
inc
stos
enter
mov
sti
insb
ljmp
ficoml
sbbl
fsts
xchg
mov
mov
std
imul
aas
xchg
mov
data16
xorb
sbbl
mov
jbe
jl
push
push
lock
sub
xchg
mov
cmp
mov
mov
inc
push
inc
jbe
mov
mov
jno
ljmp
outsl
aam
arpl
jl
icebp
dec
subb
clc
jp
mov
test
flds
in
shll
and
fucomp
lds
mov
jp
push
ret
mov
loope
add
scas
sbb
repz
aas
pop
jle
or
aad
imul
inc
lea
subl
loope
sbb
jp
jb
and
fidivrs
xchg
pusha
ds
ret
or
mov
and
xchg
loop
cmp
in
in
stc
call
test
mov
jl
aaa
push
cmp
xor
push
cs
sahf
pop
push
imul
sub
pop
repnz
push
sbb
mov
add
mov
pop
clc
push
fdivrp
iret
lods
dec
and
pusha
mov
fbstp
mov
scas
inc
adc
push
adcb
push
repnz
cmp
lock
add
mov
sub
ja
xchg
xchg
loop
inc
les
cmp
jbe
xorl
mov
pcmpeqd
lahf
jg
jmp
inc
in
clc
aad
inc
xchg
jns
adc
dec
xchg
jne
inc
xor
and
shr
icebp
pushl
rcrl
test
push
out
pusha
adc
sbbl
adc
outsl
sub
xor
dec
mov
push
dec
test
leave
push
mov
or
movsl
inc
sbb
mov
mov
sbb
ja
cmpsb
mov
mov
mov
pushf
hlt
adc
aad
cmc
pop
cs
pop
jg
loopne
rcll
test
sub
das
aam
push
xor
xchg
adc
mov
mov
sbbb
adc
mov
mov
push
push
xchg
fistpl
in
add
push
dec
das
cwtl
arpl
jbe
sub
aam
dec
sub
addr16
mov
outsl
and
insb
pushf
test
xor
cmp
add
popf
pop
cwtl
js
clc
fistpll
aas
loopne
cwtl
push
cmpsl
repz
sub
test
mov
cli
dec
jno
filds
scas
pop
mov
rol
dec
lcall
dec
push
insl
jl
add
les
aas
sub
xchg
insb
mov
gs
sbb
mov
pop
pusha
test
or
pusha
hlt
cmp
dec
js
adcl
and
pop
push
icebp
mov
mov
xlat
and
pop
sbb
adc
cmpsl
in
das
jnp
insl
iret
rclb
or
loop
and
call
data16
xchg
test
dec
push
add
outsl
lds
mov
push
scas
das
jnp
sar
mov
and
jno
or
ss
and
outsl
pop
jp
mov
pop
jnp
shrb
lock
mov
and
icebp
pop
leave
adc
sbb
push
movsb
imul
clc
dec
clc
loop
inc
or
movsl
add
or
pop
outsl
adc
pusha
out
sbb
add
mov
mov
and
sbb
jbe
out
xchg
and
jecxz
nop
repnz
fsubrl
add
sbb
scas
pushf
or
sbb
add
call
or
mov
movzwl
lret
subb
sbb
add
mov
orl
js
loope
xor
cli
xchg
push
add
cmp
and
cwtl
or
add
imul
mov
inc
movsb
or
pop
filds
mul
add
or
insb
ja
jecxz
mov
mov
movsb
or
imul
in
mov
incl
and
andl
inc
outsl
outsl
pop
loopne
int3
aaa
and
xchg
xchg
ret
pusha
jmp
aam
add
sub
lret
sub
or
rorl
loopne
cs
inc
sub
ret
iret
or
xchg
jo
adc
loop
loopne
aaa
outsb
mov
pop
add
ss
add
cld
pop
ss
mov
sbb
adc
repz
and
and
pop
movsb
add
mov
sbb
stos
call
mov
loop
sbb
fiaddl
sbb
and
push
aaa
inc
mov
ss
pop
pusha
adcl
xchg
adc
cmp
andb
cmc
in
dec
loope
bound
sub
sbb
pop
jo
fnsave
fisttpl
jo
push
dec
mov
cmpsl
pusha
jecxz
outsl
lcall
pushf
imul
mov
pop
cmc
or
xorl
mov
push
dec
in
iret
cli
push
idivb
xchg
mov
pop
test
sub
inc
dec
add
add
inc
jb
ds
jp
icebp
lods
push
pop
lock
loopne
out
loopne
fstps
cmpsl
xlat
xor
mov
cltd
ret
xor
xor
jge
out
mov
mov
je
add
mov
cmp
inc
mov
cmp
push
jmp
and
sub
jns
inc
sti
or
mov
clc
dec
cmc
xorl
mov
ret
pop
clc
mov
lret
push
loopne
inc
mov
nop
cmp
enter
in
aaa
stos
adc
sar
add
fwait
mov
inc
jl
outsl
insl
out
cmp
sbb
bound
mov
ret
inc
in
sub
test
sti
mov
mov
or
jge
outsl
fildll
xchg
sahf
loopne
rcr
add
jge
sbbb
xchg
jnp
xchg
and
popf
scas
push
lods
lock
shll
jb
jbe
repz
outsl
xchg
jmp
push
jl
fstpt
mov
mov
dec
icebp
cltd
add
push
mov
ljmp
mov
cmp
sub
jge
xchg
cmovae
test
mov
mov
cwtl
adc
mov
or
adc
out
dec
mov
sub
sbb
push
shl
rol
in
mov
xchg
mov
popa
repnz
or
pop
cli
lods
mov
push
scas
popa
aad
lock
cmp
xchg
sbb
aaa
fsubrs
lcall
jb
push
outsl
cmc
pop
mov
test
test
loopne
insb
add
inc
cmpsl
jns
add
test
ja
cld
adc
sbbl
inc
cmpl
push
mov
mov
scas
into
push
sarl
movsb
outsb
outsl
pop
mov
sub
imul
in
fldcw
ret
mov
iret
pop
jne
mov
add
popa
inc
cs
or
mov
mov
lods
xchg
xor
xor
inc
pop
fsubs
fdivs
pop
ljmp
pop
data16
into
adc
pop
in
stos
loope
fs
or
rcr
in
jg
cmp
js
push
loope
test
xlat
pop
out
fnsave
fstpt
adc
mov
sub
jnp
cmp
add
mov
das
jge
or
cmp
push
nop
ljmp
clc
loopne
lock
inc
cmp
mov
test
jmp
test
mov
dec
sar
call
outsb
inc
dec
xor
xchg
or
pop
add
js
mov
push
test
fdivrl
push
push
clc
ret
xchg
cs
add
pop
in
mov
imul
mov
ret
aas
adc
cltd
and
gs
test
fildl
xchg
js
sub
int3
sbb
sub
insb
adc
pop
lret
loope
adc
div
shrb
sbb
push
test
sbb
bound
or
in
jg
jns
fistl
pop
sbb
addl
fistps
sub
lcall
std
dec
jecxz
lock
pop
push
cli
arpl
xor
push
in
and
stos
das
std
idiv
fiadds
or
negl
sti
or
ja
xchg
int3
add
pop
pop
loop
xor
jno
push
push
jne
fwait
call
dec
stos
test
fdivrl
and
pop
mov
adc
add
es
pop
daa
or
and
pop
add
std
and
lcall
jmp
mov
pop
loopne
and
cmp
lret
push
insb
repz
mov
js
nop
xor
lods
mov
adc
inc
fstl
lea
fistpll
ss
and
add
fidivs
sbb
pusha
fists
in
ljmp
push
adc
incb
jo
adc
stos
loope
jg
fcomps
lock
pop
jae
inc
jo
add
xchg
test
lods
lcall
pusha
jle
out
les
and
xchg
roll
std
pop
xor
mov
jl
sbb
arpl
mov
cld
rol
shlb
push
cmp
cmpsl
rcpps
push
cli
das
fnsave
aad
int
andl
cmp
das
aas
inc
out
fisubrl
shr
ficomps
push
mov
addb
push
mov
fdivrp
idiv
jl
setg
outsb
out
pop
jne
pop
repnz
push
iret
call
pop
jnp
sub
fucomip
xchg
mov
cmp
cmp
and
push
es
jo
push
push
inc
lahf
mov
cmp
mov
xchg
and
mov
rclb
fcomi
pushl
adc
call
iret
cmc
out
adc
aas
push
aas
into
jae
int3
cmc
testb
loop
aas
pop
mov
add
lret
cld
inc
inc
stos
outsl
ja
sbb
mov
mov
push
mov
aaa
add
fmulp
adc
dec
stc
pop
scas
xchg
cmp
jo
stc
sbb
jle
stc
or
testl
add
out
sbb
jle
fldt
or
push
mov
push
movsb
loopne
out
loop
stos
lds
pop
xor
sbb
mov
dec
int3
and
outsb
pop
shll
or
adc
jne
mov
sbb
inc
movsb
imul
xchg
lock
inc
add
fsts
add
mov
hlt
mov
lods
push
inc
or
xchg
test
pop
mov
aaa
js
mov
xchg
sub
es
outsl
lds
movsb
jecxz
mov
pop
ds
or
cmp
xchg
clc
fcomip
pop
mov
ds
inc
inc
mov
xchg
pop
add
pop
imul
xchg
fidivrs
cmp
xchg
ds
rcr
sbb
push
mov
jl
jl
clc
push
mov
movsb
nop
out
mov
out
jp
or
xor
dec
mov
push
fdiv
mov
pop
sar
ljmp
add
xchg
mov
xlat
mov
ljmp
ja,pt
ficoml
insl
sub
idivl
out
mov
xor
cmp
out
bound
js
adc
jno
add
pushl
xor
mov
clc
mov
mov
shrb
in
cld
icebp
pop
imul
sbb
fnstcw
cs
repnz
push
pop
cmp
icebp
nop
sahf
clc
pop
clc
adc
push
jns
adc
aaa
xchg
mov
cli
in
mov
pop
or
mov
jbe
mov
pop
ficompl
and
out
mov
insb
adc
jecxz
adc
cmc
data16
jmp
pushf
icebp
jns
loopne
decl
cmc
in
clc
or
mov
mov
mov
cmp
push
and
fnstenv
mov
ds
cmpsl
push
rorl
test
repnz
sarb
xor
cmp
jecxz
xor
or
pop
test
mov
cmc
int
cmp
jecxz
xchg
and
pop
jecxz
popl
icebp
fsub
mov
inc
pop
add
sbb
jl
push
int3
or
jne
cli
sub
jge
sti
add
mov
cmp
dec
cltd
ds
cmc
loope
jmp
aam
ljmp
incl
mov
mov
xorl
inc
lcall
add
dec
push
sbb
lcall
sub
pop
fidivs
call
push
pop
or
cmp
in
movsl
aas
cmp
add
clc
mov
jg
iret
mov
inc
jb
test
icebp
and
scas
jl
dec
imul
jo
aaa
fucompp
push
mov
test
movsl
pop
icebp
stos
mov
add
or
push
xor
lock
in
and
jecxz
mov
popf
stc
jl
pop
jmp
or
xchg
push
call
push
clc
mov
xor
lds
pop
ficomps
xor
clc
and
nop
or
pop
cli
dec
lods
mov
je
mov
jne
clc
sub
std
or
decl
mov
es
sbb
jle
std
push
push
orb
loopne
shrl
sbb
sbb
push
jecxz
ljmp
les
mov
jl
pushl
jno
ja
lods
loope
adc
cmc
clc
aam
ret
and
mov
sbb
aaa
inc
pop
or
pop
mov
add
pop
push
add
cmc
cltd
icebp
sub
xchg
sbb
pusha
fidivrs
shl
sahf
inc
test
adc
cmpsb
sub
in
jg
dec
cwtl
dec
inc
xchg
ds
pop
mov
aaa
sbb
inc
inc
dec
daa
nop
out
mov
jl
push
mov
negb
stc
xor
pushl
xor
out
xchg
lret
dec
movsb
mov
mov
jle
out
ja
lock
mov
cmpsb
xchg
inc
scas
in
cli
cltd
icebp
aaa
sub
jg
inc
movsb
lret
popa
nop
in
jecxz
cld
jns
call
sub
jne
push
cltd
aaa
push
mov
icebp
mov
xor
movl
cwtl
daa
jno
hlt
mov
insl
dec
aaa
scas
cpuid
dec
jge
lds
clc
dec
mov
lds
adc
loopne
bound
std
pop
pop
lahf
mov
lret
fildll
mov
das
fidivrl
dec
ds
pop
loope
icebp
je
mov
leave
mov
ficomps
inc
pop
in
leave
dec
idivl
adc
in
inc
jl
inc
aaa
cs
pushl
mov
cs
pop
jl
andnps
jge
pop
push
mov
adc
stos
dec
ds
pop
stc
pop
test
fstpt
lock
sbb
loope
fidivrs
mov
xchg
lcall
test
pop
jg
pop
and
push
sbbl
in
mov
jns
adc
or
xchg
loope
ss
aas
ret
push
out
sub
sar
jb
sub
mov
dec
and
lret
and
lods
jg
std
loope
insb
inc
inc
sbb
xchg
xchg
loopne
test
cmp
mov
js
push
adc
lret
mov
push
xor
mov
sti
fidivl
movsb
lock
jo
ds
dec
cmpb
mov
mov
cmc
cmc
cltd
push
icebp
mov
cmp
in
das
clc
push
clc
filds
sahf
testl
pop
lods
push
and
push
pop
sarb
and
out
jo
xchg
dec
mov
fidivrs
mov
xchg
clc
push
add
mov
dec
insl
mov
hlt
cmp
pop
inc
xchg
std
jbe
mov
push
ds
pop
pop
test
fiaddl
outsl
mov
lea
mov
sarl
clc
lret
push
xlat
clc
imul
loop
ds
push
dec
clc
jns
xchg
pop
icebp
pop
adc
jg
outsl
cmpsl
addr16
popa
jmp
pop
rorb
clc
das
jo
movsl
ret
lock
lds
cli
pop
xor
jg
or
add
fidivs
xchg
outsb
test
push
jle
mov
mov
int
jg
ds
shrb
xor
int
cmpb
cmp
cmp
int
cltd
aaa
bound
mov
addr16
sbb
idivb
jge
ret
dec
mov
pop
lret
clc
nop
das
lock
ja
out
xchg
cmp
icebp
popa
or
ficompl
lahf
jl
lahf
aam
mov
push
cld
rol
mov
faddl
mov
out
nop
pop
xor
test
cwtl
sub
gs
rcll
loopne
in
loope
sub
pop
cmp
pop
pop
cmp
clc
push
loopne
clc
test
stos
aam
repz
push
xor
or
incb
loopne
pop
adc
js
faddl
shr
call
clc
jo
loopne
xchg
out
loopne
aad
in
jns
ds
ds
clc
jae
repz
mov
mov
jecxz
into
clc
aad
mov
push
mov
lret
lahf
out
das
clc
popf
clc
out
jecxz
adc
pop
mov
push
je
shl
mov
push
stc
or
jb
imul
call
sbb
jle
sbb
add
jno
and
add
aam
decl
inc
cmpsb
outsl
push
jecxz
inc
pop
adc
insl
hlt
insl
imul
in
mov
mov
pop
popa
add
jecxz
push
pop
push
popf
add
mov
mov
inc
jmp
lds
mov
faddp
loop
adc
aaa
fisubl
hlt
rcrb
rcl
testb
add
fstpl
mov
clc
inc
jecxz
ret
loope
ljmp
fadd
icebp
xchg
outsl
mov
movsl
fstpt
sub
pusha
and
sub
fstpt
jmp
jecxz
jl
jne
inc
cmp
sbb
add
mov
cld
out
sahf
add
push
or
adcl
cli
dec
mov
arpl
or
movsl
imul
das
mov
push
mov
add
sbb
clc
ret
frstpm(287
or
cli
sbb
inc
icebp
adc
inc
hlt
rorb
inc
outsl
icebp
jno
call
icebp
or
and
dec
adc
pop
push
fimuls
icebp
xor
cli
mov
adc
aad
sbbl
mov
movsl
lods
add
push
mov
test
aaa
push
lock
inc
inc
push
cmc
pop
outsl
icebp
xchg
pop
jle
pop
ret
test
test
insb
cwtl
clc
outsl
mov
aam
sbb
aam
loope
ja
mov
jmp
add
shll
enter
adc
mov
loope
pushl
clc
inc
mov
call
stos
insl
add
insl
sti
mov
and
lcall
std
bnd
scas
inc
fdivrp
ret
pop
pop
ss
push
arpl
icebp
movsl
fisubrl
fucomp
xchg
insl
or
clc
pop
pop
or
push
inc
ret
pop
sub
cmp
aaa
xor
mov
lret
or
rol
popl
mov
clc
in
jg
adc
push
jbe
es
add
pop
sbbb
adc
sub
xorl
jno
jecxz
sub
std
mov
add
dec
int
add
jne
insl
fdivr
mov
out
mov
bound
jecxz
sbbl
mov
sub
lret
jl
nop
push
mov
gs
dec
push
or
subl
mov
stc
dec
sub
lock
push
mov
mov
push
add
adc
ret
xor
outsl
cld
das
push
sti
mov
mov
test
inc
test
orl
push
mov
pop
push
and
jg
neg
cs
cmc
or
push
and
std
push
shrl
mov
jmp
push
pop
mov
xor
in
jg
xchg
es
xor
jg
ljmp
xor
adcb
jns
xor
xchg
ror
mov
gs
mov
sub
les
push
orb
dec
mov
clc
xor
or
sub
xchg
or
imul
inc
inc
popf
loop
or
stos
bound
scas
cmp
mov
mov
cmpl
adc
xchg
lea
mov
inc
mov
std
fistpl
lcall
xchg
pop
pop
ficomps
mov
xchg
fmull
outsb
dec
fsubl
sbb
ret
ret
int3
inc
xor
into
fstl
push
jp
das
cld
cmp
push
xchg
inc
shl
mov
int
dec
out
outsb
insb
pop
mov
dec
dec
loopne
test
and
cmp
jl
sahf
dec
test
sbb
lcall
and
lods
das
mov
cltd
jge
xchg
xchg
and
ror
xchg
xchg
popf
rcll
sbb
xchg
and
or
call
shlb
jecxz
and
dec
and
filds
push
arpl
adc
fs
mov
call
sbb
and
mov
xor
jmp
mov
xor
push
std
sbb
btr
mov
les
outsl
jg
mov
lea
cli
xor
pop
xchg
xchg
mov
lcall
jno
shlb
and
mov
lock
xchg
lods
std
add
adc
incb
sbb
jae
lcall
das
std
lcall
push
int3
fnstcw
outsb
push
adc
adc
mov
xorb
daa
subb
mov
pop
or
data16
sbb
xchg
push
xchg
rol
test
dec
int3
mov
inc
mov
aas
rcll
mov
cmp
call
mov
inc
inc
or
xor
add
push
mov
adc
or
or
rorb
ret
jl
xchg
mov
loopne
popf
mov
lahf
pop
outsl
cmc
shl
lea
mov
mov
pop
cmc
mov
pop
movsl
mov
mov
lods
call
mov
bound
lock
push
jg
jo
in
and
cmpsl
sub
data16
pop
sub
mov
and
imul
pushf
adc
push
mov
jecxz
xor
push
out
cld
adc
inc
lahf
inc
adc
ret
ljmp
fs
rcrb
pop
add
pop
inc
lcall
adc
sbb
mov
jmp
aad
sbb
push
push
mov
mov
clc
mov
pop
dec
mov
mov
dec
xchg
das
mov
mov
cmp
out
clc
aaa
notl
inc
movsl
sbb
mul
sub
mov
push
lret
and
les
and
jle
ljmp
mov
xchg
jecxz
adcl
mov
scas
imul
mov
adc
or
mov
mov
cmp
mov
and
loopne
and
push
outsl
fsubrl
sbb
loop
sarl
mov
arpl
ficompl
clc
ficomps
sahf
test
or
and
push
fildll
fildl
mulb
and
lcall
jno
enter
lret
adc
sbb
jno
pop
mov
push
mov
test
xor
fbld
pop
jp
sbb
call
push
xchg
imul
leave
and
std
xor
mov
jmp
roll
arpl
out
dec
inc
adc
cmp
inc
dec
fnsave
xchg
aad
repnz
adc
sti
inc
mov
lea
inc
pusha
dec
faddl
adc
or
and
mov
sub
mov
icebp
test
sbb
fs
or
out
mov
outsb
and
test
adc
ljmp
std
fucomip
shll
mov
inc
mov
mov
in
mov
xchg
cmp
nop
lea
inc
inc
jge
loopne
sbb
jne
out
lock
lock
aad
push
dec
push
inc
mov
repz
sar
mov
inc
in
sub
test
and
repz
or
adc
mov
syscall
fwait
incl
ds
push
rorl
scas
jno
incl
pop
lcall
mov
jno
push
cli
lcall
imul
sahf
or
sbb
in
mov
cwtl
cltd
and
cld
pop
movsl
pop
mov
pop
fstl
rol
adc
mov
or
mov
enter
ds
mov
or
movsb
loopne
incl
aam
xor
pusha
mov
cmp
mov
shlb
adc
mov
cmp
xchg
jmp
js
pop
jg
jmp
mov
cltd
ret
pop
movsl
mov
adc
xor
add
xor
mov
fs
mov
int
xchg
mov
imul
push
js
xchg
push
push
fdivs
cmp
pop
bound
or
incl
icebp
adc
sbb
stc
and
repz
jbe
lcall
inc
dec
xorb
add
ljmp
and
stc
mov
aam
or
clc
lock
aaa
js
and
or
loopne
dec
pop
nop
pop
mov
push
cmp
movsb
shrl
stc
es
or
dec
sub
add
fcoms
cli
test
decl
mov
dec
dec
mov
xor
mov
jno
adcb
icebp
sub
push
push
ljmp
lock
push
int3
enter
mov
sub
mov
xor
popa
sub
test
mov
icebp
and
fistpll
adc
jnp
mov
dec
cmpsb
or
mov
mov
xchg
mov
ja
insl
or
mov
outsl
decl
push
mov
and
imul
sarb
addb
xor
div
mov
mov
shlb
push
call
ljmp
cmp
jae
out
xchg
dec
sbb
cmp
jno
cmpsl
mov
das
mov
cli
mov
out
adc
or
popa
push
mov
fisubrs
mov
xchg
std
fildl
cmp
and
sbb
repnz
pop
cmp
add
sar
and
mov
cmpsb
orl
jp
xor
outsl
shl
icebp
push
mov
xchg
imul
add
add
mov
pushl
adc
mov
inc
out
repz
in
rolb
cmp
out
loopne
sub
mov
das
mov
mov
scas
call
clc
sbb
ljmp
ss
mov
xchg
loopne
leave
sub
daa
jl
push
fcoms
push
in
add
aaa
xchg
pop
sub
sarb
shll
fisubrl
cmp
pop
jmp
mov
and
push
aaa
adc
push
inc
pop
add
inc
xor
fcmovu
outsl
cld
fbstp
sub
ja
ror
mov
xchg
inc
je
inc
push
filds
inc
and
mov
xchg
pop
loopne
xchg
int3
and
mov
fldenv
cld
dec
lret
mov
xor
jecxz
outsb
add
add
fcomps
jg
push
lock
add
popa
lcall
clc
std
adc
or
daa
movsb
or
inc
ljmpw
ljmp
xchg
mov
loopne
in
inc
cli
sti
mov
sar
idiv
inc
jbe
push
mov
sub
into
mov
xor
dec
push
decl
hlt
shl
cmp
mov
cmp
mov
outsl
or
stos
fimuls
xchg
push
sub
idiv
mov
pusha
jmp
fdiv
arpl
xchg
fisttpll
call
clc
inc
adc
fwait
pop
in
dec
xchg
cltd
mov
mov
out
fidivrl
mov
cmp
lods
lods
pushl
leave
mov
into
fsubrl
movsb
loopne
inc
mov
inc
inc
sbb
test
pop
std
pop
mov
lret
pop
xor
movsl
faddl
lahf
cmpsb
test
push
mov
push
fnsave
inc
daa
into
ficoms
sub
and
or
adc
scas
into
std
lea
ja
jmp
pop
adc
adc
cld
mov
add
pop
cwtl
aad
dec
jo
xchg
xchg
and
outsl
pop
mov
and
pop
xlat
or
xchg
flds
ljmp
jb
das
fldcw
adc
out
out
xchg
push
mov
and
call
jne
out
pop
cmc
xchg
adc
roll
cld
jg
jne
outsb
adc
pop
fiadds
out
xor
mov
mov
xor
cmpsl
dec
xchg
mov
icebp
ficomps
aad
fbstp
adc
or
sub
out
pop
sbb
hlt
call
push
les
rorb
cld
js
cld
in
xchg
fisttps
adc
bound
jl
loop
fcmovbe
movsb
cltd
loopne
mov
pop
jmp
mov
rolb
rcr
cmp
rclb
fidivrs
jae
div
out
std
pushf
subl
loopne
adc
mov
push
xchg
aaa
das
pop
outsb
inc
mov
and
xor
aas
popa
addr16
or
call
aaa
mov
or
jnp
jmp
sub
or
jo
pop
xor
xor
mov
adc
jecxz
pop
and
cmp
cmp
pop
addr16
sbb
cwtl
inc
or
adc
sahf
and
jg
push
hlt
into
out
lahf
test
add
pop
mov
fs
xchg
jl
push
cmp
push
mov
add
call
jnp
jp
nop
scas
xchg
in
pop
jae
ljmp
push
data16
sbb
fcoml
test
cltd
and
cmp
fbstp
push
lcall
mov
stos
push
out
int
or
pop
lock
dec
adc
add
and
test
lea
popf
movsl
dec
repz
cmp
sub
mov
fcmovnu
clc
jbe
xchg
rorl
jnp
rorl
xchg
and
lea
and
mov
cmpb
mov
mov
jle
push
cmp
adc
mov
mov
xchg
repz
xchg
mov
lock
loop
push
fistl
mov
mov
dec
andb
js
add
inc
or
clc
outsl
clc
xor
mov
in
adc
mov
mov
adc
add
int3
dec
push
adc
pushl
fstpt
fisubs
pop
sbb
je
mov
pushl
or
push
inc
add
leave
sub
or
mov
add
mov
dec
adc
add
cmp
arpl
lea
add
sti
fsub
mov
les
mov
mov
lahf
scas
testl
pop
dec
popf
inc
call
sti
inc
aaa
mov
mov
cmp
push
pop
loopne
push
idiv
out
push
mov
nop
rorl
ret
mov
cld
pushf
cvtpi2ps
sub
divb
mov
notb
sbb
and
add
outsb
inc
mov
rorb
loope
and
mov
enter
sub
inc
pop
in
fsubrl
fcmovu
cmp
xchg
notl
daa
orb
fsincos
addr16
call
fiaddl
iret
add
dec
icebp
xor
shrl
mov
inc
push
jno
jl
test
sub
call
lret
lock
lock
out
fs
lahf
insb
push
cmp
pop
sub
incl
and
jmp
inc
and
add
data16
divb
call
pop
cwtl
mov
or
cltd
clc
jg
loopne
jecxz
push
scas
cmpsb
jne
pop
gs
cmpsb
enter
dec
inc
mov
cld
inc
xchg
jne
mov
mov
adc
movsl
jecxz
add
scas
clc
outsl
jl
jmp
sbb
dec
pusha
mov
inc
push
or
mov
test
fmull
add
clc
pop
or
mov
dec
adc
dec
mov
movsl
arpl
mov
jnp
ljmp
cmp
xchg
cmp
fwait
into
jmp
cmp
mov
jg
imul
add
or
in
lock
les
loopne
lock
cmp
rorb
test
lret
stos
sbb
outsb
hlt
das
push
mov
xchg
les
xchg
lods
mov
pop
jo
xor
dec
repz
test
cld
or
mov
xchg
sub
or
ret
push
pushf
cmc
test
fisttpl
sbb
lret
test
push
jp
inc
ret
cli
fistpll
ja
or
out
xor
imul
xchg
ds
hlt
or
ror
cmp
dec
mov
ljmp
inc
or
adc
mov
movsb
push
and
and
cmp
fdivr
adc
scas
add
cltd
add
adc
lcall
bound
cmpsb
adc
add
ret
test
in
inc
loope
in
orb
lcall
push
fnstsw
push
sbb
mov
dec
lea
loope
or
call
cmp
rcll
and
nop
mov
add
pusha
sub
cmp
sub
jo
jne
int
pop
push
pop
inc
std
outsl
cmc
sbb
push
xchg
stos
lods
rolb
cmp
pusha
push
inc
dec
mov
pop
mov
rcrb
push
loopne
icebp
movsl
mov
lock
shl
jmp
ret
jle
test
mov
das
mov
xorl
mov
pop
dec
mov
jnp
adc
cwtl
enter
push
daa
sub
andl
pop
js
mov
mov
sbb
stos
sbb
push
pushl
shll
dec
dec
imul
gs
aaa
and
rolb
ds
cmp
jne
pop
and
jns
add
pop
jb
cmc
lea
jecxz
adc
out
nop
mov
mov
sub
iret
xor
mov
clc
adc
mov
jp
test
inc
andb
ljmp
lret
cmp
push
lock
sbb
cmpsb
mov
outsb
je
movsl
fildll
jg
sbb
dec
ret
cli
dec
rorl
inc
cld
mov
popa
adc
jg
ret
fcomps
mov
repnz
xchg
push
les
in
jmp
mov
and
sbb
add
sub
mov
stos
jecxz
pop
test
ret
mov
push
or
sub
or
mov
mov
and
decl
jecxz
movsl
scas
mov
or
sbbl
or
gs
and
push
xor
xor
mov
jle
lods
sbb
sbb
lcall
outsl
jg
dec
adc
hlt
js
cmp
adc
push
add
outsl
call
push
or
rcl
xlat
bound
insl
add
jl
iret
sub
lock
dec
int
sub
xchg
inc
mov
cltd
add
enter
jg
ds
mov
imul
xchg
pop
inc
xor
imull
jns
mov
outsl
mov
xor
sub
roll
pop
clc
dec
shlb
or
xchg
cltd
jmp
adc
dec
xchg
lods
mov
lock
lcall
ds
pop
mov
je
sub
xchg
dec
add
xor
pop
test
cld
call
xor
jle
dec
adc
adc
xchg
movsl
loop
loope
pushf
jmp
mov
out
and
lcall
shrb
fnop
inc
nop
dec
call
rclb
cmc
mov
xor
add
outsl
mov
icebp
hlt
js
rolb
jb
mov
cmc
call
and
dec
pop
adc
stc
sub
sub
sub
cli
pop
pop
incb
dec
jo
fwait
xchg
negb
push
jecxz
sbb
cld
outsl
std
pop
xchg
sbbl
or
pop
mov
inc
sbb
ret
adc
dec
add
rclb
or
jmp
jecxz
es
lds
shl
into
cmp
inc
mov
and
ret
ret
pop
addl
or
out
cmp
or
mov
push
inc
xor
cmc
xor
push
add
hlt
fbstp
add
jl
out
jecxz
inc
xchg
xor
in
mov
adc
adc
lcall
sar
sbb
pusha
call
cmp
sbb
sti
xor
add
push
std
jbe
shrb
mov
xchg
jp
fidivl
filds
enter
aad
shlb
xchg
movsb
mov
xchg
mov
nop
es
adc
cld
push
and
es
jne
inc
sbb
test
mov
test
call
psraw
outsl
daa
dec
loop
dec
add
cmc
mov
jle
jne
insl
and
fs
loopne
pop
mov
je
mov
push
xchg
sub
in
mov
cmp
pop
cli
in
sbb
xor
pop
sub
inc
movsl
out
repnz
cs
pop
aad
cmp
inc
decl
aaa
cli
ffreep
adcb
dec
xchg
sahf
xor
cld
pop
add
xor
add
push
in
inc
int3
xlat
scas
and
push
xorb
mov
int
mov
bound
pusha
jmp
push
es
scas
out
cld
jecxz
inc
decl
dec
pop
mov
sub
cmp
pop
in
jbe
or
scas
add
es
decl
pusha
inc
pop
lock
mov
inc
adc
test
mov
lds
clc
mov
es
jno
xchg
xchg
pop
inc
push
popf
mov
xor
pop
mov
pop
popf
dec
pop
inc
decl
enter
pop
nop
or
std
psrlq
mov
xchg
push
and
mov
jmp
mov
sahf
cwtl
push
or
outsb
push
jp
jns
cltd
push
cmp
push
mov
aam
daa
mov
ss
jp
fisubrl
pop
ficomps
sbb
leave
add
outsl
fistpl
movsb
add
dec
fildl
push
xchg
pop
and
gs
pop
or
and
pop
lret
inc
push
mov
jmp
jmp
cmc
and
add
sbb
push
dec
sub
stc
subb
lock
inc
pop
lea
mov
inc
pop
xor
dec
mov
loope
and
dec
and
mov
xchg
sbb
xorb
xor
ret
adc
push
fcompl
loopne
push
adc
jp
add
mov
push
adc
push
mov
pop
fs
xor
rorb
cltd
push
scas
add
xor
xor
dec
cld
das
es
fstl
gs
cmp
mov
incl
add
int3
pop
push
mov
sbb
pop
decb
cld
pop
jb
test
les
mov
std
jge
cmp
adc
and
icebp
call
enter
lret
stos
loope
xor
insb
adc
or
sbb
push
mov
push
std
pop
pop
cld
cwtl
mov
inc
ret
ljmp
bound
xchg
adc
das
or
shlb
pop
incb
fwait
and
adc
or
cmc
in
xchg
test
mov
out
adc
cmc
fildll
ffree
add
fcmovu
push
enter
xor
cmp
movsl
cmpsl
orl
dec
movsl
lret
mov
adc
or
mov
sbb
xchg
mov
and
out
orb
test
sub
das
lock
or
int3
lahf
xor
loopne
sub
mov
lcall
rorl
icebp
les
cwtl
adc
js
ja
inc
inc
lea
icebp
mov
adc
repz
test
jcxz
subb
xchg
mov
cmc
pop
mov
lcall
in
lds
xchg
ret
je
adc
adc
popf
or
sub
loopne
xor
leave
mov
adc
iret
adc
sub
pop
ficoml
scas
loope
mov
pop
js
pop
or
loope
add
xchg
gs
mov
cld
sub
test
add
jmp
mov
jb
add
or
jp
xor
cmpsb
shl
jno
outsl
movsl
and
and
std
movsl
dec
mov
sarb
push
sbb
sbb
xchg
or
data16
in
sbb
repnz
lret
jne,pt
cld
mov
stc
adc
call
inc
std
shll
mov
addb
pop
data16
lock
mov
mov
sbb
aam
mov
loope
push
jl
or
inc
es
pop
mov
call
popa
jg
xchg
aam
arpl
cmp
or
sbb
adc
lahf
sarl
movsl
xchg
decl
mov
sub
xchg
test
aam
lods
add
push
adc
lds
mov
mov
pop
test
call
mov
loope
xchg
or
je
sahf
push
data16
jno
jbe
jbe
je
bound
aad
shr
pop
pop
pop
jle
arpl
adc
js
xchg
lret
scas
sbb
dec
sub
jg
mulb
stos
out
cmp
adc
or
pop
sbb
add
sub
test
decl
push
push
icebp
lods
das
cld
xlat
inc
or
movsb
sub
sti
inc
aaa
imul
in
mov
push
sahf
fistl
enter
test
call
outsl
test
popa
js
pop
jno
mov
dec
outsl
test
cmp
inc
mov
jno
mov
add
pushf
movsb
or
pop
sbb
and
mov
outsb
out
or
sub
rorb
pop
clc
pushl
insb
call
ds
std
mov
push
div
lods
lea
cmp
xchg
mov
push
notl
add
test
inc
mov
call
fildl
movsl
fs
ficomps
push
outsl
pusha
repnz
adc
nop
pop
loope
push
jg
test
dec
sub
mov
xchg
movsl
outsl
outsl
hlt
dec
jno
mov
fmuls
and
mov
fistl
jp
xor
in
lea
rorb
mov
fdivrl
loop
ret
cmp
mov
lods
push
lret
ret
sbb
insb
std
inc
mov
lretw
aad
pop
cmp
mov
imulb
loopne
push
inc
sbb
loopne
jne
mov
outsl
dec
jl
into
test
int3
test
bswap
xchg
cmpsb
insb
adc
adc
or
clc
dec
sbb
push
sub
inc
mov
fwait
or
ret
pop
sbb
pusha
push
mov
ljmp
pop
jl
cmp
in
fs
and
outsl
or
jg,pt
pop
cmp
addr16
pop
subl
add
sub
xchg
icebp
mov
mulb
aas
rorl
leave
pop
int
add
fadds
cwtl
mov
xchg
mov
mov
jbe
or
push
pop
sub
test
movsl
cli
inc
enter
sahf
test
xchg
pop
dec
cld
push
pop
shll
fcomps
inc
sub
adc
stos
jp
jbe
mov
push
push
pop
sub
pop
dec
mov
sub
sbb
and
das
std
dec
xor
xchg
addr16
stos
jne
push
cmp
xchg
add
and
inc
aaa
inc
mov
leave
pop
rolb
mov
mov
enter
mov
fdivr
ljmp
rorl
fs
pushf
pop
add
out
jge
push
push
pop
decl
cld
sbb
adc
and
mov
filds
adc
inc
push
bound
rcll
pop
int3
loop
popf
cmc
and
inc
adc
xor
or
cmp
or
inc
decl
xor
mov
and
inc
pop
adc
pop
lret
xor
cmp
je
cmpsb
push
jecxz
and
leave
adc
fists
je
mov
jecxz
fadds
pop
cli
ljmp
je
cs
adc
or
test
push
adc
cltd
ss
aaa
decl
and
push
add
add
and
inc
ljmp
inc
rcrb
push
pop
xchg
push
cmp
lods
call
sub
cmpsl
pusha
pop
jmp
lock
jl
and
out
or
jg
jle
repz
insb
scas
or
fwait
push
jp
push
xor
sub
cmp
mov
in
outsl
addr16
scas
jecxz
in
jg
sbb
ss
mov
mov
ret
mov
inc
sti
adc
xchg
xlat
xchg
ds
mov
clc
leave
and
xor
mov
lret
repz
push
test
in
adc
xor
sarl
adc
sub
sub
js
pop
pusha
sti
das
out
aad
js
clc
sub
clc
or
mov
aam
movsb
mov
mov
jae
mov
cmp
and
or
add
jb
push
push
mov
cld
es
xor
xchg
insb
mov
clc
movsl
pop
dec
sub
push
imul
xchg
adc
xchg
loopne
test
jg
cmp
jecxz
inc
xor
xor
sub
or
fstps
jl
mov
xchg
cmp
rol
lods
out
pop
sbb
add
insb
push
rcrb
lods
call
les
sahf
xchg
shl
xchg
mov
push
cmp
pop
enter
mov
loope
jo
repnz
outsl
cbtw
mov
mov
pop
xor
cmp
clc
push
cmp
push
insb
movsb
xchg
xor
sub
sub
cli
fists
test
mov
mov
bound
jne
dec
adc
or
cli
lcall
pushl
push
inc
dec
or
jns
xchg
pop
inc
and
mov
pop
mov
push
or
insb
movsl
fildll
mov
shlb
mov
test
sub
scas
stc
mov
sub
or
pop
jle
lods
je
and
cli
call
mov
push
loop
inc
xor
add
ljmp
jecxz
mov
shlb
add
push
jp
icebp
push
stc
sub
inc
and
in
popf
sbb
mov
cli
pop
adc
cli
dec
mov
enter
popa
imul
mov
push
pop
adc
std
andb
jge
cmpsb
mov
xor
roll
adc
cmp
jg
loopne
lret
incl
sub
subb
mov
sub
mov
push
and
pusha
loope
stos
push
mov
shrl
je
rorb
ret
inc
xor
and
insb
std
jmp
idivl
or
scas
inc
xor
and
cli
outsl
mov
shrl
lea
xor
cmp
mov
push
add
mov
mov
in
push
mov
stos
pop
int
inc
cmp
or
outsl
adc
mov
dec
fneni(8087
cmp
and
mov
addr16
add
jno
push
cmp
sbb
fldcw
dec
and
push
xor
decl
lcall
cli
sub
cmp
fstps
cmp
movsb
hlt
lock
lock
and
jp
push
into
jae
inc
inc
cmovno
pop
cs
mov
aad
or
insl
jl
loope
shr
sti
sti
pop
pop
sahf
xor
lcall
and
xlat
sub
pop
inc
mov
mov
inc
int
and
cld
rorb
add
stos
sbb
or
jecxz
loopne
jo
popa
cli
and
xor
rclb
fwait
add
inc
addb
test
xchg
jno
lock
mov
add
xchg
loopne
mov
out
sahf
and
cld
mov
inc
xchg
shrb
movsl
in
adc
std
addr16
push
inc
jb
pop
jmp
jge
outsl
mov
in
gs
jmp
mov
mov
mov
cmpsl
neg
clc
das
jo
sar
ja
push
jg
pushf
inc
inc
pushl
xor
in
je
ss
jmp
jae
cmc
ljmp
cmpsl
sbb
in
add
sub
push
cmpl
pop
test
ret
aas
xor
jno
gs
arpl
pop
sbb
mov
fsubs
add
add
arpl
decl
jne
loopne
add
add
fbld
lock
inc
outsl
outsl
mov
repz
scas
sub
fidivrs
jecxz
and
decl
lcall
daa
orl
jb
pop
cwtl
cmp
nop
lret
das
adc
test
cmp
jle
xchg
inc
test
shl
insb
cmp
popa
jb
lret
adc
mov
sbb
popf
je
fs
or
pop
in
divb
or
xchg
rcll
dec
in
lea
scas
loop
test
and
test
shlb
jg
cmp
outsb
jns
or
mov
pop
or
push
adc
mov
cmp
faddp
jmp
shlb
loopne
sbb
adc
mov
push
xor
or
rol
mov
or
das
sub
pusha
repz
stos
and
dec
and
jae
xor
lret
jg
jg
xor
shlb
jmp
mov
adc
sub
out
xchg
mov
xchg
mov
add
call
dec
jp
jg
jmp
test
jns
cmp
adc
test
lahf
inc
sbb
mov
stos
cwtl
jle
adc
in
cmp
stc
adc
js
mov
mov
or
ds
fildll
shr
sub
and
aad
jnp
pop
jge
sub
daa
insb
imul
dec
xchg
pop
cmp
arpl
test
fdivs
or
pop
dec
xor
inc
pop
mov
in
mov
cld
dec
pop
pop
fcmovu
mov
mov
jge
or
lods
sbb
push
pop
sub
movsl
pushw
xchg
or
mov
es
in
adc
push
loope
outsb
pop
sti
and
push
sub
and
cmp
push
mov
stos
fwait
dec
imul
adc
lods
mov
jl
pop
ss
lcall
dec
mov
cli
aas
jp
pop
dec
add
ret
sub
pop
js
shrb
or
mov
xchg
fsub
push
cld
push
or
xor
das
hlt
aaa
rolb
adc
jmp
xchg
jl
or
xor
pop
mov
pushl
inc
sub
lea
jge
pop
mov
icebp
lods
mov
lret
cmp
or
adc
stc
test
pushf
cmp
cmpsl
jno
das
fsubrl
repnz
repnz
jae
cli
or
movsl
push
or
stc
mov
in
xor
jg
fdivs
and
push
and
xchg
and
jmp
or
jmp
hlt
xor
mov
imul
hlt
cs
jmp
inc
jae
call
subb
test
call
sbb
pop
fisubs
inc
ljmp
mov
add
enter
imul
adc
inc
mov
mov
loopne
pop
in
jmp
jb
and
pop
hlt
out
scas
push
fldenv
dec
xor
inc
xchg
mov
sbb
popa
sti
push
inc
add
shrl
sub
ret
jns
and
push
mov
cmp
lods
into
jle,pn
lods
or
mov
inc
mov
add
icebp
mov
xor
jle
mov
mov
mov
ds
das
insl
mov
jecxz
dec
jb
inc
mov
nop
mov
mov
mov
ljmp
pusha
pop
pop
jns
sbb
cmp
lcall
lock
push
cmc
inc
mov
and
dec
dec
es
mov
movaps
add
fcmove
lods
pop
inc
mov
bound
call
movsl
dec
xchg
mov
sub
mov
int
fcos
add
mov
sbbb
popf
and
xchg
repz
outsl
icebp
fucomi
adc
outsl
push
jnp
adc
jg
dec
aas
es
cli
mov
cmc
aam
and
aam
test
cmpsb
jg
incl
lret
mov
or
sub
hlt
sbb
shll
fucomip
push
shrb
xchg
pop
test
sbb
pop
ret
jl
das
js
test
mov
adc
jp
adc
and
test
aaa
mov
popf
je
and
jno
jb
mov
enter
mov
decl
lock
jne
rcl
mov
rclb
mov
clc
outsl
push
mov
cltd
pop
movsb
jp
fcoml
cmp
fists
xchg
stos
jno
iret
nop
mov
xchg
out
sub
jo
pop
xchg
stos
outsl
lds
stos
mov
xor
and
xchg
add
adcb
or
movsl
ret
mov
test
rcll
fidivl
dec
and
fdivrl
test
sbb
add
int3
lret
lea
pop
push
fiaddl
mov
push
sub
scas
lods
outsl
jg
push
loope
shll
sti
js
lcall
jg
pop
add
xchg
or
add
adc
and
xlat
mov
and
in
movsb
and
js
pusha
das
lock
loop
orps
movsl
js
mov
lret
outsl
std
lea
add
sti
xchg
push
aaa
pusha
mov
test
mov
lea
das
mov
add
push
mov
mov
flds
pusha
push
sbb
incb
les
lds
add
mov
jo
dec
scas
test
pop
cli
ljmp
pushf
dec
cld
cld
cmp
jl
lret
pop
add
ljmp
add
mov
mov
inc
cmp
iret
out
rclb
std
add
ljmp
icebp
and
mov
mov
cmp
cmp
or
dec
test
repnz
sbb
das
sub
in
sub
lods
imul
imulb
clc
lock
jge
adc
add
cmp
outsb
push
ljmp
push
push
hlt
fcmovnb
fisttps
pop
mov
mov
xor
sbbb
cli
test
jl
movsl
out
call
cmp
icebp
and
inc
ss
fmuls
test
sbb
push
mov
lea
lahf
rcrb
mov
lahf
and
test
adc
and
test
fistpl
int
loopne
mov
pop
jle
add
jno
insb
xor
fcmovnb
pop
push
imul
inc
popf
in
cmp
rolb
pop
add
sub
mov
jno
andl
scas
mov
xchg
jne
xchg
adc
and
sarl
data16
out
pop
out
xor
jmp
inc
gs
jmp
test
imul
and
push
push
pop
push
dec
out
fdivrl
cmpsb
and
rcrb
lds
xchg
jle
shrb
bound
std
cmc
repnz
jg
mov
mov
jl
and
jmp
inc
test
pop
mov
test
mov
or
aas
hlt
daa
jecxz
push
jo
lock
std
cltd
mov
push
out
dec
loopne
shl
and
jmp
inc
mov
and
std
fbstp
pop
sub
ljmp
push
adc
mov
jmp
in
and
dec
cwtl
push
roll
lds
mov
inc
stc
cs
push
sub
lcall
or
cmp
lret
testb
mov
xchg
cmp
faddl
pop
add
xor
pop
cli
lcall
sub
pop
lcall
loope
sub
das
xchg
inc
lar
fimull
dec
outsb
sbb
push
loopne
pop
adc
jmp
dec
push
lret
mov
lcall
mov
ds
adc
incl
les
and
jg
imulb
mov
or
xchg
into
and
ret
and
adc
cli
mov
loopne,pn
lcall
inc
push
lret
mov
dec
gs
sbb
idiv
adcl
pop
imul
lds
test
jns
mov
sub
sbb
in
bound
xor
push
std
js
movsl
sub
xchg
mov
mov
xorb
xor
out
dec
das
hlt
mov
sub
xor
cwtl
push
sbb
nop
cmp
movsl
mov
add
test
cltd
adc
clc
dec
cmp
pusha
lods
loope
sub
movsb
out
popa
mov
mov
add
clc
outsl
rcrl
xchg
clc
jp
das
loope
call
in
mov
icebp
and
ljmp
jge
in
sub
bound
mov
pushf
outsl
jle
dec
xchg
aad
insl
or
mov
movsl
sbb
loop
stc
pop
cmpb
jnp
dec
add
fildll
movsl
push
in
adc
stos
ljmp
xchg
xor
dec
call
decl
sbb
test
insb
inc
sahf
or
insb
sub
push
lock
int
imulb
or
fwait
lds
cmp
mov
lcall
xchg
mov
sahf
stc
dec
add
stc
jae
mov
adc
es
mov
stos
es
add
decl
or
fnstenv
fisttps
out
int3
test
popf
mov
in
filds
dec
popf
shl
xor
ljmp
xor
xor
jmp
test
cld
or
mov
std
cmp
imulb
dec
and
xchg
je
rcl
ljmp
mov
ss
push
nop
fisttps
dec
and
ds
jl
sbb
inc
scas
cmp
push
dec
push
inc
jecxz
lock
xchg
addb
dec
mov
mov
sub
push
outsb
std
pop
mov
shr
cmc
xchg
cmp
xor
and
hlt
ljmp
or
pop
inc
mov
in
sbbb
das
je
mov
fimuls
daa
jbe,pn
decl
enter
sub
ror
test
pop
outsl
mov
mov
inc
add
dec
jg
test
lods
pop
jmp
mov
das
std
imul
in
mov
icebp
pushaw
inc
add
sti
sub
jecxz
div
mov
xor
shll
jo
add
jbe
je
sub
in
sub
push
imul
push
cltd
mov
test
stos
sub
inc
inc
sbb
outsl
lcall
add
push
les
jns
sbb
dec
inc
xor
mov
add
or
mov
sbb
xchg
hlt
test
sub
sub
adc
frstor
xchg
mov
loop
pop
loopne
or
les
pop
ret
fs
xchg
fsts
outsb
or
stos
pop
fldt
xor
jge
ljmp
sar
xchg
repnz
xchg
add
sbb
adcb
stos
sbb
push
xor
jg
clc
fisttpl
and
jecxz
mov
loopne
call
dec
inc
je
sahf
and
decl
and
pusha
adc
enter
mov
arpl
jecxz
shll
movsb
andl
mov
aad
mov
pslld
andl
rolb
pop
pop
pop
jl
loope
xchg
push
or
xchg
clc
mov
dec
rcll
add
shll
dec
pushl
loopne
sub
pop
cli
icebp
jge
daa
mov
sbb
inc
decl
push
pop
les
mov
jno
mov
scas
mov
gs
jmp
adc
outsl
std
mov
xchg
and
mov
inc
mov
add
icebp
sbb
mov
add
cli
add
push
clc
mov
dec
sbb
imul
pop
clc
push
sbb
sub
test
clc
dec
ljmp
icebp
mov
lods
pop
prefetchwt1
popa
out
mov
and
jmp
rorl
inc
cmp
clc
fistpll
push
lds
fbstp
in
add
leave
in
in
insb
aaa
lods
loop
ret
test
add
cmpsl
mov
lods
aaa
sbb
test
enter
ret
jmp
out
loop
inc
xlat
sarb
pop
pop
xor
inc
leave
in
cmc
insl
les
cmp
das
mov
fwait
mov
fdivp
std
inc
pop
mov
sbbb
sbb
xchg
pop
std
ret
scas
or
pop
pop
lea
int
sbb
xor
sar
mov
dec
out
test
and
lcall
insl
and
or
push
ds
or
add
push
adc
lods
and
loopne
sub
movb
adc
enter
cmc
je
dec
arpl
std
jg
repz
cmp
leave
inc
mov
inc
sbb
leave
jb
jmp
xchg
sub
jne
xor
pop
add
das
fisttpll
pop
jno
insb
xchg
add
inc
lock
ret
rolb
xchg
sub
mov
cmp
cs
mov
pop
cmp
test
push
pop
pop
sbb
cwtl
xorl
fdivr
das
les
xor
mov
aas
fucomip
and
xor
xchg
lcall
popl
mov
lret
ja
hlt
dec
add
or
mov
lock
clc
mov
pop
call
xchg
mov
jg
fidivs
or
inc
js
adc
mov
pop
and
xchg
dec
xchg
pop
adc
fsubl
inc
and
testb
shl
loope
cmp
add
adcb
decl
jb
lock
and
jp
push
loopne
je
or
and
pop
adc
sub
mov
xchg
mov
inc
gs
adc
loope
shl
or
outsl
imul
push
cmpsb
fs
xchg
hlt
sbb
dec
add
repz
xchg
pushf
or
or
inc
pop
jb
adc
and
sbb
test
adc
push
inc
addb
mov
fildl
js
sbb
inc
hlt
mov
fiaddl
xor
sbb
call
mov
adc
inc
test
jg
negl
sbb
adc
mov
lret
sbb
inc
in
dec
enter
test
inc
lcall
adc
fadd
ds
shlb
xchg
pop
dec
mov
mov
pop
shll
fsubrl
sub
or
aaa
push
add
push
fsubrl
adc
add
pop
into
fldcw
sub
push
fldl
pop
lods
scas
inc
mov
pop
inc
test
jnp
and
inc
jmp
sbb
jo
sbb
std
test
sbb
cli
xor
stos
xlat
ret
or
push
xchg
test
or
andb
jmp
inc
loope
mov
outsl
mov
shrl
push
dec
jl
pop
lcall
push
cld
sub
shlb
gs
cltd
mov
mov
cmc
in
mov
rcll
mov
push
int
loopne
or
or
lods
jmp
dec
sub
xchg
inc
and
pop
js
push
popf
jnp
in
ljmp
xor
jo
push
pop
cmp
movsb
cs
add
js
xchg
push
fisubrl
fwait
mov
xor
push
loopne
cwtl
rcrb
pop
mov
pushf
sub
out
dec
push
std
inc
shll
enter
inc
xchg
push
aam
pushf
mov
cmp
or
or
sbb
outsl
xchg
mov
xchg
pop
fwait
dec
stos
icebp
shrl
and
inc
sti
cmp
aad
mov
mov
lea
dec
test
cltd
add
test
insl
pop
sub
and
lea
bound
xchg
xchg
and
aaa
outsb
icebp
popw
movsl
jno
jno
test
sarl
jge
adc
rcrl
lods
cmp
pop
outsl
dec
sub
cmc
cwtl
adc
fistpll
pop
inc
inc
shlb
testb
mov
mov
mov
outsb
testb
fwait
shll
sub
jb
push
mov
test
push
jl
mov
lahf
enter
sbb
nop
and
out
sbb
xchg
sar
fistpll
pop
cmpb
test
sbb
fwait
clc
mov
add
pop
add
std
imul
mov
adc
rolb
mov
ret
mov
push
sub
addl
bound
sarl
and
mov
cmc
mov
ret
or
jns
or
cmp
adc
adc
hlt
mov
pushf
inc
je
or
jo
ret
sub
dec
rclb
and
and
cmp
neg
incl
fwait
sahf
out
out
or
pop
jge
mov
xor
subl
or
lcall
daa
sar
and
in
lds
ficoml
lea
mov
repz
or
inc
loope
or
je
popl
ljmp
sub
mov
icebp
fnstsw
adc
arpl
je
mov
aaa
or
inc
out
fiaddl
iret
push
mov
cli
sbb
dec
pusha
in
adc
jne
dec
xchg
or
das
lock
push
lret
xor
sbb
push
aaa
inc
rcrl
pop
mov
das
inc
movsl
and
mov
std
insl
cmc
das
pop
sti
je
rcrl
mov
out
xchg
clc
or
sbb
jb
push
aam
adc
test
inc
dec
pop
into
lds
xchg
arpl
outsl
cld
and
or
mov
lea
dec
inc
adc
in
ds
daa
xor
fstpl
ljmp
xchg
mov
lock
or
add
clc
push
pop
sub
insb
les
adc
loop
add
xor
sub
xor
aaa
subl
lods
int3
addr16
out
or
repnz
xlat
dec
adc
movsl
mov
jb
pop
loopne
sbb
in
cld
mov
adc
scas
dec
aad
inc
xchg
mov
adc
sub
cmc
and
cmpsb
cmc
das
adc
push
xor
jae
pushl
push
adc
and
fs
inc
mov
xor
fdivrs
sbb
lcall
and
mov
in
daa
sbb
dec
mov
nop
scas
and
addb
xchg
js
clc
lcall
ret
xchg
rclb
inc
inc
mov
lods
jae
push
cmp
fwait
scas
mov
outsl
jmp
fsubrl
add
xlat
call
fwait
cmp
mov
mov
das
popa
scas
in
cli
js
sti
lcall
outsb
cmp
push
shll
push
adc
push
sbb
hlt
lods
data16
outsl
pop
call
out
int3
mov
dec
sbb
cmp
pusha
mov
mov
pushl
out
sahf
out
push
inc
dec
mov
mov
dec
psubb
add
mov
out
and
in
or
dec
mov
push
and
mov
xlat
dec
jle
lods
rol
xor
dec
xchg
mov
sub
jo
cwtl
mov
dec
push
lds
cwtl
ror
jp
cs
divb
rcrl
fsts
jae
inc
movsb
cwtl
xchg
push
sti
adc
adc
and
mov
dec
mov
and
and
pop
call
jg
pop
add
dec
xchg
imul
insl
jno
das
pop
sbb
orb
outsb
aaa
data16
cmp
xchg
das
jno
sbb
jl
push
sub
loop
mov
sub
and
pushf
pop
inc
cs
into
aaa
fidivrl
push
stc
or
stos
push
mov
das
mov
lock
decl
cli
sub
add
jecxz
insl
pop
push
das
mov
jbe
push
popa
lods
and
push
fildll
lret
fprem
mov
jno
mov
cli
outsl
push
fsubrs
and
jbe
xchg
mov
call
and
adc
cmp
jmp
je
mov
dec
mov
fildll
jns
add
sbb
xor
movsl
xor
imul
mov
cli
sbb
mov
mov
jnp
xchg
ljmp
sti
lock
add
fdivl
pop
outsb
xor
dec
pop
je
mov
or
pop
sti
outsl
outsl
cli
jg
nop
jno
loope
iret
mov
mov
jne
repnz
mov
hlt
jg
icebp
push
sbb
cmc
add
pop
sahf
inc
mov
xorl
repz
mov
jo
outsl
or
and
push
into
div
mov
div
cli
adc
pop
jne
inc
sub
xchg
push
int3
and
sub
mov
cmc
fimuls
and
inc
xchg
or
mov
mov
bound
std
mov
decl
iret
sub
js
fwait
sub
outsl
fistpl
mov
mov
dec
and
dec
lods
and
loopne
icebp
sbb
xor
ss
aas
mov
repnz
sub
push
je
ficompl
lcall
cmpsb
lahf
sti
add
mov
jl
mov
dec
adc
and
pop
mov
loopne
mov
dec
cld
pop
mov
fwait
mov
call
leave
aam
xchg
adc
aam
and
incb
jl
add
test
mov
pop
test
jno
push
shrl
rol
jg
mul
pop
push
xor
push
repz
push
popa
je
mov
jle
dec
movsb
mov
idiv
ljmp
and
mov
les
pop
sub
movsb
lret
or
leave
fs
fsubrp
or
xor
imul
in
incl
es
jno
jo
rclb
inc
mov
lea
xor
incl
das
lods
jmp
daa
jge
mov
insb
sbb
loopne
inc
cmpsb
mov
loop
sub
enter
mov
and
xchg
out
lock
outsl
add
insb
lea
sbb
filds
and
add
push
mov
push
sub
filds
add
shll
push
xchg
sar
popa
inc
adc
in
test
movsl
mov
sub
sub
pushl
push
enter
inc
xor
sub
bound
negl
xchg
popf
xlat
mov
popa
jge
mov
call
cmpsb
push
in
sub
cltd
xchg
cmp
ret
add
std
push
roll
dec
cmpsl
xchg
and
jg
call
enter
aam
leave
stos
inc
leave
js
out
lcall
pusha
lret
aam
sbb
push
aam
lcall
in
pop
lea
xor
add
cmp
pop
aad
sbb
test
push
sbb
jbe
test
pop
pop
int3
mov
pop
pop
scas
repnz
scas
xchg
movsb
push
sub
inc
mov
push
sti
inc
jnp
adc
dec
and
stos
pop
hlt
fistpl
add
adc
or
loop
in
mov
and
sahf
or
mov
das
std
aaa
sbb
adc
hlt
push
out
sub
arpl
push
push
and
push
inc
or
ja
add
ret
pop
mov
ljmp
idiv
cwtl
pop
add
addl
dec
sbb
aad
jmp
std
pop
clc
mov
xor
push
repz
popa
loopne
dec
add
pop
lahf
pop
add
jl
orb
adc
icebp
clts
xchg
fcos
jg
mov
sbb
mov
rcrl
lret
and
xor
das
xor
dec
pop
inc
das
inc
int
fisttpl
mov
adc
jb
cmpxchg
inc
lret
in
subb
xchg
js
imul
outsl
mov
jbe
and
push
mov
lock
pusha
add
inc
add
push
std
inc
inc
imul
xor
or
sbb
push
jg
jle
les
roll
pop
fcmovnbe
std
popa
inc
fistpll
or
out
xchg
adc
mov
xchg
xchg
mov
clc
mov
fiadds
sbb
daa
pop
pop
enterw
adc
ret
imul
pusha
std
inc
xor
jnp
mov
pop
clc
outsl
lds
mov
icebp
int
in
sub
mov
mov
mov
iret
pop
shrb
or
test
pop
push
imulb
clc
push
pop
push
loop
mov
inc
fstpt
push
sti
test
add
pop
scas
xor
cmp
aad
decl
push
leave
lods
mov
loopne
and
sbb
mov
jnp
ret
jo
fwait
sbb
ret
addr16
fisubrs
and
pop
ljmp
test
add
push
sub
mov
lahf
mov
iret
ss
or
sbb
stos
bound
mov
rorl
jae
leave
jns
mov
cwtl
jns
push
adc
push
int3
testl
aam
and
ljmp
leave
inc
push
sub
js
pop
aam
leave
jb
test
mov
cli
outsl
int
movsb
test
paddq
shrb
insb
push
data16
mov
adc
jg
bound
pop
mov
xor
dec
inc
std
jns
mov
push
xchg
fwait
sbb
adc
inc
jnp
in
movsb
dec
xchg
outsl
outsl
decl
xchg
inc
roll
sub
cmpsb
xor
jbe
cmp
call
shll
call
cmpsl
out
icebp
cs
movsl
movsl
mov
jo
ucomiss
fbld
cmc
jl
pop
push
xchg
fldenv
inc
cli
pop
push
jno
xor
mov
outsb
std
sub
clc
or
xchg
test
cwtl
outsl
mov
je
cli
pop
insb
push
movsb
push
inc
popa
jbe,pt
and
jmp
pushl
lret
clc
clc
pop
dec
and
xor
sbb
or
les
les
cld
sbb
ret
lds
call
clc
adc
inc
mov
mov
add
mov
dec
out
lahf
pop
adc
rcl
and
fistps
push
lea
jl
ja
lods
mov
adc
mov
and
dec
lock
push
int3
dec
sbb
jecxz
decl
leave
dec
mov
das
xchg
or
dec
lahf
adc
and
mov
fstl
test
jg
push
jecxz
subl
jl
sub
or
pop
xchg
clc
mov
aad
gs
sahf
xor
lcall
sbb
add
xchg
je
sub
imul
push
mov
mov
push
jecxz
inc
or
lods
and
jbe
test
dec
insb
cmp
jo
subb
sti
es
jmp
push
aaa
xchg
sbb
inc
adc
imul
adc
inc
aaa
mov
sub
or
adc
insl
fs
sbb
pop
clc
sbb
mov
inc
daa
sarb
mov
test
into
push
xor
daa
loopne
cli
jns
rcr
clc
mov
or
pop
pop
hlt
je
into
mov
loopne
lock
xchg
insb
imul
and
and
mov
xchg
ret
pop
push
push
ds
add
pop
adc
cmpb
push
clc
out
in
cld
shrb
jmp
les
outsb
cmp
xlat
mov
loope
sbb
jns
shl
mov
into
rolb
lcall
xor
xlat
mov
out
xchg
cmp
std
pop
call
jno
mov
and
xchg
je
cmp
call
mov
or
hlt
mov
add
ret
mov
sbb
addb
mov
ja
dec
incl
loope
icebp
pop
mov
xchg
xor
lcall
in
incl
mov
out
les
decl
and
icebp
iret
and
sar
xchg
push
jns
push
inc
popf
xchg
dec
pop
and
sub
pop
dec
shll
aam
xor
fldt
fsub
dec
xchg
mov
jb
fiaddl
popa
fscale
outsl
pop
loop
dec
sub
je
pushf
and
sbb
xchg
cpuid
lcall
call
inc
dec
mov
push
icebp
cs
pop
sub
mov
push
das
lock
repz
test
mov
and
push
clc
int
jecxz
add
testb
and
jge
pusha
lcall
jb
lret
idivl
and
sbb
cmp
bound
push
sar
pop
xor
cli
mov
cmp
add
or
add
bound
leave
in
int
js
mov
add
js
lods
and
pushl
out
xor
cmpb
in
or
cmpb
add
mov
mov
les
cmc
mov
adc
sbb
sub
pmulhuw
subl
push
push
add
cmp
push
add
sbb
jmp
cmp
pusha
push
mov
jmp
repnz
loop
sub
jne
bound
sarb
cmp
mov
mov
popf
sub
xor
mov
arpl
and
pop
cli
jg
and
push
xor
add
mov
stc
mov
mov
xor
cmp
scas
push
jecxz
adc
outsl
push
cmpsb
mov
sbb
inc
xor
movsb
das
cmp
in
dec
adc
pop
lock
jmp
xorl
dec
mov
push
repz
outsl
mov
jae
fs
mov
xor
mov
aaa
pushl
or
out
dec
lret
push
xorb
push
ljmp
mov
cmpl
jmp
dec
push
jle
pusha
inc
adc
jle
aaa
testl
and
jo
mov
sbb
outsl
lock
mov
adc
adc
mov
pop
push
pop
sub
adc
pop
sub
adc
gs
nop
fsts
cs
jge
mov
das
mov
gs
cli
shlb
aad
test
add
pop
in
push
sub
lret
call
scas
pop
movsb
into
clc
inc
or
pusha
cmp
ja
ret
push
aam
aam
dec
add
or
adc
sub
lea
popf
mov
sub
sub
inc
push
call
mov
ljmp
pushf
adc
add
in
adc
or
pop
out
aam
loopne
test
gs
pusha
repnz
aad
sbb
sbb
adc
or
test
jg
inc
jmp
add
dec
rcrb
das
insb
mov
jecxz
pop
dec
fcoms
pop
test
jmp
fnstsw
mov
or
or
mov
push
out
add
cld
sar
and
push
or
and
inc
xchg
or
inc
in
cmpl
pop
aad
mov
in
rcrb
filds
in
adcl
mov
and
cmp
jne
pop
mov
aas
cmpl
add
movsl
xlat
data16
inc
jne
into
sbb
aaa
mov
jbe
xchg
ret
idiv
fbstp
pop
js
repnz
sub
int3
ret
xlat
in
test
jg
xchg
push
sub
adc
fisubrs
xchg
jecxz
ljmp
and
push
jg
and
jae
mov
push
mov
jmp
sbb
incl
pop
es
in
jecxz
mov
mov
push
adc
push
xchg
mov
cld
add
jl
and
stos
mov
push
inc
fistl
fs
sub
ljmp
push
fwait
dec
push
popa
sub
and
pop
adc
inc
jmp
and
sub
cmp
push
cwtl
sbb
cmp
jmp
adc
xchg
mov
and
leave
inc
pop
cmpsb
cmp
dec
mov
nop
hlt
jecxz
mov
pop
out
sbb
mov
fisubs
cmp
xor
jl
sbb
xor
or
cld
or
fadd
mov
mov
dec
pop
dec
and
fidivrs
int
or
xor
jno
xlat
outsl
pop
push
or
cli
loopne
mov
inc
inc
push
add
xchg
scas
call
clc
dec
fwait
loopne
mov
inc
fdivrl
dec
mov
fadds
clc
mov
lcall
mov
call
mov
sbb
push
aas
cmp
das
or
mov
jne
int3
mov
or
jmp
inc
and
inc
loop
cmp
inc
xor
scas
mov
sbbb
inc
jno
mov
fisttpl
sbb
mov
lods
xor
jbe
test
addr16
mov
mov
mov
jg
mov
imull
cmp
fildll
pop
hlt
mov
or
mov
add
jo
cmp
adc
push
cmc
inc
lcall
xor
jg
mov
outsb
rolb
cwtl
push
mov
pushf
ficompl
arpl
or
cmp
inc
fs
adc
adc
or
stc
test
clc
mov
roll
mov
push
incl
push
pop
data16
mov
cmp
data16
cld
xchg
mov
jmp
mov
arpl
sarb
rcrb
es
bound
rorl
inc
inc
push
outsb
mov
mov
sbb
mov
andl
fucomi
xor
pop
push
scas
push
clc
loopne
mov
leave
sahf
pop
in
jg
jo
lods
mov
lret
jae
icebp
sti
aam
data16
push
xchg
sbb
loopne
enter
enter
mov
sub
in
out
mul
test
add
xchg
sub
and
push
mov
cld
inc
mov
in
mov
das
test
icebp
in
mov
out
mov
movsl
loope
mov
pop
sti
add
iret
icebp
pop
cmp
fbld
jmp
js
sub
mov
call
clc
jg
dec
push
lret
add
out
hlt
push
and
sbb
jg
pop
xchg
inc
pop
xchg
xor
mov
mov
mov
sub
out
cli
inc
shll
movsl
push
movsb
outsl
rcr
mov
add
sub
imul
cmp
in
enter
xchg
push
jle
adc
dec
daa
aad
mov
imul
frstor
cld
xchg
push
bound
cmp
add
pop
loop
popf
jmp
pusha
cmp
add
out
mov
inc
inc
gs
jae
repnz
insl
call
push
pop
cmp
jno
jnp
movsb
cmp
addl
cmc
push
imul
jle
imul
adc
int3
pop
inc
sahf
mov
call
js
pusha
nop
and
xchg
shr
adc
sar
test
or
xchg
and
sub
push
sub
mov
sbb
roll
mov
enter
push
or
ret
das
insb
test
and
sbb
pop
mov
jl
push
add
aad
cmp
mov
sub
pop
cmp
lods
fidivl
add
lcall
push
dec
sbb
subl
mov
mov
sub
cli
popa
adc
pop
clc
push
xor
sub
jmp
sarl
xor
mov
mov
sbb
push
cltd
mov
inc
add
incl
and
in
lcall
lahf
mov
mov
jl
mov
out
icebp
cmp
jae
jmp
add
jge
out
clc
mov
mov
push
dec
ficoml
sbb
adc
mov
adc
dec
outsl
mov
sbb
scas
sti
out
cmpb
add
lds
js
pushf
mov
inc
mov
lcall
jle
out
sbb
xchg
cld
mov
pop
adc
dec
nop
roll
jle
sub
adc
inc
test
sti
outsl
jno
call
aaa
pop
xchg
mov
outsb
dec
insb
outsl
dec
stos
pop
cli
pop
loop
xchg
push
pop
push
push
pop
mov
aad
or
pop
fadds
mov
mulb
sarl
outsb
mov
mov
xor
je
add
loopne
das
je
cmpsl
imul
or
nop
out
sbb
lahf
aad
or
sub
popf
ljmp
aas
in
mov
add
jmp
push
sbb
out
dec
ret
call
aaa
imul
mov
loope
jle
mov
push
and
add
in
mov
dec
cld
cmp
sbb
cld
push
lods
fisubl
incl
and
mov
jb
or
xchg
imul
rcr
and
fists
push
enter
cs
sub
je
rol
push
stos
imul
mov
xchg
and
and
dec
xchg
into
or
leave
cli
insl
mov
incl
jmp
mov
inc
xor
cld
cmp
into
jbe
add
in
jno
push
push
nop
adc
dec
xchg
pop
push
js
mov
lea
ljmp
sub
orb
pop
mov
sbb
outsl
push
std
shrb
dec
pop
mov
movsl
imul
and
pop
sub
pop
push
jg
dec
subb
add
sbb
mov
rolb
mov
test
in
xlat
or
pop
loopne
cltd
stc
mov
mov
and
inc
jg
ds
and
inc
xor
pop
clc
inc
dec
jnp
ret
push
lea
scas
clc
cwtl
pop
add
filds
jg
adc
add
je
sahf
fidivl
incb
dec
ja
movsl
add
dec
mov
pop
pop
pop
loope
das
pushl
scas
cmpl
xchg
mov
roll
lret
dec
xor
push
icebp
call
push
add
dec
cmpsl
xchg
push
cld
mov
push
stos
clc
imul
sbb
repnz
mov
pushl
lds
arpl
testl
cmp
lret
jg
dec
icebp
mov
mov
mov
call
stc
push
imul
shl
in
sti
inc
das
mov
outsl
adc
adc
stc
pop
xchg
push
pop
movsb
push
mov
add
jle
std
adc
or
push
jb
cld
jg
inc
int
add
inc
cwtl
sbb
cmpb
inc
mov
add
add
pushl
xchg
dec
dec
into
mov
adc
jl
movsl
jnp
in
pop
out
adc
pop
stos
rcrl
shll
cld
gs
ljmp
push
je
push
shr
pop
decl
mov
addl
mov
ret
mov
arpl
push
mov
pusha
cmp
ret
dec
test
mov
sub
loop
bound
imul
jg
mov
iret
test
xchg
dec
pop
inc
cmp
add
mov
pop
sub
pusha
or
sbb
test
sbb
push
test
in
push
or
popf
inc
inc
sbb
addr16
lcall
xor
dec
aad
pushf
pop
aas
das
push
push
test
inc
cwtl
mov
pop
push
in
aaa
arpl
test
mov
icebp
mov
and
sbb
repnz
in
sub
subl
push
daa
sbb
pop
xchg
push
jg
inc
inc
fsubs
cmp
lods
fnsave
and
pop
xchg
or
mov
imul
movsl
filds
dec
ss
jnp,pt
inc
adc
lods
outsl
ljmp
cmpsb
test
add
in
sbb
push
inc
jbe
sbb
stos
push
pop
cmp
rorl
subb
pop
repnz
cmp
dec
aam
in
imul
jmp
xorl
mov
ret
or
rcrl
repz
or
cmp
aam
fistps
ret
ss
dec
test
xchg
pusha
jne
shlb
jp
pop
xchg
xchg
xchg
sbb
and
orl
sub
pop
scas
sbb
lods
or
mov
stos
addr16
in
push
mov
push
std
mov
xchg
jmp
stc
lods
aaa
mov
mov
in
ds
mov
inc
enter
lods
das
std
fists
adc
adc
fsubrp
push
add
fbld
outsl
push
incl
gs
ds
out
out
lcall
cmp
sbb
cmp
sti
les
mov
nopl
rcr
lea
push
lods
push
dec
sahf
adc
ljmp
popf
adc
jge
lods
mov
push
stos
inc
jmp
stos
or
xor
jo
and
call
imulb
pop
cs
aaa
lret
daa
test
cs
lahf
mov
add
mov
sub
scas
mov
enter
inc
andb
push
mov
int
insb
adc
leave
add
sbb
aaa
sub
ret
cltd
iret
sbb
xchg
out
xor
jne
loop
add
icebp
jg
loopne
sahf
dec
and
clc
mov
jle
push
shrb
xchg
movsb
sbb
fsub
mov
popa
adc
inc
dec
add
xchg
mov
das
or
es
dec
aam
or
mov
bound
leave
add
jp,pt
scas
adc
mov
pusha
sti
fcomi
js
js
cld
cmpsl
xlat
inc
cmp
sbb
insb
aas
xchg
scas
jmp
stos
xchg
mov
mov
sahf
dec
jmp
mov
jg
fiaddl
cmpsl
sbb
sbb
adc
sar
ret
testb
adc
inc
int
adc
push
mov
lods
jl
mov
or
cs
sub
shr
jbe
push
or
jle
dec
adc
or
cli
mov
sbb
pop
sub
or
popf
mov
sub
outsl
incl
mov
push
or
dec
mov
xchg
xlat
adc
adc
std
insl
jae
adc
sbb
in
subb
lock
in
movsl
ja
pushf
inc
mov
inc
mov
push
pop
jae,pn
cmpsl
cmc
enter
jecxz
dec
cmpsb
add
in
call
fnstsw
jno
push
leave
add
pushf
sub
xor
mov
call
mov
inc
xchg
loop
outsl
dec
inc
mov
dec
adc
mov
subb
fucomip
test
popa
cli
cmp
pop
repz
cwtl
outsl
add
xchg
cmp
mov
jo
mul
cmp
pop
xor
scas
push
dec
into
cld
ret
and
sti
inc
sahf
push
ret
mov
clc
ja
sbb
rorl
mov
jl
aam
pop
clc
mov
push
je
outsl
shrl
jl
jbe
mov
fsubr
popf
bound
sbb
aaa
sub
les
sbb
in
sub
lock
fnstsw
aas
adc
std
pop
sub
std
inc
or
mov
outsl
push
pop
inc
adc
sbb
add
int
call
outsb
lock
shl
cmp
xchg
push
mov
sarb
in
lea
loopne
xchg
pop
push
inc
sub
js
inc
and
sbb
scas
jle
push
sbb
rorb
in
jmp
decl
inc
jecxz
mov
inc
jl
adc
inc
xor
or
outsb
aam
jg
lock
inc
push
push
mov
in
xchg
je
decl
leave
test
mov
and
or
pop
mov
push
ror
mov
ds
jb
lcall
sbb
push
adc
or
std
mov
scas
pop
aas
inc
sub
mov
sub
iret
mov
gs
or
mov
xchg
roll
shrl
lea
pop
gs
or
aaa
and
inc
insl
hlt
mov
insl
dec
cltd
lock
sub
dec
les
lcall
adc
or
or
push
pop
jg
loopne
cmc
lret
cld
jmp
adc
xor
jg
mov
inc
lock
in
jge
cmp
push
lcall
dec
sbb
sahf
jno
adc
add
leave
mov
inc
push
push
das
insl
inc
xchg
rclb
add
fs
mov
movsl
mov
pop
mov
xchg
push
fprem1
xchg
add
leave
mov
inc
out
rorl
imul
call
and
les
adc
scas
pushf
fcomps
lods
lock
dec
insb
test
xor
push
jecxz
outsl
push
mov
dec
pop
cmp
mov
inc
dec
and
stc
and
push
inc
das
inc
stos
sub
xchg
mov
sub
and
jb
inc
imul
xchg
fldl
push
jmp
cld
mov
xchg
and
dec
hlt
adc
icebp
mov
inc
add
push
sbb
fidivs
sbb
dec
fwait
dec
test
pop
adc
aas
fcomp
xchg
mov
ret
and
mov
cwtl
cmpsl
cmpsb
sbb
sub
pop
mov
inc
cmpsb
dec
xchg
ret
pop
test
sbb
mov
jle
and
xchg
pop
outsl
std
jg
and
xor
mov
xchg
adc
mov
mov
iret
aas
mov
adc
mov
fs
mov
push
sub
aaa
push
or
push
and
out
mov
sar
mov
aas
comiss
enter
in
and
xor
add
dec
lahf
movsb
and
clc
inc
fists
sbb
sbb
movsb
or
daa
fisubrl
push
jg
sbb
scas
hlt
or
xchg
mov
mov
mov
iret
outsl
aam
mov
fcomip
loop
push
test
jp
ljmp
std
inc
pop
jae
dec
mov
pusha
cwtl
xorl
shlb
loopne
fbld
cmp
dec
xchg
push
in
pop
sub
inc
pop
bound
or
cmp
stos
jl
pop
adc
call
imul
push
cmc
dec
xchg
cmp
mov
mov
out
mov
xor
pop
sub
cltd
add
add
mov
call
mov
xchg
or
xor
pop
push
mov
and
insb
ljmp
cli
fstenv
into
mov
push
mov
clc
ret
jg
loop
and
and
call
push
adc
push
pop
mov
sbb
mov
xchg
push
dec
and
sbb
or
mov
rclb
test
mov
dec
pop
lock
lret
xor
aas
daa
pop
sti
icebp
outsl
push
cli
sub
cld
dec
jbe
daa
in
mov
and
lods
sahf
orb
pop
clc
repnz
xchg
nop
sub
clc
jg
jo
loope
test
imul
inc
push
mov
outsl
lock
shrl
inc
movsl
adcb
sub
incl
jp
stc
cmp
fdivrs
push
xor
jno
cmovns
call
adc
sbb
lock
inc
jne
sbb
inc
jg
ljmp
fildll
push
js
sbb
ljmp
shlb
mov
in
bound
jns
jbe
dec
sbb
inc
jbe
pop
stos
andb
jg
jp
fs
ficoms
jno
nop
push
enter
aas
mov
xchg
push
cld
push
push
test
sbb
push
rcrl
push
xchg
jo
fistpll
test
adc
push
fisubrl
sar
lea
aam
testb
pop
pusha
pusha
fimuls
or
pusha
xchg
fldt
or
sub
sbb
mov
mov
mov
cli
adc
xor
inc
push
imul
xchg
clc
pop
inc
mov
inc
outsl
mov
jno
inc
add
call
popa
iret
sbb
cwtl
ret
jle
mov
jns
in
mov
movsl
aad
mov
jo
inc
pop
ret
imul
mov
movb
sub
arpl
sub
das
lahf
add
cld
fildll
cltd
xor
leave
in
push
pusha
push
les
pusha
test
aaa
mov
push
jo
cmp
test
adc
loopne
pusha
jmp
incl
push
add
call
add
cltd
mov
subb
and
add
ret
push
or
les
dec
enter
mov
in
push
or
sbb
inc
cmp
pop
test
sbb
adc
stc
pop
fiadds
mov
pop
inc
mov
out
push
loope
psrld
jmp
cmpsb
insb
repz
popf
xchg
dec
xor
hlt
pop
clc
scas
outsl
data16
mov
lods
push
outsb
sbb
lds
decl
lds
fs
dec
pusha
out
push
outsl
and
movsl
nop
jle
mov
add
or
test
add
insl
sbb
in
pop
test
lar
sbb
es
test
mov
xchg
out
test
mov
mov
in
es
leave
dec
push
adc
out
lea
dec
inc
mov
jbe
jle
fs
dec
mov
xor
ret
lods
xchg
sub
or
popa
pop
cld
add
adc
mov
clc
pop
clc
or
repnz
pop
jg
pop
mov
or
fistps
push
jo
mov
js
subb
pushl
or
in
push
cltd
dec
icebp
push
add
add
sbb
outsb
mov
test
data16
insl
dec
add
mov
xchg
pop
mov
pop
sub
call
incl
pop
adc
sbb
mov
int3
pop
out
jecxz
jle
lcall
or
mov
fcomps
adc
pop
ljmp
or
test
jnp
or
shl
inc
stc
and
pop
bound
xchg
mov
pop
adc
aad
out
lcall
fdivr
fistpll
push
addr16
scas
adc
mov
xor
mov
inc
mov
in
jg
xor
int3
cmp
mov
test
mov
add
imul
ret
or
mov
sub
clc
jb
int
xchg
sbb
xchg
mov
mov
stc
and
movsb
das
rolb
pop
decl
inc
in
shrl
test
icebp
push
jne
mov
adc
push
dec
mov
inc
dec
add
mov
int
addb
lds
roll
jmp
mov
push
shl
pop
sbb
push
sub
mov
loopne
push
shlb
das
inc
stos
scas
mov
cmpsl
inc
lds
dec
and
inc
jno
xor
ljmp
fs
into
dec
xchg
clc
or
inc
pop
mov
lods
or
sbb
and
sarb
test
lret
ss
cli
decl
pop
insb
lret
ret
adc
dec
mov
into
add
negb
test
outsb
sti
pop
cld
leave
daa
lods
pop
push
jp
pop
pop
imul
push
mov
loopne
jg
rorl
loopne
xchg
add
stc
mov
dec
ljmp
or
mov
sbbb
fstpl
inc
xchg
and
test
lea
add
mov
lea
dec
push
pusha
sub
mov
mov
fisubrl
xor
std
or
cmp
cld
lea
out
shlb
pushl
push
cmp
xchg
xchg
or
incl
cmp
out
enter
call
jg
insl
js
outsb
or
or
push
mov
das
inc
nop
or
dec
bound
mov
cmp
xor
sbb
inc
xor
sbb
bound
and
mov
jl
lcall
sbb
cwtl
xchg
and
xchg
movsl
push
adc
mov
loopne
xchg
outsl
cld
aaa
js
daa
jecxz
out
sarb
ret
inc
int3
inc
xor
push
xor
pusha
das
xchg
push
xchg
mov
push
cmpsl
xchg
addr16
cmpsb
jns
std
fildll
inc
xor
push
fcomps
or
xchg
out
jle
cs
stos
pop
in
ret
roll
outsl
pop
lods
adc
shrb
mov
add
pop
xchg
and
jle
dec
mov
mov
sub
lcall
gs
addl
aad
dec
ss
jl
paddsb
push
jmp
and
sub
repz
push
dec
mov
add
mov
lcall
leave
and
or
push
mov
movb
lret
popf
push
sbb
cmc
fildl
dec
aas
jno
sti
pop
dec
xchg
ljmp
xor
adc
xchg
jmp
jb
add
push
cmp
or
repnz
insl
or
mov
xor
movsl
test
xchg
cmpsl
cmp
xor
mov
iret
inc
mov
jl
xchg
call
add
add
movsl
dec
push
test
xor
dec
cmp
push
sub
jle
pop
outsb
pop
cmc
pop
in
cmp
and
xchg
mov
test
int3
jg,pn
mov
sub
xchg
fcoms
rol
sbb
call
sub
sbb
mov
push
inc
dec
stc
add
cmp
mov
xor
mov
js
add
int
pop
xchg
dec
inc
jbe
mov
insl
test
enter
clc
mov
inc
adc
loope
jle
rclb
ret
sbb
mov
aam
add
adc
xchg
movsb
push
sub
and
aaa
outsl
test
std
lcall
sti
imul
push
adcb
stos
cmpl
clc
es
push
dec
inc
and
push
dec
adc
sub
mov
aaa
stos
inc
cmp
bound
cli
xchg
sti
sub
xchg
xor
icebp
xchg
fsts
les
es
pop
testl
sub
mov
movb
jg
jae
loope
lods
cmc
adc
mov
mov
jg
push
xor
loope
or
mov
inc
loopne
das
jo
mov
jge
shlb
sar
push
pop
mov
popa
mov
xchg
lahf
and
push
popa
xchg
cmp
insb
fildl
jg
and
xor
pop
gs
push
aam
or
adc
sub
ret
ljmp
cmp
xchg
ret
push
jle
ljmp
loopne
clc
push
pop
mov
les
adc
pop
subb
data16
dec
mov
xchg
mov
test
cmp
stc
xor
xchg
cli
incl
jmp
add
jecxz
xor
repz
adc
cmpb
cmp
mov
pusha
nop
push
xchg
rorb
ljmp
ljmp
add
jno
rcrb
imul
fsubr
cmp
mov
cmp
fbstp
or
or
test
loop
mov
popf
pop
in
mov
lds
or
hlt
ret
push
daa
aad
add
push
mov
pop
add
xor
mov
sub
daa
clc
jmp
or
insb
cli
add
dec
outsl
cmp
pop
xchg
push
cmp
jne
inc
adc
cmp
test
inc
cmp
or
das
jge
lahf
repnz
inc
adc
int3
fdivrl
sub
cwtl
aad
mov
popf
sti
sub
outsb
mov
xor
ficomps
cmp
data16
ss
or
sub
cwtl
sahf
enter
adc
and
pushf
mov
push
incl
push
xchg
es
dec
sbb
cwtl
inc
jne
push
xor
inc
add
loope
icebp
scas
gs
mov
dec
stc
es
in
add
aas
mov
ljmp
shll
fs
jns
or
and
rclb
pop
mov
xor
shll
dec
xlat
inc
arpl
push
std
int
sbb
add
sahf
movsb
mov
fistps
addr16
mov
call
push
mov
dec
ret
icebp
imul
aaa
xchg
mov
pop
adc
jno
jns
sub
jge
lods
data16
mov
movsb
dec
dec
inc
jl
xchg
test
int3
shrl
mov
adc
leave
adc
fstps
inc
loopne
mov
arpl
std
pop
daa
subl
jmp
adc
mov
inc
aaa
xor
cli
aam
cwtl
jo
pop
es
xchg
xchg
and
push
xchg
dec
std
outsl
xor
xchg
out
bound
cmp
movsl
mov
enter
call
add
imul
inc
push
mov
iret
pushf
incb
leave
clc
das
adc
in
mov
sub
pop
fistl
adc
xchg
lret
mov
filds
out
or
mov
lahf
dec
clc
mov
dec
gs
or
pop
fsub
and
stos
subl
imul
test
lods
adc
call
mull
sub
mov
adc
pop
dec
repz
or
pop
cmpl
or
shr
shrb
loope
imul
scas
cld
imul
inc
test
lret
inc
pop
adc
xchg
ret
je
inc
mov
movsl
shlb
dec
push
jmp
pop
mov
or
mov
sbb
cld
pop
fldcw
push
or
inc
and
in
lea
push
sbb
es
or
ret
jmp
cmpl
aad
jl
inc
imul
sub
std
das
cmc
and
repz
sti
popa
push
sbb
cmp
clc
aam
dec
insb
aam
push
mov
into
cmp
sbb
roll
mov
lret
cld
call
movsl
outsl
jge
enter
inc
aam
lcall
dec
mov
pop
adc
xor
fldenv
jmp
inc
sub
cmpsl
and
xchg
leave
popf
shl
or
testb
cmp
push
aam
and
jmp
dec
popa
dec
push
daa
push
jne
das
xchg
jmp
xchg
enter
or
add
outsl
push
mov
pop
and
sbb
aam
inc
dec
movsl
mov
std
dec
insb
xor
cmp
jecxz
lock
add
mov
mov
mov
pushf
popl
jno
lahf
shrl
mov
mov
sbb
sub
pop
aam
mov
sti
mov
pushf
or
mov
add
call
xlat
jns
sub
inc
test
stos
inc
dec
popf
sbb
add
and
jg
xor
popf
daa
mov
xchg
cs
jl
dec
mov
pop
outsb
cmpsb
add
xchg
test
cmp
xor
inc
sub
bound
push
je
push
sub
or
outsb
in
pop
clc
fisttps
xor
fildl
xchg
or
aam
push
xor
lock
gs
call
sbb
mov
roll
divb
test
xor
clc
adc
aaa
sub
hlt
jae
and
aaa
mov
ljmp
cmpsb
ljmp
pop
adcb
insl
idiv
mov
jne
shlb
test
iret
shl
pusha
push
orl
imul
add
loopne
das
std
adc
daa
inc
jge
jnp
add
enter
sbb
jb
add
rsqrtps
sbb
fldenv
cmp
mov
int3
add
inc
nop
sub
ss
and
test
push
addl
in
das
cmc
inc
fmulp
mov
pop
jo
sbb
fs
inc
aaa
pop
call
mov
popf
jg
jg
mov
xchg
sbb
pop
ljmp
jb
pop
pop
sub
dec
xchg
inc
inc
add
in
mov
das
pop
add
pop
xchg
fwait
pop
shrl
xchg
scas
inc
loope
mov
test
mov
dec
lock
pusha
loopne
xor
outsl
pop
hlt
ret
push
sti
sub
xchg
or
in
outsl
gs
mov
icebp
inc
stos
movsl
ljmp
jnp
test
xor
xor
mov
dec
and
pop
movsl
ljmp
ret
cwtl
mov
adc
or
push
ljmp
inc
inc
xor
xrelease
mov
bound
fnstsw
inc
jo
es
call
rcrl
dec
jg
and
mov
sub
das
jb
xchg
repnz
xlat
fcmovnb
rcrl
and
rcrl
fstpt
sub
in
ret
push
jle
fwait
or
adc
dec
mov
mov
fimuls
movsb
jne
mov
mov
ret
pop
sbbb
add
fcomip
add
sub
inc
jge
mov
dec
mov
test
jmp
testb
xchg
adc
dec
lret
inc
inc
enter
xlat
adc
and
pop
push
ficompl
mov
mov
insb
pop
cmc
inc
mov
jle
notl
cmp
js
add
cmp
add
mov
scas
and
add
adc
sub
jp
or
pop
into
je
jns
jp
pop
fnstcw
pop
outsl
test
mov
ljmp
idivl
imul
mov
iret
and
lock
lahf
dec
push
mov
andb
or
xchg
inc
aas
jno
test
push
xchg
sbb
mulb
push
dec
pop
lods
mov
arpl
mov
rcr
mov
adc
mov
scas
int3
fucomi
push
loope
sbb
xor
jo
adc
cs
cmp
cmp
add
inc
push
mov
sub
push
pop
mov
adc
pop
cmp
sbb
cltd
mov
or
inc
adc
jne
inc
test
mov
cmpsl
popa
mov
in
pop
mov
in
enter
stos
jbe
lods
stos
rcr
lahf
and
mov
loopne
ret
push
cltd
shll
jmp
loop
adc
incl
mov
adc
lret
push
cld
rcrb
sar
or
adc
lods
fisttpll
loope
xlat
popaw
mov
leave
test
stos
cmp
dec
add
nop
aaa
clc
inc
mov
pop
cli
xchg
push
cmp
inc
xorb
sub
mov
das
or
imul
das
adc
jne
xlat
adc
or
fdivl
push
and
add
jmp
jmp
pop
loopne
lret
sub
lods
loopne
je
outsb
sbb
cmp
dec
jg
jb
leave
jo
dec
push
cmpsl
cli
lret
and
pushf
xor
testl
pop
mov
add
stc
lea
aad
out
or
in
jno
hlt
mov
imul
mov
and
or
les
mov
inc
inc
mov
jmp
lods
mov
es
dec
dec
adc
pop
js
popf
xchg
jnp
pop
repnz
shrb
mov
jb
pop
loope
sbb
xchg
fisttps
inc
insl
cmp
mov
roll
or
ja
shlb
in
sub
inc
xchg
ds
adc
bound
jmp
mov
aad
inc
bt
sbbb
push
cmpsb
clc
push
inc
mov
cmc
dec
dec
mov
jne
push
mov
or
xor
push
les
mov
pop
js
sub
aad
add
test
adc
cmpsb
nop
roll
pop
pop
sbb
test
lret
mov
jb
inc
mov
cmp
cmc
cmpsl
sarl
add
sub
pop
jl
add
mov
add
ret
mov
mov
or
outsb
jmp
jg
sbb
fcompl
push
or
call
or
outsl
mov
rcrl
dec
and
lret
call
mov
mov
shr
mov
ds
pop
dec
mov
fildll
inc
xchg
lcall
pusha
scas
mov
fildl
mov
add
aad
fisubs
test
xchg
push
jns
add
add
push
cld
mov
or
dec
sub
sbb
inc
xchg
lahf
sbb
cs
jle
das
std
das
cmc
movsl
js
imul
ret
fs
inc
inc
scas
or
push
loope
lea
push
sbb
lea
lock
mov
mov
cwtl
jbe
incl
pop
or
imul
sbb
aad
xchg
cltd
push
mov
or
mov
or
add
inc
mov
sub
xlat
popf
andl
push
sahf
jae
pop
xchg
mov
in
jg
ss
jb
movsl
je
fisubrl
in
popf
ds
mov
mov
insl
call
jne
cmp
aas
iret
inc
xor
xchg
mov
cmc
jmp
jg
iret
jbe
lret
out
fisttps
pop
enter
repz
fwait
push
push
cmp
imulb
hlt
pop
shrb
jne
xchg
dec
fmul
jbe
mov
mov
mov
pushl
pop
idivb
jecxz
shlb
cltd
pop
fucom
mov
lea
or
or
cmp
icebp
add
fdivs
mov
insl
loope
clc
sub
popa
pushf
xlat
repz
shlb
mov
aaa
adc
loope
in
sub
jecxz
or
test
mov
cmc
inc
pop
jecxz
lods
inc
gs
adc
aam
mov
out
jne
pop
sbb
mov
lock
mov
das
sbb
jbe
sarl
lea
fmuls
dec
pushf
sbb
loop
xchg
clc
xchg
xchg
fistl
jne
pop
sbb
addr16
add
mov
nop
and
decb
loop
in
in
inc
ret
pop
subb
pop
pusha
adc
jmp
xchg
test
shll
cli
movsb
das
insl
aad
jecxz
jmp
lahf
mov
daa
enter
adc
mov
adc
jg
orb
ja
cwtl
mov
popa
mov
push
mov
int3
cmp
dec
mov
fildll
outsb
jne
adc
es
cs
mov
sub
fidivrs
sbb
xor
add
fdivrl
insl
test
xchg
xchg
jb
ret
adc
xchg
in
sub
lcall
or
and
cmp
or
pop
repnz
maxps
or
mov
or
loopne
lcall
xor
mov
jge
pop
fcom
test
clc
push
inc
arpl
int
or
leave
xchg
sub
or
test
dec
mov
adc
test
jge
pop
and
xchg
mov
cltd
adc
pop
movsl
xchg
aaa
int
notl
outsl
ja
mov
mov
xchg
repnz
xlat
inc
sbb
dec
aad
mov
out
xchg
cmpsl
es
testb
cmp
xchg
aam
into
xchg
add
fsub
inc
add
xorb
xor
negb
push
fistpl
lea
loope,pn
scas
fs
xchg
arpl
popf
adc
insb
mov
mov
pop
cmp
addb
xor
ljmp
lock
shrb
cmp
sub
add
test
shrl
sub
data16
fidivrs
sbb
jb
inc
ljmp
dec
push
pop
repnz
adc
dec
xchg
cltd
lcall
les
sub
sbb
pop
push
call
push
mov
aam
lock
mov
outsb
inc
push
call
sbb
rclb
push
sar
or
incl
imul
out
mov
cld
mov
add
stos
dec
pusha
jmp
fldt
xchg
xor
out
arpl
push
add
shll
outsb
pushl
leave
jmp
fidivrs
pop
mov
je
pop
xchg
call
rcr
mov
inc
sbb
and
mov
inc
pusha
sahf
shl
das
or
aaa
mov
fs
xor
sub
das
std
pushl
add
nop
pop
out
dec
sbb
inc
das
in
call
fucom
sbb
sbb
stc
jne
xchg
outsb
loop
insb
hlt
add
lea
mov
enter
xchg
add
push
pop
imul
les
data16
xchg
and
stc
mov
mov
xor
fisttps
mov
fstps
loopne
int3
popa
pop
ficompl
mov
imulb
outsl
mov
data16
pop
decl
insb
jne
lock
push
inc
imul
and
jne
bnd
clc
xchg
ja
mov
lret
addr16
sar
mov
or
mov
jge
push
es
pop
in
lret
add
xchg
adc
data16
mov
aaa
push
dec
fs
jg
adc
push
jno
insl
jl
mov
cli
mov
mov
cmp
xchg
repz
jns
mov
call
mov
xchg
xor
mov
dec
mov
pop
and
add
jp
cltd
test
add
jge
inc
mov
sbb
test
push
outsb
test
inc
sub
jg
inc
cwtl
jle
les
into
loopne
pop
rcll
std
es
inc
dec
xchg
pop
js
jmp
test
pop
fidivl
xchg
outsb
mov
sub
orl
nop
imul
and
pop
adc
or
fcomip
push
add
mov
fmuls
mov
loopne
jge
adc
adc
sbb
movsb
mov
sahf
push
inc
in
cmp
fists
orb
pop
xchg
insl
or
lea
pop
cli
sti
pop
loope
ds
xor
mov
xorl
jecxz
mov
inc
mov
aas
and
mov
lods
ljmp
push
clc
push
aaa
out
mov
pop
jo
andl
xchg
mov
push
repz
shlb
mov
in
sub
jb
jno
dec
lea
xor
mov
mov
fiaddl
sbb
dec
stos
fisttpl
jae
sub
adc
sub
nop
xchg
cld
dec
pop
mov
cmp
notb
jne
inc
pop
stos
in
stos
inc
mov
mov
out
iret
mov
adc
jecxz
jg
rorb
lahf
outsb
pusha
sub
lahf
and
or
enter
pop
icebp
pop
adc
mov
mov
ss
inc
adc
pop
sbb
decl
xor
shlb
cmp
mov
mov
push
push
mov
inc
cmpsb
cld
fisttps
pop
xchg
arpl
xor
mov
outsl
jb
mov
add
jb
xor
orb
dec
sbb
add
add
lahf
xchg
add
dec
jo
add
test
lock
cmpl
xor
jg
cli
test
xchg
add
sbb
inc
push
ljmp
adc
clc
mov
lock
into
hlt
push
out
and
filds
xchg
push
sub
cmp
icebp
ds
inc
outsl
jne
push
adc
cmp
mov
ljmp
cmc
xchg
inc
xchg
adc
inc
cmp
inc
fcmovnu
xchg
sub
loope
bound
das
cld
jecxz
push
jno
jae
fnstsw
daa
xchg
dec
rorb
cmp
mov
or
push
stos
stos
mov
push
adc
data16
pop
es
or
sub
icebp
adc
out
mov
setg
lds
mov
jne
jg
xchg
xchg
and
mov
mov
fsubrs
shrl
mov
mov
mov
in
popf
lret
inc
popa
push
sub
cmp
pushl
sar
cwtl
and
cwtl
mov
mov
mov
inc
out
inc
cmp
jmp
jmp
mov
int
mov
in
pop
std
push
bound
das
call
test
inc
jecxz
xchg
mov
inc
adc
fsub
inc
icebp
fimull
rorl
lods
jl
inc
push
mov
sbb
andb
add
jp
fisubl
sub
cmpsb
add
pusha
roll
add
mov
leave
mov
fldpi
mov
out
shlb
cwtl
test
stos
pop
xchg
push
pop
cmc
and
mov
mov
mov
adc
and
xchg
test
pop
pop
mov
add
call
fldenv
inc
mov
cmp
inc
and
pop
loop
cmpsb
mov
test
outsb
jg
pop
sbbl
mov
aaa
inc
addr16
pushl
inc
jb
aam
adcl
xlat
lret
mov
les
inc
inc
fs
push
pop
mov
or
fs
push
push
shrb
clc
outsl
add
cmp
ret
imul
sub
inc
out
cli
outsl
pushl
or
adc
outsl
out
fistl
cld
sbb
jns
imul
push
clc
jg
roll
push
jmp
xchg
sahf
add
lods
in
mov
bound
fidivrl
insb
sar
xchg
cmpb
jbe
rcll
lock
pop
clc
aas
xchg
mov
dec
pop
mov
in
js
ret
sub
lock
push
inc
jl
test
mov
pop
outsl
lret
and
xchg
das
adc
or
test
inc
xor
inc
jmp
sbbb
push
cmpsb
lret
aaa
mov
das
xor
ds
xchg
and
ss
mov
cmp
fstp
pop
jns
ljmp
cmp
movl
into
psubusb
xlat
mov
cwtl
sub
xor
adc
or
shll
pop
mov
adc
test
pop
fdivl
nop
xchg
pop
loopne
xchg
xchg
mov
jb
pushf
cmpsb
xchg
dec
sub
test
sbb
inc
sbb
jl
jo
dec
cmp
pand
jbe
mov
adc
jle
push
sub
rol
adc
jmp
lcall
lods
mov
call
pushf
push
loopne
das
cld
fildl
fsubrs
ror
add
in
inc
sbbl
mov
mov
xchg
push
jl
xchg
mov
je
orl
adc
inc
test
adc
adc
and
lea
cwtl
adc
mov
pushf
dec
xchg
pop
push
lock
enter
clc
jb
xchg
nop
imul
add
test
aaa
xchg
orl
je
inc
and
ljmp
pop
xor
mov
pusha
pop
sub
jle
mov
mov
sub
jge
or
jno
int
add
or
xchg
nop
inc
jg
cmpsb
cwtl
mov
stos
jns
dec
aad
call
cli
mov
daa
rcrl
jg
dec
push
mov
jb
push
aaa
mov
mov
sbb
push
add
push
and
inc
inc
adc
mov
sbb
adc
and
jle
and
adc
add
cmp
mov
js
pop
ret
mov
outsl
push
popa
xchg
inc
inc
xchg
lcall
pop
jp
cltd
push
cli
or
push
outsl
add
and
cltd
ss
nop
fs
inc
xchg
jecxz
das
mov
lret
cmp
outsl
xchg
test
incb
jg
sub
in
xor
sar
jg
ret
sub
aam
pop
inc
sub
pop
outsl
xor
cli
sub
mov
mov
scas
sub
sub
call
int3
enter
lea
jl
or
xchg
sub
mulb
dec
lcall
push
mov
or
mov
pop
stc
popa
xor
push
sbb
xchg
sar
decl
jg
jl
jl
loopne
jg
movsl
decl
outsl
movl
lods
loope
push
add
mov
fildll
xor
and
cmp
pop
adc
and
xchg
clc
movsl
push
xlat
jl
cmc
repz
jecxz
add
fisttpl
add
or
fistpl
xchg
sbb
sarb
push
mov
push
cmc
mov
imul
imul
and
push
sar
in
pop
lcall
call
mov
xorb
inc
jecxz
cmp
mov
push
mov
lret
push
test
mov
lret
xlat
mov
int3
pop
adc
jp
aaa
ds
pop
adc
sti
add
or
mov
fbld
ret
lock
scas
mov
or
das
cs
or
mov
lock
adc
jns
rorb
inc
loop
and
popf
sub
mov
incb
push
lahf
fbld
lea
clc
or
popf
js
mov
out
int3
mov
filds
xchg
ret
negl
ljmp
test
popa
out
or
add
mov
or
sbb
mov
fcmovne
popa
and
add
orl
dec
mov
ss
mov
ljmp
mov
lods
push
add
pop
in
jmp
adc
ljmp
test
push
pushf
jno
mov
inc
add
xchg
decl
jmp
dec
mov
fldt
mov
fstl
inc
mov
or
xor
mov
push
cmp
scas
mov
call
jo
fsubrl
stc
out
imul
mov
fidivrs
add
pop
std
je
clc
mov
adc
enter
xchg
push
imul
jp
mov
add
add
mov
out
int3
adc
mov
popf
xlat
jmp
decl
cmp
inc
mov
nop
cmp
hlt
dec
jnp
aad
sub
or
jge
rolb
or
add
push
shll
mov
adc
push
jbe
push
lods
in
ret
sti
adc
lock
mov
shlb
inc
mov
pop
fistpll
out
arpl
lret
xchg
mov
mov
push
rol
ds
jg
push
pop
repz
jmp
jne
in
leave
cmp
dec
adc
push
jns
sub
add
mov
inc
inc
int3
cld
adc
sub
sub
loope
jl
sti
pop
push
or
and
or
incl
adc
sbb
daa
cld
sub
push
shl
pop
ljmp
and
cmp
movb
outsb
cld
in
pop
mov
and
ljmp
mov
lea
mov
pextrw
jbe
ljmp
in
jns
pusha
sub
loopne
jnp
xchg
sub
xchg
pop
out
imul
xchg
mov
mov
scas
nop
sarb
call
dec
outsl
inc
jge
ret
push
fwait
cmpsb
inc
in
mov
mov
jae
inc
xchg
dec
add
aad
xchg
ljmp
fdivr
je
cmpsw
aam
inc
or
add
pusha
adc
sbb
and
ret
decl
fwait
popa
stos
push
iret
xor
mov
cmp
icebp
pop
fcmovnb
dec
enter
loopne
clc
idivl
testl
cli
mov
lods
bound
ljmp
pushf
adc
cmpsb
xchg
lcall
or
in
js
pop
jno
dec
and
shll
adc
pop
mov
inc
xchg
mov
push
mov
lods
incl
jle
xchg
insl
cwtl
aad
cmpsl
push
mov
ds
mov
clc
fistpll
lock
popa
loopne
stos
lret
stc
aas
call
or
aaa
mov
sbb
pushw
test
imul
adcl
gs
jg
shrl
cwtl
dec
and
add
imul
or
or
pop
pusha
testb
jns
sar
pushl
movsb
sbb
add
xor
adc
jae
lods
add
call
mov
mov
sbbb
add
incl
into
mov
inc
and
inc
roll
sub
inc
ss
test
mov
xlat
je
add
ljmp
imul
inc
mov
clc
mov
les
cmp
mov
pusha
shlb
daa
cs
cltd
sub
xor
inc
sbb
dec
mov
imul
mov
dec
inc
pop
dec
and
mov
loopne
iret
cmp
fsubs
in
sbb
movsl
sub
pop
lock
mov
dec
dec
pop
lret
mov
sar
outsl
mov
dec
push
imul
mov
into
mov
adc
xlat
aad
mov
ljmp
lods
pusha
add
mov
popf
push
and
aaa
decb
lss
lea
in
lcall
andb
cmp
ljmp
cmpsb
dec
xchg
lsl
icebp
outsl
sub
add
push
sub
mov
ss
orl
repz
rol
inc
sbb
mov
push
and
pop
outsb
test
pop
cwtl
dec
pop
fnstsw
sbb
std
mov
push
and
xchg
jno
rorl
pop
ljmp
dec
add
add
mov
mov
mov
sbb
xor
xchg
test
in
repnz
mov
xor
fiadds
xor
sub
mov
jbe
loope
outsl
add
inc
je
loop
push
incl
dec
xor
ljmp
mov
inc
sahf
in
mov
jae
mov
pop
mov
cmp
pop
jns
ljmp
das
icebp
ja
xchg
sbb
dec
inc
ficoml
repz
cli
loop
cltd
xchg
test
std
xor
cmc
popa
lods
aad
loop
cmp
mov
xorl
out
jae
jp
mov
aas
mov
sub
aas
jae
mov
adc
sub
mov
pop
fs
cli
pop
call
dec
mov
fsubr
leave
addr16
sub
dec
mov
sbb
stc
popa
fs
leave
les
and
fstl
sti
repz
adc
stos
push
es
stos
jb
daa
push
inc
push
lods
xchg
call
std
fbstp
hlt
inc
pmullw
or
cmp
dec
fistpll
nop
jns
mov
xchg
fmuls
mov
xor
les
icebp
and
adc
add
sarb
mov
pop
mov
scas
or
fbstp
aad
cmp
fwait
sub
daa
xchg
hlt
or
jge
pop
sbb
pop
xlat
xor
pop
lcall
divb
pop
loope
mov
dec
add
jecxz
vmread
mov
pop
cli
jg
pop
mov
adc
xor
push
mov
mov
popa
inc
sbb
imul
sub
dec
xchg
outsb
sub
push
rcr
xor
rclb
sbb
test
adc
xchg
xchg
mov
daa
mov
mov
mov
sub
add
pop
lret
xor
inc
mov
call
mov
shrl
mov
push
jae
inc
cmp
inc
xchg
hlt
jmp
cmc
jbe
pop
testl
mov
add
mov
mov
and
pop
mov
jbe
mov
sub
das
dec
imul
fisttps
push
xchg
add
dec
sbb
pusha
rclb
mov
sbb
insl
mov
mov
inc
mov
int3
jne
fldt
mov
mov
test
mov
sub
ucomiss
push
loope
jle
pop
cmc
jg
mov
push
cmp
dec
pop
clc
in
lods
fldl
dec
aad
ret
push
fistl
sar
inc
insb
in
mov
adc
insb
xor
sbb
xor
shrb
ss
xchg
iret
fists
fistpll
pop
pop
dec
dec
iret
repnz
xor
jmp
pop
mov
xchg
mov
pop
std
mov
adc
pop
mov
mov
aaa
es
imul
push
ja
test
das
cmp
xor
iret
iret
or
cmpsl
sub
and
or
add
sbb
jb
aas
sbb
sbb
xchg
fsubrs
fcomi
sbb
sbb
xor
lds
jmp
push
or
test
sbb
es
mov
adc
out
pop
lret
sub
push
and
sbbl
outsl
std
decl
xor
jnp
outsb
leave
pop
push
bound
test
mov
clc
xorb
sbb
cmpsl
cmc
mov
mov
aad
imul
and
adc
xchg
inc
sti
lcall
add
cmp
lahf
scas
cmp
push
jg
mov
cli
decl
add
outsl
pop
clc
outsl
mov
in
sahf
mov
mov
xchg
loopne
inc
test
xchg
cltd
xor
shlb
xor
movsl
ja
pushl
add
mov
mov
sub
push
inc
decl
push
pop
repz
dec
mov
sub
push
jne
aam
out
les
arpl
loopne
xchg
fcmovb
inc
push
push
jns
arpl
sub
adc
xor
cld
lods
cmp
inc
xor
jg
cmp
mov
test
aad
or
ljmp
pop
stos
lret
decl
dec
int3
mov
ljmp
pop
add
xchg
inc
sbb
enter
mov
pop
mulb
mov
mov
frstor
std
push
or
hlt
rcll
add
jg
push
loopne
sahf
mov
scas
enter
or
xor
push
rcrl
jo
inc
inc
or
cwtl
insb
call
test
add
loopne
xchg
push
loop
je
notl
inc
sbb
sub
cmpsb
mov
fcomip
insl
cmp
movsl
inc
mov
mov
rcl
shlb
cmpsb
rcrl
cmpl
cmc
aaa
mov
push
cmp
mov
in
inc
fwait
mov
icebp
out
stos
mov
and
jge
ljmp
push
repz
ret
nop
add
clc
sbb
adc
push
out
cld
outsl
call
jno
test
imul
xorb
xchg
rorb
pop
imul
stc
shlb
sbb
sub
pop
lds
fildl
ljmp
cmp
inc
sbb
stos
xchg
mov
mov
adcl
sbb
add
push
xchg
test
or
ja
cmp
adc
mov
adc
mov
mov
add
call
cmc
je
push
roll
fisttpl
push
in
pop
outsl
lods
addb
inc
xchg
je
inc
mov
xchg
fldenv
loope
cmp
pop
sbb
subw
jns
jecxz
dec
aad
imul
decl
nop
in
outsb
or
fdivs
adc
imul
xchg
jns
out
mov
loopne
add
mov
sub
mov
pop
aaa
push
incl
scas
adc
testl
cmp
push
push
xchg
repnz
std
mov
push
sub
or
adc
add
addl
mov
filds
jne
icebp
and
cmpsb
pop
push
mov
mov
or
outsl
add
pop
pop
push
clc
call
into
lret
into
out
pop
stc
repnz
test
and
pop
pop
mov
inc
mov
stos
sbb
or
loope
pop
cli
inc
sti
scas
fists
push
lret
pop
clc
mov
xlat
mov
clc
das
nop
cli
add
sbb
movsb
fldcw
xchg
pop
xchg
lret
das
xchg
mov
popa
add
js
decl
or
hlt
or
rcrl
adc
mov
lcall
add
filds
pop
movsb
xor
out
jge
pop
std
and
xchg
andb
out
movsl
mov
xchg
pop
push
dec
push
pusha
in
jbe
sti
call
sbb
dec
adc
xchg
sub
adc
in
adc
push
pop
cld
lds
jg
lcall
ret
sub
testl
sbb
inc
lds
xchg
dec
and
jl
aam
mov
fsubrs
or
cmpb
adc
pusha
xchg
lcall
outsb
dec
sti
rol
cltd
adc
outsl
jge
add
push
mov
hlt
lods
roll
in
decl
inc
fdivr
sbb
rolb
sbb
inc
ljmp
loop
movsl
cld
xchg
js
cwtl
lods
mov
test
movhps
ds
mov
adc
lock
mov
and
inc
mov
aad
call
ds
add
or
sub
jp
aad
js
imulb
andl
fisubl
sbb
mov
fimull
pushf
or
and
les
mov
add
mov
aam
std
cmp
cmpsb
pop
or
jg
pop
and
add
pop
sub
mov
cltd
pusha
ffreep
adc
aad
pushf
stc
xchg
or
fcom
mov
mov
fsubp
dec
jp
rorb
add
mov
jmp
xchg
aas
sbb
sbb
or
xchg
ror
adc
jno
xchg
in
cltd
push
aaa
sbb
mov
adc
pop
mov
sub
add
pop
cli
mov
imul
pushf
lods
clc
pop
lahf
mov
or
xchg
mov
and
mov
fs
bound
cmpsb
testb
xor
dec
mov
push
aam
loope
stos
es
je
in
aas
or
jae
movb
test
or
xchg
xchg
dec
cmp
outsb
adc
gs
xchg
into
inc
mov
hlt
pop
jg
xchg
fldt
mov
sub
call
test
inc
or
sub
xor
pusha
push
jnp
fsubrs
cld
pop
fisubs
sub
movsb
inc
das
jne
jb
cwtl
mov
ret
cmp
in
jmp
ljmp
mov
es
cmpsb
sbb
outsb
mov
flds
mov
jbe
adc
je
mov
int3
push
pop
lods
pop
lret
xchg
sbb
push
ja
fs
hlt
scas
add
xor
adc
int3
adc
cmc
mov
rcll
repnz
pushf
test
outsl
inc
mov
rcrb
mov
arpl
mov
icebp
dec
call
jne
adc
out
inc
mov
adc
ljmp
or
and
xchg
shr
fistpll
push
stos
or
mov
pop
xor
lret
xchg
fisttpll
hlt
xor
data16
lods
xchg
add
jge
pop
or
mov
sub
dec
mov
mov
stc
jb
call
out
scas
cmp
or
inc
xchg
test
inc
cmc
popl
mov
or
xchg
shll
hlt
sbb
jl
test
lea
jge
dec
decl
in
enter
mov
loop
shll
bound
lahf
mov
xchg
cld
fisttps
mov
pusha
push
add
inc
mov
decb
hlt
mov
pop
hlt
rcll
mov
push
jp
lahf
fistl
mov
pop
push
push
push
sar
jg
in
fstpt
push
cwtl
test
rcrb
push
push
arpl
clc
mov
bound
insb
std
sbb
inc
add
jg
jg
icebp
sub
cmpsb
jno
call
les
pop
push
dec
push
jle
in
outsb
adc
cld
lcall
add
inc
pop
loopne
mov
sbbb
cld
movsl
pop
jecxz
cmpsb
dec
push
icebp
mov
nop
flds
scas
add
rcll
push
adc
add
aam
jae
xchg
push
jecxz
out
mov
add
mov
dec
mov
mov
pop
shll
or
scas
jg
mov
jle
sbb
bound
jge
and
sbb
aad
jp
movsb
inc
adc
scas
pop
ljmp
jp
mov
inc
leave
test
stos
sar
add
sub
sub
mov
rorl
xchg
mov
shrl
addr16
fnstcw
ret
cltd
push
sub
into
jne
inc
loop
mov
sbb
pushl
nop
sti
cwtl
push
sahf
mov
in
test
ljmp
aaa
add
stos
cmpl
iret
mov
add
inc
inc
sub
ljmp
divl
ret
pop
mov
ret
mov
in
test
adc
nop
dec
fildll
fwait
xchg
xor
hlt
mov
scas
rcll
or
popa
lahf
nop
push
inc
std
jg
dec
es
jg
or
out
cwtl
dec
ds
cmpsl
adc
in
sub
or
in
outsl
mov
lods
mov
or
mov
pop
dec
inc
or
js
ljmp
jns
inc
mov
aaa
cmp
dec
aad
sbb
mov
outsl
pop
pushf
and
loope
adc
mov
test
aaa
jmp
std
mov
std
movsl
mov
shlb
and
mov
ds
xchg
mov
ds
dec
and
sarl
and
push
pop
test
aam
jg
xor
shlb
mov
cmp
lock
ret
insl
add
add
in
lods
in
pop
lock
call
mov
sar
or
dec
sahf
dec
mov
int
push
jge
loopne
loopne
push
dec
scas
out
sbb
cld
daa
mov
add
mov
mov
in
js
and
add
or
xchg
mov
dec
cmp
mov
lods
mov
mov
pushf
mov
dec
mov
add
mov
push
xchg
xchg
lods
or
inc
mov
imull
rcrl
xor
cmpl
movsb
push
cmp
jg
adc
movsl
dec
jno
pop
cmp
movsl
hlt
xor
rclb
pop
das
es
cmp
mov
stos
movsb
xchg
jecxz
inc
xchg
nop
mov
loope
mov
in
push
mov
mov
push
sti
or
adc
in
inc
test
jns
pop
dec
sahf
fwait
push
ret
sbb
xchg
enter
inc
repz
ret
push
add
mov
rorl
mov
mov
in
stos
lock
rcrl
loop
inc
or
mov
fsubrl
fsubl
repz
mov
stc
out
push
or
aam
in
fwait
aas
lods
fbld
xchg
pusha
add
jmp
pop
adc
push
dec
adc
push
rcl
sub
xor
inc
ss
or
or
xchg
aas
push
fbld
lods
push
sub
mov
mov
cmp
pop
jg
testl
lcall
jecxz
inc
push
clc
xchg
cwtl
push
xchg
loop
insl
add
bound
add
mov
leave
cmp
int
push
les
add
lret
xor
inc
adc
call
xchg
sub
inc
mov
outsl
stos
inc
pop
xor
sahf
nop
jns
decb
sbbl
pop
adc
icebp
in
inc
pop
push
sbb
aam
mov
add
adc
jg
iret
inc
shll
mov
mov
imul
test
das
cmp
in
call
pop
mov
clc
xlat
mov
popa
sbb
lcall
icebp
push
sub
lds
push
cs
mov
adc
mov
test
mov
lea
in
mov
dec
push
mov
mov
add
sar
adc
inc
cmp
test
daa
je
das
pop
and
test
and
imul
dec
sbb
mov
andb
pop
xchg
add
adc
adc
mov
mov
push
dec
loopne
mov
or
dec
call
pop
insb
inc
outsb
adc
cmc
outsl
ljmp
leave
and
xor
or
add
or
jno
sti
and
lock
jbe
repnz
mov
adc
mov
dec
mov
js
hlt
add
sub
lods
inc
cwtl
ret
inc
mov
add
cli
rorb
adc
rcrl
add
in
out
in
add
movsb
cs
js
shl
or
cmp
lods
inc
int
daa
scas
das
mov
xlat
mov
into
xchg
mov
jp
in
and
nop
pop
add
mov
inc
jl
ljmp
daa
rorb
mov
xor
decl
mov
inc
adc
fistps
popa
insb
sub
shll
jmp
sbb
sbbl
sub
jg
aam
jmp
push
out
adc
push
loop
call
xchg
outsb
push
ljmp
lock
jle
sbb
jmp
sbb
jne
xchg
shl
push
btr
inc
arpl
aam
stos
in
jmp
rolb
sbb
mov
icebp
outsl
sarb
fbstp
lcall
mov
scas
fnstenv
nop
into
jge
int
push
mov
lahf
xchg
jl
mov
or
mov
mov
insl
jecxz
adc
mov
and
or
bound
xchg
mov
cli
call
and
lods
iret
adc
adc
jmp
mov
push
push
repnz
add
push
mov
dec
sar
test
lock
mov
push
sbb
lcall
iret
lcall
js
ljmp
jl
mov
mov
mov
in
or
cmc
mov
and
ds
jmp
test
lea
inc
pop
jb
lahf
cmpsl
stc
xlat
enter
jg
ret
je
sti
ret
lcall
lods
in
cltd
fs
movsl
add
pushl
lods
dec
clc
push
xchg
fldenv
add
outsb
adc
inc
icebp
dec
das
mov
and
filds
jp
ljmp
jmp
mov
rclb
cmp
add
push
xchg
aaa
clc
dec
jo
mov
scas
rorl
outsb
enter
push
mov
out
pop
cltd
sahf
sbbb
pop
pop
pusha
fbld
pop
xor
rclb
pushf
mov
test
mov
adcl
nop
sahf
loopne
insl
adc
cwtl
add
popa
pop
pop
pop
push
inc
push
jg
dec
lods
adc
jle
sti
jg
mov
and
mov
jne
xchg
clc
movsl
lock
popa
mov
pop
cli
incl
ret
or
or
gs
ljmp
sub
fstp
out
sbbl
cmp
pop
push
lock
loopne
cmp
mov
xchg
test
lret
jbe
cmp
and
dec
push
and
rol
lods
inc
clc
aad
push
test
mov
mov
mov
cmp
insb
sub
icebp
hlt
aam
xchg
mov
lods
xchg
nop
js
insb
mov
stc
cmp
add
and
test
dec
pop
add
outsb
ret
mov
call
push
sub
mov
or
shlb
sti
hlt
push
cmp
sub
xor
xor
jle
mov
jns
fbld
push
ss
pop
mov
add
gs
adc
xlat
sar
mov
adc
loope
adc
sti
fistpll
xor
inc
insl
hlt
pop
rcll
fisttpll
jne
in
or
js
cmp
adc
xor
mov
mov
mov
popf
aas
adc
mov
mov
lret
call
cli
mov
inc
jno
ljmp
stc
ljmp
xchg
sbb
getsec
pop
adc
daa
mov
and
add
call
les
cmpsb
adc
cld
mov
sub
inc
jno
aam
lods
and
jg
and
sbb
aad
sub
loop
mov
lret
incl
and
pop
push
sub
fnstsw
or
cltd
into
shll
jbe
mov
lock
cmp
cmp
dec
ret
or
jae
ljmp
or
jbe
mov
push
lock
jl
xchg
jp
mov
pop
sub
ret
push
mov
sti
fisttps
push
push
or
shrb
sub
mov
add
lods
loop
mov
cltd
cmpb
xorl
in
loopne
sar
cltd
jl
inc
dec
inc
movb
dec
icebp
pop
xchg
pop
imul
inc
adc
sbb
mov
test
scas
outsl
hlt
fisttpl
stos
into
mov
push
push
push
mov
sti
and
inc
mov
pop
imul
sub
divb
or
adc
push
xchg
inc
lcall
stos
les
adc
sbb
cmp
and
mov
vshufps
adc
lcall
sub
push
std
decl
outsb
repz
cli
in
and
sbb
movsl
aaa
cmp
repz
call
std
sub
pop
jl
pop
outsl
mov
push
aaa
or
inc
adc
inc
mov
inc
dec
jg
inc
or
and
or
rorb
pushl
cmp
push
loope
in
adc
ljmp
lahf
push
cld
fs
pushl
adc
ljmp
mov
subb
cmpsb
in
mov
movsl
test
leave
xor
lret
lock
outsl
cld
inc
xchg
jmp
inc
popf
mov
pop
call
sub
xchg
shrb
pop
sub
lea
add
int3
in
dec
je
sub
sbb
jb
sub
push
jbe
xor
inc
je
std
xchg
jo
mov
out
lods
cmp
add
jno
fst
mov
sbb
bound
or
xchg
stos
adc
adc
jo
jg
mov
mov
inc
inc
ds
fwait
in
out
cli
mov
rclb
rorl
cmp
in
test
lret
gs
movsl
push
outsb
das
ret
aad
shr
cwtl
or
lret
or
stos
pop
cmp
or
xchg
adcb
sbb
sub
cmp
add
push
mov
mov
push
push
pop
fcoms
jns
push
and
mov
test
fucomi
lock
push
sbb
push
lea
sbb
jl
adc
and
or
xchg
xlat
dec
and
das
inc
shlb
incl
or
dec
sarl
ja
dec
mov
cwtl
add
ljmp
push
jb,pn
mov
mov
jbe
add
mov
mov
jo
sbb
mov
bound
incl
or
and
pop
enter
js
test
nop
inc
sbb
fisttpl
lahf
sub
adc
sbb
inc
testb
jg
mov
sbb
scas
in
arpl
in
mov
cmp
outsl
push
mov
jge
cwtl
sbb
xchg
js
call
rcrb
dec
mov
jno
xor
pop
xchg
fmull
aam
incl
push
xchg
lret
jb,pn
les
sub
mov
inc
lock
ljmp
pop
sbb
cmp
icebp
sbb
push
mov
cmp
xor
fildll
jp
je
inc
dec
sub
cs
mov
and
insb
std
jmp
push
in
push
adc
shll
rolb
fcomp
lahf
aad
dec
xchg
outsl
lods
sbb
mov
pop
xchg
mov
mov
mov
fisttps
xchg
mov
decl
enter
push
inc
push
repz
pusha
xchg
pop
mov
aam
pop
cmc
push
dec
sbb
outsl
jg
mov
cs
outsl
or
aad
lods
das
mov
and
push
imul
ret
dec
xor
cmp
sbb
clc
ss
in
imul
int3
ljmp
mov
lcall
shll
and
inc
rorb
mov
cwtl
jnp
push
lret
fldcw
adc
loope
hlt
add
outsb
xchg
push
mov
dec
mov
cmp
xchg
push
dec
and
add
mov
mull
mov
stos
mov
pop
aad
js
push
incl
add
or
xchg
sbb
fldl
fsub
jmp
inc
inc
sub
je
lret
inc
data16
sbb
decl
and
pop
jp
lcall
mov
fidivrl
out
rcrb
mov
mov
in
ja
xor
xchg
cmc
xlat
repz
pop
mov
inc
xor
sub
rcr
lock
jge
push
adc
xchg
lods
pop
loopne
in
test
jge
shl
push
mov
adc
cli
mov
scas
test
test
adc
jns
ficompl
mov
cmp
cmpsl
jbe
dec
pop
decl
outsl
adc
dec
movsb
cmpsb
iret
int
push
cmp
mov
bound
test
jmp
test
mov
push
fists
jne
cmp
mov
adc
mov
pop
loope
cmp
ss
jl
fs
push
or
lret
imul
scas
loopne,pn
cs
je
enter
jb
hlt
jg
cmpsl
imul
bound
aad
mov
clc
lea
andl
ljmp
mov
mov
aas
push
lcall
mov
loopne
mov
push
xchg
pop
loop
cld
outsl
adc
lds
in
test
or
adc
shrb
or
and
and
daa
adc
adc
mov
sarb
cmp
mov
into
cwtl
sub
jl
nop
and
adc
pop
mov
in
or
push
dec
testl
mov
mov
out
push
xchg
xor
fisttps
repnz
std
idivl
sbb
mov
or
mov
fsubs
popa
or
dec
enter
aaa
push
mov
testl
inc
dec
cld
dec
sbbl
sbb
and
mov
mov
xor
push
aaa
das
xor
ds
lock
xchg
cmc
lods
push
data16
cmp
or
mov
xchg
rolb
les
fimuls
dec
insb
clc
aaa
rcr
out
lods
ret
scas
adc
or
lods
jmp
js
xchg
fsubs
jnp
and
mov
pusha
jmp
sbb
sub
mov
insl
mov
lahf
outsb
lods
jae
mov
clc
adc
das
shrb
jmp
std
push
pop
pusha
add
sbb
lds
fsubs
inc
xchg
add
or
sub
jne
aaa
mov
add
imul
mov
pop
and
in
mov
xor
sub
faddl
mov
jle
aas
jp
incb
in
sti
pop
outsb
ljmp
popa
stos
jle
xchg
call
dec
daa
das
jns
test
ret
inc
sub
mov
fbld
ret
or
decl
inc
mov
inc
test
repz
dec
mov
jno
push
scas
std
or
push
mov
mov
cmp
adc
lods
adc
cmp
push
lret
fidivrs
shrl
std
mov
xor
addb
mov
xchg
push
push
jge
adc
mov
outsl
mov
bswap
push
cmp
fdivl
mov
decb
ljmp
es
ljmp
adc
inc
jae
es
test
cltd
in
push
adc
dec
xchg
push
mov
test
xchg
imul
mov
incl
dec
clc
test
xor
inc
aam
pushl
pusha
push
int
push
adc
mov
das
std
mov
mov
pop
xchg
loop
aas
sub
mov
push
xlat
dec
and
outsb
xor
pop
out
inc
mov
dec
lahf
jg
pop
ret
iret
xor
mov
jmp
push
gs
loopne
test
push
sbb
sbb
cmovo
js
decl
lea
lahf
shrl
mov
xor
ljmp
and
xor
mov
xchg
in
jg
test
mov
stos
add
xor
repnz
adc
insb
clc
ret
fimuls
inc
ret
outsl
jmp
mov
jp
or
jns
mov
nop
xchg
in
aam
pop
add
add
dec
mov
icebp
mov
jbe
cld
push
sub
jge
jg
inc
pop
push
mov
pushl
cwtl
int3
jnp
lcall
mov
jno
mov
sbb
dec
dec
push
int3
in
xchg
lea
pop
mov
das
inc
call
cmpsb
test
add
push
mov
mov
mov
out
dec
jp
inc
int
mov
dec
xorb
lock
jmp
mov
xor
es
adc
adcl
cmp
push
push
push
or
pop
cmpsb
das
add
mov
lcall
mov
jg
inc
out
sub
sbb
fldl
subb
addb
lock
dec
and
outsl
aam
dec
mov
mov
in
movd
stos
dec
mov
or
sub
push
loope
ret
xchg
sahf
nop
stos
cmp
add
js
negl
das
out
sarb
test
pop
fadd
pop
lods
mov
call
imul
pop
adc
pop
das
cmc
test
xchg
xor
jg
jg
push
and
pop
bound
inc
push
inc
mov
popa
rcl
incl
push
inc
loope
pop
cmpl
lret
dec
call
pop
ljmp
mov
popa
fistpll
mov
jl
sbb
in
cmp
std
outsl
push
lcall
or
inc
mov
cmpsl
xchg
fldt
loop
sbb
xchg
mov
add
aas
mov
cltd
or
ret
cmc
fldenv
punpckhbw
shll
sub
test
mov
push
stos
dec
movsb
lret
push
push
mov
cli
roll
jne
add
aad
ljmp
test
in
cmp
adc
jns
adcb
jbe
ret
decl
cs
cmp
js
loope
and
mov
mov
or
jmp
push
and
sbb
mov
repnz
ljmp
cs
inc
subb
test
cmp
xchg
jle
inc
sub
inc
fists
jl,pn
adc
adc
idivb
pop
test
inc
sbb
inc
push
dec
ret
push
add
imul
sbb
je
inc
and
pushf
mov
add
xlat
and
or
inc
pop
xchg
insl
mov
mov
shl
xor
loope
cmpl
insb
lcall
cmpsl
cmpsb
std
jmp
push
cmp
xor
sub
mov
inc
sub
add
ret
mov
sar
sbb
stos
ret
jno
cmp
jge
jbe
pop
jb
popa
jmp
fmuls
mov
aaa
ljmp
or
fisubl
loopne
xchg
sarl
in
outsl
mov
mov
xchg
aam
push
add
inc
jecxz
dec
pusha
cmp
cmpl
aaa
fcmove
and
dec
cmp
andl
mov
jnp
dec
mov
cld
add
int
in
loope
add
add
scas
jecxz
outsb
clc
push
jecxz
sbb
xor
push
imul
or
pop
pusha
jecxz
mov
mov
and
les
test
hlt
xchg
fmuls
arpl
inc
inc
xor
mov
or
lock
outsb
adc
sub
adcl
xchg
stos
push
testb
xchg
push
add
lcall
and
or
repz
cmp
add
lcall
insb
mov
mov
lods
je
les
pop
out
andb
loope
jmp
add
or
scas
sbb
jne
sub
notb
scas
cltd
clc
xchg
pop
inc
nop
add
cmp
jb
lea
xor
sar
mov
jae
jg
and
pop
dec
rcr
push
incl
or
pop
adc
jp
sbb
xchg
dec
push
inc
aas
mov
mov
rcrb
inc
subb
mov
leave
or
fucomip
aad
and
filds
cli
jg
or
and
mov
shrl
jns
pop
sti
aad
bound
in
fwait
jecxz
daa
and
out
pop
test
mov
rcll
adc
xchg
outsb
lea
jns
jle
rcll
sarb
sbb
rolb
xor
stos
push
inc
inc
and
jbe
je
jecxz
pop
fadds
cmp
jnp
mov
pushl
mov
or
ret
jp
mov
cwtl
pop
add
xchg
mov
push
sti
inc
ss
sbb
sarb
lcall
or
out
dec
cltd
das
std
incl
push
stos
inc
pmuludq
stos
push
sub
cs
sbb
loope
and
repz
inc
test
enter
sarb
lahf
xor
test
inc
icebp
sbb
test
shll
pop
cs
pop
shlw
xchg
sbb
adc
add
popa
jae
imul
ret
mov
and
push
mov
pop
add
or
or
xchg
dec
mov
das
std
cmp
call
dec
jne
add
mov
pop
out
nop
enter
cwtl
push
xchg
push
sub
sbb
xchg
test
add
or
pop
iret
addl
pusha
aaa
clc
add
flds
in
and
pop
ss
cli
fisubl
pop
stc
and
sbb
and
loop
loope
jecxz
pop
jmp
mov
xor
sub
mov
mov
neg
xchg
mov
icebp
jg
rcll
add
xor
in
push
and
adc
mov
movsl
xchg
arpl
fistpl
push
push
dec
and
adc
push
ja
sub
andb
fmuls
or
xor
pop
aam
sbb
pop
push
not
mov
rcrb
or
or
call
jae
jo
xchg
nop
popf
dec
cmp
sub
cmp
cmp
and
faddl
dec
adc
addl
ja
inc
mov
insl
inc
push
lcall
push
inc
incl
adcb
and
jb
xor
push
fwait
mov
iret
into
mov
test
mov
jb
inc
daa
inc
add
mov
pushf
adc
adc
jmp
mov
xor
icebp
xchg
lcall
mov
nop
js
push
adc
das
inc
xchg
outsb
out
cmp
sahf
arpl
adc
ljmp
fbld
fstpl
cld
mov
jge
jg
enter
je
in
test
jae
fimull
dec
dec
or
mov
cmovbe
jbe
stos
cmpb
aad
xchg
leave
cmpsb
es
add
lahf
jle
pop
mov
ljmp
loopne
cld
jbe
notb
test
mov
sub
ljmp
dec
sbb
inc
sbb
adc
jns
das
out
ret
jmp
jb
inc
mov
or
in
or
xchg
ret
add
bound
pop
inc
pushl
xchg
aad
imul
dec
cld
sarl
inc
inc
pop
jecxz
pushf
xchg
mov
filds
int3
adc
adc
enter
xorb
mov
std
fbstp
pop
outsl
mov
xor
adcl
loope
jmp
jmp
outsl
std
rcl
clc
mov
push
adc
les
adc
add
and
pop
mov
scas
jg
pop
divb
sbb
fwait
sbb
jg
xor
xchg
adc
dec
mov
or
shll
in
mov
ljmp
and
adc
push
repz
pop
movsl
in
jmp
cli
iret
mov
cmpl
inc
stos
sbb
repz
cmp
or
or
xor
pushl
sub
addr16
dec
les
incb
incb
inc
jbe
inc
dec
call
test
sbb
jns
adc
testl
cmp
bound
cmpsb
fimull
sub
cli
lods
add
orb
xor
aaa
ss
add
jnp
aam
test
mov
dec
mov
sbb
ja
mov
aaa
xchg
xor
sahf
mov
push
mov
xor
or
xor
inc
dec
sbb
clc
mov
jge
aaa
mov
test
imul
fbstp
jbe
push
inc
sub
andb
xchg
ficoms
mov
xor
lahf
adc
and
dec
in
mov
sbb
fildl
lret
push
stos
bound
inc
sar
xor
ljmp
aam
push
call
clts
cmpsb
or
xor
call
dec
add
fldt
data16
push
lds
mov
inc
xchg
and
lods
inc
scas
or
cli
pop
xchg
fidivrs
cmpsb
hlt
pop
mov
insb
cmc
mov
rclb
ret
xchg
lds
test
fildl
sub
rcll
xchg
in
decl
movb
lds
push
mov
call
das
insl
mov
xlat
testl
bound
pop
jns
xchg
fistl
dec
rorl
mov
outsb
or
mov
pop
hlt
enter
addr16
icebp
fs
stos
mov
jae
hlt
mov
jo
negb
call
fsubl
dec
mov
and
iret
or
jp
ljmp
ljmp
xor
notl
fwait
insb
cmpsl
xchg
in
and
mov
pop
cltd
enter
add
adc
dec
sub
repz
sbb
and
or
pop
loop
icebp
test
mov
ret
mov
sarb
push
jne
jg
pop
and
mov
jo
mov
ret
enter
xor
dec
std
ret
ret
sti
xor
js
imulb
aam
popa
int3
dec
lds
dec
inc
and
clc
rcrb
adc
das
dec
xchg
pop
lcall
inc
pop
add
or
cs
and
cmpb
fwait
pop
inc
repnz
in
jp
ja
mov
sbb
dec
pop
clc
shrl
fcmovnu
add
mov
jns
iret
test
jo
add
add
xor
mov
pop
rorl
cmp
sub
sarl
mov
stos
pushf
or
mov
vcvtsd2ss
and
ds
notl
mov
mov
sbb
in
decl
insb
jecxz
inc
daa
add
fsub
call
insl
lahf
call
adc
dec
push
push
les
jle
or
lcall
das
add
push
addr16
or
push
movsl
loop
adc
outsb
mov
push
fiadds
jecxz
sbb
imul
push
pop
in
inc
adc
insl
mov
je
hlt
mov
sub
addl
imul
push
dec
test
or
fists
pop
fistl
cwtl
das
jmp
std
and
push
leave
aas
rcrl
stc
adc
fstps
sbb
cmp
add
mov
and
mov
fistpl
sub
pop
mov
aam
xchg
xchg
into
pop
or
xor
adc
lock
fmull
mov
ljmp
xchg
mov
sbbb
nop
dec
mov
flds
bound
push
jl
pushf
dec
xchg
xor
xchg
mov
pop
push
xor
fs
jnp
and
push
jnp
add
sub
jg
xor
test
push
sub
lock
inc
pop
test
scas
pusha
subl
mov
popf
repnz
rcl
subb
in
das
test
test
mov
aam
mov
aaa
addb
inc
adc
add
das
xchg
or
or
stc
sub
lahf
and
or
cld
nop
mov
in
pop
adc
fxch
xlat
and
jl
or
out
ret
inc
pop
fiadds
adc
pushf
movsl
mov
cld
movsl
dec
dec
in
cmp
pop
cli
pop
jg
test
lretw
adc
das
aaa
mov
dec
pushf
sub
cli
outsl
std
pop
lods
dec
sub
and
call
mov
cmp
mov
jg
mov
je
shll
inc
imul
cmc
decl
sub
or
push
xor
ss
scas
insb
or
lea
mov
fwait
std
jl
data16
pusha
xchg
fwait
inc
aad
jbe
icebp
cld
inc
inc
push
fcmovnbe
and
out
sbb
mov
js
xchg
pop
loop
jb
cmp
cli
jg
mov
mov
jge
fwait
lea
mov
fildll
sub
mov
call
xchg
arpl
adc
int3
fdivl
orl
pop
sbb
pop
fdivr
mov
dec
pop
mov
pop
or
fdivrp
fists
jecxz,pt
aaa
mov
pop
and
push
lcall
das
mov
inc
push
test
xchg
stos
or
mov
add
nop
test
lods
pushf
inc
adc
fidivs
decb
sbb
push
add
mov
lcall
adc
jnp
dec
fldcw
fcmove
out
out
cmp
decb
pop
adc
mov
inc
inc
mov
push
ljmp
leave
ds
inc
xor
ljmp
movsl
mov
popf
sub
sub
push
bound
sbb
lock
lds
fimuls
mov
pop
mov
cld
cld
push
sarl
mov
mov
jl
mov
mov
cmp
adc
adc
push
adc
dec
pop
inc
enter
jmp
adc
mov
int
pop
add
jg
testb
ret
xchg
or
mov
stc
inc
jecxz
jecxz
mov
fildl
mov
mov
or
or
xchg
pusha
inc
lds
inc
dec
sub
outsb
mov
je
cld
mov
pop
add
push
out
out
add
fstps
test
push
cmp
not
pop
js
or
adc
dec
dec
test
fldt
and
pushf
mov
jmp
push
pushf
adc
push
xor
and
jns
adc
inc
xor
int
outsl
push
mov
adc
arpl
sarb
pop
incl
or
enter
nop
inc
pop
inc
test
pop
fadd
test
mov
ljmp
adc
test
cmpsb
and
in
call
das
inc
hlt
std
mov
into
aam
push
jle
fwait
jnp
cmp
into
xor
mov
das
dec
daa
into
adc
into
and
mov
cmp
push
push
xor
push
mov
decl
pop
cld
fstl
cmpb
iret
lock
ds
and
pop
jp
pusha
outsb
call
push
scas
filds
inc
adcl
mov
pushf
pop
imul
sub
cmc
in
cmp
addl
ret
lods
pop
call
int3
mov
mov
dec
lods
jb
jno
push
cltd
or
xchg
cwtl
lea
addb
inc
add
ljmp
or
cmp
inc
int
xor
lods
aad
push
incl
pop
mov
xor
pop
stc
dec
push
stos
inc
call
pop
jnp
sub
sbb
sar
mov
outsl
jns
mov
and
ljmp
pop
jg
or
cwtl
xchg
aas
cmp
and
sub
dec
inc
jb
cmp
mov
insb
adc
add
cmp
js
inc
shl
mov
outsl
inc
dec
aam
or
dec
push
mov
and
into
jne
pop
adc
gs
cld
lods
cmc
mov
rclb
es
into
adc
or
xor
cmp
push
and
push
and
push
mov
ja
jae
nop
fmuls
mov
test
iret
ljmp
clc
ret
cmp
dec
sbb
mov
js
pop
lcall
sub
or
or
fwait
add
lock
inc
mov
int
es
insb
loopne
popa
jmp
incl
cs
and
push
loope
pop
mulb
or
jg
je
jmp
pop
inc
xchg
dec
dec
fcomps
outsb
jns
cmp
cs
test
std
adc
and
dec
cmp
in
decl
jno
lahf
sbbb
push
xor
les
sbb
or
push
aam
stc
xor
xor
push
jmp
jo
call
push
xor
lea
lahf
mov
pop
mov
inc
movsl
daa
ret
ja
lods
lods
das
je
inc
cmp
rcl
xor
hlt
das
jl
or
shll
sbb
in
mov
movsb
clc
mov
cmpsl
mov
stos
add
jno
xlat
fadds
pop
jo
std
fbstp
sub
imul
les
inc
dec
insb
jbe
test
sbb
fsubrs
mov
test
js
imul
inc
outsb
sub
loop
ret
dec
dec
adc
ljmp
xchg
mov
fstpl
inc
push
inc
jmp
stos
dec
cmp
push
xor
xor
add
push
mov
push
int3
jbe
adc
and
loop
add
cs
dec
xchg
xchg
jg
jle
mov
dec
mov
sub
mov
adc
inc
mov
sub
inc
mov
insb
cmc
outsl
mov
je
jl
loop
fcmovnbe
pop
push
cmp
mov
enter
sbbl
test
cmpsl
jl
cmp
or
lcall
dec
lcall
push
ljmp
push
rcr
roll
mov
mov
mov
incl
in
push
lods
orb
leave
dec
and
mov
test
stos
enter
xor
adc
add
loop
push
cmp
jne
in
das
es
das
adc
stos
call
movsb
in
jo
ja
scas
adc
aaa
lret
clc
fisubl
push
call
daa
hlt
insb
add
sbb
xchg
adc
outsb
shrb
cmpsl
mov
mov
subl
inc
jle
xchg
pop
sub
das
push
mov
adc
or
cld
call
lcall
mov
loop
and
imul
or
adcl
ret
loopne
hlt
movsl
jl
std
mov
je
dec
inc
adc
and
std
push
sub
inc
ds
xlat
mov
insb
cld
outsl
mov
subl
cmp
test
push
and
movsl
sub
mov
sbb
pusha
add
rcr
and
and
call
sub
fs
jmp
dec
mov
mov
test
fstp
mov
fidivs
jb
sti
jge
sub
jge
testl
nop
std
iret
mov
addl
adc
push
mov
stos
int3
push
mov
mov
mov
cmpsl
add
sbb
pushl
lret
test
adc
std
pop
test
cmp
cmpsb
jae
rcl
sahf
sub
pop
cli
fisttps
orb
sbb
pop
adc
in
movsb
andb
pop
xchg
roll
cli
jg
push
out
icebp
repz
test
das
add
jl
fistl
lea
or
adc
xor
mov
push
lds
pushl
cmp
adc
das
not
inc
xchg
mov
iret
aas
lock
mov
cmp
dec
icebp
arpl
xchg
pop
ljmp
pop
pop
scas
pop
les
jmp
cltd
push
push
loopne
cmp
fcmovb
jno
dec
fstps
arpl
adc
call
cld
or
add
mov
fmuls
mov
add
lock
outsl
jbe
popf
xchg
test
adc
fs
fs
stos
add
pop
mov
and
mov
or
lock
add
inc
sbb
dec
push
mov
inc
faddl
mov
hlt
hlt
enter
cmp
decl
push
mov
out
xchg
inc
sbb
and
mov
mov
adc
pushl
cli
inc
push
ds
ja
lret
pop
clc
xchg
incl
xchg
bound
pop
les
lods
lock
push
push
dec
or
pusha
js
mov
call
sbb
sub
pusha
scas
jb
cmp
lds
adc
cwtl
lret
out
mov
and
sbb
fistpll
mov
add
mov
lds
fstps
sahf
or
stc
pop
or
fstpl
mov
clc
lea
pushf
and
pop
fcmovu
cli
xor
hlt
std
dec
and
jbe
pushf
arpl
imul
adc
clc
mov
mov
or
jne
clc
pop
add
outsl
negb
jo
inc
arpl
hlt
xchg
or
fcmovu
fdivr
test
lock
in
out
int3
int3
dec
mov
xchg
jmp
and
sbb
mov
xor
cmp
call
xchg
aas
lret
out
sbb
fidivs
fsubrp
sbb
arpl
jecxz
and
ror
loopne
sbb
and
loopne
mov
jmp
mov
and
jne
cmp
ljmp
inc
rclb
mov
ret
aaa
lea
clc
push
fistl
xor
lcall
inc
loop
xchg
and
test
call
rcrl
les
in
pop
add
aaa
fdivr
idiv
xchg
xchg
popf
pushf
idivb
lret
add
mov
push
pop
fsubs
fsubr
insl
in
xor
adc
movsl
mov
pop
push
adc
adc
cmp
cli
pop
push
jp
loope
mov
cmc
popa
jge
mov
test
jge
cmp
push
xchg
or
xchg
jo
js
mov
cmp
sub
and
jb
mov
add
out
fs
inc
out
jbe
xchg
cmc
aaa
call
cmc
andl
test
pop
stos
inc
jl
sbb
push
lcall
bnd
movsb
lds
pop
add
in
xor
pusha
pop
xor
outsb
fmull
pop
sbb
repz
add
call
pop
adc
insb
aad
mov
xchg
stc
call
test
dec
loope
rcrb
loopne
or
cli
push
add
or
jnp
jle
dec
mov
addr16
xchg
pushl
out
adc
xor
sub
std
jg
jnp
xlat
push
xchg
outsl
loop
data16
lret
stos
pop
shlb
mov
jno
jp
xor
pop
sub
iret
mov
dec
cmpsl
dec
sahf
add
lock
in
inc
push
jbe
xor
mov
push
sbb
cwtl
mov
rolb
and
pop
filds
je
push
aas
scas
or
cld
outsl
insb
cld
shll
dec
mov
pop
or
and
ljmp
les
jp
lds
add
mov
imul
cld
das
adc
and
push
cmpsb
cmp
mov
ljmp
inc
insl
and
movsb
fidivs
loope
push
sar
pop
cmp
or
aad
lods
mov
sub
xchg
adc
lret
incl
lret
or
stos
adc
xor
pop
mov
pop
popa
cmc
push
add
mov
mov
push
movsb
dec
and
xchg
pop
xchg
call
es
aam
mov
arpl
inc
fsubrl
dec
ljmp
aaa
test
mov
lds
add
decl
test
lds
sub
and
mov
inc
sbb
lea
inc
xchg
leave
push
mov
pop
loopne
les
enter
fmuls
int3
xchg
cwtl
pop
sub
clc
mov
outsb
dec
cld
mov
mov
aam
cmpsl
sbb
shrl
xorb
adc
sbb
ds
xor
or
inc
adc
mov
adc
out
pop
cmp
pop
lahf
mov
inc
inc
adc
mov
inc
lea
jb
adc
nop
popf
push
test
stos
and
add
jmp
adc
dec
push
xlat
insl
call
arpl
adc
sbb
adc
pop
cmpsb
repz
xor
inc
or
hlt
mov
sbb
movsb
cmc
aad
fildl
decl
gs
inc
shlb
xchg
push
cltd
push
ljmp
cmp
arpl
push
and
lcall
jb
fcoml
rclb
xchg
mov
repz
clc
fildl
and
push
outsl
test
pop
mov
mov
sbb
add
stos
cwtl
mov
or
xlat
lret
mov
push
cli
jno
decl
test
mov
lret
cmpsl
mov
sub
pop
dec
mov
and
fldl
dec
sbb
lcall
enter
decl
jp
mov
es
pcmpgtb
adc
mov
or
and
mov
cmc
inc
icebp
test
pop
mov
mov
sarb
adc
pop
into
sbb
outsb
sbb
ficompl
xor
andb
das
shrb
test
hlt
test
mov
ss
scas
sub
mov
movsl
dec
cs
aam
adc
fucomip
lods
les
repz
mov
sbb
icebp
leave
stos
mov
inc
xor
pop
movsl
movsb
adc
jne
movsb
shlb
xchg
cmp
cltd
cltd
shrb
add
jmp
shl
into
shrb
pop
dec
insb
sbb
sub
sti
out
dec
push
arpl
sbbb
fwait
and
jb
jo
fsubrl
loop
add
movsl
push
lret
pop
cmpl
push
shll
das
lock
scas
dec
and
add
xchg
mov
das
in
std
jg
cmp
push
mov
sbb
scas
leave
fdivrp
and
cs
sub
jle
rclb
int3
rclb
inc
mov
testb
mov
insl
dec
adc
outsl
repz
add
or
hlt
ja
adc
push
jg
cmc
add
mov
mov
stc
insl
mov
pusha
pop
push
mov
and
inc
out
call
mov
rorl
mov
ds
and
adc
or
test
cwtl
aad
push
mov
xchg
pop
popf
inc
pusha
test
or
inc
add
or
clc
add
jecxz
nop
inc
imull
outsl
inc
jl
ret
and
push
in
dec
pop
shrl
mov
fstpl
jno
or
hlt
adc
sbb
pop
adc
movsl
add
incl
add
dec
cmpsb
xchg
out
and
shlb
mov
inc
or
sub
add
mov
push
ret
das
add
jno
decl
sbb
cmp
ftst
adc
adc
sub
jmp
nop
int
xor
jle
in
push
shrb
or
into
hlt
and
pop
mov
pop
adc
mov
cmp
xor
lcall
add
sti
sahf
pop
jno
inc
scas
adc
inc
or
jg
incl
mov
xchg
jb
xor
fwait
add
sbb
inc
mov
mov
mov
andb
mov
data16
xchg
add
jecxz
imul
dec
add
icebp
icebp
int
and
repz
subb
iret
xchg
pop
pop
pop
push
mov
clc
inc
cld
int
pop
pop
fildll
mov
imul
cli
mov
pop
lock
adc
es
popf
out
dec
clc
xorb
std
nop
inc
sbb
adc
mov
jl
fisubl
in
in
cmp
and
mov
test
outsb
and
pushf
inc
mov
lret
xchg
loope
add
arpl
mov
call
outsb
or
mov
or
imul
outsl
stos
xor
gs
add
or
jge
mov
sbb
mov
inc
daa
or
adc
loop
push
push
mov
jg
leave
movsb
push
shrb
xchg
js
xor
inc
xchg
out
cli
xchg
outsl
cld
mov
add
in
push
sbb
movsb
popf
aam
outsl
call
stos
fldenv
mov
leave
cmp
aam
lods
sbb
xchg
xor
jnp
or
jge
fcom
pop
addr16
xor
or
sbb
jno
xchg
adc
stc
pop
mov
add
dec
sub
jl
jg
fwait
or
push
leave
or
mov
loopne
and
clc
add
out
jb
mov
jp
pop
mov
jbe
mov
sbb
cmc
aaa
sub
fiaddl
test
mov
sub
mov
stos
add
pop
incl
adc
inc
jmp
fdivs
xchg
sti
jo
test
or
mov
pop
jl
and
jno
add
pop
or
stc
out
xor
pop
pusha
fwait
lock
pop
enter
jg
and
ja
in
arpl
pop
mov
adc
xchg
enter
pusha
sahf
inc
cmp
or
mov
in
inc
int3
andl
cmp
ljmp
gs
dec
mov
push
mov
and
outsl
lcall
rol
pop
fldl
push
sub
dec
les
ss
cmc
fstpt
ret
adc
dec
sbb
shlb
outsb
xor
cmp
xor
mov
sub
sbb
mov
decl
sub
imul
adc
pop
push
xor
jne
stos
sub
cmpl
pop
pop
add
dec
xchg
or
fs
mov
and
adcl
cmp
and
sahf
adc
div
aad
arpl
cli
test
inc
add
xchg
cwtl
rorl
ljmp
dec
lds
fs
loop
fs
stos
or
shlb
int
inc
aad
jnp
push
iret
xchg
jp
pop
mov
xor
add
sbb
xchg
push
sbb
lock
push
je
sar
loopne
xchg
sbb
fistpll
dec
pusha
xchg
jns
hlt
push
xlat
push
icebp
ret
incl
add
ljmp
imul
push
xchg
aam
xlat
mov
mov
mov
mov
pop
aas
pop
xchg
xchg
lods
ret
mov
data16
les
std
push
push
pop
loop
addb
add
and
mov
xchg
push
pushf
outsl
cld
dec
inc
out
dec
scas
std
sbb
shr
or
das
sub
in
cs
int3
dec
testl
sub
repz
sbb
movsl
jl
inc
das
insl
clc
cmp
or
sub
test
scas
pop
mov
stos
les
jp
sarb
aam
repnz
fisttps
sub
pop
inc
aas
nop
adc
add
fistpll
mov
push
mov
cmp
and
xlat
mov
lahf
jecxz
mov
sbb
movsl
or
jbe
dec
dec
or
mov
add
test
ror
dec
jo
sar
decl
call
les
adc
pop
jmp
lcall
sar
push
mov
inc
ss
xchg
mov
sbb
sbb
fwait
sbb
aam
adc
push
jmp
out
lret
and
and
inc
mov
xchg
pop
adc
inc
in
pusha
mov
inc
cs
inc
xor
add
es
xlat
cmpsb
in
jg
xor
decb
rorl
cld
pop
push
les
sbb
rclb
inc
sbbb
cmp
ja
subb
in
and
dec
adcl
jb
data16
inc
and
cmp
repnz
xchg
push
push
pop
xchg
push
xorb
call
movsl
out
mov
iret
mov
pop
std
pop
jge
ljmp
cmp
mov
fisttpll
cltd
mov
xchg
mov
sub
xor
mov
fcomps
xor
ljmp
push
out
aas
repnz
jmp
ret
add
push
xchg
pop
push
push
sbb
push
mov
out
xor
lods
lahf
dec
incl
das
in
add
mov
ss
loopne
xchg
sub
push
xchg
into
loope
sbbl
adc
pop
push
inc
test
xchg
jecxz
push
sarl
sbb
inc
and
cltd
xlat
inc
jecxz
test
lods
push
out
adc
outsl
jg
ljmp
jp
cmp
pop
xchg
divb
fildll
pop
pop
push
jge
imul
dec
add
jo
stos
rcrb
pop
mov
loop
int3
fwait
pop
add
mov
adc
sbb
leave
pushl
dec
or
ret
mov
imul
ljmp
sub
push
lret
inc
xlat
adc
ret
sbb
or
out
sub
push
dec
mov
ds
rolb
sbb
ja
icebp
push
lret
push
mov
sahf
aaa
jbe
or
add
mov
sub
loopne
sbb
cli
subl
je
test
mov
das
mov
loop
add
mov
dec
repnz
clc
lcall
ljmp
shll
adc
dec
mov
xchg
clc
aaa
cld
sarb
add
fildll
pop
adcb
clc
fbld
inc
orb
adc
enter
shlb
sbb
inc
pop
mov
je
sar
mov
and
aam
cmpsl
pusha
lods
inc
lea
mov
sbb
and
xchg
loop
push
nop
add
push
hlt
inc
push
sub
mov
sbb
fadd
daa
or
adcl
popf
mov
inc
push
decl
push
add
push
mov
add
pop
pop
loop
push
sbb
add
adc
lret
xor
call
jnp
fsubr
pusha
pop
sub
mov
call
jmp
lods
fisubrs
xchg
sub
mov
decl
mov
inc
out
insb
inc
fwait
loope
push
out
ljmp
inc
inc
or
rolb
add
lea
cmpb
pop
pop
outsb
std
fildll
add
aad
jle
roll
call
xchg
test
das
add
decl
mov
or
cmp
in
cld
xchg
dec
or
shll
arpl
decl
push
mov
loope
cmp
and
pop
sub
out
add
int
pop
or
dec
and
sbb
idivb
je
mov
cli
jmp
mov
cs
js
icebp
adc
and
cmp
cwtl
jae
insl
or
in
add
test
jnp
push
xor
dec
lea
and
lock
dec
or
out
outsl
hlt
fistpll
xchg
add
inc
imul
sbb
decl
cld
leave
or
push
ljmp
scas
jl
jno
adc
jae
mov
dec
stos
xor
roll
jge
daa
clc
push
pop
shlb
add
jo
ljmp
adc
in
and
push
inc
sub
dec
push
jmp
sub
mov
xchg
jb
inc
out
push
lahf
enter
xchg
mov
cmpsl
xchg
inc
pushl
cs
push
sti
xor
cli
insl
adc
push
lods
pop
iret
push
xchg
sub
or
ffreep
outsl
dec
inc
mov
daa
pop
rolb
push
gs
insl
sti
pop
jp
mov
adc
xchg
mov
sub
dec
sbb
outsl
insb
push
pop
mov
addr16
jmp
pushf
aaa
mov
xchg
mov
xor
mov
sbb
lods
cli
jg
cmp
jge
icebp
les
sub
mov
pop
xchg
ja
icebp
jge
mov
sub
or
mov
lret
or
fbld
fstpt
xchg
out
sti
out
and
les
movsb
imul
mov
outsb
inc
mov
mov
in
xchg
inc
adc
add
inc
sarb
mov
mov
pusha
mov
outsl
inc
outsl
or
inc
dec
mov
xlat
fimuls
popl
push
aaa
mov
push
ds
cs
sub
push
adc
sub
push
xor
jle
adc
cli
popa
or
or
jp
in
lcall
in
mov
imul
in
xchg
imul
add
jecxz
fdivrs
adc
sbb
jp
or
repnz
push
pop
pop
sub
mov
push
aad
int
cmp
add
pop
bound
lods
pop
mov
sbb
int
jmp
loope
std
mov
or
push
xchg
mov
inc
jg
mov
adc
mov
dec
inc
push
decb
sbb
das
add
lock
fdivl
mov
mov
mov
or
into
mov
xchg
push
icebp
dec
and
pop
add
adc
push
pushl
in
dec
enter
filds
xor
cmp
sbb
aas
and
fistps
jb
subl
xchg
xor
or
cmp
adc
jg
sbb
cli
pop
sbb
aad
jno
mov
inc
das
mov
enter
pop
mov
pop
fcomps
xor
ret
outsl
decl
pop
addw
or
aas
xchg
incb
mov
test
cmpsb
inc
mov
jle
jg
daa
sbb
rorb
cmp
sbb
movsl
ficomps
dec
sti
jmp
jg
jmp
dec
xchg
cmpsb
repz
fwait
sbb
cmp
sbb
mov
testb
insl
push
in
jg
sbb
mov
inc
sub
orl
cltd
lahf
add
les
cmc
outsl
fisttps
xchg
outsl
adc
xchg
dec
out
je
sub
inc
mov
inc
and
jle
stos
pop
and
jge
lcall
leave
cmc
mov
outsb
or
fs
sub
out
cmp
cmp
aaa
pop
lods
push
lret
js
dec
fnstcw
and
mov
test
insb
push
vminss
icebp
or
pop
lds
outsl
add
jne
sti
enter
fildll
jl
lret
inc
mov
lret
imul
sub
xchg
mov
hlt
inc
mov
out
sbb
adcl
shrl
popa
inc
jbe
jp
stc
or
add
inc
mov
ror
jl
xchg
jp
fistl
loope
mov
push
fsubr
sbbl
or
out
jg
cmp
xor
outsb
aam
cmp
mov
push
adc
cmp
in
outsl
dec
roll
sbb
xchg
mov
jb
in
incl
xchg
inc
xchg
xchg
lds
les
add
sbb
dec
shlb
sbb
aam
sbb
outsl
inc
jl
push
mov
scas
fimull
hlt
lret
mov
call
add
cmove
lea
das
lock
daa
out
daa
or
mov
repnz
inc
mov
dec
sub
mov
fnstcw
inc
imul
aam
in
sbbl
push
in
sbbl
adc
addr16
mov
notb
pop
sarl
pusha
jmp
cwtl
or
add
add
inc
scas
push
cmp
mov
push
outsl
sub
xor
int
jecxz
mov
dec
clc
or
push
mov
mov
rclb
gs
or
shrb
jo
pushl
add
sub
incl
pop
jae
pop
jo
pop
rclb
imul
mov
in
xor
test
lds
fwait
xor
dec
incl
popa
lret
fwait
xchg
lcall
psrlw
fistpll
repz
popa
inc
sti
loopne
movsl
pop
sar
aaa
cli
call
jecxz
cld
and
ret
cmpsb
sbb
rol
movb
fdivs
mov
loopne
push
inc
and
pop
test
rclb
pop
call
xor
mov
sbb
mov
dec
testb
xchg
sbb
mov
js
inc
scas
arpl
sbb
mov
scas
sti
aaa
cmpb
fcmovnu
sbbb
mov
les
lds
in
les
movsl
push
add
scas
mov
or
jb
jnp
notb
inc
mov
cmp
jmp
jbe
ds
cmp
ja
mov
cwtl
cmpsb
flds
push
mov
add
outsl
lock
out
jb
imul
cmp
incl
pop
sbb
cmpsb
mov
aad
fidivl
push
lock
enter
sub
xchg
fiadds
lret
add
mov
push
lret
rcrl
cmovo
outsl
lret
inc
mov
xchg
mov
mov
loopne
fisttpll
add
fwait
aad
or
add
loope
sub
ret
lods
sar
mov
inc
into
inc
push
pop
dec
cmp
push
sti
add
xchg
jae
lahf
sub
fisubl
loopne
ds
push
sub
jb
lea
mov
push
hlt
and
test
pop
std
sub
addr16
test
insb
jg
mov
adc
xor
das
adcl
xor
imul
mov
push
cmpsb
sahf
push
sbb
jo
sbb
clc
aam
jno
sets
and
shlb
cs
lret
test
or
ds
inc
test
lods
dec
sahf
inc
je
decl
mov
mov
shll
cmp
daa
aad
std
shrb
inc
shrl
inc
sub
mov
jnp
add
loopne
decl
sub
sbb
or
test
ja
push
inc
enter
leave
in
test
inc
lcall
dec
xchg
sub
inc
sub
inc
xor
jne
int
cld
and
push
pushl
sub
in
mov
stos
mov
cmp
neg
xor
out
pop
sbb
mov
ljmp
jns
pop
pop
aaa
movups
test
or
inc
push
sub
lods
fisubrs
xchg
cwtl
adc
je
aam
clc
outsl
insl
pop
jae
add
call
sbb
subl
cld
and
fidivs
out
pop
inc
mov
iret
jmp
mull
jg
push
ficoml
aam
cmpsl
orb
nop
and
cmp
fsubp
stc
jbe
popa
cmp
arpl
aas
add
fwait
add
jmp
add
jg
jecxz
dec
es
xor
ds
and
mov
mov
test
sbb
cwtl
push
adc
out
push
pop
daa
syscall
in
dec
inc
cmp
insb
cli
adc
dec
lods
lea
lods
cmp
push
adc
hlt
cwtl
fcmovnb
adc
les
pop
mov
jno
dec
scas
out
movsl
idivb
mull
mov
jg
popf
sbb
icebp
xor
dec
mov
ljmp
fisubs
push
push
out
leave
repz
lods
call
jecxz
mov
jmp
jp
mov
dec
cmp
outsb
cli
or
inc
sbb
pop
mov
roll
test
xchg
icebp
dec
lea
mov
lret
sub
jnp
dec
mov
clc
push
mov
enter
sarb
and
mov
sbb
cmp
pop
mov
jne
xor
inc
out
and
ljmp
mov
mov
repnz
loopne
add
jno
outsb
push
gs
aam
dec
mov
sub
aad
push
pusha
dec
cmp
movsl
fwait
or
cmp
mov
sub
mov
add
and
out
loop
cli
inc
dec
into
lods
xchg
negb
shl
push
add
adc
cli
jbe
cwtl
xor
fwait
sbb
lock
in
jbe
pop
arpl
xor
pusha
lock
mov
clc
call
add
or
sub
call
jmp
sarl
pushf
xchg
mov
push
test
mov
cmpsb
ret
movl
data16
pop
inc
push
cmp
das
clc
in
adc
pop
inc
push
push
xchg
pop
aam
xchg
adc
insb
jp
repnz
cltd
xor
and
jnp
mov
mov
push
mov
sbb
and
fldl
scas
adc
hlt
mov
pushl
push
roll
cmp
cs
scas
inc
mov
mov
sub
xor
test
inc
mov
adc
jge
mov
test
adc
jns
aam
test
inc
pop
and
das
cld
imulb
iret
or
push
testb
jns
lcall
jg
mov
in
jnp
push
dec
ret
cld
push
sbbb
out
mov
call
mov
addb
and
mov
inc
addl
dec
fisttps
aas
out
mov
loope
cli
aam
and
movsl
gs
push
std
cmc
cli
cmp
sbb
outsl
push
popa
loope
or
aam
lahf
mov
stc
leave
sarb
or
inc
loope
mov
in
lret
decl
sub
mov
inc
cmp
ljmp
lea
mov
lret
imul
sub
sti
ret
das
cmp
or
sub
cmpb
push
push
pop
add
mov
xor
and
jo
clc
lock
jecxz
push
add
movsl
lock
outsl
ljmp
sub
rolb
into
cmp
sub
outsl
aaa
mov
add
jno
mul
and
xchg
mov
test
in
inc
push
ljmp
mov
div
push
sub
fs
aaa
and
inc
fildll
pushl
sti
push
xchg
jbe
cmp
out
testl
rorl
adc
or
mov
cwtl
mov
add
lds
inc
and
jg
fdivr
pusha
pop
mov
dec
cs
lea
push
sub
xchg
mov
xchg
and
aaa
sub
push
pop
pop
outsl
push
das
inc
xlat
fisttps
add
inc
jg
and
in
imulb
jno
adc
clc
das
arpl
ljmp
outsl
incl
mov
enter
cli
ss
jecxz
mov
lahf
add
inc
repnz
adc
or
add
jo
sub
xchg
lods
jae
iret
fucomp
sarl
pop
sbb
ljmp
mov
shl
test
jle
leave
sub
sub
or
inc
pop
test
push
mov
test
data16
insb
cmp
mull
sar
outsl
icebp
cmp
mov
cvtdq2ps
sbb
jno
out
cmc
or
roll
mov
int3
xchg
icebp
mov
inc
mov
notb
pop
jle
fsubr
shll
mov
jl
sbbb
in
cmc
lcall
pop
dec
and
call
dec
cld
lcall
or
into
jne
and
lcall
fidivrl
ja
inc
push
insl
hlt
cltd
sti
mov
or
mov
or
or
jb
addl
aas
xchg
push
mov
inc
inc
popf
push
pop
adc
or
mov
jbe
mov
or
dec
inc
mov
or
cli
outsl
push
pop
stc
inc
lcall
stos
ds
js
mov
and
pushf
es
or
pushl
fs
lret
es
adc
andb
or
jnp
cwtl
cmp
adc
outsl
das
aam
cmc
or
inc
insl
sahf
fs
sub
inc
decl
fs
test
stos
mov
inc
jg
mov
or
mov
push
loope
out
mov
adc
dec
mov
jb
mov
sar
and
adc
pop
js
insl
xor
add
repnz
push
inc
sbb
or
shlb
mov
mov
mov
in
xchg
xor
add
fadd
incl
rcl
les
mov
inc
outsl
hlt
mov
xor
push
inc
mov
lahf
das
add
and
jmp
push
clc
pop
pop
cmc
mov
sub
aam
lcall
xchg
lock
outsl
popf
or
mov
aaa
movsb
lock
lods
insb
sbb
inc
dec
das
pop
rclb
xchg
fwait
cwtl
push
and
fwait
and
jg
cmc
mov
cmc
pop
or
sbb
jno
mov
lods
lahf
je
sti
sti
inc
dec
or
pop
mov
push
adc
cmp
out
ror
sbb
clc
jg
sti
test
negb
adc
fsubrl
or
sbb
push
into
push
pop
icebp
jg
loop
push
add
inc
pushfw
outsb
cmpl
mov
push
adc
mov
lock
scas
add
sar
lcall
mov
and
fisttpll
ret
adc
sbb
mov
ds
aam
test
cwtl
sti
pop
sub
in
or
ret
loopne
andb
outsb
mov
add
test
inc
ljmp
sub
in
mov
and
daa
aaa
push
sbb
shll
jp
data16
cld
xlat
mov
adc
adc
pop
test
mov
std
cmp
leave
out
xor
and
push
mov
idivb
in
pop
insl
dec
ss
push
fidivl
std
mov
test
jecxz
incb
xchg
repz
inc
push
add
and
outsb
push
adc
punpckhwd
js
and
inc
add
mov
push
out
mov
sub
out
jmp
jg
insb
adc
rcll
adc
leave
lcall
or
popf
out
cwtl
xchg
andl
dec
sbbb
fldcw
addr16
loope
hlt
mov
int3
xor
lods
lret
movsl
jge
push
inc
loopne
mov
mov
data16
inc
leave
in
inc
jg
cmp
ja
sbbb
mov
das
outsl
pop
add
ja
xchg
out
les
mov
inc
xlat
mov
sbb
into
mov
cmpb
jecxz
mov
add
arpl
ret
mov
sti
dec
jno
dec
cmp
mov
mov
dec
cs
lods
dec
lret
mov
sar
jg
sbb
jecxz
leave
jns
daa
add
add
sar
push
or
out
add
movsb
data16
pushf
adc
inc
inc
jp
mov
in
jbe
es
cld
lds
adc
in
stos
jl
xorl
pop
inc
pop
mov
xchg
mov
sbb
adc
sub
das
nop
test
push
add
and
leave
call
lea
pop
rolb
loopne
out
mov
rclb
mov
movb
nop
insl
mov
jae
mov
sub
scas
andb
inc
xorb
push
adc
inc
push
jl
inc
lret
mov
pop
cli
sub
mov
lods
push
jne
cmc
cwtl
pushf
adc
pusha
add
push
int
in
mov
mov
xchg
cs
xor
addl
push
lds
add
addl
ret
dec
mov
pop
daa
cwtl
add
in
test
mov
and
sbb
inc
dec
ret
pusha
xor
hlt
test
adc
dec
inc
inc
or
jecxz
inc
jne
or
xlat
push
lret
cmp
mov
mov
mov
daa
sub
sbb
add
mov
sub
sbb
ret
es
inc
adcl
cmp
pop
incl
gs
sub
fcoml
fs
sub
dec
jb
loop
ret
das
scas
push
or
out
add
push
stos
les
loop
mov
jnp
sarl
into
pop
push
outsl
lock
add
and
jne
scas
mov
sbb
testb
sti
dec
fstl
xor
mov
mov
call
insb
fsub
ja
inc
dec
sbb
and
inc
shrl
in
push
inc
cmp
std
mov
imul
jge
jnp
aas
dec
push
cld
xchg
fstl
push
scas
test
incl
test
inc
inc
sbb
rorl
mov
mov
xchg
mov
push
fbstp
or
sbb
jg
and
mov
or
jo
out
fdivr
mov
and
inc
in
jo
test
fbld
fistps
rclb
rorb
adc
xchg
jl
pusha
dec
push
aaa
xchg
xchg
stos
inc
push
xor
imul
call
or
icebp
cmp
mov
fbld
dec
and
sbb
mov
xlat
jno
xor
call
and
ret
pusha
scas
lods
inc
out
stos
call
outsl
jo
xor
mov
push
cmp
adc
fs
xor
mov
mov
xchg
mov
mov
sbb
sbb
sub
mov
or
mov
xchg
loope
pop
push
inc
icebp
push
dec
fdivrp
sbb
jg
dec
cs
pop
orl
jo
incl
sbb
sbb
std
notb
mov
push
sbb
out
mov
mov
outsb
sub
test
add
outsl
insl
test
cld
sbbl
mov
aaa
in
dec
cmp
clc
call
clc
fildll
push
js
fs
push
jmp
sti
push
rorl
fcmovnu
sub
sub
call
inc
test
das
lods
js
nop
movhps
inc
sbb
mov
jo
cwtl
mov
dec
ror
test
or
fndisi(8087
das
hlt
testb
aad
stos
pop
clc
mov
insb
or
mov
std
inc
out
shrb
mov
add
mov
or
sub
sub
pop
push
pop
mov
xorb
inc
negl
jb
aaa
loopne
add
stos
add
incl
sbb
ds
mov
insl
push
mov
test
jmp
sub
add
or
lret
push
or
xor
outsl
sub
jg
aaa
movsb
xor
cmc
xor
aam
xor
ret
push
fs
sbb
rolb
rclb
mov
jl
test
daa
movsl
xchg
enter
loope
jns
jl
daa
adc
jge
sti
or
das
xchg
push
sub
in
jle
repz
inc
pop
cmc
dec
and
in
stc
sub
hlt
lret
inc
xchg
insb
mov
or
rorb
lods
cmpl
dec
sbb
loop
test
push
jae
mov
jnp
andb
mov
add
mov
loopne
fwait
dec
xchg
outsl
sub
adc
sbb
push
xchg
outsl
jmp
add
hlt
clc
sub
pop
insb
rcrl
inc
out
pop
fsubrs
mov
sbbb
aas
jne
cwtl
add
mov
std
xchg
ds
xor
inc
push
mov
pop
test
push
rcrl
cli
push
lock
test
arpl
test
sti
and
jns
lret
cmp
pop
stos
test
test
movsl
pop
repz
sub
popf
adc
arpl
das
pop
pop
mov
sarb
test
aaa
xchg
sbb
ficomps
cmp
pop
stos
aam
sbb
mov
xchg
add
dec
mov
or
or
pop
sbb
jmp
pop
push
adc
shll
mov
sahf
lock
fistl
mov
mov
jg
jmp
cli
jg
inc
and
les
inc
mov
adc
or
pop
add
inc
jb
mov
or
cmp
mov
repz
cmp
jns
cltd
xchg
cmp
mov
movsl
jl
push
addb
mov
clc
pushl
fdivs
dec
and
and
ret
je
add
sub
jecxz
xor
push
push
mov
push
push
pop
test
dec
adc
incl
sbb
sbb
cwtl
jp
inc
dec
xchg
insl
lret
movsb
or
pop
call
xchg
mov
mov
cmpsl
in
pop
aad
ret
dec
icebp
cmp
out
xlat
push
jo
mov
in
and
loope
and
adc
mov
add
inc
mov
orb
sbb
mov
mov
call
lea
cld
pusha
repz
out
and
sbb
cmc
sub
and
push
sbb
stc
xor
popf
ja
add
or
mov
imul
and
jl
push
cld
rcr
daa
vmptrld
mov
adc
sub
mov
cmp
sbb
pushl
push
movsb
mov
jg
test
or
loopne
adc
mov
mov
fstl
pop
negb
cli
jmp
dec
lods
insl
adc
mov
test
vpavgb
outsl
xor
push
icebp
jg
xor
xlat
xchg
pop
mov
jl
out
jp
inc
rclb
dec
mov
inc
cmp
add
xchg
lahf
lds
movsl
mov
ljmp
inc
je
adc
push
test
pop
push
dec
cmp
inc
jle
xchg
adc
inc
pop
fnstsw
sub
ret
mov
in
decl
pusha
inc
add
icebp
vunpckhps
das
adc
ljmp
daa
push
inc
xor
lahf
clc
mov
adcl
and
mov
inc
or
cld
sbb
sbb
jo
rclb
mov
mov
mov
mov
mov
dec
test
int3
push
pop
sbb
dec
outsl
aam
sub
xchg
int3
push
subl
inc
iret
mov
ja
inc
stc
cmpb
adc
les
push
dec
inc
ljmp
out
ljmp
xchg
sbb
jmp
adc
in
lods
push
fldcw
leave
mov
call
push
mov
sub
xor
mov
mov
xlat
gs
pop
dec
mov
xorb
mov
xchg
std
fadd
adc
and
popl
sub
pop
lods
shrb
and
mov
sbb
jne
dec
mov
dec
ret
nop
mov
ret
add
cli
xchg
jle
std
mov
jo
or
jg
andl
movsb
push
adc
test
mov
push
add
mov
subl
push
mov
icebp
int
in
outsl
add
inc
jae
notb
popa
mov
std
mov
jb
mov
sub
cmpb
movb
jo
pop
mov
subl
cmp
add
cmc
pushl
aad
xor
loopne
jg
adc
mov
stos
mov
int
fcmovnbe
lock
sar
hlt
and
xchg
jge
jb
or
nop
lret
outsl
add
jg
pushl
adc
and
dec
aad
rolb
hlt
jg
xchg
push
roll
clc
xor
push
out
mov
mov
push
adc
test
cwtl
xor
lret
out
rorl
mov
ja
xchg
push
mov
ljmp
xor
cli
pop
push
sub
mov
loope
cmc
push
into
les
aad
loope
push
stc
push
scas
popa
jae
xor
push
imul
pop
add
lret
cwtl
pusha
orl
imul
icebp
sbb
jb
xchg
dec
lock
pop
sub
test
fucomip
xchg
incl
jae
xor
mov
nop
mov
mov
push
in
adc
sub
pop
nop
scas
sub
xchg
lcall
pop
ret
imul
inc
inc
cwtl
repz
dec
cltd
shrb
cld
das
lock
out
jecxz
dec
fnsave
xor
imul
mov
mov
xchg
cmp
add
mov
inc
jecxz
dec
adcb
pop
clc
call
xor
loope
xlat
scas
jns
or
lcall
dec
add
jmp
jg
pop
cld
push
sbb
movsl
lods
jno
mov
jo
ljmp
mov
aam
sti
push
dec
sbb
aaa
xor
ljmp
mov
fstpl
outsb
lods
push
aaa
divb
dec
add
or
cmp
ror
scas
sbb
scas
popf
orb
sub
outsl
pop
lea
jno
pop
clc
lods
andl
call
jg
sub
dec
push
pusha
add
fdivr
inc
mov
mov
jb
addb
fldl
sub
test
ss
add
sub
sub
outsb
mov
fstps
and
hlt
ljmp
insb
push
pusha
enter
out
and
les
mov
mov
xacquire
xchg
adc
jle
mov
or
inc
push
mov
fists
pop
repz
pop
adc
sub
fildll
jno
es
adc
repnz
sub
and
pop
mov
adc
ror
ljmp
xor
shlb
loope
clc
sbb
test
mov
xchg
cmp
cmp
push
cli
add
js
cmp
xor
js
sbb
mov
repnz
xlat
mov
test
and
sub
iret
adc
sbb
jmp
sbb
mov
pop
pushf
push
lods
fisttps
jle
and
adc
mov
inc
stc
jne
inc
jg
jmp
push
dec
out
mov
insb
rcrb
jb
sbb
incl
jmp
call
filds
pop
or
xorb
sbb
mov
mov
mov
xchg
jle
jmp
lock
pop
mov
add
mov
loop
mov
jnp
cmp
or
add
add
jmp
add
dec
push
lods
adc
cs
je
xor
dec
icebp
jle
fcmovnb
xchg
pop
movsl
mov
stos
fcoml
cmpsb
adc
aas
add
outsl
mov
add
ret
fildll
inc
push
inc
inc
test
inc
mov
shl
jg
mov
sbbl
mov
add
call
push
add
shlb
sbb
push
push
push
push
jb
inc
push
cmpsb
cmp
jo
mov
out
sub
inc
lock
push
and
data16
mov
iret
mov
mov
jecxz
mov
mov
clc
push
std
rcrl
lods
lcall
repz
fucomi
and
rorl
outsb
aaa
mov
outsb
xchg
push
repz
inc
mov
mov
je
aaa
outsb
aaa
mov
into
imul
pop
mov
ljmp
js
pop
aad
adc
bound
or
outsb
std
outsl
push
nop
dec
adc
ficoml
and
shrl
adc
xor
stos
or
jl
divb
xor
jmp
sti
xchg
dec
mov
ljmp
cmp
leave
bound
shll
add
neg
idiv
push
lds
out
shrb
and
push
lcall
aaa
jecxz
push
cmp
ja
sub
shrl
arpl
adc
xor
add
jg
mov
sahf
nop
mov
filds
cmp
jle
dec
adc
and
loopne
hlt
pop
loop
add
jecxz
inc
mov
sbbb
sbb
jle
fmull
mov
out
xchg
in
add
adc
add
outsl
pop
mov
jae
rclb
cmp
loope
adc
fidivl
adc
mov
jg
mov
arpl
xlat
inc
or
std
test
jg
push
dec
inc
mov
xchg
movsb
jnp
xchg
jecxz
pop
stc
sbb
jg
jb
xchg
das
jb
cmp
xchg
mov
push
in
fistpll
pop
lret
jnp
mov
xor
and
ret
gs
mov
xor
orl
and
adc
in
loop
or
mov
ret
lret
out
and
push
ljmp
cld
aad
jp
or
movsl
loop
mov
inc
data16
ljmp
pop
stos
pop
pop
cli
out
cmc
mov
xlat
xchg
rcr
and
std
pop
loop
repz
inc
inc
sub
or
adc
enter
inc
mov
add
inc
cmp
pusha
lods
dec
cld
jmp
jno
test
jb
mov
hlt
mov
cmpsb
or
pop
add
cwtl
mov
popf
stc
jg
push
cmp
and
out
add
leave
inc
sub
push
mov
mov
cmp
push
push
push
fiadds
mov
adc
data16
hlt
sub
fisttps
pop
pop
cmp
inc
cmc
or
xchg
mov
les
and
and
or
cld
cmp
mov
xchg
mov
inc
xor
jo
setns
mov
pop
mov
cli
decl
shr
xchg
pusha
les
jecxz
ret
mov
sub
aad
sub
test
std
inc
lea
iret
or
inc
xchg
sbb
shlb
jne
test
xlat
lods
sbb
or
mov
add
mov
hlt
or
sti
in
daa
je
into
adc
adc
outsb
imull
xor
cmc
outsl
push
je
dec
nop
jb
sbb
mov
ret
inc
scas
mov
fmuls
xchg
lahf
xor
aam
adc
icebp
jg
nop
les
ret
sahf
push
cmc
fsts
mov
mov
cmp
popa
mov
movsl
int
pop
imul
outsb
push
jno
in
repnz
or
cmpsb
pop
sbb
add
jb
jae
mov
lock
xlat
sbb
jmp
lock
test
mov
mov
out
or
and
push
and
or
hlt
xchg
xchg
inc
mov
cli
daa
daa
bound
xchg
loope
adc
pop
je
jecxz
in
add
fs
arpl
jecxz
pop
je
das
mov
dec
out
cmpb
adc
mov
lods
adc
cld
mov
and
jge
jo
aaa
icebp
loopne
aas
mov
fwait
ja
sbb
repnz
and
jb
push
xchg
and
xor
cmp
movsb
jne
inc
jle
int3
pop
std
pushw
push
test
jle
inc
add
cmp
pop
sbb
mov
les
dec
imul
mov
sub
add
mov
xor
test
inc
pop
popl
data16
fldl
shll
test
test
push
push
negl
rcrl
mov
push
xchg
adc
fdivrp
xor
mov
lret
cmp
adc
movsl
outsl
ljmp
mov
mov
jl
xor
cmp
ficomps
pop
cli
or
xor
sbb
or
pop
sbb
std
mov
inc
mov
jecxz
into
add
add
mov
jmp
std
fbstp
nop
lahf
mov
xorb
cmp
filds
outsl
incl
jmp
fld
inc
adc
enter
inc
std
test
mov
push
adc
and
pop
push
pop
mov
adc
sbb
je
adc
jg
jecxz
jmp
and
adc
mov
mov
sub
lret
mov
ret
mov
inc
test
cld
pop
incb
cmp
cmc
movsl
stc
nop
cld
scas
cld
push
mov
dec
int3
fildll
push
fisubs
push
test
adc
inc
stos
jmp
sbb
out
test
sbb
mov
adc
imul
push
or
leave
daa
jle
jg
jbe
popf
mov
mov
jbe
dec
das
mov
fildll
std
subl
iret
popa
jle
je
add
rorb
mov
mov
add
sti
mov
pusha
xor
lock
lods
fstl
aam
inc
jo
push
inc
rcr
pop
xor
jg
es
inc
pop
jb
outsl
sbb
imul
out
aas
xor
mov
outsb
pop
clc
dec
inc
loope
xchg
add
add
add
and
and
xor
orb
sub
dec
mov
adc
mov
cli
push
or
mov
out
xor
adc
sbb
mov
mov
mov
cmp
adc
cld
cli
test
cmp
aaa
aaa
ds
mov
xchg
cli
xchg
xchg
aaa
nop
cld
fucomip
mov
ds
and
leave
mov
push
adc
aam
lods
sahf
xor
xchg
sub
pop
dec
das
cs
repnz
mov
leave
and
push
lods
pop
hlt
dec
sahf
subl
dec
rorb
cltd
pop
mov
data16
or
and
cmp
inc
and
rcll
cltd
dec
scas
cmpsb
jbe
aaa
mov
mov
xor
frstor
enter
popf
dec
icebp
mov
mov
sbb
and
push
push
push
aaa
test
xor
mov
jmp
xor
sbb
jnp
push
lret
je
test
movsl
testb
imul
fmull
lock
inc
jg
fsubl
pop
sub
lahf
lods
inc
adc
cld
dec
mov
addb
xlat
xor
enter
xchg
test
push
cwtl
hlt
test
cmp
inc
push
adc
lods
lods
jmp
divb
add
jecxz
jle
dec
mov
scas
mov
fidivrs
xchg
fs
std
lods
ljmp
enter
sub
mov
mov
enter
jae
pop
or
ljmp
add
test
add
sbb
push
in
pop
pop
pop
push
mov
adc
or
mov
add
ds
inc
and
in
es
ficompl
jp
or
test
ret
dec
stc
insl
dec
decl
jo
adc
sub
pop
lret
push
inc
imul
aam
aas
flds
nop
mov
call
mov
dec
sbb
mov
outsl
mov
sub
xlat
jo
cpuid
cmp
pop
out
shrb
lock
inc
xor
add
js
push
ljmp
jb
lock
stc
incb
fidivl
jo
mov
stos
push
xchg
sub
mov
outsl
mov
std
xchg
cmp
mov
repz
mov
inc
mov
scas
loop
mov
lods
inc
mov
cmp
push
pop
iret
ja
and
bound
cmp
push
arpl
mov
sarb
mov
mov
jno
push
add
in
loopne
push
jmp
out
ds
pop
xchg
pop
jp
movsl
addr16
or
dec
fstps
mov
incl
ds
add
pop
dec
sub
test
sub
loope
cmp
out
out
insl
dec
std
call
loop
je
and
or
sub
jecxz
in
cs
xor
add
dec
in
das
dec
mov
pop
ja
in
dec
push
jle
out
lret
mov
sarb
imul
cld
mov
jg
lods
popf
and
pusha
jbe
out
mov
cmp
enter
sub
push
hlt
fldt
pop
fsts
pop
mov
shr
or
inc
push
adc
and
cmc
test
insb
outsl
pop
push
fneni(8087
gs
jle
outsb
hlt
sbb
loopne
cwtl
shrb
fsubrs
mulb
sarb
dec
mov
or
mov
jg
sbb
lods
jne
cs
sub
ljmp
enter
clc
and
out
dec
rolb
or
sbb
sahf
xchg
push
mov
popf
loopne
xchg
clc
lea
jge
or
sbbb
adc
xlat
push
push
scas
xchg
pop
jle
cmp
ret
mov
pop
sbb
hlt
pop
jp
jmp
scas
loopne
fmull
or
cld
mov
jg
lahf
sahf
jge
pop
jl
iret
xchg
inc
or
push
scas
vphaddwd
rcrl
adcl
adc
push
clc
das
add
stos
adc
inc
jno
xchg
sub
mov
pushl
pop
adc
add
push
or
ljmp
fdivl
mov
xor
ljmp
stos
push
mov
xchg
sahf
sub
lods
jl
mov
mov
mov
cs
cmc
and
adc
dec
jge
dec
insl
xor
nop
aam
repnz
fdivr
jg
pop
pop
inc
xchg
mov
jb
fwait
jns
adc
fwait
pop
lods
xor
mov
mov
leave
fsub
ljmp
dec
testb
popa
insb
inc
outsb
aam
push
mov
call
jg
xchg
fcoms
adc
dec
nop
mov
add
call
cli
pand
mov
lea
mov
inc
sub
pop
mov
or
in
out
mov
inc
inc
cltd
push
pop
jg
push
mov
outsb
push
mov
pop
jne
push
mov
ret
in
xchg
xlat
adc
cmp
pop
mov
stos
addb
movsl
or
adc
sbb
outsl
xchg
add
jecxz
mov
lahf
fmulp
xor
mov
mov
mov
xor
test
inc
mov
dec
jmp
dec
inc
test
mov
cmpb
ss
push
jle
in
std
outsl
inc
decl
test
jmp
xor
cs
sub
nop
shl
lcall
add
data16
adc
inc
scas
in
test
and
inc
xchg
test
cmp
or
xchg
adc
test
stos
sbb
mov
xchg
dec
mov
sub
jle
sahf
mov
cwtl
xor
cmc
subb
js
stos
mov
popf
inc
jmp
mov
idivb
shlb
or
and
dec
decb
insb
addr16
xchg
das
and
jg
dec
mov
aaa
popa
dec
inc
test
add
scas
and
aam
fucomip
fists
test
xlat
sarl
sarb
pushf
cmp
out
add
pop
aas
cmp
sub
stos
sub
lds
sbb
nop
stos
sahf
inc
hlt
jg
mov
loopne
rcr
pusha
popa
fmull
dec
std
pop
xor
das
adc
jg
sbb
mov
enter
shrl
jle
cltd
lods
loopne
cwtl
mov
jp
enter
movsl
movsl
pop
js
jb
sti
inc
mov
inc
outsl
std
sahf
pop
repnz
sub
loopne
outsl
mov
fistpl
push
mov
stos
mov
popa
cli
inc
in
jg
dec
pop
ja
sub
out
cmpsl
pop
and
add
scas
loopne
jbe
jnp
and
fs
dec
je
outsb
mov
faddp
push
lock
out
and
mov
jmp
cwtl
push
stc
lahf
in
dec
shll
lahf
mov
adc
push
mov
cs
jecxz
add
pop
inc
or
push
jge
das
rclb
adc
mov
mov
xor
in
inc
sub
cld
push
xchg
inc
shl
lcall
or
fildll
mov
or
mov
mov
scas
mov
mov
cmpsl
xchg
cli
outsl
adc
xor
cmp
lock
mov
ret
xor
dec
stos
scas
jp
bound
fs
mov
mov
std
pop
hlt
lcall
imul
inc
out
stc
push
loop
out
fwait
pop
pop
clc
fisttps
popa
sbb
movsl
cmpsb
and
or
jl
xor
loope
dec
stos
push
mov
push
mov
leave
mov
arpl
xor
icebp
sub
mov
ret
imul
es
inc
movsl
jle
xor
inc
movsb
mov
pop
loope
mov
movsl
cltd
dec
fists
sbb
movsl
mov
pushf
jl
fwait
call
nop
push
xor
cmp
ret
testl
push
cld
lea
inc
popa
sbbl
sub
mov
test
or
lcall
jmp
jp
or
sbb
mov
in
lret
add
inc
gs
push
aas
js
adc
add
mov
and
or
aam
andl
push
ss
arpl
cmc
inc
push
aaa
aas
add
xchg
fnsave
push
or
add
mov
adc
dec
lea
cmp
shll
repz
ss
aam
and
xor
mov
cld
sub
push
inc
add
rol
push
mov
pop
lcall
push
jg
adc
cmc
imul
xlat
and
mov
add
push
stos
pusha
insb
addr16
adc
decl
faddl
push
pop
test
and
xchg
int3
sub
stc
jle
and
scas
or
jno
repnz
inc
in
cmc
push
pushf
jge
clc
in
fistpll
pusha
fld1
add
stc
test
jmp
push
test
loop
sub
fsubrs
jle
pop
push
icebp
add
push
aam
fldenv
mov
dec
and
clc
mov
mov
icebp
jg
rolb
inc
dec
insl
jl
xchg
add
and
xchg
adc
shl
or
sahf
bound
push
ficoms
xor
jle
adc
popa
or
jmp
ja
add
jnp
shll
xorb
fadds
mov
nop
or
jle
push
lcall
out
ret
cwtl
add
loopne
lea
or
or
leave
xchg
ds
outsl
cld
rcr
mov
loopne
addr16
xor
or
imul
pop
inc
adc
jg
incl
fmuls
call
les
sub
call
js
add
pop
push
cmpsl
mov
pushl
jo
push
neg
add
or
and
outsb
or
mov
push
subb
lea
das
je
jb
jecxz
sub
dec
adc
lea
mov
or
xchg
mov
aam
or
lcall
aas
sub
add
mov
sbb
test
outsl
stos
or
fsubrp
dec
pop
cmp
pop
jecxz
adc
test
test
and
cmpsb
scas
rcll
mov
push
cmc
push
pop
test
push
sbb
cld
imull
adc
inc
insb
std
mov
iret
jbe
inc
lret
movsb
ss
or
cmc
das
pushl
mov
inc
mov
sub
stos
sub
cld
and
xchg
mov
inc
mov
adc
mov
pop
ja
mov
jg
test
cmp
lock
mov
add
or
lcall
inc
add
cs
pop
pop
push
jae
or
xor
test
xor
push
jg
lar
sbb
cltd
aam
dec
incl
lret
cmp
add
cmp
hlt
mov
rolb
ffree
imul
cld
in
or
shlb
xor
aaa
and
sub
dec
adc
in
cmp
jno
test
inc
ret
inc
pop
jno
jg
mov
mov
push
pop
mov
sub
jns
pop
rcr
inc
out
out
cs
es
mov
sub
jg
inc
fisubrs
clc
or
hlt
jo
mov
arpl
popf
push
bound
decl
xchg
fld
push
loopne
xchg
sub
test
clc
test
lret
test
test
jmp
pop
test
sar
mull
jle
dec
lahf
add
add
repnz
popa
mov
fistps
xor
xchg
cs
mov
xchg
jb
and
mov
jg
mov
xlat
mov
mov
sub
mov
dec
cwtl
cmp
add
mov
int
stc
mov
or
mov
xor
jbe
aaa
mov
in
mov
aad
in
jge
mov
adc
push
add
mov
stos
pop
popf
cmpsb
sbb
mov
and
mov
andb
push
mov
popf
mov
scas
lcall
imul
js
xchg
xlat
xchg
xchg
pop
pop
dec
pop
push
cli
mov
clc
mov
push
out
mov
and
cmp
aaa
pop
pop
out
addr16
movsl
lcall
aas
and
sbb
or
xchg
mov
xchg
mov
pop
pop
sub
push
neg
mov
add
cwtl
mov
flds
sub
loopne
incb
shrl
mov
leave
lods
jle
and
or
icebp
ret
sti
je
imul
stos
jnp
and
or
mov
js
test
push
jmp
push
jmp
or
fsts
xchg
lcall
ds
cwtl
and
mov
add
and
push
movsb
out
inc
je
bound
mov
leave
decl
add
sbb
and
xor
adc
mov
testl
je
add
xor
roll
imul
xchg
cld
push
fiadds
mov
dec
pusha
je
aas
adc
pop
xorb
into
inc
into
aaa
mov
push
aaa
adc
or
adc
fdivs
test
dec
lahf
lcall
mov
jg
imulb
or
jb
lods
sarl
jp
sub
std
movsl
jg
or
sub
fadds
cltd
pop
mov
dec
daa
inc
jmp
jmp
and
popf
fwait
mov
xor
inc
cwtl
loop
idiv
mov
jecxz
repz
adc
xor
js
xchg
jp
pop
jg
jmp
pminsw
xchg
add
lods
sub
sub
mov
mov
or
test
adc
jae
sub
add
mov
loope
xchg
dec
mov
or
xchg
add
adc
mov
xchg
mov
shrb
or
pop
addr16
in
subl
lea
xchg
js
js
daa
cmp
adc
ds
inc
cwtl
sti
dec
call
pop
sub
inc
in
inc
dec
pop
sti
movsl
mov
pop
loop
shrl
insl
mov
cmpsb
add
mov
icebp
dec
test
cmp
les
mov
and
ret
jmp
xor
jle
xor
push
repnz
jg
inc
es
mov
xor
mov
or
daa
sbb
idiv
xchg
cmp
clc
jae
gs
adc
push
test
cld
outsl
and
sbb
jg,pn
pop
lea
xor
cmpsl
pop
add
add
in
das
hlt
jg
fisubl
xchg
pop
stc
or
and
fstpt
fucom
lret
imul
pop
and
sub
dec
inc
and
cmp
adc
mov
or
xor
cld
fucomip
pop
or
xchg
pop
xchg
sbb
cld
test
mov
or
mov
mov
mov
or
cs
jg
adcl
cwtl
seto
stos
add
in
push
mov
outsl
mov
stc
mov
mov
jo
addr16
clc
jl
lcall
sbb
in
lcall
inc
cmpsb
xchg
cmp
nop
push
clc
in
mov
push
sub
inc
fxch
inc
arpl
xchg
add
xchg
ja
rclb
ds
test
clc
pop
and
jle
pushf
inc
mov
add
loop
lret
mov
xchg
fmull
jp
sub
jg
mov
jo
nop
mov
mov
or
add
daa
stos
shrl
ja
sbb
subb
push
push
jmp
mov
xchg
sbb
out
insl
std
insl
stos
mov
mov
test
cld
pop
cli
add
pushf
in
divb
ds
sub
notb
xchg
cmp
mov
push
sarb
jmp
shr
outsb
fucom
call
fcomps
dec
cmpsb
push
loope
mov
mov
add
sub
insb
aad
xchg
pop
adc
adc
and
push
push
push
sbb
xor
mov
jecxz
xchg
ss
or
mov
or
outsb
or
pop
in
fsub
orb
fnsave
sbb
pop
or
mov
bnd
call
jmp
dec
inc
lret
pop
orb
push
mov
add
icebp
das
inc
mov
mov
mov
xor
mov
add
test
pop
and
push
mov
into
mov
jg
call
sahf
ret
push
cmpsb
add
mov
std
pop
call
or
test
aas
paddd
cli
test
add
pusha
cmpsb
dec
and
movsl
test
or
xchg
pop
and
fsubs
gs
push
xchg
clc
mov
out
xchg
repz
jo
jmp
mov
aam
mov
aad
add
mov
inc
push
adc
outsl
ja
sbbl
mov
out
mov
ss
inc
ljmp
shll
mov
popf
jp
jmp
pop
insb
das
cld
sbb
fadds
sub
outsl
push
dec
sahf
cmc
pop
add
pop
or
sub
push
enter
and
cmp
mov
pop
mov
jg
add
push
ljmp
pop
mov
cld
cwtl
test
and
mov
outsb
test
and
or
push
adc
add
mov
jbe
cmp
lock
inc
cmp
or
xchg
mov
in
jg
mov
inc
outsl
insb
sbb
jns
or
dec
mov
je
push
inc
or
pusha
pop
bnd
xchg
cwtl
decb
shlb
dec
xor
jmp
mov
inc
cld
inc
addl
xor
decl
xor
xchg
mov
je
push
mov
mov
fisttpl
test
iret
pop
or
idivb
cmpsl
jne
push
dec
add
add
outsb
fsts
movsb
je
jnp
cmp
mov
cmpl
shrb
je
int
jp
sbb
mov
aam
push
dec
icebp
adc
sub
pop
add
mov
pop
jne
outsb
or
movsl
push
pop
clc
add
fcoms
std
shr
jg
mov
and
mov
inc
add
ret
popf
hlt
fsubl
test
aaa
mov
mov
or
in
aam
shll
sbb
or
outsl
push
mov
or
shll
addb
out
movb
sahf
adc
outsl
test
loopne
xchg
mov
mov
scas
lock
outsl
ljmp
hlt
xlat
mov
mov
jl
mov
adc
cmp
cld
mov
pop
fildll
pop
jle
int3
and
int
stc
pop
scas
xor
jecxz
imul
sbb
pop
push
rcrb
mov
add
loopne
enter
ss
lret
and
sbb
sub
mov
movsl
inc
dec
sub
xor
mov
xor
mov
or
push
jecxz
cmp
in
movsl
xchg
arpl
loope
sub
das
cld
pop
fdivp
adc
cli
inc
and
and
rolb
fimull
add
push
shlb
test
inc
cs
and
pop
stc
xor
cmp
pop
cs
rorb
std
mov
xchg
call
lds
in
repnz
and
cmp
xchg
dec
cld
sub
push
ljmp
adc
push
inc
ds
adc
cs
rorb
clc
lahf
cmp
mov
pop
mov
dec
test
xor
mov
stc
jmp
in
mov
and
sbb
pop
inc
xchg
push
ficompl
mov
mov
push
js
mov
loopne
ds
mov
or
dec
cmpl
xchg
cmp
sub
sub
pop
or
jmp
pop
xor
fs
lea
xor
push
mov
mulb
ja
incl
cmp
lret
aam
pushl
into
pop
jg
jge
adc
ljmp
clc
cmp
in
and
gs
mov
inc
iret
pusha
test
sti
jge
stc
mov
fdivrs
adc
ds
push
cwtl
pop
inc
daa
fildll
std
daa
jp
lret
lds
bound
test
ret
xchg
sbb
add
std
rcrb
cld
jp
and
push
loop
std
xor
add
mov
lods
xor
cltd
cmp
sbb
mov
sar
inc
xlat
call
and
scas
fdivs
lahf
lods
dec
lods
loope
cmpsl
push
aam
mov
ds
pushf
cmp
das
dec
dec
outsb
pop
test
test
ljmp
fucomp
xchg
dec
test
shrl
push
or
xor
jge
xlat
lea
je
aaa
incl
adc
pop
imul
cltd
sub
loope
in
jecxz
push
cmp
test
outsl
mov
jecxz
add
es
xor
clc
and
or
xorb
sar
sub
adc
leave
and
add
push
rorl
mov
sbb
sbb
push
enter
lahf
push
push
pop
std
mov
cwtl
mov
adc
outsl
dec
mov
add
pushl
incb
icebp
jle
decb
test
std
scas
or
lcall
sub
outsl
sub
sti
arpl
ja
add
incl
inc
test
cmp
adc
test
cwtl
mov
nop
fadd
data16
push
jecxz
lea
aaa
adc
mov
pop
or
movsl
test
mov
lods
jmp
out
inc
arpl
loope
lea
xchg
movsb
fucomi
mov
ljmp
pop
pusha
pop
inc
shlb
jbe
jbe
stos
mov
add
jmp
sbb
jge
pop
or
test
jnp
add
out
xlat
lcall
lods
xlat
inc
icebp
outsl
or
in
cwtl
cwtl
js
mov
jge
xchg
sub
sbb
das
push
test
ljmp
pop
icebp
sbb
icebp
scas
push
mov
sub
repnz
ret
outsb
jecxz
mov
subl
test
sbb
in
and
dec
push
ljmp
mov
pop
cmpsb
ljmp
mov
cli
jecxz
push
bound
enter
add
sub
and
ljmp
mov
push
int3
xor
dec
cmpl
push
out
mov
adcb
sbb
les
fwait
dec
add
add
enter
or
cli
pop
and
push
and
cmp
pop
cmp
lahf
je
cltd
filds
hlt
pop
cmpb
or
data16
int3
mov
in
xchg
mov
inc
sbb
sahf
xchg
shrb
and
adc
frstor
jp
mov
ljmp
pop
pop
aam
decl
add
push
cmp
or
pusha
mov
sbb
push
and
push
dec
mov
sbb
cld
bound
shrb
das
fidivrl
pop
pushf
dec
cwtl
adc
or
clc
xchg
imul
mov
xchg
push
jns
sti
pushf
repz
test
pop
ret
push
or
inc
fdiv
not
inc
jnp
test
and
jg
pop
cmp
sbb
push
loopne
ret
push
or
or
jmp
mov
popf
addb
hlt
insl
inc
cmp
sub
call
mov
hlt
and
adc
in
lcall
mov
and
sahf
jl
mov
stos
stc
inc
incl
aaa
call
sub
push
cmp
sbb
es
repnz
outsl
icebp
push
jae
in
sbbl
push
bound
mov
or
jg
pop
xlat
xor
loop
or
jb
loop
clc
repnz
mov
mov
outsl
push
xor
les
lret
cmp
dec
dec
out
push
mov
or
mov
sbb
xchg
ficoms
aaa
xor
sbb
or
adc
aaa
fsub
movsl
mov
adc
adc
clc
add
mov
mov
rol
xchg
test
mov
push
movsb
push
fstpl
sarl
and
dec
stos
data16
lcall
fildll
xor
mov
orb
pusha
call
pop
mov
push
or
iret
mov
lods
shlb
push
pop
mov
cmp
jne
add
push
mov
test
bound
jnp
lcall
jle
sti
hlt
lret
mov
or
xlat
ficoml
insl
popa
dec
lock
mov
ljmp
fsubrl
xor
repnz
inc
lock
adc
leave
jae
dec
push
inc
mov
jecxz
add
movsl
cmp
mov
repz
jmp
jne
add
mov
mov
push
mov
in
shrb
mov
sbb
sub
test
std
sub
xchg
std
adc
ror
outsb
xor
xor
test
dec
sarl
or
adc
mov
sub
mov
mov
add
pop
loop
inc
sti
push
int
incl
test
adc
push
into
pop
sbb
jo
sbb
js
xor
mov
push
aad
ljmp
jle
fistps
xor
testb
xor
jbe
das
ljmp
mov
repz
out
cmp
push
ljmp
lcall
test
mov
push
mov
sbb
cmpsl
mov
dec
movsl
or
out
adc
mov
shll
test
sub
mov
incb
testb
dec
push
sub
mov
or
and
rorl
loop
xchg
jbe
call
decl
pop
mov
aaa
cmp
mov
test
xchg
js
aaa
sbb
filds
sub
inc
insb
jne
adc
cli
xor
push
or
inc
pop
mov
dec
inc
out
and
lret
mov
xor
mov
cltd
in
or
mov
stos
in
sbb
add
inc
sub
jb
sub
gs
pop
mov
add
fwait
sbb
dec
adc
mov
mov
cmp
and
cmp
outsl
or
scas
sbbb
inc
insb
mov
fimull
add
mov
adc
inc
inc
jl
xchg
inc
roll
fisubl
nop
cli
fisttps
push
mov
mov
cli
pop
clc
cli
or
movsb
lea
pop
dec
push
jecxz
mov
outsb
jg
insl
xchg
add
or
add
ret
push
or
add
push
sub
mov
and
insl
bound
loopne
les
inc
sbb
adc
je
addr16
pop
mov
in
ljmp
lds
mov
sbbl
adcb
les
ds
dec
mov
jmp
pop
mov
insl
bound
cs
in
dec
loop
ds
xor
push
iret
inc
subb
push
addb
dec
adc
dec
movsl
jge
ds
insl
cmc
or
das
jecxz
loop
xlat
sub
std
arpl
sub
pop
out
sbb
inc
sbb
adc
test
movsl
or
add
inc
jb
scas
add
push
test
shll
ljmp
sub
mov
dec
cmp
movl
mov
sti
and
mov
dec
shlb
xor
fstp
xorl
inc
fs
mov
adc
out
xchg
pop
xlat
adc
pop
rcl
outsb
jg
cmp
shrb
leave
aam
and
xor
std
ds
pop
mov
ret
movsl
fidivs
enter
data16
lock
hlt
or
outsl
out
fists
popf
cli
mov
mov
data16
js
jnp
jb
sbb
imul
add
ljmp
jg
jo
mov
or
and
add
icebp
push
mov
mov
adc
cmpb
mov
dec
sbb
cli
movsl
js
dec
xor
stos
fisttpll
std
pop
orb
rcr
insb
push
adc
adc
sub
aaa
outsb
ljmp
mov
sub
adc
pusha
sub
add
sub
or
inc
xor
mov
mov
adc
lret
mov
jo
push
ljmp
jg
or
icebp
cmp
xchg
lahf
pop
add
and
mov
mov
mov
lcall
incl
je
xchg
jae
jae
xor
test
pop
adc
xchg
mov
decl
mov
cmc
mov
add
or
mov
cmp
iret
sahf
cwtl
sub
push
pop
adc
cmp
add
add
fldcw
leave
cmp
fcomi
sub
mov
inc
pusha
jg
popf
dec
inc
adc
xlat
mov
call
mov
xorl
xchg
cmp
xchg
pop
or
dec
add
cmp
cmp
test
xor
fsts
mov
add
hlt
mov
or
lcall
push
stos
inc
fcoml
dec
sub
ss
pop
cli
call
jmp
and
ret
push
inc
and
aaa
movsb
cmp
out
aad
jle
or
xchg
das
pop
std
dec
pop
push
and
jle
mov
std
sub
rclb
popa
mov
mov
add
sub
inc
sbb
jbe
cmpsb
out
aaa
test
lahf
add
imul
std
lods
cmpsl
insl
sbb
mov
mov
adc
ss
sbb
test
mov
mov
imulb
test
mov
jge
mov
push
popf
push
ja
xchg
mov
outsb
sbb
pop
in
out
stos
mov
lea
je
jg
jns
jbe
out
add
popf
xorb
mov
loop
loop
frstor
mov
or
xchg
lea
rcrb
clc
xchg
mov
lods
dec
in
jge
push
dec
sub
mov
or
decb
mov
mov
outsl
das
cld
lret
mov
inc
test
mov
outsb
push
inc
pop
lret
and
and
mov
outsl
push
outsl
sub
mov
in
or
and
daa
add
push
movsb
jg
shrb
sbbb
sarb
xchg
inc
add
rolb
xchg
jg
stos
cs
inc
cmp
push
pusha
rclb
fmuls
pusha
jae
add
shrb
stc
cmp
outsb
loopne
aaa
add
xorl
out
clc
dec
add
fidivl
js
aad
ds
lds
rolb
ja
es
pop
push
cmc
iret
adc
add
fistpl
pushf
popf
adc
bswap
pusha
add
push
lcall
ljmp
test
sbb
mov
pop
movsb
mov
cmp
movsb
jecxz
jb
cmc
imulb
dec
repnz
or
jle
pushl
sarb
mov
clc
cmp
pop
into
pop
loopne
xor
jb
sahf
sub
or
clc
call
pusha
xchg
inc
inc
out
rcrb
clc
bound
ja
aas
rorl
jg
adc
filds
mov
test
dec
sbb
pop
pop
adc
mov
outsl
fcompl
fisttpll
test
jne
inc
xor
add
xchg
notb
sar
movsl
mov
mov
cmp
call
xor
negb
test
int3
mov
or
ljmp
popa
insb
insb
adc
gs
out
inc
cs
ficompl
adc
xchg
add
jmp
sti
test
cmp
sbb
mov
daa
jmp
lock
mov
popf
jp
testl
mov
test
cwtl
push
fistps
mov
jg
mov
stos
and
or
ret
inc
rolb
jbe
fistpll
in
sbb
stos
add
popf
jp
test
or
popa
lock
xor
add
xor
mov
fwait
lds
movsl
in
and
jmp
incl
ds
les
pop
xchg
imul
fsubrl
and
hlt
clc
cwtl
jmp
and
mov
movsl
lea
or
ja
lock
stos
push
test
jg
fistpll
jmp
mov
sbb
shrb
insl
push
arpl
fucomi
jns
add
pop
lods
xchg
push
scas
xor
lods
test
rcll
cli
jg
adc
sub
inc
add
mov
push
incl
pop
test
sub
dec
mov
insb
push
jg
lea
ds
add
push
mov
clc
rorl
push
negb
gs
addr16
es
push
mov
sahf
cmovnp
sar
xor
push
test
addr16
hlt
sbb
sbb
shrl
mov
mov
inc
push
popf
nop
inc
int3
in
adc
xlat
jmp
jle
aam
clc
es
sbb
fwait
int3
scas
loope
lahf
clc
jg
mov
push
add
stos
ss
adc
test
mov
mov
fwait
sbb
ss
imul
push
call
push
je
pop
out
stos
test
loop
hlt
jg
jbe
test
mov
xchg
mov
mov
adc
test
int
pop
repz
push
mov
popf
push
lods
cmp
scas
cmp
ret
shlb
sub
ret
incl
dec
shlb
push
adc
add
lods
xor
dec
sbbb
jmp
sub
lods
clc
mov
mov
lock
jmp
mov
in
sub
in
jg
loopne
movsl
mov
stos
je
xor
inc
cmpsl
adc
pop
les
lret
push
hlt
lds
icebp
fbld
bound
cwtl
dec
fldt
mov
cmp
jmp
lahf
add
and
in
call
push
jmp
pusha
jb
add
repz
ret
pop
outsl
push
xor
xor
add
hlt
inc
lods
cmpsl
dec
jnp
jne
les
jl
or
add
inc
mov
lcall
aad
aaa
icebp
and
push
mov
lea
dec
andl
cmpsb
rcl
mov
dec
mov
sbb
fsubrs
push
aaa
in
jbe
popa
xchg
mov
ljmp
dec
lahf
and
inc
xor
cs
or
incl
xchg
add
subl
js
test
aad
cmp
fwait
pop
and
dec
xor
cwtl
mov
sub
mov
pop
inc
rcl
push
test
fcoml
jle
cmc
xchg
xor
inc
inc
cmp
cmp
outsl
dec
lret
inc
mov
adc
incl
aas
mov
pop
dec
int
in
ret
pop
inc
dec
inc
arpl
jo
and
xchg
mov
decl
gs
adc
jb
push
leave
ret
mov
addr16
mov
popa
gs
aas
or
pop
aaa
mov
adc
push
repnz
ret
jo
pop
mov
insl
fistpll
push
and
cmp
mov
add
jl
cmpsb
xchg
ds
callw
clc
dec
clc
mov
sbb
inc
imul
insb
movsl
fbld
add
adc
clc
cmp
jg
std
ljmp
into
repz
xchg
aas
clc
clc
and
mov
aaa
out
cli
stc
shrl
testb
mov
xchg
xlat
add
cmp
push
rcll
xchg
mov
mov
ljmp
andl
adc
jmp
push
mov
test
mov
push
decl
sub
sbb
test
fcoms
lcall
xlat
sub
sbb
push
cwtl
or
or
das
jno
sbb
cwtl
aam
xchg
push
andb
rcll
addl
std
push
pop
xchg
addb
stos
and
xor
imulb
test
insb
and
pop
adc
mov
dec
push
lods
cmp
adc
mov
dec
mov
push
gs
adc
mov
sub
mov
xor
jge
lea
and
mov
fs
inc
push
das
cld
push
xor
test
aad
stos
sarb
stos
dec
push
xchg
dec
inc
bnd
mov
sub
add
iret
and
loop
bound
loop
pushf
xchg
mov
imul
xchg
outsl
sbb
xor
xor
or
mov
push
decl
cmp
or
pop
add
pop
addb
adc
fwait
and
fildl
int
add
push
fbld
rorl
inc
xor
ret
and
incb
and
rcll
or
scas
std
mov
adc
sub
sub
in
xor
lods
pop
jmp
xor
sbb
xchg
popf
ja
or
sahf
mov
arpl
lcall
sbb
inc
addl
outsl
mov
icebp
and
fs
mov
and
test
xchg
and
cmp
insb
mov
or
xor
jns
cs
xchg
and
or
arpl
mov
mov
jmp
pop
cmpsl
inc
fs
ret
and
jecxz
test
xorl
in
cli
loope
das
cwtl
cmpb
shlb
adcl
insb
cld
decl
adc
cmp
xchg
add
mov
sbb
dec
sub
inc
sbb
cmp
in
lea
ret
mov
jl
mov
xchg
jle
outsl
xor
jecxz
cmp
adc
mov
nop
and
and
or
or
mov
outsl
data16
cmp
test
adc
inc
cmp
fbld
lods
dec
out
test
mov
std
test
loopne
push
scas
repnz
mov
adc
orb
mov
add
outsl
pop
cli
in
mov
push
into
mov
cmp
inc
mov
adc
mov
les
rcl
mov
sbb
sbb
stos
adc
test
and
mov
add
dec
movb
mov
orl
enter
mov
fistps
dec
sbb
dec
add
inc
push
inc
icebp
xchg
cmp
dec
fs
pop
xor
cmp
adc
fwait
dec
push
nop
dec
rcll
call
test
adc
cmpsb
lods
in
xor
and
mov
call
or
sbbb
test
cli
call
test
fs
and
fiadds
push
leave
rcrl
or
lds
push
test
les
adc
push
mov
aad
adc
xor
inc
and
sub
mov
or
andb
dec
push
adc
and
outsl
push
mov
mov
clc
jg
bound
data16
and
les
push
clc
insl
stos
mov
mov
inc
xchg
or
pop
aam
dec
add
dec
adc
mov
outsb
jg
les
pop
adc
jl
jg
es
shlb
push
mov
ror
cmp
pop
add
sbb
xchg
and
shlb
fs
fldenv
mov
mov
cmp
sub
or
or
xchg
nop
sbbl
mov
out
daa
stc
inc
addr16
lcall
shlb
fmull
add
es
and
fldl
inc
mov
loopew
mov
dec
xchg
xor
ss
push
xor
jmp
pop
pop
lea
rcr
fcmovnbe
in
and
sub
rclb
inc
xchg
add
hlt
je
sub
mov
dec
jmp
sti
sbb
xchg
add
inc
lods
clc
das
push
loopne
xchg
call
and
jecxz
xchg
cld
ja
aam
fbstp
or
or
inc
jmp
push
insl
jg
and
rorl
ficoms
or
outsl
sbb
sub
popa
pusha
jmp
scas
dec
orl
mov
lods
cmp
push
nop
rcll
fistpl
sarl
inc
mov
dec
cmp
and
stos
jle
mov
and
clc
in
dec
fdivrs
and
nop
cmp
adc
adc
pop
sbb
roll
jmp
pop
mov
clc
inc
xchg
fstl
call
cmpsb
mov
nop
xchg
xor
inc
lods
inc
sbb
pop
xor
std
das
insb
ds
adc
pop
fldt
mov
repz
lcall
xor
inc
xchg
xor
mov
cmc
outsl
mov
jp
and
and
mov
mov
cld
inc
loop
pop
lret
mov
lock
and
cmp
pop
add
mov
cltd
nop
out
adc
adc
outsl
fildll
imul
ret
in
lods
adc
push
push
mov
push
lea
clc
inc
movl
inc
mov
rorl
fsubl
sbb
fistpll
int3
dec
pop
dec
xchg
dec
xor
cmp
mov
scas
lea
xchg
pop
mov
in
or
cmp
pusha
es
and
or
fs
jp
add
cwtl
xor
adc
jno
mov
mov
ljmp
inc
or
xor
fwait
sbb
and
dec
outsb
add
cmp
add
je
imul
je
jb
bound
gs
inc
push
jns
or
imul
arpl
jns
push
outsb
insl
popa
jo
leave
dec
in
neg
divb
adc
jne
gs
push
hlt
negb
testb
outsb
or
insb
je
inc
jns
push
outsl
push
scas
mov
das
insl
gs
push
gs
cmp
jbe
ja
inc
outsl
insl
jo
gs
je
rsqrtps
divb
inc
jne
sbb
push
jb
arpl
mov
fidivs
or
imul
gs
pop
ja
imul
imul
jo
dec
sbb
test
and
fistl
es
mov
sti
gs
popa
outsb
fs
dec
outsl
xlat
xor
insl
and
outsl
ja
daa
sbb
insb
sub
push
imul
push
gs
dec
js
into
or
jb
out
dec
add
sub
imul
gs
jb
inc
dec
inc
push
fld
push
push
adc
pop
ret
ret
dec
movsb
dec
outsb
and
imul
jmp
test
arpl
dec
fdivs
jb
jns
push
arpl
insl
inc
push
outsb
cmp
push
or
nop
inc
imul
and
loope
pop
in
pop
in
sub
arpl
pusha
jbe
outsb
xor
adc
mov
push
repnz
test
push
xor
jns
fists
outsb
dec
cwtl
xor
mov
pop
sbb
jae
outsl
outsb
outsb
push
cmp
xor
push
dec
inc
jne
data16
push
outsl
imul
fs
xchg
outsl
sub
cmp
mov
pop
push
mov
push
xchg
mov
xor
mov
arpl
jns
arpl
lds
xchg
pop
or
imul
imul
adc
test
js
in
mov
xchg
arpl
add
dec
int
push
adc
pusha
or
pop
jns
ss
fimuls
pop
ret
addr16
fs
fwait
je
xchg
adcl
pop
sub
jnp
xor
pop
dec
outsb
jbe
rcl
sub
sbb
aam
jbe
divb
pop
imul
in
sub
jne
or
pushw
pop
push
jg
leave
push
xchg
jo
and
push
pop
sbb
data16
imul
pop
nop
mov
lcall
stos
loope
push
push
stos
mov
mov
or
sbb
sub
in
movsb
outsb
inc
test
movsb
push
xchg
xor
test
popa
inc
data16
data16
test
outsb
ss
ss
dec
cmp
mov
xlat
lock
jae
or
popa
movsl
fiaddl
cmp
bound
aam
inc
adc
aaa
insb
addr16
outsl
add
imul
and
xchg
insl
or
test
xchg
daa
jmp
push
cmp
push
and
dec
mov
leave
movsb
out
dec
xchg
xchg
adc
fstl
int
mov
leave
adc
cmp
xor
fstps
push
mov
int
or
outsb
xor
push
dec
dec
push
gs
inc
fcmovb
jb
jmp
rol
js
push
push
push
push
jno
push
pusha
icebp
or
inc
rorb
push
jo
mov
pop
ret
sahf
das
jb
cwtl
mov
outsb
mov
and
and
pusha
sub
ljmp
jne
adc
int3
pop
adc
mov
shll
inc
aaa
jns
adc
sbb
ret
jmp
fsubrl
pop
sub
in
mov
ss
inc
xchg
popa
lahf
add
idiv
lret
push
inc
dec
add
inc
loopne
sidtl
xlat
sbb
ss
add
sub
add
add
or
add
add
add
push
xor
mov
mov
adc
je
add
mov
xor
iret
pop
xor
pusha
pop
dec
bound
js
lret
or
je
sbb
or
xor
mov
and
push
push
push
idivl
push
ds
add
es
jo
daa
sbb
xchg
xchg
dec
ja
jb
daa
inc
pop
pop
shll
dec
mov
outsl
xchg
or
add
add
add
nop
add
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
mov
cmp
fdivrl
cmp
mov
dec
aam
clc
cmpsb
jg
add
test
xor
push
and
aad
or
lods
add
push
push
sbb
shll
aam
dec
xor
sbb
sbb
or
lock
hlt
shlb
adc
mov
jnp
js
xor
sbb
mov
xchg
dec
cmp
mov
xchg
dec
into
stos
movsb
push
mov
lods
xchg
cld
insl
popf
sbb
mov
adc
bound
adc
cmp
sbb
sub
jne
fldenv
loop
cs
sub
xor
jecxz
push
jl
lea
loop
out
push
stos
mov
mov
arpl
and
cmp
mov
outsl
rcr
fdivrl
jg
jo
adc
es
push
fisttpl
inc
nop
sbb
stos
ret
fwait
fmul
iret
pop
inc
sysenter
daa
iret
out
sbb
sub
xor
push
inc
mov
jmp
push
add
sti
out
stos
cmp
jge
aas
lods
scas
imul
cltd
out
rcl
pop
imul
dec
jmp
test
xor
into
lds
shlb
je
cmp
mov
aad
push
insb
mov
mov
dec
mov
adc
push
dec
mov
add
dec
sub
add
mov
xor
mov
jmp
test
loope
cmp
xchg
scas
mov
pushf
test
xchg
addr16
cmpl
cld
xchg
push
push
pushl
.byte
.byte
add
add
add
add
xor
add
mov
add
add
add
adcb
add
and
add
add
add
add
add
push
add
addb
add
js
add
add
add
or
add
add
fs
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
clc
add
addb
add
or
add
add
add
add
add
add
cmp
add
add
add
or
add
add
in
add
add
add
sub
add
and
add
dec
add
add
add
add
lahf
pop
int
jge
cmp
in
sbb
int
mov
jge
fstpl
out
cmp
in
jg
out
pop
pop
pop
popf
fistps
fistpll
std
pop
sbb
iret
lahf
jle
pop
fucomip
sbb
fistps
int
std
std
popf
pop
fistps
in
pop
ds
jle
pop
cmp
pop
mov
cmp
int
lahf
mov
pop
int
jg
fistpll
int
jg
pop
jl
sbb
iret
pop
jle
aas
mov
jge
int
std
in
mov
std
aas
cmp
popf
sbb
lahf
mov
fistpll
std
in
jge
lcall
std
pop
mov
pop
mov
jg
fstpl
int
mov
pop
fsubr
mov
int
sahf
fistps
int
pop
iret
sbb
lcall
push
int
aas
in
jge
fstpl
pushf
in
cmp
std
mov
fnstsw
iret
lahf
mov
pop
mov
mov
out
cmp
int
aas
int
pop
fistpll
out
pop
push
fistps
push
std
std
cmp
pop
fistpll
std
cmp
out
pop
pop
fstp
pop
out
mov
int
mov
mov
fstp
lcall
pop
fstpl
dec
lcall
sbb
fnstsw
fucomip
aas
fnstsw
int
pop
int
std
std
pop
pop
std
aas
aas
iret
pop
jle
fistpll
fistpll
std
cmp
in
pop
mov
pop
std
pop
lcall
iret
fistps
fnstsw
jg
popf
push
fistps
mov
int
push
std
jge
std
iret
pop
cmp
mov
fucomp
cmp
fistpll
iret
pop
mov
jg
iret
jg
lcall
lcall
in
aas
mov
aas
popf
lcall
aas
lcall
mov
pop
sbb
jge
out
fistps
cmp
pop
cmp
cmp
lcall
std
jge
jg
cmp
iret
jge
int
fstpl
fstpl
cld
fnstsw
fstp
mov
aas
lahf
std
sbb
std
pop
sahf
lcall
sahf
fistpll
jg
in
jge
iret
pop
cmp
std
push
std
pop
mov
out
pop
fdivr
popf
jg
std
aas
fistpll
int
jg
aas
jle
mov
int
aas
jge
jg
jge
fistpll
fistpll
iret
cmp
int
std
fistpll
fistpll
lahf
int
pop
in
pop
mov
mov
fstpl
std
lahf
cld
iret
lcall
aas
cmp
pop
jl
sbb
fstpl
out
pop
sahf
in
pop
aas
fistps
jl
lcall
iret
lahf
lahf
iret
pop
sbb
mov
iret
lcall
fistps
fistpll
int
sbb
jg
in
jg
lcall
in
jg
std
jge
int
aas
out
fistps
std
mov
fnstsw
in
pop
pop
in
aas
lahf
int
pop
lcall
fistps
fstpl
fstp
fmulp
pop
std
lahf
mov
popf
pop
lahf
pop
lcall
lcall
std
cmp
lcall
cmp
pop
cmp
sbb
aas
fistpll
lahf
jge
std
jl
cmp
mov
in
lahf
jge
cmp
iret
mov
fstpl
cmp
fistps
mov
pop
dec
popf
pop
std
lahf
mov
cmp
std
popf
mov
sbb
int
sbb
cmp
fstpl
in
lcall
aas
mov
mov
iret
aas
jge
pop
fdivrp
aas
pop
int
push
int
cmp
jge
mov
fstpl
in
cmp
lcall
std
pop
jg
std
mov
sbb
lcall
iret
fnstsw
fstpl
iret
aas
std
aas
mov
popf
pop
in
mov
out
pop
pop
int
sahf
fnstsw
sbb
int
pop
pop
iret
pop
pop
int
aas
int
ds
lahf
pop
mov
fistpll
iret
in
popf
ds
jge
fistps
std
popf
pushf
jge
fistps
std
cmp
out
std
lahf
mov
sbb
fistps
in
mov
fstpl
in
jg
lcall
fstpl
iret
std
jge
sbb
lcall
iret
jg
int
fistpll
fstpl
in
fnstsw
jge
std
sbb
std
aas
std
int
pop
out
jge
fucomp
jge
in
aas
cmp
std
popf
iret
pop
pop
iret
pop
pop
std
fistps
iret
pop
mov
fnstsw
pop
lahf
jle
jge
iret
lahf
mov
int
fucomip
std
lcall
pop
iret
jge
lcall
lahf
iret
mov
std
fnstsw
mov
out
std
std
cmp
std
jge
std
pop
pop
int
mov
mov
aas
jle
pop
mov
lcall
mov
iret
lahf
sbb
mov
out
mov
lcall
fstp
jge
lahf
mov
popf
pop
int
pop
fistpll
lcall
std
std
pop
pop
in
fstpl
jge
in
mov
fnstsw
fistps
int
ds
fsubr
aas
jle
mov
fistps
fistps
fistps
fnstsw
int
aas
cld
out
popf
pop
pop
out
jg
lcall
iret
sbb
in
jg
int
pop
std
cmp
fistps
jg
fistps
jge
lcall
lahf
mov
pop
pop
out
jg
std
lahf
pop
iret
aas
fistps
lcall
lcall
std
pop
aas
cmp
std
pushf
in
lahf
cld
out
jg
fstpl
in
sbb
int
pop
lcall
std
iret
jge
in
jge
int
jle
sbb
fistpll
fstp
pop
out
pop
lcall
out
mov
fistps
fistpll
jge
in
pop
pop
fistpll
std
pop
pop
fnstsw
std
lahf
mov
jg
out
lahf
fsubrp
aas
jl
fnstsw
fistpll
sbb
out
std
fistps
int
cld
fnstsw
int
jl
pop
fmul
cmp
fnstsw
iret
pop
sahf
in
std
fmul
pop
sahf
out
pop
sbb
popf
pop
jg
aas
mov
jg
iret
pop
sbb
pop
jge
std
cmp
mov
int
sbb
lcall
cld
iret
pop
pushf
iret
pop
in
aas
cmp
lahf
cmp
pop
mov
int
push
int
sbb
fstpl
mov
lahf
sbb
pop
std
iret
cmp
fistpll
mov
fistps
out
pop
jg
mov
in
pop
pop
fistps
out
fistps
mov
int
jl
fstp
lcall
pop
fistpll
int
jle
jg
mov
jg
in
pop
mov
popf
jge
fstpl
ds
pop
std
jge
fnstsw
int
pop
cmp
mov
std
popf
mov
mov
aas
sbb
pop
popf
lcall
pop
in
sbb
std
aas
lahf
fnstsw
fistpll
fnstsw
int
fucomp
jg
out
sbb
out
fstpl
fistpll
fistpll
jge
fstpl
fstp
fstpl
mov
int
mov
mov
pop
fnstsw
mov
int
pop
iret
pop
sbb
mov
in
mov
out
fistps
jg
fnstsw
iret
aas
fstpl
popf
jg
jge
fistpll
iret
cmp
int
pushf
fistpll
pushf
int
ds
mov
fstpl
std
fistpll
fstpl
std
pop
sbb
fistps
fnstsw
mov
pop
pop
lcall
fistps
out
std
pop
fistps
in
jge
fistpll
int
pop
fnstsw
int
jg
popf
cmp
aas
aas
cmp
iret
popf
fsubrp
ds
sbb
out
sbb
fmul
lahf
pop
fistps
int
fmulp
fstpl
sbb
in
jge
std
pop
dec
pop
lahf
int
ds
fnstsw
in
popf
sbb
lcall
mov
std
cmp
in
jg
fistpll
in
pop
pop
cmp
popf
pop
jge
lahf
pop
in
lahf
cmp
pop
cmp
pop
fstpl
in
pop
mov
cmp
cmp
pop
sahf
out
std
cmp
pop
aas
out
popf
pop
std
std
in
pop
fsubr
pop
mov
pop
dec
pop
pop
in
cmp
int
pop
std
std
mov
std
jge
std
fistps
mov
std
jge
std
std
fucomip
lcall
fistpll
mov
cmp
jg
lcall
out
jge
fnstsw
lcall
cmp
pop
mov
lcall
popf
sahf
iret
pop
dec
jge
std
fstp
out
fstpl
cmp
out
pop
cld
std
jge
out
lahf
std
int
std
iret
aas
sbb
pushf
std
jg
in
lahf
pop
in
mov
mov
aas
std
sbb
cmp
iret
mov
int
fucomip
popf
jle
fistps
pop
mov
pop
fmul
sbb
std
fistps
fistpll
std
mov
iret
pop
dec
pop
mov
sbb
out
lahf
std
fistpll
std
mov
iret
sbb
mov
lahf
pop
int
jge
int
mov
mov
std
mov
in
aas
cmp
pop
pop
fstpl
int
mov
cmp
std
std
in
jge
std
mov
lcall
out
lahf
pop
in
pop
cmp
pop
mov
cmp
iret
lahf
mov
cmp
pop
out
sbb
fstp
cmp
aas
mov
fstpl
cmp
cmp
iret
pop
pop
fstpl
fistpll
fstp
popf
push
fistpll
out
jg
iret
pop
sbb
cld
int
ds
std
sahf
out
pop
cld
fstp
jle
pop
jle
pop
pop
std
std
mov
fistps
int
mov
lahf
std
int
cld
int
std
std
mov
cmp
std
aas
fnstsw
iret
pop
lahf
fistps
out
sbb
std
mov
std
lahf
fstpl
fnstsw
int
pushf
iret
jge
fistps
int
out
mov
mov
jge
int
sbb
pop
fucomp
fstpl
fistpll
sbb
int
out
mov
iret
pop
mov
pop
sbb
pop
mov
jge
iret
popf
cld
std
jge
pop
jle
jg
int
fucomp
std
jle
pop
pushf
out
aas
mov
pop
fdivrp
sbb
int
jle
jg
int
sahf
fstpl
jg
mov
mov
fnstsw
fmulp
pop
fdivr
popf
mov
popf
pop
int
jl
pop
pop
out
pop
cmp
pop
mov
lahf
popf
fnstsw
int
sbb
popf
mov
iret
lahf
cmp
std
sbb
sbb
int
fdivrp
jg
in
aas
pop
iret
pop
pop
aas
pop
in
lahf
popf
out
std
int
mov
std
mov
int
mov
fnstsw
pop
int
sahf
int
fistpll
out
pop
pop
in
fistpll
lahf
pop
out
fistps
int
pop
iret
mov
fistpll
iret
pop
fucomp
pop
in
pop
mov
std
sbb
fistpll
in
jg
int
pop
fistpll
lahf
fucomp
pop
pushf
fistpll
out
std
mov
popf
jg
fistps
std
mov
cmp
fistpll
fistps
lcall
int
pop
in
fistpll
jle
std
jl
pop
fsubrp
sbb
out
jg
std
pop
ds
mov
std
jg
lcall
pop
jl
std
jl
lcall
std
fnstsw
sbb
popf
cmp
aas
mov
cmp
int
pop
jl
pop
sbb
jge
jge
pop
pop
out
pop
cld
int
fmulp
cmp
iret
jg
fistps
cmp
out
sbb
std
pop
cmp
mov
jge
in
mov
out
mov
out
pop
jle
mov
fstp
aas
in
cld
fnstsw
fnstsw
int
mov
fistps
pop
int
cmp
iret
popf
push
out
jg
iret
popf
cld
lcall
int
cmp
int
std
int
pop
int
pop
in
pop
fsubrp
mov
in
jge
out
jge
fistps
mov
sbb
fstpl
fnstsw
out
fstp
iret
fnstsw
pop
mov
aas
pop
fistpll
iret
mov
std
aas
dec
sbb
in
aas
aas
std
out
pop
jl
lcall
in
sbb
int
pop
iret
mov
std
fistpll
cmp
iret
lahf
popf
int
push
fistps
out
pop
jge
mov
iret
popf
mov
lahf
mov
sbb
in
aas
mov
fstpl
in
mov
fistps
fistpll
std
jge
fistps
iret
pop
jge
popf
pop
fstpl
fistpll
mov
fstp
mov
std
cmp
fstpl
std
mov
sbb
iret
sbb
iret
mov
fnstsw
lcall
fistpll
mov
pop
pop
int
pop
iret
sbb
in
sbb
std
cmp
std
jg
aas
fucomp
std
pop
fnstsw
fstpl
mov
add
add
icebp
add
sub
add
push
add
add
add
add
or
ja
aas
add
sbb
pop
std
add
fwait
mov
add
cmp
add
xor
add
mov
incl
mov
mov
mov
jle
aaa
popf
mov
add
cmp
add
sbb
add
popf
mov
add
xor
mov
add
sbb
add
aas
incl
mov
std
add
jns
add
jl
jnp
mov
jae
jl
mov
ja
mov
fnstcw
cmp
mov
ja
mov
testb
sti
ja
fistpll
add
testb
mov
cmp
add
mov
testb
jl
repz
add
sti
add
mov
xor
mov
hlt
add
sbb
mov
add
fnstsw
cmp
add
mov
add
fwait
mov
jae
mov
mov
mov
stc
jnp
add
mov
add
fwait
jge
jne
incb
aas
sbb
aas
xor
add
sbb
aaa
add
cmp
xor
add
sbb
xor
mov
add
jg
add
sbb
aaa
add
incb
ja
aas
add
mov
add
jbe
sti
jns
add
mov
testb
mov
jg
jnp
mov
ja
hlt
add
pop
mov
add
fnsave
add
cmp
add
mov
mov
add
pop
hlt
add
cmp
add
lahf
mov
add
mov
incb
mov
fcomi
add
mov
mov
mov
cmp
mov
jle
cmp
mov
mov
add
jge
cmp
add
cmp
add
jl
jno
incl
repz
jbe
jne
cmc
add
lahf
jg
idivl
add
sti
cld
add
jge
add
fnstenv
add
mov
cmc
add
cmp
add
sbb
jbe
mov
mov
aaa
add
jns
add
hlt
add
jnp
add
pop
mov
mov
cmp
je
mov
cmp
add
fnstcw
add
xor
add
std
jge
repz
testb
std
mov
add
cmp
jbe
repz
testl
xor
mov
cmp
pop
mov
mov
std
add
fnstsw
jns
std
add
je
repz
cmp
mov
mov
add
mov
add
hlt
add
mov
incb
jae
aaa
add
stc
add
std
add
sbb
mov
std
cltd
mov
jne
jne
aaa
fnstsw
std
std
testl
ja
mov
aaa
pop
mov
add
fnstsw
stc
pop
add
jnp
add
mov
cmp
mov
mov
aaa
cltd
mov
add
std
mov
jns
mov
add
mov
mov
add
cltd
cld
add
pop
mov
add
sbb
add
mov
mov
xor
add
pop
add
mov
jg
jne
cmp
cmp
add
pop
pop
pop
bound
mov
xor
push
adc
pop
in
lahf
dec
add
add
or
mov
pop
mov
std
mov
xlat
xchg
popf
xor
fistl
cmp
adc
inc
sub
das
or
push
dec
and
mov
scas
mov
mov
jle
xor
add
loop
pop
push
imul
inc
cmp
out
mull
jmp
mov
popa
xor
stos
scas
sahf
sub
add
mov
insl
lret
add
mov
sbb
xor
mov
divb
andl
inc
rcr
call
push
push
pop
cltd
push
repz
leave
xchg
and
mov
mov
enter
jno
gs
pop
jp
cmpsl
test
notl
cmp
popa
mov
ss
loopne
inc
js
mov
pop
xchg
adc
ret
push
add
or
ret
in
pushf
xor
jnp
pop
mov
jbe
add
loopne
adc
cmp
sbb
mov
scas
fisttpll
or
cmp
outsb
fptan
mov
xchg
sbb
leave
fnstenv
sbb
or
adc
add
lods
loopne
loope
int
shll
dec
lods
dec
out
out
mov
rcrb
mov
add
xchg
jecxz
clc
dec
mov
dec
rcl
cwtl
popf
adc
push
pop
jg
aad
das
pushf
call
jae
add
fstps
aaa
inc
dec
pusha
pop
jnp
adc
fisubrs
pop
cld
shlb
dec
cmpsb
add
cmp
nop
rcl
jmp
add
push
fsubp
pop
mov
pmaddwd
and
push
je
add
pop
test
bound
lret
sub
mov
sub
bound
jle
add
add
xchg
repz
popa
add
and
mov
imulb
aas
aam
jge
mov
sbbb
out
jno
out
cld
repnz
push
mov
ficoms
lcall
and
cwtl
push
jle
jnp
xchg
out
add
fisttpl
into
dec
push
fisubrl
sbb
add
mov
xlat
clc
mov
adc
sbb
cmp
ret
jmp
addl
rolb
sub
pop
ret
hlt
dec
cmp
push
jp
add
outsb
pop
incl
lods
addr16
mov
cmp
scas
xor
jl
cmc
mov
add
or
rcrl
jmp
adc
push
shlb
sbb
sub
and
add
inc
divl
jae
aas
push
rcrb
popl
dec
popa
clc
mov
aam
xchg
add
mov
test
mov
repz
test
push
sbb
je
les
add
loope
mov
push
iret
lea
je
mov
push
fsubp
je
gs
repz
add
enter
flds
dec
mov
ljmp
cmp
add
pusha
insb
mov
int
push
fcmove
mov
push
cs
ret
jl
adc
add
out
adc
pop
es
mov
adc
movsl
rorl
jbe,pn
adc
lock
add
loop
and
shll
data16
icebp
bound
imulb
out
popf
orb
or
sub
add
jl
add
add
add
add
add
sbb
js
add
add
push
push
add
add
or
fmuls
add
add
add
mov
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
adc
outsl
add
add
adc
outsl
add
add
add
add
add
add
add
add
add
in
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
rolb
add
add
add
xor
cmp
xor
xor
inc
add
add
cmp
or
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
jo
bound
jno
and
inc
add
ja
insb
add
jbe
add
add
inc
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
aaa
add
and
cmp
add
and
xor
xor
sub
and
xor
xor
xor
add
cmp
or
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
jo
bound
jno
and
inc
add
ja
insb
add
jbe
add
add
dec
add
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
jo
bound
jno
and
dec
add
arpl
imul
arpl
and
dec
add
jb
imul
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
aaa
add
and
cmp
add
and
xor
xor
sub
and
xor
xor
xor
add
sub
push
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
bound
jno
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
add
and
push
add
inc
add
add
dec
add
add
popa
add
add
add
cmp
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
jo
bound
jno
add
js
add
add
and
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
jo
bound
jno
and
inc
add
ja
insb
add
jbe
and
xor
cmp
cmp
aaa
add
add
add
add
add
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
jo
bound
jno
and
dec
add
arpl
imul
arpl
and
dec
add
jb
imul
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
add
add
add
add
pop
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
outsl
arpl
