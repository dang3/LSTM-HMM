pusha
push
mov
sub
push
push
push
mov
movzbl
mov
movzbl
cmp
jge
mov
xor
sub
push
call
mov
imul
movzbl
cmp
jge
mov
add
push
mov
xor
mov
sub
push
call
mov
shr
movzbl
cmp
jge
push
mov
and
xor
push
mov
xor
mov
add
push
mov
or
xor
push
call
mov
mov
cmp
jle
push
push
pushl
mov
xor
push
call
cmpl
jle
pushl
pushl
mov
and
push
call
mov
xor
or
movzbl
cmp
jge
mov
and
and
push
mov
or
imul
push
mov
xor
push
mov
or
sub
push
call
cmpl
jge
mov
mov
jmp
cmpl
jne
push
call
movzbl
mov
shr
movzbl
cmp
jne
call
mov
imul
add
mov
cmpl
jge
mov
add
push
call
cmp
jge
mov
or
and
push
mov
or
imul
push
mov
and
mov
imul
push
mov
imul
imul
push
call
mov
or
or
movzbl
cmp
jne
mov
add
push
pushl
push
call
cmp
je
mov
and
mov
sub
push
mov
and
push
push
call
mov
shr
mov
cmp
jle
mov
imul
mov
sub
push
mov
xor
imul
push
call
mov
sub
movzbl
mov
mov
pop
pop
pop
mov
pop
ret
xor
ret
push
mov
sub
push
push
push
mov
mov
cmp
jne
call
cmp
jle
mov
and
imul
push
mov
sub
sub
push
call
mov
shl
mov
cmp
jne
call
mov
movzbl
or
sub
mov
xor
mov
mov
cmp
je
mov
imul
movzbl
sub
push
mov
sub
push
movzbl
add
push
mov
imul
push
call
movzbl
xor
sub
mov
mov
mov
movzbl
shl
mov
cmp
jle
push
call
movzbl
add
add
mov
sub
mov
movzbl
imul
mov
cmp
jne
push
movzbl
or
push
mov
and
movzbl
add
push
call
call
mov
or
sub
mov
mov
movzbl
xor
cmp
je
mov
mov
movzwl
shr
mov
cmpw
je
pushl
pushl
movzwl
push
call
cmpw
jle
movzwl
mov
jmp
movzwl
or
imul
mov
cmpw
jle
movzbl
mov
jmp
mov
and
movzwl
sub
mov
cmpl
jle
call
movzwl
movzwl
imul
add
cmp
jge
mov
mov
movzbl
mov
cmpb
jge
pushl
mov
xor
and
push
call
mov
mov
cmpl
jle
call
cmpb
je
mov
mov
jmp
movzbl
and
sub
mov
movzbl
mov
mov
movzbl
imul
mov
cmpl
jne
movzbl
xor
push
movzbl
push
call
call
movzbl
sub
add
mov
add
mov
mov
shr
mov
mov
test
je
mov
movzbl
sub
add
push
mov
and
or
push
movzwl
imul
movzbl
sub
push
movzbl
imul
movzbl
add
push
call
call
movzbl
movzwl
and
sub
mov
add
mov
mov
shr
mov
cmpw
je
movzbl
sub
push
movzwl
imul
push
call
movzwl
movzbl
imul
sub
mov
sub
mov
mov
mov
cmpb
je
movzwl
push
pushl
movzbl
or
push
call
cmpl
jne
movzwl
mov
jmp
jmp
mov
mov
movzbl
shr
mov
mov
test
je
call
mov
mov
cmpb
jge
movzbl
push
movzbl
push
call
mov
sub
movzbl
sub
mov
cmpb
jle
movzbl
push
call
cmpb
jge
call
movzwl
imul
mov
cmpw
jle
movzbl
movzwl
and
push
movzbl
sub
push
call
mov
movzbl
and
mov
movzbl
shl
mov
movzbl
shr
mov
cmpl
je
movzwl
movzbl
xor
sub
push
movzbl
movzwl
xor
push
movzwl
movzwl
sub
push
movzbl
push
call
movzbl
movzwl
xor
mov
movzbl
shl
mov
movzbl
mov
cmpb
jne
call
call
mov
add
mov
movzbl
sub
sub
sub
mov
movzwl
xor
mov
cmpw
jne
pushl
movzwl
and
movzbl
sub
push
movzbl
push
movzwl
and
movzwl
sub
push
call
mov
movzbl
sub
sub
mov
movzbl
shl
mov
mov
mov
cmpb
jge
movzwl
or
push
call
mov
add
mov
movzwl
xor
mov
cmpb
jne
movzbl
or
push
movzbl
push
movzbl
or
xor
push
call
mov
movzbl
xor
sub
mov
movzbl
mov
add
mov
movzbl
xor
mov
add
mov
cmpb
jle
movzbl
movzbl
xor
push
call
call
movzbl
movzbl
imul
mov
sub
mov
mov
mov
cmpb
jne
movzwl
movzbl
xor
push
movzwl
imul
push
movzwl
add
movzbl
add
push
movzwl
push
call
cmpb
jle
movzwl
mov
jmp
mov
movzwl
imul
sub
mov
movzbl
mov
mov
test
je
movzbl
push
call
movzbl
movzwl
xor
sub
mov
mov
cmp
jne
movl
mov
shl
mov
cmpl
je
mov
or
imul
push
mov
or
imul
push
call
mov
shl
mov
cmpl
jne
mov
movzwl
or
sub
push
mov
imul
mov
sub
push
call
cmpl
je
movzwl
jmp
movzwl
shr
mov
mov
test
je
call
cmpl
jne
mov
mov
jmp
mov
movzwl
xor
mov
add
mov
cmpb
jle
movzwl
sub
add
push
movzbl
sub
push
mov
add
push
movzbl
or
push
call
cmpl
jle
mov
mov
jmp
movzbl
movzwl
or
sub
mov
mov
cmp
jne
movb
movzbl
shr
mov
cmpl
jge
call
cmpb
jle
mov
mov
jmp
movzbl
and
mov
sub
mov
cmpb
je
mov
imul
push
movzbl
push
movzbl
and
push
call
mov
movzbl
xor
and
mov
cmpb
jne
movzbl
movzwl
or
imul
push
call
movzwl
add
mov
cmpw
jle
movzbl
push
movzbl
and
and
push
call
movzwl
movzbl
sub
sub
mov
mov
mov
cmpb
jle
movzbl
push
call
call
mov
shr
mov
cmpb
jne
movzwl
push
movzbl
movzwl
imul
push
movzwl
push
call
cmpl
jne
movzbl
jmp
call
mov
or
sub
mov
cmpl
jle
call
cmpw
jge
movzbl
mov
jmp
call
movzwl
or
add
cmp
je
movl
mov
xor
mov
add
mov
cmpl
jge
pushl
mov
sub
push
pushl
pushl
call
mov
and
and
mov
mov
movzwl
xor
sub
mov
sub
mov
movzwl
mov
cmpw
jge
mov
movzwl
imul
push
movzwl
push
movzwl
add
push
call
movzwl
movzwl
imul
sub
mov
add
mov
movzwl
shr
mov
cmpw
jge
movzwl
xor
mov
imul
push
movzwl
imul
push
pushl
call
cmpl
jle
movzwl
xor
mov
imul
push
pushl
call
jmp
movl
mov
and
add
mov
cmpl
je
movzwl
sub
movzwl
sub
push
call
cmpw
je
movzwl
mov
jmp
mov
or
movzwl
add
mov
cmpl
jne
mov
movzbl
add
push
mov
xor
movzwl
sub
push
call
cmpl
jne
pushl
pushl
pushl
call
mov
mov
cmpb
jne
mov
imul
push
call
mov
movzbl
sub
add
mov
movzbl
mov
mov
movzwl
shr
mov
cmpb
jne
movzwl
or
movzbl
sub
push
movzbl
push
mov
movzwl
add
push
call
cmpw
je
movzwl
mov
jmp
mov
movzbl
or
add
mov
add
mov
movzwl
and
mov
movzwl
add
add
mov
add
mov
movzbl
xor
mov
sub
mov
mov
test
je
movzbl
imul
movzbl
add
push
mov
sub
push
call
mov
test
je
movzbl
mov
jmp
movzbl
and
add
mov
sub
mov
mov
mov
cmpl
jle
pushl
call
call
movzwl
and
movzwl
or
mov
call
jmp
movzbl
and
sub
cmp
jne
push
mov
and
sub
push
movzbl
push
mov
and
push
call
mov
xor
mov
mov
xor
mov
test
je
movzbl
add
movzbl
add
push
mov
movzbl
xor
sub
push
call
cmp
je
mov
jmp
call
mov
imul
mov
mov
mov
mov
mov
test
je
push
call
call
mov
sub
shr
mov
mov
movzbl
add
add
mov
xor
mov
mov
shl
mov
cmp
jle
movzbl
or
push
movzbl
or
push
movzbl
imul
movzwl
sub
push
mov
sub
push
call
mov
mov
mov
mov
movzbl
or
mov
cmpw
jge
movzwl
xor
push
movzwl
push
call
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
push
push
call
add
mov
mov
mov
cmpb
jne
inc
mov
mov
cmp
je
cmp
jne
cmpb
jne
inc
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
testb
je
movzwl
jmp
cmpb
jbe
inc
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
push
mov
sub
push
push
push
mov
mov
xor
mov
add
mov
cmp
jge
call
mov
shl
mov
cmp
jle
push
mov
xor
push
push
mov
and
mov
sub
push
call
cmp
jle
mov
jmp
mov
imul
sub
mov
xor
mov
mov
cmp
jle
mov
and
and
push
mov
sub
push
push
mov
and
push
call
cmp
jle
mov
mov
jmp
mov
xor
sub
mov
xor
mov
mov
imul
mov
sub
mov
cmpw
je
movzwl
push
push
push
call
cmpw
jne
mov
imul
push
movzwl
push
mov
or
or
push
mov
xor
push
call
call
movzwl
imul
sub
mov
mov
mov
mov
mov
cmpw
jge
push
mov
or
push
mov
add
push
call
cmp
je
push
mov
or
or
push
call
mov
movzwl
add
sub
mov
mov
or
mov
cmp
jne
call
cmp
jne
mov
or
add
push
call
call
mov
movzwl
add
add
cmp
je
mov
mov
movzbl
xor
mov
cmpl
jle
mov
and
add
push
movzbl
xor
movzbl
xor
push
movzbl
push
mov
xor
push
call
cmpb
jle
call
mov
mov
cmpb
jne
mov
sub
movzbl
add
push
movzbl
or
movzbl
or
push
mov
imul
push
call
movzbl
or
mov
movzbl
mov
mov
mov
or
mov
cmpw
jle
movzwl
mov
jmp
call
movzwl
sub
add
mov
add
mov
mov
mov
cmpl
jne
movzbl
movzwl
and
movzbl
imul
push
mov
imul
push
movzwl
sub
push
movzbl
push
call
cmpl
jge
movzbl
add
push
call
cmpl
jle
mov
mov
jmp
call
mov
movzbl
or
sub
mov
add
mov
mov
mov
mov
test
je
pushl
mov
imul
push
mov
or
push
call
mov
movzwl
and
sub
mov
sub
mov
mov
movzwl
or
xor
mov
call
jmp
movzwl
xor
mov
cmp
jle
movzwl
push
movzwl
xor
add
push
mov
imul
push
mov
movzwl
xor
push
call
call
mov
or
sub
mov
xor
mov
mov
or
mov
mov
mov
mov
mov
and
sub
mov
cmp
jge
mov
xor
push
movzwl
and
push
mov
imul
push
call
cmp
jle
mov
jmp
mov
pop
pop
pop
mov
pop
ret
ret
push
mov
sub
push
push
push
mov
movzbl
mov
movzwl
mov
test
je
mov
sub
push
push
mov
imul
add
push
push
call
mov
shr
movzwl
cmp
jne
mov
or
mov
imul
push
mov
imul
push
call
mov
imul
add
mov
xor
mov
mov
shr
mov
cmp
jne
mov
add
push
push
mov
movzwl
and
and
push
push
call
call
mov
or
mov
mov
mov
mov
shr
movzwl
cmpw
jle
call
cmp
jne
movzwl
mov
jmp
mov
add
sub
mov
xor
mov
mov
xor
mov
sub
movzwl
cmp
jne
call
mov
imul
mov
mov
mov
mov
and
mov
sub
movzwl
mov
sub
cmp
je
movl
mov
mov
mov
or
mov
imul
mov
cmpl
jge
mov
and
mov
imul
push
mov
or
imul
push
call
mov
and
mov
mov
xor
mov
mov
and
mov
cmpl
jne
call
mov
mov
mov
movzwl
imul
imul
mov
cmpl
jge
call
mov
and
sub
mov
mov
movzbl
xor
sub
xor
mov
movzwl
add
mov
cmpw
jle
call
call
mov
mov
mov
movzwl
mov
mov
test
jne
call
mov
test
jne
call
call
mov
movzbl
and
sub
mov
add
mov
mov
mov
mov
test
jne
pushl
mov
sub
push
call
movzwl
and
sub
mov
sub
mov
mov
mov
cmpw
je
movzwl
imul
push
call
mov
test
jne
call
call
jmp
movzwl
mov
cmp
jne
mov
or
push
movzwl
push
mov
imul
push
movzwl
movzwl
or
sub
push
call
cmp
jle
mov
mov
jmp
call
mov
xor
mov
mov
shr
mov
cmpw
jne
call
mov
imul
mov
mov
mov
mov
imul
mov
add
mov
cmp
jle
push
mov
or
push
movzwl
push
call
call
mov
shr
mov
cmpw
jne
call
mov
test
je
mov
mov
jmp
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzwl
mov
test
je
push
mov
xor
add
push
call
mov
shl
movzbl
cmp
jge
call
mov
shr
movzwl
cmp
jge
push
mov
and
and
push
mov
and
xor
push
mov
xor
sub
push
call
cmp
jle
call
cmp
jle
mov
jmp
mov
and
add
mov
xor
mov
mov
and
mov
add
mov
cmp
jge
movzwl
and
imul
push
movzwl
push
mov
and
imul
push
call
call
movzwl
xor
add
mov
xor
mov
mov
movzwl
xor
or
mov
mov
test
je
movzwl
sub
add
push
mov
or
push
call
movzwl
movzbl
xor
add
mov
mov
mov
mov
movzwl
cmp
jle
mov
and
movzbl
sub
push
movzwl
push
call
movzbl
sub
add
mov
movzwl
sub
mov
cmp
jle
mov
and
movzbl
and
push
movzwl
xor
push
mov
imul
push
call
cmp
jle
mov
mov
jmp
mov
and
cmp
je
mov
mov
movzwl
and
movzwl
add
mov
cmpw
je
movzwl
imul
push
movzwl
push
movzwl
push
movzwl
push
call
cmpw
jle
movzwl
mov
jmp
mov
add
mov
cmpw
jge
movzwl
xor
movzwl
xor
push
movzwl
movzwl
xor
push
movzwl
or
movzwl
add
push
call
movzwl
imul
mov
add
mov
cmpw
jge
movzwl
and
movzwl
imul
push
movzwl
push
movzwl
push
call
movzwl
movzwl
or
add
mov
movzbl
mov
mov
mov
movzwl
and
mov
cmpl
jle
movzwl
and
push
movzwl
push
pushl
call
call
movzwl
movzwl
sub
sub
mov
add
mov
movzwl
imul
mov
cmpl
jge
mov
movzwl
sub
push
movzwl
or
movzwl
and
push
movzwl
push
movzwl
and
imul
push
call
movzwl
movzwl
or
add
mov
add
mov
mov
and
movzwl
xor
mov
cmpw
jge
call
call
movzwl
add
sub
mov
sub
mov
movzwl
mov
cmpw
jge
movzwl
imul
movzwl
sub
push
movzwl
add
push
call
cmpw
jne
call
call
jmp
mov
or
movzwl
cmpw
jge
mov
movzwl
add
push
mov
or
push
mov
movzwl
add
push
movzbl
push
call
cmpb
je
movzwl
jmp
call
mov
movzbl
sub
sub
mov
xor
mov
mov
sub
movzwl
cmp
jne
movzwl
push
movzbl
push
mov
movzbl
sub
push
call
mov
mov
mov
mov
sub
mov
cmpw
je
movzbl
sub
sub
push
call
call
movzwl
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
push
push
call
pop
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
movzbl
test
je
mov
or
push
mov
or
add
push
push
push
call
mov
movzbl
mov
test
je
push
call
mov
and
sub
movzbl
cmp
jge
call
cmp
jle
mov
mov
jmp
mov
shr
movzwl
cmp
jge
call
mov
test
je
mov
add
push
mov
imul
push
mov
sub
push
call
mov
add
mov
cmp
jle
mov
or
imul
push
push
call
mov
test
je
mov
mov
jmp
mov
add
movzbl
cmp
jle
call
mov
movzbl
cmp
jge
push
call
mov
xor
mov
cmp
je
mov
xor
or
push
push
mov
xor
mov
sub
push
call
mov
test
jne
push
push
push
movzbl
push
call
mov
mov
mov
cmpb
jge
mov
or
imul
push
mov
imul
mov
add
push
call
mov
sub
movzbl
cmpb
jge
movzbl
push
movzbl
or
push
call
mov
movzbl
sub
mov
cmp
jne
call
movzbl
sub
mov
cmp
jge
call
cmp
jne
movzbl
xor
mov
imul
push
movzwl
and
movzwl
and
push
call
mov
and
movzwl
test
je
movzwl
push
push
push
mov
xor
push
call
mov
test
jne
push
call
movzwl
mov
shl
movzbl
cmpb
jle
call
movzbl
xor
or
mov
cmp
jge
movzbl
imul
push
mov
movzbl
imul
push
mov
xor
movzwl
and
push
mov
movzwl
or
add
push
call
mov
sub
movzwl
cmp
jle
mov
and
movzwl
add
push
movzbl
imul
push
movzwl
push
movzbl
and
mov
sub
push
call
movzbl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
test
je
push
mov
sub
push
mov
xor
imul
push
mov
and
add
push
call
cmp
jge
push
mov
or
add
push
mov
imul
push
call
mov
imul
mov
add
mov
cmp
jle
mov
movzwl
or
mov
imul
push
movzwl
or
xor
push
call
movzwl
shl
mov
cmp
jne
mov
and
push
movzwl
and
mov
imul
push
mov
xor
movzwl
and
push
call
cmpw
jle
mov
jmp
movzwl
shl
mov
cmpl
jle
movzwl
movzwl
and
push
mov
sub
sub
push
pushl
call
mov
test
je
mov
mov
jmp
mov
movzwl
add
mov
cmp
jne
call
mov
or
mov
sub
mov
cmp
jle
mov
imul
movzwl
sub
push
movzwl
sub
push
movzwl
xor
mov
imul
push
call
cmp
jne
movzwl
mov
jmp
mov
mov
test
je
pushl
mov
movzwl
sub
push
push
mov
movzwl
imul
mov
sub
push
call
cmp
jne
movzwl
push
movzwl
push
call
cmpw
jle
movzwl
mov
jmp
movzwl
add
mov
cmpl
jne
movzwl
push
movzwl
push
movzwl
and
mov
sub
push
call
mov
shl
movzbl
cmpw
jle
movzwl
xor
movzwl
add
push
mov
xor
push
movzwl
movzwl
imul
push
call
mov
mov
test
je
mov
imul
mov
sub
push
call
mov
test
jne
push
call
mov
movzwl
sub
mov
cmpl
jne
movzwl
push
call
movzwl
add
mov
cmpl
je
movzwl
push
movzwl
imul
movzwl
add
push
mov
movzwl
and
xor
push
call
movzwl
and
movzwl
sub
mov
cmp
jle
movzwl
xor
add
push
pushl
movzwl
imul
push
movzwl
and
push
call
test
je
mov
mov
jmp
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
or
imul
mov
cmp
jge
mov
jmp
mov
sub
mov
mov
shl
mov
cmp
jge
call
mov
mov
cmp
je
push
mov
or
push
mov
xor
mov
sub
push
push
call
cmp
je
mov
or
mov
sub
push
call
mov
test
je
mov
imul
add
push
mov
add
add
push
mov
add
push
call
mov
and
mov
cmp
jne
mov
and
push
mov
and
and
push
call
mov
shl
mov
test
je
mov
and
push
mov
or
push
mov
xor
mov
imul
push
call
mov
shl
mov
cmpl
jle
mov
imul
push
mov
xor
mov
imul
push
mov
xor
xor
push
call
test
jne
push
push
push
push
call
mov
mov
cmp
jle
mov
and
add
push
mov
and
imul
push
push
mov
or
mov
add
push
call
mov
imul
mov
sub
mov
test
je
call
cmp
jne
push
push
call
mov
xor
mov
cmpl
jle
mov
sub
push
push
push
call
test
je
mov
mov
jmp
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
xor
add
movzwl
cmp
jge
call
mov
shl
movzbl
cmp
jle
mov
or
push
mov
xor
push
push
mov
add
push
call
mov
sub
mov
cmpl
jne
call
mov
imul
mov
cmp
jge
mov
sub
push
pushl
push
call
mov
mov
cmp
jle
mov
imul
add
push
mov
or
push
mov
or
mov
sub
push
mov
imul
sub
push
call
mov
movzbl
sub
mov
cmp
je
mov
or
movzbl
add
push
call
mov
movzbl
cmpl
jne
pushl
mov
or
push
push
call
cmp
jge
mov
movzbl
sub
push
mov
imul
imul
push
mov
add
push
call
mov
movzwl
cmpl
jle
push
push
call
mov
shl
mov
mov
test
je
movzbl
and
add
push
mov
add
push
call
mov
sub
mov
cmp
jge
mov
or
movzbl
and
push
mov
imul
mov
add
push
call
cmpl
jle
mov
mov
jmp
mov
add
mov
mov
test
jne
push
call
movzbl
mov
shr
mov
cmp
je
mov
and
push
pushl
call
mov
movzbl
imul
mov
movzbl
add
mov
cmp
jne
movzbl
imul
mov
add
push
call
cmpl
jge
mov
mov
jmp
cmp
jne
movzbl
push
call
movzbl
mov
add
mov
cmpl
jne
mov
xor
mov
add
push
call
mov
movzbl
imul
mov
mov
shl
movzbl
cmpb
je
mov
movzbl
imul
push
mov
xor
xor
push
mov
movzbl
xor
imul
push
call
mov
xor
mov
add
movzbl
cmpb
je
mov
xor
or
push
movzbl
or
mov
add
push
mov
add
push
call
mov
shl
mov
cmpb
jle
mov
or
and
push
mov
or
push
mov
or
movzbl
imul
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
test
je
mov
imul
sub
push
mov
or
mov
add
push
mov
and
mov
add
push
call
cmp
jle
mov
jmp
mov
shr
mov
test
je
mov
imul
push
mov
or
mov
imul
push
call
mov
shr
mov
cmp
jle
push
push
call
mov
shr
movzbl
cmp
jge
mov
and
push
call
mov
sub
sub
mov
xor
mov
mov
add
mov
test
je
mov
xor
imul
push
mov
and
push
mov
xor
sub
push
call
cmp
jne
mov
jmp
mov
add
add
mov
xor
mov
mov
mov
cmp
jle
call
call
mov
or
add
mov
mov
mov
mov
xor
mov
mov
sub
sub
mov
mov
sub
mov
cmpl
je
call
mov
imul
cmp
je
mov
mov
movzwl
shr
mov
movzwl
mov
cmpb
jle
movzwl
and
push
movzbl
imul
push
call
mov
test
je
movzbl
or
push
movzbl
push
call
mov
or
movzbl
imul
mov
movzwl
shr
mov
cmpb
jle
movzbl
xor
push
call
movzwl
movzwl
sub
mov
movzbl
mov
mov
movzbl
sub
mov
cmpw
jge
movzbl
or
movzwl
add
push
call
call
movzwl
movzbl
add
sub
mov
add
mov
movzwl
shl
mov
cmpw
jne
movzwl
push
movzwl
push
call
movzbl
movzbl
and
add
mov
add
mov
movzbl
shr
mov
mov
test
je
movzbl
xor
movzwl
sub
push
movzwl
push
call
cmpw
jne
movzbl
movzbl
or
movzbl
or
push
movzwl
movzbl
or
add
push
call
movzwl
movzwl
or
add
mov
sub
mov
movzbl
shr
mov
cmpb
jge
movzwl
push
movzwl
sub
push
movzbl
movzbl
add
push
call
cmpb
jge
movzwl
movzbl
sub
push
movzwl
push
movzbl
sub
movzbl
add
push
call
cmpb
jne
movzbl
mov
jmp
call
jmp
mov
shl
mov
cmp
jne
mov
or
add
push
call
test
je
mov
jmp
mov
xor
mov
mov
sub
movzbl
cmp
jne
push
mov
or
push
pushl
call
call
mov
mov
mov
mov
or
movzbl
cmp
je
pushl
mov
xor
push
pushl
mov
or
mov
imul
push
call
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
imul
movzbl
cmp
jge
mov
xor
mov
imul
push
mov
or
xor
push
mov
xor
imul
push
mov
and
xor
push
call
mov
mov
cmp
jge
mov
and
push
mov
or
and
push
call
cmp
jle
mov
or
mov
sub
push
call
mov
mov
mov
test
je
movzbl
push
movzbl
push
call
movzbl
or
sub
mov
mov
test
je
call
cmpw
jne
mov
xor
or
push
movzbl
push
mov
movzbl
add
push
call
movzbl
shr
movzbl
cmpb
jne
mov
or
push
mov
sub
push
movzbl
or
movzbl
imul
push
call
cmp
jle
movzwl
jmp
mov
add
mov
cmp
jge
movzwl
xor
movzbl
imul
push
call
cmpw
jne
movzbl
push
push
movzbl
push
call
mov
mov
shl
mov
cmpb
jge
movzbl
and
xor
push
movzwl
and
add
push
call
mov
or
mov
add
mov
cmpb
jge
movzwl
movzbl
xor
add
push
push
mov
sub
push
mov
sub
push
call
movzwl
sub
mov
cmp
jne
push
mov
imul
push
movzwl
and
push
movzwl
push
call
cmpw
jge
movzwl
push
push
call
cmp
jne
mov
jmp
movzwl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
and
xor
movzbl
cmp
je
push
mov
sub
push
mov
and
push
call
mov
imul
mov
add
movzwl
cmp
jge
call
mov
cmp
jle
mov
xor
push
mov
add
sub
push
push
call
mov
mov
cmp
jle
mov
or
imul
push
mov
or
push
mov
sub
push
call
cmpb
jle
mov
xor
push
movzbl
xor
add
push
push
call
movzbl
mov
cmp
je
push
push
push
mov
xor
sub
push
call
mov
and
mov
cmpb
je
movzbl
or
xor
push
mov
movzbl
and
push
push
push
call
cmpb
jle
movzbl
mov
jmp
movzbl
xor
or
mov
cmp
jge
call
cmpb
jle
mov
mov
jmp
mov
shl
mov
cmp
jle
mov
or
and
push
mov
movzwl
add
push
mov
imul
push
call
mov
and
imul
mov
cmp
jne
call
mov
shr
movzwl
cmpb
jge
movzwl
push
movzbl
push
movzbl
push
movzbl
imul
push
call
cmpb
jne
movzbl
push
call
mov
movzbl
add
mov
cmp
jne
call
movzbl
shl
movzbl
cmp
jne
movzbl
push
call
mov
add
mov
cmpb
jne
mov
and
movzwl
xor
push
call
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
movzbl
cmp
jge
push
mov
or
push
call
cmp
jle
push
mov
imul
push
mov
imul
push
mov
add
push
call
cmp
jle
mov
mov
jmp
mov
shr
movzbl
cmp
jle
mov
sub
add
push
push
push
call
mov
or
xor
movzwl
mov
sub
sub
mov
cmpl
jle
mov
sub
sub
push
mov
and
push
pushl
mov
and
push
call
cmpl
je
mov
add
push
call
mov
shl
movzwl
cmp
jge
mov
mov
jmp
mov
shr
mov
cmp
jle
call
cmpl
je
mov
and
push
mov
imul
imul
push
mov
imul
add
push
mov
or
and
push
call
mov
and
mov
cmp
jle
pushl
mov
sub
add
push
mov
sub
add
push
call
mov
sub
movzwl
cmpl
je
call
mov
xor
mov
cmpl
jge
mov
xor
movzbl
or
push
mov
or
mov
imul
push
mov
add
push
call
mov
add
movzbl
cmp
jge
push
movzbl
push
call
cmpl
jge
call
mov
shr
mov
cmp
jle
mov
or
push
mov
add
push
mov
add
push
pushl
call
cmp
jne
push
pushl
push
push
call
mov
mov
or
add
mov
cmpl
jge
mov
or
or
push
pushl
call
mov
sub
mov
cmp
jne
mov
xor
or
push
call
mov
mov
cmpl
jne
mov
sub
add
push
push
mov
sub
push
mov
movzbl
xor
and
push
call
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
mov
cmp
jge
mov
add
push
push
mov
xor
mov
sub
push
call
mov
shl
mov
cmp
jge
mov
or
add
push
mov
sub
push
push
mov
or
imul
push
call
mov
imul
mov
cmp
jge
mov
and
and
push
push
mov
or
mov
imul
push
push
call
mov
or
sub
mov
cmp
jge
mov
jmp
mov
add
mov
cmpw
jle
push
mov
add
push
mov
imul
push
call
cmp
je
mov
jmp
mov
xor
sub
mov
cmpw
jne
movzwl
xor
or
push
call
mov
mov
cmpw
je
movzwl
add
add
push
call
mov
xor
movzbl
imul
mov
mov
sub
mov
cmp
jne
call
cmpl
jge
mov
jmp
cmpl
jne
push
push
call
movzwl
movzbl
or
mov
cmp
jle
mov
and
mov
add
push
movzwl
imul
push
movzbl
push
pushl
call
mov
and
mov
cmpb
jle
movzwl
push
call
mov
shl
mov
movzwl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
or
cmp
je
mov
xor
imul
push
call
mov
shl
mov
cmp
jle
mov
xor
imul
push
call
mov
shl
mov
cmp
je
call
mov
shl
movzbl
cmp
jge
push
mov
and
push
push
mov
sub
push
call
mov
and
imul
cmp
jne
call
mov
mov
xor
or
mov
cmp
jne
push
call
cmpl
jle
mov
jmp
mov
add
mov
cmp
jle
push
mov
imul
push
mov
sub
push
pushl
call
mov
movzbl
cmp
je
call
mov
test
jne
push
call
mov
mov
shr
mov
mov
test
je
mov
imul
mov
sub
push
mov
and
xor
push
mov
imul
push
call
mov
shr
mov
mov
test
je
mov
imul
sub
push
push
mov
imul
push
call
mov
shl
mov
cmpl
jge
mov
xor
and
push
push
mov
imul
push
mov
and
mov
add
push
call
mov
xor
xor
mov
cmp
jne
mov
add
push
call
mov
pop
pop
pop
mov
pop
ret
mov
pushl
call
push
push
call
pop
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
movzwl
cmp
jne
mov
xor
and
push
call
mov
imul
movzwl
cmp
jge
mov
add
push
call
cmp
jle
push
call
mov
xor
mov
mov
test
je
mov
imul
imul
push
mov
and
push
mov
or
movzwl
sub
push
movzwl
imul
movzwl
sub
push
call
cmp
jle
movzwl
sub
push
push
mov
xor
imul
push
push
call
mov
shl
mov
cmp
jge
pushl
call
mov
or
add
mov
xor
mov
mov
xor
or
movzwl
cmpw
jle
mov
imul
push
mov
sub
push
mov
and
xor
push
call
mov
and
sub
mov
xor
mov
mov
shr
mov
cmpw
je
mov
and
push
mov
imul
sub
push
call
mov
mov
mov
mov
or
imul
mov
cmp
jge
call
movzwl
imul
add
mov
mov
shl
mov
cmpw
je
pushl
call
mov
movzwl
imul
cmp
je
movw
movzwl
sub
mov
cmpb
jle
movzwl
push
call
mov
or
movzbl
imul
mov
cmpw
jne
movzbl
or
imul
push
mov
xor
movzbl
imul
push
call
mov
or
mov
imul
mov
cmpl
jge
movzwl
sub
push
call
cmpb
jge
call
mov
mov
cmpb
jle
movzwl
add
push
call
movzwl
xor
add
mov
movzbl
mov
mov
mov
add
mov
cmpb
jge
movzbl
push
movzbl
xor
movzbl
and
push
movzbl
and
movzbl
add
push
movzbl
movzbl
or
push
call
cmpb
jge
mov
mov
jmp
call
mov
add
mov
mov
movzbl
sub
mov
cmpw
jne
call
movzbl
movzbl
or
sub
mov
add
mov
mov
xor
movzbl
xor
mov
cmpw
jle
movzwl
push
call
call
mov
movzbl
add
sub
mov
sub
mov
mov
sub
mov
cmpb
jge
movzbl
xor
push
call
call
jmp
mov
movzwl
mov
add
sub
mov
xor
mov
movzwl
sub
mov
cmp
jge
movzwl
push
movzwl
push
movzwl
imul
movzwl
sub
push
call
mov
mov
mov
movzbl
mov
cmp
jge
mov
and
push
movzbl
movzwl
or
push
movzbl
push
call
mov
test
je
movzwl
add
movzwl
add
push
mov
xor
push
mov
or
movzwl
imul
push
movzwl
and
push
call
cmpw
je
mov
mov
jmp
call
movzwl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
movzbl
cmp
jge
mov
and
mov
add
push
mov
imul
sub
push
call
mov
add
movzbl
cmp
je
mov
or
add
push
mov
and
push
call
cmp
je
push
call
cmp
jge
mov
mov
jmp
mov
shl
mov
cmpl
jge
mov
imul
push
pushl
call
mov
add
movzbl
cmp
jne
mov
xor
push
mov
or
push
push
call
mov
imul
movzbl
cmpl
jle
call
mov
shr
mov
cmpl
jle
call
mov
mov
cmp
jge
pushl
mov
add
push
mov
add
push
mov
and
mov
add
push
call
mov
test
je
mov
imul
push
mov
add
sub
push
mov
xor
push
call
cmpl
je
mov
mov
jmp
mov
shr
movzbl
cmpl
jge
mov
imul
push
mov
xor
mov
sub
push
call
cmp
jge
mov
mov
jmp
mov
shl
mov
cmp
jle
pushl
call
mov
shr
movzbl
cmpl
jle
call
mov
shl
movzbl
cmp
jne
call
mov
test
jne
call
movzbl
mov
mov
cmpl
jge
call
mov
mov
cmpl
jne
mov
and
push
mov
and
xor
push
push
pushl
call
mov
shl
mov
cmp
jne
push
mov
imul
add
push
movzbl
push
pushl
call
mov
movzbl
cmpl
jne
movzbl
push
pushl
call
movzbl
mov
mov
cmpl
jge
call
cmpl
je
movzbl
imul
movzbl
add
push
mov
sub
push
mov
or
push
pushl
call
mov
add
movzbl
cmpl
jle
movzbl
or
imul
push
pushl
mov
xor
mov
add
push
push
call
cmpl
jne
mov
xor
push
movzbl
or
push
mov
and
push
call
mov
sub
sub
movzbl
cmpl
jle
mov
and
push
pushl
mov
movzbl
or
push
call
mov
or
mov
sub
movzbl
mov
shl
mov
cmpb
jne
mov
mov
jmp
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
cmp
jne
mov
and
push
mov
xor
add
push
mov
add
push
call
mov
movzwl
cmp
jge
mov
xor
mov
add
push
push
mov
and
or
push
call
test
je
mov
or
and
push
push
mov
and
push
call
cmp
jne
mov
jmp
mov
xor
sub
mov
cmpb
jne
call
mov
movzbl
or
imul
movzwl
cmpb
jle
mov
movzbl
and
push
push
call
cmp
jne
mov
mov
jmp
mov
mov
cmpb
jne
movzbl
xor
movzbl
add
push
movzbl
or
push
call
movzbl
and
mov
cmpb
je
movzbl
push
movzbl
imul
push
call
mov
xor
mov
cmp
jle
mov
imul
push
call
cmp
jle
mov
jmp
movzbl
xor
mov
cmpb
jne
movzbl
mov
jmp
mov
mov
cmpb
jle
mov
or
imul
push
movzbl
push
call
test
je
movzbl
and
push
push
push
call
movzbl
shl
mov
cmp
jge
movzbl
push
mov
and
push
call
cmp
jne
call
mov
test
jne
movzbl
push
call
mov
mov
shr
mov
test
je
mov
sub
push
movzbl
push
call
mov
xor
xor
mov
cmp
jge
movzbl
and
mov
imul
push
push
call
cmp
jge
movzbl
mov
jmp
mov
or
movzbl
add
mov
cmpb
jle
movzbl
or
mov
imul
push
movzbl
imul
movzbl
add
push
movzbl
push
call
mov
mov
pop
pop
pop
mov
pop
ret
jmp
jmp
jmp
jmp
push
mov
sub
push
push
push
mov
mov
sub
mov
cmp
jne
call
mov
or
xor
movzwl
cmp
jle
call
mov
or
mov
add
mov
cmp
jne
mov
or
push
call
cmp
jne
push
movzbl
push
movzbl
push
call
mov
mov
imul
imul
movzwl
test
je
push
call
mov
and
or
mov
cmp
jle
push
movzbl
or
mov
sub
push
mov
xor
push
mov
or
push
call
mov
add
mov
cmp
jge
movzbl
push
mov
movzbl
imul
push
mov
imul
push
call
cmp
jne
mov
and
push
push
movzbl
or
push
call
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
mov
cmp
jne
mov
imul
imul
push
mov
or
push
push
push
call
mov
shr
movzwl
mov
test
je
mov
xor
push
mov
imul
push
call
mov
shl
mov
cmp
jne
movzbl
push
call
movzbl
shl
mov
cmp
jge
movzbl
or
or
push
push
movzbl
push
call
mov
mov
cmp
jne
mov
and
push
call
movzwl
sub
mov
cmp
jne
mov
add
push
push
call
mov
xor
mov
cmp
jle
push
movzbl
add
movzbl
sub
push
mov
or
and
push
call
movzwl
sub
mov
cmpw
jle
movzbl
and
movzbl
add
push
call
cmpb
jne
mov
xor
movzwl
sub
push
mov
xor
push
call
mov
sub
movzwl
cmpb
jle
mov
movzbl
xor
push
movzbl
push
movzwl
and
push
call
mov
sub
mov
cmp
jle
mov
and
or
push
movzbl
push
mov
xor
movzwl
and
push
call
cmp
jge
mov
mov
jmp
mov
shr
mov
cmpb
jne
call
cmpb
jne
push
call
movzwl
mov
cmp
jne
mov
and
movzbl
add
push
movzwl
or
movzwl
and
push
movzbl
sub
sub
push
call
cmpb
jle
mov
jmp
movzbl
or
sub
mov
cmp
jne
movzwl
or
push
push
movzbl
imul
add
push
movzwl
push
call
mov
xor
movzwl
cmp
jle
mov
xor
movzbl
add
push
mov
or
and
push
call
mov
xor
mov
sub
mov
cmpw
jle
movzwl
push
movzwl
and
push
mov
xor
sub
push
call
movzbl
shr
movzwl
cmp
jne
movzwl
push
mov
add
push
push
call
cmpb
jge
mov
movzbl
or
push
call
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
xor
mov
cmp
jle
mov
or
sub
push
call
cmp
jle
mov
and
imul
push
call
mov
shr
mov
cmp
je
call
cmpb
je
movzbl
jmp
mov
and
sub
mov
cmpb
jge
mov
add
push
push
movzbl
or
imul
push
movzbl
push
call
movzbl
mov
cmp
je
movzbl
movzbl
sub
movzbl
add
push
movzbl
xor
mov
add
push
push
movzbl
push
call
mov
shl
mov
cmp
je
movzbl
and
sub
push
movzbl
add
add
push
mov
movzwl
or
push
mov
and
movzbl
sub
push
call
mov
cmp
jge
push
movzwl
push
call
mov
cmp
je
call
cmp
je
movzwl
mov
jmp
movzbl
shl
mov
cmp
jne
call
cmp
jle
movzbl
movzbl
xor
push
mov
sub
push
movzwl
xor
movzwl
sub
push
call
cmp
jle
mov
jmp
mov
movzbl
and
mov
imul
mov
cmp
jge
mov
movzwl
sub
push
movzwl
movzbl
or
mov
add
push
call
movzbl
shr
mov
test
je
movzbl
or
movzwl
imul
push
movzbl
movzbl
xor
push
call
cmp
jne
movzbl
push
push
movzbl
push
movzbl
push
call
mov
movzbl
sub
mov
mov
test
je
mov
xor
push
movzwl
imul
movzwl
imul
push
movzwl
imul
movzbl
add
push
call
mov
xor
movzbl
imul
mov
cmp
jge
movzbl
and
or
push
movzbl
push
call
movzwl
mov
cmpb
jle
movzwl
or
sub
push
call
mov
imul
mov
mov
test
je
mov
movzbl
imul
push
mov
imul
movzbl
add
push
mov
sub
sub
push
push
call
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
sub
movzbl
cmp
je
mov
xor
push
call
cmp
je
mov
jmp
mov
movzwl
cmp
jne
mov
and
mov
imul
push
mov
or
push
mov
and
or
push
call
mov
shr
movzwl
cmp
jne
call
cmp
jne
mov
and
sub
push
push
mov
xor
sub
push
mov
xor
imul
push
call
mov
movzwl
cmp
je
mov
sub
push
mov
xor
mov
imul
push
mov
imul
push
call
cmp
jle
push
mov
or
push
call
mov
sub
movzwl
cmp
jne
mov
xor
push
mov
and
mov
imul
push
push
call
mov
imul
mov
mov
add
movzwl
cmp
jle
mov
xor
sub
push
call
cmp
jne
call
movzwl
movzwl
shl
movzbl
cmpw
je
call
mov
imul
sub
movzwl
cmpw
jge
mov
imul
movzwl
add
push
mov
and
sub
push
call
movzwl
xor
movzwl
sub
mov
cmpw
je
movzwl
or
push
movzwl
and
sub
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzwl
mov
mov
cmp
jge
mov
or
push
mov
imul
push
call
mov
movzwl
cmp
jne
mov
xor
sub
push
mov
or
imul
push
mov
xor
mov
add
push
push
call
mov
xor
sub
mov
cmp
jge
push
mov
xor
mov
imul
push
push
push
call
movzbl
imul
sub
mov
cmp
jge
mov
imul
push
movzbl
push
call
mov
movzbl
or
movzbl
add
mov
cmp
jge
mov
add
push
movzbl
push
movzbl
push
call
cmp
jne
push
call
movzwl
mov
add
mov
cmp
jne
movzbl
or
movzbl
or
push
movzbl
push
call
mov
or
movzwl
cmpb
je
mov
add
push
push
mov
movzbl
or
xor
push
call
mov
or
mov
cmpb
jne
movzbl
imul
push
call
cmpb
jne
movzbl
push
call
mov
mov
mov
cmp
jge
movzbl
movzbl
xor
movzbl
sub
push
movzbl
imul
push
call
mov
sub
mov
cmp
jne
movzbl
or
mov
imul
push
push
push
push
call
mov
shl
mov
cmpb
jne
movzbl
push
mov
or
push
mov
or
imul
push
movzbl
movzbl
imul
sub
push
call
cmpb
jge
call
mov
mov
cmpb
jne
push
push
call
mov
mov
cmpb
jge
push
mov
add
push
movzbl
add
push
mov
movzbl
or
push
call
cmpb
jle
mov
mov
jmp
movzbl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
xor
add
movzwl
cmp
je
mov
jmp
mov
mov
cmp
jne
mov
xor
mov
imul
push
push
mov
add
add
push
mov
sub
push
call
cmp
jne
mov
jmp
mov
shr
movzwl
cmp
jne
push
push
push
mov
xor
or
push
call
mov
imul
mov
sub
mov
cmp
jge
mov
sub
movzwl
sub
push
mov
or
add
push
mov
or
push
call
mov
shl
mov
mov
shr
mov
cmpw
jne
mov
movzwl
add
sub
push
call
cmpw
jge
push
mov
imul
push
push
call
cmp
jge
movzwl
jmp
mov
shr
mov
cmpl
jne
movzwl
push
push
push
movzwl
push
call
movzwl
movzwl
sub
mov
cmp
jle
call
mov
xor
mov
mov
add
add
movzwl
cmpw
je
movzwl
and
push
call
cmpl
jle
call
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
mov
cmp
jne
mov
xor
mov
sub
push
push
mov
add
push
call
test
je
mov
and
push
mov
add
push
push
call
mov
or
mov
add
mov
cmp
jne
mov
xor
mov
add
push
call
cmp
jle
mov
jmp
mov
or
add
mov
cmp
jle
mov
sub
push
push
mov
movzbl
and
push
call
test
je
mov
jmp
mov
mov
mov
test
je
call
cmp
jle
mov
and
movzbl
add
push
mov
imul
push
call
mov
cmp
jle
movzbl
push
call
mov
mov
test
je
mov
imul
push
mov
imul
movzbl
imul
push
mov
or
push
mov
imul
movzbl
sub
push
call
cmpb
jle
mov
xor
xor
push
call
mov
add
mov
cmpl
jge
mov
imul
mov
add
push
movzbl
and
push
call
mov
xor
mov
mov
test
je
mov
or
push
mov
sub
push
mov
xor
push
call
test
jne
movzbl
push
pushl
call
mov
mov
mov
cmpb
jle
pushl
mov
add
push
call
mov
shr
mov
cmpb
jge
mov
imul
push
mov
sub
add
push
movzbl
or
movzbl
add
push
mov
and
xor
push
call
cmpl
jge
mov
mov
jmp
mov
and
mov
add
mov
cmpl
je
mov
add
push
mov
and
push
call
mov
or
mov
imul
mov
cmpl
jge
mov
imul
push
movzbl
add
push
movzbl
push
mov
and
sub
push
call
cmpb
jle
mov
add
add
push
call
mov
mov
cmpl
jne
movzbl
push
mov
and
push
mov
sub
add
push
mov
and
push
call
cmpl
jge
movzbl
push
pushl
call
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
and
cmp
je
mov
imul
mov
sub
push
call
mov
xor
or
mov
mov
imul
add
mov
cmp
jne
mov
or
push
mov
or
push
call
mov
add
mov
cmp
jle
mov
and
imul
push
mov
imul
push
mov
xor
mov
add
push
mov
sub
push
call
mov
shr
mov
cmp
je
call
cmp
jle
mov
add
push
movzwl
and
push
mov
and
mov
sub
push
mov
imul
mov
sub
push
call
cmp
jne
movzwl
push
push
call
mov
mov
movzwl
add
mov
cmp
jle
push
call
cmp
jge
push
mov
imul
movzwl
add
push
mov
imul
push
mov
and
movzwl
add
push
call
mov
movzwl
add
mov
cmp
jge
call
cmpw
jge
movzwl
mov
jmp
mov
mov
cmpw
jle
movzwl
or
movzwl
imul
push
movzwl
or
push
mov
xor
add
push
call
cmp
jne
push
push
call
mov
mov
cmpw
jne
mov
movzwl
add
push
call
movzwl
and
mov
cmp
jge
push
movzwl
xor
and
push
mov
sub
push
mov
add
push
call
movzwl
add
mov
cmp
jne
movzwl
or
push
mov
movzwl
imul
push
call
mov
movzbl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shl
mov
cmp
jne
push
mov
or
push
call
mov
movzwl
cmp
jge
call
mov
or
imul
mov
cmp
je
movzwl
add
push
mov
xor
mov
imul
push
movzwl
push
push
call
cmp
jge
mov
mov
jmp
movl
mov
or
imul
mov
cmp
je
movzwl
push
call
call
movzwl
xor
add
mov
xor
mov
mov
sub
mov
mov
test
je
movzwl
and
push
call
call
mov
mov
mov
add
add
mov
movzwl
add
mov
call
mov
imul
mov
sub
mov
movzwl
sub
mov
mov
test
je
movzwl
push
call
call
movzwl
imul
mov
add
movzwl
sub
mov
mov
cmpw
jge
movzwl
push
call
call
mov
sub
mov
movzwl
xor
mov
cmp
jle
mov
or
push
movzwl
add
push
mov
and
imul
push
call
cmpw
je
mov
imul
imul
push
mov
movzwl
and
push
push
push
call
movzwl
xor
add
mov
sub
mov
movzwl
sub
mov
cmp
jne
mov
movzwl
xor
add
push
push
mov
xor
push
call
call
movzwl
and
mov
movzwl
movzwl
movzwl
or
sub
cmp
je
movl
mov
add
mov
cmpw
jne
pushl
movzwl
push
movzwl
push
movzwl
or
push
call
cmpw
jle
movzwl
mov
jmp
mov
imul
mov
cmpw
jge
pushl
mov
movzwl
xor
xor
push
movzbl
movzwl
xor
push
pushl
call
movzwl
and
mov
imul
mov
cmpw
je
movzbl
xor
movzwl
add
push
movzwl
sub
movzwl
sub
push
movzbl
movzwl
add
push
call
movzwl
mov
cmpl
jle
movzwl
push
call
cmpw
jne
movzwl
jmp
movzbl
movzwl
sub
add
mov
sub
mov
jmp
mov
movzwl
sub
add
mov
add
mov
mov
mov
cmp
jge
movzwl
push
mov
xor
push
mov
xor
movzwl
add
push
push
call
movzwl
add
sub
mov
mov
mov
add
movzwl
and
sub
mov
mov
shr
mov
cmpw
jge
movzwl
xor
movzwl
add
push
movzwl
movzwl
or
push
movzwl
push
call
mov
test
je
mov
mov
jmp
call
movzwl
xor
add
mov
mov
mov
add
mov
imul
sub
mov
mov
mov
cmpw
jle
movzwl
or
mov
add
push
call
call
mov
movzwl
sub
add
mov
mov
movzwl
movzwl
sub
add
mov
mov
movzwl
cmpw
jge
mov
movzwl
add
push
movzwl
push
call
movzwl
movzwl
or
add
mov
mov
mov
add
mov
add
sub
mov
mov
mov
cmpw
jne
mov
xor
movzwl
add
push
movzwl
xor
mov
add
push
call
mov
movzwl
or
cmp
je
mov
mov
movzbl
and
xor
mov
cmpb
jne
call
movzbl
shl
mov
cmpb
jle
movzbl
movzbl
xor
push
call
cmpb
jne
movzwl
mov
jmp
movzwl
shr
mov
mov
test
je
movzwl
imul
movzwl
add
push
call
movzwl
movzbl
or
mov
mov
add
movzwl
movzbl
sub
sub
mov
movzbl
imul
add
mov
cmpb
jge
movzbl
imul
movzwl
add
push
movzbl
movzbl
imul
push
movzbl
push
call
movl
movzbl
shr
mov
cmpw
jne
mov
xor
movzbl
or
push
movzbl
xor
movzwl
imul
push
mov
sub
movzbl
sub
push
movzbl
movzwl
or
and
push
call
call
mov
movzbl
movzbl
movzwl
and
cmp
je
movw
movzwl
add
add
mov
cmpw
jne
mov
movzwl
and
push
call
mov
imul
mov
cmpb
jne
movzbl
or
movzwl
add
push
movzwl
or
push
movzwl
sub
push
call
mov
shl
mov
shr
or
mov
mov
add
mov
cmpl
jle
movzbl
and
and
push
pushl
movzbl
or
movzbl
add
push
mov
sub
push
call
mov
movzwl
xor
add
mov
movzbl
xor
mov
add
mov
movzwl
add
mov
cmpw
jle
movzwl
push
call
movzwl
movzbl
add
add
mov
add
mov
mov
shr
mov
cmpl
je
movzwl
imul
movzbl
add
push
pushl
movzwl
imul
push
movzbl
and
imul
push
call
jmp
movzbl
and
imul
mov
mov
test
je
call
cmpw
jge
movzbl
movzbl
and
sub
push
movzwl
movzbl
add
push
call
mov
cmp
jne
mov
mov
mov
movzwl
and
or
mov
cmpw
jne
call
movzwl
or
mov
mov
test
je
movzwl
push
call
movzwl
imul
mov
add
mov
cmpw
jle
movzwl
and
push
call
movzbl
movzwl
xor
mov
cmpb
jge
movzwl
and
push
call
mov
mov
sub
movzbl
sub
sub
add
mov
movzwl
or
and
mov
cmpl
jne
movzwl
or
push
movzwl
sub
add
push
movzbl
xor
movzbl
add
push
call
mov
test
je
movzwl
mov
jmp
mov
movzwl
or
sub
mov
mov
movzwl
movzbl
xor
sub
mov
movzwl
xor
add
mov
mov
test
je
movzwl
movzwl
xor
movzbl
imul
push
movzbl
push
pushl
movzbl
push
call
call
mov
add
movzwl
add
add
add
mov
mov
sub
mov
cmpw
jge
movzwl
and
movzwl
xor
push
call
mov
add
sub
mov
sub
mov
movzwl
mov
mov
or
mov
imul
mov
mov
test
je
mov
imul
push
mov
or
xor
push
movzwl
push
movzbl
push
call
cmpl
jle
movzwl
mov
jmp
movzwl
movzbl
add
sub
mov
mov
mov
add
movzbl
movzwl
xor
sub
add
mov
mov
sub
mov
cmpl
je
mov
movzbl
and
push
movzbl
or
movzbl
and
push
movzbl
push
call
cmpb
jle
movzbl
mov
jmp
movzwl
movzbl
sub
add
mov
sub
mov
mov
mov
add
mov
mov
movzbl
imul
mov
mov
test
je
mov
movzbl
or
push
movzwl
imul
push
movzwl
or
movzwl
xor
push
call
movzbl
xor
sub
mov
xor
mov
mov
shl
mov
cmpw
je
mov
movzwl
imul
add
push
mov
or
movzbl
imul
push
movzbl
push
call
mov
sub
sub
push
mov
movzbl
or
add
push
push
movzbl
add
add
push
mov
movzwl
sub
add
push
call
mov
mov
imul
mov
cmpb
jle
call
call
movzwl
imul
mov
sub
mov
mov
movzwl
add
mov
cmpl
jle
mov
xor
push
call
call
mov
add
mov
mov
mov
cmpl
jge
movzbl
push
mov
and
push
call
call
mov
movzwl
sub
sub
mov
sub
mov
mov
xor
mov
cmpb
jle
pushl
call
call
jmp
mov
sub
sub
movzwl
cmpw
jle
movzwl
or
movzwl
sub
push
mov
movzwl
xor
push
mov
movzwl
and
push
call
call
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
and
movzbl
cmp
jge
mov
or
push
call
mov
shl
movzbl
cmp
jge
mov
xor
xor
push
mov
or
push
push
call
mov
test
jne
push
push
call
movzbl
mov
cmp
jge
mov
imul
sub
push
mov
or
push
mov
add
push
mov
add
push
call
mov
add
mov
cmp
jne
push
push
mov
xor
push
mov
and
push
call
cmp
je
push
mov
and
and
push
call
mov
add
add
mov
cmp
je
mov
movzwl
imul
push
call
cmp
jne
push
call
movzbl
mov
imul
movzbl
cmp
jge
mov
xor
push
call
cmpw
je
mov
or
or
push
mov
movzwl
xor
sub
push
call
cmp
jne
mov
jmp
mov
imul
sub
mov
cmpw
je
mov
or
push
call
movzwl
movzbl
cmp
jne
mov
or
mov
add
push
push
mov
xor
push
call
cmp
jge
mov
mov
jmp
movzwl
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
movzbl
mov
imul
add
movzbl
cmp
jge
mov
and
push
mov
xor
mov
add
push
mov
xor
push
mov
sub
push
call
mov
imul
mov
add
mov
cmp
jle
mov
sub
sub
push
call
mov
or
sub
movzbl
cmp
jne
mov
imul
push
push
mov
xor
push
call
mov
imul
mov
cmp
jge
call
cmp
jle
push
mov
sub
push
mov
and
or
push
call
cmp
jne
push
push
push
call
movzbl
mov
sub
mov
cmp
jge
push
mov
imul
push
movzwl
and
sub
push
call
cmpw
jge
call
mov
imul
mov
movzwl
mov
cmpw
jle
movzbl
and
movzbl
sub
push
mov
xor
add
push
mov
movzwl
add
push
call
mov
mov
cmp
jge
mov
and
add
push
movzbl
movzwl
imul
push
mov
movzbl
and
push
movzbl
xor
push
call
cmp
jge
mov
jmp
movzwl
and
mov
cmpw
jne
call
movzwl
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
shr
movzwl
cmp
jge
push
mov
add
add
push
call
mov
movzwl
cmp
jge
push
mov
and
or
push
call
mov
shr
mov
cmp
jge
mov
or
movzbl
sub
push
movzbl
or
mov
imul
push
mov
and
mov
imul
push
call
cmp
jge
mov
add
push
push
mov
and
movzbl
and
push
call
mov
xor
mov
cmp
jge
call
movzbl
sub
mov
cmp
jge
movzwl
push
call
mov
mov
cmp
je
movzwl
and
push
movzbl
push
mov
or
xor
push
mov
or
push
call
movzwl
shr
mov
cmp
jle
mov
xor
imul
push
mov
xor
push
movzbl
push
mov
xor
movzbl
or
push
call
mov
shr
mov
cmp
jne
mov
imul
push
call
cmp
jge
mov
jmp
mov
shr
mov
cmp
je
movzbl
and
push
movzwl
and
push
call
cmp
jne
push
push
push
call
movzwl
mov
mov
cmpb
je
call
mov
mov
cmpw
je
call
mov
mov
cmp
jge
call
cmpb
jle
call
mov
and
mov
mov
mov
cmpb
jle
movzwl
or
movzbl
imul
push
mov
xor
push
call
mov
mov
pop
pop
pop
mov
pop
ret
cmp
orl
jge
sbb
mov
inc
popa
adc
mov
xor
pop
or
out
inc
fildll
scas
sub
mov
inc
sahf
jg
cltd
sbb
jae
or
sbb
.byte
stos
inc
pop
.byte
cld
popl
add
nop
add
and
add
ds
add
push
nop
add
xchg
add
jb
add
xchg
add
sahf
nop
add
test
add
rclb
add
nop
add
out
nop
add
add
add
push
xchg
add
xor
add
dec
xchg
add
push
xchg
add
bound
add
jbe
add
mov
add
test
add
mov
add
les
add
in
xchg
add
notb
add
adc
add
es
add
cmp
add
pop
xchg
add
outsb
xchg
add
adcb
add
xchg
add
enter
ficoms
add
cld
xchg
add
adc
add
xor
add
push
xchg
add
push
xchg
add
mov
add
mov
add
ret
add
xchg
add
call
xchg
add
or
add
xchg
add
inc
xchg
add
dec
xchg
add
pop
xchg
add
xchg
add
je
add
test
add
xchg
add
mov
xchg
add
ficoms
add
add
sub
add
dec
xchg
add
bound
add
jle
add
mov
add
scas
xchg
add
mov
xchg
add
ficoml
add
xchg
add
adc
add
xor
add
dec
xchg
add
push
xchg
add
nop
xchg
add
mov
xchg
add
xchg
add
fcoms
add
hlt
xchg
add
add
add
and
add
cmp
add
add
add
pop
xchg
add
push
xchg
add
nop
xchg
add
lcall
add
xchg
add
ficoms
add
or
add
xor
add
dec
cwtl
add
push
cwtl
add
fs
add
jbe
add
nop
cwtl
add
sahf
cwtl
add
lods
cwtl
add
mov
cwtl
add
loop
add
negb
add
and
add
dec
cltd
add
pop
cltd
add
push
add
jl
add
xchg
cltd
add
test
add
mov
cltd
add
in
cltd
add
cld
cltd
add
push
lcall
sub
add
inc
lcall
push
lcall
lcall
add
lcall
in
lcall
push
fwait
add
push
fwait
add
xor
add
pop
fwait
add
data16
add
jl
add
mov
add
test
add
ret
add
fwait
add
out
add
cld
fwait
add
push
pushf
add
push
pushf
add
xor
add
add
pop
pushf
add
insb
pushf
add
jle
add
add
add
movsb
pushf
add
scas
pushf
add
mov
pushf
add
ficompl
add
pushf
add
clc
pushf
add
add
add
sbb
add
xor
add
ds
add
inc
popf
add
push
popf
add
pusha
popf
add
outsb
popf
add
jp
add
mov
add
test
add
mov
add
les
add
ficompl
add
hlt
popf
add
cld
popf
add
or
add
sbb
add
es
add
xor
add
inc
sahf
add
push
sahf
add
pusha
sahf
add
push
add
jo
add
js
add
test
add
sahf
sahf
add
cmpsb
sahf
add
mov
add
mov
sahf
add
ficompl
add
hlt
sahf
add
sahf
add
or
add
and
add
cmp
add
push
lahf
add
pop
lahf
add
data16
add
jo
add
jl
add
test
add
movsb
lahf
add
lods
lahf
add
rcrb
add
lahf
add
ficomps
add
cli
lahf
add
push
mov
add
sbb
add
sub
add
inc
mov
add
pop
mov
add
insb
mov
add
jle
add
mov
add
cmpsb
mov
add
enter
aam
add
loopne
add
in
mov
add
mov
add
sbb
add
xor
add
dec
mov
add
pusha
mov
add
js
add
andb
add
add
stos
mov
add
mov
add
cmp
inc
add
inc
add
fisubrl
idivb
popa
scas
stc
xchg
inc
pop
decb
mov
xchg
loop
inc
pop
ficompl
popa
scas
addb
add
stos
mov
mov
insb
rcrl
fidivrs
or
inc
sbb
jb
lock
int3
or
mov
dec
sub
int3
test
adc
inc
cmp
inc
cmp
jl
aas
xor
inc
sbb
loop
je
sahf
xor
je
dec
mov
lock
inc
mov
pop
je
aas
jno
loopne
push
mov
cmpsl
inc
or
ljmp
ds
sbb
shl
rorb
ja
std
bound
outsl
or
shll
movsl
or
xor
pop
jne
sub
out
subl
jg
in
scas
ljmp
scas
ljmp
push
cli
jb
mov
cmpl
mov
push
inc
cmpsl
lcall
add
push
mov
push
add
jb
sti
xchg
dec
lds
mov
push
mov
nop
rorl
repnz
ret
sarb
or
push
or
cld
fucomi
adc
xchg
push
in
lahf
and
mov
mov
jge
pop
pop
sub
push
mov
sti
xchg
xor
jae
subb
fisubrl
popa
rcrl
popf
cmpsl
jno
adc
xchg
pop
ja
mov
push
std
mov
mov
push
lcall
add
inc
mov
jl
out
pop
stos
popa
fstps
mov
xor
pop
dec
fidivs
sub
push
mov
aad
cmp
aad
mov
clc
roll
jecxz
add
cmp
out
movl
rorb
mov
scas
ljmp
mov
ret
cltd
pop
stos
popa
xchg
mov
lods
stos
cmpsb
stos
subb
fisttpl
inc
test
jecxz
sub
adc
in
fbld
outsb
push
mov
mov
test
mov
incl
andb
mov
daa
nopl
and
mov
lcall
push
lret
jge
jle
lahf
xchg
scas
daa
xor
fcmove
mov
gs
sbb
pop
add
xchg
mov
hlt
and
xchg
jb
and
xchg
or
jmp
xchg
fisttpll
imul
lock
xchg
mov
imul
inc
inc
dec
fidivrs
imul
and
testb
jno
ja
mov
test
mov
ficoml
and
orb
mov
sahf
rcr
mov
push
mov
sub
and
arpl
lods
loopne
ds
or
das
cmpsb
cmp
xchg
ret
cs
ljmp
sub
cmpsl
jle
push
xchg
lret
jle
mov
sbb
sub
mov
sub
das
add
or
lods
xchg
in
push
or
dec
dec
sarb
mov
sub
dec
jge
mov
mov
jg
push
testb
dec
jge
lds
add
add
sahf
cmp
ja
push
mov
jmp
cmp
ljmp
push
push
gs
or
int
leave
jl
rol
ljmp
push
jg
push
mov
pop
adc
scas
loope
xchg
push
adc
mov
test
ljmp
and
lcall
mov
fimull
pop
dec
das
jnp
xor
in
jge
pop
mov
bound
das
leave
int3
in
sbb
aam
repz
ror
xor
mov
subl
fsubrs
push
or
ljmp
push
push
cs
sbb
movsl
and
movsb
imul
loopne
fidivrl
inc
ret
and
movb
push
das
loop
sub
loope
outsb
aaa
rcll
pop
ss
adc
push
pop
sti
shll
dec
push
test
test
cwtl
mul
push
pusha
enter
pop
nop
ret
mov
add
mov
add
loop
stos
loope
and
out
inc
int
mov
test
xchg
cwtl
sahf
sahf
ret
add
jmp
jecxz
sbb
jae
mov
mov
arpl
inc
cmp
and
jnp
jae
ja
out
mov
mov
je
or
mov
cmpsb
mov
out
ret
stc
stos
daa
je
loope
orl
mov
sbb
mov
mov
imul
xchg
add
jp
sti
add
dec
cmp
into
jbe
dec
cmp
fimuls
shl
push
mov
into
or
adc
mov
mov
hlt
adc
or
scas
out
aad
adc
xchg
daa
push
mov
cmp
daa
lods
mov
xchg
push
lds
or
cld
aaa
jb
test
mov
xchg
movsb
shlb
xchg
inc
mov
pusha
cmpsb
gs
mov
adc
cmpsb
fimuls
and
cmp
cmpsl
test
arpl
enter
xchg
cli
mov
into
mov
cmpsl
clc
clc
shlb
lret
mov
mov
and
adc
mov
jb
cmp
ljmp
or
mov
stos
push
adc
add
cmp
into
sbb
adc
ds
mov
mov
outsl
aas
test
xor
loopne
lods
ljmp
js
pop
jae
sbb
ret
aas
repnz
loopne
insl
rol
inc
jae
dec
add
dec
lds
pop
jle
mov
shl
xchg
inc
cmpsl
scas
rclb
loop
ss
jnp
pushf
xchg
cmp
out
test
pusha
bound
scas
es
mov
ret
pusha
daa
rorb
mov
sbb
mov
lret
rcrb
mov
xchg
rol
outsb
pushf
arpl
stos
push
rolb
xchg
sar
in
adc
movsb
xchg
imul
mov
jmp
jno
mov
ficomps
or
inc
fcomp
jb
ss
cmp
mov
mov
mov
mov
dec
mov
fsubs
nop
or
mov
iret
push
ficoml
jno
xchg
movsl
sub
add
jle
pop
mov
repnz
cmpsl
cs
ljmp
xchg
or
int3
mov
sub
int3
rorb
mov
cmpsb
inc
mov
movsb
dec
movsl
xchg
out
or
xchg
add
pop
int3
arpl
inc
sahf
mov
mov
out
daa
mov
xchg
nop
lret
ficoms
sub
lock
test
inc
cwtl
xor
mov
sti
xorb
sbb
push
jne
lret
mov
xchg
aaa
pop
ret
pop
daa
ljmp
or
cmpsb
es
pushl
cmpsl
scas
jmp
mov
mov
cmpsl
mulb
test
mov
arpl
cmpsl
pusha
mov
pop
sti
mov
or
sbb
scas
xchg
and
xchg
out
cmp
mov
lret
push
iret
nop
push
xchg
adc
cmpl
pop
loope
scas
add
sbb
cmp
xor
cmc
mov
das
mov
fs
mov
int3
push
enter
cmp
les
lods
out
lock
cs
add
mov
test
or
addr16
push
stc
mov
je
dec
push
adc
push
or
ss
mov
adcl
jno
sub
xor
insb
mov
or
mov
adc
stos
push
jmp
push
fldcw
leave
mov
push
dec
je
aam
jl
push
stos
and
mov
adc
imul
and
sub
loop
fdivrl
negb
jg
or
addr16
test
push
mov
adc
lea
push
out
mov
sti
inc
dec
insb
adc
jo
pop
ret
pop
cmp
rolb
shll
arpl
sub
jnp
jo
loope
popf
dec
lahf
sub
out
in
push
dec
pushf
hlt
inc
pop
ss
mov
xor
add
xchg
mov
adc
and
jne
xchg
mov
cmp
mov
add
int3
xchg
push
sub
xchg
inc
lea
es
dec
idivl
push
fisttps
rcll
cmpxchg
push
mov
mov
add
add
mov
pcmpeqw
and
pop
fisttpll
ja
inc
xor
push
addl
jo
mov
inc
cmp
cmp
movsl
aam
ja
ds
scas
mov
out
ret
jno
dec
jecxz
push
mov
sbb
mov
popa
push
sti
mov
lret
stos
or
loope
jbe
ret
or
mov
jmp
mov
sub
add
neg
ret
mov
jle
push
mulb
pop
ja
mov
out
sbb
sbb
jg
pusha
lods
and
out
mov
adc
inc
or
mov
sub
inc
sbb
mov
into
icebp
mov
mov
pop
js
out
and
fcmovu
xor
jle
sub
test
ljmp
mov
mul
out
repz
loop
inc
adc
gs
mov
jbe
jo
add
mov
and
inc
aaa
mov
fs
jl
or
fnsave
out
mov
arpl
inc
imul
popf
fadd
flds
mov
hlt
xchg
inc
xchg
cli
lret
daa
push
mov
add
sbb
adc
shrb
add
mov
enter
leave
orl
cmpsl
mov
std
sub
add
mov
cmc
dec
inc
es
lods
int3
nop/reserved
repz
mov
mov
lcall
lods
mov
or
leave
pop
out
fists
cld
cmpsb
mov
push
pop
xchg
iret
cltd
sub
jb
les
jmp
jno
stos
loopne
ljmp
nop
stos
or
sbb
jge
cmc
daa
mov
add
add
mov
push
sti
les
mov
in
jp
out
mov
lock
int
enter
lock
pop
enter
push
mov
cli
popf
mov
std
jge
inc
scas
mov
aad
or
cmp
clc
mov
add
stc
out
inc
pop
xchg
out
in
insb
lds
mov
dec
psubsb
jae
int3
add
mov
pop
push
push
or
mov
dec
or
lods
jecxz
lock
xor
scas
mov
cld
xchg
test
loop
adc
jb
adc
loope
push
fcompl
xchg
adc
jns
adc
mov
cmp
inc
stos
mov
insb
pop
andb
cli
or
inc
xchg
ret
out
stc
pop
xor
cld
out
push
es
xchg
lods
push
clc
testb
jne
bound
lds
fnstenv
mov
mov
add
mov
jnp
mov
arpl
pop
sub
aad
pop
sub
mov
int3
popf
data16
loope
and
or
sbb
cmpsb
loope
pushf
ss
adc
inc
outsl
cmp
enter
mov
xchg
jne
daa
fstp
jb
imul
sbb
inc
and
cmpsl
test
pop
cmp
repnz
test
push
mov
xchg
sbb
add
mov
aaa
jecxz
insb
xor
xlat
lea
push
repnz
sub
test
dec
or
out
or
popf
cmp
lret
pop
xchg
and
aad
sub
xor
mov
cmpsb
or
mov
insl
aam
or
inc
fildl
push
push
push
adcb
add
jae
cwtl
int3
xchg
daa
je
repz
data16
add
add
std
dec
mov
jp
cld
sub
or
loop
sub
jecxz
pop
cmp
add
push
fmuls
lahf
fwait
test
orl
cmpb
enter
incl
pop
cmp
fistpl
pop
mov
jo
mov
mov
scas
dec
sbb
test
inc
mov
clc
sub
sbb
jge
repnz
push
cli
sbb
lcall
and
not
pop
xlat
fwait
mov
cmp
adc
pop
xchg
lock
push
fcoml
or
or
xchg
scas
enter
xchg
lock
repz
mov
fwait
daa
sar
pop
jne
lahf
rorl
movsl
in
out
dec
mov
sub
sahf
cs
fs
insl
les
or
mov
sbb
xchg
mov
xchg
jmp
lock
fadd
push
mov
daa
jne
sbb
sti
lea
bound
adc
mov
mov
push
lahf
fisubl
scas
adcb
popf
jo
pop
cli
cwtl
popf
sbb
movsl
call
cs
mov
jg,pn
push
jb
dec
xchg
xor
mov
mov
mov
ds
imul
into
aam
popa
fdivr
mov
int
sbb
push
push
mov
push
fucomp
shl
cwtl
sbb
inc
xchg
cltd
push
dec
call
mov
loop
push
and
sbb
scas
pushf
je
insb
call
stc
pop
sbb
cltd
or
mov
push
repz
outsb
dec
mov
add
inc
scas
mov
out
mov
in
test
shll
popa
mov
adc
bound
push
es
icebp
ja
mov
sahf
call
jns
push
leave
es
insl
or
sub
mov
dec
add
add
or
int
dec
inc
mov
aad
popf
ljmp
jno
xchg
scas
test
or
lock
pop
pop
jbe
inc
cmc
sahf
dec
lcall
popa
xor
jl
inc
push
int3
imul
add
mov
ljmp
mov
add
in
repz
dec
ja
or
mov
and
das
cmpsb
add
push
out
stos
lcall
cwtl
js
aad
rcll
lret
incb
pop
scas
inc
mov
cwtl
je
in
jns
lcall
lcall
push
push
xlat
and
aaa
mov
mov
jo
lcall
cs
pop
mov
xor
lcall
dec
daa
push
push
xchg
ljmp
sbb
mov
fwait
mov
test
pop
mov
loope
scas
rcll
scas
ljmp
iret
mov
mov
mov
fbstp
dec
fmulp
push
mov
mov
mov
leave
pushf
test
adc
pop
jecxz
dec
pop
jb
dec
pusha
jp
inc
sahf
push
lea
pop
gs
mov
lea
xchg
inc
lods
std
lcall
sbb
mov
ficompl
out
cmp
cs
mov
repnz
xchg
xchg
rcl
sbb
into
push
mov
dec
mov
mov
sbb
xorb
lock
fists
pop
xchg
jae
pop
shl
scas
scas
jae
ljmp
jp
lcall
mov
adc
sbb
mov
dec
xchg
clc
loop
and
addr16
add
cmp
push
dec
mov
sbb
xchg
inc
pop
jb
adc
push
and
mov
or
mov
mov
pop
or
add
add
sti
dec
fcmovnbe
faddl
xor
mov
cmp
dec
sbb
or
sub
or
sahf
mov
ljmp
pop
movsb
in
jl
cmp
sti
ret
dec
mov
cs
sahf
daa
stos
rolb
scas
pusha
and
cmp
push
mov
or
out
aaa
mov
xchg
jmp
mov
sbb
sbb
adc
lods
and
jmp
in
ss
push
push
int
das
cs
sub
psubusw
les
xchg
cmpsb
push
call
mov
mov
xchg
sub
aaa
insb
fsubrl
inc
mov
mov
in
pop
dec
insb
add
pop
xor
pop
loopne
pusha
stos
std
imul
push
jns
push
inc
data16
aas
jge
push
and
test
jge
push
jmp
in
lods
cmc
sbb
push
cmp
imul
fwait
mov
push
orb
push
pusha
mov
sarb
mov
scas
and
adc
and
jge
mov
add
push
notl
mov
scas
in
ret
mov
mov
jecxz
in
out
mov
inc
cld
ss
into
mov
sub
int
lock
sub
adc
cwtl
cmp
cld
and
divl
push
mov
adc
out
push
ror
cld
jno
or
or
shrb
xchg
or
and
repnz
ljmp
sbb
mov
jae
movsb
sbb
or
outsb
push
int3
lcall
call
es
out
ficoms
mov
aad
fisttpl
mov
cs
loopne
xor
xchg
or
mov
dec
mov
xchg
das
cs
mulb
addl
shl
ja
sti
xor
rorb
les
xchg
mov
add
ljmp
pop
les
cli
adc
testl
in
insl
mov
sub
push
leave
scas
cs
fists
scas
out
push
arpl
mov
in
inc
dec
gs
push
sub
jne
push
mov
jno
dec
push
fwait
push
adc
cmpsb
xor
enter
xor
adcl
fadds
int
push
sti
fldenv
pop
or
xchg
stc
cmp
lods
sub
arpl
adc
xor
push
pop
and
push
test
fs
rolb
insb
ja
mov
adc
imul
aas
movsb
or
adc
jb
insb
into
push
sbb
cmp
nop
cmpsl
nop
or
cmpb
nop
sbb
cmp
or
inc
sub
in
dec
mov
decl
pop
inc
test
arpl
push
dec
adc
sub
mov
pop
mov
cmp
jge
inc
sahf
mov
movsb
cmp
aas
pushl
sbb
jbe
iret
addb
pop
push
clc
sti
arpl
mov
sbb
inc
mov
adc
pushf
sti
lock
ja
and
imul
daa
jb
push
sub
add
jo
nop
dec
push
jnp
inc
rolb
inc
mov
dec
nop
fs
xor
ret
das
push
inc
test
lods
sbb
fs
push
jno
sbb
in
std
jle
xor
ljmp
dec
lock
cmpsl
adc
cli
jbe
mov
mov
aaa
sahf
dec
stc
cmpsl
mov
icebp
push
js
ds
rclb
aas
mov
xchg
mov
pushf
dec
mov
lret
and
push
dec
insb
and
in
aas
or
mov
dec
pop
lcall
jecxz
aas
jg
push
cltd
popf
divl
add
add
xchg
loopne
repnz
and
and
sbb
or
int
loope
int
xchg
sbb
sbb
mov
xor
pop
cli
out
sahf
or
jno
incl
test
das
xchg
mov
je
mov
xchg
lds
ds
jle
cltd
arpl
pop
popf
nop
adc
decb
mov
cltd
aas
inc
add
mov
stc
out
sub
shlb
sti
and
jmp
test
loope
and
xchg
das
adc
dec
mov
push
nop
lds
pusha
mov
ret
stos
xor
xchg
mov
jg
ret
stos
sbb
aad
decb
xlat
add
and
lods
sahf
mov
sti
icebp
jnp
adc
jge
xor
mov
and
sarb
nop
jp
scas
cmp
jle
sub
imul
int3
mov
sti
add
aas
gs
mov
mov
cmc
mov
fisttps
cmp
enter
jle
mov
pop
jb
enter
xchg
mov
faddl
je
inc
lahf
lret
repnz
out
add
cmpsl
test
int3
aad
xor
fs
add
inc
loop
and
das
test
mov
xlat
loop
in
add
sti
fstpl
xor
cld
push
cmpsl
inc
sarb
orb
stc
mov
ds
pop
int3
mov
sub
jecxz
xchg
outsb
mov
lods
mov
inc
shll
jb
rcrb
sbb
arpl
jmp
jno
mov
enter
mov
pop
dec
inc
mov
add
dec
mov
pop
sbb
aas
aaa
pusha
stos
push
xor
mov
pop
mov
mov
push
test
mov
xchg
ret
sahf
scas
push
inc
mov
mov
xchg
ret
out
jl
sbb
inc
loop
lds
jo
aaa
jno
dec
iret
enter
push
in
aas
fxch
popa
pop
xchg
shlb
pusha
push
xchg
out
iret
cmp
aaa
jne
scas
aas
negl
sub
xchg
iret
fmull
test
mov
mov
icebp
stc
xchg
shll
pop
ja
jle
stos
dec
push
xchg
ljmp
dec
mov
jo
adc
in
fsubl
pushf
sti
mov
leave
lods
in
pusha
sbb
sbb
sbb
mov
pop
nop
inc
jge
dec
jae
add
jl
lret
outsb
pop
shlb
dec
mov
mov
push
sbb
mov
jo
mov
jg
iret
scas
sbb
jne
push
cmpsl
and
push
xor
incb
out
int
lahf
push
adc
mov
pop
std
out
bound
xchg
imul
sbb
aas
cli
push
jp
jp
inc
dec
mov
fstps
imul
aaa
loopne
pop
pop
ljmp
aas
lahf
jmp
shrb
jp
xor
dec
out
jb
bndldx
movsl
out
sbb
dec
jne
and
jg
in
std
lcall
sahf
sqrtps
mov
cmp
movsl
rclb
push
mov
loope
xor
sbb
fwait
pop
cmp
xchg
xchg
push
shrl
dec
mov
mov
scas
cmpsb
imul
push
bndldx
xchg
sbb
aam
lods
shlb
fiaddl
sti
and
loope
pop
xor
setg
sbb
fisubrs
inc
fldz
fcomps
mov
lcall
dec
dec
push
xchg
lds
sub
dec
mov
mov
pop
aas
rolb
or
cltd
xorl
push
inc
sbb
xchg
stc
ror
fcmovnbe
sbb
in
mov
xchg
ljmp
out
lcall
fdivrs
icebp
add
or
pop
cs
jns
pop
sbbb
insb
outsl
fiaddl
aam
ljmp
sahf
adc
test
mov
iret
push
jg
iret
mov
mov
nop
loopne
stos
sub
or
lea
dec
addl
cs
test
push
adc
ljmp
dec
and
in
loop
add
daa
or
sub
daa
mov
add
mov
sbb
imul
add
push
cs
jge
cmp
loopne
cmp
mov
gs
lods
jl
push
xorb
ds
rcll
push
lret
cmp
aas
addl
mov
enter
mov
hlt
cltd
test
imul
and
inc
xchg
mov
in
cltd
jbe
adc
aam
and
xchg
scas
sbb
into
je
cmp
out
scas
int
sbb
insb
adc
sarb
push
sub
jle
jnp
ds
icebp
mov
fbstp
adc
int3
orl
and
and
xorb
scas
negl
xorl
mov
aam
mov
aad
and
push
imul
cmp
or
js
das
push
push
pop
adc
sahf
add
adc
adc
pop
leave
lahf
cmp
repz
jno
fisttpll
shll
pop
ss
fwait
cmovge
xchg
xchg
inc
pop
aas
enter
add
movsb
fldpi
inc
stos
add
cmp
cmpsl
xchg
push
or
hlt
adc
or
sti
cmpsb
dec
iret
inc
pop
nop
ffreep
xchg
pop
shrl
xor
ds
je
fwait
sahf
popa
das
lcall
mov
mov
test
orb
sahf
mov
cmpsb
es
push
mov
mov
or
xchg
or
iret
jmp
ja
lcall
mov
sub
and
push
sbb
xchg
push
cltd
mov
out
jns
arpl
sbb
sbb
stos
sub
or
stos
loope
mov
add
rcr
add
xchg
inc
lock
mov
cli
push
sahf
mov
jmp
int3
nop
in
std
dec
pop
sbb
sbb
add
movsl
sbb
cs
adc
imul
pop
adc
test
adc
inc
outsb
enter
insb
mov
aaa
pop
mov
inc
nop
jle
mov
mov
dec
mov
into
push
mov
jo
push
insb
aas
pop
cmpsb
stos
xchg
inc
insl
pusha
out
or
jmp
dec
mov
out
cltd
icebp
in
cmp
dec
jb
lods
divb
das
lret
adc
scas
addb
fists
push
add
mov
lock
mov
addr16
fwait
in
cmpsl
ds
adcb
stos
mov
nop
push
movsl
adc
push
adc
pop
lods
pop
dec
negb
or
sbb
cmpsb
mov
and
cmpsb
cs
insl
push
inc
mov
rcrl
adc
inc
pop
xchg
outsl
rep
or
xlat
xor
out
sub
das
and
xchg
jecxz
sub
fwait
add
rcrl
cwtl
adc
xor
es
adc
stos
into
mov
add
add
cmp
leave
fwait
sub
inc
stos
imul
aas
jmp
stos
xor
insl
out
sub
mov
push
jns
lods
add
push
xchg
add
das
xchg
pop
es
in
fildll
xchg
adc
mov
mov
sar
pop
pop
ds
repz
pop
testb
mov
mov
pop
push
sbb
mov
pop
jnp
mov
or
inc
mov
decb
pop
jl
ret
sahf
jecxz
shlb
fs
cs
dec
iret
popf
cld
fcomp
stos
push
in
nop
imul
daa
sub
push
idivl
sbbb
mov
inc
jmp
stos
and
outsl
cld
or
rcrb
cmpsl
or
push
and
lods
dec
jne
xchg
jmp
pop
and
pop
notb
ljmp
mov
cmp
and
pop
inc
cmp
nop
add
std
cmp
mull
xchg
pusha
dec
lock
rcr
jmp
stos
pusha
adc
jmp
sbb
mov
int3
sahf
mov
jl
nop
sbbl
cmc
xchg
popf
add
xor
xor
cwtl
test
push
inc
cmc
in
pop
fwait
cltd
dec
push
xor
inc
jle
repz
cmp
clc
jmp
stos
mov
push
jmp
cmp
cmp
dec
and
cmp
test
rol
jl
sbb
inc
add
aam
lret
jmp
dec
pop
or
mov
fwait
cmpsb
dec
push
addr16
fs
ret
inc
bound
ljmp
xor
mov
sbb
fiaddl
movsb
pop
push
mov
leave
mulb
lds
or
pop
addr16
push
cmp
outsb
add
fnstcw
jg
int3
nop
sarb
cmp
pop
inc
lea
cli
dec
pop
jb
enter
loop
xor
xor
or
fildl
add
add
jecxz
lock
pusha
sahf
cs
js
cmp
dec
sub
pop
inc
mov
call
pop
insb
dec
inc
lret
jecxz
out
jmp
repz
inc
mov
push
ret
aas
push
mov
xchg
inc
aam
add
xchg
das
pop
iret
insb
fdivs
mov
xlat
repnz
aad
lock
scas
add
fstpt
int
dec
stc
data16
pop
add
repz
xor
dec
dec
xlat
lods
fucom
repz
ret
mov
mov
add
add
ss
adc
dec
sbb
mov
fistl
xor
dec
mov
stos
xor
and
mov
cmp
pop
stc
cmp
push
push
push
pop
ret
ret
paddusw
mov
dec
sahf
das
ja
dec
xchg
jb
rorl
pop
in
imul
loop
mov
sahf
jnp
pop
push
sbb
add
loope
push
fbld
mov
jecxz
cmc
fwait
mov
lahf
inc
imul
inc
cmp
and
sub
shl
nop
xlat
push
inc
in
pop
pop
clc
int
jnp
adc
mov
fwait
xchg
mov
cmpsl
cmpsl
loope
inc
xchg
cmp
out
sub
add
inc
mov
rolb
adc
stos
mov
mov
adc
or
xchg
mov
mov
sbb
cwtl
addb
mov
xor
icebp
mov
mov
mov
xchg
lods
push
mov
mov
mov
xor
sub
mov
loop
loopne
pop
jg
bound
sbb
sarl
push
push
stos
cmpsl
pop
pop
push
jbe
mov
loope
fstpl
push
mov
sub
or
mov
int3
jp
mov
inc
sbb
push
pop
dec
jge
push
jb
int3
or
cmpsb
dec
xor
add
push
fisubrl
cmp
test
xor
adcb
fdivrl
add
clc
xchg
call
and
xchg
or
in
pop
push
pop
ja
ss
mov
incb
push
lods
xchg
cmp
push
sub
push
in
mov
mov
jg
jg
das
xchg
loop
mov
jb
or
mov
mov
notl
mov
mov
jmp
mov
mov
movsb
mov
cli
in
lock
fists
mov
push
push
scas
xor
adc
pop
in
divl
outsl
lds
rol
push
fwait
jo
and
add
cwtl
xchg
push
rep
mov
das
data16
cmp
xchg
stos
mov
push
jbe
inc
add
jmp
pushf
je
jecxz
mov
mov
or
dec
loope
lds
sti
mov
mov
popf
in
dec
cmp
adc
mov
bound
adc
subb
lahf
mov
lods
add
div
testl
outsl
inc
jbe
idiv
sub
push
xchg
push
jg
bound
popf
jb
mov
inc
aad
jmp
mov
jge
negb
aas
jb
inc
xchg
ficoml
fwait
xorb
stos
daa
pop
push
jmp
je
sub
stos
pop
sbb
mov
std
cld
fs
dec
cmp
add
movsb
push
loope
mov
lods
jg
cmpsl
mov
xchg
jecxz
jbe
cmp
adc
outsb
insl
cmpsb
add
lock
ds
sarl
out
dec
cmp
xor
mov
add
add
xchg
mov
mov
jae
aad
mov
dec
push
mov
push
ljmp
loope
int
jb
adc
fs
pop
push
jp
sub
add
xor
add
xor
loopne
jne
and
mov
xchg
cmp
mov
out
mov
push
mov
cmp
xchg
sbb
and
jno
aad
mov
push
fmulp
push
stc
in
push
pop
loope
adc
fsubs
and
call
loop
xchg
sbb
sub
push
xchg
and
add
into
dec
imul
enter
push
cmp
int
lds
cs
inc
dec
sbb
mov
jns
loope
cmpsb
sahf
jb
cmp
fs
pop
adc
cmp
loop
int3
add
rcl
notl
xor
mov
pop
leave
and
adc
rcr
std
cmp
adc
cs
mov
out
imul
popa
mov
and
sbb
xchg
shlb
dec
inc
adc
push
inc
adc
stos
sbb
subl
inc
data16
das
jl
lret
pop
mov
lea
leave
jbe
add
dec
shl
adc
leave
pop
sbb
ss
adc
xchg
mov
push
and
pop
in
jbe
push
pop
mov
loope
aad
sbb
rcll
jge
dec
fwait
mov
jnp
xchg
push
mov
roll
jb
lea
leave
inc
and
cld
adc
mov
ret
pop
cmp
data16
or
addr16
xchg
btc
jle
hlt
dec
mov
dec
nop
enter
mov
int
subb
push
mov
outsl
sbb
jmp
xchg
or
push
je
stc
pop
cmpsl
adc
pop
adcb
mov
adc
mov
mov
repz
add
jge
cmp
ja
add
add
inc
push
ljmp
pop
scas
push
push
inc
xchg
fs
push
lods
loope
mov
outsl
pop
add
adc
dec
mov
stc
push
js
sbb
out
mov
lret
fwait
jg
adc
scas
cld
and
out
bound
je
xorb
int
mov
inc
sub
stc
or
push
sahf
sub
inc
scas
adc
jnp
in
mov
in
add
xor
cmp
scas
mov
mov
add
aad
add
aaa
adc
mov
in
lahf
sub
jp
sbb
or
adc
and
sub
fsubr
fildl
stos
dec
push
jle
fiaddl
fwait
cmp
jnp
inc
dec
or
inc
push
pusha
inc
dec
data16
mov
sahf
dec
loopne
loop
scas
jmp
mov
or
imul
in
out
imul
mov
lds
pop
cmpb
sarb
mov
dec
outsl
dec
cltd
testb
mov
sbb
lret
xchg
sbb
ficomps
xor
popf
orl
fnstenv
jmp
lahf
sbb
cmpb
pop
xchg
xlat
sbb
xchg
adc
mov
inc
cmp
cmp
data16
popf
js
xchg
notl
dec
pop
lahf
cltd
push
dec
in
stos
jmp
mov
test
and
into
stos
clc
mov
and
test
and
sahf
xchg
add
sub
pop
lcall
jp
dec
es
stc
lds
or
jle
mov
out
add
cmp
clc
push
xchg
xchg
mov
pop
mov
repnz
mov
mov
jno
cmp
popf
es
jl
bound
and
sahf
pop
scas
cwtl
sub
mov
dec
lds
popf
mov
push
hlt
mov
orps
test
add
sbb
repnz
mov
xor
dec
sbb
bound
dec
pop
and
repz
xor
addl
daa
andb
mov
inc
xchg
stos
pop
gs
sub
test
push
inc
decl
push
xchg
inc
addr16
push
call
xchg
xchg
cmovo
fadds
mov
jbe
push
in
nop
cmp
adc
or
gs
or
and
fldl
daa
sbb
and
mov
cmp
mov
cli
jno
pusha
pop
push
sub
mov
aad
add
mov
dec
cmc
inc
rcr
fwait
mov
sbb
xor
insb
fildl
das
sti
sahf
xchg
xchg
fists
or
std
testb
rolb
cmpb
inc
int3
lea
jl
ds
dec
imul
js
pop
lahf
out
fcompl
push
push
mov
popa
or
movsb
sahf
insb
jmp
or
lahf
inc
arpl
mov
mov
insl
outsb
loop
divb
push
flds
int3
xchg
sub
daa
cmpsb
add
mov
jo
xchg
add
push
repnz
mov
popf
bound
push
add
adc
scas
dec
movsb
mov
adc
pop
out
js
stc
mov
cs
in
insb
push
bound
sti
pusha
cmpsl
jb
clc
mov
sbb
icebp
fistps
cmp
pop
js
mov
and
jb
aam
cmpsb
test
mov
dec
jecxz
push
and
inc
mov
sub
push
mov
push
xchg
mov
rcl
mov
mov
ret
pusha
outsl
stos
xchg
mov
inc
adc
cmp
xchg
sbb
filds
add
add
faddp
int3
rolb
out
cmp
rorl
lret
ja,pt
shlb
mov
sbb
sahf
lods
cs
cmpsl
cmpsb
mov
aaa
popa
imul
jmp
or
xlat
lret
mov
jo
fs
add
pop
sub
mov
mull
mov
aaa
dec
or
jge
add
or
mov
fisubrl
dec
imul
jno
jg
je
js
inc
js
mov
fwait
mov
and
push
js
mov
mov
jno
popf
cmpsb
jge
ds
or
dec
push
mov
imul
or
mov
push
lcall
shll
xchg
mov
rol
or
pop
inc
arpl
mov
or
ds
cmp
cmp
mov
add
rorb
mov
and
or
loope
push
psubusw
mov
or
imul
mov
xor
pusha
js
mov
jb
icebp
test
stc
mov
and
and
cmp
gs
push
fmuls
pop
ja
mov
lret
mov
inc
cwtl
out
bound
push
pop
lret
loope
movsl
in
test
jp
jmp
arpl
js
mov
sub
loop
push
pop
lods
pop
ljmp
insl
bswap
rcl
jmp
mov
pop
shl
stos
mov
aas
push
adc
into
lods
scas
addr16
loop
hlt
xor
fldcw
xor
mov
jge
and
mov
add
mov
mov
mov
jno
fldenv
add
xchg
pop
cmp
inc
shl
mov
mov
leave
cld
leave
fucom
in
or
add
inc
imul
or
repnz
arpl
testb
ret
jmp
rorl
fld
pop
in
rcl
jg
cmp
adc
dec
xchg
xchg
es
push
mov
add
fs
jmp
bound
pop
pusha
insb
push
jbe
mov
dec
adc
push
call
add
and
sub
xchg
das
jns
dec
popa
shlb
std
repnz
icebp
lods
mov
pop
cld
notb
incb
pop
dec
outsb
aas
mov
hlt
add
xchg
lods
sbb
mov
mov
test
in
sub
out
andb
test
loopne
stc
adc
jle
test
add
mov
sbb
rolb
or
movsl
ljmp
addr16
mov
sub
repnz
xchg
movsb
and
xchg
push
and
fmuls
or
jno
popa
sbb
scas
dec
dec
ljmp
imul
and
dec
lock
and
cld
xor
push
stos
ljmp
jne
ret
or
std
cltd
stc
pop
loopne
and
jb
or
sahf
bound
aas
adc
push
adc
pop
ja
out
pop
mov
sub
push
popa
add
lcall
pop
sbb
sbb
outsl
inc
ljmp
push
ficomps
mov
les
pop
dec
in
push
les
sub
mov
mov
mov
or
dec
dec
mov
pop
insb
or
insb
inc
jne
pop
stos
or
or
cmp
test
aas
lods
iret
inc
out
mov
outsb
outsl
mov
stos
dec
mov
js
cmp
sub
and
mov
leave
lcall
mov
sar
bound
sub
imul
add
add
push
cmp
mov
add
inc
or
das
mull
push
mov
out
or
lcall
cmp
arpl
scas
cmp
mov
or
xor
add
and
fstps
mov
xchg
sbb
aaa
bound
ss
iret
lcall
xor
cli
clc
pop
xchg
xchg
mov
add
dec
bound
adcb
xchg
pop
insl
out
vmread
jbe
dec
ds
cmp
movsbl
sub
sbb
test
and
cld
mov
xor
into
ret
fisubrl
cli
shrl
orb
xchg
mov
popa
push
scas
sub
push
xchg
jp
inc
adc
jl
insl
pop
loopne
sub
dec
imull
mov
push
cmpsb
cmp
cmc
std
dec
sti
or
add
sub
add
mov
lret
dec
andl
xor
cs
pop
shl
fnstenv
xor
adc
fldl2e
and
lea
movsl
push
lock
mov
mov
or
insl
lea
scas
push
mov
sub
xor
ljmp
sbb
sub
cs
lahf
xchg
in
push
sti
xchg
lahf
pop
push
pop
stos
cs
test
fdivl
scas
xor
adc
ljmp
pushf
daa
lcall
sub
push
adc
xchg
divl
popa
pop
sbb
es
sub
mov
jg
push
mov
shrl
adc
pop
fistpl
ret
mov
sbb
in
jl
enter
es
gs
push
xchg
cs
scas
push
mov
test
rcrl
movsb
jge
add
subb
xchg
push
cmp
addl
mov
adc
inc
mov
out
mov
dec
mov
xlat
loope
mov
insl
fisubrl
xor
pushf
scas
jge
pop
jo
cmpb
lcall
fidivl
mov
imul
andb
lret
jg
mov
imul
adc
mov
aam
lcall
mov
imul
mov
and
jb
jmp
or
scas
push
div
xor
ljmp
adc
lcall
mov
push
sub
adc
adc
ds
fs
mov
jns
sbb
fsubrs
test
jge
jg
mov
shll
ja
sbbb
fdivs
cmp
andl
mov
cltd
and
adc
aaa
mov
dec
subb
dec
xchg
in
add
jl
dec
loopne
cltd
sbbl
jb
sti
and
scas
mov
jge
aaa
ljmp
movsl
rcrb
pop
inc
call
fisttpll
or
test
pop
in
mov
xor
fs
or
rcl
fdivrl
lock
clc
sbb
mov
add
jno
andl
out
mov
push
scas
pop
dec
shrb
ljmp
xor
scas
test
add
int3
rcll
push
pop
stc
push
lock
pop
mov
pop
mov
adc
jns
in
scas
mov
sub
cmp
cltd
mov
inc
add
mov
xor
pop
jl
js
out
xchg
sub
stos
xor
dec
push
lret
add
movsb
mov
pop
dec
out
stc
xor
add
das
call
push
jno
sub
shlb
sbb
aas
es
mov
jo
fsubp
das
mov
adc
jno,pn
mov
lret
dec
pop
lret
dec
dec
xor
mov
mov
xchg
sbb
int3
dec
clc
in
sub
in
jnp
loope
mov
loope
push
jle
xchg
jbe
movsb
pushf
dec
or
data16
lds
sub
loop
or
data16
adc
jne
shl
mov
loop
jecxz
lods
pop
xchg
xchg
push
xchg
inc
push
mov
jge
leave
scas
and
in
jmp
mov
scas
ficompl
pop
fwait
xchg
push
dec
int3
les
ljmp
loop
or
addl
pop
fwait
jo,pn
push
cmpsb
sbb
jle,pt
in
adcb
jmp
lahf
notl
dec
mov
out
icebp
jbe
orb
int3
dec
mov
jecxz
mov
inc
gs
sub
jge
jno
popf
addr16
mov
or
rorl
sbb
add
xchg
xchg
jne
xchg
dec
mov
push
sbb
or
bnd
clc
jno
jnp
mov
push
cmp
jbe
fildll
ja,pn
push
and
cli
std
cwtl
jne
sub
data16
les
in
pop
mov
clc
jmp
lock
inc
mov
ljmp
push
xlat
out
cli
jmp
scas
mov
pop
movsb
imul
out
mov
cmp
cs
out
imul
ret
into
mov
sbb
and
adcb
cld
lods
leave
jle
sbbl
fstpl
rclb
pop
jg
push
aas
scas
and
or
ljmp
test
test
dec
cltd
add
dec
ret
pop
cmpsl
les
js,pn
nop
add
inc
imul
jp
push
in
jl
mov
push
addb
inc
mov
fmulp
mov
sahf
dec
insb
loop
pop
out
jne
out
outsl
cld
aam
loopne
add
faddl
rcr
push
int3
movsl
pusha
mov
mov
mov
cmp
out
pop
roll
js
dec
test
mov
mov
jo
lods
mov
mov
scas
inc
push
aaa
cmpb
rcrb
pusha
fdivs
fdivl
jb
leave
sbb
int
cmp
popf
insl
pop
jae
cltd
addl
or
inc
sub
jae
add
rclb
jge
and
movl
mov
push
cmp
add
ja
clc
jl
movsl
xchg
xchg
xor
mov
sub
push
adc
xor
push
xorb
sbb
push
subl
pop
cmp
and
scas
xchg
jae
cmp
shll
fcoms
shll
mov
adc
cmpsl
dec
mov
or
in
mov
mov
jmp
adcb
adc
cmpl
leave
and
mov
enter
inc
out
push
mov
pop
loopne
lcall
test
and
mov
jo
inc
and
pop
fnstcw
xchg
xlat
mov
inc
sbbl
mov
data16
mov
scas
inc
int
fbld
hlt
push
and
popa
out
je
cmp
cmpsl
cmp
jle
aad
dec
cmp
aaa
mov
inc
pop
sub
fisubs
mov
xchg
fmulp
stc
fldt
adc
scas
cmpsl
stos
cwtl
mov
or
mov
dec
aaa
pop
dec
mov
push
clc
xchg
repnz
enter
std
fisubl
lea
mov
pop
gs
out
cmp
cltd
adc
push
ficoml
enter
jle
mov
push
xor
dec
sbb
pop
sbb
mov
mov
xor
out
cmpsb
and
sbb
hlt
sub
nop
arpl
mov
scas
jle
imul
xchg
fsubr
jp
push
pop
pop
push
xor
fwait
xchg
dec
xchg
push
sbb
hlt
inc
cld
rolb
push
movl
lcall
xchg
xchg
fisttps
test
aam
inc
test
cmp
outsl
push
mov
loope
mov
movl
fs
mov
int
sbbl
pusha
clc
rorl
adc
jmp
adc
push
adc
pusha
lods
jl
into
imul
pop
xorb
add
add
push
popa
lcall
mov
dec
orl
lods
pop
pop
call
adc
fwait
push
jmp
push
into
inc
pop
out
inc
cmc
and
fstpl
lods
jbe
stos
and
mov
mov
add
pop
stos
or
je
pusha
or
popf
cmp
es
sti
scas
les
imul
dec
movsb
jle
push
lcall
push
dec
mov
add
mov
int
lret
mov
pop
inc
out
push
pop
ljmp
insl
mov
xchg
insb
push
addr16
cmp
sub
test
cld
jns
adc
cltd
mov
lods
shl
test
notl
push
fs
xor
hlt
mov
fwait
sti
xchg
cmc
cmp
in
xchg
loope
push
push
out
add
inc
push
jp
arpl
jns
jle
jle,pn
pop
jb
cwtl
dec
sbb
in
lea
add
andl
pop
js
jmp
jmp
jecxz
out
push
ljmp
dec
out
lcall
xor
push
rcrl
in
leave
pop
mov
inc
cld
adcl
rcll
add
loopne
xor
mov
fcomps
mov
shll
and
pop
insb
mov
inc
add
js
mov
sbb
sarl
mov
es
push
mov
scas
xor
inc
push
arpl
scas
scas
scas
push
cmp
andb
push
in
insb
ljmp
es
lret
aam
std
mov
push
pusha
and
or
xchg
and
jecxz
adc
add
mov
fsubr
lock
mov
shrl
leave
pop
scas
add
js
out
fldl
data16
and
inc
mov
push
or
push
arpl
sbb
lret
xchg
das
mov
andl
push
lcall
mov
repz
shl
xchg
rorl
icebp
inc
subl
ljmp
cld
cli
lcall
jo
push
je
leave
repnz
pusha
cmc
test
push
cs
jge
jmp
mov
mov
ljmp
ja
lcall
cmp
test
mov
dec
sbb
aaa
or
lahf
push
push
pushf
xchg
sbb
in
insl
mov
jl
lahf
jg
dec
xchg
loope
xor
xlat
rclb
repnz
stos
cmp
clc
ljmp
aaa
xor
jnp
rclb
mov
stos
sahf
or
test
xchg
pop
jmp
push
dec
ljmp
inc
mov
std
jl
xchg
pop
outsb
nop
lock
push
andl
sahf
sar
sbb
pop
fs
push
jns
mov
xor
ljmp
add
iret
loope
jle
xor
push
test
or
shl
movzbl
enter
divl
adcb
setae
scas
or
dec
scas
adc
data16
in
in
xor
cmp
loopne
mov
add
mov
into
xor
fs
pop
js
icebp
bound
push
push
cmpb
xor
mov
movsl
dec
in
scas
fnsave
sub
stc
mov
or
icebp
sub
sub
mov
jmp
cs
jnp
mov
loopne
mov
scas
lds
outsl
adcl
cwtl
popf
pop
mov
push
push
cmpsl
popf
cmp
addr16
cmp
add
int
cmp
or
stos
das
lret
inc
cmpsb
xor
aaa
mov
push
mov
in
mov
aam
dec
in
pop
xchg
mov
cmp
int
jg
mov
mov
sub
jecxz
mov
cmovnp
inc
xor
sbb
in
sbb
and
pop
pop
cmpsl
sbb
test
mov
xchg
push
insl
mov
inc
or
sub
test
pop
jge
push
lcall
hlt
cmp
insl
push
pop
ret
jae
pop
jmp
lcall
cmp
fisttps
aad
mov
mov
adc
inc
jno
data16
sub
adcl
add
and
imul
xchg
xchg
cwtl
stos
daa
scas
nop
sbb
mov
add
arpl
daa
mov
mov
add
mov
xchg
dec
jb
xchg
fadd
mov
add
leave
jmp
arpl
mul
and
dec
mov
inc
xlat
cltd
jg
mov
movsb
scas
and
jecxz
rorl
xor
es
enter
cmp
fadd
add
dec
xor
xor
add
call
int3
and
lods
rcr
repnz
adc
ljmp
fs
cmp
cmc
outsb
bound
push
fisubrs
jge
ljmp
popf
add
aaa
ljmp
sub
lcall
vsqrtps
cmp
or
shll
jbe
and
mov
movsb
inc
jo
mov
rclb
das
shl
push
dec
mov
and
ljmp
mov
js
das
imul
loop
stos
movb
sbb
nop
pop
xor
xorb
stos
loopne
cwtl
int3
xorl
push
aam
mov
stos
das
scas
adc
sub
imull
clc
or
push
adc
sub
fistpl
cs
inc
mov
sub
scas
dec
add
fucomi
lahf
aaa
ljmp
adc
lcall
ss
insb
jg
stos
cli
cmp
inc
scas
mov
idiv
xchg
sqrtps
mov
loop
int3
mov
xor
je
xchg
dec
adc
test
in
mov
jns
push
cmpsb
adc
aad
es
xchg
push
ljmp
xor
cli
push
inc
int
push
mov
mov
inc
pushf
fs
sub
dec
dec
ja
adcl
sarl
shrl
dec
fcomps
adc
push
dec
cs
fs
sub
daa
sbb
movsb
shlb
mov
mov
xchg
pop
movsl
sahf
out
mov
ljmp
xchg
faddp
cmp
stos
in
pop
ret
jo
push
stos
arpl
dec
jo
push
scas
arpl
dec
leave
js
push
mov
js
push
movsl
arpl
push
cmpsb
bound
cld
mov
adc
push
xor
jle
mov
jne
into
sub
movsl
lret
sub
mov
lret
and
inc
mov
gs
loope
jne
into
je
push
mov
jne
into
cmp
push
into
pop
sbb
jo
sbb
jne
into
loop
data16
jne
into
aad
bound
cmp
jne
into
rcrb
insl
into
ja
jne
cmp
das
cmp
jno
or
je
push
cld
insb
push
and
jb
jmp
das
in
xchg
xchg
cltd
das
aam
adcl
pusha
adc
adc
das
mov
push
out
mov
in
ficoml
cmp
adc
cwtl
and
push
mov
aad
xchg
adc
fsts
movsb
xor
ds
out
jno
bound
outsl
adcl
test
test
or
mov
sbb
xchg
add
test
outsb
cmc
pop
dec
xchg
imul
jo
pop
lods
imul
dec
mov
stc
dec
cmp
int3
fisubrl
cltd
int3
in
lret
or
mov
int3
test
imul
aas
jns
fstpl
jmp
mov
jp
pop
das
ss
inc
xchg
and
mov
imul
xchg
xchg
and
mov
ljmp
adc
push
cltd
xchg
add
scas
arpl
pop
jecxz
gs
mov
imul
jo
pop
sbb
sahf
add
jne
add
pop
sahf
gs
test
test
fldl
imul
fiaddl
insl
mov
test
test
mov
sahf
adc
rcrb
inc
jae
fstpl
sub
pop
xor
inc
dec
bound
dec
sub
pop
aas
imul
cmp
jno
inc
jecxz
cmp
jno
inc
leave
imul
pop
lea
jl
imul
inc
aad
add
jno
inc
fsubrs
pop
movsl
jno
inc
fsubrl
pop
mov
imul
mov
bound
imul
inc
ret
imul
pop
dec
mov
pop
mov
addr16
imul
pop
jo
pop
xor
mov
cltd
pop
cmp
jo
pop
aas
imul
push
jo
iret
dec
imul
push
jo
pop
cmp
inc
dec
jo
pop
and
jo
pop
daa
imul
push
imul
add
inc
fs
pop
or
jo
pop
packssdw
pop
or
inc
bound
pop
adc
inc
jns
je
adc
inc
jnp
jbe
sbb
push
inc
jne
js
push
imul
jo
pop
sbb
inc
jno
jl
sbb
inc
jae
jle
add
push
inc
insl
jo
pop
push
imul
jo
pop
loope
cmp
jo
pop
jecxz
cmp
jp
sub
inc
sub
xor
inc
dec
sub
xor
xor
xor
sub
test
clc
lds
popf
stos
xor
popf
fnsave
in
aas
jmp
inc
sbb
out
add
sub
test
adc
pop
xor
insl
dec
jns
sti
push
adc
push
jnp
call
bound
dec
gs
push
test
push
push
hlt
dec
cmpsl
fldpi
push
dec
testb
push
xlat
ret
sub
ret
mov
ret
mov
ret
sub
out
push
push
sbb
and
adc
bound
xchg
popa
xchg
dec
clc
jb
pop
xchg
jno
pop
cli
vcvtss2usi
push
cld
sti
dec
xchg
jns
push
out
cltd
jns
push
lock
clc
dec
fwait
jns
push
repnz
testb
mov
bound
push
mulb
dec
cmpl
dec
cmpl
sub
push
test
dec
in
jns
push
xchg
dec
out
jns
push
mov
dec
loopne
mov
hlt
dec
loop
mov
testb
mov
push
icebp
lea
in
dec
lcall
dec
pushf
jns
push
mull
in
sahf
jns
push
stc
call
push
sti
jmp
xchg
jns
push
std
ljmp
fstl
fldcw
mov
fldt
mov
fsubrl
mov
bound
dec
lret
push
movsl
bound
in
outsl
mov
test
stc
mov
stos
outsl
fdivrs
outsl
lahf
mov
scas
outsl
clc
mov
cmpsl
outsl
fstpt
outsl
in
mov
outsl
out
mov
outsl
loope
cmpsl
adc
aam
outsl
jecxz
movsl
adc
aam
outsl
in
mov
mov
out
mov
mov
jmp
aam
outsl
jmp
lods
adc
aam
outsl
hlt
mov
mov
mov
mov
mov
xchg
mov
cltd
outsl
test
outsl
xchg
jns
push
in
bound
test
push
out
bound
jns
push
loope
push
mov
push
jecxz
push
push
in
outsb
dec
mov
push
out
insb
dec
mov
push
cltd
bound
lock
push
fwait
bound
bnd
push
popf
bound
hlt
jns
push
lahf
bound
rcrb
in
push
dec
fdivs
jae
fidivl
repz
mov
popa
int
sub
mov
popa
lret
or
mov
popa
enter
shlb
call
popa
mov
test
das
sbb
sbb
cmpsl
test
jbe
mov
adc
mov
mov
scas
mov
inc
mov
cmp
loope
xor
das
movsb
dec
mov
ss
sub
mov
push
sub
cli
faddp
aaa
out
ret
push
mov
loop
in
sahf
lret
jb
test
xchg
xchg
inc
add
dec
adc
inc
cmc
sahf
push
pusha
inc
mov
inc
lods
nop
imul
jmp
lea
nop
sub
dec
out
imul
pop
push
cwtl
bound
mov
test
test
pushf
mov
mov
gs
mov
dec
test
lahf
int3
mov
test
mov
mov
lret
mov
movsb
lods
lret
cld
shrb
sahf
in
insb
mov
sahf
out
mov
popf
ret
inc
mov
xor
pop
pushf
jae
inc
addr16
inc
mov
lea
adc
xchg
xchg
jne
add
push
sarb
jne
popa
mov
enter
mov
leave
dec
cmpsl
jns
push
into
pop
loope
test
adc
imul
jo
dec
lds
inc
lods
jno
jo
mov
arpl
lods
push
je
mov
jbe
mov
popf
xchg
xor
cltd
jns
nop
sub
adc
mov
add
out
test
mov
shll
lods
or
pop
mov
inc
push
test
sub
stos
inc
pop
pop
ret
and
imul
shrb
pop
push
inc
out
and
test
mov
popa
mov
ljmp
in
fimuls
or
fwait
rclb
inc
mov
push
mov
xchg
dec
movsb
lods
mov
adcb
push
add
and
dec
ss
dec
mov
notl
bound
jp
lret
and
jp
mov
arpl
out
popa
adc
sub
popa
cltd
lea
adcl
or
adc
adc
lds
adc
and
leave
and
or
ja
lret
and
adc
int
sbb
iret
and
icebp
and
adc
repz
adc
aad
jecxz
test
and
adc
fldenv
out
adc
jmp
push
frstor
jmp
mov
and
jb
pop
mov
dec
mov
mov
dec
mov
mov
dec
mov
mov
dec
mov
sub
lds
jno
dec
xchg
mov
pushf
mov
popa
or
mov
jns
xor
jmp
popa
daa
int
or
mov
popa
and
mov
popa
and
out
or
mov
popa
and
xchg
or
int
or
mov
popa
sbb
mov
popa
cmp
jbe
and
js
sub
int
or
mov
popa
xor
mov
popa
xor
jle
sub
pusha
or
int
or
mov
popa
sub
mov
popa
dec
int
or
pop
popa
dec
int
add
add
pop
mov
popa
inc
int
or
push
popa
inc
int
or
push
popa
inc
int
or
push
cmp
jae
es
popa
fcmove
push
or
mov
popa
fmul
push
or
mov
popa
int
or
mov
popa
aam
pop
or
mov
popa
ror
pop
or
mov
popa
ror
pop
or
mov
popa
into
int
or
mov
popa
ljmp
popa
call
mov
popa
out
test
cld
mov
popa
in
stos
or
mov
popa
loop
lods
or
mov
jno
movsl
xchg
sbb
mov
in
sbb
andb
fwait
or
andb
popf
or
test
int
or
xchg
int
or
int
or
mov
popa
cmp
mov
popa
fcmovne
out
ret
mov
popa
fxch
jmp
popa
xlat
int
or
mov
popa
aad
in
or
mov
popa
ror
out
or
mov
popa
ror
xchg
or
mov
popa
iret
int
or
mov
popa
int
je
icebp
mov
popa
jmp
jbe
repz
popa
jmp
mov
popa
out
jp
pushl
jl
stc
mov
popa
jecxz
jle
sti
mov
popa
loope
pusha
or
mov
popa
bound
mov
popa
inc
or
mov
popa
sti
int
or
mov
popa
stc
int3
dec
mov
lret
jg
xchg
pusha
jns
sub
arpl
rclb
cmpsb
jae
mov
int3
push
in
test
mov
js
mov
sbb
xor
sbb
dec
push
xchg
ficomps
out
in
or
repnz
or
mov
popa
fwait
int
or
int
or
lods
stos
or
mov
or
scas
adc
dec
add
xchg
cltd
inc
mov
mov
adc
mov
lods
xchg
sar
push
mov
mov
adc
mov
mov
push
mov
xchg
dec
sbb
jo
add
add
mov
out
and
push
push
fisubrs
push
lods
jo
addr16
cmpsl
inc
movsl
and
or
xchg
inc
lds
jo
adc
jnp
jae
push
in
daa
je
xchg
dec
mov
fs
add
out
stos
push
jae
or
lretw
in
push
sti
repz
and
divb
lret
and
enter
shlb
jnp
jae
out
daa
mov
leave
call
repnz
pop
cmpsl
cmc
clc
inc
jne
lret
test
adc
mov
or
mov
sbb
or
cmp
into
aad
cmp
adc
je
sbb
or
cmp
into
test
or
scas
stos
sarb
mov
scas
mov
rcl
daa
mov
test
fistps
fmuls
lods
movsb
jb
adc
mov
mov
shlb
ljmp
or
mov
adc
jp
pop
out
or
cld
lds
shll
inc
lret
data16
mov
aam
xchg
or
mov
nop
push
notl
shld
or
push
scas
lahf
adc
test
sub
sti
sbb
daa
addr16
mov
loope
das
fimull
je
fdivrs
outsb
fcmovnu
adc
movsb
mov
push
out
or
xchg
mov
mov
fildl
cmpsb
into
xchg
bound
sub
xchg
nop
hlt
or
xchg
gs
mov
fiadds
mov
int
xchg
cmp
add
xchg
stos
mulb
aas
enter
orl
jg
notl
add
popa
out
pop
dec
cwtl
lods
in
cmpsb
xchg
dec
push
xor
xchg
add
push
pop
lods
and
jp
cmp
add
inc
sbb
fistl
xchg
add
jle
daa
push
and
push
inc
daa
imul
sub
xor
mov
adc
fwait
jno
xor
sbb
loope
push
push
ss
cmp
or
aam
jp
mov
iret
arpl
xor
pop
lret
mov
dec
icebp
mov
or
stc
sti
push
scas
aaa
in
and
icebp
repz
or
mov
ds
pop
cmc
cli
dec
jmp
jae
je
sbb
pop
neg
stos
ss
cli
xor
inc
lret
cmpsb
and
test
jge
into
outsl
popf
test
cli
fld
jecxz
inc
sub
in
fdivs
in
pop
ret
sub
subl
addr16
sbb
imul
pop
pusha
jno
pop
out
out
xor
in
in
mov
dec
cmp
out
aam
xchg
cmp
es
add
popf
popf
cmc
sub
ret
xchg
lods
push
mov
sub
lods
or
push
push
int3
stc
xor
mov
mov
std
cmp
adc
xchg
repz
fistl
sbb
ficoml
mov
ret
in
hlt
stc
pop
jb
push
and
sarb
add
and
adc
in
sbb
sbb
lret
mov
and
inc
push
ljmp
mov
iret
in
imul
inc
movsb
repnz
aam
ljmp
not
nop
bound
roll
fs
shll
xor
xchg
fiaddl
jo
jno
movsl
pop
pop
cmpsl
mov
mov
push
sub
xchg
inc
cmp
imul
ja
mov
pop
jo
ret
xchg
xor
adc
incb
sub
mov
add
add
rcl
pop
stos
call
ljmp
mov
es
cmp
sahf
adc
out
pop
mov
loop
enter
cmp
es
outsl
rcrb
cmpsb
fnstcw
stos
push
mov
insl
mov
mov
lcall
fsub
sub
mov
sub
pop
in
pop
test
adc
mov
pusha
mov
mov
adc
cmp
sub
mov
adc
jne
adc
sub
add
dec
in
push
pop
push
push
loope
lret
fstl
add
insb
ds
testb
es
jbe
add
cmp
or
jle
inc
fcomps
xchg
lahf
push
stos
inc
add
in
inc
xchg
and
cmpsl
inc
jl
mov
adc
jle
loop
dec
mov
xchg
fstl
loop
mov
dec
jecxz
cmpsl
mov
xor
jnp
and
inc
pop
adc
jbe
cwtl
dec
push
subb
arpl
mov
lret
mov
aam
push
arpl
lret
stos
sbb
jmp
dec
or
clc
dec
push
pusha
mov
or
mov
push
push
scas
idivb
addl
add
scas
mov
imull
push
mov
ds
sbb
das
dec
cmp
mov
jns
aaa
sub
adc
std
bound
fdiv
in
or
jecxz
movsl
mov
out
repz
insl
dec
repnz
or
loop
add
data16
mov
gs
push
mov
pop
push
lahf
ljmp
outsb
fidivrs
jns
xor
outsl
mov
xchg
sbb
add
mov
iret
sahf
daa
lea
and
pop
test
xor
add
add
and
int
push
and
popl
js
mov
scas
jge
incl
jno
push
jne
fmuls
pop
test
mov
mov
ljmp
mov
adc
pop
push
xchg
or
aaa
call
add
stos
push
jg
mov
mov
mov
mov
fmuls
add
jl
dec
xor
pop
jb
jae
sub
mov
xchg
mov
push
stos
sub
xor
mov
jecxz
mov
or
pop
pop
push
mov
popf
call
ljmp
add
cmp
test
pusha
clc
nop
push
jno
gs
add
lock
fsub
lahf
inc
icebp
jle
inc
test
int
lret
mov
sbb
xchg
repnz
cmpl
or
lock
mov
nop
mov
js
stos
test
xchg
jmp
pop
stos
rcrb
aas
mov
popl
push
fsubr
hlt
push
nop
mov
rclb
std
push
add
out
out
imul
push
mov
test
pop
mov
pop
and
sub
push
out
fistl
add
mov
inc
testl
lods
push
dec
add
mov
in
shlb
ja
int
sbb
mov
enter
pushf
bound
push
lahf
fsub
push
inc
lea
jne
gs
int3
inc
stos
test
stos
enter
adc
pop
mov
fsubs
insl
sbb
sbbl
lock
popf
mulb
shlb
sub
out
lahf
repnz
sub
mov
xor
xchg
lods
ret
cmp
fstpl
add
add
cmp
push
jnp,pn
push
pop
aas
daa
push
out
loop
clc
inc
loop
mov
imul
mov
xchg
sahf
push
sbb
cmp
xor
sub
jg
sbb
movsb
pop
jno
fsubrl
outsb
mov
stos
add
sbb
cmp
jb
cmp
sbb
and
xor
test
pop
mov
xchg
ja
sbbb
scas
xchg
cmpl
dec
adc
popa
pop
push
jle
add
mov
push
ja
cli
push
mov
pop
dec
scas
mov
mov
push
pop
or
inc
sbb
xchg
xchg
adc
mov
xchg
sbb
or
or
pop
sub
or
loope
sub
test
jge
mov
data16
in
sub
jmp
inc
scas
push
mov
lcall
test
jb
jmp
xor
jo
or
loope
xchg
movsb
xlat
mov
insl
jno
pop
lcall
stos
jmp
cmpsb
mov
daa
xchg
sbb
fwait
pop
cltd
and
or
stos
std
out
jne
scas
sbb
pop
fsubl
xorb
adc
test
fidivs
adc
mov
movsb
adc
cmp
ret
jne
push
fsubr
jle
lret
xchg
leave
decb
popf
push
pop
push
jo
stos
and
inc
xchg
lods
das
add
mov
sbb
decl
call
aam
ljmp
cmpb
mov
push
sahf
ss
and
push
cs
lods
inc
add
xchg
jecxz
dec
lcall
inc
loopne
inc
mov
pop
jge
mov
fs
ljmp
shr
adc
out
or
inc
fcoml
or
insl
loope
jae
jle
out
fldcw
ret
mov
mov
ret
ret
add
jle
dec
xor
lock
lods
test
xor
jmp
loope
xor
divb
xor
cmp
mov
cmpsb
adc
fstpt
call
lret
popf
mov
jno
sub
insl
outsl
push
push
jmp
js
movsl
sbb
jg
movsb
cmp
mov
je
in
or
icebp
repz
adc
daa
jb
xchg
andl
aaa
xor
add
mov
pop
testb
js
in
fnsave
push
lds
cltd
dec
mov
mov
xchg
aaa
in
orl
mov
loopne
leave
outsl
bound
dec
loope
mov
test
filds
xchg
cmpsb
or
xchg
cltd
cmpsb
mov
es
push
push
xor
push
aas
int
xchg
ljmp
outsb
jmp
xchg
or
incb
and
test
jns
out
testb
mov
xor
enter
mov
hlt
ret
lods
test
push
mov
push
dec
pushl
insl
push
mov
pop
sub
addr16
mov
pop
movl
imul
jb
adc
arpl
bound
popf
inc
mov
fidivs
xor
mov
sub
pop
lret
outsl
sub
mov
aaa
sub
sub
in
cmpsb
fcmovu
push
sahf
incb
and
outsb
outsl
test
movsb
sbb
cmp
ficoms
and
mov
ret
sbb
mov
fisubrl
testb
test
jge
fdivr
adc
stos
add
mov
sbb
pop
jp
in
adc
out
iret
xor
sbb
xlat
dec
push
jo
push
arpl
mov
jmp
mov
insl
pushf
test
cmpsb
or
mov
adc
pop
fs
dec
add
test
into
loop
imul
mov
dec
cltd
jnp
mov
loopne
in
lds
cmpb
shlb
movsb
push
adc
push
jl
sbb
sub
int
loope
ret
xchg
jae
lret
aad
arpl
mov
addr16
push
bound
stos
push
scas
scas
std
cmp
push
and
push
int3
lcall
popf
xchg
jo
fdivrp
sbb
mov
in
enter
ss
sub
mov
xchg
sbb
cs
jno
mov
aas
dec
sbb
ja
cmp
repz
mov
lret
sbb
dec
test
stos
or
cs
jbe
iret
xor
das
movsl
push
push
nopl
orl
and
or
enter
mov
roll
out
dec
stos
dec
sbb
push
outsl
jno
inc
xor
pop
pusha
push
aad
xchg
and
cmp
lahf
pop
inc
ljmp
cmpsb
aaa
mov
mov
inc
mov
push
stos
lds
scas
jp
fsubl
enter
adc
or
loope
jno
decb
xchg
inc
iret
jg
pop
fwait
sbb
and
loope
mov
xchg
pushf
jns
cmc
mov
mov
cwtl
and
xchg
loopne
test
lcall
lea
adc
pop
push
ds
add
mov
aam
loop
test
mov
imul
repz
popa
ret
insl
xchg
jb
movzwl
enter
adc
pop
dec
es
adc
add
nop
repnz
repz
add
cld
cmp
cmp
lea
mov
mov
lods
ret
pop
xchg
mov
test
cmpsl
jge
jle
or
jno
push
push
jne
xchg
dec
imul
scas
mov
push
pop
jle
inc
jecxz
sub
jo
rcrl
mov
push
fldt
invd
mov
jp
pop
sti
test
jb
sub
lret
push
adc
mov
push
sti
sbb
jp
sarb
jle
mov
jo
pop
jge
into
sbb
or
dec
add
cmpsl
scas
test
cmp
mov
pop
iret
ja,pt
lods
dec
sbb
dec
cs
or
pusha
sbb
inc
add
dec
xchg
dec
popa
fistps
daa
mov
sbbl
pop
pop
cmp
pop
addr16
and
sahf
push
pop
xchg
loop
rorl
cld
sbb
dec
mov
sub
and
ja
sbb
dec
and
dec
sub
pop
cli
lcall
inc
lret
xchg
cwtl
cmp
xchg
adc
pop
hlt
mov
adc
pop
mov
inc
popf
ljmp
xchg
dec
ds
inc
lcall
fs
push
add
sbb
ds
mov
pop
push
int3
addr16
dec
push
jo
aam
out
mov
clc
arpl
xchg
adc
ss
loop
adc
or
mov
mov
xlat
pop
sbb
data16
jns
fs
mov
mov
dec
stos
movsl
das
xchg
inc
test
scas
dec
aam
ljmp
hlt
loop
dec
ds
lcall
mov
pop
mov
pop
out
popl
out
mov
fsubrp
movsl
jecxz
add
loopne
sbb
inc
cmp
add
and
ss
sbb
jp
ds
scas
pop
inc
rorl
push
pop
lcall
pop
pop
push
add
xchg
pop
mov
les
in
mov
stos
jb
mov
dec
jb
es
push
js
xor
fldcw
cltd
repnz
stos
inc
stc
or
add
je
outsb
jecxz
push
inc
pop
je
test
jne
int3
scas
sbb
sbb
dec
clc
je
cltd
or
push
notb
sahf
adc
shrb
fld
pop
jbe
loopne
std
add
jmp
xchg
fwait
sub
das
add
inc
or
fisubrs
jle
movsb
mov
mov
stos
mov
dec
sub
call
push
xchg
xor
sbb
mov
sbb
pop
decl
jp
dec
outsb
mov
je
enter
stos
jnp
push
push
fistpl
xchg
xchg
and
mov
loop
stos
scas
lods
or
cld
je
int3
inc
xchg
mov
andl
lret
inc
insb
mov
mov
lret
cltd
loopne
pop
add
roll
push
aaa
jnp
push
adc
mov
cld
cmp
dec
sti
loopne
dec
shrb
dec
popa
sub
mov
inc
es
push
push
sbb
lods
mov
add
js
mov
enter
hlt
mov
adc
mov
xor
stos
xchg
fisubs
shlb
jmp
cmp
fnsave
adc
pop
jno
ret
add
std
xchg
push
ja
pop
add
ja
jmp
imul
mov
mov
pushf
dec
push
gs
arpl
gs
hlt
rcrl
fs
ljmp
lods
bound
aad
or
scas
ss
repnz
insb
ret
xor
pop
and
mov
das
xchg
or
orb
add
add
mov
cmpl
sbb
lret
or
sbb
xor
out
mov
pop
fwait
sbb
mov
lret
fcom
in
push
cmc
lret
jmp
orl
pop
scas
xchg
mov
and
push
pop
jne
xchg
push
push
in
je
popa
imul
cmc
sub
pop
adc
mov
loopne
test
lods
mov
xchg
mov
mov
test
scas
in
shrl
push
inc
mov
andb
push
push
imul
push
jno
xchg
add
sub
mov
push
push
and
pop
xchg
pop
and
xorl
and
and
test
push
mov
push
xchg
sub
icebp
test
repz
int
loope
enter
rcrb
into
test
sub
roll
into
jecxz
dec
mov
lret
mov
ljmp
gs
pop
loopne
inc
xor
aad
jmp
test
mov
enter
mov
sub
cwtl
mov
push
mov
jno
out
jmp
roll
std
aas
in
std
ds
cmp
dec
jge,pn
les
push
movsb
test
mov
inc
jno
mov
jo
leave
in
and
jecxz
js
cltd
add
xor
jp
into
adc
mov
scas
xor
loope
pop
jle
lods
gs
sub
push
jmp
pop
sbb
dec
aas
inc
and
jmp
popf
ja
cld
aam
mov
mov
icebp
test
pop
cld
mov
cmp
mov
push
xchg
into
xchg
repz
sti
mov
push
adc
sbb
in
daa
mov
add
xlat
mov
rcll
repz
repz
pop
int3
fiadds
xlat
sbb
mov
xchg
push
mov
and
bound
cmp
stc
pop
push
push
andl
cmp
inc
dec
xor
inc
push
xor
mov
adc
addl
cs
jmp
pop
inc
adcb
testl
pop
rcr
pop
mov
leave
mov
jg
jge
dec
lahf
outsl
or
out
pop
pop
xchg
push
xor
xchg
insl
and
jecxz
pop
dec
out
shll
iret
push
sub
adc
add
mov
push
push
idivb
sub
leave
xchg
shlb
iret
mov
outsb
jbe
fcompl
in
test
lods
rcl
and
movb
jg
out
adc
in
mov
xor
sarl
or
stos
cmp
cmpsb
js
testb
xchg
clc
pop
mov
cltd
sub
call
popf
and
int
cmpb
cmp
mov
mov
jg
add
out
mov
nop
adc
mov
jne
xor
jns
xchg
sbb
cmpxchg
inc
in
lds
outsb
leave
pop
hlt
push
fidivrs
cmc
mov
clc
sub
sub
and
cltd
stos
xchg
aaa
fcmovu
mov
scas
pop
shlb
lds
out
and
and
popw
aas
cwtl
push
mov
jb
stos
push
dec
out
loopne
cs
jae
aaa
fwait
and
and
in
push
add
mov
in
sbb
call
out
aad
and
lret
mov
cmp
mov
mov
addr16
sbb
mov
xchg
std
repnz
pop
jg
icebp
ja
dec
mov
push
push
mov
push
int3
sub
inc
pop
adc
pop
test
shrl
std
sub
add
add
test
daa
movsl
sub
pop
mov
fwait
push
repz
or
rcrl
lods
xchg
cwtl
add
test
test
ja
inc
lock
mov
ljmp
xchg
mov
mov
adcl
mov
ljmp
ljmp
mov
cmpsb
cmpsl
xor
popf
leave
xor
lods
enter
xor
fimuls
add
movsb
test
scas
out
subb
rcrb
mov
xlat
xor
adc
mov
mov
adc
fwait
mov
cmp
adc
xorb
mov
add
sub
je
dec
jg
cmpsb
inc
xor
cmp
jns
ljmp
clc
call
mov
pusha
dec
lcall
dec
addr16
jb
and
mov
imul
insl
or
fisubs
add
addl
das
ja
mov
xor
add
negb
mov
pop
jmp
push
lahf
and
addl
dec
inc
cwtl
xor
add
ficoml
sub
testb
lcall
rcrl
decb
sbb
jmp
sarl
adc
mov
xor
sbb
sub
rol
stc
or
ljmp
sub
rclb
push
push
cmpl
inc
xchg
xchg
hlt
dec
xor
push
pop
and
cmovno
push
bound
xorb
pushf
ss
lock
rolb
scas
outsb
popf
push
mov
pop
lcall
scas
mov
mov
mov
xchg
inc
repnz
mov
stos
sbb
jno
sub
xchg
xchg
flds
into
jno
popa
in
and
hlt
add
xor
into
repz
stos
daa
test
push
imul
add
jecxz
pop
fldl
add
xlat
dec
xchg
sahf
mov
shll
push
repz
add
es
cs
rorl
mov
xor
mov
jns
cmp
mov
addl
fiaddl
imul
rolb
aam
adc
push
dec
cmp
pop
popa
mov
jmp
cwtl
xchg
inc
faddp
adc
test
xor
pop
inc
loop
jg
ljmp
les
inc
div
pop
and
inc
sarl
in
repnz
int3
or
outsl
lds
stos
jae
leave
inc
inc
arpl
test
std
sbb
sbb
jmp
int
ds
pop
enter
and
loope
sbb
push
ret
fsubrs
repz
mov
stos
dec
fdivrp
shrl
cmp
pusha
xchg
loope
cmc
xchg
jle
cmp
js
mov
lods
xchg
inc
std
mov
nop
bound
and
js
sub
xchg
cmp
push
fldt
pop
loop
sbbb
stos
xor
mov
inc
mov
lcall
pusha
lret
dec
cwtl
aad
in
jl
cltd
lahf
jp
cmp
cmp
imul
sti
cmp
imul
jp
sbb
loopne
mov
arpl
nop
xchg
lods
inc
out
cmp
jne
cmp
sti
mov
and
push
jecxz
out
imul
jl
loop
fnstenv
ss
outsl
xchg
and
cli
xchg
fwait
xor
out
mov
push
sub
out
inc
bound
push
jno
fcom
test
mov
in
not
sub
cmp
mov
xchg
inc
mov
out
out
push
in
cmp
ret
xchg
sbb
sub
pop
sahf
or
jb
enter
adc
fcmovu
aaa
cltd
loope
push
stos
dec
xor
sbb
sub
leave
cld
es
mov
pop
out
scas
pop
pop
shrl
test
mov
pop
sub
inc
cwtl
jp
pop
stos
fs
jno
scas
add
stc
mov
pop
sub
mov
movsb
pushf
dec
dec
decb
mov
movb
xchg
nop
leave
add
sarb
xchg
clc
lods
jne
lret
outsl
sbb
push
dec
dec
fbstp
in
push
fmull
push
negb
clc
mov
ljmp
pop
push
dec
sbb
imul
push
adc
in
aas
cmovno
mov
push
clc
jnp
les
sub
in
nop
push
je
pushf
insl
cmp
xor
fucomip
ret
mov
mov
sub
push
add
fimull
fbstp
push
ret
mov
mov
add
dec
lds
imul
test
mov
push
js
inc
pop
push
std
add
lcall
jo
adc
and
fwait
mov
mov
rol
test
popf
xchg
xor
divl
jne
sbb
fdivr
mov
ucomiss
popa
cmpsb
cmp
mov
sbb
inc
pop
pop
test
shll
push
sub
pushf
dec
dec
inc
aad
adc
filds
or
in
lcall
inc
cwtl
ljmp
cwtl
sti
and
sbb
jecxz
scas
add
int3
mov
test
inc
pop
push
cmp
push
mov
dec
pop
inc
jg
dec
es
daa
add
cmc
out
test
shll
movsb
inc
or
ret
push
xor
aaa
cmp
jecxz
mov
into
push
movsl
add
push
pop
ds
xchg
test
pop
cltd
dec
in
jns
and
add
inc
push
imul
fwait
xchg
mov
pop
xchg
xchg
pushf
lret
lock
rcrb
pop
xchg
in
cli
dec
mov
fcmovu
repz
or
jb
adc
stos
fisttpll
out
jmp
mov
cmp
add
std
call
mov
inc
int
inc
push
pop
jns
jb
mov
xlat
sbb
add
jecxz
jmp
cmp
repnz
dec
mov
adc
arpl
mov
xchg
call
inc
mov
ret
sbb
sbb
loope
bound
pop
rcl
sar
inc
adc
cmp
rorb
fidivrl
mov
scas
int3
pushl
test
jge
fldenv
cmp
pop
mov
repz
xchg
jg
adc
xor
insl
mov
mov
lods
inc
and
jnp
aad
outsb
cmp
jmp
inc
xchg
sahf
dec
sub
jp
adc
mov
cltd
push
xor
je
or
mov
cmpsl
fdivrl
push
jl
mov
pop
sub
fidivrs
repnz
in
mov
xchg
sub
sub
cmp
jp
ret
roll
ljmp
gs
sub
daa
repz
inc
arpl
fmull
and
and
sarb
mov
stos
inc
xchg
mov
mov
xchg
mulb
loop
pop
leave
push
mov
pop
and
ja
cs
xorb
popa
add
adcb
fs
xchg
mov
subb
jl
lea
out
sahf
cwtl
jo
push
cld
inc
jno
insl
sarb
stos
or
mov
mov
mov
in
jg
dec
pop
repz
repnz
add
ljmp
mov
sbb
mov
push
mov
xor
fidivs
jo
scas
pop
gs
jbe
enter
push
jle
ss
xchg
or
inc
cmpsb
sub
mov
cltd
mov
out
and
and
rcll
movsl
idivb
movsl
fdivrl
scas
int3
jmp
mov
sti
mov
pop
jae
scas
and
xor
mov
add
pop
jno
cmpsb
mov
cmp
dec
int
cmp
cmp
jb
test
or
xchg
or
dec
cmp
mov
ds
mov
xchg
jecxz
mov
aaa
loope
or
lret
and
push
dec
fldenv
xchg
dec
loopnew
rolb
push
pop
imul
dec
jl
movsb
jp
pop
push
mov
std
icebp
rclb
orb
and
rclb
sti
and
sahf
ljmp
push
in
cmp
lcall
call
repz
fucomi
or
cld
nop
lds
repnz
stc
xor
inc
xor
jge
push
pop
push
inc
or
movsb
xor
xchg
loop
pop
fwait
adc
xor
imul
jmp
arpl
sbb
lods
outsl
jno
jo
sub
mov
pop
pop
test
pop
lock
or
mov
in
jle
aam
or
jg
rorb
inc
mov
mov
cmpsw
lods
adc
lods
pop
cmc
fidivrs
sbb
ss
loopne
leave
xchg
mov
sub
lea
or
xchg
ror
in
pop
xor
push
jg
in
data16
mov
mov
adc
test
mov
jle
pop
mov
xchg
jnp
jnp
mov
push
lea
pop
out
js
xor
sahf
mov
inc
add
add
pop
and
rcrl
ret
push
jp
and
pushf
loop
inc
cmc
dec
push
xchg
enter
jg
ljmp
je
leave
shll
dec
repnz
dec
outsl
and
add
in
loopne
pop
lea
sub
sub
inc
movsb
push
mov
inc
push
jge
or
insb
xor
xor
out
aam
cmc
negl
jne
rcrb
loopne
imul
sbb
jmp
mov
arpl
push
test
cmp
jge
sbb
sub
mov
nop
lea
mov
ret
lods
das
push
xchg
sti
mov
mov
mov
imul
mov
mov
dec
push
in
gs
aad
inc
dec
scas
fnstcw
xchg
xchg
shll
or
xchg
push
sbb
lahf
stos
in
jle
pop
cmc
sub
pop
and
mov
cwtl
cmpsb
imul
es
pop
or
stos
sbb
movsb
call
jge
push
add
mov
les
or
and
and
fmull
xchg
rclb
sti
pop
xchg
andl
cltd
mov
jae
shlb
pop
push
imul
jb
pop
or
repz
jl
ret
adc
xor
and
popf
arpl
sbb
inc
jo
pop
addb
les
rcl
mov
imul
rcrl
mov
movsb
cltd
and
ficomps
jmp
xchg
adc
push
jnp
xchg
push
and
or
jo
shlb
xchg
sbb
adc
add
add
jp
xor
push
push
test
mov
fwait
aam
inc
les
jbe
mov
inc
push
rcrb
aam
inc
fisttpll
mov
mov
daa
rcrb
or
mov
push
test
xor
and
xor
dec
xchg
mov
iret
sub
push
aam
stos
jo
hlt
or
add
add
xchg
cltd
and
adc
es
mov
outsb
sbb
jg
outsb
sub
jns
adc
dec
clc
xlat
incb
loopne
inc
pop
sarl
cmp
sbb
ljmp
iret
mov
inc
add
icebp
out
cmpsl
cli
rolb
icebp
jl
sbb
dec
loope
cmp
subb
mov
sbb
dec
gs
and
mov
mov
jge
in
dec
add
out
dec
bound
cltd
insb
cmpsb
jb
or
das
cmp
xchg
sahf
mov
fcmove
adc
xchg
mov
add
jge
stos
cmp
int
push
outsl
pop
imul
lret
mov
lds
pop
mov
and
push
add
cltd
fcoml
pop
test
jnp
and
les
repz
mov
xchg
push
enter
mov
ja
addr16
xchg
inc
and
inc
mov
mov
pushf
or
test
adc
test
add
hlt
xor
fcmovb
or
outsl
rol
in
aas
inc
movsl
mov
aas
jl
jae
lcall
sbb
imul
stos
pop
sbb
inc
cmc
mov
mov
shlb
mov
sub
dec
nop
mov
or
cmpsb
adc
scas
and
push
ljmp
ss
pop
push
mov
ja
xor
cmc
fnstenv
in
xchg
cltd
cmp
lret
mov
jecxz
adc
mov
insl
movsl
mov
fiaddl
cmp
adc
pop
fildll
mov
fcoml
stos
sarb
push
or
mov
lds
mov
push
ss
jmp
dec
mov
jo
sub
aaa
lcall
inc
jmp
jl
mov
in
cld
ret
cltd
xchg
jmp
mov
xchg
outsl
add
dec
orl
ds
loope
sbb
mov
sub
push
and
lret
jle
jno
mov
test
lcall
loope
lret
pop
add
adc
jmp
xchg
call
adc
dec
movsb
inc
ret
lods
stos
mov
test
inc
dec
dec
std
mov
mov
jb
fmull
fwait
mov
jbe
ljmp
inc
sub
test
xor
inc
push
outsb
jl
pop
stos
cs
dec
sbb
jle
mov
and
enter
add
pop
lret
mov
inc
dec
mov
adc
lahf
aad
ror
mov
enter
cmpb
push
out
sahf
mov
pop
xchg
lcall
inc
es
xchg
loopne
daa
scas
or
aad
sbb
scas
les
test
xchg
test
aad
add
popa
enterw
and
xchg
sahf
mov
adc
inc
je
pop
sbb
mov
lds
or
xchg
mov
xchg
push
sahf
and
outsl
das
sub
outsb
loop
rcrb
cmpsl
xor
icebp
adc
aas
ljmp
test
push
bound
xchg
hlt
ret
jb
xchg
sti
out
ljmp
push
mov
into
mov
add
outsl
pop
in
mov
add
xchg
pop
iret
stos
xlat
xchg
dec
xchg
xlat
stc
rclb
imul
push
lcall
stos
jns
outsb
dec
add
jns
xchg
adc
or
xchg
xchg
ja
mov
lahf
inc
outsl
cltd
pushf
in
aad
xor
test
cmp
aas
add
mov
icebp
push
xchg
mov
stos
dec
insb
hlt
pop
cmp
dec
add
push
cmc
fmulp
mov
push
cmp
call
and
int3
mov
rol
jae
push
jbe
pop
popl
and
out
push
std
mov
jbe
pop
inc
inc
and
fisubrl
inc
inc
jge
dec
mov
or
push
push
mov
sub
xor
mov
pop
and
mov
pop
repnz
mov
sub
popf
in
jl
test
and
aad
mov
stc
jp
outsl
ret
stos
and
fdivrs
jg
mov
in
mov
sub
mov
xor
insb
inc
daa
jl
inc
cmp
jg
push
in
fisttps
scas
and
mov
pop
mov
adc
add
or
and
into
cli
dec
ds
xor
dec
out
aas
cmp
loopne
mov
add
add
fwait
cltd
pop
or
cmp
test
into
movb
push
mov
lret
sbb
fcmovbe
sbb
mov
je
mov
stos
mov
nop
cltd
fs
xchg
repnz
adc
mov
aad
mov
shlb
orl
es
popa
mov
mov
mulb
cmc
jbe
loope
pop
jl
in
cmpsb
pop
sub
sbb
jle
pop
dec
inc
aam
shl
jge
enter
and
xor
push
cmp
adc
adc
cmp
mov
push
push
or
sub
leave
mov
and
fwait
mulb
loop
repnz
fidivrs
or
mov
or
fs
adc
sbb
adc
cmpsb
int
xchg
clc
add
add
inc
arpl
in
movsl
stos
jne
xchg
movsb
int
out
aaa
popf
and
xchg
movsl
mov
popf
stos
dec
cmp
add
rep
jno
roll
pop
call
das
das
and
xchg
ror
lret
es
cmp
xchg
xchg
outsl
xchg
mov
pop
lret
roll
sbb
or
inc
mov
pop
ss
adc
out
dec
mov
or
sahf
inc
out
and
iret
or
fimuls
inc
xor
stc
adc
jne
sub
aad
jo
repnz
sub
mov
lahf
mov
fistpll
lds
fmulp
test
sbb
xchg
lds
insl
inc
mov
pop
inc
sub
test
cmp
jns,pt
dec
adc
xchg
insl
mov
inc
jge
sbb
outsb
mov
ret
mov
stos
xchg
sbbb
jae
cli
xor
sysret
pushf
dec
or
mov
fs
mov
inc
sbb
ljmp
adc
and
mov
mov
xlat
mov
dec
and
ret
setg
cmpl
repnz
mov
idivb
rolb
pop
sub
repnz
popf
inc
and
dec
and
push
adc
adc
inc
lock
inc
gs
adc
dec
mov
test
fcmovnbe
aaa
lahf
mov
mov
popf
aas
insl
mov
sub
cmpsb
mov
jne
cmp
sbb
push
mov
sarl
ljmp
mov
div
xlat
iret
nop
or
sub
jle
loop
rcl
cmp
xor
cltd
mov
insb
mov
mov
pop
mov
dec
mov
adc
and
arpl
mov
outsb
lea
jecxz
push
sbb
fdivl
jns
or
cmp
push
dec
or
xor
adc
leave
pop
lock
xchg
pop
cld
xor
dec
mov
mov
ss
outsl
stos
in
insb
loope
rolb
in
clc
dec
sahf
into
ds
outsb
mov
xor
add
pop
sbb
sub
out
and
push
push
aad
addr16
fistpl
add
out
mov
pop
ret
push
stos
jns
test
in
lods
inc
imul
push
sub
push
sbb
insb
out
pop
mov
shrl
and
adc
aad
sbb
add
sarl
call
hlt
adc
push
adc
jnp
sub
push
adc
inc
shlb
stos
xor
jg
std
cmp
push
jp
jmp
mov
mov
mov
test
mov
pop
inc
push
jge
movsl
jecxz
ret
ret
lret
subl
enter
pop
sarb
pop
and
xchg
test
pushf
test
mov
xor
ret
mov
xchg
sti
fidivrs
mov
in
in
movsl
sbbb
add
popf
mov
inc
and
or
movsb
addr16
movsb
xchg
adc
mov
cli
aaa
sbb
inc
xchg
insl
insb
xor
clc
stos
in
sub
shlb
mov
cltd
and
aaa
pop
adc
mov
dec
push
js
outsl
xchg
lea
jo
xchg
arpl
loope
dec
rclb
sarb
mov
roll
insb
test
dec
cmpsb
mov
xchg
pop
enter
test
adc
cmp
pop
mov
pop
lret
and
xor
lahf
lret
dec
adc
rclw
cmpsb
pop
mov
xchg
aaa
stos
loop
xor
jne
mov
lods
push
stos
pop
test
mov
push
clc
pushf
pop
jb
add
dec
inc
imul
xor
dec
bound
pusha
mov
mov
jp
mov
sbb
jmp
movsb
repz
dec
mov
add
mov
iret
and
pop
push
add
mov
xchg
sub
sbb
xor
addr16
loop
aad
mov
push
pop
push
fbstp
sbb
push
pusha
stos
ret
call
mov
xor
ljmp
dec
pop
mov
sub
movsl
push
adc
mov
add
xor
mov
jo
add
daa
sub
pop
bound
xor
lods
sub
xchg
mov
loop
sbb
xor
movsl
fdivrs
and
mov
cmc
adc
lcall
arpl
mov
lahf
pop
mov
xchg
jmp
fsub
sbb
icebp
je
jl
cltd
ret
xchg
and
mov
sbb
nop
test
or
enter
inc
jno
dec
push
jle
sub
push
je
mov
cmc
mov
adc
sbb
mov
imul
adc
lods
jecxz
test
cltd
test
fcoml
or
lock
add
adc
shrb
inc
dec
push
mov
jbe
push
cmpsl
push
sbb
jge
lock
sbb
or
push
lods
cli
xchg
cltd
push
inc
mov
add
add
movl
mov
fst
scas
jmp
dec
cld
pusha
out
xchg
lds
stos
push
cltd
in
test
repz
loopne
insb
lret
adc
int3
mov
mov
and
jmp
mov
pop
hlt
cmp
jp
add
mov
or
cs
xchg
mov
arpl
std
leave
and
loop
in
mov
xlat
aam
push
sbb
cltd
in
push
loop
jns
out
fwait
sahf
stos
pop
insl
cmp
fildl
sbb
pop
subb
cmpsb
and
test
add
cmpb
cmp
int3
xchg
xchg
leave
and
jge
pusha
ds
cld
fucomp
or
adc
mov
mov
add
mov
cld
subb
lea
ror
popa
sub
push
fsubs
push
pshufw
push
pop
push
or
lcall
std
ds
popf
stos
jbe
push
mov
fdivr
mov
scas
hlt
sub
add
xchg
adc
dec
fstl
ljmp
and
mov
shufps
test
jmp
ds
xchg
dec
pusha
and
insl
xor
cli
aad
cmpsb
in
inc
fstps
inc
out
xchg
dec
js
out
enter
shrb
test
outsb
aam
sbb
lods
xchg
aas
rep
xchg
decl
jge
mov
aas
push
push
test
ljmp
fwait
sahf
sbb
mov
add
cmpsl
aaa
pop
mov
push
nop
lds
xchg
bound
stc
xchg
jno
or
scas
sub
enter
incb
imul
movsl
mov
loopne
add
in
xchg
dec
les
mov
in
mov
or
mov
cmp
pushf
pop
mov
pushf
das
push
push
pop
into
out
xchg
lods
or
pushf
cli
movsb
mov
notl
loope
pusha
push
lock
xchg
lcall
jnp
and
out
mul
xlat
mov
subb
push
or
sub
testl
nop
in
fwait
rcrl
and
push
mov
test
mov
lahf
sub
sub
lret
mov
mov
xchg
scas
and
lret
pop
xchg
stos
xchg
push
shrb
jne
push
push
or
popa
cmp
lret
or
cli
and
sub
and
xor
shr
lock
xchg
mov
xchg
enter
clc
inc
hlt
test
dec
xchg
nop
pushf
lret
mov
mov
outsl
sarb
sti
push
test
js
pop
pop
outsl
xchg
cmpsb
jbe
stc
adc
jae
sbb
mov
add
aaa
or
mov
mov
jo
adc
cltd
repnz
lods
pop
and
mov
aad
stc
leave
jecxz
mov
xchg
out
jb
outsl
stos
sub
inc
mov
cld
mov
inc
cld
sahf
ret
cmpsb
push
mov
jae
ja
int
mov
xor
mov
jecxz
xchg
icebp
repz
dec
mov
pop
test
cld
or
mov
pushf
testl
xchg
in
ljmp
loope
stc
stos
inc
add
and
adc
mov
je
pusha
pop
sbb
out
sbb
jo
iret
ja
sbb
lods
xor
jmp
cld
pop
int3
and
cmpsb
sahf
aaa
dec
rol
ja
xchg
adc
xchg
mov
cmpsb
mov
std
scas
int
sbb
sbb
dec
dec
inc
lds
leave
pushl
mov
mov
sub
dec
ja
xor
dec
mov
inc
jb
and
lret
sub
fsubs
rorb
sub
in
insb
js
mov
push
imul
fnstenv
dec
add
mov
jno
xchg
data16
arpl
jle
jne
mov
lcall
cs
scas
ss
xor
pop
in
jae
fildll
and
int3
mov
movsl
adc
sub
push
and
mov
pop
ss
cli
cltd
gs
in
sbb
mov
xchg
dec
insl
enter
arpl
cmc
sbb
dec
cmp
jp
push
stos
aam
dec
adc
je
pop
push
cmp
mov
add
insl
stos
pop
repnz
icebp
sub
mov
or
xor
xchg
sahf
mov
cli
inc
xchg
mov
jg
mov
mov
ss
mov
xchg
pusha
fistpl
out
int
or
push
mov
sbb
cwtl
insb
or
ret
push
dec
cli
jb
fwait
mov
aad
pop
arpl
test
repnz
fadds
jle
ss
push
mov
pop
test
gs
inc
sbb
jne
xor
cmp
xchg
mov
pop
xor
stos
ud1
mov
or
sti
inc
pop
flds
ret
les
ret
sub
repnz
in
inc
mov
popf
ljmp
test
xor
cli
psrlw
pop
jo
xchg
lcall
xchg
sub
xchg
dec
or
cmp
mov
je
je
pop
mov
push
jg
imul
xchg
cmp
inc
js
cld
stos
in
xor
cmp
or
fisubl
mov
les
daa
ret
dec
jno
lods
push
cmp
mov
ret
add
aam
sbb
lods
les
loopne
sbb
adc
ret
or
movsb
add
push
mov
lret
push
inc
mov
xor
push
shll
cmp
lret
in
pop
test
imul
imulb
scas
es
scas
dec
dec
pop
pushf
outsl
sub
outsl
push
leave
pushf
jle
je
or
xor
pop
lret
push
lret
adc
test
es
int3
clc
xor
es
cs
mov
mov
pop
jl
jnp
test
out
inc
or
fisttpll
mov
xor
mov
push
es
lods
movsb
fsubrs
cmp
incb
call
sbb
leave
data16
add
pop
lcall
sahf
jl
xchg
gs
add
pop
add
or
fidivs
xor
xchg
cmp
imul
dec
push
push
mov
dec
xor
jae
mov
jmp
jae
pusha
sarl
sarb
movsl
sar
mov
pop
adc
sbb
dec
xchg
loope
popa
cli
cmp
add
or
push
enter
pop
mov
sahf
sar
sub
into
divl
mov
push
in
or
imul
mov
mov
cmp
lea
push
rolb
pop
and
pop
and
xchg
xor
mov
pop
rcll
hlt
mov
jg
clc
mov
mov
scas
js
call
adc
and
loop
inc
stos
cmc
xor
lea
lea
popf
jmp
lea
dec
out
push
mov
dec
out
mov
or
mov
cmpsb
shll
scas
add
dec
sub
in
and
sub
or
into
jno
push
shll
jle
pop
sub
loope,pn
pop
push
into
cmc
clc
decl
movsb
call
sbb
addr16
pop
push
mov
rorb
mov
enter
push
lret
insl
hlt
lea
cmpsb
inc
jge
fsts
into
shl
data16
js
dec
dec
push
sbb
mov
iret
into
std
xchg
pop
dec
dec
push
xchg
lock
jae
pop
mov
incb
push
jmp
ret
cmpl
cmc
adc
mov
adc
push
cmp
int3
mov
shlb
and
mov
imul
jns
sbb
add
rcll
jb
sub
fisubs
leave
mov
pop
xor
jns
jae
arpl
lods
mov
cmpsb
dec
inc
adc
fmuls
ja
xor
mov
insb
or
mov
enter
repz
jb
xor
jb
dec
xchg
imul
scas
dec
pop
mov
sbb
mov
add
push
out
adcl
and
sub
rcr
or
and
in
dec
sarb
dec
push
pop
daa
and
or
mov
inc
es
xchg
cltd
add
imul
mov
lods
adc
mov
das
fwait
repnz
imul
adcl
cmc
cwtl
xchg
pop
push
add
or
jecxz
lock
js
fistpl
xchg
cmp
pop
nop
jb
pop
movsb
jnp
lock
or
sbb
and
inc
mov
xor
bound
aad
nop
xor
lock
test
shrb
add
sub
sbb
and
sub
aam
pop
push
ds
shrb
repnz
pop
adc
insl
cmp
cmpsb
and
mov
mov
add
sub
in
insl
sub
xchg
inc
test
bnd
lods
dec
mov
jno
sbb
xor
and
icebp
adc
repz
or
jnp
xor
add
psrlq
adc
push
sub
xlat
xor
pop
xor
push
push
movsb
cmp
xor
sbb
mov
cli
mov
fbstp
outsl
push
push
in
pcmpeqw
hlt
mov
or
lods
pop
pushl
adc
subl
cmp
lret
imul
dec
out
aaa
cmp
pop
in
push
cmp
int
dec
cmpsb
jmp
add
fcmovu
ljmp
sahf
and
adc
aad
mov
out
imul
sub
pop
jo
lods
cmp
mov
jge
out
add
bound
and
mov
xor
mov
inc
xchg
mov
sub
and
inc
stos
pop
xchg
xchg
ljmp
int
mov
cmp
loop
jae
fstpl
dec
push
in
xchg
jo
mov
and
outsb
insb
jp
add
call
cmpsb
adc
ljmp
mov
sti
add
mov
adcl
out
adc
pop
in
enter
push
hlt
call
mov
and
xor
jle
dec
loope
mov
dec
lea
xchg
pop
push
mov
ds
or
xchg
mov
je
jbe
cmp
scas
push
push
popa
shll
sbb
imul
std
mov
xor
push
dec
xor
xchg
je
iret
pushf
cwtl
les
add
add
loope
jb
xchg
mov
aaa
cmp
push
and
pop
repz
cld
pop
insb
add
call
sbb
test
mov
insb
jbe
pop
add
xchg
imul
jnp
inc
insb
mov
shll
ljmp
sbb
movsl
pop
push
faddl
stos
xor
add
repz
or
out
mov
loope
mov
jo
pop
pop
pop
hlt
rorb
call
ret
push
aaa
sbb
pop
sbbb
cmp
mov
inc
add
or
js
push
inc
dec
imul
push
insb
sub
lret
shrb
or
popf
lds
arpl
data16
dec
sub
xor
cli
jne
cmp
stc
cmp
bound
es
repz
nop
xchg
and
xchg
sarl
daa
mov
enter
push
pushf
or
sbb
jb
xchg
sbb
push
daa
ds
mov
mov
jecxz
jnp
push
pushl
mov
inc
out
cmpsb
shll
lods
jae
movsl
cmp
lahf
sti
lds
pusha
pop
fsub
lcall
rclb
fdivrs
mov
xchg
stos
mov
add
cs
push
or
dec
jmp
sbb
out
daa
addb
mov
xor
faddl
inc
aad
and
int
int
jecxz
inc
dec
xchg
mov
jmp
lret
aas
inc
dec
adc
lods
ret
push
mov
sbb
popf
push
pop
mov
cmp
mov
pop
add
aad
push
mov
cld
or
or
test
and
xlat
add
ret
add
cld
jecxz
sub
fisttpll
pop
jnp
jbe
mov
mov
push
cmpsl
jno
adc
aam
movsl
jno
enter
adc
sub
rorl
inc
pusha
lods
jo
xchg
mov
movsl
mov
int3
in
inc
push
dec
fidivrl
cmpsl
lea
and
fbstp
and
shlb
xor
sbb
movsb
or
leave
insb
inc
xor
cmp
inc
sbb
jle
out
dec
gs
inc
imul
stos
test
pop
test
aad
adc
cltd
mov
mov
fsubs
imul
out
iret
lock
xor
inc
cli
mov
and
mov
cmpsb
cmp
daa
sarl
clc
or
push
and
xor
adc
fbstp
data16
xor
xor
xchg
xor
add
and
ret
cmp
mov
pusha
xchg
mov
inc
pusha
inc
aas
je
ret
sub
push
cmp
mov
jne
mov
mov
pop
das
jmp
push
xor
mov
mulb
in
jg
mov
xchg
test
popa
or
cmc
dec
jp
out
ja
sub
sub
jae
pushw
test
dec
push
mov
jne
xchg
sub
xchg
sub
inc
xor
mov
leave
inc
aad
push
into
aad
cmp
nop
cltd
sbb
push
mov
xor
jae
or
push
cmp
addl
jb
jne
popa
inc
push
roll
int3
jmp
sahf
pop
in
int3
andl
fst
xor
push
ss
cmc
pop
cmp
in
mov
or
xchg
ljmp
cmp
stos
hlt
leave
cmp
mov
into
or
and
nop
xchg
mov
or
push
insb
jo
adc
mov
cmp
aam
sub
inc
push
jle
xchg
roll
adc
jmp
jl
mov
sbb
mov
mov
mov
rcrb
js
sub
xor
pop
mov
mov
pop
inc
and
mov
cmp
pusha
enter
sahf
fldt
inc
push
stos
push
xlat
and
rcl
lock
add
in
add
mov
movsb
bound
inc
test
xlat
inc
mov
xor
adc
popf
and
and
sub
cmc
popa
into
nop
insb
dec
mov
mov
loop
aas
test
fidivrl
cld
adc
mov
loop
dec
cmp
cmpl
lret
jle
pop
mov
xchg
sbb
sbb
jecxz
loope
ret
push
pop
mov
sbb
inc
pop
push
pop
frstor
lret
je
cli
mov
je
aam
stos
sbbb
leave
jae
lea
xor
fwait
cmp
cmp
test
notb
adc
jnp
repnz
scas
pop
dec
mov
adc
ja
sub
in
mov
push
clc
xlat
push
out
pop
push
lods
sub
dec
push
push
push
fs
sbb
adc
icebp
into
xchg
push
ljmp
enter
push
inc
mov
pop
or
add
adc
xchg
aad
xor
test
push
adc
push
sub
push
fcmovne
mov
sbb
push
mov
fstpt
and
in
sub
add
or
cmpsb
test
arpl
adc
jmp
mov
orb
bound
test
sahf
fstpt
jle
subb
gs
xchg
lcall
add
inc
sub
aam
hlt
mov
pop
and
cwtl
repz
outsl
mov
adc
cmc
dec
mov
sub
push
es
jg
cmc
mov
js
xchg
mov
test
lret
xor
push
jle
pop
inc
mov
mov
aaa
or
into
cs
cmp
mov
add
pop
xor
sub
das
pushf
insb
and
or
movsl
cmp
mov
test
cmpsb
mov
and
loop
xorb
push
and
js
lret
cmp
shr
push
jge
aad
inc
dec
dec
dec
and
push
bound
sub
aam
mov
repnz
ret
adc
in
or
pop
adc
cmp
or
rolb
in
sub
or
imul
in
test
addr16
in
jo
test
enter
ret
mov
ds
inc
pop
xchg
rcll
adc
in
mov
cmp
rclb
cmpl
mov
in
lret
xchg
mov
xor
out
adc
int
and
inc
or
xor
xchg
mov
and
pushf
mov
sti
push
fstl
xchg
jns
out
cmp
int3
mov
in
sbb
jge
ds
xor
popl
popa
jp
xchg
adc
into
mov
jle
mov
negl
jle
add
dec
xchg
sbb
test
xor
mov
push
jno
ss
add
lret
adc
dec
dec
movsl
orl
add
jbe
pop
daa
fisubs
xchg
jbe
movsl
ja
aad
push
out
sbb
mov
xor
cmpsl
lods
adc
dec
pop
shlb
xchg
out
movsb
mov
xchg
aam
ds
mov
in
outsb
xchg
sti
jae
jnp
xor
cmp
mov
pushf
xlat
in
xchg
aaa
stos
mov
or
jp
jg
lods
jmp
pusha
mov
inc
push
push
popa
pop
out
jnp
test
test
mov
cmc
subb
jae
xchg
ja
pusha
rcrb
pop
xor
jo
insl
sub
xchg
inc
scas
jo
dec
ret
sti
fildl
mov
jne
cmp
mov
cmp
hlt
mov
pop
test
adc
je
lret
stc
popf
xchg
and
mov
xor
movsl
imul
rcrl
cmp
repz
dec
pop
fists
data16
adc
jge
push
jbe
insb
push
outsb
sbb
popa
mov
dec
clc
add
notb
fadds
lret
cmovnp
lods
and
push
testb
jno,pn
and
lret
inc
into
filds
int3
pop
pop
fwait
int3
jg
ds
xchg
outsl
test
add
inc
mov
repz
pop
mov
int3
shll
mov
icebp
xchg
arpl
stc
jno
lahf
xchg
loopne
sub
sbb
jns
sbb
dec
or
es
dec
into
leave
mov
push
repnz
mov
les
repnz
ficoms
jge
insl
imull
rcrl
test
jle
stc
jmp
adc
sub
adc
out
in
jno
or
insb
or
cmp
test
imul
jns
popf
ds
fsubrs
or
inc
les
push
test
cmp
mov
push
pop
cmpsb
cmp
or
inc
fs
xchg
push
and
scas
ficoml
popa
mov
test
in
xor
mov
jb
cmp
jb
push
add
lret
in
cmp
in
pop
movsl
int3
cmc
cmpsl
out
into
rcrl
cs
pop
test
negl
cli
incb
dec
clc
arpl
add
fnstsw
and
mov
dec
adc
mov
cld
pop
add
or
inc
cmp
je
testl
mov
push
ds
mov
sub
test
fistpl
and
cmc
push
movsl
mov
sub
mov
jmp
jg
bound
xchg
adc
loopne
test
mov
xadd
jmp
adc
push
mov
mov
je
movsb
aas
xor
test
fimull
jle
pop
inc
mov
out
push
adc
or
xchg
xchg
pop
sbbb
jo
aam
fimuls
add
pop
sarb
stos
dec
push
jecxz
scas
icebp
add
mov
sbb
mov
push
mov
or
fucom
movsb
data16
inc
pushl
jmp
mov
mov
imulb
popf
dec
adc
ficomps
js
pusha
xchg
jae
mov
inc
lock
cmp
repz
jbe
repnz
sbb
add
xor
outsb
data16
fistps
rorl
sub
testl
pop
pop
push
mov
xlat
scas
das
test
push
mov
xchg
mov
inc
sbb
pushf
jnp
in
pushf
xchg
dec
rcl
sbb
xor
sub
imul
rolb
jno
add
rorl
add
sarl
mov
fwait
jns
enter
xor
and
data16
leave
shlb
and
das
mov
daa
inc
dec
push
imul
jle
les
dec
aad
jbe
sub
push
pop
push
and
mov
add
add
mov
orl
sbb
leave
insb
mov
mov
mov
and
shrl
or
into
fistl
ljmp
lcall
incl
xchg
imul
enter
cmc
ret
leave
out
mov
insl
add
sub
mov
bound
ss
imul
xchg
or
fiadds
lcall
cmp
dec
lahf
leave
mov
xor
push
xchg
mov
mov
lret
ror
cmp
into
pop
xor
leave
mov
xchg
iret
popa
fsubrs
frstor
mov
arpl
xor
leave
pop
jae
mov
sbb
lahf
adc
jle
mov
mov
fnstenv
iret
mov
sub
rcrb
scas
popf
inc
jecxz
and
rcrb
jge
enter
push
mov
rorb
xorl
push
daa
pop
add
cli
addr16
in
lahf
lret
dec
repnz
cmp
loopne
dec
mov
mov
nop
dec
xchg
mov
mov
push
mov
out
jne
icebp
push
sub
popf
mov
in
adc
and
out
pop
add
cmp
int
sar
cmp
xor
mov
arpl
adc
sub
xchg
sub
jge
sbb
push
test
dec
mov
cmovo
xchg
sub
js
aas
xchg
or
sub
and
clc
xchg
mov
ret
or
dec
scas
lret
shl
mov
loop
int3
xchg
insb
xchg
dec
and
adc
and
add
inc
sbb
add
add
sahf
mov
and
jbe
inc
inc
lea
std
daa
xchg
popf
mov
out
jnp
pusha
in
mov
in
or
cmpxchg
sub
xor
add
addl
or
push
stos
dec
xor
mov
pushf
js
pop
sarl
mov
sarb
daa
cmp
sub
std
lods
push
mov
sbb
xor
inc
ret
and
cwtl
rorl
sub
popa
mov
xor
cmpsl
sub
push
movsl
cmp
loope
inc
push
int3
jno
xchg
sbb
loopne
aaa
sbb
and
jl
clc
or
mov
inc
aad
mov
adc
mov
pusha
lods
push
lcall
sbb
loope
outsb
sub
sbb
or
cld
in
pop
call
mov
stos
daa
in
lds
add
pop
jo
jp
or
jg
xchg
shrl
dec
test
adc
inc
sub
out
loopne
mov
ret
jne
push
mov
push
xchg
xchg
inc
stos
adc
xchg
xor
mov
mov
jmp
std
inc
or
push
enter
jae
rolb
cmpsb
dec
outsl
sbb
pop
cli
test
aam
shll
rol
je
push
and
xor
pusha
fs
push
jns
shrb
adc
fistpl
sub
push
adc
add
push
sbb
jle
inc
mov
and
pop
cmp
rcrl
sub
xchg
shlb
push
out
cmp
push
je
jecxz
outsb
mov
arpl
cmp
inc
mov
daa
dec
jo
scas
jmp
movsl
push
test
pop
aas
add
addr16
cltd
in
repnz
inc
xchg
mov
sbb
sbb
out
lods
or
xchg
dec
dec
adcl
pop
imul
mov
cmc
dec
out
fnstsw
inc
test
pop
dec
sub
cmp
test
jp
mov
jge
jne
sbb
jne
mov
cmp
cwtl
pop
aas
cmp
sbb
pop
adc
repz
cmp
dec
add
ficomps
in
cmp
js
inc
shll
movl
jmp
faddl
push
lock
test
push
mov
push
cli
xchg
cmp
pop
inc
and
dec
sbbl
scas
fisttpll
stos
mov
arpl
les
cmp
arpl
leave
xchg
cld
lret
aam
lcall
rcrb
scas
mov
pop
int3
add
cmp
mov
movsl
xor
add
xchg
lret
test
push
iret
mov
mov
push
xchg
pusha
inc
jecxz
out
repz
xor
pop
call
lock
dec
xor
pop
fbld
adc
xor
sbb
or
cs
and
in
fimuls
and
jge
dec
sti
gs
cmp
xor
mov
das
enter
jg
mov
les
dec
test
nop
lcall
pop
hlt
lods
test
add
mov
mov
adc
addl
inc
mov
xor
sub
cld
mov
insb
leave
lods
pop
xor
insb
push
xchg
cmp
mov
dec
out
pop
mov
rorb
cmpsb
ror
jmp
gs
iret
mov
cmpsl
adc
ljmp
sti
inc
mov
pop
mov
and
xchg
jae
sahf
lods
lods
mov
fwait
pop
add
add
sti
push
jge
pushf
inc
mov
push
imul
movb
cmpsl
xchg
jnp
int
data16
lock
xchg
ret
sub
mov
inc
pop
xor
ja
jecxz
add
enter
nop
divl
and
mov
cmp
cmpb
xor
adc
enter
in
insb
test
lds
xor
push
mov
stos
mov
sbb
mov
out
movsb
adc
ror
add
inc
push
mov
test
sub
push
outsl
mov
fisubrs
and
add
mov
jb
pop
cmp
mov
lods
pop
and
pop
add
mov
xlat
mov
or
fwait
lahf
daa
test
lcall
mov
mov
lret
bound
fidivrl
sbb
inc
xchg
inc
sub
jl
sahf
sbb
ds
mov
push
cmpsb
cmp
psllw
xlat
divl
out
sub
pop
push
data16
int3
dec
mov
lcall
les
loopne
loopne
enter
add
stos
lcall
fiadds
cld
mov
push
add
jno
movsl
dec
movsb
insl
mov
mov
cld
cmp
mov
out
adc
out
fsubl
insl
ljmp
jb
inc
inc
and
lods
aaa
push
cld
mov
adcb
out
cwtl
add
sbb
mov
cmp
add
sub
lods
xor
mov
mov
sub
xchg
mov
rclb
pushf
lods
movsb
jo
sub
cmp
sbb
sarl
jle
daa
mov
xchg
cli
mov
add
xor
mov
movsb
mov
cld
mov
fstl
out
dec
mov
scas
xchg
pop
mov
pop
cmovo
cmc
add
fimuls
cmp
jo
xor
jns
arpl
in
mov
adc
lods
cli
push
je
adc
sub
fildl
jecxz
xchg
cmp
dec
in
sub
ds
and
mov
mov
rorb
ja
test
dec
gs
addb
mov
jg
outsb
insl
jp
popaw
and
sub
in
adc
inc
mov
mov
sbb
mov
test
int3
sbb
fdivs
and
mov
dec
or
testl
lcall
decl
or
cli
xchg
or
or
push
ja
pop
mov
sarl
rcll
jecxz
inc
hlt
orl
push
ds
mov
jmp
sbb
mov
pusha
lock
sarl
pop
xchg
mov
mov
scas
jmp
int3
imul
inc
lcall
bound
and
push
mov
faddl
lods
dec
int3
add
insb
push
cmp
pop
sub
add
push
mov
pushf
and
adc
add
int3
ficoml
es
pop
pop
cmpsb
push
std
aam
mov
mov
stc
add
int
and
dec
frstor
add
loopnew
inc
xchg
ja
enter
xor
in
sbb
xorb
cmp
lcall
mov
cmp
pushf
adc
mov
nop
pop
xor
cwtl
lret
cmpsb
out
das
shr
lock
push
xor
filds
add
pop
mov
mov
or
imul
mov
jg
nop
outsb
dec
rclb
xorb
sbb
lods
mov
inc
pop
push
fs
sahf
cmp
cwtl
pop
mov
lea
imul
mov
shll
in
cltd
push
jns
adcl
fstpl
popf
test
push
aas
xchg
push
into
push
and
fadds
notb
or
add
mov
or
fbstp
loop
into
push
ljmp
mov
ljmp
jecxz
out
daa
sub
inc
xchg
push
ss
sbb
cmp
xor
lret
dec
icebp
adc
mov
add
xchg
mov
push
mov
cmp
lcall
add
inc
fisttpll
ficoml
mov
add
pop
adc
and
inc
and
int
daa
imul
movsl
pushf
inc
mov
out
xor
gs
and
call
or
das
std
mov
pop
sahf
test
int
mov
xchg
push
stos
mov
dec
in
das
xchg
into
cmp
xlat
cltd
shl
sti
mov
sti
jo
shrb
imul
out
mov
shll
or
sub
ljmp
sbb
lods
fcmovb
loopne
mov
cmp
mov
cmpsb
jmp
out
sti
sbb
adc
adc
xchg
lret
movsl
mov
push
pop
arpl
mov
daa
test
lret
add
jecxz
mov
stos
fiadds
sbb
das
sti
rcrb
lret
cmpb
mov
dec
lret
sub
je
testl
leave
insl
push
gs
pop
aaa
ret
push
daa
jmp
mov
icebp
out
mov
in
jb
jnp
cld
xchg
adc
xchg
jl
shrl
lods
repz
scas
mov
mov
adc
cmc
cmp
sbb
daa
in
pop
ret
and
out
pop
pop
or
stos
mov
pop
ja
scas
push
sub
adcl
aam
loopne
cltd
cld
and
mov
mov
in
mov
repz
cld
repz
negb
test
sbb
pop
test
adc
mov
jae
mov
iret
add
mov
mov
addr16
push
and
mov
and
jnp
mov
jl
adc
adc
cli
dec
je
pop
adc
cmp
adc
or
lahf
jne
mov
sahf
adc
dec
push
adc
and
push
mov
mov
cmp
pop
and
push
jmp
add
mov
or
jmp
pop
stos
fcomi
mov
push
xlat
adc
xchg
xchg
imul
jecxz
jb
clc
jmp
cmp
mov
mov
xor
jbe
and
mov
inc
lea
cmp
gs
xchg
call
add
test
aas
cli
addr16
or
ja
xchg
mov
xor
fdivs
movsb
pop
or
aad
fbstp
push
inc
clc
xor
js
es
and
push
and
xchg
adc
xor
inc
scas
aad
mov
mov
fsubl
xor
fcoml
pushf
dec
rcrl
xchg
jbe
fs
push
sti
or
xchg
lods
sbb
and
and
sub
xchg
mov
ret
jge
je
lds
lods
ds
shrl
or
mov
adc
fcomp
add
sbb
push
mov
out
xor
movb
int
add
sti
xchg
mov
int
xor
fcmovnu
call
out
int3
dec
sbb
adc
mov
cmp
dec
xchg
sbb
enter
mov
iret
push
xchg
mov
xchg
cli
shll
add
out
or
jge
or
leave
in
popf
lret
mov
lds
mov
cmp
aam
mov
mov
jno
xchg
ret
iret
cli
inc
adc
cmp
hlt
pop
mov
in
aas
cltd
stc
stos
pop
jnp
push
mov
mov
cwtl
mov
adc
xor
mov
negl
mov
pop
cmp
and
cmp
bound
sbb
out
xor
mov
jb
aas
push
inc
lock
xor
mov
outsb
sar
xchg
jmp
cmpsb
jle
iret
xchg
mov
or
mov
mov
ss
insb
sbb
jg
add
and
xor
xchg
pop
mov
pop
xor
push
aam
sub
push
mov
cmp
js
cmp
cmp
mov
jge
xchg
sub
pop
pop
push
sbb
stos
cmp
imul
xlat
sbb
cmp
mov
es
mov
hlt
cmc
cmc
mov
ss
mov
cmpl
push
pop
cmpsb
pop
and
outsl
movsl
push
and
or
sub
imulb
add
lock
pushf
loopne
mov
rcl
dec
fdivr
dec
ret
call
mov
adcb
pop
push
lods
and
cmpsl
or
cld
jle,pt
dec
lods
mov
and
cmp
into
ja
cltd
mov
fs
xor
dec
out
call
add
icebp
cmp
add
adc
push
sub
adc
pop
or
jno
test
inc
jp
sub
sbb
imul
in
test
sahf
lods
testb
xor
jae
mov
addr16
pop
mov
out
mov
mov
dec
push
mov
lea
push
push
xchg
test
inc
mov
call
sarb
in
push
dec
test
mov
inc
leave
xor
insb
pushf
cld
xchg
fnstcw
outsb
jae
adc
js
cmpsl
mov
fmul
mov
adc
and
add
aaa
addl
pop
xor
push
arpl
pop
push
pop
lea
mov
inc
cwtl
pop
gs
and
cmpsb
clc
mov
ds
push
mov
jne
mov
xor
jnp
jp
call
push
repnz
leave
insb
sarb
arpl
lods
pop
mov
xchg
dec
pop
lea
je
mov
enter
out
dec
loopne
mov
jp
js
inc
iret
mov
daa
push
mov
jl
cmc
mov
js
cltd
dec
lock
iret
sub
fsubrl
fwait
push
rcl
scas
movsb
push
push
xchg
mov
mov
outsb
ud0
fwait
out
jle
lods
cltd
xchg
pop
mov
lret
in
mov
imul
test
jb
ret
scas
fidivrs
pushf
into
pop
pop
pop
xchg
and
scas
or
sti
mov
and
push
out
rclb
mov
xor
adc
shl
mov
sub
mov
mov
jo
push
xchg
and
fidivl
sub
pushf
enter
insb
pop
dec
stc
push
and
xchg
dec
jmp
cs
xchg
fnstsw
pop
inc
fisttpll
dec
pusha
xchg
push
pushf
int3
enter
xchg
cmp
mov
jl
mov
fistpll
arpl
sbb
push
cmp
and
sub
lods
jp
sub
xchg
cmpsb
idivl
sbb
xchg
out
sub
push
lods
and
jo
add
repz
sahf
and
outsb
lds
dec
repnz
and
pusha
cmp
xor
mov
test
cmp
or
adcl
les
sub
cmp
push
mov
mov
fwait
and
sbb
dec
je
scas
ljmp
cmp
lock
mov
mov
rorl
mov
call
or
pop
inc
lcall
add
lahf
push
jns
cmp
mov
adcl
ljmp
mov
mov
rcrl
add
or
cmp
insb
xchg
mov
jg
jg
aaa
dec
mov
out
mov
lock
imul
clc
leave
outsl
pushf
popa
fsubl
roll
mov
push
adc
in
imul
ss
inc
lahf
std
arpl
fadds
scas
jo
cmp
addr16
adc
jns
cmpsb
mov
scas
adcl
sub
adc
cmpl
bound
mov
xchg
jg
pop
sub
inc
bound
out
hlt
mov
sub
add
add
fistl
enter
das
inc
xchg
sbb
mov
pop
xchg
or
sbb
inc
and
jno
cmp
leave
insl
ja
fistl
lock
call
jmp
into
fwait
addr16
insl
push
fldcw
insl
xchg
mov
inc
loop
jb
scas
sub
enter
pop
rcrl
inc
dec
pop
das
pop
jle
adc
in
dec
les
cmpsb
xchg
test
and
or
out
pop
mov
sbb
and
adc
fnstenv
aad
ret
in
xchg
mov
pop
test
mov
shrb
mull
jns
lcall
jle
xchg
cmp
test
dec
jo
lods
roll
push
daa
dec
ljmp
sub
dec
inc
mov
scas
jge
sub
jp
scas
xor
and
test
dec
mov
sbb
rcrb
or
sub
mov
out
ja
dec
insb
test
push
hlt
ficoms
aaa
scas
out
jno
fwait
xor
jbe
sub
push
xchg
mov
imull
test
or
loope
loopne
insl
jnp
jns
call
out
cli
stos
leave
mov
arpl
arpl
cmpsb
popf
int
jno
mov
fimuls
jmp
inc
out
addr16
mov
inc
js
in
push
stc
mov
fimuls
test
stc
bnd
test
jge
jecxz
js
mov
inc
into
mov
test
push
repnz
dec
flds
popf
xchg
or
xlat
out
loope
mov
sbb
push
cmpb
cltd
out
cwtl
pop
fdivr
lahf
cmp
sub
and
sbb
mov
repz
sbb
cmp
outsl
sub
cmp
jae
int
inc
xor
rorb
sub
pop
clc
add
cmpsl
sbb
add
insb
mov
pop
clc
rcrl
mov
mov
dec
dec
cmc
in
jp
xor
xchg
test
enter
add
mov
or
loope
xor
ja
cmpsl
mov
les
mov
lahf
sub
sahf
xor
nop
ret
stos
sbb
aas
add
cmp
or
mov
shrb
jb
shr
shll
fistpll
add
fisubrs
fdivl
sub
push
mov
ljmp
into
ss
push
loopne
insl
adc
imul
mov
mov
mov
mov
repz
xchg
push
jp
sbb
lea
arpl
imul
dec
insl
inc
xor
sarb
inc
das
inc
loop
mov
arpl
mov
pop
mov
sahf
mov
xchg
mov
iret
imul
in
inc
pop
sbb
rorl
cmp
imull
loop
mov
dec
cmp
pop
jl
mov
inc
xor
icebp
sub
inc
outsl
and
inc
mov
cli
pop
aam
lcall
dec
jne
clc
mov
pop
sub
in
aad
adc
jo
fcomps
xor
fisubrl
mov
sbb
int
clc
bound
cltd
cwtl
and
inc
pop
insb
ss
mov
lds
test
test
lods
insl
pop
mov
mov
sti
loop
js
cmp
push
mov
xchg
repz
dec
cmp
xchg
clc
pushf
orb
push
pop
mov
movsb
movsl
mov
xor
into
push
jae
inc
int3
pusha
movsb
mov
xchg
popf
enter
fistps
mov
jg
xor
or
add
cmp
lea
out
iret
dec
ret
mov
push
sbb
pop
pop
dec
dec
arpl
ds
xchg
push
fisubl
pop
test
out
xchg
xchg
in
push
add
insb
into
fmull
ret
push
imul
mov
movsl
lods
mov
out
xor
icebp
loop
sbb
xchg
sbb
rcrb
bound
pop
in
std
xor
pop
fcmovbe
stc
push
inc
fnstenv
clc
js
cli
xchg
jnp
sbb
mov
rcr
hlt
movsb
sub
lret
sub
js
xchg
sub
sarl
dec
add
cmp
push
adc
mov
stos
adc
sti
lea
sbb
push
sarb
mov
mov
movb
jns
es
dec
sbb
mov
inc
cwtl
cmp
mov
mov
cmpsl
pop
jg
pop
lock
andl
fwait
or
cmpsb
xchg
test
shrb
pop
xchg
jmp
xor
cmpsb
inc
jmp
mov
movsl
add
loop
mov
add
and
inc
inc
icebp
and
jg
fadd
in
dec
push
jnp
mov
sbb
lock
xchg
repz
in
mov
xor
pop
addr16
gs
hlt
hlt
dec
shr
stos
rcl
fs
jae
in
aam
les
jge
cld
out
dec
mov
test
dec
inc
dec
sub
push
call
popf
push
or
cmpsb
adc
cmp
jo
sarl
into
and
dec
out
out
pop
push
mov
mov
lahf
and
lods
add
shlb
stc
inc
mov
cmc
gs
adc
cld
sub
push
mov
inc
jo
mov
or
push
cmpsl
cmp
fcoms
sub
xlat
inc
cwtl
in
sbb
dec
pop
test
cmc
dec
cmp
mov
sub
bound
mul
mov
dec
inc
es
insb
or
ss
jmp
fwait
add
mov
ficoms
leave
arpl
mov
add
add
pusha
adc
adc
sarb
repz
leave
sahf
xchg
xor
enter
pusha
and
xchg
mov
bnd
dec
jl
pop
cs
ljmp
lret
xchg
sti
cli
test
mov
scas
push
cmc
fistl
xchg
fmul
cltd
jno
in
mov
jle
loope
or
add
sub
and
add
lret
movsb
and
cld
jl
adc
sbb
push
push
repz
std
lock
es
mov
jb
nop
and
xchg
and
js
outsb
arpl
xchg
jle
aas
dec
test
adc
mov
inc
push
mov
mov
or
movsb
mov
mov
mov
jne
lea
insl
xor
push
cmpl
arpl
push
js
xor
mov
dec
push
push
mov
xor
fs
sub
dec
fidivrl
and
inc
push
dec
push
ss
mov
cmp
xchg
enter
mov
imul
test
push
pop
jno
xor
or
mov
sbb
add
bnd
stos
jns
stos
addr16
loope
mov
ljmp
mov
and
pop
ss
cmp
and
mov
dec
jmp
mov
imul
or
dec
and
sbb
shrb
xchg
jmp
and
jge
ret
inc
cmovp
rclb
rolb
bound
mov
xor
add
push
pop
jecxz
sub
fstps
aad
push
jge
cmp
mov
std
sub
fimull
xchg
sbb
clc
call
repz
je
xchg
dec
add
cmp
lea
sbb
xor
sbb
add
ds
dec
cmpsl
incb
jne
push
fs
stos
add
sbb
xor
enter
mov
cmp
mov
dec
push
jne
fnstcw
test
pop
dec
inc
movsl
ss
addr16
inc
ljmp
sub
xchg
push
pop
mov
outsb
jle
xor
xchg
xchg
push
inc
mov
out
popa
enter
pop
adc
xchg
add
aad
aam
push
xor
bound
push
push
cltd
mov
out
test
arpl
stos
sbb
mov
sub
jnp
mov
and
fdivrs
push
pusha
repz
xor
sub
xor
subb
pop
inc
maskmovq
testl
jp
xor
jge
lahf
mov
or
lea
and
jp
mov
sbb
adc
sbb
jbe
stc
pop
sub
enter
fwait
jge
add
orb
mov
loopne
outsb
call
mov
fidivl
and
pop
pusha
aam
or
adc
jnp
sub
mov
mov
cmpb
loope
test
notb
insb
stc
icebp
in
push
cmp
sbb
push
dec
xor
inc
subb
enter
pop
push
dec
cmp
aad
pop
shl
movsb
jb
mov
inc
and
mov
lret
mov
jp
push
inc
roll
sbb
or
jle
aas
iret
loopne
fists
mov
pusha
mull
daa
call
test
xor
aad
movsb
jae
mov
xchg
sahf
xchg
xorl
adc
cmp
mov
sbb
repz
testl
push
clc
xchg
cmp
jo
jo
dec
pop
push
sub
jmp
or
int
lret
call
roll
add
add
call
mov
pop
sbb
cmc
call
int3
lds
mov
ljmp
mov
and
cld
jae
insl
movsb
arpl
outsb
jb
test
jo
adc
cmpsb
or
sub
xchg
leave
mov
mov
or
mov
jmp
mov
adcb
mov
and
sahf
xor
xor
sbb
add
pop
pop
xchg
loope
jo
and
es
pop
cmovo
shl
enter
mov
dec
or
xor
pop
push
xchg
inc
xchg
mov
mov
push
push
and
ja
xchg
mov
xor
xchg
repnz
sahf
cli
jecxz
mov
repnz
xchg
and
rorl
jno
push
pop
push
ds
outsl
es
lret
dec
adc
xlat
lods
inc
cmpl
outsl
ljmp
or
add
inc
clc
int
mov
fdiv
pusha
mov
mov
rclb
addr16
xchg
xchg
mov
jp
movaps
adc
mov
pop
and
dec
push
cmp
int3
sbb
fcoms
xchg
lods
scas
inc
mov
les
jnp
dec
rcrb
xchg
push
loope
dec
jmp
sub
cmp
pop
lods
jno
sbb
mov
or
movsb
jge
out
cmpsl
push
dec
dec
int
ss
fsts
jno
xchg
jge
mov
pop
pop
jg
or
or
aas
pop
out
aas
movsb
mov
nop
lret
in
test
or
aas
pusha
cmp
mov
sbb
stos
int
mov
inc
clc
inc
movsl
mov
jl
or
sbb
cs
test
jg
mov
pop
jo
dec
jmp
test
pop
in
inc
jge
scas
arpl
xchg
mov
lret
or
insb
cmp
mov
and
sub
jecxz
test
aad
sbb
sub
test
cmp
and
cmp
adc
jae
adc
mov
inc
frstor
divl
push
ss
cmc
lret
xchg
cmc
pushl
and
lods
inc
and
xchg
movsl
push
or
popl
dec
sahf
mov
push
push
xlat
mov
insl
sbb
jle
adc
into
lods
mov
or
xor
push
push
pusha
adc
jecxz
sahf
insl
add
cmp
pop
jle
cli
jp
loop
sbb
ds
test
or
sbb
rcl
out
test
add
movsb
jge
sbb
outsl
jmp
and
clc
loopne
push
faddl
sbb
jnp
jg
lret
cmpsl
inc
adc
fstl
fisubrs
das
jp
pusha
aam
call
pop
mov
lret
popf
lock
xchg
ret
mov
cmpsb
dec
pushf
mov
mov
test
movsb
cs
pushf
movsb
fbstp
cld
adc
mov
lcall
push
mov
jge
pop
fidivl
scas
xor
inc
adc
in
je
pop
push
cli
jg,pn
pop
push
push
fs
shrl
cld
frstor
popf
push
sbbb
and
cld
lods
lea
lods
testb
in
out
cmp
orb
shll
jne
or
and
jae
scas
test
or
pop
or
sbb
scas
fwait
adc
repz
int
mov
sub
sub
sbb
fwait
scas
int
hlt
sbb
pop
and
imul
fiadds
sti
adcl
stc
dec
imul
dec
push
mov
pop
shrb
lahf
stos
sbb
outsl
and
adc
mov
mov
call
xchg
jp
dec
xlat
cs
fiadds
mov
aaa
bound
mov
lods
and
ret
scas
lret
mov
mov
mov
jp
mov
rclb
test
jb
int
dec
and
or
mov
sub
push
add
mov
xchg
push
inc
jb
push
ret
movsl
es
mov
push
add
loop
fsubr
aad
pusha
jp
xchg
sub
test
scas
jo
add
xor
lods
fcompl
stc
inc
aam
or
aam
mov
ss
jbe
jg
mulb
dec
xor
push
mov
mov
jbe
inc
gs
cmpsb
repz
or
in
xchg
and
xchg
cmpsl
fmul
xor
sub
or
std
mov
mov
andb
in
cld
or
mov
fs
jb
pop
ds
pop
xchg
jecxz
cmpsb
inc
lods
stos
mov
jns
ja
inc
mov
add
sbb
jo
xor
cmc
xor
xor
push
outsb
lret
jae
mov
add
es
ljmp
push
xchg
imul
or
mov
xchg
stos
pop
pop
sbb
adc
inc
in
das
cwtl
sti
sub
lds
cmp
mov
jp
jno
das
jp
outsb
add
idivb
adc
out
fidivrs
sahf
push
jbe
or
mov
mov
mov
pop
fiaddl
insl
repnz
and
jae
inc
insl
xchg
pop
inc
fs
adc
sbb
cltd
repnz
mov
sahf
jnp
stos
lods
pop
mov
scas
mov
or
sti
cmpb
loopne
inc
push
out
and
les
fwait
sbb
cwtl
shlb
sbb
push
dec
rclb
adc
ja
lret
insb
out
frstor
add
pop
out
and
fninit
xchg
and
push
mov
jl
xor
and
xchg
sub
iret
lea
dec
sub
ret
fcomp
add
call
mov
xor
and
push
and
outsb
loop
adcl
movsl
lcall
dec
xchg
fildll
pushaw
mov
dec
pop
and
xor
ljmp
stos
mov
cmp
test
jg
or
mov
stos
dec
pop
addr16
fwait
xor
jo
jmp
mov
mov
bnd
rorb
xor
or
test
xchg
pop
loop
jne
cltd
push
and
sbb
mov
mov
xor
mov
mov
sbb
xor
xchg
inc
out
andb
inc
lock
leave
lock
mov
mov
ds
sbb
sub
dec
jne
pop
push
sti
cmp
pop
ds
arpl
cld
xchg
xchg
loop
shrb
jmp
cmp
mov
mov
mov
sbb
push
leave
push
xchg
fcompl
pop
mov
mov
repz
add
or
xchg
dec
adc
lods
mov
enter
pop
rclb
cmpsb
enter
mov
adc
pop
mov
and
lds
adc
arpl
push
pop
sbb
mov
cmp
mov
movsl
jl
push
xchg
out
repnz
ljmp
mov
dec
xor
pop
mov
in
pop
adc
lahf
inc
test
lea
push
lret
mov
pop
cmp
mov
xor
jno
jmp
push
sbb
cmpsl
insl
add
ljmp
pop
mov
js
xchg
pop
divl
and
call
dec
pop
cmp
mov
push
xor
cmp
mov
icebp
test
lahf
push
ja
enter
popf
xchg
and
test
ffreep
cli
loopne
mov
loope
cld
or
in
and
cmp
jecxz
pop
shlb
and
test
push
and
mov
push
lods
mov
lods
or
pop
andl
je
sbbb
adc
push
or
mov
rol
or
sub
mov
xchg
and
fldenv
jns
andb
movsl
jbe
iret
mov
jle
insb
mov
daa
sbbl
or
aam
mov
mov
loope
insb
sub
sahf
out
jecxz
mov
jns
lahf
xchg
lods
shrl
mov
adc
into
mov
push
pop
in
daa
cmpsl
jae
mov
shlb
cmp
mov
cmp
test
dec
test
xor
add
es
daa
or
xchg
xor
add
cmpsl
xchg
adc
sbb
xor
ljmp
xor
inc
pushf
sub
faddl
add
lret
out
mov
xchg
mov
xchg
cmpsb
aad
lret
outsb
mov
cli
cmpsb
mov
push
add
add
add
lcall
inc
mov
inc
mov
pop
mov
sbb
arpl
frstor
push
inc
inc
cwtl
pop
int3
sub
mov
je
xor
pop
inc
xor
addr16
push
mov
inc
xchg
and
shl
test
jo
add
add
daa
sbb
jle
push
lds
pusha
sbb
cmpsl
jmp
inc
and
mov
int3
sbb
lea
mov
jns
loop
add
inc
out
out
mov
xlat
adc
mov
mov
mov
je
je
xor
jae
imul
xor
dec
xor
subb
outsl
and
xor
mov
movsl
xchg
repnz
and
mov
test
mov
enter
lret
xor
or
inc
aad
xchg
inc
les
mov
mov
push
pop
cmp
jl
pop
stos
inc
repz
cltd
push
scas
in
iret
mov
inc
gs
mov
mulb
mov
jns
fwait
ds
ret
push
mov
mov
int
xchg
loopne
aam
sbb
loop,pt
xor
repz
push
mov
fmull
insb
int
fistps
mov
and
jle
in
mov
scas
into
push
in
ds
or
jb
jne
fstpl
out
sub
jo
lock
sarb
xor
sub
add
xor
movsl
outsb
xchg
cmpsl
inc
push
add
pop
mov
cwtl
cmpsb
cwtl
or
or
xchg
pop
repnz
add
es
scas
push
aam
mov
pop
or
je
jmp
dec
fnstcw
lea
lcall
sub
jno
fstpt
aam
mov
xor
shrl
push
lods
cmp
filds
push
repz
daa
popa
adc
mov
movsb
js
das
dec
prefetcht2
insb
aaa
clc
pop
int
adc
cmp
jno
call
pop
add
add
mov
or
pop
loopne
test
pop
loope
divb
mov
jecxz
inc
out
push
imul
mov
jbe
or
dec
stos
sub
adc
inc
sarb
xchg
sbb
into
adc
jno
lea
aas
nop
sbb
inc
je
mov
lea
dec
xchg
les
adc
pop
or
mov
ljmp
xchg
scas
sbb
inc
inc
aas
ljmp
imul
inc
lods
lods
ja
rclb
lock
xchg
in
fadd
mov
out
sub
xlat
sbb
outsl
es
js
sub
xchg
jmp
jno
sbb
inc
rclb
jae
jae
mov
lahf
mov
les
push
jne
mov
cmp
fnstenv
adc
iret
sbb
inc
or
out
sbb
xchg
mov
push
pushf
jae
ja
jg
cs
mov
stc
jnp,pt
out
daa
inc
js
es
nop
bswap
pop
leave
dec
clc
sbb
test
leave
cs
mov
inc
ret
pop
pop
pusha
stos
xchg
sbb
ss
push
adc
mov
in
sub
sub
cmpsb
push
pop
out
pop
loopne
fistpll
sub
rclb
mov
jns
mulb
sub
and
shl
andl
ss
push
xchg
add
mov
inc
adc
aad
std
dec
iret
mov
pop
sahf
add
scas
dec
xchg
or
pop
sub
dec
daa
push
loop
sub
lock
out
xchg
and
cltd
repz
sub
fisubrs
pushf
xlat
test
push
mov
out
pop
mov
jmp
out
xchg
inc
inc
sub
cwtl
aaa
mov
iret
and
mov
movsl
ja
mov
and
mov
aaa
xchg
or
rclb
or
mov
leave
in
mov
push
cmpb
imul
xor
loop
lahf
pop
push
fsubrl
mov
jle
mov
xor
dec
xchg
xor
pushf
fcoms
adc
mov
inc
mov
loope
call
xor
xchg
push
add
pushf
data16
adc
outsl
push
sub
and
movsl
loopne
movsb
scas
xchg
jmp
dec
mov
adc
mov
dec
ficomps
in
jns
pusha
mov
or
add
cwtl
ret
cmp
xchg
faddl
sbb
test
push
arpl
xor
in
xor
xchg
call
jg
pop
sbb
cmp
sahf
mov
repz
pushf
out
adc
vpsrlw
mov
cmp
xchg
or
sti
adc
mov
push
test
jno
mov
push
mov
xchg
sub
adc
in
cmp
mov
pop
nop
mov
mov
mov
xorl
fcoms
es
adc
rcll
jecxz
mov
insb
mov
mov
insb
or
dec
imul
test
cmp
enter
testb
mov
std
and
fmull
jge
add
addr16
js
les
jmp
cmpsl
push
cs
push
jmp
pop
sbb
out
xchg
mov
xchg
arpl
mov
popf
push
pop
popa
imull
scas
push
imul
adc
inc
jo
jns
movsl
adc
in
es
inc
scas
or
scas
test
xchg
icebp
jle
cwtl
xchg
pop
add
dec
inc
fldl
ss
cmp
in
mov
jno
stos
gs
and
adc
mov
push
testl
add
add
jnp
stos
push
inc
je
popa
cmp
loope
data16
sub
aas
adc
inc
lds
xchg
xchg
xchg
sub
roll
jb
call
stos
paddsb
cmp
test
dec
or
ds
clc
mov
pop
out
jge
into
or
addr16
mov
imul
sbb
movsb
push
cld
dec
cltd
in
popf
stos
std
push
rcl
repz
inc
in
movb
ja
test
ror
cmp
es
lds
inc
inc
jae
jbe
inc
ret
cwtl
push
testb
sbb
push
cmp
mov
add
out
push
or
adc
fs
lret
xor
jle
push
mov
and
popf
sbb
add
pop
add
mov
loopne
sub
mov
rcl
inc
movsb
xchg
sub
push
jnp
adcl
jg
scas
dec
or
mov
mov
push
sahf
sbb
adc
and
iret
mov
fs
ds
or
mov
or
test
scas
and
ret
aad
daa
cmc
popf
or
pusha
std
int3
aam
mov
lret
in
inc
adc
push
jmp
jmp
jne
subb
scas
dec
leave
arpl
push
in
mov
scas
es
sub
adc
or
sti
cwtl
in
cli
jg
shrl
sbb
add
mov
dec
or
push
loopne
push
fistpll
mov
xor
fcomi
adc
cmp
mov
fmull
andb
xchg
into
out
lcall
sub
sbb
mov
movsb
jbe
add
gs
pop
scas
sub
add
sub
jle
or
stos
jle
test
xchg
addl
add
add
push
mov
mov
pop
add
jnp
or
mov
cmpsb
aad
insb
xorl
cmc
mov
cltd
push
inc
mov
sbb
sti
inc
fs
outsb
inc
pusha
dec
or
mov
in
push
data16
xchg
out
mov
sub
lods
call
lods
pop
loopne
xchg
test
sub
orl
inc
xchg
xor
and
add
inc
cmp
xchg
or
enter
sbb
test
sbbl
in
mov
fistpl
mov
dec
fwait
add
push
nop
xor
out
xor
loop
jle
mov
rol
out
popa
repnz
lods
sub
bound
clc
pop
mov
js
rcrl
repnz
dec
xchg
shll
pop
dec
cld
flds
fs
mov
test
repz
sbb
inc
nop
add
cmp
sub
pop
out
mov
loopne
mov
fmull
pop
cmp
je,pt
add
sbb
sti
cmc
int
movb
sub
push
mov
push
aad
fimuls
popf
add
jnp
imul
jae
cmp
add
mov
push
cmp
push
or
stos
fldl
test
mov
jns
cmp
add
add
fdivl
pop
sbb
out
and
iret
roll
cmp
in
jo
test
aam
adc
cld
adc
cs
mov
jl
cmp
aas
ss
loop
daa
sub
add
mov
arpl
pop
push
insb
sarl
insb
rclb
jo
jge
stc
jns
mov
movsb
rcrb
jbe
mov
arpl
mov
push
xchg
fisubs
repnz
aas
insb
push
ljmp
pop
xchg
jne
xlat
push
mov
xor
jnp
shlb
leave
ret
jl
xor
jp
pop
scas
nop
dec
mov
ret
and
xchg
mov
in
inc
nop
inc
mov
jae
fsubr
dec
inc
sbb
adc
xor
test
xlat
cmp
sub
sbb
lahf
lret
mov
inc
dec
mov
jmp
sbb
or
pop
jp
jae
fwait
pusha
aaa
pop
js
clc
dec
add
in
out
dec
cmp
stos
dec
jl
dec
dec
mov
mov
inc
popa
mov
sub
cmp
cmpsb
in
das
enter
dec
int3
hlt
cli
pop
aad
imul
imul
sbb
outsb
xor
lcall
adc
ja
scas
enter
push
inc
and
rolb
dec
les
ret
pop
movsl
int
xor
mov
sub
push
cmpsb
js
into
lret
or
mov
push
pop
adc
inc
push
popa
dec
aas
jl
jbe
adc
push
js
cwtl
dec
lods
inc
testl
push
aas
decb
or
or
or
and
push
xchg
inc
es
add
dec
loop
push
mov
imul
ss
js
jp
jne
or
in
loop
mov
in
push
xchg
loope
inc
add
dec
pop
jle
leave
jp
enter
fstl
and
dec
cmpl
pop
mov
mov
sbb
cmpsl
ja
push
mov
mov
and
faddl
out
ret
mov
into
incb
mov
mov
rcr
mov
out
jl
imul
je
jle
sbb
or
jg
jecxz
sbb
int
stos
daa
in
cltd
mov
cmp
out
sub
fmull
loopne
cld
push
sbb
jbe
shrb
push
cltd
cwtl
lahf
push
pusha
subl
dec
outsl
fucom
pop
jne
js
vmulss
jae
xchg
push
scas
push
mov
lods
and
ljmp
adc
cmp
cmpsb
lret
xchg
or
jno
sub
test
xlat
enter
adc
mov
outsb
in
aaa
test
iret
xchg
int
ja
loopne
jmp
jae
xor
mov
fwait
jae
push
aam
push
push
jb
int3
ficomps
imulb
mov
stos
lock
mov
imul
outsb
sub
mov
ffree
xor
sub
jg
inc
sbb
pop
out
data16
cmpsl
je
push
and
mov
and
arpl
stos
test
jnp
lods
mov
scas
inc
ljmp
xchg
inc
cli
xchg
jae
inc
rclb
dec
imul
cltd
add
add
add
aad
sub
cmp
in
das
xor
cmp
mov
pop
sti
stc
mov
cmp
enter
fsub
and
dec
jge
jge
mov
mov
dec
add
xchg
inc
ja
lods
sub
cmp
xchg
fdivs
das
push
push
pop
les
and
into
add
mov
cmp
and
mov
jle
into
and
sub
daa
es
xor
or
or
xchg
unpckhps
sbb
daa
jb
shlb
cmp
insl
mov
aas
inc
cmp
jnp
pop
lret
and
hlt
shlb
mov
sub
test
lret
adc
out
inc
jbe
mov
popa
mov
cltd
sub
pop
cltd
jl
mov
dec
or
xor
inc
scas
pop
mov
in
cli
jmp
xlat
int3
call
enter
cmp
add
add
sbb
nop
pop
push
sbb
cld
lahf
paddw
jb
lock
loope
jo
test
sub
sub
cltd
insb
cltd
push
je
xor
sub
lcall
xchg
repnz
fisubs
ljmp
lea
sbb
call
mov
mov
pop
andb
cmpb
push
jae
sub
pop
mov
push
movsb
jno
dec
jae
in
xor
lretw
mov
mov
hlt
stc
aas
icebp
lret
xor
cs
inc
jmp
mov
sbb
cltd
dec
push
imul
ljmp
lds
les
mov
fnsave
inc
pop
fistpl
inc
aaa
add
sub
and
push
sbb
push
xor
xlat
out
je
pop
loopne
les
xchg
or
pushf
sbb
cmp
mov
mov
insl
stc
lret
rclb
mov
es
nop
out
pushl
mov
orb
fisubrs
or
and
cli
mov
sti
jmp
ljmp
loope
mov
push
mov
mov
sub
lea
aaa
bound
mov
jl
xor
into
push
mov
adc
and
dec
mov
xlat
push
daa
outsl
jae
dec
sbb
mov
stos
sub
enter
loopne
inc
pop
les
dec
xor
imul
mov
js
enter
loope
add
push
xlat
xchg
lret
and
xchg
sub
add
push
xchg
lds
out
std
cmpsb
mov
std
mov
test
add
push
fidivrs
pop
dec
xchg
rcrb
xor
in
push
pop
fistps
push
addr16
lea
mov
movsb
sbb
inc
outsb
add
inc
and
icebp
mov
add
add
testl
ss
mov
test
bnd
lret
das
ret
loope
loop
or
mov
adc
push
cwtd
pop
jne
fucomi
push
mov
xchg
out
les
addr16
dec
or
or
sbb
pushf
lret
mov
iret
dec
mov
push
sbb
xchg
lret
dec
and
fldpi
and
mov
push
sbb
addr16
in
lret
mov
push
mov
mov
mov
cmp
test
jge
cmc
bound
push
fcmovbe
imul
and
outsb
jl
cmp
das
lret
mov
cmpsb
mov
xor
arpl
cld
bound
xor
or
shrl
aas
fisubs
movsb
jno
idiv
outsb
jns
sbbb
mov
cmp
stc
and
cmp
and
jle
lods
decb
outsl
add
pusha
add
jae
cmc
xor
and
sub
int
nop
xchg
jns
hlt
pushf
ja
mov
in
stos
out
ret
sbb
hlt
inc
xchg
cmpsl
hlt
mov
fadd
pop
adc
clc
dec
xor
cmp
push
rclb
mov
daa
jle
ret
xchg
mov
loop
push
mov
or
xchg
fwait
mov
lea
cmp
jbe
pop
inc
dec
mov
lea
add
xchg
nop
dec
push
adc
push
lock
cld
call
ret
cmp
imul
mov
lahf
cmpsl
adc
mov
ret
lods
mov
push
inc
lret
lods
cmp
loope
outsb
adc
outsl
jg
in
shll
loopne
sarl
xchg
push
mov
test
sub
pusha
popf
fisttps
inc
xchg
lock
cltd
xor
dec
push
mov
hlt
pushaw
mov
mov
addl
add
inc
pop
sub
repz
pop
push
jp
push
popa
int3
je
cltd
test
test
rolb
stos
insb
aam
insb
xchg
pop
xchg
mov
psllq
push
les
dec
push
jg
or
xchg
xor
inc
int3
pop
inc
xor
jp
xchg
pop
mov
aam
push
hlt
fidivl
out
xchg
dec
adc
sbbl
int3
into
push
inc
jle
add
dec
clc
mov
cltd
sahf
cmp
jo
movsb
dec
fimull
mov
jno
test
xor
pop
adc
jmp
dec
lds
aaa
insl
cwtl
lcall
jl
cmp
sub
movsb
inc
scas
mov
sti
jne
loopne
fcmovbe
adc
jle
es
ja
inc
pop
mov
push
ss
into
clc
rcrl
cltd
mov
sub
sbb
sub
ret
lds
push
test
sub
outsl
jae
xchg
xor
sub
roll
clc
push
xchg
add
adc
jbe
inc
fbstp
pop
mov
sbb
and
daa
pop
mov
mov
push
mul
dec
mov
imull
jge
lods
adc
mov
aaa
and
in
enter
popf
jnp
adc
mov
cmpsb
jbe
js
mov
xchg
pushf
ljmp
mov
add
jecxz
and
fidivrl
testl
repz
lahf
sub
xchg
add
lret
int3
fstpl
and
mov
xchg
stc
mov
cmp
sbb
add
leave
lahf
dec
lea
rcl
or
inc
jns
jge
jle
sbb
mov
gs
out
stos
push
adc
outsl
das
notl
xchg
mov
xlat
xor
add
ljmp
add
add
pop
or
jae
lahf
lea
fwait
and
stc
nop
jmp
int3
fbstp
les
int3
push
mov
cmp
push
mov
sbb
outsb
sahf
ds
jge
fidivrl
jecxz
inc
sub
in
inc
pop
test
pop
mov
adc
lret
dec
or
xchg
out
mov
inc
in
lds
inc
and
mov
popl
mov
dec
adc
xchg
xchg
pop
cmp
sti
cmp
pop
flds
lds
xor
in
adc
or
add
sub
mov
out
icebp
pop
rclb
adc
cs
lds
jecxz
aas
push
mov
das
les
xor
push
inc
repnz
movsl
mov
mov
das
rcrb
inc
stc
lahf
enter
mov
inc
icebp
ret
fcomi
xchg
stos
push
jge
enter
lds
arpl
data16
push
shll
jae
sbb
mov
lret
cmpl
and
insb
cmc
sbb
xchg
js
adc
push
push
mov
push
nop
inc
loopne
inc
add
lret
aaa
mov
mov
stos
mov
xchg
loop
out
xchg
nop
dec
scas
mov
sti
in
xor
insb
or
push
clc
lods
test
fsubp
and
mov
outsb
outsb
mov
xchg
mov
insb
pop
decl
aad
test
stc
in
xchg
xchg
pop
stos
test
lea
fdivrl
fsts
xchg
insl
mov
fstsw
test
loop
xlat
xor
sti
adc
mov
inc
mov
stc
xor
pop
mov
insl
inc
sbb
adc
das
fstl
je
daa
mov
push
loop
mov
shll
adc
push
iret
adc
inc
enter
lret
jl
mov
cmc
push
add
dec
dec
ret
jo
sbb
jb
aaa
adc
jp
es
jbe
mov
xchg
xchg
icebp
rorl
mov
jl
mov
sbbb
xchg
pavgw
xchg
lcall
mov
clc
loope
or
jle
aaa
mov
xchg
xorl
fmull
mov
mov
cmp
xor
fs
mov
inc
out
xchg
lods
and
ret
fwait
in
js
loopne
shrl
cwtl
lock
inc
enter
lcall
mov
out
icebp
push
push
cld
ja
push
aad
imul
das
sarl
and
mov
cld
call
cld
inc
or
enter
add
in
and
das
adc
jnp
xchg
sub
xor
movsl
add
sbb
cmp
adc
pop
jge
or
fs
dec
push
sbb
jbe
ljmp
xchg
xor
insl
pop
and
repz
pop
dec
std
cmp
sbb
cmp
mov
fmull
mov
cmpsb
xchg
push
imul
mov
jl
pop
ret
icebp
insb
lret
cltd
push
aad
sbb
nop
jp
cmc
pop
inc
and
xchg
adc
xchg
sub
das
sub
push
repz
push
movsb
outsl
out
hlt
jbe
mulb
inc
out
gs
or
fsubr
das
out
into
jmp
add
pop
push
and
lahf
ret
and
mov
jmp
lock
scas
mov
fmul
xchg
push
loope
cmp
push
sub
inc
jp
add
imul
sti
add
inc
xchg
es
push
jmp
sub
iret
ljmp
and
mov
mov
lea
pop
out
xor
icebp
fs
into
push
jle
roll
mov
ret
push
pop
push
adc
daa
jbe
jge
sarb
out
cmpsl
and
imul
sub
pop
cmpsl
unpckhps
in
int3
sti
enter
and
sbb
inc
vpshufd
and
pushf
adc
stos
stos
add
xor
inc
fnstsw
or
push
mov
xchg
test
or
jp
sahf
xchg
nop
movsb
rol
hlt
adc
and
cmp
lods
in
sub
in
sysret
fwait
leave
jns
jo
incl
out
mov
inc
cs
jle
lods
push
adc
shlb
and
dec
cwtl
std
test
dec
push
dec
cmp
dec
mov
inc
insb
jg
dec
mov
stos
adc
mov
xchg
dec
mov
push
xor
and
cs
jno
das
and
pop
or
sub
daa
inc
sub
jno
push
ror
pop
popf
inc
and
sub
mov
sub
outsl
sbbb
push
pop
les
xor
add
xorb
ja
psubsw
cmp
or
jecxz
xor
dec
inc
adc
pusha
aad
push
cmpsb
sub
lods
and
enter
xchg
rclb
repnz
fcomps
sbb
es
inc
mov
sub
incl
test
pop
fisubs
icebp
pop
out
mov
rclb
cmpsb
mov
and
mov
cwtl
add
xchg
push
lea
xor
repz
in
dec
jno
fcomps
out
mov
imul
cltd
xchg
mov
inc
test
daa
in
imul
xchg
lods
push
fimuls
out
or
jae
and
xchg
nop
nop
pusha
mov
pusha
in
mov
jp
jge
jb
sub
xor
jg
ja
push
mov
sahf
lahf
xor
lods
sarb
jmp
lcall
pop
mov
faddp
sbb
adc
mov
add
xor
out
mov
in
in
out
stc
jnp
inc
mov
sahf
mov
scas
pop
cld
fidivrs
cmp
mov
sub
jo
mov
aad
adc
pop
pop
loop
scas
adc
add
das
daa
push
mov
jae
add
dec
xchg
cmp
xor
jbe
sbb
adc
pop
test
inc
jmp
mov
inc
inc
and
dec
aas
jno
push
push
jbe
fstpt
mov
xchg
xchg
mov
dec
xchg
add
cmp
adc
mov
mov
sarb
roll
int
js
pop
test
mov
inc
cmp
andl
fldenv
std
adc
xor
daa
or
pop
sub
and
sbb
push
pop
clc
cmp
das
mov
neg
sub
xlat
pop
ficompl
push
ds
add
cltd
push
pop
in
mov
inc
xorl
rorl
add
dec
int3
in
jp
ret
mov
popf
push
je
pusha
add
test
pop
cmp
sahf
push
sbb
cmpsl
enter
add
xor
shll
test
outsl
ficomps
sbb
cmpsb
jge
lock
inc
nop
dec
sbb
setb
pop
sbb
sub
lods
imul
jae
push
das
fistpl
data16
movsl
mov
inc
lds
push
addr16
xchg
pop
in
mov
outsb
jg
lcall
mov
sbb
mov
imul
mov
repz
and
cs
sarl
adc
xor
dec
add
ret
in
adc
push
jle
clc
ret
ljmp
xor
add
repz
out
es
mov
or
dec
or
mov
imul
insl
adc
sti
mov
jmp
pushf
adc
xchg
adcb
mulb
int3
cwtl
xchg
mov
ret
mov
popa
mov
lds
incb
mov
mov
mov
ds
pop
aad
addr16
jbe
jl
in
cmp
shlb
jne
out
xor
or
cmp
xchg
jle
popf
push
in
nop
sub
fs
mov
aad
dec
std
test
movsb
hlt
in
push
lods
popf
sub
jp
jne
adc
movsb
in
cmp
pop
adc
xor
lret
add
inc
pop
or
pop
test
adcl
cmpsl
mov
xchg
pushw
aad
repz
mov
sbb
out
or
xchg
movsb
push
mov
dec
dec
mov
jb
add
andb
and
and
dec
adcb
lea
jp
or
jecxz
scas
push
inc
pop
dec
sbbl
data16
stos
inc
push
mov
pop
lock
addr16
sub
cmp
and
add
sub
cmovbe
adc
push
adc
add
xchg
es
ss
push
sbb
lods
mov
orb
xor
in
pop
cmovs
mov
sahf
add
mov
jg
lcall
jp
mov
ficomps
je
push
cmp
clc
push
adc
jmp
stos
add
push
lock
xor
movsb
sahf
jge
cmpb
xchg
aad
pop
loop
xchg
xchg
or
mov
xor
xchg
dec
aam
xchg
xor
or
mov
xchg
js
cmp
xor
test
movsb
and
sbb
into
inc
fimuls
add
add
data16
adc
scas
rcll
loop
lock
pop
jo
shlb
mov
cmp
inc
inc
roll
xchg
push
rorb
xor
inc
arpl
lret
repnz
adc
enter
jo
jge
iret
inc
push
cmp
divl
int
shrl
int3
sub
out
dec
jno
inc
push
test
lock
push
outsb
loopne
fcom
das
ds
push
fwait
in
mov
and
xlat
ror
mov
pause
jge
mov
xchg
cmpl
sbb
mov
sub
and
cs
movsb
jnp
jo
push
xchg
ror
mov
sbb
test
jae
mov
in
addr16
icebp
jno
sub
inc
dec
inc
call
pop
test
mov
popf
mov
ss
scas
sti
sub
in
setg
inc
movsb
lret
scas
and
xchg
imul
aad
popa
push
jle
cmp
push
or
mov
adc
sbb
push
cld
inc
jg
mov
pop
jnp
fmul
loop
jns
sti
xchg
je
jle
xchg
lock
push
adcb
idivl
xchg
push
pop
cmp
roll
xchg
cli
push
out
xchg
clc
push
mov
or
jo
sbbb
fisubl
jbe
inc
les
sarl
mov
sti
addb
lds
mov
leave
ret
dec
xchg
pop
fisubrl
dec
push
imul
push
cmp
inc
sbb
jg
out
xchg
and
pop
lods
vcvtpd2psy
lods
sub
nop
mov
jle
sbbl
cs
mov
adcb
sub
sbb
cmp
mov
push
test
cs
sbb
push
sbb
mov
imul
pop
sahf
in
mov
mov
ja
sub
aas
fs
sbb
dec
add
stc
stc
outsb
scas
jl
jbe
test
and
inc
add
mov
jle
ret
cltd
cmp
inc
push
lods
int
xor
lock
dec
outsb
shrl
mov
jbe
add
aaa
in
rcrb
mov
je
or
xor
add
adc
jle
loopne
test
cld
cmp
xchg
mov
push
test
mov
cmp
jnp
enter
xchg
popa
rcrl
adc
jp
adc
or
mov
add
imul
sarb
stos
test
or
fistpl
push
je
mov
inc
les
sub
rcrl
add
sbb
jg
shlb
js
insb
mov
jb
repz
fidivrl
pop
xlat
ret
mov
repnz
pop
mov
lea
cmp
popa
xor
in
pop
adc
inc
cltd
mov
je
aam
or
outsb
xlat
pop
add
inc
fisubs
into
mov
xor
je
fimull
jnp
pop
add
cmp
inc
bound
add
ljmp
rcrl
cmpb
loopne
dec
mov
inc
push
jge
and
xor
jg
fs
stc
or
cmp
adc
cmpsb
or
and
push
repnz
sbb
and
push
lcall
sub
test
xchg
dec
std
xor
js
in
pusha
mov
in
xchg
nop
ds
adcb
push
mov
fdivl
adc
xor
or
adc
push
pop
out
js
test
mov
mov
lods
jle
pop
mov
mov
and
pop
cmpsl
hlt
bound
lret
jmp
scas
addr16
add
jle
lret
mov
vpaddusw
nop
or
in
pop
xor
mov
rorl
push
imul
popa
xchg
push
int
xor
push
js
insl
mov
js
in
ficoml
adc
push
push
fldenv
testl
push
push
push
jno
push
pop
fdivp
inc
xchg
arpl
daa
lock
out
ljmp
test
mov
inc
jbe
dec
insl
sti
sub
xor
mov
lahf
sbb
jb
add
shrl
mull
sbb
and
repz
lahf
mov
pop
push
shr
fldl
xlat
push
dec
iretw
mov
xchg
sbb
dec
pushf
jg
dec
pop
lods
aaa
push
xor
xor
mov
lea
pop
lods
sub
pop
mov
xor
xlat
adc
sbb
aad
push
imul
sub
int3
iret
fwait
sub
add
push
mov
jae
cmp
inc
scas
or
call
scas
fimull
ljmp
ljmp
adc
pop
jmp
adc
xchg
stos
adc
and
ljmp
inc
mov
inc
mov
mov
jae
pop
scas
mov
mov
into
lret
jnp
adc
notb
cld
or
mov
cmp
gs
repnz
sub
inc
cmp
push
sub
xor
jnp
or
ficomps
shr
rcr
or
ret
imul
adc
fsubp
jge
xor
fistpl
mov
lds
jmp
mov
push
popa
jnp
sbb
mov
pop
adc
out
dec
jmp
leave
movsb
ss
dec
pop
ret
vpmacsswd
and
push
jp
add
xchg
mov
and
mov
repz
cmpsb
jnp
add
mov
sarl
and
outsl
cmp
xchg
rclb
mov
dec
or
sub
sahf
bound
or
mov
push
xor
mov
out
leave
call
jnp
dec
out
adc
xchg
inc
sbb
aas
jmp
lret
fnstenv
mov
add
add
push
xchg
mov
scas
mov
xor
dec
add
sbb
mov
or
ss
mov
and
lret
loope
mov
popf
cmp
xchg
and
stos
inc
add
fwait
test
xor
push
aad
jmp
mov
out
sbb
sub
out
cs
je
sub
not
movl
sbbl
add
mov
fs
mov
push
es
leave
pop
stos
push
and
lea
stos
or
xchg
dec
in
addr16
es
ja
enter
xchg
sub
mov
insb
push
test
addb
xchg
pop
inc
or
jno
rorl
sahf
mov
das
mov
inc
add
imul
inc
lds
xchg
inc
aad
call
or
jge
jns
mov
cmp
dec
pop
and
shl
inc
add
out
cmp
push
out
mov
lahf
stc
js
icebp
ja
mov
int3
sub
loopne
sbb
adcl
and
lret
pop
xor
mov
leave
jecxz
pop
mov
aaa
mulb
out
jl
rclw
mov
frstor
pop
inc
or
jne
inc
rcrb
out
fistpll
or
int
shr
jnp
lds
mov
ret
pop
out
mov
push
js
std
cmpl
out
push
bound
sub
pop
sti
pop
inc
sbb
fisttpll
hlt
cmp
adc
pusha
add
mov
cmpsb
jae
mov
mov
push
cld
and
fstl
test
insb
jmp
test
jae
push
jae
jae
jno
rcll
jmp
mov
mov
jne
je
daa
gs
sub
sbb
aam
fnstcw
gs
add
mov
pop
push
push
cmp
bound
mov
mov
cli
jg
sub
movsb
jo
dec
jl
pop
sbb
inc
je
push
and
sub
lahf
ret
add
cwtl
or
fldt
lahf
sahf
scas
out
ret
sbb
mov
add
xorb
and
adc
lods
push
scas
push
jns
push
ret
test
jo
rcr
fiadds
out
mov
in
lds
xchg
mov
push
popl
and
sbb
mov
mov
insb
pusha
mov
out
mov
inc
push
into
ja
and
icebp
jp
cltd
or
stc
dec
lods
test
mov
lds
stos
dec
imulb
fcomp
cwtl
shlb
out
inc
push
xchg
std
and
push
stos
movsl
imul
movsb
and
lcall
adc
mov
mov
sbb
cld
mov
mov
stc
popa
andb
mov
int
push
fsubl
ficompl
push
fisttpl
ficoms
sbb
xchg
sbb
repnz
mov
movsl
cli
movsl
scas
addps
xchg
mov
inc
fs
int3
mov
in
lcall
adc
push
scas
scas
adc
inc
inc
push
in
xor
clc
lods
imul
xor
mov
es
or
out
pop
ret
in
jp
sub
aaa
sub
movd
fcompl
push
movsl
sbb
lret
cmp
adc
xor
sahf
popf
pop
xor
mov
jb
insb
sub
sub
mov
leave
bound
push
out
pushf
adc
ret
or
inc
pop
sub
mov
in
in
repz
mov
and
popf
or
mov
xchg
mov
cmp
xor
gs
sbbb
adc
xchg
jae
pushf
in
or
sub
ret
adc
or
mov
and
pop
adcl
test
aad
xchg
mov
in
sub
ret
cli
jnp
cwtl
mov
xchg
add
les
idivl
pop
fcmovu
dec
push
push
enter
or
push
mov
shlb
jns
pop
xlat
mov
push
inc
hlt
jno
cs
lret
push
xchg
in
repz
test
mov
sbb
dec
js
xor
int3
imul
dec
test
test
std
pop
push
nop
sti
xchg
int
or
cld
test
and
push
inc
jo
jno
fwait
pop
scas
add
inc
cld
jmp
push
xchg
inc
les
xchg
clc
sub
scas
jbe
stos
mov
call
mov
sub
imul
mov
das
sbb
mov
mov
inc
push
shrb
cmp
cld
lret
gs
mov
mov
icebp
pop
sarl
push
pusha
xchg
lds
and
pop
data16
xor
dec
xchg
fisttps
in
push
push
mov
rcr
fs
shlb
mov
mov
mov
jo
pop
mov
repz
mov
fildl
jo
hlt
dec
mov
mov
sbb
push
rolb
mov
je
lret
add
pop
jp
loop
mov
ljmp
sub
lret
into
xchg
mov
adc
in
lods
shll
xchg
xor
inc
aam
xchg
cmp
pushf
xchg
lods
jmp
pusha
adc
pop
xchg
fsts
inc
mov
dec
shrl
inc
es
pushf
fadds
mov
jle
xchg
popf
outsb
mov
xchg
fwait
jecxz
jae
nop
sub
cmp
or
or
sub
mov
push
aas
push
cmp
jae
mov
cmp
ljmp
mov
inc
pop
jmp
sbb
mov
fucomp
pop
inc
inc
rclb
xor
inc
ret
jae
bound
nop
and
xchg
adcb
cs
iret
enter
out
cli
data16
lock
div
popa
repz
xchg
dec
rorl
cs
roll
cmp
scas
mov
dec
js
shll
clc
or
addb
sarb
bound
jmp
leave
adc
xor
orl
cmp
aam
pusha
and
mov
xchg
xchg
jb
cmp
fdivl
dec
imul
mov
cmp
push
mov
jge
ret
orl
lods
sbbl
daa
aaa
imul
add
jg
lea
xor
in
sub
subl
daa
mov
add
cltd
sbb
pushf
inc
and
jno
cs
rolb
add
add
add
sahf
jle
iret
inc
mov
imul
push
nop
rolb
mov
lods
jbe
pop
mov
or
lods
jle
sub
sub
sbb
xor
jecxz
lret
mov
and
sahf
mov
daa
cs
mov
push
mov
add
cmpsl
xor
ds
mov
rorb
out
fsubrl
pop
fwait
jl
push
les
repnz
mov
aaa
bnd
push
xor
cltd
pop
ss
sbb
lea
stos
and
sarl
rclb
inc
lock
pop
in
loope
or
fdivl
mov
shlb
pop
xor
iret
test
cmp
or
data16
xor
adc
pop
sbb
insb
or
pop
addr16
jbe
add
add
cmp
stc
out
sbb
xchg
mov
push
cmp
clc
mov
ss
sbb
movsl
jle
jb
and
jnp
push
pushf
pop
fwait
inc
int3
orb
and
push
fcoml
push
sub
int3
repnz
cmp
inc
addr16
sub
scas
dec
imul
mov
popa
mov
inc
call
das
pushf
insl
pushf
js
rcrb
iret
lods
xchg
or
pop
xchg
fucomi
xchg
xor
data16
push
insl
sub
movsb
loopne
in
sbb
out
test
push
xor
sub
pop
jle
mov
sbbl
enter
rcl
mov
lea
stos
jg
add
mull
dec
enter
sub
aas
lahf
jns
pop
movsb
mov
jle
add
out
test
or
and
loope
jecxz
jno
imul
pop
lock
jl
inc
dec
cmc
pop
dec
mov
push
scas
and
adc
call
push
cmp
adc
jmp
dec
enter
dec
mov
fistps
mov
add
mov
xchg
fisubs
stos
pop
dec
inc
jo
xchg
or
in
gs
xchg
ret
clc
or
ret
mov
and
stos
sti
cmp
dec
xor
in
xlat
ljmp
jp
add
cmp
xor
pop
ror
sub
sub
push
adc
mov
fstl
sub
lods
sub
divl
xor
inc
mov
arpl
jnp
push
imul
mov
jmp
pop
sub
pop
xchg
xchg
stos
jg
xor
mov
xor
mov
insl
out
mov
inc
cltd
fisttpll
cmpsb
out
pop
shlb
jns
mov
adc
test
xchg
ljmp
hlt
xor
in
pop
ljmp
aaa
inc
setge
dec
pusha
jge
rorl
pop
push
push
push
icebp
loope
gs
push
mov
inc
mov
pop
pushf
add
or
fimull
ret
fmull
outsb
add
iret
sub
jne
into
adc
loopne
adc
les
cwtl
jae
jl
les
lahf
xchg
fidivrs
pop
lret
fcmovnu
mov
daa
loope
xor
inc
and
push
inc
fmuls
and
dec
or
mov
jno
sbb
sub
lea
or
or
addr16
loopne
xor
jge
inc
iret
mov
adc
stos
mov
cli
xchg
aas
jle
add
js
outsl
pop
fwait
add
sbb
pop
movsb
nop
xchg
cmpsl
mov
sbb
ds
stos
lock
mov
push
lods
aad
jl
sarb
call
sub
ljmp
pop
test
push
test
xor
pop
aam
inc
dec
add
add
ds
fistpl
ss
add
xor
enter
mov
or
sarb
roll
mov
ret
clc
push
adcb
insb
pop
jp
add
lea
mov
push
xchg
xor
jmp
cmp
jg
aaa
imul
aam
jo
or
jo,pt
push
outsb
outsb
and
pushf
xchg
sbb
pusha
in
jae
frstor
ja
jbe
sbb
add
movsb
mov
mov
push
aad
adc
cmp
or
mov
dec
mov
mov
test
xor
dec
rorl
insl
aam
lcall
cmp
jl
rorb
add
gs
test
mulb
mov
mov
push
or
std
ss
mov
cmp
jmp
push
or
out
js
loop
in
add
add
dec
and
jp
or
push
cltd
pop
movsl
out
inc
mov
mov
sahf
out
fcmovnbe
sti
mov
stos
xor
add
hlt
jmp
jl
xchg
in
dec
sub
roll
mov
call
pop
add
test
jo
adc
sub
mov
je
fs
scas
xchg
in
mov
adc
jo
jecxz
lret
and
push
mov
jg
mov
je
cmp
push
jne
mov
and
sbb
notb
cmp
cli
xchg
outsb
loope
cld
jmp
enter
lds
scas
adc
outsl
xor
xchg
mov
mov
lds
inc
aas
xchg
lret
cmpsb
pop
jo
inc
sub
xchg
ret
add
in
xchg
daa
sbb
sbb
es
and
rclb
movsl
int3
cmp
inc
mov
sbb
fadds
dec
lds
rorb
imul
arpl
push
lods
inc
jb
push
cmp
sbb
arpl
insb
insl
fidivrs
xor
leave
jge
mov
out
mov
jle
sarb
pop
cli
cwtl
add
xchg
js
insb
cmp
add
mov
pop
icebp
adc
and
leave
mov
in
jns
fnstsw
push
ficomps
movb
push
adcl
sbb
xchg
es
xor
sbb
ja
dec
xchg
in
imul
ret
lea
jge
call
xchg
cmp
out
xchg
out
movsl
shrb
push
sub
insl
jns
cmpsb
out
push
aam
sbb
xor
cmp
xor
cmp
cmp
clc
stos
cmp
and
sbb
cmpsl
sub
rcr
imul
xchg
pop
aad
in
ss
test
sbb
cmp
stc
and
cld
xlat
fsubrl
sbb
pop
js
sti
add
ror
aaa
loop
in
lods
pop
or
fwait
or
and
sti
and
sub
xchg
sti
imul
fdivp
shrl
jne
xchg
ds
dec
ds
or
add
sbb
sub
bound
jp
insl
or
addr16
pop
sbb
add
aam
adc
mov
add
cmpsb
jo
jnp
and
mov
cli
add
sti
mov
mov
jmp
and
cmp
loope
inc
pop
sbb
dec
adc
clc
push
add
stc
xchg
mov
sub
and
out
or
movsl
scas
call
mov
js
mov
add
add
jnp
push
add
mov
dec
push
jge
or
je
cmp
fistl
rclb
jg
xchg
lods
push
mov
arpl
daa
jg
ss
popa
jnp
inc
jmp
push
xor
sub
ror
outsb
aaa
push
out
fcomip
hlt
sub
lods
add
inc
sarb
and
jns
inc
pushf
push
clc
pusha
vmulpd
or
push
xchg
pop
movsl
and
shlb
xor
push
inc
push
cmpsb
popf
mov
adc
cmpsl
dec
out
ret
xor
sbb
fisubs
adc
mov
jo
dec
add
nop
mov
mov
test
dec
mov
test
push
push
leave
push
and
or
cli
insl
or
out
fyl2x
add
add
adc
les
fwait
push
loopne
je
cmc
mov
out
nop
popa
adc
push
hlt
push
dec
pop
ljmp
sub
mov
movsb
outsl
and
mov
jl
mov
and
mov
movsb
add
adc
cs
popl
ja
jns
push
xor
and
sbb
xchg
and
sbb
int
loope
cmp
adcb
cmp
cltd
push
test
aas
mov
xor
insb
dec
jle
cs
xchg
or
mov
daa
xchg
dec
xchg
adc
mov
or
dec
cmpsl
push
cmp
fwait
inc
ja
mov
stos
fwait
stos
jns
adc
xor
sbb
or
out
mov
aaa
fisttps
psubq
aas
pop
cmp
push
mov
mov
jecxz
rcll
add
call
dec
inc
xor
aaa
in
pop
pop
mov
jmp
cli
arpl
and
xchg
iret
test
push
jae
cmp
enter
add
add
loope
sub
loopne
mov
or
sub
sub
mov
jnp
and
cli
sub
in
lds
xchg
clc
in
mov
cmpsb
repnz
sbb
sti
imul
fnsave
fdivs
pusha
lods
add
xor
add
cli
mov
cmp
inc
and
lahf
testl
jns
mov
int3
push
shrl
inc
repnz
ljmp
mov
sahf
push
repz
in
and
inc
jnp
jae
mov
outsb
iret
sbb
push
jno
push
xchg
mov
push
mov
cwtl
mov
lea
roll
cmp
push
sub
std
push
xchg
roll
repnz
sub
jo
sub
mov
push
lods
addr16
dec
sub
out
test
mov
cmp
loope
pop
call
lea
and
pop
and
jo
lds
cltd
push
jae
shll
mov
mov
rolb
pop
repnz
es
in
mov
leave
pushf
lahf
adc
leave
lcall
sbb
testl
cmpl
insb
fs
fwait
inc
loopne
aad
cmpsb
fsubs
jg
mov
clc
jle
jle
xor
lret
mov
mov
add
sbb
lret
int
or
mov
push
outsl
fistpll
lret
testl
decb
aaa
sbb
loopne
sbb
sub
xor
js
in
jo
inc
test
imul
jle
lock
js
cwtl
adc
out
add
sub
or
loopne
sbb
in
jb
xor
push
icebp
lds
lods
sahf
mov
add
lahf
dec
fsubs
movsb
std
mov
dec
insb
pop
data16
aaa
xchg
pusha
ret
pop
cmp
sub
cmp
jl
pop
jmp
ss
out
int3
imul
inc
inc
adc
adc
enter
rcl
mov
test
and
push
data16
ss
ja
or
int
xchg
test
pop
mov
sub
add
mov
sbb
sbb
or
or
inc
mov
int3
xor
and
or
shll
pop
ljmp
pop
mov
jg
inc
fisubs
movzbl
or
xchg
insb
ret
subb
fwait
call
stos
aad
mov
mov
push
ja
and
sub
fnstenv
popl
fdivs
push
int3
stc
int
xor
imul
xor
lock
sub
dec
ds
bound
xchg
push
jb
loopne
loopne
lods
mov
dec
stc
mov
bound
rcrl
lods
jns
xor
aad
stc
xchg
pop
xor
lcall
mov
inc
dec
addr16
xchg
sub
int3
in
mov
jecxz
cmpsl
js
mov
mov
sbb
cmp
movsb
jmp
paddd
rolb
pop
js
sub
sub
cmpsl
movl
mov
in
in
sbb
outsl
xchg
mov
imulb
in
andb
std
mov
dec
inc
mov
cwtl
mov
sbb
pop
sub
dec
lods
shrl
insl
and
dec
push
jnp
test
fwait
out
out
push
aad
inc
movsb
sub
mov
hlt
mov
fimuls
mov
dec
push
cmpsb
pop
shll
inc
push
or
mov
pop
inc
popf
sahf
iret
loope
daa
jmp
stos
jno
pop
mov
dec
cmp
test
arpl
repnz
lock
clc
leave
mov
scas
inc
mov
sub
mov
mov
mov
sub
js
dec
adc
dec
les
adc
loop
shl
inc
sub
cs
xchg
adc
clc
mov
xchg
out
shll
call
icebp
xchg
pop
push
fisubrl
stos
pop
jb
aas
fs
in
pop
xor
cwtl
pop
sbb
sub
flds
jecxz
xchg
mov
mov
in
add
int
mov
fwait
add
rcrl
mov
iret
shlb
in
arpl
add
fsubrs
cmpl
jp
jecxz
lds
aam
adc
je
mov
shll
xchg
pusha
adc
or
mov
xchg
dec
loopne
lods
xor
stos
and
and
dec
xchg
fwait
aad
shlb
xlat
enter
pop
add
rcll
pop
aaa
pop
mov
int
fisttpl
jb
mov
sub
mov
out
and
pop
je
in
add
push
push
dec
pushf
or
aas
add
pop
fdiv
outsl
mov
cmc
add
addr16
cld
xchg
sub
push
sti
mov
mov
and
jmp
xchg
jp
fsubl
ja
cmp
mov
enter
inc
mov
xor
xchg
pusha
aas
int3
push
ljmp
lods
sub
inc
sahf
push
pusha
sahf
clc
jnp
pop
pop
lret
push
inc
push
mov
mov
in
or
or
inc
mov
in
scas
add
xchg
inc
add
adc
mov
mov
scas
mov
xor
movsb
adc
push
popf
push
in
cmp
cmp
sub
pop
xchg
mov
fstps
or
push
xchg
lret
cmc
dec
fcmovne
jp
sbb
adcb
sti
scas
int3
dec
imul
jmp
js
ljmp
enter
sahf
inc
in
lahf
js
mov
or
inc
pop
scas
ret
enter
and
cmpb
dec
fldcw
jl
xor
inc
arpl
push
movsl
popa
mov
ds
push
dec
lods
inc
jp
xchg
gs
push
lea
add
xchg
insb
xchg
movsl
gs
aam
out
sub
dec
inc
pop
sbb
gs
xchg
out
add
subl
dec
mov
aam
sbb
push
mov
pop
adc
out
outsl
xchg
mov
insl
imul
stos
cmp
sbbb
call
jne
dec
pop
pop
xor
and
stos
cmpsl
or
test
and
jbe
and
mov
in
gs
fs
out
cmpsl
adc
or
pop
cmp
fidivs
mov
scas
shrb
ljmp
xor
loopne
nop
mov
pop
fucomip
lret
outsb
insb
xor
pop
cs
outsl
pop
leave
loopne
sbb
mov
lret
xor
sub
insb
xor
rcrl
pop
dec
xchg
dec
cmpsl
stc
mov
in
out
add
cmp
out
pusha
jae
mov
mov
pop
lcall
pop
imul
notl
ljmp
ds
mov
mov
mov
fmulp
pop
test
jb
push
or
aad
daa
fisubl
mov
imul
add
mov
xchg
ret
xor
cmc
imul
lret
dec
repz
andb
cmp
and
out
fwait
call
jae
pop
fdivrs
ljmp
add
add
popf
mov
mov
pop
fistpll
push
shlb
adc
mov
cltd
pushl
sti
push
adc
scas
or
adc
fwait
cmpsl
cmpb
test
rcr
lcall
aas
jbe
icebp
and
pop
inc
inc
popa
mov
push
es
pop
lcall
mov
mov
mov
movsb
int
call
mov
jo
jle
sahf
sbb
pop
popa
cmp
cmp
pop
or
js
mov
cmp
mov
sti
and
in
sbb
lods
sub
sub
mov
cs
mov
ljmp
cwtl
in
cmp
ror
scas
mov
jp
push
add
xor
fists
push
xor
sub
adc
xor
jae
cmp
stos
inc
or
das
and
push
ljmp
xor
jne
adc
xchg
or
dec
dec
pop
add
sub
int3
cwtl
repz
stos
jnp
xlat
and
or
xchg
mov
or
lcall
daa
ljmp
push
lcall
push
mov
imul
or
jne
lahf
adc
fiadds
in
xchg
clc
lret
or
or
mov
inc
xchg
add
mov
daa
stc
or
jge
daa
loop
ds
xor
in
jmp
mov
or
push
iret
xchg
xor
ljmp
lcall
xor
sub
cltd
lea
xor
and
cltd
mov
adc
mov
push
mov
mov
iret
ret
loop
push
pop
addr16
int3
js
inc
arpl
hlt
call
pop
leave
insl
out
mov
roll
mov
add
les
adc
addb
test
jle
mov
dec
or
xchg
pop
in
cmp
inc
and
or
int
sub
cs
jecxz
fwait
je
or
nop
jo
ja
or
icebp
push
and
data16
pop
in
repnz
rcrl
xchg
cmp
add
mov
fnsave
popf
cli
jmp
fstps
stc
jno
aaa
ja
xor
xor
jp
dec
jle
out
daa
xchg
mov
dec
mov
add
mov
pop
out
scas
mov
enter
aas
xlat
add
pop
rcll
popa
in
inc
cmp
push
xchg
pop
outsb
shll
insl
gs
aam
jne
and
out
adc
cmpsl
cmp
mov
aaa
add
inc
sub
mov
jb
jne
fsubrl
pop
inc
ret
adc
iret
xor
adcb
xlat
add
test
sub
mov
or
jmp
mov
mov
adc
mov
push
hlt
jo
or
mov
inc
add
loope
andl
or
mov
int
xchg
mov
mov
push
lock
and
nop
or
ret
addb
les
lods
fldl
mov
sbb
notb
sbb
loopne
adc
mov
or
lds
fnstcw
leave
jns
in
shll
cld
dec
sti
mov
mov
shrl
dec
jae
inc
mov
xchg
and
xchg
and
add
cmpsl
sahf
jle
push
pop
cwtl
out
repz
les
dec
mov
out
jp
outsl
stc
nop
dec
addr16
movsl
loop
movsb
mov
xchg
dec
push
adc
lea
cmp
ret
nop
push
ja
out
sbb
push
jge
adc
push
xchg
and
and
repz
add
add
ficoms
mov
sub
int
outsl
jmp
dec
lods
cltd
sbb
in
adc
ret
jl
mov
jne
and
jo
mov
add
out
stos
in
aad
xor
xor
sbb
lds
je
xor
inc
pop
sub
jbe
fisubrs
mov
movsb
sbb
jns
fcomip
cmp
xchg
test
xchg
pop
scas
jl
and
lods
cmp
stos
and
leave
jle
push
mov
cmpsb
or
ds
les
std
pusha
pop
mov
inc
in
hlt
insl
movsl
iret
hlt
push
cmpl
lods
xchg
test
stos
xor
xchg
dec
pop
shll
dec
out
add
inc
lods
inc
fwait
sti
push
jo
dec
pop
hlt
add
iret
pop
or
fimuls
mov
push
and
lret
dec
and
push
sub
add
mov
cmp
mov
pushf
mov
push
into
loope
lods
nop
sub
and
sbb
sti
jge
xchg
inc
jp
mov
and
xchg
mov
outsb
and
or
sbb
xchg
fwait
mov
pop
cmp
incb
stos
dec
mov
pop
sub
add
fs
cmp
xor
out
push
shll
fbstp
imul
outsb
adc
or
js
jg
xchg
fnstsw
orl
sbb
mov
xchg
dec
adc
addr16
ret
jo
lret
and
add
fdivrs
mov
adc
rolb
imull
adc
inc
rcl
in
sbb
dec
clc
outsb
dec
in
rorl
cmp
xchg
mov
pop
adc
pop
mov
mov
mov
andl
pushf
scas
and
fimuls
arpl
ds
cltd
jo
xor
add
add
mov
mov
je
pop
or
repnz
mov
pop
popa
jae
into
mov
gs
rolb
mov
jge
daa
inc
xchg
fwait
not
data16
mov
add
mov
and
mov
and
cmp
imul
jno
push
daa
insl
jns
inc
push
movsb
jb
js
jge
inc
sub
shll
jno
xchg
sbb
out
pop
jge
add
lret
push
mov
and
stos
movsb
into
pop
pushf
je
or
pop
lcall
sbbb
push
push
add
popf
int
pop
mov
mov
push
lret
cld
cmpl
call
mov
scas
xchg
fcmovbe
jecxz
add
mov
stc
jge
int3
insl
sbbb
dec
fimull
xor
jo
xor
fs
inc
and
add
fwait
and
sti
insb
inc
add
in
adc
mov
fdivrs
icebp
xor
inc
sbbl
lret
sbb
adcb
jp
je
das
sbb
dec
adc
repnz
in
xor
cmpsl
adc
out
mov
cmpsb
mov
aam
mov
in
test
popf
cltd
jl
mov
push
sbb
jno
mov
fdivl
rolb
mov
pusha
dec
and
inc
insb
push
jne
inc
add
stc
imul
jge
loop
insl
push
add
jmp
xchg
aaa
mov
outsb
jp
jmp
lahf
movsb
js
cmp
adc
cmp
sti
cltd
cwtl
stos
sub
or
lods
mov
jo
je
push
cwtl
sub
repz
jg
jecxz
lcall
daa
and
loope
sbb
or
or
jae
pop
lret
sub
subl
cltd
push
ds
fdivs
sahf
addr16
dec
sarb
pop
mov
icebp
sahf
xlat
xchg
push
jb
xchg
add
imul
xor
ja
mov
push
jp
std
mov
sbb
sti
cltd
xor
lret
sbb
test
and
sub
out
addl
cmp
es
inc
ret
push
frstor
mov
mov
subps
in
inc
push
icebp
pop
pop
les
dec
es
jmp
movsl
push
mov
andl
mov
enter
jmp
ret
sbb
sub
xchg
pmulhuw
fucomip
gs
pop
sub
cmp
adc
subl
push
inc
insl
mov
mov
in
and
cmp
push
pop
es
pusha
pop
push
pop
mov
sub
mov
mov
sub
ja
mov
loope
lcall
hlt
in
insl
shrb
cmp
mov
add
clc
mov
cmpb
cmp
insl
or
dec
sbb
stos
cmpsl
jb
imul
pop
adc
imul
push
or
xor
shlb
insl
pusha
add
adc
movsl
jmp
jg
and
out
or
inc
pusha
dec
pop
loope
inc
inc
lods
ljmp
imul
mov
jne
mov
mov
xchg
loopne
xchg
xchg
pop
loop
pop
lods
lret
fsubs
sub
lahf
sbb
nop
imul
cmpsl
add
cmp
cmpsb
mov
in
pop
stos
lock
cmp
ss
or
mov
repz
mov
jmp
xor
jns
rclb
add
xchg
add
add
mov
out
gs
sub
stc
stos
leave
popa
movsl
xor
je
mov
out
mov
sbb
in
push
sbbb
lcall
jl
mov
scas
lret
jmp
testb
in
int3
add
scas
sbb
or
pop
stos
mov
clc
mov
in
adc
dec
mov
pusha
xchg
leave
outsl
outsl
push
jns
test
mov
pop
mov
inc
cwtl
jmp
sbb
call
lds
in
mov
dec
mov
shr
cmpsb
mov
add
or
mov
jns
dec
push
cmc
pushf
xchg
dec
mov
mov
inc
pop
enter
sbbb
in
loopne
clc
cmc
jo
mov
pop
roll
repz
add
in
int
data16
xchg
pushf
mov
push
iret
scas
shl
jne
sub
fmull
xor
dec
mov
mov
inc
in
mov
clc
icebp
push
adc
push
add
inc
pop
adc
fistpll
sub
xchg
cwtl
inc
cmp
movsl
push
loopne
stc
hlt
fstp
int3
mov
fcoml
push
xor
data16
pop
push
xor
lods
inc
xchg
jp
jge
sbb
sub
fbstp
or
xchg
pusha
adc
mov
ret
inc
pop
mov
jno
lods
fs
mov
scas
shr
clc
fbstp
mov
pop
leave
xor
cmp
int3
push
mov
inc
xchg
and
out
inc
dec
ljmp
sub
mov
stos
movsl
in
dec
dec
adc
push
dec
fcmovnu
mov
insb
daa
sbbb
pop
mov
in
sub
mov
lods
mov
lods
adc
enter
xchg
lcall
mov
add
mov
jnp
lret
pop
loopne
filds
data16
loope
inc
dec
stos
push
daa
dec
jge
outsb
out
mov
arpl
scas
lods
push
mov
inc
jnp
rcl
fcompl
int
xchg
jne
pop
enter
add
xor
sahf
stos
or
in
lret
jae
sbb
fucomip
add
mov
in
mov
stos
jle
and
lret
add
iret
aam
int
test
ss
fdiv
mov
xchg
xchg
rcrl
xchg
xchg
push
rorl
mov
dec
xchg
sbb
test
test
mov
or
push
xchg
jb
std
or
xor
outsl
addr16
jb
push
cmpsl
aam
sbb
jb
mov
lods
adc
push
inc
xchg
push
inc
mov
lods
mov
cltd
push
mov
stos
in
xor
jg
sbb
inc
mov
or
fists
jp
mov
nop
jo
dec
sbb
es
sbb
jecxz
xor
push
inc
rolb
shrl
add
cltd
in
push
push
mov
fistps
add
sar
fdivl
or
sbbl
lds
pop
or
jb
adc
nop
xchg
mov
jne
add
mov
inc
xchg
loop
jle
jbe
sub
sub
jl
lahf
mov
dec
push
cmp
daa
ret
and
not
xchg
push
xor
dec
leave
insb
inc
sahf
push
sub
popf
insb
mov
out
pop
jl
and
imul
inc
insb
push
fists
lret
jmp
mov
add
ja
test
test
inc
lods
aaa
sbb
insl
sbb
lds
cmp
lods
mov
mov
cmpsb
or
fsubl
xchg
or
jg
xor
add
add
mov
jge
dec
xchg
jl
lahf
mov
cmp
mov
scas
xchg
adc
pop
sub
aas
call
push
sbb
mov
insl
xor
adc
xchg
fstl
mov
dec
iret
fnstsw
sub
jnp
xchg
push
jnp
push
aad
jl
push
xchg
popf
les
lds
sahf
mov
repnz
dec
outsb
fwait
mov
fadds
mov
jb
mov
bound
xchg
cld
xchg
movsl
icebp
or
mov
dec
sub
enter
gs
les
andb
fs
ja
adc
jp
mov
mov
lret
in
jge
fwait
xor
adc
jne
push
lods
popa
testb
xchg
jecxz
push
aas
adcb
mov
sub
hlt
jae
rcrb
mov
movsl
lret
xlat
test
ret
imul
jo
mov
rcl
jl
dec
test
repnz
ja
mov
and
in
cs
mov
add
push
push
movsl
or
lcall
push
lret
iret
movsl
aas
insl
mov
cmpl
sarl
es
pop
loopne
push
ds
insb
movsb
add
xor
cld
mov
sahf
sbbl
roll
pop
pop
je
shrb
mov
xor
enter
mov
jecxz
xor
and
mov
imul
out
popf
lock
cmpsl
push
mov
pop
mov
cmp
mov
leave
sbb
adc
xchg
insb
mov
xor
mov
movsl
mov
add
cmp
mov
mov
scas
add
andb
movsl
fstpt
xor
push
loop
cmp
movsl
push
push
push
gs
rcr
sub
mov
jmp
roll
sub
bound
or
xor
adcb
xor
sub
cwtl
ret
cs
shlb
pop
sub
add
insl
rclb
repz
pop
ds
jnp
fmul
dec
lods
cmpsb
mov
or
movsb
in
or
pop
and
fisttps
cmpsl
in
enter
sbb
push
push
or
loopne
loope
lcall
xchg
mov
lds
add
mov
sbb
adc
mov
push
cmp
push
mov
adc
push
clc
pop
push
cli
lret
repnz
sub
aad
out
ret
adc
pop
ljmp
decb
jecxz
jne
fwait
mov
addr16
pop
xchg
insl
lret
rcl
dec
add
dec
pop
xor
or
sahf
repz
rcrl
push
out
outsb
jns
gs
mov
cmpsb
mov
pop
mov
js
add
adc
outsl
repz
mov
icebp
pop
push
jle
xor
mov
fsubp
les
push
dec
pop
dec
inc
sub
or
test
and
lods
cmp
pop
adc
xchg
repz
mov
daa
pop
push
push
lret
jg
sub
in
imul
fimull
rcl
iret
jo
mov
mov
adc
cmp
mov
sbb
mov
jg
push
xchg
out
or
dec
orb
pop
test
sbb
mov
or
cltd
dec
pop
out
cmp
xchg
dec
and
sub
xchg
pshufw
ljmp
gs
mov
jg
mov
pop
sbb
mov
push
hlt
cltd
pop
xchg
loope
into
and
inc
mov
les
pop
cmpsb
loop
cmp
push
fsubr
out
xchg
lret
pop
push
pop
xchg
pop
mov
lret
sbb
add
shlb
xchg
in
mov
push
pop
enter
mov
es
or
out
hlt
frstor
adc
mov
sbb
aas
xchg
shlb
in
mov
fsubrs
imul
dec
outsl
in
adc
leave
sarb
std
and
shrb
jns
test
divl
and
sbb
mov
pop
cmpsb
cmp
mov
pop
cmp
out
cltd
lahf
leave
stc
mov
pop
pop
push
iret
lret
cli
mov
mov
rorl
lcall
xlat
iret
sti
sarl
xchg
pop
adc
xchg
cwtl
sahf
lds
push
or
out
fsub
test
les
and
into
or
adc
pop
lahf
inc
sti
push
lds
push
pushf
mov
sbb
push
xchg
lcall
dec
dec
dec
pop
cs
leave
mov
movsl
aas
push
jo
and
in
scas
xlat
push
lahf
lahf
mov
lahf
or
test
pop
and
pop
rclb
cmp
cmp
mov
push
mov
pop
stos
or
cld
daa
cmp
faddl
xchg
out
push
xor
pop
shll
lds
mov
out
jno
pushf
mov
xchg
adc
int
das
lret
push
aaa
mov
xchg
aas
sti
test
loopne
lcall
and
in
mov
fs
popf
jmp
push
loope
iret
xor
sub
inc
in
xor
repz
in
test
repnz
mov
xchg
jg
je
movsb
mov
ljmp
adc
loop
push
int3
jp
es
shrb
sub
aam
testl
imul
sbb
lods
out
je
stos
adc
cmp
jo
mov
not
mov
xor
inc
jae
ljmp
aas
jmp
push
jbe
jbe
pushf
xlat
ret
repz
aaa
and
jo
sub
movsl
adc
ja
cmp
pop
fdivrs
clc
cmp
in
ret
imul
lds
in
adc
push
in
mov
jo
xchg
js
pop
in
jns
adc
jbe
xchg
ljmp
xchg
push
xor
faddp
sub
mov
push
icebp
or
lret
xchg
repnz
fstpt
arpl
pop
mov
dec
sarb
repz
mov
pop
ficomps
push
rorb
test
push
jmp
in
test
cld
mov
loop
movsl
pop
movsb
push
mov
or
pop
pop
nop
cmp
cwtl
sub
sub
mov
mov
mov
dec
cmpsb
dec
inc
mov
push
mov
mov
sub
pop
adc
xor
sub
mov
popf
push
mov
xchg
sbb
mov
and
xor
ljmp
and
mov
push
cmpsl
sti
push
fcomp
jnp
gs
fstl
push
loop
pop
jne
xorl
xchg
jg
push
mov
inc
sarl
sbb
aam
outsb
pop
repnz
fsubrp
loope
std
arpl
jg
icebp
shl
gs
mov
jne
subl
mov
cwtl
or
cmpl
icebp
sub
pop
enter
cmp
cltd
xor
xchg
xchg
fmul
dec
aaa
push
mov
add
add
clc
or
xor
mov
inc
cmp
cmpsb
sti
xor
in
push
sbb
lods
add
push
sub
adc
lods
pop
pop
adc
mov
rcrl
jb
jbe
aaa
push
pop
mov
pop
sbb
pop
xor
cmpsb
mov
and
dec
and
jae
ret
sub
inc
adc
sbb
orb
xchg
leave
xor
loopne
lea
fcomp
mov
inc
test
jns
cmp
addr16
adc
lahf
mov
inc
cmpsb
iret
push
or
xor
in
jle
cmpsl
jp
gs
jo
scas
add
sbb
pop
or
adc
mov
or
jne
fwait
leave
movsl
xlat
inc
mov
add
shr
fsts
cmpsb
fmull
pop
je
in
mov
add
jo
or
mov
aaa
filds
dec
movsl
inc
sti
push
push
jno
repz
pop
mov
icebp
sbb
sbb
add
ret
mov
dec
sti
cmp
xchg
add
imul
jl
mov
out
lcall
aaa
cmpsb
int3
lds
dec
leave
imul
loop
mov
test
and
cmc
jmp
add
rcrb
xor
addr16
adc
mov
sbb
mov
popf
pushf
es
add
push
fsubrs
std
aam
pop
loop
lods
mov
fsts
add
dec
push
imul
int
sub
or
imul
repnz
ss
push
push
sbb
cmpsb
jne
enter
jmp
negb
and
insl
mov
dec
push
sbb
sub
or
adc
adc
mov
add
add
rcr
int
mov
bound
add
nop
mov
sbb
jbe
shlb
out
or
cmc
sub
rcll
mov
push
nop
mov
lods
inc
data16
in
push
dec
push
frstor
mov
inc
scas
jl
cmp
mov
cmpsl
pop
mov
inc
or
or
aad
add
mov
sub
int
mov
inc
and
adc
insb
in
fwait
les
xchg
inc
xlat
jo
xchg
in
mov
lret
cmp
jcxz
xor
mov
sti
rep
xchg
das
add
outsb
fdivp
inc
fwait
xchg
lods
fstpl
pop
mov
dec
out
dec
mov
jns
imul
cmp
mov
mov
es
es
and
dec
in
cmp
mov
push
pushl
cmp
mov
je
fisubl
jl
subb
aas
jns
fistps
std
iret
mov
daa
jae
les
mov
adc
sbb
push
daa
pop
mov
pusha
xchg
cltd
enter
jg
cmc
popf
cmpb
imul
fs
fadds
cwtl
dec
add
rcrl
test
clc
add
jne
fldcw
popl
js
lret
xor
pop
loop
hlt
jnp
push
ss
clc
hlt
cmpl
sub
mov
mov
adc
xchg
push
sbb
push
fmuls
ret
stos
mov
pop
je
movsl
mov
add
adc
adc
mov
xor
mov
in
cli
in
pushl
mov
pop
je
pop
xchg
mov
fidivs
jl
mov
out
push
lock
add
add
aad
sarl
aam
add
xor
jae
inc
outsb
cmp
enter
insl
movsl
jecxz
repz
test
pop
rcll
test
out
outsb
sbb
stos
fwait
aam
mov
cs
cmp
rclb
in
arpl
pop
aaa
push
dec
cmp
sub
mov
loopne
in
lods
ficompl
aad
add
mov
arpl
xor
and
jecxz
xor
sbb
xchg
push
push
fwait
and
aas
xchg
sub
icebp
insl
fdivrl
or
push
aaa
je
outsb
jns
mov
pop
in
jne
int
cwtl
into
cmp
inc
mov
jo
adc
pop
aaa
pop
fdivrs
sub
ficompl
jnp
xor
call
mov
cli
xchg
pop
jne
jae
sarb
or
fs
pusha
push
jmp
or
stos
popa
call
shll
fwait
jp
std
inc
les
mov
cmp
test
rcll
mov
pop
insb
hlt
and
repnz
mov
xchg
dec
jmp
incb
sbb
js
xor
dec
negb
xchg
fdiv
push
mov
and
std
rorl
mov
mov
mov
cvtpi2ps
cmp
xchg
or
cmp
inc
insb
push
push
add
sbb
mov
jnp
fmuls
pop
aam
mov
push
sbbl
add
pop
inc
popf
jnp
inc
jl
test
cmp
mov
sbb
into
jge
mov
movsl
gs
ja
fcoml
and
fcompl
fwait
js
mov
cmp
stos
and
aam
mov
cmp
daa
sub
xor
jp
fidivs
inc
adc
mov
cmp
pop
aaa
dec
xchg
int3
test
pusha
inc
dec
mov
inc
mov
mov
cld
xor
pushf
lock
push
sbb
inc
jl
push
push
lods
xchg
mov
fstps
mov
ljmp
enter
stos
inc
scas
int
les
xchg
jnp
test
fistpll
xchg
push
sbb
flds
btc
sbb
divl
pushf
outsl
xor
jb
xchg
mov
cmp
xchg
mov
lret
mov
and
and
leave
sbb
adc
rcrb
fdivs
mov
sbb
mov
adc
in
jge
popf
mov
adc
dec
xchg
xchg
pop
mov
push
mov
movsl
and
repz
mov
cmp
rolb
fcmovnu
sub
mov
aam
mov
fnstenv
pop
adc
mov
data16
inc
cwtl
aaa
add
mov
outsl
mov
mov
iret
cmp
pop
push
dec
les
xor
enter
das
lods
int
inc
or
inc
cmp
das
ss
cs
subl
jne
arpl
jae
out
cs
cld
rol
xchg
fdivrl
icebp
incb
push
lea
inc
and
movsl
int
xchg
movsb
mov
clc
iret
jge
ror
jae
pop
or
mov
aaa
repnz
arpl
cmpsl
mov
bound
mov
bound
mov
and
addr16
push
and
mov
lret
psubusw
outsl
mov
je
xchg
lods
ljmp
ficomps
cwtl
mov
les
rclb
out
jb
inc
push
and
test
insb
mov
xchg
dec
movsb
xchg
test
ret
jno
mov
or
test
rol
shrb
roll
add
add
sti
fistpll
push
mov
push
pop
dec
push
cld
repz
loopne
mov
mov
jbe
outsb
mov
and
mov
cmp
rcrb
iret
xor
call
mov
pop
icebp
dec
test
mov
cwtl
mov
adc
and
or
nop
dec
xchg
test
mov
and
add
mov
sub
in
subl
jp
sbb
xchg
cmpl
enter
inc
stc
push
aad
test
or
cltd
or
lret
adc
shll
cmp
xor
pop
dec
cmp
xchg
cmc
cmp
or
sbb
cmp
setae
mov
adc
stos
shr
movsb
stos
pop
sbb
xor
pushf
jnp
pop
in
xchg
add
inc
add
push
inc
xchg
ja
pop
jo
daa
mov
sbb
pop
and
push
fxam
sbbb
in
in
push
xchg
jmp
test
loop
push
sbb
jg
pushf
dec
sub
sbb
jbe
daa
in
push
idivl
les
pop
imul
or
stos
out
dec
aaa
jo
sbb
add
pop
scas
pop
and
cmovge
dec
mov
popa
push
jle
push
fistpll
pop
mov
xchg
and
pop
adc
sbb
push
int
pop
stos
insl
pop
mov
lcall
push
and
ds
test
mov
mov
cmp
fistps
pop
data16
repz
mov
fdiv
xchg
sbb
mov
leave
xchg
insl
fisttps
xchg
fdiv
cmp
jnp
mov
loopne
ficoms
or
pusha
addb
sub
mulb
mov
fildll
clc
push
and
aam
fstpt
mov
lret
clc
push
mov
mov
ss
and
iret
pushf
dec
mov
mov
sub
inc
stos
test
dec
rcr
cmp
xchg
jbe
loope
inc
or
jo
cmp
ljmp
sub
add
mov
ja
fsubl
add
clc
ds
aas
fcompl
mov
and
test
ljmp
pop
shll
mov
inc
lea
fst
xchg
pop
clc
int3
bound
outsb
adc
push
cmp
lds
cmp
fbld
add
imul
jo
mov
mov
shlb
scas
flds
add
arpl
sahf
ss
loopne
loope
pop
pusha
cld
inc
jne
mov
sub
sbb
mov
cmp
xor
aad
inc
jmp
and
mov
sbb
loopne
and
or
jge
mov
dec
movsl
dec
cmp
cmp
lcall
loope
cmp
mov
jne
int
shlb
sbb
jne
sti
ret
mov
cmpsb
sub
pop
aad
mov
sbb
push
xor
test
data16
sub
dec
fsub
and
fnsave
stos
push
hlt
ss
je
clc
mov
jae
mov
xlat
out
loop
sbb
jo
mov
pop
je
adc
es
cmp
xchg
hlt
je
sti
nop
push
cmpb
js
aam
jbe
repz
lods
jmp
or
add
add
and
movsb
sub
leave
push
sti
mov
daa
test
in
or
out
insb
ljmp
pusha
cli
lret
loopne
mov
push
push
popa
sbb
cwtl
les
inc
pop
bound
sub
push
call
and
fstl
insl
test
mov
gs
fs
bound
mov
jl
mov
fiadds
mov
jae
test
dec
enter
inc
daa
in
adc
mov
call
cmp
imul
lret
fdivs
push
je
pop
mov
roll
fldcw
jo
add
faddl
xchg
jo
sub
lods
cltd
jmp
test
xchg
mov
push
in
mov
imul
inc
lahf
scas
pop
add
loop
mov
iret
mov
inc
mov
dec
sub
sti
loope
mov
pop
arpl
fnstenv
cmp
xchg
jae
pop
sbb
cltd
pop
push
jo
sub
lods
and
outsb
outsb
std
orl
cmp
enter
push
insb
xchg
test
lcall
gs
or
pop
sub
sub
pop
pushf
popf
shll
cmp
pop
ficompl
dec
sub
int3
arpl
cld
xor
es
mov
cli
xchg
ja
aam
rcrb
test
xor
sbbl
fdivrl
addl
lcall
pop
xor
negl
sub
xor
jns
fsts
pop
ljmp
or
inc
xchg
push
and
cli
daa
push
in
or
repz
in
xor
push
icebp
xor
xchg
add
mov
imul
xor
pop
push
loope
push
std
fdivrs
mov
or
into
repnz
ja
jo
into
pop
lea
add
add
mov
insl
test
adc
mov
out
sub
test
movsb
negb
push
ss
addl
inc
daa
lret
aad
add
xor
stc
mov
and
jecxz
sub
adc
xchg
lcall
inc
mov
in
mov
gs
and
xlat
sub
in
ret
pushf
mov
inc
mov
sarb
pop
mov
repnz
lret
mov
or
sub
sub
cmpsb
and
sbb
xchg
mov
xchg
xchg
in
sub
shrb
sbb
pop
sarb
pushl
mov
mov
stos
lock
pushf
mov
ret
cmp
das
sub
jmp
fildll
popf
imulb
xchg
pop
icebp
push
push
rol
stos
fidivrs
in
out
movsb
scas
fiaddl
hlt
scas
push
add
sbb
int3
pop
in
mov
cmp
in
mov
sbb
insl
loop
inc
test
fisubrs
fcmove
jg
pusha
filds
std
cmovbe
mov
aad
jo
out
or
pop
or
jns
cli
cmp
sub
jmp
mov
push
cmp
stos
mov
add
inc
cmp
jne
mov
ret
cmpsb
and
movsb
clc
jg
mov
xor
test
popa
and
pop
pushf
outsb
mov
std
dec
mov
test
push
cmp
jg
fisubrl
xor
test
sbb
call
ret
push
push
fsubrp
in
sahf
out
mov
or
loope
js
test
xchg
sti
hlt
scas
xor
shrb
mov
push
mov
or
in
scas
das
add
mov
and
lds
sub
add
add
pop
jl
hlt
xchg
add
inc
xor
pop
aas
cmovg
xchg
mov
jmp
xchg
inc
jl
enter
insl
lea
stos
fidivs
aas
cmp
fs
xor
cli
pushf
inc
test
or
fadds
dec
sbb
adc
sahf
jae
dec
jb
xchg
sbb
das
mov
mov
or
cmp
jo
sub
adc
jae
sub
dec
or
cltd
mov
inc
jg
mov
mov
pusha
mov
shlb
or
psubd
scas
jb
and
or
stc
les
mov
and
inc
inc
in
pop
insl
xor
je
pop
add
mov
push
cmp
ret
dec
es
and
xchg
adc
mov
dec
roll
shrb
bnd
jae
dec
movhps
push
insl
mov
or
mov
jp
and
sbb
mov
jecxz
or
mov
adc
and
test
imul
addr16
shlb
mov
pushf
cmc
pop
in
dec
and
pop
pop
mov
outsl
sti
andl
mov
mov
in
loop
loop
mov
dec
pop
mov
mov
pop
dec
xchg
hlt
sbb
andb
scas
pop
cs
xchg
stos
ja
mov
rclb
movsl
add
inc
adc
out
ret
mov
or
push
js
dec
dec
insb
cwtl
pop
adc
jmp
jmp
aaa
addb
out
outsl
scas
and
bnd
sbb
cs
push
xchg
sub
cmp
mov
or
push
mov
or
inc
or
or
pop
jg
jecxz
jne
mov
adc
jle
inc
clc
sbb
rcr
adc
lock
movsb
pop
arpl
add
mov
ja
push
jne
pushf
sub
push
call
insb
fsts
in
pop
jl
cmp
push
js
jo
les
fdivrp
push
push
and
shlb
push
pop
and
xor
inc
cmpsl
and
mov
loop
xchg
inc
mov
outsl
jno
and
cs
cwtl
sti
dec
inc
cmp
adc
fmull
dec
and
xchg
gs
cmp
mov
xchg
arpl
cld
movsb
cmpsl
inc
jae
add
das
fidivl
fistpll
push
xchg
repnz
add
fdiv
add
lods
pop
jg
mov
sub
sub
andl
push
inc
inc
pop
lcall
or
fwait
push
jg,pt
cltd
ljmp
ror
bnd
test
pop
jp
test
sub
jno
cmp
and
adc
testl
add
cmpsb
push
and
fsts
das
loopne
adc
adc
lods
jo
sarl
jo
mov
sahf
pop
sub
fwait
outsl
fcmove
push
xchg
mov
mov
hlt
and
fwait
stos
sbb
jnp
imul
pop
rorl
push
xchg
and
inc
fcomps
mov
pop
sub
adc
fstpl
cs
dec
sub
jmp
pushf
mov
jge
pop
mov
leave
jae
fildll
jae
and
sub
xchg
into
mov
stc
pop
adc
mov
cmp
popa
sbb
mov
iret
fwait
push
xor
jae
sub
and
dec
and
lock
lods
jnp
lods
fsubl
mov
inc
cs
cmp
inc
cmpsb
xchg
scas
add
jle
sbb
mov
pop
pop
imul
add
add
mov
int
mov
sbb
add
faddl
into
xchg
xor
mov
sub
lock
fcompl
ljmp
loope
test
outsl
lret
push
add
mov
out
jo
sub
or
and
pop
mov
xchg
ljmp
in
or
iret
xor
stos
sub
dec
je
mov
mov
aam
aaa
in
pop
adc
or
insl
stos
scas
sbb
lret
jl
mov
fnstsw
iret
dec
inc
jp
push
popf
jb
mov
push
dec
insl
mov
std
lock
sub
cmp
cmp
pop
mov
mov
jp
into
sarb
dec
push
mov
jo
fildl
push
adc
lret
inc
push
mov
xor
insl
jge
fisttpll
xchg
inc
inc
mov
lret
jns
rcll
loopne
sbb
or
movsl
mov
mov
push
add
push
mov
push
push
or
jle
fstpl
stos
cwtl
pop
in
adc
jae
dec
pop
xlat
mov
fcoms
jne
sbb
xlat
fdivs
fwait
outsl
cmc
sarl
xchg
inc
fdivs
mov
mov
and
mov
add
fiadds
pop
adc
test
or
fists
xorb
or
call
sti
jnp
arpl
mov
xchg
aam
repz
inc
inc
inc
movl
and
mov
xchg
xlat
jmp
push
mov
idivl
mov
and
test
nop
ret
in
inc
int3
pusha
loop
fmuls
cmp
xchg
ret
rcll
loop
sbb
cmpsb
xlat
test
mov
dec
pop
out
test
mov
jecxz
iret
mov
add
add
sub
cmp
lret
xchg
mov
and
rcll
repnz
stos
ja
lret
popf
ja
jg
pop
push
dec
push
dec
mov
cmp
xchg
bsr
jne
fs
push
xchg
pop
loopne
int3
mov
das
nop
push
imul
sub
sarb
push
mov
subb
dec
sub
fcomps
loope
les
add
push
icebp
std
pusha
add
or
mov
push
and
rcrb
mov
cmp
rorb
and
cmpsb
push
mov
cmp
sbb
nop
mov
mov
adc
sub
mov
les
sub
sbb
push
jg
pushf
adc
leave
cmp
and
repz
insb
outsl
pusha
repnz
pop
fsubrl
mov
add
fdivrs
addr16
mov
movsb
sub
rcll
pushf
nop
mov
sub
mov
addr16
test
in
dec
nop
mov
xor
or
aas
loopne
cmp
xchg
sbb
add
jne
shlb
js
dec
mov
jmp
je
sbb
sbb
test
mov
push
popf
mov
filds
add
test
cmp
push
ljmp
sub
mov
jg
push
inc
out
icebp
ret
push
mov
xchg
mov
cmp
and
push
negl
lock
mov
iret
es
add
call
outsb
fisubrs
jge
sub
cmpsb
pop
out
dec
dec
popf
mov
jb
neg
mov
mov
sbb
sbb
inc
jp
sbb
sbb
les
loopew
call
mov
insl
das
fistpl
and
jnp
pop
push
sbb
cwtl
jbe
es
ficompl
jecxz
jg
mov
out
add
cmp
enter
xchg
xchg
cli
sti
mov
fimuls
pushf
push
mov
fwait
sti
sub
add
push
dec
movsb
xchg
inc
cltd
andb
mov
out
and
stos
push
push
push
loope
xor
mov
aas
test
or
sub
xchg
inc
in
nop
inc
jg
xor
dec
testl
idivl
cmp
mov
lahf
movsb
fdiv
popf
clc
inc
test
sub
mov
pop
add
mov
xchg
jae
or
repnz
mov
mov
lret
clc
sbb
and
xor
or
fbld
add
fmuls
rorl
enter
rcrb
repz
mov
das
mov
adc
in
and
out
sub
push
inc
clc
inc
cmp
out
inc
mov
cld
cmpsl
cmp
push
mov
push
in
adc
jmp
xor
adc
mov
fadd
sti
inc
gs
dec
in
xlat
and
jns
outsb
pop
aam
fmull
es
test
out
icebp
push
adc
int3
mov
adc
xchg
jl
sarl
and
les
lret
ret
scas
xchg
adc
and
xchg
sub
push
cmp
addr16
cmp
stos
insb
cmp
sbb
lahf
push
sbb
cmp
jnp
in
xchg
fwait
rol
inc
outsl
sarl
jo
xchg
push
aaa
adc
mov
idivl
rorb
cld
andl
je
inc
fidivs
mov
lcall
push
and
iret
or
dec
sbbb
mov
lods
aam
jbe
mov
add
ss
jne
and
ja
jecxz
mov
fidivrs
push
testb
test
aad
dec
xor
xlat
inc
imul
icebp
imul
lods
xchg
insb
enter
jo
lret
je
adc
movsl
test
sub
pop
push
fildll
in
pop
or
cmpsb
sbb
dec
mov
jmp
add
je
addr16
inc
sbb
xchg
dec
push
gs
fwait
out
outsl
stos
in
sbb
jge
lods
pushf
scas
outsb
jbe
mov
cmp
movsl
shll
inc
fadds
or
inc
xor
aam
pusha
dec
sub
ficoms
xchg
xchg
mov
inc
dec
loope
stos
or
sbb
mov
inc
add
stos
fwait
pusha
js
sbb
pop
add
or
xchg
push
dec
popf
outsl
jmp
addr16
dec
mov
test
lds
iret
mov
fadd
mov
or
rcrb
ret
enter
stos
and
xor
ret
in
jno
daa
mull
add
xchg
pop
loopne
je
sbb
and
sti
scas
push
std
cmpsl
std
test
pusha
imul
or
cmp
xchg
pop
je
cmpsl
sbb
xor
jecxz
imul
pop
psrad
stos
fistpl
hlt
arpl
jae
jae
add
call
lods
or
ja
jl
push
cmp
sub
inc
inc
or
in
repnz
iret
fimuls
or
cmp
stos
xchg
mov
adc
jae
jne
scas
pop
xchg
mov
inc
or
jno
adc
faddp
cs
cmp
ljmp
imul
add
mov
or
xor
mov
mov
lods
adc
push
ficoml
inc
mov
mov
popf
cltd
fwait
inc
xchg
mov
mov
pop
pushf
adcb
jmp
nop
xchg
outsb
dec
pop
push
lea
push
les
mov
lcall
into
lds
es
jnp
cltd
mov
fisttps
scas
jle
outsb
aad
and
aas
icebp
mov
ljmp
nop
out
push
dec
add
test
pushf
mov
push
sbb
data16
lret
push
enter
mov
ljmp
add
push
loope
jle
pop
sbb
jno
cltd
rcrl
or
dec
xor
cmpsl
add
repz
xor
aad
add
pop
icebp
cmp
dec
cmp
xor
add
pusha
xchg
cltd
nop
mov
imul
xchg
mov
enter
mov
pop
sub
cmc
es
dec
fiaddl
push
in
adc
add
or
mov
test
pop
jne
aam
ljmp
adcb
fidivl
stc
or
xor
pusha
xchg
scas
mov
loop
mov
repnz
jnp
add
mov
imul
popa
outsl
cmpsb
push
sub
lea
scas
pop
ljmp
mov
inc
sbbl
xchg
mov
xchg
xchg
push
ljmp
mov
xor
xchg
add
test
sahf
cmp
mov
xor
into
mov
or
sbbl
icebp
adc
pop
push
push
jmp
dec
push
cmp
mov
lahf
cmc
test
adc
xorb
and
inc
xchg
dec
sbb
push
mov
fildll
in
jge
pop
or
mov
sub
lahf
push
jp
mov
nop
aas
ret
xchg
pop
and
jae
pop
fistpl
add
add
push
cmc
pop
jae
add
leave
cmpsb
test
fldcw
xchg
cmc
or
mov
mov
dec
fidivl
pusha
shll
cmpsb
movsl
dec
sub
push
in
mov
mov
test
enter
pop
xor
add
fiadds
or
pop
int3
ja
mov
xchg
shl
ret
cmc
insl
out
pop
xchg
sbb
cmp
popf
sahf
es
adc
xchg
and
pop
sbb
scas
xlat
aaa
push
lock
sbb
sbb
jmp
std
sub
and
fnsave
sub
push
mov
imul
push
add
out
adc
stos
imul
cmovno
sbb
mov
addr16
inc
mov
cmc
dec
pop
mov
test
xchg
push
xchg
cmp
xor
fists
adc
xlat
add
jl
push
dec
or
sahf
xchg
jns
jae
jne
gs
add
sbb
jmp
ficomps
fs
xchg
pop
add
call
in
mov
inc
mov
sbb
sub
and
inc
mov
mov
sahf
mov
imul
loope
popa
out
adc
lods
cmp
pushf
xor
or
imul
cmpsb
mov
mov
out
cs
inc
sbb
push
insb
jns
dec
out
xchg
js
into
xchg
mov
jae
push
mov
xor
sbb
xor
mov
mov
imul
push
imul
adc
lahf
lds
cld
cmpsb
dec
jo
std
inc
mov
mov
cs
into
outsl
js
cmp
mov
fxch
and
movsb
jbe
stos
imull
sub
mov
add
add
testl
outsl
cs
push
add
ljmpw
ret
mov
lods
and
addr16
sub
mov
mov
jb
in
or
push
iret
aad
ret
lods
sbb
das
mov
addr16
cmp
xchg
inc
pop
jge
mov
cmpsl
jb
hlt
aas
adc
fnstsw
cld
fs
mov
ds
jmp
rolb
xchg
fnstcw
lea
adc
insl
fmull
push
shl
nop
mov
cmpsb
lahf
ss
les
negl
es
dec
incl
xchg
push
int3
test
dec
mov
add
dec
pop
sbb
rcrb
es
xchg
cli
gs
adc
push
jbe
loop
push
scas
test
pushf
pop
pop
push
shlb
sahf
sbb
cmp
xchg
xchg
sub
test
in
mov
jne
test
mov
pop
mov
lahf
push
jmp
jo
push
or
adc
dec
mov
inc
mov
sub
fiadds
cli
xchg
out
aas
and
xchg
rol
mov
mov
stos
dec
or
lea
jne
cs
aam
bound
adc
movsb
dec
adc
or
test
or
mov
jo
dec
mov
pop
dec
or
mov
mov
insl
mov
pop
jnp
sahf
add
pusha
cmp
xchg
inc
and
stc
xor
mov
xor
test
imul
lret
xchg
mov
sbb
or
data16
loope
aas
ficoml
xchg
int3
xchg
fildll
pop
outsb
xchg
jnp
lods
push
mov
cmpsl
fildll
push
or
test
mov
test
mov
inc
jae
push
mov
dec
scas
xor
xlat
fstl
iret
in
test
lea
fmul
insl
loop
mov
mov
xchg
gs
inc
inc
ret
fbld
shll
movsl
mov
sub
mov
mov
aas
or
push
xchg
jp
jae
adc
test
mov
adc
and
xor
cltd
in
je
xchg
xchg
inc
shlb
mov
xchg
dec
mov
push
hlt
nop
cltd
popf
mov
loop
addr16
xchg
es
movsl
fnsave
test
add
std
mov
mov
lret
mov
lock
xchg
mov
leave
test
ds
pop
jmp
das
ret
and
cmc
insb
inc
push
mov
xlat
inc
add
int
push
in
jle
roll
cwtl
jno
jmp
mov
cmp
sub
jge
ret
add
test
inc
xchg
popf
mov
mov
out
out
ljmp
pop
insl
pushf
mov
push
cmpsl
mov
cli
ja
push
les
inc
pop
stc
daa
jne
cmp
es
jae
sbb
pop
inc
out
mov
sbb
pop
jp
cmpsl
mov
jge
xor
ljmp
fldt
or
inc
dec
mov
jl
push
cmp
and
int3
xchg
iret
popf
fs
mov
loop
call
lock
int
xchg
pop
test
sub
pop
pop
sub
out
lock
frstor
out
push
jae
into
inc
mov
fsubl
sub
cmpsb
lock
pop
cwtl
adc
xchg
cmp
aaa
pop
into
jle
imul
clc
arpl
and
inc
sbbb
lea
cwtl
jg
mov
stc
push
xchg
xchg
xor
add
xchg
mov
insb
mov
and
push
pusha
daa
rcll
popf
mov
mov
dec
lock
test
test
and
stos
sbb
jmp
jmp
fisubs
nop
pop
dec
or
stos
bound
into
mov
repnz
adc
mov
mov
mov
push
maxps
mov
sub
stos
dec
mov
cmp
enter
add
mov
aad
shlb
sbb
mov
fstp
cmp
test
dec
cmc
jns
mov
sbb
test
lea
rorl
loop
mov
cmp
adc
aas
push
mov
movsb
or
inc
lret
insl
fimuls
push
sub
or
push
mov
add
es
add
aad
sub
add
leave
xor
push
fbstp
cmpsb
dec
sbb
dec
jp
pop
cmpsl
in
fs
add
outsb
data16
mov
pop
dec
imul
add
rcrb
mov
inc
jecxz
push
sbb
ret
lods
mov
jnp
adc
aaa
aas
inc
mov
call
cmp
popa
subl
jo
cmp
aad
in
xchg
aaa
imul
xchg
in
xor
mov
sbb
dec
fidivl
inc
clc
and
or
inc
sub
test
cmp
inc
mov
sti
test
push
imul
repnz
jg
cmp
std
lcall
adc
rol
xchg
addr16
pop
xor
push
sbb
mov
lret
inc
or
mov
fsubrs
outsb
mov
sbb
pop
mov
aad
aas
add
add
add
dec
pop
scas
push
xchg
into
xchg
cmpsb
push
leave
cmpsb
ss
dec
add
push
lea
scas
dec
jmp
inc
test
adcl
in
test
imul
push
and
mov
mov
push
jl
int3
aad
fldl
hlt
test
pop
jae
in
lods
aad
lock
cli
and
lret
dec
pop
cld
daa
pop
xchg
clc
xor
jecxz
pop
mov
adc
fwait
sub
xchg
pop
pop
xchg
scas
pop
adc
inc
pop
stos
sbb
cmp
and
hlt
cmp
cmp
xor
add
lea
pop
stos
push
xor
test
jns
cld
ret
nop
push
mov
out
sub
call
imul
sahf
insl
adc
push
lods
and
mov
andb
sbb
subb
cmpsb
xor
xchg
mov
icebp
mov
leave
jo
aad
fucomp
push
rcrl
mov
fldz
adc
adc
jl
jo
lahf
push
jp
and
pop
out
cmpsl
xchg
mov
lods
dec
rcrb
mov
movsb
pop
xchg
mov
outsb
or
repz
cmp
test
imul
xchg
leave
inc
movsb
sbb
xor
jl
imul
into
sahf
rorl
sbb
adcb
dec
hlt
stc
cmpsb
test
xchg
lock
mov
test
pop
sahf
jle
xchg
repnz
mov
mov
dec
in
sbb
inc
cmp
pusha
es
aaa
pop
ficoms
call
push
push
or
xorl
xchg
adc
inc
ss
clc
int3
inc
lock
pop
scas
outsb
add
add
dec
leave
push
scas
sbbb
adc
cmp
jae
scas
movsb
jmp
mov
daa
cmp
out
js
pop
fsubrs
out
xchg
mov
inc
addr16
or
data16
add
sti
inc
adc
outsb
sbb
and
mov
sub
pop
pop
stos
lret
mov
push
call
repnz
sub
push
test
lcall
xor
sub
jb
addr16
jne
xchg
inc
jp
das
dec
push
ljmp
inc
sbb
movsb
mov
jg
jbe
xchg
inc
movsl
inc
adc
repz
mov
cmpsb
hlt
data16
and
adc
jns
mov
xchg
mov
cmp
cmp
in
pusha
mov
cmp
dec
aaa
xchg
imul
pop
sbb
ds
ret
cmp
ret
adcb
dec
fnsave
popf
sub
push
dec
dec
leave
data16
add
mov
pushf
iret
das
mov
pop
sbb
mov
loope
mov
mov
mov
cmp
cmp
int3
cmp
mov
add
or
cli
cmc
cmpsl
dec
push
fsub
cwtl
cld
jmp
stc
inc
jae
dec
xchg
sub
mulb
std
mov
lock
mov
mov
cmpsl
and
sub
cli
push
mov
in
jo
loopne
sbb
mov
mov
fmul
cmp
lahf
in
xchg
xchg
pop
rolb
cmc
mov
addb
mov
cmp
shlb
dec
cmpsl
int
out
cwtl
ds
mov
push
sbb
push
int
sbb
addr16
adc
add
adc
ret
mov
and
cmc
daa
xchg
pop
inc
push
dec
enter
aas
adc
inc
push
stos
mov
push
xor
cmp
xor
in
cs
xorl
ret
mov
scas
lds
cmp
push
inc
mov
inc
aaa
nop
ss
jb
cmp
mov
addb
mov
xor
cmpsl
add
inc
mov
imul
sub
pop
fnstenv
cmp
out
rolb
outsb
sti
sti
je
ds
jecxz
jg
push
daa
clc
mov
push
adc
jo
fsubrl
dec
pop
inc
adc
fildl
or
daa
mov
dec
lret
jnp
idivb
sbb
jmp
cmc
lods
dec
sub
push
fmull
fucomp
in
jo
sub
push
mov
repnz
push
scas
out
sub
adc
push
cmp
mov
idivl
imull
cmp
cmpsl
in
pop
and
inc
dec
xchg
leave
adc
or
arpl
ds
stc
ds
test
push
mov
nop
jne
jo
add
fimuls
xor
inc
push
dec
imul
pop
cmp
or
jb
mov
out
aam
fs
jmp
orl
push
mov
mov
xchg
jl
ljmp
enter
movsl
xor
or
cmp
xchg
test
js
xchg
mov
push
mov
mov
push
sahf
movsb
cltd
loop
test
sub
add
ja
pop
dec
imul
clc
jge
fiadds
ret
mov
in
or
cmp
xor
add
xor
xor
xor
jnp,pt
cmp
and
mov
adc
mov
and
cld
das
pop
in
lret
das
or
out
mov
out
jnp,pt
out
popf
test
mov
adc
xor
xchg
test
mov
mov
inc
mov
imull
insb
cmpb
movsl
or
inc
aad
dec
aad
cmc
add
lret
js
xchg
inc
add
push
test
xor
in
std
push
daa
mov
icebp
jle
fistpll
fstpt
ret
mov
in
cmp
stc
xchg
inc
cmp
mov
cmp
mov
hlt
cmpb
out
or
ds
inc
out
add
adc
arpl
movb
cltd
xchg
add
inc
call
sub
mov
add
or
divl
aam
in
adc
jns
movsb
jle
xlat
test
lret
push
push
xor
loop
das
mov
test
jmp
jecxz
and
outsb
addr16
popa
cmp
mov
cld
repz
pop
mov
add
or
mov
pop
jb
fnstenv
cmpsl
movsl
add
fbld
mov
mov
cmp
adc
jne
push
cmp
lahf
inc
cmpsl
pop
adc
fcoml
xchg
int3
mov
xchg
xchg
cmpsl
dec
cltd
and
out
xor
fnstenv
push
pop
data16
xchg
push
outsl
cld
jne
fcoml
lcall
ljmp
dec
sbb
aaa
mov
mov
hlt
out
jg
push
and
ljmp
dec
jge
sbb
scas
mov
test
mov
dec
jl
cmp
pop
sub
xchg
scas
and
lds
test
jno
mov
inc
inc
in
jle
sub
repnz
dec
or
cmpsl
sbb
mov
push
add
es
and
jae
sbb
std
mov
xor
mov
mov
mov
jmp
push
xor
push
mov
xor
aas
bound
fsubs
add
sbb
and
mov
jl
pop
jp
sub
or
dec
jae
stos
or
jmp
jo
lcall
push
dec
adc
stc
add
mov
sbbl
clc
repnz
add
mov
cmp
int
dec
stos
pop
cmp
cltd
mov
test
mov
lahf
jle
or
aaa
jno
inc
push
nop
in
push
rol
inc
cmc
push
cmpsb
or
jmp
lea
jne
or
add
stos
push
outsb
fistps
sahf
or
push
sbb
out
sbb
xor
mov
shll
or
mov
int3
lods
addr16
xchg
push
cmpsb
add
inc
ljmp
test
adc
fmul
xchg
cmp
cmp
inc
mov
push
cltd
std
mov
daa
dec
popa
test
mov
cmp
ss
call
xlat
leave
add
mov
dec
add
ret
out
sbb
daa
dec
mov
xor
or
cmpsb
icebp
and
aaa
hlt
push
sub
dec
sbb
pop
stc
mov
cld
ljmp
sbb
daa
mov
xor
lods
mov
lcall
test
xchg
cs
xlat
xchg
or
lret
es
push
cmp
cmp
fisttps
int3
and
xchg
lret
sub
out
push
add
inc
in
loopne
pop
add
ss
or
iret
inc
mov
mov
aaa
in
nop
mov
fildll
cs
push
data16
sub
push
dec
push
sti
mov
pop
mov
push
test
rcr
sub
pusha
dec
xchg
adc
mov
cltd
int3
or
xor
mov
mov
les
jmp
sub
sbb
push
ror
cltd
ror
and
xchg
xchg
jnp
sti
faddl
add
add
rcr
imul
imul
or
or
fmull
setbe
test
mov
sub
lea
adc
sbb
add
rorb
cmp
pop
stc
jb
sub
mov
sub
in
mov
xchg
sbb
outsl
faddl
or
clc
jbe
mov
out
dec
push
psubsw
jnp
push
lcall
mov
out
inc
fnstsw
cli
dec
dec
dec
loopne
mov
add
lods
add
push
sub
loope
std
mov
add
lahf
enter
fisubrl
fdivrs
jl
popa
inc
ret
rolb
cmp
mov
je
sub
push
dec
fsubrs
fsubs
push
or
sbb
ds
call
mov
mov
call
push
fnsetpm(287
daa
jbe
push
lahf
sbb
loopne
les
out
lret
decb
adc
inc
xor
aad
push
adc
aad
sbb
sbb
mov
adc
cmp
fstps
insb
or
mov
adc
fdivs
xchg
rclb
insb
or
in
push
xlat
std
xor
shll
aaa
dec
sub
push
sahf
mov
sbb
loopne
lock
jbe
pop
andb
lret
xchg
inc
stc
cli
xchg
dec
dec
push
inc
pop
test
cmp
sub
add
stos
jne
adc
push
jecxz
aad
xchg
sbb
push
cwtl
daa
loop
mov
and
xlat
outsl
and
and
xchg
adc
int
sti
movsb
inc
lahf
andb
add
fwait
into
rcll
push
mov
pusha
loopne
ds
xchg
pop
nopl
push
mov
adc
pop
mov
and
mov
inc
lds
std
dec
loope
cmp
mov
and
aad
or
or
mov
bound
pop
out
test
jb
push
mov
add
jno
js
out
inc
cmp
lock
inc
lret
iret
mov
lret
cli
cld
fidivs
cmp
rclb
insb
cltd
stc
push
shl
adc
dec
pusha
shrb
cmp
xchg
inc
cmp
or
fdivrp
outsl
mov
cmp
jns
call
mov
add
or
lea
mov
popf
test
ljmp
imul
add
inc
stos
push
nop
and
mov
xchg
sbb
jo
out
or
shr
inc
jge
sbb
or
nop
mov
cmp
testl
movsl
mov
daa
adcb
popa
sub
loope
out
xchg
outsb
testb
mov
cmpsb
aas
fsubl
dec
jo
cmpsl
inc
mov
mov
int3
mov
jle
dec
hlt
mov
fsub
mov
aaa
adcb
xchg
xchg
sbb
test
aam
fmul
in
scas
int3
rdtsc
mov
ss
pop
daa
clc
orl
pop
cltd
mov
test
fcmovne
ret
or
shrb
mov
int
loope
dec
sti
fsub
idiv
sbb
cmc
movsb
sub
shr
in
aam
rcrl
ret
lret
jne
jmp
subl
sbb
test
out
mov
insl
xchg
xlat
jecxz
and
cltd
mov
push
repnz
mov
mov
pop
icebp
sbb
js
es
or
cmp
cltd
add
lret
dec
fcoms
push
fabs
repnz
cmp
xor
xchg
mov
pop
call
test
sbb
xor
scas
push
es
cmp
jg
rol
or
loopne
jne
fidivl
sti
pop
fsubr
xchg
pop
pop
mov
jae
push
push
cmp
out
je
lcall
inc
jo
or
in
nop
hlt
test
into
shlb
lret
into
mov
or
or
addb
xor
sub
fsubrs
xor
aas
adc
or
mov
aam
mov
lds
inc
cwtl
xchg
aaa
add
out
rcrb
sub
sbb
cmpsb
add
sbb
adc
stos
cmp
adc
dec
imul
sub
mov
shlb
push
push
or
lret
cmp
outsl
jge
push
addl
mov
lds
push
push
enter
enter
andb
lods
out
push
aas
pop
andl
mov
test
and
jb
jo
push
sahf
subb
popf
outsb
xor
mov
bound
xlat
jge
ljmp
cs
stc
je
pushf
jbe
xor
in
cltd
pop
sti
push
mov
sahf
cmp
inc
jnp
mov
sbb
outsl
divb
jge
pop
clc
mov
sub
cli
mov
or
repz
loope
movl
jg
lret
inc
cmp
scas
mov
jmp
or
push
push
test
outsl
mov
ss
stos
pop
lret
jb
lods
imul
cmp
mov
lret
mov
mov
mov
adc
pusha
adc
loop
mov
into
subb
xor
fwait
test
aaa
cwtl
jns
sahf
lret
inc
mov
pop
cmp
fdivrs
push
int
push
out
mov
daa
pushf
push
int3
leave
mov
fisttpl
cmp
daa
mov
mov
lret
sub
push
mov
inc
mov
xchg
xchg
mov
je
adcb
int
addl
lods
les
repnz
call
hlt
imul
iret
into
cs
add
xor
sub
repnz
xor
stos
cmpl
push
popf
loope
mov
imul
mov
xor
add
popa
bound
mov
sarb
or
and
and
gs
leave
cmc
jg
xchg
mov
pop
push
lret
nop
mov
fnstcw
lds
or
mov
icebp
pop
pop
popa
jns
cmp
sbb
fdivs
sub
mov
repnz
fsubl
pushf
add
inc
addr16
enter
mov
lods
cld
cmp
lret
dec
ret
js
and
adc
pop
or
push
ds
inc
mov
dec
rorb
or
repz
vpsubusw
lods
test
cmpsb
dec
cmp
and
jb
mov
add
jmp
adc
and
jmp
xor
mov
push
data16
jg
pop
fs
add
test
jnp
or
mov
call
mov
jne
inc
mov
adc
pop
xor
jl
shlb
lcall
jg
push
or
pop
in
push
sub
push
sub
xchg
outsl
fwait
xor
push
mov
xor
dec
sub
xor
xchg
and
in
adc
push
sbb
sar
push
int3
mov
test
scas
pop
lock
jne
testb
xorb
mov
adc
mov
add
add
mov
scas
mov
cwtl
cmp
mov
sbb
inc
adc
pop
mov
cld
jge
or
movsb
int3
lods
jns
mov
add
push
inc
cmc
pop
gs
xchg
xlat
cmp
lock
mov
jae
sub
mov
mov
xor
sbb
jmp
sti
lret
fstps
xchg
adc
jne,pt
and
add
mov
mov
iret
sub
jmp
inc
imull
and
sbb
push
dec
cmp
dec
and
call
js
cmp
and
std
cltd
aam
or
test
outsb
push
xchg
jg
add
add
push
sub
or
sahf
mov
ds
and
push
push
jns
and
addb
ret
cmp
lock
adc
test
cli
xlat
add
lret
or
or
imul
pop
cmp
cmpsl
dec
add
pop
jno
subl
add
jecxz
stos
cmp
sub
pop
mov
in
inc
mov
in
push
push
in
aas
cli
jbe
jno
mov
mov
pop
pop
stc
pop
jns
cmp
sahf
jo
fnstcw
test
add
sbb
data16
ret
mov
push
outsl
dec
rorb
xor
test
leave
sbb
inc
aam
add
icebp
pop
sub
test
lret
into
push
into
push
and
push
or
ja
xchg
aaa
ret
cmp
cmp
push
jl,pn
enter
and
add
pop
jmp
mov
pop
lea
inc
jae
xor
notb
push
sub
push
inc
jge
pop
scas
pop
lcall
test
jle
jmp
or
mov
adc
jp
pop
or
add
xor
lret
popa
pop
cmp
imul
js
sub
mov
xchg
addb
mov
cwtl
xchg
orb
cmp
or
shll
adc
repz
rcl
pop
jo
les
jp
gs
push
cmp
jae
negl
dec
popf
lret
lods
fbld
sbb
sbb
out
insb
xor
sbb
sub
sub
out
int3
adc
cmp
add
lahf
inc
cmp
stc
mov
and
inc
mov
and
push
and
loopne
shlb
inc
shrl
stos
dec
and
inc
mov
mov
add
out
xchg
out
or
rcll
mov
jmp
test
fisttps
or
mov
push
push
mov
mov
stos
cmp
mov
nop
xor
push
in
scas
ss
scas
jp
out
shll
mov
movsb
test
and
xlat
cwtl
jae
xchg
mov
sarb
and
xor
xchg
cwtl
pop
mov
xor
mov
inc
fs
add
es
xchg
mov
dec
fwait
mov
icebp
dec
xor
lcall
scas
mov
outsl
rcrl
jle
pop
aas
pop
fninit
push
pop
add
push
andl
or
fs
mov
lods
mov
notb
mov
push
iret
shlb
mov
jns
dec
js
lock
lods
pop
bound
ret
mov
jae
dec
sahf
mov
cmp
shlb
into
mov
xchg
and
test
lods
add
add
jbe
sbb
pop
xorb
add
dec
nop
push
sbb
pop
and
mov
ret
push
mov
jle
add
add
add
pop
xchg
lods
jp
cmpsb
dec
daa
xchg
call
shl
lock
imul
pushf
rcll
mov
cmp
xorl
sbb
mov
xchg
lret
push
je
dec
je
out
push
rcrb
es
cmpsl
pop
mov
push
je
mov
loopne
fxch
mov
jle
jmp
aad
and
mov
cmp
xor
sub
mov
dec
imul
cmp
fildl
fldlg2
mov
movsb
imul
mov
jle
inc
lock
enter
aas
mov
jmp
inc
ds
test
mov
idivb
test
rolb
or
js
loopne
push
arpl
xchg
sub
add
mov
push
rolb
ljmp
repz
jg
inc
lods
jb
push
movsb
repnz
push
or
cld
cmc
mov
ja
dec
ror
std
je
sbb
sbb
push
cmp
cmpsl
and
xchg
cld
stos
add
xlat
in
pop
scas
subb
sub
sub
call
rclb
xor
xchg
mov
popa
xor
pop
lret
mov
adc
xor
sub
push
xchg
pop
les
hlt
int
paddw
lret
push
les
enter
inc
imul
lcall
loop
xchg
dec
dec
les
das
mov
js
das
inc
sbb
fidivl
sbb
mov
and
xchg
shrl
xchg
imul
mov
dec
inc
fidivrl
aam
add
mov
dec
sub
add
add
cmp
cld
lret
mov
mov
dec
xor
or
add
mov
stos
pop
fcoml
imul
and
jns
fldenv
sbb
js
pop
sub
fwait
push
mov
push
jg
in
mov
testl
adc
xor
push
fsts
ficoml
fucomip
jnp
aad
mov
lret
aad
and
lahf
push
mov
mov
data16
mov
mov
jb
mov
push
gs
add
stos
and
adc
ret
shlb
mov
js
mov
inc
movsl
aaa
jle
cmp
enter
mov
sbbl
das
push
fisttpl
add
stc
jo
cmp
adc
dec
pop
pushf
fucomip
repz
cltd
pop
clc
movsb
push
paddusb
inc
loop
lock
aas
or
cmp
repz
loopne
in
inc
pop
adc
pop
shrl
xor
loope
jnp
cmp
inc
cld
ud2
data16
mov
and
call
mov
mov
shlb
scas
orb
jbe
cmp
sbb
das
cmp
cmpsb
pop
out
push
and
xchg
adc
gs
rol
dec
inc
and
cli
cmc
iret
test
scas
ds
push
mov
scas
push
ss
repz
out
pop
mov
cmp
sbb
mov
add
push
mov
movsl
aam
jo
adc
cmp
or
add
jae
insl
cmp
out
mov
mov
aam
cmp
ljmp
pop
fwait
das
outsl
idivl
loop
adc
in
iret
adc
jecxz
popa
pop
enter
movsb
pop
outsl
add
push
shr
jae
mov
push
or
popa
mov
cmp
xorl
loop
int
sub
bound
in
out
xchg
js
xchg
push
adc
dec
lock
xor
mov
mov
xor
cmp
jp
decl
xchg
push
jnp
fucomp
mov
and
cwtl
es
call
and
adc
push
mov
sbb
push
adc
jle
cmp
mov
into
mov
popl
pop
push
dec
mov
pop
pop
xlat
sar
mov
test
daa
mov
jnp
cmp
rorb
inc
shlb
xchg
xchg
pop
sub
popf
mov
inc
enter
loop
add
ror
nop
jl
out
out
popf
cmpsb
and
inc
and
or
pop
fs
sub
fistps
pop
call
mov
mov
inc
les
mov
mov
popa
inc
insb
imul
pushf
jl
mov
cltd
adc
shll
mov
cwtl
xchg
sub
jbe
jbe
xchg
sub
repz
clc
jb
test
loop
pop
xchg
das
sub
hlt
sahf
pop
xlat
arpl
inc
bound
imul
push
jbe
mov
xor
jnp
aaa
sbb
dec
xlat
sbb
lea
and
adc
xor
and
xchg
or
mov
cmp
fcmovb
fstpt
call
out
sbb
data16
addr16
cmp
movsl
adc
cs
push
pop
mov
mov
mov
hlt
sarl
pushf
cmpsl
scas
fstl
repz
pop
incb
xchg
adc
dec
push
mov
fdivs
pop
fcmovb
jno,pt
pop
imul
int
mov
cmp
lds
outsl
pop
mov
movsl
adc
daa
cmp
mov
in
and
or
xlat
xchg
stos
and
mov
cwtl
or
inc
jle
test
dec
push
nop
jp
lcall
jle
inc
adc
subb
sbb
aad
in
not
xchg
cwtl
addr16
movsl
mov
jno
mov
js
mov
push
sti
push
sahf
out
insl
xor
cmp
insb
mov
xchg
sub
aas
ret
mov
test
or
push
sbb
lods
mov
lcall
inc
addr16
std
iret
mov
xchg
xor
or
mov
cmp
imul
pop
call
je
dec
or
out
sub
push
pop
inc
inc
movsb
sbb
jo
out
test
loopne
push
jl
stc
xchg
push
pop
xchg
out
and
cli
mov
fsub
mov
loop
mov
pop
push
cmp
xchg
insb
test
jae
jecxz
insb
xchg
mov
int
lret
lret
in
jnp
shll
mov
or
imul
jb
sbb
dec
loop
jle
sub
jge
ljmp
insb
shr
push
dec
les
shlb
cltd
fcomps
jnp
in
adc
inc
xor
push
ljmp
inc
filds
mov
mov
adc
xor
xchg
inc
jecxz
and
mov
rcl
call
fneni(8087
mov
inc
push
scas
arpl
mov
dec
mov
rcrl
mov
jno
dec
mov
rorl
mov
aad
fsts
shl
and
ljmp
jnp
adc
push
inc
or
inc
lcall
std
cmp
jo
jl
adc
dec
sub
cmp
pop
fwait
mov
in
in
popa
mov
lods
cmp
pop
mov
sbb
and
sbb
mov
mov
clc
adc
push
mov
xor
out
es
loopne
push
mov
outsb
ds
addr16
enter
xchg
jo
inc
cmp
mov
lds
popf
les
mov
push
stc
adc
pop
push
sub
jmp
mov
repz
inc
iret
mov
jge
adc
test
mov
add
pop
dec
test
loopne
out
pop
stc
out
dec
cltd
aad
outsb
mov
jae
daa
add
push
sub
xor
mov
xchg
cmp
push
cmp
jnp
pmaddwd
call
repz
rolb
notb
mov
xchg
jecxz
cld
dec
cmp
xor
sub
lret
sbb
aam
lea
sbb
inc
pop
mov
pop
adc
shrl
shll
sub
xor
stos
loope
jo
mov
movsl
test
sub
fmull
shl
repnz
test
xor
leave
shll
nop
sarb
mov
mov
mov
call
push
lret
fwait
mov
sub
gs
cwtl
arpl
sub
icebp
mov
popf
sbb
pop
pop
push
mov
push
push
add
movl
hlt
aad
jae
pop
jo
enter
push
popf
repnz
lods
sbb
pusha
fcompl
aaa
mov
clc
adc
popf
mov
pop
test
jns
push
mov
and
aas
pop
lods
out
add
jl
in
enter
in
setns
push
out
sbb
xlat
in
mov
not
movsb
popf
cmpsl
clc
inc
adc
enter
mov
stos
xchg
xchg
mov
add
mov
pushf
pusha
std
push
lock
mov
add
push
pop
jns
mov
mov
pop
add
xchg
loope
jp
fldt
xlat
push
shrb
in
rolb
mov
imul
divl
mov
mov
std
in
loopne
lods
test
adc
mov
xor
push
gs
cld
lds
andl
cmp
cltd
mov
shlb
sub
fst
mov
and
mov
sbb
jecxz
xor
je
rclb
aas
sbb
mov
cmp
pop
pop
or
jb
sbb
mov
addb
push
in
out
dec
fisttpl
push
mov
cwtl
xadd
pop
dec
push
mov
mov
jbe
xor
mov
fistpll
push
pusha
test
push
sbb
mov
xchg
fwait
out
loop
stc
xchg
shrl
pop
jns
cmpl
loopne
add
lds
mov
mov
call
lcall
pop
movsl
push
xlat
je
test
test
jo
enter
rcrb
nop
inc
in
mov
filds
mov
pop
int3
and
and
shlb
lods
mov
and
int3
inc
scas
or
dec
or
mov
xchg
ja
xor
jae
enter
pop
fcoms
dec
movsl
mov
mov
cmp
cmpsl
daa
inc
inc
ljmp
cmp
aam
cli
jo
mov
stos
jle
rorl
xchg
lock
loopne
push
cmp
add
add
cltd
cmc
loope
insb
mov
xor
push
push
push
cmc
gs
or
jns
nop
jb
scas
stos
cmc
jb
stos
add
add
nop
ljmp
leave
jmp
dec
mov
dec
loopne
dec
or
cli
mov
ret
mov
stos
cltd
leave
shlb
dec
dec
lods
hlt
cmp
fwait
and
mov
mov
and
fidivrl
cld
out
pop
adc
in
xchg
or
sub
mov
or
push
adc
xchg
loop
sub
sub
jl
sqrtps
pop
add
or
pusha
jge
xor
rcrl
sbb
dec
jg
loop
shr
es
and
loope
cmp
aad
sub
sbb
outsl
or
insl
hlt
adc
sbb
out
sti
add
in
push
es
cmpsb
and
mov
add
jno
sub
add
xor
cmp
or
xor
cmp
andb
jnp
cmp
ret
mov
lahf
daa
aam
push
pop
popa
shlb
xchg
xchg
mov
jle
pusha
ss
jge
int3
jbe
movsl
cmpsb
jge
xor
push
fldt
dec
cli
lds
aas
cwtl
test
je
leave
cmp
or
adc
pop
ss
inc
jnp
dec
push
rorl
test
cmpsb
mov
mov
adc
jo
and
test
lret
fwait
icebp
leave
cld
subb
inc
rcrl
test
inc
mov
in
mov
mov
xchg
pop
adc
sbb
lea
aad
inc
sti
cmp
jmp
leave
push
scas
xchg
lods
idivl
dec
pop
xchg
xchg
adc
cmp
push
test
ret
sbb
jae
sub
jg
mov
jbe
lret
aam
stos
xor
outsl
push
mov
dec
sbb
add
xlat
clc
dec
xchg
pop
das
pop
add
sub
mov
nop
insl
movsb
movb
lcall
jmp
mov
sub
loopne
in
jecxz
or
jae
push
mov
or
je
cmp
push
pop
pop
sbb
mov
icebp
or
sub
repnz
mov
std
cmp
mov
loop
mov
enter
mov
js
mov
add
jl
mov
xchg
pop
mov
adc
aas
xor
mov
es
idivb
lret
pop
pop
add
push
xchg
pusha
and
int
dec
movsb
imul
adc
lcall
dec
add
stos
lock
add
je
cs
sahf
mov
fnstenv
sbb
push
or
sahf
into
dec
test
mov
xorb
aas
add
cmp
sbb
leave
das
outsb
loope
sbbl
in
and
jno
xchg
enter
jne
fisubrs
push
out
movsl
mov
push
jmp
outsl
test
mov
imulb
imul
jne
adc
adc
ret
cmpsb
sbb
int3
and
pusha
push
dec
or
dec
pop
or
jmp
push
out
mov
adc
hlt
clc
jecxz
jbe
addr16
mov
pop
cmp
adc
pop
dec
or
or
enter
mov
and
pop
mov
push
add
lret
xchg
mov
orb
out
aam
lods
mov
fwait
lret
or
add
add
popf
mov
sub
cmp
repnz
rcl
mov
adc
call
dec
lret
pop
ret
mov
int
mov
orb
dec
or
add
pop
test
jmp
loop
mov
cmp
inc
or
les
insb
xchg
pushf
mov
mov
call
xor
and
jge
movsb
cwtl
mov
xor
or
push
jno
loope
adc
mov
movb
sub
sarb
push
movsl
xorb
fistl
mov
daa
movsl
mov
mov
sbb
outsl
movsb
jns
lea
push
aaa
mov
ss
pushf
cmpsl
shll
movsl
xchg
mov
pop
enter
jl
mov
fwait
push
xchg
and
sub
xor
inc
aad
subl
addr16
push
arpl
dec
dec
xchg
push
pushl
xor
in
xchg
inc
scas
jo
or
jno
sub
push
dec
cltd
mov
push
outsb
push
and
mov
xchg
adc
ret
fnstenv
mov
or
jg
adc
xor
sub
xchg
inc
jns
hlt
orl
mov
das
repnz
xor
outsb
xchg
mov
ret
dec
mov
jo
jp
mov
mov
mov
xchg
lret
jl
fldl
mov
mov
icebp
mul
pop
nop
cmp
leave
into
push
cmp
nop
incb
xchg
fcoms
sub
jo
iret
imul
dec
sbb
dec
mov
adc
jg
test
mov
push
outsb
mov
in
xchg
push
in
call
clc
mov
fisubrs
test
dec
mov
sbb
pop
stc
xchg
aaa
mov
sti
in
ret
or
cmp
add
add
sbb
mov
cmp
dec
insb
xchg
xor
data16
xchg
mov
mov
outsb
lock
jecxz
push
or
repz
jns
jb
inc
clc
pop
ds
jns
xchg
int3
add
mov
lock
iret
push
mov
ljmp
add
test
mov
xor
jno
sbb
punpckhbw
lods
test
inc
test
out
sbb
in
fildll
pop
jp
pop
cli
in
dec
adcb
mov
add
xor
sbb
in
add
pop
pop
outsb
mov
sbb
out
mov
mov
lahf
adc
jmp
add
push
add
clc
xlat
xor
fisttpll
adc
push
xchg
adc
cmp
les
sbb
ljmp
aam
push
mov
in
ds
xlat
pop
ss
xchg
shrb
stc
jbe
push
push
loope
fistpll
inc
sbb
dec
xlat
dec
in
adc
sahf
sub
push
inc
xor
sarb
mov
jo
inc
loope
js
and
cwtl
push
jle
js
mov
mov
lods
sub
fs
stos
mov
mov
inc
xchg
gs
das
out
rcr
push
pop
call
mov
cmpsb
jp
and
sbb
mov
sub
int3
jae
repnz
or
iret
test
and
jb
dec
cmp
test
je
xchg
push
imul
pop
and
dec
xor
test
mov
pop
inc
mov
test
rcrb
pushf
je
jnp
mov
push
imul
fcom
loope
mov
mov
outsb
jge
sbb
xchg
sub
mov
sbb
jo
filds
fisttpll
cwtl
or
push
fstpt
jo
ja
pop
pop
dec
push
jae
mov
aaa
enter
mov
dec
mov
xlat
add
mov
pusha
adc
sub
cs
mov
mov
pop
jle
pop
mov
adcl
inc
sti
mov
add
insb
pop
and
or
dec
mov
mov
leave
loopne
movsb
rolb
sti
fwait
cmpsl
leave
mov
mov
pop
dec
pop
xor
fwait
xchg
call
cmp
sbb
cltd
jecxz
outsl
mov
lcall
push
jbe
pop
or
adc
mov
test
rcrl
fdivl
pop
push
dec
test
mov
aas
loope
adc
pop
outsl
nop
std
cmp
jl
add
and
sub
dec
mov
negl
dec
loop
pop
mov
pop
popf
adcb
pop
insl
ficoms
adc
popf
rcrb
daa
loope
sub
push
and
stos
ljmp
mov
out
hlt
rolb
bound
shlb
aaa
adc
ja
loop
ficoml
inc
push
mov
cmp
mov
sub
daa
mov
sbb
mov
int
loope
ret
jp
out
popf
stos
mov
imul
mov
cmp
out
xchg
xor
ljmp
lret
sti
xchg
ljmp
mov
jno
mov
jp
into
mov
mov
push
sbb
sbb
and
xchg
mov
shld
lock
outsb
lret
je
jl
mov
pusha
mov
pushf
lea
dec
jnp
jmp
mov
ss
push
popf
and
mov
add
aad
mov
bound
lcall
mov
leave
fldl
pop
loopne
aam
sbb
add
sbb
and
movsl
outsb
cld
pusha
sbb
xchg
hlt
push
xlat
or
cmp
es
pop
mov
fstl
hlt
xor
outsl
mov
mov
inc
insb
sbb
aas
jge
pop
scas
xor
adc
xor
xor
repz
pop
push
mov
test
bound
clc
inc
int3
in
dec
repz
pop
enter
and
pop
pop
lods
cmp
in
cmpsl
sub
sub
mov
jbe
mov
or
cmp
sar
repnz
scas
negl
je
xor
das
gs
push
xor
dec
aam
cmp
jb
ljmp
mov
adc
lret
lret
lret
mov
xor
add
cmp
fistps
inc
cmp
in
sarb
hlt
out
cmp
mov
jl
or
inc
xchg
loop
enter
cmp
jae
sti
adc
and
loope
jb
inc
push
jne
pop
sub
mov
aad
bnd
sub
movsl
xchg
xchg
mov
pop
add
dec
test
jb
add
add
cli
push
nop
sbb
enter
mov
push
push
daa
sbb
lds
jo
jle
jo
adc
or
test
xchg
out
addr16
mov
jg
aas
and
sbbl
mov
cmp
adcb
mov
fbld
and
aaa
call
test
js
sahf
out
push
sahf
popa
mov
jb
xor
mov
push
mov
mov
in
aaa
sub
out
mov
jmp
shlb
lret
lea
jmp
arpl
ret
ret
push
mov
push
jecxz
jb
ljmp
es
mulb
push
test
jmp
cmp
dec
dec
call
cmp
cmpsb
fldcw
ja
fildl
mov
fmull
stos
lret
jle
aas
xchg
mov
adc
into
and
xor
movsb
jp
push
pop
sub
xchg
test
ds
pop
and
jae
rclb
cli
repnz
mov
imul
stos
cltd
mov
iret
scas
rcrb
sbb
and
clc
adc
dec
mov
push
jbe
dec
inc
mov
lock
sbb
mov
mov
jp
daa
in
rclb
test
jb
lock
xlat
and
cs
and
xchg
xor
lods
mov
lret
jmp
and
enter
cltd
test
push
aaa
lahf
mov
xchg
stc
mov
js
mov
sbb
mov
jno
icebp
cmpsb
mov
mov
fsubrp
jne
adc
ljmp
mov
icebp
lret
cli
jle
xor
cmp
sbbb
xchg
push
jb
xchg
jecxz
and
les
xchg
nop
out
in
icebp
pusha
bound
mov
dec
sbb
sub
into
mov
dec
add
rorl
imul
icebp
xor
mov
push
xor
xchg
add
std
scas
je
jo
int
jae
daa
pop
rorb
push
jge
cmp
mov
xchg
adc
and
aas
jne
imul
lods
outsb
jns
cwtl
jle
and
xchg
or
inc
xchg
loope
push
pop
push
push
dec
dec
lds
cmp
xchg
dec
nop
iret
insb
jne
ljmp
and
inc
mov
pop
ljmp
inc
clc
cld
push
dec
jo
mov
outsl
sub
sbb
jnp
into
aas
xor
lds
add
add
adc
into
jge
ret
sbb
mov
jae
mov
mov
jno
or
in
sub
clc
adc
stos
stos
xor
sbb
cmp
enter
xor
push
nop
fldt
call
ret
or
out
dec
xor
mov
inc
mov
out
push
pop
xchg
add
scas
dec
lret
push
push
xchg
enter
xor
xchg
inc
adc
or
test
or
mov
xchg
mov
mov
fidivl
jo
add
inc
loope
mov
dec
mov
jge
jns
aam
mov
sub
or
jp
xor
pop
jge
repz
xcrypt-ecb
cmpsl
or
aad
popf
push
pop
push
jns
lret
mov
sub
mov
stos
fwait
or
dec
gs
pop
mov
push
pop
aam
push
out
arpl
xlat
testb
bound
jo
out
mov
sub
xor
aaa
clc
pop
pop
pop
orl
push
adc
lods
mov
push
and
push
lods
pop
leave
jnp
fldcw
in
out
cmpsb
inc
test
sbb
inc
xlat
mov
dec
sub
loopne
add
arpl
fildl
lds
cmp
idiv
dec
sub
cmovns
adc
mov
cld
jne
mov
leave
ds
gs
test
addr16
mov
into
sbb
mov
jge
pop
lods
les
inc
sub
movsb
push
jg
or
inc
dec
xchg
aam
pusha
pop
mov
add
cmp
xchg
or
mov
out
mov
jae
insb
and
pushf
mov
inc
pop
adc
or
push
mov
xchg
or
loop
adc
cmpsl
inc
int3
xchg
addb
cmp
pop
orl
sbb
pop
mov
jmp
add
add
add
adc
stc
test
pop
insl
pop
mov
scas
sahf
imul
cld
lock
inc
xchg
adc
movsl
dec
sahf
pusha
jg
xor
mov
in
sbb
out
mov
cld
adc
cmp
cmovnp
and
push
jge
inc
push
xor
push
stos
daa
shl
cwtl
shl
xor
lret
pop
lret
dec
xor
jae
mov
add
lcall
push
imul
jmp
xor
lock
scas
loop
push
push
xor
sbb
hlt
popf
or
xor
xchg
pushf
and
dec
repz
xor
aam
sahf
out
pop
pop
jne
in
daa
xchg
mov
jg
xor
add
jmp
add
xor
subb
and
mov
shlb
and
and
pop
lret
adc
sbb
jae
divl
seta
iret
push
dec
sub
jecxz
prefetch
or
and
lock
add
inc
sbb
inc
push
lret
lcall
sbb
scas
std
mov
jns
mov
mov
popa
lcall
les
lock
and
sahf
mov
or
mov
and
jp
adc
test
gs
xchg
insl
das
flds
add
notl
dec
mov
pop
cmp
insl
js
movsl
lds
out
notb
pusha
adc
div
fdivs
adc
push
gs
mov
pop
dec
cmp
stc
xchg
ds
lahf
in
mov
pop
cld
stos
in
and
xor
jae
xchg
in
pop
popa
push
jne
jge
out
push
xchg
xchg
add
insl
mov
movb
gs
cwtl
push
jo
icebp
popf
jp
loope
mov
push
sar
das
and
jne
xchg
test
das
jle
shrb
pop
or
xchg
push
add
pop
jne
lock
inc
clc
repz
rcll
adc
clc
jo
inc
inc
les
mov
mov
mov
ss
stc
je
sub
add
ds
das
xlat
bound
xchg
jg
pop
inc
rol
cmp
out
addr16
mov
pop
lock
cs
push
iret
lods
dec
insb
xor
pop
jbe
adc
pop
cmp
gs
push
xor
sbb
int
dec
leave
rcll
cmp
sbb
jns
inc
icebp
push
je
and
popf
and
and
stos
fildl
jecxz
jns
test
into
or
push
sub
sti
call
mov
pop
rorl
ljmp
ljmp
ret
adc
cmp
cmpb
push
cmc
jns
sarb
mov
jge
xor
test
push
dec
sub
sub
insl
cltd
mov
sub
push
push
cmpsb
mov
inc
add
sub
fwait
adc
sbb
repnz
xor
dec
fsubrl
das
push
loopne
inc
pusha
adcl
outsl
add
adc
test
adc
js
fildll
xor
and
popa
ret
or
dec
and
mov
and
jg
mov
bound
negb
fs
aam
icebp
cmpb
adc
lea
js
int
sub
lret
cs
pusha
lods
jl
mov
daa
stos
mov
push
xor
jmp
imul
mov
dec
and
fcoms
pop
outsb
and
nop
push
or
pushf
aas
xlat
int3
mov
add
insb
or
jae
leave
mov
inc
popw
dec
leave
pop
mov
xchg
adcb
inc
popf
rcrl
data16
out
xchg
cmc
xor
pop
call
mov
pop
inc
push
mov
adcl
adc
and
cmp
dec
je
int
dec
pop
leave
into
xchg
xchg
pushf
call
xorl
sub
mov
loope
les
add
xchg
fsubs
popa
jne
sbb
clc
xor
pushf
dec
mov
and
mov
mov
popa
jns
xlat
int
xchg
fcomip
scas
sti
or
sbb
inc
enter
xchg
mov
aaa
sahf
and
mov
loop
xchg
add
cs
or
dec
xchg
sbb
jns
ljmp
xchg
lods
inc
cmpsb
gs
fimull
mov
sbbb
dec
cld
pop
imul
push
xor
repnz
dec
insl
pop
mov
jns
ss
sti
repz
leave
out
imul
into
pop
repz
and
fsub
xchg
and
adc
popa
jmp
clc
sti
imul
je
out
repnz
das
mov
cmp
stos
add
cld
stos
jp
sub
xchg
lds
push
xor
adc
cmp
inc
fwait
or
cmpsl
mov
sbb
push
push
mov
xchg
iret
or
xchg
insl
push
cwtl
insb
inc
jp
rorb
mov
or
mov
sub
push
mov
push
inc
push
mov
adcl
fdivl
sub
jp
mov
out
sub
addr16
fnstcw
pop
shlb
out
jle
popf
mov
lock
and
push
xchg
push
inc
xchg
lea
add
add
test
lahf
pop
scas
pop
push
jnp
call
scas
out
inc
in
aaa
inc
push
xchg
mov
into
loope
mov
xchg
jg
inc
stc
xor
aaa
xor
insb
rol
mov
sub
movsl
sbb
scas
inc
sbb
nop
sbb
cmpsl
fwait
dec
or
jb
xor
hlt
cwtl
pop
sub
lods
imul
pop
push
test
jp
add
cwtl
xchg
addr16
mov
xor
sbb
xor
arpl
ss
or
sub
loopne
mov
cmpsb
adc
cmp
inc
dec
jb
mov
jno
mov
xor
xchg
pop
clc
jecxz
and
or
and
pop
clc
int
pusha
mov
mov
aaa
and
les
cmp
mov
xchg
mov
dec
into
insl
sbb
jnp
mov
mov
stc
lret
mov
gs
je
gs
ljmp
or
lods
loope
cmp
add
ds
scas
sbb
mov
lahf
movsl
cmc
fucomip
aad
push
fdivp
scas
es
sub
sbb
mov
or
loop
xchg
pop
cmp
mov
jns
popa
pop
lock
fisttpl
call
dec
mov
lret
stos
inc
das
or
scas
stos
sarl
in
imul
xor
add
imul
mov
xlat
dec
cmp
popf
dec
dec
scas
insl
jl
aas
das
inc
push
aas
push
lods
and
or
cmp
xchg
shlb
lcall
push
and
jg
clc
mov
lret
xor
ret
mov
add
sbb
aam
imul
add
add
movsb
cmp
or
arpl
xchg
xor
and
adc
add
inc
cmp
imul
shl
sbb
sbb
loopne
inc
mov
insl
jge
mov
pop
push
sbb
push
xor
push
pushf
iret
arpl
pop
aad
test
shr
mov
sub
inc
loop
jnp
mov
mov
out
shrl
call
cmpsl
push
pushf
mov
stos
movsb
and
icebp
xchg
add
lahf
into
dec
dec
fbld
cmp
push
xchg
add
cmp
push
imul
push
addr16
test
out
mov
push
jne
mov
test
inc
into
fwait
inc
push
in
lahf
add
or
pusha
loop
popf
lcall
fsubs
jge
iret
ficompl
hlt
dec
montmul
cmpsb
orb
iret
push
ficompl
mov
jo
xlat
jo
jg
arpl
sbb
jl
mov
fcoms
xchg
in
int3
aam
test
enter
sub
fldl
bound
test
or
mov
xchg
hlt
mov
mov
movsb
cli
push
mov
cs
push
int
dec
insl
lcall
pop
popl
out
std
addr16
cmp
lcall
mov
clc
pop
or
jge
dec
shlb
jnp
xor
fwait
movsb
sbb
push
xchg
inc
subl
mov
push
orb
in
mov
call
outsl
sub
mov
sbb
fmull
or
xchg
push
sub
or
jo
and
inc
or
rclb
cmp
fistl
lock
fs
push
jns
rep
sti
or
ret
add
sar
in
idiv
adc
add
add
gs
push
jg
out
push
mov
or
fisubl
push
jl
add
mov
jl
sbb
cltd
pop
mov
mov
pop
push
jmp
nop
aad
mov
mov
adcl
inc
cmp
sub
fiaddl
cmp
xor
inc
mov
inc
lods
xchg
adc
dec
mov
xor
add
xlat
mov
push
aam
mov
outsb
imul
cmp
stos
mov
cmp
or
inc
out
enter
int
popa
inc
fwait
enter
in
aad
fld
fisttpl
or
nop
dec
test
andl
pop
fnstenv
mov
mov
arpl
and
mov
andl
add
insl
and
in
sbb
ljmp
cmpsb
xchg
pop
repnz
add
pop
push
mov
shll
popa
cli
xor
mov
xchg
sub
sbb
aam
jmp
and
cs
mov
iret
adc
xlat
bound
imulb
sub
insb
mov
jmp
insl
xchg
inc
mov
mov
jae
mov
movsb
mov
fwait
sub
xorb
adc
into
out
stos
jmp
sbb
stos
fisubl
cltd
mov
or
xchg
pop
pop
xchg
and
push
ds
and
cld
fxch
mov
push
add
lea
dec
aad
sbb
adc
pop
stos
jne
adc
push
and
jecxz
pop
xchg
xor
mov
lea
jo
cli
and
ds
sub
lods
scas
jns
iret
sbb
lret
mov
or
out
dec
rolb
sahf
lea
xor
add
cmc
cwtl
mov
out
sbb
xchg
lcall
scas
dec
stc
xchg
daa
mov
pop
mov
xchg
jno
or
sbb
and
cs
fiaddl
pusha
sbb
mov
jge
std
inc
push
ret
inc
mov
dec
mov
jns
sti
mov
in
bts
in
mov
add
jae
mov
lahf
xchg
imul
pop
dec
dec
pop
pop
inc
adc
cltd
mov
add
rcrb
push
ret
mov
jle
ljmp
fimuls
shlb
adc
into
es
jp
arpl
push
bound
pop
add
inc
in
xor
xchg
jle
add
fcmovb
mov
fdivr
fcompl
or
pop
jae
adc
xchg
xor
push
add
mov
jmp
xchg
negb
push
sti
jl
js
mov
or
jns
add
sarb
int3
fwait
sub
ffree
jl
add
arpl
into
cmpxchg8b
xchg
push
loopne
lock
sarb
xchg
xlat
aas
pusha
cmp
sub
icebp
std
lods
idivb
inc
mov
or
clc
imul
lcall
rolb
shrl
nop
inc
adc
push
cli
mov
bound
repz
adc
sbb
leave
sbb
addr16
lods
lods
adc
jg
add
sub
pop
sub
mov
test
inc
push
sbb
sti
mov
adc
imulb
in
xor
push
inc
popa
cs
sub
iret
mov
int
mov
xor
add
fildll
imul
lea
adc
jns
cmpsb
xchg
jg
je
push
adc
in
mov
fs
std
rorb
jo
in
popa
sub
mov
test
dec
or
mov
xor
test
push
cmp
jp
mov
mov
push
mov
dec
fidivrl
aam
push
jne
mov
push
movsb
stc
mov
pushf
out
pop
lret
das
pop
add
sub
adc
jae
dec
ljmp
mov
push
loop
fdivs
pusha
pop
jge
inc
mov
addr16
ds
popf
or
adc
fistl
loop
sub
mov
jecxz
inc
push
clc
stc
push
xor
das
dec
dec
cmp
cmp
out
inc
repz
filds
std
pushf
aaa
dec
mov
inc
dec
push
fbld
shll
xor
xchg
push
and
adc
inc
daa
dec
out
xor
pop
loopne
mul
out
jae
iret
insb
test
sti
jmp
mov
and
push
fidivl
cmc
stc
mov
out
mov
mov
movsl
ret
lods
or
lea
js
out
cmp
insb
popf
js
dec
inc
jg
mov
fsubl
into
mov
and
inc
push
std
mov
lcall
mov
push
cs
repnz
scas
icebp
ds
dec
dec
push
popf
repz
jnp
xchg
test
sbb
mov
cmp
dec
adc
jp
push
repz
in
mov
pop
ja
shl
cltd
ds
lret
cmp
mov
call
add
mov
adc
mov
mov
fisttpl
xchg
dec
xchg
adc
mov
mov
sbb
hlt
push
and
pop
aad
jae
out
cmp
mov
fs
mov
or
bound
sbb
add
loop
adc
mov
add
mov
loop
mov
adc
sbb
dec
pop
jo
int
mov
add
add
and
xchg
pop
fildll
push
mov
and
lea
mov
jo
in
cltd
xchg
mov
test
mov
test
pop
dec
and
lea
jne
in
jg
rcll
aad
mov
jmp
in
fisubrs
popf
inc
popa
pop
xor
cmp
gs
xchg
mov
add
and
stos
fstpl
imul
frstor
fwait
imull
xor
xchg
xor
pop
cld
xor
les
sub
jno
cli
sbb
sub
xor
cmovge
into
nop
insb
ret
cmpsl
out
lret
addb
sbb
push
sub
fistpll
cmp
fmuls
xchg
data16
mov
mov
cmpsl
inc
iret
sbb
rcll
lea
cmpsl
popf
lcall
cmp
xor
adc
fldenv
sub
and
leave
in
and
mov
adc
das
insb
fcomps
sub
pop
lret
or
mov
in
sub
sbb
xlat
insb
movsb
addr16
mov
mov
divb
xchg
ror
mov
iret
or
nop
int3
sub
adc
fcoml
mov
aas
dec
cld
imul
add
xlat
movsl
pop
addr16
cltd
push
jle
pushf
sbb
int
mov
jmp
aaa
cmpsb
xorb
ficompl
xchg
push
aas
loope
dec
mov
mov
fdivs
inc
or
mov
inc
popf
push
mov
xchg
mov
push
pop
cmp
in
lods
push
daa
adc
xorb
lret
scas
jnp
xchg
mov
fs
fadds
scas
pop
loop
aad
adc
lds
inc
sbb
adc
aas
movsl
xchg
sbb
test
leave
lea
inc
loop
popf
cmpsl
cld
mov
daa
sbb
mov
aaa
dec
fistl
mov
jecxz
rclb
aaa
fucomi
pop
les
cld
addr16
mov
leave
in
sub
xchg
repnz
pop
cmpsl
js
dec
jle
mov
adc
inc
cld
xchg
adc
aaa
sbb
push
aad
mov
test
push
nop
sti
mov
mov
lock
ret
or
mov
shrl
adcb
movsb
loopne
push
out
or
into
jecxz
jle
sub
push
dec
adc
movsb
cmp
xchg
out
or
xchg
dec
bound
mov
cmpsl
xor
mov
add
mov
adc
clc
pop
int3
push
pop
out
add
xchg
daa
adc
cmp
test
fwait
daa
ljmp
mov
enter
mov
jle
dec
adc
test
paddsb
xlat
cmp
mov
popf
push
std
adc
dec
add
sti
out
push
mov
xor
loope
and
mov
mov
adc
lcall
in
mov
xchg
cld
pusha
add
aas
push
cwtl
cmpsl
xchg
lcall
mov
in
ficoms
or
fcom
push
mov
adc
arpl
ds
push
mov
mov
mov
push
or
repz
rclb
pusha
cmc
or
mov
bound
stos
adc
rorb
sahf
xchg
inc
andb
and
add
mov
cld
daa
add
mov
mov
int3
push
ficomps
or
sbb
lahf
enterw
mov
aam
sbb
aam
cld
adc
pop
in
cli
ret
cmove
mov
mov
add
add
fsubrs
push
cmpsb
jns
jb
jp
push
nop
imul
mov
cmpl
jne
lret
gs
xor
mov
test
arpl
inc
and
mov
cmpsl
inc
clc
push
mov
push
push
mov
adc
push
cmp
into
lods
sbb
dec
add
popf
dec
mov
jbe
cltd
movsl
push
ljmp
aaa
sarl
xchg
cmc
lds
arpl
daa
mov
in
adc
push
jle
std
imul
adc
and
or
xchg
adc
cwtl
push
xchg
test
and
loopne
xchg
out
jae
xor
inc
mov
and
dec
jl
fstpl
push
xor
mov
cmpsl
mov
mov
test
mov
ds
addr16
cmpsl
fnstsw
es
stc
lds
arpl
inc
frstor
jns
cmpsb
push
mov
repnz
inc
cmpsl
adc
lret
add
adc
mov
jmp
xchg
fcomps
jae
pop
mov
arpl
add
lahf
movsl
lock
js
inc
jae
mov
roll
cmpsb
mov
cltd
dec
pop
test
int
jp
lea
fmul
nop
add
sub
repnz
inc
xchg
loope
jmp
scas
icebp
push
aas
rcll
out
daa
inc
mov
jo
movsb
pop
daa
sub
js
mov
push
jo
mov
mov
add
repz
fcmovne
jecxz
mov
arpl
rclb
jne
mov
das
mov
aaa
dec
enter
dec
sbb
xchg
hlt
aas
sub
pop
cld
cmpsb
scas
popa
pushf
jge
push
mull
fimuls
cld
or
add
add
xchg
cmp
or
mov
sti
insl
mov
fidivrl
push
stos
fimuls
dec
negb
ficoms
in
into
scas
out
aas
jbe
fimuls
push
mov
fsubs
nop
adc
add
and
push
adc
movsb
xor
xchg
xchg
inc
arpl
data16
insl
inc
push
pop
mov
jle
push
dec
call
lea
movsb
sahf
movsl
ss
or
scas
lds
mov
inc
mov
stos
jae
leave
push
stos
mov
aas
mov
in
into
clc
out
dec
lret
pop
enter
push
or
push
adc
adc
and
into
and
add
xor
scas
push
xchg
aas
inc
xchg
repnz
rolb
ljmp
or
or
and
mov
fists
cmpsb
popf
data16
mov
lods
push
daa
into
mov
mov
mov
cmpsl
ljmp
mov
or
mov
fimull
add
sbb
adc
stc
aas
es
mov
mov
fdivs
inc
or
inc
shlb
push
and
popa
mov
push
xchg
sub
fwait
cmc
daa
fdivrp
xchg
jne
lret
ljmp
ds
or
cmpsb
lds
xchg
arpl
data16
adc
ljmp
or
sbb
dec
mov
xchg
test
daa
sbb
stos
add
inc
cmpsb
adc
pop
lret
jge
dec
arpl
enter
lcall
adc
mov
fimuls
jle
jbe
pop
adc
dec
scas
sub
pop
xchg
das
add
movsl
ret
or
dec
arpl
pop
mov
add
stos
rorb
pop
mov
jae
enter
mov
leave
xor
lret
mov
cmpsl
mov
lret
das
enter
out
or
lahf
mov
dec
mov
jo
cmpsl
jb
lods
pusha
test
lret
xchg
decb
orl
cmp
into
aas
sbb
adc
aas
adc
pop
sub
mov
adc
out
or
jp
inc
inc
mov
shll
mov
daa
rorl
or
ret
mov
cmpsl
mov
out
aaa
lret
daa
enter
testl
xor
out
inc
mov
fdivrs
into
pop
sbb
dec
or
scas
sub
aas
cmp
hlt
daa
sub
fsubrs
xchg
jge
lods
jmp
push
decb
fisubs
dec
into
jle
pop
adc
jle
dec
mov
mov
rcrb
daa
scas
mov
fsubrs
mov
nop
push
repz
add
cmp
repz
arpl
inc
xlat
cmpsb
in
jnp
jae
aam
daa
push
mov
aas
inc
mov
cmpsl
xor
cmp
lret
and
or
imul
inc
jnp
jae
jns
daa
or
xchg
xor
add
adc
daa
push
das
adc
movsb
adc
push
gs
jle
xchg
inc
jne
aad
xor
adc
mov
pop
cmp
into
fcomps
lock
or
scas
test
fistpll
inc
xchg
pop
push
push
sbb
or
lret
jle
fisubrl
cmpsb
or
mov
mov
leave
out
loopne
pop
sti
std
jmp
jecxz
js
pop
jge
fisubl
mov
mov
nop
push
sub
test
add
add
sahf
es
movsb
cmp
or
cmpl
mov
andl
rol
mov
hlt
cmp
xor
xlat
pushf
mov
notb
shrl
mov
js
cmpsb
xchg
neg
lods
mov
les
inc
xor
push
js
inc
sahf
mov
data16
xchg
sub
mov
xor
lret
test
subb
xor
cmpsb
clc
fnsave
mov
aas
popa
mov
loop
outsl
aas
pop
icebp
popa
int3
outsb
lods
cli
jg
lods
bnd
shlb
cmpsb
push
enter
dec
in
cmpsb
pop
repnz
xrelease
cli
push
repnz
sub
xlat
ficomps
push
push
insl
push
loopne
xchg
insb
jnp
mov
cwtl
pusha
insl
and
cmp
adc
fs
cli
cli
test
cltd
les
push
ds
fstpt
inc
in
lods
push
xchg
fsubr
push
scas
dec
or
jge
ret
movsb
dec
adc
add
idivl
rcr
stos
pop
jmp
push
xchg
and
cmpsb
add
gs
or
sbb
cmpsb
aam
insl
jnp
push
lret
pop
fadds
adc
adc
sbbb
js
xchg
sti
mov
or
mov
xchg
enter
push
mov
addr16
push
or
ja
dec
pop
mov
int3
cs
imul
xor
push
fcomps
xchg
into
ret
bound
movsb
push
std
arpl
cli
cs
push
scas
mov
bound
arpl
jp
dec
shlb
push
inc
xchg
mov
leave
sbbb
inc
sub
sub
insb
or
fwait
cmpsb
pop
cs
cwtl
mov
dec
xchg
rcrb
fsubl
les
andl
add
in
lret
mov
cmpsb
jbe
jae
cli
scas
in
or
js
mov
xor
push
pop
xchg
mov
movsb
mov
lret
sahf
and
sbb
adc
daa
add
jne
inc
sub
mov
push
pop
dec
imul
push
and
scas
stc
push
aad
adc
gs
sbb
lret
push
rcll
dec
adcb
mov
or
imul
test
or
in
dec
mov
xchg
sahf
sbb
iret
or
fildll
roll
push
mov
lock
xorb
icebp
and
out
jle
fistpll
adc
test
int3
or
push
adc
mov
mov
cmpsl
scas
mov
js
mov
jl
adc
scas
add
adc
mov
lret
inc
lret
ljmp
sub
enter
pop
or
or
add
inc
test
insb
add
pop
dec
ds
in
orb
ret
mov
push
push
cmpsb
cmp
mov
push
inc
out
xchg
rcr
add
mov
mov
iret
dec
pop
ljmp
jae
mov
push
loope
in
push
out
add
rclb
or
movsb
mov
mov
cmpsb
lahf
out
mov
cwtl
ja
lcall
jns
aam
push
subb
lret
fadds
jne
fbstp
pop
into
repz
je
stos
inc
sbb
and
fwait
movsb
stos
clc
add
lcall
inc
aam
xchg
xor
pop
lret
mov
rcrl
jnp
pushf
mov
ja
lahf
in
xchg
lods
fistpll
in
push
fwait
mov
out
jle
stc
jp
inc
adc
push
movsl
push
lea
xchg
adc
cmc
mov
outsl
push
mov
push
mov
loope
int
or
cld
popa
pop
int3
out
cmpsb
jae
push
std
dec
pusha
jge
decb
adc
dec
jo
cmp
clc
cmp
sar
mov
in
jb
dec
xor
fisubrl
inc
jp
cmp
out
adc
xchg
decb
movsb
inc
mov
scas
loope
mov
stc
test
jmp
es
out
xor
or
mov
sahf
xor
pop
pop
call
adc
push
jo
mov
add
cs
or
or
test
cmp
dec
arpl
pop
or
ja
ror
push
pushf
dec
aas
fbld
lods
mov
xor
jbe
vcmppd
cli
or
lret
lods
and
mov
mov
mov
outsl
mov
scas
jl
jge
and
in
in
out
lahf
push
jg
jl
push
pop
sarb
test
push
aas
pusha
xorl
outsl
call
xchg
dec
ss
mov
adc
arpl
out
adc
inc
ja,pt
cmp
sub
add
mov
or
mov
xor
mov
aaa
sbb
inc
les
add
or
mov
cwtl
std
cmp
push
ret
xchg
xchg
fidivrl
out
insb
ljmp
cmc
adc
verr
or
or
shrl
pop
fs
mov
dec
pusha
adc
loopne
leave
aas
loope
insl
sbb
ret
jo
jns
fnstenv
int3
rclb
sub
mov
aaa
jbe
sbb
cmp
xchg
xchg
cli
out
pop
xor
fwait
ror
loop
mov
shlb
push
or
bound
cmp
cmpsb
mov
xchg
mov
mov
movsb
pop
add
xchg
lahf
and
roll
adc
inc
sbb
mov
add
sub
popf
or
insl
outsb
mov
mov
pop
sbb
into
xchg
sub
xchg
stos
or
ret
mov
mov
mov
stos
sar
or
pusha
mov
loopne
push
fisubs
daa
mov
mov
fcomps
mov
mov
jbe
sbb
xor
pop
cmp
ret
in
into
xchg
push
cmpsl
lock
jb
pushf
dec
jecxz
jne
rolb
sarl
pop
rcrb
jmp
popa
arpl
xchg
mov
mov
aad
mul
push
inc
push
jno
push
bound
push
ljmp
or
mov
cmp
adc
clc
mov
mov
mov
ds
sahf
mov
sbb
push
sti
nop
adc
mov
fdivs
fildl
xchg
mov
xchg
es
cwtl
aas
cmp
mov
adc
imul
xchg
jb
lcall
enter
mov
enter
jl
sub
shlb
mov
aam
mov
fidivrs
or
or
xchg
out
ud1
pop
aas
push
adc
mov
pusha
or
xchg
in
jp
arpl
jg
sbb
daa
dec
mov
fnstenv
sti
negb
nop
int
nop
mov
mov
mov
inc
cmpsl
add
add
lret
repnz
lcall
pop
jmp
hlt
cmpsl
and
scas
lret
pop
incb
dec
arpl
mov
push
scas
jecxz
xor
jecxz
shlb
pop
repnz
push
outsb
int3
dec
push
inc
and
clc
jne
lret
mov
mov
xor
xchg
xor
pop
ds
decl
mov
xchg
mov
cmp
add
add
out
mov
js
adc
cs
hlt
int3
adc
xchg
enter
mov
mov
push
or
pop
xchg
loopne
sub
jecxz
and
pop
jb
or
pushf
xchg
scas
xchg
leave
add
mov
push
es
movsb
xor
fsts
aam
mov
mov
in
out
jecxz
lea
jl
inc
mov
pop
popf
pusha
mov
push
movsb
adc
ljmp
andb
aad
insb
fsubs
jo
push
jae
sub
and
aaa
ret
movsl
xchg
mov
nop
lret
mov
mov
stos
ret
push
xchg
ljmp
mov
pop
out
scas
hlt
sub
cltd
cmpsl
hlt
sti
add
mov
scas
fisttps
mov
mov
js
rcll
das
cmpsl
push
dec
daa
or
cmp
out
lret
frndint
dec
xchg
mov
pushf
loope
push
xchg
or
aaa
mov
or
lret
out
ja
xchg
in
cmpsl
call
push
daa
mov
cmp
cmpsl
nop
mov
fisubs
out
mov
fidivs
sahf
fadds
adc
dec
dec
lds
jecxz
cmc
push
out
pop
iretw
repz
insb
cs
insb
shll
scas
sar
mov
hlt
ss
cmpsl
test
enter
lahf
xor
xor
inc
jecxz
stc
aam
fnstcw
dec
cmp
mov
inc
fldlg2
inc
pop
lods
nop
lods
shrb
call
or
sub
and
enter
repz
jmp
and
icebp
jmp
aaa
pop
lock
cld
push
mov
jne
jbe
repnz
aad
in
popf
insb
jmp
sbb
cmc
loopne
in
pop
and
or
push
xor
dec
int3
aam
and
mov
sarl
mov
fsts
scas
mov
pop
fadd
pop
aas
fildl
call
sub
jmp
adc
xlat
cltd
outsb
cmp
adc
sahf
dec
xor
cs
rol
daa
loopne
testl
push
xor
bnd
call
stos
aas
sti
shll
out
pop
std
mov
jecxz
dec
dec
je
push
push
in
aaa
out
adc
int3
xchg
sub
push
out
in
pusha
push
in
add
clc
test
dec
mov
shll
stos
hlt
addr16
incl
push
fadds
les
into
sbb
lahf
pop
stc
inc
push
inc
ljmp
cmp
out
repnz
sarb
adc
out
mov
xorb
cli
sbb
xor
jp
or
and
mov
dec
mov
pushf
rcrb
add
test
mov
aam
shlb
scas
xor
xchg
ret
mov
ret
daa
daa
sbb
xor
mov
mov
push
clc
mov
lret
aam
inc
outsl
incb
push
shr
int
pop
inc
imul
movsl
adc
jl
rclb
xor
or
mov
rorl
aas
xchg
stos
mov
ficompl
imul
pop
jecxz
lea
mov
pop
jg
dec
and
pop
cli
push
cmp
pusha
jns
fnstcw
or
mov
int3
mov
leave
sti
scas
adc
push
jg
add
out
bound
je
adc
rorl
ret
pop
jmp
out
in
mov
jbe
xchg
rclb
rcl
outsb
sbb
inc
mov
mov
out
or
ret
int
cmp
add
add
ret
incl
pop
push
ja
lock
dec
pop
pop
or
or
mov
push
and
cmp
stc
fld
lds
call
dec
jecxz
enter
sahf
dec
test
and
xor
mov
pop
xlat
hlt
sub
repz
enter
test
sub
xchg
inc
in
mov
pop
aam
mov
inc
sbb
and
jo
jbe
leave
sbb
inc
xorb
mov
mov
les
fiaddl
sbb
insl
dec
push
shrb
out
mov
jmp
iret
frstor
shrb
leave
fwait
pop
cli
pop
add
push
pop
add
inc
in
inc
pop
daa
ljmp
cltd
insl
scas
sahf
mov
or
push
mov
dec
fwait
xlat
scas
fistpl
cld
mov
in
enter
jne
js
adc
pop
js
ret
cld
test
fbstp
mov
mov
adc
arpl
mov
into
loopne
in
les
es
xchg
mov
mov
sub
mov
or
dec
shrb
jmp
mov
or
jno
mov
sub
loopne
mov
mov
insl
roll
cmc
jge
cwtl
enter
cmpsl
mov
pop
push
add
ss
sar
adc
fisubrl
leave
sarb
sti
pop
xchg
icebp
bnd
scas
xor
loope
inc
mov
mov
ljmp
dec
cmpsl
mov
sbb
enter
std
sahf
or
enter
shl
movsb
xor
inc
shl
stos
or
mov
cmp
xchg
sub
insl
fwait
or
inc
rclw
mov
lahf
cmp
or
lcall
subb
xor
hlt
jae
xchg
out
adc
int3
fcomps
mov
shll
cmpsb
mov
push
cmpsl
jno
push
cmp
dec
sbb
loopne
inc
xchg
pop
pop
int3
mov
pop
sbb
fcom
mov
stc
leave
pop
test
push
sub
and
cltd
jmp
pop
out
sbb
outsl
push
xor
lret
mov
pop
cmp
out
lret
and
push
add
stc
jge
xchg
shll
mov
mov
sub
loopne
jmp
int
dec
xlat
pop
push
imul
je
cmp
and
rolb
sbb
cmp
sbb
push
pslld
ficomps
xor
mov
rorb
es
imul
arpl
sarb
lds
mov
bound
ret
sti
push
push
or
sub
mov
icebp
dec
pop
cmpl
xor
mov
jns
mov
ljmp
js
or
or
push
dec
pop
bound
jl
test
mov
filds
loop
mov
mov
pop
in
push
lcall
lret
and
adc
shlb
jmp
mov
outsl
sahf
sar
mov
jne
sbb
cmpsl
sahf
and
mov
in
sub
leave
sbb
dec
mov
movsb
les
loopne
xchg
test
push
enter
test
push
test
mov
cmpsl
cmp
mov
aas
sub
lea
imul
sbbl
push
cltd
shlb
pop
xchg
shrl
sub
and
insb
mov
cld
lret
ficoml
mov
gs
dec
imul
loopne
or
lcall
mov
add
jnp
pop
out
in
ljmp
add
movsb
dec
insb
mov
xchg
loopne
mov
popa
and
sahf
dec
clts
cwtl
ja
shll
fsubl
scas
push
pop
fcmovu
xor
lret
fmull
or
rcl
dec
cmp
push
sbb
mov
pop
loopne
test
jne
clc
mov
pusha
cmp
int
push
into
sub
fwait
js
mov
out
jl
std
shll
shr
and
les
xchg
bound
cmpsb
cmpsb
cmpsl
inc
sbb
cmpsl
pop
sub
lret
or
push
das
cltd
addl
xchg
mov
ror
xchg
mov
mov
pusha
add
test
and
mov
push
test
pop
lret
xchg
pop
enter
or
push
jp
cmp
push
jecxz
lret
add
data16
xor
fcomp
mov
ds
lret
roll
out
in
stc
cwtl
mov
cwtl
or
inc
into
mov
faddp
lret
popa
mov
je
or
test
mull
xchg
inc
scas
xchg
adcl
int3
adc
or
pop
leave
ret
or
mov
add
push
cmp
sti
out
xchg
add
shr
out
jo
adc
adc
arpl
andl
outsb
bnd
adc
pop
mov
lds
pop
fimuls
sub
shr
jmp
cmovge
xor
outsl
int3
mov
sub
mov
mov
hlt
jmp
push
scas
or
mov
int
dec
jmp
sbb
push
sub
xchg
pop
mul
or
test
test
pop
push
adc
fisubrl
or
dec
mov
push
mov
pop
scas
lds
pop
test
mov
sbb
mov
int3
out
popf
dec
in
sar
lcall
shll
cmp
sub
pop
push
sbb
lret
scas
in
ljmp
pop
data16
outsb
xchg
xchg
add
mov
repnz
shlb
mov
in
icebp
sbb
push
popf
popa
outsl
mov
lock
rorl
hlt
mov
lock
mov
mov
add
pop
mov
fcmovnbe
adc
test
add
inc
pusha
cmp
and
sbb
aaa
pop
or
insl
jle
and
sahf
gs
stos
ret
lds
mov
sbb
add
into
stos
scas
shl
add
fisttpll
inc
mov
cwtl
fadds
or
push
shl
fnstenv
test
sarb
mov
sub
call
dec
adc
repnz
dec
add
rcrb
mov
mov
repnz
mov
add
idiv
rcrl
mov
jns
sbb
mov
ljmp
enter
stc
and
rorl
xchg
sbb
adc
xor
nop
test
mov
stos
fwait
sbb
mov
mov
dec
cmp
adc
out
movsl
loop
idivl
cmpsb
adc
rorl
daa
mov
jle
arpl
push
add
xor
push
or
repz
push
stos
call
imul
inc
mov
mov
sti
movsb
icebp
push
test
jl
mov
dec
rcl
roll
aad
xor
xchg
loop
scas
sti
ret
inc
xchg
inc
or
xor
sbb
out
ficoml
fistpl
lock
pop
jnp
test
xchg
xchg
cmp
adc
add
add
andb
sub
movsl
enter
mov
xchg
in
repnz
and
push
mov
into
fst
sbb
push
cmp
hlt
pop
xor
out
push
add
in
dec
sub
dec
xchg
mov
bound
fsubp
xchg
cmp
out
adc
jecxz
jl
dec
xor
sarb
sub
lahf
lahf
xor
mov
fimuls
mov
pop
int
pop
mov
dec
popf
inc
fbstp
jp
push
in
jle
mov
or
lds
addb
cld
mov
mov
sbb
xchg
mov
je
cwtl
imul
push
cmp
cmpl
out
and
dec
sub
lcall
dec
add
jo
mov
repz
loopne
lret
enter
or
mov
aam
or
dec
pushf
scas
mov
rolb
mov
add
std
movsb
push
inc
push
or
fadds
add
ljmp
scas
rcl
nop
dec
stos
mov
dec
fisttps
in
dec
cltd
lret
iret
jnp
xor
int3
jge
add
jmp
or
sti
xchg
inc
push
test
pop
dec
lods
mov
out
mov
sbb
call
mov
mov
mov
push
int3
pop
sbb
mov
stos
lods
cmc
adcb
das
cmpsl
pushf
or
clc
pop
in
lret
xor
mov
adc
fld
cwtl
clc
orl
jmp
ja
add
inc
hlt
pop
rcl
jne
stos
lods
bswap
pop
mov
cmp
into
out
jmp
jecxz
iret
imul
cs
loopne
add
sub
fwait
inc
sbb
jb
mov
cmp
mov
aam
repz
out
xchg
movsl
ret
test
sbb
mov
fwait
test
cld
cs
nop
rcrb
pop
outsb
mov
fiadds
xchg
lcall
data16
mov
mov
push
add
int3
insl
repz
loope
aad
mov
xchg
inc
dec
and
cmp
add
or
movsl
popa
adc
xchg
jo
dec
outsl
mov
adc
mov
push
mov
subl
mov
flds
es
int3
sahf
stos
jo
shrb
adc
pusha
push
xorl
scas
sub
xchg
ret
movsl
mov
push
popf
out
xchg
adc
push
inc
rclb
pop
adc
sub
inc
mov
imull
data16
pop
out
nop
dec
mov
push
insb
decb
loopne
dec
xchg
sub
jg
mov
les
pop
pop
pop
inc
lea
das
cmp
mov
inc
mov
cli
inc
sbb
add
dec
push
int
inc
mov
mov
fpatan
jg
and
jge
pop
xchg
insb
pushf
jnp
push
aam
fcoml
add
and
pop
xor
jmp
jbe
dec
daa
pushf
mov
push
cmpsb
test
mov
push
out
and
gs
mov
mov
push
pop
jle
push
push
pop
push
in
add
dec
inc
cli
popf
pushf
aam
mov
mov
in
mov
loopne
push
pop
aam
jns
sub
sub
scas
add
or
adc
push
jbe
add
add
push
cwtl
cmp
imul
sub
push
les
sbbb
mov
mov
push
mov
mov
rolb
xchg
subl
add
add
adc
inc
cmpsl
jmp
jbe
lret
jb
adc
nop
gs
hlt
jb
int
jns
into
and
fidivl
mov
mov
aaa
in
shr
push
imul
xchg
pop
pushf
test
cmpsb
pop
mov
sahf
addr16
add
pop
addb
test
jecxz
push
fidivl
popf
push
jle
mov
push
adc
mov
or
mov
mov
xchg
or
scas
jmp
mov
pop
dec
mov
outsb
add
sbb
aas
ret
pop
and
cmp
xchg
adc
adc
cmp
jl
cmp
loopne
repnz
pushf
imul
pushf
xchg
jecxz
mov
movsl
das
push
mov
mov
jecxz
sbb
xor
negb
mov
lock
mov
rolb
and
leave
push
fistps
or
mov
stos
add
out
dec
or
adc
sbb
lds
cmp
fdivr
popa
xchg
rcrb
push
fdivl
scas
lods
adc
mov
mov
mov
pop
sbb
mov
or
pop
faddl
call
in
cmpsb
icebp
or
cmp
push
jbe
jnp
fstpt
mov
lret
mov
push
orb
cmp
pop
aam
fcomps
jp
sbb
out
sbbb
leave
cmp
xchg
dec
cmp
aam
cmp
mov
jns
cli
cmp
ret
imul
bound
add
addr16
jp
sbb
sbb
and
cmpsl
push
push
popa
enter
jmp
push
lret
ljmp
outsb
cltd
pusha
sahf
push
dec
xchg
pop
xchg
filds
add
add
cli
call
and
mov
sub
mov
sub
sbb
test
pushf
cmpsl
push
push
mov
xchg
mov
dec
and
roll
cltd
fsubr
ljmp
lods
repz
pop
fbstp
test
leave
dec
xor
cmp
lods
lret
mov
mov
inc
call
cmpsb
jbe
imul
scas
mov
mov
clc
adc
push
popf
sti
loopne
pusha
adc
das
shll
mov
push
not
sub
stos
and
loope
jb
pop
aad
sbb
shll
pusha
push
xor
arpl
outsl
jge
fldenv
enter
jmp
adc
cmc
dec
add
cmp
mov
int3
out
xor
cmp
fsubrs
rolb
loop
dec
dec
ds
and
mov
push
pushf
pop
mov
mov
add
cwtl
dec
inc
icebp
push
mov
or
sub
sti
negl
jmp
loope
les
sbb
or
add
scas
sub
js
push
mov
xchg
xor
cmpsb
pusha
sbb
xor
sbb
mov
gs
xchg
xor
sbb
imul
xchg
loop
pop
or
inc
jge
mov
mov
inc
mov
test
shll
pop
das
ror
xchg
jno
pop
inc
pop
daa
push
jmp
cwtl
aaa
push
pop
jp
ljmp
test
mov
int
shrl
enter
frstor
and
aam
push
cmp
hlt
lea
out
jae
jae
icebp
shl
lods
mov
outsl
aaa
xchg
mov
xchg
mov
jle
lds
sbb
mov
mov
test
inc
push
into
aas
or
arpl
push
xchg
cs
out
imul
cli
sub
mov
mov
or
push
sub
add
nop
jle
shll
sub
mov
pop
add
adc
or
leave
mov
insb
dec
aaa
mov
aad
sti
lret
lods
push
imul
or
outsb
mov
xchg
push
or
popf
sbb
jge
pop
clc
xor
leave
push
ds
out
xchg
pop
mov
jae
fnsave
fcmovbe
push
mov
push
jl
add
mov
shll
imul
fcoms
mov
repz
lret
xchg
into
into
dec
loope
ljmp
xlat
pushf
rclb
lea
scas
ljmp
xchg
pushf
add
iret
cmp
mov
pop
icebp
jnp
jnp
cmpsl
pop
and
or
pop
cmp
jns
std
xchg
sbb
push
xor
dec
or
daa
mov
fsubrs
divl
repz
outsl
or
hlt
jmp
fistps
inc
xor
nop
push
enter
adc
aaa
or
xchg
xchg
call
mov
cmp
andb
push
es
adc
addr16
ljmp
push
dec
bound
out
cmpsl
data16
out
lret
pop
pop
lcall
movsb
dec
test
les
mov
jmp
pop
rcl
lds
lds
dec
mov
jae
push
scas
inc
pop
addr16
xor
mov
nop
scas
adc
lods
cltd
push
and
push
add
or
cmp
aas
add
fwait
movsl
in
mov
fmuls
shll
cli
add
sbb
jno
in
or
iret
sub
fnstsw
insb
jno
loop
push
push
orl
lret
sbb
cmp
call
pop
ret
mov
sbb
or
inc
pop
adc
out
sti
or
pop
jge
cmp
sub
lahf
lea
mov
mov
and
inc
scas
ljmp
inc
ja
test
or
push
mov
adc
rcll
test
mov
cltd
lea
and
pop
daa
imul
and
adc
sti
call
xor
out
stos
pop
pushf
in
sbb
sub
faddl
cmpsb
jbe
add
and
scas
shl
jae
cld
jmp
inc
jne
cltd
sahf
jae
or
hlt
lock
out
xbegin
fldenv
push
cmpsb
stc
into
movsb
inc
jg
int
and
ja
sarb
lcall
and
inc
mov
add
inc
cmp
sarb
ds
and
mov
daa
cmpb
jne
int
sahf
shrl
mov
mov
mov
pusha
and
std
loopne
and
mov
inc
or
adc
jb
mov
xchg
adc
push
xor
push
pusha
pop
xchg
cmp
push
sub
push
insb
mov
orb
xor
pop
out
xchg
lret
mov
scas
sub
sbb
aam
inc
cld
test
jecxz
loope
mov
jns
lea
mov
xchg
stos
test
add
mov
inc
add
outsl
inc
sub
iret
dec
insb
adcb
rorl
jle
pop
or
sub
out
pop
loope
push
or
fists
pop
repnz
int
pop
xor
imul
imul
stc
push
imull
sbb
jb
dec
or
adc
cs
arpl
dec
pop
or
daa
jb
mov
adc
xor
adc
nop
loop
and
in
mov
imul
sahf
popf
scas
es
repnz
aaa
sbb
mov
das
cmp
mov
bound
pop
mov
mov
add
sbb
roll
add
cltd
iret
mov
add
stos
or
dec
scas
icebp
add
xchg
mov
ljmp
je
jecxz
gs
xchg
call
mov
sahf
jg
inc
popa
xchg
loopne
pop
aam
pop
adc
shll
mov
add
dec
jnp
stos
adcl
out
sar
icebp
sub
pop
push
mov
pop
xor
mov
dec
dec
andl
or
pop
lds
cmpsl
mov
loop
and
lea
loop
pop
pop
xchg
fimuls
inc
stos
fucomip
mov
jb
xchg
jp
addl
dec
repnz
pop
outsb
adc
movsl
xchg
and
push
test
imul
cwtl
sbb
inc
outsl
test
arpl
xchg
test
mov
mov
in
leave
rorl
pop
mov
cmpsb
or
push
int
mov
sahf
push
inc
mov
imul
aad
xor
pop
lods
mov
das
mov
mov
sbb
fimull
sbbl
mov
outsl
push
int
in
add
mov
jne
lods
push
cmp
call
push
xchg
add
aas
ja
cmpsb
test
mov
xchg
imul
push
out
add
lcall
dec
cmpsb
xor
rclb
out
mov
xlat
arpl
fs
mov
std
cmc
rep
pop
xchg
in
xlat
addl
lea
aaa
hlt
test
out
adc
add
nop
rol
mov
lods
mov
fnsave
imul
aam
movsl
leave
ret
mov
adc
pop
push
pop
cvtps2pd
inc
sub
rcr
mov
dec
inc
mov
sub
xchg
push
daa
mov
or
movsb
pop
push
sub
mov
or
cmp
movb
and
push
sub
xchg
icebp
xchg
mov
ror
and
lods
out
jb
xchg
push
fcmovbe
daa
andb
jle,pt
xchg
das
stos
add
lock
pop
fidivl
and
ret
add
lret
sbb
xchg
mov
xor
sub
cli
or
int3
in
dec
mov
pop
push
push
mov
lahf
pushf
push
dec
arpl
sbb
jno
mov
cltd
push
fistps
dec
int
inc
outsb
daa
sub
or
fldl
push
mov
push
dec
and
push
mulb
xlat
mov
sbb
in
mov
insb
inc
outsb
dec
leave
xchg
mov
push
ja
into
mov
cmp
and
in
je
jo
lea
mov
adc
jmp
dec
test
jecxz
movsb
xchg
out
test
push
bts
scas
lcall
inc
in
jno
mov
scas
sbbl
rcrb
mov
inc
ds
test
lea
jnp
stc
cmp
ret
mov
out
aaa
out
sub
add
and
dec
xlat
ret
mov
imul
cld
jb
sub
mov
lret
and
mov
jecxz
inc
not
cmc
ja
das
les
jge
sahf
or
pop
mov
jns
jge
fucom
xchg
mov
mov
js
push
pop
push
jmp
mov
cmp
cmp
xchg
dec
add
cmp
sahf
inc
ret
pop
dec
iret
pop
cmpsl
cmp
xor
mov
mov
pop
jae
lahf
mov
push
dec
cwtl
aas
push
mov
insb
test
jecxz
scas
push
sbb
jbe
pop
out
jle
rcr
mov
xchg
std
sub
add
adc
push
and
jae
cmpsl
fwait
sub
sub
sbbb
lea
and
pushf
popf
mov
fcoml
adcl
adc
jne
in
icebp
adc
inc
mov
lcall
leave
in
loopne
outsl
or
outsl
clc
cmp
cli
cmp
xchg
andl
jno
xchg
mov
imul
test
inc
mov
sbb
sbb
xor
in
stos
std
mov
outsl
xchg
pop
xchg
shrl
mov
xor
sub
in
dec
fists
push
cmp
movsl
add
adc
in
jle
xchg
jae
xor
mov
push
inc
xchg
mov
mov
push
adc
jno
out
fstpt
or
and
mov
jae
xor
pop
aas
pop
icebp
push
and
xchg
outsl
loop
push
mov
xlat
shlb
or
test
mov
push
adcb
push
sbb
js
xor
xlat
cltd
xlat
mov
push
add
mov
out
sub
cli
bound
in
lods
aas
pop
mov
xchg
insl
dec
xor
ja
xchg
adc
addr16
cmc
cmpsl
xor
mov
popa
scas
repz
in
inc
popl
pop
mov
or
scas
rcrl
and
pop
in
stos
aas
push
sahf
adc
out
clc
push
das
xor
sbb
lret
mov
sbb
enter
push
cmp
adc
shll
sti
cmp
jge
gs
pop
dec
mov
adc
shr
movsb
mov
cmp
inc
and
lds
je
sbb
in
jno
add
in
in
lea
mov
scas
jno
dec
arpl
data16
cmp
add
mov
push
ss
mov
pand
pushf
lock
push
test
icebp
jne
adc
or
cmpsl
pop
or
stc
incl
and
push
mov
pushf
out
cmpsb
cmp
jg
xor
mov
sbb
sub
enter
push
fisubl
ljmp
inc
push
pop
pop
lret
cmp
popf
xchg
rclb
mov
push
adc
subb
cmpl
dec
mov
subb
dec
mov
push
pop
inc
lahf
testb
add
adc
jns
rorl
movsb
movsb
xor
js
xor
mov
pop
cmpsl
mov
test
inc
push
or
push
insb
fs
aam
jecxz
pop
cmp
andb
nop
mov
int3
mov
mov
mov
es
push
push
pop
inc
scas
inc
movsl
das
ret
push
jbe
jp
inc
cmpsl
adc
mov
inc
jbe
ja
lret
add
nop
insb
mov
mov
insb
sbb
enter
popf
out
and
push
xchg
cmp
loope
scas
inc
xor
cmpsl
adc
add
sub
test
addr16
xor
adc
leave
adc
mov
lret
mov
cld
xor
ds
jno
shll
dec
pop
cmpl
xchg
nop
stos
cwtl
mov
jl
mov
xchg
jge
xorb
dec
out
jb
lea
addr16
push
pop
jbe
mov
aas
xchg
lea
jge
pop
and
or
clc
adc
inc
movsb
xchg
xlat
loope
xor
pop
dec
dec
and
sarb
das
add
add
push
jge
dec
xchg
jge
rcll
roll
scas
mov
out
jb
or
or
push
andl
sarl
clc
inc
out
cli
mov
out
fsubl
add
add
fucomp
cmp
sbb
jmp
arpl
xor
imul
pop
lods
add
mov
rclb
mov
out
mov
jnp
cli
adc
inc
inc
mov
arpl
dec
cmp
int
jb
add
pop
fwait
push
push
push
pushf
push
popa
pusha
inc
es
lods
loop
cmp
aaa
dec
movsb
jmp
mov
or
fldcw
shll
das
xchg
icebp
mov
push
into
push
xchg
stos
xchg
xchg
sbb
lret
pop
lcall
jmp
mov
jne
sub
insl
mov
or
xlat
stos
mov
and
pop
sub
lahf
mov
pop
addr16
jmp
packsswb
mov
dec
scas
test
outsb
outsl
sbb
sbb
dec
rcrl
jecxz
ret
mov
sbbl
sahf
inc
xchg
in
arpl
cmpsb
fldenv
push
jge
loopne
loope
ss
mov
and
mov
pop
push
aas
lods
adc
inc
mov
je
idivb
jecxz
sarb
fldt
in
incl
mov
push
test
xchg
leave
mov
cmp
xchg
xchg
popa
dec
cmp
nop
jae
movsb
xor
out
adc
push
push
sub
xor
pop
pop
inc
jle
xchg
cld
sti
rcrb
xor
inc
loope
sbb
jae
dec
es
or
aas
lahf
insb
push
mov
adc
sbb
flds
and
sbb
pop
jae
out
mov
adc
pop
inc
lods
subb
arpl
jnp
outsb
fs
jecxz
xchg
into
mov
es
and
subb
pusha
inc
nop
mov
out
in
arpl
mov
pop
popf
cmp
divb
xchg
or
and
mov
and
cmp
aam
dec
icebp
adc
adc
xchg
push
mov
add
add
or
lea
add
shll
int
fistl
insb
or
bound
es
aas
mov
test
push
cmp
ds
lret
imul
cmp
jge
sub
imul
bound
into
xor
or
rclb
in
fistl
or
add
jb
fmull
push
sub
cmp
pop
mov
sbb
cltd
sbb
dec
or
add
mov
in
inc
fimull
mov
or
ds
andb
push
push
mov
sub
or
fs
test
push
add
or
ret
dec
mov
movsb
push
in
addl
inc
jecxz
in
inc
movd
pop
cmp
enter
aaa
push
ret
pop
ja
fnstenv
adc
rorb
xlat
fdivrs
mov
mov
sbb
push
add
mov
mov
scas
push
and
xlat
mov
dec
sarb
mov
xchg
jge
jl
jp
xor
ja
insb
loop
iret
scas
push
leave
lret
pop
out
push
cmp
lret
nop
inc
cltd
inc
inc
cltd
inc
mov
rcrb
out
cmpsl
mov
mov
hlt
adc
inc
sub
cltd
add
add
movsb
mov
sub
sbb
sub
push
jle
arpl
jo
loop
lcall
xchg
sarb
mov
mov
mov
decb
xchg
jns
ret
mov
addb
jge
xchg
jmp
and
in
push
mov
mov
in
inc
jl
mov
cld
es
xchg
or
push
movsl
xchg
adc
add
divl
mov
xlat
dec
mov
and
aad
pop
in
add
pop
insb
push
cmp
jbe
fs
mov
shll
jb
lcall
cmc
loope
dec
pop
push
outsb
sub
mov
sar
jl
mov
pushl
inc
push
add
cmc
inc
leave
incb
add
loop
imulb
mov
push
js
push
xor
push
shlb
fistpll
inc
subb
movsb
nop
xor
push
aas
adcb
xchg
mov
inc
jp
ss
jg
pop
inc
and
in
lcall
frstor
xor
cld
lea
push
fimull
adc
jecxz
mov
dec
mov
push
inc
cmp
sub
sub
and
and
mov
push
cwtl
daa
add
mov
lret
daa
jbe
jp
mov
xlat
les
xor
mov
in
fldl
pop
inc
pop
lea
fmul
shlb
in
dec
cmp
xchg
cltd
jns
inc
add
mov
push
add
xchg
outsl
cmpsl
ds
sbbl
shrb
dec
sti
enter
or
ret
fs
push
lcall
cwtl
xchg
mov
push
push
inc
mov
jle
jae
subb
jo
jne
out
shl
push
popf
dec
jae
mov
je
pop
out
lea
jns
or
jle
call
enter
aaa
xor
xlat
popf
rol
in
xchg
jle
mov
dec
fwait
mov
outsb
adc
xor
test
sbb
mov
xchg
js
pop
push
jns
xor
nop
fwait
add
int3
sbb
movsb
and
sbb
mov
mov
lods
out
mov
mov
add
imul
sub
in
inc
mov
lea
mov
mov
std
adc
test
mov
sbb
mov
pop
inc
cwtl
fs
xor
pop
xchg
femms
xor
shrb
or
and
cmpsl
cli
idivl
pop
outsb
mov
mov
iret
outsb
and
mov
mov
sbb
lret
cmpl
negb
inc
rcll
pop
xor
rcr
adc
push
dec
add
mov
mov
ljmp
gs
jne
mov
mov
jg
add
lea
test
sbb
mov
push
call
test
xchg
sub
mov
out
dec
bound
mov
pminub
adc
mov
movsb
clc
cmp
out
pop
adc
rolw
shrb
icebp
leave
mov
or
xor
stos
mov
mov
lods
mov
dec
fstps
adc
js
xchg
mov
leave
adc
out
scas
inc
jmp
sbb
jb
jae
cmpsb
xchg
and
lock
jb
jmp
jmp
mov
jg
in
bound
jnp
movsl
xor
cmpsl
or
dec
jo
push
pop
adcb
inc
cmp
mov
sbbl
jne
or
jl
pusha
inc
push
xchg
push
cmp
dec
nop
cmp
loope
cwtl
rclb
in
sub
sub
jo
cwtl
add
pusha
jg
sti
pop
mov
mov
pusha
or
fbld
sub
das
cmp
iret
shrb
popa
movsb
les
shrb
sahf
cli
add
jno
xchg
inc
aaa
fdivs
test
pop
in
insb
mov
add
add
pop
push
fstpl
pop
int
dec
adc
pop
add
notl
data16
push
std
xchg
std
xor
mov
addr16
lret
pop
push
pop
xchg
call
mov
lret
mov
mov
inc
mov
sub
insl
add
dec
sbb
pop
push
pop
into
daa
int
loopne
ja
cltd
into
loop
cld
jnp
stos
mov
leave
pushf
nop
sbb
in
mov
shrb
sahf
out
sub
mov
inc
std
inc
sbb
pushf
jl
rcrl
jne
repz
adc
sbb
cmp
push
xor
pop
jae
mov
inc
pop
jnp
push
mov
outsb
fwait
clc
lock
mov
adc
mov
push
outsb
je
sbb
add
jb
push
jl
sub
mov
cmc
in
and
mov
jo
mov
dec
xchg
idiv
sbb
mov
ret
cmpsb
pop
sub
call
out
cmp
cmp
aam
cmp
push
cmp
or
pushf
icebp
jg
mov
aaa
pop
pop
and
clc
test
ja
pushf
mov
out
stos
push
jnp
mov
test
xchg
neg
mov
mulb
repz
and
fldenv
sbb
insb
adc
icebp
loopne
xchg
add
xlat
pop
or
cmp
sub
dec
add
and
add
out
xchg
mov
or
rcll
int
je
movsb
hlt
imul
push
out
outsb
jg
je
mov
gs
and
adc
insl
movsl
clc
inc
adc
flds
adc
inc
sub
imul
add
popa
ds
xor
sub
push
and
nop
pop
faddl
add
add
lea
inc
xchg
lcall
jbe
push
mov
jmp
xor
fnstcw
add
nop
pop
cld
sub
test
pop
add
adcl
shlb
mov
out
ljmp
add
push
clc
fstpl
dec
mov
call
jl
decl
jae
fadds
jb
pop
scas
lock
stos
mov
aaa
xchg
gs
stos
lret
mov
mov
mov
out
push
scas
cmp
rcrb
pop
cmpsb
bound
pushf
in
adc
and
push
xchg
add
jmp
add
scas
push
ret
and
mov
xchg
push
aam
xchg
fcomps
stos
jg
fisubrs
pusha
mov
xlat
mov
mov
adc
sbb
pop
mov
pop
fwait
inc
js
ljmp
and
in
into
jmp
sti
out
jnp
fstpt
rorl
shrb
jle
pusha
repz
push
mov
mov
xchg
jp
push
or
cmp
sbb
mov
in
sbb
mov
or
jo
add
lret
aas
adc
sbb
movsl
pop
imul
xchg
lret
loop
pushf
add
jnp
fidivs
jo
js
adc
movsb
and
btr
jnp
cmp
pop
pop
sbb
jb
and
shrb
leave
imul
mov
sub
jmp
sub
adc
xchg
inc
jg
pop
les
xchg
cmp
inc
fstps
sbb
xor
das
and
mov
int
mov
outsb
int
mov
push
stc
into
or
gs
outsb
or
pusha
mov
inc
mov
sub
pushf
aas
adc
aam
jb
push
std
orl
add
push
jne
jns
push
outsl
and
or
mov
icebp
inc
leave
xchg
xor
mov
sahf
leave
sub
call
ljmp
xorb
cmc
js
lock
js
inc
cli
mov
mov
jb
cmc
mov
andl
popa
fisttpl
add
cli
or
lock
sub
jl
add
fcomi
clc
lret
cmp
push
pop
xor
out
incl
xor
ret
adc
in
and
ror
adcl
stos
push
fcompl
popa
in
aas
xor
enter
out
xor
mov
cmp
cld
pop
mov
sarb
movsb
lods
inc
push
iret
xchg
dec
lods
movsl
cmp
ja
xor
adc
mov
fcoml
sbb
fimuls
push
adcl
loope
add
test
mov
jne
dec
pop
es
stos
test
sub
cmp
mov
inc
mov
pop
aad
adc
jmp
push
mov
xchg
shlb
or
adc
cmp
push
mov
dec
aad
repnz
mov
dec
es
sbb
sbb
mov
dec
xlat
arpl
call
ljmp
add
add
popa
mov
cmp
std
cmp
push
xlat
cli
es
dec
pop
daa
cmp
inc
cwtl
out
cld
and
ljmp
mov
das
enter
push
sub
call
arpl
outsb
push
lcall
sti
pop
mov
dec
xor
sub
add
insb
adc
push
loopne
cmp
lock
iret
das
ja
das
divb
sbb
pop
lcall
inc
iret
nop
loop
jmp
fisttpll
sbb
jmp
inc
aam
mov
xchg
sub
push
int
xchg
xlat
pop
mov
mov
dec
test
arpl
inc
test
jnp
push
mov
loopne
jns
int3
mov
sbbb
add
sarl
mov
clc
sbb
xor
fcompl
mov
mov
pop
xchg
lret
hlt
std
ja
push
pop
push
fisubs
pusha
xor
cld
sahf
mov
stos
mov
stc
xor
mov
sti
hlt
adc
xchg
rol
jne
stc
sub
push
out
inc
imul
xchg
and
mov
mov
xchg
sbb
or
andb
int
push
push
jmp
inc
jge
daa
and
leave
push
mov
movsb
adc
mov
jne
lcall
xor
push
xorl
or
orb
dec
sub
scas
sbb
mov
ret
lahf
and
cs
call
push
stc
fsubl
outsb
aas
sbb
scas
cmc
or
je
xor
xor
mov
inc
ds
mov
sub
push
dec
divb
idivb
jp
mov
sub
sarl
or
inc
mov
addr16
xor
mov
ss
jo
cli
lret
jae
jl
push
arpl
shlb
aam
or
shlb
dec
ds
xchg
and
ljmp
das
out
mov
dec
mov
out
int3
repnz
xchg
shlb
mov
push
popf
ret
in
clc
mov
adc
ds
bnd
push
inc
es
orl
jae
and
push
test
xor
push
or
adc
dec
loop
sbb
mov
sub
lahf
mov
add
add
cmp
mov
jnp
and
dec
mov
fcompl
adc
cmp
sti
add
jno
mov
pusha
dec
shr
into
out
jbe
push
adc
add
lods
lods
rorl
cmp
xchg
pusha
insl
jle
movsl
in
pop
mov
cltd
mov
mov
xchg
inc
out
repnz
inc
in
lret
in
adc
test
clc
and
and
mov
sub
push
gs
scas
leave
popf
mov
and
dec
pop
xorl
sbb
cmp
rcrl
xchg
and
ffreep
lcall
and
jnp
orb
es
js
test
out
dec
stos
inc
lcall
mov
in
lcall
cld
pop
repnz
aas
out
lret
lahf
pop
push
cmp
xor
mov
pop
cwtl
push
pop
jp
adc
sbb
cwtl
dec
out
data16
les
sub
int3
sub
cmc
js
push
sbb
xor
insb
pop
ret
sbb
es
sbb
jns
xor
cmovns
pop
lock
in
ficoml
mov
mov
sub
aam
int3
inc
xchg
sub
leave
adc
mov
push
icebp
push
es
and
fs
xor
and
enter
bound
pop
out
push
into
in
out
bound
jecxz
jl
adcb
ja
test
adc
jo
cmp
lods
sub
or
jo
push
pop
sub
rcll
ds
es
and
jg
sbb
adc
das
dec
js
fistpll
cmp
and
jbe
ss
test
adc
cwtl
push
jp
xchg
int
add
add
insb
pop
inc
jg
clc
push
lret
ljmp
fsubs
dec
js
rcrl
add
xchg
unpckhps
lret
cmp
inc
lret
push
xchg
xchg
and
or
mov
ret
inc
ljmp
pop
in
jb
int
cmpl
testb
in
xchg
mov
cmp
repz
sahf
nop
pushf
mov
lods
stos
sub
dec
nop
xchg
call
fadds
fbstp
orb
dec
and
push
stc
add
test
push
sub
mov
aas
data16
inc
mov
test
icebp
jle
push
dec
sahf
mov
out
xchg
adc
into
repnz
adc
xor
pop
daa
cmp
adc
loop
pop
adc
fstl
push
inc
push
adc
incl
in
push
fs
sahf
add
jge
out
ret
outsb
ficompl
loop
inc
xchg
aam
stos
inc
inc
sahf
sti
fcomi
mov
xor
aam
xchg
mov
aam
lret
mov
cli
push
ljmp
jge
xor
pop
xchg
repnz
popf
mov
and
adc
in
add
push
stos
notl
sub
pop
xlat
popa
cmp
sub
sbb
adc
mov
xor
outsb
cmp
into
insl
mov
je
xchg
repz
jg
sub
mov
cmc
cwtl
or
outsl
and
testl
dec
lret
jno
daa
cltd
sti
imul
pushf
mov
mov
or
fsubl
lahf
add
pop
xor
jg
jle,pn
pop
sbb
jb
shll
or
sub
mov
xchg
jo
mov
jae
jmp
inc
jb
xchg
scas
push
jp
mov
fwait
adc
mov
add
add
and
aaa
sbb
cmp
cli
mov
loopne
rclb
lods
je
sub
add
pop
xchg
xchg
ljmp
dec
stc
sub
adc
push
jne
sbb
mov
mov
push
adc
mov
add
loopne
mov
lds
cmp
insb
and
cmpsb
mov
and
cld
pop
sub
mov
inc
lahf
inc
xchg
push
adcb
test
imul
inc
incb
sub
pop
ss
fcompl
xchg
or
jl
adc
lods
or
aad
jne
mov
insl
or
mov
add
pop
call
mov
xor
or
xchg
push
lock
push
test
jno
jg
mov
adc
xchg
xchg
fisttps
ja
push
test
sbb
gs
mov
aas
test
in
mov
mov
xchg
lods
ret
xchg
pusha
and
std
or
xchg
dec
mov
inc
xchg
dec
and
dec
xor
imul
add
pop
mov
cli
ljmp
mov
sbb
inc
xor
adc
xor
cmp
in
xchg
xchg
jo
push
mov
lret
loopne
out
clc
adc
xor
fs
flds
lcall
or
stos
and
lods
pop
and
test
cli
sbb
les
jb
nop
lret
lods
cltd
jnp
and
push
lds
ficoms
adc
call
shll
jmp
cmp
jmp
add
adc
add
dec
inc
jp
leave
in
ds
fldl
int
enter
mov
movsl
mov
testl
call
dec
add
sub
mov
push
cmp
pop
pop
xor
out
mov
sub
jo
test
push
mov
adc
mov
fnstcw
lods
xchg
in
pusha
test
sbb
fldcw
fs
and
push
and
push
fmuls
sbb
dec
scas
icebp
adc
movsb
fiadds
pop
loop
adcb
movsb
mov
inc
fdivs
xchg
adc
cmpsb
push
pushf
rolb
xchg
push
sub
add
mov
nopl
sub
popl
clc
cmp
inc
enter
fcmovne
popf
cmp
or
mov
inc
cmpsl
cmp
mov
mov
testb
bound
mov
xor
sti
clc
adc
jle
xchg
xchg
push
cld
movd
add
pop
xor
sarl
sbb
rep
sub
pop
hlt
push
xchg
nop
fidivs
lods
mov
mov
int3
stos
sub
fcoml
jb
and
push
adc
jl
icebp
xchg
into
adc
mov
ret
adc
aas
adc
loope
adc
mov
xor
or
call
movsb
xchg
adc
pop
mov
push
sbb
mov
push
and
lods
movsb
mov
xor
xor
sub
jo
jae
shr
cmc
adc
jae
scas
test
int
jb
arpl
jl
es
notb
xchg
cli
xor
pop
stos
fbstp
or
inc
fucomp
adc
jne
sub
jl
push
push
insl
dec
hlt
gs
into
mov
in
ret
add
nop
adc
outsb
mov
inc
and
inc
clc
out
adc
pop
out
mov
fisttps
aad
inc
aas
xor
movsb
jns
mov
push
stc
pop
mov
add
ret
mov
push
aas
xor
dec
push
push
clc
or
mov
ficompl
inc
pop
int3
popa
or
repnz
mov
jl
loope
pop
xor
push
out
pop
sbb
and
leave
lods
repnz
cmp
pop
mov
insb
call
aaa
mov
push
add
or
adc
shlb
mov
sti
xchg
sbb
push
out
imul
dec
mov
mov
arpl
xchg
cltd
int3
pop
rclb
or
xchg
cmp
rcrl
in
mov
jp
pop
jb
call
xchg
sbb
xchg
or
testb
stos
dec
or
inc
sbb
jl
inc
test
sub
jo
les
cs
insb
pop
out
mov
adcl
cmp
cmp
sbb
fsub
gs
jl
jno
cmc
xor
pop
mov
daa
mov
aaa
sbb
xor
pop
in
pop
or
int3
and
sub
loope
jle
clc
aaa
stos
xor
xchg
loope
jns
add
sub
push
mov
popf
inc
mov
and
pop
and
lock
cmpsb
pop
mov
icebp
cmp
jl
lods
cwtl
hlt
adc
mov
push
in
push
popl
push
lret
sbb
js
push
inc
cmpsb
xchg
es
ret
out
cmp
sbb
push
fwait
dec
mov
lea
fnstcw
jp
pop
xchg
aaa
cmp
mov
mov
outsl
inc
or
sub
test
lret
hlt
sar
push
add
cld
jp,pt
dec
pop
xchg
mov
inc
roll
call
or
daa
jp
sub
sub
inc
inc
lret
dec
into
xchg
dec
ljmp
lret
arpl
xchg
test
dec
icebp
xchg
les
enter
mov
mov
divb
inc
imul
ja
mov
add
jecxz
mov
cmpsb
ror
int3
out
stc
add
lea
inc
mov
jcxz
lcall
xor
or
jo
iret
and
loopne
push
sub
push
or
stos
add
xlat
dec
dec
test
add
mov
pop
push
ret
outsl
jl
bound
mov
lcall
push
xchg
loopne
in
popa
sub
pop
fistpl
stos
arpl
in
jnp
popa
mov
sbb
jl
xchg
add
mov
imul
sarb
pop
xchg
or
out
dec
es
mov
push
xchg
mov
das
xor
sub
repnz
ret
data16
inc
mov
mov
imul
mov
cmc
cmc
xchg
outsl
xor
sahf
clc
dec
mov
lahf
icebp
std
cmp
std
pop
inc
outsl
clc
repnz
sub
mov
int
arpl
jo
sbb
addr16
fwait
jne
dec
pop
test
sub
push
push
sub
lret
fistps
out
jp
popf
push
subl
div
iret
fimuls
test
jecxz
dec
jle
stos
cs
push
in
sarb
cmp
jne
mov
add
jnp
scas
add
xchg
dec
lret
mov
pop
test
push
lock
mov
cmp
addb
cmc
inc
push
jno
inc
jbe
and
jnp
ljmp
jmp
mov
icebp
popa
add
aaa
out
shll
cmc
outsb
sbb
xchg
scas
mov
mov
mov
movsb
js
int3
and
cmpsl
push
bound
add
add
lcall
and
lock
lret
mov
dec
sub
cmc
push
jg,pt
dec
mov
or
nop
mov
sub
and
cmpsl
mov
popa
push
cltd
xchg
dec
sbb
mov
pop
push
enter
or
testl
cmpsl
je
mov
dec
outsb
jo
xor
mov
inc
mov
in
cmp
ficompl
adc
into
adc
jg
xchg
mov
lret
inc
jle
inc
inc
test
sbb
shr
movsb
pop
push
mov
lods
test
inc
ds
int
cmp
xchg
add
fidivrl
jo
xchg
mov
or
jmp
jmp
xchg
pop
jae
mov
inc
sub
out
add
test
adc
xor
push
popa
add
jb
sub
das
fsub
bound
pop
mov
insb
mov
push
es
mov
push
mov
dec
mov
bound
push
inc
out
les
pop
xchg
mov
stc
lcall
insb
dec
push
mov
push
xchg
fldl
jb
fidivs
insb
call
xchg
inc
xor
cmp
popf
mov
adc
jge
and
repnz
aaa
cmp
jno
lret
sub
fsubs
bnd
das
dec
xor
aas
sub
pop
lret
push
imul
xchg
bound
in
das
xor
xchg
xorb
loope
adc
sub
mov
sbbl
mov
lods
mov
mov
hlt
nop
ret
adc
dec
cmpsl
loope
inc
cld
xchg
loop
scas
push
jno
sbb
icebp
pop
sub
mov
andl
js
and
cs
cs
xchg
adc
pop
in
dec
push
cltd
test
cmpb
mov
shr
hlt
adc
xor
pop
nop
dec
lods
add
pop
push
inc
jmp
rcl
adc
sub
vmovdqa
pop
je
jbe
push
out
jne
xlat
jns
sti
arpl
jns
inc
rclb
ret
fldl
pusha
insl
shl
sahf
sub
sarb
imul
cwtl
mov
sub
jne
push
push
cld
mov
gs
arpl
inc
cmpsl
daa
stos
int3
stos
ja
shrl
push
test
sbb
jae
pop
mov
jmp
push
shl
cmpsb
mov
inc
fcmove
sub
add
pop
xchg
roll
push
in
aad
add
mov
lcall
lahf
mov
xor
ret
fdivr
xor
inc
pusha
xor
or
shll
fiaddl
push
ja
je
adc
jg
add
cli
loop
stc
or
jo
mov
aad
jae
cmp
fmuls
rcrl
repz
mov
ret
or
or
cmp
sbbl
xchg
les
push
or
sub
dec
pop
inc
data16
xchg
aas
fstpl
mov
mov
jmp
add
jge
fdivs
pusha
adc
push
lock
test
mov
mov
dec
aaa
jmp
cmp
mov
dec
adc
bound
mov
repz
sbb
aaa
jo
jl
xor
pushf
idivl
stc
movsl
es
loopne
fsubl
mov
outsl
test
loope
sub
mov
fisttpll
xor
lahf
test
into
inc
and
int3
addb
ljmp
imul
add
add
lock
and
push
sub
nop
mov
loopne
imul
dec
inc
add
jns
into
or
insl
sub
xchg
daa
cwtl
pushf
test
inc
push
scas
xchg
cmp
mov
gs
in
fwait
ljmp
dec
add
push
data16
ljmp
adc
jmp
dec
cwtl
mov
lock
dec
outsl
dec
pop
sub
sub
ror
testl
sub
inc
add
jb
dec
dec
scas
gs
xor
repnz
pop
cmpsb
push
clc
cs
xchg
cltd
gs
sbb
repnz
fisubrl
dec
clc
jg
leave
andb
pushf
mov
jmp
cmp
orl
push
push
gs
lret
mov
dec
add
push
loopne
fcoms
and
jnp
int
pop
loope
mov
or
inc
and
add
cmpsl
inc
in
cltd
sub
outsl
xchg
ljmp
push
imul
fwait
or
je
je
pop
jno
imulb
or
and
inc
loop
pop
jns
shll
mov
stc
dec
popa
insb
adc
and
push
jmp
stc
fistpll
loope
inc
and
in
lea
mov
addr16
icebp
mov
and
or
mov
mov
cmp
imul
cmp
mov
push
jp
or
sub
out
add
push
jbe
push
jl
loop
xchg
adc
andb
mov
imul
daa
clc
cmp
mov
add
cmp
mov
fucom
add
mov
pop
cmp
daa
adc
jnp
rol
push
mov
or
pop
or
lcall
jle
mov
add
out
hlt
fyl2xp1
movsb
xor
int3
mov
jae
xchg
pop
mov
jge
hlt
mov
pop
inc
jbe
push
mov
mov
mov
xor
ja
or
and
fcomps
lret
mov
test
inc
lods
push
gs
mov
aam
and
stc
das
ja
xchg
inc
mov
aad
sub
add
pop
notl
or
fwait
lods
jle
cld
inc
arpl
in
outsb
loop
je
xchg
add
sbb
fsubrl
fs
push
fbstp
mov
xor
int
test
scas
jl
ret
sub
int3
pop
popa
pop
jae
xchg
add
cmp
cmp
mov
dec
imul
pop
shrb
dec
test
mov
xor
cmp
inc
js
sarl
or
mov
scas
or
xchg
ret
faddl
mov
xorb
pop
and
mov
xlat
adc
inc
aaa
mov
cltd
add
dec
xchg
sbb
jo
lods
pop
mov
mov
add
or
scas
adc
xchg
add
pop
xchg
lds
mov
or
cld
popa
int
push
mov
dec
movsl
jge
xchg
jo
dec
and
mov
add
mov
sbb
push
pop
push
jl
loopne
dec
lahf
xchg
mov
dec
sbb
out
dec
fwait
cmp
shl
mov
mov
dec
imul
mov
add
mov
push
cmp
fs
lahf
notl
add
ret
mov
sub
sbb
das
out
jb
pop
mov
cmp
cmc
fisubrs
mov
inc
mov
ljmp
add
jae
lret
jbe
cmp
mov
add
int
sbb
into
fimull
ja
cli
hlt
push
push
dec
and
lea
add
mov
and
or
ds
jge
mov
mov
stc
dec
mov
or
mov
xchg
add
mov
adc
lcall
mov
into
bound
mov
fcomps
pop
out
pop
and
lods
pop
cmp
mov
xchg
jmp
ds
adc
inc
sahf
test
aad
lret
push
inc
ljmp
mov
nop
in
clc
roll
mov
icebp
cmpsb
ss
cmpsl
mov
push
mov
jno
xchg
call
icebp
and
pop
int3
movsb
and
push
or
jp
push
loope
push
pop
in
pusha
inc
cli
cld
inc
jb
pop
into
and
hlt
jb
xor
mov
call
in
add
dec
push
rclb
pushl
iret
mov
fisttps
adc
adc
popa
movsl
adc
and
sub
test
scas
push
xor
or
cmp
mov
repz
test
lea
dec
jne
jge
lock
mov
sbb
jmp
lods
test
testb
inc
daa
jae
gs
jae
push
shrd
mov
stos
dec
sbb
stos
in
push
pop
jg
sub
inc
push
imul
mov
nop
inc
out
shl
cmp
sbb
lods
cmp
mov
mov
sbb
push
js
scas
ljmp
xor
ss
add
cmp
jge
stos
sub
mov
cltd
jae
call
leave
dec
mov
dec
cmp
cli
cli
jae
add
fisubrs
or
cmp
push
push
sbb
inc
xchg
hlt
repnz
xchg
ja
in
dec
clc
cmp
aas
addr16
loopne
sahf
xor
and
not
jmp
xlat
repz
test
xchg
fs
cmc
daa
push
add
icebp
cli
xchg
sbb
pop
daa
push
xorl
mov
xchg
mov
xlat
pop
leave
popf
adc
mov
xchg
xchg
xor
cmc
shrl
jge
mov
outsb
pop
push
aad
jmp
clc
int
mov
jmp
fwait
aaa
jg
mov
leave
pop
mov
push
xchg
enter
jae
mov
enter
hlt
in
sub
cmpsb
pop
cmc
repz
mov
sbb
cli
test
cmp
xchg
in
lods
jns
cmp
xlat
aam
arpl
push
cmpsb
les
call
insb
ror
mov
in
cmp
xacquire
push
insl
xchg
mov
mov
pop
popa
inc
rol
scas
js
push
dec
and
dec
imul
daa
jmp
and
jl
stos
dec
lds
sbb
jecxz
add
outsb
mov
adc
xor
std
cmp
sub
add
pop
adc
mov
cwtl
ss
pop
adcb
in
ret
or
cld
fwait
mov
loope
push
push
cld
mov
adcb
push
or
rclb
sub
scas
dec
jp
rcl
add
into
push
mov
pusha
mov
xor
xchg
cmp
pop
push
dec
jae
dec
pop
cltd
ss
test
mov
lcall
in
jle
inc
mov
adc
inc
sub
xchg
data16
stos
fistl
xchg
aad
shr
mov
cmp
pop
jg
imul
cli
xchg
cmp
test
xlat
and
mov
imul
inc
push
outsb
xor
clc
mov
sbb
fwait
mov
dec
jnp
add
add
xchg
out
ret
xor
jle
push
pop
xchg
pop
sbb
icebp
cmpsb
arpl
add
rcrl
mov
adc
cmp
movsb
jecxz
mov
jbe
push
movsl
mov
lcall
dec
pusha
out
cmp
and
dec
and
and
adc
xchg
jg
rol
adc
cltd
xchg
mov
mov
push
das
hlt
xchg
jb
scas
int
cmp
sbb
adc
lods
cmp
call
in
jle
mov
inc
jg
rcll
adcl
pop
and
lcall
push
fldenv
mov
pop
jge
adc
pop
or
shrb
mov
ret
lcall
cmp
lods
leave
repz
sub
bound
and
testl
das
xor
sarb
xor
mov
sahf
out
adc
das
push
cmp
shrl
into
sub
stos
pop
push
in
mov
jae
adc
xchg
idivl
jo
mov
sub
inc
sbb
cmp
inc
ficomps
add
cmp
jmp
adc
popf
sub
shlb
dec
dec
dec
fbld
add
sbb
push
faddp
fstl
xor
jl
pop
lea
mov
xor
cltd
sbb
xchg
sarl
dec
mov
sbb
out
and
mov
dec
popf
ljmp
adc
inc
cmp
xchg
ficomps
popf
sub
stc
lahf
lret
js
and
jno
and
test
daa
cmpsl
jb
test
repnz
xor
mov
push
and
aad
jmp
mov
sbb
pop
mov
pop
or
inc
push
xchg
cwtl
insl
in
loopne
jne
mov
xchg
out
daa
add
ss
sub
xor
nop
outsl
pop
mov
mov
pop
dec
cli
pop
mov
xchg
push
mov
test
icebp
aaa
and
pusha
adc
outsb
fs
or
rcl
xlat
xchg
add
and
sbb
or
mov
fs
cld
mov
test
loop
jns
mov
sub
sbb
lahf
xor
mov
mov
sub
or
daa
mov
loope
jg
stc
sti
cmp
mov
sbb
andb
fistps
xor
cmp
and
mov
das
push
add
pop
pop
add
push
cmpsb
in
cmp
cmp
sbb
jl
xlat
aaa
ljmp
lds
jbe
std
inc
inc
sbb
mov
adc
jbe
rclb
aas
ja
or
and
cwtl
xchg
gs
mov
hlt
les
cli
xchg
inc
jge
aam
or
idivb
pushf
shrb
xor
into
lea
test
inc
sbb
das
mov
adc
out
push
inc
stos
shrl
icebp
mov
sbb
inc
fistpll
mov
lahf
insl
mov
sbb
add
int3
mov
push
fmuls
sub
and
mov
pop
insb
shll
popf
pop
enter
xchg
int
sbb
std
imul
mov
pop
jb
shrb
sub
repz
data16
push
adc
push
repz
aas
stos
shlb
push
jb
cmp
roll
popf
cltd
add
aad
or
push
mov
mov
es
rcrb
lcall
jge
jge
dec
jnp
or
pop
inc
sbb
cmc
sbb
scas
cld
es
sbb
data16
inc
cmp
dec
pop
xchg
fs
rorl
or
jns
testb
add
sub
fsub
and
mov
jnp
jne
pop
cmp
outsl
pop
lret
sarl
jno
xor
sub
mov
cli
adc
jmp
scas
gs
sbb
mov
xlat
push
mov
out
sbb
sbb
rorl
sub
leave
shlb
sarb
lds
dec
mov
cmp
test
jns
jle
pop
push
mov
sub
fnstenv
xchg
xor
popf
cmp
iret
sti
cmp
std
pushf
cld
leave
pop
cmp
cltd
mov
pop
push
hlt
test
fdivrs
add
mov
jp
adc
in
adc
out
mov
xchg
xchg
pop
add
sub
mov
pop
rcr
adc
mov
adc
lods
lds
movsl
mov
test
dec
push
mov
pop
inc
mov
cmp
lcall
sbb
mov
dec
push
add
mov
xorb
out
xchg
jae
cld
gs
xor
push
movsl
dec
mov
sarl
cmp
xchg
std
fs
add
ret
in
aaa
jmp
inc
adc
andnps
push
cs
outsb
mov
mov
mov
mov
std
or
sarb
and
rcr
pop
imul
dec
in
sub
dec
addr16
shl
sub
out
cld
inc
mov
arpl
imul
gs
ret
cld
mov
jo
inc
lods
jp
rolb
jae
out
dec
loopne
aaa
cmpsl
mov
lcall
enter
mov
jle
mov
roll
add
add
sub
bsr
cld
je
or
sub
push
mov
mov
push
inc
in
jecxz
insl
xorb
ja
pushf
pop
add
sub
mov
shll
in
cmp
sahf
cwtl
insb
fidivrs
mov
dec
gs
repnz
repnz
sbb
jno
sub
arpl
sbb
and
jns
cmp
jg
cmp
je
jnp
roll
pop
cmpsb
sarl
mov
push
aam
push
dec
cltd
rclb
roll
xor
inc
arpl
add
jbe
out
fdivrp
aam
outsb
aam
ja
popa
pop
rcl
lds
nop
gs
cltd
dec
inc
in
dec
lahf
bound
xchg
push
in
push
push
xor
ss
mov
lret
sub
dec
mov
out
sub
mov
mov
loopne
inc
imul
hlt
mov
lea
xor
inc
xor
sub
test
xorb
jno
xor
inc
in
repz
push
loope
push
lret
dec
sub
ljmp
xchg
xlat
mov
mov
jge
jg
add
add
pushf
lods
in
add
jecxz
les
iret
mov
push
fyl2xp1
mov
cwtl
and
in
mov
sarl
adc
pop
push
jno
in
loop
mov
in
add
lock
fsin
cmp
out
shll
jnp
pop
push
insb
pop
and
scas
pop
pop
cmp
or
add
inc
popa
adc
sub
insl
push
fdivs
pushf
inc
aaa
lret
xchg
vphadduwq
and
cmpsl
in
mov
add
mov
pop
mov
sti
xor
jp
jp
mov
push
add
popa
mov
dec
push
adc
xor
xchg
lods
das
test
fisttpll
lods
add
mov
jl
push
sbb
and
sub
stos
fsubp
das
push
fdivr
lods
fnstcw
data16
out
in
mov
dec
pop
cmp
jg
push
inc
dec
mov
cmp
push
adc
cmp
push
aas
cltd
fcmovnu
push
mov
mov
and
pushf
pop
sbb
inc
hlt
adc
xor
add
mov
mov
jo
insl
mov
add
loopne
out
ror
jmp
mov
push
add
mov
add
sub
mov
lea
icebp
add
stc
aad
mov
test
rolb
sub
xlat
xor
arpl
jle
and
dec
push
ss
xor
ss
fs
jmp
out
cld
push
sub
inc
fsubrs
aam
jmp
jo
cmpsb
cmpsb
in
sub
pop
mov
bnd
xchg
aas
mov
int
adc
adc
jl
adc
mov
aad
jmp
xlat
sub
movsl
in
mov
push
shll
mov
lods
add
mov
push
cwtl
mov
int3
rclb
lods
jns
mov
push
mov
xor
mov
dec
ficompl
daa
mov
dec
mov
scas
outsl
ljmp
mov
adc
or
ljmp
inc
cmp
xchg
jb
roll
mov
cwtl
adcb
cmp
mov
aad
cmp
dec
and
jbe
push
adc
dec
fs
mov
mov
mov
out
bound
repnz
or
sub
jnp
shrl
inc
sub
jle
xor
mov
add
pushf
pop
sahf
push
imul
cmp
fs
insb
lahf
mov
bound
inc
arpl
rol
xor
aas
cmc
repnz
aam
mov
or
or
mov
cmp
jnp
adc
imul
test
and
add
sbbl
scas
inc
test
sbb
jo
inc
or
sub
push
fs
mov
fists
or
jo
add
jge
mov
mov
mov
negl
jle
mov
cmpsb
lods
mov
push
subl
push
xchg
pushf
mov
xorb
sub
mov
in
dec
pop
in
and
jne
aaa
sub
andb
lods
jge
add
out
sbb
out
inc
lods
cmp
cmp
sbb
mov
mov
subl
cwtl
push
push
and
jge
sahf
push
inc
push
or
test
repz
lock
adcb
in
push
std
stos
out
push
xchg
repz
inc
push
xor
inc
lret
cmp
and
dec
out
sbb
xor
ds
pop
mov
sti
stos
movb
jb
pop
push
mov
js
mov
jno
add
push
mov
inc
sub
lret
popf
add
jnp
mov
outsb
xor
enter
sbb
repnz
cltd
jns
xor
jg
lret
sub
sarb
adc
add
pop
dec
ds
jne
ja
lods
fdivl
mov
cmp
and
xchg
mov
and
jne
insb
mov
frstor
push
push
out
mov
and
sbb
call
shlb
mov
xor
ret
add
jo
pop
int
sahf
push
clc
je
xchg
aaa
mov
mov
sub
fwait
cmp
sbbb
loop
mov
add
add
icebp
or
sarb
in
imul
stos
push
pop
mov
pushf
and
jp
xchg
insl
loopne
dec
push
and
add
push
xchg
shl
imul
jge
and
fidivrs
rcr
test
test
jecxz
enter
cmpsb
mov
pop
cmp
sub
addps
rorl
mov
mov
push
test
loopne
jge
pop
push
test
pop
cmp
cs
mov
mov
leave
jo
jmp
imul
sbb
push
data16
loop
inc
inc
jo
outsb
jl
hlt
iret
pop
sub
xlat
xor
add
mov
xchg
scas
arpl
lock
dec
pop
aas
lock
insl
adc
push
shr
push
jb
ret
shlb
mov
dec
int
xchg
repnz
addr16
jle
sbb
sub
cli
in
push
push
lahf
inc
mov
imul
pop
insl
mov
rcrb
pusha
scas
sbb
push
xor
mov
movsb
ja
adc
pop
test
xchg
mov
xchg
repnz
and
and
ret
xor
dec
sbb
fdiv
stos
adc
lods
cltd
xchg
ret
out
mov
ret
push
xor
jo
push
shlb
push
not
ret
pusha
jno
test
rcll
add
or
imul
adc
movsl
and
ljmp
sbb
je
das
sbb
daa
mov
in
insb
jne
xchg
mov
dec
mov
and
add
das
xchg
sti
fidivs
sbb
aam
int3
ja
cmpl
inc
add
pop
out
sbb
lcall
add
add
pop
pop
ds
nop
mov
daa
lcall
add
cmpsl
and
bound
ja
sub
sti
out
add
jmp
and
in
and
mov
cmp
add
sub
pop
ljmp
dec
stc
jg
inc
sbb
inc
xchg
ret
inc
mov
push
xchg
inc
rcl
push
and
sbb
sahf
or
rclb
fcoml
push
adc
push
cmp
fnstsw
adc
push
es
ret
xor
add
fmulp
les
shrb
cltd
ds
mov
pusha
inc
test
cmp
add
lret
sbb
imul
sti
inc
adc
lahf
jp
scas
outsl
mov
mov
cmp
add
push
sub
or
pop
jno
das
push
data16
icebp
push
enter
rcr
subb
mov
xor
xchg
xchg
or
xor
add
mov
push
xor
insl
shrb
jo
push
xor
movsb
push
add
adc
push
cli
cmp
daa
ljmp
push
sbb
aas
mov
cli
aaa
ds
dec
adc
mov
jmp
js
jno
jg
adc
repz
in
mov
xchg
lock
inc
cmp
and
orl
jg
inc
clc
divb
or
sub
mov
sbb
ljmp
shrl
mov
mov
ficoms
arpl
push
mov
mov
add
in
fimuls
jb
and
je
jae,pt
cwtl
fwait
dec
fcmove
cmc
repz
rorb
enter
and
loop
icebp
jle
mov
or
jl
popl
sbb
jne
stos
push
sbb
sub
add
add
jg
into
pusha
in
jmp
ret
fldcw
pop
add
leave
jbe
or
jo
dec
mov
dec
mov
and
stos
cmp
adc
out
add
aad
shll
nop
hlt
and
dec
or
iret
adc
mov
push
or
je
jle
pop
cmp
mov
lock
jl
mov
in
outsl
outsb
adc
xchg
sbb
loope
ror
push
inc
cmp
in
inc
test
out
mov
jne
fimuls
inc
incl
lahf
repz
scas
fistpll
pop
call
out
dec
dec
ds
data16
pop
out
ss
mov
mov
mov
ret
fnstsw
loope
or
sbb
stos
mov
icebp
jnp
jo
cld
add
fsubp
mov
xchg
adc
inc
mov
push
dec
test
mov
cld
or
sub
push
jae
cmc
mov
fstl
bnd
lock
enter
adc
lcall
pop
dec
or
cld
push
mov
faddl
ja
sub
cltd
mov
and
xor
xchg
es
js
pop
mov
sub
int
or
or
jbe
sub
int3
sub
data16
mov
mov
ljmp
jns
mov
adc
push
adc
inc
enter
sub
nop
mov
sti
arpl
cmp
leave
cmp
sub
jb
fcmovb
xor
sub
add
pop
adc
ss
das
adc
mov
repz
xchg
mov
jnp
pusha
lret
pop
mov
jne
outsl
pop
repnz
sbb
daa
pushl
sbbl
pop
cmp
mov
pushl
testl
das
rcrb
mov
icebp
sbb
jp
clts
enter
sub
or
outsl
int3
sti
sub
loop
pop
popf
fiadds
xor
lahf
out
arpl
fucomi
dec
aad
xchg
adc
xchg
movsl
push
push
sarb
test
dec
xchg
imul
repnz
outsl
daa
or
cmp
pushf
jne
daa
pop
mov
pop
mov
aas
or
mov
cmp
sbb
add
out
js
stos
movsl
pop
fdivrs
xchg
inc
ret
sub
cld
int
sahf
out
xchg
mov
repnz
or
push
inc
add
jle
mov
xor
int
inc
incb
sbb
mov
sbb
test
cmp
jg
loope
pop
jge
cmp
sbb
insl
loope
cli
das
xchg
jno
in
aas
xchg
cmpsl
pop
hlt
in
mov
jno
mov
outsw
jmp
cmp
mov
divl
bound
mov
iret
fcom
stc
mov
cmpsb
cmp
mov
xchg
cld
cmpb
nop
sarb
mov
pop
adcl
push
pop
inc
arpl
int
leave
in
cmpsl
add
addr16
mov
inc
mov
pop
ss
push
xor
add
xchg
repz
aad
jns
loopne
ja
xor
sub
push
dec
dec
jb
jnp
xchg
dec
pop
mov
sbb
and
repnz
push
in
roll
mov
jl
xchg
test
push
mov
scas
cmp
xor
push
shl
lret
in
push
nop
jo
nop
mov
pop
mov
lods
das
call
lahf
arpl
js
in
or
inc
mov
scas
fidivl
xorl
jmp
mov
adc
jecxz
add
adc
mov
ficoms
cmpsl
push
test
pop
lret
int3
cmp
repz
or
lea
or
jne
insb
test
aad
mov
xchg
jl
lods
mov
in
aas
test
cmp
stos
leave
lods
jmp
aad
in
int
cwtl
mov
xchg
bound
xchg
fnstsw
enter
sub
gs
arpl
mov
fwait
or
push
push
stos
xlat
mov
repnz
mov
test
aaa
insb
or
mov
adc
stos
outsl
sarl
inc
std
fwait
sarl
aam
movsl
loop
cmpsl
inc
repnz
je
add
data16
movsl
dec
add
cld
cmp
shlb
andl
aad
cmp
int
push
icebp
jnp
enter
and
cmp
sub
das
xchg
mov
out
cmp
call
jae
ljmp
dec
sub
movsl
push
add
mov
sbb
xor
cmp
adc
aam
inc
int
int3
pop
in
or
lret
or
ficoml
pushf
fstpl
mov
jl
sarb
push
jne
pop
xor
cmp
and
iret
xchg
push
sbb
addr16
mov
cmpsb
aas
shrl
iret
sub
dec
mov
test
lret
mov
cmc
std
jecxz
repnz
sbb
inc
xor
pop
mov
out
ret
jbe
mov
pop
mov
jmp
leave
in
inc
outsb
adc
cmp
outsl
fstpl
jb
negl
int3
or
aaa
outsb
aad
out
int
push
popf
aam
add
add
sbb
adc
xchg
outsl
jnp
or
mov
cmp
or
xchg
outsb
daa
popa
mov
and
std
cld
cli
mov
mov
cld
pop
inc
pop
inc
adc
xor
push
push
or
mov
lods
mov
in
fdivrl
jle
jnp
ds
push
hlt
jne
xchg
adc
nop
aam
in
dec
icebp
test
sti
jnp
das
pop
neg
pushf
mov
sbbl
mov
cltd
push
push
add
mov
or
push
jge
dec
and
into
jl
les
lea
lahf
mov
add
lea
addr16
jecxz
je
gs
cs
jo
push
mov
mov
push
jne
push
sbb
pushf
in
mov
cmp
push
outsl
xor
ljmp
cmp
cmpsl
adc
cltd
push
pop
repz
sub
ret
out
stos
rcll
roll
ds
dec
ret
pop
fs
out
shr
pop
mov
or
movsl
sahf
add
stc
insb
inc
cmp
incb
fildll
out
mov
movsl
cmp
lcall
lcall
pop
lods
jae
out
mov
push
fcmovb
dec
cltd
mov
pop
cld
addr16
push
mov
js
and
push
cmpl
cmc
push
sub
out
ja
test
pop
fisubs
out
push
negb
lods
imul
mov
mov
mov
rcll
jmp
lret
or
cmp
out
test
or
xchg
xor
jg
push
sub
inc
or
je
and
mov
std
es
insb
sub
in
mov
and
push
repnz
out
mov
les
add
add
mov
mov
clc
mov
lods
sti
pushf
sbb
cmp
xchg
xor
outsl
clc
adc
mov
jmp
subb
cmpsl
sti
sarb
or
jo
leave
push
repnz
inc
add
mov
add
pop
loope
ffreep
sub
fs
dec
sub
cmp
lock
sbb
shr
orl
cmpsl
mov
movsl
popl
stos
xchg
sahf
loope
xor
cmp
mov
in
das
cmp
add
repnz
jbe
inc
inc
push
ja
jmp
jno
xchg
leave
test
lea
lods
inc
xor
mov
mov
push
rorb
mov
adc
mov
jp
and
int
nop
gs
lds
ret
push
stc
mov
nop
jg
ficoml
push
push
pop
stos
dec
daa
dec
int3
xchg
mov
movsb
inc
inc
cli
stos
fsubs
jne
mov
push
cmp
inc
popa
scas
pop
or
adc
and
mov
and
adc
cmp
push
ss
inc
adc
pop
icebp
lock
in
push
popf
adc
dec
jb
ja,pt
or
roll
add
notb
xchg
scas
aas
or
test
das
nop
inc
jmp
mov
mov
ja
push
and
add
xchg
dec
sub
int3
push
sahf
or
mov
mov
mov
popf
mov
aad
insl
outsl
pop
mov
adc
into
xlat
xchg
and
jmp
mov
sbb
stc
push
mov
inc
pop
inc
repnz
test
outsl
sub
mov
out
mov
mov
pop
mov
mov
into
sarb
jle
push
pop
inc
sbb
mov
shlb
inc
scas
pop
add
sbb
dec
idiv
sahf
lods
inc
aas
mov
ret
mov
jo
jmp
xor
imul
xchg
lock
lret
jns
addl
ja
out
sti
push
push
in
xor
xchg
fwait
in
push
jg
dec
das
fadd
mov
inc
out
lahf
mov
aaa
sub
add
ret
add
repz
push
push
jle
fildll
in
shlb
sub
pop
icebp
pushw
or
pop
cltd
loop
adc
or
mov
or
in
mov
mov
aas
or
mov
adc
into
aam
jmp
jg
dec
aaa
aaa
sub
mov
fcom
fwait
aad
lods
ljmp
mov
mov
mov
imul
fisubs
pop
loop
xor
push
mov
in
inc
jne
mov
mov
lcall
scas
xchg
outsb
fdivs
ss
cld
popa
lret
shlb
xor
mov
push
mov
and
and
iret
js
inc
push
dec
mov
cmp
scas
xor
mov
xchg
data16
mov
cmp
ja
lahf
inc
inc
insl
ret
jp
jae
push
iret
dec
inc
rclb
ljmp
popf
mov
add
mov
in
mov
dec
mov
call
jmp
mov
jle
sub
jge
dec
leave
mov
jae
lods
inc
loopne
je
pop
call
dec
add
and
and
rcrl
xor
xor
scas
pushf
dec
mov
or
out
nop
lds
dec
dec
mov
mov
aad
icebp
pop
adcb
ljmp
push
sub
icebp
pop
mov
lahf
fsubrs
jnp
lds
jno
mov
xchg
add
add
jo
ljmp
fdivrl
xchg
out
cmpsl
ljmp
push
mov
xchg
and
insb
pop
enter
xor
xchg
mov
arpl
dec
nop
inc
fdivl
test
adc
stos
pop
dec
mov
jae
pop
lcall
pop
pusha
mov
shlb
ret
cmp
mov
dec
pop
add
jno
sbb
ljmp
sarl
popf
aaa
stos
or
mov
into
repnz
mov
movsl
xor
and
dec
adc
inc
fwait
jbe
leave
cwtl
hlt
cmp
mov
test
ljmp
pop
jg
add
loopne
sbb
loop
sub
cmpsl
aam
pop
push
outsl
paddsb
cmpsb
xor
cmpl
jmp
push
mov
mov
dec
cmp
fucomip
loope
push
or
cld
push
lods
jp
jmp
or
jmp
les
arpl
jno
nop
jae
jmp
repnz
mov
cli
mov
cmp
clc
aaa
push
xor
push
sub
andl
adc
jl
xor
repnz
mov
add
mov
mov
jecxz
mov
xchg
test
xchg
mov
jg
push
arpl
out
xor
jno
ds
pop
mov
enter
inc
add
mov
cmp
cmp
ret
inc
jns
add
xchg
push
incb
inc
popf
xchg
mov
push
nop
imul
jecxz
and
xor
inc
fsub
fstl
sbb
xor
xchg
and
pop
nop
jns
jp
jp
std
movb
pushl
jns
push
sub
dec
lods
jp
adc
xorl
pop
leave
jle
fstpl
or
mov
add
inc
adc
js
xor
xlat
inc
sbb
pcmpeqd
or
push
enter
imul
shrl
cmp
cmp
hlt
int3
xor
lods
jb
pop
lret
aas
rorl
leave
sbb
xor
adc
sub
xor
nop
cltd
and
jnp
mov
fimull
inc
fimull
lock
mov
xchg
push
hlt
cmpsb
adc
or
rcrb
in
stos
cmp
inc
fbstp
push
rcrb
popf
mov
push
aas
enter
hlt
cmp
sbb
pop
mov
and
sbb
imul
dec
clc
mov
or
rcr
xchg
shlb
incb
pop
addb
xchg
jo
pop
cmpsb
stos
icebp
lds
or
pop
mov
test
xor
or
cmp
mov
decl
lahf
adc
pop
lret
push
xor
push
fs
fs
popf
and
mov
mov
arpl
add
add
int
lret
in
pop
fbld
sbb
in
xorb
or
fistpll
and
cmp
xor
xchg
sbb
pop
loopne
add
or
xor
pop
addr16
cmp
out
push
into
mov
pop
jo
inc
mov
push
push
jnp
sub
lahf
mov
stos
sbb
inc
or
xor
aaa
lods
jl
mov
outsl
push
inc
mov
bound
mov
stos
insl
sub
inc
repz
jmp
popf
cmp
testl
pop
pushf
inc
hlt
out
push
jne
psrlq
les
xchg
xchg
push
dec
xor
daa
dec
pop
aas
mov
mov
fnsave
movsb
pop
mov
mov
in
mov
je
or
xor
add
loopne
xchg
jo
push
cmp
fidivrs
sarl
pop
or
pop
sub
pop
inc
xchg
mov
cmc
fwait
push
mov
cmpsb
notb
frstor
mov
mov
int3
and
dec
out
xchg
inc
jge
dec
cmp
jno
inc
ss
data16
aas
sub
push
mov
lods
add
inc
lret
call
jl
xor
mov
lcall
inc
movsb
mov
loopne
and
mov
push
jo
xchg
lahf
or
push
cmp
les
movsb
push
mov
test
dec
inc
and
mov
das
lods
insb
xchg
cwtl
shrl
std
sub
cld
pop
xchg
mov
inc
xor
or
mov
mov
repnz
fistpll
pop
or
je
xchg
scas
dec
dec
fcomps
shr
call
mov
adc
cmp
push
je
imul
cmpsb
iret
inc
pusha
inc
ret
xor
jnp
pushf
push
cwtl
mov
xchg
push
mov
dec
ror
push
mov
imul
or
mov
loop
jne
lret
jae
or
arpl
fucompp
fnstsw
mov
inc
xor
dec
push
and
fwait
ds
push
sbbb
jbe
jnp
sub
add
dec
dec
add
cld
ficoml
fmull
out
inc
xor
xchg
enter
xor
cmp
mov
and
sub
xchg
decb
cs
xchg
pop
push
push
and
rorl
cmp
in
add
fs
dec
lods
lahf
clc
je
cmp
ret
je
in
movsl
lret
fistps
test
test
lds
scas
enter
mov
cmpsb
cmp
jl
inc
sbb
jp
leave
addb
add
jle
sub
jg
sub
add
call
nop
bound
mov
test
das
or
xlat
loop
in
and
movl
add
xor
mov
das
cld
add
stos
adc
adc
xchg
push
es
into
dec
test
shl
cmp
mov
inc
pop
aam
inc
mov
push
inc
mov
aad
imul
cli
mov
mov
imul
ja
mov
jns
loopne
dec
and
mov
fwait
jecxz
sub
mov
or
adc
in
lretw
movsb
sub
sbb
pop
mov
sbb
shrl
out
dec
add
push
call
rcrl
addr16
call
or
or
and
scas
fidivrs
stos
idivl
lds
dec
xorl
pop
ja
ret
ret
outsl
cltd
or
pusha
mov
cmp
lods
lods
enter
add
add
pop
push
push
js
inc
jbe
bound
or
enter
mov
out
mov
in
shlb
xlat
and
inc
fnsave
xor
idivl
pop
icebp
cmpl
and
insb
xor
or
mov
fdivrs
ficoml
sbb
add
mov
mov
xchg
cs
pop
sub
push
jmp
shlb
xchg
jmp
lods
ljmp
push
dec
cmp
push
insb
pushf
mov
idiv
inc
sbb
jne
lods
pusha
mov
mov
fistpll
loopne
nop
sbb
lods
pop
or
mov
fwait
mov
fbstp
outsb
xchg
sub
loopne
cmp
cwtl
jecxz
out
pop
xor
repnz
insb
lret
dec
les
add
mov
sahf
adc
push
cmpsb
or
mov
repnz
rorl
sub
arpl
data16
jnp
jae
movb
das
mov
adc
jne
cli
fucomp
imul
mov
sbb
fsubs
and
xchg
ljmp
mov
out
cmp
cmpsb
jecxz
push
test
pop
loope
mov
in
and
test
popf
mov
scas
icebp
mov
loopne
daa
dec
jo
xchg
hlt
mov
adc
inc
push
movsl
dec
jecxz
mov
mov
mov
pop
cmpsb
push
hlt
inc
xor
cmp
test
data16
xchg
lods
or
aaa
jnp
xor
mov
or
or
or
push
push
iret
in
jb
jb
pop
push
mov
add
ljmp
mov
sub
sub
lock
cmpsl
iret
sub
fcmovnbe
jle
jns
or
es
pop
clc
cmp
aad
jb
aam
cli
adc
sub
dec
xor
sbb
or
lret
ret
mov
mov
frstor
mov
fstps
pop
in
mov
xor
mov
and
push
xchg
dec
loope
popf
stos
push
mov
int
mov
cmp
lcall
sub
mov
dec
xchg
into
arpl
aad
sbb
pop
repz
scas
xor
ret
orl
cltd
adc
mov
bound
mov
adc
jge
push
mov
jl
in
pushf
lods
adcb
popf
lea
repnz
push
movsb
mov
mov
xchg
rdmsr
popa
into
xchg
jge
jl
adc
add
add
mov
cmp
xchg
outsb
movsl
fisttpll
dec
movsl
std
mov
mov
popf
mov
repnz
push
movsl
mov
mov
xchg
rdmsr
popa
into
xchg
jge
mov
adc
push
sbb
popa
mov
jns
dec
push
popa
outsb
push
fnstsw
dec
mov
dec
push
std
jns
dec
xchg
popa
cs
popf
jns
dec
repnz
push
push
mov
insl
out
lods
pop
and
into
pop
jge
mov
adc
imul
inc
divb
pop
outsb
imul
pop
dec
imul
pop
imul
inc
jbe
rcrb
mov
xor
push
inc
mov
adc
sbb
jge
push
mov
dec
idivb
push
outsb
data16
jge
push
dec
data16
dec
ss
push
cs
dec
push
jge
push
push
mov
jge
push
out
mov
adc
lcall
outsb
cli
mov
outsb
fidivrl
push
outsb
cmp
outsb
sbb
pop
outsb
jp
push
adc
jle
pop
mov
sahf
imul
mov
mov
cli
dec
aad
repnz
cmc
loope
and
adc
sahf
sbb
loope
and
push
loope
and
jne
push
sub
lea
push
mov
xchg
sbb
mov
repnz
mov
rcrb
push
mov
xor
mov
adc
pop
mov
jb
jle
pop
jno
fstl
sahf
insl
mov
push
mov
xlat
xor
fmulp
cli
sbb
test
sbb
push
jmp
insb
jmp
insb
jp
push
pushl
jle
pop
imul
adc
cmp
mul
jne
scas
std
sbb
in
enter
shlb
lcall
xchg
in
enter
shlb
cmc
enter
rclb
xchg
enter
addr16
lret
int
cmp
mov
into
push
test
ficoms
out
lods
into
jg
scas
popf
test
add
push
inc
enter
cmp
xchg
and
add
cs
mov
jl
std
jp
xor
fmull
outsl
repnz
push
inc
outsl
imul
push
jns
pushf
cwtl
mov
sti
nop
pop
sub
sahf
fmulp
cwtl
adc
idivl
mov
xor
lret
push
xchg
movsl
push
jb
pop
xor
mov
push
repnz
mov
ja
rclb
pop
in
movsb
cltd
imul
sahf
sbb
push
out
daa
jne
push
push
inc
mov
mov
idiv
iret
xor
push
mov
mov
adc
push
mov
leave
or
mov
sub
jne
push
fwait
out
test
repz
fisubrl
int3
into
sub
adc
mov
pop
mov
shll
push
pavgb
gs
mov
les
push
inc
mov
jge
push
aas
data16
and
test
data16
test
jg
push
adc
jnp
pop
jecxz
dec
push
sahf
arpl
dec
push
js
push
jns
loop
cmp
push
and
js
push
lock
pop
enter
cmp
dec
push
jp
inc
dec
mov
movsl
nop
cmp
xor
sbbl
adc
push
inc
dec
cltd
imul
pop
jnp
movl
imul
arpl
inc
xor
inc
enter
adc
cmp
jnp
xlat
jne
xchg
les
loop
int3
jae
fdivs
fwait
pushf
xor
int3
test
jle
adc
mov
xor
mov
add
aad
add
add
hlt
rclb
mov
jns
clc
mov
test
lds
into
or
mov
sub
mov
sbb
inc
into
mov
call
jle
sahf
loopne
lret
in
cli
movsb
pop
and
push
sahf
sbb
jbe
movsb
xor
in
mov
lea
pop
dec
xchg
push
push
scas
pop
and
or
sub
and
or
xor
adc
and
mov
outsb
cld
pop
push
dec
xchg
jge
pop
cld
jo
pop
xchg
popa
mov
lock
mov
movsl
jns
scas
in
cltd
sub
leave
in
lret
fdivs
pop
mov
inc
in
jb
pop
xchg
imul
adc
mov
dec
imul
pop
pop
rcl
or
xlat
adc
fs
xlat
jb
jnp
push
jnp
xlat
pop
adc
dec
jnp
stos
fld1
pop
ret
cmp
lret
or
in
enter
shrb
fsubs
mov
sbb
enter
shrb
xlat
enter
sarb
lret
enter
rolb
dec
xor
xchg
rclb
xchg
enter
sarb
roll
dec
aad
outsb
pop
mov
fs
mov
mov
mov
pop
call
shl
js
das
jmp
jecxz
fstl
xor
xchg
push
call
mov
arpl
jp
outsb
rorb
dec
cmp
in
shlb
in
enter
rcrb
in
enter
xchg
cltd
or
and
push
lods
mov
add
pusha
inc
inc
nop
out
and
adc
or
mov
mov
inc
cli
rclb
jmp
and
cltd
dec
xor
test
push
data16
dec
insl
popa
xchg
pop
push
mov
push
jns
imul
xchg
jnp
xlat
or
jge
push
pop
and
mov
iret
insl
xor
dec
add
loop
pop
push
ss
jl
inc
popf
cmpsl
sbb
pop
or
or
mov
sub
cwtl
xor
andl
cmp
push
xor
xchg
push
dec
repnz
dec
push
sbb
mov
fisubs
ljmp
lret
mov
mov
ja
push
inc
mov
pop
adc
pop
jns
cmpsb
insl
cmp
out
sbb
cmc
rcr
lods
inc
insl
pop
adc
or
mov
movsl
dec
cmp
rcll
jmp
int3
adc
lock
mov
adcl
ret
rolb
outsb
lods
xchg
mov
sbb
test
enter
mov
data16
inc
mov
test
les
jle
cmpsb
imul
sarb
sub
add
insl
addr16
shl
in
lret
int
cwtl
mul
xchg
adc
out
dec
test
rclb
ficoms
gs
adc
outsb
pushf
ss
mov
aam
and
add
or
fiaddl
stos
push
add
pop
mov
jecxz
jno
lea
lahf
out
ds
and
decl
sbb
adc
mov
dec
loop
int3
outsl
lret
mov
add
repz
pop
sub
movsl
outsl
mov
ficompl
insl
add
push
jae
fistpl
push
mov
pop
sub
lret
movsb
xlat
dec
insb
and
call
push
insb
or
dec
jp
leave
xchg
fidivs
mov
lahf
pusha
test
in
movsl
push
inc
push
push
pop
push
and
andb
andl
add
jmp
sub
sub
stc
in
dec
inc
aaa
jmp
cld
push
xor
or
xor
jae
sub
dec
jp
adc
cld
xchg
cmp
imul
mov
mov
or
scas
add
mov
jae
and
insl
mov
ljmp
orb
gs
test
arpl
iret
stos
adc
xlat
idivb
call
sbb
mov
inc
std
nop
aaa
mov
jle
xlat
in
cmpsl
shrl
fldenv
pop
popa
shr
fsubr
lret
mov
xor
push
mov
hlt
ljmp
mov
xor
into
xchg
clc
in
ljmp
sbb
and
fdivrl
leave
pop
fisttpl
hlt
inc
cmp
push
cmp
dec
jb
cmp
shll
push
xchg
insl
cmpsl
xrelease
mov
jmp
mov
mov
mov
sbb
mov
inc
sbb
popf
pop
push
xor
push
outsb
push
cmpsb
scas
popa
les
xchg
adc
pop
adc
inc
jb
scas
adc
pop
xchg
pop
xchg
popa
repz
stc
or
gs
xchg
aam
imul
notl
test
ror
repnz
mov
or
pop
into
jge
imul
mov
mov
inc
nop
jle
out
clc
sub
pop
movsl
sahf
mov
aam
add
add
adc
inc
push
mov
mov
cmp
ret
ljmp
out
js
xchg
enter
cmp
scas
insl
sarb
inc
cmp
sbbb
xchg
insb
loop
stos
ret
mov
add
movsb
inc
mov
std
push
into
scas
rolb
sub
adc
sbb
stos
andl
cmp
aas
xchg
sbb
ret
outsl
cltd
mov
popf
nop
xchg
adc
mov
mov
in
xchg
xchg
xchg
mov
in
push
icebp
das
dec
fnstcw
mov
hlt
ret
mov
cli
push
dec
mov
push
test
push
xor
int
xchg
outsl
push
xor
sub
daa
faddl
int3
push
sbb
lcall
push
ja
jnp
xchg
ds
inc
adc
push
mov
xchg
jbe
insl
movsb
sbb
aas
cmpsl
jnp
loope
outsb
sarb
dec
cmp
xor
dec
hlt
add
clc
adc
or
and
out
movsl
sub
add
aas
cmp
xchg
push
add
dec
xchg
rclb
inc
nop
imul
xchg
add
cmp
or
and
std
cmpl
push
jo
push
and
mov
mov
fldenv
mov
pop
jge
cmp
in
enter
pushf
out
inc
andl
mov
gs
sahf
jo
xchg
mov
test
mov
mov
lods
mov
mov
sbb
jmp
das
add
mov
pop
adc
add
movsl
loop
int3
add
cmpsb
in
mov
mov
loope
imul
xor
test
addr16
ret
cwtl
cmp
adc
xlat
les
lods
cli
sub
dec
sub
or
rclb
mov
in
lret
and
aam
dec
pop
jl
fildll
add
or
aaa
mov
jno
frstor
inc
mov
push
jbe
mov
mov
out
pop
mov
xchg
loopne
push
das
pop
add
cmp
iret
dec
popa
jge
int
mov
inc
sbb
popf
addr16
xchg
pop
aad
sbb
mov
testl
jb
mov
testl
push
lcall
cmp
push
add
pop
mov
add
pop
das
jg
pop
push
inc
or
jae
pop
cmpsl
or
xchg
mov
outsb
fsubrs
cmp
jg
loope
test
call
adc
mov
fstpt
int3
push
jg
es
gs
sbb
subl
dec
adc
jb
sti
pop
cmp
inc
clc
sahf
invd
popa
cmpsl
xchg
cmp
out
push
mov
jg
or
dec
mov
lods
into
adc
lahf
inc
xor
add
out
pushf
push
or
movzwl
jle
jecxz
es
leave
lds
test
jle
xchg
in
cmpb
jg
cmpsb
adc
add
and
jmp
lret
sub
pushf
popa
mov
lret
and
in
cmpsl
or
cld
xchg
addr16
in
lret
mov
xchg
mov
ret
mov
mov
cmp
dec
icebp
in
jg
repnz
add
js
popf
push
cmpsl
ds
imul
add
lods
nop
test
xor
addr16
xchg
pop
aam
aas
pop
and
inc
or
movzwl
and
dec
sbb
inc
push
push
aaa
or
lods
fcoms
fidivs
push
push
xchg
mov
or
cmp
mov
dec
lds
xor
pop
jge
xchg
pop
sbb
test
sub
imul
call
sub
cltd
cwtl
stos
icebp
popf
sbb
into
xor
add
add
push
or
in
clc
test
test
scas
xlat
cs
xor
pop
mov
outsb
adc
push
jo
loop
adc
mov
rolb
fsts
xchg
push
call
sbb
aad
or
jb
ss
mov
lods
into
das
js
arpl
out
mov
pop
push
or
icebp
xor
int
sub
jle
pop
inc
dec
movsl
pop
mov
dec
and
xor
add
ja
inc
repz
jb
mov
mov
or
jbe
cmpsl
or
mov
pusha
iret
jl
andb
into
shr
jl
sub
cld
push
in
jo
push
sahf
iret
mov
notl
iret
sub
bound
test
mov
bound
pop
les
fcoms
testl
insl
or
ljmp
mov
mov
pop
xchg
fildl
imul
sbb
test
bound
jmp
daa
xor
adc
andb
cmp
mov
ret
mov
fs
cli
mov
add
or
inc
xchg
xchg
ret
inc
mov
mov
cld
mov
mov
and
jae
inc
cmpsl
push
jno
rorb
pop
inc
loopne
or
aas
pop
mov
std
mov
sbb
pop
lock
xor
or
pop
push
mov
fistpl
mov
xchg
fwait
jns
lock
jno
in
xchg
mov
cmp
sub
jmp
xor
lahf
bound
xchg
in
xor
pop
and
push
push
mov
sahf
cmp
jne
push
pop
dec
add
cmpsl
mov
fidivl
repz
ds
mov
jae
mov
mov
add
jecxz
xor
pop
cmpsl
shrb
data16
dec
mov
xlat
imul
jb
pop
out
mov
divl
das
push
inc
lds
stos
rorb
and
imul
mov
adc
js
sub
rclb
xor
cmc
jae
cltd
lea
sbb
rorl
mov
xchg
inc
pop
cwtl
push
mov
dec
push
mov
jle
mov
gs
enter
cmc
stos
fwait
xchg
xor
add
mov
js
shlb
pusha
push
ljmp
jb
adc
cmp
js
inc
call
sub
or
lock
pop
imul
add
mov
repnz
gs
jo
ljmp
mov
jle
or
pop
add
out
xchg
push
xchg
mov
push
sub
pop
mov
sbb
dec
sahf
xor
aaa
mov
dec
std
jne
inc
fdivrl
das
pop
cld
ja
movsb
fimuls
pop
test
daa
enter
ds
rcll
mov
addr16
fwait
dec
pop
jg
mov
in
xchg
jg
pop
test
and
int3
jne
rolb
inc
test
out
sbb
orb
scas
ret
mov
sahf
ret
sahf
xchg
sbb
dec
xor
jmp
orb
lcall
inc
icebp
pop
sbb
inc
jl
and
out
data16
lds
or
mov
inc
ret
inc
pop
movsl
inc
call
test
fldenv
jmp
das
sub
adc
dec
sub
cltd
je
shlb
cmp
jb
jp
adc
xchg
int
jge
es
cld
ss
xchg
cmpsl
test
push
outsb
fdivrs
adc
sub
push
lea
add
sbb
cmpsb
std
pop
xor
and
add
pop
movsl
sub
jne
mov
sub
and
pop
repz
out
mov
call
xor
sub
jb
call
fadds
std
faddl
bound
gs
lret
xor
cwtl
jmp
rolb
aam
jb
inc
dec
mov
mov
jle
shrl
inc
sbb
rolb
fwait
stos
movsl
pop
das
sub
pop
jg
mov
push
sub
and
xchg
in
or
mov
dec
mov
gs
movsb
xlat
test
es
in
push
les
sub
stos
pop
mov
fidivrl
adc
cmc
sub
jno
fnsave
sbb
mov
jns
jns
rcrb
lea
std
cmp
mov
adc
xor
pop
notb
test
and
popa
lods
adc
pop
xor
or
pop
adc
mov
push
dec
adc
adc
jno
pop
aam
push
loopne
jno
jge,pn
adc
adc
lcall
mov
mov
cmpsb
loope
adc
pusha
jns
bound
mov
adc
mov
stos
aam
dec
dec
js
test
mov
add
loop
jmp
shlb
js
hlt
xor
jge
repz
lods
or
adc
lcall
mov
nop
inc
jle
xchg
lret
movsl
out
bound
out
sarb
fcomps
push
mov
add
add
fstpt
arpl
outsb
out
xchg
das
gs
inc
or
add
push
and
scas
lcall
mov
daa
addr16
fdivs
cwtl
pusha
mov
clc
xor
pop
out
insb
cltd
adc
out
fwait
push
out
jp
je
add
add
loope
cltd
xchg
add
or
mov
fdivr
cli
out
pop
mov
sub
out
sti
jmp
jge
inc
test
pop
shrl
jmp
arpl
and
cli
jns
dec
popa
add
pop
and
pop
incb
js
push
add
popf
xchg
cmpsl
xchg
mov
neg
idivl
leave
push
insl
dec
movsl
cltd
iret
jp
dec
les
push
addr16
dec
add
lock
sub
call
ret
fld1
and
xchg
adc
idiv
adc
cmp
push
sub
add
outsb
bsr
imul
roll
movsl
scas
xchg
mov
mov
shlb
scas
adc
rolb
in
les
out
dec
fidivrl
pop
push
lods
mov
and
jne
cmc
sub
call
add
xor
cli
ds
fisttps
popa
rolb
xchg
push
andl
inc
mov
add
inc
mov
inc
lret
test
fwait
pop
sahf
mov
movsb
outsb
loop
pop
js
sub
jle
ja
nop
push
lods
bound
das
xchg
lret
je
subl
je
push
shlb
xor
mov
push
int3
mov
inc
mov
ja
es
pushf
cmp
sub
push
imul
lds
test
leave
fistps
jle
cmpsb
mov
pushf
movsl
jg
jl
loope
cmp
jmp
dec
movsb
pop
sahf
sub
sub
pusha
xchg
decl
mov
popa
repz
dec
stc
lahf
popa
and
mov
mov
add
es
mov
push
cmpsl
add
cmp
jecxz
xor
lret
xchg
mov
testl
adc
in
push
adc
shr
mov
jb
adc
add
add
aam
mov
mov
jmp
imul
xor
mov
xchg
mov
test
or
push
lods
jg
inc
mov
arpl
pop
imul
pop
fistpll
cmp
stos
movsb
cmpsb
popa
bound
fmul
and
fisubl
lret
rorb
fisttpll
adc
loope
cmpsl
and
in
cmp
dec
push
or
dec
cmpsb
ja
adc
xchg
add
popa
cmp
repnz
out
cld
jp
mov
and
fcomps
pop
adc
dec
lret
lds
adc
cmpsl
lcall
pop
iret
push
jp
mov
dec
pop
in
jbe
push
mov
pop
lds
movsl
xchg
or
enter
dec
pop
lods
jb
mov
dec
sbb
inc
mov
xchg
sbb
scas
out
movsl
out
sub
cmp
push
adc
aam
xor
test
push
cld
mov
test
pop
cmpsb
push
out
inc
adc
mov
enter
pop
or
mov
lcall
out
or
cmp
into
adc
adc
or
scas
push
mov
aaa
push
ret
pop
inc
cs
ljmp
add
sbb
add
add
add
dec
xchg
add
xchg
addb
or
add
add
add
xchg
pushf
add
rolb
add
shlb
add
cld
popl
add
nop
add
and
add
ds
add
push
nop
add
xchg
add
jb
add
xchg
add
sahf
nop
add
test
add
rclb
add
nop
add
out
nop
add
add
add
push
xchg
add
xor
add
dec
xchg
add
push
xchg
add
bound
add
jbe
add
mov
add
test
add
mov
add
les
add
in
xchg
add
notb
add
adc
add
es
add
cmp
add
pop
xchg
add
outsb
xchg
add
adcb
add
xchg
add
enter
ficoms
add
cld
xchg
add
adc
add
xor
add
push
xchg
add
push
xchg
add
mov
add
mov
add
ret
add
xchg
add
call
xchg
add
or
add
xchg
add
inc
xchg
add
dec
xchg
add
pop
xchg
add
xchg
add
je
add
test
add
xchg
add
mov
xchg
add
ficoms
add
add
sub
add
dec
xchg
add
bound
add
jle
add
mov
add
scas
xchg
add
mov
xchg
add
ficoml
add
xchg
add
adc
add
xor
add
dec
xchg
add
push
xchg
add
nop
xchg
add
mov
xchg
add
xchg
add
fcoms
add
hlt
xchg
add
add
add
and
add
cmp
add
add
add
pop
xchg
add
push
xchg
add
nop
xchg
add
lcall
add
xchg
add
ficoms
add
or
add
xor
add
dec
cwtl
add
push
cwtl
add
fs
add
jbe
add
nop
cwtl
add
sahf
cwtl
add
lods
cwtl
add
mov
cwtl
add
loop
add
negb
add
and
add
dec
cltd
add
pop
cltd
add
push
add
jl
add
xchg
cltd
add
test
add
mov
cltd
add
in
cltd
add
cld
cltd
add
push
lcall
sub
add
inc
lcall
push
lcall
lcall
add
lcall
in
lcall
push
fwait
add
push
fwait
add
xor
add
pop
fwait
add
data16
add
jl
add
mov
add
test
add
ret
add
fwait
add
out
add
cld
fwait
add
push
pushf
add
push
pushf
add
xor
add
add
pop
pushf
add
insb
pushf
add
jle
add
add
add
movsb
pushf
add
scas
pushf
add
mov
pushf
add
ficompl
add
pushf
add
clc
pushf
add
add
add
sbb
add
xor
add
ds
add
inc
popf
add
push
popf
add
pusha
popf
add
outsb
popf
add
jp
add
mov
add
test
add
mov
add
les
add
ficompl
add
hlt
popf
add
cld
popf
add
or
add
sbb
add
es
add
xor
add
inc
sahf
add
push
sahf
add
pusha
sahf
add
push
add
jo
add
js
add
test
add
sahf
sahf
add
cmpsb
sahf
add
mov
add
mov
sahf
add
ficompl
add
hlt
sahf
add
sahf
add
or
add
and
add
cmp
add
push
lahf
add
pop
lahf
add
data16
add
jo
add
jl
add
test
add
movsb
lahf
add
lods
lahf
add
rcrb
add
lahf
add
ficomps
add
cli
lahf
add
push
mov
add
sbb
add
sub
add
inc
mov
add
pop
mov
add
insb
mov
add
jle
add
mov
add
cmpsb
mov
add
enter
aam
add
loopne
add
in
mov
add
mov
add
sbb
add
xor
add
dec
mov
add
pusha
mov
add
js
add
andb
add
add
stos
mov
add
mov
add
dec
add
gs
je
inc
outsl
insl
jo
je
bound
imul
or
gs
je
push
outsb
add
add
insb
jns
imul
inc
jb
popa
je
push
arpl
outsb
add
or
je
gs
dec
gs
imul
inc
jb
popa
je
inc
outsl
outsb
je
outsb
imul
add
push
je
jb
inc
outsl
arpl
mov
inc
jb
popa
je
push
outsl
insb
imul
add
adc
je
dec
push
xor
filds
inc
gs
imul
outsl
jb
add
outsl
arpl
add
inc
jb
popa
je
push
arpl
outsb
dec
outsb
imul
push
inc
gs
bound
arpl
add
push
gs
gs
inc
insb
imul
push
arpl
push
imul
inc
jb
popa
je
inc
dec
inc
push
arpl
outsb
add
or
je
gs
arpl
popa
jo
add
push
arpl
insb
add
push
je
arpl
bound
arpl
mov
je
jb
inc
inc
add
push
gs
popa
jo
outsl
fs
or
push
gs
imul
add
add
je
imul
add
push
popa
jbe
inc
inc
add
pushf
push
inc
outsb
fs
popa
addr16
adc
gs
je
inc
outsl
insl
jo
je
bound
inc
add
bound
dec
outsl
jbe
push
outsl
inc
js
add
or
je
gs
inc
outsl
insb
outsl
jb
add
or
imul
outsl
jb
add
add
je
gs
dec
jne
inc
add
push
gs
arpl
push
arpl
mov
gs
inc
js
outsb
je
outsl
imul
mov
dec
imul
sub
inc
gs
gs
dec
bound
arpl
test
inc
imul
add
popa
jb
push
popa
add
dec
xor
cs
insb
add
push
imul
js
inc
add
adc
je
push
imul
mov
imul
popa
jae
inc
js
add
mov
gs
imul
jae
add
adc
jo
imul
imul
inc
gs
jne
dec
outsb
jne
add
adc
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
cmova
inc
insb
popa
jae
dec
popa
insl
gs
add
adc
jb
outsb
push
outsl
inc
insb
imul
pop
inc
jb
popa
je
dec
arpl
dec
outsb
imul
jg
dec
outsb
data16
popa
je
push
arpl
add
inc
insb
imul
add
push
imul
popa
arpl
outsb
je
add
inc
gs
insb
addr16
je
insb
dec
inc
add
sti
push
inc
gs
jns
inc
outsl
insb
outsl
jb
xor
inc
jb
popa
je
inc
imul
jb
insl
inc
add
dec
or
outsl
popa
fs
outsb
jne
add
inc
gs
outsl
jne
insb
gs
insb
imul
add
daa
pop
inc
imul
add
arpl
outsl
jo
jo
outsb
jne
js
add
add
je
arpl
insb
insb
dec
outsb
outsw
add
imul
outsb
outsl
ja
gs
popa
addr16
add
pop
add
fs
ja
imul
jo
inc
jb
ja
arpl
inc
js
add
add
fs
imul
outsl
insl
push
outsl
imul
push
imul
popa
jae
inc
add
adc
dec
outsb
jbe
insb
imul
add
inc
gs
gs
dec
outsb
jne
add
add
je
imul
popa
arpl
outsb
je
add
or
fs
arpl
insb
gs
je
jb
inc
add
or
insb
insb
push
imul
dec
outsl
popa
fs
arpl
inc
add
inc
outsl
arpl
add
js
inc
jb
ja
outsb
jne
popa
jb
movsl
adc
outsb
fs
imul
inc
add
fs
jne
jae
jb
add
push
outsb
outsl
ja
add
popa
jb
outsb
je
in
push
gs
insb
addr16
je
insl
push
gs
inc
add
adc
jo
outsb
fs
outsb
jne
add
popa
je
push
imul
inc
add
rcpps
inc
insb
imul
inc
popa
je
add
jecxz
push
gs
imul
outsb
addr16
add
xchg
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
or
je
imul
outsb
addr16
add
addl
push
imul
and
dec
jae
imul
jae
popa
addr16
add
inc
push
inc
gs
jns
je
insl
dec
gs
imul
inc
outsb
popa
bound
imul
insl
adc
jo
push
arpl
leave
add
je
outsb
push
arpl
lea
push
gs
outsl
arpl
add
cmp
push
gs
jae
jb
bound
arpl
arpl
imul
popa
ja
gs
inc
add
bound
outsb
jne
je
insl
add
loop
inc
gs
gs
je
je
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
inc
gs
jb
jo
add
dec
or
jb
arpl
outsl
jo
jo
outsb
jne
add
inc
gs
insb
addr16
je
insl
add
cmovae
insb
push
imul
outsl
arpl
xor
inc
gs
insb
addr16
jb
arpl
jl
inc
imul
add
int
dec
jae
push
popa
imul
je
jo
gs
bound
arpl
aam
dec
jae
insb
addr16
jne
je
outsb
inc
push
add
ret
arpl
insb
insb
push
imul
add
lea
inc
gs
insb
popa
jae
dec
outsl
outsb
addr16
add
arpl
outsb
jne
je
insl
add
inc
imul
push
imul
jae
xchg
inc
gs
imul
outsl
arpl
add
jae
jb
outsb
je
inc
add
or
je
insb
imul
je
mov
imul
inc
add
push
gs
insb
popa
jae
dec
outsl
outsb
addr16
add
fs
insl
popa
addr16
add
lret
push
inc
js
je
imul
js
jl
inc
outsb
fs
imul
add
outsl
jae
inc
insb
imul
add
push
push
inc
push
xor
cs
insb
add
ljmp
insb
gs
jns
gs
or
inc
insb
insb
outsl
arpl
add
push
outsb
push
gs
js
gs
imul
gs
add
push
insb
jae
jb
gs
rcpps
inc
outsb
fs
inc
imul
outsl
fs
xor
dec
gs
add
popa
add
je
jb
outsl
arpl
fs
js
push
add
push
imul
jb
gs
add
outsb
fs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
pop
push
jb
je
inc
outsl
outsb
jae
insb
gs
add
push
imul
outsl
dec
jne
je
inc
jns
add
dec
inc
dec
popa
jo
je
imul
add
gs
fs
imul
gs
jo
insb
insb
outsl
arpl
lods
push
inc
jb
popa
je
inc
imul
insb
jae
gs
popa
insb
jne
add
adc
outsl
bound
inc
fs
je
insl
inc
add
pushf
or
je
jb
arpl
jae
data16
dec
popa
jae
add
mov
bound
inc
insb
insb
outsl
arpl
outsb
add
push
jb
arpl
jae
adc
insb
jae
jb
popa
je
add
mov
inc
gs
je
imul
inc
add
xchg
outsb
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
pop
add
je
jb
jne
dec
outsb
outsw
inc
add
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
mov
inc
popa
je
inc
outsl
jb
popa
je
add
dec
adc
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jae
jne
arpl
add
add
popa
je
gs
popa
addr16
add
push
adc
outsl
bound
dec
gs
outsl
jb
push
je
je
jae
add
push
jns
je
insl
inc
imul
jns
add
inc
gs
outsl
fs
gs
imul
add
jb
push
gs
jb
arpl
jae
outsl
jb
imul
imul
push
outsb
insl
popa
jo
imul
insb
add
jb
jbe
push
jns
gs
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
dec
gs
jo
jb
popa
je
add
insl
adc
outsl
bound
push
outsb
insb
outsl
arpl
add
dec
outsl
fs
gs
popa
outsb
fs
gs
add
cli
or
je
jb
arpl
jae
gs
jo
add
push
popa
imul
insb
gs
bound
arpl
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
add
je
push
dec
outsb
outsw
add
or
je
imul
gs
add
add
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
push
gs
popa
insb
jne
add
or
jbe
inc
jb
je
arpl
push
arpl
outsb
add
daa
add
inc
bound
addr16
jb
jae
outsb
je
testb
ja
inc
imul
je
outsl
insl
insl
popa
outsb
fs
imul
push
gs
popa
jae
inc
jb
outsl
jb
add
push
push
gs
imul
jb
popa
add
inc
dec
popa
jo
je
imul
add
je
push
inc
data16
dec
popa
jae
add
rcpps
jb
push
inc
add
inc
imul
bound
gs
add
sub
imul
add
inc
gs
push
inc
outsl
outsb
je
js
add
or
insb
jae
jb
jo
inc
add
mov
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
jne
jb
outsb
je
jb
arpl
jae
add
je
push
add
sbb
inc
jb
popa
je
inc
imul
outsb
addr16
add
enter
gs
je
push
jb
arpl
jae
add
jecxz
dec
jae
popa
fs
gs
fs
je
add
inc
push
inc
gs
js
je
outsl
fs
push
add
adc
insb
jae
inc
jbe
outsb
je
add
or
gs
jb
outsl
jb
outsl
fs
or
jb
je
inc
imul
gs
je
push
push
add
xchg
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
xlat
add
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
dec
adc
jb
jae
outsb
add
pop
pop
arpl
inc
imul
pop
jae
ja
jb
outsb
je
add
sub
pop
pop
addr16
popa
imul
leave
add
imul
add
rolb
pop
jae
popa
bound
cmp
push
fs
xor
data16
je
arpl
add
jae
add
or
pop
arpl
insl
outsl
fs
aam
pop
ja
outsl
insb
add
push
imul
ss
add
or
ja
imul
ja
outsl
data16
pop
insl
bound
outsl
jne
jo
jb
mov
pop
je
insl
jo
popa
insl
add
xor
pop
jbe
arpl
jb
outsb
je
add
adc
outsb
imul
pop
pop
popa
insb
imul
gs
insb
insb
outsl
arpl
add
pop
imul
jb
add
call
jae
arpl
add
or
pop
jne
insb
outsl
popa
fs
insb
add
xchg
add
outsb
gs
popa
data16
jb
add
arpl
insl
imul
ja
arpl
data16
gs
popa
jo
pop
je
jo
add
repnz
jne
xor
arpl
jb
outsb
add
movsl
or
outsb
arpl
add
pop
or
bound
jo
add
pop
arpl
je
add
jb
pop
addr16
jae
add
pop
insw
outsl
fs
adc
jp
gs
add
or
ja
jb
outsb
je
add
jns
add
or
bound
jns
bound
add
xchg
or
gs
je
add
adc
add
push
data16
add
mov
pop
insl
bound
jae
je
add
or
gs
jb
jbe
jae
add
pop
ja
js
arpl
add
stc
add
je
outsb
xor
add
jae
jae
gs
add
push
or
jae
arpl
add
pop
pop
popa
insb
imul
jb
add
push
pop
imul
js
imul
add
jo
pop
insw
outsl
fs
push
add
je
outsb
jae
je
add
jae
gs
add
arpl
add
pop
maxps
outsb
ja
jb
outsb
je
add
push
pop
ja
jae
outsl
imul
pop
insl
gs
imul
add
ja
outsb
insl
imul
pop
gs
je
and
pop
imul
imul
gs
arpl
add
mov
outsb
popa
insl
add
in
pop
ja
outsl
imul
pop
insl
bound
bound
add
inc
pcmpgtd
je
add
or
popa
gs
data16
gs
xor
add
or
fs
jae
pop
imul
or
outsb
push
pop
gs
gs
pop
push
gs
add
or
ja
jae
popa
je
add
je
insl
gs
lock
outsl
data16
icebp
adc
gs
jo
push
add
imul
insb
outsb
jne
add
xchg
add
jae
popa
jb
push
pop
outsl
jne
jo
mov
je
ja
add
jbe
add
push
imul
add
gs
jo
popa
insl
add
imul
popa
add
in
add
jae
bound
jb
jo
add
add
jae
bound
jae
add
or
jae
int
pop
imul
add
jo
je
add
mov
arpl
call
ss
outsl
ja
add
push
pop
popa
fs
imul
imul
popa
arpl
insb
outsb
add
pop
jae
je
jae
push
gs
outsl
insb
add
mov
jae
jo
jo
add
popa
jo
popa
insb
imul
or
je
je
ss
add
adc
bound
arpl
insb
add
add
arpl
bound
add
jbe
add
add
outsl
outsb
je
outsl
insb
data16
add
jae
arpl
add
iret
or
addr16
jns
je
insl
gs
or
outsl
arpl
add
add
imul
jae
je
jae
jb
popa
je
gs
add
xlat
pcmpgtd
je
jae
add
pcmpgtd
je
outsl
jae
push
add
imul
js
add
jge
jae
jb
outsb
add
rolb
pop
insb
outsl
bound
mov
jno
outsl
jb
add
pop
data16
insb
jo
je
add
push
add
jne
jae
jb
je
insl
add
lret
or
popa
fs
data16
gs
xor
sub
pop
insl
bound
jae
insl
popa
jo
add
pop
fs
jns
imul
push
inc
push
push
cs
insb
add
add
add
inc
add
