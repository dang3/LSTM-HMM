incl
sbb
aam
jbe
xor
or
ss
inc
inc
into
add
test
jp
iret
dec
iret
fnstenv
adc
scas
pop
jae
jl
xchg
jecxz
iret
hlt
les
dec
dec
sbb
sub
push
imul
mov
push
cld
dec
cli
jno
xlat
aam
outsl
xor
mov
jmp
pop
xor
push
mov
leave
sub
jns
push
mov
call
mov
and
sbb
cmp
and
shlb
aad
addb
call
int3
and
push
ret
push
stc
jns,pn
adc
push
or
cmp
mov
icebp
mov
and
xchg
rolb
xchg
add
cmp
add
inc
flds
inc
stc
sub
jae
mov
push
mov
clc
xorl
movl
fcom
inc
sbb
or
adc
je
adc
and
sbb
call
loopne
sub
cmp
in
pop
xchg
cwtl
clc
clc
push
notl
sub
aaa
loopne
sbb
decl
inc
sbb
xchg
jl
jb
data16
adc
sub
or
lea
push
cmp
pop
push
mov
ja
sub
inc
mov
add
ret
sahf
and
cmp
cld
incl
cltd
hlt
addr16
fmulp
xor
pop
sub
inc
js
push
mov
sub
popa
test
pushl
and
insb
and
push
rcr
adcb
imul
fsubl
lods
es
jmp
cmpsb
sbb
mov
sti
fidivrs
test
cmp
sbb
mov
mov
adc
jmp
int3
fadds
bnd
loop
or
sub
rclb
dec
inc
xor
fistl
pop
call
lds
int3
out
pop
ss
mov
xor
lahf
enter
pop
std
xlat
lret
setae
mov
xchg
stc
push
movsl
fsincos
outsb
xlat
movl
pop
pop
inc
xchg
xchg
add
icebp
ljmp
aaa
push
add
jmp
lcall
pop
xchg
imul
push
mov
decl
mov
pop
inc
scas
and
bnd
push
bound
pop
adc
inc
push
in
cmpsb
xchg
xor
xchg
iret
pop
xor
andl
mov
add
notl
pop
call
xor
mov
aad
sahf
inc
in
dec
arpl
mov
dec
cmpsl
mov
je
push
xor
out
jl
mov
cli
dec
jge,pt
mov
sti
add
ljmp
std
das
cmp
call
inc
xor
test
jmp
icebp
jno
sbb
xchg
xor
test
dec
adc
pop
mov
inc
jl
and
test
fmulp
cs
cmc
and
push
mov
mov
insl
ljmp
iret
out
outsl
int3
jmp
mov
inc
dec
loop
call
call
inc
dec
arpl
inc
into
jae
inc
add
sahf
and
fcmovu
mov
mov
jg
dec
xchg
insb
enter
cmpsb
mov
and
repnz
fwait
mov
or
int3
ficoms
sbb
jnp
pop
xor
sub
pusha
push
sub
xor
push
jle
mov
pop
or
jmp
jo
pop
mov
mov
pushf
fisttpl
cmpsl
pop
pop
cmpsb
aas
sub
and
out
jmp
rcr
push
clc
mov
xchg
and
iret
mov
lods
or
nop
and
mov
pop
mov
inc
jp
out
arpl
aas
sahf
arpl
rcrl
xor
mov
jmp
ret
clc
rol
filds
das
imul
add
adcb
dec
in
sbb
lahf
push
das
jo
mov
decl
loopne
stos
pop
jle
cltd
jge
ss
psrad
and
out
ljmp
dec
cmp
add
add
out
pop
cmpb
pusha
inc
inc
incl
pushf
loop
push
mov
imul
fwait
jne
gs
push
mov
add
ljmp
ret
fdivs
sti
fldenv
jo
sbb
cwtl
xor
lock
lcall
lcall
mov
jb
jno
push
ret
pop
adc
pop
push
sub
jg
decl
mov
outsl
inc
call
outsb
and
mov
lds
xor
fidivl
mov
cmp
arpl
sbb
lods
mov
jne
test
fistpll
jmp
fs
sub
cli
test
fnstsw
mov
add
or
fucomip
aad
pop
jae
clc
adc
negl
aas
int
stc
mov
fldl
mov
cs
inc
pop
scas
xor
cli
adc
rolb
je
icebp
sub
neg
sbb
sahf
mov
mov
pop
push
mov
int
push
shll
dec
jge
xchg
dec
inc
outsl
cld
call
push
cmpsl
xor
sub
sub
and
hlt
dec
repz
ljmp
lea
ja
mov
ja
in
xchg
repz
lods
lds
or
dec
mov
xchg
fidivl
incl
out
jecxz
sub
test
frstor
mov
into
je
into
leave
rorb
sub
icebp
or
cmp
vsqrtps
pop
sub
outsb
nop
cld
pop
fmuls
inc
dec
lods
enter
std
insb
pushl
sub
cli
push
jle
sub
arpl
pop
xchg
mov
mov
ja
xor
aaa
mov
or
or
out
dec
popf
dec
and
out
mov
sub
incl
pop
xchg
setne
ja
loopne
fists
xor
mov
sar
decl
push
cltd
xor
fsubl
ret
mov
loopne
sbb
or
popa
in
decl
xor
lods
in
cwtl
mov
lods
sub
xchg
pop
pusha
enter
jno
push
inc
or
jns
adc
jle
push
test
mov
push
lahf
pusha
cltd
xor
sar
lcall
adc
hlt
arpl
and
xchg
sub
fistps
xadd
mov
js
notb
fdivr
decl
add
xchg
add
add
mov
incl
incl
cmc
jmp
fstps
or
cmpsl
and
incl
xlat
dec
sar
and
js
ss
push
xor
mov
pop
sbbl
pop
bound
push
out
push
cld
icebp
sub
out
push
cmpsl
or
stos
pop
mov
jns
jnp
jmp
jnp
pop
sub
mov
mov
push
xchg
add
sbb
ss
lock
push
pop
daa
jbe
sub
jle
and
lock
daa
sahf
call
clc
inc
dec
xchg
mov
cli
jno
cmpsl
les
xchg
ret
mov
call
ljmp
out
leave
inc
jae
or
push
fucomip
sbb
mov
aaa
mov
pop
jns
lret
ljmp
icebp
or
cmp
or
cli
roll
or
jno
mov
mull
sti
add
ljmp
cld
call
jns
sbb
gs
jo
mov
xor
ror
and
inc
cmc
add
pushl
out
xchg
out
dec
fs
imul
stos
jbe
mov
iret
push
lea
inc
mov
cld
incl
push
int
leave
test
rol
imul
flds
adc
add
out
and
insl
ja
addb
mov
loopne
mov
lcall
decl
pop
mov
push
inc
fs
push
mov
int3
adc
mov
cld
pushl
and
ja
mov
push
and
lock
testl
decl
dec
jecxz
aaa
stos
pop
rcrb
movsl
and
call
sbb
xor
jl
and
jge
rorb
lds
out
sbb
test
scas
ficompl
adc
cmpsb
lds
mov
pop
pushl
clc
mov
jno
cmp
xor
ret
popf
and
jmp
lcall
jl
clc
stos
mov
je
inc
stos
inc
jae
mov
sbb
mov
js
das
lea
xchg
sbb
lar
sub
icebp
pushf
mov
bound
in
stos
jns
jnp
mull
aas
mov
mov
push
adc
mov
stc
mov
mov
mov
stos
push
mov
add
jle
sub
dec
or
add
mov
xor
mov
enter
decl
xor
pop
xchg
fcoms
cmp
and
xchg
sbb
or
xchg
shll
aas
mov
push
shlb
int3
lods
jmp
or
push
mov
orl
jle
mov
je
mov
int
xor
jecxz
mov
cmp
jns
decb
in
mov
lcall
and
jmp
push
inc
mov
loop
mov
sar
dec
push
jge
or
pushl
addr16
lds
cmp
xchg
subb
gs
cli
dec
mov
mov
jl
ret
lea
pop
xchg
hlt
xchg
sarl
mov
inc
push
test
jmp
inc
add
call
popa
fidivrs
and
xor
stos
lcall
jmp
xchg
push
icebp
mov
push
adc
xor
in
ja
jecxz
inc
push
mov
pushl
push
xchg
shl
pusha
jg
and
lods
fwait
xor
adc
jno
je
cli
mov
repnz
in
xor
add
xchg
pop
in
inc
sub
int
dec
xor
call
cmpsb
in
movsb
rolb
sbb
mov
dec
adc
enter
mov
mov
mov
iret
pushf
jnp
not
loopne
xor
mov
outsl
lcall
dec
fdiv
test
lret
lcall
sub
jmp
hlt
push
into
lods
aad
test
lcall
por
jae
xchg
pop
sbb
test
in
fcoml
fsubrs
dec
leavew
movsb
mov
out
inc
rol
push
loope
xchg
inc
iret
lahf
fstps
pop
xor
mov
call
in
call
mov
sarl
mov
repnz
test
fistpl
imul
stos
push
xor
testb
mov
or
cmp
lcall
lret
ret
ljmp
cmpsl
or
add
sbb
cmpsl
mov
add
lcall
scas
cltd
mov
jns
adc
aas
mov
fiaddl
popf
push
pushl
icebp
push
cmpl
mov
or
loope
jecxz
xor
mov
adc
lcall
xlat
jge
and
cmp
stos
data16
inc
enter
push
sti
jecxz
movb
decl
xchg
cmp
test
adc
mov
xchg
lock
mov
jmp
arpl
adc
pop
xchg
call
outsb
and
movsl
fwait
sarb
in
ljmp
cmp
lods
mov
jns
adc
fimull
sbb
cmp
scas
sbb
int
add
ljmp
testb
insb
sbb
mov
jecxz
test
leave
push
lahf
fisttps
js
sub
icebp
and
repnz
negb
jno
cmpsl
int3
lret
call
insl
pop
fists
cwtl
jmp
insl
insl
xor
mov
xlat
mov
inc
mov
xchg
ljmp
aam
jae
pop
xchg
aaa
ljmp
cli
inc
lahf
fistl
scas
inc
sbb
sub
xchg
push
mov
mov
repnz
lods
adc
push
adc
decl
lods
push
das
orl
push
sub
std
scas
popf
movsl
jb
cmp
loop
ljmp
cld
dec
cmp
mov
sbb
cwtl
cmp
xchg
add
cwtl
scas
int
or
jnp
imul
nop
xor
jmp
out
cmp
mov
xchg
fldt
ret
mov
mov
adc
dec
mov
mov
or
clc
sub
mov
cmp
push
mov
sbb
iret
and
mov
fildll
pop
inc
sub
dec
xor
inc
sti
fs
fcomp
mov
inc
ret
pop
sbb
ljmp
fistpl
mov
push
ss
cmp
sti
decb
cmp
add
xor
add
ljmp
je
mov
adc
leave
sbb
fnsave
jge
popa
fisubs
sbb
pop
cmp
ret
add
sbb
scas
lds
jne
pop
push
pop
loope
ret
pusha
mov
cmovle
ret
push
push
clc
out
iret
adc
mov
add
adc
and
inc
jmp
popa
xor
xchg
push
outsb
push
cmp
sti
and
xor
jp
dec
ret
add
mov
cmp
idivl
sub
mov
addr16
rorb
sbb
adc
mov
out
jmp
xchg
outsl
lods
std
jae
or
sub
iret
insl
jne
xor
sbb
jmp
ret
push
or
sub
cwtl
sub
add
adc
sub
xchg
loope
and
incb
push
and
mov
lcall
push
mov
mov
dec
dec
in
dec
dec
out
add
inc
lods
icebp
pop
mov
pop
jg
das
hlt
add
add
cmp
arpl
push
xor
and
xor
cmp
xchg
cmp
jae
inc
cmp
sti
sbb
ss
jp
incl
sub
stos
add
mov
jne
mov
add
sbb
cmp
shll
icebp
mov
jbe
push
lods
xor
pop
inc
call
push
inc
fs
dec
pop
test
mov
sub
insb
cmc
mov
aad
fwait
mov
call
test
xchg
stos
or
fisttps
push
xor
stos
popa
das
cmp
jge
jne
call
add
jno
pop
push
rol
fdivrs
xlat
inc
inc
sbb
inc
filds
jb
dec
push
sbb
xchg
les
loope
mov
mov
adc
call
les
mov
mov
repnz
or
adc
mov
fsts
lcall
sahf
dec
add
pop
push
ss
ret
mov
call
repz
mov
adc
add
les
fiadds
out
inc
jg
cmp
repz
mov
cmp
outsl
outsb
xor
pop
popf
in
dec
out
ljmp
inc
testl
ficoms
jo
out
and
adc
addr16
stc
pop
rcll
dec
lods
cmp
pushl
cwtl
call
int3
imul
gs
je
inc
inc
cld
mov
stos
push
inc
nop
frstor
sub
mov
or
sbb
or
stos
lret
pop
mov
ret
jp
cmc
repz
xchg
std
inc
ljmp
scas
out
push
inc
subl
fidivl
mov
xor
push
mov
cltd
outsb
test
sbb
cs
lcall
fistl
sti
ja
js
pushl
daa
loopne
inc
leave
xorl
jl
ja
mov
mov
subl
or
leave
inc
push
pushf
mov
lret
ret
mov
fs
inc
push
dec
insb
and
cli
add
xchg
push
data16
jge
insl
mov
ljmp
dec
out
jnp
hlt
jb
ficompl
xchg
xchg
or
out
int3
mov
mov
decl
jg
aam
xchg
bswap
icebp
push
inc
sub
test
lods
push
xlat
lcall
ljmp
dec
call
mov
dec
xchg
aaa
pusha
icebp
fiadds
pop
push
incl
lret
call
sti
js
movsb
addr16
jb
scas
jns
das
dec
adc
push
popa
movsb
push
pop
jmp
mov
popf
ficoms
xchg
lds
fstpl
arpl
xlat
in
int
dec
loopne
call
and
aam
mov
call
daa
pop
xor
std
adc
xchg
call
das
bound
stos
sub
pop
lds
cmp
cld
jnp
in
subl
jmp
fidivs
inc
and
int
push
hlt
jae
outsb
fwait
xor
out
inc
jmp
in
and
mov
aas
stos
jns
fcomip
mov
scas
ficomps
xor
mov
js
fdivl
sub
pop
lods
push
and
xorl
push
inc
xchg
lock
adc
stos
dec
out
pop
pop
iret
mov
add
xchg
imul
sbb
jno
mov
fsubl
hlt
inc
xchg
xor
sub
pusha
jns
mov
inc
cmp
add
push
jge
add
push
and
sahf
imul
es
inc
sbb
xlat
les
into
out
inc
lcall
fcmovnbe
cmpsl
out
les
data16
jb
sarb
test
xchg
mov
lcall
push
data16
cmp
movsl
xchg
ss
sbb
mov
mov
scas
lcall
push
shll
xchg
adc
push
cli
add
aam
dec
hlt
mov
call
jg
rcrb
ret
test
es
add
out
jbe
xlat
jnp
divl
lcall
dec
loop
lods
xchg
push
imulb
mov
lods
jns
adc
sbb
test
stos
sbb
ret
negl
adc
dec
pop
mov
mov
lret
and
out
in
mov
mov
push
jb
fisttps
ja
into
fiaddl
adc
rol
mov
cmp
adc
incb
cwtl
jno
imulb
lods
insl
jmp
mov
xchg
std
push
sub
cs
lret
cmc
add
push
mov
push
push
inc
push
cmp
fs
ljmp
jb
in
sbb
cs
mov
int
sub
cld
call
push
in
shl
sub
test
add
mov
mov
push
sbb
call
call
or
xchg
jns
testl
push
aaa
loopne
decl
inc
push
fstl
mov
and
xchg
push
jecxz
rol
movsb
jns
cmp
mov
movsb
xchg
out
nop
xchg
mov
push
mov
xchg
add
call
jns
lcall
rclb
inc
mov
or
std
or
aad
incl
bound
inc
sbb
jge
mov
xchg
push
add
sahf
pushl
jmp
mov
loop
pop
cmpb
sti
xchg
cmpsb
rorl
cmp
dec
inc
call
cmpl
out
add
sub
into
std
das
ss
pop
rcrl
cmc
jmp
sti
movsb
add
push
jnp
sbb
cmpsb
mov
or
cmp
push
xchg
push
mov
xlat
mov
lea
push
add
in
pop
jmp
lods
out
and
push
xchg
cli
or
add
mov
sub
test
add
orl
orb
adc
push
leave
sub
or
leave
mov
nop
inc
leave
add
add
mov
and
adc
inc
incl
out
and
add
cwtl
dec
push
add
pop
xchg
or
inc
inc
dec
push
or
add
adc
inc
dec
call
push
adc
and
or
mov
adc
test
pop
incl
add
mov
sbb
mov
repz
sqrtps
incl
adc
push
xchg
sub
and
andb
lds
cmc
adc
pushl
jne
scas
in
push
jae
add
ja
pop
lods
add
jnp
pop
adc
call
call
xor
jno
je
mov
push
arpl
push
inc
or
insb
cmpsb
dec
pop
hlt
fistpll
lcall
in
xor
fs
pop
fbld
mov
cmp
sub
pushf
and
fdivl
xchg
inc
in
or
mov
std
mov
push
test
xchg
mov
adc
fdivr
sub
push
in
adc
xor
sbb
add
cmpsl
fsubrs
dec
hlt
xor
xor
jp
test
jp
cmc
mov
stc
cmpsb
xor
cli
fsubs
jo
xor
movsl
fadd
add
jl
adc
cmp
cmp
data16
imul
mov
idivb
dec
imul
mov
scas
test
jno
mov
movl
push
aas
push
nopl
ljmp
shlb
in
sbb
test
and
in
ljmp
push
lret
cmp
add
mov
inc
and
or
inc
and
mov
lcall
adc
jmp
cmpsl
cmp
sbb
push
sub
mov
call
and
adc
sbb
int
into
pop
sbb
and
cwtl
mov
mov
sbb
icebp
cmp
std
push
out
add
and
push
aaa
out
dec
repnz
aad
arpl
test
fisubrl
repz
push
movsl
xor
clc
xchg
sbb
mov
cmp
jg
in
push
outsb
lret
xchg
shll
shrl
mov
pop
push
xlat
sbb
cs
incl
loopne
je
movsb
xorl
mov
fwait
enter
mov
cld
leave
inc
jne
and
call
push
ret
int
sarb
cwtl
adc
mov
push
shll
jb
ljmp
ljmp
stos
mov
cld
ds
and
inc
scas
dec
insb
and
leave
loopne
pop
fdivr
incl
push
sbb
les
mov
cwtl
ds
cmc
mov
insl
sbb
pop
pop
movsb
sar
jg
fsubl
mov
das
xchg
jne
shll
cmp
push
pop
adc
mov
test
adc
adc
adc
inc
add
or
or
push
adc
and
test
enter
add
decl
inc
test
jno
mov
sbb
decl
jb
je
subb
jbe
push
dec
push
xchg
xchg
push
sub
ror
jbe
mov
mov
mov
or
lret
add
xchg
pop
mov
in
pop
and
scas
xorb
call
or
cwtl
xor
mov
xchg
push
call
mov
adc
mov
sub
sbb
daa
push
adc
popa
pop
sbb
sbb
in
sbb
ficompl
mov
mov
push
popa
adc
sub
cmp
sbb
pop
stc
jg
ljmp
pop
mulb
adc
sbb
add
push
and
ds
add
insb
push
aaa
std
lcall
add
push
sti
pushf
fdiv
sbb
gs
or
cmp
inc
cmp
or
xorb
scas
fyl2x
cltd
pop
mov
xchg
push
neg
push
mov
xor
jge
pop
cmp
sub
daa
ss
push
das
int
xchg
aaa
leave
jge
or
sbb
loope
in
mov
push
jb
pop
and
or
outsl
ljmp
pop
xor
inc
push
lret
inc
cmp
xor
xchg
cmpsb
imul
adc
dec
dec
test
mov
fwait
pop
pop
repz
xor
mov
sti
lcall
mov
or
xor
fildl
sti
pushl
inc
filds
pop
xor
sbb
inc
adc
fcmovnu
fdivrp
jg
rorl
sub
jb
daa
pop
pop
and
outsb
mov
pusha
sbb
dec
xor
insl
aas
cmp
pop
pop
jbe
daa
sub
pop
movsb
leave
pop
xchg
mov
loope
divb
cmpsl
sbb
sub
fistpll
add
xchg
jg
gs
and
bound
addr16
pop
or
out
lea
mov
jae
jnp
pop
fildl
pop
xor
test
fistps
divl
lea
xor
jnp
ficoml
arpl
jg
es
scas
pop
jle
aam
scas
xchg
frstpm(287
outsl
scas
pmullw
jno
push
xchg
and
aas
stc
in
jmp
xchg
xor
lods
scas
jo
jge
pop
scas
clc
aam
jo
std
in
outsl
mov
hlt
cmp
and
xchg
add
cmp
movsb
pop
jbe
mov
add
scas
div
sub
push
or
sbb
iret
mov
push
push
stc
jb
push
pop
addr16
fistps
pop
jb
mov
push
sub
sbb
mov
jno
ljmp
pushl
icebp
aaa
push
mov
fistl
repz
xor
mov
jb
mov
call
and
fcoms
repz
or
stos
iret
ror
mov
inc
test
cmp
cwtl
iret
repnz
call
loop
xor
cmpsl
shlb
xchg
ret
mov
or
addr16
hlt
or
das
push
fwait
out
or
scas
inc
mov
cmc
fwait
and
ret
pop
idivl
push
mov
cmp
mov
jbe
sti
fcomip
mov
jge
and
mov
dec
loopne
mov
ljmp
jno
insb
arpl
lods
sub
imull
mov
out
jg
xchg
in
xor
call
bts
dec
xchg
xchg
cmpb
ljmp
sub
pop
sti
cmpsl
shl
jbe
xchg
or
test
fxch
lret
clc
mov
xchg
neg
clc
jno
insb
cmpb
mov
xor
lcall
pushf
fisttpl
adc
jmp
cwtl
pop
sbb
fistpl
divl
retw
fstpt
xchg
movd
sub
mov
and
and
jb
insb
enter
or
xchg
lock
rolb
ret
push
lret
ja
repz
pop
push
inc
addl
mov
mov
outsl
repz
fildll
aaa
and
loope
xchg
push
inc
mov
je
mov
jg
jl
js
add
jae
outsl
mov
andb
push
pop
adc
or
jae
icebp
paddsb
pop
jb
inc
jp
adc
fildll
das
pop
mul
add
dec
cmp
jl
out
adc
insl
loope
sub
jg
cmp
jl
loope
adc
pusha
testl
scas
cmpb
mov
jmp
jmp
stc
std
fcomps
mov
pop
mov
call
leave
push
cmp
inc
bound
cmpb
fildl
notl
inc
or
movsl
add
lret
lea
inc
scas
fincstp
xchg
addr16
sti
xchg
fildl
inc
mov
cmp
mov
xchg
cmp
nop
mov
mov
adc
mov
adc
into
push
mov
adcb
loop
shrb
cltd
fidivl
ja
and
mov
ret
pop
push
add
adc
arpl
sti
cs
divb
pusha
xchg
fmuls
cmp
fidivs
mov
pop
out
das
mov
jge
xchg
mov
cmp
sar
push
pop
fstpt
xor
adc
sub
ret
xor
xchg
es
jmp
loop
inc
dec
test
dec
xchg
outsl
jecxz
fisttpll
adc
push
adc
in
fdivrl
daa
scas
out
pop
addb
adc
out
mov
insb
aaa
pusha
dec
cmp
scas
and
out
mov
mov
push
cltd
mov
adc
rolb
inc
cwtl
aad
mov
scas
or
in
std
in
incl
int
or
push
into
aaa
mov
imul
nop
sbb
adc
or
xlat
mov
fnsave
pushl
lcall
fwait
mov
and
dec
pop
pop
in
xchg
fnstenv
int3
jbe
lahf
decl
or
ds
popf
mov
repz
dec
sbb
xchg
xchg
xor
pushl
or
js
arpl
dec
jne
jno
jns
loopne
inc
push
ljmp
ljmp
push
xor
pop
outsb
inc
xor
push
push
aaa
cmp
dec
ja
jne
dec
xor
insl
or
inc
inc
push
jae
popa
cmp
dec
cmp
push
xor
in
xor
inc
outsl
bound
xor
jbe
pop
push
jno
jae
xor
push
imul
outsl
push
insb
pop
xor
jns
imul
dec
push
inc
jo
inc
data16
pop
cld
pushl
bound
inc
xor
xor
inc
inc
data16
push
outsl
push
arpl
push
push
arpl
imul
dec
or
pop
push
push
inc
dec
dec
aaa
inc
pop
inc
inc
cmp
mov
dec
and
dec
aaa
imul
inc
xor
push
xor
jno
jp
push
ss
mov
outsb
dec
imull
push
outsl
push
push
jp
push
mulb
addr16
dec
decl
pop
inc
imul
imul
push
inc
push
dec
dec
dec
aad
testb
jns
push
jne
dec
pop
jns
inc
push
insl
jns
xor
in
divb
dec
loopne
inc
dec
addr16
jno
push
imul
dec
dec
push
insb
inc
push
push
jns
outsl
dec
xchg
jb
in
pop
outsb
mov
push
push
dec
ja
push
xor
push
inc
loop
sti
test
push
inc
push
push
jno
popa
aaa
ja
ret
pop
push
push
ss
bound
in
insb
bound
je
xchg
or
insb
cld
outsl
imul
fs
aaa
and
mov
je
push
push
insb
inc
out
push
jo
add
mov
mov
cltd
add
insb
or
data16
orb
inc
lcall
and
and
sub
add
add
mov
mov
shl
mov
mov
int3
push
fsubl
int
in
ljmp
sub
adc
jmp
mov
in
dec
inc
jecxz
in
je
jo
out
js
fldenv
inc
cmp
jle
cld
ja
and
ja
inc
sub
outsb
sbb
jbe
add
pop
mov
adc
and
pop
outsb
pop
push
adc
adc
sub
or
pop
sbb
sbb
sbb
jbe
dec
lahf
xor
push
add
adc
sub
insl
sbb
inc
jno
aas
cwtl
xor
loop
fildll
loopne
and
rorl
int
jbe
frstor
mov
or
subl
add
push
dec
adc
outsb
pushl
fucomi
jbe
std
out
jnp
jmp
jbe
dec
add
lods
aad
add
pop
jnp,pt
js
mov
inc
jnp
sti
cmp
adc
xchg
test
outsl
xorb
ss
pop
into
mov
ds
rcrl
in
out
mov
fld
cmpsl
dec
out
adc
ret
jmp
ret
xor
jbe
setno
and
ds
inc
enter
arpl
in
lret
jne
or
xor
test
aaa
outsb
pop
cmp
xchg
rclb
mov
cmp
lret
mov
sub
cmp
sub
leave
frstpm(287
test
scas
leave
jne
push
add
push
or
jb
fdivl
xchg
jo
out
icebp
shrl
xchg
lret
in
iret
mov
nop
mov
sbb
call
pop
std
or
flds
jbe
cs
adc
das
jge
insb
fsubs
das
pop
les
out
jmp
insb
mov
pop
into
loope
jbe
add
loop
mov
mov
ds
lret
in
jg
mov
lds
in
outsl
lock
pop
imul
jb
gs
pushf
cs
fistpll
gs
inc
jb
je
arpl
push
arpl
outsl
fildl
fdivrs
popa
jbe
add
sub
pusha
pop
dec
outsb
adc
imul
push
imul
gs
outsb
jg
arpl
dec
push
sbb
mov
inc
cltd
push
dec
imul
je
mov
sqrtps
jns
add
jb
popa
outsb
arpl
fistpl
push
or
jae
insl
icebp
or
mov
push
pushf
fwait
jge
fs
mov
sub
arpl
insl
pop
pop
or
cmpsl
je
push
imul
or
insb
fld
pop
mov
inc
jns
mov
push
and
xchg
jo
dec
je
inc
inc
idiv
or
jns
fisttps
and
insb
insb
neg
inc
js
stos
movsb
cli
adc
je
jnp
mov
inc
adc
pop
sub
ficomps
inc
fs
or
pop
fs
in
in
inc
imul
pop
dec
inc
rol
adc
and
xor
sub
outsb
xor
pop
mov
mov
ret
insl
jb
push
inc
adc
jo
fcmovnu
jae
imul
push
outsb
push
lea
fsubl
or
scas
add
imul
inc
mov
dec
data16
push
je
inc
ja
pop
cmp
popa
imul
add
or
iret
xchg
cmp
mov
pop
in
int
imul
or
xor
push
shrl
jb
cmp
mov
dec
out
popa
addr16
les
shlb
hlt
cltd
js
or
jbe
mov
popa
jo
inc
mov
mov
icebp
adc
outsb
pop
mov
mov
adc
outsl
mov
push
pop
mulb
je
push
jns
mov
sub
fwait
ucomiss
adc
push
enter
in
cmp
test
xor
pop
sbb
dec
xchg
rorl
sbb
int
xchg
sbb
aaa
cmovg
xor
sbb
rcll
jae
mov
or
adc
test
in
imul
ja
sbb
jns
mov
or
cmp
inc
rcll
or
sub
mov
push
iret
push
and
out
lahf
dec
xorb
popa
sbb
inc
xor
push
mov
mov
cltd
dec
jae
cmp
popa
mov
xor
pop
mov
adc
in
xor
or
dec
mov
shll
sub
xchg
shlb
push
repnz
mov
pop
bound
rorb
xchg
cltd
jno
xor
and
mov
adc
es
jne
das
fsubrs
adc
pop
icebp
or
sub
clc
jp
fsubs
and
sub
lea
loop
je
adc
push
imul
push
push
or
dec
insl
pop
xlat
mov
push
dec
push
xor
inc
imul
scas
loope
insb
and
aad
xchg
and
jno
fwait
shlb
push
out
pop
scas
fwait
xor
adc
cmp
imul
adc
xchg
cltd
sbb
dec
popa
gs
mov
mov
test
xor
dec
jno
mov
cmove
push
xor
or
adc
mov
int3
xorb
and
ss
jg
jb
push
push
jns
push
add
jne
arpl
std
push
push
and
or
mov
sbb
inc
dec
outsb
add
mov
shrl
or
insl
or
inc
inc
xor
gs
mov
inc
sub
je
add
dec
fmull
jb
sub
mov
jne
jmp
or
and
add
add
add
and
adc
or
inc
push
and
add
test
mov
add
and
dec
adc
decl
orb
inc
and
inc
incl
add
nop
inc
add
add
adcl
adc
add
test
dec
adc
adc
add
inc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
adc
push
cmp
andl
inc
add
and
add
nop
push
add
add
push
test
mov
andl
inc
add
and
add
cmp
inc
addl
inc
add
and
inc
push
and
add
addl
orb
nop
add
inc
incl
add
nop
inc
add
add
adcl
adc
add
dec
inc
and
push
dec
sub
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
nop
inc
add
add
xorl
adc
add
nop
push
add
inc
inc
add
add
add
fs
adc
nop
push
add
add
orl
orb
adc
adc
nop
push
add
add
orl
orb
push
add
mov
int3
cld
cmp
push
jb
fdivrp
or
cmp
dec
and
dec
cmp
in
dec
xlat
xor
push
push
add
cmp
dec
shll
push
mov
cmpsb
mov
into
sub
popf
cli
add
aas
add
inc
shll
jle
dec
shll
fsub
lcall
call
imul
imul
imul
xor
shll
cmp
push
xor
sarl
mov
dec
mov
or
cmpsb
imul
cmpsb
imul
imul
sub
cld
push
add
cmp
shll
pop
outsb
orb
mov
into
shll
adc
lcall
inc
pop
imul
imul
shll
dec
pop
xor
shll
js
pushf
scas
lock
popf
add
xor
push
bound
xchg
movsb
mov
xor
rol
aam
in
cmpsb
imul
cmpsb
imul
cmpsb
imul
add
or
and
shll
insb
js
dec
shll
xchg
mov
outsb
rcl
fiadds
iret
pop
or
dec
shll
push
bound
cwtl
movsb
mov
xor
rol
into
clc
dec
shll
or
add
xor
push
xor
shll
jo
mov
lods
mov
iret
dec
shll
add
xor
xor
shll
insb
js
nop
shll
shl
dec
addr16
lret
or
sub
xor
shll
bound
shll
ret
pop
ss
loopne
add
push
sub
inc
pop
push
subb
imul
hlt
add
xor
sub
inc
dec
pop
data16
shll
jle
xchg
test
xor
sarl
cmpsb
imul
cmpsb
imul
cmpsb
imul
clc
push
rorl
add
lcall
pop
push
imul
insb
lcall
sbb
xor
sub
pop
insb
jle
dec
shll
pushf
lods
mov
rcr
out
cli
or
push
cmpsb
imul
imul
cmpsb
imul
shll
cmp
shll
sahf
stos
xor
shll
ret
in
imul
cmpsb
imul
imul
cmpsb
imul
sub
xor
shll
dec
push
pusha
jb
shll
mov
xor
ljmp
cmpsb
imul
cmpsb
imul
imul
dec
shrl
cs
push
shll
mov
dec
rcr
out
cli
push
lcall
ss
push
imul
imul
je
ljmp
xor
cmpsb
imul
cmpsb
imul
imul
dec
shll
cmp
pop
shll
mov
dec
call
cmpsb
imul
cmpsb
imul
imul
xor
negb
iret
sbb
sub
push
imul
dec
fwait
cmpsb
movsb
mov
sbb
sbb
sbb
and
lcall
push
subb
imul
rcr
out
add
dec
push
sub
pop
data16
shll
test
dec
rol
rcr
ljmp
push
and
inc
push
lcall
cwtl
movsb
mov
lcall
add
shll
cmp
shll
lcall
loop
pop
shll
xor
pusha
insb
jle
xchg
xor
shll
mov
shl
imul
cmpsb
imul
imul
cmpsb
imul
sbb
xor
shrl
inc
push
pop
jo
shll
mov
xor
call
shll
ss
pop
dec
shll
test
ss
shll
fsub
lock
lcall
push
cmpsb
imul
imul
imul
add
xor
imul
imul
cmpsb
imul
add
imul
imul
cmpsb
imul
shll
and
inc
dec
shll
mov
movsb
mov
enter
dec
shl
repnz
daa
fldt
add
xor
cs
push
pop
push
xor
shll
lcall
rcl
loop
add
or
imul
imul
cmpsb
imul
shll
sub
inc
dec
shll
xchg
stos
mov
xchg
dec
shl
decb
sub
and
cmp
lcall
lods
mov
imul
iret
add
ss
push
lcallw
jle
mov
cmpsb
imul
jnp
imul
imul
imul
mov
add
adc
cs
shll
jbe
dec
shll
loop
shll
cli
push
das
adc
imul
imul
imul
lcall
xor
cmpsb
imul
imul
cmpsb
imul
shll
jbe
dec
shll
rcr
je
jmp
xor
add
shll
pusha
jb
shll
mov
cmpsb
popa
shll
fsubrp
xor
cltd
xor
sbb
cmp
xor
rcrl
mov
mov
into
loopne
add
cmpsb
imul
cmpsb
imul
lcall
dec
shrl
hlt
add
xor
shll
push
pusha
insb
jle
xor
rorl
outsb
shll
or
lret
xor
shll
ds
pop
outsb
shll
stos
mov
fdivs
ss
aaa
dec
shll
dec
pop
xor
shll
jbe
xchg
mov
lods
mov
mov
dec
hlt
dec
add
and
xor
shll
push
pusha
jb
shll
mov
shll
push
cmp
sub
inc
push
push
jp
xchg
movsb
mov
xor
cmpsb
ret
sarl
cmp
lcall
cmp
imul
imul
pop
cltd
cli
jbe
push
xor
push
pusha
insb
jle
imul
sub
cmpsb
ljmp
shll
orb
mov
dec
shl
repnz
adc
cmpsb
imul
imul
cmpsb
imul
push
shll
data16
shll
mov
xchg
dec
shll
fdivp
add
push
imul
imul
imul
dec
shrl
sub
pop
shll
lcall
les
inc
inc
inc
dec
shll
add
ss
push
xor
shll
js
xchg
test
xor
sarl
cmpsb
imul
cmpsb
imul
cmpsb
imul
in
incb
inc
add
lcall
pop
push
imul
imul
xor
push
inc
sbb
inc
dec
xor
shll
insb
jle
pushf
shll
rcr
cmpsb
pop
ss
ljmp
cmpsb
imul
cmpsb
imul
clc
add
dec
shll
push
fs
shll
mov
sarl
dec
shll
inc
roll
and
cmp
xor
shll
insb
jle
pushf
fdivp
inc
lret
dec
shll
add
sub
dec
xor
shll
push
xor
shll
imul
cmpsb
imul
cmpsb
imul
rcr
call
lcall
dec
push
imul
mov
imul
xor
push
dec
sbb
xor
push
xor
shll
outsb
jp
xchg
jne
push
shll
imul
push
jp
mov
out
cltd
fdivr
dec
aaa
lahf
dec
add
dec
shll
movsb
mov
fsub
in
testb
imul
imul
imul
lcall
push
cmpsb
mov
mov
lcall
addl
inc
inc
cmp
sub
js
sbb
add
insb
adc
pop
lcall
or
add
inc
mov
mov
pop
cld
mov
pushl
push
mov
cmp
xchg
loopne
sarb
sub
jae
add
incl
adc
adc
fcompl
push
in
into
in
mov
in
fisttpll
fcos
in
jmp
insl
xor
cld
push
aam
add
lret
jecxz
cmp
xchg
dec
inc
add
aam
shr
inc
inc
sbb
jp
sbb
shll
inc
sbb
in
sbb
incl
fsubl
loopne
fstl
mov
rcrl
push
sub
incl
in
aam
gs
nop
jecxz
inc
jno
cmp
neg
repnz
inc
push
sub
call
sbb
leave
dec
xor
sub
lahf
out
cmp
or
sub
sbb
incl
jp
fmuls
add
ss
daa
push
das
jecxz
xchg
xor
imul
dec
push
adc
xor
xorb
psubusw
mov
xlat
or
jmp
push
mov
fsub
cmc
adc
into
repnz
je
dec
cmp
ljmp
out
test
imul
addl
mov
clc
adc
jmp
movsl
cmp
cmpsl
cmp
adc
cld
out
sbb
mov
jnp
cltd
clc
dec
out
fdivl
inc
and
adc
sbb
test
out
aas
or
dec
jg
jnp
out
mov
sbb
lcall
shl
sub
push
jmp
push
jo
insl
dec
loop
lret
movsb
and
int
iret
out
daa
jl
out
push
jg
jnp
jmp
cld
bound
mov
jmp
lret
in
inc
ss
shll
dec
push
test
adc
popf
add
pop
in
and
cld
xchg
xchg
mov
cmp
insl
adc
mov
call
fildl
push
push
es
mov
mov
test
and
pushl
fs
sbb
out
data16
or
mov
mov
push
incl
sarb
aad
leave
pushf
pop
sahf
int
mov
push
out
sbb
ret
mov
push
pop
cli
fs
lcall
adc
inc
incl
std
imul
and
dec
jecxz
movl
scas
mov
test
mov
cld
inc
pop
outsb
rclb
lahf
nop
add
xlat
rcrb
and
out
mov
push
add
sub
fs
cmp
push
adc
stos
loop
aaa
mov
ljmp
dec
das
testl
out
mov
fsubrl
adc
lods
xor
stos
decl
stos
sbb
lock
inc
mov
push
cmp
push
dec
cmovs
sbb
dec
sahf
test
sbb
jg
in
mov
fcmovbe
mov
inc
mov
addr16
addb
fistpll
aaa
sub
jecxz
sbb
dec
ds
cmpsl
repz
incl
xor
daa
in
pop
lcall
sar
adc
mul
sti
inc
out
mov
push
push
sbbl
push
out
or
sbb
cmp
mov
add
mov
das
or
jmp
sahf
mov
jns
mov
fdivs
cltd
ss
pop
dec
mov
ja
gs
imul
ret
or
jl
mov
dec
loopne
fstpl
test
mov
push
dec
or
lcall
enter
inc
out
clc
mov
in
mov
push
mov
es
je
outsl
lods
sbb
pop
cli
call
mov
lods
lea
cltd
sub
xor
scas
pop
hlt
xor
js
decl
and
lods
pop
xchg
fldcw
lods
idivl
leave
insl
sub
mov
ds
incl
mov
pop
cmc
jno
outsb
push
cli
pop
inc
mov
mov
inc
jmp
and
ljmp
dec
movsb
jo
inc
dec
and
pop
push
xchg
jecxz
ljmp
add
das
std
ljmp
int
mov
or
mov
xor
les
ljmp
sub
cmpl
shl
leave
push
stos
cmp
pop
repz
xchg
pushl
push
jmp
lods
jl
sbb
repnz
mov
cmp
jge
iret
in
test
adc
call
pop
out
and
pop
bound
iret
jbe
loope
or
adc
xchg
fwait
xchg
data16
pushl
in
adc
mov
insl
rcrl
jne
xchg
push
add
jg
jecxz
popa
mov
cwtl
arpl
bound
inc
jmp
cs
cmp
call
mov
out
cltd
sub
je
stc
les
sub
mov
jle
add
mov
decl
popa
add
jnp
adc
mov
mov
add
pusha
pop
sub
shr
incl
jae
fwait
leave
jmp
dec
mov
sub
dec
push
pop
push
stos
daa
int
jmp
and
out
xchg
pusha
popa
movsb
mov
dec
xor
imul
or
fisttps
sub
dec
lods
xchg
push
dec
mov
cmpsb
leave
pop
stc
xacquire
jo
dec
incl
jecxz
in
out
mov
cmp
push
mov
ss
test
mov
ljmp
jle
mov
mov
xor
nop
push
rcrb
imul
lcall
fadd
dec
pop
stos
out
jne
cmp
mov
mov
fadd
push
jl
test
ljmp
push
dec
int
or
movsl
pop
mov
imul
or
xchg
sub
ljmp
mov
loope
dec
inc
mov
sbb
in
addl
jmp
sar
sarl
mov
loope
add
add
jmp
pop
ja
ja
arpl
popa
lret
aad
and
sub
xchg
xchg
dec
lock
fistpll
movsl
mov
jmp
xchg
clc
test
cmc
lahf
outsb
test
sbb
cltd
fldcw
fsubrl
jno
xlat
addr16
lock
inc
mov
or
push
mov
dec
aaa
cltd
decl
shlb
das
pushf
adc
xchg
nop
dec
pushf
in
add
hlt
dec
sti
cs
dec
call
out
xor
jp
mov
adc
xchg
pop
jg
jmp
stc
push
and
inc
test
sub
cli
shrb
jg
jo
aaa
pop
lods
ss
roll
ss
dec
mov
dec
push
imul
inc
rolb
pop
imul
adc
or
pop
add
pushl
push
jl
xor
adc
adc
lock
and
lret
out
lret
cmp
dec
addr16
insb
pop
mov
ljmp
xor
icebp
stos
pop
inc
dec
outsl
pushf
push
pusha
adc
pop
call
pop
mov
push
pop
test
adc
pusha
lret
call
xor
ret
sub
mov
xchg
stc
ret
mov
ljmp
std
xchg
cmpsb
push
out
fidivrl
pop
cmp
xchg
test
test
fidivrs
call
cld
mov
aam
rcll
leave
in
cs
loope
popf
push
add
in
mov
ljmp
mov
dec
pop
fnstcw
inc
shrl
cmp
pushf
mov
fsub
cmp
xor
pushl
test
cs
inc
clc
daa
sbb
sub
cmp
incl
imul
mov
pop
push
in
loopne
es
adc
popa
mov
arpl
add
add
cmpsl
push
in
mov
pushl
out
insb
or
mov
jl
es
stc
pushf
ljmp
out
stos
jg
mov
stos
stos
inc
mov
das
jge
rcrl
jbe
mov
decl
out
mov
sahf
scas
pop
or
push
lret
push
hlt
fsubp
daa
aad
push
pushf
dec
js
mov
jmp
jp
int
dec
add
mov
fldenv
cwtl
lds
gs
adc
xor
incl
mov
or
jne
das
int
js
xor
mov
jb
dec
cmpsb
out
ljmp
outsb
loopne
addr16
out
push
push
mov
inc
lcall
pop
and
inc
push
loope
cmpsb
movsb
sbb
cld
xchg
movsb
pop
cmp
and
jo
arpl
mov
test
daa
jg
add
push
cmp
in
shlb
jle
adc
std
call
clc
aas
mov
bound
jge
cs
repz
jle
outsl
int3
pop
decl
push
scas
pop
xor
xchg
fists
mov
pusha
into
pop
das
popa
sbb
fildl
push
das
es
mov
fimuls
jmp
mov
xchg
jl
sbb
in
or
pop
xor
jg
push
jecxz
cmp
push
cmp
inc
call
cmp
sti
jo
xchg
clc
ljmp
jg
les
and
push
mov
mov
popa
cmp
dec
and
mov
mov
push
xchg
cwtl
mov
sbb
dec
aaa
jg
or
outsl
icebp
adc
mov
jg
fmulp
stos
clc
pushf
and
cmp
les
ret
lock
sub
movsb
sub
xchg
cmp
jmp
ljmp
scas
insb
insl
pushf
mov
test
mov
sarl
cmp
sti
jne
js
lcall
bound
outsb
push
sbb
mov
sbb
inc
fisttps
mov
mov
out
and
cltd
aad
or
adc
mov
ret
iret
fistpll
fiadds
fdivrl
mov
mov
push
push
stos
adc
push
ja
les
pcmpeqb
or
cld
sbb
ljmp
popa
dec
and
data16
int
negl
stc
xchg
mov
and
sbb
cmp
xchg
call
mov
loope
inc
sub
push
jo
cmp
popa
dec
xorb
or
sub
pushl
dec
stos
pop
push
aaa
sti
pop
push
inc
gs
pop
cwtl
jmp
inc
adc
sar
pushl
jl
daa
icebp
and
inc
pop
push
jecxz
test
jmp
jo
lret
jmp
lahf
xor
inc
inc
mov
fidivs
rcll
mov
ss
cltd
xchg
dec
lcall
dec
sub
cli
icebp
inc
inc
mov
xor
imul
pop
jbe
mov
out
xchg
cli
clc
fcompl
dec
xlat
and
push
loopne
xchg
lret
sub
mov
call
dec
aaa
jle
lahf
leave
push
and
ljmp
jecxz
sub
xchg
mov
lret
push
mov
mov
addr16
dec
mov
and
xchg
repnz
mov
mov
shll
in
loopne
cli
out
pop
dec
into
loopne
mov
cmp
jle
jle
ret
or
adc
leave
shll
xchg
or
push
call
je
rcll
push
jg
ja
mov
mov
lret
jmp
insl
pop
add
sub
dec
negb
shlb
in
call
fsubl
ficoms
cmp
les
outsl
das
icebp
mov
jge
popa
dec
jecxz
stos
add
arpl
je
pop
clc
jmp
mov
out
ljmp
lea
xchg
jo
mov
jmp
cmc
aaa
fsts
addr16
std
jmp
aas
mov
ficompl
mov
sbb
sbb
lods
xchg
cmp
bound
sub
mov
das
rorb
ljmp
xchg
dec
inc
mov
fcmovu
xchg
daa
imul
adc
sbb
or
push
xchg
pushf
jg
adc
lods
adc
xor
pop
incl
fistl
xor
xchg
mov
mov
fldenv
mov
adc
mov
clc
stc
dec
push
mov
pushf
ficoml
clc
fld
fldcw
data16
mov
outsb
push
xor
xor
sbb
or
sub
sbb
incl
xchg
call
mov
test
inc
xchg
hlt
aam
mov
jmp
sbb
mov
inc
out
nop
or
aaa
jo
mov
jae
cs
ljmp
cs
scas
xchg
stos
lock
pusha
lds
pop
pop
negl
push
popf
rorb
or
incl
int3
in
mov
insl
outsl
cmp
adc
loopne
lcall
inc
mov
push
or
gs
stos
dec
idivb
out
jmp
repnz
inc
les
int
stos
and
scas
add
xor
and
add
fistl
xchg
sti
dec
add
xchg
lods
sahf
je
mov
cvtps2pi
push
lcall
ret
stos
adc
add
xor
mov
ja
fsubr
add
inc
ljmp
jnp
call
rcrl
dec
inc
mov
sti
cli
ja
or
mov
adc
xor
mov
inc
jmp
mov
inc
sti
data16
stos
inc
adc
mov
sbb
mov
ljmp
cld
dec
sub
lcall
push
xchg
and
lcall
cmpsl
push
jg
js
addr16
jae
xorl
push
imulb
sub
xchg
adc
xor
pushl
cmp
daa
test
lret
jge
ss
mov
add
pop
xchg
repz
mov
pop
idivb
out
stc
in
int3
xchg
outsl
sbb
sarb
aaa
adc
inc
add
pop
push
mov
lods
dec
fsub
push
dec
mov
aaa
jp
pushl
imul
sahf
loop
idiv
mov
xchg
mov
mov
push
popf
decl
lods
sub
or
push
sub
bound
jmp
cmp
mov
pop
filds
rcrl
jbe
push
mov
jge
adc
incl
notb
mov
scas
loop
adc
pushf
out
mov
cmp
nop
sub
inc
xchg
rorl
pop
fldl
jg
pushl
std
pop
inc
aaa
repnz
shll
jae
xor
test
pop
std
adc
xchg
mov
leave
sarb
mov
push
inc
jg
pop
cli
fiadds
in
test
aam
pop
inc
mov
incl
inc
adc
jno
mov
mov
pop
cli
fisttpl
or
jno
xchg
and
clc
btr
or
mov
in
and
mov
xor
ds
jmp
stos
loop
cs
sbb
das
mov
data16
xor
push
push
mov
cmp
adc
xchg
cld
inc
xchg
out
jg
cwtl
fdivrl
or
into
push
push
mov
popf
jge
or
push
mov
adc
clc
outsl
cmc
hlt
hlt
icebp
ds
cmp
rcrl
pusha
sub
decl
cld
iret
femms
bound
rclb
adc
fdivs
mov
push
data16
das
and
subb
lcall
jecxz
adc
cmp
aaa
es
or
out
xchg
call
std
sbb
ja
xor
dec
pop
in
add
dec
mov
pop
aam
stc
call
cmpsb
fisttps
mov
jne
fsub
pop
pop
repnz
add
cmp
inc
xchg
cmc
adc
ja
jmp
jb
into
or
jo
cmc
sub
call
sahf
lcall
cmp
and
sub
cld
pushf
dec
mov
pusha
mov
sbbb
lcall
iret
mov
mov
in
out
dec
pop
lret
jo
sarb
cmpsb
int
adc
mov
sub
jno
cmp
ficoml
ret
pop
mov
ja
stos
loopne
into
jl
cmp
sub
ficoms
clc
fs
dec
add
sbb
loope
push
pop
adc
lcall
in
push
fnstsw
lcall
rcr
lods
div
and
stc
jl
and
into
xchg
and
jmp
mov
movsb
lret
xchg
mov
and
jmp
incl
in
out
push
inc
dec
fcomps
sbb
int
shrl
decl
jno
inc
dec
addb
in
cmp
incl
cmp
decl
stc
pause
dec
mov
lcall
pop
in
ljmp
and
inc
push
repnz
inc
icebp
sub
lea
repz
sub
jg
es
int
mov
cmp
mov
stos
pop
jno
lock
pop
out
in
icebp
mov
xchg
xchg
mov
clc
push
lds
lcall
hlt
test
clc
pop
pop
xor
inc
out
jb
mov
call
outsl
cmp
shl
xor
pushl
xchg
lea
scas
in
lea
in
lea
jnp
mov
mov
mov
out
loope
or
push
cmc
shlb
jp
mov
push
js
push
shlb
js
pop
aam
mov
in
xchg
daa
sub
xchg
dec
jmp
pop
ljmp
jg
ds
in
sbbb
scas
dec
mov
jbe
inc
dec
pop
add
loop
subb
fistpll
or
jno
add
imul
js
shlb
inc
pop
dec
cmp
pop
sub
filds
pop
cwtl
mov
shr
push
pop
fnstcw
or
mov
test
mov
in
push
incl
lcall
jb
xchg
and
jae
add
fs
sub
adc
jmp
adc
in
xor
sbb
arpl
push
test
inc
mov
push
jbe
jo
notl
loopne
call
in
pop
sub
mov
mov
xchg
loop
mov
lret
cwtl
das
ret
mov
add
aas
mov
mov
push
push
jo
cmpsb
loopne
xchg
pushl
push
inc
or
lds
and
fisubrl
inc
decl
sahf
cli
push
or
stc
xchg
ds
push
ds
out
xor
clc
push
adc
sub
lcall
sbbb
out
repz
jns
sbb
jg
xor
or
cmpsl
decl
xchg
into
or
addr16
repnz
imul
mov
push
and
jmp
outsl
icebp
and
and
mov
push
fcoms
cld
in
jmp
pop
add
lock
pop
pop
repnz
push
xchg
and
adc
aam
lcall
pop
cmp
imul
daa
in
fstpt
xchg
and
mov
and
insl
mov
movsl
cmp
adc
leave
out
jns
jae
lods
ljmp
ljmp
outsb
imulb
mov
pop
ret
adc
jl
or
sbb
dec
mov
jmp
fucomi
das
nop
cmp
das
add
insb
rcrl
or
ss
bound
jmp
lcall
mov
fisubrs
mov
inc
jl
inc
cmc
fisubrs
mov
fidivrl
xchg
push
loop
add
jg
inc
rcl
sbb
in
popf
pop
xchg
and
dec
xor
push
pop
xchg
mov
orl
jge
sar
lcall
sarb
aaa
adc
mov
das
mov
sahf
js
ljmp
incb
aaa
jno
cmp
aam
inc
push
or
rep
icebp
aaa
jne
cmp
push
jb
dec
sbb
imul
add
lcall
lcall
movsl
dec
movsl
dec
imul
pop
insb
rolb
push
loopne
pop
ja
pop
mov
push
xor
leave
jae
fisubs
jno
cmp
lea
lahf
daa
loope
jmp
inc
gs
inc
dec
mov
out
dec
cmp
les
jno
cld
shlb
call
mov
test
fmull
fucomip
lcall
xor
adc
jbe
jecxz
cltd
add
lds
lcall
ret
out
roll
push
xor
stos
push
dec
movsb
or
dec
jmp
or
sub
jp
add
pop
cmp
rcl
repnz
mov
rol
js
and
les
xor
or
dec
fs
dec
out
jge
fucomip
ljmp
out
popa
xchg
push
add
mov
test
addr16
adc
ss
lcall
jp
fxch
jno
dec
sarb
adc
push
lahf
inc
arpl
and
mov
and
into
into
je
and
lods
lea
cwtl
xor
jmp
lcall
loope
fldcw
or
int3
ret
push
rcrl
loope
add
into
incl
cmp
inc
xchg
shrl
push
enter
cld
adc
add
sub
incl
mov
adc
add
nopl
test
jg
sub
and
sub
sub
mov
cmpb
jp
out
xchg
jmp
cli
incl
jl
mov
inc
jmp
dec
jbe
xchg
add
xor
sbb
inc
je
test
ret
dec
pop
popf
fnstenv
push
or
mov
mov
mov
jl
idivb
pop
mov
jnp
push
jb
mov
incl
mov
mov
insb
leave
pop
sbb
sbb
test
dec
loop
out
shll
lcall
lret
pusha
sub
mov
inc
les
out
push
mov
test
pop
call
mov
jl
movb
mov
pushf
les
aam
sti
mov
fildll
and
ret
rcrl
test
push
cs
push
sahf
jns
jmp
gs
jne
scas
inc
xchg
jno
xor
mov
mov
jg
mov
andb
jecxz
cmp
or
cmpsl
iret
into
sub
arpl
decl
lea
stos
mov
js
inc
stc
and
fidivrs
imul
aaa
ds
pop
mov
jecxz
aas
dec
pop
mov
adc
in
push
ljmp
jmp
mov
cmc
cmp
and
inc
sbb
incl
cmp
sub
jl
fcomps
mov
lock
mov
pop
or
repz
cmp
incl
lcall
sub
add
adc
arpl
and
inc
cmp
mov
cmpl
decl
leave
cmp
pop
jae
incb
inc
dec
inc
add
ljmp
inc
mov
aas
out
ds
dec
sub
jmp
add
aad
insb
in
pop
and
adc
aad
xchg
in
lret
sub
jmp
xchg
cmp
xchg
push
sub
and
sbb
inc
sub
dec
les
inc
outsl
outsl
mov
insl
xchg
jg
jg
adc
cmp
daa
test
jnp
mov
call
cmp
mov
int
adc
aam
aaa
adc
inc
jle
ljmp
imul
xor
mov
cld
sbb
xchg
shll
pusha
lods
adc
imul
call
cmp
jbe
jp
loopne
mov
adc
mov
repz
lahf
lods
push
pop
ljmp
pop
mov
mov
or
jns
stc
rorl
rorl
mov
lret
dec
dec
pop
push
xchg
adc
imul
fwait
jecxz
jg
ljmp
in
mov
mov
and
fisubrl
call
dec
enter
pushl
outsb
push
xchg
aaa
push
or
jo
and
stc
xlat
dec
arpl
adc
push
sar
test
je
insb
adc
out
ss
movsb
imul
cmpsl
pop
das
icebp
cmp
test
mov
shlb
cld
mov
or
hlt
pop
ljmp
jmp
dec
shrb
fsubr
scas
int3
pushw
scas
mov
sbb
adc
mov
mov
or
mov
jne
sbb
inc
lds
test
scas
fwait
outsb
test
call
mov
push
addr16
dec
movsb
div
loopne
mov
and
test
aaa
clc
decl
insb
fimuls
call
test
mov
lods
dec
inc
mov
stos
ss
pusha
sbb
clc
adc
jb
jp
ficomps
mov
xchg
popa
fsubrl
aas
mov
or
ss
push
push
pop
xchg
inc
dec
test
fsubr
insl
ss
loopne
and
jmp
aam
ret
shll
cmp
rclb
lahf
jecxz
or
inc
scas
push
jecxz
scas
iret
mov
jmp
jne
repnz
mov
aad
dec
ss
imull
in
mov
incb
int
sahf
jbe
movsl
out
loop
or
add
cmc
out
xchg
in
lods
mov
jb
outsl
lcall
cs
fwait
adc
jbe
xor
pop
in
data16
scas
cwtl
fdivrs
pop
jge
cmc
je
cmp
inc
jl
xchg
in
push
bound
jmp
lods
mov
test
pop
push
inc
push
stos
jmp
repz
sub
lods
out
inc
push
sbb
call
push
jne
jecxz
inc
mov
jecxz
push
mov
pop
repnz
push
jg
mov
mov
scas
inc
fisubs
lods
inc
js
jne
or
add
clc
and
insb
das
sbb
rol
push
aas
std
and
stos
jle
push
insl
mov
pop
aam
and
scas
aam
cmp
mov
bound
sub
adcb
incl
jmp
dec
or
loop
pop
shrl
loope
xor
out
sub
add
mov
xor
mov
out
mov
xlat
sub
push
pushl
jmp
cmp
inc
aad
or
movsb
rcrb
jle
cmc
xchg
cmp
fists
mov
fildll
cwtl
sbb
adc
ljmp
xchg
mov
jmp
out
test
adc
sub
insl
hlt
jmp
sub
es
pushf
hlt
jg
into
sahf
pop
xchg
or
fs
lods
mov
decl
pushl
hlt
rcll
mov
push
sbbl
out
cmp
clc
stc
rorl
mov
orb
test
ljmp
or
popf
jae
fstpl
and
frstor
int3
cs
xor
add
or
ljmp
xor
xlat
jge
cltd
cmc
and
mov
test
lock
imul
and
mov
xor
sti
lret
jns
enter
jp
add
iret
aas
sbb
push
popa
into
rcrl
jo
fs
cmp
cld
mov
scas
inc
stos
jb
arpl
rorl
push
fldenv
testl
hlt
mov
dec
shrb
xchg
stc
xor
das
out
push
clc
jmp
inc
mov
test
sub
jnp
or
pop
loop
shr
cmpsb
lcall
push
and
adcl
and
hlt
cmc
add
push
pushf
cmp
icebp
inc
lahf
loope
jl
jmp
cwtl
jmp
ljmp
pop
enter
xor
mov
in
pop
in
jg
pop
jle
pop
das
rorb
sar
inc
outsl
shrb
or
jne
test
shr
shl
ds
aas
shlb
pop
out
jmp
add
push
iret
iret
loop
mov
clc
and
mov
dec
test
js
std
sub
or
push
dec
test
lahf
adc
call
xchg
push
out
rcrl
xchg
repz
xor
popf
jb
push
xor
fucomip
add
shrb
jg
mov
xchg
jp
out
pop
jp
hlt
dec
popf
jecxz
mov
push
lock
jnp
and
rcrb
incl
mov
out
xchg
movsl
and
push
or
mov
xor
sbb
mov
fnstsw
int3
jmp
adc
mov
cli
imul
shr
pop
xchg
push
pop
ljmp
cld
stos
outsl
rorl
std
or
push
cmp
jb
pop
inc
sub
mov
add
adc
or
jmp
lcall
push
sub
add
dec
stos
cli
test
jle
push
out
ja
in
mov
xchg
outsl
push
test
loopne
fwait
scas
mov
xor
xchg
call
pop
push
xor
stc
push
addb
cmp
loope
inc
sbb
fst
mov
add
mov
push
inc
enter
pop
arpl
repnz
mov
sub
sahf
ljmp
xor
test
cvttps2pi
fcoms
pop
xor
test
cmpsb
hlt
pushl
test
das
lea
or
movsb
lret
daa
ja
pusha
mov
call
mov
push
cmpsb
pop
stos
gs
sbb
and
cld
mov
incl
push
aad
add
push
mov
lock
push
push
and
das
sub
xlat
out
scas
push
xor
mov
xor
xchg
outsl
cmc
call
push
arpl
lahf
test
ficompl
stos
adc
lcall
mov
gs
mov
fistps
pop
push
pushf
and
sbb
pop
inc
sbbl
loope
in
data16
aas
aad
and
iret
inc
ja
dec
int
adc
dec
sub
ret
dec
rorb
andb
jnp
lods
jbe
jle
ljmp
daa
lahf
pop
or
push
std
insl
test
and
push
dec
sbb
lcall
repz
push
lret
mov
roll
rolb
test
stos
lds
std
sub
testb
call
mov
jnp
fwait
sbb
icebp
out
push
xchg
cmp
push
and
lahf
pop
ds
fildll
push
xchg
xchg
adc
push
pop
test
xchg
fs
jg
adc
scas
mov
fcmovb
imul
sub
shll
icebp
push
push
jo
loop
fists
xor
mov
push
jnp
iret
lods
orl
popf
sarb
jne
out
mov
sarb
pop
mov
divb
xchg
out
outsl
xlat
pusha
push
pop
outsb
mov
aaa
sarb
fidivrs
aaa
and
add
mov
mov
and
imul
scas
daa
fadds
add
adc
lret
inc
and
xor
int
adc
inc
jmp
fldt
or
hlt
nop
cmpsl
push
sub
ljmp
sbb
inc
mov
push
fs
lods
les
adc
adc
sbb
mov
push
out
in
mov
push
int3
cmp
mov
mov
mov
mov
repnz
inc
dec
ss
xor
sbb
in
fidivrl
fdivl
out
sbb
stc
into
out
ljmp
call
inc
adc
mov
lahf
dec
cwtl
les
mov
sti
shl
cs
adc
mov
leave
aaa
jp
xor
mov
or
jnp
lds
cld
sbb
ret
fidivs
xorl
add
jns
leave
in
sbb
inc
push
ja
mov
stc
xor
inc
pushf
xor
and
cltd
jl
dec
daa
dec
push
vmovshdup
push
call
frstor
mov
int3
mov
aaa
xlat
mov
dec
mov
outsl
cld
pop
pop
fs
lcall
sbb
inc
or
adc
mov
stos
jmp
pushf
mov
addr16
dec
or
mov
cmp
xor
call
jl
cmp
test
dec
jecxz
clc
jno
repz
lcall
int3
and
mov
adc
shlb
std
mov
adc
sub
filds
cli
call
es
jo
lcall
push
jbe
adc
cmpsb
inc
xor
movsl
and
pushl
mov
add
inc
add
sbb
mov
inc
call
mov
mov
hlt
push
call
dec
int
es
orl
cld
movsb
add
sbb
or
rorl
fcmovnu
pop
lea
nop
out
or
outsl
pushl
push
cmp
sbb
pop
loopne
or
dec
mov
int
sub
adc
mov
les
insl
cmp
sbb
stos
jns
sbb
int
aam
push
fwait
xor
aas
dec
out
aas
jge
ret
sub
in
inc
ret
xor
mov
fwait
gs
xor
cmp
jmp
sub
lock
ss
pushl
pop
divl
push
movsl
test
cmp
enter
mov
sahf
sbb
push
lods
cmp
or
cltd
out
xchg
jg
or
inc
cmovg
pop
int
out
aaa
call
xchg
mov
decb
lcall
jl
stos
dec
sahf
xor
lock
dec
sub
sub
icebp
pop
clc
and
fiadds
pusha
outsl
out
ret
repnz
mov
dec
pop
ds
sarb
clc
sbb
into
aam
aaa
mov
xor
call
lcall
outsl
bnd
jne
cmp
mov
jo
push
xchg
lret
clc
call
xchg
push
cld
adcb
sub
bound
in
push
stc
jb
sub
shlb
mov
pop
out
dec
cmp
out
xchg
ds
fsub
orb
dec
fucompp
add
pop
in
lcall
pop
mov
icebp
out
je
in
jg
mov
scas
pop
or
ljmp
enter
outsb
ljmp
push
dec
in
push
mov
cmpsl
popf
stos
sub
pop
lcall
fsubrs
aad
cltd
adc
and
and
jb
test
faddl
aam
data16
ljmp
push
and
push
iret
leave
fwait
push
push
movsb
and
movb
jbe
mov
xchg
ljmp
and
xchg
push
push
div
jb
pushf
leave
cwtl
inc
push
outsb
flds
fndisi(8087
cmp
add
ja
add
inc
pop
sub
mov
call
ja
and
lods
or
mov
jns
rcrl
mov
jmp
mov
sarl
imul
sub
leave
xor
push
push
inc
jmp
cmp
rcrb
mov
xor
jno
cmpsb
add
push
rcl
dec
in
xchg
sti
icebp
ljmp
mov
jo
dec
jl
add
repnz
in
or
clc
ljmp
jl
lock
fbstp
inc
test
addr16
lods
dec
cld
aas
std
call
cli
dec
scas
arpl
dec
push
cmc
nop
jmp
lahf
ljmp
das
imulb
imul
cmpsb
test
jmp
test
fmuls
movsb
cmp
sub
mov
jg
xchg
rcrb
add
mov
mov
mov
pop
push
or
and
gs
mov
fdivl
pop
das
inc
outsb
add
ljmp
pop
lcall
sbb
ja
imul
xlat
out
sub
adc
in
xor
rclb
mov
enter
out
inc
push
fs
xor
ljmp
add
in
mov
dec
or
sbb
enter
or
loopne
incl
sbb
mov
lods
ja
xchg
xchg
outsl
dec
pop
in
pop
lods
loop
pop
mov
incl
jl
jmp
cmc
in
gs
and
or
adc
rorl
outsl
add
iret
movsb
out
aam
inc
inc
jg,pt
std
xchg
js
adc
mov
jbe
inc
ret
cld
sbb
lods
gs
xor
adc
ljmp
sbb
mov
scas
jb
mov
lock
das
mov
xor
call
es
loopne
mov
mov
sub
ss
insb
decl
movsl
cld
pop
out
ljmp
and
xor
jmp
add
push
data16
js
xor
push
loope
adc
mov
pop
cli
outsb
jecxz,pt
cltd
sbb
outsl
add
clc
mov
sar
lcall
push
int3
int
test
insb
xor
pop
mov
or
sub
cmp
pop
inc
or
adc
std
lahf
cmp
push
and
jmp
arpl
lock
pop
mov
xor
shll
fidivs
fmuls
orl
aaa
jnp
cltd
jnp
cwtl
mov
cmp
in
adc
aaa
into
int
push
lret
cmp
push
sub
dec
ds
popf
rclb
fnsave
xchg
rorl
lcall
sub
or
mov
lds
int
repz
aaa
pop
jg
ljmp
mov
and
jge
lods
gs
mov
push
dec
lcall
jmp
push
jns,pn
jb
enter
push
or
sti
imul
ret
or
pushl
ret
sbb
sbb
and
xor
lahf
cmpsl
rcrb
lret
and
outsb
cltd
inc
lcall
call
out
shlb
imul
out
call
lcall
mov
adc
pop
mov
lock
inc
in
popf
pop
arpl
fisubrl
aad
js
rclb
mov
jg
dec
test
das
cld
ret
pop
and
push
arpl
lods
repnz
xchg
cmp
push
dec
movsl
lods
cmpb
das
ljmp
cmpsl
lods
adc
fwait
mov
inc
push
ds
inc
lds
jns
and
outsb
ret
fsts
jmp
or
xor
mov
lods
cmp
mov
add
pop
jo
jns
and
into
std
decl
mov
into
dec
in
mov
pop
pop
mov
sbb
dec
mov
dec
mov
lret
cmp
aad
sbb
cmp
repnz
lcall
negb
lea
pop
test
int3
lds
mov
jae
mov
cli
ljmp
add
daa
jbe
cmp
adc
iret
shll
mov
pushl
cmp
xor
inc
cltd
scas
shll
sti
out
pop
add
or
hlt
mov
xchg
rorl
das
xor
cmp
movsb
shlb
jge
mov
stos
je
ljmp
adc
mov
test
pop
or
das
lock
mov
jmp
or
lods
mov
xchg
pop
lods
pop
mov
test
cmp
incl
add
pop
cli
icebp
dec
cwtl
xor
stos
lods
mov
push
clc
fstps
mov
jg
mov
mov
add
cmp
xchg
jle
pop
movsb
fidivrl
fldt
dec
mov
out
sub
dec
cmp
push
loopne
ljmp
jl
jecxz
jae
imul
daa
int3
mov
push
cmc
mov
lcall
lret
das
mov
xor
pop
inc
pop
mov
mov
sahf
inc
mov
repz
mov
test
scas
cmp
scas
mov
call
pop
out
jns
in
adc
fistpl
xor
sbb
lahf
sbb
push
fistpll
filds
mov
insl
out
push
add
scas
in
inc
dec
jg
into
leave
adc
call
lcall
aas
pop
pop
incl
ret
in
push
inc
adc
mov
cmp
push
mov
sahf
pop
fwait
lret
jl
pop
and
int3
push
mov
call
inc
cmp
jp
cmc
cltd
mov
add
hlt
push
iret
fnstcw
out
icebp
mov
fistpl
inc
call
inc
mov
inc
pop
mov
mov
jb
jbe
push
fisubl
push
outsb
loope
mov
cmp
push
add
test
mov
mov
movsb
cltd
push
and
out
clc
lods
jle
sub
ljmp
in
and
push
fucomip
push
subb
shrl
out
cmp
shll
adc
movsl
in
call
pop
pcmpeqw
dec
gs
jg
leave
shll
icebp
sbbb
xorb
push
jmp
das
cmc
test
sub
sbb
movsb
mov
add
cld
dec
std
decl
dec
int
loope
js
fdivrl
mov
cmp
lock
jecxz
mov
sub
push
out
mov
pop
clc
jl
call
sub
sub
jmp
iret
loop
or
jg
fstpt
repz
icebp
cs
jge
in
xor
mov
adc
fucomip
aas
cmp
test
shlb
int3
lock
mov
cmp
pushl
lcall
jbe
insb
ffreep
addr16
push
xchg
shl
mov
dec
push
test
in
leave
decl
fs
lock
cmc
pop
sbb
lods
stos
push
push
adc
pop
sub
jp
pop
sub
mull
clc
push
mov
cli
add
xor
cmc
mov
cld
adc
cmp
sbb
jnp
lds
xchg
or
lcall
jecxz
je
test
or
lods
in
das
insl
push
jbe
sub
call
sbb
icebp
int
fstps
jnp
in
sub
je
sbb
outsl
icebp
sub
mov
mov
pop
xor
cmpsb
pop
outsl
cmc
es
cmpsl
inc
hlt
fwait
es
jp
jmp
mov
std
fldcw
das
push
movsb
jg
lret
movsl
cli
pop
push
cld
adc
mov
js
adc
jl
decl
push
or
dec
aaa
fidivs
or
test
dec
mov
pop
xchg
inc
jge
imul
cmp
mov
cmp
nop
scas
enter
insl
fidivrs
lock
cli
jb
push
dec
leave
out
fbstp
xchg
xor
mov
cmp
movsl
sub
fldenv
add
push
adc
decl
mov
orb
addr16
nop
insl
das
mov
out
mov
sub
movsb
inc
fstpt
push
jmp
mov
xchg
cmp
sbb
mov
lock
pop
jae
out
in
mov
push
test
aas
pop
jo
scas
inc
mov
dec
xchg
inc
incl
jmp
stos
and
xchg
xchg
addr16
aam
xchg
add
mov
stos
sub
pop
pop
popl
xchg
les
adc
mov
inc
mov
sbb
popa
test
pushl
cli
ficoms
das
outsl
or
lahf
jge
test
push
movsb
cs
mov
and
xor
int
je
push
in
inc
add
push
xchg
sub
imul
outsb
sbb
out
movsl
mov
lock
dec
xlat
faddl
pusha
es
test
push
jmp
mov
push
jg
pushl
lret
dec
push
or
sub
or
and
mulb
movb
inc
or
xor
add
dec
icebp
fcmovnb
ret
sub
adc
add
adc
jmp
xchg
inc
mov
xlat
mulb
mov
xchg
xor
push
jne
movsl
fbstp
adc
std
jmp
mov
cmp
test
mov
pop
test
lcall
int
xor
sub
cli
sub
mov
popa
cmpsb
xchg
push
incl
cmp
and
out
lock
pop
scas
mov
lcall
shll
add
pop
ds
aad
pushf
call
insb
mov
push
scas
inc
sar
das
fucomp
test
sbb
push
add
fs
jg
pusha
and
sar
mov
jmp
and
fcmovu
push
xchg
mov
lods
adc
pushf
cmp
das
cmc
and
ret
sbb
push
xchg
fidivrl
sti
sub
lcall
lods
push
lahf
pop
addl
fistl
das
scas
pop
dec
inc
xchg
mov
mov
cld
mov
jmp
push
ljmp
or
cmc
aaa
cltd
fildl
dec
sub
lods
clc
aam
adc
jno
sahf
pop
outsl
idivb
jg
fisttpll
clc
mov
xor
or
mov
inc
repnz
cli
pop
mov
jecxz
das
and
jns
arpl
mov
shlb
pop
lea
jno
jns
icebp
jg
jmp
push
arpl
push
test
divb
lahf
ljmp
mov
sub
scas
aaa
mov
sbb
mov
jge
in
aaa
mov
call
mov
in
scas
add
pop
sub
or
mov
adc
cli
adc
and
lock
and
add
mov
and
jg
add
mov
sbb
lods
push
push
xchg
cli
and
lea
or
fcmovnb
or
mov
jl
push
stos
adcb
fs
push
mov
cli
cmp
ja
pop
pushl
in
int3
outsb
in
into
cli
jbe
shlb
jmp
arpl
icebp
jnp
cwtl
gs
fldenv
cmp
push
lea
cwtl
outsb
adc
out
pop
sbb
call
cli
outsl
rcrl
mov
js
and
out
mov
in
pop
mov
push
ja
cmpsl
arpl
mov
or
mov
ljmp
ljmp
dec
lds
daa
sbb
stc
add
push
xlat
inc
and
jmp
aaa
mov
add
mov
adc
xor
icebp
pop
repnz
fnstsw
decl
sahf
es
mov
push
cmp
mov
leave
test
call
dec
mov
jp
shrb
fwait
cmp
ljmp
loopne
aam
les
dec
jg
cli
mov
push
int
lds
jnp
xor
lret
sarl
fimuls
adcl
mov
cli
cmpsl
stc
arpl
test
shrb
lods
add
xchg
fcoml
jg
adc
test
outsl
ljmp
mov
je
mov
inc
mov
jnp
mov
incl
subl
repz
shlb
pop
in
jnp
or
sub
or
mov
jne
mov
into
inc
pop
cs
mov
mov
lret
insb
inc
repz
popa
mov
push
setae
ljmp
cli
dec
push
dec
aad
jb
in
mov
movsl
repz
mov
and
cmp
hlt
dec
push
or
cmpsl
enter
sbb
stos
jno
inc
rcll
stc
xchg
in
lahf
mov
lock
ljmp
xchg
test
xchg
sub
push
repz
lcall
es
outsb
xor
cmp
aad
cmp
mov
test
inc
push
cmpb
add
sbb
in
ret
inc
mov
mov
pop
and
daa
adc
jg
and
ja
mov
in
push
mov
sbb
pop
cli
lcall
lock
and
pusha
xor
pop
test
call
push
push
jno
xchg
add
sbbb
xlat
push
sub
mov
icebp
mov
cs
add
sbb
pop
mov
inc
push
mov
cld
mov
out
outsl
mov
in
mov
jb
data16
decl
sbb
adc
ja
ret
stos
inc
fwait
outsb
pushf
mov
xchg
lcall
ljmp
cmp
imul
xor
jnp
mov
sub
inc
fmull
scas
sbb
nop
cmp
ja
xor
iret
insb
cmp
and
push
pushf
cwtl
jo
xor
inc
call
push
pop
rcrl
aas
fldenv
cli
xor
call
ja
jmp
addr16
and
mov
sahf
adc
mov
pop
sbbl
pop
lcall
cwtl
fiadds
adc
mov
in
jge
rclb
pop
mov
aaa
popa
movsl
call
mov
mov
mov
ss
xchg
pop
mov
decl
xchg
scas
mov
inc
adcb
sahf
fisubl
inc
call
je
lret
leave
push
push
lcall
test
adc
shlb
nop
xor
repnz
adc
incl
js
xor
cmpsl
push
cmp
div
nop
xchg
cli
or
jg
orl
sub
daa
jmp
loopne
dec
pusha
push
imul
mov
les
sbb
add
stos
call
push
xchg
jns
or
adc
test
ja
fwait
mov
dec
std
lea
call
pop
jg
outsl
mov
lods
fsub
mov
scas
mov
ljmp
in
fadds
inc
repz
je
add
xlat
mov
fimull
pusha
orb
decl
adc
ret
addr16
cli
xchg
xor
inc
scas
inc
fcoms
imul
test
jns
int
sbb
jg
ret
mov
pop
jb
jmp
mov
mov
jg
addl
fmull
sub
test
out
mov
jmp
mov
push
sbb
add
inc
push
mov
and
mov
sub
mov
cmp
jnp
cld
lcall
cli
fisttpll
lea
rol
enter
inc
sbb
lcall
dec
ljmp
sbb
add
fisubs
lcall
jns
sarl
scas
out
stos
pop
fs
pop
adc
mov
stc
fwait
mov
insl
repnz
cwtl
mov
mov
imul
add
scas
xchg
in
jne
or
sbb
subb
stc
xchg
xchg
xchg
mov
aas
leave
gs
mov
mov
decl
stos
pop
sbb
add
sti
pop
jmp
aad
fisubrs
inc
add
fistps
jge
pop
sub
xchg
mov
sbb
iret
rcrl
adc
cld
dec
aam
sahf
rorb
mov
jecxz
or
fwait
pushl
clc
pushl
push
lock
test
rcrb
stc
dec
aam
mov
imul
or
fwait
daa
stos
cli
das
inc
lahf
jp
les
pushf
mov
inc
jp
fimuls
lock
stc
mov
mov
jbe
push
test
mov
outsb
stos
mov
das
pop
loope
cmp
or
sarb
xor
inc
daa
and
add
push
ljmp
xchg
and
sbb
scas
xlat
in
jp
push
jns
sbb
add
xchg
inc
cmp
ja
add
dec
cmp
xchg
fnstenv
xor
int
sbb
xchg
ljmp
mov
sbb
cmovg
lods
jle
ljmp
mov
push
test
lds
jmp
and
jmp
ljmp
adc
aaa
stos
xor
jns
ret
inc
les
push
cwtl
jmp
push
bound
pushl
and
aas
adc
imul
sub
and
loop
cld
dec
insb
clc
cmpb
adcl
sub
stos
ret
ja
sbb
mov
lods
loopne
loop
mov
shl
iret
lock
jg
arpl
jecxz
add
mov
ss
cmp
aam
pusha
call
and
xor
push
sbb
jnp
adc
insl
and
mov
cmpsb
cmpsl
scas
out
xlat
leave
inc
insb
pop
shrl
sub
shl
fneni(8087
mov
add
inc
fisttpll
xchg
mov
les
dec
sahf
push
jge
xor
add
icebp
aas
cmpsl
push
or
xchg
or
incl
xor
and
popa
cmp
das
ljmp
xor
negl
sbbb
shll
pop
fisttpll
adc
push
hlt
call
mov
imul
imul
call
jo
or
push
or
gs
incl
pop
outsb
push
pop
or
loopne
sub
or
or
adc
decl
leave
xchg
pop
sbb
fcomps
sub
and
and
gs
jne
sbb
mov
into
pop
cli
pushl
and
imul
iret
xor
adc
scas
mov
lcall
jmp
mov
push
and
imul
jns
mov
fistpll
punpcklbw
ret
daa
sub
mov
cmp
cmpsb
inc
xchg
fiaddl
mov
mov
mov
sbb
int3
inc
pop
add
fistpll
fsubp
test
xor
outsl
or
sbb
push
int3
xor
lcall
push
pusha
dec
xor
leave
push
push
inc
jecxz
and
inc
mov
lea
lods
jnp
int
inc
std
hlt
lcall
mov
adcb
jge
loope
or
ljmp
arpl
clc
iret
repnz
loope
mov
int
testb
jmp
jmp
insb
sub
fiaddl
fsubrs
pop
lret
adc
ljmp
rcl
insb
xor
add
inc
push
cmp
inc
xchg
mov
mov
loopne
mov
mov
sub
icebp
jmp
fcomps
ja
gs
xchg
jne
mov
enter
bound
js
arpl
decl
mov
movsb
dec
cwtl
mov
adc
inc
add
in
fucomip
jecxz
xchg
popf
jle
rcll
xchg
and
lock
jge
test
aad
out
jmp
adc
test
imul
dec
mov
ficoml
adc
pop
sti
mov
and
in
mov
mov
clc
push
add
movb
jg
lcall
pop
dec
xchg
or
fisubrs
jecxz
pop
cmp
mov
jg
incl
sar
or
mov
inc
pop
out
push
nop
pop
mov
xchg
pop
cmp
add
inc
xor
arpl
and
sbb
jg
sbb
es
out
scas
popa
nop
inc
aas
lods
ljmp
jb
pop
lahf
andb
in
or
outsl
ficoms
and
into
add
mov
push
push
mov
jmp
ret
pushf
xor
call
test
leave
mov
push
mov
loop
loopne
xor
mov
stc
mov
call
xchg
add
sti
adc
pop
cmpsl
cwtl
in
sub
pop
or
xorl
out
movsb
movsb
and
loopne
adc
sub
sub
decl
adc
and
push
jno
jge
idivb
rcl
outsb
cltd
stos
sar
inc
dec
lahf
cmp
ret
enter
data16
mov
incl
je
sbb
pop
lods
ja
push
in
pusha
ja
dec
into
pop
jecxz
sub
fmuls
cli
sub
pop
clc
int
dec
push
mov
jmp
xchg
call
decl
push
jl
push
out
adc
mov
and
andb
popa
push
jmp
loope
and
jmp
push
or
inc
ja
push
push
mov
pushf
and
ret
mov
push
out
test
jp
mov
sub
cmp
ljmp
add
mov
aaa
jp
and
fsubr
lcall
lret
jo
cld
sbb
sub
cli
rcrl
inc
addl
pop
fisubrs
mov
shll
cmc
push
cmp
out
lock
clc
dec
cmpsl
push
sbb
mov
add
sub
and
push
mov
rol
das
pop
ret
inc
stc
outsl
inc
mov
jns
jmp
lcall
iret
xchg
test
jle
xor
push
or
dec
cmpsl
or
or
ljmp
in
jno
cmp
fcoms
and
cs
jg
dec
and
or
cmpsl
cmp
pop
out
je
and
push
scas
jg
popf
mov
cmc
dec
inc
rorl
push
jns
aam
incl
mov
outsb
add
add
add
or
fstpt
add
cmc
fs
push
lret
jno
or
idivw
in
inc
cmp
dec
and
rdtsc
mov
imul
fists
sbb
dec
push
and
lods
test
ljmp
aas
pop
gs
lret
or
aad
lods
gs
lret
sub
lcall
inc
jg
pop
dec
adc
in
lcall
aaa
repz
subl
vmread
cli
repz
jge
and
xchg
lcall
mov
addr16
mov
mov
iret
mov
or
pushl
push
push
insl
jmp
fldt
fildl
sub
mov
jge
sbb
leave
sub
sbbb
rcl
and
lret
int3
daa
addr16
stos
push
jg
filds
sub
pop
push
cli
cmp
call
pop
mov
adc
test
jmp
in
xchg
insl
clc
jmp
cmp
pop
add
mov
mov
mov
add
call
nop
movsb
mov
or
mov
lahf
dec
lahf
aaa
sub
decl
ds
decl
or
push
movsb
fstp
imul
ljmp
mov
das
in
jne
int
call
jmp
xor
lret
ja
ret
loop
fcomps
jnp
incl
lock
xchg
aas
jg
cmc
dec
jge
test
jbe
rorl
and
mov
lret
rorl
adc
lcall
jae
out
push
inc
je
sbb
push
ret
dec
jne
mov
aam
stos
ljmpw
je
dec
bound
cltd
cmp
push
pop
cltd
inc
ljmp
ljmp
push
push
pop
int
mov
or
and
repz
ljmp
imul
int
jmp
fstpl
insb
push
outsl
mov
mov
mov
ljmp
pushf
adcb
cmpsl
pop
sub
add
jl
or
cwtl
inc
loopne
pop
jg
mov
mov
adc
mov
jns
lea
xchg
roll
mov
sub
push
imul
sar
dec
das
xor
adc
iret
push
leave
outsl
mov
adc
aaa
cli
test
sarb
sub
ljmp
clc
mov
ljmp
dec
jno
into
xchg
outsb
cmp
rorb
stc
mov
lret
call
jmp
jo
std
test
xor
or
lods
push
imul
cmpl
std
test
cmc
lret
fbld
pop
or
push
ret
jg
cs
lret
pushf
out
scas
cmp
add
stos
and
popf
int
xchg
lahf
aas
out
cltd
or
add
jl
repnz
test
jecxz
aaa
aam
hlt
pop
hlt
jecxz
pop
dec
push
enter
ljmp
pop
out
and
push
cmp
cmp
xchg
jge
sahf
mov
rorb
call
decl
ja
mov
sbb
jge
push
je
pop
movsl
pop
decl
xor
lret
fwait
mov
mov
xor
adc
xchg
outsb
mulb
pushl
out
xor
int3
mov
sbb
pop
push
popf
daa
inc
fwait
test
mulb
es
xor
fdivr
push
decl
fldenv
push
inc
jo
sub
dec
cld
sti
jno
dec
ret
pop
ficompl
test
and
pop
mov
xor
cmp
jne
insb
push
dec
adc
sbb
adc
xor
jmp
lret
jg
pop
stos
mov
mov
push
fistpll
insl
arpl
popf
or
decl
jb
cmpsl
and
jmp
ficompl
rclb
js
and
push
std
movsb
xchg
aam
cmpsl
jns
inc
jns
nop
js
in
jns
adc
mov
jo
cmc
sbb
pop
std
pushl
out
rorb
pop
repnz
lahf
push
jno
xchg
jl
sti
and
push
insb
iret
lds
and
ja
rol
call
jbe
push
pushf
jmp
add
and
andl
dec
sar
sub
jbe
or
xor
movsb
sbb
cld
dec
add
mov
mov
mov
cmc
pop
aas
jge
ljmp
mov
pushl
xchg
adc
iret
into
addr16
adc
repnz
icebp
and
decl
insl
inc
mov
cmp
movsl
mov
nop
lods
decl
jge
test
sub
mov
cmp
cmpsb
icebp
movsl
adc
pop
push
mov
out
mov
pop
jmp
cmpsb
ret
pop
ljmp
ds
pop
dec
xchg
ljmp
int
dec
push
adc
dec
mov
outsl
cld
mov
enter
xor
jo
pop
dec
adc
je
mov
mov
mov
gs
xchg
pop
call
dec
cmp
jmp
xchg
sub
sti
dec
repnz
cmp
call
ljmp
movsl
imul
push
repz
jmp
lcall
cs
mov
add
mov
xchg
sbb
das
insb
insl
fwait
mov
test
push
sub
xchg
cmp
push
ljmp
cli
pop
rolb
inc
sarl
mov
jnp
mov
sahf
cmp
sub
int
mov
es
dec
cld
popf
mov
loope
ljmp
mov
cmpsb
xchg
or
roll
sbb
lahf
mov
jg
into
repz
out
sub
xor
lret
icebp
dec
xor
mov
mov
sbb
aam
aam
jns
xchg
mov
mov
push
fists
lock
dec
fucomp
lcall
cmpsl
icebp
sti
iret
dec
jne
jmp
jecxz
shrl
and
insb
push
iret
call
cs
lods
jecxz
dec
stc
jecxz
std
mov
fwait
aad
lahf
push
ficompl
sbb
test
mov
inc
sti
add
mov
or
xor
movsl
inc
cmp
fldcw
sbb
js
xchg
cwtl
into
jmp
imul
ret
cmp
aam
mov
comiss
pop
outsl
fucomp
add
test
decl
dec
cmp
and
mov
dec
xchg
es
sub
nop
inc
add
mov
std
call
xlat
out
cltd
out
mov
jmp
setge
shlb
aaa
pop
xor
incl
pop
in
loopne
bound
stc
les
sub
adc
mov
movl
movsl
mov
or
out
andb
push
mov
jns
call
dec
ljmp
sbb
mov
sbb
loop
add
push
loope
lcall
adcl
gs
adc
loope
xchg
rorb
jns
pop
sahf
out
sbb
add
rolb
mov
xchg
xchg
into
mov
or
call
dec
or
testb
sub
and
push
ds
jg
jl
push
iret
and
lahf
iret
add
stos
lods
push
jmp
push
jne
push
push
inc
in
lcall
leave
and
and
inc
mov
cmp
in
rcl
push
out
sub
outsl
pop
cli
add
lret
dec
inc
fcoms
sub
inc
inc
out
push
fimull
into
imul
movsl
sub
xchg
mov
arpl
jecxz
jo
inc
jmp
outsb
and
pop
jns
jmp
cmc
sbb
gs
lcall
mov
cmpsb
xchg
daa
push
jle
fisttpl
push
xor
pop
fs
add
or
cld
decl
scas
mov
fwait
push
inc
stos
frstor
dec
mov
std
ljmp
js
mov
mov
scas
les
adc
push
mov
sti
lret
je
push
or
ljmp
sbb
xor
test
stos
lret
shl
hlt
pop
hlt
loope
lock
ljmp
or
lods
push
int3
mov
decb
mov
ss
hlt
jle
sbb
call
push
mov
fsubp
ret
outsl
mov
nop
xchg
jl
push
aas
aad
jg
pushl
test
imul
sbb
lahf
jg
cmp
sub
sbb
les
jg
mov
or
xor
pushl
push
xor
mov
push
in
pop
shrl
pop
test
or
xor
jmp
insl
xor
in
xor
adc
andb
inc
movsb
loop
jnp
decl
ret
bound
dec
ret
push
mov
cwtl
dec
loopne
rcrb
adc
incl
inc
mov
adc
xorl
mov
xor
mov
hlt
dec
jnp
movsb
pop
and
add
std
loopne
int3
jl
insl
push
xchg
mov
jle
inc
call
cld
push
xor
xor
pusha
dec
loope
pop
push
jb
loop
call
or
dec
subb
fcomip
pop
jmp
pop
in
dec
dec
cwtl
mov
mov
loope
sbb
xchg
in
mov
push
in
pop
mov
inc
pushf
int3
sbb
test
mov
mov
add
loope
je
mov
cltd
push
or
call
mov
pop
and
xor
push
xchg
inc
insb
loop
sarb
das
push
sbb
ljmp
leave
pop
stos
push
pop
mov
pop
fstpl
loop
rclb
popa
pop
jge
and
std
enter
sarb
test
push
inc
push
or
addr16
ror
or
call
das
aam
decl
xor
in
notl
ds
mov
call
iret
mov
ja
outsb
cld
pop
gs
pop
nop
dec
jnp
std
cwtl
das
lret
inc
jge
dec
jns
mov
mov
dec
ss
dec
jl
adc
roll
sahf
jbe
ljmp
push
insb
scas
or
insb
pop
jge
aad
push
dec
inc
outsb
imul
ja
sub
cmp
decl
addr16
inc
cmp
mov
std
and
push
cmc
mov
jo
push
leave
mov
je
sbb
add
dec
mov
int3
and
inc
push
mov
data16
sub
sbb
or
call
or
dec
test
mov
mov
inc
push
push
pop
roll
andb
in
or
sbb
xor
and
jg
ljmp
cmp
fwait
cld
leave
add
aam
mov
pusha
or
dec
sub
jmp
push
mov
xor
ret
jmp
mov
push
cmp
iret
pushl
cmpsb
sti
aaa
inc
adc
cmpsl
mov
jmp
ss
push
xchg
jae
call
mov
jle
cmpl
sbb
fisttps
movsl
dec
aas
lods
and
sbb
stos
xchg
dec
xor
pop
xor
cli
fbstp
call
mov
fadds
mov
xor
xor
call
or
jno
push
add
jecxz,pt
test
or
leave
lds
push
xor
std
jg
sub
adc
jae
loop
cmp
adc
into
mov
into
jb
lcall
or
imul
xorb
movsb
outsl
cld
ljmp
adcb
or
enter
lea
cltd
repz
mov
fistps
pop
clc
xor
inc
fdiv
cltd
cli
ds
fdivr
jg
sub
dec
ljmp
es
mov
mov
mov
jno
in
clc
data16
rcrb
out
call
jne
add
mov
sahf
sub
xor
cmp
adc
push
mov
cmp
inc
pushf
push
mov
stos
es
mov
mov
fcomp
clc
call
fld
das
rclb
loopne
xor
stc
pop
int3
andb
mov
shrb
mov
mov
push
xor
dec
mov
insl
std
mov
fs
add
stc
push
das
icebp
das
adc
and
mov
in
sarb
jns
ljmp
mov
adc
dec
dec
test
lods
shrb
jmp
adc
std
dec
xor
sar
and
push
imul
xchg
idivb
or
xlat
sahf
les
fcmovnbe
sbb
iret
xchg
das
es
mov
unpcklps
int3
sti
jns
popf
inc
adc
movsl
dec
adc
or
mov
mov
and
pop
mov
mov
lods
bound
adc
rclb
inc
in
push
mov
mov
sbb
test
jo
rcrl
movsl
xchg
clc
movsb
dec
js
pop
cmpxchg
add
movsl
push
js
sbb
call
mov
aas
dec
popf
out
lock
movsb
int3
jge
pushl
pusha
in
push
into
push
adc
mov
lock
sti
fidivs
add
mov
mov
adc
fisttps
pop
jnp
std
or
mov
fwait
js
aam
xchg
pop
pop
mov
xor
jnp
add
incl
pop
inc
mov
jnp
movsl
lea
test
sarb
pop
loope
jns
aas
icebp
inc
ja
cld
push
mov
fildl
lods
pop
xchg
fdivrs
sub
sub
push
aaa
pusha
loope
mov
pop
aaa
shl
cmc
jne
push
jecxz
inc
arpl
rclb
mov
sbb
sub
add
ljmp
or
mov
inc
and
clc
in
sar
add
outsl
push
mov
pop
xchg
pushl
or
pop
mov
in
aas
gs
mov
pop
scas
mov
xor
mov
andl
decl
daa
mov
adc
mov
mov
fucomip
call
xor
popf
push
dec
ljmp
cmpsl
push
mov
mov
adc
push
repnz
jl
mov
dec
jle
test
imul
int
cmp
shlb
scas
fiadds
mov
lcallw
decb
inc
push
lahf
or
add
push
add
decl
dec
popa
daa
xchg
pop
inc
xchg
dec
into
pop
pop
test
dec
in
decb
jmp
dec
mov
mov
cmpsl
dec
popa
mov
sti
icebp
pop
cli
mov
ret
icebp
mov
jne
xchg
nop
daa
mov
sar
sbb
sbb
sti
or
mov
enter
mov
imul
jmp
fs
push
mov
mov
cmp
sbbb
add
aam
in
sbb
jmp
adc
mov
movb
dec
dec
mov
mov
rcr
popf
js
inc
decl
cld
jmp
adc
jp
push
add
push
imul
ja
scas
idiv
push
jmp
push
gs
lea
lcall
aas
adc
subb
jg
inc
clc
rol
mov
sbb
xor
fdivrs
push
subb
mov
inc
inc
add
outsb
ficompl
jno
jb
and
outsb
into
mov
mov
or
jae
add
loop
out
lock
hlt
adc
test
incl
adc
lcall
je
outsl
sub
ret
dec
outsl
adcb
imulb
aad
push
cmpsl
xor
jmp
xor
je
fbstp
fwait
add
clc
sub
adc
pop
push
xchg
xor
rolb
add
jp
mov
lcall
call
push
cmp
les
test
pop
fcos
xchg
or
cwtl
jns
scas
or
dec
out
xchg
jp
scas
or
xchg
xchg
clc
ljmp
cwtl
iret
ficompl
cltd
lahf
ss
out
inc
pop
pusha
rcl
pop
add
decl
mov
pop
filds
sbb
dec
adc
mov
nop
fsubrs
cltd
jg
xchg
out
lods
push
lods
inc
clc
sbb
xchg
lods
mov
in
call
ret
pop
pop
push
idivb
pop
sbb
pop
stc
mov
mov
sub
jmp
xchg
sbb
push
lret
pop
and
mov
mov
ret
push
pop
pop
xchg
jp
jmp
incl
iret
in
inc
test
add
xchg
inc
mov
sbb
lcall
std
xchg
cmpsl
sub
sti
inc
push
lea
dec
cli
ljmp
movsb
sub
add
imul
sbb
ljmp
setbe
cwtl
es
dec
jmp
inc
pop
adc
cltd
xchg
inc
ljmp
stos
mov
jnp
inc
outsb
flds
mov
mov
or
or
xlat
outsl
mov
or
ss
test
popf
mov
jl
out
imul
inc
mov
cs
les
insb
and
sub
popa
dec
lahf
adc
hlt
pop
cmp
push
mov
pop
and
push
or
lahf
inc
fldcw
test
in
incl
inc
xor
std
in
or
fiaddl
mov
cli
shl
mov
shlb
mov
in
jg
dec
imul
sahf
jo
pushl
lds
or
frstor
incl
xchg
jge,pn
in
ss
enter
insb
inc
sbb
jg
or
jne
or
ljmp
icebp
xor
and
xchg
lret
inc
in
xor
cltd
outsb
fisttpl
sti
lcall
minps
mov
sbb
sbb
cmpl
fbld
jg
cmp
stos
pop
sub
cli
push
in
adcb
dec
outsl
and
imul
incl
fnsave
popa
push
adc
pop
cli
mov
dec
push
push
mov
push
das
fdivrs
pusha
mov
inc
add
pop
call
clc
call
shlb
scas
stos
fcompl
jg
sbb
shll
mov
incl
les
stos
lods
daa
xchg
idivb
fs
scas
xchg
cmp
insb
pop
int3
test
decb
fdivr
pop
lds
popf
xchg
adc
sahf
ljmp
push
in
pushf
xchg
mov
pop
call
mov
push
xor
jle
lret
lcall
pop
cmpsb
xchg
pop
push
push
clc
inc
aas
cmp
icebp
lret
daa
mov
mov
hlt
inc
cmpsb
cmpsl
jmp
jle
fimull
sub
pop
cmp
push
xchg
inc
test
ret
enter
sbb
mov
mov
sub
jne
cmp
mov
or
mov
subb
mov
inc
inc
cmp
sahf
mov
imul
xchg
test
dec
cs
or
shl
cmpsl
cs
adc
cld
push
mov
mov
jmp
push
rcrl
out
scas
mov
push
mov
push
push
jmp
shrb
andb
out
arpl
mov
cmp
jge
mov
sbb
decl
lret
xchg
push
xchg
inc
ss
mov
inc
mov
jns
insl
cmpsb
jmp
cmp
idiv
and
add
dec
ljmp
pop
fildl
into
sub
cmp
push
cwtl
mov
rcl
adcb
insl
std
push
mov
mov
std
ljmp
xor
mov
pop
jmp
outsb
shll
jo
aad
mov
icebp
adc
rclb
movsl
ljmp
pop
add
iret
pusha
das
jo
mulb
ljmp
cmp
ljmp
pop
or
cld
add
pop
fwait
pop
cli
jg
rolb
add
mov
jecxz
addr16
call
cli
add
repz
lahf
inc
push
or
popf
leave
pop
mov
xor
and
incl
call
addr16
movsb
dec
fnstenv
jns
mov
out
je
or
jecxz
lcall
aam
cmpsb
sarb
faddl
inc
ljmp
hlt
pop
push
es
adc
orb
imul
leave
decl
push
push
xor
or
cmp
lock
xchg
lods
imul
call
add
pop
stc
and
pop
and
mov
adc
mov
arpl
fcoml
call
daa
xorl
negl
push
leave
ljmp
mov
jmp
jmp
std
shll
arpl
add
lds
push
fstps
jae
call
push
xor
int
xor
shrl
filds
push
xor
pushf
mov
cmp
or
pop
adc
addr16
loope
loopne
jp
movsb
add
and
nop
cmp
xchg
mov
out
cltd
push
pop
arpl
adc
add
jne
in
cmp
inc
jnp
xchg
and
jns
je,pn
fcoms
loopne
push
xchg
test
fyl2x
sub
xor
insl
pop
and
push
loopne
adc
push
fwait
outsl
loope
jg
rol
inc
mov
call
xorl
ja
push
jae
dec
aad
and
add
sahf
mov
mov
in
stos
sbb
or
jmp
movsb
xchg
mov
sub
jmp
out
insl
dec
fstpt
repnz
jae
pop
incb
fisttpl
fucom
xor
lahf
ret
mov
lea
rcrb
popf
call
cwtl
ds
cli
jp
fdivr
fidivrl
stc
ficoml
insb
data16
jmp
adcb
inc
clc
sbb
jmp
test
xor
sub
inc
push
lods
enter
call
insb
or
jns
ds
aaa
or
xor
lcall
or
pop
bound
mov
mov
mov
mov
xlat
pushl
cli
ret
xchg
xchg
xor
negb
jle
shll
adcl
sub
mov
int3
loope
or
and
test
daa
ljmp
pushl
xchg
dec
sbb
and
jmp
ret
cmpsl
cmp
push
dec
mov
ds
or
orl
std
and
cs
sub
mov
mov
pushl
jno
mov
test
xchg
dec
xor
ds
enter
mov
or
movsl
fxtract
mov
rol
xor
xor
rcl
jmp
or
fs
jecxz
dec
jnp
mov
and
mov
mov
out
cmp
or
outsl
daa
add
mov
pushl
pusha
adc
mov
sbb
loope
mov
std
or
xchg
lahf
sbb
or
adc
jp
pop
jmp
push
testl
es
or
xchg
aad
stos
push
repnz
ljmp
and
cltd
sub
dec
pusha
popa
mov
popa
lea
dec
in
jg
xor
sbb
rolb
xor
pop
xlat
mov
mov
lcall
flds
std
sbb
sub
jo
inc
sub
jns
pop
pushl
xchg
fs
adc
dec
push
adc
sub
adc
ds
jge
push
add
cmp
pop
call
hlt
repz
xor
mov
bound
loope
and
jne
sbb
pushl
jecxz
aad
xchg
push
mov
fmull
ljmp
sarl
inc
or
mov
cmp
aam
push
stc
add
pop
cmpsl
test
das
outsl
pop
xchg
dec
ljmp
push
mov
les
loope
sti
int3
test
out
xchg
mov
mov
jns
sti
call
call
aad
out
lahf
pop
mov
out
ja,pt
adc
mov
mov
mov
sub
push
ljmp
scas
stc
xor
rorb
adc
cmp
aam
pop
inc
or
pop
xchg
fdivrl
xchg
cmp
je
push
jp
mov
imul
jp
or
pop
cld
pushl
cli
sub
cmp
jmp
xor
out
cmp
push
pop
imul
in
mov
inc
es
popf
adc
xor
jb
and
sbb
mov
add
ljmp
xadd
in
jns
ret
pop
xchg
mov
and
mov
fucomip
mov
rcll
sahf
sub
sbb
mov
lcall
mov
aam
xchg
nop
fnstcw
stos
je
std
incl
mov
jl
call
or
psubq
push
dec
push
pop
std
lcall
pop
mov
push
and
testb
aam
arpl
decl
scas
inc
or
das
sbb
push
and
int3
or
mov
mov
popa
ret
decl
mov
clc
jne
mov
iret
ljmp
sub
mov
push
cmp
inc
lock
jmp
adcl
sbb
push
lods
push
mov
add
je
sub
in
test
jns
mov
cmp
mov
mov
xor
push
dec
push
mov
cs
decl
call
cmp
mov
mov
sub
cwtl
cltd
fdivrs
mov
bound
adc
test
jmp
or
outsl
hlt
jmp
icebp
pop
sbb
into
jne
nop
in
or
in
mov
cmp
dec
mov
imul
aad
cmp
inc
fcomi
xor
mov
cmp
gs
lcall
imul
cmc
cld
cmp
adc
movsb
cmp
pop
insl
and
outsl
lock
mov
mov
in
sbb
cld
jg
rclb
push
inc
sub
dec
dec
mov
cmp
xchg
fildll
lcall
not
push
push
dec
jns
aaa
dec
push
sub
fsubrs
aaa
clc
incl
mov
outsb
adcl
cwtl
push
lea
ljmp
std
aaa
cmp
jge
push
sarb
add
std
clc
fucomi
cmpsl
mov
push
in
jl
pushl
mov
add
mov
std
push
jns
adc
pop
fcmovb
push
in
xchg
sub
test
lret
fnstsw
call
jbe
push
fisttpl
cmc
xor
mov
imul
scas
mov
mov
inc
jns
gs
sbb
loopne
bound
decl
cwtl
mov
outsl
lock
sbb
push
repz
outsb
cli
out
hlt
sbb
inc
xchg
push
cmp
clc
cmp
fcomps
fcompl
adc
mov
ja
imul
xchg
loopne,pn
mov
sbb
mov
sbb
popf
aaa
in
sar
pushl
dec
inc
push
xlat
mov
imul
mov
imul
mov
push
movb
jae
xchg
and
cli
out
out
hlt
push
nop
decl
out
leave
in
cs
mov
gs
sbb
dec
sar
call
ret
aad
imul
mov
xor
xchg
xor
and
call
lcall
clc
mov
or
sbb
fucomi
mov
adc
clc
xchg
loop
xchg
sub
inc
push
decl
mov
mov
sub
sbb
jno
lcall
inc
scas
fistpll
push
or
mov
dec
testl
inc
jbe
stos
loope
enter
aad
mov
call
or
pop
in
lds
insl
pop
jbe
jecxz
shlb
push
mov
decl
sub
xor
popa
pop
pop
repz
lea
xchg
cltd
int
sub
test
decl
pushf
ror
xor
cli
int3
test
push
into
push
push
pusha
pop
dec
test
popa
out
int
mov
imul
cmp
and
in
in
cmpsl
xorl
xor
jno
fimuls
popf
mov
push
mov
xchg
xchg
or
ljmp
mov
sub
pop
push
aad
lds
repz
pop
cld
into
ja
arpl
sub
jbe
int3
das
mov
call
jl
inc
adc
rorl
push
cmpb
xchg
loop
cmp
fistps
mov
push
cmp
or
add
loope
fisttpll
mov
pushf
cmpsb
xchg
mov
ljmp
sub
insl
mov
mov
jge
sub
mov
mov
loop
aaa
int
out
clc
cmpsb
loopne
xor
mov
xor
jmp
fiaddl
jg
or
fwait
jg
mov
repz
jo
mov
clc
test
mov
shr
popf
push
ret
je
jmp
pushl
and
sbb
aad
mov
mov
jp
lock
push
cli
jg
dec
cmp
sbb
lret
push
xlat
dec
ja
xchg
dec
cmp
fistps
fstl
addr16
insb
dec
fisubrl
cmc
mov
sbb
lret
xchg
xchg
sub
negl
fldt
jo
cwtl
sub
jle
lea
loop
sub
scas
cmp
dec
in
fnclex
dec
jg
pop
cli
xchg
mov
and
sub
or
mov
incl
jecxz
movsb
pusha
je
xor
mov
pop
adc
inc
dec
jnp
insb
mov
incl
gs
sbb
daa
sub
push
mov
mov
inc
pop
ret
scas
dec
in
leave
je
pop
cld
mov
shll
iret
sub
js
jmp
dec
int3
mov
aaa
sbb
aas
movsb
mov
mov
fildl
pop
sbb
decl
cld
cmp
leave
and
inc
mov
popf
adc
cs
das
test
lods
hlt
mul
jp
aad
gs
aad
shlb
xchg
pop
inc
mov
call
push
inc
pop
rorl
jg
inc
mov
xor
daa
popf
out
dec
mov
or
inc
shll
out
out
sbb
fstps
jno
inc
idiv
push
inc
movsl
jmp
cmpl
mov
es
sub
mov
ljmp
jle
push
outsl
hlt
xor
scas
push
dec
pop
scas
loop
mov
pop
loop
aaa
sti
adc
pop
push
cmp
dec
into
das
lock
ret
xor
cs
decl
dec
or
lret
and
aad
mov
cmpsb
dec
and
cmp
push
cmp
loopne
push
sub
fsubs
adc
adc
add
mov
pop
sbb
jg
jmp
into
ds
mov
pusha
push
pushf
jns
jmp
dec
rorl
mov
pop
pop
xor
adc
xchg
xchg
jg
jmp
popa
lahf
pop
and
adc
push
test
ss
dec
cmp
jg
movsb
insl
xchg
ret
adc
lock
mov
ficomps
mov
cmp
imul
push
mov
mov
je
clc
xchg
xchg
jecxz
repz
mov
xchg
mov
iret
xor
aam
jnp
jecxz
lcall
decl
pop
dec
jno
jecxz
ret
sbb
jp
push
clc
adc
jbe
pop
pop
cs
decl
fldcw
adc
jnp
cmpsb
inc
andb
inc
test
shll
pop
dec
cmp
ret
mov
xor
cmp
xchg
xchg
es
and
lock
incl
call
bound
arpl
push
jb
push
mov
pop
xor
push
jno
push
xor
dec
ds
xor
dec
push
mov
popa
cmc
lret
inc
in
jg
test
imul
cld
add
into
mov
pop
loop
das
js
xchg
sbb
sbb
jg
dec
stc
xchg
cli
jg
lret
push
mov
pop
cmp
xor
inc
jge
dec
mov
fistps
mov
mov
mov
leave
fwait
out
xor
faddp
int3
pop
cmp
ljmp
or
inc
subb
ds
xchg
add
les
stc
adc
xor
push
dec
mov
insl
dec
mov
sub
cs
ljmp
cmc
pushl
mov
loopne
push
fstpl
ret
mov
push
inc
sbb
jg
div
adc
push
fs
cmp
inc
or
out
jb
sub
jge
dec
pushl
decb
negb
shlb
dec
cmc
fnstenv
ss
mov
pop
xor
mov
jge
xchg
push
jg
call
leave
add
pop
lcall
xlat
mov
repz
imul
mov
ljmp
insb
cmp
testl
rclb
xchg
dec
insb
rolb
lcall
lret
mov
leave
dec
push
sbb
mov
mov
pop
inc
jmp
xchg
adc
mov
and
mov
outsb
cmp
daa
inc
sti
lcall
sar
jecxz
test
dec
inc
pop
adc
sbb
or
cwtl
dec
jmp
rcr
xchg
xlat
xor
scas
int
inc
aad
call
sub
adc
pop
push
or
dec
clc
jmp
mov
ljmp
dec
ret
cli
fmull
xchg
xlat
das
xchg
xor
mov
movsb
sub
jl
lcall
mov
popf
daa
pop
inc
into
les
cmp
enter
test
mov
fstps
add
jmp
pop
fistps
or
push
lahf
lahf
ret
adc
mov
cld
mov
int3
ds
mov
stc
add
adc
cmc
sahf
jg
sub
or
xor
mov
aam
jmp
outsl
ds
add
add
inc
adc
pop
adc
mov
and
inc
cmp
movsb
hlt
dec
call
push
jecxz
or
or
lea
mov
das
icebp
mov
jnp
push
cmp
pop
ret
cltd
add
lcall
sub
ficompl
and
je
mov
pop
jne
xchg
lds
scas
mov
fwait
in
out
int3
pop
loop
decl
dec
test
into
pusha
adc
push
movsb
dec
inc
cs
ljmp
decl
dec
xchg
pop
xchg
in
pop
sti
pop
loop
fwait
dec
push
pop
test
pop
fmull
imul
pusha
orb
mov
mov
pop
imul
fcoms
fsts
test
mov
ljmp
jmp
fs
leave
lcall
cmc
cs
jp,pt
ljmp
xchg
lods
call
pop
loopne
mov
pop
dec
pop
sti
clc
sub
std
jmp
inc
xor
movb
fmul
jne
sar
incl
inc
mov
gs
cmc
mov
inc
xchg
mov
xchg
cli
mov
popa
andb
lret
fsubrp
inc
inc
ss
incl
icebp
sahf
repnz
jb
fucomip
fisubrs
pop
adc
dec
sub
push
xor
xchg
push
jmp
inc
inc
enter
mov
push
in
pushf
cs
add
cltd
mov
aam
call
sbbl
lea
and
ss
mov
pop
xor
dec
mov
test
call
mov
push
out
out
aam
lret
enter
mov
pop
fwait
adc
dec
mov
popa
mov
daa
inc
aam
fs
mov
inc
add
jb
lock
incl
fldenv
mov
pusha
in
adc
fnstsw
ljmp
dec
sub
stos
ret
xchg
fs
out
mov
dec
cld
in
add
jp
pop
loop
cs
jg
xchg
hlt
lods
sub
inc
jecxz
call
call
pop
jae
sub
rcll
adc
mov
pop
pop
fwait
shll
xor
test
shlb
mov
push
pushl
jl
ret
jnp
jo
insb
repnz
push
dec
push
popf
pop
mov
sar
pop
push
daa
rclb
addb
popf
sub
in
adc
mov
and
pushl
and
cwtl
dec
dec
repz
inc
push
lret
xor
adc
repnz
aaa
cld
das
cmpsb
fstpl
or
mov
fisubrl
insb
sahf
js
pop
fsubr
setno
jmp
imul
pop
add
add
adc
sbb
lock
lcall
aam
xor
sbb
pop
inc
test
inc
xchg
jo
int
jp
lcall
sub
aad
xchg
mov
dec
xchg
rcrb
mov
sahf
lcall
sub
test
jo
cmp
dec
and
call
popf
push
scas
pop
pop
or
mov
cltd
imul
aaa
jne
fdivs
pop
jns
out
and
sbb
xchg
sbb
rorb
pop
add
imul
adc
addr16
in
std
pop
sbb
xor
jbe
aam
out
lds
or
jns
and
test
mov
jnp
rcrb
dec
ljmp
and
je
test
or
test
lods
mov
rcll
ljmp
cmp
movsl
add
stos
in
iret
and
ds
push
sahf
aad
test
insl
dec
xchg
lret
fucomip
adc
dec
enter
sahf
mov
sbb
add
mov
dec
insl
sbb
out
push
rcl
dec
xor
jbe
lcall
push
pop
out
sub
enter
test
jne
jl
jnp
cmp
sbb
sbb
out
cmp
add
ss
lret
pop
std
jmp
ret
cltd
inc
cwtl
ja
xchg
les
icebp
out
dec
adc
inc
popa
add
pop
jo
shll
mov
arpl
in
dec
jge
ljmp
jmp
lock
mov
popa
mov
insb
popf
add
popa
and
out
mov
ljmp
xchg
shrb
push
imul
push
fwait
xchg
je
test
mov
xlat
incl
loop
xchg
js
shll
mov
fucomip
pop
popf
stc
mov
stc
pushf
ss
mov
aaa
mov
mov
cld
insl
lods
cld
pop
aaa
cmp
loopne
mov
jmp
jns
sbb
pushf
adc
jnp
xchg
pop
and
ds
jp
popa
ja
jo
aaa
fcmovb
jmp
lret
add
jmp
sti
lods
xchg
adc
push
push
lds
fldl
jnp
add
clc
mov
sub
dec
xchg
in
outsb
push
add
incl
lods
mov
mov
xchg
cmp
lahf
xchg
rcll
add
out
lcall
mov
xor
cmc
jo
pop
mov
jecxz
movsb
or
sbb
sub
jmp
mov
cmp
dec
inc
nop
mov
inc
xchg
xor
fsub
xor
lods
leave
cmp
repz
call
and
cmpl
push
dec
aaa
and
jns
or
mov
bound
mov
repz
fs
jp
std
decl
jae
cli
jo
mov
repnz
testb
arpl
jbe
cmp
ljmp
mov
dec
cltd
jg
sub
stos
dec
inc
jecxz
sbb
test
adc
fcmovnb
loope
push
push
add
adcl
ljmp
je
jb
sbb
jne
lods
bswap
lea
imul
mov
rcll
push
in
xchg
decb
mov
movsl
mov
inc
arpl
mov
cltd
pop
cmp
dec
jle
jg
pop
imul
xor
addr16
loop
xchg
xchg
jmp
fst
sbbb
test
xor
push
jg
push
jg
fisubs
pop
sbbb
ljmp
stc
jl
arpl
bound
insb
mov
shl
pop
pusha
add
cli
pop
loop
jg
cmpsl
dec
mov
mov
mov
scas
xlat
jb
jg
fisttps
fstp
xor
and
lret
pop
xor
stc
addr16
decl
out
mov
gs
pop
and
mov
jp
movhps
lcall
push
mov
sub
ja
mov
jmp
inc
stos
shll
sub
xchg
int3
mov
jg
mov
jl
jo
lcall
push
adc
xor
in
call
cmp
sub
pop
mov
sub
xchg
jae
call
jns
outsl
xchg
jecxz
inc
jp
adc
call
mov
xlat
dec
sub
addl
sub
push
arpl
mov
jle
andl
ds
out
push
gs
ljmp
pop
repnz
xor
mov
mov
mov
adc
inc
dec
fiaddl
mov
xor
mov
test
mov
mov
mov
jmp
jo
adc
xchg
xchg
pop
xlat
adc
mov
jge
cmovs
inc
incl
sub
jae
mov
mov
inc
xor
ret
leave
jecxz
jbe
lret
push
decl
out
es
ret
and
mov
push
xlat
xor
repz
mov
cmp
mov
jl
xor
push
or
shrb
call
icebp
mov
push
jbe
cmp
scas
mov
into
push
jg
mov
pop
test
pop
lret
or
hlt
sbb
lods
xchg
ss
and
or
jne
stos
ljmp
push
pop
or
fildll
cwtl
std
jg
aam
mov
loopne
jl
int3
jnp
push
out
fldenv
pushf
lods
stc
sub
ljmp
outsl
push
fisttpl
push
ret
adc
js
mov
xchg
lahf
dec
sbb
pop
xchg
push
mov
xor
roll
sub
and
icebp
sub
xor
push
pushl
stc
aad
mov
imul
push
xor
cli
inc
call
pop
jecxz
repnz
fsubrl
push
insl
jecxz
cs
dec
cltd
mov
test
jecxz
aas
push
decl
in
cmp
sbb
push
or
sbbl
sub
push
cmp
mov
cli
lods
adc
mov
call
jb
sbb
mov
mov
into
cmpsl
lret
popl
int
mov
mov
subl
and
loope
nop
jg
das
hlt
jne
aas
sub
mov
or
or
sbb
mov
pop
cli
push
add
idivb
test
pop
hlt
inc
das
pop
lcall
push
decl
mov
cmpsl
subb
add
push
lcall
call
inc
dec
daa
dec
push
mov
jb
outsb
add
das
hlt
sbb
xlat
leave
lds
cli
fists
mov
mov
enter
sarb
jg
test
mov
pushf
imul
and
xchg
mov
pop
outsl
inc
ljmp
int3
loopne
and
pop
pop
comiss
rcr
lds
add
test
jbe
xchg
sub
inc
jle
rclb
out
push
add
xchg
cmc
xchg
rcrl
ljmp
xor
cwtl
pop
or
xor
or
movsb
inc
jo
fldt
jns
ja
sbb
and
jg
push
mov
aaa
or
fisubs
pop
fsubs
mov
mov
jp
and
lret
fisubs
sbb
incl
pop
push
test
push
cmpsb
bound
adc
ljmp
xlat
mov
mov
inc
call
stc
cmp
lods
mov
iret
jb
pushl
xor
iret
scas
aam
adc
pop
pop
mov
dec
bound
addl
ret
js
or
icebp
cmp
outsb
pop
inc
pop
mov
arpl
mov
cld
dec
imul
mov
leave
push
cwtl
rorb
lea
pop
int3
jl
dec
mov
inc
jl
fsubl
fstps
fistps
iret
adc
dec
testb
int3
pop
ret
push
push
in
frstor
gs
fildl
ja
mov
imul
mov
decl
sbb
adc
call
fcomps
and
lock
mov
mov
adc
jecxz
movsl
xchg
ret
jae
and
ds
cwtl
and
lcall
push
fldpi
mov
add
loope
mov
int
pop
xchg
and
sbb
sub
xchg
or
iret
fwait
test
mov
lcall
dec
in
sbb
mov
mov
bound
loopne
data16
xchg
jle
pop
insb
pop
out
jb
outsl
lock
dec
pusha
xchg
cmc
into
jb
ret
sbb
fdivrs
imul
stos
lcall
aas
aaa
push
xorb
dec
lods
movsb
scas
movsl
dec
xor
push
jge
mov
jo
jne
jg
pushl
pop
cs
jmp
stos
xor
xchg
hlt
call
lahf
popa
mov
and
sub
in
adc
dec
cli
es
jo
mov
decl
push
inc
adc
jne
push
les
push
cli
arpl
leave
mov
jg
dec
fisttpll
loope
aaa
icebp
jb
jp
popl
lock
jae
xor
add
jo
test
mov
insb
cmp
movsl
sbb
jg
jnp
sarb
push
movsl
pop
add
decl
lds
cmp
or
sahf
sub
jg
decl
loopne
mov
jns
inc
int3
paddb
sub
rcl
bound
inc
mov
and
arpl
repz
cmp
dec
inc
and
ror
into
shll
sbb
mov
aam
stos
mov
mov
xor
sub
fstp
loop
dec
std
mov
shll
xchg
out
scas
inc
inc
xchg
fadds
std
js
rcrl
sub
jo
cmp
pushf
mov
inc
lea
jg
xchg
movsb
jnp
mov
movsl
inc
cmpsl
mov
pop
test
cmp
or
sbb
fsubrl
mov
pushl
clc
je
mov
fcompl
testb
pop
or
enter
ret
mov
jp
add
add
mov
ljmp
xor
daa
mov
xor
mov
test
pushl
inc
sub
mov
rorl
and
sub
sub
out
test
sbb
jmp
mov
stc
inc
pop
mov
fwait
cs
dec
push
xor
push
or
ficoml
mov
std
pop
rorb
mov
out
dec
aam
sbb
push
incl
addr16
mov
mov
pop
pop
ljmp
pop
push
test
add
cld
and
lods
cld
mov
mov
cmc
fwait
sub
adc
addr16
sbbb
inc
decl
pop
sub
loopne
adc
test
je
inc
add
add
call
adc
push
aam
clc
lea
mov
ljmp
and
nop
mov
cmp
mov
ljmp
out
xchg
insl
cmpsl
sbb
insb
insb
je
movsl
lcall
pop
loopne
xor
test
mov
ds
sub
ljmp
jl
ds
pop
jge
fldenv
insl
mov
lahf
and
xor
rolb
fucomip
fmuls
aam
bound
cltd
out
pop
and
aaa
xchg
mov
xchg
inc
cmp
lcall
xchg
sbb
fcoml
xchg
in
outsb
fisubrs
clc
jae
adc
test
adc
decl
ljmp
pop
add
jge
outsl
fsubrl
fcomps
adc
or
fcmovne
wbinvd
mov
lcall
xchg
stc
ljmp
dec
jb
das
std
call
stc
aaa
outsb
out
push
mov
lea
push
jecxz
cmp
incl
mov
lea
cmp
push
jl
push
fcomp
sti
add
andb
pushl
and
data16
arpl
bound
inc
cmc
push
or
mov
cli
sbb
movsb
aam
pop
xlat
cli
data16
loope
fiadds
test
pusha
mov
ljmp
fwait
aad
call
movsb
jne
mov
test
test
mov
mov
decl
add
outsb
or
nop
es
mov
movsl
icebp
scas
or
in
std
fadd
lock
push
mov
pop
inc
lods
jmp
enter
pusha
lret
dec
fsubs
jae
cmpsb
movsb
test
test
push
jae
sbb
push
lcall
in
sub
xchg
cmpsl
loope
cmp
inc
inc
sub
enter
sti
popf
mov
cs
xor
movsb
std
lds
jmp
in
mov
jmp
push
lds
lods
pop
ds
js
mov
hlt
jmp
mov
scas
dec
in
imulb
cmp
movsl
movsb
inc
push
jne
nop
testb
cmp
push
ljmp
cld
mov
inc
and
mov
stc
das
and
in
pop
stc
or
jg
xchg
addr16
lret
xchg
mov
jmp
adc
cltd
cltd
push
hlt
fildll
or
fwait
jge
sub
insb
cmp
mov
jo
bound
xchg
mov
inc
in
dec
insb
daa
inc
iret
pop
pandn
mov
add
out
push
cmp
push
mov
push
sub
sub
fidivl
xchg
pop
pop
clc
jnp
les
adc
lds
xor
ror
inc
cmp
std
pushl
fildl
dec
push
mov
sub
xor
arpl
outsl
decl
sbb
push
lods
cli
stos
orb
incl
jg
data16
insb
mov
test
mov
dec
ret
inc
hlt
addr16
fwait
fs
mov
pop
fsubp
out
es
pop
ljmp
data16
stc
jmp
jo
xor
push
dec
scas
sbb
jg
push
sub
mov
lea
xchg
push
inc
xorb
inc
aaa
pop
ljmp
lcall
call
and
push
xor
sti
pushf
cmpsl
mov
bnd
adcl
addl
das
rcll
std
das
push
std
jno
stos
into
testl
push
rolb
mov
popa
xor
adc
gs
sti
inc
cwtl
lahf
jmp
mov
gs
scas
pop
push
adc
sarl
cmp
dec
aas
or
inc
cmp
je
decl
cld
ljmp
inc
and
jl
insl
mov
loopne
pusha
fstl
dec
add
pop
lret
ljmp
add
sbb
push
leave
jns
div
imul
loopne
lock
cmpsl
pop
add
out
shlb
test
ljmp
adc
pop
mov
xchg
loope
jbe
inc
insl
sbb
fstps
xchg
sub
jecxz
aam
push
jp
or
mov
pusha
adc
pusha
mov
jecxz
sbb
jle
xor
mov
mov
or
fdivrp
mov
fisubl
mov
cmp
mov
test
pop
cltd
pusha
in
rorb
xchg
call
sbb
jle
sub
mov
mov
idivl
stos
push
iret
xor
hlt
adc
negl
mov
mov
mov
in
mov
and
in
pop
sahf
xchg
dec
push
jae
out
push
mov
fisubrl
push
fistps
dec
pop
int
mov
mov
call
xchg
imul
and
mov
lods
xchg
inc
pop
cli
sub
call
cmpsl
xor
jle
xor
testb
add
inc
pop
inc
pop
popa
inc
cmp
push
mov
imul
xchg
stos
scas
xor
fwait
js
pop
xor
leave
iret
in
cmp
sti
or
imul
lods
sub
and
iret
adc
push
fldt
ds
sbb
ja
ss
push
pop
divl
xchg
das
icebp
fldenv
cli
pop
lret
pop
repnz
jno
push
lods
sbb
lret
inc
arpl
pop
cli
lods
xchg
mov
adc
sub
cld
mov
jg
xchg
dec
in
push
fnstsw
ja
push
mov
out
jg
divl
out
jne
nop
jg
in
adc
call
mov
es
roll
cmpsb
popf
pop
out
mov
sbb
cmp
xlat
sbb
test
into
testb
pop
dec
jnp
mov
mov
rcl
stos
lret
pushl
insl
ss
inc
sub
int3
scas
push
outsb
ror
mov
sub
imul
jnp
pop
call
cli
fiadds
sbb
cmp
jns
jp
outsb
adc
jg
popa
cmp
test
outsl
loope
mov
in
ret
out
and
pop
cmp
aaa
out
fucomip
hlt
push
jb
jbe
jge
mov
addl
jns
ljmp
sub
cmpsb
mov
cmp
mov
jne
movsb
mov
fisubs
movsb
repz
mov
incb
out
xchg
xchg
decb
or
or
cmp
sti
mov
cmp
repz
jg
sub
pop
fs
adc
cmpsb
dec
sti
fstl
mov
jae
jg
ficompl
imul
fbld
cmp
loop
cmp
mov
pusha
clc
push
nop
xor
inc
cmc
sbb
mov
sbb
add
aaa
clc
cmpl
sbb
inc
mov
fs
out
mov
stos
sub
jg
push
jbe
jo
test
movsl
out
dec
mov
pop
and
cli
push
jne
das
or
push
mov
pop
pop
loop
stos
test
jae
inc
pop
test
das
lock
ds
loop
setb
test
movsb
lds
add
decl
add
cmp
fsubl
popf
jmp
cmp
shr
inc
xchg
and
fdiv
mov
in
cltd
cmc
aam
rcr
mov
cmpsl
lahf
ds
inc
daa
scas
push
xor
insb
dec
pop
xchg
dec
test
xchg
clc
jg
inc
popa
sbb
es
jno
jmp
fsubrl
push
mov
mov
mull
ja
add
mov
out
sub
or
insl
ja
cmp
xor
mov
and
call
adc
cmp
popa
dec
mov
fdivl
shll
addr16
or
call
aas
mov
fsts
mov
mov
sarb
cltd
test
xchg
jo
fbld
adc
mov
mov
jg
lcall
dec
outsb
fnstcw
push
mov
in
pop
clc
mov
or
arpl
loop
sub
inc
xchg
pusha
icebp
xor
or
sbb
sub
mov
mov
in
add
pop
in
scas
call
clc
fcoms
cld
xor
adc
mov
aam
cld
iret
pop
push
mov
incl
mov
stos
aam
dec
into
lea
or
cmp
lcall
ret
mov
scas
insl
cmp
inc
lods
ljmp
mov
lcall
or
inc
ljmp
jmp
cwtl
jecxz
mov
push
inc
stos
orl
adc
and
pop
pusha
jmp
or
cmpsl
je
insb
push
mov
adc
mov
ss
cltd
imul
sarb
aam
fisubrl
fadd
fstpt
dec
outsb
daa
mov
cmp
std
ljmp
shlb
or
scas
dec
loop
test
dec
push
or
xchg
imul
dec
cli
mov
adc
push
mov
gs
jg
je
lret
loop
arpl
iret
cwtl
andl
mov
insl
jns
pop
test
jg
sti
lods
out
cmp
jo
dec
jg
and
fwait
nop
notl
gs
or
in
sbb
lcall
cld
xchg
scas
cvtps2pi
aad
outsb
sbb
sub
push
adc
jmp
inc
lret
ret
jns
jne
sti
xchg
fucom
in
sub
int
add
rcrb
jmp
mov
adc
mov
xor
idiv
mov
mov
pop
lock
lods
sub
xor
dec
std
push
loop
out
and
rclb
jecxz
lods
sub
xchg
pop
jge
test
cmc
nop
and
sbb
shl
jl
int
call
ljmp
dec
aaa
addr16
mov
pop
and
jmp
jmp
scas
stos
mov
decl
shl
daa
insl
icebp
xor
inc
add
repnz
hlt
insb
ficomps
dec
and
sar
incl
mov
xchg
loopne
mov
ret
sbb
inc
int3
call
ficoml
aaa
mov
push
push
inc
jns
or
das
icebp
mov
idiv
cmp
movsb
xor
adc
push
cmc
and
pop
outsl
cld
lcall
fiaddl
shl
or
mov
xchg
jnp
out
fistps
sti
adc
lcall
xlat
sarl
ret
and
mov
addl
jmp
incl
sbb
sub
movsb
xor
cmp
pop
mov
ret
xor
mov
popf
mov
push
jno
pop
arpl
test
jg
or
jne
jb
dec
adc
in
xorl
push
pop
sub
call
inc
addl
add
jg
pop
push
jl
addr16
or
ljmp
fidivl
or
int
mov
dec
addl
sbb
adc
mov
or
push
inc
mov
dec
or
mov
pop
cmpsl
cmp
jg
cmp
out
lahf
gs
sti
jle
add
int3
adc
push
jp
mov
aad
jmp
testb
inc
fstl
jecxz
push
jg
sbb
gs
clc
fucomip
jmp
push
into
test
lods
pop
pop
roll
clc
dec
daa
in
jg
aaa
loop
call
push
imul
clc
mov
pushl
aad
jns
cwtl
sub
ret
push
adc
jg
aaa
add
leave
movsl
mov
call
mov
push
sti
jp
xchg
add
and
mov
insb
stc
xor
fstp
mov
loopne
push
mov
leave
adc
repnz
out
frstor
imul
fmull
or
out
stos
inc
test
mov
out
sbb
mov
push
xchg
mov
mov
stos
ljmp
shl
adcb
jb
dec
shlb
and
and
lcall
xor
mov
out
inc
fs
lahf
dec
jne
cmpsl
sub
aaa
inc
fndisi(8087
cmp
xchg
cli
pop
insb
push
dec
out
jns
sub
jo
pop
jl
ljmp
adc
add
mov
aam
cltd
dec
and
dec
jg
xlat
sbb
lods
dec
cld
adc
out
mov
mov
mov
lea
js
aaa
or
sbb
mov
into
push
sbb
aaa
and
shll
sbb
xor
cs
push
mov
mov
loopne
stos
aaa
cmpb
xchg
and
and
or
call
pop
aad
aaa
cmp
js
sub
sub
mov
out
mov
ljmp
mov
fcoml
jae
sub
test
rolb
push
fsub
xchg
xchg
push
lahf
inc
aaa
lcall
mov
pop
pop
inc
insb
outsb
stos
stos
out
subl
push
jg
ljmp
lret
adc
nop
push
js
jo,pt
push
jmp
ret
stos
scas
ja
call
inc
fisubl
mov
ds
fs
shll
out
enter
scas
addl
fnstsw
aaa
sbb
je
mov
jge
mov
mov
mov
mov
inc
push
aam
add
incl
xchg
push
rclb
out
pop
add
cmp
xorb
das
hlt
jmp
mov
jmp
adc
je
out
int
sbb
imul
leave
adc
cmp
adc
lock
pop
pop
arpl
mov
aam
lcall
les
fmuls
sub
cmc
xchg
insb
fcomps
inc
mov
xchg
mov
mov
movsb
cmpl
in
pop
cmpsl
dec
sub
sahf
mov
test
pushl
outsl
pop
jp
aaa
dec
jnp
call
sbb
stos
test
call
aad
mov
add
ss
mov
or
inc
das
add
add
daa
push
mov
push
aad
sbb
jcxz
mov
mov
je
mov
push
fdiv
call
cmp
in
push
or
pop
push
daa
ljmp
ds
xchg
fmull
push
sub
sbb
inc
mov
inc
mov
add
sahf
mov
aas
rcl
mov
or
pushl
pop
jg
sub
pop
adcl
lods
scas
call
ja
push
insl
add
mov
out
cld
call
call
dec
jecxz
call
jmp
test
jae
stos
xor
incl
pop
inc
push
arpl
and
dec
nop
fcompl
jnp
add
and
fisubs
jb
out
stos
cmpsl
xchg
mov
push
sub
out
fbstp
fs
fnsave
inc
mov
lds
fcmovne
ret
test
aaa
and
in
into
add
push
les
repz
lods
push
ljmp
aam
test
sub
divb
loop
rorl
mov
aaa
int
jle
sbbb
adc
push
mov
or
cmpl
xor
xchg
push
popf
push
mov
test
sub
xor
into
push
into
out
fsts
sar
jmp
repz
xor
jo
insb
std
adc
es
push
decl
dec
mov
cmp
sbb
repz
leave
clc
ficoms
int3
cmp
out
rcrb
cmp
xchg
xor
cmp
inc
hlt
add
int
or
mov
jno
ss
aam
push
push
jns
pop
mov
ret
inc
mov
jmp
lcall
mov
lret
mov
lea
xchg
jo
rcrb
cmp
mov
arpl
mov
call
adc
clc
lcall
push
shlb
lret
xchg
aaa
gs
rcrl
fs
out
cmp
lock
pushl
mov
pop
mov
add
cmp
inc
jmp
or
js
ljmp
pop
pop
jbe
sbb
subb
in
mov
lock
decb
pop
orl
adc
mov
js
xor
xor
repnz
icebp
int3
popa
sub
movsl
jbe
shl
clc
into
and
lahf
addr16
mov
push
sbb
rorb
mov
popf
mov
or
repnz
push
lret
mov
jl
push
jg
movsl
rol
popa
lea
cmp
mov
inc
lret
enter
cmp
fiadds
rcrb
subb
xchg
aas
ret
inc
imul
jg
ljmp
pop
clc
cmp
test
sbb
pop
mov
pop
cmp
mov
mov
jg
xchg
fildll
jp
js
adc
sbb
jbe
ret
xchg
xchg
adc
mov
mov
dec
jne
int3
testl
pop
adc
xchg
push
lret
loopne
mov
loope
pop
mov
leave
aas
scas
inc
roll
ljmp
xlat
cmp
mov
mov
push
mov
jno
std
mov
pop
fistps
cmpsl
scas
jns
out
pop
xor
testb
and
addb
lcall
fimull
jmp
push
xchg
test
insb
add
gs
lea
sbbb
test
lea
dec
fnstcw
fbstp
fsubl
sbb
ret
int
and
or
or
pushf
xchg
lods
jle
add
fstpt
ds
fldl
movsl
add
inc
dec
inc
mov
add
cmc
jg
decl
push
cmp
movsl
scas
jl
loop
push
adc
out
dec
push
ja
ret
lcall
sbb
pop
mov
fists
sbb
call
ss
mov
pushl
clc
inc
scas
xchg
push
inc
pop
pushf
cmpb
daa
xor
mov
inc
inc
push
popl
inc
cmp
mov
xchg
sbb
sub
cmp
sarb
decl
out
add
and
test
mov
stos
cmp
lcall
outsl
into
push
out
mov
lds
fadd
add
adc
xchg
mov
sbb
mov
adc
fdivl
pop
clc
pop
mov
dec
into
push
mov
repnz
jmp
jge
int
mov
xor
jmp
jl
movsb
mov
movsb
popf
adc
aad
xchg
xchg
sub
arpl
xchg
cmp
sahf
pusha
cmc
push
xchg
jo
adcb
leave
inc
lods
sub
pushf
jmp
stc
inc
sbb
es
outsl
or
xchg
xor
addr16
sub
loope
dec
repz
stos
lods
repnz
lret
jmp
xchg
shl
sti
mov
roll
push
addb
outsb
or
sub
insb
mov
rcll
cmp
sbb
mov
and
push
int
decl
lahf
jmp
pusha
mov
or
loop
mov
dec
mov
ljmp
mov
push
and
push
stos
bound
sub
insb
out
lahf
sub
and
jae
push
push
mov
cmp
add
in
dec
push
jmp
mov
cmp
push
outsl
jno
stos
rcll
add
jle
add
gs
add
fistpll
and
mov
lret
xor
scas
in
and
cmpsl
ds
cmp
jns
push
scas
cwtl
xchg
out
or
movsl
mov
in
leave
mov
jg
sti
push
lcall
aad
push
hlt
mov
add
lcall
fbstp
or
and
jmp
scas
rcr
push
inc
dec
pop
and
or
das
jne
jnp
cmp
movsb
sub
mov
jg
orb
out
mov
cmc
lods
rcll
jp
jp,pt
inc
outsb
loop
push
imul
mov
aas
xor
pop
in
icebp
fwait
cmpsl
xor
scas
lock
mov
sbb
ljmp
stos
mov
and
movsb
in
push
mov
dec
lret
push
xchg
shrl
les
mov
mov
mov
fucom
and
jb
jmp
pop
lods
dec
rorb
cld
das
cmc
iret
fcmovnu
movsl
stos
xchg
adc
iret
icebp
ja
cmovge
lcall
adc
inc
mov
mov
mov
cmp
stc
int
das
mov
aam
frstor
mov
test
addr16
stos
lea
clc
jg
inc
cltd
test
mov
jns
leave
mov
or
or
out
pop
loop
arpl
mov
lods
xor
ret
gs
arpl
pop
sub
mov
stos
xor
ficoml
cmp
pop
or
das
js
jecxz
sbb
and
push
mov
decl
mov
push
xorl
loopne
add
incl
std
test
stos
xchg
adc
and
xor
int
jecxz
data16
pop
push
jp
mov
sar
call
andb
aam
mov
dec
push
jmp
and
leave
mov
mov
ljmp
mov
sar
cmc
ficomps
aam
mov
enter
in
push
call
cli
pop
xchg
lahf
add
jbe
test
scas
adc
sbb
loop
incl
cld
cmp
filds
sbb
pushf
test
pop
sub
aaa
mov
jl
adc
mov
clc
mov
lcall
sti
pop
xchg
jno
lcall
test
ljmp
xchg
pushl
out
jns
mov
adc
push
movsl
sti
in
push
out
mov
fs
cli
pop
in
cld
jg
mov
lret
bound
fstps
push
or
push
decl
jmp
outsl
mov
cwtl
lock
ja
aaa
gs
sbb
fnstenv
push
lcall
popl
pop
pop
mov
test
sub
shll
jg
push
jecxz
xchg
std
or
mov
pusha
pushf
adc
xor
jnp
decl
adc
idiv
popa
xor
xchg
add
je
sub
loope
cmpb
ljmp
std
aam
push
push
gs
ret
add
mov
inc
aaa
pop
jns
adc
mov
pop
add
cmpsb
cmp
mov
out
inc
mov
rol
push
push
leave
stos
ss
stc
dec
mov
sbb
inc
jle
or
add
fbstp
xchg
and
inc
mov
sub
adc
mov
xchg
push
and
mov
daa
inc
rcl
push
xchg
cmpsl
subb
imul
push
cmpsb
sti
sub
adc
jmp
testb
roll
dec
hlt
jae
pop
push
sub
jecxz
decl
xchg
loop
shrb
aad
repnz
movsl
jmp
outsl
in
xchg
inc
xchg
mov
cmp
mov
nop
mov
dec
fstl
xor
or
insb
cmp
movsl
aas
mov
inc
cmp
aaa
clc
add
and
cmp
fdivs
jne
mov
dec
mov
push
mov
mov
jno
mov
sub
and
sahf
xor
inc
call
loop
dec
in
sub
sbbl
mov
aaa
ljmp
lock
aam
inc
mov
cmc
push
pop
in
and
mov
jg
ljmp
jge
fdivrl
es
dec
scas
jne
mov
outsl
cmc
cmpsb
out
divb
mov
adc
scas
movsl
pushl
or
mov
int
xchg
push
sbb
mov
out
pop
cli
ljmp
repnz
and
arpl
jb
cmp
mov
sbb
ljmp
dec
ss
sbb
mov
ljmp
push
mov
add
call
in
pop
or
test
jmp
adc
jmp
test
shrl
cmp
test
dec
repz
dec
cld
decl
lret
push
mov
add
outsb
xor
cmp
or
dec
data16
daa
enter
xor
xor
ljmp
dec
fists
pushl
add
push
mov
pop
rorb
movsb
cltd
mov
in
push
loop
xchg
dec
cmp
cltd
xor
shl
jg
or
mov
lahf
jecxz
push
add
jne
add
jge
roll
sub
xor
xorb
addr16
mov
adc
cld
test
je
mov
cltd
dec
mov
sbb
lock
push
jae
adc
pushl
lock
lds
pop
inc
std
ret
pop
aaa
push
sub
cli
adc
adc
inc
mov
mov
shl
lcall
add
into
push
jl
aad
adc
pop
mov
cli
das
scas
pop
dec
mov
push
aas
dec
movsl
xchg
and
fcoms
jne
mov
jno
jae
dec
inc
push
into
cmc
xor
sub
mov
clc
mov
daa
imul
lea
cmp
xchg
mov
mov
scas
sbb
clc
push
cmp
pop
je
adc
fisubl
ljmp
add
outsl
stc
mov
imul
dec
fdivrl
iret
jo
mov
data16
call
jb
cwtl
fisubrs
or
sub
dec
pop
pop
stos
cmp
or
push
push
pop
or
cmp
inc
test
mov
call
push
inc
cmc
pop
sbb
cmp
sub
push
mov
fcmovnu
and
mov
out
mov
stos
call
mov
pushl
pop
mov
lock
cmp
push
loope
int
aas
sub
jns
mov
jbe
pop
inc
push
and
or
mov
add
nop
ljmp
and
inc
lods
xchg
xchg
imul
push
test
adc
jge
xchg
adc
ret
or
and
inc
mov
rcrb
insl
jae
mov
pop
loopne
cltd
mov
sbb
outsb
shll
jg
outsl
pop
insb
dec
arpl
in
cli
and
cmpsl
testl
outsl
cld
fisttpl
xchg
shlb
or
push
test
pop
push
jbe
test
sbb
out
jmp
mov
adc
iret
out
inc
jns
xor
add
pushl
repnz
bound
push
sbb
sar
push
add
adc
incl
repz
or
xchg
ret
aam
loope
dec
orl
mov
cmp
leave
push
pushf
cmp
mov
call
adc
inc
sbb
cmpsl
inc
inc
stc
mov
call
stos
inc
xchg
push
cmpsl
pop
ja
mov
sbb
jno
mov
lret
sbb
dec
lcall
or
jg
pop
xchg
aas
push
jo
mov
mov
lods
fstl
das
lock
mov
or
inc
and
rolb
aam
fiadds
mov
jecxz
decl
add
loope
pop
stc
add
roll
rcll
leave
roll
sbb
sub
push
fstl
in
pushf
lock
into
lods
sbb
xchg
jge
aaa
push
incl
fldcw
inc
imul
out
mov
mov
mov
sbb
mov
les
clc
ljmp
icebp
mov
sub
add
xchg
shlb
es
lods
jle
jl
std
mov
fs
adc
lock
mov
sbb
ficompl
lods
and
sub
xchg
cmp
imul
xor
aaa
mov
inc
mov
call
push
enter
shrb
int
stc
ret
outsb
aaa
lcall
jno
jne
xor
adc
mov
out
mov
fcomp
in
rol
sbb
into
int
adc
fsubrl
sbbl
adc
jg
mov
sbbb
mov
out
pop
mov
mov
das
call
or
inc
fsts
jmp
adc
pop
test
xchg
inc
gs
das
icebp
pushl
push
loopne
add
pop
pop
add
sbb
mov
cmpsl
sbb
jg
das
stos
sub
ud0
dec
jae
imul
mov
pop
std
lcall
fisubl
and
sbb
inc
les
xchg
movsb
xchg
pop
js
push
mov
popa
inc
jne
dec
std
decl
pushf
sarb
pop
add
push
shl
jg
push
dec
push
pop
mov
lock
push
in
sub
jecxz
call
jb
rcll
dec
mov
hlt
dec
in
outsl
ss
mov
leave
loop
jnp
mov
incl
lods
or
lock
mov
and
cwtl
cwtl
lret
xor
jo
xlat
cmp
rep
ret
add
call
xchg
jne
xor
ss
pusha
test
push
sarb
shll
pop
or
in
outsb
push
jno
mov
push
push
push
sahf
leave
cmp
ret
incl
in
sbb
shlb
pop
scas
pop
mov
sbb
mov
lcall
incl
mov
sbb
xor
arpl
jecxz
mov
sbb
cmp
push
mov
push
xchg
mov
arpl
sub
call
data16
aam
mov
mov
mov
mov
adc
nop
fwait
push
push
stos
or
xlat
hlt
and
dec
and
sbb
aas
lds
aam
stc
cmp
adc
pop
in
clc
inc
gs
push
in
fs
andb
cltd
clc
jg
outsl
les
add
scas
cld
xchg
push
bound
in
call
pop
xchg
adc
jmp
push
jb
adc
or
add
std
das
lock
call
dec
cmpl
into
mov
decl
xor
bound
or
pop
outsl
lcall
xchg
adc
dec
or
jl
icebp
nop
shrb
xorl
test
in
sub
test
pop
incl
jmp
lods
lods
ror
pop
jne
jb
inc
mov
call
push
mov
xor
pop
nop
inc
mov
mov
jne
xchg
iret
fwait
test
loopne
fucomip
cmp
int
out
pop
popf
out
add
cmpl
data16
ljmp
inc
movsl
jbe
adc
sub
daa
iret
add
jno
gs
ret
mov
fidivrl
pushl
rorl
pop
jecxz
je
push
shl
cmc
jmp
stos
movsl
dec
mov
push
clc
inc
fiaddl
in
xchg
lcall
int3
dec
dec
clc
decl
cld
dec
leave
xchg
sbb
jecxz
fwait
daa
sub
add
cmp
in
xor
jp
ret
outsb
push
mov
dec
add
adc
sbb
sbb
stos
add
fmulp
adc
call
movsb
push
cmp
ss
int3
addr16
lds
dec
mov
repz
in
mov
sub
outsl
mov
xchg
jg
xor
cmpsl
mov
shlb
adc
add
call
jg
jno
jns
int3
lock
xchg
mull
pop
xchg
filds
bswap
lcall
rcll
inc
dec
lret
cmp
or
dec
adc
iret
xchg
sub
sbb
out
push
push
clc
lcall
adc
jecxz
ret
stc
js
data16
stc
les
cltd
pop
lcall
push
dec
loopne
hlt
addl
pop
insl
sub
lahf
rcl
outsb
inc
jg
pop
push
les
or
dec
andb
jnp
xor
test
std
xlat
lea
pushl
cli
movsb
leave
jp
lea
roll
jne
pop
stos
sbb
jg
js
call
fs
mov
mov
fucom
cmp
and
push
jo
ljmp
sbb
jecxz
xchg
sbb
jmp
inc
fsts
gs
sahf
shl
das
fdivr
pop
test
std
mov
adc
repnz
scas
ja
pop
lods
lcall
pop
pop
mov
loopne
or
dec
fldt
fcompl
push
enter
imul
loope
js
ja
adc
lea
fs
movsb
lods
push
add
pop
cld
mov
dec
mov
ficoml
std
add
lcall
cld
sbb
pop
mov
and
shlb
fcmovb
aam
jg
and
out
cwtl
cmp
ret
xlat
adc
pop
sbb
lcall
fiaddl
fistpll
fnstcw
pusha
arpl
pop
adc
xchg
ss
push
xchg
pop
pop
fsubr
cmpsb
add
xchg
popf
ja
add
fcmovne
jmp
or
push
pushf
ja
xlat
sbb
inc
adcl
lret
icebp
mov
sbb
mov
in
inc
jnp
adcl
aas
icebp
jg
mov
imul
add
test
data16
jmp
cmpsl
pusha
jmp
adc
idivl
adc
adc
decl
jp
jb
data16
dec
enter
push
push
nop
xchg
mov
into
out
lret
movsl
in
incl
mov
xchg
movsl
add
cmc
or
pushf
mov
inc
fiaddl
pushf
mov
decl
jge
aad
popf
mov
jl
jg
idivb
loope
dec
push
in
out
jge
mov
into
in
fimull
push
lock
mov
cmp
pushf
xchg
cmp
jae
loopne
lods
iret
adc
inc
movsl
dec
cmp
push
add
add
sub
shl
jge
mov
mov
enter
jg
into
lods
lock
fwait
int
xchg
mov
sub
outsl
cld
mov
sti
je
jmp
mov
push
in
push
loopne
push
iret
out
and
ljmp
aam
inc
push
dec
dec
add
mov
cli
push
xchg
std
inc
in
fadds
push
cmp
pusha
dec
or
jb
mov
jl
mov
lret
lea
mov
cltd
pop
incl
pushl
inc
addr16
das
ja
sbb
cmpl
and
lcall
or
or
in
in
push
out
jae
push
pop
fwait
add
fstpl
jg
pushl
inc
jmp
dec
mov
fldpi
add
shrl
push
xor
mov
push
lcall
pop
and
sub
push
cltd
imul
xchg
or
test
sti
call
lods
int
cmp
sbb
call
mov
sar
decl
or
jnp
es
push
pop
mov
in
imul
pop
loop
cmc
mov
cmpb
push
sub
xor
sar
xchg
aas
dec
or
out
incl
outsl
dec
jp
loop
out
and
les
bound
xor
push
push
gs
fidivl
mov
lea
xchg
jg
pushl
sti
mov
mov
jl
jns
mov
mov
dec
jg
push
xchg
dec
xlat
imul
pusha
lods
bound
bound
or
xor
jmp
xchg
test
sbb
clc
pushf
ret
jmp
repz
jo
lea
ja
pop
in
enter
adc
loop
inc
mov
cmp
or
cmp
fcomps
rolb
and
inc
cli
imul
call
pop
repz
sbb
pop
mov
pushf
mov
in
sbb
cmpsb
call
jmp
hlt
jo
mov
sub
outsl
addr16
popa
test
or
loop
call
xchg
or
mov
adc
popf
lods
jp
popa
adc
sar
cltd
int3
aaa
pop
pop
pushl
rclb
shll
jnp
fnsave
and
sub
enter
jbe
rcrb
sub
dec
jl
inc
movsl
ficoms
and
test
jge
rcrl
push
in
movsb
aad
jae
in
jae
pop
icebp
in
xchg
jecxz
add
sub
mov
sbb
pop
lods
rolb
repz
rcl
insb
addr16
xor
mov
ljmp
aad
roll
mov
pop
xor
pop
pop
out
icebp
mov
push
mov
inc
dec
std
add
jp
push
rcl
jo
test
aaa
clc
decl
ret
xchg
and
scas
inc
out
cmp
mov
enter
sbb
mov
nop
cmp
negb
mov
push
std
insb
idivb
mov
call
dec
mov
cmc
in
xor
iret
xlat
cwtl
shrl
pushl
pushf
jge
or
shll
out
jnp
vphaddbd
cltd
xchg
jbe
jl
hlt
sahf
pushl
fistpl
dec
push
jmp
and
adc
inc
and
mov
add
icebp
push
xor
cmpsb
push
mov
lods
inc
inc
ljmp
test
pushl
cli
ljmp
repnz
insl
aam
jp
sbb
or
or
mov
or
incl
shlb
stos
decb
rol
addb
test
call
repz
movsb
and
leave
mulb
lea
sbb
push
ss
sub
sbb
shrl
ljmp
js
ljmp
rcrb
pop
addl
mov
scas
in
cld
mov
or
push
push
cmp
mov
push
adc
outsb
add
cltd
pop
cmp
pop
push
xchg
das
cld
lcall
jns
lods
lods
jnp
mov
xorl
xchg
push
decl
mov
nop
pop
stos
popa
jmp
pop
ret
adc
sbb
arpl
lret
mov
sbb
aas
and
jl
sub
fnstenv
hlt
adc
in
or
jmp
inc
or
xor
lret
or
stc
stos
jge
xchg
movsb
fwait
icebp
xchg
mov
inc
sbb
test
fwait
pop
cmp
pushl
pop
or
aaa
mov
adc
int3
mov
mov
sub
xchg
out
out
loope
jb
push
pop
and
cld
xor
sbb
pop
pop
mov
push
int
das
cld
test
xor
lods
add
lds
or
xor
movsb
les
xor
mov
push
inc
into
adc
cmp
push
pushl
cld
lea
mov
xchg
xlat
lahf
lods
xor
inc
jnp
adc
pop
ds
pushl
dec
sahf
jl
cld
mov
lods
out
xor
mov
outsl
jecxz
pop
mov
mov
je
jmp
repnz
or
icebp
adc
push
mov
clc
call
cld
aaa
shll
xor
adc
ror
jg
mov
and
outsl
sub
pop
jo
adc
lds
cmp
add
push
mov
repnz
test
pop
lret
push
test
movsb
int
dec
add
mov
incl
lahf
stos
inc
test
sbb
test
fwait
mov
sbb
rorl
pushl
jnp
mov
addl
xchg
pop
jp
jecxz,pt
lahf
add
lock
incl
aas
xor
test
dec
movsl
aas
push
repnz
loop
aas
add
sbb
decl
mov
jo
jle
push
dec
add
popf
xchg
dec
insl
scas
xchg
xor
roll
lds
pushl
mov
cltd
inc
in
jbe
outsl
bound
mov
mov
push
decb
cmpsl
mov
sub
pop
jle
decb
ds
jbe
dec
insb
insb
xchg
imul
iret
dec
push
insl
std
inc
sbb
aad
in
repz
testl
sbb
test
sbb
cltd
shll
test
in
outsl
inc
ljmp
js
mov
pop
add
jl
lret
sub
lock
incl
int3
and
xchg
xchg
shr
pop
lahf
aaa
daa
test
je
outsl
jmp
loopne
lock
stos
jns
mov
sbb
cmp
enter
dec
push
ret
xor
testb
jae
cmp
fdivrs
pop
jmp
cmp
fcmovnbe
aam
jecxz
dec
cmc
hlt
addr16
jnp
cli
repnz
and
loop
push
push
popa
lret
sub
daa
test
icebp
in
or
or
stos
nop
mov
into
jmp
pop
pop
push
insl
lahf
popa
mov
jg
loope
rcl
push
test
xor
dec
add
ret
push
movsl
fisubrl
lods
xor
jb
ljmp
sbb
testb
sbb
fidivl
mov
je
add
push
xchg
mov
dec
sub
fwait
stc
push
ja
clc
cli
lret
stos
out
mov
mov
mov
test
jb
push
xlat
pop
decb
fisttps
inc
ja
adc
bnd
push
and
xorl
xchg
lret
jmp
jno
imul
xchg
lgs
out
push
push
sarb
pushl
push
or
lahf
xor
cmp
mov
fsubrl
clc
loope
jmp
push
roll
add
test
sbbl
push
push
enter
lcall
cmp
mov
mov
andb
ret
xor
pop
xchg
xchg
lock
ljmp
jmp
or
xchg
cmpsl
aaa
stos
ljmp
das
xchg
dec
jnp,pt
push
stos
and
setns
ret
icebp
dec
nop
ss
lea
mov
inc
cltd
hlt
fsubs
push
imul
or
dec
mov
jmp
rclb
int3
cltd
shrb
fiadds
mov
pop
mov
arpl
mov
lahf
pop
into
pop
adc
xchg
cli
lcall
scas
test
xor
sub
incl
push
int3
push
adc
rcll
jae
xor
js
rcrl
sar
outsl
icebp
fistl
or
xor
lcall
adc
call
and
sub
inc
and
push
sbb
cs
or
push
push
int3
hlt
or
mov
or
mov
sbb
mov
xor
ds
mul
imul
mov
sbbb
sar
push
ss
mov
push
jmp
lcall
mov
add
stc
lahf
jae
sar
sub
idiv
jg
std
sarl
fs
cmp
shlb
cmpsl
push
ja
daa
cmp
jmp
push
rolb
jecxz
cmpsl
ds
jae
incl
ljmp
in
ja
clc
decl
nop
jno
insl
dec
stos
add
frstor
sbb
jnp
fcoml
pusha
mov
jg
pushl
pop
das
xchg
arpl
mov
and
xchg
mov
adc
test
xchg
xor
gs
rol
iret
ja
inc
lahf
push
mov
inc
pop
sti
mov
or
movsb
jecxz
ret
jb
clc
decl
mov
inc
andl
push
dec
or
sbb
pop
and
mov
push
pop
xor
fs
std
stc
sbb
outsl
call
or
mov
jecxz
jg
mov
inc
xchg
mov
inc
stos
xor
clc
fldcw
mov
out
jle
fs
out
insl
pop
std
push
sbb
push
aas
mov
loop
lcall
jns
cmp
roll
adc
pop
xchg
pop
inc
jge
inc
lret
pop
and
mov
lock
dec
outsb
mov
pop
shl
inc
fidivrl
hlt
mov
mov
mov
jecxz
in
pop
imul
rcrb
mov
dec
loop
mov
xchg
cltd
sarb
sub
jmp
icebp
test
sub
loopne
test
in
or
jle
das
icebp
fcoms
out
xchg
xchg
jecxz
pop
pop
lods
dec
xor
pushl
aaa
lahf
test
xchg
mov
test
data16
fdivr
pop
ljmp
add
mov
mov
ja
xchg
lcall
xor
push
aam
stos
icebp
into
repz
outsl
out
sbb
pop
scas
mov
test
xorb
incl
pusha
add
cmc
fucom
popl
out
sub
inc
pop
mov
test
dec
push
ljmp
adc
das
add
dec
cmp
mov
cmp
jbe
xchg
lock
push
fisubrl
pop
in
xor
cmc
sar
dec
fdivr
and
pop
ds
push
jb
sub
push
dec
mov
jmp
lcall
addr16
iret
cmc
inc
orl
adcb
mov
call
cli
push
sbb
fsubl
mov
xchg
push
in
shlb
jge
cltd
jp
pop
pop
mov
jg
call
xor
dec
and
mov
xor
outsb
jge
mov
push
cmp
pop
in
int
jg
xchg
ljmp
cmp
scas
aaa
in
stc
es
popa
dec
adc
jg
incl
push
dec
scas
hlt
fldt
dec
xchg
xor
roll
mov
jno
mov
movsl
loope
mov
xchg
outsl
cld
mov
in
dec
enter
arpl
adc
rcrl
clc
aas
scas
imul
pop
cmp
mov
into
xchg
push
test
xor
cld
das
cmc
inc
mov
xchg
add
xorl
dec
sbb
clc
fldcw
rep
xor
clc
fs
jo
cmp
jns
jle
in
inc
mov
mov
mov
lret
xor
and
pushf
inc
aad
lcall
xor
negb
cli
xor
iret
call
hlt
sbb
ds
dec
mov
xor
test
out
outsb
mov
clc
pushl
cli
jg
pop
pop
or
and
jbe
dec
repz
stos
daa
call
push
pop
xchg
mov
sahf
xchg
or
js
inc
or
mov
dec
in
std
incl
out
jge
pop
sub
pushf
dec
sub
pop
inc
cmp
pop
lret
adc
sbb
in
les
mov
lods
fbld
repz
gs
lods
ljmp
icebp
call
dec
cmpsl
mov
loopne
sub
cmpl
or
jbe
sbb
sub
xchg
sbb
rcpps
push
mov
mov
je
xchg
pushl
inc
xor
and
dec
dec
push
out
je
call
cli
aad
lcall
mov
dec
mov
pop
pushf
js
dec
xchg
pop
xchg
pop
fs
xchg
cmp
cmp
hlt
scas
mov
outsb
mov
mov
pop
incl
in
sub
push
pop
xorb
hlt
bound
std
test
lcall
mov
sub
jle
cmp
sbb
aam
lcall
xor
sbb
xor
cli
in
mov
aas
inc
insl
ds
push
mov
add
mov
or
sbb
inc
stos
loopne
outsl
jb
lcall
cld
or
cmpxchg
pushf
pushf
mov
or
xchg
test
decl
arpl
cmpsb
sub
mov
insb
arpl
xor
mov
dec
fidivrs
das
rcrl
sbb
xor
icebp
mov
ds
dec
sahf
das
jg
scas
push
and
xchg
dec
gs
mov
movsb
cmpb
fidivs
inc
xlat
test
ja
insb
and
cld
pushl
lahf
shll
push
rcl
shlb
es
cmc
pop
je
insb
xchg
dec
mov
xlat
cmp
pop
mov
xchg
rcl
mov
jle
fs
stos
in
mov
cmp
and
leave
shrl
xchg
rolb
pop
clc
mov
jg
pusha
cld
cmp
dec
pusha
loope
jnp
iret
adc
test
fldl
ljmp
je
pop
cmp
xchg
inc
in
jp
mov
xchg
test
mov
ret
jo
clc
fists
test
cmpsb
sahf
xchg
inc
sti
sub
cld
dec
lea
sarl
cs
into
dec
insl
jne
mov
dec
jg
ret
push
jb
mov
das
mov
xchg
pop
mov
dec
mov
lock
add
xor
int3
cli
das
lock
jl
cmp
das
sub
mov
and
imul
add
mov
lret
sbb
stos
add
mov
mov
lret
adc
xchg
stos
mov
jbe
out
cmp
mov
lcall
jl
fs
push
out
mov
xchg
jg
mov
rol
lods
sub
push
insb
lret
cld
fmull
lret
cmp
stos
ficompl
ljmp
mov
cmp
sub
mov
cmp
pop
cmp
inc
pop
je
popf
call
mov
mov
loopne
adc
iret
hlt
mov
aad
mov
sbb
decb
ds
jnp
in
mov
ljmp
insl
jge
xchg
cmp
pop
arpl
ljmp
idiv
out
ljmp
xchg
adc
js
sbb
clc
sahf
adc
jno
mov
outsl
xchg
pop
mov
or
call
hlt
rcrl
movsl
aaa
xor
pop
adc
pop
mov
sbb
mov
jecxz
and
out
add
rorb
cld
mov
cld
dec
enter
sub
loope
mov
push
mov
arpl
aam
xchg
fcomip
mov
fdivs
rcrb
hlt
out
sbb
jle
jmp
xor
int
decl
call
in
dec
mov
fcmovnu
test
leave
cmp
and
push
sbb
call
pop
xor
lahf
jno
mov
mov
mov
cmpsb
test
mov
call
xor
inc
mov
sbb
pushf
push
mov
inc
push
movsl
push
mov
daa
icebp
loop
fs
lods
aaa
xchg
sub
pushl
nop
std
jb
fs
loope
std
decl
lret
cmp
scas
pop
mov
sub
adc
lret
push
ljmp
lcall
test
fnsave
lods
addb
push
ficompl
mov
jb
ljmp
inc
dec
add
in
inc
int3
lock
mov
jno
pusha
pop
loopne
fst
mov
cmp
adc
xchg
pusha
stos
test
pop
pop
ret
xor
or
ljmp
std
jg
test
pop
bound
outsb
jg
cmp
mov
stc
test
test
in
pushl
mov
xchg
sti
loopne
or
fstps
and
cmpsl
mov
mov
icebp
push
lcall
jne
scas
add
mov
jg
mov
das
decb
idiv
shlb
add
addr16
mov
bound
mov
das
mov
lcall
stc
jno
push
sahf
enter
je
aam
mov
dec
pushl
cli
cmp
jne
stos
cmp
lret
leave
andl
fnsave
ret
adcb
xchg
mov
incl
sti
loop
mov
jge
mov
loopne
fildll
out
pop
cmp
lret
test
dec
pop
pop
mov
inc
inc
pushf
xor
stc
out
addr16
std
cld
add
fsubl
lahf
shrb
mov
mov
mov
dec
mov
data16
daa
jns
mov
mov
adc
lcall
out
loope
mov
out
jmp
cmpsb
aas
dec
adc
fwait
cmp
imull
scas
adc
inc
adc
lahf
lods
or
fwait
dec
mov
adc
call
ljmp
mov
push
sti
mov
mov
mov
out
cmpsb
pusha
out
add
xor
leave
mov
and
pushl
pushf
outsl
stos
lret
fisubs
push
push
xor
xor
mov
int
call
incl
pop
movsl
out
testb
push
xlat
out
sbb
xchg
cmc
mov
sub
sbb
mov
je
nop
xor
mov
lahf
addr16
sub
xchg
bound
push
ret
sub
mov
push
outsb
movsl
and
sahf
ret
fdivr
inc
adc
jmp
jecxz
xchg
insb
enter
insb
mov
jp
lods
movsl
push
jg
out
xchg
je
scas
aas
push
sahf
roll
js
xchg
mov
xor
push
mov
jle
mov
jge
incl
cmp
rcl
sbb
fnstsw
mov
inc
push
shrl
pop
pop
or
push
pop
dec
popa
jg
pushl
adc
jmp
mov
mov
sub
test
lcall
add
imul
mul
sbb
in
inc
sub
fwait
xchg
jl
loopne
stos
xor
nop
sbb
decl
movl
push
test
cmpsb
adc
push
loop
pop
cld
jmp
sub
aam
fistps
add
sbb
and
dec
pop
out
and
jg
cli
int
lock
repnz
pop
pop
mov
movsb
push
mov
jg
daa
cli
jp
dec
pop
or
lret
dec
test
incl
jmp
jnp
xchg
sahf
aas
imul
jne
sub
mov
jmp
mov
pushf
lock
imul
rcrl
mov
std
mov
cmp
loope
adc
pop
sbb
jo
cmp
outsb
popa
add
push
dec
insb
cld
rorb
leave
jecxz
push
jp
leave
and
mov
mov
pop
xchg
lods
sar
outsb
sar
ljmp
dec
lret
call
jne
lods
inc
bnd
pop
jo
adc
data16
lcall
stos
lods
jns
push
jl
add
int3
or
mov
or
xchg
iret
je
push
jo
ljmp
in
stos
dec
mov
jno
lcall
mov
sub
cmpl
adc
xor
es
mov
mov
outsb
and
jns
inc
clc
data16
gs
lcall
cmp
xchg
cltd
pop
add
mov
push
enter
dec
or
push
jmp
or
or
pop
add
mov
xchg
jmp
push
aad
cmp
loopne
call
movsl
jae
mov
pushf
stos
ds
cmp
mov
add
xchg
clc
lcall
pop
adc
out
bound
jle
xor
mov
decl
clc
xchg
repnz
loopne
cld
inc
cli
rolb
add
loopne
out
inc
call
orl
imul
ret
pushf
sahf
and
push
into
xchg
loop
dec
add
stos
mov
add
cmp
push
xchg
leave
faddl
stc
sub
adc
inc
pop
lods
push
jmp
js
lret
or
int
xchg
scas
popa
cmp
jae
cmp
and
cmp
xchg
jbe
movsl
insl
or
popf
mov
mov
cmp
cwtl
mov
add
stc
hlt
push
jle
in
xchg
pop
mov
repnz
push
or
sbbl
mov
and
cmp
test
decl
mov
ss
pop
scas
adc
mov
cwtl
push
jle
movsb
fs
aaa
call
inc
popa
stos
loope
jmp
je
lock
ret
pop
sub
push
aam
dec
add
arpl
insl
cmpl
xchg
out
xor
shlb
push
add
push
int
xor
mov
or
adc
sti
stos
xor
add
mov
mov
sbb
jecxz
pop
jg
in
jb
filds
inc
mov
jmp
dec
pop
pop
sbb
movsb
xchg
ror
popf
mov
test
pushl
imul
clc
enter
mov
mov
cld
out
push
test
mov
inc
std
mov
popf
sub
pop
shll
push
loope
in
sub
decl
pop
and
mov
pop
cmp
test
push
mov
inc
cltd
jmp
clc
ljmp
xor
or
pop
mov
sbb
add
cmc
loopne
mov
sbb
scas
incl
fcomi
push
xchg
mov
xor
call
fisubs
pop
cli
xchg
or
adc
mov
ljmp
fldenv
sarb
and
mov
sub
aam
adc
xchg
movsl
in
cmp
je
sub
xchg
push
inc
test
sub
fistpll
and
inc
mov
dec
mov
add
dec
xchg
dec
cmpsb
nop
mov
ss
push
das
cld
lcall
cltd
das
pop
cmpb
mov
xchg
pop
ljmp
lcall
pop
call
lds
jp
lret
push
pop
adc
add
sbb
pushl
xchg
xlat
push
cmp
or
subb
movsb
mov
jmp
mov
pop
decl
fistpl
xor
mov
stc
xchg
xchg
shlb
pop
dec
test
adc
test
fsin
das
lock
sub
int
divb
enter
xlat
jno
lds
sbb
mov
lea
xchg
mov
mov
add
in
pop
jg
mov
je
add
inc
addr16
pop
dec
mov
mov
xor
add
scas
leave
mov
ds
cmovnp
jmp
push
jb
jb
jbe
test
nop
fstpt
add
movsl
dec
lock
pop
jno
mov
nop
mov
and
jp
jle
fidivl
sti
fistpl
or
sub
mov
lcall
xchg
cmp
push
rclb
cld
enter
std
sub
cmc
fistpll
rolb
lea
jbe
mov
sbb
jg
out
shll
ja
popa
cltd
jne
call
nop
xchg
mov
pop
in
xchg
push
push
mov
decl
stos
out
sub
les
mov
cmp
mov
mov
push
cli
out
enter
push
bound
dec
pop
fnstsw
dec
shl
out
aam
pop
call
lahf
data16
daa
inc
mov
stos
push
pushl
dec
cld
jge
cmp
sub
divb
scas
pop
aaa
mov
lcall
stos
xchg
jg
aas
hlt
mov
test
cmp
xchg
jg
jno
push
pushl
fiadds
push
das
insl
mov
int3
int
push
rorl
mov
xchg
jmp
sbb
stos
out
dec
or
aam
jae
mov
inc
mov
stos
insl
lds
xorl
and
jge
decl
lret
adc
cmp
mov
mov
addr16
pop
cmp
push
lret
jmp
aaa
and
fmull
push
test
push
xchg
sbb
pop
mov
or
mov
stc
lods
dec
xchg
sbb
mov
fstl
call
dec
xchg
cmp
jo
pushf
sbb
mov
out
lret
inc
add
xor
jl
ds
xchg
add
xor
add
in
mov
call
or
cmp
mov
cmpsb
or
test
fidivrs
add
ljmp
mov
add
or
scas
xchg
and
jg
test
push
sub
mov
mov
mov
sub
push
push
mov
incl
pop
int3
jp
into
imul
push
cmp
mov
decl
push
xchg
pop
add
pop
sbb
jle
imul
push
iret
fnop
mov
clc
popf
call
jmp
xchg
in
jg
es
ja
pop
pop
sub
xor
fisttps
sub
decl
loop
lock
and
xor
mov
fnsave
lods
bound
sarb
test
fcmovnb
adc
fstl
aad
insl
out
jmp
in
lock
inc
mov
js
pop
inc
xchg
in
cmp
in
sub
jbe
mov
pop
repz
incl
decl
xchg
sub
inc
in
testb
lcall
jmp
rorb
mov
mov
mov
dec
movsb
popf
paddq
mov
decl
pushl
mov
mov
cwtl
xor
sub
xor
ljmp
jmp
dec
push
incb
ljmp
xchg
mov
and
int
ljmp
icebp
dec
imul
ret
das
and
push
in
mov
ljmp
test
mov
inc
jo
inc
scas
mov
aaa
clc
jg
push
jle
cmp
and
imul
loop
jmp
mov
add
push
lock
std
jnp
adc
ret
aaa
clc
push
out
and
pushf
fstps
sti
xchg
adc
fdivl
arpl
cwtl
xlat
icebp
pop
jmp
cwtl
ret
stc
fildl
lods
or
call
xor
mov
mov
sahf
cmpsl
add
jle
xchg
cmp
adc
push
out
popf
aaa
push
and
fbld
negl
mov
lods
les
movsb
xchg
inc
sti
roll
ljmp
lods
fisubl
test
inc
imul
lcall
xchg
leave
ds
add
push
jle
ret
dec
test
pop
adc
mov
lcall
fdiv
popa
aad
int3
mov
dec
pop
cmp
add
loopne
jle
hlt
loopne
mov
mov
in
add
jne
inc
fnstenv
jno
mov
loopne
repz
sbb
cmp
adc
mov
pop
sbb
mov
inc
arpl
call
mov
leave
fldt
sbb
pop
cs
push
cltd
adc
aaa
in
jno
lcall
fwait
jecxz
mov
adc
in
cmpsl
daa
test
loope
inc
lods
out
dec
mov
cld
ljmp
fldcw
int
sti
mov
push
out
sbb
aas
sub
inc
xor
mov
inc
inc
mov
ss
ljmp
pop
and
push
xor
cld
mov
outsl
push
mov
icebp
ja
das
hlt
dec
call
in
int3
add
enter
fnsave
jecxz
aas
mov
ljmp
mov
pop
arpl
and
mov
adc
jg
mov
xchg
pop
sub
or
lcall
cli
pop
push
mov
lcall
dec
pop
scas
xor
dec
fwait
pop
mov
xchg
js
aas
dec
pushf
xchg
sahf
push
xlat
rcrb
loope
and
std
popa
clc
mov
call
adc
mov
mov
jo
lds
inc
cmpsl
gs
add
cmc
add
mov
inc
fs
out
popf
jge
loope
sub
inc
js
outsl
jg
in
ds
popa
movsl
data16
push
cmc
xor
push
iret
or
incl
xor
jge
je
sub
push
cld
pushl
cli
loop
lods
jo
nop
mov
int3
ja
outsl
cld
jmp
cmp
fmull
movsl
jl
mov
clc
sub
idivb
dec
ja
mov
mov
test
movsb
add
pushl
clc
xchg
adc
aaa
push
call
cmp
mov
adc
ljmp
mov
add
data16
push
ret
fldenv
bound
lret
pop
call
pop
cld
mov
pushf
adc
stos
es
mov
decl
ja
int3
fst
call
dec
out
cmp
fbstp
jne
mov
pop
jno
mov
add
repz
and
lock
insb
cmc
inc
rcr
pop
jnp
inc
add
leave
push
pop
mov
mov
sbb
cmpsb
cmp
mov
push
push
enter
xchg
or
add
ljmp
scas
lea
lea
nop
push
pop
hlt
jno
ret
pop
lcall
pushl
push
fsubrs
fs
sbb
loope
or
xchg
cmp
jno
sbb
pop
call
ds
insb
ficoml
pop
pop
subl
jl
in
ret
mov
popf
push
mov
and
out
leave
test
aam
shll
jg
jg
push
or
jnp
mov
iret
je
cmp
sbb
shrl
pop
int3
stc
lcall
jns
sbb
mov
push
aaa
stos
or
insl
mov
rorl
sub
sbb
dec
inc
cwtl
dec
and
in
sbb
arpl
push
jno
add
mov
mov
pushl
cmp
add
addb
mov
pop
mov
gs
adc
hlt
pushl
inc
xchg
ret
cmc
or
pop
or
nop
dec
add
pop
call
popa
or
xlat
pop
imul
sar
call
int3
push
or
xchg
xchg
push
or
cmp
pop
mov
jle
cmp
inc
cmp
jns
fucomip
pushl
sub
xchg
push
sbb
shl
sbb
aad
out
xchg
inc
dec
pushl
arpl
push
mov
outsb
xor
scas
jae
imul
pushl
sbb
dec
loopne
add
jno
test
jg
pop
inc
xchg
fcoml
lcall
mov
xchg
inc
popf
dec
jno
imul
idivl
cmp
pop
xchg
xlat
pusha
push
xor
idiv
rorb
divb
xlat
add
addr16
sub
inc
mov
out
aam
incl
int3
dec
cs
or
inc
dec
xchg
xchg
neg
jp
xor
in
incl
lods
cltd
xor
cmpsl
mov
adc
testl
incl
adc
adc
push
cmp
jb
jno
push
or
das
icebp
incl
jecxz
mov
mov
xchg
mov
call
decl
sbb
xchg
ret
lret
aad
lret
mov
adc
xor
pushl
mov
imul
mov
es
das
int
testb
sarb
mov
repz
ljmp
sbb
lcall
incl
mov
imul
xchg
mov
std
and
js
adc
lcall
out
xor
xchg
std
lret
stos
adc
loopne
pop
ret
mov
fidivrs
pushf
subb
cld
rorb
jmp
insl
adc
jo
call
addr16
dec
insl
js
imulb
xchg
es
mov
out
mov
mov
adc
jmp
cmp
sub
push
sbb
sub
pop
ljmp
mov
or
sub
scas
loopne
out
call
mov
mov
cmp
jecxz
inc
mov
aas
mov
hlt
dec
sub
push
pop
lret
push
mov
cmpl
sub
add
ljmp
scas
adc
and
dec
push
push
sub
and
loopne
js
inc
and
repnz
mov
dec
add
les
adc
jg
frstor
sbb
sbb
xchg
dec
inc
mov
out
hlt
insl
cmp
insl
lret
mov
cmp
outsb
iret
pop
cmp
mov
and
push
adc
mov
push
sub
call
sbb
push
pop
sbb
mov
mov
fucomip
decl
imul
jp
and
out
xor
outsb
xchg
mov
mov
loopne
incl
out
sbb
stos
test
cmpsb
jns
js
sbb
mov
decl
subb
bound
add
push
test
sub
cmp
jmp
push
call
je
sbb
mov
cmpsb
mov
jp
negb
xchg
les
pushl
and
jbe
rolb
push
movsl
stos
xor
lock
fbld
and
dec
das
or
push
add
test
mov
xchg
xchg
mov
sbb
mov
cs
movsl
call
clc
jg
sbb
ret
mov
jo
inc
loop
jae
cwtl
outsl
cmp
decl
pushl
cmpsb
fldt
fcomps
lock
test
xor
sub
jg
les
scas
cmp
or
ja
mov
adc
add
push
cmpsl
nop
std
call
cmp
cmpsl
or
pop
bound
xor
scas
enter
popf
clc
fsubrs
cld
mov
inc
iret
je
lcall
adc
mov
dec
cmp
pop
cld
incl
stc
shll
cmp
sbb
je
mov
inc
lcall
das
cmc
ss
jge
fwait
mov
cmpl
out
ljmp
loop
dec
loope
xlat
mov
push
lods
mov
xchg
dec
ret
mov
ret
push
cmpsl
sbb
decb
out
dec
add
ljmp
rclb
cmp
xchg
cli
in
jnp
addb
push
movsb
scas
pop
mov
mov
mov
push
xlat
mov
push
xchg
xor
decl
pop
adc
mov
bound
adc
lods
mov
cld
pushl
iret
enter
sbb
push
cmp
aaa
inc
jb
add
aad
movsb
pop
pop
lcall
ret
mov
push
imul
or
xor
sub
decl
pushl
ret
dec
mov
shrl
push
das
cmp
lods
add
cs
das
cmc
and
dec
mov
mov
outsb
inc
jns
incl
jg
enter
mov
add
inc
xor
cltd
out
xchg
mov
sbb
test
sbb
xchg
dec
xchg
ds
arpl
pop
jp
test
cltd
pop
pop
fidivs
cld
sbb
sub
inc
sar
je
fistps
push
popaw
cmpsb
adc
push
dec
dec
aam
push
out
sub
pushl
sbb
jecxz
fnstsw
xchg
push
dec
cmp
xchg
pop
ficompl
decl
and
or
rolb
fwait
in
mov
jmp
in
mov
sub
test
fsub
dec
fsubr
and
push
int
call
pop
jmp
sub
mov
lret
shlb
jp
jecxz
cmp
pop
pusha
loope
jl
xchg
push
arpl
sub
fnop
loopne
and
jecxz
stos
outsl
icebp
lcall
push
lods
in
xchg
cld
sarl
jg
pop
loop
mov
jno
mov
xor
adc
test
and
jg
stos
cmp
pop
jl
loopne
iret
mov
pop
loop
push
mov
rcr
inc
sbb
ljmp
mov
in
add
mov
adc
or
ljmp
adc
jmp
jmp
into
rorb
inc
cmp
dec
jg
mov
xchg
scas
div
push
and
ljmp
push
rcll
jl
sbb
lds
call
dec
add
xor
xor
addb
xor
ljmp
dec
int
sbb
mov
sbb
insb
jmp
fldcw
push
and
mov
cli
cmp
ljmp
cmp
and
mov
add
lea
test
lods
xor
fsubrp
cld
retw
xchg
in
das
jne
mov
cmc
sub
shl
fdivrs
jge
loopne
mov
call
sbb
mov
out
inc
into
mov
dec
subb
jmp
frstor
sbb
or
and
pushl
mov
push
pusha
and
negl
call
pop
std
inc
pop
icebp
xor
mov
jp
mov
outsl
cmpsl
push
adc
mov
sbb
das
icebp
incl
sbb
rorl
mov
and
add
add
outsl
lock
jae
imul
ljmp
sub
ss
mov
xorl
std
pop
sbb
xor
mov
sub
add
adc
xchg
pop
jb
incl
jp
jmp
pop
ss
scas
ljmp
rcll
out
call
dec
scas
mov
leave
dec
pop
jbe
jecxz
scas
cwtl
pop
pop
add
inc
mov
ficoms
lcall
and
mov
push
pop
jae
dec
outsb
clc
xchg
scas
inc
cmp
adc
xor
cld
rcrb
in
lret
inc
dec
not
pop
ja
cmc
jmp
adc
in
std
ljmp
aad
testb
pop
pop
adc
xchg
in
imul
aam
rcrb
test
aaa
outsl
jle
ja
dec
repz
adc
cmp
or
data16
xorb
movsb
dec
lcall
inc
xlat
fnsave
adc
xchg
sub
jge
ljmp
fidivl
lds
inc
cmc
mov
or
loope
shll
out
pop
loop
incl
aad
aas
cmp
jg
xlat
and
jmp
sti
cmp
in
cmp
leave
fs
cltd
enter
dec
std
or
jp
lods
adc
cmp
dec
int3
pop
mov
insb
ljmp
pop
and
mov
insl
mov
in
cmp
mov
addr16
dec
dec
adcb
fcmovnb
push
xlat
mov
mov
dec
push
mov
test
and
arpl
mov
mov
movsb
js
rclb
mov
ds
scas
pusha
into
cmp
mulb
or
aaa
jbe
mov
ljmp
cmp
iret
outsb
out
mull
jne
outsl
mov
icebp
std
and
and
call
decl
lock
shll
jne
inc
mov
sbb
jb
lcall
sbb
add
cmp
mov
jmp
icebp
incl
addr16
out
loop
lea
xor
jnp
mov
and
cmp
rorl
jecxz
jo
adc
mov
ja
push
fnstsw
pop
mov
jl
in
lods
xchg
mov
pop
mov
rcrl
push
jb
jmp
xor
mov
push
nop
aad
icebp
xchg
aaa
and
repz
aas
negb
mov
mov
lock
call
lret
gs
inc
lahf
rol
js
pop
mov
xor
lret
test
lcall
sub
dec
adc
ljmp
andl
scas
aaa
mov
push
cli
cmpsl
push
add
adc
ret
xchg
std
jg
dec
mov
mov
xchg
mov
pop
or
mov
leave
out
pop
clc
incl
testb
ss
int
ret
and
or
sub
xchg
loopne
insb
imul
ljmp
lock
jecxz
ret
jne
ss
imul
and
xor
jb
cmp
mov
popa
lods
data16
pop
pop
xor
js
push
into
flds
cmp
inc
pop
loopne
decl
add
lahf
aaa
pop
cs
daa
sub
gs
push
jo
xor
jg
call
sbb
cmp
jecxz,pn
xchg
xchg
cmc
fistpll
push
push
lock
clc
lcall
inc
push
fcmovnbe
sbb
aas
sbb
or
jg
pop
dec
mov
repz
pop
movsb
jns
popa
nop
jmp
jb
fdivl
pop
jg,pn
inc
js
push
sbb
pushf
loop
pusha
fwait
pop
jge
cld
imul
mov
mov
addb
lret
leave
cmp
int
movzbl
fadds
test
out
pop
add
call
ljmp
sub
movsl
push
push
jle
sahf
repz
dec
clc
incl
lcall
cld
outsl
lock
mov
dec
pop
fst
rorb
cwtl
cmp
out
sbb
stos
or
rorl
inc
sbb
sti
push
cmpsb
xor
push
cli
aas
mov
test
fildll
jbe
repz
or
lcall
or
rcrb
mov
cmc
lock
in
test
push
mov
repz
rorb
not
add
xor
push
jb
subb
dec
dec
inc
mov
addr16
or
xchg
add
mov
dec
adc
mov
test
inc
shlb
cmp
in
outsl
js
stos
mov
push
ret
call
inc
sarl
scas
dec
rcll
loop
popfw
sub
xor
aaa
mov
in
call
xchg
jns
repnz
inc
jmp
jno
shl
shlb
ljmp
and
stc
call
push
jp
xchg
pushf
pop
sub
sub
pushl
stc
mov
fcmovb
lcall
xchg
xor
cwtl
or
popa
ljmp
jge
clc
lea
icebp
sbb
add
js
decl
adc
push
xchg
xor
dec
int3
fcoms
push
or
data16
ljmp
and
inc
mov
movsb
in
rorl
sub
stos
in
push
stos
movsl
jle
cli
push
pusha
cmp
mov
repz
push
pop
loopne
call
inc
into
int
bnd
into
adc
neg
jg
sub
mov
decl
adc
pushf
sbb
cmp
and
cmp
jle
push
mov
inc
addl
call
xchg
ret
arpl
notl
ljmp
and
xorl
xlat
ret
cld
faddl
imull
movsl
sbb
push
mov
add
cmpsb
cmp
loop
outsl
pop
ljmp
mov
popf
or
lahf
dec
std
jmp
adc
in
popf
adc
in
jo
push
divl
cmc
jg
pushl
setno
and
push
mov
jl
jne
mov
inc
lds
aaa
push
cmp
mov
fisttpll
and
std
decl
ret
mov
sbb
hlt
push
xor
mov
jns
incl
xor
ds
sub
dec
das
std
cli
gs
mov
dec
movsl
pop
hlt
stos
push
nop
mov
clc
rorl
pop
sarl
cltd
lret
enter
adcb
xchg
dec
cli
ljmp
and
pop
and
xchg
mov
jno
and
sbb
jmp
in
pop
xlat
pop
cmp
xor
xor
lret
dec
add
js
hlt
aad
stos
and
lahf
xchg
loope
jmp
decb
dec
xor
push
out
add
test
stos
movsb
dec
mov
push
cld
cmp
gs
jge
ret
cwtl
pop
mov
fs
ljmp
call
sub
pop
or
rcll
jno
dec
cmp
fisttpll
or
call
icebp
push
repz
imul
pop
adc
and
inc
dec
dec
jl
mov
mov
add
cmp
je
pushl
in
pop
negl
scas
mov
inc
dec
arpl
and
sbb
call
adc
scas
ret
lods
dec
gs
mov
enter
jecxz
jmp
sarb
shl
add
xchg
call
lods
add
testb
aaa
inc
xchg
pop
mov
mov
xor
hlt
adc
fdivs
lcall
bound
pop
xor
mov
pop
test
negl
xchg
mov
fs
aas
dec
xchg
jmp
xchg
mov
sarl
rolb
pushl
jp
xor
adc
mov
inc
xchg
pop
sbb
cmpsb
addl
imul
decl
in
xchg
add
mov
jg
pop
pop
ds
cmpsb
shlb
sbbl
inc
cld
aad
loope
cmp
xlat
into
jmp
ror
mov
push
or
call
push
inc
xlat
mov
fdivs
scas
adc
xchg
aaa
inc
xchg
or
inc
jnp
and
test
lods
adc
nop
sub
cmpsl
data16
sbb
test
mov
lret
cmpsb
mov
repnz
movsl
or
mov
jmp
or
aaa
mov
repnz
and
sbb
jns
aaa
aaa
lds
pushl
fcmovu
sbb
in
aaa
add
rclb
cmp
xchg
movsl
lcall
loope
jmp
andl
mov
push
hlt
call
xchg
sub
sbb
popf
sbb
popa
lahf
pop
cmp
call
mov
repz
xchg
hlt
or
inc
jne
andb
cwtl
cmpsb
and
fucomip
bound
pusha
or
insl
lock
jne
out
or
fists
sbb
addr16
sbb
jecxz
mov
fiaddl
inc
ljmp
pop
or
sbb
mov
adc
push
jecxz
inc
pop
push
loopne
mov
fistps
cli
adc
inc
mov
xlat
push
test
std
mov
iret
scas
rclb
decl
pop
add
sahf
jb
jne
jle
or
hlt
jnp
cmc
lcall
mov
push
push
fistps
hlt
xor
movsb
xchg
rorb
cmp
dec
outsl
pop
lcall
cmp
ss
arpl
test
xchg
icebp
stc
fildl
aad
lcall
inc
pop
xchg
mov
pop
lock
inc
cltd
std
fists
and
js
adc
hlt
jmp
cmpl
lds
pop
jp
cmpsb
cmp
mov
decl
mov
adc
jae
or
xchg
setl
stc
in
jo
lret
and
dec
inc
jmp
adcb
sub
jg
sahf
fs
cmp
jno
sub
in
test
and
dec
push
push
loop
mov
inc
push
dec
pop
jns
fcompl
sti
jmp
int3
loopne
xorl
in
std
fnsave
inc
in
pop
inc
and
js
xchg
test
add
fbld
xchg
lods
lcall
test
addr16
pop
aad
jp
fwait
pusha
push
stos
sbb
mov
pop
clc
std
scas
push
pop
lock
and
mov
shrb
mov
shrb
aaa
rcr
mov
outsb
fisttps
adc
sub
xor
bound
push
nop
cli
shrb
jg
into
bound
jle
sar
call
popf
or
mov
ret
rcll
mov
insb
adc
mov
in
pop
adc
subl
cli
imul
or
lock
pushl
aad
sub
daa
cmp
push
dec
bound
inc
js
jnp
sub
loop
mov
imul
lcall
daa
lret
mov
in
pop
aaa
pop
aad
pop
int
jp
pushf
jp
inc
push
mov
shrb
clc
call
jmp
jecxz
das
ss
sub
mov
imul
imul
mov
dec
out
das
pop
adc
inc
or
dec
mov
sbb
xchg
out
or
or
loop
jl
xor
adc
jge
mov
mov
in
in
mov
imul
jecxz
dec
inc
prefetcht2
mov
fldt
call
jle
lods
cmc
mov
push
cmp
imul
inc
incl
push
test
rcll
loop
int3
iret
mov
sarb
aaa
add
jb
ds
call
pop
ror
cs
dec
icebp
fbstp
cli
mov
push
xchg
adc
xchg
loop
in
sbb
dec
sbb
dec
outsl
repz
or
push
int
push
fidivl
aam
xchg
pop
popf
inc
int3
out
loopne
call
adc
and
mov
cmovle
add
jg
jg
mov
adc
insl
sub
xchg
mov
sti
inc
fnstsw
push
incl
push
mov
in
int3
stos
test
mov
xor
inc
call
mov
or
xchg
ficomps
ljmp
jno
sub
mov
and
enter
jle
and
push
loop
fdivrl
aaa
bound
decl
inc
shr
fs
in
push
js
out
in
mov
mov
push
pop
hlt
inc
insl
mov
sub
or
je
inc
ja
add
push
or
lret
jmp
mov
outsl
fstp
mov
mov
jo
jns
call
jns
push
sarl
cli
pop
or
sbb
mov
pop
jmp
cld
mov
jbe
sarb
scas
cli
cli
repnz
incl
pop
fwait
movsb
clc
adc
push
mov
es
fmuls
cmp
std
jbe
insb
addl
jns
repnz
or
imul
xor
sahf
fistps
dec
dec
inc
fs
fs
add
cltd
xchg
jmp
test
lcall
daa
dec
addb
dec
inc
rcl
push
jo
add
js
and
cmp
dec
fucomip
pop
push
jae
movsb
sbb
sbb
out
outsl
cmc
mov
rorl
and
lcall
loope
sbb
cmpb
cmp
out
movsb
out
xchg
xor
dec
pop
push
push
dec
jbe
mov
lcall
enter
or
ror
mov
rorl
ror
jge
lock
decl
and
mov
movb
divl
mov
pop
lcall
cwtl
imul
cmp
call
imul
pop
arpl
push
sbb
mov
scas
out
mov
xchg
or
xor
test
cmp
lods
orb
clc
mov
pop
js
mov
fisttpl
loope
popa
pop
jne
lret
in
lods
inc
pusha
jo
lcall
out
push
inc
jl
outsb
inc
jg
and
mov
push
cmpsb
cmp
push
inc
dec
sub
pop
cli
push
sti
sti
sbb
iret
cmp
mov
lcall
jmp
add
mov
test
mov
inc
loop
jg
mov
inc
cmp
push
outsb
fsubrl
xor
scas
mov
cmp
and
fbstp
inc
mov
push
test
lock
shrl
idivb
mov
outsl
popf
lods
shll
inc
push
mov
dec
int
fucomip
xor
out
xlat
or
roll
mov
loop
and
clc
aas
push
and
pusha
lret
lods
lret
rorl
scas
xlat
lds
sub
out
ja
cmc
fucomip
shl
out
sbb
rolb
ss
sbb
shlb
xchg
hlt
outsl
int3
pop
int
not
ret
sbb
aaa
xchg
stos
push
lcall
mov
lods
pop
mov
jno
pop
inc
fdivrs
icebp
cld
jp
call
mov
mov
je
or
pushf
dec
mov
movsl
mov
fcoms
lds
daa
mov
jg
incl
icebp
not
push
xchg
mov
movsb
int3
popa
mov
mov
pushl
mov
pusha
xchg
test
loop
xor
pop
lcall
pushl
cmp
or
sub
add
lret
or
adc
jmp
mov
pop
inc
ja
sbb
cld
sahf
dec
xchg
xor
xchg
fs
sub
loop
pop
loopne
adc
jnp
mov
sub
and
mov
aaa
adcl
jb
lods
fwait
sbb
lret
fdivs
jmp
je
push
inc
fnstenv
mov
imul
sub
out
call
dec
cmp
jne
add
cmc
cmpsl
push
push
and
mov
adc
fsubs
sbb
std
in
pop
stos
bound
add
fstpt
lahf
inc
pop
in
adc
push
sbb
add
arpl
mov
or
sbb
repnz
decl
pop
sbb
outsb
cmp
arpl
daa
test
ds
dec
xchg
cwtl
cs
jg
out
test
jno
cltd
sti
int
mov
out
mov
lcall
mov
xchg
popa
in
pop
out
and
adc
movsb
push
mov
ljmp
xor
dec
sub
and
inc
gs
ljmp
xchg
jg
leave
and
sub
mov
sub
ljmp
xchg
adc
cmp
fwait
neg
loopne
divl
cltd
loope
cmp
xchg
ljmp
jae
out
or
jb
mov
or
jne
sbb
loope
dec
daa
hlt
in
js
push
cmp
lds
xchg
pop
and
aad
rcrl
mov
mov
dec
cmpsl
cld
add
jg
ljmp
mov
into
dec
add
jae
dec
lcall
sbb
jg
jmp
imul
sbb
push
fsubl
testb
icebp
ret
fbld
mov
insl
notb
jnp
movsl
pop
jmp
aad
dec
mov
rcl
xchg
jno
jne
cmpsb
out
push
cmp
cmp
jmp
mov
or
push
lcall
aam
call
pushl
jl
cltd
pop
mov
jmp
sub
loopne
mov
jb
je
xchg
pop
mov
push
incl
push
test
mov
popa
push
out
arpl
clc
mov
pop
call
push
mov
shll
in
mov
pop
or
dec
lcall
sahf
mov
cltd
cwtl
jle
adc
cld
fwait
test
mov
fnstsw
dec
mov
xchg
rclb
or
inc
aad
dec
jmp
das
insb
xchg
dec
aaa
decl
sub
fs
xchg
and
dec
popl
mov
ljmp
dec
mov
andb
cmpb
test
ret
push
mov
insb
add
pop
imulb
sbb
popf
cwtl
hlt
xchg
and
adc
jp
jg
call
cmp
subl
outsl
sar
jg
outsb
ret
jg
imul
xchg
cltd
mov
aas
adc
subl
aaa
aaa
cli
mov
mov
and
ret
incl
dec
addr16
lahf
pop
pop
aad
pmullw
xchg
pop
xchg
add
pop
sbb
mov
mov
dec
or
push
jnp
jbe
mov
push
push
lret
subb
insl
ljmp
in
push
adc
sbb
pop
jne
mov
lahf
inc
scas
shrl
mov
adc
hlt
aam
clc
mov
cmp
push
jge
push
push
orl
imul
pop
cld
lcall
sarl
sarb
jge
outsl
xchg
jne
outsb
xchg
cltd
daa
push
push
icebp
sarl
pop
dec
xor
aam
cwtl
in
testl
ud0
ljmp
cmp
repz
arpl
repz
shr
mov
ljmp
mov
add
pop
mov
test
out
popa
in
test
sti
sub
or
pop
or
out
xchg
sub
and
insl
outsb
push
int3
test
jmp
enter
call
repz
std
push
mov
inc
push
add
xor
pusha
xchg
jg
mov
mov
sarl
pop
pop
insl
pop
call
incb
sub
push
and
inc
inc
movsb
dec
lret
mov
rcrb
dec
rcrb
mov
cmp
sarl
or
cli
mov
push
and
jle
push
inc
data16
pop
loopne
mov
jle
mov
mov
popf
in
or
rorb
lods
fildll
cmp
imul
out
loop
inc
and
push
imul
movsl
push
arpl
pop
mov
lock
imul
std
scas
lods
mov
xor
inc
mov
and
lds
pop
mov
lcall
inc
lods
adc
jg
push
subl
xor
xor
decl
add
rorb
jecxz
xchg
mov
inc
sbb
lcall
push
cwtl
stos
sub
mov
ss
cwtl
inc
xlat
push
and
inc
mov
movsb
mov
decl
mov
or
fsts
outsb
sarl
ret
lds
lods
xchg
mov
jmp
int3
cmp
pop
push
loop
in
xorl
cmpsb
daa
cmc
pop
fiaddl
push
cld
out
inc
inc
push
inc
pop
pop
sbb
dec
push
mov
sbb
dec
orps
jle
hlt
call
lock
iret
test
fst
mov
cmpsb
pop
dec
fcomp
cwtl
cld
clc
adc
cmp
in
dec
mov
test
inc
addr16
idivb
push
cmp
enter
aaa
pop
ljmp
sub
mov
mov
incl
outsl
jle
fiadds
dec
xor
fwait
jo
jmp
fisttps
stc
lret
rclb
insl
ret
jns
rorb
push
jmp
cmp
das
pop
fisttps
xor
cli
rcl
sub
loopne
imul
add
incl
ret
fucomi
add
inc
inc
inc
dec
jg
iret
mov
xor
pushl
inc
adc
pop
pop
je
add
xor
pop
es
pop
enter
daa
inc
ljmp
rcrl
lds
ss
mov
movsl
xor
scas
jg
or
push
arpl
std
lods
lcall
inc
jb
adc
jmp
sub
adc
cmpsl
repnz
loopne
ljmp
sbb
rcrb
int
cmpsb
fs
shll
cld
pop
cmpsb
std
push
cld
mov
in
js
xlat
push
int3
lcall
push
mov
cmp
mov
dec
sbb
idivl
cmp
push
inc
jg
jecxz
inc
loope
hlt
jge
jge
xor
adc
fld
xchg
inc
mov
push
add
outsb
fwait
and
xchg
mov
sub
jmp
add
stos
cmc
mov
and
mov
decl
jbe
push
clc
add
xchg
push
decl
rcll
cwtl
mov
fucomi
push
ljmp
in
pop
or
dec
mov
mov
in
jmp
into
lret
mov
xor
incl
stc
or
mov
dec
repnz
fsubrl
popl
mov
xlat
cmp
pop
and
rcrl
and
xchg
cmp
jg
xchg
shll
inc
loop
jbe
jle
ljmp
call
jmp
mov
repnz
cld
jg
sbbb
out
push
sbb
shll
add
mov
jmp
dec
pop
scas
dec
cmp
fmuls
cmpl
jo
or
pop
ljmp
and
lret
jecxz
sub
scas
push
daa
xchg
cmp
mov
xor
ja
daa
lcall
pop
adc
cmpsl
xor
mov
imul
jnp
push
sbb
jne
mov
cmp
mov
xchg
shll
add
sahf
lcall
sti
aaa
mov
cld
mov
pop
in
mov
popl
pusha
aad
movsl
in
xchg
mov
fistpll
xchg
inc
out
pop
xchg
mov
dec
add
push
xor
mov
sahf
test
mov
adc
mov
dec
cmp
cmp
ja
in
adc
loopne
add
pop
and
cld
mov
mov
lock
cmp
test
hlt
and
insl
add
loop
cld
decl
out
test
test
dec
test
and
mov
out
cld
repz
iret
clc
sub
sbb
mov
call
xchg
push
xchg
fistps
mov
bound
fwait
int
push
adc
ljmp
fmuls
sub
shlb
out
sbb
mov
aad
push
cld
sbb
ljmp
mov
and
dec
xor
popf
xchg
fmuls
cmpsb
adc
adc
lcall
leave
jbe
aam
add
inc
sub
dec
popl
xchg
push
mov
jge
cld
ljmp
popf
aaa
ror
fistl
aad
les
std
incl
mov
les
jge
out
je
mov
jge
add
nop
mov
jae
inc
icebp
sbb
jb
jge
xchg
imul
cs
es
lods
inc
leave
pop
push
ret
hlt
sub
dec
out
jmp
xchg
lcall
cmp
push
in
and
and
dec
iret
dec
stc
addl
jno
and
int
ss
decl
mov
ds
xchg
add
xor
mov
cld
ss
ljmp
fdivrp
xchg
push
sbb
fcmovbe
stos
sub
fcomps
daa
push
leave
fdivl
lret
decl
inc
add
popa
iret
add
out
cmc
cmp
pop
mov
fisubl
lcall
rolb
jge
daa
pop
fadds
ljmp
std
je
xor
dec
cli
xor
fisubs
inc
lcall
inc
dec
lods
or
jg
int3
insb
inc
loop
inc
push
mov
and
call
dec
sub
decl
ret
gs
inc
mov
xchg
xchg
cmpsl
in
out
mov
jns
fidivs
shr
std
jns
outsl
push
cld
mov
pushf
or
in
cmp
mov
mov
outsl
js
lods
daa
cld
mov
in
pop
test
or
pop
dec
jp
stos
cmp
fisttpl
fidivl
push
ljmp
aad
mov
cmpsb
xor
pop
ret
rclb
sbb
dec
sub
call
bound
mov
sub
dec
js,pt
rolb
mov
repnz
sub
popf
aaa
lcall
cmc
stos
push
sbb
notl
lock
cli
push
lods
adc
or
cmp
cmpsb
call
arpl
aaa
push
icebp
jbe
push
nop
jecxz
sub
mov
xor
insb
xchg
sbb
mov
dec
mov
xchg
sbb
cli
das
lock
scas
mov
or
scas
fdivl
outsl
mov
decl
leave
sbb
test
loop
dec
adc
movsb
and
sub
aas
adc
push
aam
stc
arpl
mov
sub
addr16
jns
mov
call
insl
jne
outsl
mov
aaa
test
incl
mov
or
dec
lods
pop
inc
jmp
pop
fisttps
push
jae
insb
iret
call
add
dec
push
push
mov
ja
jo
js
xchg
lcall
pushl
loope
and
icebp
cmpsl
leave
dec
add
jne
pop
popa
movsb
std
iret
sarb
stc
int3
fistpll
inc
sub
clc
sub
cmp
cmp
loop,pt
insb
mov
movb
sbb
mov
ljmp
cld
push
je
in
outsb
inc
fimuls
or
leave
mov
call
cmp
cmp
loop
sahf
mov
dec
inc
jne
fidivrl
adc
pop
fimuls
popf
dec
mov
jmp
pop
or
lcall
testl
out
lea
push
in
xor
mov
mov
pop
out
cmp
sub
inc
jge
jg
ds
fadds
inc
xlat
shll
lea
cld
fsincos
or
push
sub
scas
dec
idivb
push
pushl
jg
movsb
test
iret
popf
mov
lock
call
ljmp
mov
dec
incl
pop
insl
ja
in
sbb
int3
test
scas
dec
jmp
movsb
outsb
jp
pop
mov
dec
inc
jnp
scas
and
and
sarb
js
lods
xchg
shr
je
dec
or
jg
inc
loope
ljmp
sti
cmp
push
nop
ret
or
lcall
push
data16
push
and
mov
int
or
les
pop
call
incl
or
xor
sbb
test
fsubl
add
lock
adc
fadd
pop
jge
or
lds
fsubrl
sbb
push
insb
sub
out
pop
sub
out
mov
das
lock
sbb
loop
testb
sbb
ret
mov
push
xchg
pop
inc
mov
scas
pop
in
aam
inc
je
xor
lcall
shll
mov
lcall
jg
inc
inc
dec
adc
les
stos
mov
cmp
or
cltd
test
mov
cmp
push
jns
mov
stos
xor
ror
aam
pop
loope
fisttps
imulb
xlat
sub
mov
mov
pop
ljmp
fldt
std
cmp
add
dec
jns
pop
incl
nop
fildll
ficomps
mov
push
adc
adc
aas
shll
scas
cmpsb
mov
dec
pop
ds
fldenv
sbb
fmulp
lea
es
popa
pop
mov
jmp
cmp
test
inc
add
sbb
test
ljmp
les
mov
mov
pop
mov
mov
imull
das
pop
inc
fsubs
out
jns
dec
pop
cld
xchg
decb
mov
dec
shll
mov
pusha
cmpsb
push
imul
shrb
ret
test
pop
dec
jp
xchg
cmp
cs
pushl
sbb
fistpl
cld
dec
mov
out
and
subb
mov
daa
enter
mov
mov
popf
xchg
ljmp
and
mov
aam
and
and
xchg
cmp
clc
add
mov
pop
cli
aaa
inc
pushf
sbb
dec
cmp
insb
fnstsw
icebp
incl
add
mov
sahf
xchg
cld
fiadds
jecxz
push
incl
pop
enter
add
jge
cmp
fwait
lea
dec
mov
pusha
rclb
std
outsl
std
sub
sbb
aam
es
sub
sbb
aad
push
loope
inc
adc
adc
fildl
and
mov
mov
add
repnz
call
mov
mov
icebp
scas
jae
xchg
mov
inc
dec
jo
cmp
push
mov
stos
movsl
call
jb
mov
mov
mov
jg
fistpl
out
pop
dec
jmp
sbb
dec
add
or
scas
xor
jbe
pop
cs
inc
imul
jg
jg
lret
xchg
inc
pop
cmpsl
push
jp
and
mul
inc
cltd
jle
ljmp
xchg
icebp
adcb
roll
andl
setbe
mov
aaa
lret
fstl
sub
or
jg
xor
jmp
bswap
scas
pushf
or
adc
pusha
mov
xchg
incl
jnp
xchg
pmaddwd
les
daa
sub
xchg
in
add
lcall
lods
cs
sahf
ret
sbbl
ljmp
mov
loope
sbb
and
jg
jg
push
push
adcb
push
rclb
adc
cli
jmp
inc
push
es
mov
addr16
dec
jb
adc
in
addr16
cmp
xor
adc
inc
sub
sub
mov
outsb
mov
inc
in
sarl
sbb
mov
mov
dec
stos
push
jg
add
outsl
pop
mov
inc
loope
pop
cli
int3
fsubrl
pop
test
pop
inc
fs
dec
movsb
xchg
les
mov
add
cmpsb
jg
mov
cmp
icebp
imul
push
sub
stos
negl
push
clc
add
xor
mov
pop
ljmp
adc
outsb
bound
adc
cmp
lods
dec
adc
ljmp
mov
repnz
add
inc
movsb
pop
daa
mov
lret
lea
test
scas
xor
incl
mov
cmp
dec
mov
out
cmp
std
adc
enter
fldt
sbb
cmpsb
call
ljmp
test
call
xchg
mov
outsl
mov
call
jno
imul
mov
testl
sahf
ret
aam
push
sbb
xchg
sahf
iret
bound
or
roll
clc
loopne
mov
xor
orl
inc
outsl
popa
aad
cmc
jnp
cmpsl
sbb
lret
dec
jns
lea
xchg
fs
push
lcall
das
xor
mov
mov
idivb
les
call
push
test
call
mov
pop
ficoms
add
bound
in
incl
pop
push
fnstsw
mov
adc
cli
outsl
in
jae
jmp
ds
mull
mov
push
jb
test
add
pop
imul
scas
pop
mov
adc
mov
sbb
dec
stos
arpl
das
cmc
or
xor
ljmpw
clc
jg
test
dec
out
mov
lds
call
mov
dec
dec
or
sub
lcall
nop
fildll
jmp
sbb
int
xchg
addl
mov
mull
mov
inc
mov
lock
int
decl
pop
mov
xchg
mov
icebp
clc
pop
xlat
loop
or
gs
dec
insl
add
push
jb
repz
fldcw
mov
popf
sub
push
cli
sub
adc
dec
mov
idivl
cld
loop
xchg
rclb
fimull
adc
lock
loop
imul
insb
mov
adc
jg
stos
dec
and
xor
jmp
aas
pop
ret
push
sbb
fmuls
stos
rorb
roll
repnz
mov
subb
xchg
in
rcll
es
sti
jp
pop
cld
mov
or
adc
push
mov
cwtl
push
jge
and
push
call
mov
testl
adcb
mov
dec
addr16
pop
mov
ss
inc
sbb
in
call
push
imul
add
sbb
pop
cld
lods
xchg
leave
xchg
shlb
or
out
dec
outsb
lds
sbb
adc
ljmp
push
loope
push
and
or
sub
lcall
cltd
aam
sahf
into
cld
push
aam
rcll
addl
loopne
fld
fsubp
mov
js
movsl
js
xchg
xchg
xchg
fisubl
jbe
jb
adc
sub
idiv
fists
xlat
insb
jle
sub
cmp
add
inc
mov
lea
fildl
int3
movsb
addr16
les
cmc
add
mov
xor
inc
mov
dec
ljmp
xchg
into
cs
rcrl
mov
adc
call
call
fidivl
lods
ret
mov
sbb
sub
idiv
imul
or
repz
mov
xchg
movb
lcall
pop
mov
or
or
popa
fsubrs
xlat
fadd
lods
stos
adc
lcall
mov
xchg
pop
xchg
pop
add
push
and
pushl
dec
xor
xchg
dec
jecxz
sub
lcall
aam
pop
andl
mov
repnz
fdivr
lods
outsl
adc
les
or
scas
les
mov
push
add
sub
movsb
push
lock
xor
sub
data16
push
mov
shl
movb
test
or
stos
js
lcall
in
outsl
loopne
xchg
cmc
jle
fcoms
stos
or
into
adc
jae
inc
xchg
push
loopne
ljmp
movsb
ds
shrl
pusha
dec
pop
sbb
ljmp
pop
dec
in
fcoms
pop
cld
cmpsb
xor
lds
push
popa
or
sbbl
ljmp
call
nop
xchg
aad
push
mov
dec
icebp
lcall
cmp
int
stos
mov
xchg
pop
arpl
sbb
xchg
and
cs
movsl
or
adc
in
sub
inc
sar
add
repnz
mov
mov
jecxz
dec
adc
and
push
jne
dec
testl
pop
lea
test
negl
sbb
or
cltd
pop
and
ja
adc
add
dec
dec
push
out
repz
and
incl
inc
lcall
sub
mov
cmp
push
lcall
es
sti
push
and
mov
sub
lahf
push
jl
mov
mov
stos
icebp
xchg
outsb
loope
mov
jo
xchg
push
pushf
mov
mov
cmp
sub
push
iret
mov
decl
jl
and
add
pop
shl
push
pushl
adc
pop
inc
lods
sbb
popf
and
mov
scas
roll
inc
dec
mov
icebp
call
fistps
pop
mov
add
test
add
std
jge
cs
xchg
fcmovnu
loopne
inc
leave
mov
sbb
pop
in
sar
inc
mov
int
mov
gs
gs
pop
pushf
ljmp
mov
xchg
push
mov
pop
or
out
adc
clc
lods
sbb
sub
push
and
addr16
sbb
divl
cmp
cld
fstl
jnp
and
mov
jnp
jo
std
cmp
add
mov
shr
loopne
mov
lds
pushf
jbe
add
or
inc
incl
mov
dec
xchg
mov
ja
loop
jno
cmp
shrb
jg
sti
pop
jno
mov
ret
das
and
movsl
xor
lcall
sbb
ljmp
loope
inc
aaa
pushf
das
shr
in
decl
neg
shll
data16
lods
lods
mov
add
mov
out
je
fadds
add
cltd
cli
shlb
int3
imul
je
lcall
aaa
mov
call
sbb
lret
cmpl
nop
decl
fs
ljmp
aam
pop
jnp
stc
dec
lret
push
sar
inc
decl
testl
aas
jnp
stc
mov
pushl
nop
jo
cmp
loopne
inc
dec
cmc
test
int
push
adc
lcall
xchg
pop
fidivrs
sub
xchg
mov
pop
jmp
xchg
dec
mov
mov
mov
lods
shr
inc
ret
jnp
xor
mov
jg
pushl
popa
out
fmull
andb
mov
push
cmp
loopne
pushl
popf
in
mov
sub
sbb
sti
mov
insb
and
aad
call
jg
inc
stos
ss
incl
pop
lret
sub
pusha
pop
cli
call
sbb
pop
int
into
push
or
xor
fisubrl
sub
test
xchg
xlat
sbb
or
test
mov
out
mov
mov
ljmp
jmp
inc
shrb
cltd
pushf
stos
mov
fnstenv
xchg
out
pop
inc
cmp
jp
sbb
addb
ror
jl
aad
jmp
mov
std
or
mov
dec
test
out
xchg
or
cmc
jmp
popf
jmp
push
fwait
cmp
in
cmp
xchg
mov
mov
mov
sbb
sub
icebp
mov
in
call
pop
arpl
push
sti
xchg
cmc
ret
dec
je
push
cmp
out
adc
mov
mov
push
pop
cmp
mov
or
fists
or
mov
jl
lock
stc
lock
stos
push
ja
inc
and
loopne
ljmp
push
pop
sbb
fwait
mov
sar
xor
je
or
push
sbb
sub
call
dec
inc
push
scas
cmp
rcrb
and
mov
push
push
jg
lea
pop
in
xor
mov
xor
mov
shll
mov
adc
inc
inc
int
pushl
loop
mov
sbbl
ret
add
ljmp
cwtl
lret
adc
and
add
xlat
ljmp
inc
xor
testl
mov
int3
mov
aaa
cs
sub
stos
sub
mov
mov
push
cmc
fsub
cld
push
ja
ret
loope
xor
jmp
pop
sbb
cmp
adc
jbe
mov
int
push
mov
push
jns
xor
mov
test
jl
cli
aam
jns
rol
sub
mov
ljmp
outsl
hlt
outsl
push
pop
movsb
leave
lcall
pop
pop
orb
call
fists
jg
sti
shrb
jle
nop
xchg
sub
mov
jae
adc
xchg
jg
lcall
movsb
sahf
adc
mul
sar
fcmovb
and
cmp
xchg
dec
push
les
lcall
or
or
or
xchg
adc
in
xchg
add
jg
decl
dec
jl
fbld
aam
mov
xchg
jl
xchg
jg
test
clc
cwtl
add
inc
data16
lea
sub
push
mov
shlb
js
xchg
and
fstpl
mov
mov
ljmp
cmc
incl
mov
push
mov
jp
push
sti
mov
fcompl
lcall
lcall
fs
pop
jecxz
sbb
mov
push
xor
pushf
dec
dec
aas
push
clc
incl
jno
repz
pop
ret
pop
push
jae
std
or
pop
sti
scas
and
idivl
dec
pop
cmp
movsl
stos
jge
fisubrs
movsl
ss
cmpsl
mov
cmp
cmpsb
pop
dec
dec
jg
decl
ret
inc
mov
push
xchg
jb
push
adc
xchg
pop
mov
mov
ds
mov
dec
lret
fidivl
cmp
insb
push
addr16
rcl
mov
js
outsl
je
inc
push
mov
call
loopne
pushl
cmpsl
notb
mov
jae
cmp
cltd
sahf
in
cmp
int3
ret
xchg
sub
call
js
dec
out
jmp
rcrl
movsl
push
adc
and
decl
arpl
mov
dec
mov
cmpsb
gs
adc
inc
mov
stos
xor
iret
mov
sar
fsubl
dec
fisttpl
rcll
js
pop
out
jno
int3
call
call
sbb
mov
cltd
and
out
pop
out
xor
mov
pushf
test
adc
add
add
rorb
dec
les
andb
icebp
andb
cmpsl
out
cmp
jb
and
cmp
adc
pop
and
aad
outsl
outsl
lds
cld
pop
jo
pop
mov
push
jle
bound
mov
decl
mov
cmp
fildll
jne
jnp
adc
imul
jmp
mov
es
mov
and
adc
inc
loopew
or
sarb
in
jmp
xor
xor
or
ret
loop
sarb
int3
adc
insl
popa
dec
pop
cli
decl
test
dec
xor
sti
mov
jb
in
mov
call
fnsave
pop
loop
movl
mov
add
gs
cmp
adc
jmp
push
fs
nop
rolb
jge
jg
mov
icebp
out
sbb
jecxz
adc
shrl
lds
vpsubusb
mov
jp
std
jno
orb
lcall
pop
xchg
aam
shl
js
icebp
or
or
cmpsl
jae
stc
sub
hlt
inc
jg
std
fiaddl
adc
insl
mov
aam
bound
mov
bswap
xchg
aaa
repnz
aam
push
incl
push
cwtl
jnp
popf
arpl
int
ja
fcoms
dec
lea
xchg
pop
jmp
mov
mov
push
fists
shl
cmp
cmp
cmc
inc
mov
adc
jbe
push
xchg
mov
faddl
cmc
pop
jp
scas
aad
fmuls
pushl
pop
rclb
and
add
jno
popl
adc
push
mov
call
mov
mov
xor
inc
push
mov
push
js
sub
or
decl
nop
shl
sbb
fs
sub
jmp
jp
lahf
lods
in
cmpsl
cwtl
sub
or
std
cmp
scas
dec
push
stos
push
fsts
fxam
mov
lcall
insl
jecxz
rorb
mov
mov
cld
or
ret
mov
or
pusha
jg
pushl
fdivs
or
xlat
leave
scas
jb
mov
call
ljmp
jo
stc
imul
xchg
dec
xchg
clc
movsl
or
xor
push
fadds
mov
std
enter
xor
xor
imul
push
mov
xchg
mov
mov
decl
cmp
in
xlat
dec
lock
jne
ret
mov
pop
push
mov
jg
and
call
cld
push
out
mov
add
popf
jno
test
xchg
loopne
push
jno
jg
ret
pop
mov
aam
cmp
mov
incl
xor
mov
adc
xchg
inc
rol
arpl
dec
daa
lea
pop
mov
xor
push
push
lods
shll
push
clc
orl
lods
cmpb
mov
mov
jb
jns
aaa
repz
lahf
popa
decl
call
push
cli
mov
jnp
xor
shll
mov
je
inc
mov
pushl
sub
push
andl
push
and
cmp
cmc
jg
mov
sbb
mov
push
sbb
cmpb
je
out
shl
push
xchg
inc
xchg
mov
mov
addr16
mov
loop
lcall
pushl
std
outsb
cmp
movd
jno
vmaxsd
jg
cmpsb
and
push
lea
in
gs
and
xchg
test
mov
les
popl
xchg
jge
out
sub
and
in
pusha
cmp
std
sub
jg
sub
arpl
add
icebp
ljmp
mov
lret
mov
jns
add
and
push
jg
ljmp
and
add
test
in
and
in
xchg
mov
ss
add
mov
cmpl
pop
or
xor
and
iret
xchg
insl
add
rorb
sbb
fwait
add
incl
sub
je
in
lock
mov
cmp
out
ljmp
push
dec
jp
sti
rcr
popf
pop
call
lcall
adc
test
cmp
mov
pop
and
incl
push
dec
cs
push
pop
sub
mov
inc
jb
stos
ja
cltd
push
push
and
and
or
sbb
jg
add
lock
pop
movsb
fisubl
add
add
jg
enter
lret
test
mov
repz
outsb
ds
inc
mov
dec
sahf
jno
imull
xchg
add
sbb
sarl
pop
call
fnstcw
mov
dec
mov
mov
pop
sarl
jbe
rorl
sbb
and
into
dec
dec
jl
xor
dec
clc
jae
call
jl
repnz
cmpsb
jae
mov
inc
mov
jo
and
stc
or
ret
adc
imul
not
cld
jp
out
mov
xlat
pop
aaa
cmp
xchg
lcall
pop
outsb
mov
mov
and
push
lds
call
dec
std
scas
jns
or
mov
mov
gs
subl
das
std
adc
dec
scas
lret
cwtl
fwait
sub
mov
outsl
icebp
pop
jl
and
mov
adc
aad
jne
inc
ret
inc
mov
adc
jns
add
js
pop
lds
mov
arpl
adc
loopne
jmp
stos
ds
test
xchg
test
aas
leave
xchg
pop
call
push
adc
lcall
xchg
cmp
aad
cmp
les
call
in
mov
fwait
arpl
pop
and
out
push
pop
movsb
ljmp
in
repnz
or
mov
sbb
mov
clc
jmp
lcall
sub
imul
push
rorl
add
mov
mov
fists
mov
sub
jae
push
lock
stos
ljmp
cld
dec
decb
pop
sbb
adc
xchg
sbb
sub
sbb
outsl
int3
pop
jecxz
xor
movsb
cli
xor
mov
xchg
inc
push
jnp
insb
loopne
push
sbb
sub
mov
std
add
sub
mov
and
push
cli
push
dec
test
in
push
adcl
pop
mov
ss
das
cld
call
int3
and
mov
dec
rcl
push
aaa
lcall
incl
notl
hlt
or
sahf
and
cmpxchg
pusha
push
ljmp
sbb
inc
pop
test
shlb
ljmp
mov
int3
xor
or
in
sbb
hlt
mov
mov
inc
loop
test
cmp
mov
fnstenv
jb
mov
mov
jmp
lods
lock
xlat
mov
fistps
xchg
in
sbb
lods
std
and
pop
or
jg
xor
adc
mov
mov
aas
loopne
dec
cmp
sbb
inc
xchg
cmp
ret
addr16
test
sbb
leave
rclb
gs
sbb
lock
cmpsl
addr16
pushl
mov
or
push
push
repnz
fistpll
add
call
dec
fldcw
aad
and
daa
or
mov
xchg
fists
call
in
lea
fcompl
add
jns
out
gs
mov
adc
adc
int
scas
mov
aaa
ds
adc
dec
repz
jg
rorb
mov
add
xor
imul
inc
movsl
test
push
add
lret
scas
xor
pop
clc
or
addr16
ljmp
cli
pop
mov
or
jne
lcall
loop
add
mov
dec
xchg
imul
hlt
sbb
lcall
add
and
stos
in
ds
gs
addb
lea
sub
jnp
add
xlat
in
es
enter
data16
jmp
aam
into
ficoml
sbb
mov
push
adcb
add
mov
dec
mov
lahf
push
ja
add
outsl
cmp
lods
dec
dec
in
fcomip
mov
not
push
cs
hlt
and
push
mov
mov
push
les
pop
rclb
mov
pop
int
sbb
ret
jg
push
cmp
movsl
lods
mov
lahf
das
inc
inc
in
aad
mov
mov
push
and
lahf
xlat
or
popf
jne
dec
call
or
scas
inc
outsl
inc
xor
mov
sbb
je
inc
jno
jo
add
leave
lret
sub
and
rcrb
pop
push
cli
push
test
sbbl
dec
sbb
incl
dec
imul
inc
xor
es
test
mov
out
xor
sbb
mov
xchg
mov
sub
pop
cmp
nop
jns
lcall
mov
adc
ffree
pop
pop
out
jb
xchg
sti
ds
fistps
sub
outsl
dec
push
and
jae
adc
stos
inc
jge
inc
mov
xor
sbb
xchg
fistpl
mov
mov
imul
sbb
jnp
popf
imul
std
insb
arpl
shlb
and
in
mov
mov
mov
pop
imul
stos
in
jge
mov
push
jns
cmp
loopne
outsb
cmp
xchg
test
xor
aaa
test
mov
pop
mov
xchg
ret
shll
outsl
das
cmc
outsl
push
shl
mov
dec
movsl
xchg
pop
inc
pop
data16
decl
cmp
fistps
out
lea
fstl
push
fs
in
jmp
mov
add
pop
dec
pop
adc
leave
lock
pop
stc
pop
add
and
jns
imul
call
repnz
fidivrs
sbb
dec
push
mov
test
sub
orb
mov
sbb
mov
adc
inc
mov
and
lea
fsub
call
push
adc
lock
out
gs
outsl
mov
in
adc
pop
sti
daa
jae
mov
or
aad
imull
imul
sub
inc
enter
stos
andb
aad
jo
cwtl
ljmp
mov
aas
xchg
insb
div
cwtl
shrl
add
push
cld
cmp
cmp
sbb
mov
push
adc
add
insb
test
sti
cmpsb
fdivr
lcall
in
rol
movsb
jnp
pop
mov
imul
xor
dec
xchg
ljmp
adc
adc
dec
lcall
aam
mov
jae
pop
dec
bt
and
mov
adc
xchg
sahf
cmp
pop
loopne
pop
push
dec
sbb
push
jg
enter
rclb
pushf
ljmp
add
jne
outsl
mov
sub
add
or
cmp
idiv
fidivs
jmp
jns
add
dec
cmp
ds
insl
fisttpll
pushl
dec
ljmp
jno
cmp
cwtl
lret
aad
inc
sbb
cmc
data16
pushf
les
call
xchg
out
repz
mov
mov
dec
popa
mov
adc
es
shll
int
mov
pushl
xorb
dec
inc
in
mov
sbbb
int3
in
push
int
push
adc
xchg
clc
call
fisubs
popf
mov
leave
mov
fwait
or
mov
stc
ror
xchg
jmp
dec
nop
dec
sti
cmp
das
int
movsb
lds
ret
jg
or
repnz
mov
clc
mov
lods
cmp
adc
lods
mov
add
outsl
adc
add
add
xor
push
cld
sar
movsl
dec
jp
lret
xor
or
sbb
jle
sbb
fimuls
outsl
lock
pop
cmp
dec
cs
repz
jp
rorl
dec
sub
push
jmp
push
int
aaa
out
sub
aas
pop
stos
dec
lods
adc
decl
push
rorl
addr16
ret
cmp
or
fidivrs
mov
mov
aaa
push
movsl
push
leave
jne
mov
aas
sub
mov
ss
cmp
les
sub
fildl
or
repnz
pop
push
mov
aaa
mov
mov
mov
mov
jns
mov
das
icebp
incl
adc
fwait
mov
test
ds
mov
insl
out
mov
mov
call
sbb
pop
pop
lods
adc
insb
lcall
and
jge
pop
lods
push
or
sahf
decl
inc
sub
hlt
jle
pushl
cmp
js
pusha
jns
push
add
jnp
std
and
mov
xor
in
sti
pop
sbb
hlt
push
mov
loop
daa
jmp
mull
imul
adc
jp
adc
enter
out
pushf
push
gs
jmp
ds
pop
sbb
pop
repz
dec
jg
stos
sbb
sub
dec
aaa
pop
clc
fildll
dec
lds
leave
icebp
cmp
lock
mov
insl
rcr
cmp
out
pop
jle
hlt
divb
mov
sti
inc
divl
bound
pop
popf
inc
pop
sbbl
pop
pop
scas
popa
shrl
cwtl
fnstcw
xchg
jp
add
sub
es
leave
xchg
mov
leave
leave
imul
sbb
hlt
decl
outsb
sbb
lock
lahf
mov
push
jae
incl
add
pop
test
cmp
pop
and
shlb
out
arpl
inc
test
int3
lea
sbb
ljmp
mov
dec
add
enter
jmp
lea
add
js
ffree
inc
fwait
rorl
jge
sub
ljmp
aad
faddl
mov
jmp
push
mov
sahf
ds
clc
jmp
test
lock
mov
imul
mov
mov
out
sbb
pop
aaa
ret
lcall
mov
addr16
xchg
pop
pop
and
cmp
sub
sahf
fdivl
out
das
icebp
or
enter
cmpl
add
mov
cmc
dec
enter
sub
push
shrl
cmpsl
pushl
loope
rcll
hlt
inc
mov
aad
iret
cmp
push
mov
es
pop
jnp
pop
pop
cli
adc
pop
cs
push
bound
fucomip
mov
rorb
repnz
jle
imul
xor
enter
shl
outsl
lock
push
int
push
sahf
fiadds
cmc
pop
push
cmp
mov
cmc
mov
jb
shll
shlb
ret
insb
mov
push
mov
lcall
imul
ljmp
leave
dec
add
shrl
jbe
xchg
pop
mov
sar
fnstsw
pop
xchg
movsl
loopne
cmp
inc
sbbl
decl
mov
xchg
int3
sbb
sub
sub
out
dec
sub
sarl
sub
push
pop
std
filds
cltd
jbe
aam
or
ret
mov
jb
cmpsl
pop
test
jmp
insb
lret
js
or
xor
sub
call
push
push
rolb
xchg
mov
das
insl
adc
in
push
dec
jge
mov
jmp
push
enter
and
imul
jge
push
push
lret
xchg
ljmp
mov
xchg
repz
sub
push
sbb
pop
push
and
adc
sbb
dec
xor
push
inc
jae
jnp
lods
stc
xchg
cmp
lods
popa
push
pop
dec
addr16
stc
aam
mov
daa
cltd
add
lcall
frstor
call
mov
clc
notrack
lds
mov
fwait
dec
push
jae
dec
repz
jo
pushl
cmpsb
mov
cmp
lds
jle
test
sbb
mov
loop
mov
mov
int
in
push
sub
lock
dec
mov
orb
jg
adc
pop
scas
std
sbbl
addr16
xor
clc
icebp
xchg
aad
in
jle
cmp
shrl
lret
dec
mov
leave
and
inc
pop
lods
es
mov
ud0
cli
sbb
mov
push
pusha
jg
mov
inc
loope
adc
sbb
adc
leave
add
push
ds
jecxz
jecxz
cmc
jmp
aad
xor
mov
mov
and
pop
mov
in
roll
jo
cmp
pop
xor
fbstp
mov
popf
jp
sti
jb
push
cwtl
fcmovnb
push
in
mov
incl
mov
mov
std
xor
ret
arpl
and
jmp
mov
pop
sbb
clc
call
mov
push
loopne
loop
loope
jbe
push
xchg
push
push
add
jle
aaa
cmc
jg
jmp
andl
xor
xor
mov
sbb
cmp
pop
jg
lret
test
adc
in
arpl
jmp
mov
dec
sbb
aad
pop
pop
adc
lods
aas
call
push
inc
cmp
dec
push
add
pop
push
cmpsb
push
mov
in
jecxz
fs
jns
cs
in
imull
add
pop
and
jb
mov
pop
mov
jg
mov
flds
inc
fisubs
loopne
clc
add
hlt
cmp
ljmp
cld
ret
fimuls
inc
js
js
sbb
inc
xchg
arpl
push
call
push
mov
adc
aad
mov
add
pop
or
dec
adc
sub
xor
popa
fdivr
movsb
add
movl
xor
jae
dec
push
cmp
ret
push
or
mov
pop
cltd
pop
mov
aas
mov
xor
call
out
arpl
push
push
mov
call
movsl
call
hlt
ja
adc
mov
jns
pop
push
lcall
imul
je
push
mov
cltd
xor
pop
in
mov
pop
shl
cmp
pop
ljmp
sbb
pop
mov
scas
cmpsl
stc
xchg
mov
pusha
cmpsl
pop
hlt
in
jns
sar
lcall
sbb
jne
jge
add
mov
adc
jo
xchg
add
out
xchg
call
les
popf
push
add
test
jmp
movsl
cmp
pop
jo
jne
fnstsw
dec
inc
loop
movsb
jb
cmpsl
out
fsubrl
jecxz
rclb
mov
jmp
pop
mov
cmp
sub
leave
jle
lock
xchg
xchg
push
fwait
add
pop
divb
mov
outsl
js
movsl
and
fs
mov
pop
loop
icebp
pop
movsl
and
sbb
fcoms
test
sub
xchg
lcall
mov
mov
adc
xchg
and
inc
dec
mov
jns
push
push
ds
lock
jmp
mov
fnstcw
rol
inc
cli
test
std
outsl
inc
cs
int
mov
mov
sbb
and
sti
sub
pop
jp
ljmp
jmp
sbb
mov
fisubs
enter
sbb
je
sbb
sar
pushl
into
mov
cmc
jge
inc
popa
jle
dec
xor
adc
xchg
cwtl
jns
inc
or
adc
lcall
mov
addr16
sub
jle
cmc
mov
cmp
icebp
lcall
rcl
cwtl
xchg
jmp
jbe
mov
data16
das
mov
loopne
ret
in
adc
xor
jmp
pop
cmp
push
dec
cmp
add
cmpsl
sahf
mov
pop
mov
jo
mov
add
in
xchg
xor
push
leave
dec
fwait
mov
jg
aas
dec
cmp
imul
sahf
mov
jb
cmp
xchg
rol
jmp
pop
ljmp
jae
pop
pop
aaa
mov
sahf
push
jno
push
ret
pop
xchg
imul
and
fdivs
test
sbb
fdivr
bound
decl
mov
push
rorb
fdivrs
addb
add
lods
mov
add
mov
call
popa
lods
stc
aad
insl
xchg
in
addr16
outsb
adc
int
ficoms
jb
inc
xchg
or
pop
nop
addb
mov
jp,pt
xor
push
ljmp
jle
lds
jle,pn
dec
dec
mov
fimuls
sar
jmp
pop
xor
es
orb
mov
fmuls
popf
mov
mov
cli
movsl
mov
daa
xchg
jb
cmpsl
sbb
addr16
dec
lcall
in
rcll
push
add
and
lret
adc
dec
mov
dec
incl
mov
cmp
jg
repnz
add
fcmovb
pop
mov
mov
mov
lret
mov
xchg
jg
fidivrs
shl
lcall
jg
add
scas
repz
leave
sbb
push
jg
jbe
aaa
mov
mov
push
inc
scas
push
ror
jge
mov
jecxz
jg
jg
in
gs
adc
stc
jb
xlat
dec
ljmp
jle
jg
xor
sub
scas
mov
imul
inc
and
pop
jmp
cli
in
or
call
add
lock
rcll
stos
aad
out
les
rorl
mov
dec
ret
sub
adc
imul
lret
jl
in
xchg
dec
sub
xchg
and
push
sysexit
mov
xor
fdivr
xchg
jae
sbb
out
jb
ss
call
mov
inc
pop
push
xchg
push
push
jl
sarb
xor
fisttpll
sti
xor
fcoml
inc
or
dec
pop
and
int3
lahf
or
loope
mov
sbb
cltd
insl
mov
mov
pushf
popa
arpl
out
adc
pop
mov
outsb
test
add
out
aad
movsb
mov
mov
repnz
xor
and
xor
push
push
push
jmp
or
test
out
nop
sbb
pushf
loop
decb
loop
mov
cmp
cmp
lods
popf
push
ficomps
pusha
sbb
xchg
lods
mov
inc
pop
mov
aam
icebp
pop
push
out
call
jmp
push
int
sub
mov
ficoml
xor
das
jnp
adc
mov
cmpsl
out
push
test
enter
rorl
lcall
leave
in
fwait
popa
cwtl
cmc
movsb
cmpsb
add
jno
xor
and
adc
and
fisubrs
dec
xorb
sbb
incl
test
imul
lods
fwait
and
dec
popf
popa
scas
sub
fbld
fstl
test
fsub
jb
ljmp
mov
stos
xor
std
pusha
jnp
das
les
into
int3
icebp
or
decl
std
mov
sbb
pop
push
pop
mov
jl
push
pop
add
pop
jg
lcall
lods
fs
shrl
xor
dec
inc
dec
sbb
mov
pop
fucomip
jmp
jo
pop
or
iret
ret
sahf
pushf
fsubrl
xchg
out
out
loopne
or
call
mov
popf
scas
sbb
in
dec
mov
icebp
pop
arpl
xchg
and
enter
out
repnz
dec
sub
outsb
jbe
aaa
xchg
dec
mov
dec
aad
sahf
setp
jb
das
icebp
fbld
dec
mov
dec
jo
cltd
arpl
mov
jl
lock
mov
inc
or
push
sti
mov
push
sbb
mov
pusha
icebp
lea
xchg
sub
cmpsl
dec
dec
mov
and
mov
ljmp
mov
jge
fimull
ja
xlat
push
add
imul
in
sub
adcl
push
cmc
push
imul
cmp
dec
pop
lcall
push
inc
xchg
inc
call
push
testb
les
lret
ret
cs
inc
mov
mov
pop
das
test
int
into
jbe
andb
cmp
and
sar
popa
out
sbb
addl
test
test
push
rolb
pop
mov
or
inc
fadd
mov
in
ret
insb
insl
out
push
ja
cmp
popa
jo
mov
xchg
add
test
ljmp
movsb
and
or
sahf
jne
inc
outsb
insl
inc
test
mov
push
mov
fsubrl
bound
mov
leave
in
rcrl
ljmp
jg
xor
xchg
leave
mov
enter
cltd
mov
xchg
push
ds
pop
clc
call
ret
shlb
jne
dec
out
and
cld
jmp
stc
or
ret
and
jbe
adc
or
pop
je
mov
add
fnstsw
call
pop
fldl
pop
scas
dec
dec
xlat
jg
cmp
jne
cmpsl
sarb
call
xlat
outsl
cmp
xor
mov
pop
and
mov
lret
std
sub
es
mov
or
dec
cmpsl
idiv
jnp
pop
pop
push
mov
jecxz
push
add
jp
mov
push
cld
adc
data16
xor
test
call
decl
in
or
fistps
inc
in
push
ljmp
sbb
call
or
pop
daa
sbb
lcall
push
lds
sub
inc
mov
jmp
fldl
ljmp
mov
and
push
xchg
cwtl
pushl
pop
add
inc
popf
clc
pushf
mov
jb
xor
ljmp
xorb
sub
imul
jbe
mov
inc
push
and
lods
scas
dec
cmp
sbb
fs
decl
rclb
adc
fcomps
or
jnp
dec
push
mov
sub
sarb
pop
cmp
and
jae
mov
test
mov
pop
out
fistpll
stc
or
xchg
andl
push
inc
incl
pop
xor
adc
xchg
ret
and
loop
std
test
xchg
cld
test
mov
jp
mov
int
sahf
cli
inc
loopne
int3
sbb
mov
push
mov
mov
ljmp
bound
mov
mov
insl
push
push
gs
sub
call
out
mov
mov
mov
shrb
dec
ljmp
sbb
je
inc
lock
and
stc
jne
mov
pushl
xor
inc
lds
mull
cmp
loop
fs
les
push
sbb
ljmp
mov
jb
pop
cmp
orb
and
movb
dec
test
xor
lret
push
daa
out
insb
popa
sbb
lea
mov
lea
and
xchg
lret
arpl
mov
sub
clc
lahf
xor
rorb
xchg
nop
sub
ret
cmp
addr16
mov
and
dec
aad
ret
aad
sbb
mov
mov
nop
jo
inc
push
push
push
mov
decl
fldl
testl
popl
ljmp
lret
xchg
leave
out
fisttpl
insb
imul
ret
adc
outsb
pop
xchg
outsb
push
pop
pop
clc
fldenv
lcall
out
cmp
xchg
xchg
mov
cli
push
aam
jmp
test
es
adc
adc
int3
pop
roll
out
leave
pop
adc
andb
int
int
cli
and
xor
ljmp
xchg
jb
std
jmp
push
xchg
shl
cltd
in
test
cmp
jg
outsl
cld
fcompl
pop
fidivl
outsl
sub
lcall
xor
and
out
cld
push
inc
iret
sub
mov
mov
aaa
decl
jbe
js
adc
sub
mov
sahf
jae
pmulhw
into
or
inc
xor
or
pop
pushf
fsts
stos
push
les
test
sahf
outsb
and
std
ljmp
lods
sti
outsl
mov
xor
cs
adc
adc
mov
mov
outsl
insb
icebp
jo
mov
jbe
fsts
dec
addr16
mov
test
sbb
ret
push
dec
sti
inc
add
into
mov
pop
jno
jno
xchg
jecxz
ljmp
xchg
mov
jg
cmp
mov
xchg
and
mov
push
xchg
popa
nop
pusha
sbbl
cmp
es
mov
mov
fisubl
push
xchg
jmp
fists
push
gs
cmp
lods
daa
ds
fwait
mov
push
xor
out
enter
repnz
push
idiv
call
aad
add
mov
daa
lret
ds
sub
ljmp
lock
fstps
sub
dec
add
pop
mov
push
cwtl
hlt
mov
jmp
stos
mov
sub
or
push
pop
lea
or
jno
push
decl
mov
pop
pand
mov
pop
or
sbb
adc
cmc
push
jp
pushl
cs
mov
xchg
mov
or
test
lcall
sbb
jns
adc
aad
sbb
sti
loop
pop
jmp
in
pushf
mov
clc
push
mov
push
std
mov
decl
out
aas
xor
push
jb
sub
sarl
fidivs
cmp
inc
je
add
sti
mov
scas
push
ljmp
mov
cs
call
pushl
popa
stc
fiadds
add
lret
bound
xchg
out
fcos
inc
incl
add
loopne
jl
pop
xlat
xor
dec
or
ljmp
cli
es
cmc
jl
mov
mov
mov
jne
inc
inc
clc
push
xchg
out
sub
shll
pushl
cltd
xor
and
push
and
out
mov
jecxz
mov
aaa
mov
enter
jle
inc
add
jl
pop
mov
adc
xchg
and
lea
pushl
xor
mov
xlat
and
pushf
xchg
subl
pop
push
incl
or
push
das
call
loopne
push
enter
inc
les
mov
enter
rcrl
fsub
sub
dec
rclb
xor
repnz
mov
xchg
ret
aaa
decl
lock
jle
mov
mov
push
sbb
pop
pop
pop
lret
jne
push
sti
mov
into
push
in
cld
push
push
xor
sar
cs
scas
add
rolb
lock
sti
inc
mov
sbb
push
mov
ficompl
gs
xor
push
stc
data16
jl
in
jne
icebp
sub
jecxz
xchg
ss
jg
jnp
mov
dec
inc
push
xchg
mov
sbbl
cltd
mov
jg
dec
and
add
cmp
mov
inc
jle
mov
std
pop
jg
loop
or
push
and
lea
dec
imul
ret
xchg
mov
sub
adc
mov
fdivrl
jmp
mov
mov
rcrb
iret
jp
rolb
popf
std
pushl
dec
into
or
pusha
arpl
pop
jmp
in
dec
movsb
shrb
orb
fdivrl
sahf
iret
gs
insl
stos
pop
push
cli
jmp
or
sub
pop
dec
pop
sbb
inc
stos
clc
lods
adc
add
jb
cli
pop
lahf
xor
sub
decl
jl
push
fcmovnbe
sbb
or
popf
jmp
pushl
test
adc
int
dec
xchg
adc
push
movsb
test
inc
cmp
pop
outsb
lock
outsb
fisubrl
cmpsb
mov
sub
test
jle
sub
js
div
jb
xor
decl
insb
sbb
loopne
xlat
loope
sti
pushf
dec
pushf
nop
jb
dec
inc
xor
inc
hlt
pop
ds
xchg
fstps
lods
inc
inc
push
mov
andl
decl
dec
push
sub
out
jae
sub
ss
ja
jns
mov
cmpsb
shlb
mov
gs
add
lods
inc
dec
shl
ss
in
inc
iret
fwait
add
xchg
push
mov
imul
dec
jb
movsl
pop
loopne
fdivl
cmp
fisubrl
fisttpl
das
add
inc
dec
loope
add
sbb
mov
addr16
inc
push
dec
sub
jmp
fnstsw
pop
lods
adc
outsl
cli
insl
mov
mov
sbb
mov
adc
hlt
clc
arpl
hlt
pop
lcall
insl
fdivrs
fldenv
jg
ljmp
mov
lods
iret
xor
sub
lcall
sbb
outsl
cld
inc
shl
pop
ret
and
int
or
ljmp
push
xchg
loopne
nop
cmp
mov
stos
in
mov
loopne
call
call
push
in
ret
push
aam
test
mov
into
xchg
sti
fucomip
jp
xchg
fbstp
popa
xor
ljmp
pop
mov
lret
fimull
fidivs
sarl
les
and
jmp
push
lods
inc
xor
roll
mov
call
sbb
addb
push
mov
cmpsl
movsl
cmp
mov
jo
rcrb
inc
mov
add
jg
dec
addr16
xor
push
push
imul
dec
adc
cmpsb
ret
leave
jnp
daa
pop
push
pop
fbstp
cs
or
sub
push
mov
incl
ljmp
mov
lds
aam
jne
subl
call
ret
out
mov
mov
ja
call
repz
std
sbb
pop
andb
test
mov
sti
ljmp
fidivs
std
call
popa
xchg
xor
dec
push
xchg
jl
jg
xor
add
aas
int3
fstpt
fcoml
popf
addl
sarb
push
fmul
lods
mov
fsubrl
je
fildl
inc
fwait
int
sub
lret
mov
jnp
bound
dec
repz
lea
pop
jg
ss
test
in
in
gs
movsb
xchg
xchg
into
inc
mov
push
sar
ljmp
inc
pop
xor
dec
pushf
jmp
pushf
mov
fs
std
decl
sbb
int
or
fstpt
and
push
jns
incl
aam
shl
sub
lods
pop
xor
mov
mov
xor
sub
in
fisubrs
add
fistpll
or
in
xchg
mov
scas
push
je
inc
adcb
jmp
ds
push
je
cmpsl
sbb
jmp
call
outsl
cmp
dec
cli
roll
sbb
loope
sbb
arpl
fildll
loop
idivl
cmp
mov
iret
add
ljmp
lock
or
lahf
test
sub
repnz
mov
iret
sbb
jmp
int
dec
or
int3
subl
or
mov
std
mov
jp
push
popf
out
lock
adc
in
daa
decb
and
call
sub
pusha
pop
std
inc
jae
pop
mov
out
cmp
cmp
pop
andl
xchg
sbbb
pop
shll
add
fs
popf
jge
mov
mov
fwait
mov
cmpsl
xlat
xchg
in
outsl
xlat
and
pop
lock
jg
xor
cld
push
lods
movq
jg
lret
dec
pop
pop
pop
call
and
loope
jne
hlt
jns
jo
push
ss
and
ljmp
movsb
mov
lcall
sbb
addr16
pop
sub
xchg
sti
pop
xor
gs
imul
fs
or
or
push
sub
pop
mov
cld
hlt
ljmp
addb
and
xor
xor
xchg
adc
push
cmc
enter
push
loop
adc
inc
cmp
lock
ljmp
aam
sbb
xorb
scas
dec
sarl
pop
popa
add
fldenv
es
or
out
inc
shlb
std
push
shlb
dec
icebp
sbb
stos
cmp
push
pop
fwait
mov
std
jno
enter
cltd
insb
jnp
repnz
push
or
dec
daa
pop
sbb
lahf
lock
cmc
movsb
adc
jge
lods
lods
leave
setb
xchg
out
jecxz
ljmp
mov
stos
lea
xor
add
mov
jecxz
sub
decl
sub
ss
pop
adc
lret
popf
sbb
popf
sub
lods
cwtl
xor
pop
xchg
clc
pushl
inc
dec
sahf
ret
xor
adc
pop
mov
ljmp
pop
mov
stc
push
frstor
lock
dec
jmp
icebp
addb
outsl
icebp
and
int3
ret
call
aas
dec
mov
incl
pop
sub
nop
pop
gs
push
pop
sbb
pop
push
push
adc
lock
and
pop
lods
fdivrs
jmp
push
cmp
jge
add
js
jle
push
inc
mov
lret
push
and
loopne
add
js
movsl
mov
decl
mov
xor
xchg
dec
cmp
decl
dec
movsl
imul
adc
and
lds
or
inc
cli
jle
test
out
xor
das
icebp
in
rcll
mov
or
inc
scas
fnstcw
sbb
daa
cmpsb
cmp
push
inc
in
stos
or
mov
in
lea
lods
ss
adc
jmp
gs
mov
movsl
or
ss
jge
in
arpl
sti
xchg
out
incl
xchg
and
mov
popa
sbb
addr16
mov
outsb
sarl
add
aaa
cs
pusha
sub
mov
and
sbb
mov
pop
filds
daa
fistl
xor
das
dec
shufps
call
jecxz
mov
pop
shrb
xchg
sbb
mov
sub
out
jmp
xor
sti
jecxz
mov
call
je
cmpsl
outsl
xor
ret
pop
sub
pushl
cmpb
pop
jb
clc
mov
mov
stc
jbe
dec
push
stc
pop
rcrb
ljmp
icebp
ret
lret
sbb
xor
nop
nop
xchg
push
movsl
mov
lcall
stos
xchg
divb
shlb
in
js
cmp
sbb
decl
gs
mov
popf
insb
xor
outsl
cmpxchg
shll
jle
gs
test
das
jl
fistpll
test
imul
jae
cs
sarb
inc
pushf
int3
mov
xchg
jo
xchg
ja
fwait
mov
frstor
xor
cs
add
cli
test
jb
clc
lcall
cld
and
lahf
movsb
test
insb
int3
and
pop
int
mov
pop
ss
enter
mov
adc
outsl
add
jg
jns
incb
dec
mov
mov
in
incl
fadds
outsb
pop
push
dec
stc
jmp
mov
icebp
lcall
andnps
lods
data16
cmp
sbb
fstl
jge
lcall
insb
icebp
jmp
jmp
cmp
repnz
ljmp
sbb
subb
out
dec
sbb
adc
xchg
dec
fmuls
inc
xchg
mov
call
xlat
inc
jg
popa
incb
dec
shrb
pop
xor
jecxz
bound
sub
or
dec
std
jg
lcall
cmc
aaa
cmc
sub
cmp
call
cmpsl
mov
push
jns
dec
inc
or
inc
movsl
mov
les
sub
clc
push
push
and
inc
mov
ret
cld
mov
push
push
mov
push
cltd
inc
and
in
xchg
cltd
incl
jmp
mov
inc
adc
pop
adc
sub
lret
cmp
lcall
imul
push
movsb
push
dec
mov
dec
movsl
sbb
cmp
jns
call
ret
out
lea
mov
lea
and
imul
adc
add
and
pusha
lea
dec
pop
sbb
xor
rcll
adc
stc
inc
in
sbb
pop
add
pop
sbb
lahf
mov
dec
and
push
mov
fbstp
jnp
sar
das
cmc
call
sub
clc
pop
imull
mov
movsl
mov
and
mov
fmuls
push
stc
jb
icebp
mov
loopne
push
sbb
fidivrs
cmc
addb
mov
dec
xor
sub
out
insb
jb
ret
pop
xchg
in
in
ljmp
stc
mov
jb
cmp
and
mov
adc
sbb
fwait
xchg
push
pop
or
fistl
jnp
stos
lcall
push
add
mov
out
inc
mulb
sbb
mov
jg
icebp
or
xchg
sub
dec
pop
mov
mov
adc
popf
pusha
call
push
bndstx
lods
dec
pushf
shll
js
xor
mov
push
pop
leave
inc
movsb
int
push
test
push
iret
mov
sub
outsb
mov
addr16
lcall
adc
jmp
inc
cmp
or
pop
xchg
jg
test
and
pop
sub
mov
or
fs
cmp
add
lret
outsl
repnz
push
jmp
cli
into
enter
into
inc
adc
jnp
adc
outsl
scas
stos
imul
xlat
mov
lods
lcall
jmp
insl
push
cmc
lea
lahf
outsb
in
movsl
outsb
pop
inc
inc
jl
in
decl
ljmp
add
std
out
pop
and
stos
int3
pop
cmp
or
dec
adc
mov
push
je
sbb
mov
enter
fildl
add
mov
add
mov
test
xorb
jae
jg
jmp
jp
das
scas
mov
xor
pop
jp
popa
mov
xchg
sbb
int
imul
inc
outsb
pop
mov
inc
push
bound
push
or
mov
out
sbb
push
shl
xor
jns
cld
pop
clc
fcoml
cltd
out
fistpl
movsl
test
test
in
inc
rol
in
jp
mov
cmpsb
xor
mov
decl
cmp
mov
int
addb
xor
rol
mov
incl
test
jle
cmc
cmp
jnp
sub
das
icebp
cmp
or
adc
mov
out
andb
mov
pushl
out
movsb
add
aaa
xchg
fwait
call
push
xor
aam
xor
pop
hlt
decl
call
dec
mov
inc
push
out
xchg
jb
pop
xchg
dec
leave
jns
push
sub
in
enterw
aas
lcall
sub
mov
cmc
add
pop
xlat
inc
stos
cld
shlb
jo
fdivrp
decl
dec
mov
mov
xlat
jp
push
jne
nop
add
inc
daa
das
adc
inc
sub
sbb
dec
jp
dec
dec
shlb
fisubl
inc
decl
add
mov
cmpsl
mov
jp
mov
jmp
lds
in
sub
mov
cwtl
sti
jmp
dec
sti
std
pop
loopne
cmp
ss
push
dec
adc
add
data16
std
cmp
call
add
mov
dec
das
cmpsl
pop
mov
lret
sar
ljmp
sbb
orl
out
sar
xchg
lahf
call
clc
mov
push
rcrl
xchg
imull
mov
call
sahf
or
js
cld
xor
shll
loop
jne
sbb
test
lret
mov
addr16
aaa
xor
cmp
inc
xchg
dec
std
subl
cld
sbb
cmpsl
shlb
or
inc
or
inc
imul
inc
mov
lds
cmp
lcall
icebp
mov
adc
add
jle
jmp
inc
scas
jg
cltd
mov
and
xchg
test
cmpsl
xchg
jle
jmp
mov
jnp
cmp
repz
clc
jno
mulb
lods
fst
jae
daa
ljmp
sub
std
mov
jmp
sbb
repz
call
jle
xor
jne
call
xchg
sbb
push
mov
cmp
test
das
rorb
je
arpl
push
rclb
inc
xchg
jg
mov
push
mov
push
ret
inc
mov
and
jg
mov
data16
loopne
fs
jmp
stos
jge
shl
or
mov
hlt
pop
test
and
sub
push
dec
mov
movb
mov
and
sbb
sub
outsb
push
lods
das
jae
mov
add
and
jl
sbb
ss
xchg
hlt
mov
cmp
jb
loope
or
shll
lods
rolb
pop
sahf
notl
pushl
gs
mov
rol
cltd
xorl
shr
adc
subb
lock
mov
rclb
inc
lret
pop
loopne
push
cmpsl
lods
nop
lds
rcrl
jb
shll
and
jp
mov
lcall
push
xor
incb
dec
or
outsb
je
lret
add
cld
outsl
std
mov
xchg
jmp
mov
or
mov
test
ret
cmpb
out
or
out
inc
add
mov
inc
unpcklps
ljmp
hlt
push
sub
pop
loope,pt
bound
xor
lea
out
into
sbb
rolb
xchg
mov
cli
das
in
jg
cltd
iret
jnp
aaa
aam
dec
push
scas
jl
mov
ljmp
out
or
jl
add
cltd
mov
cmp
push
or
pop
jle
jbe
addr16
jmp
outsb
int
cld
leave
and
and
insl
hlt
sub
stos
in
cmpsl
or
mov
pop
arpl
mov
subb
push
fisttps
nop
icebp
pusha
popa
dec
js
pop
mov
push
sub
decl
sub
mov
out
mov
enter
les
adc
jg
lcall
shl
mov
lods
mov
lret
inc
sbb
push
ljmp
jae
and
dec
cmp
xor
lcall
xchg
push
mov
movsl
std
cmp
add
out
lock
jns
mov
sbb
push
adc
ljmp
push
push
in
repz
nop
stos
lret
subl
aaa
int
adcl
cmp
or
in
gs
mov
lahf
add
fldcw
dec
pop
inc
mov
std
jmp
cli
cmpsl
andb
xchg
xor
xchg
lea
and
add
or
sbb
jmp
sbb
pop
nop
mov
repnz
pop
xchg
and
mov
rolb
cmpsb
mov
iret
in
bound
xor
inc
inc
pop
mov
or
add
sbb
jp
dec
pop
mov
fwait
mov
mov
sbbb
sar
decl
repz
jb
jp
pop
push
push
xchg
adc
mov
mov
push
cmpsb
dec
test
int3
inc
mov
push
arpl
cmc
push
aam
or
cmp
jg
ss
mov
pop
mov
in
cmpsl
mov
aas
inc
loop
cmpsb
das
dec
clc
mov
pop
xchg
push
push
out
ljmp
mov
or
ret
outsb
mov
jnp
dec
push
or
pop
jle
cmc
push
mov
xlat
in
mov
lds
dec
aaa
test
sub
xchg
mov
das
adc
pop
jbe
adc
or
cmp
dec
jecxz
add
and
add
jmp
add
mov
insb
jle
adc
cmp
cli
mov
mov
lcall
xlat
pop
cli
mov
xchg
aam
sub
into
pop
pusha
xchg
inc
xchg
push
dec
mov
pushl
fsubrl
jbe
scas
lock
inc
mov
insl
ljmp
fucomip
cmp
xchg
and
aad
xchg
and
es
in
push
popf
data16
pop
push
movsb
nop
sar
ljmp
loopne
and
lcall
test
inc
cld
mov
test
push
push
call
adc
fadd
rorb
mov
sbb
jp
mov
cld
mov
cwtl
push
inc
jne
add
js
jne
mov
jg
fsubrl
jmp
or
cmp
lock
imul
push
jb
pop
pusha
sti
call
xor
or
insb
test
inc
xor
decl
dec
pop
mov
fwait
sbb
gs
xchg
adc
mov
push
xchg
clc
pop
loop
jmp
push
fdivrs
jae
fbld
jmp
mov
jno
mov
aam
lods
xchg
outsb
mov
mov
push
ret
xlat
add
daa
add
jg
bound
push
xchg
xor
cmpsl
xchg
lock
pop
cltd
clc
shll
idiv
jg
mov
in
dec
loope
add
mov
cli
dec
pop
out
jmp
xor
mov
xlat
testb
cmp
decl
pushl
push
out
mov
mov
rolb
call
incl
not
mov
inc
mov
ljmp
push
cmp
and
call
ja
jne
js
cmpsb
sbb
hlt
sub
call
mov
popf
mov
push
mov
jo
in
mov
xor
pop
std
xorl
inc
fistpll
lock
stc
push
addr16
clc
psrld
aaa
mov
mov
call
push
add
repz
mov
into
je
xor
jl
adc
mov
mov
pop
icebp
decl
xchg
cmp
adc
and
jb
stos
leave
or
push
dec
xor
out
push
mov
call
cmp
adc
and
out
inc
mov
psrad
enter
decl
cld
insl
mov
pushf
adc
cltd
xor
cli
outsb
jg
cld
pushw
call
loopne
and
mov
orl
sub
aaa
cltd
dec
and
movsb
incl
and
push
push
mov
imul
ja
and
and
lret
add
push
dec
rep
outsl
imul
ljmp
xchg
sub
out
insb
dec
add
divb
xchg
jmp
xchg
sbb
sub
insl
sub
ja
and
add
mov
add
or
mov
aad
sarl
adc
cmp
pop
lcall
leave
lods
push
ds
fadds
pop
xor
fsub
ret
mov
lcall
std
enter
iret
mov
setne
xchg
sub
jbe
test
push
call
xchg
movsb
sahf
iret
mov
pop
or
loopne
pop
repnz
mov
push
sbb
jp
testb
popa
je
jg
ds
hlt
int3
xor
push
and
mov
adc
push
lods
jg
lcall
cmpsl
add
mov
dec
scas
out
adc
cmp
mov
clc
fcomps
pushf
dec
cs
mov
aas
dec
int3
pop
in
pop
cltd
das
std
mov
mov
xchg
xor
jnp
mov
rcrb
jg
decl
outsb
mov
incb
out
xorl
adc
rcrl
fdivp
decl
lods
or
add
mov
xchg
int3
mov
icebp
ja
ret
js
loope
pop
sub
adc
stos
cmc
sti
mov
call
inc
movsb
xor
inc
and
bound
jmp
aas
adc
push
mov
push
arpl
pop
or
hlt
in
lock
mov
lock
idivl
add
add
pushl
and
mov
xor
push
scas
mov
ljmp
cli
out
test
xor
iret
hlt
cmc
add
mov
inc
hlt
mov
xor
dec
add
push
adc
pop
lock
cmp
bound
pop
loop
xchg
mov
and
dec
mul
sti
and
or
mov
add
xabort
jae
cmp
dec
cli
cmp
cmp
fistps
stc
mov
jge
imul
hlt
leave
sbb
lcall
mov
flds
cmp
add
cmpsb
out
std
mov
ret
lock
lret
ljmp
stc
sbb
faddl
push
pop
inc
xor
stos
faddl
mov
incl
orl
xorl
fldcw
sbb
add
jg
sub
jbe
push
data16
xchg
shlb
xchg
mov
push
loope
es
cmp
mov
cmp
pop
push
das
push
jmp
mov
dec
jl
cmp
test
call
fsubrl
pop
mov
cmp
dec
fisubrs
sub
mov
insb
cs
jge
xor
imul
popa
mov
mov
adc
ds
inc
inc
out
das
ja
call
aaa
pop
in
es
dec
int
push
cmpsb
sbb
inc
aad
inc
cmpb
je
mov
mov
xchg
fidivrs
jl
mov
mov
mov
in
mov
pushf
clc
mov
mov
jecxz
test
call
test
into
mov
mov
cmp
xchg
or
orl
and
jg
inc
dec
shrl
dec
jg
jmp
int3
arpl
mov
fmull
loop
data16
ljmp
jg
ljmp
jmp
pushaw
adc
insl
sbb
fwait
jae
jge
xchg
add
test
lock
and
rcr
negb
outsb
and
pop
std
hlt
out
insl
push
pop
aas
pop
push
jns
and
or
incl
and
xchg
loope
sbb
mov
mov
stos
xchg
jae
lahf
and
mov
sar
jg
sbb
lret
adc
mov
or
xorb
test
adc
mov
negb
std
inc
repz
insl
rcrl
and
enter
xor
jg
call
adc
mov
call
jge
dec
add
cli
call
lcall
loope
xor
out
cmp
fildll
sbb
pushl
xor
dec
lods
sub
push
sarb
pushf
and
outsl
push
cli
mov
push
test
sbbb
jae
mov
cmp
jo
les
inc
push
mov
repnz
xchg
fldl
mov
or
mov
div
xorb
mov
jle
fwait
mov
jle
cld
push
inc
mov
int
xchg
dec
or
jmp
push
sub
inc
mov
xchg
mov
in
or
jg
dec
adc
jg
ret
sub
adc
xchg
or
pop
lcall
mov
pop
mov
aaa
cmp
dec
iret
mov
int3
fcmovnb
out
nop
push
xchg
scas
sub
icebp
xor
mov
out
cmpsb
pop
call
cmp
xchg
dec
shl
xchg
cmpl
in
call
call
adc
push
add
pop
iret
enter
scas
fiaddl
inc
cmp
mov
mov
jns
pop
lods
dec
dec
xor
movsb
incl
mov
lahf
cmpsb
jnp
rclb
xor
adc
cltd
sub
incl
fisubrs
mov
scas
shl
jns
jo
add
jbe
pushl
clc
test
sub
cwtl
nop
sub
sbb
push
sahf
in
lds
call
xchg
jecxz
mov
inc
jb
mov
jno
push
cli
hlt
fisttps
mov
loope
sbb
cmp
in
ljmp
cwtl
jbe
adc
pop
aaa
xor
ja
xchg
out
push
test
test
dec
mov
push
movsl
incl
sti
outsb
cmpsw
add
jno
pusha
pop
jmp
add
and
and
imul
xor
std
movsb
cltd
ss
decl
fs
inc
sbb
cli
jle
movnti
test
sub
popf
pop
das
enter
in
or
push
je
lds
jns
leave
adc
bound
rcr
rclb
or
push
add
jbe
incl
ret
mov
xchg
inc
out
xchg
cmp
dec
adc
ljmp
icebp
lods
mov
jmp
or
pop
imull
mov
das
lock
mov
jae
sarb
les
leave
mov
add
neg
ja
mov
popl
gs
push
lcall
in
xchg
lods
mulb
dec
jg
ljmp
out
mov
hlt
je
sub
loop
or
mov
jg
xorb
mov
jno
or
enter
mov
add
and
dec
sub
call
nop
xor
mov
dec
or
and
fucomip
lea
push
jnp
aad
xchg
and
mov
mov
roll
pop
clc
call
xor
je
mov
mov
mov
cli
inc
mov
fimuls
mov
xchg
out
and
icebp
or
xchg
mov
lods
jns
fistpl
cli
decl
pop
imul
daa
dec
xor
jecxz
push
pop
aad
cld
mov
clc
lcall
test
inc
ret
push
rcll
add
lods
pop
mov
sti
fwait
xchg
lds
daa
adc
test
clc
mov
imul
int
mov
outsl
cld
mov
lods
iret
nop
outsl
hlt
rorb
sahf
mov
ficompl
dec
ret
jmp
sbb
out
scas
jge
int
mov
mulb
mov
or
mov
and
xchg
xchg
fwait
xorb
jmp
inc
pusha
push
lock
jmp
addr16
loope
push
fsubr
or
mov
adc
stos
and
dec
xor
fbstp
xlat
push
js
sbb
xor
push
xchg
dec
xchg
test
outsb
push
pop
adc
incb
push
mov
jge
and
push
ret
incl
jae
lock
jns
call
or
aaa
inc
mov
ljmp
movsb
mov
mov
jae
mov
shlb
xor
and
out
add
jnp
addb
incl
inc
fwait
es
cwtl
sub
add
call
clc
mov
dec
scas
xor
or
fcompl
pushl
mov
mov
pushf
rol
pushf
jg
mov
repnz
pop
test
leave
mov
in
arpl
jns
mov
sub
andl
stos
lock
cli
repnz
ja
add
incl
or
test
rorl
lret
ljmp
std
call
js
fsubrs
mov
test
mov
je
scas
add
cmp
mov
or
jnp
jne
jg
jmp
adc
mov
jg
pushf
mov
stc
inc
cmp
dec
popa
add
jnp
in
jg
cmp
jecxz
int
dec
popa
imul
movsl
fsubrs
fdivrl
fisubrl
stc
in
inc
mov
insb
adc
ret
je
test
xchg
push
aam
je
les
incl
jle
mov
jmp
sbb
ss
dec
iret
shrb
mov
imul
cmc
mov
push
xlat
jecxz
xor
inc
test
adc
lcall
call
loope
pop
inc
jbe
adc
js
movsb
stos
dec
les
mov
pop
lcall
sahf
xchg
dec
fxch
inc
jl
mov
sbb
insb
jg
xchg
loope
xor
shrl
pop
popf
or
mov
cmp
push
push
pop
xor
mov
and
outsl
xchg
insl
dec
iret
adc
stos
adc
pop
pop
mov
xchg
mov
mov
xchg
push
jge
xchg
xchg
rclb
in
int3
cli
push
inc
mov
xchg
insb
call
dec
adc
repnz
sub
inc
mov
repnz
lds
pushl
scas
lods
cmc
scas
loop
push
int3
sahf
sbb
lods
sti
cs
std
mov
incl
sub
incl
add
sub
pusha
enter
cwtl
mov
mov
and
and
jmp
sub
sub
push
xchg
inc
adc
sbbl
push
outsb
aam
call
pop
dec
or
adc
push
adc
dec
and
lahf
cmp
hlt
pushl
inc
lret
cli
outsb
stos
pusha
xchg
add
popa
sbb
decb
push
jnp
call
fisttpl
sub
ret
out
jns
lcall
dec
jg
xchg
int3
push
push
das
xchg
mov
ret
shl
das
fucomip
ljmp
adc
lret
mov
das
or
push
dec
sub
rep
mov
mov
pushl
clc
pop
stc
mov
mov
add
in
jb
cli
decl
ficoml
ljmp
push
inc
leave
dec
comiss
ljmp
pop
addr16
pop
xor
cmp
ljmp
popf
hlt
pop
sti
cmp
push
rclb
or
arpl
sub
add
call
mov
push
decl
cld
pop
aad
pop
mov
arpl
testl
pop
xor
jmp
xor
ljmp
xchg
mov
push
sbb
in
dec
sbb
decl
or
dec
ljmp
xor
push
call
mov
fwait
jge
jle
jge
popa
shll
pushl
cmp
mov
lds
neg
jp
dec
mov
mov
fdivrl
out
or
xor
lock
popa
cmp
decl
stos
mov
nop
pop
pop
xorl
push
adc
jno
clc
push
mov
push
push
sub
scas
pop
xchg
sarl
inc
pop
aam
test
mov
add
xchg
sti
and
mov
push
test
cli
call
mov
fwait
or
adc
and
add
outsl
js
xlat
pop
sub
ja
xchg
out
gs
jecxz
sbb
sub
daa
imul
shrb
mov
insl
inc
int
mov
in
fadds
sub
pop
std
test
mov
adc
call
pushf
pop
push
ret
lock
decl
imul
cmc
loop
mov
cmp
popa
popa
xor
ficomps
fucomip
decl
pop
push
sub
cmpsb
adc
sbb
pushf
outsl
inc
jno
aad
mov
icebp
aaa
jl
call
movsb
in
test
cmpsl
jne
cwtl
sbb
push
popa
pop
cli
pushl
in
mov
out
sbb
or
mov
into
xchg
loopne
dec
cmp
insb
pop
xchg
mov
pop
mov
jns
jge
inc
test
xor
cli
xchg
jg
pushl
adc
xor
fwait
mov
aaa
jle
mov
stc
call
jg
decl
pop
cmpsl
in
loop
hlt
or
mov
mov
jg
out
jns
xor
adc
sahf
popf
jp
cmp
dec
js
fs
in
pop
jp
lock
cmp
mov
cmpsl
mov
test
bound
fldl
movsb
iret
lcall
push
mov
add
lcall
cmp
sbb
test
daa
bound
sbb
pop
insb
cmp
add
xchg
push
data16
sahf
adc
jbe
mov
pop
jg
add
aas
ds
lahf
or
and
mov
je
movsb
pop
mov
loop
fistpll
adc
sub
or
stos
out
fsubrs
and
enter
andb
loopne
pushl
mov
ds
mov
cmpb
ss
cmp
xor
inc
pop
das
add
loopne
dec
xlat
sub
outsl
xchg
arpl
outsb
jmp
add
in
mov
mov
int
test
mov
shll
out
jecxz
push
push
pop
dec
sbb
and
in
lods
push
lea
add
cs
jmp
sub
std
rclb
cli
dec
je
notb
stc
dec
fcoms
push
jns
mov
pushl
cmc
mov
std
and
and
push
incl
incl
int
inc
pushl
insb
cltd
int3
xor
std
inc
sti
fisubrl
jg
xchg
cmp
xor
mov
sbb
xor
ljmp
aas
aaa
es
cmpsl
mov
repz
stos
nop
mov
es
mov
jns
mov
aas
scas
imul
pushf
cmpl
incl
dec
mov
add
lret
mov
mov
mov
ljmp
mov
ret
shrl
repnz
mov
mov
push
push
lret
xchg
mov
cltd
imul
cld
and
mov
fwait
dec
in
call
jmp
adc
mov
fistpll
sarl
adc
adc
cmp
adc
out
in
sbb
push
call
in
add
fstps
mov
xchg
xor
jg
and
xor
std
push
leave
xor
mov
mov
push
bound
pop
pop
fisttps
lock
xchg
jmp
xor
pop
jns
iret
xor
and
inc
js
sbb
repz
xchg
sub
pushl
xchg
popf
xchg
ss
pop
xor
sar
mov
shrb
fisttps
movsb
mov
inc
mov
shll
test
add
fldcw
test
out
cwtl
pop
test
repz
mov
and
jmp
jecxz
push
sar
test
inc
jecxz
mov
shrl
into
pop
out
movsb
xor
push
jg
add
sbb
xchg
jbe
stos
call
adc
add
push
rcrb
sub
fisttps
and
adc
decl
mov
xor
pop
mov
out
je
repnz
ret
sbb
ret
xor
pop
enter
adc
ljmp
add
gs
imul
fistpll
and
les
aaa
mov
or
shl
rorl
jecxz
lret
das
std
fmull
test
adcb
fisttpl
pop
decl
scas
inc
lock
xchg
test
fcmovne
cmpsl
pop
in
sbbl
push
cmpsl
lea
mov
cmpsb
or
ljmp
scas
add
pop
mov
push
lret
decl
jno
pushf
cmp
cli
mov
std
das
cs
loop
lods
popf
push
push
je
push
lds
ret
idivb
cs
sti
clc
sub
sahf
mov
in
pop
int3
fisubrs
sbb
cmpsl
jecxz
mov
outsl
iret
std
dec
imul
mul
sar
decl
int3
fwait
mov
imul
adc
jnp
cmc
mov
cltd
fldenv
push
cmp
xchg
lret
inc
dec
loopne
test
outsl
gs
arpl
mov
movb
dec
orb
call
insb
ret
cmpl
push
xchg
xchg
into
aam
sti
cmp
insb
loop
cld
ret
iret
ds
mov
fisubs
stos
shll
into
cmp
xchg
lahf
enter
repnz
mov
ficoml
push
insb
data16
ljmp
ds
orb
add
adc
fiaddl
or
leave
dec
fmuls
insb
jl
xchg
mov
adc
mov
mov
rorb
sbb
pop
in
pop
push
pop
lods
xor
push
or
jmp
call
dec
fisttpll
push
incl
decl
fwait
and
xor
out
xor
xorb
jmp
iret
iret
mulb
movb
js
leave
pop
jmp
xchg
mov
mov
outsl
inc
icebp
fisttps
lret
in
push
pop
clc
xchg
cli
jmp
frstor
outsb
adc
outsb
ljmp
xor
fucomip
test
enter
scas
jb
lods
add
or
int
sbb
fwait
call
xor
aaa
adc
mov
adc
insb
cmc
sub
repnz
sar
stc
xchg
fstps
mov
jg
cmp
adc
or
pushl
push
mov
inc
cmp
enter
adc
push
decl
pop
ja
push
andb
pop
cmp
stos
notl
cltd
das
xchg
faddp
repz
and
decl
pushl
sbb
sbb
or
decb
xor
imulb
dec
call
cli
push
aas
sbb
in
sarl
pushl
lea
jne
sbb
xchg
jg
sbb
push
push
inc
push
lds
mov
std
adc
rol
jmp
sarb
pop
adc
fs
xchg
pop
jb
push
pop
loop
sbb
nop
cmp
mov
pop
cmp
dec
sub
out
mov
xchg
inc
movsl
repz
sub
adc
push
xchg
popa
dec
push
repz
cli
shlb
cmpsb
pusha
ja
push
hlt
ficomps
mov
sti
or
pop
xchg
pushl
or
fildll
lret
push
cmp
push
pusha
into
movsb
lcall
xchg
push
and
mov
sub
out
adcl
pop
mov
jmp
xchg
int3
ljmp
sub
dec
fimull
mov
lahf
int3
int3
pop
or
int
inc
call
xorl
sbb
fldz
test
scas
dec
and
cmpsl
or
sbb
pushl
push
lret
jle
in
int
push
sub
pushf
pop
repz
add
hlt
sbb
dec
fnstsw
std
fisubrl
cmpl
ja
or
scas
sub
icebp
xor
jnp
call
sbb
out
inc
pushf
xor
xor
arpl
mov
popw
or
adc
xlat
addb
push
push
inc
nop
mov
test
lcall
out
xor
cmp
outsl
adc
ret
cmpsb
dec
jb
fstpt
popa
inc
pop
mov
clc
cmp
movsb
arpl
cmc
aam
mov
mov
xor
push
push
pop
imul
ret
outsl
adc
jmp
mov
jge
dec
push
jo
or
outsl
pop
loopne
in
push
loopne
lahf
mov
call
stc
dec
pop
insl
test
shl
or
cmp
mov
testl
movsl
clc
das
push
loopne
and
or
pop
ret
pop
aaa
icebp
ffreep
push
nop
fs
outsb
push
nop
inc
out
rclb
int
cwtl
movsb
scas
aam
mov
or
scas
xlat
fimull
sbb
in
adc
lcall
dec
test
jbe
popa
dec
cmp
push
aaa
loop
lods
js
int
sub
pushl
inc
out
je
inc
xlat
cmp
jmp
dec
iret
or
pop
jmp
cltd
mov
pop
cmp
in
or
pop
pusha
loope
sub
mov
test
fwait
push
jle
fcomip
jmp
test
jle
out
mov
mov
mov
push
xchg
add
div
adc
pop
mov
icebp
adcl
lods
das
mov
ljmp
stos
mov
lock
add
lock
fstps
shlb
incl
call
push
sbb
or
pop
xchg
mov
popa
js
push
addb
cld
push
mov
cmpsl
xor
out
bound
and
adc
mov
add
hlt
cmp
or
jnp
dec
push
inc
movsl
stos
push
repnz
pop
add
call
loope
adc
jno
pmaddwd
fistpl
jg
mov
fldenv
and
xchg
lock
fs
jne
addr16
and
sub
dec
and
and
das
cmc
jg
arpl
mov
sub
xchg
push
push
sbb
mov
add
and
lcall
ret
push
inc
ret
out
dec
stos
pop
mov
or
aam
ds
lahf
lds
xchg
mov
mov
dec
and
xor
dec
lret
cmp
repnz
mov
jmp
or
sbb
mov
jb
jmp
test
inc
fnstenv
pushf
mov
pop
loope
push
pop
clc
add
data16
test
lods
movsb
loop
decl
pop
push
fcomps
push
fsts
xor
shll
addl
filds
out
pop
cli
inc
dec
sbbl
call
incl
cmpsl
std
adc
jecxz
add
test
xchg
and
push
adc
loop
decl
dec
lea
jno
or
call
pop
fsubs
lcall
pushf
mov
ret
mov
mov
dec
pop
fistpll
fneni(8087
jno
sub
les
incb
sub
mov
fstpt
push
mov
stc
xchg
dec
adc
fwait
jmp
icebp
adc
mov
sbbb
idivb
push
incl
pop
push
ljmp
outsb
or
inc
and
stos
xchg
or
push
xor
clc
and
cmpsb
insb
jno
jmp
fistpll
fisubrs
int3
sbb
daa
jge
sub
pop
cld
dec
jnp
and
adc
pop
adc
ja
lcall
call
mov
in
xchg
cmp
pop
orb
stos
sbb
or
hlt
push
push
movsl
xchg
xchg
daa
int
add
sarb
sbb
and
xchg
aas
push
push
and
incl
jle
fiadds
insl
dec
mov
fbld
sarl
out
shrb
jne
mov
call
fmuls
mov
push
enter
nop
push
add
jp
adc
dec
fldl
lcall
fcoml
ljmp
add
or
clc
and
jecxz
clc
xor
inc
std
jmp
mov
aam
pusha
cmpsl
and
insb
mov
or
xchg
negl
push
lcall
cltd
jno
xchg
movsl
dec
inc
aas
jp
subl
add
xchg
ret
cwtl
fwait
test
hlt
xlat
sbb
decl
sbb
or
jg
psadbw
adc
or
cmp
jne
xchg
pop
aad
ljmp
ret
sub
push
das
jns
ror
outsb
stos
aad
pop
sub
adc
add
jmp
add
ljmp
in
outsb
lret
call
clc
push
daa
fsubrp
add
sub
adc
mov
push
fnstcw
fcompp
cmpsl
jns
mov
std
arpl
xor
xchg
xchg
xchg
inc
adc
js
loopne
mov
js
in
sar
lcall
jg
hlt
ret
cmp
pop
insl
loope
and
xor
jge
cmp
mov
cli
cli
ret
and
decl
sub
lock
scas
or
mov
mov
pop
loop
incl
icebp
push
jno
inc
dec
inc
cmp
mov
adc
lods
sbb
mov
movsb
mul
incl
inc
fnstenv
je
mov
iret
adc
fistpl
decl
ljmp
lods
insb
pop
cmpsl
pusha
adc
les
and
mov
cmpsb
dec
decl
loopne
je
rolb
jae
sbb
pop
cli
lcall
sbb
push
mov
jge
jmp
arpl
stc
push
xor
aaa
mov
dec
push
lods
cmc
cmp
les
pop
call
nop
pop
sbb
aas
arpl
xchg
mov
mov
mov
mov
fmuls
jns
outsb
push
push
movsl
stos
jmp
xchg
pop
ret
loop
test
pop
jg
dec
scas
sub
jmp
pop
cltd
fdivl
pop
outsb
lahf
ljmp
or
aad
push
sbb
ret
das
imul
frstor
into
jbe
or
pushf
out
outsl
cli
mov
lcall
jb
inc
fstl
jno
out
scas
add
fisubl
push
jg
lcall
sub
int
jge
out
fwait
dec
mov
mov
outsl
cld
dec
stos
cli
pop
xorb
dec
pop
cmpsb
movsb
jae
mov
das
repnz
hlt
add
jle
inc
add
pop
js
and
xchg
test
jne
xlat
cmp
mov
addl
push
jg
inc
popa
xor
jne
xchg
push
push
sub
std
and
movsb
daa
and
mov
adc
and
sbb
movsb
sub
lret
incl
and
add
icebp
fadds
xor
xor
xchg
data16
js
psubsw
xchg
dec
push
ljmp
ja
out
adc
push
mov
xor
lcall
mov
jp
insl
loopne
xor
lcall
jbe
push
inc
cmpsl
loopne
cmp
ucomiss
push
scas
jo
mov
and
cmpsb
xor
sidtl
mov
mov
lock
jmp
and
dec
adc
mov
pushf
pop
mov
mov
xchg
jnp
ljmp
lea
jae
fnstsw
je
push
mov
xlat
fsubrl
lahf
shll
pop
cld
call
fucomi
test
mov
nop
mov
jl
repz
imul
mov
iret
movsl
fisubrs
rcl
loopne
xchg
sub
cmp
push
push
mov
mov
add
mov
push
mov
sarl
push
mov
in
jecxz
and
ret
addl
adc
jecxz
xchg
adc
test
jbe
loopne
xor
sar
lahf
cwtl
cmp
movsl
imulb
mov
add
or
pop
inc
fdivl
mov
mov
ja
dec
mov
sbb
sub
out
rol
xlat
push
repz
ret
call
inc
in
call
daa
cltd
popf
ud1
ds
je
and
in
jmp
subb
xor
imul
fildll
jno
out
rorl
mov
test
and
xor
push
jmp
sbb
mov
mov
or
mov
sub
ja
test
call
shl
test
mov
call
ss
xchg
loope
loopne
push
inc
rorb
or
decl
mov
mov
mov
adc
insl
sahf
dec
sub
sbb
and
shll
xchg
mov
mov
push
sbb
mov
call
clc
cld
or
popa
sahf
imul
jmp
jl
mov
add
imul
jmp
insb
push
add
sbb
je
pop
push
cmp
lods
and
jnp
scas
outsl
jp
jl
adc
ljmp
xor
sub
mov
enter
rolb
mov
popf
mov
ds
mov
xor
int
lods
subl
int3
push
and
jp
aas
push
and
dec
sub
xchg
imul
jae
sbb
clc
inc
fucomip
movsl
pop
inc
xchg
mov
fisttps
in
movsl
lcall
push
imul
je
pop
mov
out
addl
jmp
mov
sbb
jecxz
sbb
xor
int
push
aam
decl
mov
stos
xor
mov
sbb
aam
cmc
repz
rclb
pop
test
inc
mov
adc
jmp
xor
mov
hlt
in
hlt
ljmp
inc
cmp
loope
xor
sbbl
jb
push
insb
jns
cmp
ljmp
mov
jbe
pop
mov
lret
and
inc
lret
dec
sub
pop
mov
call
lock
outsb
cwtl
xor
sub
cli
out
xchg
mov
fdivp
lcall
fbld
ljmp
dec
es
stc
lret
repz
mov
incl
mov
sbb
push
iret
jb
inc
mov
mov
lcall
addr16
mov
popf
mov
int
push
cmp
lock
mov
nop
add
clc
add
pop
fcoms
and
xchg
xchg
mov
std
mov
icebp
mov
test
jno,pt
hlt
insb
mov
ljmp
or
loopne
pop
jo
leave
and
ljmp
enter
dec
out
cld
jg
push
mov
push
dec
or
inc
mov
pop
test
xchg
dec
or
cld
decl
mov
out
dec
pop
ret
lock
cmp
jbe
sub
dec
add
jnp
inc
dec
roll
mov
and
and
push
or
mov
loopne
ss
in
xchg
jp
aam
sbb
jg
lcall
push
xlat
or
popa
movsb
stos
inc
push
dec
lret
sbb
mov
call
inc
lret
push
fdivl
dec
push
outsl
dec
outsb
jne
fstps
int
popl
jnp
sub
jge
cltd
out
inc
into
push
mov
pop
adc
jg
outsl
hlt
mov
cmp
mov
adc
sbb
mov
add
push
leave
lea
mov
pop
jbe
jle
mov
adc
push
jb
iret
xor
inc
lods
shll
push
stos
mov
jecxz
cld
insl
mov
xchg
jecxz
pop
sbb
in
fwait
rcrb
jg
out
inc
mov
sahf
in
ss
aas
adc
cmp
lea
dec
pop
out
mov
sahf
call
mov
in
pop
shll
xor
push
mov
or
test
shr
and
mov
aas
xchg
jecxz
loop
sti
in
fisttpl
cld
cmc
mov
jmp
dec
icebp
push
jnp
inc
inc
lret
icebp
and
jg
mov
popf
sub
mov
xor
aaa
push
and
xor
fwait
pop
sub
jmp
decl
mov
jmp
jmp
jb
aaa
aas
cltd
mov
dec
or
outsl
pop
jmp
xor
roll
cs
data16
sti
in
lret
ljmp
out
lock
es
pop
sub
stc
mov
testb
mov
push
repz
dec
insb
sub
pop
into
adcb
sysret
sub
xchg
imul
out
imul
stos
add
jae
fistpl
outsl
aad
adcb
pushl
fmul
xchg
add
pusha
outsl
xor
push
sub
xchg
faddl
scas
loopne
xor
movsl
cli
or
loop
cmp
mov
call
mov
mov
clc
stos
push
lahf
shlb
mov
mov
mov
gs
js
aad
xchg
pop
mov
cmc
xor
shrl
mov
loopne
into
jle
pop
mov
mov
dec
sti
test
sub
sti
push
sbb
sbb
shlb
xor
ljmp
std
lock
sbb
and
mov
int3
cli
dec
mov
loop
icebp
out
call
out
hlt
fistl
ss
mov
pop
jne
cmc
sbb
call
and
clc
rolb
jmp
add
add
incl
push
cltd
je
xor
clc
mov
dec
mov
test
adc
jmp
and
in
lret
in
stc
push
sbb
out
mov
hlt
jno
pusha
rorl
mov
cmp
testb
aam
sbb
mov
call
std
iret
mov
jbe
or
jp
add
cs
dec
sub
aad
cwtl
mov
jns
xor
dec
sub
cltd
xchg
lret
xchg
insb
inc
adc
pop
cmp
mov
incb
js
dec
decl
es
push
flds
pop
jno
add
sbbl
pop
cmp
incl
ljmp
addr16
mov
jae
je
inc
addb
cmp
int
add
bound
cmpsb
and
or
movsl
scas
fs
out
mov
and
filds
stc
pop
outsb
out
int
lock
jmp
mov
xor
loopne
repz
cmp
roll
or
sbb
lea
jmp
pop
xor
mov
loop
iret
adc
xor
push
cli
orb
xchg
or
pop
push
lahf
es
in
repnz
fwait
lcall
or
imul
outsl
adcb
sbb
push
sub
sbb
xor
sbb
clc
outsl
jne
mov
adc
sub
rcrb
fstps
loop
sbb
jl
mov
xchg
sub
and
jmp
push
jle
pop
dec
std
cli
lahf
push
orl
scas
sbb
fildll
hlt
lcall
stc
ret
jle
xor
cwtl
lahf
iret
push
push
mov
mov
int
xlat
mov
outsb
call
mov
xchg
mov
shlb
xor
mov
das
add
jns
rorl
mov
jmp
clc
imul
and
and
and
imulb
fistpl
jo
inc
cld
ja
incl
lods
mov
int3
test
pop
xor
int
jmp
push
ja
and
jne
sbb
nop
sbb
out
gs
adc
jnp
lcall
scas
cmp
fcmovb
mov
into
dec
mov
mov
repnz
cli
xchg
data16
push
in
subl
cmp
jg
xchg
enter
aas
xchg
sub
fwait
add
bound
ds
insb
sub
lcall
push
xchg
mov
mov
loop
pushf
mov
aad
ja
inc
loope
dec
cmp
lret
push
addr16
ds
jmp
push
jne
add
ljmp
lahf
push
sub
push
pushl
jg
cli
pop
icebp
mov
jbe
stc
cmp
lcall
std
inc
push
push
adcb
ss
ret
fdivr
es
sub
sub
mov
jb
pop
xor
rcrl
jns
push
fidivl
mov
stc
out
pop
ljmp
stos
pop
cmp
movsb
cwtl
and
dec
lock
decl
push
mov
lods
jecxz
cmp
out
outsl
push
push
mov
les
xchg
cmc
mov
cltd
sub
and
ljmp
icebp
push
add
in
dec
and
push
je
cmp
jne
add
and
push
dec
mov
sbb
hlt
aad
fucomip
fisttpl
xor
ss
insb
sub
xchg
sub
lods
test
jg
mov
inc
adc
imul
cmpsl
lcall
fidivrl
pop
jle
mov
sub
inc
and
jmp
test
push
ss
add
fistpl
or
jae
cmp
ljmp
mov
inc
jnp
pop
rcll
divl
sbb
mov
pop
sar
lcall
inc
es
hlt
and
xchg
sbb
test
loopew
jb
cmpsb
rcrl
cmp
pop
sbbb
decl
addr16
mov
sar
cmc
jmp
popf
leave
xchg
loop
push
adc
mov
inc
xor
jge
pop
call
lcall
adc
fmull
cmpsl
pandn
idiv
mov
add
adc
data16
cltd
insl
pop
pop
ja
lock
inc
jns
stc
incl
dec
mov
pop
sub
sarl
adc
add
inc
in
out
push
sarl
adc
popf
out
sahf
mov
push
ljmp
mov
fidivl
pushf
movsb
cmp
fstpl
push
dec
loop
mov
cmp
jg
jo
nop
pop
xor
and
test
in
jno
jo
mov
dec
dec
mov
mov
incl
in
or
int3
inc
push
jecxz
fistl
mov
fbld
js
lcall
jno
mov
test
xchg
into
and
outsl
icebp
sti
mov
std
div
adc
jge
sbb
jno
std
pop
call
jmp
mov
xchg
push
add
mov
sub
cmp
mov
es
enter
aad
pop
jge
xor
and
lock
pop
push
cli
inc
in
jecxz
inc
mov
push
fmul
mov
or
js
fisubrl
add
das
popa
xchg
jmp
jmp
pop
ss
adcb
dec
imul
call
lret
imul
data16
jl
xchg
mov
sar
or
add
fcomi
loop
cmp
inc
add
pushf
sar
ljmp
fimuls
cltd
mov
xlat
mov
fwait
push
and
daa
pop
mov
pop
out
inc
std
adc
jmp
outsl
lock
call
andb
push
enter
movsl
push
ds
test
jecxz
clc
jmp
cltd
sub
test
xlat
test
sub
int
xchg
jmp
decl
into
jno
rclb
pop
test
lret
push
cmpsl
lods
ljmp
call
lea
cwtl
push
jp
adcb
decl
cmc
fsubl
and
mov
scas
mov
sbb
js
jno
ja
nop
std
or
mov
rcrb
dec
jecxz
inc
inc
loop
stos
inc
imul
pushl
adc
jae
jbe
sbb
and
enter
dec
fists
jg
iret
ljmp
addl
add
jmp
pop
loope
aad
sbb
negb
fiaddl
jmp
sahf
sbb
mov
adc
decl
das
mov
in
push
inc
daa
lcall
dec
hlt
imul
pop
cmp
jecxz
cli
int3
test
adc
mov
mov
call
inc
out
xor
mov
adc
lea
addr16
decl
mov
ds
mov
jle
xor
mov
rcr
ljmp
push
je
jne
push
push
shrl
and
test
js
sti
stos
mov
and
xor
in
pusha
out
cs
add
inc
fbld
xchg
dec
cmp
jg
jg
or
outsl
pushf
jne
pushf
je
pop
push
pop
das
scas
add
jae
mulb
dec
ljmp
pop
add
nop
mov
fwait
add
test
pop
std
inc
cld
dec
iret
iret
test
and
insb
repnz
push
js
not
std
mov
inc
aas
mov
mov
jp
inc
xchg
les
and
gs
mov
sbb
rcrl
dec
pop
loope
pop
scas
pop
arpl
out
xchg
jl
dec
ljmp
pop
loop
xor
cmp
cmovno
jno
mov
mov
sbbb
arpl
fistpll
jno
insl
hlt
jg
pusha
pop
cmpsb
or
xchg
xchg
push
cmpsl
add
aas
subl
sbb
mov
xchg
mov
xchg
or
xchg
hlt
xor
mov
insl
and
cmp
dec
lds
pop
push
insl
mov
cmp
in
out
cmp
repz
sub
inc
sarb
imul
ljmp
fbstp
ret
test
lea
ljmp
ds
shll
dec
repz
sarb
test
ja
pop
pusha
cs
neg
iret
push
decl
mov
scas
xchg
push
inc
and
movsb
sub
or
leave
insb
mov
ret
sbb
or
jecxz
push
std
shl
cmp
pop
mov
test
push
fsubl
aad
mov
leave
jp
pop
or
in
sbb
jl
out
inc
xchg
subb
dec
inc
addr16
fstpl
cld
mov
out
xchg
add
lcall
and
jmp
icebp
mov
jge
les
adc
xchg
gs
sbb
addr16
adc
loop
cmpl
cmpsb
repnz
stos
push
loope
ljmp
inc
push
fildl
cltd
xlat
adc
aad
xor
out
push
adcb
and
sar
jmp
mov
movsl
mov
sub
cmc
loopne
mov
cmp
test
das
hlt
pushl
rorb
divl
push
mov
aam
ds
push
jl
and
hlt
mov
cmp
mov
cs
cwtl
jp
pop
aad
in
jns
jmp
dec
dec
inc
lcall
sti
jnp
ljmp
aad
movb
decb
imul
arpl
sar
dec
ljmp
les
inc
push
pop
in
sub
vpaddd
push
mov
out
mov
dec
dec
xor
jmp
mov
inc
lahf
mov
dec
lea
push
jnp
mov
sbb
insb
xor
pop
dec
xchg
out
lea
lods
mov
mov
and
fcom
inc
jo
mov
sbb
add
cwtl
mov
mov
and
call
sub
sbb
mov
lcall
loope
and
call
pop
pop
scas
outsl
add
pop
test
sarb
leave
add
cmpsb
cmc
imul
push
mov
cld
orb
xor
adc
std
or
outsl
lock
adc
cltd
mov
mov
hlt
mov
shlb
jecxz
cmpb
xchg
or
loop
ret
and
pop
mov
gs
and
incl
cmp
das
mov
mov
mov
sbb
andl
in
add
cmc
incl
xor
inc
mov
imul
jno
cmc
add
push
jg
mov
hlt
or
mov
ret
data16
push
imul
ljmp
sub
xorb
jecxz
sub
inc
xor
mov
lock
xchg
loope
decl
pop
inc
mov
pop
hlt
pop
push
sarb
sahf
or
mov
cmp
mov
nop
cmp
push
sarl
mov
push
cmp
js
pop
jge
ljmp
out
imul
std
divb
pop
cld
pushl
fst
or
pop
loope
mull
call
add
xchg
out
jns
lahf
mov
int
xlat
and
jle
filds
iret
subb
icebp
add
pop
adc
loope
mov
mov
mov
pop
mov
or
hlt
mov
mov
and
xor
enter
jmp
xor
pop
add
jnp
mov
cld
ljmp
cmc
decl
repz
xchg
adc
in
divl
mov
cli
lcall
lods
cld
adc
jl
jne
pop
dec
adc
mov
inc
inc
inc
in
fwait
test
cmp
push
mov
pop
insl
cmp
xchg
lcall
insl
notb
xchg
incl
push
cmpl
mov
jnp
rcrb
jae
push
inc
loopne
sub
pop
pop
movsl
jg
in
sahf
push
and
xchg
nop
xor
les
xchg
sbb
cwtl
clc
mov
pop
pop
add
shl
cwtl
ss
push
in
add
adc
sbb
mov
push
pop
loopne
lds
test
adc
mov
mov
movsl
mov
fs
loopne
and
dec
fisttps
call
sub
add
bound
jbe
mov
lock
mov
test
hlt
jae
int
imul
inc
jl
xchg
jg
into
sub
adc
orl
jb
das
gs
adc
lods
repnz
sbb
les
das
cs
jbe
mov
mov
and
je
pushl
mov
adc
aad
jne
lods
jne
cmp
adc
mov
sub
movsl
xor
pop
mov
sub
lcall
mov
test
addr16
xchg
cmp
fidivrl
and
inc
pushl
imul
scas
cmp
fwait
dec
mov
inc
call
inc
enter
jmp
cmp
jns
call
xor
push
cmpsb
push
add
and
jl
jg
inc
pop
or
hlt
fisubs
push
incl
aaa
rcll
sub
frstor
out
sarb
incl
lret
ss
push
les
sub
test
stos
sbb
enter
ficomps
cli
out
scas
cwtl
divb
stos
and
movsl
and
mov
mov
aaa
test
cmc
fucomip
mov
push
xor
or
mov
jo
add
push
sub
outsb
ficoms
xchg
add
sbbb
cltd
inc
repz
xchg
cmp
jg
inc
nop
mov
sbb
cmpsb
mov
decl
fisubs
dec
jb
and
mov
test
movsl
mov
pop
lods
lock
lods
pop
cld
pusha
loopne
cld
push
push
sub
dec
std
das
mov
jle
das
fimuls
lahf
dec
shlb
adc
xchg
cli
stos
cmp
xor
cmp
push
or
and
jg
fdivl
jge
push
mov
lahf
pop
stc
inc
sub
call
mov
in
aam
incl
add
mov
jle
mov
or
lcall
jne
jmp
or
dec
cmc
inc
sbb
push
cmc
fucomip
mov
loope
es
repnz
addr16
sbb
rcrl
adc
mov
push
cmp
popf
push
repnz
decl
fbstp
jae
mov
xor
cmp
mov
mov
out
cltd
xchg
ljmp
pusha
pop
pop
add
dec
xchg
add
ljmp
xchg
cmp
rolb
push
push
loop
lea
add
loop
jo
adc
pushf
mov
xchg
sub
into
mov
iret
jns
or
dec
pop
or
mov
mov
loopne
jge
in
in
fwait
aam
inc
inc
aam
mov
test
mov
decl
sub
cmp
sub
add
jmp
xor
sub
imul
mov
sbb
adc
insl
xchg
lret
cmp
push
call
stos
pop
inc
std
pushl
dec
push
sub
in
inc
sub
or
mov
mov
out
decl
add
pop
sbb
cmpsl
inc
push
es
lret
adc
sti
sar
jg
repz
adc
mov
pop
xlat
outsb
lds
and
out
lcall
or
mov
pop
outsb
xor
stc
dec
hlt
xchg
aaa
mov
add
mov
std
incl
aam
add
add
pop
jmp
mov
push
lret
mov
jb
xchg
and
aam
call
outsb
push
mov
insb
and
test
adc
cld
pushl
out
aas
loope
test
idivb
lar
mov
push
or
cltd
xchg
jecxz
cs
and
push
addr16
test
cmc
add
xchg
ljmp
add
testb
and
enter
mov
call
dec
subb
and
frstor
rcll
mov
cltd
test
cmpsb
lds
xlat
xchg
jl
jl
pop
push
fs
adc
and
inc
xchg
jbe
jecxz
and
repz
incl
cld
loopne
xor
adc
push
adc
sbb
test
in
jbe
cmp
jle
xchg
sbb
fnstsw
sub
popf
adc
jg
sbb
jno
out
sbb
stos
sar
mov
and
je
lahf
jle
xor
outsb
dec
ret
mov
ljmp
mov
xchg
sbb
movsl
mov
dec
imulb
xchg
lcall
loop
inc
jbe
cmp
in
idivb
incl
movsl
jno
mov
shll
inc
jecxz
cwtl
push
sub
xor
decl
inc
cmc
pop
push
insb
jne
hlt
in
xor
cli
jno
rcrl
push
cmp
incl
or
lds
bound
cmp
sbb
lcall
cmp
jg
call
cltd
les
jle
stos
mov
inc
sub
jmp
fwait
xchg
incl
xlat
and
outsb
dec
mov
xchg
addr16
xor
inc
scas
call
arpl
push
ret
decl
xor
cmp
pop
xchg
or
sub
jg
pop
sbb
ljmp
in
pop
les
push
scas
lret
jp
call
mov
insb
shrb
jb
push
pop
inc
outsb
xchg
cmc
in
cmpsb
call
push
test
in
mov
int3
and
jnp
clc
fucomip
pop
fcomp
lahf
imul
jle
push
sub
decl
cmp
lock
add
xchg
mov
or
dec
outsl
outsb
aam
or
jg
pushf
sbbl
rcll
jbe
int
rdtsc
fs
call
mov
mov
outsl
test
popf
ret
jno
cmpsl
jne
mov
sub
cvtps2pi
xor
push
test
fucomip
idivb
ds
imull
hlt
inc
sar
mov
push
dec
movsb
mov
push
mov
stos
test
jnp
inc
repz
cmp
inc
into
or
mov
in
pop
call
mov
aas
arpl
sbbl
hlt
lcall
repz
xchg
std
inc
sub
fcom
mov
xchg
inc
sub
inc
stos
rol
xchg
in
std
adc
aam
movsl
imul
mov
cmp
cs
jmp
jmp
sahf
jl
popf
test
test
xor
jmp
jns
jno
into
add
dec
mov
aam
push
fbstp
aaa
or
data16
insl
mov
decl
into
stos
cmc
imul
push
icebp
sbb
ds
sub
add
push
adc
lea
pop
pop
imul
push
push
das
std
ljmp
sub
popf
and
dec
mov
loope
hlt
pop
sub
pop
add
lock
or
xor
lret
ficoml
sbb
incl
clc
push
fdivrl
fcomi
or
jp
lock
jl
adc
mov
xor
and
dec
mov
xlat
mov
inc
das
or
mov
jl
mov
int3
pop
lret
imul
pop
cmpb
jb
fdivrs
xchg
xchg
xor
jg
dec
inc
xor
xor
je
push
pop
add
insl
fcmovnu
scas
aas
dec
jmp
aam
push
cmc
lret
xor
shll
fnstsw
pushl
xor
jno
sbb
in
adc
mov
pop
lret
pop
loop
call
mov
sub
leave
pop
test
inc
push
inc
or
ljmp
stos
mov
and
and
mov
jae
add
jae
cmp
lds
or
test
addr16
ljmp
adc
daa
cltd
mov
test
sbb
stc
xchg
xchg
lcall
je
pop
pause
out
sub
and
mov
test
call
adc
inc
pop
push
imul
mov
pop
adc
decl
push
inc
cli
fwait
add
jbe
xor
and
cmp
lods
cmc
dec
add
and
xchg
das
add
jg
call
rcrb
add
jle
daa
jge
sbbl
fsubrp
jb
cmc
lods
mov
mov
push
push
out
outsl
mov
out
cwtl
sahf
jg
jne
ss
pop
or
lahf
sbb
test
cwtl
stc
hlt
mov
push
inc
pop
mov
out
jg
divl
sub
shlb
adc
cmp
or
lea
add
and
xchg
imul
xchg
repz
cmp
test
xchg
cmpsl
imul
roll
stos
inc
aad
add
ja
stos
cmp
cmp
cmp
in
or
loop
or
test
add
pushf
and
add
jge
sbbb
pop
int
fwait
lret
aam
add
pop
int
in
imul
jno
push
xchg
jg
inc
dec
decl
rcll
jno
xchg
add
enter
filds
mov
jo
adc
mov
lea
roll
mov
push
loop
sahf
jne
jmp
callw
pop
ret
ja
cmp
incl
test
cltd
add
adcb
jbe
jg
movsl
mov
jno
fsubl
inc
jo
xor
lods
idiv
scas
movups
inc
in
mov
sub
fistps
ljmp
jmp
stc
in
dec
sub
add
popa
idivb
hlt
roll
jg
mov
or
mov
mov
sub
aad
insl
rolb
inc
sub
imul
adc
mov
jnp
scas
sub
sub
jns
pushf
adc
add
xor
fiadds
and
cmp
mov
incl
cmp
xchg
jne
inc
inc
push
into
mov
leave
out
icebp
call
push
subl
cmpsb
shll
xchg
mov
sti
ljmp
inc
mov
sub
push
xchg
mov
jnp
daa
xor
fcmovbe
lods
out
enter
adc
ljmp
lods
add
testl
iret
addr16
gs
dec
popa
cmpsl
and
mov
lcall
push
jnp
arpl
fists
dec
cld
outsb
cmpsl
jno
iret
mov
clc
mov
sub
cltd
lods
insl
pop
ret
sti
rcrb
in
ds
jge
fbld
push
gs
inc
stos
sub
xchg
pop
std
incl
sub
dec
mov
leave
lret
fstl
inc
mov
push
sub
xchg
push
mov
or
or
dec
popf
xlat
inc
xchg
pop
or
lret
mov
mov
incl
clc
xchg
push
bound
add
jmp
incl
cmp
scas
sahf
push
mov
pop
sub
or
mov
std
sbb
mov
xchg
xchg
or
nop
cwtl
bswap
mov
movsl
pushf
mov
push
hlt
xchg
xchg
mov
std
jnp
xchg
arpl
inc
xchg
mov
pop
data16
enter
xchg
jg
pushl
dec
popf
adc
in
dec
fistl
add
addl
inc
inc
pushl
repnz
jno
xchg
lcall
xchg
pop
flds
xchg
xchg
ds
test
xchg
popa
mov
jbe
js
js
jne
cli
jb
inc
jmp
xchg
ret
rcll
bound
fistpll
ljmp
insl
filds
xor
lds
fistpll
sar
pop
jl
xor
xor
cmp
fucomip
call
cmp
aad
cmp
xor
inc
jns
push
pusha
mull
pushf
rsqrtps
adc
dec
je
xchg
das
push
jge
shrb
push
cmc
sub
mov
in
ds
mov
aaa
clc
mov
test
jle
push
out
roll
mov
jg
dec
sub
xor
nop
jne
push
out
push
lret
dec
adc
in
into
cli
sub
and
cwtl
lds
and
pushl
pop
aad
mov
mov
std
sbb
shrl
xchg
jge
mov
push
sub
lea
push
xor
xorb
movsl
cmpsb
mov
or
xor
lret
mov
lds
mov
pop
inc
jge
incl
popa
and
ret
xchg
dec
mov
pushl
pop
sub
test
fs
loopne
into
adcl
jecxz
sub
push
push
push
push
mov
shll
dec
pop
in
pop
popa
divl
incl
xchg
jge
inc
popa
add
mov
adc
pop
xor
dec
jl
mov
jne
push
lock
hlt
lcall
inc
fistpll
cmpl
inc
pop
imul
imul
mov
ficoms
jb
add
insl
sahf
adc
aam
and
push
ret
dec
gs
daa
and
mov
pop
cld
pusha
cmpsb
gs
aaa
mov
hlt
push
and
adc
movsb
lret
mov
into
lods
movsb
testb
dec
xor
andb
jae
sub
pusha
mov
sbb
je
sub
mov
outsl
cld
outsl
dec
xchg
cmp
out
test
xchg
jge
ljmp
fxch
mov
frstor
push
xchg
sahf
repnz
pop
mov
dec
das
mov
jne
cmovg
out
mov
fistpl
inc
dec
mov
call
sbb
sub
push
sub
pop
imul
or
lods
aam
inc
lcall
call
stos
jo
rcrl
pop
cmc
ljmp
sbb
cld
mov
xor
inc
jmp
mov
fisubl
mov
push
inc
out
mov
roll
dec
mov
mov
cltd
bound
call
mov
data16
sub
pop
ja
jle
ror
sbbl
popf
or
repz
cmpl
mov
xchg
dec
sbbb
inc
push
fistpll
mov
repnz
pop
push
mov
xchg
outsb
sbb
enter
loope
loope
repnz
aas
xor
in
cld
jecxz
push
lods
dec
movsl
sti
sbb
cmp
leave
inc
test
or
add
jge
xchg
popl
or
clc
inc
cltd
inc
jns
push
addb
cmp
add
in
inc
aad
jmp
cmpsb
push
cmpb
aad
xchg
jmp
leave
inc
sub
std
lods
jge
sbb
pop
or
mov
mov
cltd
inc
mov
push
loopne
jmp
cltd
ss
pop
fcmovb
sahf
sub
xchg
ja
push
cmp
es
fabs
mov
sub
outsl
and
jno
rcrl
outsb
or
inc
jnp
xor
add
call
push
mov
jae
outsb
bound
inc
sahf
sub
xchg
addr16
jle
xlat
jg
decl
mov
std
insl
sub
cmp
sar
outsl
cld
lcall
dec
mov
adc
pop
mull
dec
inc
mov
mov
lock
lea
xchg
mov
or
dec
scas
adc
test
mov
mov
jmp
mov
cmc
xchg
decb
mov
call
loopne
jg
pusha
nop
lods
imul
stos
mov
std
shlb
clc
fbstp
hlt
xor
test
inc
lret
cmp
jp
in
mov
and
cmc
inc
xchg
sti
xor
pop
sbb
ss
lods
fcoms
pop
cli
xor
xchg
mov
cmpsl
loopne
mov
jg
in
int3
push
pusha
mov
xchg
in
aas
mov
xchg
dec
xor
popf
pop
push
pusha
mov
pushl
push
and
push
mov
sbb
nop
lock
int3
pop
xor
xchg
clc
incl
clc
movsb
xchg
movsl
vmovss
push
mov
shlb
xchg
adc
jg
jg
lcall
out
lret
and
movsb
xor
cld
mov
xchg
and
pop
xor
fwait
enter
xchg
popf
push
ds
decl
ret
mov
movsb
dec
dec
push
fsubl
mov
int
das
inc
and
add
fiaddl
cmp
rcrb
shrb
pop
dec
and
pushl
int
push
add
pushl
jno
push
jmp
sub
rclb
cltd
jge
movl
decl
insl
icebp
fists
xor
push
or
pusha
out
inc
lds
add
and
jecxz
es
sub
fidivs
jmp
dec
repz
jnp
ficompl
stos
dec
adc
fldcw
cli
std
add
mov
cmp
sbb
sub
sarl
das
sbb
gs
aas
adc
enter
fisubrl
pushl
lret
insb
sahf
xor
out
ret
sub
scas
in
test
mov
or
mov
ret
je
insl
push
jo
or
pop
sbb
mov
sub
call
fiaddl
dec
push
jmp
mov
mov
imul
inc
adc
push
mov
mov
or
sar
push
ljmp
aaa
or
data16
movsb
jecxz
fwait
dec
mov
testl
call
pop
or
add
gs
lret
je
call
add
and
and
inc
lret
cwtl
xchg
inc
add
jl
mov
idivb
idiv
pop
cld
pop
inc
adc
cmpsb
int3
push
loopne
outsl
int3
jecxz
mov
xchg
xor
decl
sbb
fsubrs
fcoms
sub
popa
sub
gs
sbbl
pop
pop
dec
lods
push
xor
ss
lret
mov
add
sbb
mov
sub
xor
ja
and
jmp
lret
cmpsl
in
enter
pop
cs
fldcw
jg
mov
ret
addr16
cmp
std
xlat
push
arpl
call
xchg
scas
cs
or
mov
stc
sub
mov
xlat
dec
lods
call
pop
scas
push
js
pop
ret
xchg
lret
scas
push
push
loope
mov
jg
and
xchg
jle
stos
jge
mov
icebp
incl
rcll
cmp
inc
dec
xlat
dec
outsl
cld
das
push
mov
jnp
sub
jg
dec
aam
std
decl
dec
jp
mov
cmpsb
mov
jg
sub
scas
fwait
cld
test
das
in
jae
jle
loop
mov
stc
adc
adc
ror
aam
sbb
mov
push
flds
push
call
std
mov
pop
fdiv
mov
lcall
fucomip
cmpsb
pushl
mov
adc
add
mov
fwait
sbbl
inc
mov
pusha
inc
gs
fbld
jg
icebp
jbe
dec
jno
push
test
push
dec
scas
mov
in
pop
shl
les
fmull
ficoml
push
fs
in
imul
hlt
pushl
and
mov
rcrl
pop
cmp
pushl
sbb
sub
lods
xor
inc
cld
xor
lahf
js
xchg
decl
scas
dec
mov
push
sub
scas
cld
inc
sbb
or
outsl
pop
sbb
xchg
aad
hlt
pop
lcall
mov
sbb
jmp
int
test
popa
cld
popa
sub
pop
insb
cmc
jg
lock
jb
sub
xchg
mov
daa
dec
mov
mov
dec
lods
addr16
daa
pop
sub
push
mov
pop
sub
mov
stos
test
pushf
pop
je
stos
jne
add
mov
int3
push
mov
leave
out
repz
push
mov
jno
bound
or
cmp
adc
lcall
dec
mov
jmp
jmp
jb
repz
cmp
cmp
jg
push
dec
or
lret
xor
in
xchg
add
in
rorl
add
fwait
repnz
jns
fidivl
lea
inc
xchg
pushf
sti
xchg
out
mov
sbb
ret
ja
int3
add
lods
jmp
pop
xorl
mov
test
iret
push
in
inc
cmp
ljmp
push
dec
jo
jle
mov
imul
lods
xlat
mov
iret
jmp
ljmp
push
rorb
loop
xor
adc
leave
or
decl
pop
push
in
mov
lock
cmpsb
xor
sub
dec
xchg
sbb
das
cmp
jmp
and
or
mov
mov
into
std
add
jns
or
push
adc
fmull
jg
jne
sti
cmp
and
sbb
push
aas
push
hlt
pop
cli
out
and
aas
and
add
xchg
jbe
sbb
outsl
mov
sbb
orb
fidivrs
mov
incl
ret
adcb
in
mov
scas
and
stc
jb
addr16
dec
ljmp
sub
sbb
ljmp
ficoml
test
mov
jg
icebp
jg
shlb
pop
inc
sub
adc
jmp
aam
mov
pop
mov
shrl
pop
mov
jmp
pop
cs
add
fucomip
mov
cld
jmp
inc
push
pop
leave
ss
xor
pop
lods
add
imul
jne
inc
mov
outsl
pop
in
push
xor
xor
and
xchg
xor
leave
insb
lds
clc
fdivs
negb
dec
rcll
sahf
out
iret
dec
cli
push
dec
pop
mov
cmpsl
mov
or
incl
mov
jecxz
scas
inc
stos
rclb
lock
ds
add
call
lock
mov
sub
or
loopne
or
jg
lcall
out
and
add
lret
int
push
fdivp
dec
cld
call
aam
sub
jbe
in
xor
inc
jge
sbb
popf
popa
cmp
lcall
cmpl
inc
fisubs
enter
test
insl
sbb
popa
jp
mov
cmpsl
jmp
pop
lcall
add
insb
lret
xor
dec
dec
notl
mov
inc
sub
fadds
xorl
in
fcompl
mov
ds
pop
dec
leave
sbb
outsb
movsl
loopne
cmc
decl
sbb
sahf
inc
loop
or
and
mov
xchg
jg
out
stos
mov
cmp
jne
out
fsubr
or
jp
decl
in
mov
mov
aas
pop
sub
sbb
outsb
repz
push
addb
call
aam
fnstcw
jns
jnp
std
sbb
icebp
or
fs
nop
and
or
call
out
test
pop
and
aas
push
cmp
jns
mov
scas
mov
std
jmp
arpl
mov
cmp
std
mov
decl
mov
dec
pop
mov
das
cltd
shlb
mov
mov
mov
mov
xchg
aam
mov
test
mov
or
popl
push
incl
sub
imul
mov
imul
loope
lods
stos
xchg
push
lcall
cmp
mov
mov
pop
mov
fidivl
rolb
jle
or
adc
movb
int
icebp
call
clc
pop
mov
outsb
cmp
repnz
cltd
add
adc
into
ljmp
inc
rorl
repz
out
aam
xchg
test
dec
cmp
jmp
inc
cmp
loop
movq
push
xchg
and
mov
push
ret
in
pushl
push
push
adc
hlt
mov
rcrb
sarl
aam
jnp
jo
push
inc
mov
clc
fucomi
adc
xadd
in
dec
dec
popf
loope
call
jmp
movsb
cmc
lods
out
les
and
mov
or
int
add
incl
mov
fldt
mov
fisubl
pop
insl
cmp
push
shll
out
dec
test
pop
and
dec
push
cmp
rolb
mov
mov
adcl
or
mov
cld
dec
outsb
mov
fcompl
call
pop
mov
in
incb
xchg
fldenv
pushl
jg
jno
mov
push
daa
imull
xchg
pop
xor
fwait
jns
gs
jg
pop
in
xor
rorb
es
push
jmp
incl
decl
into
sub
rcll
hlt
inc
sub
jl
or
push
incl
shlb
jns
cli
mov
push
or
idivl
movsl
sbb
sbb
cmc
incl
push
addr16
inc
lea
fimuls
lret
jae
push
pop
dec
pushf
inc
inc
out
insb
fs
das
icebp
pop
outsl
fwait
cmp
pop
insl
lahf
xchg
cwtl
gs
cmp
mov
dec
xor
aaa
dec
std
jl
out
sub
pop
push
call
incl
xlat
ss
or
movsb
das
lock
xchg
lret
cli
mov
ljmp
jbe
and
mov
pushf
loope
dec
sbb
xlat
pop
cli
dec
mov
sub
jg
push
lcall
mov
jnp
adc
cmpsl
les
mov
cld
ret
stos
xor
mov
jae
jne
lcall
xor
rorl
xchg
push
idivl
pop
ds
pop
cld
ret
test
lcall
rol
dec
and
rcr
add
mov
fisubrs
mov
push
or
jg
call
jle
cmp
pushf
cmpsb
lret
out
mov
clc
jg
outsb
movsl
cmp
pop
aam
pop
cld
or
sub
jbe
mov
jae
aaa
loope
lcall
push
sub
push
mov
jae
std
jg
cmp
sub
pusha
pop
roll
movl
stos
jae
inc
jne
ljmp
mov
sti
es
in
pop
mov
stos
cmp
cmp
cmovbe
mov
cmp
pop
inc
adc
hlt
call
ljmp
jmp
jb
lret
add
out
call
xchg
mov
out
mov
testl
or
sbb
ljmp
mov
or
and
divb
pop
cmc
sbb
push
js
jmp
sub
mov
std
out
and
cli
test
adc
cmpb
push
jne
lock
call
dec
cmpsb
clc
lods
push
orb
pushf
and
fildll
ljmp
xchg
int
mov
xchg
fnstenv
aad
pushf
cltd
dec
loop
xor
fsub
add
data16
adc
xchg
push
jb
gs
xlat
ljmp
call
fildl
sbb
fstpt
sti
xor
and
mov
hlt
cld
push
dec
popf
xchg
cmp
aas
xchg
dec
sub
call
iret
jo
in
and
push
andl
ljmp
xor
or
sbb
lods
inc
cmp
call
call
shl
lcall
dec
inc
xchg
adc
lcall
push
in
stos
arpl
mov
pop
aad
jo
inc
jl
xchg
incl
fimull
or
adc
and
inc
pop
shlb
sbb
shll
ret
loopne
cli
mov
mov
and
lcall
xor
jnp
out
mov
cmp
or
jns
daa
inc
leave
hlt
loope
mov
sub
inc
aad
cld
cli
inc
lret
and
clc
cmp
jo
cmp
xor
cltd
js
cmp
cmp
mov
mov
jae
cli
nop
jo
das
icebp
ljmp
dec
xchg
fwait
cmpsb
xor
test
outsb
or
mov
or
xchg
and
inc
push
adc
or
mov
leave
push
push
add
daa
jge
out
sbb
adc
daa
fcmovnb
and
movsl
lea
scas
loop
pop
or
pusha
jae
pop
xchg
call
dec
stc
jecxz
pop
rorb
js
push
pop
xor
xchg
pop
je
mov
ret
xchg
sbb
decb
scas
cmp
dec
cld
fisttps
mov
jmp
push
loope
in
mov
push
minps
cli
xchg
lahf
mov
sub
jg
loopne
adc
xlat
inc
push
jo
lds
adc
call
mov
or
leave
xor
out
hlt
push
dec
inc
test
in
jbe
sar
fucomip
jnp
xchg
jnp
or
test
push
fisttps
rorl
mov
fisttps
fimuls
inc
repnz
clc
and
pop
jo
mov
pop
out
rol
push
call
push
pop
call
outsl
std
shlb
push
outsl
sti
xlat
shr
daa
daa
mov
decb
fistpll
xchg
popa
shlb
faddp
adcl
movsl
aaa
lock
xlat
jae
shlb
enter
pusha
add
ljmp
loop
subb
pop
cmp
xor
out
pop
jp
std
cmp
xor
push
inc
and
cmpsb
fldl
cmpsl
in
setb
pop
dec
push
jmp
push
push
mov
xor
or
sbb
orl
lock
ficompl
dec
or
cmp
sbb
movsl
pusha
gs
es
cmpsb
test
std
ljmp
shrl
js
or
mov
adc
mov
orl
mov
rcll
mov
daa
incl
xchg
add
sbbb
and
fsub
call
pop
jo
loop
and
fchs
sbb
test
jmp
rolb
adc
inc
out
loop
mov
fisubrs
xchg
mov
and
pop
js
das
cld
pop
loop
pop
cmp
mov
sbb
shlb
jg
xchg
jb
cmp
cmp
pop
out
out
xor
dec
ss
or
test
sub
out
jle
mul
cltd
stos
cld
scas
sbb
lahf
scas
ftst
jmp
sbb
add
stos
call
xor
stc
adc
jge
jmp
fwait
mov
aam
cwtl
in
jb
in
cmc
push
push
outsb
std
add
adc
lcall
pushf
lods
dec
mov
cmc
js
mov
ds
jl
xchg
cwtl
and
mov
aam
clc
jmp
cmpsb
jb
rolb
sbb
les
mov
mov
push
xchg
das
imul
loopne
add
mov
mov
std
shlb
push
jo
xchg
xchg
ret
sbb
dec
cmpsb
pop
repnz
ja
enter
rcrb
mov
mull
mov
jmp
sbb
add
xchg
pushf
ss
sti
test
mov
and
mov
and
mov
fs
ss
push
aam
jg
ljmp
pop
ja
repz
or
in
add
mov
test
jno
adc
into
jg
adc
lcall
ljmp
out
rcrb
pushf
mov
push
cmpsl
mov
mov
cmp
pop
ds
dec
mov
and
pop
call
pop
mov
mov
sub
push
inc
sub
les
aam
xor
add
xchg
imul
xchg
pop
decl
inc
test
test
xchg
cs
daa
xor
xor
inc
xchg
cwtl
cmp
xor
clc
cmp
fidivs
loope
scas
popf
mov
incl
and
int
push
addr16
js
sbb
fld
out
sub
divb
movsl
add
std
cmp
jne
pop
xchg
test
movsl
daa
loopne
stc
outsb
daa
sub
imul
ja
mov
cmp
push
movsl
movsb
or
inc
cs
dec
jge
lods
sar
jmp
lods
push
mov
cltd
xchg
push
fisubs
daa
mov
pop
aam
decl
into
sbb
lods
std
pushw
and
fs
das
pop
add
cmp
lds
cmp
sbb
push
lcall
cmpsb
mov
mov
jnp
mov
xchg
out
push
push
add
outsb
push
xor
lods
cld
push
ret
mov
xor
jmp
test
aaa
cli
das
mov
mov
sbb
ja
xchg
in
mov
lock
mov
test
push
lock
sub
xor
scas
add
incl
enter
xor
out
aaa
mov
push
aad
sbb
jg
inc
mov
inc
into
pop
popf
pop
inc
movsb
pushf
and
xor
ljmp
cmp
inc
mov
test
and
push
movups
mov
incl
xchg
jg
data16
mov
dec
xor
enter
mov
mov
xor
inc
mov
sub
pop
add
xchg
xchg
inc
mov
pop
popa
inc
incl
sarb
jae
dec
add
cwtl
daa
je
loop
dec
in
push
push
or
in
loopne
and
lcall
jl
inc
cwtl
fsubp
pop
adc
inc
insb
ret
mov
repz
pushl
loope
adc
icebp
lods
push
stos
mov
jbe
and
arpl
popa
bound
xchg
or
std
pushl
gs
xchg
push
in
dec
repnz
cwtl
add
call
xor
push
and
jne
fdiv
lahf
insb
gs
dec
int3
daa
add
add
dec
inc
ljmp
cmc
decl
push
and
test
imul
sub
outsb
mov
push
in
sub
mov
pushf
ficoml
cltd
jl
enter
sbb
dec
jecxz
xor
xchg
ljmp
std
lcall
sub
es
sahf
mov
data16
xchg
aas
aas
loop
dec
ljmp
jo
xchg
pop
add
movb
popa
in
add
fucomip
ljmp
inc
dec
fldenv
dec
les
mov
mov
or
ds
jns
sar
jmp
daa
ficoms
xchg
xchg
fs
pop
outsl
cmpsb
ss
dec
outsl
mov
cli
mov
sbb
mov
mov
cmp
pop
clc
pop
pop
ljmp
push
inc
xchg
cli
fildll
mov
loop
mov
cmp
insb
xor
in
dec
sti
adc
lcall
jecxz
mov
scas
or
icebp
outsl
lret
or
pop
cmpsb
scas
ja
bound
cmp
and
cld
mov
insb
pop
iret
jge
sbb
add
jl
daa
xchg
push
movsb
lock
loope
jp
pop
inc
push
jmp
sbb
pop
jnp
pop
das
cld
pushl
rcll
nop
in
testb
mov
pop
pop
push
adc
iret
lcall
lods
jmp
outsl
inc
fadds
insb
in
sbb
repnz
inc
and
ficompl
xchg
cmpsl
dec
push
mov
in
jae
jno
xor
xor
mov
inc
inc
sahf
push
je
pop
pop
add
jge
jns
subl
js
repz
jb
test
and
mov
les
dec
inc
xor
or
in
sar
lock
mov
ficompl
push
fbld
jo
sbb
stos
jmp
adc
lcall
pop
inc
jno
scas
pop
add
sbb
add
cmp
outsb
mov
and
fistpl
jmp
mov
and
cli
fstpl
lock
mov
xchg
into
ud1
pop
scas
scas
ss
insb
sub
ds
and
and
xor
jg
pop
xor
popf
pop
lret
inc
mov
cmp
pop
into
sbb
inc
les
jmp
lea
dec
sub
movsl
insl
push
and
and
icebp
das
or
mov
sub
xlat
sub
dec
adc
cltd
sub
adc
call
pop
xor
add
or
fsubl
mov
jge
lock
pushl
jge
or
adc
pop
jle
sbb
inc
stos
int3
mov
repz
incl
and
sub
dec
lahf
test
adc
cmp
inc
fs
fidivl
inc
ja
sub
mov
arpl
incl
dec
pop
std
ja
or
pop
outsb
ret
andb
and
in
movsl
sub
jg
mov
stos
je
pushl
cld
fs
imul
mov
es
loopne
add
pop
xchg
aas
and
lcall
dec
call
ljmp
xlat
lock
out
popf
clc
pop
jne
testl
sbb
mov
push
adc
std
pusha
pushl
orb
aam
fcompp
divl
inc
out
mov
push
arpl
add
add
mov
icebp
fs
leave
pop
jmp
mov
xor
and
jg
test
ljmp
jg
xor
mov
xchg
mov
insb
and
dec
xchg
sub
pushf
mov
ljmp
fdivrs
mov
mov
cli
cmpsb
xlat
xchg
ret
pusha
sahf
mov
shlb
fbstp
ja
in
jl
xor
ljmp
pop
clc
incl
add
imul
xchg
add
repz
adc
or
pop
pusha
jno
sti
xlat
stos
popa
jg
shll
cld
jg
test
push
test
xchg
inc
cwtl
cwtl
pop
mov
idivl
push
decl
lcall
and
pop
mov
add
pop
inc
push
push
stos
push
dec
fdivrs
mov
push
das
jmp
pop
pusha
stos
jg
repz
adc
and
aam
pusha
mov
ljmp
test
push
sub
nop
leave
cwtl
mov
inc
imull
or
and
test
pop
aaa
adc
cmp
pop
ds
pop
imulb
sbb
jne
jmp
out
dec
pop
fwait
das
mov
std
ds
loope
mov
jecxz
pushl
xchg
xlat
push
enter
lds
sbb
ss
fucomip
out
mov
gs
daa
mov
mov
inc
data16
mov
add
xchg
insl
xorl
das
rcrl
dec
mov
mov
test
leave
push
iret
ss
mov
mov
sub
push
xor
cs
aaa
jmp
repnz
sub
lods
cs
inc
inc
out
cs
sti
out
add
popf
dec
or
test
jecxz
ret
mov
imul
aas
dec
push
mov
or
scas
out
inc
sub
mov
pop
call
jg
call
mov
mov
rorl
sub
xchg
dec
fs
jg
cmp
pushf
xor
stc
inc
cmp
icebp
lret
sbb
push
das
mov
and
jb
mov
andl
call
fadd
or
bound
cmpsl
imul
xchg
push
sarl
pop
nop
cmp
mov
lock
jmp
dec
dec
lea
in
mov
or
outsl
test
push
inc
popf
scas
dec
pop
mov
add
rorb
mov
fs
cli
pop
mov
jle
lds
or
xor
xchg
jno
xchg
xchg
fsubr
push
mov
pop
imul
mov
or
lds
aam
jnp
call
xchg
jae
or
lods
imul
sbb
xor
int3
popa
arpl
add
lods
sub
incl
push
inc
adc
imul
mov
call
sbb
cmp
inc
sbb
xor
mov
decl
inc
inc
lods
movsl
fistl
loope
addr16
push
incb
incl
movsb
xchg
mov
dec
imul
test
pop
repz
dec
cli
pop
xorl
dec
mov
jmp
aas
pop
leave
jg
shrl
inc
cmp
popl
nop
dec
sti
js
cmc
pop
sbbb
mov
mov
ljmp
shr
mov
or
dec
cli
jg
mov
and
aas
xor
outsl
aam
jae
pop
jge
inc
scas
mov
insl
sbb
ljmp
dec
out
push
stos
out
sarb
imul
jg
sub
rcl
pop
in
dec
mov
cld
add
mov
shlb
inc
inc
dec
cmp
mov
xchg
clc
outsb
push
jns
mov
push
pushf
xchg
cs
movsb
cmp
incl
sti
xorl
stc
xchg
fwait
into
test
lock
test
pop
in
ret
loope
cmp
xchg
in
inc
mov
pop
and
pop
mov
pushf
mov
pop
clc
pop
insl
filds
stos
bnd
outsl
std
pushl
lcall
cmc
sub
dec
testb
cmp
and
inc
cltd
push
ficomps
sub
leave
xchg
mov
decl
xor
push
dec
cmpsb
cmpsl
in
popf
repz
shr
dec
aam
dec
ret
cmpsb
lods
ljmp
icebp
incl
test
xchg
mov
jae
popf
jno
sbb
mov
or
pop
loopw
inc
rol
mov
xor
stc
push
xchg
int
mov
pop
loop
mov
mov
cmp
jmp
lcall
cli
cltd
pop
inc
or
jle
loop
xlat
test
decl
lock
lods
ds
adc
das
adc
fstpt
adc
repnz
dec
adc
insl
gs
push
or
fnsave
stc
lcall
cs
pop
mov
xchg
cmp
popf
mov
push
movsl
inc
jecxz
pusha
xchg
jbe
rcrl
inc
shll
inc
arpl
jne
sub
repnz
andl
lcall
jmp
dec
cmp
std
fidivrl
mov
inc
xchg
out
pop
adcb
int3
loopne
push
decl
xorl
hlt
ficoml
mov
jbe
mov
or
sub
movsl
and
xchg
push
push
push
rcrl
jmp
rorb
ficompl
bound
dec
jae
and
decl
aaa
mov
sbb
mov
out
aaa
pop
mov
push
sub
pusha
push
mov
jbe
or
push
jp
jne
mov
jg
test
repz
inc
pop
arpl
es
xor
and
aas
call
dec
call
leave
mov
test
cmpsl
jo
aas
dec
xor
mov
xchg
mov
cmpsb
jp
dec
loop
sub
fidivrl
xorb
inc
cmp
cwtl
aaa
mov
push
sbb
sbbl
push
mov
stc
js
pop
out
cld
inc
lret
into
mov
std
incl
sub
xorb
movsl
xor
inc
push
mov
mov
mov
out
cs
leave
xor
jecxz
push
cld
jno
repz
adc
jg
adc
sbb
mov
bound
mov
test
in
fidivrl
cwtl
call
jnp
dec
xor
rorl
xchg
pusha
loopne
ljmp
rorb
inc
adc
dec
cli
dec
add
shll
push
das
fldl
jb
rclb
mov
adc
std
jmp
and
lcall
and
out
xchg
mov
inc
scas
sti
ret
inc
pop
push
add
inc
cmpb
std
decl
fmull
insl
sahf
mov
aad
sbb
ficoms
addr16
mov
fldl
xchg
insb
cmp
dec
sar
mov
sysexit
jge
adc
inc
cmp
xor
cmp
xchg
push
mov
push
in
sub
movzwl
cld
push
pop
and
insb
call
push
cmp
daa
stc
enter
cld
rclb
xor
sub
loopne
cs
add
call
xchg
push
gs
sub
sti
pop
cld
fstps
icebp
test
inc
mov
dec
lcall
andl
sub
jmp
pop
adc
xor
pushl
pushf
cmp
ficomps
idivl
or
out
mov
mov
mov
cmp
pop
mov
adc
je
shr
sbb
fidivs
pop
jge
pop
mov
inc
out
sbb
imul
and
mov
call
dec
sub
loop
mov
mov
sbb
dec
stos
fmul
mov
push
es
cmpb
test
dec
and
fdivl
fcmovu
mov
dec
pop
mov
cmpsl
sar
ljmp
add
mov
stos
ret
daa
mov
xor
inc
pusha
pop
jmp
lret
jbe
xor
sbb
push
mov
das
jge
xlat
push
sub
cs
sub
jmp
inc
fnsave
pop
std
pop
lcall
es
loop
push
popf
hlt
arpl
pushl
mov
sub
insb
insl
pop
cmp
push
ds
daa
sub
cld
xor
xlat
inc
das
xor
lahf
dec
roll
ljmp
outsb
cmp
mov
inc
adc
or
inc
pop
test
das
and
dec
stc
adc
sbb
out
inc
sar
insl
in
add
shl
jns
adc
adc
adc
mov
mov
repnz
xorb
lea
cmc
aaa
clc
in
inc
std
and
mov
mov
orl
or
cli
call
fs
aaa
das
fildl
and
sub
ffreep
pop
lock
insl
ret
movsl
push
negb
and
mov
lods
in
ss
sbb
loop
ljmp
cmc
xor
lcall
inc
in
jmp
sub
dec
sub
xchg
mov
pop
jnp
xchg
popa
or
aas
add
mov
flds
inc
aaa
loop
ljmp
rcll
ss
ss
ret
rclb
mov
push
adc
sub
rorl
pop
or
adc
jb
outsl
mov
hlt
mov
jmp
aas
rorb
sarl
call
aaa
clc
inc
repnz
fnstcw
lea
cmp
mov
cld
push
lret
outsl
out
jmp
pop
ror
or
jge
test
loope
xchg
fstps
arpl
mov
arpl
subl
fwait
mov
rsm
or
test
jp
hlt
movsl
aaa
test
pushl
andb
popf
dec
mov
cltd
aas
fdivrl
jnp
loop
call
daa
xlat
cwtl
divl
ja
xchg
arpl
cli
inc
push
in
jg
mov
divl
dec
fists
inc
stos
dec
push
imul
decl
push
xchg
loope
mov
enter
mov
adc
bnd
add
add
mov
adc
xchg
ret
je
sbb
out
mov
pop
hlt
push
movsb
nop
inc
imul
inc
sub
cmp
lret
cwtl
sahf
sbb
or
loop
and
mov
int3
subb
add
mov
cmp
pop
movsl
decb
jge
jb
mov
ds
clc
push
or
loopne
decl
das
test
sbb
out
movsl
mov
enter
fldt
cmp
dec
imul
inc
push
popa
pusha
fidivrl
stc
ljmp
inc
mul
mov
idivb
fistpll
mov
cld
mov
incl
mov
mov
dec
or
jne
xchg
daa
cmpsb
cltd
mov
mov
xchg
nop
push
mov
shll
stos
repnz
mov
mov
adc
test
mov
jnp
fistl
cmp
push
out
sbb
stc
mov
mov
arpl
repnz
inc
dec
repz
mov
aad
ficomps
or
data16
push
jge
pop
xor
mov
cli
ljmp
ja
icebp
mov
aas
cld
lcall
ds
lcall
xchg
rcll
sar
jno
push
aam
fnsave
cmp
ljmp
smsw
cmp
push
je
mov
mov
mov
in
call
xchg
cmpsl
icebp
push
xchg
or
outsb
push
jno
ss
sbb
movsb
pop
and
ljmp
sub
jbe
xchg
add
ror
das
xchg
mov
sarl
les
push
testl
jecxz
jmp
out
pop
sub
or
pop
and
sbbb
push
inc
mov
out
ret
pop
inc
aam
push
int
pop
mov
push
sub
or
cltd
addl
push
mov
pop
mov
call
rorb
incb
outsl
mov
dec
pop
cmp
mov
and
lcall
pop
test
int
sbb
cmovae
popa
cwtl
and
pop
sbb
scas
sbb
call
mov
popa
fwait
xorl
adc
inc
ja
sbb
cmpsl
or
push
mov
pop
xor
aas
js
decl
push
movsl
or
xor
cmp
pop
incl
push
mov
in
cmp
mov
and
test
push
enter
sbb
add
jmp
mov
in
aam
lret
push
inc
or
adc
je
jg
decl
mov
imul
or
push
inc
fdivr
mov
mov
es
adc
add
pop
mov
out
scas
adc
jmp
push
ss
xchg
stos
xor
pop
cmpsb
stos
xchg
int
or
fisubrs
dec
xor
mov
fidivs
push
fmull
xor
jns
fdivr
outsl
cld
jg
jle
cmc
mov
scas
jnp
mov
aad
cmpb
jmp
int3
sbb
dec
mov
iret
sbb
int
jne
adc
call
in
xor
fstpl
fcmovb
mov
sbb
mov
mov
xchg
mov
and
inc
mov
jmp
dec
push
lock
inc
add
cmpsb
test
jnp
pop
add
idiv
decl
xchg
addr16
orl
cmp
clc
pand
add
push
pop
pop
pop
repnz
or
or
loopne
inc
mov
pop
dec
into
fstpl
and
cld
cmp
and
shrl
pop
or
cmp
mov
pop
dec
decl
xchg
inc
sub
push
mov
out
pop
sbb
mov
xor
sub
jne
pop
xchg
ds
cmp
mov
sbbl
xor
mov
xchg
dec
pop
sbb
push
iret
or
add
cmp
cmp
lret
lods
sub
jmp
stc
jle
lea
scas
push
jmp
jns
push
sbb
push
fwait
adc
xchg
insb
add
shll
shr
jl
in
inc
add
std
incl
or
lds
mov
push
push
and
push
fwait
les
sahf
in
pop
and
lcall
pop
les
sahf
push
fcomip
fcmovnbe
sbb
fsubrs
cmp
inc
inc
dec
loopne
sub
imul
clc
ja
decl
lods
lahf
arpl
mov
xlat
jecxz
sub
jo
mov
and
dec
cs
lcall
sub
ror
and
in
pop
lret
xor
inc
inc
es
outsl
lret
filds
les
pop
scas
xor
testb
pushl
adc
and
or
lret
push
rcll
mov
mov
std
pop
mov
add
mov
loopne
inc
scas
imul
and
call
push
mov
sbb
xor
shlb
stc
int
icebp
int
loope
call
mov
ljmp
aad
mov
sub
adc
rclb
add
pushl
lret
pop
icebp
int3
lret
lods
mov
pop
add
or
lcall
rcrl
lods
fisttps
clc
or
push
add
xlat
ss
imul
push
mov
mov
push
iret
dec
mov
dec
cmpl
pop
daa
icebp
mov
jno
jne
mov
int3
lds
sahf
pop
cmc
sub
cmp
hlt
sub
or
adc
and
push
dec
dec
jno
jp
dec
jo
movd
inc
icebp
fildll
movsb
adc
or
fs
pop
fadds
sbb
gs
xchg
jae
xchg
or
cli
or
xchg
push
in
fnstsw
and
xchg
xor
pop
and
add
repz
addl
push
cld
incl
mov
mov
jmp
ucomiss
inc
inc
mov
xlat
pop
hlt
or
cmc
mov
cmp
imulb
push
push
cmpl
and
and
push
int3
mov
jg
lcall
insb
jne
xchg
inc
repnz
shrb
repz
sahf
mov
incl
lds
fwait
mov
js
inc
leave
stc
push
mov
lret
aam
mov
fcmove
adcb
lea
sbb
sbb
mov
stos
adc
push
jb
aad
std
dec
ret
pop
mov
pushl
pop
inc
pop
xor
and
pusha
lods
movsl
cmp
ljmp
xor
sub
fidivrl
cmp
mov
cmp
fs
add
push
scas
je
pushf
icebp
or
sub
mov
adc
mov
lret
cli
and
movsl
decb
add
dec
sbb
test
loop
xor
mov
test
inc
les
push
sub
pop
adc
push
hlt
ljmp
pop
adc
cmp
xchg
bswap
push
mov
les
mov
cmp
pusha
cmp
fisttps
xor
outsl
sar
cmpsb
sti
test
aaa
inc
mov
pop
punpckhwd
sbb
and
dec
sub
stos
xchg
mov
loopne
cmp
pop
dec
mov
jl
testl
fimuls
loope
lret
fcompl
mov
fisttps
icebp
movsb
add
aas
and
fs
cs
sbb
sar
incl
mov
pushf
cmp
xchg
pop
or
fimull
sbb
inc
repz
fildl
ljmp
jne
fs
imul
push
pushl
push
mov
push
and
sbb
lock
das
push
out
lods
jne
sar
jg
fdivrl
mov
push
ss
push
inc
push
sbb
jo
idiv
jmp
cmp
lods
adc
or
inc
jns
push
ret
or
adc
jo
pushl
aaa
adc
adc
mov
and
fdivl
jnp,pn
inc
sbb
cmp
sbb
popa
sar
pop
xor
loop
jmp
call
int3
leave
data16
jmp
aas
and
xor
shll
lods
xchg
ret
cmpsl
xchg
call
decl
sbb
fildll
dec
jp
hlt
call
das
lret
loopne
cli
mov
subb
mov
gs
sti
gs
das
sahf
add
jg
mov
pop
cmpsl
inc
cld
fsubl
sub
lods
mov
stos
icebp
data16
pop
cmpsl
mov
in
sub
lock
pushl
dec
adc
int
sarb
sbb
inc
in
and
lret
outsb
outsl
decl
mov
mov
adc
push
push
stos
cld
inc
ffree
std
inc
decl
or
pop
es
cmp
sbb
jns
shll
outsl
lahf
or
ret
aaa
mov
hlt
mov
out
aad
mov
mov
pop
pop
cli
push
xor
mov
inc
sbb
jne
dec
dec
and
cltd
fstl
es
incl
gs
out
sbb
push
lret
jl
movsb
jno
push
adc
pop
cmp
or
push
pop
xor
je
adc
loope
loop
and
cmp
call
ud0
sub
push
mov
loop
mov
xlat
ljmp
das
xchg
lret
cmp
fsubrl
pop
bnd
daa
stos
push
inc
rorb
decl
cld
jge
sub
jecxz
jle
fs
push
imul
jnp
add
xor
aad
incl
imul
test
add
lea
popa
pop
mov
xchg
add
adc
test
pop
mov
outsl
std
cmp
pushl
adc
xchg
add
mov
lret
inc
popf
ljmp
in
xor
dec
pop
push
loope
mov
add
cmp
mov
ss
xorb
call
insl
cs
lea
xchg
jae
jg
aaa
dec
shr
inc
adc
mov
jae
xchg
cmpsl
and
xor
fildll
enter
mov
mov
fwait
test
push
dec
or
imulb
inc
xchg
cltd
mov
jg
ljmp
mov
lds
add
imul
fptan
fucomi
or
ljmp
rorb
sahf
mov
cltd
in
sub
or
cli
push
push
rcl
fwait
es
fucomip
lcall
mov
jmp
shll
mov
ljmp
push
inc
outsb
jp
add
in
cmp
dec
imul
loopne
xor
test
incl
scas
lea
adc
cmp
dec
xor
cwtl
pop
jge
jmp
cmc
ss
pop
jg
xchg
sub
movsl
stc
dec
cld
cmp
pop
push
pop
daa
dec
xchg
add
icebp
popa
xorb
inc
icebp
jmp
flds
popf
lods
stos
cmp
mov
ss
icebp
jne
and
sub
xor
cli
ljmp
mov
inc
loope
icebp
xchg
dec
mov
mov
cmp
incb
out
outsl
sub
mov
outsb
cmp
imul
adc
sbb
fidivrs
ljmp
jge
loope
hlt
pop
out
sarb
jo
add
ret
jecxz
cwtl
clc
sbb
inc
adc
mov
shlb
ja
cmp
testb
mov
jmp
repnz
aam
and
jge
add
sbb
xchg
push
and
fdivrs
stos
pushf
mov
mov
mov
push
and
in
pop
xor
outsl
add
mov
jmp
jne
scas
push
test
outsl
cld
jae
dec
push
jge
or
inc
inc
mov
xchg
out
add
cld
ret
daa
test
fisubl
ljmp
shll
lcall
xchg
lock
push
cmpsl
inc
fldcw
cld
incl
lds
add
call
mov
movsl
sub
mov
inc
sbb
and
outsl
mov
lods
test
jle
orb
stc
leave
cmp
mov
gs
xor
orl
and
push
lea
insb
sar
pushl
repz
push
pop
in
inc
movsb
cli
pushf
call
cli
pop
shlb
add
test
incl
inc
pop
xchg
add
out
jnp
push
sti
jmp
mov
inc
je
call
test
mov
sbb
jno
pusha
shl
in
repz
mov
cmp
push
jbe
mov
repnz
mov
xor
testl
imul
sub
mov
jnp
xchg
mov
mov
mov
in
pushl
xor
cmp
ret
loope
mov
adc
jl
jecxz
stc
fists
lock
ljmp
test
cmpsl
scas
outsl
test
cwtl
idiv
pop
std
push
sbb
movsl
mov
in
in
rcll
cltd
insb
cmp
incl
jne
mov
xchg
mov
icebp
jbe
push
dec
sbb
and
sub
inc
mov
addr16
mov
or
shlb
cmc
enter
mov
ficomps
movsl
jp
decb
orb
ljmp
and
jo
ret
and
and
sbb
scas
cmp
push
lcall
testl
sbb
outsb
andl
aaa
into
mov
ret
adc
dec
std
fnstsw
repnz
ret
push
in
cmp
hlt
sbb
mov
stos
jne
fsub
and
and
pop
adc
push
cmpsl
fs
call
mov
adc
jecxz
cmp
es
adcl
popa
dec
xchg
adc
lret
hlt
mov
jge
jg
push
or
jge
cwtl
mov
push
add
pop
repnz
mov
sbb
cmp
lds
test
or
daa
sbb
lahf
shll
lea
lcall
cs
sbb
das
pop
nop
xchg
inc
sub
sbb
xor
pop
std
incl
push
repz
jle
clc
int
sbb
dec
mov
push
or
push
orl
insl
jge
iret
or
jbe
mov
ficompl
inc
jg
add
addr16
push
ds
xchg
addr16
mov
call
push
mov
inc
aad
ljmp
mull
daa
mov
xchg
test
adc
pushl
insb
and
dec
mov
je
jmp
cmp
and
call
inc
ja
andl
cmc
inc
xchg
cwtl
adc
jecxz
jb
dec
push
lock
decl
aas
inc
stos
into
jbe
add
scas
out
rcrl
bound
into
mov
xchg
cli
dec
xchg
push
cmpb
test
ljmp
outsb
lods
mov
shll
out
or
cmp
xchg
nop
pop
fstpl
addr16
cmp
imulb
push
or
hlt
inc
gs
xchg
incb
jns
repnz
jg
jg
lcall
into
or
push
hlt
mov
mov
shlb
aad
mov
pushl
inc
add
mov
mov
ror
jnp
pop
mov
stc
add
nop
cmp
sub
inc
ljmp
test
movsl
add
mov
nop
pop
imul
push
dec
popf
sti
xchg
mov
in
cmp
cmp
lds
jecxz
repnz
cltd
xor
test
outsl
xchg
test
call
inc
xor
xchg
xor
jmp
push
mov
loop
and
fneni(8087
mov
add
int3
jg
push
push
incl
and
into
xchg
fisubrs
mov
lret
roll
pop
icebp
insl
loop
cmp
jle
sbb
cmp
in
movsb
jmp
in
iret
repnz
in
jle
xlat
inc
adc
call
dec
mov
mov
arpl
mov
fidivl
fiaddl
pop
ss
incl
enter
scas
in
insl
inc
xchg
nop
mov
mov
sub
rol
call
sub
push
cmp
mov
pop
add
pusha
cld
mov
insb
decl
mov
cmpsl
sub
add
sahf
cmp
sbb
jae
pushl
cmp
fcmovbe
cmp
jno
std
inc
inc
cli
sbb
or
rorl
dec
leave
mov
in
dec
jge
sbb
cltd
fdivs
pushl
sub
push
data16
mov
call
iret
stos
loop
lock
cmpsl
mov
mov
aaa
call
xchg
xor
adc
add
inc
push
call
les
mov
push
inc
int
mov
cmpsl
sahf
push
add
clc
pop
push
pop
push
or
or
dec
bound
jg
mov
lahf
bound
lods
popf
mov
mov
cmp
aaa
clc
push
and
or
mov
call
or
jbe
fdivp
and
mov
add
scas
into
xchg
mov
popl
cli
jnp
aad
outsl
je
cmc
cmpsb
adc
sub
andl
in
ljmp
dec
pop
fsts
jp
and
pop
int
call
or
jns
ljmp
icebp
jge
jp
ret
repz
mov
out
sub
jp
int3
sbb
inc
cld
cmp
sbb
mov
xchg
cmc
or
jb
xchg
inc
sub
inc
loop
out
xchg
adc
incl
mov
loop
adc
outsb
stos
gs
xchg
ds
add
shl
out
add
and
cmp
push
ljmp
jno
cmp
push
or
dec
cwtl
int
push
xor
lea
test
movsb
cmp
pushf
cmp
push
sbb
arpl
push
iret
sbb
je
cld
sbb
sub
aam
xchg
xor
sti
inc
decl
cmp
push
pop
jp
xlat
cwtl
shrb
cld
ljmp
and
mov
cmpsl
mov
es
cmp
inc
lds
dec
ljmp
add
pusha
pop
pushl
mov
and
bound
shl
aaa
pushf
sbbb
pop
mov
mov
push
adc
mov
es
js
mov
sbb
test
mov
loopne
inc
dec
xchg
cmp
ud0
js
pop
imul
inc
mov
xor
jg
and
xlat
jmp
jns
ljmp
std
xor
dec
mov
ss
aad
hlt
test
jmp
dec
cmp
jb
gs
lds
js
iret
popa
pop
dec
mov
mov
call
mov
mov
xor
es
mov
mov
mov
mov
mov
pop
incl
cmc
jbe
sbb
push
push
outsl
movsl
in
aaa
adc
fs
insb
xor
lcall
sub
mov
in
in
fadd
sbb
mov
rorb
fnstenv
jns
sbb
dec
cmp
mov
loopne
rcrb
outsl
pusha
cli
and
mov
jge
mov
ss
xchg
sub
sub
add
icebp
ficomps
xchg
fsubp
jmp
hlt
inc
inc
dec
mov
lcall
decl
mov
dec
and
mov
and
adc
leave
jb
outsb
inc
adc
mov
and
push
cmp
push
adc
push
movsl
dec
mov
or
adc
out
xor
sbb
jg
xor
cmp
adc
jo
pop
add
repz
fildll
loop
movsl
insl
bswap
mov
or
into
ret
outsb
ret
ret
in
pop
stos
in
test
shrl
addl
pop
gs
pushf
dec
and
dec
cmp
call
jae
cmc
dec
xchg
sub
loop
adc
adc
movsb
mov
out
inc
jp
ljmp
jmp
in
pushf
bound
cmp
call
lods
scas
dec
mov
gs
jo
in
pop
cmp
in
pop
mov
call
rsqrtps
imul
inc
inc
decl
or
pop
movaps
jl
cmp
sbb
rol
mov
push
scas
push
cmp
lds
scas
xchg
mov
pushl
jl
mov
rorb
sbb
sarl
jae
or
inc
sti
xor
mov
inc
lcall
fwait
ja
push
push
xor
das
mov
and
and
repz
push
rol
jg
jno
add
jnp
adc
push
je
mov
push
ds
decl
insl
fnstsw
sbb
add
push
and
dec
cmp
js
push
mov
mov
or
push
js
lock
pushl
fwait
cld
outsl
mov
adc
mov
xchg
ret
das
sti
push
mov
jmp
fwait
mov
pushl
loop
xor
sbbb
je
pop
out
mov
mov
je
and
out
jg
fnstsw
std
ret
iret
add
shll
mull
pop
pop
push
lcall
cwtl
sbb
je
sbb
test
dec
roll
incl
cmpsb
xrelease
fimull
xchg
xor
sub
scas
filds
push
test
repz
hlt
or
call
cli
rcll
xchg
fwait
ljmp
cltd
or
mov
incl
arpl
imul
in
add
lcall
mov
mov
or
mov
jp
xor
and
mov
dec
les
cmp
ss
lret
push
mov
stos
shrl
xchg
or
out
js
dec
ja
add
push
shrl
lcall
frstor
int3
xchg
pop
aad
lea
stc
ret
ror
jecxz
mov
xor
ljmp
sti
jl
mov
xor
test
jne
xor
cmp
mov
xorb
push
cmp
inc
mov
cmc
jg
pop
rcl
xchg
dec
jo
push
outsl
mov
aad
out
or
mov
dec
int
cmp
or
addr16
cs
test
push
cmp
pop
cmp
inc
jg
decl
test
push
out
into
or
mov
loop
das
out
add
lock
sbb
pop
pop
mov
push
iret
fmul
xchg
mov
jg
fsts
dec
mov
pop
shrb
adcb
mov
rolb
xchg
xor
call
shlb
adc
cmp
js
cmp
sbb
fcmovb
mov
std
push
inc
mov
test
mov
dec
mov
lods
int
divb
mov
add
lods
push
push
pop
pop
cwtl
pusha
mov
and
call
xchg
lcall
mov
or
addr16
add
repz
jbe
push
dec
pop
out
dec
scas
movsl
insb
and
pop
fcmovb
add
push
xchg
scas
mull
mov
cmp
dec
aas
pop
inc
sar
rorb
add
inc
call
jle
loopne
lcall
subl
fsub
ja
insl
xchg
ljmp
add
daa
inc
outsl
data16
decb
pushf
dec
lea
push
ficompl
dec
imul
mov
cmp
mov
xor
mov
lea
cmp
les
mov
decb
xchg
std
mov
bound
dec
or
dec
incl
ljmp
or
insb
or
mull
mov
mov
sub
sub
out
sti
gs
inc
adc
push
ljmp
xchg
es
adc
jmp
leave
inc
adc
test
imul
addl
dec
cmp
cltd
mov
cwtl
xchg
push
lea
pop
iret
push
ljmp
inc
das
arpl
je
aad
pop
add
xchg
push
mov
sub
jg
ja
mov
mov
xchg
lret
dec
dec
addb
xchg
xchg
ja
ljmp
popa
pop
inc
pop
mov
into
fwait
rcr
test
jmp
xchg
das
inc
mov
sahf
popa
mov
or
cld
dec
xor
jmp
pop
jmp
es
xchg
sub
dec
push
mov
jg
jmp
mov
dec
mov
insl
int3
jmp
dec
shr
adc
mov
loop
jmp
dec
scas
sub
inc
inc
jnp
mov
les
lods
mov
mov
fs
sub
mov
negb
push
ljmp
jae
cmp
outsb
bnd
add
mov
outsb
push
loop
sub
cltd
cwtl
cmp
std
mov
sbb
cmpsb
push
ljmp
xchg
cmp
outsb
pop
mov
inc
pop
test
dec
imul
iret
into
and
das
adc
inc
mov
pop
jecxz
inc
out
hlt
add
lcall
push
mov
xchg
pop
pushf
jne
inc
int3
dec
repz
xchg
adc
js
jbe
out
sub
push
xlat
dec
or
mov
fwait
pop
inc
xlat
xor
pushl
mov
or
mov
rcll
test
loope
ja
stos
mov
cmpsl
loope
fst
repnz
imul
mov
mov
ss
js
loope
jecxz
fsts
lock
inc
jmp
xchg
push
sbb
jg
mov
adc
xor
fs
sarl
push
jle
les
sahf
or
mov
add
push
jl
lahf
or
filds
in
jg
leave
jne
fimull
popa
push
lods
jmp
cmp
or
and
icebp
or
loop
push
lods
cmp
mov
call
clc
pop
ljmp
push
add
in
subb
jns
xchg
jmp
mov
adc
push
pop
xchg
mov
mov
lret
and
idivb
ret
insl
imul
sub
fadds
outsl
cmc
lock
das
lahf
mov
stos
cmp
mov
inc
std
pop
jg
mov
mov
and
and
xor
in
and
push
pushl
pop
sti
aas
push
adc
sbb
sbb
into
sarl
bnd
pop
xchg
mov
sub
xor
and
push
ljmp
aaa
adc
sub
and
daa
add
lea
and
outsb
mov
xor
jmp
xchg
sub
repz
push
inc
filds
pop
push
aas
dec
pushf
mov
xor
lcall
movsb
sub
testb
inc
aad
pop
imul
stc
sub
call
mov
incl
mulb
xor
push
aas
push
pop
cli
xchg
aaa
fidivrl
jmp
sbb
pop
cld
dec
sub
sub
mov
incb
xchg
lret
imul
cs
int
mov
inc
cs
roll
cld
aaa
add
clc
jmp
pop
and
mov
jo
fcoml
aaa
xchg
mov
fdivrl
lods
cli
jmp
mov
fimuls
out
addr16
adc
cld
mov
pushl
inc
mov
cmpsb
adc
dec
imul
mov
testb
push
and
or
xchg
cmc
or
ljmp
jg
xor
shrb
pushl
push
inc
xor
or
repz
repz
or
fists
in
lret
pop
scas
daa
scas
xlat
sub
add
ret
cwtl
fcomi
jae
bound
or
popf
ljmp
pop
daa
imul
pop
jno
dec
mov
mov
xchg
repnz
mov
test
das
mov
jbe
mov
jmp
jns
xchg
xchg
dec
gs
xchg
and
mov
jge
clc
out
and
jg
push
dec
xorb
sbbl
push
out
ret
outsl
mov
cmp
lret
jg
sub
adc
les
xchg
cmp
js
mov
add
mov
mov
push
pop
sub
test
ljmp
aas
add
adc
push
push
push
decl
push
xor
inc
lds
ffreep
in
pop
cli
decl
xchg
hlt
mov
xchg
lahf
lret
xchg
call
inc
adc
push
inc
pusha
fwait
add
push
push
xchg
popf
int
or
decl
mov
dec
lahf
lds
in
in
js
aad
fs
jnp
jg
and
loopne
push
inc
and
xor
adc
pop
adc
dec
add
sbb
cld
mov
ret
jge
fisubrl
inc
sti
push
jg
mov
into
inc
mov
clc
cmpsl
mov
ss
dec
cli
sbb
inc
jge
dec
mov
cmp
mov
lsl
push
std
fucomip
mov
jb
pop
addr16
jno
fsubr
iret
ss
lcall
or
inc
inc
mov
lret
mov
adc
ja
pop
or
ljmp
stc
in
push
jae
aas
pushf
loopne
jp
adc
sbb
idivb
mov
fucomi
fisttps
jnp
sbbb
cmpsb
mov
sub
mov
sarb
pop
inc
dec
es
xchg
sbb
fdivr
ret
add
mov
clc
mov
ljmp
inc
repnz
jne
mov
inc
idiv
ljmp
std
xor
lods
adc
stos
xor
inc
mov
pushf
and
xchg
dec
sarl
cwtl
das
sub
decb
int
ja
fidivl
mov
test
cmp
loope
or
call
jnp
jno
loop
repnz
repnz
inc
enter
xchg
pop
lret
and
stc
std
and
inc
outsb
es
ja
and
xlat
mov
mov
or
je
xchg
xchg
add
mov
loope
sub
and
pop
icebp
push
fcmovnb
sub
inc
in
fdivrl
hlt
sbb
pop
add
mov
push
cmc
test
lcall
jmp
mov
sbb
repnz
add
add
push
idiv
pop
jmp
addr16
in
mov
insb
pop
mov
sbb
jge
push
jne
pop
inc
jl
push
imul
stos
outsl
lock
jmp
out
stos
mov
push
mov
fnsave
pop
cmpsb
and
out
push
outsl
arpl
and
xchg
mov
mov
adc
sub
out
mov
sub
or
ret
sbb
xlat
div
mov
aam
rcrb
cmp
ljmp
lock
fcoml
cmpb
idivl
jmp
orb
ljmp
decl
pop
fstpt
cmp
push
fs
out
xor
push
fistl
or
jg
loope
push
push
movsb
arpl
addb
std
lock
xchg
decl
hlt
nop
faddl
jnp
xor
and
lock
subl
pushl
add
popf
adc
cmp
dec
jle
mov
ljmp
popf
dec
mov
or
jbe
movsb
loop
or
or
or
ret
lcall
pushf
cs
aaa
pop
scas
imul
xchg
in
inc
pop
push
decl
in
pop
xlat
pop
lcall
ret
repnz
insb
movsl
popl
lcall
xchg
jne
insl
pop
dec
dec
js
dec
ror
mov
mov
mov
jns
lds
cmp
push
stos
les
push
xchg
mov
mov
rolb
xchg
call
add
adc
fstpl
pop
and
jnp
aad
mov
decl
cmc
xchg
cmpl
int3
xchg
lea
mov
int
cmp
xor
cmp
je
cwtl
lods
xchg
stos
into
call
fisubs
cld
pop
out
hlt
stc
add
cmp
fs
cli
or
cmc
repz
push
pop
cmp
call
ljmp
insl
add
pop
dec
popf
pop
das
jle
mov
cmp
rorb
inc
cmp
cmp
jnp
arpl
push
add
repnz
push
add
insb
jns
std
daa
mov
inc
mov
mov
ret
pushw
outsl
mov
push
insl
addr16
inc
sbb
loop
xchg
mov
xor
xchg
cli
decl
xchg
dec
mov
inc
dec
cld
mov
aas
jno
mov
decl
stc
xchg
test
ds
cld
jg
icebp
or
sbbl
mov
out
cmc
xor
cmp
sub
test
jb
or
enter
popa
in
sub
loopne
and
sar
and
mov
gs
mov
sub
inc
lds
push
dec
in
ret
xchg
cmp
je
idivl
mov
dec
cld
ret
fdivp
mov
push
addr16
dec
sub
outsb
cmc
ljmp
adc
adcl
jb
jbe
xchg
dec
sbb
fildll
sbb
sahf
dec
mov
insl
or
dec
mov
mov
test
mov
fucomip
scas
addr16
fstp
mov
pop
dec
stc
mov
fs
mov
out
jg
sahf
je
xchg
push
xchg
imul
xor
xchg
dec
rcr
jo
inc
ljmp
jnp
call
sbbb
in
xor
fcomip
dec
push
movsl
aaa
push
cltd
adc
decl
ret
addl
xor
ss
mov
lods
notl
ret
mov
insb
loop
fdivp
ljmp
and
dec
mov
cs
push
in
and
cmp
imulb
data16
fucomip
ljmp
cmpsb
cwtl
pop
bound
push
test
xchg
adc
cmpsl
pop
xchg
cs
in
adc
loope
gs
push
nop
xchg
insb
mov
lcall
fsubrl
pop
fs
mov
imul
mov
test
shr
fsubl
mov
lock
outsl
icebp
mov
adc
adcl
sahf
xchg
gs
sbb
inc
adc
outsl
cld
call
inc
push
push
addr16
mov
fldt
bound
fwait
sbb
cld
jge
xor
push
jmp
lret
stos
mov
mov
or
dec
in
jp,pt
lcall
imul
inc
cmp
xor
jbe
cmp
ret
fucomip
sbb
addr16
sub
jb
sbb
enter
hlt
arpl
decl
xchg
in
out
icebp
out
jb
mov
fcmovu
pop
jl
jns
sar
aam
in
fsubrl
jnp
lea
mov
test
call
mov
int
cmp
aad
shlb
dec
lds
incl
int3
inc
mov
scas
scas
jg
push
and
adc
fists
into
fisttps
mov
imul
pop
std
jnp
jnp
mov
xor
pop
jnp
nop
sbb
inc
xor
into
sbb
cltd
popw
je
insl
icebp
movsl
and
lods
fcomps
mov
add
mov
cmp
aad
jmp
cld
and
and
jae
roll
shrl
xchg
ds
sbb
push
mov
add
cmp
mov
inc
inc
imul
jge
pop
dec
aaa
out
push
sbbl
shr
pop
loopne
sar
mov
clc
jg
into
and
inc
enter
lcall
or
dec
push
or
clc
in
inc
icebp
mov
adc
call
cli
ljmp
test
std
lret
inc
movnti
das
in
jmp
push
addr16
lcall
or
inc
popa
add
mov
sbb
stos
in
pop
xor
cmp
insl
fwait
jbe
add
outsl
out
fwait
pop
jecxz
daa
adc
pop
out
xor
dec
jns
sub
jmp
add
xchg
sub
jmp
or
mov
mov
mov
loopne
xchg
outsb
and
pusha
lcall
fcoms
out
call
cmp
mov
lods
ljmp
fcmovnbe
cmp
fucomip
pusha
mov
sub
call
pop
jmp
jns
jne
sub
push
std
stos
dec
jl
mov
loop
ljmp
outsb
or
jle
fs
loopne
and
inc
xchg
aad
adc
nop
pop
std
inc
or
popa
jbe
fcomps
cmp
sbb
jns
xor
aam
mov
xchg
sbb
mov
loop
cli
dec
cltd
out
dec
fdivp
xor
jbe
in
push
iret
add
pop
idivb
test
cmp
push
leave
jl
leave
into
cli
call
sahf
out
fdiv
mov
xlat
and
lock
and
xor
pop
dec
mov
fmuls
call
cmp
sbb
sub
pop
call
movsl
mov
test
add
sub
das
cld
jg
sbb
les
dec
xorb
adc
incl
mov
jmp
rcrl
pop
xlat
cs
mov
jg
add
jno
xchg
push
fstl
enter
in
imul
jmp
sbb
pop
sbb
fisttpl
popa
ret
mov
out
sbb
decl
jae
jg
pop
jecxz
mov
inc
cmp
mov
mov
push
cmpsb
cmc
pusha
mov
dec
std
and
lock
mov
fadds
addl
cli
xor
push
inc
cld
jnp
xchg
lcall
popf
mov
into
pusha
jbe
jp
ret
fnstsw
out
mov
sbb
xchg
cmc
push
shl
ljmp
fisubrl
xor
xor
mov
mov
ljmp
push
sub
das
into
mov
fiaddl
or
rolb
loopne
lock
pop
xor
or
push
pusha
aad
aad
mov
xor
stos
mov
mov
cs
sbb
mov
inc
and
shr
outsl
lock
stos
inc
aas
into
lahf
stos
mov
push
push
sar
lock
mov
pop
ret
shlb
or
icebp
imul
cmp
outsb
mov
test
cld
sbb
and
shll
sbb
dec
jl
add
mov
mov
jmp
mov
fsin
loop
repnz
rcll
mov
fmull
dec
adc
out
les
push
popa
es
add
pop
sub
cmp
pop
cld
xchg
iret
sti
inc
lods
ret
xchg
daa
ja
mov
ljmp
popf
xchg
cmp
rorl
out
fldt
cld
mov
pop
popf
in
inc
sub
shlb
out
mov
pop
movsl
xchg
in
lahf
xchg
push
dec
push
cmpsb
inc
mov
jmp
mov
iret
mov
sbb
mov
xor
or
and
movsl
daa
jns
mov
repz
repz
jg
cs
sbb
test
add
mov
les
outsl
cmp
call
dec
loopne
and
mov
xchg
adc
stos
lods
jl
pushl
cli
fnstenv
pop
ljmp
cmc
pop
loop
xor
jecxz
adc
std
or
call
push
and
lds
imull
sahf
cwtl
sbb
inc
jb
pop
imul
dec
pop
mov
test
dec
mov
into
ss
xchg
mov
jg
les
stc
pop
lods
or
or
mov
push
fldt
lods
cmpsb
adc
mov
xchg
icebp
rcrl
sarb
push
push
add
outsl
mov
dec
dec
loop
fistps
outsl
leave
jnp
dec
ret
std
pop
je
mov
stos
and
pop
add
mov
std
mov
inc
arpl
mov
push
jl
push
xor
xchg
loope
push
jge
popf
dec
popa
cmp
push
jns
mov
fidivrl
adc
daa
addb
jnp
ja
in
frstor
pushl
fmulp
out
enter
adc
xor
dec
inc
jno
xchg
fwait
movsl
push
mov
movsl
sbb
jg
clc
sbb
dec
mov
jnp
push
pop
jno
push
enter
and
cmp
sbb
mov
aaa
clc
xor
sub
int3
xchg
clc
test
add
jg
iretw
xor
push
aad
lea
gs
cmp
mov
cmpsl
imul
sub
lea
and
dec
jl
sahf
xor
cmp
das
fdivrl
jg
sub
lds
ja
in
adc
rcr
rcrl
out
adc
pop
xchg
inc
jg
inc
jne
add
dec
add
pop
sub
pop
push
mov
mov
int3
xchg
sub
add
mov
sub
adc
loope
mov
push
fsubl
cwtl
testb
pop
arpl
mov
xchg
bswap
jnp
mov
sti
mov
xchg
pop
fsubrs
sar
pop
das
sti
push
xchg
cli
pop
cli
pop
lahf
in
mov
add
call
loop
pop
fiaddl
sub
test
adc
pop
inc
jmp
cmpsb
push
dec
cld
aas
push
in
ret
les
lret
xor
mov
pop
aad
pusha
ret
ret
pusha
and
call
pop
dec
add
mov
sarl
js
sbb
mov
lret
mov
cld
cli
movsb
jmp
outsb
dec
pop
cmp
and
push
fs
or
pushf
sub
loop
push
mov
out
jae
inc
insb
std
call
sbb
mov
cmp
aad
dec
cwtl
hlt
adc
mov
push
mov
movsl
xor
mov
call
outsl
insl
or
push
cmpsb
xchg
pusha
push
icebp
stc
mov
insl
add
pop
xchg
mov
or
add
pushf
mov
sub
jmp
std
push
pusha
test
push
popf
cmp
mov
cmp
inc
pop
cmp
decl
arpl
mov
fstps
jne
sti
add
fs
xchg
xchg
adc
adc
jg
data16
lret
pop
and
mov
ljmp
mov
pop
rcrb
inc
sbb
mov
in
cwtl
iret
inc
pop
sub
push
push
inc
or
mov
call
push
or
xchg
rorb
fnstsw
sbb
fucomip
call
mov
xorl
dec
sbb
cltd
push
cmp
ljmp
inc
sbb
sbb
cmp
xor
and
xor
mov
mov
fsub
mov
mov
std
pop
sub
xor
mov
fld
cmc
adc
insl
neg
cmp
je
push
xchg
jge
int3
or
cwtl
js
mov
fcompl
push
xlat
insl
out
add
daa
cs
xor
xchg
add
decl
sub
out
push
testl
add
push
push
jmp
scas
and
call
movsb
inc
jmp
xor
pop
push
jge
stos
mov
aas
aam
sbb
mov
mov
sahf
add
test
xacquire
bound
pop
adc
sub
mov
jg
decl
jb
addr16
dec
sub
dec
test
fidivs
mov
and
sub
xchg
xchg
mov
fcomi
pushf
mov
icebp
jle
lods
into
dec
mov
and
stc
cli
je
call
cs
mov
dec
insl
pop
imul
pop
dec
sub
cwtl
hlt
add
jg
mov
jecxz
dec
aas
cmpsb
mov
scas
sbb
ret
ficoml
add
clc
jmp
imul
inc
push
shlb
dec
mulb
repnz
jmp
add
jo
stc
mov
lds
loope
bnd
pop
or
sub
mov
cmp
ljmp
or
pusha
and
jb
mov
push
js
out
jg
test
lret
sbb
fdivp
jno
xchg
add
daa
jb
ljmp
add
sub
movsb
fwait
adc
outsl
ret
add
or
fs
mov
test
clc
ffreep
lea
sti
push
cmp
in
fdivs
les
xchg
inc
pop
lds
cli
jno
movsl
and
inc
imul
ljmp
rcrb
sub
jle
pop
outsl
sub
cli
sub
pushl
inc
fdivrl
add
sbb
jnp
lock
sub
ret
push
ljmp
loopne
jns
mov
sub
adc
movsl
in
push
call
push
outsl
cld
mov
add
or
add
nop
or
add
lock
pushl
jp
lea
nop
fdivrl
dec
add
cs
fmuls
pop
and
pop
jmp
loop
mov
pop
lcall
call
push
ret
sarl
das
daa
xchg
out
dec
adc
jae
notb
and
cmp
je
fldt
dec
inc
test
jg
int3
cmp
pop
add
xor
out
in
mov
inc
jmp
shlb
sub
imul
dec
xchg
sbb
and
inc
push
inc
pushl
ja
push
mov
js
and
cmp
mov
scas
add
inc
cmpsb
xrelease
aaa
ret
incl
or
jne
lret
aad
xchg
sbb
xor
std
lret
mov
xor
aad
sbb
call
fcmovbe
es
out
pop
jle
add
fists
sbb
leave
xor
xchg
mov
inc
ljmp
decl
test
test
mov
cwtl
xorl
dec
adc
and
jmp
sti
cld
cltd
fistl
loope
mov
jns
jb
daa
aam
push
cmpl
les
sahf
cld
decl
mov
mov
fld
dec
adc
es
push
lret
or
rol
out
xchg
stos
inc
decl
cwtl
or
mov
sti
cmp
cmp
inc
or
ljmp
and
cmp
jno
mov
push
enter
inc
inc
insb
data16
mov
lds
sbb
rcll
xchg
incl
or
inc
mov
dec
pop
or
xor
jne
nop
push
adc
js
ret
ljmp
add
adc
mov
es
pop
lock
dec
stos
ror
adc
xchg
arpl
pop
shrb
push
js
sbb
push
bound
incl
sub
hlt
xchg
pop
mov
mov
jmp
mov
ret
cs
and
pop
jg
decl
pop
sub
cmpl
in
fdivrp
lcall
test
mov
bound
call
and
jge
mov
and
icebp
ljmp
lret
mov
out
jp
ficoms
sub
push
stos
lahf
iret
test
cwtl
and
or
aad
sbb
add
fisubs
call
mov
call
lcall
sbb
andl
or
xchg
mov
popf
stos
mov
dec
mov
cmc
mov
push
push
inc
mov
dec
lahf
inc
jp
add
insb
jp
sub
add
dec
sbb
sahf
bound
jg
adc
inc
sub
test
fstps
stos
push
sbb
add
js
gs
cltd
inc
fidivl
mov
addb
jne
fildll
and
sub
imul
enter
fisubrs
fnstenv
insl
sbb
decb
iret
cmpsb
rorb
dec
mov
mov
jno
fnsave
sbb
add
data16
decl
mov
or
cli
jnp
and
ror
xchg
sti
mov
cmpsl
xchg
pop
orb
adc
xor
jae
dec
push
clc
lods
jmp
in
sub
jb
jl
jle
jmp
push
call
ds
call
sbb
lahf
in
mov
dec
incl
mov
cmp
jge
fisttpll
add
pop
imull
movsl
call
js
or
sbb
cltd
cmp
sbb
cltd
cmc
clc
jg
cmp
pop
pop
push
out
add
lods
fcmovnu
dec
std
pop
or
push
mov
lcall
pop
sub
xchg
xchg
notw
das
lock
push
adc
ficomps
lods
fs
lock
dec
mov
shr
imul
or
dec
jp
in
stos
into
outsl
js
int3
pop
jmp
and
add
mov
aaa
mov
ljmp
std
loopne
aaa
jno
and
add
sbb
xlat
lcall
incl
xchg
stc
sub
nop
mov
mov
test
mov
add
das
icebp
adc
pusha
sbbb
in
add
addr16
scas
pop
xor
decl
mov
lods
lret
cli
aam
pop
cmpsb
mov
jecxz
cmp
bnd
cmp
push
ja
aad
in
push
out
popa
pop
mov
sbb
fcompl
jg
mov
jecxz
mov
jns
mov
jns
inc
popf
push
inc
xor
xchg
sbb
mov
mov
notb
clc
dec
mov
xchg
jae
push
add
mov
das
lock
not
mov
nop
mov
adc
ud2
ret
or
call
sahf
sub
dec
xlat
sbb
divb
je
jp
pushf
incl
and
rcrb
adc
int
mov
fsubr
bound
or
and
test
mov
ds
decl
faddp
or
daa
int3
fildll
pusha
or
movsb
xor
sub
or
fucomp
mov
jns
adc
test
mov
in
inc
mov
ljmp
xor
jo
nopl
mov
icebp
in
mov
rcrl
adc
ljmp
aam
mov
loope
divb
and
cltd
and
xor
std
mov
outsl
bound
or
cmp
jg
or
mov
pop
and
sahf
mov
push
jl
and
adc
incl
sti
ljmp
test
mulb
stos
lret
hlt
dec
inc
cmp
jns
add
stos
jecxz
fistl
and
jmp
pop
dec
call
out
cmpl
xor
ljmp
xchg
fidivs
int
in
push
or
sbb
out
or
jg
in
into
jns
loope
cmpl
xchg
sarb
mov
cmp
fisttps
cltd
outsl
sarb
mov
or
push
cs
incl
xor
dec
sahf
cltd
mov
popa
xchg
cmpsl
add
lods
decl
scas
inc
gs
popa
fbld
add
add
jns
push
js
mov
rcll
pop
mov
xor
or
mov
adc
jg
incl
movsb
mov
push
arpl
pop
ljmp
jg
lcall
lcall
adc
mov
inc
sbb
sub
movsl
inc
jne
sbb
inc
xchg
stc
int3
mov
xor
popa
add
outsl
cld
jmp
cmpsl
mov
into
lret
cltd
mov
les
and
aaa
mov
lcall
repz
call
xchg
shll
xchg
dec
adc
xchg
inc
lea
inc
jb
mov
jp
ljmp
shl
sub
stos
add
in
lods
pop
dec
pop
xchg
dec
push
jo
jno
cmpsl
je
sbb
in
mov
adc
jle
cmp
push
jae
sub
int3
push
push
out
inc
push
daa
icebp
out
xor
xchg
adc
fwait
lea
mov
std
outsl
jne
or
mov
jle
cld
hlt
inc
loopne
push
call
xchg
mov
mov
mov
into
adc
mov
out
and
mov
pop
mov
xor
aaa
cld
stos
mov
std
imulb
jbe
lods
fisubl
push
aam
sbb
inc
mov
and
mov
push
mov
aad
push
xlat
cmp
xor
popa
or
jg
inc
sub
add
pop
in
ret
icebp
dec
mov
call
push
test
pop
in
xor
mov
cmpsb
mov
xchg
ljmp
mov
iret
lods
in
pop
shl
out
mov
fs
scas
bound
jmp
pop
stos
add
movsb
dec
sub
xchg
enter
cmp
cmc
scas
into
jb
lods
insb
inc
sahf
sub
sub
aam
popf
xchg
div
cmp
add
fnstsw
jl
xor
mov
test
jle
pusha
arpl
fnstsw
ljmp
xchg
in
mov
xor
test
dec
loop
in
pop
ljmp
sub
pop
mov
js
push
aam
ja
inc
pushl
cmp
cmpsb
push
das
pop
int3
jg
fucomip
push
jl
jb
cmp
mov
ljmp
call
fisttpll
jmp
ret
inc
push
movsb
orl
int
mov
sti
pop
loop
hlt
fnstcw
sub
les
xor
xchg
jg
mov
sub
lods
jae
cmp
xor
stc
out
inc
in
lcall
push
adc
loopne
cli
out
push
xor
or
cmp
rcrl
into
pushf
cld
sahf
jmp
add
mov
lea
and
dec
or
push
pop
rorl
push
xlat
ljmp
fildll
lret
or
shl
and
and
ss
leave
mov
lock
out
popf
push
shr
call
into
cwtl
or
jge
iret
mov
in
jne
aam
pop
pop
dec
fisttpl
mov
sbb
mov
test
hlt
push
push
mov
pop
xchg
xor
nop
mov
adc
cli
das
hlt
pop
push
fnstenv
adc
dec
push
data16
jg
ds
popa
xchg
pop
imul
scas
mulb
mov
add
mov
mov
push
xchg
sbb
mov
fstpt
jge
test
mov
xor
or
imul
sub
ja
push
and
outsl
icebp
cmpsl
push
es
dec
out
dec
xchg
dec
mov
mov
cmc
js
lcall
jg
icebp
out
mov
cmp
fstpl
xchg
daa
pop
lret
jns
outsl
incl
jg
lods
test
or
pop
pop
fldl
stc
fst
mov
fwait
lcall
dec
daa
jne
lods
leave
daa
xorb
jl
repz
aam
mov
sub
lahf
adc
nop
call
call
pop
pop
pop
dec
xor
jge
loopne
test
andl
rcr
push
mov
orl
xchg
insl
jg
mov
push
into
xchg
shlb
or
jbe
add
push
decl
rcl
jns
jae
jecxz
int
sub
xor
sbb
jecxz
stos
aaa
outsb
cld
call
js
xor
insb
xor
mov
mov
cmc
sub
dec
mov
fbstp
pop
in
inc
pop
cmp
fcmovnbe
lret
jmp
cwtl
clc
or
fsub
das
out
mov
in
int
jnp
sbb
xlat
pop
roll
xchg
fdivs
mov
cmp
jge
stc
fisubrl
dec
iret
mov
xchg
and
mov
pop
scas
xchg
push
std
lahf
adc
and
pop
pushl
cmpsl
or
imul
lock
fnstcw
push
mov
mov
jmp
xchg
push
xchg
xchg
repnz
into
ss
iret
lret
adc
jg
pop
lret
inc
push
or
xor
push
dec
pop
pop
in
jecxz
cltd
ret
test
xlat
iret
add
loopne
pop
clc
test
pop
inc
inc
xor
pop
sbb
mov
jp
stos
les
out
jb
not
cmp
sbb
outsl
pushl
dec
jge
mov
inc
mov
jecxz
xlat
or
xchg
mov
jmp
add
decb
sbb
adc
dec
inc
push
mov
pushf
loopne
inc
pusha
insb
lahf
jl
xor
cli
mov
add
cmp
pop
aam
loopne
in
decl
pushf
xchg
adc
iret
or
bound
jmp
pusha
cmp
shl
repnz
insl
cmp
icebp
and
and
arpl
mov
call
aaa
mov
mov
ftst
mov
nop
movsl
cmp
arpl
loop
inc
loopne
roll
jmp
mov
cmp
lcall
push
mov
shl
popa
call
push
lret
add
das
mov
insb
out
loopne
iret
cs
adc
xchg
xor
ljmp
mov
ljmp
sahf
popa
cwtl
mov
jne
or
jmp
sbb
dec
loope
xor
pop
and
jmp
push
mov
outsl
in
aam
push
dec
add
lock
lcall
pop
lods
xchg
js
pushl
repnz
cmpsb
dec
sbb
fcomp
sbb
sarl
add
pop
cmpsl
and
adc
inc
fsubrp
adc
dec
call
lret
inc
ljmp
lahf
fs
cmpsl
shr
movsb
mov
add
das
adc
mov
loop
movsl
imull
mov
mov
pop
jle
and
push
arpl
jo
inc
jmp
in
lds
rclb
dec
ljmp
cs
or
inc
or
sti
in
sbb
jo
scas
data16
ds
call
adc
push
stos
mov
add
lcall
pop
incl
sub
pop
bound
adc
jns
sahf
mov
jae
std
out
mov
push
call
jne
xchg
mov
pop
loope
mov
insb
jo
int
add
push
call
ljmp
or
insl
imul
dec
sub
ds
scas
pop
add
cmp
sahf
ss
iret
out
or
call
mov
outsb
inc
in
ret
shlb
insb
popf
arpl
clc
dec
sub
mov
xchg
mov
fmuls
in
clc
popa
ds
mov
das
mov
xchg
mov
notl
dec
aaa
cli
call
ss
popf
nop
mov
mull
mov
lods
jg
js
repnz
shll
add
sbb
or
inc
mov
dec
adc
lcall
testb
jnp
jmp
fwait
ja
xlat
ljmp
cmc
mov
fs
pop
jb
shrb
jo
push
pop
fwait
and
dec
std
call
test
rcl
xchg
lcall
inc
outsl
repz
xchg
mov
in
sti
jecxz
clc
inc
dec
adc
in
pusha
hlt
xor
or
test
mov
outsb
in
test
repz
mov
js
lods
mov
cmp
mov
outsb
addb
mov
mov
in
lcall
push
adc
imul
pop
mov
jmp
es
fs
int3
js
mov
incl
stos
inc
push
cmp
push
icebp
rclb
push
mov
negl
adc
xchg
xchg
mov
adc
push
out
mov
out
ret
movsl
mov
sub
jae
jmp
and
xor
inc
sarl
je
sub
jnp
loop
mov
cmp
sub
mov
dec
push
movsb
sbb
in
std
xchg
jmp
cmp
add
loopne
scas
movsl
ljmp
fwait
jmp
stc
jl
test
call
std
mov
xchg
out
stos
cmpsb
adc
sbb
push
mov
inc
rolb
mov
call
add
xor
jg
das
mov
lods
sarb
xor
cmp
stc
divl
ljmp
in
and
ja
rolb
and
iret
or
rclb
xchg
lock
pop
in
and
dec
lea
xor
jae
jmp
xchg
lahf
iret
loope
lcall
inc
cs
arpl
jbe
ficoms
mov
movsb
adc
decl
mov
jecxz
pop
push
mov
divl
jg
aad
mov
inc
mov
cmp
popf
into
or
mov
les
mov
and
dec
push
and
loopne
incl
lar
sub
jp
mov
mov
sub
loop
lock
fisttps
push
and
push
scas
jbe
stos
push
dec
pop
clc
lcall
stc
out
cltd
pop
xchg
add
pop
pop
arpl
lcall
fcoml
jg
cmp
pop
je
mov
mov
xor
jnp
pop
loope
lret
pushf
jo
jbe
pusha
mov
jg
cmp
mov
or
mov
xchg
xchg
mov
xchg
gs
fimull
inc
xor
inc
fs
adc
std
push
insl
fucomip
call
xchg
hlt
xchg
or
insb
pop
test
in
jnp
and
or
decl
jbe
dec
mov
adc
aaa
adc
clc
pusha
push
sub
push
mov
dec
or
test
gs
in
bound
xchg
leave
imul
mov
dec
fistpll
out
icebp
add
mov
in
fs
in
xor
jmp
adc
mov
sub
jmp
pop
lret
shl
pop
lcall
mov
aas
jecxz
outsl
mov
pop
lods
adc
mov
das
icebp
decl
stos
stos
cmp
dec
aam
jp
jmp
jae
sub
ljmp
sarl
fsubl
push
jecxz
test
adc
aas
stos
mov
mov
mov
rclb
push
faddp
cmp
loop
xor
cmp
jo
xor
decl
add
hlt
shlb
sbb
inc
mov
cwtl
in
shlb
add
ljmp
mov
pop
jns
and
pop
fistl
push
and
jg
adc
out
add
out
lret
sbb
mov
decl
mov
cmp
mov
inc
std
cmp
gs
cld
decl
xchg
nop
cmp
jbe
lret
jns
pop
mov
push
call
sbb
jmp
and
inc
stos
xor
push
icebp
nop
ljmp
icebp
mov
add
std
lcall
and
mov
sbb
mov
decl
push
test
lahf
rclb
sub
imul
mov
pop
fistl
lret
add
pushl
push
incb
sub
sub
jmp
jmp
pushl
movb
call
mov
ret
movb
pop
aad
clc
push
jg
mov
clc
mov
xorl
lret
xor
lcall
cld
jmp
add
mov
inc
test
mov
frstor
insl
scas
into
vmread
push
push
in
sub
mov
sub
cmp
mov
das
add
into
mov
sbb
rcrl
xchg
es
out
popa
ljmp
lock
inc
ds
xlat
mov
mov
faddl
incl
lcall
pop
popf
push
movsb
xchg
mov
push
and
idiv
decl
aaa
sbb
cmpsb
cld
mov
gs
pop
sahf
notl
ljmp
pop
loop
pop
movsl
dec
movsb
in
sbb
sbb
jecxz
jg
fsubs
push
pop
pop
cmp
cmp
loopne
and
sub
pop
or
fistpl
sbb
ljmp
xor
inc
push
hlt
jns
cmpsb
aas
fmull
ret
inc
mov
incl
lods
adc
fdivrl
shrl
push
fcomps
call
insl
adc
test
adc
stc
xor
mov
test
xchg
jns
pop
cmp
lahf
pop
dec
xlat
int
cmp
mov
cmc
les
ss
jl
call
cli
jmp
fldcw
xor
sbb
add
test
sti
pushl
jbe
inc
and
xchg
addr16
mov
push
fdivl
adc
cmp
cmp
mov
inc
pop
sbbl
das
adc
pushl
aad
or
icebp
jmp
idivb
mov
frstor
sbb
jb
dec
fsubrl
hlt
sbb
stos
adc
lcall
inc
sti
loop
imul
pop
fcmove
xchg
ljmp
icebp
pusha
inc
mov
push
fdivrl
push
scas
cltd
pushf
leave
pop
xor
add
test
lea
mov
into
adc
rorl
addr16
aad
out
popf
mov
cld
and
call
call
in
cld
popa
sub
orl
sbb
pusha
imul
mov
xlat
sti
or
inc
lods
jno
es
sbb
jbe
jmp
stos
jne
call
xchg
cld
inc
jo
jl
adc
cmp
cmp
test
xchg
mov
jg
inc
or
cli
arpl
jg
ljmp
fildll
dec
mov
jbe
dec
ror
dec
lea
out
mov
dec
ss
mov
dec
sbb
mov
mov
push
cmpsb
cmc
test
call
fwait
cmp
jmp
xor
cld
decl
fldl
jle
jnp
andl
js
inc
dec
mov
lock
lea
inc
dec
mov
clc
clc
pop
bound
pop
cmpsl
decl
xor
or
mov
insb
mov
pop
jl
push
push
mov
decl
or
pusha
cs
insl
cld
jbe
cltd
sbb
inc
std
call
push
into
popf
sbb
jne
xor
icebp
pushl
sbb
xor
xchg
cmpsb
push
testb
fsubp
ljmp
mov
enter
cmp
jmp
sbb
and
cmc
lods
sbb
lods
pop
add
adc
dec
popa
add
ja
inc
out
dec
cmp
das
divb
test
dec
push
sbb
pushf
insb
call
fiadds
outsb
in
mov
push
test
inc
out
pop
sti
incl
pop
fs
push
push
dec
pop
imul
sbbb
lcall
or
int3
mov
sub
push
fists
push
roll
adc
pusha
je
arpl
or
inc
mov
decl
leave
insb
jns
xchg
outsl
push
push
push
into
ret
jo
cmp
xor
loopne
lret
call
add
lahf
sets
ljmp
subb
fcoms
mov
jge
test
sbb
pop
std
in
loop
aas
xchg
pop
add
adc
jne
dec
outsb
in
mov
shlb
jns
lcall
or
mov
sbb
cmpsl
mov
cmp
shrl
decl
dec
js
scas
lret
inc
enter
rolb
gs
add
or
push
movsb
or
cli
das
mov
decl
vcomisd
jne
xchg
cltd
bound
mov
pop
sbb
inc
and
aaa
sub
or
inc
jmp
rcl
fucomip
rorl
cmc
jp
aam
pop
jne
hlt
ljmp
adcb
fs
push
xor
mov
sbb
loope
push
test
jmp
xchg
sbb
fstpl
test
js
push
dec
inc
adc
sti
mov
jb
mov
or
jne
orl
outsl
std
dec
stos
fcmovne
loope
jg
jae
cltd
cmp
jg
leave
aam
aas
icebp
popa
into
mov
pushf
pop
movl
xlat
stc
lea
push
jg
ja
incl
dec
out
in
rorl
xchg
imul
aas
dec
nop
aas
mov
sar
ds
jns
into
out
cmp
push
test
sub
addl
push
or
mov
pushl
dec
cmp
inc
bound
mov
test
inc
sub
movsl
xchg
in
add
mov
imul
pushf
subl
jp
test
add
leave
std
add
jae
adc
adc
jecxz
outsl
xchg
pushl
add
adc
sahf
adcl
int3
push
mov
leave
in
rcrl
xor
mov
mov
enter
icebp
jb
mov
mov
jns
aaa
push
in
or
push
jecxz
ljmp
sahf
adc
repnz
lock
icebp
stc
sub
ret
xor
xchg
adc
lock
ficompl
cmpsl
loop
cwtl
scas
mov
lret
fsubrl
or
jg
or
test
pop
sub
sahf
ds
or
cwtl
inc
pushl
or
mov
in
cltd
rcrb
jo
lds
jmp
loopne
call
test
stos
adcl
test
decl
jne
shrb
dec
jmp
and
nop
add
and
jl
push
xchg
jo
jb
std
ljmp
xor
lods
iret
scas
and
aas
idiv
xor
dec
and
scas
daa
jb
fcompl
xchg
or
ljmp
dec
jecxz
sub
cmpsl
sbb
ret
ds
insb
inc
in
xchg
jno
sbb
cmpsb
aad
dec
ror
andl
out
fwait
shl
inc
movsb
ds
cmpsb
hlt
iret
shrl
test
mov
xor
mov
lds
ret
fidivl
mov
adc
pusha
dec
mov
push
inc
pop
push
popa
push
iret
lret
cli
aas
add
pusha
addr16
or
xchg
out
cmpsl
lret
inc
mov
adc
jmp
inc
repnz
and
push
icebp
sbb
int3
inc
and
or
andb
jae
fildll
int3
push
popa
insb
test
push
xchg
out
adc
pop
ss
lock
orb
in
cmp
leave
shlb
cmp
shl
movsb
call
and
cmp
jbe
stos
sbb
adc
inc
in
into
cmpsl
lds
insb
push
les
cmp
mov
loope
movsb
cmp
lcall
pop
ss
shl
incl
jg
and
stos
js
lret
or
lret
leave
or
std
xor
xor
inc
repz
cmp
mov
sub
sbb
add
into
pop
dec
stc
out
xor
jg
push
mov
test
push
mov
dec
imull
sbbl
imul
loop
jbe
jg
call
iret
cmp
xor
pushw
ret
push
adc
inc
mov
decl
mov
inc
sti
jb
aas
das
jo
mov
cli
ret
dec
test
andl
incl
mov
inc
inc
repz
fstl
fldcw
pop
mov
clc
lret
stos
pushf
inc
cli
iret
cld
aaa
pop
pop
lock
lret
mov
insl
bound
sub
cs
sub
fucomip
stc
mov
mov
data16
jae
test
lock
xchg
hlt
ljmp
outsb
push
xchg
cmpsb
test
cmpsl
stc
cltd
fwait
or
jae
jp
ds
repz
mov
nop
je
in
fsubs
fdivr
call
shlb
rorl
jmp
outsl
imul
dec
mov
enter
imul
mov
or
mov
dec
sbb
dec
mov
or
ja
mov
inc
cmp
mov
in
push
fldcw
sti
mov
int3
int3
cltd
inc
cwtl
jns
call
cmp
fdivrs
popf
adc
mov
and
add
jg
jg
mov
ret
mov
mov
mov
sbb
pop
clc
lcall
loope
xchg
xchg
es
sub
lahf
or
mov
add
sbb
rcrb
pop
jb
add
lds
std
push
imul
and
fistps
subb
sbb
or
adc
push
mov
pop
mov
pop
sbb
dec
aas
adc
ja
mov
cwtl
sub
cs
or
jge
push
mov
or
in
fistpll
mov
adc
fwait
dec
pop
jecxz
mov
imul
loope
add
mov
stos
mov
outsl
imul
cmc
mov
jl,pt
cmp
jl
loop
xchg
lcall
iret
inc
sub
or
std
fstpt
data16
out
xor
lcall
or
pushf
adc
imul
sbb
xchg
aas
sbb
dec
mov
test
lret
popw
stc
lcall
ss
push
icebp
sub
sbb
sbb
lock
inc
xlat
or
repnz
mov
call
jg
cmp
mov
cmc
mov
push
lret
jg
jg
les
dec
adc
shrd
sahf
iret
inc
xchg
jmp
mov
or
push
fwait
mov
sub
int
in
mov
mov
dec
cmp
add
frstor
and
fdivrs
xchg
push
mov
movsl
mov
dec
push
cmp
jle
inc
imul
iret
decl
js
adc
and
test
test
fisttps
mov
inc
adc
ljmp
and
test
les
icebp
add
adc
cmpsl
xchg
fwait
mov
int
ret
lods
mov
jg
imul
sub
inc
push
int
enter
xor
loope
fistpll
enter
loopne
pusha
inc
xlat
outsl
fwait
in
dec
aam
call
push
sarb
pop
inc
rdtsc
sub
ds
inc
mov
jg
or
or
jp
cmpsl
iret
inc
stos
lcall
add
adc
lcall
xchg
add
jecxz
xor
mov
ja
stos
push
pop
gs
nop
mov
fwait
ret
sbb
sub
stos
sbb
sub
and
fldenv
sub
jl
xchg
leave
testb
mov
call
jb
data16
mov
test
adc
orb
es
fistl
leave
repnz
pop
cli
lods
gs
fcom
lock
pushl
mov
mov
fistpl
int3
lods
cltd
pop
aam
sub
sahf
out
push
pushl
xchg
icebp
fs
into
push
flds
leave
xchg
push
push
mov
jb
leave
cwtl
test
fs
sar
js
maskmovq
idivl
cmp
cs
incl
xor
push
scas
push
icebp
add
mov
dec
test
sbb
adcl
lcall
es
sbb
movsb
cltd
sub
mov
and
vmovntps
loopne
jg
es
push
mov
jge
adc
add
mov
jge
je
mov
sbb
jge
and
inc
push
jno
dec
test
mov
xor
mov
ja
pop
cmp
cmp
push
sbb
incl
bound
inc
sbb
cmp
xchg
cld
popa
cmp
mov
sub
mov
sub
jne
push
xor
imul
cmp
clc
lods
push
jmp
and
push
fadd
dec
test
ret
cli
call
dec
fldz
call
mov
test
xchg
cmpsb
in
das
fwait
cmp
cld
jg
lods
mov
mov
cmpb
ljmp
insl
dec
push
les
push
add
cmpsb
sar
dec
push
rcll
bound
ljmp
mov
mov
xchg
pop
ficomps
mov
popf
xchg
or
rolb
push
rcrb
dec
add
mov
lcall
adc
cmc
pushf
lret
popa
test
add
lcall
daa
fwait
sbb
dec
xchg
cmpsb
frstor
insl
aaa
push
adc
repz
sbb
jl
fisubl
sbbl
pop
sahf
test
push
fwait
pop
dec
and
pusha
loopne
pop
mov
pop
lret
xor
inc
fimull
inc
ds
aas
fwait
mov
mov
pop
call
test
sub
mov
in
mov
inc
idiv
adc
mov
or
cmp
cmp
cmpl
jnp
aad
stc
pop
dec
gs
jae
sbb
push
jle
jg
sub
mov
jae
or
aaa
scas
ds
adc
div
call
mov
movsb
fsts
xor
ljmp
xchg
cmpsl
popa
mov
dec
dec
pop
rol
add
out
push
fidivrs
pop
and
fists
jle
dec
or
sbb
sti
fmul
xchg
call
nop
push
xor
dec
push
ljmp
push
sbb
and
int3
sub
incl
ljmp
mov
mov
sbb
setno
lea
movsb
clc
sbb
dec
mov
insl
lea
fiaddl
ds
adc
loope
mov
es
jb
enter
mov
call
in
sti
inc
mov
adc
fstpl
push
daa
jno
inc
or
lcall
or
ja
mov
mov
lret
push
mov
xor
pop
ljmp
out
call
imul
addr16
mov
lds
mov
xchg
jle
or
loopne
mov
mov
decl
je
jmp
sbb
fdiv
or
mov
imul
push
jns
add
jg
cmp
movsl
sub
or
sahf
repz
ja
push
xchg
scas
sbb
inc
call
xor
repnz
push
pcmpgtd
outsb
test
push
jae
imul
mov
or
push
ret
pop
mov
adc
push
ljmp
test
jns
adc
lahf
push
or
xchg
fs
rcl
push
xchg
mov
sbb
mov
pop
jl
test
js
fists
and
lods
stos
mov
dec
sti
lret
sub
sti
adc
fstpt
fldt
push
sbb
lahf
push
repz
inc
xchg
lret
js
out
ds
push
or
cltd
jp
adc
or
cmp
mov
daa
sub
cld
or
jbe
call
mov
sbb
push
fildl
cld
jmp
sbb
cmp
push
jg
mov
xchg
fucompp
mov
repz
push
das
cmc
fisubrs
mov
shll
flds
xchg
pop
es
call
mov
push
push
ds
mov
mov
fcompl
decl
in
xor
je
lea
out
mov
ds
in
cwtl
xchg
adc
addr16
cmc
sbb
sub
xchg
jecxz
dec
push
adc
jb
jp
push
jle
or
inc
clc
movsb
mov
outsb
push
nop
lcall
push
push
movsl
inc
lcall
push
jb
out
or
adc
cmp
sarb
ljmp
shr
divb
in
xchg
or
sub
mov
push
mov
cld
pop
inc
adc
pushf
popf
mov
jmp
mov
in
inc
dec
fucomi
jbe
dec
loope
sti
call
push
pop
adc
mov
sub
lods
fisubrs
out
inc
jg
sbb
jns
add
push
out
adc
cmp
mov
test
imul
arpl
jg
push
leave
inc
push
lret
jmp
insl
sbb
jo
pop
or
fnstcw
fldl
leave
insl
test
mov
sahf
lcall
call
out
lahf
xor
aas
lods
adc
loop
icebp
or
iret
mov
fmulp
pop
stos
add
insl
pop
pushl
cli
hlt
inc
daa
inc
push
add
lret
or
dec
push
sub
decl
mov
adc
xor
mov
cs
fnstenv
outsl
add
push
mov
inc
nop
mov
push
mov
cmp
mov
sbb
lret
dec
xchg
inc
mov
int
jmp
aaa
call
ror
and
sub
jmp
pop
ret
addr16
push
shll
jns
adc
stos
jbe
xchg
clc
dec
cld
xchg
stos
xchg
push
adc
xor
mov
mov
mov
mov
lock
cmp
push
arpl
mov
fucom
outsl
lock
jmp
or
xchg
cmp
pop
and
mov
lea
popa
xchg
ret
mov
cwtl
movsl
mov
mov
aad
dec
std
fldl
out
das
add
insl
push
popf
fs
pop
mov
push
fs
jns
jg
mov
xorl
jbe
inc
lret
add
xchg
dec
fsubl
hlt
adc
cli
jmp
imul
cltd
test
mov
cld
ljmp
add
fsubrs
push
addr16
add
lret
xor
int3
sub
insl
dec
and
cld
test
fsubrl
add
and
dec
stos
inc
xchg
inc
adc
popa
decl
lods
popa
clc
lret
sarb
jg
mov
jl
enter
call
mov
cmpsl
lods
sub
aaa
lds
ficompl
out
pushl
sarl
mulb
bound
push
mov
addr16
gs
inc
lahf
xor
incl
pop
test
mov
adc
lret
cmp
ret
ds
data16
and
mov
lahf
lods
sbb
jp
mov
cmp
loope
cmp
dec
rclb
in
pusha
xor
jno
and
jbe
or
ret
lock
push
pop
leave
iret
pop
pop
ret
test
aam
lahf
sub
cwtl
roll
push
add
data16
xor
cli
outsl
roll
pushf
repnz
sub
push
lcall
sub
loop,pt
push
jae
int3
cmp
repnz
bound
cmp
lcall
lcall
push
dec
lahf
dec
dec
jp
and
sub
test
iret
test
lods
jg
xchg
popf
iret
scas
aam
push
fistl
out
push
xor
xor
lret
lods
es
sub
sbb
jmp
adc
push
mov
sti
stc
sbb
int
je
cmc
addr16
call
loope
dec
push
xchg
xlat
ja
negl
cmpsb
inc
mov
xlat
pop
stos
mov
mov
dec
shlb
mov
mov
invd
mov
flds
xlat
pop
cmp
mov
sub
add
call
mov
test
cmp
push
mov
sub
mov
jnp
push
push
pop
enter
adc
jne
les
clc
ficompl
pop
jp
xor
addr16
add
mov
mov
cmpsb
rorb
shrl
lds
mov
adc
jge
pop
cli
ljmp
mov
js
dec
fldt
sarb
add
and
xchg
mov
jno
cli
lcall
xor
mov
adc
icebp
sbb
or
ljmp
pop
fcompl
mov
push
popl
scas
call
jbe
mov
jae
mov
sub
bound
arpl
ljmp
into
std
adc
fisubrl
adc
and
jne
movsb
or
incl
je
pop
stc
test
lahf
sub
lcall
mov
ljmp
or
pop
mov
mov
imul
pop
mov
mov
stos
mov
call
aam
ds
cltd
adc
loopne
ret
out
mov
xchg
add
add
mov
mov
inc
idiv
aad
ds
add
in
xor
aam
pop
loop
lods
and
mov
inc
mov
xor
mov
cmp
or
mov
dec
dec
add
filds
mov
movsb
or
jmp
mov
cwtl
fidivrs
xchg
pop
cmp
fnop
inc
iret
xchg
ret
lret
push
mov
mov
jo
or
cmp
aaa
clc
jmp
jg
sub
push
cmp
push
jnp
xchg
mov
jecxz
or
lds
push
cwtl
cmp
adc
fistpl
lcall
jge
mov
mov
clc
cwtl
mov
mov
pop
xsha256
cmpsb
adc
call
imul
inc
jnp
xchg
dec
insl
icebp
xlat
mov
mov
add
push
aaa
es
push
lret
jb
fwait
inc
in
inc
sbb
pop
mov
adc
loope
sbb
ss
pop
cld
int
jae
jecxz
fidivl
jns
mov
jmp
mov
gs
addb
mov
out
mov
jmp
insb
jnp
cs
mov
mov
test
lods
mov
sbb
ret
and
arpl
das
icebp
jg
cmp
lahf
lahf
ja
xchg
lock
mov
and
jmp
inc
pop
jmp
or
mov
or
call
fldl2t
sbb
inc
incb
xor
or
fcomi
les
fwait
lock
mov
addb
sahf
push
fildll
in
lds
icebp
jg
in
call
xchg
push
or
mov
xchg
shrb
fsub
pop
add
jnp
lcall
push
adc
push
or
xchg
mov
jmp
fstl
jp
fimuls
movsl
rolb
inc
ja
adc
add
dec
sbb
insb
into
sbb
and
ljmp
mov
mov
imul
sbb
push
mov
or
jo
loope
adc
gs
dec
push
std
fwait
jg
mov
les
dec
xor
mov
inc
scas
leave
das
jl
mov
stc
cmpsb
les
cvtpi2ps
cmp
inc
sub
cmp
mov
daa
mov
imul
mov
dec
and
push
dec
jecxz
in
cmp
jns
jbe
imulb
push
mov
call
clc
adc
outsl
fsubrp
ss
push
lcall
lea
jns
cmp
imul
mov
clc
outsl
lcall
cld
cmp
sbb
inc
push
or
cmpsb
fwait
sbb
jo
ljmp
and
xor
inc
ret
repnz
inc
cld
lahf
sbb
ljmp
pop
sub
hlt
jno
roll
dec
lret
add
push
add
call
inc
stc
out
add
push
pop
xor
sahf
es
dec
sbb
lcall
out
dec
enter
pop
fisttpl
ret
das
push
sarl
lret
imul
test
in
push
movb
ljmp
sbb
and
pop
xchg
in
push
ficompl
lret
fidivrl
out
mov
or
pop
testl
scas
movsl
insb
mov
lahf
add
add
xadd
loope
jg
dec
dec
xchg
stc
push
mov
sti
pop
rcrl
int
sub
jno
insl
aam
adc
jg
imul
adc
lods
pop
jge
pop
hlt
xor
and
cmp
nop
jb
inc
pop
cmc
mov
and
dec
jg
xchg
lret
sub
jmp
inc
mov
fistpll
cmp
fs
fdivl
sub
out
stos
imul
jne
movsl
sub
shlb
mov
imul
xchg
pop
or
int3
call
xlat
jb
jge
imul
pushf
out
pushl
adc
mov
shll
rcrb
jecxz
lea
push
push
lods
subl
outsl
jne
and
inc
add
adc
pop
dec
lcall
aas
push
sti
and
aad
or
push
enter
mov
adc
ljmp
mul
in
and
int3
add
mov
mov
sbb
imul
jg
or
pop
xchg
inc
leave
into
insb
sbb
outsl
mov
xchg
xor
pop
aas
jnp
cmp
mov
xor
cmc
decl
jecxz
sub
mov
cltd
pop
cmp
adc
test
adc
mov
adc
in
sub
mov
jmp
enter
add
nop
inc
ret
push
rclb
dec
or
sbb
call
add
stc
push
add
shll
and
jmp
aaa
mov
pop
sbb
sub
scas
mov
adc
in
jle
outsl
adc
ficoml
cmc
lea
sbb
push
cmp
jbe
aam
jg
rcrl
in
cmc
ss
call
xor
xor
iret
sub
pushl
mov
xchg
xor
jg
sarb
sar
hlt
lcall
fiadds
clc
pop
xchg
stos
rol
mov
mov
inc
lcall
xchg
fwait
pop
jno
or
push
lahf
addb
inc
out
movsb
std
aas
test
mov
mov
xchg
fs
cli
dec
int3
mov
xor
mov
call
pop
dec
repz
sub
js
push
mov
pop
adc
dec
jmp
in
mov
test
out
pop
test
xchg
pop
call
and
jae
loop
je
aad
cmp
lea
push
add
pop
mov
imul
mov
test
inc
inc
pushl
mov
fwait
test
pop
xor
inc
mov
mov
arpl
data16
lcall
repz
xchg
xchg
sub
sbb
sub
idiv
xor
imul
sbb
sar
lock
fwait
lods
fwait
jmp
fisubs
rcll
sbb
std
mov
xor
cmp
gs
jno
jno
scas
pop
push
addr16
sar
aad
sahf
jmp
fadds
scas
aas
xchg
cmpsb
js
insb
jb
fwait
ret
mov
incl
push
insl
xchg
dec
adc
imul
fcomp
insb
mov
adc
lcall
sbb
fs
mul
scas
mov
jmp
js
dec
sub
sar
call
jmp
jbe
vmovsldup
adc
inc
in
cli
jbe
pusha
xchg
lods
int3
iret
decl
mov
push
pop
test
xchg
je
scas
xchg
pushf
adc
aaa
lcall
shlb
std
jecxz
rorl
test
ljmp
add
jg
xlat
sahf
mov
jecxz
outsl
sbb
jbe
pop
orl
insb
adc
das
icebp
decl
in
or
add
cltd
pop
mov
mov
ljmp
lcall
mov
mov
mov
leave
daa
addb
nop
popa
test
loop
ljmp
pop
dec
push
cmovae
sub
icebp
sub
ljmp
aam
ret
ja
xor
inc
mov
pushf
mov
incl
or
xor
dec
lock
hlt
xchg
sub
add
dec
mov
fisttps
push
ljmp
jno
sub
loope
fmuls
addr16
ljmp
pop
mov
es
mov
mov
jp
and
movsb
pushl
test
sub
xor
out
mov
add
loope
add
pop
sar
call
ficomps
sti
adc
daa
or
mov
out
push
lret
aam
ljmp
mov
stc
divl
lcall
sbb
jg
pushl
pop
std
cmpsl
bound
loop
push
shl
shrl
mov
cmp
push
dec
dec
fcomip
mov
xchg
mov
mov
jg
decl
jge
loop
inc
js
loopne
lahf
pop
loopne
cmp
punpcklbw
stos
add
mov
orb
xchg
test
lods
cltd
sbb
pop
and
ret
inc
mov
pop
inc
xchg
aas
mov
into
pop
fsubs
sahf
mov
negl
add
loop
jmp
cld
lods
icebp
leave
xor
dec
xor
pop
call
and
inc
lods
daa
lods
insb
xlat
ret
das
aad
decl
or
adc
mov
xor
pop
mov
lcall
mov
xorl
ljmp
mov
mov
lret
mov
stos
in
loope
mov
mov
adc
out
iret
and
sahf
cmpsb
sbb
push
ljmp
rclb
jo
idivb
push
pusha
enter
mov
fninit
stc
ret
nop
push
adc
in
cmp
add
inc
xor
call
xchg
push
sbb
dec
mov
repnz
pop
popf
sbb
cli
lods
pop
or
push
jns
mov
sub
aaa
repz
addb
jb
mov
dec
pop
and
outsl
mov
add
decl
adc
sahf
test
inc
inc
jno
cld
icebp
mov
sub
movsb
and
mov
xorl
and
push
mov
notb
es
loope
arpl
scas
hlt
outsl
hlt
pop
xor
xor
dec
mov
ds
pop
adc
adc
xchg
int3
adc
and
daa
adc
rcll
clc
ljmp
movsl
inc
mov
lods
pop
pop
mov
xor
or
popf
cmp
fistps
jg
pushl
test
jno
fs
imul
sbb
clc
call
fs
jle
lock
dec
xor
movsb
xor
inc
cmp
pop
scas
int3
iret
jg
mov
inc
cld
sahf
ljmp
fdivs
movsl
jle
push
insb
inc
fistpll
nop
cltd
and
dec
push
mov
push
js
pop
test
mov
ret
xor
adc
push
mov
mov
adc
imul
push
lret
lcall
ljmp
les
icebp
cmc
inc
pop
test
scas
mov
ret
clc
push
lahf
adc
or
decl
fnstenv
add
mov
jo
cmpsl
lcall
push
decl
jmp
sbb
pop
adc
hlt
cltd
or
mov
sbb
call
addr16
sbb
in
std
loopne
jp
nop
fbld
push
push
divl
cmp
ror
out
xor
adc
inc
int
mov
xorb
les
fsub
daa
mov
addr16
push
xorb
sar
xchg
inc
mov
add
decl
inc
mov
cmpsb
xchg
fiadds
ja
nop
popf
pop
rcrb
les
pop
xor
mov
dec
xchg
in
mov
mov
int
cltd
mov
addr16
lods
fldt
sbb
je
push
mov
sub
jmp
stos
jmp
sub
inc
add
lcall
push
test
scas
xor
cmp
mov
bound
push
mov
add
sub
aaa
mov
dec
fcoml
lret
pusha
add
cli
pushl
xchg
jo
lock
add
pop
sub
sbbl
sub
jmp
loope
shrb
cmp
nop
xchg
mov
aaa
xchg
mov
or
std
rcrb
jmp
cmpsl
lret
dec
sub
sbb
insl
mov
adc
pop
mov
lcall
movsl
or
orb
jo
xorl
mov
or
or
xor
fidivrs
cmc
arpl
xor
out
adc
sub
icebp
mov
mov
sahf
insb
add
mov
iret
pushl
inc
nop
aad
leave
stos
lock
pcmpgtd
xchg
shll
data16
popf
fsubrl
sbb
cld
sbb
gs
mov
fs
inc
mov
push
xor
call
nop
dec
or
xor
test
movl
mov
out
andb
inc
movsb
in
add
decl
push
test
mov
mov
fdivrp
pop
mov
ljmp
inc
rcrl
aam
popf
cld
call
and
incl
adc
jns
dec
adc
popf
outsl
lea
mov
dec
dec
xlat
cmp
inc
cmp
dec
sbb
bound
mov
mov
lods
orl
imul
jae
stc
push
ret
rclb
push
lea
mov
decl
sbb
pusha
push
or
push
bound
gs
dec
xchg
inc
mov
and
std
mov
add
outsb
out
and
das
cld
push
adc
outsb
stc
outsl
cld
js
ss
mov
aas
jbe
shll
call
jmp
ljmp
pusha
jecxz
jo
imul
mov
lods
xor
in
repz
mov
das
out
sub
xor
out
cmp
sub
mov
clc
call
add
sub
jbe
dec
les
enter
popa
lods
outsl
std
fistpll
push
movsl
pop
sahf
lods
std
jg
xchg
cmc
jae
imul
lcall
cmpsb
push
fstl
sbb
cmp
mov
adc
loop
loope
sub
cmp
in
jl
mov
cmpl
push
jg
push
mov
ja
adc
jmp
sub
xor
out
push
scas
cmp
dec
je
stc
xor
call
out
xor
and
pop
mov
add
mov
call
push
cli
mov
test
mov
xor
mov
sub
loope
movsl
xor
jg
ret
and
add
not
fnstenv
call
aas
mov
mov
sbb
fs
jp
inc
push
arpl
movsb
mov
lcall
lcall
mov
lret
je
xchg
or
mov
incl
adc
add
cwtl
mov
sarb
call
xchg
in
lods
das
push
movsl
jle
inc
mov
jbe
cmp
cmp
sub
add
movsl
std
std
scas
aam
les
cld
lcall
aas
add
inc
sub
in
clc
or
aad
addl
ret
pop
jb
inc
test
sahf
out
push
jge
fs
jge
cmp
jnp
xchg
fnsave
xchg
loope
aad
loope
daa
mov
xor
mov
fdiv
iret
leave
gs
push
stos
iret
mov
mov
dec
dec
xor
and
inc
jne
ror
push
pusha
push
fisttps
sub
fs
stos
subb
test
and
nop
stc
and
mov
incl
enter
pop
dec
push
insl
sbb
push
cli
ds
out
idiv
in
push
sahf
cmp
mov
dec
push
sbb
cmp
das
push
call
mov
fstp
and
adc
cmpl
jl
push
or
ljmp
gs
les
sbb
push
sahf
repnz
outsl
stos
dec
in
out
popf
ljmp
jnp
fidivl
ret
sbb
pop
bound
popa
inc
push
jge
loop
push
jmp
cli
test
and
push
rcll
jo
cs
daa
push
push
xchg
add
jne
lret
mov
inc
incl
popf
sti
adc
pcmpeqb
xor
mov
push
test
sahf
mov
call
cli
jmp
cmp
cld
cmp
xorb
out
int
jle
push
push
pop
js
push
or
add
add
movl
clc
jb
in
idivb
pop
fiadds
call
xchg
std
sbb
jl
cmp
scas
mov
inc
loop
out
cmp
stos
ljmp
push
gs
lods
pop
pop
repnz
loop
pop
fs
xchg
jb
in
sub
mov
mulb
xlat
filds
pop
pop
mov
cltd
inc
pop
jnp
icebp
enter
push
cli
aas
sbb
pop
cs
sti
das
cld
pushl
fs
call
lret
mov
and
push
ficoml
xor
ljmp
adc
out
mov
or
hlt
in
icebp
sub
mov
pusha
xor
mov
fimull
data16
dec
jne
scas
cld
shlb
sbb
cmp
gs
jle
int
in
rclb
push
adc
push
clc
lods
cli
into
and
call
outsb
xor
and
aas
cld
mov
mov
rolb
sti
std
adcb
test
and
test
lcall
jae
sub
cmp
jb
lret
push
into
ret
and
and
cmp
out
jle
aad
mov
pop
or
icebp
cltd
stos
push
scas
out
add
cwtl
ja
popa
mov
mov
sbb
lret
xchg
outsl
inc
daa
and
and
jg
jmp
aaa
cmp
ss
mov
cwtl
xchg
mov
jmp
jns
pusha
mov
hlt
push
pop
mov
sub
lret
xchg
mov
ljmp
jl
sti
pop
mov
inc
mov
aas
inc
insl
inc
daa
inc
mov
xchg
gs
movsb
xchg
add
outsl
hlt
enter
out
in
repz
push
imul
sub
jg
inc
pop
sahf
cld
jle
mov
test
pushl
pop
cmp
test
mov
fnsave
lret
adc
int3
pop
paddb
outsl
incb
jge
inc
fdivrs
sti
and
mov
push
in
mov
inc
cmp
call
scas
lcall
or
jns
or
mov
and
adc
jmp
adc
jae
insl
mov
xchg
xchg
cmp
and
repz
cmc
insb
loop
cmp
cld
sbb
call
mov
or
rorl
int3
add
add
call
and
mov
cmp
pop
cld
sub
call
adc
jbe
loope
testl
add
mov
and
dec
addb
mov
ljmp
push
jge
xchg
int3
push
pop
xchg
int3
insb
or
repz
jo
call
mov
leave
ja
mov
fists
repnz
incl
push
mov
ds
sub
pusha
rcrl
divl
jp
sar
movsb
mov
sbb
inc
in
adc
fisttpl
cli
jl
repnz
xchg
mov
push
push
mov
imulb
dec
std
ljmp
or
shlb
or
decb
mov
mov
fmul
mov
or
inc
orl
pop
loope
mov
inc
lcall
jno
and
ljmp
push
push
and
cwtl
mov
mov
jp
shlb
inc
pop
pop
mov
jecxz
lcall
xchg
sbb
add
inc
dec
cmp
or
push
mov
in
loop
filds
das
sbb
or
xorl
inc
push
pop
andl
scas
sub
add
lods
pushl
lock
push
xor
ret
adc
sbb
adc
and
jne
mov
aaa
cli
inc
bnd
dec
pop
cmp
je,pt
in
push
ljmp
imul
cltd
out
shrl
or
lret
fsubrl
ret
ljmp
jnp
out
xlat
leave
cmpsl
ret
adc
xchg
push
mov
inc
enter
popa
adc
orl
xor
xchg
inc
je
pop
pop
das
pop
or
mov
lea
mov
enter
mov
fwait
pushl
and
add
aad
daa
inc
shlb
and
fisttps
inc
mov
sbb
pop
clc
jmp
out
pushf
push
add
sbb
shr
scas
ret
mov
rcr
clc
mov
sbb
mov
es
mov
pushl
inc
inc
xor
hlt
inc
movsl
sti
outsl
fwait
mov
inc
aam
lcall
cmpsl
dec
andb
iret
scas
les
inc
scas
iret
jnp
ljmp
mov
int
das
pop
mov
aaa
loope
daa
sbb
mov
mov
fnstsw
pushl
loop
repz
sub
jbe
push
in
cli
adc
mov
rcr
inc
std
and
addr16
test
inc
xlat
js
incl
loope
mov
arpl
testl
ljmp
mov
or
in
push
iret
xchg
push
xor
inc
aaa
ret
aad
add
sahf
mov
ja
jge
mov
inc
les
sub
inc
popl
lds
sub
pop
arpl
cmp
fistpl
sar
pop
xchg
sbb
pop
mov
fcmovne
andl
loope
push
mov
jp
pop
sub
fistpll
jbe
adc
aad
adc
fwait
xchg
push
mov
mov
and
jp
lock
xorl
pop
mov
mov
aad
or
mov
inc
not
pusha
xchg
jmp
jns
ret
adc
in
and
stos
cmp
push
popf
or
data16
inc
ljmp
nop
arpl
add
dec
jns,pn
ret
pop
mov
ljmp
dec
mov
div
les
lods
push
xchg
aas
sbb
xor
out
cmpsb
shrb
aas
cltd
aaa
xor
loop
in
or
mov
popa
daa
jg
jo
sub
int
ror
fstpl
lock
dec
aas
xchg
test
push
cltd
fmuls
push
movsb
jl
repnz
sahf
push
test
mov
ds
decl
incl
add
sbb
rclb
lcall
fildl
push
xor
xor
ljmp
add
pop
subl
imul
sarl
mov
mov
mov
rcrb
lock
xor
enter
inc
jae
fucom
push
movsl
adc
lds
call
movsl
and
mov
das
mov
jle
decl
mov
mov
hlt
movsl
sbb
adc
mov
xchg
mov
xchg
test
xor
mov
call
mov
dec
or
jbe
lahf
dec
xchg
xor
scas
mov
sub
iret
in
incl
shl
pop
fsub
lret
mov
out
push
adc
divb
mov
daa
add
jno
jnp
dec
lret
xor
add
xchg
and
seta
ljmp
outsl
clc
ja
ret
call
insl
bound
loop
adc
movsl
shll
pusha
fldcw
push
int
ljmp
dec
repnz
or
stos
fdivrs
mov
test
movsl
push
mov
in
mov
mov
pushl
or
sbb
stos
ja
adc
int
push
add
jge
ss
jg
bound
lahf
push
lcall
idivl
mov
push
subb
test
imul
cli
loop
jl
lcall
call
jecxz
insb
mov
loopne
popa
cmpsl
and
jmp
mov
rcrb
xchg
jge
push
outsl
inc
les
cmp
arpl
in
adc
incl
jecxz
cmp
pop
fisubl
dec
jmp
lcall
sbb
orl
xchg
xor
decl
pop
sbb
rolb
sub
dec
test
fldpi
fucomip
loopne
push
cli
cmp
jae
sub
mov
adc
push
or
clc
sub
cmpsl
fucom
dec
mov
push
or
cwtl
out
cwtl
lods
loop
leave
adc
adc
cwtl
pop
daa
xchg
sbb
cs
sbb
inc
pushl
jle
rorb
xorl
mov
in
pop
insl
aam
pop
adc
ljmp
shlb
add
dec
inc
lods
daa
insl
sub
inc
inc
fistpll
or
adc
hlt
add
in
sar
incl
adc
imul
daa
lahf
hlt
pop
movsb
mov
jmp
into
fst
pop
mov
cmp
test
dec
cmp
sbb
xchg
or
jp
jge
jg
out
mov
int
fcmovb
outsl
rorb
cmp
ljmp
mov
dec
mov
push
xchg
add
dec
or
fidivs
int
scas
add
cmp
xchg
jns
xor
adc
xchg
xchg
lods
loopne
in
xchg
xor
ss
int3
or
and
popa
out
ljmp
cli
xor
out
dec
lods
jg
ja
add
inc
sub
dec
mov
jl
jno
roll
add
call
and
xor
inc
jg
xor
movsl
and
push
scas
ljmp
pushl
push
push
jge
sub
loopne
jns
dec
cmpsb
rcrl
cmp
jge
add
mov
pop
push
in
jecxz
adc
mov
jmp
cli
cli
mov
inc
push
adc
dec
hlt
jg
xchg
cmp
sub
push
outsb
sbb
mov
mov
cwtl
js
xchg
inc
dec
cld
pop
jb
movsl
push
dec
arpl
mov
inc
hlt
jg
call
xor
lahf
xchg
add
mov
mov
mov
and
mov
jg
subb
cmp
ja
push
fs
mov
pushf
cld
push
std
imul
movsl
pop
cli
add
popf
jno
push
popf
mov
pop
pop
add
decl
cld
cs
xchg
cmp
jl
sahf
ss
dec
xchg
adc
ja
jmp
cmp
jmp
inc
mov
sub
in
push
lcall
xchg
xchg
xchg
pop
imul
jecxz
aas
ja
ret
cmp
jbe
lods
cmp
sbb
insb
or
mov
mov
push
int3
in
lcall
mov
jmp
jne
inc
add
sbb
into
jmp
pop
repz
mov
jp
cli
sbb
inc
cmc
pop
fisubs
pop
ljmp
ds
ljmp
jo
dec
and
add
mov
popf
xor
mov
jge
push
pop
pop
dec
mov
popf
fimull
jb
imul
jg
outsl
fs
sarl
leave
popf
in
int3
sub
or
xchg
dec
xchg
cli
call
test
add
in
call
bswap
dec
loope
dec
mov
sti
sub
xor
into
ds
mov
xor
sub
xchg
outsb
push
notl
mull
cmp
call
leave
mov
ds
rorl
pop
int3
cmp
filds
add
push
cmp
inc
push
jne
lods
loope
xchg
std
dec
or
test
addr16
mov
or
addr16
loope
fldt
outsl
push
sbb
xchg
jbe
test
cwtl
mov
pop
pop
clc
jg
add
loope
int3
enter
call
mov
call
add
cs
sub
or
rcl
sub
imul
lcall
cltd
add
insl
loop
popa
xchg
stos
sub
ljmp
add
ljmp
inc
cld
mov
add
cmp
fimuls
add
loop
dec
out
out
popf
jne
push
mov
adc
bound
sbb
scas
in
add
loop
daa
push
mov
lods
inc
lcall
stos
ror
push
aaa
in
sbb
in
xor
jmp
mov
mov
es
outsl
loope
in
fisttps
dec
push
shlb
scas
jmp
add
sar
jg
and
adc
rcrl
xchg
xchg
push
xchg
mov
scas
push
les
call
mov
sub
aaa
sub
cmp
je
mov
rclb
inc
push
fsubs
out
mov
rorb
fwait
rclb
lahf
ljmp
out
cltd
mov
jbe
inc
push
arpl
dec
pop
sub
shll
jg
fwait
sbbl
add
insb
lret
jmp
jb
mov
lds
jae
add
arpl
add
jns
jp
pushl
and
mov
scas
ds
adc
mov
push
daa
pop
inc
add
imul
in
xor
int3
push
lret
int3
inc
sub
shlb
push
pushf
fwait
sub
cld
mov
imul
xchg
pop
push
inc
cs
pop
cmp
call
pushf
dec
mov
and
pop
push
fnstcw
in
xor
mov
call
dec
and
sub
jnp
jb
lea
xor
xor
pop
mov
outsl
lret
inc
mov
xor
xor
nop
cli
hlt
xor
jle
fdivl
cltd
lahf
xchg
sbb
mov
repnz
inc
xchg
mov
call
loope
mulb
outsl
xchg
jnp
mov
mov
jp
ret
ds
clc
lcall
cmp
pop
movsl
mov
push
mov
ds
jmp
fldl
outsb
add
push
xchg
mov
andl
int3
push
outsb
roll
ss
or
sar
ljmp
xchg
sarl
xchg
pop
rorl
stos
xor
cmp
xchg
xchg
jg
fisttps
and
jne
mov
icebp
xchg
cs
jle
cmp
jl
iret
clc
mov
add
imul
fst
arpl
subl
cmp
push
int
cmp
scas
mov
cmp
inc
mov
xor
loopne
xchg
scas
mov
xor
sbb
cmc
jmp
int3
stc
or
mov
inc
mov
inc
rorl
add
cmp
fnstsw
icebp
pop
icebp
icebp
mov
in
mov
jo
mov
xor
inc
cmpsb
inc
mov
mov
shll
aas
incl
pop
popa
xchg
lret
jnp
or
scas
nop
xor
lcall
andl
cmpsl
testb
ljmp
repz
or
mov
aad
lods
negl
jecxz
jge
test
jge
jle
inc
arpl
inc
adc
icebp
lods
decl
push
out
jecxz
xor
icebp
push
jbe
dec
jg
decl
jg
sbb
js
cld
mov
mov
decl
push
mov
dec
cmc
mov
mov
lods
ljmp
pop
shrl
mov
add
fists
cwtl
orl
lock
popf
inc
inc
pop
adc
cmp
or
xlat
mov
jmp
ljmp
shlb
dec
scas
push
jo
test
adcb
cmp
in
dec
adcb
neg
or
incl
jl
push
jo
sub
idivb
and
and
insl
sbb
stos
arpl
lcall
inc
repz
inc
testl
mov
and
clc
mov
stos
scas
xchg
or
xchg
ret
leave
rcrb
sub
mov
mov
jle
lock
add
sti
mov
jne
jg
cwtl
inc
jo
repz
jbe
in
in
mov
xchg
mov
lods
sub
mov
dec
std
call
fnsave
adc
test
inc
sbb
sub
xor
fnstenv
call
call
mov
xor
xorb
xlat
loopne
pop
lods
movsl
out
pusha
and
std
call
pusha
addr16
pop
loopne
push
inc
addr16
scas
mov
test
mull
jb
mov
xchg
and
lea
mov
jns
mov
aaa
clc
in
sub
xchg
xchg
dec
cmp
fisubs
jl
mov
jecxz
mov
mov
shr
add
mov
sub
dec
sub
pop
daa
popf
call
loope
xchg
fndisi(8087
adc
add
cltd
addr16
pop
push
dec
ljmp
gs
mov
xchg
call
add
sti
js
jl
jnp
inc
cmp
jg
call
loope
sub
loop
call
add
mov
and
das
jns
enter
mov
testb
xlat
cmc
sbb
sbb
daa
mov
incl
mov
xchg
and
les
lea
cmp
add
leave
cwtl
ds
repz
ja
or
shl
lods
cmpb
mov
sbb
ds
popa
dec
xchg
es
in
fdivrs
mov
and
dec
xchg
xor
mov
clc
jg
lea
test
decl
dec
xor
mov
into
xchg
sbb
int
push
int
movsl
decl
lret
popa
fldcw
mov
out
xchg
add
arpl
mov
decb
cwtl
je
mov
insb
pop
adc
mov
dec
cmp
pop
std
call
mov
les
out
sbb
xor
cmp
pop
mov
movsl
decl
dec
add
xchg
imul
and
inc
xor
int
fstpl
decl
mov
out
pop
mov
push
lods
mov
dec
mov
notb
addr16
imull
outsl
add
inc
xchg
rcrl
divl
out
jno
loop
dec
lea
scas
imul
lods
pop
in
mov
pop
or
call
and
or
js
test
push
rcl
getsec
imul
jo
lcall
add
push
sub
xchg
jne
movsl
dec
lods
xchg
leave
test
pop
adc
cltd
fadds
jge
add
sti
std
mov
rclb
push
fisubrs
or
and
testb
ljmp
cmc
outsl
cmp
mov
ror
xchg
push
adcb
pushl
push
fwait
sub
jno
push
jne
iret
sbb
aaa
lahf
movsl
ja
pushf
push
es
mov
dec
cmpsb
or
int3
or
push
sbb
jb
ja
inc
in
jo
loop
mov
iret
mov
enter
imul
imulb
cmp
or
incb
pushf
es
repnz
adc
cltd
xor
int3
jg
call
rcll
and
out
xchg
pushf
xchg
js
cmp
pop
sbb
icebp
pop
sahf
idiv
adc
ljmp
sbb
sub
adc
test
mov
jl
cltd
push
cmp
push
cmpsb
cmp
les
lock
mov
jle
dec
sti
dec
dec
xchg
mov
or
mov
call
ret
sbb
notb
pop
imul
fs
pop
test
ljmp
xchg
outsl
add
sub
decl
jo
sub
mov
int
adc
sarb
push
jl
mov
das
cmc
or
dec
mov
sti
pushf
je
inc
ret
sbb
aam
inc
std
jmp
xor
inc
test
xchg
nop
lods
cld
in
sar
cli
lea
or
and
jl
push
jg
mov
pop
lret
sbb
inc
sub
js
imul
lock
xor
loopne
add
xor
decl
cld
in
shrb
dec
std
rol
dec
jnp
stos
mov
mov
in
mov
mov
cltd
push
xchg
adcl
xlat
sub
lret
mul
pushl
int
dec
addr16
jle
xorb
rclb
es
mov
dec
ror
aam
lods
movsb
popa
sub
leave
xlat
lods
out
fimuls
xchg
xchg
sar
pushl
ret
push
pop
adc
test
test
enter
xchg
sub
add
pop
in
inc
lret
dec
lea
pushl
call
xorl
mov
cmp
sbb
lock
dec
addb
pushl
sbb
scas
xchg
sti
xor
cmp
scas
sbb
outsb
cmpsl
stos
imul
ret
mov
push
fisttpll
jmp
jbe
xchg
mov
aaa
clc
imul
dec
pusha
out
mov
pop
jl
sbb
push
ds
sbb
cmc
scas
jp
push
je
stos
mov
das
call
inc
loopne
jle
not
push
sub
mov
jmp
pop
xor
push
in
or
jmp
push
repz
shrb
jbe
punpckhdq
aam
mov
adc
fcos
lods
cmp
adc
adc
fcoml
jmp
and
push
or
andl
in
idiv
leave
sbb
shrl
sbb
jl
ljmp
fistl
jp
fcmovb
pop
mov
mov
popa
pusha
add
xor
stos
in
loop
and
sub
sub
decl
into
mov
xchg
inc
jbe
int3
in
mov
dec
mov
pop
mov
aas
cmc
incl
add
stc
fmull
lcall
nop
cmp
sbbb
scas
or
cwtl
inc
aad
decl
pushl
push
push
cli
lods
mov
mov
cmp
pusha
mov
or
mov
mov
xchg
clc
es
fldl
sbb
nop
mov
movsb
ret
sbb
addl
dec
jge
ss
push
pushl
sarb
jne
test
pop
in
subb
les
mov
sarb
scas
add
dec
dec
popa
mov
rcpps
lahf
mov
cmpsl
dec
mov
dec
jmp
cmp
loope
jno
test
shrl
outsl
icebp
fildl
cmc
lods
in
lcall
data16
pop
cmc
mov
roll
out
inc
mov
xor
cmp
ljmp
add
aad
cmp
call
rcr
inc
std
pop
mov
test
clc
inc
lds
out
jae
jecxz
xor
push
sbb
push
outsl
ljmp
in
sub
shll
or
mov
shr
popf
test
adc
pop
mov
cmpsl
andb
pusha
cltd
dec
mov
loope
mov
mov
mov
das
nop
decb
ljmp
iret
adc
dec
mov
mov
inc
gs
and
fdivrs
sbb
mov
cmp
and
daa
das
cmpsb
xchg
add
xchg
sbb
in
movsb
sub
test
sar
sub
and
int
inc
lahf
clc
in
dec
in
adc
test
movsb
adc
and
insl
push
push
xchg
mov
xchg
xchg
clc
push
pop
and
sbbb
mov
mov
cmp
add
jns
or
in
pop
cli
dec
xchg
ret
cmc
push
repnz
ds
fildll
sub
cmpsl
es
sbb
repnz
xchg
shrl
mov
mov
cmp
lds
movsb
push
dec
pop
push
mov
sub
mov
mov
xchg
outsb
push
sbb
xor
cmpl
pushf
pop
adc
dec
cld
inc
sbb
and
xor
sti
or
push
movsl
scas
mov
std
mov
or
movsb
bound
dec
inc
in
out
sub
test
call
pusha
mov
cmpsl
dec
mov
jl
fcoms
ljmp
cmc
dec
sub
mov
jno
cmp
std
add
sti
xor
mov
ljmp
scas
mov
pop
or
sbb
faddl
ljmp
iret
fstps
int3
xchg
xchg
xor
pop
dec
aam
mov
xchg
jmp
jmp
mov
incl
aas
icebp
hlt
std
sahf
inc
hlt
inc
sub
dec
ficompl
mov
mov
sub
call
incl
mov
out
push
push
addr16
pop
jl
popf
mov
xor
adc
lock
mov
adc
push
push
xchg
or
mov
inc
jg
jecxz
add
push
jge
repnz
pop
xor
and
lods
adc
pop
dec
jbe
sub
clc
call
lea
sbb
fdivr
xor
mul
xchg
sbb
jecxz
jp
je
ds
test
gs
test
jmp
hlt
in
or
dec
das
xchg
hlt
loop
lock
sahf
out
sub
incl
loope
aas
fidivl
sub
adc
stc
pop
push
stos
mov
out
mov
pop
mov
push
and
push
dec
cwtl
pop
cli
mov
into
jo
mov
fcmovnu
add
rol
in
lret
test
test
fld1
mov
sbb
std
mov
mov
call
popf
cmp
lahf
xor
jne
test
test
call
xor
out
jge
pop
movsl
ljmp
nop
cmp
addr16
loop
dec
jmp
nop
mov
jo
dec
jnp
mov
dec
xchg
popf
sub
out
add
dec
add
cld
rorb
dec
lret
pushl
icebp
pop
int
and
aad
mov
inc
das
inc
test
loope
in
mov
jmp
sub
das
lret
xor
pop
subl
stos
out
mov
sar
push
xchg
shrl
jne
cmp
outsl
fsubrl
jge
in
mov
out
adc
pushl
xchg
sub
insl
roll
pop
les
std
rorb
int3
jnp
push
add
insb
dec
add
push
loopne
nop
cmpsl
mov
popf
adc
dec
outsl
std
les
xchg
cwtl
adc
and
pop
shr
bound
call
fstl
fwait
out
mov
scas
mov
icebp
sub
decb
cmc
push
mov
fistpll
cltd
repz
lods
inc
outsl
inc
sub
movsb
cld
div
pusha
dec
push
js
fsubrs
push
jb
sub
xchg
mov
rorl
rcll
adc
out
and
aaa
std
aad
xchg
jecxz
aam
cmp
rsm
sbb
pusha
lds
or
jg
jmp
jl
roll
dec
push
dec
cmpsb
adc
dec
sbb
or
ljmp
push
stos
or
mov
popa
sub
mov
dec
add
test
inc
inc
fstpt
iret
cmp
push
or
pushf
add
mov
jmp
mov
jle
cmc
imul
push
dec
fsubrs
lahf
dec
sysret
xchg
add
sar
daa
aad
fsubl
rolb
lcall
cli
insb
mov
addr16
test
or
filds
or
and
mov
add
incl
icebp
movsl
repz
or
pop
xlat
cmp
ss
mov
jmp
sbb
sub
cmp
jmp
decl
sbb
push
lods
or
push
cmp
sar
jns
incl
jg
mov
pushf
dec
cmp
pop
sub
jecxz
mov
mov
jmp
in
in
out
and
ret
and
dec
adc
lret
mov
mov
das
lds
xchg
mov
pusha
lods
in
repz
arpl
int
jmp
roll
cmp
push
clc
test
mov
sub
xchg
pop
stc
out
jbe
jp
add
xchg
pop
mov
mov
insb
jp
incl
das
cld
push
sbb
daa
enter
xchg
mov
jecxz
in
call
push
outsl
adc
ja
dec
add
mov
clc
incl
add
ficoml
jns
sub
cmp
inc
scas
xchg
outsb
mov
lret
int3
fbstp
fmuls
or
jecxz
fsubs
hlt
push
aam
push
inc
cmp
mov
call
dec
pop
xor
je
inc
ja
dec
push
jo
cmp
ljmp
movsb
mov
cmp
jecxz
into
cs
mov
call
rol
and
mov
push
pusha
repnz
repz
xor
outsl
std
xor
mov
imul
pcmpeqd
cmpsl
gs
or
pop
xchg
and
call
jb
int3
daa
and
add
ljmp
mov
lock
pop
clc
ljmp
cmp
stos
fisubl
xchg
js
outsl
sub
xor
mov
fdivl
aas
scas
adc
in
cmp
mov
lcall
jbe
lds
dec
cwtl
js
or
push
es
xchg
push
fsubrp
sub
mov
cmp
and
mov
stc
shlb
mov
adc
push
loopne
pop
pop
adc
popa
mov
mov
xor
pop
loop
mov
jp
cmc
adc
pop
or
out
xor
sbb
jmp
sti
pop
dec
sbb
mov
and
jo
out
push
nop
inc
incl
enter
mov
jns
lret
cmp
mov
sub
and
cmp
js
pop
xor
cmp
jns
push
mov
stc
fistps
cmp
test
jo
push
imul
aam
dec
xchg
icebp
xchg
push
idiv
lcall
fisubl
push
ja
mov
jl
mov
lea
adc
fisubrl
xchg
nop
jmp
xchg
xor
mov
fwait
mov
mov
adc
inc
sahf
imul
outsb
inc
jno
push
push
into
lcall
pop
and
and
scas
cmp
dec
mov
ja
add
ffree
xchg
ljmp
jo
aam
adc
fs
ds
into
in
pop
and
and
inc
dec
cwtl
ljmp
lock
xchg
cmpsb
icebp
lcall
mov
int
inc
mov
call
mov
dec
push
repnz
push
fbld
xchg
ds
or
ror
pop
dec
outsb
and
jmp
add
mov
call
rcl
cmp
mov
movsl
sub
incl
repnz
sub
push
sti
outsb
jo
xchg
nop
and
dec
sub
subb
inc
mov
ret
arpl
xor
inc
lcall
dec
filds
cmp
inc
scas
xchg
dec
mov
movsl
rorl
es
or
call
cs
imul
imul
imul
cmpsb
lods
jecxz
jle
icebp
ds
jmp
arpl
push
loopne,pn
cmp
pop
sbb
insl
xor
jmp
lcall
dec
cli
push
call
fwait
add
add
sub
fidivrs
aaa
pop
shll
xor
mov
decl
and
jp
push
mov
add
mov
mov
pushl
pop
pushf
mov
ljmp
jns
lods
lock
xor
jno
xor
aad
and
sbb
add
xchg
arpl
ja
imul
mov
mov
xchg
push
bound
or
mov
fiaddl
lcall
fisttpl
ljmp
and
pop
adc
ss
adc
mov
ja
aad
adc
cmpsl
mov
ret
push
repnz
dec
adc
lret
push
test
aad
ja
stos
xor
std
mov
std
decl
mov
mov
call
mov
lods
xchg
and
mov
test
jg
insb
arpl
push
push
out
xchg
add
mov
in
decl
fbld
xchg
sbb
jp
into
setnp
cmp
fmul
rcrl
mov
andb
cmp
ret
adc
out
jmp
in
pop
adc
sbb
inc
repz
push
outsl
leave
push
and
jmp
pop
mov
dec
dec
or
out
cltd
push
push
jnp
and
pop
out
xor
fldt
movsb
jo
scas
pop
lcall
ds
in
mov
mov
xlat
ljmp
gs
lcall
std
ret
pop
add
xor
mov
and
mov
sub
jg
into
mov
and
pop
adc
test
orb
adc
repz
shlb
add
add
mov
decl
adc
push
mov
js
je
or
inc
sub
mov
adc
test
shll
sub
sub
lea
aas
outsb
xchg
imul
pop
arpl
js
push
push
xor
xchg
enter
je
mov
cmp
loop
add
push
lods
mov
push
xchg
lea
cld
mov
mov
sbb
xchg
sub
xchg
sets
push
push
cmp
sarl
fwait
mov
cwtl
out
outsb
movlps
jecxz
xchg
pusha
inc
aaa
add
or
jmp
jge
in
fbstp
and
cmp
adc
int
lea
call
sarb
sub
xchg
adc
or
mov
add
mov
adc
andb
sbb
jg
incl
mov
mov
lods
lods
sbb
mov
outsl
incl
dec
lahf
push
xchg
in
repz
dec
dec
or
sub
adc
icebp
push
jno
movsl
inc
jg
call
popa
xchg
push
inc
dec
in
pusha
addl
pop
les
out
mov
sbb
mov
lcall
mov
cmp
lcall
jnp
and
lcall
inc
adc
sub
xorl
jo
loope
mov
adc
aaa
loopne
or
aam
les
arpl
or
pop
cltd
push
mov
ljmp
dec
mov
lods
jns
in
pusha
stos
dec
xchg
sub
dec
pushl
cli
jg
sub
test
sti
test
push
nop
popf
push
sbb
lcall
out
mov
xchg
in
xchg
or
int
sbb
lret
lea
sub
mov
xor
adc
cmc
xor
jo
xor
ljmp
test
mov
sarl
sbb
mov
fmuls
xor
pcmpeqb
and
mov
mov
and
pop
push
add
dec
inc
pop
inc
scas
nop
loopne
aad
fldt
out
sub
dec
and
adc
mov
shrb
fildll
dec
jg
xor
cli
stos
test
mov
rclb
and
nop
add
and
xor
cmpsl
adc
mov
fs
and
pushl
ficoml
pop
push
sbb
xor
push
mov
mov
mov
or
jmp
jle
andl
and
pop
mov
stos
lahf
std
call
dec
push
ret
xor
std
mov
ja
pop
dec
inc
dec
jg
jae
stos
jmp
jb
in
insl
cs
lcall
std
pop
mov
in
pop
popf
jmp
ret
mov
outsl
mov
call
imul
push
test
mov
lds
ljmp
xchg
sbb
lret
push
jmp
fnstenv
add
inc
ret
clc
pushl
jle
stos
push
push
add
sub
idivl
ss
lcall
push
add
mov
insb
popa
cs
decb
cli
pop
aam
xchg
mov
pusha
jno
std
inc
mov
mov
stos
call
ret
dec
xor
bound
push
ljmp
in
mov
jbe
cmp
mov
jmp
data16
mov
stos
adc
stos
add
or
test
pop
mov
clc
pop
push
popa
mov
rol
pop
clc
fildll
jnp
adc
mov
xchg
or
pusha
loope
idiv
ljmp
enter
insb
stos
inc
roll
das
or
cmc
lods
mov
fmuls
movd
cmpsl
pop
add
gs
pop
xor
dec
ret
daa
ja
pushl
stos
push
aaa
aaa
hlt
rcrl
adc
lcall
lcall
push
outsl
popa
jl
cmpsb
pusha
pop
mov
aad
and
xchg
sub
lcall
mov
lods
out
xchg
jle
loopne
and
mov
sbb
mov
call
rcrl
cmp
fnstenv
xor
or
mov
jns
scas
stos
enter
jg
je
push
mov
push
in
or
push
stos
pop
cli
ret
imul
gs
loope
mov
aas
outsl
orb
std
xor
mov
pop
cwtl
xchg
decl
std
loope
jnp
divb
mov
insb
insl
jg
aad
and
leave
xchg
pop
mov
xchg
mov
subl
jo
rorb
rclb
shll
dec
lcall
push
or
into
pop
sbb
js
in
cs
mov
stc
dec
aam
mov
add
imul
jp
sbb
add
lret
call
daa
cli
out
fsubl
rolb
test
jns
jp
push
stc
push
pop
pop
repz
or
sbb
or
cli
mov
add
sbb
lcall
cmp
leave
divl
sbb
addr16
or
inc
lcall
std
decl
int
mov
sbb
daa
in
clc
dec
cmc
sbb
shrl
lea
out
jnp
ljmp
sub
jb
jg
addr16
stc
cmpsb
adc
adc
jmp
ja
jle
decl
sub
popf
jo
sub
mov
lret
add
insb
cmp
pop
cld
sub
xor
push
dec
mov
sbb
or
pop
std
ljmp
add
adc
pop
lret
test
test
jb
cmp
or
or
lcall
clc
jnp
vsubpd
xchg
fnstsw
shrl
xchg
jg
decl
sbb
pusha
scas
pop
sti
jns
pop
xor
sub
jb
sub
dec
subb
mov
jl
adc
jmp
ja
addr16
bnd
push
in
adc
incl
stc
jle
jae
pop
aad
dec
lret
iret
andl
movsl
jnp
icebp
out
rclb
data16
mov
sub
push
call
fsubrl
and
out
call
jmp
or
and
sub
pop
xchg
push
sbb
pop
jne
pop
cmp
fdivl
jnp
push
adc
xlat
xor
push
out
mov
pop
lcall
cmp
and
xor
insb
xor
scas
pop
push
cltd
pop
inc
inc
call
and
popa
and
pop
jnp
js
and
cmp
mov
call
jmp
jae
jg
loop
add
mov
sahf
pop
outsb
xchg
push
in
aam
cmp
or
int3
in
jns
je
lock
mov
gs
mov
add
and
push
adc
push
mov
push
or
jmp
pop
pop
xchg
das
cli
pop
daa
insb
pop
xchg
rorb
cli
or
or
or
call
sbb
aaa
mov
lcall
dec
pushf
and
push
mov
std
enter
push
mov
addb
call
movsl
pop
leave
nop
adc
dec
loop
dec
and
mov
test
loopne
cld
mov
in
inc
lods
cmp
dec
test
and
jbe
and
xchg
loop
cmp
nop
in
call
sub
lods
add
adc
adc
jnp
jb
mov
mov
fiadds
movsl
mov
push
cmc
xor
pop
out
jmp
in
mov
sbb
negl
andl
test
sub
xchg
cmp
stos
lds
mov
xor
mov
subl
call
test
in
cwtl
bound
incl
add
stc
add
push
ds
ds
sub
scas
cli
popa
enter
cmp
inc
mov
aam
movsl
cmpsl
mov
imul
dec
arpl
dec
add
sub
call
addl
mulb
add
dec
xchg
cwtl
jne
inc
lret
push
test
cmp
pushl
dec
fwait
sub
repz
cli
shlb
inc
xchg
or
pop
push
cmp
mov
pushl
stos
push
xchg
sbb
ds
dec
int3
movsl
ror
xor
jge
out
ret
inc
outsl
or
pop
mov
sub
outsl
fxch
xchg
je
jg
pushl
fcmovnb
mov
loop
and
roll
jno
test
sarb
test
outsb
fists
mov
les
rolb
lock
dec
out
lds
cli
jg
inc
loop
dec
sub
xorl
mov
sbb
iret
jecxz
xchg
shlb
lret
rcll
push
imul
daa
pop
leave
jbe
lods
push
cmp
inc
pop
outsl
sub
push
repz
adc
add
sbb
stos
loope
scas
cld
pushl
mov
incb
dec
adc
mov
fsub
cs
mov
hlt
adc
fs
mov
inc
xchg
push
bound
xchg
add
inc
iret
or
ret
cld
incl
xor
gs
ret
push
xor
push
add
mov
inc
incl
add
mov
stos
movsb
jb
fcomi
mov
or
jg
divb
pop
ja
notb
mov
decl
data16
and
and
test
jmp
in
sahf
inc
rclb
mov
test
jecxz
call
push
movsl
cwtl
hlt
fisubrs
xor
xor
xlat
movsb
ss
sub
push
icebp
lahf
pushl
cli
dec
cmp
or
jmp
insl
push
mov
jg
adc
adcl
call
mov
push
pop
mov
bound
sub
stos
pop
hlt
push
loope
icebp
and
cli
xchg
imul
jecxz
int3
loop
or
sbb
jmp
orb
loope
pushl
xchg
jb
ja
data16
sub
loope
lea
sub
push
mov
sbb
jg
xchg
inc
nop
add
push
mov
enter
test
mov
sub
xor
outsl
icebp
mov
neg
or
out
push
lea
clc
mov
int
jae
xor
lock
xchg
call
mov
shl
xchg
pop
xor
mov
in
adc
es
pop
inc
and
aas
push
mov
aas
popa
imul
mov
ljmp
or
adc
and
dec
jle
pop
cld
xchg
add
jns
aaa
movsb
fiaddl
call
in
xchg
xor
jo
inc
aas
dec
and
push
cmc
loope
push
xor
fcomps
dec
cmp
inc
add
icebp
push
cmp
cltd
pop
inc
inc
fdivrs
ror
fnsave
xor
nop
dec
push
push
push
ja
inc
or
mov
or
inc
jecxz
or
dec
inc
add
call
cmp
sub
push
lods
sbb
push
loope
sub
fisttps
xchg
push
lret
insl
fsubrl
hlt
incl
xor
fcom
rorl
mov
mov
mov
push
inc
pop
add
jb
mov
cmp
dec
jnp
clc
js
inc
mov
pop
xchg
mov
pop
loope
mov
loope
scas
loope
or
and
call
loope
fnsave
cmp
add
dec
cwtl
shlb
push
popf
les
lods
mov
cmp
pop
adc
dec
jle
mov
or
push
ja
clc
addr16
jmp
je
mov
push
adc
aas
sti
cltd
and
mov
sbb
cltd
push
xchg
in
repz
pop
pusha
add
xlat
xor
int3
fisttpl
add
insl
je
repz
jg
sbb
lds
cwtl
mov
xor
mov
data16
jge
ds
testl
mov
dec
shrl
flds
mov
lock
loopne
loopne
jg
iret
mov
mov
push
insb
out
sub
data16
jae
pop
mov
xor
js
hlt
aas
mov
stos
mov
mov
decl
cld
rcr
daa
jmp
das
pop
jb
lds
addb
xor
pushl
ljmp
pop
mov
and
push
inc
dec
cli
add
pop
adc
lds
aaa
pusha
fcoml
and
popa
test
dec
lret
jge
fadd
pop
dec
addr16
movb
inc
rclb
out
pushf
incl
add
sub
dec
lods
cld
jp
sbb
call
ljmp
cmpl
fs
movsl
mov
jae
stos
xchg
daa
pop
mov
loopne
mov
leave
jmp
loope
adc
into
je
sub
inc
mov
movsb
push
and
jmp
stos
or
adc
jnp
or
subl
jmp
add
inc
adc
xchg
arpl
leave
cmpsb
mov
adc
mov
rcll
rclb
cmp
flds
fptan
xchg
js
xorps
sbb
pop
enter
jmp
or
mov
in
pop
and
lock
xchg
or
cmpsb
mov
or
or
and
rcl
fildll
mov
mov
adc
mov
pop
or
cmp
jne
push
rcl
or
outsl
lcall
dec
or
mov
push
loope
jg
cmp
scas
sbb
xchg
sbb
int3
sahf
mov
cmp
jg
incl
cmp
and
jg
outsb
imul
cld
incl
ljmp
pushf
mov
ss
clc
mov
mov
push
daa
jno
daa
into
sahf
push
jns
pusha
shll
mov
cmp
ljmp
xor
ret
insl
mov
mulb
lock
mov
test
test
push
ljmp
bextr
mov
repnz
addb
jmp
sbb
lahf
ss
imul
iret
inc
dec
pop
ror
sbb
mov
lods
fdivrl
push
mov
fwait
int
icebp
js
jle
sub
cwtl
lods
imul
jmp
call
mov
xor
push
xchg
scas
pop
loopne
mov
jle
in
push
push
cmp
call
call
cmp
pop
xchg
fldl
cmp
outsb
loop
scas
ljmp
mov
push
mov
xchg
rorb
xor
sbb
or
xchg
pop
cli
incl
mov
mov
adc
cmp
or
jae
dec
xchg
xchg
clc
in
in
fdivrl
sub
jns
xchg
push
test
mov
fstp
mov
sti
add
push
cmc
das
xchg
sahf
fstpt
adc
decl
fdivs
pop
inc
lods
pop
repnz
push
into
mov
mov
push
and
outsl
jmp
subb
decb
mov
pop
sub
fwait
and
cmp
xchg
push
sbb
pop
sahf
repz
jge
mov
mov
ffreep
push
mov
mov
mov
fmul
pop
cmp
push
daa
mov
test
add
cmp
mov
and
leave
mov
adc
xchg
jb
sbb
test
das
prefetch
mov
hlt
call
adc
into
lods
mov
mov
lods
pop
xor
iret
pop
jb
push
xchg
jge
push
push
mov
push
and
pop
xor
dec
lcall
popf
ror
pusha
xor
add
mov
mov
mov
ljmp
or
lds
sbb
popa
sub
sar
cld
call
movsl
jg
add
lea
outsb
pop
shl
and
and
fdivp
sub
cltd
scas
sub
cltd
adc
push
xor
movsl
push
imul
std
mov
es
xchg
and
into
cmp
jnp
or
inc
push
hlt
sahf
inc
insb
les
pop
js
shr
out
daa
push
rcl
stos
sbb
dec
sub
jg
test
repz
jg
sbb
dec
adc
es
jo
push
push
jns
imul
test
andl
pop
sub
cmp
push
sub
jl
das
es
rorl
ud0
pop
call
out
pop
sbb
enter
mov
loope
ret
or
movsl
es
mov
hlt
pop
add
pop
outsb
xlat
mov
inc
and
repz
inc
cld
dec
xor
out
pushl
add
lret
test
pop
lds
cli
jmp
inc
push
test
idivb
xchg
mov
mov
jmp
mov
cli
imul
mov
repnz
xchg
cmp
dec
ret
test
sub
jo
mov
mov
inc
jp
mov
mov
test
xor
inc
adc
cmp
ret
push
repnz
test
je
xor
rcrl
ljmp
out
inc
cli
cli
pop
pop
mov
xor
scas
arpl
iret
out
and
test
lods
cmp
sub
loop
jae
pop
add
mov
pushf
les
and
fisubs
push
inc
call
push
ds
pop
adc
or
dec
cmc
mov
or
fwait
push
mov
ljmp
push
rorl
sub
stos
mov
pop
stos
dec
fcos
lcall
jo
add
lods
jle
and
dec
ljmp
rcrb
outsl
or
inc
dec
inc
inc
mov
pop
push
int
scas
pop
imul
mov
out
and
mov
loop
mov
lcall
mov
movb
lret
sub
incl
xchg
repz
sti
out
in
cmpsl
xchg
call
mov
cmpsb
lds
and
xchg
inc
push
fldl
je
fucomip
in
das
dec
stos
adc
pop
mov
mov
mov
les
mov
ret
sub
out
clc
adc
and
mov
lret
mov
loope
out
stos
cmc
jnp
dec
test
notl
jle
out
jne
fucomip
jmp
and
sbb
aas
dec
lret
adc
dec
jne
cmpb
push
lcall
sbb
mov
sbb
divb
incb
jnp
jb
mov
popa
orl
lods
cmp
jp
loop
incl
and
sbb
jge
dec
sub
add
scas
and
movl
or
iret
xchg
imulb
or
mov
sar
mov
jge
dec
pop
hlt
insb
fcoml
mov
push
lods
out
and
xchg
loope
cltd
cmpb
aas
cmp
inc
call
cmpsb
iret
inc
es
aaa
loopne
sub
out
mov
dec
je
pushf
incl
mov
dec
in
mov
icebp
xor
cmpb
push
dec
push
aad
jg
mov
insb
sbb
ror
test
mov
jbe
sarb
call
push
imull
mov
add
rol
enter
incl
push
loopne
adc
addr16
mov
mul
push
jno
lcall
pop
mov
mov
gs
adc
add
cmp
xchg
mov
sbb
or
sub
mov
nop
filds
daa
mov
sub
pusha
mov
cli
ljmp
xchg
sub
pushf
in
dec
mov
xlat
push
daa
movsbl
ljmp
daa
test
call
push
pop
push
mov
pop
lods
jecxz
rorb
jg
dec
pop
setns
cmc
lcall
push
sti
mov
int
or
daa
in
dec
xchg
cmp
inc
mov
xlat
orps
jae
xor
daa
popa
lods
jb
iret
pop
ljmp
push
pop
push
jns
out
and
push
sub
pushf
and
pushl
nop
mov
pop
nop
ss
outsl
lahf
pop
dec
jle
add
push
adc
push
das
stos
sub
add
push
inc
shll
outsl
mov
popf
cmp
cmpl
inc
lods
aaa
add
xchg
add
out
mov
aad
fstps
mov
fwait
test
int
add
das
lods
in
arpl
jae
cmp
mov
dec
mov
jae
ret
inc
cltd
jge
lods
dec
sbb
call
fwait
adc
mov
inc
mov
loopne
scas
pop
mov
lea
test
or
push
jg
or
cld
shlb
stc
das
in
adc
stc
into
dec
xchg
call
movb
add
or
cli
or
sub
out
sub
nop
int3
xchg
lcall
jg
sbb
pop
in
xchg
mov
push
jns
aas
jmp
clc
cld
out
lea
dec
in
cmp
mov
cmp
sbb
cli
xchg
pushf
push
call
sbb
push
cmpsl
pop
sub
xor
cwtl
xchg
pop
ret
jp
mov
push
sub
jg
shrl
cmp
ret
push
and
insl
jp
xchg
mov
in
dec
jne
pop
adc
xchg
in
jg
jge
xor
dec
sub
pop
add
cmp
jmp
popa
and
sub
icebp
inc
andl
cmpl
shlb
mov
mov
mov
aaa
pop
std
je
and
sbbl
cltd
cmp
dec
adc
mov
inc
push
pusha
bound
fdivs
mov
add
lahf
add
clc
pop
or
mov
mov
jmp
ret
push
jp
adc
xchg
hlt
add
dec
clc
push
cmp
ljmp
enter
cmp
repnz
stc
cmc
dec
mov
pop
ss
jg
ret
fidivrl
mov
push
sbb
jle
pop
mov
add
push
or
or
jmp
lret
mov
cmpb
dec
cmp
inc
in
add
jae
xchg
loopne
sbbl
or
cmp
mov
into
lock
mov
scas
das
decl
lcall
pop
into
out
and
xchg
xor
dec
insb
gs
push
pop
cmp
or
loopne
or
jmp
push
xchg
das
adc
lds
shrl
or
push
pop
pusha
mov
inc
sbb
enter
cli
decl
inc
xchg
je
mov
in
dec
std
mov
pushl
mov
lret
icebp
lods
fiadds
and
lock
pop
cmp
jae
push
addr16
call
push
dec
push
repnz
or
cmpsl
lods
jae
faddl
adc
sahf
cmpsb
insl
fstpt
mov
int3
and
adcl
testl
cmpsl
dec
incl
repz
in
jbe
push
ret
xchg
lea
outsl
fsubr
lcall
xchg
add
and
pop
push
lret
loop
call
push
adc
jns
push
mov
ret
mov
out
xchg
mov
sbb
iret
cltd
mov
test
xchg
add
push
in
cmp
xchg
imul
decl
cmc
outsl
dec
repz
and
cmpsl
aas
loope
or
in
push
inc
xchg
xchg
sbb
js
mov
mov
mov
decl
lcall
push
xor
push
jbe
sbb
inc
push
out
je
sbb
sub
jo
push
call
mov
adc
shl
sbb
in
into
pop
insb
mul
mov
jmp
nop
les
jp
fstps
push
sarl
or
add
clc
mov
add
imul
repnz
jecxz
mov
aam
adc
mov
jno
cmp
stos
fisttpll
mov
jae
clc
in
stc
retw
cmpsl
enter
out
mov
push
out
movsb
mov
cmp
idiv
jle
adc
pop
int
add
push
cmc
add
xchg
inc
call
call
into
shrl
mov
rolb
fidivrs
icebp
fisubs
or
daa
imul
or
fs
jg
pushf
and
xor
sub
mov
scas
xor
lds
test
das
pop
call
ror
sub
dec
lret
lds
pop
leave
pop
sub
movsb
push
xchg
cltd
mov
cmp
ret
cmp
xchg
mov
pushl
arpl
jae
enter
repnz
adc
out
sub
rcr
ja
movsb
mov
jg
cmp
scas
cwtl
xchg
mov
jmp
cld
mov
cld
adc
sbb
daa
aaa
mov
mov
cli
aaa
fdivl
jb
xchg
gs
fwait
and
mov
loop
cli
cmp
decl
mov
mov
inc
jnp
fbld
xor
enter
gs
clc
cmp
sahf
mov
adc
adc
sub
mov
insl
lock
cmp
push
aad
hlt
dec
push
add
es
leave
int3
aaa
loopne
jno
lds
lods
inc
fdivrs
outsl
pop
out
xor
insb
std
push
bound
sbb
bnd
adc
fldt
test
arpl
mov
fucomip
dec
push
in
int
cmp
xchg
mov
push
mov
outsl
jmp
cmp
push
sbb
push
adc
cmpsb
jnp,pn
push
daa
sbbb
lret
xor
into
jecxz
mov
cld
pop
dec
adcl
ljmp
cwtl
mov
pushl
dec
mov
mov
dec
mov
sbb
xor
mov
mov
push
insl
jg
subl
sarb
shlb
outsl
jge
lea
jmp
in
jge
cmc
mov
rcrb
fsubr
pop
rcrb
es
mov
lcall
inc
insl
ret
push
pop
cmp
das
push
movsl
jnp
xor
divb
cmp
out
aad
adc
push
add
mov
push
fwait
mov
mov
mov
lea
jg
shlb
mov
pop
mov
outsl
enter
mov
daa
shll
dec
les
scas
fstl
pop
mov
xchg
fistpll
pop
cmpb
cmpsl
das
xchg
pop
mov
pop
cld
or
idiv
incl
xchg
repnz
push
leave
jne
cs
sbb
mov
cli
xor
int3
imull
adc
les
push
loope
in
lcall
popa
sbb
std
xchg
adc
iret
dec
jmp
mov
lcall
aaa
dec
decl
outsl
scas
aam
push
or
je
js
and
bound
lds
sarl
sub
sbb
cmp
or
jle
dec
jp
fiaddl
daa
imul
mov
pop
pop
sub
out
adc
sbb
mov
idivl
cld
sbb
fildl
enter
jg
mov
sti
pop
push
sub
sbb
cs
rclb
enter
lcall
mov
dec
inc
mov
fstpl
cs
jnp
push
xorb
push
out
movhps
pavgb
mov
mov
rcrb
and
or
dec
or
mov
mov
push
xchg
aad
and
jnp
sbb
std
inc
pushl
cmp
xchg
mov
pop
jle
call
push
int3
test
xor
mov
loop
dec
arpl
sub
sbb
lods
dec
and
scas
fcmovne
jecxz
mov
inc
test
mov
sub
mov
shll
push
adc
mov
mov
fcompl
push
pop
pop
dec
inc
mov
add
jg
or
fldcw
jns
cli
mov
inc
loop
xchg
pushl
stc
je
dec
sbb
std
xchg
mov
push
das
push
in
pusha
add
jge
mov
push
ss
mov
cmp
add
popf
mov
lahf
add
in
dec
sbb
fimuls
pushf
mov
add
inc
call
push
in
aad
cmp
jle
aad
pop
cmp
inc
push
fnclex
aam
loop
jle
mov
data16
sbb
sub
aam
pop
cmp
mov
mov
sub
pop
push
cmp
lcall
cltd
roll
jnp
jb
mulb
nop
outsl
test
loop
sbb
stos
jnp
adc
mov
into
scas
lret
dec
ljmp
dec
bound
mov
jg
and
cmp
ljmp
les
insb
mov
testb
call
ja
in
fbld
jecxz
and
scas
pop
mov
ljmp
jge
mov
stos
push
loopne
mov
adc
jb
ljmp
cmc
fsts
or
xchg
push
lcall
icebp
cmpsb
xchg
sbb
jmp
push
lock
lock
mov
jb
cltd
sub
or
lcall
sbb
shl
cld
adc
insb
bnd
mov
jg
addr16
xchg
jle
gs
sbb
mov
adc
jp
arpl
sbb
xor
incl
repz
call
ror
push
std
movsl
ljmp
cmc
rol
sbb
pop
mov
cld
ds
daa
lds
jle
pop
in
inc
shr
push
std
add
dec
mov
ljmp
lcall
sbb
adc
add
gs
aad
lods
push
inc
gs
lock
mov
xchg
scas
pop
lret
test
mov
cmc
nop
pushf
adc
out
punpcklwd
imul
iret
and
outsb
mov
leave
repz
dec
xor
scas
or
jle
out
aaa
outsl
lcall
mov
xor
xchg
mov
add
call
cmc
and
out
cmp
xchg
iret
cld
jg
xchg
pop
push
cmp
dec
into
pop
xor
mov
add
jne
and
mov
ret
in
sti
rorb
xchg
insb
add
sbb
sysret
andl
mov
inc
jno
imul
jg
loopne
cmc
add
fnstsw
into
bound
insl
es
orb
rorb
int
sub
sarl
mov
les
xlat
xor
jecxz
daa
mov
bound
inc
and
push
stc
sub
insl
pop
xchg
or
rolb
ljmp
leave
sbb
dec
mov
pushl
pop
push
icebp
es
cmp
mov
xor
outsb
jno
ljmp
mov
pmulhw
je
shll
jmp
inc
add
lcall
jbe
mov
cwtl
sbb
cs
add
aad
stos
out
push
xor
jnp
popf
jecxz
ds
stos
insl
mov
shlb
ficomps
or
dec
cld
aam
daa
push
fsubs
jb
xchg
jg
ljmp
hlt
popf
cmp
sub
inc
imul
jg
addb
mov
fists
dec
cltd
enter
and
lods
and
adc
jp
adc
data16
add
mov
mov
ret
ret
fcomp
mov
jne
add
pop
imul
pop
and
push
inc
jno
in
push
dec
lret
xchg
cmp
and
rol
jo
popa
and
movsl
popa
rcrl
jg
push
sbb
adc
jmp
lock
jmp
call
mov
xchg
pop
call
mov
int
xor
daa
inc
xor
pop
pop
jmp
lods
cmp
sbb
mov
iret
shrb
or
jg
cmpb
lds
cmpsb
popa
or
jns
cltd
pop
inc
xor
mov
dec
jns
xchg
mov
loope
das
push
lods
jge
dec
call
or
push
fiadds
add
je
mov
jecxz
imul
cld
adc
std
dec
xor
pop
aam
sub
in
jns
mov
xchg
push
push
je
sub
decl
div
mov
lods
scas
popa
lahf
out
and
test
cmp
mov
sbb
lods
cmpsl
and
pop
jnp
pop
mov
and
mov
sbb
js
cmp
loope
xchg
mov
cltd
nop
call
xchg
lret
sub
mov
sti
push
add
shlb
mov
pushf
mov
outsl
hlt
incl
fwait
lret
jae
jge
sub
xchg
and
pop
sbb
and
clc
call
movsb
lock
jno
xchg
aad
mov
pop
mov
adc
movsl
les
fldt
push
loop
ljmp
std
outsl
dec
or
add
jecxz
xchg
xor
imul
pusha
pop
jg
incl
mov
pop
xchg
imul
mov
mov
lods
shll
sub
std
fwait
mov
push
push
mov
lds
into
testl
hlt
imul
scas
sar
lods
lcall
andb
or
retw
xor
fldlg2
push
mov
idivb
inc
sbb
mov
push
dec
ret
mov
idivb
repz
lcall
pop
lcall
dec
scas
lret
push
jg
icebp
jg
adc
pop
imul
outsb
push
fdivrl
xchg
or
lock
mov
adc
lahf
mov
aas
inc
pop
es
adcl
cltd
ret
ljmp
xor
cld
xchg
iret
shlb
scas
fwait
ret
push
das
cwtl
inc
mov
pop
cs
hlt
mov
incl
push
ljmp
out
push
adc
dec
jb
adc
mov
mov
or
sbb
call
jo
cmpsl
push
mov
and
pop
xor
sbb
mov
jp
popa
and
pushl
in
addr16
cltd
pop
dec
add
jmp
jmp
loop
loop
lock
outsb
fstpl
inc
cmp
adc
ljmp
test
mov
lahf
inc
test
outsl
adc
add
mov
jmp
mov
pop
call
lahf
dec
inc
cmp
jne
jne
push
sarb
pop
dec
add
testl
mov
xlat
or
inc
cmc
mov
push
inc
cmpsl
stc
add
call
xor
xchg
add
and
imul
repz
daa
pop
test
call
ljmp
fbstp
push
aaa
mov
mov
fs
decl
push
inc
jns
cwtl
popf
jmp
push
std
push
sarl
pushl
sbb
pushf
dec
pushf
aas
sub
add
adc
pop
dec
add
pop
mov
call
xor
sub
sbb
rcll
ljmp
ljmp
mov
mov
es
rcl
add
dec
std
cmp
fstpt
cmp
jl
xchg
pop
mov
shr
rorb
mov
jbe
loopne
xor
call
dec
push
lods
jae
mov
push
ja
sub
cmc
idiv
and
lahf
stc
mov
insb
movsl
sbb
jmp
xor
ljmp
imul
adc
ljmp
sbb
sbb
stos
cmc
arpl
adc
pop
cld
jle
and
cmp
pop
mov
mov
jb
sti
pop
xchg
mov
lcall
fnstcw
movsb
pop
fstpt
fsubrs
nop
stc
inc
cltd
rolb
mov
mov
ljmp
inc
int3
rolb
loope
pop
push
sub
sti
or
nop
and
inc
fisubl
shll
add
push
jle
clc
jecxz
stos
ss
cmpsb
cmpsb
sbb
and
incl
push
push
mov
sub
inc
pop
dec
push
or
mov
mov
leave
ljmp
jmp
mov
cmp
fcoms
sar
test
test
outsl
add
insl
jae
pushl
loop
sub
leave
loope
cmp
outsb
add
dec
test
dec
jl
mov
in
jb
push
sbb
xor
lcall
dec
fld
sti
rolb
cmp
or
mov
adc
xor
movsl
pop
sarl
push
jge
pop
loop
inc
call
mov
nop
pop
or
leave
and
pop
insb
loope
pop
hlt
ljmp
dec
mov
filds
xor
andl
mov
cld
xchg
or
stc
push
and
cmp
mov
xchg
push
mov
sahf
pushf
dec
dec
cmpsb
inc
cmc
dec
dec
test
fucomip
cmp
or
push
sbb
gs
nop
cmp
adc
pop
pop
icebp
mov
add
push
sub
addl
sbb
test
jno
lods
out
pause
and
mov
xchg
add
and
idivb
in
push
bound
insl
jg
and
xor
inc
hlt
fucomip
test
pop
cmpsb
pushf
inc
adc
sar
ljmp
adc
sub
popa
sarl
fistps
mov
xlat
decl
add
xorb
sahf
aaa
xchg
add
fisttps
dec
jnp
ljmp
in
lret
loop
dec
cmpsb
test
mov
in
push
push
mov
call
cli
pushl
push
cmp
mov
sarl
mov
mov
and
and
jg
ljmp
andb
xor
aam
sti
pmaxub
mov
sub
cs
fst
incl
loope
mov
inc
xchg
jge
clc
jmp
adc
cmp
mov
mov
pop
push
pop
fwait
push
pop
movsl
negl
std
cmp
call
mov
lahf
aam
pop
pop
faddp
int
mov
xchg
arpl
inc
adc
ljmp
xchg
cmpb
xchg
jbe
jl
inc
and
sbb
add
repnz
decl
in
pop
mov
push
iret
cmp
adc
mov
add
sub
adc
adc
out
icebp
jb
add
sub
add
shlb
jg
mov
loop
jp
push
pop
out
loop
and
call
jg
fs
movsb
add
jns
sahf
add
std
imulb
xchg
loop
gs
cli
jmp
mov
jbe
cltd
xor
cmpsl
mov
incl
mov
lods
push
push
repnz
xchg
iret
jmp
sbb
xor
jg
test
insb
push
xor
mov
inc
xchg
pop
dec
push
mov
cmp
in
ja
daa
lods
pusha
insl
stc
and
jae
mull
add
mov
jg
sub
fs
ret
js
or
push
pop
jp
adc
sbb
fildll
bound
xchg
sbb
ljmp
push
add
jecxz
push
dec
mov
push
or
cmc
sti
sub
iret
test
mov
or
incl
jbe
add
lret
push
mov
sub
fcomip
jmp
das
fildll
inc
dec
sub
xchg
fnstenv
fs
scas
scas
mov
pushl
clc
jmp
cmp
xor
hlt
push
das
and
adc
xchg
jp
push
dec
maskmovq
mull
sub
das
icebp
dec
mov
lock
mov
pop
in
inc
decl
sub
ljmp
xchg
add
mov
push
cmpsl
xchg
insl
sub
aaa
gs
hlt
jb
div
xchg
mov
lods
hlt
pop
aas
out
imul
push
mov
outsl
call
or
sub
cmpsb
scas
inc
jp
test
jmp
fs
cwtl
mov
jmp
cmpsl
xor
push
push
shrl
sbb
or
dec
push
sbb
push
lcall
sbb
mov
ljmp
cld
jmp
out
mull
lcall
push
imul
repnz
aaa
clc
mov
mov
inc
aad
lock
pop
movsl
xchg
pushl
clc
in
loop
adc
jnp
and
add
out
inc
jno
sub
push
pushl
xchg
push
pop
pop
clc
jmp
push
ljmp
inc
cmpsl
sbb
ljmp
addr16
out
push
mov
repnz
xchg
mov
fadds
jl
std
jl
pop
inc
inc
mov
inc
cmp
adc
fs
test
pop
push
or
push
adc
xchg
arpl
test
xor
pushl
cli
xchg
arpl
mov
aaa
adc
push
cmpsl
pop
int
movsl
xchg
ret
das
inc
aad
loop
and
jle
lods
addl
cli
lcall
sbb
ret
notb
jne
jl
cmpsb
xchg
push
lret
pop
rcll
fidivrl
jmp
sar
sbb
jno
cld
hlt
mov
sarl
ret
arpl
outsb
mov
xchg
jmp
inc
incb
lea
ds
mov
mov
pop
call
test
lock
leave
cmp
lcall
lds
sbb
xor
dec
int3
outsb
pop
movsl
subb
sub
xchg
cmpb
add
std
jns
xchg
int3
ja
push
clc
imul
or
mov
enter
loopne
shrb
insb
xor
arpl
or
std
into
jne
push
mov
push
scas
orl
dec
ja
jg
pop
cli
pop
out
pop
push
mov
push
loope
int3
mov
lcall
ror
lret
movsb
addr16
push
xor
or
lcall
lahf
xchg
in
mov
push
loope
xor
pushl
ret
inc
jnp
mov
ds
push
daa
stos
adc
jl
shl
out
shll
sbb
mov
push
push
incl
incl
cld
fcomps
add
adc
in
es
push
mov
sub
lcall
mov
es
stc
shlb
sub
sbb
pop
cmc
js
into
xor
std
or
es
int
aad
clc
mov
mov
jmp
fwait
leave
aam
mov
jno
mov
jmp
imul
mov
lcall
mov
lock
daa
scas
push
pop
add
inc
mov
pop
xchg
inc
jne
jmp
jae
dec
mov
mov
pop
out
lods
and
jmp
push
call
sub
ret
outsl
xchg
push
sub
xor
cmp
cmp
add
incl
andl
lods
ljmp
cmp
jmp
popa
ds
mov
cmp
mov
out
lret
mov
call
call
mov
in
ret
inc
or
xor
adc
xchg
xchg
mov
push
pop
mov
cltd
hlt
test
stc
mov
inc
loope
sti
add
push
es
in
cli
call
arpl
and
cmp
xchg
clc
mov
push
outsl
call
fwait
sub
cld
xor
or
fs
shrl
out
imul
mov
bswap
add
cmpsl
dec
sub
dec
mov
popf
mov
or
cmp
js
mov
roll
xlat
sbb
in
adc
popf
ret
dec
jle
test
lods
pop
or
daa
mov
mov
sub
scas
dec
push
rcl
push
sub
ret
ds
push
pushl
cli
jmp
fwait
cmpb
mov
mov
pop
fcompl
sub
test
shlb
pusha
xchg
jg
adc
lret
dec
mov
xchg
or
incl
bound
bound
into
pop
movsl
push
hlt
fisubrs
add
movsb
scas
push
sbb
fldl
pop
insb
fbld
dec
test
sbb
orb
in
adc
xchg
fisubrs
dec
sbb
mov
mov
mov
negb
add
in
dec
or
enter
loop
mov
lahf
cli
nop
cld
lea
jg
fcoml
sub
cld
lods
into
fidivs
or
dec
mov
pop
adc
in
and
mov
xchg
mov
jl
outsb
jmp
xchg
push
xchg
and
or
push
imulb
cwtl
fmul
jo
test
and
leave
xchg
jne
cli
jmp
packsswb
push
cld
in
test
jge
pop
aaa
outsl
bound
dec
insb
clc
jmp
dec
jg
lods
leave
xchg
or
cmpsb
sti
jp
call
or
stos
jge
int3
jle
xchg
jb
cmp
and
cmpsl
arpl
xor
fucomip
ljmp
lcall
cld
fwait
adc
sub
mov
jp
incl
push
test
push
xchg
xor
cld
dec
lret
jl
arpl
lods
clc
adc
jg
outsl
std
pop
fcoms
mov
insb
push
mov
pop
in
rorb
push
mov
cmp
fisubrl
add
aaa
cld
sbb
fistpll
ja
pop
dec
out
jns
sbb
jg
xor
pusha
shll
jne
dec
xorl
fwait
push
imul
jmp
and
or
pop
pusha
cmp
fbld
jge
mov
roll
cli
sub
das
rclw
mov
jbe
or
or
std
push
icebp
sub
insl
xor
mov
mov
mov
mov
or
and
and
mov
popa
ret
mov
call
xchg
cmp
mov
sub
cld
inc
addr16
mov
pop
ljmp
pop
in
adc
lret
mov
pop
jno
clc
mov
mov
add
icebp
pop
xor
cltd
rol
sub
pop
pop
aam
in
add
in
repz
mov
xchg
fstl
insl
inc
lcall
cmp
mov
movsb
fucomip
int
aam
xchg
stos
mov
cmpsl
cmc
cli
test
out
add
sbb
pop
xor
sti
xchg
loope
cmp
les
sbb
ljmp
sbb
stos
jae
aad
cmp
cs
lcall
sub
cld
les
stos
int3
pop
xchg
outsl
cmc
aad
sub
inc
clc
scas
xor
xchg
mulb
fucomip
inc
jmp
inc
rdmsr
push
push
cld
or
inc
push
mov
aaa
iret
in
cmpsl
xchg
imul
popf
mov
pushf
cmp
outsl
pop
add
pushl
inc
cld
add
jno
das
idiv
push
sub
in
popf
cs
jg
decl
in
push
in
mov
roll
xchg
pop
mov
jg
jmp
xchg
cmc
cmp
pop
nop
mov
call
cmp
sahf
test
movsl
mov
mov
add
sar
and
subl
leave
loop
pop
dec
cmovge
push
call
mov
pop
fisubrs
xor
in
sbb
pushl
mov
stos
sti
sbb
cmp
push
mov
das
cmc
push
pop
inc
inc
lcall
cmp
ljmp
jp
test
ret
mov
xor
push
adc
stos
mov
push
cs
push
inc
fdivrl
jg
incl
mov
outsl
js
jo
jmp
int
xchg
or
mov
cmp
mov
stos
jecxz
and
ljmp
icebp
mov
cmpsb
dec
cmp
daa
push
push
mov
push
mov
movsl
pop
mov
incl
xor
push
mov
hlt
lock
fs
fnstsw
mov
sub
pop
adcb
jmp
lcall
shrl
scas
mov
xchg
dec
loop
mov
int3
cmpsl
fisubrl
incl
lcall
mov
shlb
xlat
ljmp
lret
call
movsl
jmp
pop
add
in
orb
jns
mov
push
test
dec
inc
or
mov
arpl
dec
int
outsl
icebp
xchg
aam
and
pop
dec
shlb
ljmp
pop
es
or
rorl
jl
shll
lea
or
ljmp
test
repnz
sbb
inc
add
add
imul
cmp
xchg
and
incl
lds
movsl
les
fs
call
cmpsl
push
sar
or
aad
aaa
mov
mov
add
jg
mov
pop
in
mov
into
fnstsw
icebp
icebp
ljmp
icebp
aaa
or
test
fcmovnbe
imul
mov
ljmp
cmpsb
popa
loope
sub
lods
cmpsb
pushf
in
lock
fucomip
lcall
dec
sarl
lock
cmp
xchg
pop
incl
int
adc
sub
repnz
faddl
fiadds
mov
mov
mov
cmpsb
sub
sarl
ljmp
pushf
mov
rorb
in
jbe
lea
cmp
push
jg
sub
rorb
das
outsl
incl
lea
and
into
ret
mov
cli
push
lock
pushl
decl
aas
insb
push
dec
cltd
outsb
adc
cmp
adc
cmp
adc
sarb
call
int
daa
and
jmp
jne
inc
mov
mov
push
fwait
mov
xorb
daa
mov
and
lret
and
sar
jg
repnz
add
adc
cli
ret
sbb
pop
outsb
arpl
mov
pop
nop
push
je
fsubrl
pop
jle
jmp
pop
pop
sub
ja
mov
pop
ljmp
mov
dec
cmp
push
pop
sub
dec
jmp
lret
jecxz
int3
data16
pop
cmp
push
lahf
dec
pop
repz
mov
movsb
mov
imul
push
repnz
sub
lods
dec
in
push
addr16
mov
lds
xchg
imul
filds
sbb
out
inc
xchg
int3
sub
mov
ljmp
sbb
stc
xor
xor
lahf
in
mov
lods
aas
aam
fisttpl
sbb
jae
jnp
cltd
and
sti
push
out
cwtl
aas
dec
push
xor
push
xchg
das
nop
loopne
fisubrs
push
push
add
and
dec
std
adc
insb
pop
stc
rorb
jae
dec
outsl
cli
inc
mov
sub
stc
cltd
push
jno
ja
mov
xor
mov
stc
pop
cmp
dec
jno
push
cmp
insl
pop
push
mov
xor
test
sub
ljmp
gs
add
xchg
sub
sbb
negl
dec
pop
outsl
imul
std
inc
cmpsb
jb
xor
cmp
dec
sbb
xchg
decl
add
xor
mov
sti
or
fst
insb
out
sar
mov
inc
out
in
jno
dec
fsubp
sbb
dec
les
shrb
jp
push
pop
cli
jg
cmpb
inc
ficomps
add
mov
dec
dec
mov
pop
loop
pop
jbe
add
out
popl
mov
aad
loope
pop
js
pop
fldl
xchg
ds
mov
hlt
jmp
mov
add
std
cmpsl
test
mov
or
jg
jo
mov
mov
rorl
jmp
pop
jl
mov
out
scas
lock
call
pop
cli
inc
inc
xchg
les
cmp
dec
lret
add
aam
lods
push
mov
pop
cld
xlat
int
ljmp
addb
int
sbbb
mov
nop
inc
cmp
jmp
fcoms
loop
push
in
add
je
les
pop
push
call
cmp
sbb
xchg
scas
add
lock
ljmp
into
cld
or
mov
dec
lret
sub
imul
mov
xchg
ljmp
jo
xlat
jmp
lods
mov
dec
inc
scas
mov
lds
aas
xchg
jg
fnstsw
les
mov
aas
add
mov
cwtl
aaa
cmc
mov
pop
stc
stos
sbb
cmp
xchg
jp
pop
loop
xchg
mov
fwait
clc
addr16
or
cs
gs
jmp
imul
cs
clc
mov
lods
loopw
fistpl
cmp
lcall
cs
inc
push
mov
adcl
test
jmp
mov
cmp
popf
jo
imull
pop
xchg
sbb
ret
cmp
insb
fcoml
mov
ljmp
icebp
or
jb
sub
bound
sbb
jg
add
push
fidivl
out
and
sahf
jge
ja
call
mov
mov
incl
jmp
mov
and
sbb
mov
or
dec
outsl
inc
decl
push
idiv
jmp
rcrl
adc
push
popf
or
dec
mov
mov
adc
shll
std
outsl
inc
aam
dec
dec
repz
mov
addr16
cmp
cs
adc
imul
gs
push
icebp
ljmp
xchg
fiaddl
cltd
int3
shlb
aam
adc
pop
mov
cvtps2pd
cmp
in
mov
clc
aaa
arpl
lcall
xor
xchg
lods
dec
cltd
mov
dec
fadds
addr16
mov
add
jae
call
mov
out
xchg
pop
daa
inc
jno
push
cmp
xor
notb
mov
ljmp
xorb
jl
pop
mov
adc
inc
sub
push
mov
aas
sbb
movl
push
stos
frstor
xor
aas
ljmp
test
add
mov
out
shlb
scas
pop
aam
dec
xor
sahf
xchg
pop
push
enter
addl
outsl
xor
das
hlt
into
stos
xor
shlb
mov
aad
dec
fmuls
add
leave
push
icebp
push
stos
push
dec
inc
and
aam
call
jae
and
pop
insb
imul
ljmp
data16
ljmp
filds
jg
jle
adc
mov
stos
sub
cmpsl
fcoms
mov
in
inc
sahf
pop
into
cs
fmul
push
mov
mul
adc
lcall
loopne
add
lea
repnz
dec
mov
iret
mov
aaa
ljmp
mov
je
aas
insl
fimuls
repz
testl
jl
insl
inc
jg
lcall
pop
add
test
lods
xlat
mov
dec
nop
lcall
fadd
enter
jle
xor
fs
mov
into
or
ljmp
scas
subl
cmp
test
mov
jp
les
mov
out
pop
in
ss
jp
mov
xchg
push
push
adc
fs
lcall
xchg
push
jmp
adc
stc
scas
xorl
ss
in
sti
stos
inc
inc
rorl
push
fisttpl
sub
xor
jo
popa
mov
jg
outsl
lock
mov
outsl
mov
pop
xor
pop
sbb
aam
push
ljmp
cmc
mov
cmpsb
addr16
fidivl
es
mov
aaa
mov
daa
aaa
xor
pop
ljmp
inc
mov
dec
sbb
pushf
std
data16
cmp
outsl
push
ds
cwtl
js
ljmp
std
sub
mov
lcall
jmp
movsb
adc
xor
enter
repz
sub
jo
into
inc
aaa
lcall
std
mov
mov
loope
mov
fucom
movsl
hlt
test
sub
push
fistpll
insl
add
dec
mov
test
cmp
lock
and
cli
rcrb
cmc
sbb
les
cmc
jg
cli
mov
adc
stos
and
mov
rcpps
outsl
and
fld
mov
or
dec
es
cwtl
hlt
test
xor
jg
fistps
clc
out
stos
mov
fcoml
push
adc
jno
hlt
cld
lcall
lcall
js
inc
lea
fiadds
xchg
adc
pop
imul
decl
aad
cmp
mov
jle
mov
ss
lock
jle
cmc
xor
ja
decl
pop
shl
lods
rorb
outsb
pop
orb
arpl
movl
mov
fimull
repnz
dec
jno
icebp
flds
pop
inc
decl
fists
data16
cltd
aas
xchg
cli
jae
add
lds
ljmp
xchg
lret
test
insb
sahf
pmulhuw
decb
mov
lret
fs
sub
fmuls
jge
or
cmp
call
call
stos
pop
dec
dec
movsb
mov
mov
mov
fistps
push
popa
rcrb
mov
inc
cld
pop
or
dec
mov
xor
pop
lret
jg
cmp
js
inc
xchg
lret
sub
mov
subb
xlat
jmp
mov
sbb
adc
mov
jae
ds
aad
int
jle
enter
movsb
fildl
xchg
cmpsl
test
cmp
add
inc
in
push
mov
fsub
incl
cli
loop
dec
pop
test
push
incl
dec
lods
sbb
jne
sub
mov
sbb
mov
mov
insb
js
scas
mov
sub
jmp
add
fwait
cmp
xor
pop
pop
jl
popa
mov
mov
xchg
clc
incl
jmp
sbb
mov
cmpsb
adc
cld
adcb
lcall
inc
pop
and
repnz
dec
leave
jl
mov
dec
ljmp
test
fdivr
mov
pop
shll
pop
jns
adc
sub
ud0
pushl
jo
dec
jns
push
and
mov
repz
iret
push
push
xor
lock
mov
outsl
pop
jge
adc
inc
jb
mov
xor
mov
jmp
and
cmp
xchg
clc
test
push
outsb
leave
les
jle
decb
mov
push
imul
pop
mov
jg
inc
imul
hlt
mov
mov
pop
push
je
mov
add
sub
out
out
xchg
inc
jp
mov
xorb
fs
loopne
into
insb
inc
pop
adc
adcb
sub
jae
xchg
cmpsl
dec
out
cmp
mov
hlt
mov
cmp
fisubl
jmp
adc
clc
das
sub
lcall
xchg
xor
or
fdivrp
xchg
das
inc
lock
push
and
lcall
pop
add
jmp
popa
data16
mov
inc
xlat
ret
or
fs
inc
loop
cmc
or
inc
test
jmp
fs
test
sub
adc
adc
rolb
aam
xchg
cmc
idiv
call
push
ret
iret
xor
roll
mov
std
lea
popf
cmp
pop
add
decl
repnz
mov
sbb
lret
or
dec
sub
jl
stc
lahf
xlat
cmp
loopne
in
push
ljmp
lret
pop
xor
mov
fimull
idivb
add
clc
mov
jg
xchg
add
push
outsb
jbe
leave
mov
sbb
ret
mov
into
cmp
mov
test
mov
lods
mov
lret
adc
sub
movsl
jg
mov
ds
and
in
call
popa
sub
inc
jg
lahf
jno
insl
mov
cmp
sahf
and
addr16
int
push
daa
add
call
and
adc
ret
dec
mov
sarb
lahf
cmpsl
and
insb
ja
call
ret
jmp
ficomps
adc
cmovl
push
fidivl
pop
mov
mov
jmp
sbb
loop
jnp
pop
dec
mov
idivl
int3
adc
ja
aad
jb
les
sbb
push
add
push
lret
into
jnp
pop
movb
jns
sti
decl
pop
repz
or
dec
jb
sub
sub
push
mov
cmp
inc
mov
push
dec
call
mov
orb
dec
out
cmp
mov
mov
daa
shl
sbb
mov
jg
push
addr16
sub
and
loopne
and
and
loope
mov
jmp
insl
and
push
sbb
out
mov
or
ljmp
int3
ss
pushf
popf
mov
je
cmp
decl
into
scas
jecxz
mov
lea
pop
popa
daa
pop
cmpl
loope
fcomi
pop
les
sti
xchg
in
cmp
lret
mov
enter
inc
push
cmp
mov
mov
add
and
and
xor
popa
std
ljmp
cli
or
mov
mov
and
push
int
div
cmp
push
lret
mov
dec
add
xchg
test
subl
xchg
data16
ljmp
fiaddl
inc
pushf
push
popa
inc
data16
sarl
pop
gs
inc
lcall
fistpll
mov
mov
xchg
shll
add
addr16
jl
jle
xor
ret
xchg
arpl
jp
popf
mov
xor
mov
leave
ret
xor
aam
jg
loop
js
mov
and
pusha
int3
mov
data16
or
decl
sbbl
push
jns
loop
lods
cs
xchg
xchg
pushf
inc
push
xchg
daa
into
fcos
pushf
push
mov
fbstp
adc
inc
stos
out
orb
adc
xchg
inc
pushf
rcrl
mov
aas
mov
insl
pop
jmp
mov
insl
and
mov
mov
sbb
nop
pop
inc
inc
lock
orl
cmp
decl
and
syscall
out
mov
out
lea
push
and
lret
xchg
aaa
clc
jmp
cmovnp
xchg
xchg
mov
pop
scas
inc
std
mov
outsl
pop
rorl
mov
mov
mov
loope
jmp
push
pop
stos
pop
cmp
dec
inc
dec
add
filds
xlat
or
fnsave
xor
testb
adc
ljmp
inc
icebp
sub
mov
fdivp
popf
cli
inc
pop
add
mov
leave
sbbl
jl
sub
cmc
in
lcall
enter
cmp
and
scas
aaa
xor
pop
jl
jmp
jmp
int3
mov
mov
inc
aam
xor
imul
xorl
cmp
incl
sbb
leave
mov
mov
jmp
jp
jp
sbb
std
lcall
pop
jecxz
xor
stos
jbe
adc
fbld
and
mov
lcall
aam
push
leave
enter
ljmp
in
pushf
or
cmp
fdivr
jmp
jecxz
mov
pop
mov
mov
and
in
cmp
mov
test
jmp
cmpb
mov
push
ds
push
mov
push
cmp
jg
xor
or
int
push
adc
int3
push
or
loope
fcom
push
add
cmp
mov
daa
sub
fisubrs
pushf
ljmp
adc
pusha
lahf
cmpb
fcomps
mov
int
dec
std
mov
aas
jmp
sahf
jle
cmp
fiaddl
xchg
and
jo
push
mov
insl
lcall
in
push
pop
stc
das
cmp
push
aad
int3
add
pop
xchg
in
shll
decl
or
adc
sub
cmp
jmp
lods
adc
outsl
stc
push
rcrl
call
fsubrl
xchg
xchg
mov
repnz
jp
outsl
mov
or
inc
insb
push
ja
cmp
dec
fcom
xchg
jbe
int3
out
adc
fldt
pop
cli
lcall
sbb
repz
lcall
arpl
mov
es
xchg
in
je
or
mov
pop
shr
ja
addr16
dec
call
pop
imul
and
test
mov
cmp
in
mov
inc
jecxz
das
adc
aam
mov
daa
lahf
int3
popf
std
pop
dec
call
cli
sbb
push
mov
cmp
mov
test
cli
call
mov
xlat
popf
shll
jnp
jl
sbb
mov
xchg
pop
inc
nop
or
pop
cli
decl
data16
in
mov
mov
inc
sti
pushf
xchg
mov
lods
sub
fistl
jne
cld
add
xchg
cmp
lcall
bound
aas
and
popf
aaa
test
mov
movsl
mov
int3
arpl
call
xor
into
mov
fnsave
out
sbb
mov
incl
mov
inc
and
sub
pop
push
jne
mov
sub
aad
jecxz
iret
lds
pushf
jge
cmp
je
cwtl
add
lods
dec
fldl
and
xchg
arpl
ljmp
push
scas
adc
pop
mov
sbb
pop
ja
mov
lock
jg
es
sbb
daa
sub
adc
jbe
xor
ljmp
cmp
mov
jns
test
jecxz
sbb
cmp
pop
mov
jb
loop
movsl
imul
mulb
das
xchg
and
push
add
int
cmp
jmp
iret
pushf
sbb
fdivrs
xor
iret
mov
xchg
pop
je
imul
add
cmp
out
or
mov
jg
jmp
add
dec
jb
sahf
sbb
ja
mov
mov
incl
jg
iret
jno
dec
cmp
xchg
movsb
lock
fst
push
and
lahf
sub
push
out
andb
add
hlt
jle
int3
dec
decl
call
push
mov
cmp
fsts
xor
stos
jg
mov
or
inc
inc
sub
push
sbb
cmp
mov
pandn
push
jl
cld
mov
sub
mov
adc
repnz
add
movb
incl
flds
scas
shl
or
addr16
call
lcall
inc
xor
iret
dec
or
pop
imul
test
mov
mov
out
or
add
jmp
scas
xchg
insl
repnz
cmp
fnstcw
push
inc
das
or
fdivrs
dec
inc
int3
pop
aas
or
mov
dec
pop
jno
adc
in
lret
pop
xchg
cmpsl
cmpsb
or
stc
or
rcl
fs
lahf
sbb
scas
lcall
inc
mov
sbb
adc
inc
je
lods
pop
pop
dec
hlt
lcall
dec
call
jae
imul
push
test
cmp
fwait
dec
mov
cmpsb
cld
outsl
hlt
inc
repnz
push
imul
out
decl
jnp
fs
adc
xor
dec
mov
cmpsb
jp
push
sbbb
adc
nop
test
jno
mov
cld
jmp
inc
rcrl
adc
pop
push
ljmp
iret
xchg
sahf
jmp
push
or
movb
mov
xor
stos
push
icebp
jg
leave
fdivr
rorb
aam
or
sub
in
adc
sahf
cwtl
das
lock
and
mov
cmpsl
out
fs
jmp
push
push
sbb
lcall
lods
pop
push
xlat
xor
add
incl
into
ror
or
pop
pop
push
dec
stos
rcl
xchg
decl
pop
pop
into
jns
outsb
loop
dec
aas
sbb
xchg
pop
rcll
dec
insl
cmpsl
push
mov
rcrb
pop
cli
lret
jl
stos
add
dec
mov
dec
insl
sbb
inc
sahf
or
jg
hlt
popa
cmp
stc
xor
or
add
mov
movsb
pop
and
incl
cli
or
xchg
scas
pop
sbb
jno
cmc
call
call
pop
pop
xchg
inc
movsl
xchg
pop
xchg
test
cmp
mov
fildll
test
sub
aas
sar
cmp
mov
aam
dec
cs
std
outsl
std
aas
fisubs
jmp
sub
fstpl
pop
sahf
dec
rclb
xchg
fsubr
cld
and
rcrb
adc
jge
jg
aaa
les
cli
xchg
cmp
jp
pop
jg
mov
into
pop
mov
rorl
jnp
or
sub
push
rcrl
push
jge
outsb
pop
adc
inc
incl
out
scas
lds
test
mov
cmc
test
push
je
ljmp
mov
inc
push
mov
jne
mov
test
cmp
daa
stos
add
xsha1
cmpsb
mov
icebp
jns
in
les
or
sbb
in
dec
dec
sub
sti
xchg
xor
mulb
lods
mulb
lcall
lock
es
dec
loopne
test
jg
ljmp
xor
in
fs
jns
hlt
pop
mov
dec
outsb
daa
test
jg
or
jae
push
push
mov
jno
incl
jb
jle
cmpsl
xchg
sub
push
or
mov
or
and
pop
sbbl
jmp
jb
mov
mov
sub
push
and
add
inc
in
in
xor
es
leave
xchg
cmp
jne
lret
sbb
jmp
std
das
jo
and
xor
fisubl
mov
int3
jmp
cmp
sbb
rorl
sbb
call
push
loope
popf
sti
jge
test
lea
cli
lcall
xor
jo
mov
loope
pop
es
test
fbstp
shll
mov
out
xor
fbld
in
mov
dec
jno
sub
push
mov
dec
pop
mov
aam
jle
nop
repz
ljmp
jns
mov
icebp
cmp
mov
jne
orl
aas
mov
call
pop
lea
jns
nop
push
push
sub
lds
cmp
pop
and
js
stos
test
or
pop
push
and
add
fists
cli
sbb
mov
imul
shll
lret
incl
jnp,pn
cwtl
mov
outsl
xchg
pop
stos
or
cmp
mov
lcall
imul
movd
enter
std
jmp
xlat
movsl
or
int3
cmp
outsl
std
jmp
pop
pusha
lcall
dec
stos
xor
push
push
xchg
cmp
lcall
xchg
outsl
ffree
and
jo
icebp
js
mov
sbb
ret
cli
decb
sub
les
jge
pop
fistpll
pop
add
push
aas
xchg
add
xor
cmp
adc
popf
xor
mov
ret
cmp
ret
and
mov
ja
pop
insl
dec
mov
arpl
ljmp
mov
insb
or
cmp
lcall
cli
lahf
mov
pop
or
mov
ret
jecxz
pop
inc
sbbl
repnz
stos
dec
out
mov
orl
inc
cld
mov
jg
xlat
inc
roll
fdivrs
push
jg
call
jecxz
das
push
push
test
in
clc
mov
lcall
pushl
xchg
lret
cltd
mov
cli
mov
dec
repnz
cmp
jmp
cmc
decl
sahf
inc
and
rol
leave
test
ret
call
add
loop
sbb
dec
nop
mov
pop
rol
fnstsw
lcall
lahf
mov
in
loope
sub
sub
into
cmp
es
aaa
sar
jg
imul
imul
mov
mov
fistps
call
xor
dec
xchg
arpl
das
dec
pmuludq
jbe
push
shll
xchg
add
ljmp
jl
fadd
mov
sub
bound
aam
sbb
test
push
push
pop
fs
outsb
dec
ljmp
pop
lret
sub
jg
shll
mov
divb
cld
int3
loopne
push
clc
incl
outsb
mov
sbb
or
push
push
popf
lds
mov
incl
pop
mov
lret
inc
int
int
fs
enter
incl
jb
andl
in
int3
scas
push
cld
adc
pop
dec
sbb
fnstcw
cmp
add
cmp
mov
jecxz
mov
push
lds
push
ljmp
jp
test
movsb
add
loope
and
in
pop
es
dec
mov
leave
xor
enter
dec
push
decl
cld
pop
sub
scas
sbb
inc
push
dec
std
repnz
cmp
push
xor
shr
add
jecxz
sbb
jecxz
sub
push
hlt
fdivrp
jg
pushl
lea
into
mov
aas
jge
jg
push
sub
call
stos
or
inc
ror
js
and
pop
push
stos
cmp
adc
imul
pop
and
or
les
lcall
sub
lods
inc
push
int
subl
jg
aad
daa
dec
or
push
dec
addr16
and
add
mov
mov
popa
dec
ficoms
sbb
je
inc
or
aam
incl
in
fldcw
xchg
jnp
mov
pop
and
jns
outsl
lret
jg
loopne
pop
sahf
lods
nop
push
inc
mov
push
inc
out
mov
sub
cltd
xor
les
jl
pop
xchg
clc
push
jle
inc
mov
xchg
pop
and
lds
subl
fcomi
adc
sbb
movsb
xchg
cli
imul
out
inc
sbb
jge
jecxz
decl
insl
xchg
mov
mov
sbb
ret
pushf
mov
jg
pop
cmp
dec
pop
or
mov
in
push
fsubrs
cmpl
shll
add
jp
shll
pop
insb
hlt
call
test
fildl
add
lock
and
mov
sub
andb
and
and
pop
mov
std
fbld
leave
xor
outsb
in
jbe
int3
lcall
pushl
mov
lcall
jae
pop
fsubrs
xor
stos
sti
mov
enter
fisttps
punpcklbw
loop
and
dec
jecxz
pop
orb
ret
mov
inc
mov
cmpsb
imul
fwait
out
loop
cmp
movl
bound
push
adc
lea
and
cmpsl
and
les
test
or
jecxz
push
mov
inc
xchg
pusha
cli
pop
sub
call
movsl
mov
jmp
mov
outsl
call
call
loopne
outsb
out
je
lahf
popa
and
mov
leave
imul
fcmovne
out
pop
loop
fisubrs
cmpsb
ds
ljmp
mov
imul
lea
xor
and
ljmp
cwtl
les
or
test
push
popf
je
test
ljmp
mov
adc
or
pop
inc
subb
out
jno
ljmp
les
loope
lahf
xchg
xor
mov
inc
jl
ss
popf
and
pop
jns
sbb
pop
jnp
daa
imul
jmp
call
cmpsl
add
outsb
mov
insl
mov
mov
jnp
ljmp
repz
xchg
inc
mov
xchg
jl
pushf
aas
pop
icebp
ja
adc
das
je
push
mov
lcall
sbb
in
lret
mov
push
mov
xor
lods
inc
push
ljmp
xor
adcb
decl
sub
cmpsl
add
repz
decl
mov
cs
add
add
call
mov
mov
int3
ljmp
fdiv
mull
fstpl
int
jbe
call
pop
mov
xchg
mov
aas
dec
mov
decl
xchg
push
shl
test
xor
mov
lods
dec
scas
dec
ret
repz
adc
aaa
cli
pushl
movsb
pop
je
lret
lea
das
fucomip
rol
in
pop
div
decl
movsb
ja
inc
push
fucomip
jle
sub
ljmp
or
sub
jmp
sbb
mov
push
jle
shrl
insl
jb
inc
fstpl
xchg
shrl
pop
jo
pminub
faddl
ljmp
iret
call
clc
fnsave
dec
sub
movsl
pop
out
dec
jl
incl
jnp
mov
arpl
call
cmc
fstpl
call
or
xchg
push
cli
xchg
jmp
or
decl
mov
mov
jl
dec
cltd
loope
shl
jne
pusha
fdivr
adc
outsb
and
jns
outsb
clc
sub
jae
jmp
pushl
pushl
pop
aam
das
stc
fnstenv
xchg
int3
pop
and
lcall
and
divl
xchg
inc
jbe
sbb
pop
ret
add
jle
jl
inc
jae
cmpsl
cmpsl
pop
cmp
dec
jg
mov
sub
ret
imul
jp
pop
jle
jmp
into
mov
sbb
test
mov
sub
sbb
or
pushl
int
sub
mov
loopne
aas
stos
enter
push
test
call
ja
lods
stos
out
push
hlt
cmp
mov
call
xor
fcmovnbe
hlt
sbb
fsubr
ret
adc
fcmovbe
notl
bound
pop
pop
mov
loopne
test
push
ret
cmp
idivl
cmp
mov
loope
call
jge
lret
dec
lcall
jmp
sbb
mov
das
ret
push
and
fucomip
add
addl
push
push
cli
ficomps
inc
incl
test
mov
data16
push
outsb
vpmovuswb
and
jmp
incl
jle
fnsave
enter
das
movsb
out
push
cli
insl
and
jg
jle
dec
aas
iret
subl
outsl
push
ljmp
and
dec
adc
add
je
add
ds
and
xchg
inc
mov
add
jmp
fwait
inc
cwtl
je
fsts
cwtl
int3
clc
aaa
loopne
pop
js
out
out
mov
or
int
and
std
lcall
insl
xchg
pop
orb
test
inc
dec
outsl
ljmp
mov
mov
push
stos
sahf
adc
fsubrs
fwait
lahf
fstpt
sub
mov
test
addr16
clc
adc
rorl
xchg
or
xchg
fcoml
mov
pushl
repnz
or
push
push
clc
xor
call
push
popa
movsb
mov
and
pop
enter
decl
xlat
stos
dec
cmp
aas
sbb
cmpsb
stos
sahf
jg
dec
lret
and
insb
std
pop
scas
test
andb
xor
pop
testl
outsl
aam
aaa
movsl
roll
test
push
decl
std
xchg
int
jg
int
pop
out
sub
scas
mov
hlt
ljmp
pusha
imul
pop
adc
mov
sbb
dec
imul
dec
enter
out
les
rclb
sub
popf
add
lahf
sbb
addl
lock
mov
mov
cmp
movaps
sub
mov
push
jmp
mov
out
pop
sahf
push
push
cs
repz
inc
or
lcall
add
jl
insl
pop
push
jp
out
and
jb
incl
out
mov
das
adcb
add
std
pushl
mov
outsl
in
stos
add
pop
pop
xchg
cli
les
call
incl
das
insb
fbld
movsb
inc
movsl
shll
push
jg
call
inc
mov
pop
mov
dec
cmc
dec
scas
mov
lods
and
add
ljmp
es
and
adc
and
cltd
push
jae
divl
fiaddl
fistpll
pop
hlt
ds
mov
shlb
mov
xlat
push
jmp
popa
mov
xor
aas
sti
push
leave
and
mov
xchg
add
pop
mov
push
mov
dec
or
push
mov
mov
mov
insb
stos
ja
lods
xor
mov
xor
mov
jmp
adc
inc
sahf
arpl
pop
ret
sub
mov
mov
loope
sahf
shl
push
xorl
pop
inc
daa
xor
mov
mov
incl
adc
mov
sahf
dec
pop
add
push
jo
es
push
ljmp
outsb
mov
test
inc
roll
add
je
push
pop
je
inc
fmuls
fucomip
push
or
pop
mov
push
sub
jg
mov
das
sub
adc
and
cmp
cs
sbb
fucomip
call
adc
sbb
or
icebp
xor
test
decl
mov
xchg
mov
mov
mov
xor
add
adc
clc
sub
ds
sub
movsb
std
dec
sahf
fcom
jmp
xor
and
push
mov
push
mov
mov
xchg
sub
in
and
push
stc
and
call
fsubrp
decl
out
xchg
fsubrp
jns
pop
cmp
shl
jle
xor
fnstcw
in
fs
popf
jp
mov
in
mov
inc
inc
movsb
pop
sbb
xor
xor
shrb
loopne
loope
or
cmpsl
andl
add
pop
out
dec
lcall
std
incl
fimull
add
rorl
push
sub
inc
out
ljmp
sbb
mov
sub
mov
int
jne
rolb
fcomps
clc
lahf
cmp
mov
jg
adc
jmp
mov
sbb
jg
xor
or
mov
lods
push
in
sub
inc
add
mov
mov
jge
mov
add
fldenv
incl
fwait
mov
push
in
loope
adc
jae
cmpb
std
or
clc
int3
lahf
pop
push
sbb
hlt
push
nop
inc
mov
and
and
dec
cld
or
int
cltd
adc
repz
test
icebp
scas
repnz
jne
pusha
jno
into
pop
push
push
cld
jmp
jae
push
pop
inc
mov
pusha
rcll
lcall
pushl
sub
leave
mov
decb
aad
or
int
and
or
dec
jp
out
push
mov
jl
stos
xchg
jp
xchg
xchg
push
jg
sbb
aaa
repnz
dec
sbb
lods
ja
adc
mov
pop
pop
addl
popf
sub
jmp
pop
push
icebp
call
push
lcall
jae
dec
and
cmc
mov
fildll
dec
mov
jl
test
sub
call
sbb
push
mov
xor
sub
es
push
add
dec
cmp
mov
cli
fcompl
rorb
incb
push
xchg
vcvtps2dq
jmp
call
xchg
mov
lods
lods
xor
ret
adc
and
mov
inc
outsb
idivl
mov
das
and
jmp
lods
ss
mov
dec
inc
and
sub
mov
dec
in
dec
push
and
call
das
push
repnz
pop
sbb
iret
push
jle
incl
adc
xor
rclb
sti
stc
je
ljmp
lcall
paddusw
bound
incl
cld
pop
fistpll
jmp
sahf
mov
daa
push
daa
and
push
lea
push
xor
ljmp
mov
das
mov
mov
cmc
or
out
outsb
subb
lea
test
dec
cmp
mov
ror
rcrb
fnsetpm(287
daa
not
les
push
pushl
test
ret
repz
fdivrp
inc
pop
scas
dec
dec
ja
dec
sbb
data16
push
push
jne
sbb
iret
std
xchg
insb
pop
data16
scas
xchg
cs
rolb
fldcw
insb
jae
cwtl
jbe
dec
cmc
pop
dec
movsl
ret
scas
mov
lcall
ds
dec
in
std
lahf
adc
lock
loope
movsb
pop
popf
aad
dec
push
jmp
outsb
push
int
and
mov
in
ds
jle
ja
jg
dec
std
xlat
sbb
or
lock
xchg
pushf
incl
dec
mov
mov
ss
fbstp
arpl
and
mov
xlat
dec
mov
ret
lock
gs
outsl
lock
cwtl
pop
icebp
sub
sub
sbb
xchg
imul
mov
adc
inc
lret
push
scas
jg
mov
cmp
loop
cmpsl
push
push
jg
lcall
cmpsb
xchg
pop
xchg
and
mov
lods
ljmp
add
incb
pop
ljmp
mov
gs
mov
lea
decl
icebp
mov
mov
fldt
xchg
rcl
clc
test
rclb
xchg
cmp
fwait
inc
orb
inc
xchg
xchg
mov
test
shlb
pop
mov
ljmp
jbe
divl
dec
push
add
adc
push
aam
and
lcall
incl
push
or
imul
jg
dec
loop
push
loopne
push
or
pop
enter
dec
lock
pushl
cmp
xchg
sub
dec
push
xchg
jmp
mov
xchg
cli
pushl
and
and
cmp
rolb
out
dec
popf
pop
loop
push
out
movsl
mov
mov
push
and
pop
lcall
xor
cmp
jb
push
adc
and
idivl
dec
inc
inc
lahf
js
pop
xor
out
add
decl
fldcw
xor
push
jne
repnz
pop
fistpll
js
push
push
ss
fs
sbb
in
inc
dec
loop
cmp
dec
es
popa
sbb
ds
call
subb
popf
xchg
fsubs
test
bound
rclb
std
inc
lcall
and
or
mov
lea
shrb
decl
push
fidivs
insb
outsb
ljmp
insl
clc
xor
fwait
lret
mov
dec
cmp
fidivl
jp
pop
jl
std
dec
out
mov
inc
mov
mov
pushf
cltd
fsubl
mov
cwtl
out
fsub
push
and
shll
jb
aas
idiv
mov
cwtl
fsubr
and
mov
in
loope
in
push
jne
xchg
testl
or
hlt
out
addb
jbe
out
fs
pushl
popa
hlt
sub
dec
ja
lock
out
es
movsl
nop
add
push
incl
imul
out
sub
mov
mov
push
sbb
dec
decl
jge
xor
dec
xchg
std
sarl
and
push
cmc
cmp
or
aad
jne
mov
jnp
mov
add
data16
sar
xchg
clc
dec
shr
dec
stos
pushf
in
iret
cli
daa
insl
dec
in
pop
movsb
inc
mov
jmp
insl
sbb
sub
inc
fildll
adc
aaa
pop
ljmp
sbb
add
ss
decl
std
jmp
adc
jg
scas
mov
xor
cmp
int
adc
loopne
and
int
lret
movsb
repnz
pop
imul
cmp
pop
aam
shlw
pop
ljmp
push
xlat
inc
push
out
das
hlt
lcall
mov
push
ret
push
pop
lock
and
cmc
ds
lcall
jnp
inc
jmp
mov
adc
push
in
out
scas
xor
adc
ret
xlat
pusha
outsl
std
and
xor
fisubrl
adc
mov
lcall
in
jge
jl
fbld
insl
sub
push
dec
jmp
fsub
jge
pop
xor
dec
mov
jmp
mov
push
notb
daa
sahf
shl
lret
jae
test
call
dec
xor
fnstsw
data16
das
dec
pop
fcomip
sub
dec
pushf
lret
xchg
adc
bound
icebp
pop
adc
call
jo
xchg
insl
pop
loop
sbb
dec
inc
add
aad
jmp
mov
xorl
jg
decl
mov
adc
dec
push
sbb
dec
sbb
and
lods
incl
jbe
andl
loope
jg
bnd
jg
push
cs
pushf
loopne
in
std
inc
movsb
pop
mov
cwtl
sub
mov
and
mov
repnz
jmp
inc
in
pop
int3
lcall
decl
mov
push
xchg
mov
mov
je
in
js
ljmp
cld
std
lods
adc
fildl
dec
cmpsb
sahf
shlb
sbb
pushf
sbb
leave
push
dec
add
iret
mov
add
fisubs
scas
mov
out
std
ljmp
std
or
mov
push
fs
sub
xchg
repnz
in
pop
push
pop
loopne
rclb
pop
in
jns
out
inc
test
outsl
mov
icebp
int3
xor
mov
pop
imul
mov
lret
incl
lar
push
arpl
sub
aad
cmp
lcall
popa
loope
dec
push
adc
js
pop
daa
add
decl
cmp
subl
mov
fnstsw
movb
pushf
push
aas
cmp
push
cmp
inc
jbe
pop
std
incl
sbb
sti
xor
dec
aad
add
scas
cmp
nop
and
incl
push
push
imull
cmp
psrlw
lcall
hlt
cmp
jbe
cmp
push
mov
lcall
push
popf
aam
sarl
inc
push
mov
lret
sub
add
adc
inc
inc
jno
decl
mov
xor
das
xchg
mov
mov
push
ljmp
inc
mov
sar
pop
and
sub
push
jl
fnstsw
mov
inc
mov
lcall
lcall
adc
insl
fadds
in
ret
movsl
jmp
in
xchg
scas
and
push
js
pop
lret
jno
out
aaa
pop
loop
cmp
add
fsubrs
pop
push
sbb
outsl
movsl
fbstp
push
push
sbbl
push
sub
jmp
test
std
mov
sub
cmp
mov
or
lahf
xchg
lods
dec
enter
loope
mov
inc
lcall
fbstp
cmpsl
sub
das
arpl
xor
repz
in
push
clc
out
lea
shr
aaa
jo
push
in
ljmp
cmpsl
or
cmp
mov
lcall
pop
inc
jp
int3
rcrl
adc
mov
adc
lcall
jno
or
xor
mov
imul
incl
adc
or
jg
lods
faddp
out
ja
mov
dec
imul
mov
test
stos
stos
and
cwtl
mov
into
pop
arpl
sbb
lods
xor
mov
sarb
dec
shlb
stos
adcl
dec
inc
sub
sub
cmp
cmpsb
fcoml
mov
aam
lock
es
cmpsb
or
sub
inc
mov
test
mov
xlat
lahf
cmp
push
fwait
insl
popf
insb
pop
jg
cmp
push
push
cmp
in
ficoms
or
cmp
popa
incl
adc
and
mov
xorl
inc
push
dec
les
popa
cmp
das
test
decl
std
mov
addr16
stos
das
inc
mov
adc
mov
push
cmp
or
icebp
or
and
cmpl
mov
pushl
inc
push
icebp
push
mov
cmp
mov
jae
shld
mov
rcrl
cmp
add
dec
add
mov
xor
scas
ljmp
cli
push
lret
outsb
adc
lea
cltd
mov
sub
ljmp
xchg
inc
imul
pop
push
in
mov
test
jmp
into
and
outsl
jbe
mov
push
ret
pop
loope
shll
cmp
jl
pushl
shlb
push
sub
mov
dec
jmp
push
in
adc
mov
push
das
pop
dec
mov
in
into
mov
xor
jecxz
cmc
testl
jne
rolb
into
dec
jl
mov
mov
pop
mov
incl
cmp
fnsave
fadd
clc
mov
loopne
inc
mov
jmp
fcmovnbe
push
bound
out
aas
sbbb
orb
fsin
jmp
push
mov
gs
pop
jle
adc
jae
jmp
bound
pushl
fidivrl
rorb
dec
mov
xor
add
and
push
lcall
push
inc
sbbb
es
js
inc
jnp
mov
push
xchg
pop
iret
aam
daa
in
adc
out
in
push
xor
lcall
dec
pop
fldenv
lret
orl
push
inc
iret
xchg
xchg
sbb
adc
dec
mov
jb
jne
xchg
and
insl
cmc
mov
pop
rol
adc
out
adc
in
jle
or
cmc
mov
fcoms
mov
pop
stos
xor
call
je
or
popf
lock
stos
in
push
iret
repnz
or
add
add
push
dec
pop
mov
inc
sbb
repnz
or
clc
int3
xchg
aad
fwait
jns
cs
and
cmc
in
sbb
jg
ds
mov
sbb
sub
aad
push
add
mov
pushl
cmp
pop
sbb
dec
shrl
xchg
or
ljmp
cmc
imul
es
in
or
lcall
jo
mov
jmp
ret
popf
sbb
dec
insb
mov
sub
decl
ljmp
inc
pushf
repnz
jge
sti
adc
jecxz
cmp
call
xchg
mov
nop
mov
and
cmp
out
jmp
xchg
dec
xor
loope
lret
loop
jg
iret
mov
sahf
pop
cld
frstor
clc
dec
cld
jg
pushf
mov
lock
or
cmp
fildl
xlat
pushf
std
inc
pushl
pop
inc
mov
sbb
adc
pop
call
jnp
fsqrt
incl
cmpl
out
sbb
pop
mov
cmp
fildll
mov
imul
fs
push
icebp
mov
adc
or
fimuls
arpl
ljmp
aaa
sarl
movsl
lea
repnz
in
sbb
ud2
mov
sbb
scas
popa
cmp
inc
lds
or
stos
stos
mov
pop
push
xor
dec
xor
sahf
stos
sarl
out
dec
mov
out
push
inc
jg
pushl
xchg
dec
inc
push
imul
and
std
ret
cmp
cmpsl
cmpsb
sub
sbb
push
fwait
and
pop
jbe
bound
loopne
sti
inc
mov
gs
mov
pop
aaa
pop
cmp
jge
add
or
add
arpl
pushl
test
cmp
and
test
dec
xchg
pusha
ret
jnp
mov
cld
leave
loope
roll
test
and
es
sarb
xchg
cwtl
dec
add
call
xchg
daa
adc
push
fstpt
mov
loope
mov
repz
in
pushl
ljmp
dec
xchg
adc
js
push
call
stc
mov
mov
and
lcall
pusha
adc
jp
inc
pop
dec
push
sub
bound
test
xor
pushl
inc
outsl
add
loop
addb
jns
nop
movsb
std
lods
sub
lahf
xor
fmull
add
movsbl
inc
decl
cmp
scas
and
hlt
test
push
push
adc
jbe
mov
mov
sub
xor
jg
decl
xchg
sbb
mov
clc
pop
pop
dec
js
aas
cld
cmp
sbb
sub
bnd
enter
inc
push
cmp
popf
jg
add
inc
add
scas
mov
fstpl
pushl
ret
pop
loop
sbb
adcl
jae
xchg
mov
jmp
ret
sbb
pop
sub
mov
mov
leave
cwtl
inc
jg
fisubl
in
les
jp
loopne
fcmovnbe
mov
push
or
ljmp
xchg
lds
push
dec
lock
inc
clc
sbb
lock
cmp
jnp
mov
aaa
or
pop
scas
push
xchg
add
add
inc
out
call
incl
call
and
jmp
leave
add
dec
sub
inc
mov
cmp
call
scas
pop
jecxz
adc
jmp
ja
divl
test
lcall
and
inc
movsb
inc
cmp
pop
lret
jl
pop
xchg
adc
lea
adc
jl
and
lret
call
cmpsb
ljmp
out
repnz
pop
dec
inc
inc
bound
dec
push
shlb
imul
incl
push
cmpsl
pusha
std
addl
out
inc
cmpsb
rorl
xor
inc
cmp
iret
ret
test
jb
add
sub
cld
mov
jp
lea
xor
mov
test
repz
push
mov
call
mov
xchg
jns
shrl
mov
mull
jg
fisubs
sbb
lea
rcrb
xchg
out
in
mov
sbbl
dec
addb
xor
imul
les
mov
add
inc
addr16
xchg
lret
fisttps
adc
jmp
fidivrl
jg
inc
or
mov
push
push
lds
lds
pop
xor
call
fnsave
jge
insb
pop
mov
jnp
ja
cmp
mov
daa
call
pusha
push
dec
adc
enter
test
sub
fimuls
dec
jmp
xchg
mov
ljmp
jmp
jge
loope
pop
and
push
fldt
push
xor
mov
xor
fldl
fstps
subl
mov
rcll
clc
enter
inc
ljmp
jg
adc
jmp
inc
cmp
or
dec
outsb
sbb
clc
stos
mov
xlat
push
xor
mov
add
and
push
inc
adc
loop
xchg
mov
adc
or
fldcw
icebp
sbb
fstl
and
cmp
mov
add
push
lcall
adc
or
je
cmc
push
mov
decl
pop
jp
mov
cli
scas
push
scas
mov
movsb
pop
cmp
pop
clc
sub
dec
shlb
fdivr
pop
cmp
nop
into
rolb
arpl
mov
mov
dec
dec
jb
jne
add
dec
sub
movsl
cs
or
call
in
pop
add
add
pushf
mov
inc
pop
aaa
and
hlt
loope
stc
loop
inc
push
ja
xor
jl
xchg
call
out
mov
test
sub
dec
enter
subb
incl
and
jl
jns
loope
mov
mov
add
icebp
jmp
pop
dec
imul
and
mov
test
test
lcall
mov
add
lea
inc
jl
psrlq
xchg
and
fs
pop
jno
decl
aad
int3
les
jl
adc
lret
pop
clc
mov
lods
cmc
ret
push
sub
push
fsubs
sbb
dec
mov
xchg
cld
inc
sub
add
cltd
jo
test
sub
fnstsw
out
xlat
mov
aam
lock
test
test
cmc
inc
sub
sahf
dec
roll
call
jmp
rorb
xor
pop
fistpl
addb
jmp
into
and
pop
fldt
jl
xchg
dec
pop
popa
std
cmpl
ljmp
add
loop
dec
in
call
aaa
and
ret
ljmp
push
inc
mulb
les
mov
mov
out
stos
cmp
sub
call
jmp
jge
and
cmpb
xor
xchg
push
out
mov
dec
sbb
xlat
decl
add
or
mov
hlt
stc
sub
mov
dec
jg
stos
inc
loopne
pop
enter
gs
add
fnstcw
inc
push
and
ljmp
dec
cmp
xchg
cli
into
cmp
pop
or
inc
lahf
test
sub
in
je
cmp
sbb
mov
jl
decl
mov
popf
test
mov
faddl
pop
addr16
dec
pop
shll
loop
ss
and
ret
sub
stos
inc
jb
iret
mov
clc
jae
mov
das
pop
xor
mov
sahf
data16
js
push
dec
sub
dec
outsl
mov
sbb
nopl
jno
pushl
sub
add
iret
div
repnz
and
sub
pop
and
xchg
gs
jg
jl
xchg
insl
xchg
lods
add
xorb
lret
mov
fwait
xchg
loopne
je
jo
inc
ljmp
mov
adc
rcrb
inc
ret
shrl
mov
push
idiv
cs
fwait
pop
dec
movsl
jp
push
testb
mov
dec
addl
adc
add
or
sbb
pop
mov
lods
es
aad
mov
xlat
loop
call
and
ja
inc
push
pmaxsw
jbe
fnsave
pop
jbe
out
add
mov
nop
enter
ds
loope
jg
jns
cs
cmpsl
sbb
ljmp
call
dec
adc
mov
add
test
mull
add
lcall
fisttps
sbb
in
dec
xor
push
test
pop
fbld
jns
cmp
push
adc
mov
mov
ljmp
movsb
aaa
aaa
js
inc
mov
addl
fisttpl
xor
jg
mov
stos
jno
pop
iret
ret
mov
je
fs
mov
add
jg
jge
call
mov
subl
ljmp
add
cltd
sub
cmpsb
add
dec
xlat
and
xchg
mov
dec
incl
push
test
pop
inc
sbb
icebp
mov
fwait
jo,pn
subb
outsl
inc
push
divl
mov
outsb
dec
or
fsubs
mov
hlt
or
lods
cmp
loop
aaa
decl
rcrl
xchg
and
popf
in
jo
and
outsl
icebp
jmp
roll
sti
cmc
and
in
int
mov
dec
shrb
push
std
incl
xor
or
mov
pop
fwait
dec
aam
lret
aas
sub
pop
lcall
mov
les
push
test
ret
push
fcoml
arpl
adc
jmp
add
shlb
jg
mov
push
pop
ljmp
xor
jo
jge
push
loop
pop
mov
data16
shll
or
sub
call
add
movb
bound
int3
and
cmpsl
scas
mov
mov
mov
xchg
hlt
mov
mov
movsb
testl
jg
imul
les
fbstp
mov
mov
inc
mov
test
fwait
jg
or
aas
bound
cwtl
cmp
aaa
xchg
pop
std
dec
adc
mov
iret
lea
inc
jl
push
js
xchg
cs
mov
mov
mov
test
mov
popf
pop
orb
int3
jns
out
adc
xchg
iret
decl
inc
xor
into
stos
xor
mov
mov
pop
xlat
imul
dec
or
out
xchg
jge
xchg
int3
test
pop
mov
jmp
lret
inc
jmp
ret
pusha
cmp
sahf
push
std
ljmp
jle
and
ja
mov
xchg
pop
cli
ds
cmp
adc
cmc
cmpsl
pop
xor
addb
lods
inc
out
xor
mov
movsl
sub
jl
xor
pop
jmp
pop
jne
dec
lcall
mov
jno
xor
roll
adc
mov
jmp
in
in
add
mov
inc
pop
cli
or
pusha
loop
jns
shrl
dec
jecxz
dec
bound
rcrl
add
test
scas
test
test
mov
sbb
push
andb
mov
and
test
loop
jg
jmp
sbbb
push
pop
mov
das
or
push
push
fcmovu
or
filds
lcall
or
add
dec
mov
lahf
mov
fsubrl
lret
xor
xor
adc
pop
fistpll
sbb
adc
jle
ljmp
notl
cmp
lahf
fwait
dec
cmp
xor
xchg
adc
pop
mov
xchg
add
jne
insb
fisttps
sub
jb
push
aad
and
mov
incl
ret
cmpsl
ljmp
pusha
jne
lods
lret
mov
decl
mov
aas
xchg
add
mov
mov
inc
outsb
mov
sbb
pop
loop
xor
jnp
pop
sbb
aaa
adc
sar
ljmp
cli
rcrb
pop
or
loope
mov
pop
push
dec
test
lcall
push
cmp
jp
xlat
sub
inc
out
fwait
pop
mov
cmpsb
add
xor
jmp
cmp
and
fmulp
or
call
pop
pusha
leave
push
outsl
fiaddl
cli
xchg
decb
lret
ljmp
xchg
scas
fistpl
jno
lods
stc
js
jno
push
jae
add
lods
cmpsl
test
sub
cmp
lcall
cmp
fcomi
add
aad
sti
dec
jno
hlt
out
mov
push
je
call
push
int
push
dec
adc
outsl
shl
dec
ret
add
jg
shlb
inc
rorb
mov
ds
sbb
leave
and
ds
cmpsb
test
dec
ljmp
or
lea
fwait
lds
inc
aas
push
mov
fyl2xp1
es
lcall
pop
int3
jg
add
clc
xchg
sbb
jmp
inc
jnp
inc
stos
ljmp
fucomip
adc
xor
add
imul
cmp
call
outsb
pushl
cmp
add
sbb
and
mov
xor
fwait
lcall
imul
add
jbe,pt
out
sbb
jnp
hlt
fdivrl
pop
cld
sub
cmp
call
cmc
fxch
and
in
ja
gs
dec
adc
xchg
call
xchg
sahf
clc
cwtl
mov
lcall
jnp
gs
lcall
fadds
gs
jg
mov
push
push
xchg
aad
repnz
mov
rcrb
decl
jl
inc
stos
adcb
jp
stc
sbb
or
lcall
cmc
iret
jecxz
out
pop
sbb
sub
decl
cmc
mov
imul
loop
popa
mov
fcoml
imulb
cld
mov
test
dec
mov
push
std
jmp
call
mov
jae
jmp
jae
das
and
jp
divb
outsl
das
inc
hlt
das
out
out
cmp
jg
mov
out
lret
inc
test
add
jmp
push
pop
sbbw
jbe
or
jns
mov
mov
cmpsl
ljmp
dec
xchg
rclb
push
dec
cli
aam
inc
xor
jns
sbb
add
dec
push
cli
jmp
pop
ja
out
test
popf
lcall
test
out
notl
lods
mov
and
les
push
cs
in
push
into
mov
jmp
fistpll
add
mov
add
or
xchg
ja
mov
dec
imul
decl
rcrb
add
xchg
in
pop
dec
cmpsb
lock
loop
shr
jbe
jo
ljmp
std
ljmp
push
push
mov
sbb
lock
lret
xlat
jbe
das
cld
cmp
adc
mov
dec
repz
in
and
call
and
fmuls
hlt
sti
cltd
leave
xor
cmpsl
ljmp
test
mov
jne
push
xchg
mov
lret
sub
push
in
mov
cld
push
dec
cld
enter
movsl
xchg
push
or
fdivs
sub
or
mov
jg
sbb
push
aas
sbb
mov
sbb
add
inc
add
loopne
pushl
xchg
adc
push
repz
dec
sub
mov
popf
inc
incl
lmsw
pushl
addr16
outsl
xchg
mov
mov
sub
sarb
ss
dec
in
sbb
aaa
pop
or
jae
repnz
call
movsl
add
sbb
inc
sub
ds
sbb
mov
pop
sbb
int
xchg
rolb
stc
lods
xchg
rcrb
dec
loope
sub
dec
pusha
push
pop
cltd
dec
sub
push
add
xor
xor
mov
aas
repnz
xchg
jle
sub
lea
js
out
pop
rcl
mov
mov
xchg
mov
ljmp
sbbb
push
jnp
and
std
ljmp
mov
xchg
iret
push
adc
or
arpl
lahf
hlt
mov
pop
push
sub
pushf
jmp
rcll
pusha
shrb
push
dec
adc
pop
loop
add
sbb
pusha
mov
push
mov
jne
insl
popf
cld
decl
mov
lcall
adc
jbe
call
xchg
lds
mov
ljmp
shrl
mov
fldt
pop
add
mov
or
mov
jmp
repnz
add
out
xchg
sub
or
mov
cmpsl
push
add
push
xchg
push
pop
xchg
rcrb
and
cmpsb
jle
jg
bnd
int3
lds
std
jp
inc
bound
jge
jge
add
aam
decl
xor
jns
adc
xor
sar
in
pop
mov
lcall
and
dec
sbb
loop
or
cmp
mov
lock
xor
and
fists
pop
loopne
ret
ljmp
andl
imul
jae
stos
mov
jecxz
outsl
enter
jge
jp
mov
jle
xor
loope
jp
fnstsw
outsl
pop
out
jl
subb
pop
leave
mov
das
xchg
fnstsw
mov
mov
pop
pop
mov
push
decl
dec
sbb
pop
arpl
aaa
imul
jp
incl
lcall
ret
inc
test
jbe
push
jl
andl
repnz
in
arpl
outsl
hlt
incl
jbe
push
outsb
dec
repz
arpl
cmpsb
int3
push
iret
shrl
pop
jg
dec
push
push
xchg
fdivrs
jns
roll
adc
decl
pop
incb
mov
mov
loopne
pop
rcl
and
aaa
cli
inc
xchg
mov
into
dec
pop
mov
lcall
das
jge
xor
imul
in
jae
nop
sbb
lods
fbld
pop
xchg
and
sub
lods
in
clc
loopne
sbb
mov
ljmp
and
or
testl
jmp
movsb
push
in
mov
push
xchg
jb
fisubrl
cmp
mov
jmp
mov
dec
and
dec
call
ret
out
push
hlt
cmp
or
push
cli
xchg
daa
adc
pop
std
xchg
stc
push
mov
imul
jno
adc
push
dec
ljmp
mov
add
out
jns
outsb
jb
inc
incl
pop
and
dec
lahf
arpl
sub
lcall
pop
xchg
cwtl
ret
sbb
push
or
sbb
out
push
cli
das
jge
adc
shlb
movsb
aas
xor
mov
inc
inc
fsub
dec
cs
test
inc
repz
jmp
sub
mov
cmc
lret
cmp
fiadds
std
push
push
test
lds
xor
xchg
cli
jg
mov
jae
push
push
out
jno
cmp
enter
cmc
sbb
lods
sub
imul
pop
daa
dec
lods
and
sarl
xchg
mov
insb
sar
add
movsb
cli
daa
imul
xchg
add
xor
outsl
dec
inc
inc
jns
mov
ss
push
xor
daa
push
dec
pushl
fcompl
stc
dec
inc
sub
fwait
push
xchg
popa
sub
sarb
bound
jmp
cmp
mov
jno
add
sarl
decl
fbld
imul
add
in
dec
testl
cmp
addr16
jbe
pop
shl
test
ljmp
sarb
leave
push
sbb
or
add
jmp
lretw
data16
int3
dec
pop
daa
dec
imul
push
add
and
mov
add
stos
adc
icebp
and
mov
mov
pop
push
ljmp
pushl
dec
jne
pop
adc
jge
stos
in
out
stos
insl
adc
cmc
repz
fdivrp
mov
stos
jg
dec
sub
mov
xchg
pop
int3
add
sub
int
fs
and
fisubrl
pop
xor
mov
mov
in
push
lahf
js
adc
xchg
pop
sti
outsb
pop
fcompl
movsb
les
adc
lock
imul
out
xor
cmp
adc
lods
das
inc
aam
push
jb
loopne
sahf
call
std
and
aaa
ret
in
ja
rorb
jecxz
mov
push
movsl
movsl
jmp
movsb
into
sar
test
pusha
xchg
add
gs
mov
xchg
mov
cmp
les
mov
mov
fwait
cmp
jmp
mov
roll
push
mov
in
jmp
jns
sbb
mov
xchg
xor
jmp
decl
push
rclb
or
mov
sahf
dec
sbb
aas
je
clc
sub
lret
jl
in
repnz
mov
popa
cltd
fistl
clc
pop
pop
mov
push
lods
jecxz
aaa
stos
or
dec
pop
add
adc
pop
lret
stos
popf
test
mov
pop
or
dec
cmc
fisttpl
fnsave
loope
cmpsb
sbb
xor
mov
mov
sti
scas
in
sub
jb
scas
push
push
jg
ljmp
xchg
xor
and
loop
and
sbb
call
cmp
mov
and
pop
sub
sub
xchg
add
mov
sub
adc
aaa
lcall
dec
mov
mov
mov
loop
orb
adc
add
nop
push
mov
lods
fisubrs
dec
leave
cmp
dec
pop
adc
pop
jno
outsl
xor
lcall
add
test
mov
and
and
xrstors
cmc
out
or
jg
decl
ret
pushf
and
inc
fstl
stos
mov
sbb
sub
decl
cmp
fcoms
push
adc
in
cmpsl
and
iret
out
das
icebp
call
lods
push
aam
inc
and
add
rol
divb
aad
in
jbe
aaa
mov
roll
ret
dec
mov
push
sbb
dec
cwtl
cld
in
decl
adc
insl
pop
orl
inc
les
pop
sbb
decl
fdivp
inc
xor
or
push
subl
addr16
fadds
mov
gs
mov
adc
fmull
xbegin
sarb
mov
orb
mov
mov
dec
mov
clc
sti
jl
mov
int
dec
push
std
sbb
mov
cmp
fisubrl
popa
sbb
xchg
and
pop
mov
and
ds
jnp
outsl
lock
clc
test
and
sub
cmpsl
shl
sub
das
jbe
push
stc
data16
jg
ds
fiaddl
xor
mov
jmp
fsubl
mov
imul
dec
mov
or
incl
mov
mov
flds
int
or
adc
sub
incl
scas
lods
cwtl
in
xor
fcomps
lods
into
jl
loope
adc
jg
mov
pop
ss
push
push
mov
or
mov
dec
sahf
xlat
push
aaa
pop
repz
aas
test
popa
shl
fdivr
mov
xchg
movsl
cmpsl
mov
ds
xor
mov
inc
flds
shll
fistpll
and
lret
pop
xchg
mov
add
xor
sub
out
push
lret
lock
pop
sahf
decl
in
pop
int
imul
jecxz
stos
lock
pop
popf
pop
out
sub
pop
jle
jmp
lods
mov
push
mov
pop
cmpb
xchg
lea
sub
xchg
jg
pop
sub
pop
out
mov
cld
bound
sub
xchg
clc
push
test
pushl
imul
and
pop
xor
mov
nop
popa
push
adc
mov
jl
ljmp
jg
inc
sahf
dec
jp
and
and
ret
std
pop
sahf
out
cmpsl
movsb
lds
scas
gs
add
jg
inc
lcall
fistpl
dec
dec
arpl
adc
jle
jmp
scas
decl
nop
dec
out
lods
xchg
test
gs
push
popa
hlt
mov
fwait
xchg
cld
in
call
andb
mov
xor
pop
out
fwait
sub
aad
cmpsl
mov
pop
xchg
es
cmpsl
roll
and
jg
or
adc
sbb
sbb
fdivrs
jge
mov
data16
push
les
jb
push
imul
add
dec
mov
sahf
pop
icebp
shll
leave
jp
enter
call
or
mov
scas
scas
inc
lds
ret
loopne
insb
fdivrs
push
fs
cli
call
pcmpgtd
int
ret
add
rolb
sub
add
pushl
add
out
sbb
fistps
stos
mov
subl
or
fimull
mov
mov
pop
loop
clc
xlat
jne
sarl
mov
inc
stos
decb
or
push
aas
mov
pop
sbb
shlb
stos
jnp
jo
decl
fucom
fs
enter
and
in
push
cmp
fs
mov
les
mov
mov
xor
mov
loopne
mov
xor
jecxz
cld
cmp
pop
inc
push
xor
mov
ja
or
mov
fs
jg
xor
jbe
push
sub
mov
loope
pop
dec
shlb
cmovp
xchg
fdivrp
xchg
cli
incl
jns
jae
rol
pop
push
mov
dec
pushl
cli
sub
xor
movsb
and
sbb
mov
nop
add
mov
incl
je
pushf
cmpsl
mov
and
out
mov
or
sahf
sbb
jecxz
imul
clc
sbb
testl
cmp
data16
fs
cmpsb
movsl
ljmp
dec
inc
ljmp
dec
dec
xor
push
lea
ljmp
mov
je
xchg
flds
pop
imul
inc
inc
cs
lods
test
call
xchg
stc
gs
sub
out
clc
or
jle
fistpl
inc
adc
cld
mov
adc
pop
xchg
cli
cmp
or
test
or
ljmp
jp
daa
inc
cmp
movsl
jae
cwtl
jno
cmp
incl
xchg
aaa
sub
testb
add
cltd
es
lods
pop
xchg
or
add
dec
xlat
test
call
push
ljmp
insl
int
addl
imul
dec
push
repz
pop
iret
test
jo
clc
mov
std
lcall
rorl
nop
jmp
sub
gs
mov
dec
loopne
imul
pushf
xchg
mov
test
out
arpl
pushf
pop
mov
cli
mov
jp
xor
mov
or
pushl
ljmp
mov
mov
jno
add
ds
adc
adc
sub
add
xor
adc
dec
mov
loop
lcall
aas
sub
inc
cmp
add
ss
xchg
sub
pop
insl
mov
mov
lahf
mov
push
aad
xor
jl
pop
cmp
pushl
lods
scas
dec
mov
ret
pop
jecxz
int3
int3
leave
aaa
cmpsl
int3
or
inc
xchg
add
jmp
and
inc
adc
shlb
jbe
ret
movsl
xchg
inc
lods
cli
mov
subl
sti
lcall
pop
jo
cmp
imul
sbb
add
imull
pusha
subb
pusha
add
in
mov
mov
inc
call
decl
shrb
jge
fistl
and
int3
push
sbb
fucomip
dec
lea
scas
dec
push
ljmp
mov
les
xchg
pop
push
or
repnz
pop
xchg
add
lods
mov
mov
sbbb
pushl
mov
dec
jno
movsb
mov
call
mov
outsl
push
lcall
lock
push
add
push
pop
out
push
ljmp
lock
and
js
jnp
jo
cmpsb
ss
sub
mov
notl
adc
xor
dec
clc
aas
mov
stos
rorl
jl
sbb
decl
mov
xor
mov
mov
idivl
jnp
out
les
jg
mov
sub
frstor
lcall
stos
insb
movsl
fstps
xchg
add
std
jg
sub
mov
xlat
ret
and
mov
rcrl
aas
and
sbb
fdivr
pop
mov
repnz
adc
or
call
jns
xchg
pop
mov
xor
loope
xor
push
xor
add
decl
push
hlt
int3
cmp
xlat
adc
aaa
mov
mov
lock
pushf
jbe
xor
xor
push
imul
arpl
sub
ljmp
push
mov
cmc
je
sbb
dec
jge
mov
xor
or
fmull
neg
jle
sub
mov
fs
add
dec
xorb
jg
std
decl
jb
mov
mov
push
mov
aad
xchg
movsb
es
cli
in
jge
dec
mov
sbb
jno
mov
sbb
into
ss
inc
inc
pusha
inc
in
xchg
sbb
or
cmp
jg
cmpsb
test
xor
mov
jp
and
cmp
xchg
leave
sti
call
pop
jne
into
shrb
xchg
scas
xchg
aaa
int3
adc
aad
repnz
ljmp
push
js
cs
aad
idiv
fsubr
dec
nop
mov
cmc
insb
js
push
fwait
mov
bound
and
mov
dec
incb
jg,pn
push
mov
pop
add
sub
call
ljmp
mov
iret
inc
cmpsb
push
pusha
inc
aam
cmp
sub
push
ret
repz
ljmp
call
mov
sbb
fcomp
cmp
pop
jne
push
pop
push
add
sbb
lea
fst
pop
lret
pop
dec
push
popl
cld
cmp
xchg
xchg
sub
imul
mov
movsb
lcall
into
xchg
add
cmpsb
or
add
mov
stos
add
jne
aam
ljmp
mov
mov
pop
std
adc
leave
aam
push
jne
inc
call
mov
mov
or
ljmp
sbb
push
movsb
xor
imul
cmp
mov
xchg
je
lret
inc
jbe
cmpb
push
add
mov
pushl
in
aad
sub
cmpsb
call
repnz
mov
jle
cltd
enter
mov
jmp
fwait
sub
push
lahf
or
popa
ja
inc
nop
or
ljmp
lcall
pop
cwtl
pop
addr16
or
aaa
insb
mov
daa
imul
and
sub
add
inc
ja
aam
sub
mov
stc
mov
sbb
dec
mov
clc
dec
cli
jl
or
test
and
dec
dec
mov
call
cmp
and
gs
and
popa
decl
jne
and
adc
cmp
imul
rolb
in
cli
ljmp
jp
mov
andb
test
cli
sti
pushf
sbb
call
xchg
sub
pop
out
xchg
adc
outsb
xchg
jmp
sti
mov
loop
pusha
and
xor
or
mov
in
push
sub
das
adc
popf
insl
int3
repz
xchg
ret
jns
cmp
mov
sti
out
fidivl
sub
pushf
sub
xorl
add
inc
mov
push
push
ret
test
cmpsb
in
inc
pop
fwait
gs
push
cmp
pusha
jo
mov
cmp
aam
xor
push
mov
sbb
lret
mull
ficomps
adc
xchg
pop
je
sar
mov
movsb
fistl
jnp
loopne
rcrb
insb
cmp
mov
pusha
mov
sbb
jb
xchg
dec
xchg
rcrb
push
clc
clc
pop
ljmp
and
mov
out
and
nop
push
xor
das
add
mov
stos
clc
incl
loope
movsb
out
hlt
jne
push
pusha
stos
enter
incl
js
loop
stc
sbb
lock
lds
int
xchg
jmp
and
stc
inc
mov
pop
mov
sub
mov
mull
inc
or
cld
incl
dec
push
dec
leave
jns
jb
mov
mov
test
pusha
ss
rcll
push
mov
incl
fsubs
outsl
xor
je
test
cmc
aaa
inc
sub
lret
ljmp
jb
lret
inc
xchg
jp
add
sbb
xchg
fimuls
out
mov
fmull
fidivl
inc
pop
push
pop
pop
shrb
jno
jmp
fimuls
or
iret
mov
popf
jb
mov
es
push
cmp
pop
lock
mov
or
rcrl
jmp
xchg
loopne
sbb
mov
pop
mov
xor
incb
test
testb
sti
cmp
adc
pop
push
lcall
or
popa
sbb
movsb
iret
lods
clc
hlt
call
jmp
sbb
sbb
mov
cmp
les
sarl
or
pop
arpl
jne
aaa
cli
cld
xchg
lahf
xor
in
jmp
mov
dec
mov
mov
mov
jo
jg
mov
daa
jecxz
xor
mov
mov
call
jmp
movsl
les
outsl
jno
gs
pushl
xor
movsl
dec
lock
dec
incl
clc
les
xor
push
data16
add
mov
push
je
push
rclb
jmp
xor
push
daa
xor
scas
dec
flds
dec
pusha
lahf
scas
add
add
sub
add
or
rcrl
mov
mov
sbb
fcomp
mov
lea
inc
mov
aad
rclb
push
out
sub
fbld
cmp
sbb
mov
lcall
pop
leave
xor
mov
sti
xlat
mov
inc
mov
cmpsb
fists
mov
mov
sub
mov
push
cmp
pushl
mov
dec
ret
ss
jp
mov
xchg
xchg
xchg
decl
imul
outsl
add
bound
test
xchg
and
outsl
cld
mov
xor
outsb
jbe
mov
and
aas
push
push
xchg
jecxz
cwtl
xlat
mov
adc
pop
sbb
fmuls
mov
icebp
aas
shl
in
test
decl
ficoml
insl
inc
mov
mov
push
lock
xlat
inc
adc
decl
push
ss
fadds
outsb
xlat
aaa
inc
jecxz
or
test
jae
xchg
push
adc
incl
mov
in
xor
enter
iret
call
sbb
xlat
in
lcall
jne
and
loope
and
outsl
add
mov
push
lds
push
lret
cmp
repnz
adc
cmp
cwtl
cld
rcl
loope
in
xchg
mov
or
roll
inc
mov
sbb
jmp
cmc
sub
and
mov
xchg
or
mov
adc
add
insl
subb
jl
push
leave
and
rorb
xchg
cli
call
bound
cmp
lret
mov
inc
fdivl
mov
jmp
mov
adcb
ja
jecxz
test
loopne
jecxz
adc
pop
cli
aaa
cli
cmpsb
push
loopne
in
adc
addr16
xchg
ret
decl
xchg
std
mov
xchg
mov
imul
lock
push
popf
mov
xor
add
pop
or
incl
shll
fwait
in
mov
stos
fiaddl
loopne
push
mov
push
data16
inc
pop
dec
inc
lret
scas
aaa
xor
insb
call
push
xor
jl
lods
int3
inc
cmc
fisubs
jbe
jae
sbb
add
push
mov
xchg
loopne,pn
sbbb
push
jp
test
clc
and
pop
cmp
xor
inc
rorl
jb
pop
aaa
pop
inc
cmp
xchg
out
push
pop
imul
pop
mov
testb
arpl
xlat
sub
jmp
push
xlat
loopne
sub
jl
call
int
sub
add
jbe
xchg
int
push
jp
lods
sbb
sbb
sbb
adc
ja
mov
stc
jge
int3
adc
dec
dec
test
stc
sbbl
jbe
adc
jg
sbb
sub
jo
push
xor
ret
das
aas
jecxz
ljmp
cmpsb
push
mov
int
lods
and
lret
outsb
pop
lods
clc
test
repz
or
icebp
sbb
repz
cmp
pop
pop
mov
add
pushl
clc
sar
or
incl
dec
icebp
pop
daa
lods
inc
icebp
call
cld
test
imul
fistps
outsl
jnp
dec
push
fbstp
inc
xchg
mov
int
cs
adc
negb
shrb
jmp
xchg
clc
sub
aam
mov
pop
fbstp
push
jnp
das
cmc
dec
jb
cmpl
inc
mov
push
add
cs
sahf
xchg
sbb
shl
lods
aas
jl
incl
nop
jp
mov
dec
clc
test
mov
adc
loope
inc
in
xor
repz
fucomip
ljmp
cmp
inc
xchg
pop
insb
js
xchg
jp
mov
jg
mov
xchg
pop
fdivs
push
test
test
jns
mov
popf
loope
call
pushf
pop
fwait
mov
jnp
push
fcompl
pop
out
icebp
jg
xor
mov
lds
adc
lcall
in
arpl
fldt
cld
lea
aam
sbb
inc
lea
mov
add
cs
hlt
fistpl
inc
mul
clc
cltd
mov
cmp
pusha
mov
pop
loop
or
pop
es
sbb
es
cmp
mov
jg
adc
and
stc
mov
xor
pop
ret
dec
add
and
pushl
lahf
xor
movb
sti
xor
shr
sub
mov
jne
shlb
mov
stos
xchg
mov
das
or
xchg
and
cmp
dec
pop
outsl
lock
push
or
cld
lcall
scas
icebp
dec
push
lods
jecxz
xlat
rcr
test
cli
inc
mov
push
das
sti
push
xor
int3
stc
decl
cld
in
pop
mov
mov
push
mov
jb
sub
xor
loope
cld
lea
adc
imul
adc
orl
pusha
mov
lods
and
pop
inc
xchg
ss
mov
lcall
test
adc
cmpsl
and
sbb
xor
pusha
aad
mov
stos
rcrl
sbb
incl
mov
repnz
add
sbb
adc
test
jmp
jnp
push
sbb
scas
jb
ffree
mov
sbb
fldt
lods
movsb
sti
ror
mov
mov
mov
xor
stos
vpinsrw
inc
scas
ficoml
adc
pop
rol
out
mov
pushl
push
ss
sub
lds
jecxz
fistpll
adc
jb
cs
out
push
pop
int
jp
lods
pop
adc
fwait
popa
fnsave
fisttps
test
add
aam
xchg
outsl
jo
or
in
outsl
hlt
cmp
dec
insl
int3
inc
cltd
mov
test
cmc
dec
cmp
outsl
enter
inc
cltd
into
je
lods
lods
jae,pn
iret
outsb
jmp
fstpl
nop
pop
rcl
and
or
incl
cmp
fdivs
cld
mov
pop
negl
cli
mov
mov
jb
dec
js
dec
mov
icebp
in
cld
ljmp
xor
sar
aaa
xchg
in
adc
add
inc
mov
cmp
sbb
inc
push
or
jg
mov
dec
popf
cmpsb
xlat
or
lahf
movb
mov
outsl
jmp
out
mov
loope
pop
movl
popa
mov
or
in
imul
loopne
dec
sub
mov
push
scas
pop
repz
cmp
movsb
sbb
bound
sub
adc
mov
es
mov
sub
ljmp
xchg
sub
fildl
sbb
sub
lock
cmp
mov
icebp
nop
dec
nop
inc
negb
inc
lock
call
add
push
clc
shll
jmp
inc
arpl
fisubl
xchg
rcrb
ljmp
repnz
cmp
sub
mov
imul
xor
and
aas
lret
hlt
sarl
jbe
orl
fisubrs
lahf
lea
mov
and
pushf
stos
push
cmp
cmp
test
call
jmp
sbb
or
jmp
xor
xor
negl
test
fildll
subb
or
push
fs
out
mov
mov
decl
cmp
sbb
add
add
popf
scas
add
jp
push
inc
mov
sar
dec
and
sub
push
dec
mov
out
insl
cmp
mov
sub
mov
sbb
icebp
std
mov
mov
fimull
add
sub
cmc
jle
in
dec
loope
scas
fbld
repnz
lret
outsb
cwtl
jo
out
jp
outsb
sti
iret
jmp
stos
je
arpl
push
or
pop
mov
xchg
roll
lcall
jmp
dec
je
cmc
lods
adc
insl
jg
test
shlb
add
inc
cmc
jge
adc
cli
push
adc
mov
gs
bound
inc
xor
das
jg
xor
inc
sub
xchg
lahf
icebp
pop
aam
inc
incl
or
jbe
gs
lahf
pop
xchg
jle
sarl
popf
xchg
loop
lcall
std
decl
loopne
mov
jae
stc
mov
stc
inc
sub
js
push
pop
xlat
dec
mov
mov
loopne
mov
js
inc
lret
and
sbb
jb
jmp
pushf
pop
fcomi
sahf
xchg
pop
ljmp
adc
je
fwait
sub
or
pushl
push
repz
in
fcmovne
dec
fwait
cmp
les
fcom
gs
insl
loope
sbb
cwtl
dec
inc
incb
cmp
mov
add
stos
sub
xor
cld
cld
push
push
int
pushl
cltd
mov
repz
cmp
cmp
inc
inc
and
mov
inc
aam
dec
stc
fdivrl
jg
jmp
out
bound
cmp
test
sbb
pusha
ss
rolb
aas
inc
fdivs
int
in
jp
dec
mov
mov
mov
ret
pop
jl
pop
lds
das
xchg
decl
mov
les
add
jb
cmp
xchg
je
inc
repz
ljmp
ret
jg
push
add
mov
mov
and
cli
stos
into
lods
jne
mov
in
push
mov
cld
jmp
rcrb
outsl
pop
loop
mov
pop
js
cltd
pushf
mov
incl
mov
add
inc
xor
push
lahf
dec
in
cs
jge
dec
mov
decl
jl
push
mov
or
jle
movsb
push
loope
loope
push
in
aad
fildll
cld
test
push
adc
cmp
int
push
sbb
sub
adc
xor
lcall
xchg
and
sub
icebp
imul
aas
std
mov
test
sub
fsubr
adc
in
mov
push
hlt
std
movsl
dec
xchg
sbb
fadd
jbe
jnp
cmp
mov
incb
push
hlt
mov
xchg
push
pushf
push
or
scas
mov
lock
mov
shr
adc
cmp
fucomip
mov
shlb
subl
jns
adc
push
jns
std
call
imul
aaa
inc
jl
and
xchg
dec
stos
lods
int
ljmp
test
xchg
mov
lcall
dec
cmp
loopne
rcrb
jge
sbb
pusha
dec
mov
call
hlt
and
push
pop
aas
lds
sar
inc
dec
rcll
jo
rol
cli
lods
faddp
cmc
push
mov
test
sar
lods
fisttps
hlt
jo
shrl
or
or
mov
repz
push
adc
sbb
jg
cmc
call
jg
mov
gs
es
rorb
and
rorb
mov
cmp
jae
adc
sbb
movsl
add
pop
mov
fs
mov
cli
cmp
ret
aas
lahf
add
outsb
xor
jmp
stos
sbb
mov
jnp
push
cmp
loope
xor
xchg
inc
push
ret
cmpsl
sub
idiv
jg
and
out
es
adc
jae
dec
and
sbb
push
and
jg
ljmp
inc
xor
imul
dec
outsl
repnz
daa
pop
mov
cmp
push
incl
mov
mov
mov
stos
sbb
clc
das
mov
scas
ljmp
mov
je
jp
ret
mov
mov
xchg
push
fsubr
addl
push
fs
pop
lods
in
sbb
test
lcall
ljmp
insb
add
insl
shll
xor
pusha
pusha
ret
mov
cmp
movsl
outsb
std
mov
xchg
dec
push
dec
inc
push
adc
jne
je
decl
add
xchg
jmp
movl
pop
call
inc
xor
popf
lcall
cli
scas
and
movsb
push
mov
movsb
setnp
mov
fwait
outsb
inc
cltd
cwtl
mov
movsb
out
js
pop
insl
mov
data16
mov
or
sarl
test
xchg
lret
pushl
xor
clc
and
inc
and
jmp
iret
das
and
jmp
jmp
xchg
shlb
xchg
inc
cmp
adc
pop
adc
ljmp
cmp
rorb
xor
testl
sub
lcall
test
dec
sbbb
lcall
gs
sti
and
pop
sarl
or
decl
ret
pop
dec
scas
push
dec
or
push
cld
mov
dec
cwtl
sbb
movsb
imul
das
push
push
jp
je
mov
jg
or
jmp
mov
xchg
mov
popa
cs
cmp
and
inc
movsl
mov
ljmp
jno
adc
mov
add
push
dec
orl
call
add
jle
dec
js
repz
push
dec
jp
and
pop
inc
and
pop
stos
outsl
sub
lods
xchg
aas
pusha
add
xchg
cwtl
enter
lahf
add
bound
fs
mov
dec
adc
in
cmp
cmp
ffreep
mov
leave
sbb
pop
and
add
decl
pop
fisubs
lahf
mov
mov
jg
mov
push
mov
xchg
fldt
scas
xchg
mov
out
mov
subb
mov
mov
loop
clc
test
out
movsb
add
lods
mov
call
clc
inc
jp
cld
decl
lcall
lahf
mov
test
ljmp
xchg
dec
fstp
mov
add
rol
xchg
test
adc
repz
mov
push
repnz
arpl
lret
leave
mov
ljmp
sub
push
jg
outsl
adcb
push
mov
cltd
dec
test
sar
cmp
mov
push
sub
sar
ljmp
sbb
arpl
or
xchg
mov
std
push
call
cmp
add
xchg
sub
xor
pop
pushf
jns
cmp
mov
dec
jae
popf
std
jp
ret
in
lds
mov
dec
lret
and
and
aam
pop
fsubrs
es
and
incl
mov
ret
std
outsb
daa
aam
inc
sub
repnz
mov
fadd
dec
xor
decl
push
mov
rcl
cmp
es
test
mov
decl
cld
in
xlat
xchg
icebp
popf
rcr
xchg
mov
fadds
adc
xor
inc
xchg
dec
and
das
lock
pop
mov
sbb
outsl
mov
pushl
adc
out
sub
pop
shrb
into
push
lods
rcrl
fwait
lods
cs
mov
mov
idivl
jp
inc
xor
loop
in
repz
pushf
mov
push
into
outsl
ret
adc
icebp
fdivs
ffree
fucomip
cmp
and
sbb
incb
push
mov
loope
jle
mov
rol
mov
ficompl
add
mov
inc
jg
outsl
icebp
jnp
add
cli
icebp
or
xor
push
mov
or
xchg
ret
mov
push
sbb
xor
ljmp
insl
lcall
inc
sub
mov
aad
jmp
push
jae
loop
ret
mov
sub
and
lcall
mov
fwait
popf
jne
scas
pop
mov
aad
or
leave
cmp
std
cmp
cmp
in
xchg
hlt
outsl
fldpi
inc
adc
subl
icebp
fsubs
gs
mov
into
xchg
sub
cmpsb
xorl
inc
jg
test
xlat
mov
push
lcall
pop
push
incl
in
in
or
jns
out
shr
dec
fimuls
leave
inc
or
hlt
jle
dec
cld
js
adc
sahf
es
mov
and
mov
dec
push
test
addr16
js
push
jbe
sbb
into
xor
in
pop
cmp
cld
pushl
add
inc
push
lds
aam
push
repnz
push
mov
lock
decl
dec
cmp
fstl
neg
sub
jae
mov
aaa
aaa
mov
call
sbbb
out
incb
lahf
jo
es
or
or
ja
incl
bound
mov
rcrb
dec
popf
fwait
aaa
fsubr
lcall
out
mov
lcall
add
lret
sarb
out
int
test
roll
add
mov
dec
daa
push
decl
adc
adc
test
filds
fs
push
lcall
fidivrl
rcrb
sub
cwtl
mov
xchg
js
inc
jno
testb
insl
and
xchg
sbb
adc
dec
stos
inc
cmp
aad
xchg
outsl
or
push
imul
rcll
jmp
cmc
mov
in
xchg
mov
fsubs
ljmp
int3
test
mov
pushl
das
pop
orl
mov
cmovo
ja
lock
jg
inc
jnp
cbtw
insb
adc
add
add
jmp
pop
xor
xchg
lods
pop
mov
push
int
xor
xor
xor
rorl
pop
mov
sbb
loop
jns
mulb
sti
fnsave
xchg
mov
lods
mov
pop
clc
mov
jle
sbb
fidivrl
out
jbe
stc
mov
adc
ftst
decl
sbb
add
push
and
mov
lcall
dec
imul
jge
sti
addr16
mov
iret
mov
push
imul
call
or
jg
pop
xchg
stos
pop
pop
ror
inc
push
repnz
inc
cmp
pop
cld
lcall
add
xorl
pusha
lcall
add
pushf
fwait
aam
test
nop
leave
inc
push
pop
cli
pushl
and
hlt
adc
mov
enter
mov
in
movsb
scas
xor
pop
mov
call
icebp
jbe
pop
jle
and
insb
sub
or
daa
push
das
sub
inc
mov
shrb
lds
stc
sbb
jns
lcall
or
mov
push
stos
mov
insb
dec
aaa
ja
scas
xor
dec
stos
decb
lcall
aam
sub
call
pushf
sbbl
xor
lret
pop
lods
popa
flds
mov
loopne
sub
dec
cmc
or
xrelease
ds
xchg
bound
jb
pop
cmp
cmc
test
loop
aaa
out
push
pop
sbb
shll
hlt
sub
pushl
ficomps
xor
mov
imul
nop
jl
cs
add
pop
xor
popf
jnp
or
pop
dec
ljmp
jmp
pop
adc
das
jae
imull
mov
aad
test
out
xor
cli
inc
sub
lods
in
lcall
fldenv
hlt
loope
ss
in
into
imul
dec
roll
jno
ljmp
xchg
and
xor
pop
mov
lods
cwtl
xchg
mov
scas
pushl
call
dec
mov
mov
pop
xchg
jno
jle
mov
and
outsb
sbb
ljmp
std
inc
mov
aam
repnz
test
mov
and
test
push
mov
pop
cld
out
int3
push
leave
add
pushf
fstl
popf
cmp
cmp
imul
aam
addr16
xchg
sbb
mov
jg
cmpsl
sti
sub
pop
push
vxorps
std
jbe
push
mov
xor
jne
add
lods
dec
test
mov
dec
pop
mov
sub
cli
mov
push
pop
mov
sbb
in
mov
pop
fwait
cmp
jl
psrld
repz
inc
clc
inc
inc
outsl
lock
insb
out
xchg
xchg
hlt
lret
push
lock
push
out
xchg
aaa
mov
mov
mov
mov
xchg
popl
das
std
pop
adc
int3
pop
lret
stos
sub
int3
icebp
data16
decl
js
push
push
xorl
out
subl
mov
mov
out
sbb
pop
and
in
jne
or
sbb
or
adc
dec
add
mov
lret
or
jbe
mov
ljmp
outsb
sub
add
add
mov
ud0
mov
jne
inc
xchg
mov
rcl
pop
loope
in
add
addb
sub
ljmp
mov
xor
lret
lret
inc
jo
ja
inc
adc
jge
jg
mov
gs
adc
jne
pop
jg
loopne
insl
pop
jl
xlat
pop
jo
test
mov
mov
and
pop
jg
orl
adc
shll
mov
sti
cmpsl
inc
dec
or
adcb
or
cs
ja
inc
pop
sub
xchg
push
cmp
xor
or
lret
sbb
cltd
lahf
mov
mov
out
or
adc
mov
jg
ljmp
jecxz
fcmovne
lods
call
xor
pop
jl
xor
cmp
in
inc
incl
jp
sahf
inc
icebp
aas
cltd
xchg
hlt
fnstenv
mov
dec
stc
sbb
sub
mov
incb
inc
mov
imul
in
sbb
add
lcall
orl
mov
fs
cmp
mov
cmp
cwtl
sbb
inc
sub
ljmp
jae
and
push
aaa
outsl
push
divb
div
xor
sbb
jmp
fists
cli
lcall
iret
sbb
icebp
mov
pop
jge
gs
cmp
or
pushl
inc
or
and
xchg
xchg
pop
dec
imul
fadds
xchg
sbb
jmp
das
add
mov
jl
imul
icebp
add
repnz
jns
jmp
cmp
mov
push
or
mov
ljmp
push
jbe
in
daa
xchg
aam
insb
repnz
lds
sarb
popf
push
adc
jg
pop
inc
hlt
push
stos
fsubs
movsb
push
out
jno
mov
cmc
and
stos
cli
push
mov
das
jp
sub
mov
gs
loope
xchg
cmp
test
sbb
insb
inc
jae
rolb
fistpll
sub
mov
jbe
lods
hlt
ljmp
loope
scas
loope
out
push
dec
cltd
push
popw
mov
gs
push
add
xor
aaa
test
lcall
shlb
inc
push
mov
push
push
fistps
cli
out
shrb
lods
fnsave
cs
adc
fldl
add
push
call
repz
sub
sbb
mov
int
fucomip
adc
imul
cmp
stc
sbbl
push
adc
dec
cld
call
pop
push
fwait
mov
sbb
cld
mov
mov
adc
aaa
clc
ljmp
hlt
mov
pusha
fstl
addr16
adc
pushl
mov
ss
mov
sub
shll
adc
jg
fdivrp
fwait
jns
xchg
cmp
mov
push
aam
and
and
sbb
mov
aas
inc
pop
sub
clc
in
hlt
mov
xchg
mov
ljmp
in
or
dec
loop
dec
cld
sti
mov
mull
je
mov
sbb
int
insb
cld
out
xchg
mov
pop
push
pop
xchg
push
jb
pop
sar
jmp
sbbl
xchg
push
iret
aas
cwtl
cli
lock
sub
cmp
jecxz
or
loop
dec
mov
adc
enter
push
push
pop
dec
or
outsl
hlt
inc
bswap
cmpsb
js
jp
test
iret
fucomp
ret
xor
insb
arpl
mov
outsl
ret
aas
pop
aad
clc
sub
outsl
shll
or
incl
movsl
and
xchg
enter
sarl
into
inc
pop
repnz
adcb
or
dec
mov
lcall
mov
mov
sbb
hlt
rcrb
mov
incl
addl
mov
cmp
jmp
and
sub
cmp
lcall
push
repnz
mov
in
adcb
fs
imul
into
jmp
stos
test
mul
movsl
aas
pop
mov
cmpsl
push
xchg
push
or
out
mov
filds
std
cmp
call
daa
fldt
xor
cld
jecxz
mov
inc
outsb
jb
ljmp
push
in
popa
lods
stos
sahf
testb
inc
divb
adc
call
fnsave
je
mov
testl
pop
lcall
dec
mov
mov
push
cmc
or
int3
mov
insb
mov
jg
mov
fs
push
out
cmp
dec
or
jno
dec
mov
rorb
sbb
push
loop
dec
jg
nop
ljmp
icebp
std
mov
cs
xor
or
gs
add
aad
jo
cmpsb
das
hlt
mov
lds
push
mov
fistpl
adc
cmp
stc
jae
jg
and
loop
sbb
sub
mov
in
inc
and
xor
mov
adc
or
fsubs
repz
enter
out
inc
test
fildl
xchg
mov
repz
in
mov
and
in
mov
std
lcall
punpckhbw
jmp
out
and
mov
aad
aad
decl
sub
add
sub
daa
lods
inc
mov
clc
sub
jg
jl
ds
cli
inc
or
or
mov
pop
out
into
cmp
jns
jg
and
movsb
outsb
jno
fwait
sub
insl
insl
jg
sbb
mov
dec
push
aaa
loop
or
int3
scas
pop
adc
mov
jecxz
data16
jle
jp
sub
pop
mov
clc
jmp
cmp
sbb
pop
dec
shrb
sbb
cmp
xchg
sbb
jg
push
mov
or
xchg
sbb
pop
mov
iret
nop
push
decb
orb
inc
clc
jne
ljmp
std
jne
in
lret
mov
insl
or
outsb
pop
or
stos
insl
or
push
pop
mov
fmull
lods
into
add
mov
ljmp
insb
in
leave
iret
repnz
mov
pop
mov
jne
push
xchg
decl
jo
pop
ret
popf
in
xlat
lods
cmpsl
sub
fwait
movaps
pusha
outsl
inc
std
ljmp
outsl
xorl
mov
subb
lea
sub
js
sbb
jae
adc
fsubrs
sbb
cmp
jns
fnstsw
mov
push
cmp
bound
rcrb
test
hlt
rcrb
xor
insl
mov
lea
out
or
mov
lock
mov
sbb
clc
mov
sub
jo
imul
outsb
insb
stos
pushl
fisubs
pop
inc
mov
leave
sbb
mov
jecxz
cli
std
dec
sti
xor
cmc
mov
inc
jne
lret
adc
test
inc
fsubs
ljmp
jp
push
insb
cltd
mov
mov
std
insb
negl
hlt
or
mov
outsl
hlt
insb
sub
add
xor
jle
push
arpl
xchg
mov
mov
sub
pop
sti
or
mov
xor
push
cltd
inc
push
adc
cmpsl
and
push
in
mov
sbb
mov
jg
movl
sbb
sub
test
sub
and
and
adc
and
sbb
push
mov
popa
xchg
and
mov
xchg
mov
mov
cmp
pop
scas
jp
addr16
dec
out
mov
icebp
dec
cmp
adc
clc
ljmp
jle
xor
rcrb
add
sub
mov
out
inc
push
std
incl
lahf
in
mov
push
lea
roll
mov
mov
xchg
xor
sbbl
outsb
jle
or
sbb
outsl
add
outsl
int
jae
addr16
push
sub
das
rcl
add
sahf
fisttps
and
fisttps
fldcw
jg
int3
pop
subb
cmp
xor
decl
jg
jle
popa
addr16
movsl
icebp
mov
das
jmp
lret
stos
cmp
inc
xor
push
sub
jb
mov
jmp
dec
imul
push
icebp
and
fnstsw
repz
cld
pushl
jge
ss
jo
and
lods
dec
call
out
leave
lcall
mov
pop
andl
inc
cmp
sbb
decl
add
lds
inc
xchg
cmp
xorl
in
in
jg
test
push
imul
outsb
push
int
jae
mov
xor
jnp
fldt
pushl
xor
icebp
cs
in
mov
xor
mov
lds
sub
outsb
test
and
shrb
call
xor
cltd
push
js
test
or
push
stc
and
mov
sti
sbb
shufps
xor
out
add
push
sub
notl
outsb
ja
loopne
movsl
pop
nop
jnp
decl
pushl
mov
fcompl
roll
sbb
aam
push
popf
cmp
pop
test
test
lcall
xchg
pop
sti
and
xchg
fisubrl
xchg
into
neg
scas
bound
sub
add
pushl
pop
pushf
loop
jmp
mov
xchg
pop
insl
lcall
adc
test
das
dec
jbe
repz
sbb
push
sub
in
lea
add
mov
jmp
ja
repz
or
ss
imul
rclb
ljmp
ljmp
push
scas
xchg
imul
inc
jmp
sti
incl
lods
push
inc
adc
js
pop
xchg
mov
insl
jl
adc
xchg
jg
push
adc
mov
es
and
arpl
xor
fimull
fimuls
cwtl
jg
lods
xchg
lock
cmp
aad
rol
mov
pop
testb
push
hlt
dec
mov
leave
imul
mov
mov
incl
jae
sub
test
add
cmp
jg
enter
rclb
mov
test
insl
fcoms
inc
std
fs
sbb
idiv
mov
in
loopne
leave
cmp
rclb
jae
or
inc
pop
ja
mov
call
clc
adc
in
repz
xchg
bnd
inc
xor
test
ljmp
arpl
xchg
push
adc
imul
adc
mov
aad
sub
push
fdivs
arpl
ljmp
pop
adc
pusha
int3
insl
pop
lods
mov
pushf
or
cmp
std
scas
ret
aaa
jp
ss
jecxz
je
gs
cltd
js
das
push
in
or
decl
xor
addr16
push
stc
push
loopne
xchg
and
push
push
jne
loopne
mov
dec
pop
out
fs
jo
or
das
test
outsl
add
sti
mov
mov
inc
jmp
in
fwait
test
test
fcmove
sbb
out
xchg
mov
lret
jg
adc
push
mov
ret
and
scas
aad
dec
cld
in
pop
mov
push
push
bound
jle
mov
jp
cmp
fldt
ffreep
loope
inc
js
xchg
faddl
outsl
cmc
sub
jp
xor
inc
or
sub
scas
and
decl
mov
adc
stos
ss
mov
and
lods
cmp
xchg
out
jns
mov
cmpsl
cmpsb
repz
push
xchg
iret
xor
fstl
mov
jne
jle
push
jmp
pop
mov
stos
addb
mov
add
adc
fucomip
jns
out
sub
sbb
rol
pop
sub
popf
call
inc
lcall
cs
mov
js
xchg
xchg
mov
mov
push
adc
imul
push
adc
cmc
lret
daa
dec
xchg
cli
xorb
fisttps
imul
push
dec
jnp
stos
outsl
cmc
pushl
leave
mov
or
push
push
push
pop
adc
aam
lcall
std
filds
sub
fwait
xor
vpaddd
ljmp
popf
inc
adc
push
test
mov
jae
dec
or
mov
mov
mov
xchg
sub
xor
inc
mov
mov
int
cmpsb
std
cli
enter
mov
adc
sub
mov
lds
lret
xchg
test
jle
jns
or
jge
adc
into
cld
push
add
mov
movsb
test
push
rclb
cltd
jb
xchg
clc
movsl
dec
or
add
mov
imul
add
movsl
ljmp
xchg
mov
inc
into
lock
pop
inc
lcall
mov
mov
fsubs
dec
push
lds
cmp
ds
jmp
mov
sbb
loope
dec
pop
loop
jecxz
add
pushl
ret
pop
adc
jae
jmp
adc
loope
mov
sarb
incl
int
mov
aaa
adc
addr16
decl
xor
dec
lcall
xchg
or
or
out
call
ljmp
jb
call
ret
cmc
dec
dec
adc
inc
testl
in
psubw
dec
jb
sbbl
push
addr16
shr
jo
adc
insl
call
inc
adc
inc
pop
hlt
dec
sbb
cmpsl
not
outsl
add
add
mov
adc
mov
int3
aam
fidivs
inc
jbe
pop
push
add
arpl
mov
pop
sbb
xchg
dec
leave
jl
fcmovnbe
int3
cmpsb
pop
subb
cmp
sar
sub
outsl
insl
daa
push
cld
cmp
pop
cltd
pop
jae
and
movsl
sbb
sub
incb
lret
inc
mov
jno
test
xchg
sbb
outsl
push
dec
movsl
scas
jecxz
movsl
lcall
mov
mov
push
xor
adc
inc
lret
inc
mov
loop
adc
imul
mov
jnp
sub
ljmp
cmc
je
mov
pop
and
rcl
rcrl
jmp
neg
aas
rcl
in
daa
xchg
add
inc
xchg
ds
xchg
in
xor
clc
insb
ret
and
orb
or
test
sub
movsb
loop
and
adc
out
pusha
aaa
out
lea
call
and
sub
xor
in
ret
lods
jae
cld
out
dec
or
cmp
mov
dec
jmp
roll
in
pop
add
pop
xchg
lcall
das
decb
lret
popf
fs
imul
negb
test
imul
add
data16
imul
je
xchg
out
sub
lods
decl
jne
scas
inc
add
int3
pop
lar
inc
sub
rcr
or
mov
lahf
pop
mov
lret
loop
addl
mov
int3
mov
fdivrs
sar
lods
xchg
aas
lcall
in
shrl
xchg
jecxz
lods
and
xor
fcomps
sar
decl
lret
xlat
test
jmp
test
mov
mov
in
sbb
jns
stos
shrb
fimuls
mov
pop
shrb
test
decl
jnp
pop
inc
mov
cli
pop
mov
scas
fldt
mov
aam
jle
loop
sub
mov
les
fildll
pop
push
mov
aaa
inc
dec
mov
test
mov
adc
pop
es
pop
adc
aam
xor
movsl
rcr
shlb
mov
mov
cmpsb
jg
mov
std
mov
mov
mov
test
push
dec
fsubrl
dec
push
push
add
ljmp
ja
push
xor
mov
push
ss
dec
pop
sub
cmc
rolb
vmovdqa
mov
in
adc
sub
sub
pop
aam
les
jecxz
sub
cmp
clc
fisttps
mov
popa
addl
adc
and
push
stos
jge
mov
jb
sub
inc
mov
mov
mov
or
das
lahf
jg
call
ss
in
xorb
xor
mov
mov
cmp
loop
jge
jb
iret
js
es
pop
fdivr
pushl
or
divl
jnp
xor
add
jmp
insb
mov
jmp
and
add
sub
int3
jecxz
mov
xor
dec
fsubr
xchg
pushl
movsl
push
sub
xor
mov
mov
lahf
stos
jle
into
idiv
decl
lcall
lods
sar
repz
sub
mov
jge
inc
out
mov
or
outsl
cmc
incl
arpl
imull
popa
aas
mov
clc
fnstsw
push
sub
and
xor
add
jg
mov
pop
test
pop
loopne
fcmovne
xor
jo
movsl
xchg
sbb
xchg
xchg
and
or
ss
xchg
push
cmp
sub
gs
insb
mov
adc
aas
inc
aam
adc
icebp
test
pusha
mov
jmp
xchg
in
xchg
xchg
imul
mov
adc
add
mov
mov
mov
enter
loopne
push
xchg
fwait
sub
jg
inc
imul
add
cmp
es
out
adc
cmpsl
in
rep
xor
cmp
sbbl
mov
and
adc
imul
stc
and
mov
in
fwait
inc
xor
jbe
out
dec
stos
das
xchg
xchg
mov
cltd
adc
cmp
inc
movsb
fwait
xlat
cmp
fwait
dec
jmp
mov
sar
movsl
jl
push
jae
cmpsl
or
or
popa
sub
aas
sbb
pusha
fmull
ds
cmc
adc
push
and
test
in
cmpsb
push
cwtl
push
in
aas
iret
or
ss
jge
mov
xchg
negl
inc
mov
xor
mov
sbb
sub
punpckhdq
xchg
test
aaa
push
xor
pop
mov
stos
sub
mov
loopne
xor
pop
or
cwtl
mov
ljmp
mov
or
push
xchg
ljmp
fs
insl
scas
push
mov
dec
adc
addr16
xchg
pop
push
in
hlt
and
imul
mov
hlt
pop
jmp
fcomps
imul
xchg
data16
call
dec
rcll
ret
jmp
fnstcw
frstor
arpl
decl
adc
lcall
mov
das
and
cmp
mov
stos
pop
pop
xchg
push
and
js
cmp
dec
adc
cmpsl
jp
xchg
pslld
lcall
aam
roll
mov
jns
xchg
xor
sti
popa
stc
pop
pushf
cld
lret
js
sub
incl
and
das
dec
js
sub
out
pop
cmp
jno
call
pop
lods
cmpsl
cmp
inc
xchg
loope
push
xlat
pusha
fnstcw
and
push
jmp
jno
test
jecxz
lock
rcrl
jo
pop
push
cmpsl
xor
push
ds
imul
mov
push
out
cld
cmp
pop
fnstcw
mov
jecxz
pop
js
decl
xchg
add
stc
icebp
std
jo
cmpsl
rorl
push
movsl
jae
sbb
fdivs
jne
std
call
mov
data16
adc
mov
push
neg
dec
xchg
push
incl
int
out
mov
sbb
outsl
jmp
fistl
jmp
fwait
lahf
push
jg
lods
je
cwtl
cmc
insl
popf
and
aaa
jmp
sbb
insb
or
pop
xchg
int
or
mov
clc
mov
sbb
push
xor
and
das
cmc
pushl
sub
pop
movsl
lds
lret
out
adc
and
sbb
dec
fisubl
dec
dec
imul
repz
cmc
inc
mov
push
jp
lcall
dec
push
push
cmpxchg
in
loope
lds
push
das
shlb
jge
ja
incl
fists
mov
xor
nop
test
xchg
pusha
in
in
out
adc
dec
adc
push
pop
adc
xchg
xchg
ret
cmpsb
or
dec
decl
out
mov
add
cmpsb
push
push
mov
inc
mov
and
mov
inc
cmpsl
mov
jns
ja
dec
xchg
lods
aaa
mov
mov
and
dec
and
jo
push
decl
std
sbb
jb
push
or
sub
mov
fadds
jmp
adc
loop
scas
mov
call
daa
leave
mov
cs
pusha
imul
int3
movsb
jl
jp
sub
xchg
add
js
cmpb
pop
hlt
pop
imul
mov
or
data16
xchg
sarl
cmc
ljmp
push
cs
xchg
mov
dec
mov
repnz
inc
jns
mov
pop
cli
mov
jl
add
jo
xchg
jns
test
movsl
stc
jl
aam
inc
xor
iret
ljmp
inc
in
addl
cli
test
iret
dec
mov
cmp
inc
aaa
cli
jle
fcoml
lds
mov
dec
add
sub
mov
decb
js
jp
jmp
test
negl
loop
decl
orb
inc
xor
aaa
sbb
decl
dec
into
ja
loope
lahf
in
xlat
fsubrs
fnstenv
mov
popf
pop
cli
ljmp
jb
pop
adc
mov
mov
out
mov
loop
adc
sbb
ja
cmc
mov
pop
jmp
mov
mov
pop
cwtl
mov
inc
pop
cld
ror
push
lods
test
dec
and
sbb
xadd
pop
jmp
aas
sbb
les
test
add
test
enter
mov
cmp
mov
call
std
cmp
xor
pop
fists
scas
fcompp
imul
push
in
xchg
enter
or
loopne
sub
ret
ret
add
call
lret
mov
mulb
push
or
jns
jo
pusha
out
and
pop
cli
test
imulb
pop
lock
pushl
push
inc
je
test
adc
daa
lea
notl
cld
ljmp
cmp
xchg
jne
out
adc
dec
jne
fwait
incl
mov
call
jp
rcll
mov
outsl
mov
pop
lock
ljmp
pushf
dec
adc
mov
cli
loop
sahf
dec
js
mov
mov
int3
cmp
loopne
cs
push
loope
push
sbb
dec
pushw
adc
fiadds
cmp
jmp
fdivrl
or
and
xchg
in
cli
dec
cli
leave
mov
cli
fucomip
gs
sti
cmp
dec
sub
pushl
mov
jmp
dec
sub
stc
dec
insl
icebp
fdivrl
jb
pop
lds
push
andb
sub
mov
repnz
fwait
enter
jg
incl
cli
inc
jbe
or
push
sbb
inc
aaa
pop
cmpb
inc
test
sbb
push
pop
call
mov
push
pushf
jnp
cmp
jge
movsb
xchg
sub
jle
jg
push
mov
addl
xchg
sbb
repnz
out
cmp
adc
push
insl
sub
ret
test
mov
jp
outsb
jge
fsubrs
lea
test
addr16
aad
lea
mov
xor
outsl
jne
xchg
add
fucomip
cltd
nop
pop
test
icebp
aam
call
decb
cmpsl
jne
sarl
cmc
mov
and
mov
lahf
dec
xchg
movsl
xchg
sub
jecxz
call
pop
inc
sbb
push
inc
mov
cltd
dec
shl
xchg
sbb
mov
add
inc
decl
adc
dec
cli
test
add
xor
sbb
ljmp
es
lahf
insl
loop
jae
dec
xchg
fdiv
adc
or
and
push
dec
fisttps
jmp
pop
pop
mov
jb
xor
inc
adc
into
addl
sar
jmp
jmp
mov
in
imul
jecxz
and
pop
inc
aaa
sahf
push
mov
call
mov
pop
lret
aad
mov
push
cmp
xorb
lahf
and
pop
filds
dec
out
hlt
ja
sbb
fucomip
mov
cmp
push
mov
dec
mov
test
jae
lcall
jmp
lcall
add
call
test
scas
mov
out
stc
testl
mov
scas
test
pop
rorb
mov
outsl
shrb
popf
dec
cmp
xchg
or
xor
mov
lcall
bound
or
xchg
nop
mov
shrb
nop
mov
mov
add
shll
rcl
sbb
jecxz
dec
fwait
call
jmp
je
jle
sbb
mov
xor
push
pop
jp
sub
nop
mov
in
popa
sbb
clc
mov
adc
add
mov
insb
rcr
pop
lea
sbb
ret
cld
xchg
fstpt
stos
jl
decl
xlat
sub
loopne
les
add
sarl
dec
push
ret
push
mov
add
fcom
jmp
inc
iret
ret
jbe
call
sbb
xor
xchg
xchg
push
incl
popa
push
mov
sub
lock
cmp
and
xchg
or
fwait
fs
int3
push
loope
call
popa
pop
sub
cmp
cwtl
sub
jae
pop
pop
movsl
jg
add
jle
addb
sti
xor
aas
mov
daa
pop
xchg
xor
js
sub
icebp
mov
mov
rcrl
fadds
add
sbb
mov
call
mov
pushl
pop
sub
test
shrl
pop
call
lahf
add
insl
out
ss
mov
call
stos
mov
ja
sub
fnstenv
fs
daa
aas
lret
lahf
mov
aam
mov
mov
dec
lds
sar
stos
inc
inc
jge
pop
shll
pop
pushl
stos
sbb
js
icebp
sbb
push
jno
xchg
sub
dec
imul
pop
sbb
jp
ss
cmp
lcall
sub
sbb
push
fwait
add
cli
cmp
xchg
pusha
mov
jbe
xchg
das
incl
fnsave
std
cli
fsubrs
aam
ljmp
test
js
icebp
inc
rorb
lock
or
mov
decl
repz
imul
xchg
cli
sbb
sub
lcall
or
sbb
add
mov
cltd
cmpsb
sub
pusha
cmpsl
fsubs
mov
jg
jmp
pop
aas
mov
test
jmp
into
in
and
ret
jmp
ficoml
xor
sarb
mov
cli
mov
lret
sti
xchg
mov
cmp
scas
jecxz
aad
mov
js
imul
lret
in
orb
cmp
or
ljmp
xchg
mov
mov
sbb
jmp
xchg
popa
outsl
popf
imul
icebp
push
loopne
sbb
out
or
xor
xchg
out
fistpl
outsb
pushl
loope
mov
std
pop
push
jg
out
mov
addr16
test
or
mov
and
arpl
sarb
call
mov
pop
cmp
rcrb
or
push
sub
fdivl
addb
cmp
sti
jbe
push
or
push
pop
push
or
xlat
shll
mov
js
add
cmp
jg
ljmp
sub
xor
add
dec
push
cltd
popa
fisubrl
sbbl
in
dec
jmp
pop
mov
xchg
fwait
cmpsb
xchg
cmpsb
fisttps
stc
repnz
sbb
ljmp
mov
icebp
jmp
idivb
xlat
xchg
adc
jmp
xor
pop
rorl
mov
mov
test
push
fisttpl
jg
mov
mov
inc
mov
push
std
sbb
pushf
xchg
inc
int3
pop
xor
mov
lcall
dec
xchg
testl
jmp
data16
test
cs
leave
xchg
loope
addr16
fs
lahf
mov
insl
hlt
sti
sub
push
imul
ffreep
pop
xchg
xor
aas
adc
pop
pop
fiaddl
sub
sti
inc
mov
dec
mov
insb
jecxz
mov
add
cmp
pop
outsb
dec
sub
push
popa
jle
hlt
cwtl
fdivrs
jg
xorl
sbb
ljmp
ret
lods
jle
imul
and
dec
in
jbe
imul
add
mov
das
mov
mov
dec
sti
mov
xadd
sub
jo
push
mov
int
fs
imul
inc
aaa
clc
jmp
shld
je
test
movsb
fs
popa
xlat
sbb
inc
push
out
xchg
movsl
movb
stos
jns
icebp
shrl
ret
jp
das
inc
std
call
inc
lods
mov
or
mov
pushl
pop
fsubr
mov
cmc
xchg
inc
movsl
pop
int3
pop
cmp
sub
ja
cld
push
push
sbb
decl
pusha
jg
mov
pop
call
fwait
mov
lcall
ficompl
sbb
mov
das
sbb
mov
pop
movsb
hlt
lcall
loopne
and
and
adc
mov
mov
call
clc
xchg
rcll
push
pop
aam
insb
cmp
aam
gs
ds
pop
push
das
ss
mov
out
fimuls
mov
push
in
inc
into
popa
mov
mov
xor
scas
sbb
sub
out
aaa
or
push
ret
jmp
cmpsl
repnz
mov
mov
jmp
lret
ds
mov
loop
popa
shlb
cmp
push
mov
xchg
je
decl
loop
sub
mov
pop
shll
test
hlt
cmpsb
mov
mov
test
push
xor
rorb
orl
gs
mov
movl
jno
mov
pushw
daa
fnstsw
pusha
jmp
or
pushl
mov
mov
mov
add
pop
dec
out
sub
test
cmp
nop
das
cmp
xchg
xchg
mov
loop
pop
jge
lcall
sbb
fstpl
pop
pop
es
cmp
push
mulb
imul
fisttps
lcall
pop
cmp
fimuls
int3
cmc
cmpsb
push
push
mov
or
movsb
jmp
or
insl
mov
ret
subl
jge
aas
lea
sahf
xor
int
popa
test
insl
aas
sub
loop
hlt
jg
push
outsb
inc
mov
sbb
jge
out
mov
test
ljmp
repz
push
sub
jo
stos
daa
sbb
mov
jg
jns
testl
sbb
pushf
sub
lock
loopne
imul
int3
out
jns
out
xor
lret
cli
flds
loop
fwait
jno
push
adc
pop
decl
icebp
push
call
jmp
fidivrs
push
jl
adc
fldt
xor
pushf
fs
push
cmpsb
mov
or
mov
jae
jmp
jecxz
sti
insl
hlt
add
negl
test
adc
pushl
cli
sbb
jno
jl
and
adc
dec
out
mov
mov
lea
in
imul
or
push
mov
inc
test
in
jmp
mov
cmpb
jge
add
pop
jb
std
iret
lock
jae
cmp
test
fstl
lcall
in
int3
or
jns
test
leave
aam
inc
cmp
pop
sbb
push
xchg
fcomps
stos
sarb
add
nop
jecxz
out
ffreep
sbb
ficoml
inc
mov
xchg
adc
movsl
les
lret
call
inc
pushl
mov
pop
push
mov
adc
sub
jg
lds
out
nop
mov
lea
sbb
inc
lahf
rcr
pop
mov
test
pop
test
aam
cwtl
dec
cmp
inc
mov
stos
mov
jmp
and
out
in
or
int
dec
dec
rcl
andl
je
mov
push
jg
pop
lods
xchg
push
sbb
xlat
ret
fstps
ljmp
add
mov
rcr
cltd
xchg
ds
pop
mull
mov
clc
cmp
pop
iret
sub
mov
pop
pop
outsb
icebp
repz
jecxz
jae
jg
pop
loopne
roll
fmulp
lahf
sbb
push
popa
or
cmc
incl
sub
push
andl
jb
lods
xchg
inc
cltd
jp
imul
cmp
sub
in
jnp
xor
xor
jge
ljmp
xchg
jmp
ds
lret
push
pusha
rcl
ds
pop
or
loopne
rclb
jb
outsb
fisubrl
cmp
mov
imul
in
mov
clc
add
add
adc
pushl
xchg
outsl
sub
lds
aad
ja
sub
jno
lea
decl
iret
sbb
ja
fpatan
xlat
ss
xor
call
imul
mov
cltd
sub
lea
rcll
and
mov
xlat
fildll
mov
mov
out
jbe
out
and
sti
ljmp
call
inc
das
arpl
xor
js
cld
ret
xchg
push
adc
cmp
xchg
sub
adc
movsb
jle
stc
xchg
or
mov
xor
call
add
mov
pushl
mov
test
lret
jae
icebp
sub
mov
mov
shrl
pop
pop
ret
jnp
loopne
decl
loope
push
adc
fbld
bound
mov
inc
mov
inc
fists
pusha
sub
push
scas
into
pop
cmp
jge
inc
ffree
mov
sbb
dec
add
faddl
rcrb
lcall
stos
test
and
mov
shll
cmpsb
inc
aas
ret
xchg
enter
enter
loope
int3
fidivrs
jmp
sbb
dec
push
xlat
cmp
stc
movsb
inc
sub
pop
clc
lods
je
rorl
sbb
mov
leave
push
push
sub
mov
frstor
outsb
push
cmp
lcall
jl
rolb
adc
test
jg
xchg
xor
test
les
pop
push
sub
sub
imul
pop
cli
call
js
mov
scas
adc
cmp
jg
test
xor
or
pop
cmp
sbb
int
xor
cmp
popf
addr16
decl
adc
arpl
dec
cwtl
pop
xlat
test
sti
clc
fistps
call
and
adc
sbb
into
cmp
xchg
leave
dec
aad
pop
sar
decl
xor
idivl
mov
mov
cmp
mov
pop
mov
les
pop
aad
fisubl
mov
adc
or
lret
stc
xor
jmp
ljmp
sti
inc
mov
xor
sub
dec
push
int
adc
jg
in
es
subl
in
out
subl
imul
inc
pop
clc
fldt
cmp
or
lcall
xchg
jmp
mov
clc
aaa
xchg
gs
inc
fcomps
xchg
repz
sahf
fiadds
incl
ds
ljmp
xchg
jns
loopne
loop
pop
dec
incl
in
adc
ljmp
dec
jg
movb
cmp
cmp
jmp
pop
or
pop
sahf
lods
push
les
add
iret
cli
xchg
inc
je
sub
push
or
outsl
xchg
mov
in
pushf
jns
inc
push
add
sti
sbb
repz
in
pop
cld
xchg
inc
leave
mov
mov
imull
xor
mov
stos
dec
js
pop
cli
lcall
push
sahf
daa
cmpsb
mov
or
push
mov
stc
clc
es
lcall
xchg
xchg
xchg
mov
xchg
jno
ret
jg
sbb
or
ljmp
xchg
lods
hlt
add
icebp
mov
jecxz
adc
fs
cld
dec
xlat
dec
cmp
hlt
cli
lock
xchg
jo
sbb
xlat
inc
out
pop
push
orl
add
and
std
or
enter
jecxz
mov
add
xchg
loopne
or
call
mov
nop
lea
dec
sti
shr
push
test
pop
mov
loopne
outsl
cld
adc
lahf
shlb
and
das
sub
xchg
jb
mov
inc
fisttps
xchg
aas
and
add
out
inc
mov
out
repz
outsl
lock
pop
lahf
cwtl
and
inc
mov
push
pop
js
pcmpgtb
lods
outsl
and
jmp
aad
sub
mov
fs
sti
mov
orb
adcl
fisubrs
push
test
inc
stos
loopne
sahf
or
scas
cmp
and
inc
cmovge
gs
mov
sbb
lret
lds
adc
insl
lea
mov
mov
cmc
pop
sub
inc
cld
adc
jmp
stc
call
mov
xchg
and
sub
xor
pop
lea
rorl
test
adc
inc
pop
push
rorb
in
out
cs
popf
data16
mov
xor
jae
cmpsl
out
add
or
jnp
decl
push
push
or
sti
xlat
xor
repnz
mov
lods
out
or
fnstsw
jecxz
andl
icebp
arpl
cmp
push
dec
push
pushf
incl
insb
movsl
push
adc
loope
add
and
addr16
loopne
mov
mov
ljmp
jle
decl
jmp
imul
xor
je
gs
xchg
jmp
add
or
cmp
cltd
mov
or
clc
inc
jbe
cmp
xchg
clc
pop
xor
xchg
sahf
mov
outsl
lock
loop
cmp
je
sbb
xchg
mov
rcrb
femms
call
iret
cmp
adc
push
mov
idiv
pushl
iret
addr16
adc
pop
flds
imul
push
sub
mov
in
in
mov
pop
and
jl
pmaddwd
ror
jg
sub
fistpll
dec
sbb
cli
fucomip
frstor
aas
xor
push
add
mov
xor
pop
call
das
lods
sub
repz
decl
mov
jns
adc
jb
mov
xchg
clc
push
mov
pusha
pop
inc
and
cmp
incl
pop
jp
add
jno
out
xchg
jbe
and
push
and
cld
fidivs
mov
jp
add
leave
jns
xchg
sub
sbb
aam
jnp
or
out
and
rcr
iret
cltd
dec
adc
in
xchg
decl
xorl
icebp
inc
cli
pop
dec
js
test
out
push
fistl
arpl
inc
cmp
cwtl
lds
adc
pushf
push
jg
cmp
lods
loope
test
notl
decl
jmp
or
in
cltd
das
push
aas
and
add
out
decl
jl
sub
sub
sbb
or
popa
lods
lock
mov
mov
push
int
push
mov
or
push
gs
mov
mov
test
dec
pop
xchg
insl
in
jl
aad
add
or
mov
dec
and
testl
loopne
pop
in
subl
mov
adc
fsubl
xchg
sub
adc
ret
xor
int3
and
xchg
push
lds
leave
loopne
std
or
pop
mov
cwtl
inc
add
cs
sbb
clc
lahf
dec
sub
or
pop
dec
ret
or
pop
cmp
mov
addr16
aas
das
xchg
and
adc
adc
jns
xchg
mov
outsb
cmc
jg
mov
std
jg
jg
pushl
push
ss
lods
adc
sbb
stos
xor
jnp
or
decl
mov
cmpsb
outsb
inc
jl
clc
rcrl
jg
pop
mov
dec
lods
cmp
test
lret
mov
decl
xor
mov
xchg
cmp
xor
imulb
push
push
pop
mov
call
cltd
outsl
lods
jmp
addr16
in
inc
out
mov
mov
cwtl
sbb
jp
fnstsw
in
lods
cmp
and
lcall
std
inc
jb
dec
push
rcrl
scas
inc
daa
pop
mov
or
call
testl
jno
fildl
cmp
ljmp
in
mov
int
push
sub
es
test
push
inc
dec
inc
mov
loopne
lcall
push
lahf
mov
mov
adc
inc
int3
mov
and
movsb
test
ljmp
mov
incb
cmp
mov
enter
lcall
hlt
or
xchg
mov
fidivrl
fadds
add
ret
das
xchg
jge
mov
addb
test
call
jle
fs
mov
dec
pop
dec
adc
jg
ds
out
shl
xchg
mov
push
mov
jb
popf
push
lahf
andb
incl
xor
jecxz
xor
into
cmpb
divl
notb
xchg
loop
xor
dec
cld
outsl
xchg
int
mov
iret
mov
incl
mov
out
push
adc
sbb
mov
pop
jg
insb
mov
mov
cmpsb
mov
sub
std
es
adc
dec
push
add
mov
repz
test
mov
sbb
imul
ljmp
xchg
pop
push
mov
aaa
divl
mov
inc
xor
or
and
xchg
call
lods
pusha
push
dec
nop
shlb
mov
adc
idiv
testl
mov
mov
xchg
je
fisttpll
jo
in
das
lock
jns
mov
pop
clc
orl
ret
les
decl
in
cmovbe
lock
sbb
int
pop
mov
adc
push
jae
dec
popf
cmp
or
in
pushf
xor
je
lret
repnz
cli
jmp
mov
and
xchg
loop
mov
shll
loopne
icebp
sbb
push
outsl
sub
call
lods
mov
daa
imul
test
add
mov
ljmp
jbe
inc
orl
aad
adc
lret
stos
push
push
aad
decl
inc
mov
xlat
ds
insb
into
jg
push
cmp
pop
lret
mov
inc
subl
mov
mov
loop
addb
inc
adc
in
aad
fldt
mov
pop
mov
nop
xor
jge
repnz
sti
movsb
stos
pop
and
mov
stc
mov
or
call
scas
repz
and
jbe
enter
cmp
fnstsw
adc
mov
inc
cmpsb
mov
testl
ljmp
cmp
sub
rclb
sbb
add
jae
push
sbb
pop
mov
outsl
cld
enter
sub
arpl
call
mov
clc
call
sti
adcl
lock
lcall
sbb
xchg
add
stos
jns
ret
mov
enter
dec
dec
mov
add
push
and
sub
pop
jge
ret
adc
call
xchg
dec
scas
sbb
pop
ror
fwait
jne
add
mov
cs
dec
xchg
inc
jg
out
mov
xor
mov
mov
loopne
mov
jp
cmc
mov
jl
arpl
movsl
fucomip
push
inc
imul
imul
mov
dec
lea
cmp
in
cmpsb
repnz
cli
movsb
movb
mov
push
and
dec
jg
add
data16
mov
xor
imul
pop
decl
les
ror
jnp
mov
push
in
cwtl
jno
cmp
sbb
decl
mov
sbb
mov
sub
push
adc
add
ljmp
or
lahf
in
out
cmc
cmp
sub
int3
and
lret
leave
cwtl
fcomps
incl
xorl
mov
je
dec
mov
lret
fsubrs
jno
sbb
cli
lcall
int3
inc
dec
sbb
sbb
fadds
adc
and
scas
xor
add
mov
stos
lcall
adc
test
xor
fsubr
lahf
dec
cmp
fwait
sub
shl
leave
in
mov
icebp
repnz
inc
daa
mov
inc
stos
inc
or
mov
or
jp
sbb
mov
adc
add
pop
repz
cld
stc
dec
pop
outsl
cld
push
mov
dec
cmp
pop
cli
mov
xchg
icebp
dec
push
push
ficompl
rorl
jp
ljmp
jl
mov
push
push
xchg
mov
mov
and
lods
push
pushl
or
pusha
inc
mov
push
add
sbb
xchg
lcall
icebp
or
aaa
push
dec
pop
xor
jge
push
cmpsb
push
or
or
jae
es
dec
lock
xchg
ljmp
cld
dec
mov
iret
jno
mov
aad
sub
setne
push
lods
xchg
jmp
cmp
cmp
bound
mov
add
mov
push
mov
cmpsl
insb
sbb
ljmp
or
and
scas
insb
inc
xchg
and
adc
gs
and
lcall
jns
adc
clc
mov
mov
xor
cmp
decl
in
gs
bnd
movsb
arpl
not
xor
fdivrl
ret
lock
jmp
and
addb
pushf
xor
decl
adc
mov
sub
and
mov
mov
push
in
enter
incb
push
mov
mov
push
inc
aam
leave
es
addr16
sub
hlt
jg
call
add
push
dec
loop
cmp
cmp
ss
jb
push
outsl
orl
mov
sub
mov
inc
cmp
orl
lods
addb
jno
inc
adc
or
pop
sbb
inc
sub
mov
clc
adc
add
push
addr16
pop
xchg
fsubrs
dec
mov
mov
out
xor
insl
je
fdivp
push
cmpsb
hlt
mov
jbe
adc
sbb
jmp
mov
cs
mov
pop
mov
xchg
js
push
data16
mov
je
jmp
cmp
ljmp
pop
ret
mov
cmpsb
lea
sbb
lcall
push
test
xchg
fwait
test
shrl
cli
sub
cmp
scas
xchg
jg
dec
rcll
jmp
imul
sub
pusha
leave
psadbw
insl
lock
lcall
cld
lea
int
xor
mov
mov
or
popf
jge
jmp
sbb
pop
xlat
pop
xchg
inc
pop
mov
jg
mov
sarl
repnz
fwait
movsb
addr16
insb
xor
sarb
dec
or
orl
stos
mov
clc
and
jnp
mov
add
mov
data16
xor
icebp
dec
stos
sub
fcomps
jae
lcall
xchg
cld
xchg
dec
popa
xchg
je
roll
in
ja
lods
mov
jbe
test
jg
out
hlt
or
cmp
std
loopne
ja
cld
call
mov
jg
out
jmp
scas
cmc
ror
imul
mov
outsl
shr
int
add
rorl
das
fsubr
xchg
cmpsl
push
xor
sahf
jns
push
insb
sbb
fstpl
push
jg
ljmp
pop
pushl
repnz
jl
adc
nop
gs
dec
and
ret
mov
jno
and
inc
pushl
cmpsl
xchg
cli
inc
xor
dec
push
mov
mov
lcall
imul
ret
movsb
adc
lahf
call
pop
aas
in
jo
pop
orl
sbb
and
xor
in
sbb
push
das
push
orb
lock
sub
push
cli
sbb
and
mov
inc
push
lret
mov
pop
out
inc
xchg
or
stos
jl
pushl
xchg
dec
ss
dec
jecxz
mov
jae
pop
jae
nop
insl
adc
sub
lcall
movb
loop
or
jno
inc
mov
xlat
mov
shlb
cld
jnp
cltd
inc
pop
sub
xchg
fwait
pop
dec
cltd
sub
lock
fldcw
ljmp
lahf
outsb
lahf
movb
push
mov
or
jge
jmp
fiadds
inc
sub
loop
decl
pop
jle
neg
push
adc
hlt
push
push
movsb
mov
les
clc
inc
pop
mov
pusha
fisubl
sbb
jge
lods
aad
imul
mov
lcall
jns
mov
pop
pop
pop
mov
cmpsl
cltd
dec
xlat
sub
daa
shrl
and
lods
incl
fidivl
dec
jne,pn
xor
insb
xchg
repnz
mov
push
aad
ljmp
jp
adc
repz
adc
push
add
mov
shl
dec
loope
clc
test
sub
lds
pop
xchg
inc
popa
add
mov
in
jb
pop
cld
ljmp
js
xchg
sbbl
ret
call
pop
mov
lcall
clc
outsl
lret
jbe
scas
test
lock
mov
and
mov
mov
loop
mov
popf
cs
adc
mov
jmp
rorb
xor
sub
hlt
inc
stos
mov
lea
sbb
jnp
inc
sbb
test
and
sub
mov
push
sbb
fimuls
in
movsl
rorl
adc
dec
into
lret
mov
mov
sub
insl
out
mov
sub
fwait
push
mov
fiadds
js
enter
jbe
sahf
jp
lcall
in
sub
mov
out
rorb
clc
mov
xchg
mov
pusha
dec
add
test
mov
in
popa
inc
xor
out
lret
inc
add
outsl
lock
adc
pop
in
adc
cwtl
loopne
std
pushl
push
lcall
xor
mov
pushf
pop
mov
outsb
scas
aaa
decl
call
mov
movsl
inc
fwait
lods
cmpsb
xor
mov
jmp
fisttps
test
movsl
lret
cmp
movsb
inc
addb
ljmp
lret
in
imul
mov
jae
adc
pop
lahf
fdivl
bnd
fwait
je
loopne
push
or
push
imul
lcall
sub
push
mov
lret
aaa
push
shll
pop
in
add
jl
lock
or
mov
mov
ret
inc
inc
aad
fistps
cmpsl
push
cltd
mov
inc
dec
and
mov
pushf
aam
or
mov
push
repz
inc
decl
mov
add
subl
sub
mov
inc
mov
call
jmp
jns
mov
imul
movsl
dec
sti
add
jns
mov
xchg
sub
push
mov
sub
inc
fs
fildl
incl
ret
mov
and
sti
fiadds
leave
test
xchg
jns
jmp
mov
incl
xor
xchg
adc
push
dec
mov
int
cmp
sub
and
btr
pusha
push
pop
cmpsl
xlat
or
push
mov
inc
movsb
and
or
mov
sbb
in
dec
clc
xor
in
scas
push
clc
mov
sub
aam
inc
negl
lea
push
sbb
pop
jb
lahf
mov
cmp
ds
insl
sub
std
incl
loop
jg
mov
xor
sbb
nop
add
dec
fisubrs
or
rclb
in
sub
aaa
pop
jne
push
mov
sub
out
push
adc
or
loope
and
xchg
mov
cmc
pop
out
fmull
mov
lret
das
cmc
fstl
and
inc
pop
jecxz
ss
mov
mov
or
jge
call
sbb
jl
fsubrs
clc
add
imul
int
sub
pop
xchg
hlt
jg
lcall
and
add
fnstsw
jmp
jp
inc
jl
xor
cmpsl
ret
movsb
fsubrl
aad
aaa
and
decl
jns
cmpsl
mov
push
sub
adc
rolb
inc
mov
pop
jb
cmp
ss
inc
jge
test
mov
call
sbb
cld
fcmovnb
movsl
and
jno
push
sbb
mov
gs
jmp
into
int3
call
lock
add
in
jge
int3
insl
mov
test
mov
pop
xchg
jg
jmp
leave
call
aaa
fs
inc
mov
add
sbb
lcall
stc
pop
jae
cmc
enter
dec
in
jns
fwait
mov
arpl
in
mov
es
and
aam
sub
and
loopne
jl
lcall
insl
cmp
icebp
cli
lods
xchg
stos
sbb
pop
cmp
or
ss
int3
dec
mov
jecxz
fistps
int
jae
pop
roll
shrl
imul
pushl
adc
mov
mov
test
out
or
xchg
xlat
push
scas
pop
and
test
fadds
push
xorb
imul
fsubs
aam
daa
add
pusha
jg
mov
mov
adc
test
mov
cltd
fnstenv
cld
imull
xchg
mov
dec
lea
mov
sbb
inc
dec
sbb
dec
cld
decl
imul
push
lods
sbb
cmp
pop
incl
sti
mov
mov
sbb
ds
adc
add
sahf
int3
xor
xchg
dec
aam
jg
hlt
rcll
push
lock
in
rorb
mov
jo
pop
xor
xchg
jl
pop
cmp
call
fs
mov
rcl
jp
test
addb
ljmp
pop
inc
pop
lods
enter
out
repz
imul
loopne
inc
into
mov
pop
adc
fwait
hlt
lcall
int3
fcoml
ljmp
mov
mov
cli
das
flds
jne
jg
sbb
push
cmp
clc
fists
imul
mov
popa
cmp
mov
popa
dec
sbb
lcall
sbb
sub
xchg
loop
mov
cs
outsl
pop
clc
fbld
cmp
js
pop
rcll
subps
das
std
inc
ret
inc
mov
cli
ds
mov
fnstenv
mov
mov
xor
fwait
add
mov
cmpsb
or
mov
mov
test
xor
fisttps
pushf
fs
popa
std
lahf
idiv
mov
lods
jmp
ljmp
mov
in
in
movsb
hlt
insb
idiv
out
push
cmp
lea
mov
js
mov
int3
jg
xchg
das
lock
mov
cli
inc
jno
adc
in
ljmp
shlb
ret
loopne
fucom
add
fistl
pop
lods
jae
fistpll
fisttps
xor
mov
mov
stc
lock
inc
mov
mov
pushf
push
cltd
or
mov
jb
or
sbb
rcl
scas
test
std
and
cmpsw
icebp
push
push
movsl
jo
cli
cmp
mov
outsb
push
fwait
adc
mov
and
lods
scas
cmp
push
push
xlat
mov
bound
daa
insl
in
call
inc
outsl
lahf
dec
cmp
out
dec
test
pushf
pop
std
sub
decl
xlat
sub
popf
repnz
pop
mov
xor
int
or
add
lods
insl
pop
xchg
xchg
mov
mov
push
test
mov
sub
push
scas
pop
mov
xchg
inc
incb
call
inc
and
or
mov
mov
stc
xor
incl
add
in
fistpll
iret
xchg
mov
jae
sbb
add
int
les
ljmp
pop
push
test
lahf
cmp
cmp
jp
stc
mov
decl
int
push
popf
aas
mov
lcall
mov
mov
mov
cld
mov
sub
fwait
xor
xlat
data16
filds
jp
fadds
xor
jnp
fld
fnstsw
popl
das
xor
fistl
mov
jg
in
cmp
in
decl
cmpsl
loop
and
jne
je
test
lcall
jmp
adc
jnp
mov
push
into
jne
aad
movsb
mov
add
cmpsb
arpl
mov
sti
sbb
pushf
adc
pop
ret
addr16
popf
sbb
push
in
out
ljmp
std
aad
cli
jg
test
repnz
cld
mov
idiv
cmp
push
std
push
inc
aad
add
in
jb
add
add
jne
outsb
fistps
sti
aad
ljmp
popa
add
push
pop
pop
pop
xchg
mov
cmp
or
mov
sahf
fwait
stos
icebp
sti
rcrl
pusha
fs
mov
and
mov
enter
outsl
icebp
push
cwtl
scas
lods
push
dec
lods
or
push
pop
push
inc
push
stc
lea
cli
imul
or
jmp
and
mov
ljmp
fadds
ret
mov
jg
dec
xchg
in
call
add
sbb
outsl
cld
mov
outsl
push
mov
mov
sub
ljmp
jmp
xor
jmp
outsb
jle
ret
mov
push
pop
mov
jne
aam
jg
inc
arpl
inc
mov
jb
loope
ret
rclb
les
jb
jg
lock
pop
sbb
cli
clc
jg
pushl
inc
repz
es
and
dec
movsb
pop
xlat
shl
mov
inc
push
lahf
dec
cmp
fnstenv
inc
push
inc
or
jmp
in
jnp
mov
lcall
data16
aaa
lahf
aam
fstpl
and
outsl
push
icebp
insb
out
xor
inc
push
pushf
enter
cltd
mov
insl
cld
jns
sub
inc
shlb
push
incl
ljmp
fadds
fsubrl
loopne
jmp
add
pop
js
mov
xchg
cmpb
mov
jg
or
push
outsb
pop
adc
adc
ret
aaa
push
mov
jnp
outsl
icebp
cmp
das
mov
jns
add
test
xchg
cmp
jmp
mov
pop
and
cmp
jl
and
sti
aas
add
sub
fisttpl
test
imul
lcall
mov
lcall
pop
ret
ljmp
mov
loope
or
rorl
icebp
jne
jecxz
pushl
not
dec
and
mov
push
xchg
lea
in
cmp
fdivrs
cmp
incl
cmp
fstpl
mov
cmpsb
mov
loopne
clc
dec
in
cld
or
jge
push
jns
pop
or
mov
bound
mov
mov
in
mov
scas
int3
ljmp
sbb
mov
inc
adc
stos
sub
imul
jmp
lds
push
insb
insl
stc
push
arpl
arpl
mov
lret
ljmp
push
cmp
mov
mov
aam
cmc
jmp
aas
pop
lea
push
incl
push
cld
jae
xor
dec
rcl
mov
incl
mov
out
cwtl
neg
inc
lret
test
xor
int
sbb
adc
loop
dec
sbb
decl
data16
mov
add
or
ret
sub
push
jge
cmc
shlb
aad
jbe
mov
jbe
mov
cmp
fs
mov
hlt
das
icebp
pop
mov
cmp
rcll
xchg
pop
ljmp
daa
dec
dec
in
push
movsb
mov
lcall
dec
pop
je
mov
mov
push
sub
pop
cwtl
push
pop
sub
add
jecxz
call
jns
push
jl
popa
bound
mov
call
sbbb
push
jg
pushl
pop
sbb
mov
fdiv
popa
sub
push
cmpsb
sti
divl
jmp
sahf
sti
out
pop
push
or
cwtl
pop
and
push
popf
jne
xchg
fbld
dec
test
pop
jp
adc
lods
or
adc
incb
sti
int3
or
dec
mov
shrb
loop
incl
mulb
jge
jp
xlat
aad
insl
mov
pop
sub
inc
outsl
or
ljmp
sbb
test
jbe
je
and
and
xor
data16
mov
into
sarb
ret
mov
cld
dec
into
dec
push
repnz
ss
lcall
xlat
fisubrl
lods
daa
lds
insl
inc
scas
push
inc
mov
cld
xchg
jmp
mov
cld
incl
push
imul
fxch
push
and
dec
and
dec
outsl
xor
inc
sti
cmp
push
pop
push
pop
or
std
iret
mov
pop
jmp
lret
and
cmp
jl
inc
push
jle
push
cmp
sbb
inc
inc
jmp
lahf
adc
sub
into
inc
cmpsb
fcos
push
mov
sbb
inc
popa
sahf
test
dec
xchg
mov
hlt
lret
ljmp
adc
fs
jp
pop
xor
xchg
mov
and
or
inc
test
dec
inc
push
xor
rorb
add
push
mov
rolb
fidivrs
jg
mov
ja
js
pop
pop
xchg
jbe
mov
cmpl
dec
fucomip
pop
call
or
lahf
shll
shll
das
cmc
in
inc
xor
sbb
push
clc
aam
popa
daa
test
xchg
ja
loop
mov
adc
rorl
leave
adc
dec
cli
je
testl
rorl
data16
xchg
inc
push
in
xor
mov
add
xor
sub
inc
lds
ret
das
in
out
jns
fstl
add
push
push
clc
lcall
sbb
cwtl
adc
and
aad
shll
jmp
adc
push
stos
rcl
rorb
jp
push
test
mov
push
mov
int
sbb
xor
andb
cltd
lea
ficoms
mov
addr16
sbb
ljmp
xor
push
sub
mov
mov
das
lods
imul
mov
mov
push
or
pop
adc
mov
leave
mov
push
mov
dec
jnp
and
cmpsl
call
or
in
aaa
xor
push
cltd
or
lcall
mov
or
outsl
push
mov
add
xor
mov
inc
loop
inc
pop
call
push
xlat
jae
xchg
pop
pop
push
mov
outsl
and
cmp
pop
sub
imul
push
cmp
xor
adc
mov
jge
adc
pop
mov
xchg
xchg
clc
outsl
hlt
inc
xchg
dec
dec
adc
ss
incl
ljmp
iretw
dec
dec
ficomps
jmp
das
out
jo
jl
testb
pop
dec
jg
mov
push
mov
xchg
jg
adc
rcrl
push
pusha
pop
test
inc
lock
mov
pop
int3
lock
add
mov
sub
pop
aaa
cli
mov
xlat
aam
sbb
sti
cltd
stos
imul
sub
mov
mov
dec
sub
ret
in
or
out
pop
shll
jno
lret
lock
loop
push
decl
lret
lcall
popf
dec
adc
xchg
nop
out
icebp
add
cld
call
xor
test
mov
movsl
pop
out
add
xor
sbb
dec
pop
adc
shrl
jp
cmp
and
lcall
movsl
add
mov
mov
xor
sub
xchg
ljmp
sub
scas
je
mov
mov
xchg
test
mov
pop
lds
std
incl
in
sub
push
mov
add
mov
fstps
inc
movsl
pop
sbb
cmp
jg
or
les
and
cli
jne
cltd
jb
cmp
push
lcall
mov
mov
ljmp
ja
int3
cmp
push
and
loopne
popf
call
inc
sub
outsl
add
and
cmp
das
repnz
sbb
sarb
mov
inc
xor
aam
push
and
pushl
xor
push
fildll
out
dec
and
fisttpl
push
dec
decl
inc
mov
mov
mov
mov
pop
shlb
or
and
mov
popf
jp
out
clc
out
cwtl
roll
lods
pop
ja
hlt
out
pop
or
push
mov
sub
fcmovbe
dec
dec
xor
push
or
shrb
inc
jg
pop
stos
mov
push
mov
rol
xor
stos
sar
sahf
pop
dec
outsb
arpl
aad
mov
xchg
ljmp
lock
iret
int3
jnp
aad
pop
out
push
mov
movsb
movsl
jne
stos
adc
out
cmp
dec
mov
or
or
stc
cmp
jle
xor
mov
ficoml
pop
add
jmp
ja
out
sbb
dec
addr16
pop
stc
or
shrb
lods
test
add
dec
xchg
cmp
ljmp
pushf
pop
sbb
and
sub
das
adc
pusha
ljmp
scas
insb
mov
iret
jg
fldt
inc
or
xchg
push
mov
mov
lcall
popf
cmp
dec
push
cld
decl
mov
dec
js
mov
jnp
push
inc
sar
push
or
fsubrs
xor
mov
xchg
mov
test
sbb
cmp
add
cmp
fnstcw
ljmp
inc
add
pusha
stos
jp
cmpsb
sbb
mov
lcall
lret
inc
push
cs
xchg
int3
in
xor
shr
cmpl
loopne
xchg
mov
iret
mov
xchg
push
pop
xchg
push
jbe
fidivrs
sbb
inc
rcrl
adc
pop
in
cltd
mov
xchg
jnp
call
leave
pop
popa
cld
outsb
ret
add
lcall
sbbb
xchg
inc
mov
cmc
cld
sub
cmp
dec
adc
shll
decl
bnd
imul
in
push
push
mov
inc
inc
addr16
pushl
mov
aam
fstpt
sub
push
cwtl
jne
xchg
es
fnstenv
call
mov
xchg
mov
and
sub
mov
movsl
decb
xlat
hlt
pop
shlb
fs
ja
pop
fsubp
enter
lds
dec
add
cltd
sbb
lea
vmovhps
xchg
int
fiadds
pushl
mov
mov
lret
sub
cmp
clc
xchg
dec
insb
adc
push
lcall
stos
push
pusha
cmpsl
ds
out
push
or
xor
adc
add
cmp
call
mov
jmp
add
sbb
mov
in
subb
xchg
decl
push
lret
cmc
adc
in
sti
cld
xchg
cmp
jb
lock
das
icebp
push
fcmove
outsb
pop
inc
add
push
pushf
mov
cli
mov
call
mov
push
push
icebp
dec
jno
inc
jbe
and
xchg
je
lret
push
push
add
mov
pop
xchg
insb
pop
xor
or
cmpsb
nop
jae
bound
xchg
dec
cld
inc
shll
xchg
in
sar
pop
or
push
popa
and
xchg
cli
xchg
sbb
xchg
mov
pushl
in
xchg
cli
js
mov
aaa
cmp
sti
inc
test
jne
ret
jge
jmp
inc
lret
imul
xchg
shlb
push
pop
pushf
dec
cmpsb
sbb
fwait
adc
mov
sar
ljmp
pop
imull
jp
mov
push
mov
mov
xchg
out
pop
dec
loope
cmpsl
xor
les
cmp
sbbb
adc
jle
cli
decl
daa
and
lods
xlat
dec
sub
fsubrs
out
cmp
pusha
icebp
decl
call
cmp
gs
lcall
addr16
mov
lea
mov
outsl
icebp
pop
mov
pop
xchg
mov
xchg
pop
xor
pop
jnp
jmp
ficoms
or
sbb
push
push
adc
lods
xchg
xlat
bound
inc
cmpsl
scas
bound
std
rcrb
iret
xchg
mov
ret
hlt
orl
ljmp
sbb
xorl
xchg
imul
xchg
cmp
sub
pop
pop
ljmp
rcr
es
lret
jg
call
xchg
inc
or
es
fists
imul
jb
inc
or
ja
test
test
sub
rorl
out
loope
es
xor
pop
jb
push
decl
mov
add
sahf
leave
pop
scas
dec
jmp
adc
adc
add
loopne
sub
pop
dec
in
jmp
adc
sbb
fwait
cmp
xchg
daa
cli
push
repz
mov
mov
and
and
mov
mov
cmc
test
insl
lds
ret
stos
in
aam
mov
jno
mov
sti
decl
mov
lahf
inc
ds
adc
dec
mov
dec
std
lcall
or
cmpsb
adc
int
adc
pop
sahf
les
ja
sub
or
mov
jmp
push
bound
mov
pop
jns
sbb
pop
in
cmp
jbe
test
ljmp
sarl
push
rolb
pop
int
jno
pop
adc
inc
mov
fistps
pop
sub
add
jg
test
addr16
adc
in
mov
jmp
inc
or
push
std
sbb
jmp
fwait
pop
lcall
scas
xor
xchg
lds
icebp
fcom
das
std
ljmp
loop
push
jno
les
out
rorl
mov
jnp
sbb
inc
ds
or
mov
sbb
ljmp
cs
scas
addr16
cli
decl
xor
in
push
mov
xor
lcall
inc
inc
xchg
mov
jmp
test
xor
jb
out
and
jmp
sub
jge
in
sbb
push
enter
stos
mov
dec
xor
add
jmp
decl
rcr
jbe
in
es
in
adc
mov
mov
xchg
pop
in
and
adc
iret
jb
imul
loopne
lcall
stos
add
sub
mov
lcall
sbb
push
enter
sub
add
sbb
mov
cmp
psubq
mov
adc
fwait
adc
push
cwtl
ror
je
lods
inc
dec
popa
jecxz
inc
or
sbb
out
mull
add
pop
xlat
mov
mov
scas
clc
or
call
pop
pop
in
mov
cli
mov
stos
pop
shll
jmp
out
es
mov
js
pushl
cli
inc
dec
ret
push
jg
push
cs
pop
dec
mov
mov
aad
sbb
mov
jb
jne
xchg
hlt
jge
pminsw
pop
arpl
fdiv
shl
jbe
fstps
out
sub
fidivl
cs
mov
add
sub
mov
mov
jne
cmp
je
decl
sub
inc
ud0
decl
popf
std
fcmovnb
movsb
mov
xchg
mov
div
cmc
push
xor
movsb
adc
shlb
enter
decl
rcll
adc
stc
movsb
lods
leave
mov
jge
mov
lahf
pop
pop
call
into
aas
push
or
add
mov
cmp
pop
cwtl
mov
jge
jg
dec
call
popf
dec
adc
pop
cmp
lods
xor
push
lcall
fistps
mov
mov
xor
cmp
mov
lcall
xor
loop
pop
jge
aad
fdivrs
nop
and
mov
jg
inc
lds
outsl
scas
in
adc
fisubs
fstpt
lea
std
in
cs
das
int
xchg
js
pushl
ss
inc
imul
cmp
cld
push
imulb
push
jne
pop
xchg
push
xor
jge
jmp
sbb
out
and
or
jbe
scas
lods
pop
jbe
andb
cmp
loop
rcr
jbe
inc
enter
lcall
push
popa
imul
xor
test
adc
cmp
pop
ljmp
ljmp
xor
fstpt
pop
push
cltd
mov
cmp
repnz
sbb
mov
pop
outsb
cmp
mov
sub
push
lret
pop
mov
std
test
aad
pop
cmp
out
loop
fldl2t
gs
outsb
std
decl
mov
mov
mov
add
es
std
jg
mov
mov
adc
decl
push
and
dec
push
pop
outsb
jnp
pop
sbb
arpl
mov
jmp
test
inc
iret
ds
jp
lods
push
cmp
lds
cmp
pushf
pop
push
aad
sahf
sahf
jmp
data16
xchg
push
mov
das
push
inc
aaa
ljmp
call
mov
jmp
cli
aam
add
out
xchg
lock
pop
xor
cwtl
stc
jb
dec
cltd
and
push
mov
dec
test
inc
cmp
add
out
mov
dec
fwait
test
mov
fyl2xp1
ret
and
cmp
jmp
jne
pop
mov
rclb
jmp
mov
sar
cmp
fwait
jmp
or
test
inc
sbb
ljmp
sub
fcmovne
out
imul
ret
xlat
mov
or
call
in
jb
jl
aam
clc
dec
cmc
and
call
push
lcall
call
stos
fidivs
and
mov
fisubrs
jge
popa
cli
popa
lahf
std
jg
decl
shl
lret
aad
and
cmp
cld
arpl
scas
push
jg
sbb
fwait
out
xorb
icebp
jo
movsb
lds
mov
mov
in
mov
imul
mov
les
decl
cmp
into
mov
stos
jp
mov
jmp
outsb
xor
sbb
inc
jb
das
dec
lcall
call
je
sub
ja
shl
orl
push
push
ljmp
out
sbb
fnstsw
xchg
pop
pop
mov
pop
xor
hlt
dec
mov
ljmp
out
aam
xchg
inc
mov
mov
jne
int3
ds
cltd
popa
cmp
test
mov
mov
inc
dec
repz
jg
and
jp
cmp
fisubrs
call
and
xor
mov
arpl
add
jle
jmp
jg
aaa
clc
incl
xchg
sbb
mov
mov
pop
cmp
inc
daa
mov
cmp
jbe
pushl
cli
add
dec
mov
mov
daa
mov
push
pop
pop
jl
idivb
pop
push
push
gs
test
sub
push
mov
lock
sub
stos
outsl
lcall
jmp
adc
fs
pop
les
fdecstp
shl
jmp
mov
ficompl
clc
pop
in
mov
fsub
in
in
std
aam
std
jge
pop
xchg
cs
xchg
mov
xchg
ljmp
das
cmc
mov
data16
insb
mov
hlt
in
pusha
lods
ljmp
inc
hlt
std
fcoml
lcall
ljmp
cmp
pushf
out
out
out
jbe
addb
adc
subb
into
rorl
pop
loopne
xor
inc
xor
mov
dec
lret
icebp
lahf
xor
lcall
push
and
stos
ror
fists
js
in
jmp
lcall
scas
add
je
jmp
dec
and
xchg
dec
stc
sub
sbb
mov
loopne
or
ljmp
mov
js
jl
mov
cmp
std
sar
or
out
pushf
std
pushl
gs
fcmovb
fadds
aad
test
shl
jp
push
jg
cmp
xchg
xchg
jg
dec
push
xor
mov
gs
pop
icebp
mov
sbb
xchg
lods
call
mov
xor
data16
pop
pop
cmp
xchg
lcall
jg
cmp
mov
scas
data16
nop
sbbb
movsl
add
popf
nop
decl
push
mov
outsb
push
std
jae
pop
pop
aad
mov
test
into
xlat
sbb
jmp
clc
lds
out
mov
je
call
mov
js
mov
aam
enter
push
lock
mov
jp
insl
lcall
sub
or
sar
test
cmp
call
call
push
mov
sarb
push
aad
cli
push
ror
cmp
rcrb
das
mov
dec
or
incl
cmc
lds
clc
jmp
out
adc
xchg
push
jmp
rcl
cmp
sbb
jl
fcoml
dec
push
cmp
cs
adc
cmp
xchg
enter
or
out
test
movsb
pop
ljmp
adc
incl
mov
mov
adc
sbb
adc
jnp
and
lods
repz
icebp
or
gs
push
push
cld
inc
imul
jle
mov
jmp
cmpsb
sbb
xor
pop
je
jmp
sbb
cmpsl
mov
arpl
sbb
fdivs
repz
aaa
clc
incl
sbb
test
test
sbb
jb
add
mov
ljmp
je
out
mov
aaa
adc
mov
push
std
xor
cmc
xor
loopne
jmp
xor
dec
scas
pop
inc
stc
inc
aaa
in
pop
fadds
inc
call
xor
or
dec
jp
push
sbb
fsubs
jne
stos
arpl
pop
jns
incl
xor
sub
loopne
mov
mov
aad
xlat
xchg
mov
iret
bound
sub
push
data16
fistps
cs
pushl
inc
out
dec
ss
sbb
std
cmp
out
pop
sub
cwtl
fdivrl
fistpll
cmpb
xor
pop
decb
loopne
push
jb
pop
lcall
fcmovbe
dec
bound
push
xor
push
sub
mov
jns
or
sbb
std
push
jp
icebp
jb
or
in
jbe
imul
cmp
push
arpl
cltd
sbb
gs
mov
xor
lcall
mov
jae
mov
xchg
and
dec
add
les
nop
adc
push
loopne
in
mov
in
inc
in
sbb
in
mov
or
loopne
out
call
ljmp
rcll
bound
push
sbb
roll
cwtl
movsl
pop
and
sub
std
and
out
or
je
pusha
mov
lcall
in
and
jno
test
push
push
sub
add
xchg
jl
push
inc
push
push
popa
or
mov
adc
movsb
repnz
jg
lcall
pop
inc
rorl
enter
mov
mov
push
jo
imulb
jl
push
fdivrs
nop
or
jb
data16
test
decl
lcall
or
movsb
push
dec
xor
in
imul
in
out
jb
pushl
cli
ror
fsubl
mov
incb
pushf
push
xchg
add
lcall
push
repz
push
rcll
adc
xchg
mov
xor
mov
out
ficoml
pop
jp
cwtl
test
lret
jg
sub
in
cmp
int3
and
cmc
fldl2e
leave
jne
lret
out
loopne
sbb
fmulp
cmpsl
jne
aas
subl
sub
data16
lods
pop
out
adc
cmp
mov
xor
or
loop
or
sbb
in
adc
pusha
ds
pop
loop
aas
push
cld
mov
test
loop
dec
or
lcall
incl
lods
shlb
mov
push
call
jne
pop
push
xor
cld
scas
mov
decl
loope
cmp
nop
ljmp
cmpsl
xchg
jl
hlt
fiaddl
jmp
jp
push
out
in
fwait
insl
push
aam
out
mov
ror
push
dec
icebp
xchg
outsl
dec
dec
dec
sbb
daa
jbe
ljmp
incl
cmp
sub
out
movsb
pop
fcoml
jne
inc
bound
pushl
mov
add
scas
in
jo
sub
sbb
or
out
push
clc
mov
fcmovne
xchg
and
js
pop
scas
xchg
cmpsl
mov
mov
or
pop
arpl
arpl
call
pop
mov
call
xchg
jbe
test
in
push
sbb
mov
sub
fstl
call
pop
jg
incl
lds
jmp
push
push
cmp
aam
sbbb
ljmp
mov
fdivrl
jo
cmc
call
mov
icebp
pop
pop
mov
repnz
out
jge
jge
divl
int
mov
decl
lcall
xor
jnp
xchg
adc
push
inc
cmp
mov
mov
ss
stos
out
notl
sbb
insl
dec
cmp
std
aas
jg
dec
sub
push
in
out
dec
mov
into
loope
or
or
jl
int
aam
inc
dec
inc
or
stos
repnz
mov
shll
insb
jg
lds
mov
repz
push
and
xchg
adc
xchg
pop
mov
je
pop
sti
pop
int
push
or
pop
add
push
lret
mov
sti
outsb
push
addb
fcomps
into
lcall
imul
in
xchg
fdiv
mov
int
scas
sub
add
mov
mov
movsl
mov
xchg
inc
cltd
pop
sub
movsl
adc
out
mov
jg
mov
xor
shrb
cs
dec
ja
lods
lcall
dec
inc
aaa
xor
lea
orb
push
sub
or
jne
xchg
cwtl
fisubl
pop
clc
pushl
dec
sub
xchg
cltd
or
ljmpw
mov
lock
lds
jns
xchg
and
out
pop
push
mov
clc
loope
hlt
sbb
fs
stos
mov
lcall
fnsave
mov
stos
lahf
jmp
arpl
or
cmp
enter
call
xchg
popf
jns
xchg
jne
xchg
pop
lcall
cmpsb
add
adc
shrb
mov
lcall
in
aad
scas
mov
dec
inc
dec
sbb
dec
mov
add
jmp
sbb
lea
dec
les
mov
out
stos
idivb
push
fnsave
adc
dec
repnz
leave
jo
xorb
cmp
outsl
outsl
mov
rcrl
sarl
and
add
jecxz
popa
cld
sub
sub
or
in
mov
pop
mov
sbb
mov
inc
hlt
test
decl
shlb
mov
mov
cmp
mov
jge
call
and
or
jl
out
mov
imul
xchg
mov
xchg
data16
outsl
lock
imul
jecxz
hlt
sub
push
sub
jg
mov
loopne
push
dec
pop
xchg
cld
int3
lret
adc
jmp
loop
cmp
push
scas
xchg
xor
inc
pop
push
rcll
outsl
lcall
sti
xor
and
add
cltd
dec
jb
sub
gs
pushl
sar
pop
sbb
test
aas
mov
jecxz
mov
sub
adc
cmp
inc
lcall
ljmp
jns
xchg
lret
jno
mov
push
push
je
in
jbe
push
stos
jnp
jge
jno
out
cmp
sbb
sbb
enter
es
int
xchg
clc
dec
std
dec
cld
neg
daa
stc
xchg
or
mov
mov
xchg
std
dec
aas
int
js
mov
add
addl
and
orb
dec
popa
inc
incl
xor
lahf
pushf
lods
push
lea
loop
movsl
add
test
js
enter
hlt
fildll
ljmp
into
push
or
aaa
mov
jmp
fiadds
pop
xchg
or
cmp
pushf
in
push
inc
jbe
mulb
mov
insl
mov
sti
nop
mov
jg
push
bound
pop
sbb
push
dec
popa
fs
cmp
roll
jmp
xchg
xlat
arpl
jge
lds
mov
push
mov
add
jge
jl
cmp
aas
popa
stc
sti
out
das
sti
xchg
pop
inc
pop
ret
js
jns
pushf
pop
sbb
out
sub
clc
mov
pop
cli
mov
stc
dec
xchg
sbb
shl
cltd
insl
out
iret
in
incl
out
test
mov
movsl
int
cli
dec
sbb
int3
jp
pop
inc
pushf
mov
jmp
push
cwtl
fnstenv
jne
sbb
adc
das
mov
in
mov
or
mov
sti
xchg
nop
pop
repz
enter
das
adc
incl
and
test
cmp
lcall
cld
incl
jns
scas
dec
mov
or
stos
mov
repnz
push
jb
jg
sub
or
mov
pop
mov
xchg
cs
mov
pop
cli
dec
lea
inc
imul
mov
sti
push
add
dec
call
lcall
cld
lret
mov
xchg
push
test
decl
or
xchg
lcall
push
out
ret
int3
adc
adcb
sub
adc
sbb
lods
gs
dec
sarb
in
je
in
or
jne
push
jle
ljmp
clc
popl
cmp
mov
jbe
cld
jl
ror
xor
adc
movsb
dec
xchg
sub
xorb
stos
je
pusha
fisubrs
rcr
cli
jg
lret
dec
sub
mov
sbb
sbb
lods
pusha
scas
aam
sar
jmp
and
stos
fwait
cmc
or
lcall
mov
pop
pushl
mov
and
neg
and
sub
outsl
je
pop
mov
pop
inc
push
sarl
cmp
shlb
int3
xor
aam
into
movsb
repz
mov
sbb
mov
jle
repnz
lahf
xor
dec
daa
sbb
inc
aas
mov
sbb
mov
ror
jno
jae
or
call
fcomps
mov
sub
sbb
xchg
jecxz
loopne
out
cmp
and
ljmp
bound
xor
add
adc
lcall
outsl
pop
pop
sbb
jb
fisttps
cmp
pushl
push
push
jmp
dec
xchg
xchg
cmp
jnp
sbb
in
out
leave
mov
test
fisttpll
mov
sbb
nop
in
aad
jg
stos
and
and
pusha
movb
fcmovne
ret
mov
shll
jle
inc
rolb
fsubp
mov
popf
mov
cmc
or
mov
ss
xchg
jne
mov
bound
push
icebp
in
daa
or
adc
enter
pushl
push
xchg
push
fiadds
jae
ss
lods
jns
pop
icebp
push
jp
loopne
sbb
ljmp
cwtl
add
mov
iret
ljmp
fcmovb
push
insb
jb
pop
stc
je
fs
insl
mov
jl
fucom
fmuls
xchg
into
repnz
mov
mov
jecxz
push
lods
pushf
xchg
mov
filds
push
mov
sub
mov
aam
xchg
dec
dec
cmp
jmp
lahf
lcall
inc
mov
pushf
mov
xchg
push
lock
std
mov
icebp
xor
sbb
ss
sub
cld
mov
xor
loopne
pop
into
ret
inc
or
rcl
loop
outsb
pop
movsl
lahf
xchg
rcr
pop
inc
cmpsl
jo
mov
cmp
dec
rol
and
fnstsw
stos
push
xor
clc
aaa
sub
pop
dec
mov
pop
push
in
add
stc
shll
mov
push
stc
push
mov
lret
scas
lret
push
adc
mov
lds
jp
xor
pop
jmp
out
mov
popa
std
adc
insl
icebp
ljmp
inc
pushl
call
push
xchg
and
xchg
in
jae
sarb
es
ss
push
add
arpl
mov
sub
loopne
pushl
rol
push
sbb
std
cmp
mov
idiv
daa
scas
inc
idiv
outsl
mov
lcall
test
std
jbe
cli
insb
add
iret
nop
sub
std
dec
adc
add
mov
jg
stos
pusha
ret
mov
jl,pt
sbb
pop
inc
cmp
imul
cvttps2pi
insb
out
ds
sub
pslld
rorl
lcall
push
add
popa
imul
mov
shr
pop
js
or
in
mov
lahf
cli
aaa
icebp
ficoml
inc
or
lcall
push
cmp
incl
mov
mov
rep
and
clc
ret
scas
aaa
leave
add
jno
and
xor
push
js
mov
inc
inc
sarb
xchg
fildll
das
test
loope
inc
mov
ds
cwtl
inc
sub
ljmp
lock
ret
sbb
imul
pop
mov
mov
and
pushl
or
and
push
jo
fidivs
mov
and
stos
sbb
and
adc
fildll
jnp
das
ljmp
adc
out
call
or
cmp
inc
pushf
sbb
jg
outsb
inc
push
test
add
popa
lahf
mov
dec
pop
cli
clc
pop
and
and
or
cltd
push
or
push
jp
mov
and
fdivr
pop
mov
loop
call
lahf
addl
push
loop
cmp
nop
sub
sub
and
lcall
xor
cli
rdtsc
push
loop
imul
adc
and
mov
dec
lret
aam
pop
cmp
xor
iret
loopne
jg
stos
pop
lods
xor
test
and
pushf
xor
push
pushl
xor
scas
out
sbb
rclb
shrb
shlb
sub
aam
fucomip
lods
bswap
push
sbb
pop
cmp
call
scas
xlat
or
mov
and
inc
cwtl
enter
idiv
jmp
movsb
add
dec
dec
cmc
and
inc
mov
ja
adcl
mov
jns
or
movsb
sbb
jno
scas
sahf
fsts
or
mov
push
adc
ds
shl
mov
mov
pop
adc
jne
mov
mov
add
dec
xor
mov
test
push
add
insb
push
fidivl
call
adc
xor
sbb
push
in
jae
shl
mov
jmp
dec
outsb
or
push
cmp
cmp
ljmp
cmpsb
mov
or
xchg
or
mov
mov
out
jne
xchg
stc
subb
daa
jno
pop
cmc
outsl
lock
out
fwait
or
in
adc
mov
dec
and
call
mov
inc
loope
pusha
dec
push
push
dec
mov
idiv
inc
aaa
mov
jo
movsl
ljmp
and
jae
insl
mov
bound
and
push
add
jmp
nop
insb
dec
or
sub
imul
mov
test
mov
sbb
adc
add
pop
mov
lods
dec
aas
fprem1
adc
and
call
fs
mov
cs
jle
mov
xor
inc
out
adc
pop
mov
popa
dec
inc
inc
xchg
sbb
mov
inc
aaa
gs
test
pop
mov
jg
cmc
mov
mov
sbb
int
test
test
test
icebp
int3
in
cmpl
lcall
adc
insl
int
xchg
fsts
sub
loop
ljmp
outsl
jecxz
insb
fistl
les
pop
sub
fxch
jno
scas
in
decl
jp
ss
or
dec
add
sti
or
push
pop
sub
ss
call
pop
mov
imul
mov
lea
je
or
jb
mov
stos
adc
in
push
jle
and
pop
cs
mov
nop
fidivl
and
cld
push
loopne
es
xorb
mov
jg
call
sub
mov
dec
cld
pop
movsb
add
imul
pop
mov
fs
cmpsl
fildl
cmc
lcall
or
push
jbe
fcmovbe
jg
int3
xor
call
mov
push
call
loope
xor
mov
mov
iret
decl
bound
std
notb
mov
jg
cmpsb
lock
push
incl
xor
rclb
xor
push
aas
jno
out
push
cwtl
shlb
hlt
fnstsw
decl
clc
out
push
aaa
mov
and
test
aad
mov
push
gs
xor
dec
sbb
bound
ljmp
outsl
lods
mov
cli
push
ljmp
jg
rol
stos
rclb
ljmp
aas
cmp
repnz
imul
hlt
mov
xchg
adc
ljmp
and
data16
cmp
fs
mov
aam
gs
inc
xor
adc
pop
aad
ja
push
sbb
fisttpll
stos
mov
stos
stc
xchg
push
sub
andb
das
jb
jo
lahf
inc
cmpl
shll
divl
movsl
loop
xchg
sub
outsl
xor
lahf
sub
jg
jge
mov
ljmp
lcallw
lods
ljmp
mov
pop
loopne
jl
dec
hlt
pusha
lcall
jns
and
cld
jg
hlt
cs
jnp
cmpl
lock
cmp
jb
loopne
cltd
push
dec
pop
scas
shl
add
shll
clc
mov
lock
add
gs
insl
sub
les
or
pop
xchg
test
cmp
xchg
push
xlat
in
xchg
mov
inc
or
rorl
test
sub
testl
insb
cld
jmp
push
mov
bound
adc
adc
bound
pop
outsb
js
clc
stos
xchg
imul
decl
imul
int3
mov
stc
dec
mov
push
out
iret
bound
ret
cmp
lcall
xchg
mov
lret
push
fldt
and
aam
int3
in
dec
jnp
jle
ljmp
sti
outsl
cld
jnp
nop
loopne
incl
mov
movsb
inc
daa
out
xor
mov
mov
and
xchg
mov
sbb
icebp
ljmp
fdivs
mov
mov
pushl
xchg
loope
cmc
push
cmp
insb
pop
sbb
jb
push
in
adc
inc
sbb
mov
lods
inc
sub
push
pop
outsl
jno
das
out
inc
aas
nop
sbb
cltd
cmp
pop
ljmp
cmpb
aam
enter
sub
xor
call
lcall
mov
idiv
jg
push
loope
cmp
jne
mov
mov
repnz
jae
pop
call
sub
lds
in
dec
xor
ljmp
ret
xchg
lds
lret
xchg
or
xor
sub
incl
or
and
fnstsw
or
xor
jno
cmc
xchg
xchg
jbe
xchg
pop
loopne
lcall
rorb
das
ret
xor
adc
pop
fs
lcall
movsl
xlat
int
inc
mov
jbe
rcl
nop
mov
test
or
call
xchg
mov
jg
imul
ret
aas
add
xlat
sub
sub
jge
jo
ljmp
cld
fists
dec
leave
bound
lds
pop
pop
scas
pop
ror
sub
push
jp
cmp
decl
pushf
out
jns
sbb
orl
inc
xor
sub
inc
icebp
lcall
repz
sbb
lods
pop
repz
iret
xchg
pop
sub
pusha
incl
ret
mov
jb
jle
ljmp
loope
in
jg
sti
leave
jecxz
insb
mov
pop
or
dec
into
jp
add
lods
add
call
pop
ljmp
pop
pop
xor
call
lcall
sub
pop
mov
aas
scas
dec
cmp
sub
jmp
loopne
sar
push
jge
adc
pop
rcr
mov
add
fbstp
inc
out
xor
std
sti
push
or
je
idivl
decb
decl
pop
cmc
jb
cld
cmp
push
mov
adc
frstor
mov
stos
push
cmp
or
jmp
mov
or
int
mov
outsl
adc
xor
fcomip
arpl
fs
cmc
incl
nop
fwait
add
cmpsl
data16
stc
ljmp
jl
mov
pop
outsl
out
adc
xchg
iret
mov
inc
movsl
push
mov
loope
dec
outsl
and
sbb
dec
std
dec
sbb
jno
mov
or
daa
aad
fstpt
mov
roll
jecxz
or
xlat
jb
movsb
jg
rorb
inc
aas
jnp
inc
jl
popf
mov
cmpsl
mov
inc
mulb
pshufw
inc
jp
cmp
icebp
sti
mov
ljmp
cmp
iret
sbb
stc
adc
mov
push
lret
aad
stos
lods
iret
out
shll
shl
xchg
in
xchg
inc
sbb
mov
sbb
cmp
jle
dec
es
mov
call
or
cmp
fs
ja
xchg
in
add
jmp
int3
shrb
ret
fucomip
add
cmp
push
add
pop
cmp
jo
cmpsl
sub
scas
push
mov
jg
mov
ret
xchg
sbb
mov
jne
stos
inc
imul
or
decl
stc
mov
sbb
andl
loop
fnstsw
adc
mov
aas
pushf
pop
jp
ljmp
aaa
cltd
jle
hlt
and
insb
adc
fstpl
inc
pop
popf
inc
call
incl
daa
mull
xor
sbb
leave
movsl
mov
mov
push
mov
icebp
lcall
arpl
mov
ljmp
xchg
sbb
loop
mov
notl
call
xchg
add
fildll
std
sbb
mov
clc
enter
idiv
jg
or
imul
push
sbbl
jae
adc
pop
mov
lods
je
popa
dec
mov
mov
fcomps
test
cmp
int3
dec
daa
fisttps
outsl
sub
mov
jg
pop
adc
mov
or
xchg
xor
sbb
addr16
mov
jae
stc
bnd
test
outsb
sahf
adc
in
lea
jecxz
xor
mov
mov
sub
notl
mov
pop
or
sbb
rcll
dec
loope
mov
scas
mov
fnstsw
lcall
cli
imul
dec
adc
notl
lods
push
ljmp
xchg
shll
jecxz
adc
push
enter
dec
arpl
imul
sbb
adc
out
cmc
ficoml
cwtl
fcompl
sbbl
test
dec
and
lcall
jge
and
dec
dec
jg
or
sub
call
sbb
leave
leave
pop
sbb
movsl
add
jmp
jae
test
mov
mov
jo
push
inc
xor
cltd
and
xor
negb
lcall
xor
or
pop
push
and
mov
out
int3
jne
xchg
or
cmp
xor
push
jl
lahf
pushl
idivb
stos
enter
push
stc
lds
mov
bound
mov
imul
jge
loop
push
push
gs
push
iret
adc
dec
xchg
dec
loopne
out
lea
iret
mov
sub
pop
fnstcw
jo
mov
ss
push
jo
in
or
push
mov
cmp
mov
decl
das
lods
mov
inc
xor
and
or
pop
mov
cmpsl
xorb
icebp
cmpb
push
cmp
xlat
stc
fbld
repz
xor
adcb
adc
and
ljmp
jg
cmpl
pop
sbb
dec
lcall
xchg
sub
mov
push
ss
call
lcall
out
sub
call
jmp
pop
in
hlt
xchg
sahf
jmp
push
or
aad
cli
sbb
xchg
push
push
ljmp
lock
je
call
xchg
mov
pusha
push
call
std
push
shll
push
jecxz
add
fistpl
test
sub
inc
cs
fadds
and
sbb
jg
int3
fadd
push
je
outsb
pop
inc
into
mov
sub
or
decl
cmpl
dec
rep
ja
hlt
dec
outsb
push
pop
xchg
adc
adc
sti
pop
fwait
jo
add
enter
movsb
out
subb
lds
lret
cmp
jbe
inc
decl
outsl
lcall
movsl
dec
push
mov
push
or
or
rcll
inc
shrl
push
jnp
jg
jmp
orl
pop
mov
movsl
popa
mov
or
push
gs
mov
incl
repnz
dec
mov
add
stos
in
mov
dec
adc
pop
push
call
push
icebp
dec
pusha
pusha
pop
gs
or
inc
arpl
mov
push
add
fdivrs
call
mov
call
icebp
decl
out
es
stos
mov
add
mov
pop
adc
incl
mov
adc
fisubl
test
ret
jg
stos
stos
inc
or
call
sahf
loop
repnz
fdiv
mov
lcall
in
call
mov
in
fsub
or
adc
jbe
ret
jg
mov
mov
fnsave
pop
push
insb
dec
out
lcall
mov
jge
dec
pop
imul
sbb
shll
ret
sbb
inc
call
aaa
data16
push
or
out
push
out
mov
test
pop
sbb
lcall
call
mov
jg
ret
fucomi
subl
das
xchg
decl
mov
popa
ds
push
out
andl
outsb
insl
pop
mov
outsl
cmp
ss
fs
ret
and
inc
lret
lahf
pop
pop
cmp
call
ljmp
sbb
dec
cli
cmp
shl
sub
push
lret
push
push
std
jmp
adcl
pusha
lds
dec
test
outsb
xchg
push
lods
add
lock
loopne
mov
jecxz,pn
lcall
in
fidivrs
adc
adc
lret
mov
hlt
outsl
lock
mov
pop
fisubrs
sti
int3
lods
hlt
push
pushl
add
inc
add
shll
das
push
popa
cmp
rcrl
fisttpl
or
out
add
or
repz
mov
sti
ja
lret
dec
ljmp
xchg
or
dec
mov
pop
imul
mov
imul
mov
jmp
inc
xchg
jl
test
test
inc
xchg
dec
and
lcall
adc
pusha
xchg
pop
scas
sahf
push
cli
sub
out
aas
xchg
arpl
push
call
cli
mov
sub
add
iret
cli
into
fldcw
pop
arpl
adc
loop
cmp
loop
jne
outsb
lock
or
ret
fbld
jne
adc
pop
push
push
fimuls
mov
pop
lcall
sti
repnz
dec
mov
sbb
lcall
outsl
icebp
or
push
insb
push
call
test
int
das
cmc
lods
ficompl
fistpl
fwait
cwtl
and
pop
inc
enter
sbb
imul
cmp
push
out
xor
dec
push
in
ret
andl
xchg
into
js
inc
xchg
xor
aaa
push
std
pop
sti
adc
out
fcoms
cmc
jae
mov
fidivrs
sub
cmc
inc
add
roll
xor
or
frstor
dec
out
mov
popa
int3
xchg
and
adc
xor
and
mov
in
test
inc
xchg
mov
ljmp
jle
je
push
jno
shl
mov
gs
inc
jg
pop
cwtl
inc
movsb
shrb
or
adc
jae
incl
leave
cmpsb
lods
leave
mov
aas
xor
out
icebp
mov
mov
ljmp
sbb
sbb
loop
or
pop
sub
mov
push
dec
and
jg
fimuls
test
push
mov
inc
in
xor
xchg
in
pop
pop
push
adc
add
xor
pop
imul
decl
scas
mov
js
pop
jmp
dec
pop
ret
adc
ljmp
es
mov
sbb
sbb
push
lock
sub
push
scas
mov
call
push
movsb
popf
xchg
ljmp
movsl
nop
rolb
jg
fdivrs
and
clc
adc
sub
cmc
dec
push
push
xorl
ljmp
mov
pop
xchg
and
and
inc
lods
inc
aad
dec
aas
sbb
jl
in
out
push
xor
xchg
mov
addr16
dec
lea
sbb
loop
das
cmpsl
mov
aas
ds
mov
pop
ja
lahf
fimull
mov
call
in
fsts
sbb
jge
cmc
aad
or
jbe
mov
fisubrs
hlt
dec
cld
mov
fisubl
mov
xchg
pop
adc
push
in
jmp
lret
and
and
push
mov
dec
pop
mov
lahf
xchg
sub
mov
inc
aam
mov
aaa
shll
dec
fimuls
and
push
add
dec
aaa
pop
jno
imul
clc
fimuls
in
enter
sub
or
or
repz
cmp
or
mov
cmp
jg
lods
stc
mov
ret
push
ficompl
jg
std
mov
mov
test
jmp
mov
int
xchg
jp
lret
sbb
cmp
mov
std
mov
push
mov
dec
scas
stos
incl
or
das
icebp
dec
adc
fwait
cld
or
sub
push
sbb
arpl
fdivr
incl
leave
nop
mov
fidivs
adc
popf
repz
idiv
push
inc
das
std
decl
inc
repnz
stos
mov
mov
jae
inc
adc
mov
dec
xchg
inc
fcomip
outsb
cmc
cltd
add
xor
add
xor
sub
jmp
loopne
mov
repz
jl
pop
xchg
pop
push
mov
repnz
and
aaa
incb
outsb
sub
mov
cmp
jle
lds
leave
inc
mov
mov
sbb
hlt
xchg
dec
adc
fbld
repnz
icebp
mov
pusha
iret
repz
mov
push
and
int
daa
dec
push
aam
or
pop
loopne
cld
push
jp
repnz
mov
sbb
andb
rolb
ret
sub
cmpsb
fldt
mov
mov
dec
sahf
xor
add
call
cli
and
jg
add
mov
pop
or
mov
adc
aas
sbb
jg
inc
lock
pop
mov
les
data16
loopne
call
jg
lret
mov
or
shll
jae
in
lods
idiv
nop
pop
ljmp
outsl
cmp
addl
outsb
push
sub
clc
das
gs
jg
mov
push
mov
les
xchg
decl
inc
inc
xorl
sub
push
daa
les
clc
add
dec
xchg
popf
aad
sti
test
insl
out
jnp
or
xchg
pop
cmpsb
add
mov
mov
push
cmp
xchg
and
pop
mov
inc
sub
movsb
mov
fldl
mov
push
jge
mov
sbb
dec
mov
pushl
dec
movsb
int
filds
enter
repnz
outsb
lock
clc
clc
in
mov
mov
inc
fnsave
out
lret
rcrb
hlt
out
mov
cmp
aam
jno
adc
and
ljmp
inc
inc
popa
jae
ret
push
movsb
push
cmp
mov
pushl
and
mov
push
rolb
cmp
pop
ss
xchg
stos
incb
fsubrl
daa
jge
sbbb
outsl
add
lret
call
adc
add
lds
stos
out
lock
xor
bound
rorl
das
cmc
mov
xchg
scas
mov
stc
jle
sub
xchg
sbb
sbb
jmp
dec
jns
adc
jno
sub
push
xchg
ffreep
hlt
adc
inc
vmovdqu
jg
jbe
pushf
stos
xchg
out
hlt
mov
rolb
pop
adc
adc
jg
lcall
mul
das
push
test
inc
jmp
popa
xor
cli
decl
std
lods
xor
xchg
stos
in
mov
js
mov
xchg
or
outsl
call
dec
call
inc
mov
and
dec
xchg
cmp
xlat
imul
adc
arpl
popa
dec
pusha
or
jb
push
push
cmp
lret
pushf
call
pusha
fstpt
pop
mov
pushf
pop
imul
xor
iret
add
sub
mov
aaa
hlt
stos
mov
lret
jnp
cmp
sub
mov
icebp
dec
rcll
mov
add
nop
mov
dec
fcompl
push
inc
dec
push
loope
cmp
dec
stos
adc
dec
sub
jmp
aas
fstpl
inc
mov
into
fcompl
xor
inc
fisubrs
outsl
hlt
outsl
ds
sub
mov
cmpsb
fdivrp
scas
clc
mov
mov
sub
sbb
testl
decl
xchg
stos
pop
xchg
icebp
dec
pop
push
sbb
mov
pop
aam
nop
jmp
inc
mov
add
mov
cmovge
outsl
fbstp
jb
lock
stos
cld
sti
cwtl
sbb
incl
mov
xchg
jne
jecxz
movsb
mov
add
cmc
jnp
jecxz
fisttps
jo
sbb
andb
mov
push
stc
pushl
test
mov
inc
jne
xlat
aam
or
inc
incl
mov
mov
cmpsl
movsl
sbb
ljmp
je
call
shrb
fbld
adc
pop
rorl
jne
push
push
std
in
test
mov
lcall
or
dec
xor
shlb
sbb
iret
idivl
add
inc
cli
decl
pushl
dec
pop
ret
jg
or
pushl
cli
sub
adc
cld
call
lcall
xchg
aam
movsb
xchg
push
cmp
fs
xchg
leave
ljmp
hlt
jmp
xlat
xor
stos
mov
or
push
pop
adc
sbb
das
hlt
stc
xor
mov
rcr
stc
adc
or
mov
mov
addr16
inc
incl
leave
inc
addl
inc
shlb
fdivr
pushl
popf
xor
inc
pushf
lcall
sti
ljmp
mov
mov
in
or
pop
xchg
sub
xchg
xchg
and
mov
cmp
dec
fwait
clc
pop
rcrl
fidivrs
push
sar
aam
dec
inc
int
pop
fsubl
mov
jmp
pop
sub
cli
cmp
push
pop
mov
stc
out
ret
mov
and
into
inc
mov
fcompl
jge
ret
sbb
lcall
enter
mov
inc
xchg
dec
sub
pop
inc
pop
mov
mov
or
cmpsl
ljmp
and
repnz
mov
or
lcall
push
sub
stos
xchg
pop
lcallw
aam
shll
jbe
sbb
loope
or
sbb
call
jmp
lds
pop
pusha
sub
mov
inc
outsl
call
enter
adc
mov
fdivrs
push
adc
nop
and
fs
dec
sti
xchg
flds
mov
cmp
loope
incl
sbb
int3
roll
fiaddl
add
loope
std
lea
sbb
call
mov
or
pusha
les
lret
ret
and
aad
pop
jmp
push
out
push
cmpsl
push
mov
ffree
jne
enter
push
pop
and
xlat
mov
jp
mov
loopne
adc
push
lods
push
mov
lcall
and
movsl
mov
adc
jg
mov
xchg
jl
scas
jnp
mov
ret
cmpsb
cmp
sbb
mov
loopne
out
sub
push
jno
xchg
in
push
mov
sqrtps
add
mov
loope
lds
pop
xor
sbbb
sbb
test
mov
mov
or
subl
pop
inc
vminsd
push
push
pop
adc
jg
test
mov
or
clc
divb
inc
call
outsb
cmp
inc
into
aaa
cmp
ss
push
add
lods
mov
pop
xor
cmp
incl
icebp
loopne
cmpl
in
inc
jle
cmp
push
mov
jnp
lcall
or
addl
or
call
mov
add
outsb
das
icebp
sbb
xor
sti
ljmpw
clc
stc
daa
in
jg
add
lahf
movsb
cmpsb
pop
shlb
sub
mov
add
cmp
mov
adc
push
and
xchg
in
pushl
int
loope
sahf
mov
or
ja
add
divl
xor
ljmp
or
orb
mov
push
jno
ficoml
cld
lcall
test
ja
adc
push
insl
xchg
mov
ljmp
loop
sbb
jle
sub
icebp
mov
or
das
std
xchg
push
jae
dec
testl
xchg
imul
mov
or
movsb
js
fwait
divb
sbb
dec
js
lock
cmp
in
ljmp
cmp
sub
jmp
cmp
lcall
mov
mov
cld
dec
xor
inc
mov
push
mov
test
xchg
aas
mov
jmp
or
mov
adc
cwtl
cmp
xchg
inc
mov
ljmp
incl
icebp
xor
bnd
mov
jns
repnz
incl
and
int
cmpsl
lahf
imul
push
and
movsl
imul
ljmp
icebp
lods
aaa
jge
and
and
cmp
daa
adc
jne
mov
fdivrs
incl
subl
fcoml
sbb
sub
punpckldq
pop
ret
mov
les
clc
push
std
ljmp
enter
sub
pop
loopne
lahf
pop
push
cwtl
push
out
add
lcall
or
int
push
jp
in
mov
push
mov
mov
loopne
sub
xchg
pushl
mov
testl
xchg
mov
pushf
aam
enter
adc
xor
incl
mov
jg
inc
pop
mov
out
les
movsl
or
dec
sbb
icebp
push
add
fsubr
pushl
pop
sub
mov
jae
or
jo
out
pop
inc
nop
add
je
cmpl
mul
sub
je
mov
jmp
fcmovnu
pop
gs
loopne
add
pop
dec
inc
mov
cltd
push
mov
jno
push
into
aas
fsubs
sbb
and
outsl
addr16
sub
inc
aam
cli
int3
cmp
not
sti
xchg
fwait
or
lcall
movsl
jae
decl
dec
xchg
in
fs
ret
adc
and
call
int3
hlt
xor
or
jge
testl
decl
push
push
xor
mov
imul
pushl
rcl
and
dec
add
inc
dec
xchg
stos
loope
mov
sbb
cltd
in
aam
incl
mov
jecxz
cmpsl
stos
fsts
in
jmp
mov
popf
jmp
inc
cmp
mov
decl
std
out
test
dec
ds
push
int3
stos
jmp
inc
mov
dec
call
jb
pop
add
popf
test
out
std
daa
mov
les
push
inc
push
mov
fwait
lcall
ljmp
jno
idivb
das
cmpl
push
in
repz
push
sar
add
adc
icebp
mov
sub
gs
jle
daa
decl
std
enter
push
cmp
or
sbb
and
add
mov
xchg
js
cmp
pop
loopne
pop
ret
or
arpl
ja
inc
ljmp
pop
cli
pop
cmc
jg
inc
cmpsb
or
cs
mov
pop
pop
sar
lcall
mov
jb
and
cltd
push
les
in
ret
pusha
adc
dec
jne
push
jmp
scas
pop
das
push
insl
xlat
mov
lahf
out
daa
sbb
mov
jns
out
ror
xor
int
adc
stc
push
mov
mov
jecxz
cwtl
stos
test
notb
jg
int
loopne
mov
movl
imul
ds
ja
sti
sub
lcall
ret
test
xor
and
xor
fwait
jp
call
int3
nop
lcall
test
inc
out
sub
push
sbb
xor
lock
lcall
xor
pop
xor
xor
xchg
or
jmp
out
icebp
add
push
adc
or
push
mov
mov
outsl
call
mov
jae
lcall
pop
sbb
in
jnp
ljmp
aad
add
scas
mov
add
mov
decl
das
incl
cmpsb
ja
mov
dec
jb
nop
xor
pop
mov
pop
sub
xor
mov
or
repnz
pop
je
cli
pop
jmp
jl
ja
outsb
into
push
mov
icebp
mov
icebp
xor
imul
jge
pushl
fcoml
scas
movsb
lods
repz
daa
clc
mov
lret
mov
lahf
xchg
call
pop
xor
cmpsl
mov
out
movsb
nop
mov
test
mov
enter
mov
push
test
inc
rcrl
jmp
xor
mov
rcll
jo
cwtl
mov
push
jge
popf
in
mov
push
lcall
incl
mov
fmul
mov
adc
jmp
mov
cmpsl
jb
popf
scas
call
jae
cmpsb
adc
push
incb
and
out
rorb
pop
loopne
xchg
mov
fisttps
into
sub
cltd
shrb
imul
jg
lahf
cmpl
or
out
cvtdq2ps
outsl
js
decl
or
mov
data16
popf
rcrl
jg
ret
cmp
xor
mov
clc
xchg
jb
pop
stos
ljmp
push
xchg
pop
hlt
xchg
jnp
push
test
mov
xlat
ret
int3
lret
jnp
fnstsw
jg
xchg
arpl
jne
rcl
test
or
lcall
jg
leave
add
add
rolb
int3
pusha
jns
sub
pushl
cli
and
in
subl
dec
nop
push
mov
lret
sub
inc
pop
ljmp
cmc
or
ss
mov
packuswb
jb
mov
jmp
mov
test
iret
sbb
inc
jne
inc
adc
call
adc
je
or
mov
sbb
aaa
call
push
mov
inc
cmp
sub
out
sub
xor
mov
push
std
call
pushl
jmp
dec
aaa
cld
cmp
in
inc
out
loop
xor
push
mov
ljmp
or
sub
es
xorl
fstps
mov
fpatan
mov
in
jb
lcall
adc
mov
rolb
test
cmp
cli
inc
inc
inc
fdivs
or
ljmp
mov
dec
xor
jg
ror
lcall
lret
addr16
sbb
xchg
push
jb
jmp
imul
pop
call
sarb
jns
imul
decl
push
fimuls
ja
scas
mov
or
xchg
test
dec
cmpps
fistpll
xlat
aas
mov
imul
das
lock
pushl
inc
sbb
push
call
mov
xchg
xor
pushl
hlt
mov
clc
mov
jmp
ss
xchg
fistl
ret
cli
jmp
mov
lcall
shll
mov
mov
repnz
insb
call
sbb
idiv
test
stos
cmp
sub
mov
insl
xor
cmovb
lcall
jp
cmp
xchg
out
ds
int3
shlb
popf
int
test
jmp
push
pop
es
jp
pop
dec
jg
push
daa
imul
aad
or
pop
mov
dec
add
jne
lock
jge
inc
add
add
mov
dec
rorb
xchg
movsl
in
sbb
xchg
dec
jg
insb
into
fcomps
sbb
jns
call
jmp
mov
mov
insl
jge
push
js
xor
dec
and
cmp
lcall
sti
test
xchg
and
clc
lcall
mov
lea
inc
sbb
and
cmp
adc
lds
in
jmp
jne
lahf
test
sub
fisttps
cmc
dec
int
push
cs
jmp
mov
cmp
rorl
mov
lcall
imul
cmp
mov
sbb
iret
xchg
mov
jmp
push
or
test
in
dec
adc
push
jl
pop
inc
and
adcb
pop
or
and
pop
cmp
frstor
popf
inc
mov
mov
jno
call
std
call
lret
xchg
std
and
dec
lret
test
shr
jbe
and
pop
jo
pusha
add
sub
lcall
es
push
test
lret
enter
push
jmp
pop
add
push
xchg
lock
jl
popa
cli
lock
push
adc
into
es
and
inc
ret
push
pop
test
ljmp
adc
out
cmp
xor
add
push
jg
cmpsl
jg
mov
mov
cwtl
push
pop
jecxz
and
std
jg
stos
stc
inc
cwtl
dec
add
and
lret
sbb
mov
jge
jg
jmp
fs
mov
out
loopne
orb
ret
inc
mov
movsl
pusha
cli
xor
jno
inc
mov
aas
jmp
xchg
push
int
insl
cmp
or
inc
mov
xchg
sbb
inc
jp
pop
or
and
mov
cmpsb
inc
jg
inc
adc
jo
enter
add
ljmp
adcl
incl
mov
xorl
mov
inc
aaa
push
imull
jmp
jg
adc
fucomip
and
cmp
cs
jg
pop
rcrl
outsl
cmc
cmp
cmp
pop
into
movsl
imul
imul
pop
les
call
dec
pop
push
dec
test
scas
ficomps
xor
sub
arpl
xlat
xchg
jmp
xchg
ljmp
dec
dec
cmp
lcall
aam
pusha
aas
repz
xchg
popa
test
loopne
push
shll
cli
test
jmp
out
mov
mov
jns
stc
pop
or
jl
pop
pusha
pop
and
fdivr
push
out
xchg
call
scas
fs
xchg
ljmp
xor
push
cmpsl
sbb
mov
popf
stc
lret
nop
xor
pusha
cmp
push
jnp
mov
mov
insb
test
xor
sub
jecxz
jg
push
cmp
test
or
push
push
stc
adc
mov
stos
sbb
jmp
xchg
xchg
mov
sbb
or
adc
xchg
xchg
cli
pusha
sub
ljmp
sarb
mov
shll
lret
push
in
adc
or
ficoms
mov
mov
inc
aad
jecxz
jg
lcall
cli
push
pop
jl
nop
mov
sub
inc
imul
bnd
inc
jmp
cltd
xor
jecxz
or
out
add
mov
xchg
stc
mov
jg
cld
sub
sub
repnz
repnz
cmp
into
rol
jnp
outsl
cmc
lcall
jmp
sub
inc
xchg
sub
pop
inc
dec
flds
mov
push
mov
adc
cmc
rcll
add
mov
dec
pusha
insb
or
or
call
xor
out
lods
pop
and
ljmp
ror
mov
nop
fmuls
pusha
call
dec
mov
ds
out
aad
stc
popf
jge
pop
mov
lret
xor
jl
mov
enter
inc
dec
sbb
jno
jo
je
std
sbb
inc
jmp
int
cmp
inc
les
jno,pn
add
lods
jmp
jo
dec
mov
pop
mov
mov
mov
lcall
imul
repz
sub
sbb
pushf
dec
loopne
or
pop
push
pusha
xor
sbb
jnp
fsubrs
and
add
stos
icebp
fldpi
int
xchg
add
mov
call
out
pop
je
stc
fcmovnb
imul
xor
xor
mov
es
push
xchg
sub
add
dec
arpl
sub
lret
add
sub
pop
pushl
sbb
adc
out
arpl
push
jp
cmp
ja
clc
jmp
notl
jmp
mov
jp
mov
xchg
push
arpl
stos
xchg
mov
jecxz
cmpsb
sbb
xchg
mov
outsl
scas
xor
dec
inc
lock
loopne
jmp
addb
decl
outsb
fldcw
mov
out
outsb
cmpsl
push
add
out
sti
pop
mov
ljmp
cmp
out
pop
addr16
scas
and
push
leave
cmpsb
mov
mov
addr16
stc
mov
add
jmp
adc
mov
jno
decb
and
or
decl
dec
clc
mov
stos
repnz
inc
push
xchg
mov
jg
mov
mov
enter
std
sbb
in
cmc
and
jb
adc
mov
mov
ljmp
int3
loopne
push
inc
xor
push
pop
fimull
mov
hlt
loope
movsl
daa
adc
pop
cmpsb
inc
lods
data16
mov
call
pop
jecxz
ret
and
cmp
ljmp
ljmp
enter
mov
and
jp
sbb
add
cmp
shlb
sbb
mov
lcall
movsl
bound
cmp
sub
cltd
sub
gs
lcall
int3
push
adc
inc
cmp
out
xor
clc
fdecstp
xor
les
bound
icebp
fnstsw
jbe
jge
sbb
xor
xchg
jl
aam
inc
fnstsw
adc
sub
ljmp
lock
pop
addb
adc
pop
decl
jp
mov
xor
dec
xchg
dec
push
jge
mov
xlat
js
mov
fucomip
ret
pop
ror
ljmp
scas
push
ret
inc
push
push
mov
mov
add
mov
adcb
mov
std
dec
push
out
jb
sbb
lret
jns
lods
cmc
fdiv
mov
pop
mov
test
inc
push
jmp
mov
movsw
add
or
push
mov
lahf
std
in
add
push
inc
fs
or
or
stos
add
dec
out
adc
orl
imul
sbb
dec
cmp
sbb
cmp
sahf
or
ljmp
sub
les
sub
pop
cmp
adc
fidivrs
mov
stos
call
adcl
lret
call
repz
lcall
push
adc
mov
pop
adc
mov
cli
ds
adc
jecxz
decl
cmp
add
dec
cmp
scas
loop
fcomps
adc
xor
imul
jno
mov
lods
nop
imul
insl
popf
sahf
insb
cmp
incl
adc
repnz
add
lahf
or
dec
loopne
mov
push
xor
jmp
jecxz
movsb
cmp
test
mov
in
cmc
mov
mov
push
pop
and
test
sbb
icebp
stos
pusha
jle
lret
in
ljmp
sbb
dec
sbb
in
mov
mov
std
lahf
lahf
pop
mov
mov
scas
insb
mov
inc
mov
movsl
jnp
dec
sub
fcmove
into
lcall
outsb
ja
mov
mov
pusha
dec
mov
add
push
pop
sub
pushf
pop
sub
loop
inc
incl
decl
and
ss
jge
pop
clc
mov
xor
outsl
cmc
incl
insb
fsub
push
call
adc
jl
fisttpll
addr16
call
jmp
in
mov
and
scas
or
stos
and
pop
add
insl
dec
fimuls
and
mov
lcall
icebp
jp
cmp
inc
and
in
bound
jg
stos
sub
inc
xchg
loope
int
inc
inc
xchg
push
adc
cmp
mov
push
adc
jns
loope
push
insl
out
cmp
or
mov
out
xchg
popa
mov
loop
mov
adc
inc
incl
shrl
outsl
into
arpl
lret
dec
sbb
je
fistpll
pop
jle
mov
js
mov
lock
sbb
and
pop
incl
mov
push
in
jp
jae
mov
imul
pushl
fisubrs
mov
pop
fists
xchg
imul
mov
ret
pop
and
stc
cwtl
in
cmp
incl
sarb
cmpsl
shlb
loopne
in
xor
incl
dec
adc
cmp
or
cmp
inc
mov
das
hlt
xlat
iret
add
add
push
ljmp
pushl
in
add
loope
lds
vpsrad
xchg
iret
or
or
ror
sar
sub
ja
lea
mov
xchg
movsb
notl
incw
mov
adc
fnstsw
popa
cltd
icebp
stos
push
xor
sahf
adc
outsl
inc
push
add
ret
mov
xchg
mov
pusha
push
test
xchg
ljmp
mov
psraw
jecxz
imul
inc
sti
jg
outsl
cld
sbb
fistpll
push
or
and
ds
ljmp
jl
xor
std
cmp
sbbb
pushl
ja
aad
xchg
cmpsb
dec
test
test
inc
popf
pop
loope
or
or
sbb
hlt
ljmp
lea
adc
fcmovu
pop
rcrb
jb
mov
sub
or
clc
jp
add
incl
push
repnz
dec
cmc
lret
jno
call
out
fbld
call
xor
push
iret
mov
xchg
sbb
aad
es
mov
dec
test
pop
std
pop
or
jbe
mov
lods
ret
jle
or
add
decl
std
lods
fdivl
lret
js
mov
mov
sbb
call
ja
fistpll
xchg
pop
push
mov
call
pushl
insb
pop
cmp
gs
sbb
sub
mov
call
xor
adc
inc
stos
add
int3
int
add
dec
loop
or
lcall
push
inc
xchg
add
aaa
into
ficompl
cmp
jmp
shrb
sbb
dec
cli
jns
xor
ljmp
popa
or
cmp
into
test
mov
outsl
lock
jge
cmc
fnsave
stos
add
dec
leave
adcb
sub
cmpsb
sub
add
outsl
icebp
pop
mov
inc
pushf
jo
ud0
pop
mov
pushf
jae
leave
filds
xchg
mov
xchg
add
jmp
lahf
incl
or
and
and
aas
mov
pop
clc
aas
loope
or
cmpb
mov
inc
test
lock
faddp
pop
fstpl
out
sub
js
lds
dec
pop
cli
jg
add
xor
mov
repz
pushl
adc
sub
in
mov
call
hlt
inc
popf
mov
and
sub
adc
mov
stos
inc
decb
sub
adc
mov
mov
icebp
push
dec
lods
add
decl
outsl
xchg
ficompl
jb
adc
scas
shll
cmc
je
aad
xlat
pop
dec
leave
pushl
push
and
orl
mov
in
jge
out
jo
pop
leave
nop
movsl
xchg
clc
pushl
outsl
jb
pusha
and
push
aad
cmc
cmp
imul
push
dec
mov
outsb
ds
inc
sbb
es
dec
incb
pushl
fidivrl
js
dec
sarb
or
pushf
loope
test
jg
sub
lret
ja
fsts
adc
sub
push
gs
add
jo
fnsave
cli
jmp
sub
imul
push
sbb
in
decl
dec
movsb
inc
mov
stc
jb
mov
icebp
scas
je
mov
cld
push
jg
call
mov
or
addb
out
add
int
lahf
cmp
stc
lods
pushl
jl
ret
xor
xor
ljmp
das
hlt
jmp
xor
sub
pop
stos
pusha
cmp
push
push
stos
testl
gs
shrl
ja
xchg
xlat
pop
or
fcmovnb
inc
dec
aaa
mov
pop
loopne
pusha
test
cmp
push
arpl
scas
arpl
pop
clc
lea
inc
addl
pop
jae
mov
rcll
dec
mov
test
aas
pop
or
jg
fistps
mov
cmpsl
lods
mov
arpl
in
outsl
sbb
loopne
xchg
cli
inc
mov
xor
mov
cli
mov
jmp
pop
and
jle
mov
in
subb
cmp
fldenv
sub
jmp
push
dec
cs
xchg
mov
cmp
mov
repz
sbbb
mov
cli
fcoml
int
sub
insl
jg
push
cmp
mulb
leave
xor
cltd
imul
jle
push
lcall
push
and
jge
push
fsubs
movsl
ja
jge
mov
movsl
mov
jle
lret
in
xor
shl
dec
push
mov
roll
clc
je
mov
jle
push
pop
mov
ljmp
call
mov
xor
iret
je
repnz
dec
icebp
mov
jp
call
cli
pushl
pop
dec
out
icebp
scas
mov
push
jo
dec
pop
es
lcall
add
jmp
mov
enter
lret
jecxz
push
dec
mov
mov
mov
scas
cmc
stc
sbb
pop
lret
pushl
fildl
dec
pop
movhps
cwtl
cmpsb
mov
mov
jmp
mov
jl
push
jno
arpl
out
cmp
add
sbb
pop
xchg
cli
decl
or
repz
mov
sbb
std
xor
jns
cmpsl
sbb
mov
push
lcall
add
mov
jge
or
sub
call
je
icebp
ljmp
out
push
push
inc
nop
push
pushf
cltd
ljmp
pop
jge
fwait
roll
ljmp
incl
cmp
sbb
jmp
adc
adc
mov
out
call
xchg
cli
cmc
fs
dec
dec
aam
xor
call
cli
pushl
dec
mov
dec
out
and
lods
xlat
pop
xchg
jns
loop
dec
pop
jp
jmp
pop
cmp
or
or
cmp
lods
xor
or
inc
jmp
mov
ret
xchg
dec
push
jp
sbb
insl
sbb
shl
push
rol
push
and
into
jmp
mov
int3
or
xchg
test
inc
jae
sar
in
ljmp
and
mov
adc
cmp
sub
xchg
stc
lods
je
pop
bound
daa
into
xchg
jmp
mov
shrl
adc
mov
or
cli
in
pop
mov
lea
lock
clc
call
push
adc
test
adc
sbb
and
mov
bound
je
mov
cld
notl
jp
cwtl
jmp
ss
imul
or
jmp
out
stos
mov
ljmp
push
mov
pop
cs
jmp
pop
das
lret
jmp
test
jmp
fstpt
imul
cs
jg
xor
cli
das
mov
fisttpll
ret
repnz
jg
dec
add
sbb
push
out
push
mov
stos
or
jge
lahf
push
or
push
dec
sar
pop
std
data16
movsb
dec
adc
jl
fldl
out
mov
mov
jmp
push
out
dec
dec
into
add
imul
inc
adc
outsb
cmp
inc
jg
inc
inc
add
jle
xlat
pop
pusha
pop
push
and
mov
in
or
xchg
cld
cwtl
sar
jg
xor
sahf
js
or
and
sub
push
fidivrl
mov
test
push
jp
in
sbb
arpl
sahf
adc
stos
popf
mov
lea
pop
shr
or
mov
and
cwtl
out
call
mov
lcall
mov
mov
pop
mov
cmpsl
lcall
jb
loopne
je
cmpsl
jp
adc
adc
push
popa
loopne
mov
cmp
jecxz
movsl
xchg
pop
pop
jae
xchg
popa
dec
xor
xorl
imul
jae
decl
lahf
rclb
mov
xchg
test
mov
and
incl
ljmp
leave
imul
mov
xchg
cli
lcall
mov
inc
add
aas
scas
xor
repnz
stos
ljmp
and
sbb
mov
fistl
fiadds
test
mov
and
push
mov
xchg
mov
dec
sbb
lods
les
jl
jmp
clc
sbb
mov
or
test
arpl
lcall
mov
sarl
push
pshufw
adc
jg
sub
incl
jl
sbb
cmp
dec
adc
inc
out
pop
inc
fcoml
call
movaps
sbb
jmp
lahf
in
cmc
sbb
aad
incl
scas
stos
mov
hlt
or
mov
in
inc
movsl
pusha
aas
aam
jg
pushl
aas
push
loope
es
out
xchg
xor
or
xchg
inc
push
jmp
sbb
clc
mov
addr16
aam
push
popa
pop
int3
inc
inc
jb
sar
fiaddl
aad
int
dec
lret
int3
pop
cmpsb
sub
xchg
call
cmpsb
and
fwait
cmp
inc
sub
clc
sub
inc
adc
xor
dec
mov
cs
jle
std
mov
jg
fdivrp
ljmp
fistpl
lcall
test
jecxz
or
sub
or
divl
shll
jmp
hlt
aaa
adc
scas
fdivl
mov
pushf
mov
adc
scas
or
into
incl
je
js
insb
inc
add
mov
out
pusha
in
mov
ljmp
dec
jp
adcb
js
push
xchg
and
daa
dec
mov
jns
add
cmp
loop
in
mov
ss
or
xchg
inc
pushl
dec
cmp
and
pushf
lret
pop
insl
movsb
cmp
idivb
leave
and
jbe
jmp
inc
sar
mov
pop
mov
pop
loop
jg
fxch
idivl
mov
push
fcomp
cwtl
mov
jmp
movsb
mov
cld
rcr
lea
into
pop
fiadds
xchg
push
negl
or
scas
inc
lds
cmp
xor
inc
decl
or
xor
cmp
adc
cmpsb
xchg
sbb
mov
gs
mov
sbb
cmp
cmc
fnstenv
cmp
cmp
loopne
ja
and
mov
push
inc
mov
decl
sarb
test
mov
clc
incl
mov
shl
push
daa
lock
fucomip
push
mov
push
rdtsc
dec
jns
aam
aam
jg
and
cs
int
arpl
test
ljmp
mov
shrl
xor
or
cli
push
lods
add
jmp
js
dec
popf
xchg
in
ret
mov
cmp
inc
rclb
sbb
pcmpgtd
fists
mov
pop
pusha
testl
pop
mov
rcr
pop
push
mov
mov
aas
mov
mov
xchg
push
mov
cld
js
scas
sub
aad
push
push
add
add
pushl
adc
push
jmp
sahf
and
ljmp
cmc
jmp
mov
cmp
push
insb
rol
mov
xchg
push
out
lahf
and
xchg
decl
cwtl
test
xor
xchg
ja
aas
or
xlat
dec
vmovlps
inc
std
loop
outsb
fdivrp
pop
cli
ljmp
sbb
clc
fmuls
fildll
lods
dec
and
pusha
mov
lods
lods
sbb
xor
test
inc
fcoml
lcall
fsubrl
mov
out
push
or
mov
push
inc
xorl
jmp
jnp
add
pop
push
xor
test
cmc
decl
pop
pop
mov
push
sbbl
lods
ror
cmpsl
stos
es
les
ljmp
mov
sub
les
jecxz
sbb
fwait
dec
jno
or
cmc
out
jb
fbstp
in
xor
std
dec
dec
and
add
jge
cwtl
pop
pushf
xor
push
mov
jg
dec
xchg
cs
xchg
insb
mulb
push
addr16
popf
pop
sahf
mov
movsb
ljmp
adc
xchg
cmp
and
mov
pop
push
inc
sub
or
jmp
sbb
pop
in
ret
cmp
rorb
in
psllq
decb
adc
rolb
inc
mov
out
dec
into
ret
shll
gs
scas
ds
lret
call
mov
and
sbb
mov
push
mov
push
cmp
cmp
xchg
sarl
hlt
jg
xchg
lods
in
and
lea
ret
sbb
subl
or
repnz
call
mov
inc
mov
call
dec
loopne
or
ljmp
test
not
je
xor
mov
pushf
jns
test
hlt
adc
cwtl
pop
cmpsb
mov
mov
cmpsl
scas
dec
xsha1
cmpsb
or
push
je
mov
mov
xchg
gs
andl
ljmp
jge
in
sarl
aam
mov
pop
repz
cs
mov
rcr
xchg
loop
sbb
test
mov
mov
or
push
roll
inc
and
call
icebp
neg
scas
cmp
sbb
inc
push
cld
sbb
mov
mov
rcrb
test
test
xchg
and
sub
loope
xchg
push
sub
cmp
pushl
clc
sbb
pop
lods
mov
pop
int
popf
pop
dec
ss
pop
pushl
cld
cmp
sub
jo
pop
sbb
push
mov
incl
cmp
es
jo
add
loopne
call
lahf
loop
add
adc
add
gs
loopne
sbb
and
ret
jg
decl
or
push
mov
mov
fdivr
sub
jo
ljmp
js
xor
push
dec
addr16
pop
or
nop
into
cmpsb
mov
test
sub
lret
repz
lret
inc
mull
mov
dec
popf
outsb
jg
inc
dec
xchg
cli
sahf
loopne
in
xorb
jb
mov
lcall
and
or
loope
add
in
jg
aad
movsl
fucomip
pop
mov
mov
dec
or
pushl
mov
push
je
imul
xchg
jmp
push
mov
mov
pop
jg
dec
mov
mov
xchg
addr16
pusha
inc
add
stos
out
pop
pusha
cmp
and
mov
lret
test
sbb
and
mov
inc
jmp
arpl
int
mov
es
fdivr
xchg
clc
jg
aas
mov
mov
jecxz
xchg
hlt
add
das
push
xor
rcr
loop
pop
and
mov
xor
std
ret
mov
jge
out
cmc
sub
pop
out
les
pushw
push
or
mov
pop
or
jg
cmp
mov
inc
xor
mov
cmp
loop
sub
mov
loopne
jno
and
incl
or
add
imul
dec
mov
iret
std
fisttps
sub
push
mov
popf
jmp
testb
cmp
loop
push
add
lods
data16
in
sbb
dec
repz
mov
gs
in
push
loopne
std
enter
jmp
hlt
xchg
mov
xchg
xor
adc
iret
push
pop
out
sti
pop
loopne
lock
pop
out
push
mov
js
lcall
notb
xchg
insl
xor
xchg
jg
pushl
notl
inc
inc
cs
sbb
nop
mov
cmpsb
ds
jnp
dec
sub
jb
add
dec
ds
and
xchg
or
or
mov
inc
aad
push
scas
mov
xor
and
add
and
cmp
jmp
pusha
jge
ja
mov
add
jbe
push
fstpt
mov
lret
mov
aam
sub
cmp
inc
cld
add
faddl
dec
pushl
jnp
adcl
mov
test
cmp
or
lea
inc
loopne
and
ficomps
xor
inc
mov
ret
xchg
mov
sbb
stc
lock
jg
call
xchg
lods
std
jb
sub
xchg
add
mov
pop
mov
pop
push
ljmp
jmp
jno
sub
lods
fwait
push
sbb
mov
xchg
lcall
hlt
into
mov
or
test
aas
xchg
pop
mov
push
xor
fisubrl
cmp
cmpsl
pop
outsb
xor
cwtl
xchg
sub
loop
dec
pop
stc
push
popa
andl
sbb
dec
dec
add
add
movsb
pusha
adc
je
or
sti
popa
outsb
call
out
and
add
pop
pushf
dec
rcll
or
mov
push
jp
cmc
jle
sub
mov
cmp
sbb
cmp
xchg
out
arpl
call
add
mov
daa
inc
xchg
rcrl
stos
fcomip
mov
push
shll
call
mov
jecxz
fwait
movsb
mov
std
pop
xchg
jle
jg
xchg
jbe
bnd
dec
mov
and
mov
pop
xchg
mov
push
add
mov
adc
jae
mov
and
insb
sbb
mov
push
stos
aad
jl
std
in
xchg
test
in
mov
test
loop
mov
mov
add
cmp
jecxz
jmp
cli
leave
adc
mov
cmp
push
mov
mov
je
dec
push
jp
hlt
sub
int
push
dec
imul
jg
les
arpl
add
decl
sub
insb
dec
icebp
inc
and
lret
cmpsl
mov
mov
out
xor
out
rolb
ljmp
imul
jnp
mov
inc
imul
das
jg
lods
sbb
loopne
mov
cmc
and
jae
stc
inc
cld
enter
push
sbb
add
pusha
mov
inc
insb
fisubrs
sbb
mov
jmp
pusha
int
mov
dec
jbe
icebp
movsb
adc
mov
out
mov
sar
call
ret
les
dec
jmp
xor
cmp
ljmp
pop
out
call
push
pusha
pop
insb
cwtl
add
clc
cs
iret
outsl
lds
decl
sbbl
cld
rorl
jge
les
loop
vmread
ljmp
in
out
adc
int3
jnp
aas
iret
cmp
test
sub
pop
test
cmp
call
sahf
mov
dec
movsl
mov
es
cmpsl
pop
ljmp
push
addr16
fucomip
call
mov
sar
fwait
jno
popa
pop
out
je
jl
in
dec
push
cld
call
ja
gs
fcmovnu
pop
pop
into
cmp
sbb
mov
cmp
cmpsb
pop
sub
adc
jge
cmpsl
and
mov
inc
jmp
cmp
mov
jnp
fsubl
xchg
in
add
jecxz
mov
adc
int3
fstpt
pushf
xchg
je
mov
loop
bnd
mov
fldl
pushw
push
fcmovnu
aam
hlt
cmp
pushf
mov
addr16
movsb
cmp
in
xor
jmp
movsl
hlt
lret
dec
push
test
mov
repz
ljmp
mov
out
jmp
shlb
dec
and
clc
sub
pop
loop
fwait
cltd
cmp
das
scas
or
leave
mov
shl
mov
xor
and
es
fwait
ret
jo
fildl
xor
mov
out
in
dec
cwtl
mov
dec
adc
fidivl
mov
pop
sarb
pushl
rcll
xor
loope
mov
cmc
shrl
ja
aas
gs
and
lock
xchg
cmp
rolb
testb
or
out
mov
inc
fwait
ljmp
ret
mov
xor
push
push
adc
shlb
add
or
popf
xchg
sbb
push
or
rcll
dec
pop
scas
ret
jmp
xor
inc
dec
xchg
lea
xor
or
inc
lret
repnz
lcall
xor
rorb
in
aaa
addb
mov
adcl
adc
incl
ljmp
fisubl
out
arpl
jb
shlb
sbb
aas
aam
rclb
es
dec
xchg
xchg
outsl
test
and
push
mov
mov
jne
pop
add
mov
mov
add
push
jle
mov
adc
xorl
mov
jl
and
dec
sahf
outsb
mov
add
jmp
xchg
cwtl
sbb
mov
cli
sbb
in
sbb
fwait
cli
xchg
cli
mov
imulb
jecxz
ret
jmp
xchg
mov
sar
fistpll
push
xor
and
lock
dec
sbb
je
int3
shrl
or
imul
lcall
bound
pop
push
sub
lods
push
pop
xor
and
push
loop
fisubrs
cmpsb
shlb
insb
lods
sbb
out
mov
mov
hlt
push
mov
fxam
aas
dec
mov
outsb
sub
inc
xchg
sub
pushl
cmp
add
data16
filds
adc
test
incl
or
inc
mov
pop
lahf
jl
lret
fstps
jecxz
cli
popa
pop
mov
dec
mov
and
jne
in
out
push
je
dec
addr16
fucomip
push
aam
or
inc
adc
xchg
sbb
pop
dec
xor
aaa
inc
jne,pn
fucomip
jmp
jae
mov
jno
mov
cld
push
jns
push
add
icebp
lcall
lea
outsb
xchg
pop
fcoms
insb
in
sbb
cli
xchg
outsl
adc
lret
cwtl
fists
stc
sub
inc
push
pushf
jmp
lcall
fildl
inc
fstp
daa
decb
std
in
es
pop
push
pushf
xchg
mov
add
pop
dec
jmp
pop
jle
dec
pushf
sbb
arpl
fs
xlat
lcall
sbb
movsb
push
and
outsl
repz
cmpsl
push
mov
cmp
xchg
add
mov
xchg
push
or
push
sar
adc
inc
sub
arpl
mov
and
or
pushl
add
sbb
sbb
iret
push
mov
cmpsb
in
inc
cltd
mov
imul
movsl
mov
pop
mov
stc
sbb
decl
and
sbb
mov
or
sub
fdivl
in
test
std
mov
ds
mov
ljmp
int3
xor
in
lret
lcall
pop
cmp
out
in
inc
dec
cmp
pop
jg
js
lods
push
incl
add
mov
mov
push
andl
movsl
inc
mov
jp
jecxz
in
or
outsl
lock
pushl
imul
nop
cmove
inc
xlat
sub
bts
jp
dec
add
incl
adc
pop
xlat
mov
subl
mov
inc
jge
mov
into
clc
or
test
lcall
xchg
in
mov
stos
push
stos
pop
loopne
outsl
aas
inc
cmp
inc
test
mov
hlt
cmc
loop
cwtl
jbe
cmovle
pop
and
mov
fsubl
mov
sbb
mov
shlb
pushf
and
add
cmp
jl
out
sahf
adc
jl
push
ss
jmp
sub
in
out
shrl
insb
sbb
lock
jae
add
add
rcrl
add
xor
cltd
sub
cltd
pop
in
xchg
mov
mov
call
decl
je
je
mov
ds
pop
dec
insb
in
clc
adc
lods
add
pushl
dec
enter
xor
inc
inc
popa
push
orl
test
xchg
adc
push
addr16
push
push
out
fstl
sbb
sub
push
iret
mov
fdivl
mov
pop
call
or
fwait
inc
jb
jbe
mov
outsl
hlt
adc
addl
out
sbb
rclb
dec
mov
mov
pop
je
jecxz
test
add
sub
cmc
ljmp
ss
addr16
push
jbe
incl
into
mov
movsb
sub
mov
out
or
pop
xchg
aaa
in
xlat
int
js
or
lock
inc
mov
incl
mov
sub
in
ret
fists
sbb
decl
jns
int3
out
test
and
imul
jl
in
and
inc
bound
test
in
pushl
test
fistpl
shrb
arpl
pop
dec
and
mov
pop
aam
lcall
xor
or
test
add
push
xor
test
mov
call
adc
jne
out
cld
jns
shlb
jae
push
in
pop
ljmp
or
shrl
push
dec
adc
inc
mov
cld
jg
jo
mov
into
jne
arpl
incb
aaa
std
inc
je
mov
mov
movsb
shll
sbb
jg
repnz
ds
or
lret
cwtl
stos
cwtl
into
shrl
jp
push
mov
sbb
xor
and
leave
popa
xor
mov
mov
dec
jmp
in
in
test
test
adc
inc
scas
sahf
pushf
sti
jb
push
pop
sbb
out
add
jmp
or
mov
stc
lods
xchg
loop
rol
push
xchg
or
sub
fcomp
mov
scas
xchg
adc
inc
push
jmp
cmp
mov
imul
push
test
sub
push
add
out
inc
pop
jecxz
cli
fmulp
int
data16
push
iret
ds
je
cwtl
sub
dec
mov
arpl
lods
pushl
jl
pop
test
vpsllw
sub
add
je
or
mov
xchg
dec
lock
mov
ret
lds
frstor
or
mov
mov
roll
mov
add
pop
mov
inc
inc
out
incl
loop
add
cltd
mov
xor
es
adc
call
imul
sti
sti
addb
movsb
je
lahf
pop
aam
mov
mov
mov
mov
sub
adc
jge
loopne
mov
movsb
jmp
call
add
lret
adc
je
adc
jl
cmpsl
pop
cld
sar
test
pop
lods
mov
xchg
cs
lahf
popa
sub
sbb
fcos
or
popa
or
stos
ret
add
sahf
push
jp
scas
jnp
ss
add
mov
or
add
pop
and
cmp
fistps
lods
loopne
dec
test
loope
sar
or
xor
test
push
insl
sbb
cld
pop
in
xor
int
push
dec
hlt
sarb
daa
jb
or
jg
rcrb
sbb
adc
cmpsb
fstpt
iret
add
push
jbe
das
cltd
jnp
call
push
popa
dec
sub
fcomip
jmp
inc
push
cmp
data16
jl
push
test
sub
mov
aaa
mov
ljmp
loop
jecxz
subl
pop
data16
test
sarl
mov
ljmp
xor
push
call
pop
fisttps
out
mov
cmp
sub
rorb
cmpsl
lds
in
xchg
incl
out
xor
mov
dec
clc
negl
and
es
sbb
loope
or
mov
adc
iret
test
decl
stc
adc
inc
mov
jge
scas
and
das
inc
incl
inc
mov
jo
faddp
movsl
xchg
inc
gs
aad
mov
jmp
mov
mov
icebp
pop
xchg
add
arpl
dec
mov
sub
iret
xchg
adc
jmp
faddl
xchg
in
cmp
decb
inc
es
aad
mov
js
mov
xlat
ficoms
inc
sub
sub
lahf
mov
inc
imul
lods
adc
jne
fs
movsb
lcall
or
loopne
dec
shrb
mov
xorl
add
inc
sbb
movsl
sbb
cmpsb
out
or
sarb
xchg
mov
orl
js
testb
test
repz
xchg
dec
inc
ljmp
cltd
push
sar
cmpsl
cmp
or
pop
sub
jno
call
rcr
jg
cltd
push
jne
hlt
int3
cmp
jl
fsub
pushf
nop
jmp
pushf
add
int3
mov
lret
cmc
mov
mov
into
fists
xchg
mov
jae
inc
lcall
imul
mov
or
and
ret
jbe
ret
scas
insb
mov
out
fdivrp
sub
mov
call
jg
sub
jnp
mov
xchg
sar
xchg
js
out
mov
nop
out
loop
inc
pop
mov
sar
push
jl
pop
cmpsb
sbb
or
popf
mov
mov
dec
loopne
outsl
lock
clc
data16
pop
mov
cmpsl
push
icebp
push
pusha
jbe
xor
call
or
jne
xor
sub
mov
push
jge
adc
jg
lcall
iret
fildll
push
nop
subl
imul
icebp
add
incl
sbb
clc
shl
lods
hlt
or
xchg
cmp
incl
sub
cmp
and
mov
mov
mov
sub
inc
neg
sub
push
jg
addb
pusha
jle
pop
and
adc
cmp
jp
adc
jns
insb
jno
je
pop
adc
and
fildl
and
incl
lret
movsl
and
inc
lods
bnd
shlb
mov
and
push
fsubrp
in
xchg
pop
movsl
jne
movsb
sub
and
adc
cli
pop
jl
and
in
shll
push
add
cld
mov
jo
xchg
movsb
xlat
pop
inc
fnstsw
mov
add
data16
decl
outsl
cmp
imull
pop
push
pop
sub
xor
pop
lock
cwtl
fdivr
cmp
leave
ret
jl
test
and
push
xor
movsl
push
cmp
cld
sub
jg
cli
incl
xchg
icebp
xor
outsl
lahf
scas
sub
arpl
fisttps
mov
pop
mov
ret
cmp
or
bound
lcall
lcall
jl
push
pop
adc
mov
and
enter
fs
or
inc
cmp
popl
inc
mov
cmp
in
in
ljmp
outsl
mov
jo
sbb
dec
cmp
push
and
sbb
repz
adc
cmp
in
dec
add
push
mov
sbb
jns
sbb
adc
adc
pushl
ret
test
call
gs
ret
fisttps
adc
mov
das
jecxz
leave
js
loopne
mov
dec
imul
mov
popa
push
lea
je
stos
mov
lods
loop
decl
dec
clc
cld
sbb
in
dec
ja
stos
pop
or
fists
fmul
sub
adc
adc
pusha
mov
std
mov
inc
dec
dec
dec
or
jl
mov
and
lcall
sub
dec
cld
pop
cmpb
int3
jg
test
cli
lods
sbb
push
scas
ljmp
shll
xchg
inc
add
lea
lock
pop
ds
lds
pusha
push
arpl
decl
or
sub
dec
mov
gs
xchg
sti
stos
ds
test
cld
mov
and
std
pop
vfrczpd
jg
rcll
addr16
dec
xor
xchg
jno
push
xchg
roll
dec
sub
xchg
jl
mov
call
sbb
push
and
cmp
jns
test
lret
test
add
pusha
dec
sbb
jg
aaa
push
enter
test
sub
or
ss
stos
push
jg
call
mov
icebp
inc
xchg
cmp
xchg
pop
std
call
adc
sahf
and
insb
and
lds
jns
dec
jb
cmp
adc
xor
sbb
xchg
xchg
stc
or
sbb
jg
or
dec
mov
call
jnp
pop
stos
xchg
gs
das
shll
or
or
arpl
lea
scas
jge
je
das
hlt
pop
daa
stos
punpcklbw
xchg
xlat
or
andb
sbbb
imul
fwait
mov
sbb
dec
or
mov
cli
inc
cmp
pop
stos
jle
sub
xlat
add
popf
mov
add
adc
imul
jmp
andl
dec
add
push
mov
mov
mov
xchg
mov
inc
addr16
ljmp
orb
pop
sbbb
rorb
pushl
ret
nop
cwtl
lods
xchg
jmp
movsl
xor
loope
mov
xchg
mov
incl
mov
jae
mov
insb
dec
lret
jge
mov
add
push
cld
iret
mov
pop
sub
push
std
push
into
cmc
xchg
popa
mov
mov
fcoml
dec
jge
mov
std
sub
xor
fstps
cmp
dec
mov
lcall
sbb
jb
inc
jno
mov
shlb
jne
cmp
test
pop
pop
mov
aam
in
bound
cmp
mov
and
call
ljmp
sbb
imul
mov
call
shrb
jb
xchg
sbb
sar
ljmp
in
int
jg
pop
mov
sub
dec
or
mov
dec
dec
iret
insl
or
andb
xor
ret
xor
jecxz
int
fdivrp
jg
loopne
inc
fsubrp
in
xchg
sbb
decl
sarl
icebp
call
sbb
int3
sub
push
adc
mov
pop
inc
adc
test
aam
push
cmpsb
call
mov
ljmp
cltd
xor
rclb
xor
sbb
aaa
clc
jmp
bnd
ficomps
xchg
mov
ljmp
jns
jns
mov
xor
jno
sbb
loopne
leave
shlb
shr
cld
cmp
inc
xchg
ret
daa
ret
pop
adc
test
and
dec
sbb
push
inc
int3
leave
loop
xor
aam
fwait
in
dec
movsl
ds
mov
call
lcall
insb
push
outsl
add
sub
cmp
call
cmp
mov
fcmove
fmull
xor
notl
fwait
jne
repz
das
cld
inc
mov
jae
jnp
aad
cmpsb
xor
mov
call
adc
cmpsb
repz
mov
adc
pop
mov
xor
ss
adc
movsl
xchg
sbbl
dec
inc
push
jg
pop
mov
rdtsc
cwtl
xor
out
mov
push
sar
decl
test
and
call
incl
ljmp
std
jo
mov
scas
jns
pop
lahf
imul
data16
jmp
mov
mov
pop
sub
jns
push
mov
or
outsl
mov
sbb
add
std
loop
cmpsl
inc
into
je
cmp
cmp
mov
xchg
fstpl
fcmovnb
rol
inc
mov
fwait
mov
aad
and
clc
mov
std
push
les
jge
std
xor
or
or
iret
xchg
pop
stc
stc
shrl
push
xchg
push
int
xorb
xchg
mov
int
je
jp
xchg
push
mov
ljmp
push
call
dec
insl
jne
or
cld
mov
mov
mul
mov
inc
outsl
cli
mov
ljmp
jns
inc
test
les
mov
lret
sti
pop
lcall
or
lcall
dec
inc
sbb
cmp
fmull
fcomp
sub
in
ret
sub
or
ss
pop
add
imul
pop
mov
mov
lcall
adc
sbb
leave
scas
mov
outsb
or
cmpsb
jg
decl
lret
decl
out
push
cmc
dec
outsb
cmpsl
movb
aam
sub
xchg
ljmp
movsb
insl
ret
out
bts
daa
xor
lods
push
repnz
mov
jl
or
jg
outsl
icebp
push
push
std
cmp
push
push
xchg
arpl
addr16
das
inc
shrb
jnp
jb
into
dec
sub
sti
pop
out
mov
xchg
call
outsb
insb
sbb
mov
add
idiv
in
adc
push
fdivl
push
xor
inc
jmp
fstps
pusha
xchg
pop
fisubs
call
daa
mov
orl
push
stos
movsl
sub
jmp
repz
sbb
cli
stos
sbbb
iret
iret
cmpsl
repnz
in
ljmp
je
pop
jle
cwtl
movsl
jb
mov
test
pushl
push
cmp
dec
or
hlt
inc
divb
and
jmp
mov
xchg
icebp
mov
ljmp
std
rolb
test
lret
pop
mov
add
mov
push
daa
cmc
fimuls
xchg
pop
cmc
add
fisubrs
or
aam
mov
test
pop
add
dec
aaa
je
lock
std
lock
test
pop
arpl
addl
inc
jmp
fwait
ljmp
std
mov
loop
js
pop
popa
test
outsl
inc
or
rclb
inc
xor
inc
pop
jg
insb
aas
mov
fidivrl
sub
rorb
adc
test
jmp
push
iret
xchg
xor
loopne
add
jle
push
cs
enter
dec
cwtl
popf
push
xchg
fistpll
mov
inc
or
push
mov
mov
inc
adc
mov
push
mov
mov
mov
sti
inc
xchg
push
or
lea
ljmp
ret
or
sub
bound
and
mov
xchg
xor
ljmp
fisubs
pop
loop
sub
add
pop
imul
cli
xchg
pop
xrelease
jg
movsl
sbb
push
sbb
pop
inc
lcall
push
ljmp
arpl
cmp
in
dec
and
pop
ljmp
cmc
add
gs
xor
addr16
lahf
jmp
outsl
shll
mov
pop
push
out
fdivrl
call
fdiv
lret
jnp
and
jmp
push
jns
mov
pop
in
icebp
mov
mov
icebp
mov
ja
jp
pop
jne
dec
lds
mov
ss
sub
aas
outsb
xor
xchg
fists
loope
jno
hlt
pusha
mov
fwait
mov
mov
xchg
xchg
daa
fs
xor
and
mov
cmp
xchg
mov
sub
inc
decb
sub
cltd
jle
sub
push
pop
xor
pushl
jbe
xor
mov
adc
mov
jae
push
adc
jmp
xor
or
jnp
jmp
cwtl
pop
in
decl
scas
iret
lock
xlat
cld
jge
int
enter
xchg
or
cmp
ljmp
movsb
popf
js
test
insb
shrb
sbb
mov
incl
ret
inc
pop
or
cmp
jg
xchg
aas
jecxz
scas
in
je
inc
insb
enter
rcrl
loop
mov
mov
test
dec
imul
jmp
mov
mov
movsl
push
pop
mov
sahf
sbb
aam
xchg
pop
std
call
cmc
leave
push
ret
lret
jo
fdivs
fdivrl
pop
jecxz
mov
sub
sbb
adc
push
fwait
mov
sbb
and
mov
inc
dec
std
jae
jmp
jg
pop
pop
stos
inc
mov
scas
nop
rcrl
pop
shlb
pop
cltd
jnp
adc
inc
mov
sub
nop
lcall
aas
or
fisubs
hlt
decl
and
ds
ljmp
and
xor
cltd
stos
inc
aas
movq
test
test
mov
sbb
fdiv
xlat
xor
test
aad
push
mov
or
lret
pusha
pop
sti
push
jne
std
ret
xor
cltd
xor
mov
shrl
xor
xchg
out
or
decl
jnp
lds
fcomps
movsl
xchg
faddp
ret
xchg
sub
mov
sub
cmc
incl
das
out
aaa
nop
shr
jmp
sub
dec
xor
xchg
enter
cli
das
adc
test
roll
xor
lcall
cmp
and
sub
cmp
xchg
test
lods
jmp
decl
stos
push
shrb
dec
xor
add
testl
lea
and
cmp
aad
lahf
cmp
inc
stc
mov
jb
ljmp
cmp
pop
or
cmpsl
cwtl
insl
xchg
or
add
jmp
adc
in
push
cmc
push
mov
mov
and
cmp
imul
test
sub
cli
lcall
pusha
lret
leave
pop
scas
nop
inc
xchg
sub
imul
fbld
lea
cld
sub
pop
lock
lret
xlat
movl
dec
enter
add
std
sub
aas
ds
repz
iret
jbe
push
mov
divb
mov
cmpsb
adc
test
inc
mov
decl
mov
xor
mov
or
mov
fisubs
fs
das
cmc
popa
loope
pop
add
in
and
repnz
lods
pop
cmp
xor
decl
pop
sub
adc
pop
jmp
xchg
clc
dec
sbb
and
fs
int
cld
jne
dec
push
dec
mov
jno
jbe
pushl
sub
inc
dec
jge
pop
xchg
mov
movsl
cmp
ljmp
mov
scas
lea
sub
lcall
out
fimull
jge
sub
fildll
loop
adc
and
mov
dec
mov
inc
pusha
adc
ds
xor
paddd
pop
scas
data16
jo
inc
pushf
out
push
in
aaa
jmp
call
or
mov
repz
jae
jns
inc
cwtl
idiv
xchg
clc
jg
gs
test
mov
or
into
inc
fdivrl
push
dec
xor
push
out
sbbl
inc
subl
mov
addl
cmc
mov
xchg
jecxz
and
mov
dec
pop
push
mov
sub
ljmp
and
int3
mov
faddl
out
cmp
and
mov
cmc
jmp
cwtl
and
lret
add
inc
lcall
pushf
cwtl
sub
cli
dec
pop
mov
inc
mov
xchg
sbb
popa
hlt
mulb
fwait
ss
mov
ret
sub
jb
imul
fbstp
lock
stos
xor
push
enter
or
cli
pop
shlb
mov
xlat
inc
add
call
lahf
in
gs
xor
aas
adcb
fwait
js
cli
std
outsl
decl
jmp
into
stos
cli
adc
loop
mov
lds
shr
filds
pop
pop
mov
mov
push
pop
push
jecxz
jge
rcrl
movsb
scas
fnstenv
jnp
adcb
inc
mov
adc
ljmp
or
mov
fiaddl
pusha
pop
int
xchg
and
jo
sub
call
cli
jns
mov
jb
sbb
cmp
out
jge
xor
das
mov
icebp
aam
mov
cmp
mov
in
ljmp
stos
push
cltd
xchg
lods
mov
out
fiaddl
push
stos
mov
imul
jb
mov
popl
out
jmp
mov
clc
jmp
sbbb
pop
test
xor
out
mov
mov
call
dec
movsl
cmp
and
pushf
imul
int
pop
xchg
jmp
outsb
test
mov
and
mov
push
insb
lock
hlt
decl
repz
ficoms
dec
gs
dec
push
sub
aaa
and
std
shrb
inc
es
inc
int3
cmpsl
sub
jb
jno
movb
rolb
out
mov
push
mov
test
add
mov
adc
cmp
lods
mov
sub
aad
cmpsb
mov
jns
jns
leave
sahf
mov
inc
or
iret
jmp
arpl
adc
ljmp
enter
pop
add
into
pop
loop
jmp
fidivrs
outsl
sbb
push
pop
push
mov
je
mov
lcall
dec
dec
sbb
cs
or
inc
call
xchg
sbb
xlat
mov
repnz
testl
mov
pop
push
aam
jg
or
iret
jo
push
cmp
pop
xchg
in
aaa
mov
add
sti
or
push
pop
and
add
stos
lods
mov
push
std
mov
sti
push
add
push
sti
jle
push
jg
mov
push
je
in
lods
xor
pop
xorl
mov
lock
fimuls
ret
pop
or
push
test
mov
sbb
int3
dec
out
and
addr16
lahf
js
and
add
add
decl
and
mov
mov
pop
and
xchg
outsb
mov
sub
or
mov
ficompl
incl
lret
sbb
xchg
jmp
daa
aaa
xchg
jmp
xchg
mov
in
xchg
lods
gs
ljmp
fcomps
icebp
xor
push
cmpsl
int
pushl
leave
mov
loop
mov
sbb
mov
nop
insb
push
shl
mov
rorb
test
jnp
ret
push
adc
or
les
dec
adc
push
inc
std
repz
or
dec
add
test
lea
incl
xchg
dec
pushf
push
xchg
dec
cmpsb
xchg
jg
adc
lds
loope
or
push
dec
test
inc
xchg
mov
add
pushf
xchg
sub
jo
icebp
xchg
mov
test
lds
adc
hlt
mov
or
je
inc
cmp
nop
sbb
pushl
cwtl
mov
mov
jl
mov
add
add
mov
stos
jg
es
xchg
xchg
sti
mov
call
pop
ret
mov
in
lock
incl
adc
pusha
ljmp
jge
adc
std
incb
mov
gs
fsubr
push
ret
repz
faddl
and
dec
sbb
aaa
outsl
scas
out
inc
cmpsb
jb
cmp
add
rcr
xchg
and
sbb
aas
jb
push
pop
push
sahf
mov
adc
out
loope
and
mov
pop
pop
dec
shrb
mov
and
in
cmp
xor
call
lods
pop
stc
mov
xor
je
hlt
testl
js
pop
pop
lcall
and
xchg
xor
popl
sbb
clc
jle
sbb
jo,pn
ja
int3
mov
jle
cmc
pop
movsl
es
dec
daa
adc
loop
mov
push
loopne
addl
popa
or
adc
lcall
mov
call
rcr
xor
insl
out
iret
xlat
jae
jg
jg
xor
add
orl
sar
push
or
adc
cmp
dec
sub
lret
mov
push
in
ljmp
mov
xor
and
mov
test
shrb
pushf
and
ret
repz
incl
fildll
mov
or
mov
xor
and
test
out
sub
fisubrl
addl
outsb
and
inc
outsb
fdiv
dec
test
sbb
gs
cmpsl
loop
mov
decl
mov
dec
clc
out
fwait
jo
gs
out
icebp
sbb
loopne
lret
push
ds
arpl
push
pop
jmp
subb
std
aas
pop
sub
dec
jle
fadd
inc
iret
adc
data16
add
std
push
pushl
jne
repnz
fistpll
les
sbb
scas
test
lcall
enter
pop
pop
push
out
inc
es
push
push
jg
ficoml
into
xchg
inc
lods
cld
lock
mov
fcomps
cmp
lods
jp
in
idivb
sub
sar
xchg
and
sub
sti
mov
ljmp
ret
fsub
mov
shrb
or
add
pop
rcrb
popa
inc
xor
cmp
ret
jmp
fs
cmp
fsincos
cmp
imul
sub
adc
mov
mov
cmpsl
mov
xor
das
sbb
lock
mov
push
pushl
adc
mov
mov
mov
pushf
test
movsl
lcall
adc
jae
in
pop
loop
lahf
pop
push
xchg
fwait
ret
sub
sub
lret
les
lock
stos
int3
mov
les
mov
mov
or
jg
fcompl
add
into
jno
in
push
or
jl
adc
jp
ljmp
fstl
test
adc
add
push
sbb
lret
data16
das
cld
adc
in
cmpsb
and
call
aam
cwtl
test
pop
mov
call
or
lcall
imul
bound
lods
dec
loop
testb
lock
cmp
or
sub
iret
and
cmp
call
xchg
jecxz
orl
out
arpl
lcall
sarb
out
jg
mov
and
cmp
inc
imul
xchg
sub
mull
test
rorb
call
icebp
xchg
jne
mov
push
push
stc
mov
xchg
mov
sbb
decl
aas
push
sub
push
pusha
movsb
nop
push
or
jbe
inc
jae
cltd
jmp
popf
into
ljmp
jbe
jno
outsb
xchg
hlt
ss
mov
andl
xlat
in
andb
pusha
repz
aas
out
ljmp
cld
incl
mov
pop
inc
inc
pop
aaa
push
jecxz
cmpsl
xchg
jmp
mov
lods
incb
data16
cmp
mov
dec
test
xor
mov
fildll
dec
les
jmp
sti
push
aad
ljmp
lods
addr16
or
mov
stos
arpl
ljmp
rcrb
rorl
int3
rcll
pop
aam
andl
incl
add
adc
pop
les
lods
add
repz
push
enter
pushl
popf
fidivs
mov
dec
adc
stc
xor
cmpsb
inc
insb
lea
mov
repz
push
add
cwtl
iret
pop
clc
rorb
and
sarb
je
int3
roll
xor
fcoml
push
cmc
daa
sahf
and
pop
call
mov
fistps
xor
call
lock
notb
adc
fbld
out
outsb
xchg
das
dec
sahf
inc
push
push
cmp
cmp
push
jg
and
popf
outsl
xor
and
xchg
or
jg
or
jns
std
imul
sbb
je
fdivl
int3
mov
cli
pop
jl
xchg
push
adc
mov
mov
pop
icebp
ljmp
mov
out
jmp
inc
inc
rcll
sti
inc
inc
ljmp
xchg
mov
rolb
mov
adc
jmp
out
in
sahf
and
test
or
dec
push
mov
rcl
lcall
push
pop
mov
fwait
adc
pop
cmc
aas
clc
je
movsb
test
call
gs
mov
or
jle
and
dec
mov
sub
pop
or
pop
js
and
or
lea
je
stos
mov
lcall
dec
imul
std
jg
sbb
add
bound
inc
stos
mov
inc
and
mov
stc
decl
pop
lock
dec
test
mov
jnp
sub
addr16
fdivrl
lret
cli
js
shrb
sbb
mov
movsl
xlat
shll
xchg
xchg
sub
ljmp
movsl
sub
aas
cwtl
inc
push
cmp
fstl
mov
jne
adc
or
cli
jg
mov
sbb
sub
mov
jp
push
test
cmp
and
cwtl
inc
repnz
mov
and
cltd
shll
pop
mov
and
inc
fidivl
je
xchg
mov
mov
repnz
sbb
mov
pop
ljmp
lret
lods
ljmp
push
mov
rcrb
das
std
call
xchg
sub
push
sarb
xchg
fs
and
lea
dec
sbb
mov
push
and
fiaddl
ret
movsl
adc
aad
ljmp
sti
psubsw
mov
stos
add
sbb
add
repnz
pop
loopne
aaa
nop
mov
sahf
xchg
sahf
cmc
mov
dec
push
mov
pushf
loopne
jge
pop
push
js
outsl
std
mov
loope
stos
push
mov
in
pop
and
dec
inc
dec
mov
mov
es
or
jmp
sbbl
push
inc
and
cwtl
xchg
mov
and
mov
pop
scas
data16
mov
dec
push
scas
cld
test
adc
sahf
dec
xor
pushl
mov
ljmp
add
or
in
mov
inc
pushf
push
cmp
stc
call
and
inc
mov
jmp
pop
mov
jg
add
push
mov
decl
mov
loope
in
cmp
mov
jl,pt
xchg
inc
fisubrs
lock
loopne
sub
mov
add
mov
shll
scas
insb
sub
lahf
pop
mov
dec
add
push
inc
dec
andl
shrl
dec
fildl
adc
xor
rcll
and
test
incb
out
pushf
mov
rcrb
incb
ljmp
cmp
imul
lcall
xchg
dec
mov
cmp
and
imul
cli
and
inc
push
jmp
ret
call
jecxz
jno
push
dec
iret
ret
jge
xchg
pusha
shl
sbb
push
or
mov
int3
sbb
jg
pop
inc
filds
adc
das
and
xor
decl
adcl
imul
xlat
fcomp
push
int3
pop
inc
out
cmp
dec
cltd
decl
xchg
jno
call
outsb
dec
clc
jb
adc
rcll
das
add
cmc
fs
push
sbb
xchg
xchg
addl
jg
adcb
gs
movsl
bswap
les
sahf
in
fbstp
shl
and
push
scas
push
das
mov
push
or
stos
cmc
add
xor
mov
scas
jno
fdivl
stc
in
fdivrp
push
mov
ljmp
pop
into
dec
or
les
or
movsl
hlt
inc
movsb
sahf
outsl
pop
dec
pop
and
test
xchg
jp
jp
sub
test
outsl
cmp
fcmovnbe
pop
imul
mov
addr16
jne
fsubrl
or
repnz
xchg
loope
loope
std
repz
inc
outsl
das
imul
cld
push
mov
pop
repnz
call
cli
jmp
js
jno
jne
cld
addb
xor
dec
sbb
out
xor
je
lods
scas
dec
test
test
jne
std
jmp
decl
cmc
insb
mov
rclb
mov
das
mov
mov
sbbb
jb,pn
roll
clc
push
aad
pop
jb
insl
dec
pushf
sub
loop
pop
jns
je
loop
ljmp
icebp
xlat
jp
sub
call
xchg
rcll
add
imul
add
dec
push
fldt
test
dec
lret
add
iret
int3
jno
add
fneni(8087
in
adc
adc
loop
std
sbb
in
repnz
xor
add
incl
mov
cmp
pop
push
xchg
ljmp
and
adcb
decl
pop
shlb
jns
rcl
pop
dec
lods
jo
sub
xchg
inc
popf
or
call
push
jbe
cmpl
cld
mov
jmp
das
not
jg
cmpsl
mov
or
decl
add
call
cs
outsb
nop
mov
incl
adc
pop
mov
outsb
inc
popa
dec
shll
sbb
call
push
adc
dec
stc
lahf
aad
inc
mov
sub
fadds
outsb
xor
and
incl
ret
stc
cmp
mov
jne
xchg
pushf
push
test
leave
fcoml
ljmp
adc
pop
sahf
adc
lret
cmp
pushl
out
jo
out
lahf
sub
addr16
scas
dec
mov
xchg
adc
jg
push
pop
sbb
stos
pop
add
fs
cmc
xor
les
inc
das
mov
pushl
jge
ficompl
jl
pop
jnp
inc
lret
inc
lock
cmp
ljmp
stos
pop
jl
xchg
jle
pushf
testl
aam
inc
call
movsb
jae
mov
jnp
clc
xor
mov
aas
cmp
in
mov
push
aam
and
jo
xchg
mov
inc
push
sub
sub
leave
fisttpl
jl
rolb
cmc
add
pop
loop
push
sahf
mov
int
jo
pop
dec
mov
out
das
xchg
mov
jg
mov
xchg
dec
mov
cltd
in
jge
inc
arpl
pop
dec
fs
scas
data16
pushl
sub
pop
int
jecxz
add
popa
stos
ret
lods
push
ret
jecxz
or
cmpsl
cli
jns
jl
ljmp
aam
daa
call
add
in
push
sub
mov
add
mov
pop
cmp
loop
stos
xor
push
mov
sbb
jle
mov
push
ret
cld
movsl
cmp
mov
leave
cmp
cmovge
inc
cli
gs
mov
out
xor
mov
and
lods
sbb
xor
test
mul
in
out
xchg
clc
das
cld
sub
icebp
imul
mov
sbb
add
repnz
adc
sbb
cmc
pushl
inc
aaa
pop
xlat
jl
mov
js
xor
hlt
sarb
add
sbb
add
or
das
sub
rorb
cwtl
in
adc
fistpl
decl
imul
mov
imul
hlt
pushl
mov
jno
pop
cmc
add
rclb
ljmp
std
scas
xchg
push
or
loop
push
lret
pop
fbld
mov
cltd
push
std
call
mov
cltd
insb
add
inc
call
xchg
movsb
mov
call
add
in
dec
jbe
sar
mov
jo
imul
inc
ljmp
sar
fistpll
roll
inc
leave
movsl
jnp
jecxz
ja
dec
adc
cli
das
hlt
mov
adc
add
aad
imul
clc
inc
cmp
pop
das
jecxz
insl
add
cmp
mov
mov
mov
jo
jbe
ret
outsl
jl
enter
jmp
aas
decl
out
ja
pop
pop
sbb
cli
imulb
out
mov
mov
xchg
aaa
clc
ljmp
push
adc
mov
daa
push
inc
aam
rol
rolb
ds
pushl
lret
stos
inc
mov
sub
add
repz
cmp
fsub
icebp
or
fdivs
pop
movhps
adc
loope
insb
jbe
push
mov
stos
xor
lcall
dec
jecxz
xchg
mov
mov
pop
cld
jmp
mov
mov
xchg
cs
insl
insb
mov
lcall
rclb
mov
or
mov
addl
jmp
ss
in
rorb
sbb
int
sbb
andl
push
sti
pop
sahf
dec
decl
andl
or
dec
insl
fisubrl
cmp
or
or
add
lcall
std
mov
mov
sub
repnz
jae
cmc
mov
jns
je
orl
xchg
insl
lcall
pop
js
loop
mov
xor
popf
ss
mov
add
pop
pop
jb
ds
das
fucom
vmovss
push
lahf
jl
aas
ds
push
mov
lods
in
cmp
insb
push
jl
cmc
fmuls
lret
push
pop
add
addr16
lcall
dec
jecxz
or
inc
and
add
mov
nop
mov
adc
xchg
mov
repnz
shlb
inc
bound
sar
lods
or
pop
jb
cld
lcall
xor
fidivrl
ds
mov
std
jnp
add
clc
mov
lods
in
xor
lods
push
push
aas
dec
and
pop
push
jg
mov
ljmp
lret
cmp
mov
lret
std
mov
int3
push
cs
leave
stos
mov
pop
push
les
jmp
mov
jl
pop
call
cmp
aaa
fnstcw
mov
sub
xlat
xchg
icebp
inc
cli
test
outsl
cmp
adc
mov
push
jle
call
clc
mov
leave
out
stc
dec
mov
iret
mov
out
pop
mov
mov
cld
jmp
adc
stc
dec
and
popf
push
call
mov
ret
add
ret
in
ljmp
in
inc
mov
dec
and
pushf
xchg
into
or
test
or
ja
or
sub
xor
das
icebp
cmp
push
pop
rolb
xor
cmp
std
sbb
rcrl
incl
ss
hlt
jmp
je
lds
loopne
loopne
outsb
mov
lcall
repz
addr16
int
clc
sbb
jb
and
cmc
sub
add
ljmp
jg
cs
sbbl
insb
pop
out
es
std
test
jle
cmpsl
adc
leave
jmp
adc
ljmp
addl
stc
repz
dec
cmpsb
rcr
mov
das
add
cwtl
stos
add
mov
es
aaa
pop
sbb
lcall
das
inc
sbb
sub
mov
xchg
inc
ja
aad
jmp
jno
jne
mov
scas
or
cltd
xlat
adc
or
sbb
sub
mov
jmp
inc
mov
pop
and
in
mov
pop
gs
pop
cld
jp
lods
aas
push
lods
adc
decl
xor
mov
inc
ljmp
adc
cmpsl
push
lock
mov
dec
adc
test
adc
xchg
or
lcall
leave
movl
lock
in
mov
movb
push
mov
or
and
jmp
cmp
jmp
and
push
rorb
jg
jg
jbe
mov
jecxz
lods
movsl
cmp
mov
test
xchg
push
lcall
into
xchg
out
and
jg
std
out
sub
mov
or
and
imul
sub
inc
add
test
lds
shll
add
movsb
into
inc
imul
call
dec
jg
push
mov
cs
fwait
outsl
stos
adc
fiaddl
add
cmpsl
xchg
sbb
pop
jg
mov
js
xchg
stc
xor
rorl
add
cmc
mov
dec
xchg
pop
cld
aad
adc
jmp
lock
pop
sbb
mov
call
addr16
aas
mov
bound
leave
daa
sub
jmp
cmpsb
push
push
jae
jl
jno
cmp
movsl
outsb
hlt
ss
rclb
sub
es
pop
pushl
stos
jp
popf
mov
jnp
das
cli
iret
lds
pop
sahf
js
outsb
pushl
imul
ficomps
sub
xchg
and
fs
lcall
jmp
pushf
inc
adc
and
push
loop
cmp
mov
testl
xchg
add
mov
stos
adc
sub
dec
sub
pop
and
iret
or
ljmp
sbb
mov
jae
xchg
pop
mov
mov
clc
cld
dec
sub
mov
dec
ja
xchg
cli
call
pop
xor
or
int
dec
dec
jns
in
cltd
inc
sbb
inc
pop
push
jl
es
inc
pushl
addr16
pop
xor
fwait
push
mov
adc
lods
dec
mov
incl
push
xchg
out
pusha
repnz
aas
filds
jp
jle
xchg
or
push
stos
ljmp
sub
sbb
popa
adc
jg
aam
cwtl
adc
xor
aad
lods
sbb
cmpl
lea
stos
jle
sbb
cld
mov
pushf
pop
das
jge
adc
outsl
push
pushf
decl
jbe
lds
imul
gs
ljmp
hlt
out
mov
ljmp
dec
mov
and
testl
decl
pop
bound
lret
adc
sub
pop
into
pop
dec
test
lret
ret
cli
push
aam
call
mov
aaa
in
es
outsl
add
inc
pop
outsb
lods
pop
cmp
mov
or
pushl
mov
mov
mov
lret
shlb
cmp
ljmp
loopne
bound
lods
mov
xor
mov
insl
pop
bound
ficomps
imul
test
outsl
je
orl
cmpsb
mov
mov
pop
mov
fisubrs
scas
xor
incl
fs
inc
inc
sarl
sbb
rolb
mov
lcall
enter
pop
sbb
pop
xchg
add
std
jns
pop
sbb
pop
adc
idiv
mov
jae
cmc
cmp
jno
push
push
cmpsl
pop
mov
mov
mov
iret
in
pop
jl
jbe
out
xor
xor
fucomip
jl
cmp
lret
inc
test
push
pop
and
lcall
mov
in
inc
test
test
fsts
sub
dec
mov
mov
ljmp
cld
dec
inc
sbb
push
push
call
rcl
push
xchg
sar
adc
cli
je
iret
fdivrs
jge
jbe
cmp
push
jmp
dec
rcrb
mov
cmp
stos
or
shrl
cld
ljmp
lret
decl
in
lea
dec
xchg
inc
out
aaa
mov
jg
inc
popfw
ret
lcall
iret
mov
out
cmp
cli
sbb
adc
fimull
push
dec
and
loope
jmp
push
lret
mov
inc
mov
aas
inc
cmp
andl
mov
xchg
nop
and
mov
dec
mov
scas
clc
dec
and
sub
fwait
js
xor
or
add
cli
mov
cs
stos
cli
insb
and
push
pop
loope
sub
mov
mov
cltd
sbb
jne
mov
dec
mov
pop
incb
call
inc
or
jle
cmp
xchg
jno
insb
lret
jne
popa
ss
adcb
inc
icebp
outsl
push
dec
insl
jno
stos
xor
push
cmp
push
les
xchg
and
movsl
and
pushw
outsb
aam
inc
cld
aaa
js
loope
insl
fcoms
mov
mov
decl
inc
icebp
xchg
lds
sarl
pop
fdivs
and
and
das
std
aaa
xchg
sbb
inc
lea
add
shr
in
clc
pushl
int
cmpb
cwtl
out
add
popf
mov
inc
movsl
incl
add
and
mov
mov
imul
call
addr16
pop
sub
mov
mov
pop
sahf
or
push
aaa
clc
cmc
movsb
add
pop
sbb
cmp
jno
cmp
pop
cli
inc
dec
int3
jmp
inc
xor
xchg
add
filds
icebp
cmp
lahf
xor
and
cli
pop
push
sbb
pop
dec
cs
xchg
es
fsubs
push
push
cmc
or
pop
sbb
decl
fldt
rorb
push
fnstenv
dec
scas
or
int3
cltd
jecxz
ror
fcomps
jle
and
stc
dec
mov
mov
lahf
adc
call
xchg
push
outsl
lods
push
divb
sbb
lret
adc
rorb
xchg
sbb
call
dec
mov
dec
in
shll
add
mov
sub
fs
decl
lea
lea
add
push
xchg
lods
stc
adc
cmp
mov
cltd
and
dec
aaa
fisubs
sbb
icebp
jl
pop
pop
mov
jl
das
cmc
pushl
sarl
bound
scas
fsts
jo
fisubs
movsl
dec
std
jl
or
mov
and
sbb
dec
mov
mov
in
std
out
mov
bound
out
int3
loop
out
clc
mov
sar
inc
mov
cmpsb
jl
cmp
call
loope
push
inc
pop
jne
xchg
imul
incl
xchg
outsb
scas
sbb
out
mov
lret
push
xchg
cli
das
push
insl
adc
repz
jp
jns
xor
jno
std
mov
or
les
xchg
dec
out
cli
sub
call
jmp
inc
pusha
mov
jae
imul
xchg
xorb
sbb
dec
jge
adc
jne
sbb
ja
dec
mov
pop
adc
negl
cmpsb
mov
cli
inc
inc
fsub
icebp
adc
out
das
pop
loope
xor
xchg
push
ljmp
addr16
dec
mov
mov
iret
pop
out
cmpsl
pop
movsb
bswap
adc
repz
jo
mov
rcll
shll
mov
xchg
les
outsl
inc
cmp
mov
xlat
test
mov
lock
push
gs
sarl
jecxz
sbb
push
xor
mov
loopne
jo
cli
incl
test
jo
stos
inc
jmp
xchg
cmpsb
mov
cmp
pushf
fistl
clc
adc
sub
flds
mov
stc
mov
das
fbstp
imul
das
inc
les
and
xchg
xchg
push
xor
push
adc
fbld
repnz
pop
adc
test
shll
mov
mov
cmpsb
sbb
mov
pop
cli
pop
clc
scas
popa
or
inc
mov
sub
cwtl
dec
push
mov
hlt
jg
mov
jbe
fld
xchg
lds
push
sbb
ljmp
xor
aas
mov
jns
jp
cltd
jnp
out
xchg
adc
shrl
add
dec
jbe,pt
arpl
repnz
xchg
cli
or
call
int
or
aam
xor
sahf
in
lods
call
arpl
mov
jge
jb
call
push
cmp
insb
cmc
pop
ficoms
scas
mov
clc
inc
sub
xchg
hlt
dec
xchg
je
outsb
sub
mov
je
mov
in
adc
into
jg
into
pusha
cld
repz
dec
call
mov
dec
xchg
xor
jne
les
fistpll
rcll
jle
add
cmpb
fs
add
ljmp
sbb
loope
xchg
inc
push
aam
sbb
lods
popf
inc
iret
pop
push
cmp
popa
pop
xchg
dec
jp
dec
loope
psubd
scas
divb
inc
insl
mov
xor
adc
pushl
lret
add
std
aad
imul
sbb
pop
add
popf
sarb
sahf
rcl
clc
jg
std
mov
scas
decl
in
lahf
enter
mov
cmpsl
or
xorl
xor
jmp
jne
mov
mov
xor
stos
stos
push
mov
inc
mov
std
rorb
mov
ljmp
sub
pop
mov
notl
iret
mov
mov
sbb
ljmp
mov
and
dec
scas
push
push
adc
les
sub
ljmp
lcall
cs
jb
lock
inc
push
adc
daa
cwtl
popa
loop
loopne
jmp
mov
aam
inc
rolb
imul
cld
incl
out
add
scas
in
or
fs
sarl
scas
addr16
sar
pushl
adc
sub
hlt
iret
enter
xchg
ret
sub
inc
fmul
sub
or
mov
or
mov
aaa
fmull
xchg
push
xchg
adc
test
cmpsl
push
xor
out
loop
push
adc
popf
shll
add
push
adc
jbe
incl
daa
add
shrl
jp
or
leave
pop
adc
ljmp
cmpsl
mov
std
or
out
inc
roll
comiss
in
fnsave
lods
mov
outsl
cld
dec
pop
push
scas
or
or
lods
push
cmp
push
lods
in
mov
inc
jo
scas
push
stos
push
xor
lret
outsb
lea
and
decl
icebp
sub
xchg
mov
aad
adc
fcoml
jno
dec
dec
inc
and
add
or
decl
xchg
push
xor
ss
pop
in
mov
mov
push
repnz
aam
push
inc
xor
lods
es
inc
add
loope
outsl
push
out
jbe
nop
repz
mov
push
mov
jbe
pop
std
jg
cwtl
enter
dec
push
xor
push
mov
inc
leave
or
jl
lock
call
mov
adc
pop
jg
mov
pop
or
addb
sub
mov
jecxz
decl
cld
push
dec
mov
out
enter
and
ljmp
shrl
push
mov
js
enter
enter
ss
adc
test
lods
nop
cmpl
sbb
fstps
or
cmp
push
mov
lods
out
jbe
insb
or
jge
popa
push
xchg
xchg
imul
cld
add
mov
xor
xchg
test
out
jnp
inc
aas
pop
adc
dec
and
jb
xchg
push
nop
sub
pop
pop
dec
jno
cs
std
mov
inc
mov
jg
sub
fsubs
sub
mov
call
or
lods
push
js
fxch
ds
xor
xchg
sbb
add
sub
stc
in
lahf
leave
cmp
cmp
cwtl
icebp
test
int3
adc
lahf
fadds
stos
cwtl
in
xchg
jg
jmp
jns
out
in
sahf
push
test
or
cmp
push
sbb
rol
dec
cmp
js
cli
insl
int
fnstsw
and
cmpsb
into
push
scas
out
les
mov
pushl
clc
adc
imulb
lcall
pusha
fstpl
iret
loopne
adc
mov
movsl
pop
xor
mov
lods
dec
jnp
push
repz
les
and
enter
mov
jmp
fistpll
sbb
xor
lcall
stos
adc
xor
sbb
mov
ljmp
mov
mov
dec
xchg
aas
les
sub
xor
cmp
add
test
and
push
mov
repz
lea
sbb
pop
mov
call
test
test
pushf
cmp
mov
jg
xchg
pop
mov
mov
pop
mov
and
test
sbb
scas
xchg
sbb
andl
mov
add
jb
js
and
inc
xchg
mov
enter
call
fidivs
sub
rorb
sbb
inc
ljmp
lcall
mov
jmp
xlat
pop
xor
cmp
decl
leave
dec
push
cmc
shl
xor
mov
andl
fidivs
jmp
add
and
cmp
push
imul
xchg
jbe
mov
outsl
inc
cld
ret
loope
nop
pop
les
sbb
lcall
dec
mov
or
into
mov
sub
fs
jl
adc
and
arpl
clc
push
sbb
loopne
jg
and
push
int3
addb
test
aad
inc
dec
iret
lcall
test
fwait
mov
adc
jne
flds
inc
push
mull
std
pushl
cli
push
out
push
mov
mov
jle
lret
xlat
cmpsl
lcall
mov
and
xchg
aam
fmull
rorl
push
lcall
sub
mov
sub
and
adc
cmpsb
data16
lods
js
mov
nop
das
xor
xchg
lods
xchg
rcr
in
mov
shlb
incl
test
jae
addr16
cwtl
in
enter
jmp
pushf
push
pusha
sbb
stos
loop
jmp
jnp
fsts
xchg
mov
sub
pop
fstl
ljmp
lcall
stc
gs
mov
sti
jmp
push
sub
call
fs
xchg
pop
xchg
scas
pop
push
or
jge
fwait
sahf
jae
inc
pusha
push
or
sub
xchg
test
cmp
fildl
lods
cltd
lahf
aaa
in
sbb
pop
aaa
cmp
mov
es
out
add
jmp
jl
mov
sqrtps
call
or
gs
mov
call
pop
out
cmp
fnstsw
dec
std
xor
jb
dec
add
xchg
push
pop
cli
or
fwait
mov
adc
cmpsb
mov
stc
nop
xorl
adc
jg
push
incl
addr16
sbb
sub
movsb
xlat
adc
sub
push
pushf
cmpsb
sbb
cmp
pop
icebp
jo
cltd
adc
sahf
imul
mov
call
adc
cld
sarl
rolb
pop
subl
xchg
dec
js
aaa
or
cmp
imul
insb
outsl
mov
test
ljmp
inc
fisubrl
cmc
lds
shll
outsl
loopne
xchg
hlt
jmp
add
jg
pop
push
std
adc
jp
xchg
das
and
dec
stos
call
ljmp
imul
js
or
aaa
xchg
mov
ss
call
and
pushf
sub
and
insl
cmp
and
ret
pop
loopne
xorl
jns
fwait
xor
fs
mov
rorl
insb
add
bound
pop
pushf
cltd
xlat
ljmp
mov
jmp
pop
xchg
mov
jle
jmp
mov
push
aam
pop
inc
or
stos
jp
cmp
xchg
sub
bound
xchg
push
sub
lock
ficoml
xchg
xor
shlb
aad
or
aaa
mov
das
imul
inc
cli
xchg
or
lods
imul
int3
cmc
clc
mov
mov
mov
decl
sbb
test
je
out
popa
xor
call
insl
inc
mov
jg
leave
stc
xor
call
push
out
push
test
and
jns
test
push
in
das
cmp
fildl
stos
push
pop
lahf
mov
mov
movsb
ds
and
test
or
jmp
popl
jg
and
aad
stc
inc
mov
incl
xchg
in
fnstcw
cmc
lret
rolb
call
or
nop
std
mov
movsl
mov
in
mov
push
fstl
push
adc
xlat
add
orl
ljmp
cld
ficoml
ret
repnz
mov
pop
lds
mov
dec
shll
call
add
ja
rorb
push
lds
int
mov
cli
incl
inc
and
pop
xlat
dec
jmp
and
xor
aas
es
ljmp
roll
jae
push
fstp
xchg
jp
push
inc
mov
loope
cli
cli
mov
sbb
inc
inc
pop
andb
add
mov
and
out
dec
aas
mov
cwtl
mov
shrl
lock
mov
lret
jno
pop
lock
xchg
mov
adc
fwait
adc
push
jno
jmp
cmc
ja
mov
popl
push
jae
enter
mov
mov
pushl
das
sahf
addb
in
lds
xchg
nop
mov
popa
stos
and
hlt
lcall
test
call
nop
cmp
mov
cmp
mov
mov
decl
inc
push
sbb
test
xor
push
lcall
jns
sti
jne
mov
jmp
mov
inc
jbe
pop
clc
mov
adc
imul
fld
shll
aas
insl
popf
rorb
sub
pop
mov
xor
dec
repnz
fidivrs
mov
in
dec
ss
shlb
dec
and
mov
dec
js
xor
fildll
push
rcr
scas
and
push
pushl
sbb
lahf
pop
xor
jp
push
cs
dec
movsb
mov
jo
imul
decl
xchg
add
dec
in
stos
adc
push
dec
out
outsb
adc
adc
cmp
sbb
stos
lods
dec
push
dec
das
xchg
call
pop
loopne
add
arpl
aas
int
cld
sbb
idiv
ljmp
outsb
inc
xchg
rcrb
mov
jno
movsb
cmp
bound
loopne
or
clc
jmp
popa
fsub
jg
icebp
in
and
xchg
je
movsl
loop
jnp
incl
cmpsb
xchg
sbb
mov
data16
popa
sub
cld
call
into
lock
jle
xor
into
int
push
addps
jg
pop
mov
sbb
xchg
adc
add
dec
or
jg
sbb
sub
sar
call
jno
pop
sbb
jbe
inc
inc
sti
cmp
icebp
xor
sahf
xor
lock
sar
ljmp
and
in
repz
je
add
lds
xchg
clc
mov
test
ljmp
stos
ret
test
stos
leave
test
push
jae
push
add
leave
repz
inc
adc
int3
in
push
jmp
or
inc
sub
push
mov
xchg
dec
pop
addr16
adc
xlat
das
mov
addr16
inc
and
pushf
loopne
call
sbb
mov
sti
xchg
inc
pop
testl
cld
push
cmp
ljmp
sbb
push
outsl
adc
movsb
or
nop
call
mov
or
add
xchg
sbb
stos
jg
test
dec
mov
inc
dec
leave
cli
outsl
negb
lods
sar
jno
sub
aas
push
movsb
fucompp
mov
xchg
xor
ljmp
fldt
and
fsubs
movsb
mov
clc
push
sbb
leave
js
data16
out
decl
ljmp
mov
bnd
lahf
dec
decl
popl
mov
adc
sub
mov
sti
mov
and
sahf
pop
sub
icebp
pop
sar
ljmp
popa
add
dec
push
sahf
jecxz
inc
xchg
xchg
fcom
cmc
cltd
push
pop
ret
cli
mov
and
inc
repz
or
xchg
stos
sarl
fldcw
cmpsb
pop
adc
cmc
lahf
nop
xchg
jb
ljmp
fbld
push
fimull
lahf
ljmp
clc
test
adc
or
decl
adc
sbb
std
inc
lea
mov
fcmovnb
andb
enter
fcompl
mov
or
xlat
cmp
jg
sar
jns
test
add
jb
mov
loop
call
adc
out
in
pusha
int
shrb
dec
popa
addl
pop
push
in
ja
cmc
jg
movsl
adc
clc
xlat
out
jp
adc
mov
ljmp
mov
push
mov
ret
out
or
pop
daa
decl
daa
add
jae
mov
push
lods
int
das
cmpsl
shll
loop
inc
dec
stos
pusha
adc
stc
jp
into
ror
cmp
jo
subl
xorl
jmp
mov
sarl
jo
call
push
movsb
rcrb
lds
test
push
add
or
push
call
daa
bound
xchg
cmp
inc
mov
negl
in
rorb
daa
pop
test
sar
inc
inc
and
mov
loopne
jne
inc
mov
pop
and
or
sub
xchg
clc
dec
fldl
cmp
mov
push
mov
mov
and
push
cmp
jl
ja
or
inc
insb
mov
imul
mov
push
lcall
mov
sub
mov
jle
pop
mov
stc
outsb
je
ljmp
sbb
or
sbb
fsubrl
icebp
fstl
in
xorb
sub
inc
inc
sub
xor
inc
mov
repnz
jmp
jle
cmp
hlt
popa
lods
scas
and
in
bndstx
mov
mov
fistps
add
in
or
pop
mov
xchg
xchg
incl
pop
ss
enter
ficomps
or
mov
xchg
ljmp
cld
jne
and
pusha
or
add
in
pop
push
aas
xor
adc
je
lods
ljmp
xor
test
adc
fidivrl
dec
lret
cwtl
cmc
add
pop
std
push
out
mov
outsb
inc
add
cmp
test
push
mov
pop
dec
icebp
inc
aas
mov
inc
shlb
or
xchg
hlt
pop
add
decl
incl
std
jb
sub
add
movsl
sub
movl
sub
mov
lret
and
pop
fwait
loop
mov
inc
xchg
sub
icebp
adc
dec
xlat
stos
dec
xlat
aaa
pop
mov
dec
sti
test
outsl
cmc
add
mov
imul
call
ja
clc
int
or
movsl
or
mov
aam
gs
repz
testb
fnop
mov
rcrl
in
push
pop
movsl
pop
sub
mov
test
aaa
inc
mov
xchg
or
mov
out
out
jbe
push
fdivs
fdivl
ror
add
in
mov
jo
sti
dec
sub
es
push
cmp
nop
mov
mov
adc
jg
dec
pop
ret
cs
cli
insb
addr16
sbb
cmpsb
iret
xchg
jae,pn
push
cmp
icebp
jg
xor
int3
push
lret
in
scas
les
xor
idiv
dec
xor
mov
inc
mov
inc
sub
or
clc
mov
mov
add
pop
sbb
outsb
insl
or
xor
out
xchg
incl
push
sub
inc
dec
out
pop
sbb
pushf
aas
add
fisubrl
ret
pushl
imul
dec
xor
lret
cmp
fs
jg
pushl
rcll
testb
nop
add
dec
sbb
cld
cmpsl
mov
push
loopne
cli
pushl
or
push
arpl
dec
into
ret
pusha
movsb
xchg
rolb
dec
adc
in
std
sub
mov
sti
nop
adcl
ret
jmp
mov
dec
dec
out
jne
sub
cmp
lock
mov
sub
or
lock
jae
and
and
movsb
orl
dec
add
mov
dec
out
xchg
jae
mov
lds
mov
pop
xor
adc
sub
shlb
dec
lods
mov
sbb
xor
test
xor
mov
test
decl
ljmp
lods
int
cmp
pop
in
dec
aas
lea
adc
and
cltd
mov
shrl
jg
cld
sub
jbe
rcr
sbb
mov
jg
mov
xor
daa
fs
movsl
movsb
movsb
adcb
xchg
jne
cs
and
call
sbb
push
sub
fdivs
shrl
cltd
test
loope
push
inc
cmp
mov
adc
repz
bound
jmp
loop
outsb
inc
rcrl
into
cmpsb
pop
shrl
push
add
lret
sub
icebp
mov
cmp
fsubrp
fdivrs
stos
std
scas
shlb
imul
mov
mov
insl
ja
push
sbbl
addr16
ds
ljmp
dec
cmp
insl
and
sar
cmp
lods
push
push
dec
push
and
xlat
add
mov
shrb
loope
test
ja
popf
push
sbb
mov
ljmp
cld
jmp
ret
sub
addr16
sti
sub
shrb
mov
stos
xchg
lock
inc
push
daa
shlb
xchg
jbe
jp
pop
int3
sbb
sub
jmp
mov
dec
js
fnsave
xchg
ja
xor
adc
imul
fadd
sahf
inc
dec
push
test
push
mul
arpl
push
lcall
jge
test
xchg
aaa
xchg
xor
loop
rorb
stos
push
pop
jno
sub
mov
scas
decl
addr16
jae
mov
fxch
je
loopne
incb
and
lods
and
aas
repz
pop
jb
ljmp
addr16
shrl
adc
in
nop
stos
jmp
int
mov
pushl
mov
sbb
xor
shlb
nop
iret
cli
sarb
jmp
mov
mov
filds
aad
xor
lret
add
sbb
jnp
mov
dec
adc
xor
xor
call
sub
faddl
stos
fisttpll
inc
xchg
xchg
bound
lea
decl
enter
cltd
jne
addr16
pusha
push
outsb
ficoms
jmp
push
pop
fld1
push
xchg
or
mov
mov
roll
nop
in
or
fnstsw
imul
pushl
scas
add
cmp
in
or
mov
das
call
jno
xor
stos
pop
cltd
push
xchg
sar
lcall
pushf
out
out
inc
inc
adc
inc
movsl
outsl
mov
hlt
xchg
ds
add
pop
clc
adc
into
push
inc
dec
je
test
mov
shlb
insb
lock
add
jb
stc
ljmp
mov
pusha
bound
xchg
mov
or
cltd
sbb
stos
lcall
jnp
xor
xor
mov
std
mov
jne
mov
test
pop
jae
mov
imul
subb
cmp
in
xchg
inc
cmpsl
clc
lret
into
pop
leave
dec
stos
mov
ljmp
gs
pop
ret
sbb
sub
nop
inc
push
test
incl
outsb
and
mov
ljmp
mov
pop
jl
mov
ljmp
pop
int3
add
ja
mov
adc
decl
aas
shll
inc
data16
stos
fwait
add
mov
outsl
arpl
jae
cmpsl
mov
jle
mov
outsb
fiaddl
sub
adc
push
sahf
push
popa
add
ret
pop
adc
icebp
aad
lods
sub
dec
es
imul
mov
xlat
outsb
add
inc
pop
pop
or
aad
rorb
shlb
std
mov
incl
loop
pop
push
add
mov
inc
mov
call
mov
lods
pop
xchg
lods
ret
ss
push
xor
rclb
enter
xchg
stos
call
pop
pop
xchg
mov
mov
repz
mov
rcrb
pop
sub
cli
add
and
int
sar
call
add
ret
xor
rcrl
stos
mov
push
aam
fbld
add
xor
sub
pop
cltd
hlt
pushl
incb
mov
ror
adc
lods
inc
mov
enter
pop
mov
ljmp
into
mov
movsb
ja
hlt
mov
xchg
mov
scas
pop
inc
fwait
xchg
mov
or
fisttps
xchg
jnp
fldt
lds
je
mov
lcall
mov
xlat
aam
or
pop
fs
mov
jb
std
fists
call
in
call
decl
std
dec
and
icebp
mov
sbb
imul
xchg
mov
jmp
sar
mov
dec
jae
mov
and
or
push
shll
or
dec
cmp
outsl
cmp
jp
jle
lret
add
insb
mov
or
call
or
jg
mov
insb
add
std
mov
and
mov
mov
mov
gs
adc
call
inc
mov
fsubrl
and
push
dec
repnz
imul
outsl
mov
xor
stos
and
sbb
pop
sbb
xor
frstor
add
incl
jnp
push
les
mov
lcall
cld
hlt
pushf
bnd
push
fidivrl
xchg
xchg
testl
outsl
enter
sub
incl
stc
insl
mov
pusha
add
sar
in
out
mov
jmp
jb
mov
pop
cbtw
cmp
jge
dec
popf
add
mov
xor
in
add
shrl
add
xchg
jmp
jg
mov
hlt
cmp
jnp
jb
andl
dec
ljmp
cs
pop
ja
add
sub
cmp
ret
popf
stos
nop
roll
in
xor
incl
add
pop
loopne
fdivrl
popf
cmpl
mov
lcall
sbb
ja
xchg
or
pop
xchg
xchg
call
jle
xchg
daa
push
push
jle
into
cmp
jmp
rol
mov
leave
push
mov
mov
mov
bnd
hlt
sbb
mov
mov
push
mov
decb
fdivrl
xor
pop
fs
mov
repnz
jp
adc
sbbl
xor
out
movsl
lock
add
pop
shlb
mov
mov
imul
dec
out
lock
dec
lea
xchg
xor
test
decl
shrl
repnz
push
fldcw
pop
pop
mov
jbe
add
lcall
sarb
dec
adcb
test
sbb
pop
ds
fwait
mov
jnp
inc
adc
ds
and
outsl
inc
push
sar
outsl
lcall
push
xchg
aaa
or
adc
add
and
gs
or
mov
add
fs
or
adc
ret
push
mov
push
jmp
xor
or
call
mov
dec
adc
sub
fdiv
pop
mov
fcompl
dec
push
in
imul
jecxz
xor
in
jmp
jle
call
iret
pop
test
negl
jp
js
mov
push
lahf
sub
sub
mov
mov
mov
in
adc
lcall
jmp
push
leave
and
inc
pop
and
pop
int3
fwait
or
sbb
das
inc
rolb
or
je
cwtl
lods
cwtl
sub
pusha
push
ds
decl
or
andb
fimull
mov
cmp
jge
or
gs
popf
iret
cmpb
xchg
mov
xor
addr16
jno
cmp
insl
incl
ljmp
mov
inc
mov
fwait
mov
sbb
jmp
les
pop
pop
or
lods
push
aam
mov
add
incl
enter
in
mov
sarb
xor
fbstp
mov
cmp
in
cmp
add
or
repnz
sub
incl
insb
arpl
insl
nop
jbe
push
mov
push
lods
pop
aam
pop
mov
lea
xchg
or
pop
js
in
rorb
loopne
pop
jle
mov
jge
je
testl
xchg
inc
test
enter
sub
ror
stc
xchg
dec
pop
cli
inc
pop
ljmp
mov
mov
inc
mov
sbb
mov
mov
insl
mov
pop
ljmp
push
popf
inc
mov
mov
rcll
jbe
adc
into
dec
pop
mov
call
aam
fildll
add
jecxz
sarl
jno
lret
std
push
inc
insl
adc
mov
push
cmc
sub
scas
cmp
xlat
lea
xchg
dec
in
dec
loopne
sar
sbb
pop
cs
lea
push
aas
mov
stos
hlt
and
pop
lret
or
inc
mov
adc
push
cmpsl
test
push
mov
cmp
cmp
add
outsb
xor
loop
jo
fimull
sti
sub
mov
ret
jne
cmpsl
push
or
jnp
inc
sub
mov
ljmp
notl
jae
icebp
jo
inc
mov
repnz
ljmp
shrb
insb
mov
icebp
or
push
movups
lods
push
pop
add
jecxz
arpl
inc
pop
cli
adc
inc
stos
mov
outsb
push
jmp
loop
mov
cmp
xchg
int
push
ja
cmp
mov
mov
xchg
pop
insb
int3
mov
sbb
pushl
jnp
fnstsw
or
or
loope
in
cmp
in
sbb
repnz
mov
jmp
ljmp
lods
mov
call
shll
std
sub
cmpb
dec
pop
mov
arpl
pop
scas
imul
es
outsl
cmc
sbb
jge
roll
in
mov
mov
cmp
ljmp
arpl
loope
pop
or
push
inc
mov
add
out
in
xchg
test
int3
ret
xchg
out
jg
incl
pop
sti
js
mov
fadd
into
sub
sbb
adc
xor
jae
mov
pop
pop
cs
jno
shrl
pushl
ffreep
out
add
fstl
adc
sbb
jmp
rol
xchg
aad
insl
mov
cmp
test
cs
mov
pop
xor
sar
mov
std
xor
je
scas
dec
sbb
jg
das
fnstsw
call
jno
bound
into
xchg
out
loope
sbb
jmp
lcall
ret
and
lock
sbb
xor
lcall
xor
dec
fwait
cmp
xlat
enter
mov
in
xor
pushl
jns
sahf
nop
test
adc
pop
stc
ret
repz
mov
call
idivl
jg
mov
push
cmc
push
cmp
jmp
scas
pop
in
jno
pop
mov
ljmp
jbe
fisttpll
jo
dec
dec
lods
incl
call
push
scas
xchg
sarb
mov
pop
clc
inc
push
addb
push
cltd
scas
outsb
mov
lcall
movsl
xchg
fcoms
xor
pop
or
jg
adc
push
es
lahf
sub
mov
cmp
shlb
icebp
out
mov
call
negl
outsb
dec
or
or
nop
loopne
testb
mov
insl
into
std
cs
dec
pop
loopne
jl
cmp
adc
call
mov
icebp
pop
mov
lds
pop
jp
sbb
outsl
std
incl
sbb
dec
idivl
leave
call
xchg
ja
das
push
sahf
cld
lcall
sub
sbb
sub
inc
imulb
sti
fs
fiadds
cmp
decl
and
or
mov
incb
sbb
ds
and
xacquire
fisttps
flds
adc
push
sbb
or
sub
in
lcall
inc
insl
lret
mov
mov
sbb
xor
movsl
pushf
sub
jbe
sub
in
mov
push
orl
sahf
ljmp
dec
popf
dec
sub
xchg
pop
jb
mov
jg
dec
inc
shrb
ffree
sbb
mov
mov
push
push
mov
sbb
insl
xchg
push
loopne
jg
add
adc
pop
sarl
or
stos
mov
testl
mov
and
outsl
insl
xchg
adc
jno
dec
repz
xchg
outsb
cmc
movsl
andb
es
dec
adc
out
aad
lcall
xor
sbb
and
pop
dec
xchg
xor
ret
jae
aam
insl
lods
lea
lods
in
jg
clc
sub
push
repz
pop
ret
div
mov
pop
es
movsb
je
fistpl
cld
incl
jmp
fidivrs
repz
outsb
pop
clc
pushl
in
push
jnp
out
das
add
push
push
dec
cmp
xor
ret
test
push
and
cmp
das
hlt
mov
imul
orl
or
pushl
dec
xor
fnstenv
into
ds
mov
ljmp
icebp
mov
es
addr16
or
out
das
fcmovne
addl
test
fildll
xor
and
sub
rcrb
incl
int3
pushf
in
popa
or
sub
cmp
inc
daa
mov
sub
jb
mov
movsl
filds
dec
popa
into
pop
ljmp
push
xchg
test
call
and
mov
push
and
or
test
and
or
adc
out
test
fistl
sub
lahf
fsubs
cmp
or
out
pop
push
pop
cltd
add
cmpsb
xor
loop
fs
lcall
call
jg
cmp
dec
or
adc
inc
sbbl
cld
popf
mov
add
aad
fs
xchg
jle
lock
insl
repz
push
push
and
push
add
mov
pushl
dec
sub
test
mov
cld
jg
es
xchg
popa
movsb
pop
dec
adc
or
push
dec
ljmp
xor
icebp
pop
clc
outsl
es
mov
fcomi
mov
mov
xchg
ficoms
in
fdivl
mov
pop
fidivrl
lea
aaa
aaa
mov
fistps
rorb
in
bound
jo
xchg
cmc
push
sarb
inc
lods
and
adc
xor
cld
pop
fisubrl
push
push
stos
popf
call
sahf
xor
lods
push
repz
sub
in
scas
fwait
int
inc
push
scas
mov
loop
arpl
ss
mov
jl
std
jnp
pop
in
ja
inc
jmp
dec
test
shr
push
pop
add
and
or
fcoms
ljmp
hlt
arpl
jecxz
push
bound
fistps
cmpsb
push
mov
mov
pusha
test
cmp
xor
or
test
lcall
jecxz
inc
mov
bound
faddl
pushf
mov
into
idivb
add
in
and
decl
insl
adc
fcompl
hlt
push
dec
lock
clc
stos
in
ljmp
hlt
decl
sub
xchg
sub
bound
loopne
pop
loope
mov
ficompl
mov
in
scas
subl
ja
scas
pop
ss
call
test
sbb
and
sbb
add
cmpsb
fisubrl
inc
sbb
in
jnp
shld
or
adc
xchg
jg
sarl
mov
jae
movsb
in
lock
jge
mov
stos
sar
arpl
movsl
sahf
movsl
mov
shll
push
push
cmc
cli
mov
test
pop
push
mov
jmp
stos
sub
in
lea
cmp
es
xchg
push
cmp
test
mov
decl
adc
scas
hlt
arpl
pushf
repz
or
adc
mov
ja
gs
mov
mov
sub
inc
and
std
mov
push
jae
lahf
jbe
lods
out
lods
cmp
ljmp
and
std
test
shrl
xor
in
inc
mov
or
insl
loop
adc
imul
outsb
lock
dec
and
cli
out
push
lahf
or
mov
test
push
cmc
incl
icebp
jnp
pop
outsl
sti
mov
data16
push
nop
dec
sarb
sub
jns
gs
incl
dec
mov
push
out
stos
fisubrl
sbb
xor
js
fiaddl
aaa
xor
incl
arpl
and
fdivs
push
adc
inc
jno
xchg
sub
sbb
call
sub
outsb
xchg
dec
outsb
ja
push
mov
xchg
mov
mov
xchg
pop
push
fidivrs
pop
jmp
pop
mov
xchg
cltd
jge
push
fldenv
pop
jo
mov
or
ljmp
cmp
sbb
not
jb
in
add
jb
je
addr16
hlt
call
mov
xor
movups
outsb
iret
jmp
les
imul
and
lods
jle
mov
push
and
ja
outsb
cld
sbb
pop
sub
mov
pop
and
add
push
fcomps
stos
mov
push
push
aam
aaa
clc
inc
and
mov
mov
ljmp
mov
popa
dec
outsl
and
leave
and
mov
cltd
add
sti
cmp
jg
stc
shlb
ffreep
jmp
aam
ret
andb
or
or
test
decl
sbb
clc
pop
mov
nop
clc
test
inc
jg
cmc
dec
std
mov
ss
imul
cmp
sbb
xchg
loopne
jmp
filds
aam
fists
lock
shrb
dec
mov
fdivs
mov
dec
int3
and
mov
fcompl
add
pop
push
mov
imul
pop
int3
dec
icebp
outsl
aam
cmpsb
test
add
popf
dec
out
cli
cmp
push
int3
jo
push
rcl
push
sarl
imul
lcall
decl
fildll
mov
icebp
test
js
insl
mov
push
cmp
add
repz
in
sbb
scas
divl
imul
outsl
xchg
fldenv
iret
fildl
scas
cmc
ljmp
mov
lea
sbb
xor
ljmp
mov
scas
and
pop
gs
out
stos
sbb
paddd
movsl
decl
mov
jg
stos
fidivrl
and
mov
and
cld
ljmp
hlt
xchg
pop
mov
leave
jbe
fs
push
dec
mov
std
lds
push
xchg
add
or
pop
xorb
test
inc
xchg
xor
push
adc
pushf
call
dec
loop
cmp
in
add
in
mov
fildl
pop
out
xchg
mov
and
push
sbb
sbb
or
jg
fnstsw
test
xor
pop
leave
daa
loopne
test
dec
xor
xor
dec
movsl
mov
sti
shl
lods
add
mov
xchg
hlt
incl
mov
xor
pop
fdivrp
xchg
cs
mov
sbb
xor
push
je
and
fmuls
xchg
clc
das
outsl
or
jecxz
pop
data16
sti
sbb
outsl
cmp
inc
fsubp
rcrb
dec
push
xor
xchg
cmp
lcallw
push
sub
popl
or
aam
push
lods
mov
cmp
fimuls
cmpsl
jle
xchg
test
rol
fucomip
and
call
arpl
pop
mov
daa
and
or
push
sbb
add
ljmp
xlat
movsl
out
aaa
mov
mov
ljmp
xchg
stos
divl
add
aad
push
xor
out
add
pusha
jnp
push
sbb
pop
mov
push
inc
mov
jo
aam
lds
jae
mov
sub
jg
lcall
sub
push
add
in
rcl
xor
cmpsl
sub
lea
jecxz
dec
ljmp
jae
sti
jg
sub
add
push
incl
lret
jge
inc
lods
adc
push
in
daa
inc
cld
fists
gs
int
imul
fstl
loopne
lcall
pop
in
mov
inc
xor
ss
or
fisubrs
pop
adc
jo
add
paddb
pop
pop
add
jno
xchg
xchg
ljmp
inc
pop
ficompl
push
jno
ds
stos
cwtl
push
adc
inc
pop
add
xchg
clc
decl
fdivrl
and
jge
inc
lret
data16
pop
xchg
es
ljmp
mov
pop
mov
xchg
mov
mov
stos
jle
dec
jmp
into
call
sub
inc
lret
xor
popa
test
arpl
inc
mov
ljmp
insl
enter
cltd
or
or
hlt
faddl
mov
sbb
xchg
jg
xor
pushf
or
test
mov
mov
stos
and
rcrb
pop
sub
mov
sub
cmpsb
out
cmc
mov
leave
xchg
cmp
rclb
jg
sub
int
add
fadd
cmp
aam
rclb
mov
cmpsl
imul
popa
and
jae
mov
outsb
mov
rcrl
adc
ja
push
je
push
mov
mov
dec
bnd
or
jle
dec
cld
jmp
test
add
loope
mov
orl
iret
mov
adc
scas
add
sub
lret
out
mov
rcrb
sub
mov
pushl
ds
mov
rcrl
daa
cmp
je
test
mov
mov
cld
jp
ss
xor
cmp
cmp
cmp
out
loope
jle
xor
loop
adc
cmp
jle
pop
filds
jns
adc
addr16
xor
repnz
pushl
in
scas
adc
mov
add
jno
das
shlw
pop
jnp
iret
cmc
push
call
in
mov
pop
into
or
decl
insb
push
fdiv
sbb
inc
loopne
sbb
into
mov
test
mov
ss
pop
mov
aaa
inc
ja
pop
pop
fsts
jnp
mov
cltd
popa
push
xor
incl
pop
pop
js
inc
xchg
in
rcll
pop
dec
cs
fs
jne
mov
and
les
loopne
js
imul
out
mov
adc
test
cltd
sbb
lea
jp
inc
in
incl
adc
xchg
pop
push
mov
je
mov
mov
lcall
out
mov
jmp
pusha
into
or
stos
push
mov
or
xlat
mov
jmp
fwait
je
xchg
ljmp
inc
mov
clc
lret
out
lcall
shll
cmp
test
dec
and
sti
mov
and
outsl
lcall
imul
push
mov
rclb
sub
xchg
cli
rolb
mov
xchg
jge
out
outsb
gs
aad
mov
jb
fwait
or
cs
mov
dec
pop
mov
xor
mov
sar
jg
add
aad
stos
mov
fwait
ss
push
loop
jg
inc
or
repnz
andl
xchg
jmp
cmp
daa
and
inc
jg
insl
clc
cmc
out
cmp
imul
jle
std
pop
cli
pop
clc
pop
pop
mov
f2xm1
pop
and
adc
sub
imul
mov
mov
mov
cmc
scas
add
xlat
loope
and
inc
push
cmp
sti
mov
inc
or
psadbw
cli
pop
and
cmp
rcl
sub
ret
incl
test
sbb
sbb
jle
pop
jge
les
lods
mov
lock
call
sub
lock
es
mov
or
outsl
int
negl
outsb
nop
outsb
idivb
insb
sbb
push
out
dec
ds
xorl
mov
xchg
leave
std
lcall
data16
mov
inc
and
test
ljmp
rorb
loop
adc
js
sarb
test
aad
and
sbb
xor
and
jl
xchg
xchg
leave
jae
shr
xor
mov
repz
inc
movsl
sub
sbb
hlt
pushl
push
scas
adc
cmp
push
mov
ljmp
jnp
mov
adc
pandn
jg
dec
imul
movsl
add
psrlw
addr16
adc
mov
dec
xchg
mov
decl
aaa
pxor
lock
push
xor
shll
scas
inc
mov
roll
sub
sar
xchg
lret
pop
mov
lods
loopne
out
lock
jge
cmpsb
sbb
mov
jecxz
aad
push
js
sbb
call
arpl
jns
xchg
leave
jb
xor
cli
sbb
and
mov
repnz
stc
cld
mov
push
jno
shl
lock
enter
adc
ds
ljmp
fistpll
sbb
std
mov
fsts
mov
lcall
movsb
mov
xor
fimuls
jecxz
data16
out
and
lcall
in
mov
mov
test
cmp
shlb
fs
jg
jg
cmp
cmp
xchg
lahf
sbb
sarb
gs
mov
and
mov
test
sbb
xchg
rcrb
mov
push
jbe
cmc
sti
pop
loop
and
mov
add
inc
dec
fistl
xor
bound
push
out
popa
adc
jnp
into
test
ljmp
mov
adc
adc
mov
mov
sub
or
lcall
jns
cld
int3
xchg
call
add
iret
mov
aaa
push
dec
std
ljmp
inc
cmp
clc
out
xchg
sub
popa
pusha
jno
add
inc
bound
arpl
jb
sub
or
pop
mov
xchg
mov
shlb
jns
test
and
or
das
adc
dec
mov
aaa
mov
push
out
loope
popa
mov
cmp
adc
jno
dec
add
jg
rcrb
add
mov
aaa
cli
in
leave
stos
inc
jnp
fisttpll
pop
mov
fidivs
pushl
adc
mov
cmpb
rcr
mov
int
orl
clc
or
adc
dec
mov
hlt
std
decl
divb
lods
mov
addr16
repz
cmp
mov
dec
shlb
das
call
in
xchg
leave
add
push
cli
and
inc
mov
jp
jp
cmp
and
popf
mov
sbb
loop
cwtl
xchg
jns
shll
sar
or
imul
push
pop
rcll
rol
inc
popf
cwtl
cmp
lcall
imull
popf
frstor
mov
push
divl
hlt
outsb
lcall
in
xchg
dec
rclb
add
sub
inc
mov
lds
mov
rorl
sahf
inc
add
imul
leave
decl
das
xor
test
andb
dec
xchg
out
xor
adc
cld
push
jmp
mov
jmp
push
xchg
xchg
pop
push
xchg
ret
data16
sbb
aam
add
mov
cld
xor
sub
mov
out
mulb
ret
lods
mov
pop
and
test
push
decl
dec
mov
fbld
mov
mov
or
clc
bound
lock
inc
sbb
push
mov
mov
jnp
mov
test
or
sub
xchg
xchg
mov
icebp
pop
in
add
ds
int3
xchg
fisttpll
jecxz
mov
dec
pop
mov
hlt
adc
imul
lret
cltd
dec
xchg
dec
pop
sub
sub
imul
jb
mov
das
daa
icebp
xchg
dec
movsl
pop
imul
dec
pop
and
popa
dec
sahf
mov
and
lods
jo
decl
pop
mov
call
not
movsl
and
ret
jecxz
fchs
iret
mov
pushl
mov
cmc
mov
gs
movsb
sbb
mov
mov
ljmp
fwait
inc
in
xor
pushw
mov
cltd
rorl
mov
loop
adc
test
xchg
and
decl
dec
out
popa
cmp
pop
pop
adc
in
nop
cs
cmp
rcrl
jne
pop
rorl
and
mov
mov
sbb
mov
hlt
jmp
jl
test
mov
enter
fninit
fwait
push
sub
jmp
push
fdiv
enter
lret
sub
push
and
data16
fwait
cmp
mov
mov
xlat
mov
decl
push
lret
bound
rorb
add
xor
std
popf
push
push
xor
out
mov
ljmp
mov
and
jae
push
sbb
cmp
sar
test
lret
out
or
sbb
adc
lahf
int3
jp
sub
fisttpl
lods
push
sbb
call
test
test
shl
add
aam
insb
lock
pushl
jle
adc
sub
aad
int3
in
js
adc
call
fnsave
movsl
icebp
push
mov
loop
fsubl
xor
sbb
fstpt
push
adc
xor
aam
ret
popf
pop
sub
sub
jecxz
filds
cmp
cltd
lret
xor
imul
call
shrb
pop
jle
test
adc
jp
jmp
lret
aaa
icebp
cli
pop
cmc
cld
dec
test
mov
xchg
add
andl
repz
pushf
push
mov
loop
movsb
stc
sub
jecxz
arpl
es
ljmp
mov
ret
lea
cmp
test
fbld
jle
sub
ret
pop
push
decl
shll
dec
sub
pop
mov
or
inc
pop
popa
lds
cmp
inc
ljmp
dec
pushf
mov
or
imul
sbb
fwait
adcb
enter
push
sub
fimuls
sbb
mov
call
mov
fwait
int3
add
mov
pop
sub
mov
std
icebp
pop
movsb
in
cmpsl
push
int3
iret
ds
fdivl
adc
add
xor
lret
das
cli
hlt
sub
pushf
dec
dec
into
scas
inc
repnz
ljmp
and
aad
sub
cmp
cmp
repnz
orb
enter
mov
push
push
rolb
and
insb
ljmp
sbb
es
std
adc
or
xor
ret
das
xchg
adc
movsl
clc
ljmp
stos
outsb
mov
push
test
out
xchg
jl
and
pushf
dec
sbb
pop
push
addr16
jmp
fldl
mov
mov
inc
and
sahf
add
cmp
mov
pushl
scas
dec
mov
scas
sbb
dec
sbb
push
mov
xchg
push
mov
jge
and
push
test
lahf
movsl
push
sub
adc
je
lcall
outsl
arpl
aad
cmpl
mov
xchg
inc
xor
push
decl
std
call
jge
loope
inc
dec
ret
sbb
std
xor
or
push
sbb
cmp
mov
push
jl
cwtl
add
and
jle
repz
std
incl
pop
fwait
xchg
sub
bound
adc
cwtl
xor
jbe
jecxz
shrb
push
arpl
push
cmp
loop
mov
add
mov
or
mov
sub
lock
xor
imul
aam
cwtl
cmc
jp
mov
sahf
pop
test
push
xlat
cmp
les
inc
jbe
jg
outsl
push
mov
jmp
mov
popa
gs
dec
or
movsl
xlat
xchg
std
add
mov
int3
outsl
ret
or
xor
jg
pushl
in
dec
aaa
cli
xlat
dec
loope
fdiv
fwait
lds
inc
mov
cld
jg
add
mov
js
push
mov
push
xor
xchg
divl
call
pushl
xchg
mov
jl
lcall
push
pop
test
icebp
das
std
xchg
popa
jle
jno
dec
jne
xorl
mov
mov
adc
sbb
mov
xchg
push
or
xchg
cmpsb
movsb
pusha
pmuludq
mov
mov
jp
mov
lret
xchg
icebp
inc
mov
jg
decl
shll
or
push
jo
int3
mov
stos
add
xchg
xchg
sub
adc
ljmp
sbb
jb
jae
mov
xor
xchg
xchg
in
push
in
loop
xor
and
inc
leave
cli
rol
fldenv
jmp
enter
mov
ljmp
std
jg
sbb
add
out
mov
and
add
add
jg
mov
mov
mov
adc
gs
mov
in
dec
lcall
scas
mov
rcr
xlat
stos
jle
push
and
dec
inc
movsb
jl
and
cmpsl
push
ljmp
lahf
mov
pop
mov
pop
ja
loop
lea
mov
adc
jb
inc
dec
in
mov
enter
hlt
aas
lahf
adc
pop
loop
mov
xor
imull
mov
enter
out
lahf
popf
adc
mov
incl
ljmp
pusha
cmpsb
ret
in
push
push
jecxz
aas
jmp
cmp
jns
mov
sbb
hlt
mov
in
dec
fdivs
jle
jg
call
pusha
lods
cmp
gs
mov
pop
mov
lcall
lahf
aaa
sbbl
sub
mov
aad
int
lea
lea
mov
enter
push
add
ds
ja
pop
lret
sar
fwait
scas
cmpsb
sbb
cmpsb
ljmp
fsubs
popf
mov
loopne
ljmp
xor
outsb
addl
shr
mov
dec
imul
push
lods
aam
imul
push
outsb
sbb
pop
loopne
sti
fistpll
test
inc
jmp
sbb
aam
ljmp
movsl
mov
xor
mov
cwtl
addr16
outsl
add
jne
test
inc
or
xchg
cli
das
cld
xchg
clc
mov
jae
stos
sbb
roll
jge
loopne
dec
jae
or
cmp
jno
mov
incl
mov
or
jmp
lods
sub
lock
xrelease
int
mov
sub
cmp
mov
mov
ljmp
pop
outsb
sar
cmp
xor
test
jb
insl
test
push
scas
sbb
mov
cmp
or
jmp
dec
cltd
test
and
inc
insb
loope
out
adc
mov
fldcw
or
push
sbb
add
pop
cmp
je
shrl
imul
aas
add
pushl
jp
in
pop
xor
mov
sub
cltd
cltd
add
test
cmp
inc
jmp
xchg
adc
add
movsb
or
imul
lret
push
imul
js
sahf
pusha
sbbb
pusha
mov
xor
mov
mov
dec
push
adc
mov
js
sarb
sbb
mov
mov
push
lahf
jmp
push
mov
mov
daa
sub
lods
cs
xor
mov
das
adc
je
fidivrl
mulb
mov
lea
mov
push
jnp
and
fiaddl
lcall
jmp
xor
xor
int
sub
fimuls
ds
dec
pop
pop
popf
mov
or
ds
and
jne
fmuls
push
sub
push
inc
ja
push
incb
icebp
pushl
xchg
inc
test
mov
or
scas
jle
incb
into
cmpsl
lret
fmuls
imul
mov
sbb
pop
add
mov
ss
aas
ljmp
punpcklwd
cmp
jns
xor
dec
push
sbb
pop
aaa
mov
mov
inc
jg
inc
mov
fldt
mov
inc
test
jl
xor
enter
lcall
insb
push
dec
or
push
stos
pop
sarb
fildll
cmp
pushl
sub
jb
mov
orl
xchg
lret
addr16
std
mov
push
int
imul
pop
fdivs
fwait
decl
mov
cmp
punpckhwd
aad
adc
xchg
cmp
dec
cld
jg
dec
or
cmpsl
and
sbb
sbb
inc
mov
adc
pop
std
jle
insb
add
inc
stc
cmp
aas
sub
lcall
mov
xlat
dec
mov
jae
pop
xchg
aad
mov
inc
pop
or
jg
call
sbb
dec
sarl
rcrl
xchg
sbb
add
inc
out
call
test
decb
xchg
pop
addb
inc
mov
lods
mov
int
push
mov
jmp
adc
cld
popf
jl
ret
sub
int
sarl
push
and
jae
sti
sub
push
push
loope
and
cmp
fmull
shl
pop
loopne
jnp
pop
enter
sub
adc
xchg
jmp
sub
in
mov
lds
aaa
cmpsl
sti
pop
nop
pop
incl
sbb
dec
or
std
test
orl
dec
daa
mov
sub
sub
frstor
pop
mov
xor
fisubrs
mov
adc
adc
das
jno
push
mov
sti
popa
xchg
xor
addr16
mov
cmp
fbld
popa
repz
cmp
loop
cmpsl
pop
stc
imul
fwait
aam
ja
lret
cmp
xor
jg
sbb
aaa
mov
xchg
push
xor
xor
outsb
pop
jae
adc
sub
test
and
test
or
nop
sub
loopne
call
loopne
xor
test
shrb
add
je
mov
shrb
scas
push
out
pop
jmp
mov
call
dec
jnp
xlat
loope
jg
andb
gs
arpl
movb
mov
loopne
call
or
jno
push
std
fadds
mov
jecxz
fsubl
mov
cmc
nop
jg
mov
stc
ss
cmp
sbb
sbbl
lcall
cld
xor
popf
add
pop
test
pop
rorb
popf
out
add
mov
cmc
dec
dec
aas
cs
xchg
mov
popf
lahf
invd
data16
adc
add
ljmp
dec
xchg
mov
shll
xor
or
iret
jmp
mov
test
and
ljmp
mov
jmp
push
pop
aaa
xchg
pop
jp
sub
ret
push
test
rolb
ljmp
stc
push
je
fimuls
mull
pushf
xor
in
sbb
xchg
pop
shrb
lcall
hlt
scas
cmp
sub
cmp
addr16
lea
adc
jg
mov
jg
push
pop
sbb
out
inc
xchg
mov
dec
in
mov
xchg
int
out
sbb
ds
in
lock
decl
xor
pop
movsl
jle
in
test
pop
or
inc
mov
in
in
push
sub
fwait
add
inc
out
mov
push
fidivrl
incl
lret
push
shrb
adc
filds
adcl
jmp
addl
ss
cs
stc
jge
jle
lret
push
jmp
shr
jno
pop
arpl
icebp
lock
mov
popa
push
repz
dec
mov
mov
addb
mov
das
mov
add
pop
loop
push
fdivs
das
pop
xchg
in
fcomps
mov
icebp
outsl
lcall
mov
cmp
fnstenv
inc
mov
push
loop
pop
mov
mov
mov
push
xchg
cmp
aas
mov
repz
cmpsb
xchg
adc
and
sub
mov
or
ss
add
adc
adc
in
pushf
jge
jg
mov
push
adc
sbb
push
dec
fisubs
popl
das
hlt
push
push
std
pop
cmp
aaa
dec
xor
inc
xchg
sbb
mov
repnz
mov
sarl
and
push
sub
popf
xor
push
out
mov
jmp
in
fs
jo
add
mov
lcall
test
jle
repnz
decl
lock
sti
sbb
adc
jg
pop
in
sbb
nop
mov
out
pop
jno
mov
mov
mov
xchg
dec
adc
dec
push
or
sub
fistpll
inc
in
mov
test
iret
mov
popf
movsb
daa
lock
daa
fstpt
call
icebp
enter
notb
lret
mov
hlt
mov
test
std
stos
enter
add
and
nop
sub
loope
pushl
cli
cmp
mov
leave
sbb
cs
xor
data16
icebp
pop
pushl
mov
sbb
test
xchg
notl
and
ljmp
std
push
mov
mov
push
cmpsb
inc
adc
inc
scas
xlat
std
adc
outsl
incl
push
push
sub
add
shrl
scas
fs
add
xchg
lcall
movsl
insl
dec
aam
int
shr
add
lea
gs
call
out
or
lock
ss
jp
shl
jmp
adc
pop
or
neg
lcall
xor
inc
sbb
sbb
add
xor
add
repz
xor
mov
mov
sub
inc
lahf
push
out
outsl
in
inc
pusha
inc
pop
dec
dec
shlb
mov
mov
hlt
add
xchg
imul
inc
cltd
xchg
mov
adc
cmp
dec
insl
lcall
jb
sarl
sti
fdivr
mov
inc
mov
mov
std
jbe
pop
push
shrl
ss
or
jg
frstor
xchg
xorl
pop
push
imul
jns
mov
cld
scas
mov
pop
dec
leave
add
xchg
sub
xchg
push
es
pushl
xchg
cmp
aam
mov
pop
add
cltd
mov
aaa
pushf
jg
decl
mov
nop
push
cmp
hlt
icebp
push
jl
jle
xchg
mov
ret
pop
cmpsl
or
lock
cli
call
add
clc
imul
ljmp
xchg
aas
test
pushf
pop
cld
in
pop
sbbb
or
mov
test
sub
loopne
imul
sti
arpl
outsb
sbb
insb
cmp
mov
mov
icebp
in
pushf
mov
sahf
das
lock
cmpsb
pop
or
mov
fistpll
mov
movsb
movsl
mov
mov
inc
add
popa
in
ljmp
daa
jno
dec
and
inc
cwtl
jo
pop
sbb
jb
and
fs
shll
xor
sti
adc
mov
sub
xor
call
mov
hlt
ljmp
mov
pop
in
lret
leave
sbb
mov
rcrb
inc
ja
pusha
call
lcall
xchg
ljmp
clc
add
mov
pop
andl
rorb
or
scas
jbe
std
mov
lea
pop
sbb
roll
pop
lods
ljmp
pop
daa
jnp
movsl
jno
cli
pop
xchg
adc
rcrb
jp
outsl
in
mov
mov
adc
fmull
nop
lds
cmp
xor
pop
out
and
cwtl
add
sub
stc
movsl
pop
imulb
jmp
fidivrl
cmp
call
push
dec
insl
out
push
hlt
mov
icebp
fldcw
rorl
mov
lcall
dec
testl
mov
js
lods
je
mul
sbb
pop
cli
inc
add
insl
lods
lock
jge
xor
sbb
mov
std
mov
daa
dec
mov
or
xor
ss
pushl
stos
mov
fldt
xchg
sbb
bound
jle
and
mov
gs
in
jns
loope
cmp
mov
rol
sub
mul
imul
into
idivb
js
jg
adc
pop
lock
mov
xchg
aam
lret
gs
mov
xchg
xchg
inc
fbld
arpl
push
xlat
pop
xor
push
repnz
fwait
clc
jg
call
gs
jns
mov
xchg
lock
std
call
push
outsl
dec
scas
int3
xchg
dec
arpl
inc
pushf
int3
pusha
test
lcall
loop
mov
cmp
addb
sub
test
imul
std
inc
push
jne
in
add
shl
iret
outsb
mov
cmp
pushl
pop
or
and
mov
syscall
mov
clc
insl
shlb
incl
xchg
les
int
test
call
cmc
cmp
hlt
mov
test
pop
add
sub
xchg
and
std
cld
imul
daa
mov
lds
pop
mul
cmc
push
jg
and
push
lods
inc
pop
add
iret
sbb
dec
fldenv
pop
push
dec
fdivs
in
dec
scas
adc
jg
xchg
rcl
into
ljmp
jne
arpl
test
lcall
ds
gs
pop
lea
mov
out
ror
cmp
sbb
push
in
arpl
xchg
sbb
cmp
call
xor
repz
mov
push
pop
xchg
dec
dec
popa
inc
push
xchg
mov
loopne
lcall
fmull
adc
inc
pop
sub
jg
sbb
xchg
add
lds
mov
push
dec
push
hlt
mov
incl
aaa
aas
mov
jnp
xor
decl
std
sub
outsb
rclb
fldt
pop
in
js
mov
lret
adc
jmp
les
imul
mov
repnz
call
repnz
scas
xor
or
sub
or
mov
testb
and
mov
jmp
lea
sub
fiadds
bswap
js
int3
mov
jg
jmp
or
mov
mov
fs
jl
or
jo
ljmp
std
and
jge
cmp
lret
shll
in
and
and
fbld
mov
inc
push
movsb
dec
pop
pop
cmp
pop
in
push
out
jl
scas
stos
sbb
aaa
test
push
push
inc
stos
sub
push
push
inc
insb
aas
pop
mov
call
cli
test
push
je
push
pop
paddw
xor
jecxz
inc
aaa
push
mov
or
std
sti
enter
cs
add
or
mov
or
pop
loop
test
mov
lcall
cmpsb
out
dec
lods
add
jg
sbb
sbb
pop
dec
xchg
xchg
sbb
adc
mov
mov
pop
adc
pop
add
mov
xor
xlat
push
scas
pusha
sbb
mov
in
jg
mov
cmp
mov
push
or
int3
mov
lcall
outsb
sar
jg
adcb
pop
jp
and
xor
bswap
lret
jg
fiaddl
xchg
ljmp
mov
insb
xchg
leave
inc
or
or
inc
out
inc
sub
pop
out
push
cmp
icebp
mov
test
inc
into
in
into
fstps
adc
das
mov
ja
and
roll
xchg
jmp
les
bound
inc
call
clc
popa
sahf
out
sbb
sbbb
add
lock
icebp
jmp
pop
loopne
jnp
mov
xchg
xchg
andl
inc
or
xchg
cmp
outsl
cld
ljmp
sub
dec
cmp
mov
cmp
shl
test
push
lea
mov
cltd
mov
hlt
xchg
mov
push
sub
pop
ret
inc
lock
cmpsb
aaa
testl
nop
outsl
jno
test
lea
jmp
mov
mov
mov
in
and
xchg
xor
call
cmpsb
xlat
pop
and
mov
push
adc
lcall
lods
jne
dec
stos
jns
imul
fimull
and
insl
mov
xor
xor
sti
aad
xchg
movsl
es
push
sbb
call
mov
pop
dec
mov
inc
mov
mov
lcall
pop
jnp
cmp
popf
adc
loop
dec
fwait
pop
idivl
push
inc
leave
jmp
push
repz
adc
hlt
sbb
dec
cmpsb
mov
mov
mov
in
sbb
outsb
insl
xlat
fsubl
lds
fdecstp
push
inc
adc
int
adcb
jg
repz
push
aas
idivb
cmp
or
jb
pusha
xor
jg
dec
jle
push
add
movsb
dec
mov
pop
clc
out
mov
mov
decl
pop
filds
sbb
hlt
jg
or
lods
mov
fldt
call
cwtl
dec
jne
push
shl
xchg
jae
pusha
out
inc
in
outsb
adc
addl
incl
insl
call
mov
into
and
jg
lcall
mov
icebp
insl
fisttpl
shlb
mov
mov
dec
dec
incl
loope
pop
ret
gs
sbb
fcmovne
test
xchg
xchg
xor
adc
ficoms
push
das
std
fcomip
adc
jecxz
xor
adc
inc
imul
outsb
popa
xor
mov
test
shll
cmp
inc
scas
sub
andl
mov
dec
and
call
rolb
mov
rclb
mov
pushf
sbb
xchg
sbb
outsl
adc
jl
lods
fdivrl
pusha
lock
lock
std
fistpll
test
sbb
inc
test
push
jne
jg
mov
sar
mov
add
push
or
push
mov
cli
enter
inc
ja
mov
fcoms
int
idiv
in
call
insl
mov
jmp
lock
fldenv
sbb
pop
fldl
push
adc
push
fmull
outsl
mov
xchg
inc
cmpsl
mov
shrb
jmp
clc
ljmp
pop
loope
cmpsl
xor
lods
jae
fstpt
jmp
mov
inc
jmp
mov
cltd
movsb
fisubrl
je,pn
sub
cltd
or
dec
push
inc
repz
int
mov
fnstcw
lahf
dec
pop
push
shrl
inc
stc
stos
bound
icebp
fisttpl
in
mov
lods
pushl
pop
jb
sbb
aad
lods
arpl
dec
or
ds
and
rcr
push
rcll
pop
cld
ja
pop
pop
sub
es
cld
testl
jmp
push
and
push
cmp
outsb
mov
ja
dec
iret
outsl
std
xchg
clc
sbb
pop
mov
mov
outsb
sub
push
fwait
mov
sti
imul
int3
aam
cmc
mov
xor
xchg
mov
xor
stos
incb
call
xchg
dec
sub
jae
test
mov
jp
adc
jg
pushaw
add
push
iret
mov
lcall
ror
xchg
xor
mov
ss
loopne
xlat
lret
dec
js
push
push
ds
incl
mov
loop
leave
jns
ss
aam
adc
shll
test
mov
scas
xchg
das
lds
inc
sbb
sbb
jl
ret
jmp
mov
push
adc
xor
cmp
es
adc
dec
add
push
paddusb
idiv
decl
xlat
stc
rcll
mov
nop
jne
loopne
rorl
mov
lcall
addr16
lret
mov
xchg
jg
fiadds
sahf
daa
push
add
cs
pop
inc
decl
cld
dec
dec
lock
dec
xchg
mov
xor
fsubrs
dec
or
decl
stos
inc
sub
sbb
repz
dec
repz
pop
mov
loop
xor
mov
lcall
dec
xor
cmp
mov
jne
or
sar
xchg
aad
sub
loopne
incl
mov
rcll
push
lret
or
mov
jg
inc
lret
dec
cmpsl
sbb
xchg
mov
adc
jg
cmp
dec
movsl
fs
cmp
or
or
rclb
inc
push
cmp
xchg
mov
incl
scas
pop
add
and
jae
adc
jp
fwait
mov
incl
lret
adc
pushf
or
pop
loopne
jmp
out
in
inc
out
pushf
xchg
xor
int
xor
in
cli
push
fsubrs
mov
sahf
or
aad
testb
jl
sub
cld
cli
jg
call
fimull
push
mov
cmpsl
gs
push
lds
dec
add
leave
incl
dec
pusha
fdivl
jecxz
xchg
pop
sahf
lea
jp
decl
cmp
cli
xchg
mull
pop
push
adc
jne
mov
enter
std
mov
jecxz
pop
lock
jnp
iret
pop
mov
inc
mov
mov
lds
jl
push
jnp
cld
ljmp
pop
lea
ja
xor
into
cli
xchg
fstps
fmuls
aad
cmp
call
jge
jb
mulb
push
mov
clc
fistps
xor
xor
jno
out
mov
popf
adc
add
in
ljmp
icebp
repz
xchg
fidivs
rorb
mov
adc
out
ds
call
sbb
stc
fcomip
jmp
push
std
push
xchg
mov
das
pop
outsl
dec
xchg
or
fiaddl
pop
push
fldpi
xchg
outsl
in
out
add
dec
xlat
sub
pushf
out
push
clc
or
and
in
push
les
sub
clc
pop
aas
lret
dec
sbb
dec
in
movsl
out
ss
xor
popf
ret
and
mov
mov
mov
call
ljmp
sub
fmul
push
jp
jae
push
mov
mov
cli
pushf
jecxz
jecxz
rcr
mov
into
outsl
daa
jle
jo
in
cmp
jg
decl
cld
jno
stos
mov
mov
xchg
sahf
pop
lcall
mov
push
hlt
jmp
out
sbb
jbe
daa
dec
mov
stos
push
mov
idivb
insb
js
dec
mov
pushl
dec
cmp
lods
cmp
inc
arpl
js
clc
sub
hlt
push
call
ret
and
int
jno
xchg
cmpsl
sub
aad
xchg
cmp
sarb
decl
stc
xor
sbb
pop
mov
out
lods
insl
cld
sti
jmp
add
pushl
xchg
test
fld
mov
cmp
adc
das
cmpsb
sub
addb
pop
mov
daa
cmc
push
lcall
cmp
mov
sub
and
ljmp
das
pop
pop
outsb
arpl
aaa
loope
pop
std
les
pop
in
leave
xchg
add
call
push
add
push
push
xchg
xchg
scas
add
cmpb
pop
add
fisubs
pop
in
sub
incl
and
mov
jo
xlat
xchg
sti
data16
aas
sbb
push
jnp
lods
into
pop
xor
adc
stos
mov
jns
stos
iret
xchg
xchg
or
iret
stos
mov
ds
jbe
mov
add
sahf
dec
dec
dec
xchg
xchg
sbb
lcall
adc
rolb
and
shlb
mov
mov
nopl
pop
cmp
pmullw
lcall
xchg
cli
push
mov
insb
dec
sbb
bound
jmp
mov
imul
dec
mov
imul
or
sahf
xor
repnz
enter
cli
jmp
jbe
mov
test
xor
jno
push
rorb
incl
cmc
ja
das
andl
es
rorl
push
dec
cmp
ljmp
add
outsl
xchg
mov
adc
jmp
test
pop
inc
mov
test
in
adc
fisubl
sbbl
xchg
xor
xor
dec
std
rorb
mov
adc
or
jecxz
xor
sbb
mov
push
push
pop
dec
mov
xchg
or
out
lock
xchg
cmp
outsl
lock
lahf
test
inc
mov
inc
mov
add
out
xlat
cli
dec
cld
pushl
fucomip
xchg
dec
and
sbb
iret
shl
adc
sbb
lcall
xchg
stos
fistl
push
adc
jge
xchg
xorl
inc
fcompl
xchg
ret
ja
mov
inc
cmpsl
mov
imul
inc
or
dec
bound
incl
xchg
fcmovnbe
fistpll
push
xchg
das
mov
pusha
leave
flds
add
xchg
leave
lods
incb
add
test
aad
test
or
cmp
sub
pushl
pop
or
std
mov
sub
sbb
das
stos
fucomip
xchg
les
js
pop
inc
sbb
push
in
mov
repnz
lcall
pop
jg
rolb
aaa
stc
xor
rclb
fcompl
lock
decl
xchg
ds
push
in
cmp
mov
add
bnd
mov
pop
sahf
call
loope
movsb
lcall
lods
fnstcw
xchg
repnz
inc
jge
shl
lret
jns
out
stc
inc
xor
jge
hlt
out
clc
call
or
ret
sbb
pop
push
cwtl
ret
inc
xor
test
outsl
movsb
sahf
nop
andnps
adc
mov
jp
xor
jb
pop
push
lret
nop
dec
in
sbbl
push
push
loopne
pop
ljmp
in
add
sbb
daa
adc
or
cld
call
pop
fadds
xchg
mov
sub
sub
hlt
xor
stos
aad
stos
dec
cmp
fsubl
sub
fildl
lcall
lret
or
shr
inc
adc
into
ljmp
jmp
and
scas
fidivrs
in
xchg
ljmp
call
xchg
loopne
mov
cmp
mov
pushl
out
lret
dec
mov
stc
mov
xor
dec
aaa
pop
out
inc
jg
jmp
pop
jge
cld
inc
sbb
add
repz
sbb
mov
or
das
std
inc
or
loope
adc
push
and
xchg
movsb
mov
into
decl
incl
fwait
add
jge
xor
mov
mov
jmp
mov
cmp
jmp
xchg
xor
dec
ljmp
jp
cmp
adc
push
push
add
push
loope
insl
lds
push
out
lcall
ja
stc
shl
lods
loop
mov
testl
hlt
inc
mov
icebp
mov
mov
cmpsl
mov
in
dec
outsl
jle
xchg
and
in
pop
push
inc
lcall
sti
clc
adc
mov
fsts
outsl
int
push
gs
faddl
inc
popa
inc
loope
dec
incl
cmp
pop
rcll
push
out
mov
rolb
jnp
sub
cwtl
repz
xor
decl
das
std
sub
lret
imul
adc
test
les
mov
mov
cmp
cmp
jns
sub
dec
roll
mov
sbbb
clc
outsl
dec
pop
and
ja
mov
and
ljmp
pop
stos
jae
xor
popa
mov
mov
mov
jmp
sbb
inc
cmpsl
rcrl
push
push
je
nop
jg
xchg
aad
pop
sarl
dec
and
das
fisttpll
or
ret
pop
mov
movsb
mov
ficoml
lcall
adc
or
loop
sbb
movsl
sub
addb
test
in
mov
sub
leave
push
lock
or
rcll
jg
jg
jb
jp
inc
mov
rcrb
ljmp
mov
test
rcl
rcll
push
idivl
es
mov
rcrl
ljmp
mov
cli
iret
dec
mov
stos
aam
add
incl
mov
xchg
shll
es
adcl
jns
sub
hlt
mov
xchg
mov
add
jmp
jp
in
jp
or
shrb
push
cs
pop
cmc
lret
lock
mov
xchg
xor
das
inc
sar
sbb
mov
push
mov
lods
lcall
outsl
mov
test
outsb
inc
or
pusha
cmp
mov
or
aaa
int3
jl
jmp
mov
popa
aaa
cmp
pop
sbb
push
sbb
test
xchg
cmc
in
stc
xchg
int3
mov
pushl
arpl
out
fs
out
movsb
mov
fcmove
imul
pop
pop
inc
shr
movsb
clc
inc
jg
jg
mov
jg
jb
add
lcall
dec
pusha
aas
mov
cmp
mov
inc
xchg
cmp
aam
lds
mov
mov
jmp
inc
insl
sarb
adc
not
cmp
leavew
outsl
pop
dec
jmp
pop
pop
clc
jg
jnp
or
jb
in
and
mov
add
std
lcall
stc
insl
mov
negl
std
cmp
je
call
stc
xlat
cltd
add
out
pop
pop
int
mov
jmp
or
in
push
push
les
sub
pop
call
lcall
lret
out
mov
sub
or
push
jg
mov
xchg
sahf
pop
sub
fnstenv
and
xor
pushl
imul
pop
xor
pusha
into
mov
mov
nop
mov
insl
scas
stc
mov
xchg
stos
int3
jle
xchg
add
xchg
fsubrp
mov
out
les
dec
lods
addr16
sahf
aaa
cmpsl
in
jg
cld
pusha
cmp
mov
daa
push
xor
lock
call
push
jae
je
mov
out
pop
dec
jmp
fiaddl
mov
test
data16
popa
lds
xchg
dec
out
shlb
cs
test
adc
xor
pushl
cmpl
add
scas
repnz
aad
pushl
rcrl
cmp
jl
movl
xchg
sbb
lods
fmull
cmp
adcl
fbld
rorl
push
movsb
cmpsb
add
inc
mov
fsubs
pop
jg
add
cmp
shll
repnz
out
sti
mov
push
jle
mov
mov
mov
push
loopne
xor
aam
das
cmc
inc
sub
imul
in
fsubr
xor
aaa
in
sbbl
or
xlat
mov
sub
cli
lret
lret
fdivr
pop
loopne
mov
cmp
adc
icebp
cwtl
cmp
outsl
rcll
call
rorl
dec
lods
push
mov
add
mov
outsb
mov
mov
add
add
roll
dec
lods
outsb
add
jmp
and
add
shll
test
pop
pop
cmp
jg
or
jle
insb
lea
xchg
int3
sub
incl
test
int3
std
addb
std
lds
lcall
adcl
mov
jle
ljmp
mov
inc
mov
xchg
aas
or
mov
cmp
outsb
lods
mov
ljmp
push
idivl
scas
int3
sti
jne
or
sti
loop
cmpsb
notb
or
or
jmp
lret
xchg
lea
int
adc
push
sub
pushl
push
sub
insl
mov
pushf
jmp
inc
push
dec
mov
lcall
pop
mov
iret
inc
push
jo
or
aam
dec
jno
jge
test
sub
dec
sbb
jns
stc
or
inc
jmp
aad
repnz
jbe
popa
and
jl
call
aad
cmc
lret
in
mov
out
leave
push
les
call
insb
or
lret
add
pop
cmpsl
pushf
pop
jge
scas
in
arpl
mov
test
adc
pop
aad
jno
fucomip
es
inc
jbe
sahf
cmp
aam
stos
shrb
inc
cmp
sub
clc
pop
and
push
imul
pop
fistpll
mov
mov
lahf
or
jbe
pop
lods
xchg
push
jnp
popa
mov
jp
xor
ret
repnz
out
push
mov
outsl
cmc
lcall
push
iret
xchg
sbb
cmp
pop
cmp
nop
je
sbb
sub
fyl2x
mov
fldt
rcr
dec
fsubr
iret
rcll
cmp
pushl
aaa
add
or
add
jns
sub
xchg
push
add
fs
jmp
cwtl
mov
insl
das
repnz
sbb
dec
dec
or
fdivrs
mov
push
lea
inc
jnp
sub
mov
dec
adc
jg
mov
pop
adc
push
adc
insb
stos
mov
sbb
lds
push
push
into
out
cmp
mov
pop
fidivrl
xchg
jb
test
call
sub
cli
jmp
fdivl
pop
test
out
cmpsl
adc
mov
jne
sarb
incl
test
sbb
sbb
pop
ljmp
dec
mov
lcall
stc
adc
repz
shll
push
cld
imul
sbb
bound
sbb
movsl
ljmp
bound
fildl
mov
or
and
and
sar
cmp
push
fisubrl
jl
xchg
loop
insb
xor
mov
movsl
fmull
fwait
jno
in
iret
ret
call
xor
push
and
repz
jb
pop
inc
aam
jecxz
lahf
lcall
std
test
clc
lahf
sub
or
in
cwtl
dec
insl
in
or
add
je
subl
das
mov
decl
or
xor
mov
inc
pop
jle
cmp
repz
test
hlt
aaa
call
out
pop
and
jae
fstps
iret
mov
decl
inc
hlt
stos
jl,pn
xchg
xchg
jge
lahf
shll
incl
jb
ljmp
test
mov
pop
aas
call
loop
stos
cmp
pushl
addr16
pop
push
pop
test
jecxz
hlt
sbb
mov
cmp
icebp
lods
jecxz
hlt
pop
push
mov
popf
jg
aad
sub
xchg
incl
pop
fstl
repnz
fadds
adc
mov
outsl
test
pop
in
decl
aam
orb
ja
pop
out
inc
test
shlb
xor
mov
jne
sahf
icebp
jnp
insl
lret
iret
dec
jo
iret
pushl
mov
push
test
adc
int3
scas
pop
cld
loopne
js
incl
dec
fcmovu
nop
and
dec
pushf
jp
fwait
cld
fsubrl
inc
adcb
mov
ss
rolb
push
arpl
sbb
mov
jg
cwtl
xor
jno
dec
das
jbe
and
cmp
mov
jbe
das
std
lcall
nop
push
cltd
addr16
mov
scas
and
fwait
mov
aad
xor
lds
xlat
sbb
dec
lea
in
data16
gs
addr16
ss
repz
aaa
inc
into
adc
divb
cmp
mov
fdivrs
bound
jns
aaa
mov
mov
mov
pop
ja,pt
mov
mov
lods
fldcw
cli
push
mov
xor
cli
std
ds
sar
sbb
fidivl
sbb
fisttps
out
loope
mov
xchg
jb
xchg
idiv
mov
das
inc
mov
adc
adc
iret
stc
mov
adc
or
pushl
lock
inc
inc
lock
cmova
outsl
push
pop
sbb
test
out
pop
cli
cld
int3
fsts
cmc
jmp
pop
sub
sub
or
call
incb
scas
data16
push
shr
mov
and
test
jg
or
xchg
dec
jecxz
cmp
adc
notb
lods
test
mov
aaa
sarb
test
dec
mov
mov
sbb
pop
jg
aaa
mov
rol
out
adc
decl
sub
mov
movsb
mov
cmc
outsl
xchg
ljmp
mov
or
inc
in
in
xchg
adc
sbb
or
lahf
movsb
incl
aaa
clc
and
rcl
imul
sub
lret
std
ret
fwait
sbb
xchg
adc
sub
inc
push
jmp
pop
jnp
clc
lcall
outsl
xchg
repz
xlat
fcmovnb
adc
mov
cmp
xchg
insb
repnz
adc
fldcw
aaa
jmp
fildll
movsb
bound
inc
pop
pop
jmp
add
movsl
xchg
dec
push
pop
push
lcall
ret
fisubrl
fwait
mov
push
ljmp
dec
adc
mov
call
cmpsl
add
aad
push
or
lret
imul
rol
test
adc
lods
and
and
push
sar
pop
outsb
in
inc
lret
adc
bound
outsl
rcrl
fisttps
jnp
mov
mov
outsl
xchg
lret
xchg
movsl
push
out
jl
lcall
cmp
jbe
mov
jb
xchg
mov
mov
mov
bound
stos
ds
mov
xchg
and
pop
cli
in
cmp
mov
ljmp
sub
mov
mov
mov
idivb
cmp
enter
or
jns
jnp
cmpl
mov
xchg
fidivl
cld
fisubs
popf
cmp
test
add
lea
dec
cld
push
inc
and
insb
sub
jecxz
loop
lret
mov
gs
pushl
sbb
push
lahf
mov
sbb
loop
sub
mov
push
vpunpcklwd
ret
lahf
and
pop
lcall
cld
ljmp
push
cmp
out
xchg
enter
pop
shll
sbbl
inc
xchg
pushf
ss
xor
jmp
popf
fs
mov
lahf
in
aaa
fcom
inc
inc
dec
das
mov
push
inc
jmp
testl
out
sub
mov
add
adc
decl
inc
jnp
and
cmpb
enter
sti
into
sti
xchg
sub
add
shlb
cmc
decl
aam
jecxz
fistps
jb
scas
lock
or
sarl
outsb
push
stos
addl
mov
test
addr16
sub
clc
movsl
stc
insb
fmuls
cmc
xor
dec
xorb
xor
sbb
xchg
cs
push
pop
mov
mov
stc
jbe
mov
dec
push
js
scas
or
dec
setae
scas
in
sbb
shll
ficomps
cli
dec
nop
loop
xor
stos
xor
lret
mov
ljmp
adc
sub
test
mov
xor
mov
jnp
adc
mov
aaa
jne
imul
push
cs
call
jae
shll
adc
xor
icebp
mov
cli
pop
or
and
mov
sti
test
and
out
leave
stos
xchg
jecxz
jg
pop
mov
shll
pop
pop
xor
jl
movsb
out
sub
imul
fdivs
mov
push
loop
xor
stos
cmp
nop
jns
mov
xchg
rclb
jmp
js
xchg
mov
and
rorb
jl
fldl
mov
dec
inc
stos
push
cmc
js
imul
mulb
aam
and
leave
stos
xlat
jnp
mov
xchg
sbbb
lods
mov
in
aaa
cli
sbb
xor
data16
fsubr
lock
mov
sbb
cmp
mov
pop
xchg
adc
push
add
jge
lock
dec
inc
cmc
jmp
or
mov
sub
pop
notl
push
repz
mov
iretw
pop
mov
xchg
and
pop
inc
jmp
orb
xchg
mov
ds
xor
dec
popf
or
inc
ljmp
adc
sub
pop
sti
subl
je
xchg
dec
fidivl
cli
in
cmp
jbe
sub
dec
sbb
add
xor
pop
fistpll
inc
fwait
das
out
adc
ja
mov
add
out
jp
mov
push
ds
mov
add
mov
mov
call
mov
jge
stos
jge
mov
xor
std
leave
andb
mov
dec
jnp
inc
jg
mov
fstps
and
hlt
mov
xchg
add
pop
add
or
lcall
mov
out
mov
jns
and
adc
fsubs
xchg
push
jb
jg
sbb
stos
xchg
xor
fcmovu
and
aaa
in
decl
or
mov
cmpsl
mov
sbb
imul
ljmp
cld
mov
lret
je
dec
out
in
inc
xchg
sbb
in
xor
or
incl
ds
pop
pop
stc
test
xor
and
test
xchg
into
push
sar
lods
testb
sub
push
adc
mov
sub
mov
je
push
outsb
scas
gs
push
xchg
xchg
insb
scas
dec
jg
data16
jg
ss
inc
mov
shll
test
test
mov
inc
xor
lods
jmp
dec
movsb
jecxz
mov
std
div
or
add
mov
fs
or
dec
mov
mov
insb
add
decb
pushl
mov
icebp
add
jecxz
rcll
clc
jecxz
jo
jmp
and
repz
adcb
cmpsl
xchg
je
or
imul
call
popa
outsl
jnp
mov
fstps
mov
insb
imul
inc
sub
sti
mov
sub
les
jns
add
fs
push
sbb
movsb
stc
adc
int3
pusha
insl
cmpsl
jl
jg
call
mov
ficoml
mov
sbb
xor
dec
push
fucomip
cs
fiaddl
adc
add
data16
lods
popf
adcl
cli
decl
xchg
push
push
xchg
mov
div
mov
xlat
jecxz,pt
decl
mov
mov
jmp
pop
cmp
sar
sub
jns
lds
mov
cmp
in
cmp
mov
mov
or
out
mov
insb
xchg
loope
pusha
mov
mov
and
jp
sbb
mov
jns
cltd
jle
loopne
dec
insl
sbb
notb
int
in
mov
jg
adc
lods
scas
or
push
push
mov
out
push
sub
xchg
and
sub
fsubrp
loop
cli
adc
jns
jb
mov
arpl
jae
mov
cmpsb
into
jns
sbb
mov
xchg
jl
and
or
icebp
call
into
cmp
mov
add
lahf
scas
sbb
or
call
lea
mov
pop
loop
jmp
jle
push
xchg
mov
jecxz
jecxz
pop
outsb
or
icebp
das
hlt
decl
cmp
cmp
out
xor
and
push
ljmp
sub
pop
xor
mov
sub
cmp
lods
lret
imull
mov
or
lcall
nop
or
adc
cmp
das
push
stc
cmp
cmpsb
in
push
test
fisttpll
push
call
iret
cmp
mov
fucom
lock
inc
cmp
mov
mov
cltd
fistps
scas
mov
inc
fistps
ret
mov
adc
jg
lret
mov
frstor
inc
mov
dec
cs
testl
jb
in
std
setns
das
sahf
sub
xor
std
aam
lds
ljmp
call
rolb
dec
sahf
lock
mov
mov
fucomi
into
pop
int
or
mov
fisttpl
sbb
addb
push
hlt
mov
fiadds
call
gs
aas
lods
std
mov
xor
roll
daa
and
setb
cmpsb
jbe
adc
jmp
xchg
cltd
cmp
dec
add
cmp
in
loope
sub
mov
fistpl
nop
lret
jge
in
test
pop
sbb
push
jge
cmp
cmpsb
cmpsb
inc
mov
dec
jo
xlat
xchg
sub
lods
ja
fdivrs
in
inc
push
inc
pop
xor
push
sti
jg
cmpsl
sbb
lahf
cld
imul
mov
sub
cmpsl
jp
iret
sub
pushl
and
dec
sub
or
std
dec
xchg
daa
ds
ljmp
cmp
add
jg
xor
inc
shll
push
pop
mov
xchg
loop
mov
xchg
roll
les
lret
sbb
add
jae
lcall
mov
inc
pop
cmpb
pop
mov
xor
out
xor
incl
jae
jecxz
sbb
icebp
enter
push
je
mov
loope
pushl
clc
push
aas
adc
mov
cmp
mov
push
data16
outsl
stc
inc
or
mov
xor
call
imul
orb
andb
lret
out
mov
test
and
mov
lods
sbb
pop
and
mov
mov
lcall
mov
xor
sbb
jne
sub
sti
mov
xchg
pop
jnp
pop
das
lock
fstl
push
sub
mov
shll
cmpsb
dec
pop
pop
subl
mov
xor
mov
js
mov
in
pop
pop
aam
rcrb
xchg
ljmp
std
faddl
push
repnz
idivb
loope
jne
dec
jmp
add
out
sub
xorl
cmpsb
test
clc
xor
or
inc
inc
call
xorb
into
sub
adc
mov
les
lcall
inc
ja
pop
movsb
leave
and
push
sbb
cmp
pop
pop
add
pop
pop
in
out
jno
jl
lcall
mov
rorl
jmp
and
jle
lahf
loop
adc
aas
dec
pop
dec
rcrb
lcall
mov
adc
sahf
jl
push
pushf
ret
arpl
shll
insb
inc
ret
lcall
stos
cmpsl
repz
mov
nop
dec
mov
jmp
cmp
cmpsb
mov
adc
push
movsl
repz
sbb
mov
lret
mov
ret
std
popa
pop
or
xchg
xor
sbb
mov
iret
mov
scas
and
mov
lret
mov
jmp
inc
dec
nop
push
ss
into
mov
frstor
cmpsb
xchg
fwait
outsb
add
leave
pop
enter
cwtl
loop
ljmp
loop
or
mov
mov
xor
ret
inc
mov
or
sbb
mov
lret
and
xchg
mov
nop
add
or
inc
fs
mov
sbb
clc
dec
lret
pop
push
adc
gs
aaa
decl
xchg
jmp
mov
scas
cli
loope
mov
mov
or
lods
ljmp
stos
movsl
aam
fldcw
sti
inc
stos
aam
push
adc
clc
div
jno
pushl
xorb
stc
ja
popa
std
dec
shr
mov
inc
fwait
loopne
inc
stos
push
or
lcall
and
cmp
and
stc
sub
lods
mov
cwtl
ljmp
bound
ja
arpl
or
sar
jb
in
ffreep
icebp
mov
hlt
mov
mov
xchg
mov
decb
dec
sub
lock
jmp
mov
roll
ljmp
aaa
addr16
sub
cwtl
notb
cmc
icebp
xor
sbb
ja
pop
dec
out
cs
aam
scas
mov
sbb
negb
std
jmp
push
ret
mov
lds
sub
jnp
fs
outsb
fwait
stos
and
call
inc
inc
pop
and
testl
push
pop
sub
fbld
push
ret
jl
jbe
out
sbb
and
push
leave
pop
filds
push
mov
out
mov
sub
aaa
in
inc
pusha
outsb
das
push
ror
mov
dec
in
jne
push
fisttpl
lcall
xor
mov
inc
clc
cmp
call
in
test
out
or
lcall
jp
or
roll
jnp
hlt
inc
mov
mov
jg
es
lods
adc
dec
cmp
inc
push
aaa
loope
fidivs
cmpl
cmp
into
jecxz
cmp
xchg
push
adc
sti
hlt
push
div
xor
jmp
add
xor
adc
test
adc
xchg
or
ss
pop
mov
inc
rcll
mov
lds
fsubrl
incl
sti
jg
test
or
cli
adc
jmp
into
push
dec
adc
test
adc
adc
mov
dec
add
push
call
enter
inc
add
pop
pop
add
jmp
in
sub
mov
mov
mov
adc
repnz
and
arpl
call
lret
adc
mov
out
cmpsl
cmp
adc
jecxz
loop
add
jg
jmp
arpl
dec
js
icebp
repnz
popf
out
mov
mov
fsubl
hlt
add
int
pop
test
cltd
push
pusha
and
cltd
mov
lds
decl
jp
or
and
pop
bound
sbb
lcall
xchg
lods
movsb
mov
push
rorl
xlat
pop
das
icebp
call
in
movl
mov
ret
jp
sub
mov
mov
or
xchg
out
jg
shl
cwtl
subl
fmull
sbb
fs
cli
les
pusha
xor
cmpl
inc
inc
and
sbb
insb
in
dec
mov
mov
jge
scas
pop
inc
in
fsubrs
dec
jne
cld
dec
aam
rcrl
out
stos
cli
je
cmpsl
or
lcall
jge
lods
jecxz
push
daa
sub
es
push
push
fists
cmpsl
xlat
dec
push
scas
and
cmc
into
jbe
pusha
xchg
dec
add
test
add
out
incl
add
fiadds
mov
hlt
pcmpeqd
clc
call
mov
mov
and
inc
mov
divb
pop
imul
movsl
sarl
pusha
jecxz
hlt
leave
sub
dec
cmp
jno
mov
call
lea
jmp
je
outsl
into
sub
dec
xlat
xchg
add
test
cmpsb
add
adc
shlb
outsl
mov
pop
ficoms
mov
push
sbb
addb
cmp
adcb
xor
cmc
push
ficoml
inc
mov
rcrb
fists
and
int3
jp
testl
ret
jge
xchg
pop
ljmp
mov
loop
iret
data16
fdivr
mov
decl
jnp
ds
push
pusha
cmp
iret
cmpb
mov
sarb
xchg
std
cmc
inc
cs
cmp
lahf
add
dec
mov
mov
jae
mov
daa
out
lds
xchg
sbbl
outsb
sar
or
rorb
roll
outsl
cld
cmp
and
push
fsubr
jp
les
subb
pop
or
pop
add
or
sarl
test
add
dec
pop
inc
xor
xor
mov
lahf
dec
ljmp
lret
in
cmp
cmpl
mov
aaa
fildl
mov
sahf
test
hlt
jge
rolb
incl
sub
outsl
xor
adc
popa
jae
push
xor
rcl
call
mov
cmp
sbb
adc
inc
and
push
sub
sbb
mov
jmp
test
rcr
pop
cmc
jmp
mov
daa
xchg
repz
inc
mov
add
pushl
test
jge
adc
mov
js
ja
mov
fdivr
incl
pop
mov
or
xchg
lret
push
jl
cmpsb
popf
ss
lcall
cmp
sarb
repz
ds
adc
jo
jmp
xlat
add
out
push
xchg
je
pop
cmp
mov
jo
fsubrl
and
pop
jp
aam
dec
pop
std
fldz
cmp
mov
div
fbstp
daa
icebp
ljmp
std
sub
mov
dec
xor
mov
cmp
rolb
into
and
mov
push
mov
fdivl
and
jae
pushl
xchg
lds
sub
vmread
loop
jecxz
xchg
add
aad
int
out
pop
push
divl
enter
cltd
cmp
jbe
or
sub
imul
inc
data16
fs
ret
cs
cmc
es
jecxz
hlt
or
pushf
sbb
je
call
std
dec
dec
and
mov
mov
in
decl
or
sti
into
push
sbb
push
sbb
ret
adc
and
fsubrs
adc
sar
das
icebp
xorb
inc
fsts
dec
mov
out
mov
mov
sbb
push
loopne
mov
xchg
enter
xchg
mov
scas
push
aam
vcvtps2dq
sbb
mov
cli
xchg
loope
stos
inc
pop
xchg
xor
pop
clc
mov
iret
ljmp
cmp
les
pop
je
popa
push
xor
mov
decl
pop
hlt
ja
adc
cmpsb
sub
mov
jae
mov
adc
call
mov
testl
pushf
pop
inc
pushf
ss
out
pop
pop
add
cli
sbb
sbb
jb
or
incl
mov
inc
mov
pop
mov
adc
xchg
pop
mov
lret
jmp
ljmp
out
sub
and
mov
inc
push
call
jl
stos
negl
sbb
std
incl
mov
add
mov
ljmp
hlt
ja
jno
shlb
pop
fdivp
pop
popa
dec
jno
inc
push
ret
lock
ljmp
hlt
sub
mov
cltd
inc
mov
jmp
jle
test
cs
in
pop
pop
in
pop
loopne
incl
sub
mov
imul
test
sbb
movb
out
pop
iret
jg
jmp
je
int3
mov
aaa
inc
andl
outsl
out
jg
add
dec
aas
push
sbb
imul
fwait
sbb
outsl
rcl
dec
fwait
call
cmpsb
lcall
mov
movsb
mov
pop
cmc
inc
stos
lcall
lcall
cmp
js
loop
xor
pushf
mov
push
push
fsts
call
adc
sub
into
dec
sub
mov
inc
imul
pop
loope
mov
mov
inc
mov
test
mov
xchg
cmpsb
inc
in
fisttpl
xchg
jmp
stc
mov
insl
or
push
ss
inc
xchg
ljmp
mov
mov
cld
pop
mov
aad
cmp
pop
lcall
test
pop
fwait
lock
lock
jmp
lods
jg
or
sbb
mov
loopne
inc
jb
dec
jae
lods
xchg
xchg
sar
sbb
cmp
cmpsl
cwtl
test
jg
jl
andb
mov
jo
mov
or
inc
jg
dec
repnz
cs
cmpb
ds
sbb
jg
fsts
pop
xchg
xchg
or
lods
sbb
orl
rcr
fs
sarb
jns
mov
fmuls
sbb
test
test
sub
pop
dec
in
ss
cmp
daa
aaa
pop
call
sbb
push
int3
mov
sub
push
loopne
mov
pop
movsb
mov
inc
inc
bswap
mov
repnz
shlb
pop
pusha
add
xchg
int3
into
sahf
pop
or
out
in
decl
push
mov
inc
negl
adc
mov
xor
sub
adc
out
cltd
mov
fildll
in
data16
sub
fbstp
inc
std
call
andb
adc
rol
loope
push
and
jnp
push
clc
decl
cltd
mov
mov
mov
cltd
frstor
sub
sbb
call
xor
push
les
shll
mov
and
idiv
lcall
pop
loop
jns
sub
sti
lock
dec
jne
jmp
cmp
cmpsl
ljmp
fldl
sub
mov
adc
mov
in
mov
fldl
pop
ss
pop
jae
jns
inc
cmp
mov
xor
jae
and
add
xor
lods
in
jg
pushl
outsb
xor
jl
and
push
repnz
loop
fimull
mov
ds
jg
pop
mov
inc
loop
push
in
xchg
xor
outsb
sbb
cld
decl
scas
movsl
popa
movb
jl
cli
cmp
pop
jp,pn
sahf
divb
add
mov
jbe
pop
ret
fisubs
pop
cmp
lret
lock
out
mov
fildll
mov
sbb
and
or
lcall
insl
lret
mov
sbb
lods
daa
push
movsb
gs
hlt
movsb
jbe
stos
sub
movsb
sub
dec
sub
dec
movsl
push
imul
daa
std
push
lret
fmull
call
mov
cld
and
insl
sbb
inc
dec
data16
mov
sbb
lds
fildll
sarb
or
and
outsb
dec
push
ljmp
icebp
jmp
mov
dec
call
mov
add
and
pushl
cmpsl
inc
xchg
cmp
pop
lret
aad
pop
inc
jmp
and
call
decb
sbb
push
mov
jne
add
repnz
dec
ss
jg
xchg
sub
out
and
cmp
jo
dec
ret
pop
dec
mov
dec
out
pusha
rorl
addr16
jmp
outsb
leave
ja
sbb
dec
mov
mov
adc
xor
aam
dec
gs
xchg
cli
jl
gs
pusha
pop
mov
inc
adc
pop
mov
jnp
aad
decl
xor
cmp
nop
push
das
out
idiv
hlt
xor
sub
dec
pop
outsl
pusha
pop
aaa
mov
and
push
fs
stc
int3
mov
test
call
mov
push
xchg
xchg
in
lock
cmc
movsl
push
or
out
cmp
rcrb
hlt
and
pop
cmp
test
xchg
test
test
rorb
rcll
outsl
icebp
or
out
pop
jb
jb
push
push
rcr
insb
jg
cld
adc
cmp
push
test
xor
and
das
mov
sbb
cwtl
adc
push
cmp
sbb
sbb
sbb
jae
jno
add
adc
add
movsl
ljmp
pop
cmc
mov
inc
sbb
fisttps
dec
addl
test
add
mov
sub
pop
or
add
xchg
jg
cmp
add
gs
je
inc
imul
arpl
push
mov
pushl
gs
popa
insb
jne
or
outsl
arpl
inc
insb
outsl
mov
push
popa
imul
je
jo
dec
bound
fcomp
mulb
je
pop
dec
inc
jo
gs
imul
outsl
xor
outsl
je
inc
js
dec
outsb
or
test
jle
imul
arpl
outsb
sub
pop
xchg
lods
fstp
inc
sub
dec
ja
popf
or
jae
mov
fs
imul
imul
out
lds
dec
push
jns
sub
lods
frstor
addr16
adc
loopne
outsb
jae
imul
mov
inc
inc
outsl
push
lods
adc
push
push
mov
pop
inc
jo
inc
sbb
xor
sbb
xlat
xor
or
or
dec
xchg
pusha
xor
rcrl
xor
and
subb
adc
ret
adc
mov
inc
sbb
push
and
sub
inc
mov
cs
int3
data16
jno
mov
jmp
sub
inc
jae
rcrb
xor
xchg
add
shlb
pop
and
lret
inc
and
and
mov
jle
test
lods
adc
nop
add
ret
pop
add
ret
pop
and
cmp
dec
sub
adc
mov
lcall
add
and
mov
mov
rorb
insb
add
addb
test
mov
push
push
daa
or
pusha
add
mov
stos
add
test
mov
and
add
loopne
inc
sbb
lds
aaa
push
pusha
xorl
add
cmp
push
mov
and
movsb
add
addl
js
xchg
add
inc
add
ret
and
add
mov
xchg
sub
inc
and
push
nop
add
add
xor
rorl
lock
test
test
test
and
or
push
add
stc
insl
sbb
xor
push
cmp
push
add
push
je
jne
pop
sub
mov
addr16
in
inc
adcl
add
cmp
or
mov
popa
fistps
push
and
mov
inc
mov
sbb
andl
adc
adc
scas
xor
add
sbb
test
inc
xorl
adc
or
add
add
ret
and
and
mov
mov
add
sub
arpl
inc
mov
and
sub
add
addl
xchg
sub
dec
mov
test
add
js
test
xor
test
xor
add
xor
test
add
mov
rolb
sub
or
adc
or
pop
add
add
add
adc
sub
xor
xor
and
mov
add
push
lods
lret
pop
lods
or
ret
add
inc
sbb
sub
add
xor
xchg
jb
add
test
insb
adc
clc
roll
push
mov
push
and
test
mov
inc
add
add
adc
xchg
or
add
nop
and
mov
and
test
cld
test
mov
xchg
inc
add
dec
nop
add
test
movsb
inc
dec
mul
test
test
adc
sub
fwait
push
test
xchg
movsb
add
adc
inc
imul
or
add
adc
cmpsb
adcb
add
adc
adc
pop
stos
adc
lret
push
les
bound
outsl
adc
sub
pop
rolb
and
movsb
adc
adc
dec
out
mov
and
adc
pop
pop
add
mov
push
pop
or
xor
sub
stos
adc
inc
fwait
push
dec
lods
rorb
in
jmp
and
pop
icebp
push
dec
nop
push
movsb
mov
testb
pop
aad
addb
inc
push
pusha
inc
and
dec
inc
sub
add
add
test
cs
inc
and
fadd
sub
push
dec
cmc
stc
and
or
mov
push
or
inc
sbb
jge
add
inc
xorl
or
stos
or
xchg
sub
nop
push
mov
jp
and
dec
adc
adc
push
pop
mov
push
pop
rorb
scas
leave
rolb
lods
adc
mov
inc
or
or
sub
adc
mov
push
sbb
adc
and
add
adc
out
add
add
mov
push
pop
pusha
add
push
mov
add
push
cmc
inc
sub
sahf
hlt
dec
xchg
inc
or
push
xor
mov
cmp
pop
sbb
or
bound
inc
bound
push
or
or
ljmp
xor
sbb
or
and
xor
or
and
dec
mov
add
push
inc
dec
dec
xchg
xchg
sub
sub
push
mov
lods
push
gs
pop
pusha
push
push
rcl
inc
add
repz
sub
add
mov
shrb
push
xchg
and
push
xor
test
test
xor
and
and
stos
pop
dec
and
mov
das
xchg
and
or
push
jb
outsb
jae
mov
and
and
popa
adc
rcpps
fs
adc
daa
je
imul
jns
sub
adc
and
fldcw
popf
sbb
or
sti
pop
test
and
jnp
pop
adc
or
or
popa
adc
and
out
addr16
aam
fnsave
je
jo
push
jb
adc
mov
out
js
inc
outsl
outsb
imul
das
dec
inc
jne
outsb
je
jae
cmp
xor
mov
punpcklwd
dec
adc
add
add
mov
add
fcomps
add
and
push
mov
or
inc
add
and
outsb
push
insb
cmp
add
pop
or
pusha
cs
pusha
aas
push
xor
pop
mov
add
les
orb
xor
adc
out
ret
add
pop
jae
fstp
rolb
mov
add
and
pushf
xor
rolb
mov
insb
divl
ljmp
add
or
shlb
mov
xor
add
daa
ss
or
pop
jb
jnp
and
jae
xorb
sbb
xchg
and
roll
jmp
jnp,pn
add
pop
loop
xor
xchg
jae
es
daa
clc
lret
sbb
movsb
movsb
aas
add
add
add
add
incl
add
add
add
add
add
jnp
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
push
add
add
add
addb
add
add
add
add
add
add
add
add
add
dec
add
addb
add
jo
add
cwtl
add
addb
add
rolb
addb
add
add
add
add
add
add
add
add
add
pusha
add
add
sarb
add
add
add
add
add
add
add
add
add
add
mov
add
or
aas
add
add
add
add
add
add
add
add
add
add
mov
add
and
aas
add
add
add
add
add
add
add
add
add
add
fadds
add
inc
sarl
add
add
add
add
add
call
dec
in
or
pop
sub
or
shlb
push
aas
add
in
or
pop
sub
or
shlb
push
aas
add
in
or
pop
sub
or
shlb
push
aas
add
xor
pop
push
lods
sbb
out
mov
adc
cmpsb
arpl
mov
push
dec
icebp
fadds
loope
push
push
es
rorl
xlat
cmp
xlat
sbb
sub
xor
push
fisubrl
push
fs
push
cmpsl
out
mov
mov
adc
cmp
cld
imull
push
push
fimuls
mov
or
scas
xor
inc
out
xchg
mov
mov
mov
xchg
repnz
jo
popf
jo
in
cmp
and
xor
jecxz
adc
push
inc
xchg
out
adc
inc
adc
inc
mov
cltd
lods
fwait
jp
insb
cwtl
inc
jl
jb
std
xor
adc
sub
jno
clc
adc
xchg
sub
jmp
cwtl
push
into
cltd
notb
mov
testb
shrb
fldcw
out
lcall
pop
test
xchg
ljmp
lcall
mov
hlt
xchg
dec
mov
out
fstl
in
pop
pop
pop
fnsave
xlat
inc
dec
int3
jge
fcmovne
movsb
jle
bound
mov
dec
adc
addr16
incl
mov
sti
rolb
loopne
push
cmp
ds
xor
add
leave
mov
adc
mov
movsb
add
or
mov
mov
punpckhbw
dec
stos
sub
mov
insb
jl
jecxz
les
sbb
rcll
xlat
iret
lods
cmpsl
dec
xchg
fucompp
rcrb
sub
add
push
dec
mov
sub
mov
shrl
pop
cmp
jg
shlb
adc
xchg
subb
and
aad
dec
das
lea
stos
inc
sub
icebp
dec
cmp
or
and
das
and
aas
sub
sti
test
and
pop
iret
popf
xor
das
jbe
push
bound
mov
jae
outsb
dec
rorl
xor
adc
push
and
insb
faddl
cmp
and
xchg
inc
or
pop
ds
sub
add
rcrb
jle
inc
add
imull
pushf
jns
lahf
ret
fsubl
imul
aad
xchg
shl
pop
push
lds
fidivl
in
pusha
ja
int3
push
loop,pn
mov
mov
xchg
mov
int
imulb
and
cmc
pop
aaa
jo
ficoml
fildl
or
sbb
insb
mov
and
inc
xchg
pop
mov
rorb
jns
cmpsl
mov
adc
mov
ret
lea
pop
jg
ret
sbb
cmc
ret
lea
bnd
sbb
cmp
mov
ret
daa
xor
jge
mov
push
or
call
sub
mov
inc
fsubrs
jmp
andb
pop
mov
mov
cmp
adc
mov
inc
in
out
aas
adcb
jne
shlb
jno
loop
jl
cltd
arpl
mov
mov
or
jl
stos
sahf
repnz
cmpsb
ret
imul
mov
push
push
inc
out
mov
int
adc
or
or
in
push
fsubr
cmpsb
cmc
jecxz
push
or
adc
test
push
popa
sbb
jbe
add
mov
push
mov
sbb
enter
mov
repz
out
mov
inc
adc
jnp
dec
push
adc
outsl
fs
push
aas
lea
pop
aam
jb
and
stos
sub
enter
popa
cmp
stos
bound
mov
loopne
inc
inc
shrb
inc
pop
lret
movsl
or
or
sbb
inc
dec
push
fsub
ja
jmp
xor
out
ret
pop
and
jl
inc
push
out
jae
mov
outsb
shrl
xor
jno
mov
cs
add
or
sub
adc
outsb
sub
cwtd
jecxz
dec
jb
pop
icebp
push
int3
sbb
pop
loopne
insb
inc
leave
test
scas
loopne
xchg
aad
repz
push
lds
in
and
lret
mov
xchg
repz
or
hlt
mov
mull
push
add
filds
leave
hlt
pop
push
xchg
xchg
aas
mov
lds
dec
cmp
pop
mov
cltd
or
gs
mov
add
add
aas
add
add
add
aas
add
aas
add
aas
add
aas
add
aas
add
aas
add
xlat
aas
add
xlat
aas
add
xlat
aas
add
xlat
aas
add
xlat
aas
add
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
popa
jo
cs
insb
add
gs
xor
ja
outsb
push
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
outsb
jae
jne
jb
pop
push
add
push
gs
imul
imul
jb
arpl
jb
