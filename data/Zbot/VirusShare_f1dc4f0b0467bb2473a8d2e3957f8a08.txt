jmp
dec
fninit
mov
push
jbe
adc
ficoml
adc
lret
aaa
push
fmuls
adc
add
shlb
cmp
or
incl
xchg
adc
jae
pop
push
sub
add
andl
fwait
jbe
lret
mov
decl
jno
lds
jmp
or
mov
add
mov
inc
mov
jmp
mov
in
xchg
jmp
stos
sub
shll
xchg
and
mov
imul
add
xchg
add
pushf
sahf
inc
cmp
mov
adc
stos
jecxz
jnp
out
and
outsb
jmp
mov
pop
add
xchg
test
xorb
stos
iret
and
push
mov
inc
xorb
fcos
lcall
and
inc
shll
inc
jp
ret
rcl
vmulps
push
mov
lcall
push
cmp
stc
es
int3
fistps
jecxz
and
mov
ffree
inc
into
loop
push
pop
xchg
mov
xchg
test
jns
cmpps
pushl
mov
pop
adc
loope
popa
sbb
mov
mov
mov
push
popa
jb
incl
gs
add
lret
cld
dec
fnstenv
jo
mov
push
test
mov
sbb
inc
lods
inc
dec
xchg
fadds
xor
jle
mov
int3
pop
sub
jmp
test
pop
and
je
or
push
and
inc
fisttps
rolb
xor
inc
adc
jb
cli
repz
sbb
in
xchg
sahf
push
inc
pusha
jge,pn
enter
incl
sub
dec
inc
out
pop
pop
in
adc
stos
sub
or
std
jmp
mov
xchg
pop
cmp
push
push
inc
jbe
jecxz
inc
fdivr
fisttpll
ja
out
adc
ljmp
gs
mov
fldl
inc
in
arpl
bound
lcall
jg
jmp
jno
add
mov
gs
ljmp
pop
rcr
leave
mov
inc
xor
jl
fsubl
test
dec
std
sbb
lds
push
mov
mov
mov
into
fcompl
ljmp
clc
or
lahf
addl
cmpsl
enter
jp
ljmp
test
ljmp
fs
cli
xor
pop
dec
mov
cmp
lds
or
pop
faddl
loope
test
jmp
push
movntq
out
jbe
arpl
inc
jmp
imul
faddl
sub
incl
pop
cmp
jnp
and
je
mov
mov
mov
mov
and
or
out
jno
fs
icebp
cmp
gs
or
hlt
jo
fimull
in
mov
shll
movsb
into
les
sub
roll
jle
adc
cwtl
xchg
push
inc
imul
incl
mov
aad
cmp
inc
xchg
cwtl
push
aam
mov
inc
jge
xchg
add
decl
inc
or
fwait
repnz
lahf
je
pop
mov
push
jge
jbe
icebp
xchg
push
loop
decl
sahf
addr16
aad
lret
mov
sbb
mov
mov
cmp
mov
mov
mov
adc
xchg
mov
roll
xor
push
xlat
cmp
mov
decl
arpl
mov
in
mov
lahf
xchg
dec
flds
pop
inc
jae
cmpsb
cmc
decl
inc
mov
outsl
cmp
xchg
lret
ja
into
sub
push
pop
push
push
mov
ds
lcall
mov
ss
out
or
loop
ljmp
sub
jmp
push
xlat
add
adc
ret
xor
es
lock
dec
in
lcall
lcall
push
xor
movsb
mov
mov
arpl
dec
popa
mov
cli
sub
ljmp
mov
push
movsl
daa
xchg
lds
push
nop
jmp
inc
and
fwait
xchg
jmp
xchg
sbb
mov
jae
lea
notb
sti
shl
adc
inc
in
push
ds
xchg
or
cmp
jb
out
mov
in
orb
incl
jp,pn
std
fsts
int3
in
push
cmp
scas
les
call
aam
cmpsb
fptan
mov
xchg
mov
add
repz
fbstp
or
sbb
decl
mov
mov
or
mov
inc
dec
add
pop
decl
incl
mov
dec
mov
pop
or
add
inc
loopne
test
imul
fiaddl
push
add
fldenv
mov
pop
cmc
sbb
ds
fcmovnu
test
jmp
sub
cmpsl
out
adc
dec
adc
scas
add
scas
sbb
xor
das
sar
into
inc
push
adc
xor
ds
fnstcw
or
inc
cwtl
scas
push
jl
das
shl
mov
push
out
jg
mov
xchg
in
mov
mov
imul
clc
xchg
leave
pop
dec
ud0
xor
aad
sub
push
insl
pop
movsl
jo
mov
pushf
js
push
sbb
lcall
call
push
and
insb
jbe
cmp
fwait
stc
out
xbegin
inc
mov
call
into
mov
inc
in
or
inc
testl
sbb
push
mov
xchg
idiv
pushl
das
test
inc
rorl
gs
fadd
jnp
xor
lret
jg
pop
add
inc
loop
ljmp
clc
pop
je
stos
fsin
sub
ret
lods
call
xchg
adc
call
lcall
mov
push
inc
adc
jge
push
push
mov
inc
and
aam
call
ljmp
hlt
pusha
xor
sbb
test
inc
push
pop
inc
add
mov
lds
inc
shrl
repz
cmp
jb
mov
mov
and
out
lret
cld
inc
repz
cmp
int
pop
js
mov
jp
pop
xor
pop
mov
dec
sbb
sub
in
lods
loope
pop
adc
adc
out
fcoml
in
mov
sbb
or
sbb
jmp
sub
add
mov
xchg
inc
enter
jle
inc
xor
in
adc
push
sbb
clc
xor
push
fistps
test
push
sbb
rclb
in
mov
decl
jae
sub
pushf
sbb
addr16
or
xor
or
sub
dec
in
cltd
cmpsl
pop
and
call
inc
pushf
push
mov
rol
sbb
lock
jb
into
and
mov
incl
add
add
inc
ss
divb
sub
inc
cmpsl
mov
lock
insb
add
sbb
mov
mov
cmp
ss
jg
mov
enter
lret
sbb
les
jns
inc
scas
cmp
aad
icebp
pushl
inc
mov
mov
sbb
dec
add
arpl
clc
xchg
scas
dec
enter
ljmp
icebp
ds
adc
xor
add
popf
xchg
adc
bound
jp
ljmp
lcall
out
sbb
jecxz
mov
pop
inc
sbb
scas
sbb
inc
ret
pushl
ror
pop
fmulp
or
fisubrl
lock
mov
xor
rcl
jg
stos
sbb
test
out
sbb
or
adc
and
movaps
sbb
inc
incl
pushf
popf
dec
push
and
xor
fstl
sar
mov
mov
xchg
daa
xor
imul
leave
sti
mov
rorl
sbb
pushl
movsb
mov
mov
xchg
repz
mov
push
pop
jecxz
sbb
pop
jbe
clc
lcall
push
js
ret
int
jl
mov
sbbl
jns
and
ja
cmp
imul
lret
popa
out
aad
pop
lods
xchg
dec
inc
scas
ss
loop
cmpsb
jl
pop
adc
ljmp
add
or
push
fildll
mov
fistl
stos
mov
rcl
jmp
pop
lahf
in
mov
test
insb
leave
jmp
mov
decb
jge
mov
lret
inc
xchg
arpl
mov
popa
inc
inc
push
xor
inc
loop
fwait
lcall
rclb
std
jae
pop
push
sbb
lds
lea
cwtl
cmp
xchg
adc
pop
xchg
dec
or
mov
adc
dec
aaa
xchg
insl
xor
ret
mov
stos
ss
testb
int3
mov
push
cli
shrl
mov
rolb
aas
popf
lcall
xchg
mov
int
popf
loope
lret
daa
adc
shll
jno
adc
mov
negb
data16
adc
or
mov
sahf
xchg
dec
mov
ljmp
push
ja
xchg
out
sbb
pop
ret
dec
mov
pushl
xchg
mov
inc
cli
cmp
jo
xchg
lods
sub
stos
cld
sbb
mov
fildll
and
scas
pop
xor
lods
fstpl
mov
aaa
insb
jnp
fwait
dec
enter
outsb
add
and
pushf
lcall
bound
xor
aam
pop
jb
iret
sbb
ljmp
sarb
pushl
pop
cli
adc
adc
es
out
addr16
adc
in
dec
pushl
inc
cmp
jo
fsubrl
fistpll
dec
and
divl
xor
call
push
pushaw
add
in
stos
cwtl
lret
jb
jmp
push
hlt
sbbl
cli
inc
clc
aam
mov
loopne
inc
xchg
jbe
jle
cli
lock
or
cmp
jle
mov
add
icebp
mov
les
and
dec
push
sbb
lret
push
sub
xchg
je
mov
mov
xor
adc
push
mov
lret
jbe
in
cmp
lcall
insb
ss
ss
ss
ds
cli
jns
leave
jns
or
out
jnp
xor
ljmp
jmp
pop
js
jne
outsb
enter
push
lret
mov
sub
pushl
lret
fisubrl
mov
arpl
xlat
mov
stos
lods
mov
cmp
jmp
sub
imul
loope
xchg
movsl
fistl
adc
cli
xchg
adc
jae
leave
and
mov
lcall
push
mov
std
cmc
cmp
outsl
aad
mov
sub
test
call
into
pusha
cmp
outsb
xchg
jle
dec
adc
shrl
ds
mov
insl
fwait
inc
mov
mov
inc
xor
cmp
mov
cmp
testl
mov
mov
daa
cmpsl
cmpsb
push
mov
movsl
cltd
fisubrl
dec
and
inc
cmp
pushl
in
popf
inc
fimuls
push
test
lock
lahf
js
xchg
push
sub
je
jg
mov
gs
pop
xor
mov
and
mov
or
jnp
pop
jmp
test
dec
push
lcall
xor
scas
mov
aaa
xor
sar
ljmp
dec
or
popf
pop
sub
mov
subb
call
jno
mov
ljmp
sub
mov
jbe
fmuls
dec
and
mov
pusha
xchg
ds
dec
pop
in
leave
mov
xchg
cwtl
ja
call
ret
loopne
leave
insl
jmp
clc
inc
lods
xchg
sub
sub
out
aas
clc
cmc
outsb
cmp
decl
push
cmp
scas
xlat
pop
dec
push
push
pop
outsl
push
mov
rcrb
jmp
lahf
rcrb
movsl
fsts
push
and
sbb
mov
sub
pop
or
add
decl
adc
and
and
hlt
xor
xor
pushw
icebp
cmpl
sbbb
cmp
insl
shlb
jne
jo
cmc
int3
ret
incl
fnsave
test
sahf
ljmp
pop
inc
inc
jb
add
jbe
add
call
mov
jmp
ljmp
js
pushf
int3
ret
ja
fldl
inc
pop
aam
iret
loop
enter
mov
andl
push
clc
imul
jl
cld
jg
sub
loope
fimuls
jg
push
push
pop
ds
push
mov
jmp
or
sub
xchg
inc
sub
cmp
push
mov
push
popf
pusha
rcr
pop
nop
push
movsl
stos
lea
adc
mov
cmp
add
cld
fdivrs
inc
iret
jge
sahf
jmp
enter
es
dec
mov
or
pop
pop
jne
mov
mov
hlt
mov
stos
out
inc
push
gs
push
sub
sbb
pusha
repz
decl
movsb
or
pushf
inc
jmp
jl
dec
xchg
pushf
mov
loopne
jo
dec
leave
mov
fstps
lcall
sbb
enter
dec
scas
cs
adc
mov
incl
and
outsb
push
xorl
cmp
imul
fs
adc
jns
push
lcall
lea
or
mov
dec
inc
add
sahf
adc
loop
ja
jmp
in
add
je
mov
mov
shlb
and
add
add
repz
xchg
sbb
xchg
pop
cmp
or
cmpl
cmp
sbb
call
insb
dec
scas
ljmp
outsl
mov
into
movsb
or
test
push
in
pushl
dec
mov
sahf
mov
cmp
pop
outsb
das
iret
mov
xor
aas
mov
cmp
lds
into
inc
inc
cs
mov
adc
cmp
xorb
push
pop
inc
lret
add
les
scas
push
dec
add
test
popa
stc
lods
dec
sbb
jg
push
clc
sub
inc
ja,pt
stc
inc
imul
push
xor
push
insl
mov
jg
shll
cmp
aaa
jecxz
xchg
mov
jbe
mov
pop
cs
dec
dec
popf
imul
mov
inc
stos
das
adc
inc
push
or
loopne
cmp
sbb
cmc
inc
push
mov
call
mov
js
ss
pop
xlat
cmc
mov
insb
int
jmp
pop
pop
mov
outsl
aaa
in
idiv
ljmp
mov
sahf
sbb
orb
pop
cmp
xchg
lcall
jg
call
out
jmp
inc
je
enter
adc
dec
xchg
ret
jmp
mov
or
cs
loopne
sbbb
fstl
inc
push
call
dec
push
fisubs
push
and
aaa
das
repnz
mov
sbb
outsb
push
jecxz
aam
mov
fcoml
les
in
cmp
jmp
xchg
sbb
mov
sub
lret
pop
notl
sti
fdivs
cmc
pop
pop
sbb
xchg
dec
add
loopne
incl
push
adc
sarb
mov
mov
loopne
in
repnz
mov
push
movsl
mull
inc
sahf
push
out
inc
pop
rolb
dec
test
fsubrs
pop
incl
ret
test
pop
out
dec
inc
xor
and
jb
jg
dec
mov
subb
out
inc
dec
pop
pop
mov
in
mov
xchg
cltd
mov
stc
ljmp
movsb
jb
jmp
repnz
test
sbb
enter
ret
jo
inc
test
inc
adc
mov
lea
mov
lret
push
fists
jno
push
pop
leave
adc
lea
mov
jg
jb
js
cld
jae
xchg
pop
cmpsb
push
inc
ljmp
scas
sbb
loop
pop
in
call
out
pop
out
dec
push
xor
jmp
mov
repnz
in
lcall
mov
lcall
ret
push
pop
fdivrs
icebp
mov
into
or
mov
mov
xor
mov
sub
cli
pushf
mov
push
test
and
stos
xor
ljmp
push
test
xor
inc
mov
lock
pop
or
xchg
call
ljmp
xor
stos
out
out
testb
jmp
imul
dec
pop
push
adcl
pop
sub
lods
sbb
add
jnp
addr16
call
pop
push
mov
incl
loope
subb
das
leave
adc
xchg
stos
out
imul
pop
pop
repz
adc
jmp
iret
addr16
jecxz
or
sub
insb
adc
cmp
lcall
or
dec
orb
lea
push
lods
out
ljmp
sar
aaa
loopne
shll
and
nop
into
sbb
adc
push
push
shrb
jg
and
repz
cmp
mov
cld
fs
jo
in
std
and
clc
pop
aas
call
adc
adc
aas
mov
fldenv
add
xchg
lcall
filds
cld
or
ret
repz
je,pt
xchg
iret
xchg
xchg
fdivrp
pushl
pusha
mov
xor
fwait
inc
inc
push
inc
and
scas
jns
outsl
sbb
jmp
ror
dec
push
add
jbe
cltd
pop
popa
out
jnp
mov
pop
adc
push
pop
sbb
inc
push
adc
daa
gs
test
test
inc
mov
rorl
mov
and
fwait
inc
mov
dec
ss
rclb
insb
iret
aaa
xor
jp
aam
or
push
test
add
lods
sbb
call
aas
and
je
lods
popa
jb
out
fdivr
sarl
sbb
les
cld
inc
inc
loop
dec
ret
cmpsb
xor
adc
dec
testb
cld
sub
xchg
in
xlat
push
divb
decl
sub
mov
cmpsb
xor
outsb
leave
dec
out
scas
and
idiv
ret
incl
mov
ret
movsl
into
loopne,pn
jle
sbb
orb
sarb
test
enter
dec
or
adc
push
inc
xchg
xor
add
movsl
in
mov
adc
lcall
inc
mov
jo
imul
shrl
xor
fsubrl
jg
mov
mov
and
push
cmp
aam
push
mov
mov
ljmp
pop
sub
daa
loop
jnp
stos
std
mov
in
dec
cs
jnp
js
cmp
jle
add
push
bound
out
mov
fstpt
cmpb
call
or
cltd
iret
leave
mov
add
idiv
pop
jo
scas
cmp
ja
test
push
fadd
lahf
add
jmp
ret
pop
xor
push
scas
jbe
mov
add
out
mov
mov
dec
daa
mov
je
vpsrld
and
xor
dec
jle
push
inc
fiaddl
jnp
mov
jmp
scas
addr16
pop
pop
cmp
icebp
test
enter
and
nopl
fcomps
or
jmp
inc
mov
xchg
aam
shlb
outsl
dec
into
jge
inc
rcrl
int3
cmp
and
fsubs
outsl
and
jmp
mov
incb
push
ja
jmp
fwait
push
mov
daa
pop
out
pushf
mov
arpl
and
dec
xlat
xlat
sbbb
sti
call
or
pusha
sbb
jg
lods
repz
lret
adc
sbb
jg
jno
mov
push
or
out
ret
jl
push
mov
icebp
xchg
add
insb
fbstp
call
outsb
subl
sub
sub
sbb
add
decl
xchg
cld
cwtl
repnz
pop
jmp
xor
testb
pop
sarl
pop
pop
cmpsb
iret
cs
mov
decl
test
hlt
mov
cmpsb
mov
adc
mov
mov
pushf
adc
sub
pop
sar
out
add
push
lret
xor
shlb
add
call
fnstenv
push
fnstsw
add
xchg
jbe
jbe
sub
adc
stos
inc
sbb
sbb
mov
push
ret
xchg
and
sub
adc
sbb
outsb
lahf
push
xlat
mul
insb
jnp
ljmp
lcall
sub
push
movsl
jb
mov
fisubs
mov
push
das
sar
pushl
jae
orl
ds
mov
xor
sub
out
testl
mov
mov
sub
sti
add
add
mov
pop
pop
mov
cmp
mov
pop
mov
dec
mov
sti
jge
cmp
add
mov
adc
movsl
imul
in
imul
insb
aaa
cmp
sub
mov
cmp
prefetch
mov
lret
in
lret
pop
dec
mov
movsb
test
je
mov
aas
lds
scas
popf
loopne
pop
neg
frstor
mov
in
fwait
mov
jl
inc
sub
out
sahf
int
addl
pop
lret
ja
inc
jbe
and
mov
pop
mov
xor
push
push
aam
mov
lock
jno
mov
adc
rolb
sbb
xchg
adc
sar
loopne
lods
push
inc
cmp
pop
mov
xchg
ret
sub
add
outsb
sbb
test
nop
ret
lret
cmp
push
xor
roll
add
jle
adc
out
insl
sub
push
addb
shlb
out
pop
ja
leave
shlb
mov
lahf
loope
jnp
xor
mov
loopne
cmp
dec
dec
decl
lock
mov
push
imul
idivb
mov
decl
shrl
cmc
push
cmpb
out
xchg
cmc
xor
xchg
push
aas
pop
mov
pushl
bound
rorb
xor
mov
mov
aaa
jbe
cmpsb
and
push
push
xor
mov
push
mov
hlt
lods
jecxz
addr16
in
mov
inc
push
std
sbb
int
roll
imul
pushf
sahf
mov
mov
lock
leave
cmpsl
fwait
mov
jp
cmp
push
mov
cld
dec
scas
push
shr
insb
xchg
fdivs
ljmp
xchg
enter
mov
scas
xor
fs
push
fmull
add
lcall
xchg
arpl
push
loop
inc
cld
hlt
mov
mov
dec
sbb
inc
mov
inc
push
aam
das
cmp
repnz
rcrb
loope
aas
and
aad
pushl
insb
xor
and
push
les
mov
or
push
fwait
dec
mov
movsb
push
xchg
mov
fs
sbbb
cmpsb
fstps
push
push
repnz
inc
fistl
lock
and
ljmp
mov
sarl
mov
xorb
jnp
sbb
jne
fsubp
dec
fiaddl
test
lret
pop
movsb
pushl
rcr
sbbb
mov
or
mov
push
sarb
test
mov
sub
pop
sbb
mov
popa
insb
js
or
lock
rcrl
mov
dec
scas
sar
jle
hlt
or
insl
mov
push
cmpsl
ret
in
lods
sahf
mov
aam
push
adc
inc
lods
mov
jg
sbb
mov
in
cmp
rcll
cmpsl
nop
lea
call
jmp
mov
jecxz
cmc
xchg
icebp
pop
adc
lds
xchg
cmp
dec
imul
lcall
bnd
mov
adc
push
dec
loop
lahf
mov
mov
lcall
shlb
adcb
fs
rcr
mov
push
inc
jge
lret
pop
push
call
cmc
mov
aas
fsubl
push
jae
js
add
lcall
mov
cld
inc
push
cmpsb
stc
outsb
jge
insl
mov
sbb
das
cmpb
pushl
out
sbb
jo
pop
add
mov
push
jg
pop
loope
out
jno
xor
pop
clc
lcall
cmp
hlt
arpl
cmp
outsb
fcoms
scas
std
xchg
mov
stos
outsl
inc
stos
mov
add
arpl
in
insb
test
aaa
cmc
rol
lea
les
pop
fldt
insl
and
inc
insl
push
and
add
lods
mov
jbe
cmpsl
mov
or
mov
cmp
jmp
lret
inc
sbb
adc
in
or
mov
pop
fcoml
mov
pushl
mov
std
and
mov
es
xor
push
dec
aam
pop
js
aas
mov
push
mov
inc
icebp
jns
mov
popf
das
fstl
push
call
xchg
enter
push
je
rorb
shlb
or
es
repnz
cld
clts
sbb
and
ret
int3
clc
mov
fucomi
pop
xor
in
and
rorb
filds
xlat
xchg
stos
hlt
xchg
stos
mov
adc
jl
push
lcall
sahf
pushf
ja
stos
mov
dec
xor
fwait
lahf
add
cmpsb
sbb
lahf
cmp
xlat
sub
ljmp
mov
jp
inc
ds
mov
insl
cwtl
mov
sub
lahf
dec
movsb
xor
jmp
sub
in
into
pushf
add
ja
adc
or
pop
sbb
inc
out
or
shrl
cmp
je
or
push
rcrl
push
xchg
pop
lock
cmpsl
mov
push
nop
stos
insl
push
cmp
leave
aam
das
call
js
mov
stc
adc
sub
sub
mov
pop
inc
hlt
icebp
test
mov
call
mov
cmpsl
ja
testl
sub
imul
sub
incl
fistpll
mov
mov
push
inc
and
outsb
movups
int3
lcall
push
loope
dec
mov
push
jecxz
inc
pop
adc
dec
int3
lock
call
js
lret
imul
out
lock
xchg
inc
outsl
leave
push
jmp
mov
mov
inc
xchg
icebp
incl
outsl
adc
and
xor
in
loop
arpl
push
or
mov
mov
mov
add
dec
pop
nop
arpl
pop
or
loope
incl
cwtl
push
shl
fbstp
inc
mov
sub
out
fisubl
mov
inc
dec
leave
popf
and
icebp
rclb
inc
ljmp
push
xchg
dec
push
jp
test
pushl
adc
pop
leave
mov
lods
mov
daa
push
insl
lods
insl
cmp
fsubrs
fdivrl
xchg
das
ficoms
lods
lcall
lret
stc
fdivs
jg
jmp
and
add
es
xor
xlat
jne
idivl
sahf
clc
ljmp
adc
add
adc
leave
and
inc
test
test
sub
cmp
and
xor
and
push
mov
xchg
sub
or
cltd
jge
mov
mov
ljmp
push
jecxz
mov
mov
arpl
mov
push
dec
fwait
mov
push
add
call
or
divb
cmp
jb
and
jnp
xor
icebp
pushf
adc
fisttpl
xor
add
ds
cwtl
jmp
daa
idivb
fisubrl
inc
and
movsb
in
fldl
lcall
icebp
sti
mov
xchg
dec
jp
sbb
pop
ficoml
or
or
shrl
aas
in
mov
xor
or
insb
inc
sbb
xor
jns
scas
lcall
incl
nop
ret
jge
mov
pop
mov
push
in
stos
fstp
data16
xchg
test
fisttpll
cld
jle
xchg
negb
aam
push
repz
mov
in
mov
mov
pushl
xchg
call
mov
adc
jecxz
adc
mov
or
call
adc
push
movsb
icebp
pcmpeqb
test
fldcw
pop
outsb
or
xchg
out
and
mov
or
out
repnz
mov
fstpt
jg
and
pop
fwait
and
jmp
sub
mov
and
imul
shlb
fildll
xor
xorb
sub
notl
add
gs
lods
loopne
xor
and
lds
cmp
cmp
daa
and
push
adc
inc
sti
xor
andb
xchg
mov
inc
and
insb
leave
add
cmp
push
push
fdivrp
movsb
and
dec
adc
jo
pop
shrl
or
notl
and
inc
xchg
mov
imul
adc
mov
sub
pop
cmp
mov
out
xlat
out
cmp
and
dec
or
cmp
imul
sub
test
ret
sbb
inc
sbbl
fwait
outsl
or
jnp
fwait
daa
andl
bound
loopne
add
test
call
xor
sbbl
or
jmp
sub
imul
inc
jnp
cltd
add
mov
stc
fstpt
xchg
inc
mov
fmuls
pop
fisttpl
fisttpll
or
encls
mov
xor
cmpsl
repz
mov
movsl
call
lss
add
mov
xor
imul
js
cmp
repz
pushl
gs
xlat
ret
pushf
imul
ljmp
roll
adc
xor
pop
jb
arpl
das
sbb
fdiv
fimuls
call
push
pop
js
sbb
xor
jg
jl
jecxz
inc
xor
out
push
cmp
pushf
movsb
in
ljmp
lret
fidivrl
lret
cmp
sarb
mov
push
cs
cmpsl
sub
inc
mov
xchg
rclb
xchg
inc
adcb
adc
shrl
inc
popa
jmp
lods
sub
mov
enter
mov
mov
in
pop
scas
aam
aas
or
roll
pushl
mov
das
out
jnp
pop
sbb
cmp
adc
ja
in
popa
pop
inc
mov
dec
and
push
fimuls
int
test
sbb
shlb
cmp
cmpsl
test
lcall
arpl
adc
daa
ret
fcomps
xor
jne
mov
inc
ja
popa
mov
idiv
incl
cmc
mov
xchg
xlat
sub
jb
xchg
dec
inc
pop
xchg
dec
aas
adc
jmp
std
das
ret
jmp
mov
xor
shl
bound
and
aad
sbb
jnp
jge
xor
mov
jmp
and
add
sbb
pushf
pop
cmc
push
jp
stos
jecxz
mov
push
sub
jg
jmp
cmp
jecxz
mov
and
movsl
push
movsl
out
jecxz
and
mov
ds
dec
cli
push
loope
mov
out
jb
sarl
dec
outsl
push
xor
cltd
mov
push
insb
adc
push
sti
sub
or
xchg
xor
ss
sbb
arpl
mov
pop
mov
sbbb
cmp
incl
dec
mov
test
lds
pop
pop
xlat
es
mov
pop
push
mov
cmpsb
fcomps
jno
dec
stc
mov
les
mov
jo
xchg
incl
and
sbb
mov
aas
adc
jp
pop
cli
xor
mov
movsb
aad
loopne
in
in
loop
mov
jp
loopne
int3
xchg
adc
in
cld
jnp
xor
dec
in
mov
adc
inc
shlb
jmp
push
fdiv
xlat
loopne
lea
test
jge
adc
push
jmp
ucomiss
decl
sbb
sbb
addr16
xor
stos
fists
adc
test
jmp
dec
mov
dec
call
iret
xchg
pop
sbb
cld
adc
aam
push
or
jmp
ja
xor
out
je
out
out
data16
mov
rcrl
xchg
repz
jmp
fidivrs
push
loop
xor
jbe
or
aas
mov
sub
sbb
mov
fcomip
decl
je
je
icebp
test
lock
pop
sti
aam
adc
not
aaa
mov
pushl
fsts
outsl
stc
ficoml
dec
dec
pop
imul
cmc
sbb
sar
sti
cmpsl
adc
lods
testb
sbb
pop
pop
mov
stc
dec
pusha
cmp
repz
ds
cli
add
jmp
leave
push
sbb
xchg
sub
mov
or
popl
stos
mov
lods
sub
icebp
incl
sahf
xchg
cmp
and
dec
insb
push
mov
rcrb
and
inc
pushl
test
fdiv
dec
imul
int
cli
push
or
pusha
and
jmp
sbbl
int3
int
or
fsubs
xor
fcmovne
std
dec
fcomip
ror
fimull
loop
fwait
cwtl
push
scas
out
pop
sbb
testb
mov
jmp
fsubrp
mov
notl
idivb
jp,pt
popa
cltd
adc
lods
popa
jnp
pop
daa
push
mov
jmp
lock
andl
fildl
or
imul
push
add
call
xor
imul
xlat
inc
or
arpl
mov
iret
xor
adc
inc
bound
call
lds
adcb
les
jno
adc
test
adc
pushf
push
scas
sarl
icebp
jmp
clc
sub
ljmp
jbe
push
jnp
call
fs
ljmp
inc
jbe
add
jmp
add
popf
filds
mov
jle
dec
xchg
jmp
pop
jbe
mov
pop
js
movsl
dec
aad
faddl
shrb
icebp
push
fisttps
ficoms
inc
imul
jg
bound
imul
sahf
mov
bound
or
sbb
imul
pushl
fstpl
pop
xor
leave
in
xor
negl
insb
xchg
pop
dec
pop
jns
push
mov
cli
call
dec
imul
jae
fwait
or
pop
or
sub
adc
mov
or
mov
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
xor
fninit
mov
jmp
jbe
adc
ficoml
adc
lret
aaa
cmc
fmuls
adc
incl
add
shlb
cmp
or
fisubs
adc
jae
dec
pop
push
sub
add
andl
fwait
jbe
lret
mov
jno
lds
jmp
or
mov
add
mov
inc
mov
and
mov
in
xchg
jmp
stos
sub
shll
xchg
and
mov
imul
add
pushf
sahf
inc
cmp
mov
adc
stos
jecxz
jnp
out
and
outsb
bound
roll
test
xorb
stos
iret
and
push
mov
inc
xorb
fstps
and
ljmp
or
shll
inc
jp
ret
rcl
vmulps
push
mov
repnz
jmp
and
ret
int3
fistps
jecxz
and
mov
inc
into
loop
push
inc
adc
mov
xchg
test
jns
cmpps
in
mov
pop
adc
loope
mov
cmp
mov
mov
mov
push
popa
jb
add
inc
add
dec
push
imul
fnstenv
jo
mov
push
test
mov
lods
inc
dec
xchg
fadds
sbb
xor
push
sub
xor
loopne
sub
pop
and
pushl
cmp
and
inc
fisttps
rolb
xor
adc
jb
cli
push
mov
sbb
in
xchg
sahf
push
inc
pusha
jge,pn
enter
xchg
xlat
dec
inc
out
fdiv
lcall
in
adc
stos
sub
or
std
jmp
mov
ficoms
pushl
push
inc
jbe
jecxz
inc
fdivr
fisttpll
ja
out
adc
gs
mov
incl
inc
in
arpl
bound
lcall
jg
inc
jno
add
mov
jmp
ljmp
pop
rcr
leave
mov
inc
xor
arpl
test
dec
sar
std
sbb
lds
push
mov
mov
mov
into
fcompl
or
lahf
addl
jg
cmpsl
enter
jp
ljmp
test
sub
xor
pop
dec
mov
ljmp
ret
lds
or
pop
faddl
loope
test
and
movntq
out
jbe
jmp
scas
out
mov
jmp
imul
faddl
sub
pop
cmp
jnp
inc
and
je
mov
mov
mov
mov
mov
scas
out
ljmp
icebp
cmp
gs
or
hlt
jo
fimull
in
mov
shll
movsb
into
jmp
sub
roll
jle
adc
cwtl
xchg
push
inc
imul
fldcw
aad
cmp
incl
cwtl
push
aam
mov
inc
jge
xchg
add
mov
sbb
inc
or
fwait
repnz
sub
lahf
lahf
je
pop
mov
push
jge
jbe
icebp
xchg
push
dec
in
addr16
aad
lret
mov
std
pop
pop
sbb
mov
mov
cmp
mov
sbb
adc
dec
in
fistpll
inc
outsb
xor
push
xlat
cmp
mov
arpl
mov
in
decl
flds
pop
inc
jae
cmpsb
cmc
dec
xchg
inc
mov
outsl
cmp
ja
ja
xchg
lret
ja
into
sub
push
pop
push
push
mov
ds
mov
mov
ss
jmp
push
mov
and
aas
sub
or
add
adc
ret
ljmp
mov
lock
dec
in
lcall
repnz
movsb
mov
out
cli
inc
mov
arpl
dec
popa
mov
cli
sub
mov
daa
xchg
lds
push
jns
push
nop
jmp
inc
and
fwait
xchg
push
xchg
sbb
call
mov
jae
lea
notb
loope
aam
in
push
ds
pushl
or
cmp
jb
out
mov
in
orb
pop
jp,pn
std
fsts
loopne
jmp
int3
in
push
cmp
scas
les
aam
cmpsb
fptan
mov
jmp
xor
repz
fbstp
or
sbb
mov
adc
enter
jge
or
mov
inc
dec
add
pop
xorb
adc
lcall
mov
pop
or
add
inc
loopne
test
imul
add
fldenv
mov
clc
cmp
iret
pop
cmc
sbb
ds
fcmovnu
test
sub
cmpsl
out
adc
call
dec
adc
scas
add
scas
sbb
xor
into
inc
push
adc
xor
ds
fnstcw
jg
decb
push
inc
cwtl
scas
push
jl
das
shl
mov
out
jg
mov
xchg
in
mov
cmpl
sti
mov
imul
clc
xchg
leave
pop
dec
pand
xor
aad
sub
ljmp
pop
movsl
jo
mov
pushf
js
push
sbb
adc
imul
inc
insb
jbe
ljmp
out
xbegin
inc
mov
mov
adc
push
pop
aas
cld
add
loopne
jne
mov
xchg
divb
das
test
inc
rol
decl
sahf
gs
fadd
jnp
xor
lret
jg
pop
add
inc
loop
je
stos
fsin
jg
xlat
ret
lods
call
xchg
adc
call
jge
adc
jmp
xchg
push
idivl
push
push
mov
inc
and
aam
ljmp
mov
bound
inc
push
pop
inc
add
mov
lds
shrl
repz
cmp
out
mov
mov
and
out
lret
push
cmp
mov
js
mov
jp
pop
xor
pop
mov
sub
in
lods
loope
pop
call
data16
ja
out
fcoml
in
mov
sbb
or
sbb
sub
add
mov
decl
xchg
inc
enter
jle
inc
xor
in
adc
repnz
clc
xor
push
fistps
test
push
sbb
rclb
in
mov
or
sub
pushf
sbb
or
fmull
jb
xor
or
sub
dec
in
cltd
cmpsl
pop
and
pushf
push
mov
dec
data16
sarl
div
aas
jb
into
and
mov
mov
filds
mov
cmp
incl
popf
jbe
addr16
inc
ss
divb
sub
inc
cmpsl
mov
add
sbb
cmp
pushl
push
mov
in
lock
es
call
lret
sbb
les
jns
inc
scas
cmp
aad
addl
mov
mov
xchg
jae
loop
add
arpl
clc
xchg
scas
dec
enter
mov
dec
icebp
ds
adc
push
xor
add
popf
xchg
adc
bound
jp
outsb
fwait
lcall
out
sbb
decl
jecxz
mov
pop
inc
sbb
scas
sbb
inc
aaa
ror
pop
fmulp
or
fisubrl
lock
jge
mov
xor
rcl
stos
stos
sbb
test
out
sbb
lcall
movsl
mov
jle
movaps
sbb
inc
add
jno
pushf
popf
dec
push
pushl
and
xor
fstl
sarl
mov
repnz
call
nop
push
push
mov
leave
sti
mov
rorl
sbb
mov
inc
into
movsb
mov
pushl
inc
sub
mov
pop
jecxz
sbb
pop
jbe
pop
fsts
xor
int
jl
mov
cmp
jns
and
ja
cmp
imul
out
aad
dec
pop
lods
xchg
dec
inc
scas
ss
loop
cmpsb
jl
pop
adc
adc
inc
lcall
push
fildll
mov
fistl
stos
mov
rcl
jmp
pop
lahf
in
mov
cmp
test
insb
leave
jmp
mov
decb
jge
mov
aam
inc
xchg
decl
dec
dec
mov
inc
push
xor
inc
loop
inc
rclb
std
jae
fcomip
lcall
sbb
lds
lea
adc
pop
xchg
dec
or
pushl
ret
dec
aaa
xchg
insl
xor
ret
mov
push
outsl
int3
mov
lcall
xadd
cld
pcmpgtb
inc
xor
cmp
fidivrs
mov
dec
push
popf
loope
lret
daa
adc
shll
jno
adc
lock
data16
call
repnz
mov
sahf
xchg
dec
mov
rep
and
lds
xor
xchg
out
sbb
pop
ret
dec
mov
xchg
mov
inc
cli
cmp
jo
xchg
lods
sub
stos
cld
sbb
mov
das
and
scas
pop
xor
lods
fstpl
pushl
lods
fwait
dec
enter
outsb
add
and
pushf
sbb
mov
or
xor
aam
lcall
pop
iret
sbb
ljmp
sarb
jne
pop
cli
adc
adc
sub
in
es
out
addr16
adc
in
dec
mov
inc
insl
inc
or
mov
decl
jo
fsubrl
fistpll
dec
and
divl
xor
pusha
add
in
stos
cwtl
dec
in
shlb
jmp
push
hlt
sbbl
cli
inc
clc
aam
mov
loopne
inc
mov
call
cli
lock
or
cmp
jle
mov
add
ljmp
jg
int3
dec
push
sbb
lret
enter
mov
mov
ret
cmp
xor
adc
push
mov
lret
jbe
in
cmp
ss
jnp
push
ds
cli
jns
leave
jns
or
out
jnp
xor
pop
js
jne
outsb
enter
hlt
dec
pop
push
lret
mov
sub
xchg
insl
lods
xchg
lret
fisubrl
js
jo
loopne
fcoms
arpl
xlat
mov
stos
lods
mov
and
push
imul
loope
incl
push
ljmp
jae
leave
and
mov
or
fucomip
push
push
std
cmc
cmp
outsl
aad
mov
sub
test
pusha
cmp
outsb
xchg
jle
decl
xchg
cld
cltd
cmc
js
sub
push
mov
insl
fwait
inc
mov
mov
in
cmc
repnz
jle
mov
cmp
testl
mov
dec
dec
sub
cmpsl
cmpsb
push
mov
jmp
xor
scas
pop
cltd
xchg
bound
sub
ss
popf
inc
fimuls
push
test
fcomip
lock
lahf
js
xchg
push
sub
je
jg
jne
aas
pop
xor
mov
lcall
mov
or
jnp
pop
fstp
shrb
dec
pushl
push
lcall
xor
scas
mov
aaa
xor
sub
mov
cltd
adc
popf
pop
sub
add
call
mov
subb
call
jno
mov
repz
jbe
fmuls
decl
out
ja
xchg
ds
dec
pop
in
leave
mov
xchg
cwtl
ja
sub
inc
cltd
loopne
leave
insl
jmp
clc
inc
lods
xchg
sub
sub
out
aas
clc
cmc
outsb
cmp
ret
and
repnz
cmp
ljmp
push
pop
outsl
push
mov
rcrb
lahf
rcrb
movsl
fsts
call
mov
dec
push
dec
sub
pop
or
add
push
adc
and
and
jmp
hlt
xor
xor
pushw
icebp
cmpl
lcall
mov
push
cmp
insl
shlb
jne
jo
cmc
int3
ret
fldl
fnsave
test
incl
sahf
ljmp
pop
inc
inc
jb
add
jbe
add
mov
jmp
mov
loopne
ljmp
js
pushf
int3
ret
ja
fldl
gs
loop
enter
cmp
jmp
andl
push
clc
imul
jl
sub
loope
lods
loopne
jmp
fimuls
jg
push
push
pop
ds
push
push
jmp
or
lcall
jecxz
dec
lcall
jo
push
mov
rcr
pop
nop
push
movsl
stos
pushl
adc
mov
cmp
add
cld
fdivrs
inc
iret
jge
sahf
jmp
enter
dec
es
dec
mov
or
pop
pop
jne
mov
mov
out
inc
push
gs
ljmp
cli
push
sub
sbb
pusha
repz
sbb
dec
clc
call
loopne
jo
dec
leave
mov
fstps
outsb
jmp
scas
xchg
out
inc
enter
dec
scas
cs
adc
mov
in
and
outsb
push
xorl
call
loopne
fs
adc
jns
push
lret
lea
clc
decl
dec
inc
mov
dec
inc
add
sahf
adc
loop
ja
xchg
add
je
mov
inc
cltd
rcrb
movsl
arpl
shlb
add
repz
std
call
cmp
or
cmpl
cmp
sbb
scas
ljmp
pushl
ds
movsb
or
test
push
in
dec
mov
sahf
mov
mov
lret
das
iret
mov
xor
aas
mov
cmp
lds
into
inc
inc
ljmp
insb
mov
adc
cmp
xorb
push
pop
vandnps
imul
push
dec
add
test
popa
stc
lods
dec
sbb
push
clc
sub
inc
ja,pt
stc
inc
imul
push
xor
push
insl
mov
ss
shlb
jecxz
xchg
lcall
mov
jbe
mov
pop
cs
dec
dec
popf
imul
xor
stos
das
adc
pushl
cmp
jp
xchg
imul
cmc
inc
push
mov
cld
xor
divl
sti
lcall
cmc
mov
insb
int
jmp
pop
pop
mov
outsl
aaa
in
neg
out
ljmp
mov
lcall
shrl
cmp
xchg
lcall
xchg
ds
jmp
inc
std
decl
mov
or
dec
xchg
ret
out
pop
mov
or
call
xchg
mov
xor
xor
loopne
sbbb
push
mov
fsubr
mov
push
mov
fisubs
push
and
aaa
das
repnz
mov
cmp
jecxz
aam
mov
out
clc
scas
fcoml
add
les
in
cmp
loopne
shlb
ds
dec
adc
sti
fdivs
cmc
pop
pop
sbb
xchg
dec
add
add
push
adc
add
aas
mov
mov
loopne
in
repnz
adc
push
movsl
mull
incl
out
inc
pop
rolb
dec
test
fsubrs
pop
inc
sbb
fistpl
out
decl
dec
ret
and
jb
jg
dec
mov
subb
out
dec
pop
pop
mov
in
mov
jmp
into
xchg
push
jle
mov
xchg
repnz
incl
add
jbe
enter
ret
jo
inc
test
inc
adc
clc
lea
mov
ljmp
fists
jno
push
pop
leave
adc
lea
mov
jb
js
cld
jae
xchg
pop
jmp
pop
or
sub
scas
sbb
loop
pop
in
aam
out
pop
out
dec
push
xor
jmp
cmp
push
dec
mov
repnz
in
lcall
mov
ret
push
pop
fdivrs
jle
out
icebp
mov
into
or
mov
mov
xor
mov
pop
fdivrp
pushf
cmp
jle
push
test
and
stos
xor
push
test
push
xor
inc
mov
lock
pop
or
xchg
call
xor
stos
out
out
push
inc
sahf
mov
jg
imull
clc
les
add
sbb
add
jnp
call
std
jmp
shr
insb
dec
cs
pop
push
mov
xchg
jge
add
push
subb
ljmp
leave
adc
xchg
stos
out
imul
pop
pop
repz
adc
movsb
mov
cwtl
into
test
aam
mov
iret
addr16
jecxz
or
sub
insb
adc
cmp
push
fnstsw
stc
and
dec
orb
lea
push
lods
out
shll
loopne
shll
jg
jl
and
nop
into
sbb
adc
add
and
or
aas
inc
pop
and
repz
cmp
mov
cld
fs
jo
in
inc
std
and
clc
pop
aas
push
or
adc
aas
mov
fldenv
add
filds
cld
call
in
insl
sub
cmpl
mov
inc
je,pt
xchg
iret
xchg
xchg
fidivs
pusha
mov
xor
fwait
inc
inc
push
inc
and
scas
jns
outsl
sbb
ror
dec
push
add
jbe
cltd
pop
popa
out
jnp
mov
lcall
push
pop
sbb
push
adc
daa
gs
test
test
inc
mov
rorl
pushl
inc
mov
lret
mov
push
icebp
jl
iret
aaa
xor
jp
aam
or
push
incl
sbb
pop
aas
and
je
lods
popa
jb
out
fdivr
sarl
sbb
decl
les
loop
dec
ret
cmpsb
xor
adc
dec
testb
cld
sub
sti
xchg
in
xlat
push
divb
or
sub
mov
cmpsb
xor
outsb
leave
dec
out
ljmp
stc
ret
mov
ret
movsl
into
loopne,pn
jle
sbb
orb
sar
cmp
test
enter
int3
or
adc
push
inc
xchg
xor
add
movsl
in
mov
adc
cwtl
in
addr16
inc
mov
jo
imul
shrl
xor
inc
fsubrl
jg
pop
mov
mov
popf
and
push
cmp
aam
ljmp
add
dec
mov
mov
jl
pop
sub
daa
loop
jnp
stos
std
mov
incl
pop
mov
jae
cs
sbb
push
add
push
bound
out
mov
fstpt
jg
leave
add
jp
mov
cltd
iret
leave
mov
add
idiv
pop
jo
scas
cmp
ljmp
int
mov
fadd
lahf
add
jmp
ret
pop
xor
push
scas
jbe
mov
add
out
mov
mov
push
je
vpsrld
and
xor
dec
jle
push
inc
fiaddl
incl
jnp
mov
and
pop
cmp
icebp
test
enter
and
decl
push
js
fcomps
or
and
sub
out
xchg
aam
shlb
outsl
dec
into
jge
inc
sar
lcall
int3
and
stc
lds
pop
outsl
and
jmp
mov
lcall
adc
bound
push
mov
daa
pop
out
pushf
mov
arpl
and
dec
xlat
xlat
pushl
pop
inc
fwait
xchg
pop
jno
or
pusha
sbb
jg
lods
repz
lret
adc
jg
sbb
fnsave
mov
push
or
out
ret
jl
push
sti
jmp
pop
icebp
xchg
add
insb
nop
popf
pusha
insb
pop
outsb
subl
sub
sub
fists
sbb
add
dec
push
xchg
cld
cwtl
repnz
pop
jmp
xor
testb
pop
sarl
lcall
cmpsb
iret
cs
mov
mov
hlt
mov
cmpsb
mov
adc
mov
ljmp
adc
sub
out
add
push
lret
xor
sar
pushl
enter
jno
push
fnstsw
add
xchg
jbe
jbe
sub
call
stos
inc
sbb
push
ret
xchg
and
sub
adc
sbb
outsb
lahf
push
xlat
ljmp
cli
mul
insb
jnp
lcall
sub
push
movsl
jb
mov
fisubs
mov
push
das
shlb
in
orl
ds
mov
or
jae
xor
sub
mov
mov
add
mov
mov
adc
clc
sub
sbb
adc
sub
dec
mov
mov
mov
pop
mov
jle
fldz
dec
mov
push
add
mov
adc
mov
mov
movsl
or
fcmovne
fimull
sub
xor
inc
ds
or
mov
xlat
cmp
prefetch
or
pop
mov
pop
dec
mov
movsb
loopne
fstps
test
je
sub
lds
in
movsl
subb
xor
in
imul
sub
mov
jbe
out
add
inc
push
dec
repz
pop
lret
and
inc
pusha
mov
mov
dec
xor
push
push
mov
jg
mov
add
mov
sub
jmp
rorb
aad
xchg
xchg
add
adc
push
stc
int3
mov
mov
xchg
ret
in
loop
jb
mov
test
push
mov
mov
xor
fcomps
mov
adc
adc
sub
addb
rorb
idivb
ja
leave
shlb
mov
addr16
push
outsl
lock
loopne
cmp
incl
cld
dec
dec
xchg
mov
push
imul
idivb
ljmp
lret
stos
sbb
push
iret
cmc
push
cmpb
out
xchg
cmc
xor
xchg
push
aas
pop
mov
jmp
xor
fbstp
inc
xor
mov
mov
aaa
jbe
cmpsb
and
ljmp
lock
mov
push
mov
hlt
lods
jecxz
addr16
in
mov
call
sbb
int
roll
imul
pushf
sahf
mov
mov
lock
leave
cmpsl
fwait
jbe
pushl
test
dec
scas
push
shr
insb
xchg
fdivs
mov
cmp
pop
mov
scas
xor
fs
push
fmull
jmp
xor
loop
inc
cld
hlt
mov
mov
dec
lcall
lds
inc
push
aam
das
cmp
repnz
rcrb
loope
aas
and
call
pop
xor
pop
xsave
mov
pop
adc
push
les
mov
or
push
fwait
dec
mov
movsb
push
xchg
ljmp
xchg
fs
sbbb
cmpsb
fstps
push
push
repnz
inc
fistl
lock
jmp
sarl
mov
xorb
jnp
sbb
jne
fsubp
dec
fiaddl
test
lret
lcall
jne
rcr
sbbb
mov
or
mov
push
sarb
test
mov
ljmp
xchg
pop
sbb
mov
popa
insb
js
or
lock
rcrl
mov
dec
scas
ud0
ljmp
sbb
or
insl
mov
push
cmpsl
ret
in
lods
sahf
mov
aam
push
adc
ljmp
shrl
cmpsb
cmp
mov
scas
push
inc
jnp
xchg
rorl
cmpsl
nop
lcall
push
mov
test
inc
jecxz
cmc
xchg
icebp
pop
adc
lds
xchg
cmp
jge
decl
sahf
mov
ret
mov
adc
push
dec
loop
lahf
mov
mov
call
mov
push
sahf
je
mov
rcr
mov
push
inc
jge
lret
lcall
adc
cmc
mov
aas
fsubl
push
jae
js
add
lcall
mov
aad
rcll
outsb
jge
insl
mov
sbb
das
cmpb
lcall
jae
out
sbb
jo
pop
add
mov
push
jg
pop
loope
out
jno
xor
jg
call
clc
inc
adc
cmp
hlt
arpl
cmp
outsb
fcoms
scas
std
xchg
mov
stos
outsl
out
clc
incl
jge
mov
xor
in
insb
test
aaa
cmc
rol
lea
inc
fwait
pop
fldt
insl
and
inc
insl
push
and
add
lods
mov
jbe
cmpsl
mov
or
mov
lcall
lret
inc
sbb
adc
in
or
mov
pop
fcoml
mov
decl
sarb
std
and
mov
es
xor
ljmp
into
aam
pop
js
aas
mov
push
mov
inc
icebp
jns
mov
popf
das
fstl
jmp
xchg
ds
test
enter
push
je
rorb
shlb
or
es
decl
push
sbbl
and
ret
int3
clc
mov
fucomi
pop
pushl
cmpsl
in
and
rorb
filds
xlat
xchg
stos
hlt
xchg
stos
mov
adc
jl
incl
sbb
mov
dec
xor
fwait
lahf
add
cmpsb
sbb
lahf
cmp
xlat
sub
ljmp
mov
jp
inc
ds
mov
insl
cwtl
mov
sub
lahf
dec
movsb
xor
jmp
stos
cmpsl
lock
lods
fnsetpm(287
lods
into
pushf
add
ja
adc
or
pop
sbb
pushl
inc
out
or
shrl
cmp
je
or
push
rcrl
call
cld
call
lock
mov
push
nop
stos
insl
push
cmp
leave
aam
ljmp
adc
mov
stc
adc
sub
sub
mov
pop
inc
hlt
icebp
test
mov
in
pop
sarl
cmpsl
ja
testl
sub
imul
sub
pushl
cmp
mov
push
inc
and
outsb
movups
push
int3
pop
xor
mov
push
jecxz
inc
pop
adc
dec
int3
lock
call
ljmp
js
lret
imul
out
lock
xchg
inc
outsl
leave
push
jmp
mov
mov
ja
incl
inc
push
xchg
outsl
adc
and
xor
in
loop
arpl
push
incl
adc
mov
mov
add
dec
pop
nop
arpl
pop
or
clc
mov
shl
fbstp
inc
mov
sub
out
fisubl
ljmp
bound
fwait
inc
dec
leave
popf
and
icebp
rclb
inc
ljmp
push
xchg
dec
push
jp
incl
dec
pop
leave
mov
lods
mov
daa
push
insl
lods
insl
cmp
fsubrs
fdivrl
push
xchg
lods
lcall
lret
stc
fdivs
jg
jmp
cmp
jle
inc
xor
xlat
jne
idivl
sahf
clc
ljmp
add
subl
push
push
mov
mov
inc
test
test
sub
cmp
jmp
test
xor
and
push
mov
xchg
sub
or
cltd
jge
mov
mov
ljmp
mov
push
jecxz
mov
mov
arpl
mov
push
dec
fwait
mov
push
incl
add
or
divb
cmp
jb
and
jnp
xor
icebp
pushf
adc
fisttpl
cwtl
fidivrl
fndisi(8087
cwtl
jmp
daa
idivb
fisubrl
inc
and
movsb
in
fldl
jecxz
fwait
dec
stos
jle
icebp
sti
mov
xchg
dec
jp
sbb
pop
ficoml
or
or
shrl
jg
and
mov
xor
or
insb
inc
sbb
xor
jns
scas
lcall
jmp
popf
xchg
je
adcb
push
orl
stos
fstp
data16
es
incl
jle
xchg
negb
aam
push
repz
mov
in
mov
mov
decl
call
mov
adc
jecxz
adc
addl
call
addr16
push
movsb
icebp
pcmpeqb
test
ret
pop
outsb
or
sti
pop
and
mov
or
mov
cmp
addr16
mov
adc
das
and
xlat
and
jmp
jo
ss
sub
stc
outsb
and
sbb
or
push
xor
fwait
sub
es
movsb
push
pop
aad
mov
in
mov
sub
mov
mov
das
mov
enter
stc
cmp
int
daa
and
add
and
pop
fimull
xchg
mov
inc
and
pop
xor
jne
cmp
mov
movsb
and
dec
adc
or
push
shrl
or
notl
and
inc
xchg
mov
sbb
xchg
adc
jbe
inc
lods
jno
imul
insl
pop
cmp
mov
cmp
and
sub
or
mov
sub
sub
xchg
sub
test
mov
ret
inc
addl
lods
loopne
jnp
fwait
daa
pop
push
mov
sub
and
test
mov
das
arpl
roll
lods
jmp
sbbl
inc
shll
sub
imul
sarl
cltd
add
and
fstpt
xchg
inc
insb
or
movsl
pop
notb
inc
aaa
mov
pop
aad
add
mov
lea
scas
arpl
adc
insb
or
lss
loopne
jmp
sbbl
or
ds
lods
jne
call
mov
add
ljmp
xorps
xlat
ret
pushf
imul
call
add
adc
xor
pop
jb
arpl
das
sbb
fdiv
fimuls
adcl
sbb
xor
jg
jl
jecxz
inc
xor
out
push
cmp
pushf
movsb
jmp
sti
lods
push
loop
cli
mov
or
push
jle
mov
push
cs
cmpsl
jg
ljmp
xchg
rclb
xchg
inc
adcb
adc
shrl
inc
jmp
lods
sub
mov
enter
mov
mov
in
pop
scas
aam
aas
or
sar
in
inc
adc
adc
out
out
jnp
pop
sbb
cmp
adc
ja
in
popa
pop
inc
jmp
xchg
mov
mov
imul
cmp
and
cmpsl
test
push
push
adc
daa
ret
fcomps
xor
jne
mov
inc
ja
popa
mov
cmpb
fcmovnu
cld
cmc
mov
xchg
xlat
sub
jb
xchg
dec
inc
pop
xchg
dec
aas
adc
jmp
std
das
inc
jl
imul
loop
shlb
shl
bound
and
aad
sbb
jnp
jge
xor
mov
and
add
sbb
pushf
pop
cmc
push
jp
stos
jecxz
mov
call
cmp
jecxz
mov
and
movsl
push
movsl
out
jecxz
and
mov
ds
decl
hlt
loope
mov
out
jb
sarl
dec
outsl
push
xor
cltd
mov
push
ljmp
sti
sub
or
xchg
xor
ss
sbb
arpl
mov
pop
mov
sbbb
cmp
movsl
mov
dec
mov
test
lds
pop
pop
xlat
es
mov
ljmp
pop
push
mov
pop
addr16
dec
stc
mov
les
mov
jo
incl
xchg
and
sbb
mov
aas
adc
jp
incl
pop
cli
xor
mov
movsb
aad
loopne
in
in
loop
mov
jp
loopne
int3
xchg
adc
in
mov
insl
mov
sub
pop
mov
adc
inc
shlb
jbe
push
fdiv
xlat
loopne
lea
test
jge
adc
push
jmp
decl
cs
rolb
sbb
addr16
xor
stos
fists
adc
test
cwtl
mov
dec
mov
dec
call
iret
xchg
pop
sbb
cld
adc
aam
push
jmp
xor
out
je
out
out
data16
mov
rcrl
xchg
repz
push
jmp
jg
push
loop
xor
jbe
or
aas
mov
sub
sbb
aaa
cld
pushl
adc
test
lock
pop
sti
aam
adc
imul
call
aaa
mov
push
outsl
stc
ficoml
dec
dec
pop
imul
cmc
sbb
jmp
sti
cmpsl
adc
lods
testb
sbb
pop
pop
mov
stc
dec
pusha
cmp
repz
ds
cli
ja
incl
sbb
xchg
sub
mov
or
popl
stos
mov
ja
ljmp
xchg
cmp
and
dec
insb
push
mov
rcrb
and
lcall
xor
fdiv
dec
imul
int
cli
push
or
pusha
outsl
cli
jg
stos
aaa
sbbl
int3
int
or
fsubs
xor
fcmovne
pushl
cld
std
dec
ror
fimull
loop
fwait
cwtl
push
scas
out
pop
sbb
testb
decl
mov
notl
idivb
jp,pt
popa
cltd
adc
lods
popa
jnp
pop
daa
push
mov
les
andl
fildl
or
imul
push
add
shlb
adc
imul
xlat
inc
or
arpl
mov
iret
xor
adc
inc
bound
mov
lds
adcb
les
jno
adc
test
adc
pushf
push
scas
ja
inc
cmp
clc
sub
ljmp
jbe
push
jnp
call
jmp
outsb
cmp
pop
lret
sbb
mov
sub
mov
decl
mov
pop
jbe
mov
pop
js
movsl
dec
aad
faddl
shrb
icebp
push
fisttps
ficoms
imul
jg
bound
imul
sahf
mov
bound
or
sbb
call
pop
bound
leave
in
xor
negl
insb
xchg
pop
dec
pop
jns
push
mov
mov
cli
call
dec
imul
jae
fwait
or
pop
add
adc
mov
mov
push
add
nop
inc
add
add
subl
cltd
aas
mov
dec
test
cmp
xor
fdivrp
mov
std
adc
cmp
out
hlt
sbb
inc
sbb
aad
pop
rcrl
push
pusha
push
jne
shr
shll
mov
movb
sbb
aas
pop
jle
test
and
adc
decl
ret
mov
cmp
ss
sbb
and
push
icebp
cmp
mov
pop
dec
pop
and
lret
pushf
push
leave
adc
adc
dec
stc
add
mov
and
lea
and
add
call
lret
push
repz
call
aam
or
jecxz
push
das
adc
in
sub
arpl
xchg
fsubrs
mov
ljmp
movsl
xor
or
add
pop
inc
mov
adc
movsb
push
pop
cmc
les
pusha
add
jmp
mov
inc
aam
pop
and
repnz
adc
fidivrs
in
stc
jg
and
sub
jmp
adc
cwtl
or
xor
sbb
mov
fidivl
inc
mov
jmp
mov
mov
mov
test
dec
rcll
loope
aad
and
test
sub
ljmp
or
mov
cld
mov
and
pop
mulb
dec
lcall
ja
and
sbb
arpl
sbb
jno
cmp
cmp
add
stc
decb
fcomip
popa
mov
into
or
fldcw
push
dec
sti
mov
loope
inc
push
decl
or
fnstcw
jo
icebp
jg
pop
dec
out
cmpb
dec
mov
int
sar
mov
and
pop
mov
adc
sbb
mov
popf
jbe
stos
in
fcoml
aaa
adcb
decl
sub
js
inc
cmp
pusha
fisubrs
aaa
mov
mov
loop
xor
daa
xor
iret
into
xor
jecxz
clc
sbb
mov
test
push
icebp
outsl
or
cld
outsl
sub
xchg
adc
ss
test
inc
xchg
movsb
incl
jae
cs
popf
fnsave
bound
mov
fcompl
cwtl
aad
stc
into
cmp
xchg
decl
pop
adc
aaa
lcall
and
fucomi
outsl
popa
push
cmp
jg
insb
pushl
out
and
pop
sub
pop
ffreep
insb
mov
out
hlt
pop
ss
test
es
lcall
shld
xchg
js
adc
sbb
push
test
subb
pop
lcall
and
mov
ret
stc
push
in
push
movsl
sar
out
cld
cmc
sti
push
pop
das
cli
ljmp
cmp
out
lahf
sar
out
jmp
mov
xchg
pop
mov
lahf
mov
pop
adc
adc
jb
push
ljmp
cmp
in
xchg
shrb
imul
stos
and
outsb
xchg
sar
mov
ljmp
jg
mov
out
dec
xchg
testl
mov
xchg
mov
jecxz
xchg
mov
adc
jp,pt
jb
out
rclb
xchg
mov
xchg
in
aaa
incl
notl
mov
sahf
xchg
mov
jg
sahf
lcall
scas
lea
test
sbbb
fwait
adc
daa
mov
jo
arpl
sub
mov
call
aam
jl
pop
inc
add
mov
mov
xchg
mov
loope
mov
out
popa
into
xchg
ss
aaa
movsl
lcall
movsb
scas
mov
loopne
clc
fists
rcll
jg
pop
push
test
lahf
mov
out
mov
xchg
xchg
pop
xchg
aam
add
dec
test
shrb
clc
out
incl
mov
jmp
mov
int3
and
out
inc
inc
mov
or
popf
xchg
mov
subl
ljmp
clc
xchg
scas
mov
push
jle
xor
cmp
xchg
out
push
dec
mov
mov
incl
lea
xchg
sbbl
xchg
lcall
pop
jno
std
mov
add
ds
dec
xor
jle
das
add
cmp
cmovle
mov
add
aam
push
cli
mov
sbb
das
push
addb
fstl
mov
mov
inc
rorl
fwait
push
mov
mov
xorl
dec
fdivl
pusha
xchg
adc
sahf
daa
jae
scas
jo
mov
mov
fbld
xor
scas
loop
push
adcl
das
pop
push
push
in
in
cld
out
mov
inc
out
imul
mov
mov
incl
pop
push
or
pop
outsb
out
add
push
sub
mov
or
cmp
pop
jle
add
add
sarb
iret
sti
push
xlat
inc
cmpsb
fidivrs
push
outsl
add
or
stc
iret
mov
ds
push
mov
push
in
adc
or
dec
iret
jne
icebp
jne
pusha
repz
inc
jmp
mov
incl
js
jmp
mov
dec
out
out
and
fistpll
dec
adc
or
outsl
idiv
out
dec
jle
and
repz
and
push
or
pop
sub
sub
push
outsl
sbb
jg
add
fidivs
icebp
mov
ljmp
sbb
sub
pop
and
mov
in
cmp
adc
cmp
mov
add
dec
sub
push
inc
push
sub
iret
jbe
fdivs
push
cwtl
inc
dec
jg
xchg
xor
mov
cmp
mov
mov
addr16
xor
cltd
inc
mov
jo
fwait
orb
scas
movl
sub
inc
inc
mov
mov
inc
cmc
addr16
dec
adc
cmp
ljmp
lret
jle
enter
mov
cmp
out
xor
push
out
inc
or
div
jo
jecxz
pop
mov
mov
outsl
jae
es
mov
loope
std
arpl
pop
lods
test
negl
incl
sub
mov
lods
sbb
mov
pxor
out
std
jmp
mov
sarb
loopne
inc
cmpsl
xchg
cmp
pushl
lcall
cs
jbe
pushw
adc
hlt
pop
fwait
popf
jb
pop
daa
push
gs
cmp
in
stos
into
sub
addr16
push
adc
jle
mov
pushf
rorb
std
add
nop
fnstcw
mov
gs
cmp
cmp
inc
fimuls
insl
divl
fwait
mov
out
xchg
mov
jmp
aad
jg
leave
setg
aad
jnp
icebp
or
mov
or
add
lock
testb
xorl
cmpsb
div
xlat
dec
mov
xor
inc
lcall
shlb
mov
mov
je
jo
js
cmp
aaa
cld
pushl
jb
mov
lock
cli
pop
out
cmp
popf
lahf
jle
xor
sbb
data16
imul
inc
mov
jecxz
or
in
aaa
mov
push
outsb
adc
jp
fwait
xchg
mov
cli
sbb
lea
in
outsl
push
mov
sub
into
js
lcall
fisttps
add
imulb
out
shlb
mov
test
lock
imulb
dec
loope
push
es
popf
xchg
ljmp
loope
inc
jg
mov
in
xor
into
pop
enter
dec
sbb
cs
mov
mov
inc
mov
dec
mov
mov
stos
std
mov
adc
sub
jbe
repz
stos
andb
adc
enter
rcrb
jle
push
popl
dec
es
jp
adc
push
mov
jb
mov
ficomps
xchg
push
jle,pt
mov
inc
fidivrs
mov
cs
push
fs
mov
push
jp
movsb
add
jo
hlt
imul
or
mov
clc
stos
fnsave
daa
in
lcall
ret
sti
sub
out
and
iret
pop
shlb
or
out
out
push
out
lcall
ljmp
fldl
fiadds
mov
xchg
aaa
sub
fdivrp
clc
mov
cmc
dec
pop
jg
adc
mov
xchg
mov
push
push
cli
mov
decl
mov
dec
cmp
rolb
push
mov
push
scas
pop
outsb
cmp
iret
insl
decl
and
xor
dec
push
gs
inc
jns
dec
fs
sbb
mov
dec
dec
jp
fs
dec
dec
push
jno
je
dec
xor
insl
arpl
cmp
addr16
call
push
xor
push
aaa
push
insl
push
dec
arpl
dec
jp
inc
push
pop
inc
jbe
dec
cmp
ljmp
inc
aaa
inc
dec
push
imul
push
inc
push
dec
push
push
xor
xor
inc
push
je
xor
decl
xor
jno
pop
nop
addr16
push
ss
push
jp
push
je
dec
jp
loopne
call
jns
dec
pop
pop
xor
push
push
push
push
push
outsb
jne
xor
pop
ret
jmp
dec
gs
xor
xor
inc
jbe
dec
outsl
push
push
dec
insl
push
dec
xor
dec
ja
jb
pop
ljmp
xor
xor
dec
aaa
pop
push
js
xor
popa
push
cmp
push
bound
push
incl
ss
ja
inc
bound
bound
xor
push
inc
incl
push
dec
push
xor
push
jo
imul
xor
fs
dec
ret
lcall
and
inc
ss
dec
push
push
push
pop
insb
dec
pop
insl
je
fistpll
insl
outsl
jle
dec
dec
inc
xor
push
outsl
addr16
inc
inc
pop
clc
add
dec
sub
jns
dec
jb
inc
jne
push
fs
ljmp
mov
arpl
dec
inc
pop
insl
push
jp
imul
dec
jbe
insb
jbe
jns
or
das
xchg
dec
dec
xor
insb
push
cli
outsb
cmp
push
insb
std
jge
js
xor
popa
jo
add
inc
push
push
je
je
or
outsb
addr16
hlt
jg
add
sbb
pop
jae
xor
xor
mov
or
mov
sarb
loope
daa
shl
mov
lcall
in
sahf
in
ljmp
sub
adc
jmp
mov
shl
dec
in
sahf
inc
jecxz
repz
fisubs
jo
out
js
test
pop
mov
inc
cmp
sti
idiv
jo
cmp
inc
sub
outsb
sbb
jbe
push
or
push
mov
sbb
push
adc
and
jnp
int
adc
adc
sub
or
fildll
pop
cli
sbb
jbe
dec
lahf
xor
mov
and
inc
mov
lods
aad
rorb
push
jle
xor
loop
loopne
inc
xorb
ret
xchg
dec
dec
mov
push
mov
insl
jbe
pop
subl
cmpsb
xchg
push
xchg
adc
les
jmp
idivb
daa
lods
std
out
dec
test
dec
push
popf
inc
test
pop
jnp,pt
js
rorb
jnp
sti
jbe
adc
andb
adc
cvtps2pi
leave
push
in
sarl
push
pop
insb
jo
inc
fisttpll
inc
push
sbb
adc
movl
xor
ret
aam
js
add
pop
jbe
cmp
pusha
xchg
xchg
loop
xlat
inc
aas
inc
enter
push
cmpsb
test
or
pop
jbe
pop
jge
lock
test
outsl
outsb
push
cmp
mov
cmp
inc
adc
fnstenv
sub
pop
xor
cmp
sti
nopl
aas
leave
mov
sub
data16
fisubl
pop
push
jo
out
fldcw
icebp
sarl
add
mov
nop
sar
data16
push
mov
jmp
pushl
jns
mov
push
out
mov
sti
or
lds
jge
sti
fiaddl
das
jge
insb
les
iret
lock
jb
jmp
call
out
into
loope
lods
fdivrs
daa
push
jae
loop
pop
inc
icebp
dec
fucomi
dec
mov
scas
ds
mov
lds
in
mov
shrl
out
imul
gs
std
call
std
xor
cs
insb
pop
inc
sbb
gs
jb
je
arpl
push
arpl
outsl
outsb
cs
gs
jbe
add
pop
jb
mov
stos
das
dec
outsb
and
imul
in
in
jb
jne
inc
jb
sbb
outsl
arpl
add
aaa
pop
xor
push
mov
outsl
xchg
imul
call
jns
push
outsw
jb
fsincos
insl
popa
outsb
arpl
sbb
push
adc
xorb
jb
cmp
popa
fs
fs
pop
inc
ret
pop
push
mov
fs
xor
adc
dec
loopne
out
fsubrp
pop
push
imul
dec
jne
popa
ss
mov
jns
sub
sub
fidivs
jae
movsb
mov
pop
arpl
sbb
sbb
jb
jns
js
push
inc
mulb
rorl
and
andb
inc
and
mov
fldt
inc
fs
jae
imul
hlt
gs
jbe
mov
push
or
inc
imul
or
ss
and
inc
ret
popa
xor
inc
mov
insl
mov
xor
sbb
popf
mov
sbb
fs
jb
scas
cmp
xchg
jae
mov
cld
fisubs
xor
call
push
outsb
push
cmp
jo
xor
shr
out
out
fwait
push
outsl
xchg
and
imul
add
insb
xorb
jo
push
cmp
popa
imul
or
pop
adc
pop
push
cmp
adc
push
jns
inc
shl
in
jbe
add
jb
mov
dec
sub
gs
jae
das
jae
pop
cld
inc
dec
fsubl
gs
outsl
mov
dec
gs
xor
inc
jbe
adc
addr16
add
or
mov
mov
mov
mov
popa
jne
jg
jns
mulb
sbb
pop
pop
aas
and
dec
mov
daa
lret
in
loopne
sbb
or
jno
cmpsb
leave
inc
out
push
xor
sub
mov
lcall
push
insb
push
dec
bound
repz
jo
cmpsb
pop
cwtl
pop
or
scas
loop
mov
xlat
fldl2e
mov
mov
jne
cmp
roll
adc
lret
sub
fstps
xchg
arpl
and
test
fimull
add
mov
cwtl
loopne
jo
lods
popl
jne
insb
inc
insb
push
sbb
adc
xchg
sahf
jae
mov
jo
jae
inc
push
mov
xchg
sub
fistl
xorb
rclb
inc
sbb
rclb
ret
frstor
adc
insl
add
inc
loop
int
mov
insl
inc
or
xor
jo
loop
movsb
mov
movsl
mov
jmp
mov
sti
push
sbb
or
add
out
imul
inc
push
loopne
pusha
xor
lds
pushf
add
data16
in
jmp
ret
fistl
push
xor
inc
imul
sub
stos
xchg
cwtl
rcrb
movsl
jecxz
pusha
jno
inc
int3
idivl
icebp
push
jo
add
xor
and
cmp
adc
jbe
and
aaa
js
jo
lock
movsl
shr
jecxz
outsl
push
fdivs
pop
inc
inc
cmpsl
push
xchg
and
inc
daa
sbbl
je
incl
jne
cld
roll
push
dec
addr16
or
push
push
test
in
out
xchg
pusha
mov
sbb
fdivs
in
fldl
inc
sbb
lret
xlat
mov
mov
incl
enter
and
add
subl
adc
inc
add
call
adc
add
add
nop
inc
add
add
subl
inc
add
pusha
adc
push
xchg
test
and
mov
add
xorl
mov
sub
popa
icebp
inc
adc
adc
or
mov
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
inc
adc
daa
sahf
xchg
inc
repnz
cmp
test
jae
xchg
negl
data16
outsl
xor
iret
repz
pop
push
fcomi
xchg
mov
lock
repz
jo
adc
xor
cmpb
mov
iret
repz
in
cld
jno
inc
push
fs
repz
pushf
ret
jns
cmpsl
stc
or
xor
jp
jns
out
mov
call
int
jae
inc
push
repz
sahf
jae
jae
iret
repz
push
inc
push
iret
repz
out
sbb
jns,pn
out
push
jp
mov
sahf
ja
out
cld
push
jbe
push
xor
sahf
out
push
bound
test
jl
out
fdivp
push
ja
iret
repz
ss
insb
jle
sahf
ds
repz
aam
hlt
add
iret
repz
pushw
cmp
xchg
cmp
repz
int3
fsubrp
jns
cmpsl
stc
push
jns
pop
insb
jle
jns
out
mov
repz
adc
inc
insb
jle
ds
repz
out
jnp
sahf
out
push
inc
push
push
out
ljmp
out
push
inc
push
jp
mov
jl
out
call
iret
repz
pop
push
lcall
add
jns
out
cmp
adcb
mov
aam
iret
repz
testb
push
es
cmp
repz
push
cmp
repz
mov
out
sahf
cmpsl
sub
js
scas
dec
repz
rcl
or
repz
js
lcall
into
hlt
add
push
out
sahf
out
dec
pop
outsb
jle
repz
movsb
lret
subl
cmp
repz
jb
test
push
cmp
decb
sub
cmp
jnp
ds
push
bound
repz
test
int3
out
adc
sbb
inc
push
fs
out
outsb
mov
sahf
out
testb
iret
repz
sbb
push
push
cmp
repz
mov
lcall
push
sbb
jns
out
sub
push
pop
sahf
out
sahf
insb
xchg
cmp
jo
push
or
iret
repz
dec
bound
mov
iret
repz
loopne
mov
mov
repz
push
sbb
sub
inc
cmp
repz
je
mov
repz
fsub
in
out
lcall
ss
out
sahf
push
pop
insb
jle
lcall
loopne
cld
repz
repz
mov
xor
repz
js
lods
mov
sti
cmp
testb
repz
ss
dec
outsb
mov
repz
movsb
mov
iret
repz
sbb
sahf
out
push
push
xchg
mov
fsubrp
repnz
repz
push
mov
xor
iret
repz
pusha
jb
mov
repz
mov
cli
sahf
out
xchg
xor
out
push
jo
xchg
sahf
xlat
jns
out
ret
sarb
xor
adc
dec
push
repz
rep
jbe
stos
les
call
sahf
out
sahf
and
cmp
jo
jnp
out
pushf
scas
enter
sahf
out
out
xchg
push
sub
dec
jns
out
pop
insb
jbe
mov
lods
rcr
in
sub
rolb
mov
pop
adc
inc
push
inc
call
push
add
das
ud0
inc
push
jae
addr16
and
pushf
push
push
addr16
sbb
int3
cs
call
test
push
addr16
dec
addr16
pop
lods
aas
sub
cmp
fdivl
aam
mov
or
mov
les
addr16
dec
sub
mov
addr16
mov
adc
cmp
jmp
out
mov
add
scas
addr16
out
addr16
jecxz
addr16
mov
sti
xchg
testl
mov
andb
andb
jle
xor
mov
popf
sbb
mov
insb
fistps
adc
sbb
fwait
fistpll
out
fdivl
jae
loope
rcr
mov
fldcw
data16
jmp
in
pop
jns
ja
jne
inc
fwait
int
mov
jno
outsl
insw
push
jle
mov
insb
addb
js
mov
fwait
int
nop
aas
test
and
push
cld
mov
scas
into
pop
adc
xchg
imul
dec
xor
and
call
cld
outsl
xlat
pop
insb
aas
in
addr16
lea
xor
fsubs
push
mov
in
dec
sub
jge
push
sbb
cs
insl
lcall
add
ss
or
add
pop
dec
cmc
fs
outsl
add
repz
push
add
cmp
cld
ss
mov
decl
push
mov
lcall
nop
xchg
mov
fwait
mov
mov
les
data16
mov
les
pop
mov
in
fs
push
data16
hlt
jo
push
lock
out
pop
in
shll
lret
push
mov
ss
int
jbe
xchg
rorb
ljmp
test
sbb
dec
push
int3
pop
push
push
jl
dec
push
pop
push
in
sub
mov
fs
divb
push
mov
push
in
jecxz
fs
mov
fs
test
int
sbb
cltd
mov
repz
out
and
fs
mov
orl
xchg
fs
mulb
sbb
or
add
sub
mov
push
test
ss
push
test
add
push
mov
sbb
lds
incb
dec
fisttpl
push
push
xor
ss
idiv
push
sbb
pop
jae
inc
push
push
fs
add
cld
push
fs
data16
idiv
push
adc
or
push
push
je
fdivp
mov
fnstsw
push
decb
dec
push
jg
mov
shll
movsl
fs
mulb
shll
mov
mov
lods
inc
cmpsl
fs
test
fs
xor
fs
decl
mov
inc
lods
loope
gs
cmp
xor
ljmp
gs
mulb
in
xor
jmp
cmp
sub
pop
lock
stc
add
or
repz
jmp
xor
fwait
cli
sti
or
insb
idiv
push
decb
push
cwtl
int
xchg
stos
fs
push
xor
mov
or
push
dec
int3
hlt
mulb
fwait
ret
incb
mov
add
jo
insb
add
fs
idiv
push
pusha
ss
or
decb
ret
fldcw
jbe
jp
fs
mov
ljmp
push
cmp
gs
jnp
sub
movsb
sbbl
mov
sbb
mov
xchg
xchg
and
call
xchg
gs
subl
add
jne,pt
xorb
enter
in
call
mov
mov
gs
cwtl
mov
xchg
xchg
jg
mov
test
ret
xchg
jns
pushf
xchg
cmpsl
lea
mov
mov
scas
cmpl
adc
cld
or
in
pop
insb
mov
gs
jmp
fsubp
adc
ljmp
in
call
inc
push
psubsb
loope
orl
sbb
fs
outsl
out
jne
test
je
sub
jmp
inc
push
jl
js
fdivrs
jle
cmp
mov
mov
xor
inc
gs
sub
inc
cmp
dec
divb
mov
dec
out
inc
push
dec
or
xchg
pusha
fistl
enterw
dec
cmp
cs
fcompl
loopne
xchg
xor
fdivl
mov
das
movsb
inc
sub
lcall
sahf
adc
mov
and
or
data16
data16
sub
in
incl
data16
cmp
addb
callw
data16
add
in
stc
out
jge
pop
addb
rorl
data16
add
jecxz
movl
xchg
mov
mov
orb
lret
fwait
gs
xchg
faddp
pop
data16
jle
arpl
xchg
pop
push
xchg
addr16
xchg
insl
aaa
sub
lock
push
fwait
out
testb
in
mov
jne
push
imul
lock
jb
imulb
outsb
inc
lds
decl
test
cs
gs
lret
adc
shll
incl
cbtw
jb
data16
inc
data16
pop
data16
pop
data16
data16
in
pop
cld
push
dec
data16
and
and
dec
cmp
lock
cmp
sub
adc
out
pop
data16
mov
adc
mov
je
pushl
bound
bound
mov
bound
andb
dec
xorb
jbe
inc
out
inc
ret
mov
data16
sti
fbstp
iret
xchg
bound
adc
les
data16
sbb
mov
loopne
mov
push
inc
lock
mov
gs
mul
into
sti
sub
int
xlat
push
add
gs
or
cwtl
lcall
jo
jb
call
data16
rorb
bound
jl
je
bound
outsb
inc
pop
insb
inc
push
push
dec
mov
dec
data16
push
pop
ds
mov
push
test
dec
pop
aam
pop
push
clc
pop
push
mov
lcall
into
bound
fsubl
pushf
fisubl
enter
lds
mov
push
mov
lock
bound
arpl
xor
cmpsb
xor
clc
jno
fisttps
cmpsl
cmp
lcall
loopne
arpl
add
leave
add
iret
add
pop
lock
std
jmp
or
mov
or
adc
arpl
mov
mov
js
in
xchg
cmpsb
jle
pop
pusha
lcall
dec
cmp
les
fwait
data16
dec
fbstp
push
cmpsb
xlat
push
out
insb
enter
lcall
and
lock
hlt
cmp
bound
cmc
bound
xor
ss
stc
es
sti
ret
ljmp
bound
std
in
push
out
dec
dec
shll
ret
bound
adc
bound
mov
jle
subb
dec
and
outsb
and
jg
ljmp
push
inc
dec
arpl
inc
arpl
test
push
popa
arpl
dec
insb
or
pop
arpl
dec
cmp
arpl
and
mov
and
sub
arpl
sbb
arpl
sbb
push
and
cld
fbstp
cmpsb
or
arpl
test
fs
mov
ja
lods
arpl
js
cmp
jbe
out
test
repnz
xchg
stos
stos
xchg
arpl
cmpsb
arpl
jge
lods
mov
cmc
pop
mov
or
xlat
adc
and
lret
push
jle
or
scas
fcom
dec
ret
sub
test
in
addb
scas
out
mov
movsb
mov
fisttpl
outsb
jl
mov
je
push
jl
std
lock
arpl
dec
push
or
xorb
push
mov
shrb
outsb
inc
arpl
jo
arpl
insb
dec
fcoms
in
arpl
arpl
inc
lret
pop
jae
sbbb
out
loop
mov
jle
fisubs
xchg
int3
xchg
and
ss
cwtl
xchg
push
xchg
arpl
pop
test
fsubrp
scas
outsb
out
es
incl
inc
sub
cmp
fs
xor
fs
mov
fs
icebp
sub
mov
cli
imull
add
cld
incl
adc
clc
add
fs
or
movsb
push
push
or
xchg
mov
ljmp
clc
xchg
pop
xchg
pusha
mov
inc
pop
arpl
stos
lea
mov
lock
je
arpl
insl
push
arpl
imul
lret
jno
roll
ret
pop
push
iret
jmp
mov
sti
into
out
rcrb
arpl
movsb
mov
arpl
lods
mov
aad
add
ja
arpl
mov
jne
mov
fistpl
dec
fidivrs
shlb
int3
push
pop
push
pop
dec
xor
push
fs
pop
push
mov
pop
fs
das
popa
andb
les
sbb
decl
pop
fs
sbb
jp
sub
call
cld
int3
das
fs
xor
sbb
xor
test
add
stos
push
and
stc
divb
loop
dec
push
push
ret
sub
das
push
ljmp
pushf
aas
push
and
lock
jl
popa
push
adc
dec
xor
adc
adc
data16
lods
ljmp
mov
push
fs
inc
aam
cmp
out
push
pop
inc
psubusw
sbb
decl
push
ljmp
outsb
addb
sub
inc
jmp
inc
xchg
fwait
dec
xchg
sub
insb
aaa
mov
xchg
xchg
cmp
push
jae
repz
int
incl
insb
cmc
sti
lret
adc
hlt
pop
adc
cmp
iret
pop
mov
fcomip
decl
adc
mov
adc
sub
xor
cld
scas
push
sbb
std
scas
call
mov
push
xor
mov
sub
xor
stc
insl
ds
loopne
decl
xchg
jp
push
mov
xor
call
scas
push
in
xchg
inc
bound
mov
outsb
sbb
xor
fistl
arpl
push
cmpsb
je
xorl
push
pop
mov
push
cmp
out
cli
cmp
clc
insl
mov
jge
xchg
push
inc
sti
adc
push
sqrtps
ljmp
mov
mov
out
outsb
addr16
pusha
je
mov
outsl
mov
push
lcall
add
lods
js
push
in
mov
hlt
insb
mov
ds
aam
inc
add
cmpsb
push
push
out
insb
pop
nop
es
in
mov
or
push
sbbl
push
lea
lods
test
cld
movsb
lret
jo
clc
jg
cmp
push
lods
ficoms
mov
ss
cld
rcrb
mov
ljmp
lret
insb
iret
shrb
mov
insl
dec
xlat
pop
jo
fcoms
mov
loopne
fistl
or
jmp
pop
jno
and
insb
fsubr
divl
ret
repnz
ret
jle
aam
dec
cmp
pushl
mov
jl
mov
mov
mov
jecxz
insl
sbb
imul
lods
push
add
stos
insb
add
fbstp
insl
hlt
loope
outsl
sub
and
inc
add
punpckhdq
pop
fildll
insb
mov
insl
pop
stc
ds
xor
outsl
outsl
insb
push
mov
jb
push
jo
jle
ljmp
mov
int3
xchg
jge
test
add
ja
neg
insb
sbb
lret
int
shlb
insl
fidivrs
int
mov
in
cwtl
dec
push
repnz
outsb
mov
out
fwait
dec
out
push
test
pop
jmp
outsb
sub
pop
mov
imul
mov
jbe
ds
neg
data16
xor
jle
shlb
sub
xor
outsl
ss
cmpsl
adc
sbb
sbb
jo
and
fwait
pushf
dec
dec
jo
dec
mov
add
fidivrs
pop
insl
mov
jbe
cmp
adc
jmp
in
jmp
insb
dec
aad
pusha
mov
sub
fdecstp
ffree
jno
insl
imul
in
adc
outsb
pop
ds
in
mov
repz
and
push
jo
into
mov
jle
out
mov
clc
lahf
push
insl
jl
xchg
insb
je
mov
sub
rclb
outsl
fadd
in
into
out
mov
push
jo
mov
mov
clc
fildll
adc
jo
fs
outsl
adc
out
outsb
dec
pop
mov
pusha
scas
push
add
out
lock
xchg
loop
pop
jbe
sti
sub
cmpb
call
pushf
xor
cmp
lods
jecxz
sbb
test
add
pushf
dec
jo
lods
xor
sti
pop
ret
dec
shrl
sarb
push
aam
xor
pushf
pop
shlb
adc
push
cld
jle
xchg
insb
in
fstp
outsl
push
sbb
imul
sahf
dec
pop
cmpsl
data16
outsl
lcall
pop
jns
cld
push
inc
pop
out
sub
es
inc
ds
cmp
mov
push
arpl
outsb
mov
pop
jne
cmp
inc
push
push
insb
insb
push
scas
pop
jb
int
repz
push
xor
js
mov
data16
cmp
jae
pop
les
push
pushl
fiadds
inc
mov
adc
insl
in
or
inc
push
repnz
outsl
sbb
jae
lock
fisubrl
outsl
fwait
pop
xor
loop
outsl
hlt
hlt
xlat
repnz
incb
notb
fwait
or
xchg
ljmp
hlt
push
fildll
add
xor
daa
insl
insb
into
jb
jo
clc
mov
cs
lcall
jl
push
je
xchg
scas
lcall
sarb
jo
lahf
pop
fdivp
inc
jbe
xor
outsb
decb
jno
adc
aaa
cld
mov
dec
pop
inc
pop
add
xchg
cld
popa
cmpsb
push
insb
mov
scas
dec
sub
mov
pop
xchg
out
decb
push
int
pop
ds
xor
incb
lods
jb
add
incb
sub
jg
aas
adc
cmp
pop
sub
gs
cld
outsl
ss
sub
mov
push
outsl
ficomps
pop
paddb
fsin
jg,pt
jecxz
jne
xlat
outsb
adc
push
data16
fwait
cld
pushf
clc
push
fimuls
in
into
dec
call
mov
sahf
fsubp
idivb
ds
cld
jle
shll
repnz
outsb
pushf
out
call
and
std
outsb
je
pop
popa
lods
test
scas
outsb
faddl
xor
or
mov
rolb
jbe
mov
mov
in
mov
fisubrs
stc
add
pop
adc
cmp
je
sbb
outsb
cld
pop
sub
call
pop
inc
dec
ds
inc
push
pop
shlb
pop
sub
inc
ds
xor
js
outsl
mov
pushl
sub
outsb
xchg
jg
pop
mov
mov
mov
decb
incb
pop
cld
mov
outsb
inc
sbb
push
jo
in
mov
pop
push
or
repnz
popa
sbb
ja
rorb
sahf
cmp
mov
outsb
hlt
arpl
pusha
sub
dec
shl
xchg
mov
inc
mov
mov
mov
insb
lret
data16
inc
in
ljmp
loopne
aam
fidivl
test
adc
faddl
or
and
subb
hlt
mov
mov
xor
int
jmp
aaa
sbb
cld
adc
insl
rcll
imul
int
insb
pop
cwtl
daa
ds
xor
jg
hlt
lcall
jle
inc
pusha
jo
mov
jnp
bound
push
pusha
test
pop
decb
sub
les
pop
xchg
in
aaa
cld
lods
xchg
mov
pop
fisubs
imul
mov
outsb
decb
or
fwait
leave
mov
stos
push
les
dec
nop
int3
cmp
lcall
mov
and
enter
push
mov
jg
insl
xor
jle
iret
out
cmpsl
popa
pushf
ljmp
int3
loop
decl
mov
popa
je
popa
bound
frstor
or
imul
pusha
aam
cmp
movsl
popa
mov
fldt
out
data16
test
fidivs
out
cmp
incb
mov
aaa
lcall
jbe
cld
dec
sub
or
pop
ds
sbb
insb
sbb
sbb
pusha
mov
pop
cmp
sub
ss
in
ja
dec
mov
imul
pop
mov
xor
movsb
cmp
ss
xchg
decb
sbb
fidivrs
inc
lds
popa
mov
scas
in
test
scas
test
dec
stos
ja
adc
mov
sahf
cmp
fisttpl
ljmp
xchg
fwait
insl
push
mov
pop
mov
mov
mov
insb
mov
call
int3
loopne
fnsave
fdivs
cmpsb
mov
or
aam
cmp
fdivrp
sbb
mov
aaa
jb
out
insb
xchg
repnz
mov
clc
insl
aas
daa
pop
add
sub
sbb
decb
int
mov
inc
dec
ds
dec
sti
incb
push
xchg
and
cmp
ret
xor
jo
mov
jg
fwait
sub
xchg
pop
test
push
jl
loopne
insb
lods
and
dec
pop
loop
mov
push
ss
insl
mov
arpl
pushf
push
mov
int
repz
rcl
adc
aam
mov
nop
shlb
xchg
mov
ficoml
clc
jl
and
mov
stos
mov
scas
sub
rcl
stos
pusha
pushf
incb
add
or
push
cli
pusha
je
dec
jae
pushf
or
mov
xor
jge
loopne
pushl
mov
jne
movsb
mov
fst
jge
fiadds
jle
jne
pop
sub
ret
sbb
adc
lods
pusha
clc
mov
pop
inc
addr16
push
xchg
outsb
imul
outsl
jae
ss
and
pop
cmp
pusha
cmp
popf
arpl
incl
fiadds
ja
dec
jbe
dec
and
test
mov
test
mov
insl
sti
outsl
fildl
cmpsb
and
pop
test
ret
xor
lret
and
outsl
adc
sbb
mov
jp
clc
or
std
decl
mov
test
cmp
call
and
mov
or
push
push
adc
dec
mov
insl
ss
clc
lcall
scas
lods
xchg
rorl
jl
mov
cltd
push
adc
cmp
add
ljmp
and
test
xor
sbb
cltd
lea
dec
add
test
mov
mov
mov
iret
mov
xor
ret
ret
mov
movsb
lock
call
mov
cmp
ljmp
subb
loope
jnp
lods
inc
mov
cmp
adc
cmpsb
movsl
cmpsl
movsl
enter
mov
ljmp
scas
fcoms
xchg
outsl
cmp
sub
adc
fldl
add
jns
fstl
call
and
mov
and
test
push
sbb
xchg
test
ljmp
nop
or
jl
xor
stos
iret
cmc
xor
and
pop
decl
roll
xor
popf
push
sbb
negb
int3
int
xorb
mov
mov
incl
cld
dec
pop
bndldx
jbe
andl
lds
stos
sbb
jmp
adc
push
pop
cmp
data16
arpl
mulb
insl
lret
call
dec
adc
push
mov
stos
lahf
xchg
push
mov
push
lret
add
ljmp
xor
adc
add
jne
fcmovbe
into
loop
sbb
mov
arpl
xchg
rorl
dec
test
push
cmp
sub
js
testb
ds
xchg
jo
out
clc
cli
xchg
xor
sbb
jno
pop
or
inc
imul
call
shll
lcall
push
ds
leave
fsub
ds
es
movsl
dec
mov
mov
mov
idiv
decl
ja
loopne
add
mov
cmpsl
scas
and
mov
jb
rorl
stc
jl
les
loopne
lcall
pop
sub
push
inc
mov
or
push
data16
push
sub
cltd
dec
sbb
ljmp
dec
mov
xchg
mov
pop
pop
int
xor
cmpsl
ror
or
cmc
jae
or
std
and
repz
rorb
or
pop
mov
push
adc
outsb
xor
decl
idivb
pop
sbbb
cltd
mov
into
pop
adc
repnz
in
cwtl
cmp
inc
ljmp
aam
ret
fs
add
pop
jp
mov
xchg
cmp
stos
sbb
or
cli
lcall
fcmove
inc
aam
jmp
inc
push
fcoms
fldt
call
sbb
jg
xchg
shl
inc
add
leave
and
xlat
mov
lock
cmpb
fisubrl
lcall
xlat
popf
add
inc
shrl
gs
xlat
stc
cltd
inc
int3
or
test
and
ss
inc
aaa
jl
dec
pop
mov
sti
mov
les
lret
add
jp
incl
xorl
cmpb
mov
cmpsb
xor
dec
pop
cmpsl
and
or
push
pop
ljmp
test
lds
sbbl
repnz
mov
mov
mov
stc
out
pop
dec
sub
ja
mov
ret
pop
push
jle
ljmp
jp
ljmp
movb
lcall
xchg
adc
xchg
push
cltd
or
sbb
call
jne
cmpsl
les
cmc
push
decb
mov
in
mov
out
clc
jmp
or
aad
mov
jge
inc
icebp
mov
xchg
in
inc
sub
stos
mov
pushl
mov
xor
or
decl
mov
pushf
mov
daa
xor
subl
pop
lds
cmp
adc
mov
dec
icebp
jl
xor
sbb
jae
cmp
dec
mov
call
lretw
cmpsb
xchg
lret
push
mov
ss
cmp
les
jg
lcall
leave
push
icebp
hlt
cmpsb
xchg
lods
and
punpcklwd
mov
sti
dec
je
mov
sbb
jg
fisttps
inc
pop
mov
mov
sub
in
dec
loope
dec
in
decl
fsubrs
add
jle
inc
and
sub
mov
push
cwtl
mov
bound
lods
int
xchg
mov
lea
out
mov
shrb
sub
incl
call
and
pop
fcoml
inc
negl
ficompl
insb
stos
mov
fdivrl
incl
aam
ljmp
jl
lea
ja
mov
jl
add
pop
lods
push
pop
test
mov
bound
movsl
xor
inc
aaa
lcall
out
dec
movsb
jo
in
adc
movsl
xlat
jge
popf
jmp
push
add
leave
push
ljmp
jmp
cmp
and
mov
mov
xchg
pop
sar
jg
xchg
fisubrs
faddl
push
nop
sbb
adc
cld
fmul
jl
decl
lock
daa
pop
shlb
and
outsb
xchg
cmc
cmp
cmpsb
cmpsl
mov
call
lret
loope,pn
jns
data16
shll
cmp
pushf
test
jg
mov
lret
jmp
cli
les
aas
popf
loopne
aas
or
sbb
or
fwait
ljmp
lret
jb
pop
lock
xchg
push
pop
mov
cltd
iret
fidivs
cmp
xchg
popf
sbb
mov
shlb
add
cmp
add
shlb
ljmp
lods
call
mov
or
xchg
dec
outsb
jae
jo
adc
mov
jo
jecxz
dec
insl
and
das
test
adc
mov
push
lds
or
cmpsl
lret
xor
mov
mov
jp
cmp
repz
jo
imul
lcall
movsl
mov
push
jno
leave
out
repz
scas
cmp
mov
jge
lcall
push
es
mov
fsubl
les
in
push
sbbb
pushf
mov
aas
jbe
test
pop
fs
in
cmc
inc
pop
push
push
sbb
cltd
test
rclb
inc
pop
xchg
pop
lcall
mov
jno
sar
adc
dec
and
cld
push
push
sbb
push
xor
inc
rorl
stos
les
cmc
push
ret
aaa
xchg
loop
pushl
sub
and
inc
pusha
and
xor
shlb
jo
xchg
lret
lcall
push
mov
lods
xchg
adc
mov
sbb
mov
push
jmp
bound
fdivrs
call
dec
jns
mov
ja
mov
sarl
xchg
adcb
and
dec
xchg
push
push
daa
imul
add
jns
inc
jl
lret
mov
dec
stos
sahf
mov
pop
or
dec
push
mov
dec
cld
insl
sbb
sbb
xchg
mov
push
popf
push
fistl
mov
xchg
es
push
aam
or
outsl
jp
jl
imul
fs
xchg
lret
in
push
add
sub
xchg
sbb
adc
ret
js
das
push
adc
push
je
jle
pop
and
call
notl
pop
movsl
mov
fdivrs
outsl
movsb
sbb
and
inc
pop
xor
jecxz
sbb
pop
adc
cld
pushl
mov
xchg
pop
jo
pushf
fcmovb
enter
es
into
ljmp
aaa
dec
jl
jo
daa
orl
int3
add
jle
bound
lods
xchg
jp
aas
imul
jo
mov
push
cmp
imul
clc
jp
lods
xor
imul
xorb
and
cltd
lcall
add
sbb
rcrb
push
cmp
xchg
ret
push
jb
and
fmuls
call
cmpsl
push
adc
or
nop
out
mov
xchg
call
scas
nop
add
pop
xchg
test
cmp
leave
pop
sbb
dec
lahf
fbstp
push
decl
in
lahf
stos
jne
xchg
repz
sub
shrb
aam
mov
ljmp
aam
cmpsb
mov
jne
cs
cmp
pop
and
push
aad
push
xchg
mov
mov
mov
sahf
xor
pop
inc
sub
or
loop
dec
lret
push
aas
cmpsl
ljmp
test
inc
mulb
push
xchg
jg
push
pop
aad
push
cltd
out
rclb
fadd
lcall
jne
ret
push
jecxz
fmuls
sti
push
dec
iret
fcoml
pop
sti
xchg
loop
incl
mov
cmpb
xor
mov
scas
cli
mov
stc
in
mov
push
ds
pop
jbe
roll
outsb
ret
jmp
mov
outsl
push
xor
pop
sbb
stos
cld
mov
stos
mov
or
test
push
jge
or
xchg
icebp
fidivrl
icebp
neg
adc
mov
pushl
test
or
call
in
adc
sbb
mov
out
mov
jle
lret
out
repz
loope
xchg
jnp
testl
dec
clc
lods
adc
add
test
adc
test
push
inc
nop
and
jo
test
mov
int
repnz
cld
call
cmp
loope
dec
xchg
shrl
mov
mov
mov
sbb
adc
pushf
jae
clc
incl
aam
push
lock
lock
scas
push
outsb
dec
test
lea
enter
push
dec
lods
fmulp
push
andb
xor
jnp
dec
testl
js
add
lock
bound
andl
add
shlb
adc
call
and
jb
into
or
sub
out
xchg
mov
sbbb
aam
outsb
movsb
scas
jnp
call
cmp
rcrl
negb
fwait
mov
mov
xchg
outsl
fdivrp
vminsd
loopne
decl
xchg
or
insb
jmp
in
inc
mov
xchg
jmp
in
jne
shr
mov
jg
in
cmp
std
mov
pop
xlat
ret
call
mov
add
cmc
mov
sub
mov
xchg
push
jo
popa
cmpsb
stc
cli
push
lcall
xchg
pop
and
adc
movsl
add
movsb
jmp
jno
insl
mov
fildl
in
push
out
rol
sub
dec
aas
repz
cmpsb
jp
cs
and
add
xchg
decl
mov
jmp
jg
dec
jae
mov
js
cmp
xor
pop
roll
lcall
into
cmp
outsl
scas
add
jle,pt
pop
dec
es
mov
jo
insl
imul
adc
push
es
inc
pusha
adc
mov
xor
push
iret
adc
jmp
and
inc
inc
inc
in
inc
adc
mov
inc
mov
mov
add
ret
jg
cmp
cmc
aas
data16
sbb
stos
iret
adc
jge
popf
scas
ffree
loopne
leave
adc
inc
mov
ja
xor
mov
sbb
lock
decl
sbb
aam
or
rcll
mov
push
sub
in
sbb
ja
or
inc
in
lret
pop
adc
out
add
or
lahf
mov
and
sub
xor
subl
fcomip
push
push
lret
pushf
popa
sbb
add
insl
mov
jbe
ljmp
xchg
push
test
test
and
lcall
rcll
cmp
movsl
jmp
data16
jle
sub
xchg
test
ficompl
pop
repnz
push
jecxz
adcb
vdivsd
mov
pop
add
or
push
cwtl
fstpl
xlat
pop
std
mov
mov
jmp
mov
sub
aaa
push
out
xor
and
mov
cmp
jle
js
into
mov
in
insb
xchg
dec
sub
out
adc
out
incl
orl
fcomi
or
nop
cmp
mov
daa
mov
mov
adc
dec
jbe
pop
loopne
lcall
jno
push
mov
pop
and
lret
mov
push
add
daa
sub
decl
aaa
push
ret
push
xorl
lods
aam
int3
jns
or
aaa
xchg
call
roll
call
mov
ret
clc
cmc
cwtl
nop
icebp
mov
cltd
mov
test
push
jb
jbe
loopne
mov
aas
sub
nop
jbe
mov
dec
pop
mov
sub
jg
pop
or
push
push
inc
mov
jg
dec
lock
cmp
and
ror
pop
jg
mov
orb
pop
ror
push
pushf
inc
mov
addr16
lock
sub
or
sub
popa
add
xor
rolb
mov
jge
cmp
xchg
decl
lock
xchg
push
mov
ret
dec
push
bound
clc
andb
mov
call
and
lods
hlt
icebp
mov
sbb
sbb
js
in
ds
mov
fsubrl
pop
call
and
or
xchg
or
dec
sbb
inc
mov
jle
aam
dec
fcomip
stc
inc
mov
out
xchg
sub
push
lcall
jecxz
incl
pop
inc
xchg
mov
xchg
jns
pop
mov
dec
add
jg
call
xchg
adc
lods
subl
sbb
fstl
test
mov
decl
fs
pop
pop
adcb
dec
call
aas
lret
sub
mov
nop
call
xchg
sub
pop
ret
jae
std
lea
pop
test
daa
rcr
fistl
push
fstpt
sar
push
negl
xor
mov
mov
sbb
cld
nop
push
sub
outsl
clc
mov
scas
and
push
sub
test
stc
pop
call
jmp
mov
push
inc
js
xchg
adc
gs
inc
mov
mov
push
add
mov
mov
sti
push
jecxz
lahf
and
fsubl
or
pop
cld
js
pop
cmp
xor
cmp
mov
and
ja
xor
and
jmp
inc
xor
pusha
xchg
ja
jecxz
mov
and
mov
xchg
or
sahf
insl
test
sar
or
sub
push
mov
nop
xor
push
or
ljmp
movsb
inc
or
dec
std
dec
add
sbbl
mov
jmp
sbb
pop
cmc
sub
push
mov
jbe
mov
cmp
incl
call
inc
cli
outsl
mov
mov
sbb
sub
imul
xchg
outsl
cmp
aas
pusha
cs
xchg
and
xchg
mov
cltd
fcoms
shl
push
gs
lcall
in
std
sahf
popl
mov
lods
mov
and
adc
sbb
mov
jns
cs
pushl
mov
cmp
mov
inc
jl
cmp
test
les
xor
push
incl
cld
fwait
adcb
sbb
aad
jnp
scas
dec
dec
push
sbb
push
add
test
rcll
in
xor
jnp
std
in
add
and
xchg
sti
adc
rcrb
mov
incl
testb
incl
nop
mov
add
mov
cmpsl
pop
nop
mov
insb
mov
mov
ljmp
and
into
mov
pop
lods
and
iret
pop
insb
iret
mov
push
sub
sti
imul
ret
xchg
mov
clc
sub
push
xor
stos
mov
push
xchg
mov
sti
xchg
jb
pushl
xor
cmpsb
js
pop
ds
jno
sub
inc
mov
fs
pop
out
xor
incl
jl
sbb
jle
test
mov
sti
sbb
std
mov
adc
cwtl
cwtl
fwait
ljmp
mov
scas
pop
pushl
sbb
jns
lds
dec
lcall
and
mov
imul
mov
test
loop
pop
icebp
decl
add
xchg
mov
dec
cltd
xchg
mov
mov
lods
out
or
push
adc
xor
dec
pop
pop
dec
ds
or
and
in
pop
das
dec
clc
movsb
aam
divb
movsl
push
adc
lret
jae
mov
pushl
sub
cmp
pop
in
inc
les
push
loop
rorl
shl
jno
das
rcrb
jmp
jb
daa
jo
sub
cmpl
lock
aas
pop
loop
dec
call
pop
les
js
mov
jns
pop
ds
movsl
push
das
adc
and
jno
fimuls
ljmp
mov
push
cmp
test
sbb
pushf
clc
mov
enter
mov
mov
test
fwait
jl
or
or
cmc
flds
lcall
jp
mov
aaa
call
mov
add
jae
lcall
jns
jp
lcall
out
lods
xor
mov
fcmovb
add
mov
jmp
mov
out
pop
repz
repnz
mov
fwait
cli
call
xchg
jg
fmuls
mov
popf
lock
pushf
fisttps
dec
adcb
mov
imul
shufps
adc
cmp
mov
mov
std
rcrl
mov
cmp
incl
nop/reserved
sub
jbe
xor
cmp
push
cld
pushl
inc
fstps
jl
loopne
fiaddl
mov
js
outsb
lea
cmp
call
pop
fsubr
jmp
inc
in
sbb
jle
outsl
call
cmp
aad
mov
ljmp
push
lds
jns
cmp
sub
jecxz
xchg
xchg
jg
lock
mov
aas
in
js
mov
insb
sti
and
xor
incl
hlt
jae
clc
inc
jae
push
in
test
in
xchg
pop
out
lret
add
jmp
lcall
fldl
in
sbb
arpl
int
daa
mov
scas
mov
jmp
xchg
stc
and
int3
jl
hlt
aam
lahf
clc
popa
faddl
xchg
stos
sbb
lds
jmp
pop
push
pop
xchg
fwait
add
or
jb
push
pop
jg
scas
mov
dec
cmpsl
pop
or
pushl
cld
incl
test
int
or
add
add
test
decl
cmp
push
jecxz
andl
loopne
inc
ja
inc
dec
push
adc
test
cld
pop
cmc
ljmp
add
xchg
fidivrs
pop
je
jno
ja
incl
cld
lock
lods
out
in
js
pop
subl
mov
cld
notl
clc
adc
lahf
outsb
flds
jecxz
adc
lds
test
mov
or
mull
call
loopne
minps
in
cmpsb
or
mov
in
or
jns
jb
xchg
pop
mov
mov
pop
xchg
aam
sub
icebp
test
aaa
lock
mov
aam
inc
ret
mov
cli
cmp
sbb
mov
mov
jae
sub
shlb
jg
pushl
and
pop
mov
sub
syscall
mov
testb
or
imul
fisubl
arpl
push
sub
sbb
ljmp
ror
decl
pushl
xor
int
iret
jnp
cltd
dec
xchg
cli
ret
shr
dec
ljmp
aad
ljmp
int
fstpl
xor
or
or
popf
push
add
ret
loope
jmp
pop
mov
jecxz
dec
push
sub
mov
xor
insl
fsubrl
in
mov
stos
imul
fcos
decl
movsl
mov
movsb
mov
leave
dec
push
pushf
inc
rcrb
js
decl
add
stos
xchg
popa
adc
repz
inc
jg
adc
dec
mov
stc
pop
pop
mov
adc
mov
rolb
pop
fadd
loope
add
hlt
and
sbb
lret
cmp
outsl
stos
mov
sbb
ja
hlt
jl
aaa
inc
cmp
sub
lock
lods
or
xor
pushl
outsl
aad
lods
dec
inc
clc
push
pop
xlat
jecxz
push
subps
and
out
int3
test
out
mov
lcall
stos
jo
sbb
sbb
push
lods
addl
pop
push
pop
notl
xlat
xor
ret
xor
inc
lret
dec
inc
lahf
dec
dec
lea
jmp
xor
data16
nop
push
rorl
mov
popa
loopne
hlt
incl
adc
scas
adc
jl
jp
inc
sub
jge
lods
adc
push
cmp
xor
cwtl
cmp
faddl
idivb
stc
adc
pop
xchg
out
adc
gs
incl
test
adc
loopne
mov
jae
push
fwait
int
rcrb
in
lahf
enter
lcall
dec
shr
xor
cmp
mov
sub
dec
fsub
es
cli
mov
xchg
js
scas
jne
and
cmpb
jmp
outsl
xchg
and
mov
xchg
les
decl
lds
ljmp
lcall
mov
cmpsb
or
fwait
aad
pop
adc
out
aad
pushl
push
ja
popa
fstpl
mov
leave
mov
out
push
out
dec
scas
cmp
and
inc
es
je
out
nop
xchg
fcomps
sbb
rorl
mov
inc
mov
in
imul
gs
icebp
js
subl
push
add
test
ljmp
cmp
sti
pop
fwait
jge
int
addl
enter
adc
decl
data16
mov
es
or
jge
push
push
sub
loop
add
sbb
jg
decl
imul
sbb
cli
jo
push
xchg
sub
decl
roll
shrb
cwtl
outsl
xchg
cwtl
push
arpl
sbb
ds
cwtl
pop
cmpsb
inc
push
insb
pop
jmp
add
sti
cmp
sub
out
lods
pop
push
pop
xchg
pop
std
ds
test
into
fwait
dec
push
jp
push
sub
inc
int3
xchg
sti
push
loop
xchg
lock
mov
repz
frstor
add
pop
out
dec
rcll
sar
cli
xor
xchg
push
xchg
data16
cltd
pusha
les
pop
inc
cmpsb
xchg
mov
outsb
decl
push
lcall
movl
mov
xchg
mov
jge
sbb
cli
lcall
test
mov
xchg
das
inc
out
nop
stos
inc
jp
lret
mov
ss
out
xchg
das
lock
into
es
xor
outsl
and
fisubs
ss
lds
mov
mov
sub
xor
push
push
push
mov
repz
xchg
pop
cltd
xor
jecxz
cltd
ss
jmp
xchg
jae
leave
dec
pop
hlt
mov
mov
pop
push
mov
ds
fs
mov
out
mov
hlt
jmp
push
jmp
movsl
ja
and
xchg
adcl
xchg
xchg
xchg
je
and
dec
jmp
testb
xor
cld
mov
push
sbb
pop
and
mov
ljmp
adc
pop
xchg
jg
rcll
pop
jge
or
xor
iret
imul
pushl
cmp
mov
inc
jmp
adc
fistps
repz
mov
adc
lods
mov
mov
sub
popf
jnp
pop
in
in
xor
mov
aam
xor
or
mov
dec
lret
jne
dec
in
cmp
fs
adc
test
push
jbe
aad
jno
and
push
cmpsb
out
dec
call
sub
mov
or
stos
mov
std
or
je
ljmp
jo
adc
sub
or
inc
pop
mov
je
data16
jg
cli
mov
shll
jl
add
sahf
push
test
mov
lea
out
adc
cli
imul
mov
test
into
shrl
sub
or
dec
push
or
cmp
pushl
fisttpl
out
push
pop
pusha
nop
pop
mov
jae
xor
test
incl
imul
sub
cmp
incb
pop
adc
sbb
sub
je
es
adc
pushl
cld
hlt
in
bound
mov
cmp
sbb
dec
cmp
call
adc
test
mov
bound
jge
jbe
xorb
jg
fcmovbe
mov
jmp
pop
rcrb
lds
add
in
push
mov
ret
insb
mov
arpl
std
leave
mov
dec
mov
sbb
cmc
xchg
xor
cmc
es
lock
adc
popa
dec
ljmp
mov
fs
iret
and
pop
xor
mov
add
jns
pop
lcall
mov
inc
pop
push
xchg
jo
adcl
sub
pop
testb
pop
pop
cli
jne
sbb
mov
add
outsl
aad
xor
mov
cwtl
cmp
gs
or
mov
loopne
int3
lret
fnstcw
jae
movsb
dec
lds
filds
sbb
jbe
fldl
or
jmp
dec
inc
mov
stos
add
enter
rcll
mov
insb
mov
jb
int
pop
clc
mov
into
mov
cmc
xor
and
sti
and
cmp
or
das
add
std
pop
shl
add
jmp
gs
inc
xor
incl
pop
sahf
sbb
xor
push
or
pop
rorb
int3
mov
dec
adc
outsl
nop
and
xchg
nop
cs
rclb
popf
call
xchg
push
negl
adc
fs
mov
jnp
pushf
out
ljmp
mov
cmp
sbb
filds
mov
jae
lret
inc
stos
xlat
xor
inc
mov
pushl
or
sbb
fwait
sub
shlb
push
inc
or
loope
std
mov
add
inc
ficoms
or
adc
scas
xor
inc
shrl
cli
add
out
lret
or
xor
jge
xchg
std
and
mov
lock
decl
mov
daa
enter
cs
lds
jl
mov
nop
jp
adc
ret
push
xchg
pop
push
jg
idiv
mov
jnp
sbb
js
sbb
mov
outsb
mov
incl
add
xor
sub
es
arpl
cmp
lock
push
in
ljmp
mov
mov
outsb
jo,pt
mov
push
sbb
jmp
push
ja
pop
mov
jmp
mov
arpl
xchg
cmpsl
pop
js
mov
mov
outsb
inc
cmp
mov
sahf
dec
jbe
pop
icebp
ljmp
rcr
cmpl
mov
push
decl
decb
outsb
outsb
mov
mov
in
adc
dec
call
mov
fstps
jmp
adc
std
int
icebp
out
xor
scas
and
push
dec
cli
jge
arpl
dec
cmp
and
mov
int3
fwait
popf
mov
testb
mov
and
lcall
pop
stc
stos
lcall
add
in
or
test
adc
and
inc
popf
fs
je
cmpsb
xlat
xchg
in
pushf
or
lods
js
inc
aam
jns
stc
inc
sar
incl
nop
and
imull
pop
cs
icebp
cmp
cmpb
inc
lahf
clc
jmp
enter
in
loop
mov
lock
std
daa
add
xorl
add
pop
cmp
add
lret
or
and
pushl
rcl
sbb
jge
ret
mov
loopne
pop
and
xor
insb
xchg
push
mov
jp
mov
ret
sub
push
das
xchg
push
pop
cmc
and
pushf
shlb
inc
or
sbb
mov
sub
pushf
push
pop
hlt
push
sub
xlat
push
cmp
hlt
fstpt
incl
out
push
pop
lods
sub
jbe
mov
mov
repz
outsb
cmpsl
call
lods
movsl
aaa
cld
cmp
loope
xchg
fmul
mov
aam
cs
loopne
sub
decl
mov
mov
insb
dec
cwtl
cmpsb
pop
sub
fnstsw
incl
rclb
ret
and
jp
dec
fildll
in
andl
call
pop
hlt
frstor
pop
inc
add
cmpsb
adc
adc
adc
jbe
inc
aad
push
outsl
cli
mov
xchg
mov
scas
xchg
mov
adc
iret
mulb
jecxz
and
ljmp
cmp
cs
rcrb
clc
scas
mov
gs
ljmp
lcall
loope
xchg
xor
repnz
push
push
mov
mov
and
lods
cmp
pop
in
push
ret
into
cld
xor
ss
pop
std
incl
push
pusha
jmp
stos
mov
dec
inc
std
xchg
pop
call
ljmp
and
push
rcll
in
add
imull
js
ja
cmp
mov
testl
or
ffree
inc
sub
sbbl
decl
mov
inc
pop
jb
adc
lods
cmpl
add
in
aam
loope
add
cmc
ljmp
or
sbb
sar
mov
adc
loopne
filds
daa
idiv
add
lcall
lea
lret
fwait
and
lret
arpl
dec
fs
push
data16
ss
add
int
cld
ds
int
inc
dec
int
es
sub
int
sub
int
xor
int
adc
int
sbb
int
ljmp
sbb
int
and
cwtl
test
int
mov
int
mov
into
into
nop
add
xchg
jle
add
pushl
ljmp
gs
int
imul
int
push
push
into
stos
pop
mov
in
pushl
sti
nop
int
ret
push
test
ret
lods
jno
lret
outsb
int
mov
mov
and
or
hlt
rorl
movsl
ss
push
test
ror
inc
cmpsl
aam
cmp
lcall
ror
ss
cmp
insb
xchg
cmp
xor
cmpsl
int
ud1
xchg
add
int
pop
mov
add
inc
push
rep
int
imull
jmp
into
mul
jb
shl
je
enter
out
loopne
int
rcrl
mov
int
sar
int
push
fxch
add
dec
in
popl
insb
ss
loope
lret
cmp
sub
xor
and
int
cs
int
sbb
int
push
xchg
int
and
int
push
mov
mov
sub
ljmp
movsb
xchg
pushf
xchg
test
orb
jbe
into
clc
in
jl
jge
jge
into
test
lret
push
lret
gs
arpl
movsb
pop
adc
pop
and
dec
lret
dec
lret
out
jg
ss
cmpsb
int3
repz
popa
lret
out
int
mov
int
mov
lcall
sub
shlb
inc
into
add
icebp
int
xchg
aas
into
push
pushf
sub
decl
lret
dec
enter
and
push
lret
ror
decl
dec
add
lret
mov
lret
xchg
lret
movsl
lret
mov
lret
lahf
lret
lcall
dec
rcr
mov
enter
loopne
sub
fcoms
xor
into
sub
mov
fcomps
xor
mov
sbb
pusha
sub
push
jle
mov
push
xor
sbb
notb
or
and
fcoms
insb
sbb
imulb
fwait
pop
mov
movsb
xchg
push
jns
lret
dec
pushf
mov
mov
fcoms
push
iret
enter
push
jo
test
shll
idivb
mov
push
outsl
jg
pop
lret
lretw
je
sub
lret
loopne
mov
lret
push
pop
lret
test
rorb
lret
ret
cwtl
jo
jb
or
mov
lret
stos
lret
cmp
repnz
jl
or
ror
sbb
inc
lret
push
cmc
into
lret
cmp
lret
push
or
inc
dec
pop
lret
cmp
lret
xchg
in
pop
lock
and
mov
scas
aad
lret
pop
aaa
or
lret
jo
lret
cmpsl
fcomi
dec
mov
xor
mov
sub
and
ret
lret
pushf
idivb
fdivr
pop
insb
mulb
push
or
lret
add
mov
adc
fwait
pop
mov
push
imul
div
ljmp
adc
sti
in
lret
sbb
lret
dec
mov
negb
subb
not
gs
push
test
push
mov
or
ret
bound
outsb
jecxz
jb
xor
gs
push
lret
mov
push
loope
dec
shrl
lcall
lret
inc
lret
mov
lret
ss
out
mov
lret
es
pop
cmp
fisubs
lret
xor
dec
jns
lret
push
cs
lret
ds
lret
mov
dec
decl
es
lret
cmpsb
pop
dec
lret
pop
and
jle
ror
dec
cmpsb
lret
push
push
xchg
lret
movb
and
dec
xor
fnstcw
das
nop
in
xor
lret
inc
out
scas
jmp
outsb
clc
sub
and
push
adc
push
or
fstps
jae
jp
fbstp
jge
add
pop
mov
divb
lock
mov
out
mov
int3
es
sub
push
mov
xchg
add
out
dec
scas
xchg
mov
mov
fsubs
leave
ss
rorb
mov
lret
out
into
je,pt
es
ss
push
subl
push
pusha
mov
fwait
insl
rcll
xchg
les
mov
mov
fnstenv
sahf
subb
jae,pt
sub
mov
mov
pop
xor
mov
push
sbb
fbstp
int3
mov
int3
jbe
aas
int3
jle
and
int3
push
sbb
int3
push
js
sub
and
sub
cmp
fnstenv
or
repz
icebp
mov
cmpsb
aaa
adc
mov
lods
into
fistpl
int3
out
or
mov
push
push
roll
sub
insb
pop
adc
cs
cld
cld
mov
fldt
sti
stos
in
lock
out
mov
es
test
ljmp
test
or
mov
jge
loop
mov
sub
dec
enter
enter
enter
int3
insb
pushl
fwait
mov
cmpsl
pop
mov
push
enter
lret
push
ja
lret
or
jmp
pop
insb
incb
pop
enter
xchg
mov
dec
in
std
idiv
lret
je
das
int3
sbb
xor
movsb
mov
jbe
in
lret
mov
aaa
push
jle
mov
outsl
pop
jns
outsb
je
cmpsb
xor
mov
push
sub
push
pushl
and
mov
adc
mov
in
dec
nop
mov
inc
xchg
mov
cmp
mov
mov
out
popf
pushl
mov
clc
out
int3
pusha
loop
int3
pop
fisubs
sub
cli
adc
incl
cs
lcall
int3
mov
jne
clc
ja
hlt
incl
mov
out
mov
scas
mov
add
push
fisttps
jge
rolb
scas
pusha
aam
aam
loop
or
jb
push
fadd
insl
call
je
jno
je
mov
fidivl
data16
dec
mov
jb
push
mov
outsb
push
mov
mov
sub
ret
sarl
add
fsubl
movsl
push
push
mov
pop
ljmp
jb
lcall
push
popf
push
imul
push
adc
imul
adc
sti
sbb
add
insl
loopne
adc
push
jmp
insl
mov
jecxz
insl
enter
dec
les
enter
insb
and
inc
insl
test
shrb
icebp
insb
clc
push
out
insb
std
incl
inc
lods
insb
or
insb
adc
mull
cmp
cs
inc
cmc
data16
and
inc
sub
cmp
fmuls
xor
data16
sbb
and
incl
push
imul
pop
imul
pop
daa
test
jmp
int
jmp
cmp
cmc
pushl
sbb
mov
cmp
daa
sbb
mul
or
repz
or
jmp
sti
xor
pop
arpl
adcb
sub
or
jmp
test
stc
adc
call
pop
or
mov
push
push
adc
sub
push
adc
inc
pop
adc
lcall
or
push
sub
adc
xchg
adc
pop
adc
outsl
or
gs
lcall
xchg
sub
jne
cmpl
xor
xchg
sar
mov
subl
cmp
incl
cli
cwtl
popl
pushf
popf
adc
dec
lcall
decl
cmp
mov
push
fidivrs
loop
mov
push
mov
scas
jo
jb
repnz
divb
pop
idiv
decl
imulb
pop
idiv
outsl
imulb
vmulss
leave
mov
into
add
ret
sar
incl
sub
push
mov
and
push
scas
and
adc
mov
adc
sar
decl
sub
aam
fwait
test
ficompl
or
jg
sbb
inc
adc
sbb
test
sbb
pop
push
or
call
or
mov
or
cmp
lds
clc
pop
ret
jns
pop
mov
jge
pop
roll
stos
sbb
int3
fdivrp
jmp
lret
push
add
push
adc
sbb
mov
out
push
cltd
movhps
sub
push
sub
adc
ret
pop
mov
ss
in
jmp
loope
jbe
sub
mov
push
jne
loopne
jae
out
and
shlb
sub
jg
inc
mov
daa
mov
mov
xchg
movb
push
jae
jmp
fildll
mov
inc
test
pop
cmp
push
xchg
pop
pop
rol
push
dec
mov
test
lods
push
fistpll
inc
cld
jno
mov
push
cmp
mov
pushf
inc
ds
cmp
jp
ljmp
push
ss
sbb
mov
fbstp
in
mov
test
out
xor
in
sub
jg
call
and
pop
pushf
fcomps
adc
pop
dec
push
or
ficoml
hlt
ficoml
std
ljmp
cmpb
add
mov
mov
pop
mov
xor
sbbb
push
push
xchg
jge
add
mov
sub
dec
add
and
jb
sbb
and
xlat
incl
push
pushf
mov
mov
mov
rol
sbb
mov
jns
cmp
testb
jne
push
inc
mov
xchg
loope
mov
push
or
push
push
into
push
ja
xor
push
mov
fadd
fs
inc
andl
sbb
lcall
inc
push
adc
out
mov
movsb
daa
stos
jp
lods
movb
lahf
xchg
adc
popa
divb
adc
dec
push
stos
dec
inc
sbb
push
jg
test
xchg
cmc
push
test
add
test
clc
fdivl
or
jp
fmull
push
aaa
fwait
in
jmp
aam
pop
orb
imulb
or
mov
push
or
dec
push
push
mov
push
sahf
movsl
sbb
push
out
idivb
xorb
sti
mov
movsb
mov
pop
gs
sbb
popa
push
clc
inc
hlt
shll
sub
movl
cmp
aam
leave
xchg
das
lock
in
mov
mov
inc
ljmp
into
cmc
test
inc
mov
cmc
mov
aas
mov
push
xchg
mov
dec
sbb
mov
and
pushf
dec
lcallw
push
xor
loop
push
out
xchg
sub
lock
xchg
sub
xchg
lods
cmp
xchg
jp
xor
or
jg
push
cmpsb
sbb
adc
push
dec
cmp
ret
jp
aad
xchg
fnstenv
xchg
sbb
jle
mov
xchg
out
dec
sub
dec
decb
and
std
xchg
decl
or
dec
push
fwait
adc
insl
out
enter
or
insb
out
push
mov
push
das
sub
xchg
pop
mov
fwait
dec
xchg
clc
sbb
mov
xchg
mov
into
mov
cs
int
mov
aas
repz
xor
nop
mov
ficoml
dec
loop
mov
ljmp
jmp
cmpsl
mov
pop
pop
jo
bound
test
mov
test
pushl
xlat
adc
sub
sti
pop
call
xor
dec
enter
inc
insl
or
jmp
dec
xor
or
fists
lds
ds
cmc
cs
pushf
push
jp
movsb
push
adc
aaa
cld
dec
in
xor
dec
jge
adc
sub
push
outsb
push
rcl
xchg
jmp
xlat
push
rcr
rcrb
add
inc
test
icebp
int3
cmpsb
inc
daa
and
jno
shlb
add
loop
sbb
outsb
imul
xchg
scas
imull
pushl
inc
stos
pop
movsb
sbb
mov
clc
scas
sbb
dec
jnp
cli
iret
mov
jo
sbb
movaps
push
ret
ficoml
rclb
shlb
push
sub
ret
dec
scas
add
cmpsb
imul
pushl
cld
movsl
push
inc
sbb
pop
and
shrl
mov
cwtl
testb
scas
jle
int
inc
xchg
les
jp
mov
mov
je
mov
addb
ljmp
ljmp
mov
mov
mov
xor
xchg
sub
mov
and
in
pushl
mov
xchg
mov
je
out
loop
push
loopne
orb
dec
ja
jmp
mov
jecxz
mov
dec
mov
mov
call
jo
adc
dec
xchg
xacquire
popa
jp
cmc
lea
sbb
nop
or
mov
or
in
pushf
mov
mov
dec
push
sbb
sahf
push
xchg
pushf
xchg
push
xchg
test
xchg
push
ret
incl
xchg
incb
pop
rclb
into
adc
out
cli
adc
push
mov
mov
bound
mov
pop
jle
mov
bound
add
outsb
adc
dec
inc
test
mov
mov
or
fisttpl
divb
dec
ja
xchg
jg
ret
in
pushl
mov
sbb
inc
adc
out
es
and
jmp
mov
arpl
mov
gs
cmp
mov
push
xchg
fbstp
inc
jne
dec
stos
mov
lods
mov
aad
push
outsb
decl
in
inc
mov
and
dec
jecxz
pop
decl
sti
mov
test
mov
push
or
in
outsl
clc
call
pop
mov
pop
cmp
mov
push
inc
pop
dec
inc
xchg
adc
mov
mov
outsb
xchg
cmp
popf
sub
add
outsl
inc
sub
xchg
and
mov
shrl
mov
loopne
push
out
jmp
sub
pop
sub
pop
xor
insb
cmp
cld
jmp
sub
push
add
sub
jbe
sub
inc
sub
decl
or
sub
mov
sub
pop
cli
sub
adc
ljmp
mov
aad
add
es
shrl
and
xlat
fisubrs
lods
cmp
sub
ss
cmp
jg
in
dec
sub
mov
or
dec
push
cmpsl
popf
loop
sub
fistpll
ficompl
jne
xchg
sub
out
jno
xchg
sub
jno
or
fisttps
imulb
leave
repz
shufps
adc
sub
push
dec
sub
or
es
add
push
std
test
sub
lods
push
test
insb
das
xchg
dec
sub
cwtl
sti
pushf
jb
adc
mov
mov
mov
sbb
int
subl
sub
nop
out
popa
push
xchg
push
push
int
subl
imul
stc
insl
test
imul
roll
push
sbb
aad
push
mov
repz
sbb
pop
stos
pop
sub
pop
or
pop
pop
daa
outsl
mov
push
or
cltd
pop
sbb
xor
stc
dec
lods
pop
int
decl
adc
inc
cmc
adc
inc
popa
fisubrs
fistpl
or
mov
jg
push
leave
out
push
out
repnz
mov
adc
stos
ljmp
pop
arpl
int
sbb
jecxz
fsts
imul
push
jmp
loopne,pn
cmc
xor
pop
adc
mov
push
lcall
mov
push
and
rcll
lds
pushl
xchg
mov
insl
mov
imul
pop
lahf
mov
sar
sub
lea
push
push
mov
inc
jo
fildll
pop
push
mov
fiaddl
mov
idivb
or
xchg
push
test
mov
lods
data16
jg
adc
sbb
adc
pop
test
pop
adc
sbb
sub
pop
daa
insb
ss
int
and
aaa
push
cmp
in
mov
insl
dec
les
push
dec
dec
inc
sub
popl
push
fidivs
mov
xlat
sahf
out
fwait
adc
jmp
xor
adc
out
adc
mov
adc
sti
popf
adc
negb
int
repnz
push
push
or
ljmp
mov
adc
test
int
mov
pushf
mov
mov
cmpsb
inc
cli
push
insl
ss
enter
shrb
inc
adc
data16
adc
mov
stos
mov
fdivr
call
outsb
outsl
sbb
mov
add
mov
pusha
adc
in
push
adc
mov
insb
lcall
loope
sbb
ja
into
cli
mov
lock
push
testb
pushl
push
rorl
push
ja
rcrb
push
das
mov
sbb
jmp
mov
sub
mov
inc
test
stc
mov
xor
loopne
leave
mov
aaa
int3
inc
out
testb
fstpl
outsb
loop
stc
int
cwtl
lea
xchg
dec
mov
out
outsl
fwait
dec
fsubr
scas
js
aam
jns
mov
cmovns
in
or
push
test
mov
cmp
loopne
outsl
ljmp
mov
push
lds
dec
pop
add
mov
push
inc
push
sbb
jne
mov
push
add
int
aaa
push
xor
sub
cs
stc
int
repz
mov
sti
mov
adc
and
test
mov
push
push
les
loopne
out
pop
pushf
jmp
xchg
out
jecxz
pushl
xor
push
lcall
mov
xor
cmp
inc
daa
and
sbb
dec
aad
ds
popl
dec
int
rorb
scas
dec
mov
dec
cmpsl
push
je
dec
jne
jae
jb
jno
xor
loope
dec
cmp
fldcw
xor
movsl
cmp
push
das
inc
out
inc
jne
out
jecxz
iret
dec
roll
and
testl
push
and
fwait
decl
repnz
and
push
inc
mov
out
dec
shll
cmp
mov
inc
repz
mov
ljmp
stc
cwtl
cmp
dec
stos
fimull
cmpsb
lods
mov
xchg
dec
daa
enter
in
data16
int3
cs
sub
cld
mov
lret
pop
pop
sbb
ljmp
in
xor
pop
jo
fsubrl
dec
jmp
cld
aad
gs
mov
jge
aad
fisttps
jp
cmp
xorb
jns
lods
lea
xchg
xchg
inc
mov
jg
cmp
mov
aad
sbb
popf
xlat
xor
aad
cmp
loope
mov
in
pushl
mov
sub
mov
addl
xor
pushf
sti
call
and
dec
test
dec
fisttpll
inc
xor
dec
aas
jecxz
push
cmp
jmp
pushl
ss
push
in
fists
inc
fildl
inc
add
dec
out
std
fimull
mov
repnz
inc
dec
add
popa
dec
add
in
dec
out
cmp
lret
xor
mov
gs
sbb
mov
sub
fstps
outsl
jle
jg
aam
stos
test
mov
push
sub
into
cltd
dec
pop
rorb
push
les
dec
pop
fst
scas
popa
jae
je
dec
aad
pop
sbb
pop
idiv
mov
xchg
fdivrs
push
lock
aam
xorl
xorb
jns
test
xchg
out
aam
test
fsubrs
and
mov
mov
pop
push
xchg
adc
inc
push
das
pop
inc
sub
dec
and
ds
aas
aas
push
and
cmp
repz
adc
xor
das
dec
scas
inc
adc
inc
or
adc
dec
pop
icebp
decl
fists
jo
cmp
lea
test
insl
lock
cmp
call
lret
inc
roll
out
xlat
cmc
and
mov
or
push
ja
mov
add
inc
test
xchg
inc
jmp
cmp
jg
fildl
loopne
dec
mov
cmp
push
cmp
insl
xor
sub
sbb
sub
dec
and
sbb
sbb
sbb
sbb
mov
mov
push
std
ret
or
in
incl
xor
sbb
daa
adc
divl
adc
hlt
aas
adc
out
sbbl
jmp
sbb
push
scas
jecxz
call
fildl
rcrl
popf
iret
add
cltd
mov
idiv
inc
and
scas
shll
lcall
lds
push
and
and
fwait
insl
int
addr16
push
scas
mov
jne
imul
imul
sbb
cltd
pop
fs
int
push
pop
pop
ds
cmp
mov
ss
dec
hlt
jle
xor
jmp
ljmp
ds
adc
and
add
stc
xchg
push
lcall
mov
popa
les
adc
rep
adc
dec
rcrb
outsl
into
ds
ss
mov
adc
insb
lea
jecxz
fsts
lahf
push
jle
fwait
int
movsl
pop
jnp
addl
mov
test
js
push
adc
stc
lods
fistpl
push
sub
push
inc
adc
pop
push
sub
pop
xor
out
cmp
adc
adc
dec
pop
fdivl
fwait
insl
repz
adc
sbb
out
in
aad
int
ljmp
jmp
leave
sub
pop
stos
sub
enclu
mov
sub
imull
sub
jmp
mov
fnstcw
and
lret
stos
push
rcrl
push
fstpl
sbb
ds
sub
test
inc
sub
int3
push
loope
sub
xchg
mov
jg
insb
push
int
xchg
mov
sub
xor
jb
fldt
push
dec
cs
push
push
jge
jecxz
filds
shll
std
jg
fstps
in
jg
jnp
and
dec
sbb
and
std
sub
xor
sbb
outsl
inc
ds
inc
xor
dec
sub
mov
xor
insl
mov
dec
push
inc
dec
loopne
insl
scas
fcoml
je
dec
insl
push
jo
push
std
outsl
xchg
subb
jl
and
push
sbb
pop
sahf
cld
xor
clc
sub
jp
outsl
fwait
int
push
adcb
jbe
lods
or
push
push
dec
decl
xchg
mov
lcall
cmp
incl
and
inc
daa
sub
pop
mov
jge
pop
rolb
pop
call
adc
and
dec
pop
rolb
mov
pushl
lret
cmp
es
cmp
in
push
cltd
cli
jp
pop
testb
add
mov
add
add
mov
push
pop
sub
pushl
fwait
cli
dec
pop
xchg
cmpsb
dec
aad
dec
mov
fldl
pushf
hlt
xchg
mov
in
mov
sti
pushl
test
scas
mov
cmc
lahf
mov
in
lcall
aam
mov
in
std
jmp
mov
mov
test
fs
sub
inc
xor
nop
xchg
mov
mov
outsb
and
mov
pop
jle
dec
sub
mov
push
jp
cli
adc
mov
insb
outsl
jle
pushl
call
adc
push
mov
mov
int
xlat
xchg
mov
mov
call
mov
insl
addr16
jl
repz
mov
cli
lahf
outsb
mov
bound
mov
adc
mov
mov
mov
push
std
mov
lcall
mov
repnz
push
mov
push
fistpll
fdivp
lret
mov
push
sbb
mov
in
nop
outsl
in
lcall
fildll
mov
mov
sbb
xchg
push
in
cmpsl
mov
fcmovnu
mov
mov
mov
aaa
lods
mov
cmpb
mov
inc
les
pop
nop
mov
andb
mov
das
mov
jg
jle
mov
fidivrl
mov
js
mov
int
and
mov
dec
or
mov
sbb
adc
mov
outsl
add
xchg
sub
sub
js
in
mov
ljmp
mov
ss
sbb
xor
test
add
std
dec
call
mov
shl
sub
cwtl
xor
scas
in
insl
sti
lods
push
repnz
nop
test
mov
sbb
insb
and
push
push
cld
mov
xchg
mov
cmp
dec
mov
push
fistpll
sub
es
xchg
mov
inc
push
mov
mov
pop
jbe
out
mov
mov
jnp
mov
mov
jae
cli
call
inc
call
addl
clc
sbb
lock
mov
add
jo
inc
or
sti
pop
jo
adc
mov
lcall
mov
mov
test
mov
test
mov
dec
mov
daa
sbb
mov
cmpsb
ret
shlb
pop
dec
sar
push
mov
pop
insl
rcl
jle
loop
jg
adc
add
add
xchg
cld
incl
push
sub
pop
shlb
pop
pop
fwait
aad
sub
call
cmp
inc
add
adc
fnstsw
xchg
adc
int3
push
sbb
fs
jmp
mov
bound
push
out
fimuls
jp
adc
cmpsl
fs
sub
pop
cmc
idivb
mov
sbb
adc
fldcw
adc
sarl
sub
js
ss
mov
fs
inc
push
in
insb
out
mov
mov
mov
cmc
es
cld
das
clc
xchg
mov
inc
or
rcrb
call
int3
push
push
rolb
shlb
lods
and
in
dec
rcr
push
inc
aam
dec
rorb
mov
mov
pop
ja
in
add
mov
sbb
call
add
xor
add
jo
mov
push
jl
mov
scas
jae
mov
jle
xor
xchg
in
xor
cmc
testl
sub
add
mov
inc
das
pop
rorb
rclb
pop
xor
mov
mul
in
sar
mov
dec
dec
push
dec
xchg
mov
push
aad
mov
mov
adc
ds
add
inc
mov
hlt
xchg
sub
sbb
call
pop
push
pop
pop
jo
push
push
outsb
rorb
sarb
or
inc
xor
push
shrb
movsb
cmp
mov
xchg
xor
mov
dec
lcall
jmp
je
mov
int3
mov
aam
sarb
xor
mov
and
outsb
mov
sbb
ja
idivb
adc
mov
jg
sbb
pop
mov
jmp
mov
cmp
mov
xor
gs
mov
rcr
xchg
mov
fisttps
jp
jecxz
jb
adc
mov
fisubl
cmp
mov
xchg
adc
mov
lods
lds
and
mov
mov
cmp
push
js
je
add
incb
jg
std
push
jmp
jo
jb
mov
inc
pop
repz
jg
scas
clc
xor
xchg
mov
dec
sbb
push
and
sbb
test
mov
je
mov
in
dec
mov
fsub
mov
push
pop
lock
fcoml
mov
sbb
in
pop
out
add
mov
stc
nop
mov
gs
cmc
pop
jbe
imul
xor
sbb
jg
sub
mov
loop
add
mov
jns
adc
push
mov
int3
cmp
adc
push
dec
sbb
xor
push
outsl
mov
sub
lods
push
cmp
push
imull
cli
ss
ds
lret
mov
pushl
cmc
je
mov
sbbb
mov
sub
adc
jns
mov
and
lcall
push
neg
push
jbe
jmp
add
jp
lods
fcom
adc
gs
in
cmp
cmp
ret
sub
mov
or
adc
sbb
hlt
loop
aas
popf
hlt
push
jo
adc
hlt
gs
xor
pop
imul
cmpsb
insl
data16
ret
ljmp
mov
or
mov
addr16
repz
cld
cmp
cmc
fwait
in
pop
push
ja
arpl
mov
icebp
pushl
fwait
popf
das
xchg
adc
dec
adc
sti
push
fdivp
mov
clc
sub
call
xchg
dec
ds
pop
push
adc
inc
fwait
bound
mov
ljmp
stos
push
ss
divl
jge
ss
adc
fs
mov
fwait
int
lret
push
xchg
xor
jne
lods
cmpsb
jae
mov
sbb
sbb
jb
jecxz
xor
xor
xchg
dec
outsl
ss
xchg
fdiv
aas
inc
inc
inc
call
inc
mov
call
mov
mov
xchg
push
lock
mov
pop
ljmp
cli
cmp
xor
insb
in
lret
ljmp
pop
fidivs
ljmp
mov
mov
adc
add
add
mov
push
in
mov
sub
fdivrs
pop
jecxz
mov
mov
add
jmp
fdivrl
insb
leave
dec
mov
pushf
shll
int
adc
fldcw
mov
mov
je
dec
mov
xchg
mov
xchg
fstl
mov
fbstp
into
mov
xchg
inc
mov
fwait
in
decl
mov
rolb
sbb
pop
jb
push
std
mov
lea
mov
jae
andb
xor
sbb
inc
mov
mov
xchg
mov
mov
inc
andb
cmp
mov
ljmp
cli
mov
fdivl
mov
pop
sarl
jmp
pop
lock
cli
mov
cld
mov
add
xchg
leave
add
mov
mov
repnz
stos
sti
cs
sub
pop
mov
scas
cli
or
movsl
pop
mov
inc
pusha
mov
cmp
mov
int
sti
pop
mov
jmp
shl
jecxz
mov
mov
push
int3
ror
adc
mov
adc
mov
sti
push
adc
or
lcall
and
test
sbb
sbb
outsb
adc
mov
aam
call
outsb
add
sahf
outsb
clc
or
mov
pop
mov
jg
ja,pt
sub
cld
outsb
push
add
outsb
dec
add
cld
incl
outsb
cmp
mov
pushf
popw
mov
fcomip
mov
jl
btc
mov
in
push
mov
aam
dec
mov
or
sti
mov
mov
cmpl
stc
add
mov
sub
cld
xchg
out
xchg
icebp
fwait
fildll
lret
xor
mov
mov
int
sarl
in
push
mov
in
jg
ret
xlat
adc
mov
mov
fcoms
cmpsl
mov
cmc
adc
mov
xor
ss
sti
in
or
aas
push
stc
sarl
lds
gs
incl
mov
adc
xor
dec
add
insb
mov
push
inc
push
sub
sbb
inc
outsb
xor
sar
mov
and
sbb
in
adc
sbb
pushl
jge
adc
jnp
xchg
addr16
push
jecxz
les
pop
addr16
push
out
and
or
mov
in
xchg
fldcw
lods
sbbl
js
add
imul
push
lahf
push
xor
je
gs
das
aaa
pushf
mov
xor
jbe
inc
loope
jno
sbb
mov
pop
mov
les
jmp
sbb
fimuls
mov
scas
xchg
sti
shlb
mov
adc
shrb
mov
decl
ss
add
cmp
adc
gs
mov
lea
in
cmc
hlt
jbe
sbb
add
pop
sbb
xchg
mov
sub
rorb
jae
lcall
test
aas
insl
dec
cmp
addr16
shrb
xor
clc
lcall
xor
dec
mov
pop
cmp
aad
mov
cmp
mov
dec
pop
sub
sbb
jl
nop
js
or
dec
mov
jns
lahf
xor
inc
and
sub
cmp
sbb
call
cs
and
filds
jmp
adc
std
lcall
scas
in
sub
lret
int
insl
leave
jnp
int
cmp
shrl
mov
dec
mov
fldl
push
into
push
and
stc
imul
popa
sub
ljmp
and
mov
fists
mov
xor
in
xchg
rcrb
in
fstps
ljmp
jmp
mov
and
xor
cmc
shrl
push
lcall
xor
sub
dec
ret
cmp
pushf
lea
shrl
mov
decl
gs
xor
ds
adc
xor
lds
pop
stos
aad
dec
out
jo
lret
xchg
decl
cmpsb
and
sbb
scas
or
jne
push
cmp
incb
add
hlt
ja
xor
bnd
jle
xor
inc
repnz
pop
int3
cli
push
stc
roll
adc
dec
test
aas
clc
mov
and
inc
and
mov
ret
outsl
inc
and
sti
and
rcr
pop
hlt
out
sahf
xor
rolb
sbb
das
out
in
sbb
imul
jne
xchg
popa
jl
mov
call
xor
fdivs
mov
sbb
outsl
mov
and
jmp
pop
adc
out
jo
add
sti
xchg
mov
mov
xor
test
aas
xor
cmp
cmp
inc
mov
ds
sub
ds
xchg
daa
in
or
sti
incl
jns
cmp
fwait
loope
call
aaa
jg
and
xchg
xchg
lcall
xor
add
fstps
repz
stc
pop
pop
mov
in
mov
mov
xchg
mov
inc
mov
mov
xor
dec
icebp
pushl
repz
pusha
pop
in
cmpsl
repnz
pop
push
aad
inc
lcall
pop
mov
cmp
scas
ljmp
popa
test
xchg
aaa
nop
lcall
andb
cmp
lcall
jmp
int3
aad
loope
dec
adc
int
int3
and
xchg
hlt
and
lret
in
push
lds
jle
rorb
repnz
jmp
into
inc
femms
dec
dec
pop
pop
mov
jnp
pop
inc
inc
fildl
inc
mov
jmp
push
or
xchg
outsb
mov
into
xlat
pusha
and
xor
test
hlt
push
ss
pushl
xor
xor
in
out
inc
movsl
cmp
aaa
cs
mov
lcall
loop
je
jo
mov
xor
pushl
lods
jmp
and
iret
jb
flds
test
adc
outsl
jmp
clc
fisubrl
mov
mov
aas
sub
jp
cmp
mov
std
lahf
jo
in
lock
pop
sub
incl
xchg
lods
cmp
mov
mov
push
cmp
cmp
and
push
std
inc
lcall
inc
cmp
loope
nop
testl
je,pt
nop
mov
jge
mov
jmp
repnz
popf
push
mov
or
inc
aad
and
pushf
in
or
lahf
out
cwtl
test
lods
hlt
js
inc
popa
lds
imul
je
mov
inc
lret
fnstcw
sbb
and
xchg
ror
aad
fimull
test
fcmove
fdiv
out
les
xor
jg
sub
mov
loopne
pop
das
add
and
loop
or
fldpi
pushf
loope
pop
pop
je
push
dec
jbe
fdivrs
outsl
mov
bound
lea
fs
call
cld
clc
push
mov
outsl
xchg
enter
aaa
mov
xor
cld
mov
loopne
jmp
popa
and
dec
xchg
push
scas
repnz
sbb
bound
lcall
stc
sbb
or
mov
jmp
outsl
pusha
fadds
or
mov
ljmp
outsb
sarb
xor
push
mov
lcall
mov
lods
sbb
lods
jp
loopne
lcall
lret
sbb
dec
mov
test
dec
stos
xchg
ja
roll
inc
aas
xchg
fdivrp
call
xor
out
fdivrs
ret
mov
xor
pop
decl
mov
prefetch
xchg
in
pop
sub
ljmp
cmp
cmp
sbb
push
sbb
inc
and
outsl
dec
sbb
js
adc
call
mov
xchg
mov
xchg
adc
in
mov
nop
xchg
adc
int3
adc
pop
lret
mov
incl
adc
push
adc
jle
aam
outsb
mov
jp
push
mov
lea
mov
inc
orb
push
lret
jbe
bnd
test
ljmp
ljmp
pop
xchg
pusha
mov
and
inc
mov
mov
test
cmpsb
mov
mov
push
mov
ret
bound
stc
shlb
lds
fnsave
mov
or
sub
adc
mov
mov
mov
push
mov
mov
pop
mov
dec
ud1
cmc
mov
inc
fsubrs
sbb
mov
push
inc
mov
ljmp
dec
jmp
pop
push
mov
into
xchg
xor
arpl
mov
pop
and
mov
imul
sub
push
xor
pop
fwait
pop
cmp
xchg
push
das
pushl
popa
outsb
xorl
data16
mov
fnstsw
mov
push
int
adc
ret
pushl
mov
fistl
xchg
push
mov
pop
sahf
push
pop
adc
mov
decl
in
mov
test
push
pop
xor
ss
push
mov
fdivr
jl
sahf
push
xor
mov
mov
ds
call
cld
movsl
jns
adc
push
jge
out
dec
cwtl
in
push
pop
aad
mov
mov
pushl
cld
fildll
fisubrs
aad
divb
mov
mov
push
test
and
pop
mov
shlb
pop
in
jle
or
aad
adc
mov
mov
pusha
xchg
push
sub
inc
ret
es
clc
push
xchg
mov
cmp
fnsave
xor
cmc
dec
cmp
out
clc
jg
aam
and
stos
push
push
pop
cli
mov
cmp
cmp
or
pop
push
hlt
pushl
add
clc
cmp
int
ds
xchg
adc
orl
outsl
mov
add
mov
or
cmpsb
iret
mov
xorb
rorl
xlat
push
fwait
clc
mov
xchg
fistl
in
jbe
inc
cmp
mov
pop
push
int
scas
movsb
into
and
sahf
mov
lods
push
les
xchg
mov
push
in
jecxz
mov
in
aad
dec
out
jae
mov
fisttps
aam
mov
mov
fnstsw
add
addb
or
adc
in
nop
push
les
or
mov
cmc
xchg
bound
cmpsb
std
mov
subb
add
adc
mov
inc
adc
fnstenv
mov
sbb
mov
lods
inc
cs
sub
dec
fisubl
fs
mov
push
sbb
scas
cmp
mov
adc
jge
mov
jmp
or
pop
sub
scas
jb
push
sbb
mov
or
test
pop
jp
or
xchg
xchg
sbb
cmc
decl
sbb
jle
or
push
or
mov
ret
cmpsl
push
jle
mov
or
lahf
pop
mov
inc
in
push
or
enter
jns
into
mov
or
push
mov
insb
jle
decl
lock
mov
sbb
hlt
out
repnz
jae
push
fldt
cld
add
into
pop
inc
or
xor
setbe
clc
or
decl
and
mov
and
je
xchg
dec
xor
push
sub
mov
jb
popf
or
sarb
or
cmp
xor
or
mov
mov
int3
mov
dec
lods
dec
pusha
inc
mov
popa
xor
dec
pop
xchg
mov
pop
lock
pop
xor
mov
jo
push
imul
incb
mov
jns,pt
mov
jbe
fidivs
mov
jg
ljmp
clc
nop
mov
test
cmpsl
inc
mov
sahf
rorl
push
cltd
out
mov
xchg
aad
mov
mov
in
scas
fldcw
push
push
lahf
fisttpll
ffree
mov
pop
lock
mov
or
rolb
cs
negb
out
mov
jecxz
sahf
lock
mov
aad
mov
sahf
lcall
pushl
filds
mov
in
cs
movsl
mov
cld
rorl
mulps
out
lds
clc
pop
mov
or
inc
add
and
mov
push
out
das
mov
jo
push
mov
incl
or
sbb
or
inc
bound
pop
sub
jle
scas
mov
dec
data16
ss
xor
ds
mov
aaa
mov
cs
push
outsb
sub
daa
mov
jmp
test
mov
or
or
adc
adc
faddl
jbe
mov
in
push
jle
mov
int
cmp
fistpll
cmp
lods
shll
mov
dec
push
popf
mov
fcomip
mov
push
pop
outsb
ja
data16
mov
inc
cmpsb
or
pusha
lds
mov
cmp
or
outsb
cs
mov
je
fbld
mov
jnp
or
xor
mov
leave
mov
mov
or
call
movsl
add
cmp
push
push
and
or
not
mov
addr16
pop
incb
mov
outsl
or
ds
mov
and
mov
lock
sahf
xchg
or
xchg
popf
or
xor
xchg
cmc
dec
pushl
mov
sub
xor
sub
gs
mov
repz
sti
xor
cmpsb
mov
add
pop
loop
int
repz
or
or
mov
inc
mov
mov
std
jmp
sbbb
dec
sbb
stos
push
sub
movsb
and
imul
push
popf
push
push
sbb
das
mov
mov
push
sbb
ret
mov
dec
and
hlt
jg
inc
and
dec
mov
pop
cmp
or
imul
in
mov
sbb
aad
fldt
or
aam
mov
pop
jl
add
mov
xchg
mov
idiv
mov
mov
sbb
add
hlt
sahf
mov
jp
sbb
mov
lcall
int
mov
sbb
mov
add
dec
pushl
cmc
rcrb
lea
pop
enter
stos
mov
outsl
or
pusha
sbb
xor
ds
mov
out
cmpsl
sbb
sbb
repz
mov
pop
sub
gs
mov
decl
clc
sbb
adc
fidivrs
loope
lcall
mov
sti
xor
test
dec
sbb
mov
mov
and
xchg
jo
sbb
mov
dec
pop
pop
lret
shll
ss
pushl
movsb
sbb
das
mov
sub
decb
out
ljmp
adc
repz
mov
mov
sbb
in
lcall
shl
mov
nop
sti
sbb
and
lds
xorb
dec
das
clc
daa
mov
jo
incb
shlb
xor
int
pushl
mov
mov
cmp
inc
adc
sbb
xchg
xlat
sbb
incl
sbb
dec
outsb
stos
fistps
jge
dec
mov
stos
stos
sbb
mov
es
xchg
mov
clc
xor
in
push
bound
das
sahf
clc
fwait
mov
pop
cmp
ljmp
jo
mov
fnstenv
std
call
orb
jle
loopne
fisttps
xlat
out
lock
mov
mov
cmp
push
mov
mov
cmp
or
call
sbbl
dec
fisttpl
enter
cld
mov
adc
pop
sub
mov
hlt
mov
and
cs
mov
fildll
shrb
jmp
nop
add
cmc
mov
push
jle
mov
mov
outsb
sbb
lea
outsb
pop
sbb
jnp
sbb
jae
ljmp
pop
push
sbb
insb
mov
jne
add
xor
cld
sbbb
hlt
mov
mov
lds
pop
aaa
mov
sub
mov
mov
mov
mov
mov
call
mov
cmpsb
std
xchg
scas
dec
les
out
or
mov
int
pop
mov
xchg
in
fidivrl
mov
repnz
sbb
rcrl
out
pop
mov
out
cli
sti
add
in
repz
sbb
or
sbb
in
rcrl
outsl
mov
jbe
xor
mov
dec
cmp
outsl
or
inc
dec
scas
ss
fsubs
fimuls
adc
sbb
push
sub
mov
xor
data16
aas
fnstcw
outsl
insb
in
sub
lcall
incl
mov
scas
xor
pop
jge
inc
sbb
ret
cmp
mov
add
mov
dec
stos
cli
outsb
inc
lods
cmp
jns
call
xchg
ds
sbb
xchg
jle
cs
das
jle
xchg
sbb
ljmp
dec
or
jns,pt
sub
outsl
loop
mov
jae
pop
cwtl
dec
cmp
ret
std
in
xchg
scas
mov
sti
movsb
sti
jo
inc
push
scas
and
jmp
incl
shrl
dec
jp
sti
jnp
pop
movsl
fadds
mov
out
in
jmp
insl
movsl
xor
stos
pop
ja
push
add
push
clc
lds
jae
push
jae
int
decl
aad
dec
incb
inc
jo
pop
and
fs
int3
jne
sbb
bound
jmp
test
fs
cs
xchg
popf
pop
xor
jns
out
rcrb
push
addr16
add
in
sti
fldl
test
test
dec
test
mov
mov
in
clc
or
mov
mov
mov
insl
adc
cmovne
cld
ljmp
ljmp
mov
cmp
mov
push
adc
push
mov
outsb
rclb
adc
mov
ficoms
lea
insb
jo
sbb
mov
mov
fs
mov
movsb
shll
xchg
iret
adc
scas
mov
std
out
inc
and
test
pop
or
mov
test
cmp
push
addr16
pop
test
icebp
mov
addr16
sbb
pop
xor
fcmovnb
cltd
sti
jge
add
ljmp
add
ljmp
mov
ds
pop
fldt
inc
add
in
push
sbb
ljmp
dec
loopne
mov
insb
sub
pushf
aaa
test
jnp
scas
shll
mov
lods
psllw
jb
pushf
sbb
fldenv
xchg
decl
aaa
outsl
push
pop
stos
jg
fs
xchg
repz
mov
jno
fisttpl
jg
pop
or
shlb
pop
nop
mov
outsb
addr16
mov
jmp
push
icebp
gs
rcr
pop
mov
ret
mov
insl
mov
sbb
mov
sbb
scas
push
sbb
dec
nop
sbb
movsl
push
mov
xchg
xchg
in
mov
lahf
cli
sti
push
pop
jg
call
mov
std
das
gs
int3
popf
data16
es
jb
push
mov
sbb
call
cltd
addr16
sub
imul
xlat
loopne
shll
leave
sar
decl
sbb
lcall
insl
push
push
lret
mov
push
ds
sahf
decl
cmp
ja
sbb
sbb
popa
push
mov
sar
jmp
jle
or
add
dec
sub
xor
add
jmp
jg
decl
inc
push
fists
fnsave
adc
jecxz
fld
push
decl
and
icebp
or
lods
fcomps
xor
add
and
mov
lcall
subl
adc
outsb
cs
dec
jle
push
fdivr
idiv
jmp
mov
sahf
xlat
dec
dec
and
push
dec
scas
mov
js
fidivrl
mov
out
cmp
sbb
cmc
dec
repnz
adc
lret
pushf
cmpsl
xor
lcall
xchg
adc
sahf
in
divps
sbb
mov
push
sub
or
ret
lcall
sbb
add
int3
mov
jge
mov
xlat
and
push
ret
xor
fstpt
lcall
xchg
dec
addr16
aaa
add
sbb
nop
lds
sbb
fwait
mov
ss
mov
fimull
jmp
cli
cmp
sbb
cmpsb
pop
mov
cmp
pop
notb
popa
fcomip
ljmp
cmp
pop
fwait
stos
in
scas
std
lahf
mov
rolb
adc
cmp
add
xchg
mov
add
out
sbb
nop
mov
add
adc
cmp
cmp
call
xchg
push
out
pop
pop
cmpsb
inc
sub
sbbb
mov
mov
pop
mov
incl
or
repz
ljmp
mov
jmp
sub
pushl
add
jbe
or
insl
push
decl
fidivl
lds
push
inc
out
dec
movsl
and
daa
xchg
xchg
xor
rorl
xchg
test
addr16
pushl
ljmp
cmp
cmp
dec
fidivrs
jnp
cmpsl
lret
out
xchg
test
in
jge
sbbb
cmp
fwait
aaa
pop
xchg
imul
mov
fcomip
sbb
push
mov
negl
daa
sbb
lods
imul
jg
call
lods
out
mov
xchg
lahf
mov
pop
pop
jae
fwait
push
jae
mov
cltd
push
inc
add
ja
pop
out
sbb
fwait
push
repnz
fnstcw
jmp
jge
enter
dec
jmp
test
xchg
stos
stos
xchg
fsubrs
jge
push
jg
mov
sbb
adcb
sbb
push
sarl
sahf
sub
test
push
aam
fs
cmp
jno
cwtl
dec
jmp
js
jl
and
push
add
push
mov
jg
mov
adc
fs
insl
dec
add
xchg
jbe
ss
add
cld
xchg
push
std
fisubl
cltd
and
sbb
lret
xor
jmp
mov
or
cltd
add
push
inc
call
sbb
rcll
mov
adc
cmpsb
sbb
scas
data16
fst
in
fstpt
xlat
fistps
dec
mov
jp
inc
mov
ret
and
sub
lods
lcall
dec
xchg
dec
mov
loop
jae
and
or
fmuls
bsf
insb
add
lock
pushl
shll
dec
push
out
jo
pop
add
mov
pop
sar
mov
jmp
mov
pushf
and
adc
mov
adc
and
scas
jl
jo
mov
sbb
decl
jno
movsl
pop
fwait
data16
pop
repz
mov
les
movsb
pop
mov
pop
out
inc
jo
idiv
incl
scas
sbb
in
mov
and
dec
inc
scas
jl
es
lcall
push
std
movsb
sub
mov
and
je
out
and
pushl
cld
ljmp
in
sub
sbb
pop
xchg
mov
jecxz
add
enter
loopne
sub
scas
in
loopne
cmp
xchg
or
movsb
add
scas
xor
ljmp
xlat
popf
stos
cmp
vpshufd
bound
sbb
xor
lcall
lea
mov
cmp
ret
int3
fstpt
in
lods
movsb
adc
sar
cmpsl
sbb
orl
dec
pushl
sub
push
pop
dec
and
stc
fistpll
or
faddl
stc
jns
push
adc
cmp
or
fiaddl
inc
jle
cmp
pop
push
inc
fidivrs
faddl
add
incl
loope
dec
out
jecxz
fisttps
mov
pop
scas
mov
pop
mov
xchg
jmp
dec
mov
js
push
push
dec
loopne
sub
iret
aam
pop
push
adc
and
and
jmp
insb
aas
pop
adc
jno
inc
pop
jnp
sub
icebp
add
mov
xchg
inc
or
ljmp
lcall
add
cmp
sti
popa
daa
dec
jp
sub
addb
movsb
sub
jmp
or
pop
jge
shll
push
sbb
out
dec
or
push
adc
cs
movsb
mov
ja
shlb
cld
data16
into
push
scas
add
in
xlat
and
lods
and
mov
xorb
xchg
dec
mov
inc
scas
cs
sub
inc
scas
inc
cmpsl
cmp
jbe
xchg
mov
add
mov
clc
shrb
adc
sbb
fld
cmp
xchg
cmpsb
inc
lcall
add
jo
fs
insb
lock
dec
add
div
scas
ds
pushl
in
out
inc
iret
xor
pop
mov
sub
stos
stos
jge
mov
jg
mov
xchg
add
xchg
sub
xor
jnp
ljmp
scas
test
mov
mov
call
imul
out
in
push
mov
repz
dec
xchg
xor
mov
aas
sbb
lods
pop
cmc
and
xadd
imul
aam
sub
jg
jmp
dec
sbb
xor
les
test
incl
cld
mov
lcall
iret
sahf
clc
mov
add
mov
call
loop
cmp
fcmovu
je
mov
shrb
or
sbb
int
aad
cmpsl
adc
ljmp
call
pushf
sbbl
int3
ds
test
test
test
decl
jmp
xor
imul
or
lret
add
add
cli
fmul
add
xor
jg
inc
inc
testl
cmpsl
xor
insl
adc
and
cmp
outsb
mov
sub
dec
or
sahf
mov
lods
pusha
xor
out
jno
out
rcll
sahf
dec
jg
fstpt
incb
mov
jg
cmp
xorl
test
ljmp
arpl
aad
data16
xchg
push
xchg
push
and
jae
mov
frstor
mov
fsubl
lods
test
scas
stos
scas
outsl
stos
adc
fistl
std
ds
dec
jmp
dec
push
jno
dec
dec
lcall
jne
push
imul
cmp
test
ds
pop
xchg
pushl
std
pushl
aaa
lahf
aas
mov
pushf
outsb
or
jne
andl
fmull
std
mov
xor
lret
repnz
jp
and
and
push
inc
jp
cmpsl
jns
fdivrp
jmp
cs
mov
frstor
stc
pop
rorl
loopne
cmp
and
jmp
shll
icebp
fisubrs
mov
mov
add
push
call
incl
sub
push
xor
lods
test
fisttps
popa
bound
fsin
jnp
lods
lods
sti
or
loop
or
mov
or
dec
sub
lods
les
cmp
pushf
sub
mov
outsb
adc
or
adc
dec
push
mov
ljmp
mov
or
xor
lods
sub
testb
pop
inc
xchg
mov
shrb
push
and
inc
dec
sbb
ss
jge
iret
adc
lahf
cld
call
aam
test
sub
movsl
out
lods
in
imul
ljmp
fcomps
imul
push
inc
mov
loop
lods
divb
faddl
dec
in
fbld
xor
push
cmp
mov
std
out
sbb
loop
inc
outsb
je
dec
ret
ljmp
adc
push
test
mov
insl
gs
mov
clc
pushl
dec
xor
rclb
xchg
or
sub
sub
xchg
shlb
xlat
mov
call
loopne
xchg
mov
push
add
pop
lods
les
lods
mov
loope
cmc
push
subl
scas
inc
cmpb
add
clc
popa
push
or
lods
hlt
leave
lahf
xchg
lcall
adc
add
or
ljmp
add
lods
movsb
lcall
adc
lds
aas
push
in
inc
cmc
push
pop
adc
mov
cld
jno
fldt
sub
jge
dec
lods
lods
jns
push
cmp
ljmp
jmp
inc
inc
scas
out
mov
mov
hlt
jle
fisubrs
jo
rcr
sbb
xor
cmp
and
lods
add
lea
std
daa
cmp
mov
xchg
xchg
lods
inc
push
jns
enter
cld
lcall
bound
lods
jne
mov
nop
jno
add
loopne
pushl
mov
sub
jmp
test
dec
cmp
add
fnstcw
call
cld
call
cli
and
sbb
pop
int3
xchg
add
lds
mov
cmp
call
mov
imul
cmpsb
xchg
pushl
sahf
push
int
sbbb
adc
mov
in
test
clc
ljmp
iret
xchg
xchg
mov
jns
sbb
jecxz
in
in
add
ljmp
and
roll
xchg
outsl
scas
mov
jne
imul
lds
inc
push
aaa
and
je
movsl
jns
inc
in
ljmp
xchg
sti
stos
jb
out
push
in
movsb
int3
inc
xor
xor
aad
ljmp
jp
xlat
orl
lea
and
xor
jecxz
stos
adc
mov
inc
out
add
sahf
xchg
data16
pop
fildll
ljmp
mov
mov
iret
fnstenv
inc
adc
and
pop
call
std
inc
add
adc
sub
cs
push
xor
add
adcb
leave
call
or
and
lods
xlat
dec
push
pop
inc
data16
jbe
fisubrl
leave
gs
incl
cmp
xchg
and
clc
lock
jbe
xchg
das
adc
call
bound
mov
sub
mov
sbb
js
mov
and
leave
adc
ret
incl
into
mov
sub
arpl
les
cmpsl
pusha
xchg
and
stc
jle
jmp
jmp
rcll
shll
insl
sahf
xchg
mov
lcall
mov
sub
mov
pop
add
dec
lahf
xor
or
pushl
stos
lods
rcll
mov
jo
cmpsl
popf
loop
mov
and
jecxz
jnp
pushl
push
aaa
imul
pop
stc
sub
or
push
dec
adc
shrb
or
fcmovnu
clc
push
stos
outsb
mov
mov
stos
pop
mov
xchg
mov
jne
push
movsl
or
cmp
sub
call
lds
sub
iret
mov
movsl
xchg
mov
fistl
add
jmp
mov
add
into
or
jne
add
cmp
aas
fldt
mov
and
inc
xchg
into
pop
lret
jne
add
nop
sub
incl
int
sub
sarl
and
xchg
test
cs
dec
cli
and
push
call
push
and
stos
fiaddl
lods
js
jbe
fisttpl
push
xor
inc
push
popa
xor
shrl
add
call
scas
lret
gs
dec
dec
inc
mov
hlt
xchg
lea
push
sarb
mov
push
sub
xor
cmc
and
ret
addb
xor
push
inc
jmp
mov
ret
push
or
sub
cmp
cmp
push
test
es
mov
in
or
cmp
sbb
insl
xor
sti
push
ljmp
clc
pop
gs
jb
jp
das
push
mov
inc
mov
shlb
jl
mov
sti
lods
movsl
dec
in
mov
ds
in
lret
pop
popaw
cmp
mov
jmp
cmp
cltd
cmp
mov
adc
gs
fcoml
insl
aam
loope
pop
inc
cld
ljmp
stos
das
aas
adc
sub
inc
lret
mov
push
mov
bnd
outsl
mov
in
decl
dec
ss
insb
push
iret
push
jae
mov
mov
arpl
pop
adc
mov
call
mov
lret
add
mov
ds
shll
insl
jae
std
push
loope
incl
jmp
mov
add
pop
cmc
inc
loope
adc
mov
pop
lods
sub
out
cli
pop
loopne
daa
lods
fstpl
roll
iret
and
xor
sbb
mov
ljmp
jb
xchg
jecxz
ss
or
mov
cmpsl
and
pushl
inc
outsl
jl
int
add
or
das
pop
push
scas
cli
mov
push
xchg
jmp
iret
xor
ret
cltd
jmp
xchg
pop
cmp
or
sub
mov
and
cwtl
je
cmp
call
cwtl
dec
push
mov
iret
cwtl
push
pop
int
xchg
adc
dec
xchg
push
adc
or
addl
jbe
cs
std
or
jnp
push
jecxz
data16
xlat
dec
stos
ja
outsb
mov
je
jle
aaa
pushf
add
rcrl
inc
call
mov
inc
push
in
int
sub
cmp
mov
outsl
mov
jmp
sub
fldcw
repnz
sbb
xor
rclb
sub
or
outsb
dec
or
call
and
mov
adc
scas
push
lahf
loope
xchg
sti
mov
jbe
lods
out
notb
sti
mov
cwtl
test
jo
add
mov
repz
push
roll
and
adc
cwtl
mov
mov
cs
fidivs
call
adc
jmp
jp
loopne
in
aad
mov
cmp
cmp
push
cltd
dec
mov
stos
out
clc
call
push
test
cltd
xchg
adc
sbb
lret
stos
imul
mov
fldl
lock
and
push
pop
sub
push
push
cmpsb
fsubp
jp
xor
gs
fmul
sub
and
sbb
sub
lods
pop
sbb
addr16
pushl
xor
push
jge
xor
jmp
test
add
subl
mov
jmp
mov
pop
ja
popa
xor
mov
sahf
dec
and
fistps
pop
jb
or
xor
ljmp
daa
jnp
mov
cltd
xchg
loopne
int
aad
or
or
in
imul
cld
btrl
insb
je
and
js
sub
aam
pop
ds
lds
mov
cltd
mov
add
ljmp
or
mov
fwait
stc
mov
push
sub
ret
and
jg
scas
cli
jge
sti
and
adc
adc
stc
clc
je
add
loope
call
jb
xchg
test
popa
out
lock
xor
push
and
lock
and
dec
lds
std
ljmp
add
sti
xor
cwtl
xchg
loope
cli
ds
cmp
ja
cltd
movsb
popf
lock
sahf
leave
inc
xchg
mov
jb
test
mov
dec
int
pop
sti
outsb
sbb
loopne
sub
mov
insl
xchg
mov
jp
movsb
mov
cmp
jg
cwtl
mov
adc
insb
inc
cltd
xor
pop
std
fidivrs
push
sahf
ret
outsl
test
cmc
jb
lahf
lret
sbbb
std
adc
dec
pop
jmp
enter
adc
sub
mov
pusha
adc
or
popw
jl
cltd
mov
mov
iret
cmp
xchg
addr16
fcompl
and
push
pushl
cltd
es
jo
jae
and
cmpsb
or
or
and
out
sbbb
cmp
push
lahf
cmp
ret
push
lds
mov
mov
cltd
xchg
adc
jge
js
fwait
out
aad
sti
iret
repz
into
sub
mov
ljmp
pushf
sub
fdivrs
mov
mov
inc
sub
ret
cmpsb
jnp
mov
jmp
cld
mov
cmp
loop
inc
or
mov
dec
out
pop
jle
push
iret
and
pop
filds
pop
mov
ljmp
aad
cltd
push
fisubl
lods
jbe
comiss
mov
mov
sub
mov
adc
xchg
xchg
sbb
rorb
clc
push
sti
sub
out
out
lcall
call
add
popa
lcall
addl
mov
pop
shll
xor
daa
cmp
cli
hlt
daa
jno
repnz
jg
daa
test
subb
or
ss
lcall
push
insl
daa
xchg
daa
lahf
xor
imul
daa
in
jmp
daa
jecxz
fildll
fcomi
ds
out
cmpsl
loop
sub
pushl
cs
sbb
lret
incl
sub
rclb
add
pop
sub
cli
daa
xor
mov
stos
cltd
mov
shlb
push
mov
daa
scas
jp
add
daa
fnsave
sub
jne
inc
daa
lret
mov
and
adc
sbb
xchg
daa
fwait
enter
idiv
mov
daa
mov
dec
and
and
jo
lcall
lcall
mov
cmpsb
mov
mov
daa
aas
sub
push
lahf
aad
dec
xor
lcall
fldt
cmpsb
add
sbb
jmp
cmpsb
cld
mov
fwait
mov
decl
sub
sahf
andl
push
cmpsl
out
adc
clc
das
cli
daa
loope
inc
test
es
jmp
xchg
mov
in
outsb
lock
sub
in
adc
in
xchg
daa
inc
pushf
push
gs
lahf
daa
cmpsl
xchg
outsl
dec
xchg
push
mov
lods
and
mull
mov
jg
std
mov
daa
das
mov
daa
pop
into
stc
daa
int3
int
or
xchg
daa
pop
les
daa
add
cs
mov
outsl
cmc
daa
movsl
insb
adc
daa
out
addr16
daa
mov
gs
jg
jnp
sub
ja
cli
outsl
clc
or
mov
sti
inc
mov
adc
lock
loop
dec
push
scas
mov
mov
sar
in
mov
mov
daa
sub
xchg
out
fbld
or
lahf
cmpsb
cmp
adc
in
decl
and
mov
ja
jg
ficomps
testb
jb
push
daa
dec
mov
loope
xor
mov
mov
mov
test
hlt
test
int3
lods
data16
ljmp
clc
push
mov
jb
pop
test
or
test
add
cmp
sahf
cmpsb
lcall
in
adc
in
inc
mov
shrb
enter
push
push
rcrb
fcomip
sbb
das
mov
dec
ds
and
leave
push
fcomip
mov
jnp
sahf
jnp
pusha
sbb
pop
xchg
sbb
outsb
ret
jno
and
decb
mov
push
dec
jns
mov
les
dec
jno
test
mov
jmp
and
push
adc
push
sub
sbb
jmp
lods
cmp
es
inc
fcomps
imul
test
dec
push
push
mov
dec
sbb
inc
push
add
fdivrl
ret
xchg
aam
cmpsl
jp
pop
xchg
push
cld
push
cld
shll
inc
cmpsl
std
xchg
or
sahf
decl
lcall
adc
scas
es
or
data16
xchg
rol
mov
adc
daa
sti
into
lcall
jecxz
ljmp
test
jg
pushl
push
mov
arpl
frstor
mov
cmpsb
inc
mov
faddp
in
mov
xchg
data16
lea
test
test
rol
loope
push
fdivr
decl
je
jbe
int3
mov
int
dec
test
arpl
scas
mov
mov
jmp
inc
test
js
mov
push
push
rorb
cmpsl
pushf
pop
call
call
iret
cmpsl
int3
dec
push
mov
pop
shll
imul
jne
dec
mov
xchg
es
and
les
cmp
inc
pop
stos
jmp
pop
popf
adc
sub
mov
jp
mov
cmp
cmp
mov
mov
mov
lods
notb
sbb
push
ja
rorb
mov
jmp
imul
int3
or
out
sbb
addr16
push
jle
clc
mov
push
cli
mov
xchg
cmpsl
cmp
test
das
loopne
jns
in
sbb
cli
clc
clc
call
lock
test
shrb
sub
into
or
mov
pop
stc
andb
in
pop
mov
sbb
popf
cwtl
ljmp
test
scas
cltd
repnz
incl
ret
or
sub
and
clc
sbb
mov
push
sbb
xchg
insl
jg
mov
sub
xchg
push
sub
icebp
push
hlt
xor
mov
cmp
decl
mov
sub
imul
das
inc
sub
mov
out
mulb
and
fsubrp
mov
and
ret
loop
fcom
mov
cwtl
ret
xchg
lcall
clc
mov
push
mov
pop
sbb
or
sbb
jmp
sbb
cmpsl
icebp
sbb
mov
sbb
shld
mov
mov
inc
mov
mov
lcall
sbb
iret
loope
aam
stc
jle
sub
jge
jmp
decl
outsl
push
adc
mov
in
ljmp
or
data16
incl
fmull
or
mov
out
fistpll
mov
mov
call
lock
mov
cwtl
push
sub
lock
je
cs
rcl
or
xchg
push
movsb
jmp
stc
mov
clc
pushf
in
and
movsb
mov
sbb
cltd
inc
cmpsl
movsb
cld
and
cmc
or
call
test
cld
inc
fldt
repnz
lock
test
cmpsb
and
jb
cld
jg
out
cld
push
icebp
sub
movsb
xor
shrb
ja
adc
stos
stos
push
cmpsb
sahf
or
lsl
adc
sbb
jg
std
or
add
mov
jmp
dec
nopl
pushl
lds
add
in
or
test
push
into
aad
aad
bound
rclb
call
add
mov
ret
sbb
sub
fs
aas
mov
inc
into
push
mov
lock
mov
aad
outsl
maskmovq
push
sub
mov
sarb
mov
decb
fdivs
mov
aas
push
inc
mov
mov
cmp
loop
cld
xchg
mov
data16
fidivrl
dec
push
dec
icebp
jge
aam
fildll
jmp
imul
inc
testl
inc
inc
rcrb
scas
imul
scas
and
xchg
movsl
test
ljmp
jno
xor
dec
loopne
test
jge
scas
cmp
lock
call
addl
pop
les
adc
lea
sar
scas
inc
xchg
or
cmc
arpl
mov
sbb
ljmp
nop
mov
jne
sahf
add
clc
mov
leave
or
test
add
lret
jno
movsb
call
ja
add
cmpsb
daa
popf
jp
adc
in
cmpsb
cli
jae
mov
xchg
sahf
xchg
and
inc
xor
enter
shlb
std
pop
mov
loopne
rclb
fst
inc
fsubl
rcl
orl
dec
ss
lret
loope
rcrl
add
mov
mov
mov
in
jle
push
cmp
clc
sti
mov
or
cmp
fcmovbe
cmp
out
stc
mov
adc
or
mov
loop
mov
mov
cmp
sbb
dec
xor
add
push
lcall
cmp
jmp
sub
bound
lods
insl
add
mov
call
dec
movl
cwtl
movsl
inc
popf
sti
xchg
push
cld
xchg
movsl
xchg
outsl
jp
jae
idivl
subl
aam
cmpsb
movb
mov
mov
outsl
cli
ret
sub
in
xor
inc
pop
jae
cmp
ljmp
out
call
ljmp
fdiv
je
in
je
shrl
je
push
xchg
and
sahf
adc
movsl
mov
imul
adc
sub
movsl
lcall
das
sbb
push
mov
or
notl
lcall
and
push
and
xor
shll
stos
or
xchg
mov
sti
fcomip
lcall
mov
es
xchg
mov
sbb
mov
jg
popa
mov
and
xchg
int
loopne
push
cld
daa
cmpsb
mov
repz
sbb
mov
dec
sbb
jmp
xor
or
les
repz
xchg
xlat
sub
cmp
mov
add
xor
call
insl
adc
shlb
ds
cmp
mov
out
cmc
imul
mov
jae
xchg
add
sbb
decl
lods
sub
sub
sahf
test
add
sub
pop
or
ljmp
lock
add
rcl
cmp
pop
leave
popf
push
mov
cwtl
add
dec
mov
add
xchg
in
pop
cwtl
jne
cmp
xchg
push
add
pop
lret
dec
lods
lcall
cmp
xor
push
pop
mov
ljmp
mov
jno
ss
and
mov
movsb
dec
int
lds
movsl
incl
arpl
outsb
pop
dec
or
mov
repnz
sub
stc
ss
aas
mov
pop
movsb
lahf
cmp
int
rcr
pushl
xor
dec
fwait
jnp
xchg
mov
add
jb
stos
outsb
mov
aaa
bound
std
icebp
jmp
jmp
test
negb
sbb
call
xchg
xchg
out
sar
fbstp
mov
xor
dec
ds
xor
loope
sbb
outsb
sub
and
ljmp
int
in
mov
pop
addr16
inc
jp
pushl
ds
sub
cs
in
add
sub
push
mov
xchg
cwtl
xchg
adcl
testb
decl
inc
jle
jg
xchg
cltd
lods
lahf
cmp
scas
jl
adc
int
xchg
popa
call
out
sbb
xor
daa
xchg
cmc
sub
call
fldcw
sbb
insb
xchg
shll
mov
sbb
std
add
xchg
mov
fcos
jmp
xchg
out
out
pop
jp
movsb
movsl
push
test
cmpsl
int3
pop
test
fwait
sbb
mov
fst
mov
shl
jae
or
jo
jo
in
sub
xlat
cld
pushf
push
fistpll
gs
das
and
dec
lds
lods
les
push
inc
and
inc
inc
push
sbb
and
jp
arpl
in
imul
jb
xor
idivb
jmp
pop
mov
lcall
out
stos
inc
adc
ret
inc
dec
pcmpgtd
or
aam
dec
inc
cmp
xor
repz
call
xchg
pushf
xor
mov
sbb
xor
cs
leave
insl
sub
inc
cwtl
sbb
mov
xchg
out
mov
jmp
add
push
dec
sbb
mov
loopne
dec
andl
mov
les
cmpsl
inc
cmp
dec
pop
mov
pop
ja
std
ljmp
call
stc
jbe
je
lods
inc
fisubs
mov
movsb
clc
sub
jmp
cs
lret
jp
repz
pusha
adc
pop
mov
push
ljmp
mov
je
jle
jb
mov
pop
push
cmp
inc
mov
lds
ljmp
arpl
jl
inc
ret
adc
test
shlb
mov
sahf
sub
scas
mov
loop
lds
enter
xchg
xchg
les
call
daa
decl
iret
dec
enter
fidivs
xor
popa
push
xchg
bound
pushf
cmpsl
decl
hlt
pop
dec
xchg
pop
cmpsb
sahf
cmp
orb
cs
xchg
lods
cmp
incl
cmp
fnstcw
dec
addr16
ss
adc
stos
mov
mov
or
fistpl
xchg
lods
nop
xor
lds
jns
cmpsl
repz
aam
jmp
fimull
and
std
push
into
xchg
nop
into
adc
int3
or
icebp
popf
cmpsb
lcall
call
push
or
inc
xchg
out
daa
out
jne
repnz
mov
inc
cmp
jmp
mov
int
cmpsl
pop
aaa
test
sub
in
xchg
not
decl
xchg
in
xchg
loop
cmp
sub
loope
fisubrl
mov
fisubrs
dec
aaa
std
pop
cld
lods
mov
rcrl
pop
dec
test
in
push
addl
fcompl
flds
jmp
xchg
jl
lcall
clc
jg
sbb
shlb
ljmp
ljmp
push
cs
mov
adc
notb
sub
push
mov
mov
sub
push
iret
call
or
imul
jbe
dec
pop
or
sub
jb
call
and
cli
or
inc
jbe
jno
clc
cmp
jg
cmc
clc
xor
daa
inc
or
data16
mov
push
inc
in
repnz
lcall
pop
mov
xchg
std
xchg
scas
idivb
gs
jbe
scas
iret
test
adc
or
loope,pn
ficoml
sar
nop
sbb
addb
clc
sub
les
cld
call
and
pushf
dec
std
scas
jb
jge
push
call
push
popa
sbb
ss
and
gs
clc
es
lea
in
lcall
dec
cmp
pop
ror
scas
in
iret
aaa
push
pop
cmp
pop
cmp
jg
jp
inc
sbb
push
mov
xlat
add
scas
mov
sbb
push
sbbb
fistps
adc
or
or
or
ret
in
mov
jmp
icebp
mov
jle
xchg
or
cmp
ror
shll
rcl
sub
jmp
sub
cmp
in
inc
out
popf
outsb
stc
and
movsb
pop
and
jns
call
sub
nop
test
repz
imul
jae
inc
mov
jecxz
imul
fbstp
insl
dec
inc
clc
xlat
loopne
sub
pushl
sub
mov
out
daa
stos
stos
dec
out
sbb
add
clc
mov
pushl
rclb
jne
push
push
xchg
in
xor
xchg
cmp
mov
xchg
sbb
xor
insl
shll
and
cmpb
mov
call
lods
lock
jle
mov
mov
add
out
xchg
outsb
and
xchg
fisubs
mov
testb
add
dec
mov
int
xor
iret
jg
and
divl
adc
inc
sub
decl
jb
movsl
xor
fwait
ds
mov
pop
push
lods
mov
decl
or
jecxz
lahf
into
xor
xchg
lret
mov
sti
sahf
cmpsb
cmpsb
jg
xchg
loop
and
sti
mov
lds
inc
iret
std
mov
loope
cmp
shll
enter
ljmp
pusha
cmp
pop
xchg
fimuls
insb
xor
sbb
pop
shrb
stos
lds
add
subb
add
xor
mov
scas
scas
pop
fs
or
enter
cmp
xor
mov
mov
mov
xchg
sbb
cltd
movsb
pop
add
imul
iret
lret
sub
mov
jo
into
cmp
ljmp
es
cmc
in
popa
xchg
mov
push
cmp
adc
lahf
cs
pushl
sub
daa
les
loop
call
mov
sahf
pop
mov
cmp
xor
cli
pushl
push
lds
out
aas
lahf
fidivrs
divb
mov
loop
icebp
call
lea
xchg
mov
orl
inc
subb
lahf
stos
or
sar
aas
call
xchg
movsl
fstps
loopne
and
pop
outsb
idiv
jmp
mov
lret
popf
cs
das
aad
rol
and
sbb
xor
decl
cmpsb
and
ss
sbb
mov
pop
rol
or
decl
or
test
shrl
ret
fs
aad
cld
ljmp
and
sbb
mov
cli
inc
cmpsb
xor
xlat
call
push
or
lock
leave
sahf
xchg
lcall
ljmp
mov
pushl
and
adc
mov
pusha
movsl
jecxz
pop
mov
cwtl
jae
lock
pop
stos
cs
lods
jp
in
sub
stos
sarl
decl
insb
das
lods
add
jle
fyl2x
inc
cwtl
xchg
inc
aad
cmc
sahf
inc
mov
xor
push
or
in
clc
mov
mov
das
popf
je
pusha
int
fsts
sub
inc
mov
xchg
mov
and
mov
add
sarb
ljmp
test
out
cmpsl
data16
mov
jmp
jmp
mov
mov
xlat
pop
test
idiv
ljmp
lcall
mov
jns
mov
fiadds
stos
in
xor
mov
cltd
in
ret
inc
fcmovne
pop
test
aas
in
sub
xlat
xlat
xor
mov
mov
and
lcall
int
push
pop
cmpb
std
sbb
xor
mov
mov
jmp
push
mov
cld
jmp
sub
inc
das
sub
les
jmp
mov
mov
or
repnz
adc
and
cmp
lret
incl
ret
push
sub
push
aas
fsubs
push
pusha
orl
xor
call
outsl
icebp
push
adc
cmp
push
aam
mov
jo
ret
test
adc
daa
xchg
cmpl
adc
mov
scas
or
imul
call
mov
insb
cmpl
xor
mov
jg
enter
hlt
or
call
push
shll
pop
nop
outsl
sub
jl
lret
daa
pushf
imull
clc
xchg
and
inc
mov
add
push
shll
or
std
int3
int
inc
jmp
lcall
jl
push
jge
inc
sar
cmp
push
pop
mov
cmp
or
shrb
jg
fwait
cmp
inc
mov
inc
cmp
push
bound
push
xchg
out
clc
cltd
add
sub
sbb
and
mov
mov
pushl
pop
push
arpl
les
pop
xor
and
call
sahf
in
iret
xor
addb
push
sbb
ljmp
inc
fldt
push
add
dec
leave
mov
imul
jbe
push
fisttps
sub
mov
test
push
and
loopne
imul
mov
adc
test
and
fldl
movd
mov
jg
dec
test
inc
ret
xor
lods
pop
pop
lahf
jmp
and
mov
cli
pop
movsb
addr16
enter
in
pop
test
pop
scas
pop
dec
sar
pop
xorb
mov
sbb
rclb
pop
in
and
popf
hlt
dec
and
in
add
aaa
sahf
rcrl
push
inc
jne
sbb
jg
sub
jmp
push
shll
xor
xchg
dec
jmp
loope
jg
std
test
lds
xor
xor
push
pop
add
mov
popf
lea
clc
lcall
das
or
mov
pop
mov
xor
mov
push
decl
imul
and
sbb
scas
sub
loopne
inc
out
aad
in
insb
lds
call
adc
aas
adc
testl
sub
jmp
sbb
jg
arpl
std
xor
ret
scas
rcrl
andl
pop
repnz
push
cmp
loop
adc
orb
scas
mov
or
jns
lea
arpl
xchg
push
pushf
push
sbb
ljmp
aam
aam
mov
fucomi
in
lahf
xor
aas
push
add
xchg
pushf
hlt
ljmp
stos
dec
pop
icebp
pcmpgtd
sahf
sub
shll
mov
pusha
add
mov
inc
fcmovb
mov
ljmp
jnp
fisubrl
adc
jl
sbb
push
and
cmp
ljmp
inc
sbb
mov
fwait
imul
sub
jl,pn
cmp
ds
sarl
jge
movsl
push
jnp
adc
xor
push
push
lods
add
std
push
lret
jge
decl
jae
pushf
stc
inc
mov
xor
arpl
jno
lock
or
cmp
cmp
cmc
mov
pushf
mov
sub
inc
xchg
lret
mov
ljmp
ja
scas
push
pop
icebp
cmp
mov
inc
mov
js
ljmp
mov
pushf
lret
inc
mov
mov
xchg
rcr
or
scas
clc
js
and
fbld
dec
inc
sub
test
mov
call
insl
mov
dec
test
mov
in
loop
push
mov
or
pop
popf
add
int
cld
push
hlt
int3
imul
andl
sub
int3
imul
rcll
sbb
and
fnstcw
or
incl
out
fcmovb
dec
jo
cmpsb
inc
and
pop
cmp
and
push
mov
dec
push
mov
cmp
std
xchg
iret
push
add
popf
jbe
jae
jne
shll
loopne
push
daa
add
loope
test
ret
dec
jmp
pop
cmp
lahf
dec
pop
daa
mov
push
cmp
mov
outsl
cmp
cmp
xor
add
sbb
stc
dec
and
push
orl
incl
sahf
aam
scas
lret
popa
mov
clc
cmp
cmp
ja
leave
cli
xchg
push
insl
push
into
dec
jne
sbb
cs
mov
in
leave
and
mov
inc
fwait
in
mov
decl
inc
in
imull
push
push
cmpsl
xor
adcl
out
aas
loop
out
cltd
and
xchg
fnsave
push
add
cwtl
adcl
inc
std
or
lcall
and
xchg
sub
fbld
mov
lahf
sub
test
imul
cmp
add
inc
lcall
mov
push
push
aad
mov
xor
jae
dec
popa
mov
dec
out
inc
pop
mov
incl
ss
inc
data16
fistps
in
test
lret
int
inc
pushl
clc
jae
insb
xor
sub
cld
push
inc
out
rorl
in
aam
jg
xchg
loopne
mov
addr16
mov
or
pop
add
mov
cmp
dec
pop
pop
cmpsl
outsb
pop
sub
popf
add
imul
push
inc
pushl
inc
rcl
mov
mov
loope
into
xor
pushf
adc
cmp
decl
push
xor
cs
push
xchg
inc
jno
lods
mov
ja
and
call
jge
icebp
nop
sbb
aad
std
cwtl
jnp
push
mov
jno
add
dec
jmp
dec
ljmp
clc
xlat
cmp
fwait
inc
jp
or
jbe
mov
mulb
mov
cld
iret
mov
add
jmp
mov
mov
outsl
mov
call
and
shlb
jge
pushl
les
cmc
adc
mov
mov
xor
cs
test
inc
pop
xlat
mov
in
push
mov
xchg
ss
ljmp
ss
pop
pop
push
popf
dec
xchg
pop
incl
insl
add
insl
rclb
xchg
test
lahf
call
loop
int
cmp
lods
adc
lcall
rclb
into
pop
cmpsl
cmp
movsb
push
lods
aad
pop
push
or
jecxz
pushf
push
incl
dec
out
ret
dec
jno
aad
xchg
and
dec
imul
out
lcall
pop
xor
repz
fadds
pop
xor
mov
pop
sub
inc
mov
lcall
enter
inc
sub
and
mov
and
sbb
lahf
cmp
dec
add
ret
pushl
and
inc
fmull
mov
sahf
neg
test
lods
push
std
incl
and
mov
jp
inc
cmp
or
inc
jbe
or
fisttpl
mov
xorb
dec
shll
rolb
mov
xchg
fidivl
int
or
jg
incl
test
xor
pop
inc
aaa
xor
cmp
clc
jns
push
xchg
mov
lcall
and
or
pop
push
inc
mov
push
decl
xor
inc
addb
aaa
cmp
pushf
mov
mov
pushf
sbb
mov
ljmp
and
psrlq
mov
pop
pop
pop
sbb
int
mov
cld
decl
pushf
jbe
push
lods
lea
insb
mov
mov
jg
pop
pushf
add
cs
jp
popf
inc
sub
sbb
cld
or
cltd
lahf
push
xor
dec
jbe
jo
sbb
add
mov
lret
sub
std
jmp
mov
fs
dec
mov
add
push
aad
clc
sarb
xor
lcall
ss
cmp
push
push
xlat
cmp
push
cwtl
mov
ja
lcall
in
add
cmpsl
arpl
sub
in
jg
pushf
adc
loopne
ss
xor
std
and
pop
or
lcall
add
push
mov
push
jns
mov
mov
cmp
inc
decl
mov
xor
divl
jnp
jne
xchg
dec
ret
xchg
aas
inc
sbb
xor
mov
dec
iret
push
and
fidivrs
sbb
and
ljmp
int3
push
lea
lods
pop
xor
aaa
inc
and
outsb
ljmp
lahf
lock
xchg
xchg
dec
rcrl
and
xlat
test
mov
or
xchg
fwait
pop
icebp
das
shrb
pushf
mov
cs
push
mov
lcall
add
pop
testl
jle
push
dec
js
adc
stos
cld
lcall
lock
movsl
dec
std
or
adc
or
mov
das
enter
dec
fcos
pushl
dec
fisubrl
lods
test
push
push
sbb
fwait
nop
xor
inc
xor
gs
adc
push
and
out
lods
scas
cmp
push
mov
ljmp
adc
mov
inc
pop
inc
call
add
and
add
ljmp
add
andb
lahf
jmp
lahf
sbb
jnp
pop
jl
int
sbb
or
daa
aad
int3
lret
loope
in
add
jp
mov
xor
push
leave
and
push
iret
popa
jge
jl
sbb
push
inc
cltd
add
sbb
pop
fsubs
loope
mov
cmpsl
sub
out
xchg
ficoml
mov
pop
outsb
scas
pop
cltd
pop
mov
mov
pushl
cs
push
adcl
outsb
or
out
cmp
mov
fwait
cli
push
xchg
sub
inc
push
lret
in
mov
mov
sbb
test
xchg
loop
scas
cmpsb
ja
ljmp
pop
dec
adc
lret
mov
movsl
dec
and
pop
or
mov
ror
in
les
outsl
dec
insb
sub
mov
pop
jns
sub
dec
pop
aas
pop
stos
stos
popa
sub
xchg
inc
cmpsb
nop
or
cmp
ret
ss
mov
adc
in
or
imul
test
lea
sbbb
call
mov
iret
pop
mov
xor
cmpsl
sbb
jno
cmp
jmp
stos
in
mov
cltd
aad
in
mov
lods
psadbw
test
loop
dec
ret
call
out
push
dec
neg
mov
lcall
sbb
sbb
dec
gs
cmp
xor
aas
out
or
roll
decl
sbb
movsl
adc
stc
lock
cwtl
stos
cmp
movsl
mov
mov
popa
popf
aam
loopne
mov
incl
cli
fwait
push
mov
push
loopne
lods
mov
mov
dec
fmuls
xor
fmulp
imul
fcomip
arpl
xor
dec
ss
mov
jg
pop
adc
clc
dec
jno
or
pushf
push
fdivs
mov
fstpl
jge
lea
test
add
icebp
scas
jg
in
outsl
aam
inc
je
movsl
movswl
inc
shlb
jmp
or
cld
or
jmp
push
cmp
ja
mov
mov
and
andb
shrb
xor
push
into
call
pop
cmpsl
into
decl
mov
push
mov
test
jp
mov
dec
loop
out
popa
fidivrs
jg
rcrl
scas
ret
outsl
mov
mov
stos
jbe
lods
js
mov
mov
jecxz
sub
cli
lods
int3
inc
cmpsl
add
jl
outsl
stos
inc
sub
rcrb
xchg
adc
aaa
pop
int3
aam
xor
xlat
arpl
xchg
jbe
ljmp
push
sub
or
lret
cld
insl
notl
imul
loopne
dec
fidivl
mov
ljmp
les
lds
lret
inc
xor
xor
pop
les
mov
int3
dec
xor
jg
test
je
xchg
pop
lea
das
sub
dec
jmp
xchg
mov
decl
pusha
push
out
xchg
lahf
ret
add
sbb
xor
or
fmulp
jae
push
pop
call
or
mov
roll
repnz
xchg
call
in
addl
js
aas
mov
popf
jb
mov
inc
lret
cmp
pushl
dec
xor
lahf
pop
xchg
mov
dec
push
sbb
icebp
addb
cld
ret
pushf
pop
add
mov
pushl
cmpsb
mov
mov
jmp
cwtl
pop
scas
test
ds
ljmp
mov
stos
xchg
mov
xlat
loopne
sbb
pop
test
or
scas
jg
jg
push
dec
mov
add
lret
aaa
imul
pop
or
push
jge
jge
aas
and
push
repnz
lret
mov
nop
cmpb
lock
xor
incl
mov
xchg
jns
dec
and
cmp
mov
inc
cmp
ds
orl
rolb
mov
jmp
mov
movsl
mov
pop
jmp
icebp
call
cwtl
sub
jg
mov
subl
out
mov
adc
pop
divl
decl
adc
add
or
clc
lret
das
and
js
sbb
int
in
incb
fwait
test
mov
and
jg
or
sub
jb
or
jbe
mov
das
addb
mov
sub
ret
imul
mov
dec
repz
and
ljmp
or
jecxz
loope
iret
adc
push
xchg
and
popf
xor
cs
push
out
loop
fcomip
decl
test
in
mov
or
xchg
mov
in
xor
nop
push
and
xchg
jbe
mov
repz
add
call
data16
addr16
xchg
add
ret
mov
test
dec
inc
and
call
mov
cld
arpl
inc
mov
daa
ret
fdiv
xor
lods
jmp
jg
testb
mov
and
xor
xchg
repnz
xchg
sti
mov
movsb
incl
movsl
stc
popa
xchg
mov
bound
pop
fwait
add
stos
sahf
rolb
out
outsb
incl
push
arpl
rclb
inc
ret
dec
fwait
mov
cmp
mov
xchg
je
mov
fidivrl
xchg
xchg
xchg
movsb
dec
sbb
pushf
rclb
xchg
out
movsl
ljmp
clc
addr16
fists
lock
int
jae
fildll
jnp
dec
and
adc
push
xchg
fmull
or
xchg
test
xchg
and
je
incl
test
dec
enter
cmp
lds
xchg
xor
mov
jmp
movl
fidivrs
cmc
sub
cltd
xchg
lods
stos
push
ds
es
in
leave
into
sub
pop
sahf
lods
xchg
cs
sbb
push
subl
ds
js
inc
bsr
dec
xorl
adc
das
adcb
jl
xor
jge
ja
arpl
fdiv
cmp
outsl
sbb
fcoml
jmp
es
jmp
das
mov
pop
shrb
jmp
loopne
mov
sub
pop
daa
insb
mov
jbe
rcr
xchg
addr16
lcall
sbb
cmp
jne
mov
pop
lock
cmp
adc
jno
jmp
mov
call
xor
add
mov
fimull
rclb
inc
repz
pushf
inc
scas
cmpsl
push
enter
jg
sbb
shll
ljmp
stos
cmc
scas
xor
hlt
ljmp
js
std
divb
push
lods
add
sub
push
movq
lcall
dec
pop
jp
push
scas
xor
dec
cmpb
repnz
xchg
xchg
xor
int
hlt
add
loop
mov
pushf
gs
lods
mov
aaa
std
and
pop
stc
xor
jg
jne
sub
testb
cmp
stos
js
push
sar
jle
sub
lahf
cs
push
js
push
loope
int3
jmp
cmpxchg
es
xor
cmp
aas
and
popa
push
lahf
fimull
jl
sahf
ljmp
roll
insb
xchg
xor
cmp
movsb
jo
sub
fwait
pushf
adc
jns
lea
popf
add
pusha
insl
les
push
push
jge
pop
sub
mov
mov
cmp
and
or
sbb
mov
push
stos
sbb
mov
incl
cs
fwait
mov
into
mov
scas
das
imul
add
incl
xchg
cmp
add
jno
xor
mov
daa
xchg
mov
xchg
ficompl
push
iret
pop
mov
push
bound
xor
jbe
and
in
gs
cmp
or
aas
fcoms
pop
mov
xchg
xchg
pop
cs
dec
mov
jmp
int
sbb
lcall
or
loop
and
shrl
fisubrl
lcall
dec
xchg
mov
xchg
mov
ret
pop
cmp
imul
cld
movsl
fwait
leave
mov
jmp
das
xor
leave
addr16
xor
cmp
decl
push
gs
dec
testl
adc
les
aaa
std
lcall
mov
out
clc
jp
mov
stc
sub
mov
add
subb
incl
nop
jle
mov
sbb
sti
das
fiaddl
rep
sub
mov
sbb
incl
repnz
aas
jecxz
iret
add
xchg
or
mov
cld
push
jge
fisttpl
lcall
inc
jmp
loopne
data16
mov
inc
mov
xchg
std
leave
jmp
cmpsl
ljmp
add
js
and
loopne
or
rcr
fstl
sub
mov
jnp
cmp
in
mov
and
dec
mov
mov
scas
clc
or
jecxz
test
sbb
subl
add
in
pop
sbb
xchg
testb
sbb
pop
lahf
scas
push
push
mov
fs
in
andl
iret
pop
out
repz
ljmp
sahf
lock
ljmp
sbb
mov
ja
pop
sub
mov
pop
push
xor
inc
in
inc
sub
jnp
sub
addr16
mov
add
sub
and
pop
cmp
jmp
arpl
lcall
lret
in
sub
xor
rcrb
dec
mov
xor
pop
push
xor
and
or
mov
call
jnp
cs
movsb
fstps
and
and
pop
cbtw
jg
jo
push
cmp
add
test
push
lock
orl
push
mov
ljmp
dec
js
xchg
rclb
in
lds
xchg
mov
xor
and
aas
xor
push
scas
call
xchg
xchg
pop
xchg
iret
ljmp
push
pop
push
out
inc
fsub
and
lcall
fsubrs
ret
and
insb
add
xor
inc
and
and
dec
ret
pop
adc
push
push
stos
xchg
cs
lahf
fs
sub
call
cltd
int
mov
call
in
xor
xchg
sub
psrlq
add
popl
in
pop
hlt
fwait
outsb
clc
mov
add
jnp
js
cmp
cmpsb
inc
in
sub
mov
call
stos
and
nop
sahf
mov
test
jae
jbe
out
iret
xor
test
lcall
fnstenv
pop
xor
insl
mov
sub
fxtract
gs
sub
mov
out
lds
cs
mov
sbb
out
rcr
fwait
test
incl
ss
mov
mov
sbb
fnstcw
out
cs
aaa
aas
mov
scas
cli
lcall
push
mov
xchg
mov
jle,pn
aad
add
ja
incl
movsl
stos
dec
dec
faddl
ss
movsb
xchg
mov
jmp
and
gs
jns
mov
into
jg
cmp
and
lret
cmp
pop
pop
inc
not
jge
jle
inc
js
lods
enter
sbb
in
pop
cmp
adc
adc
xchg
or
and
or
pop
lcall
sbb
lss
inc
int
pop
dec
shrb
mov
adc
test
icebp
jmp
das
popf
mov
sub
lcall
cmp
cmc
decl
xchg
imul
out
cmp
clc
popf
mov
or
cli
sbb
ljmp
sbb
cmpl
call
adc
sub
aaa
mov
push
idivl
repz
pop
cli
inc
push
or
cli
decl
xchg
sbb
fbld
es
push
lahf
std
stos
or
jmp
out
lds
sbbb
and
js
ljmp
ja
add
int3
sbb
adc
xor
jle
daa
push
xchg
add
cmp
ja
cmpsb
or
mov
add
jg
nop
xchg
cmpsb
repz
sub
cmc
loop
cmp
movsl
stos
cmp
rcrb
inc
xor
and
mov
cmpsl
out
rorl
decl
mov
lods
xchg
decb
inc
dec
mov
mov
cld
mov
push
cmp
jg
or
cmp
stc
int3
js
inc
or
test
sub
ss
sub
sub
jmp
ja
loop
xor
mov
imul
cs
sub
dec
scas
dec
add
lock
mov
xor
sbb
cmpsb
sbb
out
adc
cli
decl
je
pop
gs
jmp
xchg
nop
ret
mov
adc
dec
es
ds
out
fs
xor
cmpsl
cltd
sub
dec
hlt
lret
dec
out
jl
das
xor
decl
les
std
inc
subb
cmp
sub
aaa
mov
ljmp
push
or
jo
xor
or
pop
lcall
ljmp
adc
icebp
lock
xor
and
dec
sbb
jmp
xchg
xchg
pop
repnz
cld
jmp
pop
xor
cmp
insb
mov
sbb
test
incl
jnp
mov
std
ret
imul
repz
or
bound
sub
pushl
je,pt
aad
inc
pop
pusha
dec
push
lahf
xchg
ljmp
fcomps
push
xchg
fdiv
pop
out
cli
lcall
mov
mov
add
imull
xorb
xchg
les
jecxz
adc
sbbb
lock
jmp
fstpt
sbb
addr16
mov
push
lods
jmp
adc
les
lods
cmp
into
mov
cmpsb
aas
jge
shrb
cmpsb
mov
xchg
insb
icebp
add
push
ds
cmc
xchg
out
call
ret
mov
movsb
fsubl
xor
in
faddp
adc
leave
dec
pop
clc
ljmp
in
xor
mov
out
lahf
or
pop
mov
ljmp
out
mov
jl
lahf
fldcw
arpl
arpl
xorb
ds
xor
xor
sbbb
cmp
nop
inc
fldcw
mov
push
sub
out
push
cmpsl
decl
mov
fnstcw
js
outsl
sub
xor
daa
test
jg
cmp
mov
dec
sbb
call
mov
jb
sub
cmp
call
stos
je
dec
cmc
add
cmp
jnp
fwait
xchg
push
xor
xchg
inc
cmpsb
xchg
adc
jg
jg
or
imul
or
mov
int
fstp
mov
movsl
push
mov
jnp
lds
jle
sbb
sub
jle
ljmp
cmp
ss
mov
ljmp
pushf
pushf
les
das
jae
cmp
loope
lds
sub
cmp
idiv
mov
mov
mov
add
dec
dec
inc
enter
and
mov
add
incl
mov
aam
pop
inc
dec
xor
push
lods
sub
xor
pop
out
sbb
push
cmc
sub
lcall
stos
or
inc
ljmp
mov
aad
stos
pop
addr16
data16
cmp
jle
xchg
push
lods
jg
ss
lahf
cmp
sub
xchg
sar
pushl
cmp
mov
mov
aam
daa
push
jns
pop
outsb
aaa
fidivrl
add
sbb
incl
add
pop
jae
fcomip
jp
xchg
pop
add
jno
das
cmp
outsl
and
insb
lret
sahf
arpl
xor
adc
inc
aaa
sub
ds
incl
add
cmovo
punpcklbw
rcrl
sub
sub
ljmp
dec
aas
or
fisttps
out
scas
add
sub
jg
jp
dec
scas
mov
shrl
call
mov
call
mov
shr
ds
ds
push
dec
or
mov
decl
xor
sbb
sbb
mov
lea
call
mov
lcall
xchg
pop
pusha
add
inc
lock
gs
dec
test
pop
mov
cmp
das
and
shl
pop
dec
in
and
cmp
pusha
sbb
jnp
aaa
int
jmp
jg
cli
lcall
call
repz
out
jmp
ljmp
test
mov
push
add
add
mov
fwait
sbb
and
adc
addr16
push
cmp
push
out
jno
jae
loope
and
cmp
lds
mov
sbb
push
mov
sub
jne
fabs
mov
popf
lahf
cmp
sahf
lahf
add
xchg
push
int3
mov
dec
ret
fdivl
daa
pop
xor
push
fldt
mov
jmp
pop
cmpsb
jno
stos
xorps
ds
push
lahf
xor
out
adc
ret
nop
ret
and
gs
scas
cli
decl
jle
aas
add
push
shrl
enter
add
push
xchg
mov
mov
inc
jle
push
push
iret
test
and
ljmp
out
xchg
and
fstpt
and
jecxz
and
jno
stos
repz
pushl
std
fwait
aas
lea
loopne
push
lahf
xchg
xchg
xor
mov
scas
sub
xchg
mov
inc
sub
add
sub
ficoms
aas
push
xchg
add
fwait
sbbl
in
xchg
mov
mov
inc
lds
lods
test
push
gs
decl
lock
pop
or
push
notl
sbb
sub
jne
std
call
jecxz
add
inc
xor
jae
ret
mov
jae
mov
int
jb
inc
pop
call
std
ja
jle
cmpsb
movsb
xor
sbb
fwait
inc
sub
xchg
in
mov
ljmp
movsl
jne
incb
xchg
inc
mov
cld
les
lcall
ja
fistl
mov
jge
pop
lods
aaa
adc
sar
mov
loopne
insb
or
jae
xchg
cmp
push
sbb
decl
mov
sbb
sbb
mov
lea
out
mov
popf
cmpsl
shl
pushf
in
jmp
inc
std
decl
insl
jns
cmp
adc
push
add
int
add
mov
test
or
mov
mov
mov
arpl
sti
adc
add
jecxz
cmpsb
xchg
ds
or
movswl
incl
mov
add
aad
repnz
rcll
and
dec
or
mov
mov
mov
lds
xor
out
inc
test
add
outsb
mov
out
push
clc
lea
sbb
push
data16
xor
decl
mov
fadds
jle
adc
cmp
out
mov
lods
movsl
jp
sub
incl
cmpsl
mov
scas
shll
xor
and
jns
push
mov
pusha
add
xchg
pop
xor
in
out
dec
lret
lock
mov
stos
imul
cmc
btc
outsl
xchg
ret
cltd
inc
and
push
andb
call
call
lretw
sahf
in
jb
bound
mov
adcb
cs
inc
add
dec
aaa
fadds
jmp
das
mov
jae
mov
and
dec
cmp
jg
jmp
jmp
dec
addr16
out
xchg
or
or
adc
mov
adc
mov
xor
pop
sar
or
lods
sub
sahf
cmp
lock
inc
int
leave
mov
rcll
dec
aad
das
mov
ljmp
lcall
inc
movsl
shll
mov
dec
mov
decl
add
xor
out
sbb
or
pop
inc
xor
pop
fnstcw
lcall
shll
push
jno
xor
das
mov
push
ljmp
ljmp
pop
aas
mov
rcll
aas
dec
sahf
out
popf
leave
enter
xor
lcall
mov
xor
and
push
dec
dec
data16
ja
stc
test
push
cmpsb
mov
incl
mov
pop
movsl
pop
mov
cmc
orl
hlt
inc
nop
mov
jns
xchg
jbe
call
or
out
pop
pmullw
xor
mov
mov
sbb
ljmp
mov
push
and
les
push
cs
mov
push
mov
cmc
push
mov
es
incl
dec
jbe
push
sbb
mov
jg
jb
push
neg
mov
in
rcr
jg
es
mov
cmpsl
ret
dec
repnz
fs
adc
loop
adc
inc
into
jne
mov
add
je
adc
pop
cmpsb
and
sub
xor
inc
fldcw
decl
into
xor
cmp
mov
cmp
dec
test
cmp
sub
call
or
and
dec
add
mov
stc
adc
test
test
ljmp
dec
popf
popa
sub
outsb
and
sbb
dec
jnp
test
gs
aaa
xchg
sub
sub
lea
cmp
xor
or
incl
and
scas
je,pn
lcall
fs
jecxz
jno
cwtl
inc
push
loop,pt
rcrl
adc
mov
dec
and
xchg
xchg
and
jb
mov
jmp
js
arpl
cwtl
mov
add
cmpsb
jmp
cmc
lcall
inc
adcb
stos
xor
push
mov
jmp
and
sbbl
jb
icebp
push
push
dec
fdiv
test
and
dec
stos
mov
pop
ljmp
int
sub
mov
mov
pop
jmp
pop
sarb
loopne
incl
mov
int3
int3
xchg
jg
xchg
es
rcll
scas
pushl
std
mov
insl
ret
and
xor
pop
fisubrl
sub
and
push
mov
jg
xor
loope
lahf
lret
test
add
sub
jns
das
mov
int
sbb
mov
jnp
cltd
mov
push
inc
pop
test
ret
pop
lcall
nop
mov
mov
xor
decl
sub
push
mov
jg
mov
lahf
inc
mov
mov
in
dec
test
pop
orb
mov
sbb
out
fdiv
addb
inc
mov
iret
xchg
cmp
movsb
xor
test
incl
cmp
inc
fs
loopne
lea
or
ljmp
ss
add
popa
jecxz
mov
cs
or
icebp
out
add
stos
xor
or
iret
test
push
add
cmp
push
std
inc
test
xchg
divl
popa
aaa
roll
pop
xor
incl
mov
push
ds
jmp
push
xor
je
cs
xchg
loop
add
pushl
cmp
dec
decl
mov
lahf
xchg
flds
pop
js
movsl
add
add
incl
push
loope
repz
sub
mov
pop
pop
shl
call
mov
and
add
ljmp
cld
cmp
cld
outsb
mov
mov
push
xchg
jmp
and
enter
push
jl
pushf
inc
cmp
sub
xlat
add
push
decl
ss
std
insl
cltd
fimull
cmp
push
int3
je
sub
insb
cmpsb
mov
cld
incl
mov
inc
mulb
cmp
lahf
aam
xchg
adc
mov
pushl
jecxz
andb
outsb
je
sbb
in
sub
jp
aam
pop
add
decl
and
lret
xor
sbb
mov
std
xchg
jg
fcoms
loopne
sub
sbb
inc
dec
mov
rorl
mov
inc
add
mov
sti
cld
mov
adc
push
dec
in
ljmp
fistps
ret
mov
push
jnp
adc
cmpsl
add
cltd
xor
or
pusha
cmpsl
pop
outsb
in
and
lock
ds
in
jo
pop
call
push
xlat
sbb
jo
inc
aam
popa
dec
or
movsb
inc
fnstenv
popa
mov
mov
xor
jp
inc
dec
testl
insb
daa
mov
jle
popa
inc
xchg
aaa
mov
lcall
add
mov
sbb
cltd
aas
sub
daa
push
mov
dec
cmp
sbb
or
imul
pusha
pop
jg
call
or
xchg
call
adc
dec
mov
incl
inc
xor
adc
lcall
push
dec
cmp
inc
add
or
xchg
pop
aad
andl
dec
mov
loope
add
cmp
pushf
addr16
pop
xchg
cltd
mov
incl
clc
pop
xorl
enter
inc
mov
in
sbb
mov
decl
inc
mov
das
pop
add
lds
xchg
cmp
in
dec
push
cmp
outsb
jb
mov
movsl
inc
add
or
enter
in
push
inc
mov
sbb
test
push
divb
stos
ret
and
inc
mov
fdivrs
jp
sbb
inc
outsb
leave
jo
inc
rol
test
dec
inc
push
or
jecxz
sub
cmpsb
in
aam
insb
ss
sti
xor
arpl
cli
push
and
cmp
enter
inc
in
or
sub
sbb
ljmp
inc
cltd
test
inc
dec
mov
xor
sub
inc
lea
fidivs
mov
sbb
inc
aaa
sbb
lcall
test
cwtl
jecxz
ljmp
into
sahf
and
pop
jl
out
stos
and
sbb
pop
rorb
pop
jo
pushl
or
bound
inc
popa
movsb
xor
cs
pushf
sub
mov
push
in
and
rcrb
pushl
popf
rorb
push
sub
pop
xlat
out
xchg
mov
les
or
push
mov
lea
fwait
loope
mov
ljmp
mov
daa
ss
or
pop
and
push
stos
dec
cmp
mov
lock
or
std
ljmp
aas
inc
jbe
mov
pop
call
sub
or
pusha
lcall
or
jnp
cmp
fisttpl
loop
push
sub
or
enter
test
pop
in
cld
xor
mov
nop
inc
sub
dec
sub
pop
add
mov
pop
or
pop
adc
push
incb
cwtl
inc
or
sbb
and
scas
inc
mov
dec
das
xchg
das
test
addb
daa
add
cmp
fbstp
arpl
stos
jle
out
and
rcll
fildll
sub
inc
lcall
jl
mov
aaa
ds
sub
andl
movsl
negl
push
fs
jg
call
cmpsl
out
test
lret
or
mov
cmp
inc
clc
mov
lods
popa
push
push
jecxz
push
push
sbb
fstpl
sub
cs
ret
fildll
adc
sub
mov
xchg
pop
push
sub
movnti
mov
insb
add
or
in
cmp
lret
into
mov
cmp
mov
nop
inc
or
enter
cmp
ljmp
and
inc
and
xor
pop
mov
or
xchg
mov
xor
ljmp
inc
mov
dec
subl
stos
ja
dec
jbe
add
stc
or
ljmp
and
xchg
in
dec
test
inc
mov
mov
push
bound
call
inc
inc
int3
shl
or
out
arpl
cltd
and
inc
or
cwtl
divb
inc
ljmp
hlt
pop
sti
pop
aad
or
std
loope
or
adc
lea
lods
fbstp
pushf
fisubl
pop
cltd
scas
lea
xor
lret
mov
cmp
and
mov
jmp
out
ficompl
xchg
daa
cmp
push
imul
pop
shlb
aaa
std
mov
mov
adc
rcr
cltd
cwtl
add
in
loopne
mov
js
lods
pop
push
inc
repz
fisttps
jo
sub
dec
in
rorb
mov
ss
mov
push
in
mov
cs
rorb
pop
clc
push
sub
sbb
in
aam
inc
jne
notl
pop
outsb
mov
shl
lea
mov
cs
ffree
shrl
mov
add
fstl
fisttps
lods
icebp
decl
decb
mov
or
int3
jbe
push
lea
pop
inc
imul
pop
sbb
or
hlt
pop
adc
fs
or
bnd
daa
ud0
call
int3
imull
jae
pushf
fs
xchg
ret
sub
pop
loope
notl
into
push
inc
aas
fdivl
lcall
mov
inc
and
xchg
dec
inc
sub
dec
and
icebp
pushl
push
inc
xchg
push
addr16
push
mov
push
mulb
fsubrl
insl
or
loope
pop
into
xchg
inc
adc
pop
sub
or
in
mov
xchg
in
test
xchg
ljmp
divb
addb
cmp
sahf
cld
push
iret
add
cli
and
mov
mov
cmp
lods
mov
mov
jmp
sub
dec
popf
fldl
dec
adc
rclb
mov
xchg
cld
decl
insl
mov
sbb
mov
stc
frstor
stc
loopne
jb
push
hlt
jo
insl
jecxz
loopne
dec
sub
add
stc
cmc
jns
mov
mov
gs
fbstp
js
push
xor
inc
dec
in
mov
jmp
mov
inc
push
cmc
mov
cmpsb
imul
das
mov
cmp
pop
movsl
inc
cmpsl
pop
fildl
xor
pop
dec
xor
inc
in
sbb
lock
inc
icebp
lds
push
jbe
xchg
xchg
mov
ret
aas
js
scas
popa
fistl
cmpsl
in
testl
and
jg
decl
add
testb
insb
dec
ljmp
dec
cmpsl
and
pop
mov
std
out
cli
cld
xchg
mov
jo
fsts
jne
outsl
call
cmc
int3
push
jmp
xor
lahf
pop
mov
sahf
or
jl
lea
cli
aaa
decl
xchg
sbbb
push
and
test
and
inc
pushf
lods
inc
jno
jecxz
aaa
std
cmp
xor
mov
scas
jge
mov
dec
pop
xchg
sbb
in
ja
hlt
sub
sahf
dec
insl
aas
popf
cmp
popf
sub
enter
mov
iret
decl
xorl
mov
cmp
iret
cli
andl
shl
scas
mov
mov
sahf
xor
data16
ljmp
ja
inc
pop
stc
push
jbe
and
mov
outsl
mov
out
sub
push
and
push
daa
mov
xchg
dec
sub
mov
dec
ficoml
movsl
or
and
test
xchg
push
js
imul
add
pop
stos
js
mov
jo
xchg
xor
loope
inc
mov
js,pn
lea
inc
loopne
inc
jge
ljmp
test
pop
sbb
cltd
xchg
das
xchg
scas
aaa
jmp
cmpsb
ljmp
adc
xor
sbb
lds
add
mov
jns
loop
cli
pop
insb
lock
mov
inc
std
dec
mov
and
ret
push
loopne
pushf
aaa
xchg
lods
call
sub
in
ret
hlt
pop
cmp
call
mov
pop
lods
mov
fnstenv
jne
xor
ret
xchg
mov
into
lcall
mov
cmc
jg
cli
cmp
or
popf
les
push
sbb
addl
push
xor
clc
lods
push
pushaw
in
shll
xor
sub
notb
in
clc
movsl
and
xor
movsl
jg
pop
xchg
repnz
cmpsb
add
pop
cmp
xor
and
cmp
in
pop
clc
cli
jne
sub
push
xchg
push
cmp
jbe
jbe
jo
dec
xchg
mov
jbe
mov
inc
call
repz
mov
repz
loopne
and
add
fmuls
out
fnstsw
dec
std
mov
das
xor
cltd
mov
push
sbb
cmp
pop
mov
mov
mov
es
pop
jb
mov
into
push
scas
mov
ljmp
imul
stc
mov
bound
and
inc
pop
cmp
cmp
test
and
push
mov
pushf
mov
icebp
andb
lcall
scas
adc
xor
mov
xchg
push
movsl
dec
shll
jmp
jb
sub
mov
das
int3
cltd
in
cltd
and
mov
stos
xor
fwait
sbb
inc
pusha
jo
push
lods
xchg
push
sbb
loope
repz
add
cmc
adc
gs
ret
mov
lea
xchg
lea
mov
in
inc
cmp
addb
sbb
pop
ds
sbb
outsl
clc
popl
outsl
cli
pop
cmp
icebp
and
lret
int3
lds
out
sub
cmpsl
lds
fcomi
mov
rorb
xor
or
aad
jmp
xor
int3
xchg
mov
ja
push
clc
rorl
jl
jmp
shrb
inc
sbb
faddp
push
push
cltd
xor
jbe
mov
push
jbe
or
xorl
sbb
repnz
aaa
insl
mov
stos
pushl
cmpsl
idivb
cmpsb
ds
push
jmp
and
inc
mov
dec
aaa
out
and
xchg
push
xchg
test
call
clc
pop
dec
xchg
repnz
stc
dec
and
fldl
dec
or
mov
in
push
cld
adc
xor
mov
pop
mov
cld
js
pop
push
push
imul
std
jmp
fwait
cmp
lds
inc
scas
loopne
pushf
xor
xchg
or
pop
mov
mov
faddl
stos
mov
inc
pushf
or
or
cmp
ljmp
xor
mov
cmp
sbb
and
out
es
xor
lods
les
out
jp
es
mov
jnp
dec
inc
shll
loop
sub
and
imul
push
jne
in
dec
jmp
jg
rclb
inc
jge
sub
stc
mov
dec
std
loopne
and
test
enter
imul
ljmp
iret
fsubl
aaa
fildl
or
loop
aaa
sub
mov
lock
sub
sbb
inc
mov
xchg
es
xorl
fistpll
dec
das
xor
ja
insb
sub
incl
xor
mov
xorl
fidivrs
xor
push
aas
loopne
loop
enter
inc
and
decl
adc
dec
push
mov
or
adc
mov
pusha
adc
lahf
popf
sbb
es
nop
sar
lcall
and
bound
xchg
adc
push
das
push
or
imul
lcall
push
mov
fistpll
fldl
shlb
cwtl
sti
inc
dec
push
lret
insl
filds
or
and
push
out
notb
cmpsl
mov
test
lds
jg
sub
fdivrs
loopne
sbbb
ja
imul
addr16
int
call
cltd
mov
adc
jmp
dec
notl
les
cld
xor
hlt
inc
push
and
lcall
ss
sub
push
je
ds
mull
mulb
aad
cmp
ret
incl
mov
notb
lahf
sbb
xchg
incb
ret
dec
mov
cmp
cld
bound
ud2
or
xor
faddl
js
ljmp
mov
jmp
hlt
mov
pushf
fbstp
test
call
xchg
mov
sti
mov
jmp
xchg
bound
je
xchg
hlt
in
pop
out
cmpsl
mov
iret
fildll
lret
xor
push
loopne
mov
call
shrl
inc
mov
jae
jle
mov
xchg
sub
push
js
sti
ljmp
jns
js
mov
sub
mov
inc
adc
xlat
mov
pop
std
clc
pmuludq
call
mov
sbb
pop
ds
push
into
jae
fwait
jl
int3
icebp
ret
inc
and
adc
aad
jl
cs
dec
add
or
sbb
out
fwait
push
decl
out
jmp
lds
pop
inc
out
dec
jns
mov
outsb
mov
pop
int
and
prefetch
or
dec
pop
ljmp
popf
dec
sub
mov
xchg
mov
icebp
inc
fisttpl
out
das
sar
fcompl
in
icebp
xor
jbe
das
push
push
sbb
repnz
jmp
dec
push
insl
in
xchg
ficoml
fs
add
jbe
lret
dec
ror
aas
addr16
shl
iret
add
mov
repz
sub
shll
cmp
add
int
mov
ret
xchg
dec
mov
fs
dec
jmp
xor
icebp
cmp
insl
pushf
leave
shr
cli
lcall
push
test
inc
add
adc
lods
lahf
movsb
cmp
ljmp
sub
scas
push
out
popf
or
addr16
out
lret
ljmp
in
iret
push
fdiv
pop
xlat
sbb
pop
das
lret
cmp
out
in
push
push
loop
insb
ljmp
imul
mov
int3
dec
jle
sbb
mov
incl
xchg
cld
in
mov
push
cli
jg
pop
fcompl
mov
sub
aaa
inc
outsl
mov
dec
aaa
cmpsb
loope
push
psraw
cmc
movsl
ja
sub
mov
decl
and
add
xchg
lcall
dec
jmp
add
stos
xor
scas
clc
mov
pusha
inc
pushf
push
movsl
js
mov
push
cmc
inc
add
mov
lock
jle
add
dec
test
push
push
ficoms
mov
and
xchg
call
enter
fmull
lret
sbb
xlat
je
sub
lahf
ljmp
sub
int
aad
loopne
inc
lcall
testb
loope
call
stos
cmp
dec
xlat
in
lret
cmpsb
imul
sub
xlat
or
incl
andb
in
fimull
out
rcrl
sub
notl
in
xlat
rorb
in
out
subl
jmp
cmpsl
into
int
sub
xchg
daa
jle
outsl
ds
fcomip
lcall
jnp
faddl
inc
sbb
test
adcb
test
pop
cwtl
incb
mov
pop
lock
mov
push
lock
fmulp
cmp
add
hlt
mov
leave
mov
movq
mov
xchg
lods
loopne
decl
xchg
into
enter
leave
lahf
xor
inc
mov
pop
cmpsl
int
lods
call
and
cli
enter
mov
push
lcall
and
pushf
jge
mov
pushl
cmc
outsb
fldlg2
jecxz
in
fwait
cmp
push
push
les
mov
mov
sub
les
in
xchg
sub
cmp
cmpsb
add
into
cmpsb
out
mov
lods
jle
cmp
fsubrs
jg
inc
test
ret
push
push
call
dec
call
fnstsw
hlt
push
inc
jb
int3
in
xor
and
insb
out
jns
ljmp
add
scas
xorl
push
cmp
mov
lock
fwait
and
mov
jmp
fldenv
movsl
lret
mov
movzbl
add
jg
xchg
orl
pushf
dec
fstpl
pushf
pop
push
dec
mov
inc
test
inc
loope
fs
fsub
mov
xchg
mov
mov
jp
mov
jnp
hlt
pop
sbbl
jnp
add
decl
ljmp
sub
ret
pop
jge
lds
mov
cli
call
dec
bnd
jae
pushf
and
xor
xor
cmpsb
inc
call
push
int3
jmp
divl
decl
mov
fiaddl
aas
sub
and
add
ret
mov
call
in
stos
sub
imul
fld
mov
add
fdiv
fstpl
mov
adc
mov
ds
mov
data16
mov
mov
mov
test
jb
cmp
cwtl
repz
stos
in
adc
fwait
mov
imul
jmp
aas
fwait
test
or
add
scas
ret
filds
cs
call
adc
mov
cmp
sub
mov
mov
lcall
pushl
std
minps
shll
mov
rcrb
cli
fstpt
cmp
mov
sahf
jecxz
cmp
repnz
cmp
jns
and
mov
push
lcall
lahf
jb
add
lret
movsl
rcr
mov
sbb
test
ja
mov
decl
and
cmp
xor
adc
lods
add
cmp
add
int
sbb
pushl
shrb
pop
pop
adc
ficoml
cmc
hlt
es
cli
and
into
push
push
sbb
lock
sub
pop
inc
popf
fidivrl
dec
pop
in
mov
cmc
lods
rol
sbb
jb
pushl
outsb
push
add
pop
adc
add
and
add
out
adc
inc
inc
jge
push
or
outsl
mov
ljmp
mov
cltd
fstpt
xchg
insb
push
xor
dec
sbb
call
clc
test
cmp
pop
push
cltd
adc
test
mov
mov
jecxz
jae
enter
out
aad
in
in
and
xchg
jmp
dec
add
repnz
or
int
into
dec
xor
dec
in
cli
lret
ljmp
shrl
add
lret
dec
jge
mov
flds
push
int3
lret
into
pop
cmp
frstor
cmc
pop
lods
ss
sub
adc
pop
dec
nop
andnps
das
mov
jge
add
fs
add
sbb
call
jge
dec
test
gs
or
xor
and
push
mov
ja
push
decl
mov
mov
stos
mov
dec
sbb
push
or
nop
adc
bound
jmp
add
lock
mov
mov
jno
pop
lock
movsl
es
out
inc
cmp
hlt
outsl
out
push
dec
add
sub
push
mov
adc
pushl
dec
sub
push
sete
cmc
incb
faddl
hlt
adc
pop
icebp
push
jge
jge
xor
or
jecxz
loopne
jmp
mov
mov
enter
lcall
out
fisubrs
scas
in
sub
dec
inc
ret
push
mov
adc
or
jne
in
mov
add
xor
sbb
cmp
ret
out
sahf
scas
stc
cmp
enter
adc
in
es
ja
clc
cmp
inc
mov
daa
sub
jle
or
jecxz
cmp
mov
ljmp
loopne
pop
nop
adc
inc
or
mov
add
in
leave
jne
je
push
jg
mov
enter
xchg
add
mov
inc
xor
fistl
jmp
fistpl
cmp
cmc
js
dec
and
or
mov
push
xor
insl
or
scas
adc
pop
loop
dec
scas
data16
mov
jae
das
into
imul
fs
outsb
sti
vpaddusw
push
ds
dec
ljmp
lds
add
lds
mov
xlat
imul
rcrl
lahf
mov
mov
adcb
out
scas
aas
scas
cmc
cmp
jmp
sub
outsl
pop
stos
lcall
addb
mov
aam
das
test
adc
std
decl
xchg
lock
sbb
scas
add
mov
cli
mov
ss
or
dec
jge
xchg
loope
mov
mov
pop
mov
pop
cmc
or
pushl
or
fidivs
test
leave
cmp
xchg
and
push
lods
fisubl
sar
ljmp
sub
test
pop
jnp
lcall
mov
lds
jmp
sbb
lcall
inc
dec
pop
sti
mov
fnsave
call
jl
jno
cmp
pop
add
mov
mov
mov
aas
or
xor
mov
data16
mov
aas
pop
fs
push
rcrl
sbb
fildll
loopne
call
cmc
inc
fwait
cmp
out
stc
inc
call
cmc
and
ja
aam
scas
jg
mov
cmp
xchg
flds
mov
ret
decl
outsb
loop
and
or
mov
imul
dec
jp
comiss
je
xchg
pop
cmc
mov
xchg
inc
fstp
pop
mov
icebp
mov
scas
inc
sub
pushl
icebp
pushf
xchg
push
adc
jns
cld
mov
data16
xchg
jne
pop
pop
jecxz
scas
stos
popa
pushl
pop
jl
cmp
mov
ret
jle
out
loope
lock
mov
clc
decl
mov
add
mov
cmp
addr16
cmpsb
xchg
push
sbb
fldl
fcomip
jmp
dec
dec
pop
popf
add
arpl
sti
mov
and
add
incl
imul
std
frstor
dec
repnz
cmp
jmp
add
jl
cmc
cs
push
push
arpl
outsb
sbb
fidivrl
dec
push
popa
jecxz
idiv
jg
je
push
out
movsl
loopne
adcb
sbb
and
or
cmp
jb
clc
push
mov
xor
cs
sbb
sbb
sbb
dec
lods
mov
cmpsl
lds
push
loop
lret
xchg
add
mov
pop
cmp
or
jg
mov
push
sbb
rcrl
or
addr16
rcr
sub
push
ljmp
pop
jl
or
stos
adc
mov
pop
int3
mov
xor
mov
rcrb
xchg
jp
test
xchg
popf
cmp
dec
or
call
adc
ljmp
int
scas
iret
test
hlt
in
iret
mov
jg
test
in
push
scas
roll
icebp
cmp
xlat
ljmp
adc
inc
cwtl
add
and
ror
enter
lcall
mov
jge
arpl
cld
cmp
in
mov
push
fsubs
outsl
pushl
js
ficomps
sub
in
add
dec
std
push
lret
mov
jl
jns
xchg
mov
dec
sub
sti
and
cmc
jo
or
lahf
lcall
dec
push
insl
in
mov
pop
mov
loope
mov
aas
in
ss
sbb
dec
push
int
mov
pop
cmp
mov
shlb
cwtl
xor
add
cmpsb
pop
xchg
outsb
bound
icebp
add
xor
push
mov
aam
mov
mov
pop
xor
jae
out
push
decl
mov
mov
ljmp
aad
pop
sbb
jne
cmp
in
mov
rolb
scas
fwait
sahf
jle
dec
jns
insl
xchg
cmpsb
and
pop
cmc
int
mov
xor
or
mov
mov
test
mov
cld
repz
loopne
ss
cmp
movsl
popa
scas
mov
push
jmp
outsl
incl
cld
dec
push
jecxz
std
or
or
jmp
cmp
lret
push
xor
out
pop
pushf
and
mov
mov
xor
decl
or
in
push
mov
decl
scas
xchg
iret
jbe
jmp
mov
fstl
mov
movsb
jb
sbb
sbbl
aas
mov
push
mov
xor
push
sub
fsubrp
mov
cmc
jge
lds
jmp
adc
sbb
into
adc
xchg
enter
mov
or
adc
push
pushl
lods
add
xchg
mov
repz
shl
dec
test
outsl
lea
lret
xor
repnz
xor
jmp
ja
mov
lahf
aaa
mov
cmpsl
xor
xor
mov
push
dec
pop
ljmp
out
std
xchg
aas
mov
mov
dec
sub
push
mov
ret
ljmp
push
push
into
hlt
push
sbb
decl
push
pusha
pop
push
dec
inc
and
aaa
aas
push
sub
mov
bound
call
pop
mov
test
fcmovb
mov
int
mov
mov
outsl
addr16
mov
lock
pop
push
push
popf
notb
add
fs
in
insl
mov
jmp
in
imul
dec
cld
and
cmp
inc
sbb
rorb
jg
push
gs
sarb
clc
test
sub
mov
ret
mov
cmp
mov
jmp
out
bound
and
fdivrs
jbe
push
add
imul
cmp
sti
inc
out
cli
call
scas
out
bound
les
adc
stos
scas
out
cmpsl
xor
jge
adc
push
lods
sbb
jmp
xor
int
lods
jge
cmp
ljmp
sbb
xlat
test
mov
mov
mov
in
cmp
mov
lahf
shll
fisubrl
rcrb
cmp
lods
sub
sti
mov
loopne
cld
shll
jb
push
dec
pop
loopne
push
test
sub
add
dec
int
add
mov
aam
cld
jecxz
ror
sbb
in
idivl
mov
mov
sbb
inc
jg
sbb
cli
clc
outsb
test
test
jg
lcall
scas
or
dec
mov
dec
rcrb
mov
clc
add
cld
add
rcrb
sub
cld
mov
incl
cs
in
mov
add
mov
pop
imul
jnp
loope
pushl
je
push
xlat
loop
outsw
test
test
imul
xlat
xchg
test
movsb
iret
pop
add
jmp
popa
add
mov
rcrb
or
std
addr16
mov
fisubrs
xchg
xchg
ficomps
int
pop
je
push
repnz
lcall
cmpsb
inc
ret
js
mov
sti
cmp
xor
mov
add
lcall
fwait
jmp
add
xchg
inc
adcl
mov
arpl
pusha
ljmp
in
in
out
sbb
aas
das
or
xchg
cmp
aas
iret
jge
pop
mov
repnz
into
mov
dec
roll
icebp
fsubrs
daa
cli
sub
sub
in
into
sbb
jmp
inc
cmc
enter
fwait
not
or
mov
cmp
into
imul
and
cmp
data16
fisttpll
xor
fmul
jnp
cld
std
aas
mov
mov
daa
call
ja
lret
mov
sbb
jg
cmc
stos
sti
test
data16
mov
incl
inc
fmul
hlt
mov
dec
mov
or
test
xchg
pushl
ss
les
cmpsl
cwtl
push
adc
stos
pop
xor
aam
les
or
sarl
mov
ret
mov
xor
decl
scas
jge
scas
ret
xchg
lods
inc
adc
sahf
lods
in
adc
pop
jmp
aam
push
mov
mov
jnp
sub
scas
xor
fists
out
aas
or
jg
aad
mov
mov
lahf
loop
pop
std
aad
cmc
fisubrl
rclb
inc
jp
pusha
sub
out
dec
std
push
call
sub
push
into
dec
scas
sbb
out
pop
add
mov
cmc
push
call
call
add
xchg
jno
sti
fsubrs
nop
mov
inc
xchg
cmpsl
out
dec
ret
inc
pop
jne
clc
call
xor
cmp
mov
pop
fwait
xor
out
arpl
call
aaa
xchg
rcll
cs
mov
cmp
jp
movsl
dec
inc
xchg
xchg
out
clc
call
fxch
mov
shlb
lret
testl
cmp
mov
cmpsl
in
jae
and
ffree
jae
ret
pop
add
jae
in
aam
mov
sar
inc
int
popa
iret
push
add
ret
jo
addb
sti
or
push
sbb
dec
lcall
push
rcr
int3
orb
lods
mov
ljmp
adc
dec
xlat
dec
mov
push
aad
pop
mov
sti
pop
pop
jg
mov
mov
push
ljmp
scas
shlb
pushf
dec
hlt
mov
jmp
jl
rorl
mov
daa
lret
stc
std
jae
mov
push
xlat
mov
sbb
sti
lahf
mov
shrb
out
rcll
mov
cmp
decl
adc
iret
cmp
lods
ljmp
popa
pop
out
stos
mov
lcall
call
test
and
stc
mov
dec
adc
test
out
stos
mov
pmaddwd
jmp
sarb
pushl
inc
mov
les
push
push
out
lahf
dec
jecxz
mov
sbb
push
in
stos
inc
cmp
incl
mov
cmp
xchg
aad
aam
xchg
ja
xchg
or
push
les
mov
xor
ficompl
lock
aas
test
jp
sarl
cld
jg
mov
ljmp
mov
sbb
dec
aad
movsb
pop
sub
and
in
leave
or
push
xchg
loope
cltd
push
outsl
xchg
fldenv
sub
dec
dec
outsl
adc
ljmp
insl
bound
sub
popa
xorl
cmp
loop
xchg
push
in
or
call
psubsb
sti
mov
inc
ret
cmp
jle
cld
das
sub
pop
lcall
out
lret
jno
fwait
mov
loope
push
push
pop
repz
cmpsb
jle
mov
lret
rcrl
fisubrl
pushl
sbb
xchg
sub
aas
and
sub
sbbl
push
adc
cs
jnp
sbbl
cmp
les
jmp
mov
pusha
outsl
pop
jne
sbb
or
add
xor
ret
ljmp
pop
shr
jae
scas
pop
aam
or
mov
cmp
bound
inc
incl
jecxz
mov
jae
mov
mov
lds
and
sar
pushl
mull
insl
or
pop
and
mov
and
mov
inc
call
outsb
out
mov
clc
pop
mov
xchg
or
popa
mov
inc
pop
xchg
xlat
and
pop
add
adc
int
std
push
jge,pt
popa
subb
mov
in
scas
ret
das
sub
loopne
leave
iret
fdivp
lcall
incb
lods
mov
mov
loope
xchg
cmp
sbb
test
sbb
jg
stc
and
fstl
outsl
decl
mov
addl
popf
pop
dec
pop
data16
fcos
call
inc
jp
jge
pop
outsb
fnstcw
cmp
lea
std
xor
xlat
mov
icebp
int
movsl
nop
jb
jmp
mov
xchg
xchg
mov
mov
or
mov
cmp
push
sub
pushf
mov
lcall
inc
mov
cmp
sub
cmp
jne
push
pop
test
daa
mov
and
decl
lock
sbb
pop
fwait
or
movsb
or
sub
sbb
dec
outsb
test
movsb
sbb
aam
adc
adc
cmp
jg
mov
jbe
in
ja
jp
xchg
jp
push
movsb
pop
shl
xor
ljmp
push
int
ss
sub
arpl
pop
or
mov
in
and
loope
mov
add
push
aam
into
xor
or
cli
loope
add
popa
ljmp
lcall
jmp
nop
repz
js
pop
cmp
rorl
pop
xchg
mov
out
stos
jbe
and
cs
lcall
add
or
je
into
adc
shlb
lods
pop
ja
cmp
aaa
pop
ljmp
test
cli
rorl
cmpsb
fsubrl
jnp
cmp
mov
jp
sub
jmp
aaa
sar
mov
mov
cld
dec
and
xchg
test
mov
xchg
sub
incl
iret
jp
shrl
callw
in
inc
mov
sub
ljmp
outsl
fadds
push
push
xchg
pusha
sar
lods
aam
std
stc
pop
mov
aas
fisubs
incl
je
fs
in
in
hlt
mov
inc
pop
mov
fimuls
fdivrp
or
popa
decl
je
sti
jge
xchg
lcall
leave
shrb
popf
dec
pushf
jmp
mov
mov
push
ds
mov
cli
or
fdiv
ljmp
inc
fucomp
pop
aaa
lds
xor
decl
insb
xor
inc
jg
jp
aam
sar
cmpsl
shlb
stc
divl
pushl
int
daa
dec
cmp
aam
rorb
jp
pushl
int
cld
xchg
inc
lret
inc
cld
or
push
push
mov
out
loopne,pt
xchg
incl
push
out
and
mov
sub
shrl
push
dec
add
icebp
sti
decl
sub
imul
mov
iret
shll
ficomps
loope
pop
imul
insl
loop
push
ljmp
pushf
mov
inc
jecxz
cmc
sub
loopne
mov
jecxz
xor
out
jb
loope
jmp
fists
pop
cmp
test
sub
orl
shrl
push
ljmp
repnz
pop
dec
sbb
push
cmp
push
add
dec
mov
cmp
sbb
lcall
popf
cs
enter
jle
lock
imul
push
fmull
imul
sub
cmp
mov
and
mov
sahf
xchg
out
int
xor
sti
jnp
fmuls
push
xchg
mov
addr16
ljmp
xorl
pushl
mov
and
mov
or
xor
mov
popf
lods
stos
aas
mov
sbb
in
and
stos
jae
daa
lods
pop
movsb
gs
inc
cmpsb
out
inc
aas
outsl
and
test
add
xor
fsubrs
popaw
fs
add
sti
fwait
mov
pushl
lahf
out
int3
dec
pop
dec
popa
and
push
dec
push
jecxz
cmp
mov
incl
or
daa
sub
inc
mov
inc
fistpll
or
aam
je
mov
mov
jge
jl
mov
or
mov
and
xor
lret
mov
loopne
jg
push
add
arpl
push
sub
sbb
fisttpll
mov
add
sti
aad
std
call
jl
mov
jmp
xchg
in
mov
addr16
data16
and
jg
add
and
xor
dec
mov
pop
xchg
negb
push
gs
push
cwtl
clc
sub
gs
push
push
es
call
fwait
scas
fs
sub
sub
fcmovnu
mov
sub
int3
faddp
sub
dec
jo
movsb
push
aad
inc
cld
popf
mov
daa
out
xor
ds
ljmp
or
pop
mull
mov
pop
mov
jno
inc
mov
jg
and
movsb
in
mov
xchg
add
mov
lds
out
pop
pushl
jge
in
or
mov
cwtl
xor
sbb
xchg
xor
mov
leave
lcall
filds
adc
loopne
rclb
orb
rcl
pop
outsl
addl
std
push
shrl
cs
fidivs
inc
test
inc
js
add
in
xlat
ds
in
xlat
mov
repz
pop
mov
add
fs
sub
mov
loop
cmp
je
mov
lea
push
jmp
sar
dec
fnstenv
mov
jle
jns
inc
into
pop
lds
pop
iret
imul
xchg
xchg
fldenv
ss
mov
fildl
mov
arpl
into
lods
jo
cmp
aas
or
outsb
movsb
outsb
imul
addl
mov
inc
jbe
loopne
into
sub
inc
push
jl
sbb
je
inc
add
adc
inc
mov
cld
out
or
lods
pop
insb
test
mov
rcll
push
lret
std
mov
xchg
lret
loop
cmp
mov
xor
adc
imul
pop
jl
and
rorb
mov
sub
pushl
cmp
add
inc
cmp
dec
inc
xor
imul
and
cmc
jmp
aam
pop
dec
sti
push
popa
sbb
dec
ljmp
push
lcall
rol
mov
mov
add
add
mov
pop
lcall
lcall
cmpb
cmc
adcl
pusha
int
push
jg
ss
call
push
dec
dec
sub
mov
cmp
push
ss
leave
pop
in
aam
decl
bound
mov
fld
mov
shll
repnz
out
int
and
pop
popa
incl
pop
ljmp
in
jl
stos
imul
or
movsb
test
add
xor
dec
orl
pop
pusha
and
popa
fwait
sbb
xlat
roll
stos
insl
int3
and
push
xchg
fnsave
mov
and
jmp
jo
inc
sahf
mov
lahf
incl
adc
push
lcall
inc
mov
rcr
fs
cs
dec
and
jne
bsf
ljmp
pushf
out
inc
out
dec
mov
jp
lods
lcall
daa
push
mov
xchg
sub
push
cmp
fst
leave
decl
stos
mov
mov
rcrl
in
cs
lret
sbb
mov
sub
in
and
into
mov
or
cltd
std
in
mov
inc
rorl
xchg
jp
lods
notb
jl
test
ret
call
cmpsl
testb
imul
mov
or
sub
lret
or
mov
decl
or
aad
add
or
pop
imul
imul
add
adc
mov
mov
pop
inc
sarl
incl
out
inc
mov
pusha
lcall
push
jp
iret
push
xlat
lahf
lret
cltd
jmp
ja
call
bound
movsb
and
adc
stos
dec
sbb
pop
int3
fcoms
pop
push
pop
decl
jae
xchg
sarl
cmpl
arpl
pushl
lods
bound
xor
pop
mov
and
std
ja
jg
dec
clc
jmp
iret
mov
cmpsl
jle
push
stos
add
pop
jmp
test
daa
fistpll
push
pusha
rol
out
push
pop
cltd
shll
imul
incl
add
adc
outsb
inc
push
imul
iret
lock
decl
cmp
push
dec
out
sbb
pop
sahf
in
mov
notl
sub
pop
aam
out
outsl
clc
jmp
mov
push
nop
xor
mov
jbe
lahf
mov
sarl
xchg
shlb
mov
dec
dec
push
push
aam
in
stos
and
aaa
mov
lahf
push
fldt
jmp
and
mov
fnsave
sbb
mov
das
aam
add
std
dec
and
fsub
sub
mov
push
jo
push
rolb
mov
adc
pop
mov
pop
test
repnz
adc
clc
and
scas
cmp
call
adc
cli
adc
lock
pop
popf
push
je
dec
out
decl
inc
sbb
outsb
data16
cld
push
xchg
pushf
inc
lret
fnstenv
dec
push
and
pop
fstp
ja
cmc
loop
dec
push
dec
dec
push
movsl
shrb
scas
sbb
mov
stos
sub
lret
dec
pop
pop
negb
in
cli
pop
ja
les
mov
push
sti
scas
std
jl
or
mov
cli
and
push
inc
clc
lcall
lret
add
push
gs
dec
xlat
test
decl
repz
enter
ret
inc
jbe
movsb
fcomip
sbbb
sarl
jno
pop
incl
xor
in
mov
lods
icebp
dec
fisttps
aas
dec
pop
mov
insb
push
fsubrl
sarb
incl
mov
fldl
jo
push
popl
imul
or
dec
clc
out
pop
dec
mov
hlt
and
xlat
fstpt
lods
pcmpgtb
pop
aam
lock
mov
ljmp
push
fcomi
aad
add
ret
shlb
dec
cmp
and
push
and
or
call
fs
xor
and
mov
mov
dec
xchg
rcrb
push
outsb
ja
jnp
and
ljmp
pop
pop
scas
push
cmp
or
dec
push
cmp
stc
mov
scas
cwtl
cmp
mov
out
mov
mov
decb
lcall
outsl
xor
dec
test
test
into
push
push
xor
dec
js
push
loope
incl
ss
mov
lahf
pop
pop
clc
jge
stos
mov
pop
imul
cmc
dec
les
stos
out
xlat
mov
pop
dec
out
ret
jns
adcl
repnz
pop
add
mov
clc
aaa
xchg
jnp
inc
adc
testl
dec
rorl
mov
movsb
iret
sahf
pop
and
or
sub
jp
xchg
mov
push
movsb
push
cs
adcb
cmc
fbstp
dec
cmc
mov
jb
pop
mov
ret
xlat
icebp
mov
das
insb
add
iret
push
out
in
bound
call
mov
outsb
jmp
dec
fadd
ja
ljmp
ret
pop
and
testl
inc
in
cwtl
insl
sbbb
xchg
repz
and
pop
push
dec
inc
lds
mov
mov
pop
mov
mov
mov
fbstp
clc
in
into
or
in
mov
mov
fmuls
scas
cli
ljmp
scas
cmp
mov
shlb
push
ret
dec
dec
mov
inc
cli
lcall
loope
arpl
mov
xchg
jle
push
cli
loopne
lret
loop
pop
xor
aaa
dec
je
test
xchg
lock
jae
rcr
hlt
dec
ja
cmc
data16
out
pusha
arpl
fwait
pop
insl
pop
repz
pushl
sbb
add
int
ljmp
cmpsl
into
icebp
cmc
jge
dec
cs
repnz
adc
pop
loopne
in
lock
imul
jle
hlt
adc
popa
adc
or
pushl
or
mov
cmc
arpl
cmp
pop
popf
loop
aas
es
divl
lcall
mov
out
push
push
out
adc
repnz
push
arpl
push
dec
cld
dec
mov
incl
push
rcl
cmpsb
leave
bound
in
ret
enter
je
pop
movswl
shrl
lcall
push
rcl
mov
cmc
aas
xor
shrl
test
sbb
call
push
lret
inc
push
fdivrs
dec
dec
xchg
out
nop
ja
repz
loopne
or
ljmp
call
in
leave
push
sub
push
xchg
nop
push
jge
std
fsubrl
push
add
xchg
add
movsb
scas
push
fidivrs
mov
fstp
xor
mov
and
pop
mov
mov
push
pop
add
xchg
jae
leave
add
jl
push
fisttpl
and
inc
int
push
shlb
xchg
or
inc
sbb
sbb
pop
jg
xchg
ror
cli
dec
or
popf
or
jge
inc
lcall
fcompl
cmp
jno
cli
and
outsl
adc
jmp
inc
xor
mov
aad
and
es
cltd
mov
mov
and
js
cld
aam
imull
jmp
inc
cltd
lock
xchg
push
mov
loop
xor
add
les
into
out
pop
lcall
mov
imul
dec
pop
jns
hlt
dec
adc
or
and
aaa
incl
sub
aaa
testb
subl
ret
xadd
nop
pusha
fdiv
jbe
sub
clc
mov
gs
aaa
mov
loope
dec
test
fucomi
pop
and
push
sbb
push
test
mov
lcall
cmp
mov
jns
test
pop
or
flds
shr
js
mov
and
lret
push
pusha
mov
aad
adc
gs
push
mov
les
pop
ljmp
mov
fsubs
lcall
out
or
clc
or
out
push
mulb
pusha
cmp
jno
fsub
hlt
seto
dec
in
repnz
lcall
sbb
aam
jnp
cmpsl
iret
pop
jo
cmp
mov
pushf
leave
cmp
push
mov
decb
rclb
pushf
mov
inc
dec
inc
xchg
lret
out
xchg
leave
lahf
push
cmc
mov
cmc
int
jno
mov
lea
pop
fildll
pop
mov
push
mov
in
push
jl
lahf
mov
mov
inc
icebp
incl
loop
in
mov
stos
xorl
inc
dec
mov
mov
idiv
mov
lcall
testb
sarl
shll
mov
xlat
stos
and
jnp
pop
cmp
jmp
aam
es
out
add
cmp
jp
push
mov
pop
call
pushl
xchg
insl
mov
push
xor
push
cmpsl
call
xchg
ljmp
xchg
push
push
les
xor
sbb
lds
into
jg
lcall
cmp
or
xadd
mov
dec
cmc
mov
mov
call
and
icebp
idivb
cmp
pop
ret
data16
sbb
ret
push
inc
dec
sarb
ljmp
in
xor
xor
insb
cmpsb
or
subl
add
lcall
pop
add
loopne
cmc
cmpl
xchg
pop
xchg
repz
fcomip
jns,pt
dec
out
jbe
or
orl
and
jo
sub
push
aad
xor
fmul
jne
push
lcall
lds
iret
rep
mov
pop
add
movsb
and
jno
mov
inc
imul
cmp
jmp
push
repz
sahf
sbb
xchg
push
icebp
mov
inc
or
fdivrl
decl
lock
add
lret
fnstenv
push
in
mov
cmc
and
and
lock
icebp
inc
into
jo
aad
in
leave
cmp
jmp
cmp
ljmp
sbb
sub
fcoml
pusha
pop
sahf
jg
into
cmp
xor
xlat
jns
or
jecxz
xchg
xchg
push
les
adcb
add
out
aam
xchg
add
jge
ror
jp
xor
mov
lods
lcall
nop
add
hlt
push
fimuls
nop
mov
xchg
out
clc
lods
pop
jo
ljmp
adc
inc
mov
fwait
repnz
stc
mov
icebp
popa
hlt
fidivl
incl
pop
sub
arpl
popa
jbe
sbb
or
es
fidivl
out
fidivrl
sbb
daa
scas
or
dec
ds
out
addr16
sub
mov
mov
aaa
decl
push
dec
je
push
push
dec
in
inc
pop
pop
mov
or
lods
jmp
test
cld
sub
das
pushl
mov
xchg
out
jmp
xchg
loope
push
and
mov
jae
out
add
and
lret
pop
mov
in
inc
stos
xlat
repnz
jbe
aam
mov
fdiv
cmp
pop
fcmovnbe
cmp
jg
mov
pop
cmp
hlt
cmp
int3
sbb
mov
and
dec
or
lcall
or
cmpsb
push
hlt
push
cli
fisttps
pop
aam
lock
je
hlt
sub
mov
lcall
push
hlt
cmc
push
ljmp
xchg
jbe
mov
int3
int
test
stos
out
sbb
jns
mov
call
xchg
icebp
pop
lret
mov
adc
jg
inc
push
cmp
lcall
in
adc
repz
int3
push
jg
sbb
stos
xchg
popf
mov
insb
mov
call
in
test
stos
in
jmp
mov
fs
fists
xchg
mov
mov
repnz
idiv
dec
pop
imul
ror
loopne
aam
push
inc
clc
add
cmpsb
or
cmp
fld
jge
or
mov
jb
iret
ljmp
iret
loope
dec
iret
cmp
ljmp
pop
hlt
loope
adc
imul
adc
es
xchg
repnz
jmp
addr16
jb
testb
pusha
sbb
xchg
cmp
xchg
dec
mov
mov
mov
push
ret
mov
dec
xchg
scas
sub
pop
std
cmpsb
adc
mov
adc
adc
jg
icebp
jmp
insl
sub
cmp
test
scas
pop
cli
inc
push
outsb
mov
incl
sbb
mov
add
js
add
pusha
pop
mov
cmp
lcall
aas
mov
je
je
das
and
aaa
test
loope
rcrb
or
sbb
aaa
cld
decl
sub
gs
mov
dec
gs
es
pop
or
dec
inc
lcall
dec
mov
mov
ljmp
jo
and
repnz
repz
mov
in
fldenv
lahf
shl
mov
cmpsb
lcall
rcrb
movsb
aam
xchg
int3
mov
movsb
sbb
cmp
cmp
mov
cs
sbb
out
sbb
add
fadd
jo
fisttpl
incl
jmp
aad
cltd
out
ljmp
pop
push
iret
mov
mov
mov
mov
leave
loopne
fstl
jg
sub
or
std
jle
cmp
fmull
ljmp
imul
and
lods
jecxz
sbb
inc
test
decl
popa
fwait
fwait
ds
into
xchg
test
movsl
xor
push
dec
imul
sbb
scas
addb
cli
push
jne
loope
or
out
and
inc
call
inc
inc
jecxz
mov
cmp
clc
nop
add
pop
pop
mov
mov
adc
scas
jns,pn
sub
pop
and
mov
repnz
repz
movl
xchg
push
mov
jmp
cmp
test
adcb
inc
adc
add
cmpsb
clc
mov
lahf
jo
out
shlb
call
loop
in
mov
pusha
je
cmc
mov
inc
aas
fwait
mov
cmp
mov
std
fsubrp
in
cmpsl
jnp
push
mov
rolb
int3
pop
neg
shr
adc
cmp
in
arpl
sbb
movsl
sarb
mov
hlt
ljmp
int
in
jnp
out
lahf
inc
inc
xchg
mov
xchg
enter
jmp
bound
movsb
outsl
out
adc
dec
popf
and
adc
in
pop
xchg
jmp
aas
push
je
inc
jp
inc
stos
adc
cmp
call
inc
xchg
xchg
inc
iret
repnz
adc
repz
bound
inc
adc
iret
fimuls
sbb
fwait
aas
add
fwait
ret
mov
lock
mov
call
jp
fidivrs
dec
adc
dec
scas
jne
negl
mov
mov
jge
decl
cltd
sub
push
paddusw
in
loope
lods
aaa
loop
adc
jmp
fdivrl
rorl
out
orl
aas
mov
fs
pop
call
jmp
jmp
inc
mov
repz
loope
lds
pop
loope
lea
shl
daa
aad
incl
dec
int
pop
jecxz
mov
test
lahf
push
out
jno
cmp
iret
mov
lods
mov
call
call
pop
popf
movsb
or
pusha
rorb
mov
pop
adc
int3
loop
dec
jg
sbb
jp
sub
in
out
idiv
pop
lock
or
pop
pop
mov
test
cmpsl
mov
imul
add
mov
sbb
negl
pushf
push
cmpsb
iret
and
lods
rcrl
lds
or
mov
push
adc
cmp
out
mov
xchg
cmp
adcb
sbb
mov
cmpsl
add
xchg
ficomps
xchg
loop
imul
sub
jg
xchg
mov
fs
add
out
mov
mov
add
xor
pushl
data16
xlat
xlat
dec
sbb
mov
divb
inc
je
mov
out
add
test
pushl
gs
jle
adc
test
imul
pusha
xlat
mov
lret
xchg
das
pshufw
xchg
xor
xlat
and
add
outsb
lahf
cmc
and
call
pop
hlt
jnp
xor
cmp
cmp
push
out
inc
sbb
mov
incl
xchg
mov
adc
sbb
fnstsw
sbb
inc
loop
je
jne
and
ljmp
sub
fs
cld
xlat
in
inc
rcrb
sti
into
lcall
rolb
push
push
mov
dec
mov
fstl
push
lock
icebp
mov
decl
and
cwtl
xchg
sub
popf
test
call
loope
pop
xor
lcall
jp
mov
jbe
and
repz
mov
lock
jg
pop
lods
and
cmp
inc
loopne
std
mov
test
test
ret
sar
jg
mov
and
xchg
mulb
lock
fstl
movsl
cmp
xchg
lods
cmc
incl
cld
js
loopne
jno
cs
andl
inc
fldl
fists
push
dec
cmp
adc
xor
out
inc
adc
or
inc
mov
add
shl
pop
fistps
jl
sbb
xor
mov
pop
int3
jnp
fs
dec
fisttps
cwtl
push
out
jle
in
das
aad
fdivl
fbstp
test
call
sub
pusha
adc
out
cmp
fsubrl
rclb
rclb
in
lods
and
xchg
js
mov
push
adc
push
pushf
mov
popf
vpackssdw
jne
aaa
sbb
push
outsl
clc
cld
lods
add
jbe
out
in
or
sub
jb
fs
movsl
call
inc
popf
test
sahf
xor
fsubr
insl
int3
inc
js
jmp
cwtl
in
movsl
dec
aas
lock
ljmp
lds
cmp
aas
mov
fcmovne
xor
lcall
shr
mov
pop
fwait
inc
hlt
jno
addr16
cli
mov
jle
inc
cmpsl
sub
push
cmp
fldt
into
popf
lret
adc
in
stos
dec
jbe
inc
shl
out
sbb
out
push
jne
ljmp
aad
int3
dec
mov
inc
daa
and
ja
ds
mov
fcoms
and
ljmp
idivl
and
mov
in
xchg
push
clc
xlat
jg
test
dec
add
mov
dec
scas
mov
cmp
add
call
lods
out
std
xor
fidivl
loop
rorb
ja
pop
ljmp
xchg
xchg
shrb
jne
movsl
dec
push
sbb
stos
push
fistps
mov
pushl
test
out
jns
daa
jle
inc
push
outsl
adc
lods
mov
stc
and
sbb
dec
out
dec
das
je
scas
sub
xlat
cmp
lret
push
push
xor
sub
out
fildll
cwtl
mov
inc
mov
jne
lcall
dec
lea
jmp
cmp
cmp
xchg
pushf
adc
repnz
decl
gs
xchg
rclb
push
ja
mov
lea
dec
popa
xchg
ljmp
cli
pusha
fwait
mov
add
xchg
and
das
xlat
push
call
dec
es
out
xlat
jmp
xchg
dec
add
lock
dec
or
pop
xchg
les
mov
sub
jl
xorl
call
xor
decl
aas
xchg
dec
insl
xor
fadds
push
lock
insl
mov
jmp
frstor
inc
dec
push
ljmp
xchg
dec
push
stc
fdivs
fs
repnz
loopne
push
std
in
mov
inc
adc
lret
shlb
xchg
inc
jg
decl
fdivp
lods
ja
pop
pop
sbb
mov
shll
jge
pop
mov
push
test
xchg
out
out
add
push
fs
in
out
das
ljmp
jp
and
mov
xchg
scas
jae
mov
cmp
ljmp
fmuls
pusha
pop
cmp
out
test
push
jb
push
repnz
lea
ret
mov
outsb
cli
decl
inc
fmuls
popf
das
inc
xchg
movsl
lahf
aad
mov
jge
add
add
add
mov
push
pop
je
pop
sub
iret
out
addr16
ret
jno
sti
xchg
sub
inc
xor
jge
in
popa
lods
jne
xor
in
ja
loope
xlat
cmpl
mov
dec
or
pop
flds
push
je
outsl
mov
adc
fcomip
cli
pop
xlat
pop
jle
test
jg
cmp
mov
xor
in
inc
xor
fildl
fcompl
add
mov
cmp
mov
ljmp
cmp
push
in
mov
mov
push
test
incl
or
loop
inc
je
in
mov
and
ds
fdivrs
cmp
in
xchg
adc
out
fchs
xchg
mov
mov
stc
insb
shlb
cld
mov
ljmp
jne
test
loop
insl
mov
xchg
mov
aas
push
sar
jg
dec
xor
mov
test
add
xor
push
cld
mov
sbb
call
jge
xchg
cmp
sbb
pop
add
cmc
js
push
out
out
cmp
out
inc
mov
je
pop
dec
mov
arpl
ljmp
ret
cmc
push
sbb
imull
mov
mov
aad
sbb
mov
and
dec
push
add
fs
xchg
dec
out
mov
cmp
std
lret
push
xor
arpl
mov
in
cmp
out
xchg
xchg
xor
mull
jge
mov
popf
jmp
push
mov
daa
out
xchg
in
xchg
pop
out
outsl
cli
or
mov
jno
call
inc
jmp
dec
call
jb
or
nop
dec
nop
sti
leave
push
stos
arpl
mov
and
hlt
rcll
dec
sbb
fsub
movsl
cwtl
xor
mov
ret
sub
ror
push
mov
lcall
enter
jmp
add
mov
pushf
cmp
add
push
movsb
cs
aas
popa
movsb
or
fcoms
in
add
stos
ljmp
cs
faddl
jne
lods
dec
fnstsw
imul
call
xchg
fcoml
cmp
ret
pop
testb
cmp
jmp
fcompl
mov
dec
inc
mov
mov
inc
jbe
add
jne
scas
ficoml
cmp
out
test
fdivrl
mov
loop
and
push
std
fistpl
dec
stos
popa
dec
sub
enter
in
dec
xchg
cs
icebp
lcall
iret
hlt
aam
mov
xor
xchg
movsl
notl
add
loope
pop
cld
popf
mov
inc
sub
clc
cli
push
subb
pop
dec
cltd
in
and
test
pop
mov
mov
sti
adc
or
pop
jmp
lcall
fwait
loope,pn
es
lods
int
adc
lock
mov
mov
decl
xor
lods
out
arpl
test
adc
fimull
xchg
sti
xchg
xchg
dec
lcall
in
in
subl
iret
int
js
lock
xchg
rorl
dec
add
arpl
sbb
call
and
shrl
popa
jmp
test
aad
ds
mov
leave
std
rclb
sbb
push
incb
push
fiadds
pushl
popf
rorb
out
pop
inc
mov
aam
in
aaa
loop
fdivs
cmp
stos
ret
into
dec
mov
mov
mov
jno
stc
bound
mov
clts
out
gs
jb
test
insb
xchg
mov
jne
mov
movsl
xchg
mov
mov
or
out
xchg
xchg
call
bound
add
mov
fwait
inc
mov
test
jne
repnz
mov
cmp
cltd
aas
mov
mov
mov
incl
cld
ljmp
pop
outsb
hlt
inc
mov
dec
adc
loop
inc
das
aam
das
cmp
and
jmp
xchg
push
aam
lret
mov
inc
jmp
es
lcall
or
flds
adc
mov
jmp
push
or
adc
mov
sbb
or
mov
es
push
mov
cltd
mov
ljmp
dec
mov
mov
loop
popf
xchg
bound
cmp
idivb
jo
incl
fisttpl
aam
imul
mov
enter
das
hlt
test
cmp
or
lock
dec
mov
popf
int3
jl
jg
les
pushf
adc
sub
sub
ret
push
out
inc
push
jl
xlat
arpl
adc
dec
jmp
repz
add
jmp
push
cmp
mov
xchg
fisttps
fadds
push
add
inc
pop
jmp
nop
push
hlt
cmpsl
mov
lcall
sbb
popa
push
fstl
test
push
push
mov
cmp
mov
jg
mov
int
inc
rep
stc
sbb
xchg
gs
xlat
add
incl
stc
test
xchg
mov
iret
fabs
std
in
jmp
mov
cmp
incl
pop
mov
sarl
sub
mov
movsb
rolb
pop
in
pushl
sbb
xchg
or
gs
fwait
imul
xchg
pop
test
test
inc
mov
jecxz
push
lods
add
dec
data16
mov
and
sarb
ljmp
sub
mov
stos
insb
int
cmp
add
xor
mov
ljmp
cltd
pop
or
inc
in
adc
out
mov
outsb
mov
pushl
lock
shrb
fsub
gs
fidivrs
jno
js
fiadds
decl
push
lret
shrl
mov
out
scas
or
je
jp
lcall
dec
pop
xchg
jne
push
xchg
inc
fistpl
mov
sbbb
aas
fildl
std
decl
xchg
jmp
outsl
sub
adc
push
sub
sahf
push
jecxz
mov
mov
pop
cld
xchg
adc
insb
ljmp
inc
and
je
fwait
cmp
out
cli
pop
decb
mov
xor
repz
cmp
incl
add
jmp
mov
rorb
out
mov
in
popf
aad
jmp
aam
mov
jne
mov
in
jae
shl
jne
mov
add
push
jno
sbb
sbb
jmp
ljmp
or
into
xchg
loope
and
or
push
adc
pushl
fiaddl
je
ret
iret
nop
adc
adc
hlt
add
inc
in
addr16
pop
mov
int3
xor
imul
mov
mov
sbb
cld
jnp
mov
call
in
shlb
call
jge
mov
jge
push
fnstcw
jg
xor
out
aad
ljmp
mov
mov
arpl
and
cld
push
jno
xchg
cmp
pop
fnstcw
push
inc
xchg
xor
fcmovnu
test
cld
pushf
cld
jp
push
xchg
dec
fiadds
std
loop
adc
popf
adc
filds
jnp
jl
movsl
scas
add
int
cld
in
movsl
imul
mov
pop
push
jno
add
mov
je
sub
rcr
into
xor
jno
adc
fcmovnb
daa
int3
or
and
call
jno
pop
mov
pop
insl
xor
pop
imul
fmull
int
cmp
cmp
call
dec
push
dec
or
aas
lds
xchg
lock
arpl
incl
and
pcmpgtw
sub
dec
scas
insl
add
pop
aam
cmp
decl
flds
iret
dec
pusha
xor
adc
or
fst
pusha
push
xchg
push
add
push
int
cwtl
mov
dec
fldcw
push
aad
in
in
rorb
inc
stos
stos
pop
mov
mov
mov
pop
sti
rorb
sub
aaa
cltd
xor
jmp
pop
push
jne
cmp
cmc
pop
push
xchg
repnz
push
scas
xor
push
aas
mov
loope
insl
jmp
xchg
pop
add
dec
xchg
and
and
mov
lods
push
jp
ror
xor
sbb
frstor
sbb
idiv
push
xchg
mov
inc
mov
dec
out
xlat
test
push
push
fldcw
pop
xor
incl
pusha
movsl
cmp
and
add
loope
test
inc
neg
shl
jbe
pop
mov
std
imul
daa
cltd
mov
lret
aaa
shl
sbb
sbb
cld
aam
mov
xor
mov
push
adc
fmuls
adc
fsubrs
sub
mov
das
xchg
jmp
pop
fdivrl
jge
mov
fucom
xchg
mov
adcl
mov
dec
push
cs
pop
jno
or
inc
or
pop
addb
and
mov
cmp
pop
sbb
push
inc
out
mov
in
fsubs
ljmp
cmp
push
or
xor
adc
xchg
in
pop
into
sub
hlt
stos
lods
sub
ret
popa
jmp
xor
fimull
push
clc
fiadds
sti
dec
xchg
outsl
shlb
fcomps
ljmp
stos
arpl
fnstsw
fs
push
dec
cmp
call
fidivrs
push
dec
xchg
stc
test
lcall
cmp
sbb
out
clc
incl
xchg
cs
outsb
jae
mov
jne
out
scas
and
dec
decl
push
jo
repnz
repz
movsb
out
push
ret
jmp
cmp
clc
pushl
stos
leave
dec
fisttpll
fnstsw
mov
in
call
xchg
ds
inc
inc
fcompl
fidivrl
adc
cmp
jg
in
cmc
xchg
xchg
divl
jb
sahf
xorl
add
call
test
jbe
addl
test
sbb
inc
cwtl
mov
fwait
xchg
inc
neg
push
fisubl
or
sub
incl
pop
xchg
bound
push
xchg
jl
in
js
out
dec
mov
add
adc
repz
std
stos
ljmp
pop
fsubs
cli
in
dec
in
lcall
out
lcall
mov
ficompl
xor
mov
sarl
dec
jmp
in
push
data16
lret
out
sbb
mov
jg
xchg
fsubl
out
fnstenv
pop
xor
sub
pop
inc
lds
lds
gs
cmp
fnstenv
call
push
test
dec
pop
out
daa
xchg
imul
mov
add
cld
push
psubsb
pusha
push
hlt
mov
stc
dec
jo
sbb
mov
insl
sbb
cmp
fisubl
push
cmc
std
jle
fldcw
inc
movb
mov
sub
lcall
mov
push
cltd
add
test
imul
add
lcall
clc
push
jmp
jecxz
inc
sbb
leave
shll
jg
xchg
gs
mov
nop
mov
lds
std
rolb
pop
out
adc
xchg
pop
pushl
js
fldenv
fld
fincstp
loop
std
mov
addr16
int3
jl
in
push
mov
repz
and
xor
jge
sbb
mov
fadd
pushf
add
or
fildl
enter
popa
or
sbb
cmp
cli
sar
ret
int
aad
bsf
decl
js
ljmp
pushf
bound
mov
ljmp
movsb
pop
mov
xchg
sbb
push
pusha
mov
pop
aad
popf
je
jl
call
dec
jbe
fs
ss
pushf
test
jle
es
call
mov
dec
orl
inc
add
mov
in
stos
sbb
xchg
adc
mov
sbb
pop
adc
mov
ja
loope
push
mov
test
inc
cmp
imul
cmp
push
jg
pop
inc
in
inc
loope
arpl
push
push
lcall
loope
jbe
fsubs
pop
addr16
jae
jae
fstl
mov
call
xchg
add
fsubrl
dec
das
cs
jb
fldcw
and
call
in
jo
xchg
rclb
testl
lcall
lock
xor
sbb
addr16
mov
out
sub
cmp
ljmp
jmp
test
adc
pop
adc
sub
std
js
out
jecxz
jge
addr16
mov
push
ds
icebp
movsb
imull
in
or
cwtl
fwait
sbb
xor
jg
push
mov
call
dec
jo
xlat
sbb
and
adc
enter
jns
out
mov
loope
mov
jmp
xchg
ljmp
loopne
out
jns
repnz
cmp
cmpsl
decl
outsl
inc
call
in
xorb
int
inc
jp
fisttps
pusha
icebp
ljmp
adc
inc
call
sub
pop
pop
and
pop
ss
out
cli
call
out
xlat
dec
jp
int3
mov
sbb
xchg
movsb
js
sbb
push
mov
call
fmul
test
jl
add
dec
xor
cld
mov
clc
or
shr
push
or
fnsave
adc
pop
or
jg
out
mov
std
fdivrl
jno
test
inc
call
imul
clc
dec
fnstenv
push
aaa
xor
push
xchg
ficoml
aas
movsl
call
fimull
mov
std
into
mov
gs
je
sub
stc
mov
call
bound
out
out
pop
call
bound
jnp
mov
data16
iret
leave
ljmp
stos
rcrl
in
insb
lock
stos
insl
arpl
add
aas
test
jmp
mov
mov
call
mov
out
insl
sub
inc
loop
or
decl
es
mov
fadd
xchg
mov
fsubrl
cmp
decl
mov
push
sbb
pusha
or
pop
in
pushl
incl
mull
fisubs
and
rcrb
aas
jle
in
xor
pop
out
testl
int
scas
in
ficompl
sub
lcall
sub
out
add
or
jecxz
sbb
pusha
imul
jmp
dec
sbb
outsb
cmp
popf
or
popf
ret
pop
mov
rclb
sar
call
jge
cmp
movsl
pop
icebp
scas
mov
aaa
xor
loopne
and
es
shll
jbe
jg
lcall
leave
or
mov
inc
mov
mov
push
jle
decl
or
jno
pop
test
shl
pop
push
loop
xchg
jbe
xor
push
xchg
fs
fs
arpl
mov
fdivr
jns
cwtl
mov
pop
cmc
test
cmp
mov
popf
aas
cmpsl
mov
dec
je
divb
pop
hlt
std
out
loopne
adc
cmc
jmp
ljmp
or
mov
cmp
in
xor
clc
jp
xor
or
and
neg
xchg
in
cmp
mov
shrb
sub
push
xchg
je
or
mov
loope
mov
cld
ljmp
call
rclb
vcvtdq2pd
xchg
loopne
fnstsw
popa
iret
sti
aam
lahf
lcall
add
data16
xchg
mov
in
int3
push
adc
pop
pushf
cli
jge
jl
dec
pop
dec
out
repnz
in
mov
out
add
cmpsl
in
mov
push
movsb
push
and
push
inc
sti
xchg
std
int
mov
shl
or
loope
ja
incl
jle
ljmp
clc
enter
leave
mov
pop
out
jno,pt
popf
dec
jnp
add
inc
push
out
jmp
push
out
sub
push
fistpl
lcall
fcompp
addl
sti
lock
add
mov
fiaddl
aas
pop
fldl
mov
daa
repnz
inc
inc
mov
fmull
jae
std
fucomip
jbe
pop
sub
fs
setle
and
lods
dec
cltd
inc
inc
pop
jecxz
cli
xchg
lret
or
inc
mov
fcmovnb
or
imul
mov
fs
push
stos
adc
sbb
sahf
vprotw
dec
in
cmp
jecxz
mov
dec
popa
sbb
pop
scas
jge
or
in
push
in
addr16
ljmp
call
and
sub
sub
out
int3
xchg
jge
mov
cmp
ljmp
cli
sbb
push
dec
scas
jo
mov
adc
imul
scas
cmpsb
jae
out
lods
decl
inc
out
and
subb
nop
or
in
mov
sbb
jne
fwait
test
andl
jmp
ret
push
cmp
decl
sahf
ret
mov
inc
adc
add
lret
pop
cmp
std
das
cli
decl
xor
sub
xor
aam
mov
xchg
in
jae
mov
pushl
xchg
or
lock
or
incl
fwait
test
or
hlt
or
push
jle
mov
fcomip
hlt
xor
xchg
pop
and
js
cmp
aad
cmp
sar
addr16
jae
xchg
lcall
les
mov
mov
xorl
add
je
pop
lods
mov
pop
rcr
pop
mov
mov
sbb
mov
ljmp
arpl
es
sub
pop
filds
cmp
ljmp
daa
std
push
pop
and
enter
dec
test
ss
cmc
mov
cmp
mov
or
push
or
mov
iret
ljmp
xchg
pop
lcall
inc
push
lods
pop
mov
jns,pn
mov
pop
stc
lcall
ret
jmp
dec
out
sbb
cmp
leave
inc
decl
sub
in
outsb
mov
negb
ljmp
jmp
mov
dec
aas
in
filds
pop
aam
mov
std
call
lret
movsb
inc
xchg
mov
or
pop
jl
xchg
xchg
adc
adc
xchg
or
adc
scas
loope
mov
lock
call
mov
add
adc
test
sti
jge
jb
rorb
pop
inc
xchg
jmp
stc
mov
dec
cld
sbb
out
jne
bound
inc
push
inc
push
jp
insb
dec
out
add
or
fs
jnp
mov
adc
incl
push
je
jl
in
das
sti
jnp
xchg
stos
outsb
pop
add
std
ljmp
fsub
add
flds
loope
add
mov
xor
or
mov
cld
inc
ljmp
xor
fisubs
in
pop
orw
and
lcall
xchg
std
into
pop
dec
mov
cmc
sub
push
insb
mov
mov
neg
pop
in
mov
xchg
cli
and
push
in
mov
jl
push
dec
inc
sub
jbe
push
mov
popl
nop
out
mov
sar
jp
dec
fwait
sub
jecxz
aad
in
xor
jno
aam
jg
popa
mov
ja
jg
jnp
arpl
subl
dec
mov
jecxz
sbb
adc
sbb
insb
inc
std
jmp
adc
out
test
jp
mov
jl
loope
jmp
nop
jne
shll
push
leave
aaa
ds
inc
stos
test
jecxz
bound
lcall
dec
cmpsb
add
xor
js
dec
in
dec
jg
push
adc
inc
xor
push
pop
pusha
in
sub
imul
pop
in
jae
out
decl
mov
ror
lcall
cli
outsb
or
ljmp
sar
bound
imul
pop
leave
or
sub
push
out
sbb
xchg
and
pop
cmc
rolb
dec
aad
jge
add
popa
fxch
ljmp
push
call
jmp
xchg
cmp
cmpsb
lahf
jae
pop
fcmovbe
out
shlb
out
lret
lods
cmp
inc
push
outsl
arpl
jecxz
and
rcrb
sahf
nop
mull
insb
xor
mov
jecxz
call
leave
mov
pop
adc
pop
mov
lods
jne
insb
xchg
ljmp
jbe
xchg
mov
sub
lds
fidivl
push
xlat
or
fmull
incl
xchg
mov
dec
xor
xor
loop
cmp
fcmovne
loop
push
mov
pop
push
mov
xchg
jmp
or
out
xlat
jne
call
loop
jp
testl
xor
fistpl
and
incl
in
sub
in
jne
cmpsl
fs
add
out
xchg
jecxz
dec
aam
dec
std
sub
call
jle
inc
jns
xchg
or
jns
fadds
fucomp
or
push
fwait
xchg
movsb
inc
lcall
test
inc
mov
jge
addl
inc
test
sbb
rcrb
sti
adc
out
lret
cwtl
inc
jns
jbe
cmp
inc
out
outsl
fsubrl
pop
fs
mov
jmp
mov
fucom
push
jbe
or
mulb
dec
jl
mov
roll
test
aad
ds
gs
cmc
into
lock
pushl
in
push
inc
rol
arpl
fstp
popf
roll
push
xchg
aad
sbb
push
ljmp
inc
nop
arpl
inc
stc
jp
xor
stos
add
jbe
cwtl
inc
pusha
pop
call
xchg
inc
xor
cmc
xor
dec
push
mov
push
push
adc
call
fstps
push
jecxz
lret
shrl
iret
sub
sbb
data16
push
pop
jge
adc
pushl
in
push
sarl
add
sti
mov
test
adc
repnz
sub
pushl
fstps
mov
cmp
sbb
icebp
dec
in
fistpll
mov
jecxz
lret
push
mov
addb
xlat
xor
adc
neg
loop
incl
js
sub
or
imul
repz
cmpsb
fcom
in
test
out
sbb
jmp
pop
repnz
lods
push
ffreep
xor
insb
insb
andb
lock
push
pop
jmp
mov
cmp
std
push
pop
in
xchg
jo
sbb
inc
sti
in
out
in
movsl
loopne
jns
das
cmp
shlb
int
pop
jo
in
inc
or
shll
enter
enter
cmp
mov
imul
jg
mov
popa
test
sarb
ds
sub
incl
ret
push
inc
jmp
adc
adc
loopne,pn
dec
mov
pop
std
mov
pop
and
sub
and
add
ljmp
scas
subb
das
out
pop
dec
stc
sar
sbb
loope
add
push
jecxz
cmpsl
cmc
adc
decl
add
sbb
pop
fwait
or
dec
in
int3
out
call
dec
mov
inc
ror
sbb
iret
sbb
sbb
lcall
push
add
jmp
ret
scas
pushf
xchg
add
push
into
dec
jbe
sub
push
sbb
or
dec
std
jbe
fsts
add
mov
rcl
dec
jle
cs
mov
sarl
je
push
lea
call
sub
mov
push
je
mov
enter
dec
shlb
decl
ljmp
jge
xchg
adc
fmuls
repz
xor
out
out
jg
stos
je
sbb
adc
cwtl
mov
mov
xor
pushf
hlt
clc
pop
dec
sbb
sarb
lock
decl
out
in
add
dec
movsb
mov
sub
push
add
push
mov
pop
rcr
je
daa
ret
repz
lcall
rorb
nop
jae
inc
jp
inc
movsb
jne
leave
pop
outsl
add
sarb
and
push
std
lcall
pop
or
jbe
adc
insl
imul
adc
xlat
stos
jae
add
jae
adc
xchg
pop
mov
ficoms
sbb
decl
mov
shl
add
fbstp
xor
out
add
shl
adc
push
call
in
and
cld
in
mov
dec
ss
xchg
dec
ds
adc
rolb
dec
mov
insl
cld
jg
pushl
fiaddl
enter
lret
cmp
cmp
in
push
dec
vphaddubd
mov
add
in
mov
test
mov
pop
and
clc
mov
cmp
rcrb
cmp
pushl
decl
jne
jecxz
sbb
out
jno
cmp
ds
arpl
sar
out
idiv
cmp
pop
adc
nop
fidivrs
mov
into
sub
mov
push
xchg
xchg
lcall
sub
mov
xchg
je
cmp
clc
in
clc
mov
lcall
outsl
jae
lock
pop
xchg
or
jmp
xchg
fmuls
mov
and
decl
mov
dec
out
pop
lock
lds
sbb
mov
ljmp
add
sub
mov
aam
dec
inc
int
js
mov
push
int3
mov
imull
mov
cmpb
inc
pushf
inc
dec
shll
incl
add
in
jo
vmaxps
jbe
imul
cmp
lea
push
fwait
adc
stos
out
push
cmp
inc
dec
mov
lcall
mov
lods
jmp
orb
rcrl
jg
or
jecxz
fadds
jnp
js
dec
int
sbb
inc
mov
sub
or
mov
test
mov
out
push
dec
popa
xchg
outsb
addb
vphaddubq
mov
ljmp
mov
push
rcrb
rorb
mov
ja
ror
and
pop
test
mov
xchg
repz
lcall
pop
mov
adc
dec
push
repnz
mov
cmpsb
imul
test
mov
out
int
push
ss
ljmp
dec
pop
loope
or
popf
push
sar
addb
xchg
mov
pop
aad
or
dec
xorl
gs
bound
mov
dec
cmp
mov
dec
or
out
cmc
mov
dec
pusha
mov
jbe
addr16
mov
in
sar
call
xor
pop
mov
shr
loop
mov
pop
pop
and
jno
js
and
call
mov
stc
andl
dec
cwtl
or
ja
popf
push
mul
push
pop
mov
int
call
fdivrs
jge
jl
lds
in
mov
jmp
ret
loop
push
sub
gs
pop
cmc
add
or
outsb
arpl
push
or
lcall
cmp
xor
jae
jb
cmp
push
pusha
shlb
lock
insb
rcl
iret
das
clc
mov
xlat
pop
cs
aam
gs
ja
stos
cmp
xor
cmc
dec
xor
push
sub
repnz
lea
in
call
adc
push
xor
or
pusha
sahf
or
jg
push
pop
mov
add
out
aad
addr16
or
movsl
jg
jmp
movsb
jmp
aam
ficomps
lret
outsl
in
mov
add
sub
jl
incl
mov
sbb
push
scas
adc
cmpsl
jo
dec
cld
xchg
fimuls
incl
int3
lcall
sbb
push
orb
sbb
daa
mov
call
pcmpgtw
mov
ficoml
clc
pop
dec
push
ret
inc
call
pop
decl
xchg
lret
jmp
dec
repz
insb
inc
test
in
mov
adc
pop
adc
repz
nop
mov
cmpb
call
neg
mulb
loop
mov
push
loopne
jl
cmp
lock
insl
cmp
inc
pushl
imul
cld
xchg
in
sbbb
sbb
push
mov
insb
xchg
inc
jnp
add
cs
test
xchg
ficomps
or
enter
outsb
fistpl
ret
out
dec
mov
and
loope
sbb
fwait
sbb
or
inc
dec
and
pushf
lea
shll
sti
and
lcall
hlt
sub
lea
xchg
dec
hlt
dec
sbb
idiv
jmp
inc
lret
movsb
jg
loop
push
in
inc
add
aas
es
loopne
movsb
mov
icebp
aaa
pop
mov
mov
push
push
subl
sbb
or
xor
incl
pop
jp
pushf
pop
add
adc
loopne
mov
xchg
push
cs
pop
cmp
push
pop
mov
jmp
pop
sbb
adc
repz
xchg
pop
std
into
xor
pushl
outsb
cld
push
iret
int
jmp
fdivrp
sbb
inc
out
mov
ds
jmp
dec
insl
rcrl
xchg
mov
das
xchg
ds
fistps
pop
stos
int
cmp
jmp
inc
or
enter
adc
jmp
ret
xor
scas
adc
or
jnp
cmp
enter
push
cmpsl
lahf
mov
out
pop
aad
outsl
pop
and
out
loopne
fistl
in
ja
pushl
inc
or
xchg
jmp
add
aam
enter
loopne
and
ror
sbb
fnsave
mov
fists
push
sbb
popa
jo
pusha
and
incl
jg
and
xchg
xchg
cmc
cs
fidivs
xor
lds
mov
push
fildl
sbb
xor
in
lcall
jnp
sbbb
push
lret
add
cmpsb
out
push
pop
adc
push
xchg
mov
fdivrp
pushl
testl
shlb
cmp
mov
inc
rcl
fistpll
scas
clc
incl
xchg
or
cld
repz
incl
out
dec
mov
inc
data16
aas
and
mov
divb
jmp
sbb
inc
clc
shrl
out
nop
or
cld
push
adc
divl
jmp
sbb
cs
repz
icebp
stc
fwait
repz
out
ds
xchg
and
fdivrp
incl
flds
dec
mov
mov
test
movsl
frstor
loopne
aaa
mov
test
push
xor
cmp
mov
aas
repz
popf
dec
and
lock
ja
jle
ret
in
lret
loope
les
sbb
arpl
jae
out
call
mov
mov
mov
lea
pop
scas
fisubrs
and
fisubl
incl
fcomps
cld
shll
pushf
dec
fimuls
fmull
mov
lcall
test
imul
hlt
cmpsb
or
push
sub
or
out
add
jmp
xchg
out
andl
fwait
cmpsl
out
lret
fwait
mov
bound
rol
fcompl
inc
jns
ljmp
lea
cld
pop
cmc
jo
mov
addr16
icebp
push
sub
shrl
sbb
lock
sub
and
push
pop
insl
push
mov
sahf
jb
mov
push
and
outsb
dec
dec
fs
rcr
cwtl
xchg
hlt
int
push
jle
frstor
addr16
movsl
cmp
sub
movsl
add
mov
sbb
mov
fs
neg
mov
ds
popa
mov
xor
mov
xchg
adc
push
imul
sbb
bound
xchg
insb
ficomps
jmp
mov
loop
lcall
and
ficomps
push
xlat
lcall
bound
in
jecxz
shl
jg
dec
iret
repnz
lods
in
and
repnz
decl
jle
cmp
pushf
sbb
mov
mov
popa
mov
jge
scas
jmp
or
lea
inc
xor
cmp
xchg
xor
aas
in
jg
rorl
gs
fdivrl
mov
mov
cs
lret
sbb
int
cmpsb
mov
repnz
or
imul
fdivr
or
cmpsb
pushf
testb
mov
ds
mov
xor
popa
repz
ljmp
jnp
push
jmp
fisubs
decb
cltd
jmp
fmull
lds
sbb
repnz
enter
fnstcw
in
add
std
push
mov
repnz
cld
add
ja
lcall
in
out
sub
fcoml
pandn
dec
repnz
movsb
fsubs
je
je
out
ljmp
decl
mov
ficomps
mov
in
fdivl
fsubrp
dec
and
hlt
in
push
xor
inc
sahf
mov
inc
rolb
ret
adc
test
jnp
or
add
in
adc
call
test
sbbl
and
mov
sahf
cmp
int
loopne
incl
adc
dec
sbbb
es
dec
jae
repnz
push
cmp
push
icebp
lcall
int
dec
jno
cmp
mov
adc
scas
pop
arpl
popf
idiv
out
mov
adc
jmp
jne
xchg
repz
hlt
aad
xor
adc
arpl
sbb
aam
jnp
fsubl
push
ds
ret
push
out
js
lods
adc
mov
sbb
cwtl
bound
sbb
or
clc
ljmp
push
dec
add
icebp
idivb
fcompl
jmp
int
sub
sub
scas
xchg
jb
mov
lret
sti
repz
jbe
das
outsb
hlt
sbb
fcomps
cmp
cmp
loope
or
pop
test
out
jbe
cmp
cmc
test
incl
or
xchg
xlat
imul
mov
popf
sub
out
fs
jmp
fwait
sub
sub
movb
clc
repz
pop
cmc
insb
sar
hlt
scas
fs
and
shlb
pop
fs
pop
sbb
and
out
clc
jb
div
and
sbb
fs
sahf
test
adc
jmp
jae
push
fstps
nop
jae
lcall
in
and
dec
out
cli
incl
and
and
jmp
jl
xchg
outsb
mov
pop
repz
enter
aaa
sub
add
dec
sbb
std
jl
mov
jnp
cs
pop
ljmp
pop
andl
dec
push
iret
popf
dec
push
adcb
cmc
mov
pop
fdivr
push
cltd
imul
stc
dec
push
or
std
add
es
movsl
xor
stos
fcmovb
stos
std
test
aas
sbb
inc
cld
mov
mov
out
stc
sub
mov
mov
add
call
movsl
jecxz
mov
aam
popf
jns
inc
daa
lds
or
int3
sahf
test
scas
add
pusha
xor
xchg
fs
stos
mov
xor
rcll
lock
outsb
repnz
xchg
stos
mov
and
add
aaa
xchg
repz
daa
idivl
fsubp
mov
test
sub
and
mov
sbb
js
inc
cld
shrl
sub
xor
adc
loop
inc
push
or
fcomi
mull
sarb
call
test
or
leave
loope
sbb
sahf
sub
sbb
ja
in
pop
fistl
and
jg
pop
mov
cmp
pushf
adc
mov
push
cld
movsl
imul
xchg
mov
call
jl
xor
iret
jae
push
mov
addr16
dec
scas
add
mul
adc
jg
add
call
adc
mull
repnz
cmc
scas
sub
push
std
decl
and
aaa
icebp
aam
addl
cld
sbb
repz
dec
dec
dec
jno
push
dec
test
mov
insl
outsl
xor
add
xchg
cmp
lds
iret
ljmp
pop
lock
and
or
mov
hlt
jae
cmp
call
loopne
mov
outsb
push
addr16
push
pop
and
js
imulb
pushl
push
out
add
add
pop
adc
pop
mov
xchg
dec
mov
imul
fstpt
cwtl
lret
imul
add
mov
pop
out
repz
push
fstl
lea
iret
incl
leave
stos
loopne
mov
cld
std
xor
fwait
inc
iret
gs
fnsetpm(287
push
pop
inc
xchg
mov
out
outsl
mov
push
scas
rclb
ljmp
pop
cld
jbe
fcoml
adc
ror
or
xlat
stc
aad
cli
cmc
aas
out
fnsave
lcall
je
jbe
xor
adc
sti
dec
or
jne
dec
adc
and
dec
test
dec
rolb
pusha
in
icebp
push
xor
or
sbb
movb
ljmp
and
pop
mov
outsb
jg
pusha
xchg
dec
aad
testl
pop
xchg
xlat
lods
dec
incl
pushl
add
jae
call
mov
pop
xlat
int3
dec
jne
mov
adc
xchg
push
and
movsb
ds
pop
cs
mov
outsl
leave
adc
incl
je
inc
fxam
cmpsb
adc
or
inc
sub
adc
pushl
outsl
push
into
cmp
addr16
sub
lret
cmp
ss
jmp
hlt
inc
pop
icebp
sti
nop
mov
push
cmc
daa
in
sub
xor
fmul
shl
push
cmc
inc
cmp
lods
adc
pop
add
xchg
aad
mov
pop
dec
and
jmp
cmp
sub
incl
jl
add
cmpsb
das
push
sbb
lcall
mov
sbb
sti
outsb
adc
jnp
movl
fcmovne
cmp
fists
pop
gs
and
iret
decl
adc
xchg
arpl
jle
jl
dec
cmpsb
xor
pushl
mov
outsb
mov
movl
jg
call
sti
decl
out
orl
iret
aad
mov
insb
xorb
in
add
nop
or
pop
mov
inc
xor
mov
or
jle
sar
cmpsb
jbe
icebp
sbb
in
fcompl
repz
cli
jg
les
xchg
sti
xor
xchg
adc
jg
leave
mov
fcomip
jl
movaps
outsb
or
pop
pop
lret
push
lret
cs
mov
ret
incl
push
jge
mov
je
sub
outsl
mov
cmp
pushl
push
cwtl
stos
xchg
mov
imul
push
hlt
ret
addl
push
repnz
cmp
loopne
sbb
xchg
jne
popa
push
push
pop
aaa
xchg
popf
imul
mov
mov
push
inc
cwtl
fcmovne
sub
sbb
orb
sbb
movsl
dec
or
movsb
or
std
mov
loope
ds
in
add
add
pushl
inc
mov
dec
insl
out
js
and
push
mov
jb
out
jmp
or
and
call
lds
loopne
or
gs
pop
xchg
inc
hlt
lods
jb
test
call
aam
jecxz
jae
sbb
aaa
pop
mov
cmc
sbb
test
data16
pop
fimull
cmp
push
jnp
pop
xchg
cmpsl
sub
cmp
jg
shl
mov
and
jno
lahf
dec
push
popa
aas
cmp
ljmp
adc
sub
cs
test
cmp
mov
cmp
in
or
aaa
repz
lock
xchg
cmp
xor
cltd
or
jns
loop
out
fnstsw
lock
popf
jno
sbb
pop
inc
in
jecxz
sub
mov
or
icebp
mov
inc
add
inc
cli
shll
sbbl
or
push
push
popf
fucomip
andl
xchg
repnz
cmp
jmp
push
popf
in
pop
sub
cld
fs
cmc
std
push
out
pusha
movl
lcall
test
cmp
sahf
setg
and
imul
orl
adc
adc
sub
cli
jecxz
scas
fidivs
xor
shll
mov
xchg
enter
inc
mov
loop
inc
pusha
cltd
xchg
pop
dec
and
jmp
out
xchg
cmpsb
pushl
or
jns
add
mov
std
es
adc
jg
mov
xchg
jp
xchg
clc
xchg
pop
push
sbb
mov
mov
ljmp
pslld
icebp
jnp
mov
mov
ljmp
sbb
mov
jnp
lret
ds
mov
sub
mov
decl
or
aam
adc
mov
dec
cmp
insb
inc
mov
xchg
leave
enter
push
out
mov
lcall
adc
aam
adc
jmp
jo
ljmp
mov
jle
clc
or
lds
mov
out
sbb
je
and
push
jmp
ljmp
or
aad
inc
pop
rcrb
je
jp
pop
nop
xor
mov
inc
int
popf
lods
xor
lds
fisttpll
out
inc
mov
leave
cmp
fsubrp
paddsw
xlat
movsb
mov
pop
xchg
shlb
inc
xchg
popa
sahf
lock
cmpsb
insb
pushl
sub
jl
movsl
push
or
pop
ror
mov
out
pop
push
clc
ljmp
lret
cmp
divb
int
or
scas
mov
dec
movsb
clc
jne
and
jae
mov
out
cld
and
mov
mov
add
mov
in
je
out
xlat
pop
int3
mov
mov
xlat
cmp
test
inc
div
cmpsl
dec
sbb
aas
dec
and
push
movsl
mul
clc
xor
pushf
dec
xchg
xlat
loop
test
xchg
push
sahf
pop
int3
push
cld
call
loop
sub
loope
inc
out
dec
in
inc
mov
lret
and
dec
aad
jle
call
hlt
dec
mov
or
and
fucomi
add
cli
sti
jne
add
dec
filds
xchg
cld
icebp
dec
pop
ja
jl
test
sbb
jmp
cmp
incb
shll
scas
dec
fcom
xor
stos
jmp
cmp
push
dec
loopne
mov
dec
mov
nop
int
fsubs
jno
cli
into
out
mov
mov
sti
loopne
into
pusha
xorl
jmp
sar
pushl
lcall
stc
or
pop
push
and
mov
xchg
lahf
jl
pop
add
fisttpl
pop
cld
idiv
jb
mov
fs
xor
sub
add
loop
hlt
aad
lcall
xor
insl
pop
push
call
mov
stos
sub
dec
sar
incl
in
push
mov
mov
jno
jno
cld
gs
das
sbb
add
jns
mov
mov
iret
adc
shrl
push
inc
dec
add
outsl
sets
xchg
and
sti
dec
cmp
sti
sbb
xchg
dec
into
ret
push
fdivr
jg
cmp
xor
pop
inc
pusha
repz
mov
inc
outsl
adc
lcall
add
mov
mov
pop
movsb
orb
ja
iret
ljmp
call
sti
xlat
cwtl
cmc
in
sti
ljmp
repz
jne
rcl
ud0
lcall
or
pop
popf
les
int3
cmp
imull
addr16
out
fwait
sbb
xchg
adc
scas
cli
decl
rol
sub
push
pop
and
push
pop
jp
seto
in
ss
icebp
decl
in
mov
rcll
jg
sahf
adc
lcall
sub
or
testl
add
arpl
or
pop
test
scas
cli
dec
sub
cld
jmp
or
cmp
ss
mov
jae
call
incl
into
inc
mov
inc
cmpsb
mov
decb
cmp
cld
mov
inc
and
mov
out
popf
ljmp
jle
shr
mov
mov
adc
in
js
cmc
jno
mov
hlt
jno
in
out
jl
push
xlat
into
subb
pushf
in
enter
jg
in
andl
push
test
or
in
push
xor
stc
mov
push
pusha
jle,pt
data16
cmpsl
jnp
imul
jg
cmp
adc
pushf
popf
into
in
lods
lret
std
ljmp
jno
imulb
mov
out
add
and
ret
pushl
cld
incl
test
aas
mov
sti
xchg
pop
sbb
lcall
push
jnp
scas
or
dec
lea
mov
jmp
in
nop
push
jbe
lods
or
xor
pushl
dec
mov
std
jno
adc
test
cmp
call
mov
push
jg
push
daa
push
pop
add
leave
pop
pop
icebp
inc
jne
imul
and
fstps
push
mov
dec
cmp
popf
dec
clc
inc
icebp
mov
lcall
loop
fcomip
ljmp
and
mov
andb
shr
push
loope
incl
in
std
or
mov
aad
jae
push
add
jmp
outsb
adc
cwtl
jnp
sbb
inc
dec
mov
enter
fdivr
fcomip
incl
dec
div
sbb
adc
jne
inc
int
pushf
xorb
fstpl
fs
jmp
xchg
mov
scas
cltd
das
mov
std
sub
sub
push
lods
std
jecxz
daa
push
fiadds
ljmp
stc
xchg
xchg
aam
negl
push
jl
call
add
jle
cmp
mov
cwtl
push
iret
out
fsubrs
aad
xchg
jmp
aaa
fcomp
in
cmpsb
pop
frstor
adc
inc
cli
pushl
call
add
pop
hlt
jnp
out
xchg
stos
mov
movsl
pop
pop
int3
cld
test
movsl
pushf
sti
sbb
testb
bound
xor
out
xchg
imul
loop
jg
and
sbb
jp
jle
xchg
in
fldl
fcomp
mov
lcall
sub
push
push
mov
sbb
sbb
js
rorl
lock
repz
add
shrl
xchg
aam
mov
ficomps
cs
mov
add
aam
faddp
iret
out
cmpsb
aam
sub
scas
fwait
stos
loop
dec
sub
jmp
sti
daa
and
lahf
scas
enter
scas
aam
inc
sub
jg
pop
lock
cld
dec
stc
jmp
xchg
push
xchg
push
push
pop
mov
aad
inc
ucomiss
popa
add
cmp
call
insb
or
sub
and
std
ljmp
andb
jmp
ficoms
add
aaa
in
adc
lcall
int
sbb
aas
maxps
and
lock
icebp
sbb
pop
je
inc
in
decl
pushl
popa
sbb
mov
sbb
xchg
mov
shl
pop
out
fadds
not
push
imul
mov
jmp
out
repz
mov
jbe
lret
call
cmpsl
mov
push
lahf
mov
mov
dec
push
lcall
call
cld
jmp
and
jmp
shrb
fmulp
in
jbe
mov
sar
cli
cltd
inc
ret
mov
sub
cmpsl
push
sahf
dec
adc
jmp
mov
in
je
xor
add
mov
xor
inc
std
movsl
lahf
jmp
shlb
or
dec
call
test
xor
fisubs
jns
dec
scas
xor
lcall
cs
sbb
xlat
mov
xchg
testl
aam
out
adcl
jg
pop
jle
rolb
outsb
cmpl
mov
ret
incl
les
pop
imul
insl
cmp
dec
jp
inc
popf
insb
cld
sub
jne
into
xor
mov
stc
subb
mov
dec
aaa
dec
stc
and
or
xchg
sar
fildl
ds
or
aas
les
jb
stos
xchg
call
addb
sbb
push
daa
clc
adc
aad
xchg
fbld
call
incl
xchg
test
inc
rorb
mov
cli
xor
stos
outsl
mov
rol
jmp
call
xor
leave
cli
sbb
lret
xor
sub
ret
inc
loope
lock
decl
add
cmp
es
test
cs
fdivr
xchg
jp
je
mov
incl
push
pop
lahf
movsl
fldcw
xchg
sti
dec
mov
and
sub
decl
xor
push
mov
push
test
repnz
push
iret
and
imul
push
inc
push
xchg
out
cli
inc
xchg
imul
xor
das
push
pushf
rolb
cmpsb
jnp
fadds
mov
cmc
dec
dec
fsubr
sbb
ja
test
or
mov
jecxz
add
pop
test
xchg
mov
pop
lahf
repz
cmpsl
rcrb
adc
jmp
ja
insl
or
jbe
movsb
addr16
fsin
hlt
jle
mov
cld
sbb
mov
sbb
pushl
mov
push
jecxz
push
stos
mov
sarl
out
cmp
outsb
sub
clc
lods
pop
idiv
ljmp
rcrl
imul
negl
adc
mov
rcrl
ljmp
push
add
iret
sbb
pop
cmp
fldenv
mov
rcrl
imul
jge
sar
pop
lcall
ret
mov
lods
push
mov
daa
sar
in
pop
scas
ss
fcomip
sub
and
out
inc
testb
inc
out
std
ss
jo
push
adc
push
icebp
ds
shlb
inc
sbb
jg
dec
stc
lret
xchg
xchg
or
cmc
and
jmp
out
push
jp
xchg
mov
ror
arpl
loop
and
ljmp
aam
push
inc
aam
sub
ja
add
aad
lods
ficoml
mov
sahf
cld
mov
push
push
add
shll
call
lds
inc
pop
daa
jp
dec
ret
mov
sbb
aam
fwait
sarb
mov
inc
stc
dec
aam
pop
add
mov
add
dec
push
jg
int3
stc
sub
gs
xlat
gs
fisubs
or
in
out
push
ret
push
jnp
dec
aam
cltd
add
push
inc
jge,pt
push
hlt
in
fisubs
cld
add
mov
popa
aam
scas
adc
pop
and
mov
in
clc
incl
call
jecxz
and
mov
fdivs
xchg
adc
nop
pushl
mov
xchg
adcl
dec
fcomi
adc
cmpb
xor
inc
sub
incl
mov
or
ds
cmp
dec
jl
adc
outsl
dec
lahf
inc
faddl
or
fsubrs
loop
les
not
roll
mov
dec
xlat
mov
pushl
test
dec
pop
in
inc
cmp
outsl
cmp
inc
push
jg
call
xchg
sbb
call
jnp
int
outsb
xchg
mov
cltd
ficoml
sbb
jmp
sbb
mov
xor
gs
adc
rcr
inc
push
je
mov
loop
ljmp
and
mov
mov
mov
mov
mov
xchg
xchg
xor
push
mov
loopne
call
add
or
rolb
xchg
int3
mov
repz
mov
fcomip
mov
sub
testb
shrl
add
inc
sub
in
outsl
pop
push
fisttps
or
add
lahf
sahf
push
jge
negb
push
stos
lcall
cmp
adc
loop
cmp
int3
add
pop
lock
xchg
mov
sbb
jmp
call
in
jae
mov
jno
lock
mov
push
jo
push
mov
ljmp
je
fdivs
outsb
jb
and
xor
std
jno
cmp
push
dec
cmp
xchg
xor
add
and
sbbb
fstps
scas
mov
push
fcomip
lcall
pop
or
adc
inc
jle
mov
rol
pop
push
pop
fldl
inc
repnz
dec
sarb
sarb
mov
xchg
in
mov
mov
mov
lds
fbld
decl
lods
in
jae
adc
vmread
loop
xchg
out
test
sar
ljmp
out
lods
in
inc
xlat
mov
std
or
shll
inc
add
cmpsl
loop
xchg
shr
das
cli
lcall
nop
fisubs
xchg
out
subb
in
mov
shlb
in
negb
dec
shll
sbb
jo
ret
adc
clc
incl
jle
out
pop
pop
sbb
jo
push
cld
adc
inc
add
inc
jecxz
jne
pushl
inc
scas
and
mov
xchg
xchg
test
loope
fldl
jno
ss
cmp
andb
jg
aam
cmpsb
cld
xor
punpckhwd
cmpsb
push
sub
into
stos
inc
hlt
dec
jnp
fidivrl
fdiv
jnp
add
cld
inc
pop
push
aas
add
adc
pusha
call
out
xchg
ljmp
pop
mov
cwtl
xor
clc
dec
mov
out
fwait
inc
rolb
xchg
lret
mov
movb
and
jg
sti
and
jl
repnz
sub
pusha
ja
mov
popf
jge
inc
inc
mov
divl
pushf
out
decl
lock
and
vgetexpps
mov
nop
add
call
cld
jmp
fnstsw
ja
jb
inc
rolb
std
gs
fnsave
mov
ljmp
aam
adc
push
dec
and
mov
dec
or
cltd
cmc
push
inc
lcall
divl
xorb
lahf
loopne
lret
inc
jne
jl
stc
movsl
mov
cmpsl
fcom
call
popa
dec
ja
xor
xchg
dec
shr
cmpsb
loopne
inc
arpl
inc
sbb
stc
sahf
iret
notl
loopne
ljmp
es
int
daa
inc
mov
sub
xor
mov
ret
fildl
push
ljmp
aad
lods
orl
jg
std
push
mov
sbb
fldcw
jb
dec
inc
mov
pop
rcrb
inc
jmp
call
xlat
enter
pop
jne
jbe
xchg
xchg
inc
dec
push
pop
hlt
das
sub
jb
lcall
call
inc
ljmp
push
inc
and
rcll
call
inc
lcall
ljmp
cwtl
add
rolb
sub
push
cli
in
aad
mov
clc
fwait
incl
popa
sti
cmp
sub
incl
rclb
jmp
outsb
and
push
adc
xor
outsl
mov
das
or
dec
iret
pop
dec
addr16
xor
ljmp
pop
fcoms
mov
jle
fdiv
add
cmpb
ljmp
nop
inc
shll
inc
cmp
aaa
sub
or
movsl
lds
decl
imul
add
in
imul
ljmp
push
dec
pop
inc
jg
aad
lahf
cld
lods
push
pop
shl
rcll
lcall
scas
in
fs
dec
inc
scas
mov
cmp
lods
lcall
lods
cwtl
inc
fistps
notb
in
in
push
xor
ljmp
incl
sahf
insl
mov
sub
imul
jmp
inc
jno
repz
icebp
mov
addb
add
out
iret
push
in
out
pop
clc
inc
jle
ja
in
mov
mov
nop
add
jno
cli
int3
ficomps
loopne
loope
xchg
sbb
and
sub
pop
xor
enter
fwait
das
jbe
dec
fsubr
sahf
mov
mov
push
test
jmp
and
dec
xor
inc
out
mov
jg
sti
add
in
inc
cld
mov
mov
aad
jmp
adc
in
mov
call
add
loop
cmpsb
es
aam
mov
jg
movsb
push
andl
clc
xchg
icebp
outsb
jp
stc
and
out
cli
pop
mov
mov
jmp
push
mov
jmp
and
bound
dec
cld
sbb
es
jo
loopne
xchg
ss
ds
incl
nop
insl
loope
fbstp
movsl
lcall
or
lock
aaa
add
in
push
stc
fdivs
xchg
jle
jg
add
add
pop
enter
xlat
std
dec
cld
pop
mov
out
arpl
int
cmp
call
inc
push
jns
xchg
and
sbb
xor
jnp
or
and
dec
iret
cmp
addr16
mov
push
sub
notl
je
cmp
add
daa
xchg
lahf
adc
lret
fsubr
cmp
daa
jg
decl
roll
mov
sbb
sbbl
fistps
push
push
ret
es
rorb
push
sub
ljmp
cmpb
xchg
enter
movq
stos
push
ds
iret
mov
mov
dec
flds
push
mov
clc
call
jbe
andl
push
lcall
push
call
pop
lock
mov
dec
cmp
and
rolb
enter
cmpsl
fsubl
mov
cltd
test
jno
mov
or
icebp
divl
aam
push
push
fidivrs
inc
mov
clc
inc
mov
loopne
push
into
mov
out
jmp
pop
jns
pop
cmp
test
outsl
movsl
mov
repnz
xchg
pop
out
daa
pop
xchg
dec
imul
jge
mov
xchg
sub
cmp
daa
test
int
in
pushl
int
fs
cwtl
stos
push
shl
push
jle
sbb
std
cmp
jmp
jg
cmp
loopne
nop
daa
cmp
xchg
lds
jl
addb
pushf
add
mov
or
fsubrl
push
int3
lea
jno
mov
and
push
loope
jg
push
xor
repnz
dec
repnz
adc
adc
pop
hlt
fiadds
incl
imul
xchg
inc
test
or
divb
pop
and
push
rcll
insl
fcomip
mov
pop
jle
bnd
inc
aad
xchg
filds
push
pop
inc
movsl
dec
jb
call
or
in
jbe
adc
das
mov
scas
jmp
mov
imul
or
sbb
push
mov
jae
push
gs
std
cmp
inc
dec
and
jnp
jg
mov
cltd
xchg
aam
and
lock
les
or
jmp
dec
fucomip
cld
mov
push
mov
call
pop
leave
cmp
js
jo
sahf
scas
cmp
out
pop
cmp
push
xchg
sub
mov
hlt
push
xor
les
cmp
pop
cltd
sbb
pop
dec
push
sbb
fdivr
fcoms
or
hlt
pop
xchg
sbb
je
enter
cmc
test
sti
das
push
inc
pop
aam
xchg
das
cli
decl
add
ss
mov
mov
int3
testl
jle
scas
inc
dec
dec
aaa
cld
push
cmp
jp
or
cmp
or
out
lock
jg
push
cmp
xor
xor
mov
mov
ret
sbb
movsb
push
xchg
jg
hlt
ror
scas
mov
rcrl
xor
int
and
xor
outsl
cmp
pop
and
sbb
and
mov
orl
in
out
mov
fiadds
jnp
push
mov
stos
inc
xchg
sbb
out
repz
icebp
sarb
mov
lcall
dec
outsl
xchg
lods
sub
call
inc
or
data16
pushl
xor
rcrb
out
cmp
incb
add
push
sahf
mov
pushf
add
fistl
fldt
roll
xor
mov
lcall
out
imul
jmp
xor
sbb
icebp
decl
incb
sbb
dec
cs
mov
jmp
inc
cmp
jno
push
ljmp
xchg
pushf
ss
fmuls
mov
mov
jp
loop
jmp
add
jp
test
cmp
jbe
jo
adc
cld
push
addr16
mov
rcll
jg
mov
mov
sub
movsl
adc
mov
out
and
inc
jno
jae
lcall
lock
lock
sub
shr
hlt
aad
jmp
pop
jge
or
ds
sti
inc
sub
call
adc
add
xchg
ljmp
mov
adc
leave
shr
andl
mov
adc
cmp
xchg
mov
cmpsl
je
dec
cld
scas
add
ja
icebp
cmpsb
lock
dec
inc
test
cltd
ret
in
jae
call
dec
in
xchg
fisubrs
fwait
mov
pop
dec
sysret
xchg
call
jnp
ljmp
shr
adc
cmp
push
out
or
cmpsl
clc
lea
lock
call
jecxz
fs
mov
mov
add
hlt
js
in
lcall
jo
roll
add
insb
mov
xor
jecxz
movsb
incl
dec
test
cmp
adc
mov
shll
in
dec
call
push
cli
or
adc
dec
adc
xor
lret
test
mov
les
in
pop
jl
incb
aaa
mov
push
movsb
dec
fwait
add
xchg
mov
mov
pop
push
lret
fldl
and
sar
jg
decl
cmp
adc
mov
les
ss
sub
add
xor
dec
iret
enter
fidivl
mov
cmp
inc
addr16
jb
in
adc
add
imul
push
cmp
insb
cmc
jge
stos
jbe
out
sub
idivl
cld
mov
inc
mov
incl
dec
jo
out
inc
cmpsl
cmovle
ljmp
clc
stos
repz
adc
and
fildll
outsb
jne
jbe
or
xchg
mov
enter
xor
decl
jno
jp
movsb
sahf
je
push
test
or
shlb
outsb
dec
xchg
insb
jle
ljmp
lcall
cmp
aas
push
mov
movb
icebp
pop
popa
mov
stos
dec
ja
cwtl
xor
pushl
loope
mov
or
pop
mov
dec
jge
mov
mov
popa
iret
int3
cltd
sub
ja
mov
dec
jne
push
loop
faddl
pop
mov
xor
jge
jb
mov
push
scas
cmp
idivl
lods
or
dec
jg
xchg
imull
imulb
pop
pop
orb
mov
ret
cmp
fldl
xor
cmp
mov
adc
xchg
les
xchg
in
sbb
mov
xchg
adc
lcall
call
sub
in
loope
lret
and
mov
xor
sbb
inc
jl
hlt
clc
and
clc
std
dec
mov
and
test
mov
test
decl
and
shr
and
out
sti
in
sahf
dec
sti
jmp
xor
jl
mov
out
pop
divb
push
std
sti
nop
jecxz
fwait
hlt
jne
sbb
call
sub
cli
mov
jecxz
push
xor
ja
sub
data16
fsubrs
jmp
call
add
mov
dec
jmp
inc
aam
jle
lds
push
test
add
nop
icebp
jg
test
out
mov
push
and
ficoms
mov
icebp
scas
add
out
ss
mov
xor
dec
dec
mov
xchg
xchg
das
sub
mov
jg
stc
mulb
daa
xor
leave
mov
and
or
aas
adc
dec
pop
mov
scas
add
fisubl
mov
test
sub
xor
lret
incl
fwait
scas
scas
dec
jnp
ret
add
js
add
or
push
in
pop
bound
mov
dec
fisttpl
lcall
adc
dec
in
or
sub
sbb
xlat
pop
mov
outsl
incl
mov
in
dec
mov
and
xchg
rcl
or
jecxz
aaa
dec
lret
aaa
std
lcall
cs
pop
xchg
dec
mov
shr
aaa
push
inc
dec
insl
dec
adc
fcompp
push
loopne
decl
shrl
out
xor
add
test
add
pop
mov
loopne
mov
mov
jg
or
in
scas
cmp
dec
mov
es
loope
in
in
push
pop
lret
mul
ljmp
incl
sbb
loop
shrl
add
fsubr
jmp
mov
cld
adc
adcb
call
pop
push
mov
idiv
xor
imul
mov
nop
lods
repnz
sbb
out
add
cmp
out
pop
mov
call
dec
or
dec
add
das
ret
adc
and
jle
xlat
xchg
decl
lds
repz
leave
and
add
cmpsl
lcall
imul
incl
pop
je
ret
fists
mov
inc
pusha
jb
mov
jmp
les
dec
lahf
das
hlt
movsl
xchg
js
mov
lahf
aas
sahf
cld
mov
jg
and
cs
pop
pop
xor
leave
jo
mov
ret
dec
call
jno
ljmp
jae
dec
out
mov
in
pop
mov
add
flds
pop
in
add
pop
dec
mov
jmp
push
mov
xchg
or
xchg
clc
fdivrl
in
dec
cld
daa
pusha
inc
sbb
pop
cmpsb
sbb
and
insl
repz
incl
bound
movsl
push
ljmp
dec
cmpsb
adcb
jns,pn
imul
dec
shlb
pop
ficoml
je
pop
cmpsb
ds
mov
jg
aam
imul
test
dec
dec
adc
mov
lret
lods
int
jp
lcall
leave
mov
dec
subb
jno
push
cld
dec
add
jns
loope
fisttpll
sbb
dec
inc
js
insl
or
cmp
dec
lock
jno
sbb
out
fistpll
lcall
dec
pop
sub
jmp
outsb
rorb
push
bnd
sub
cmc
loopne
inc
das
imul
add
cmpl
push
push
fcmovnu
push
lret
add
je
xorl
jmp
dec
sub
push
mov
inc
lock
cmp
sbb
aam
mov
lods
inc
add
dec
arpl
dec
repnz
sub
stos
push
adcb
push
mov
mov
loope
cmp
cmpsb
clc
inc
pop
inc
pop
arpl
jae
dec
jle
or
sub
aaa
std
ljmp
pusha
jecxz
adc
sbb
lcall
fisttpll
dec
sbb
cmp
jb
xor
cmp
adc
in
shl
shll
cmp
stc
dec
sub
ret
jecxz
push
mov
ljmp
scas
xchg
cmpsb
push
mov
ss
out
loopne
aaa
mov
jg
jmp
or
daa
xor
mov
cmp
push
decl
fisttps
inc
and
mov
xor
out
inc
in
fadd
mov
dec
lds
inc
ss
lcall
sub
jmp
dec
push
dec
inc
push
xchg
mov
or
or
inc
or
sub
ljmp
jb
inc
or
push
call
jnp
mov
sub
adc
outsl
cld
and
lcall
testb
aaa
mov
std
inc
outsl
mov
inc
lahf
mov
icebp
xor
std
cmp
pushf
xlat
lcall
jmp
fcomip
repz
std
std
pop
int
int3
sbb
cmp
push
sub
xor
lods
cmp
mov
xchg
es
leave
loope
pusha
and
test
incl
pop
addr16
hlt
push
ret
mov
cmp
sub
add
inc
negb
jg
xchg
jge
jp
mov
mov
cltd
xor
or
adc
lea
adc
movsl
push
mov
mov
ljmp
sahf
data16
call
xchg
decl
andb
sarl
add
int3
aaa
cli
sbb
mov
std
into
cmp
pop
jb
daa
outsb
or
xlat
cmc
mov
inc
push
dec
out
loop
jp
and
push
fidivl
cmc
or
lock
adc
aam
cli
lea
jb
call
push
xchg
and
cmp
add
mov
jb
pushl
out
xor
sbb
inc
out
leave
jbe
pop
in
fstpl
jl
push
rcrb
mov
dec
pop
dec
mov
notb
dec
mov
int3
jns
mov
dec
fidivrl
jmp
int
sahf
sbb
adc
pop
fisubrs
ret
mov
jmp
sti
call
cmpsb
fincstp
mov
psllw
sbb
cmp
xchg
decl
das
fwait
inc
sahf
pushf
out
andb
sub
ficompl
dec
xchg
pusha
inc
mov
popf
xchg
push
cld
pushl
dec
add
aad
pop
pop
sub
and
jle
repnz
imul
jge
xchg
jg
test
in
cltd
pop
and
mov
jg
test
push
sub
add
out
or
add
jg
mov
and
aas
cwtl
jne
xlat
outsb
movsb
enter
cmc
pop
xchg
mov
xor
push
out
sbb
cmc
neg
xlat
mov
cmc
jge
es
gs
mov
stos
cmp
std
pop
add
popf
pop
add
repnz
fdivr
ljmp
por
cmp
xchg
ret
pop
mov
lock
sbb
push
dec
fimuls
adc
mov
fwait
out
pop
sti
xor
pop
int3
enter
sbb
lret
fcompl
jnp
adc
outsl
out
push
fnstenv
cmpsb
mov
mov
jg
pusha
xchg
cli
pushf
cld
sahf
xchg
movsb
scas
fcoml
std
ret
cmp
loope
push
incl
fiadds
cmp
aas
in
mov
mov
xchg
lock
mov
jnp
fisubs
cmp
mov
cmp
add
repnz
add
aad
and
loopne
neg
mov
jo
inc
pop
sbb
push
js
fcoml
add
pop
push
and
or
pop
addl
pop
ja
gs
mov
scas
scas
js
fbstp
mov
setge
mov
adc
and
or
out
fdivl
rorb
and
mov
jmp
testl
int
xor
or
enter
dec
out
mov
pop
shr
jnp
inc
adcl
out
dec
jg
sub
jnp
sti
jbe
cmp
out
cmp
sbbl
jg
ljmp
imull
mov
xorl
sbb
fsubr
scas
fwait
add
out
test
outsl
clc
or
aaa
pop
imul
push
mov
out
stos
push
inc
xor
test
and
aam
jle
push
cli
pop
push
mov
cmp
jnp
jecxz
or
pop
cli
push
cmp
pop
mov
add
push
test
jl
fnsave
sbb
es
jg
std
enter
out
mov
icebp
inc
out
push
sub
inc
mov
sbb
test
add
push
push
mov
in
or
cmpsl
push
enter
mov
cmp
or
out
cmpsb
sar
ljmp
idivb
jb
out
ljmp
adc
stc
call
lcall
adc
pop
sbb
jnp
adc
ss
fmul
ljmp
xor
push
xchg
sbb
fcompl
cs
fldt
sbb
sti
testl
cmp
cmp
dec
pop
daa
add
push
and
out
daa
pop
mull
fcmovnu
fld1
cmpsb
lds
test
fnstenv
loop
inc
or
rcl
fldt
xchg
lock
or
push
fnstenv
aad
rolb
in
scas
add
call
mov
cmpsb
pop
jae
mov
inc
call
ficoms
outsl
and
sahf
xchg
pushf
mov
js
inc
gs
nop
cmpsb
popl
jmp
push
inc
jge
enter
push
mov
dec
sub
stc
leave
hlt
pop
sahf
jecxz
aaa
mov
cmp
insb
das
fstl
ss
mov
mov
add
fbld
or
aas
mov
incl
xor
stos
popa
and
repnz
inc
pop
test
aas
cmpb
push
notl
dec
pop
cli
iret
adc
push
inc
cmpsl
call
mov
jns
xor
insl
outsl
pop
xor
rol
je
add
inc
aaa
loopne
xor
std
addb
aas
test
dec
dec
test
pop
clc
inc
lret
hlt
inc
fcomp
repz
pop
in
inc
mov
push
inc
mov
fstl
decl
dec
push
pcmpeqd
movb
sbb
jne
out
push
adc
pop
jne
sub
adc
sbb
inc
addr16
ss
cmp
ret
cmp
adc
sub
push
adc
adc
outsb
adc
cmp
seta
mov
scas
mov
pushl
mov
sahf
adc
inc
mov
ret
loope
adc
mov
xor
in
or
push
dec
into
arpl
call
push
leave
les
fsubrs
xor
and
sub
push
dec
inc
jg
mov
popf
cmc
adc
xchg
sbbl
loop
mov
pushf
into
or
jne
pushf
push
js
jmp
imul
gs
lcall
inc
pop
mov
aaa
adc
jo
sub
xchg
cld
jns
out
decl
cmp
inc
sbb
pop
xor
inc
push
jo
out
dec
movsl
fsubl
cmpsb
fdivrs
ja
repz
lcall
mov
sbb
sbb
mov
fmuls
inc
jne
or
xchg
add
jns
xchg
or
inc
loopne
insb
sbb
push
jge
movsl
pushl
xchg
xor
xchg
fidivrl
push
xchg
subl
xchg
cld
cmpsb
xlat
inc
aaa
pop
xor
idiv
cmp
fadds
rcll
adc
push
or
pop
cltd
fsubs
int3
add
jnp
sbb
inc
cmp
imul
pop
clc
leave
iret
mov
pushl
lcall
std
and
popl
push
or
fadds
inc
inc
js
or
decl
mov
arpl
or
les
inc
incl
inc
mov
loop
and
pop
push
adc
cmpsb
xor
filds
aaa
cs
sbb
stos
in
xchg
shlb
movsl
js
push
pusha
fwait
jecxz
ja
or
lcall
inc
or
xor
sahf
scas
insb
cld
xchg
inc
jecxz
inc
std
gs
inc
add
mov
mov
mov
push
incl
out
mov
mov
inc
mov
jo
outsl
fwait
inc
cmp
shrb
jg
scas
cmp
lods
sbb
clc
lods
fucomip
xlat
outsb
pop
adc
xlat
out
das
outsl
xor
ljmp
mov
and
aaa
cmpsl
xchg
loope
out
nop
cmc
xor
ficomps
mov
pushl
sub
das
popa
je
sub
xchg
mov
clc
xchg
fwait
mov
mov
xor
call
cmpsl
sbb
jmp
push
aad
test
mov
rcll
loopne
lcall
sub
gs
mov
inc
inc
fadd
and
and
fcomip
jp
mov
add
sub
ss
scas
jnp
dec
icebp
incl
mov
loopne
push
movl
pop
fcomps
sub
push
fildll
inc
popa
and
aaa
xchg
fwait
comiss
fucomi
xchg
xor
lahf
xchg
adc
xor
inc
jmp
push
and
jb
mov
sbb
jg
xchg
cmp
ret
or
mov
sbb
sbb
ljmp
dec
aaa
dec
adc
xor
jnp
lret
mov
jg
inc
scas
lcall
scas
repnz
into
ret
cmp
inc
daa
movsb
mov
test
sbb
cld
lods
bound
lods
sub
in
je
lahf
sub
mov
inc
and
daa
pmulhw
inc
repz
mov
mov
call
lods
inc
fisttps
pushf
test
int
xchg
cmpsb
push
jae
push
repnz
aas
dec
loop
xlat
mov
inc
test
and
dec
ja
or
cld
cmp
cld
ljmp
dec
std
jns
or
pop
hlt
xor
xlat
or
and
add
bound
sub
out
sub
jbe
sub
or
push
pop
insb
xchg
mov
loopne
ljmp
divb
addb
loope
test
inc
pusha
hlt
hlt
sahf
ret
add
stos
jg
xor
xor
adc
in
mov
inc
aas
cmp
aam
test
daa
xor
sarl
call
xchg
sahf
inc
xchg
fucomip
out
loope
sub
inc
das
jge
adc
jmp
cmp
nop
inc
mov
sub
shrb
adc
bound
mov
inc
dec
std
cmp
mov
jmp
sete
pop
and
loopne
int
inc
mov
jg
mov
shlb
cmp
enter
rcll
xchg
lret
lahf
repnz
in
sahf
push
imul
lret
loope
leave
push
xchg
mov
fisubl
decl
xchg
test
orl
and
cmp
scas
inc
test
mov
jae
jecxz
mov
xchg
cld
ss
lcall
inc
gs
stc
lods
sti
outsl
mov
push
hlt
xor
lods
stc
push
popf
jecxz
jmp
ljmp
mov
mov
sahf
xchg
mov
mov
mov
dec
mov
push
and
push
push
outsl
pop
and
jp
cwtl
cmp
fwait
ljmp
and
outsl
sub
xchg
fisttps
xor
jp
mov
incl
add
rcll
jg
mov
decb
xchg
adc
dec
notl
decl
inc
xchg
shrl
xchg
mov
inc
inc
stos
pop
push
mov
mov
sub
pop
incl
jmp
push
xchg
mov
and
adcb
bnd
dec
ja
roll
adc
lcall
stos
loopne
inc
or
leave
adc
or
inc
lock
pop
lock
outsl
popf
dec
jg
add
pop
pushf
sub
roll
mov
cli
pop
mov
jmp
test
mov
inc
push
jne
popf
pop
push
add
mov
or
jnp
mov
inc
mov
jmp
jecxz
mov
jp
sahf
dec
mov
ljmp
out
outsl
incl
hlt
jae
js
add
mov
ret
es
arpl
stos
lret
ljmp
mov
incl
cltd
out
xchg
add
or
mov
jle
jb
pusha
ds
js
incl
les
call
out
cs
mov
jg
gs
hlt
dec
cmp
pushl
dec
cmpsb
insb
call
sub
cltd
or
mov
cwtl
iret
inc
imul
call
cli
mov
sbb
adc
pusha
cmpsl
pop
mov
stos
call
into
and
movnti
jns
sub
dec
xchg
or
xchg
jno
dec
out
or
sub
lcall
or
incl
out
add
fcompp
lds
push
lea
jl
cld
ljmp
add
lea
rorb
fwait
pop
jmp
mov
cld
add
idiv
sahf
cwtl
jnp
inc
lahf
push
jle
inc
cmp
test
sahf
lret
adc
mov
nop
mov
call
sub
out
sbb
pushf
or
fwait
mov
sbb
in
mov
pop
arpl
jmp
fidivs
and
ljmp
cli
hlt
ss
xchg
inc
insl
loop
sbb
cli
ja
jae
add
sbb
jg
or
cwtl
sub
mov
pushl
fcoml
inc
ficompl
add
sbb
int3
iret
int3
or
int3
jmp
or
or
mov
push
or
test
or
mov
pushl
or
ret
shll
nop
iret
test
or
mov
sbb
ss
or
cwtl
testl
sub
std
or
scas
cli
pushl
push
shlb
and
xchg
add
or
sti
lcall
fcompl
or
enter
push
ljmp
ret
or
js
mov
ljmp
xchg
outsb
or
adc
add
xchg
hlt
or
dec
out
cmp
or
jg
call
pop
out
or
add
enter
adc
dec
fdivl
idiv
decl
decb
cmp
repz
jb
or
repnz
mov
pop
out
lcall
lcall
lcall
mov
or
es
mov
cmpsb
jg
inc
mov
or
lds
or
mov
movb
in
inc
sbbl
jp
push
fprem1
mov
dec
incl
je
stc
mov
adc
int
mov
into
or
pop
rorl
call
pop
dec
xor
pop
hlt
xor
gs
cwtl
pop
pop
cld
mov
pop
mov
aaa
jae
cli
xor
mov
stos
sar
cmp
mov
or
mov
call
mov
sub
in
add
or
jg
incl
fmull
adc
or
push
lock
sbb
aaa
mov
xchg
mov
sbb
or
jns
or
movsb
insl
push
or
cmp
jbe
mov
or
enter
add
add
aam
ds
leave
or
pop
or
pop
out
jp
lcall
or
insl
loope
lret
ja
push
scas
and
xorb
fistpl
push
ds
push
imul
push
js
das
push
outsb
mov
mov
mov
in
pushl
test
or
sahf
std
mov
rorl
mov
jg
and
push
push
stc
or
imul
mov
or
popf
cmp
daa
aas
outsl
shll
inc
cmpsl
test
popa
mul
call
jmp
lahf
repz
mov
cld
cmpsb
sub
sahf
rol
lods
xor
dec
imul
mov
rcrb
mov
adc
les
or
push
lahf
mov
lahf
sub
sbb
addr16
push
push
scas
fisubrl
lret
icebp
and
stos
xchg
andb
push
pop
lahf
insl
push
dec
xor
xchg
ljmp
cltd
mov
fwait
imull
xor
out
jp
rol
xchg
jg
sbb
or
cmc
dec
adc
sub
cmpsl
jb
ret
lcall
jmp
les
insl
mov
cmc
fistl
das
cmp
cmp
das
sbb
adc
lcall
and
xchg
sbb
xchg
or
bnd
sub
insl
sbb
cmpsb
xlat
cmpsl
xchg
les
lea
mov
jbe
cmpsb
jmp
or
add
and
xchg
sahf
and
mov
dec
pop
and
loopne
and
ljmp
pop
mov
sub
cmpsb
pop
test
jns
rcr
pcmpgtb
out
in
es
call
and
sbb
mov
xor
mov
or
fwait
out
sub
scas
jmp
jns
in
mov
icebp
push
xor
mov
mov
mov
dec
jg
jns
xor
mov
xchg
pushf
es
rclb
pushl
inc
pusha
int3
ficomps
testb
inc
fisttps
inc
in
aad
jbe
xchg
popa
outsb
ljmp
cmc
ljmp
push
inc
sub
data16
xor
mov
aas
mov
mov
stos
inc
pop
jns
sbb
insb
mov
sub
sub
pushl
aam
ret
mov
nop
ss
inc
xor
sub
xorb
adc
insb
int3
ljmp
inc
push
jne
lahf
ljmp
xchg
int3
ljmp
clc
or
pushf
aas
push
mov
lret
pop
insb
push
xchg
shr
xchg
and
ljmp
int3
dec
les
ret
popf
out
cmp
sbb
aad
xor
test
mov
jp
inc
sarl
xchg
adc
test
xor
in
cmp
cmp
cmp
xadd
add
ret
push
sahf
dec
or
mov
push
xor
loope
mov
lods
mov
into
inc
leave
pusha
pop
xor
mov
fbstp
in
adc
aaa
mov
les
mov
inc
adc
xor
ljmp
cli
mov
xor
mov
test
cmp
xlat
pop
mov
popf
test
incl
cwtl
ss
dec
xchg
mov
dec
in
lahf
xor
add
push
inc
aas
ret
daa
fstps
fcomip
testl
push
cmpsb
gs
push
xchg
xchg
outsl
decb
xchg
js
xlat
incl
push
pop
rdtsc
xchg
pushf
jnp
aaa
lods
xchg
lods
pop
xorb
xchg
ds
inc
xor
clc
mov
in
stc
and
and
es
addr16
movsl
push
out
jnp
xor
push
jp
mov
jg
xor
stos
into
xchg
mov
sbb
or
ljmp
insl
outsb
dec
cwtl
repz
dec
fiaddl
sbb
xor
sahf
leave
inc
incl
bound
mov
xor
ljmp
nop
cwtl
dec
pop
fwait
cmpsl
aad
aas
dec
loope
xchg
cmpsl
dec
call
mov
push
lods
adc
jo
or
pop
mov
popf
imul
mov
jbe
fcompl
cmpsl
fucomp
lods
xlat
aas
in
adc
jmp
data16
popf
jb
sahf
dec
js
cmp
sbb
out
jnp
popf
out
xor
idiv
call
sbb
jbe
insb
addr16
sub
mov
dec
movsl
inc
lds
out
or
inc
dec
mov
inc
xor
and
mov
inc
test
shll
or
mov
and
pop
push
mov
mov
sbb
inc
out
cmc
aas
icebp
dec
fildll
pop
mov
sub
cmp
mov
add
dec
divl
lds
or
call
pushf
mov
push
cmpsl
mov
iret
pusha
fadds
xchg
mov
fldcw
sub
add
outsb
pop
dec
mov
adc
mov
lret
or
sub
decl
sub
lret
push
sar
dec
fbld
sbb
push
and
lahf
into
pop
cmpsl
aas
lds
jmp
es
popa
femms
jl
xchg
sbb
sbb
movups
pop
mov
call
das
xor
push
lock
sub
pop
push
lods
idivb
repz
scas
rolb
rolb
xchg
xor
or
push
push
mov
jg
ficoml
sbb
cltd
dec
or
sbb
xabort
sbb
data16
mov
fiadds
push
pop
shlb
fdivl
sub
inc
out
ljmp
fucomp
ss
xor
lret
fcmovne
lock
test
call
jp
fcoms
cmp
pop
lahf
jmp
xor
incl
xor
sbb
clc
push
or
push
inc
sbb
loopne
dec
mov
jg
mov
inc
xor
xchg
lahf
jo
xchg
sub
sub
mov
movsb
xchg
cmpsb
lods
aas
fisubrs
lret
jg
adc
jmp
inc
scas
lock
nop
mov
or
lods
dec
push
cwtl
or
xchg
dec
fcompl
push
lea
lds
cmp
mov
pop
cmp
xchg
or
ja
xor
or
ljmp
sub
ja
movsb
out
icebp
imul
test
rolb
movsb
ds
mov
fildll
jmp
imul
jno
add
cld
lret
dec
mov
dec
mov
mov
aas
mov
mov
pop
jmp
jg
dec
cmpl
sar
add
or
push
je,pn
ret
mov
mov
jnp
incl
cld
jle
cmpsb
mov
or
test
xchg
test
xor
ret
arpl
cmp
jmp
fiaddl
push
inc
mov
sub
inc
sub
outsb
mov
lret
push
inc
mov
in
inc
pop
gs
jge,pt
sti
addr16
sub
and
xchg
dec
xor
test
movsl
lods
adc
and
mov
mov
sub
fistpll
aam
popf
addr16
mov
aaa
jl
pop
add
in
idiv
loope
xchg
test
incl
hlt
ds
ret
xor
movsb
cmpsb
sti
sarb
sub
sbb
sar
lcall
outsl
cmp
push
fisubrs
and
insb
inc
cwtl
sub
xchg
pop
repnz
push
aaa
enter
incl
inc
adc
outsl
or
and
adc
xor
nop
pop
push
sbb
xor
test
nop
andb
shrl
push
xor
or
sbb
fwait
ficompl
cmp
push
fs
popf
inc
mov
xchg
nop
push
loop
movsl
mov
fcoms
std
call
sti
mov
daa
xrelease
mov
xchg
sti
clc
push
cli
dec
aas
mov
cmp
ljmp
pop
enter
xor
xchg
iret
add
and
mov
pushl
movsb
pop
add
es
mov
or
mov
std
aas
cmp
decl
fdivs
lods
mov
sub
leave
push
sbb
imul
push
push
in
pushl
gs
push
jno
cli
xchg
inc
mov
inc
fbld
add
pop
adcl
lcall
push
sub
mov
dec
dec
bound
push
imul
jmp
xchg
jb
mov
add
pop
jns
out
insl
adc
add
gs
adc
dec
addr16
outsl
cld
push
sub
add
xorb
mov
loopne
jg
adcl
ljmp
fists
dec
mov
arpl
xor
orb
notb
xchg
dec
jle
imul
xchg
xlat
push
push
jle
inc
out
outsl
mov
adc
bound
out
bound
ds
or
aam
sahf
stc
mov
data16
mov
mov
xor
mov
lcall
jae
sub
jae
stos
sbb
mov
incl
hlt
imul
mov
lds
mov
leave
jb
push
sbb
jle
push
incl
jp
xchg
ss
add
mov
add
call
mov
add
sbb
in
testl
push
roll
lcall
pop
gs
call
pop
mov
enter
ds
or
imul
lret
push
cmp
in
push
out
pop
xorb
jb
subl
mov
inc
push
lahf
dec
call
or
fs
lcall
repnz
adc
inc
andb
add
jl
stc
imul
mov
dec
repz
xor
ret
jo
mov
test
pop
cmp
repnz
adc
jmp
mov
or
mov
xor
push
cmp
mov
jb
sbb
loopne
cmc
mov
decl
pop
shll
xchg
movsb
scas
dec
jbe
fwait
cmp
mov
rolb
pop
sbb
xor
pushf
pop
pop
incl
sbb
aad
mov
test
pop
movsb
or
in
dec
insb
mov
jg
fwait
leave
xchg
lret
dec
xlat
outsb
idivl
ret
lods
adc
js
shlb
clc
mov
ljmp
inc
test
icebp
mov
add
adc
adc
in
test
xor
mull
mov
movsl
roll
loopne
sub
shrb
jecxz
pop
cmp
mov
clc
aas
fbstp
or
dec
lcall
call
ret
jecxz
xchg
push
xchg
xor
ss
adc
push
sub
pushf
in
cmp
in
jmp
dec
imul
adc
js
xchg
in
fisubs
xchg
faddl
mov
repnz
ja
push
mov
fs
fiaddl
push
sbb
aam
sub
xor
cmc
fwait
jg
sbb
orl
icebp
out
loope
sub
pop
repz
lcall
movsl
movsl
adc
ljmp
push
cli
mov
and
cmc
outsl
decl
or
iret
test
aas
rclb
inc
sub
fidivrs
test
das
cli
xchg
xchg
lcall
test
pop
xchg
je
mov
and
testl
aam
clc
pop
icebp
push
adc
cmp
rcr
clc
add
xlat
sub
ja
lcall
test
jb
dec
inc
jb
cmp
add
test
mov
sti
dec
mov
out
popa
cs
shl
aas
jne
cmp
mov
aam
cmp
jle
scas
add
data16
cmpsb
xor
call
sarb
xchg
dec
jnp
cli
mov
mov
adc
add
mov
jmp
dec
sub
stc
jno
add
push
cmp
iret
mov
xchg
insb
scas
push
mov
fcmovb
out
aas
inc
test
cli
es
dec
cwtl
mov
mov
in
cmp
outsb
add
addr16
cltd
ficoml
mov
mov
cmp
mov
dec
cmpl
inc
rorb
lods
xchg
cmp
mov
push
sub
nop
push
in
xor
cmp
dec
stc
push
jae
ds
jmp
loope
out
outsb
add
jno
leave
clc
push
mov
fistpll
adc
mov
jo
dec
gs
aad
push
outsl
repnz
lcall
fistps
outsl
loopne
pop
and
rcl
jne
pop
add
lods
jp
cs
cmp
incl
test
adc
outsl
mov
ds
bnd
aam
push
jg
decb
pop
inc
xchg
hlt
std
test
xlat
aaa
pop
sbb
jb
ljmp
sbb
sub
ds
mov
dec
and
inc
outsl
inc
ret
add
call
fnstsw
xchg
fs
pop
and
insb
outsb
jmp
movsl
push
clc
hlt
out
ljmp
mov
mov
inc
pop
cmp
xchg
mov
add
mov
xchg
inc
xor
incl
movhlps
fisubrl
push
xchg
lret
lahf
add
add
add
inc
cmp
mov
incl
add
mov
sub
jnp
mov
adc
outsl
test
xchg
adc
fistl
xor
inc
test
jl
lea
dec
sub
call
pop
xor
jns
inc
mov
insb
adc
jmp
cmc
and
mov
xor
das
mov
loope
testb
fyl2xp1
lods
lods
xchg
mov
and
stos
scas
mov
jae
cmp
push
sti
cmp
cwtl
repz
xchg
in
mov
sub
mov
pop
cmp
inc
dec
shrb
pushl
dec
ret
sbb
lahf
sub
data16
sub
inc
push
enter
inc
imul
mov
movsl
mov
dec
setne
xchg
cmp
nop
out
std
pop
sbb
xchg
push
movsl
cmpsb
fcomip
mov
repz
scas
mov
lods
add
sub
out
dec
js
out
cmp
sbb
xor
decl
lock
lret
sahf
pop
leave
cmp
pusha
mov
lods
or
daa
sub
or
xchg
jmp
mov
mov
xchg
mov
cltd
test
mov
sbb
pop
les
jg
aad
cmp
js
dec
dec
into
sahf
xchg
stos
pusha
rorl
adc
cmpsl
lcall
in
xchg
call
push
stc
xchg
sub
jmp
cmp
aam
jmp
gs
or
ds
add
arpl
and
inc
jle
cli
jmp
mov
and
add
xchg
inc
and
add
lcall
xchg
int3
mov
sbb
xchg
je
in
loope
xor
repz
arpl
shlb
orl
cmp
mov
mov
je
sahf
jmp
push
pushl
test
fmull
loope
dec
pushf
push
negb
mov
movsl
in
xchg
inc
and
fildl
jge
aam
xor
testl
sbb
test
jg
ljmp
adc
cs
and
jbe
push
xor
lcall
jge
inc
xchg
out
cmpsl
dec
dec
cmp
ljmp
daa
mov
jo
mov
and
dec
pop
pop
mov
or
shrl
int3
incl
ficoml
in
subb
lea
xchg
in
lock
dec
das
mov
push
sarl
inc
aaa
aaa
aad
sbb
pop
dec
cmp
dec
scas
xchg
cld
xchg
adcb
pop
or
jg
call
adc
loopne,pt
push
add
dec
outsl
and
push
roll
mov
adc
mov
cmp
mov
cli
jg
adc
or
or
sub
dec
aaa
jo
fwait
push
push
push
inc
cmpsl
call
cld
jge
adc
push
lret
leave
fadd
sbb
sub
push
mov
and
and
xorl
dec
movsb
rolb
push
push
pop
ds
jg
adc
push
in
xchg
stc
es
add
mov
xchg
stc
shlb
fwait
and
rcll
in
cmpsl
fcomp
xchg
insb
xchg
fstpl
aaa
fcmovbe
in
cmp
dec
movb
stos
sbb
push
loope
add
sbb
xor
pop
cmpsl
sub
lcall
sub
popl
lods
jne
daa
cmc
jns
hlt
mov
pop
inc
daa
and
aaa
cld
call
mov
es
ds
and
cmp
cmp
incb
xchg
mov
dec
cmp
clc
mov
fcmovnb
lds
push
add
outsb
test
jmp
or
aaa
fwait
dec
push
stos
inc
dec
add
xor
inc
out
daa
pop
fwait
xchg
push
add
ljmp
inc
outsb
jne
or
dec
push
stos
adc
mov
add
decl
sub
cs
movsb
psadbw
mov
incl
sbb
pop
cwtl
cmp
sti
in
sub
fwait
icebp
cli
push
subl
enter
xchg
mov
push
xlat
xchg
pop
pop
ffree
dec
sub
pop
xchg
out
or
pop
in
or
in
xchg
aam
nop
dec
int
sahf
repnz
pushl
or
into
sub
data16
aaa
out
jecxz
xor
mov
xchg
fmull
xchg
inc
adc
pushl
dec
leave
mov
cmp
lea
mov
das
lcall
insb
pop
scas
shrb
and
ljmp
stos
int3
aaa
das
mov
ret
mov
test
and
xor
shrb
mov
fcmovu
xor
jl
xchg
sub
int3
xchg
in
insl
popa
sbb
or
lcall
lcall
inc
inc
mov
test
adcb
add
inc
in
sub
fmull
cmp
push
xchg
sub
cwtl
ljmp
aad
scas
cli
decl
sub
sub
cvtdq2ps
inc
ror
je
cmc
adc
lcall
cltd
mov
mov
sub
dec
cmp
dec
pop
mov
inc
popa
aad
cltd
and
daa
mov
xchg
test
jg
ds
dec
not
xchg
jbe
push
or
jge
sub
xorb
mov
cli
call
cmp
fcmovb
mov
shrl
ds
call
das
mov
call
jmp
cli
fwait
sti
dec
inc
sub
and
sub
pop
ret
or
es
sub
jno
rcr
xchg
sub
popa
in
xor
xorl
jb
decl
xchg
xor
xlat
mov
mov
push
loopne
cld
call
addb
or
sub
movups
insl
clc
das
in
mov
test
cmp
push
cmc
xor
cmc
mov
in
cli
aaa
cmp
iret
rcrl
pushl
pop
cs
xchg
fiadds
mov
scas
pop
lahf
push
testb
rcl
loope
xor
loope
cmp
sub
in
out
pop
inc
js
jb
js,pn
outsl
shlb
out
xor
ljmp
popf
pop
es
imul
pop
xchg
rcl
sbb
loope
jl
test
call
movl
std
aaa
adcl
dec
in
pop
xor
mov
pushf
mov
call
stc
dec
ss
jle
lret
pop
hlt
jle
xchg
jbe
fdivp
pusha
cmp
outsl
cmp
mov
mov
xchg
mov
mov
call
aaa
cmp
nop
daa
movsb
in
sub
mov
sahf
add
mov
aaa
xor
xchg
mov
push
std
mov
cmpsb
and
cli
mov
ljmp
mov
insl
add
in
and
lods
std
xchg
iret
loop
add
mov
mov
pushl
lods
mov
loop
les
push
jb
cmp
into
cmpsb
jg
popf
enter
xchg
sbb
inc
scas
mov
sbb
psubq
fisubrl
cmp
inc
xor
fbstp
in
cmpsb
mov
ljmp
sbb
std
sbb
xchg
ret
jecxz
test
xor
mov
stc
mov
xchg
out
adc
sub
add
xlat
lcall
jmp
adc
inc
sub
push
mov
sub
shl
decl
popf
xlat
sbb
mov
push
add
mov
add
xchg
inc
fwait
push
xor
pop
cld
xchg
xchg
add
cmp
call
jae
dec
cld
inc
arpl
sub
jo
dec
dec
dec
xor
jo
jg
or
xchg
shl
ret
cmp
push
clc
ret
fdivs
and
jmp
push
cmpsl
ss
cltd
aad
jbe
mov
orl
jmp
xor
mov
mov
push
push
outsl
mov
cmpsw
jmp
outsl
cltd
movsb
add
loope
out
adc
add
lcall
or
ret
jge
push
sub
pushl
ja
push
mov
lret
fistpl
pusha
adc
add
or
fmuls
cli
in
push
lea
sbbl
mov
xchg
or
pop
sbb
cmp
pushl
rcrb
call
sub
lds
bound
ret
scas
cli
or
xchg
cmp
cmp
lods
sub
mov
mov
pushf
aam
pop
push
aaa
xor
incl
mov
cld
sahf
cmp
cld
imul
mov
movsl
enter
jmp
jnp
mov
add
pop
aaa
int
jp
mov
cmp
shll
flds
xchg
dec
ljmp
jno
pop
mov
xor
mov
outsl
push
out
testb
xor
lcall
jecxz
inc
mov
jmp
mov
pop
incl
aad
lock
fsubl
or
mov
out
lcall
call
cmp
cmp
jns
jmp
adc
aas
pop
loopne
sub
test
decl
cmpsb
sti
pop
sbb
mov
inc
push
scas
mov
adc
movb
ss
hlt
and
xlat
fbld
je
stos
ss
scas
mov
push
les
jg
sbb
cs
xor
into
in
xchg
pop
lcall
andl
mov
and
jae
leavew
jb
stos
mov
inc
or
or
mov
mov
iret
dec
jg
test
adc
decl
sbb
dec
aaa
jnp
int3
fists
jb
pop
cld
mov
mov
mov
lret
in
js
scas
lcall
mov
xor
subl
jo
inc
sbbl
jg
dec
sahf
lahf
mov
das
repnz
mov
ja
repz
insl
adc
andnps
incl
arpl
adc
popa
mov
inc
sbb
sbb
pop
jo
test
xchg
adc
adc
call
mov
or
iret
rolb
xchg
mov
and
fs
ljmp
add
xor
cli
lea
outsb
sbb
lret
dec
mov
aaa
pop
loopne
xchg
mov
xchg
inc
popf
mov
jg
cmp
aad
push
jl
mov
incl
mov
imul
add
mov
sahf
sbb
or
mov
cmc
add
sub
sbb
xchg
or
aad
push
inc
rclb
mov
incl
out
mov
add
ja
ret
insb
jl
scas
dec
cmp
sbb
jo
dec
mov
and
jg
cmc
movsb
enter
sahf
insl
dec
sub
daa
sub
xor
or
imulb
ja
jmp
cmp
sbb
jae
aam
inc
add
cmp
mov
cmp
push
pop
jae
testb
dec
div
xchg
out
push
cmp
mov
popf
xor
lcall
mov
stos
fdivrl
xchg
xor
sti
and
fidivl
dec
mov
mov
ljmp
leave
popf
out
jecxz
xchg
xchg
pushf
cld
jg
popa
enter
aas
outsb
lock
into
decb
ljmp
and
ja
xor
mov
jge
cmp
mov
or
popa
xor
std
andb
daa
daa
mov
add
push
pop
push
cmp
dec
in
mov
mov
aas
jg
outsb
mov
xor
cmp
xor
paddd
cmp
call
mov
aas
sbb
lods
cltd
int
out
shlb
test
lahf
aam
je
out
jmp
daa
and
orb
jae
fnstenv
aaa
fisubrl
mov
aad
ss
push
mov
cmp
outsl
push
dec
popa
pop
push
adc
push
adc
dec
xchg
cwtl
cli
xchg
mov
jg
in
fisubl
aad
add
scas
sbbb
sub
rcr
incl
psubw
ss
dec
mov
lret
adc
mov
mov
pop
dec
loop
lods
into
add
sahf
test
jle
ljmp
pop
xor
push
sub
xor
jge
pop
inc
sub
inc
fldcw
repnz
scas
push
hlt
daa
repz
call
push
mov
fdivr
lcall
pop
push
dec
adc
cs
and
xchg
inc
mov
xchg
push
icebp
add
lcall
xchg
mov
xor
out
cmp
addr16
mov
jmp
xchg
decl
xor
shlb
xor
insb
cmpsb
data16
clc
pop
adc
cmc
pushl
imul
cmp
shrl
fcmovnbe
pop
mov
lea
jmp
cmp
dec
fstl
lcall
es
mov
xchg
das
in
sub
cmp
jmp
or
sub
sbb
xor
daa
cmc
sqrtps
xor
inc
fcoml
aas
iret
or
clc
sahf
imul
xor
aaa
cld
lcall
scas
aam
adc
cmpsl
add
xor
push
xchg
push
inc
ds
pushl
nop
lcall
fistpl
dec
hlt
dec
xchg
jmp
test
jmp
cmp
xchg
jne
rclb
scas
fcom
iret
xchg
flds
add
mov
aad
push
cmp
fcomip
lcall
sti
aam
test
incb
add
popf
jno
push
push
xor
jno
lcall
shr
sbb
jg
std
int
outsl
setae
pop
adc
dec
outsb
push
or
sub
xor
jmp
and
mov
ljmp
test
popa
pop
adc
test
std
scas
cld
sti
fcmovb
mov
ljmp
mov
mov
dec
xor
jecxz
sbb
in
xchg
sbb
in
fiadds
push
inc
xor
rcl
mov
cmp
inc
call
outsb
xchg
lcall
xlat
pop
jle
inc
into
test
mov
mov
je
push
add
inc
fiaddl
ljmp
sub
aas
or
push
negl
sub
mov
ss
ds
jns
outsl
or
and
mov
pop
cmp
xor
mov
mov
cmp
mov
dec
dec
iret
and
subb
xor
incl
push
inc
insl
dec
xor
out
jmp
mov
cmpsb
jnp
addl
lock
aaa
jl
adc
inc
pop
cs
sahf
mov
push
push
out
cld
lahf
lret
fsubrs
add
jl
mov
shrl
fimuls
add
or
sahf
inc
adc
pop
xor
mov
fcomip
xchg
addr16
xchg
xchg
and
xor
ret
test
push
jg
xor
xchg
movsb
imull
fwait
or
and
mov
sbb
dec
xlat
ljmp
clc
in
xor
aad
sub
stos
es
scas
jge
sti
idiv
lcall
add
les
fdivrl
sbb
cwtl
mov
jg
push
rcrl
mov
dec
pushf
fdivl
or
sub
push
dec
jbe
cmpsb
mov
in
cmp
dec
fldl
inc
xor
rolb
mov
repz
sbb
movsb
adc
fimull
idiv
das
cli
incl
and
imul
lock
lcall
push
cmp
mov
sbb
inc
mov
ljmp
or
ja
mov
ljmp
je
cmpsl
in
and
lods
mov
fwait
test
xchg
sub
dec
cmpsl
xchg
lahf
fwait
les
or
in
cld
pop
mov
test
das
pop
push
outsb
add
inc
sbb
cmp
movsb
popf
cmp
push
pushf
jl
xor
and
lcall
pop
inc
dec
sub
testl
stc
lods
ljmp
sub
scas
aad
fs
cmpsb
mov
mov
pusha
dec
mov
sbbb
jmp
or
pop
add
iret
dec
xor
pop
inc
mov
in
imul
sub
fs
ljmp
xchg
ja
add
mov
or
mov
mov
imul
push
cld
jae
sbb
ds
ljmp
notb
mov
jno
inc
pushl
cld
add
test
sbb
push
fnstsw
push
in
push
es
cli
mov
movsb
ret
mov
mov
add
or
and
ja
cld
pop
push
mov
lcall
loop
pushf
sub
and
iret
xlat
xchg
jae
ljmp
fldenv
xchg
fdivr
incl
xor
out
mov
mov
inc
insb
dec
and
xchg
xor
ljmp
push
daa
xor
out
pop
test
mov
mov
mov
clc
cmp
incl
add
outsb
sub
popa
xor
mov
dec
rorb
pushl
jns
jge
jmp
jae
adc
pop
in
pop
dec
rorb
cmpsb
lret
adc
mov
loopne
into
pop
in
aas
push
cmc
sub
inc
in
mov
mov
incl
sub
gs
stc
sahf
out
aaa
sub
sbb
push
in
pop
fcomip
push
out
lret
add
shrl
out
and
in
aam
inc
dec
leave
adc
mov
nop
xor
xchg
cmp
int
movsl
mov
mov
and
sbb
and
movsl
std
mov
and
cmpsl
pop
sbb
sub
decl
inc
mov
into
or
pop
pop
popf
mov
push
or
ljmp
les
xor
sahf
fs
sbb
std
decl
mov
clc
incl
adc
stos
sbb
jmp
clc
pop
cmc
sub
ret
sbb
cmp
sbb
or
into
push
pop
mov
push
jo
lahf
jg
dec
push
lock
sbbl
pushf
pop
in
loopne
ret
das
adc
stc
add
frstor
sbb
lcall
lock
sbb
pop
xchg
mov
cmp
leave
cs
lock
jg
pop
pop
lds
sbb
mov
add
mov
adc
add
sbb
jmp
iret
dec
ds
push
pop
dec
lods
xchg
popf
lods
add
add
pop
gs
mov
mov
sbb
jp
add
imul
sub
cmp
pop
mov
add
and
sahf
push
and
filds
xchg
pop
cmpsb
stos
sbb
sub
or
push
mov
testb
fsubrp
inc
or
inc
ror
loope
decl
inc
sahf
cld
push
xor
loopne
mov
out
or
push
fistps
in
sti
ljmp
shl
pop
cmp
and
jle
in
mov
in
adc
jg
cs
jge
pusha
loope
cltd
popf
je
int
call
or
in
jno
in
jg
popf
add
mov
pop
into
cmpsb
inc
popl
mov
sahf
movsb
sti
nop
or
cld
sub
out
das
sar
jl
pop
fdivrs
es
or
icebp
add
ss
call
cld
in
pop
jns
retw
xor
push
push
popa
ror
int3
dec
or
lcall
jge,pn
or
jbe
mov
sbb
pusha
outsl
test
popf
test
or
incb
subb
push
xor
mov
or
cmp
mov
sahf
lods
cmpb
inc
xchg
call
xor
inc
loope
xor
cmp
sbbl
paddq
pop
loopne
adcl
xchg
push
xor
fcoml
sub
sbb
popf
mov
inc
and
mov
test
adc
and
jns
sbb
std
inc
mov
sbb
jno
pop
inc
xchg
lahf
in
pop
sbb
fcompl
icebp
sar
pushl
lret
and
jle
jmp
ret
and
adc
je
je
push
mov
ljmp
mov
xchg
in
inc
in
push
stos
insb
jl
pop
adc
mov
cli
ja
mov
out
jno
data16
cmpsl
push
aad
int
addb
mov
sti
cld
jg
mov
loopne
pop
cli
out
fstl
movsb
ficoml
popf
pushf
or
add
or
mov
filds
out
and
jle
and
stc
lds
daa
and
xor
ja
test
pushl
in
jmp
mov
xchg
adc
scas
lea
mov
xlat
mov
mov
add
clc
mov
lahf
inc
xchg
or
mov
push
or
jae
addl
lcall
cmp
and
fwait
int3
mov
hlt
push
mov
out
cmc
xor
decl
adc
jbe
outsb
or
lret
inc
addr16
mov
add
mov
decl
int
ss
loop
sub
mov
sub
pop
mov
test
dec
je
fisttpll
and
addr16
cmc
andl
call
sbb
es
out
popa
dec
iret
push
ficoms
dec
xor
mov
incl
mov
stc
ljmp
neg
insb
push
mov
scas
sbb
insb
mov
stos
nop
pop
dec
inc
jbe
xor
xor
and
lcall
mov
lahf
or
das
mov
inc
notl
jg
dec
iret
cmp
jge
cmp
das
sub
out
inc
mov
or
jg
sub
jmp
xchg
push
orl
jno
scas
data16
iretw
aas
pop
lods
pop
jno
fdivs
dec
and
mov
dec
push
icebp
cs
pop
sub
and
ror
or
decl
xchg
iret
je
sub
cs
xchg
mov
push
in
cli
call
cld
in
stc
and
cmp
cmp
inc
and
jmp
scas
jp
mov
scas
mov
lcall
mov
pop
and
pop
cld
mov
test
loopne
push
sub
jge
push
outsl
sbb
and
fsts
mov
cmpsl
test
or
adc
pop
xor
jnp
sbb
dec
fbld
mov
mov
adc
mov
cmp
sub
movsl
pop
mov
push
sbb
pop
ja
cmp
cli
sbb
das
jmp
mov
ljmp
jp
pop
jnp
mov
sysret
imul
test
inc
jge
inc
jl
call
cld
scas
int3
in
pushf
xchg
xlat
in
test
cmp
stc
das
popf
adc
jle
cli
call
mov
stos
gs
sub
adc
xor
les
daa
cld
ljmp
dec
mov
cmp
outsl
xor
xchg
xchg
add
mov
pushl
loopne
nop
and
xor
mov
xchg
cmpsb
mov
sbb
movb
cmpsb
mov
shrl
movsl
fsubl
adc
mov
dec
inc
cmp
push
push
fmull
jp
push
cli
lods
xlat
sbb
sub
ds
ljmp
gs
adc
xchg
adc
shll
imul
pop
dec
pop
jl
decl
das
pop
in
das
dec
sbb
gs
cmp
fdivs
xchg
dec
sbb
mov
inc
inc
loope
stos
lcall
movsl
pop
push
bound
add
pushl
incl
push
mov
addr16
or
insl
cmp
test
dec
jecxz
xchg
fs
fcomip
jp
jle
loopne
scas
shr
pusha
push
fiadds
cs
fidivrs
sub
mov
stc
mov
mov
sar
jle
imul
out
test
into
hlt
sbb
jecxz
or
test
js
lods
mov
cli
jns
push
xchg
lods
sub
insb
inc
xor
and
movsb
jecxz
mov
pop
outsb
cmp
cwtl
sub
stc
dec
xlat
sahf
decl
adc
in
aas
cmp
into
sbb
sub
lods
jg
sti
std
in
fcoml
or
pop
call
bnd
push
fcompl
jmp
hlt
outsl
popa
sbb
mov
mov
xchg
or
decl
mov
call
fnsave
int
dec
dec
sbbb
add
mov
adc
jge
sub
jo
dec
adc
repnz
cli
mov
mov
sbb
cli
mov
decl
test
xor
push
mov
and
in
adc
mov
das
push
mov
aad
and
aam
fcomip
jg
sbb
push
cs
xlat
or
into
inc
mov
clc
cmp
shl
insb
jmp
add
inc
cmc
clc
int
repz
into
sub
push
cwtl
pushl
push
ficoml
and
test
test
cmpsb
and
jmp
clc
cwtl
xchg
jne
inc
inc
gs
cmpl
add
fnsave
push
ljmp
or
mov
js
fcomi
scas
mov
cmp
xor
pop
fs
ljmp
push
cmp
xor
jb
cmp
sbb
mov
movzbl
pushl
cmpsb
cmc
and
cmp
sub
sbb
bound
std
incl
test
inc
xchg
push
push
out
mov
or
test
xchg
dec
sbb
inc
ds
sub
jne
sub
cmpsl
scas
xor
adc
dec
mov
outsl
pushl
fwait
les
aad
lods
fimuls
mov
xchg
xchg
das
jecxz
rcll
jno
fnstenv
add
icebp
or
jge
sub
sub
ljmp
mov
push
cltd
shrb
inc
inc
mov
cmp
cld
mov
fisttpll
cmpsb
mov
xor
pushf
pop
outsl
cs
call
pop
pushf
jmp
repz
push
loopne
mov
or
cmc
lcall
pop
jmp
lahf
out
fsubp
push
mov
imul
and
inc
or
fildll
add
sub
sub
movsb
iret
es
jmp
and
xchg
pop
ficoms
sarl
in
cmp
in
imul
and
mov
pop
clc
ljmp
mov
sahf
cmc
mov
sbb
std
jmp
aas
fcmovnu
sub
out
dec
ds
jne,pn
incl
fists
in
fldenv
jecxz
notl
in
repz
or
pextrw
movsl
jg
or
mov
loope
shlb
mov
mov
adcl
mov
mov
in
sub
mov
jne
push
mov
mov
lock
nop
fsub
in
and
inc
shll
inc
es
outsb
adc
lcall
inc
sub
jns
mov
push
or
pop
ret
shr
or
mov
cmpl
fbstp
xchg
in
cmp
sti
dec
or
outsl
gs
mov
dec
scas
pusha
ljmp
loop
pushf
ljmp
jmp
adc
xchg
mov
jmp
xor
adc
test
rcrb
sub
outsb
sbb
lcall
jg
nop
lcall
push
test
mov
pop
sub
adc
js
adc
sub
mov
jg
jbe
xor
sub
int3
movsl
or
bswap
decl
xor
ja
es
push
daa
mov
jb
mov
int3
dec
movsb
and
jecxz
push
pop
int3
arpl
pop
mov
mov
cmp
popa
in
mov
addr16
pushl
or
mov
sub
movsb
aaa
push
ss
sub
mov
sub
inc
sbb
inc
inc
ficompl
dec
pushl
jg
dec
sub
dec
lods
pop
sub
cmp
or
ljmp
mov
rcr
xchg
and
testl
cld
mov
call
aas
adc
add
and
aaa
cmp
stc
mov
test
push
sub
aas
jmp
mov
push
sub
dec
imul
or
sbb
jnp
test
filds
jp
sub
pop
push
sub
xchg
or
jns
sub
fiaddl
mov
popa
test
call
je
sub
and
and
mov
std
aaa
fcompl
cmc
inc
btr
sub
in
data16
and
sub
sub
lcall
push
xorl
sub
xor
bound
movsb
add
aad
js
dec
or
adc
sub
cmpsb
scas
add
subb
mov
cmpsl
in
nop
movsb
or
out
das
xor
xchg
outsl
mov
incl
lcall
mov
mov
mov
pop
sub
loop
jg
movsb
sbbl
cmc
fnstenv
pop
lods
sub
push
loopne
mov
cmp
in
lea
cmpsb
lahf
cmpsb
sti
fistps
or
sub
jl
mov
scas
mov
incb
outsl
cmp
jmp
test
add
aam
sub
fwait
pusha
repz
sub
xchg
repz
decl
jns
lds
xor
jne
sbb
aas
lcall
push
cmp
mov
call
fs
dec
sub
push
ficomps
sub
mov
pushf
nop
nop
add
gs
mov
lcall
push
and
je
sub
xor
lcall
cmp
and
push
and
jnp
sbb
mov
mov
or
aas
prefetchwt1
out
in
sbb
pushf
mov
sar
cmp
movups
sbb
xor
mov
xchg
sbb
stos
inc
lods
std
call
or
shrl
arpl
out
mov
shl
out
mov
xchg
dec
adc
ljmp
dec
mov
scas
test
sub
movsl
js
xchg
mov
sbb
jns,pt
sub
push
leave
int3
and
inc
std
jae
cmp
cli
in
mov
push
cld
je
xchg
pop
sbb
push
xor
decl
push
pop
push
mov
and
stc
cbtw
lcall
call
sub
push
fs
rorl
sub
cs
fdivs
dec
xor
jb
mov
das
popf
push
push
nop
mov
sub
cmp
cwtl
shll
xchg
xor
ja
lcall
daa
mov
adc
sub
or
pushf
in
out
jmp
in
jmp
ds
mov
xchg
arpl
sub
mov
jmp
incl
and
loop
push
jbe
and
stos
jae
or
xchg
sbb
mov
push
mov
sub
hlt
imul
sbb
fmuls
cltd
dec
add
jmp
push
mov
mov
lods
add
jle
dec
push
and
mov
push
ds
pushl
inc
insl
push
push
int3
fs
sub
decl
and
fidivs
cmovno
xor
add
jmp
pop
mov
inc
es
mov
xchg
lret
cmp
arpl
mov
sar
test
sbb
idivb
jns
fadds
popl
mov
jl
insl
shll
sub
outsb
nop
call
sbb
test
test
fwait
imul
lret
mov
mov
lahf
test
or
mov
stc
mov
mov
sti
jmp
pop
movsl
fidivs
ret
or
sbb
dec
xchg
out
sar
sbb
call
sub
adcl
incl
incl
sti
adc
gs
psllw
jo
xchg
or
out
stos
loop
sti
stc
test
dec
call
decl
repnz
leave
jp
sub
fdivrs
leave
fsubrs
inc
sbb
dec
mov
decl
sti
mov
push
in
fwait
adc
mov
daa
stos
call
sbb
xor
adc
inc
decl
sbb
mov
dec
in
test
aaa
test
jmp
adc
lods
jne
or
gs
sub
sbb
xor
fs
inc
and
xchg
cmc
sbb
pushl
cld
call
mov
push
outsl
push
sub
cli
jo
adc
xor
aad
pop
out
std
stos
stos
mov
insl
cmp
mov
mov
out
dec
cli
jmp
aas
xchg
cmpsl
xor
arpl
fs
lcall
pushl
jo
sbbb
or
mov
jae
lea
jno
stc
out
inc
iret
add
jmp
cmp
cmp
mov
cmp
decl
jno
adc
fs
adc
and
inc
imul
push
testl
xor
addr16
sub
mov
sub
cld
and
pop
dec
sbb
out
mov
addr16
xchg
cmp
mov
mov
cmp
scas
xor
incl
push
jne
sbb
cmp
jbe,pn
xchg
mov
out
pop
cmpsb
xorb
aaa
cld
pop
inc
xchg
lret
aaa
adc
sbb
inc
jno
decb
in
jmp
cmc
or
pop
push
adc
daa
addr16
jns
mov
clc
add
stos
loop
add
push
cld
sbb
icebp
aas
les
adc
add
dec
xor
add
lods
adcl
push
ljmp
lock
and
lock
shll
mov
or
test
in
add
dec
mov
or
push
jmp
psllq
xchg
das
pop
push
sub
icebp
cmc
aam
shll
and
ljmp
add
sub
sbb
mov
mov
pop
push
pop
mov
adc
push
cmpsl
fiaddl
ret
inc
push
mov
mov
aaa
aad
inc
test
pop
lcall
lcall
push
data16
loopne
adc
scas
das
jl
mov
es
rcrl
es
mov
flds
sbb
es
cmc
dec
mov
outsb
je
popa
imul
mov
subb
push
lock
jecxz
mov
inc
mov
clc
mov
sbb
mov
jge
inc
xlat
aas
scas
idiv
stos
ljmp
xchg
idivb
xchg
xchg
jg
cmp
std
stos
sub
mov
incl
sbb
dec
jae
jbe
movsb
sbb
cmp
cmpsb
xor
rclb
fwait
jnp
movsb
lcall
aad
pop
lret
movsb
dec
mov
hlt
movsl
xor
es
faddl
bound
mov
ljmp
test
jae
sub
mov
pop
add
cs
ret
loope
data16
add
mov
in
sbb
icebp
and
mov
ja
fcoms
leave
sbb
xchg
lret
cmp
xchg
or
sbb
sbb
punpcklwd
xor
xchg
fcmovne
outsb
dec
inc
into
xchg
pushf
cli
and
or
sbb
cmp
xor
fdivrs
call
dec
in
das
cli
pushl
call
sbb
daa
push
cmpsb
cmp
sbb
nopl
rcr
ljmp
call
pop
sahf
jle
mov
dec
sbb
lret
cmc
xchg
sti
outsl
incl
cld
add
vdivsd
pop
sbb
leave
jle
stc
daa
sbb
std
call
int
jo
nop
adc
int
test
popa
mov
sbb
pop
inc
call
sbb
mov
cmp
jae
cmpsb
fstpt
cld
mov
jle
push
dec
dec
mov
sbb
sub
xor
sbb
xchg
loopne
adc
ljmp
pop
xor
mov
movsl
push
test
js
jbe
fldpi
inc
sbb
pop
je
and
ret
or
bnd
cmp
adc
cwtl
andl
or
pop
push
imul
jge
inc
fcmovnu
movsb
cmp
addr16
leave
mov
adc
jo
jg
cmp
mov
inc
addb
jmp
mov
notb
push
mov
cmpsb
mov
fidivl
into
andl
push
xchg
pop
add
push
movsb
clc
lock
cmp
jnp
and
xor
imulb
insb
pavgw
test
push
daa
mov
jg
insl
test
jnp
fisubrs
mov
jne
addr16
dec
sub
fcmove
jle
inc
xchg
imul
call
pop
sub
xchg
dec
loop
cwtl
repnz
xlat
add
nop
daa
mov
ret
out
xchg
xchg
pop
outsl
cltd
sbb
leave
daa
sub
fs
lods
out
dec
test
push
fwait
mov
mov
imul
gs
inc
test
popf
xchg
fwait
mov
add
lcall
jl,pn
dec
jnp
mov
adc
test
push
rclb
push
sub
inc
jle
jmp
dec
sbb
xlat
repnz
add
xor
mov
add
iret
cwtl
sub
pop
and
push
jmp
mov
aad
xor
xchg
adc
lcall
cmp
xchg
cs
add
pop
cmc
repnz
xor
sbb
jmp
add
sbb
ja
mov
cmp
daa
test
inc
or
add
ja
cltd
daa
loope
adc
mov
or
test
lcall
cmp
pushf
in
leave
push
lea
cld
dec
mov
call
out
scas
xchg
std
jg
lcall
add
in
sahf
lds
clc
scas
mov
ja
cmpsb
int3
daa
pop
or
dec
lcall
sahf
lods
jle
xchg
or
loopne
mov
loopne
std
stos
pushl
or
daa
mov
cmp
mov
hlt
mov
pop
fists
and
das
outsl
mov
outsl
dec
cmp
fs
cmpsb
sub
cltd
loopne
jmp
jge
movsl
lahf
mov
in
mov
dec
loop
push
in
mov
fbld
out
jle
les
add
jle
pop
add
je
mov
inc
inc
xchg
out
mov
test
outsl
cmpsl
mov
mov
mov
inc
pop
inc
pmulhrw
rolb
nop
push
loope
ret
sbb
inc
cmp
into
pop
les
ja
or
or
pop
cs
call
mov
dec
aaa
jbe
sbb
insb
into
push
fldl
pop
jbe
mov
mov
call
repz
dec
jne
loope
scas
repnz
jmp
sub
js
and
mov
add
ja
sub
nop
lods
cmpsb
repnz
and
shrb
cli
call
and
into
xchg
lahf
and
dec
fcompl
ljmp
push
sbb
jb
pop
xor
jecxz
mov
jmp
pushl
inc
adc
sti
clc
and
int
pop
out
aam
jecxz
mov
sbb
cmpsb
or
push
cld
push
sbb
xchg
bound
incl
mov
pusha
leave
xchg
adc
popf
xor
pop
mov
sbb
pushl
stos
xchg
adc
mov
into
mov
stos
xchg
setle
xor
xchg
sub
in
jmp
in
cwtl
or
jno
mov
and
mov
sbb
lret
dec
insl
mov
decl
push
fisttpll
xor
out
ret
in
or
push
mov
sub
push
imul
std
call
mov
and
into
xor
test
shll
push
fsts
shlb
adc
shll
mov
sub
ret
push
xor
and
lcall
mov
mulb
imul
push
into
dec
enter
outsl
add
jg
or
aas
mov
push
mov
ljmp
add
and
mov
cmpsb
ja
add
jp
mov
ja
push
andb
pop
push
fiadds
push
adc
std
decb
fstp
mov
pushl
pusha
jg
popf
add
xor
push
es
mov
incl
lods
jmp
pop
ret
push
pushf
mov
pusha
cmp
decl
sub
aaa
or
mov
mov
mov
inc
push
mov
mov
push
mov
xchg
in
adc
or
mov
leave
loopne
xor
cmp
call
jge
ja
jge
pop
or
and
nop
mov
push
jbe
pushf
dec
es
sti
jo
ss
call
jg
frstor
adc
cli
adc
cmp
dec
pushl
sub
in
cmp
lcall
hlt
mov
fistpl
fdivrl
mov
cli
lcall
sbb
out
mov
cs
out
inc
mov
in
int
pushl
inc
and
cs
mov
test
sub
jb
cmp
add
ss
clc
incl
in
pop
jecxz
sbb
add
adc
mov
mov
push
or
sbb
shlb
xchg
fdiv
shrl
jae
loopne
incl
lcall
xchg
sbbb
mov
lds
inc
ret
in
cltd
jae
or
inc
lret
fs
jg
inc
xor
mov
imul
icebp
jae
mov
int
sbb
cs
and
push
popa
call
mov
xchg
test
stos
ss
outsb
sub
or
inc
cmc
xor
ljmp
outsl
out
call
stos
scas
push
and
fists
cmovno
jle
and
lds
jg,pn
sbb
xor
lcall
mov
inc
movsl
outsl
insl
scas
je
sti
mov
xor
aaa
dec
mov
cld
out
sti
sub
jo
adc
inc
push
xchg
int3
stc
repz
ljmp
sub
decl
aam
dec
dec
subb
inc
jl
daa
daa
aaa
dec
sbb
xor
or
lea
cmp
lods
or
dec
dec
push
fmulp
in
fldl
movsl
ja
aas
jb
leave
mov
fwait
imul
and
adc
call
bound
int
ja
lods
stos
negb
shrb
stos
and
cmc
cmp
jmp
rcr
sar
mov
les
lds
inc
add
sbb
sarb
push
popf
mov
mov
call
and
sbb
test
xchg
sahf
and
loope
sub
lods
lret
movsb
mov
adc
in
call
cld
aad
mov
mov
push
mov
in
out
sbb
idiv
rcrl
sbb
inc
pop
cs
jmp
mov
mov
in
mov
mov
sbb
mov
stos
mov
cwtl
cs
fisubl
mov
in
outsl
daa
dec
mov
xchg
cs
add
sbb
jmp
jg
lret
in
jne
fwait
imul
arpl
sub
inc
mov
ja
sbb
pop
sub
push
xchg
push
xlat
or
icebp
mov
cwtl
test
adc
icebp
hlt
inc
sub
dec
hlt
negl
test
rorb
mov
je
cmpl
sti
jns
gs
ds
inc
cmp
sub
imul
xor
les
inc
ror
ficompl
push
sub
call
fnsave
bound
dec
in
and
cs
outsb
jge
clc
decl
loop
or
sub
mov
inc
sub
jmp
mov
stc
shrl
sub
add
ljmp
pop
lcall
dec
nop
fdivrp
imulb
pop
xchg
andl
das
or
aaa
cld
loopne
jnp
sub
xor
subb
into
ds
mov
incl
lahf
add
and
dec
pop
cmp
inc
lret
jne
imul
push
and
lds
push
xchg
mov
and
push
out
inc
jb
shrb
xor
jnp
xchg
adc
clc
jns
popa
cltd
fnsave
fucomi
inc
and
notl
push
push
mov
mov
mov
lods
ss
inc
jnp
js
fcom
mov
push
dec
push
pop
dec
dec
int3
adc
adc
fucom
mov
xor
pop
subl
push
jecxz
sbb
sbb
mov
jg
inc
icebp
sbb
push
dec
or
dec
in
push
loopne
push
in
ret
push
cltd
ljmp
call
stos
call
das
adc
cmpxchg
mov
ljmp
jge
jne
and
cli
pop
push
jno,pt
xchg
lret
lods
lret
insb
movb
mov
xor
adc
roll
cltd
test
cltd
incl
out
popa
nop
adc
into
and
dec
fdivrl
je
cmp
stc
jl
or
in
cmp
add
lret
mov
mov
add
lret
mov
call
push
adc
add
mov
test
pushl
cmc
sbb
mov
mov
pop
sub
jnp
dec
test
lret
hlt
adc
mov
js
and
pop
popa
push
or
ljmp
add
orl
mov
dec
mov
cmp
xlat
dec
movsl
dec
lcall
out
js
aam
xchg
imul
mov
jg
es
push
jae
mov
test
ss
out
sbb
cmp
lods
mov
jmp
jne
mov
push
pop
in
cmpsb
mov
dec
xchg
and
mov
lcall
imul
out
std
jns
inc
inc
mov
js
mov
test
pop
cld
decl
cmp
popa
sub
movb
ja
sarl
xchg
shlb
lods
jmp
enter
incl
pusha
stos
das
std
jg
pop
jns
mov
sub
andl
fs
push
and
enter
jg
lcall
sub
enter
lret
jle
je
das
mov
les
pop
mov
adc
push
fcomp
das
adc
adc
xor
add
enter
cld
jl
pop
leave
and
inc
fidivrs
push
stos
mov
fldl
adc
dec
in
add
xchg
in
mov
mov
mov
in
outsb
or
cmovle
mov
add
push
movsl
jge
jo
stos
out
dec
stos
mov
adc
fsubrl
ja
lret
call
adc
sbbl
sub
xchg
push
pop
mov
and
push
adc
scas
cli
mov
mov
and
sub
jle
sbb
mov
incl
xchg
call
push
insb
es
xlat
sbb
pop
daa
and
jl
bound
jmp
push
sbb
inc
sahf
ret
adc
xchg
mov
jb
fucom
mov
jp
notb
sub
jl
loop
dec
pusha
movl
jbe
fs
jb
inc
call
and
jno
lods
sarb
imul
add
xchg
jle
dec
das
faddl
cld
dec
int
jae
pop
mov
pushl
cmp
mov
inc
out
in
das
rcll
sbb
imul
aas
incl
and
fwait
popf
cli
mov
xlat
and
push
xchg
lods
xor
js
sub
push
adc
sbb
nop
adc
jl
xor
pusha
data16
cli
scas
pop
mov
pop
call
aad
cmp
cmp
fimuls
repz
pop
dec
dec
fmul
cmc
mov
dec
leave
lods
insb
inc
jg
lcall
rcrl
addr16
sub
cmp
scas
xor
mov
ljmp
jp
in
gs
arpl
setb
fisttpl
inc
sbb
movsb
stc
mov
cmc
testb
mov
nop
mov
imul
mov
fdivrl
inc
js
jp
out
ret
add
in
into
cmp
mov
cwtl
xchg
mov
cmp
mov
sahf
mov
adc
mov
or
aaa
push
fmull
repnz
or
xchg
mov
decl
incb
cmpsb
xchg
and
imul
out
mov
push
sub
jl
sub
push
cs
mov
aam
or
fdivrl
or
call
adc
xlat
out
xchg
scas
sbb
or
test
pushl
mov
outsb
movsb
inc
adc
lret
test
hlt
int
adc
je
push
mov
stos
xor
jb
or
xchg
pop
mov
int
notb
jmp
sti
jo
and
dec
xchg
popf
rclw
shr
add
mov
ljmp
sub
mov
fs
lods
jb
scas
pushf
loop
adc
std
sahf
jmp
lcall
adc
push
sbb
std
sbb
dec
je
scas
pop
cwtl
into
or
pushl
dec
or
xlat
popa
pop
dec
jbe
cli
js
hlt
stc
mov
ffreep
idiv
popf
scas
mov
cmc
dec
xchg
test
into
inc
stos
sbb
out
lcall
out
and
fwait
inc
incl
mov
xor
xor
les
inc
xlat
lahf
pop
imul
lahf
mov
fidivl
ss
movhps
movsl
mov
mov
sub
subb
setbe
decl
lret
pop
pop
ljmp
arpl
sbb
repz
incl
rcll
jle
gs
adc
jno
pop
jb
mov
cmp
cld
in
sbb
xor
fnsave
push
andb
dec
xor
push
jmp
scas
xor
test
int
pop
divps
push
js
xchg
xlat
cli
lods
xchg
pushl
movsl
cmc
fidivrs
xor
sbb
shll
mov
mov
cwtl
movsl
add
pop
lcall
out
jecxz
in
mov
xor
push
in
je
add
call
stos
xchg
ret
push
push
movb
ljmp
push
inc
pop
dec
jg
xchg
inc
and
imul
aas
adc
pop
jae
aaa
dec
inc
fnstsw
sub
sbb
mov
int
incb
dec
jae
sbb
jne
add
pop
xchg
xchg
mov
aas
fimull
mov
push
xor
adc
fcoml
jbe
das
or
cs
ljmp
pop
scas
xor
pushl
sbb
and
mov
lods
pop
outsl
push
cld
cmp
mov
imull
add
iret
movsl
scas
xchg
nop
inc
negl
inc
pop
ljmp
pop
jmp
mov
xor
xchg
in
and
dec
and
int3
loope
and
dec
pusha
int3
call
dec
mov
ljmp
lcall
dec
cmp
cmp
lds
ljmp
shll
xor
imul
adc
inc
scas
movsb
and
scas
push
and
jne
jmp
aaa
jle
add
insl
loop
pop
jle
fstps
pop
dec
cs
dec
xchg
cltd
addr16
les
sarl
loope
lock
or
fidivs
cmp
xor
rcrl
mov
jge
call
call
dec
push
loopne
sub
out
sbb
sti
test
sbb
cmp
mov
sbb
inc
jb
or
pmaddwd
cli
xchg
push
mov
or
add
scas
or
lret
push
adc
ret
push
push
sub
add
ss
xchg
push
and
push
pushf
jg
sbb
into
std
incl
mov
jp
or
aaa
imul
mov
xchg
mov
int
mov
push
sarb
sub
test
mov
cs
lcall
shrb
dec
sbb
mov
out
mov
daa
sbb
jle
ljmp
jno
mov
cmc
sbb
mov
cmp
push
xor
insl
inc
ljmp
xchg
mov
mov
mov
sbb
inc
mov
jns
jp
cld
jmp
jge
dec
mov
and
mov
in
push
xchg
je
pop
mov
and
xor
push
movsl
xorb
enter
push
pushf
cmc
pop
mov
call
add
pop
pop
cld
push
mov
loope
or
sbbb
fldcw
lcall
stos
lcall
jmp
loope
aad
jb
mov
mov
xchg
sub
shll
pop
mov
dec
mov
lcall
mov
das
fadd
in
repnz
sbb
es
shlb
fists
psubsb
push
fcos
decl
inc
push
divl
imul
in
push
push
or
addr16
in
out
incl
sbb
mov
cmpsl
sbb
xchg
pop
lahf
adc
call
adc
outsl
out
mov
mov
push
jae
push
mov
or
mov
and
pop
lcall
cmp
xor
lock
mov
aas
push
jp
push
in
and
or
rcrb
add
rcrl
adc
or
mov
push
push
lods
daa
and
std
ljmp
das
jne
cmp
pop
gs
js
adc
cmp
push
jg
push
testb
push
icebp
sti
daa
imul
xor
movsl
punpcklbw
dec
mov
cli
inc
in
pop
lock
mov
imul
mov
das
push
and
ja
shlb
sahf
lock
outsl
js
test
incl
push
pop
in
in
sbb
lcall
jo
mov
les
mov
mov
andl
and
aam
mov
decl
jle
push
mov
lods
xchg
enter
les
iret
jnp,pt
test
push
in
or
sbb
mov
lods
cmp
rcrb
fmull
jmp
dec
mov
aaa
aam
fisubrl
vandnps
push
call
mov
rcl
mov
xchg
pusha
cltd
fmuls
aam
shl
repz
lds
sub
dec
loope
das
adcl
add
mov
dec
fwait
sbb
outsl
std
shl
mov
cmc
mov
outsb
aam
lods
push
sub
out
scas
test
xchg
mov
push
icebp
add
mov
lret
mov
je
pushl
test
xchg
sub
das
mov
lods
fists
push
mov
cs
aaa
push
ud0
jl
inc
xchg
push
leave
and
repz
rorb
leave
test
mov
in
and
mov
mov
aaa
dec
aaa
add
mov
xchg
mov
sbb
in
adc
cwtl
stos
jmp
adc
arpl
cmp
add
and
xchg
pushf
popf
rol
call
loopne
dec
sub
inc
inc
and
stos
sbb
shll
mov
pushl
jae
arpl
out
mov
inc
addb
rolb
sbb
push
xor
mov
sahf
jb
jp
mov
ret
push
in
test
jecxz
lea
cld
inc
mov
push
cmp
pop
test
scas
ljmp
shll
mov
xor
scas
out
pop
mov
les
insb
pop
ret
cmp
xor
xorl
insl
sbb
jns
inc
nop
fnstenv
arpl
push
cmpsb
push
sti
add
jp
cmpsb
sbb
les
mov
call
mov
mov
push
fsubl
or
jg
dec
sub
out
popf
subl
sbb
sbb
lods
ja
jns
decl
dec
jle
inc
cmpsl
push
ret
mov
pushl
pop
test
sbb
dec
rorb
lcall
loop
je
incl
sub
fwait
mov
push
push
inc
inc
inc
sbb
jmp
mov
enter
jbe
jp
mov
push
les
adc
adc
les
sti
lret
repnz
push
data16
mov
or
out
sbb
dec
adc
add
cs
mov
incl
sti
lcall
fs
iret
scas
fsubrp
scas
sbb
hlt
mov
insl
cli
fchs
mov
into
or
insl
test
dec
pop
popf
pop
pop
push
ss
sbb
ljmp
pop
inc
jo
popf
xchg
push
adc
fcmove
push
add
mov
insb
scas
dec
into
jp
xchg
sub
mov
xchg
mov
xor
pushl
out
aad
jns
jno
js
ljmp
stc
outsb
leave
and
xor
orl
insl
mov
je
imul
sub
mov
mov
cwtl
movsl
dec
pop
mov
mov
mov
sbb
jg
push
cmp
incl
mov
pushf
xchg
mov
push
lods
data16
imul
adc
push
xchg
decl
mov
js
dec
inc
mov
push
pop
pushf
mov
mov
cmp
stos
mov
xor
shl
jne
lcall
push
pop
jge
mov
inc
decl
gs
test
repnz
test
movb
jp
adc
cld
call
addb
pop
ret
pop
int3
xchg
sbb
mov
lock
xchg
push
xchg
xor
ljmp
inc
sarl
push
ss
cmp
jbe
ficoms
push
aas
mov
adc
inc
push
adc
xchg
nop
cmp
loopne
mov
jecxz
lods
aam
or
xchg
repz
dec
cld
in
lcall
cmp
adc
xchg
aas
negl
lcall
pop
pop
sbbb
pushl
inc
ret
xor
nop
sbb
dec
dec
sbb
inc
inc
sbb
mov
mov
push
scas
mov
sbb
jg
ret
pushf
outsb
fidivs
mov
fbld
add
xor
into
mov
decl
ret
sbb
jbe
addr16
mov
shr
in
outsl
xorb
lcall
fstl
cmpb
dec
jmp
xchg
cmpb
mul
iret
mov
mov
lahf
add
jnp
decl
aas
insb
cmp
es
add
insb
sub
sbb
or
cmp
push
jg
cmc
jmp
stos
inc
gs
pop
xor
xchg
inc
dec
mov
lds
pop
jecxz
clc
popa
les
dec
je
jmp
cmpsl
mov
cmp
lcall
decl
imul
dec
icebp
lcall
sub
cli
xor
jns
aas
pop
inc
cmc
jo
adc
sub
mov
dec
jnp
mov
pushl
mov
and
movsl
xchg
mov
cmp
inc
mov
pushf
and
stos
push
test
sbb
pop
or
lods
ret
out
data16
subb
sbb
das
push
mov
jge
in
ljmp
mov
inc
sbb
mov
stos
sti
mov
test
xorl
and
std
cld
imul
lret
xor
push
push
ret
jo
popf
nop
enter
jg
xchg
push
mov
outsb
mov
cmp
add
pushl
into
push
pop
mov
fstpl
les
sub
ret
dec
xadd
pop
clc
inc
mov
test
mov
mov
mov
repz
mov
movsb
inc
sbb
inc
cltd
and
sbb
and
addb
lret
decl
jno
test
scas
js
xor
cmpb
ds
dec
fisubrs
daa
xchg
mov
lods
out
mov
repnz
rcll
push
inc
hlt
scas
lahf
popf
jne
cltd
jns
sarb
incl
push
call
cs
and
mov
sub
sub
push
or
and
push
cld
push
cld
test
xchg
sub
add
fwait
jp
sub
mov
sub
decl
mov
into
hlt
insl
test
sbb
aas
mov
sbb
incl
andb
pop
xor
or
mov
fwait
jb
fmuls
pop
inc
mov
mov
cmpsl
popa
xor
sti
jne
push
lods
int
aad
gs
mov
aas
lcall
ljmp
ficomps
jbe
xchg
dec
je
aad
pop
or
scas
mov
pushl
mov
or
das
xor
xchg
add
mov
fildll
sbb
push
push
fcmovb
push
movsb
subl
jecxz
mov
pop
push
test
out
js
ficomps
mov
into
mov
sahf
xor
push
decb
adc
lock
mov
inc
and
jmp
push
push
push
std
dec
jmp
jmp
scas
aad
push
sub
sarb
xor
add
mov
ret
xchg
mov
outsb
pusha
sbb
xor
fwait
add
cmpsb
jecxz
dec
or
fiaddl
fsubr
lock
cmp
data16
stos
lfs
daa
stos
xchg
cld
push
sbb
call
into
jne
das
pop
in
or
fstpl
call
loopne
and
lret
aam
sbb
call
je
scas
mov
fdiv
push
mov
cwtl
fcmovb
mov
int
leave
and
mov
call
bound
dec
out
sahf
mov
in
jnp
int
xchg
jmp
mov
mov
aad
pop
jno
mov
xor
and
xor
aaa
fstl
pusha
cmc
xchg
cmp
popf
inc
ja
sbb
movsl
gs
aas
lea
or
inc
push
fcomip
ljmp
lahf
clc
repnz
fisttpll
add
outsl
clc
decl
cwtl
scas
mov
pop
push
xchg
test
xor
lcall
incl
jecxz
push
repz
lret
je
int3
insl
leave
out
adc
mov
cld
gs
repnz
call
jl
or
cmpsb
into
mov
pop
sti
mov
cmp
or
mov
std
lcall
push
inc
or
vmovaps
inc
lea
arpl
cmc
in
sbb
pop
inc
inc
mov
mov
inc
pop
push
call
out
das
xor
cmp
je
ds
push
jp
pushl
in
xchg
lret
stos
sbb
and
mov
mov
dec
push
lock
lcall
xor
inc
dec
cmpsb
add
push
jbe
inc
or
xor
movsl
or
mov
dec
and
fldl
push
push
sbb
pop
lods
decl
cmpsl
pop
mov
push
and
jge
sti
cmp
sbb
pop
sti
mov
ljmp
aas
jl
pop
insb
leave
lret
cli
push
sub
push
push
pop
xor
dec
lock
out
scas
rcl
lods
mov
les
dec
pop
pop
or
out
pop
or
jnp
pop
cmp
or
hlt
pop
mov
mov
into
lcall
push
xchg
call
mov
push
fstpl
int
call
lahf
faddl
pop
mov
cmc
gs
inc
or
or
mov
ljmp
sub
jnp
or
cmc
add
in
pop
out
or
outsl
or
mov
sbb
dec
sbb
iret
jg
cmpsl
ss
std
andl
fcos
call
and
arpl
sbb
mov
ds
in
insb
mov
mov
cmp
sub
or
xchg
int
push
push
push
push
ret
mov
jns
inc
loopne
decl
hlt
insl
adc
cltd
lret
fnsave
sbb
cmp
cmp
inc
push
xor
mov
pop
sbb
call
mov
and
and
push
add
or
sub
lcall
rcrb
nop
stos
fadd
ret
mov
lods
mov
loope
jmp
popf
xchg
dec
arpl
mov
cmp
or
dec
idivl
mov
clc
mov
dec
or
or
pop
push
jae
shrl
adc
cmpsl
arpl
incl
jne
outsb
inc
sub
sub
repz
mov
mov
xchg
sarl
fisubrl
xchg
imul
mov
xchg
pop
mov
lock
arpl
gs
decl
add
test
and
pop
jg
cmp
movb
pushl
xlat
pushf
jne
ljmp
imul
pop
ret
mov
push
cli
sti
jle
sahf
es
imul
mov
je
push
cmovns
and
imul
push
mov
daa
or
aam
rorb
xchg
cmc
push
xchg
inc
cmp
rcrb
xor
out
jns
in
inc
in
leave
inc
cmp
imul
sub
ret
inc
pop
push
sbb
aad
cltd
xchg
fisubrs
movsl
mov
xor
or
mov
repnz
xor
sarl
divl
dec
fstpt
mov
push
std
and
and
int3
aam
or
subl
mov
icebp
xor
fisubl
sbb
stos
mov
test
cmp
inc
out
ljmp
lret
popa
inc
add
sub
mov
sub
and
incl
lahf
adc
fwait
shl
mov
call
cltd
or
lea
mov
test
cwtl
decl
insl
mov
mov
sub
fmull
out
adc
dec
dec
inc
and
hlt
dec
inc
jmp
hlt
adcb
pusha
shrb
cltd
jl
sbb
xchg
in
xor
loopne
push
stos
adc
lock
fstpl
mov
andb
and
mov
push
iret
call
mov
test
aaa
jg
loop
sbb
or
hlt
xchg
pop
sbb
cli
decl
lock
inc
add
and
in
mov
in
adc
out
cs
in
or
cltd
or
sub
jle
mov
pushl
inc
mov
push
lea
out
pop
mov
sub
jg
mov
aaa
hlt
rolb
sbb
test
mov
mov
insb
sbb
call
cld
imul
adc
inc
adc
adc
sub
mov
call
pop
push
std
call
add
fildl
jnp,pt
dec
repz
push
int
int
mov
decl
cwtl
or
add
cmp
pop
pop
mov
jne
pop
hlt
dec
sbb
mov
adc
jns
stos
inc
sub
lods
js
cld
dec
jb
repnz
dec
mov
aaa
fldl
mov
mov
adc
jmp
jecxz
sub
fistpll
dec
mov
dec
pop
xchg
ds
mov
jbe
test
jae
jg
add
sbb
js
mov
pop
mov
sti
lock
jg
mov
pop
push
inc
pop
add
xchg
pop
add
adc
adc
or
adc
call
add
sbb
out
push
pop
inc
adc
pop
lahf
les
dec
repnz
test
pop
jge
adc
dec
mov
imulb
js
push
pop
xchg
sbb
mov
test
sub
ljmp
or
fistl
cmp
lods
jge
cmp
rcll
sbb
in
mov
dec
sbb
call
push
inc
in
dec
outsl
push
adc
sbb
mov
mov
mov
dec
cmp
test
hlt
and
cwtl
fisubrs
mov
pop
ljmp
fsubs
cli
test
incl
jl
movsb
mov
mov
jbe
outsl
out
xor
aam
aaa
xchg
mov
jle
decl
je
rcl
stos
xor
adc
adc
and
shl
jg
fmulp
repz
clc
ret
adc
and
into
cld
ja
push
mov
jmp
into
cmp
fdiv
mov
cld
ret
lcall
jne
lock
jle
mov
xchg
fs
jecxz
xor
imul
adc
int
pop
jecxz
test
js
fidivrs
cmc
js
push
sbb
xor
jb
mov
cwtl
pop
fdiv
mov
mov
lcall
incb
fistpl
or
xchg
pop
pop
sub
xor
add
decl
arpl
lret
pop
rolb
mov
push
outsb
xor
in
or
int
ja
jbe
jo
or
jmp
into
aad
cmp
push
push
mov
stos
popa
push
popa
ljmp
int
jecxz
cmc
cmp
out
mov
pop
outsb
mov
mov
shll
cmc
add
das
insl
out
inc
mov
incb
pop
sbb
or
ljmp
daa
mov
ret
mov
gs
das
pop
leave
imul
push
js
dec
cmp
shrl
push
mov
and
shlb
ljmp
mov
outsb
es
insl
fxch
inc
outsb
lcall
mull
bound
push
cmp
nop
movsb
jne
movsb
lock
cmp
sbb
dec
pop
dec
and
ljmp
jbe
pop
jns
pop
xor
popf
xlat
aaa
scas
fcoms
aad
xlat
mov
jns
adc
push
mov
dec
cwtl
push
and
pushf
fcoml
in
jl
pop
mov
add
repnz
call
rcl
sbb
pop
stos
flds
adc
adc
iret
leave
lods
cmp
stc
imul
pop
outsl
xchg
jnp
pop
lods
ja
mov
outsl
js
ja
fildll
std
imul
or
fwait
insl
push
das
xchg
push
imul
jae
sbb
stos
ds
dec
rcll
dec
sub
out
clc
call
pop
pop
ss
repnz
into
lods
cmpsl
dec
in
mov
lea
lcall
lods
add
clc
sti
mov
outsl
fs
test
xchg
lcall
push
inc
test
shrl
pop
test
fcmovnbe
enter
cmpsb
sahf
or
test
ljmp
js
inc
pop
adc
call
pop
xor
shr
pop
pop
push
iret
test
in
cmpsl
lea
pop
lods
daa
mov
jmp
pop
test
sub
cs
push
cmp
xor
test
cld
ljmp
fldt
cltd
cmp
mov
movsb
jg
sub
push
mov
es
out
xchg
sub
in
xor
repz
aad
add
pusha
push
repnz
in
clc
pushl
mov
data16
hlt
lcall
xor
jecxz
push
inc
xorl
pushl
adc
adc
pop
inc
xor
mov
pop
imul
adc
cltd
cwtl
mov
inc
cmp
fisubrl
in
mov
lahf
sbb
lods
jmp
testb
gs
or
jmp
int3
xchg
test
les
roll
sub
inc
das
repnz
data16
in
mov
xchg
into
fstpt
add
mov
cmp
or
dec
cmpsb
cmpb
lock
stos
in
jae
dec
ljmp
fimull
and
rcll
cmp
adc
cmc
ret
in
adc
add
decl
sbb
rolb
adc
mov
cmp
mov
ljmp
dec
mov
jns
popf
sub
adc
fisubrl
mov
jne
mov
decl
mov
js
adc
aad
or
jle
inc
add
lods
sbb
jmp
xor
out
stc
lret
in
dec
clc
out
adc
and
add
scas
jg
add
xchg
dec
mov
testb
mov
ljmp
pushf
imul
mov
insl
inc
xor
sahf
subl
pop
jg
ljmp
shll
pushf
fisubrl
div
inc
xlat
xchg
inc
pusha
jmp
cmp
pop
int3
and
sub
scas
push
jle
repz
xor
call
loopne
adc
imul
fwait
pop
mov
push
das
lret
or
les
sub
inc
les
push
mov
lcall
lods
scas
jle
ret
push
ja
cmp
pop
test
test
inc
and
mov
sahf
testl
cld
push
ret
mov
jle
sub
in
mov
inc
scas
xor
xor
decl
dec
lret
cmc
adc
clc
cmp
add
sbb
ja
test
das
clc
aaa
pop
cwtl
out
xor
xchg
clc
call
mov
fistps
sub
xchg
dec
imull
out
clc
lcall
push
ja
fucom
fisttps
stos
into
inc
sub
sarl
xor
decl
lock
mov
icebp
imul
test
int3
xchg
mov
mov
pop
ret
add
xchg
orb
dec
test
inc
sbb
adc
in
sub
sahf
adc
leave
fistpl
sbb
dec
push
push
and
test
repnz
or
inc
push
lcall
int
adc
inc
jmp
stos
or
xchg
push
cltd
ljmp
push
test
std
lock
scas
out
and
sti
ret
push
jl
or
inc
or
and
pop
stos
fsubrp
jg
lahf
sbb
cmp
cld
jmp
and
push
or
sahf
fstps
stos
pushl
and
fnsave
in
adc
inc
or
mov
in
call
popf
scas
pop
scas
push
cmp
loope
dec
cmpsl
mov
call
cmp
adc
jmp
addr16
out
test
mov
push
lret
popa
cmp
push
out
jae
lcall
pusha
mov
add
sbb
push
test
les
adc
cld
lret
mov
ljmp
rcrb
dec
or
jbe
push
adc
in
test
dec
push
pushl
cld
fwait
enter
test
sub
popa
dec
addr16
cmp
test
loopne
shr
add
inc
inc
and
call
mov
imulb
ror
in
sub
push
cmp
cltd
jnp
mov
dec
mov
jmp
push
push
xchg
mov
or
arpl
cmp
cmp
das
fcoml
vmovdqu
test
sub
jo
mov
xor
sbb
push
lret
push
mov
in
call
mov
and
adc
pop
mov
fidivrs
cmpl
fbstp
test
int3
out
inc
sahf
cmpl
jnp
aas
lcall
push
lods
mov
lcall
xlat
mov
add
popa
push
xchg
xchg
aad
pushl
inc
jno
cs
inc
jns
cmp
cmpsb
cwtl
hlt
call
int3
xchg
xor
lcall
lcall
aam
popa
stos
add
orb
leave
cmp
xchg
mov
hlt
dec
loop
cmc
int3
insl
incl
nop
ret
cltd
inc
jo
lds
sbb
cltd
inc
sarl
pusha
repnz
rcll
incl
mov
je
sub
enter
imul
sub
test
test
fcos
lcall
cld
cmp
mov
pop
pop
and
xchg
dec
and
mov
mov
and
xchg
sbb
adc
loope
ljmp
cmc
adc
mov
sub
push
adc
sub
cmpsl
pop
inc
aad
call
imul
inc
fists
fcoml
divl
sbb
push
jg
and
outsb
jp
daa
adc
repz
and
lods
sbb
pushl
xor
lods
aam
pusha
mov
aam
imul
stc
adc
add
sarb
mov
add
xchg
mov
pushf
es
adc
cmpsl
dec
adc
push
cmp
insb
inc
test
jg
add
bound
mov
scas
jb
daa
and
mov
ljmp
mov
je
fsubl
outsb
adc
mov
jb
cmp
lcall
mov
incb
adc
xor
inc
jae
mov
jge
inc
stos
xor
mov
subb
add
inc
or
inc
mov
adc
lcall
xchg
out
je
mov
inc
push
pop
sub
mov
or
add
jns
incl
repz
fistpll
lret
pop
xor
addr16
lea
call
ret
or
mov
jmp
loop
dec
inc
push
test
push
lods
adc
pop
push
and
sub
incl
std
jp
push
sub
movsl
mov
jge
popf
ds
movsb
fsubrl
fcmovnb
rcrl
adc
gs
mov
sub
out
test
mov
mov
lcall
inc
loope
decl
in
out
repz
inc
cmp
jge
pop
div
in
xor
pop
and
call
jl
icebp
enter
movsl
rcrl
mov
imul
xor
subb
scas
call
insb
fs
cmp
fdivr
mov
inc
add
fadd
sbb
andl
mov
mov
pop
adc
lcall
shl
dec
movsl
inc
divl
mov
imul
rcl
add
inc
and
sbb
jns
incl
adc
adc
out
lods
ret
fistps
add
test
and
ds
add
call
add
push
and
pushf
lock
outsb
push
lods
and
dec
outsb
lods
sub
loop
insb
ljmp
incl
or
mull
inc
testb
jecxz
mov
insb
addb
adc
cmpsl
lock
lock
inc
das
add
rcll
and
rep
mov
lods
or
test
pop
cmc
pushl
adcb
mov
mov
lods
sbb
mov
std
adcb
jp
adc
ficomps
repnz
or
scas
add
fs
mov
incb
jbe
jno
cld
cld
out
test
mov
mov
lds
and
out
insl
mov
jns
insl
ret
jecxz
mov
push
call
xlat
daa
pop
arpl
push
mov
xlat
mov
les
jg
ljmp
inc
pop
mov
movsb
or
lea
fisubrl
or
cmpsb
pop
fimuls
fcomip
ljmp
xor
inc
pop
and
mov
pop
jg
pop
cmp
outsb
xchg
pop
loopne
xchg
rolb
ss
stc
es
scas
sub
fcomip
cmp
xor
dec
in
inc
int3
push
jb
orl
xor
ret
lea
out
inc
push
fdivrs
dec
in
cmp
enter
mov
and
push
popf
add
subb
ja
aad
jg
jmp
ss
sbb
mov
and
sbb
decl
cmp
fiaddl
mov
and
xor
dec
cmpsb
int
adc
fbld
mov
lcall
outsb
jmp
inc
cmp
push
cmp
decl
orl
mov
sub
loope
in
jle
jbe
loope
movsb
inc
leave
lock
dec
add
cmp
roll
mov
xchg
cmp
in
mov
jo
test
outsl
clc
push
add
mov
fbld
sub
push
shrb
mov
mov
stc
inc
add
inc
dec
aad
sub
mov
arpl
xor
ljmp
mov
cmpsl
in
js
xchg
in
icebp
mov
lcall
out
push
mov
ja
repnz
and
inc
icebp
mov
pop
mov
cli
or
in
cmp
mov
outsl
into
cmp
push
or
in
adc
sti
pop
mov
in
sbbb
test
pop
xor
mov
loop
in
push
fstps
test
fidivl
incl
clc
shll
cwtl
jmp
xor
add
cwtl
xor
and
mov
jmp
js
int
mov
jbe
xchg
enter
fcomps
das
cmpb
data16
loopne
ret
push
ljmp
push
cld
xchg
fdivl
int3
xchg
xchg
xchg
addb
stos
call
cmp
and
adc
sbb
sbb
cld
xor
dec
ja
mov
fisubrs
jg
mov
fidivrs
sub
xlat
loope
jmp
pop
stc
mov
es
insl
mov
lds
xchg
or
push
ret
pop
cmpsb
jge
jmp
out
dec
mov
jge
icebp
cmpb
es
into
hlt
fs
je
pushf
xchg
out
cmp
call
aas
xchg
xor
mov
xchg
outsb
sub
dec
or
movsb
outsl
aas
lcall
fs
popa
xor
mov
push
enter
xor
div
iret
aam
bound
les
ficomps
aas
sti
in
gs
cmpsb
std
fcomip
cmpsb
es
test
in
gs
pusha
mov
outsl
leave
hlt
ss
xchg
mov
ffreep
fs
xchg
aaa
and
cmpsl
mov
cmpsl
in
jle
incl
insb
daa
add
and
mov
adcb
pop
lcall
aas
loop
lds
mov
push
pop
xor
cmc
lret
add
xchg
mov
mov
inc
jns
mov
jecxz
call
mov
fidivs
sub
inc
outsb
cmpsb
add
sbb
cmp
or
jmp
outsl
push
mov
xor
inc
les
mov
pop
dec
rolb
mov
insb
sbb
or
sbb
cmp
jmp
mov
xor
aad
push
mov
testb
shrb
lds
xchg
pushl
shrb
ficoml
fs
testb
out
inc
int
mov
out
outsb
xor
sbb
cmp
call
insl
push
and
test
scas
sbb
mov
mov
push
out
pop
sbb
bound
jle
fildl
mov
call
xchg
into
mov
mov
xor
pushf
add
cwtl
sub
iret
dec
movl
ret
stc
sarb
push
ljmp
into
sbb
mulb
cmp
outsb
nop
cmp
pop
nop
cli
sbb
sbb
in
mov
call
ljmp
mov
mov
insl
loopne
stos
rolb
fdivl
adc
ficompl
divl
sbb
sbb
call
inc
lods
jb
cmc
dec
lret
lods
out
clc
out
xchg
call
sbb
decl
jecxz
roll
lock
pop
dec
subb
cmp
mov
lea
add
or
dec
clc
leave
insb
mov
mov
cmp
pop
out
xchg
outsb
xor
cmp
ljmp
out
jb
fmuls
sbb
pop
mov
icebp
mov
push
ret
dec
mov
mov
shrb
dec
sbb
mov
inc
idivb
push
xchg
scas
cmp
or
xor
imul
aam
insl
and
pop
mov
sahf
adc
jo
stc
inc
loopne
push
scas
or
ljmp
repnz
lock
adcb
inc
call
repz
testl
ljmp
dec
push
inc
add
out
mov
and
push
mov
mov
cwtl
dec
pop
dec
cmp
dec
call
enter
xor
cmp
pushl
jns
adc
push
jae
scas
sub
sub
push
lock
mov
ljmp
add
movd
xchg
or
lcall
inc
test
dec
stos
in
mov
pushl
mov
movsb
xlat
jmp
or
push
cmc
cmpsb
lcall
scas
cwtl
dec
popf
shll
lods
xor
cmp
rcrl
ds
repnz
inc
mov
mov
aaa
mov
arpl
call
mov
clc
sub
dec
shr
jnp
mov
sub
in
addr16
outsl
sub
nop
sub
push
test
mov
jb
dec
adc
decl
or
mov
out
outsb
and
popa
out
in
outsl
bound
hlt
push
mov
inc
jno
sahf
ds
and
push
sub
push
push
dec
fsubrl
call
filds
mov
arpl
je
jl
mov
push
jmp
mov
adc
loopne
in
mov
push
ss
incb
addb
outsb
js
je
out
adc
mov
xor
sub
xchg
push
ret
jmp
or
outsb
pushf
mov
rorb
mov
insb
adc
mov
gs
test
mov
lcall
test
ja
mov
sub
fmul
jae
inc
mov
mov
movb
ljmp
mov
jg
fadd
sub
ret
jg
sti
outsl
js
mov
pop
inc
cmpsb
and
mov
imul
incl
test
dec
scas
shll
nop
inc
cmp
pop
loope
pushl
sbb
cmc
ss
xor
add
push
jne
jne
popa
mov
outsl
clc
push
mov
lods
nop
idivl
js
test
push
ret
sub
fcomip
icebp
outsb
mov
adc
test
test
mov
aad
incl
hlt
sbb
or
push
rol
xchg
outsl
clc
pushl
icebp
mov
les
cmp
fwait
popl
clc
scas
jg
jne
ret
pop
sub
or
lcall
dec
cmpsl
add
adc
and
mov
gs
sti
jmp
andb
push
clc
dec
xor
mov
leave
call
cltd
xchg
pop
cld
sub
call
lods
inc
jbe
cmp
xor
mov
into
jle
xlat
xchg
es
faddp
lea
jns
dec
loop
mov
clc
pop
cmpsl
mov
sbb
cs
call
aaa
or
aam
jae
mov
push
xchg
jae
imul
mov
lds
inc
and
dec
inc
imul
lret
testb
add
xchg
sbb
ret
hlt
inc
jecxz
cs
std
lahf
sbb
xor
sub
iret
mov
adc
dec
dec
push
daa
neg
and
push
loopne
or
mov
iret
push
orb
push
mov
sbb
lahf
shlb
mov
decl
incl
dec
or
out
xor
mov
mov
and
sbb
mov
sub
mov
jne
je
or
push
xlat
mov
fists
lahf
or
call
rcr
sub
sub
adc
sub
shlb
mov
insl
insl
fisubl
mov
adc
push
in
and
decl
pop
jno
aam
es
pop
imul
lock
cmp
enter
fisubl
repz
dec
sbb
mov
sub
inc
call
subb
ljmp
inc
mov
sub
lock
bound
stos
ja
pushl
mov
lock
int3
loop
test
jecxz
and
cwtl
cmpsb
lock
cs
mov
mov
jmp
jae,pn
xor
int3
sar
in
decl
sub
mov
loop
cmp
inc
jbe,pn
sar
sti
mov
jl
inc
imul
in
pushl
jge
ds
cmp
mov
in
loope
cltd
in
jp
ret
call
inc
or
jb
js
jp
add
jae
bound
cmpsl
mov
pushl
aad
lods
inc
mov
cmc
add
pushf
ret
and
imul
mov
lods
cmpsb
jle
call
push
push
outsl
xchg
mov
decl
lods
aaa
dec
smsw
jmp
mov
sti
in
iret
icebp
jo
ret
sub
call
cmpsl
pop
inc
cmp
pop
aas
arpl
punpckhbw
mov
sbb
loopne
jg
lcall
out
xchg
cli
movsl
inc
out
sbb
das
repz
ljmp
mov
cli
dec
ljmp
repz
shll
inc
sti
ja
into
mov
xor
mov
ljmp
jns
cltd
mov
cmp
loop
ljmp
mov
cld
sarl
or
or
psrad
mov
xchg
inc
sbb
xchg
cmp
or
data16
jmp
xor
scas
lea
out
adc
or
mov
push
repz
push
push
cmp
dec
mov
mov
sub
testb
decl
mov
daa
adc
xchg
fistpll
stos
xchg
xor
xchg
add
push
sti
jge
mov
les
pushl
cltd
sti
int
adc
imulb
xchg
sti
negl
or
inc
xor
pop
incl
aam
inc
fs
lods
gs
push
mov
push
inc
inc
testl
ss
pop
sti
mov
cld
incl
push
xor
xor
xchg
adc
lret
xchg
xchg
ret
lods
clc
incb
incl
out
sbb
out
cli
jns
add
xor
out
mov
mov
les
mov
ljmp
dec
mov
imul
daa
mov
scas
jnp
inc
mov
hlt
sub
mov
adcl
or
jo
clc
repz
ss
outsb
inc
mov
sub
mov
hlt
cmp
cmp
sub
les
jge
xchg
loopne
enter
mov
inc
inc
or
push
xchg
pop
test
das
clc
mov
fucomip
mov
insl
scas
push
insl
into
jo
mov
mov
fistps
cli
jbe,pt
subb
in
popf
mov
sub
sar
jns
add
or
clc
xchg
and
inc
les
mov
push
dec
add
jle
mov
inc
sub
je
out
mov
push
sub
push
incl
adc
xchg
test
mov
xchg
scas
std
imul
ss
movsl
das
pushf
pop
inc
call
jp
mov
xor
pop
mov
out
jge
and
cmpsb
lcall
fstpt
fwait
mov
mov
je
mov
movsb
or
mov
imul
rorb
or
sti
or
push
lds
pop
adc
xor
and
enter
ret
or
mov
xchg
call
ffreep
pop
xchg
push
cmp
cmp
outsl
mov
jns
out
cli
decl
pop
testl
mov
and
sarb
sti
incl
loopne
mov
imul
stos
fistps
push
mov
mov
or
loope
inc
dec
push
fsubp
pop
dec
cs
orb
add
stos
or
cmp
jmp
pop
jp
cmp
pop
enter
mov
fwait
jae
inc
data16
cmpsb
int3
pushf
gs
fistl
and
data16
out
aad
sub
mov
aas
push
pop
out
data16
rcrb
add
mov
aas
pop
mov
mov
adc
sbb
xchg
fs
jnp
xor
ja
mov
jp
shl
jmp
out
mov
lds
push
jp
fisttps
outsl
addr16
lods
jge
loopne
or
mov
mov
mov
sub
push
aaa
xchg
sub
xchg
sbb
jne
call
mov
das
clc
push
scas
mov
lret
push
call
cmp
inc
imul
fcomip
pop
mov
pop
push
dec
pop
lds
mov
add
cmc
scas
loop
fcomip
ljmp
fsubrl
or
aam
xchg
ss
je
insl
and
loop
cmp
jecxz
dec
scas
jmp
lock
mov
add
and
jne
cld
ljmp
inc
not
xchg
js
dec
and
fldenv
nop
lcall
jge
out
xchg
jecxz
decl
std
cltd
adc
push
sub
or
mov
sbb
and
clc
stos
es
sbb
add
push
xchg
and
daa
push
idiv
push
adc
jmp
fsubp
scas
out
iret
mov
decl
dec
leave
aaa
push
xor
in
out
mov
test
test
mov
mov
out
push
in
lds
test
or
outsl
dec
xor
cmpsl
jmp
lret
jmp
fists
sbb
ljmp
lahf
fidivs
sub
pop
in
fldt
pop
es
inc
popf
xor
test
cmc
push
scas
mov
int
sub
loope
pop
call
aam
inc
pop
clc
ret
loop
rorl
add
pop
dec
sub
lea
pop
mov
in
mov
mov
sbb
sbb
lods
lcall
aam
or
ret
lcall
adc
dec
rorb
sbb
or
movsl
mov
xchg
rclb
inc
mov
add
pop
push
adc
jnp
fwait
dec
outsl
xchg
xchg
pop
inc
pop
rep
mov
push
jbe
push
jns
outsb
lock
fistps
mov
and
jns
or
dec
pop
into
xchg
mov
push
mov
cltd
movsb
or
mov
ljmp
jo
jl
incl
push
pop
dec
xor
adc
or
mov
and
pop
sbb
and
std
cld
stc
rcrl
bound
outsl
jmp
mov
imul
jne
xchg
lcall
mov
scas
insl
cltd
adc
jbe
mov
push
lcall
lahf
jb
test
addl
jns
inc
inc
inc
cs
add
pushf
jbe
outsl
mov
dec
jecxz
mov
xchg
inc
sub
js
xor
dec
mov
xchg
jns
sahf
adc
ja
pop
fs
in
call
push
aam
sbb
jmp
arpl
push
pusha
ret
push
mov
pop
in
hlt
test
dec
ret
cmc
call
inc
shrl
imul
or
push
ljmp
movsl
fs
jg
je
mov
cltd
xor
dec
jns
xchg
mov
mov
mov
pushl
into
xor
lea
sub
inc
ljmp
cmp
je
mov
outsb
fst
adc
in
cmp
sub
ljmp
mov
mov
lcall
imul
loope
pusha
in
ds
or
notl
push
adc
fstpl
jns
loope
mov
out
and
scas
ds
shlb
push
adc
pop
adc
fcoms
mov
mov
roll
sub
ljmp
ud0
lock
int
call
lcall
shrl
call
xor
inc
mov
sub
and
enter
test
jl
ljmp
test
testl
lcall
pop
int3
mov
pop
xchg
ljmp
mov
dec
mov
test
add
scas
imul
mov
incl
scas
pop
data16
adc
decl
jge
jno
inc
add
sbb
mov
inc
fildl
leave
sub
ret
fstpl
dec
xor
xlat
xor
stos
rorb
pusha
xchg
sbb
into
stos
sbb
mov
pop
dec
ret
mov
std
lods
pop
xchg
lret
push
mov
rclb
js
sub
mov
sbb
pushl
push
rclb
xchg
das
clc
push
jb
pusha
or
mov
aas
inc
push
jo
jp
mov
mov
cmp
cmpb
xor
mov
int3
cmp
lahf
jge
incl
pop
mov
push
daa
pop
xchg
mov
adc
push
sub
push
lcall
jno
rcrb
fldt
and
fadd
ja
cli
fiaddl
mov
pop
dec
mov
pop
mov
xchg
mov
hlt
jg
jo
and
in
ljmp
js
dec
cmp
mov
ljmp
sbb
add
scas
push
pcmpgtw
cmp
pop
aam
xor
decl
ljmp
mov
shrb
and
popa
ret
or
out
fistl
mov
decl
cmp
jecxz
iret
lods
xchg
pop
leave
std
pop
adc
in
decl
mov
mov
fcoml
sub
push
mov
jp
pop
mov
and
dec
sbb
sbb
loope
xchg
jg
call
or
mov
sub
shll
shlb
push
call
imul
int
test
test
dec
jo
je
fildll
loope
pop
out
inc
cmc
and
sarb
movsl
insb
lods
mov
lret
pushl
push
cld
sub
pop
lahf
roll
jecxz
and
xor
jae
inc
enter
lcall
roll
mov
dec
and
imul
mov
dec
pop
frstor
pop
lock
ficompl
mov
dec
daa
mov
pop
jmp
ret
into
imul
hlt
lcall
mov
sbb
shlb
out
push
xchg
xchg
pop
and
leave
cli
cmc
repz
out
xchg
push
jl
fmull
inc
into
add
decl
dec
dec
push
ja
xchg
and
adc
add
mov
aas
idiv
lcall
mov
cmp
sub
sbb
and
mov
aas
cltd
mov
loop
test
jmp
cmp
fisubrs
imul
pop
pop
sbbl
adc
mov
out
xchg
ss
jmp
test
iret
movsl
pop
add
pop
rclb
lcall
ds
cmc
jne
mov
jle
push
push
jne
adc
decl
xchg
stc
pushw
cli
cmp
cwtl
adc
aam
or
inc
xchg
loopne
pop
ss
sub
ds
movsl
pushl
fdivl
mov
mov
shlb
sbb
inc
pushw
mov
add
mov
sbb
xor
les
xchg
sub
in
outsl
jle
or
cmp
out
bound
mov
rcll
push
jmp
cli
addr16
mov
movsl
fs
jmp
mov
mov
lahf
sub
lret
aaa
ss
data16
fnstcw
pop
pop
add
cld
jnp
in
pushf
in
mov
iret
call
and
jb
xor
js
in
push
mov
jge
inc
sbbb
xorb
inc
inc
mov
push
scas
xchg
sub
pop
push
fiaddl
mov
or
push
push
xchg
cmp
fsts
push
roll
icebp
pushl
push
xchg
mov
inc
mov
jp
pop
in
fimuls
xlat
cld
push
aaa
std
ffreep
fs
push
aad
push
pop
or
xor
cmp
incl
fiadds
sbb
add
negb
inc
ds
jb
push
mov
cmp
mov
pop
add
fistps
mov
inc
push
idiv
push
add
incl
into
jp
mov
outsb
out
jg
pop
and
int
mov
and
cmp
adc
cltd
test
in
mov
cs
push
mov
cmp
pop
fs
jne
push
or
sbbb
pop
enter
insl
push
inc
popa
icebp
add
cld
ljmp
push
sub
xor
dec
test
cmp
ljmp
je
lahf
imul
rcrl
lds
and
or
incl
push
aas
mov
cltd
mov
loopne
call
mov
lret
jo
jl
jno
nop
mov
dec
mov
lods
push
movsl
incl
jbe
leave
adc
ret
lcall
int
xor
xorb
test
lcall
pop
jmp
movsb
add
push
mov
mov
push
jmp
xor
mov
js
cmp
outsl
xor
jae
add
out
cs
push
repnz
sub
mov
xor
pop
mov
sbb
test
popa
pop
add
mov
incl
addl
pop
test
push
mov
and
hlt
lret
stc
mov
std
inc
mov
fimull
add
test
push
dec
popf
push
jmp
xor
pusha
inc
or
int
push
imul
push
cli
decl
pop
pop
rcrl
jo
sub
das
test
subl
jl
ljmp
cmp
lods
and
test
outsb
and
push
xlat
das
jbe
ret
decl
and
jno
jne
or
sub
popf
ja
add
adc
sbb
or
test
add
mov
shr
pushl
mov
fsubrp
inc
negb
dec
mov
sbb
pop
cmp
mov
aaa
mov
ljmp
mov
nop
and
push
lret
fbld
mov
xchg
push
ret
in
and
fidivs
adc
jmp
mov
je
or
or
adc
sub
cmp
sub
inc
jmp
ret
push
jb
adc
into
out
push
push
cltd
jno
testb
mov
idivb
int
pusha
fildl
lea
popf
lahf
inc
cmpsb
add
cli
inc
sbb
xor
pop
mov
mov
mov
push
pop
imul
in
sbb
ffree
ljmp
popf
int3
jge
cmc
push
fs
lock
fisubs
jnp
out
mov
inc
push
pop
cmp
test
fwait
inc
insb
jmp
inc
push
pop
mov
nop
test
fiadds
mov
push
mov
mov
cs
inc
push
jo
push
es
xchg
cmp
or
adc
rcl
ljmp
lahf
and
js
lret
les
es
ljmp
bound
mov
mov
dec
pushf
sbb
xchg
sbbb
xchg
aam
ljmp
mov
fwait
pop
mov
mov
ret
mov
ficompl
lcall
pushl
and
push
xor
lret
fdivl
xlat
xor
js
loop
outsl
adc
mov
ret
incl
cmp
test
xchg
mov
outsl
test
xchg
lret
outsb
add
xor
mov
cmp
out
push
pop
lods
ficompl
int3
cmp
dec
pop
push
pop
dec
xchg
cmp
ljmp
clc
ror
dec
in
push
add
dec
dec
rorl
add
test
test
call
in
int3
insl
and
jecxz
js
sub
sub
lret
in
ljmp
nop
roll
push
pop
push
xor
xchg
push
lock
cmp
jns
dec
lds
decl
jb
idivb
test
mov
call
sahf
imul
mov
xchg
mov
and
jne
pop
mov
in
sbb
negb
mov
ljmp
clc
lahf
mov
push
shrb
ret
mov
dec
push
ljmp
addr16
and
mov
dec
in
loope
popa
cmp
mov
adc
inc
xchg
outsl
gs
pop
iret
jl
mov
shll
lcall
std
int3
in
out
jae
aad
push
aam
cs
cs
repnz
out
sub
test
dec
jp
push
mov
xchg
add
xor
cs
mov
sbb
int3
in
lcall
inc
iret
mov
cwtl
sbb
pop
out
push
aas
mov
inc
push
outsl
ret
test
bound
xor
lods
inc
mov
xchg
fisubl
xor
add
mov
outsl
add
incl
cmp
inc
loopne
dec
pop
bound
inc
mov
ds
movsl
imul
mov
jb
mov
jmp
pop
push
lea
icebp
inc
jb
ret
xchg
mov
jmp
lods
lea
lahf
or
mov
data16
int3
cmp
jmp
stos
mov
add
decl
js
adc
sbb
jle
lret
std
add
out
arpl
mov
sarb
dec
pop
les
mov
call
jg
mov
push
mov
stos
sar
cs
push
into
clc
ljmp
sbb
mov
xor
jmp
sbb
mov
int3
mov
xor
pushl
jno
in
jg
idivl
push
add
inc
pop
jb
adc
push
and
sar
mov
repz
jecxz
data16
divb
faddl
les
cli
jl
adc
xchg
into
sub
lahf
or
loope
push
clc
pop
pop
ficompl
cmp
fildl
xor
int
inc
or
rclb
dec
subb
pop
movsb
mov
mov
xchg
mov
add
jle
fstl
rclb
cmpsb
dec
and
mov
cld
sub
push
dec
or
ds
mov
pop
jg
mov
mov
xlat
clc
insb
lret
lcall
jne
inc
xor
cmp
push
lods
inc
stos
mov
pop
push
nop
inc
dec
mov
dec
ja
jmp
push
push
arpl
dec
jo
cmpsl
out
mov
insb
pop
loop
out
xchg
push
mov
cmp
call
and
pop
jo
loopne
scas
jmp
sub
sbb
sti
sub
in
pushf
pop
mov
cmp
loop
xor
inc
sbb
and
pop
add
out
je
aaa
lcall
jl
jecxz
mov
inc
adc
jbe
cmc
add
aad
shrb
test
dec
mov
push
pushf
leave
adc
sbb
rcr
gs
mov
mov
mov
mov
jns
pop
push
mov
jne
jae
fs
outsl
lret
push
ds
lcall
push
nop
xlat
push
push
cmc
push
cwtl
xor
mov
iret
mov
jae
xor
jmp
pop
mov
cmpsl
mov
pop
push
jno
add
push
lods
rep
aad
xchg
enter
ja
xor
push
out
push
inc
xchg
mov
mov
lcall
push
in
lods
mov
adc
fdivrl
mov
popa
fwait
or
lahf
sbb
ljmp
jne
cli
and
dec
ret
push
add
out
add
mov
popf
cmovge
mov
ljmp
jae
aad
int
sbb
mov
xlat
loope
pop
push
jle
lods
cmp
jg
inc
bound
and
xchg
je
and
test
ja
pop
push
jo
cli
cmpsb
jg
into
lret
loop
adc
mov
aad
ljmp
pop
fwait
icebp
adc
sti
mov
pop
insl
rorl
fadd
in
insb
je
pop
cmp
incl
push
sub
mov
jb
or
jb
sbb
mov
call
jg
fisttpll
add
mov
xor
bound
mov
dec
jne
push
loope
ljmp
jle
fildl
addr16
mov
xor
lret
mov
fbld
jle
rcrb
ret
pushf
mov
sbbb
mov
out
sar
mov
out
aaa
jle
shl
push
inc
out
cld
mov
add
popa
push
int3
sbb
jnp
decl
push
test
or
push
jmp
out
jmp
pop
sbbl
je
in
out
cs
mov
xchg
add
jbe
inc
ret
icebp
jl
jp
call
xlat
cmc
pop
aad
repnz
or
jns
xchg
insl
js
jmp
sub
sar
lcall
je
pop
push
clc
xchg
mov
bound
jp
sbb
dec
jge
jg
das
movsb
pop
arpl
rcr
aam
orb
pop
aaa
int
jno
lcall
sar
out
jno
pop
sti
xorl
gs
or
in
je
aas
fnsave
movsl
lcall
xchg
cmpb
and
xorb
sbbl
adc
decl
dec
aad
iret
sahf
mov
das
inc
lret
and
xchg
pop
ja
mov
jno
mov
ljmp
sbb
adc
lea
mov
rcrb
lea
shlb
testl
cmc
inc
mov
rorl
ds
out
stc
sbb
jno
in
sbb
or
and
decl
mov
arpl
test
out
icebp
popa
or
repnz
xor
xor
inc
std
mov
add
dec
jg
out
repz
mov
inc
insl
lahf
xchg
add
ds
std
js
test
pop
and
hlt
add
lcall
xor
fmuls
mov
testb
inc
mul
jb
aad
outsl
cmp
jmp
dec
mov
sub
ret
test
mov
push
mov
fs
sub
or
lods
pushl
sub
push
hlt
xlat
mov
outsb
mov
test
or
mov
clc
das
sar
cmp
lahf
mov
js
mov
incl
jg
dec
test
in
pop
mov
das
je
movsb
jno
and
adc
pushl
sub
add
push
pushf
cwtl
cwtl
in
outsl
xchg
fisubs
movsb
and
pop
mov
inc
outsb
leave
push
jne
pop
mov
inc
subb
sbb
stc
je
pop
mov
jne
call
decl
push
scas
jg
pushf
or
push
lds
jno
loope
jno
rcrb
mov
sub
pop
hlt
pushl
nop
lods
and
xchg
sub
frstor
inc
cmp
int
ljmp
shrl
or
sarb
jge
dec
lea
sub
mov
mov
mov
mov
outsl
aam
mov
adc
lcall
clc
mov
flds
movsb
push
mov
jno
fwait
xlat
cmp
jo
out
xor
mov
mov
jb
loopne
call
pop
dec
shll
out
roll
out
pushl
xor
xor
lock
sahf
add
add
in
cmp
jl
sbb
call
cmpsl
sbb
sub
jmp
push
add
jns
movsb
mov
pop
ret
adc
jo
clc
add
push
icebp
adc
test
jmp
lcall
xor
dec
iret
adc
jbe
les
mov
fs
lahf
mov
push
mov
mov
pop
pop
test
call
es
sti
sub
mov
fildl
sub
mov
jne
incl
les
sbb
test
cmp
or
out
movsb
aam
pop
out
pop
out
sbb
cld
inc
xchg
in
push
data16
adc
inc
pushf
enter
orb
jecxz,pt
push
data16
stc
and
scas
cli
push
jg
daa
pop
jo
sbb
lahf
pop
adc
lahf
jbe
mov
mov
dec
mov
sbb
outsl
jno
push
loop
mov
mov
cmp
iret
pushf
hlt
push
push
xor
sub
das
push
push
or
js
sub
cmp
jb
jbe
rorb
loopne
dec
bound
or
ja
lcall
jae
ss
cli
pop
pop
das
loop
pop
scas
test
push
sbb
dec
xchg
push
and
enter
lcall
mov
xchg
repnz
cmc
pop
inc
cld
repnz
pop
test
pop
sub
jg
jecxz
mov
push
fimull
sub
mov
xchg
imull
sbb
add
dec
ret
adc
ja
ja
jge
rcrb
jg
aas
lret
lcall
and
push
lret
mov
mov
idivb
test
pop
adc
sub
adc
xchg
ss
cld
jecxz
das
shl
jg
data16
dec
mov
jmp
xor
cld
enter
leave
and
fiadds
js
inc
pop
cmpsl
add
ds
into
or
mov
cmpsb
rclb
imul
or
jp
dec
clc
cli
push
jae
mov
scas
adc
dec
sti
push
dec
test
pop
mov
push
and
adc
and
iret
mov
jmp
shl
rorb
dec
sbb
mov
jns
or
xor
mov
xchg
pop
aas
int3
movsl
sub
aam
es
sub
das
inc
ljmp
inc
dec
push
ja
lcall
push
dec
xchg
ror
cmc
adc
jbe
shlb
incl
xchg
dec
sbbl
cli
lret
pusha
loopne
xor
cli
shl
fnclex
aad
xor
xor
or
gs
mov
sarl
fcomip
mov
cmp
cmp
sbb
mov
push
xor
aas
sti
sbb
shrl
xor
add
mov
pushl
xor
shll
testl
inc
sub
lcall
jne
xchg
cmpsl
int3
xor
mov
pop
or
xchg
jnp
dec
mov
add
ljmp
mov
push
icebp
outsl
adc
iret
jle
push
pop
push
mov
and
ljmp
loopne
adc
add
xchg
je
test
or
mov
sub
push
xor
ljmp
iret
aas
sbb
and
sub
into
addr16
fbstp
ss
int
jo
lods
mov
push
xor
jg
data16
add
pop
inc
pop
rol
pop
fistl
ss
mov
fadd
mov
cmp
imul
rcrl
add
sahf
cmc
out
jecxz
push
inc
fistpl
shlb
adc
bound
call
movb
mov
cmpsb
xor
pop
les
fsubrl
mov
dec
shlb
aad
sbb
inc
and
inc
aam
dec
or
dec
xorb
ja
movsl
inc
ror
call
ret
cmc
xchg
jle
call
lods
jp
in
std
xor
jg
lret
push
push
adc
mov
rcrb
jmp
movsl
dec
and
bound
xlat
jns
aad
mov
enter
jg
push
inc
sti
add
pushl
dec
or
call
jno
add
insl
ja
pop
scas
andb
xchg
pusha
pop
ljmp
call
sbb
and
jmp
add
fcmovnbe
jne
lods
pop
stos
pop
call
push
fcompl
jge
push
mov
xchg
pushf
inc
in
pop
dec
jle
out
inc
push
sti
cmp
lcall
dec
nop
jno
lods
or
add
iret
push
cmpsl
mov
dec
jle
and
fsubl
cmp
ljmp
sti
dec
sti
mov
shl
mov
mov
loopne
inc
jle
sbb
decl
xor
xchg
mov
cwtl
dec
test
mov
lcall
pushl
rorl
lea
jl
xchg
mov
insb
ret
ljmp
daa
lcall
icebp
push
sahf
ss
xchg
pop
xor
adc
pushl
add
cs
push
icebp
clc
cmp
mov
inc
sbb
jge
out
push
lock
les
lahf
mov
jge
lcall
call
xchg
ds
mov
push
rcl
imul
adcl
push
xor
fcomip
jmp
outsl
sub
cmp
pop
out
dec
in
ss
int3
jge
dec
rol
xor
inc
clc
aad
xchg
ds
sbb
loop
je
jle
lods
sahf
or
lret
mov
adc
mov
loop
or
jno
jmp
jge
popf
adc
in
test
sbb
mov
icebp
cltd
jp
inc
call
inc
int3
or
push
fs
mov
jb
jb
mov
incl
pusha
sub
push
icebp
jge
xlat
cmpsb
and
xchg
jle
movsb
cmp
pop
pop
cld
add
dec
xor
jle
and
dec
push
shll
jg
fsubrl
push
cmc
adcl
and
jbe
out
and
cli
outsl
mov
ret
mov
pop
push
ds
sub
ljmp
cmp
jnp
sahf
dec
aad
mov
push
orb
std
and
pop
lcall
add
mov
movsl
jmp
inc
test
out
fdivr
lcall
dec
dec
pop
lahf
test
push
mov
pop
mov
les
pushf
inc
xor
ljmp
jmp
ja
cmpsb
push
out
xchg
cmp
popl
scas
add
sub
test
std
ret
loope
jb
sbb
xor
lcall
and
lahf
lahf
jg,pt
je
leave
dec
xchg
jne
sbb
decl
jmp
cmc
and
adc
jge
stc
inc
lcall
and
incl
and
push
jge
jmp
and
dec
sbb
std
pop
in
es
cs
lock
mov
aas
mov
inc
push
data16
mov
jle
mov
shll
dec
push
nop
ret
xor
jg
lcall
mov
jg
mov
and
jl
in
mov
sub
push
adc
movsb
add
adc
inc
out
subw
cmc
aam
ja
jl
lods
cmpsl
jo
lahf
pop
arpl
dec
jge
lcall
rol
aad
push
insb
rcrl
frstor
push
pop
push
sar
xor
repnz
xchg
scas
clc
mov
sbb
push
mov
fistpll
js
scas
cmp
arpl
pop
mov
cld
mov
test
xchg
rcll
mov
inc
mov
cmp
or
repnz
lock
call
dec
lret
jl
sbb
call
cld
in
cmp
lock
lret
mov
ljmp
xchg
into
mov
add
jg
push
inc
inc
add
sub
or
test
sub
mov
mov
mov
jmp
mov
clc
mov
movsb
xor
jl
mov
push
jl
add
dec
ret
pop
daa
jnp
cmpl
pop
pop
sbb
mov
frstor
push
call
sub
mov
call
enter
jp
ljmp
or
and
pop
push
fs
pop
daa
sbb
ret
add
jecxz
jmp
inc
inc
mov
cmp
or
dec
xor
outsb
outsb
mov
jae
push
movsl
adc
lcall
in
mov
jae
dec
jbe
push
push
stos
sub
xlat
mov
or
inc
pop
movsw
jne
mov
int
data16
or
mov
cmp
mov
cwtl
insl
and
push
jl
add
rorl
inc
sbb
int
push
sub
pop
insb
in
sbb
or
mov
subl
jl
pop
xchg
and
jne
xchg
push
and
call
sub
mov
push
rcrl
dec
push
jle
dec
mov
push
fists
pop
mov
sarb
ja
pop
fildl
jmp
sbb
or
push
jl
jno
jb
repz
decl
sarb
fs
int3
xchg
popa
push
push
leave
rcl
mov
mov
jnp
cmp
xchg
ds
lcall
lods
sbb
mov
fwait
fs
mov
or
jno
in
jle
repnz
fcos
jmp
scas
cmc
lods
rcrb
fisttpll
orl
or
in
shrl
incl
repnz
lcall
ret
xchg
or
pop
scas
jnp
add
in
mov
dec
mov
mov
scas
scas
cmp
push
mov
fwait
movsb
inc
push
fs
lcall
int3
cmp
mov
push
ljmp
inc
hlt
into
lahf
mov
es
ficoml
and
xchg
adc
ljmp
pop
sbb
int
sub
test
inc
jnp
sub
push
and
cld
das
clc
in
pop
iret
out
jp
cltd
icebp
jp
or
push
cld
popf
push
dec
push
lahf
jg
incl
or
sti
dec
pushl
push
test
ljmp
int3
inc
jns
push
fimuls
mov
mov
add
sbb
jnp
mulb
fcomip
ljmp
jl
add
clc
cld
scas
ds
stc
or
faddl
clc
add
or
cmp
fdivrs
pop
jecxz
mov
or
vxorps
push
pop
cli
sar
incl
mov
pop
fidivrs
stos
cmp
leave
js
leave
mov
or
jg
and
or
bound
pop
leave
and
data16
push
iret
adc
add
sbb
cmp
push
add
lods
xchg
clc
adc
jbe
push
xor
or
pop
dec
mov
arpl
mov
sbb
mov
shll
int3
or
js
lods
cmpsb
pop
loopne
sar
mov
push
cli
xchg
inc
xorl
imul
dec
mov
jns
add
sbb
or
add
add
ss
call
xchg
int3
push
test
push
fstpl
add
push
call
and
push
or
push
xor
xlat
ljmp
mov
fs
push
popa
insb
int
nop
jp
dec
imul
shl
fcomps
inc
mov
xor
les
jbe
mov
outsl
sbb
lds
push
xchg
push
adc
dec
add
or
pcmpgtb
call
xchg
out
xchg
xchg
adc
xchg
dec
jge,pt
jbe
loop
mov
cmp
push
dec
mov
call
es
push
outsb
cmp
fnstenv
gs
mov
and
adc
mov
mov
and
sbb
bound
inc
jo
and
aad
cmp
lock
out
fs
dec
dec
cmp
mov
in
and
xor
lds
in
call
sti
enter
mov
jg
cld
jge
std
cmc
push
mov
sub
sub
imul
adc
data16
bound
lret
jge
scas
loopne
test
sbbl
mov
cmpsw
ffreep
sarb
ret
scas
insb
pop
mov
sub
xchg
lret
insb
jnp
push
xchg
inc
cmp
mov
imul
jp
inc
insb
lods
fdivp
in
aad
jae
data16
imull
int
pushl
lds
jp
shll
cmpsl
shlb
test
adc
inc
fists
pop
daa
and
push
lcall
or
push
dec
pop
jp
xchg
jnp
ljmp
fs
jnp
call
push
push
and
push
lcall
insw
test
leave
push
jg
jg
mov
mov
mov
push
movsb
cmp
pop
mov
pop
and
pushf
jb
outsl
stos
ljmp
sub
rorl
icebp
jecxz
add
shll
int3
lds
pop
and
call
sbb
adc
movsb
jno
sahf
outsl
mov
push
clc
xor
lods
iret
addr16
lcall
testl
cmp
xchg
sub
fiadds
cmp
decl
inc
leave
dec
push
add
xor
outsl
mov
inc
test
add
incl
jl
lret
arpl
jo
mov
jbe
pop
lcall
iret
and
cmc
push
ss
test
inc
push
aaa
ljmp
add
mov
js
push
ret
push
hlt
popf
mov
out
add
cmp
aad
xchg
inc
jmp
loopne
aaa
int
aaa
lret
jmp
popf
sub
adc
arpl
pop
scas
stos
mov
insl
sub
ds
dec
pop
adc
push
cmc
sub
sub
popf
and
push
ljmp
stos
mov
fdivr
mov
mov
push
mov
es
and
pop
push
and
icebp
inc
or
jg
test
add
push
mov
and
incl
je
cmc
jns
sbb
movsb
testb
in
aas
ljmp
jmp
jecxz
cmc
push
pop
enter
pop
ja
outsb
cmp
push
and
push
or
lretw
subb
cmp
call
dec
pop
fadds
and
js
jae
int
out
or
xor
aaa
std
mov
adc
xchg
xorl
icebp
hlt
fildl
mov
mov
outsb
push
call
icebp
setp
addr16
push
dec
cmp
mov
fstl
jle
les
mov
mov
mov
imul
cli
or
sbb
and
js
lcall
inc
jmp
sbb
push
nop
push
call
jge
push
push
ljmp
sub
lock
int
in
and
pop
mov
and
dec
movsb
leave
mov
dec
xchg
adc
jne
jg
jge
out
inc
clc
push
dec
enter
xor
lock
inc
mov
mov
fcoml
pusha
cltd
inc
fs
lods
jg
and
sbb
pop
adc
call
out
fs
mov
jle
add
pop
pop
shrl
jg
in
inc
jmp
jmp
or
int
adc
jns
jnp
jecxz
pushf
pop
out
mov
push
mov
decl
adcl
sbbb
pop
movsb
cmp
ljmp
sbb
sarl
adc
mov
jmp
and
or
in
push
imul
lock
inc
pushl
push
adc
dec
cmp
mov
js
cmp
pop
mov
dec
ja
fnstenv
mov
mov
xor
scas
xlat
in
adc
out
push
stc
dec
or
dec
mov
pop
cld
jmp
or
out
sub
sub
push
sub
pushl
mov
jle
int
cli
pusha
fs
cltd
pop
sub
jne
push
add
fisttpll
cld
pushl
fs
data16
and
fdivr
leave
ja
cmp
push
add
push
push
adcl
and
incl
mov
flds
xor
or
cmp
dec
sti
cmp
xchg
cmpsl
imul
dec
mov
jns
dec
cli
dec
fucomp
xchg
call
pop
cmovae
add
dec
xchg
das
pusha
push
push
pushf
mov
mov
jecxz
mov
je
decl
pop
cmp
mov
jge
push
outsl
outsl
je
cmp
imul
sti
dec
sahf
adc
fistpl
scas
and
test
cmp
xlat
pop
out
sti
sti
mov
push
fisttpl
mov
andb
aas
jns
cmp
and
cltd
cs
push
jg
jle
sarl
mov
jne
dec
pop
mov
enter
sbb
jmp
cvtps2pd
test
and
xchg
ret
das
insl
cmp
jg
push
out
data16
mov
imul
adcb
jg
insb
nop
call
test
outsl
js
imul
jnp
add
jo
cmp
loopne
into
mov
ljmp
pop
cmc
push
bound
pop
sub
mov
and
lret
in
icebp
add
out
aad
std
rol
add
jno
jo
and
insb
loopne
and
scas
cmp
pop
mov
scas
xchg
and
loopne
jmp
jg
int
fwait
out
jg
ljmp
and
aam
in
iret
xchg
add
rcll
and
pusha
cmp
popf
adc
xorb
jg
inc
push
nopl
cmp
inc
fs
inc
idiv
jg
pushl
adc
adcb
inc
push
rorl
mov
jb
clc
mov
cmp
or
pop
in
push
fimull
mov
or
ljmp
into
aaa
adc
out
mov
push
lret
pop
mov
mov
das
mov
js
mov
incb
ja
leave
in
lret
xchg
sbb
push
dec
pushl
fbld
call
imul
sarl
icebp
ficoml
rcl
sti
gs
dec
sbb
xchg
lods
push
mov
jp
push
or
lcall
push
in
jmp
inc
push
jl
mov
cs
test
rcrl
cmp
out
fwait
lret
arpl
xor
ret
mov
lods
sub
jne
inc
popa
mov
enter
std
cli
jmp
inc
mov
push
cld
jg
and
scas
loop
mov
mov
pop
clc
sbb
push
add
cmp
mov
cmp
out
stc
add
cmp
pop
or
cmc
out
push
push
jbe
xchg
inc
jecxz
mov
in
loop
xchg
or
rclb
push
pop
bound
into
in
roll
ret
in
sub
mov
lods
ret
inc
or
push
cld
incl
aam
or
imul
lret
xlat
hlt
jae
pop
pusha
fcomip
clc
clc
jbe
test
jbe
or
lret
sbb
jg
leave
dec
inc
mov
cs
ret
rclb
xor
lcall
sbb
adc
pushf
push
nop
push
gs
and
inc
mov
pushl
pop
push
addr16
add
jle
xchg
in
in
lcall
popf
jecxz
cmp
dec
lock
andb
pop
test
imul
jmp
or
mov
jne
cmc
ret
add
sub
aad
jno
or
in
pushl
lcall
and
loope
dec
scas
jne
ss
pop
inc
jecxz
lcall
cmp
mov
mov
adc
dec
idivl
fdivr
aas
ficompl
orl
fisubl
inc
fcompl
xchg
inc
sbb
mov
rclb
ja
and
sub
jno
jae
rorb
fistpll
jae
and
pushl
add
int3
pop
and
mov
rcr
rcr
mov
push
sub
push
jns
cld
xchg
pushl
add
jecxz
mov
iret
add
es
iret
mov
ret
aad
andnps
daa
lcall
fimull
test
jge
or
xlat
test
inc
xlat
push
jno
inc
cmp
pop
jns
repnz
movsl
leave
lcall
lods
pop
add
mov
jmp
push
and
imul
mov
test
adc
sub
xchg
cmp
aam
jb
insl
add
fbld
jnp
cmpsl
lahf
jl
stos
mov
ss
roll
and
jp
sar
jp
xchg
inc
and
jmp
jp
dec
cltd
jne
jo
cmp
fcomip
push
xor
inc
pop
mov
dec
andl
fildll
cld
lcall
ret
icebp
inc
xchg
xchg
push
pop
push
gs
lcall
jo
ds
mul
fidivs
movsl
mov
push
lock
pushl
popl
rcl
fistpll
lret
mov
add
xchg
rcl
pop
add
ljmp
dec
xchg
das
mov
pushf
push
dec
push
mov
movsl
pop
in
stos
subl
loopne
inc
aad
dec
sbb
enter
jae
nop
subb
mov
push
dec
je
ds
cmpl
sbb
mov
jle
push
ret
pushl
inc
xchg
dec
push
sub
sbb
pop
fwait
mov
push
or
out
dec
test
in
push
sbb
in
mov
dec
lcall
sbb
addl
bound
jp
ret
dec
push
icebp
jecxz
shlb
pop
popaw
cld
shr
sar
shl
ret
jne
push
dec
cmp
xor
clc
and
dec
mov
xchg
mov
call
in
mov
fstpt
test
icebp
fildll
insl
push
out
jnp
rcll
enter
call
mov
cmp
jne
pop
into
mov
jne
fs
dec
mov
xor
cmpsl
lcall
jg
pop
clc
adc
scas
sub
pop
lahf
add
pop
jmp
sbb
mov
cld
incl
iret
mov
rolb
data16
call
cltd
mov
jmp
mov
fstpt
mov
mov
jno
roll
fcomip
dec
notl
loopne
mov
mov
sbb
in
lret
cmp
mov
incl
inc
cmp
dec
push
fs
out
dec
push
push
daa
jne
mov
call
jp
ljmp
int3
pop
int
ficoml
int3
push
xchg
pop
popa
jnp
mov
pop
iret
call
cli
mov
mov
pop
xor
pop
mov
dec
sahf
pusha
jmp
ljmp
repz
cmc
pop
dec
out
repnz
add
push
push
jne,pt
je
je
std
mov
jmp
jnp
pop
or
aam
repnz
insl
pop
hlt
pushl
divb
jecxz
rcrl
lcall
andb
add
cmp
clc
scas
dec
insb
and
push
mov
cmp
mov
fdivrs
je
fbstp
sbb
jo
out
mov
mov
xchg
mov
test
push
mov
lds
xor
dec
jmp
jb
push
cld
push
div
xor
rcrl
jecxz
cmp
je
cmp
aam
loopne
call
and
out
cmp
iret
jae
mov
shufps
decl
or
ja
sub
shrb
lcall
ljmp
and
jo
dec
lods
int
push
cmc
rcrl
push
movsb
xor
jae
popf
call
jno
lds
int
mov
rcll
imul
jnp
push
jns
in
add
arpl
mov
jb
xor
hlt
push
push
xor
fcmovbe
mov
decl
or
dec
xchg
in
sub
les
pop
pop
lods
jg
popa
dec
cltd
xchg
mov
leave
add
cmpsb
gs
into
fimuls
gs
scas
loope
aam
cmp
mov
push
cmpl
test
shll
inc
sub
out
add
incl
mov
pop
adc
data16
pop
sub
push
push
fidivl
ljmp
rorb
pop
ja
shll
insb
push
pop
mov
cmpsl
out
cli
lcall
imul
mov
xchg
adc
jl
ds
jp
or
loop
enter
xchg
push
ljmp
ret
icebp
into
daa
cmp
mov
sti
mov
je
sahf
jl
add
int
inc
jo
fstl
xor
ret
jno
jmp
scas
or
inc
xlat
cmp
push
xchg
lret
push
cld
loop
sbb
enter
incl
pusha
iret
sarl
xchg
sub
or
stc
mov
imulb
pop
idivb
push
cs
iret
icebp
mov
push
pop
xchg
push
lock
xchg
iret
lahf
in
pop
int
scas
jg
sar
jg
cmp
cmpsb
scas
iret
jg
add
sub
out
jmp
bound
inc
iret
lods
push
ja
inc
rcl
lret
rcll
sub
jae
xchg
xchg
jmp
fsubs
fidivs
cmp
ds
adc
pop
mov
insb
sub
jb
push
inc
mov
jl
sbb
ljmp
add
xor
jo
lcall
dec
out
pushl
int
lods
cmp
inc
pop
ds
paddsb
jae
mov
ds
xchg
nop
fmuls
lcall
xchg
jp
dec
push
sub
xlat
mov
fmul
jnp
popl
mov
ffreep
or
or
jmp
add
xchg
outsb
rorb
inc
mov
pop
or
xchg
jnp
push
lcall
mulb
sub
lret
xchg
xchg
in
ds
mov
data16
aas
pushf
jmp
jae
push
test
fwait
jb
pop
bound
cld
mov
fwait
ljmp
adc
fcom
inc
arpl
insb
arpl
xchg
mov
aad
mov
lret
mov
fst
aaa
daa
pop
fsubp
or
adc
cmc
test
in
aaa
std
pop
push
int
pusha
mov
and
lds
xchg
bound
sbb
rclb
clc
jg
inc
lea
jl
cmp
add
xchg
sbb
scas
ds
mov
sbb
pushf
aad
incl
mov
jb
test
and
lock
jmp
out
adc
loop
mov
xor
add
jbe
dec
out
pop
dec
das
cmp
ja
jb
mov
inc
sbb
hlt
insl
fs
cmc
cmp
mov
lcall
fiadds
mov
clc
xchg
leave
add
fstp
xor
xlat
aad
std
jmp
jge
int3
cmc
fmul
inc
add
in
dec
push
push
jl
push
loope
jb
or
out
dec
ss
hlt
sub
xor
xor
adcb
iret
push
out
cmp
jmp
or
es
outsb
adc
fs
adc
mov
lcall
sbb
push
jbe
and
and
adc
test
mov
mov
xor
and
pop
fsubrl
fwait
push
ljmp
dec
std
pop
adc
into
scas
les
pop
test
std
jl
dec
adc
mov
fisubrl
lret
inc
sbb
test
jns
test
outsl
sub
hlt
fnstcw
mov
aaa
push
adc
and
push
sbb
bound
or
in
push
fidivrs
or
adc
incl
dec
out
pop
or
decl
hlt
dec
cltd
push
nop
pop
cmpsb
ss
in
lods
jae
sub
loop
pop
mov
adc
pop
jo
and
rorl
es
call
xor
sub
fs
sub
mov
cmp
push
fwait
cmp
call
std
jmp
outsb
fdivr
add
fbstp
dec
call
or
add
jne
int
cmpl
xchg
aaa
data16
call
jp
aam
lds
and
xor
scas
mov
mov
xchg
leave
xchg
lret
mov
repnz
ja
xchg
jecxz
push
mov
sub
loope
decl
imul
push
orb
lcall
or
ss
ss
loopne
shlb
inc
pop
rol
inc
jne
test
dec
dec
rolb
inc
rol
adc
call
sbb
cld
xchg
mov
mov
mov
jmp
mov
filds
incl
dec
sub
mov
cli
aad
popa
fcompl
jecxz
ret
scas
fcomip
cmpb
lods
iret
inc
mov
call
in
or
jle
mov
push
xlat
pop
cmp
mov
mov
popa
mov
cmp
add
xor
lret
cld
pop
lock
push
iret
pop
adc
adc
jge
fisttpl
call
leave
pusha
push
lock
xchg
jg
jl
push
in
call
jae
sbb
jbe
cld
in
ficomps
sbb
lea
push
leave
jno
inc
stc
loope
shl
lret
subb
addr16
outsb
mov
push
std
in
push
insl
push
movsl
fdivl
out
xorl
imul
dec
popa
jmp
jb
loop
sbb
cmp
imul
std
fcmovnu
dec
fistl
mov
sub
incl
cmp
cld
mov
rcr
inc
cli
xlat
dec
jae
enter
sar
push
jp
cld
pusha
xlat
jo
fs
aas
add
mov
shrl
jg
inc
xor
pop
das
lret
fildl
pusha
gs
push
ret
aad
in
cmc
decl
ret
popa
cmpsw
or
fisubrl
cli
pusha
idivb
jne
ljmp
push
mov
shlb
inc
adc
cld
lea
mov
fldl
and
ja
pushf
inc
pop
push
inc
decl
mov
popa
jo
movsb
pop
and
push
pop
pop
popf
adc
ljmp
out
lret
outsl
enter
mov
std
out
mov
push
push
into
cmpsl
xor
adc
or
inc
aaa
test
lcall
push
in
cmp
inc
cmc
cmpsb
in
mov
dec
or
shll
fmulp
xchg
lds
adc
popa
push
scas
testb
ffreep
dec
and
jg
cmc
movsb
pop
dec
adc
inc
iret
push
not
dec
inc
jbe
in
rcl
inc
data16
int3
mov
in
outsb
nop
mov
xor
repnz
jo
call
gs
push
xor
sbb
bound
push
stc
pop
fs
test
jbe
lock
or
lcall
in
sbb
or
push
decl
cmp
mov
fdivrp
mov
cwtl
into
dec
pop
dec
jnp
mov
xchg
push
mov
mov
xchg
clc
mov
jo
xchg
mov
lret
xor
jns
incl
cld
xchg
in
je
jbe
mulb
sub
in
mov
cmp
lcall
aam
js
xchg
imul
sub
push
jge
push
in
std
out
clc
push
out
fimull
pop
dec
push
int
loope
insb
sub
push
or
mov
out
jb
popa
cmp
xchg
lock
push
test
cltd
push
dec
xor
jo
cli
jo
push
mov
jbe
push
sahf
jmp
rcr
xor
sub
or
icebp
and
push
cmpsb
test
sti
xor
xor
shlb
cld
cmp
mov
push
sub
fxch
cmp
incl
mov
fcomi
push
xlat
stos
push
in
std
cmc
jnp
or
daa
fnsave
push
leave
sub
mov
decl
pop
or
cmp
outsl
cld
aad
or
cmp
cwtl
loope
test
fs
push
cmp
add
jmp
inc
dec
jnp
push
push
dec
inc
dec
rcrb
jl
mov
xchg
push
pop
test
push
push
imul
cli
outsl
dec
repnz
mov
push
pop
fstps
pop
mov
call
cld
icebp
nop
push
out
or
fstpt
shrl
mov
sbb
adc
mov
xchg
aad
decl
test
sub
mov
mov
push
mov
mov
adc
int
ret
dec
sub
mov
shl
scas
dec
dec
push
cwtl
sti
mov
mov
imulb
mov
cmpl
xchg
or
into
hlt
ror
xchg
roll
pushf
and
divl
pushl
or
pop
jbe
subl
or
lret
je
inc
sub
push
cmp
xor
push
lret
popf
jnp
dec
jae
cltd
sbb
cmp
jmp
push
adc
aaa
push
insl
xor
call
jecxz
cmp
and
cmp
adc
jbe
rcrl
test
add
enter
add
mov
insb
mov
insb
addr16
incl
push
call
int
test
add
frstor
ljmp
push
ljmp
lcall
dec
dec
push
pop
sti
mov
mov
loopne
call
sbb
test
cmc
jo
mov
push
loopne
mov
mov
cld
gs
sbb
es
dec
xor
mov
push
push
push
dec
xchg
mov
lret
leave
or
sbb
scas
scas
sbb
js
pop
shrl
mov
jno
in
cmc
and
sti
adcl
icebp
popf
enter
fmul
sub
dec
push
scas
pop
dec
push
xlat
adc
rorl
lock
jnp
cmp
sub
ret
sar
fucomip
dec
clc
in
pusha
mov
pop
and
std
xor
xchg
in
xor
movl
mov
pop
xor
cld
cwtl
mov
pop
jne
jecxz
cmc
fsts
js
mov
push
xchg
das
dec
add
decl
adc
adc
adc
push
ljmp
stos
jns
sub
fs
pusha
outsb
cmp
fisttpll
in
push
hlt
cs
or
xor
andb
enter
aam
andb
jae
decl
repnz
fsubrs
push
xchg
mov
shrl
cmp
rol
pop
and
repz
push
jg
pushf
pop
mov
jmp
or
imul
outsb
inc
test
test
insb
push
pushl
js
popf
push
ja
shl
hlt
insb
inc
and
test
ss
out
push
cwtl
sub
shlb
xor
fstpt
or
push
inc
dec
and
adc
data16
add
scas
add
rcrb
rcll
sti
movsl
cmp
sub
jge
xchg
shrl
incl
jecxz
xchg
test
jmp
loop
cs
and
lret
lcall
push
xor
fnstsw
pop
push
out
cmp
testl
or
cmp
ret
test
mov
sbb
push
lock
ljmp
push
inc
insb
push
shl
cltd
mov
ret
push
das
iret
aam
scas
push
incl
les
test
popa
cmp
enter
fcomip
push
add
outsb
pop
inc
mov
shlb
fldt
outsb
xor
pop
push
call
jp
stos
mov
subb
or
lods
xor
cmp
js
fwait
sahf
mov
mulb
les
aad
dec
int3
cmpsl
insl
rorb
incl
shl
mov
loop
push
lcall
insb
dec
addr16
stos
push
push
call
fidivrs
fimuls
out
push
ficoml
aas
clc
mov
jle
adc
mov
push
dec
arpl
dec
aaa
sub
arpl
jnp
in
pop
mov
jge
int3
cmp
dec
addr16
mov
push
fstpl
mov
ljmp
in
mov
lret
cmpsl
roll
or
push
xchg
dec
dec
cli
xchg
jnp
mov
call
mov
pushf
in
adc
dec
pusha
jb
fs
mov
daa
inc
mov
push
stc
inc
out
push
out
jmp
scas
push
outsl
push
sbb
pop
xor
mov
call
stos
sub
adc
mov
mov
push
aam
jmp
xchg
ja
lcall
insl
mov
or
add
jp
jl
inc
and
lcall
push
add
inc
adc
sbb
insl
hlt
std
inc
imul
scas
dec
shlb
incl
pushl
icebp
and
in
fmul
mov
gs
das
rorb
out
inc
pop
jnp
dec
loope
mov
pop
addb
jmp
bound
test
jns
sub
hlt
mov
or
xchg
ja
ret
arpl
stos
out
stc
mov
pushf
xlat
inc
inc
lcall
mov
js
ljmp
sar
testb
cmp
or
xor
shll
lcall
pop
adc
push
or
jl
xchg
cld
pop
or
add
or
or
pop
jae
mov
jecxz
push
sbb
ljmp
loop
dec
jle
lds
pop
jl
dec
aam
sub
data16
cmp
rcll
decb
imul
popa
jbe
add
push
push
xchg
bound
shlb
js
fisubs
stos
into
out
stos
out
ds
decl
lret
insb
push
pop
lahf
push
or
iret
and
ficoms
inc
aad
sub
repnz
dec
popa
lcall
adc
push
loopne
mov
leave
mov
sbb
test
ret
pushl
call
jge,pn
mov
xor
jp
mov
call
call
xor
mov
jp
fs
dec
decl
add
daa
popa
mov
pop
jo
mov
or
sbb
xor
dec
insb
adc
push
jnp
gs
arpl
sub
mov
mov
xor
decb
insl
cs
jg
adc
insl
or
sbb
xlat
jl
cmp
ljmp
jo
stos
jnp
dec
test
dec
mov
fwait
cmc
add
incl
outsl
sbb
mov
jl
cmp
fnstenv
pop
mov
pop
push
dec
leave
incl
out
jo
sub
mov
pop
mov
mov
push
arpl
inc
nop
pushl
aad
jae
imul
adc
jp
adc
ja
decl
in
inc
das
jmp
push
sub
scas
cwtl
push
insl
mov
push
ret
lret
or
adc
dec
adc
out
jns
or
test
jbe
jg
call
ljmp
mov
scas
nop
cmpsl
mov
jl
lahf
arpl
or
loopne
jmp
mov
loop
mov
cmpsb
xor
shr
lods
or
cmp
shlb
dec
inc
or
call
loopne
testb
and
hlt
scas
ja
clc
xchg
pop
arpl
push
outsb
inc
xchg
fs
aaa
push
push
aaa
mov
push
inc
push
lahf
daa
in
mov
cmp
sar
decl
dec
in
adc
scas
call
fistl
ljmp
inc
fsubl
outsb
jg
pop
lock
ss
mov
pop
mov
loopne
jp
int3
and
and
ljmp
push
imul
mov
fsubs
rorl
sub
mov
pop
incl
test
aaa
iret
orb
jg
inc
inc
in
mov
adc
in
movsl
mov
imul
fsubrl
in
adc
fs
sub
mov
pop
sub
shr
mov
pushl
mov
lock
pop
in
xor
add
arpl
es
and
sub
mov
push
push
push
push
xor
lcall
xchg
sti
mov
in
rorl
leave
mov
int
insb
sub
jns
pop
jo
rol
sahf
mov
addr16
in
lret
cmp
mov
cld
cmp
adc
cmp
cmp
shlb
and
aam
ljmp
mov
and
xor
xlat
sar
scas
pop
xorb
mov
add
adc
cld
insb
sarb
call
pop
in
jecxz
inc
mov
insb
add
adc
jmp
imul
cmp
lahf
add
and
jb
and
jb
addb
pop
pusha
sbb
push
mov
xchg
jns,pt
je
adc
pop
push
bound
pushl
lahf
imul
ret
add
out
jb
ret
and
aas
test
imul
push
lcall
cmp
pop
push
rorb
pop
jle
jge
adc
push
lods
fistl
push
mov
inc
inc
subb
mov
pop
fistl
pop
cmp
cmp
mov
adc
mov
je
mov
imul
in
movsb
and
add
and
sbb
test
enter
in
add
bound
or
xor
ja
push
sbb
arpl
mov
xor
cmpb
ljmp
push
pop
xchg
incl
adc
fmuls
cmp
inc
xor
jl
jmp
jbe
cli
cmc
scas
fs
mov
jge
add
adc
fstpt
and
push
je
popf
and
roll
fcmovbe
sahf
outsl
fiaddl
push
adc
rol
popa
xchg
mov
das
das
sub
std
mov
cmp
pop
push
dec
sbb
int
arpl
push
xlat
in
fistps
cli
push
outsb
hlt
jo
in
push
pop
fst
xchg
data16
pushf
adc
pop
test
aad
sbb
push
lret
push
jnp
jne
jl
inc
pushf
add
lock
lcall
mov
aas
aaa
pop
clc
sub
mov
pop
imul
in
push
push
pushl
adc
push
mov
imul
dec
mov
pop
dec
shll
push
dec
icebp
ret
push
lock
movsl
add
pop
pusha
in
int
xlat
aaa
cmp
pop
mov
or
push
aam
pushl
and
in
jge
inc
jg
aas
lea
cmp
dec
dec
cmp
clc
cmp
dec
jo
lahf
stos
jp
mov
js
test
pop
inc
pop
rcr
pop
std
jge
add
popf
fidivrl
scas
dec
jo
lret
jns
shlb
xchg
iret
arpl
push
fidivl
das
lods
push
and
mov
push
fcmovbe
mov
cld
pop
idivl
mov
cld
dec
mov
pop
lcall
pop
jecxz
push
push
testb
cmp
loopne
inc
pop
movsb
mov
sbb
pop
mov
mov
pusha
ljmp
mull
cmp
mov
mov
fnstenv
add
cwtl
ret
data16
call
int3
lods
outsb
fnstcw
or
fstpl
dec
push
mov
cmp
lcall
call
rcr
inc
adcb
out
loopne
clc
dec
rcrl
cmp
push
pop
imul
jp
lcall
rorb
push
pushfw
enter
add
gs
data16
mov
test
decl
popa
xchg
js
xchg
jge
dec
popa
mov
loope
shll
idivb
xchg
lahf
ljmp
ds
mov
add
sub
xlat
xor
enter
sbb
push
stos
in
jns
pop
push
popa
popa
loopne
add
sbb
xor
subb
lcall
outsl
flds
jo
adc
pushf
out
call
add
incb
out
mov
addr16
push
scas
adc
in
mov
std
mov
lcall
into
insl
out
mov
icebp
push
xor
pop
adc
mov
cmpb
inc
cli
push
dec
inc
push
decb
jne
xor
stos
insl
addr16
sbb
fdivrl
in
fs
dec
xchg
inc
ljmp
lcall
mov
push
cmp
aas
and
aam
nop
outsl
push
xchg
test
ss
jnp
push
xor
mov
inc
cmpb
cmp
adc
int
test
inc
cmp
pop
je
cltd
mov
sub
bound
outsb
in
dec
inc
dec
movsb
sarb
or
js
jp
data16
jg
aas
add
jl
inc
js
and
fwait
sub
sbb
or
aam
xor
mov
cmp
ljmp
movsb
arpl
pop
aam
inc
sub
adc
mov
cmpsl
ja
addr16
out
pop
adc
stos
lcall
call
mov
mov
mov
cmp
mov
sbb
sub
jle
fstps
dec
pop
jbe
push
loope
pop
mov
pop
mov
dec
data16
xchg
inc
cmp
sbb
pop
sahf
cld
mov
scas
jl
adc
out
push
mov
jae
and
mov
lcall
loop
test
ret
mov
xchg
imul
adcb
jmp
daa
decl
lock
jns
sbb
push
pop
mov
icebp
int3
mov
mov
push
sbb
mov
sbb
in
enter
mov
push
pop
xlat
xchg
or
pushl
sbb
stc
add
hlt
insb
mov
sar
pop
out
mov
pop
pushf
push
inc
ja
scas
cmpl
mov
pushl
xchg
sbb
gs
push
ja
ds
and
xchg
lcall
mov
ljmp
add
orl
leave
ljmp
jmp
cmp
dec
scas
fistl
js
fs
pop
leave
notb
lret
sarb
dec
pusha
aad
lea
inc
movsb
std
xor
aam
insb
cmp
mov
loope
fsubs
or
xlat
addr16
and
stos
push
ret
pushl
popf
push
push
dec
xor
xor
imul
jno
cmp
mov
fnsave
pop
fstps
call
xchg
xlat
sarl
mov
mov
mov
and
pop
addr16
sarl
pop
loopne
movsb
rcrl
add
es
frstor
nop
insl
push
cld
daa
pushl
imul
lea
push
lods
adc
pop
xchg
sahf
js
rclb
or
movsb
cmp
data16
out
xchg
jns
pop
in
mov
out
or
ret
mov
push
gs
gs
or
mov
jecxz
fstps
scas
fs
cmpsl
test
pop
leave
lods
fs
push
push
lcall
push
lods
loopne
insb
push
sbb
fldenv
mov
mov
mov
dec
xor
pushl
faddl
push
jnp
dec
addb
int
xchg
arpl
test
jg
call
and
mov
stc
in
xchg
sbb
and
test
jnp
jg
in
pushf
test
mov
daa
xchg
mov
dec
add
out
insl
jg
add
outsb
imul
cmp
jmp
inc
jbe
sbb
scas
cmc
fwait
mov
sub
mov
std
pop
cld
lcall
gs
js
insl
jp
cwtl
nop
les
jb
hlt
test
mov
mov
ds
andb
adcl
mov
gs
dec
mov
mov
popf
lock
addl
sarl
dec
mov
test
sbb
mov
jnp
cltd
ljmp
xchg
inc
insb
inc
adc
shufps
fcoms
insb
and
js
decl
hlt
jecxz
xor
sub
daa
int
stos
sub
movsb
cwtl
lea
jo
aad
add
fwait
jp
cmp
sarb
decl
fsub
inc
xor
cmpb
mov
shrl
sbb
ret
lods
add
sbb
shll
and
push
out
aad
incl
push
shl
imull
iret
je
mov
gs
adc
adc
ja
ljmp
xchg
int3
push
mov
xchg
mov
in
cwtl
jo
xor
repnz
lret
aaa
cmp
mov
xor
mov
add
dec
shlb
sbb
xchg
ss
mov
insb
xchg
add
jmp
insb
xchg
gs
gs
push
xchg
bnd
jbe
imul
xchg
stos
clc
lcall
mov
ret
sbb
lcall
jnp
push
pop
jg
push
cmp
bound
aad
clc
incl
rcl
gs
ret
pop
lcall
push
sahf
pop
mov
dec
pop
fildl
xor
inc
mov
fdivr
inc
xchg
pusha
mov
daa
rcrl
push
aas
imull
push
xchg
xor
mov
mov
arpl
push
icebp
pop
lods
ret
mov
fdivl
loope
pop
mov
into
fdivrs
cmp
arpl
lahf
sub
mov
cli
test
cmp
cltd
dec
sub
arpl
fstpt
add
pop
das
shrb
scas
orl
jl
inc
or
incl
mov
push
sub
push
das
add
xchg
push
adc
inc
bound
jmp
mov
xchg
jg
dec
or
jns
stos
pop
je
cmp
jno
rcr
test
stc
mov
jg
or
xorb
push
dec
addl
pop
fnstcw
adc
xchg
push
jo
jo
jmp
jb
sbb
push
outsb
lock
decl
add
jl
fsubp
xorb
cmp
cmp
sar
das
clc
jmp
dec
pop
insb
outsb
fisubs
jae
push
fs
add
pop
out
add
scas
sti
push
or
subb
movsl
jecxz
ret
jne
leave
add
lods
jge
mov
xchg
stc
gs
cmc
in
sub
mov
cmpsl
lds
mov
enter
hlt
fistpl
adc
stos
leave
cmp
push
out
add
lcall
into
pop
imul
aad
std
or
ljmp
push
jb
decb
cmp
aas
popf
jg
inc
mov
int3
lea
decl
cltd
add
add
xchg
and
inc
addb
imul
daa
pop
imul
test
jnp
test
arpl
aas
out
ret
dec
xor
fcomip
push
dec
pop
inc
lahf
testb
jo
xchg
cli
push
ja
jmp
lret
subl
fldt
add
inc
enter
call
nop
addb
shl
ljmp
stos
jg
lds
cld
test
clc
es
jl
int3
xchg
add
notb
scas
ljmp
out
xchg
mov
and
lods
lods
aas
dec
fisttpll
jge
mov
cmc
and
ljmp
test
sub
outsb
int
sub
xchg
push
sbb
ljmp
dec
mov
push
imul
mov
inc
pminub
xor
xchg
aad
push
mov
decl
nop
negl
aaa
dec
outsl
or
sub
mov
fiadds
mov
lods
jle
scas
test
fnstsw
jg
incl
aaa
jge
adc
mov
sub
mov
test
jbe
lcall
add
cmp
pusha
mov
pop
out
and
mov
pop
push
mov
mov
mov
insb
call
gs
daa
sbb
jnp
cmp
out
testb
jne
aam
ss
lods
inc
pop
out
inc
mov
popf
test
incl
push
insb
jmp
mov
cwtl
out
jbe
test
daa
into
dec
jp
ds
rcr
xlat
mov
call
pushl
addl
cmpsb
imul
jge
lods
sarl
ss
call
outsl
rolb
addr16
mov
cmp
mov
pusha
jge
pop
sub
and
sti
jge
pop
jmp
adc
ficoms
ljmp
or
loop
ja
pop
cmp
adc
cmpb
xchg
andl
decl
xor
dec
sbb
mov
ss
mov
sbb
add
xchg
lock
dec
inc
push
inc
test
xchg
lea
jle
test
pushf
push
push
insl
push
xor
cmpl
push
stos
push
fwait
insb
jg
mov
ret
sub
xor
aaa
cmp
cli
insl
stos
ljmp
xor
or
iret
sar
addr16
mov
pop
movsl
gs
clc
call
loop
or
in
cld
and
jge
adc
es
fidivrl
sar
lcall
jg
es
les
in
push
xor
jg
sub
gs
or
adc
incl
push
inc
add
mov
movsl
movsb
test
lahf
xor
pop
pushl
cmp
cmp
mov
xchg
icebp
stc
jp
in
xchg
add
pop
popa
addr16
arpl
call
out
pop
cmp
pusha
inc
in
call
je
or
imul
dec
data16
xor
test
adc
popf
sahf
js
test
ljmp
imul
mov
adc
push
add
lcall
in
push
out
dec
push
and
pop
jmp
add
orb
sub
in
es
loop
iret
xchg
in
dec
push
out
push
stos
ret
cmp
pushl
cs
scas
jb
subl
idivl
dec
test
shrl
lcall
jp
call
sbb
dec
rcll
mov
cltd
out
add
dec
push
jo
adc
xchg
and
out
push
and
psubq
leave
jmp
stos
rorb
lahf
cmp
push
enter
dec
push
cmp
push
adc
mov
or
test
jg
sub
or
sbb
xchg
movsl
aaa
test
dec
mov
rcrb
push
popa
jge
popf
xchg
insb
push
adc
pop
xor
mov
enter
call
or
xor
inc
push
mov
xor
xlat
test
pop
pop
negl
jg
stos
aad
out
pusha
mov
scas
cmpsl
inc
pop
insb
add
dec
int
ljmp
out
call
lock
xchg
daa
int
push
sbbb
pop
ss
outsl
cmp
mov
outsb
jl
out
into
fnstcw
jbe
jle
ljmp
rorb
fwait
xor
jg
repz
mov
or
std
push
add
dec
popa
inc
and
lods
push
push
xchg
pop
inc
lahf
enter
lcall
popa
jecxz
push
loope
shrb
inc
pop
out
std
inc
cmp
adc
or
mov
ljmp
jmp
push
and
ljmp
and
das
stos
imul
xor
mov
aad
inc
pusha
sub
dec
sub
ficoml
sarl
ljmp
lcall
xchg
jns
jp
xchg
stos
ficoml
jmp
jns
jp
decl
cmp
jbe
and
pop
jno
add
jg
popa
sbb
sub
push
mov
leave
sti
or
test
pop
mov
pop
leave
cmp
outsb
pop
data16
mov
fildl
test
mov
je
mov
mov
fs
sub
mov
outsb
jae
sbb
loope
and
xor
cmp
pop
test
loopne
xchg
mov
jg
aad
adc
jns
sbb
push
push
imul
jbe
test
xor
iret
and
dec
adc
outsl
mov
ljmp
mov
push
xchg
fsts
ja
subb
dec
pop
int3
sbb
ret
cli
mov
std
jecxz
cmpsl
sub
incl
mov
hlt
jg
ja
mov
inc
mov
dec
adc
fnsave
pop
rclb
loopne,pt
imul
fldenv
sbb
ljmp
add
popf
pushf
jb
mov
shlb
lahf
popa
aad
or
pushl
dec
ja
lea
aad
mov
nop
dec
sar
jne
sbb
sbb
and
call
icebp
outsb
dec
or
mov
sbb
bound
int
test
in
loop
or
call
fsubp
enter
lds
or
push
or
jno
or
sub
mov
xchg
pusha
xchg
test
sti
add
pushf
add
push
lret
xchg
test
or
cmp
dec
mov
adc
mov
in
bound
lcall
test
sub
jns
cmc
jo
pop
dec
aam
mov
js
sarb
sbbb
rclb
orb
mov
mov
pop
fidivrl
jno
push
dec
pop
dec
decl
call
sub
cmpsb
jo
pushf
jns
fsubr
rclb
push
test
xchg
pop
lods
xor
push
pusha
out
insb
dec
or
dec
jl
jbe
sbb
call
push
inc
ffreep
mov
test
pop
mov
cmc
xchg
inc
push
in
jg
cli
push
jo
sbb
aam
mov
out
rol
sets
bound
or
outsl
add
std
clc
jg
cmp
or
pop
repz
out
aaa
cmp
imul
loopne
inc
mov
das
push
xorb
add
scas
adc
subl
mov
das
and
scas
out
add
mov
jne,pn
mov
mov
cltd
push
push
ja
mov
push
fwait
gs
push
test
dec
mov
push
mov
in
mov
xor
cld
ja,pt
test
ljmp
cmpsl
aad
sub
movsl
inc
leave
jne
btr
jge
lret
push
or
call
sti
add
pmulhuw
arpl
aas
mov
fwait
inc
jle
jge
fstpt
adc
shl
mov
shlb
or
cld
bound
call
test
popa
inc
or
rorb
cld
mov
arpl
in
push
insl
push
inc
cmc
clc
call
mov
in
shlb
jbe
stos
xor
push
arpl
out
nop
push
fldl
or
lret
out
lcall
sbb
jge
iret
mov
cld
ljmp
push
dec
push
pop
sbb
jle
adc
jle
push
mov
dec
out
cs
lods
cli
incl
sbbb
fldcw
std
das
push
or
dec
jb
aam
pushl
scas
adc
jg
pop
rcll
jge
mov
push
clc
adc
pop
mov
aas
push
and
and
lds
jbe
xchg
pop
shrb
outsl
std
adc
in
jg
rcrl
shll
clc
xchg
xchg
jge
ja
mov
pop
in
adc
and
mov
inc
add
not
inc
mov
popa
mov
mov
jmp
or
or
push
or
inc
scas
cld
pop
add
outsb
lcall
icebp
fsubl
sbb
add
fs
shlb
cmp
mov
iret
or
mov
xlat
mov
push
push
or
cmpsb
sti
ss
push
testl
cmp
aam
mov
ficoms
das
in
std
jp
mull
mov
dec
push
add
scas
push
dec
pop
and
imulb
outsb
insl
test
mov
in
insl
sub
int3
jg
fldl
mov
sbb
pop
fs
and
push
fisttpll
xchg
push
add
inc
push
lea
into
xchg
jp
fbld
ss
cmp
sbb
outsb
xchg
adc
cld
push
fwait
jns
ljmp
stc
test
inc
stc
fldcw
adc
lret
popf
push
xchg
popf
push
sahf
dec
xchg
or
shrb
clc
sub
imul
xchg
cmc
ljmp
pop
push
mov
cmp
sub
out
ret
jp
push
mov
lock
mov
mov
in
jns
push
aad
pushl
outsb
sbb
cmpsl
pushf
lods
mov
dec
shr
call
jno
lret
aaa
xchg
leave
in
decl
mov
or
rcl
fstps
lret
in
js
je
jp
xchg
jp
jb
mov
xchg
testb
imul
addb
push
lods
dec
pop
mov
cmpsl
jbe
lcall
ljmp
out
popa
insb
fidivrs
pop
sarl
jb
ret
pop
jmp
sbb
imul
ljmp
popa
pop
dec
sbb
pop
dec
shll
test
cli
xor
stos
pop
sahf
stos
add
ss
ljmp
popa
mov
pop
push
xchg
adc
fdivl
xor
pop
xchg
lds
pushl
ja
push
outsb
icebp
aam
js
das
mov
mov
fs
cmp
cwtl
in
mov
shlb
aam
aam
fldenv
jno
cmpsb
cmp
and
call
mov
sub
pop
xchg
pushl
lcall
push
daa
mov
int3
push
outsl
rcl
mov
push
scas
fbstp
pop
aad
cmp
push
pop
in
pop
test
push
push
not
push
pop
jno
push
push
repz
dec
push
lahf
push
jae
push
clc
incl
jg
test
pop
enter
call
jb
test
ljmp
cli
lcall
pop
outsl
dec
inc
in
add
or
iret
rcll
pop
sub
ljmp
jmp
nop
outsl
stos
xchg
mov
sbb
mov
jmp
test
pop
mov
incl
and
jmp
mov
add
mov
mov
pop
inc
shr
cmp
lcall
les
push
das
cmc
mov
fs
mov
loope
adc
xchg
mov
cli
aad
imul
decl
mov
ret
or
movsl
rorl
mov
pop
pushl
ret
sub
pop
xchg
and
pop
aad
in
mov
adc
cmpsb
lea
lcall
jno
xchg
repnz
mov
decl
ds
std
ja
rcrl
stos
decl
sbb
fdiv
inc
popa
pop
push
mov
pop
pop
xor
lcall
mov
inc
gs
inc
lods
jmp
fwait
cmovs
cltd
decl
xchg
in
jl
jne
sbb
jge
mov
aad
movsl
lock
nop
pop
fcomip
pushl
dec
xchg
scas
xchg
jb
fistpl
dec
or
and
xchg
notb
test
push
or
test
mov
mov
shll
mov
or
cmp
and
imul
jne
add
incl
and
inc
aam
jbe
and
push
push
pop
sub
and
daa
and
leave
aam
cmp
aad
imul
mov
rcl
decl
std
dec
icebp
and
sahf
add
mov
sub
mov
or
mov
mov
gs
mov
mov
movsl
cld
jg
ljmp
or
sbb
iret
mov
add
incl
xchg
insl
bound
rclb
bound
push
pop
add
sbb
inc
fiadds
in
ljmp
scas
cmp
dec
pop
push
insb
lods
pop
incl
in
or
mov
scas
mov
rcll
fcomip
decl
addl
sub
imul
jp
mov
sbb
jbe
lcall
or
gs
fwait
fwait
add
push
xchg
push
in
cwtl
inc
imul
jg
dec
call
push
mov
test
pop
jns
aad
add
and
shlb
nop
data16
out
dec
stos
fs
pushl
outsl
or
lret
mov
sahf
repz
daa
pop
pusha
pop
addr16
mov
es
lcall
int3
scas
sbb
dec
cld
xchg
dec
enter
notb
and
pop
and
push
xor
mov
int
pop
je
ret
xchg
mov
aaa
cmp
pushl
inc
and
pop
je
cwtl
xchg
test
rorb
je
push
in
and
fadd
or
sbb
inc
pop
add
or
in
jp
xor
mov
test
push
cli
add
js
out
fs
lock
xlat
loope
mov
xchg
add
mov
cmp
fildll
jmp
imul
iret
and
pop
addl
pop
sbb
dec
iret
lahf
insb
xchg
pop
insl
xchg
or
lahf
inc
es
inc
xorb
adc
dec
jle
cmp
dec
xchg
or
push
test
imul
enter
or
aam
push
shlb
sbbl
jmp
dec
leave
jne
incl
pop
lods
and
stos
mov
ss
dec
enter
xchg
mov
lcall
mov
cmp
cld
test
clc
lock
cmp
inc
shrb
rcrb
dec
stos
gs
lcall
enter
fcmovu
adc
inc
adc
add
cmpsl
xor
cmpb
dec
pop
mov
call
jecxz
push
cmp
fcmovnu
cmc
sub
xchg
inc
subl
cmc
sbb
dec
fldl
in
daa
and
sbb
jae
push
enter
hlt
mov
push
push
sub
sahf
mov
pop
sbb
ret
mov
fxch
or
cmp
mov
int
cmc
incl
pop
fwait
sub
cltd
adcl
jbe
das
cli
pop
fists
pop
inc
stos
dec
and
or
mov
xor
divps
ud0
lcall
push
cmc
cltd
cmp
inc
pop
push
js
mov
mov
pop
pop
add
push
ja
shl
fcoms
repz
pop
test
imul
sbb
scas
pop
out
pusha
mov
addr16
decl
insb
dec
xor
mov
xchg
in
daa
scas
mov
push
scas
lahf
adc
mov
jns
or
cmp
cmp
das
clc
lret
or
mov
adc
push
adc
fucomp
cmp
decl
leave
xchg
cmpsb
andl
jae
push
dec
cmpsl
addr16
adc
inc
jno
pop
das
jg
incl
adc
pusha
jp
pop
sub
or
mov
xlat
add
arpl
pushl
cld
xchg
addl
inc
lret
je
sahf
jmp
pushf
lcall
sarb
add
push
jo
mov
aam
pop
jae
pushf
fs
call
and
pop
and
cmpsl
jns
clc
sbb
loop
and
outsb
dec
out
sbb
push
movsb
cmp
ljmp
jae
in
pop
stc
insl
ja
cwtl
aaa
adc
cmpb
pop
pop
add
cmc
jmp
sbbl
cmp
sub
xor
clc
lcall
xchg
in
les
hlt
stos
mov
ljmp
jmp
scas
sub
aas
mov
jg
dec
in
rcrb
insb
clc
and
mov
arpl
pusha
jno
pushf
test
mov
xchg
pop
gs
inc
insb
test
and
ja
jg
pop
lock
pop
push
push
adc
jge
cwtl
mov
pusha
repz
pop
std
call
imul
pop
mov
and
cmp
lcall
icebp
imul
ja
and
mov
mov
pop
push
push
push
mov
mov
call
and
rcrl
cs
ret
shll
jns
cmc
push
ljmp
iret
add
jl
jmp
pop
sbb
jns
pop
add
outsb
mov
cli
lcall
add
jbe
pusha
mov
pop
inc
cmpsb
lcall
adc
decl
je
fidivrs
push
outsb
inc
push
xor
scas
insl
ds
pusha
pop
mov
pop
stos
sarl
mov
cwtl
pop
mov
lret
test
frstor
cmp
jg
ret
jne
daa
cmp
mov
push
mov
psrlq
loopne
xor
stos
js
int
call
out
fs
jmp
aad
or
pushl
filds
dec
lea
test
imull
pop
je
inc
add
xchg
movsb
jecxz
fcomip
jge
and
mov
xor
adc
mov
mov
cmpl
ljmp
push
pusha
push
outsb
orl
or
clc
lds
pop
sarl
add
inc
jge
sbb
fisubs
sbb
cmpsl
adc
arpl
sbb
cmp
test
icebp
sub
cli
ja
push
xor
xchg
aam
jno
jg
decl
sub
mov
adc
out
test
test
out
jo
fidivl
add
lcall
enter
lret
mov
decb
rolb
subl
pop
dec
faddp
mov
xchg
out
ret
mov
stc
in
aaa
test
sub
cmp
out
mov
incl
adc
or
test
aaa
inc
pop
pop
pushf
jnp
aam
or
aam
mov
bnd
gs
pusha
inc
or
pop
dec
mov
ffreep
xchg
lea
xor
incl
xchg
test
adcl
mov
out
daa
cmpsl
sub
in
lcall
jl
jnp
test
jnp
fisttpll
sbb
or
sub
mov
jns
inc
lret
ret
dec
pop
inc
das
lret
std
out
negl
shl
mov
ljmp
push
ja
jae
xchg
mov
scas
inc
mov
lret
push
jno
cmp
aad
movsb
sub
int3
dec
pop
xchg
repz
cld
sub
fbld
mov
or
push
and
adc
cmpsl
ret
call
cwtl
dec
and
int3
dec
jns
add
push
add
mov
test
mov
sbb
adc
xor
xor
fldl
push
sbb
fdivr
cmp
add
mov
push
push
xor
sub
cmpsl
add
imul
mov
loop
iret
mov
push
sub
cli
gs
shll
lcall
inc
pop
xor
cs
jo
mov
das
add
into
push
or
inc
or
lret
jg
jmp
call
icebp
mov
clc
jns
jecxz
pop
and
inc
inc
jle
in
das
lods
pop
jne
ljmp
add
fdivl
jge
pop
movsl
mov
cmpsb
pop
pop
pop
and
outsb
dec
fcoms
jmp
popf
pop
imul
arpl
movsl
std
fmuls
data16
in
xor
push
jns
mov
sbb
jne
mov
lods
or
jg
icebp
sub
pop
gs
mov
out
outsb
jp
push
out
stc
call
mov
push
in
mov
and
cmp
jp
pop
enter
fcomip
pushl
pop
fxch
add
addl
mov
mov
adc
scas
dec
std
out
outsl
ret
pushf
ficoml
sbb
cmp
xchg
lock
lock
pop
cmp
ljmp
push
push
jae
mov
jbe
xchg
iret
pop
mov
pop
mov
and
pop
daa
push
movl
test
jo
jg
pop
and
and
sarb
jg
jg
rcll
test
adc
cli
repz
jnp
lock
jmp
inc
sbb
decb
mov
lcall
out
sub
in
pop
std
incl
cs
setne
or
mov
and
mov
outsb
repnz
cmpsb
mov
fimull
pop
mov
mov
out
jo
jne
fildl
dec
inc
cmc
xchg
cmp
das
clc
incl
cmpsl
xor
in
out
fwait
scas
aam
in
scas
je
xchg
cwtl
idiv
jmp
popf
lcall
add
mov
std
dec
cmp
out
mov
ds
and
add
xchg
and
mov
decl
pop
aas
mov
add
xchg
loope
scas
dec
into
jg
mov
arpl
mov
aam
and
es
bound
stos
in
ljmp
add
mov
dec
insl
push
xchg
adc
cli
sbb
or
leave
imul
jns
ja
jle
jg
and
pop
roll
jl
and
out
and
mov
and
aaa
into
rcrb
cmp
loop
mov
movsb
mov
xor
sbb
les
lahf
mov
cwtl
hlt
sbb
push
das
mov
shrl
or
jg
gs
push
movsl
sub
push
mov
icebp
jmp
push
jg
jns
gs
jle
sbb
decl
lahf
lock
incl
push
mov
xorl
push
xor
mov
xchg
ret
cld
jmp
xchg
in
mov
dec
pop
cli
nop
mov
lods
sbb
and
mov
incl
xchg
mov
sbb
pop
and
pop
clc
lcall
push
inc
lock
call
out
pop
inc
adc
ja
dec
adc
ret
in
sub
in
cmpsl
sub
xor
stos
call
push
mov
insb
push
fwait
inc
jecxz
dec
insl
int
mov
push
imul
dec
cli
dec
fcmovnb
jg
jmp
std
sbb
pop
mov
bound
pop
iret
fstl
les
ljmp
outsb
cmpsl
add
movsl
or
daa
clc
lods
sub
mov
fstps
into
jl
xor
mov
jno
ret
cli
ljmp
jae
and
fsub
jbe
sub
mov
call
dec
ret
pop
dec
out
mov
pop
xlat
cmp
mov
out
cwtl
negb
ss
cmpsb
xlat
jne
lahf
jp
lea
test
adc
pop
popf
or
in
rcrb
das
rorb
stos
mov
decl
mov
in
cwtl
iret
jb
dec
jne
lret
movsb
jae
pop
adc
mov
xchg
inc
mov
rcll
or
call
outsb
cmp
sbb
fadd
test
mov
push
mov
testb
out
cli
call
push
mov
in
fdivrl
leave
fists
lcall
rolb
dec
fwait
cmp
push
mov
imul
push
lret
dec
sub
mov
arpl
jl
aad
loopne
and
hlt
stos
add
mov
pop
xor
add
push
ljmp
push
inc
out
pop
in
lret
or
int
loopne
jnp
xchg
xchg
mov
adc
lock
mov
out
test
out
inc
xchg
dec
mov
insb
ss
mov
adc
push
adc
sahf
in
les
in
jns
add
sbb
in
out
inc
stos
sbb
cwtl
fwait
aad
and
cmp
dec
int
push
adc
sub
les
in
pop
arpl
mov
lcall
dec
xor
jb
fisttps
int
jg
iret
lret
fcmovnu
adc
push
mov
imul
imul
popf
cmpsl
cltd
paddb
jmp
sahf
call
xor
in
add
dec
dec
mov
testb
shr
lds
mov
imulb
flds
jecxz
xchg
jmp
xchg
fwait
arpl
lahf
lods
dec
inc
inc
out
out
dec
xchg
aad
js
popl
pushl
das
and
cmp
sbb
jae
mov
out
fwait
jno
xchg
and
clc
in
inc
xchg
divl
test
and
cmp
inc
dec
cmp
cs
mov
in
sub
jnp
out
pop
mov
dec
ret
push
data16
jmp
imul
push
add
cmpsl
pop
mov
or
lret
frstor
mov
sub
sti
push
hlt
dec
rcrb
push
sbb
pop
clc
sub
mov
scas
fwait
incb
jg
das
loop
hlt
fmul
sub
fmull
aaa
std
ljmp
xor
jb
and
pop
repz
jo
mov
out
push
es
pushl
add
sub
shl
jg
in
cmp
test
or
ljmp
sahf
add
repz
ja
sub
out
xchg
fcoml
mov
dec
repz
arpl
push
add
fcomip
repz
sub
mov
movsl
insb
in
mov
sub
lock
mov
mov
push
lods
and
pop
adc
loopne
jp
stos
mov
adc
movsl
icebp
mov
pop
loope
pop
mov
cmc
adc
mov
lea
pop
push
lock
out
lds
test
outsl
cli
nop
out
sbb
in
sub
fucom
and
ljmp
mov
arpl
xchg
cli
cmp
and
sti
aam
pop
rorl
das
clc
dec
jg
stos
inc
sahf
xchg
jl
flds
inc
mov
and
xlat
xchg
mov
mov
jmp
lea
orb
sti
sub
pop
sub
ss
jae
xor
sti
popf
jmp
jmp
hlt
fwait
and
push
add
ret
outsl
cwtl
lock
mov
or
push
lods
xor
les
inc
ja
rclb
mov
ja
pushl
mov
inc
int
loopne
in
mov
cmp
jbe
jmp
decl
dec
test
ja,pt
sbb
test
jno
sti
push
repz
dec
cli
cld
xchg
lea
decl
ljmp
orl
in
push
pop
les
mov
adc
pop
mov
jno
call
add
push
in
dec
mov
mov
iret
bound
lcall
jmp
cwtl
xor
scas
or
cmpsb
add
int3
loope
cmpsl
int
cs
mov
jbe
xchg
fisubrs
test
xor
lds
hlt
xor
adc
jg
and
adc
push
adc
mov
xchg
repnz
jg
in
sbb
arpl
mov
in
push
push
add
addr16
push
adc
jae
mov
leave
imul
mov
sbb
and
mov
ja
sti
addr16
push
shlb
ljmp
cmp
adc
movsl
dec
loope
out
je
repnz
inc
add
jl
lock
das
mov
jne
cli
popa
cmpsb
jp
pushf
jl
ja
int3
add
incl
add
push
aaa
inc
ret
mov
mov
arpl
or
pop
es
clc
incl
push
ljmp
loopne
mov
mov
pop
push
lods
fbld
scas
mov
fs
mov
mov
dec
mov
push
pushf
ret
pop
xorb
mov
mov
or
adc
inc
lcall
pushl
mov
dec
fists
in
jmp
xor
lcall
cltd
jl
loop
mov
mov
or
jg
push
rcll
pop
xor
adc
push
cld
out
test
test
xchg
aas
and
and
xchg
rolb
scas
cwtl
les
fwait
out
jmp
inc
call
les
pushf
insl
and
pushf
jmp
mov
cmp
xchg
ljmp
push
mov
aam
mov
cmpb
arpl
incl
or
pop
popa
push
jmp
pusha
inc
mov
and
idiv
mov
je
or
fbld
xchg
push
push
mov
addl
in
data16
incl
sub
gs
fmull
xchg
jnp
stos
push
jmp
dec
loope
mov
iret
push
jne
xor
incl
iret
pop
insb
sahf
push
sti
or
std
xor
pop
pop
ja
aaa
push
pop
pop
mov
inc
aaa
mov
pushl
int3
mov
jnp
adc
jmp
insb
popl
push
in
jno
cmp
jle
int
js
jg
cmp
mov
mov
jmp
mov
je
lret
arpl
sub
fdivs
push
push
lods
enter
pop
iret
mov
jbe
pushf
push
mov
adc
push
push
pop
push
std
adc
sarl
ljmp
call
in
jge
fsubrs
xchg
xor
test
mov
js
mov
jo
cmp
push
cld
ljmp
push
decl
mov
push
gs
repz
decl
in
inc
and
mov
mov
test
pop
pop
shlb
mov
shrb
movsb
imul
lods
aas
mov
gs
lock
adcb
inc
mov
sub
xchg
iret
lods
mov
addr16
lcall
mov
mov
pop
mov
pop
push
xor
fcompl
jl
add
call
cmc
incl
jle
pop
in
push
sub
out
orb
adc
and
fisubs
movsl
aad
sub
incl
decl
jl
or
ds
xchg
mov
addl
outsb
mov
iret
scas
nop
lock
in
push
lea
push
lahf
out
xor
js
inc
mov
push
mov
popf
jg
in
js
aad
arpl
into
jl
fldt
rorl
push
fstl
pusha
mov
mul
pop
xchg
mov
rcrl
inc
jge
jb
sbb
push
pop
xchg
ja
adc
add
pop
movsb
ror
xcrypt-ctr
cmpsl
pop
mov
xor
dec
mov
xchg
ljmp
insb
lret
pushf
push
jecxz
cmp
inc
data16
out
cmpsl
insl
push
stc
push
in
push
insl
inc
sarb
cmp
push
mov
negl
cwtl
scas
ja
mov
sub
int3
daa
cmp
pop
jl
stos
pushl
xchg
dec
inc
cmc
sahf
je
out
into
rcr
xor
lock
mov
pop
orb
or
mov
repz
pop
inc
hlt
in
fldl
in
pop
jge
incl
sahf
pop
cmc
mov
push
xchg
jg
shlb
mov
out
clc
call
into
mov
jp
mov
lea
pop
cmc
mov
lcall
pop
or
popf
xchg
cld
jge
out
push
ljmp
insb
addr16
push
mov
int
fnsave
jmp
push
dec
dec
inc
data16
popa
mov
sub
insb
push
std
push
xchg
ja
mov
push
lret
pop
adc
or
jae
and
jg
fistpl
adc
cld
loop
repz
in
pop
aad
imull
mov
pop
ja
jl
cmpsb
aam
push
mov
in
insb
into
fsub
hlt
adc
lods
mov
mov
test
in
push
xchg
je
decl
xchg
cmp
insb
mov
xor
mov
loop
imul
decl
mov
repnz
lods
xor
cld
pop
cs
mov
ficoms
ljmp
dec
jecxz
sbb
fwait
xchg
sbb
lods
dec
jns
lods
movsl
popa
ficompl
push
add
aaa
nop
clc
decl
xchg
lcall
jmp
sti
decl
pop
inc
mov
std
jmp
or
aaa
xor
loope
stc
dec
movsl
cli
pop
in
pop
popa
insb
jle
insl
jecxz
pusha
shlb
adc
dec
sub
push
repz
les
push
push
xchg
mov
xor
pop
push
mov
push
mov
mov
lcall
testb
push
mov
cmc
mov
jmp
adc
test
out
mov
fdivs
lds
push
pop
lahf
test
sti
pop
lcall
incl
adc
btcl
xchg
add
push
dec
pop
inc
dec
scas
faddl
jle
das
notb
ljmp
mov
or
jp
dec
push
push
push
mov
jg
jecxz
loop
xor
fists
mov
sub
js
inc
push
iret
jge
fcomip
pushl
xchg
push
dec
mov
in
push
or
pop
pop
scas
add
sbb
lcall
aas
insb
or
pop
insl
pop
in
out
mov
cmp
jg
mov
adc
xchg
add
xor
cmc
push
jge
ret
mov
sbb
lcall
inc
xchg
scas
push
dec
sbb
fcomip
xchg
inc
ret
adc
inc
adc
outsl
sbb
outsb
fiaddl
and
mov
push
das
clc
jg
repz
lock
rcrb
fwait
jns
mov
stc
pushf
inc
sub
fcomip
jg
dec
pop
ror
rcrb
adc
clc
out
in
xchg
xlat
call
inc
data16
jbe
sbb
lods
and
int3
add
std
mov
cmpsb
mov
add
dec
hlt
sahf
data16
dec
jl
or
adc
dec
insb
sbb
call
dec
negb
push
loop
push
jecxz
push
insl
cmpsb
mov
ja
push
test
shl
pop
cltd
outsl
pushl
incl
dec
addr16
cmc
in
je
xor
int
enter
pop
sbbl
and
jns
mov
jle
and
jb
adc
inc
out
mov
sahf
mov
xchg
mov
mov
cmp
arpl
inc
addb
mov
outsb
jns
insl
cmp
addr16
and
cwtl
rorb
xadd
cmpsb
sti
jne
fcomip
lcall
mov
mov
scas
and
leave
fstl
push
fcoml
fsubp
call
cmp
add
int3
loope
push
xlat
stos
pop
dec
dec
jbe
pop
cmp
pop
scas
gs
aaa
ja
insl
push
cmp
aam
mov
jmp
mov
clc
xchg
repz
daa
ret
aas
push
cmp
rolb
jbe
xor
mov
cmp
int
xchg
ljmp
jo
call
push
jl
std
std
push
sub
call
push
mov
xchg
xchg
ds
dec
dec
push
xchg
pop
lret
fld1
jg
lcall
lods
js
or
fmuls
push
or
push
xor
sbb
js
fdivrl
or
mov
push
out
dec
jno
push
push
mov
pop
xchg
nop
out
mov
outsl
cli
cmp
sbb
add
jg
push
negl
or
inc
jmp
xor
mov
fisubs
xchg
mov
incl
push
cmpsl
pop
cmpsb
add
repnz
je
les
pop
sbb
fistps
and
ljmp
mov
push
mov
mov
pop
test
lods
push
out
inc
loopne
int3
mov
inc
sbb
cltd
inc
aaa
mov
mov
push
mull
push
or
js
pop
loopne
jmp
adc
xchg
fildl
into
xor
jmp
andb
push
jbe
call
outsb
mov
ret
lcall
loopne
sub
push
mov
pop
add
ljmp
push
iret
pop
adc
icebp
adc
cmp
pop
mov
std
iret
push
pop
or
mov
xor
in
ss
jle
inc
ljmp
ret
out
pusha
pop
or
hlt
ljmp
outsl
js
imul
ljmp
decl
cmpsl
mov
adc
dec
movsb
xchg
push
mov
inc
loope
inc
push
jne
push
cmpsb
cmc
jge
sbbb
push
pop
sbb
push
ret
and
pusha
ss
lcall
outsl
xchg
jb
adc
push
popa
pop
mov
dec
mov
mov
idiv
decl
rorl
mov
push
in
sbb
out
ret
sub
mov
inc
push
loopne
jnp
mov
popl
xor
sbb
inc
hlt
xchg
int3
outsl
inc
or
data16
incl
sub
jo
push
js
data16
loop
add
push
scas
mov
data16
jmp
imulb
pop
xchg
icebp
popa
push
jge
aad
cmpsb
xchg
test
xor
xchg
add
les
xchg
jg
lcall
jo
popf
pop
test
pop
js
ljmp
ja
sbbl
mov
pop
sbb
dec
push
and
dec
jo
inc
mov
or
daa
loop
pushl
mov
jg
or
insb
addb
push
lea
pop
xor
xor
mov
cmp
sub
xor
dec
notb
lcall
xor
arpl
inc
imul
pop
testl
jns
decl
addr16
sbb
dec
mov
mov
aas
ds
xchg
fwait
pop
fs
js
arpl
popf
xor
mov
fbstp
inc
leave
and
cmp
mov
jnp
jnp
mov
fsubl
shll
cli
xor
addr16
pushl
jg
stos
jns
hlt
orl
test
loope
fs
std
push
jo
clc
scas
mov
call
jle
sti
adc
rcrl
ljmp
mov
add
or
jg
fiaddl
fdivrp
jg
xor
dec
add
add
rclb
push
jbe
popf
popa
and
rcll
jns
xchg
cmc
ljmp
jns
and
add
filds
ds
movsb
aaa
ret
stc
or
inc
pop
daa
cmp
add
dec
jecxz
in
ja
decl
sub
ja
rclb
ret
pop
idivl
frstor
out
testl
adc
call
push
outsl
jo
jge
imul
sbb
addr16
pop
sbb
popa
cltd
cmp
das
scas
popa
ret
mov
addr16
or
cltd
xchg
ljmp
jmp
sub
push
jp
movsl
sub
push
lods
fists
cs
cli
push
aaa
cld
jmp
cmp
aam
push
iret
pop
push
xor
std
adc
ss
fcomps
stos
decl
adc
jmp
mov
cmp
jae
out
xchg
pushf
pop
aaa
sahf
imul
ret
and
cmpsb
jmp
adc
fidivs
insl
inc
push
pop
out
mov
jo
mov
xchg
jo
inc
dec
mov
push
call
std
mov
adc
pop
cmp
mov
dec
mov
in
or
jle
je
je
pop
or
xchg
push
jp
popa
adc
dec
pop
xchg
push
imul
pop
adc
lock
clc
sarb
fimuls
mov
lcall
test
arpl
les
xlat
daa
jp
in
mov
dec
sar
inc
test
inc
popa
rcll
outsw
jg
sub
decl
mov
or
jne
out
jp
sbb
dec
scas
ret
adc
stos
inc
or
sub
js
cld
mov
enter
dec
mov
cmc
loope
repnz
sahf
mov
outsb
std
shlb
jg
jl
je
cs
ret
jae
cmp
mov
call
sub
inc
ss
pop
inc
sbb
adc
xchg
xchg
xor
lret
das
ljmp
cmp
scas
addr16
jecxz
pop
inc
xchg
mov
jp
push
addr16
push
aaa
mov
mov
inc
push
pop
lea
stc
push
cmp
xchg
sbb
sti
mov
test
mov
decl
mov
dec
mov
jl
popf
cmp
movsb
ja
push
js
jp
out
jmp
jmp
les
popf
pushf
lret
pop
xchg
daa
add
inc
mov
jae
cli
incl
std
adc
mov
pushf
lahf
mov
or
sar
dec
add
fldl
std
lods
adc
jg
mov
movsb
cmp
and
xchg
ljmp
incl
cld
int
add
jae
testb
pop
jmp
sbb
mov
test
in
das
clc
ljmp
mov
inc
cmp
insl
lahf
cs
mov
cmp
int3
dec
das
xchg
cmp
stc
fdivs
xor
out
add
test
adc
jae
imul
out
lcall
incl
inc
sub
push
sub
pop
jp
int
inc
jbe
int3
and
out
mov
hlt
ret
push
int
ficomps
scas
les
int3
dec
jle
jge
xchg
jbe
in
pushl
cmp
int3
xor
sti
mov
mov
andb
push
iret
hlt
scas
hlt
into
rolb
pushl
sbb
in
dec
shrb
push
data16
into
negb
jle
inc
push
rol
dec
inc
cmpb
push
ja
xchg
xchg
int3
daa
lock
jbe
fisubl
test
int3
out
push
imul
std
dec
cltd
nop
data16
mov
sti
pushf
int3
in
stc
jae
xchg
jge
xchg
xor
fcomip
std
jle
inc
cmp
cmp
pop
movsb
leave
cmc
mov
cmp
in
incl
in
jle
pop
cmc
lret
fs
test
sahf
enter
jg
movsl
cld
add
fildll
jecxz
es
xchg
adc
insl
es
enter
js
sbb
and
jge
lret
mov
push
sahf
in
xchg
rcrl
pop
mov
ljmp
out
addb
fs
cmp
sar
test
sbb
out
into
xchg
fimull
push
push
popa
clc
jg
add
lods
inc
out
int
sahf
mov
inc
mov
incl
jge
mov
cltd
cli
sahf
sub
popa
je
lcall
push
and
int3
mov
imulb
push
xchg
out
add
fdivl
jg
into
test
mov
call
cmpsl
mov
jno
sar
cmp
mov
loopne
sbb
pushl
ja
scas
loop
dec
cmp
push
mull
sub
push
adc
jo
pushl
movsb
or
int
je
adc
test
fildl
mov
loop
dec
fdivl
int
and
insb
aas
mov
mov
nop
mov
sub
leave
or
jg
adc
mov
out
mov
mov
int
pop
add
dec
mov
enter
sub
jae
jl
jecxz
mov
arpl
jne
lods
imul
sar
jmp
mov
arpl
add
das
cmc
loop
movsb
mov
leave
mov
in
imul
dec
stos
jmp
outsb
iret
xchg
ja
jo
and
or
jns
sar
pop
bound
mov
mov
xor
lret
lret
insl
movsb
mov
jp
pop
ficoml
das
into
ja
cmp
dec
and
imul
imul
mov
fisttpll
cs
mov
dec
fisttpll
arpl
mov
mov
leave
shlb
ja
jns
insb
test
xchg
addb
arpl
lret
pushl
je
insb
out
xor
in
in
adc
pop
test
pop
fchs
mov
lods
adc
lcall
imul
dec
push
or
stos
mov
dec
rcll
push
cmpsl
sahf
jo
ljmp
push
lret
sub
mov
pushf
jle
sub
iret
mov
mov
imul
loopne
icebp
xchg
outsb
push
je
rcrl
xchg
sub
sbb
imulb
or
lcall
xlat
jbe
add
ljmp
or
fisttpll
call
into
cmc
cmp
je
sub
pop
in
icebp
xor
xor
incl
sub
js
xor
jp
dec
dec
int3
das
sbb
cmp
sbb
xchg
into
adc
ljmp
push
sbb
or
xchg
xor
ret
dec
testb
push
clc
call
mov
jg
add
jmp
incl
fcmovbe
xchg
into
fildl
adc
imul
lea
dec
adc
inc
mov
ljmp
xchg
scas
pop
adc
iret
sbb
leave
aaa
mov
jecxz
mov
leave
aam
mov
repz
xchg
lock
arpl
aam
decl
mov
repz
pop
je
mov
inc
rcrb
imul
cs
into
lret
jmp
mov
cmpsl
add
shr
aaa
add
jp
pop
jbe
and
add
sti
push
sar
pushl
add
in
fildll
push
xchg
fadd
pushl
mov
xor
scas
es
jo
mov
xor
mov
jne
and
mov
pop
or
cmp
decl
and
xchg
jl
loope,pn
jmp
xchg
jge
xor
cwtl
in
push
jecxz
pop
jmp
sub
mov
push
jle
fbstp
sti
iret
cmp
pop
sub
jge
clc
mov
and
mov
jns
les
xor
xlat
sub
add
pushl
sbb
mov
iret
jmp
lods
stos
push
push
cli
pushl
pop
popa
dec
inc
popa
xchg
sbb
js
lea
mov
iret
jnp
pop
xchg
insb
mov
push
adc
bound
notb
clc
clc
xor
mov
or
pop
push
out
push
aad
jo
lods
xlat
mov
and
decl
out
ds
fcos
repnz
into
mov
xor
mov
iret
aad
cmpb
sub
mov
out
and
insl
aaa
std
mov
push
out
xchg
aaa
jo
jo
lcall
ror
push
add
pusha
or
lods
lock
add
call
jmp
jns
sahf
lret
jge
repz
push
add
ja
into
mov
cmp
jmp
ja
lcall
xor
loopne
sbb
into
dec
je
loopne
mov
aaa
cld
call
imul
cmp
loopne
out
and
jp
cmp
mov
mov
sar
jnp
scas
jb
ret
mov
stos
mov
pop
test
ret
pop
ficoml
mov
repnz
jbe
loope
pushf
std
insl
xchg
leave
les
std
mov
xchg
imulb
sub
repz
jbe
test
sub
inc
clc
inc
push
adc
call
or
pop
sbb
decl
sarb
aas
add
mov
repz
xchg
inc
pushl
subb
outsl
jp
ja
mov
nop
scas
pop
mov
xchg
fs
jmp
call
xchg
xor
iret
sub
push
in
add
sahf
lcall
fwait
testl
xchg
xor
insb
mov
push
mov
or
pop
fcompl
or
shl
jle
ljmp
pusha
adc
xchg
jle
jl
ret
mov
jbe
mov
dec
jae
es
mov
dec
dec
inc
push
cmp
mov
cmp
shll
nop
push
push
jb
jb
scas
mov
incl
xor
sbb
mov
lock
imul
pop
mov
test
xchg
jg
out
jecxz
insb
push
xor
icebp
pop
adc
flds
les
pop
incl
loop
gs
cmp
inc
hlt
daa
mov
pop
adcb
pop
jne
ss
outsb
call
push
add
neg
mov
scas
cmp
dec
inc
sbb
cltd
sbb
pop
jbe
or
cmp
adc
lcall
sbb
cmp
dec
in
loopne
add
add
into
jg
xchg
mov
inc
pop
add
scas
add
imul
insl
das
clc
ljmp
mov
add
cmp
jmp
lods
test
dec
aam
dec
fisubs
pop
clc
jmp
pop
test
pop
data16
mov
pop
cld
and
repnz
or
insl
test
mov
mov
and
cmp
mov
and
mov
and
into
mov
insb
insl
and
int
aam
mov
dec
cmp
cld
ret
adc
mov
sub
into
adc
ljmp
or
out
sbb
lods
arpl
cmpsl
jecxz
push
mov
out
and
and
pushl
leave
incl
fmulp
mov
dec
je
aas
add
fnstcw
and
jmp
xchg
fucomip
popa
test
ljmp
shlb
xchg
inc
rcrl
stc
xchg
ror
adcb
jge
inc
das
cmpsl
dec
sub
and
ljmp
int
mov
sar
xchg
sub
subl
sti
orb
inc
and
adc
pop
test
sbb
leave
or
cmc
mov
ret
or
push
adc
mov
stos
xchg
scas
jno
mov
xchg
loopne
pushf
and
lods
mov
add
imul
push
std
mov
jge
mov
inc
mov
sbb
loop
dec
int3
inc
inc
xchg
xchg
es
and
andb
cmp
adc
lcall
int
lret
clc
sbb
lods
icebp
lock
and
decl
mov
cmc
js
jo
mov
add
enter
cmp
pushl
mov
leave
push
mov
leave
out
movsl
push
dec
sub
cmp
pop
jae
mov
ret
xchg
clc
ret
cmp
movsb
add
inc
xchg
jmp
cltd
add
incl
xchg
xorl
lods
mov
mov
lret
mov
jb
push
js
push
pop
int3
pop
inc
inc
jns
mov
xchg
and
icebp
int3
push
cmpsl
mov
decl
jo
push
hlt
mov
sub
pop
dec
pop
pop
lcall
push
fcomip
stc
adc
lret
test
test
adc
cltd
or
inc
cmpl
gs
xchg
inc
xor
cmp
orl
add
fdivs
shlb
incl
ljmp
and
xor
mov
rcll
fldt
and
mov
fmull
aaa
lcall
data16
mov
jmp
cmc
movsl
xchg
push
loopne
xor
imul
fnstsw
sbb
call
jle
ret
jns
jb
ja
mov
xchg
addb
xor
cmp
push
test
test
ljmp
xchg
jnp
lods
and
insb
fs
addr16
shrb
dec
push
fsubl
mov
ljmp
mov
in
andl
ljmp
jbe
stos
in
push
jge
pop
adc
pop
pushf
mov
mov
mov
pop
fisubl
pushl
les
sbb
je
jp
into
xor
je
lods
sar
mov
insl
push
mov
sbb
lret
sar
daa
imul
outsl
out
loope
push
cmp
pop
popa
inc
loopne
pop
in
lret
aam
outsb
fs
sbb
jno
xchg
xchg
call
jg
sbb
pushl
and
je
inc
outsb
pop
out
aas
pop
je
mov
out
and
mov
gs
js
xchg
xor
pop
lret
push
xchg
int3
sub
push
test
pop
hlt
sub
das
inc
shrb
cmp
repnz
std
mov
add
sbb
dec
push
inc
jg
adc
mov
shlb
enter
rclb
mov
jno
add
mov
ficoml
mov
cld
push
enter
sbb
lds
fisubs
decb
inc
fldl
inc
mov
js
inc
add
add
pushl
sbbb
push
xchg
xchg
cs
lret
cmpsl
mov
test
jge
adc
je
push
pushl
mov
out
aas
and
or
push
pusha
test
and
iret
mov
dec
sarl
scas
sbb
ret
mov
xchg
pop
addr16
out
aad
int3
push
stos
xchg
int
rol
add
add
push
cld
orb
dec
or
inc
mov
jae
or
push
stos
push
ljmp
xchg
add
add
mov
aad
lahf
xchg
or
inc
popa
stos
loopne,pt
mov
pop
cmc
pop
call
mov
je
pop
jb
jae
or
cmp
pop
decl
stc
cld
jle
or
outsb
shrl
sub
dec
mov
jnp
push
dec
lock
ret
xchg
stos
and
scas
ds
out
jp
aad
imul
push
pop
test
pop
mov
and
std
js
gs
stos
int
dec
mov
call
cwtl
mov
sbb
gs
imul
cmp
incl
xchg
lds
insb
jbe
sub
cmc
pop
or
pop
cs
scas
mov
dec
in
mov
in
push
pushl
lods
cli
lods
xor
cmovs
popf
nop
jnp
jp
ja
popf
dec
lea
scas
or
ret
mov
cmp
push
shll
fldt
pop
mov
pop
lea
mov
call
mov
jg
mov
das
xlat
jae
xchg
std
stos
cmpsl
jp
scas
mov
ljmp
pop
and
push
mov
xor
sbb
mov
mov
adc
pop
cld
ffree
sbb
jo
testl
clc
mov
cld
mov
fcoml
xlat
mov
sahf
sub
push
pop
xchg
shll
popf
lcall
ss
push
push
sbb
adc
jmp
rcrb
lea
jmp
stos
mov
pop
addr16
jns
add
lcall
insb
or
cmp
test
push
stc
sbb
inc
dec
mov
sbb
icebp
lds
cmp
mov
dec
inc
sub
and
into
xchg
mov
jl
push
addb
fwait
ret
and
jne
mov
repz
or
add
adc
incl
fisubrl
xchg
faddl
jbe
jg
mov
fwait
jg
mov
pop
mov
addb
mov
decl
aas
call
loope
jg
sahf
js
inc
lahf
sub
jae
sub
enter
cmpb
lcall
sub
cli
pop
fisubl
mov
xchg
fs
cmpsb
sbb
les
cld
xchg
add
xchg
arpl
jp
lea
jmp
or
sub
les
and
loope
xchg
mov
ljmp
lret
inc
pop
xchg
fisttps
jb
movl
push
lcall
cmpsl
dec
adc
dec
sbb
sbb
mov
dec
inc
push
mov
idiv
lcall
cltd
aaa
mov
stos
lahf
mov
addr16
repnz
lcall
push
enter
std
push
sbb
push
test
xlat
dec
pop
pushf
xchg
or
pop
xor
push
jmp
xchg
ja
or
or
mov
out
xchg
sahf
mov
cld
call
and
mov
cmp
sarb
jg
iret
jae
xchg
testl
pop
cmpsb
data16
sbb
push
mov
ljmp
cli
push
iret
jmp
lret
mov
ja
xor
pop
xchg
push
xchg
pushf
or
aad
push
push
sahf
mov
mov
lds
loopne
jle
movsl
mov
lcall
out
into
push
cli
decl
scas
in
sbb
adc
lea
and
ljmp
inc
mov
sub
inc
scas
mov
add
idivl
enter
or
stos
sbb
jg
xor
inc
int3
xchg
add
loop
sahf
in
xor
adc
jle
add
mov
jg
jg
jo
or
xchg
jmp
jge
push
imul
cmc
orb
out
call
mov
dec
fmull
mov
sub
in
push
mov
jle
lods
jge
jmp
inc
jnp
lcall
mov
cmpsb
cs
jne
adc
or
or
jno
sbb
test
cmp
push
push
cmc
movsb
push
test
mov
pop
mov
das
rclb
inc
mulb
push
dec
inc
hlt
push
js
test
mov
fcmovnb
mov
lds
hlt
inc
and
or
sbb
jno
les
mov
jae
mov
nop
or
mov
scas
jge
repnz
ljmp
lahf
or
push
pop
fldenv
cmpsl
les
hlt
divb
les
sub
or
sub
mov
loopne
pop
sub
mov
aad
cld
xchg
mov
mov
inc
cmc
and
adc
ret
out
sub
jae
jnp
lcall
outsb
or
rolb
icebp
mov
insl
pop
pop
push
repz
dec
mov
fstp
lret
lea
jmp
lret
cwtl
mov
dec
mov
lds
cmp
cmc
push
push
es
push
gs
mov
lea
dec
dec
dec
or
push
fdivl
lret
out
aaa
xorb
pushl
adc
lahf
jbe
and
jns
clc
or
lock
and
data16
shrl
or
inc
dec
adc
inc
fmul
test
clc
ljmp
in
lock
jle
and
in
xlat
lds
sub
fadds
inc
mov
jl
jns
fstl
sub
sti
sub
cmpsl
dec
mov
jnp
mov
lds
fcomip
adc
sub
cmpsl
jne
mov
shll
mov
add
lcall
and
dec
mov
arpl
mov
push
adc
hlt
ja
test
int3
pop
push
loop
xchg
in
jb
ja
stos
cmp
sub
jnp
cmp
pop
lahf
mov
lcall
or
or
outsb
inc
aaa
ret
rorb
adc
xchg
fstpl
lods
jg
adc
adc
xchg
mov
iret
dec
pop
inc
inc
ret
jne
xor
adc
push
pop
sbb
inc
and
cli
stc
sti
adc
std
cmp
mov
mov
decl
subb
gs
mov
inc
popa
push
adc
ljmp
adc
pop
jmp
popf
sar
aaa
pop
or
movsb
mov
leave
sti
jne
mov
sahf
xor
mov
hlt
xchg
aaa
icebp
cmp
pop
movsl
and
cmp
in
jmp
jo
test
lea
sarb
and
loop
pop
neg
mov
xchg
xor
dec
pop
jo
data16
xchg
or
add
ficomps
or
incl
mov
xor
enter
sub
add
std
jp
mov
lea
dec
and
fcomip
lcall
jmp
lods
lret
lods
mov
je
outsb
dec
mov
cmp
cld
testb
insl
and
scas
jp
cmp
es
pop
jl
pop
aam
call
or
es
test
inc
and
les
jnp
cmp
in
orb
addr16
andl
xchg
les
lods
movsb
ret
mov
bound
mov
push
jnp
pushf
daa
daa
movsb
mov
in
fs
sbb
add
out
adc
fs
es
dec
int3
and
pop
cmc
jmp
out
sub
fwait
insl
cmp
lahf
lahf
pop
jae,pt
xor
test
decl
mov
cmpsl
pop
hlt
repz
add
inc
adc
sahf
in
add
sbb
iret
loope
insb
cli
daa
in
jnp
scas
ffreep
insb
insb
mov
xchg
test
adc
in
out
mov
clc
std
daa
jge
xchg
sub
mov
pop
ficoms
stos
sub
aaa
xchg
pop
mov
cld
xor
xacquire
pop
movl
mov
bound
mov
push
stos
arpl
add
or
jo
cmc
cmp
jp
cmp
decl
mov
inc
fdivrp
sti
xchg
bound
scas
jl
mov
in
push
arpl
adc
lock
incl
mov
jge
sbb
mov
test
xor
pushf
sub
je
jmp
add
sti
sbb
lret
cmp
test
push
stos
mov
pop
adc
cmp
jo
je
in
inc
cmp
xchg
lock
pop
xchg
xchg
push
pop
mov
ljmp
mov
adc
arpl
pop
add
cld
lcall
mov
shl
xor
inc
stc
sbb
fistpl
stos
shrl
pushl
push
or
sahf
and
mov
dec
xchg
cmp
pop
push
mov
adc
add
ljmp
jecxz
push
xlat
mov
adc
push
mov
mov
jl
idivl
insb
jecxz
iret
jno
jmp
jl
adc
loopne
mov
pop
push
inc
add
mov
clc
jb,pt
arpl
cltd
push
cmp
xor
dec
adc
push
xchg
or
rclb
push
push
mov
inc
out
daa
or
lds
dec
decl
jle
jne
fisubl
rol
mov
dec
popf
add
test
mov
ss
sbb
or
test
insl
fists
movl
adcl
pop
add
mov
clc
jg
sbb
or
cli
out
ror
sub
jbe
stc
ret
mov
pop
add
call
add
mov
sub
mov
or
xorb
or
and
sbb
mov
and
fs
or
fistpll
adc
mov
insl
fs
sbb
mov
mov
mov
movnti
ljmp
lock
xchg
sub
push
lret
dec
lahf
enter
cmpsb
addb
inc
or
xchg
push
out
push
sti
mov
inc
les
dec
pop
mov
lret
lods
pop
ja
inc
loopne
jmp
shrb
lahf
lds
aaa
outsl
mov
sahf
xor
push
mov
cld
cmp
test
xchg
mov
jecxz
jl
pop
xor
clc
pop
lcall
or
adc
xor
call
nop
pop
es
movsb
or
and
push
jmp
cmc
stc
fwait
out
in
mull
xchg
xor
xchg
add
mov
sbb
jge
fs
or
xchg
jnp
jl
testb
cmp
pop
mov
pop
ljmp
mov
pop
pushf
test
test
mov
insb
mov
jg
ds
addr16
adc
lahf
pop
pop
cmp
out
lcall
repnz
mov
repnz
xchg
mov
loop
lea
inc
jnp
fcomip
lcall
add
mov
mov
in
xor
out
je
xchg
outsl
xchg
dec
sbb
insl
pop
ror
jg
outsl
cmpsb
or
mov
xchg
inc
xor
stos
aam
lahf
dec
mov
and
mov
ficoms
mov
dec
or
out
pop
cmp
dec
nop
add
and
popa
lcall
pushl
xor
les
rolb
pushl
xchg
push
mov
mov
xchg
pop
cmc
outsl
mov
aaa
jle
incl
mov
repz
xor
mov
inc
fs
xor
decl
insl
out
lret
fistpll
ja
jmp
daa
cltd
dec
or
outsl
jo
lahf
mov
jecxz
cmp
fists
pop
pop
dec
xor
sub
jne
aad
shr
jecxz
or
pop
xchg
jmp
shrl
pushl
mov
mov
push
aad
add
cmpsb
jne
mov
cmp
mov
mov
aaa
add
sub
and
jle
popf
xchg
lret
insb
inc
aad
or
jp
mov
sub
mov
push
rolb
and
or
push
lods
ljmp
jge
prefetcht0
repz
jg
rcrb
or
dec
cmpsb
jo
sbb
adc
or
mov
lret
jmp
mov
loope
decl
scas
sub
mov
les
or
cld
mov
outsl
adc
ljmp
js
aas
lods
push
out
sbb
mov
scas
sbb
lods
or
push
cld
call
dec
mov
xchg
repnz
push
mov
insb
outsb
das
cmp
xchg
jmp
dec
sub
adc
repnz
orb
repz
and
and
mov
cs
sbb
jne
mov
enter
jmp
adc
es
rolb
xchg
mov
and
mov
imul
add
hlt
xor
cmp
aam
shll
aas
pop
xchg
mov
add
add
inc
cmp
pop
push
in
add
sbb
ljmp
bound
jecxz
aam
jae
popl
mov
mov
pusha
inc
lea
xor
pushl
fsubl
mov
xor
pusha
xor
cmp
lahf
xchg
les
push
mov
fmuls
shl
jmp
or
decb
jecxz
shlb
lcall
lea
pop
mov
pop
aam
ror
sahf
outsb
and
js
mov
xlat
and
mov
je
out
call
call
sub
arpl
jae
mov
pop
jg
loop
jno
jge
jns
ret
pop
adc
inc
and
leave
nop
jp
lahf
cmp
sbb
or
lods
out
mov
sbb
mov
cmc
sbb
pop
sbb
sbb
jp
gs
sarb
fwait
and
decl
xor
jno
mov
or
mov
push
adc
in
inc
popf
push
jl
xchg
pop
aas
mov
mov
lcall
pushl
sarb
cs
sbb
cmp
xor
xchg
push
in
fwait
insb
setno
stos
insb
in
cli
mov
mov
mov
loopne
inc
inc
mov
jmp
shrd
pop
or
push
arpl
loopne
pop
cmp
ret
lcall
cli
push
mov
jne
ljmp
and
call
sub
ljmp
mov
stos
and
mov
push
mov
add
dec
hlt
decl
jecxz
mov
jmp
push
sbb
insb
bound
and
lret
ret
push
enter
mov
stc
jge
sbb
jg
out
mov
cmc
imul
mov
push
push
xchg
ret
jne
loopne
pop
mov
incl
xor
call
es
in
cmp
xor
movsb
add
std
cmp
dec
dec
fwait
sbb
gs
pop
pop
int3
mov
mov
xchg
clc
sar
push
repnz
mov
dec
loopne
cli
fistpll
test
or
clc
scas
xor
scas
push
dec
pop
or
jmp
sbb
jbe
dec
mov
sbb
in
int
out
xchg
pop
mov
mov
cld
imul
xor
sub
or
jmp
or
mov
jecxz
in
stos
pop
and
xchg
hlt
adc
insl
fisttpl
push
stc
lret
ret
imul
insl
ret
inc
push
push
fwait
imul
add
pushl
pop
mov
add
dec
fwait
push
mov
ret
mov
mov
fwait
or
or
xlat
jg
cmp
fistpll
stos
jbe
mov
xchg
xchg
mov
add
fwait
mov
sbb
int
push
outsl
xchg
lret
inc
sbb
ljmp
push
jl
pop
adc
jne
adc
push
push
loope
xor
inc
mov
push
adc
pushf
inc
aad
dec
sahf
aas
pop
sub
cmpsb
inc
sbb
lcall
int3
jne
cmc
mov
adc
js
jg
insl
adc
mov
mov
pop
push
mov
or
push
mov
mov
lods
adc
ljmp
lods
nop
add
lahf
mov
mov
lret
pop
lock
gs
push
fcoml
mov
cld
jmp
in
hlt
fnstcw
repnz
jg
jg
and
push
mov
data16
mov
cmp
xchg
fwait
mov
in
es
sbbl
push
sahf
dec
out
mov
cmc
push
mov
cmpl
fwait
ds
jle
inc
je
add
ficoms
add
and
mov
pop
insl
cmpsl
dec
add
push
push
pop
push
push
add
pop
cmp
push
repnz
jnp
adc
pop
jmp
cmc
add
fs
or
inc
lgs
mov
jle
mov
mov
mov
xor
pop
pop
mov
add
pop
cmpsb
repnz
lret
or
decl
ret
int
stos
or
cmp
xor
in
inc
clc
cmp
mov
nop
test
dec
int
shl
das
cmp
jno
mov
push
mov
pushl
dec
jbe
pop
pop
cmpsl
clc
adc
iret
jne
mov
jmp
xor
insl
sub
inc
call
pusha
jl
fwait
in
dec
adc
xor
mov
mov
add
std
aad
inc
lea
xchg
adc
fldl
ds
xor
jg
addr16
inc
xor
mov
ss
xchg
xchg
sbb
dec
mov
gs
jmp
sbb
push
pop
clc
pop
insb
sbb
adc
cmp
cmc
fwait
sbb
mov
push
pop
scas
mov
mov
jbe
inc
sar
jg
add
cmp
xor
rcl
mov
dec
and
adc
je
shl
push
add
les
js
jae
cmc
mov
or
inc
adc
pop
adc
pushf
xor
push
outsb
push
or
aad
mov
insb
or
push
sbbl
lods
xchg
call
jge
aad
xchg
jle
fwait
insl
shl
jns
mov
mov
push
pop
push
fisttpll
cmc
push
fnstsw
clc
jg
cmp
repz
add
mov
cmpb
out
jl
rorb
dec
jmp
lret
ds
decl
mov
xorl
pop
shlb
push
push
std
ljmp
pop
mov
mov
mov
stc
cmpsl
sbb
imul
sbb
inc
outsl
and
aad
imul
cmp
iret
scas
mov
sar
aaa
std
repz
push
and
test
add
daa
sti
inc
lods
mov
incl
mov
mov
or
mov
ret
rcrl
mov
mov
ljmp
add
cld
mov
push
jecxz
jecxz
fisttpl
mov
popf
lods
loopne
mov
incl
and
mov
push
mov
fmul
jns
aad
decl
out
js
lret
clc
inc
popa
mov
dec
mov
icebp
fsubrs
shlb
insl
popa
dec
push
lods
jle
ud0
jg
jb
es
ja
clc
sbb
xchg
mov
pop
aad
mov
mov
das
mov
inc
repnz
int
xor
outsb
movsb
pop
mov
popf
mov
lahf
call
setae
shlb
cmp
scas
cmp
test
call
sarl
scas
pop
pop
mov
andb
jne
popf
clc
add
and
inc
iret
mov
pop
faddl
scas
ljmp
mov
das
pop
pusha
pop
inc
mov
xlat
bound
jl
push
sbb
aas
push
mov
mov
into
and
ss
jb
xor
mov
es
ljmp
dec
sahf
mov
pop
pop
or
cmp
add
in
cs
pop
and
sbb
push
addr16
jg
fistpll
fsubrs
out
sub
pop
mov
notl
jmp
push
jmp
mov
pop
xor
mov
jno
stos
insl
pop
sbb
xorl
cld
loope
mov
dec
idivb
dec
movsl
mov
and
cmp
fcomip
pushl
pushf
andb
imul
movsl
clc
ficoms
test
xchg
sbb
nop
add
call
mov
pop
adc
xchg
and
mov
gs
add
aaa
adc
sahf
test
cmc
add
cwtl
xor
pushl
cmp
out
sbb
pop
or
mov
add
mov
incl
xor
cs
jl
inc
pop
mov
push
push
mov
outsb
fdivrp
ljmp
hlt
mov
daa
adc
sub
stos
sahf
sbb
ss
dec
insl
outsl
jmp
xchg
outsb
stos
jae
dec
daa
pop
andl
sbb
aad
ss
sbb
rolb
jmp
mov
jno
adc
mov
cmc
psubq
icebp
call
ret
mov
repz
mov
mov
out
test
cwtl
incl
cld
jmp
push
push
out
sbb
sarl
in
xor
ret
adc
pusha
ds
test
popf
test
call
bound
dec
mov
int3
push
fstpl
cmp
jecxz
pop
jnp
xchg
mov
mov
jg
bound
xchg
imul
aaa
mov
jge
sub
mov
adcb
pushf
test
sbb
sub
fimull
loopne
jl
iret
call
test
shlb
dec
push
sbb
mov
sub
adc
fs
insl
lods
ret
mov
in
pop
cmc
jmp
sbb
aaa
jl
sub
insl
inc
lcall
pop
sub
aad
hlt
sub
push
xlat
cld
mov
incl
clc
xchg
push
sbb
enter
cmp
mov
cmp
push
mov
push
jne
scas
jnp
mov
je
jle
loopne
pusha
arpl
decl
or
roll
scas
arpl
add
mov
sub
push
mov
nop
test
fistpll
push
xor
sbbb
stos
push
mov
int
dec
call
dec
xorb
lcall
enter
cmp
cmp
adc
push
cmp
call
sbb
test
mov
std
out
mov
xchg
push
fcoms
pusha
mov
mov
mov
std
cmp
xchg
mov
leave
cmpsl
jg
xchg
cmpsb
xchg
loopne
daa
push
cltd
into
inc
outsb
xchg
push
mov
cli
outsl
add
dec
decl
iret
pushf
push
pop
mov
aas
xchg
mov
inc
out
adc
mov
hlt
jecxz
xchg
adc
cs
aad
dec
ds
outsb
cld
sbb
dec
fwait
lods
mov
popa
sbb
call
adcl
and
popa
int
ljmp
adc
mov
mov
jecxz
mov
stos
jae
sbbb
fstpl
lcall
shrb
xor
test
jno
pop
mov
adc
mov
ljmp
xorl
jno
sub
mov
jg
ljmp
scas
aam
mov
aam
sub
inc
mov
xor
sahf
stc
and
add
push
adc
xchg
cmp
sti
xor
push
cmc
sub
mov
sub
push
xchg
out
push
data16
push
cmp
insb
sub
mov
out
jmp
std
mov
lds
inc
mov
xchg
into
and
aas
sarb
stos
mov
in
aam
in
aas
int3
cmc
icebp
scas
or
cli
pop
mov
mov
icebp
imul
dec
or
mov
pop
pop
gs
aad
cmp
out
push
clc
ljmp
sbb
std
pop
push
cmp
dec
outsw
mov
cmp
call
sarl
or
repz
xchg
outsl
pop
jne
or
ljmp
dec
in
test
mov
jp
adc
into
mov
mov
mov
rorl
aaa
loope
jnp
mov
mov
mov
or
fiadds
xchg
lock
or
dec
mov
das
add
cmpsl
xchg
int
das
sar
nop
subl
leave
nop
pop
xorb
inc
xchg
loope
lcall
push
cmp
sub
cmp
dec
and
shll
mov
mov
cmc
add
imul
imul
mov
or
cmpsb
cmp
addr16
cmp
xor
inc
mov
dec
es
stos
je
loop
xor
mov
jmp
push
mov
add
call
push
adc
jmp
or
inc
jecxz
jmp
paddsw
mov
xor
sub
orl
sbb
out
cli
jge
pop
dec
pop
es
outsl
jp
daa
inc
scas
xor
shlb
int
add
jo
xchg
ret
fisttps
push
cmp
dec
adc
and
cmp
call
xchg
xchg
push
fdivl
test
in
imul
mov
or
xor
adc
inc
in
gs
addr16
push
pop
inc
das
inc
and
ljmp
mov
into
dec
mov
fs
mov
adc
jae
pusha
xchg
mov
ja
std
xlat
mov
add
cli
mov
frstor
enter
out
mov
dec
push
stos
mov
or
dec
jl
push
or
aaa
loopne
scas
mov
cwtl
mov
insb
or
ja
pushl
std
incl
xor
out
pop
sbb
out
pop
cmp
push
xchg
fstps
mov
pop
addr16
ljmp
ficoml
in
sub
pop
ja
mov
popa
testb
mov
ficoms
jnp
pop
rorl
sub
lock
adc
or
dec
pop
jae
test
int3
vmovlps
filds
and
fwait
mov
cmp
inc
and
negb
sti
and
cmp
push
clc
popa
and
mov
mov
hlt
ds
jb
imulb
mov
pop
rcrb
jns
or
sahf
push
inc
xor
adc
leave
inc
popf
push
jbe
pop
pop
xchg
cld
push
dec
decl
pop
imul
sbb
dec
stos
and
outsl
outsl
ja
fs
pop
adc
in
fsubrs
std
add
call
pop
dec
test
sbb
movsl
sbb
xor
decl
xchg
ret
cmpsl
fdivs
and
ror
sub
pop
and
sub
pop
cmp
pop
xlat
xlat
sarb
sub
ja
bnd
out
add
push
int3
cmp
repz
fs
and
pop
and
inc
cmpsb
inc
adc
pop
dec
outsb
mov
sar
mov
push
stos
imul
push
imul
xchg
inc
xchg
sbb
stos
jmp
mov
scas
ljmp
sub
addr16
pop
adc
mov
lret
pusha
xchg
adc
mov
mov
cs
rcrb
jle
xchg
test
ljmp
add
fsubs
jge,pt
fwait
mov
bound
jmp
bound
push
push
dec
clc
jecxz
or
dec
add
sbb
lret
mov
adc
pushl
cld
mov
sbb
insb
mov
mov
sbb
out
lock
dec
pushf
fstpt
inc
cwtl
push
loopne
shl
pop
add
xchg
or
cmpb
mov
push
hlt
fsubrl
rcrb
cmpsb
ljmp
iret
or
push
test
decl
scas
xor
pop
ja
faddl
incl
xor
xchg
inc
cmp
daa
test
mov
sbb
fcomip
pushl
mov
mov
out
jl
jmp
movsl
into
out
inc
xchg
in
adc
jo
mov
sbb
fwait
sahf
stc
dec
in
sbb
mov
push
sbb
jle
or
shrl
lea
xchg
adc
sti
daa
cmp
out
cmpsb
loop
les
cmpsb
dec
lcall
inc
jne
jmp
cmp
test
ds
sub
push
fcoms
gs
popf
mov
cmp
mov
pushl
or
push
aam
out
mov
jno
lcall
sub
in
cmpsb
pop
into
sahf
lcall
lds
popf
xlat
arpl
push
mov
mov
enter
rolb
push
mov
xchg
pop
enter
fimuls
jno
or
stc
xor
push
inc
sbbl
mov
ficoml
mov
adc
ljmp
sbb
aad
aaa
mov
ds
xchg
sbb
jo
test
pop
adc
inc
das
inc
xor
sub
adc
fs
stos
incl
push
sub
stos
jae
xlat
shlb
js
repz
add
call
jne
jnp
stos
rorl
pushf
add
mov
inc
aad
enter
decl
jmp
rcl
mov
aam
push
aad
std
and
mov
pop
out
or
call
mov
push
lods
pusha
nop
sbb
inc
or
and
cmpsb
adc
bound
jo
aad
lea
test
test
jne
outsl
cli
pop
cmc
lds
jp
sub
stos
inc
ljmp
push
or
lcall
jb
xor
and
icebp
push
ljmp
repnz
fsubs
mov
stc
shlb
scas
or
or
push
mov
loop
cmpsb
mov
or
sub
or
out
xchg
dec
ja
xchg
xchg
mov
mov
bnd
je
mov
push
sub
gs
xchg
xchg
fistps
push
push
ljmp
clc
data16
sbb
push
in
stos
mov
clc
push
movsb
imul
dec
xlat
incl
xchg
and
fst
ljmp
adc
les
xchg
jecxz
rcrl
js
add
pop
and
xor
jb
lods
or
push
aam
dec
adc
lcall
in
loope
add
mov
sub
scas
sub
inc
cmovb
push
mov
push
fbld
mov
pop
adc
xor
or
adc
jnp
or
fisubrl
scas
imul
nop
lcall
mov
out
push
call
sahf
lods
push
lea
add
stos
mov
cli
push
inc
cmpsl
dec
adc
sbb
jge
or
scas
cwtl
adc
mov
push
mov
pusha
dec
ss
ljmp
rclb
arpl
outsl
andl
cmpsb
lret
dec
lods
inc
cmp
adc
inc
jle
insb
fldt
jne
std
es
jbe
jae
stos
test
lcall
mov
mov
lea
jecxz
add
insl
pop
pop
cld
mov
dec
xor
and
push
arpl
xor
fdivrl
ljmp
sbb
adc
fdivrl
pop
cli
jmp
mov
jbe
jo
mov
adc
dec
adc
outsb
add
clc
ja
mov
into
test
stos
mov
ljmp
push
bound
sti
jecxz
mov
inc
or
mov
das
loop
jbe
mov
or
xor
outsl
das
clc
mov
add
rcrb
jmp
push
aas
in
test
icebp
outsb
add
add
adc
decl
push
dec
sarl
mov
gs
out
cmc
movsl
popa
in
sbbb
pop
decl
and
xor
into
jge
fidivs
mov
outsb
aaa
es
sub
adcb
xchg
dec
adc
adc
cmpsl
call
jbe
aad
jge
in
enter
adc
inc
jecxz
out
inc
mov
data16
jnp
mov
jno
les
push
lods
aad
push
mov
incl
insb
sbb
in
dec
imulb
fs
clc
ljmp
mov
call
gs
test
movsb
cmpsl
cmc
movsb
mov
xor
xchg
mov
adc
xchg
shrb
sbb
icebp
mov
cmp
icebp
stos
inc
mov
sub
push
cld
jg
fldl
les
out
mov
int3
pop
nop
mov
cs
sbb
mov
mov
mov
dec
sub
inc
jae
stos
lret
sahf
addl
pop
xor
sbbl
scas
jle
mov
add
test
cmp
stos
daa
outsl
lods
sub
loopne
pop
xor
add
ja
test
mov
and
xchg
jne
adc
mov
fcomip
movsb
dec
fcmove
adc
cmpb
lret
ds
int3
iret
jmp
stos
in
cwtl
push
lahf
stos
sbb
mov
mov
rcr
stos
scas
add
test
add
pushl
adc
ljmp
mov
jge
fwait
or
scas
xchg
mov
lock
jl
inc
jne
cmp
xor
pop
mov
insl
popf
sub
inc
xor
mov
notl
adc
mov
mov
mov
repnz
mov
mov
push
lods
xor
dec
xchg
stos
adc
lcall
push
add
stos
sub
pop
mov
jne
mov
clc
int3
lcall
decl
lock
xor
push
cmp
outsb
push
jmp
mov
or
mov
cmc
repz
in
int
fdivrs
pop
scas
mov
add
xor
jmp
inc
xor
scas
add
shlb
sahf
xchg
jg
mov
inc
mov
mov
movsb
xor
cmp
sarl
cld
fs
sbb
mov
das
ljmp
cmpb
jns
jg
sbb
mov
cwtl
fmul
mov
lds
pop
jnp
int3
pushf
adc
mov
push
aas
aam
inc
pop
clc
das
negb
jle
xorb
js
lcall
jl
les
pop
mov
loope
rcl
cmp
mov
popf
cld
mov
jae
ret
stos
stos
rcrl
push
dec
sbb
lds
xchg
sarl
push
lcall
mov
pop
mov
mov
popf
ja
fwait
movsb
sub
ja
push
adcb
mov
cmp
pushl
xchg
pop
adc
insb
in
mov
je
mov
enter
lock
ljmp
pop
les
fisubrl
xchg
add
mov
or
xchg
test
ret
mov
roll
test
lods
sbb
test
pop
hlt
imul
adc
lcall
adc
gs
push
pop
gs
xlat
mov
pop
sbb
rorb
and
mov
adc
lock
lahf
dec
lret
mov
mov
xor
scas
pop
inc
icebp
dec
pop
pushl
fisttps
mull
pop
inc
xchg
cwtl
test
and
push
xchg
pop
jns
and
dec
cld
out
add
and
cwtl
insb
lcall
push
fdivr
jmp
xlat
push
ret
lahf
loop
mov
insb
jecxz
into
dec
cs
push
mov
mov
mov
ljmp
rolb
popf
lret
lods
gs
sti
cmp
stos
pusha
mov
mov
xor
fcmove
loop
sub
incl
or
mov
sbb
aad
push
enter
popf
stos
jbe
lea
cmp
std
stos
jg
decl
movsl
call
adc
push
mov
and
mov
sti
ret
push
pop
mov
div
jecxz
lods
hlt
push
iret
cltd
mov
in
ss
negl
add
dec
sbb
sub
clc
and
das
mov
inc
and
pop
ja
mov
mov
ss
xor
jmp
mov
pop
das
cmp
pop
in
and
outsb
rorb
fistl
push
push
outsb
cmp
lcall
mov
lds
out
cltd
or
cmp
push
add
mov
fs
or
lcall
sbb
arpl
mov
dec
pop
sub
or
mov
mov
inc
aam
mov
ljmp
sub
mov
push
xchg
enter
push
mov
call
outsl
jge
mov
ret
mov
in
jnp
jg
jg
stos
xor
mov
mov
call
subl
and
lds
add
clc
mov
call
mov
jecxz
divl
dec
xchg
fnstcw
es
jl
mov
cld
scas
aad
jmp
mov
mov
cmp
xor
cld
sbb
stc
jg
call
js
push
xor
ss
rclb
mov
mov
mov
in
decl
pop
js
ss
data16
jnp
addb
adc
mov
rcrl
fwait
mov
inc
outsb
mov
adc
cs
ljmp
mov
leave
rcrl
hlt
idiv
test
jge
dec
lods
xchg
cmc
dec
addl
fisttps
daa
rcrb
cmp
jnp
sahf
loop
jmp
lcall
stos
adc
push
lcall
adc
loop
xor
mov
std
or
test
dec
in
lock
jg
jne
lds
out
lcall
dec
sub
mov
popf
insl
cmpsl
scas
mov
stos
mov
stos
shlb
and
cli
jmp
and
xchg
and
push
pop
ljmp
pop
or
cmp
das
shrb
popf
xchg
adc
mov
and
aaa
push
jecxz
pop
cmpsb
push
jns
incl
dec
fstpt
sbb
in
or
mov
mov
jae
mov
jg
push
jecxz
mov
pushl
sahf
xor
ret
mov
fcmovnu
ret
out
add
mov
mov
in
outsl
dec
scas
pop
and
jns
int3
lds
jnp
test
jno
and
neg
incb
mov
xchg
push
ficomps
mov
or
aaa
fs
mov
ss
mov
fadd
movsl
xlat
pop
pushf
insb
adc
xchg
add
loopne
jg
mov
mov
fiaddl
je
mov
jp
add
mov
pop
dec
add
pop
dec
addr16
rorl
jg,pt
mov
lock
mov
pop
mov
pop
and
xchg
hlt
lea
xor
push
lret
mov
gs
dec
mov
xchg
cwtl
mov
xor
mov
xor
lcall
insl
or
incl
or
out
stos
int3
mov
jmp
add
push
mov
call
xchg
lods
inc
int
push
cld
jmp
fistl
add
and
or
add
pop
nop
inc
addr16
and
sub
xchg
mov
jbe
cmpsl
in
cmpsl
repnz
inc
outsb
sbb
jmp
mov
sbb
mov
dec
add
clc
mov
shlb
mov
dec
cmp
jo
jecxz
sarb
leave
add
ljmp
scas
in
int
sub
mov
fidivrs
mov
sbb
mov
pop
test
jmp
outsl
pop
lcall
sbb
cld
cmp
ret
xchg
mov
imul
or
sti
and
fwait
adc
mov
in
adc
ja
push
popl
inc
clc
jg
xchg
xchg
sub
popf
iret
mov
stos
cmp
jmp
fs
jmp
loope
pop
es
mov
mov
outsb
cmp
loope
jae
loopne
ja
outsl
cli
decl
je
mov
sbb
pop
pop
jbe
mov
mov
call
ljmp
add
ret
push
mov
mov
cwtl
jl
mov
imul
mov
dec
dec
cmp
mov
xchg
cmp
daa
or
sbb
lcall
pusha
and
test
sbb
into
loop
pop
jp
outsb
jge
outsl
sub
ljmp
push
push
ds
sar
jns
out
leave
mov
out
xor
xchg
int3
mov
incl
enter
cwtl
adc
into
mov
lret
push
jge
in
dec
sbb
add
sti
mov
pop
mov
out
mov
cmpsl
jns
shll
sti
and
lahf
jg
cwtl
inc
cltd
test
lcall
push
lahf
jecxz
cmp
scas
pop
sub
nop
movsb
shr
sbb
mov
push
cmp
mov
xor
fwait
push
cmp
jmp
jno
pop
mov
xchg
dec
mov
iret
pop
xor
jns
mov
xchg
adc
mov
xchg
fcoms
outsb
mov
das
mov
in
mov
hlt
lcall
into
pop
es
cs
adc
popl
sbb
push
jb
mov
in
xor
xchg
cmpsb
lods
scas
test
pop
popa
sar
lcall
sub
adc
aam
pop
pop
mov
mov
bound
loope
and
scas
mov
jmp
push
sub
out
idiv
jnp
lods
popa
loopne
into
adc
mov
jecxz
pushf
or
inc
jge
test
gs
sbb
jne
test
cld
popf
sub
sbb
loop
xor
loopne
icebp
jg
mov
mov
cmp
push
inc
jb,pn
mov
les
mov
lds
incb
cmpsb
mov
imul
clc
pop
icebp
mov
das
push
shrb
lds
mov
fstp
mov
mov
mov
cmpsb
xlat
js
addl
jns
call
repz
pop
insb
pop
and
movsl
scas
jge
pusha
imul
enter
jl
jmp
imull
mov
push
aad
push
mov
add
or
cs
dec
in
clc
pop
mov
and
test
sbb
cmp
test
sub
mov
sbb
cmc
push
xor
dec
jmp
je
add
aad
mov
add
jg
add
jnp
xor
sub
sti
movsl
shrl
pushf
jmp
nop
int3
adc
fmul
add
shll
mov
pushf
mov
mov
pushf
pop
sar
pushl
add
movsb
adc
inc
pop
push
inc
adc
and
sti
mov
lock
xchg
pop
jbe
jmp
pop
sar
xchg
rorb
dec
xchg
test
mov
popa
sar
call
sub
cmp
inc
in
int
aad
mov
sbb
adc
mov
lods
mov
daa
cwtl
add
in
aas
imul
inc
imul
jmp
cmc
mov
mov
daa
xchg
mov
lods
sarb
sbb
adc
inc
mov
neg
jo
sbb
lea
push
mov
movsb
addr16
cmc
call
loopne
jne
sub
popa
xchg
les
js
adc
lahf
and
pushl
ss
xchg
pop
rcrl
jae
mov
shll
xor
lret
fisubs
lcall
cs
xor
jo
push
out
sub
out
xor
movsb
insl
lret
repnz
lcall
jbe
xorl
push
adc
ret
popf
shrb
pop
or
push
ret
sbb
push
mov
jnp
dec
or
cmp
scas
sbb
push
dec
mov
movsb
mov
mov
xor
clc
inc
ljmp
adc
fldl
xchg
xlat
mov
mov
and
cwtl
call
mov
into
mov
pop
lea
adc
pop
or
in
lahf
stos
incl
xor
cwtl
mov
sbb
cmpsl
popf
add
sti
decl
adc
xor
js
adc
loope
mov
ret
jg
roll
in
ret
mov
test
scas
int
fisubl
mov
jg
push
fistpll
mov
sar
dec
imul
daa
stos
cmp
in
js
xor
mov
movsl
cli
dec
in
test
cmp
and
xchg
stos
int3
cmp
inc
sbb
dec
aad
mov
xchg
mov
add
lret
jmp
adc
pop
outsb
mov
adc
adc
jno
lret
insb
shl
jmp
aad
lcall
in
mov
sbb
and
pop
mov
mov
add
push
jmp
imul
cmp
in
add
mov
lcall
leave
lds
sarb
jle
test
cmp
push
insb
mov
and
pop
inc
jge
jb
mov
lods
cmp
sbb
stos
adc
mov
outsb
push
jecxz
das
xchg
mov
outsl
fs
call
xchg
pop
out
lods
xchg
into
les
pop
das
clc
xor
mov
fidivl
sub
adc
ss
lods
sbb
lcall
mov
mov
inc
add
dec
shrb
shl
push
fistpl
fstps
pop
hlt
stc
scas
cli
ljmp
daa
sub
lods
out
jnp
cltd
iret
sub
cwtl
stos
fs
roll
push
imul
jo
insl
dec
les
fisttps
aas
or
arpl
and
pop
jmp
clc
lret
leave
popf
dec
into
and
xor
mov
pop
cmp
daa
dec
add
fs
into
decl
jecxz
stos
aam
mov
dec
cmp
dec
xor
in
mov
and
xchg
push
addl
in
or
push
push
mov
addr16
mov
or
fucom
fiadds
clc
pop
mov
addl
mov
xor
jbe
pop
inc
mov
cmp
incl
lods
jg
xlat
mov
mov
jbe
mov
push
or
dec
mov
imul
mov
and
sub
adc
or
inc
mov
ljmp
mov
scas
xor
cli
mov
pop
ljmp
gs
xchg
push
jmp
fimull
and
mov
je
mov
xchg
pop
inc
lock
call
cwtl
jo
inc
push
push
std
lret
mov
xchg
sub
movsb
xor
and
fstps
sarl
xchg
rol
aas
mov
std
pusha
mov
repnz
inc
sbb
inc
sbb
pop
xchg
int3
int
and
xchg
push
mov
stos
les
out
icebp
jg
dec
lahf
repz
dec
sarl
nop
pop
xlat
mov
negb
test
out
and
mov
sti
add
mov
test
iret
jmp
fs
loopne
xor
sbb
repz
or
cmpsb
fists
test
sbb
sarl
sti
adc
aad
fisubrs
cli
scas
aam
lods
pop
ret
add
je
decl
add
add
jge
adc
out
cmp
fs
pop
mov
int3
cli
dec
cmpb
push
sahf
leave
subl
loopne
popf
pusha
and
mov
icebp
ljmp
push
cmp
test
fwait
pop
sahf
cs
sub
jg
push
mov
push
incl
cld
pop
push
lahf
icebp
ja
lods
out
mov
mov
mov
inc
popa
movsb
inc
icebp
call
inc
xor
xor
fs
cmp
push
mov
xor
jp
lcall
test
jg
dec
add
sub
or
std
cltd
dec
test
outsb
jbe
jg
pop
adc
aaa
push
rclb
push
idiv
push
call
sub
pop
and
xor
or
fwait
notb
fs
pop
mov
ljmp
dec
in
addl
mul
ss
ljmp
dec
fidivl
outsb
mov
jecxz
rolb
orb
das
xchg
test
sbb
lahf
imul
stos
call
pop
jecxz
popf
insl
lcall
pop
xchg
ss
inc
outsb
jnp
add
add
lcall
sbb
dec
out
lods
pop
mov
popa
mov
jbe
jne
mov
cmc
sbb
inc
xchg
xchg
icebp
int
inc
leave
xor
fstp
and
mov
mov
add
xlat
decl
fistps
mov
push
jno
mov
movsb
mov
mov
incl
vmovddup
sub
mov
int3
sub
pop
std
mov
or
push
inc
idiv
incl
test
xchg
sbb
mov
pop
xor
sub
add
push
cld
mov
in
adc
push
stos
jg
and
xchg
xor
call
adc
ds
adc
hlt
sbb
scas
movsl
sahf
push
sub
jmp
sbb
jecxz
jle
cmp
hlt
or
scas
clc
push
xor
call
stos
and
dec
sbb
into
pop
shll
cmp
stos
sub
or
xor
sub
add
inc
cmc
cmp
lcall
iret
jecxz
cmp
add
mov
mov
ljmp
lods
sbb
adc
test
fwait
lret
stc
mov
and
sti
fldt
loope
ljmp
dec
hlt
je
pop
xchg
js
or
and
lcall
rcr
xchg
adc
cmpsb
push
jns
das
mov
xor
aaa
sbb
shll
out
cli
stc
addr16
xor
mov
scas
adc
lea
test
dec
sarb
or
push
xchg
sub
jg
call
cmp
jns
sub
jne
lods
icebp
inc
pop
rcrb
into
cmpsb
pushl
or
jne
mov
adc
mov
xchg
ss
xor
cmp
int3
pushf
stos
xchg
inc
dec
test
add
sbb
xchg
jnp
add
mov
es
lcall
jnp
push
cs
mov
xchg
jb
and
pop
ja
movsl
pop
jle
cs
xor
decl
mov
clc
adc
jp
loope
adc
sbb
testb
aaa
sar
ljmp
adc
add
lods
xchg
das
jmp
pop
out
mov
jne
fcmovnbe
lock
mov
sub
mov
pop
inc
lahf
scas
std
lock
adc
lcall
xor
mov
js
mov
scas
roll
xlat
push
hlt
sub
push
mov
lock
fs
ret
cmpsl
lods
subl
sub
xchg
call
aaa
lock
lcall
xchg
mov
xchg
or
sbb
mov
jp
dec
mov
adc
sub
dec
cs
add
lds
in
sub
or
pushl
nop
jae
in
cmp
or
aam
sbb
ss
lods
leave
jnp
sub
cmp
scas
gs
mov
inc
add
incb
inc
rdtsc
xchg
sub
dec
loope
call
jne
sub
pop
push
push
pop
adc
fisttps
scas
add
cmovbe
mov
testb
adc
imul
jmp
push
mov
lea
lods
mov
enter
dec
xor
sub
pop
mov
inc
cltd
jg
pushl
mov
fidivs
bnd
fadd
stc
and
incl
cmp
mov
inc
lods
xchg
cmp
ror
mov
xchg
push
push
call
data16
arpl
pop
lods
pop
push
xor
ja
ja
sub
sub
inc
loop
lods
adc
test
mov
mov
fmull
adc
lods
push
inc
sub
nop
test
out
cmp
fbld
mov
movsl
mov
lahf
negb
outsb
pushf
adc
lds
and
cmp
or
std
mov
pop
ja
js
inc
das
and
sub
push
jmp
addb
lret
xchg
subb
jg
pop
pop
jl
xor
je
or
dec
xchg
cld
mov
movsb
stos
fisttpl
xchg
inc
jns
mov
pop
adc
mov
es
mov
add
xchg
push
dec
loope
add
sahf
lea
outsb
and
cmp
mov
or
ret
jg
lods
test
aaa
add
scas
adc
in
jg
mov
adc
out
ror
scas
popf
jo
scas
push
cs
outsb
fisubs
inc
lcall
inc
test
adc
mov
add
push
test
adc
cltd
inc
mov
mov
or
lods
out
sub
movzbl
lds
cmp
jg
inc
inc
bound
subl
clc
cmp
icebp
imulb
mov
cwtl
pop
lea
fildll
pop
lea
scas
scas
push
lcall
pop
ret
cmp
lea
jp
lea
xchg
decb
data16
ljmp
xchg
scas
scas
test
test
xchg
gs
and
lods
mov
sti
sbb
incl
mov
int3
cmp
push
stc
roll
test
or
add
ljmp
das
and
fs
ret
sub
ror
lea
dec
and
xchg
jmp
mov
xchg
inc
mov
fisubrl
lcall
into
sbb
ret
lods
cld
aam
sahf
int
lods
sti
xlat
stos
scas
mov
rorb
js
in
idiv
dec
fucomi
dec
iret
out
jnp
std
adc
pop
loop
and
idiv
ljmp
std
and
adc
in
daa
add
mov
mov
adc
test
xor
push
ljmp
clc
sbb
xor
fldcw
mov
scas
fistpll
bound
xchg
sbb
daa
mov
mov
in
cld
nop
pop
cld
mov
imul
dec
aam
dec
pop
out
movsl
fldt
pop
sbb
shr
adc
aam
push
and
or
call
push
fucomp
ds
vunpckhps
adc
push
std
push
mov
add
fbld
fisttpll
inc
mov
dec
lods
pop
cmp
cmpsb
outsl
cmpsb
cmpl
in
loop
ljmp
cmp
or
or
es
sbb
cld
fimull
dec
push
dec
jl
notl
out
sti
push
fs
sbb
jno
mov
xchg
stos
pushf
out
xor
mov
sar
std
sbb
lods
sbb
or
mov
mov
pushf
adc
jecxz
das
aas
mov
jg
inc
mov
pusha
mov
leave
test
jo
nop
add
xchg
call
sbb
pop
ljmp
mov
adc
fs
xchg
inc
sbbl
pop
add
mov
fwait
ljmp
pushf
movsl
cmpl
inc
add
pop
dec
cmp
jmp
lods
sub
push
mov
pop
test
pop
call
scas
mov
test
mov
cld
jmp
or
push
testb
adc
repnz
and
call
decl
iret
sub
imul
pop
or
mov
adc
lods
dec
sbb
outsb
jo
inc
sar
cmc
push
test
dec
cwtl
xchg
imul
xor
ljmp
jno
bnd
icebp
shrb
xor
gs
mov
inc
jg
out
mov
call
mov
xor
mov
mov
gs
jle
hlt
iret
lds
aam
jae
sub
sub
add
std
loope
ficoms
in
mov
jp
mov
jno
and
fsubl
ja
mov
jnp
or
call
or
inc
push
dec
jo
jns
cli
inc
jl
xor
loop
add
adc
sbb
inc
push
add
outsl
clc
outsl
cli
orl
add
shlb
sar
jmp
int3
inc
jae
pusha
fldl
mov
decl
xor
mov
sbb
adc
xchg
test
push
aad
inc
movsb
pop
and
pushl
aam
xor
fwait
and
inc
daa
nop
push
das
int3
test
push
pop
leave
mov
pop
xor
dec
lret
lahf
mov
inc
test
or
ljmp
jb
cld
lds
icebp
add
fsubrs
mov
fcomps
pushl
pop
shrb
cmc
adc
test
or
sahf
pop
xor
in
or
pushl
hlt
sbb
push
cld
test
test
fwait
sbb
call
xlat
or
outsb
mov
jo
xchg
sbb
push
lods
outsb
lcall
dec
loope
test
outsb
fdivrl
fsubs
jo
test
adc
decl
mov
pop
sub
mov
mov
pop
fprem1
mov
test
mov
scas
std
mov
mov
push
outsb
xorl
push
gs
jns
jg
cmpb
pop
xor
bound
stos
ja
mov
clc
jnp
adc
les
hlt
xchg
mov
cmp
mov
and
lds
cs
popf
xorb
cmp
shrb
cli
out
aaa
call
sbb
leave
fcompl
lds
push
mov
pop
mov
dec
jmp
dec
stos
fldz
xor
fs
in
ret
mov
jp
lcall
or
icebp
xchg
and
pop
mov
add
jp
xor
call
lea
stos
aad
rcll
icebp
test
pop
sbb
test
adc
incl
fists
push
add
lahf
sub
mov
icebp
mov
inc
dec
es
jle
adc
int
pop
std
or
adc
lea
mov
loop,pt
cltd
ljmp
cld
inc
in
jnp
push
cmpsb
enter
push
fisubrs
loopne
mov
push
jae
cmp
pushf
mov
sub
cmp
sub
aam
jbe
cmp
stos
cmpl
push
out
jg
lock
fstpl
push
adc
cmpsl
pushl
cld
cmp
mov
adc
pop
dec
sub
pop
mov
jecxz
push
bound
cwtl
cmp
and
lcall
movsb
mov
ret
mov
pop
test
mov
or
lcall
jmp
and
mov
lahf
dec
arpl
call
mov
jp
pop
sbb
outsb
stos
dec
inc
mov
insb
out
jno
ljmp
push
lds
dec
sarb
andl
xchg
daa
xchg
int3
xor
es
js
in
and
decl
adc
jno
and
ret
adc
imul
lods
inc
mov
cmp
test
test
faddl
popa
out
fstps
sub
stos
jnp
cmp
mov
mov
scas
adc
mov
cli
jb
xchg
pop
movsb
xchg
mov
jns
pop
into
out
daa
lcall
lock
lcall
and
insl
sub
push
cmp
fwait
inc
add
incl
fistps
adc
mov
out
mov
out
lea
gs
and
mov
cmp
sbbl
sub
mov
add
xchg
test
mov
fisttps
mov
mov
or
and
out
cli
in
shrb
stos
and
pushf
xor
cmp
mov
mov
inc
mov
decl
sbb
bound
cli
mov
mov
test
lcall
std
sub
daa
lock
leave
mov
test
lds
shll
xor
pushl
mov
adc
idivb
sbb
jns
pushf
mov
cmpl
dec
lods
and
and
push
imul
push
movsl
and
decl
lock
fucomp
jp
xor
lods
cmpsl
cmp
movsb
add
push
cltd
mov
inc
push
jns
std
or
scas
push
aam
stos
push
xchg
pop
mov
ficompl
xlat
lock
incl
scas
dec
imul
cltd
xchg
clc
sahf
push
scas
or
sub
fst
fwait
push
jg
test
popf
movsl
xlat
mov
and
leave
je
ljmp
fcoml
pop
lret
js
pop
jmp
lods
mov
mov
mov
jae
test
mov
sub
pop
test
in
xor
setnp
in
mov
sub
ljmp
xchg
sbb
stc
push
jns,pt
pop
ds
push
lcall
cwtl
out
xor
rcrb
in
mov
or
incl
lds
gs
inc
lcall
mov
fistps
pop
in
and
and
ret
and
lcall
add
fwait
test
in
adc
sbb
add
lcall
push
xor
dec
sarl
mov
out
popf
fwait
and
loope
lcall
repnz
mov
ja
pop
jl
scas
insb
mov
out
jg
aaa
sar
out
lods
xchg
pusha
inc
and
push
into
cmp
stc
fwait
fwait
mov
mov
dec
shl
aad
xor
mov
jmp
adc
gs
pop
mov
inc
and
jecxz
mov
js
sbb
sbb
push
push
pop
popf
push
ret
insl
mov
cltd
aas
sbb
scas
sar
call
in
sub
cmp
in
mov
cmp
ss
cli
cmp
xchg
push
mov
pushf
out
inc
xor
cmpsl
fwait
mov
push
imul
addr16
aas
push
mov
jb
ds
sbb
mov
divl
ja
mov
add
mov
movd
mov
inc
xchg
mov
lcall
in
repz
xorl
or
or
faddl
decl
inc
test
aas
jmp
inc
in
movsb
cmp
decl
lahf
xchg
aaa
subl
mov
jg
mov
test
sub
frstor
mov
sbb
mov
cmp
pop
dec
pushf
dec
insl
fidivrl
adc
xchg
pushl
mov
xor
push
test
sub
scas
mov
pushf
stc
or
adc
add
clc
das
jo
pushf
jae
cmp
mov
sahf
or
movsb
fstl
popf
inc
mov
nop
mov
mov
adc
mov
add
inc
movsb
cmp
mov
mov
ss
imul
sub
fists
es
push
pop
mov
adc
inc
lret
jecxz
fdivr
sti
dec
or
inc
fstpl
test
loope
movsl
dec
idiv
call
push
cmp
out
mov
add
xor
sub
add
sti
mov
cmpsl
push
add
aaa
dec
clc
dec
adc
int
inc
sub
and
fdivl
sub
decl
inc
sbb
test
imul
hlt
sub
call
lcall
sub
mov
mov
adc
insb
xchg
movsb
pop
decl
les
cmp
inc
mov
sbb
scas
mov
inc
xchg
rorl
out
adc
scas
stos
loop
sub
jmp
push
pushl
std
xor
or
sub
inc
out
fsubr
push
out
testb
shlb
movsb
aam
incl
cmp
dec
test
outsb
inc
movsl
ljmp
cmpsb
fldcw
cmp
dec
minps
add
xor
jg
jecxz
adc
jnp
sub
in
cld
cmp
popa
mov
sub
jmp
insl
dec
sbb
loopne
dec
xchg
outsb
movsl
aad
in
inc
xchg
mov
xchg
test
pushl
mov
pop
das
aad
mov
mov
lret
std
inc
add
icebp
call
and
out
andb
punpckldq
push
push
adc
xchg
in
lock
outsb
divb
add
ret
stc
mulb
add
gs
movsb
mov
je
sbb
incl
fcoms
or
je
or
and
xchg
mov
fldl
gs
aam
test
jg
incl
sbb
stos
lods
cmp
and
and
cmp
push
mov
fildl
cmpsb
repz
sti
xchg
and
mov
fs
call
std
pop
jbe
add
pop
jae
cmp
mov
pop
out
jne
dec
decl
in
in
xchg
movsl
jmp
notb
and
or
inc
adc
jg
cmc
mov
outsl
ja
mov
cmpsb
mov
rolb
pushf
mov
jmp
cmc
int
cmpsb
dec
rorb
cmpsb
jecxz
call
and
or
loop
hlt
aas
xor
mov
sti
cs
loope
daa
pop
loopne
test
cmpsl
arpl
pop
scas
cmp
push
insl
out
or
insl
lcall
cmpsb
jmp
shlb
nop
daa
and
imul
imul
insl
and
das
iret
movsl
fnstenv
xchg
xor
js
xchg
shlb
jmp
or
lds
sbb
clc
ret
adc
pminsw
stos
xor
aaa
test
lods
incl
scas
lcall
movsl
cli
add
imul
push
sti
decl
cmpsb
adc
sub
pushf
and
es
xor
add
mov
incl
gs
xchg
xor
add
inc
dec
or
pop
push
inc
clc
push
push
xchg
insb
push
sub
lods
mov
jg
pop
mov
and
mov
fildl
ja
rclb
arpl
fucom
push
in
mov
popf
lds
mov
jl
jg
lock
and
ljmp
aam
xchg
lods
sarb
xchg
mov
lcall
clc
loop
ljmp
jg
jle
pop
test
push
fdivl
ja
and
xchg
decl
aaa
mov
leave
test
lds
jbe
push
cmpsl
cmpl
add
jge
es
inc
jmp
cmpsb
in
inc
and
lret
add
xor
fs
fcomip
mov
aad
cmpsl
in
lcall
lods
loope
xor
outsl
sub
pop
mov
cli
or
sbb
jp
pop
repz
push
xor
in
mov
push
inc
loop
jmp
xor
jnp
and
repz
call
sub
xor
je
les
lret
ja
sbbl
leave
xor
in
lret
fbld
mov
dec
mov
push
sti
jecxz
js
add
push
cld
incl
out
mov
jp
test
leave
xlat
mov
lret
pop
test
jge
incl
jno
xlat
adc
sub
sub
outsl
inc
push
js
push
rorb
add
xor
mov
cmpsl
mov
hlt
shlb
dec
cmpsl
xor
jg
cmpb
sub
shlb
leave
cmp
jmp
jg
xor
cmpsb
inc
lahf
stos
jno
scas
xor
mov
dec
ljmp
mov
add
lret
adc
jl
and
shll
mull
div
ss
cmp
cli
mov
cmp
add
inc
arpl
add
pushl
mov
popf
test
test
mov
jmp
shrb
ss
push
xlat
jno
sti
sahf
cmp
cmp
mov
pop
ss
inc
stos
mov
pop
arpl
xor
pop
sub
cld
addr16
cmp
push
mov
enter
or
push
les
xor
fildl
xchg
pop
mov
stos
mov
lds
movsb
adc
data16
pop
xchg
decl
mov
imul
pop
out
les
incl
sbb
push
adc
cltd
lahf
js
inc
mov
pop
xchg
rorb
xchg
xor
decl
aad
or
xlat
jl
push
sub
incl
and
push
sub
fsts
cmp
idivl
fisttpll
mov
xor
cli
inc
mov
test
and
adc
mov
dec
dec
xor
xor
or
cmpsl
or
jb
imul
cmc
jecxz
mov
pop
sub
xchg
fildll
and
call
inc
dec
decl
push
xor
cmpsl
xchg
dec
jmp
shl
sub
inc
addb
lret
sub
jp
das
cli
test
fcomps
inc
out
mov
in
fbld
fildll
enter
jnp
ljmp
fwait
mov
jg
ss
jno
imul
and
test
stos
add
repnz
cmp
or
repz
cli
mov
imulb
inc
test
push
rolb
push
sbb
pushl
fcoml
cmp
sub
sahf
movsl
ror
ss
fstpt
outsl
out
cld
sub
pushl
mov
mov
repnz
inc
mov
inc
fiadds
sub
push
dec
add
pushl
push
cmp
out
mov
sahf
in
lea
add
add
test
repnz
sub
push
pusha
cmpsl
jg
add
call
in
psllw
xchg
jmp
push
inc
pushf
outsl
sub
lcall
stos
das
hlt
incl
mov
pop
rcr
and
push
sbb
xchg
stc
into
xchg
pushf
lcall
out
inc
jp
xchg
ret
jo
sbb
movsl
ljmp
sub
inc
cmp
ljmp
inc
ss
and
mov
xchg
dec
jge
fdivl
push
imul
cmp
orl
das
das
xchg
mov
sub
test
iret
mov
mov
adc
decl
das
mov
enter
xor
xor
mov
lcall
lea
push
jmp
adc
mov
xlat
test
dec
mov
jne
ja
adc
lcall
ljmp
lahf
mov
aas
roll
add
inc
dec
mov
mov
in
mov
pop
ljmp
testb
cs
sub
xor
movsb
dec
pusha
sub
incl
sub
sub
test
push
nop
lahf
dec
fs
adc
ljmp
xor
push
stos
mov
mov
cmp
les
jmp
popf
pop
out
mov
jmp
xlat
pop
enter
sahf
jp
lahf
xor
incb
lret
inc
out
out
aad
mov
lds
mov
xchg
mov
inc
sar
cmpb
mov
jns
int
jle
clc
jg
xchg
fnstcw
sarl
or
inc
cs
mov
pop
jmp
test
inc
pop
push
mov
add
loop
jmp
add
pop
jno
add
decl
lret
mov
mov
xchg
lret
int
into
mov
add
push
jl
cmp
jg
push
xor
mov
out
xchg
mov
ss
mov
rolb
aas
xchg
loop
and
xchg
and
cmp
lret
mov
and
inc
mov
flds
divb
lret
das
gs
ljmp
mov
pusha
pop
gs
dec
daa
incl
sub
xchg
in
or
out
mov
push
dec
aad
int
mov
add
push
push
iret
aad
jo
pusha
mov
xchg
movl
es
pop
push
sub
ss
jp
sub
jmp
mov
pop
daa
and
xchg
repz
cmc
dec
add
scas
sub
test
mov
cmpsb
jmp
fidivrl
sub
fcompl
fwait
inc
fisubs
adc
cltd
sub
int3
mov
cmp
inc
in
into
mov
xor
loope
mov
sub
sub
mov
int3
mov
mov
outsl
xchg
mov
cmp
movsb
ja
sub
cld
or
mov
or
ret
mov
cmpsb
pushl
jnp
and
sub
jae
std
ljmp
in
iret
inc
pop
std
jmp
in
sub
fildll
mov
loopne
pushf
push
test
lcall
fists
int3
lods
cltd
adc
aaa
jae
or
push
fstpt
jle
mov
cmp
test
xchg
shll
scas
shrl
scas
push
xchg
push
mov
pop
addr16
xchg
push
std
mov
sahf
call
jl
cmpl
add
cmp
jne
push
jno
push
pop
insl
cmp
aas
push
outsb
lea
insb
inc
inc
push
add
inc
mov
sar
js
dec
dec
repnz
dec
push
inc
sub
lret
mov
pushf
incl
aaa
xchg
sbb
inc
loopne
scas
xor
int3
cltd
push
lcall
dec
loopne
std
and
movsb
jb
mov
and
mov
std
fisttps
xchg
mov
pushf
sub
adc
testl
or
push
movsb
mov
mov
outsl
pop
or
in
stc
popa
mov
neg
push
out
inc
xchg
ljmp
outsb
ficoms
mov
inc
aam
test
sti
out
into
mov
imul
movsl
movsl
lods
lret
jbe
mov
dec
mov
sub
mov
pop
or
mov
or
mov
jne
push
or
lahf
jno
jmp
outsl
fdivs
inc
js
add
mov
sti
add
enter
jb
leave
mov
call
std
pusha
ss
in
push
push
cmp
sub
and
inc
cld
push
fcoml
call
sarb
xchg
inc
xchg
cmp
gs
test
fsubl
arpl
pushf
rclb
xchg
ljmp
incl
cld
jmp
mov
jae
fstl
or
push
xchg
inc
hlt
das
call
std
and
sub
dec
adcl
negl
cmp
mov
pushl
movl
stos
rorb
aaa
ljmp
xchg
xor
movlps
xor
nop
mov
lahf
lahf
mov
cmpsb
pop
inc
ret
xchg
daa
cltd
adc
ljmp
call
xor
int
popl
lret
inc
shlb
jle
xor
pushl
ds
adc
cmc
rcrl
mov
ret
scas
in
mov
push
xor
stc
push
mov
call
push
aas
xchg
mov
stos
outsl
jno
iret
xchg
adc
out
clc
call
cmp
fstpl
popf
push
mov
xchg
pop
mov
roll
xor
sub
inc
sub
insl
jmp
clc
cltd
cmp
xchg
call
add
or
repnz
lods
fucomip
mov
ret
ljmp
aam
xchg
pop
mov
decl
dec
ret
hlt
stos
and
mov
or
inc
mov
stc
sbbb
sub
call
pushf
xchg
xor
mov
inc
test
sub
out
mov
lods
mov
roll
push
jecxz
nop
mov
ljmp
orl
mov
xchg
cmp
push
arpl
sub
mov
js
inc
mov
std
inc
mov
cmp
insb
add
xchg
inc
xchg
pop
cmpsb
push
mov
fdivs
add
xchg
jae
xchg
filds
push
sbb
jg
xchg
insb
xor
xchg
mov
imul
xchg
xchg
in
xchg
xlat
ret
rcll
cmpsl
andl
xchg
or
out
cli
lret
inc
aad
or
shll
cmp
mov
push
or
cld
mov
movsl
push
jmp
call
push
sub
adc
aam
cmpsb
lahf
ret
xchg
je
pushf
lcall
pop
cmpsl
aaa
mov
imul
push
pop
xchg
inc
nop
and
cmpsb
scas
xchg
aam
sbb
popa
daa
test
iret
pop
lds
and
scas
cld
fbstp
and
cmp
mov
lods
sub
jg
cmp
rclb
jg
cmpsl
lods
jge
mov
mul
sub
in
aas
dec
arpl
xchg
in
fdivl
xchg
sahf
in
cmp
jmp
xor
outsb
jbe
aas
cs
repnz
adc
clc
jecxz
iret
shll
jmp
jle
fs
scas
push
pop
cmp
adc
das
mov
cmc
mov
mov
std
mov
test
pusha
cmp
jmp
xchg
dec
addr16
jae
push
negb
or
fistps
cmp
decl
push
cmp
inc
xorl
push
add
cli
lret
mov
cmp
filds
jmp
pop
mov
mov
or
jge
das
cli
lcall
sub
xor
cld
mov
and
clc
jg
out
aas
ss
dec
jg
call
sbb
adc
aam
inc
and
popf
cli
push
pusha
cld
push
add
mov
mov
jg
xchg
loop
outsb
add
and
gs
hlt
xchg
mov
out
clc
lahf
cmp
jne
sahf
push
inc
test
rcl
jnp
jns
inc
insl
sbb
xchg
sti
shl
push
jg
cli
decl
sbb
dec
pop
cwtl
pop
or
mov
or
call
pop
sub
jl
scas
xor
add
sti
cvttps2pi
sbb
fs
inc
call
cli
in
cmpsb
mov
xor
lock
sbb
cmp
leave
mov
jmp
mov
test
jo
push
jno
in
lock
add
sar
dec
cmpsb
fcomps
call
pop
and
push
push
test
jo
popf
mov
pop
ret
sbb
rorb
or
call
in
and
lds
pop
jno
lcall
lcall
cwtl
test
rclb
pop
mov
mov
and
daa
into
lods
out
clc
decl
and
sbb
test
lods
movsb
mov
jbe
fisubrs
repnz
imul
xor
or
fwait
pcmpeqb
aaa
cld
xchg
inc
nop
fidivl
je
repz
movsl
pop
ljmp
cmp
mov
subl
jmp
add
inc
and
loop
add
data16
lcall
mov
add
hlt
insl
and
test
popa
sbb
jg
lret
scas
mov
cmp
lock
inc
dec
xchg
push
test
sbb
xchg
stos
lods
lcall
cmp
hlt
sbb
cmp
mov
es
leave
pushf
xor
inc
mov
cli
dec
iret
inc
incl
lret
cmp
push
loopne
ror
jle
rolb
in
std
push
sub
addl
sbb
push
std
pop
loopne
inc
sarb
cld
add
idivb
dec
out
inc
inc
inc
add
call
pushf
adc
lock
push
add
repnz
das
cmc
pushf
insl
xor
and
cmp
ljmp
out
fidivs
cmp
aad
mov
insl
dec
test
mov
sahf
lea
jl
ret
popf
loopne
aaa
mov
or
pushf
cmp
sub
lcall
push
sub
lcall
out
add
lock
test
mov
jnp
mov
fwait
cld
test
dec
lods
mov
mov
pushf
dec
lcall
mov
hlt
adc
sti
fisubrs
or
mov
lahf
int
mov
and
mov
jae
leave
test
or
rclb
dec
sahf
mov
jo
test
xchg
adcl
fldcw
pop
fwait
jl
pop
in
cmp
popf
ljmp
mov
inc
adc
arpl
and
cmp
add
cmc
ret
xorb
pop
push
movsl
jns
mov
pushf
add
sti
scas
movl
cltd
or
into
lods
inc
push
mov
scas
clc
filds
enter
loopne
enter
out
ret
push
cmp
cltd
adc
stos
insb
or
jmp
popf
cmp
rolb
lcall
mov
and
sub
ds
lcall
inc
inc
cli
xchg
repnz
rcrl
imul
call
add
jl
pushl
dec
mov
movsl
test
jmp
jnp
xor
xlat
dec
pop
xchg
add
push
rclb
gs
mov
xchg
lock
cmp
xchg
pop
sahf
xor
cmp
cmpsl
shr
clc
pushl
lods
inc
xchg
clc
cmp
lret
and
popf
jmp
or
pushl
inc
data16
rorw
std
scas
clc
xchg
popf
adc
fiadds
insl
lea
adc
pushl
mov
xor
and
add
mov
repnz
es
mov
sub
es
test
sar
jg
jg
mov
push
out
inc
call
inc
push
inc
cmpb
sbb
add
jmp
ds
sahf
jge
xchg
xchg
xchg
mov
lcall
lcall
loope
movsl
add
enter
adc
int
sub
push
add
pushl
fisubrl
mov
sbb
and
mov
push
and
test
xchg
test
fs
mov
pop
pop
adc
adc
arpl
scas
aaa
mov
push
jno
test
lret
loop
cltd
jne
pop
lods
into
cltd
mov
outsb
mov
in
push
inc
iret
repnz
and
decl
outsl
xorl
mov
jge
jae
add
js
push
add
lahf
and
decl
sub
adc
and
je
sub
jle
outsb
jo
incl
jb
and
or
out
ss
inc
scas
cwtl
ret
clc
negl
sub
xchg
adc
dec
popa
mov
int
mov
push
sbb
insb
sti
ja
sub
popf
or
lea
fs
repnz
jl
mov
cs
aad
cwtl
test
fdivp
stos
jnp
scas
outsl
dec
jmp
or
ret
add
push
mov
sarb
inc
push
adc
shll
iret
inc
jo
ror
out
mov
jmp
adc
cs
data16
adc
stos
lods
pop
in
cmpsb
hlt
sub
xor
or
pop
incl
cld
lock
pop
mov
sbb
xor
movsb
push
gs
lahf
pop
cld
dec
sbb
loop
jecxz
loop
pop
insb
leave
pop
loope
add
in
es
outsl
fucomp
push
mov
push
cmp
scas
out
add
xor
sahf
inc
lock
mov
insl
jg
inc
mov
out
inc
sub
xchg
ficompl
andl
add
jg
xchg
cmc
movsl
jmp
aaa
das
imul
jl
adc
pushl
lcall
pop
cmp
cmp
inc
repnz
xor
imul
scas
mov
sbb
clc
mov
imul
js
jle
inc
cmp
and
push
mov
lcall
ljmp
loopne
inc
lds
icebp
sbb
mov
sbb
es
jle
out
fimuls
call
xor
jne
out
push
outsl
add
mov
jo
es
loope
jmp
imul
ss
loopne
xchg
fs
pop
xor
jle
pop
or
add
imul
pop
out
xor
push
stos
ljmp
cmpsb
cmp
movsb
xor
fwait
int3
add
daa
xchg
xchg
xor
fnsave
mov
scas
lds
mov
push
ret
cmpsl
std
lcall
call
inc
ds
scas
push
or
cld
jg
ljmp
pop
jbe
xchg
jae
sbb
xor
imul
inc
js
mov
ret
cmpsb
cmc
lea
lds
sbbl
push
cld
test
cli
decl
sar
jmp
dec
call
test
cwtl
idiv
call
movl
mull
cld
sahf
mov
popf
mov
nop
test
or
and
test
call
test
mov
imul
cmp
jbe
mov
xchg
scas
push
mov
aam
fcomi
pop
les
in
popa
cmp
incl
mov
sub
hlt
inc
sahf
out
pop
inc
aaa
mov
lahf
jae
in
sbb
call
mov
aaa
stos
xchg
inc
in
mov
je
or
lods
xor
sbb
mov
popf
pop
jmp
inc
cltd
sbb
nop
and
mov
sub
jge
out
cltd
cmc
ret
jbe
sbb
inc
scas
pop
ljmp
mov
sub
mov
mov
mov
mov
bound
std
lods
mov
inc
cli
ret
jne
lcall
jo,pt
jb
mov
outsb
sub
rolb
aaa
cmp
push
inc
gs
xor
enter
ss
decl
or
mov
scas
sti
ret
pop
scas
shrb
ljmp
cmp
stos
add
jo
jge
loope
mov
pop
xchg
repnz
pop
nop
push
shlb
mov
pushf
bound
cltd
mov
lret
xchg
std
insl
xor
or
decl
adc
test
mov
pop
mov
stos
jl
lcall
das
loopne
adc
mov
aas
js
js
cmp
and
pop
cmc
aaa
and
popa
mov
js
subb
add
mov
stc
sub
sub
decl
mov
ret
adc
cmc
lods
pop
pop
fwait
cwtl
sti
and
roll
add
mov
mov
mov
out
dec
pop
or
lcall
mov
jne,pn
outsl
into
cmp
ja
jb
pop
adc
imull
out
push
xchg
jno
lcall
test
cmpsb
push
add
sub
js
ss
decl
test
gs
xchg
popa
test
push
ror
mov
pushf
jmp
call
xchg
in
stos
push
cmp
xor
xor
repnz
cli
pop
cmp
ljmp
pop
lock
cmp
or
ljmp
xchg
inc
pop
or
ljmp
ljmp
jp
and
pop
lock
mov
dec
icebp
faddl
dec
push
dec
clc
stos
cmp
pushl
push
push
or
hlt
add
mov
push
scas
inc
nop
mov
add
ss
jno
cwtl
xchg
insl
decl
push
adc
xor
cmp
mov
sbb
jmp
lcall
rorl
and
add
mov
aad
sbb
pop
adc
fmuls
pop
mov
subb
shll
lea
jns
mov
in
jle
or
mov
fcomip
sti
dec
call
pop
icebp
xor
vmovaps
add
movsl
insb
cld
or
pushl
push
rolb
cwtl
inc
cli
clc
lods
repnz
loop
adc
icebp
jg
mov
movsb
insl
pop
lcall
xor
sub
pushf
add
cmp
je
lret
or
pusha
sbb
and
mov
mov
mov
lcall
cmp
mov
lcall
das
adc
scas
sbb
pop
cmp
cltd
inc
inc
hlt
adc
pop
xchg
pop
mov
dec
jle
lahf
push
popf
fwait
mov
mov
and
in
inc
cmpsb
cmp
xchg
in
push
enter
and
imul
sbb
push
popa
and
mov
out
pop
loope
mov
inc
out
mov
cltd
xor
test
int
pop
jecxz
inc
mov
decl
xchg
mov
mov
lret
mov
decl
call
xchg
rcl
push
sub
mov
lds
test
jb
jecxz
inc
push
push
inc
sub
mov
sbb
cmp
cwtl
push
jp
sbb
xor
pop
into
jnp
filds
dec
cmp
cmpsl
mov
or
lea
push
outsb
xchg
sbb
add
xor
arpl
mov
shlb
mov
mov
xor
jnp
aaa
mov
dec
out
xchg
lcall
mov
idiv
fistpl
cmpsl
int3
pop
in
cmp
add
mov
shrl
js
and
decl
sbb
dec
dec
sahf
popa
adc
es
dec
xchg
mov
xchg
lahf
mov
xchg
ljmp
and
arpl
shrb
push
fcompl
adc
xchg
xor
mov
leave
outsb
imul
dec
popa
testl
xchg
inc
call
jnp
mov
dec
push
xchg
enter
and
xchg
ret
cmp
mov
mov
mov
push
lea
push
cwtl
gs
fcompl
mov
push
push
mov
dec
dec
out
push
pop
dec
call
push
ds
pushf
aas
xor
mov
out
jp
lods
scas
je
mov
jle
and
xchg
mov
outsl
jmp
out
testl
dec
mov
add
outsl
xchg
and
stos
sbb
mov
lock
cmp
sahf
divl
lret
test
sbb
inc
adc
mov
and
adc
test
lret
test
jo
or
adc
outsl
call
and
leave
hlt
cmp
or
inc
xor
jo
imul
mov
rcll
dec
and
push
push
sub
enter
push
pop
hlt
jmp
inc
ss
jbe
inc
xchg
in
pop
pushl
arpl
jo
loopne
cmpsl
cmp
into
loopne
xor
mov
pop
push
scas
out
jg
lcall
daa
ja
mov
les
jo
and
arpl
cld
adc
cld
lods
or
vhsubps
xchg
mov
les
ficoms
or
fdivrp
call
mov
in
sub
imull
dec
out
dec
daa
scas
or
cmp
mov
movsb
adcb
lods
fnsave
cmp
inc
repnz
ds
xchg
xor
pushl
or
inc
push
inc
into
out
push
aad
mov
rorl
decl
mov
mov
std
jg
popa
pop
cmp
cmp
adc
add
stc
clc
xor
mov
cmpsb
sub
xor
lcall
hlt
dec
mov
je
es
add
push
insb
es
and
lahf
loop
out
xor
xchg
mov
and
pushf
test
daa
ds
jg
incl
sar
pop
insb
pusha
mov
mov
mov
sbb
mov
add
stos
call
inc
pop
xchg
add
xchg
stos
pop
and
jle
jno
orl
mov
xlat
lds
mov
jne
or
xchg
push
ljmp
out
cli
pop
lahf
adc
push
aas
cmp
stos
mov
inc
lods
sub
and
decl
xchg
imul
pop
or
inc
mov
xor
addr16
or
mov
daa
xchg
lcall
dec
sub
xor
popa
add
add
out
fdivrp
or
mov
adc
add
jg
dec
clc
es
jo
mov
addr16
je
mov
loopne
ss
jg
fnstcw
dec
and
xor
add
test
mov
lcall
js
es
ljmp
incl
fisttps
xor
jmp
and
xchg
mov
scas
sub
ss
call
and
stos
push
add
sub
cld
insb
adc
movsb
adc
in
outsl
nop
and
sub
mov
jmp
hlt
call
mov
add
jg
popa
mov
xor
movsb
push
inc
inc
jmp
xchg
mov
int3
out
aas
xchg
frstor
mov
push
cmp
int3
dec
jmp
and
jae
out
decl
push
pop
cld
lock
das
mov
insb
std
mov
pop
fs
mov
clc
lods
and
mov
incl
mov
sub
or
mov
outsl
dec
stos
call
add
sub
iret
cmp
cmp
push
out
cs
xchg
sbbl
cld
push
or
mov
ret
rol
loopne
xor
mov
add
enter
jmp
rcrl
cmc
je
inc
sub
lcall
push
int3
sub
mov
decb
mov
or
lea
inc
mov
rol
or
cs
loopne
ficoms
jnp
dec
add
xchg
test
out
xor
cli
push
fwait
jge
call
dec
scas
repnz
mov
dec
call
out
mov
xchg
pop
add
pushl
pop
mov
movsl
mov
es
mov
mov
or
stos
insb
sahf
sub
dec
enter
lods
fdivl
cmp
xor
popf
dec
push
data16
lcall
push
sub
xchg
jge
ljmp
add
push
setnp
outsl
in
stos
test
pushl
push
lea
sti
xchg
lds
xor
mov
mov
push
lcall
push
sbb
in
mov
push
inc
pop
add
dec
xor
cld
mov
mov
and
lcall
test
divb
sbbb
test
push
mulb
out
iret
inc
unpckhps
icebp
call
xchg
addr16
adc
fwait
push
popa
das
int
mov
movsb
mov
xchg
mov
xchg
lods
pop
push
bound
mov
das
out
hlt
mov
jp
loopne
push
dec
adc
in
xchg
sub
lcall
out
fcmovbe
pop
stc
outsl
mov
jmp
stos
into
jp
loopne
cmp
jmp
imul
jg
fs
cmp
out
scas
jmp
cs
lcall
aaa
or
xchg
adc
bound
and
sub
push
add
mov
aaa
incl
mov
xchg
jecxz
inc
ficoml
adc
jae
pop
stos
inc
incl
aaa
xor
jnp
add
cs
pusha
push
aad
dec
sbb
in
or
out
sbb
mov
call
and
sbb
lock
data16
and
jo
sbbb
lcall
lret
pop
call
add
and
fistl
inc
out
das
and
jmp
cmp
lea
mov
sub
and
pop
cmp
jnp
cmp
decl
daa
lahf
rcrl
mov
or
and
mov
and
jl
push
ret
pop
jbe
ud0
std
outsb
mov
out
push
testb
jp
xchg
imul
cmp
jmp
inc
adc
xchg
test
std
cmpsl
ret
int
aad
sbb
int
nop
mov
das
ror
xchg
leave
xchg
pop
jg
sub
dec
add
cmp
or
ljmp
nop
and
cltd
imul
inc
xor
inc
call
mov
inc
pop
movsl
out
das
xor
leave
sub
jmp
imul
add
cltd
clc
jg
call
jmp
mov
fs
jno
lds
fldt
push
addb
in
rolb
stos
xchg
mov
mov
and
mulb
cmp
fdivrs
das
loope
shrl
ret
push
pop
movsl
sahf
xor
dec
xchg
pop
cmp
decl
mov
ljmp
fwait
popf
sub
out
mov
mov
lret
call
shlb
std
jmp
cltd
mov
ds
je
or
ret
ret
out
lea
lds
call
mov
or
mov
cmp
ja
cmp
xchg
scas
sbb
lock
in
pushf
cld
int
cld
lahf
sbb
in
sbb
pop
xchg
fldenv
mov
or
mov
sar
jecxz
sub
xor
mov
out
mov
mov
xchg
stc
mov
push
fnstcw
aam
push
push
dec
lods
mov
cld
xor
or
pop
sbb
add
inc
xor
sar
sbb
mov
rclb
int3
cmp
sub
mov
add
aaa
idiv
incl
scas
jge
xchg
mov
fisubs
sbb
mov
add
and
sub
dec
fdivs
lret
dec
mov
jmp
loope
or
adc
push
push
adc
daa
cli
outsl
xlat
movsl
fcompl
sub
aam
mov
dec
sub
repnz
ja
or
cld
adc
fists
shrl
pop
inc
lret
mov
mov
adc
inc
mov
outsl
mov
or
cmpsb
pop
push
sub
or
jg
je
xchg
cmp
lahf
aaa
sub
jae
test
std
cli
add
in
pop
xor
xlat
ljmp
aas
and
fcompl
jb
add
adc
and
daa
pop
sbb
incl
sub
push
pop
jl
or
mov
es
jmp
pop
ret
and
add
xchg
mov
outsb
icebp
xchg
push
adc
xchg
in
mov
int3
inc
scas
cli
incl
lret
lds
add
or
push
xchg
decl
xchg
es
pop
xchg
lcall
or
in
test
ret
and
scas
popa
cld
mov
or
out
cmpsb
jne
or
cmp
pop
ficoms
xchg
jne
ficomps
incl
xor
xor
xchg
lods
jnp
xchg
push
outsb
cwtl
aaa
test
pop
fldt
cld
adc
mov
xchg
cmp
cmc
sbb
xchg
xchg
and
pop
les
mov
jb
decb
adc
loopne
idiv
adc
jecxz
fs
mov
push
nop
mov
mov
push
jecxz
mov
or
scas
sub
mov
ljmp
decl
outsl
jmp
add
adc
fcomps
sarl
sub
inc
xchg
lods
ss
mov
call
add
out
sar
fs
les
addr16
xor
dec
sub
inc
iret
mov
and
nop
lahf
xor
ret
add
sar
jg
mov
pushf
mov
lds
in
outsb
cwtl
cwtl
pusha
inc
xchg
mov
mov
movsl
rclb
outsl
or
mov
clc
push
lcall
inc
inc
xchg
test
js
arpl
sbb
adc
cmc
pop
mov
mov
lcall
sti
dec
rolb
push
es
push
cwtl
inc
jnp
data16
out
fdivr
sub
movsl
popf
and
sti
in
pop
int3
inc
scas
clc
mov
dec
inc
lret
mov
call
or
test
nop
lret
add
pop
cmc
mov
mov
fnstcw
xor
decb
xchg
adcl
popf
lcall
rorb
xchg
xchg
add
push
sub
mov
mov
cwtl
jae
jmp
xchg
pushw
jnp
or
or
xchg
rcll
fcomi
inc
dec
cmp
lret
fidivl
push
cld
xor
out
movsb
pop
pop
adc
enter
inc
lret
sbb
push
pop
aam
and
lds
and
pop
push
lcall
jecxz
int
call
cmp
dec
dec
cmp
js
inc
and
out
hlt
xor
mov
shlb
nop
repz
or
mov
xor
repnz
jmp
sub
xor
mov
mov
pop
mov
aaa
push
dec
outsl
es
adc
mov
pushl
xchg
adc
mov
push
arpl
or
cwtl
mov
pushf
jecxz
call
pushf
scas
xchg
sub
mov
ds
test
push
jmp
inc
inc
outsl
sti
mov
xchg
pop
daa
in
test
mov
mov
lods
pushl
cld
or
push
stos
fwait
in
aad
dec
and
andb
in
loopne
incl
pushl
and
dec
add
mov
push
test
and
stos
dec
mov
sahf
inc
mov
xchg
ss
xchg
jle
lds
faddp
daa
push
fwait
jle
inc
xor
push
scas
mov
mov
inc
dec
das
loopne
jmp
jae
lods
mov
jle
and
and
sub
inc
jmp
mov
inc
mov
shrb
adc
inc
cli
lock
insb
sub
in
scas
xchg
sbb
ds
push
repnz
lods
add
pushl
cmp
hlt
push
je
out
in
pushw
fcmovu
push
lahf
bound
shrb
lock
mov
out
add
shll
xchg
cmp
sbb
sub
fiadds
sub
test
int
xchg
mov
push
fistps
pusha
pop
fistps
arpl
les
dec
adc
jmp
xchg
dec
dec
lock
pop
or
sub
jbe
xchg
sbb
push
jmp
mov
cmp
adc
mov
cs
adc
incb
clc
stos
cmp
insb
pop
ljmp
mov
movsb
pushf
and
aas
lods
lock
jmp
ds
sub
in
pushl
fidivrs
pop
dec
fisubrl
mov
aas
bound
xor
inc
hlt
jg
lds
mov
cmpsb
fildl
mov
push
xchg
addr16
jmp
cs
out
pushl
lcall
cmp
mov
je
psraw
xchg
out
xchg
sub
or
call
or
ds
faddl
add
inc
test
ds
or
int
cmpsl
sbb
mov
or
jp
jne
popf
xor
mov
dec
sahf
nop
mov
loope
sbb
cmc
jl
inc
nop
sub
ljmp
mov
in
in
sub
mov
push
push
sbb
incl
push
ret
popf
inc
mov
xchg
xor
sub
xor
call
lret
cmp
sbb
cs
movsl
and
sub
cmp
mov
mov
and
in
inc
incl
or
fwait
push
out
insl
xchg
daa
movsb
shll
pop
pop
call
xchg
cli
push
push
sbb
mov
or
loopne
es
inc
test
pop
out
cmp
fsubrs
lcall
dec
lods
addl
nop
xchg
sub
cmp
or
mov
rclb
aad
lahf
inc
sbb
fistl
cmp
test
push
call
pop
xchg
xor
pop
fsubrs
mov
adc
mov
sub
arpl
dec
aas
clc
cmp
mov
mov
inc
pop
fdivl
jg
jmp
xchg
lcall
imul
outsb
sbb
stos
les
test
sbb
mov
testl
cltd
sub
cwtl
mov
push
cmp
mov
sahf
cmp
fstp
sub
dec
decl
sbb
icebp
and
pop
cltd
xchg
xlat
jge
orb
mov
cmp
notl
cld
push
xchg
sbb
dec
sbb
repz
sbb
scas
xlat
fistl
mov
outsl
sbb
or
je
pop
das
mov
sub
push
int3
stos
decl
push
out
mov
mov
add
in
xor
sub
inc
sbb
inc
daa
pushl
stos
xchg
push
mov
pop
xchg
mov
inc
lock
fdecstp
into
les
and
mov
pop
dec
xchg
cli
add
sub
mov
inc
enter
push
jg
dec
cld
jmp
call
mov
les
mov
loope
pushl
pop
loope
pop
imul
inc
orb
fsub
adc
lcall
addr16
xchg
push
sub
xchg
pop
push
lcall
add
or
fdivp
fstpt
call
sahf
push
jno
hlt
adcl
cmp
scas
mov
xchg
or
ss
outsl
cmp
pxor
mov
or
call
adc
dec
testl
xor
cmp
shrb
incl
add
iret
ror
clc
mov
add
xor
rcrl
push
xchg
or
test
inc
add
sbb
sub
sbb
jg
pusha
sub
sub
hlt
push
and
pop
cld
cs
aad
in
dec
jbe
test
lcall
daa
inc
icebp
pop
pop
out
cmp
daa
in
xor
push
jns
mov
push
outsl
add
inc
fcmovnbe
add
push
xchg
lret
pop
jg
lods
decl
jae
or
ret
jns
mov
lcall
sahf
jo
xor
jne
sbb
jl
add
movsl
in
aas
sbb
rcl
cmp
movsb
lahf
xchg
and
scas
adc
movsl
xchg
lret
sbb
mov
lock
in
sbb
sbb
nop
fwait
push
sbbl
push
fcomi
push
pusha
ud0
lods
cld
dec
pusha
mov
bound
or
dec
inc
mov
adc
mov
mov
out
or
or
jl
fadd
or
aad
nop
mov
sub
jg
sub
xor
imul
and
and
lcall
adc
in
inc
stos
out
in
and
sahf
into
aaa
push
lods
add
mov
xor
lods
ja
jns
bound
pusha
sarb
fdivrp
pushl
rorb
or
add
pop
lock
xlat
mov
mov
jp
mov
pusha
inc
fisubrl
and
pushl
in
rol
sub
inc
xchg
mov
fsts
and
aad
push
mov
fcomip
int3
and
imul
mov
mov
test
inc
das
aam
dec
xor
jmp
repz
sahf
sahf
adc
mov
mov
xchg
dec
insl
call
cmpsb
xor
inc
nop
cmp
push
pop
test
rcrb
adc
mov
cmp
mov
jmp
cmc
mov
lock
jns
sbb
sbb
fcomip
add
cmp
push
fisubrs
and
sub
mov
xor
fdivrp
lcall
rolb
addr16
jae
mov
cmpl
xchg
aam
rcll
push
js
testl
xor
insl
lret
outsb
inc
das
bound
aad
inc
add
call
jnp
sub
and
mov
xchg
shl
xchg
daa
push
ds
pop
enter
xor
cli
call
add
loopne
aaa
add
add
push
cwtl
rcrl
xor
adc
pushl
xchg
test
popa
mov
jno
inc
xlat
sbb
mov
std
sub
mov
aas
sbb
or
mov
pusha
clc
outsl
fsubrs
pushl
lods
aaa
and
cld
push
ss
mov
roll
call
pop
add
pop
in
aam
xor
or
test
mov
jmp
xor
xchg
call
add
iret
lock
std
xor
out
fiaddl
insl
sti
mov
inc
jge
inc
jnp
or
pop
es
mov
leave
std
or
push
mov
inc
xor
xor
mov
ja
in
aas
jle,pt
push
inc
push
jmp
stos
add
sarl
cli
mov
ret
out
and
mov
popf
cs
scas
add
pop
outsb
xchg
movsl
cmp
cmp
into
mov
mov
sbb
mov
inc
cmp
fdivrs
push
pop
sbb
loop
push
mov
or
flds
push
xchg
movsb
or
pushl
or
out
outsl
xchg
sarl
scas
xor
lcall
pop
mov
movsb
push
outsl
or
jae
lcall
sar
call
insl
cli
xchg
rcll
repnz
sub
add
movsb
testl
call
or
xchg
fdivrs
fcomip
mulb
sbb
mov
mov
lcall
rorb
xlat
loop
pop
loopne
mov
cmpsl
xor
jmp
sti
pushl
ds
iret
inc
imul
cmpsb
lcall
pushl
xchg
jne
jmp
inc
xor
push
lods
pop
sahf
testl
pushl
mov
decb
jmp
lcall
cmp
push
ljmp
je
sbb
inc
iret
mov
pop
imul
flds
out
add
pushl
in
fdivr
dec
push
adc
or
frstor
lcall
jne
inc
mov
ret
add
xchg
stos
pop
lea
lcall
lods
loop
add
jo
pop
enter
dec
sbb
outsl
or
adc
lods
sbb
decl
and
dec
mov
stc
xor
cmp
cli
inc
loop
add
clc
cmovle
es
out
lcall
in
xorl
ret
out
pop
xchg
lock
sarl
mov
test
ja
incl
imul
idivl
jnp
mov
xor
mov
lcall
add
repz
sub
sbbl
cmpsb
xor
jo
push
aaa
adc
jmp
cmp
jp
aas
out
pop
sar
cmpsl
adc
sbb
leave
or
add
call
push
in
inc
repnz
fbld
sbb
mov
jmp
pop
mov
incl
cmp
push
ror
jns
hlt
pop
dec
cmpsl
and
xchg
lods
out
jg
inc
ds
mov
scas
pop
push
lahf
sbb
enter
jne
repz
dec
out
cmp
out
cli
dec
push
push
stc
shl
mov
mov
les
subb
pop
cmp
pop
xchg
cmp
sub
mov
cld
inc
cmp
lcall
mov
int
fisubrl
sbb
or
hlt
lods
repnz
ljmp
cwtl
fistpl
mov
arpl
mov
jbe
or
pop
imul
nop
out
decb
sbb
aaa
aaa
or
sbb
adc
pushl
cmp
sbb
jg
jo
pop
cwtl
fmul
dec
ficomps
jecxz
cmpsb
fcmovnb
lock
decl
pop
cmp
sbb
xor
movsb
out
cmp
out
push
movsl
pop
popa
push
add
xor
cmp
adc
push
pop
fwait
js
cs
jmp
push
xchg
popf
dec
aas
pop
xor
movaps
ljmp
fwait
enterw
adc
xor
daa
iret
nop
or
decl
cmpsl
push
fidivrs
jle
add
lods
dec
mov
loop
mov
xlat
cmc
lcall
xor
ljmp
mov
popl
jmp
cmp
jmp
push
inc
pop
or
adc
mov
popa
cmp
sub
sar
decl
push
fimuls
ss
adc
or
ret
daa
test
cmp
lcall
sub
pop
push
mov
aam
shrd
cmp
movsl
jecxz
shll
test
cmp
dec
dec
loopne
adc
test
ja
sbb
add
inc
sbb
mov
push
rcll
push
mov
dec
jmp
dec
aam
nop
mov
enter
pop
xor
or
ret
jg
dec
mov
add
and
jae
in
cli
out
jae
sbb
repnz
or
call
dec
std
mov
sti
or
imul
or
icebp
ljmp
push
pop
jl
mov
or
push
inc
sti
ss
lcall
sub
ja
lahf
xor
jp
push
pop
mov
ljmp
pop
sbb
jecxz
imul
xor
inc
stos
mov
inc
ss
mov
mov
adc
mov
fistps
das
lcall
js
push
pop
push
xchg
testb
aas
mov
pand
mov
xchg
push
ljmp
xor
leave
push
mov
repz
and
and
jl
xlat
test
ljmp
xor
push
pop
mov
dec
mov
mov
movntps
lock
lcall
mov
jg
mov
pop
inc
fmull
jmp
cmpsl
jmp
inc
or
dec
inc
out
mov
incb
or
sub
and
xor
loop
mov
adc
and
pop
insl
out
inc
xorl
lcall
daa
lods
cli
cmp
jp
outsb
out
add
cltd
or
fildll
add
das
ja
roll
adc
in
lods
mov
fst
in
jns
decl
cmpsb
imul
or
mov
inc
pop
xorb
pusha
inc
and
loope
mov
dec
pop
ret
ret
jnp
adc
pop
mov
arpl
push
gs
jg
incl
pop
and
js
jo
xchg
xor
ja
inc
stos
mov
mov
cmp
jle
push
addb
push
repnz
and
mov
push
jg
data16
push
sti
cmp
insl
clc
imul
lods
incl
pop
mov
cs
sbb
decl
mov
jmp
pop
ret
imul
jecxz
mov
data16
adc
cmp
add
insb
sub
jp
xchg
scas
push
sti
push
cs
or
sar
inc
notb
mov
add
sahf
push
jmp
lcall
mov
mov
dec
and
aas
int
inc
popa
std
mov
lds
jle
adc
fistpl
das
mov
decl
sbb
aad
add
or
jns
jmp
and
call
js
or
mov
push
imul
in
mov
sbb
xlat
aam
or
decl
xchg
cs
daa
loopne
inc
cmc
sub
push
incl
dec
lret
iret
mov
imulb
xor
xor
int3
je
andb
sti
sub
sub
xor
shlb
ja
and
sub
das
cli
ljmp
rcll
mov
fnsave
pop
inc
scas
fistpll
cmp
and
xor
rcrl
dec
mov
cmp
jmp
pusha
out
add
xorb
iret
push
packssdw
cmp
sbb
mov
bound
sbb
push
push
mov
mov
jmp
dec
scas
js
lds
sub
mov
movsl
xor
es
incl
fwait
ja
mov
add
pop
jle
imul
push
lret
aas
xor
mov
dec
mov
sub
ljmp
inc
shr
jne
mov
cmp
ljmp
sahf
movsl
shrb
outsb
nop
ljmp
xchg
mov
scas
pop
cmp
lods
pop
sbb
ds
pushl
clc
movaps
notl
flds
cs
dec
shlb
bound
pushl
data16
jno
pop
jno
cs
mov
adc
sbb
or
xor
enter
in
outsl
xchg
dec
lcall
out
mov
dec
and
xchg
jmp
sub
xchg
lcall
js
cmp
sahf
pop
push
pop
mov
or
iret
aas
repnz
leave
decl
ljmp
mov
mov
test
push
lds
jmp
or
fdivrp
mov
jnp
sbb
and
pop
sbb
adc
stos
xor
pop
call
js
pop
std
xlat
int3
xor
or
fwait
call
pop
ret
mov
fisttps
cltd
jl
mov
aad
xor
fwait
mov
mov
mov
movsl
cmp
sub
or
loope
sbb
pop
hlt
mov
xor
lods
inc
pop
stos
cmp
mov
movsl
movl
fwait
inc
xchg
ljmp
or
jnp
cmp
decl
dec
aas
mov
add
scas
sub
lock
or
cmp
ficomps
adc
pop
sub
xor
sbb
or
popa
out
incl
xor
sub
rcrb
call
sahf
test
je
xor
xchg
clc
fcoml
sub
ror
mov
das
clc
ljmp
mov
inc
ficomps
stos
pusha
loop
mov
lods
adc
adc
pop
cli
fcomip
flds
jne
pop
sub
adc
inc
jg
hlt
mov
push
push
lret
mov
inc
push
clc
or
or
test
lock
lcall
ss
outsb
test
push
and
add
lcall
ret
add
enter
xchg
test
inc
sti
sub
dec
dec
dec
fildl
adc
clc
in
pop
popa
or
inc
les
incl
cmp
mov
pop
icebp
jp
sahf
testb
pop
cmpsb
mov
pop
jns
fcmove
and
test
or
outsb
mov
outsl
pop
cmp
sub
test
mov
xchg
jg
cli
mov
sub
aas
jno
mov
repz
addl
lcall
lahf
jnp
mov
daa
xchg
gs
and
mov
call
addr16
imul
mov
imul
adc
dec
incl
in
js
out
push
repz
or
aad
mov
lea
jmp
xchg
shr
and
add
or
pop
lock
push
xchg
pop
inc
or
enter
outsl
mov
sti
aam
dec
mov
push
cld
call
stos
pop
ds
and
fildll
jno
cmp
cmp
fisttpl
jg
adc
and
dec
inc
in
sbb
jns
out
arpl
hlt
negl
xor
or
test
push
es
das
sbb
mov
xchg
cmp
aaa
mov
xchg
mov
fs
pop
mov
and
add
cltd
stos
or
into
mov
lahf
pushw
sbb
and
mov
push
mov
out
pop
mov
inc
mov
cmp
mov
stos
inc
cmp
or
xor
mov
cs
test
negb
lahf
push
mov
nop
outsb
fs
pushl
push
das
xchg
mov
stos
rol
scas
enter
mov
xchg
mov
cmp
outsb
inc
clc
fstpl
mov
stos
std
xchg
decl
enter
rcll
mov
lock
xor
mov
lahf
jmp
mov
mov
mov
addl
inc
shrl
ljmp
divb
push
incl
pop
cltd
fisubs
jo
xor
repz
push
incl
or
mov
ss
xchg
pop
pop
imul
movsb
or
lret
sub
mov
or
xor
cwtl
sub
jne
into
fwait
xorb
mov
lret
imul
or
mov
je
sub
mov
lods
icebp
jnp
and
lret
add
jmp
call
hlt
in
cmp
pop
fcomi
test
roll
sub
mov
cld
loope
inc
or
jns
adc
cmp
mov
nop
cmp
mov
std
aas
mov
mov
inc
repnz
rcll
inc
std
pushl
stos
pop
xadd
jl
idivl
push
fistpl
ds
pop
cld
and
sbb
dec
cltd
pop
js
sub
pusha
push
cwtl
inc
sub
icebp
rorl
push
jmp
lds
jmp
or
jp
sub
test
jge
sub
iret
and
pop
mov
and
mov
push
sub
lods
test
lods
out
aaa
ss
add
mov
and
jne
pop
add
jg
lods
out
xor
inc
push
sbb
addr16
inc
fistpl
jmp
sub
mov
ljmp
xor
enter
call
std
lret
xor
inc
pop
xchg
adc
lahf
inc
test
adc
push
out
or
decl
cmp
push
lds
and
pop
push
push
loope
xor
out
push
push
push
mov
mov
imul
and
mov
xchg
pusha
ss
jnp
push
xchg
push
cltd
in
stos
out
jecxz
cmp
and
fldcw
mov
incl
xor
sti
pop
scas
scas
jnp
cmp
mov
lds
add
jg
add
btr
xlat
jnp
fidivrl
scas
orb
testl
out
pop
cmp
inc
cmc
sti
cmpsb
add
pop
lock
sbb
xchg
mov
jmp
shll
push
or
sahf
push
jg
pushf
cmp
xor
pushl
push
or
inc
jle
aas
pop
sub
or
mov
cmc
ljmp
ss
xchg
or
mov
xor
adc
popf
and
ja
and
mov
in
sub
js
test
mov
repz
fs
adc
arpl
xchg
ss
xchg
cli
mov
mov
cwtl
hlt
ficoms
xor
xchg
pop
ljmp
adc
xor
xchg
clc
push
aaa
fisttpl
sbb
cwtl
pop
loope
pusha
add
pop
cmp
jmp
scas
sub
mov
mov
std
pushf
out
sbb
lock
xchg
stos
push
aas
testl
cld
out
hlt
cmpsl
mov
push
loopne
pusha
mov
ljmp
push
pop
adc
call
call
ja
cmp
inc
out
stos
cmp
add
incl
sahf
mov
cmp
pop
rorb
mov
inc
mov
sbb
sub
icebp
incl
lahf
add
int3
int3
movsl
mov
inc
stos
clc
sar
mov
pushf
xor
je
jbe
sbb
and
push
add
sbb
scas
adc
sbb
clc
mov
int3
jmp
popf
jecxz
fstps
ficoml
pop
push
bound
dec
std
in
cli
mov
arpl
mov
add
or
jg
and
xchg
ror
jl
das
enter
loop
dec
jecxz
add
pushl
add
push
sbb
mov
xchg
xor
sti
rorb
clc
and
clc
lcall
pop
cwtl
sbb
add
mov
out
add
push
loop
shlb
inc
loop
dec
cli
sti
pushf
jbe
subl
fistpl
inc
pop
xor
mov
movsl
mov
pop
pop
xor
push
aas
decl
jb
add
lahf
mov
jl
dec
and
aaa
xchg
leave
aam
cmpsl
and
cmp
xor
sahf
jp
push
adc
push
into
jg
lahf
sbb
aad
xor
divb
sbb
push
jns
lcall
push
mov
dec
insb
sti
add
test
dec
ss
lock
add
xorb
loope
rcrl
mov
sub
sbb
popf
xchg
shlb
cmp
pop
in
inc
sbb
jle
inc
jle
loope
ret
test
call
sbb
test
inc
push
iret
ds
pusha
inc
in
cmc
in
rolb
push
enter
cmp
cmp
ds
popf
pusha
ds
ss
outsl
imul
jmp
ss
test
out
pop
lahf
andb
mov
or
iret
xor
mov
mov
jmp
xor
aas
and
out
jle
addl
dec
aad
arpl
pushl
stos
dec
test
movsl
mov
pop
sub
int3
out
add
sbb
mov
ljmp
xchg
ljmp
sub
dec
lock
lcall
cs
jo
adc
jl
iret
inc
addr16
hlt
lods
in
pop
out
mov
call
pop
daa
jb
fidivrs
inc
dec
mov
dec
in
mov
mov
xor
sbb
xor
mov
scas
sub
mov
mov
aad
mov
jl
or
dec
sbb
pushl
ret
cmp
add
hlt
xor
add
mov
xchg
repnz
mov
jg
sub
xchg
lret
cltd
test
xor
test
push
pop
cmp
ljmp
fildl
js
inc
push
faddl
incl
insb
cmp
fcoml
dec
jno
push
push
lea
adc
cmpsl
pop
adc
decl
push
lahf
arpl
fstpl
test
shrl
cmp
gs
in
xor
ljmp
push
xchg
pop
jno
clc
popa
repz
mov
sbb
ljmp
pop
sub
ljmp
sbb
out
mov
les
mov
sbb
lock
jne
push
ljmp
inc
adc
mov
clc
xchg
and
out
dec
inc
ja
add
insb
pop
add
add
outsb
cli
hlt
xchg
cmp
call
xor
sbb
dec
daa
inc
cmp
adc
mov
pop
push
push
icebp
mov
pop
pop
inc
lods
sti
stc
cmpsb
jmp
dec
dec
shrl
mov
add
and
xchg
mov
lahf
inc
xlat
sbb
movsl
call
decl
std
shl
lods
push
aaa
push
fmuls
xchg
cmc
xchg
xor
pop
and
sbb
lock
jle
pop
cmpsl
inc
arpl
ljmp
jl
lret
jecxz
push
push
mov
mov
or
mov
ficoms
mov
cltd
clc
ljmp
and
cmpsl
bound
jg
roll
lcall
in
in
pop
mov
mov
add
dec
scas
in
xor
jo
jl
call
mov
test
movsb
adc
call
mov
sub
mov
in
jg
call
add
imul
movnti
xchg
add
cmc
sbb
sub
int
hlt
mov
mov
fimull
lcall
mov
dec
mov
push
inc
jb
fldl
and
mov
sub
aaa
ss
jp
xor
push
lret
jp
xor
and
pop
repz
mov
scas
inc
repnz
out
sbb
lods
add
ljmp
and
movsbl
adc
aam
add
jns
mov
das
cli
sub
lret
ror
jnp
sub
mov
fdivl
mov
or
pop
aaa
xchg
test
call
pop
lods
cmpsb
sbb
jae
in
lcall
jmp
pop
aad
pop
pop
pop
mov
dec
neg
ret
bound
out
push
xlat
inc
add
cmpsl
fadds
mov
push
jne
incl
lret
mov
testl
xchg
inc
pop
mull
outsb
add
mov
out
clc
add
in
aaa
imul
sub
int3
int3
mov
shl
or
push
mov
stc
outsb
pop
cmc
jno
pop
std
insl
push
add
daa
fst
cs
out
push
test
mov
fucomp
pop
push
fcmovb
inc
xchg
pushf
imul
cmp
dec
in
cmp
dec
jb
neg
and
pop
dec
stos
aas
test
out
rcll
or
push
fwait
jp
aas
xchg
test
push
data16
adc
push
pop
mov
jge
adc
fdivs
jne
xor
pop
mov
or
fistl
fsubrl
ret
in
fcomip
adc
bound
mov
loopne
decl
bound
andl
jo
and
mov
mov
je
rorb
pop
dec
fbstp
mov
mov
cld
arpl
push
cmc
pushl
das
ja
push
addr16
inc
ret
fistps
ljmp
insb
pop
inc
mov
mov
shrl
rorb
dec
jo
mov
hlt
movsl
rorb
call
rclb
incb
push
and
adc
sbb
insl
in
data16
mov
sub
mov
loop
xor
lret
sbb
mov
lcall
popa
cmpsl
lret
incl
hlt
sub
in
out
nop
adc
push
incl
pushf
imul
dec
shll
inc
fisttpll
fmull
arpl
dec
sub
mov
call
loop
cmp
fmulp
push
xchg
cwtl
add
lcall
xchg
add
movsl
ljmp
call
popa
shrl
js
cwtl
aaa
xchg
loop
cmpsb
pop
mov
mov
movsb
mov
push
lock
fnstsw
sbb
ret
movsl
adc
mov
lock
cwtl
daa
pop
jle
sti
dec
or
jo
mov
mov
push
shrb
mov
jg
mov
jbe
and
jg
mov
mov
out
cmpsl
push
popa
jmp
cwtl
sub
lock
outsl
and
call
cmp
sub
add
mov
hlt
pop
std
sub
int3
adcb
mov
or
and
clc
xlat
js
xchg
jmp
jg
call
out
push
or
push
mov
loop
jle
inc
and
jp
cmp
data16
call
cs
jle
mov
jae
sarb
xor
mov
pop
fisttps
lcall
mov
cli
and
add
cwtl
mov
and
ds
leave
add
call
sub
clc
stc
jmp
jo
les
ljmp
xchg
lret
out
sbbl
push
cmp
and
pushl
lds
aam
outsl
add
call
jmp
jp
jns
shll
fmull
fisttpl
inc
mov
add
xor
or
jb
ljmp
xor
jg
loop
repnz
mov
icebp
jle
enter
add
add
adc
aam
push
and
add
push
std
stc
negb
cli
shrb
inc
push
idivl
cmp
xor
loopne
or
rclb
int3
add
adc
dec
in
mov
add
push
fcmovne
sub
pcmpeqd
or
cltd
push
pop
mov
mov
pop
pushf
js
sub
xchg
add
sub
loopne
inc
xor
shlb
call
mov
daa
filds
mov
addl
mov
jns
fimuls
arpl
push
imul
push
sub
hlt
out
inc
icebp
add
mov
push
clc
dec
xlat
adc
shl
jb
dec
sbb
out
dec
frndint
add
pop
stos
pop
insb
cmp
lcall
ljmp
js
les
fisubrl
adc
push
cmp
pop
mov
push
inc
dec
fisubs
push
add
lods
jo
xchg
in
inc
fbld
imul
push
adc
push
pushl
pushf
mov
sub
popf
xchg
and
hlt
nop
inc
test
mov
adc
fldenv
push
mov
mov
xor
mov
enter
dec
xchg
cld
into
push
adc
fimuls
inc
mov
jae
dec
stos
cmc
int
out
int
jo
mov
jmp
mov
movsl
adc
jmp
outsl
aas
clc
fs
mov
aad
sahf
mov
inc
push
and
pop
xchg
push
inc
ss
lcall
test
mov
add
dec
cmp
sahf
dec
inc
push
push
out
jnp
stc
clc
scas
ret
xchg
lock
xor
repz
push
jb
psubusw
pop
ljmp
cli
jns
inc
mov
push
xchg
mov
fwait
or
cmp
decl
xchg
imul
jg
mov
lret
jp
icebp
out
add
ljmp
mov
aad
inc
fcmovne
pop
addr16
hlt
clc
std
cmp
leave
push
ljmp
in
fdivrp
aad
cmp
push
sbb
leave
call
xor
mov
or
jns
call
ficoml
in
rcr
and
loop
loope
lods
xchg
sar
lock
xchg
mov
inc
clc
pushl
add
dec
xchg
jg
out
cld
fwait
popa
loopne
lea
dec
xchg
insb
js
aaa
xor
cli
xchg
fistps
adc
cs
loop
ss
mov
int3
out
jmp
fldenv
xchg
dec
call
mov
hlt
cmp
pop
call
aaa
fimuls
mov
into
int3
idiv
outsl
loopne
pop
pop
mov
out
mov
out
js
and
push
addl
loop
jne
adc
dec
push
cltd
inc
in
rolb
subl
rcr
cmp
aaa
and
dec
pop
cld
sti
sbb
addr16
nop
add
stc
push
push
cmp
jecxz
scas
scas
add
dec
lock
lcall
dec
inc
clc
call
out
fld
cmpsl
or
push
call
loop
push
xor
mov
out
adc
pop
ja
xor
dec
xchg
lret
mov
jecxz
cwtl
adc
cmc
dec
ret
or
jno
in
jnp
lods
aas
pop
aas
lcall
jmp
fs
mov
ds
ret
xchg
xor
loop
and
mov
push
xchg
sbb
fs
add
mov
dec
cs
mov
aam
push
ficomps
stos
pop
mov
push
pop
ret
mov
mov
mov
dec
test
mov
movsb
enter
cmc
mov
call
gs
mov
xchg
mov
incl
sbb
outsb
icebp
inc
push
out
push
add
and
popa
sbb
adc
sbb
pop
gs
jg
jmp
pop
inc
sbb
xchg
sbb
inc
or
ljmp
ficompl
stos
call
xor
add
fsubl
push
lcall
lret
xchg
push
xchg
je
lods
pop
jecxz
xchg
mov
ljmp
sbb
xchg
xchg
lret
icebp
mov
call
pushf
add
sbb
loop
dec
ss
imul
fldl
repz
cmc
in
andb
jno
call
in
dec
loopne
cld
push
call
inc
mov
aad
cmpsb
mov
lods
repz
ljmp
dec
lds
das
mov
call
push
ficoms
sub
stos
cwtl
popf
jg
inc
cld
cwtl
sahf
aas
enter
test
imul
jmp
jnp
addr16
in
jge
shlb
movsb
mov
fists
ja
dec
mov
icebp
push
dec
popf
bound
sbb
cmp
movsl
xchg
dec
ljmp
clc
add
sbb
adc
test
sbb
sahf
fmuls
cmp
push
or
and
rolb
mov
fs
insl
cmp
incl
add
mov
loop
out
cmp
das
cmc
pop
inc
or
adc
xchg
test
rcrb
mov
sar
sbb
inc
pop
stos
mov
add
jp
adc
stc
gs
repnz
jg
xor
jae
mov
or
and
sahf
aad
xchg
mov
stc
mov
mov
out
jg
inc
xor
adc
in
addr16
bound
scas
push
push
and
fsubs
inc
mov
mov
jb
jg
pushl
stos
ret
xchg
lcall
and
push
dec
jecxz
and
sti
inc
data16
dec
push
jmp
and
aas
add
gs
jae
fistl
mov
cmp
nop
inc
adc
pusha
jecxz
sub
cmp
repnz
in
or
pop
jp
ljmp
clc
incl
lret
jbe
icebp
loop
cs
das
sarb
or
js
fdivr
ja
ret
shlb
push
or
lods
sbb
fadd
repnz
or
pop
mov
repnz
or
out
add
mov
out
loopne
cmpsb
lock
shl
mov
std
mov
cmp
cli
ljmp
int
negl
hlt
lock
or
push
or
mov
hlt
pop
movsb
jmp
sbb
dec
push
sbb
add
stos
fs
and
push
push
or
pushl
cmp
test
lret
dec
arpl
xor
xchg
scas
fldl
hlt
cli
lcall
jg
inc
and
add
mov
sub
pop
xchg
scas
fucom
cmpsl
and
in
jmp
in
pop
mov
push
mov
mov
sbbb
mov
jns
call
fldcw
into
or
cmpsb
dec
adc
lret
xchg
dec
std
ds
scas
inc
and
aas
sti
mov
decl
sbb
or
pop
lcall
or
lds
repnz
fcmovnu
push
xorps
pushl
movsl
loope
push
mov
jb
scas
out
nop
jg
pushl
hlt
lods
pop
lea
sbb
or
inc
lret
sub
and
int
cmpsb
iret
sbb
movsb
sub
out
jbe
stos
aad
pop
xor
adc
hlt
ljmp
fnstcw
xchg
pusha
pusha
jp
ljmp
sahf
jbe
fistpll
repz
push
int
add
cmp
lock
pushf
jo
outsl
cli
call
and
jmp
enter
or
movsl
push
mov
adc
jo
push
jecxz
popa
dec
rcrl
loopne
xlat
push
iret
push
sbb
cmp
ret
inc
bound
clc
inc
adc
mov
cmp
stos
cs
mov
cmp
fnsave
xchg
test
mov
inc
jge
outsb
mov
or
push
pop
jbe
into
lods
pop
insl
add
aam
iret
repz
add
cmp
mov
mov
cmp
push
leave
cmp
lds
and
jno
xchg
pop
xchg
pusha
into
mov
mov
div
ret
lock
ret
insl
das
xchg
repz
leave
je
push
loope
fcomip
pusha
mov
sbb
icebp
sbb
iret
lahf
cmc
iret
add
cmp
mov
pushl
mov
stos
and
cs
mov
mov
ret
or
pop
aaa
cmp
loopne
mov
sub
dec
adc
in
cld
push
arpl
ljmp
rorb
mov
sbb
push
ja
lret
bound
incl
push
jg
add
fisubs
imul
popa
les
and
icebp
jg
cmp
dec
lret
xlat
dec
std
lcall
loope
aam
sub
popa
aad
jo
std
fsubs
insl
xchg
push
mov
sbbl
cmp
repz
decl
movsb
add
in
mov
popa
xor
push
inc
std
sahf
add
jb
jns
pushl
push
fs
push
xor
cmp
sbbb
push
divl
call
js
inc
in
out
or
lock
fs
mov
orb
xchg
inc
add
call
fdivs
jg
or
rorl
xlat
lods
js
lcall
incb
test
out
push
xor
into
cld
push
add
and
mov
iret
cld
push
insb
aas
in
in
or
cmp
xchg
aam
add
adc
sahf
jns
out
or
add
jmp
cmc
adc
int
in
pop
hlt
popf
fwait
daa
jge
repz
cs
inc
or
jmp
mov
jp
test
clc
jecxz
push
shl
mov
scas
movzbl
aaa
add
push
push
pop
pop
mov
xchg
xchg
sbb
rcrb
ret
lcall
pop
add
adc
mov
int
test
xor
in
adc
fisttps
outsb
dec
mov
rol
inc
or
mov
loop
lcall
hlt
int
hlt
mov
ljmp
mov
lahf
pop
je
or
or
ljmp
idivl
inc
clc
jmp
pop
mov
popf
push
sbb
xchg
pop
add
scas
mov
shrl
dec
pop
mov
push
fnstenv
cs
pop
int
xchg
sbb
test
shlb
add
aam
sbb
adc
neg
movsb
add
ljmp
jg
in
movsl
mov
inc
jmp
jmp
incb
or
push
jg
pushl
push
sbb
mov
jge
in
dec
fstpt
xor
dec
pop
push
inc
xor
xchg
rorb
clc
or
ja
lods
pop
insb
sti
in
inc
fsubr
mull
ljmp
push
inc
nop
jbe
pop
imul
jecxz
ret
adc
insb
or
pushf
adc
mov
sbb
call
out
sti
lcall
sub
scas
xor
bound
mov
in
sti
mov
int
into
decl
lea
test
notl
cmp
and
sbb
divb
or
in
outsl
or
mov
push
nop
add
decb
push
jo
ret
data16
lret
adc
out
std
loopne
aam
lds
clc
incl
fildll
rcl
popf
fs
cmp
movhps
dec
add
decb
or
scas
cld
or
ljmp
sub
testl
and
mov
mov
or
leave
clc
fistps
loopne
fcomip
pop
std
mov
lret
data16
push
pop
mov
into
jl
sti
call
aaa
adc
stos
or
push
inc
fcomps
adc
mov
insb
into
push
xchg
jge
cld
mov
jmp
mov
xor
sub
ljmp
add
cs
adc
jne
incl
mov
adc
mov
subb
movsb
pop
and
mov
push
push
std
xor
push
addb
cmpsb
mov
scas
push
ss
mov
add
xchg
xchg
ljmp
push
loopne
inc
pop
push
and
loopne
filds
decl
cmp
sbbb
sub
pushl
jecxz
es
or
cli
push
sbb
or
mov
jmp
cmp
mov
bound
cs
jmp
dec
popf
bound
fcomp
pop
adc
xor
nop
xor
incl
mov
pop
adcb
pop
mov
test
aam
adc
sub
out
clc
jmp
mov
into
xchg
pop
jo
out
xor
xor
in
and
or
push
aaa
inc
add
test
shll
xchg
ffreep
outsl
test
lcall
jbe
in
hlt
movsl
pop
lock
bound
stos
push
xchg
and
clc
decl
inc
scas
xor
mov
mov
sub
xor
push
lods
je
cwtl
and
addb
mov
test
mov
push
orb
push
mov
lcall
xor
or
dec
out
jmp
push
sar
sbb
inc
incb
push
xchg
mov
call
push
imul
dec
mov
daa
push
insb
adc
cmp
lcall
pop
loope
loopne
cld
mov
cmp
incl
cmpsb
dec
scas
mov
sbbl
stos
pop
hlt
mov
int
dec
mov
adc
jnp
dec
mov
pop
in
out
lock
sarl
pop
fmul
fistps
mov
scas
fs
cmpsb
in
mov
inc
ljmp
sub
jge
mov
decb
test
cmp
out
fbstp
ljmp
out
hlt
cmc
and
fcoms
loop
mov
fildll
jmp
xchg
popf
cmp
cmp
adc
call
dec
and
fbstp
or
insl
mov
jnp
push
mov
pop
push
push
repz
mov
sub
adc
sbb
add
outsl
decl
and
or
xor
mov
jnp
or
xor
mov
jmp
jbe
push
sbb
cs
stc
ror
out
sub
cltd
lahf
outsb
xor
daa
lcall
pushl
fdivr
cmp
pop
das
xor
xchg
pop
clc
mov
test
data16
fdivrp
fsubr
xor
int
dec
add
mov
shlb
pusha
cld
stos
pop
push
loopne
scas
xlat
int
scas
inc
int3
lea
pop
les
xchg
pop
pop
cmp
inc
push
hlt
decl
xor
ljmp
sbb
cs
jb
mov
jle
call
out
mov
ret
cmpsl
adc
add
decl
cmpsb
arpl
shll
loopne
jecxz
out
lods
iret
or
xchg
jp
jg
jno
pop
push
test
mov
adc
out
pop
testb
jg
jbe
popf
scas
es
rorb
dec
leave
cwtl
pop
sbb
xor
and
sbb
call
cld
mov
jae
cwtl
xchg
add
stc
js
mov
decl
stc
mov
and
jbe
mov
pop
je
push
mov
inc
xlat
xor
mov
pop
out
jp
dec
test
psrad
pop
adc
xor
adc
add
lcall
pop
or
and
mov
add
sbb
call
cmp
adc
out
ret
push
inc
xchg
fisttpll
add
mov
out
mov
pop
movsb
pusha
fnsave
ficomps
cmpsb
sti
clc
rcl
sbb
dec
cli
jg
pushl
std
sbb
sbb
sti
mov
repz
imul
add
cltd
imul
movsb
push
cmpsl
pop
lea
movsl
dec
pushf
inc
mov
out
test
ret
icebp
fwait
jg
pop
xor
sarb
mov
addr16
jb
loopne
lcall
call
cmc
xchg
dec
stos
out
jl
dec
push
bnd
mov
rclb
clc
incl
pop
jne
cmpsb
cmp
in
das
jmp
sub
pop
add
pusha
ljmp
cmp
xor
lret
dec
mov
sbb
dec
jg
pushl
and
jge
lods
jmp
dec
popf
sbb
std
mov
cmp
fcomip
scas
and
ret
push
mov
push
daa
sbb
mov
dec
adc
ljmp
enter
push
jmp
shrb
sub
out
xchg
xor
pop
sbb
ja
pop
test
add
into
push
cs
and
pop
pop
bound
callw
rorb
repz
test
pusha
pop
lea
push
jecxz
sub
adc
call
xor
out
mov
loopew
mov
mov
repnz
out
cmp
cmpsb
mov
mov
sbb
jge
fisttps
xorb
ja
rorl
sub
out
mov
int3
outsl
je
xchg
mov
xchg
dec
pop
push
aaa
adc
push
push
stc
movsb
dec
scas
clc
notb
xor
pusha
push
jb
pop
in
add
push
loopne
jmp
dec
jmp
je
mov
aam
out
cmp
cmp
jae
jg
pusha
loop
adc
lea
dec
inc
js
outsl
clc
call
aaa
int
jmp
xchg
popa
call
adc
out
lahf
cli
pushl
jp
aas
mov
rcrl
push
mov
adc
lods
lea
outsl
out
scas
imul
push
mov
mov
cmc
push
mov
insb
call
xor
inc
lock
push
mov
and
incl
xchg
test
adc
jne
cmp
push
decl
sbb
sbb
outsl
xor
jmp
xor
push
dec
mov
out
mov
mov
gs
test
sub
push
and
push
roll
push
ds
jo
pop
xor
insl
fbstp
aaa
lret
sti
in
pop
xchg
pushl
ss
ljmp
jmp
mov
mov
adc
je
call
or
adc
jmp
mov
mov
je
clc
jle
leave
ret
imul
stos
pop
fstl
arpl
pop
mov
loopne
dec
loop
lods
xchg
pop
cmp
mov
dec
sub
movsl
mov
cld
dec
outsb
cli
xor
mov
pop
inc
cmp
push
inc
out
pop
jb
nop
pop
fucom
imul
jle
pop
aam
incl
jmp
hlt
mov
mov
adc
jl
arpl
std
mov
xchg
adc
and
inc
mov
movsb
aad
das
js
out
out
xlat
sub
push
and
sub
push
pusha
sub
inc
jmp
loopne
and
movsl
shlb
jp
jg
lock
mov
cmp
jo
mov
and
pop
and
dec
cli
leave
shrl
push
lock
std
outsl
cmpsb
loop
lcall
lock
cmpsl
xchg
jmp
decl
mov
flds
or
out
inc
and
outsl
sub
cli
jg
decl
in
je
lods
ret
shrl
dec
push
pop
outsb
push
ljmp
lea
inc
int
cmc
xchg
sub
lcall
out
mov
sbb
pushl
pop
decb
iret
and
arpl
stos
pop
movsl
sahf
jecxz
nop
push
cmc
push
dec
push
inc
pop
or
call
fsts
sub
mov
jmp
mov
outsl
push
and
js
mov
fcomps
jge
lds
sbb
loopne
mov
pop
push
mov
lods
ss
in
fcmovne
xor
cmp
mov
mov
xchg
inc
movsb
xlat
ja
stc
dec
dec
pop
pop
pushl
cmc
ljmp
repnz
loopne
pop
loop
dec
test
jecxz
pop
and
in
adc
mov
inc
add
std
xchg
jmp
fwait
push
cmc
out
cli
pop
or
adc
fnop
cs
lods
add
rcll
ret
ljmp
fmuls
in
rolb
loopne
fcoms
lret
adc
jg
call
repnz
push
xchg
xchg
xor
fstpl
shrb
incl
mov
adc
icebp
out
push
jg
cmpsb
sbb
and
cs
out
pop
push
sub
sbb
xor
xlat
aaa
std
add
pop
xchg
dec
js
rcll
and
arpl
decl
enter
scas
loopne
daa
ret
aam
inc
cs
call
ljmp
mov
lret
rcl
add
or
mov
fcomip
mov
in
mov
dec
mov
pop
inc
pushf
sbb
inc
pusha
sub
xor
call
fucomp
fdivrl
shl
inc
jbe
push
mov
sahf
jo
daa
jge
iret
shll
test
lret
lcall
push
pop
cmpsl
ja
shr
hlt
dec
stos
enter
pop
lock
cld
std
sub
adc
stc
scas
filds
shrl
inc
orb
push
lods
push
rorb
sub
push
addb
sar
push
mov
es
loop
adc
loopne
ljmp
scas
loop
sbb
fists
cmp
leave
pusha
dec
push
and
in
out
mov
aaa
inc
sub
ljmp
insl
or
les
xor
gs
mov
jns
sbb
lcall
mov
test
pop
lret
jo
dec
in
push
pop
testl
push
pushl
cmp
mov
orl
or
mov
fisttpll
ljmp
iret
mov
inc
or
shrl
push
or
or
negb
pop
mov
pushf
and
out
jg
sub
cld
call
adc
xor
out
stos
pop
test
decl
xchg
and
int3
mov
inc
push
test
enter
pop
pop
es
scas
fcomip
incl
ret
cltd
es
push
fsubr
call
mov
adc
sub
mov
cld
jae
push
ja
dec
pop
mov
incl
add
addr16
sbbb
out
in
fstl
inc
in
jo
and
inc
outsb
push
lahf
xor
pop
test
call
test
jo
lahf
sub
dec
or
push
dec
or
inc
add
sti
jb,pt
sbb
out
xchg
jmp
andb
cld
sbb
push
jmp
clc
push
mov
rol
pop
int3
ljmp
aaa
mov
jmp
sbb
push
cwtl
lret
mov
out
testl
testl
in
lock
sbb
jp
int3
add
aam
mov
cmc
sub
sahf
fstpt
pushf
cmp
rcrl
ss
mov
push
jmp
cmpb
push
inc
add
fidivrs
dec
into
or
jmp
lock
jne
decl
aad
orb
rolb
aad
cmpsl
shl
loopne
push
imul
aam
icebp
jo
mov
jmp
out
lods
mov
lcall
aam
jge
pusha
scas
mov
pusha
in
rclb
jg
mov
jnp
in
dec
dec
mov
pushl
mov
arpl
scas
mov
aam
inc
sbb
into
into
pop
incb
cwtl
pop
sbb
mov
je
inc
sahf
leave
neg
sahf
in
insb
dec
add
mov
aam
imull
adc
cmpsb
test
dec
jp
dec
pop
jmp
mov
bound
push
cli
incl
lds
mov
mov
mov
pop
cmc
mov
out
lret
hlt
push
cli
std
push
or
arpl
cmp
aam
repz
out
aad
fiadds
out
test
mov
push
data16
sbb
je
mov
add
jmp
xchg
dec
dec
pop
fs
mov
dec
cmpsl
inc
push
in
push
mov
pop
jecxz
out
jbe
fsub
mov
jg
push
fisubs
leave
add
jbe
out
sub
test
mov
xchg
incl
in
imulb
push
ja
pop
push
dec
and
push
sub
lret
std
xchg
daa
dec
divl
mov
jmp
insb
cmc
out
enter
and
adc
mov
fildl
and
scas
inc
dec
dec
xor
inc
es
ds
mov
sarb
rclb
and
aam
add
testl
sbb
dec
add
daa
mov
or
jle
sbb
jb
pop
cmp
in
andnps
ljmp
es
push
add
push
mov
idiv
inc
or
jmp
in
scas
nop
stos
mov
insb
push
insl
inc
cld
and
jno
push
cmp
lahf
aad
decl
sbb
outsb
jmp
inc
js
lods
popf
jo
rcrb
push
stc
hlt
push
icebp
in
in
in
cmc
xchg
lcall
jae
testb
shl
sub
sub
cli
ds
push
fs
lret
scas
cli
addr16
and
incl
jmp
sbb
sub
cmp
dec
lods
fsubl
adc
sub
scas
xchg
bound
lock
call
in
call
ljmp
sbb
or
mov
and
jb
ficoml
mov
cmpsl
or
xor
cmpsb
shlb
push
arpl
xchg
push
xchg
jmp
sahf
fimull
in
fs
jo
psadbw
rorb
out
dec
jecxz
mov
fdivrp
aaa
jge
mov
imulb
out
into
dec
std
fisttpll
pushl
mov
das
mov
lret
pxor
jp
iret
lret
ret
scas
dec
std
es
cld
mov
xchg
adc
jnp
push
aaa
xor
jg
mov
addr16
pop
imul
ret
sbb
xlat
out
cli
decl
popa
aad
lock
push
dec
sar
fldcw
imulb
add
jmp
mov
dec
faddp
and
in
dec
insb
and
or
fbstp
in
and
jns
or
push
xor
loopne
cs
mov
and
das
mov
clc
ljmp
xchg
sub
dec
inc
lahf
dec
inc
dec
dec
adcb
cmp
add
stos
sbb
fiadds
popa
mov
int3
xor
lods
pop
sti
das
mov
push
call
fnstsw
mov
pop
imul
dec
xchg
xchg
mov
inc
stos
cmc
rolb
inc
add
cmp
jg
repz
daa
cld
fisttps
inc
pop
idiv
ljmp
xor
call
dec
or
cmp
inc
pop
movsl
arpl
imull
push
in
cmp
push
inc
movsb
pop
xor
push
movsb
mov
das
iret
push
mov
inc
and
jg
cmp
fstps
lahf
jmp
test
sub
xchg
repz
imul
das
cli
fimuls
jne
adc
fcomip
inc
loope
popa
in
pop
iret
aad
mulb
push
dec
push
cld
or
pop
sub
jmp
add
lock
ljmp
sub
fs
rcll
notl
mov
jecxz
cmc
movsl
push
bound
jge
mov
in
int3
xchg
loopne
mov
push
outsb
mov
xchg
loopne
mov
mov
cli
pop
lock
cmp
push
xchg
repnz
lea
ljmp
cld
ljmp
or
xchg
popf
sbbb
repnz
arpl
mov
fldl
jg
dec
and
or
fcom
shld
dec
add
jge
mov
repz
cmp
ret
add
push
jno
bound
shll
pop
mov
testl
out
das
ret
mov
clc
mov
dec
out
or
jl
mov
mov
stos
adc
incl
fucomi
mov
adc
push
testl
ljmp
push
lret
or
mov
in
pop
aam
push
sub
rcrl
sub
stos
mov
aad
sbb
fdivr
fcomps
imul
mov
and
cmp
lds
mov
inc
push
mov
xchg
xlat
mov
fs
loopne
mov
stc
scas
adcb
fildl
decl
fsubs
imulb
icebp
jl
jg
leave
jl
xor
mov
cmpsb
imul
sti
sub
mov
test
mov
ret
or
fcompl
stos
outsb
dec
dec
into
jl
jbe
or
push
jo
int3
aas
negb
mov
add
dec
repz
cmpsb
dec
jmp
mov
loope
or
lock
clc
test
add
sbb
and
xchg
decl
repnz
fdecstp
idivb
push
dec
xor
push
pop
xchg
pop
cmc
decl
cltd
enter
je
push
call
push
push
movsl
or
mov
stc
push
lret
push
push
jbe
mov
les
push
push
popf
testb
pop
xchg
arpl
fstpt
sbb
dec
clc
ljmp
aam
std
test
or
cmp
mov
lods
mov
aas
decl
push
dec
or
lock
pushl
clc
into
fnsave
dec
loopne
pcmpeqb
in
fidivl
nop
dec
dec
decl
push
add
xor
outsb
pop
cld
std
sbb
sbb
js
fimull
mov
jmp
ret
mov
xchg
cmc
lret
fstl
js
loop
and
jecxz
ljmp
call
jmp
or
and
mov
fisubrl
mov
dec
mov
xor
dec
lcall
mov
fnstsw
imulb
mov
xor
push
adc
out
ja
jmp
adc
test
jp
dec
pop
or
rcrb
fs
dec
push
cs
push
clc
inc
and
cmp
ljmp
push
xchg
xchg
sbb
push
pandn
jmp
pop
sbb
cs
sub
inc
dec
fbld
push
les
and
ficomps
ljmp
jo
enter
xchg
xor
add
pop
lea
arpl
jno
add
decl
negl
dec
ss
mov
lock
in
xor
mov
mov
push
push
mov
incl
cmc
ja
cmp
ljmp
mov
pop
inc
pop
xlat
pop
inc
loopne
out
or
out
and
icebp
pop
mov
call
jl
jg
fnstenv
dec
insl
popa
pop
dec
mov
xchg
jae
leave
pop
mov
hlt
loop
outsl
lock
in
xor
setno
stos
mul
dec
fdivrs
mov
loop
loop
or
nop
std
add
mov
push
push
sbb
mov
dec
push
repz
clc
vpunpcklwd
call
adc
nop
call
cmp
dec
push
ljmp
push
incl
jmp
shlb
and
cmpsb
notl
sbb
lret
movsl
mov
mov
sbb
mov
sub
and
leave
sbb
xchg
adc
cmpb
lcall
mov
data16
data16
add
loop
fsubr
inc
push
xor
rcr
sub
ljmp
cmc
jp
and
mov
pop
mov
sub
mov
call
pop
mov
jg
jmp
out
xchg
pop
call
dec
push
push
insb
and
jno
and
jle
cmp
les
jg
ret
jbe
rorl
outsl
dec
mov
mov
ljmp
and
xor
es
mov
test
fmuls
xchg
jg
in
mov
mov
jb
ficoms
dec
ret
mov
faddp
xchg
mov
push
jg
pusha
cld
mov
adc
bound
std
jmp
push
icebp
add
movsb
push
cld
loopne
call
jbe
fs
data16
out
mov
push
dec
mov
mov
push
pushl
lret
rcr
sbb
out
push
mov
icebp
jp
or
push
out
out
cli
ljmp
lock
out
push
mov
xchg
and
insb
xchg
fiadds
push
push
and
ljmp
in
ret
les
int
xor
adc
dec
dec
and
inc
jg
add
jbe
pop
shrb
sub
push
cmp
sbb
lcall
pushl
mov
jne
push
or
mov
mov
scas
sti
adc
dec
mov
insl
dec
and
jecxz
in
push
int3
aad
add
xchg
xchg
inc
dec
in
pop
leave
and
mov
sbb
jns
lock
and
mov
jb
incl
mov
jns
dec
dec
out
test
jmp
mov
cmp
incl
mov
push
cs
push
cmpsw
jb
cmp
push
cmp
jmp
dec
scas
push
pushw
lds
test
hlt
decl
lcall
inc
adc
out
and
es
fmull
sahf
ljmp
or
jle
pop
les
jne
cmp
in
or
call
xor
xchg
jbe
out
cmc
lcall
cmp
push
int3
nop
loop
push
pusha
out
inc
pop
xchg
push
pop
push
mov
jl
push
push
jbe
sub
fbld
inc
and
lret
mov
jmp
fildll
adc
push
cli
scas
mov
sbb
repnz
inc
and
lahf
out
jg
loopne
xchg
dec
fwait
repz
dec
jle
dec
ljmp
fiaddl
aad
lock
mov
mov
push
or
mov
nop
inc
push
imul
clc
incl
pop
and
push
lods
add
movsl
push
push
and
sbb
fmuls
inc
mov
push
pushf
xlat
aas
rcl
pop
loopne
decl
lcall
lcall
dec
xchg
push
incb
or
test
and
fistpll
jecxz
add
rorl
imul
decl
and
iret
cmp
push
push
push
sub
dec
dec
inc
into
and
mov
jecxz
mov
xchg
imul
cmpsb
cmpl
in
hlt
out
and
push
pop
mov
ds
mov
mov
push
dec
fisttps
fbld
xchg
out
data16
mov
jnp
dec
mov
dec
xchg
aad
or
dec
mov
cmp
mov
cltd
aad
mov
sub
push
dec
leave
insb
mov
mov
inc
ret
clc
mov
dec
push
push
out
inc
adc
pop
pop
push
jnp
lds
push
adc
subl
ljmp
hlt
dec
out
inc
fisttps
dec
jecxz
cmp
test
jns
pop
jg
cmp
decl
and
jns
rcrl
cs
aad
pop
xor
pop
fmul
hlt
ss
in
and
fdivr
lcall
sbb
jmp
jbe
jb
or
dec
and
push
sbbb
in
pop
jecxz
cwtl
add
sbb
inc
jne
jbe
fistpll
sbb
leave
in
scas
push
fistpll
cwtl
push
mov
push
aam
cmp
dec
xchg
inc
lock
leave
adc
insl
push
cmp
cld
adc
pop
fstpl
xchg
push
fwait
sar
call
push
mov
lcall
jmp
outsl
nop
jne
ljmp
mov
lret
push
cmpsb
into
daa
xorb
mov
std
pop
test
jmp
jnp
ljmp
decl
jae
cmp
jae
fisttpl
int3
push
mov
push
aaa
pushf
inc
inc
ret
lcall
dec
std
push
or
stc
mov
sarb
incb
pop
jl
xchg
jp
and
push
cld
incl
enter
pop
das
fbstp
mov
addr16
cmpsl
bound
cli
dec
push
inc
les
call
sahf
in
fld
cmp
or
addb
push
add
mov
mov
call
dec
dec
sbb
adc
xchg
scas
packsswb
sarb
gs
or
dec
dec
cs
add
fs
fmuls
push
inc
fbld
lcall
das
and
pop
icebp
lcall
dec
or
mov
adc
ds
popa
sbb
sahf
in
xor
nop
jecxz
mov
movsb
outsl
incl
ss
repz
mov
shlb
loop
int3
inc
dec
push
in
dec
pop
rcl
pop
into
sar
call
xor
fs
fnclex
stos
pop
mov
xor
mov
xor
inc
adc
sub
sahf
lock
dec
lods
insl
scas
pop
cli
add
call
inc
insb
test
jp
fsubrs
sub
ljmp
in
jge
fcompl
and
dec
push
push
movb
incl
inc
pop
int3
sbb
jns
test
fdivp
clc
orb
scas
cmpsl
xchg
ret
sub
lret
inc
mov
sarl
dec
xchg
cwtl
js
bound
adc
sbb
pop
mov
in
pusha
sbb
fwait
movsl
scas
sahf
dec
lcall
lahf
out
pusha
int3
icebp
dec
jo
dec
xchg
mov
ds
push
mov
jne
stc
ljmp
cmpsb
shl
mov
cmp
shll
dec
adc
ret
push
inc
fistps
adc
push
bound
pop
sar
call
and
cli
and
mov
jle
adcb
aad
stos
jg
pop
and
dec
repz
in
lds
lods
dec
dec
and
insl
jae
adc
iret
jbe
mov
fdivrs
xchg
insb
cmp
outsb
ljmp
pop
sub
mov
aas
stos
jecxz
fnsave
push
addb
dec
out
pop
test
cmp
nop
cmp
pop
mov
mov
dec
sti
dec
fidivrs
mov
mov
shrl
cld
pop
jne
divb
xchg
mov
out
mov
incl
addb
mov
mov
cmpsb
mov
cmp
out
push
xor
int3
or
cmp
movsl
mov
pusha
xor
in
int
idiv
ja
dec
inc
dec
cmp
test
aad
pop
fistpll
mov
pop
aad
xchg
cmp
ret
dec
out
imul
push
dec
pop
and
push
scas
repz
in
cmc
mov
mov
pop
in
or
scas
mov
shll
dec
ljmp
cli
push
mov
aas
je
jecxz
aam
mov
jmp
loop
push
fidivrs
repz
fiadds
sub
faddl
sub
fcoml
adc
in
sub
push
inc
rcr
fwait
cmp
neg
add
push
sti
fdivrl
push
std
test
popl
fdivrl
ss
popa
fisubrs
dec
fidivs
dec
fmulp
and
jle
cltd
fsubrl
and
movl
shrb
fisubrs
sahf
fcoml
or
repz
mov
call
popf
fsubl
lahf
fdivrl
out
mov
outsb
sbb
xchg
cmp
add
push
pop
jg
jge
pop
fnstsw
test
add
inc
and
push
mov
ret
mov
fisttpll
mov
dec
xlat
dec
push
insb
fs
out
out
mov
les
in
inc
cmp
lcall
push
std
lods
stos
push
jne
rclb
scas
push
test
inc
stos
sub
cmp
lcall
in
xchg
cmp
in
inc
mov
fdivrl
mov
jl
and
lcall
add
imul
rclb
fneni(8087
test
mov
rcl
pushl
shrb
push
and
xlat
sbb
shrl
in
mov
lea
and
sbb
incl
pop
adc
in
xchg
loop
bound
pop
out
dec
fistpl
out
mov
loop
fmull
fildl
pushl
shll
ror
out
rcll
sahf
aas
inc
xlat
mov
cmp
test
test
xor
mov
xorl
jns
loop
add
adc
subl
dec
cli
jmp
jge
pop
sbb
xor
pop
fucom
mov
lcall
ret
add
adc
js
into
in
jl
rorb
dec
rclb
cli
fadd
mov
sub
in
out
mov
loopne
in
pop
or
enter
xor
xchg
inc
insb
and
test
je
xorl
cmc
mov
fnstcw
lods
inc
in
mov
jnp
icebp
mov
mov
inc
mov
sub
dec
sub
adc
push
jmp
test
cmc
add
out
push
xor
cmp
cwtl
sarb
cli
pusha
and
in
sub
call
je
ss
sub
adc
mov
add
gs
cld
cmc
call
pop
pop
mov
out
mov
scas
in
mov
adc
xchg
fwait
pop
lock
mov
ljmp
mov
fstl
jg
or
fisubl
fsub
test
push
push
jg
add
adc
mov
mov
out
xchg
mov
fwait
insb
cld
push
add
mov
lea
lcall
pop
pop
mov
cltd
outsl
pushf
mov
daa
cmpsb
data16
sarb
and
pop
cmp
shll
aam
xchg
mov
mov
lock
add
outsl
xchg
out
push
dec
shlb
pushl
add
repnz
add
jmpw
lods
aad
push
in
lcall
pusha
fiadds
add
fdiv
std
mov
mov
popf
out
fisttps
out
cmpsl
mov
push
jecxz
insb
dec
mov
jo
ljmp
fwait
addr16
mov
cltd
mov
nop
mov
in
mov
mov
push
ja
pushl
or
aam
bound
in
xor
pusha
adc
mov
decl
imul
xor
sbb
rcrl
ljmp
test
test
pop
scas
in
out
lret
hlt
push
jb
mulb
ret
in
into
lret
in
xor
sbb
and
xchg
xchg
cld
stos
sbb
push
std
call
mov
cld
dec
int3
popf
mov
stos
inc
into
fsubs
bound
sti
mov
jb
fisttpll
sub
mov
jg
mov
and
xor
imul
pop
loope
pop
pop
push
sti
mov
aam
adc
pop
cmp
inc
xlat
popf
xchg
ret
mulb
jo
xchg
aas
sbb
adcb
adcl
mov
pushl
push
clc
mov
xchg
cwtl
stos
pop
les
incl
dec
pop
enter
inc
dec
dec
inc
jg
jae
imull
scas
push
mov
pop
fsubr
incl
mov
mov
leave
mov
sbb
cmp
xchg
pop
push
bound
andl
inc
xchg
push
pop
cmc
xor
in
mov
or
adc
lods
into
inc
fst
mov
jae
jmp
fldl
mov
lahf
adc
lea
rol
fists
imul
lret
int
jb
cmp
sti
push
std
and
and
cltd
test
jge
cmp
out
loopne
out
xor
mov
pushl
repnz
shlb
xor
and
inc
push
jmp
lcall
sbb
push
inc
mov
or
aas
xchg
aam
dec
mov
mulb
add
inc
ljmp
cmp
loope
aas
js
and
sub
sti
mov
gs
sarl
mov
lret
popf
ds
push
fidivrl
dec
fcmove
arpl
out
mov
xchg
mov
addr16
push
adc
imul
outsl
mov
xor
lahf
mov
pop
cli
ljmp
test
rorb
pop
and
pop
notb
ljmp
pop
movl
xchg
std
mov
jp
bound
outsb
in
mov
call
data16
push
loope
fiadds
pushf
shlb
fwait
lds
xorb
mov
lcall
sbb
enter
xlat
or
push
int
incl
mov
lock
push
push
sbb
jmp
or
pushf
ljmp
dec
out
shll
pop
jmp
xor
push
push
shll
xor
test
add
lcall
lock
mov
push
mov
push
fldcw
pop
inc
aas
mov
sti
shll
out
adcl
push
out
adc
loope
jg
xchg
jge
mov
dec
cld
add
lcall
out
xchg
insl
or
lret
out
mov
jg
test
add
movsb
xchg
cmpsl
outsb
cmc
loope
fsubrl
push
ljmp
lcall
bsf
xchg
add
test
out
inc
jle
push
cmp
fldl
dec
std
cs
push
cltd
cmp
push
pop
cli
sbb
and
fldcw
loope
sub
sub
je
out
stos
cmp
decl
inc
dec
js
dec
scas
out
fimuls
jne
pop
in
mov
decl
jbe
cmp
add
mov
loop
fdivl
mov
sub
lahf
xor
dec
pop
jbe
push
xor
dec
jmp
cld
or
fmul
push
cwtl
jno
xor
add
test
add
lcall
test
sub
xor
fiaddl
aam
xchg
mov
incl
pop
push
push
xlat
sbb
rcll
sub
xor
pushfw
andl
popa
loop
cmp
inc
repnz
dec
data16
or
mov
movsb
fbld
inc
push
sub
and
rclb
ss
fbld
test
xor
push
fwait
adc
xchg
pop
movups
xor
addb
add
cmp
rorb
jo
dec
pop
dec
fs
and
call
mov
pop
int3
xchg
lds
in
sub
ret
loop
dec
sbb
fcmovu
fstps
dec
cmp
inc
push
jmp
es
test
push
add
jmp
loop
ljmp
pop
sbb
adc
add
add
rolb
and
rolb
pop
decl
imul
std
mov
loopne
xchg
mov
sbbb
inc
fxch
pop
jmp
test
mov
add
incl
cmp
mov
mov
adc
mov
daa
adc
jmp
cld
ficoms
and
jb
sbb
dec
test
into
repnz
enter
ljmp
divl
lods
add
imul
jp
and
in
inc
xor
jmp
clc
out
cli
xchg
dec
mov
ss
sar
push
lcall
mov
cmp
lock
fst
xchg
jnp
adc
lock
mov
inc
in
push
add
mov
xor
sbb
xchg
sub
jp
js
aad
in
jg
loopne
dec
ljmp
ret
test
mov
cmp
into
or
into
mov
mov
into
lds
add
pop
mov
into
lcall
clc
xchg
xchg
dec
mov
sub
add
movl
adc
fcom
mov
imul
imul
icebp
imul
aaa
loop
push
jmp
adc
out
iret
xchg
call
sbb
loope
call
add
xchg
call
add
pop
shrl
enter
sarl
cmp
mov
decl
lock
out
movsl
sarl
xor
imull
lock
sub
jp
xor
ljmp
imull
ljmp
cmp
inc
ljmp
gs
das
clc
call
cld
rcpps
dec
lret
push
cmp
out
outsb
lret
insb
push
in
mov
lahf
ds
nop
aad
rcrl
inc
fisubl
mov
dec
mov
imul
pushl
orl
mov
dec
jl
int
cld
lcall
and
jmp
xor
outsb
iret
insb
mov
sub
test
mov
mov
pushl
lea
jle
sbb
fdiv
sub
inc
je
loope
fwait
mov
imul
movsb
sahf
inc
out
mov
xchg
mov
scas
lods
call
ficomps
add
clc
into
lcall
adc
pop
int
mov
cmpsl
int
dec
pushf
int
push
inc
jbe
cmovns
jg
jmp
test
push
js
inc
ljmp
rcrb
adc
ficoml
push
ret
mulb
daa
loop
sbbb
dec
cmpsl
push
js
in
movsb
xor
mov
jmp
push
fnstcw
mov
call
xor
mov
or
push
inc
int3
dec
cmp
push
sub
in
adc
ss
aam
mov
and
jnp
xchg
dec
jb
loope
add
dec
push
clc
lea
jae
adc
sti
enter
lret
mov
pushl
fucomp
xchg
aad
push
mov
shlb
sahf
inc
cld
jecxz
dec
jno
add
add
jge
push
xchg
call
jne
jno
lret
shlb
daa
jp
mov
ljmp
pushl
mov
cmpsb
je
aad
ret
xchg
out
mov
loop
push
popf
jmp
ja
push
ds
mov
adc
sete
xchg
sbb
push
mov
mov
or
sti
imull
jmp
movsb
pop
std
aaa
in
xor
data16
cmp
pusha
cltd
adc
jge
loopne
divb
incl
xor
fildl
mov
pop
icebp
scas
lret
and
fisttpll
mov
rorb
fcomp
xor
decl
out
push
orb
dec
add
scas
push
xchg
mov
inc
cltd
pusha
push
push
hlt
iret
jge
add
test
popa
shrl
stos
and
ja
or
mov
cs
dec
decl
std
lods
lods
xchg
sbb
test
pop
mov
fstps
sbb
mov
js
outsb
fnstcw
jge
int3
jp
loop
pop
dec
je
in
add
mov
clc
pop
cmc
aad
pushf
fsubrs
inc
cmp
cmp
mov
sti
decl
cmp
adc
jle
mov
pushf
sarl
jge
call
jg
pand
ret
testb
inc
test
fnclex
cltd
mov
inc
mov
incl
mov
iret
popf
popf
jnp
std
xor
mov
push
jne
fldt
outsl
push
mov
lret
jle
mov
ss
in
in
fisubrl
cwtl
fadd
insl
shrb
out
incl
sub
in
or
int
sbb
cmp
adc
daa
scas
dec
inc
dec
or
mov
push
idivl
xchg
cs
cs
inc
test
out
incl
faddl
roll
lods
adc
ja
lahf
sti
popf
jns
sbbl
into
mov
call
ljmp
daa
fistl
imul
mov
mov
arpl
fbld
and
and
mov
xlat
popa
cmp
cmp
ffreep
sbb
jno
andb
jmp
aas
pop
jle
inc
fiadds
jae
mov
rorb
mov
call
mov
lcall
loope
sahf
add
outsl
inc
cmp
pushl
add
pop
cmpsl
movsb
fidivrl
xchg
push
out
mov
inc
xlat
push
aaa
imul
fsubrl
sbb
and
push
inc
arpl
into
iret
adc
sbb
imul
fistpl
in
stos
rorl
ror
xchg
mov
pop
scas
mov
mov
xchg
nop
das
lcall
jp
mov
add
add
push
or
ljmp
cmp
arpl
into
nop
or
mov
les
pop
fsubl
push
popa
xchg
cld
jmp
sarl
int3
and
enter
shrl
cwtl
mov
and
incl
mov
xor
cmpsl
jl
mov
ficomps
faddl
dec
fadds
in
pop
cmp
fcomi
mov
outsl
cld
test
clc
push
icebp
fiaddl
mov
add
scas
aad
add
xchg
cmp
data16
cmp
aaa
ja
outsb
dec
int3
inc
or
out
mov
cmp
mov
rcrl
inc
decl
std
xchg
int
test
mov
scas
or
test
and
lahf
inc
call
lahf
enter
in
xor
mov
call
fdivr
ljmp
std
adc
insl
cmc
fildl
jp
ss
pop
cmp
add
call
mov
dec
pop
jbe
out
jnp
aad
xor
inc
jg
ja
mov
in
cltd
sub
push
stos
add
int
push
jbe
mov
jns
and
lock
lcall
bound
cmp
cld
stos
mov
shlb
lret
lods
and
adc
dec
adc
fcomi
inc
leave
in
mov
adc
pushf
lock
jmp
inc
inc
fwait
xchg
cs
inc
sub
and
idivb
int
inc
shlb
jg
lcall
sbbl
subb
dec
divb
fistpl
sub
cmp
bound
cmp
xor
dec
shrb
pushf
popf
gs
inc
xlat
scas
fisttpll
fcomp
scas
out
add
ljmp
adc
cmp
inc
sbb
out
clc
mov
push
in
mov
aad
ljmp
stos
in
fidivs
loope
dec
mov
mov
mov
pop
adc
hlt
hlt
dec
in
imul
pop
sbb
addl
jmp
push
add
pop
aad
pop
daa
add
subl
push
divb
repnz
sub
cli
scas
clc
push
and
in
in
or
sub
inc
cltd
xchg
clc
xchg
flds
pushl
std
jo
out
inc
push
push
mov
sbb
pop
rcl
cmc
gs
push
call
pop
lret
cmp
pop
push
push
into
xor
push
push
inc
popa
notl
mov
xor
es
mov
jb
inc
dec
out
stos
stos
sarl
push
out
push
lods
sahf
jno
nop
inc
add
addr16
popf
aaa
in
adc
jmp
mov
in
inc
push
pushf
rorl
lds
cli
ja
fsubp
jne
dec
push
jl
and
jns
pop
fldenv
sbb
mov
out
cmc
add
cmpl
scas
ficoml
mov
dec
or
vpor
call
inc
cli
jo
dec
out
subl
in
out
jne
jg
inc
jns
push
lods
fwait
ss
aas
in
push
scas
js
xchg
imul
mov
add
ss
arpl
popf
pop
jle
xchg
lea
xor
js
repnz
jge
dec
repnz
adc
decl
pop
out
dec
ret
ficomps
dec
shrb
int
jb
int
in
iret
jge
mov
dec
in
pop
in
in
bound
sbb
leave
pop
in
bound
int
push
add
pushl
fnsave
mov
mov
fistpll
call
jns
dec
out
jle
ss
jg
pop
push
rclb
jl
push
cmp
ja
or
dec
shrb
ret
xchg
fldenv
in
jbe
adc
int
push
cwtl
roll
dec
das
cli
mov
jmp
shll
jmp
or
xchg
push
cmpsb
in
jno
mov
sarl
push
ljmp
aad
mov
cmp
pop
test
or
push
ja
mov
xchg
lcall
addr16
dec
pop
add
xor
or
add
aam
incl
ljmp
daa
mov
ss
dec
sub
xchg
sub
loop
push
out
xchg
incl
popf
inc
jbe
jno
or
lods
xor
in
mov
cs
sub
out
nop
pop
icebp
sarl
lret
imul
rcrb
fs
xor
inc
cwtl
call
decl
fs
pop
jne
roll
cwtl
repz
adc
not
pop
pop
pusha
hlt
incb
in
jg
incl
fsub
mov
in
aas
rol
imul
cmp
adc
mov
loopne
push
ljmp
pop
icebp
int
lds
inc
cwtl
pushl
std
clc
mov
pop
outsl
out
inc
jb
mov
pop
das
test
and
aad
dec
mov
mov
mov
in
jnp
clc
in
test
mov
nop
mov
out
pop
in
out
xchg
popa
lds
cld
add
xchg
aaa
or
fistpl
gs
add
or
sbb
pop
test
outsl
add
sub
fisubrl
xor
call
int3
and
in
stos
ljmp
mov
pusha
push
push
sbb
call
add
scas
stos
test
push
call
jle
pushf
jae
pop
jecxz
jmp
mov
and
ja
pushl
mov
mov
stc
pushf
xchg
jb
cmp
cmpsb
int
sub
repz
mov
and
in
aas
in
addr16
xchg
arpl
and
inc
out
push
hlt
dec
cld
nop
int3
push
in
std
pushl
xchg
int3
das
fucom
lods
cmpsl
or
push
in
add
out
shl
jns
aas
ja
jmp
xor
xor
adc
jae
add
decl
mov
inc
mov
call
add
mov
fidivrl
sub
and
lcall
dec
das
cmp
decl
mov
lock
arpl
push
lret
testb
out
jecxz
adc
or
call
ds
sbb
pop
lcall
rorl
clc
inc
aaa
xlat
mov
mov
mov
daa
push
xchg
rol
cmp
jl
decl
int3
pop
icebp
and
insl
addr16
mov
xchg
mov
cmp
in
push
mov
stc
dec
add
lcall
cmpb
arpl
fdiv
das
call
test
in
fisttps
mov
xor
pop
mov
into
push
push
jp
inc
or
insl
pushf
dec
call
jmp
pop
leave
jo
sahf
cs
call
mov
insl
in
jne
dec
addl
mul
aam
rcr
sub
call
jno
fwait
push
bound
fcomip
fistl
xchg
rcrl
or
div
decl
or
push
stos
inc
push
loop,pn
xchg
sub
test
sub
clc
fisttps
and
gs
lret
push
cld
lcall
jbe
call
insb
inc
mov
aaa
inc
mov
scas
mov
aad
mov
mov
xor
mov
fistps
and
bound
jg
aad
xchg
loopne
iret
jo
sbb
ret
sbb
das
ljmp
shlb
add
in
test
daa
cs
cmc
decl
int
sub
hlt
or
lea
cmc
loope
aad
aam
mov
decl
mov
mov
xchg
rcrb
pop
fisttps
and
xchg
cmp
into
ret
jge
sar
ljmp
enter
pop
lret
mov
out
mov
pusha
mov
or
scas
cwtl
out
sti
sbb
dec
dec
lods
call
jg
idivb
mov
cmp
dec
frstor
mov
pop
sbb
dec
mov
or
ljmp
outsb
dec
call
loope
out
xchg
xchg
fisttpll
or
jl
inc
add
ficompl
jp
or
imul
pop
or
push
out
bound
clc
sbb
fs
stc
xchg
cmc
movsl
push
xchg
ljmp
mov
xchg
rcll
jg
call
push
in
cmc
test
fcomip
decl
int
pop
sub
ljmp
loope
xchg
aas
pop
enter
repnz
in
add
add
sarb
test
aam
cmc
mov
xchg
movsl
dec
cld
outsl
sub
push
imul
push
jmp
jnp
out
fdivs
repz
out
xor
movsl
es
xlat
popf
incl
mov
inc
outsb
dec
jp
jb
lods
dec
out
mov
jle
and
pop
rol
ljmp
inc
cwtl
nop
jae
mov
sub
pop
cld
dec
xchg
outsl
jp
adc
repnz
in
cmpsb
xchg
cmpsl
imul
add
pop
jmp
pop
mov
jmp
mov
jg
adc
mov
test
pushl
add
outsb
mov
dec
lret
xchg
inc
jno
idiv
jg
jb
mov
push
outsl
dec
pop
out
mov
xchg
xchg
cmp
out
cmp
mov
xor
dec
js
push
push
dec
mov
adc
movsb
mov
adc
lcall
es
out
mov
push
out
lcall
pop
fbld
add
mov
jnp
or
pop
neg
inc
in
jmp
gs
out
fisttps
mov
inc
fs
xchg
xor
sbb
cmp
repz
insl
jg
jmp
aad
xchg
jno
clc
pop
int3
xchg
fisttpl
into
sub
loope
cmp
lcall
enter
hlt
repz
cmp
xchg
pop
sbb
jle
push
xchg
mov
outsb
cld
and
in
andb
xor
jmp
cmp
mov
dec
icebp
cmp
imul
add
out
loope
add
jmp
push
divb
push
mov
out
lret
in
loop
dec
insl
stos
movsl
gs
testb
call
int3
xchg
in
jmp
arpl
popa
fcmovnu
out
outsb
testl
push
jae
movsl
nop
incb
nop
mov
in
cmp
loop
outsb
xchg
test
addr16
jg
test
sbbl
cld
dec
lock
mov
push
lods
jecxz
adc
out
ret
jecxz
js
fmuls
add
mov
xchg
insb
decl
and
push
icebp
push
jg
in
int
xchg
add
call
loopne
clc
loop
mov
inc
test
loope
sub
lods
scas
sbb
lret
incl
into
xchg
int3
xchg
jns
dec
dec
mov
loope
xor
in
jmp
adc
addl
mov
and
stc
ljmp
aam
add
je
fdivrp
pop
mov
pop
int
callw
push
xchg
xchg
sbb
inc
paddusb
pop
xchg
idiv
xchg
aaa
sub
daa
sahf
xchg
imul
lods
add
shlb
pop
pusha
xor
in
xlat
cmpsb
add
popf
and
fbld
rolb
mov
mov
sti
xchg
cmp
adc
outsl
clc
jmp
ljmp
xchg
lahf
subl
repnz
gs
and
nop
xlat
call
imul
fcmovne
dec
cld
fimuls
decl
jnp
lods
sbb
xchg
ja
cli
sbb
jg
inc
dec
and
loopne
sub
inc
sub
shl
pop
into
aaa
push
outsl
test
cmp
ja
pop
push
call
pushl
jle
mov
loop
adc
pop
iret
dec
inc
jle
or
sbb
test
jecxz
inc
inc
loope
daa
inc
loope
les
add
test
sbb
add
sub
aaa
fadds
mov
ljmp
dec
stc
push
inc
lahf
ja
jmp
leave
xchg
sub
jmp
add
mov
xchg
clc
cld
in
cli
mov
adc
mov
add
fldt
mov
cmp
fabs
rcll
cld
mov
aam
jb
mov
sbb
mov
mov
jo
outsb
mov
incl
xor
sbb
mov
push
js
std
lock
cmpsl
in
loopne
cmp
call
fs
out
pop
aad
dec
mov
in
leave
lods
shr
int
cli
mov
add
in
fcmovbe
jns
mov
lods
adc
dec
out
xor
cmp
xchg
mov
xor
mov
mov
add
jno
or
xchg
jmp
mov
hlt
cmpsl
loope
lock
pushl
das
mov
in
cmp
xchg
loopne
ret
faddp
xchg
out
das
fsubl
fildll
pop
imul
hlt
inc
adc
out
fstps
decl
ret
and
jbe
ljmp
jp
into
clc
call
push
loope
addr16
jle
cmpsl
push
rcrb
ret
test
jb
sub
es
incl
rcr
rclb
and
decb
flds
out
adc
inc
shrb
ret
scas
movsb
call
jmp
insb
ljmp
dec
cltd
aaa
loope
mov
dec
add
ds
pop
lcall
fdiv
jmp
xor
sbb
call
xchg
enter
adc
adc
das
cli
daa
dec
cmp
lcall
out
jae
std
xor
addl
repz
rcl
xchg
aam
mov
or
fnstenv
ret
pop
lcall
aaa
outsb
pop
and
sbbb
xchg
inc
fmull
jnp
add
or
push
icebp
out
pop
pop
lea
in
stc
aaa
lret
xchg
mov
sbb
fimuls
add
addr16
lcall
mov
pusha
movsl
aas
clc
dec
jg
xchg
aaa
add
roll
and
pop
push
or
outsl
xchg
pop
sub
jmp
xor
test
out
and
cld
mov
orl
mov
xchg
outsb
cmp
lret
mov
icebp
push
pop
out
insl
test
jmp
movsb
les
sub
add
lret
jmp
cmp
xchg
sbb
cs
jmp
mov
inc
lods
mov
out
les
push
push
icebp
xchg
inc
or
sub
dec
cmp
jno
ljmp
pushf
mov
add
test
xor
int3
add
pop
call
sbb
popf
xchg
pop
into
push
sub
lcall
push
xchg
daa
cmp
inc
stc
nop
sbb
push
int3
hlt
sbb
jmp
xor
xchg
out
mov
hlt
loopne
pop
jmp
dec
adc
clc
cli
call
xor
or
lea
aam
lock
ds
inc
lret
xchg
mov
jne
mov
xchg
sub
test
daa
sub
cs
nop
sub
scas
movaps
frndint
lcall
loop
xor
lds
fsubr
xor
pushl
sahf
jno
sub
dec
mov
xor
jge,pn
aam
fs
mov
mov
mov
push
sub
xchg
mov
cld
loopne
or
dec
xchg
dec
in
jno
cs
loop
lds
cmp
cmp
push
outsl
sbb
ficompl
sbb
sbb
jns
jl
stos
xor
sbb
popf
xchg
iret
cmp
add
cli
add
addr16
xchg
adc
cmpsb
push
std
jg
outsl
xor
ljmp
mov
cltd
mov
ljmp
mov
xchg
xchg
xor
pop
in
ja
pop
and
inc
cmc
es
push
jns
call
stc
ret
sarb
cmc
les
adc
dec
sti
jo
jmp
mov
mov
mov
ja
push
test
sub
movsb
loopne
mov
repz
mov
fnstcw
sub
lock
roll
sbb
clc
ss
stc
push
fsub
rcl
xchg
imul
mov
out
mov
psubw
fs
add
pop
cmp
sub
cmp
cld
jg
incb
xchg
mov
push
push
jmp
xchg
ja
aad
stos
ret
push
xchg
dec
stos
icebp
test
call
movsb
jge
ljmp
scas
loop
add
push
jg
je
inc
xchg
inc
xchg
out
cmp
ret
and
push
das
fidivs
xchg
lds
xchg
fdivr
test
int
and
std
mov
ljmp
test
es
xor
adcb
sub
shll
add
aas
xorb
lock
cmp
adc
push
push
or
repz
inc
jnp
dec
sarb
out
jmp
shlb
inc
jl
xor
mov
or
pop
aas
mov
mov
lods
mov
pusha
cmp
sar
mov
sti
xchg
dec
std
xchg
imul
jnp
jg
lret
cmp
cmp
pop
repnz
lret
ljmp
test
cmp
call
nop
loopne
push
xchg
into
in
mov
in
inc
jp
in
shlb
shll
fmul
fstpl
mov
loopne
xchg
loopne
call
push
enter
out
cwtl
fisttpll
lcall
mov
fstpl
mov
out
mov
out
outsb
mov
div
mov
jmp
mov
pop
ljmp
ds
ficoms
inc
jbe
pop
xor
add
scas
dec
shr
push
cs
rolb
enter
rcr
lcall
push
out
loopne
adc
push
sub
and
loop
jl
push
add
test
mov
in
xchg
in
cltd
or
pusha
lcall
inc
mov
inc
sbbl
pop
incl
incl
mov
ret
cmp
mov
clc
inc
lods
push
fsubs
inc
mov
xlat
std
and
push
push
pop
dec
push
std
jo
add
loopne
jmp
decl
sub
in
arpl
lahf
in
je
lock
test
adc
pop
cmp
mov
push
in
insl
cmc
mov
andl
mov
aaa
ss
fsubrp
lret
test
ljmp
push
jg
push
jo
scas
xchg
repz
jecxz
inc
push
mov
pop
jo
ljmp
ficompl
inc
sbb
adc
cmpl
js
shrl
call
gs
cmp
push
into
add
jae
pop
jle
jge
cmp
fldt
pop
pop
fisubs
cld
or
push
mov
icebp
mov
pop
aas
xchg
adc
mov
fwait
in
jecxz
mov
lock
bound
decl
fidivrs
push
xor
cmp
cmp
imul
iret
cmp
fwait
mov
jne
sub
clc
fnstsw
dec
pop
jne
or
daa
sbb
lds
dec
cwtl
jmp
pushl
and
pop
cmp
call
sub
add
lea
cmp
insl
jg
cmp
pushl
ret
pushf
or
xor
in
mov
arpl
insl
jb
xor
jge
sbb
call
hlt
in
lret
lea
add
lods
jo
mov
push
mov
mov
add
clc
ja
pop
pop
sub
push
repnz
cs
or
push
popa
add
mov
sbb
push
cld
mov
ja
add
sbbb
call
cmp
aaa
dec
lock
shlb
pop
jne
lds
add
or
lcall
pop
and
jmp
popa
ja
inc
add
ljmp
xor
in
lods
shlb
and
movsl
fsub
and
mov
pop
sbbl
inc
jo
pushf
cmpl
mov
lahf
cmpsl
sub
ljmp
add
mov
mov
call
std
div
jg
in
sub
incb
jle
mov
cmp
and
pop
cld
jmp
movsl
add
jle
das
pop
xchg
xchg
loope
xor
arpl
cwtl
dec
pop
add
mov
andps
xor
and
pop
push
cmp
dec
fucom
shlb
test
jg
sub
jno
inc
sub
mov
inc
cmp
pop
cmc
pop
cmp
jmp
add
or
ljmp
mov
mov
insb
or
insb
loopne
mov
outsl
fstps
lret
jo
push
dec
insb
inc
dec
mov
idiv
decl
pop
dec
lea
jne
mov
fs
sub
pop
adc
mov
inc
mov
sub
dec
sub
fwait
mov
inc
out
cli
decl
add
popa
addr16
push
btr
push
xchg
aam
fs
std
das
mov
ljmp
lds
loopne
icebp
add
xlat
cmc
mov
xchg
mov
pushf
xor
jns
fucomip
filds
push
enter
sbb
cmp
and
jns
aas
nop
out
or
xchg
test
out
xchg
dec
cmc
xchg
xchg
fdivr
es
loop
mov
sti
fsubs
in
add
lcall
fiaddl
ds
enter
in
subb
arpl
or
cmp
ljmp
or
dec
aad
addl
leave
xchg
add
xchg
es
or
push
icebp
inc
jl
pop
push
loopne
fucomip
cld
fcomps
inc
fstpl
std
dec
pop
xor
sub
shr
icebp
sbb
cmp
in
lahf
jne
dec
jb
aad
jg
sub
lcall
cmp
pop
fcomps
cli
push
cltd
inc
int3
push
xchg
sahf
mov
aam
adc
ljmp
shlb
clc
jne
jns
jne
out
xlat
out
jo
arpl
jl
std
clc
jle
xor
xchg
incl
jp
icebp
ljmp
lds
lret
call
add
jmp
decl
in
dec
pop
fpatan
mov
scas
pop
repnz
lock
test
popa
sbb
push
pause
rorb
loop
jecxz
or
outsl
movsb
jo
xchg
clc
push
jg
pop
fcompl
or
jg
jns
inc
loop
icebp
mov
or
fldcw
faddp
dec
outsb
fisttpl
push
iret
jmp
cld
jmp
or
int3
out
and
in
ret
cld
call
test
ljmp
or
idiv
cmp
test
mov
sbb
cmpsb
call
cwtl
fistl
jae
inc
push
jmp
add
xchg
insl
notl
mov
xlat
incl
sub
fcomp
mov
dec
movsl
aaa
js
xchg
cmp
sbb
push
fs
test
cmc
popa
incl
ja
sbb
xchg
mov
dec
insl
sahf
xor
lcall
shlw
jl
lret
dec
xchg
les
add
xchg
dec
mov
ljmp
jmp
lahf
push
in
roll
rol
push
or
dec
cmpl
in
xor
lahf
std
mov
pushf
aad
and
lods
cli
mov
jg
mov
ret
add
mov
or
mov
decl
pop
and
in
jl
je
add
push
lock
jmp
jl
pop
out
scas
push
jg
jae
jae
inc
jb
sbb
mov
push
insl
hlt
dec
pop
sbb
lcall
lods
insb
add
sbb
mov
xor
int3
cmc
rorl
jns
pop
xchg
out
push
lahf
pop
enter
dec
cmc
mov
mov
or
sub
push
push
mov
lea
insb
push
push
jmp
push
out
not
lock
push
inc
std
and
es
jmp
fidivs
rorl
adc
fiadds
loop
push
subl
fistpl
cli
clc
mov
mov
aaa
or
lock
pop
aam
fiadds
mov
dec
push
dec
cmp
pop
in
lret
movsb
movsl
lcall
sub
leave
mov
dec
jecxz
icebp
add
jl,pn
stc
xchg
lea
mov
shlb
dec
loope
test
sub
fcmovnb
push
sub
add
pushf
aaa
std
lcall
ret
push
insb
pop
mov
push
movsb
and
cmpsl
fiadds
jne
jmp
push
insb
mov
movsl
push
cld
sbb
push
or
pop
call
sti
aaa
cli
fsubrl
stc
lea
push
pop
lods
in
mov
pop
xchg
hlt
dec
out
push
in
cmp
add
sahf
loopne
push
mov
incl
sahf
push
arpl
nop
in
icebp
or
stos
jecxz
cs
or
popf
dec
mov
in
repnz
fmull
push
in
mov
addl
mov
dec
sub
int3
fiadds
ljmp
aad
ds
mov
mov
and
cmpl
and
ljmp
ljmp
fsubrl
xlat
cmpsb
call
dec
fbld
adc
pop
dec
lret
cmpsl
pop
dec
int
imul
bnd
nop
stc
lods
xlat
pop
fmull
call
xchg
jo
fdiv
js
mov
loope
js
incl
ret
cmp
sti
shl
cmpsl
adc
adcl
sbb
iret
hlt
jb
cs
je
lcall
fidivs
ljmp
cwtl
aaa
jecxz
mov
call
ljmp
sar
fiaddl
inc
push
jg
jl
mov
mov
jb
cmpl
idiv
rolb
stos
pop
aas
lea
lret
jb
shl
mov
inc
fcmovne
push
test
test
or
mov
outsl
jmp
sbb
fisubrl
sub
mov
hlt
std
dec
xchg
push
mov
jmp
push
add
sub
add
les
repz
add
push
and
cs
fbstp
pop
adc
loopne
lcall
inc
sahf
int3
sub
fcmove
pop
icebp
repnz
dec
sbb
popa
lea
adc
mov
icebp
lcall
add
mov
stos
ja
or
movsb
cmpsb
sbb
sbb
sub
cmp
jle
or
xor
lret
repz
mov
testb
dec
push
and
lock
cmp
inc
push
dec
out
into
mov
das
mov
cld
xor
pop
roll
loop
mov
push
sbbl
jns
orl
pop
push
pop
mov
inc
cmpsb
add
loope
ljmp
inc
adc
xchg
fldenv
jp
icebp
out
sbb
mov
pushl
xor
fadds
dec
push
hlt
pop
std
push
mov
add
mov
dec
decl
fimull
cmp
xchg
jmp
fisubrl
xor
ret
pop
add
stos
stc
dec
mov
ret
fcom
fcoms
push
or
lret
popa
cmp
lcall
inc
rol
inc
int3
mov
mov
mov
jmp
inc
lahf
cmpsb
xlat
imul
cmpb
call
popa
push
sar
mov
test
fisttpll
push
jmp
popa
and
jg
and
jg
dec
mov
call
repz
insl
cmp
mov
pushf
stc
fcomip
jg
push
push
lcall
lds
inc
in
incl
inc
sbb
mov
cwtl
fadds
adc
js
push
fs
pop
mov
arpl
lcall
dec
push
sbb
out
adc
push
in
jne
mov
cli
adc
out
cli
mov
repnz
push
inc
add
mov
test
push
cmpsb
fsubrs
lcall
lods
fstps
xor
jno
in
or
incb
xor
mov
mov
int
pop
outsb
jb
dec
test
lahf
pop
in
push
test
mov
inc
or
std
or
mov
and
jns
rolb
idiv
test
ljmp
mov
jo
out
pop
fs
jg
pop
enter
cld
fisttps
cmpb
lock
adc
xchg
adc
cmp
push
cmp
fistl
dec
sbb
in
test
mov
decl
movups
jg
fisubs
xchg
lcall
jmp
cs
cmp
and
push
xor
add
lds
jo
sahf
adc
push
cmp
pop
jmp
xchg
ret
pop
cmc
xchg
ret
jo
jp
pop
vmovdqu
imul
sbb
push
jg
incl
ret
in
sub
mov
in
lods
adc
aam
xor
adc
or
mov
mov
lds
fs
cltd
in
fmul
popf
outsb
iret
lret
add
push
ror
ljmp
cmp
clc
lret
lret
lods
xchg
int3
push
test
clc
pop
xchg
inc
clc
call
dec
or
xchg
ds
add
push
in
cmpsb
lock
loop
lcall
mov
lcall
int3
mov
scas
testb
in
lret
adc
int3
xlat
movsb
data16
push
mov
div
sbb
jg
int3
ja
lahf
divb
mov
int3
insl
in
mov
pop
clc
data16
sbb
jg
push
jnp
aad
lret
aaa
lock
clc
cmp
int3
imull
lds
inc
enter
lcall
pop
test
or
lret
add
and
or
insb
ss
incl
lods
incb
lock
jne
or
dec
popf
popf
fwait
fwait
dec
test
lcall
icebp
xchg
jns
insb
xchg
sub
xchg
mov
xchg
push
mov
out
inc
stos
rclb
scas
loop
xor
aad
movsl
cli
mov
xchg
bound
sar
xchg
int
pop
xchg
test
movsb
xchg
jge
cmp
add
mov
fnstsw
or
ljmp
add
in
aaa
mov
and
outsl
into
sbb
cmp
dec
inc
ds
fcompl
std
dec
xchg
xchg
cmc
dec
test
sub
cld
pop
cli
and
pushl
and
rclb
xor
jne
xchg
movsl
jns
xchg
popf
jge
xchg
fdivrp
out
xchg
adcl
xchg
test
jne
pop
push
inc
xchg
in
decl
pop
xchg
aad
cmpsl
xchg
or
imul
ljmp
xchg
mov
ja
in
mov
and
mov
mov
dec
std
xchg
add
shrl
push
xchg
cmc
rolb
ficoml
pop
sahf
pop
xchg
push
mov
pop
movsb
and
mov
xchg
insl
hlt
jg
mov
push
movsl
clc
push
cld
adc
sahf
int
mov
test
mov
xchg
jge
imul
movsb
xchg
in
mov
xchg
aad
jle
mov
in
in
call
mov
ljmp
xchg
ljmp
dec
in
push
inc
das
jmp
inc
cmp
jmp
dec
icebp
ljmp
jo
cs
sbb
inc
sub
aaa
cld
outsl
das
jno
and
jnp
cwtl
movsl
jg
ljmp
outsl
ja
in
into
mov
xchg
shr
jbe
jmp
pop
sub
out
in
fdivrp
mov
pop
es
imul
outsl
mov
mov
push
fdiv
es
push
push
mov
cmc
push
mov
hlt
cmc
push
sar
cmc
inc
test
test
pushf
cwtl
push
or
mov
inc
sahf
ds
stos
or
inc
cmpsb
push
jmp
mov
jmp
dec
ljmp
shr
cmpsb
testb
xor
into
or
xchg
es
adc
sub
cmp
push
ljmp
cmpsb
fsubp
aaa
jg
jmp
xlat
add
and
clc
out
stc
mov
out
stc
out
cmp
es
inc
cwtl
sbb
xor
aaa
mov
dec
mov
clc
lods
jo
testb
sbb
xchg
pop
adc
fisttpl
sub
ss
dec
sub
cmpsb
jne
jmp
and
mov
test
in
lea
push
in
call
lock
imul
push
mov
in
cli
mov
cmp
out
mov
jle
ret
sar
lret
mov
insb
mov
push
into
and
cs
jmp
cmc
pop
mov
push
in
mov
cmpsl
mov
ljmp
in
outsb
clc
jb
cmpsb
hlt
inc
in
sahf
add
cli
xchg
cld
push
cli
into
or
xchg
mov
cli
jbe
dec
sti
scas
flds
stc
fsubp
xchg
stc
fnstsw
ljmp
xchg
lock
stc
in
hlt
cli
out
cmp
cmpsb
decl
movsl
adc
mulb
std
push
or
sbb
stc
pushw
stc
pop
and
stc
push
xor
incl
sub
sti
ss
jg
stc
stc
outsb
pop
xor
pop
cwtl
cmc
sahf
push
outsb
sti
xchg
push
adc
into
outsl
sbb
xchg
jle
into
std
pushl
pushf
clc
scas
andb
jl
or
ja
or
je
decb
mov
mov
pop
data16
sbb
jo
es
mov
push
cwtl
xchg
push
xchg
lock
cli
incb
lods
add
std
test
xchg
cmc
movsb
mov
sub
mov
pop
mov
fs
push
inc
shlb
ss
jg
movsl
add
jecxz
loop
movsl
jecxz
fidivl
cmc
dec
out
adc
xchg
xchg
jle
pop
icebp
jbe
add
scas
dec
jecxz
sti
das
in
divb
in
decl
push
and
adc
mov
add
in
pop
lcall
pop
data16
adc
decl
jb
push
sub
in
daa
ds
and
cs
cli
icebp
cmp
repnz
aaa
es
cmp
clc
decl
push
sbb
ds
mov
ss
xor
outsb
pop
mov
in
push
test
xchg
pop
fnclex
dec
insl
shl
xchg
loop
gs
loop
imul
loop
jne
loop
jp
jecxz
add
decb
lea
xchg
cmp
clc
mov
dec
mov
in
sahf
std
mull
mov
notl
lcall
mov
mov
cmpsb
stc
div
stos
jecxz
cs
retw
pop
mov
out
push
mov
xchg
hlt
dec
shr
shl
in
ds
in
in
ss
fdivrl
lcall
jecxz
aam
fcomps
in
xchg
cmpsb
in
jle
pop
out
jbe
adcb
out
scas
std
dec
out
out
scas
hlt
mov
ljmp
mov
add
in
mov
adc
out
sbb
fildll
in
dec
sub
xchg
and
and
cs
imul
dec
lret
xor
out
sbb
out
cmp
arpl
pop
and
cmp
cmpsb
decb
xchg
outsl
pop
out
into
push
pop
out
add
scas
movsb
insb
out
jle
sbb
jbe
ret
test
decl
clc
sub
mov
nop
sub
push
jae
out
ja
lock
adc
out
movsb
fsubr
es
lock
lods
nop
lock
mov
out
dec
xchg
mov
push
out
push
cwtl
inc
jmp
mulb
in
enterw
int3
ret
mov
push
jl
push
rcrb
or
ss
lock
loop
int
mov
fisubs
out
sahf
fisubl
jge
outsl
out
or
fsubrs
cmp
add
xor
filds
outsb
out
push
adc
decb
pop
sbb
mov
call
jmp
sub
fldt
jle
adc
or
sbb
negb
inc
out
cs
or
inc
jb
sti
push
fwait
pop
dec
aam
push
xor
decb
icebp
ds
mov
pop
cmc
mov
outsb
popa
pop
pop
loope
sahf
pop
cmp
lahf
mov
add
xchg
lcall
jbe
inc
lock
addb
out
jno
fidivrs
lock
jbe
out
push
xchg
pop
lock
lea
cmp
mov
mov
push
lock
mov
cmp
push
lcall
mov
lock
insb
or
fldt
cmpsb
in
ret
mov
fistpll
out
mov
mov
in
ss
clc
push
lods
clc
adc
fcmovu
and
aam
lock
ljmp
lock
or
jle
cmp
jbe
test
scas
add
out
mov
fdivrp
mov
cmc
in
fisttpl
adc
out
mov
add
pop
fsubl
sbb
jecxz
push
adc
fisttpl
out
fildl
sub
mov
jmp
cmp
pop
cmp
push
dec
int
decl
jmp
mov
cmp
imul
ds
sub
cmp
jmp
shll
outsl
mov
in
mov
dec
push
dec
in
push
push
pop
mov
out
push
call
mov
push
ja
call
mov
jl
call
movsb
dec
jmp
push
mov
call
dec
cwtl
scas
call
fucomip
negb
call
pop
rclb
ljmp
js
incl
inc
je
outsb
mov
in
out
shl
mov
cmp
into
add
xchg
ficomps
jbe
es
pop
dec
jmp
lock
mov
out
push
xchg
or
out
notb
out
cli
ja
cmp
inc
sti
arpl
out
daa
cmp
and
insl
xlat
mov
push
sub
adc
pop
mov
insl
sbb
inc
pushf
inc
inc
ljmp
add
cmp
cmp
call
cmpsb
imul
jno
push
inc
pop
pop
data16
jg
popf
in
jbe
sub
mov
aam
xchg
leave
call
jle
jge
incb
cmpsb
stos
stos
jne
scas
aas
mov
jmp
push
lcall
xlat
sahf
push
adc
in
lret
pop
into
movsl
in
push
shr
aaa
pop
cmc
sbb
inc
mov
inc
sub
cmpsb
jmp
outsb
in
call
mov
xchg
lock
aam
insb
stos
mov
jle
fdivr
loopne
scas
add
xchg
out
lahf
decb
mov
pop
insb
clc
idiv
cld
sub
mov
jecxz
and
sub
sub
adc
addr16
sbb
sbb
and
incb
decb
decb
xlat
sbb
stos
out
mov
xchg
out
inc
aas
jle
xor
data16
inc
imul
cmpsb
outsl
outsb
arpl
ficoml
pop
rcr
jg
xchg
jle
sbb
jbe
adc
scas
mov
nop
fiadds
dec
fcomip
fmull
jnp
fcmovb
jg
fidivrl
js
lods
js
mov
ficompl
movsb
call
dec
pushf
pusha
faddl
mov
jl
negb
push
fcompl
decl
clc
and
push
into
push
push
faddl
push
fdivrl
ret
mov
int3
mov
xlat
out
out
repnz
xchg
out
cmp
fildl
loop
fdivl
push
fsubrl
mov
ficoms
inc
incb
push
sub
outsl
fadd
idivb
je
mull
sub
stc
int
mov
das
xchg
and
daa
ficomps
mov
jg
or
pop
dec
cs
test
dec
cmp
in
push
dec
cs
or
loope
cmp
fcomps
fstpt
inc
mov
ss
loop
outsb
imul
sbb
into
pop
aas
dec
shlw
popa
fwait
pop
xchg
mov
jmp
ficoms
jle
jns
jmp
subl
mov
cmpsb
mov
mov
push
scas
sbb
sti
xchg
sub
mov
cs
data16
pop
shlb
decb
iret
mov
rorb
mov
aad
mov
jecxz
in
sahf
lock
in
jle
fdivr
aad
or
xchg
loopne
call
cmp
scas
or
incb
lea
out
hlt
clc
call
in
mov
repz
and
ljmp
cltd
push
int3
adc
xor
decb
ljmp
push
and
int
fistps
cltd
call
adc
push
lcall
push
xchg
add
jg
mov
add
sbb
ja
push
or
insb
loope
fbld
add
fs
add
fildll
fstpt
add
ja
daa
add
decl
pop
dec
xchg
add
inc
popf
add
pop
add
cmp
add
cmp
idiv
fildll
das
xor
addr16
pop
pop
sub
pop
push
sub
push
dec
add
lock
jmp
pop
add
push
lret
push
aaa
sbb
pop
cmpsl
xchg
mov
lahf
lcall
mov
lock
in
ja
inc
pushl
std
scas
outsl
push
std
out
sbb
add
arpl
pop
divps
or
fldl
mov
call
cld
mov
push
in
out
iret
mov
push
leave
repz
ret
fcomip
dec
mov
repz
fildll
mov
repz
stos
or
fpatan
push
test
decl
hlt
ds
xchg
repz
mov
outsb
or
in
repz
add
xor
std
fcomip
cmp
hlt
jle
mov
scas
out
xchg
repnz
pop
hlt
fsubp
stc
repz
cmp
ljmp
loope
hlt
mov
pop
hlt
out
dec
push
hlt
es
dec
hlt
data16
in
push
inc
or
dec
and
fdivp
push
inc
xor
add
int
sarl
cs
es
sbb
dec
repnz
and
repnz
hlt
sbb
outsb
mov
nop
stos
repnz
test
std
into
jl
mov
jl
xchg
loopne
jbe
insl
aam
lcall
call
imul
mov
pop
std
out
int
std
rorl
push
lds
mov
leave
pop
decl
sbb
jb
inc
mov
jp
cli
data16
clc
pop
movsl
cs
push
jg
std
mov
mov
ss
mov
pop
imul
add
pop
incl
and
ja
sar
jg
and
scas
dec
out
incl
cmp
xlat
inc
dec
push
cmovae
add
dec
icebp
add
push
xchg
add
aam
push
daa
fmul
cld
scas
incl
fmull
add
in
push
pop
call
push
div
pushw
pushl
loop
push
addr16
cmp
pop
cld
sbb
push
outsl
push
and
inc
push
arpl
aas
sbb
add
cld
push
testl
mov
push
xchg
xchg
iret
cmp
xchg
add
jg
jbe
push
scas
mov
push
out
sbb
in
fildll
mov
pop
test
mov
push
aaa
fwait
int
out
push
inc
push
lea
pop
loope
fwait
add
ljmp
loopne
imul
das
jae
add
ja
jnp
call
add
movsl
xor
inc
popf
and
add
xchg
mov
add
or
jno
or
iret
add
std
adc
stc
lahf
add
mov
scas
repnz
out
pop
add
jmp
jge
jecxz
loope
pop
fldl
fldcw
sbb
out
push
incl
sbb
add
dec
clc
inc
and
dec
inc
faddl
pop
insl
and
add
ss
test
xor
add
cmpsb
pop
ljmp
lret
and
add
out
aas
sbb
aaa
adc
add
bound
adc
or
cmpsl
mov
test
cmpb
mov
jg
fdivrp
je
jno
stos
data16
push
pusha
mov
pop
add
pop
cs
fdivr
rol
int
incl
pop
leave
inc
or
lds
dec
rcrl
pop
mov
ds
mov
or
mov
or
cld
fldcw
test
mov
xchg
mov
mov
or
and
cmpsl
adc
decl
in
into
daa
mov
jmp
das
pop
in
jbe
or
scas
cmp
in
out
fucomp
incl
cld
fidivrs
ja
cmp
push
inc
stos
jmp
inc
dec
out
jmp
dec
cltd
jmp
out
fadds
jmp
loopne
jmp
fsubl
in
in
jmp
lock
imul
or
out
cmp
clc
xor
push
cli
pop
add
add
incb
pop
ds
add
stc
outsb
xchg
cmp
lcall
pop
add
xchg
mov
push
xchg
or
jbe
test
out
sbb
ja
mov
mov
lret
mov
lret
mov
push
push
pop
mov
icebp
cld
dec
addr16
push
arpl
cmc
push
inc
ret
cmp
add
xchg
sub
push
jnp
inc
push
xor
mov
loope
or
test
push
cs
es
jno
js
data16
cli
xchg
add
aas
push
push
mov
xor
mov
iret
test
mov
rolb
pop
xchg
and
aam
xchg
dec
cli
inc
cwtl
rolb
pushf
mov
mov
mov
pop
out
xor
sti
push
push
outsl
cli
add
dec
adc
mov
adc
push
sub
jmp
idivb
xorl
xchg
jl
es
xor
outsb
ljmp
jle
sbb
add
mov
inc
jle
cmpsb
inc
hlt
push
outsl
clc
mov
in
mov
loop
ffree
enter
in
pop
push
orb
jmp
in
mov
into
dec
add
loop
addb
shrl
adcl
ss
mov
out
test
dec
fisubs
loopne
loopne
push
jge
in
mov
out
push
sbb
xor
shll
ljmp
int3
test
stos
add
add
push
mov
lds
lret
data16
mov
in
std
or
test
clc
and
lret
adcl
push
bound
stos
lahf
lret
jg
in
add
test
out
mov
pop
jg
call
pop
push
inc
inc
jl
xchg
mov
xchg
xor
ljmp
xlat
adc
and
adc
inc
mov
mov
ljmp
cli
dec
in
lods
test
push
push
testb
jns
cmp
push
repz
add
xor
inc
push
inc
sbb
push
cld
push
sbb
out
cli
and
pop
push
mov
jecxz
cmp
mov
adc
sti
pusha
mov
shll
xor
jne
dec
daa
push
jbe
mov
subl
out
dec
push
fstpt
xchg
jl
lcall
imul
mov
inc
jmp
push
stc
in
xchg
push
inc
jb
lds
dec
add
inc
into
xor
call
sar
mov
dec
or
push
xlat
mov
inc
or
push
adc
sbb
bound
xchg
xor
stc
pop
xchg
mov
lds
mov
ljmp
mov
sbb
fdivr
icebp
jmp
sbb
loop
pop
shll
cmp
ljmp
jbe
jp
add
cmc
xchg
mov
xchg
sub
outsl
ljmp
push
mov
sahf
cmp
into
scas
clc
pusha
sahf
jmp
negl
incl
leave
cmp
mov
dec
idiv
dec
or
ficoml
mov
int
xor
shl
decl
and
int
adc
leave
imul
xchg
and
jno
insb
cmc
push
es
pop
mov
pop
icebp
lcall
stos
pop
testl
jge
dec
sahf
test
mov
ljmp
aam
sbb
inc
jmp
js
call
lret
mov
jge
jae
out
popf
adc
ljmp
mov
pop
mov
fsub
cmp
add
out
push
loop
ljmp
stc
call
scas
push
dec
xchg
ret
jbe
into
rolb
inc
jp
push
jp
daa
cmp
das
clc
cmc
mov
loopne
int
stc
pushf
push
daa
or
lods
mov
dec
mov
idiv
loopne
jg
push
hlt
das
jle
repnz
cmp
dec
xor
subl
push
ds
cmp
push
mov
repz
test
mov
imul
lcall
push
add
movsb
and
js
dec
cmp
dec
rol
jne
insb
ffreep
rcr
stc
test
sbb
lahf
jg
mov
in
cltd
push
outsb
jae
xchg
xchg
adc
lahf
xchg
decl
js
rolb
cmp
ret
dec
icebp
add
pop
hlt
inc
pop
dec
shrb
dec
int3
jb
push
incl
jmp
hlt
jg
mov
adc
xchg
mov
inc
and
fsubrl
loopne
hlt
js
jns
cmp
cmp
hlt
jo
sub
loope
and
mov
outsb
cld
imul
repnz
test
dec
daa
dec
cs
aaa
add
pop
pop
mov
mov
push
es
inc
in
inc
mov
pop
sti
or
sbb
inc
scas
mov
decl
movsl
mov
aam
inc
aas
push
imul
int3
jp
adc
cmp
lcall
outsb
lahf
clc
out
insb
ret
add
fs
dec
xchg
pop
addl
jmp
lret
add
jp
cli
jmp
fisttps
scas
out
sub
mov
ret
dec
jle
push
lock
mov
cli
push
mov
fisubs
jmp
out
cltd
aad
push
mov
les
add
mov
ja
andb
clc
fcomip
dec
lret
repnz
xchg
push
mov
mov
inc
lcall
cmp
cmp
insb
or
repz
aad
mov
mov
ljmp
cmc
cmpsl
icebp
jb
cltd
push
jo
sub
inc
or
fildll
mov
repz
cmc
out
insl
insb
inc
icebp
mov
cs
add
and
xchg
jo
jp
adc
outsb
cmp
lret
lret
into
repnz
xchg
imul
and
js
dec
jl
clc
dec
mov
or
sub
cli
mov
clc
cltd
mov
cld
cmp
inc
incl
cltd
pop
add
cmp
inc
ss
xor
into
xor
pushl
mov
test
dec
into
addb
enter
lret
call
push
or
xor
cs
sbb
popa
cmp
push
test
decl
mov
adc
mov
mov
sahf
outsl
aad
ljmp
jl
flds
pop
mov
mov
add
incl
xchg
repnz
add
dec
test
mov
in
in
add
mov
jo
xlat
xor
sbb
push
test
inc
pop
dec
xlat
dec
aad
cmp
push
fimull
out
fdivrl
pop
dec
inc
lock
xor
jns
fists
fmuls
sar
mov
or
inc
in
and
mov
lock
sbb
sub
push
in
pop
aas
xchg
jns
lods
add
idivl
sbb
js
pop
cmp
lcall
pop
nop
jmp
aad
insb
test
dec
das
jp
lods
mov
ss
dec
xchg
jmp
gs
dec
ficomps
mov
cltd
call
div
cmp
push
outsb
cmp
cmc
bswap
and
mov
pushl
or
jnp
repnz
xchg
enter
rcl
inc
cmp
mov
dec
aad
fwait
shlb
lds
jg
push
lcall
push
jle
stos
dec
lahf
add
jae
scas
clc
mov
cltd
xor
stos
pop
push
push
ret
aam
push
fmuls
jmp
jbe
sbb
fistpl
inc
shlb
xchg
push
ljmp
in
outsl
mov
les
jno
xchg
xchg
inc
or
scas
add
movsl
pop
ret
pushl
es
xchg
popf
enter
mov
jmp
fstpt
mov
inc
arpl
xchg
inc
dec
shrl
or
jbe
sub
sub
dec
mov
jns
sbb
shlb
call
inc
je
cli
fnstcw
push
mov
push
push
ds
push
addr16
jns
es
inc
sbb
lock
pop
sbb
xchg
xor
dec
mov
jnp
adc
cmc
add
mov
sbb
xchg
and
push
jbe
dec
lahf
into
rcrl
mov
into
mov
inc
fidivrl
or
xor
cmp
inc
incl
cmc
push
cmp
pusha
pop
xchg
add
cmp
notb
call
inc
cmc
push
inc
test
pushf
icebp
outsb
inc
popa
cltd
aas
sti
lea
rclb
pushl
dec
int3
push
cltd
xrelease
push
inc
ja
movsb
xor
dec
push
cmp
decl
inc
frstor
rclb
push
add
push
fsubrs
fstpt
fidivs
fs
push
mov
jl
xchg
sbb
sbb
lcall
inc
les
dec
push
test
mull
add
xchg
mov
ds
pop
mov
cld
cmp
sti
cs
pop
jb
decl
out
fbstp
push
shl
hlt
test
inc
ret
lahf
call
and
test
inc
xchg
imul
fidivrs
loop
pop
mov
sub
cli
cs
icebp
ljmp
rorb
and
imul
neg
xchg
in
inc
lods
ljmp
call
xchg
aaa
outsb
std
push
cmp
js
iret
jmp
push
cmpsl
add
or
ss
dec
decl
ret
push
pop
test
pop
mov
fsubs
outsl
inc
mov
sbb
dec
sub
mov
rorb
flds
cwtl
add
adc
adc
hlt
xchg
stc
out
decl
loop
fisubrl
jbe
jle
sub
cmp
mov
push
loope
cli
lret
decl
xchg
jmp
into
cli
add
leave
iret
and
mov
sbb
mov
pop
xor
jmp
aad
xor
push
out
imul
jge
movsb
test
xor
xchg
imulb
test
xchg
mov
inc
out
dec
in
test
pusha
inc
in
cmpb
mov
dec
cltd
je
mov
dec
cld
jl
jne
mov
aas
aas
cmp
enter
incl
aas
xchg
dec
dec
and
mov
int
push
mov
cli
pop
mov
fildll
mov
xor
loopne
xlat
out
lret
dec
push
icebp
add
jecxz
sbb
inc
pop
xor
xor
jmp
outsl
repz
push
push
lcall
dec
es
pop
addb
add
pusha
mov
dec
cmpb
icebp
add
xlat
leave
into
je
adc
sbb
lret
inc
jo
cmp
ljmp
call
sub
pusha
pop
mull
sbb
imul
dec
fimull
xchg
sbb
nop
mov
push
decl
xor
cwtl
cmp
bound
inc
mov
add
sub
lcall
pusha
nop
call
dec
shlb
sbb
mull
xchg
and
push
shlb
call
orl
aam
shll
rcrb
mov
shlb
and
fstpt
lods
cmp
aaa
dec
inc
or
test
pop
lret
fldenv
mov
sahf
fstpt
inc
xor
adc
jl
scas
repz
mov
jg
sub
hlt
push
or
push
icebp
adcb
or
pop
xchg
or
shll
decl
decl
inc
jb
dec
adc
nop
in
int3
stos
sbb
add
ficoms
or
bound
cmp
dec
mov
cld
ljmp
idiv
push
sbb
aad
pop
mov
xchg
enter
mov
ljmp
inc
fdivrl
jae
sbb
rcll
cmp
add
adc
mov
in
pushl
hlt
leave
mov
movsb
xor
adc
dec
push
cmp
mov
push
cld
add
cld
add
lcall
shl
outsl
pop
push
in
xchg
xorb
testb
call
jle
out
adc
popf
dec
sahf
xchg
mov
hlt
cmp
ret
call
jmp
sub
popf
pop
adc
mov
sub
int
stc
fldenv
daa
cmp
jg
rcrl
push
push
call
jmp
cmpsb
xchg
cld
repnz
fnstcw
jmp
cltd
cmp
push
mov
sub
push
rorb
mov
jl
jl
ficoms
add
inc
into
pop
mov
or
fs
cmp
jg
cmp
inc
inc
sbb
dec
jne
test
dec
das
pop
out
adc
decl
dec
and
mov
decl
and
sub
add
jae
xlat
in
cmp
xchg
mov
lcall
sbb
sti
inc
lods
xor
dec
es
dec
psllw
fdiv
ret
std
sbb
sub
dec
cwtl
mov
xlat
in
xor
mov
mov
stc
rcl
sub
lret
cs
jg
adc
lret
aad
or
mov
mov
xchg
enter
xchg
push
in
nop
sbb
pushl
lret
cltd
std
shlb
shrb
fdivrl
mov
cli
sub
pop
icebp
lcall
dec
cld
inc
int
jl
jmp
or
in
dec
dec
sbb
xchg
add
cmp
out
inc
xor
pop
data16
loopne
sub
jne
call
out
and
in
fcompl
mov
dec
push
loop
in
jo
pop
push
in
movl
data16
push
inc
mov
and
add
call
hlt
jg
shr
mov
xlat
mov
mov
cmpsb
or
in
pop
incl
aaa
add
lret
out
push
pop
es
dec
mov
sub
mov
jg
push
push
lahf
push
push
ret
je
dec
xchg
lret
push
jbe
push
outsb
jae
insb
fistpll
cmp
mov
cmp
xor
push
sarb
test
cmp
in
mov
xor
push
test
cmp
sarl
es
jne
outsb
pushl
cmp
repnz
dec
sbb
dec
xchg
push
sbb
xor
xor
mov
mov
mov
dec
ljmp
or
dec
mov
filds
push
jmp
ss
dec
mov
pop
inc
out
cmp
pop
inc
outsl
in
call
jl
inc
jbe
push
inc
dec
loop
inc
push
sub
inc
cli
jmp
es
dec
out
clc
mov
dec
pop
and
xor
dec
cs
jge
fdivrp
subl
sub
add
pop
jge
add
movsb
sub
test
xchg
push
cs
push
jae
pop
jo
shll
mov
jg
sahf
cmp
mov
stos
cmp
stos
adc
mov
mov
cmp
scas
push
int3
cmp
xchg
sbb
mov
push
xchg
lret
ret
idiv
cmp
enter
cmp
mov
dec
mov
ds
ds
in
pop
jmp
icebp
mov
aad
das
clc
ljmp
fnstcw
cmp
loopne
push
push
gs
stos
push
imul
adc
cmc
fsubl
stc
push
inc
jmp
push
jmp
loope
mov
cs
cmp
jecxz
lcall
decb
decl
jle
ds
fcmovnu
push
sarl
push
dec
iret
outsb
aas
add
cmp
std
outsl
cmpsb
sbb
cmp
out
cmp
mov
add
cmp
cmp
pushl
pop
cmpl
jge
pop
mov
cmp
test
adc
ljmp
mov
mov
pop
cmp
jnp
cmp
pusha
sub
pop
sub
cmp
inc
sub
call
push
out
and
mov
xchg
aad
cmp
fstpl
mov
inc
cmp
dec
xchg
xchg
cmp
xchg
cmp
clc
mov
sbb
mov
dec
cmp
sbb
xor
das
fdivs
push
and
sbb
das
cmp
xchg
inc
mov
or
ret
cmp
cmpb
je
fidivrs
aaa
push
xor
outsb
mov
sarb
push
lock
ds
call
cmp
cmpsb
incl
pusha
jbe
pop
cmp
pop
pop
cmp
mov
cmp
imul
mov
push
xchg
adc
movsb
or
test
dec
mov
or
decl
cs
test
adc
cmp
or
cld
cmp
cmp
clc
test
es
cs
cmp
sahf
cmp
mov
ljmp
push
inc
lods
roll
ds
push
cmp
inc
stos
cmp
dec
cmpsb
cmp
scas
fdivs
push
fstpl
data16
push
out
cmp
sbb
adc
jmp
jbe
mov
mov
lret
cmp
add
inc
pop
mov
cltd
clc
cmp
pop
or
add
jg
pop
inc
xchg
scas
cmp
cltd
sarl
popf
mov
cmp
movsb
addr16
ljmp
data16
mov
fidivrs
cmp
mov
imul
ljmp
fisubrs
cmp
pop
bound
gs
negb
outsl
cmpsb
lcall
cmp
fdivl
into
fmuls
leave
sarb
mov
sahf
mov
cmp
lcall
xchg
mov
data16
mov
movsl
add
repnz
cld
sar
jno
add
repz
cvtpi2ps
inc
shll
into
pop
jbe
or
mov
mov
das
cmp
out
sub
xlat
cltd
inc
adc
cmp
sti
jmp
fbld
fwait
inc
es
inc
fisubl
push
std
fbstp
xchg
decb
xchg
inc
add
dec
inc
push
outsl
pop
dec
inc
pop
lahf
push
mov
jle
mov
inc
ds
ret
inc
pop
lock
cld
repnz
xor
inc
jp
inc
cmp
jmp
push
out
out
xor
cld
out
xchg
cmc
orb
jmp
push
test
or
jbe
in
inc
repnz
jp
jecxz
dec
push
inc
ljmp
inc
movsl
push
mov
dec
or
push
inc
decb
out
mov
addl
xchg
dec
push
pop
mov
pop
cmpsb
push
or
ss
cmp
mov
loop
xlat
das
jbe
test
jbe
lock
incb
jno
inc
jle
cli
idiv
pop
dec
jle
inc
mov
inc
outsb
push
hlt
inc
pop
repnz
ret
cmp
xchg
inc
fiadds
inc
fidivrl
inc
xchg
jge
inc
or
inc
stos
adc
pop
add
out
push
inc
adc
sbb
xchg
enter
insb
mov
mov
inc
pop
enter
dec
inc
int3
int3
inc
xor
lret
cmp
mov
push
mov
inc
mov
jecxz
out
mov
ret
testb
icebp
push
mov
mov
lcall
sub
inc
mov
adc
notb
imul
fadds
loopne
ljmp
inc
cmpsb
lret
gs
ss
bound
int3
rolb
rcr
ds
faddl
sub
aaa
sbb
and
dec
sbb
inc
scas
dec
add
sub
cs
lea
and
mov
xchg
sbb
cmp
add
or
cld
jmp
cmovbe
adc
fisubs
mov
adc
es
imul
decl
scas
ficompl
push
pop
inc
sbb
inc
sbb
repz
cli
in
inc
cs
addr16
cmp
imul
push
cld
inc
mov
nop
out
inc
sahf
mov
inc
jb
inc
inc
out
testb
inc
dec
incl
ss
int3
inc
bound
inc
push
xor
inc
mov
aam
cmp
fstpt
xor
inc
push
pusha
or
pushl
dec
inc
cmpsb
jo
xchg
outsb
push
inc
ljmp
inc
fisubs
fisubs
in
clc
xchg
mov
mov
sti
sbb
push
andb
js
outsl
fldt
inc
stos
pushf
mov
push
push
ficoml
popa
out
cmp
mov
inc
or
inc
incb
inc
stos
mov
ss
clc
or
mov
mov
xor
or
std
push
dec
pushf
nop
inc
imul
inc
push
xchg
push
xchg
inc
xchg
loop
push
clc
mov
inc
movsb
dec
test
inc
xor
fstpt
std
faddl
push
cmc
mov
call
mov
in
leave
jb
and
push
es
ljmp
outsl
inc
push
jno,pn
sbb
inc
push
push
jne
add
ja
inc
mov
jns
dec
dec
inc
bound
inc
out
mov
jb
push
jbe
clc
or
loop
inc
mov
push
into
pusha
fisubl
mov
inc
mov
insb
shrb
and
pushl
sbb
inc
jbe
mov
inc
std
ret
add
testl
decl
mov
dec
prefetch
mov
daa
ret
or
in
enter
aad
jecxz
jmp
sub
sub
sub
and
jno
imulb
xchg
push
xlat
add
iret
fnsave
jg
push
das
stos
rcrb
shrb
sbb
lods
shll
lcall
jmp
pop
in
sbb
mov
jbe
icebp
add
mov
sbb
add
call
cli
push
leave
jmp
or
push
addr16
and
mov
popf
jmp
shl
jb
or
adc
mov
pushl
mov
cld
lret
mov
mov
jp
and
cmp
dec
shrb
ljmp
xchg
shrb
gs
xchg
jae
xchg
ss
test
ficoml
xchg
dec
insl
push
test
sub
call
jg
pushf
rcrl
aaa
fidivrl
cmp
dec
std
sub
outsl
decl
inc
or
sub
mov
sarb
and
and
dec
dec
inc
dec
mov
mov
fstl
ret
fldl
sbb
sbb
cwtl
movsl
shll
aaa
push
and
out
push
ljmp
cmc
aaa
rol
cmc
mov
test
lahf
fwait
and
or
add
cmovl
push
les
jmp
xchg
cmp
std
test
sti
inc
cltd
xor
lahf
dec
insb
fwait
mov
inc
aaa
sub
dec
ljmp
adcb
add
sbb
and
xstore-rng
cmpsl
inc
dec
xor
cs
clc
push
push
jle
das
mov
pop
testb
pop
xchg
dec
push
js
test
mov
dec
gs
call
decb
inc
orb
aam
test
in
mov
mov
test
loop
adc
clc
mov
loop
add
aaa
cld
adc
das
lret
insb
and
xor
inc
insb
inc
repz
jmp
in
inc
fiaddl
rclb
popa
aam
je
aaa
xor
pop
mov
sar
jmp
mov
inc
jno
fnop
nop
lock
cli
push
dec
and
lcall
test
cld
mov
pop
aam
dec
mov
ret
pop
pop
lock
xor
loop
push
sarb
out
enter
mov
movsl
sbb
push
push
adc
lock
call
sti
inc
lods
aad
sarl
aad
cmp
ss
xchg
xchg
mov
das
sub
cld
sub
ret
daa
pop
jmp
shll
gs
out
clc
sbb
add
or
lret
dec
xor
jge
inc
in
pop
shl
fldl
cs
sbb
xlat
mov
sti
push
and
lcall
dec
mov
imul
add
ljmp
ja
xchg
rorl
dec
negb
pushf
loope
incl
xchg
pushf
iret
inc
js
jo
cmp
rdtsc
testl
aad
mov
mov
xor
xor
mov
inc
mov
test
fstps
add
int3
mov
imul
dec
jo
loope
incl
subb
stos
jmp
push
xor
test
push
rcll
lock
mov
loope
pop
lret
aam
cmp
aam
and
dec
in
xlat
or
out
adc
sbb
mov
push
ljmp
loopne
push
mov
cmp
pop
rorl
in
je
fwait
mov
pushf
lea
jg
jmp
das
jmp
rorl
pop
dec
cs
pop
dec
sub
push
lcall
add
and
lahf
adc
aam
and
loope
mov
cmp
nop
std
outsb
pushf
and
xchg
pop
ret
ds
sti
jb
jle
adcb
dec
movsl
push
jnp
cld
jl
mov
sti
lods
aam
inc
cmc
inc
mov
cmp
xor
or
int
jne
mov
mov
sub
clc
clc
jno
dec
pop
out
mov
inc
push
jbe
xor
cmp
nop
lds
and
mov
add
sub
decl
adc
sub
inc
out
fcomps
sub
loopne
inc
fisttpll
mov
inc
daa
pop
sub
f2xm1
int
test
lods
aad
inc
jle
jg
cmp
sub
pop
idiv
sbb
imul
pushl
mov
xor
inc
or
pop
and
fildl
lea
jno
sub
xchg
xor
add
add
jno
dec
sbb
or
cmp
fwait
out
cmc
mov
sub
out
push
xor
sub
sbb
xchg
inc
test
loop
jmp
pop
pop
fcmove
sbb
inc
inc
lods
mov
inc
fildll
xchg
or
or
stos
stc
cmp
push
dec
cmp
movsl
or
call
pusha
adc
sub
sub
xor
xor
lock
cmp
inc
jmp
nop
pcmpeqd
sub
decl
push
inc
xor
dec
adc
inc
scas
cmp
ficoml
lock
ljmp
mov
mov
inc
and
fwait
inc
negl
lahf
xor
mov
pop
clc
movsl
ljmp
inc
ror
mov
out
sub
inc
or
jecxz
ljmp
test
push
fnstcw
push
lret
pushf
inc
mov
mov
mov
jno
mov
ss
mov
lcall
or
fiadds
mov
idivb
jmp
mov
inc
mov
loopne
in
popf
cs
and
inc
jl
ljmp
jbe
xchg
mov
jbe
mov
jg
jmp
int3
out
dec
mov
inc
and
xor
clc
mov
sub
push
cmp
sub
xor
fs
jl
xor
out
or
xchg
xchg
insb
xor
dec
pop
inc
sub
inc
inc
cmp
push
inc
rcl
fsubrl
xchg
rcll
sarl
insl
inc
xlat
xlat
scas
inc
mov
ss
pop
cmc
bndstx
call
sub
or
incl
or
call
fmul
shl
data16
jg
pop
cltd
outsl
ja
jecxz
lea
jmp
pop
dec
pop
xor
sti
jle
gs
xlat
cmp
mov
adc
jg
fisttps
sarl
clts
xor
stc
pop
loopne
rcrl
idiv
add
add
std
xchg
stos
xlat
or
pop
out
aam
das
clc
or
mov
sub
dec
imul
add
std
je
push
xlat
pop
or
dec
add
jnp
pop
sbb
loop
ljmp
xlat
ficoml
repnz
mov
sub
push
or
and
mov
mov
es
xchg
aas
cwtl
add
decb
aaa
sti
movsb
adc
cltd
add
incl
insl
sub
sti
xor
popf
inc
dec
lcall
lret
mov
dec
das
in
mov
cmpsb
fstpl
inc
and
movsb
shll
lahf
cmp
pushl
add
xabort
push
out
push
cmp
imul
mov
dec
adc
cmpsl
das
xor
call
push
fistl
push
inc
xor
jge
in
dec
lret
les
or
adc
and
das
clc
fisubrl
cmc
xchg
data16
in
adc
inc
push
pop
loope
and
push
call
mov
xchg
filds
push
fidivs
push
in
fbstp
xor
jp
fs
pushl
push
mov
es
inc
into
les
sbb
loope
adc
inc
cmp
outsb
jmp
adc
test
xchg
push
sbb
lcall
cmp
cmp
decl
adc
add
adc
loope
jp
xor
cmc
adc
fld
call
dec
test
inc
ret
inc
shrb
xlat
and
leave
and
je
fcomip
fbld
push
xchg
aam
and
jge
pop
rol
or
jmp
incb
fnstenv
test
cmp
jmp
xor
test
add
call
add
dec
int
dec
imul
out
cmp
mov
incl
int
ljmp
loopne
pop
and
nopl
and
cs
pop
dec
out
or
or
lds
das
ljmp
fsubl
orl
dec
fcomip
xchg
push
xchg
cmp
mov
ja
mov
out
mov
js
mov
rcr
fimuls
cwtl
sahf
jb
fiadds
mov
adc
push
rcrb
scas
mov
fistpll
lock
pop
les
loopne
jl
dec
inc
dec
xor
icebp
sbb
inc
push
test
bound
fisubrs
sbb
aas
cmp
scas
clc
in
push
imul
xchg
aas
dec
popf
sbb
xchg
sbb
xchg
out
loop
mov
add
inc
fcoms
ficomps
jle
mov
xchg
jne
ss
jb
push
leave
push
outsl
cmp
cld
cmpsw
mov
clc
cltd
sbbb
add
ljmp
push
sti
loop
pusha
jl
out
add
adc
push
jmp
push
filds
call
mov
pushf
mov
shrb
outsl
clc
add
test
fidivrs
insl
xlat
mov
stos
adc
xor
fidivs
xor
dec
or
push
sti
fdivr
lcall
call
adc
pop
xchg
xor
cmp
sub
ret
mov
hlt
mov
inc
mov
pushl
adc
loopne
outsb
bound
mov
setae
dec
ljmp
jg
xor
push
daa
adc
test
xor
rcl
lret
fidivrl
push
out
arpl
mov
mov
adc
push
and
enter
loop
popf
lock
ja
popw
dec
fnstsw
popf
mov
cli
xor
and
jle
cmp
dec
fstpl
lret
mov
pop
inc
or
jge
rcll
stos
cmp
jns
xlat
dec
pushl
add
or
popl
es
xchg
add
dec
ljmp
xor
xor
xchg
rcl
clc
rcrb
in
adc
add
shl
sbb
test
clc
call
xchg
dec
cmp
scas
mov
add
jne
pop
xlat
call
dec
decb
aas
xchg
icebp
pop
daa
outsb
nopl
jbe
adc
lcall
pop
cmp
loopne
xor
and
lock
xor
in
insl
xor
in
lcall
fs
sti
and
ror
push
or
dec
mov
or
call
ljmp
cmp
inc
add
sahf
or
jmp
xor
xor
lcall
xchg
dec
loope
ret
sub
movsl
cmp
data16
std
dec
sub
lret
sub
inc
or
hlt
and
mov
mov
cmp
pushf
filds
lcall
jl
xlat
or
imul
idivb
or
ljmp
test
cmc
mov
add
xor
lret
xor
mov
call
push
pop
xlat
rcr
out
sub
enter
sbb
fidivrl
sub
sbb
lahf
in
stos
lcall
jne
mov
imul
jae
mov
test
xchg
pop
inc
nop
cmp
xor
xor
add
shrl
push
sbb
push
pop
enter
push
cmp
add
cld
repnz
jg
test
movsb
xchg
xlat
cmpsb
inc
cmp
nop
xchg
packsswb
incl
dec
fimull
fists
push
das
mov
cltd
in
rcrb
fisubs
mov
ljmp
mov
aam
cld
xor
or
dec
fwait
rcrb
lods
add
adc
dec
imul
xor
push
jae
lock
xor
xchg
xchg
add
pop
in
movsl
lods
xor
movsl
aas
loope
call
cmp
or
ret
cmp
scas
call
mov
jno
inc
or
cmpsl
pusha
ljmp
sub
mov
jne
call
stc
out
adcb
adc
lret
lret
lcall
fmul
subl
ss
pop
cmc
js
shll
ds
cmp
loop
inc
incl
js
loop
mov
push
lock
inc
push
fs
icebp
cli
outsb
adc
imulb
dec
sub
shrl
sub
pop
iret
push
cmpsb
cld
push
out
cli
test
in
aas
adc
fldt
mov
dec
ljmp
cmovbe
js
and
jge
jmp
cld
ja
clc
subb
repz
sub
ficoms
outsl
aad
pushl
cltd
mov
int3
daa
aas
in
xor
ficoms
das
inc
test
lret
fmuls
xchg
or
ficompl
or
jecxz
xor
insl
cmp
push
dec
ljmp
lret
movsl
mov
inc
shll
inc
jns
or
mov
aaa
pop
mov
fstl
sarl
mov
adc
adc
call
das
imul
lcall
std
jmp
push
shrb
repz
daa
mov
cmp
imul
ljmp
jp
xor
sbb
fildl
int3
rorb
adc
fs
pop
xchg
sar
pushl
cmp
ret
shlb
sbb
inc
sti
loopne
fwait
or
lock
das
rorb
cmp
ret
xlat
push
xlat
in
mov
stos
dec
loope
stos
shlb
test
adc
loopne
outsb
ljmp
rclb
movsl
sbb
jle
scas
cmp
jbe
push
loop
mov
or
jmp
psubusb
adc
cmp
repnz
fsubp
and
aam
push
pop
sbb
incl
push
loope
loop
push
adc
jns
jns
push
xorl
insl
icebp
out
dec
cld
jmp
xchg
sbb
sarl
lcall
pop
insl
add
imul
xor
or
inc
popa
int3
or
call
cmc
inc
pop
imul
loopne
not
adcb
mov
mov
and
xor
mov
add
add
movsb
jmp
adc
xchg
xor
xchg
in
lret
sub
jg
andb
popw
flds
pop
inc
aad
sbb
jg
test
push
nop
xor
push
cmpb
gs
pushl
push
push
cmp
or
xchg
rorb
cmp
push
jo
ljmp
add
push
add
clc
pop
sbb
cltd
push
aam
push
dec
sub
fcmovnu
xchg
insb
stos
std
incl
xchg
fmulp
out
pop
fistpll
xcrypt-cbc
cmpsl
push
shlb
scas
xor
pop
inc
jno
jg
mov
adc
cmp
pop
dec
sbb
pop
icebp
and
inc
xchg
mov
incl
outsb
loope
iret
jb
xor
inc
ds
leave
jle
add
outsl
mov
cs
les
aas
movsl
out
mov
lcall
adc
mov
cmp
jmp
cmp
iret
daa
mov
nop
xor
ret
js
int3
xor
div
mov
jp
insl
xchg
lea
cli
daa
popf
xchg
dec
xor
call
mov
sti
ss
adc
cmp
mov
and
adc
add
incl
mov
xlat
xchg
aad
test
cwtl
jbe
daa
pop
loop
ds
jg
cmp
fisttps
adc
inc
mov
dec
mov
lahf
ss
xor
cmp
mov
mov
and
and
xchg
loope
lds
jp
stos
add
or
and
jb
pushl
pop
mov
pop
xchg
cltd
dec
inc
mov
loopne
in
out
insl
push
lret
xchg
test
rcll
pushl
jnp
cmp
std
or
or
cli
mov
jg
das
stos
xchg
and
movsl
cmp
mov
sub
jbe
fidivrs
or
jno
pop
xor
sbb
je
das
jp
fdiv
jge
es
sbb
jg
and
pop
jge
test
pop
inc
xor
jecxz
and
adcl
ja
ja
jle
dec
in
xchg
insl
xor
aaa
push
jb
jnp
push
jo
jo
frstor
mov
enter
adc
jne
in
incb
shll
sti
jbe
decl
mov
aam
scas
mov
outsl
ret
adc
dec
xchg
sarl
jbe
or
loope
sbb
add
fs
sbb
bound
and
lahf
inc
and
pushl
inc
cmp
push
repnz
leave
cmp
sub
inc
ret
dec
aas
inc
push
push
insl
aad
and
mov
xor
lcall
aam
dec
push
jne
mov
jmp
xchg
insl
stos
sbb
xchg
jo
cli
or
decl
mov
push
lods
scas
outsl
or
mov
ret
loopne
into
pusha
loop
bnd
divl
mov
push
xchg
rcll
cld
call
mov
sub
jmp
adcl
repnz
lcall
jg
xor
fs
into
fcmovnbe
ss
ss
sbb
rclb
popa
fisubrs
repz
fistps
pop
pop
ss
inc
cmpsl
dec
cli
ljmp
mov
loop
repz
jp
pop
std
cli
loopne
add
xchg
sub
and
cmp
xchg
unpckhps
mov
mov
dec
fbld
cmp
cltd
add
lahf
mov
aaa
std
fldl2e
inc
sarl
enter
cmp
lds
add
subb
dec
mov
adc
movsl
ret
setae
mov
jge
push
dec
and
clc
decl
lea
xor
jmp
mov
imul
ljmp
jecxz
pminsw
pop
psubd
or
ljmp
call
and
mov
test
and
push
fidivrs
sbb
xchg
mov
inc
in
aaa
addl
xchg
jo
inc
call
ds
fstpt
xor
loope
pop
outsb
sub
add
aaa
std
call
mov
xor
xchg
dec
imul
inc
pop
jno
mov
adc
bound
clc
stos
test
jg
jno
lock
data16
ljmp
lock
mov
loopne
cmp
mov
sbb
dec
xor
mov
and
mov
fwait
iret
mov
add
rcrb
or
pushl
mov
rcrb
mov
cmp
cmpl
dec
mov
sbb
mov
sar
scas
fldl
mov
inc
aas
sub
jnp
sub
lea
out
rcll
testl
movsl
sub
sbb
sbb
xchg
mov
xchg
mov
test
mov
mov
inc
mov
and
inc
movsb
xor
dec
jmp
ret
mov
in
xchg
gs
push
mov
scas
movsb
xor
jle
lods
fdivr
add
sahf
js
mov
test
xor
rcr
les
push
out
pushl
fucomip
pop
xor
bound
and
dec
idivb
scas
in
roll
and
ljmp
sbb
in
fs
and
loop
cmp
ret
pushl
hlt
dec
inc
in
dec
aaa
jae
dec
das
imul
and
std
imul
imul
fnstsw
or
in
dec
fisttps
jnp
out
sub
cmp
jecxz
sub
ret
loopne
mov
fistps
lea
mov
lea
call
xchg
fstl
test
push
cmp
jo
and
mov
in
jp
xor
gs
test
inc
pop
push
sub
bound
xchg
cmc
pop
out
out
and
aam
cwtl
daa
cmp
mov
jg
jg
sub
xchg
push
aam
test
inc
xchg
lods
outsb
jb
adc
inc
sub
and
inc
ss
sub
lcall
pop
fidivs
push
dec
pop
inc
int3
pop
pushf
pop
mov
test
sub
mov
sub
inc
lret
insb
cmpsb
sub
clc
popf
pop
repz
xchg
fisttpll
cmp
push
xchg
cmp
jbe
cmp
inc
mov
aas
nop
fs
cmp
fsts
sbb
push
out
xor
divl
cmp
lock
daa
loope
aam
xchg
call
push
test
ljmp
ja
loopne
notl
cmp
cmpsl
sarb
pop
and
jl
in
imul
push
addb
push
movsb
push
popf
into
cmp
mov
movb
sbb
xor
scas
clc
decl
mov
cmp
decb
sbbb
pushl
test
mov
push
xchg
xchg
mov
push
and
cmp
cmpsb
xorb
push
and
fildl
out
seta
rorb
fcoml
inc
das
push
fsts
push
mov
out
faddl
in
mov
adc
pop
sub
nop
std
xchg
test
dec
arpl
fdiv
in
ret
test
incl
push
paddd
int3
dec
sbb
jge
pop
pop
jo
sahf
or
xchg
jmp
ret
pushl
js
mov
rorb
cmp
jb
daa
adc
mov
imul
inc
ja
cmp
call
in
push
pop
xchg
xchg
lds
adc
xor
and
mov
popf
xchg
in
leave
daa
aas
leave
sbb
cmp
mov
dec
cmc
shl
aad
xlat
lcall
xchg
lods
xor
filds
out
adc
es
fnsave
dec
leave
outsl
adc
cmp
xchg
or
in
stos
std
adcl
dec
dec
popf
shll
cli
cmp
insl
subl
mov
aam
cmp
inc
xchg
sub
decl
cmp
iret
dec
sbb
jp
cmp
arpl
cmp
fdecstp
cmp
and
les
adc
mov
fisttpl
push
xor
divb
dec
adc
call
xchg
push
sbb
jp
push
das
xchg
ret
inc
shlb
jmp
jle
xor
movsb
dec
adc
push
push
adc
shll
adc
loope
pop
scas
xlat
jo
lahf
decl
dec
int3
adc
jno
push
cmc
xchg
in
std
ljmp
pop
ret
push
arpl
mov
call
xchg
adc
jno
dec
pop
mov
sarb
add
imul
cmp
gs
pushl
lret
test
enter
sbb
jg
dec
mov
add
stos
cmp
mov
mov
mov
test
pushf
and
ja,pt
pop
cmc
popa
cmp
fimull
push
movsb
aaa
jne
mov
cmp
dec
loope
decl
mov
cmp
dec
xchg
int
or
cmc
dec
mov
cmovle
das
add
inc
adc
mov
inc
dec
jmp
popa
inc
mov
xchg
inc
inc
xlat
dec
mov
incl
fsubrp
and
push
inc
xchg
in
push
das
jge
sbb
jmp
inc
sbb
in
pop
or
sti
mov
aad
mov
sub
and
add
jmp
lret
push
in
inc
xlat
int3
pop
orl
jnp
adc
sti
inc
inc
mov
cmp
dec
arpl
cs
lods
xor
fisttpl
xor
dec
or
inc
pop
lock
inc
adc
lret
jmp
lahf
dec
arpl
inc
dec
or
into
sub
lret
dec
xor
mov
dec
pushl
mov
dec
jae
adc
jno
icebp
sbb
inc
out
xchg
ret
mov
jmp
mov
xor
push
cmp
out
cmpsl
lret
cmp
insb
sbb
dec
mov
pop
or
adc
jmp
inc
inc
mov
adc
in
push
outsb
pop
repnz
pusha
cmp
pop
fdivs
lcall
dec
push
cmp
rcrl
dec
fnclex
rorl
mov
mov
ljmp
lret
add
dec
int3
or
fwait
sub
sub
push
fidivrl
cmp
jl
lret
pushf
add
sbb
or
xchg
cld
je
int3
in
adc
inc
jbe
insb
jae
dec
mov
je
loopne
call
ficompl
and
lock
fistpll
lea
jmp
sub
decl
dec
inc
add
jmp
das
stc
lret
lods
xchg
sbb
iret
clc
decb
lock
rol
jno
je
mov
pop
rorb
fidivrs
andl
in
imul
xchg
cmp
mov
mov
inc
xor
or
push
iret
sub
add
adc
or
fdivr
inc
scas
xchg
outsl
clc
clc
subb
bnd
jmp
out
arpl
nop
mov
cs
aad
jmp
ljmp
mov
cmp
aam
cmp
or
xchg
out
fidivs
adc
decl
sub
cmp
sub
jmp
pop
sar
pop
clc
testl
lea
dec
cmp
hlt
lcall
xor
xor
push
sub
out
int
std
and
call
out
xchg
xor
mov
icebp
lcall
xlat
xchg
sti
sbb
push
lods
push
add
js
xor
lcall
sub
aam
pop
dec
xor
push
frstor
push
adc
mov
lahf
pushf
idivl
ret
jp
stc
dec
fwait
mov
cmc
dec
mov
insb
jl
jbe
test
push
pop
sub
stc
pop
sub
std
popa
sub
add
into
add
push
sub
or
lret
sub
fimull
sub
loop
sub
fbld
jmp
lds
jmp
mov
aaa
sub
mov
ds
cmp
push
ds
sub
inc
xor
inc
ss
xor
decb
sub
push
push
push
sub
sbb
push
jb
push
and
sub
and
sub
sub
push
ljmp
xor
sub
je
sub
jl
sub
test
jle
mov
lcall
sub
pop
lret
pop
shrb
popa
sub
fs
push
outsl
insb
enter
jbe
out
mov
sub
mov
subb
shrl
jg
je
push
leave
jb
dec
js
not
cmpsb
sub
xchg
lods
sub
stos
sub
mov
push
xchg
pop
sub
jg
mov
sub
mov
push
sub
fsubl
fldcw
loopne
into
or
lcall
flds
pop
sub
fmull
out
or
rcll
sub
fdivr
jg
or
push
jmp
sub
out
mov
call
mov
sti
ljmp
sub
xor
sub
sub
push
mov
incb
testb
sbbb
jmp
icebp
push
lahf
sub
adc
mov
movsl
sub
mov
cs
sub
cwtl
mov
dec
xchg
popl
xchg
jle
sub
pusha
imul
jle
sbb
and
jbe
dec
push
dec
pop
test
ret
lods
loopne
fsubl
sub
cmpl
add
lcall
ds
mov
std
xor
push
mov
repz
incb
mov
mov
sub
cs
sub
outsw
push
stos
pop
xchg
das
aaa
push
popf
pop
imul
stos
inc
or
mov
aaa
ss
in
icebp
jg
stos
in
imulb
cmpsb
push
ss
pop
mov
push
imulb
xchg
es
adc
or
pop
adc
test
ljmp
sub
std
mov
cmpsb
fists
out
cmp
add
mul
lock
push
enter
lcall
lock
insb
xor
popf
fistps
or
cmp
push
or
jmp
lods
loopne
adc
incl
test
cmp
push
enter
sti
das
adc
pop
lcall
jnp
popa
fists
test
push
mov
adc
mov
jmp
call
dec
gs
popa
lods
fsubl
mov
leave
cmp
call
mov
shl
fstpl
push
pop
xorl
sti
cwtl
xor
push
and
popf
xor
sbb
scas
jle
cld
lcall
decl
sbb
adc
nop
mov
xchg
ljmp
cli
shrb
andb
xchg
pop
testl
out
and
cmpsb
or
adc
nop
in
fimull
pusha
xor
hlt
inc
aaa
push
pop
sub
insb
adc
ss
aam
cmp
jmp
xor
dec
jp
mov
ljmp
jne
fstps
pop
push
outsl
add
mov
mov
pop
popa
push
or
pop
fiadds
xor
or
fwait
mov
cmovp
jg
loope
adc
orb
sbb
insl
sbb
inc
pop
mov
and
sarl
lret
loope
scas
jns
test
cld
decl
loope
mov
sub
cmpsb
idivb
mov
int3
fiadds
aad
mov
inc
fisttps
in
out
sub
popa
push
mov
mov
and
add
decl
inc
loopne
lods
mov
shll
hlt
and
pop
xchg
mov
inc
loope
incl
mov
int
negb
cmc
mov
mov
cli
fisubs
shrl
mov
lods
test
add
pushl
decl
pop
pop
sbb
xor
pop
or
das
aam
xlat
daa
cmpsl
shrl
add
lcall
xor
sahf
mov
test
dec
adc
clc
lret
sbb
jnp
pushl
mov
jp
jg
icebp
mov
fcmovnu
xor
repnz
jg
push
fsub
outsl
sub
out
add
and
push
mov
je
pop
decl
incb
mov
mov
data16
je
add
mov
in
cmc
jl
xor
decl
mov
xor
xchg
xor
test
cmp
mov
dec
xor
sub
fwait
push
lods
pop
xor
movsl
enter
jg
jo
xchg
test
aad
push
xchg
in
sbb
sub
adc
outsl
call
adc
jno
aad
out
xor
mov
out
cli
nop
jnp
mov
sub
lods
xchg
mov
pop
xchg
pop
rorl
push
call
outsl
mov
iret
les
dec
push
adc
lods
mov
cld
sbb
lea
xchg
pop
insl
adc
inc
imul
jne
mov
cmp
jge
mov
pop
mov
gs
dec
cmpsl
xor
dec
in
ss
mov
decl
imul
xor
xchg
pop
mov
jecxz
aaa
xor
xchg
xor
jbe
mov
mov
xchg
xor
sbb
dec
dec
inc
cs
clc
pop
inc
enter
iret
aaa
es
push
stos
lret
aaa
push
push
push
mov
xchg
xlat
call
aaa
push
xchg
fnstenv
lcall
ret
pop
xor
and
pop
lret
sbb
push
mov
jmp
aaa
inc
int
aaa
ds
and
ss
mov
jno
mov
int
imul
mov
icebp
ja
jns
jae
ljmp
stc
mov
add
xor
inc
xor
stc
mov
mov
mov
cs
ljmp
mov
or
push
adc
push
sbb
ficoml
push
xor
xor
sbb
sub
test
mov
bound
scas
incl
jnp
sub
dec
fs
idiv
fcomip
jmp
aaa
cmpsb
pop
mov
sahf
pop
stos
aaa
xchg
sub
insb
mov
aaa
mov
pushl
xor
jge
cmp
js
aaa
test
aaa
movb
arpl
pushl
mov
cmovns
cmp
cltd
dec
cmp
enter
pop
rorl
push
cmp
test
fcomp
dec
sbb
jo
mov
ret
outsl
sbbb
data16
dec
icebp
add
ds
mov
idiv
jecxz
out
fwait
lock
ljmp
sar
lcall
fisttpl
aas
xor
add
xor
xor
jl
mov
repz
xchg
inc
xor
and
xor
push
lds
adc
adc
and
lods
sbb
loope
fstpt
lock
cmpsl
cmp
call
xor
cmp
lds
cmp
lock
mov
mov
xchg
decb
mov
aas
jbe
cmp
jp
cmp
mov
aad
mov
leave
call
std
ss
adc
mov
sbb
push
xchg
lahf
shll
negb
pop
mov
and
out
clc
jmp
cmp
sbb
push
dec
movsb
mov
in
in
mov
and
cmp
shll
fsub
jne
in
imul
insl
aad
fnstcw
pop
sti
mov
push
push
or
aaa
fimuls
pop
cmc
stc
ret
das
mov
ret
es
popa
aad
adc
or
dec
push
push
sti
or
sbb
pop
popf
mov
data16
insb
clc
int
dec
fs
pop
xchg
mov
xor
cmp
mov
cmp
incb
mov
cmpsb
ss
insb
test
xchg
ret
xor
cmp
cltd
mov
push
ss
ss
cmp
jg
decb
stos
sbbb
js
ss
push
repnz
cltd
dec
movsl
push
cs
or
pushl
cmp
es
lcall
leavew
mov
lcall
cwtl
ss
stos
and
mov
ljmp
jmp
out
repnz
loope
cltd
dec
insb
clc
int
shl
jnp
push
or
adc
mov
movsl
mov
decl
outsl
ss
mov
xchg
pop
or
cld
sub
and
ss
in
sub
inc
fldz
mov
lods
jb
mov
ss
inc
loope
ds
outsb
or
xor
pop
mov
fdivs
fnsave
roll
daa
push
mov
inc
test
xchg
popa
xor
in
lds
insb
inc
scas
jne
mov
mov
outsl
aad
mov
xor
adc
mov
lods
lea
mov
rorl
mov
jg
or
push
mov
mov
test
mov
daa
scas
frstor
fldcw
insl
in
and
fbstp
in
mov
mov
ficoml
sbb
aam
mov
adc
mov
push
ds
or
movsl
add
std
mov
xor
icebp
ljmp
add
xor
pushl
cmp
mov
lea
mov
popf
dec
sub
dec
fisubs
lcall
lock
cmp
inc
mov
cmp
scas
mov
push
test
jg
stos
lods
insl
jo
fs
mov
imul
mov
popa
les
sbb
incl
lcall
pop
into
mov
pop
xorb
jle
mov
insb
inc
mov
lock
jmp
add
mov
cmpsl
jle
std
mov
ret
mov
fistps
mov
lcall
lods
rcrb
cmp
popf
nop
jle
add
rcll
mov
mov
pop
mov
in
repnz
hlt
xor
push
xchg
fbstp
lcall
fsubs
or
push
dec
mov
and
jno
mov
fstl
mov
xor
test
stos
in
stos
in
mov
inc
loop
ljmp
je
lods
inc
addb
lea
lods
jne
lcall
cmp
gs
shlb
stos
push
pop
mov
stos
add
call
dec
pop
dec
stos
mov
add
gs
mov
call
popf
pop
inc
mov
mov
push
xchg
adc
call
outsb
push
out
mov
pop
jge
sub
cmpb
test
stos
int
mov
stc
in
pushl
scas
aas
lods
in
int
in
movsl
mov
inc
cmpsl
stos
inc
iret
push
jg
xchg
add
mov
mov
enter
pushf
or
pop
movsb
idivl
add
stos
adc
in
pop
mov
insl
add
ljmp
mov
lds
test
adc
aam
mov
inc
cmp
loope
xor
xchg
xor
pop
xchg
xor
incl
mov
push
sub
mov
daa
push
xor
jmp
xor
and
sbb
shl
sarb
rcll
mov
pop
push
adc
cmp
xor
cli
mov
inc
out
sar
jg
aaa
imul
inc
enter
pushf
stc
dec
lcall
jmp
stos
mov
loop
fdivs
fcomip
mov
shlb
push
es
add
jmp
loop
mov
pop
movsb
jns
int3
mov
or
pusha
xor
incl
inc
pop
xor
xchg
cmp
inc
int
mov
jge
push
mov
les
mov
cmpsl
and
cmpsl
pop
mov
scas
aas
dec
mov
decl
push
lds
mov
shl
scas
icebp
rol
test
mov
lcall
pop
je
mov
or
imull
pushl
dec
popf
movzbl
sahf
mov
adc
xor
roll
mov
mov
dec
sti
cld
inc
dec
lods
les
sbb
scas
mov
in
lods
sbb
dec
pop
dec
fwait
adc
or
push
rcrl
jae
shrl
shll
and
stos
mov
in
xlat
cmp
out
inc
lea
cltd
sub
test
loop
mov
lret
mov
push
adc
cs
and
mov
sbb
mov
scas
add
mov
pushf
mov
call
aas
or
mov
testl
jnp
fdivs
shlb
sbb
dec
xchg
clc
sbb
mov
jg
in
jae
cmp
cli
lret
mov
xchg
cli
aad
ret
stc
dec
shr
repnz
adc
inc
scas
xchg
shrl
add
fdivs
jne
mov
popf
add
ljmp
xor
cmc
cmp
stos
cltd
sub
push
cld
jg
repnz
fdivrl
aas
inc
xor
adcl
lea
xor
incl
jmp
and
mov
sub
shrl
scas
imul
stos
out
push
cmp
pushf
fnstsw
mov
test
call
cld
inc
rcrb
nop
xor
das
mov
mov
xchg
mov
pop
lret
adc
outsl
sbb
inc
add
in
push
dec
movsb
loope
arpl
dec
out
and
popf
push
rolb
sahf
inc
rcr
sbb
lcall
push
stos
mov
lods
stos
mov
adc
ljmp
clc
cld
jns
es
scas
xlat
rol
inc
sub
and
decl
leave
mov
mov
cwtl
push
scas
scas
stos
mov
mov
lcall
out
jae
jge
push
popf
inc
mov
mov
mov
xchg
push
xchg
and
pushl
iret
jg
mov
jae
mov
jge
mov
imul
pop
data16
mov
fs
mov
outsb
xchg
adc
pushl
popa
pop
aas
movsb
ret
push
lret
mov
lea
inc
pop
mov
cmp
adc
in
and
push
push
xchg
inc
and
mov
mov
jg
sub
adc
or
test
scas
push
enter
sarb
xchg
shrl
mov
jecxz
add
inc
scas
xlat
add
jns
ljmp
push
adc
push
mov
adc
movsb
arpl
push
mov
imul
push
push
xchg
sbb
lcall
pushf
vunpckhps
pushl
pop
shlb
imul
dec
repnz
ret
jg
gs
imul
test
xor
test
mov
and
icebp
mov
mov
lcall
pop
add
decl
mov
movsl
cs
mov
mov
and
popa
push
scas
inc
cmpb
push
les
pop
dec
jo
scas
xor
sub
mov
mov
pop
pop
sbb
ljmp
test
dec
adc
lds
mov
cmp
and
jmp
mulb
jbe
clc
and
push
call
mov
mov
movsl
stc
pop
aam
insb
bound
shlb
lock
sub
pop
mov
mov
sti
clc
lds
stos
cld
pop
scas
push
push
cwtl
and
lcall
sarb
aad
lcall
daa
mov
fstpl
iret
enter
lds
mov
lret
shll
jge
xchg
mov
mov
inc
aaa
and
mov
xchg
fidivl
adc
mov
mov
int
pop
jne
imul
hlt
rcl
faddp
insl
sub
xchg
xor
les
jmp
les
sbb
les
adc
iret
les
push
arpl
mov
inc
dec
mov
dec
ds
ret
sbb
cmp
in
jno
decl
out
push
adc
movb
xor
pop
das
enter
std
decl
xor
aad
test
mov
cltd
ror
fwait
shll
rcrb
test
jp
push
scas
adc
movsl
mov
cmpsb
icebp
lcall
pop
stos
fld
jge
jnp
lds
pop
ret
loope
cmp
lods
pop
mov
xchg
push
les
fmulp
sub
cmp
ljmp
outsb
mov
mov
mov
mov
jmp
mov
out
decl
jecxz
mov
fstpl
mov
ret
dec
movsb
or
jmp
test
add
enter
in
int
icebp
pop
iret
ret
or
cmp
int
ss
mov
pop
std
aaa
in
sub
dec
testb
lcall
incl
mov
std
and
mov
leave
sub
imul
sub
jg
mov
mov
push
jl
mov
in
mov
xor
inc
mov
mov
inc
pusha
cwtl
stos
sbb
ljmp
xchg
and
insl
lret
jo
mov
mov
mov
lods
mov
test
lcall
mov
sbbl
sar
rol
int
lea
dec
pusha
ror
push
jbe
les
incl
lods
mov
pop
mov
ret
icebp
cmp
inc
testl
cmpsb
shrl
sbb
sub
das
ret
dec
shll
mov
adc
decl
inc
inc
add
fnsave
adc
in
mov
and
decl
pop
sub
lods
leave
daa
mov
mov
scas
lods
xor
gs
jle
mov
imul
insl
pop
test
pushl
test
cltd
push
aad
sbb
pop
gs
mov
mov
pop
mov
push
fcomp
test
push
pusha
pop
call
scas
aad
das
mov
jns
mov
and
lods
lahf
sbb
pop
xor
jmp
repnz
outsb
rcrb
mov
adc
mov
popa
outsl
mov
push
cld
ja
push
mov
pop
jno
insl
adc
aas
pop
popf
pop
arpl
mov
push
dec
jl
mov
dec
jbe
jmp
loope
or
push
jl
lds
es
dec
sub
les
xor
call
push
sbb
rcrl
mov
and
jg
xor
push
lods
loopne
jg
ss
lods
and
add
xchg
mov
std
in
mov
mov
into
mov
jns
cmpsb
mov
bound
cmc
mov
add
push
es
dec
shl
loop
mov
jg
mov
lea
icebp
pop
mov
or
push
mov
add
mov
add
sub
shrb
mov
jne
mov
je
add
add
and
mov
cld
mov
scas
xor
mov
push
ds
dec
ljmp
shl
adc
sbb
sub
or
pop
mov
sub
fildll
popa
in
ljmp
sbb
aaa
mov
jno
dec
scas
xchg
fcoms
lods
popf
rcrb
add
cmpsb
lods
lret
mov
shlb
mov
jo
movsb
cmp
movsl
ret
mov
pop
pushl
mov
fistl
cmp
xchg
inc
mov
test
fisttps
pushf
mov
sbb
je
jg
test
lahf
mov
ss
fwait
call
pushf
and
incl
sub
stos
lds
lahf
ret
les
and
pop
imul
sar
rol
adc
aaa
cld
sbb
mov
leave
mov
shrl
xchg
mov
and
imul
sub
incl
cmp
xchg
mov
jg
lds
jmp
test
push
push
iret
or
aaa
out
clc
fwait
lret
mov
scas
push
rolb
dec
shlb
pop
leave
add
mov
es
xor
and
leave
xchg
sbb
stos
mov
push
pop
mov
incl
push
mov
and
ret
mov
mov
cmp
clc
pop
xor
shll
add
xchg
dec
mov
enter
pop
gs
push
xlat
sti
rcll
push
mov
cld
call
loopne
addr16
int
mov
mov
jnp
cwtl
mov
inc
jbe
inc
stos
lods
testl
into
mov
push
jle
sub
dec
lock
inc
out
jae
loopne
jg
test
xorb
xchg
jmp
test
jno
mov
or
mov
mov
sub
mov
fs
popa
push
lcall
push
jbe
je
mov
push
rcl
outsb
mov
and
enter
mov
je
aas
jg
add
mov
mov
and
mov
nop
les
std
sub
stos
mov
sbb
lret
lods
xchg
mov
pop
ljmp
mov
xchg
sbb
mov
xchg
cmp
idiv
pushl
push
dec
mov
inc
xor
mov
sarl
lcall
dec
mov
sbb
movsb
xor
lcall
mov
arpl
mov
inc
insl
cmc
mov
jno
mov
pop
jo
jmp
mov
imul
push
pusha
mov
push
pop
icebp
jg
pop
out
mov
cmp
mov
inc
dec
inc
fwait
mov
or
xchg
aam
jns
scas
add
cmc
je
pop
cld
pushl
out
jae
fmulp
aas
shll
mov
fbld
movsl
cmp
mov
mov
rcll
stos
adc
jle
iret
stos
xchg
insl
ud1
gs
mov
mov
mov
mov
push
dec
mov
sub
aas
aad
pop
std
jmp
mov
imul
and
lds
lods
xchg
clc
jmp
mov
test
pop
out
das
out
mov
push
dec
pop
mov
push
and
mov
jbe
cmp
dec
enter
iret
loope
mov
pushl
jmp
outsl
lods
repz
add
cmp
in
mov
in
pop
mov
pop
fs
inc
cmpsb
mov
fwait
inc
fidivl
decl
xlat
push
out
test
push
loop
lods
inc
cld
lods
or
scas
iret
inc
scas
cs
fsubs
cs
mov
jg
repnz
rcr
sar
test
jecxz
fadd
pop
mov
decl
cs
stos
jecxz
dec
lods
mov
mov
mov
sub
stos
jnp
ret
push
stos
pop
xchg
daa
jl
mov
xchg
mov
decb
inc
and
pushl
cld
clc
mov
int
mov
fcomps
imul
test
mov
lcall
pushf
or
adc
pop
mov
stos
dec
divl
xor
sbb
addr16
xor
mov
adc
mov
ds
jo
sub
and
jno
jg
outsl
inc
mov
push
mov
icebp
and
xor
loop
pop
mov
cs
decl
ret
or
mov
mov
dec
pop
mov
jmp
mov
push
dec
test
stc
adc
push
sub
es
mov
call
push
test
mov
pop
sub
dec
fld
xchg
into
out
gs
rcll
adc
pop
rorb
or
push
lods
mov
popa
xchg
stos
repz
fistpl
fs
push
in
jae
dec
out
inc
rcr
arpl
mov
add
dec
mov
mov
mov
mov
mov
sti
mov
mov
into
mov
xchg
sub
shr
mov
pop
xlat
xchg
mov
and
mov
movsb
add
jbe
pop
clc
adc
add
lcall
int
scas
lods
xlat
or
mov
push
or
popa
adc
mov
sbb
fildll
adc
les
jecxz
sub
or
lods
push
push
das
ljmp
push
pop
cmpsb
cmp
mov
or
decl
ds
jne
pop
lds
hlt
mov
pop
add
stos
es
bound
clc
pushl
xchg
cmp
dec
xor
mov
dec
outsl
cld
mov
add
js
adc
jmp
lods
sub
mov
adcb
dec
sbb
int3
test
mov
mov
xchg
push
fwait
clc
call
pushf
or
or
xchg
movsb
aam
incl
cmc
pop
sub
std
pop
cs
xchg
sub
movsb
leave
push
decl
rorl
rclb
les
sbb
stos
js
lds
jg
push
das
lret
push
or
cmpsl
pop
pop
std
roll
pop
sbb
xchg
or
shll
fiadds
mov
push
jne
sub
shrl
iret
mov
adc
mov
sbb
mov
adc
dec
inc
cld
jg
fldenv
jmp
and
iret
lods
mov
pop
cmc
mov
xchg
insb
mov
cmpsb
cmp
inc
mov
stc
popa
mov
sub
popf
shrb
dec
pop
ret
rol
mov
xor
mov
out
pusha
mov
cmp
lds
pop
mov
xor
out
sub
lods
subl
fnstenv
jnp
rorl
mov
mov
mov
in
addr16
pushl
movsl
dec
mov
pop
add
mov
fisttps
add
add
lea
repz
mov
jnp
test
and
mov
jg
rcrl
sub
xchg
jl
cmpsb
mov
push
sar
cmpsb
lds
scas
enter
jp
mov
incl
sub
pop
or
out
mov
mov
repnz
lcall
clc
mov
in
xchg
fildl
scas
add
jmp
sub
cs
cld
jmp
paddq
sti
notb
scas
mov
dec
mov
clc
fldcw
test
stos
push
scas
pop
xor
movsl
jns
inc
pushf
leave
mov
inc
inc
mov
cmp
bound
icebp
dec
into
fwait
in
insb
stos
pop
push
push
test
push
inc
loop
jg
and
leave
mov
ret
xor
or
push
fwait
sub
fwait
call
or
cltd
call
in
repnz
mov
sahf
in
mov
mov
call
loop
push
loope
mov
fidivrs
popf
fldcw
mov
push
flds
mov
loope
mov
add
mov
or
lods
stos
pusha
in
stos
movl
mov
dec
xor
mov
xchg
inc
inc
pop
mov
mov
cld
mov
xchg
pushl
out
out
ss
jmp
scas
fucomi
hlt
mov
das
or
stos
inc
imul
xchg
lcall
mov
xchg
int3
sub
mov
call
dec
test
daa
push
pushf
mov
cmp
mov
lcall
les
arpl
les
jo
fildll
movb
daa
addb
es
lcall
push
xchg
mov
and
mov
adc
dec
mov
xchg
sub
decl
pushf
popf
mov
mov
pop
mov
xchg
cmc
cmp
popa
lods
pop
mov
loop
mov
das
xchg
rcl
mov
cmp
int3
aas
lods
mov
leave
stos
ja
adc
movsl
push
inc
mov
xor
incl
mov
mov
mov
inc
sub
popf
inc
jl
lahf
xor
pushl
std
andb
pusha
movsb
or
scas
addl
scas
scas
call
cld
jmp
mov
out
jecxz
scas
shr
mov
scas
cli
scas
out
pop
test
je
test
test
push
pusha
repnz
push
pop
sbb
aad
lods
aaa
jge
scas
sti
sub
and
mov
or
ljmp
adc
xchg
fwait
mov
xchg
lret
adc
push
out
sbb
jecxz
adc
rcrl
enter
pop
push
lods
xchg
add
xchg
fildll
or
inc
push
rol
add
inc
lds
lods
lret
stc
incl
ds
lock
mov
in
mov
mov
inc
mov
aas
in
iret
mov
loope
xor
fildll
jge
ds
pushl
pop
sub
mov
mov
inc
aas
mov
cmp
cmp
call
std
jmp
mov
stos
mov
inc
clc
mov
fsubrl
mov
xlat
roll
pop
fiaddl
movsb
lods
out
xchg
and
push
push
movsb
imul
outsl
decl
mov
scas
daa
xchg
inc
scas
cmc
lea
stos
sbb
xlat
jbe
lods
arpl
push
sar
jge
lods
jns
lea
lcall
movsl
scas
xchg
add
stos
push
stos
adc
cmpb
jne
ret
movsl
gs
frstor
mov
lcall
mov
pusha
imul
xchg
sbb
iret
cwtl
sahf
jmp
pop
ret
out
inc
ss
sbb
jg
or
mov
add
ret
mov
movsb
stc
jp
mov
test
js
mov
jnp
movsl
or
sbb
mov
sbb
fnsave
mov
mov
in
enter
jmp
scas
scas
lods
mov
ret
sti
push
outsb
test
scas
mov
aaa
xchg
sbb
pop
cltd
dec
shl
ss
in
ljmp
mov
incl
mov
idivl
movsl
lahf
je
stos
daa
jb
inc
stos
out
outsb
enter
mov
mov
popa
dec
lods
iret
pop
nop
stos
mov
jp
fists
mov
adc
push
mov
jg
xchg
stos
xchg
movsl
arpl
lods
ja
or
ljmp
mov
outsl
jae
mov
aas
es
jne
stos
stos
mov
or
ljmp
test
arpl
out
in
mov
imul
pop
mov
mov
pop
leave
mov
decb
pop
sbb
mov
fdivr
call
push
xchg
mov
cli
xchg
leave
cmp
pop
les
jge
in
mov
fidivrl
mov
fbld
icebp
fldt
mov
ja
jecxz
xchg
rclb
jg
mov
push
lods
and
lcall
ret
test
xlat
mov
mov
call
inc
mov
adc
sbb
stos
arpl
sbb
dec
fcmovne
mov
fcomps
fsubl
mov
mov
mov
mov
add
mov
push
pop
movsb
jae
or
mov
je
mov
sbb
movsb
inc
lods
imull
arpl
call
lods
lret
lods
add
scas
daa
cmpsb
inc
scas
loope
jnp
lds
pop
scas
dec
mov
or
pushl
stos
pop
mov
insl
scas
repz
insl
bound
xlat
scas
adc
negl
fwait
arpl
jno
lcall
and
movsl
std
test
daa
and
push
daa
pop
mov
cmpb
ret
mov
scas
shl
xor
ss
mov
loopne
ret
mov
xor
xor
clc
sbb
jecxz
aas
ret
mov
mov
mov
mov
jmp
sbb
xor
mov
xorb
ljmp
das
jmp
lods
insl
lock
scas
sbb
xchg
lods
sti
fildll
incl
lods
sub
push
mov
add
scas
adc
lret
movsl
mov
call
push
ds
les
dec
hlt
jns
and
mov
push
sub
fistps
enter
push
data16
mov
mov
jp
xorl
mov
xchg
and
cs
sub
mov
ds
fs
jbe
or
out
fcoms
jo,pn
adc
ljmp
pop
pop
or
movsl
subl
lcall
test
in
es
in
sahf
rorb
sar
mov
mov
lods
fists
mov
mov
add
jmp
out
xor
mull
mov
mov
jmp
pop
add
decl
mov
xor
leave
mov
mov
test
aaa
cld
mov
dec
push
in
mov
bound
stos
dec
in
ja
cmpsl
ror
data16
xor
push
aaa
inc
sar
cmp
mov
lcall
mov
jl
stos
iret
mov
fsubl
jp
cld
sarb
imul
lcall
gs
int3
lahf
lods
ror
lahf
aad
cwtl
lahf
mov
test
incl
mov
movsl
stos
jl
insl
jo
mov
pushl
pop
jbe
test
mov
mov
add
in
sub
icebp
call
cmpsl
mov
pop
dec
test
imul
test
mov
movsb
lahf
cmp
movsl
clc
decl
inc
pop
cmpsb
pop
cltd
nop
and
mov
inc
push
test
jmp
es
push
push
fstpt
sti
or
mov
mov
pop
cld
incl
cmpsl
adc
addr16
jmp
dec
cld
cmp
imul
xor
stos
xchg
add
cmp
sahf
jecxz
jge
push
jecxz
mov
int3
incb
mov
push
out
push
jnp
sub
int
daa
pop
mov
xchg
gs
daa
xchg
roll
loope
test
lods
xchg
mov
lret
xchg
std
jg
aam
xchg
fists
frstor
ret
xchg
int
fstl
sti
cmp
cmp
scas
pop
sbb
or
mov
testl
ljmp
mov
adc
mov
in
das
mov
inc
adc
lcall
dec
xchg
lods
or
pop
scas
or
out
movsl
cmc
or
incl
rorb
add
or
into
or
mov
iret
incl
sbb
push
psubsb
xchg
in
cmpsl
add
jne
daa
and
out
fldenv
jne
lahf
fcomip
call
push
inc
mov
or
xchg
popf
dec
inc
xchg
in
mov
sub
cli
icebp
xchg
xor
xchg
lds
mov
adc
decl
xchg
movsl
sbb
and
xchg
mov
mov
push
cwtl
aad
shlb
push
frstor
xlat
and
fldenv
sub
call
and
movsl
and
inc
lahf
and
inc
mov
and
dec
lods
and
push
cmpsl
and
dec
test
ret
jmp
sub
jecxz
sub
out
sub
jmp
sub
cmp
dec
lcall
mov
xlat
cmp
sub
filds
cs
and
incl
add
pop
or
and
or
mov
pop
sub
or
or
and
add
mov
out
popf
nop
and
cltd
mov
xchg
pushf
mov
push
pusha
cld
pop
int
xchg
movsl
mov
mov
mov
mov
and
int
fbstp
hlt
and
out
and
pop
lock
pop
ljmp
jb
push
and
outsb
clc
and
push
and
les
cmpb
pop
jp
and
je
and
nop
inc
and
mov
and
mov
and
test
and
and
cmpsb
sbb
sub
adc
sub
xor
mov
xchg
sub
push
sub
sub
cmp
sbb
incl
push
pop
sub
dec
mov
inc
mov
out
decl
mov
push
fldcw
daa
dec
icebp
mov
push
in
mov
daa
test
push
in
sub
add
sub
jnp
push
or
daa
inc
testb
subl
xchg
daa
outsb
cmpsl
paddd
push
cltd
int
adc
mov
sbb
scas
enter
iret
fisttpl
inc
jmp
int3
in
and
mov
and
mov
and
fwait
int
jne
push
imul
fldcw
push
jns
jae
inc
decb
aas
test
cmp
mov
dec
jle
incb
daa
cmpsb
mov
rclb
sahf
cs
daa
and
into
pushl
filds
daa
xchg
jle
shll
jbe
or
inc
movsl
daa
out
mov
cld
add
cmpsl
daa
push
lods
daa
cmp
mov
cmp
mov
insb
push
out
jecxz
out
sub
ss
xor
data16
cmp
cmp
mov
daa
cs
add
stc
daa
push
test
addl
std
add
cwtl
dec
popa
fwait
shld
ret
insb
push
push
idiv
push
cltd
lcall
mov
lret
pop
data16
insb
shlb
insb
mov
cmpsb
xor
ret
data16
outsb
call
idiv
push
pop
cli
xor
fwait
int
bound
mov
daa
pop
mov
idiv
push
js
jl
daa
ss
adc
xor
sub
int3
out
test
incb
sbb
push
cmp
and
inc
es
and
int
mov
sbb
xor
cmp
and
aaa
inc
mov
out
in
es
es
in
test
sub
es
push
es
fnstcw
mul
jg
mov
insb
incb
jp
mov
mov
lea
fwait
int
incb
mov
ds
adc
mov
insb
cmpsl
pop
fwait
sbb
ss
int
xchg
in
jecxz
fxch
out
mov
insb
mov
loope
outsl
fwait
int
mov
insb
jne
jae
imul
insb
ss
jnp
jno
aas
mov
fwait
int
nop
inc
test
mov
dec
jbe
arpl
jle
mulb
cmpsb
decl
sahf
xor
es
out
es
mulb
xchg
fdivr
in
jmp
jbe
sahf
es
lret
mov
es
movsb
es
push
push
mov
stos
es
ret
mov
cs
imul
outsl
xor
push
arpl
push
and
cmp
push
pop
cmp
incl
and
mov
and
add
pop
addl
lea
and
fsin
incl
or
orl
outsb
sub
xchg
ss
int
sub
fwait
and
ss
dec
popa
inc
arpl
dec
addr16
data16
imul
data16
insb
out
repnz
out
neg
clc
pop
lcall
cld
fidivrs
es
ret
inc
adc
es
or
clc
enter
int
ss
into
pushl
test
and
mov
and
cwtl
pop
and
mov
sar
pushf
pop
and
and
shlb
call
int
and
mov
sub
mov
mov
mov
es
push
jno
and
insl
mov
dec
pop
mov
and
popa
mov
decb
orl
jmp
pop
xchg
test
push
arpl
and
mov
ds
push
ss
int
and
adc
dec
adc
push
inc
sbb
sbb
fldcw
aaa
push
xor
xor
data16
int3
sub
or
and
pop
ljmp
pop
out
adc
adc
je
fldcw
jbe
js
jp
jnp
jge
aas
lock
in
inc
call
fsubr
inc
fimuls
dec
dec
jmp
dec
into
lret
ror
and
lret
into
mov
loopne
jle
pushl
pushf
and
stos
cwtl
and
cmpsb
xchg
and
mov
mov
mov
insb
push
cld
xchg
scas
and
sub
int
mov
inc
jg
jnp
ja
jae
insb
ss
jmp
outsl
cli
and
clc
and
mulb
push
imul
push
pop
or
mov
push
mov
mov
insb
ss
movsl
cmp
lahf
int
mov
cmp
cs
xor
push
sub
insb
ss
jne
jae
jno
outsl
sbb
incb
jmp
jmp
mov
ss
add
add
cli
mov
int
repnz
loopne
pop
mov
insb
aam
fmul
int3
dec
rorb
int
mov
inc
enter
shlb
mov
insb
ss
sbb
test
xor
out
lea
and
test
and
ret
and
add
and
jns
jmp
fsin
insl
jnp
jns
ja
xchg
and
loope
adc
inc
xchg
and
dec
mov
push
or
push
or
pop
and
mov
insb
imul
fnsave
fnstenv
fwait
int
jnp
xor
repz
mov
data16
insb
nop
insl
xchg
imul
fwait
int
test
mov
mov
insb
ss
mov
push
push
or
push
cwtl
idiv
mov
ror
and
lret
xchg
loop
jmp
into
ret
xchg
loopne
jbe
lcall
imull
stos
adc
lcall
and
mov
scas
and
call
loopne
push
adc
sbb
adc
pop
inc
adc
and
incl
push
daa
aas
adc
sub
imulb
sti
or
xor
or
aaa
testl
adc
popa
insb
mov
call
inc
pop
push
adc
pop
adc
push
or
push
decb
dec
mov
data16
inc
mov
cmp
sbbb
pop
cs
sub
jae
mov
insb
and
outsl
sbb
jmp
out
adc
sbb
mov
push
or
sbb
push
add
push
sbb
cli
add
div
mov
and
mov
pop
ljmp
loopne
lcall
fcom
aam
rorb
cmpsb
int3
inc
adc
enter
call
les
into
shlb
mov
push
jbe
sbb
mov
adc
lods
add
call
adc
test
adc
movsl
xor
mov
das
adc
decl
hlt
mov
stos
adc
xchg
lods
adc
lea
adc
test
adc
lds
push
jge
mov
adc
jne
adc
jno
adc
insl
ja
pop
imul
ljmp
xor
nop
adc
dec
xchg
adc
dec
mov
outsb
push
or
push
pop
pop
or
addr16
dec
pusha
imul
scas
js
or
je
or
jg
or
jl
xchg
push
or
xchg
or
sub
mov
mov
cwtl
insl
xchg
fldcw
addr16
subl
insl
mov
subl
insb
ss
ret
push
lret
push
std
mov
nop
clc
andb
loopne,pn
mov
popa
popa
jmp
call
or
fstpt
adc
mov
lcall
dec
sub
ds
adc
push
pop
xchg
xor
xor
push
push
fidivrl
dec
cmpsl
adc
lcall
push
push
xor
adc
mov
add
aam
push
repnz
rcll
pop
jl
scas
xor
aaa
hlt
jecxz
pop
xchg
cmc
and
mov
pop
rclb
inc
dec
sub
jae
dec
adc
aad
movsl
pop
mov
push
cmp
outsl
push
out
and
and
ret
dec
push
fisubrl
jmp
adc
xchg
push
repnz
add
enter
push
js
jle
pushl
sub
or
adc
sarb
fs
test
xor
scas
and
dec
sti
insb
call
icebp
add
cltd
pusha
into
jmp
flds
decl
lret
icebp
rorb
mov
mov
xchg
add
fcoml
cmc
pop
or
nop
lods
int3
inc
sbb
ljmp
add
in
jns
xchg
lea
call
js
push
fistps
sbb
dec
stos
dec
push
push
mov
sbb
dec
dec
dec
pop
popf
adc
subb
mov
dec
xor
cmpsb
mov
lcall
mov
pop
pop
inc
cmc
dec
arpl
call
ljmp
xchg
mov
or
shl
inc
cli
mov
orl
push
mov
adc
pop
pop
pop
push
lahf
fs
sub
test
cmp
clc
push
mov
push
mov
dec
data16
jb
xchg
daa
call
or
aaa
adc
adc
xor
mov
jg
test
jl
bound
jp
add
add
push
arpl
dec
jecxz
ljmp
stos
pop
cmpsb
xchg
hlt
lods
daa
xor
pop
pop
scas
cld
out
fdivrl
add
iret
inc
cltd
xchg
xsave
push
dec
mov
dec
jae
xchg
shl
mov
mov
mov
aam
int
cmpsl
or
rclb
push
and
xor
push
imul
movsl
fcmovnu
push
pmulhw
push
mov
sub
faddl
or
jo
push
inc
mov
scas
cli
and
jge
sti
std
inc
int3
aad
lcall
jle
mov
push
cld
shrl
add
mov
cld
cmpsl
fistpll
cli
int
sub
xor
ljmp
lea
dec
inc
sbb
cmpsb
fistpl
in
hlt
cs
sub
fistl
stos
jmp
cmp
adc
adcb
inc
xchg
lods
rcl
cmpsb
add
cltd
pop
cmp
inc
fdivrs
out
mov
mov
addr16
cmpsl
nop
cli
push
loop
fnstsw
pop
add
pop
pusha
lds
and
shlb
pusha
clc
stos
pop
inc
push
in
jmp
xchg
hlt
in
mov
clc
inc
enter
cltd
pop
test
mov
dec
jbe
addr16
mov
dec
mov
es
push
push
xchg
ret
push
mov
lcall
and
pop
cmp
sub
sbb
pushf
dec
sub
scas
call
ljmp
outsl
out
sub
push
out
sub
popf
mov
pop
cmp
in
pop
pop
inc
push
xchg
dec
add
mov
imul
lcall
fdivr
mov
daa
xchg
fldl
nop
push
xchg
fdivr
sub
mov
fildll
push
sbb
incl
in
inc
ret
mov
xlat
data16
mov
rol
push
in
sbb
mov
sti
out
decl
jbe
sbb
mov
pop
inc
cmpsl
add
bound
stc
cs
jg
ljmp
hlt
inc
into
repz
mov
mov
in
iret
rcr
mov
test
jecxz
ljmp
js
mov
je
or
jge
mov
decl
cmp
ret
mov
push
lock
fisubl
into
push
fcoml
loope
mov
push
lahf
dec
push
into
xchg
mov
adc
or
lods
inc
je
out
push
and
fdivrp
pushl
cld
cmp
pusha
in
xabort
lcall
mov
dec
lret
ret
mov
cld
xor
jno
outsb
mov
out
ucomiss
sub
jecxz
das
mul
aad
js
and
leave
and
cwtl
push
sar
mov
cmp
push
hlt
mov
mov
fdivrs
inc
ret
ja
mov
lcall
xor
pop
inc
push
sbb
jg
call
jmp
mov
or
xchg
jle
sbb
mov
jp
sbb
hlt
and
fwait
jb
cmp
inc
inc
int
adc
outsl
filds
dec
push
clc
or
aam
pop
cs
shll
jmp
out
testb
outsb
lock
in
scas
sarl
cli
mov
push
dec
shll
test
lock
mov
xor
sbb
into
notl
xor
push
xor
mov
and
jp
adc
add
call
rcr
mov
dec
jnp
in
lret
data16
scas
cld
movsl
in
lret
cmp
cmpsb
jg
ljmp
cmpsb
and
hlt
fcmovnb
sarl
mov
inc
lods
mov
adc
in
jl
dec
notl
sar
lcall
dec
fcmovnbe
sbb
ja
sti
data16
push
add
lret
in
jg
mov
clc
jg
jo
cwtl
cmc
testb
lcall
jb
imul
dec
subl
inc
ss
test
jp
inc
stc
imul
xchg
mov
fld
fidivs
cli
pusha
cmpsl
arpl
xor
ljmp
clc
mov
jns
mov
sub
push
sub
out
mov
cmpsl
call
pushf
loop
lods
pop
insl
les
jae
aas
mov
insl
inc
lea
mov
mov
sub
xchg
and
bound
call
std
decl
lret
and
lret
mov
xchg
pop
arpl
pop
idivb
jne
clc
mov
sbb
popa
pop
jg
popa
cld
xchg
adcl
gs
or
lcall
jmp
mov
clc
sub
les
out
add
pop
add
xchg
test
xor
cwtl
pop
fildll
call
aaa
aaa
jnp
mov
inc
fstpl
aam
pop
adc
scas
sarb
or
ljmp
repz
mov
imul
push
repnz
in
jno
mov
lock
call
aam
pushf
call
lret
mov
mov
mov
je
std
ljmp
jb
mov
test
bound
push
lcall
xchg
lea
sbb
outsl
imul
dec
mov
xchg
bnd
adc
orl
mov
cmpsb
ljmp
clc
push
ficomps
dec
ss
mov
mov
jnp
inc
inc
jbe
sub
cli
sti
rcrb
cmpsb
xchg
sub
dec
cltd
fcoms
pop
xor
push
fcomi
js
pop
sbb
icebp
xorl
mov
adc
pop
mov
cmp
xor
mov
out
test
test
xchg
enter
inc
pop
pop
out
jg
ror
leave
aas
aas
lahf
mov
ljmp
or
dec
sub
fstps
xchg
and
subb
incl
shl
in
in
aaa
mov
sub
mov
mov
fildl
lcall
add
subb
lret
notb
and
out
mov
arpl
adc
jl
out
or
aam
jmp
ds
cmp
aam
cmpl
nop
clc
lcall
clc
rclb
mov
dec
loope
js
pushl
dec
push
xchg
xchg
sub
es
xchg
test
cmp
and
jmp
inc
cld
and
lret
aaa
into
loopne
push
call
shll
stos
call
fcomp
push
inc
cltd
out
adc
push
das
ljmp
incl
fldl
int
pop
imul
fistpl
es
call
cmp
dec
inc
cmc
aad
popa
mov
jle
jns
and
lock
sub
icebp
xchg
pop
ds
outsl
xor
pop
dec
dec
ja
pop
std
insb
sub
xor
inc
sarl
cmp
cmc
shrb
push
add
mov
cli
mov
test
lock
xor
rorl
lret
push
cwtl
lcall
xorb
bound
jecxz
outsb
das
stos
decl
pop
cmp
mov
jmp
outsl
or
jmp
hlt
dec
push
mov
ret
mov
jmp
xorl
mov
jge
das
cli
call
lods
popa
in
jbe
cmp
loope
repz
into
jl
xchg
dec
push
hlt
loop
ss
cmp
imul
sub
ljmp
and
decb
xchg
ficoms
jne
add
decl
add
out
or
jle
enter
mov
sbb
sarb
out
clc
jmp
xchg
mov
inc
mov
out
or
movsl
add
fbld
stos
push
nop
clc
mov
icebp
outsl
dec
cmp
test
xor
decl
or
push
cmp
call
scas
add
dec
cli
xchg
sti
mov
ljmp
sub
daa
push
sbb
push
jl
popf
leave
inc
es
pop
cmp
push
xor
jp
push
dec
push
pop
subb
jmp
mov
and
xchg
jnp
and
push
arpl
rcll
mov
jmp
test
aad
mov
int3
xchg
jbe
sub
out
clc
fisttpll
jne
pop
mov
inc
pop
lods
js
icebp
mov
jno
test
filds
notb
popa
mov
pop
mov
pop
mov
adc
jmp
aaa
cmp
aam
pop
decl
jecxz
stos
arpl
xchg
incb
outsl
in
or
jle
mov
and
mov
cmp
ret
bound
cmc
push
movsl
enter
xor
jmp
imul
sub
sbb
ret
push
xchg
in
ljmp
ds
lret
sti
hlt
xor
lret
cmpsb
icebp
fbld
push
jmp
pop
xchg
ret
sub
imul
in
incl
ds
gs
arpl
or
xchg
pop
repnz
rcll
lahf
cmpsl
or
aas
decl
dec
pop
lods
insb
cmp
scas
sbb
dec
orl
in
mov
push
jo
dec
mov
inc
inc
cmp
pop
in
dec
cmpsl
inc
push
fldcw
mov
shll
sbb
mov
faddl
sbb
dec
and
repnz
dec
es
sub
addl
fidivrs
jl
pop
cmpsl
cld
sti
pop
xor
jecxz
mov
out
loop
mov
call
dec
push
notb
enter
and
xchg
sbb
pushf
stos
je
outsl
mov
sbb
loopne
jb
inc
mov
ljmp
jmp
popf
gs
jnp
jmp
imul
nop
bsr
adc
add
js
adc
push
add
cmpsl
adc
mov
dec
xor
cmpl
call
xchg
jo
fmull
inc
ret
out
jbe
loopne
adc
jno
xchg
shll
outsb
push
insl
out
int
push
clc
mov
les
aad
cli
xchg
push
jbe
cmp
xor
sti
xor
in
arpl
mov
jnp
aad
les
es
and
jg
popa
iret
dec
dec
add
jae
push
loope
mov
aas
jg
pushf
xor
test
add
inc
aam
add
jle
push
ffreep
sbb
mov
push
out
mov
fwait
ljmp
push
addr16
ss
xor
inc
ljmp
lea
fisubl
xchg
push
mov
jle
jb
jo
insb
jmp
xlat
test
and
out
ss
aad
adc
jb
cli
shrb
clc
pushl
sbb
int3
mov
inc
test
ret
push
adc
mov
lock
jg
push
sub
addr16
dec
icebp
cmovo
pop
ja
mov
les
dec
push
cmc
cmp
clc
lcall
mov
leave
lock
test
jmp
test
sbb
mov
sbb
ret
xchg
mov
test
xchg
fstpl
xor
sub
cltd
call
xchg
push
lret
gs
std
add
xlat
pusha
mov
addr16
dec
adc
cmp
mov
xor
scas
mov
imul
cmp
repz
stos
push
pushf
lods
pop
pop
outsb
mov
mov
xor
mov
jbe
mov
mov
jp
sbb
dec
aas
push
ss
ret
push
inc
ret
xchg
movsb
cltd
push
or
mov
lock
dec
mov
bound
lds
sahf
outsb
mov
pusha
push
pop
push
stc
jbe
jbe
mov
jns
add
or
ja
jmp
pop
bound
mov
jno
wrmsr
xchg
in
jae
adc
pushl
mov
rorb
js
xor
dec
dec
push
int
xchg
in
add
incl
jmp
popa
cmpsl
mov
adc
inc
inc
lds
jl
jns
push
call
and
sub
cmp
jp
aaa
mov
mov
jmp
sar
ret
in
xchg
pop
in
lods
mov
in
shll
dec
or
decl
mov
inc
mov
and
and
es
mov
insb
jmp
movsl
aaa
lret
lods
clc
call
scas
adc
adc
or
sahf
mov
test
call
ss
clc
les
add
ret
or
adc
pushl
inc
aaa
cmp
mov
rcrl
ret
test
inc
sub
lcall
in
xorb
ja
cmp
fldenv
scas
repnz
and
jge
xor
incl
cwtl
orb
loope
mov
aad
xchg
add
add
movsl
decl
aad
jnp
sbb
icebp
lret
in
xor
jmp
mov
inc
ja
stos
pop
sahf
inc
lock
loopne
sub
cld
xchg
sbb
cwtl
xor
ja
icebp
lcall
dec
cwtl
push
pop
jp
dec
and
xorb
jecxz
sub
xchg
out
lock
bound
pop
mov
cmp
addr16
mov
add
and
mov
decl
adc
inc
aam
jle
ds
dec
dec
dec
jl
loopne
push
mov
or
decl
outsb
pop
into
mov
daa
arpl
rclb
fnop
std
rcrl
incl
cmc
jge
sub
cltd
enter
or
pop
push
xchg
roll
test
add
sbb
jmp
clc
pushf
mov
jg
add
and
pop
adc
adc
dec
push
call
cltd
push
popa
xchg
loopne
mov
icebp
inc
fstpt
pop
jmp
out
jmp
ds
cmpsb
sets
stos
outsb
add
fistps
cli
ss
mov
testl
sub
mov
mov
nop
dec
pop
cmp
sub
icebp
scas
mul
shlb
push
std
or
ljmp
pop
loop
jo
xlat
vmovd
add
pop
std
cmp
rcrl
hlt
jnp
xor
mov
movsb
loopne
inc
decl
lahf
or
mov
mov
adcl
jns
call
rolb
sbb
pusha
sbb
test
inc
scas
xor
in
test
stc
scas
push
ret
ds
sbb
test
leave
std
xchg
xor
xor
gs
mov
nop
in
mov
and
mov
jo
pushf
incb
jno
rolb
js
icebp
inc
dec
and
aaa
mov
test
xor
fwait
pop
jb
fwait
out
aas
pop
outsl
pop
xchg
sbb
xor
scas
imul
pushl
lods
lahf
rcrl
int3
xor
sbb
repnz
cld
negl
xchg
push
call
fildll
mov
data16
mov
or
mov
pushl
cld
lea
mov
lcall
dec
and
loop
call
je
inc
leave
out
lods
lcall
outsb
mov
sub
push
sbb
leave
lea
call
aad
pop
jecxz
lea
loope
shlb
mov
es
dec
repnz
aad
mov
aas
gs
xlat
cmp
push
xlat
mov
out
sbb
push
adc
insb
mov
adc
mov
xor
mov
fadd
test
lods
sbb
lds
sarb
mov
jl
adc
add
mov
test
jecxz
fcomip
shrb
lock
not
mov
dec
pop
mov
aaa
pop
out
inc
rcr
scas
mov
xorl
jle
scas
xchg
push
shlb
decl
push
test
cli
mov
or
cmp
add
scas
dec
ficoms
std
out
xchg
mov
pop
pop
lret
dec
inc
test
pop
sub
inc
mov
or
imul
lahf
decl
fs
dec
cmp
xchg
or
popf
dec
xchg
mov
call
or
dec
push
les
and
fld
xchg
dec
mov
call
hlt
jo
mov
aam
dec
push
in
aad
fs
out
repz
outsb
les
mov
pop
shl
lds
push
and
jmp
fmull
dec
sub
jns
mov
mov
mov
dec
pop
adc
shl
ffreep
or
dec
pop
loope
push
ljmp
xchg
cmc
pusha
mov
xchg
adc
push
icebp
pop
repnz
sar
addb
incl
repz
pushf
ljmp
fiadds
nop
cmp
les
std
call
cmp
cwtl
adc
fs
rcrl
outsb
dec
mov
pushl
pop
sub
loop
pop
mov
mov
push
mov
loope
pop
ds
sub
ljmp
andl
sbb
jns
jge
icebp
lcall
in
ret
mov
subb
push
adc
test
mov
cltd
ljmp
and
cwtl
add
cmp
fistps
clc
dec
outsl
daa
outsb
ss
xchg
pop
push
test
call
std
mov
xchg
and
mov
sub
dec
std
mov
icebp
pushl
mulb
lods
cmp
in
lret
icebp
pop
fisubrl
mov
js
decl
lret
lods
out
shl
roll
lsl
mov
mov
jg
fldenv
fcmovbe
mov
lahf
out
mov
pop
mov
cmp
ljmp
mov
clc
lcall
dec
and
inc
push
pop
scas
inc
mov
dec
push
sub
cli
ljmp
sarl
jb
add
daa
mov
sub
call
insb
lar
xchg
pop
and
sub
mov
adc
iret
fiaddl
mov
ja
call
lods
imul
jae
imul
mov
dec
xor
lcall
das
jl
dec
mov
ret
add
or
jmp
mov
sbb
pop
adc
aaa
stc
jae
sub
add
stc
mov
ljmp
lret
test
lcall
incl
mov
sub
xchg
outsb
xchg
in
addr16
adc
push
pop
ret
push
decl
mov
dec
mov
pushl
lock
xchg
sbb
loop
pusha
in
pop
cmpsb
add
jmp
adc
iret
ljmp
jecxz
lahf
int3
hlt
jbe
in
scas
add
dec
out
adc
mov
inc
jns
pop
or
cs
ficoms
or
sub
call
xor
and
test
xchg
ss
xchg
test
or
orl
dec
into
cs
xorb
cmpsl
addr16
fwait
cld
es
incl
int
inc
push
addr16
rorl
out
js
mov
lret
repz
clc
sub
into
cmp
aaa
jg
out
sbb
and
xor
or
fdiv
adc
pop
mov
shrl
hlt
sarb
fiadds
inc
out
pop
xchg
mov
out
mull
cltd
and
stos
sbb
lcall
jge
mov
sarl
imul
and
in
push
movsb
xchg
fistl
incl
adc
lock
push
leave
cmp
das
addb
sbb
push
lret
int3
int
xor
out
mov
mov
pop
test
bound
or
jg
mov
xor
pop
insb
iret
test
inc
fisttpl
lock
mov
in
aad
add
xchg
push
dec
or
out
cmp
jae
pushl
jmp
xchg
push
inc
mov
push
push
enter
rorl
sahf
leave
pop
xchg
fidivs
inc
loopne
aaa
pop
fistpll
pop
inc
mov
imul
inc
pushf
sbb
rol
incl
adcl
pop
insl
daa
stos
jecxz
push
in
add
pushl
xchg
lea
roll
dec
add
push
sub
pusha
xor
sbb
xor
jne
faddl
mov
clc
jg
mov
ja
or
ret
mov
or
decl
outsb
lahf
push
sbb
jecxz
repnz
sbb
inc
dec
jne
rcll
incl
scas
fstpt
dec
cmc
movsl
add
pop
jno
loop
inc
rol
fildll
mov
cmpsb
dec
subl
add
mov
pop
mov
mov
test
add
pop
mov
test
stos
lcall
lcall
cli
mov
sahf
xchg
shrb
adc
ds
jg
dec
pop
sbbb
divl
xchg
sbb
dec
fcoml
xchg
shlb
mov
div
test
sbb
sub
arpl
imul
call
mov
and
cmp
enter
jmp
mov
js
fstpl
xchg
loopne
inc
jge
imul
fisubrl
sub
jmp
push
popf
outsb
ja
add
lret
push
mov
mov
xchg
ljmp
outsl
pop
mov
lret
and
fnsave
rcr
adc
cmp
ja
mov
or
fisttpll
repnz
sbb
pop
or
xchg
filds
jle
dec
xchg
mov
outsb
cmc
cld
and
or
adc
inc
push
divb
push
jmp
cmp
or
lea
mov
stc
hlt
adc
aad
push
leave
pop
pushl
push
neg
cmp
mov
jb
cmpsl
dec
or
pop
pop
add
push
pushl
push
cmp
pop
icebp
je
shlb
dec
mov
ljmp
fiaddl
sub
lds
adc
ret
jmp
into
arpl
xor
add
mov
add
ja
cmp
in
clc
adc
add
incl
inc
mov
jne
fcmove
cmp
jg
push
scas
or
sahf
hlt
inc
and
lret
push
daa
icebp
dec
fcoms
jmp
dec
pop
andb
sbb
fisubrl
stos
aad
fwait
movsl
or
js
loopne
stos
xchg
sub
inc
xchg
mov
jl
std
rcrl
stos
mov
jge
push
add
loope
xor
stos
fcompl
pop
xchg
add
outsl
mov
mov
fmuls
cs
push
dec
jb
or
pop
or
xchg
adc
mov
add
ljmp
jbe
pushf
cld
lcall
and
dec
xchg
inc
stos
js
icebp
push
daa
push
or
lock
or
mov
sbb
call
cltd
xor
inc
push
ds
lahf
and
or
mov
insl
fsubr
fisttps
rorb
ljmp
push
mov
icebp
ret
push
add
out
push
ret
sarl
les
mov
ffreep
pop
mov
mov
inc
xchg
xchg
ljmp
xor
popa
fnstenv
testl
jp
inc
jns
ds
incl
xorl
cmc
or
repz
pusha
mov
lret
sub
popf
push
testl
jg
arpl
adc
repnz
cmp
lods
scas
les
sub
jg
ljmp
mov
lret
and
cmc
or
test
dec
int3
xchg
daa
test
lcall
outsb
dec
and
lock
movsb
add
sbb
mov
fs
dec
jb
fdivrp
incl
lahf
fs
aas
jmp
bound
sbb
rolb
mov
rclb
inc
ret
imul
or
rcr
inc
clc
shll
jl
push
pop
lds
hlt
push
adc
sarl
cwtl
or
pushl
stc
jno
push
sahf
mov
pop
scas
xor
cmpsl
pushf
rorb
stos
lret
adc
dec
test
movsb
mov
insb
push
shlb
test
incl
bound
push
inc
push
add
movl
xor
cwtl
mov
ljmp
fisubrs
cmp
imulb
mov
sbb
mov
shrb
fbstp
cltd
mov
clc
pop
sub
repnz
test
push
fnsave
stos
jbe
ret
and
cmp
mov
in
je
aas
adc
imul
test
addl
push
push
jg
roll
daa
outsl
add
popf
sbb
push
mov
lods
fists
out
shll
pop
xchg
mov
sub
mov
in
sbb
mov
sbb
fcomip
dec
outsl
pop
int3
mov
sub
insl
mov
xor
mov
add
fcomip
aaa
adc
inc
shr
notb
les
inc
add
incl
std
mov
jne
add
inc
lahf
iret
int
pusha
xchg
loope
rolb
scas
mov
lcall
jmp
pop
js
imul
push
xchg
std
fistps
cmp
lret
mov
or
repnz
pop
and
test
jo
fdivr
fcomip
out
push
jg
addr16
repnz
in
xlat
mov
mov
mov
fists
and
xchg
push
adc
xchg
xchg
fs
pop
xor
mov
jmp
int3
push
push
jb
out
fnsave
ret
inc
and
adc
mov
xor
and
jp
int
lods
or
cmpb
mov
and
cmp
out
call
inc
and
mov
repnz
lods
adc
pop
pop
jl
in
pop
sub
pop
jmp
jmp
cmp
daa
and
xchg
lds
mov
jnp
subl
jae
ja
inc
pop
ss
xor
lods
inc
xchg
inc
popa
xchg
lcall
fs
mov
pop
xchg
jns
jg
mov
je
cmp
ljmp
loop
inc
std
mov
xchg
das
mov
mov
sub
lcall
and
movsl
xchg
jne
cld
xchg
stc
scas
jns
mov
ljmp
add
sarl
push
sbb
bound
inc
dec
ret
xchg
scas
cld
dec
bound
inc
add
adc
mov
movsl
add
xor
mov
fstpt
std
pop
popf
push
iret
mov
std
ljmp
ror
les
in
movl
pushl
cmp
xchg
xor
xor
hlt
enter
testb
mov
ja
mov
or
lcall
inc
add
dec
xor
cld
fsubl
frstor
call
out
popf
push
dec
sbb
mov
jnp
js
push
jnp
lea
and
jae
jno
push
ljmp
dec
icebp
xchg
rcrb
push
insl
push
lcall
call
adc
pop
pop
lods
mov
push
and
mov
lods
imul
pusha
lret
dec
sub
dec
or
dec
and
pop
fsub
outsb
icebp
call
pusha
addl
out
ja
fwait
rcl
jbe
sbbb
fisubrs
repz
inc
fcomi
sub
out
ljmp
mov
adc
xchg
adc
cmc
insl
inc
xlat
das
xorb
stos
flds
jmp
pop
push
outsl
es
mov
out
sub
subl
and
mov
xchg
adc
lahf
sti
adc
sarb
ljmp
nop
int
cltd
or
dec
ljmp
fwait
or
movsb
dec
or
clc
call
pop
out
and
aas
ret
and
movsb
xor
or
incl
lret
mov
jne
repnz
jp
cmp
mov
push
sub
aaa
insb
daa
cwtl
sub
jbe
adc
push
mov
adc
out
clc
inc
idivl
sti
scas
rcrb
xchg
jl
mov
inc
jns
mull
mov
mov
arpl
mov
mov
jge
daa
jne
and
sbb
xchg
ret
imul
pop
jl
or
push
inc
mov
pushf
icebp
shlb
lahf
arpl
push
jecxz
or
sbb
sub
push
inc
add
in
adc
xchg
mov
in
adc
stos
es
inc
cmpsl
lods
insl
stos
pop
stc
fisttpll
call
or
fsubrs
idiv
ds
xor
cmp
aad
pop
mov
adc
cmp
pop
dec
lahf
or
dec
mov
xor
xor
xchg
out
sbb
mov
pusha
sbb
pop
cmpsb
and
incl
jnp
and
push
inc
mov
mov
cltd
pushl
adcb
rcrb
cwtl
arpl
rcll
push
les
idiv
ljmp
lret
push
iret
in
je
sub
xor
push
xor
orb
daa
mov
inc
mov
clc
adc
inc
mov
ret
dec
xchg
adc
lods
pop
mov
xchg
dec
pop
imul
push
insb
sar
add
push
lcall
sbb
mov
cli
in
xlat
in
jbe
fstpl
adc
pop
incl
fildl
add
adc
outsb
lahf
out
fucomip
fidivrs
ljmp
xor
loope
data16
fwait
es
mov
arpl
data16
jg
mov
imul
adc
inc
sarl
and
lods
xor
or
xor
clc
pop
cwtl
leave
push
cmp
mov
mov
ficompl
inc
mov
push
icebp
fcomp
fmulp
xchg
jo
push
repnz
inc
test
or
pop
imul
mov
call
mov
sbb
sub
lret
fildll
ljmp
add
and
lret
pop
push
cld
mov
insb
mov
scas
in
movsl
sub
cs
xor
push
test
aas
cmp
cmc
out
clc
stos
adc
cld
imul
loope
test
push
orl
jmp
cmp
in
jge
sub
ljmp
pushf
in
or
ret
push
push
incl
roll
adc
fadds
sub
xor
mov
adc
or
or
ljmp
sbb
scas
imul
sbb
rorb
mov
call
push
cmc
in
fldcw
cmp
mov
xchg
and
das
lds
les
push
decl
pop
xchg
dec
lods
add
pop
and
hlt
outsb
fbstp
in
movsl
jmp
ss
jge
mov
test
shl
out
adc
daa
jle
pop
out
out
sbb
popf
and
pop
and
inc
jmp
fidivrs
stc
add
out
mov
mov
repnz
gs
scas
inc
nop
pop
inc
dec
cmp
pop
cmpsb
xchg
xor
xchg
push
jne
rorl
cmp
clc
mov
lahf
incl
xor
sbb
add
repz
mov
std
mov
dec
jecxz
sahf
jno
jmp
mov
pop
fdivs
shll
fwait
mov
mov
out
or
std
lcall
test
sti
inc
mov
jo
or
lcall
test
lds
and
movsb
test
and
std
pushl
cmp
add
sarl
out
jne
fdivrl
push
adc
jnp
jae
lret
call
and
lea
xchg
lahf
push
ret
aad
xor
gs
popf
adc
jge
js
or
push
jge
test
dec
jl
inc
int
mov
test
mov
outsl
mov
jmp
mov
test
shl
shlb
jp
jg
xchg
xchg
pushl
xchg
push
add
bound
xchg
lea
inc
js
add
push
dec
lret
popa
into
add
out
clc
cmp
hlt
jg
icebp
mov
jnp
test
xor
xor
or
jge
cmp
clc
ljmp
sbb
xchg
inc
sbb
imul
jmp
jae
mov
xchg
and
rcrl
mov
add
fstps
or
outsl
push
aaa
and
jg
mov
mov
into
xchg
adc
loope
jmp
add
inc
stos
inc
push
ret
mov
in
mov
out
dec
test
mov
inc
inc
mov
ret
sahf
dec
pushf
cld
push
jmp
fdivrl
xchg
or
sub
hlt
xchg
ljmp
mov
je
outsl
pop
daa
js
push
addl
in
mov
shr
mov
or
jmp
out
mov
add
mov
aaa
filds
scas
and
inc
pushl
daa
sahf
stos
lcall
rcll
or
mov
pop
fdivr
jl
lahf
mov
lods
or
test
and
in
mov
ret
xchg
push
aad
jmp
out
scas
ja
addb
pop
mov
mov
inc
in
call
dec
add
mov
cwtl
adc
dec
rcll
mov
add
fldt
iret
and
sbb
jns
cwtl
xchg
xor
lds
sbb
fwait
jg
daa
loop
mov
cld
orl
mov
dec
inc
cmp
cmp
pop
aaa
push
and
repnz
jl
cli
xchg
in
mov
scas
push
sub
out
and
mov
mov
cwtl
jecxz
add
pusha
call
jns
inc
push
or
push
lea
imul
sarb
mov
or
aaa
std
and
sub
lea
mov
mov
dec
rclb
fcompl
add
les
ss
popa
xor
jge,pt
sub
mov
and
enter
pop
dec
inc
xor
ljmp
xor
inc
outsb
and
outsb
fcomi
lahf
ret
and
loop
cmp
inc
lock
incl
dec
mov
mov
push
rcll
sbb
lods
incl
ljmp
mov
inc
mov
adc
les
rorl
lods
push
out
push
clc
rcrb
jecxz
decl
add
ficoml
pop
lahf
addl
xchg
sbb
xlat
jmp
mov
outsl
add
addr16
inc
sub
shrl
lret
divb
cli
push
icebp
call
mov
pushf
insl
inc
pop
cmp
aaa
in
pop
outsl
test
mov
lds
mov
add
add
test
adc
jg
pushl
mull
shrl
and
mov
aam
mov
jnp
push
cli
cltd
int
mov
cmpsb
in
aad
sbb
cmp
fbld
out
data16
stc
cmp
xchg
jl
fldcw
sub
testb
or
jg
sbb
pop
push
inc
fcoml
imul
or
mov
int
sub
data16
jmp
inc
call
arpl
cmp
movsb
data16
ja
mov
pushf
mov
in
xorb
xor
dec
cvtdq2ps
mov
test
cmp
or
decl
xlat
dec
jl
clc
rcll
and
or
stos
sub
sub
dec
jo
enter
dec
repnz
and
int
fadd
imul
test
call
mov
mov
inc
test
mov
fistps
sub
mov
decl
fcomip
add
push
xacquire
sahf
out
arpl
enter
das
clc
cmp
adc
ja
pop
or
adc
into
xchg
sti
fldz
insl
mov
adc
rolb
mov
fcoml
cmp
shlb
lock
ljmp
das
fcoml
ret
mov
fidivrl
or
call
jb
jp
mov
pop
aaa
ret
dec
or
les
push
adc
ret
pop
xchg
ljmp
sbb
arpl
scas
enter
repnz
clc
lcall
out
les
xor
dec
jbe
dec
pop
add
push
jmp
outsl
outsb
dec
xor
out
cmp
popf
jns
ljmp
add
mov
or
sbb
pop
mov
pop
push
cmp
mov
and
mov
lcall
lahf
loope
xor
jmp
das
int
push
aas
lret
or
pop
leave
ret
movsl
aaa
aad
movsb
xchg
sar
call
add
push
cmc
js
mov
cmp
in
popf
stos
add
aad
sti
pushl
push
es
sbb
pop
lea
cmp
dec
adc
inc
xor
test
cld
call
jle
js
sub
lret
pop
pop
pop
jp
sbbl
ljmp
sub
gs
add
pop
dec
jbe
mov
addb
pop
xchg
ret
mov
shl
dec
dec
and
cmp
out
out
push
xchg
incl
jns
pusha
dec
test
icebp
sbb
iret
scas
sbb
adc
xor
and
mov
fisttps
lock
in
lea
push
sbb
addr16
test
inc
imul
jg
mov
mov
pop
or
lss
ljmp
adc
lcall
push
xor
dec
in
or
je
push
movsl
imul
icebp
leave
lret
add
inc
stc
and
adc
fisubrs
mov
pmulhw
dec
js
xchg
mov
push
sbb
lods
xchg
das
mov
ljmp
pop
sbb
fbld
mov
cld
cmpsl
dec
and
jp
pop
cmp
lods
lods
pop
je
add
icebp
ret
pusha
daa
test
call
cld
jbe
movsl
ja
push
loope
icebp
int
stc
fdivr
test
test
cmpsl
decl
dec
aas
enter
and
data16
xchg
jp
cmp
fisubl
test
jno
les
inc
xlat
lcall
popa
loope
or
lcall
push
push
notl
xor
sbb
mov
pop
mov
mov
xchg
lcall
and
xchg
sahf
pop
cmp
jb
fldenv
shr
les
insl
repnz
mov
incl
pop
int
push
shlb
pop
ss
xchg
ljmp
inc
mov
jge
out
jmp
std
call
cmp
push
xor
push
lea
pop
jae
ljmp
jl
or
mov
mov
cmp
in
sub
dec
jno
pop
in
daa
xor
xchg
out
mov
sub
mov
call
push
int
jnp
ljmp
aaa
xlat
das
mov
push
sub
lret
cld
incl
mov
mov
aas
cltd
lods
in
xchg
cmpb
ret
dec
es
pop
push
jp
adc
fmull
cli
push
xor
dec
or
push
aad
lods
call
imul
inc
lcall
dec
pop
push
lods
mov
lcall
push
test
aam
push
call
ret
mov
scas
push
dec
dec
outsl
pop
dec
sbb
les
pop
inc
and
xor
popf
sbb
pop
aad
xor
stos
scas
adc
mov
mov
outsb
lcall
cmp
clc
fucom
aam
mov
fistpl
ficomps
dec
repz
xchg
inc
add
dec
and
mov
incl
cmpl
bound
icebp
imul
sub
push
xor
cmp
fwait
test
decl
inc
push
into
lret
jle
push
orb
pop
push
fsubl
ror
inc
loopne
mov
ljmp
mov
std
out
adc
out
pop
push
fnsave
xor
sahf
xor
pushl
stc
js
fstpl
cmp
out
pop
sub
pop
sub
roll
or
push
jecxz
or
and
das
repnz
mov
test
aaa
dec
sar
jno
inc
inc
sub
ljmp
push
dec
cli
incl
jne
mov
or
jb
data16
mov
incl
pop
lcall
jp
std
mov
lods
push
pop
push
pushf
mov
mov
push
std
and
outsb
push
sub
fbld
mov
push
out
jnp
cmp
dec
aas
lret
js
fcomps
cld
fmul
ljmp
jg
mov
insb
sbb
pop
popw
jbe
pop
xchg
push
adc
jl
das
sub
cld
push
hlt
xchg
movsb
data16
mov
jb
rcl
int3
decl
cmp
cmc
das
dec
mov
cmpsb
mov
mov
int
rcll
cwtl
push
xor
lcall
dec
inc
ljmp
movsl
lock
jl
fdiv
imul
and
orb
pushl
pop
loopne
test
mov
mul
fstpl
les
fwait
mov
lret
sbb
out
cwtl
movsb
jne
mov
cmp
cmp
clc
cmpsb
mov
repz
xor
add
cs
adc
cmp
push
ret
ja
aad
pushl
sbb
js
leave
pop
jnp
jb
lock
das
mov
pop
xchg
mov
cmp
ds
gs
jnp
hlt
aad
outsb
mov
inc
lcall
loop
test
mov
and
add
pop
pop
xor
push
in
aaa
jmp
loope
in
xchg
push
ds
jns
fadd
push
push
adc
mov
mov
ljmp
dec
rorb
fwait
loope
lods
fisttps
sarl
ret
bound
inc
decl
jno
in
out
sti
cltd
test
dec
sti
sub
cmp
sbb
inc
xchg
mov
add
or
jo
fbld
mov
xchg
ds
popa
or
ja
sub
push
pusha
mov
push
lcall
sub
pop
clc
push
lds
jbe
inc
mov
leave
subl
dec
inc
idivb
shl
adc
inc
outsl
dec
jo
std
xchg
jmp
xor
scas
cli
mov
xchg
xor
mov
ja
jmp
push
mov
cwtl
add
aad
inc
iret
imul
sub
xor
jp
lock
jmp
mov
sub
lock
rorb
test
mov
mov
cmpsb
xlat
stc
fsts
push
mov
push
rcrb
es
outsl
clc
in
mov
insl
leave
subb
push
mov
lds
rcrl
mov
add
jmp
xor
xor
xor
sahf
mov
sub
incl
dec
push
pop
jl
pop
loopne
dec
or
jecxz
inc
cwtl
scas
adc
xchg
xchg
out
add
sbb
aas
xchg
test
cmpsb
xchg
mov
lock
testl
pop
adc
push
dec
icebp
mov
mov
sbb
add
dec
movsl
dec
dec
inc
push
daa
fiaddl
stos
mov
aaa
pop
xor
or
and
sbb
pop
sub
leave
aam
push
je
mov
push
pushl
cwtl
mull
push
test
xchg
push
inc
movsb
movsb
xorl
sahf
pop
inc
inc
cmp
cmp
mov
fcomps
mov
ret
inc
test
jg
adc
xor
pop
hlt
out
push
je
xorl
xor
lea
icebp
inc
sbb
stos
inc
push
int
cmpsl
push
mov
gs
incl
fimull
mov
gs
sbb
decl
mov
std
inc
dec
cmp
lret
in
sub
insb
ljmp
sbb
add
xor
lret
ds
mov
pop
test
jno
arpl
jg
lods
push
jl
call
jg
outsl
leave
xchg
rol
mov
adc
push
or
shll
dec
adc
adc
aas
mov
sar
scas
push
xchg
shll
xchg
scas
in
xchg
or
frstor
cmpsb
fcomip
ljmp
pop
mov
iret
addb
lods
sbb
hlt
dec
or
push
pushl
xchg
lea
adc
icebp
in
jg
icebp
adc
xor
decl
xchg
jl
aas
push
sub
xor
sub
mov
add
mov
loope
lcall
push
lret
shl
mov
addr16
out
jno
loop
xchg
sarl
lcall
fcompl
xchg
and
gs
or
pushf
inc
xor
xchg
mov
lods
ret
jne
xor
mov
hlt
or
xchg
ret
das
test
adc
xchg
mov
bswap
cmp
call
daa
gs
sahf
sbb
sub
adc
xchg
decl
sub
mov
cli
push
xlat
fs
lods
scas
push
push
pop
orl
imul
xchg
fcmovb
aad
inc
cwtl
dec
push
push
ret
sub
int
push
jmp
outsl
inc
dec
je
xchg
and
cmp
jno
push
fiaddl
insb
sub
in
stc
add
jns
rolb
icebp
and
mov
sahf
cltd
test
insl
loopne
jmp
xchg
das
fstpt
and
shlb
fmuls
or
ja
pop
lock
lds
call
or
fidivrs
adc
jg
cld
sub
std
rcrb
lret
insl
pop
push
cmp
adcl
dec
incl
push
fstl
or
nopl
mov
jbe
ret
adc
sbb
sub
jae
stc
push
jg
lcall
movsb
pushf
pop
xor
push
mov
sbb
das
fnsave
lcall
adc
lea
scas
loopne
sub
out
and
cmp
mov
sbb
insl
xchg
cmp
decl
mov
inc
cld
out
inc
pop
xor
and
dec
popl
dec
mov
aas
ss
jmp
scas
insl
sub
imul
sub
das
mov
push
add
idiv
ljmp
push
bound
sbb
adc
pop
jmp
pop
ljmp
iret
and
sbb
mov
cmp
adc
pop
fwait
cwtl
clc
insb
cmc
fcompl
lcall
xlat
fidivrl
xor
test
cmp
movb
mov
xchg
lcall
jne
ja
mov
rcll
xchg
mov
sti
testb
inc
das
mov
mov
cmc
inc
jmp
insl
and
cld
push
fisubl
les
add
mov
mov
test
decl
int3
jo
int
ja
push
test
add
pop
push
mov
jge
xchg
sub
mov
push
lret
test
xor
adc
push
lock
adcl
call
cmp
push
mulb
cmpsl
daa
stos
xchg
mov
data16
lcall
add
jg
adc
mov
ret
popa
ja
xchg
sub
dec
pop
imul
mov
adc
and
cmp
adc
cmpb
nop
jmp
js
cltd
sbb
decl
sbbb
adc
lahf
addb
push
pop
scas
insb
ja
push
mov
xorb
mov
inc
or
jb
pushf
or
clc
movsb
fbld
cld
je
and
dec
push
call
pop
and
lea
dec
lock
sbb
sub
cmc
movsb
stos
pop
inc
sbb
sbb
push
stc
fdivl
mov
out
xor
ljmp
pop
in
xor
cmp
sub
mov
jae
xor
mov
sbbb
enter
cld
std
incl
lcall
fidivl
or
mov
mov
aaa
ljmp
dec
movsb
stos
lcall
nop
pop
xchg
stos
xor
jnp
popf
mov
in
addr16
dec
xchg
popa
cs
out
shll
ljmp
ljmp
lcall
mov
push
xor
fs
inc
sbb
or
lock
lods
adc
addb
xor
mov
pusha
jge
shl
cli
pop
hlt
jmp
or
out
push
rclb
lods
in
inc
sub
loopne
push
sbb
aad
into
adc
push
and
sbb
and
lcall
jecxz
cmp
movsb
xor
in
jbe,pt
jge
test
add
cmpsl
push
fdiv
popa
loopne
mov
cmp
lea
in
xor
std
lcall
push
aam
inc
clc
sti
in
cmp
xor
repnz
sub
or
ss
jmp
aad
shr
int
lret
pop
push
mov
adc
cltd
jnp
cmpl
fwait
inc
lea
inc
fidivs
imul
insb
repz
or
mov
inc
pop
loop
inc
inc
mov
test
push
jmp
adc
fimull
ret
cwtl
ja
decl
xor
xor
ret
mov
sti
adc
filds
pop
mov
pop
pop
and
pop
adc
jmp
addl
iret
adcb
nop
aaa
and
xchg
popa
cli
cmp
sar
lcall
mov
dec
or
ds
push
sub
hlt
pop
inc
or
push
xlat
testb
test
cmp
sti
js
mov
sbb
add
cmp
xlat
jb
cltd
xchg
pop
sub
pop
fnstcw
cmc
decl
push
pushf
xor
inc
xchg
repnz
mov
adc
lret
xchg
sub
push
rcll
loopne
mov
mov
adc
push
mov
lods
mov
rcl
lret
cmp
push
rorb
inc
stos
shrb
fmull
cmp
mov
jp
push
add
incl
pop
inc
fbstp
adc
sub
je
adc
lcall
int
sbb
push
les
pop
sbb
dec
lret
jne
es
push
pop
xorps
call
adc
xchg
jns
mull
mov
cmpl
mov
out
aad
mov
jg
mov
lods
notl
push
shrl
incl
jg
dec
mov
push
into
das
dec
lods
lods
push
mov
push
out
lock
pop
std
jmp
sbb
js
scas
inc
lds
mov
adc
pop
xor
jl
jp
call
push
into
imul
insl
in
add
dec
adc
xor
mov
scas
adc
imul
xor
push
jno
push
fwait
jbe
pop
addr16
lcall
xchg
push
aad
and
mov
xorl
pushf
in
loope
aaa
rcll
js
adc
add
mov
push
fcmovu
fildl
decl
lods
addr16
andl
call
mov
jnp
pop
lods
fildll
push
insb
jo
adcb
sbb
jnp
das
cli
in
std
fstpl
or
cmp
mov
inc
repz
or
incl
cmp
cmp
shrb
mov
cmp
js
mov
nop
mov
decl
out
mov
movsl
sub
pop
dec
jno
insl
cld
stc
xchg
dec
negl
xchg
pop
call
adc
lcall
fsubl
push
or
jns
mov
mov
bound
jmp
dec
jmp
call
adcb
add
aas
mov
cmp
mov
mov
push
std
lahf
incl
test
es
add
dec
xchg
ficomps
xchg
les
dec
and
pop
out
clc
scas
cli
xchg
xchg
in
xor
and
pop
cmp
push
push
push
lock
cmp
mov
sub
decl
pop
mov
movsb
sbb
je,pt
or
jmp
cltd
fwait
lds
in
or
and
mov
push
xor
mov
outsb
cmp
or
xchg
sarb
fucomp
sti
dec
and
sbb
ljmp
ds
cmovge
or
mov
pop
mov
aam
rcr
cmp
push
sahf
clc
jg
stc
mov
push
add
lret
and
jecxz
mov
mov
ret
stos
and
adc
add
and
repnz
push
movsb
jg
stos
mov
xchg
fmuls
lods
mov
xor
dec
lcall
mov
movsl
lods
or
js
inc
jle
into
data16
ja
and
decl
int
inc
dec
mov
lods
dec
cmc
and
movsb
rorl
jp
mov
mov
in
jmp
jne
pop
es
mov
aam
sub
addl
sub
and
hlt
pop
inc
les
pop
push
in
pusha
mov
fildll
into
insl
mov
pushf
or
addr16
push
decb
xchg
xor
cmpsb
dec
adc
adc
pop
rcll
shl
and
stc
lsl
pop
fisubrl
shrl
movsb
in
repnz
adc
std
jmp
xorl
mov
adc
pop
cmp
in
inc
push
ss
jns
call
sub
stc
jns
jae
sti
int3
shl
decl
dec
fmul
imul
testl
shrb
cli
mov
jbe
push
lcall
rcrb
jbe
std
inc
mov
inc
or
nop
jne
iret
stos
or
addr16
mov
inc
popf
stc
push
repnz
sub
pusha
sbb
mov
sub
add
mov
jecxz
jmp
iret
jecxz
cmp
xor
fs
mov
cld
xor
ljmp
fcoml
cmp
pop
xchg
subl
pop
loope
leave
pop
cli
incl
sar
sbb
pop
xor
pop
insl
adc
pop
cmp
repz
ja
cli
das
je
dec
mov
xchg
push
sub
lock
call
mov
loop
mov
xchg
stos
cwtl
ljmp
std
jbe
mov
clc
push
or
subl
jne
push
and
dec
cmpsl
cmp
dec
pop
push
xchg
jno
into
movl
pop
pop
cmp
loopne
jp
adc
enter
fiadds
fildll
out
mov
imul
pop
lock
sub
daa
outsb
push
clc
call
nop
aas
aaa
imul
arpl
sub
sbb
jmp
sub
nop
pop
fldenv
cmpb
push
inc
and
pushf
js
cs
les
test
or
iret
add
stos
inc
call
add
mov
xchg
pop
aaa
out
xchg
icebp
call
outsb
and
jecxz
stos
xchg
xchg
int
xor
out
cli
rcll
and
insb
mov
jb
and
out
loope
sub
ljmp
ret
fimull
enter
mov
jbe
xor
int3
outsl
inc
mov
jbe
jae
outsl
clc
dec
jne
stc
pop
das
ret
sbb
jge
xor
sbb
cmpsl
ljmp
lret
data16
mov
dec
dec
mov
mov
pop
jle
sbb
es
or
data16
mov
lcall
mov
scas
sbb
add
mov
push
jmp
out
insb
jl
xchg
inc
xchg
mov
je,pn
rcr
mov
pop
ret
xor
dec
stc
movsb
lret
xchg
inc
rorb
cmp
ljmp
xlat
pushl
push
sbb
in
mov
xchg
test
lret
push
and
ja
lock
ljmp
mov
push
dec
fmul
pop
mov
or
jbe
ja
decl
jno
imul
lret
sbb
xchg
and
push
xor
movsl
cltd
sar
movsl
add
or
fsubs
pop
adc
lock
decl
pop
cmpsl
imul
lret
gs
decl
lods
jp
inc
fcoms
popf
fwait
sub
cmp
mov
cmpsw
imul
inc
out
dec
pop
dec
mov
popa
ljmp
and
mov
ds
fiadds
adc
mov
in
lods
clc
lcall
rcrb
xorb
jno
jmp
and
dec
pop
add
jle
aaa
aam
stos
jae
mov
scas
or
hlt
pusha
jnp
adc
repz
pushl
dec
mov
andl
clc
jo
mov
mov
add
jmp
inc
jo
add
push
fildll
push
push
sbbb
out
jmp
jmp
cmp
lcall
jle
adc
in
xchg
or
mov
pop
call
cmp
and
mov
mov
loopne
pop
ret
sub
xor
xor
cltd
mov
ljmp
sub
jnp
mov
cmp
adc
fs
popf
out
inc
xchg
pop
imul
sbb
je
cmp
iret
rcrb
outsl
adc
or
dec
xchg
sub
cmp
lcall
pop
mov
stos
enter
mov
loop
stos
nop
dec
mov
mov
lds
arpl
xchg
push
xchg
aam
mov
mov
call
mov
mov
sub
clc
push
ss
cmc
movsb
xchg
and
dec
lret
test
lcall
outsb
xchg
div
and
fidivrl
loopne
adc
push
movsl
jb
shl
repnz
decl
and
out
push
je
das
sahf
push
test
cmp
sub
fs
xchg
movb
decl
mov
mov
aad
insb
push
lea
jmp
sbb
flds
adc
int
out
mov
dec
sub
pop
pop
pop
add
test
adc
jecxz
loopne
inc
or
aad
sbb
sbb
dec
mov
xor
inc
mov
mov
rol
push
xchg
cmc
push
ljmp
lret
push
add
shrb
cmpsb
jp
mov
adc
cs
outsb
jmp
inc
and
mov
in
mov
fsts
dec
cmp
push
aas
cmpsb
fisubl
sahf
movsl
sub
add
aam
xor
shll
cli
mov
sti
ljmp
lahf
xchg
push
sub
decb
shlb
or
lret
aas
adc
sub
bound
lds
outsl
aaa
fwait
ja
out
jecxz
call
push
sub
push
out
daa
mov
movsb
push
mov
sub
cmp
repz
adc
das
sub
popf
lds
mov
ficoms
cmpsb
pushl
mov
int
mov
or
in
jl
mov
lods
push
cwtl
ljmp
pop
pop
dec
scas
adc
lock
pop
das
cmp
fs
int3
repz
loop
push
fcompl
insl
lcall
sahf
out
out
in
mov
push
ljmp
out
shr
in
call
xor
movsb
push
mov
ss
call
clc
mov
shl
sub
push
cld
lcall
testb
loop
cmc
pop
xchg
xchg
sub
scas
pop
out
pop
icebp
sbb
decl
hlt
imul
loope
test
movsl
fdivs
xor
cltd
fimuls
mov
lcall
sub
pop
push
enter
adc
push
mov
cld
flds
mov
pop
cld
incl
arpl
xchg
adc
mov
adc
xchg
cmp
gs
lds
pop
hlt
ljmp
cli
jmp
cmp
mov
aas
negb
inc
mov
int3
lods
call
fiaddl
dec
iret
imul
rolb
lods
cwtl
sub
xchg
dec
iret
loopne
incl
rcll
or
orl
inc
mov
mov
jl
int
testl
or
dec
pop
push
pop
fwait
incl
mov
int
ds
sub
movsl
push
xor
mov
cmp
sbb
xchg
clc
jg
mov
adc
jmp
jg
xchg
es
inc
or
call
clc
mov
in
push
bound
jb
sbb
pop
xchg
jbe
and
call
ja
into
sarb
sub
xchg
jae
cmpsl
push
adc
cmpsl
inc
out
mov
movsl
xlat
call
lcall
pop
jp
xchg
js
aad
out
jg
cli
mov
mov
sbb
ds
gs
push
and
aaa
outsb
or
fcomip
xor
loope
jno
fldl
sar
mov
fs
add
jbe
cs
push
pushl
push
shlb
push
jo
fistpll
mov
mov
ret
cltd
push
pushl
inc
shr
mov
cmc
dec
mov
cmp
xchg
and
mov
add
je
xor
xchg
in
inc
add
or
sbb
mov
pushl
jl
notl
jno
cmp
cmpsb
shlb
dec
jns
jle
mov
push
insb
stos
movsb
in
cmp
in
repz
cmp
push
jns
jge
ljmp
push
xchg
jne
jbe
out
sbbb
inc
pop
lret
rcrl
incl
push
divb
ds
lret
mov
js
jg
jo
sbb
jmp
push
popa
in
mov
mov
jecxz
hlt
bound
push
int
mov
adc
jmp
movsl
mov
push
nop
daa
mov
call
mov
pop
subb
pop
inc
insl
sbb
in
pusha
popf
sbb
ret
lods
fiadds
jo
jb
jmp
or
add
out
fisubs
imul
push
xchg
mov
out
cli
mov
rolb
fstps
sbb
pop
rclb
pop
mov
lret
vmaxsd
inc
mov
fsubrs
xchg
call
icebp
ret
icebp
cli
and
add
xor
or
negl
mov
mov
incl
in
icebp
scas
cmp
and
enter
push
sbb
inc
fsubr
sbb
xor
inc
lcall
xchg
fcoml
add
inc
xchg
out
adc
mov
jmp
push
cmpsb
lret
ror
fwait
push
dec
pop
rorb
mov
and
adc
lahf
cmp
mov
and
sub
mov
mov
mov
mov
cltd
mov
adc
mov
daa
and
incl
sbb
jns
mov
addr16
sub
or
icebp
sub
jecxz
ljmp
stc
dec
xchg
stos
mov
jns
jge
int3
out
hlt
push
mov
mov
adc
pop
push
ret
aad
mov
adc
int3
aad
imul
leave
pushl
xlat
out
fistpl
leave
push
xlat
jbe
xchg
lcall
loop
mov
call
std
mov
inc
call
mov
sub
push
dec
sub
clc
cmc
mov
shr
mov
sbb
mov
lahf
jne
scas
dec
dec
cli
repnz
call
int
sub
mov
insl
and
adc
shl
out
addr16
repnz
call
loopne
vpmaxub
shll
sarl
jo
jmp
rcll
and
jbe
dec
out
sar
push
fwait
cwtl
idivl
cld
cs
xchg
inc
mov
sbb
test
sub
movsl
dec
xchg
pusha
in
fimuls
dec
adc
scas
ljmp
arpl
das
inc
test
cmp
jecxz
inc
in
pop
cs
xchg
notl
ljmp
mov
mov
adc
mov
lcall
sub
pop
pop
call
xor
scas
scas
aas
cmp
xchg
sub
push
dec
sbb
int
and
sbb
jg
jmp
jmp
and
fcmovb
inc
sahf
mov
sub
pop
inc
pop
lret
push
lcall
call
cli
fnstenv
adc
mov
mov
add
mov
mov
mov
subb
adc
adc
sub
or
inc
ret
cwtl
sub
jno
lock
dec
mov
mov
cld
test
cmp
cmpsl
data16
lcall
add
add
jbe
pop
and
adc
lret
bound
cmpsb
mov
push
loopne
or
into
sbbl
aaa
std
incl
in
xchg
jecxz
lret
test
sbb
add
icebp
jl
push
and
aas
pop
xchg
jp
ret
add
mov
rorl
jae
dec
sbb
lods
xchg
das
fwait
inc
daa
add
ljmp
cmpsl
enter
ficomps
insl
push
cmp
aas
mov
lahf
mov
and
push
roll
call
testb
stos
repnz
mov
push
js
insl
push
scas
rorb
jg
push
or
mov
xchg
popf
lea
movsb
scas
mov
cmp
decl
sbb
repz
push
jmp
jae
rcrb
push
sar
arpl
add
lods
add
jg
dec
pop
push
cwtl
in
xchg
pop
imul
sti
stos
testb
jg
or
mov
pop
mov
xchg
and
push
int3
js
stc
fmul
adc
mov
sub
popa
sub
inc
and
xchg
jg
scas
iret
or
int
iret
bound
fidivrs
sarl
imul
ljmp
clc
ljmp
sub
push
pop
dec
jo
nop
int3
stos
enter
into
or
mov
outsl
push
cmpl
jo
add
call
push
pop
enter
push
sbb
sbb
and
xlat
ljmp
lcall
xchg
mov
fsts
mov
xchg
add
cmp
dec
scas
inc
enter
movsb
and
sarb
xchg
pop
inc
pop
xchg
pop
insl
adc
xchg
adc
push
sbb
mov
incl
gs
movsb
xchg
mov
and
inc
frstor
xchg
pop
clc
movl
stos
adc
xor
dec
mov
or
xchg
cwtl
push
jp
pop
das
sar
shl
ret
out
push
xchg
repz
mov
pop
imul
mov
sbb
ljmp
mov
popa
rol
pop
js
xchg
pusha
cmp
mov
xchg
mov
ljmp
popa
into
mov
jno
popf
lret
xor
or
mov
dec
int
fsubr
cli
jno
mov
ljmp
outsl
pop
pushf
and
incl
dec
pop
mov
push
int
pop
cmp
sbb
hlt
fbstp
std
jmp
jnp
and
fnstsw
sahf
cmpsb
jecxz
inc
pushf
int3
int3
popf
inc
sub
pushl
xlat
xchg
mov
jp
je
inc
inc
in
mov
add
cmova
aaa
not
mov
inc
push
std
jmp
pop
imul
rcll
or
and
aam
cltd
jo
sbb
mov
push
cld
loopne
int
inc
inc
rcrb
pop
mov
fiaddl
mov
icebp
call
popa
cwtl
inc
push
mov
aam
hlt
shlb
mov
testb
push
sbb
add
and
xchg
xchg
ljmp
mov
jns
xlat
or
dec
and
outsb
inc
mov
enter
movsl
mov
inc
xchg
ffreep
arpl
imul
and
xchg
std
rcrl
gs
jge
dec
xor
xor
push
mov
sbbl
aad
repnz
push
je
and
rdpmc
cmp
push
lret
sub
mov
jae
bound
clc
call
sub
jo
jne
xor
paddusb
inc
ja
aam
ret
fwait
mov
mov
add
mov
pop
fcmovb
or
leave
popa
call
cld
push
into
xor
adc
aas
in
add
push
sbb
cmp
jp
or
add
out
ja
pop
scas
cmp
inc
rcl
xor
int
test
mov
andl
xor
inc
stos
adcl
pop
mov
insb
sahf
add
sub
cs
addr16
ljmp
rolb
xor
pusha
jo
adc
jns
dec
push
shlb
xor
mov
stos
cmc
push
inc
adc
jg
xlat
sbb
popa
adc
mov
lods
jge
rorl
mov
mov
rolb
std
mov
js
dec
lods
xchg
xchg
push
fcompl
mov
std
jmp
dec
movsl
mov
adc
cwtl
lahf
jp
mov
idiv
cmp
cmp
jl
cmpsl
and
push
out
lcall
lds
js
dec
cmc
in
xor
cli
decl
aas
test
lret
cmp
mov
dec
mov
jg
loope
pop
fs
call
sbb
test
mov
in
mov
cld
lcall
fs
and
loope
pusha
lods
xor
jg
lret
movsb
xlat
or
cmp
xchg
stc
mov
add
jg
mov
inc
xchg
inc
aaa
jp
clc
xor
insl
xchg
push
inc
leave
push
lahf
mov
nop
das
aad
lcall
loop
mov
add
sub
insb
mov
std
in
mov
aad
sub
push
cmpsl
lcall
xor
jge
push
cltd
stc
pop
js
inc
loop
jl
jae
sub
or
mov
les
inc
and
fs
cmpb
fmul
jl
insb
out
add
mov
lcall
ja
mov
bound
outsl
xor
aam
in
pop
cmc
push
mov
add
ljmp
pushl
std
sub
stos
push
jbe
adc
daa
dec
fcoml
jmp
xchg
roll
mov
testl
sub
outsb
test
add
mov
faddp
xchg
jg
gs
xor
pop
sub
inc
mov
add
cli
pop
add
sarb
xlat
stos
inc
test
in
jmp
pop
mov
push
aas
push
pop
jbe
addr16
aam
neg
mov
pop
cwtl
push
cmp
pop
in
pushl
jg
add
inc
jmp
pop
cmp
jge
push
daa
xchg
dec
xor
ljmp
data16
movsb
pop
dec
inc
sbb
pushf
or
sub
mov
push
mov
rorb
lcall
inc
mov
cmp
push
sahf
cmpsl
cmp
outsl
clc
pushl
mov
mov
cld
movsl
jbe
mov
lahf
stc
loope
xor
loop
incl
ja
insl
sbb
mov
lods
into
push
inc
jns
cmp
cld
mov
or
and
pop
push
push
aas
mov
xchg
sbb
call
js
mov
rcl
cmp
lds
sub
pop
dec
adc
imull
call
loopne
and
sbb
int3
lods
fidivs
aas
mov
fists
push
hlt
dec
push
lock
push
sub
outsb
jp
mov
push
pusha
pushf
mov
dec
hlt
pusha
notb
incl
in
int
sub
cli
dec
mov
xchg
rol
mov
cmp
xor
and
sub
sti
xor
call
sbb
pop
insb
push
xchg
xor
aam
cmpps
adc
test
jg
add
push
jae
mov
lcall
sahf
mov
push
mov
sbbb
cmpb
fs
in
xor
decl
int
push
movsl
push
scas
jg
notb
fisubs
aaa
int3
inc
test
xor
int
insb
mov
pop
loop
pop
dec
mov
popa
int3
fisttps
insb
gs
jle
test
repz
stos
sti
and
out
pop
test
shl
mov
jle
push
lahf
mov
mov
cmpl
mov
stos
jg
cmp
ljmp
sbb
hlt
call
repnz
ds
jmp
adc
push
lahf
sti
daa
cmpsl
xor
xor
xchg
scas
insb
fildl
jae
call
add
ss
pop
ss
andb
sub
lea
pop
mov
push
mov
call
movsl
aaa
pop
arpl
call
pop
lods
outsb
and
sbb
mov
xlat
push
push
fisttps
inc
bound
pop
gs
inc
and
xor
dec
fdivl
incl
addb
iret
mov
push
inc
push
fisubrl
mov
inc
and
call
lahf
xor
fucom
in
or
repz
xor
notl
add
call
movsb
or
or
cmp
rep
pop
nop
xchg
mov
inc
add
inc
jb
das
or
pushl
lcall
push
stos
sub
sub
in
lcall
lcall
cltd
loop
pop
icebp
lea
lds
loopne,pn
sar
incl
add
mov
cld
andb
subb
decl
mov
movsb
push
and
testb
push
dec
add
pop
pop
push
mov
sub
in
jb
pusha
imul
je
or
mov
mov
mov
insb
xchg
imul
call
sub
je
test
fcomp
aad
jp
stos
adc
jp
mov
and
push
mov
enter
cld
sbb
jo
ds
push
pop
xor
add
cmc
pop
rcrb
outsl
inc
adc
mov
push
jmp
push
int3
push
pop
sbb
ds
rcll
loope
sti
in
jo
out
mov
xchg
xchg
or
pop
sbbl
adc
decl
je
xchg
add
lock
mov
sbb
or
sbb
jae
xor
sub
mov
jmp
out
push
push
pop
pop
cmp
cli
not
lods
ja
cmp
jg
fistpl
pusha
mov
lcall
cmp
ds
pop
popa
popf
stos
jl
call
repz
jmp
push
outsl
push
push
out
hlt
inc
push
mov
in
loope
mov
and
jge
ljmp
ljmp
gs
cld
dec
movsb
sub
cld
aas
adc
pop
pusha
add
icebp
js
sbb
pushf
loopne
adc
adc
outsb
sub
jmp
xor
mov
dec
ljmp
adc
xchg
xchg
sub
testb
arpl
sbb
jl
xor
test
gs
fbld
loop
pop
xorl
pop
jno
or
jp
mov
sub
loop
jae
mov
test
mov
addr16
and
pushl
xor
in
shr
testb
xchg
push
jb
push
mov
repz
testb
fisttpll
jl
xchg
mov
rcr
lods
jmp
mov
sbb
std
push
outsl
or
push
pushl
dec
mov
aam
insl
xchg
jo
scas
cmp
shlb
xor
mov
mov
call
sub
hlt
add
mov
ds
pop
movl
push
stos
mov
leave
rorb
mov
jmp
cmpsl
lret
xchg
lods
sub
dec
dec
cmp
out
repnz
add
call
bound
popa
jle
ror
lahf
hlt
fs
xor
inc
out
cwtl
mov
push
push
dec
jne
jbe
sub
pop
hlt
add
popf
outsb
sub
lahf
es
cld
decl
fsin
scas
je
stc
mov
in
dec
stos
divb
sbb
xchg
mov
pushl
add
lret
fmulp
in
sbb
adc
or
pop
cld
ljmp
dec
jne
sti
inc
js
out
lret
xor
adc
cmp
dec
shll
jge
lods
insb
shll
test
jmp
mov
sbb
and
ds
sub
pop
in
sbb
stc
cmp
pop
jg
mov
dec
loop
mov
cmp
and
aas
jo
mov
enter
lock
xchg
fistps
popf
xchg
es
sbb
inc
std
cmp
lcall
xchg
aad
push
xchg
pop
insb
in
xchg
and
push
or
cmp
or
aaa
adc
lea
inc
push
mov
push
loopne
jmp
or
pop
dec
pop
cmp
jl
mov
sti
repz
cmpsb
cltd
das
movsb
fisttpll
push
cld
inc
pop
fs
ljmp
insl
cltd
out
insl
or
jge
shll
les
mov
add
cmpsb
lock
ljmp
mov
push
stos
pop
and
pusha
movsb
mov
dec
jecxz
xlat
sbb
inc
push
jbe
mov
ret
push
mov
sbb
pop
jg
sbb
cmpsb
test
repz
mov
jns
hlt
push
decl
sahf
data16
test
xchg
xor
jns
lcall
fbld
cmpsl
push
cs
mov
pop
pop
pushf
in
ja
sub
lret
mov
enter
pushl
ret
inc
clc
jnp
mov
dec
mov
sbb
fldl
lar
xor
jmp
jg
dec
je
push
pop
mov
xor
pop
pusha
leave
pushl
sbb
mov
pop
sarl
imul
js
imul
testl
jmp
inc
test
fists
fimuls
pop
sub
fwait
cltd
add
out
add
cmc
test
sub
incl
push
in
pop
out
or
jb
mov
cmp
movsb
shrb
sbb
clc
dec
jae
movsb
ljmp
outsl
pop
mov
xchg
rorb
dec
dec
pop
aaa
mov
mov
ret
scas
int3
pushl
cmp
xor
xchg
stc
dec
movsb
dec
out
nop
xor
pop
nop
inc
loopne
sub
dec
lcall
mov
adc
aas
iret
mov
push
call
adc
push
xchg
jg
test
jp
cmp
adc
xchg
jl
mov
inc
add
ljmp
mov
stos
call
dec
clc
mov
mov
orb
movsb
push
test
inc
pushf
scas
push
loopne
push
test
jae
xorb
pop
push
lret
insb
and
and
sub
jmp
jnp
xchg
inc
pop
dec
fwait
mov
cmp
ljmp
test
lcall
cmp
mov
aad
cld
xchg
add
mov
pop
cld
call
mov
xchg
add
insl
fidivl
xstore-rng
cmpsl
test
aad
mov
pop
incl
sbb
adc
dec
sub
cld
or
add
pusha
push
imul
or
aas
or
adc
hlt
ja
and
int3
nop
pusha
and
push
adc
xlat
insl
loope
int3
dec
cltd
enter
lcall
incl
sbb
mov
test
push
jb
rclb
ljmp
lods
jecxz
xor
cmp
lea
or
shlb
incl
stos
inc
push
pop
sahf
pop
inc
or
nop
cs
jg
leave
fldt
add
or
cld
inc
jb
push
cmp
mov
xor
pop
inc
xor
and
pop
out
negl
aad
out
mov
imul
mov
lds
call
or
xor
xchg
je
xchg
iret
fcmovnb
xorb
push
test
xlat
pop
lock
adc
repz
adc
outsb
mov
test
mov
and
fsubs
nop
pop
fstpt
in
or
iret
enter
mov
mov
sub
into
push
mov
cld
cmp
push
js
enter
jg
sbb
mov
js
jg
out
rol
fdivs
mov
adc
je
adc
lcall
rcrb
hlt
xchg
pop
mov
mov
or
ljmp
inc
jae
rclb
ljmp
inc
aaa
leave
dec
pop
jb
push
in
loopne
add
push
stc
int
jb
shll
stc
incl
pop
pusha
out
inc
sbb
imul
js
push
lret
mov
in
and
mov
ljmp
fistps
cmp
and
imul
xchg
imul
sub
xor
pop
fwait
add
add
pop
call
cmp
ja
shlb
cmp
daa
sub
in
lods
imul
stc
mov
ret
dec
fistl
mov
aas
push
insl
dec
cli
dec
call
lret
jp
je
fld
incl
lods
ror
dec
mov
lahf
and
xchg
jno
adc
fs
xchg
and
inc
aad
ss
jecxz
add
pop
ja
test
imul
push
and
mov
push
jo
dec
out
pavgw
mov
lcall
mov
or
mov
add
sbb
cld
in
dec
scas
jmp
and
fcmovu
jne
orb
xchg
inc
push
adc
mov
sbb
add
call
and
adc
pop
xlat
lret
out
mov
mov
inc
sub
hlt
inc
ror
mov
jg
add
aaa
mov
adc
sbb
and
cli
xor
shl
mov
mov
mov
fwait
cmc
int3
mov
adc
or
loope
mov
adc
lods
sahf
pop
aas
sbb
movsl
push
mov
sbb
and
lret
cld
lcall
or
push
fists
push
mov
cmp
or
lock
or
fsubs
sbb
mov
roll
pop
push
call
fstpl
data16
cmp
cmpsl
cwtl
leave
popf
cmp
sti
subb
pop
cmpsb
cmc
xlat
add
lret
test
jmp
stos
and
imul
out
mov
out
mov
cld
test
pushl
xchg
out
pop
xor
setae
roll
dec
inc
inc
test
mov
dec
jmp
outsl
jle
sbb
insl
shr
cmc
lahf
add
hlt
pop
cmp
xchg
cmc
mov
push
enter
in
imul
jg
std
loopne
and
rcrl
push
mov
std
call
xchg
adc
pop
mov
push
mov
sub
adc
ficomps
das
mov
inc
ret
cli
jle
lahf
sbb
jne
dec
xor
rcrb
cmp
and
add
dec
adc
push
inc
loopne
mov
sub
xorb
lcall
mov
or
aaa
imul
sbb
sbb
es
stos
repz
incl
aaa
aas
mov
fists
dec
mov
mov
jbe
xchg
leave
sub
mov
push
jl
scas
shlb
call
push
aaa
enter
call
loop
xor
mov
mov
pop
push
leave
popa
popa
mov
pop
sub
pop
ljmp
call
sub
xchg
push
ds
sarb
mov
ret
lret
subl
test
lcall
in
push
adc
push
fmul
cmp
fs
fwait
lods
xchg
fisubs
inc
or
decl
add
pop
push
sbb
jle
jb
in
inc
outsb
sub
push
xorl
sbb
dec
add
movsl
sarb
sub
and
cmc
mov
ror
popa
shrb
xor
mov
dec
test
push
clc
rcr
ss
ret
pop
aam
sub
imul
adcl
push
aad
insl
cld
lcall
js
in
insb
ljmp
out
pop
mov
xor
mov
xlat
jle
shll
mul
sbb
mov
clc
jo
das
add
test
mov
int
outsl
ljmp
enter
sarl
loopne
sbb
jecxz
call
jmp
xchg
lahf
and
les
mov
sbb
jbe
mov
jnp
inc
and
add
jmp
pop
loope
gs
push
aaa
cmc
es
mov
and
jg
jge
mov
mov
dec
sbb
jl
in
cli
cmpsl
sbb
mov
xor
push
out
and
xchg
clc
jl
cmp
add
ret
ficoml
push
negb
bound
dec
adc
adc
add
orl
dec
bound
xor
add
decb
stos
inc
js
push
inc
fs
test
es
fsubl
call
jno
xor
add
sbb
mov
rorl
pop
mov
mov
add
add
jl
adc
sbb
xchg
loopne
push
mov
jae
shlb
pop
inc
shll
lcall
xchg
les
lods
ss
rcll
sub
pusha
add
fildll
sub
dec
dec
mov
addb
or
add
or
push
nop
adc
test
add
add
scas
out
sub
mov
mull
xchg
dec
lds
adc
mov
lahf
sub
push
or
out
insb
aad
inc
pop
inc
and
inc
pop
mov
mov
mov
aaa
inc
or
inc
out
pop
inc
inc
test
movl
aas
call
inc
pop
adc
out
je
push
pop
test
cmpsl
or
add
xchg
les
sbb
iret
andb
test
dec
add
loop
xlat
jb
lods
mov
sub
sbb
xor
shll
mov
sub
nop
js
push
les
dec
je
jo
dec
inc
cwtl
call
js,pn
inc
outsl
outsb
imul
aaa
ja
stc
push
jae
dec
inc
jb
arpl
jb
les
les
inc
and
test
sti
dec
in
and
inc
jecxz
inc
mov
pop
adc
xchg
mov
ret
jecxz
xchg
sub
sub
test
push
addl
adc
or
push
inc
add
add
push
push
mov
mov
sbb
sub
dec
push
lds
fwait
roll
mov
dec
pop
test
adc
popl
adc
mov
sub
xor
mov
dec
push
je
add
mov
subb
sarl
sbb
lahf
and
mov
mov
push
test
and
bound
dec
fistl
adc
inc
xchg
push
pop
add
adc
mov
out
inc
mov
sbb
psubq
lcall
pop
push
and
mov
inc
in
adc
imul
inc
push
dec
add
mov
es
add
add
insb
pop
jnp
sbb
daa
incb
pop
leave
mov
int
add
nop/reserved
mov
jge
add
outsb
xor
jb
dec
mov
bound
iret
js
shlb
mov
add
cmp
pusha
add
mov
loope
testb
xor
fs
je
mov
xchg
xor
jle
shrb
fidivrl
sub
cmp
sub
fdivl
jb
inc
inc
xor
ss
popa
inc
xor
inc
lods
mov
lock
push
sub
dec
jae
test
rorl
scas
adc
dec
xchg
lock
lea
add
mov
add
add
add
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
push
add
add
add
addb
add
add
add
add
add
add
add
add
add
dec
add
addb
add
jo
add
cwtl
add
addb
add
rolb
addb
add
add
add
add
add
add
add
add
add
pusha
add
add
adc
add
add
add
add
add
add
add
add
add
add
mov
add
or
aas
add
add
add
add
add
add
add
add
add
add
mov
add
sub
aas
add
add
add
add
add
add
add
add
add
add
fadds
add
dec
adc
add
add
add
add
add
call
das
xchg
xchg
movsl
shlb
fs
cltd
mov
rcr
test
inc
inc
add
add
das
xchg
xchg
movsl
shlb
fs
cltd
mov
rcr
test
inc
inc
and
xchg
xchg
movsl
shlb
fs
cltd
mov
rcr
test
inc
inc
cmp
ds
sub
lahf
xchg
dec
cltd
lret
sub
push
xlat
or
cmpsl
ljmp
addr16
sub
js
jecxz
mov
hlt
cmc
hlt
xlat
push
xchg
push
cmpb
sbb
adc
les
lret
imul
shl
xchg
inc
stc
inc
jne
lea
aas
out
in
sub
mov
dec
and
scas
aad
ss
and
jle
scas
shlb
test
movsl
mov
in
pop
push
lods
mov
repz
mov
ds
testb
mov
jmp
xor
shrb
cmp
call
cmp
pop
popa
int
jo
cmp
cmp
push
divb
fdivs
jo
sarl
rcll
std
xchg
rclb
jmp
sub
arpl
pop
lods
sub
repz
and
jne
ljmp
push
mov
popf
sub
lret
dec
shr
cmp
test
lods
les
mov
cltd
into
aam
jmp
mov
imul
push
push
mov
xor
hlt
xchg
stos
add
jne
daa
mov
mov
xchg
xlat
daa
dec
movsb
hlt
push
addr16
sbbl
mov
adc
sub
les
dec
jmp
popa
add
fstpl
adc
cwtl
movsl
cmp
jo
pop
mov
bnd
lods
xor
sarl
je
das
pop
idiv
pop
adc
shll
movsb
cltd
sbb
sub
lods
rorb
andl
das
sbb
ljmp
adc
mov
xchg
mov
pop
scas
scas
push
sbb
sti
out
mov
and
mov
test
xlat
push
fnstcw
jmp
xor
pop
mov
lea
adc
nop
mov
shll
cld
nop
mov
fwait
jg
pushf
mov
jno
xchg
cmp
mov
test
or
and
jns
mov
pushf
xchg
inc
cmp
in
sub
pop
jmp
bound
data16
aaa
sbbl
sub
scas
pop
les
leave
fldt
inc
roll
nop
cltd
nop
int3
ss
xor
sub
es
inc
cmp
and
out
xor
arpl
js
xlat
xchg
outsb
inc
cmp
mov
int3
xor
fistpll
xor
ja
arpl
cmp
mov
adc
clc
jg
test
jns
lds
push
ss
out
xchg
cmp
dec
xor
mov
sub
cmp
and
mov
sbb
out
jns
lea
stos
aaa
inc
dec
add
jp
je
lods
lret
outsl
addl
loop
xchg
jl
stc
jnp
lods
push
inc
pop
push
fucomp
aam
sub
sbb
movsb
mov
imul
push
negl
movsb
out
and
cmpb
addr16
xor
into
test
push
aam
sbb
add
jns
mov
fcomps
aaa
aaa
fmull
or
decb
cli
xchg
push
add
ja
push
rclb
adc
add
jno
push
pop
sbb
xchg
xchg
test
mov
lods
xor
dec
sti
jo
jle
das
mov
inc
call
xchg
cmpsl
lahf
lea
sbb
xor
dec
fstps
mov
dec
jb
mov
lock
mov
fistpll
pop
imul
popa
lock
adc
loope
sbb
push
add
test
sbb
mov
cmp
aas
lods
clc
stos
test
outsl
adc
xchg
xchg
rep
movsl
in
xchg
gs
adc
adc
pop
shrl
in
sub
jp
xor
jnp
sub
fidivl
or
cmp
stc
push
jns
adc
scas
xchg
or
pop
adc
loop
xchg
pop
nop
cmc
es
mov
sbb
js
xchg
stos
and
dec
mov
cmpsl
cmpsl
push
ljmp
into
scas
sbb
inc
adc
ret
hlt
int
popf
sub
and
adc
xor
repz
jns,pt
and
shlb
test
fstps
cmp
int3
fwait
subl
mov
lcall
mov
int3
sub
jp
mov
jbe
jl
ss
imul
inc
int
xor
xchg
dec
jmp
push
out
lret
cmp
loopne
int3
push
aas
add
add
add
push
aas
add
add
loopne
aas
add
push
aas
add
push
aas
add
push
aas
add
pop
aas
add
pop
aas
add
aas
add
pop
aas
add
add
add
aas
add
add
add
aas
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
ja
outsb
push
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
imul
imul
jb
arpl
jb
