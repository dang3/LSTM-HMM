incl
jge
sub
mov
hlt
pop
pop
ss
jle
subps
lret
lcall
pop
inc
cmp
pop
xchg
add
xor
cltd
out
xchg
ljmp
mov
in
les
jmp
lea
mov
orb
in
pop
inc
daa
aaa
pop
inc
in
and
jl
insl
mov
incl
inc
push
adc
inc
dec
int3
es
icebp
insl
dec
lcall
scas
inc
cmp
lahf
cld
lea
pop
inc
add
pop
cltd
rorl
cmpsb
mov
add
mov
outsl
push
sub
out
pop
lea
int
adc
ja
pop
lret
xor
enter
cmpsb
push
scas
inc
cmp
pushl
fdivrl
pop
arpl
js
shl
in
mov
mov
movb
int
pop
cmp
decl
std
pushf
sti
xchg
jnp
mov
pop
pop
xor
movsb
div
leave
repz
pushl
xor
push
adc
ret
and
inc
nop
int
stos
movb
mov
in
out
popf
mov
pop
jge
lds
outsb
sbb
dec
leave
xchg
out
sub
imul
enter
cmp
pushf
lods
mov
popf
inc
xorl
cmp
inc
adc
add
cltd
in
call
and
nop
push
pop
fnstcw
sbb
pop
jb
test
mov
clc
cmp
sbb
cli
mov
jle
push
mov
xchg
cmp
subl
xchg
repnz
dec
inc
or
push
push
es
pop
or
sub
push
mov
mov
fcomps
jmp
inc
incl
call
cmpsb
and
stos
or
sub
mov
jb
inc
ret
lcall
shrb
out
cmp
fdiv
dec
imul
enter
inc
out
mov
sbb
sbb
sahf
dec
gs
inc
or
into
data16
sub
adc
or
nop
call
or
xchg
ret
adc
or
popa
hlt
movsl
sbb
and
insb
lret
jo
incl
shld
adc
inc
xor
jae
repz
mov
inc
jmp
push
arpl
add
cmp
mov
jecxz
inc
jbe
add
jp
add
stc
mov
lret
gs
xchg
int
mov
addl
cwtl
rolb
in
inc
push
mov
ret
lret
leave
mov
scas
divb
dec
xchg
outsb
mov
add
sub
push
pushl
popf
outsb
dec
dec
cmp
jmp
adc
into
test
sub
pop
or
push
dec
jmp
inc
xchg
inc
jae
pop
mov
stos
mov
xchg
shrl
dec
mov
out
pop
repz
pop
pop
dec
mov
leave
and
mov
cmp
incl
xor
fimuls
cmp
loop
lods
lea
outsl
push
clc
fnstcw
or
frstor
faddp
mov
outsb
loopne
push
jae
arpl
mov
push
or
cmp
pop
insb
pop
imul
mov
ficompl
sbbl
test
mov
es
push
mov
cmp
adc
dec
inc
lds
mov
jae
popa
or
jmp
pop
sub
cmp
mov
add
xchg
jne
cmp
push
jmp
divl
repz
mov
aad
iret
jl
or
mov
or
inc
jmp
and
xchg
frstor
cld
out
data16
fs
call
sarl
push
mov
stos
sbb
jmp
movsl
and
mulb
loopne
pop
lahf
cltd
add
sbb
push
mov
mov
dec
mov
incl
xchg
ror
cli
cmp
pusha
dec
mov
pop
add
push
dec
in
imul
jl
jge
lret
stc
js
popa
test
jnp
jo,pt
push
outsl
hlt
fdivr
fsts
xlat
std
and
jmp
cld
mov
mov
push
pop
sbb
js
add
jno
inc
xlat
mov
jns
insb
mov
xchg
sbb
pop
es
test
pop
clc
xor
aad
pushl
jo
mov
lock
outsl
iret
hlt
loop
dec
xchg
cmp
lahf
and
or
push
mov
inc
jmp
loope
and
xchg
xor
aas
jne
ljmp
clc
outsl
cld
gs
lea
sbb
xchg
cmc
in
test
pop
pop
mov
dec
mov
loopne
pop
mov
mov
mov
popa
mov
inc
dec
mov
in
sbb
sarb
sahf
and
int
push
out
sti
mov
mov
rorb
fidivrl
call
out
sbb
mov
xchg
inc
push
sbb
xor
mov
sub
cmp
incl
cmp
pop
mov
scas
mov
add
xor
enter
and
cmp
scas
sbb
jmp
xor
mov
xchg
pop
movsl
push
sub
pop
or
pop
enter
out
jmp
cs
push
bound
mov
push
push
adc
jbe
xchg
orb
in
ret
cltd
jae
in
in
xor
ja
cmp
mov
insb
sub
subb
in
pusha
decl
mov
lcall
int3
popf
add
pop
mov
es
cmpsl
sub
lock
lcall
xchg
in
test
mov
or
imul
lcall
cwtl
push
loop
pop
pushf
int
sub
dec
pop
mov
mov
or
shl
out
jg
add
cli
int3
vphsubdq
les
jnp
nop
pop
jp
mov
das
cli
in
xchg
pop
rcl
imul
jnp
dec
dec
mov
mov
sbb
cmp
mov
sub
dec
lods
lcall
sub
mov
out
lcall
ret
in
imul
fmuls
mov
stos
cmp
or
push
sub
sub
mov
lcall
icebp
sub
cmp
aaa
push
cmp
adc
or
arpl
stos
cmp
jle
xchg
shll
shrl
pop
sti
push
aas
xor
jns
adc
std
js
repz
dec
in
mov
movsl
jne
cmp
push
outsb
ds
incl
mov
adcb
mov
sbb
dec
mov
pop
xchg
stos
jns
cmovs
aaa
std
decl
pop
and
fildll
xor
inc
jecxz
and
loope
repnz
push
pop
in
in
das
mov
ret
or
inc
ja
enter
data16
mov
stos
or
call
xchg
and
add
cmc
rep
mov
test
pop
sbb
ficomps
mov
cmp
ds
inc
inc
jmp
cmc
adc
js
cmp
jg
push
inc
imul
pop
adc
enter
ret
call
sbb
mov
rcl
ss
mov
js
jle
call
cmp
jmp
xor
mov
xor
out
lock
add
inc
dec
push
lods
mov
adc
test
jmp
push
mov
ret
popa
das
adc
aaa
dec
adc
adc
nop
call
xor
dec
gs
nop
xchg
rol
int3
jb
aas
inc
out
jmp
loopne
outsb
inc
test
jns
insb
mov
inc
mov
loopne
push
std
out
jno
cltd
pop
rcrl
adc
jg
in
out
shll
rcrb
in
into
xlat
pop
jge
push
mov
fs
mov
pop
or
in
dec
movsl
and
ret
pusha
sub
sub
jecxz
cmp
enter
jnp
cs
idiv
incl
shrl
cmp
aad
cwtl
xchg
inc
rorl
lods
cmp
dec
test
std
pushf
out
mov
cmp
push
scas
pop
jmp
mov
je
les
lcall
adc
movsl
cmp
scas
jne
ret
iret
fildll
in
xchg
rcll
add
add
jge
push
push
cmp
icebp
fstpt
inc
popf
mov
cmp
pop
mov
gs
mov
xlat
sti
popf
jo
sarb
push
rcr
lock
jb
loope
cmp
stos
mov
push
add
mov
pop
fcoml
nop
or
imulb
loopne
or
call
xchg
and
sub
or
outsb
mov
addr16
fwait
adc
mov
ljmp
imul
pusha
fdiv
jbe
pop
sub
mov
mov
mov
sti
std
daa
push
jmp
dec
subb
fisubrl
add
fldt
ret
mov
mov
push
mov
add
loopne
and
sub
mov
cmp
mov
pop
jmp
addr16
out
incl
mov
pop
mov
dec
mov
dec
repz
dec
inc
mov
in
pop
cs
mov
jne
jnp
cli
mov
mov
push
dec
das
sti
pop
cmp
mov
mov
dec
out
aas
repnz
dec
out
test
je
xor
jno
mov
testl
rcr
fstpl
xor
insl
push
clc
in
idivb
sub
add
inc
or
into
mov
test
cmp
cmp
mov
loopne
ret
push
push
sbb
clc
js
mov
add
lock
and
jmp
pop
fbstp
gs
push
dec
or
std
add
pop
mov
loop
loope
xchg
and
xor
imul
dec
test
movsb
push
or
sbb
rorb
jge
lock
adc
adc
out
fcoml
dec
addl
addr16
inc
test
sbb
ss
adc
push
add
lret
movsl
adc
xor
add
addb
add
push
and
test
mov
inc
mov
std
push
andl
inc
xchg
or
dec
cld
mov
fnstcw
nop
sti
repnz
sbb
mov
jge
or
xchg
mov
lea
hlt
iret
adc
jb
ds
cmc
gs
jmp
scas
xchg
push
dec
xchg
rolb
mov
outsb
loope
nop
xlat
inc
jb
loope
loope
push
call
mov
or
and
ret
jae
icebp
fisubrs
mov
scas
jmp
pop
loope
pusha
inc
aaa
jg
sbb
loope
and
idivl
mov
lcall
rorb
inc
pop
sbb
daa
lret
adc
mov
shl
ss
xor
sub
cmp
jge
jns
fucomip
mov
out
or
mov
imul
dec
cmp
push
xchg
and
out
js
jne
pop
pop
dec
sbb
mov
dec
jp
mov
ljmp
ds
mov
imull
fadds
mov
or
divl
dec
pop
notl
mov
sub
or
and
fcomip
pop
cmp
inc
mov
pop
mov
inc
or
dec
cmp
adc
fildl
rorl
pop
mov
pop
mov
iret
dec
mov
fsubrs
sub
adcb
rcrl
and
adc
inc
mov
sub
mov
and
dec
cwtl
test
dec
mov
xor
mov
lea
in
xchg
xor
outsl
push
call
add
push
ret
or
xchg
hlt
fstpt
icebp
addr16
filds
sar
shlb
mov
imul
push
and
pop
push
push
outsl
inc
adc
sub
test
pop
add
add
adc
enter
addl
and
nop
inc
leave
or
fldl
loopne
and
sub
loope
mov
in
loop
inc
push
inc
and
inc
and
adc
mov
addl
add
adc
inc
sub
test
adc
inc
xchg
or
add
inc
xor
add
add
nop
inc
add
and
add
test
pop
pop
add
xorl
incl
adc
push
jns
mov
inc
js
sub
test
xor
and
jns
das
test
add
call
jl
jg
sbb
cmpb
push
repnz
fistpl
in
sbb
adc
jge
call
cmp
inc
test
mov
out
inc
xchg
mov
xorb
xchg
push
and
sar
incl
mov
xchg
repz
sbb
shr
or
insl
arpl
sti
xlat
in
push
fidivrs
or
call
fwait
ds
dec
or
out
cld
jns
jns
pop
aam
fwait
mov
mov
push
cmc
inc
mov
pop
adc
lcall
repnz
pop
out
inc
pushf
or
xor
jle
jecxz
inc
pop
loop
popf
pop
cmpsl
nop
mov
in
clc
and
outsb
push
xchg
xchg
outsb
insl
pop
dec
loop
iret
das
cli
jbe
cmc
pop
in
movsl
in
pusha
sti
test
cs
js
jb
rorl
aad
ljmp
cmp
mov
jl
gs
or
shll
pop
lods
sbb
pop
push
rorb
pushl
push
adc
mov
mov
xorl
fcmovbe
xchg
jae
mov
push
lcall
dec
stos
jne
mov
fbstp
and
dec
das
xchg
xchg
shlb
push
adc
rorl
iret
hlt
pop
xchg
pop
or
add
jp
test
dec
mov
aad
push
outsl
imul
dec
ret
mov
loopne
outsl
jno
xchg
mov
fs
ljmp
call
cld
incl
pusha
mov
insb
pop
jb
outsl
inc
mov
lahf
or
popf
jns
push
decl
inc
mov
xlat
mov
push
ljmp
pushf
sub
rcl
sub
iret
lret
call
or
ret
nop
ret
sbb
enter
divb
dec
rclb
push
cli
addr16
mov
and
sbb
push
out
mov
andb
mov
jbe
int3
jecxz
je
adc
or
test
test
test
push
push
bound
and
in
insl
sub
push
and
xchg
xchg
xlat
inc
xor
lock
decl
ret
icebp
into
and
lods
lods
add
xor
sub
ror
jmp
adc
jle
incl
push
adc
test
nop
jne
ret
xor
dec
rcrl
xlat
iret
mov
mov
add
add
imul
inc
popf
dec
cmp
incl
add
nop
push
inc
push
and
enter
mov
or
sub
push
subb
pop
jg
adcb
cmp
rcll
stos
inc
test
jmp
js
je
push
sub
imul
mov
push
jno
outsb
mov
pushl
cmp
cmp
fsubrs
push
push
stos
js
add
push
push
mov
cmp
inc
jecxz
rolb
push
popa
mov
lahf
js
push
lods
jl
in
hlt
push
sub
pop
clc
push
pop
roll
xlat
add
ljmp
xchg
cmp
xor
mov
sub
testl
ja
mov
in
jp
dec
rcrl
dec
cwtl
cs
sete
aam
mov
cld
js
add
scas
jne
xor
nop
sub
clc
mov
xchg
rcrb
mov
loope
xor
stc
mov
mov
mov
inc
push
fcomps
cld
cmp
sbb
xlat
cmp
int
cmp
mov
mov
outsb
cld
xor
fdivr
jg
xchg
pop
test
or
pop
iret
ds
mov
or
push
loop
call
push
xchg
rorl
lods
push
leave
sahf
out
pop
jbe,pn
or
xchg
sub
sarl
sbb
jg
out
pop
out
outsb
filds
test
out
jp
fbstp
xchg
rclb
adc
loopne
cltd
data16
push
into
or
bound
xchg
jge
cmp
arpl
lods
icebp
out
mov
cmp
cmp
aas
push
clc
or
cltd
jp
incl
add
xchg
push
fiaddl
mov
jbe
iret
idivb
push
in
xchg
test
jge
addb
xchg
std
mov
clc
rorb
dec
xchg
add
jle
ficoms
xchg
rolb
cltd
xchg
add
inc
jle
xchg
sub
fxch
mov
test
sub
mov
cmp
jns
xchg
add
pop
subb
mov
sbb
xchg
aad
mov
mov
aas
lock
add
mov
rcrl
pop
out
ds
filds
mov
scas
stc
out
mov
flds
test
push
aas
push
add
fdivrs
add
fistpll
jnp
cld
aam
cmpsb
enter
call
cltd
test
jle
sub
ret
xor
mov
out
or
xchg
push
cld
mov
aaa
inc
push
mov
push
xchg
xchg
add
push
cmp
push
ja
es
aaa
lahf
ds
movb
imul
add
mov
jnp
test
xchg
jle
ss
dec
pushl
cld
mov
xchg
pop
dec
inc
fisttps
aaa
xchg
mov
movhps
push
jbe
push
out
ljmp
xchg
push
inc
outsl
or
push
jne
cmp
cmp
incb
xor
cld
sbb
aam
jns
push
fwait
cmp
stos
and
ljmp
push
lods
cmp
inc
outsb
jg
push
hlt
mov
pushl
into
insb
inc
imul
xlat
mov
mov
pushl
and
inc
lea
je,pt
xorb
inc
mov
incl
lcall
jl
mov
repz
push
outsb
jg
mov
mov
insl
xor
hlt
or
jg
cld
adcb
testl
test
push
xor
or
lcall
xchg
jmp
cmp
out
mov
dec
iret
mov
mov
jle
stc
iret
std
cmpsl
out
in
sti
in
data16
dec
imul
outsb
mov
test
pop
hlt
aas
add
out
sahf
xor
addr16
push
mov
jns
mov
popa
aas
stos
mov
push
out
push
xor
test
mov
jmp
mov
lcall
mov
mov
jp
pop
repnz
hlt
push
or
cmp
inc
std
sub
lcall
add
mov
aas
dec
into
ficomps
push
mov
pop
insb
mov
bound
xchg
mov
mov
dec
ja
cmpsb
xchg
int
push
cld
iret
jne
pop
lcall
imul
clc
dec
bnd
iret
loop
add
sbb
dec
mov
loopne
pop
mov
ss
sahf
std
leave
pushl
sub
mov
icebp
jp
xor
cmp
mov
fwait
jne
jp
or
mov
rorl
ss
ds
mov
movsl
imull
push
dec
test
sub
mov
inc
adc
mov
mov
sub
imull
cmp
roll
push
cmpsl
jg
scas
andl
inc
ja
jbe
shl
movsb
adc
aaa
insb
xchg
jmp
jbe
dec
fbld
out
out
cmpsb
xchg
xchg
jns
push
pushf
insl
imul
ficoms
jns
into
adc
mov
push
in
test
jecxz
jp
jle
loope
daa
fimull
jl
jmp
xchg
adc
out
cwtl
clc
add
fnstenv
mov
inc
cmp
mov
mov
scas
mov
push
ljmp
jo
jns
shrb
xor
xlat
cld
mov
xor
push
inc
outsb
jle
pop
rcll
add
or
add
test
js
loope
sbb
lods
push
push
ja
mov
gs
pop
lock
loopne,pt
lods
mov
push
jmp
cli
decl
lock
fiadds
addr16
cmp
mov
stos
aas
and
ljmp
shlb
pop
jmp
fcomps
mov
adc
imul
imul
lcall
mov
mov
adc
xchg
mov
xor
sbb
sbb
imul
jnp
arpl
addr16
mov
mov
test
int
inc
dec
jp
insb
arpl
inc
jne
inc
push
push
decl
arpl
jne
xor
inc
inc
push
insl
inc
insl
inc
inc
pop
xor
aaa
dec
push
jns
xor
push
lcall
mov
dec
imul
jns
pop
cmp
push
jp
push
je
xor
je
sti
ljmp
jbe
xor
inc
dec
popa
inc
push
ss
push
inc
arpl
dec
push
inc
insb
js
imul
outsl
jmp
jo
push
outsl
inc
inc
ja
push
dec
inc
gs
push
xor
outsb
jne
push
push
aaa
push
decl
push
xor
cmp
dec
gs
outsl
jae
outsl
dec
push
jno
bound
jp
xor
fs
inc
pop
cld
jg
jno
sbb
xor
push
push
push
insb
outsb
dec
xor
push
mov
push
ss
push
pop
inc
inc
imul
inc
inc
jae
xor
fs
lock
lcall
outsb
inc
inc
pop
dec
jns
dec
dec
inc
push
arpl
xor
enter
gs
dec
pop
push
push
gs
js
inc
jp
push
inc
jbe
jno
dec
ss
jno
jp
dec
cmp
inc
bound
xor
ja
inc
dec
jae
aaa
imul
dec
inc
jbe
dec
outsl
mov
call
je
popa
xor
inc
inc
push
inc
outsl
insl
pop
push
mov
dec
insl
xor
incl
jns
push
push
pop
push
push
imul
xorb
dec
inc
jno
inc
aaa
cld
mov
push
jb
dec
push
aaa
dec
js
in
inc
outsb
inc
js
dec
dec
dec
les
dec
or
inc
inc
jo
push
data16
dec
pop
push
js
fdivs
cld
pushl
jae
insb
addr16
push
push
push
jns
inc
jb
inc
inc
push
jo
add
mov
add
clc
data16
add
mov
xchg
pop
xor
shll
aaa
xor
push
shlb
add
sahf
push
in
mov
ror
sbb
add
lock
and
or
xlat
loopne
pop
enter
mov
int
or
adc
test
and
faddl
sarb
or
test
test
and
and
pop
sti
idiv
pop
cmc
inc
cmp
and
ja
inc
sub
outsb
sbb
jbe
push
mov
sahf
in
or
push
mov
adc
and
or
push
adc
adc
fnstcw
sbb
sbb
jbe
dec
lahf
xor
push
push
and
inc
mov
lods
aad
cmpsl
fldcw
mov
jle
xor
loop
fstpt
inc
xor
ret
xchg
dec
dec
mov
push
fistpll
mov
subl
cmpsb
xchg
push
sti
mov
les
and
jmp
idiv
mov
daa
out
dec
test
dec
push
popf
inc
test
pop
jnp,pt
and
mov
inc
jnp
sti
jbe
adc
cs
adc
ret
nop
mov
sub
rcr
es
aas
lds
inc
fisttpll
inc
push
sbb
pop
cs
adc
cmpsl
dec
jo
jmp
or
cs
pop
rorl
jbe
pop
xchg
loop
xlat
inc
idivl
sub
aas
inc
enter
xbegin
loope
mov
test
outsl
outsb
subb
mov
sahf
outsl
and
inc
loope
pop
fcoms
es
jb
push
pop
xor
pop
cmp
data16
aas
leave
mov
sub
mov
push
mov
xchg
jo
fldcw
out
icebp
sarl
add
mov
int
mov
nop
mov
pop
jmp
pushl
jns
sub
mov
sti
or
int
sti
bound
sti
fiaddl
das
jge
insb
mov
out
jmp
call
mov
mov
jl
daa
push
jae
loop
pop
fistps
dec
push
scas
ds
mov
ja
imul
shl
out
out
orb
ja
push
pop
imul
gs
xor
cs
insb
insl
mov
gs
inc
jb
je
arpl
push
arpl
outsl
outsb
push
stos
std
cs
gs
jbe
add
pop
jb
sti
stos
insl
testl
imul
outsb
fwait
add
sbb
outsl
arpl
imul
or
pop
xor
imul
call
jns
push
outsw
scas
int
std
jb
popa
outsb
arpl
sbb
push
adc
rcr
jg
inc
jne
mov
popa
fs
fs
lods
mov
add
cs
rcrl
das
dec
lock
ja
jmp
loop
popa
jb
outsl
dec
jne
xor
cmp
inc
jns
sub
sub
out
sub
movsb
mov
pop
arpl
sbb
fisttpl
add
sbb
jb
jns
js
push
cmp
cmc
and
popa
fistpl
loopne
jo
rolb
push
jb
inc
fs
push
jae
imul
hlt
gs
push
fs
fstpl
lods
or
inc
imul
xchg
and
inc
inc
loopne
sbb
pop
outsl
insl
mov
xor
sbb
loop
lods
sub
bound
sub
xor
out
sub
call
push
outsb
push
in
fs
cmp
xor
out
int
mov
fwait
push
outsl
xchg
and
cmpl
add
insb
xorb
cmp
in
mov
popa
imul
outsb
lret
xor
pop
push
adc
inc
in
sbb
inc
shl
aam
pop
and
jb
sub
shrb
push
gs
pop
jb
jae
outsb
sbbl
jae
fdivl
addr16
outsl
mov
dec
gs
push
inc
clc
icebp
pusha
jnp
popa
jo
jae
jg
scas
mov
jecxz
dec
movsb
outsb
mov
and
adc
add
popa
jne
data16
mov
jg
jns
sbb
pop
lret
insb
mulb
and
and
stos
push
lret
push
or
or
inc
out
pusha
jno
mov
push
mov
pop
inc
push
sub
lcall
inc
shr
dec
bound
repz
or
cmpsb
sub
sbb
scas
mov
xor
xlat
jbe
jne
fldl2e
out
mov
repz
stos
roll
adc
sub
fstps
mov
rclb
xchg
test
fisttpll
repz
add
outsl
sti
lods
push
insb
cwtl
loopne
inc
inc
insb
push
sbb
mov
jne
adc
ja
roll
jo
jae
shrb
inc
rcrb
imull
shrb
daa
push
notl
mov
sbb
ret
fstpl
adc
out
pop
or
inc
xor
xchg
das
xor
loop
les
inc
jo
loop
mov
pop
adc
mov
nop
mov
add
jecxz
push
add
lock
imul
es
push
pusha
out
ss
xor
pushf
add
shlb
push
in
ret
data16
xor
ja
in
jmp
imul
fistpl
rcrb
movsl
sub
jecxz
int3
neg
icebp
pusha
jno
pop
push
ret
or
jo
xorl
xchg
sbb
fdivrs
ret
gs
js
jo
addr16
dec
lock
jecxz
pushf
movsl
movsl
fildll
inc
inc
cmpsl
fldt
fcoms
xchg
adc
daa
mov
and
dec
xorl
ja
and
shl
push
or
jne
cltd
dec
push
in
out
mov
dec
arpl
xor
xchg
sbb
enter
fldl
inc
lret
xlat
lods
and
inc
mov
fimuls
inc
mov
adc
push
and
adcb
inc
mov
add
adc
adc
nop
inc
or
push
mov
push
inc
subl
inc
add
fs
add
nop
sbb
or
xor
mov
adc
shlb
or
or
add
add
adc
nop
inc
add
add
add
nop
push
add
add
add
or
sub
sub
test
pop
add
xorl
and
sbb
push
subl
inc
add
adc
adc
nop
inc
add
add
add
and
add
fs
add
nop
push
add
test
mov
nop
inc
push
adc
mov
sub
add
inc
push
and
test
incl
adc
sub
test
pop
add
add
adc
enter
nop
inc
add
add
mov
add
or
adc
sub
mov
add
adc
adc
nop
inc
add
add
subl
inc
add
add
inc
leave
orb
add
scas
test
test
or
mov
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
mov
add
adc
jge
sub
mov
ljmp
ss
jle
subps
lret
sbb
cmp
pop
xchg
add
xor
pushl
cltd
out
xchg
ljmp
mov
in
les
lea
mov
orb
in
pop
incl
aaa
pop
inc
in
and
jl
insl
mov
jns
outsl
inc
push
adc
inc
dec
int3
jmp
or
icebp
insl
dec
lcall
scas
cmp
lahf
cld
lea
pop
inc
add
pop
lcall
mov
add
mov
outsl
push
sub
lea
int
adc
ja
ljmp
xor
enter
cmpsb
push
scas
inc
cmp
fdivrl
pop
arpl
js
shl
jmp
js
ds
dec
mov
movb
int
pop
cmp
std
pushf
sti
xchg
jnp
mov
dec
pop
pop
cmp
leave
repz
xor
push
adc
ret
and
inc
call
sbbb
dec
adc
mov
in
out
popf
mov
pop
jge
lds
outsb
sbb
dec
leave
xchg
call
out
sub
imul
enter
cmp
inc
and
inc
cmp
xor
cmp
inc
adc
add
cltd
in
xchg
or
inc
inc
and
nop
push
pop
fnstcw
sbb
pop
jb
test
mov
clc
cmp
sbb
cli
mov
jle
push
mov
xchg
cmp
subl
xchg
repnz
dec
inc
or
push
es
pop
or
sub
lcall
mov
mov
fcomps
jmp
inc
inc
jo
je
sbb
cmpsb
and
stos
or
in
es
sub
mov
jb
inc
ret
lcall
mov
out
cmp
inc
fdiv
dec
imul
enter
inc
out
mov
sbb
sbb
inc
or
into
incl
aad
and
ret
nop
call
or
xchg
ret
adc
or
mov
hlt
movsl
sbb
and
insb
lret
jo
add
shld
adc
inc
xor
lret
jae
repz
mov
inc
and
enter
popf
in
or
mov
jecxz
inc
jbe
add
jp
add
stc
mov
lret
gs
xchg
int
mov
aaa
cld
incl
rcl
cwtl
rolb
in
inc
push
mov
adc
pushl
dec
xchg
outsb
mov
add
sub
push
ss
outsb
dec
dec
cmp
jmp
adc
dec
test
sub
pop
or
push
dec
mov
inc
xchg
inc
jae
lcall
dec
pushf
jl
mov
xchg
shrl
int
jecxz
or
mov
lcall
dec
mov
leave
and
mov
cmp
mov
dec
dec
cmp
jmp
mov
xor
clc
fnstcw
or
frstor
faddp
mov
outsb
loopne
push
jmp
push
out
add
mov
push
or
cmp
inc
ljmp
ficompl
sbbl
test
lock
push
mov
lcall
test
js
dec
inc
lds
mov
jae
popa
or
pop
sub
cmp
call
push
cli
into
add
xchg
jne
cmp
cmp
je
inc
repz
pop
lock
mov
aad
iret
jl
or
mov
mov
xlat
and
in
mov
bound
cld
out
data16
insb
cmp
nop
sarl
push
mov
stos
sbb
out
and
mulb
loopne
pop
lahf
lcall
jns
sbb
push
mov
mov
dec
mov
xchg
ror
cli
cmp
pusha
decl
xor
add
push
dec
in
imul
es
lret
stc
js
popa
test
jmp
jnp
jo,pt
push
outsl
hlt
fdivr
fsts
xlat
std
and
cmp
cld
mov
mov
dec
je
pop
sbb
js
add
jno
inc
xlat
mov
jns
insb
mov
xchg
sbb
lcall
mov
test
pop
clc
xor
aad
sbb
stc
shl
lock
jg
lds
icebp
dec
xchg
cmp
lahf
and
dec
push
mov
cmpsb
inc
jmp
loope
and
xchg
xor
aas
jne
cld
gs
lea
sbb
xchg
fwait
incl
inc
pop
pop
pop
mov
dec
ds
loopne
pop
mov
mov
mov
popa
mov
inc
dec
mov
in
sbb
sarb
sahf
and
int
lcall
out
sti
mov
mov
rorb
fidivrl
in
repnz
xchg
incl
push
sbb
xor
mov
sub
cmp
cmp
pop
mov
scas
mov
lcall
add
xor
enter
and
cmp
scas
sbb
loope
jnp
mov
xchg
pop
movsl
call
pop
or
pop
enter
out
jmp
cs
push
bound
iret
push
push
adc
jbe
xchg
orb
in
decl
push
cltd
jae
in
in
xor
push
fsubl
push
jg
cltd
leave
test
addb
imul
pusha
dec
push
je
pop
lcall
jmp
popf
add
pop
mov
es
cmpsl
sub
lock
xor
mov
cmp
or
imul
mov
pushf
int
sub
aaa
std
decl
test
pop
mov
mov
or
shl
out
add
cli
int3
cmp
mov
mov
les
jnp
nop
pop
jp
mov
pop
rcl
imul
jmp
dec
dec
mov
mov
sbb
mov
sub
pushl
imul
dec
rorb
leave
push
ret
in
imul
fmuls
mov
call
or
push
sub
sub
mov
cwtl
ret
xchg
icebp
sub
cmp
aaa
in
call
xor
or
arpl
stos
cmp
bound
xchg
shll
call
sub
pop
sti
push
aas
xor
jns
adc
mov
in
mov
jg
call
movsl
jne
cmp
push
outsb
ds
inc
mov
adcb
mov
push
movl
jecxz
xchg
stos
jns
cmovs
pop
and
fildll
xor
jg
inc
jecxz
and
loope
repnz
icebp
pop
in
in
das
mov
ret
ss
decl
sub
sub
insb
lds
data16
mov
stos
or
mov
xchg
and
add
mov
rep
mov
test
pop
sbb
ds
dec
cmp
ds
inc
inc
jmp
cmc
adc
jg
push
inc
imul
mov
pop
adc
enter
ret
ss
sbb
mov
lcall
rcl
ss
mov
js
jle
call
cmp
xor
mov
xor
out
dec
lock
add
inc
dec
push
lods
mov
adc
test
push
mov
jmp
ret
popa
das
adc
aaa
dec
adc
adc
nop
adc
xchg
xchg
or
mov
dec
gs
nop
xchg
rol
int3
jb
aas
inc
out
out
dec
outsb
inc
test
jns
insb
mov
decl
cmpsb
loopne
push
std
out
jno
cltd
pop
rcrl
adc
out
shll
rcrb
in
call
xlat
pop
jge
push
mov
fs
mov
pop
or
movsl
and
ret
pusha
sub
sub
hlt
filds
mov
and
jmp
fnstcw
cs
int3
shrl
cmp
ljmp
call
jp
xchg
inc
rorl
lods
cmp
dec
test
pushf
out
mov
cmp
jmp
dec
push
scas
pop
jmp
mov
je
les
movsl
cmp
scas
jne
ret
pop
loopne
dec
fildll
in
xchg
rcll
add
push
lcall
call
icebp
icebp
fstpt
inc
popf
mov
mov
gs
decl
mov
xlat
sti
popf
jo
sarb
cwtl
jb
loope
cmp
push
idivl
add
sbb
das
andl
shlb
mov
scas
out
jp
push
push
jl
loopne
and
sub
lods
testl
ljmp
xchg
mov
scas
int
cmpsl
inc
int3
inc
push
imul
sbb
insb
jb
xor
int
sahf
call
xor
in
std
adc
add
adc
and
mov
cmp
inc
lea
pushl
sbb
xlat
pop
nop
std
xor
jp
test
pop
loop
sbb
pusha
out
push
jg
fiadds
scas
pusha
cmpsb
and
mov
ds
pusha
andb
pushf
outsl
cltd
pusha
rcrb
stc
test
cmpl
cmp
insl
idiv
out
cli
cmp
lret
movsb
xchg
mov
pop
in
mov
rol
mov
cmp
adc
mov
add
pushf
push
and
incb
loopne
inc
dec
leave
ds
aaa
fdiv
mov
fistps
cmp
jno
ror
jecxz
xchg
stos
or
push
sbb
out
outsb
leave
push
rol
xor
ljmp
clc
sub
add
sbb
jb
fdivl
imul
mov
pushl
push
imul
fs
mov
cmp
outsb
ret
xchg
das
loopne
mov
xchg
push
jns
add
pushf
lret
leave
in
arpl
cmp
pop
pusha
cmp
pushl
mov
push
daa
sbb
push
fcompl
ljmp
nop
pushf
xchg
scas
xchg
cmpsb
dec
or
out
ret
inc
sbb
pushf
cmpsb
stc
sbb
or
and
call
sbb
aad
pop
dec
sarb
lret
jno
loopne
xor
or
dec
jb
or
sub
call
int3
xchg
out
test
push
pop
mov
and
test
je,pt
aam
pop
lcall
mov
dec
lret
jl
cmp
dec
call
std
loope
xor
sub
inc
push
cli
call
sbb
adc
push
sub
shll
add
or
incl
flds
ss
insl
fldenv
pop
cld
xchg
mov
mov
jmp
outsl
ljmp
xchg
mov
inc
ss
in
sbb
xor
bound
push
cmovns
stc
xor
mov
sbb
pushf
sti
xor
cltd
loopne
and
push
jecxz
out
out
fdiv
std
xchg
cmp
mov
sbb
xchg
stos
lret
mov
repnz
mov
jg
xchg
in
sti
insl
mov
xchg
popf
push
dec
mov
jmp
testb
das
cmp
movsl
iret
js
aam
push
add
mov
cmp
test
sub
jmp
dec
dec
fisttps
andb
popa
adc
decl
enter
int
dec
add
mov
cld
xchg
stos
pop
inc
mov
incl
ret
jmp
or
mov
jl
jle
into
lds
mov
mov
cmp
jmp
enter
jno
sbb
dec
jae
aas
fs
addr16
lea
clc
nop
sub
pusha
jg
ljmp
idivb
jae
ss
test
sti
jb
inc
mov
cli
lcall
lcall
pop
clc
dec
and
sbb
loopne
test
repnz
dec
mov
flds
leave
mov
mov
out
mov
call
or
cmp
xor
loop
call
rep
xor
lods
dec
sbb
out
jne
gs
out
xchg
popa
push
daa
imull
call
mov
subl
dec
cs
xor
dec
imul
ljmp
jno
xor
negl
int
mov
call
movsl
out
pop
daa
pop
mov
lods
aaa
loopne
aam
xlat
jmp
jle
scas
inc
out
mov
fistpll
cmp
rcll
repz
shll
mov
sbb
jecxz
js
filds
leave
push
sub
mov
pop
inc
imul
pop
insl
mov
jno
lods
popa
lock
pushl
dec
adc
mov
inc
jle
sar
jns
test
inc
lret
push
or
or
incl
xchg
pusha
sub
push
test
cwtl
cmc
sbb
xor
sti
sub
decl
pop
sarl
xlat
lock
inc
jb
inc
movsb
xchg
sub
cmp
call
cld
pushl
rclb
cmp
jp
je
jp
stc
inc
push
enter
inc
enter
or
std
dec
cwtl
inc
or
fisttpl
insl
push
xor
inc
push
inc
repz
pop
rcrl
inc
or
sub
popa
xor
jb
jmp
daa
fs
out
in
decl
div
pop
mov
xchg
mov
vpsraw
mov
incl
add
inc
mov
inc
stc
mov
and
mov
rorb
incl
sbb
mov
jb
cmp
sub
cmpsb
dec
pop
push
mov
insl
js
adc
cli
mov
mov
xlat
xchg
push
ret
cli
and
out
xorl
adc
outsl
mov
jmp
test
in
pop
call
jecxz
adc
cmp
mov
or
xsha256
cmpsb
sarl
or
int
addb
stc
jne
mov
sbb
mov
cmp
inc
flds
icebp
cli
mov
mov
xchg
call
out
jg
dec
into
adc
sbb
push
mov
mov
mov
pop
or
mov
popf
out
push
pop
in
mov
cs
addr16
jmp
add
stos
int3
mov
shll
and
lods
fbstp
jg
sahf
stos
popf
xchg
push
jmp
call
jge
movsl
js
sbb
icebp
lds
ret
arpl
cmovo
and
std
push
cmc
push
ljmp
fsubl
add
add
dec
in
push
dec
add
mov
dec
jae
jb
pushl
mov
add
add
add
adc
cmc
cli
push
out
fs
mov
fwait
jp
es
dec
addr16
out
repnz
xor
jecxz
inc
xor
sahf
xchg
loop
arpl
inc
adc
sbb
mov
insl
add
pop
comiss
cmp
adc
ljmp
fdivrs
jae
sub
xchg
leave
sub
add
test
push
repz
nop
stos
lret
test
add
call
inc
push
xor
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
xchg
sub
mov
xor
or
add
mov
jmp
pop
add
incl
xor
testl
out
aaa
scas
inc
cld
pushl
dec
out
dec
add
add
add
sbbb
ljmp
decl
jne
add
adc
addb
inc
addl
std
fbld
incb
pop
rolb
sbb
sub
adcl
outsb
add
mov
roll
adcl
aas
rorl
cwtl
js
and
push
mov
je
in
mov
push
jge
shrb
xor
sub
incl
enter
rorb
rclb
cmp
rolb
rorb
dec
or
insb
nop
arpl
pop
shrb
or
data16
or
mov
incl
or
add
sbb
and
adc
add
or
in
xchg
pop
out
movsl
lcall
jae
pusha
sbb
int
cmpsl
imul
cmp
fidivrl
inc
gs
xor
sbb
mov
add
pop
jl
leave
scas
dec
fwait
insl
shll
dec
sub
push
and
pop
mov
pusha
test
fisttpll
lds
pusha
or
popa
xor
imul
cmp
mov
mov
push
std
gs
jne
ss
bound
mov
data16
or
mov
fstpt
sbb
push
cmp
mov
mov
push
push
pop
push
ja
test
add
negl
push
push
xlat
outsb
scas
push
int
loopne
fcoms
aam
in
mov
sahf
xor
push
push
jmp
incl
sbb
jns
or
push
push
add
std
push
push
loopne
aad
mov
in
imul
dec
fwait
adc
aas
das
sub
insb
or
shl
pop
push
int
mov
in
rcll
push
pusha
fucomip
push
addr16
mov
jle
out
seta
jmp
ss
add
jle
jbe
daa
push
cmp
jae
cltd
mov
mov
mov
cmpsb
loope
pop
or
outsb
cmp
shrl
imul
loopne
loope
fwait
lods
out
xor
dec
adc
daa
jo
out
sbb
dec
arpl
xchg
rcrl
and
inc
cmp
rcll
popf
fwait
mul
sub
out
add
mov
mov
push
and
push
cli
ret
jne
loopne
aad
inc
mulb
add
add
sub
sbb
sbb
inc
pop
popa
pop
jl
testl
ror
stos
popa
and
jecxz
je
add
shll
call
ljmp
pop
pop
sbb
cmp
pop
sbb
ja
push
lahf
inc
shl
jg
or
fs
xchg
loopne
jae
xor
lods
pop
icebp
in
inc
pusha
pop
pop
add
push
jne
mov
sbbl
adc
sbb
je
ficomps
sti
popa
loopne
push
sbb
and
imul
out
jo
or
add
push
push
scas
add
sbb
cmp
add
adc
push
jo
imul
out
add
or
ficoms
bound
aas
dec
arpl
jo
outsl
fnsave
push
jp
or
sub
test
adc
push
outsb
add
push
shll
bound
mov
rcl
xchg
stos
mov
aaa
dec
sti
cmp
adc
daa
shll
jge
int
in
xor
xor
pop
out
dec
inc
ret
jo
mov
mov
das
js
repnz
aaa
lcall
lock
int
in
mov
adc
sub
jnp
movsl
mov
iret
stos
stos
or
dec
and
sbb
lods
std
lock
push
lds
mov
jmp
mov
nop
pop
cmp
dec
mov
sub
push
mov
jo
fucomp
add
mov
mov
dec
add
add
ds
add
lods
and
add
jl
fcmovnu
pop
pushl
stos
call
xor
sub
in
push
or
cld
pop
repnz
mov
stos
sbb
jg
jne
movsl
loope
imul
inc
sbb
fstpt
pop
sbb
or
pop
xchg
jo
or
jo
shl
outsl
jo
jno
xchg
pop
pop
mov
add
add
xor
leave
enter
add
mov
cwtl
shrb
cmc
ds
push
test
pop
xor
vmovsd
jbe
cmpsb
pop
hlt
outsl
cld
pop
pop
loop
pop
cmp
inc
inc
pushf
dec
pop
ja
ljmp
mov
testl
cmp
xor
in
fiaddl
push
sbb
sbb
cmp
add
aaa
insb
dec
inc
in
call
push
jle
mov
outsb
fadds
cmp
aam
cmp
fwait
mov
jno
int3
or
jne
cmp
daa
fldl
jo
pop
call
jg
jmp
add
push
enter
scas
mov
add
dec
sub
mov
int
mov
and
gs
lea
jo
jg
pushl
fbstp
and
imul
arpl
nop
outsb
lock
decb
xor
adc
jb
stc
andb
xchg
loopne
ja
lods
popf
add
jmp
add
test
jle
les
add
loop
daa
cmp
pop
sub
mov
lock
xlat
orb
filds
xchg
push
jo
mov
shll
add
sbb
push
jp
out
faddl
sar
jl
add
push
notl
fnsave
or
add
cs
add
mov
loopne
mov
inc
adc
mov
cmp
sub
pop
add
filds
std
add
inc
adc
adc
into
xor
lret
pop
mov
sub
cmp
insb
push
add
jbe
inc
or
sbb
in
outsl
aaa
xor
shr
pop
lock
pusha
lock
das
fadds
xchg
push
icebp
add
adc
mov
or
push
push
xlat
fisubrl
cmpsb
pop
dec
sbb
nop
add
js
cmp
fimull
sbb
sub
push
or
mov
dec
lock
push
mov
testb
or
sbb
stos
je
xor
sbb
push
and
test
test
fldt
add
push
sbbb
dec
pop
push
out
ss
fs
cmp
lock
sbb
aam
sub
pop
or
mov
out
mov
xor
adc
pop
mov
imul
and
xor
addb
pop
lcall
xchg
dec
jo
cmpb
int
rcrl
aam
xor
sub
mov
dec
fs
add
push
push
fcoml
add
jbe
shll
aad
data16
sbb
stos
xchg
or
pop
lcall
dec
arpl
jle
lcall
pop
push
adc
fimull
lahf
repnz
push
adc
lock
lock
pop
jno
push
xor
ret
icebp
or
lcall
aaa
lock
orl
icebp
or
mov
lods
push
xchg
lock
push
cmp
rclb
imul
mov
sub
mov
dec
pop
shrl
nop
sbb
adc
add
lods
sub
push
lret
gs
mov
xor
stos
adc
cmpsb
xor
cli
sub
add
jge
and
cmp
fwait
scas
cmp
add
mov
clc
pusha
mov
ss
pop
jae
jo
or
iret
push
fmuls
fimuls
cmpsb
push
loop
sub
jbe
jo
or
pop
pop
mov
jo
or
not
jge
jo
or
pop
imul
dec
mov
imulb
push
negb
push
cs
clc
pop
ja
aaa
mov
fwait
scas
imul
daa
scas
push
push
xchg
out
imul
push
adc
sbbb
push
sahf
inc
mov
jg
aas
dec
inc
lds
jle
repnz
repz
push
or
cmpsb
xor
incb
dec
push
push
outsl
shr
pop
push
jo
push
roll
push
pusha
out
idivl
mov
inc
cmpsl
iret
repz
loope
push
pop
sbb
out
push
js
shrl
push
sub
jmp
push
ja
sub
repz
xor
or
mov
pop
test
jmp
lahf
pop
push
sbb
xchg
push
iret
cmp
jl
fstps
cmp
repz
or
dec
stc
repz
repz
mov
iret
jb
lds
bound
cmp
repz
add
iret
repz
pop
sbb
iret
jp
aad
jle
sub
out
mov
mov
out
popf
out
push
fsin
xor
ss
data16
out
lods
push
xchg
out
jns
out
pop
push
popf
arpl
jle
cmpsb
clc
cmp
fldl
ljmp
in
sahf
out
push
mov
out
out
push
adc
dec
sahf
xor
popa
and
add
jns
sahf
sbb
jns
out
sub
dec
sahf
dec
repz
dec
add
in
cmpsb
pushl
lret
gs
out
sahf
and
jmp
in
dec
pop
sbb
dec
sahf
cmp
mov
rcrl
addr16
jns
cs
jae
mov
or
xchg
out
inc
out
sbb
jnp
xlat
imul
ja
scas
or
idivl
cmp
push
pop
ja
out
sahf
ja
iret
addr16
daa
scas
push
fistpll
sahf
mov
pop
test
out
in
jg
aas
filds
call
or
sahf
call
push
out
add
out
add
mov
push
add
add
ds
outsb
adc
jmp
jecxz
and
add
rep
jecxz
jmp
jle
sbbl
sbb
push
popa
cmpsb
rclb
add
xor
xchg
lea
out
mov
data16
adc
ljmp
hlt
push
xor
repnz
out
xor
lock
imul
push
out
inc
ljmp
insl
pop
jo
push
lret
jmp
int
fisttpl
pop
mov
jmp
jmp
rclb
inc
jl
jle
sub
mov
sbb
pushl
inc
mov
sbb
mov
hlt
cmp
insb
adc
test
fs
incl
leave
mov
insb
push
arpl
pusha
aaa
and
cmp
inc
pusha
aad
jno
mov
mov
test
movsl
add
pushl
sub
mov
lods
sbb
fdivs
mov
xor
shrl
ljmp
jg
xlat
enter
mov
fadd
mov
xchg
mov
mov
sub
mov
fucomi
or
out
dec
push
rol
jmp
outsl
inc
fdivl
jno
add
rcrb
jbe
mov
loopne
mov
pop
in
lahf
int3
aam
jg
mov
js
pushf
test
xchg
out
push
loope
or
jg
ljmp
push
pop
arpl
or
imul
gs
adc
add
test
cwtl
test
pmaddwd
fnstenv
adc
incl
sbb
ficoml
lcall
dec
xor
cmp
lcall
mov
aam
movsl
fisttps
xchg
fdivrs
add
rcll
fldcw
pushl
mov
das
mov
add
sbb
or
ret
jno
push
push
inc
add
jmp
out
adc
mov
fidivl
outsl
and
aam
mov
icebp
stc
ficomps
leave
fcos
ljmp
fstpl
xlat
call
or
mov
rcr
mov
lcall
shlb
ljmp
fildl
push
fdivl
or
jnp
incl
cld
call
pop
push
hlt
iret
push
in
and
scas
add
dec
sahf
pop
jge
pushl
std
mov
mov
push
add
push
imul
ss
lcall
sbb
imul
aam
pop
sub
mov
dec
frstor
fistpll
mov
call
sub
adcl
fisttps
addr16
cmpsb
and
mov
aas
mov
mov
and
sbb
scas
or
ss
jp
inc
cmp
pusha
fildll
mov
pushl
xchg
popa
lret
in
mov
outsl
and
push
or
cld
inc
or
fcomip
and
es
xlat
or
sub
push
pop
pop
call
ret
call
mov
sahf
fldcw
scas
ficomps
ret
fptan
arpl
arpl
insl
add
or
decb
jmp
addr16
jb
jl
jge
mov
push
sub
decl
mov
xchg
repnz
fdivrl
fisttpl
sub
roll
pop
mov
push
lcall
xor
mov
negb
ja
outsl
mov
sbb
pop
or
xor
or
jg
call
sahf
gs
xchg
scas
clc
sub
imul
push
xchg
or
rorb
dec
xor
cmp
push
pusha
shlb
ja
ds
pushl
pop
fstps
cmp
aaa
lods
scas
mov
fiadds
aaa
std
pushl
mov
iret
xchg
mov
pop
mov
sarb
call
push
inc
fldenv
sarl
mov
dec
popa
std
sbb
imul
sub
mov
or
in
ljmp
jb
add
sbb
xor
sub
push
lds
jns
pop
push
cmp
fxch
mov
ret
call
cli
xor
hlt
jecxz
dec
mov
mov
mov
xor
xchg
and
mov
push
popa
stos
xlat
scas
cs
mov
sub
push
lcall
out
add
lcall
mov
insb
insb
jmp
aas
inc
aam
pop
int
and
incl
filds
cmpsl
sahf
ja
mov
sbb
repz
lcall
aaa
std
lcall
adc
inc
inc
xlat
int3
imul
jo
fdivl
cmp
pop
sub
rorl
pop
or
cmp
or
inc
fisttps
pop
mov
iret
gs
sub
decl
mov
lahf
pop
inc
lea
out
mov
add
jae
dec
call
incl
sub
pop
cli
dec
jns
mov
sub
mov
xchg
mov
call
mov
mov
mov
or
xchg
decl
pop
mov
xlat
inc
je
cli
outsb
xor
pop
mov
mov
push
call
fsubrp
test
loope
insb
lret
cli
cmc
mov
out
imul
jecxz
lcall
pusha
test
cmpsl
adc
push
out
adc
and
inc
and
mov
or
push
fwait
cmp
dec
pop
scas
xchg
add
int3
cmpsl
xor
loope
lods
jg
adc
adc
adcl
xchg
mov
xchg
leave
adc
inc
jle
xchg
ja
jmp
or
das
dec
dec
and
mov
or
or
lea
fisubs
into
out
jle
jmp
repz
inc
ret
adcl
int3
add
pop
xchg
lcall
cmpsl
ljmp
cmc
test
mov
ja
scas
adc
insb
hlt
inc
xor
fldcw
push
ret
pushl
pop
repz
and
jo,pt
sarl
fdivrs
out
mov
mov
movsl
jnp
sbb
mov
movsb
mov
ja
fldcw
dec
sub
or
sub
add
ds
add
mov
cs
mov
jmp
hlt
out
les
ret
xchg
mov
push
push
mov
sbb
xchg
fidivs
pushf
aad
test
push
lret
jo
call
sub
push
fisubs
pop
lds
push
call
dec
sbb
mov
pop
ret
lcall
mov
lahf
fdivrp
test
call
addb
mov
mov
mov
cmp
push
adc
dec
inc
sub
mov
pop
dec
loope
dec
or
imul
inc
jp
mov
arpl
out
sar
pushl
mov
stc
jb
xlat
loopne
adc
mov
jo
popf
jbe
mov
add
insb
cmp
sti
cmp
adc
sub
test
jns
jle
bound
cmp
jg
bound
adc
in
xor
bound
daa
push
add
lock
decl
dec
test
sub
int3
in
mov
xor
call
lcall
push
adc
jle
push
ret
xchg
xchg
dec
insb
shlb
adc
push
pop
or
xchg
jg
scas
rorb
aam
aas
adc
adc
cltd
sbb
mov
or
lret
repnz
shr
popf
in
fsubr
out
inc
loope
adc
shlb
es
xchg
aas
inc
and
jo
adc
out
test
pop
dec
imul
pop
jle
enter
mov
cld
cmp
dec
scas
or
int3
int3
aas
adc
and
pushl
std
dec
push
add
mov
mov
ret
dec
jl
add
push
dec
incl
jo
rorl
sub
push
or
stc
sbb
lods
xchg
fmuls
cmc
sub
pop
jmp
es
leave
in
adc
push
push
or
sbb
sbb
ljmp
sbb
repnz
pop
es
outsb
dec
jae
jmp
cmp
fdivr
pushl
adc
mov
pop
pop
inc
dec
cmp
sub
cmp
leave
cmp
or
ret
out
inc
aas
hlt
incl
cmp
push
add
nop
jge
aaa
leave
ret
fidivl
jnp
push
xor
call
xchg
xor
add
xor
imul
mov
xor
daa
ss
sub
pushl
daa
mov
and
repz
xlat
mov
sub
fidivrs
sub
ljmp
rorb
jb
jbe
sub
enter
mov
pushl
out
jno
pop
push
jae
xor
jb
and
push
jbe
icebp
pop
je
fwait
aad
xchg
mov
jle
mov
jg
or
jl
je
jns
push
inc
js
mov
pop
inc
jnp
cs
insl
and
cmp
nop
es
xchg
push
call
push
idivl
rclb
popa
scas
shr
sub
cmpsb
gs
fs
stos
das
sar
and
imul
sbb
outsb
push
cld
incl
arpl
dec
xor
sbb
insl
mov
dec
pop
fstpl
push
lock
incl
dec
inc
inc
ds
inc
mov
pop
cmovo
out
inc
loop
mov
push
xor
call
mov
mov
jae
clc
push
inc
stos
cmp
adc
push
sub
push
pop
cmp
pop
and
lcall
in
pop
dec
xchg
cld
sti
sub
outsl
pop
xchg
das
lods
pop
jg
xor
jmp
adc
mov
movsl
jae
mov
fsin
out
addr16
in
dec
es
lock
mov
in
sahf
hlt
pusha
in
sbb
das
call
jne
stos
jmp
pop
imul
cmp
sar
popa
insb
xchg
push
push
push
call
adc
cli
lods
fdivr
mov
lcall
clc
mov
add
addb
lock
push
inc
icebp
imul
pop
sub
cmc
add
decl
negb
aaa
mov
fcmovb
jecxz
fildl
jno
je
mov
sub
push
fstpl
dec
aaa
fsubl
or
xlat
adc
dec
fsubr
aam
mov
aad
movsb
ror
into
mov
outsl
jmp
shll
pop
pushf
les
sbb
xor
ret
xchg
ret
lcall
rol
push
adc
push
scas
dec
lret
pusha
lds
enter
leave
mov
inc
int3
mov
ljmp
iret
sarb
xchg
mov
insl
nop
roll
xchg
out
jmp
lcall
xchg
push
push
fs
and
pop
mov
sahf
imul
cli
popf
fldt
cwtl
in
add
mov
xor
iret
xor
dec
mov
call
popf
orb
dec
add
dec
and
mov
lcall
mov
cmp
ljmp
fcmovu
subl
sbb
xchg
jb
xchg
loop
push
add
stos
cli
add
movsb
stos
cmpl
mov
sub
cmpsb
lods
lods
out
icebp
cmpsl
ljmp
push
jne
mov
sub
mov
push
std
jl
bound
sbb
mov
sbb
mov
cmpsl
inc
mov
int
mov
fcmovne
mov
mov
mov
push
stos
mov
mov
mov
notb
into
pushf
xchg
mov
jl
push
out
cli
pop
jmp
xor
mov
mov
scas
jg
test
bound
and
and
adc
mov
jne
or
jge
loopne
outsl
incb
dec
and
push
int3
ja
loopne
adc
pusha
push
sbb
xor
call
mov
lods
inc
aaa
sarb
cmpsl
mov
outsl
into
int
jg
xchg
ljmp
sub
popa
rcrb
xchg
call
jae
sub
mov
inc
jp
inc
scas
xor
dec
cmp
das
add
das
repz
in
xchg
sbb
xchg
in
ljmp
xchg
frstor
sub
ja
adc
ljmp
in
inc
xchg
mov
lcall
sub
cmp
and
push
sahf
loop
outsl
dec
jg
ds
std
mov
aad
shlb
and
call
fsubrl
daa
out
std
mov
insl
hlt
adc
call
adc
cmpsl
aas
test
dec
call
mov
adc
test
lods
push
pop
jg
jnp
ret
push
sub
pop
sbb
cmpsb
ja
mov
adc
rcrl
cmpb
das
lret
jnp
dec
ja
prefetchw
or
cmp
jae
movl
or
cld
adcl
call
daa
mov
mov
out
mov
pop
mov
in
fildl
outsb
js
sub
pop
fcomip
mov
cmp
das
xchg
adc
sub
mov
and
inc
iret
icebp
cmpsb
adc
xchg
jbe
cs
cwtl
pop
fwait
push
std
jo
in
incl
jno
das
dec
leave
iret
cmp
stos
out
arpl
aas
imul
adc
push
mov
pushl
pop
in
push
loope
mov
cwtl
call
scas
jmp
inc
addb
ds
fistpl
jmp
cltd
push
xlat
loopne
xor
mov
in
mov
jle
inc
sub
in
call
inc
xchg
sbb
xor
jge
mov
sahf
in
sub
push
nop
mov
xor
jl
cmpsl
sbb
pop
test
cmp
ds
add
mov
cmc
scas
decl
and
imul
sub
mov
hlt
js
scas
dec
sarb
std
rcrb
inc
push
cmc
mov
jecxz
xchg
testl
and
sbb
lahf
jle
ljmp
out
mov
pop
lods
mov
ret
mov
es
add
and
xor
mov
arpl
sahf
and
sahf
push
inc
cmpsb
mov
mov
lcall
gs
jb
add
into
movsl
out
xchg
mov
rdmsr
fsts
xchg
push
mov
ljmp
mov
jbe
sbb
jbe
jp
add
dec
jae
movsb
push
mov
cmp
inc
stc
out
dec
jbe
mov
into
jb
inc
fcoml
incl
fs
jns
stc
lret
push
xchg
inc
and
lcall
mov
lock
clc
ljmp
mov
and
daa
test
cltd
xchg
cs
add
call
dec
jno
aam
loope
xor
ss
mov
addl
jecxz
negb
pop
jmp
icebp
fiadds
subb
aam
into
mov
xor
inc
inc
jg
mov
mov
sub
lret
sbb
sbb
adc
push
jle
test
sub
adc
ja
mov
jle
jg
test
and
mov
ss
push
sbb
pop
push
data16
fisubrs
mov
rcll
out
mov
dec
or
mov
mov
rolb
pop
outsb
sti
cmp
fucomi
pop
xchg
addr16
push
mov
imul
push
push
add
xor
or
clc
insl
inc
sbb
arpl
mov
xchg
mov
push
push
mov
mov
decl
mov
mov
outsl
mov
adc
and
or
jno
jnp
inc
fdivrp
jmp
fcmovbe
jge
fucom
jmp
aam
push
jl
test
in
insb
cwtl
push
fwait
imul
jne
leave
in
jmp
pop
dec
pushf
push
insb
flds
or
enter
pop
sub
in
addr16
inc
add
shll
test
pop
or
cli
mov
mov
stc
inc
dec
fsubrs
fistps
or
pop
xor
xlat
push
addb
push
fidivs
and
mov
movsl
add
or
or
mov
or
and
call
outsl
jl
cmpsl
push
sbb
cmp
shlb
mov
decl
mov
pop
pusha
mov
aam
xchg
leave
mov
imul
cwtl
sbb
incl
insl
cmp
xchg
sbb
add
popa
bound
xor
or
call
add
rorl
les
mov
in
mov
push
je
mov
jl
pop
lock
fisubrl
repz
dec
gs
popa
pop
lds
jg
pop
mov
xor
mov
movsl
inc
ret
xlat
pop
rol
insl
sub
hlt
sti
mov
outsb
ljmp
push
mov
pusha
mov
jae
add
and
fcomip
incl
inc
stos
inc
or
adc
push
test
mov
fildll
mov
data16
or
popa
in
mov
fxch
cwtl
dec
rcrb
mov
mov
pop
rorb
dec
mov
insb
lods
adc
mov
cld
mov
or
mov
lcall
ja
ljmp
mov
push
sbbl
adc
cmp
push
test
push
iret
or
pop
cmc
lcall
addb
mov
setae
mov
movsb
push
ret
call
loopne
push
pop
jg
addr16
out
ss
xor
add
sbb
shrl
loopne
incl
fisttpll
push
mov
stc
call
mov
aad
mov
jg
rcll
mov
repnz
cs
push
shlb
mov
dec
push
jge
daa
or
sbb
add
mov
out
pop
loopne
mov
cmp
jl
mov
mov
mov
incl
sbbl
outsl
shlb
xor
xchg
inc
or
fldl
push
mov
cmp
decl
or
aam
pop
xchg
mov
xlat
jmp
rcr
sahf
mov
ret
call
arpl
mov
pushf
std
insl
xchg
or
push
test
lea
addr16
add
push
dec
cmp
lcall
mov
scas
repz
cmp
mov
sbb
mov
fcmovnu
and
rcl
decl
aam
inc
xchg
fnsave
outsb
jle
push
int
mov
ja
out
inc
ja
or
incl
punpckhdq
push
cmp
out
add
pop
jo
sahf
incl
bound
shr
insb
iret
inc
pop
or
js
ljmp
or
adcl
ret
es
das
pusha
push
divl
outsb
ja
push
shrl
jmp
pop
fdivrl
fdivrs
lock
mov
sahf
lds
mov
jmp
pushl
mov
xor
mov
cmpsb
inc
shlb
add
stos
ficoms
addr16
cmc
cmp
mov
aad
sub
or
mov
rolb
out
ljmp
out
xor
bound
fwait
insb
lds
ja
inc
test
inc
xchg
pushl
dec
add
hlt
fxch
push
mov
or
scas
jle
popa
subl
decl
add
adc
fldenv
adc
out
inc
xchg
shrl
out
jecxz
mov
call
cli
addl
add
fistl
lret
lcall
insb
sbb
inc
aas
fbstp
pop
push
sahf
push
and
jae
adc
and
ja
push
call
shl
cmp
cmp
jmp
pop
scas
stos
mov
imul
mov
imul
sub
hlt
pop
or
mov
sbb
inc
repz
mov
jo
jno
imul
ljmp
repz
ret
sbb
jne
pop
mov
sti
icebp
test
jns
mov
cmp
jns
xchg
call
sbb
fisubrs
cmp
jns
add
cmp
jmp
sbb
imul
inc
pop
and
addl
ret
lds
cmc
xchg
cmpsl
in
lea
or
cli
bound
inc
mov
insb
adc
ljmp
push
xchg
and
cwtl
push
cmp
test
rorb
cli
lret
xchg
lea
pop
xchg
jns
sbb
jmp
push
adc
adc
jo
ret
fwait
lcall
jg
lret
or
xchg
scas
mov
int3
cmpsl
int3
and
mov
loope
dec
aas
sar
outsl
mov
loopne
or
das
push
adc
sub
gs
sarb
jns
leave
and
mov
or
je
adc
xor
lods
dec
lea
lahf
jle
xor
out
incb
std
ret
rclb
cmp
gs
pop
mov
push
jmp
cwtl
dec
fstpl
cli
leave
out
scas
lret
mov
hlt
insb
push
xchg
fnstcw
int
inc
push
mov
adc
inc
and
ds
jo
daa
ja
subb
inc
jno
out
pop
add
lcall
test
pop
mov
cwtl
movsl
insb
ljmp
pop
fcomps
sub
incl
sbb
inc
cwtl
add
pop
xorl
je
bound
and
lds
cmp
or
call
ret
or
xchg
aad
pop
mov
test
xor
imul
subb
loop
in
sub
dec
lods
pop
pop
sbb
inc
sub
cltd
fidivs
loope
lds
mov
in
gs
or
in
ret
test
es
scas
mov
sub
int3
cmp
pushl
call
imul
or
push
test
jg
sbb
mov
pop
adc
xor
clc
xor
mov
loope
scas
imul
test
ss
pop
mov
xor
xlat
dec
sub
int3
mov
jg
pop
xlat
push
push
xchg
adc
lea
or
jo
jnp
inc
mov
and
in
insb
incl
into
adc
push
test
push
test
shlb
lds
addr16
lcall
push
cmpsl
popf
push
adc
add
add
pop
sub
cltd
xor
fdivs
cli
jle
call
xlat
sub
aam
lea
push
loopne
call
shlb
gs
jg
lods
xchg
mov
das
lds
ss
negl
push
aas
sub
jns
jo
dec
movsl
pop
xchg
sbb
mov
daa
or
rorb
bound
call
std
out
and
mov
cld
dec
cmpl
xchg
mov
shlb
mov
mov
std
ja
and
mov
jle
hlt
adc
aaa
or
jbe
or
mov
adc
xor
jb
inc
push
cld
test
outsb
std
inc
mov
pop
clc
or
jmp
lea
dec
push
test
adc
lock
repnz
test
repz
out
jmp
negb
stc
fs
xchg
push
cmc
sahf
sub
cmp
loop
leave
inc
loopne
ja
loope
sbb
sub
das
or
stos
ffreep
out
mov
in
xor
cwtl
lcall
cmpsb
out
jae
xchg
ljmp
and
mov
in
dec
inc
loopne
sub
call
leave
xchg
mov
or
mov
roll
push
ret
gs
pop
pop
pop
enter
fcomip
outsl
lret
jp
test
test
xchg
aad
int
imul
adc
fstp
imul
je
in
mov
cmpsl
fcom
fldcw
dec
dec
frstor
cltd
and
and
adc
aam
ficomps
cld
pusha
inc
xlat
or
jno
ljmp
mov
mov
ret
shl
enter
mov
rorb
pop
scas
fdivl
cltd
decl
push
dec
sub
aad
inc
orl
or
or
and
cli
incl
inc
push
xchg
test
lret
lret
mov
xchg
ljmp
xchg
mov
insb
xchg
ja
pop
xchg
xor
xchg
repz
pushf
insl
lock
sub
lcall
jecxz
stos
lcall
add
mov
lret
and
pop
dec
mov
call
fs
fisubs
mov
or
mov
mov
mov
frstor
mov
inc
decl
mov
int
inc
mov
dec
out
mov
icebp
push
addr16
mov
or
stos
mov
scas
mov
cmp
movsb
and
cmpsb
data16
mov
jb
mov
sub
add
lods
das
insl
push
xor
or
mov
mov
out
sbb
movsl
fstps
cmp
pop
sbb
xor
jp
add
adc
dec
cmp
in
movlps
hlt
popa
pop
das
ficoml
in
mov
adc
ss
cmp
mov
adc
rcl
movl
push
push
test
add
lcall
jp
push
sahf
les
pop
scas
jne
add
test
adc
decl
inc
xchg
or
sub
or
int
js
pusha
daa
mov
mov
and
jecxz
and
cmc
mov
and
and
and
dec
in
imul
test
xchg
ljmp
sub
movsb
add
mov
jo
sub
pop
adc
pushf
xchg
daa
cmp
sub
ljmp
cmp
xchg
cmp
roll
xchg
xor
scas
test
pop
lcall
or
icebp
xor
xor
rcrl
xor
mov
inc
outsl
insl
cld
mov
insl
sub
insb
jmp
ds
push
and
repnz
pusha
mov
xbegin
arpl
adc
addr16
and
ja
adc
xor
jge
jb
xor
pop
add
loope
jo
mov
jne
popf
in
je
neg
add
dec
incl
add
mov
push
mov
out
roll
jnp
int3
push
jp
cmpsb
arpl
incl
js
sbb
jns
jb
add
shlb
mov
into
push
movsb
outsb
stc
incl
push
jmp
jl
sub
dec
add
lods
adc
and
sbb
jmp
add
push
jbe
lcall
pop
clc
sub
pop
cmp
add
stos
pop
mov
les
decl
sbb
add
cmpsl
mov
add
fisttpl
cmpxchg
add
punpckldq
gs
add
incl
push
add
testb
xchg
pushf
xor
inc
fimuls
addl
pop
pop
fiaddl
js
loopne
xor
cmp
addr16
or
mov
hlt
dec
pushl
bound
xor
fisubrl
rcl
cmp
fistpll
add
add
mov
fldl
pop
fbstp
cmpsl
mov
clc
jmp
push
add
movsl
xor
add
jno
jmp
jnp
enter
lods
add
into
outsl
add
jg
rclb
sbb
sti
js
jg
sbb
cwtl
in
call
inc
add
and
mov
scas
ds
enter
cmp
push
cmp
in
pop
mov
pop
lock
in
es
mov
xor
pushl
sub
add
pop
ja
add
push
mov
clc
mov
add
and
sub
orb
cmp
or
xchg
cld
rcrb
lret
lcall
mov
add
sbb
fsubrs
jg
add
inc
sbb
inc
and
hlt
xchg
push
dec
jg
call
cmp
add
sbb
not
add
jbe
push
lret
cld
ljmp
pop
loope
ret
pusha
test
mov
pop
mov
or
fistpll
cs
xchg
jle
loopne
test
das
push
cmp
dec
imul
or
push
inc
sub
mov
outsl
cwtl
cmc
add
call
jle
fidivl
sbb
icebp
mov
inc
decl
jecxz
mov
sbb
xlat
jg
aam
js
insb
outsb
pop
sub
ja
hlt
add
testl
outsb
das
aas
mov
xchg
pop
orb
ljmp
clc
pop
mov
pop
icebp
iret
mov
in
mov
fbld
fwait
pop
adc
jo
add
dec
das
fiadds
and
xorb
inc
out
jg
fbstp
xchg
aas
mov
cld
ds
jb
sbb
lret
mov
call
add
call
mov
aaa
out
push
add
addb
ds
mov
mov
ljmp
and
scas
int3
call
cld
lcall
add
pop
mov
stos
in
pop
add
sbb
add
std
incl
xor
out
mov
sahf
aam
push
stc
mov
jge
push
pop
lds
cmp
call
ret
and
outsb
out
repnz
or
cmpsb
insl
add
loope
cli
cld
sbb
incl
call
cmc
dec
dec
add
and
jne
adc
js
xchg
fstps
dec
aas
dec
scas
add
inc
movsw
add
xchg
pop
sbb
sub
jns
mov
and
repnz
imul
or
jle
add
mov
add
mov
add
inc
fldcw
mov
xor
fcoms
stos
sub
add
stc
popa
gs
add
mov
rcr
mov
ljmp
pushl
ljmp
dec
lcall
xchg
lock
loope
add
aad
mov
adc
movsl
jbe
add
data16
jp
mov
xor
test
icebp
and
sbb
cmp
add
fcomip
push
xor
mov
and
fwait
clc
inc
call
push
mov
lods
es
mov
xchg
add
jmp
add
lock
bound
imul
ret
fwait
inc
jnp
ss
xchg
cltd
xor
add
push
mov
cmc
call
pop
jno
lret
loope
ja
ss
out
mov
add
aas
out
inc
lcall
addl
movsb
pop
notb
add
push
ds
add
sar
ds
inc
add
mov
stos
xorl
jg
cmp
xorl
sub
ljmp
pop
add
mov
adc
in
test
orl
ja
mov
ret
jle
cmp
arpl
cltd
in
leave
mov
decl
jno
push
outsb
add
push
cmpsl
rcr
ret
outsl
fisubrs
sarl
xor
mov
jnp
mov
push
add
pop
sub
ret
scas
adc
xchg
cmpsb
add
mov
pop
mov
jp
cltd
mov
push
icebp
fndisi(8087
jg
scas
fstpt
std
loopne
or
jg
fistps
or
mull
or
cmc
add
ljmp
incb
rorb
gs
outsl
gs
gs
loopne
popa
mov
cltd
lods
test
loopne
push
or
mov
or
xor
mov
jmp
push
psraw
popa
add
popa
pop
repz
cmovbe
arpl
xor
shll
arpl
and
inc
addl
shll
std
jge
cmp
shll
shll
shrl
dec
shll
cmc
jne
xor
xor
adc
imul
imul
imul
cmpsl
imul
cmpsl
imul
imul
cmpsl
imul
cmpsl
imul
imul
cmpsl
imul
cmpsl
imul
imul
cmpsl
imul
cmpsl
imul
imul
lcall
out
lcall
mov
imul
xchg
fsub
xor
add
ret
divb
push
xorb
in
add
sahf
insl
cmp
jo
push
lods
add
idivl
sbb
mov
push
hlt
add
add
mov
push
sbb
xchg
add
mov
sbb
movsb
add
imul
jnp
add
add
add
js
push
mov
fadds
ja
push
cwtl
add
add
ficomps
push
test
sub
push
enter
out
jnp
mov
add
mov
xor
push
rolb
jge
mov
push
loopne
pusha
sbb
mov
add
add
add
mov
push
incl
mov
sbb
and
shll
xor
sbb
divl
xor
out
movl
jmp
fidivs
stos
lret
mov
xor
jl
jnp
lcall
pushf
push
mov
xor
add
subl
cmpsb
sbb
std
in
cmc
in
cmpsb
imul
cmpsb
imul
repnz
enter
hlt
add
jbe
divl
call
sti
add
add
insb
imul
pop
inc
pop
pop
testl
add
insw
and
or
or
or
aas
add
add
or
ret
adc
push
add
aas
add
add
add
mov
add
in
adc
mov
add
adc
push
mov
or
outsl
neg
out
add
in
or
sbb
in
add
add
or
jle
daa
repnz
add
lock
mov
icebp
sbb
test
adc
adc
test
adc
inc
adc
in
add
in
clc
notb
or
adc
xor
push
adc
add
std
adc
mov
sti
sbb
sbb
jg
mov
cmpb
mov
mov
mov
cwtl
loop
loope
mov
out
jmp
aad
xchg
inc
rcl
cmp
mov
lea
pop
mov
icebp
push
xor
pop
push
mov
mov
xor
aas
icebp
add
xor
aam
sbb
mov
incl
jo
add
push
xor
or
adc
and
lods
mov
in
add
push
daa
dec
push
inc
sub
xor
pop
data16
adc
mov
cs
or
aad
lock
xchg
adc
insb
add
call
test
mov
nop
xchg
add
pushf
outsb
mov
std
xor
jo
out
mov
jmp
add
out
mov
ds
and
das
js
out
jbe
mov
adc
add
xor
add
jo
test
std
bound
xor
divb
push
fidivs
mov
cwtl
add
sarl
addl
addb
decb
add
adc
sbb
and
xor
inc
add
pusha
icebp
adc
ret
pop
xor
jmp
popa
pop
dec
out
ficomps
cmp
sub
sbb
xchg
faddl
xchg
imul
xor
out
pop
imul
fs
mov
popf
std
add
cld
scas
mov
inc
and
or
in
fisttpl
jae
les
jae
pushf
and
les
rolb
insl
stc
filds
sub
jge
dec
daa
fisubl
imull
scas
add
nop
cli
add
lcall
push
mov
sub
push
out
fsubrl
xchg
mov
mov
gs
divb
push
push
push
shlb
xor
dec
push
push
inc
jle
add
add
push
call
add
scas
loopne
push
xchg
es
push
inc
rcll
xchg
jg
inc
inc
inc
mov
dec
dec
dec
mov
dec
push
scas
push
mov
pop
popa
incl
fs
push
insl
outsb
mov
mov
mov
outsl
mov
xor
xor
xor
sub
xchg
jb
je
jnp
decl
jp
and
push
push
ds
mov
data16
int
dec
mov
scas
push
stos
push
aas
data16
jg
pop
movsl
pop
pop
pop
mov
arpl
cltd
addr16
imul
out
xchg
outsl
cmpsl
es
push
xchg
cld
jo
mov
jg
fisttpl
imul
dec
into
adc
adc
pop
jge
fcomps
jle
inc
std
jnp
push
mov
pusha
pop
fsin
or
cmp
std
jns
jge,pt
scas
sbbl
pop
insb
sub
push
xchg
or
add
adc
push
mov
mov
pop
add
pop
add
push
add
add
cmp
add
push
add
push
add
add
das
cli
call
jge
push
add
dec
add
add
add
add
pop
mov
add
add
popa
add
pop
add
add
jp
fldl
cs
ficompl
add
mov
out
add
das
cli
pop
std
add
add
call
add
add
ljmp
mov
push
add
sub
daa
add
add
and
fistpl
and
bound
pop
adc
pop
sbbb
jbe
std
incb
add
add
add
jb
add
mov
shrl
or
pop
lret
int
dec
in
jno
add
add
add
mov
shll
xor
xchg
add
dec
add
add
xor
lret
xor
add
mov
add
daa
add
and
insb
push
fsubrs
xor
add
add
mov
or
add
add
add
add
pop
outsl
mov
fildl
sub
adc
add
retw
add
add
add
add
lcall
add
add
add
cmp
cs
add
add
cs
jo
xchg
subb
incb
jb
or
push
pop
add
adc
repnz
sub
add
outsb
pop
mov
or
xchg
push
add
pop
lock
pop
imul
and
rcrb
xor
jg
add
xor
lods
pop
add
xor
repnz
mov
xor
movsl
xor
cmpsl
pushl
push
add
xor
jecxz
push
add
xor
out
push
add
xor
cld
xor
mov
pushl
dec
add
xor
test
dec
add
xor
stos
xor
lods
xor
scas
xor
mov
inc
add
pushl
inc
add
xor
mov
inc
add
xor
mov
xor
add
xor
add
xor
pushl
cmp
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
pushl
xor
shlb
xor
xor
add
xor
add
xor
add
xor
add
xor
pushl
sub
loop
sub
xor
add
xor
add
xor
add
xor
add
xor
add
xor
pushl
and
in
xor
add
xor
add
xor
add
xor
add
sahf
add
lcall
push
inc
add
and
cmp
add
and
cmp
es
cmp
daa
push
aaa
add
sub
xor
add
sub
xor
cs
xor
das
push
das
add
xor
sub
add
xor
sub
ss
sub
aaa
push
daa
add
cmp
and
add
inc
push
sbb
add
incl
add
inc
push
sbb
dec
push
push
add
dec
push
adc
dec
push
adc
dec
push
adc
dec
push
adc
push
push
push
add
push
push
pop
push
sub
pop
sbb
sub
pop
push
inc
pop
push
lds
bound
jb
push
push
lods
pop
mov
push
push
xchg
push
push
mov
push
fistl
sub
bound
pop
add
fwait
enter
and
add
hlt
rolb
or
cwtl
insl
loop
add
adc
pop
add
or
roll
or
or
mov
add
nop
add
cli
add
aas
push
mov
push
push
repnz
add
or
push
lret
addb
lret
and
ficoml
ljmp
or
sbb
push
sbb
dec
ficompl
push
test
push
jp
shll
mov
lcall
xor
popa
push
loop
lret
jo
sbb
cli
mov
ret
lcall
sbb
dec
stos
and
lret
test
sbb
xchg
sbb
sbb
sbb
insb
fdivs
add
fiaddl
mov
sbb
mov
adc
add
rolb
loop
mov
ret
add
repnz
add
adc
xchg
push
movsb
jb
push
adc
and
shlb
or
inc
or
add
call
add
xchg
add
mov
stos
and
lcall
sub
mov
cli
incl
add
add
mov
pop
pop
stos
add
mov
call
pop
stos
add
add
test
push
pop
adc
cli
pop
lods
jg
stos
push
push
pop
scas
mov
scas
lcall
add
push
stos
decb
int3
add
int
pop
lret
xchg
pop
mov
inc
pop
into
add
pop
ja
cli
xchg
add
xchg
cmp
xchg
add
pop
xchg
add
pop
xchg
ljmp
xchg
jp
cwtl
rolb
cltd
add
imul
incl
fwait
add
pop
pushf
add
pop
popf
add
pop
sahf
add
pop
lahf
loop
mov
cmp
mov
ljmp
mov
pop
cmpsl
add
pop
test
es
test
add
pop
mov
pop
incl
sbb
mov
sbb
mov
sbb
mov
sbb
mov
pop
mov
incl
mov
add
mov
incl
mov
add
pop
mov
add
pop
roll
pop
ret
add
ret
pop
les
or
aaa
cld
incl
lds
or
movb
pop
movl
pop
leave
add
mov
pop
or
pop
or
and
pop
or
and
add
push
or
and
cmpsb
and
call
and
popf
and
sahf
and
mov
and
lods
and
and
pusha
and
incl
and
sub
aas
or
or
and
shlb
aaa
or
ss
incl
xor
aam
xor
shlb
xor
popa
and
or
and
or
and
or
and
or
and
or
and
mulb
or
xchg
enter
fcmovnu
cs
xchg
and
push
and
or
pop
or
and
sbb
decl
and
or
sbb
or
and
sbb
push
or
and
or
and
add
ss
adc
cmp
adc
mov
and
or
decl
mov
and
or
xor
or
pop
or
pop
or
and
add
pop
test
pop
or
xchg
pop
and
and
and
push
jg
or
push
or
and
and
or
and
and
cs
call
or
dec
or
dec
or
dec
or
dec
or
dec
or
inc
mov
incl
and
sub
inc
or
add
sub
cmp
pop
and
or
or
cmp
pop
and
lcall
ss
xor
shll
or
and
das
idiv
decl
sbb
or
and
or
and
or
and
or
and
push
clc
add
or
and
mov
and
iret
sbb
scas
and
fildll
stos
or
and
sbb
sbb
ljmp
and
or
and
adc
adc
arpl
insl
sar
adc
adc
gs
push
and
jl
or
daa
or
pop
daa
in
outsl
es
mov
or
inc
sbb
inc
les
push
es
in
pop
popa
ss
and
or
and
mov
cmp
adc
or
add
jle
or
cmp
pushl
nop
and
or
xor
or
and
or
sub
or
sub
out
rolb
cwtl
or
mov
clc
pop
and
or
call
add
sbb
or
add
sbb
add
pop
or
fadds
adc
or
add
adc
add
jecxz
jmp
add
or
or
add
or
add
sub
add
or
push
jmp
cmp
add
pop
or
pop
pop
or
int3
pop
or
pop
jo
push
or
ret
mov
push
push
sub
push
or
push
push
or
pushl
or
adc
dec
or
adc
dec
or
adc
dec
or
adc
push
dec
or
sbb
inc
or
sbb
inc
or
sbb
inc
or
sbb
push
inc
or
and
ds
and
cmp
inc
cmp
incl
push
cmp
es
cmp
push
ss
decl
xor
or
sub
xor
cs
xor
xor
cs
decl
sub
or
xor
sub
ss
sub
cmp
or
push
and
push
pop
or
lcall
or
inc
push
sbb
inc
push
sbb
inc
push
sbb
inc
push
pop
or
call
or
dec
push
adc
dec
push
adc
dec
push
prefetchwt1
or
insb
add
push
mov
push
push
or
add
or
push
aam
pop
push
push
or
xor
dec
xor
pop
push
pop
mov
fistl
xor
xor
aaa
xor
xor
xor
mov
fstpt
xor
xor
xor
xor
ret
xchg
xor
xor
inc
xor
inc
xor
sub
mov
inc
xor
inc
xor
inc
xor
inc
xor
addb
dec
xor
xor
pop
mov
dec
xor
xor
xor
add
xor
xor
bound
cmp
xor
push
repnz
xor
push
xor
push
xor
pop
xor
pop
mov
ret
xchg
inc
pop
xor
xor
xor
pop
pusha
push
xchg
pop
xor
ss
fsubs
xor
bound
shlb
lds
repnz
push
lods
pop
mov
stos
adc
lods
adc
lods
adc
adc
mov
bound
subb
mov
mov
adc
mov
shlb
repnz
mov
and
mov
mov
inc
mov
sbb
rclb
rcll
ret
insl
jno
orb
js
push
jg
mov
fcmovbe
rolb
push
xchg
add
inc
adc
xor
adc
and
cs
adc
call
inc
adc
inc
adc
pop
and
mov
mov
and
and
imul
test
outsb
push
and
imul
jae
jle
ljmp
push
iret
repz
div
repz
ds
repz
in
add
add
out
scas
fldt
sahf
out
lods
fsubrs
sahf
stos
fisubrs
jns
jns
pushf
sahf
push
rcrl
aam
rclb
sahf
and
jg
fbstp
ficoms
outsb
cs
push
mov
out
insb
lea
push
jns
out
imul
jns
fsubs
arpl
sahf
out
js
push
fisubs
cmp
repz
popa
push
shlb
push
repz
repz
push
xchg
push
xchg
iret
repz
push
xchg
push
xchg
push
nop
aas
out
jns
add
dec
push
sahf
aad
add
outsl
mov
dec
add
add
add
fwait
stos
dec
imul
push
lcall
dec
push
cwtl
add
sbb
xor
xchg
inc
xchg
inc
repnz
fisubs
inc
push
fsubl
sahf
cmpsb
imul
cmpsb
imul
jns
add
xchg
aaa
sbb
test
lcall
xor
xor
jge
cmpsl
imul
cmpsl
imul
push
addb
pop
add
pop
sbbb
imul
inc
pop
push
cs
addb
pop
or
mov
imul
or
mov
push
data16
mov
fbld
and
and
and
lahf
dec
push
cli
sub
sub
jns
add
jmp
arpl
xchg
imul
jae
decl
xchg
orb
pop
lahf
cwtl
vmread
mov
pop
add
push
lcall
add
xchg
inc
sti
add
les
repnz
cld
or
pushl
shll
add
and
flds
aad
leave
add
mov
or
cmp
or
or
jmp
push
std
decl
sbb
sbb
sbb
pop
xlat
sub
sub
ljmp
outsl
clc
ljmp
jo
pop
pop
adc
pop
cli
pop
jnp
pop
jg
mov
mov
or
outsl
sbb
xchg
addr16
ljmp
scas
lcall
mov
movsl
cmpsb
cmpsl
push
test
jle
lods
scas
scas
dec
mov
mov
dec
mov
mov
mov
mov
add
ret
cmp
out
clc
inc
mov
leave
add
lret
xor
into
iret
das
clc
rcl
sub
xlat
daa
jg
mov
fstp
fistps
loope
loop
sbb
out
pop
into
ljmp
in
jmp
cmc
div
pop
stc
sar
add
jmp
pop
lcall
pop
add
jne
sbb
jg
pop
mov
popf
std
or
loopne
push
cmpsl
pop
pop
inc
add
std
pop
ds
and
pop
aam
dec
incl
daa
popa
mov
jne
std
sbb
decl
add
add
loopne
ja
pop
std
pushl
loopne
in
jg
or
fwait
repnz
lods
cld
pusha
and
pusha
add
pop
sti
popa
aaa
pop
lock
push
popa
fsubs
loop
lock
pusha
or
sub
xor
andb
andb
and
add
add
or
je
sub
add
mov
push
std
mov
add
subl
and
sti
push
fbstp
xchg
mov
jl
cmp
pop
or
add
pop
inc
jnp
fildll
bnd
sti
or
fidivrs
inc
sbb
iret
jne
cli
lock
cwtl
jbe
and
pop
sub
inc
repnz
or
push
aaa
adc
rolb
cmp
fisttps
add
outsl
pushl
push
hlt
push
dec
popa
inc
vpackssdw
ljmp
js
mov
inc
mov
repz
sbb
or
repz
pop
mov
dec
loopne
sahf
test
dec
push
daa
push
pop
cs
jg
fisttps
push
pop
add
sbb
loopne
je
fidivl
in
scas
cli
out
inc
es
mov
jae
xchg
cmp
movsb
adc
mov
inc
cmp
decl
rcr
cmp
sbb
insl
mov
mov
data16
cmp
add
dec
pop
inc
inc
outsl
jo
pop
idivl
inc
mov
push
cmp
cmp
mov
xchg
cmp
cmp
cmp
stos
add
sbb
pop
add
jb
or
hlt
cli
in
pop
subb
imul
mov
hlt
cmp
cmp
in
out
sub
cmp
and
sarl
cwtl
and
ficompl
popa
test
in
mov
hlt
cmpl
push
cmp
cld
in
inc
cmp
aam
and
jb
adc
adc
sbb
jg
lahf
push
sub
notl
dec
out
add
ds
neg
fs
je
cmpl
adc
xchg
arpl
adc
clc
ljmp
jno
push
cmp
push
mov
add
enter
out
ret
pop
mov
aas
adc
jecxz
and
aas
xor
ret
aas
inc
adc
shl
inc
out
add
stos
mov
add
add
push
insb
add
sub
les
js
xor
aam
and
in
adc
hlt
cmp
fcomip
imul
dec
mov
adc
xchg
std
push
test
jg
incl
pop
or
xor
xor
sti
dec
xchg
mov
imul
jb
adc
cld
lahf
add
incl
gs
xor
or
notb
loopne
mov
or
jmp
sbb
sub
lret
xor
ljmp
xchg
mov
orb
cs
sbb
pop
mov
or
mov
xor
xor
stos
movsb
mov
xor
xor
and
adc
stos
sbb
fisttps
cld
es
pop
jp
in
jbe
rorl
add
xor
xor
fistpll
jl
push
xor
pop
xor
add
and
mov
test
push
mov
mov
add
mov
iret
ja
xor
pop
aad
push
xor
clc
cmp
mov
xor
test
std
movsl
movsb
cmp
stos
dec
xor
add
outsl
jg
das
push
iret
std
movsb
pushf
ljmp
fsubrl
xor
xor
aaa
jmp
or
cld
sti
xor
xor
xor
rcr
sbb
pop
sub
xchg
daa
lret
pop
mov
gs
xorb
fdivrl
add
cmp
cmp
fcomip
pop
cmp
stos
pop
sbb
add
idivl
sbb
mov
orb
mov
xor
mov
ret
jl
xor
outsl
clc
fcmovnu
enter
xor
mov
imul
mov
in
jle
mov
shr
mov
jne
mov
nop
cmp
cmp
cmp
jg
ffreep
idivb
adc
sarl
shr
sbb
push
iret
outsb
int3
jae
add
inc
sti
lds
sub
xchg
loope
push
lahf
xor
add
aaa
call
cmpsb
cmpsl
mov
jno
movsb
adc
fdivrs
and
pop
nop
add
cmpb
push
dec
lldt
lret
decl
out
mov
arpl
push
add
xor
xor
add
adc
xor
ja
or
pop
mov
add
divl
repz
jo
loopne
fcmovnu
decb
aaa
cmp
nop
cmp
fidivrs
push
cmp
cmp
cmp
inc
jecxz
inc
insl
in
or
add
int3
xchg
cmpsb
inc
cltd
mov
or
xorl
jno
dec
xor
xor
mov
pushf
lock
fcomip
push
pusha
imul
add
ret
pop
cmp
add
jl
xchg
xor
mov
fistpl
enter
lea
pop
in
xlat
sub
cmp
and
imul
in
sub
xchg
adc
cld
add
ja
add
cld
fldcw
jo
add
out
daa
inc
push
decl
out
push
test
inc
mov
dec
mov
iret
aas
jb
cmp
idivb
outsl
adc
out
cmp
stos
adc
les
pusha
inc
out
out
clc
fwait
or
dec
and
mov
push
std
push
pusha
add
ljmp
inc
mov
xor
push
add
xor
js
pop
movsb
xor
loopne
int
sub
call
in
sub
mul
add
add
ret
add
jg
into
jle
mov
mov
jns
xchg
aas
mov
push
inc
and
push
fwait
mov
pop
movsb
jno
ja
fdivs
ret
outsl
jmp
sub
jmp
jl
fucomip
inc
fwait
jno
dec
fadds
in
cld
inc
jg
stos
lds
xlat
or
pop
in
andb
clc
fldt
inc
push
inc
xchg
and
inc
scas
cmc
xchg
and
inc
addr16
lret
pop
cld
imulb
pushf
xchg
stc
inc
or
mov
jl
mov
incl
lret
add
cmp
inc
and
movb
mov
hlt
pop
xchg
add
ljmp
lods
sahf
scas
lcall
mov
fdiv
pop
cmp
ljmp
std
add
push
mov
push
in
data16
int
adc
add
into
dec
in
movsl
out
ror
repz
ss
sbb
mov
inc
push
mov
mov
cmpl
pop
outsl
mov
stos
fcompl
cld
bound
gs
ljmp
add
push
incl
push
rol
add
call
and
hlt
adc
idiv
xchg
jle
cmp
sbb
xor
adc
cmpsb
or
shll
add
out
jp
movsl
sub
es
adc
loopne
std
mov
cld
add
jb
add
xlat
or
jo
lock
jo
dec
pop
sub
add
add
add
add
add
add
push
cld
add
xor
push
add
add
add
pop
loope
or
add
add
insl
std
imulb
das
rcr
jg
xor
jb
adc
jo
lret
ret
add
sbb
add
mov
and
mov
xlat
les
stos
xor
mov
add
lahf
jo
xor
lahf
xchg
je
cs
push
jnp
in
dec
push
subb
test
insb
jbe
lds
xchg
or
xor
sbb
fisubs
add
bound
dec
test
scas
pop
fdivrs
and
sbb
andb
lods
insl
lods
inc
movl
and
jle
mov
sbb
cmp
lods
xor
das
push
push
push
push
pop
xor
arpl
add
add
testb
in
adc
out
push
pop
xchg
push
sbb
sub
cmpsl
lret
test
shrb
inc
adc
inc
xor
mov
mov
roll
test
dec
jmp
enter
rolb
cld
addr16
push
add
lcall
push
push
pushw
jb
dec
adc
dec
dec
push
push
inc
add
imul
das
push
mov
push
addb
sbbb
or
sub
add
xchg
and
mov
or
mov
mov
punpckhbw
mulb
mov
push
mov
pop
sti
adc
pusha
push
cmp
fcmovu
jbe
adc
add
scas
test
lahf
push
pop
jg
add
pop
adc
bswap
mov
subb
movsb
aad
push
bound
rorb
adc
xchg
xchg
nop
sahf
sbb
andb
out
jae
test
scas
imul
jg
out
fwait
fistpl
xchg
or
push
rorb
rolb
rolb
add
shlb
or
add
incl
test
or
js
adc
rorb
out
mov
mov
adc
insl
aaa
ss
out
xlat
fldl
push
push
adcl
fildl
sbb
insb
inc
add
pushf
rclb
jg
imul
pop
shlb
inc
insb
fsubrl
rclb
dec
mov
scas
insl
repz
xor
clc
shlb
nop
adc
shll
rcrb
scas
dec
xor
mov
ljmp
imul
dec
mov
cmpsl
and
cmpl
fwait
mov
iret
mov
or
enter
lock
ss
sti
ja
pop
mov
shrb
stos
jnp
das
cmp
outsl
sbb
sarb
out
jns
xchg
ja,pn
std
std
mov
xchg
shlb
mov
punpckhbw
aam
dec
or
or
or
sbbb
mov
sahf
and
sarl
mov
or
push
dec
add
mov
sbb
mov
pusha
xor
sbb
std
testb
rolb
add
mov
push
lret
sbb
rorb
loopne
jecxz
mov
push
push
jmp
loopne
aas
fcoml
jg
aad
push
adc
cltd
add
lcall
dec
sub
cmc
loopne
aaa
adc
cmp
push
dec
loopne
sar
jl
pop
push
xor
add
push
shrb
aad
insb
push
fwait
dec
test
cmpsl
lahf
mov
rolb
stos
es
sbb
sarl
mov
ret
in
pop
sti
imulb
loopne
mov
jle
movsb
adc
add
test
adc
pop
push
icebp
and
mov
loopne
adc
fcomi
insl
loop
inc
or
loopne
dec
jp
inc
lods
fnstenv
mov
outsl
xor
mov
sbb
add
jg
shlw
fadds
imul
xor
shl
inc
xlat
aad
jecxz
call
sub
adc
in
fs
punpcklbw
loopne
cmp
add
pop
negb
pop
fisubrl
sbb
iret
pop
shrl
jae
mov
into
imul
fimull
xchg
sbb
or
div
mull
dec
call
sbb
loopne
out
jbe
pop
in
aaa
in
fldcw
add
and
add
or
and
mov
and
add
adc
sub
xor
dec
add
cmp
xor
adc
es
clc
icebp
stos
loope
ss
out
jge
dec
adc
aam
decb
ficomps
fadd
adc
xor
loopne
pop
mov
shl
clc
sbb
sbb
sub
xor
jle
sbb
loopne
cld
mov
enter
orl
stos
movsb
out
movsb
and
cmpsb
jge
add
stos
jle
pop
pop
jnp
sbb
jbe
or
mov
loopne
pop
jp
loopne
das
fidivrl
dec
loope
push
dec
sti
idiv
or
jnp
inc
loopne
push
mov
repz
mov
mov
js
loopne
jmp
mov
insb
pop
xchg
insb
pop
jns
stc
adc
sub
jle,pn
push
add
pop
push
insl
mov
loopne
xchg
es
sbb
js
push
add
add
hlt
mov
push
shl
or
pop
mov
loopne
into
push
out
push
ficomps
adc
push
jae
xchg
sbb
or
icebp
cld
loopne
mov
dec
sub
mov
add
sbb
addb
add
das
mov
lock
ja
push
or
inc
cmp
jbe
ds
add
shll
jae
fstpt
add
jno
es
lcall
ret
mov
pop
ja
jo
push
sbb
lock
test
fcomip
sti
in
js
add
sub
adc
test
add
cmp
nop
inc
bound
pusha
mov
jmp
mov
pop
loopne
filds
push
mov
inc
mov
add
repnz
call
fidivs
or
call
shl
jmp
cmc
inc
and
leave
xchg
add
daa
sub
inc
xchg
das
xor
incl
push
ljmp
push
test
mov
mov
in
pop
scas
pop
dec
cld
or
mov
xchg
pop
sub
leave
adc
loopne
mov
lods
bound
dec
mov
lahf
jle
popa
iret
call
fisttps
rcl
push
inc
shrb
sub
testb
decl
pop
pop
addb
outsl
leave
stos
movsb
pop
mov
mov
sarb
imull
sti
xchg
cmp
sbb
mov
ljmp
push
imul
lods
add
popa
lahf
aam
xchg
mov
shrb
jge
addl
inc
imul
mov
cmp
add
gs
std
sti
push
mov
xchg
or
gs
pushl
xchg
inc
ja
add
xchg
jno
adc
adc
mov
jbe
sbb
mov
mov
xchg
lods
xor
or
or
mov
fistl
jno
sbb
add
mov
sbb
clc
mov
std
fists
fwait
fs
mov
mov
popa
outsb
mov
ljmp
jb
jb
add
add
and
gs
push
in
cmp
gs
inc
jb
lcall
xor
push
add
push
dec
xchg
outsw
jle
popa
je
imulb
int3
push
ss
arpl
mov
push
lods
jo
call
pop
push
xchg
ss
fwait
push
je
lea
je
push
fmuls
or
std
ljmp
inc
lcall
popa
outsb
fwait
insb
test
rcl
push
sahf
push
jg
add
fisubs
pushl
inc
in
outsl
jp
icebp
ret
js
in
and
mov
lds
das
ja
mov
bound
pushf
outsl
insl
das
xor
js
addr16
mov
clc
lcall
inc
jbe
pop
push
adc
xor
cmp
adc
cs
loopne
mov
adcl
mov
sbb
loopne
sbb
jno
mov
ret
pop
sarb
add
push
push
fs
lea
je
mov
lds
cmp
xor
sub
insl
and
fldl
mov
gs
icebp
lcall
andb
stos
cmpsb
mov
clc
or
pop
cmpsl
mov
dec
mov
call
in
call
cmpsl
sbb
les
sbb
inc
aaa
out
cli
inc
in
xor
call
div
call
add
rorb
loopne
mov
test
clc
call
mov
inc
push
inc
add
push
dec
add
gs
lcall
sub
and
int
jb
xor
push
add
ror
cmp
adc
inc
mov
stos
push
mov
cmpsb
or
mov
loopne
mov
mov
mov
lods
mov
arpl
add
decb
add
sbb
sub
ljmp
xor
and
daa
out
add
inc
sub
int3
inc
mov
clc
add
std
fists
cld
push
push
enter
repnz
fnstsw
into
rolb
dec
xor
add
incl
sub
shll
fdivrl
rcr
loope
adc
enter
decb
daa
and
aas
cmp
sub
fdivr
outsl
aaa
push
dec
inc
push
or
inc
test
pusha
imul
popa
jle
mov
orb
pop
pop
js
jnp
imul
imul
dec
in
inc
push
cmpsl
inc
inc
inc
sub
lods
jb
pushl
aam
ret
into
and
je
ffreep
icebp
or
dec
pop
aaa
mov
scas
dec
inc
cmp
incb
mov
xchg
stos
repnz
cld
jo
ret
aas
ror
cltd
pop
icebp
push
and
add
fidivrs
and
and
sub
cmp
lds
cmp
xchg
and
and
add
lcall
xor
add
xor
sahf
xor
fdivs
adc
shrl
push
cmp
sbb
cmp
clc
jo
scas
add
call
outsb
adc
bound
dec
das
mov
sub
pop
icebp
cmp
lret
data16
ds
xor
aas
dec
cmp
sub
inc
scas
jg
cld
inc
pop
dec
mov
pop
or
pop
inc
pop
in
push
cmp
fbstp
pop
sbb
add
pusha
aaa
sahf
bound
and
les
insl
sub
cld
push
add
push
pop
fdivrs
hlt
inc
push
sbb
and
mov
dec
jg
pop
mov
inc
inc
push
adc
icebp
sbb
push
testb
sbb
mov
test
ret
fbld
lret
cltd
ss
fcompl
pop
sbb
decl
loop
adc
in
adc
inc
or
fisttps
mov
inc
and
mov
int3
mov
xor
cmp
xchg
hlt
ret
daa
mov
fcmovbe
pop
xchg
ret
fcmovu
pop
call
lods
stos
sti
pop
mov
mov
cwtl
and
das
pusha
add
outsl
sub
je
add
jo
mov
xchg
add
jp
jo
dec
les
sbb
jecxz
jle
daa
cmpb
adc
add
sbb
sbb
push
negl
sbb
aaa
add
or
cmp
sti
scas
adc
xor
in
cmpsl
jmp
in
in
lock
fldt
test
out
hlt
std
icebp
adc
in
and
cld
ljmp
hlt
bound
ret
aad
into
ret
faddp
add
xchg
ss
fsts
shll
pop
cltd
ljmp
nop
sahf
arpl
mov
data16
xor
sub
enter
into
sub
cmpsb
jmp
cli
pop
adc
mov
je
jb
inc
test
or
xlat
fwait
fs
cmp
cmp
and
xor
sub
push
xorl
out
ljmp
push
fdivrp
push
pop
or
in
repz
testl
adc
sbb
and
or
enter
sub
mov
sub
dec
int3
add
aaa
loop
cs
dec
scas
incl
sub
ljmp
add
out
clc
sub
scas
loope
jmp
jecxz
repnz
outsl
xchg
cmp
test
cli
jno
fwait
mov
sahf
or
out
and
out
in
add
inc
movsb
inc
nop
push
push
inc
mov
push
add
sub
inc
imul
push
test
pusha
dec
pop
test
dec
add
xor
cmc
fdivs
int3
sbb
aaa
inc
aas
jo
add
int3
jecxz
and
pop
je
iret
rorb
fld
jmp
clc
vmovaps
xlat
das
clc
pushl
fnsave
mov
add
es
pusha
cmp
das
inc
mov
sbb
into
sub
cmp
cmp
es
out
fldl
loop
sub
faddp
sub
xchg
push
lods
xchg
lods
add
cmpsl
lock
call
adc
in
or
or
cltd
mov
jne
addb
mov
mov
push
fsubrs
andb
repnz
hlt
lock
cmc
cmc
cmp
cld
add
js
jns
ja
fwait
pushf
arpl
xchg
mov
cmp
aas
pop
lret
fmul
cmp
sti
call
icebp
mov
dec
dec
clc
xchg
push
imul
sbb
fnstsw
mov
push
test
mov
push
mov
jp
mov
mov
add
lock
jnp
mov
subb
jo
fwait
lahf
outsl
subl
push
ljmp
fldenv
jae
jno
jne
insb
es
in
std
push
out
call
mov
xor
fcmovbe
leave
insl
sbbl
out
add
jmp
jg
das
push
repnz
fnclex
in
ljmp
scas
mov
lods
ficoms
out
scas
sbb
aam
cmove
lods
stos
in
or
repz
repz
std
and
lock
insb
push
lcall
and
loopne
mov
jp
mov
push
out
ljmp
pushl
imul
ljmp
dec
pop
pop
test
ljmp
sti
push
dec
push
mov
and
gs
insb
sbbl
sbb
jmp
mov
hlt
cmc
hlt
or
lock
mov
loopne
ljmp
dec
cli
call
fcmovb
cmp
ja
push
js
fcmovne
xor
enter
sub
xor
sub
je
sub
out
pop
sar
add
mov
add
in
in
aas
jns
xchg
cmp
jg
xchg
cwtl
xchg
pop
sub
shll
int
xor
cs
cmp
call
dec
inc
push
stos
inc
push
inc
lods
bound
andl
jle
je
jg
jg
xchg
jbe
outsb
xchg
sub
push
scas
dec
dec
dec
mov
mov
or
mul
add
adc
add
sbb
adc
inc
push
inc
dec
cld
mov
mov
pop
and
ret
xlat
fcom
out
jmp
imul
pusha
inc
push
out
jle
dec
mov
push
push
mov
pop
dec
mov
push
jmp
cmp
aam
sub
shll
adc
xlat
and
call
or
pop
ret
or
stos
lods
movsl
bound
ret
jo
fcomp
sub
fistl
inc
pop
jns
fdivrs
ret
sbb
sub
xor
not
pslld
push
cmpsl
dec
pop
repnz
jmp
jg
je
sbbl
loopne
decl
pop
jge
jae
add
lahf
mov
dec
mov
mov
dec
test
scas
xchg
or
loop
sti
cmc
add
adc
mov
xchg
jle
dec
lcall
lock
pop
mov
cli
mov
mov
push
out
stos
pop
cmpsb
aas
ljmp
add
icebp
icebp
adc
clc
out
inc
ds
pop
inc
pop
mov
add
aas
add
dec
inc
mov
rcrb
and
clc
outsl
push
sarl
and
ds
pop
pop
inc
mov
inc
dec
out
imulb
inc
push
inc
lods
dec
gs
inc
jp
lea
push
mov
and
jae
jge
jle
out
pop
dec
push
push
dec
pop
stc
mov
test
pop
stos
movsb
iret
mov
incl
mov
mov
int3
fadd
xor
roll
subb
mov
jnp
and
mul
pop
xlat
lret
mov
or
or
mov
out
push
sbb
divb
inc
inc
dec
mov
sub
ret
sub
sub
mov
cmp
and
test
and
int3
fimull
jg
mov
arpl
push
imul
je
sub
iret
mov
xchg
cld
testl
leave
sub
daa
and
jg
fstpl
push
ficompl
imul
xor
sbb
jge
es
rolb
aaa
jae
pushl
mov
adc
outsb
notl
arpl
fs
adc
sub
dec
pushl
cs
jbe
adc
push
stos
mov
lret
push
mov
sbb
enter
mov
and
ljmp
pop
pop
push
xchg
cmc
adc
inc
dec
cmpl
dec
push
jns
jle
jno
gs
pusha
das
lods
add
and
fwait
xor
xor
fnstcw
das
js
or
and
adc
push
pop
icebp
pop
jbe
mov
pushl
inc
dec
scas
push
push
jns
mov
and
sub
cmp
mov
jbe
mov
sub
jle
adc
lret
adc
test
dec
sbb
jmp
loope
repz
loopne
adc
cmpsl
mov
push
jmp
in
sbb
cld
jg
shlb
sub
loopne
sub
pop
add
sbb
std
repz
ljmp
call
hlt
in
es
icebp
fimuls
sbb
sub
push
or
icebp
adc
push
jo
jg
push
aas
mov
pop
ja
fwait
inc
cwtl
pop
pop
push
movsb
inc
inc
pop
mov
or
pop
push
push
imul
in
repz
pop
xlat
push
push
or
pop
das
adc
push
mov
jns
xchg
jns
jg
pop
jle
out
aaa
lcall
push
pop
lahf
outsw
lea
dec
data16
out
stos
clc
sti
cmp
and
test
xor
sbb
aad
std
jmp
add
and
cltd
jnp
xchg
arpl
mov
outsl
mov
addr16
pushf
je
add
pushl
ja
cmp
arpl
mov
outsb
mov
or
inc
cld
ret
rolb
into
leave
and
and
rolb
cmp
pop
std
int
cmp
fbstp
and
ljmp
fisubs
arpl
push
sub
jmp
and
loopne
or
movsb
or
push
int3
pop
adc
in
add
add
clc
stc
xlat
jmp
add
cmp
std
das
sub
jg
aas
add
jmp
and
ret
ss
adc
cld
adc
adc
adc
cmp
xor
fcmovnu
xor
add
add
fmuls
outsl
jl
scas
dec
dec
sbb
push
push
inc
lods
inc
inc
adc
push
inc
cmpsl
inc
cli
decl
push
add
mov
fs
jb
popa
mov
and
out
cmpsb
insl
mov
mov
inc
mov
mov
dec
scas
mov
push
mov
add
test
jmp
add
ja
pop
pop
mov
push
inc
sbb
push
pop
dec
stc
bound
dec
mov
push
or
mov
inc
inc
inc
mov
enter
pushf
test
lods
and
loope
xchg
cmc
push
xor
stos
sbb
lods
push
push
sysret
in
cs
int3
and
and
add
scas
cli
jmp
sub
and
add
cmp
pop
sub
sbb
das
sub
mov
push
invd
stc
xor
sbb
ljmp
push
jmp
adc
sbb
cmpsb
pop
loope
pop
daa
jg
jle
cs
jp
jg
into
jl
pop
mov
scas
inc
push
inc
mov
dec
mov
inc
insb
js
inc
push
mov
stos
pop
dec
sbb
gs
push
jbe
subl
ja
jp
sbb
mov
mov
dec
lock
stc
sti
or
or
jle
test
dec
imul
jne
subl
push
lea
insl
xorl
mov
jge
inc
add
mov
arpl
mov
add
mov
pmuludq
cmpsb
outsb
jge
outsb
jle
mov
push
inc
push
imul
aas
or
pushl
xor
dec
pop
lea
inc
mov
xchg
test
inc
xchg
xchg
xorl
lcall
xchg
xchg
outsl
xchg
cwtl
mov
adc
out
inc
call
mov
mov
push
mov
mov
scas
jb
aad
sub
rcl
jp
enter
orl
jmp
fs
popa
ja
xor
jo
insb
insb
jne
outsl
sub
outsl
push
jg
pop
icebp
cltd
arpl
mov
mov
push
push
out
add
xor
lock
push
adcl
movsb
inc
pop
dec
jns
ret
pushl
or
shrl
xor
shll
bound
sub
stc
adc
jp
add
push
and
hlt
sbb
loope
pop
incb
jmp
sbb
in
xor
add
loopne
test
jg
cli
inc
mov
cld
sbb
hlt
jecxz
mov
ljmp
xchg
lds
sar
incl
cld
mov
enter
leave
aam
ror
ret
sub
int
or
int3
loope
cld
incl
mov
mov
add
mov
dec
int3
decl
mov
mov
jmp
test
nop
pop
jmp
decl
xchg
mov
popf
mov
lret
mov
mov
sbb
push
fwait
arpl
mov
js
and
inc
fisubs
push
dec
pop
movsl
dec
dec
pop
hlt
push
add
decl
test
dec
or
inc
fnstenv
jle
mov
out
jno
jo
dec
cmp
fucomp
sbb
jmp
or
mov
icebp
incl
loop
insl
sub
shrl
cmp
cmp
aaa
jmp
insl
into
or
les
out
call
add
lret
dec
stc
sbb
cs
push
test
add
outsl
das
pop
cmp
arpl
xor
pushl
test
dec
mov
mov
and
loopne
cmp
lcall
incl
call
ss
ret
dec
in
jecxz
and
neg
and
repnz
cli
out
adc
aam
aas
fcmovnb
fldcw
pop
pop
pop
jmp
ud0
mov
add
daa
fidivrs
and
xor
sub
shl
decl
loop
and
mov
dec
nop
cmp
lds
adc
push
fimull
add
pop
iret
aam
enter
cld
rorl
out
add
add
add
stos
out
mov
mov
or
mov
pop
push
pop
test
pushl
mov
divb
mov
pop
xchg
iret
push
push
aaa
in
lods
cld
lcall
push
sbb
adc
sbb
jp
fsubr
jmp
and
mov
aas
jle
pop
repnz
cmp
adc
jecxz
adc
mov
jb
pop
push
pop
stos
push
pop
add
push
dec
push
scas
jg
jmp
add
sub
sub
loope
sbb
in
adc
add
dec
mov
loop
notb
repnz
jmp
jecxz
in
gs
int
rcr
shll
lds
rol
jne
fcmovne
sub
sahf
add
adc
jmp
push
clc
out
push
mov
loop
test
mov
or
add
pop
cld
inc
sbb
sti
pop
pop
pop
cli
sbb
notb
adc
sbb
push
cmp
lcall
dec
sahf
add
inc
dec
inc
mov
inc
sbb
mov
push
mov
pop
push
mov
add
aam
es
xchg
sbb
ret
xchg
xchg
les
outsb
aaa
lcall
push
cmp
enter
iret
pop
aaa
mov
pop
test
stos
mov
scas
aas
xor
aam
push
subb
lock
mov
adc
repnz
cmpsb
mov
sbb
mov
and
fimuls
fistps
shlb
push
mov
fisubrs
pop
inc
daa
fdivl
aaa
add
aad
sub
lcall
mov
outsl
xchg
cmp
sub
lret
into
notb
pop
sub
and
cs
adc
popa
mov
gs
add
add
xchg
jge
xor
xchg
and
inc
in
sbb
push
mov
daa
int
ja
ljmp
rcrl
dec
stos
lods
fcomi
ljmp
inc
cmpsb
dec
push
fistpll
xchg
sbb
jmp
stos
pop
push
int
jmp
ljmp
shlb
jb
jl
xor
or
aaa
jp
jg
pusha
sub
fidivs
ja
fbstp
cmc
push
inc
sub
adc
or
aas
pop
push
out
cmp
xor
outsb
push
hlt
mov
div
or
call
sbb
lock
sbb
mov
or
fcomip
icebp
ljmp
mov
int
cmp
lret
lret
ss
cltd
and
adc
xchg
mov
dec
jo
cmpsb
mov
stos
or
add
add
lods
push
test
jg
lds
cmp
push
dec
gs
pushf
add
mov
add
xchg
mov
lock
push
insb
cmpsb
add
lahf
stos
add
add
add
mov
mov
lods
jbe
mov
mov
outsb
mov
aad
lahf
data16
fldl
je
outsb
lods
inc
inc
add
mov
cs
outsb
pop
xadd
or
push
add
mov
fdivrl
imul
inc
lea
je
testl
imul
aaa
cmpl
jae
jb
jns
test
add
cli
push
xchg
add
dec
or
arpl
pop
mov
cltd
jbe
ljmp
jae
dec
shl
push
and
pop
push
addr16
push
outsb
push
push
push
mov
pop
shlb
sarb
mov
mov
mov
test
sahf
out
test
xchg
cs
xchg
push
ds
outsl
ud0
or
lea
and
in
and
lds
adc
out
outsl
push
add
mov
filds
add
pop
fsubrs
and
pop
add
and
jl
repnz
push
push
or
add
aad
sub
arpl
cmpb
je
dec
data16
addr16
cmp
lods
cs
add
clc
hlt
cmp
mov
lcall
ljmp
sub
cmpsb
pop
insb
mov
sbb
outsb
push
cmp
inc
xchg
push
mov
jb
outsb
add
dec
divb
nop
add
pop
gs
jp
int
inc
add
shl
in
pop
nop
mov
or
xchg
pop
scas
stos
cmp
fwait
inc
inc
add
popa
and
jnp
cmp
xchg
inc
nop
subb
mov
sub
orb
andb
adcb
xorb
ljmp
leave
add
addb
inc
push
add
pop
loopne
pop
jg
outsb
decl
mov
daa
add
movl
and
stos
decb
subl
dec
bound
push
inc
push
mov
add
adc
push
mov
andl
mov
pushl
push
test
xorl
dec
inc
out
std
incl
dec
push
push
add
stos
dec
push
pusha
stos
adcb
push
cmp
outsl
movsb
dec
dec
mov
push
scas
inc
sbb
dec
jg
addl
inc
sbbl
or
roll
push
in
add
sbb
clc
jg
dec
dec
dec
mov
add
adc
push
pusha
fsubl
cmpsb
pushf
jne
jb
sub
pop
mov
outsl
xchg
outsb
gs
arpl
rolb
add
jno
push
js
mov
pushf
mov
and
mov
fistpl
and
fs
jbe
jo
jb
fs
jmp
jne
xchg
gs
or
shlb
cmp
push
mov
jmp
pop
rorl
inc
add
ret
adc
vpsubsw
scas
call
clc
pop
add
jb
or
or
aaa
and
jle
shlb
imul
insl
mov
dec
push
or
mov
xor
jae
dec
xchg
popa
mov
adc
push
subb
lcall
jae
imul
or
popa
jbe
mov
jle
lcall
popa
xchg
adc
inc
sub
in
sbb
inc
arpl
pop
mov
or
popf
fildll
mov
shlb
rcrb
shrb
adc
test
dec
xor
ficompl
mov
shlb
add
call
xor
test
mov
jbe
inc
ret
cmp
aam
sbb
pop
xchg
insl
xor
inc
insb
outsl
pushf
imul
and
jns
fdivl
dec
fs
adc
arpl
stos
fildl
roll
or
and
inc
cli
in
imul
je
and
and
outsl
inc
fists
popf
pusha
pop
mov
mov
and
divb
and
jbe
mov
imulb
and
and
loopne
xorb
loope
fucom
add
fwait
jle
sub
loopne
pushf
loopne
inc
sbbb
sarl
push
push
xchg
popa
push
pop
stos
mov
push
lods
mov
mov
push
call
inc
cld
add
loope
das
ror
xor
push
jnp
inc
je
aam
mov
mov
incl
jne
test
mov
movsbl
sti
push
or
ret
push
int
pop
stc
inc
cmp
jne
addb
mov
jne
jg
int3
leave
test
jle
mov
lea
add
cmp
or
push
cmpb
stos
js
jne
rolb
add
mov
ljmp
shlb
add
push
jecxz
adc
sub
stos
in
add
xor
std
movsb
rcrb
ret
ljmp
jl
cmp
je
cmp
test
fisttpl
jmp
les
adc
mov
inc
inc
fsubrs
add
decb
or
ss
push
push
decl
sarl
jl
pop
test
jne
xor
jmp
add
adc
call
mov
mov
adc
push
cmp
jmp
and
jg
fucomip
push
aam
jne
decl
inc
sbb
mov
pop
sar
sbb
mov
lea
add
sti
ljmp
call
add
xor
cld
std
jbe
xorb
mov
mov
xor
and
jbe
inc
mov
or
lea
or
hlt
outsl
testb
pop
sbb
mov
cmp
das
mov
scas
aas
or
je
ror
cld
mov
incl
je
mov
add
jmp
cmp
add
movb
mov
mov
aas
xor
sti
sub
add
out
das
xor
jne
int3
call
aas
je
mov
pop
movb
mov
lcall
and
jne
inc
test
jne
add
shlb
cmp
mov
mov
shlb
clc
je
cmpb
loopne
mov
je
push
jl
xor
cmp
fwait
mov
test
testb
cli
fndisi(8087
stos
push
adc
mov
push
push
fdivr
dec
out
add
sbb
add
add
loopne
ljmp
mov
call
pop
pop
ss
test
cmp
scas
clc
mov
inc
push
ss
test
loop
clc
ja
cs
mov
ds
mov
and
add
or
in
or
and
pop
add
pusha
and
mov
addl
adc
leave
clc
push
add
loopne
adc
dec
add
cmp
or
xchg
leave
inc
pop
jmp
xor
mov
cmp
outsl
or
and
jmp
xor
stc
cmp
ja
jp
ljmp
cmp
test
pop
xor
sub
jg
sbb
imul
mov
andl
das
mov
out
xchg
incb
jo
push
push
inc
mov
incb
test
inc
cmpsb
test
and
xor
pop
cmp
mov
xchg
lret
mov
add
scas
push
mov
add
xchg
pusha
or
aas
jge
add
cmpsl
dec
mov
xor
jg
or
into
mov
out
call
push
mov
mov
rcll
pop
loopne
push
outsl
sbb
mov
cmp
jne
addb
dec
mov
je
cmp
sub
jnp
ret
cmp
and
push
aam
orl
and
push
sub
je
sub
mov
inc
xor
repnz
add
jl
add
lock
push
je
pop
mov
sbb
inc
pop
mov
lock
mov
repnz
loopne
pop
pop
add
movl
lock
cmp
dec
adc
pushl
cmp
add
dec
fistl
mov
cmc
lods
lods
mov
and
jmp
jg
lcall
and
jne
addb
jae
add
sub
orb
add
pop
mov
lcall
test
mov
add
ljmp
add
setle
lret
sbbb
in
xchg
fs
iret
add
jo
mov
lret
test
iret
test
fiaddl
rorl
loop
pop
mov
xor
in
add
fiaddl
cmp
jb
or
hlt
fisttps
push
lcall
cmp
imul
mov
fisubs
cli
add
insl
lock
push
adc
push
inc
inc
les
push
je
add
cmpsl
icebp
xorb
add
repz
lds
hlt
in
inc
mov
sar
jmp
jl
gs
dec
mov
and
adc
xchg
pop
std
aaa
mov
pop
jbe
cmp
push
jb
clc
or
and
imul
cli
push
les
out
add
adc
ljmp
out
cli
je
xor
jge
add
jo
jo
adc
pop
add
adc
jp
or
lock
inc
fadds
cmp
sahf
fidivs
jne
int
push
add
dec
inc
je
lock
xor
call
mov
mov
jmp
pop
mov
fdivs
jne
outsl
sub
inc
mov
jo
inc
movzbl
call
insb
hlt
add
add
lock
jl
add
dec
lock
sbb
je
mov
std
jne
mov
mov
add
pop
inc
push
adc
lock
or
adc
scas
jg
aam
clc
add
lea
lea
mov
cmp
out
push
idivb
bnd
add
and
sub
shrb
mov
jmp
dec
scas
and
jmp
addb
xor
sbb
mov
cmp
jae
add
jge
call
ja
incl
jo
mov
pop
cmp
sub
push
xor
or
mov
and
cmp
sbb
mov
cld
sub
scas
in
add
pushf
call
jo
subb
fdivrl
jg
cld
cmp
lea
mov
dec
push
shl
cmp
in
and
hlt
outsl
or
adc
jmp
mov
push
jo
mov
decl
incb
wrmsr
cs
daa
add
les
jae
mov
dec
je
mov
test
lcall
pop
data16
lea
sub
sub
jnp
push
xor
xor
insb
add
divb
sbb
adc
cltd
add
cld
lret
inc
sub
je
in
or
adc
stos
cld
mov
jp
xchg
jl
pop
add
dec
insl
test
mov
adc
pop
int3
inc
imul
pop
and
pushl
test
scas
call
push
into
add
add
pop
fmull
sbb
test
cld
jge
std
dec
lock
imull
cli
inc
xrelease
popa
fists
mov
addb
add
outsl
pop
mov
or
icebp
jno
mov
test
or
js
incl
cwtl
pop
mov
ljmp
test
jle
lock
test
call
aas
je
pushl
or
imul
lcall
and
or
scas
add
mov
xchg
mov
cmpsb
xor
pop
jns
pusha
xor
mov
rcr
add
ret
mov
inc
call
lcall
cli
or
pop
sti
adc
mov
orl
push
xchg
push
dec
push
andb
fcom
mov
push
xchg
jg
inc
and
movsb
in
mov
sbb
and
add
mov
push
in
cmp
shll
bound
lock
movl
push
mov
fadds
push
mov
pop
fldl
cmpl
inc
jmp
pop
mov
add
pushl
push
mov
test
je
add
jbe
or
add
sbbb
insb
repz
mov
call
fists
or
inc
fisttpl
mov
cld
les
push
or
mov
fistpll
mov
mov
scas
mov
or
icebp
lods
mov
cmc
dec
push
adc
push
push
jl
adc
arpl
ret
andl
push
rclb
push
insl
clc
sbb
lock
mov
adc
jp
dec
add
ja
fcos
sbb
insb
and
adc
pop
in
es
clc
push
push
adc
xor
or
sbbl
push
push
pop
mov
lock
pop
mov
lcall
mov
xor
leave
and
xor
mov
and
jb
cld
push
xor
dec
testb
xor
cld
leave
cmp
orb
lcall
out
push
into
mov
xor
push
jo
and
xor
inc
jp
xor
pusha
call
ss
and
sub
orb
adc
cmc
pop
mov
inc
or
push
sbb
or
push
iret
lock
fistps
pop
mov
mov
xor
orb
outsl
decl
or
divb
adc
ret
dec
push
jo
push
pop
and
xchg
sub
or
adc
nop
sbb
rclb
test
xchg
or
nopl
xor
sar
pop
clc
push
mov
hlt
add
shr
mov
xor
pusha
inc
test
idivb
call
or
add
sub
mov
push
pop
push
repnz
hlt
push
jne
fdivs
xor
jmp
push
lock
add
adc
mov
ret
mov
icebp
mov
mov
pop
mov
out
loopne
xor
and
push
call
mov
mov
mov
inc
andl
push
mov
inc
outsl
scas
inc
scas
dec
mov
in
mov
add
in
add
push
jb
loopne
push
jo
dec
push
mov
and
mov
fdivs
add
or
jge
loope
jns
inc
lea
mov
pushl
xchg
add
jl
outsl
into
je
push
mov
fsubrl
ja
or
mov
cmc
and
cmp
cmc
sub
aaa
pop
movsb
or
test
lcall
insb
incl
call
sbb
loopne
test
testb
sbb
in
call
lock
pushf
aam
mov
stos
btrl
mov
jl
push
popa
jno
inc
xchg
mov
lock
mov
dec
push
es
jb
jno
lea
adc
dec
add
jbe
fbld
sbb
andl
scas
xor
adc
and
lcall
mov
inc
cmc
add
repnz
gs
xor
jno
or
push
ret
sub
int3
add
dec
push
test
pop
cwtl
pop
lock
call
mov
xor
push
addr16
cmp
sub
cmpsb
add
adc
std
mov
shl
pop
and
jnp
or
and
daa
inc
or
dec
mov
pushl
xor
loopne
inc
daa
sub
inc
pusha
insb
jo
adc
inc
xor
ljmp
push
add
jnp
inc
cmp
loopne
mov
mov
test
xlat
push
push
jge
shrb
test
xor
lea
mov
dec
pop
insb
repz
ds
inc
xor
mov
jmp
inc
cmp
jl
jmp
or
lods
pop
test
addl
jno
insb
jno
ja
or
mov
test
sbb
sbb
adc
or
cmpb
dec
cmpsb
mov
jl
mov
mov
cmp
jmp
mov
xor
repz
rolb
ljmp
jnp
add
jmp
dec
mov
pusha
mov
xorl
call
add
ret
jo
bound
mov
pop
lcall
dec
mov
jmp
add
mov
xor
call
mov
dec
in
inc
stos
imul
add
sub
xor
outsb
rclb
adc
jg
add
mov
loopne
or
aaa
adc
xchg
jl
pushl
inc
inc
clzero
and
shrl
addr16
xlat
pop
in
enter
in
add
push
scas
adc
cwtl
bound
fsts
mov
icebp
mov
adc
fistpll
mov
test
imul
mov
adc
xchg
fwait
dec
outsl
idiv
add
or
inc
push
mov
adc
fs
neg
stos
aaa
inc
lods
add
sti
leave
adcl
push
add
out
clc
jo
inc
xorb
push
adcb
cmp
shrb
push
cwtl
dec
mov
lods
adc
out
or
incl
xlat
mov
push
movsb
add
bound
mov
out
cli
insl
sub
mov
je
data16
loop
data16
lea
ljmp
mov
push
shrb
jo
pusha
andl
test
insb
cmpsb
fstpt
pop
mov
idiv
and
jbe
and
add
push
xchg
adcb
and
push
inc
enter
rorb
adc
jbe
adcb
sti
je
test
stc
cli
push
mov
les
rclb
adc
ret
jne
insl
and
sbb
cmp
or
loopne
out
shrb
xor
pop
mov
adc
mov
repz
fisttps
xchg
scas
push
push
loope
lea
call
mov
and
push
xor
pop
mov
fdiv
cmp
insb
int3
rorb
fistpl
stos
cmp
out
outsb
stos
stos
jb
or
scas
ret
push
xchg
add
add
add
pop
shlb
add
add
les
outsl
cmp
adc
add
lea
push
repnz
cmp
jmp
leave
fsubs
sbb
inc
adc
sar
dec
mov
add
ljmp
int3
add
lods
pop
adc
idiv
dec
out
inc
je
sbb
xor
inc
xchg
fs
adc
rcl
outsl
clc
loopne
inc
dec
or
xor
out
insb
inc
lock
cs
adc
fmuls
pop
aad
or
cmp
insb
add
in
adc
sbb
insb
add
or
jne
pop
mov
out
adc
jge
mov
je
mov
mov
repz
or
outsb
and
std
and
rorb
orb
or
and
sub
add
push
shlb
sbb
fdivrs
into
cmp
xor
mov
push
sete
movzbl
scas
lea
test
inc
aaa
jo
or
sbb
arpl
int
add
lock
cs
cmp
mov
inc
push
daa
in
push
mov
inc
cld
in
pop
add
mov
jg
inc
or
or
or
lret
mov
leave
je
jp
jne
inc
pushf
jl
rclb
insb
rorl
adc
mov
mov
ret
pop
push
roll
clc
mov
fcomps
into
lods
lea
ss
pop
lret
adc
scas
adc
dec
mov
xchg
dec
xchg
call
mov
or
ret
enter
and
pusha
dec
lea
popa
cmp
ljmp
subb
call
lea
pusha
adc
add
inc
add
mov
push
sbb
call
lods
mov
call
fldl
push
pusha
fwait
sbb
ss
push
decb
scas
xlat
mov
decb
lea
pop
cmp
adc
lea
in
test
add
ss
or
push
outsl
lret
sbb
dec
inc
dec
sub
adc
add
xchg
inc
jbe
add
loopne
mov
sar
jg
xchg
pop
cmp
je
cmovs
add
aaa
je
push
int3
not
jg
jnp
iret
jne
and
addl
je
jl
add
cli
push
pop
cld
aaa
jge
call
add
add
pop
das
cmpw
ja
add
xor
add
outsl
mov
sti
jmp
lea
and
testb
leave
jmp
fistl
xchg
add
hlt
add
clc
ljmp
xchg
test
movl
or
mov
icebp
dec
mov
mov
in
jmp
push
push
xchg
pusha
push
and
andb
fs
pop
mov
xchg
lret
jg
je
mov
push
adc
outsl
cld
loopne
mov
push
or
lcall
nop
sbb
add
mov
xor
push
pop
mov
loopne
cmp
shl
xchg
or
xchg
pop
and
pop
add
cltd
mov
cld
jg
inc
inc
mov
in
movsl
adc
cmp
mov
xchg
inc
loope
inc
add
pop
mov
cld
pop
add
ret
pusha
arpl
push
adcb
hlt
in
adc
call
je
mov
or
pop
data16
push
fdiv
mov
pusha
or
je
mov
or
lods
shrb
ret
movsl
movsl
shlb
loope
sar
aas
loopne
add
cltd
cmpl
jb
or
lea
ljmp
pop
push
inc
pushf
xor
jecxz
loopne
loope
je
pop
dec
push
loop
sbb
aam
js
sub
mov
sahf
add
or
leave
cmp
push
jmp
push
test
push
lods
and
test
push
jne
pop
lods
leave
mov
clc
jbe
lret
call
pusha
call
outsl
mov
and
enter
orl
sti
pop
xchg
mov
jg
pop
movb
imul
std
addb
mov
pusha
dec
pop
push
add
stos
outsl
sbb
loopne
push
cmpsl
dec
add
pop
rolb
push
adc
aaa
loope
mov
pop
pop
pushf
lea
or
shlb
decl
into
pop
push
dec
jne
fiadds
dec
mov
andl
cmp
cmp
inc
mov
gs
pushl
and
fdivr
call
leave
mov
sbbb
and
mov
push
fstpl
aaa
push
je
adc
pop
icebp
sbb
call
push
pop
das
stos
pop
icebp
outsb
jo
push
or
loop
mov
xlat
add
mov
cmp
jle
ljmp
pop
test
stc
dec
cld
decb
jnp
pusha
mov
lea
or
clc
add
call
cmp
or
adc
or
testb
xor
ljmp
shl
adc
shl
mov
mov
mov
shlb
sbb
fmul
adc
fsub
in
je
fcoms
adc
lret
push
or
cld
add
or
and
pop
in
add
push
push
clc
aad
rorl
inc
mov
cli
das
shlb
or
xor
jp
enter
adc
dec
sub
mov
add
jl
pop
add
pop
xchg
adc
adc
inc
and
add
sbb
push
mov
nop
fisttpl
mov
mov
lret
call
je
xchg
shrb
rclb
call
cmp
push
pop
lret
test
inc
jp
mov
xor
outsb
mov
inc
inc
inc
lods
push
cmpsl
mov
cmp
jb
add
add
or
or
neg
cli
xchg
je
mov
cld
jbe
mov
and
push
cld
mov
call
push
push
mov
add
xor
cmpsl
push
mov
stos
adc
mov
subb
in
call
in
loop
sbb
jo
loop
cltd
dec
out
add
pushf
stos
or
in
in
add
lds
lock
xchg
add
pop
call
pand
in
das
mov
cmp
adc
test
sbb
mov
ja
add
mov
xor
push
sub
sti
in
xor
sbb
jl
addb
mov
mov
call
lock
pop
cmp
or
lock
inc
into
xor
jb
out
add
sbb
mov
push
inc
cmp
mov
jo
mov
fcomip
push
cmc
dec
jl
inc
add
mov
mov
push
add
test
push
jbe
jge
aam
jo
add
ljmp
sti
adc
clc
add
adc
mov
js
aad
je
or
pop
ja
pop
lock
call
jle
inc
xor
repnz
divl
push
ljmp
mov
mov
or
insl
outsl
or
cmp
lock
punpckhdq
inc
imul
cmp
in
call
and
or
jno
sbb
cld
or
rep
or
decl
inc
or
or
inc
lock
repnz
jne
insb
push
or
mov
mov
mov
xor
or
jb
jo
sarb
sbb
cmc
aaa
shll
mov
call
insb
pop
scas
sub
sub
shrb
fistpll
mov
test
je
rcl
add
lods
jne
sete
fiadds
stos
jg
ret
jmp
push
call
xor
xor
inc
and
insb
idiv
add
push
mov
cmp
shlb
push
and
push
hlt
aaa
cld
movb
dec
test
add
mov
xorl
or
jl
ja
and
and
ds
cmp
cmp
movsb
ja
cmp
aam
and
add
mov
insb
pop
and
sub
mov
mov
mov
add
pop
xor
push
cs
push
andb
jle
mov
cli
mov
sbb
lods
lock
push
out
xor
mov
cmp
push
xor
aad
pushl
mov
mov
xchg
add
pop
inc
inc
lock
and
je
and
loope
jg
outsl
adc
shll
inc
mov
jecxz
inc
dec
cltd
cmp
xor
inc
push
jb
outsl
pop
cmc
inc
push
push
push
jp
jg
pop
cmpsl
ds
stos
jo
lret
loop
jg
lret
or
adc
test
test
mov
ret
decl
pop
xchg
pop
mov
pop
or
repz
inc
push
push
cmovs
or
outsb
jl
sarb
and
dec
clc
jbe
cld
jmp
jbe
lock
mov
pop
and
lods
add
mov
pop
mov
lcall
mov
ss
das
pop
movsb
decl
rcrb
mov
sbb
jle
shl
pushl
xchg
sub
xor
cmp
sub
mov
mov
dec
adc
push
or
fistps
test
addb
enter
cmpsb
xor
cmp
bound
xor
add
xchg
fisttpll
testb
call
sub
ljmp
call
lret
add
pop
jo
sbb
dec
sub
shl
lret
jne
movsb
scas
fidivl
aaa
mov
js
push
add
lds
incb
mov
mov
add
mov
add
data16
fisubrs
jb
jmp
push
scas
call
fadds
sbb
repnz
inc
mov
stos
in
jg
icebp
adc
push
adc
lea
push
test
xor
push
dec
fstpt
xor
sbb
adc
xor
mov
adc
cmp
fnsave
push
je
adc
stos
test
sbb
push
scas
insb
pop
sbb
xchg
decl
cld
push
shlb
or
cmp
cmpsb
or
xchg
mov
test
je
inc
mov
jb
hlt
icebp
aam
bound
aas
cmp
sbb
dec
icebp
jnp
mov
or
sub
jmp
es
push
scas
cli
xor
aas
adc
out
pop
lods
incl
jle
cmp
add
ret
jne
mov
push
xchg
imulb
or
mov
xor
incl
jge
jp
call
jle
mov
cmp
decl
inc
lock
je
test
add
shll
adc
inc
push
ret
pop
cmp
sbb
or
adc
inc
outsl
jg
cmc
or
pop
notl
jo
addl
adc
repnz
add
popa
int3
leave
pushf
repz
add
sub
repnz
fists
sub
push
jo
pusha
push
or
mov
aaa
ljmp
shlb
cmp
jl
call
jne
in
xor
sahf
xor
push
repz
cmp
incb
add
addl
ret
jo
push
jle
sub
jg
cmp
cld
call
sub
or
jb
js
test
add
mov
dec
lea
roll
mov
mov
js
js
mov
add
push
xor
dec
push
outsl
push
xchg
ds
lock
add
xchg
jle
mov
xor
add
add
xor
adc
or
fcomps
pushl
in
dec
js
mov
jge
je
push
movb
scas
ret
jle
je
mov
rclb
pop
lods
nop
mov
and
enter
ja
jne
repnz
inc
negb
cmp
sbb
and
fildll
add
rcrb
push
add
mov
or
je
adc
inc
cld
rclb
rorb
and
push
pop
ss
sbb
add
ret
mov
or
clc
inc
dec
mov
shll
cmpsl
cmp
adc
push
loopne
or
or
test
sub
xor
decl
jle
add
adc
mov
add
sbbb
or
call
pusha
sbb
scas
pusha
jl
push
xchg
mov
fdiv
or
sbbb
cmp
insb
addl
cld
or
in
xor
dec
pop
jbe
or
outsb
xchg
push
pop
adc
sub
adcb
pop
add
sbb
push
or
mov
or
lcall
lea
std
call
mov
icebp
lret
push
mov
adcb
sbbb
dec
or
dec
call
rcrl
incl
dec
in
mov
mov
cmpl
inc
add
sbbb
mov
decl
mov
pop
pop
inc
fildll
push
inc
stos
and
push
andl
mov
scas
add
add
cmpsb
int
movsb
subb
pop
mov
sbb
and
fimuls
loope
rclb
jle
mov
push
jl
jnp
cmpsl
push
je
negl
push
inc
inc
sarb
jl
call
mov
dec
mov
push
rorb
lret
dec
dec
xchg
pop
cmp
pusha
mov
incl
xadd
or
push
test
flds
movsl
les
sub
and
mov
in
outsl
sarb
loopne
jmp
jb
mov
outsl
add
clc
add
jmp
and
incb
jecxz
add
pop
mov
jmp
aam
outsl
nop
inc
add
add
dec
inc
sbb
mov
and
cld
dec
xchg
or
repz
ds
push
or
cmpsb
or
mov
sub
scas
or
cmp
jae
adc
adc
pushf
mov
xorl
cld
cmp
pop
and
push
cmp
jae
mov
cmp
jmp
jb
shrb
add
or
or
add
and
cld
lret
sbb
or
orb
shrl
cmc
cmp
mov
push
xchg
lock
lock
into
jp
push
add
inc
imul
mov
loopne
add
cmpsb
fldl
mov
dec
xor
loopne
loopne
call
mov
xchg
test
adc
push
push
fiaddl
lahf
adcl
push
sub
and
add
rcrb
clc
jl
push
hlt
data16
aam
lea
js
xor
dec
decb
or
or
pop
add
dec
jns
adc
rclb
fwait
inc
shrb
push
pop
in
call
dec
pop
pusha
mov
ret
inc
testl
sarb
or
mov
lods
aaa
cld
movsb
outsl
push
xorl
jmp
xchg
adcl
lods
add
pusha
mov
je
andl
cmp
test
dec
jbe
inc
hlt
cmp
test
loopne
cld
mull
or
inc
addb
jg
cli
fistps
mov
jb
add
sbb
lea
xorb
sub
lock
fnsave
sub
cld
jmp
loopne
loopne
jne
lods
fbstp
or
out
clc
or
sbb
fsubr
add
pop
jne
int3
leave
fiadds
sbb
inc
mov
pop
mov
sar
mov
cli
jb
push
jne
add
loopne
and
pop
rolb
mov
mov
sub
nop
scas
je
cmp
pop
xor
push
jmp
inc
push
rcrl
jl
push
add
adc
jbe
pusha
jo
in
test
mov
sbb
jmp
inc
or
jmp
jmp
les
cmp
js
call
push
popa
and
clc
add
or
add
mov
ret
lock
mov
mov
testl
cmp
jmp
sbb
rolb
test
mov
in
add
mov
add
add
repnz
fistpl
fidivs
add
jbe
add
jb
cvttps2pi
out
sub
lea
addb
add
sti
out
jo
cltd
cmp
jne
mov
mov
jmp
mov
and
loope
in
fimuls
cs
dec
incb
add
xor
in
rcll
sti
call
cmp
fistpl
lea
pushf
or
adc
inc
mov
adc
lock
loopne
push
fcoms
pusha
push
or
stos
add
das
pop
adc
je
and
clc
lret
and
pop
shlb
or
ret
mov
ljmp
adc
in
adc
push
and
fstpt
inc
pop
cmp
lock
roll
mov
or
jb
test
sahf
out
mov
stos
dec
subl
sbb
pop
or
push
pusha
add
mov
xor
lock
add
mov
inc
adc
loope
pop
mov
pusha
pushf
ds
mov
in
jmp
add
pop
pop
jl
clc
and
and
push
pop
cltd
sbb
xlat
pop
push
add
mov
and
pop
mov
jnp
adc
pushl
je
outsb
lret
jnp
repnz
in
daa
adc
stos
add
xchg
and
sar
aaa
insb
fs
inc
or
add
inc
pusha
adc
inc
les
push
xchg
and
call
mov
ret
sbb
cld
sarb
lods
testl
je
cmp
xorb
xchg
std
cmp
and
inc
add
pushf
pusha
pop
adc
aad
or
adc
inc
jmp
and
jge
jo
bound
jge
mov
std
in
movsbl
add
inc
aam
jne
aam
pusha
mov
addb
and
bound
popa
std
adc
inc
push
ljmp
dec
or
add
push
stos
roll
push
or
add
and
dec
sbb
xor
test
test
adcl
inc
call
push
jmp
sub
xor
add
jmp
pusha
roll
movsb
pusha
sub
and
mov
sbb
aaa
mov
movsb
jne
add
rorb
jb
lahf
pusha
xchg
outsb
inc
incb
push
xchg
mov
pusha
je
in
xor
xchg
das
in
or
and
add
add
adc
jne
js
jo
push
push
lock
add
idiv
aaa
sub
je
adc
inc
push
xor
adc
notb
push
cmp
repz
add
fidivl
insl
fiadds
outsl
push
and
sub
stos
lods
shlb
xchg
xor
loop
rcl
cld
mov
ss
nop
repnz
lock
shl
fcomps
aas
pop
lea
decl
incl
mov
jmp
add
mov
cmc
cmp
sub
xor
jmp
cltd
cmp
in
xchg
and
mov
data16
lods
dec
jl
inc
mov
ret
jo
push
sbb
and
test
addb
dec
xorb
push
test
loop
dec
pop
insb
mov
lock
pusha
sbb
test
std
incl
mov
add
stos
or
fisttps
adc
pop
and
jp
and
add
xor
dec
xor
and
scas
push
add
pop
add
mov
inc
hlt
inc
inc
orb
or
jno
add
dec
jg
mov
inc
fdivrl
or
xor
adc
lock
mov
push
jb,pt
mov
mov
mov
imulb
mov
xor
jo
cli
or
cmp
call
adc
lock
add
std
call
sbbb
cmp
scas
mov
push
ja
outsl
pop
jbe
out
jo
repz
pop
jno
test
or
out
test
jns
call
jmp
mov
and
sbb
dec
std
add
pop
repnz
add
decl
jo
stos
hlt
in
mov
inc
mov
jns
mov
pop
rcl
js
add
mov
add
push
add
pop
leave
ret
ss
mov
adcb
pop
call
scas
mov
call
xor
jae
pop
fdiv
xchg
je
clc
jbe
daa
icebp
and
add
jmp
outsl
clc
mov
push
jo
adc
imul
cli
je
xor
je
data16
adc
daa
je
mov
mov
xchg
pop
fsubrl
add
add
mov
push
aaa
inc
xor
dec
sbb
mov
jmp
das
cli
hlt
mov
cmp
ljmp
inc
into
jb
je
sub
mov
into
mov
jae
cmpb
loopne
scas
add
cmpb
jne
mov
xor
lock
fdivr
pop
cmp
add
jle
testb
push
loopne
xchg
and
rclb
roll
add
out
int3
fildl
aaa
or
add
mov
cld
mov
mov
adc
aam
lea
mov
pusha
and
inc
cmp
jb
fimuls
out
or
call
adc
sbb
pop
jp
loop
jmp
inc
movb
jnp
icebp
xor
outsl
shlb
mov
sbb
lds
jne
xchg
loop
inc
les
int
mov
or
cmp
jo
and
pop
mov
aad
or
adc
mov
jle
or
filds
pusha
or
lea
add
mov
cmp
and
mov
ret
and
pop
add
lock
adc
mov
clc
fwait
sbbl
inc
add
sub
inc
fidivl
or
cmp
cmp
and
push
or
cmp
js
orl
mov
jo
inc
add
push
jmp
test
mov
inc
or
add
sub
jo
add
dec
mov
or
add
bound
mov
mov
loop
xor
ss
push
adc
sub
cmp
je
adcb
xchg
or
mov
mov
pop
or
outsb
mov
cmp
mov
mov
jno
idivl
push
push
xor
push
call
mov
cmp
adc
cltd
in
lret
push
xor
ljmp
mov
pop
call
xchg
dec
pop
add
mov
test
ret
lock
adcl
ljmp
ljmp
pop
push
add
lea
scas
push
pushf
push
lock
ss
adc
xchg
bound
xchg
add
mov
fs
xchg
add
xor
jo
cli
mov
enter
add
je
add
ret
dec
cwtl
cmc
fwait
test
add
mov
or
jne
movsb
mov
sbb
mov
pop
sbb
cs
inc
jl
cmp
adc
mov
push
inc
ret
les
mov
icebp
inc
or
mov
lock
ja
imull
loop
movsl
mov
pop
movq
push
jo
movsb
add
add
xorl
call
test
cld
je
xor
jbe
ret
jo
ljmp
adc
xchg
add
push
jge
or
and
jo
push
mov
jne
xchg
xchg
add
adc
or
push
lea
xor
jle
incl
pop
filds
cli
add
add
jno
jo
and
adc
xchg
push
lcall
adc
mov
pop
xorl
adc
push
jno
nop
ss
add
adc
add
cmpsl
addb
adc
pop
cmp
sbb
xor
push
pop
xor
xchg
add
push
push
lods
lock
jg
mov
jbe
mov
and
and
lock
push
loop
lods
adc
fidivs
mov
mov
add
adc
add
ret
lret
or
or
lock
scas
bound
dec
mov
aaa
add
xor
std
sub
cs
mov
clc
adc
add
add
je
call
push
adc
xor
rcrb
fsubrs
shll
adc
lock
fdivr
jl
outsb
add
xor
or
pop
pusha
and
ljmp
in
dec
inc
mov
repz
inc
xor
push
add
xor
jno
sub
push
ss
neg
adc
and
ret
mov
mov
scas
mov
jno
test
mov
mov
cld
fildll
jnp
jo
rolb
lret
inc
call
xchg
enter
or
push
push
cltd
mov
lock
add
cmp
ds
push
ljmp
inc
and
movzwl
hlt
rcr
ljmp
das
lcall
test
xor
xchg
ds
aam
lea
incl
add
repz
nop
push
push
pop
data16
adc
sti
sbb
in
push
pop
and
mov
lea
fdivr
or
call
and
inc
sbb
mov
icebp
add
mov
loopne
sbb
mov
mov
in
lcall
adc
icebp
subb
lock
rorb
sar
xor
aas
pop
clc
lods
test
push
arpl
mov
call
sub
incl
enter
jle
pop
sub
push
lods
dec
mov
andb
and
or
cmp
movsb
movsb
dec
add
sarl
jnp
shlb
clc
bound
clc
mov
sarb
call
cli
or
push
call
popa
xor
cmp
add
arpl
test
inc
into
add
mov
sub
add
loope
sub
cmc
xor
or
or
inc
push
scas
mov
insl
rol
mov
divl
and
push
scas
add
lret
add
add
push
ss
stos
ljmp
jmp
cmp
cmpl
je
stos
js
popf
les
push
push
mov
call
sbb
test
or
mov
mov
lcall
testl
ja
testb
jg
rorb
fdivrl
fisubl
jmp
push
push
adc
jb
add
dec
mov
xchg
es
xchg
or
outsb
subb
jg
ljmp
je
or
js,pn
mov
fcoml
push
add
mov
mov
jge
jl
add
decb
jne
push
xchg
mov
shrb
fwait
mov
dec
mov
scas
mov
pop
push
jne
push
jmp
lods
cmpb
adc
shll
out
je
je
mov
dec
pushf
push
push
outsb
cld
js
mov
push
xchg
adc
or
and
and
pop
cwtl
mov
loope
lock
je
std
das
clc
pop
bound
push
lea
sub
push
test
loope
cmpb
dec
jne
dec
clc
dec
dec
mov
push
inc
cmp
mov
xchg
pop
add
mov
mov
push
sbbl
xchg
mov
repz
inc
lds
notb
dec
add
loopne
mov
incl
mov
call
jmp
adc
movsb
shlb
adc
pop
cmpsb
out
mov
ret
lock
sahf
cwtl
jp
jne
jle
lods
jg
jo
cli
hlt
jg
add
lock
mov
int3
xor
pcmpeqw
shlb
cltd
popa
inc
sti
cmp
je
neg
sbb
and
jb
dec
clc
cmp
test
xor
push
mov
je
pop
ret
push
push
pop
hlt
repz
pop
cwtl
add
addr16
adc
sbbb
adc
orl
ret
jmp
int3
xchg
add
add
insl
addr16
add
shll
cmp
ljmp
sahf
or
adc
inc
and
pop
aas
mov
shll
or
clc
jl
sub
loope
cli
jge
movb
mov
push
or
dec
clc
sbb
mov
test
push
add
sahf
adc
sbb
data16
stos
push
test
cmpb
push
cmovns
je
fstl
aam
lock
push
out
mov
fsubr
call
cmp
data16
dec
jmp
xor
out
sbb
shlb
push
jle
rclb
loop
push
mov
push
test
fdivr
adc
xchg
adc
xor
lock
adc
dec
push
ret
inc
testb
test
cwtl
call
mov
mov
xchg
sub
dec
add
mov
adc
push
fisubrs
jbe
call
push
sub
jg
mov
adc
adc
addr16
aas
add
divps
pop
dec
jb
sub
add
push
push
inc
xor
jbe
add
test
cmpl
cwtl
mov
push
fisubs
pop
cmp
or
xor
out
inc
pop
js
stos
mov
pop
cmp
ret
loopne
fimuls
and
dec
loopne
dec
sbb
imul
enter
test
data16
fsubl
aad
fidivrl
sub
fs
lods
or
sub
or
mov
in
cwtl
cmp
pop
jbe
or
mov
xor
mov
xor
je
jbe
jo
mov
jne
jbe
hlt
addl
mov
mov
scas
cmp
adc
xchg
cs
add
mov
test
je
lock
or
fidivrs
cmp
std
fldl
rcll
test
loop
test
clc
xorb
dec
je
add
dec
cmpb
add
add
loopne
sub
pop
or
jne
faddp
inc
or
test
add
adc
jmp
mov
or
into
mov
je
sub
push
cs
xlat
cmc
dec
dec
fimuls
or
adc
or
movsb
push
mov
inc
push
and
cmp
lods
les
mov
push
jl
or
fiaddl
cs
pop
in
ret
push
adc
push
cs
sub
push
lcall
movsl
or
testl
pop
loopne
mov
cld
lock
addl
mov
adc
mov
push
lock
xchg
xchg
mulb
movsl
xor
pop
mov
out
sbb
adcb
pop
int
jmp
clc
xchg
adc
pop
pop
call
fiaddl
pop
xor
and
js
lock
jmp
repnz
jbe
inc
or
es
dec
pop
push
lock
jle
aas
or
push
sub
xchg
and
xchg
stos
pop
lock
loopne
in
call
mov
in
inc
mov
mov
xchg
add
pop
sahf
test
inc
sub
test
cmpsb
in
mov
push
testb
xor
cmp
loopne
pop
xchg
add
data16
inc
data16
push
sub
mov
sbbb
sti
mov
mov
jl
cld
push
add
aad
cmpsb
cs
outsl
push
aam
ds
add
and
sbb
fiadds
sbb
test
push
adc
call
inc
out
imull
stos
icebp
add
stc
pop
push
fildll
push
pop
data16
aas
jge
sub
ret
pop
cs
add
jl
fdivrl
push
jne
push
call
push
ds
cld
fs
lea
jge
mov
call
xchg
mov
pop
mov
xor
mov
call
add
dec
push
adc
int
xchg
cmp
lea
lret
lea
xchg
loop
outsb
subb
bound
xchg
sarb
lea
cmpsl
inc
in
idivb
add
pop
cld
fwait
push
data16
and
or
cmp
mov
loope
adc
test
pop
out
fidivs
or
dec
sarb
es
jmp
push
fcom
jo
mov
jbe
daa
test
bound
xchg
dec
psubsb
das
call
inc
push
add
lea
mov
mov
loopne
leave
sahf
dec
out
fdivrs
notb
jb
cmp
ja
sti
jmp
testb
jne
sub
push
jae
adc
lea
inc
jb
mov
idivb
leave
dec
sti
punpckhdq
mov
lret
push
cmpsb
testb
cmp
mov
sub
scas
jecxz
mov
scas
rorb
jne
std
sbb
add
or
mov
loopne
add
pushl
or
mov
sbb
cmp
mov
js
mov
imul
add
mov
ss
mov
sarb
xor
pop
inc
fcoms
mov
mov
push
std
adc
inc
cld
dec
loop
mov
enter
fcmovnu
mov
cmp
sub
decl
clc
inc
cmp
fmull
pop
sbb
jo
lock
decl
cmpsb
or
rcr
fsubrp
int3
call
cs
mull
add
xlat
add
pop
push
fucomip
iret
push
aad
sbb
testb
sub
rorb
push
stos
inc
jb
andl
inc
rcl
into
std
push
test
cmp
data16
mov
pop
out
pop
test
pusha
divb
movb
cmp
cmpb
inc
adc
addl
xchg
inc
scas
fldz
jo
mov
lea
dec
daa
lcall
mov
mov
xchg
into
sub
fucomi
mov
and
div
add
lock
xchg
add
dec
or
jle
hlt
sub
scas
out
loopne
dec
xor
pop
push
push
cmp
rclb
mov
daa
or
call
lds
daa
out
xor
cmp
cmp
sub
fsubrp
or
daa
cmp
outsb
mov
xor
mov
cmp
inc
add
mov
adc
loopne
xchg
push
or
pusha
aaa
clc
jl
mov
pop
pop
add
push
dec
andb
xor
mov
inc
or
addb
jne
mov
in
push
pop
inc
xor
or
pusha
sbb
push
add
mov
fcompl
test
lods
pushl
dec
push
push
mov
pop
mov
cmpb
inc
cmp
hlt
int
pusha
pop
fwait
lods
add
les
mov
push
paddd
cmp
es
rcrb
lock
mov
jle
push
call
add
jbe
pushf
call
xchg
daa
rorl
lahf
cmp
xlat
test
mov
fs
jmp
cmpsb
hlt
push
pop
push
cmp
fldl
out
pop
data16
mov
mov
push
insb
in
push
test
jo
push
fnstcw
dec
data16
data16
and
loopne
sub
inc
clc
mov
mov
pusha
pushl
xor
fisubrs
jnp
add
adc
ficomps
test
cmpsb
push
lock
pop
xchg
cmp
aaa
dec
emms
xor
mov
bound
mov
inc
pop
icebp
fwait
pusha
sub
or
jae
xor
dec
in
cmp
bnd
mov
sub
jbe
or
or
in
jae
push
xchg
out
sbb
lret
jecxz
mov
cs
cmpsb
scas
lea
pop
pop
inc
jle
push
cmpsb
sub
mov
mov
stos
fmull
or
pop
mov
hlt
push
dec
or
subb
gs
jbe
xchg
cmovne
pusha
roll
jl
or
fdivrs
inc
inc
inc
lea
into
testb
mov
dec
loop
mov
cs
lock
push
jb
push
andl
jo
mov
out
or
jmp
sbb
jg
cmp
push
cmp
je
cmp
je
cmp
je
in
mov
jmp
mov
jmp
mov
jmp
mov
inc
out
mov
inc
jbe
clc
mov
mov
call
sub
mov
in
xor
sub
dec
cmp
mov
jg
mov
test
add
mov
cmpsb
push
into
pop
repz
cld
sub
das
jns
cmpsb
ljmp
ficomps
or
inc
ds
je
or
jae
mov
aam
pop
je
xorl
and
push
clc
jg
decb
in
es
push
mov
mov
call
and
pop
es
jle
sti
in
aas
push
lock
clc
out
mov
int3
leave
mov
cmp
cs
cmp
xorl
mov
lea
sbb
in
mov
pop
jge
rcrl
xor
inc
call
mov
and
ds
push
sub
xor
icebp
sbb
fmul
fisubs
cli
sahf
jbe
xchg
push
int3
test
iret
jbe
xor
adc
idivl
addl
and
loop
push
dec
and
testb
shll
mov
mov
or
das
lea
movsl
mov
mov
push
xchg
cmp
xor
rolb
pop
push
call
fmull
scas
add
mov
pop
add
pop
call
pop
adc
sub
aam
fwait
or
lret
addb
or
mov
cmp
orb
jl
dec
xor
push
cwtl
ja
cmp
cmp
lret
adc
testb
pop
cltd
mov
jmp
or
mov
pop
fucomi
loop
or
dec
add
jmp
outsb
jbe
stos
pop
loopne
lea
es
movb
lcall
aam
add
std
and
jb,pt
adc
add
xchg
icebp
dec
mov
fcompp
sbb
add
lcall
orb
adc
cli
jge
push
sbb
cld
test
mov
inc
mov
adc
aaa
jo
pop
sti
dec
cmp
movzwl
add
push
sar
cmpw
jae
xchg
and
adc
dec
adc
inc
cmp
xor
ljmp
pop
push
lds
pop
test
push
sbb
pop
in
pop
es
jp
push
sbb
mov
inc
xor
jp
jne
push
loopne
ret
ret
data16
mov
mov
shrb
call
out
test
mov
lret
lock
add
loopne
xchg
decb
push
out
push
or
daa
xor
mov
and
addl
mov
clc
push
inc
or
jnp
dec
sub
or
out
xor
pop
or
out
lock
fsubp
or
fidivs
mul
call
test
into
push
call
add
pop
mov
icebp
adc
into
jne
out
cmpl
fildll
testb
call
lcall
pop
mov
call
push
adc
imul
sbb
xor
and
inc
jb
icebp
data16
test
jl
cwtl
pop
add
adcl
int3
test
sbb
hlt
inc
addb
sbb
and
mov
cmp
aaa
jbe
testb
push
test
cli
xor
xchg
adc
nop
and
test
insl
mov
cld
mov
fimull
xorl
jo
and
rorl
mov
outsb
pop
sti
sub
add
sbb
push
divb
xchg
dec
inc
xchg
sub
mov
mov
ret
test
loopne
sub
push
pop
jb
inc
sahf
or
adc
sub
lea
push
or
pop
cmp
jne
sbb
mov
aaa
push
subl
fiaddl
jae
stos
addb
sbb
lahf
or
stos
sbb
ds
jbe
sahf
daa
jmp
call
cmove
push
pop
lcall
clc
pop
push
push
dec
sbb
cmp
out
lea
mov
incl
pushf
sub
and
pop
adc
jl
repnz
xchg
cs
push
je
pop
mov
bnd
je
cmp
lea
cmp
fbld
clc
pushl
data16
adc
js
jne
sub
inc
cmp
jae
lock
je
sub
add
mov
sub
adc
hlt
call
add
lcall
clc
gs
jb
jge
and
or
sub
push
rcrl
in
xchg
adc
and
inc
jnp
fisubl
xchg
outsl
mov
cld
dec
or
and
or
jl
cltd
mov
loop
mov
stc
jne
outsb
push
and
in
add
cmpb
stos
cmp
mov
ja
add
add
xchg
inc
mov
pop
adc
test
cmpsb
icebp
mov
outsl
pusha
add
fdivrs
push
xchg
push
push
mov
je
subb
mov
add
mov
cs
hlt
push
ss
push
lock
mov
call
fdivr
sbb
mov
mov
add
mov
sub
test
cmp
inc
aas
push
in
cmpsb
cmp
pop
and
mov
in
mov
sub
call
jbe
xor
jo
add
push
fstpt
add
or
or
xchg
pop
insb
mov
repz
ss
xor
loopne
outsl
mov
sub
inc
sbb
xchg
jecxz
mov
cld
jge
xor
ja
sbb
or
notl
xor
iret
out
mov
push
shl
xchg
adc
inc
out
filds
inc
adc
mov
pop
mov
pop
dec
adc
pop
push
data16
das
add
stc
cmp
cld
cmpsb
dec
sahf
test
lock
rcll
mov
loope
lock
mull
sbb
sbbl
push
fisttps
mov
jbe
fdivrs
xlat
jbe
outsb
cli
cmp
push
adc
mov
mov
jb
push
push
in
cli
addr16
cs
push
mov
pop
jp
push
std
inc
arpl
inc
loopne
je
push
test
xor
add
outsb
ljmp
call
add
add
lea
loop
sahf
scas
call
jge
rcr
dec
stos
push
inc
enter
sub
shlb
push
xchg
cmp
mov
lods
mov
push
push
clc
sub
daa
hlt
pop
out
mov
push
push
push
dec
jecxz
je
or
push
testb
sti
out
or
subb
adc
jg
jmp
adc
jmp
mov
repnz
cmp
mov
fwait
dec
sbb
and
mov
mov
adc
cmp
js
pop
cmp
divb
aam
mov
xor
call
loop
les
pusha
mov
push
pop
sub
add
add
jae
cmp
loop
clc
mov
call
or
push
clc
or
pop
in
pop
mull
pop
xlat
sbb
rcll
movsb
jbe
pop
inc
das
data16
andps
cvttps2pi
cs
call
xor
push
mov
mov
scas
lret
mov
in
rolb
or
pop
push
fsubrp
mov
add
push
or
clc
rcll
call
cmp
push
push
je
imul
add
and
sub
pop
into
dec
jne
mov
aad
loopne
jae
jle
cmpb
decl
sub
adc
popaw
ret
mov
pop
add
jg
jg
ja
movsbl
mov
push
push
pop
add
push
xor
mov
add
inc
pop
and
xchg
xchg
sbb
push
inc
push
push
dec
xor
sub
rcll
mov
push
inc
das
nop
add
aas
push
jb
sbb
mov
decl
add
loop
jl
roll
cld
ja
orb
pop
incl
test
add
or
mov
xor
call
or
xchg
cmp
push
cs
pop
test
add
fiadds
mov
outsl
das
cmpb
push
jb
dec
cmpsl
call
add
and
mov
push
add
mov
std
add
jle
push
fldenv
jg
and
mov
dec
js
pusha
or
inc
bound
inc
pop
enter
pop
fisubrs
call
call
inc
dec
pusha
jp
or
sbb
mov
adc
lcall
xchg
jo
jns
jp
add
rorb
mov
jo
xor
scas
pop
pop
inc
jg
jecxz
push
push
ret
daa
lods
loope
jbe
sub
or
das
add
mov
mov
ds
jbe
push
pop
in
adc
push
std
outsb
sub
push
xor
cs
divb
push
xchg
xor
jmp
push
pop
mov
fmulp
call
jbe
outsl
add
pop
pop
xchg
mov
add
fildl
or
add
xor
call
call
sti
outsl
rcrb
je
xor
cmp
sub
dec
sti
mov
pushl
cmp
jbe
jno
cld
dec
mov
push
bnd
jnp
xlat
je
push
mulb
mov
push
xor
call
dec
inc
sbb
cld
xchg
push
cmpsb
aam
sarb
xchg
idiv
jno
cmp
and
push
scas
fbld
mov
je
push
test
sub
in
add
mov
adc
mov
mov
lds
decb
pop
xchg
push
mov
leave
xor
or
push
or
lret
dec
jo
idiv
popl
repnz
into
pop
jae
mov
inc
test
jne
pop
test
shrb
push
xchg
jo
pop
jb
cmc
pop
loopne
mov
cmp
mov
call
jne
in
cmp
or
push
or
clc
scas
inc
sti
mov
add
and
xorw
jmp
dec
divl
aas
call
pop
mov
lea
pusha
pop
mov
or
xor
add
xor
lock
push
or
xchg
cmp
icebp
xor
push
mov
pop
call
fsubrs
mov
inc
push
cmp
adc
sub
push
jb
loopne
adc
fmuls
inc
inc
jb
adc
xor
jb
loopne
stos
mov
or
ret
dec
insl
xchg
inc
cmp
hlt
lods
lods
cld
mov
push
xchg
adc
lea
jl
cmp
rcrb
xchg
insl
test
popf
loopne
fisubs
xor
push
lods
xchg
push
xchg
test
into
pop
idivb
sbb
mov
je
scas
jne
mov
movsl
cmpl
lods
cmp
adc
push
cmpsb
xchg
jnp
jnp
sbb
add
jge
je
mov
lock
sbb
js
xchg
cmp
ds
mov
addr16
jns
ss
mov
clc
dec
cld
add
sub
push
lea
rorl
pop
int3
add
lret
mov
icebp
xchg
call
mov
loope
xor
cmpsb
push
pop
aam
push
shl
lret
push
push
movsl
outsl
pop
cmp
adc
push
call
rorl
cmp
int3
mov
jp
popf
cmp
inc
aam
mov
xor
int3
sti
mov
push
movsb
adc
in
jg
hlt
ss
and
inc
mov
mov
jbe
pop
mov
cmpsb
pop
xor
rcll
sbb
add
js
mov
pop
clc
out
mov
or
mov
xlat
mov
mov
jle
sbb
inc
add
inc
call
stos
sub
fdivrs
fucomip
push
mov
imul
shl
jg
jne
jne
cmp
mov
testb
mov
lahf
mov
xor
xor
dec
mov
jge
fstpt
into
or
call
jge
jne
or
push
je
dec
dec
insb
mov
adc
push
push
outsb
in
aaa
jle
rorl
xchg
push
hlt
jmp
test
xlat
bound
aam
dec
mov
xor
je
lock
aas
mov
int3
rclb
adc
cmc
xlat
dec
or
inc
push
cmp
lock
adc
clc
les
adc
push
xor
cmpsb
adc
cmp
scas
add
jbe
call
shlb
jb
inc
dec
mov
jle
dec
clc
fadd
push
test
loopne
sti
test
inc
xor
loopne
jp
or
jmp
add
lcall
xchg
mov
jg
movb
cmpsb
sub
jo
ficomps
mov
xchg
aas
inc
notl
jmp
rcrl
mov
push
xchg
mov
inc
add
push
xor
dec
xor
mov
pop
pop
push
adc
adc
pop
lock
cmpsl
push
or
adc
inc
out
push
loopne
pushf
divb
int
call
rorb
hlt
adc
push
inc
mov
in
add
in
ss
pop
pop
pop
mov
push
push
push
cltd
rol
xchg
fdivs
add
daa
cmc
mov
add
push
popa
push
aas
test
inc
and
cmpsl
lock
cmp
je,pn
outsb
add
push
push
add
mov
mov
jo
sub
es
mov
into
iret
or
or
in
dec
cli
cmp
push
incl
data16
add
movl
fidivrs
je
orb
rcrb
inc
and
mov
jp
sarl
push
push
arpl
pop
popa
repnz
push
xor
mov
xchg
or
inc
mov
std
movzwl
jl
test
and
adc
hlt
fsubp
icebp
xor
or
nop
push
mov
adc
stos
call
ret
push
jb
and
loope
jmp
in
adc
cmpb
fdivl
mov
cmp
pop
jo
adc
push
add
jl
mov
jmp
mov
sbb
outsb
push
jb
fs
sbbb
xchg
subl
mov
add
les
jne
call
jecxz
jp
adc
inc
jl
push
jbe
inc
cmpb
sbb
lar
fdivl
ljmp
sahf
lock
and
xchg
lock
je
das
mov
loop
ds
ljmp
cmp
mov
sbb
rolb
pop
lcall
scas
adc
push
aas
mov
sar
jbe
hlt
push
and
sahf
adc
push
shl
lret
add
and
shll
in
and
scas
inc
push
dec
pusha
pop
imul
xchg
dec
daa
sbb
add
lahf
aaa
call
pop
push
push
pop
loop
test
lret
mov
or
popa
hlt
fs
outsb
jb
jmp
in
je
mov
adc
inc
mov
inc
dec
nop
out
shr
sub
outsb
dec
repz
es
movl
add
out
push
out
push
jae
in
push
in
cmp
xchg
adc
pop
cmp
jae
dec
ds
test
or
call
and
and
or
fcmovnb
repz
cs
push
retw
lea
dec
insb
jb
hlt
call
push
adcb
std
pusha
add
mov
mov
jae
push
outsl
mov
mov
pop
out
je
push
call
test
adc
push
dec
dec
lods
call
mov
adc
mov
or
iret
or
xchg
and
pop
xor
rol
pop
lret
jo
mov
mov
scas
push
aam
js
inc
popa
inc
xor
jmp
push
mov
fstpl
je
rcrl
notb
loopne
and
jbe
inc
loopne
pusha
and
adc
mov
bound
adc
push
repnz
mov
pmaxsw
inc
sub
dec
das
out
push
jle
or
lods
sahf
pop
test
movsl
and
call
out
pop
mov
jmp
mov
adcb
in
sub
jns
and
lea
xor
outsl
push
pop
mov
lret
adc
push
fmuls
jg
sub
sub
cs
jg
pop
repnz
fcmovu
je
jne
je
mov
decl
push
xor
push
add
cmp
nop
outsb
xlat
push
call
adc
clc
or
add
jo
xor
jp
pop
jbe
dec
hlt
lret
incl
pop
inc
add
jmp
add
mov
cwtl
mov
pop
cmpsb
ljmp
inc
shl
pop
clc
shll
fs
pop
pop
decb
scas
movsl
fistps
mov
push
sahf
loopne
sti
pop
dec
lcall
jo
sti
js
adc
into
adc
xchg
jle
cmp
sahf
enter
inc
push
adc
ljmp
inc
inc
mov
cld
push
insb
jmp
and
inc
push
popa
jge
mov
pusha
in
adc
ljmp
push
ds
inc
shrb
sbb
mov
sahf
cmp
pop
into
mov
inc
xchg
pop
je
adc
mov
inc
xor
lret
daa
in
mov
mov
into
cwtl
rclb
data16
mov
push
mov
adc
shll
sbb
xor
fldenv
cld
push
xchg
push
hlt
aad
repz
push
in
push
aam
int3
inc
mov
push
or
mov
jnp
pop
movsl
ljmp
test
mov
lret
add
adc
pop
imul
add
jecxz
ror
and
push
inc
aaa
xchg
pop
jge
pop
jle
pop
jp
mov
mov
xchg
mov
test
push
push
cli
sbb
dec
sarl
adc
dec
adc
lock
paddb
stos
movsl
push
movsb
or
sti
les
out
adc
xchg
mov
out
or
mov
pop
test
sub
lock
mov
mov
cmpl
jmp
test
in
call
cmpsb
dec
scas
pop
out
aas
push
pop
and
cmp
pop
push
scas
push
sarl
push
pusha
xor
sub
push
jmp
fldt
jmp
ss
icebp
pop
adc
cmp
fsubrs
hlt
ret
scas
sub
inc
fsubs
jmp
adc
clc
fistpll
insb
aaa
lods
inc
leave
and
leave
lods
and
push
jp
mov
das
idivl
inc
dec
sub
mov
mov
outsl
clc
fmul
mov
in
push
adc
imul
adc
dec
sti
popf
cmpsl
cwtl
pop
adc
inc
repz
jle
insl
ret
jg
int
xlat
xor
push
faddl
and
sbb
inc
push
fs
and
pop
fs
stos
out
ret
inc
ficomps
cwtl
loopne
add
sbbl
stos
out
mov
out
data16
push
aaa
pushf
sti
clc
push
pop
stos
xor
insb
push
cwtl
stc
adc
addr16
das
push
jo
xor
lahf
or
push
fsubrl
shlb
sbb
out
xor
in
inc
out
lods
xchg
idivb
js
push
push
or
data16
dec
push
xchg
push
add
and
fsubrl
inc
sti
pop
adc
and
dec
imul
aas
cmp
fildll
fistl
jne
aad
in
cmpb
xlat
mov
adc
jge
xchg
jge
lods
dec
inc
pop
insl
inc
div
inc
push
push
adc
test
lock
lea
inc
or
mov
sbb
das
mov
push
and
push
fcomps
or
adc
inc
cs
std
or
lcall
add
das
jo
inc
mov
sbb
aaa
mov
mov
mov
cmp
or
stos
push
add
pop
cli
push
dec
shrb
jbe
call
in
test
jb
call
push
xchg
xchg
add
add
pop
js
pop
js
or
incl
inc
lock
lock
es
xchg
dec
push
mov
dec
pop
repz
jmp
in
jne
cmp
lea
rcr
movsb
test
jo
call
mov
or
lea
call
outsl
test
dec
mov
mov
inc
push
test
add
aaa
pop
mov
ret
inc
mov
enter
fs
lret
in
repnz
in
push
imul
hlt
add
call
sbb
fldt
jne
or
dec
dec
clc
fimuls
cmpl
ljmp
loope
lret
pop
dec
addr16
subb
out
loope
popf
cmc
push
pop
cmp
out
push
call
or
sahf
push
gs
mov
das
cld
xchg
push
mov
jns,pt
outsb
rolb
pop
call
jle
add
and
sbb
ss
fistl
mov
add
add
push
mov
orl
mov
stos
mov
imulb
in
fld
fbld
adc
adc
lea
int3
ja
test
inc
mul
and
pop
outsb
fmul
cli
cs
invd
lock
or
test
xchg
or
inc
adc
test
inc
enter
ret
sub
test
mov
cmp
or
mov
mov
sbb
or
sahf
mov
sbb
out
mov
mov
adc
or
or
es
sub
adc
rolb
and
aas
pop
test
mov
mov
mov
mov
fcomps
jg
pop
mov
dec
mov
loopne
ret
dec
or
iret
push
or
jne
mov
push
decb
dec
dec
decb
stc
mov
lock
push
push
rolb
xor
lods
jle
cld
dec
or
xor
ja
inc
in
sub
mov
mov
mov
or
orl
inc
or
and
ljmp
pop
repnz
jne
mov
sbb
out
cmp
jne
rcrb
bound
jne
pop
pop
pop
es
push
push
lret
push
ja
outsl
orl
sbbb
jg
xchg
add
inc
push
pop
pop
sbb
outsb
add
jbe
push
cs
data16
jmp
loopne
dec
jne
inc
push
jg
pop
pushl
ljmp
push
stc
sbbl
mov
loopne
loope
loope,pt
rcll
or
jne
cmp
add
cmpb
call
mov
pop
loopne
cli
and
shl
ds
xchg
outsl
pop
aaa
sarl
std
mov
addb
add
mov
int
outsb
sub
dec
jge
fisubl
into
repz
sti
mov
cmp
leave
cltd
mov
push
push
add
mov
jl
or
out
mov
mov
push
add
add
xchg
sbb
addr16
mov
xchg
pop
or
or
cmpsb
fnstcw
std
dec
xchg
iret
scas
add
int3
sarb
fisttps
cli
leave
jnp
jne
loop
push
sar
pop
push
ret
add
incb
inc
sub
ja
out
rcll
das
int
test
mov
lcall
ss
cmp
jb
push
pop
inc
add
mov
inc
leave
mov
clc
addl
jne
mov
sbb
push
shl
aas
call
cli
ja
cld
mov
aam
ljmp
push
cmc
dec
sti
rcrb
ret
lea
sti
subb
mov
mov
adc
push
test
mov
jl
roll
mov
mov
sbb
mov
add
add
jb
add
pop
jne
xor
mov
mov
ret
cmp
je
push
add
push
call
dec
jne
dec
call
add
or
mov
neg
es
sub
ret
sbb
lea
push
xchg
loopne
jb
mov
movsb
cmc
xchg
mov
push
test
ja
push
in
push
push
cmp
inc
mov
and
ss
test
cli
mov
inc
mov
mov
push
add
decl
add
push
mov
add
cmp
jne
mov
ss
xor
jmp
xchg
dec
cmpsb
push
add
rol
into
stos
pop
and
decl
sbb
lock
call
shll
ja
push
mov
pop
xchg
outsb
in
mov
insb
aaa
cmpsb
add
fs
divl
flds
mov
adc
ljmp
mov
loop
push
les
test
mov
aad
jns
and
cld
scas
or
cmpsb
push
insl
mov
movsb
dec
fstpt
test
or
push
sbb
cld
xor
mov
push
outsl
imul
pop
push
sbb
std
icebp
loopne,pt
add
add
rcll
and
push
mov
movsl
negb
mov
push
call
cmp
lock
adc
outsb
mov
cmp
ret
dec
mov
stos
add
in
jo
lret
jecxz
fmull
mov
or
rcrb
faddl
into
call
inc
sub
outsb
mov
mov
xor
fiaddl
cmp
es
movsb
push
lock
ljmp
jmp
xchg
mov
add
call
les
cmp
mov
push
mov
mov
inc
dec
scas
or
fcomi
lea
mov
add
outsb
into
mov
jmp
mov
arpl
push
mov
jl
push
mov
inc
xchg
push
es
js
xor
jmp
icebp
ljmp
adcl
cwtl
jp
or
lcall
out
push
xor
jbe
insb
add
mov
lock
cmp
ret
inc
inc
jl
mov
jo
add
ret
sub
mov
push
add
mov
fsubs
sbb
dec
ja
sbb
mov
pushf
add
and
addr16
fadd
or
and
mov
int3
add
sar
idivb
xor
int3
andl
adc
sti
push
dec
adc
or
sbbb
xor
and
int3
add
mov
fdivrl
adc
call
add
cmp
imul
addl
roll
std
testb
inc
cmp
inc
jnp
jae
mov
adc
pop
sub
andl
cmp
push
je
loope
cld
incl
shr
xor
mov
and
lcall
fistps
mov
es
lock
clc
or
pop
sbb
mov
jl
pushf
dec
es
adc
sub
orb
inc
and
test
cmp
pop
test
inc
cmp
cmp
or
mov
rorb
cld
cmp
roll
sarb
ljmp
insl
filds
or
call
adc
cli
push
adc
xchg
mov
test
cmpsl
rcrb
call
test
ljmp
mov
sbb
cmp
pop
xchg
xor
sub
xor
inc
and
roll
testb
ret
add
or
add
stos
or
mov
test
inc
mov
fistl
mov
rclb
cmp
xrelease
mov
gs
out
push
stos
movsb
adc
adc
add
es
mov
push
clc
dec
cli
sub
rorb
add
cmp
je
inc
in
aam
into
call
cs
adc
add
or
in
pop
cld
jbe
das
sub
jbe
out
loop
test
or
add
push
xchg
xor
xchg
cli
mov
in
rorl
psubsb
dec
add
add
ds
xchg
andl
hlt
dec
or
test
jbe
sbb
lock
enter
and
adc
jne
inc
in
adc
cmpsb
rcrb
pushf
out
inc
or
mov
idivb
outsl
rorb
lock
rolb
jne
push
xchg
aaa
lret
mov
cs
xor
aaa
add
arpl
out
mov
aam
mov
cmp
addb
xchg
test
mov
push
mov
fsubr
push
add
or
adc
pushf
and
pop
testl
mov
lods
add
je
mov
incb
pusha
cwtl
out
add
not
negb
hlt
test
or
mov
incb
mov
sar
aaa
sarb
fisubrs
lock
inc
pop
pusha
pop
adc
out
rol
scas
ljmp
mov
mov
loop
std
dec
jne
adc
and
mov
push
data16
jo
dec
lcall
popa
jb
cmp
add
push
or
pop
push
pusha
push
add
sub
pop
mov
lea
movsb
dec
sbb
mov
pusha
pop
shlb
jle
rorb
pop
ss
test
pop
pop
mov
push
mov
loopne
jb,pn
or
dec
outsb
lock
mov
jne
lds
cltd
sub
cmp
cmp
or
add
add
pusha
add
lret
adc
in
adc
pop
add
jle
lea
sar
push
cmp
xchg
stc
pop
pusha
push
outsb
mov
outsl
push
dec
xchg
loopne
adc
shr
loopne
hlt
pop
aad
add
push
mov
insl
push
cmp
add
push
pop
mov
cmp
jecxz
ja
je
loopne
aam
or
sub
or
decb
jge
lret
inc
push
inc
adc
dec
mov
inc
ret
lea
test
fildll
clc
add
sub
cli
cmp
cmp
mov
movb
ja
pop
jmp
loopne
push
mov
decb
add
add
jmp
xor
pop
in
adc
loop
or
jbe
pop
mov
cmp
je
pop
in
mov
inc
jg
into
jb
adc
loopne
sar
aaa
cmp
orps
ret
fcomip
pop
mov
bsf
push
data16
push
jb
add
cmp
add
inc
aam
aam
call
je
and
push
lods
push
jb
cmp
call
jmp
je
pop
add
mov
call
loopne
add
loope
cli
out
cld
mov
mov
sbb
jb
lea
popa
fisttps
and
nop
orb
push
mov
scas
cwtl
sbb
dec
mov
std
mov
push
pushf
add
fstpl
add
lea
addl
jg
ljmp
loope
push
jb
popf
in
pusha
adc
pop
popa
or
add
out
xchg
pop
and
xor
scas
popa
push
dec
loop
and
cmpsb
push
and
fcomip
dec
inc
or
xor
mov
push
loope
push
adc
or
sti
call
clc
incl
call
bound
or
jmp
popf
je
add
and
or
icebp
inc
sub
jmp
or
adc
incb
or
dec
mov
pop
les
xchg
test
fbstp
xchg
dec
push
pop
fimuls
or
or
ret
lock
in
adc
insl
lds
shrl
lret
call
daa
ss
pop
add
adc
mov
xlat
cmp
cmp
cld
ljmp
call
cmpsl
xchg
xchg
les
das
loopne
add
add
jne
js
jo
jmp
test
imul
inc
pusha
or
call
jne
add
xor
pusha
adc
bound
sbb
add
sbb
enter
addl
call
in
fisubrs
pop
and
mov
adc
ret
inc
out
scas
in
movsb
pusha
push
push
aaa
or
mov
dec
mov
mov
add
adc
xor
loopne
fsubrs
je
scas
jbe
add
adc
outsl
xor
push
testb
je
push
jp
add
std
jmp
dec
sti
fistps
push
sbbl
add
or
jne
mov
scas
sti
jg
jmp
and
pusha
outsb
xor
jmp
adc
or
jb
fnsave
movsl
add
or
dec
fistpl
cmp
push
lock
adc
and
lock
push
mov
mov
adc
stos
mov
add
pop
lock
add
xchg
jbe
ljmp
test
push
push
adc
mov
add
mov
mov
test
jo
loopne
shlb
in
or
icebp
or
adc
ljmp
sbb
xor
xchg
dec
lret
mov
incb
sahf
aas
xchg
test
push
int3
test
lds
add
push
xchg
shr
mov
add
call
xchg
pusha
js
aaa
jge
mov
and
jo
hlt
ret
mov
test
xchg
and
pop
call
push
jg
outsb
cmpsl
and
and
enter
xchg
push
xchg
test
xor
call
es
sbb
jno
pop
add
or
xor
inc
add
cs
outsl
loope
pushl
clc
mov
shlb
sub
xlat
das
and
mov
push
and
dec
testl
push
inc
call
pop
cli
pop
cli
call
jp
mov
push
lea
mov
les
jno
in
push
xlat
fbstp
xchg
and
lock
jp
rclb
push
push
rorl
pushf
outsb
rclb
outsb
mov
pusha
jmpw
jb
test
xor
ss
mov
mov
mov
call
aaa
add
ja
outsl
mov
dec
adc
inc
or
xchg
mov
dec
push
test
cmp
inc
call
push
inc
cmp
mov
lds
call
mov
ja
xor
push
rorb
sub
imull
mov
pop
add
divl
push
adc
mov
push
dec
jecxz
ljmp
or
xor
mov
and
cmpsl
mov
xor
push
test
mov
mov
push
mov
jb
mov
inc
jp
dec
push
dec
adc
dec
out
add
adc
sub
sbb
jbe
decl
loopne
dec
or
add
xor
mov
or
or
out
jmp
dec
inc
lock
lock
mov
out
repz
sub
test
push
lock
insb
lods
xor
addr16
adc
lock
incl
pop
mov
adc
jo
or
or
jae
push
add
in
sbb
into
adc
push
test
inc
push
pop
lods
popa
adc
xor
call
push
cwtl
xor
and
gs
mov
inc
mov
pop
insl
in
jg
mov
inc
cmp
xor
mov
ret
pop
push
insl
jb
cmp
ljmp
xchg
xchg
sbb
cmp
pushl
scas
addb
push
ret
call
test
cmpsl
xor
pop
mov
repz
mov
test
lods
lea
push
outsl
sbb
push
sbbl
mov
fists
push
insb
add
fs
pusha
dec
jb
adc
and
mov
sar
lcall
jbe
cwtl
sbb
in
lock
push
test
dec
repnz
cli
movl
push
insl
and
jo
jmp
in
jo
add
add
adc
stc
js
mov
or
or
lock
cld
or
mov
inc
push
add
stos
inc
insb
sahf
push
ljmp
lcall
cs
cmpsb
pop
push
xchg
insl
inc
mov
stos
sbb
dec
ljmp
test
push
inc
rolb
fs
mov
clc
push
cs
inc
out
push
and
push
cld
add
sahf
test
incl
push
mov
pop
add
incl
sbb
and
pusha
xchg
mov
add
aaa
incb
push
pop
ljmp
jno
adc
test
cmp
loop
add
mov
mov
mov
or
testb
les
adcb
mov
or
push
cmp
test
add
std
adc
xchg
push
shll
and
into
jmp
stos
mov
push
cld
jno
hlt
add
mov
jp
sbb
pop
hlt
jl
or
xchg
mov
xorb
push
movsl
mov
adc
pop
adc
lods
push
jg
mov
je
scas
mov
jg
inc
inc
lods
aad
add
and
sub
mov
adc
push
cmp
shlb
gs
outsb
mov
data16
xchg
xchg
cld
add
adc
mov
ljmp
fmull
data16
and
and
incb
pop
inc
pusha
mov
push
push
pusha
lcall
push
xor
mov
add
je
pusha
psubsb
pop
sar
fwait
cmp
mov
hlt
xor
sahf
xchg
aam
cmpsl
push
add
call
dec
scas
cli
testb
lcall
jb
in
push
adc
and
pop
cld
cwtl
sbb
jo
inc
lock
testb
adc
xchg
insl
dec
das
imulb
clc
jg
popf
outsl
xor
or
adc
xchg
stos
cmc
add
mov
call
les
fidivrl
jo
mov
divb
push
int3
push
mov
fstpt
inc
fdivl
fwait
call
imulb
jbe
or
adc
cld
subb
push
add
jmp
sbb
sbb
adc
sub
mov
xchg
and
lock
or
adc
cs
aas
adc
xor
je
icebp
or
dec
lds
or
outsb
lock
push
mov
std
idivb
and
xorl
loope
mov
add
scas
push
pop
pop
mov
jbe
fs
mov
mov
or
pop
repz
sub
call
or
adc
inc
call
mov
add
inc
pop
hlt
pop
push
or
add
add
push
and
aam
adc
xchg
push
jg
ret
out
stos
addb
imul
mov
mov
push
push
jbe
adc
pop
pop
data16
dec
push
xchg
jne
pop
fwait
add
xor
adcb
dec
mov
in
mov
xor
mov
cmp
mov
mov
pop
sub
int3
loope
in
in
sub
or
pop
mov
push
or
repnz
out
popl
push
cmp
or
lea
pop
scas
rcll
dec
mov
pop
loopne
mov
cmp
sub
sub
push
js
or
lods
add
mov
add
je
orl
jne
inc
or
sahf
cltd
sub
add
clc
ss
jne
add
jmp
call
stos
call
xchg
aam
cmp
inc
lock
mov
pop
sbb
jle
adc
sbbb
lea
mov
add
test
and
in
cmp
pop
aaa
call
inc
test
xor
shlb
mov
sbb
call
mov
mov
loope
mov
aam
dec
add
push
je
stos
daa
jecxz
or
and
sarl
call
pminub
in
bound
adc
inc
jp
shrb
push
add
mov
mov
sub
xor
lret
mov
test
and
pop
ret
in
pop
inc
jle
jno
cld
mov
add
call
add
sbb
clc
add
test
add
mov
add
sbb
inc
jbe
shrl
inc
sub
push
dec
add
or
fld1
fiadds
adcb
pop
or
cwtl
pop
mov
inc
in
and
lahf
or
pop
mov
cmp
mov
ss
lods
add
sub
or
scas
sbb
push
jecxz
aad
sub
popf
repnz
enter
push
bound
mov
push
push
adc
adc
add
and
fcmovnu
or
cmp
bound
fisubs
jne
arpl
mov
pusha
jp
call
mov
fsubrl
xchg
pop
test
jo
lods
or
inc
orb
std
mov
add
push
fcoml
push
shll
xorb
inc
xchg
fsub
jg
shlb
add
jne
pop
adc
movsl
jle
addr16
addb
add
push
adc
fs
scas
mov
and
lds
bound
cmp
mov
pop
hlt
add
cmp
add
outsb
inc
cs
xor
hlt
cmpsb
int3
scas
sub
pushf
test
or
dec
test
jl
adc
dec
cmp
push
clc
movsb
ds
inc
add
jp
jg
fildl
mov
cmp
outsb
js
pop
and
rcrb
inc
clc
push
stos
mov
mov
test
push
sub
ret
cli
and
sub
in
call
push
add
loopne
push
pusha
shlb
mov
mov
dec
xchg
xor
jle
call
bswap
jbe
repnz
lods
add
test
or
mov
inc
mov
jbe
idiv
adc
pop
dec
add
addb
add
int3
sarb
notl
testb
aas
shlb
add
pop
cmpsl
mov
pop
test
arpl
xchg
add
mov
nop
shlb
pop
std
movsb
mov
pusha
mov
je
cmp
movsb
test
lods
pop
addb
shll
in
pop
lcall
or
or
jbe
push
lods
mov
movsl
push
mov
adc
xchg
jne
ljmp
outsb
clc
sbb
aas
mov
rcll
cld
jl
add
lock
mov
fisubs
push
push
rorl
push
add
rorb
sbbl
fdivrl
fdivr
mov
add
enter
outsb
add
scas
je
adc
mov
int3
loopne
add
lahf
call
adc
adc
subb
push
mov
ret
lea
outsl
xchg
ljmp
call
aas
popa
sbb
pusha
daa
sbb
cmc
loopne
clc
bound
adc
lock
add
pop
push
mov
cmp
cs
jne
cmp
das
call
or
loopne
lods
cld
cmpl
call
into
mov
pusha
add
dec
push
out
loopne
orb
clc
pusha
and
push
fs
add
add
mov
ja
fcoms
and
loopne
popa
jno
ret
loopne
cmpl
sti
jbe
bound
push
xchg
ljmp
xchg
call
popa
sahf
call
pusha
cltd
or
and
aaa
sub
popa
or
ds
fcoml
push
add
insb
enter
mov
call
mov
lock
loopne
mov
sbb
cli
mov
cmp
dec
sbb
mov
dec
sub
xor
testl
dec
jne
decl
push
pop
mov
pop
icebp
pusha
test
addl
dec
mov
lret
pushl
inc
loopne
mov
push
loope
xchg
test
mov
pop
aaa
pop
mov
or
stos
sub
push
or
adc
xchg
pusha
adc
inc
incb
fs
fsubrl
lods
filds
sbb
inc
lret
mov
or
and
outsb
inc
sbb
push
subb
lcall
dec
in
xchg
paddw
mov
js
push
adcb
sbb
mov
cmpb
fmuls
lret
pop
or
dec
enter
push
orb
addr16
inc
pusha
popf
loopne
add
mov
in
pop
push
push
mov
pusha
cmp
cmp
ret
inc
decb
sub
pusha
sub
loopne
push
or
loopne
out
add
mov
push
mov
cmp
insl
inc
stos
lods
jne
mov
mov
cwtl
pop
data16
mov
mov
jne
mov
popa
cmp
cmp
push
and
push
test
dec
popa
cltd
stc
rorb
mov
clc
loop
or
push
cld
pusha
lahf
lea
lods
loopne
mov
popa
add
in
loope
scas
aam
xchg
rsqrtps
mov
popa
mov
pusha
sbb
call
mov
pop
add
push
push
movsb
loop
lret
call
sti
sbb
cmpsb
pop
or
add
xchg
push
js
add
push
mov
push
js
cmp
loopne
pusha
and
ljmp
addw
dec
dec
mul
sub
movzwl
add
stc
mov
add
xchg
xchg
pop
pop
fisttpl
in
inc
jo
pop
outsl
cli
jg
arpl
jb
hlt
call
add
adc
push
and
call
clc
mov
test
lock
cli
xchg
test
cmp
mov
xor
js
mov
sbb
je
xor
sbb
inc
sar
mov
in
inc
out
lock
and
sbb
lock
push
add
int3
xor
push
pop
pop
stc
adc
dec
lret
add
xchg
and
out
add
dec
and
lret
test
or
jne
push
add
pop
insl
repnz
call
jp
loope
adc
sbb
aas
add
int3
jo
add
pop
dec
xor
test
jo
mov
pop
hlt
push
call
jo
mov
inc
mov
push
adc
pop
sbb
adc
inc
jns
or
seto
xlat
cltd
sub
aas
xor
or
jge
lea
call
sbb
add
popa
inc
dec
mov
outsb
roll
mov
pop
adc
incl
mov
adc
test
imul
cmp
mov
dec
aad
outsb
aas
data16
cmp
jl
adc
loopne
xor
or
mov
jg
in
mov
add
xor
movl
inc
and
xchg
jbe
push
mov
adc
clc
and
mov
pop
add
add
aaa
cmpsl
push
xchg
xor
add
nop
stos
hlt
push
cli
inc
mov
stos
outsl
fbld
add
dec
xor
pop
fmuls
rorb
fildl
mov
les
adc
mov
xchg
jle
jo
lds
sbbb
das
inc
je
adc
call
aaa
xchg
and
jnp
adc
and
lret
xor
aad
sbb
dec
add
jmp
or
lret
inc
mov
xchg
hlt
test
and
dec
jo
push
push
cmc
pushl
cltd
ja
pop
and
add
mov
mov
mov
mov
dec
pop
push
jmp
and
fwait
lock
add
lock
sub
stos
outsb
push
cmp
fdivrl
lock
push
mov
adc
add
ja
add
or
subb
inc
js
cmpsb
jge
lock
adc
mov
jns
adc
mov
nop
pop
adc
push
inc
xchg
mov
xchg
and
mov
push
jg
addb
lock
xor
xchg
sar
test
push
mov
mov
push
mov
fildl
cwtl
jg
ljmp
outsb
cmp
or
pop
dec
cmp
lock
adc
push
jno
rorb
and
push
js
je
xor
sti
aas
insl
outsl
pusha
sbb
push
cs
xor
adc
stos
rcll
lods
push
imul
inc
and
mov
fisubrl
je
fisttps
jg
push
clc
in
inc
adc
xchg
pop
adcl
shlb
or
adc
cld
jg
int3
fcmovnbe
and
roll
lock
cmp
adc
jo
xor
call
and
and
or
sti
adc
xor
popa
jne
pop
mov
and
push
push
mov
out
lock
cld
out
jb
mov
add
jnp
jne
pop
add
fisubrs
push
mov
pop
inc
call
xchg
mov
xchg
outsl
cmpsb
mov
or
out
scas
stos
jg
int
mov
jb
and
and
pushl
add
push
jb
mov
adc
xor
add
xor
cmp
cld
jne
push
jge
inc
js
xor
pop
jp
cli
in
and
or
inc
in
sbb
in
or
mov
dec
orb
je
pop
mov
adc
push
lods
push
dec
pmaddwd
mov
inc
dec
test
lret
push
call
push
insb
clc
inc
addl
jb
jo
jbe
in
push
pusha
cli
pop
ss
xchg
lret
mov
push
mov
ret
or
call
mov
add
daa
push
insb
icebp
inc
lock
rcl
decb
mov
jle
pop
jge
lea
pop
pushl
sbb
push
mov
out
add
negb
clc
inc
cmp
jl
pusha
test
jle
push
movb
or
xchg
mov
cli
pop
jl
inc
or
cmovns
fisubrl
dec
jl
inc
sti
jg
push
xchg
mov
fisttps
push
out
add
aas
iret
andl
es
out
push
mov
xor
ja
jo
out
adc
andl
sti
in
notl
push
sub
jg
imul
or
cmp
add
inc
xor
pop
and
std
pushf
es
int3
cmpsb
xchg
mov
add
cmp
sti
push
xchg
sub
adc
mov
xchg
loope
push
push
cmp
jo
push
out
cli
adc
mov
mov
inc
push
mov
repnz
scas
mov
xchg
or
jo
mov
lock
add
ds
je
aaa
stos
mov
mov
xor
clc
je
clc
add
lock
ret
in
jle
mov
and
xor
pop
and
jne
and
jge
sbb
jg
sbb
mov
mov
pop
cmpsl
adc
mov
test
add
jg
clc
inc
xor
pop
push
inc
shrl
shrl
jb
enter
fstpl
jo
test
outsl
imul
aam
aaa
add
mov
mov
and
push
push
test
xor
test
nop
je
call
cld
fistps
push
arpl
mov
lock
lock
push
jb
xchg
js
add
or
clc
movsb
ljmp
mov
decl
mov
and
mov
call
clc
xchg
sub
add
hlt
dec
push
xor
push
inc
add
adc
divl
cmp
aaa
adc
xor
je
bnd
push
sbb
mov
ljmp
stc
adc
ljmp
sub
xor
jmp
divb
call
mov
mov
cmp
movsb
int3
or
lea
lods
push
cmpl
ss
in
cwtl
inc
xchg
jg
fistps
pop
jg
fadds
mov
jp
xorb
xchg
lock
cwtl
stc
lods
ljmp
lock
pusha
clc
into
cli
rorb
shll
enter
orb
or
test
mov
out
cmp
mov
subb
out
pop
ret
inc
xchg
std
outsb
inc
mov
filds
inc
loopne
add
adc
and
add
ret
sbb
jp
int
sbb
rcr
and
sbb
sbb
inc
in
cmpl
add
add
and
adc
ret
mov
or
inc
mov
push
scas
push
mov
sub
adc
sub
and
sbb
js
or
lret
in
call
aas
data16
int3
sbb
imul
add
test
mov
inc
lea
or
mov
push
stos
pop
jne
fdivs
pop
lods
test
shll
add
shl
push
adc
test
ljmp
mov
xor
inc
stos
jg
push
orb
fcoml
or
add
adcb
movsb
push
or
xor
add
cli
sar
or
adc
or
adcb
jl
mov
or
xor
aaa
dec
or
cmc
es
mov
jecxz
ljmpw
mov
popf
xorb
rcll
or
lock
lret
testl
xor
daa
lods
pop
mov
add
or
aam
dec
pop
push
mov
mov
ret
inc
repnz
mov
xchg
mov
fcmovb
add
inc
orb
outsb
test
pushf
addb
flds
testl
xchg
mov
mov
insl
dec
push
sbb
ficomps
add
push
in
or
scas
mov
inc
es
imul
push
sbb
push
pop
sub
or
out
sub
or
cld
jecxz
ret
and
add
cli
mov
add
add
cli
mov
lea
shlb
fistl
or
cmp
push
roll
in
cmpsb
std
ret
push
cmp
mov
xchg
push
adc
push
jmp
jcxz
jp
pop
sar
in
inc
shrb
roll
add
subb
push
push
ret
xor
cmpb
add
ret
adc
mov
and
adc
daa
and
das
js
ja
stos
cwtl
rclb
adc
rclb
enter
dec
push
pop
jp
adc
cli
fcomp
lcall
add
cmp
sarb
add
stos
and
xchg
fbld
adc
add
movsl
cmp
inc
pop
lret
rorb
mov
aad
popf
sbbl
jb
and
push
mov
psubd
and
pop
loope
out
and
call
pop
adc
adc
testb
sbb
add
lods
ret
and
push
xchg
or
shlb
add
outsl
jg
jne
mov
test
rolb
cmp
pop
and
stos
dec
scas
sbb
pusha
cmp
daa
add
xor
mov
pusha
jo
loopne
xchg
inc
push
and
pop
lcall
pusha
int3
adc
jecxz
bound
mov
sub
decb
inc
xchg
loope
sahf
jp
push
loopne
pusha
dec
add
or
xadd
pusha
add
rorb
jmp
loope
or
mov
or
mov
push
dec
jb
jg
or
push
add
mov
popa
jg
add
fimull
add
jmp
into
orb
pusha
sbb
add
inc
movsb
ret
mov
mov
jg
cmp
mov
hlt
cmpsl
out
lock
pop
loopne
test
and
loope
xchg
add
and
xchg
dec
outsl
std
notb
stc
cmp
cmp
fldenv
out
clc
in
pop
loop
push
loopne
adc
loope
push
and
xchg
fcoms
inc
ljmp
push
lea
mov
jmp
pop
test
add
loopne
mov
outsb
lods
loopne
test
insb
adc
xchg
mov
xchg
loope
lea
dec
and
jl
scas
adc
nop
daa
hlt
shrb
loopne
test
pusha
sub
xor
add
push
fisttpl
xor
sbb
loope
popa
jbe
pop
add
addr16
or
scas
add
inc
repz
and
loopne
loopne
xchg
xchg
loopne
ret
hlt
pusha
xadd
sub
popa
sahf
aaa
inc
fwait
inc
insb
jmp
andl
es
mov
icebp
popa
cmp
sub
mov
aam
push
or
popa
xor
mov
mov
iret
call
mov
int3
jmp
jl
mov
lcall
fcomp
xchg
insb
jp
outsl
pop
and
xor
mov
lods
adc
imul
jne
je
xor
pop
jmp
ja
call
and
inc
cmp
popa
adc
sub
or
adc
mov
and
adc
xor
pusha
sbb
xor
cmp
mov
xchg
mov
xor
je
fidivs
xor
inc
pop
push
test
aaa
inc
in
mov
incb
sbb
call
mov
add
jo
jbe
mov
adc
pusha
pop
xchg
jo
shlb
fildl
pop
or
jl
popa
and
loopne
out
jp
pusha
repz
xor
call
pop
out
or
cli
adc
loopne
mov
dec
gs
mov
inc
mov
call
cmp
add
jbe
mov
inc
nop
loopne
call
pop
mov
add
pusha
ss
loopne
loop
loopne
scas
and
popa
orl
fisttpl
mov
cltd
dec
lcall
adc
add
cmc
pop
decl
mov
dec
push
xchg
jb
sarb
pop
test
arpl
ja
add
inc
inc
pop
mov
clc
outsl
or
jecxz
adc
add
fcoml
push
xor
decl
call
call
bound
loopne
and
ljmp
std
rorb
sub
movsb
pop
iret
inc
incl
shrb
jb
mov
enter
mov
inc
popf
movsb
psubsb
fcomp
insb
stos
test
inc
mov
pop
xchg
push
mov
and
inc
fisubs
test
rcrl
stos
cltd
jo
cmp
ss
mov
cmp
mov
dec
add
inc
outsl
sub
mov
push
mov
test
dec
scas
and
pop
xor
or
ss
out
gs
shrl
adc
or
data16
call
mov
clc
pop
mov
sti
jg
lock
and
jo
jb
mov
ret
cmpb
xor
mov
roll
xor
adc
jb
fdivrl
push
dec
addr16
push
lods
fbld
out
shlb
add
and
out
jo
ret
pushl
and
mov
mov
xchg
xchg
lock
call
xor
call
push
int3
or
jg
push
paddsb
out
jae
push
lock
or
fdivr
jo
mov
adc
jmp
cld
adc
adcb
mov
push
jl
and
aaa
jne
fisubs
inc
mov
sahf
xchg
jo
and
bound
or
mov
cld
pop
mulb
leave
clc
mov
sti
cmp
add
stc
add
testb
or
int3
out
push
xchg
mov
jns
insb
push
cli
fisttps
and
push
insb
add
jb
pop
push
push
mov
add
add
sub
lock
out
xchg
fwait
bound
aaa
xor
mov
outsl
hlt
mov
jge
or
ljmp
inc
mov
orb
xorb
push
jne
push
bound
push
dec
push
inc
std
out
jb
popa
mov
adc
fsubr
jmp
xor
mov
lock
push
jae
notb
gs
pop
lock
lret
or
mov
push
adc
xor
jo
xor
int
push
sbb
imul
adc
jb
inc
in
in
mov
imul
loop
xchg
lret
lock
adc
push
ds
insl
call
pop
into
jmp
stos
pop
mov
mov
fists
mov
push
xor
sub
mov
sar
addl
xchg
pusha
outsb
lock
fs
cmp
les
popf
clc
or
ss
repz
bound
add
mov
mov
popf
icebp
sub
ljmp
add
mov
lea
dec
or
push
mov
jb
adc
loopne
cmp
add
nop
pushf
jl
addb
mov
jne
cld
add
outsb
adc
sub
sarb
or
jbe
push
sahf
add
adc
repz
lcall
inc
outsl
cmpsb
push
adcl
pop
js
cmp
inc
jb
test
mov
cli
jo
push
mov
push
fdivl
mov
movsl
or
dec
adcb
mov
jmp
xlat
fucomip
movl
insb
jb
das
lock
mov
je
ds
cmpsl
mov
add
mov
je
jo
inc
jb
mov
or
stos
nop
adc
cld
jmp
enter
lock
icebp
xor
je
aaa
ja
push
inc
icebp
pop
mov
inc
in
jbe
call
xor
xor
sti
pop
cmp
roll
iret
jo
sbb
notb
jge
out
add
pop
jne
fsubp
inc
cmp
push
pop
pop
jg
jo
sub
jno
pushf
cmp
jge
test
mov
shr
lock
add
xchg
push
out
sbb
jns
rolb
mov
aam
sub
imul
je
sub
lret
sbb
out
cli
push
xorl
push
inc
pop
xchg
jo
mov
push
inc
es
pop
in
push
add
inc
or
mov
sbb
stos
js
ret
fwait
mov
les
push
adc
in
adc
ja
sbb
cwtl
mov
lock
or
lcall
mov
xor
fsubl
aad
in
mov
pop
clc
xor
mov
inc
and
nop
call
mov
dec
loopne
sti
stos
xor
mov
or
or
lret
call
push
jle
push
jmp
rorl
inc
add
mov
enter
test
adc
cmp
enter
or
mov
dec
mov
jg
icebp
call
mov
lock
fisubrs
adc
push
mov
adc
push
pop
test
pop
xor
fimuls
scas
xor
call
and
jo
mov
and
and
jo
dec
mov
push
pop
push
pop
loopne
mov
repnz
adc
ljmp
stc
add
xor
inc
and
lea
cmpsl
mov
and
andl
push
mov
fldcw
das
shrb
int
mov
add
push
mov
mov
fsubl
cmp
ret
adc
jns
xor
jp
call
jo
jecxz
xor
lock
mov
test
jb
and
scas
pushl
mov
adc
mov
push
push
decl
andb
call
mov
push
sub
xchg
scas
in
and
xor
fs
sar
push
add
and
sbb
add
pop
mov
insb
jl
cmp
cmc
stos
jl
out
call
add
adcl
push
sbbl
mov
sub
xor
ljmp
out
js
lock
adc
testl
ja
loopne
push
lods
je
loopne
loopne
add
sub
sbb
mov
je
cmp
xor
out
rol
push
bound
lea
sti
addr16
dec
cld
mov
add
adc
push
popa
add
rolb
xorl
ljmp
es
push
mov
mov
fcomp
decb
lods
je
ret
xor
xor
out
jg
ret
mov
add
xor
sbb
mov
scas
push
or
push
push
bound
xchg
pop
pop
push
jecxz
mov
in
enter
cmp
sub
bound
lea
je
ret
test
outsl
add
pop
pop
incw
sub
clc
push
dec
add
and
jb
pop
in
lea
or
mul
jp
mov
add
call
inc
call
mov
pop
je
pop
ret
xor
pop
lea
in
inc
std
clc
enter
test
add
mov
or
or
adc
in
sbb
dec
add
and
ret
mov
xchg
int3
scas
ss
test
js
call
push
test
aaa
sbb
push
push
add
xchg
mov
add
jl
test
inc
fdivrp
adc
jne
jbe
clc
and
lret
subb
mov
xchg
add
hlt
das
call
add
sub
pop
or
add
popa
pop
push
int
or
push
fisttps
imul
pop
jne
mov
pop
test
rolb
scas
negb
sub
pop
sbb
jl
outsl
push
loop
mov
test
mov
mov
inc
call
xchg
jne
mov
cli
call
cmc
xchg
cmp
call
jne
mov
dec
rorl
or
or
push
adc
cmp
add
das
sub
outsb
cmp
sbb
shll
sarb
mov
lock
jmp
mov
inc
lock
and
addb
inc
dec
lds
inc
jnp
jp
lcall
shlb
xor
mov
sbb
mov
adcb
pop
out
add
data16
test
je
fcoml
inc
adc
adc
jbe
outsb
push
pusha
adc
orb
adc
pusha
jb
push
jbe
ret
cli
adc
sub
pop
decl
pusha
pop
jb
push
jle
mov
loopne
cld
xchg
adc
and
cmpsl
call
hlt
je
or
adc
pop
mov
test
jle
xchg
fwait
add
mov
aam
mov
pop
adc
ror
xor
jnp
sbb
rolb
fiaddl
enter
addr16
out
fs
nop
pop
add
xchg
sbb
push
push
mov
sbb
sahf
int3
jecxz
push
pop
imul
out
mov
fs
add
notb
sub
lcall
add
push
lea
adc
rclb
aaa
sub
sbb
aam
mov
aas
push
cltd
js
inc
jl
mov
in
add
inc
mov
ret
or
rep
mov
xchg
push
and
inc
loopne
xchg
mov
mov
mov
adc
mov
mov
std
outsl
or
sahf
inc
xlat
push
ds
mov
mov
fdivrp
outsl
movsb
mov
cmpsb
or
xorb
sub
out
insl
imul
test
adc
scas
inc
roll
dec
mov
fwait
in
pop
repz
lcall
in
inc
mov
mov
jno
jbe
mov
fidivrs
push
cmp
or
mov
mov
int3
or
push
push
adc
jnp
xor
aad
or
inc
rcrl
mov
mov
jl
mov
mov
push
sahf
aaa
daa
mov
scas
push
fistpl
push
pop
mov
mov
fnstenv
out
mov
mov
imul
in
jecxz
out
inc
aas
bound
fcmovbe
cld
popl
repnz
or
push
jg
rep
shrl
pushf
loop
pop
mov
mov
inc
orb
cld
mov
pusha
sub
inc
dec
fldt
ret
shl
lods
mov
inc
jo
xor
push
mov
xchg
fnstenv
loopne
and
inc
or
fmuls
mov
or
mov
mov
mov
pushl
push
inc
xchg
loopne
loopne
out
cmp
bound
jp
sbb
jecxz
push
in
clc
mov
or
inc
vpavgb
and
call
jmp
dec
and
cmp
dec
fildl
shll
xor
es
push
dec
sub
out
clc
mov
push
sub
mull
rcrl
rep
clc
fisttps
cs
loopne
xor
fisubl
adc
pop
fisttps
loopne
int
inc
add
loop
ds
daa
cmp
fildl
inc
inc
xor
and
jb
lcall
add
js
add
mov
inc
pop
mov
add
loop
dec
mov
sub
dec
insl
mov
in
dec
inc
bound
add
mov
cmp
cltd
inc
and
add
mov
push
inc
and
cmpsl
insl
rcr
lock
pop
mov
pop
outsb
dec
sbbb
cmpsb
loope
or
mov
mov
jmp
outsb
inc
jle
or
mov
mov
outsl
push
inc
cmp
insb
mov
inc
cltd
arpl
mov
insb
sub
or
push
ss
mov
mov
mov
pop
sub
sbb
jecxz
cltd
sbbl
push
std
sar
jl
jnp
mov
lea
loopne
sbb
callw
xor
daa
jb
inc
lea
data16
outsl
in
jg
cmovns
shrw
or
xor
test
cmp
inc
inc
dec
loopne
jl
mov
decb
fildll
js
insb
jl
in
mov
mov
lock
add
jo
mov
cld
add
or
out
push
push
scas
push
dec
add
push
sub
and
jae
add
and
sub
add
dec
std
xor
push
mov
xor
push
inc
mov
decb
lea
jo
lea
test
lcall
stos
loope
xchg
add
jg
xchg
mov
push
xor
inc
adcb
ret
inc
std
aaa
or
jno
pop
lds
jle
test
test
aam
test
add
lock
lods
xchg
lock
incl
jo
mov
mov
insl
mov
insb
and
jne
mov
lcall
enter
inc
add
xor
test
add
adc
aaa
push
push
test
mov
insb
aam
dec
je
mov
dec
sbb
mov
add
mov
decl
mov
mov
aaa
add
add
call
subl
sarb
or
cmp
or
add
imul
out
gs
lcall
and
xor
inc
cld
icebp
or
test
mov
xor
fstpt
jb
jmp
cli
push
inc
inc
lock
test
pop
test
scas
sub
jle
add
je
cld
cmp
xorl
pop
call
inc
ljmp
adc
js
add
lods
int
add
pusha
xor
pop
jl
xor
or
clc
add
mov
lock
and
push
insb
test
adc
scas
call
xor
jmp
add
fbstp
jno
adc
sub
incl
roll
std
int
push
fsubl
mov
add
pop
popf
aam
xchg
push
call
sbb
mov
adc
call
and
push
push
xor
and
movsl
fistps
leave
jne
cmp
cli
shrl
and
dec
loopne
push
push
notl
jg
lock
xchg
pushf
lock
dec
dec
xor
lcall
aad
lods
mov
adc
arpl
xchg
xor
pop
mov
test
push
fdiv
xor
lock
push
mov
lods
lods
mov
add
or
xor
xor
xor
push
add
adc
adc
lea
in
stos
rorl
xor
and
pop
sbb
scas
add
jp
cli
mov
dec
add
xor
pop
lods
add
add
cmpsb
jne
dec
cmpl
ja
push
push
and
pop
imul
loopne
and
xchg
or
jp
loope
push
lods
mov
xor
fbstp
cmp
rcrl
mov
insb
jge
jmp
xor
xor
sahf
inc
sub
rorl
sarb
mov
or
mov
jmp
out
inc
ret
mov
orb
jle
scas
pop
dec
or
ss
mov
inc
or
outsl
add
pop
add
lret
cmpsb
mov
adc
pop
les
or
add
jae
cltd
mov
ljmp
repnz
out
jne
repz
decl
or
pusha
icebp
or
lock
add
cmp
mov
push
inc
aaa
jo
cmp
cwtl
fisubrs
cmc
jg
add
loopne
adc
jne
data16
inc
add
push
stos
adcl
cmc
pop
xchg
fxch
inc
cltd
es
sub
jg
add
call
movsb
cmp
adc
clc
cmp
xchg
or
add
and
addl
movzwl
std
cmp
mov
add
clc
adc
adc
addl
mov
pop
fcomi
aad
push
pop
add
je
jbe
data16
je
add
fidivrl
int3
fdivr
dec
jne
rcr
jg
fucomi
pop
xchg
stc
sub
adc
cmp
imul
enter
push
sub
mov
rolb
push
xor
mov
sub
dec
add
aaa
inc
rolb
std
push
xchg
sbb
mov
mov
pop
add
fistl
push
mov
fldt
pop
lret
andb
mov
adc
pusha
push
xor
push
push
add
mov
pop
rolb
aaa
dec
clc
ja
lock
icebp
das
jmp
sbbb
sub
inc
leave
add
divb
mov
fisubrl
lea
sub
sub
xor
and
in
sbb
xor
or
xor
pop
rorl
into
aas
push
jg
stc
sub
dec
add
and
inc
xchg
sub
cmp
outsl
or
insb
leave
jb
sarb
jmp
add
dec
mov
je
mull
add
or
inc
add
test
fbstp
jmp
mov
jo
add
mov
cli
jle
cmp
sub
mov
push
je
cmpb
mov
xor
push
inc
sbb
mov
push
adc
add
mov
push
test
sub
mov
inc
mov
inc
cmp
mov
push
sub
jmp
xor
and
mov
push
ja
add
mov
or
rcrl
lock
inc
and
mov
mov
add
mov
and
adc
lock
inc
int3
jbe
mov
xor
add
mov
in
incl
rcll
add
adc
xchg
nop
hlt
xchg
nop
mov
add
call
fiadds
ds
loopne
jg
inc
inc
or
addb
jne
cmp
btc
inc
repz
cwtl
xor
or
pop
mov
aam
mov
dec
add
std
orb
pop
adc
jb
sub
mov
add
insb
sti
aaa
je
mov
add
and
outsb
mov
dec
inc
pop
rcrl
or
jo
bound
jl
fidivl
scas
adc
mov
push
orb
cmpsb
ss
dec
stos
mov
and
mov
bound
xor
mov
add
and
stc
lea
nop
or
stos
push
aam
lock
cltd
lods
jmp
addr16
mulb
inc
jo
je
add
mov
xchg
decl
loopne
jne
and
dec
add
jb
cld
clc
jmp
add
hlt
and
inc
add
or
push
push
xor
out
add
mov
call
cmp
jnp
sbb
mov
push
cld
add
pop
data16
xor
jge
jmp
add
cmpsb
inc
push
rclb
insl
addl
or
mov
addb
lahf
add
push
or
or
adc
test
aam
xlat
push
addb
adc
pop
mov
inc
aaa
int3
lock
pop
fucomi
int
dec
add
ret
je
into
dec
and
mov
call
jmp
in
les
jl
and
data16
je
mov
cld
sbb
out
sbb
je
sub
cld
pushf
or
add
aam
loopne
adc
pop
cmp
sub
dec
or
or
aas
mov
orb
movl
mov
pop
cmp
daa
and
push
inc
dec
add
test
lods
jnp
aam
add
add
es
mov
sbb
stos
out
orb
xchg
mov
in
pop
sbb
jg
test
dec
cmpb
rorb
ficoms
add
lcall
outsb
es
xchg
adcb
adcl
adc
push
sub
aas
push
pusha
test
add
icebp
test
js
jge
pushf
push
add
enter
imul
xlat
nop
cli
sbb
sbb
lret
add
or
inc
stos
jae
jle
pop
es
pushf
rorb
test
push
test
add
inc
adc
jmp
movsl
rorl
mov
pop
addb
add
testb
push
add
push
add
fadds
movsl
es
sub
or
or
pop
in
add
or
push
xchg
lret
cmovl
sub
out
je
mov
adc
cmp
dec
and
push
adc
lea
jmp
add
add
sub
sub
bound
aam
shlb
hlt
mov
adc
fs
lcall
adc
sbb
sub
adc
inc
clc
or
shll
int3
popa
mov
fcomip
adc
arpl
jbe
bound
sarb
arpl
outsb
add
or
loope
adc
mov
in
sub
and
pop
shll
adc
and
add
rorl
cld
pop
inc
outsb
xor
pop
mov
pop
jo
in
jb
mov
ljmp
add
push
adc
pause
movl
rclb
jge
push
loop,pt
ds
out
sub
icebp
add
stos
adc
mov
push
lret
shlb
ror
das
adc
incl
rorb
inc
xchg
shlb
cmp
call
cmp
and
jb
mov
mov
mov
rcrb
adc
mov
add
jo
xor
out
adc
sti
ret
push
add
pop
or
xchg
push
and
rorl
test
sub
pushf
out
movsl
lock
lock
sbb
or
test
mov
mov
ret
jo
fcmove
icebp
ja
fmuls
cld
cmp
ret
movsl
sub
out
adc
je
adc
inc
mov
loope
aas
push
jnp
sbb
and
mov
jge
sub
and
add
push
jns
add
sbb
add
mov
cli
pusha
dec
inc
push
scas
cli
push
sbb
jmp
notb
push
xor
xorb
loopne
inc
jl
pusha
ljmp
popf
loopne
cmp
test
xor
lods
out
cld
lods
xor
scas
jg
adc
jae
cwtl
xchg
adc
pusha
pop
loopne
out
pop
add
pop
pusha
push
mov
add
adc
xor
ret
xchg
push
lcall
mov
clc
cmpsb
cli
sbb
js
lcall
xchg
incl
test
test
lcall
insb
mov
fs
add
jp
jmp
sub
inc
cld
lea
sub
sbb
je
and
jl
add
sub
aaa
je
nop
stos
mov
dec
andb
or
lods
divb
in
push
cli
sbb
loop
adc
cltd
outsb
sbb
mov
and
test
sub
pusha
jns
lea
cmp
loopne
pop
jae
ljmp
loope
push
xor
jns
jmp
loopne
add
push
push
cs
add
ds
jge
jbe
lock
push
push
aas
mov
jne
fs
sub
inc
sbb
jb
mov
jne,pt
and
xchg
add
pop
lock
add
mov
mov
int
sub
add
loopne
jb
add
sbb
fcomip
incl
push
pop
add
loope
or
add
fildl
test
inc
push
pop
jg
cmc
stos
sbb
sub
sbb
push
add
add
jmp
push
jp
and
mov
pop
repnz
clc
inc
or
dec
sbb
xlat
daa
xor
dec
cltd
call
dec
mov
xchg
lret
repz
loope
or
push
and
mov
loopne
scas
ret
mov
ds
jg
inc
and
or
add
mov
push
mov
or
xor
movsb
nop
jmp
push
sub
mov
popa
aas
hlt
roll
and
jmp
dec
push
syscall
pop
cmc
pusha
or
cmp
sarl
add
sbb
mov
mov
loope
dec
jecxz
xor
xchg
into
mov
jbe
mov
lock
enter
lock
roll
cmpsb
ss
adc
call
stc
pop
or
adc
dec
pop
pop
and
mov
mov
inc
fs
xchg
dec
add
or
aaa
lea
and
cmc
jg
jno
dec
cmp
adc
or
pusha
xchg
sbb
cwtl
mov
je
adc
or
outsl
or
cmp
mov
test
add
cmp
clc
jg
inc
out
jg
pusha
fimuls
pusha
cmp
xor
adc
mov
add
push
mov
cwtl
pcmpeqd
sti
push
or
add
ljmp
mov
mov
or
mov
divb
or
mov
mov
ljmp
clc
adc
cmp
test
gs
jl
incb
decl
xchg
lock
jo
push
sub
inc
sbb
in
sar
mov
push
mov
and
negl
hlt
aaa
cld
sub
cmp
add
pop
jmp
jle
hlt
fbstp
or
pop
mov
sbb
xor
std
je
lcall
fidivs
pop
cmp
invd
test
out
jne
sbb
les
enter
lock
pop
out
mov
jecxz
ret
call
iret
out
jo
test
push
adc
ja
fisttps
jecxz
enter
cmpb
add
enter
cmp
mov
cmp
jo
divb
sbb
or
mov
ror
js
add
sahf
ret
mov
or
push
mov
cld
sbbb
loop
cmp
daa
jmp
mov
sbb
push
mov
sbb
add
les
inc
xchg
testb
sbb
inc
in
lods
loop
into
mov
sbb
adc
xchg
jne
mov
add
nop
je
jne
add
pusha
rcrb
pop
xor
xchg
addl
jle
lock
jle
popa
lock
mov
xor
loopne
test
bound
movswl
jbe
push
jb
mov
rcll
xor
in
pop
pushl
or
sub
and
xor
js
push
mov
sarb
sub
mov
mov
icebp
inc
mov
lds
js
clc
outsl
data16
xchg
insb
aam
or
les
cmpb
adc
xor
xor
pop
lock
cmp
and
mov
jne
aad
inc
dec
mov
idivb
arpl
push
dec
push
mov
push
mov
lret
jne
in
ret
data16
xorl
cmp
inc
les
xorb
mov
xor
ret
sub
adc
mov
xchg
lea
adc
xor
test
ds
sub
add
sbb
push
push
jl
sbb
mov
aaa
sar
pop
divl
xor
ret
mov
lock
dec
mov
add
loopne
sub
xor
dec
add
sub
push
mov
inc
pop
xor
sub
add
sbbb
sete
adc
adc
mov
jo
sub
lock
or
xchg
mov
sbb
adc
clc
pop
outsb
mov
scas
cmp
sbb
fwait
pusha
fwait
outsl
clc
repnz
mov
or
repz
lock
inc
pop
mov
div
adc
or
ret
cmpb
cld
lar
mov
pop
in
icebp
or
ja
rcr
cmp
and
mov
or
xchg
hlt
pop
jmp
fdivp
es
mov
dec
xor
out
clc
inc
or
or
mov
push
mov
mov
push
shlb
adc
push
jmp
pop
divl
testb
mov
add
fwait
dec
shrb
incb
mov
sti
outsb
lcall
or
mov
add
jl
sbb
add
adc
mov
sbb
add
pop
adc
ss
or
dec
add
fidivs
or
outsl
aaa
sbb
or
xor
loop
pop
into
jmp
xchg
xchg
in
ret
and
sub
jo
inc
inc
pusha
fdiv
cltd
xor
mov
mov
adc
aas
and
inc
or
mov
jo
cmpl
dec
or
mov
pushf
ja
sub
adc
xchg
scas
mov
pop
lock
jl
pmulhuw
sbb
cmp
loope
mov
pushl
pop
orb
adc
and
test
outsl
lods
mov
cmp
jnp
mov
or
mov
add
popf
jl
adc
adc
aam
dec
xor
pop
or
add
mov
mov
cmp
jns
in
xor
sub
add
gs
or
ret
xor
call
cli
cmp
lcall
or
jmp
add
adc
das
push
push
repnz
mov
cmp
cli
pushl
xor
adc
add
cmp
pop
lock
push
mov
pusha
cmp
andl
mov
outsl
fs
jb
test
nop
int3
test
or
lcall
outsb
filds
xchg
add
add
xor
dec
xor
mov
icebp
or
cmp
lock
adc
sti
orl
push
add
cs
xor
sub
or
xor
cmp
jne
pop
hlt
incl
mov
or
fidivl
xor
mov
into
das
cli
cmpsb
pop
into
pop
mov
sti
push
nop
stos
shll
pop
add
pushl
adc
nop
add
nop
cmp
divb
mov
lock
hlt
jl
movl
or
mov
mov
pushf
clc
mov
in
sahf
mov
push
inc
mov
xor
jo
xor
mov
add
sub
add
pop
add
mov
aam
push
stos
hlt
incl
push
jecxz
out
mov
inc
test
popa
add
je
mov
je
inc
cmp
inc
xchg
cmp
adc
add
ret
in
pushf
test
jg
push
mov
mov
leave
xchg
mov
cs
xchg
out
sbb
lods
push
test
or
pop
cwtl
lock
jnp
adc
push
stos
in
inc
lea
jl
and
das
xchg
rol
inc
jb
ret
lock
jo
ljmp
dec
xor
add
test
mov
mov
add
test
jo
mov
sub
jne
inc
cmp
add
adc
mov
enter
add
cld
jmp
push
inc
je
push
dec
sub
add
aaa
dec
mov
ss
adcl
xor
sar
mov
sub
shl
jo
rcll
and
inc
test
add
aaa
dec
jle
cli
xor
cmp
adc
xor
les
test
out
mov
jge
jbe
testb
jg
add
pop
inc
and
out
adc
jbe
pop
mov
xor
lea
mov
adc
sbb
mov
sahf
pusha
rorb
sahf
pop
lcall
insb
mov
ret
dec
stos
mov
pop
cld
outsb
adc
inc
inc
xor
dec
dec
jb
add
scas
hlt
inc
aad
adc
data16
xchg
test
dec
icebp
jmp
mov
add
or
add
add
or
jge
into
mov
mov
or
cmp
dec
lock
add
dec
xchg
sbb
mov
daa
lea
push
add
nop
sbb
mov
lds
pusha
xchg
les
insb
lock
xor
push
mov
inc
mov
call
add
mov
xchg
dec
or
test
sbb
insb
les
sub
xor
pop
mov
movsb
inc
or
push
adc
rolb
mov
xchg
in
pop
xorl
dec
je
lcall
stos
dec
and
in
pop
pop
hlt
jne
add
sbb
jecxz
sbb
icebp
sbb
mov
imul
pop
fmuls
mov
xorb
add
cli
inc
pop
cld
nop
mov
mov
and
and
sub
jg
frstor
push
and
xor
iret
fcmovbe
in
xor
js
jmp
jae
push
push
ficoms
mov
cmp
andl
decl
popa
stc
movsl
add
andl
mov
andl
and
adc
xlat
adc
hlt
pop
cld
jge
shll
js
add
inc
mov
test
add
jl
jmp
loop
inc
sub
or
xor
js
test
icebp
push
jbe
pop
dec
orl
ds
and
fidivs
adc
pop
lock
xchg
inc
das
cs
inc
fildl
xchg
and
js
mov
mov
rolb
sbb
add
mov
sbb
or
pop
pop
sarl
aas
jae
jmp
andl
dec
or
test
jecxz
in
shrb
jb
adc
in
dec
lock
or
push
rorb
mov
hlt
inc
test
lret
inc
jmp
fs
push
pop
add
mov
adc
pop
popa
cmpb
xchg
ret
add
mov
pop
push
ret
int3
add
clc
and
add
cwtl
mov
pushl
and
shrb
xor
shrl
push
xchg
inc
lds
lock
jmp
or
fimull
negb
add
inc
xor
add
or
jg
add
add
xchg
adc
movsb
shl
mov
in
rcrb
fiadds
mov
push
cmpsb
pop
inc
pop
fs
add
add
outsl
push
mov
movsl
adc
or
or
inc
fidivrs
jle
mov
adc
or
mov
cld
aad
test
lods
mov
ljmp
pushf
mov
data16
outsl
dec
dec
sub
jge
rclb
jae
orps
je
add
into
mov
jl
sub
inc
mov
mov
push
sbb
dec
mov
jle
cli
inc
or
pop
lock
adc
xor
fdivl
hlt
loopne
and
and
xchg
rolb
in
add
cmp
pop
sbb
cmp
add
cmp
fbld
cmc
loopne
test
andb
stc
out
or
jl
mov
fcmovu
ljmp
inc
or
jmp
rorb
push
repz
and
xor
inc
mov
sub
loopne
imul
imul
movsb
call
imul
add
imul
fcos
or
loopne
dec
loopne
loopne
or
mov
cmpsb
fimuls
jns
push
enter
decl
push
jecxz
push
add
loopne
test
add
pop
mov
and
int3
rolb
jg
mov
adc
test
ljmp
xor
fwait
std
jmp
shlb
jmp
jecxz
jmp
popa
loopne
dec
cmp
loop
dec
add
lds
jb
imulb
mov
mov
lea
loopne
mov
faddl
xchg
jo
mov
push
ds
adc
mov
dec
pusha
add
mov
cld
scas
xor
cmp
add
or
push
mov
add
jmp
dec
ret
mov
mov
sbb
cmp
jl
cs
lock
cmp
push
mov
pusha
nop
mov
sbb
fsubr
loope
push
repz
fsubrs
filds
fimull
cmp
dec
mov
or
mov
repz
dec
stos
and
pop
dec
inc
jbe
mov
fimuls
add
outsl
je
test
fimull
xchg
cmp
pusha
add
pusha
sub
mov
lock
pop
add
add
inc
jl
or
mov
rolb
adc
or
cli
test
jp
repz
sbb
pusha
loopne
bound
ljmp
rorb
mov
pusha
mov
or
jmp
cs
jl
and
sbb
or
pusha
pushf
pop
inc
sti
and
jle
in
inc
dec
into
and
or
or
lock
xchg
loopne
jle
mov
mov
scas
clc
mov
inc
jle
lods
push
and
or
loopne
add
mov
mov
orb
test
cmp
add
fcom
push
loopne
pusha
jmp
adc
mov
adc
push
mov
call
mov
push
pushf
insb
or
rclb
mov
dec
in
decl
or
xchg
pusha
aas
loope
cmp
or
push
or
adc
push
add
mov
test
mov
fsts
sbb
push
mov
testb
insb
push
fnsave
push
sti
inc
jge
ja
shl
sbb
fiaddl
jnp
cmp
add
jg
xchg
dec
sahf
stos
mov
jb
jg
jl
rorb
jg
or
cmp
cs
sbb
scas
mov
fdivrl
icebp
mov
lock
jle
add
xor
fistpll
sarb
shr
add
xor
mov
or
mov
mov
xchg
and
lock
jmp
jle
fldenv
ja,pn
std
pushl
push
jnp
in
sub
xchg
xor
mov
test
vmread
adc
and
xchg
push
inc
ljmp
add
or
jge
mov
cmp
add
movsl
lcall
push
jbe
mov
lea
aad
decb
dec
jne
add
sbb
ja
mov
cmp
rolb
push
je
add
bound
add
es
mov
sub
add
je
insb
mov
sub
idiv
sbb
fs
jnp
jnp
imul
in
ret
xor
or
sub
jnp
sbb
es
push
xor
pop
fisubl
jb
sarl
inc
decl
push
fmuls
mov
jo
or
cmp
cmp
xchg
clc
add
add
sub
pushl
pop
dec
or
je
jne
outsb
jo
xorl
test
mov
or
popf
mov
mov
pop
ljmp
cmp
inc
int
pop
add
xor
mov
xor
jl
xor
jo
dec
add
push
scas
and
fistpl
or
pop
lock
lock
jg
inc
les
jo
mov
andl
pushf
adc
push
mov
or
jns
jmp
or
add
mov
std
dec
lock
or
mov
aam
inc
xor
mov
lods
loope
lret
xchg
xor
or
xor
insl
lds
xor
je
push
mov
into
jmp
jo
mov
jne
pop
inc
mov
push
xor
fisubs
scas
push
and
sbb
aaa
fstl
dec
dec
adc
push
rorl
mov
add
fimuls
idiv
adc
sub
xor
lock
push
adc
xor
jo
adc
int3
test
xor
push
ljmp
mov
std
xor
movsb
mov
bnd
mov
mov
lods
std
inc
push
mov
mov
popa
jbe
out
ljmp
xchg
or
sahf
pop
sub
push
adc
cld
jg
pusha
bound
inc
or
popf
add
or
adc
mov
vshufps
je
jmp
mov
push
inc
jae
lret
lcall
cmp
lock
cmp
jl
movl
or
pop
rorb
and
add
xor
es
incl
jne
mov
nop
call
sbb
xlat
and
mov
hlt
lea
icebp
lea
adc
mov
stos
or
cmpsl
pop
mov
mov
fs
jg
cmp
idivb
jge
add
jne
pop
outsl
jp
pop
mov
call
inc
push
mov
stc
or
lock
add
mov
pop
loopne
icebp
jne
cmc
call
and
and
aam
dec
and
push
push
adc
scas
push
hlt
xchg
call
loopne
ret
filds
or
add
or
inc
xchg
adc
es
add
jmp
test
xor
mov
subb
ljmp
jbe
lea
jne
mov
outsl
mov
mov
cmpb
pop
push
add
add
add
call
cmp
mov
adc
or
adc
jg
aam
or
inc
jo
mov
add
mov
adc
mov
mov
jns
jl
sbb
add
mov
push
mov
jmp
outsl
call
cld
xlat
jno
jno
jb
add
call
das
mov
mov
push
lcall
bndstx
xchg
xor
adc
adc
cld
pushl
fbstp
adc
or
jecxz
imul
add
jmp
testb
inc
xchg
jns
cmp
jno
cld
jbe
fcomip
sbb
andl
sub
pop
lock
outsl
ja
mov
and
icebp
scas
fcomip
sbb
sbb
mov
shr
xchg
mov
fistpll
or
and
add
sbb
add
push
lock
xchg
and
ljmp
or
repnz
fdivp
stos
mov
dec
push
sub
in
mov
ret
call
jg
sbb
icebp
push
ror
mov
in
pop
ret
outsl
ficomps
outsl
xlat
and
and
call
mov
mov
clc
or
mov
ljmp
jecxz
decb
sti
mov
push
insl
loopne
xchg
adc
inc
lods
add
ljmp
mov
cmpsb
cmp
test
jb
push
add
fistps
adc
rolb
fistpl
into
inc
pop
add
add
add
aam
lret
in
subl
add
call
or
add
pop
int3
mov
mov
inc
cmp
daa
push
incl
addb
push
mov
stos
mov
pop
and
repz
jbe
lock
adc
or
lcall
jbe
adc
dec
adc
sub
jbe
mov
cmp
test
mov
incl
xchg
sbb
xchg
push
addb
addb
inc
or
rcrb
mov
dec
fmul
jle
lea
fldl
call
mov
mov
jne
dec
pop
je
lock
scas
mov
fwait
les
jg
jge
mov
adc
xchg
insb
jle
shlb
imul
movsb
fiadds
jl
add
addb
fs
mov
addl
cmp
jge
add
fisubs
jmp
pusha
xchg
dec
add
inc
add
imul
cld
idivb
cmpl
mov
mov
push
clc
sbb
cmp
orb
outsl
dec
mov
add
jmp
mov
jo
mov
adcb
add
push
jbe
push
cmpl
push
ss
fcoml
push
sub
dec
add
push
mov
or
popa
in
inc
xchg
xorb
ss
jg
jb
ret
outsl
add
test
dec
rorl
shrb
fcmovnu
rcrb
push
stos
test
inc
ret
cld
subb
rorb
mov
outsb
pop
ret
lods
das
dec
xchg
rolb
cwtl
movsl
add
add
jo
mov
shll
sbb
shrb
lods
mov
adc
xlat
inc
adc
mov
or
pop
add
ret
push
mov
test
clc
add
xchg
rcll
mov
incb
shlb
xor
jg
jbe
push
dec
out
aaa
and
fadd
push
mov
ret
add
call
rorl
lds
or
fs
out
sbb
stos
adc
jo
and
mov
inc
fiadds
mov
fists
add
je
stos
mov
adc
addb
jg
inc
int3
repnz
add
pop
shlb
pushf
lock
fimull
pop
push
and
movb
insb
or
push
cwtl
sbb
lcall
adc
dec
adc
or
jmp
add
rcrl
rolb
test
fdivrl
aaa
jge
dec
shlb
cmpsb
in
mov
arpl
shll
lea
jp
adc
inc
pop
jl
cmp
xor
add
push
sub
jbe
jb
in
sub
das
rolb
xchg
mov
inc
pop
push
pop
xor
mov
hlt
jg
mov
jno
sub
and
adc
adc
outsl
data16
outsl
lock
pushl
or
cld
mov
jmp
mov
jl
leave
jg
add
push
out
in
xor
and
add
mov
adc
clc
pusha
add
mov
enter
push
clc
ret
jmp
in
jnp
add
and
dec
loopne
dec
enter
and
jg
add
shr
mov
mov
call
loopne
inc
sub
dec
push
xorb
flds
bound
js
addr16
add
mov
mov
call
out
mov
add
in
cmpsb
mov
test
sbbl
out
mov
inc
sub
mov
pusha
mov
divb
mov
in
lcall
mov
sbb
lock
sbb
push
sar
loope
sbb
andb
dec
call
adc
xchg
cmpsb
dec
pusha
adc
sub
jecxz
loopne
inc
adcl
cmpsb
jnp
pusha
sbb
inc
fs
cli
jmp
fisubl
lock
mov
mov
xlat
sbb
mov
push
adc
loopne
adc
xor
jbe
inc
and
adc
in
xchg
popa
add
fwait
loopne
popa
sbb
lret
push
push
loopne
jmp
xchg
js
and
inc
push
fsubs
loopne
or
mov
pop
cmp
loop
scas
jmp
mov
lea
mov
int3
xorl
mov
cmovl
loopne
jp
push
fcoms
or
bound
mov
mov
fwait
add
jmp
out
arpl
loopne
fs
pusha
pop
popa
cmp
xor
loopne
mov
and
jecxz
popa
cmpsb
loopne
dec
push
popa
pop
lret
push
clc
add
sub
shr
out
popa
jb
loop
sub
and
xor
loopne
mov
sbbb
mov
and
xor
pop
xor
in
add
dec
mov
jmp
adc
push
lcall
loope
jecxz
lahf
loop
mov
je
adc
mov
loopne
dec
inc
insb
cmp
and
or
or
mov
mov
subb
inc
loopne
mov
jp
lret
mov
fnstenv
sbb
or
popf
sub
mov
outsb
pop
lock
pusha
lock
pusha
push
lcall
and
push
ja
fisttpl
mov
insb
xchg
jmp
jns
clc
fisubrl
addb
adc
sbb
mov
jle
sub
inc
pusha
sbb
cmc
and
or
lods
add
mov
insb
gs
jmp
or
pop
test
adc
fsubrl
cmp
or
jno
ret
jmp
push
stos
jbe
xchg
pusha
out
nop
and
enter
pusha
add
or
mov
mov
pop
or
aaa
sti
test
mov
sbbb
mov
xor
xor
sti
push
add
cmp
inc
mov
mulb
or
jmp
sbb
or
dec
add
ljmp
scas
adc
or
aas
pop
lock
pop
mov
jb
test
jge
jmp
hlt
ljmp
jbe
rolb
and
fstl
mov
xchg
pop
rolb
mov
push
aaa
or
mov
add
push
push
dec
adc
pop
mov
aad
jo
sbb
insl
fldt
push
mov
adc
jbe
bswap
add
sub
pop
add
in
add
into
nop
lcall
shll
jg
fidivrl
push
outsb
add
lret
push
add
xor
inc
stos
xor
inc
adc
shl
cs
popf
dec
in
inc
pop
loop
cltd
mov
fwait
testb
xor
mov
ja
mov
divb
int
push
data16
xlat
js
jb
lahf
fwait
shlb
cmp
sbb
mov
insb
mov
adc
dec
jb
xor
into
movsb
pop
test
xor
fiaddl
push
and
inc
adc
cs
jp
dec
outsl
and
or
stos
push
clc
or
mov
hlt
add
dec
mov
enter
sbb
in
adc
push
call
inc
ret
sbb
sbb
push
pop
and
sbb
insl
outsl
filds
fisubs
and
and
xlat
add
sub
sub
sub
sti
stos
xchg
and
dec
jl
xor
jl
xor
int3
xor
loop
incl
out
ss
cmp
les
cmp
shll
mov
inc
dec
nop
adc
mov
xorb
inc
or
push
lock
rcrl
nop
cwtl
inc
push
cwtl
sbb
out
dec
roll
outsb
push
jle
jp
nop
inc
pop
cs
adc
sti
push
jne
or
in
add
inc
test
rcl
fwait
push
inc
cmp
xchg
stos
or
mov
mov
mov
jbe
roll
push
mov
insl
aaa
cmp
inc
push
mov
cmp
aaa
movsb
or
subl
jl
and
decl
lock
ret
adc
mov
loop
add
loop
dec
mov
mov
mov
push
les
in
int3
mov
adc
pop
lock
outsl
pop
test
je
xchg
std
jmp
ret
and
loop,pn
mov
sbb
dec
sbb
push
mov
icebp
mov
add
adc
push
cmpsl
mov
mov
inc
out
jg
hlt
add
mov
dec
and
mov
dec
and
and
dec
ljmp
xchg
sub
aad
out
cli
xor
orb
cli
mov
jb
push
mov
dec
popf
les
inc
addl
push
mov
cmp
xchg
mov
xor
sbb
cmp
sub
add
add
xor
adc
lret
jbe
loopne
sbb
inc
and
pushf
pop
js
stos
rcrb
mov
mov
push
test
lea
or
push
enter
jg
mov
shll
push
les
add
test
add
or
lods
lods
add
push
cld
decl
inc
or
pop
or
adc
mov
adcl
sbb
pop
add
aaa
push
out
adc
push
adc
mov
test
ret
int
mov
add
cmp
or
call
jecxz
add
js
test
imul
inc
push
pop
mov
sete
add
xchg
test
push
sub
add
pushl
push
xor
aam
cmp
rorl
mov
jbe
mov
cmp
adc
add
je
push
jmp
mov
jmp
pop
divb
lock
rorl
mov
aaa
add
mov
ja
fnstenv
mov
cli
mov
and
je
xchg
dec
xor
push
pop
cmp
fwait
push
lods
scas
lods
iret
or
inc
pushl
insl
inc
aad
push
movsb
pop
fs
push
adc
mov
cmp
cld
insl
mov
je,pn
stc
imull
mov
scas
push
cmp
add
mov
dec
push
incl
push
mov
push
adc
stc
mov
lods
clc
or
and
mov
ja
dec
xor
je
idivb
mov
jmp
mov
filds
test
sbb
add
cmpsb
add
stc
jo
adc
add
in
enter
je
sbb
pop
idiv
enter
mov
and
add
mov
iret
ds
ljmp
pusha
inc
js
jo
mov
sbb
movl
or
mov
sbb
cmp
mov
sbbl
or
orl
es
mov
lret
xchg
test
add
hlt
sbb
addb
add
and
fs
shll
jb
mov
jmp
jge
rcl
pop
inc
loopne
add
repnz
decl
roll
or
cmp
jae
testb
mulb
inc
mov
stos
inc
stos
daa
lock
or
and
pop
sti
decl
orl
decb
je
or
push
and
xchg
testb
or
je
test
push
inc
push
xor
pop
or
jo
and
cs
test
out
adc
mov
adc
mov
adc
je
popf
and
jo
rolb
iret
mov
sbb
mov
lods
lea
das
inc
subb
dec
mov
add
icebp
sbb
mul
xor
mov
adc
pop
mov
cli
lea
and
cmpsb
and
mov
jo
ljmp
adc
sbb
mov
adc
mov
lds
adc
jl
xor
push
add
into
mov
push
mov
cld
xlat
jbe
sbbb
mov
test
xor
jo
jl
testb
rolb
fidivl
ds
jno
sub
or
lock
add
push
stos
notb
jo
cmp
les
fwait
add
mov
mov
xor
jmp
mov
scas
sbb
sub
jge
bound
ret
xor
push
xchg
adc
daa
les
aam
add
jne
lock
sbb
test
xchg
cmp
add
or
mov
push
pop
add
lret
mov
cwtl
or
pop
jb
push
pop
cld
inc
mov
mov
sub
cmp
or
sub
mov
push
mov
push
fnstsw
testb
dec
or
lcall
xchg
cli
adc
mov
mov
cmp
ljmp
stos
pop
mov
aam
aaa
mov
jge
push
in
jne
mov
mov
push
cvtps2pd
pop
clc
add
cmp
sub
sbb
inc
bound
or
add
jbe
inc
les
leave
jmp
inc
inc
mov
incl
cmp
jb
adc
add
dec
or
jg
sbb
sbb
jb
jmp
dec
add
add
add
pop
addb
ret
mov
mov
cld
push
add
add
cmpsl
orb
push
cli
fcomip
xchg
fiadds
mov
mov
call
cli
or
adc
xchg
movsb
je
xor
xchg
jb
in
movsb
cwtl
rorb
dec
sahf
in
sbb
sub
test
shrb
xchg
xor
je
jle
ss
pop
dec
add
sub
cmpsl
addb
mov
push
xor
subl
pop
movb
loope
jge
cmp
jae
mov
es
mov
scas
adc
add
inc
movl
shrb
mov
mov
pusha
pinsrw
ja
jne
sbbb
insb
clc
cmp
adc
mov
or
cmp
xchg
sub
clc
mov
cmp
push
jg
clc
sbb
das
incb
add
add
and
lods
cltd
lock
je
inc
xorb
stc
add
je
add
rclb
sti
inc
cmp
mov
ss
adc
fcoml
andb
adc
outsl
sahf
je
lahf
cmp
jl
fsubrl
test
fdivrs
add
ljmp
hlt
cmpsl
bound
and
ror
jmp
ljmp
call
mov
dec
cmp
mov
cmc
call
mov
jmp
rorb
add
mov
stos
lods
push
mov
incb
andl
fdiv
or
clc
shlb
and
sbb
cwtl
inc
sbb
mov
movb
test
imul
ja
inc
push
outsb
jle
sub
stos
xor
popa
or
add
add
jmp
add
pushf
add
push
lock
or
xchg
push
nop
sub
adc
push
sbb
add
cmpsl
inc
push
jbe
daa
ret
add
adc
outsw
test
roll
imul
fidivl
decl
cld
inc
lock
mov
shrl
cld
jmp
sti
adc
aaa
add
xchg
sarb
pop
pop
xor
inc
mov
hlt
or
and
mov
jmp
sbb
inc
xchg
and
inc
fsubrs
mov
pop
sahf
mov
dec
or
roll
stc
or
sbb
and
pop
mov
roll
mov
jmp
orl
lock
int3
push
push
add
push
adc
sti
cmpb
cmovs
jmp
or
jecxz
sub
insl
dec
sbb
push
jmp
movl
loop
add
jmp
roll
push
pusha
xchg
mov
pop
rcrb
adc
push
inc
push
pop
add
sbb
ret
push
std
sub
cmp
ret
nop
cmpsl
push
rolb
sti
es
rolb
add
xchg
outsb
insl
shll
lods
push
dec
add
add
nop
rcl
insb
cmp
sub
xchg
outsb
add
mov
clc
je
add
fdivrl
xchg
divl
and
pop
or
jp
mov
jp
pusha
add
push
rclb
push
add
iret
pop
call
push
call
xchg
push
pop
mov
push
mov
cld
fimull
incl
sti
pop
ljmp
cld
movl
dec
std
cs
mov
adc
and
push
push
data16
or
inc
jg
push
test
cli
push
lcall
sub
xor
incl
pop
or
xchg
add
add
add
adc
subb
lret
xchg
insl
push
mov
xor
incb
jmp
or
and
fs
xor
mov
or
push
adc
sub
data16
lods
ret
out
push
add
add
and
iret
repnz
loop
cmp
or
push
lret
mov
fstps
dec
pushl
jl
in
adc
inc
pusha
pop
pop
nop
loopne
mov
xor
jmp
insl
insb
and
add
push
mov
and
mov
cmpsb
push
adc
je
call
pushl
mov
loope
push
push
call
je
or
add
add
jnp
mov
jb
in
mov
pop
push
fcoms
arpl
mov
xor
pop
xchg
pusha
push
cmp
hlt
loope
mov
push
std
xor
inc
push
cmp
mov
add
fiadds
out
out
lods
loop
dec
imul
push
pusha
add
addr16
arpl
or
lcall
into
mov
cmp
mov
mov
or
arpl
pop
loope
adc
and
addb
lock
scas
push
push
and
jecxz
sti
ffree
mov
adc
daa
dec
inc
je
or
orb
inc
add
mov
cmpb
call
mov
mov
aas
pop
ret
inc
orl
inc
xchg
sbb
dec
sbb
mov
add
pusha
movsl
lock
aam
adc
ret
mov
cmpl
pop
dec
jae
enter
add
lea
adc
add
mov
mov
dec
adc
cmpb
add
fs
sbb
adc
loopne
mov
outsl
inc
mov
test
xchg
cmpsl
call
xor
cs
mov
cmp
jno
push
jmp
testb
jne
cmp
clc
sbb
rcll
push
sub
inc
mov
cli
inc
pusha
mov
dec
mov
cmpsl
mov
mov
cmp
dec
int
test
into
lahf
insb
mov
lds
movsb
sbb
cmp
cld
add
ret
dec
inc
push
jbe
jbe
sub
daa
xchg
cs
es
icebp
xchg
add
fs
push
push
je
adc
xorb
pop
add
xchg
xchg
loopne
stos
jbe
adc
adc
and
test
mov
xchg
outsb
adc
pop
inc
daa
xchg
lock
or
mov
mov
jo
add
adc
inc
cmp
clc
call
add
popf
loope
pop
add
adc
cld
cmpsb
scas
adc
mov
or
scas
push
and
and
or
ljmp
mov
fmuls
or
mov
pop
or
jmp
divb
decl
orl
pop
lock
leave
mov
push
insl
loop
mov
es
rorl
inc
bound
xchg
mov
add
mov
and
leave
decb
or
or
inc
rclb
or
or
inc
add
or
mov
or
pop
call
add
lea
adc
je
shll
cmpb
call
call
or
pop
dec
shl
js
sti
daa
test
mov
call
add
adc
cli
add
xor
adc
lock
mov
xchg
ss
notb
push
mov
add
adc
add
bound
pop
addl
push
loope
inc
mov
or
mov
sbb
jg
adc
mov
hlt
sbb
aam
loopne
int
mov
ljmp
inc
cld
xor
mov
and
incb
mov
or
fmull
sub
js
pop
xchg
mov
jb
sbbb
es
pop
pop
add
xor
fdivl
sub
pushl
adc
je
or
std
inc
and
jle
pusha
inc
jmp
out
add
sbb
lods
and
sbb
cld
or
fs
lock
cmp
mov
out
mov
jne
jne
adc
icebp
sbb
dec
call
mov
test
icebp
push
xor
xchg
loopne
fwait
push
add
dec
fs
mov
mov
sti
test
cli
jno
outsb
mov
push
inc
inc
inc
push
pop
mov
add
sub
mov
aaa
xor
xchg
cmpb
inc
cmp
lea
push
clc
pushl
fdivl
or
dec
and
clc
mov
add
sti
jne
lods
push
inc
loopne
icebp
push
add
jo
addl
aad
dec
jmp
add
or
add
call
mov
push
adc
mov
sahf
icebp
js
pop
mov
mov
das
lock
push
mov
icebp
pusha
call
push
pushl
js
lock
add
dec
jo
cmp
and
icebp
push
add
fs
inc
cmp
push
and
mov
add
fs
in
jo
cli
incl
adcb
xchg
test
mov
lock
je
push
xor
sbb
adc
ss
or
cltd
mov
out
sub
scas
and
ret
punpckhdq
jo
in
mov
add
jmp
jmp
decl
divl
cmp
pop
clc
and
jo
call
or
jo
incl
mov
push
xchg
jo
lea
repnz
stos
xchg
mov
call
mov
xchg
add
push
jo
mov
jbe
inc
push
dec
sbb
mov
pop
hlt
add
or
jo
cmp
mov
mov
adcl
flds
mov
iret
adc
or
add
movsl
inc
hlt
mov
leave
outsb
xor
sub
outsl
bound
jae
push
out
into
add
out
adc
inc
mov
icebp
push
dec
mov
ljmp
xchg
test
pop
mov
pop
sbb
xor
out
mov
and
mov
adc
inc
mov
shlb
imul
adc
sbb
mov
es
int3
dec
jmp
lds
push
push
push
and
fimull
lea
cmp
ja
mov
je
sbbl
or
push
fs
mov
lods
mov
outsb
xor
push
add
xor
adc
mov
cld
incb
pushl
icebp
jb
add
repnz
insl
test
and
es
jp
jne
pop
scas
idiv
adc
push
insl
lds
mov
insb
sub
xor
imul
sbb
xor
push
xchg
or
outsl
and
fcmovnu
mov
push
aaa
jo
xor
movsb
icebp
push
lock
and
push
xor
daa
add
das
adc
popa
mov
sbb
inc
inc
fwait
sbb
lock
in
adc
add
insl
or
stc
mov
call
and
push
push
or
sbb
dec
push
les
test
sub
hlt
andl
cli
add
mov
push
pop
jne
lods
jae
push
jmp
push
pusha
test
outsl
or
call
hlt
mov
ret
sarb
inc
mov
das
and
hlt
push
sub
xor
jo
jg
dec
jb
test
jle
push
jbe
pop
mov
icebp
add
add
jo
xor
test
aad
scas
push
mov
dec
jo
jne
ljmp
or
push
mov
call
jo
inc
mov
add
mov
jbe
push
adc
jge
and
mov
dec
and
mov
jo
mov
mov
lea
inc
std
add
inc
mov
dec
push
xor
push
jno
mov
mov
or
pop
inc
jge
cmpsb
sbb
mov
mov
cs
add
loop
or
xchg
jne
cmpb
inc
outsl
cmp
call
adc
inc
sti
mov
jo
jge
mov
dec
call
pop
call
inc
int3
lock
sbb
lcall
push
jo
inc
fstpt
pop
cld
mov
jo
sub
mov
iret
adc
adc
negl
movsl
mov
pop
xor
fisubrs
and
fcomip
incl
pop
lds
jo
mov
or
cmp
int3
inc
mov
xchg
push
mov
push
mov
call
shlb
cwtl
pop
leave
add
icebp
cmp
add
jp
das
adc
cmp
jle
movaps
adc
je
add
test
stos
jmp
adc
inc
data16
outsb
loopne
mov
imul
push
xor
xchg
xor
fucomip
jbe
mov
shrb
add
or
mov
adc
push
sub
mov
jg
dec
add
lock
cmp
dec
cld
call
clc
das
or
pop
cld
movb
cmp
push
mov
mov
jne
hlt
push
jae
dec
add
or
xor
sub
call
aam
call
add
inc
lea
add
xchg
inc
xor
add
call
fdivl
pop
and
enter
add
add
orb
mov
add
or
push
push
xchg
cs
ret
loope
jle
add
push
jo
mov
test
pop
mov
fisttpl
push
push
push
cwtl
cs
push
and
add
or
repz
es
add
dec
adc
pop
ret
cmp
sub
adc
mov
push
inc
push
mov
cmp
call
jne
aam
dec
inc
dec
cli
lcall
sbbb
sti
in
xor
dec
mov
xchg
call
ficoms
add
hlt
adc
pminsw
lods
add
inc
push
add
push
add
dec
or
or
cmp
jbe
pop
lods
insb
je
add
ss
dec
mov
sbb
insb
push
lea
gs
cld
add
insl
push
add
inc
jmp
adc
pusha
andb
or
adc
dec
xor
dec
mov
add
in
aaa
lods
out
sub
add
imul
sub
filds
sbb
adcb
test
shrl
fwait
sbb
test
mov
pop
push
out
les
and
sub
cmp
xchg
adc
cs
aad
lock
pop
outsl
push
add
sbbb
pop
iret
mov
add
je
callw
lea
cli
jo
aad
imull
jg
loopne
orb
mov
adcl
mov
adc
add
inc
je
call
pop
mov
sbb
or
mov
je
push
jg
fldl
and
adc
aas
xor
xchg
incb
or
or
popa
push
push
rclb
fdivrl
push
mov
cli
cld
xor
decb
mov
adc
rclb
xor
sub
adc
fists
pop
or
cmpb
xor
sbb
sarb
push
rorb
add
mov
jne
jg
cmc
ret
cmp
and
and
clc
xchg
or
and
add
out
add
jo
fcomps
sub
lahf
jl
mov
js
hlt
xor
loop
aaa
lahf
jmp
pop
aam
sbb
adc
lods
mov
adc
or
dec
cmp
ret
add
pop
lret
push
push
jg
or
enter
call
push
push
in
call
inc
and
fisttpl
dec
repz
pushf
push
jb
mov
nop
mov
leave
call
das
js
arpl
xchg
inc
loopne
les
es
call
or
jno
lret
subb
inc
sub
mov
clc
clc
push
jae
jo
lea
add
cmc
ret
sub
xor
fidivl
cmp
or
rorb
movsb
daa
mov
loopne
pop
cwtl
dec
push
sub
xchg
shl
add
xor
lock
out
lahf
andl
lock
or
cmc
rorb
push
adcb
add
js
add
or
subl
nop
cmp
test
push
mov
mov
add
pop
pop
xchg
add
inc
je
cmp
roll
add
lods
loopne
jge
cmpl
jl
loopne
mov
mov
andb
ret
add
sbb
outsb
sbb
lea
pop
jbe
test
fildl
filds
call
int
imul
aaa
mulb
cli
bound
je
xchg
mov
nop
adc
add
loop
pop
orb
sub
sub
stos
sub
subb
call
repnz
test
or
adc
pop
mov
push
std
pop
sub
mov
add
jmp
subb
or
xor
push
std
add
bound
mov
adc
lcall
and
xchg
sub
xor
cmp
fwait
adc
out
mov
dec
push
dec
call
inc
shlb
push
dec
gs
sbb
mov
adc
add
sbb
jnp
adc
mov
push
sub
orb
inc
push
mov
push
addb
push
filds
mov
clc
cs
adc
andl
jge
stos
dec
das
inc
mov
or
mov
outsb
ja
push
sub
mov
sbb
push
cwtl
add
fcomps
push
lods
shlb
pop
cmc
in
sub
pop
add
scas
loopne
add
cmp
or
add
push
gs
push
ljmp
pusha
arpl
push
add
lock
adc
cmpl
in
sti
jg
or
jecxz
pusha
or
je
push
lcall
jle
sub
adc
adc
jg
mov
xchg
add
jg
pusha
pop
call
jmp
pop
in
pusha
das
test
add
mov
jne
mov
pop
jae
sub
loopne
xchg
and
inc
nop
xchg
imul
or
orl
adc
fucomi
bound
jne
inc
cwtl
dec
push
pop
pusha
mov
or
cmp
xchg
add
outsl
and
mov
incl
cmc
arpl
push
push
test
les
mov
jle
inc
inc
mov
pop
test
xor
add
mov
push
mov
adc
or
add
clc
mov
sub
push
cmp
sub
xor
call
shlb
pop
je
pusha
and
sbb
roll
int3
pop
xor
pop
orb
mov
push
sub
lds
test
ss
inc
jbe
jmp
call
in
adc
bound
pop
rcrb
add
and
insb
sbb
adc
xor
push
clc
les
add
add
addb
incb
inc
cmp
mov
jmp
cltd
je
adcl
xchg
jl
pop
je
dec
ss
add
lds
jmp
addl
out
pusha
lds
add
inc
pop
jne
pop
mov
stos
imul
mov
push
jb
shlb
pop
idivb
and
fcomi
rcrb
add
arpl
sar
mov
cli
xchg
pusha
mov
mov
nop
icebp
add
or
and
add
nop
adc
xorb
dec
mov
adc
add
insb
pusha
mov
pop
fsubrs
xchg
adc
aaa
or
jge
adc
jb
cmp
pusha
jnp
clc
cmp
sbb
icebp
mov
xor
push
cli
add
enter
adc
dec
mov
xorb
ret
lahf
mov
outsb
call
mov
push
sbb
hlt
xor
or
inc
mov
add
imul
jle
lock
mov
or
xor
inc
mov
adc
std
jb
nop
mov
lock
mov
ret
mov
in
adc
or
mov
fistl
mov
lcall
orb
repnz
mov
push
pop
sahf
xor
mov
insb
jb
jns
fbstp
je
push
lock
xor
inc
xchg
or
test
jl
add
mov
das
add
add
mov
mov
mov
cmp
add
adc
mov
cld
mov
inc
movsl
add
pop
leave
jae
sar
imul
add
dec
or
lock
bound
pop
shll
mov
je
jp
ljmp
dec
inc
mov
inc
loope
xor
hlt
adc
ret
rcrb
ret
sti
call
outsb
loopne
out
add
dec
hlt
add
test
ud0
lock
add
add
push
adc
adc
fwait
mov
scas
adc
lock
je
ljmp
push
call
ds
stc
add
mov
push
cmpl
cmp
out
ljmp
add
and
push
or
or
sbb
pop
hlt
mov
add
mov
or
testb
adc
jb
mov
imul
push
push
shrb
inc
js
sub
sahf
inc
sti
je
ret
jo
jo
cli
mov
add
pop
add
loop
or
mov
mov
adc
mov
inc
mov
cmpl
inc
repz
mov
jb
loopne
and
sub
jge
icebp
or
shr
or
clc
push
lods
mov
repnz
test
movsb
inc
fwait
or
js
push
add
call
sti
mov
and
jae
cmpsb
pop
clc
adc
ja
mov
mov
inc
imulb
xor
sbb
pop
lock
sub
add
mov
add
dec
sbb
sahf
cmpsb
push
sbb
xor
shll
test
mov
ror
adc
lock
pop
clc
pop
or
mov
jne
jmp
fdivrp
movsb
mov
mov
sbb
mov
pop
std
das
adc
or
clc
mov
fisttps
js
neg
mov
stos
pop
adc
stos
fcomp
jecxz
sti
jle
icebp
fsubrs
mov
fxch
outsb
ja
push
mov
adc
sbb
jbe
fs
pop
lock
pop
cs
mov
dec
push
mov
and
lods
pop
push
iret
mov
add
pop
outsb
sub
mov
scas
mov
mov
sbb
or
dec
add
aam
xor
mov
sbb
stos
aaa
sub
sub
pop
pop
sub
push
add
ja
call
pop
ss
cld
incl
push
xor
jbe
mov
nop
xchg
add
jo
mov
jo
test
adc
sbb
ja
inc
daa
push
pop
std
mov
stos
cwtl
clc
add
fbld
add
mov
xchg
add
adc
add
mov
je
test
je
ljmp
rolb
add
cli
add
shl
stos
xorl
dec
and
push
mov
mulb
bound
filds
repnz
adc
mov
adc
inc
push
data16
xchg
add
les
mov
add
idiv
add
or
aaa
xor
je
add
or
popa
mov
sbb
inc
add
outsb
outsl
adcb
lods
mov
nop
mov
mov
in
mov
outsl
xor
cli
cmpl
xor
add
add
mov
mov
and
and
cld
fldenv
idiv
mov
add
sbb
fdivrl
sub
aam
mov
jge
push
adc
push
mov
adc
pushl
aam
jp
roll
out
mov
jp
test
push
sbb
xlat
jae
mov
aaa
cmpl
sbb
add
jle
fstpt
push
pusha
push
add
mov
or
sub
mov
add
fnsave
lds
call
cmp
in
cmp
add
adc
xor
add
ss
pushf
mov
shr
add
add
xchg
push
mov
pop
add
aaa
lcall
lcall
inc
ret
bnd
scas
jo
fbstp
add
mov
lods
cmc
cmp
loop
add
movsb
push
push
sub
loopne
inc
int3
nop
mov
lret
je
into
push
mov
loopne
sar
mov
mov
sbb
jne
pusha
ret
fcmovu
inc
mov
add
neg
cmc
mov
and
jne
icebp
rcrl
xorb
ljmp
mov
jae
and
mov
int3
aam
jl
cmpsb
int3
ss
ljmp
mov
sbb
or
push
push
add
call
es
xor
stc
jl
push
mov
cmp
call
sub
js
adc
pop
cld
mull
into
daa
hlt
nop
sbb
add
add
mov
add
xor
jo
push
mov
fwait
cwtl
mov
xchg
out
sub
dec
pop
and
xchg
test
jns
clc
and
push
std
or
or
lock
pop
call
and
xor
mov
fsub
xchg
mov
pusha
loopne
jmp
icebp
and
or
dec
insb
pop
pop
sub
push
xor
pop
shrb
test
and
push
and
subl
lcall
mov
mov
cli
sbb
pop
hlt
add
xor
mov
mov
mov
sahf
mov
jecxz
cmp
sub
push
fmull
and
sbb
push
cmp
jne
push
out
adc
call
and
rclb
mov
enter
and
test
jg
sbb
push
stos
scas
inc
or
adc
sbbb
push
lea
scas
push
push
int3
add
ds
sub
cmpb
clc
mov
and
hlt
mov
out
bound
mov
orb
jne
into
lock
aam
or
mov
out
loop
fnstcw
and
cmp
test
jecxz
and
add
ret
mov
jno
sub
mov
jne
test
mov
xchg
int3
rolb
imul
cld
mov
cld
test
mov
xchg
cmpb
cmpb
rolb
jge
test
mov
lock
push
bndstx
sarb
xchg
jne
movsl
add
adc
sbb
ret
aam
inc
clc
out
xor
dec
fimull
out
lea
push
call
es
sub
xor
test
jge
inc
xor
mov
sbb
sub
mov
cmp
mov
movsl
rorl
fs
sbb
aad
testl
sbb
out
mov
cli
mov
push
sub
inc
add
pop
pop
inc
xorl
test
rcrb
aam
inc
ret
mov
add
xlat
stos
add
inc
clc
ljmp
idivb
pusha
mov
dec
mov
inc
rol
mov
jg
cmp
inc
add
ret
jmp
mov
or
cltd
dec
fmull
cmpl
mov
test
pop
add
loopne
dec
insl
xchg
call
movsb
test
std
add
inc
jmp
push
lods
pop
mov
movsb
inc
test
or
call
or
adc
mov
pop
push
call
sub
je
and
filds
daa
in
shlb
or
lock
add
ret
outsl
js
rcrl
ja
or
rcrb
xor
std
mov
or
and
call
push
add
sahf
ret
add
jbe
jge
sub
leave
jp
roll
add
inc
xchg
xor
inc
adc
xchg
xchg
or
sbb
pop
xor
test
ss
packssdw
lods
lods
push
ds
cltd
test
add
pop
loopne
daa
add
inc
sbbl
add
fcoms
inc
inc
push
pop
xchg
cld
shlb
inc
push
mov
int
test
ss
dec
cmp
roll
xlat
pop
addb
je
int3
shlb
add
jg
loop
into
movzwl
sbb
dec
inc
sbb
adc
or
and
and
mov
mov
xor
xchg
fsubl
push
cmp
push
lock
adc
jo
add
fdivp
mov
scas
mov
decb
pop
shlb
lock
les
add
or
inc
adc
je
mov
mov
lcall
sub
mov
popf
xor
and
dec
fldcw
mov
pusha
dec
pushf
fdivr
dec
ss
inc
and
pusha
pcmpeqb
subb
pop
jecxz
cmp
pushf
inc
in
lret
popa
enter
mov
add
data16
ss
loopne
push
call
pop
cltd
mov
and
lea
or
rcrl
inc
and
or
notb
mov
add
cld
int
or
pop
cmovns
push
push
mov
and
pop
jecxz
loop
adc
mov
jmp
jb
enter
inc
adc
mov
popa
add
std
das
in
loopne
loopne
mov
loopne
xor
shll
xchg
adc
lret
mov
data16
sbb
data16
ljmp
lcall
aas
scas
cwtl
pushl
inc
or
xorl
shll
incb
inc
notl
jmp
das
inc
and
cmp
mov
iret
or
pop
cld
loop
inc
loopne
mov
xchg
stos
loopne
add
dec
push
in
pop
jne
push
idiv
jmp
push
pop
pop
add
push
mov
xchg
mov
sti
sbb
dec
lods
aam
sub
sub
inc
aas
lret
ds
aam
call
aas
sub
std
cmpsl
dec
add
jp
jb
testl
mov
cmp
mov
faddl
mov
je
add
lds
lcall
dec
insl
ret
incl
pusha
or
add
mov
enter
or
pusha
sub
cs
test
add
sbb
lcall
test
jg
lods
pusha
jnp
inc
sub
rcr
dec
adc
add
ja
mov
pusha
cmp
mov
or
popf
mov
push
sbb
dec
pusha
jae
mov
and
and
lea
insl
mov
pusha
push
push
sub
xchg
sub
mov
popa
inc
cwtl
clc
xchg
shll
test
and
mov
shlb
lea
addl
test
and
incl
loopne
clc
ja
adc
rol
jp
loopne
loope
fcomps
insb
push
jp
sbb
jmp
add
loopne
pusha
add
sbb
push
sbb
push
xchg
cmpsb
pop
inc
jmp
xchg
jle
enter
push
loop
lock
popa
xchg
pop
mov
jecxz
mov
fisttpl
out
call
je
mov
cmp
cmp
jno
outsl
clc
int
cld
push
lock
mov
aas
cmp
mov
loopne
lock
pop
popa
add
jbe
incb
test
js
sbb
pop
jne
inc
popa
fs
dec
decl
add
push
sbb
daa
std
test
dec
clc
or
sbb
cmp
mov
cmp
jne
incl
adc
xor
loope
loopne
xchg
add
pop
xor
std
pop
jg
xor
imul
mov
lods
cli
bound
orl
lock
or
out
arpl
aad
inc
pusha
mov
roll
shr
hlt
or
incl
dec
mov
js
push
lock
loope
pop
cmpsl
add
adc
adc
push
sti
push
enter
pusha
lcall
out
mov
es
ljmp
loope
inc
add
inc
jae
inc
adcb
in
lea
cli
push
outsl
das
lods
jno
mov
pop
dec
cli
or
jno
scas
call
cli
vshufps
cli
xor
int3
push
and
jecxz
inc
cli
int3
mov
or
sti
push
sar
xor
xor
inc
mov
cmp
adc
push
js
cmp
sbbb
pop
mov
mov
movsb
add
sub
dec
mov
data16
sub
loope
mov
xor
sub
xorb
clc
das
andl
cmc
push
mov
and
call
aaa
mov
dec
add
add
inc
add
add
movsb
data16
loopne
ret
add
call
test
data16
and
xor
jg
push
add
sbb
adcl
sbb
xor
outsb
jl
xor
in
subl
push
lock
aas
push
call
adc
stos
insb
xor
shlb
test
jmp
sub
inc
and
negl
add
ret
into
add
pop
jecxz
pop
xchg
scas
in
mov
data16
aaa
add
jo
add
sub
hlt
push
out
rol
call
das
cmp
or
push
mov
push
aam
push
orb
add
jg
lock
pop
rcr
icebp
adc
fdivl
jo
mov
mov
jo
jle
lock
mov
mov
and
sar
jg
mov
pop
cs
jne
mov
xor
jmp
push
xor
pop
jmp
xor
push
xorb
push
pop
lret
and
push
jb
adc
in
call
push
call
in
and
lock
add
adc
incl
mov
push
icebp
sbb
xor
cmp
sbb
mov
jb
ds
add
or
add
add
and
outsl
das
and
mov
shrb
outsb
scas
clc
mov
push
push
dec
mov
pop
and
incl
jmp
mov
add
cwtl
pop
lock
incl
adc
mov
pop
add
call
mov
pop
dec
jmp
and
fsubl
pop
jl
mov
inc
or
dec
leave
sbbl
push
push
sahf
cmpsl
jg
inc
test
incb
xor
xchg
test
loopne
or
sub
cmp
jne
sbb
test
adcb
adc
lods
jo
jbe
ss
pop
mov
add
add
xchg
add
cmpb
aaa
add
push
test
test
fdivl
or
jne
in
incl
adc
nop
mov
call
lock
add
sbb
movsb
xor
je
mov
cmp
dec
mov
call
and
sbb
cli
jmp
push
sbb
pop
and
out
adc
cmpsb
dec
push
pushf
push
pop
add
cmp
and
cld
push
mov
push
jo
mov
mov
push
popa
push
fcoms
repnz
adc
pop
insb
ds
stc
test
jge
mov
ja
scas
mov
mov
push
add
icebp
mov
adc
mov
adcl
add
mov
inc
adc
lea
xor
cld
jo
lea
mov
paddq
jae
jno
popa
jb
and
aas
xorb
adc
add
xchg
pusha
mov
sbb
inc
jo
data16
mov
xchg
cmc
push
outsl
scas
xlat
and
mov
mov
and
ljmp
adcl
jo
push
je
or
test
call
inc
or
inc
sti
data16
add
call
pop
ljmp
pop
lock
add
or
sti
test
xor
ret
push
adc
ljmp
sbbb
out
or
jbe
jno
jno
addl
or
ds
pop
icebp
mov
out
sub
jo
movsl
cmp
xchg
mov
ljmp
mov
mov
je
mov
or
into
data16
push
andl
adc
jmp
lock
xor
and
push
pop
test
bsf
adc
int3
xchg
lock
loop
sti
add
adc
jb
or
jmp
and
xor
xchg
sarb
out
fadds
xchg
inc
mov
repz
adc
insl
mov
pop
sbb
add
pushl
mov
pop
adc
inc
shrb
hlt
pop
mov
jb
mov
in
mov
mov
das
pop
push
icebp
xchg
adc
pop
sub
pop
fnstenv
adc
mov
fdiv
aaa
aas
in
aas
push
pop
test
call
sbb
mov
testl
stos
mov
cmpps
jge
call
subb
ficompl
pushf
and
negl
push
fiaddl
mov
push
sub
pop
testl
std
mov
clc
jo
inc
stos
adc
and
xor
push
in
inc
cld
push
sti
pop
imul
pusha
pop
xor
add
pushf
fmul
mov
inc
test
jmp
xor
cwtl
out
and
xor
and
mov
inc
xor
cmp
es
add
sbb
int3
movsl
push
push
pop
lock
fimuls
fisubl
lods
movsb
jmp
xor
fwait
mov
cltd
pop
jmp
lock
stc
jo
jg
and
int3
pusha
pushf
addb
jbe
loop
mov
push
push
test
xor
jne
hlt
mov
ds
jo
lea
pop
vmovntps
cltd
cmp
mov
sahf
mov
push
mov
adc
int
xor
mov
inc
aad
xor
ljmp
les
cld
cwtl
sar
mov
inc
insb
mov
cmp
mov
jae
lods
push
mov
inc
push
add
movzbl
cmp
data16
cmp
cltd
xor
data16
decl
nop
xchg
fsub
inc
data16
dec
les
add
cmpsb
and
es
pop
jno
cmp
or
ret
mov
mov
test
test
and
mov
imul
xor
push
je
jp
inc
orl
rol
jb
imul
jg
add
jmp
push
mov
cmpsl
and
aam
mov
notrack
ss
cmp
cmp
cmp
jmp
xor
ret
das
inc
xchg
jle
int
leave
pop
mov
jbe
xchg
jnp
mov
jl
hlt
ljmp
ljmp
add
lahf
mov
mov
push
jno
mov
add
pop
movsb
imul
aas
enter
fsubrs
mov
mov
lea
cmp
add
sub
mov
cmp
mov
les
fldl
add
pop
push
inc
addb
into
cmp
pop
hlt
mov
orl
lcall
push
fisttpll
les
test
int
scas
add
cmp
jbe
mov
pop
jne
add
add
add
xor
sbb
adc
dec
add
test
mov
stc
or
sbb
test
js
push
and
mov
loope
jecxz
adc
hlt
jbe
add
push
jae
mov
out
sub
mov
add
push
cld
sbb
adc
rcrl
push
add
inc
adc
jo
add
add
push
sbb
mov
adc
and
jne
adc
inc
push
push
flds
jb
loope
mov
jne
mov
add
mov
mov
les
mov
sbb
out
sub
pop
mov
mov
xchg
mov
add
sub
orb
call
pop
mov
xchg
push
push
mov
rolb
inc
out
mov
pop
sub
cmp
and
inc
inc
push
xorl
cmpl
call
je
test
push
nop
sbb
or
jnp
dec
icebp
leave
mov
insl
orl
add
inc
nop
cmp
test
jns
sub
or
pop
clc
dec
les
mov
ficompl
movsb
push
loope
call
pop
adc
ret
add
sti
bound
call
pop
xor
push
jmp
fdivs
pop
sarl
inc
push
add
enter
pop
mov
adc
notb
or
xor
cmp
fmull
aas
xchg
cmp
mov
sub
mov
xor
or
sub
sbb
jae
sti
fists
loope
cld
mov
inc
nop
fucomip
jnp
pop
xchg
push
sub
jne
outsl
mov
xlat
je
loop
ret
shrb
fadd
sub
call
push
nop
sbb
mov
shlb
sbbb
pushf
push
ret
xor
inc
shl
ss
adc
loop
jmp
add
sbb
pop
ficomps
adc
adc
xor
push
adc
ret
jle
inc
je
push
lcall
push
fld
pop
push
adc
fstpt
dec
les
adc
mov
inc
movsb
xchg
rclb
sub
cmp
mov
cwtl
and
mov
inc
aam
jne
jo
mov
test
push
cmp
cmp
out
call
aaa
push
or
sub
shll
add
ljmp
xor
js
je
push
mov
nop
push
add
xor
sub
push
test
add
and
xor
pusha
jmp
out
int3
lds
jbe
icebp
mov
int
push
cld
or
xlat
clc
mov
jmp
or
sub
repnz
mov
daa
mov
mov
jb
xchg
inc
inc
test
loope
incl
inc
testl
mov
add
xor
sub
xor
dec
push
jbe
or
dec
mov
jbe
incl
fsubl
pop
mov
mov
mov
xor
or
xchg
je
adc
and
dec
addb
mov
push
fnsave
dec
inc
es
jbe
ret
add
loopne
lods
inc
je
push
call
flds
xchg
add
loope
enter
xlat
adc
sarb
xor
push
sub
dec
mov
add
daa
jp
push
lods
call
add
add
iret
xchg
leave
inc
lods
popa
out
push
ljmpw
and
xchg
push
push
inc
mov
inc
cmp
xchg
rclb
lcall
dec
pop
js
loopne
call
jg
cmp
mov
add
xchg
cli
sbb
outsb
jne
mov
add
xchg
mov
or
or
pop
pop
lret
cwtl
mov
push
or
jne
fs
fcomip
jmp
push
loop
adc
adc
jns
lret
pusha
fs
addl
xor
mov
cli
mov
push
or
mul
dec
pop
loopne
add
adc
adc
je
mov
or
movsb
je
fisubrl
mov
test
push
pop
pop
sbb
jbe
push
push
stos
call
fnstenv
adc
fnsave
repz
add
xchg
mov
sub
dec
insb
fdivl
stos
push
push
add
mov
mov
sub
lds
push
je
ljmp
arpl
sbb
or
xor
dec
or
scas
mov
and
add
aam
jo
inc
push
inc
popa
or
mov
and
jo
inc
push
lods
mov
and
sub
and
mov
xor
loopne
std
je
xchg
or
and
shl
icebp
cwtl
popa
adc
mov
cmc
mov
clc
loopne
decl
push
stc
mov
inc
add
pushf
test
nop
inc
add
inc
or
popa
cmp
test
mov
cmp
or
jmp
or
in
aad
push
cld
outsl
push
incl
sub
or
sti
mov
clc
adc
cmp
jne
add
pop
ret
test
fs
cmp
insb
fs
or
inc
hlt
push
dec
sub
xor
leave
pop
and
cmpsb
adc
test
clc
call
call
pop
pop
and
clc
push
xchg
adc
or
or
xor
dec
mov
jae
sbb
ljmp
add
lods
call
js
enter
xchg
mov
mov
popa
cmp
mov
pop
sub
inc
loope
push
adc
dec
std
xchg
push
push
loopne
cmp
decb
xchg
fistps
cmp
push
add
call
xchg
xchg
cmp
mov
mov
hlt
loopne
test
add
fimuls
add
fildll
dec
xchg
aas
sbb
pop
pop
inc
imul
fwait
mov
scas
addb
ret
popa
pop
addb
xchg
call
pusha
pop
add
or
and
pusha
push
insb
sub
push
testb
push
push
les
mov
add
lea
add
loop
push
sbbl
out
or
push
push
orb
pop
out
mov
add
jne
ss
mov
aam
negb
es
inc
fcom
xor
dec
lret
aam
add
lock
add
mov
xor
dec
sbb
jge
pop
pop
les
pop
js
mov
aam
idiv
and
je
mov
orb
xor
mov
jo
nop
insl
mov
xchg
xchg
inc
jle
cmp
mov
mov
cli
mov
add
inc
ljmp
incl
mulb
inc
cmp
inc
push
enter
jle
xchg
or
cmp
enter
pop
jb
mov
and
outsb
jle
push
nop
mov
fbstp
addb
xor
xchg
lock
call
mov
jle
jae
jne
pop
mov
cmp
add
push
call
incl
and
pop
add
mov
decl
mov
add
lock
mov
enter
jo
push
test
jge
aad
inc
in
call
dec
mov
lcall
cli
in
add
add
cmp
loopne
icebp
fbld
mov
clc
pop
loope
imul
and
inc
jbe
push
js
fbld
rorb
add
lea
insb
aad
push
pop
cmp
jl
mov
mov
divb
cmc
push
into
or
test
jge
call
ret
xchg
or
jne
or
mov
shll
mov
mov
pushf
add
push
arpl
out
fidivrl
je
add
mov
xor
push
cwtl
clc
bound
and
sbb
add
mov
in
xor
mov
pushf
mov
lods
loop
push
mov
add
popa
je
ror
loopne
call
shrb
jo
xchg
dec
push
loopne
push
test
outsb
fcoms
and
mov
mov
xor
call
or
outsb
je
je
mov
pop
call
cmpsl
sbb
loop
jno
fildl
sar
add
or
sbb
add
pushf
lcall
adc
call
mulb
ss
pop
and
scas
push
or
lea
lea
dec
mov
and
push
sbb
mov
clc
add
test
jae
inc
loopne
mov
pop
xor
jo
inc
ss
scas
cmp
jg
test
outsb
mov
jb
add
adc
pop
imul
mov
or
imul
pop
xchg
pop
pop
sbb
add
adc
testb
mov
cs
xor
enter
add
mov
lods
and
push
or
dec
loop
ss
and
mov
add
or
dec
mov
and
mov
push
sbb
shlb
popa
ret
adc
mov
lcall
cs
outsl
repz
and
rcr
sbb
inc
call
lock
mov
push
call
add
push
mov
and
add
pop
test
mov
ds
add
scas
notb
sbb
ffree
add
cmp
pop
aam
inc
and
adc
rclb
insb
or
icebp
or
fs
lahf
stos
mov
push
std
call
mov
push
cmovne
or
pop
lock
into
dec
jb
hlt
mov
or
jl
mov
mov
push
clc
pop
adc
cld
adc
and
call
insb
add
lock
sub
dec
aam
dec
js
xchg
add
mov
shrb
pusha
xor
xor
gs
mov
test
add
add
xlat
pop
cld
int3
sub
xor
ret
leave
mov
shlb
inc
add
jge
dec
push
push
add
lea
mov
xchg
push
mov
mov
mov
adc
insl
xor
fcoms
les
sbb
xor
mov
lock
add
mov
push
enter
sar
add
in
jmp
mov
mov
push
jnp
jo
fnsave
into
jb
mov
add
jge
cmpsl
or
or
xor
nop
scas
js
sub
mov
jno
in
push
xchg
ds
dec
in
adc
sbb
mov
fisubrl
push
add
mov
test
std
inc
call
clc
pusha
aaa
jo
add
jg
xor
pop
test
adc
xchg
jo
cmpl
adc
cmp
add
sub
clc
aam
push
pop
mov
std
sub
std
addl
loopne
mov
add
inc
jne
gs
lock
lock
adc
push
adcl
dec
call
mov
pop
sbb
mov
dec
call
mov
pop
andl
xlat
xchg
roll
ss
or
and
lock
push
and
mov
sub
jbe
mov
jg
mov
push
xor
loopne
sub
cmp
repnz
fistl
mov
fildl
repz
shrl
mov
and
scas
add
push
add
out
cmp
pop
mov
xor
xor
xchg
mov
scas
subb
daa
add
and
hlt
data16
call
outsb
pushf
cld
pusha
fistpll
inc
mov
mov
jecxz
into
shlb
les
cmp
push
sbb
sbb
dec
push
lock
mov
test
jge
mov
out
inc
idivl
pop
in
mov
mov
push
jl
xor
sbb
loopne
mov
cmpsl
inc
testb
sub
into
xor
test
mov
jo
xor
and
add
lcall
or
add
xchg
iret
test
aam
or
sub
fcmovb
mov
lods
push
or
sbb
mov
push
sbb
ret
clc
pop
adc
nop
add
push
jno
mov
mov
mov
cmp
shll
add
mov
adc
fs
loopne
fbld
and
xorb
jle
mov
jl
add
pop
mov
aam
cmp
ds
nop
fs
mov
cli
mov
add
mov
xor
xor
out
push
push
test
test
jb
stc
lret
lods
inc
push
jp
xor
xchg
sub
dec
clc
cmp
sbb
pop
push
adc
add
test
inc
call
mov
inc
repz
sbb
push
clc
xor
movl
repz
adc
mov
cmc
add
push
lea
push
test
test
andb
xor
in
push
in
cmp
adc
adc
push
xor
cwtl
mov
cld
addb
in
fwait
cmc
inc
dec
adc
add
addb
aam
test
sti
jne
mov
ret
and
mov
ds
mov
dec
jle
jle
ja
aaa
inc
mov
push
mov
or
outsl
push
dec
jo
movsl
scas
add
cmp
ljmp
outsl
pop
push
mov
data16
test
sub
iret
jmp
fwait
icebp
cmp
add
leave
inc
add
movb
mov
mov
lcall
adcb
xchg
popa
daa
inc
pop
xor
jno
mov
addb
pop
sahf
gs
add
outsb
dec
adc
mov
pop
dec
sbbl
clc
orl
lods
cltd
test
iret
or
cmp
js
jl
out
xchg
jo
cs
mov
pop
add
pop
sbb
and
call
push
add
in
call
test
adc
paddd
sub
fs
fistps
sbb
push
cwtl
orb
jmp
mov
hlt
std
je
and
mov
cmp
inc
movb
jl
dec
pushw
mov
jns
rol
dec
sbb
inc
and
cwtl
test
aaa
push
cmp
leave
lea
iret
or
call
hlt
mov
clc
gs
loopne
xchg
mov
imul
mov
mov
fs
pop
add
inc
push
add
subl
sarl
dec
in
sarb
xchg
xchg
inc
add
pop
push
fcomi
mov
add
push
orb
rolb
std
jge
push
xchg
inc
push
or
ret
push
movsb
rolb
fadd
aam
xor
sbb
sub
sar
mov
inc
push
rcrb
xor
sbb
dec
or
push
loopne
push
adc
bound
or
movsl
test
imulb
lock
mov
clc
call
inc
add
sub
popa
xor
mov
mov
add
ret
in
or
movhps
and
jbe
push
mov
mov
adc
mov
pop
push
rorb
push
mov
and
inc
js
je
and
shlb
sysenter
or
filds
subb
or
dec
adc
ljmp
mov
in
movsl
test
push
je
push
mov
test
push
push
loopne
mov
andl
xchg
incl
int3
xor
dec
or
je
ret
stos
mov
inc
je
sarb
shrb
js
xor
inc
push
sub
push
cmp
aam
jg
shlb
add
pop
jmp
add
out
outsb
adc
sbb
leave
rcll
cmp
pop
movsb
sbb
cmp
jne
je
push
mov
ljmp
mov
sbb
push
rolb
call
pop
jmp
fimull
filds
pop
gs
add
leave
ret
pop
test
je
pop
cli
cs
add
je
xor
jne
mov
das
inc
or
lods
test
mov
add
sbbb
fs
add
add
jl
jne
and
jmp
inc
or
call
jne
add
push
cmpsb
test
jne
sbb
rclb
ss
jbe
adc
sub
jmp
mov
popf
push
sbb
jl
cmp
je
fstl
sbb
push
jecxz
and
inc
mov
outsl
stos
xor
jbe
ret
pusha
or
dec
pusha
jmp
sti
mov
and
push
push
sbb
pop
imul
dec
or
popa
sbb
cmp
inc
xor
std
incl
test
push
adc
pop
mov
fs
jl
and
or
adc
scas
enter
out
cmp
testb
or
cld
jne
ljmp
loopne
xorb
cli
das
dec
or
loopne
add
xor
and
sub
cmp
jo
fldt
and
jl
push
arpl
or
fnstsw
xchg
sub
popa
pop
ljmp
loop
loopne
incb
sub
call
clc
mov
sbb
or
fwait
sub
pusha
sbb
push
out
push
bound
fs
cmp
ds
je
mov
cmp
add
daa
aad
xchg
call
inc
and
pusha
arpl
fwait
mov
in
pusha
hlt
fs
call
mov
jle
ljmp
jb
sarb
movl
lods
test
or
mov
loop
nop
mov
mov
lea
loopne
pop
dec
mul
daa
popa
inc
mov
inc
adc
pop
test
add
pop
sbb
inc
inc
loop
mov
adc
out
xor
adc
push
add
dec
add
pusha
mov
into
mov
jne
xchg
add
shrb
inc
and
cs
fldt
or
cmp
mov
call
jle
xchg
mov
pusha
push
mov
cli
fcomip
data16
pop
loopne
in
mov
add
mov
and
outsl
loopne
popa
loopne
hlt
loop
push
cmp
xlat
add
add
lods
add
adc
jmp
push
xor
cwtl
mov
loopne
loope
pop
mov
loopne
pop
pusha
loop
fildll
and
loopne
mov
aam
es
loope
push
jmp
jmp
add
addb
andb
jp
adc
ficoms
je
mov
imul
inc
repnz
fs
fisttpll
and
inc
inc
jb
ljmp
clc
mov
push
mov
icebp
pop
adc
mov
cmpsb
addb
jge
cmpb
sbb
add
mov
mov
in
cmpsb
mov
push
fldt
cmp
pop
insl
add
pop
xorl
mov
incb
clts
je
cmp
fmul
xorb
add
loope
push
call
cmp
add
sub
aas
or
sub
mov
adc
adc
add
push
add
jl
data16
out
sbb
in
out
call
ret
mov
loopne
call
lea
push
dec
jg
leave
ret
mov
mull
add
adc
sub
and
je
inc
adc
add
or
scas
add
mov
shlb
pop
add
stos
pushf
mov
mov
xor
jnp
push
adc
cmp
cmpsb
lock
test
and
movsb
mov
lret
or
push
int3
scas
xor
and
add
or
dec
jne
sub
lods
mov
adc
lret
dec
pop
inc
sub
test
ss
ret
jo
popa
add
pop
mov
pop
push
insl
aas
sub
cmpb
das
cs
sub
enter
inc
xor
mov
add
clc
jbe
push
jl
add
test
les
add
jbe
hlt
inc
aam
mov
add
dec
xor
call
xchg
mov
mov
mov
clc
push
ficomps
cld
pop
incl
push
inc
inc
popf
jo
mov
adc
call
jo
fistl
repnz
jns
or
mov
rclb
inc
jno
xchg
mov
icebp
cmp
xor
and
iret
mov
clc
pushl
or
hlt
mov
icebp
adc
and
aaa
ss
mov
xchg
aaa
pop
pop
jo
lock
icebp
es
jne
xor
inc
das
mov
jg
jmp
xchg
repz
push
or
or
cmp
sbb
xor
pop
ss
adc
pop
test
xor
bound
add
pop
push
icebp
sub
fwait
sbb
pop
ds
jae
pusha
mov
mov
testb
cmp
adc
xchg
and
das
jo
and
adc
fs
ljmp
shr
shlb
mov
add
pop
push
add
dec
or
cmpsb
jb
add
add
dec
or
ljmp
mov
sbb
mov
xlat
call
rcrb
icebp
or
inc
jg
cld
push
xchg
cmc
and
sbb
or
jb
add
dec
outsl
decl
cmpsb
leave
jae
repnz
and
push
and
ret
pop
lcall
fidivl
sbb
mov
sbb
pop
mov
bound
mov
js
cmpl
pop
adc
and
lret
clc
lock
and
dec
mov
andb
shlb
fadds
incb
adc
incl
mov
es
sub
sahf
add
outsb
js
add
mov
or
xor
dec
lock
je
sbb
test
xor
ss
pop
mov
pusha
mov
jecxz
test
fs
pop
or
addr16
mov
icebp
xor
and
and
mov
bound
iret
and
fs
add
icebp
mov
jne
insb
xor
addr16
push
das
subb
pushf
mov
sar
ja
ja
jo
xor
and
fdivp
outsl
movsb
mov
push
mov
clc
sbb
add
mov
lock
adc
mov
mov
inc
call
mov
mov
cli
sahf
add
cli
cmp
lcall
fiadds
mov
stos
adc
test
fs
aaa
add
and
jb
test
inc
mov
cmpsb
cmp
mov
mov
push
xor
std
arpl
call
mov
jo
repz
add
jne
ja
call
jo
sbb
and
nop
jbe
scas
adc
fcom
lock
das
adc
sub
test
repnz
lods
push
adc
enter
lock
jg
pop
loop
lods
lock
mov
push
jo
jp
mov
jns
adc
fstpt
lock
ds
inc
cmpl
inc
inc
lock
fdiv
cltd
ljmp
fdivl
push
adc
test
xchg
cmp
pop
loop
ljmp
shlb
add
pushl
xor
lock
and
ret
and
int
add
cmp
cs
loop,pt
xchg
mov
aaa
js
aam
dec
sbb
test
add
dec
push
push
inc
mov
or
push
aad
and
pop
lods
jno
or
inc
lock
cmpsb
sub
mov
pop
mov
roll
dec
sub
loop
or
es
shll
push
jp
dec
call
xor
jb
mov
push
out
int
mov
cmp
or
sbb
outsl
dec
or
sbb
sbb
mov
fdivs
or
sub
test
push
jmp
rep
lock
fildll
shlb
sub
or
pop
call
mov
mov
mov
ret
stos
sub
ja
clc
sub
fidivl
lock
jo
xor
push
mov
add
popa
push
push
mov
fs
mov
xor
pop
call
mov
xor
orb
adc
add
popa
ret
cmp
or
les
clc
mov
xchg
push
xor
adc
divb
add
adc
push
sti
call
push
pop
pop
jns
adc
andl
sub
fdivrp
dec
inc
add
sub
mov
push
scas
movsb
lahf
je
lock
rorb
out
clc
jo
in
sub
pop
cmp
and
xchg
aam
jo
outsb
jo
mov
or
push
jbe
mov
push
out
xor
jae
addl
cmc
js
or
inc
adcb
pop
sub
jno
popf
nop
inc
movsb
aam
lock
ljmp
inc
add
push
jno
mov
ja
sbb
sbb
adc
add
or
adc
les
fiadds
xor
adc
ret
jb
inc
xor
xorl
cs
lock
mov
movb
cmc
mov
pop
mov
push
rorl
add
popa
loop
ds
call
loop
sbb
mov
sbb
lahf
or
jb
xor
push
xor
mov
ret
mov
mov
subb
aad
call
sbb
xor
hlt
add
and
and
lea
rcrb
hlt
add
push
jl
xchg
sbb
ja
out
aad
ret
je
jo
sbb
cmp
sub
sub
push
push
mov
pusha
and
and
lock
mov
sbb
inc
or
sub
fildll
insl
inc
add
scas
nop
inc
jmp
push
hlt
mov
dec
xlat
add
pop
add
enter
mov
lea
pop
cs
inc
jmp
jb
hlt
fwait
add
add
pop
popa
lea
and
or
or
rcrb
lea
dec
adc
add
cmpsb
mov
adc
mov
xor
test
aas
pop
or
cmp
rorb
sub
dec
decl
enter
ja
xor
shr
inc
mov
popa
add
jmp
andb
mov
add
and
pusha
rcr
cmpb
incl
cld
fsubr
sarl
add
sub
sbb
mov
fcmovnb
arpl
ret
jg
fcoml
dec
mov
mov
sbb
outsb
int3
orb
lds
push
sub
xor
es
and
or
inc
pop
insl
xchg
adc
clc
dec
jne
push
or
fisubl
push
mov
data16
jne
mov
adc
push
xor
push
sbb
mov
ficomps
cmp
je
inc
add
icebp
push
call
pusha
jp
decl
rorb
push
adc
mov
inc
push
mov
pop
repnz
test
rcl
aam
sbb
cmp
push
push
hlt
loopne
sub
pop
stos
adc
add
sbb
push
test
mov
dec
cmp
push
dec
push
test
or
jle
add
push
cmp
add
add
bound
jne
lea
sub
xorb
cmp
jmp
aam
xor
mov
je
rclb
bound
cli
rorb
icebp
dec
mov
jp,pt
js
push
ret
shrb
mov
sub
sarb
test
in
cmp
sbb
hlt
sbb
pushf
sbb
push
rclb
dec
out
sbb
push
xchg
leave
dec
push
out
add
inc
test
outsb
mov
push
or
add
sub
pop
lods
sub
cmp
addl
icebp
jp
cli
mov
xchg
lea
add
stos
jne
cmp
call
scas
cmp
pushw
or
xchg
add
dec
fmuls
shlb
adc
pop
dec
push
test
icebp
fbstp
shrb
fdivs
call
insl
add
sarb
add
cmp
push
rclb
add
pop
sbb
inc
aam
and
and
mov
mov
push
or
movsb
jne
mov
push
rclb
arpl
test
movsl
push
vsubss
hlt
cmp
jg
ja
test
test
jmp
jp
jno
cmpsl
nop
push
mov
inc
ja
mov
xchg
adc
pop
add
sti
add
and
xchg
shlb
jl
fildl
fldt
pop
fcomps
mov
clc
int
ror
push
nop
push
mov
aaa
loopne
push
adcb
loope
gs
xor
add
andb
and
jp
or
pop
add
cmpsl
or
lock
xchg
testl
push
pop
jle
fs
test
clc
subb
xchg
shl
sub
mov
ss
pop
pop
or
loopne
and
popa
pop
bound
cltd
hlt
cmp
xchg
add
push
enter
lock
add
incl
mov
clc
ret
ljmp
pop
loopne
pop
dec
pop
push
xchg
sbb
add
cmp
arpl
mov
push
push
add
inc
mov
loopne
push
inc
sbbb
adc
cmp
outsb
movsb
push
andb
loopne
push
push
adc
dec
pusha
jl
cs
hlt
out
dec
xchg
pop
and
jp
outsl
cmc
loopne
andl
adc
jmp
pusha
inc
pop
call
sbb
dec
add
sub
or
sti
inc
or
xor
jl
call
dec
lret
fs
bound
xchg
incl
add
or
push
gs
add
cmpb
add
xor
call
dec
fsubr
sbb
loopne
push
orb
xor
nop
inc
das
add
mov
and
fnstsw
lock
dec
jne
pusha
inc
pop
push
adcb
mov
pop
dec
je
dec
jmp
fsubp
add
scas
xchg
insl
push
push
mull
andb
push
cmp
lcall
stc
push
call
pusha
pop
adc
in
pusha
mov
pop
cmpsl
dec
jbe
pop
and
test
xor
add
add
testb
pop
incl
pusha
and
or
xchg
leave
loopne
popa
insl
into
clc
test
insl
bound
loop
push
jl
mov
push
pop
add
inc
jmp
jmp
sub
loopne
or
pusha
push
xor
cmp
jmp
mov
add
xor
sub
mov
fdivs
cli
sbb
lds
adc
xor
in
add
pop
stos
push
adc
mov
pop
push
sub
sub
xor
mov
dec
adc
mov
jno
scas
adc
fisttpl
push
mov
mov
hlt
outsl
int3
xor
lods
cmp
xor
push
add
pushf
and
adc
sub
inc
int3
add
add
and
sub
cld
inc
jecxz
daa
cmp
cltd
sbb
dec
loop
loopne
in
incl
call
push
in
and
in
scas
negl
repz
leave
sbb
clc
fwait
std
aaa
popa
and
bound
loope
mov
aaa
jmp
pushf
sbb
and
sbb
cli
jmp
notb
and
dec
cmc
adc
test
adc
aam
bound
loopne
js
je
and
cmp
lock
push
inc
and
xor
push
xorb
jb
leave
inc
xchg
jo
call
icebp
subb
add
xchg
clc
mov
cmp
jl
insl
mov
cmp
dec
mov
or
push
or
sbb
xchg
loope
mov
xor
sbb
xchg
cli
outsl
mov
xor
cmpsl
mov
cmp
inc
fs
or
mov
subb
cld
inc
xchg
repnz
test
sub
cli
pop
or
xor
lea
push
scas
sbb
pop
xor
clc
iret
call
adc
lock
jmp
in
and
jne
test
mov
incl
add
mov
jo
sbb
aam
mov
adc
jg
fldcw
add
push
jg
push
lea
push
push
jno
mov
or
fnsave
xor
call
cld
lock
pshufw
or
out
ret
and
inc
divb
cmp
adc
das
clc
pushl
xor
loope
jmp
push
mov
rcll
sub
jno
add
cmc
rclb
into
xor
pop
lock
popa
ljmp
rclb
jmp
jo
pop
mov
scas
inc
xor
mov
xor
xor
sbb
shr
fcomip
fstpt
xor
add
xor
xchg
mov
and
dec
add
mov
cmp
adc
push
out
cmpl
mov
add
sbb
sbb
cld
or
aaa
es
ja
push
loopne
add
sub
xor
inc
bnd
mov
cmovns
jne
mov
adc
jb
lock
subb
inc
jbe
sub
inc
fbld
xor
sub
xor
or
cmp
and
roll
or
dec
push
int3
jmp
pop
or
mov
xor
call
pushl
icebp
xor
and
aas
add
lock
cmp
adc
jo
xor
mov
out
cmp
mov
out
cmpsb
hlt
hlt
jbe
ja
jmp
mov
push
jle
inc
aaa
mov
ljmp
icebp
push
mov
fs
popa
push
and
jae
jl
mov
in
fisubs
jo
xlat
push
jo
sub
mov
push
xor
dec
loop
mov
push
mov
jmp
lock
call
je
and
mov
mov
mov
mov
pop
and
jge
repnz
inc
dec
add
insl
xor
repnz
add
xor
stos
adc
mov
sub
call
mov
sbb
icebp
mov
push
subb
bound
lea
icebp
and
es
sbb
insb
mov
adc
push
jg
sub
call
push
dec
mov
pop
in
dec
incb
add
outsl
hlt
add
les
jg
jg
jb
test
push
icebp
test
cltd
fstpt
add
mov
loopne
mov
adc
sub
cmp
mov
lock
pop
xchg
outsb
in
lds
cmp
mov
lds
mov
jo
aam
imul
js
cmp
pop
loope
mov
jmp
adc
mov
and
or
and
dec
or
push
test
outsl
cli
in
lret
adc
xor
test
jg
jo
cmp
out
push
data16
xor
push
sbb
mov
sub
in
add
push
inc
sub
fs
lahf
push
xchg
push
stos
into
jns
push
or
sbb
out
xor
add
dec
and
add
sbb
insb
and
scas
popa
jb
inc
or
sbbb
popa
and
push
push
test
mov
dec
add
ja
cli
pop
jno
mov
call
mov
fmull
push
sub
inc
cmpsb
scas
adc
lret
xor
aad
push
cmpsl
mov
in
dec
push
push
dec
inc
jbe
and
push
cmpsb
inc
scas
cmp
push
xor
scas
push
push
clc
push
xchg
xchg
mov
incb
cwtl
scas
add
cmp
pop
push
dec
clc
push
xor
push
and
div
sub
lock
jo
cmp
jae
fsubrl
pop
icebp
fbstp
daa
lea
xor
dec
or
sti
jecxz
lods
mov
test
inc
lock
notb
pop
cmc
mov
push
pop
add
icebp
mov
enter
daa
data16
push
int3
rcrb
loopne
dec
in
testl
cld
lea
xchg
and
mov
orb
push
lock
inc
push
leave
mov
inc
nop
push
add
inc
or
cmp
cli
aas
sbb
or
or
out
clc
inc
test
adc
push
mov
lcall
mov
mov
rclb
jo
push
lock
pop
push
cli
jo
mov
and
xorb
push
adc
mov
lea
mov
test
push
push
aaa
orl
adc
mov
cs
ja
lea
call
xor
fbld
movsb
les
add
push
push
inc
mov
ss
cli
inc
outsb
icebp
aas
pop
popa
add
addb
test
pop
repz
add
xchg
sbb
mov
push
jno
mov
or
leave
mov
hlt
in
lock
fs
loopne
into
shlb
add
int3
and
cmp
or
add
lret
scas
add
add
stc
add
sbbb
shr
mov
and
pop
inc
mov
and
mov
mov
lret
mov
or
fsubs
xlat
inc
or
int3
andb
sub
jbe
adc
js
sub
mov
and
jmp
xor
fistpl
bound
sbb
xchg
mov
push
popf
xchg
xor
loop
mov
cmp
mov
mov
in
xor
mov
incl
mov
inc
call
add
lcall
pop
inc
movsb
xchg
jb
nop
cli
dec
in
ret
inc
mov
cmp
pop
lahf
fs
pop
and
pop
incb
push
pop
enter
jge
jbe
add
mov
repz
pusha
adc
mov
or
sar
std
lds
adc
lock
test
inc
jg
popf
xor
imul
jns
cmp
cmp
jnp
add
faddl
inc
test
push
sbb
lock
dec
mov
add
ret
xor
js
mov
addb
inc
and
inc
mov
mov
cld
add
test
or
pop
data16
das
test
addb
incl
xor
loop
xorb
sbb
loope
mov
adc
fistl
or
pop
sbb
cmp
dec
push
mov
cwtl
in
movsb
test
subb
scas
pusha
inc
cld
mov
push
clc
inc
addb
mull
popf
mov
mov
ret
pop
push
jmp
push
ret
xor
ret
jl
push
add
in
dec
cmp
and
out
rorl
inc
enter
inc
pop
adc
roll
rclb
orl
icebp
or
push
xor
sbb
int
mov
mov
jg
loopne
cmp
dec
cmp
jno
outsl
xchg
dec
jle
lods
incb
inc
cmp
mov
mov
cmp
call
es
divb
xor
push
mov
rorb
add
or
push
sub
xor
inc
shrb
insl
leave
incb
clc
roll
jns
insl
movb
jo
call
inc
adc
add
adcb
mov
sar
stos
pop
inc
mov
subl
je
push
push
or
pop
or
add
es
or
daa
mov
outsl
add
sarl
ret
and
add
mov
add
sbb
mov
push
or
ficompl
jno
add
cli
cmp
cmp
add
mov
adc
inc
ret
call
push
cli
inc
fldcw
rol
mov
std
mov
ret
cmp
dec
xlat
inc
repz
xchg
aam
sub
dec
pop
lock
push
pop
adc
in
mov
xor
in
sbb
cli
jg
in
push
ror
adc
in
add
frstor
and
or
or
test
enter
sbbl
iret
fmul
cmpsl
mov
push
sbb
testl
or
push
adc
add
aam
adc
pop
sar
mov
and
inc
jmp
push
push
pop
xchg
and
pop
mov
push
jl
call
and
cli
fwait
mov
dec
in
jbe
push
sub
imul
inc
data16
mov
adc
jbe
popa
popa
add
js
fadds
mov
add
insl
fisubs
pop
test
loopne
mov
jmp
call
aas
popa
cld
cmp
je
push
loopne
or
add
xor
push
es
inc
add
jo
pop
and
dec
in
shrl
outsl
into
arpl
push
je
pusha
sub
out
cmp
push
push
sub
les
clc
push
xchg
or
push
inc
loopne
je
shrl
mov
adc
or
dec
call
cld
ret
clc
cld
ljmp
mov
daa
push
pusha
sub
fadds
icebp
fbld
cld
push
test
and
gs
popa
add
push
xlat
inc
jb
push
xchg
into
cmp
mov
mov
ja
push
inc
jecxz
mov
mov
adc
or
sbb
push
mov
ret
in
jb
pop
incl
dec
xchg
push
loopne
or
cmp
pop
add
data16
aas
mov
into
xor
inc
test
jne
add
pop
pusha
inc
inc
mov
dec
enter
dec
hlt
sbb
and
fidivs
fisttpll
mov
into
mov
mov
cmp
aaa
xor
dec
push
loopne
pop
lds
repnz
ds
inc
or
lods
jb
hlt
cmp
icebp
pop
add
inc
cmp
mov
pop
dec
inc
or
mov
push
pop
repnz
pop
push
stos
mov
insb
leave
pop
dec
popa
imul
sbb
inc
fimull
sbb
or
arpl
test
cmp
pusha
sub
lock
inc
sub
sbb
pop
xor
adc
push
mov
loop
stos
push
adcb
and
lea
push
test
xor
mov
out
xor
popa
loopne
cmp
loop
loopne
testb
cmp
aaa
pop
popa
loope
sub
jno
cltd
fucompp
leave
pusha
ljmp
push
and
pusha
les
call
clc
loopne
sbb
sti
pop
out
pusha
add
add
jb
clc
pop
bound
stc
cli
jp
fistl
xor
push
out
jle
loope
mov
jno
or
inc
sub
mov
add
and
mov
popa
mov
jo
repnz
sar
mov
inc
lock
jnp
mov
add
mov
jp
add
xchg
loop
data16
mov
mov
aad
ret
sbb
cmpsb
loopne
cmp
mov
or
mov
shlb
or
dec
mov
pop
pusha
jle
or
cmpsl
or
adc
add
cmp
mov
inc
lods
push
mov
inc
stos
test
sub
pushl
leave
test
sub
xchg
push
mov
js
loopne
call
cmp
mov
add
jl
repnz
pop
pop
js
stos
jecxz
addl
fneni(8087
inc
outsl
push
lcall
adc
mov
shr
arpl
orb
push
clc
or
test
pusha
jl
pusha
inc
ds
push
movsb
xchg
xor
pop
or
mov
cmpsb
sarl
jb
dec
push
fadd
decb
inc
mov
mov
std
mov
lods
add
mov
test
dec
add
cmp
dec
mov
mov
cmp
or
in
xlat
fisubrs
cwtl
mov
push
mov
jo
aaa
add
loope
inc
add
sbb
push
jnp
push
jo
and
pop
cmp
xchg
ja
lar
jne
push
mov
icebp
jo
add
or
lods
das
and
mov
in
int
arpl
xchg
je
adc
pop
mov
scas
xchg
pop
adc
mov
pop
add
or
push
push
adc
jecxz
and
cwtl
jle
or
and
push
orb
push
or
mov
mov
mov
add
cmp
outsb
ret
add
loopne
jmp
and
bound
mov
ss
jg
mov
sub
cltd
hlt
and
inc
push
or
mov
push
jl
int
incl
jbe
jl
push
jl
loop
in
xor
xchg
xor
ljmp
jmp
cmp
mov
mov
xor
clc
setg
les
push
subl
push
enter
icebp
mov
insl
dec
pop
push
rol
add
pop
movsb
subb
subl
call
add
inc
stos
pop
pusha
mov
sbb
loopne
pop
jmp
and
xchg
fs
inc
jo
xor
mov
pop
test
dec
sub
inc
xor
xchg
jp,pn
push
das
pop
jo
mov
mov
sbb
pusha
xor
mov
add
mov
or
xor
mov
xor
pop
icebp
inc
mov
ret
mov
jo
lea
fadds
push
cld
mov
call
sub
aaa
mov
sbb
mov
sbb
inc
test
jo
adc
hlt
jl
mov
decb
xor
jo
jbe
addb
je
xchg
fcos
ffree
mov
call
dec
or
test
xchg
mov
add
add
add
push
add
lcall
in
faddl
outsl
call
sbb
andl
cmp
add
je
ret
jmp
and
sbb
in
repz
push
or
jo
imul
and
fisubs
popa
and
pop
mov
stos
test
pop
out
es
pop
mov
nopl
adc
call
std
fwait
loopne
call
xor
test
je
call
dec
jl
ret
test
mov
push
xor
fbld
mov
xchg
call
mov
jg
add
inc
add
jl
loop
mov
push
push
sbbb
pop
add
mov
out
repnz
dec
pop
xor
adcl
dec
insl
cmpsb
mov
adc
push
add
fistps
outsb
jne
rorl
jecxz
clc
lock
imul
xchg
das
adc
or
lods
lock
jne
stos
mov
cli
inc
add
mov
je
add
repnz
decl
pop
inc
ret
es
cmpsl
lock
mov
lcall
in
lock
jae
ljmp
mov
add
dec
adc
mov
pop
mov
mov
and
ss
addl
lods
add
sbb
sub
mov
pop
push
or
jo
dec
and
and
jo
dec
mov
push
xchg
test
sub
jmp
inc
xor
add
push
mov
cmp
inc
inc
inc
les
push
sub
inc
inc
ss
or
jae
dec
dec
scas
call
xor
add
pusha
add
repnz
call
and
lret
nop
loope
loope
jne
lock
call
outsl
nop
sarb
inc
xor
add
cli
lock
mov
adc
popf
jle
fdiv
incl
push
and
push
fwait
mov
lock
fstpt
push
xchg
pushl
mov
sbb
shlb
jno
pop
sub
add
mov
das
nop
xor
scas
fcomps
push
lock
loopne
pushf
shlb
sub
sbb
add
imul
xor
je
add
mov
ljmp
fisubs
xor
icebp
xorb
inc
loopne
xchg
pushf
mov
cmp
mov
fcomip
mov
add
mov
sbb
jg
adcb
inc
imul
mov
jecxz
scas
jp
fcom
mov
scas
mov
mov
pop
ret
cmp
pop
les
ja
sub
enter
cwtl
xchg
jg
or
mov
cmp
inc
aaa
inc
cli
out
sub
mov
cmpsb
cltd
idiv
xchg
sarb
jmp
and
test
add
sbb
clc
sub
push
push
adcl
sbb
out
divl
jl
and
dec
mov
sub
clc
add
imul
mov
insb
xor
gs
cld
jmp
inc
xor
push
pop
bound
mov
incb
or
pusha
fs
mov
fnsave
push
or
data16
cmpb
and
push
call
nop
mov
call
mov
cmp
adc
loopne
sub
decl
int
stos
jg
je
jmp
mov
sbb
lret
lock
push
lock
add
scas
lock
or
pop
mov
pop
pop
enter
repnz
lock
jmp
pop
adc
rcrl
inc
inc
roll
xchg
bound
shrl
daa
lock
cwtl
test
lock
outsb
clc
iret
test
out
insb
lock
push
xor
lock
adc
mov
outsb
mov
and
mov
test
mov
jo
lahf
jae
pop
jl
ret
pop
or
mov
xor
jg
add
imul
and
fadd
mov
sarb
add
mov
add
fdivl
jb
das
fs
xor
clc
sbb
test
shrb
xor
mov
xlat
and
fdivrp
ljmp
add
jge
xchg
xorl
mov
das
cmpsb
rcl
dec
call
addl
xchg
or
mov
and
in
inc
fistpl
and
lea
cmp
jmp
icebp
and
bnd
mov
pop
repnz
jne
mov
bound
das
nop
rolb
or
stos
and
call
rolb
push
dec
adc
jp
pop
push
pop
dec
jo
mov
push
push
clc
mov
push
inc
sar
xchg
push
xor
push
jb
cwtl
inc
frstor
mov
mov
stos
outsl
dec
push
mov
and
out
jmp
cmp
push
push
add
or
dec
cmp
xor
out
sub
sbb
mov
jns
sbb
sub
and
pop
xchg
ficoml
cmp
js
testb
cmp
add
subl
push
pushf
and
push
or
movsb
lock
fadds
add
pop
data16
std
addb
mov
dec
pop
std
sbb
ljmp
je
adc
and
jle
rorl
aam
push
aad
push
je
inc
adc
pop
ss
std
test
lods
inc
jne
push
cld
or
sbbb
inc
add
out
mov
sbb
mov
xchg
xor
inc
adc
out
add
sub
mov
lea
and
testb
loopne
sbbl
repnz
cmp
pop
add
dec
enter
sbb
push
and
push
or
sub
lcall
sbb
les
dec
clc
mov
sbbl
aas
pusha
add
ja
call
add
adc
pop
jno
popa
das
jmp
xchg
inc
mov
xchg
and
pop
sub
sbbb
shrb
pop
pop
dec
xchg
add
cmp
pop
xchg
outsb
stos
dec
fsubs
ss
inc
sar
inc
mov
push
adcl
out
push
aam
rcl
add
mov
prefetcht2
scas
ret
loopne
jecxz
sub
fcoms
pop
xor
mov
jge
aam
push
pushf
sbb
test
roll
cs
pop
clc
ljmp
and
mov
xor
rorb
and
push
cld
movsl
mov
and
cmpsb
rolb
add
jl
mov
dec
cmp
enter
dec
cmp
sub
aaa
add
cmp
and
pop
or
jo
xor
das
pop
mul
jl
cs
outsb
mov
ret
rcll
add
mov
fisttpl
xor
lret
aam
add
int3
adc
clc
rclb
pop
cld
push
bound
loop
pop
outsl
push
shrb
push
cmpsb
xchg
sbb
js
sbb
pusha
pop
dec
xchg
sbb
ljmp
hlt
cs
pop
sbb
or
push
test
add
xchg
fsub
fwait
xchg
xchg
push
addl
fistps
into
push
add
lret
jno
push
push
stc
sub
or
fmull
fcmovnb
or
dec
adc
test
shrb
insb
mov
adcb
jg
pushf
jne
pop
push
sarb
xchg
in
cmp
or
popa
inc
and
or
outsl
mov
dec
xchg
loopne
mov
cld
push
pop
rorb
and
adc
scas
mov
adcb
cmpsb
and
mov
push
jge
jg
and
ja
add
adc
xor
clc
daa
out
js
ret
mov
push
pop
and
adc
leave
mov
add
mov
hlt
orb
mov
fistps
popl
decb
add
bound
leave
call
push
lods
add
push
push
ss
adc
lods
sub
sub
and
mov
out
mov
dec
add
pusha
cli
dec
cs
inc
das
inc
decl
jmp
inc
stc
test
lahf
xchg
decb
pusha
je
inc
loopne
clc
aam
popa
cmp
sub
outsl
mov
add
jb
test
xchg
dec
ljmp
and
std
sub
in
mov
add
xor
notb
pop
lahf
jecxz
add
and
aaa
mov
mov
adc
add
add
add
sub
and
add
bound
test
insb
push
int3
xor
add
pusha
adc
insb
xor
push
test
int3
and
or
pusha
xor
add
cltd
push
nop
stos
movsl
andb
push
and
adc
cmp
pusha
adc
pusha
push
in
pop
and
inc
push
pusha
in
cwtl
mov
add
inc
dec
or
sub
xor
mov
jbe
mov
jp
adc
andb
fisttpl
cmp
repz
xorl
pop
or
or
jo
pusha
dec
sbb
jo
pop
pop
or
out
cmp
imul
jne
cmp
jg
and
xchg
sahf
popa
xor
lods
sahf
nop
sbb
pop
loopne
sbb
adc
xchg
jno
cwtl
inc
shlb
mov
jge
jle
sbb
jmp
clc
mov
pusha
das
push
mov
arpl
sub
loope
aad
add
fcoml
cmp
push
jne
lods
ss
sbb
ret
inc
push
xchg
inc
inc
push
adc
inc
push
subb
sbb
dec
repz
andl
xorl
xchg
popa
and
fildl
mov
push
and
sbb
adc
xor
and
addr16
xor
lcall
inc
lods
push
sub
popf
loop
je
jmp
in
in
or
dec
bound
inc
sub
decb
fs
and
ds
rclb
cs
xor
adc
loopne
add
dec
loope
cmp
aaa
nop
sub
pop
dec
jbe
fisttpl
and
mov
push
push
xchg
push
je
or
fadds
sub
dec
mov
jae
ljmp
loopne
adc
lret
sub
cmp
das
loopne
insb
sub
push
push
xchg
mov
add
popa
test
xor
mov
push
call
mov
mov
cmpsb
add
insb
or
push
mov
sub
or
push
lcall
orl
add
mov
add
push
call
in
push
inc
outsb
fdivrl
pop
inc
ss
bound
loopne
add
aaa
push
pop
inc
icebp
mov
mov
push
arpl
inc
add
loopne
clc
outsb
imul
push
pop
hlt
cmp
inc
loopne
in
out
inc
sub
pop
out
fwait
adc
ljmp
xor
popa
jns
mov
subb
outsl
pop
aam
pop
fcoms
xchg
lock
jo
std
xchg
xor
mov
or
enter
push
call
jno
jp
lret
mov
stos
or
push
xor
les
jle
xchg
cli
pop
xchg
mov
call
push
jo
sbb
enter
rorl
xor
dec
add
xor
adc
cmp
adcb
loop
inc
sbb
gs
add
or
pop
subb
inc
imul
add
push
lock
inc
push
fs
push
sub
xor
je
and
int3
xchg
lea
sbb
cmp
xor
dec
add
fsubrl
pusha
mov
fwait
or
dec
xor
add
jmp
ljmp
sub
mov
xor
lock
clc
add
inc
xchg
jne
dec
rorb
inc
cmpsl
lods
sbb
loop
andl
adcl
in
or
add
fimull
lock
sub
ja
jo
pop
sbb
jl
rclb
aam
and
inc
cmp
inc
in
sbb
xor
call
test
jg
cld
call
add
cltd
clc
leave
rorb
fs
js
call
adc
add
mov
out
frstor
push
je
xchg
or
jle
ljmp
add
push
loopne
add
cs
ljmp
push
test
and
fcmovbe
punpckhdq
test
in
mov
repnz
jno
or
mov
adc
sahf
push
inc
jecxz
sub
pop
jle
dec
call
subl
dec
jge
popa
pop
loop
push
rorb
cld
fwait
inc
int3
inc
cld
movb
lea
inc
loopne
pop
dec
adc
inc
scas
test
xlat
mov
xchg
mov
ljmp
in
dec
add
add
je
test
aaa
jle
push
test
mov
mov
bound
call
stos
dec
clc
test
and
shrl
jno
cltd
lcall
mov
sub
push
push
and
push
push
add
incl
xor
movsl
add
mov
xorb
cld
aas
fs
ret
add
jb
adc
inc
lea
in
rolb
sahf
imul
clc
fmul
jbe
std
mov
icebp
jo
cld
lea
mov
mov
inc
add
mov
push
xchg
or
mov
subb
dec
cmp
add
pop
jmp
mov
loope
push
dec
xor
les
jno
test
jp
call
and
mov
inc
jb
popf
and
lret
sbb
lcall
mov
stos
inc
jbe
jo
add
mov
loopne
inc
mov
stc
sub
dec
xor
adc
mov
mov
add
shrl
add
aam
outsb
incl
mov
jb
inc
fcoml
call
jo
sbb
mov
lods
inc
test
add
or
jle
cmp
rorb
dec
lock
mov
test
mov
mov
ja
ds
lea
dec
push
push
dec
push
jns
mov
or
xorl
clc
push
or
xor
or
icebp
and
jb
inc
or
ss
push
adc
jl
aam
mov
dec
call
aas
jne
inc
jge
adc
lret
rcrb
jmp
jle
jbe
lock
jno
adc
fidivs
pop
sahf
xor
add
and
lods
mov
lea
or
push
sub
dec
jge
and
adc
xchg
or
xchg
sub
mov
xchg
out
mov
ret
jne
push
lock
aaa
fprem
or
adc
push
or
jb
or
ljmp
icebp
test
push
jo
mov
pop
fdivs
and
int
je
xor
out
std
pop
rcr
adc
cmp
jge
sub
je
push
xor
mov
and
incb
je
std
or
loope
outsl
hlt
notl
call
jb
pop
push
outsl
adc
pop
add
cli
mov
push
xchg
mov
or
sbb
mov
lock
xor
inc
push
cld
or
mov
dec
pop
mov
xor
pop
je
imul
mov
inc
sti
mov
mov
jecxz
dec
jl
add
loop
int3
add
jne
jg
fbld
dec
loop
mov
int3
pop
push
mov
and
sbbl
shlb
jo
pop
cmpsl
cmp
outsl
stos
mov
jne
mov
jae
and
inc
movsb
jb
add
jle
dec
push
fdivrs
pop
fcmovnbe
jne
mov
xor
and
in
mov
xor
inc
jae
vmwrite
sub
push
frstor
aam
lret
mov
add
mov
stos
inc
divl
add
jae
inc
xor
sub
incb
popl
mov
cmp
jl
pop
fisubl
jp
inc
jo
mov
mov
adc
mov
js
aaa
inc
call
loop
push
pop
jne
lea
add
push
mov
jne
mov
dec
inc
jl
jp
pop
insl
mov
mov
add
mov
inc
iret
pop
out
jb
hlt
in
fs
inc
adc
cmp
jmp
inc
shrb
add
test
or
decb
add
jmp
adcl
je
cld
add
inc
add
sti
shll
sti
jo
jae
pop
and
fisubrs
cmp
jmp
cmp
icebp
cmp
pop
out
rol
push
daa
lds
fdiv
icebp
push
xor
sub
das
add
mov
add
sbbb
inc
das
sub
mov
test
clc
mov
mov
or
jg
pusha
inc
sub
in
or
int3
or
ds
inc
add
jmp
callw
mov
imul
adcl
call
jo
and
je
add
sbb
sbb
pop
outsl
fs
cmp
and
add
repnz
dec
call
flds
lock
testb
xor
inc
sbb
or
pushl
cmp
mov
pop
lock
sub
sar
lcall
icebp
xor
sbb
mov
iret
dec
mov
sbb
cmp
pop
outsl
xor
or
ss
aas
and
notb
add
lock
adc
and
or
inc
rcrb
sbb
jo
jne
adc
cmp
add
add
sbb
push
mov
jb
jmp
mov
and
push
or
mov
pop
push
mov
push
jg
clc
test
mov
inc
stos
je
call
rcl
lock
adc
call
xor
push
movsl
test
mov
jmp
push
jbe
test
mov
add
jp
sbb
icebp
pop
sti
pushl
mov
cmp
jmp
cmp
out
mov
leave
mov
insl
and
js
add
pushf
loope
add
data16
stc
loopne
lock
push
inc
push
lret
mov
call
push
mov
xlat
xchg
mov
sti
pusha
fldt
ljmp
pop
enter
push
push
mov
xor
mov
stos
pop
add
adc
jg
xchg
mov
push
es
fwait
call
es
lret
aam
adc
and
stc
sar
dec
sub
lea
mov
fmull
call
xor
in
push
pushf
sti
dec
jne
sub
stos
ds
mov
addr16
mov
sbb
jbe
cmp
jb
mov
mov
mov
sbb
cmpb
faddl
aam
fs
rorb
cli
shlb
call
push
dec
movl
clc
push
push
andl
and
push
insb
jg
ljmp
pop
mov
push
clc
mov
xchg
shl
and
and
add
mov
jle
push
mov
cmp
js
test
iret
fimuls
into
xor
cmp
les
jg
popa
nop
cmp
adc
in
and
mov
ds
add
jl
movl
inc
bnd
push
insb
mov
mov
into
mov
push
and
insb
scas
mov
mov
and
pop
xor
shrb
push
jecxz
cs
mov
xor
call
pop
jl
jl
icebp
dec
cmp
mov
icebp
inc
mov
push
shlb
mov
dec
negl
call
adc
xchg
lea
mov
jle
or
fmuls
loop
cs
dec
call
mov
sub
and
divps
mov
xor
mov
hlt
mov
jo
mov
cmp
cmp
nop
or
or
push
cmpsl
cmc
mov
scas
dec
popf
test
inc
popa
pop
inc
push
add
inc
mov
inc
int
push
fadd
push
outsb
sbb
cwtl
pop
push
push
mov
mov
add
pop
jecxz
pop
and
adc
or
cmp
js
fcomps
data16
push
cmpb
pushfw
test
jge
jb
ja
pop
mov
lods
push
stc
add
sub
aam
loopne
int3
punpckhdq
aad
push
xchg
aaa
hlt
push
mov
js
mov
imul
roll
cld
push
cmpb
push
pop
push
inc
sub
dec
test
ret
push
cmp
divb
loopne
sub
push
mov
out
add
adc
fst
frstor
call
out
outsl
je
movb
xor
call
sti
adc
ss
call
or
add
and
jp
fstpl
or
scas
mov
loopne
lods
dec
ds
ljmp
mov
pop
cmpsb
or
enter
cmp
jmp
cmc
or
nop
fsts
idivb
add
jmp
jb
shr
push
ret
popa
add
sbb
div
pop
out
bound
xlat
aas
out
adc
adc
or
rorb
lcall
cmc
mov
mov
push
lea
mov
scas
gs
lahf
mov
cmp
jle
adc
scas
test
test
mov
or
push
xchg
ss
scas
jl
dec
lock
incb
add
cmp
das
add
pop
cmc
divb
mov
and
jmp
hlt
flds
shlb
xor
jle
or
enter
mov
dec
aaa
jmp
or
push
push
mov
dec
negb
push
jnp
xchg
packssdw
cld
xor
mov
jg
cmp
sti
inc
roll
mov
or
inc
mov
xchg
hlt
cmp
push
inc
mov
sbb
cmp
lock
stos
add
push
comiss
mov
popa
mov
add
divl
push
pop
push
mov
into
sbb
shlb
jecxz
clc
cmp
inc
hlt
xchg
pusha
sub
lds
push
adcl
add
sbbl
inc
sbb
fs
inc
pop
imul
cs
add
mov
push
movsb
cmp
xor
add
ljmp
out
pop
cwtl
out
cmp
dec
jbe
ret
mov
inc
xor
push
sub
fcom
mov
pop
popf
rep
mov
pop
mov
mov
adc
lahf
xor
mov
call
cmpsl
sar
or
fisttpl
call
sbb
and
scas
inc
mov
inc
push
sahf
into
outsl
mov
lock
add
jle
in
sar
dec
mov
repz
inc
adc
fimuls
cmp
push
mov
aaa
test
enter
into
adc
mov
pop
mov
xchg
and
fiadds
nop
mov
adc
dec
loop
adc
jb
jmp
push
and
sti
cwtl
repz
sahf
inc
cmp
stos
jbe
sarb
jg
jp
testb
add
xorb
pusha
xchg
test
es
aad
call
add
subl
push
add
sti
enter
mov
jbe
cmpsb
mov
lods
xor
add
push
add
jl
xchg
dec
push
inc
dec
into
addr16
fbld
cwtl
adc
adc
cmpsl
roll
and
xor
sti
cmp
jl
mov
call
mov
jbe
sarl
cwtl
cmpl
push
test
ret
pop
add
push
xchg
rorb
xchg
sbb
loopne
fsubrl
out
dec
shlb
add
dec
subb
das
sub
and
xor
push
push
test
pop
xchg
ficompl
or
arpl
decl
sahf
push
call
cmp
add
lar
push
and
and
shlb
and
xor
mov
call
adc
xchg
mov
inc
push
loopne
xchg
add
jb
jp
imul
inc
xchg
hlt
cmp
pop
sub
pop
cmp
push
lock
mov
in
cmp
mov
jl
push
mov
lret
pop
cmpsb
in
mov
jne
pop
incb
repnz
addb
mov
or
mov
lds
loope
adc
mov
cs
push
sbb
xor
movsb
ret
or
pop
mov
and
inc
loopne
adc
xor
push
xor
xchg
lock
ret
adc
xor
push
push
mov
mov
pop
in
outsb
or
or
cld
sbb
int
orl
lcall
data16
out
sub
cmp
push
cmpsl
and
js
or
push
pop
push
subb
xchg
push
xchg
inc
test
and
jbe
jne
inc
int3
je
jg
add
pop
fmuls
or
mov
andl
dec
cld
mov
xor
mov
mov
rcl
push
xchg
sbb
lods
call
ljmp
push
mov
push
cmovs
leave
adc
imul
add
shlb
or
push
mov
fildl
repnz
lret
scas
lret
mov
fsub
aaa
push
sarb
lock
add
pop
je
adc
add
xor
or
sbb
stos
les
and
pop
mov
inc
inc
add
pop
mov
sbbl
les
sbb
in
imul
mov
cmp
mov
bnd
jmp
adc
out
inc
inc
cmp
jb
jmp
cmp
in
sub
cld
push
jne
mov
fmuls
xor
mov
sub
cmp
in
inc
mov
or
mov
repnz
and
or
push
adc
clc
and
outsl
bound
in
daa
int
pop
mov
mov
dec
or
fdivl
dec
daa
dec
or
into
mov
aaa
and
dec
lds
adc
cmp
sub
jge
fiadds
cmp
sbbb
push
jo
adc
pop
mov
jne
outsb
add
xor
cmp
cmp
sbb
mov
outsb
outsl
incl
adcb
repnz
lock
dec
call
lock
mov
cmpb
addl
imul
scas
pop
andl
into
xchg
inc
xchg
push
in
call
or
sbb
aam
in
ss
add
inc
jbe
aam
repnz
orl
imul
dec
loopne
jge
jb
frstor
in
outsl
outsb
cld
lea
je
adc
xor
jg
cmpb
cmc
decl
jne
mov
inc
mov
mov
cmc
enter
leave
sbb
lea
cmc
lret
mov
add
ja
aaa
mov
add
mov
sahf
sub
shlb
add
push
aam
pop
jmp
push
and
pushl
enter
push
jne
sbb
mov
mov
shl
aam
out
fdivr
dec
outsb
sub
or
rol
cmp
mov
sahf
sbb
faddl
out
or
adc
adc
cmp
xchg
fmuls
sub
fs
pop
adc
xor
push
inc
mov
stos
cs
mov
push
xor
outsb
mov
jo
inc
std
pushfw
movsb
mov
sub
mov
cmp
or
push
sub
push
es
jg
sbbl
scas
xor
lea
sub
or
inc
jmp
dec
and
cld
xor
int3
xchg
add
pop
and
sub
adc
mov
incb
push
add
dec
ss
rolb
cmp
inc
movb
sbb
add
jbe
fdivs
stos
shrl
sub
adcl
push
jne
int3
mov
cmp
and
xor
and
movsl
push
out
push
cld
sbb
sub
cmp
push
outsl
inc
sti
or
dec
fdivrs
add
mov
xchg
or
push
pop
cmp
jbe
xor
aaa
mov
std
aaa
mov
addb
cmpsb
call
push
jg
add
shrb
add
xor
test
or
xchg
cmc
mov
je
cld
jle
lds
pop
dec
hlt
or
mov
mov
add
lock
int3
ja
inc
adc
or
xchg
ja
xor
push
xchg
out
push
mov
jne
push
xorb
cld
push
mov
faddl
jno,pt
adcl
scas
ss
nop
pop
idivb
add
ss
pop
mov
push
aaa
jno
aam
sbb
jmp
cld
repz
mov
insl
shr
out
cmpsl
mov
es
pop
and
imul
repnz
jl
shll
xchg
int
int3
mov
dec
aad
push
pop
jle
cmp
or
mov
loopne,pn
mov
cmp
cmp
fimuls
stos
mov
leave
mov
cmp
adc
sub
dec
popa
js
test
dec
aam
push
mov
jecxz
jne
je
xorb
insb
push
fstpl
sbb
jne
les
dec
in
lret
out
push
hlt
push
fwait
sahf
push
outsb
add
or
add
lea
stos
pushf
adc
xor
mov
inc
xchg
cli
mov
lcall
sub
mov
dec
mov
pusha
push
hlt
sub
dec
mov
lcall
je
and
dec
xor
push
fadds
in
mov
pusha
and
add
stos
sti
movsl
pop
inc
aas
add
aas
mov
es
repz
mov
push
and
std
mov
aas
or
aaa
jne
insb
push
insl
xchg
ss
jb
xor
push
test
pushf
cwtl
pop
adc
cmp
and
jbe
mov
mov
adc
push
jmp
push
ficompl
xchg
je
and
cltd
scas
adc
push
xor
mov
lods
push
fildl
pusha
mov
xchg
add
xor
stos
int3
popa
mov
mov
xor
stos
mov
or
inc
or
stos
mov
aad
aad
cmc
inc
push
or
sbb
les
cli
call
pusha
enter
xchg
or
in
and
mov
mov
mov
sbb
cmpsb
mov
scas
mov
or
add
dec
mov
push
mov
adc
pusha
data16
dec
enter
leave
enter
fdiv
in
dec
leave
push
repnz
clc
insb
jmp
push
push
dec
and
or
test
push
loopne
enter
repz
pushw
mov
mov
cltd
int
sar
pop
jle
inc
cmp
adc
push
cltd
in
inc
xchg
loope
mov
in
adc
or
xchg
dec
mov
jne
data16
push
add
mov
and
push
dec
pop
mov
inc
fcom
cltd
ffree
sbb
sbb
xchg
test
push
loopne
testl
call
push
std
push
repnz
xchg
je
shll
das
out
mov
mov
add
add
cmpl
mov
cmc
mov
sub
fdivrs
mov
xchg
add
rcrb
mov
inc
sub
fcom
into
mov
or
dec
lods
call
add
movsb
mov
sub
dec
push
je
test
xchg
ss
mov
or
rorb
bound
sub
pop
int3
call
fistl
hlt
cmp
pop
and
pminsw
mov
ja
cmp
adc
xchg
lock
push
dec
imul
pop
lcall
jbe
repz
xor
clc
cs
or
xor
int3
and
push
dec
jge
push
inc
jge
cmp
mov
add
cs
jge
cmp
mov
pop
stos
jb
repnz
cmp
xchg
stos
push
notb
sahf
push
jle
jno
push
gs
mov
dec
add
inc
add
lcall
in
xchg
push
lcall
aam
mov
in
fsubrs
jmp
lcall
xchg
push
rcrl
int
inc
push
cmpsb
jmp
sbb
mov
mov
mov
dec
enter
adcb
call
adc
lock
rcrl
adc
pop
adc
jb
outsb
adc
or
insb
js
xchg
inc
les
test
subb
pop
ljmp
es
in
subb
mov
in
push
xchg
jo
mov
add
mov
dec
sbb
mov
scas
adc
je
test
or
add
cli
int3
testb
lcall
rcrb
popa
imulb
out
sub
repz
adc
push
mov
push
in
cmp
aas
adc
cs
xor
ljmp
or
xor
enter
jnp
cmpsb
dec
jbe
or
call
mov
adc
repnz
xchg
mov
push
fsub
xchg
gs
rcl
ds
fstpt
rclb
mov
cli
cmpsl
jbe
sub
je
sahf
sub
lret
aaa
mov
or
jne
lret
dec
jo
ret
out
ret
ret
push
in
fdivr
mov
jmp
push
push
mov
add
add
sub
add
mov
push
fists
push
push
add
aam
rcrb
ds
push
mov
cmp
in
pop
aaa
loope
pop
jno
inc
mov
ja
loope
rorl
inc
loope
adc
aam
in
shr
sbb
std
je
cld
dec
pop
stc
add
das
clc
cmp
jmp
cmp
mov
mov
sbb
pop
mov
and
and
sbb
sub
lock
dec
jp
cmp
and
push
sbb
add
adc
enter
fstpt
mov
dec
loopne
or
ret
push
lret
repnz
inc
add
fimuls
iret
fidivrs
jb,pt
je
jle
sti
mov
pop
mov
add
jg
add
bnd
mov
mov
xor
xor
jmp
cmp
adc
mov
ja
lret
sti
jne
pop
sub
sub
or
push
icebp
mov
inc
or
or
pop
inc
jp
jbe
shlb
dec
dec
or
inc
push
add
dec
mov
jge
clc
cmp
es
mov
mov
repz
adc
fidivrl
outsb
sub
push
add
adc
rcrb
cmp
mov
mov
enter
xchg
pusha
pop
jae
leave
add
lock
jbe
mov
stos
enter
add
lods
insb
sbb
lock
je
push
lock
mov
jbe
cld
movsb
aam
mov
xchg
testl
sub
rorb
dec
ss
jne
subl
data16
pop
lahf
push
add
pop
push
xor
and
fdivs
insl
loope
rorl
add
jmp
rcrl
movb
cmp
jg
or
xchg
mov
jne
push
rorl
mov
mov
add
rorb
jmp
shlb
cmpsb
lds
inc
or
mov
pop
ficomps
lea
cmpsb
out
add
cmp
jbe
jmp
daa
fldl
mov
xchg
ds
aaa
jl
icebp
cmp
lock
icebp
mov
jne
mov
cltd
out
rcrb
movsb
mov
jb
cmp
xor
into
mov
rorb
jp
jg
mov
insb
adc
xchg
mov
and
aaa
cld
roll
cmp
jae
ja
aam
jns
add
mov
mov
add
adc
xchg
out
shr
or
das
inc
xchg
shrb
jg
ljmp
inc
cld
mov
or
inc
add
mov
rclb
in
decb
inc
mov
lahf
mov
movsb
sarb
in
out
in
cmp
cltd
rol
cltd
mov
xchg
in
ds
jbe
add
lock
cmp
add
push
mov
push
neg
dec
cli
lea
cmpsb
ljmp
add
into
mov
je
dec
push
push
sub
or
outsl
sub
das
push
mov
pop
xchg
cli
push
test
adc
sub
mov
test
jbe
pop
push
mov
stos
aam
lods
ltr
sub
cld
inc
jo
scas
dec
mov
inc
int3
jb
dec
dec
ret
push
cmpsb
pop
lock
mov
jmp
fbld
xor
stos
lock
xchg
mov
pop
jmp
cmc
and
hlt
mov
es
lahf
xorb
popa
jecxz
sbb
push
pop
push
jecxz
push
fadd
cmp
fldt
mov
rorb
clc
bound
dec
sub
jle
add
jg
popf
xor
adc
shr
add
xor
mov
mov
and
insb
mov
add
inc
pop
xchg
fimuls
inc
out
pop
out
dec
jo
insb
or
ret
addr16
mov
xchg
in
repz
jb
xchg
adcl
or
mov
push
push
loop
clc
and
sub
test
add
cmp
add
mov
inc
xlat
sbb
sbb
test
bound
push
inc
mov
out
aam
xor
das
mov
loope
xor
xor
add
inc
lea
mov
push
inc
faddp
inc
and
jg
or
sbb
es
push
movsb
push
inc
push
jl
adc
movl
mov
loopne
lret
push
and
adc
addr16
xor
sbb
aad
aaa
shlb
fucomi
call
xor
aam
pop
call
stc
jns
or
mov
adc
or
lcall
testb
mov
and
cmp
add
pop
scas
or
or
dec
adc
push
xchg
movsl
xchg
leave
xchg
out
mov
add
fwait
cmp
mov
mov
clc
add
out
cmpsl
ds
push
pop
stos
outsb
mov
push
stos
jbe
pushf
out
out
in
cmp
sbb
jl
xchg
je
fmull
sbb
test
fcompl
inc
push
aas
mov
sub
incl
ret
je
shr
or
mov
and
loop
jno
cltd
cli
hlt
lret
test
add
aam
jns
add
sbb
adc
inc
sbb
pusha
mov
test
and
test
test
in
mov
lods
loope
pop
or
lret
incl
or
ja
arpl
push
mov
in
pop
xlat
loopne
out
pop
scas
lea
scas
mov
outsb
cs
int
aaa
lods
clc
mov
inc
sub
xor
int3
mov
sub
insb
loopne
sbb
call
rcll
in
dec
call
loopne
ret
data16
std
jle
mov
data16
xchg
je
cs
divb
inc
push
in
mov
or
xchg
enter
xor
or
je
mov
mov
loopne
push
or
imull
pusha
xorl
jmp
call
add
dec
pusha
imul
jecxz
sbb
lock
adc
inc
mov
int
mov
ds
pop
fildll
inc
mull
sbb
add
xor
out
call
daa
or
das
pop
inc
ja
adc
push
pop
cs
movsl
in
xchg
mov
sub
pop
or
adc
jne
repnz
jge
sahf
lcall
mov
sbb
push
or
cld
arpl
cmc
wrmsr
outsl
ss
hlt
and
test
and
add
xor
sahf
aam
ret
mov
mov
and
or
inc
xor
mov
inc
fisttps
pop
scas
mov
std
movsb
or
or
push
pushf
sub
shr
xchg
xlat
outsb
bound
fwait
adc
and
sub
or
insb
adc
sub
xchg
sahf
push
push
mov
or
and
pusha
mov
fadds
mov
flds
xlat
push
lea
inc
inc
push
dec
sbb
popf
mov
aad
in
addl
das
ss
sub
add
add
cmp
xchg
clc
mov
mov
mov
push
mov
test
add
add
xchg
cli
out
mov
add
data16
adc
cmp
mov
aam
inc
jno
mov
les
nop
mov
and
lea
lret
mov
stos
dec
hlt
mov
jle
jbe
clc
dec
ret
ret
call
xor
or
ljmp
cmpsb
mov
xchg
clc
mov
add
out
push
iret
das
std
idivb
add
loop
or
add
fwait
insl
mov
and
adc
pop
or
inc
mov
je
push
ss
mov
sub
xchg
xor
push
imul
add
inc
inc
mov
fldl
scas
icebp
add
insb
mov
cmp
fadds
jle
add
mov
add
addb
sub
ljmp
in
enter
test
aaa
adc
add
mov
lea
incb
sarl
or
and
jne
test
xchg
jo
addl
std
mov
rol
adc
inc
push
loop
sub
xchg
pop
adc
les
xchg
loopne
mov
mov
jge
loope
shrb
orb
les
cli
mov
adc
orb
lret
push
into
add
or
dec
adc
xor
ljmp
faddl
clc
inc
test
sarl
push
ss
pop
ds
add
push
test
inc
jae
ds
popa
dec
js
adc
or
sbb
popf
dec
push
je
add
daa
mov
frstor
jmp
add
add
dec
mov
push
int3
leave
cmp
aas
sbbb
push
jl
and
xor
adc
ds
jge
inc
andb
hlt
icebp
mov
add
jbe
add
loop
cmp
out
enter
dec
dec
loop
rorl
nop
dec
adc
mov
adc
add
hlt
and
or
mov
xor
test
add
add
je
pop
xabort
sbb
rorb
loopne
rorb
idivb
loope
stos
push
xorl
lcall
inc
jl
mov
push
mov
lea
mov
inc
lock
repz
fdivp
sbb
push
add
movsl
je
pop
out
add
cmp
lahf
add
jge
push
das
jo
ljmp
add
mov
push
jge
es
subb
add
shlb
lcall
dec
add
shrl
into
and
enter
adc
cs
fists
scas
adc
mov
adc
jb
sub
adc
pop
rclb
xor
shll
lock
sub
cmpb
add
ja
ficompl
and
cmp
ror
icebp
mov
dec
jne
sub
mov
inc
adcl
adc
mov
sbb
flds
adc
shr
ss
xchg
or
adc
mov
jge
push
sbb
loop
xchg
rolb
xchg
sbb
loopne
les
inc
mov
ret
test
or
cmp
and
call
inc
sub
mov
in
arpl
orb
mov
loopne
jmp
inc
out
mov
test
mov
pop
shl
jb
pusha
mov
or
sbb
push
loop
jmp
xor
or
shrb
and
cmp
movsl
xorb
mov
loop
aaa
mov
and
shl
clc
and
jo
xchg
sbb
bound
and
hlt
mov
xor
mov
sbb
or
mov
and
ljmp
dec
or
dec
dec
lea
inc
dec
out
mov
add
add
dec
insb
and
into
loopne
out
or
bnd
dec
rcl
push
lahf
mov
or
push
xchg
xchg
sub
lock
shrl
add
loopne
mov
ja
cmpb
jmp
jecxz
movsl
loope
arpl
add
jmp
jecxz
sub
in
and
ja
dec
adc
inc
mov
jnp
loope
or
jle
inc
xchg
mov
je
mov
jne
pop
call
and
lods
pusha
aas
adc
or
inc
mov
jg
jge
mov
inc
shlb
rolb
adc
fbld
mov
push
jg
jb
je
out
jmp
inc
jle
incl
xchg
cmpb
cmc
loopne
jmp
je
add
dec
pusha
stos
jmp
or
push
dec
sub
test
rorb
fiadds
loope
mov
push
pop
dec
cld
xlat
push
dec
int3
sarb
jmp
cmp
clc
xchg
xor
add
push
xor
loopne
arpl
jl
push
cmp
jg
mov
imul
add
sub
xchg
mov
lods
test
and
jge
pop
loopne
add
jl
loopne
cmp
div
je
imul
movsl
mov
ret
push
pop
add
frstor
insb
and
insl
loopne
lods
add
and
jmp
mov
subl
stos
loopne
jbe
and
and
xorb
inc
loopne
jne
mov
mov
mov
xor
add
imul
addr16
and
insl
push
lods
adc
adcb
add
cld
gs
pop
ja
and
mov
add
add
dec
jne
add
push
mov
mov
lret
mov
shlb
pop
adc
push
pop
mov
mov
and
movsb
push
ds
pusha
mov
sbb
or
inc
pop
mov
xor
add
mov
pop
hlt
ja
or
repnz
mov
mov
jbe
inc
adc
rolb
push
xchg
cmp
or
or
incl
pusha
xchg
cmovp
xchg
loope
shr
xor
dec
or
and
sub
movsl
lock
mov
mov
add
push
popa
pop
push
cs
fcmovb
ret
pop
nop
sahf
js
xor
mov
jl
add
adc
mov
stc
scas
add
dec
in
xor
shr
loopne
out
adc
loopne
sti
loopne
sub
sbb
icebp
ret
rclb
xchg
xchg
loope
clc
repz
into
cmp
add
enter
icebp
call
mov
sub
shrl
adc
jg
pusha
cld
pop
add
sub
aaa
out
arpl
sub
mov
xor
adc
mov
subl
jb
mov
aam
add
adc
inc
lcall
mov
xor
push
insl
jg
insl
ror
or
jmp
mov
sarl
and
lock
clc
push
mov
or
inc
je
ret
jp
push
jmp
adc
enter
aaa
rcrl
jmp
ret
daa
icebp
cmpsb
adc
cmp
cmp
mov
pushf
and
xor
movsl
pop
and
lock
adcb
mov
and
sub
push
mov
and
cmpsb
nop
sarb
add
cmp
xorl
xor
and
and
cs
clc
inc
subl
pop
scas
adc
pop
xor
jbe
cmp
fmull
lea
xchg
xchg
pop
lock
clc
xchg
add
push
shr
jmp
loope
outsb
add
dec
addl
pop
push
xchg
cmc
sbb
inc
adc
ret
aaa
ss
ss
ss
pop
aam
push
test
adc
jno
mov
and
add
sub
add
or
cltd
push
sti
xor
add
sbb
push
mov
aaa
adc
call
sbb
or
call
rolb
add
mov
and
mov
leave
jo
inc
jno
dec
mov
mov
lea
imul
aam
push
ret
movsl
or
adc
jg
cmp
in
test
inc
adc
jo
inc
test
add
into
nop
lcall
stos
or
xor
jp
and
add
pop
jno
mov
or
clc
pop
andl
add
push
pushf
sbb
xor
add
sbb
adc
lea
add
test
aas
test
or
add
push
pop
mov
jge
jp
pusha
sbb
pop
add
call
subb
hlt
mov
mov
pop
inc
jo
xorb
pop
and
xchg
mov
insb
out
andl
dec
je
dec
jne
add
adc
dec
loopne
and
inc
mov
scas
mov
cltd
push
cld
filds
call
dec
or
add
push
pop
inc
jo
mov
idivl
insb
xchg
loop
fwait
xor
jp
out
call
adc
or
cmp
xchg
clc
mov
orl
pusha
xor
push
adc
pushl
outsl
adc
add
inc
lock
xor
inc
mov
mov
adc
test
incl
xchg
add
add
xchg
outsb
sbb
popa
inc
and
push
pop
pop
mov
sti
jecxz
add
pop
inc
test
in
add
or
bound
xor
add
jg
inc
sbb
fnstenv
adc
and
adc
addl
pushl
adc
inc
push
mov
inc
sbb
dec
adc
clc
xor
mov
inc
lock
sbb
adc
hlt
or
xor
subb
pushf
movsb
mov
add
and
call
mov
push
jo
xor
xor
xor
mov
jg
outsl
out
pop
cmp
test
xchg
xor
sahf
in
lock
fdivl
mov
mov
lret
test
adc
sbb
and
jo
decl
add
add
pop
push
pop
or
hlt
xor
mov
dec
dec
pop
inc
sti
pop
mov
lock
mov
lods
mov
or
add
int3
lret
and
lods
je
push
loopne
push
stos
cld
jbe
sub
cmp
lret
stos
adc
xchg
add
ret
push
loopne
mov
xchg
mov
pop
cmp
or
ljmp
cld
ljmp
cmp
lea
data16
sbb
icebp
mov
jno
push
stos
or
jnp
ret
inc
test
xor
jo,pt
push
and
pop
sahf
xchg
cmpsb
jg
rcll
scas
lea
addl
jnp
sub
lock
add
and
sbb
or
leave
mov
xchg
jl
xlat
sub
lock
mov
and
stc
jbe
add
int3
inc
or
inc
push
pop
jp
mov
push
push
push
mov
ljmp
add
mov
lcall
add
adc
outsb
sti
or
cld
push
sbb
dec
sub
pop
andb
aam
lret
pop
fnsave
mov
cmp
popa
pop
jno
jmp
repnz
clc
dec
ljmp
xchg
ss
or
sbb
xor
push
xchg
rcl
adc
dec
add
add
dec
mov
lea
jbe
hlt
cmp
cld
inc
push
add
push
mov
sbb
std
dec
dec
jne
or
adc
jge
sbb
add
lret
add
add
dec
mov
insb
add
inc
mov
pop
test
xor
mov
in
cmc
mov
add
dec
andb
lock
push
inc
pop
out
mov
mov
jle
mov
add
lock
push
or
ss
push
xchg
test
and
lods
incl
pop
add
call
xor
mov
xor
lods
lea
or
clc
lock
push
mov
jg
adc
imul
and
mov
add
lea
push
jmp
cmp
lock
add
add
or
xchg
addl
call
inc
nop
notb
je
push
jbe
or
icebp
adc
jbe
cltd
cmpl
pop
je
mov
test
push
jbe
add
insb
push
add
mov
cmp
pop
or
pop
jbe
push
push
sbb
inc
adc
les
or
add
iret
jl
fistpll
xchg
or
fdivs
rclb
pop
cmp
pop
or
fiadds
mov
out
cmpsb
mov
xor
sbb
jo
and
sbb
mov
imul
or
push
rcll
mov
test
jb
dec
mov
mov
push
xor
loope
add
movsl
movsb
add
inc
and
aam
mov
std
xor
clc
push
aas
pop
out
ss
gs
adc
add
call
dec
push
pop
cwtl
incb
divb
mov
and
mov
adc
or
hlt
scas
push
clc
sbb
dec
xor
sarb
pop
mov
pop
adc
adc
adc
dec
add
dec
les
in
and
fimull
sbb
push
dec
negl
movl
loopne
bound
repz
adc
add
mov
xor
gs
mov
ret
orl
call
or
push
add
es
imul
fdivs
mov
push
mov
orb
sbb
mov
jb
jl
xor
lcall
shrb
lret
xor
sar
subl
or
icebp
cmp
jl
sbb
or
adc
mov
aas
int3
mov
mov
sbb
cmp
mov
repnz
sti
call
pop
daa
repz
addl
cwtl
test
movsb
lock
outsl
mov
add
or
xor
and
imull
insl
jo
mov
xor
cmc
add
mov
mov
testl
and
add
add
jle
mov
sbb
sub
push
mov
and
sarl
and
adc
test
add
hlt
negb
mov
nop
ror
and
add
or
imul
and
dec
push
mov
inc
dec
adc
push
push
sbbb
inc
int3
and
lods
xor
add
adcb
jmp
pop
out
aam
popa
decl
inc
orb
sbb
enter
sbb
mov
fnsave
push
mov
or
pop
lods
orb
addr16
sbb
xchg
mov
mov
inc
out
sbb
or
pop
ficompl
or
inc
pop
pusha
mov
jecxz
push
insb
cli
insl
cmp
xor
mov
dec
or
testl
pop
test
mov
iret
call
fsts
or
adc
pusha
sbb
pop
imul
add
add
icebp
cmp
jp
pushf
test
inc
add
push
xchg
mov
add
mov
mov
xor
ret
gs
jo
and
bt
nop
call
sbb
adc
add
iret
shr
dec
out
or
push
inc
sbb
add
or
testb
sbb
sub
test
push
mov
push
loopne
jmp
inc
jbe
and
dec
mov
pop
pusha
push
pop
mov
int
push
stos
add
jo
addb
hlt
in
and
mov
add
mov
je
or
in
out
mov
inc
adc
dec
adc
daa
inc
push
mov
cmp
push
shlb
dec
cwtl
push
mov
mull
pusha
shll
rclb
mov
movsb
lods
or
ja
and
push
jb
xor
jnp
mov
cmpsb
push
mov
dec
or
mov
or
fld
dec
xor
and
inc
sub
pop
hlt
jp
rorb
out
roll
call
and
or
pop
inc
movsl
push
add
adc
fwait
mov
lcall
in
mov
mov
fdivp
pusha
sbb
popa
pushf
lcall
jmp
outsb
and
cmc
cmpsb
test
int
andb
cmp
filds
roll
dec
stos
lods
push
scas
call
cmp
mov
je
dec
adc
imul
xchg
test
flds
adc
ret
dec
push
sub
scas
or
add
repz
lods
call
jne
add
mov
xor
pop
cmp
cld
fldenv
out
gs
push
push
hlt
pop
xor
in
or
mov
and
mov
mov
mov
movsb
inc
and
insb
jo
pushf
lea
inc
sbb
rorb
inc
adc
sbb
add
in
and
add
sbb
jp
fdivrp
mov
sbb
pusha
and
pusha
js
loop
sbb
adc
cmpsb
cmp
cli
push
testb
stc
push
loop
test
inc
loopne
inc
push
mull
movsl
packsswb
sbb
and
mov
lea
and
mov
orl
push
dec
adc
call
call
jp
daa
lea
xor
pop
loope
add
push
mov
push
dec
push
roll
mov
dec
iret
movsb
push
cld
adc
jmp
subb
popa
add
push
mov
push
and
xor
outsl
mov
loopne
out
adc
and
jb
and
testb
lret
mov
inc
cwtl
or
mov
test
std
lods
stos
inc
jp
out
sbb
push
call
jne
mov
pop
add
loope
je
fidivs
push
add
inc
and
lods
stos
sbb
push
sub
adc
stos
and
adc
or
jg
outsl
bound
or
or
cmp
push
pusha
mov
inc
test
andl
sbb
dec
insb
push
and
loopne
nop
or
rol
mov
sbb
push
mov
std
cmp
hlt
sbb
rcll
inc
dec
cli
push
add
lods
jne
sti
mov
mov
out
dec
inc
sub
icebp
mov
lock
and
mov
cmp
in
lds
inc
dec
or
loope
in
push
decl
push
and
pusha
mov
imul
mov
dec
and
mov
or
jmp
test
add
stc
push
call
into
sbb
pop
fsubs
mov
add
test
ficomps
add
movzbl
nop
fdivs
push
mov
call
jmp
out
movsb
fwait
mov
adc
in
push
adc
jg
push
jbe
adc
addb
xchg
push
adc
shlb
push
ficompl
inc
pop
inc
loop
jp
pop
subb
inc
cmp
neg
add
shlb
cli
lea
pop
push
notb
adc
call
mov
loope
dec
xor
in
js
and
jl
out
and
cmp
ret
loopne
adc
mov
bound
pop
nop
lcall
sub
aas
push
xchg
jmp
pop
add
inc
add
call
mov
push
pop
repnz
jae
pop
into
shl
sbb
ds
jb
call
sti
ljmp
sub
rorb
repnz
push
add
fadd
neg
out
clc
xchg
lods
sbb
add
fmul
push
add
orb
lock
std
mov
and
je
call
ss
mov
xchg
cltd
add
push
sub
stos
clc
mov
shrb
jo
sbb
or
andb
dec
push
scas
and
cmpsb
or
push
into
dec
push
ds
and
call
andl
and
testl
adc
pop
cwtl
cmpsl
loope
jne
cmpl
push
xor
or
add
psubsb
mov
push
mov
lcall
outsl
enter
dec
pusha
push
lea
mov
mov
into
movsb
mov
cmp
pop
adc
js
jbe
mov
jl
jb
call
or
inc
es
adc
pop
out
jle
dec
es
add
mov
jp
push
inc
shl
shlb
push
movsb
add
jle
adc
add
jmp
push
push
pop
mov
xchg
cmc
adc
pusha
add
addl
inc
or
sub
insb
adc
incl
inc
push
jl
cld
cmp
sub
incb
mov
push
and
jl
dec
pop
icebp
sbb
leave
imul
shlb
out
mov
lods
cli
mov
scas
and
call
mov
jne
aaa
sbb
push
sbb
pushf
in
in
add
xor
and
fisubs
pop
cmpl
lea
add
movb
cmpsb
mov
mov
dec
push
hlt
mov
incb
xchg
movl
mov
test
insl
insl
mov
pop
push
add
jg
push
cmp
or
xor
xor
clc
loope
mov
xchg
mov
dec
cmpsb
or
add
cmpsb
fs
lfs
js
or
pop
inc
add
or
add
push
inc
mov
or
inc
inc
adc
push
jb
inc
jmp
jo
aam
fstpt
or
xor
sub
and
add
pop
jo
pushl
dec
ljmp
jo
je
xor
add
pop
rolb
outsl
idivb
xor
incl
and
mov
les
xchg
mov
lods
inc
sub
xchg
lock
ja
mov
out
daa
jo
call
test
rcl
ret
sbbl
pop
push
sub
pop
push
loopne
mov
jmp
jb
or
mov
jle
push
orl
fs
or
xchg
in
add
and
addb
mov
jae
xchg
mov
pop
mov
push
cld
xor
inc
jg
test
mov
out
xor
adc
pop
cmp
xor
xchg
lock
test
dec
sbb
push
inc
adc
testb
or
mov
jo
jne
je
adc
jne
mov
cmp
and
or
jne
jl
pusha
mov
push
jne
cmp
add
xchg
jne
push
cmp
and
outsl
ja
sbb
jbe
cmpb
xorb
test
push
fldt
jmp
xorl
pop
je
jmp
push
adc
jne
push
mov
scas
and
pushf
test
addb
pushf
or
cmp
hlt
or
loopne
lcall
mov
clc
add
or
outsl
dec
lea
lods
xor
or
xor
or
mov
and
jmp
sub
and
lcall
aam
popa
mov
mov
test
jo
subb
rcr
test
xor
add
data16
sub
adc
and
or
lock
fistps
adc
add
mov
push
push
jo
mov
xchg
test
mov
mov
cmpsb
pop
out
aas
xchg
decb
push
cmpsb
das
mov
std
jg
fsubrs
pusha
add
pop
mov
mov
ljmp
xchg
sub
cmp
pop
push
icebp
les
add
sbb
add
inc
les
addr16
push
inc
mov
pop
jne
xchg
test
cmp
mov
pop
lock
test
cmp
push
lods
rorb
lock
and
es
test
cli
sti
test
inc
call
push
mov
adc
cmpsl
ljmp
mov
push
pop
in
push
lock
ljmp
jmp
icebp
push
push
pushf
xor
ljmp
aam
pop
mov
repnz
subb
sub
push
outsb
inc
mov
adc
cmc
clc
push
push
hlt
cld
mov
push
inc
mov
mov
lock
shlb
lea
lock
add
lock
push
inc
shl
mov
jbe
call
add
xor
jl
adc
push
leave
aam
cmp
mov
cmp
adc
out
scas
call
cmp
cld
inc
es
adc
xor
adc
xchg
mov
and
imull
jne
sub
pop
xor
fidivl
movsl
jne
jg
jg
cli
inc
mov
adc
dec
jo
out
and
push
jle
or
push
mov
jp
jmp
mov
mov
pushf
dec
sbb
xor
inc
ljmp
xor
sub
mov
jno
add
and
push
rorb
mov
mov
call
dec
call
jno
push
pop
pop
call
xor
mov
jb
sub
aad
pusha
push
mov
or
in
push
pop
lock
adc
stos
or
lock
and
call
add
out
add
insb
icebp
add
jne
addl
sbb
jmp
xchg
cli
stc
or
mov
cmpb
inc
stos
dec
popa
adcb
fisttps
add
push
cmp
xor
mov
cld
div
add
pop
or
adc
and
mov
sbb
push
fcoms
xor
add
adc
imul
push
nop
adc
ret
push
mov
inc
adc
push
and
xchg
andl
jge
loop
add
adc
jle
pushl
and
lock
jmp
xor
aas
addl
addl
push
daa
mov
repz
jnp
and
adc
mov
sbb
std
add
cs
jmp
inc
mov
setne
and
add
mov
sbb
lcall
pop
repnz
test
jg
aam
std
mov
cmp
loopne
push
mov
add
or
shlb
mov
jo
int
dec
jne
jbe
call
loopne
inc
adc
es
xchg
cmp
mov
pusha
sbb
push
add
or
add
cmp
negb
inc
and
push
mov
mov
add
adc
js
clc
mov
test
loopne
mov
sbb
add
lea
shrb
cmp
dec
insl
out
jp
sbb
orl
dec
add
push
dec
pop
inc
sbb
inc
or
sarb
fsubl
push
or
sub
loopne
ss
fiadds
ljmp
cmpsl
loop
pushf
rcr
dec
dec
mov
je
call
inc
mov
mov
add
pop
jne
iret
add
ret
je
adc
or
mov
test
add
icebp
dec
push
push
lods
mov
call
ss
mov
dec
cmp
sti
mov
jmp
add
repz
test
outsb
dec
sbbb
je,pn
mov
leave
adc
jbe
mov
push
stos
movsb
rcrb
or
xchg
mov
xchg
pop
cwtl
xchg
pop
jp
cmp
mov
mov
mov
push
dec
pop
jle
scas
testb
in
lods
dec
push
dec
test
add
mov
inc
adc
sbb
mov
cs
nop
mov
shl
inc
loope
jge
in
push
push
xchg
add
pop
orb
jne
rolb
test
fsubr
les
or
testl
rorb
inc
frstor
or
je
sahf
loop
mov
pushf
or
mov
test
ret
adc
sbb
add
push
and
data16
xchg
push
sbb
icebp
in
mov
push
and
or
sub
daa
inc
jp
adc
add
mov
mov
mov
mov
inc
lock
xchg
inc
idivb
lods
call
adcb
testb
mov
add
idiv
push
sbb
loopne
data16
in
or
mov
cmpsl
xchg
test
fidivl
movsb
adc
scas
test
fimuls
loop
push
inc
ljmp
or
jne
pushl
or
mov
sbb
cmpsb
insl
rol
dec
fists
push
dec
shlb
sub
roll
adc
jmp
sub
aad
cmpb
or
xlat
jg
hlt
jmp
je
imul
mov
mov
imul
mov
call
inc
inc
mov
and
je
add
pop
mov
shlb
cld
add
es
aas
dec
js
jle
shlb
jg
push
inc
mov
repnz
stos
out
or
call
cmp
sbb
sub
je
pop
inc
sub
mov
jge
arpl
js
mov
or
movsb
ret
jb
jmp
imul
cld
dec
adc
and
dec
xor
or
fsub
push
je
add
and
xor
lea
cmp
fmuls
mov
jecxz
cmp
add
add
pop
fwait
or
cmp
jecxz
push
sbb
out
sarl
test
push
or
add
mov
adc
mov
jle
fmull
jne
aad
cli
dec
test
sarb
or
aaa
imulb
stos
mov
mov
pop
aaa
mov
mov
jecxz
mov
add
pop
push
add
pop
mov
push
push
pop
repz
movb
pusha
and
imul
xor
pop
jbe
and
dec
inc
sbb
mov
imul
addb
call
call
outsl
adc
mov
adc
outsb
shlb
mov
adc
add
mov
bound
ret
inc
mov
jg
mov
enter
push
pop
call
jl
aam
pop
loope
or
adc
push
sub
push
push
call
cmp
adc
leave
loope
add
pop
adc
pop
pop
sub
mov
mov
add
insl
and
push
lret
je
pop
pop
jae
arpl
mov
xchg
push
std
daa
add
sub
rorl
in
push
les
fwait
adc
inc
dec
test
lea
adc
cmp
inc
addr16
add
xor
jb
jne
mov
bound
pop
push
add
mov
inc
stos
add
shlb
sahf
add
add
jle
adc
jge
cmp
loopne
push
jo
adc
sti
ss
mov
xchg
int3
push
push
xorb
inc
call
inc
cld
mov
ja
fiaddl
xchg
or
call
aad
insb
pop
pop
cmpsb
pusha
jle
test
jecxz
xchg
stc
loopne
inc
and
mov
ret
sbb
lea
xchg
pusha
push
punpckhbw
adc
loopne
jbe
xor
test
incl
adc
scas
shrb
cmp
push
stos
pop
hlt
adc
push
or
xor
sbb
adc
xor
or
mov
in
in
lea
push
test
fidivs
cmp
call
sbb
sbb
or
pusha
sbb
lods
inc
std
add
sbb
mov
cli
lock
rol
pop
adc
jl
adc
sbb
dec
movsb
sbb
add
push
test
push
ret
out
nop
cld
pusha
xchg
call
push
adc
push
push
test
sbb
sbb
clc
cmpb
jle
bound
adc
push
push
jb
pushf
insl
lods
mov
sahf
pop
js
push
aam
test
mov
push
push
adc
scas
mov
sub
loopne
in
sbb
loopne
xor
mov
and
and
mov
sub
movsb
andl
add
jb
jge
incl
mov
pop
sti
mov
adc
popa
add
xchg
mov
aam
pop
test
push
shrb
and
cld
pusha
xor
push
pusha
add
or
movsb
movsb
lahf
push
sub
add
inc
out
hlt
daa
test
jbe
sbb
cmp
xor
lock
inc
je
pusha
jns
or
sbb
leave
clc
aaa
mov
pusha
or
test
insb
pop
adc
sub
xor
sub
lock
and
push
add
pop
add
inc
adcb
loopne
and
scas
adcb
mov
pop
lcall
mov
pusha
cmp
xchg
add
or
inc
in
filds
and
and
je
pusha
sub
jp
dec
and
push
in
es
clc
push
es
jle
incb
add
jl
sbb
or
xchg
add
or
dec
add
mov
or
xchg
or
jle
mov
jecxz
pushf
add
inc
xor
pop
hlt
fsubl
push
lcall
add
stos
push
mov
inc
cmpb
outsb
add
add
data16
gs
decl
stos
loope
push
pop
call
and
das
mov
pushl
mov
mov
xor
add
cltd
sbb
xor
scas
ss
incl
xchg
xor
add
fs
push
add
pop
pop
or
fildl
sbb
push
sbb
in
inc
mov
or
es
adcb
std
insl
mov
adc
adc
mov
clc
outsl
cli
xchg
inc
push
call
sub
lock
sub
cltd
jo
adc
shlb
sub
out
push
enter
jno
add
popa
jo
xor
movsl
mov
fsts
lea
icebp
mov
and
push
outsb
std
mov
rcl
lock
lcall
jo
nop
aam
sbb
push
addb
mov
adc
mov
insb
and
xor
add
add
mov
ljmp
xor
push
lock
xor
daa
add
xor
jg
jecxz
lock
or
push
push
jo
push
xor
push
enter
mov
inc
push
fldenv
fistps
adc
adcb
pop
je
push
icebp
jp
xchg
pop
mov
pop
xchg
or
push
lock
in
cmc
add
wrmsr
add
int3
pop
sbb
mov
call
add
xchg
shlb
push
xchg
add
insl
jecxz
sbb
jb
lods
mov
jmp
mov
in
clc
fldt
jne
jo
pop
or
add
je
adc
push
hlt
add
push
shlb
lret
lock
mov
cmpsb
mov
mov
and
outsl
js
push
movsb
mov
test
pop
movsl
push
imul
push
rcll
testl
adc
add
testb
sbb
add
pop
orb
or
jl
jmp
pop
or
je
jo
lahf
add
ds
inc
ljmp
or
mov
dec
test
lods
je
push
dec
in
cmc
mov
cmp
mov
inc
sbb
dec
or
mov
push
call
inc
or
add
push
sti
orb
sub
loope
xor
dec
ljmp
mov
add
popa
mov
imul
pop
xor
xchg
stos
mov
jbe
adc
int3
xchg
push
pop
add
test
or
inc
out
jmp
ret
inc
cmp
movntps
xor
mov
cmc
fwait
mov
push
arpl
addr16
into
mov
adc
xchg
icebp
and
das
add
push
add
sub
pop
inc
jecxz
jae
cmp
xchg
sbb
and
mov
outsl
adc
jbe
rcl
lcall
loop
push
mov
ljmp
add
sub
jbe
jb
mov
sub
jne
xor
enter
dec
push
add
jp
or
xor
movsl
ja
jo
xchg
pop
mov
subl
inc
dec
cld
lea
add
and
add
test
aaa
lock
or
jb
fdivrl
in
jno
cld
xchg
insl
mov
adc
or
out
add
repz
lock
sub
stos
test
ret
xor
lods
nop
add
scas
jp
adc
cmpl
mov
xchg
push
orb
mov
cld
sti
push
adc
int
xor
jne
mov
loopne
and
dec
icebp
test
incb
rcrb
and
jno
stos
sub
addl
gs
xor
and
pop
pop
loope
loopne
andb
mov
or
lock
inc
test
inc
dec
mov
inc
xchg
adc
pop
pop
and
es
inc
pusha
add
mov
pop
cmp
out
push
inc
sbb
xor
shl
ljmp
push
call
lret
pop
jo
ret
lock
repz
cmpxchg
fcomps
add
lea
idivb
push
xor
dec
je
sub
ljmp
and
and
and
mov
aaa
cmpl
call
les
add
push
clc
js
sub
push
mov
bound
cmovge
mov
xchg
and
and
jecxz
fldt
out
fnstenv
loopne
mov
cmp
push
addb
repnz
add
xchg
ds
adc
cmpb
in
add
jo
jbe
hlt
add
je
out
loope
and
jo
adc
call
lret
sub
dec
jge
es
mov
sarb
shl
xor
je
and
inc
xchg
cmpb
jg
add
mov
or
out
mov
shrb
lcall
clc
or
xchg
add
andl
rolb
pushl
aam
out
test
adc
inc
fsubl
xor
inc
and
movsl
lcall
test
mov
inc
add
and
lea
cmpl
add
pop
add
pop
jmp
add
xchg
sbb
ljmp
sti
adc
xor
push
or
stos
daa
dec
fwait
ficompl
outsb
mov
aas
subb
push
pushl
lahf
xor
xchg
xor
roll
xchg
scas
jg
mov
mov
jo
push
mov
and
scas
add
es
xor
pop
mov
adc
call
cmp
test
lock
enter
fs
loope
add
pop
mov
mov
mov
int3
test
fildll
imul
call
mov
xor
push
pop
mov
mov
popl
adc
lahf
rolb
cmp
add
xorb
mov
pop
icebp
mov
les
xor
je
pop
cmp
into
or
xor
inc
es
mov
xchg
roll
fucomip
jl
clc
inc
cs
add
pop
je
mov
add
ja
sti
push
jl
jo
push
addl
add
mov
loope
or
sub
add
incl
pop
sub
cmp
or
mov
call
jo
xlat
mov
mov
pushf
and
roll
test
push
mov
push
mov
icebp
loope
xor
scas
aad
stos
mov
pop
jg
or
stos
xchg
nop
fiadds
repz
mov
fs
cmp
or
cmp
pop
jbe
sub
jnp
mov
pop
or
add
adc
jo
jo
into
jbe
inc
shll
mov
or
xor
mov
mov
mov
insb
xchg
dec
pop
out
and
adc
sub
mov
sbb
inc
cld
cmpsb
sbb
hlt
iret
push
scas
push
andb
xchg
xor
add
and
and
mov
mov
mov
mov
je
jo
xchg
and
lea
jle
push
ret
xchg
ds
mov
clc
loope
dec
or
iret
or
cmp
push
pop
add
in
nop
fisubs
xor
xor
jo
xor
idivl
mov
inc
or
jmp
sub
pop
pop
jmp
out
int3
xor
pusha
xor
scas
adcl
pop
test
mov
insl
lea
es
or
loopne
pop
cmpsb
mov
push
jo
dec
mov
push
push
jmp
xchg
add
adc
push
fistl
push
mov
add
dec
xor
es
test
mov
data16
add
or
sti
mov
jb
push
jb
sbb
and
adc
aad
sahf
or
sub
incl
cmc
incl
ja
mov
andl
pop
into
inc
mov
movl
les
jge
dec
loopne
xchg
test
mov
dec
or
xor
sub
or
pop
xor
icebp
and
out
xchg
jne
or
add
xchg
pop
aaa
subb
xchg
mov
jbe
jno
adc
scas
invd
xchg
mov
push
pop
jo
lock
call
sub
jo
mov
inc
lea
js
rcr
or
jmp
jl
clc
ret
insb
pop
and
out
rol
push
adc
subb
dec
cli
and
fcomi
inc
rclb
dec
adc
mov
sbb
fmull
cmc
push
and
and
xor
insl
shrb
push
mov
mov
jmp
sti
ljmp
pop
std
pop
jne
test
js
mov
xchg
add
adc
aam
or
sarb
mov
fs
inc
mov
lods
inc
addl
and
lahf
inc
ja
and
inc
jecxz
mov
inc
loope
add
bound
push
push
or
push
inc
or
and
mov
es
ljmp
call
or
push
xchg
rclb
sub
sub
cli
fwait
jae
xchg
inc
add
dec
insb
stos
dec
enter
mov
sub
ret
ret
sub
jp
mov
addb
or
mov
rclb
push
push
sub
sub
loope
ret
popa
add
gs
clc
test
mov
js
stc
rorl
pop
mov
in
add
dec
loopne
sub
add
decb
mov
test
shlb
push
mov
rolb
xchg
scas
test
mov
rclb
add
sbb
rcll
call
xor
sub
or
push
dec
out
mov
aam
mov
push
call
hlt
fcmovnb
loop
add
ret
sub
stos
mov
adc
push
mov
sbb
je
cmp
lock
inc
or
or
jbe
or
push
or
jecxz
decl
or
or
inc
jne
ret
or
push
shlb
inc
adc
xor
mov
push
adc
mov
loopne
sahf
repz
rolb
lods
or
mov
hlt
xchg
mov
loopne
fs
cmc
fcmove
mov
mov
loope
add
ret
insl
dec
cmp
mov
into
xor
shr
addb
xor
sbb
loope
or
and
add
les
imul
add
call
pusha
sbb
mov
push
aaa
or
cmpsb
outsl
fs
mov
push
loopne
jo
pop
mov
movl
loopne
ss
jbe
clc
in
xchg
add
aam
int3
and
push
dec
add
add
add
movsl
push
jg
test
or
movsb
shll
addl
and
pop
cmp
xchg
mov
loope
push
mov
or
rorb
cld
dec
push
and
loopne
add
bound
mov
xchg
push
cmp
jle
loope
dec
sbb
sub
fisubrs
pop
or
and
lea
lock
popa
pop
mov
js
push
xchg
hlt
jbe
inc
jg
loope
or
enter
dec
or
add
js
imul
test
cld
mov
inc
push
jo
add
add
js
sub
sub
and
add
inc
aam
call
add
mov
add
fsubs
pushf
std
sbb
sub
and
call
scas
in
movlps
out
bound
xchg
adc
scas
mov
pusha
int
jmp
cmp
addb
cld
mov
sub
jg
adc
mov
popa
adc
insl
call
sbb
add
inc
mov
or
es
or
addb
xor
adc
std
cmpsb
mov
adc
and
xor
test
mov
pop
xchg
nop
fs
jge
or
ds
psubsb
in
pusha
pop
insb
add
clc
call
bound
ret
testb
inc
mov
adc
add
decb
push
push
push
out
cmp
pusha
arpl
mov
sub
or
and
sub
std
ja
push
jo
test
mov
inc
sbb
add
icebp
aam
mov
push
test
cld
fcmovnbe
sub
mov
mov
push
inc
shlb
ss
ss
mov
xchg
int3
nop
xchg
sbb
daa
cmc
inc
push
into
cmpb
jmp
jmp
mov
lea
sub
inc
cmpsl
inc
fs
loopne
clc
fbld
jb
rclb
or
pop
lahf
decl
int3
or
push
clc
or
and
loope
adc
loopne
loopne
lds
es
ljmp
pop
sbb
fmuls
push
orl
push
jecxz
cltd
push
push
mov
arpl
or
fimuls
inc
add
dec
lcall
sub
pop
jbe
notb
and
sub
pop
and
mov
cli
incl
jb
loopne
push
xor
test
loope
int3
xor
adc
xchg
lcall
lret
es
adcb
and
sbb
mov
add
mov
dec
pushf
hlt
repz
sti
mov
xchg
jno
rclb
es
call
iret
and
lcall
imul
xor
cmp
pop
jbe
inc
lock
jo
aad
mov
and
test
movb
cmp
test
jae
jle
stos
inc
inc
inc
int3
pop
pop
lods
bswap
lods
mov
mov
cmc
jg
clc
call
sub
add
icebp
adc
pop
push
jae
mov
je
mov
jb
jo
xor
enter
or
movsb
or
aaa
mov
adc
jg
mov
ja
or
add
out
cli
jbe
cmp
add
mov
adc
out
mov
jno
test
negb
pop
nop
cmp
cmp
out
cli
xchg
xor
jns
jge
add
out
hlt
sub
push
into
mov
mov
insl
mov
pop
mov
add
xchg
sub
jg
arpl
or
adc
imul
cmp
inc
mov
sbb
call
xor
call
je
and
push
sub
pop
xor
icebp
incl
xor
lret
andb
add
addl
mov
orb
mov
sub
call
imul
adc
and
inc
js
out
mov
daa
inc
cltd
jle
mov
sub
sub
nop
inc
divl
mov
cmc
mov
lods
add
adc
lea
sbb
mov
pop
xchg
push
lods
adc
xorl
add
add
mov
sbb
xchg
pusha
or
cld
dec
popf
lods
daa
test
xchg
scas
and
pop
mov
add
mov
inc
and
ljmp
adc
mov
push
jo
adc
ficomps
inc
pop
add
mov
jmp
or
add
push
and
and
bound
jl
sub
outsb
jecxz
or
mov
clc
adc
xchg
int
adc
pop
lock
icebp
xor
pop
mov
adc
call
cli
cld
dec
inc
or
je
and
mov
sub
inc
add
hlt
and
rorl
pop
dec
insb
pop
mov
lret
mov
inc
mov
pop
adc
pushf
jbe
pandn
push
adc
inc
mov
pop
jge
lock
pop
pop
mov
jmp
pop
dec
arpl
pop
pushl
fsubrl
and
cmp
xor
push
inc
std
cmp
or
adc
xchg
sub
xchg
sbb
je
in
mov
neg
ljmp
je
cmp
pop
mov
xor
lea
mov
dec
jge
add
add
xor
jmp
out
and
das
je
imul
jno
cmpl
or
mov
mov
loopne
sbb
mov
xchg
add
inc
dec
dec
and
jl
clc
inc
xor
hlt
mov
lock
push
sbb
or
clc
add
mov
sub
and
adc
push
scas
cli
add
adc
cmp
call
fcos
add
sub
push
push
mov
mov
test
or
add
inc
cld
fwait
inc
cld
add
xor
and
repz
js
dec
or
scas
inc
ljmp
sub
call
icebp
xor
xchg
out
pop
inc
adc
mov
and
jo
push
xchg
and
cmpsb
push
or
rcr
fidivrl
add
xor
out
adc
add
xor
fdivp
inc
enter
shll
mov
jecxz
pop
mov
ja
mov
clc
hlt
ret
mov
fistl
pop
mov
fdivrs
ds
outsl
mov
add
cmp
sub
decl
mov
sbb
in
sarb
push
inc
repnz
cld
jmp
xor
lea
sti
push
mov
inc
xor
stos
add
sbb
popa
mov
push
mov
jg
pusha
xchg
stos
push
add
adc
sub
lock
rorb
lret
cmp
inc
scas
lea
pop
lods
mov
shll
push
lea
or
or
mov
cmc
add
xchg
mov
push
jo
imul
aam
jle
push
push
push
jb
lods
xor
dec
push
xor
push
inc
bound
sub
add
jecxz
pop
fdivs
jo
mov
dec
and
pop
mov
push
es
cld
xor
cmpsb
icebp
call
lcall
or
into
xchg
addl
lock
or
ss
lcall
lock
and
mov
mov
and
lock
pop
hlt
bound
movsb
jle
mov
es
cmp
in
add
jae
loopne
add
addl
push
sbbl
test
adc
adc
add
cmc
add
push
add
push
cmp
das
ss
adc
aam
or
loop,pn
add
jb
lods
mov
jg
pop
xchg
fsubrp
loope
cmp
sbb
dec
hlt
insl
mov
sub
jo
cs
ficoms
adc
mov
mov
call
sbb
pop
inc
test
icebp
sub
cmp
or
into
push
add
mov
push
mov
insl
scas
aas
es
repz
cli
pushf
movsb
outsb
adc
dec
add
fcoml
mov
jo
je
lcall
inc
xchg
or
test
and
add
or
insl
pop
icebp
mov
push
scas
cmp
inc
icebp
and
adc
dec
push
loop
inc
and
inc
xchg
cmpsl
lea
push
adc
inc
and
je
add
jb
mov
lods
cmp
add
outsl
mov
pop
icebp
pop
inc
adcb
xor
js
mov
push
adc
push
icebp
adc
mov
adc
mov
mov
xor
add
jl
sbb
xchg
jb
lcall
and
and
xor
mov
cli
hlt
fnsave
repz
xchg
mov
sbb
and
mov
jl
jo
std
add
cmpsb
ret
addl
cmpl
int3
lods
fucomi
cmp
mov
js
inc
add
xor
es
xorb
pop
push
add
adc
lods
stos
aam
mov
cmp
outsb
mov
xchg
cmc
add
lret
test
mov
cs
add
cs
pop
lcall
ficoml
cmp
cli
push
pop
lcall
insl
pop
add
popa
add
sbb
cmp
fists
lret
mov
imul
ljmp
and
dec
jmp
adc
add
jle
fmull
scas
jg
aaa
popa
sbb
call
cmp
cmp
inc
inc
push
movsl
mov
add
scas
add
cmp
adc
out
imul
inc
jns
pop
out
push
mov
pusha
stos
clc
cmp
adc
cmc
mov
mov
ret
xchg
inc
add
subb
jne
bound
in
in
push
add
les
hlt
cmp
add
cmpl
inc
cmpb
push
push
pop
loop
sbb
adc
fadds
mov
rorb
add
cli
jge
lods
add
cwtl
ja
mov
into
adc
daa
xor
and
popf
jno
test
or
push
xor
popa
xor
daa
pop
lds
ret
fsubs
lods
push
jle
xchg
sub
rclb
icebp
dec
mov
shlb
pop
inc
push
es
or
testb
push
subl
pop
addb
push
or
enter
adc
mov
lret
rcll
popa
sar
call
movsb
lahf
andb
adc
add
fcomi
sub
orb
test
inc
mov
std
push
jmp
lock
cmpb
adc
or
add
push
or
and
les
cmpb
xchg
or
imul
inc
loope
mov
lea
lods
add
enter
rclb
bnd
mov
mov
popf
or
add
fcoms
lds
or
jb
mov
ret
xor
test
add
out
ret
and
orb
lcall
ret
sarb
mov
insb
mov
ret
rol
mov
push
mov
outsb
mov
and
add
scas
dec
xchg
and
loopne
mov
xchg
ds
shrl
ret
mov
add
or
clc
sti
shlb
mov
jno
mov
sahf
push
mov
add
mov
loopne
sbb
dec
cli
int3
rorl
je
adc
xor
push
push
lcall
push
push
or
dec
stos
rol
or
into
adc
xchg
icebp
loop
and
add
add
popa
out
rolb
adc
shll
mov
imul
ret
adc
int
sbb
pop
rcl
clc
incl
push
test
and
pop
roll
add
cwtl
rcl
decl
sub
rcll
pop
ret
adc
mov
and
test
or
arpl
push
scas
adc
mov
add
add
or
ss
inc
call
or
mov
lcall
aad
adc
aas
cltd
push
inc
stos
test
jnp
add
dec
enter
repnz
hlt
push
jbe
jp
adc
pusha
sbb
xor
loope
or
bound
cmp
jg
test
cmp
jecxz
adc
test
jmp
mov
jp
decb
out
pusha
push
inc
lahf
or
xor
pop
test
sbb
xor
add
add
out
dec
fiaddl
shlb
mov
subb
or
inc
and
sbb
mov
add
popa
fs
call
sti
mov
pop
je
imul
add
add
test
sub
aaa
mov
into
sarb
adc
add
pusha
jle
add
into
addb
nop
repnz
loopne
mov
xor
subb
add
push
popa
xor
call
or
shll
jle
push
lcall
mov
sub
loopne
cmp
add
loopne
inc
sbb
outsb
adc
stos
ss
adc
adc
int
nop
popa
pusha
pop
fisubrs
mov
inc
call
cwtl
push
adcb
jo
xchg
jmp
jbe
push
adc
clc
mov
add
call
inc
add
pop
mov
or
inc
jp
nop
cs
and
arpl
cli
call
sbb
das
fs
movsb
add
pusha
cmp
addb
add
int3
into
cmp
inc
loopne
sbb
pop
push
add
js
and
loopne
mov
adc
push
mov
shlb
into
and
add
dec
jp
inc
mov
pop
or
xor
loop
pusha
mov
and
ljmp
or
aas
inc
loope
rcrl
inc
add
push
lock
or
mov
ret
inc
loopne
aas
ret
push
insb
in
pop
add
bound
cld
mov
pusha
cmp
or
cmp
mov
push
fcomps
andl
pusha
pusha
andb
adcb
and
pop
imul
sbb
jg
sahf
adc
aas
and
ljmp
push
inc
push
pusha
adc
add
cmp
jbe
or
inc
pop
inc
js
loope
mov
cli
loopne
andb
dec
or
stos
insb
fcompl
add
das
ja
or
mov
xchg
jp
push
loopne
or
sbb
lea
loopne
mov
ror
aam
out
ficoml
mov
inc
jp
sti
es
xlat
and
pop
inc
push
mov
shrl
out
mov
xchg
mov
test
add
xchg
inc
pusha
cmpl
mov
add
pusha
adcb
mov
test
add
cli
lds
and
sub
test
and
xchg
push
jb
adc
add
subl
adc
sub
add
inc
cmp
sarl
adc
stos
and
pusha
and
inc
adc
jg
sbb
es
pop
or
adc
cmpsl
popa
pop
push
arpl
sbb
inc
mov
cmp
pop
push
in
adc
outsl
stc
addb
scas
sub
das
nop
aam
or
inc
pusha
sub
dec
mov
inc
in
add
sub
cmp
or
popa
pop
mov
sbb
xchg
cmp
cmp
stos
pop
cmpsb
xor
mov
mov
call
les
dec
cld
jne
mov
into
lcall
fadds
call
or
ret
mov
xchg
test
mov
xor
adc
mov
lock
xor
mov
inc
and
push
mov
sbb
xor
xchg
fdiv
mov
or
mov
aam
adc
call
push
les
stos
lock
cmp
scas
add
jbe
adc
add
pop
inc
add
stos
push
pop
mov
cmp
push
push
jo
int
add
mov
ret
xor
data16
jmp
xorb
pop
pop
ret
mov
sahf
push
cli
push
stos
pusha
sbb
cmp
inc
hlt
std
jo
sbbb
out
add
add
cli
pop
dec
sbb
fnsave
xor
lock
cmp
jnp
add
add
add
enter
inc
mov
add
cmp
enter
adc
scas
fs
mov
lock
hlt
lock
cmp
mov
test
add
cli
or
and
subb
inc
sub
les
int3
jbe
cs
inc
in
push
pop
imul
xchg
add
js
xchg
dec
mov
lret
jo
mov
pop
inc
dec
pop
aaa
pop
es
push
adc
inc
lock
push
ljmp
xchg
icebp
int3
in
xorb
hlt
pop
cmc
test
inc
and
mov
and
ljmp
or
clc
call
jo
shlb
je
mov
dec
mov
inc
cld
cmpsb
mov
andb
adc
xorb
sahf
adc
inc
push
pop
or
pop
ljmp
repnz
xor
jmp
sbb
jo
push
or
mov
mov
add
jae
in
rcl
aaa
daa
into
sbb
call
cmc
call
pop
arpl
adc
xor
int
jl
sbb
pop
fimuls
adc
mov
and
jno
and
jo
add
mov
pop
repnz
xor
insb
mov
push
inc
adc
cwtl
lcall
push
adc
loope
mov
fwait
push
fdivrs
lock
add
xorl
pop
add
mov
add
add
std
outsl
or
push
push
sbb
xchg
add
addb
cwtl
jge
xor
fcoms
scas
inc
xor
ret
dec
adc
andb
shl
stos
add
add
pushf
lods
adc
push
cmc
fildll
lock
gs
xor
and
dec
or
pop
pop
mov
pop
ret
sub
mov
dec
adc
hlt
pop
inc
and
sbb
xchg
mov
push
add
enter
dec
jp
and
mov
cs
push
call
ljmp
scas
or
xor
sub
add
lock
fisttps
loope
cmp
dec
push
lea
cmpl
test
in
les
inc
xchg
aas
dec
fcoms
enter
xor
shlb
xchg
jle
and
dec
mov
or
icebp
inc
sub
sbb
pop
test
lock
pop
adc
add
fcom
das
mov
jne
push
push
mov
push
xorl
bound
sub
data16
outsl
fsubrl
adcb
data16
sbb
xchg
or
dec
add
ljmp
data16
les
stos
xor
inc
loopne
inc
push
mov
lods
jo
push
les
push
mov
ret
mov
push
insl
mov
icebp
mov
subb
loop
lods
test
test
cmp
fldl
stos
outsb
add
or
lret
add
inc
icebp
outsb
sti
mov
aaa
inc
inc
decl
push
add
mov
dec
add
sbb
push
jl
push
enter
sarb
mov
push
dec
ss
iret
stos
or
cs
mov
ret
add
push
or
mov
push
movsb
mov
lret
scas
mov
inc
out
rolb
xor
jbe
cmpsl
push
je
or
adc
add
or
mov
out
mov
daa
orl
adc
add
xchg
add
sbb
inc
xchg
jmp
xchg
inc
sbb
mov
cmpsl
lock
sub
dec
xor
cmp
scas
inc
std
adc
inc
subl
call
and
and
mov
push
xor
mov
add
and
and
add
es
push
and
dec
mov
out
fs
push
dec
bound
xorl
mov
std
push
sbb
ret
inc
addb
ljmp
nop
lcall
or
mov
testl
push
jo
lcall
out
aas
xor
into
lock
jg
mov
arpl
daa
pop
jno
add
lock
data16
pop
inc
mov
mov
loop
roll
fmuls
add
adc
push
pop
and
js
mov
mov
push
movsb
loop
dec
pop
dec
in
add
mov
mov
add
jo
mov
push
xchg
icebp
insb
mov
ljmp
adc
mov
mov
dec
adc
and
adc
call
stos
mov
xor
je
mov
mov
js
jno
pop
xor
andb
add
clc
push
cld
add
or
jecxz
cmp
mov
inc
jmp
mov
mov
cmp
aas
push
push
call
xchg
sbb
mov
pop
ljmp
in
or
jb
xor
aaa
jge
mov
inc
out
jo
sub
jno
movsl
mov
imul
mov
xor
test
push
pusha
jl
lock
js
push
repnz
push
mov
mov
das
xor
jnp
cmp
push
pop
jne,pt
insb
push
sarl
movsb
enter
test
inc
icebp
sbb
mov
xor
inc
xchg
call
pop
repnz
inc
xor
xor
call
mov
cmpsb
jmp
lods
lock
or
mov
stc
add
cmp
push
bound
mov
data16
inc
pop
test
sub
jno
mov
mov
lods
aaa
je
xor
sub
cmp
or
cmp
loop
shlb
or
and
cld
lcall
pop
ret
fadds
add
hlt
mov
add
pop
push
push
iret
bound
shrb
xchg
hlt
push
push
pop
fiaddl
insb
push
and
add
or
data16
cwtl
push
push
jbe
test
imul
out
jle
aas
and
inc
inc
sbbb
nop
add
js
fs
sub
cmpsl
je
add
mull
xor
inc
add
cmpl
aad
sbb
shlb
pop
mov
mov
inc
push
or
xor
inc
movsb
leave
sbb
and
adc
and
loop
add
sub
xlat
pop
adc
adc
sbb
test
add
cmpsb
jo
lea
inc
cltd
fs
jmp
add
mov
adc
aam
or
or
adc
xchg
xor
dec
sarl
add
push
in
xchg
push
adc
loop
pop
cmp
xor
adc
mov
and
mov
ss
sbbb
rcll
xor
push
clc
decl
ljmp
mov
ljmp
pop
lahf
cmp
mov
mov
orl
pop
lods
rcrb
mov
add
and
mov
mov
sub
xchg
adc
rolb
push
and
push
sub
sahf
dec
mov
pop
dec
xor
hlt
incl
adc
or
imul
push
or
pop
mov
test
xlat
xchg
mov
cld
rolb
or
pusha
mov
mov
xor
push
rorl
or
loopne
add
push
fidivs
inc
test
mov
jns
inc
xor
int3
and
inc
out
shll
or
add
push
call
stos
out
into
mov
cmc
inc
xchg
shr
add
lock
mov
add
sub
push
push
or
cs
mov
daa
inc
pushf
inc
cmp
jb
adc
jp
cmpsb
je
insl
pop
orb
add
and
lock
xchg
add
xchg
push
sbbb
add
lret
and
dec
jne
inc
sbb
adc
cli
add
jmp
mov
push
mov
inc
je
loop
and
jecxz
jnp
sub
mov
sarb
cmp
sbb
push
dec
outsl
enter
or
dec
lods
mov
mov
mov
imulb
cmp
jl
shlb
add
push
xchg
outsb
test
out
jae
push
das
add
dec
shr
xchg
jmp
fs
push
call
inc
jbe
rclb
ret
inc
iret
and
adc
jp
cmp
inc
mov
ljmp
xor
mov
xchg
into
pop
rorl
add
add
and
push
dec
mov
mov
shll
pop
fistpll
scas
shrb
pushf
shlb
cmc
insl
test
in
xchg
add
or
test
stos
push
ss
xchg
or
or
push
adc
cs
ret
rclb
dec
or
add
out
loop
rcll
jbe
pop
xchg
xchg
dec
fldl
add
mov
fidivrl
aam
mov
mov
dec
dec
pop
or
sub
call
rcl
xchg
dec
xor
inc
inc
mov
scas
loope
jo
mov
enter
xlat
push
pusha
push
data16
pop
and
inc
outsb
mov
add
loop
xchg
add
cltd
jnp
subb
inc
xor
incl
cmp
aam
and
js
pushf
dec
lods
or
lods
and
pop
jbe
fimull
dec
fwait
lret
inc
call
mov
sti
int3
jg
add
adc
insl
jecxz
ja
jb
push
popa
add
outsl
push
xchg
and
mov
call
xchg
popf
cmpsb
push
dec
test
shlb
adc
xor
test
inc
xchg
inc
sti
push
ljmp
mov
jl
mov
outsl
mov
add
sub
popa
add
pusha
add
push
sub
add
test
xor
push
insb
ds
sub
mov
fsubrs
bound
push
and
dec
pop
cltd
sahf
adc
xor
or
xor
insl
mov
pusha
xor
add
mov
insl
adc
std
push
and
sbb
test
adc
iret
data16
push
jne
mov
adc
inc
pop
jp
pop
inc
adc
xchg
enter
fisubrl
dec
loopne
sti
xchg
push
xorb
dec
test
pusha
or
sbb
adc
push
scas
and
popa
push
test
test
adc
cmp
rorb
sbbl
sahf
jo
push
push
and
filds
jecxz
lcall
loope
sbb
pusha
xor
add
pushfw
mov
or
mov
ja
pusha
mov
loope
add
je
push
add
call
pusha
insb
ds
movsl
pushf
xchg
mull
inc
xlat
scas
xor
mov
stc
popa
inc
mov
push
inc
jne
stos
mov
popa
mov
adc
loopne
xor
dec
inc
mov
xchg
test
mov
clc
or
sbb
call
loopne
test
ret
mov
jge
adc
push
mov
in
adc
stos
mov
test
inc
adc
push
mov
push
add
mov
popa
add
jo
sti
dec
add
loopne
add
or
push
pop
sub
arpl
adc
push
bound
popa
dec
push
push
loope
inc
sub
dec
cli
and
add
mov
testb
clc
or
ret
repz
push
out
cwtl
mov
add
dec
bound
in
les
jmp
loopne
jne
pop
mov
ljmp
mov
cld
jle
loop
sbb
dec
loopne
dec
out
loopne
cmp
jbe
and
xor
or
jmp
or
inc
enter
decl
and
add
sub
xor
aaa
adc
jmp
push
pop
xor
dec
adc
push
pop
inc
roll
dec
and
sbb
insb
cmpb
jp
jmp
loopne
push
and
jb
loopne
sub
sahf
push
or
add
adc
aam
mov
loopne
cmp
push
push
stos
jbe
add
jne
clc
cmp
in
inc
mov
into
push
popa
fabs
aas
sbb
ds
xchg
cmp
cs
inc
push
jo
sub
cmpl
cli
pushl
push
push
ljmp
add
jbe
ud0
mov
hlt
xor
xchg
adc
outsl
push
call
add
add
pop
pop
lock
mov
pop
outsl
sbb
adcb
lock
repz
orl
mov
xor
or
or
psubsb
xchg
imul
xchg
push
mov
cmpsb
cmpsb
pop
pushf
inc
push
and
sbb
xor
test
lock
fsubrs
mov
sti
incl
inc
mov
inc
pushf
push
xor
push
in
sbb
jmp
sub
orb
jb
jmp
add
lods
pusha
movsl
movsb
add
sub
loop
mov
pop
xor
push
bound
gs
fcomip
inc
leave
ret
push
test
mov
xor
add
or
xchg
out
jg
mov
adc
loopne
adc
addb
lock
clc
and
sub
and
jmp
imul
lock
push
mov
ret
scas
and
inc
sarb
add
lcall
push
inc
call
push
adc
mov
mov
mov
push
xchg
test
sub
sub
loop
push
or
adc
mov
jge
or
jp
in
aas
fidivrs
lods
xchg
add
dec
test
out
frstor
enter
sub
jo
mov
sahf
mov
mov
pop
mov
adc
xor
jno
lock
ljmp
jo
test
xor
scas
xor
or
sbb
mov
cld
mov
xor
add
cmpl
andb
movsb
pushl
mov
pop
xor
xor
repnz
aaa
xor
pop
lods
nop
adc
xor
addl
mov
hlt
and
cmp
jg
pop
je
xchg
pop
adcl
and
cli
sub
xor
pop
jo
xor
dec
pop
add
inc
push
inc
call
ja
xchg
lcall
mov
xorb
mov
decl
test
adc
add
movups
jmp
xor
cmp
inc
or
dec
in
loopne
adc
xor
pop
add
sbb
dec
call
pop
cld
inc
dec
call
cli
mov
or
dec
and
into
push
sbb
adc
and
inc
call
or
mov
clc
loop
jno
mov
push
scas
testl
mov
gs
sahf
je
adc
cmpsl
call
jnp
adc
ds
xor
inc
aaa
mov
fmuls
inc
adc
stos
cmp
out
xchg
incb
push
and
aaa
mov
ficoml
fbld
lods
call
call
or
and
insl
cmp
mov
in
lcall
mov
dec
sub
je
dec
out
and
jg
je
mov
mov
clc
adc
test
pop
sbb
pop
pop
add
add
or
sub
add
out
loopne
xor
test
xor
gs
scas
xor
inc
icebp
repnz
mov
mov
pop
or
xchg
mov
push
ret
dec
adc
jbe
ja
sub
jno
inc
or
mov
pusha
sub
or
movsb
add
dec
push
cmp
add
cwtl
jb
mov
xchg
loopne
push
xorb
add
lds
adc
mov
mov
xor
inc
je
sub
jne
rorl
xchg
stc
pusha
clc
add
pop
add
ret
xor
xchg
inc
xchg
jno
clc
jmp
push
ret
out
out
mov
xor
mov
adc
adc
adc
xor
push
xchg
fwait
clc
adc
sub
ljmp
sbb
push
mov
sbb
sub
decb
add
call
addb
inc
or
pop
or
jg
or
out
pop
or
adc
push
adc
stc
je
push
sbb
iret
jmp
mov
cli
sub
call
push
inc
mov
scas
clc
je
dec
mov
ret
jge
adc
inc
call
or
imul
lret
xor
je
xor
or
pop
scas
or
out
push
add
pop
cld
adc
jo
data16
sbb
cmp
or
adc
sub
ret
arpl
inc
xor
xorb
inc
test
inc
mov
jo
pop
add
insb
add
xlat
lock
push
ss
add
inc
sbb
sbbb
xor
sub
mov
testb
je
aam
adc
adc
jne
enter
add
jo
ds
push
orb
adc
add
adc
sub
push
sahf
adc
adc
decl
cld
mov
pushf
inc
icebp
push
clc
xor
jns
jmp
jne
cld
jno
lods
mov
mov
into
aam
ljmp
jl
sub
subb
out
nopl
add
je
or
aaa
lods
jbe
push
xor
adc
pop
adc
jmp
push
outsb
dec
mov
xchg
push
jbe
cwtl
pop
xchg
arpl
xor
jge
jno
ret
adc
jle
je
fistps
jno
sbb
nop
jne
push
movsb
mov
icebp
aaa
adc
cmp
add
adc
push
outsb
inc
adc
hlt
and
stos
lcall
add
xchg
clc
fnstenv
xor
sbb
or
jg
rorb
and
rdtsc
or
pop
jo
xchg
ljmp
xor
add
scas
mov
ret
lock
or
subb
pop
sub
jl
addl
pop
mov
loopne
pusha
mov
pushl
add
xor
mov
or
lock
mov
insl
add
call
inc
xchg
push
cmp
push
adc
adcb
and
push
jl
rolb
rolb
add
decb
or
je
lea
pop
adc
out
adc
mov
cmp
mov
jno
je
ret
je
test
fs
push
fwait
stos
mov
loopne
push
sub
sarb
pusha
inc
pusha
dec
mov
push
jmp
jmp
or
dec
shr
add
jmp
adc
add
ss
mov
cmp
add
das
jb
movsb
dec
data16
add
push
or
or
fdivrs
call
add
pop
test
add
add
into
popf
sub
pop
lret
adc
dec
cmp
dec
sub
ficoms
xchg
sub
lcall
push
jmp
and
add
xchg
outsb
idivl
test
jl
inc
and
ja
xchg
mov
mov
test
cld
outsb
sbb
jle
and
push
dec
adc
mov
cmp
cmp
scas
hlt
sti
jmp
lcall
addb
push
arpl
ja
cmp
mov
out
ljmp
cmp
or
add
jg
call
or
adcb
xchg
daa
jo
pop
jmp
cwtl
adc
gs
sbbb
rcrl
fwait
jecxz
cmp
out
in
inc
loopne
pop
test
sarb
lock
adc
lahf
xor
clc
inc
adc
xchg
je
and
dec
mov
cmc
jg
inc
pop
ljmp
arpl
or
js
insb
adc
call
fldl
test
add
clc
inc
cmp
mov
push
int
subl
push
mov
lcall
loopne
jp
inc
xchg
mov
sbb
pop
mov
fs
add
mov
and
mov
ja
rcll
je
rolb
in
jmp
push
idivb
orb
or
roll
mov
nop
ffreep
push
inc
adc
add
mov
mov
push
pop
and
not
and
add
mov
sbb
shrb
mov
shlb
clc
or
fs
test
pop
mov
sbb
add
shl
test
pop
ja
xchg
lock
cmp
insb
cwtl
dec
mov
test
cs
pop
sarb
cs
je
add
add
or
sahf
add
mov
mov
push
and
cmp
jge
sbb
lock
push
adc
fcomp
sub
scas
mov
call
adc
dec
mov
cmp
mov
jmp
fimull
cmp
adc
add
movsl
pop
mov
in
pop
je
mov
fistl
jmp
addl
or
pop
push
dec
push
xor
push
dec
shlb
test
and
mov
cmp
sub
and
ret
xor
or
inc
and
push
cld
rcrl
fs
sbb
cmp
mov
cs
aaa
add
mov
add
push
fsubr
sbb
mov
pop
sahf
incl
aam
mov
rorb
sub
push
push
and
shrb
clc
push
xchg
rcl
mulb
or
mov
shl
rcrb
sarb
pop
hlt
outsb
inc
addl
adcb
push
pop
jge
fdivrs
xchg
loop
push
add
or
shll
decb
repz
rclb
mov
adc
push
enter
xchg
sbb
push
add
decb
push
push
add
pop
mov
mov
inc
mov
add
hlt
outsl
push
bound
in
push
mov
inc
inc
enter
add
mov
add
push
rolb
jecxz
cld
pusha
adcl
push
push
fldt
dec
out
aam
xlat
loopne
mov
mov
mov
add
rolb
xor
jo
jno
imul
popa
push
cli
jbe
and
mov
test
ret
js
fiaddl
testb
add
divl
or
das
or
inc
fisttpl
jecxz
es
pusha
xchg
xchg
and
push
mov
mov
jbe
add
pop
mov
inc
and
mov
fisubl
mov
mov
shr
cmpsb
or
mov
fucomi
mov
mov
mov
adc
fs
scas
xchg
push
popaw
or
cmp
loopne
fs
xor
mov
pop
cmp
mov
pop
mov
test
dec
sub
and
dec
xchg
jle
std
or
cwtl
cli
ret
adc
rorl
sub
jp
lcall
cli
jg
adc
xlat
pusha
adc
pusha
movsb
jmp
in
inc
pop
test
xchg
jne
jmp
mov
jmp
push
arpl
cmp
out
push
or
push
jge
and
mov
push
mov
pop
push
ljmp
pop
or
mov
mov
ljmp
mov
xor
or
idiv
adc
loopne
adc
inc
mov
mov
inc
pusha
je
mov
subb
and
in
mov
mov
in
inc
inc
lcall
xchg
add
mov
or
add
pop
pop
int
sub
and
jo
xor
lahf
xchg
adc
adcl
add
or
loopne
insl
push
mov
mov
xchg
jl
aaa
cmp
adc
pop
std
push
out
add
add
in
dec
loope
out
imul
mov
push
jg
xchg
mov
adc
shlb
xor
loopne
jle
pop
ret
test
popa
sub
sahf
add
ficompl
xchg
loopne
int3
pop
pop
pop
or
inc
loopne
stos
test
fistpl
loopne
lea
test
xchg
push
pop
daa
or
xorb
mov
mov
mov
jno
in
mov
sbb
or
cmp
dec
flds
loop
jg
jg
and
or
mov
pusha
push
pusha
in
pusha
ret
sub
das
or
mov
dec
dec
or
mov
pusha
lret
fcoms
mov
add
xchg
push
lock
insb
add
adc
mov
adc
fimull
mov
add
les
and
lods
test
ja
fimull
mov
mov
inc
test
sub
clc
enter
adc
and
or
mov
lods
sub
add
out
xchg
sub
or
ror
stos
xchg
and
test
pushf
sbb
repz
add
cwtl
pop
jae
mov
sub
dec
jg
add
push
lock
and
mov
jbe
call
fists
or
sbb
add
xor
add
decl
mov
mov
or
insb
lods
push
cwtl
xchg
lock
pop
and
mov
and
jbe
sub
sub
xor
add
sar
xlat
mov
dec
xchg
mov
sub
adc
adc
jo
clc
call
orl
add
jo
xor
test
jnp
lock
js
pop
sub
cltd
mov
cltd
rorl
adc
mov
lret
test
cmc
outsb
sbb
test
mov
xor
push
popf
sarb
sub
cmp
lea
mov
pop
inc
inc
pop
pop
mov
mov
inc
cmp
pop
mov
xor
adc
es
shl
insl
addb
xor
sub
mov
add
cmp
sub
push
push
sbb
sbb
mov
sub
adc
add
mov
dec
sub
cmp
jbe
pusha
jo
call
push
adc
adc
fs
rclb
adc
jmp
sub
lock
jl
mov
pop
jo
jp
clc
mov
insb
das
shrb
call
mov
xor
jne
sub
enter
adc
shl
or
add
push
filds
int
rcll
sbb
stos
add
sbb
pop
push
sti
outsb
loop
xchg
pop
lock
inc
adc
xor
push
incb
inc
scas
jo
mov
or
loope
out
push
hlt
add
xor
pop
lock
or
jg
mov
push
sub
add
add
sub
push
xor
pop
adc
mov
sbb
jns
push
jo
add
test
in
in
ja
hlt
add
lock
inc
cmpsl
adc
inc
dec
mov
sbb
hlt
lock
addl
xchg
mov
aaa
cwtl
adcb
mov
and
and
jg
lcall
cs
sete
dec
lock
and
decl
mov
pop
add
mov
cmp
mov
cmpb
mov
or
jo
insb
inc
push
insl
jg
ja
adc
lret
add
jno
fimuls
mov
inc
jae
std
test
incl
jmp
jnp
and
jno
or
mov
sub
or
cmp
inc
add
scas
add
test
fistpl
popa
lods
std
or
add
out
or
mov
dec
sti
adc
mov
mov
inc
fadd
jno
mov
mov
mov
xchg
inc
pushl
cli
xor
xchg
add
sbb
fdivs
xchg
xor
mov
lea
stos
mov
sbb
loopne
nop
push
pop
mov
enter
add
mov
nop
add
mov
pop
add
mov
dec
and
push
inc
push
jo
call
jo
or
mov
pop
add
mov
inc
push
and
xor
ret
mov
lahf
or
add
add
push
sub
aaa
in
sub
adc
sub
xorl
push
cmc
lock
sub
sarl
mov
lea
push
aaa
sbb
mov
push
lret
lcall
add
filds
lods
cmp
add
gs
inc
add
add
adc
fisubrl
push
mov
mov
add
call
xor
jbe
repz
ret
inc
add
or
or
mov
jo
sbb
or
lods
call
pop
sbbb
sbb
movsl
repz
cs
xor
push
cld
pop
dec
fmuls
mov
jo
xchg
decl
adc
js
mov
add
outsb
loope
mov
lock
cld
push
push
and
push
jbe
es
jle
push
push
jo
add
xchg
adc
sti
push
bound
xor
or
test
roll
repnz
pop
mov
push
jbe
sub
ljmp
xor
add
rclb
rolb
and
jo
adc
int3
sub
push
je
sbb
pop
push
xor
pop
jl
inc
test
shl
frstor
dec
movb
mov
leave
mov
and
ror
xor
xor
lods
dec
insb
dec
fiaddl
mov
mov
clc
je
insb
jo
pop
mov
pop
push
xor
test
notb
push
pop
and
incl
fs
loopne
xor
xchg
movsb
add
inc
mov
lret
cld
add
pop
pusha
cwtl
cli
in
push
xchg
sbb
popa
nop
inc
mov
or
aas
inc
pop
push
adc
push
or
mov
nop
filds
xor
adc
ds
outsl
sub
lock
push
ljmp
jae
xor
inc
lret
sbb
cmp
push
daa
mov
mov
add
lcall
add
and
notl
xchg
jg
inc
pop
push
xchg
lea
aaa
call
jne
pop
and
test
scas
sub
adc
inc
ljmp
pop
add
shrd
je
lcall
or
lock
mov
jmp
mov
xor
jle
adcb
pop
sub
jno
out
and
loope
pushl
out
jo
je
shl
jg
call
mov
xor
mov
pop
lock
xor
mov
xor
out
add
mov
or
cmp
pop
xor
dec
jno
lock
jmp
pop
outsl
xor
testb
mov
mov
shlb
adc
std
or
pushf
lock
adc
fistps
dec
mov
jecxz
jo
mov
sbb
aaa
ret
pop
inc
and
ficoms
pop
gs
es
pop
sub
rolb
dec
sub
popf
popa
mov
lock
in
sub
push
or
jp
or
dec
mov
cwtl
aam
or
mov
mov
dec
dec
loope
xor
cmpsl
xchg
mov
and
add
stos
rclb
mov
sbb
dec
sub
or
cli
pop
or
push
mov
lock
inc
adcb
rcrl
data16
dec
jmp
or
jp
movsb
pop
xchg
add
sbb
push
lock
outsl
pop
pop
xor
sti
and
cld
or
inc
hlt
adc
add
lds
push
jbe
cld
sahf
push
push
addb
addb
adc
les
inc
pusha
repnz
fidivrl
push
adc
push
sbb
dec
movsl
jo
dec
fsubs
fiadds
mov
xor
mov
pop
or
sbb
lcall
cli
inc
push
sbbb
push
or
nop
dec
aam
imul
jmp
mov
push
adc
les
fadds
cmp
fsubrs
inc
cmp
mov
mov
outsl
stos
cmpsb
cmp
mov
or
sub
xor
mov
xchg
and
push
loop
orb
je
call
pop
adc
fs
and
add
xchg
adc
pop
pop
push
push
call
in
imul
rclb
mov
and
adc
std
pop
push
pop
sarl
add
pop
or
ret
xor
aam
test
pop
fsts
ljmp
dec
cmp
icebp
inc
add
into
adc
push
rcl
les
sub
pop
cmp
or
or
out
ret
jmp
inc
test
pusha
orl
rorl
iret
and
push
and
mov
pop
jmp
add
xchg
jg
mov
addl
mov
sarb
int
es
xor
sub
inc
sub
adc
pop
jl
rclb
adc
xchg
shrl
or
rol
sub
and
sbb
or
push
mov
add
or
mov
sbb
imul
adc
jbe
jo
add
mov
test
pusha
rolb
decb
lret
rorb
nop
je
or
lahf
imul
jle
ret
jmp
rorb
or
add
push
dec
sbb
cld
push
push
jl
push
mov
cld
cmp
lret
add
add
sbb
or
movsb
clc
scas
push
add
push
xchg
cmp
sub
es
lcall
fistps
mov
jmp
push
dec
jne
cwtl
push
js
pop
mov
fistpl
aam
inc
test
or
bound
push
xchg
push
cmp
icebp
test
divb
je
pusha
bound
aam
mov
or
sbb
xchg
jle
fldl
xchg
sub
add
add
inc
push
sub
cmpb
testl
push
pusha
xor
push
pop
dec
fisubrs
incb
loopne
pusha
pop
mov
add
in
add
add
or
add
adc
test
dec
inc
bound
lea
shlb
xor
push
int3
shlb
push
add
mov
mov
push
cmp
mov
and
gs
inc
pusha
adc
cmp
and
cli
add
push
xor
icebp
ret
xchg
jo
mov
push
mov
add
ss
lods
out
loop
nop
aad
add
pushl
mov
mul
loop
das
clc
sub
xchg
dec
ret
add
add
or
ds
loopne
imul
ret
inc
ljmp
xchg
mov
inc
inc
jp
mov
jns
mov
mov
js
cmp
lea
add
adc
data16
cli
and
sub
pusha
or
gs
andl
dec
pusha
cmp
mov
loope
ret
cs
hlt
inc
popa
stos
cli
jmp
pusha
lods
jg
push
imul
aas
xchg
adc
dec
mov
test
mov
or
mov
inc
mov
pusha
sbb
sbb
or
fcomip
shlb
inc
xchg
loop
jne
sub
mov
lea
stos
lret
mov
xchg
ficompl
xor
pop
and
jne,pn
movzwl
mov
or
stc
shl
data16
xor
aam
sbb
ret
lods
out
add
nop
gs
enter
and
or
addl
loopnew
xor
pop
or
pusha
lea
bound
push
test
lock
adc
int3
dec
cmp
xchg
enter
inc
mov
mov
and
repnz
jbe
jb
repnz
adc
lock
pop
sub
stos
adc
es
ljmpw
add
xor
push
jg
imul
mov
decb
add
mov
loopne
mov
clc
call
decb
daa
lods
mov
add
insb
mov
cs
sbb
and
fwait
loop
call
jne
cwtl
gs
nop
mov
aam
in
in
add
mov
adc
data16
out
and
pop
lock
std
ljmp
loopne
sub
es
dec
daa
ret
pop
insb
adc
pop
popa
hlt
push
push
ss
dec
rorb
mov
ljmp
push
inc
pop
insb
dec
fistl
fisttpl
stos
xor
insb
inc
adc
nop
ret
lock
mov
push
test
das
aam
das
mov
sbb
push
cmc
adcb
nop
adcb
jl
jecxz
stos
add
pop
test
pop
inc
lock
pcmpgtd
mov
dec
incb
dec
add
mov
inc
push
pop
adc
mov
or
push
mov
inc
jo
and
out
add
lock
incl
add
or
sub
mov
xor
inc
cmp
sub
std
shr
sub
adc
jne
mov
or
mov
pop
mov
xor
and
negb
out
dec
and
adc
cli
orb
outsl
mov
adc
adc
mov
mov
jo
aad
sar
xor
add
jo
insb
mov
lock
test
repnz
mov
jl
push
pop
mov
lock
jb
pop
cmpsb
adc
inc
fs
xlat
ret
or
lock
adcb
filds
call
es
fs
or
call
sbbb
test
sub
and
popf
and
adc
loope
push
mov
mov
mov
je
xor
popa
scas
ja
adc
sahf
pop
roll
aad
push
cmp
cld
shll
test
dec
sub
dec
sbbl
or
mov
cmc
mov
mov
ds
push
mov
push
pop
cwtl
jb
jo
dec
jo
cmp
or
inc
xor
add
xor
ljmp
jne
push
je
inc
or
push
aam
lock
out
clc
add
mov
push
cli
sbb
jo
jo
xor
stos
add
into
push
lock
xlat
rcr
mov
mov
mov
dec
aad
mov
inc
xchg
repz
call
push
filds
adc
adc
xorb
popa
cld
adc
jo
xor
mov
xchg
or
jb
rcrb
test
jl
or
sahf
inc
pop
pop
mov
mov
test
adc
xlat
call
ret
push
cli
cmp
xchg
jo
mov
and
subb
andb
xor
adc
lret
or
mov
add
incb
in
and
xchg
jmp
addw
add
dec
mov
loope
sahf
mov
jge
add
push
inc
lea
cld
cmp
aam
clc
and
push
pop
mov
movb
pop
jmp
fcoml
mov
clc
adc
xor
leave
cmc
test
push
sbb
sbb
pusha
scas
and
adc
rorl
push
push
cmp
xacquire
xorb
scas
ja
mov
sub
lock
jb
pop
add
mov
lcall
push
ds
ja
je
or
mov
outsl
je
xor
pop
xor
scas
xor
mov
pushf
and
jae
jo
xchg
lcall
pop
lock
out
pop
mov
inc
mov
add
cld
inc
cld
cmp
stos
xchg
ret
jmp
xlat
dec
ret
add
xor
xor
sbb
repz
mov
call
add
add
cmp
jne
add
sti
add
mov
cmc
ds
and
add
pop
mov
cmp
xchg
add
inc
add
mov
cs
mov
sub
push
mov
pop
call
loop
dec
dec
hlt
push
add
pushf
push
pop
int3
dec
add
and
mov
cld
movl
cli
cmp
jg
push
sbb
test
je
and
enter
jb
push
jge
popa
cld
pusha
lock
lock
in
add
pop
call
jmp
mov
ret
xor
lahf
and
mov
sbb
adc
sbb
push
mov
push
mov
ret
ds
je
outsl
adc
xchg
cmp
test
mov
add
pop
pop
dec
dec
loope
xchg
ds
in
xor
sbbl
inc
inc
je
idivl
sub
cld
jmp
adc
test
lcall
cmp
in
cs
xor
and
mov
add
je
sbb
push
or
adc
and
clc
add
fnstenv
add
adc
lods
mov
or
cmp
push
pop
adc
les
xchg
dec
sub
xor
and
clc
test
fisubrl
push
ja
xchg
inc
xchg
shlb
lock
and
jmpw
decl
add
cmp
mov
dec
pusha
inc
mov
aam
jne
add
mov
scas
aaa
xchg
sbb
fdivrs
inc
movsb
push
push
add
loop
imul
inc
add
insl
jg
cli
or
es
jne
fistpl
sti
push
jb
xor
inc
adc
adc
int3
push
xor
loope
inc
add
jne
cs
loopne
inc
push
decl
das
cmp
jno
jo
sub
decl
sbb
call
jno
jp
sbb
mov
pushf
call
repnz
push
push
xchg
pop
add
jo
push
adc
clc
mov
inc
call
adc
rolb
push
or
adc
inc
xor
mov
roll
enter
mov
outsl
ja
lods
adc
cmp
je
adcb
add
add
xor
cmp
add
mov
shrb
out
add
jno
or
add
das
out
inc
mov
mov
rclb
or
xchg
xchg
cmpxchg
nop
icebp
cmp
push
push
das
testb
ljmp
xor
mov
call
add
xchg
jo
mov
mov
pop
and
mov
sbb
mov
xor
bound
in
mov
adc
push
test
ljmp
xchg
or
xor
sub
or
mov
shrb
lods
je
daa
sub
sti
repnz
sub
or
fistpll
pop
jl
cwtl
jno
xchg
xor
mov
adc
and
movsb
das
inc
add
test
rcrl
and
pop
rcrb
js
dec
call
test
inc
mov
xacquire
ds
lods
push
cmc
lock
das
pushf
sti
jne
mov
and
call
mov
inc
sbb
xor
test
add
incl
hlt
pop
dec
xchg
ret
push
add
pop
add
xor
and
inc
loope
in
jbe
mov
or
dec
in
mov
decl
fdiv
es
pop
or
add
fdiv
cmpsb
xchg
decb
or
pop
dec
adc
hlt
or
jo,pn
mov
push
mov
sub
aaa
mov
in
and
and
rol
push
enter
aaa
mov
and
into
inc
xchg
ss
rorb
jmp
movb
jmp
jmp
dec
es
cmp
xchg
sbb
push
fbstp
mov
dec
je
ret
mov
in
lods
mov
loop
scas
inc
repnz
mov
insb
adc
inc
cli
insb
sub
mov
fwait
out
dec
daa
inc
outsb
mov
mov
sbb
rolb
in
popa
sbb
jae
es
notl
or
jmp
pop
imul
cmp
mov
mov
ss
mov
ret
inc
sbb
lret
push
push
adc
inc
mov
pop
jge
test
cmp
dec
jp
stos
addb
xor
sub
das
pop
add
aad
ja
nop
call
data16
xchg
xor
push
les
jne
adc
mov
out
lea
and
mov
mov
cmp
inc
inc
je
mov
pop
push
inc
xor
pop
push
mov
mov
adc
sbbb
mov
enter
pop
mov
xchg
push
add
in
test
pop
shlb
jmp
test
cmp
aad
outsb
sbb
mov
add
enter
mov
push
xchg
push
inc
push
int3
xor
push
inc
mov
sbb
adc
sbb
insl
xchg
imull
inc
jecxz
mov
js
xchg
xchg
add
pop
enter
shrb
and
cmpl
outsl
adc
push
jp
pop
xchg
or
sbb
test
ret
sub
mov
add
inc
jb
inc
mov
pushf
int
pop
sbb
push
push
loop
mov
inc
cwtl
lahf
mov
imul
add
push
pusha
cmp
mov
pop
mov
enter
add
pusha
push
subb
loopne
les
cmp
pushl
test
inc
das
jne
in
xchg
push
sub
mov
shlb
pop
add
fmull
inc
fwait
inc
push
lock
add
fisubs
lea
adc
ret
adcl
data16
xor
xchg
cmp
pop
cmp
and
mov
jle
adc
xchg
adc
mov
call
enter
les
into
xchg
mov
in
and
push
dec
xchg
shlb
pop
jb
pop
inc
rorb
push
icebp
sbb
inc
in
mov
aad
and
adc
add
rcrb
pop
mov
pusha
adc
adc
mov
adc
mov
xor
repnz
shlb
mov
fists
lret
test
cmpl
mov
inc
gs
adcl
and
scas
sub
mov
add
sbb
inc
sub
xchg
xchg
test
or
jp
rclb
xchg
cmp
xor
fwait
rolb
out
inc
push
pop
icebp
or
idiv
lea
jo
push
mov
pop
and
xor
js
adc
xor
push
adc
jbe
or
inc
jge
lods
sti
call
sbb
loopne
jne
push
mov
sub
mov
mov
push
arpl
add
adc
push
push
mov
cmpsl
mov
jb
out
addb
xchg
fs
xchg
loopne
inc
in
popa
outsb
jp
adc
jmp
jns
and
data16
repnz
mov
cld
cli
cmp
sub
mov
loopne
hlt
arpl
cmp
addb
cmovns
sbb
pusha
subl
je
cmp
push
data16
push
inc
out
ljmp
in
push
inc
loopne
and
push
bound
dec
jmp
clc
push
popa
push
adc
push
imul
push
shlb
add
popa
jo
add
mov
sbb
add
add
push
adc
add
push
jbe
mov
ljmp
and
push
loopne
or
repnz
add
in
pop
sti
jmp
mov
add
and
shll
je
cmp
sub
pop
or
les
or
jne
inc
mov
incl
or
mov
xor
adc
cs
decl
mov
test
insb
add
bound
test
adc
push
pop
xor
add
inc
inc
sub
popf
or
pop
or
lods
subb
cmpsb
or
cli
cmp
test
mov
push
cmp
or
hlt
loopne
lea
das
adc
cli
call
insl
fldt
add
xor
mov
pop
push
push
pop
mov
call
add
and
mov
in
add
sub
inc
mov
mov
les
cli
mov
pop
popa
mov
stos
xchg
cmp
shlb
add
push
xchg
mov
insb
enter
or
pop
inc
int3
inc
jmp
push
pop
xchg
popa
enter
adc
inc
test
pop
bound
jb
hlt
test
lock
call
or
mov
fsubrs
adc
je
pusha
pop
fisubrl
adc
bound
dec
add
movsb
bound
lock
ljmp
or
add
data16
repz
inc
xor
add
popa
ficoms
in
int
or
sub
fldt
fimull
subl
sbb
std
or
pop
jl
adc
and
mov
sub
xor
inc
fiaddl
aaa
dec
xor
rorb
adc
ss
adc
mov
pusha
xchg
mov
stos
jne
sbb
pop
add
pusha
and
push
sub
cmpb
scas
popa
jb
add
adc
push
mov
or
je
clc
xchg
jno
mov
adc
mov
jle
inc
out
inc
les
orl
insb
sub
subl
test
sbb
out
mov
test
testb
addr16
pop
popa
push
js
jl
stc
xor
push
fadds
gs
xchg
inc
add
add
adc
sti
push
push
xchg
scas
loopne
push
adc
incb
mov
push
or
addb
or
ds
popf
add
xor
stc
jmp
mov
add
stc
or
mov
jmp
andb
loop
ret
jl
pop
test
add
add
add
mov
std
in
mov
jmp
or
push
jmp
add
push
mov
ds
idiv
push
inc
repz
pop
mov
mov
push
sub
testb
mov
and
cmp
mov
addb
fdivrp
in
mov
and
dec
lea
nop
sbb
lock
push
or
xorl
add
or
add
outsb
scas
cld
lea
cmp
ja
movsw
cmpl
sub
pop
inc
out
icebp
and
mov
aaa
push
dec
xor
mov
push
or
lds
xor
pusha
ret
jl
xchg
sti
cmp
sbb
inc
lret
or
ds
or
ret
dec
xor
incb
icebp
pop
and
mov
cltd
lock
ja
mov
push
or
loopne
mov
fucomip
mov
divb
xor
xor
movsb
inc
adc
mov
push
adc
jge
xchg
lea
rcrb
xor
ret
mov
xor
shlb
mov
mov
lock
push
jge
loopne
or
mov
into
ss
imul
fidivrl
or
add
data16
subb
jmp
orb
outsb
or
lods
or
jp
inc
lock
icebp
rdmsr
jmp
sahf
or
or
jmp
sub
cmc
cmp
push
inc
sub
mov
push
loopne
and
popa
loop
aaa
jp
icebp
or
or
cmc
mov
mov
jecxz
mov
pushl
ror
pusha
aaa
cmc
fbstp
enter
fs
nopl
and
xor
addl
pop
je
test
imul
mov
ret
test
pusha
and
xor
xchg
cmc
jmp
jb
mov
and
xor
push
sarl
lock
jge
inc
add
jmp
jg
fs
dec
je
mov
xor
or
dec
mov
fs
or
push
xor
mov
push
dec
xor
clc
jmp
push
outsl
jmp
jmp
and
mov
add
mov
movzbl
push
shlb
or
add
mov
pop
je
jg
aam
mov
sbb
add
icebp
cmp
adc
jb
cmp
dec
sar
jmp
pop
ret
add
add
jne
cmpl
adc
sti
mov
adc
push
xchg
out
jmp
cmp
dec
adc
mov
adc
fdivr
es
ljmp
scas
es
mov
adc
push
or
sbb
pusha
jno
lret
inc
arpl
add
mov
movb
enter
or
add
sub
ss
loop
push
rol
in
jmp
push
outsb
xor
xchg
jg
loopne
add
adc
push
add
add
rol
add
fcompl
xchg
fisubrl
add
jmp
cmp
and
pusha
incl
adc
repnz
adc
mov
add
jb
mov
cmp
add
add
inc
inc
lods
cmp
in
loop
fwait
lods
push
jmp
je
lock
add
dec
test
mov
clc
cld
adc
mov
pusha
test
pop
add
adcb
mov
push
jl
or
dec
and
dec
mov
popf
orb
cs
fs
xchg
mov
adc
cmp
inc
lods
cmp
fsubrs
les
jp
lret
and
ja
dec
pop
adc
insb
out
arpl
push
mov
adc
or
pop
std
aas
and
jne
ret
or
ret
popa
jl
adc
mov
incl
mov
cs
add
inc
pop
xor
add
xor
xor
or
in
shrb
dec
outsb
push
xor
jb
mov
jle
das
and
sti
xor
les
mov
and
sahf
add
sahf
cmp
jno
or
add
cs
xor
adc
and
pop
lock
repnz
je
fsubrs
je
cmp
mov
test
and
pushl
cld
sbb
jmp
or
jno
pop
or
and
jo
lock
fcmovu
je
loopne
aam
push
mov
add
lock
mov
jg
add
jg
dec
pop
je
insl
jb
or
andb
rorb
cmpsl
ret
jmp
push
aas
cmp
pop
sbb
pop
aas
adc
nop
les
test
inc
in
jmp
mov
mov
mov
sbb
jno
pop
pop
rcr
jbe
jo
pushf
mov
mov
nop
inc
pop
push
imul
adc
loope
pop
stos
mov
xchg
dec
incl
push
lock
adc
mov
mov
les
and
lcall
or
jo
jno
dec
call
add
aam
and
adc
adc
jg
pusha
ljmp
push
bound
push
lcall
xchg
es
mov
or
and
sbb
push
mov
fnstsw
fsubrs
and
cmc
icebp
sbb
icebp
adc
add
sub
and
add
and
and
aaa
incl
mov
mov
fidivs
sub
cld
fistpll
sub
jo
sub
or
hlt
adc
xchg
icebp
ja
mov
ret
cltd
or
mov
mov
fistpl
test
mov
hlt
add
icebp
adc
repnz
lock
adc
or
inc
ja
pop
or
jl
fdivs
or
mov
adc
icebp
sbb
std
dec
sub
hlt
add
imul
js
mov
jecxz
pusha
adc
cmovno
dec
pop
mov
inc
mov
arpl
mov
add
rclb
sub
scas
test
je
dec
mov
mov
dec
and
addl
or
add
jmp
push
es
shll
cld
js
movsb
mov
les
xor
mov
adc
stos
pop
dec
out
adc
jne
or
xchg
fs
push
imul
lock
mov
sarb
add
pop
jl
repnz
mov
jg
imul
jg
push
push
outsb
mov
push
push
je
and
jmp
pop
pop
sbbb
push
ljmp
pusha
or
fwait
push
add
pop
mov
xor
add
lods
pop
cmp
add
jb
adc
jl
fisttps
ja
mov
lds
mov
jne
test
jl
mov
in
mov
pop
xorl
and
in
pop
pop
adc
outsb
mov
shl
and
pop
or
add
daa
dec
andb
int
pop
mov
or
sbb
xchg
push
push
cmc
add
or
sbbb
bnd
cli
or
addl
fldt
cmc
addl
test
and
cmp
fucomip
sub
push
test
and
les
rcll
pop
test
sub
inc
popf
or
ret
add
push
movb
mov
ret
sub
sub
ret
dec
repz
mov
mov
jmp
push
clc
andl
pop
rolb
adc
into
in
jmp
inc
xchg
push
jp
call
add
lret
adc
jg
mov
test
nop
fs
inc
xchg
imull
rcll
adc
xor
xchg
adc
mov
movsl
mov
push
cmp
enter
aaa
jno
xor
dec
jo
cmp
add
and
ret
lock
rorb
sbb
lds
add
jmp
push
mov
pop
imul
or
mov
pop
and
test
and
shlb
push
rolb
and
mov
mov
adc
xchg
clc
add
xlat
lds
fildl
inc
sbb
inc
cld
outsl
or
enter
roll
enter
mov
rorl
loope
addb
repz
add
dec
je
add
mov
sbb
rep
imul
inc
and
icebp
inc
test
arpl
add
jne
rolb
or
or
jb
rcr
inc
adc
mov
aaa
or
lcall
inc
testl
jne
shrb
push
rcll
push
mov
arpl
push
dec
stos
push
icebp
pusha
orb
addb
fisttps
mov
test
loop
filds
loop
sbb
ljmp
add
inc
lock
cmp
lods
aam
int
ret
into
jbe
fcmovne
scas
ljmp
cmp
dec
add
mov
movsl
mov
jbe
adc
cwtl
adc
push
loopne
mov
pushf
xchg
xchg
shlb
adcl
pusha
addl
or
out
add
lcall
adc
sbb
shl
in
add
add
fistpl
call
pusha
push
movsbl
jl
call
cmpsl
mov
addb
out
outsb
mov
insb
pusha
xchg
andb
or
and
sbb
or
std
pop
orb
jne
inc
enter
xchg
adcb
pusha
or
add
sub
mov
jecxz
adc
psubsw
push
je
subl
ja
jle
jl
adc
inc
movsb
and
outsb
pop
push
sti
popa
inc
jmp
mov
fdivr
pop
adc
and
fadd
aad
fmull
xor
sti
bound
cmp
imul
adc
mov
jg
jbe
andl
add
outsb
or
cli
gs
je
fisttpl
or
push
nop
bound
mov
or
lock
mov
pop
or
pusha
and
xor
push
inc
or
push
and
pusha
pop
cltd
push
pusha
mov
out
jmp
loop
imul
in
or
jmp
mov
lret
or
ret
add
inc
push
mov
add
xlat
popa
jo
mov
sbb
xor
inc
or
loopne
mov
xchg
pop
or
and
ljmp
xchg
fwait
loopne
stos
clc
in
ret
xchg
sub
loopne
adc
add
shr
jle
add
daa
loope
pop
add
pushf
and
push
and
out
and
push
add
mov
fidivs
dec
out
mov
fcmovu
hlt
fcomps
adc
xor
leave
mov
pop
or
inc
idivb
add
ss
call
lods
scas
nop
push
dec
pusha
cli
ss
popa
inc
cli
and
or
cltd
adcb
jg
jl
cmp
jae
aam
pop
add
add
popa
in
add
jae
xor
inc
dec
imul
pop
pusha
pop
fdivrp
adc
inc
outsb
shrb
nop
lock
pop
xlat
out
call
loope
inc
or
orl
cmpsl
call
cmp
or
loopne
stos
mov
ja
jg
pop
sbb
jmp
pcmpgtd
mov
and
testl
mov
movsl
arpl
loopne
adc
push
shl
addr16
mov
das
push
out
lock
in
jg
pop
cld
cmp
or
icebp
mov
or
mov
insb
pop
or
and
push
roll
divl
add
pop
adc
and
dec
cmp
mov
cmp
push
sub
mov
das
lods
dec
ret
in
add
push
mov
push
sbb
add
movsl
lods
pop
sbb
xor
add
les
je
xor
xor
xor
lock
mulb
push
cmpsl
sahf
test
in
sbbb
sub
fdivr
jmp
push
fucomip
jge
inc
fisttpl
lcall
lock
sub
int3
mov
pop
testl
mov
add
add
in
aaa
mov
stc
jp
mov
pop
push
pop
cld
mov
xor
cmp
cmp
arpl
clc
push
xor
inc
mov
cmp
lret
and
push
sub
in
lock
or
push
or
push
orb
clc
das
push
xchg
jno
xor
pop
jmp
mov
sahf
clc
daa
add
out
xor
sub
test
push
jo
sub
add
sbb
out
sub
and
test
dec
push
insb
jbe
or
adc
push
vpshuflw
pusha
insb
pop
add
decl
adc
das
call
insl
popa
icebp
add
jp
shlb
dec
sub
mov
xor
and
add
jo
dec
mov
and
add
cld
xor
xchg
ror
or
add
adc
jl
or
push
xor
sbb
push
jl
xchg
movsb
xor
cmpsb
imul
add
ja
mov
fdivrl
fcmove
out
sbb
js
test
mov
sahf
adc
jbe
jge
push
sti
lcall
pop
mov
or
out
je
cs
jbe
cmpsb
xor
or
or
pop
jae
sbb
jo
sbb
aam
push
cld
inc
ds
imul
or
mov
push
les
inc
push
add
fidivs
jo
mov
in
xor
outsb
gs
adc
cmp
mov
idivb
incl
mov
adc
xchg
add
repz
mov
ds
mov
mov
and
divl
push
aad
test
pop
sbb
sub
out
pop
call
lock
int3
shrb
imul
push
in
add
push
incb
adcb
mov
push
test
mov
and
pop
cwtl
movl
xlat
xor
lods
mov
pop
dec
or
push
stc
push
jo
push
rolb
xorl
pop
push
mov
std
stos
test
movb
xor
call
add
in
and
add
fcomp
dec
mov
or
adc
lods
addb
and
out
pop
inc
das
sub
dec
stos
or
rclb
mov
inc
add
pop
xor
adc
and
cmc
call
jne
and
jecxz
and
mov
filds
pop
fs
mov
inc
add
pop
dec
mov
jmp
aaa
enter
mov
popa
dec
xor
cmp
jle
clc
push
lock
sub
outsl
or
enter
or
js
adc
cmpsb
mov
shlb
add
or
cmp
test
push
ficoml
dec
or
inc
dec
test
dec
cli
push
imul
push
aad
int3
cmp
mov
add
aaa
mov
jge
mov
xor
dec
cmp
or
push
lock
xchg
adc
push
nop
out
insb
mov
mov
scas
mov
add
mov
test
xorl
ret
mov
push
or
imul
test
jp
jg
inc
xchg
and
ljmp
cmp
lea
sbb
punpcklbw
nop
test
mov
xchg
cmp
inc
add
cmp
ficoml
mov
jmp
xchg
testb
xrelease
fisttps
add
imul
lcall
cmc
push
out
adc
mov
add
je
add
fisubs
shl
imul
xchg
movsl
mov
jno
inc
adc
mov
cmp
pushl
lock
call
inc
imul
cmp
mov
movsb
scas
cli
dec
lock
adc
int3
mov
icebp
in
ja
or
mov
mov
daa
rorl
mov
pop
xor
inc
xor
or
xor
sbb
test
push
cmp
rolb
sbb
push
push
xchg
adc
add
test
out
add
add
adc
pop
jmp
pop
andb
pop
jmp
or
inc
inc
pushf
ficoml
out
nop
add
mov
mov
les
repz
xor
jb
test
call
aas
xor
call
sub
pop
test
add
adc
adc
jnp
sub
or
push
and
sub
xor
in
push
mov
pop
add
jne
call
add
mov
data16
das
addb
push
push
je
jl
sar
sbb
testb
je
lock
rcrb
int
or
pop
pushl
and
sbb
sub
es
nop
xchg
add
pop
call
das
adc
inc
mov
in
dec
push
cmc
mov
jo
arpl
clc
nop
incb
fcomp
ljmp
jb
add
movsl
dec
push
adc
sti
jmp
in
shrl
loop
incb
adc
out
jge
js
out
mov
inc
jbe
sbb
adc
and
test
jo
cmpsb
les
inc
adc
repz
mov
push
dec
scas
mov
pop
jo
out
jb
leave
inc
xchg
mov
dec
dec
mov
daa
jg
push
popa
in
or
icebp
je
jl
clc
fs
rcl
jbe
mov
fidivs
sbb
test
sbbb
and
inc
andl
inc
pop
jb
inc
fisttpl
and
ret
mov
xor
add
push
sub
add
pop
xchg
lods
push
sub
call
push
mov
ljmp
add
mov
add
push
jb
fmuls
ret
cmp
xchg
sarb
jo
jecxz
in
mov
jb
test
or
adcl
loop
push
mov
jne
add
inc
xchg
dec
ret
stos
outsb
mov
data16
inc
daa
pop
and
nop
jecxz
inc
cwtl
ret
and
cmpl
dec
jne
jno
adc
cwtd
adc
jg
call
dec
std
pop
mov
add
adc
add
mov
mov
and
clc
mov
inc
and
and
dec
add
cmp
jle
and
pop
sub
jbe
xchg
mov
cltd
mov
mov
mulb
inc
call
push
xor
jle
mov
push
xsave
inc
dec
adc
and
xor
pop
inc
inc
add
mov
dec
cwtl
popa
add
mov
dec
xor
cltd
addl
jle
mov
pop
inc
jmp
lea
stc
scas
call
xlat
adc
cld
std
call
adc
les
xor
pop
pusha
xchg
mov
mov
cmc
jbe
loop
int3
dec
shlb
dec
call
enter
fiaddl
cmp
jb
jp
lds
movsb
mov
outsb
loope
into
pop
add
push
inc
mov
sbb
jo
in
add
gs
insl
mov
jmp
push
xorl
push
adc
in
addr16
pop
rolb
add
aam
add
sbb
cmp
add
pop
test
pusha
pop
adc
and
push
inc
cs
inc
and
and
and
call
dec
popa
adcl
fisttpl
add
addb
add
data16
push
push
adc
or
cmc
add
and
idivl
in
jb
int3
mulb
sub
mov
and
xchg
addb
rol
adcb
movb
cmpb
sbb
dec
lods
mov
pop
or
and
pop
adc
adc
ss
push
test
push
das
sbb
test
pop
sbbl
add
lock
mov
nop
jmp
mov
pop
pop
push
ss
sbb
bound
jp
andl
mov
add
jb
add
js
cmpb
xor
push
xor
add
xor
or
mov
push
pop
xchg
sbb
popa
cmp
call
inc
andl
daa
pusha
in
mov
cwtl
or
lret
add
and
xchg
pop
mov
sbbl
addb
fisttpl
dec
pop
push
fisubrl
clc
jmp
mov
adc
das
xchg
les
aam
xchg
ror
lea
and
into
bound
int3
mov
fiaddl
push
shl
clc
shrb
pop
or
adcb
add
sbb
lds
dec
add
pop
jne
mov
aam
add
mov
sub
inc
add
jl
ljmp
xchg
aas
jns
adc
pop
mov
mov
jns
push
subb
dec
outsl
inc
jmp
inc
lea
cwtl
sbb
sub
pop
xchg
mov
shlb
adc
loopne
sbb
sub
fsub
lret
cwtl
cmp
fimull
es
leave
inc
rol
cmp
lock
ss
std
ret
sahf
ret
fildl
pop
jb
fadds
or
je
jge
mov
push
dec
push
push
push
push
rol
sbb
add
shlb
cwtl
mov
ja
shlb
xchg
cmc
ss
sub
lret
dec
adc
lock
shrb
clc
push
push
mov
sub
setg
add
cmpsb
push
ljmp
outsb
jmp
pusha
cmp
sahf
add
xchg
loop
pop
adc
lods
ljmp
pop
dec
lret
lock
push
stos
pop
push
sti
popa
dec
jne
or
mov
xor
sbbb
sti
mov
daa
or
inc
lods
pop
pusha
pop
andb
decl
call
arpl
mov
or
orb
scas
jmp
adc
cli
adc
jle
mov
icebp
pop
stos
add
or
adc
jmp
or
add
and
mov
or
loopne
add
loopne
push
popa
fcomp
add
pop
pop
adc
adc
push
fnstenv
mov
adc
je
xor
jl
pusha
test
call
fwait
test
sar
loope
add
add
jb
jmp
dec
lods
and
addl
aas
les
sbbb
adc
cmpsb
inc
add
adc
mov
js
adc
loop
pushl
fiadds
loopne
xchg
cmp
out
mov
outsb
xchg
sbb
std
hlt
std
rolb
mov
push
add
adcl
or
fldt
ja
call
push
cmp
cmpb
or
jge
or
and
pusha
das
into
or
or
test
cmpsl
call
clc
cli
loop
add
xor
incb
aad
loope
jne
push
stos
pop
dec
pop
jne
pusha
cmp
xchg
xchg
mov
add
loopne
pusha
jmp
xchg
add
ss
das
loopne
and
add
or
or
or
ss
cs
xchg
gs
lret
fsubrs
add
ret
arpl
insb
lods
lds
ret
and
mov
sub
push
mov
push
xlat
sub
fsubrs
loopne
movsb
aam
sarl
inc
add
test
enter
adcb
ficoml
ret
push
push
and
repnz
mov
icebp
neg
dec
jbe
dec
ret
sbb
or
jne
push
gs
movsb
mov
ror
xor
and
push
push
lock
mov
inc
add
add
inc
mov
add
pusha
popa
mov
insl
or
mov
sti
int
ds
aaa
mov
xchg
subb
lcall
mov
shlb
pop
jge
dec
mov
sub
mov
adc
xor
enter
subl
adc
or
mov
sti
data16
jmp
cmp
and
sbb
mov
pop
cld
mov
sti
xor
pop
and
sbb
test
aam
sub
add
jae
es
sti
jne
inc
pop
dec
sbb
jge
xchg
pop
cmp
test
popa
mov
ret
add
xchg
fildll
xor
inc
rorb
mov
push
int
ljmp
cmp
ja
xchg
mov
rol
jb
out
pop
data16
std
pop
pop
add
ret
fiaddl
test
test
test
inc
test
insb
or
add
xchg
adc
clc
loopne,pn
testb
fdivrp
add
mov
pusha
or
lds
popf
xor
lds
inc
es
inc
adc
adc
xor
movsl
cmp
jmp
mov
pusha
mov
lea
jb
incl
repz
push
lea
add
pop
pop
cmpb
jb
insb
and
add
add
cli
xchg
mov
lods
fbld
mov
lock
mov
add
pop
xorl
and
icebp
add
sti
mov
in
call
adc
movb
jo
adc
hlt
cmp
pop
mov
ret
xchg
cmp
jg
clc
xlat
dec
jo
cmpb
call
mov
jo
jo
adc
cli
pop
jo
andl
cmp
add
das
pop
mov
add
push
aam
add
mov
mov
inc
into
clc
jg
subb
js
or
fcoms
leave
aas
mov
es
mov
iret
pop
mov
pop
mov
xchg
add
ret
inc
insb
jo
sub
dec
jbe
jge
xor
outsb
sbb
xor
in
nop
add
mov
lock
in
adc
pop
mov
or
out
push
add
fldt
cmp
inc
dec
sti
or
mov
push
jo
test
and
push
cmp
pop
push
hlt
pop
adc
fimuls
push
andl
cmp
divl
push
jl
add
mov
je
xchg
ret
lock
jp
dec
scas
pop
loope
inc
mov
pop
xchg
adc
jp
lcall
leave
inc
push
mov
dec
movsl
call
lock
lods
sub
shrl
loopne
adc
cmpl
pop
jle
bound
add
adc
leave
inc
or
mov
push
or
and
and
mov
repz
jecxz
or
jae
sbb
xchg
lock
push
adc
lret
loope
hlt
jo
jae
dec
xor
jo
shll
pushl
or
pmaddwd
pop
jae
mov
mov
dec
dec
dec
lea
and
push
and
cmp
adc
pop
fidivl
dec
dec
add
inc
ljmp
sbb
add
inc
jle
insl
or
lock
xor
push
pop
pop
xchg
pop
cmp
adc
call
add
push
fsubrs
sbb
push
int3
or
pop
push
sub
cwtl
add
shlb
mov
lock
inc
mov
cmpsb
movsl
push
xchg
mov
test
or
push
lods
sub
inc
fwait
pop
pushf
cld
push
scas
hlt
or
mov
add
cs
fwait
or
xchg
and
adc
pop
les
xchg
jmp
push
pop
int3
rolb
lock
rorb
mov
jl
outsb
mov
or
test
aaa
gs
sub
push
stos
ret
inc
jmp
pop
pop
adc
inc
xchg
dec
adc
mov
aad
incb
pop
or
mov
stos
nop
aaa
icebp
pop
loopne
jo
adc
inc
cmpb
call
xor
cvtps2pi
enter
call
pop
add
pusha
insb
ljmp
shr
dec
cmp
mov
lock
mov
cmp
rclb
ds
cmc
hlt
movlps
mov
push
dec
push
das
clc
das
mov
jg
pop
mov
test
je
call
call
inc
mov
fdivl
add
icebp
push
push
icebp
or
xor
pop
inc
mov
pushf
xor
sub
ljmp
adc
xor
jo
mov
push
mov
test
insl
sbb
push
sub
mov
mov
sub
loop
push
nop
je
push
push
out
xor
jne
add
jbe
leave
inc
in
gs
add
adc
shl
cld
call
mov
js
or
rcrl
je
push
xor
ret
adc
test
into
and
addl
pop
adc
add
inc
add
mov
and
int
shlb
testl
mov
adc
pushl
lock
lods
cmp
adc
mov
adc
lods
push
xor
lock
jo
pop
pop
test
iret
out
inc
inc
mov
sti
and
jmp
and
xor
adc
cmp
in
add
add
sbb
fwait
negl
adc
ss
loopne
push
insb
pop
stos
cld
jno
sub
and
call
fsqrt
outsb
pop
mov
fsubrl
clc
mov
ficoml
xor
out
mov
fcoms
fadds
and
cld
xor
mov
sysexit
lcall
mov
lds
mov
push
test
aaa
mov
lods
les
jle
mov
stos
and
pop
push
push
pop
add
adc
insl
ret
cmp
cmp
lock
xor
sub
pop
add
add
dec
push
xor
out
pop
std
dec
cmp
push
jle
jne
cmp
inc
in
push
repz
mov
inc
push
cmpsb
fsubr
repz
add
cmp
and
push
dec
sbb
aaa
inc
jle
lods
pop
call
clc
inc
decl
or
fs
xor
icebp
je
sbb
xchg
lock
hlt
mov
faddl
dec
inc
inc
xchg
jo
test
test
xor
pop
mov
orl
mov
pop
inc
jl
jno
jne
rolb
pop
inc
shl
enter
add
gs
lcall
adc
mov
lock
cmp
dec
jle,pt
jo
jecxz
mov
xor
adc
jne
hlt
xor
mov
imul
mov
je
xor
inc
out
jmp
fwait
inc
adc
incb
cld
mov
lock
inc
mov
xor
and
lret
mov
add
repnz
pop
dec
jp
enter
hlt
xor
mov
push
mov
xor
xor
jno
cli
fmuls
and
inc
xor
inc
push
xchg
xchg
mov
fcmovb
push
mov
jg
inc
mov
aas
xor
mov
xor
and
inc
jbe
adc
mov
andl
data16
mov
adc
adc
fmuls
test
push
sbb
mov
xchg
or
or
push
rclb
or
pop
shlb
mov
adc
sub
inc
adc
jl
push
cli
add
inc
inc
sahf
out
ficompl
pop
push
inc
dec
add
mov
test
adc
adc
and
xor
push
cmp
mov
and
add
xor
add
gs
mov
cmpsl
add
addb
sbb
scas
lds
push
adc
adc
in
lcall
je
fadds
loopne
stc
js
dec
adc
jle
iret
push
mov
rcl
sub
push
inc
dec
push
push
jg
stos
mov
inc
sub
sub
sbbb
push
fidivl
or
push
inc
push
sub
test
loop
sbb
mov
sbb
cmp
pop
jg
inc
push
push
or
mov
imull
adc
xor
lahf
test
mov
sbb
adc
loope
mov
mov
out
sub
mov
pop
jnp
push
push
push
rep
inc
es
and
inc
cli
or
testb
and
adc
add
test
ret
in
sbb
loopne
jle
inc
aam
cmp
cld
lea
mov
in
xchg
jl
es
lods
test
fs
test
add
xchg
push
and
adc
int3
adc
repnz
lret
sbb
and
sbb
cli
adc
push
je
and
inc
sub
push
mov
scas
ret
mov
xchg
rolb
or
test
hlt
add
push
jg
and
rol
cmp
pusha
add
adc
cmpb
ljmp
push
dec
add
aam
xchg
ret
and
mov
movsb
les
scas
cwtl
nop
or
ret
cmp
cli
xchg
decl
int3
cmp
xchg
or
and
jo
lock
cld
xlat
and
adc
xor
jp
imul
inc
je
pop
mov
arpl
enter
stos
cld
test
data16
xor
cmp
shrb
lock
into
add
ret
mov
lods
dec
test
xchg
and
jo
sbb
xchg
pop
pop
push
pop
mov
lds
dec
into
cmp
mov
mov
cmpb
push
pop
shlb
sarl
add
popl
dec
sub
aaa
je
push
sbb
lods
mov
adc
mov
pop
push
push
into
int3
ret
cmpsb
push
add
jb
cwtl
pop
add
or
add
xchg
inc
out
jne
push
fcoml
test
add
shlb
or
push
xor
mov
outsb
sub
shlb
test
lahf
enter
or
cld
scas
testb
aad
adc
adc
ret
push
or
shrb
rcll
popa
adc
inc
mov
xchg
repz
idivb
dec
ret
push
cld
add
pop
call
repz
ret
sbb
loopne
enter
dec
test
sahf
hlt
adc
stos
push
jle
loopne
add
xchg
fsubrp
neg
filds
add
xor
add
enter
xor
insl
data16
cs
jecxz
jo
loopne
adc
inc
mov
inc
sub
inc
add
hlt
clc
lds
idivb
loope
push
push
and
bnd
dec
rclb
shlb
sbb
popa
push
and
pop
movsb
and
shl
sub
cwtl
ss
test
bound
push
hlt
and
sub
sbb
cs
and
icebp
dec
dec
fwait
ds
pop
fcomps
adc
xor
pop
xor
and
addr16
sub
lods
ds
push
sbb
cmpsb
pusha
push
add
push
aas
add
sbb
push
push
andl
sub
or
shlb
or
fmull
or
insb
xchg
aam
cmp
dec
ficoms
test
fs
pop
mov
ss
shlb
pusha
push
loope
xchg
movb
push
mov
ljmp
fwait
add
sub
inc
test
loopne
shlb
call
jo
orb
pusha
push
or
in
jl
cmp
and
mov
mov
inc
push
or
addl
dec
add
pusha
es
insb
pusha
int3
adcb
aam
popa
xor
sub
andl
popa
subl
inc
test
mov
add
add
xchg
add
mov
dec
std
roll
sbb
fdivr
inc
push
or
fidivl
in
adc
test
bound
loopne
popf
cwtl
and
xchg
inc
push
push
repnz
pop
push
cmp
pushl
mov
adc
call
subl
fcoms
or
jnp
pushl
lea
loopne
out
dec
call
mov
and
xchg
addb
andb
xchg
add
clc
or
cmp
add
loopne
hlt
loopne
lods
call
ret
ja
clc
xor
mov
xchg
xchg
or
add
cmp
hlt
cmp
add
adc
cld
mov
cltd
jmp
loope
movl
push
push
call
nop
lock
fs
add
mov
outsl
pop
or
lods
or
loop
push
cld
ror
std
incl
je
add
inc
push
push
pushw
add
push
mov
push
fs
or
sub
sahf
loopne
add
aas
call
loopne
loopne
inc
out
lea
das
push
xor
gs
repnz
arpl
or
aaa
shr
sti
jno
loope
inc
or
add
jg
popa
mov
test
fadd
mov
push
mov
dec
rcrl
jb
sbb
fistps
sar
ret
ja
xor
mov
ficoms
orb
rcll
mov
xor
ret
push
dec
adc
push
popa
mov
push
roll
xor
shlb
sbb
fisttps
lret
cld
into
adc
std
jg
add
add
lods
loope
add
bound
sub
jp
mov
bound
or
or
jmp
add
xor
lret
add
cwtl
jp
lock
or
fimull
xchg
dec
adc
adc
pop
fiaddl
clc
iret
ljmp
pop
notb
push
bound
lock
adc
cld
je
add
mov
mov
jno
filds
add
lods
cmp
or
pop
repnz
adc
jb
jbe
cmp
aaa
dec
test
xor
mov
nop
mov
mov
pusha
add
cmc
cmp
ds
sub
icebp
scas
test
lea
incb
mov
xor
inc
pop
andb
or
dec
or
pop
dec
insb
dec
cs
mov
mov
adc
push
cld
mov
xor
jp
mov
xor
movsb
hlt
or
and
sbb
sbb
lods
push
cmp
test
shrl
pop
fildll
call
add
popa
xchg
aad
sbb
divb
rcl
into
pop
pop
in
sub
aas
mov
or
mov
push
fs
sbb
adc
pop
cld
ljmp
div
pop
jecxz
pop
xor
add
xor
jg
dec
sbb
and
fs
dec
mov
add
push
jl
xor
lock
cs
lock
add
or
call
leave
ret
jg
test
push
adc
add
lea
movsl
aaa
std
inc
or
xor
add
jo
inc
cli
push
push
push
pop
repnz
adc
call
mov
pop
cmc
mov
pop
clc
xor
cmp
add
call
xor
cmpsb
mov
sub
cmc
pushl
sub
jmp
test
call
pop
add
mov
mov
addl
call
insl
loope
jmp
cmp
iret
mov
out
or
jbe,pt
add
dec
mov
dec
jle
cmp
sbb
add
pop
add
sub
lock
add
mov
lock
scas
add
fisttpl
rclb
sti
jle
mov
add
cmp
add
add
lods
mov
and
jo
cld
notb
pop
scas
inc
jl
cmp
shlb
pop
jbe
outsl
lods
mov
xor
add
pop
and
add
mov
jmp
and
mov
jl
lods
bound
and
add
pop
mov
cld
jge
or
jmp
jo
test
shlb
inc
imul
test
fisubrl
adc
dec
loop
cmp
ret
mov
mov
orb
mov
in
and
cmp
xor
jg
int3
sbb
xor
jno
dec
add
ret
xlat
xor
rcrl
mov
mov
repnz
inc
popa
outsl
xor
add
js
loopne
loope
mov
or
pop
hlt
movq
mov
hlt
jne
or
xor
add
jbe
add
adc
lcall
inc
or
dec
add
ss
cmp
mov
mov
push
add
inc
push
pop
push
cmp
clc
or
pop
jl
mov
rcrb
lock
cmpl
sub
scas
jno
mov
jno
stos
loope
cmpl
or
pop
repz
jl
inc
inc
mov
fcoms
lea
and
stos
push
adc
call
lods
movl
movsb
xchg
push
lock
add
mov
cmp
inc
add
cmpsb
fiadds
insb
dec
leave
cmp
push
aad
mov
push
push
jo
pop
push
lock
mov
push
imul
sub
or
dec
pop
and
mov
inc
loopne
and
andb
inc
xor
mov
jmp
rcll
cmp
adcb
jmp
inc
repz
sub
inc
push
jb
incl
scas
cli
jne
call
or
insb
call
dec
and
jb
mov
rcrb
mov
cmp
stos
mov
inc
xor
adc
testb
xor
mov
and
repnz
sub
xor
push
shr
cwtl
fistpll
es
push
je
lock
push
loopne
ja
lea
add
cltd
ss
xor
nop
loopne
inc
inc
pop
push
cli
and
add
stos
ss
mov
repz
hlt
push
jo
scas
mov
mov
je
jle
sbb
mov
lock
pusha
xchg
and
lods
mov
sub
push
aaa
and
stos
das
test
or
lock
inc
mov
pusha
add
popf
shl
stos
mov
fistl
mov
mov
jae
jle
dec
inc
xor
push
clc
data16
jl
jge
fwait
mov
loopne
ficomps
xor
add
sbb
dec
jp
je
push
sbb
and
push
xor
inc
cmp
add
lea
dec
clc
adc
lock
adc
add
scas
xchg
cmc
and
sub
push
adc
ds
jne
xor
cs
xor
mov
xor
or
cwtl
push
ljmp
hlt
cmp
cmp
addb
adc
jbe
shl
sub
push
push
push
and
rorb
mov
mov
and
push
jne
movsb
add
dec
shrl
daa
mov
data16
push
push
lret
lods
test
jg
ss
cmp
jae
cld
icebp
inc
push
push
push
sub
lock
pop
mov
pop
fidivrl
and
jg
in
inc
pop
jne
pop
out
mov
mov
or
jg
jb
sbb
lock
nop
pop
push
jp
mov
adc
ud2
in
and
xor
add
hlt
stos
add
rorb
lock
mov
ljmp
inc
jo
je
push
mov
mov
lock
and
add
add
jnp
pop
xchg
shll
mov
pop
test
xor
lret
ljmp
push
andb
repz
arpl
in
ljmp
pop
add
fwait
pusha
incl
test
lahf
call
and
inc
jo
std
filds
adc
xor
ret
lock
mov
xor
arpl
push
push
add
sub
push
mov
std
pop
mov
xchg
dec
xor
and
divb
scas
mov
insl
xor
and
stos
push
call
inc
and
add
jbe
outsl
sbb
test
insb
test
sbb
push
inc
mov
ds
dec
mov
scas
or
scas
fwait
adc
xor
data16
sbbb
pop
add
xchg
or
add
fsubrs
aam
add
add
inc
push
popa
stos
clc
pushl
repnz
and
sbb
fistl
pop
loopne
sbb
sbb
es
dec
jbe
inc
leave
pop
ret
sbb
add
push
push
push
mov
fsubrs
add
scas
jbe
aad
pop
push
push
sbb
pop
mov
add
adc
add
cmpsb
and
cltd
mov
and
sbb
or
daa
dec
fdivs
jl
push
sbb
mov
adc
clc
push
add
mov
or
pop
sub
cmpb
pushf
orl
adc
mov
sbb
lea
and
pop
test
test
pop
orl
iret
and
call
neg
pusha
add
sbb
dec
and
lock
push
mov
add
cmp
mov
mov
add
and
pop
faddl
xorb
push
add
adc
andl
pop
pop
push
test
fwait
shrb
pushf
addb
pop
call
xchg
or
adc
and
push
push
fcomps
addr16
cmpsb
add
outsl
sbb
dec
pop
in
inc
adc
mov
aas
enter
inc
pop
dec
xor
leave
and
xchg
rolb
and
dec
sbb
lock
jmp
and
in
xchg
jo
jbe
mov
push
pop
cli
sarb
or
sub
nop
sbb
div
inc
ss
ret
ss
shlb
sbb
enter
movsl
div
sub
jne
add
js
jg
mov
lods
adc
call
sbb
dec
jle
mov
je
add
mov
push
or
addb
jne
jg
rclb
fisttpll
lcall
cmp
add
jnp
xchg
cmp
outsb
add
sub
pop
dec
push
orl
mov
add
es
mov
cmc
ljmp
cmp
or
mov
xor
dec
sub
xchg
scas
nop
je
stos
enter
roll
int3
push
jg
call
sbbb
pop
shrb
fidivl
loope
mov
sbb
fiadds
in
push
pop
les
dec
popa
push
add
adc
sbb
ss
loopne
push
js
in
mov
loopne
add
enter
dec
ljmp
push
jl
add
adc
xchg
addl
inc
sub
inc
in
icebp
and
mov
jmp
jmp
adc
sbb
jle
pop
push
loope
mov
sahf
sub
addb
and
inc
insb
jo,pt
jmp
and
in
inc
nop
push
xchg
dec
and
adcb
loop
aam
inc
clc
rcl
ljmp
fdiv
add
push
mov
sti
stos
insb
movsb
add
add
cmp
adc
adc
dec
mov
xor
or
andb
shrl
pop
pop
and
push
add
mov
ljmp
pop
outsb
push
adc
mov
mov
xchg
inc
xlat
mov
xor
or
lds
test
and
dec
add
popa
push
mov
or
shl
mulb
mov
dec
sbb
popa
or
pop
push
int3
xor
jg
loope
loopne
cld
pusha
imul
pusha
xor
xor
xchg
pushf
or
mov
inc
clc
pop
call
andl
mov
and
dec
inc
arpl
stos
mov
pusha
add
sti
sub
ljmp
into
adc
mov
adc
in
mov
es
mov
pusha
cmp
inc
test
jmp
dec
and
pusha
sbb
adc
loope
sbb
inc
and
xchg
inc
add
mov
in
add
xchg
cwtl
loop
add
add
jecxz
movsb
dec
insl
or
add
loope
mov
pop
je
mov
movsb
and
mov
mov
adc
add
fsubrs
pop
dec
push
loope
adc
add
pop
sti
loopne
popa
pop
push
filds
push
push
pusha
and
add
ja
push
cltd
cmp
mov
dec
pop
mov
loopne
mov
or
add
add
mov
sbb
sub
pop
cmpsb
jl
fistl
mov
outsb
mov
xchg
pop
arpl
push
dec
add
ret
dec
pusha
push
add
push
fidivrs
push
pop
jge
lock
push
addb
mov
bound
inc
cli
jecxz
xorl
decl
outsl
lods
pavgb
mov
or
and
sbb
js
or
lcall
cs
sub
push
std
mov
cli
shlb
push
adc
or
int
lods
inc
cmpsb
inc
inc
ret
dec
cmp
shll
inc
fcomps
sub
xchg
xor
and
ja
mov
sbb
adc
aas
inc
inc
stos
sbb
gs
sbb
movsb
lods
adc
jne
mov
push
push
imul
call
ret
inc
sub
push
lret
adc
inc
xor
fildll
push
add
pusha
and
jmp
int
mov
mov
sti
jne
out
bnd
push
movl
les
loopne
dec
sub
clc
sub
lahf
sub
popa
popa
sub
push
dec
test
mov
pop
in
and
loope
add
inc
add
call
aam
jg
add
call
orb
call
add
ja
fmuls
idiv
cmp
cmp
pop
and
subb
adc
clc
push
call
fsubl
dec
mov
pop
arpl
sbb
add
push
jg
mov
push
pop
pop
xchg
pusha
mov
or
nop
xchg
or
add
push
lods
add
loopne
in
add
es
mov
jle
push
or
or
jp
add
mov
cmpsb
add
xchg
mov
loop
add
jb
push
inc
and
fcomi
push
scas
and
int3
adc
adc
mov
pusha
shrb
adc
es
jp
jl
add
pusha
xchg
or
repnz
adc
push
jge
call
mov
pop
mov
pop
mov
hlt
or
ljmp
or
push
push
nop
jbe
add
test
in
test
sbb
or
mov
xor
jg
jg
add
xchg
dec
iret
mov
cli
out
push
sbb
ljmp
out
xor
incb
shl
lock
cmpsb
insb
cmp
clc
psraw
jbe
sub
xchg
ljmp
cmp
call
mov
sbb
insl
push
mov
das
push
mov
testl
inc
xchg
movsb
add
dec
dec
mov
daa
xor
mov
sbb
int3
push
jmp
mov
or
sbb
aaa
movsb
lock
loop
inc
sub
fs
mov
int3
jno
add
jp
or
and
aaa
jae
fbstp
outsl
pop
sub
repnz
xor
mov
adc
jg
insl
sti
inc
jecxz
ja
adc
jmp
add
or
leave
jmp
lea
lahf
mov
test
in
push
test
incb
adc
pop
xor
outsl
shlb
sbb
ljmp
fst
jne
mov
outsb
dec
dec
and
push
lods
jo
lods
mov
sbbb
outsl
add
nop
rolb
cmp
lds
in
jbe
inc
jno
scas
xor
adc
fdivrs
fidivrl
inc
pop
sbb
or
or
std
call
add
push
jno
push
lock
mov
add
mov
and
push
pushf
sbb
lds
leave
lods
and
cmc
push
dec
xor
mov
and
cmp
jmp
call
cltd
jp
andl
hlt
xor
push
mul
jo
mov
cmpsb
pop
inc
xor
lock
addb
add
out
add
fmuls
dec
sbb
pop
mov
mov
pop
ja
shrb
lea
icebp
adc
js
xor
test
hlt
mov
ljmp
xchg
mov
xor
or
adc
push
bnd
jo
add
mov
xchg
mov
cli
loop,pn
cmp
outsb
add
imul
hlt
add
sbb
xchg
cmp
cld
fdivp
clc
mov
pop
or
insb
cmp
es
sbb
pop
adc
adc
shl
repz
nop
pop
idiv
mov
roll
and
xor
or
leave
insb
test
add
add
xorb
pusha
je
push
xor
dec
sbb
lcall
or
xlat
xchg
addb
add
std
pop
push
dec
lock
dec
fwait
mov
sti
out
add
sub
add
xchg
mov
inc
xor
and
cli
filds
xor
pop
lahf
jno
cli
add
mov
inc
push
leave
out
pop
mov
pop
int3
iret
xor
pop
inc
pop
cmp
dec
sbbb
sbb
cmc
add
add
sub
jne
sub
mov
stc
sub
add
jmp
push
dec
jo
push
jg
add
sub
fisubs
mov
xor
dec
xor
je
fimuls
jle
add
mov
hlt
xchg
leave
mov
sbb
push
lock
movsb
push
pop
pop
ret
in
lea
fdivl
dec
repz
dec
xor
or
and
dec
ja
xor
sub
scas
pop
ret
je
jmp
sarb
sbb
mov
loopne
cltd
push
pop
add
inc
sarb
sub
add
xor
adc
mov
mov
icebp
arpl
pop
inc
mov
dec
add
shll
ret
push
jb
pop
add
add
je
sub
cmp
add
push
mov
jbe
ret
mov
stos
ja
and
mov
lds
cmp
inc
cmp
icebp
mov
jle
mov
lock
aam
cmp
mov
es
out
add
mov
and
cmpb
ss
add
adc
xor
enter
scas
xchg
jb
mov
jl
iret
jb
cmp
jnp
push
mov
mov
sub
fiaddl
stc
adc
xchg
imul
xor
ret
add
sbb
jbe
sbb
dec
jmp
mov
mov
mov
adc
mov
add
ja
xchg
movsl
add
repz
aas
push
nop
mov
xor
lock
mov
jl
scas
jb
or
mov
pusha
or
inc
stos
lea
push
xor
sahf
mov
sub
lea
pop
clc
cmpb
mov
xor
or
lock
rcrl
adc
je
lret
lock
pop
pop
push
clc
lock
sbb
dec
push
decb
mov
add
jne
pop
call
mov
roll
enter
cmp
and
push
mov
dec
mov
push
push
inc
mov
sub
lock
mov
jo
sub
jo
sub
cld
pop
mov
push
add
les
jne
mov
out
inc
pop
or
xchg
push
jp
push
test
cld
push
mov
dec
pop
lds
mov
add
jl
ret
adc
ds
mov
cmc
filds
adc
pushf
je
xor
loop
mov
loopne
call
lds
xchg
sbb
lahf
inc
add
adcl
jecxz
mov
pusha
jp
and
sbb
mov
mov
fs
scas
sub
pop
cmpsb
icebp
or
lock
and
call
sub
and
cmp
test
fisttps
adc
jo
ljmp
cmp
jmp
pop
dec
pop
mov
or
sub
addb
or
xor
mov
dec
mov
mov
add
dec
js
popa
mov
and
pop
jge
sub
pop
and
cli
pop
in
sbb
scas
inc
in
ds
addb
push
pusha
sbb
add
adc
pusha
push
xor
pop
adc
divb
int3
loopne
push
sbb
mov
add
iret
add
xor
add
es
fcoms
push
test
xor
cwtl
call
rcr
adc
in
push
mov
clc
jae
sub
push
lret
lcall
loopne
jno
dec
sbb
push
js
add
add
inc
and
add
fisttps
icebp
adc
adc
insl
je
movsb
call
sub
in
cmp
je
in
jl
das
je
inc
das
fcmovu
stc
pop
les
cmpsb
lock
rolb
pop
mov
ss
sbb
or
std
mov
mov
jno
fimull
std
add
aad
mov
dec
mov
clc
push
mov
adc
jp
mov
out
enter
adc
xchg
xor
popa
push
or
js
out
icebp
lods
pop
sbb
adc
sub
or
sti
jne
inc
xor
nop
adc
adc
mov
sbb
mov
add
xchg
add
call
push
add
mov
adcb
mov
addb
adc
out
stos
jg
mov
adc
rorb
xchg
fs
sbb
pushf
and
pop
lea
rcr
fistps
mov
or
adc
xor
and
mov
jle
in
inc
push
jnp
js
or
je
dec
sahf
sub
cmpb
add
shlb
subb
add
ja
cld
cvtps2pi
pop
lea
mov
lret
mov
or
cmpl
jnp
inc
insb
loopne
mov
jp
adc
addb
pop
pop
inc
andb
jl
push
sbbl
push
pop
xor
adc
ret
enter
and
aam
and
js
pop
lods
cli
movsb
xorb
cmpb
inc
lock
pushf
or
or
mov
out
shll
mov
orb
adc
push
insl
pop
fs
orb
test
xchg
pop
xlat
push
shll
lea
call
out
sbb
sbb
or
rorb
jle
hlt
in
imul
addr16
push
adcb
mov
outsb
cmp
rolb
notb
pop
add
ja
push
xchg
mov
nop
and
jle
sbb
push
xor
je
xor
push
int
sbb
stos
push
hlt
adc
mov
shlb
js
pushf
data16
je
mov
bound
rolb
insb
shrb
jmp
lret
lods
jg
mov
dec
negl
shrb
out
pop
gs
and
mov
rorb
push
lods
dec
or
push
mov
add
pop
add
scas
add
dec
das
or
dec
mov
aam
filds
test
shrb
fcompl
cmp
mov
jp
daa
roll
aam
and
das
or
fildl
push
push
lea
jmp
ret
popf
enter
dec
jae
rolb
inc
inc
rolb
dec
sbb
arpl
add
test
rolb
jmp
jp
rclb
jae
loopne
add
cld
rcrb
out
and
pushf
push
jp
adc
cmp
shlb
ret
call
xor
pop
sbb
stos
leave
ret
cs
mov
pop
lods
fmulp
int3
xor
push
les
or
mov
add
jmp
add
rcl
pop
ljmp
sbbb
ja
add
mov
cmpb
fs
nop
int3
pop
xor
xchg
xor
jbe
xorb
add
cld
lea
adc
and
jmp
lea
and
jl
call
push
jo
lods
out
fisubs
add
push
inc
test
sbb
js
imul
scas
xor
sub
nop
stos
cli
sbb
mov
cmp
das
adc
into
lock
xchg
popa
aam
fldt
stc
ljmp
loope
ljmp
in
rorb
push
outsb
or
jne
test
pop
add
push
add
or
aaa
add
call
pusha
and
loope
shlb
stos
aaa
push
jmp
bound
pop
mov
dec
sub
jne
xor
jmp
push
xor
jmp
sub
dec
adc
loopne
in
mov
pop
dec
mov
dec
mov
incb
repnz
lret
loop
adc
inc
jbe
add
add
aam
idivb
cmp
clc
mov
inc
push
push
lock
adcl
adc
sahf
pusha
adc
je
shr
mov
add
xchg
test
jbe
lods
push
sbb
jecxz
or
jp,pn
mov
sub
andl
push
push
lods
push
imul
xor
mov
add
loope
inc
jmp
stos
add
shll
cmpsb
mov
jle
jbe
cld
pop
pushf
and
adc
or
lods
adcb
mov
jmpw
sbb
pop
ret
aam
sbb
scas
add
aaa
aam
sub
outsl
sbb
es
scas
add
jg
adc
je
cmp
jo
cli
push
push
lret
add
iret
dec
andb
mov
push
adc
fnsave
push
or
test
ljmp
jp
out
repz
jg
inc
dec
add
jae
call
add
insl
sti
neg
pcmpeqb
in
idiv
cmp
mov
dec
dec
out
push
js
sbb
mov
fistpl
lret
aam
sub
icebp
mov
sbb
jae
cmp
hlt
mov
js
pop
mov
or
lock
or
fidivl
mov
mov
mov
loopne
cmp
push
pushf
jb
adc
fwait
jle
push
xchg
rclb
mov
or
sub
and
mov
ds
movb
add
orb
clc
popa
sub
jl
adc
stos
test
aam
in
clc
push
scas
pop
fimull
mov
adc
jmp
lods
push
push
push
xchg
inc
shll
inc
jmp
in
les
mov
pusha
push
or
pop
testl
mov
cmp
incl
add
bnd
scas
jne
add
mov
or
sub
int3
push
pop
push
dec
mov
bound
jecxz
cwtl
mov
cli
pusha
stos
add
mov
mov
push
loopne
mov
mov
or
mov
lret
loop
adc
dec
jo
fidivs
call
in
daa
mov
pop
bound
fisttpl
frstor
in
jg
inc
adc
pusha
adc
push
pusha
sbb
jno
stos
and
sbb
jno
decl
mov
cmp
mov
inc
push
xchg
stos
dec
dec
rolb
shll
xchg
hlt
ljmp
daa
dec
sbb
jle
and
loopne
push
pushf
xchg
lock
xchg
or
call
xchg
jmp
and
push
call
add
test
test
insb
inc
push
push
dec
dec
clc
mov
sub
scas
adc
ss
or
cmp
mov
iret
sar
sahf
push
push
jmp
cmp
xor
pusha
add
push
or
cmp
fwait
and
or
iret
xor
push
sbb
sbb
add
jp
jo
xor
and
call
or
ss
push
lods
push
orb
add
addl
push
test
rorb
xchg
adc
inc
or
jo
test
or
dec
dec
mov
scas
adc
cmp
inc
loopne
push
mov
decb
push
push
ljmp
nop
hlt
lock
and
sub
int
mov
pop
cmpl
sub
aam
xchg
inc
and
jno
pop
fistl
or
add
and
dec
in
mov
inc
shlb
add
adc
and
or
sub
adc
pop
repz
adc
add
cmp
mov
loopne
ss
mov
and
or
inc
push
dec
and
or
adc
adcl
dec
or
or
mov
out
push
scas
mov
jo
scas
push
push
loopne
add
lock
sbb
add
pop
add
nop
sbb
xlat
mov
xor
sub
fs
andb
int3
js
or
adc
les
xor
imulb
mov
ljmp
or
mov
dec
in
mov
mov
add
adc
push
sti
arpl
xchg
pushf
aam
or
fdivs
fisubs
in
jp
cld
fildll
or
movl
add
fdivl
rorb
fucomip
inc
in
ret
bnd
cmp
outsb
mov
mov
jo
adc
add
mov
mov
or
inc
lods
insl
jmp
mov
push
cmp
inc
sub
cmp
test
push
cmp
mov
xor
imull
push
mov
mov
ss
inc
orb
mov
enter
xor
shr
mov
push
or
add
push
roll
fcmovnbe
adc
fs
or
jne
hlt
negl
fwait
scas
add
fbld
out
mul
add
jb
push
cmp
ja
xor
add
sub
sub
xor
aam
or
push
mov
fisubrl
jl
add
mov
jno
pop
ret
int3
lods
push
mov
adc
adc
jo
adc
dec
or
decl
imul
push
push
cmpsl
and
pop
movsb
ret
rol
sbb
pop
test
xor
inc
dec
xchg
adc
ret
mov
insb
roll
lock
add
jo
cmp
test
clc
xorl
inc
dec
cmp
aaa
sub
int3
xchg
push
jmp
push
mov
push
lea
test
mov
push
jl
out
xor
stc
jb
je
and
es
jb
clc
sbb
add
cmp
jb
mov
and
mov
popf
add
jg
cmpb
popa
adc
clc
inc
pop
xor
cmp
dec
push
outsl
inc
pop
cmpsb
pop
mov
sub
outsl
add
fcmovnb
call
loopne
mov
stos
stos
aam
andb
shlb
pop
dec
scas
mov
or
sub
add
lock
lock
ljmp
mov
sub
mov
or
inc
dec
fisttpl
mov
or
cwtl
mul
je
sbbl
fdivs
sub
rcll
sbb
loopne
and
pop
jbe
add
mov
aam
cmp
jb
xor
xor
push
shlb
clc
or
xor
inc
mov
mov
mov
cmpsl
cs
dec
sbb
fwait
mov
mov
movsb
decb
pop
push
cmp
movsb
cld
movsl
clc
mov
jmp
push
lock
dec
lock
pop
sbbb
adc
clc
cmpsb
sbb
xor
xor
inc
add
cmpsb
lret
sarb
jmp
stc
jbe
mov
sub
mov
into
mov
push
jmp
dec
mov
test
adc
loopne
jle
je
xchg
cmc
ja
sub
cmpsb
jbe
xor
ret
sbbb
adc
push
add
xor
jo
mov
push
movsl
outsl
divb
mov
push
mov
aad
andl
pop
cwtl
je
jl
je
and
mov
or
jno
adc
lcall
or
sbb
adc
mov
nop
loopne
add
push
and
clc
shll
dec
test
in
jbe
pop
sub
add
test
inc
add
jecxz
inc
negb
rcrb
fimull
add
mov
les
add
cmp
mov
or
xor
subb
inc
fsubl
cs
adc
push
jo
roll
icebp
in
mov
jg
pop
mov
icebp
adc
pop
cmp
jge
shlb
jb
adc
add
mov
mov
mov
cld
pop
aam
fs
je
sbbb
lds
iret
push
add
xchg
push
ss
pop
and
xorl
ja
pusha
mov
and
xchg
jle
push
adc
mov
out
incl
sbb
out
pop
pop
mov
mov
sub
ja
aam
je
mov
xchg
xor
lea
inc
ret
cltd
push
fcmovnb
inc
mov
mov
dec
cltd
or
lods
fcmovnu
mov
pop
popl
jo
and
mov
inc
andl
outsb
ret
mov
dec
data16
jmp
popf
sbb
add
sar
or
sbb
sub
inc
mov
inc
add
xchg
outsb
or
push
mov
fsubrs
xor
push
inc
cmp
call
xor
ss
jl
enter
sbb
pop
xchg
cmp
icebp
push
or
mov
shl
adc
xor
and
jbe
inc
dec
addl
mov
add
inc
cs
cmp
clc
dec
shr
addr16
insb
jno
cmpb
shrb
into
push
cmp
fidivs
or
mov
push
add
stc
clc
enter
mov
or
and
lahf
aas
data16
ret
decl
aam
add
xorb
pop
shrb
cmp
enter
loope
jecxz
stc
fistps
inc
add
push
inc
jo
int3
xchg
add
and
or
mov
xor
push
or
lea
pusha
ret
inc
clc
ja
pop
xorl
push
dec
hlt
pusha
push
xor
mov
xchg
xchg
movl
outsl
mov
mov
cmp
jb
sub
mov
leave
js
aam
mov
push
cmp
sar
add
sarb
push
push
mov
cmp
mov
add
shlb
ds
pop
push
cld
adcb
sub
fsubs
sub
sub
cs
movsb
lea
jge
add
incl
pop
pop
push
pop
fisttpl
dec
insb
add
mov
sub
loopne
pop
dec
mov
sbb
aam
in
pop
test
fxsave
movsl
sbb
add
xchg
cld
roll
shlb
movsl
or
pop
ja
aaa
ljmp
add
loopne
mov
sbb
lret
movb
add
mov
test
std
lods
add
adcb
adc
cmp
add
xor
mov
idivl
adcb
add
push
jl
lea
dec
push
add
cmp
movsb
dec
inc
cmp
mov
andl
xchg
ret
subb
rorl
cmp
mov
mov
jb
xor
inc
and
push
dec
push
lods
inc
sahf
add
jb
insb
or
insb
and
xchg
fs
dec
mov
add
inc
int3
add
insb
jbe
add
in
dec
mov
insl
scas
push
sub
ljmp
jl
or
sub
jbe
adc
dec
inc
lahf
cmpl
or
inc
and
pushf
decl
rcr
or
dec
jo
push
pusha
je
movsb
add
movsb
andl
scas
cs
cwtl
rolb
sub
mov
xor
lahf
into
push
insl
add
test
orb
fsubl
jg
popa
pop
dec
test
addl
cmp
pause
leave
pop
adcl
jg
mov
sbb
ds
push
adcb
ret
xchg
ljmp
rclb
inc
leave
sub
movb
sbb
ret
dec
je
xchg
or
ja
jl
pop
lods
add
sub
movsl
out
insb
cmp
sbb
inc
add
shl
and
insb
adc
xor
aam
mov
clc
lret
ss
sti
pop
sbb
add
fildl
push
dec
adc
mov
rorb
sub
push
push
mov
orb
pop
mov
add
mov
dec
sub
mov
rol
dec
or
pop
shrl
lcall
cmp
mov
inc
fcomip
jmp
xor
ret
dec
mov
pop
dec
inc
adc
inc
data16
push
fcomip
decl
sbb
adc
xchg
lret
or
inc
or
lret
movb
lret
or
stos
je
mov
push
inc
shrl
inc
lcall
push
cmp
and
mov
testb
sha256rnds2
lea
les
inc
sub
cld
inc
out
mov
cli
dec
pop
std
leave
xor
dec
shrb
ror
cmp
int3
xchg
call
pop
out
andb
pusha
pop
stc
pop
inc
mov
int3
sahf
mov
pushf
or
inc
mov
xor
pop
pop
hlt
idivb
pop
pusha
push
lea
inc
lcall
or
hlt
push
pusha
pop
jae
popl
cli
loopne
out
or
aaa
cs
sbb
add
rolb
dec
push
clc
mov
pop
pusha
test
dec
orb
dec
out
add
sub
xchg
ss
icebp
pusha
cmp
repnz
push
sub
rcr
mov
sbb
jb
pop
pop
add
add
dec
data16
sbb
mov
mov
fidivrl
mov
dec
js
test
mov
mov
je
push
jmp
jg
jae,pn
add
xchg
das
sub
ja,pn
push
and
rolb
mov
mov
sbb
add
mov
shlb
jne
in
pusha
adc
mov
jbe
jbe
add
pop
fs
push
js
loopne
subb
cmp
cltd
popa
negb
negb
or
sahf
je
sub
lahf
movsb
shlb
mov
std
mov
push
xor
das
dec
inc
scas
dec
pusha
popa
data16
sub
cwtl
mov
mov
bound
lahf
loop
mov
lock
add
call
inc
or
mov
xchg
mov
adc
aam
pusha
sub
inc
inc
cwtl
mov
ljmpw
and
cs
loop
js
xchg
xchg
sub
add
js
or
or
add
dec
mov
and
push
inc
sbb
mov
divb
sub
cmp
mov
fdivl
pop
xor
rolb
std
and
and
sub
sahf
mov
push
aam
movsl
out
inc
push
pop
jb
or
testb
jg
dec
loop
and
jne
loopne
das
sub
movsl
int3
push
inc
loope
loopne
xor
popa
popf
test
pop
test
loopne
xchg
jno
test
add
add
fcmovb
push
scas
pop
sbb
cmpb
in
loopne
loop
xchg
sar
inc
mov
loopne
push
adc
je
movsb
lods
loopne
sbb
inc
mov
xchg
dec
insl
pusha
cmp
ret
dec
sbb
idiv
orb
ljmp
xor
push
je
loope
loope
ja
add
pop
insb
jecxz
add
push
cltd
mov
pushf
xchg
popa
insl
jb
ljmp
xchg
js
outsl
add
and
pusha
aad
push
pusha
and
rcll
inc
and
incl
xor
addr16
cmc
add
loopne
mov
pusha
mov
je
jno
jmp
jne
lods
or
add
add
mov
dec
adc
inc
loope
test
cld
pop
jo
xor
bound
pop
popa
lcall
popa
adc
jp
add
lahf
cmpsb
add
cmpsb
jo
ret
and
daa
fidivs
insl
jb
aam
test
cli
jl
push
sub
push
outsb
inc
or
ja
xor
adc
cmc
mov
ja
push
shll
pop
push
daa
test
pop
mov
jbe
jmp
or
and
mov
insb
or
jbe
xchg
push
dec
add
push
sub
sub
add
push
adc
adc
add
gs
roll
test
cmpsb
push
movsl
add
add
call
push
push
dec
push
push
dec
movl
add
add
lahf
inc
lods
mov
or
sbb
daa
loope
mov
mov
aaa
jmp
push
push
je
xchg
pusha
insl
push
push
xor
or
xor
mov
into
push
faddp
add
inc
in
inc
clc
fwait
sub
xor
jl
push
sbb
scas
jp
lea
movd
into
add
add
xor
sbbb
mov
in
and
or
rorb
and
mov
push
test
scas
mov
push
stos
clc
lods
ds
mov
pop
and
add
or
sub
fwait
xor
into
xor
rclb
xor
sub
pshufw
adc
or
popf
xchg
or
mov
pop
cli
or
pop
sbb
pop
call
pop
sbb
add
inc
cmp
cmp
fsubs
push
sbb
sub
or
in
mov
int3
inc
push
repz
or
pop
pop
mov
add
lods
mov
test
mov
notb
out
xchg
fs
push
out
mov
call
lea
stos
lcall
movsl
mov
push
ret
pop
or
mov
icebp
xchg
inc
dec
and
pusha
inc
stos
mov
jo
jo
and
push
pop
cli
mov
xor
int
cwtl
mov
mov
add
enter
mov
es
add
mov
call
ret
lret
icebp
ss
mov
hlt
pop
and
mov
mov
inc
test
cmp
fmul
mov
inc
xor
or
push
imulb
push
gs
add
adc
aaa
push
nop
push
call
cs
and
pop
xor
xor
add
pop
mov
aam
pop
flds
cmp
mov
bound
loopne
sub
push
lods
or
loope
push
popa
je
lret
jo
sub
stc
je
inc
insb
lock
sub
ret
adc
ret
add
sbb
dec
mov
hlt
inc
ret
mov
cmp
lea
jnp
fidivl
cs
mov
pop
xor
add
and
lods
jg
dec
clc
mov
hlt
adc
cld
incl
jo
adc
mov
fucomip
lock
jno
push
insl
rorb
xchg
loop
xorl
aas
hlt
jne
movl
and
push
adc
mov
pop
adc
push
ret
cmp
jbe
mov
push
je
cmp
lds
loopne
dec
mov
pop
push
invd
xchg
push
add
fists
orb
test
inc
testb
decl
mov
or
pop
repz
push
cld
adc
hlt
adc
sbb
cmpsb
mov
mov
sub
inc
inc
or
xchg
and
in
or
or
subl
es
add
pop
sbb
inc
sbb
dec
ret
and
sbb
and
mov
int
std
push
mov
lock
stos
add
adc
xor
call
fmuls
test
sbb
outsb
adc
jo
xor
mov
dec
int3
mov
mov
add
mov
add
lock
aaa
inc
push
mov
sbb
or
push
push
sbb
and
les
fdivl
incl
sbbb
je
hlt
inc
push
jle
push
mov
push
add
lock
or
aam
ds
xor
loope
jl
inc
cmpl
sti
incl
dec
fstpt
sub
mov
mov
jmp
xorb
mov
pop
clc
pop
or
sub
jecxz
add
mov
outsl
jp
iret
mov
loopne
testb
or
enter
mov
or
push
clc
jmp
out
fsubrs
push
cmp
xor
jno
jle
jae
enter
push
mov
bound
add
cld
add
add
bound
out
dec
adc
je
inc
dec
or
dec
pop
pop
push
mov
int
add
ss
gs
mov
inc
sbb
push
add
fildll
jmp
inc
sbb
lret
or
mov
clc
stos
push
in
testl
mov
mov
push
xor
adc
mov
cmpsb
push
scas
call
and
cmpsb
sub
push
int3
fistl
cmp
lods
jmp
dec
adc
fisttpll
popa
dec
loope
and
int3
or
xchg
mov
pop
div
adc
mov
inc
fbstp
clc
outsb
pop
pop
and
push
add
clc
xor
ret
gs
sub
ds
sub
mov
push
adc
out
jg
cmp
dec
sbb
push
pop
add
and
pop
adc
xor
out
inc
adc
jb
loope
push
scas
subb
mov
mov
or
shlb
xchg
je
jle
lods
xor
ja
mov
pop
js
pop
or
pop
mov
xor
xbegin
jno
orb
mov
popa
clc
pop
sahf
mov
ss
mov
pop
lock
adc
adc
inc
pushf
lock
mov
xor
cmp
mov
mov
popf
mov
jo
jo
out
loopne
xor
shrl
mov
add
mov
fsubrs
or
sub
mov
sbb
sub
mov
shll
mov
adc
cmp
dec
xor
jae
adc
fistps
mov
dec
adc
inc
add
insb
stos
imul
sub
push
sbb
add
lret
aam
in
lock
or
xor
pop
aam
inc
xchg
in
sbb
add
enter
les
addb
enter
pop
es
hlt
out
dec
std
add
adc
sub
out
andb
sub
jg
shll
xchg
das
sub
add
adc
stc
jo
icebp
adc
xchg
xchg
xor
xchg
sub
adc
xor
jo
and
adcl
sbb
test
sysenter
aam
mov
incl
xor
stos
mov
cmp
fimuls
add
inc
xor
lcall
mov
push
ljmp
or
sub
das
orl
test
in
adc
sub
stos
aaa
jbe
push
lock
xor
sbb
aas
xor
adc
xor
xor
add
inc
callw
mov
mov
lea
jb
inc
pusha
mov
inc
add
adc
cmp
outsb
pusha
jo
add
add
or
dec
add
and
or
lret
dec
mov
js
cmp
or
nop
mov
sbb
orb
mov
imul
inc
or
call
pop
mov
jb
clc
mov
data16
inc
loope
mov
mov
or
inc
loopne
pusha
mov
lea
rolb
gs
adc
std
sub
scas
stos
int
sub
mov
cli
mov
fdivp
push
cmp
scas
sti
mov
insb
idivb
cmp
cmp
add
les
ds
or
data16
sub
pop
adc
and
inc
inc
xchg
dec
fsubs
js
mov
push
adc
push
addr16
fs
lock
loopne
lret
xor
push
dec
or
roll
insl
and
and
add
fsubs
orb
ljmp
xchg
and
popa
ljmp
inc
ret
loopne,pt
sbbl
mov
mov
lret
or
cltd
mov
negb
cld
ret
cmpb
lock
or
adcb
subb
or
adc
and
sub
lods
mov
xchg
shlb
sbb
fwait
fucomp
enter
orl
mov
jl
pop
sub
and
icebp
cwtl
sbb
lods
nop
decb
sbb
jae
adc
and
xchg
shlb
jo
lret
cs
ret
push
or
sbbb
mov
clc
push
movsl
sub
push
jmp
hlt
decl
push
les
add
test
or
jmp
add
add
fwait
inc
mov
adc
shrb
add
out
add
shrb
jmp
add
shrb
mov
clc
incl
add
je
adc
or
sbb
in
add
into
ss
cli
ja
das
xor
dec
adc
push
les
add
and
or
enter
cli
ret
ja
dec
xor
mov
cwtl
insb
nop
mov
rclb
pop
or
inc
fiaddl
pushw
mov
pop
push
shlb
scas
push
or
rorb
ret
clc
pop
call
ret
add
cld
ljmp
mov
or
js
add
or
inc
clc
add
and
xchg
mov
ss
cmc
shlb
jae
ror
sub
iret
orl
std
decl
rcll
add
rcll
cmp
jo
rclb
push
or
dec
adc
jo
or
lahf
jp
clc
decl
fs
pop
invd
js
stc
rcrb
add
add
xor
pop
inc
xchg
shlb
cli
adc
xor
mov
fstl
pusha
addl
orl
stos
test
orl
rcl
test
les
js
add
inc
mov
fcompl
pop
fucomi
scas
pop
push
dec
inc
mov
mov
loopne
hlt
adc
adc
adc
cmp
shr
push
inc
jnp
or
or
push
int
push
fisubl
mov
mov
incl
out
xchg
add
mov
add
jle
jb
lock
push
xchg
adc
or
call
add
or
jb
push
xchg
cmpsb
test
pop
or
nop
cld
fcomps
sub
add
add
add
pusha
inc
mov
cld
inc
pusha
adc
loopne
sbb
xchg
jle
loopne
cmp
pusha
sbb
movsl
movsb
mov
add
cmpsb
shrb
or
leave
mov
mov
arpl
or
loope
jae
fstpl
pop
mov
mov
or
push
push
sbb
pusha
inc
inc
push
ja
mov
loopne
adcl
out
jae
in
cmp
cmp
push
data16
sbb
repnz
add
pop
shrb
xchg
shr
sub
orb
or
push
or
and
push
pusha
mov
and
mov
addw
jne
pusha
mov
add
ljmp
and
jae
shl
sub
or
or
adc
mov
lea
or
loopne
cmp
pushf
sahf
aam
sbb
adc
jecxz
xchg
ljmp
jl
add
pusha
or
pusha
mov
add
push
and
cltd
cmp
rorb
xor
dec
jb
add
out
sbb
popa
or
sub
or
adc
mov
cmp
sbb
dec
or
mov
add
adc
pusha
pop
adc
jecxz
pushf
clc
jmp
sub
scas
cld
fcoms
xor
sub
mov
fidivrl
or
dec
mov
inc
stc
mov
add
roll
xchg
enter
cmpb
movsb
js
ret
add
add
in
pop
add
sub
push
hlt
ss
sbb
jne
jecxz
orb
cmpsb
adc
sub
mov
cld
dec
inc
mov
xlat
adc
test
and
adc
jmp
adc
mov
test
push
and
sbb
inc
mov
loopne
call
and
aad
push
lea
mov
push
out
pop
pusha
loopne
sub
outsl
sub
or
pusha
push
or
dec
push
push
pop
fucomi
pop
or
inc
imul
mov
stos
clc
xor
popa
stos
or
addb
pop
je
fldl
push
push
inc
lea
jge
ljmp
pop
fidivrl
cmp
xchg
or
cli
lods
les
negb
scas
adc
sbb
add
ja
pop
dec
daa
inc
cmp
mov
pop
push
dec
mov
and
out
mov
test
push
nop
mov
loop
push
lret
lods
add
in
dec
cld
jg
loopne
bound
jno
movl
pusha
mov
pusha
aaa
insb
dec
and
and
jmp
push
roll
repz
mov
add
cltd
pusha
inc
adcb
je
adc
push
leave
xlat
ret
inc
xchg
xor
push
rolb
inc
test
sub
add
icebp
ss
sbb
enter
push
cmc
push
mov
mov
mov
roll
xor
inc
add
mov
dec
dec
sbb
lret
lock
call
jbe
pop
sti
imul
or
jo
lods
sbb
inc
push
inc
cmp
aaa
push
pop
clc
xchg
xor
inc
sub
insb
ficomps
decb
inc
icebp
sub
xor
push
inc
mov
stos
and
test
icebp
cmp
jne
add
xchg
push
loopne
pushl
jbe
push
out
mov
inc
das
adc
iret
cmp
sbb
lock
cmp
loope
adc
adc
mov
lcall
xchg
inc
mov
mov
xor
mov
dec
enter
or
lock
jle
lock
dec
mov
inc
inc
add
pop
testb
sahf
mov
hlt
or
or
sbb
inc
inc
sub
jmp
mov
lock
mov
xchg
lock
loop
in
call
mov
mov
je
add
enter
mov
mov
roll
sti
push
mov
lcall
sbb
mov
push
pop
add
divb
jo
push
repz
push
lcall
sbb
sti
sbb
or
sbb
inc
mov
add
lcall
dec
dec
mov
nop
jo
pop
jbe
mov
nop
jo
jbe
xor
jg
adc
mov
je
sub
dec
sbb
xor
push
jae
mov
js
sub
jb
dec
add
icebp
imul
aam
mov
pusha
dec
sub
xor
adc
cwtl
add
adc
je
lock
mov
paddq
lret
add
inc
adc
xor
sbb
push
dec
mov
test
bound
and
add
cmp
jne
inc
inc
adc
inc
jbe,pt
and
push
mov
mov
sub
push
inc
dec
aam
pop
pop
inc
xchg
jo
mov
enter
mov
ss
lock
xor
or
fldcw
mov
aam
pop
add
and
mov
mov
xchg
mov
call
mov
jg
lock
xor
dec
push
xor
decl
sub
xchg
mov
repnz
decb
xor
adc
add
cmp
and
mov
xchg
push
mov
sub
loope,pn
and
clc
rorb
mov
mov
mov
and
movsb
stos
call
dec
add
pushf
adc
push
push
rolb
ret
jbe
add
pop
mov
adc
setb
iret
icebp
add
jmp
loopne
cmp
and
mov
lret
xor
push
mov
test
or
test
sbb
sarl
out
or
pop
movl
inc
inc
adc
clc
xchg
mov
xor
mov
mov
call
push
clc
stos
je
pop
ljmp
add
dec
lea
inc
clc
cmp
mov
mov
mov
cmpb
inc
or
js
dec
call
call
mov
cld
mov
pusha
fsts
movsb
add
lds
and
xor
lret
or
mov
clc
pop
fsubrs
sbb
std
push
or
aad
mov
mov
add
ja
adcb
add
jg
add
mov
jo
test
aas
in
cs
push
lea
addb
fcompl
mov
pop
adc
ss
jmp
push
ret
mov
pop
movsb
mov
push
ljmp
mov
pusha
dec
mov
mov
and
pop
jecxz
adc
mov
out
push
out
mov
sub
fwait
outsb
nop
push
call
adc
repz
aam
push
add
cli
jae
or
jbe
test
inc
adc
clc
adc
clc
xor
jmp
clc
push
adc
add
add
adc
mov
inc
ret
stos
incb
mov
dec
sbbl
cld
test
mov
add
add
or
push
sub
sub
inc
xor
pop
mov
sub
adc
rol
dec
nop
mov
loopne
inc
mov
inc
ret
xor
and
insb
push
mov
lods
inc
shlb
fsubrp
push
adcl
imul
sub
enter
sub
lock
xor
jns
in
xchg
adc
nop
xor
testl
loop
inc
or
adc
cli
loop
orb
mov
mov
ret
and
or
xor
push
jo
test
mov
pushf
or
fnsave
add
push
ljmp
inc
jecxz
daa
inc
push
push
mov
repz
rcrl
push
out
addl
mov
adc
push
shr
aam
sbb
inc
imul
insb
les
mov
add
dec
jb
adcl
jl
adc
pop
lcall
js
add
mov
roll
adc
ds
scas
add
adc
adc
mov
lea
pop
pop
pop
jo
subb
mov
insb
or
ljmp
adc
inc
mov
mov
mul
ds
lds
add
pop
mov
add
mov
inc
jle
mov
sbb
scas
test
jecxz
adc
sub
testl
fldt
mov
xor
mov
pop
std
add
cld
add
push
in
imul
sbb
div
add
jle
test
hlt
repz
push
repnz
lock
mov
sbb
std
mov
loope
addr16
mov
pop
orb
shr
xchg
xchg
imul
pop
subb
out
test
xor
or
ljmp
add
add
addr16
shr
adc
cmpsb
inc
out
pushf
add
pop
lock
cld
aaa
add
enter
loope
xor
cli
mov
pop
cltd
inc
addl
jp
popa
loopne
pop
ds
in
sbb
das
push
fcmovb
orl
divb
incl
rolb
loop
jbe
push
jecxz
inc
adc
xchg
enter
xor
sbb
loop
push
jl
and
es
pop
adc
mov
push
mov
jle
adcb
je
movb
pop
enter
popf
enter
cmp
ds
sbb
rclb
jp
add
xor
orl
mov
pushf
cli
mov
mov
and
add
mov
sub
popf
aaa
sub
lcall
or
push
or
push
insl
sub
cmp
in
mov
int
mov
lcall
sub
pop
mov
ljmp
mov
fimull
add
ret
test
pusha
add
push
or
mov
add
fcmovnbe
adc
and
sbb
push
push
loop
shlb
pop
cs
ret
ss
add
rol
out
sub
pushl
mov
ret
sbb
stc
push
add
int3
dec
add
stos
inc
cld
out
add
das
jg
or
adc
outsb
or
das
dec
cmp
xor
jb
ds
push
mov
mov
adc
and
jmp
xor
loope
call
enter
sbb
nop
mov
add
cmp
popa
cmp
sub
and
in
andb
inc
push
xor
add
rorl
out
push
nop
loopne,pt
cld
jne
rcrb
loopne
jp
stos
push
xor
dec
fisubrl
loope
pop
add
shrb
and
adc
stos
push
push
push
jl
and
jo
pop
adc
or
inc
xor
mov
js
lcall
pop
or
lret
mov
loop
dec
shl
or
mov
push
addb
mov
je
test
add
mov
jb
jbe
mov
push
lea
cmp
fdivs
dec
adc
pusha
das
xchg
mov
call
inc
js
hlt
inc
ljmp
xor
les
add
or
mov
adc
jmp
scas
xchg
hlt
inc
lret
cmp
lods
mov
pusha
mov
les
cwtl
lock
pusha
add
xor
xchg
mov
cli
and
divb
adc
mov
je
adc
icebp
mov
clc
test
cmp
lea
shlb
add
test
aaa
loop
les
mov
sti
xor
pop
orl
mov
adc
jno
ret
jl
cmc
aaa
xchg
push
jl
add
sub
rolb
sti
cmp
notl
es
jge
add
and
cli
jg
sub
icebp
push
mov
pop
lock
sarl
fucomi
dec
or
sbb
or
dec
popl
insb
pusha
mov
sti
or
mov
inc
mov
jmp
jmp
sbb
popa
or
bound
das
and
orl
cmp
pop
sbb
dec
int
scas
inc
mov
fdivrs
ret
mov
in
sbbb
cmc
popa
jae
leave
stos
jle
outsl
xorb
mov
push
xchg
sub
outsl
je
insl
xchg
clc
jg
adc
popa
add
lcall
jg
pop
jg
lea
insl
and
and
int3
insb
jg
popa
xchg
je
jb
adc
adc
inc
xor
cmp
pop
popa
or
inc
xor
xchg
loopne
mov
sbb
loope
int3
mulb
iret
js
mov
inc
cld
jne
lea
and
loopne
inc
xorl
mov
or
dec
mov
jl
movsb
push
in
loopne
in
aas
mov
or
xchg
mov
cld
inc
or
subb
sbb
mov
and
ret
int3
loope
adc
nop
cs
test
mov
scas
pop
subb
inc
leave
hlt
lret
std
add
pop
loopne
xorb
add
fisttpl
adc
push
sbb
xorl
jb
push
pop
imul
mov
pop
add
xchg
push
cmpsl
jp
clc
or
add
inc
mov
fsubl
pusha
cld
sbb
incl
inc
mov
pusha
movsb
adc
cld
mov
add
xor
cmp
cs
dec
outsl
icebp
add
adcb
add
cmp
clc
mov
xorb
mov
adc
or
mov
mov
sub
pushf
lods
int3
std
or
je
sub
sbb
cmpsb
adc
lcall
jbe
push
scas
add
sbb
inc
add
xor
jp
or
sbb
lret
adc
xchg
xchg
inc
mov
adc
jbe
mov
or
roll
scas
adc
incl
push
or
sete
or
dec
xchg
add
and
mov
xchg
push
push
cmp
lea
xor
add
mov
or
xor
mov
aam
nop
push
mov
mov
mov
add
iret
jle
mov
rorb
inc
mov
inc
je
in
sbb
cmp
lods
and
pop
or
sub
pop
les
rsqrtps
push
add
add
imul
decb
dec
iret
lods
and
leave
je
mov
stos
and
clc
lock
xlat
add
loop
insl
sub
lcall
add
fiadds
icebp
and
js
xor
mov
pop
and
pop
xchg
mov
ljmp
cltd
xorl
fadds
add
mov
add
rolb
dec
add
mov
lret
lock
stos
pusha
xor
jg
xor
je
rcll
pusha
out
push
je
dec
mov
clc
push
pop
and
dec
cld
in
aas
sub
mov
shl
jl
add
je
add
mov
aam
xchg
push
xchg
scas
mov
clc
adc
mov
push
push
or
cwtl
in
test
test
jne
sbbb
adcl
dec
jo
xchg
xchg
xchg
mov
popa
in
add
cs
sbbb
out
adc
shr
jecxz
pop
call
dec
pop
jb
add
call
mov
add
dec
fs
stc
push
fisttpl
ja
ret
push
mov
lock
mov
fcompl
inc
adc
xchg
in
dec
stos
jmp
add
dec
imul
adc
call
ljmp
les
scas
inc
ret
lret
adc
jg
push
adc
cmp
cmc
jg
mov
sub
testb
pop
cltd
les
rcrb
outsb
insl
add
inc
call
decb
cmp
xor
push
mov
lea
mov
or
jno
testb
jnp
dec
add
jg
pop
ret
pop
js
test
mov
sbb
cmp
pop
fdivl
shlb
mov
pop
or
or
push
lds
xor
or
push
lock
icebp
ljmp
sbb
or
pop
mov
push
add
stos
push
or
xor
push
adc
mov
lock
test
mov
jg
dec
les
clc
movsl
xor
hlt
mov
add
mov
mov
jle
mov
es
adc
or
mov
test
mov
mov
inc
xor
ja
sub
jbe
jecxz
incl
cmc
pop
shlb
push
dec
adc
scas
orb
sbb
jg
decl
cwtl
dec
add
out
repnz
pop
jmp
lret
out
lea
movsw
and
ljmp
adc
adc
jg
imul
movsb
nop
icebp
add
iret
sub
int3
mov
out
outsb
add
adc
shlb
cmp
adc
pushf
or
jo
mov
stc
jne
cs
test
xor
dec
sbb
push
cs
jle
add
xorb
notb
mov
inc
add
sti
or
sbb
call
je
adc
or
ja
outsb
outsl
mov
adc
bound
cld
inc
pop
lea
stos
push
lock
ss
ljmp
inc
je
push
mov
mov
mov
fbstp
cltd
or
ret
aam
xor
mov
adc
pushw
sub
sub
cmp
mov
lock
xchg
jg
subb
add
add
add
sbb
sub
std
fcmovnu
sbb
xor
xor
ja
push
xor
cmpl
jle
jg
cmc
jg
mov
mov
mov
xchg
call
and
push
out
add
mov
movsb
stos
and
hlt
push
pop
jmp
cmpsl
and
loop
and
js
jg
cmp
mov
mov
xor
sbb
lock
adc
and
and
stos
add
sbbb
mov
in
out
imull
in
lock
scas
adc
add
lods
popa
inc
and
mov
je
mov
ljmp
nop
jno
adc
adc
push
sbb
lds
xor
or
fisubs
mov
cmc
lock
jb
insb
hlt
or
or
jmp
cltd
js
mov
sbb
xor
push
rolb
add
mov
and
mov
in
or
add
mov
mov
pop
jne
decl
and
testb
pop
ret
das
sub
hlt
adc
aad
data16
repz
hlt
and
sarl
sub
ja
jl
roll
out
mov
ss
adc
add
sub
pushw
andl
dec
mov
xor
sahf
sbb
xor
cmp
jg
sub
adc
or
in
jno
pop
fs
xor
and
jae
mov
rcrl
in
xor
mov
xor
stos
or
inc
mov
jb
fildll
push
ja
jl
lock
ror
fisttpll
sbb
mov
push
inc
fsubrs
popa
sub
or
cwtl
mov
jl
cmp
jne
jle
jp
jl
enter
add
add
mov
add
add
jo
test
cli
in
loope
hlt
jecxz
mov
mov
add
stos
sub
jo
jmp
adc
add
mov
adc
mov
add
cmpsl
in
add
popf
imul
in
pop
push
mov
pop
jge
add
cmp
jne
push
pop
dec
shlb
das
or
or
clc
xor
mov
sbb
pop
cmpl
and
dec
dec
push
imul
mov
inc
in
add
and
loopne
or
add
test
push
inc
mov
add
or
mov
je
adc
add
imul
jne
orl
and
jg
mov
mov
das
xchg
dec
mov
pop
test
loopne
or
sbb
loopne
addl
cli
mov
popf
fistpl
or
or
sar
adc
and
or
push
cltd
mov
enter
sahf
mov
clc
xor
xchg
jg
std
int
or
xchg
inc
shlb
jle
fidivs
bound
cmp
xchg
mov
xchg
ljmp
jl
dec
hlt
mov
push
pusha
push
jnp
loopne
adc
pop
outsb
push
jl
roll
mov
adcb
mov
bswap
bnd
cmovns
shlb
das
pop
add
pop
pop
xchg
adc
pop
test
pop
inc
mov
pusha
ja
adc
mov
test
xchg
or
and
int3
ret
stos
jg
cmpsb
pop
adc
pop
call
add
sti
mov
fidivrs
or
inc
lret
ss
xchg
push
or
hlt
cmpsb
push
jno
ret
arpl
add
lock
xchg
sub
push
daa
shrb
xchg
imul
call
loopne
mov
imul
clc
rclb
sub
mov
test
pop
rorb
cmp
shrb
jle
mov
mov
rclb
mov
ror
push
pop
add
repnz
push
add
add
divb
sbb
mov
std
cmpsb
cld
adc
loope
cli
jle
add
jle
add
mov
movsb
je
fistpl
enter
mov
rcr
inc
ret
mov
add
adc
push
out
repz
inc
rcrl
mov
push
jmp
xorb
out
and
push
imul
idivl
add
push
ret
add
arpl
fiaddl
loopne
adc
xchg
clc
add
inc
ret
lock
cmpsl
outsl
loope
mov
stos
mov
loopne
bound
or
stos
das
and
jge
jbe
add
jmp
inc
inc
jnp
dec
jbe
loop
pushw
pop
inc
sbb
or
sbbb
pop
lock
mov
xchg
sbb
aaa
outsb
inc
loopne
cld
mov
lcall
xor
adc
arpl
mov
out
loopne
aam
adcl
data16
loopne
add
cmp
addr16
sub
jg
ficoms
rcrb
mov
xchg
pusha
xchg
and
loope
or
cwtl
popa
and
loope
lret
fistl
pop
adc
or
hlt
mov
clc
fbstp
adc
into
sbb
adc
lret
mov
sub
and
ja
cmpb
mov
loop
repz
in
lcall
jl
pusha
adc
mov
mov
arpl
mov
xor
lahf
ss
pop
cmpl
inc
in
js
cmp
or
push
loopne,pt
and
bound
adc
lock
addr16
daa
scas
xor
add
hlt
and
xor
sti
out
and
jle
jecxz
inc
negb
add
pop
or
push
loopne
mov
inc
pusha
adc
dec
test
and
mov
hlt
pop
add
bound
add
into
mov
or
jp
popa
adc
push
adc
and
loopne
mov
cwtl
addr16
insb
rcll
aam
or
clc
adc
cmp
push
call
std
push
cmpsb
arpl
adc
iret
jecxz
adc
cmp
popa
fs
add
fstpt
nop
xchg
add
or
sub
bound
adc
scas
sub
into
xorl
adc
dec
call
call
cli
cmp
es
dec
mov
cmp
pusha
cmp
mov
fidivrs
sub
lock
loopne
mov
sbb
cld
stos
jno
rcll
into
jb
or
loop
loop
loop
adc
test
test
pop
xchg
negb
or
add
cli
cmp
cmpsb
clc
idiv
in
mov
pusha
in
pop
cltd
xor
loop
add
inc
or
mov
pop
sub
and
jg
stos
xchg
loop
pusha
data16
ret
fwait
shlb
or
inc
inc
pusha
mov
daa
or
cmp
sub
std
mov
cltd
addl
aad
mov
test
adc
and
ret
ret
test
mov
mov
cs
inc
jp
inc
mov
jl
adc
in
scas
fwait
insb
adc
add
mov
push
mov
dec
rcll
add
pop
arpl
loope
clc
fnsave
ds
addl
jle
in
or
and
push
add
in
jg
pushl
test
adcl
xor
xor
int3
xor
ja
adc
cmp
jo
mov
xor
les
call
imull
add
xorb
divl
fmuls
mov
mov
or
bound
sub
call
inc
mov
add
sar
loopne
rol
and
idiv
cmpsb
fildll
lock
sbb
je
xor
lock
dec
cmp
or
decl
sub
pusha
fisttpl
pop
clc
or
pusha
shll
insl
sbb
push
cmp
leave
add
sub
lret
inc
les
loopne
cld
icebp
mov
jo
ljmp
push
data16
xor
fcmovnbe
add
dec
add
xchg
mov
sbb
xchg
and
fimull
call
adc
add
mov
pop
adc
pop
lock
sbb
jo
notl
test
sbb
or
out
leave
outsb
call
xor
cmp
sbb
mov
ja
add
xor
sarb
dec
cmp
mov
jns
adc
fs
add
insl
cmovl
xchg
bound
pop
clc
dec
xchg
movb
add
data16
jl
mov
xchg
faddl
jo
cld
cmp
add
jge
loopne
jge
mov
outsl
jbe
stos
pushf
aas
push
mov
adc
jnp
add
adc
pop
pushl
xor
or
hlt
xchg
clc
lcall
xchg
push
lock
mov
dec
mov
sbb
js
test
and
xchg
ds
jp
adc
call
orb
jl
add
repnz
jg
mov
and
or
mov
rclb
das
push
jo
sahf
pusha
addb
xor
pushl
shr
mov
in
add
ja
incl
xorl
adc
mov
adc
push
push
lock
push
and
mov
stos
add
shlb
adc
lock
pushf
adc
ret
lock
mov
and
pop
add
sub
and
ret
push
icebp
inc
mov
sub
or
lahf
add
inc
lea
sub
outsl
jo
lcall
adc
decl
imul
or
sbb
scas
push
dec
sarb
or
jb
cmp
popa
faddl
mov
sbb
add
mov
add
jg
lock
pop
dec
out
mov
sub
lea
jno
adcb
jecxz
mov
imul
mov
inc
dec
or
cmp
mov
sub
pop
and
mov
imul
sti
scas
push
nop
mov
jg
cmp
cmp
add
or
or
cli
mov
pop
add
jb
dec
inc
adc
mov
or
add
adc
or
add
adc
add
jb
clc
inc
sbb
mov
orb
js
xchg
push
incl
add
adc
sub
mov
repnz
mov
adc
push
cwtl
dec
adc
sbb
jmp
cmp
xor
mov
rorb
repnz
lret
fistpll
inc
mov
mov
andl
je
dec
out
mov
jg
hlt
pop
push
or
insb
mov
mov
dec
xor
adcb
adc
outsl
mov
lock
push
clc
cld
jno
jle
add
push
sub
loopne
xor
rorl
pop
aaa
adc
and
mov
pop
cmp
inc
daa
popa
or
movsb
xor
xor
mov
js
cmc
shll
ljmp
pop
mov
mov
jmp
jb
dec
add
mov
cli
inc
or
inc
pop
sub
push
push
and
jg
hlt
shl
orl
dec
jo
addl
insl
inc
or
xor
je
push
add
scas
mov
lea
addb
ret
adc
xchg
pop
mov
or
or
mov
test
repnz
mov
repnz
inc
mov
sbb
xor
dec
push
loopne
jo
inc
enter
shl
xchg
xor
decl
jmp
mov
je
daa
jno
jb
xor
cmpsb
incl
inc
push
inc
scas
inc
push
call
or
xchg
imul
mov
rol
lcall
adc
mov
andb
push
outsl
subb
mov
mov
ja
or
shlb
je
lods
adc
mov
addr16
cmp
sbb
mov
adc
nop
fstps
ss
xchg
sbb
xor
xor
cmp
clc
rorb
and
sub
push
mov
cli
xor
cld
push
jnp
mov
dec
shlb
out
jo
into
ds
ficoms
add
sbb
stos
lock
sbb
orb
ss
inc
rolb
out
push
pcmpeqw
pop
add
inc
xchg
add
add
mov
in
fiaddl
dec
mov
pop
sbb
mov
jg
and
push
push
push
arpl
pop
add
inc
inc
add
cmpsl
mov
push
push
sub
test
out
jg
mov
pop
scas
out
mov
aam
neg
add
inc
jmp
jmp
test
cmp
cmp
add
rorb
push
inc
mov
dec
ja
push
add
cmp
mov
sbb
sub
dec
and
push
sub
pop
int
ret
sub
adc
sbb
lock
dec
decb
sbb
je
jecxz
fsubrs
mov
adc
push
fadds
ficoms
ja
jl
daa
inc
or
add
mov
addr16
lret
movsb
cld
les
jb
mov
adc
xor
mov
cld
sbb
cmp
clc
les
fidivrs
sub
add
or
adc
inc
add
scas
mov
sub
out
mov
jo
aaa
adcb
add
xorl
aaa
bound
mov
mov
outsb
push
mov
addl
inc
clc
outsl
rolb
and
loopne
loop
lock
sbb
pop
mov
cwtl
in
popf
or
jge
jmp
cli
insb
into
xor
or
or
std
jg
pop
pop
cmpsl
add
xchg
repnz
push
mov
push
lret
cmpb
add
push
fs
and
mov
rorb
jg
mov
aad
shr
movsb
jne
push
xchg
mov
in
ljmp
or
outsb
das
xchg
mov
rcll
add
pop
inc
or
addb
fidivrl
lods
fstpt
fldz
out
mov
test
and
and
addr16
xorl
rcrl
dec
andb
mov
lods
aaa
dec
clc
das
sbb
cmp
ja
or
subb
pusha
fdivr
add
subl
test
test
addb
test
push
pop
mov
inc
shrb
cwtl
aad
and
sub
in
mov
adc
es
aam
clc
mov
ret
imul
inc
in
mov
push
mov
inc
mov
and
call
add
mov
pop
cld
repz
jp
mov
add
add
sbbb
xchg
dec
sbbl
lret
mov
adc
push
xchg
xchg
mov
stos
shlb
pop
pop
push
inc
jne
lds
xchg
add
call
ret
inc
add
jmp
sub
pop
int3
pop
or
pop
out
sbb
xor
push
xchg
cmp
or
add
lret
jne
adc
fstpt
jg
adc
mov
mov
cld
adc
push
cmp
jbe
sub
lock
adc
shrl
jo
mov
in
cmp
push
ret
icebp
enter
lods
scas
lock
sub
cwtl
xor
out
sbb
inc
or
test
std
jmp
inc
push
rolb
or
dec
rorl
adc
aaa
adc
sbb
and
incl
add
jbe
movd
mov
setno
jo
add
pxor
mov
fstl
jmp
nop
inc
rol
addl
ja
adc
cld
outsb
ret
rclb
inc
cli
repz
jl
and
inc
divb
scas
pand
movd
xor
fsubrl
addl
test
out
lds
in
out
stos
pop
fistl
pop
xchg
jg
jecxz
cmp
rol
or
cld
or
xor
rcll
mov
lock
enter
sub
fsubr
pop
inc
mov
and
imul
in
in
mov
fs
push
sbb
push
pusha
shl
dec
in
lock
mov
aaa
ret
push
lret
jg
mov
mov
adc
push
rcrb
call
mov
mov
in
sub
cmp
test
pop
popa
stos
push
je,pt
repnz
addb
inc
push
call
adcb
add
data16
bound
je
add
push
sub
decl
push
jne
andl
mov
loopne
push
dec
aaa
inc
mov
out
add
movl
push
popa
es
inc
and
adc
popa
cs
rcr
shll
xchg
add
ret
dec
sahf
push
je
int3
bound
lock
cld
lret
jnp
jg
call
popa
xor
inc
ret
and
pusha
push
es
sub
jg
inc
fbld
cmp
adc
sub
loop
pop
dec
inc
cmp
jbe
sub
imul
mov
mov
inc
loopne
sub
add
gs
cs
add
decl
mov
in
mov
jecxz
bound
and
push
and
lock
mov
sub
outsl
mov
mov
loope
aaa
or
add
in
pushw
sub
jb
hlt
out
add
pop
pop
push
or
add
xchg
adc
out
sbb
adc
les
push
mov
jno
add
sub
sahf
shl
ficompl
fwait
js
js
mov
push
lret
lea
cmp
sub
aam
mov
clc
mov
mov
adc
adc
adc
decl
adc
mov
sbb
in
jne
loop
add
das
cmpsb
cmpb
je
add
or
cli
fidivs
aam
int3
hlt
ret
add
jl
or
pop
xor
sbb
pusha
ds
fbstp
and
filds
pusha
mov
jmp
sub
mull
fildl
lods
mov
test
pop
inc
pusha
push
or
jl
mov
dec
loopne
ss
fbstp
inc
movsb
jbe
test
lods
adc
or
mov
ss
or
je
cmc
aas
jmp
fwait
loopne
mov
inc
dec
pop
push
and
cmp
xor
sub
mov
mov
outsb
pop
dec
pop
sub
inc
mov
and
loop
jge
inc
cld
je
cmp
jmp
cmp
add
sbb
pop
mov
sti
movl
loope
inc
push
mov
imul
data16
andb
fiaddl
mov
sarl
loope
test
adc
add
sub
push
js
inc
test
rorl
dec
xor
in
loopne
adc
add
inc
loopne
xor
bound
pusha
mov
pop
or
mov
or
je
jne
movsb
or
dec
add
pop
dec
in
add
std
or
test
push
ja
jbe
jb
stos
test
inc
inc
add
sub
cmp
sbb
lods
jmp
or
add
xor
jae
adc
data16
jb
push
xor
xchg
cmp
sbb
inc
orl
or
mov
cmc
data16
mov
mov
dec
lock
mov
in
xor
sub
adc
add
add
cmp
in
pusha
xor
xorb
jle
adc
mov
adc
push
js
rorb
ljmp
nop
je
push
add
int3
pop
lea
jge
cmp
cwtl
outsl
jb
rorb
hlt
cmp
mov
cmc
push
add
xchg
push
icebp
add
sbb
repz
mov
sbb
add
aad
roll
adc
and
in
enter
push
dec
out
adc
orl
mov
or
push
mov
mov
push
adc
sub
shrb
push
adc
cld
lahf
jo
jp
fisubrl
adc
lret
je
int3
jge
mov
sbbl
jp
inc
adc
xor
add
mov
push
cmp
inc
pop
lods
fisttps
push
loopne
and
test
aad
data16
je
mov
cmp
mov
xchg
or
js
and
add
sbb
cmc
dec
call
stos
mov
push
movsb
aam
jo
xchg
pop
clc
sub
jnp
xor
cmp
xchg
xor
sbbl
cld
push
pop
mov
imul
inc
aam
sarb
adc
das
ljmp
push
lock
aaa
sub
or
fnstsw
inc
inc
xor
or
enter
xor
jae
shrb
clc
call
push
inc
inc
dec
add
insb
hlt
add
adc
adc
pushf
cmp
ret
sub
xchg
shlb
cld
sbb
add
mov
mov
cwtl
and
cli
stos
jo
add
push
ret
sub
jo
jae
adc
push
mov
or
shll
mov
ss
test
pop
fdivs
jl
fsubrs
clc
inc
call
sub
lock
and
orb
jecxz
inc
push
jecxz
int3
cmp
add
lret
adc
sar
sub
jo
inc
clc
ja
test
mov
mov
sar
decl
sub
je
mov
nop
lock
hlt
adc
dec
repnz
push
add
mov
jo
xor
sub
xchg
mov
movsb
incl
push
pop
sbb
xor
mov
pop
mov
push
ljmp
mov
pushl
ret
nop
icebp
add
adc
jo
mov
adc
push
add
call
les
mov
mov
add
in
test
incl
cs
ljmp
repz
push
or
or
and
lock
xchg
cld
shll
xor
shrb
fs
pop
adc
dec
or
jb
add
and
addr16
add
xchg
inc
hlt
dec
fs
mov
cmp
xchg
les
cmp
xchg
dec
and
sub
clc
sub
test
add
icebp
xor
mov
and
xchg
lock
xor
pop
loop
pavgb
push
shll
clc
std
fldl
jno
push
daa
rolb
aad
inc
add
or
mov
xchg
movsb
jb
jl
add
jnp
sbbb
adc
mov
cld
sarl
jb
jns
sbb
pop
imul
dec
xchg
xlat
sbb
or
sbb
fwait
mov
sahf
lock
push
rcll
popf
fwait
adc
push
ss
pop
call
hlt
add
inc
in
lcall
pusha
lods
insl
lds
xchg
pop
ds
push
push
push
add
imul
and
push
inc
mov
mov
lahf
push
lock
push
sbb
sub
add
and
push
clc
and
insl
cs
insb
int
sub
test
add
add
aam
pop
pop
cld
jbe,pn
imul
mov
mov
sub
sbb
das
mov
xchg
movsb
xorw
xor
jl
js
lods
jmp
cltd
mov
sub
cli
or
or
sar
and
std
or
add
or
test
xor
shrb
stos
sub
and
insl
cmp
packssdw
sbb
sbb
popa
adc
jo
add
pop
insl
imul
push
lock
aam
scas
ret
sbb
or
mov
mov
int3
add
das
and
pop
sarb
sub
loope
in
sub
push
xchg
cwtl
sbb
nop
mov
push
xchg
orb
or
mov
push
enter
inc
push
or
pop
xor
out
xor
cmp
stc
orb
pop
or
or
cld
push
out
adc
inc
inc
push
dec
cmp
mov
lds
xor
add
out
mov
add
mov
pushf
xorb
aad
add
shlb
or
mov
test
push
mov
xchg
push
repz
adc
mov
xchg
jo
jle
push
mov
jecxz
jo
daa
adc
mov
sbb
push
sbb
sbb
subb
xorb
xor
or
mul
jecxz
in
jne
add
or
outsl
stos
jae
mov
lods
div
adc
mov
mov
xor
pop
les
nop
cmc
rep
cmc
mov
lds
jp
in
mov
mov
pushw
pop
jo
push
or
loopne
dec
or
mov
imul
xchg
pop
and
sbb
cmpsb
imul
add
or
cmpsl
rcr
or
push
add
test
cmpsb
mov
inc
dec
hlt
add
lock
in
add
mov
mov
in
sub
cs
jl
fldt
mov
sbb
xor
add
add
insl
stos
mov
mov
lods
test
imul
or
add
pushf
push
testb
pop
les
dec
loop
mov
test
add
cmpsb
mov
pop
sbb
push
outsl
lcall
add
inc
cmp
addb
scas
imul
dec
sarl
adc
or
dec
sarl
add
cld
push
or
dec
hlt
lock
call
lcall
int3
out
lcall
xor
imul
xlat
xchg
aam
adc
subb
int
mov
jl
out
xlat
lcall
add
sbb
fisubs
adcb
or
add
cwtl
orb
pop
lods
mov
pop
fneni(8087
and
je
and
sbb
sbb
sbb
or
or
mov
cmp
fwait
add
or
aas
hlt
lock
add
and
push
leave
xchg
sbb
add
mov
sub
and
jnp
cwtl
test
add
sub
pop
lods
adc
dec
jne
sarb
or
push
pushf
sbbb
nop
add
mov
mov
xor
inc
add
cmpsb
jp
push
jbe
push
insb
dec
shrl
add
pusha
pop
pop
push
int
cmpsb
cmp
fldcw
imul
cmp
jnp
jge
sub
sarb
shrb
lock
stos
jge
fiaddl
jnp
jge
sbb
fsubrs
lcall
pinsrw
lcall
mov
xor
sahf
out
movsb
xchg
mov
push
xor
mov
mov
push
sbb
js
lea
rol
sbb
andb
lea
xor
sub
push
xor
in
adc
lcall
dec
or
sub
subb
add
mov
sbb
sbb
sbb
push
bound
or
cmp
xchg
dec
call
stc
imul
jmp
add
xor
je
sbb
mov
push
sbb
imul
sbb
dec
imul
loopne
popf
xchg
cltd
sbb
sarl
jge
jne
imul
add
imul
js
andl
mov
mov
jb
jnp
andl
pop
push
add
sbb
dec
push
dec
dec
sahf
inc
inc
lcall
xor
sub
imul
push
lret
mov
add
pusha
cs
sarl
ljmp
dec
ror
lret
sarb
pop
mov
das
pop
inc
dec
or
call
add
adc
push
ljmp
fiaddl
lret
dec
xchg
sbb
adc
xchg
pop
data16
xor
sbb
sbb
mov
xchg
shll
lcall
xor
lcall
bound
xor
or
sub
aad
addr16
repnz
xor
sbb
imul
or
loopne
cs
sbbb
cli
cs
sbb
repnz
sbb
or
loop
fiaddl
add
mov
cmp
dec
imul
mov
mov
imul
add
and
xchg
mov
shll
mov
mov
push
cld
and
movsl
incl
or
movsb
push
mov
pusha
add
movsb
push
cmpsl
in
adc
push
cmpsl
movsb
push
jo
dec
nop
pusha
add
sub
adc
mov
ret
mov
aaa
subb
aaa
xorb
mov
imul
dec
andl
lahf
add
and
rcl
add
adc
lcall
ja
ret
stc
cs
int
dec
repz
add
sbb
loope
flds
jnp
aad
int
leave
lds
xchg
mov
dec
std
loop
test
das
push
xchg
lods
or
xchg
mov
pushf
mov
inc
pushf
add
fisubrl
mov
and
mov
mov
or
mov
inc
stc
mov
insl
pushl
movsl
pop
add
mov
sbb
mov
insl
mov
xchg
ds
stos
pop
decl
shl
push
pushf
or
and
adcl
decb
jecxz
or
lcall
inc
aam
test
dec
inc
into
nop
jl
push
das
ret
mov
sbb
add
push
ret
ret
jl
push
sub
outsl
pop
sbb
andl
mov
std
and
jbe
ss
mov
adc
xorb
shlb
cli
neg
stos
mov
mov
ret
adc
push
adc
push
std
mov
add
bound
add
sbb
cld
and
incl
push
call
push
lods
sbb
push
divb
mov
jne
call
ret
pop
add
add
clc
xchg
sbb
push
pop
and
and
lcall
cld
ret
cmp
icebp
fildl
icebp
add
mov
lock
cmp
xorb
lods
sbb
lret
or
xor
pop
inc
add
add
or
cld
fucomi
mov
mov
push
and
pop
cmp
and
pop
sub
std
jg
and
cmp
add
and
add
jno
and
call
add
or
lock
mov
xor
add
mov
mov
cld
adc
add
or
mov
cmpsb
jle
pushf
jl
inc
sbbl
fistl
sbb
test
mov
and
je
xor
stc
adc
mov
adc
adc
adc
push
push
cmp
or
xor
pop
lock
cltd
xor
xchg
xor
mov
add
mulb
xchg
adc
dec
add
repnz
insb
clc
cmp
pop
lock
or
mov
jae
pop
mov
and
sbb
fistpl
dec
adc
je
ljmp
adcb
push
or
stc
add
and
or
sbb
and
mov
push
test
js
lock
xorl
rcrb
int
cli
mov
jno
cmp
dec
adc
mov
push
cmp
sbb
mov
cmp
sbb
inc
out
jo
jnp
jo
mov
dec
shrb
orl
imul
popa
cmp
call
test
outsb
jbe
sub
xchg
in
add
xor
mov
loope
push
out
mov
add
je
ret
xchg
ljmp
call
mov
and
jle
out
push
aam
scas
sbb
xchg
or
pop
push
sub
rcll
or
pop
dec
orb
data16
or
add
cmp
sub
mov
arpl
cltd
add
cmp
sub
out
call
cli
sbb
dec
ja
mov
push
pop
lock
in
or
fcmovnbe
lock
jle
xlat
push
add
add
sub
call
clc
add
jg
in
add
lods
fnstenv
incb
test
mov
inc
orl
or
cli
sbbl
xor
andb
or
jne
pop
dec
add
sub
test
add
adc
push
scas
mov
adc
xorb
aad
sub
lcall
outsl
mov
mov
call
adcl
mov
int
or
add
call
hlt
scas
or
out
js
dec
orb
cmp
fs
std
push
addb
les
sti
sub
bound
sub
clc
jle
in
mov
outsb
ja
add
pop
mov
adc
nop
lahf
xor
aaa
dec
and
call
or
shll
xchg
xor
cmp
or
or
shlb
dec
je
call
idiv
push
add
push
jne
out
call
cmc
add
pop
add
shlb
in
pushl
movl
loope
shll
imul
add
adc
pop
sti
sbb
push
mov
xlat
lcall
sbb
pop
fwait
shrb
nop
adc
es
icebp
sbb
sarl
shlb
and
shufps
scas
nop
push
call
push
push
push
les
sarl
mov
ljmp
test
pop
das
les
jne
rcr
sub
lds
mov
lock
or
rcrb
lcall
addr16
or
jle
loopne
sbb
stc
push
push
clc
roll
adc
in
push
test
aam
sub
sub
rcrb
fistps
and
pop
loope
loopne
ljmp
das
call
adc
and
adc
adc
fsubrs
test
paddw
test
sahf
push
lock
call
jg
pop
adc
loopne
inc
bound
loopne
lods
lods
call
imul
ss
mov
decl
add
push
jne
pop
pop
or
or
jne
call
clc
jg
call
or
adc
cmc
pusha
inc
scas
jo
cli
push
flds
xor
rorb
jecxz
decl
scas
pop
lock
clc
mov
jne
pop
mov
xorl
adc
stos
movsb
test
pusha
dec
popa
mov
cld
pusha
sub
or
push
nop
jp
popa
or
lods
popa
shrb
lods
xor
fiadds
push
adc
pusha
and
pop
popa
cmp
mov
fwait
aas
pusha
and
and
loopne
lcall
add
jg
and
pavgb
loop
dec
push
adc
mov
je
add
mov
pop
add
sub
push
adc
inc
cmp
or
mov
add
push
mov
mov
movsb
add
xchg
inc
cmp
je
cmp
adc
cmp
je
cmp
addps
enter
fsubrl
loop
notl
sti
out
call
inc
sub
repnz
addr16
loopne
pusha
mov
outsl
out
in
je
ret
test
adc
je
xchg
cs
stos
je
jnp
mov
adc
je
lods
je
ret
mov
fistpll
je
adc
push
ret
outsb
je
outsl
je
ret
fiadds
add
mov
adc
xchg
sub
shrb
mov
in
aaa
adc
lock
mov
es
loop
or
mov
mov
mov
and
pusha
pop
add
bound
test
or
in
jmp
cli
jbe
loopne
jb
js
hlt
inc
test
ret
sub
fisubl
and
xor
test
mov
ds
aaa
cmp
mov
and
or
pusha
mov
jmp
adc
inc
pusha
xor
push
lret
bound
addl
popa
pop
cmp
dec
repnz
adc
push
jl
addl
xor
mov
sbb
mov
jecxz
adc
aam
lea
inc
inc
insb
mov
rol
in
loopne
cmp
pop
pusha
inc
mov
inc
popa
cmp
popa
add
push
call
loopne
mov
add
loopne
inc
decb
adc
cmp
cltd
loop
push
inc
mov
call
ja
pop
or
jbe
shr
roll
jae
push
or
push
pusha
pop
ret
jg
jno
and
cmp
fs
add
adc
mov
add
daa
test
addb
sbbb
fisttpl
repnz
ljmp
addb
pop
inc
cld
scas
in
call
xor
push
adc
ret
push
stc
test
push
sub
push
sub
lret
push
cli
push
insl
mov
xor
and
cmp
inc
icebp
mov
mov
xor
xor
xor
and
sub
pop
mov
pop
ljmp
icebp
pusha
out
mov
and
mov
and
mov
add
add
incl
jo
ret
adc
adc
sahf
loope
jle
mov
lret
lods
jmp
imul
mov
lcall
cmpsb
mov
es
pop
push
icebp
or
and
loop
out
stc
call
xchg
in
inc
sbb
aas
pop
sbb
xor
sbb
clc
ljmp
and
inc
cmp
repz
mov
mov
cli
or
test
pop
sub
mov
xor
repz
xor
push
inc
call
mov
and
pusha
int3
int3
lret
dec
jp
mov
inc
loope
cs
loopne
ret
mov
add
pop
sbb
adc
mov
pusha
cltd
test
js
sub
pop
jnp
mov
jecxz
cmp
xor
daa
adc
or
mov
jg
inc
or
loopne
jmp
cmp
push
arpl
dec
ja
fisubrl
in
fs
adc
push
gs
je
xor
adc
pop
add
in
mov
mov
pushl
or
add
sbb
mov
add
data16
xchg
repz
mov
xor
push
sbb
jl
imul
sbb
shll
paddsw
pop
in
mov
stos
mov
insb
mov
pop
lock
sbb
addr16
into
push
std
jo
xor
jne
adc
mov
push
mov
hlt
add
sbb
jle
insl
in
add
cmp
fdivp
add
clc
ficoms
loopne
inc
in
or
std
pop
lea
sbb
xchg
xchg
jge
stos
insl
xchg
xor
inc
and
push
add
jmp
rcr
add
mov
ds
cmp
mov
add
lods
mov
std
push
lock
rcrl
scas
mov
je
sbb
push
xor
test
bsf
std
cmp
mov
sub
popa
ja
push
fucomip
fisubrs
jno
pop
mov
pop
xchg
sbb
mov
lret
xor
cmp
stos
xor
jae
xchg
mov
mov
push
shll
stc
repnz
or
cmp
sub
xchg
scas
push
fmull
mov
dec
dec
xorl
negl
fnsave
femms
data16
dec
xchg
push
jno
inc
enter
frstor
repz
loopne
mov
push
rcll
sbb
shrb
outsl
mov
and
xor
or
icebp
and
sbb
pop
imul
xor
std
ja
dec
aas
mov
pop
lock
sbb
leave
nop
inc
popa
sbb
sbb
sub
mov
lcall
pop
push
sub
imul
loop
sti
icebp
add
xchg
pop
add
cs
sub
sbb
jbe
arpl
jo
cmp
jecxz
clc
popa
jo
push
loopne
mov
filds
jl
pop
fisttpll
xlat
xchg
popa
stos
cmp
and
bound
and
fstpl
fisttpll
fstl
inc
enter
test
and
fildll
push
js
inc
sub
mov
xor
push
xor
add
push
shll
pop
sbb
int
or
add
cltd
sbb
cld
xchg
pop
push
sub
adc
add
ret
add
or
xor
push
jge
imul
aaa
add
cli
inc
ret
sub
pop
sti
add
adc
push
xor
jnp
pop
add
add
iret
xorb
jae
in
outsb
add
mov
add
lds
rolb
add
out
xchg
push
adcb
mov
loopne
mov
ret
mov
cs
inc
or
fcoms
jb
mov
orb
addb
push
push
cli
rolb
out
add
out
sub
inc
loopne
and
dec
orb
xor
xor
repnz
lods
push
stc
dec
cmp
subb
jne
imul
lcall
add
xor
and
push
adc
push
or
adc
dec
roll
or
dec
add
jp
gs
dec
icebp
ljmp
ds
mov
insl
xchg
popa
add
mov
xor
adc
mov
push
xchg
mov
dec
cltd
inc
imul
insl
popa
push
ds
mov
dec
inc
xchg
insb
inc
dec
add
and
clc
mov
ljmp
imul
xchg
add
je
bound
aaa
mov
sti
add
jbe
push
push
les
loop
mov
rorb
sub
and
call
xchg
arpl
lcall
push
sub
insb
mov
dec
or
add
inc
jb
inc
sub
prefetcht1
add
gs
xchg
add
add
xchg
mov
inc
enter
hlt
insb
imul
arpl
outsl
xchg
es
dec
mov
lcall
pusha
rorb
inc
clc
inc
loop
mov
add
cld
das
sub
and
mov
adc
rcrb
or
testb
sbb
arpl
adc
sar
and
add
add
incb
push
sub
je
inc
xchg
movsb
ret
push
nop
push
imul
pop
push
mov
push
adc
jmp
out
sbb
popa
xchg
ss
and
aam
subb
sub
push
cmp
dec
sbb
mov
loop
bound
sub
mulb
shrb
xchg
or
icebp
push
xor
push
cmp
inc
insb
mov
insb
ret
mov
incl
mov
mov
pop
stos
test
add
insl
test
fs
lea
je
je
and
or
les
shll
inc
push
out
mov
xchg
ret
xor
fistpll
test
inc
insb
mov
rorl
mov
gs
mov
shll
jae
jb
nop
push
jecxz
ret
ja
ret
loop
pop
bound
dec
xchg
pop
out
and
mov
add
jbe
xchg
mov
inc
add
add
adc
add
loopne
xor
ret
mov
mov
shrb
jb
loop
adc
je
sub
jne
add
dec
inc
gs
mov
or
push
lods
inc
add
mov
arpl
mov
xchg
jae
add
pushl
push
stos
pusha
push
loopne
mov
pop
mov
and
mov
push
shrb
or
lea
or
adcb
out
add
inc
add
pusha
or
aaa
cld
movsb
or
sbb
jecxz
xchg
icebp
pop
data16
ds
cwtl
pusha
adc
adc
insl
repnz
xchg
pusha
es
insb
jmp
les
imul
push
imul
and
add
adc
jb
mov
mov
fs
sub
and
pop
inc
nop
insl
jo
sbb
sub
popa
dec
icebp
pop
cld
pop
dec
nop
mov
jne
arpl
add
in
adc
scas
js
cmp
adc
adc
jne
arpl
xchg
aam
dec
push
ds
pop
add
idivb
into
sbb
mov
lods
mov
icebp
add
in
test
cmp
sub
js
mov
cli
lods
rcrl
xor
popf
xchg
push
ljmpw
dec
push
sub
popa
mov
sbb
das
inc
xchg
add
fistps
test
gs
loop
mov
jb
jg
cmp
dec
push
roll
sahf
xor
xor
gs
outsb
jns
ret
les
call
ret
aam
mull
inc
popa
fwait
push
gs
inc
push
inc
jg
and
in
inc
adcb
jg
mov
inc
add
xchg
xor
dec
test
inc
inc
insb
xchg
jg
ret
jg
or
jne
jns
jmp
in
daa
fs
xchg
dec
lcall
fs
add
fcmovbe
sub
add
xchg
int
arpl
divb
enter
push
or
and
insl
clc
aaa
mov
cmpb
mov
xchg
jmp
xchg
outsl
push
loope
stos
imul
push
add
or
add
xlat
fwait
sbb
or
push
scas
and
add
pop
sarl
test
xchg
push
dec
mov
cmp
xor
mov
push
push
xor
dec
ret
pusha
and
outsb
inc
mov
clc
mov
popa
xor
pop
jne
lea
jecxz
dec
loopne
popa
inc
shll
inc
xchg
xor
jb
loopne
pusha
cld
jne
lds
push
add
fs
and
lcall
lcall
jb
or
dec
popa
sbb
sub
inc
mov
clc
mov
and
in
or
inc
outsl
mov
stos
insl
mov
xor
pop
cld
ja
cmp
mov
push
add
dec
adc
dec
call
adc
dec
inc
outsb
data16
cwtl
pop
js
std
mov
push
insb
lock
pusha
push
out
mov
xor
pop
lock
inc
lods
in
mov
addb
jmp
fldt
out
imul
inc
xchg
jb
jae
cmp
mov
xor
dec
adc
xor
mov
pop
js
xchg
jle
int3
xor
fdiv
and
lahf
adc
cmpsb
mov
push
pusha
test
sahf
jno
aaa
std
aaa
cld
pop
inc
or
dec
mov
mov
xor
mov
cmp
pop
xor
mov
nop
jo
xchg
fwait
pop
mov
test
jne
cmpsb
dec
popa
insl
lcall
dec
test
xor
adc
imul
ljmp
call
cmp
inc
js
adc
repnz
jmp
cmp
lcall
test
loopne
hlt
cmp
ljmp
mov
repnz
inc
xor
push
repnz
push
cmc
decl
push
imul
xor
add
cld
jo
sbb
mov
add
cld
push
push
xor
jae
sahf
xor
jle
add
mov
jae
ja
cwtl
mov
add
icebp
or
push
pusha
das
xchg
mov
cmpsb
cmp
adc
mov
ljmp
xor
adcb
sahf
fdivl
ficoml
and
inc
je
shl
pop
mov
cmp
mov
fs
mov
mov
pop
lods
cmp
mov
inc
push
dec
fbld
mov
shll
addb
jp
mov
ja
jo
add
outsb
imul
fs
push
bound
js
jecxz
popa
lea
es
push
push
gs
popf
and
pusha
iret
pusha
testb
adc
jae
xor
nop
imulb
out
mov
inc
push
mov
lock
mov
sbb
cmpsb
ja
jp
dec
rcr
lds
and
imul
jo
cs
xchg
icebp
push
mov
in
mov
mov
sub
sbb
and
outsl
jae
arpl
add
adc
negb
xor
outsl
adc
insb
xor
inc
and
push
xor
sti
pop
mov
icebp
sub
es
jnp
xor
add
push
jo
addl
cwtl
loopne
dec
push
xchg
insb
mov
test
pop
dec
mov
add
push
or
je
push
outsl
in
data16
clc
decl
dec
inc
dec
mov
fwait
jno
jo
fcomip
or
inc
mov
push
nop
lock
fcom
cmc
mulb
or
gs
insb
inc
jae
inc
mov
test
scas
mov
mov
dec
sahf
add
and
rcrl
add
gs
mov
xchg
cmp
add
nop
push
jb
and
xor
divl
xchg
inc
shll
ret
push
fs
and
xor
or
lcall
test
aad
xor
dec
outsb
jne
inc
lcall
push
cwtl
imul
push
icebp
push
ljmp
addr16
test
addb
jp
add
pop
lock
sbb
mov
dec
jnp
inc
sbb
icebp
pop
hlt
and
push
jo
mov
lock
push
es
inc
cmpsb
jbe
sbb
lods
mov
jo
push
sub
sbb
stos
push
xchg
xor
je
repnz
mov
fs
cld
fbstp
inc
xor
mov
mov
mov
mov
xlat
inc
repnz
lock
lret
mov
outsl
push
pop
cmpb
or
or
rcl
inc
pop
and
lds
lcall
test
lock
sarb
cli
mov
ja
inc
out
add
add
pop
dec
ret
imul
addb
sub
bnd
add
mov
push
xchg
pusha
outsl
mov
pop
jge
adc
cli
xchg
imul
lock
sub
test
or
push
outsl
cmp
add
jno
dec
loopne
lock
inc
jae
add
push
xor
xor
mov
cmp
jbe
push
and
dec
xchg
mov
fbld
in
popa
je
push
add
cwtl
push
cli
hlt
adc
mov
mov
inc
jo
mov
push
mov
xchg
sub
adc
insl
cmp
mov
jo
mov
jae
xor
lock
jo
mov
jle
pop
enter
sub
jae
testb
sbb
jbe
or
test
pushl
adc
ss
mov
cmovno
xlat
inc
rorb
std
icebp
mov
shrb
push
xchg
icebp
or
add
enter
fs
in
jb
pushl
add
inc
je
aaa
mov
pushf
mov
mov
sbb
push
jo
hlt
jge
stos
movsb
into
and
inc
ljmp
add
and
sbb
jne
sub
out
clc
jo
jo
pusha
outsl
mov
aaa
add
test
adc
mov
popa
shrb
jne
adc
stos
cmp
add
add
inc
add
mov
inc
xchg
add
mov
inc
adc
add
lock
or
push
push
sub
data16
bound
push
arpl
inc
xor
push
add
xchg
add
mov
js
dec
addb
or
mov
push
mov
insl
mov
das
xor
das
push
mov
mov
imul
cmpb
lods
add
mov
push
pushf
add
push
gs
imul
js
dec
inc
test
sahf
mov
add
fwait
and
xorb
decb
addl
and
add
ja
mov
add
cwtl
subb
push
xchg
inc
insb
imul
push
jb
rolb
mov
mov
sub
xor
jle
nop
daa
pop
cmc
push
stos
push
inc
push
int3
mov
fs
insb
mov
pop
cmp
addl
lcall
cld
dec
outsl
push
xor
push
mov
jbe
sub
xchg
orl
adc
inc
addl
or
sahf
addl
bound
imul
adcl
add
add
mulb
fs
xchg
adc
lea
cwtl
je
addb
test
push
rclb
scas
cltd
or
cs
test
mov
les
mov
mov
xor
jns
arpl
or
js
pop
xorb
dec
push
lcall
sti
dec
arpl
jo
inc
out
arpl
mov
insl
outsb
push
icebp
push
dec
sahf
insl
dec
fs
inc
lea
ret
jle
xchg
inc
jbe
jb
cmpsb
pop
cwtl
mov
push
jb
xchg
jae
adc
jmp
xor
mov
iret
add
inc
dec
ret
into
sbb
sbb
lcall
jns
push
pop
xchg
data16
filds
popa
sub
shlb
xor
sarb
insl
mov
ret
add
jo
jb
dec
push
shrl
dec
push
xchg
ss
fistps
fsubl
aam
ret
or
sub
sarl
sub
fidivrl
dec
test
push
push
inc
mov
shll
cmp
inc
adc
xchg
cmpsb
fwait
rcr
enter
push
ss
popa
mov
push
ret
mov
add
inc
pushf
loopne
lea
inc
adc
jle
rorb
in
pushl
sbb
enter
add
ret
xchg
rorb
add
push
fcmovnb
aaa
ret
and
je
mov
mov
int3
dec
add
adc
imul
test
jp
outsl
scas
xchg
bound
push
das
les
cld
add
sbb
push
xchg
pushl
pop
movsb
push
pop
cmpsl
rorb
je
pusha
outsl
jl
loopne
gs
insb
in
mov
cld
or
push
mov
pusha
xor
add
push
xchg
insb
lcall
out
push
add
or
or
icebp
jg
push
mov
inc
and
push
dec
in
in
outsl
mov
push
outsb
loopne
popa
jo
mov
mov
add
add
sbb
gs
in
pop
in
ja
and
mov
push
data16
outsb
jae
or
ja
inc
loopne
push
dec
mov
dec
mov
jnp
rcrb
cwtl
xchg
or
loope
pusha
cmp
scas
fs
xchg
test
loopne
les
and
or
popa
fdivs
mov
adc
ret
testb
popa
xchg
push
imul
cmpsb
pop
mov
mov
mov
add
dec
jae
push
dec
pusha
push
push
bound
mov
rolb
adc
arpl
push
push
jnp
lcall
add
and
inc
dec
lock
or
loopne
push
add
pop
outsb
mov
adc
pop
inc
mov
inc
inc
pusha
inc
mov
add
aam
mov
lods
imul
movsb
adc
lahf
fdivrs
jno
jne
pusha
push
cs
or
loopne
test
adc
inc
arpl
cmp
int3
and
add
mov
cwtl
mov
push
stos
push
cwtl
fcoms
or
dec
pop
gs
adc
std
inc
jb
mov
push
push
add
mov
add
sbbb
loopne
push
mov
jnp
push
jle
dec
mov
push
mov
insb
mov
add
mov
mov
jg
push
arpl
inc
bound
pusha
or
loopne
stos
mov
clc
je
outsb
arpl
popa
shlb
mov
sbb
adc
pop
rorb
adcb
inc
mov
insl
mov
add
inc
inc
add
pusha
add
mov
call
in
loopne
gs
outsb
jo
mov
clc
or
adc
pusha
or
loop
sbb
or
in
xor
pop
cwtl
and
inc
jbe
enter
mov
add
inc
loopne
popa
adc
bound
xchg
dec
or
fs
popa
loop
mov
bound
mov
or
int
add
fs
call
data16
inc
insb
adc
mov
pusha
addl
test
jbe
loop
mov
flds
test
inc
adc
jle
or
repnz
sub
lea
and
popa
mov
jl
push
insl
in
inc
dec
mov
inc
dec
inc
sub
sbb
mov
cmp
fwait
loopne
orl
or
inc
int
push
fs
add
add
inc
pop
xor
icebp
or
int3
push
push
mov
mov
xor
ljmp
push
aad
add
inc
pop
sub
arpl
or
add
push
in
shrb
stos
aad
jae
ss
dec
jbe
insb
adc
sbb
jo
xor
int
jl
inc
and
xor
insb
mov
fldt
mov
outsl
je
sbb
xchg
add
add
and
les
mov
js
inc
and
icebp
inc
pushl
xchg
arpl
lea
cmpsb
jle
ljmp
stos
mov
subb
jb
sarb
or
inc
sub
add
outsb
jne
xor
add
clc
add
push
js
mov
in
mov
repnz
insb
push
xor
lock
js
xor
je
xor
scas
inc
pop
lcall
mov
shrb
out
andb
push
cmpsb
push
push
hlt
mov
or
test
or
xor
jle
pop
in
add
outsb
jo
pusha
jne
xchg
pop
jo
mov
aam
adc
orl
push
mov
or
outsb
mov
mov
add
xchg
push
jno
mov
je
mov
lcall
inc
mov
xchg
dec
lods
push
lods
xor
xor
xchg
mov
mov
lret
in
out
adc
test
xor
adc
push
inc
insb
pop
mov
or
add
insb
xor
jbe
lock
out
xchg
xorb
ret
call
add
insb
lock
or
add
mov
inc
jbe
xchg
sub
inc
pop
mov
fildll
mov
fadds
adc
cwtl
dec
adcb
jbe
dec
mov
in
mov
mov
outsl
pushf
or
or
or
push
lea
movsb
ja
sbbb
push
push
mov
push
push
lcall
dec
mov
push
xchg
testb
andl
lock
pop
jbe
lock
ljmp
pusha
outsl
xchg
imul
mov
dec
inc
stos
repnz
dec
dec
loopne
insb
mov
xor
mov
jo
icebp
popl
call
ret
imul
mov
cmpsb
jp
jo
std
xor
push
xor
and
rcr
call
dec
mov
push
add
mov
cmp
insl
repnz
lock
gs
push
mov
jb
fmuls
arpl
dec
mov
sub
jle
or
ja
outsl
imul
filds
loop
add
add
adc
je
popa
lock
mov
arpl
clc
decl
xchg
jae
arpl
je
xor
stos
push
sarl
sub
xchg
push
arpl
add
hlt
call
popf
jne
inc
mov
xor
out
push
je
jnp
or
push
inc
or
inc
test
cli
je
dec
push
mov
test
lret
inc
xchg
mov
fs
dec
xor
cmpsb
pop
add
jb
pop
add
cmp
pop
enterw
mov
sub
push
cli
test
aaa
inc
mulb
dec
pop
jo
js
sbb
add
xor
add
add
pop
subl
mov
sub
jmp
inc
mov
and
sbb
cmpsl
rolb
mov
jo
hlt
add
push
xchg
jg
bound
out
divl
mov
adc
mov
add
movsl
loop
mov
ret
fisubs
outsl
cmp
fcomi
adc
mov
inc
mov
cmc
sbb
mov
xor
mov
sbb
lock
lcall
lcall
popf
add
das
pop
std
and
dec
out
addl
jg
push
xor
xchg
mov
scas
inc
inc
push
mov
add
jle
mov
mov
cmp
aad
xor
dec
pop
xchg
cmpsb
jg
orl
xor
filds
in
testl
push
in
pop
loopne
mov
jmp
stos
push
inc
pop
out
jecxz
repnz
jnp
es
mov
pop
stos
pop
scas
mov
cmp
cli
inc
adc
add
repz
loope
test
inc
lcall
out
mov
or
addl
dec
cmpsl
inc
in
insb
cmp
inc
cli
cwtl
push
shll
lds
push
ret
mov
pop
add
lock
and
pop
mov
popa
cs
pop
jbe
stc
add
addr16
xchg
clc
repz
fldl
xchg
fisttps
add
lock
pushl
adc
int3
int
xor
mov
or
pop
jo
sub
cmp
mov
cs
in
xor
cmp
sub
out
pop
pop
dec
shl
xor
mov
mov
stos
inc
xor
cmpsl
out
aas
mov
add
lock
cld
fbstp
cmp
aad
xchg
jb
nop
out
cmp
decl
ja
stos
in
rorb
mov
mov
leave
aas
insl
les
jge
mov
adc
adc
lcall
movb
jle
lods
push
lock
xchg
aas
dec
mov
jp
incl
xor
push
pop
roll
pop
aas
sub
das
jp
mov
xchg
test
sti
cwtl
mov
daa
ljmp
aas
subb
das
fstl
add
push
int3
fcoml
xchg
cmpl
arpl
jl
mov
cmp
das
rcr
sub
std
xlat
cmp
mov
in
call
loopne
cmpsb
add
cmp
jne
or
cmp
jno
rolb
xor
mov
pop
in
pop
xchg
xorb
pop
aad
mov
adc
mov
or
xchg
xor
dec
in
leave
shl
aaa
push
std
add
imul
ret
call
mov
pop
test
cmp
scas
sbb
dec
aaa
dec
bound
scas
stc
xchg
jge
sbb
ficomps
and
inc
xor
mov
add
icebp
or
addr16
scas
inc
push
pop
orl
aaa
imul
addl
sbb
addb
dec
stos
adcb
lods
adc
mov
mov
into
mov
cmpsb
imul
roll
push
fisubl
lcall
and
mov
cltd
addl
dec
or
add
add
add
inc
add
cmp
lods
cmpsb
insl
aaa
imul
add
lea
stos
sbb
das
aaa
inc
dec
sarl
add
xchg
arpl
jge
push
arpl
xor
ret
inc
push
cltd
lahf
lret
add
int3
add
mov
mov
mov
in
mov
add
mov
push
dec
add
sbb
inc
fwait
cmpsb
mov
adc
int3
mov
insl
fistpl
pushf
adc
add
imul
push
mov
mov
insb
xchg
lret
xor
icebp
insl
mov
ss
dec
test
and
outsb
mov
mov
insb
fildl
adc
jl
das
sub
int
jge
mov
jmp
push
push
mov
popa
xor
js
sub
jmp
arpl
jmp
xchg
int
or
sub
adc
mov
cs
es
rorb
adc
fbld
lret
clc
int
cmp
push
aaa
mov
aas
adc
aaa
daa
aaa
in
paddb
idivl
adc
adc
hlt
inc
adc
cmp
cmp
out
cmp
out
sbb
xlat
fbstp
mov
and
ja
sarb
cmp
sahf
mov
mov
xor
xor
xor
xor
adc
xor
xor
addb
cmp
es
insb
pop
les
fwait
enter
aam
cmp
cmp
adc
jbe
cmp
ret
add
cmp
cmp
push
adc
inc
adcb
mov
add
cmp
cmp
jg
arpl
cmp
mov
inc
cmp
cmp
adc
cmp
loopne
adc
add
repz
xor
outsl
and
adc
cmp
push
mov
cmp
outsl
cmpl
arpl
adc
add
sbb
stc
fwait
mov
mov
repz
and
sarl
xchg
dec
cwtl
mov
ds
sbb
xchg
mov
sbb
arpl
mov
je
mov
inc
les
xor
and
in
adc
mov
repz
add
add
repz
lea
sbb
mov
jg
mov
mov
mov
aas
aas
cmpl
aas
jae
aas
arpl
mov
movsb
aas
push
aas
aas
inc
sbb
aas
fadds
popa
mov
xchg
xchg
dec
sbb
rclb
decb
xor
sub
lret
fwait
enter
cmp
mov
xor
adc
adc
mov
pushf
xor
lods
xor
xor
sub
sub
xor
xor
mov
mov
cld
xor
add
and
fldt
cmp
mov
xor
xor
jl
jnp
mov
test
fwait
xor
pushf
xor
lods
xor
and
fdivl
sti
int
sbb
cld
xor
xor
mov
adc
into
sub
mov
cmp
dec
mov
dec
xor
pop
xor
mov
jl
sbb
pushf
ss
xor
mov
mov
xor
shl
xor
xor
xor
xor
cld
mov
pop
or
mov
sbb
sbb
flds
out
mov
xor
xor
xor
xor
xor
int
es
sbb
adc
ss
xor
mov
xor
xor
xor
outsl
fbld
xor
xor
xor
xor
xor
xor
ss
or
jo
mov
mov
adc
pushl
mov
lods
ds
aas
insb
aas
inc
jno
sbb
push
mov
rolb
or
dec
mov
nop
pop
add
jecxz
xchg
add
outsl
xor
int
call
aaa
test
mov
cli
cmp
cmp
mov
add
add
ss
add
add
roll
scas
xor
outsb
mov
cmp
cmp
cmp
es
cmp
cmp
in
sbb
cmp
add
pushl
push
or
jl
aas
inc
sbb
pop
xor
insb
bound
xor
into
xor
mov
aas
repz
xor
xor
decl
ja
push
xor
push
aaa
jb
dec
cld
add
mov
nop
cmp
inc
popa
stc
add
cmp
cmp
add
sbb
sbb
cmp
cmp
aas
mov
cmp
xorl
lock
mov
push
repnz
cmp
xor
rcr
add
xor
aaa
push
aaa
lret
loopne
pushl
jg
cmp
cmp
cmp
sub
cmp
inc
inc
cmp
cmp
cmp
mov
outsl
jmp
dec
push
out
cmp
cmp
rclb
jo
push
hlt
fcmovnu
lock
cmp
adc
fdivrs
and
aad
scas
es
cmp
cmp
adc
fsubrs
gs
stos
aaa
jl
jb
jp
cmp
cmp
xchg
cmp
jg
xor
cwtl
cmp
cmp
out
in
jo
cs
mov
push
inc
aas
repnz
stos
lock
xchg
push
xor
insl
adc
ds
sub
xor
xor
xor
data16
sub
loopne
cmp
cmp
cmp
cmp
popw
cmp
cmp
cmp
mulb
mov
mov
aam
or
pop
cld
pop
jbe
nop
push
test
xor
inc
mov
add
xor
xor
xor
xor
hlt
xor
adc
mov
mov
add
into
xor
xor
xor
clc
xor
ds
ss
push
sub
popa
in
cmp
sbb
xchg
cmp
cmp
pop
cli
cmp
dec
push
cmp
add
jmp
adc
cmp
cmp
cmp
cmp
pop
lock
loopne
sbb
add
adc
aaa
ds
jo
push
ds
std
ja
out
sarl
aas
jp
fwait
aas
sub
adc
dec
sarl
incl
adc
sbb
dec
xor
add
xor
xchg
ret
xor
xor
push
jl
lahf
xor
xor
xor
adc
xor
add
ss
scas
cli
call
in
mov
ss
aaa
adc
jge
lea
fs
pushl
cmp
push
cs
cmp
cmp
adc
mov
or
sub
inc
cmp
cmp
cmp
js
sarl
cmp
sub
and
xor
in
adc
sbb
ds
ds
pop
mov
into
adc
aas
lds
inc
aas
mov
aas
push
aas
sub
and
sbb
loopne
lods
mov
lods
aad
call
popa
xor
mov
jne
xchg
xor
xchg
ret
xor
xor
call
jecxz
in
and
or
pop
cmp
cmp
adc
outsl
clc
out
repz
outsb
jge
mov
ret
jo
dec
mov
inc
dec
das
orb
xor
ret
incb
xor
inc
xor
jbe
incl
mov
xor
arpl
mov
add
imulb
cld
lock
cltd
cmp
mov
adc
cmp
cmp
xor
mov
pop
cmp
sub
cmp
add
jmp
dec
or
jo
lret
xor
sub
mov
xor
roll
dec
xchg
xor
xor
xor
ret
push
cltd
mov
ss
ss
adc
shll
cwtl
mov
mov
cmp
lds
lret
cmp
cmp
cmp
cs
cmp
arpl
cmpsb
and
cmpsb
xlat
inc
adc
push
cmc
pop
cld
add
xchg
aaa
and
out
sub
fidivrs
add
jl
popa
mov
cmp
adc
pop
xor
cmp
fsub
xor
cmp
cmp
cmp
mov
mov
mov
repnz
mov
clc
cmp
call
call
mov
jle
lcall
in
cmp
adc
jo
mov
sar
ljmp
jmp
popa
lea
mov
xor
mov
mov
or
mov
xor
mov
int3
cmp
xor
fdivs
aam
daa
xor
adc
xor
mov
jo
pop
std
mov
divb
xor
fiaddl
js
xor
and
xlat
lcall
iret
xor
xor
mov
add
push
xor
dec
fbstp
lahf
xor
insb
xor
jl
cmpb
xor
mov
add
pop
movsb
xor
outsb
jg
sub
xor
ss
add
ss
adc
cld
insl
ret
int
pop
lahf
ss
ss
xchg
jl
cld
int
jg
test
ja
mov
xchg
ss
pop
movsb
ss
fcomip
pushl
lods
orb
ss
ss
aaa
ss
ss
add
pop
fdivl
incb
adc
mov
or
cmpb
ds
aas
mov
aas
shlb
loop
cld
ljmp
push
std
mov
inc
xor
xor
out
jb
or
xor
lcall
aas
add
pop
stos
xor
cwtl
push
xor
fcomip
out
cli
adc
mov
mov
ret
xor
bound
xor
xor
adc
hlt
inc
xor
add
stc
nop
imul
sbb
fbstp
sub
iret
adc
jg
xor
add
test
outsl
mov
and
xor
xor
xor
adc
push
inc
jg
xor
xor
xor
scas
mov
jo
adc
xor
xor
lock
hlt
add
out
push
pop
loopne
sub
mov
push
fisttpll
cwtl
xor
rorb
rolb
mov
sbb
out
xor
xor
lock
pop
pusha
cmpsb
mov
pusha
ds
xor
ljmp
ret
xor
ss
push
cmpsb
push
cmp
adc
jo
dec
jg
lock
sub
aaa
push
aaa
movsl
add
jb
xchg
test
insl
fwait
clc
out
adc
aaa
xor
divl
add
loope
xor
dec
or
cmpl
cmp
mov
cmp
fimuls
cmp
or
loop
cmp
cmp
inc
decl
std
cmp
cmp
cmp
adc
cmp
cmp
cmp
shrb
cmp
aas
test
rclb
adc
cmp
cmp
in
stos
add
outsl
rclb
adc
and
and
add
and
scas
sub
push
mov
adc
cmpsb
xor
xor
jecxz
outsl
fsubs
xor
xlat
xor
xor
xor
sar
xchg
add
xor
xor
xor
clc
mov
xor
test
xchg
xor
mov
mov
pop
cld
out
xor
xor
xor
xor
fidivl
add
inc
xor
sub
adc
xor
std
aaa
jge
xor
movsb
xor
xor
xor
fdivs
xor
xor
sbb
cmp
xor
ss
ret
scas
out
ss
sahf
sub
fldt
loope
fdiv
or
stc
into
add
aaa
in
aaa
pop
aaa
jecxz
or
push
dec
fnstenv
sub
iret
aaa
xor
insb
dec
aaa
mov
push
aaa
mov
aaa
pop
aaa
popf
aaa
addr16
xchg
aaa
jno
mov
jnp
jg
test
jne
push
aaa
cltd
ljmp
mov
aaa
mov
inc
aaa
shll
aaa
lret
aaa
das
aaa
aad
jmp
aaa
jmp
aaa
pop
aaa
std
add
pop
cmp
cmp
cmp
cmp
cmp
cmp
decl
and
push
cmp
sarl
cmp
inc
mov
cmp
jne
test
jg
jnp
mov
jno
xchg
cmp
ljmp
cwtl
cmp
cmpsl
cmp
mov
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
out
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
cmp
stos
cmp
xchg
cmp
xchg
jg
outsl
cmp
cmp
push
cmp
jmp
cmp
lods
cmp
cmp
pop
cmp
and
leave
cs
cmc
divl
test
xchg
mov
sub
xor
xchg
shlb
into
sti
push
mov
ljmp
jb
push
cmp
cmp
ja
pop
jo
cmp
cmp
jl
inc
cmp
incb
cld
cmp
cmp
cmp
cmp
cmp
push
fstpt
je
jg
out
cmp
adc
push
ds
ds
mov
loop
stos
icebp
aas
ret
inc
call
mov
or
lods
xor
xor
outsb
sub
in
jecxz
jl
inc
xor
dec
mov
fwait
icebp
xor
xor
add
xor
xchg
and
std
jg
mov
push
xor
xor
jbe
adc
or
jp
cli
push
mov
jbe
push
aaa
mov
push
cmp
push
jl
test
inc
cmp
cmp
cmp
maxps
lods
inc
outsb
cs
cmp
sub
dec
ds
mov
jg
jbe
arpl
test
ljmp
cmpsl
sub
outsb
xchg
aas
dec
aas
out
mov
cli
repz
xor
xor
xchg
xchg
subb
add
push
xor
xor
xor
enter
pop
push
xor
cmp
jg
cmp
shll
loope
and
rolb
jno
jmp
adc
mov
pop
xor
call
mov
fnsave
mov
mov
dec
ss
inc
inc
inc
mov
jb
mov
add
pop
in
push
cmp
decl
dec
cmp
leave
cmp
jg
xchg
jb
lahf
cmp
jg
cmp
aas
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
aas
cmp
xlat
cmp
push
scas
ds
ds
mov
lods
aas
cwtl
xor
iret
into
mov
xlat
xor
sub
xor
xor
inc
xor
xor
xor
subl
ljmp
xor
add
loopne
xor
daa
xor
ss
rcrl
loopne
rcrl
cmp
cmp
cld
mov
out
cmp
mov
lret
sbb
cmp
cmp
cmp
lods
cli
ds
ds
push
test
sub
cmpsl
cmp
out
inc
cmp
xor
rcrb
leave
xor
loop
mov
mov
xor
xorb
inc
dec
mov
adc
fbstp
sub
dec
ss
ss
rorb
jg
stos
cmpb
aaa
scas
aaa
cmp
cmp
cmp
pushf
cmp
cmp
cmp
cmp
cmp
cmpsl
ds
shl
xor
and
out
imul
pop
stos
inc
xor
lcall
mov
adc
add
enter
cmp
loop
xor
xor
xor
xor
fdivs
jb
repnz
push
ljmp
call
push
inc
aaa
test
aaa
mov
cmp
cmp
ljmp
cmp
mov
cmp
jp
fdivrl
lds
dec
xchg
lcall
incl
push
sbb
xor
xor
jg
lods
xor
xor
xor
mov
xor
mov
push
push
jo
imul
mov
std
jg
add
bound
cmp
cmp
cmp
idivb
jmp
mov
les
sar
adc
jmp
pop
jecxz
jge
xor
xor
xor
pop
xor
xor
lcall
ret
lcall
in
or
jg
and
sti
xor
sbb
lock
test
push
lods
fwait
aaa
push
aaa
mov
repnz
loopne
and
cmp
push
repnz
and
pop
push
fs
jae
test
mov
out
pop
sub
mov
arpl
cmp
cmp
cmp
cmp
mov
add
cmp
pop
test
push
cmp
cmp
push
lea
or
das
cmpsb
inc
cmp
sahf
jne,pt
xor
sar
aas
add
push
xor
xchg
xor
xor
xor
ljmp
jg
push
xor
xor
outsb
aaa
stos
aaa
inc
aaa
sbb
sarb
ret
cmpsl
inc
pop
jo
jns
test
lds
push
push
or
pop
cmp
rolb
pop
cld
cmp
cmp
cmp
add
xchg
cmp
cmp
clc
out
clc
aaa
jo
cmp
cmp
cmp
cmp
mov
cmp
cmp
or
xlat
outsl
cwtl
cmp
mov
pusha
jp
pop
je
cmp
push
arpl
add
mov
pop
pop
xchg
xor
xor
lock
lcall
xor
xor
pop
xor
mov
mov
cs
xor
cmpsb
mov
ret
cli
mov
movsl
stos
pop
push
mov
xor
in
xor
rolb
out
or
ret
jg
in
and
enter
scas
cmp
clc
cmp
dec
pop
call
pop
cld
cmp
cmp
cld
scas
inc
aas
pushf
push
clc
xchg
push
aaa
xor
xor
xor
mov
xchg
sbb
xor
mov
xor
xchg
xor
cs
fcmovbe
or
and
pop
loopne
popf
xor
mov
mov
xor
xor
dec
adc
sub
xor
xor
xor
dec
or
xor
decl
inc
push
xchg
dec
ret
aaa
fdivl
sbb
mov
es
lcall
aas
std
cmc
cmp
cmp
clc
cmp
cli
mov
cmp
cmp
ds
ljmp
cld
ds
aaa
inc
addr16
or
cli
add
divb
xor
int
inc
fbstp
jo
mov
fdivr
pop
clc
outsl
push
popa
xor
xor
xor
xor
push
adc
mov
scas
cmp
cmp
add
outsl
add
cmp
cmp
cmp
incl
cld
aad
cltd
cmp
leave
sarb
cmp
cmp
cmp
mov
xchg
cmp
inc
cmp
mov
ds
cmp
jg
cli
add
aas
cmp
mov
outsb
or
jo
push
mov
push
cs
mov
mov
add
ljmp
sbb
pop
xor
xor
addr16
std
xchg
sub
jge
xchg
xor
mov
push
incl
xor
movsb
xor
jno
stos
cmp
xor
xor
xor
dec
mov
stos
scas
or
fdivs
fisttps
ss
ss
imul
pop
aaa
xchg
aaa
mov
jmp
jmp
cmp
pop
cmp
cmp
cmp
cmp
jg
sub
mov
cmp
int
push
cmp
sbb
hlt
cmp
add
pop
lret
cmp
ds
cltd
and
shlb
push
je
movsl
xor
jecxz
shlb
xor
xor
xor
pop
lods
dec
xor
push
mov
xor
xor
lret
xor
sahf
hlt
xor
xor
mov
ret
mov
mov
xor
xor
jge
fs
cmpsb
pop
xor
push
cmp
xor
sub
inc
and
cmpsb
lea
xor
xor
ret
outsb
fsubrl
mov
sub
aaa
in
inc
sbb
add
push
lcall
push
ret
mov
cmp
stos
ljmp
out
cmp
cmp
cmp
add
jmp
cmp
cmp
cmp
adc
push
pop
shrb
cmpb
cmp
lds
xor
cmp
or
cmp
lret
cli
je
jo
ret
dec
xor
cmp
lcall
cmp
cld
or
ds
jle,pt
inc
push
ds
aas
insb
stos
clc
pushl
aas
cmpsb
aas
data16
push
aas
sarb
aas
divb
repz
stos
cmc
shl
enter
jge
push
loope
push
sbb
xor
xor
xor
out
bound
mov
xor
push
out
xor
jae
cwtl
xor
xor
xorb
xor
mov
and
jmp
std
pushl
fidivl
xor
xor
xor
xor
xor
xor
xor
mov
xchg
test
mov
jb
aaa
mov
into
or
cmp
mov
lcall
and
cmc
cmp
cmp
sbbb
stos
cmc
cmp
and
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
icebp
rcll
cmp
test
lds
sub
ds
rclb
incl
add
ds
xchg
push
xor
aas
ds
mov
orb
test
and
or
xorb
or
xor
incb
xor
dec
push
or
jg
xor
xor
jbe
inc
xor
aaa
push
cmp
push
bound
push
pop
jmp
cmp
cmp
loop
jg
mov
inc
aas
test
nop
xchg
sub
xor
bnd
xor
outsb
mov
xchg
xor
bound
test
mov
pop
lret
out
out
xor
icebp
cmpsb
add
xor
psrld
out
push
pop
mov
aam
adc
ljmp
dec
inc
ljmp
movsb
and
addr16
outsl
push
xchg
mov
fs
xchg
inc
sub
lahf
mov
cmpsl
lret
mov
icebp
inc
pop
movsb
mov
aaa
cmpsb
push
loop
adc
cmp
or
or
cmp
pop
sbb
cmp
xchg
je
icebp
mov
out
dec
inc
xor
lea
push
add
bound
xor
mov
into
jg
ljmp
xor
xor
xchg
mov
add
dec
mov
in
aad
les
ss
pop
jne
inc
cld
ds
xor
adc
cmp
loop
add
push
jp
aaa
jl
push
outsb
fmull
scas
cmp
push
jecxz
sbb
cmp
sarb
lods
cmp
fstl
cmp
cmp
sub
push
and
adc
cmp
cmp
add
ljmp
xor
loop
inc
cmp
cmp
cmp
cmp
cmp
pop
mov
outsl
cmp
sbb
loopne
stos
icebp
cmp
movsl
cmp
call
sbb
sbb
cmp
js,pt
push
loopne,pt
or
and
lret
sub
push
dec
aas
ja
mov
dec
sbb
sbb
test
pusha
pop
filds
js
jg
ret
xor
xor
add
pushl
pop
xor
jno
inc
scas
jge
xor
add
and
xchg
aaa
xlat
aaa
out
cmp
std
cmp
mov
and
int3
cmp
jge
lock
stos
int3
mov
push
or
pop
enter
cmp
cld
cmp
ds
sahf
add
push
mov
xor
adc
lea
mov
enter
loopne
fcmove
xor
xor
sub
push
ficompl
lret
sbb
push
sbb
pop
push
xor
or
into
cmpsb
stos
dec
cmp
enter
cmp
cmp
in
pusha
fwait
push
in
or
cmp
test
sahf
xor
sub
aas
aaa
aas
popf
call
mov
add
xor
xor
xor
test
xor
jg
in
mov
dec
xor
enter
and
push
pop
cs
adc
mov
mov
and
shll
xor
mov
push
jp
and
aaa
or
xor
cmp
cmp
cmpsl
mov
jmp
jle
stos
xor
inc
filds
xor
cmp
mov
adc
fs
pop
in
ret
push
xor
pushf
cmp
cmp
push
pop
or
jbe
cmp
cmp
adc
rclb
add
adc
test
outsl
jbe
cmp
cmp
mov
dec
cmp
sbb
add
jecxz
push
pop
mov
stos
add
test
mov
movlhps
aas
sub
inc
fildll
iret
mov
aas
pop
adc
jle
mov
mov
xor
aas
or
xlat
cmp
and
rcrl
push
popl
inc
jg
jbe
mov
cmp
and
lds
lea
sbb
adc
fisubs
rclb
fidivl
ljmp
andb
mov
add
cmp
cmp
mov
lret
mov
stos
stos
aad
mov
pop
aaa
jp
xor
icebp
add
jp
arpl
or
outsl
mov
jmp
sbb
sub
mov
in
inc
xchg
pusha
dec
jl
pop
into
ja
sbb
push
mov
aaa
add
fisttpl
adc
aaa
add
test
inc
subb
inc
mov
mov
xor
xor
xchg
scas
neg
test
insb
subb
xchg
push
test
mov
xor
cwtl
xorb
lcall
frstor
xor
loop
adc
sub
push
fsubrs
add
sbb
adc
lock
mov
loop
mov
add
adc
jl
xor
mov
adc
repz
lods
imul
xchg
rolb
inc
into
xor
inc
xor
mov
mov
xchg
sbb
xor
pop
je
push
xchg
fisubrl
outsl
inc
ss
ss
rolb
cmp
mov
pop
adc
call
push
aaa
mov
or
pop
jbe
cmpsb
add
jg
jg
jg
add
or
call
and
add
or
test
mov
push
pop
inc
sbb
mov
insb
decb
adc
sub
fdiv
fwait
add
push
inc
adc
dec
ljmp
xor
push
outsl
out
push
mov
sub
push
sub
inc
push
out
push
cmp
push
pop
inc
mov
hlt
mov
xchg
xchg
jle
adc
pop
das
inc
mov
mov
ret
sbb
mulb
pop
adc
out
adc
insb
mov
xor
test
decl
adc
dec
sbb
inc
cld
scas
add
pop
outsl
insl
outsl
jae
bound
xor
in
aad
and
mov
lock
dec
add
inc
std
mov
adc
ljmp
ljmp
and
mov
std
fisubl
ficoms
es
movsb
push
add
sbb
hlt
ljmp
cli
arpl
adcl
repnz
mov
dec
out
mov
jecxz
pop
arpl
jns
call
stos
pop
mov
mov
outsl
or
or
dec
sub
std
mov
in
incl
mov
nop
out
in
mov
cmp
and
sub
sbb
outsl
int3
adc
dec
jecxz
fists
std
push
shlb
pop
sbb
test
test
add
cs
mov
aaa
std
fwait
and
lret
mov
out
mov
mov
inc
pushl
les
negb
and
dec
test
xor
repz
add
adc
cwtl
cmp
adc
lahf
add
cld
scas
jg
add
mov
fistps
sub
inc
cs
ja
mov
and
sub
cld
in
fwait
push
pop
clc
sbb
scas
scas
add
insl
cmpb
push
add
iret
sub
and
add
jl
out
xor
mov
dec
mov
sti
pop
cld
adc
cmc
rol
mov
xor
push
jno
and
cld
push
xor
mov
mov
xor
jns
fs
xchg
sbb
das
fisubrs
jle
jne
test
add
fwait
addr16
pop
push
push
pop
and
cmp
insl
fdivp
stos
xor
mov
mov
into
push
mov
in
xchg
sbbl
ss
or
mov
jnp
out
ret
outsl
sub
cmpsl
pusha
cld
incl
leave
mov
jl
pop
sub
cli
stos
jg
ja
lods
fmuls
out
ret
push
das
clc
call
addb
test
add
or
inc
lock
popa
ficoms
les
pop
icebp
lcall
mov
jl
mov
or
les
shlb
rclb
les
dec
gs
jo
adc
je
popa
insb
push
jb
je
arpl
stos
xchg
insb
add
push
outsl
pop
aam
inc
and
inc
push
popa
dec
jo
fisubrs
mov
push
popa
imul
ds
bound
jge
hlt
sti
dec
jb
push
jns
jo
push
je
pop
mov
dec
cwtl
out
outsl
dec
or
push
into
imul
je
jae
jbe
fs
push
out
adc
imul
or
hlt
pop
out
cltd
sbb
addr16
push
arpl
fs
outsb
mulb
mov
bound
inc
inc
shr
push
xchg
pop
inc
insb
cwtl
sbb
xor
inc
imul
subl
dec
insl
les
jb
push
inc
mov
std
push
popa
ja
arpl
push
xor
pop
xor
pmaxsw
leave
imul
push
bound
out
outsl
push
js
lahf
push
pop
leave
pop
pop
sub
sti
scas
roll
and
arpl
add
test
xchg
and
leave
jno
push
mov
lret
sub
and
mov
mov
mov
sbb
cwtl
icebp
int
bound
push
pop
push
pop
push
adc
dec
xchg
and
lret
icebp
test
inc
adc
add
adc
xor
mov
push
and
jno
and
dec
lds
in
and
xor
sbb
xchg
dec
pop
testl
nop
lea
inc
test
mov
aad
push
xchg
pop
push
nop
ljmp
xor
les
or
or
pop
mov
jnp
sbbb
push
xor
jecxz
add
or
shlb
insl
cmp
in
xchg
andb
adcb
mov
jecxz
push
jo
and
adc
mov
imul
mov
mov
in
inc
sub
sub
ja
outsb
movsb
and
adc
add
stos
pop
subb
test
aam
jno
sbbl
movsb
inc
push
subb
add
sbb
cwtl
mov
add
test
and
mov
xchg
andb
add
subb
repz
movsl
pop
mov
push
in
inc
push
fcompl
rcrl
stos
or
adc
test
leave
mov
add
mov
cs
insb
xor
sbb
push
stos
inc
mov
pop
add
shll
mov
and
pop
sub
push
mov
add
push
push
mov
sbb
add
add
sub
sbb
mov
pop
push
lea
subl
and
addl
sbb
leave
sub
and
int
xor
lds
mov
xchg
xor
add
mov
shrl
inc
stos
sbb
movsl
lods
jne
add
add
dec
push
iret
imul
mov
sub
or
pusha
push
stos
add
addb
stos
cmp
rorb
add
inc
mov
push
and
test
push
and
mov
adc
xor
xor
inc
add
push
inc
leave
jg
mov
inc
mov
es
push
xor
xlat
pop
push
adc
or
iret
les
lods
xorb
orb
test
fldl
jne
dec
cmpsl
inc
inc
movsb
adc
cmpsb
jge
add
adc
adc
test
inc
xchg
nop
mov
andb
xchg
sbb
mov
push
mov
or
and
xchg
or
test
movsl
adc
es
out
pop
adc
add
and
test
test
enter
pop
mov
inc
test
and
pop
sub
xchg
or
pop
adc
sti
arpl
bound
in
insl
mov
and
cmc
sub
mov
add
xchg
dec
inc
shlb
push
adc
jmp
and
xchg
es
test
mov
push
and
push
xor
test
mov
test
mov
adcl
fsubs
push
push
adc
adc
mov
sbb
pusha
test
stc
fildll
inc
add
jmp
or
pop
inc
inc
sbbb
sbb
icebp
pop
push
and
mov
mov
and
iret
add
mov
sbbb
loopne
push
inc
test
add
and
and
xchg
and
adc
pop
rclb
or
add
orl
std
push
addl
adc
pop
adc
rorl
or
adc
jns
sbb
das
xchg
inc
rolb
inc
test
lahf
lea
adc
adc
add
adc
jmp
push
shrl
sub
pop
add
add
adc
and
and
inc
je
pop
xchg
shrl
add
add
and
mov
add
mov
sbb
andb
scas
sbbb
test
jne
aam
test
mov
sub
bound
push
xchg
xchg
jnp
xchg
push
test
adc
imul
inc
and
mov
xchg
adc
inc
mov
rorb
sub
xor
sub
adc
or
leave
cmpb
loopne
int
xchg
adc
push
jne
and
fimull
xchg
cmp
add
add
mov
das
subb
inc
add
lahf
ljmp
rorb
lahf
cmp
add
or
popf
add
sti
add
or
icebp
add
aas
mov
test
lds
inc
adcl
sbb
orl
test
dec
pop
lds
xchg
ret
push
or
and
adcb
add
shl
xor
inc
fistl
scas
add
lds
rolb
inc
mov
ja
inc
add
mov
xlat
test
sub
add
test
pop
add
and
sub
or
add
and
mov
jmp
out
sub
test
mov
push
and
lcall
iret
daa
sbb
sub
movaps
adc
add
jno
mov
or
jbe
push
add
inc
notb
rolb
dec
cwtl
loopne
adc
add
xor
jmp
add
inc
add
mov
or
mov
xchg
or
packssdw
inc
cmp
cld
mov
imul
push
jo
add
imul
mov
add
add
mov
add
inc
lcall
cmp
sub
mov
jb
popa
je
cmpsb
mov
push
xchg
jle
inc
mov
dec
push
xor
cli
dec
xchg
cmp
nop
rolb
xor
lcall
xor
add
vpsubw
jb
pop
es
mov
push
add
mov
mov
dec
xchg
incl
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
and
add
loopne
add
add
add
add
add
add
or
add
add
js
add
mov
add
add
add
addb
add
add
addb
add
inc
add
addb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
inc
add
add
add
add
add
add
add
add
add
add
mov
push
inc
add
add
add
add
add
add
add
add
add
add
loopne
add
in
push
inc
add
add
add
add
add
add
add
add
add
add
or
add
rcrb
add
add
add
add
add
add
add
add
add
add
xor
add
mov
inc
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
test
add
pusha
inc
add
add
add
add
add
add
add
add
add
add
rolb
add
inc
imul
in
add
add
add
add
add
arpl
add
clc
add
addb
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
jb
add
syscall
rorl
inc
adc
sub
add
dec
cmp
outsl
sbb
aad
push
sub
nop
adc
inc
mov
hlt
inc
stos
xchg
cmp
ljmp
or
sbb
sbb
adc
out
adc
xchg
mov
dec
enter
cltd
movsb
jg
dec
sbb
pop
outsl
insl
nop
jae
iret
pop
dec
in
sub
and
mov
jge
aam
mov
adc
fs
mov
les
mov
mov
and
push
dec
pushf
lock
ficoms
fstps
push
or
arpl
adc
loop
repnz
mov
out
inc
sub
xor
or
xor
and
cmp
data16
stos
ret
loope
in
outsl
or
js
sub
test
shl
mov
xchg
adc
lret
jbe
cmp
loop
adc
dec
xor
push
rorb
imul
xchg
and
leave
dec
fisttpll
cs
stc
out
pop
mov
addr16
inc
hlt
dec
or
and
dec
test
sbb
mov
cwtl
mov
fmull
xor
add
mov
sbb
outsb
cs
cs
ret
aas
mov
sub
cld
clc
mov
sbb
in
insl
addb
cmp
push
add
iret
or
cli
mov
mov
xor
jg
fmull
pop
sbb
dec
adc
cmc
rorl
jno
mov
pop
pop
push
jno
and
pop
mov
mov
jns
fs
xchg
sub
mov
sub
push
push
sbb
insl
fdivp
push
xor
int3
inc
sbb
ret
in
or
mov
adc
mov
or
dec
jnp
dec
push
cs
and
mov
mov
cmp
and
xlat
xor
icebp
add
jae
jne
and
mov
or
sub
and
and
cmp
sbb
sub
icebp
adc
xchg
cmp
jmp
mov
mov
mov
fwait
js
and
popa
rorl
jae,pn
push
jmp
pusha
xlat
imul
repz
repz
stos
dec
mov
xlat
enter
adc
lea
and
movb
mov
and
mov
or
adc
pop
inc
inc
or
test
hlt
cmp
jne
add
syscall
rorl
inc
adc
sub
add
dec
cmp
outsl
sbb
aad
push
sub
nop
adc
inc
mov
hlt
inc
stos
xchg
cmp
ljmp
or
sbb
sbb
adc
out
adc
xchg
mov
dec
enter
cltd
movsb
jg
dec
sbb
pop
outsl
insl
nop
jae
iret
pop
dec
in
sub
and
mov
jge
aam
mov
adc
fs
mov
les
mov
mov
and
push
dec
pushf
lock
ficoms
fstps
push
or
arpl
adc
loop
repnz
mov
out
inc
sub
xor
or
xor
and
cmp
data16
stos
ret
loope
in
outsl
or
js
sub
test
shl
mov
xchg
adc
lret
jbe
cmp
loop
adc
dec
xor
push
rorb
imul
xchg
and
leave
dec
fisttpll
cs
stc
out
pop
mov
addr16
inc
hlt
dec
or
and
dec
test
sbb
mov
cwtl
mov
fmull
xor
add
mov
sbb
outsb
cs
cs
ret
aas
mov
sub
cld
clc
mov
sbb
in
insl
addb
cmp
push
add
iret
or
cli
mov
mov
xor
jg
fmull
pop
sbb
dec
adc
cmc
rorl
jno
mov
pop
pop
push
jno
and
pop
mov
mov
jns
fs
xchg
sub
mov
sub
push
push
sbb
insl
fdivp
push
xor
int3
inc
sbb
ret
in
or
mov
adc
mov
or
dec
jnp
dec
push
cs
and
mov
mov
cmp
and
xlat
xor
icebp
add
jae
jne
and
mov
or
sub
and
and
cmp
sbb
sub
icebp
adc
xchg
cmp
jmp
mov
mov
mov
fwait
js
and
popa
rorl
jae,pn
push
jmp
pusha
xlat
imul
repz
repz
stos
dec
mov
xlat
enter
adc
lea
and
movb
mov
and
mov
or
adc
pop
inc
inc
or
test
hlt
cmp
ja
add
syscall
rorl
inc
adc
sub
add
dec
cmp
outsl
sbb
aad
push
sub
nop
adc
inc
mov
hlt
inc
stos
xchg
cmp
ljmp
or
sbb
sbb
adc
out
adc
xchg
mov
dec
enter
cltd
movsb
jg
dec
sbb
pop
outsl
insl
nop
jae
iret
pop
dec
in
sub
and
mov
jge
aam
mov
adc
fs
mov
les
mov
mov
and
push
dec
pushf
lock
ficoms
fstps
push
or
arpl
adc
loop
repnz
mov
out
inc
sub
xor
or
xor
and
cmp
data16
stos
ret
loope
in
outsl
or
js
sub
test
shl
mov
xchg
adc
lret
jbe
cmp
loop
adc
dec
xor
push
rorb
imul
xchg
and
leave
dec
fisttpll
cs
stc
out
pop
mov
addr16
inc
hlt
dec
or
and
dec
test
sbb
mov
cwtl
mov
fmull
xor
add
mov
sbb
outsb
cs
cs
ret
aas
mov
sub
cld
clc
mov
sbb
in
insl
addb
cmp
push
add
iret
or
cli
mov
mov
xor
jg
fmull
pop
sbb
dec
adc
cmc
rorl
jno
mov
pop
pop
push
jno
and
pop
mov
mov
jns
fs
xchg
sub
mov
sub
push
push
sbb
insl
fdivp
push
xor
int3
inc
sbb
ret
in
or
mov
adc
mov
or
dec
jnp
dec
push
cs
and
mov
mov
cmp
and
xlat
xor
icebp
add
jae
jne
and
mov
or
sub
and
and
cmp
sbb
sub
icebp
adc
xchg
cmp
jmp
mov
mov
mov
fwait
js
and
popa
rorl
jae,pn
push
jmp
pusha
xlat
imul
repz
repz
stos
dec
mov
xlat
enter
adc
lea
and
movb
mov
and
mov
or
adc
pop
inc
inc
or
test
hlt
cmp
jp
add
syscall
rorl
inc
adc
sub
add
dec
cmp
outsl
sbb
aad
push
sub
nop
adc
inc
mov
hlt
inc
stos
xchg
cmp
ljmp
or
sbb
sbb
adc
out
adc
xchg
mov
dec
enter
cltd
movsb
jg
dec
sbb
pop
outsl
insl
nop
jae
iret
pop
dec
in
sub
and
mov
jge
aam
mov
adc
fs
mov
les
mov
mov
and
push
dec
pushf
lock
ficoms
fstps
push
or
arpl
adc
loop
repnz
mov
out
inc
sub
xor
or
xor
and
cmp
data16
stos
ret
loope
in
outsl
or
js
sub
test
shl
mov
xchg
adc
lret
jbe
cmp
loop
adc
dec
xor
push
rorb
imul
xchg
and
leave
dec
fisttpll
cs
stc
out
pop
mov
addr16
inc
hlt
dec
or
and
dec
test
sbb
mov
cwtl
mov
fmull
xor
add
mov
sbb
outsb
cs
cs
ret
aas
mov
sub
cld
clc
mov
sbb
in
insl
addb
cmp
push
add
iret
or
cli
mov
mov
xor
jg
fmull
pop
sbb
dec
adc
cmc
rorl
jno
mov
pop
pop
push
jno
and
pop
mov
mov
jns
fs
xchg
sub
mov
sub
push
push
sbb
insl
fdivp
push
xor
int3
inc
sbb
ret
in
or
mov
adc
mov
or
dec
jnp
dec
push
cs
and
mov
mov
cmp
and
xlat
xor
icebp
add
jae
jne
and
mov
or
sub
and
and
cmp
sbb
sub
icebp
adc
xchg
cmp
jmp
mov
mov
mov
fwait
js
and
popa
rorl
jae,pn
push
jmp
pusha
xlat
imul
repz
repz
stos
dec
mov
xlat
enter
adc
lea
and
movb
mov
and
mov
or
adc
pop
inc
inc
or
test
hlt
cmp
jge
add
syscall
rorl
inc
adc
sub
add
dec
cmp
outsl
sbb
aad
push
sub
nop
adc
inc
mov
hlt
inc
stos
xchg
cmp
ljmp
or
sbb
sbb
adc
out
adc
xchg
mov
dec
enter
cltd
movsb
jg
dec
sbb
pop
outsl
insl
nop
jae
iret
pop
dec
in
sub
and
mov
jge
aam
mov
adc
fs
mov
les
mov
mov
and
push
dec
pushf
lock
ficoms
fstps
push
or
arpl
adc
loop
repnz
mov
out
inc
sub
xor
or
xor
and
cmp
data16
stos
ret
loope
in
outsl
or
js
sub
test
shl
mov
xchg
adc
lret
jbe
cmp
loop
adc
dec
xor
push
rorb
imul
xchg
and
leave
dec
fisttpll
cs
stc
out
pop
mov
addr16
inc
hlt
dec
or
and
dec
test
sbb
mov
cwtl
mov
fmull
xor
add
mov
sbb
outsb
cs
cs
ret
aas
mov
sub
cld
clc
mov
sbb
in
insl
addb
cmp
push
add
iret
or
cli
mov
mov
xor
jg
fmull
pop
sbb
dec
adc
cmc
rorl
jno
mov
pop
pop
push
jno
and
pop
mov
mov
jns
fs
xchg
sub
mov
sub
push
push
sbb
insl
fdivp
push
xor
int3
inc
sbb
ret
in
or
mov
adc
mov
or
dec
jnp
dec
push
cs
and
mov
mov
cmp
and
xlat
xor
icebp
add
jae
jne
and
mov
or
sub
and
and
cmp
sbb
sub
icebp
adc
xchg
cmp
jmp
mov
mov
mov
fwait
js
and
popa
rorl
jae,pn
push
jmp
pusha
xlat
imul
repz
repz
stos
dec
mov
xlat
enter
adc
lea
and
movb
mov
and
mov
or
adc
pop
inc
inc
or
test
hlt
cmp
cmpb
xorl
rorl
inc
adc
sub
add
dec
cmp
outsl
sbb
aad
push
sub
nop
adc
inc
mov
hlt
inc
stos
xchg
cmp
ljmp
or
sbb
sbb
adc
out
adc
xchg
mov
dec
enter
cltd
movsb
jg
dec
sbb
pop
outsl
insl
nop
jae
iret
pop
dec
in
sub
and
mov
jge
aam
mov
adc
fs
mov
les
mov
mov
and
push
dec
pushf
lock
ficoms
fstps
push
or
arpl
adc
loop
repnz
mov
out
inc
sub
xor
or
xor
and
cmp
data16
stos
ret
loope
in
outsl
or
js
sub
test
shl
mov
xchg
adc
lret
jbe
cmp
loop
adc
dec
xor
push
rorb
imul
xchg
and
leave
dec
fisttpll
cs
stc
out
pop
mov
addr16
inc
hlt
dec
or
and
dec
test
sbb
mov
cwtl
mov
fmull
xor
add
mov
sbb
outsb
cs
cs
ret
aas
mov
sub
cld
clc
mov
sbb
in
insl
addb
cmp
push
add
iret
or
cli
mov
mov
xor
jg
fmull
pop
sbb
dec
adc
cmc
rorl
jno
mov
pop
pop
push
jno
and
pop
mov
mov
jns
fs
xchg
sub
mov
sub
push
push
sbb
insl
fdivp
push
xor
int3
inc
sbb
ret
in
or
mov
adc
mov
or
dec
jnp
dec
push
cs
and
mov
mov
cmp
and
xlat
xor
icebp
add
jae
jne
and
mov
or
sub
and
and
cmp
sbb
sub
icebp
adc
xchg
cmp
jmp
mov
mov
mov
fwait
js
and
popa
rorl
jae,pn
push
jmp
pusha
xlat
imul
repz
repz
stos
dec
mov
xlat
enter
adc
lea
and
movb
mov
and
mov
or
adc
pop
inc
inc
or
test
hlt
cmp
cmpl
xorl
rorl
inc
adc
sub
add
dec
cmp
outsl
sbb
aad
push
sub
nop
adc
inc
mov
hlt
inc
stos
xchg
cmp
ljmp
or
sbb
sbb
adc
out
adc
xchg
mov
dec
enter
cltd
movsb
jg
dec
sbb
pop
outsl
insl
nop
jae
iret
pop
dec
in
sub
and
mov
jge
aam
mov
adc
fs
mov
les
mov
mov
and
push
dec
pushf
lock
ficoms
fstps
push
or
arpl
adc
loop
repnz
mov
out
inc
sub
xor
or
xor
and
cmp
data16
stos
ret
loope
in
outsl
or
js
sub
test
shl
mov
xchg
adc
lret
jbe
cmp
loop
adc
dec
xor
push
rorb
imul
xchg
and
leave
dec
fisttpll
cs
stc
out
pop
mov
addr16
inc
hlt
dec
or
and
dec
test
sbb
mov
cwtl
mov
fmull
xor
add
mov
sbb
outsb
cs
cs
ret
aas
mov
sub
cld
clc
mov
sbb
in
insl
addb
cmp
push
add
iret
or
cli
mov
mov
xor
jg
fmull
pop
sbb
dec
adc
cmc
rorl
jno
mov
pop
pop
push
jno
and
pop
mov
mov
jns
fs
xchg
sub
mov
sub
push
push
sbb
insl
fdivp
push
xor
int3
inc
sbb
ret
in
or
mov
adc
mov
or
dec
jnp
dec
push
cs
and
mov
mov
cmp
and
xlat
xor
icebp
add
jae
jne
and
mov
or
sub
and
and
cmp
sbb
sub
icebp
adc
xchg
cmp
jmp
mov
mov
mov
fwait
js
and
popa
rorl
jae,pn
push
jmp
pusha
xlat
imul
repz
repz
stos
dec
mov
xlat
enter
adc
lea
and
movb
mov
and
mov
or
adc
pop
inc
inc
or
test
hlt
cmp
xchg
add
syscall
rorl
inc
adc
sub
add
dec
cmp
outsl
sbb
aad
push
sub
nop
adc
inc
mov
hlt
inc
stos
xchg
cmp
ljmp
or
sbb
sbb
adc
out
adc
xchg
mov
dec
enter
cltd
movsb
jg
dec
sbb
pop
outsl
insl
nop
jae
iret
pop
dec
in
sub
and
mov
jge
aam
mov
adc
fs
mov
les
mov
mov
and
push
dec
pushf
lock
ficoms
fstps
push
or
arpl
adc
loop
repnz
mov
out
inc
sub
xor
or
xor
and
cmp
data16
stos
ret
loope
in
outsl
or
js
sub
test
shl
mov
xchg
adc
lret
jbe
cmp
loop
adc
dec
xor
push
rorb
imul
xchg
and
leave
dec
fisttpll
cs
stc
out
pop
mov
addr16
inc
hlt
dec
or
and
dec
test
sbb
mov
cwtl
mov
fmull
xor
add
mov
sbb
outsb
cs
cs
ret
aas
mov
sub
cld
clc
mov
sbb
in
insl
addb
cmp
push
add
iret
or
cli
mov
mov
xor
jg
fmull
pop
sbb
dec
adc
cmc
rorl
jno
mov
pop
pop
push
jno
and
pop
mov
mov
jns
fs
xchg
sub
mov
sub
push
push
sbb
insl
fdivp
push
xor
int3
inc
sbb
ret
in
or
mov
adc
mov
or
dec
jnp
dec
push
cs
and
mov
mov
cmp
and
xlat
xor
icebp
add
jae
jne
and
mov
or
sub
and
and
cmp
sbb
sub
icebp
adc
xchg
cmp
jmp
mov
mov
mov
fwait
js
and
popa
rorl
jae,pn
push
jmp
pusha
xlat
imul
repz
repz
stos
dec
mov
xlat
enter
adc
lea
and
movb
mov
and
mov
or
adc
pop
inc
inc
or
test
hlt
cmp
mov
add
syscall
rorl
inc
adc
sub
add
dec
cmp
outsl
sbb
aad
push
sub
nop
adc
inc
mov
hlt
inc
stos
xchg
cmp
ljmp
or
sbb
sbb
adc
out
adc
xchg
mov
dec
enter
cltd
movsb
jg
dec
sbb
pop
outsl
insl
nop
jae
iret
pop
dec
in
sub
and
mov
jge
aam
mov
adc
fs
mov
les
mov
mov
and
push
dec
pushf
lock
ficoms
fstps
push
or
arpl
adc
loop
repnz
mov
out
inc
sub
xor
or
xor
and
cmp
data16
stos
ret
loope
in
outsl
or
js
sub
test
shl
mov
xchg
adc
lret
jbe
cmp
loop
adc
dec
xor
push
rorb
imul
xchg
and
leave
dec
fisttpll
cs
stc
out
pop
mov
addr16
inc
hlt
dec
or
and
dec
test
sbb
mov
cwtl
mov
fmull
xor
add
mov
sbb
outsb
cs
cs
ret
aas
mov
sub
cld
clc
mov
sbb
in
insl
addb
cmp
push
add
iret
or
cli
mov
mov
xor
jg
fmull
pop
sbb
dec
adc
cmc
rorl
jno
mov
pop
pop
push
jno
and
pop
mov
mov
jns
fs
xchg
sub
mov
sub
push
push
sbb
insl
fdivp
push
xor
int3
inc
sbb
ret
in
or
mov
adc
mov
or
dec
jnp
dec
push
cs
and
mov
mov
cmp
and
xlat
xor
icebp
add
jae
jne
and
mov
or
sub
and
and
cmp
sbb
sub
icebp
adc
xchg
cmp
jmp
mov
mov
mov
fwait
js
and
popa
rorl
jae,pn
push
jmp
pusha
xlat
imul
repz
repz
stos
dec
mov
xlat
enter
adc
lea
and
movb
mov
and
mov
or
adc
pop
inc
inc
or
test
hlt
cmp
add
add
inc
add
insb
inc
add
insb
inc
add
inc
add
insb
inc
add
insb
inc
add
add
add
insb
inc
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
outsb
jae
popa
jb
cs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
addr16
jb
push
inc
popa
jb
push
xor
imul
