or
adc
sti
movsb
jp
push
mov
sub
push
push
lea
push
subl
lea
push
subl
lea
push
lea
push
mov
push
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
lea
mov
push
mov
addl
pop
push
pop
xor
lea
xor
push
popl
add
and
addl
clc
adc
pushl
lea
pop
repz
add
cmp
jne
mov
pop
ret
mov
in
sub
leave
sarb
outsl
repz
nop
lret
dec
sbb
leave
mov
mov
pusha
call
add
pop
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
add
jo
test
out
cmp
jbe
jns
mov
mov
movl
fbstp
push
mov
sub
push
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
push
mov
sub
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
dec
mov
adc
and
inc
inc
jge
cmpsb
add
mov
idivb
ss
cmpb
in
push
movsl
push
mov
sub
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
and
stos
mov
outsl
cmp
pusha
iret
dec
dec
scas
imul
pop
pushf
mov
pop
int3
mov
push
mov
sub
push
push
push
push
call
add
pop
lea
pop
mov
ret
add
sub
mov
or
mov
divl
adc
rorb
jbe
inc
arpl
mov
mov
sub
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
jle
sbb
and
xorl
scas
jl
sti
sbb
lds
inc
andl
cmp
push
or
dec
outsb
xchg
jle
mov
sub
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
cli
test
add
jae
in
ljmp
or
popf
sub
fisubs
or
cmp
test
mov
imul
fs
sbb
mov
jecxz
mov
pusha
hlt
enter
je
lods
rcrb
push
cmp
stc
scas
call
gs
push
mov
sub
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
xlat
std
inc
push
pop
clc
sbb
sub
lods
mov
mov
shl
lea
mov
cli
and
add
and
add
add
and
add
and
add
and
add
add
xor
add
adc
add
and
add
and
add
add
fisubl
add
test
add
and
add
insb
and
add
and
add
add
add
and
add
and
add
and
add
add
and
add
add
and
add
add
and
add
and
add
add
lock
add
add
add
and
add
add
add
add
hlt
and
add
and
add
and
add
add
add
test
add
loopne
add
nop
and
add
and
add
and
add
add
and
add
and
add
and
add
add
xor
add
adc
add
and
add
and
add
add
fisubl
add
test
add
and
add
insb
and
add
and
add
add
add
and
add
and
add
and
add
add
and
add
add
and
add
add
and
add
and
add
add
lock
add
add
add
and
add
add
add
add
sti
add
insb
gs
jae
dec
jne
gs
add
add
outsb
fs
je
insl
push
add
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
je
outsl
imul
jbe
jae
add
add
insb
jae
gs
popa
insb
jne
add
inc
gs
je
imul
push
add
mov
push
insb
gs
add
gs
inc
imul
gs
fs
outsl
outsb
jae
insb
gs
add
icebp
add
imul
jb
je
arpl
add
inc
add
outsl
jae
dec
popa
outsb
fs
add
add
gs
jb
push
push
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
fs
outsl
outsb
jae
insb
gs
add
roll
dec
gs
jo
imul
push
jne
jae
inc
jbe
outsb
je
add
add
je
jb
jbe
push
jns
gs
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
fs
outsl
outsb
jae
insb
gs
add
add
fs
imul
add
dec
add
insb
outsb
inc
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
jb
dec
jae
add
add
inc
push
inc
jae
jb
outsl
jb
or
push
gs
jb
inc
jb
outsl
jb
add
inc
jb
dec
jae
add
push
add
outsb
fs
push
pop
add
addr16
outsl
js
add
add
outsb
fs
push
pop
add
addr16
outsl
js
add
add
jo
jb
inc
jb
outsl
jb
add
inc
push
inc
jae
jb
outsl
jb
pop
add
addr16
outsl
js
add
inc
jb
dec
jae
add
push
add
outsb
fs
push
inc
push
push
push
dec
push
cs
insb
add
outsb
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
jo
jb
push
push
outsl
push
inc
popa
je
add
imul
jae
inc
outsl
jb
push
dec
add
insl
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
inc
push
inc
inc
dec
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
inc
add
test
add
cmp
add
add
add
add
add
ja
add
add
add
add
add
add
add
add
add
xor
add
cwtl
roll
or
add
add
add
add
add
add
add
and
add
add
andb
add
push
sub
sub
xchg
xchg
xchg
add
lods
lods
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
stos
stos
stos
mov
mov
lcall
jle
add
add
xchg
xchg
add
mov
inc
mov
ret
lret
lret
int
rcl
shr
rcl
shl
rcl
shl
int3
into
into
hlt
enter
enter
mov
mov
lods
stos
lods
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
sahf
add
mov
mov
mov
leave
lret
rcl
sar
xlat
std
fcom
fcomp
xlat
aad
rcl
sar
int
int
aam
ror
sar
mov
mov
scas
iret
mov
xchg
and
add
push
add
add
add
add
add
add
add
add
stos
lods
lods
add
lods
scas
sbb
mov
jnp
mov
mov
dec
lret
leave
dec
ror
aad
xlat
call
fdivr
aam
dec
int3
int3
dec
int3
int
aam
aam
int3
int
inc
mov
mov
ljmp
cmpsb
cmpsb
ljmp
pop
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
push
pop
add
inc
add
pop
add
push
or
or
sbb
add
add
or
or
or
add
add
add
mov
add
mov
inc
mov
mov
mov
mov
dec
enter
int3
call
rcl
fcom
fdivr
xlat
xlat
call
aam
dec
into
into
dec
lret
int3
int3
int
mov
mov
mov
test
test
mov
cltd
cltd
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
popa
or
push
imul
fs
ds
sbb
push
das
prefetchw
xor
aaa
ss
cmp
and
adc
add
add
add
add
arpl
add
mov
pop
mov
mov
mov
mov
mov
rol
enter
iret
sar
aad
call
aam
dec
ror
inc
leave
enter
inc
ret
mov
mov
ljmp
movsl
movsb
popf
sahf
popf
cwtl
xchg
cwtl
lcall
test
pop
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
jno
jle
jle
jle
jg
jno
jno
arpl
mov
cmp
cmp
inc
inc
inc
mov
outsl
outsb
outsl
nop
arpl
pusha
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
leave
leave
dec
lret
leave
lret
leave
inc
enter
mov
mov
ljmp
mov
fwait
call
xchg
xchg
xchg
xchg
xchg
cltd
lcall
ds
or
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
jo
add
pop
or
jl
xchg
lea
incb
jnp
jp
jp
outsl
outsb
jo
data16
data16
je
jg
jle
jns
js
gs
inc
cmp
pop
sbb
adc
adc
lods
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
cmpsb
cmpsb
lcall
incl
test
xchg
xchg
xchg
sahf
sahf
mov
ficoms
nop
xchg
jle
jns
pop
xor
cs
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
lahf
in
mov
incl
mov
std
xchg
jg
jb
jb
je
je
jle
jg
test
xchg
addr16
cmp
and
es
jle
jg
cltd
cltd
cltd
lea
test
lods
sti
stos
lods
lods
stos
lods
stos
stos
stos
test
mov
fwait
cltd
xchg
xchg
xchg
incl
jle
jns
jns
jnp
jp
mov
xchg
movsl
movsb
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
push
adc
add
or
add
add
add
add
add
add
pop
pop
adc
movsb
cmpsl
out
scas
mov
xchg
xchg
incl
test
std
xchg
xchg
xchg
std
cwtl
xchg
cwtl
stc
xchg
xchg
xchg
in
mov
enter
int
mov
mov
push
pop
push
or
inc
inc
dec
imul
xchg
xchg
leave
cltd
fistps
cltd
fwait
stc
nop
xchg
xchg
std
mov
incl
mov
lcall
test
ljmp
mov
std
mov
mov
mov
std
mov
mov
movsb
movsb
movsl
addr16
jnp
lods
cmpsb
stos
add
adc
scas
call
lcall
incl
xchg
xchg
xchg
xchg
popf
popf
pushf
std
movsb
movsl
movsl
stc
mov
xchg
xchg
in
xchg
in
xchg
push
jne
push
cmovp
add
inc
or
or
sub
push
dec
dec
dec
outsw
jb
test
xchg
xchg
rclb
xchg
xchg
std
lea
nop
call
mov
cmpsb
ljmp
cmpsl
lods
pushl
sahf
mov
mov
xchg
mov
mov
ljmp
mov
add
pop
pop
adc
scas
mov
lcall
xchg
mov
mov
nop
xchg
decl
xchg
xchg
sahf
pushf
pushf
movsb
mov
stos
mov
xchg
xchg
fstpt
jnp
push
push
push
outsl
dec
dec
dec
pop
pusha
popa
jne
je
mov
jg
test
mov
mov
xchg
testl
mov
jmp
mov
mov
pop
mov
mov
xor
js
mov
movsl
mov
mov
mov
stos
lods
lods
mov
movsl
movsb
add
mov
add
pop
adc
mov
lcall
mov
xchg
xchg
xchg
call
xchg
lcall
lcall
sahf
mov
movsb
std
movsb
movsl
movsb
stc
cwtl
cltd
lcall
nop
xchg
les
cwtl
cltd
in
xchg
xchg
out
mov
xchg
stc
xchg
test
std
xchg
jae
cltd
push
cmp
dec
jle
stos
inc
jl
mov
jnp
mov
jae
mov
insl
ljmp
adc
lods
or
ljmp
inc
jle
mov
mov
lods
pushf
movsl
mov
movsl
add
mov
add
pop
adc
mov
lcall
xchg
xchg
call
cltd
fwait
lcall
sahf
lcall
cwtl
fwait
call
xchg
nop
cwtl
xchg
call
lcall
lcall
pushf
mov
xchg
push
xchg
pop
jle
xchg
dec
jns
lcall
popf
push
push
jmp
ljmp
adc
stos
adc
lods
adc
mov
imul
mov
insb
mov
lcall
scas
lods
lods
scas
movsb
movsb
movsl
sub
movsl
mov
add
add
add
mov
pop
pop
adc
mov
ljmp
sahf
call
popf
sahf
lcall
movsl
movsb
jmp
mov
decl
mov
xchg
xchg
xchg
js
lcall
xchg
push
jns
xchg
cmp
decl
sbb
pop
call
add
call
add
lahf
push
pop
jmp
sbb
mov
insl
pushl
push
outsb
mov
and
mov
and
inc
test
ret
mov
lods
scas
mov
sahf
lahf
sahf
add
add
add
add
add
pop
pop
adc
lods
mov
shll
lcall
mov
cmpsl
jmp
stos
test
lcall
orb
mov
decl
decl
push
pop
incl
add
incl
add
lea
pop
call
add
lcall
jmp
and
mov
jbe
mov
sub
mov
sub
inc
sub
cmp
das
cmp
lea
cld
mov
mov
movsl
movsb
mov
add
add
add
add
add
push
push
adc
cmpsl
scas
ljmp
sahf
jmp
test
ljmp
stos
stos
pushl
lods
scas
jmp
mov
mov
incl
or
push
incl
push
incl
add
xchg
push
decl
add
xchg
add
lcall
jmp
adc
mov
cmp
dec
cmp
dec
cmp
call
cmp
mov
rolb
dec
mov
std
mov
mov
movsl
movsb
mov
add
mov
add
add
add
mov
dec
dec
adc
cmpsb
ljmp
sahf
jmp
lods
lods
pushl
mov
pushl
mov
ljmp
ja
decl
or
mov
pop
decl
or
test
push
incl
add
mov
push
call
add
sahf
add
mov
add
lods
add
pushl
cmp
dec
inc
mov
roll
call
dec
nop
fmuls
call
dec
xchg
fmull
fsts
call
test
std
mov
mov
movsb
movsl
mov
or
add
add
add
add
inc
dec
adc
jl
popf
mov
lcall
test
mov
mov
mov
mov
mov
mov
mov
mov
scas
mov
movsb
xchg
decl
sbb
xchg
pop
pusha
decl
adc
pop
push
decl
add
xchg
add
pushf
add
mov
add
test
pusha
pushl
and
call
push
xchg
call
push
cltd
fistl
fcoml
ficomps
fistps
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
test
cmpsl
jne
mov
mov
add
add
add
inc
inc
adc
js
lahf
cltd
popf
jmp
mov
lods
stos
pushl
mov
mov
mov
mov
ljmp
inc
jbe
xchg
and
xchg
and
call
call
or
decl
add
lcall
jmp
add
mov
data16
mov
xor
fistpl
jmp
mov
jmp
cmpsw
jmp
cmpsl
jmp
cmpsw
call
cmpsw
ljmp
dec
mov
mov
mov
mov
add
add
add
xchg
xchg
xchg
add
inc
aas
adc
jp
xchg
cltd
call
lahf
fwait
lahf
ljmp
mov
pushl
mov
mov
mov
mov
jle
xchg
sub
lcall
call
push
call
add
fwait
add
mov
add
lods
add
mov
pushl
movq
roll
frstor
jmp
outsl
lods
jmp
outsl
lods
jmp
jno
jmp
je
in
je
out
jne
out
jne
in
je
jmp
mov
mov
cmpsb
cmpsb
lcall
mov
add
add
add
jle
cmp
adc
outsl
js
mov
lcall
mov
mov
mov
mov
mov
mov
mov
movsl
scas
lcall
xor
mov
cmp
xor
fwait
sbb
pop
call
add
movsl
add
test
add
mov
gs
mov
sbb
ficoml
jmp
js
ljmp
in
xorb
lock
hlt
test
push
cmpb
mov
inc
mov
test
daa
sahf
lahf
lahf
add
add
add
add
aaa
cmp
jne
jle
out
test
xchg
xchg
xchg
pushl
mov
mov
inc
rol
ret
ret
ret
ret
ret
mov
jmp
cmp
movsb
inc
jle
mov
ss
fwait
sbb
xchg
add
popf
add
add
test
pop
ljmp
add
add
ret
add
call
es
movsl
ljmp
out
mov
push
xchg
ret
nop
ret
xchg
xchg
xchg
mov
out
nop
mov
inc
lods
test
xor
popf
sahf
add
add
add
inc
cmp
push
inc
dec
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
sar
ret
inc
mov
jl
lcall
cmp
dec
test
movsl
xor
pusha
lcall
add
test
pop
ljmp
add
mov
add
enter
fdivs
mov
out
xchg
push
fwait
push
fwait
push
cltd
fwait
enter
lret
pushf
lret
popf
int3
cld
popf
int
cli
lcall
fbstp
cli
mov
mov
mov
nop
add
add
add
add
das
cs
cmp
outsb
dec
dec
dec
jecxz
pusha
call
mov
mov
mov
sar
inc
enter
mov
lahf
lcall
push
xchg
scas
dec
xchg
movsb
sub
fwait
pop
pop
lcall
pop
ljmp
popa
mov
add
enter
rorl
je
fiadds
out
mov
push
cmpsb
int
cmc
cmpsb
into
push
cmpsb
iret
sti
test
into
cld
test
iret
std
test
sar
negl
lret
dec
lret
mov
mov
sahf
mov
xchg
add
cltd
fwait
add
add
add
xor
sub
inc
inc
inc
bound
pop
xlat
je
jo
mov
mov
ret
sarb
ret
ret
ret
enter
ret
ret
mov
cmpsl
jmp
push
mov
lods
dec
test
sahf
sbb
pop
jmp
popa
pushl
add
ret
dec
add
xlat
add
adc
in
pop
cmpsb
push
sahf
lret
cli
scas
sar
sti
mov
cld
mov
cli
mov
std
mov
std
mov
cld
mov
std
mov
mov
mov
push
movsl
mov
dec
enter
mov
fisubl
xchg
xchg
or
add
add
sbb
outsl
jo
mov
fcom
xlat
fsubr
aad
fdiv
iret
rcl
std
int3
int
dec
leave
lret
dec
lret
lret
leave
lret
inc
enter
mov
mov
scas
push
mov
lods
cmp
arpl
mov
add
mov
mov
add
iret
add
fadds
jb
fiadds
je
jmp
jae
sti
scas
aam
mov
cld
mov
fcos
std
mov
fdivr
cld
mov
fcos
inc
fcos
mov
lret
call
leave
into
mov
mov
xchg
or
add
add
xor
add
add
pop
or
leave
movl
jmp
in
loop
loope
fucom
fsub
fcmovu
fcomi
fsqrt
fcom
std
int3
rcl
mov
push
ljmp
sub
mov
add
mov
arpl
mov
add
lret
add
add
faddl
ja
in
ja
in
das
xchg
clc
mov
sti
mov
loope
inc
loope
inc
loop
std
fdivrp
std
fdivrp
dec
fdivrp
std
std
loopne
dec
fdivrp
dec
loope
cli
mov
enter
iret
mov
mov
xchg
adc
add
add
incl
std
incb
std
add
div
or
out
in
pop
in
out
out
sub
in
out
dec
jmp
ljmp
jecxz
in
fcmovu
fucomi
ret
mov
xchg
cmpsb
cmp
mov
add
test
pop
pushl
add
movb
dec
add
xlat
add
fiadds
jbe
ljmp
cld
mov
in
cld
int3
loop
dec
in
dec
in
dec
in
dec
jecxz
std
int3
loopne
std
shl
dec
jecxz
shl
shl
cld
out
mov
inc
ret
cmpsb
cmpsb
cmpsl
mov
cwtl
xchg
add
add
add
std
incb
std
incb
cmc
clc
testl
icebp
repz
out
lock
pop
out
icebp
lock
out
in
pop
loopne
loope
lds
xchg
sti
sahf
es
push
pop
jmp
pusha
pushl
add
movl
jo
fiaddl
je
jecxz
jnp
jmp
jl
negb
cli
mov
std
shl
shl
std
shr
shl
shl
out
call
jmp
fucomi
fldl2t
cld
shl
push
ret
aam
in
lret
rep
test
fwait
xchg
xchg
xchg
and
xchg
xchg
add
std
cld
add
stc
add
sti
cli
add
div
or
aam
sarb
negb
add
cmpsl
add
scas
add
mov
add
leave
add
add
fldl
jne
call
sbb
stc
jne
cli
ret
fdivrp
std
fldl2t
std
fucomi
std
std
fucomi
std
fldpi
std
fucomi
std
fucomp
std
fucomp
loopne
std
fucomip
jmp
in
cld
shl
push
ret
out
iret
ror
clc
lods
lods
lods
lods
xchg
xchg
xchg
jo,pn
outsb
add
add
add
loop
add
mov
cwtl
repnz
pop
lcallw
add
mov
popa
mov
add
int
outsl
call
add
filds
jne
ljmp
sti
nop
shl
std
loopne
fucomp
std
std
fucomi
call
out
std
aad
cld
shl
cld
iret
loop
cli
iret
loop
clc
int
clc
lret
test
out
mov
jmp
rcr
fcom
sti
mov
mov
cltd
lcall
cltd
fwait
fwait
add
add
mov
sahf
jmp
sub
mov
add
mov
fs
mov
add
rolb
outsb
call
add
loop
js
ljmp
cli
xchg
enter
loopne
cli
lret
cld
fdivrp
idivl
sar
repnz
iret
push
mov
into
jmp
mov
sar
ljmp
imul
fsub
cmc
fucomip
mov
mov
xchg
add
add
add
int3
int
mov
mov
movsl
loopne
xor
jmp
add
mov
addr16
mov
add
dec
pop
jo
rorl
jbe
ficoml
jns
loop
cmp
dec
xchg
jmp
mov
jmp
mov
std
loope
mov
cli
fdivl
enter
lret
fmul
rcr
aad
loope
fcmovb
call
in
test
out
lock
call
leave
lret
push
lods
lods
stos
adc
cmpsl
cmpsb
cmpsb
add
ret
mov
ret
mov
lods
aam
dec
cmp
cmpsb
sbb
lods
and
js
mov
inc
xchg
ret
stc
lret
gs
test
mov
out
mov
mov
lret
int
rol
int
int
mov
fcom
jg
fcmovu
jb
loopne
gs
jecxz
out
jmp
xor
div
mulb
repnz
lock
fstp
or
mov
int
mov
add
mov
rol
mov
scas
mov
stos
xchg
test
xchg
ljmp
mov
sarb
mov
les
rcrb
int
iret
int
addr16
rclb
rcl
dec
aad
aad
aam
xor
fcmovu
daa
xlat
fcmovnu
sbb
adc
in
push
jecxz
call
icebp
out
add
cld
testb
sti
add
std
incb
std
add
mov
shrb
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
rol
inc
ret
mov
daa
int3
rcl
and
aad
sbb
aam
adc
aam
rcl
aam
rcr
fadds
add
add
in
add
in
jmp
add
std
incl
mov
mov
add
ret
ret
sub
mov
mov
push
rol
or
mov
add
into
lret
rolb
rcl
add
xlat
aam
aad
aad
aam
add
fabs
add
aad
add
loope
add
add
in
add
repnz
incb
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
les
mov
mov
mov
stos
test
cmpsl
and
add
add
add
add
add
add
add
add
mov
shlb
into
into
jmp
aam
cmc
rcl
aam
into
rcl
cli
lret
int3
lret
stc
lret
int3
lret
mov
mov
fwait
xchg
xchg
xchg
dec
aas
ds
and
add
sbb
add
adc
add
push
add
add
jg
addl
push
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
cld
into
ror
xlat
call
aad
call
ror
dec
iret
into
dec
lret
sarb
cld
lods
stos
lods
icebp
xchg
cltd
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
jne
jae
jae
fs
dec
dec
dec
cmp
sub
sub
xor
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
ret
int3
lret
call
rcl
call
rcl
dec
lret
inc
mov
mov
stos
test
lahf
lahf
popf
cwtl
xchg
xchg
jmp
jo
xchg
push
pop
pop
dec
add
add
add
add
add
add
addl
subl
imul
push
push
push
stos
imul
push
pop
pop
cmp
cmp
pop
outsl
jno
adc
mov
mov
sar
vshufpd
mov
mov
cmpsl
cmpsl
cmpsl
lcall
xchg
xchg
xchg
xchg
xchg
cltd
lcall
dec
dec
dec
dec
adc
adc
add
add
add
add
add
pop
cltd
lcall
fwait
xchg
cwtl
fcoml
addb
jl
jl
js
jns
jp
jnp
jns
jp
jb
jb
push
push
push
cmp
aaa
popf
sahf
sahf
mov
lods
scas
rep
scas
scas
sti
scas
scas
scas
std
test
test
popf
pushf
popf
call
xchg
call
mov
lods
jmp
lods
scas
leave
cmpsb
movsl
movsb
cltd
jae
jb
adc
adc
add
add
add
add
insl
outsb
insl
pop
lods
movsb
test
incl
mov
sti
xchg
xchg
xchg
lock
xchg
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsl
outsb
jo
lea
cwtl
cwtl
cwtl
cwtl
repnz
xchg
xchg
std
mov
call
popf
ljmp
stos
scas
std
mov
scas
mov
xlat
movsl
mov
addl
add
add
popa
pop
pusha
or
scas
mov
cmpsl
mov
mov
mov
call
lahf
sahf
sti
mov
lcall
push
push
push
jo
pop
pop
outsl
insl
outsl
outsl
xchg
subl
nop
mov
ljmp
jg
pushl
pop
mov
mov
mov
mov
out
scas
stos
insl
test
add
add
add
add
pop
or
mov
in
mov
xchg
call
xchg
lcall
lcall
pushf
sahf
pushf
cli
xchg
xchg
cwtl
jmp
xchg
mov
jecxz
orb
xchg
push
cld
xchg
pop
jg
sahf
dec
jl
movsb
inc
jp
lods
xor
je
mov
outsb
ljmp
sbb
mov
mov
mov
scas
scas
jle
mov
add
add
add
pop
pusha
popa
or
mov
in
mov
cwtl
lcall
mov
mov
decl
addb
xchg
jae
cld
xchg
pusha
cmp
dec
js
nop
cmp
xchg
sub
xchg
sbb
cwtl
adc
mov
pop
imul
mov
outsb
pushl
push
jb
mov
pop
xchg
mov
scas
lods
xchg
popf
lahf
popf
adc
add
add
popa
pop
popa
or
lods
mov
stos
mov
mov
ljmp
test
lcall
pop
jnp
mov
imul
sub
decl
adc
xchg
push
decl
add
call
add
or
mov
je
mov
sub
jg
das
cmp
xor
shrl
movsb
test
test
popa
pusha
pop
or
cmpsb
test
jmp
mov
pushl
mov
jmp
jno
mov
pop
decl
or
xchg
push
decl
add
lahf
add
movsl
add
mov
insb
inc
ss
inc
mov
into
inc
mov
aam
nop
call
inc
xchg
fmuls
call
bound
stc
mov
mov
movsb
movsb
movsl
daa
std
std
incl
add
add
pusha
popa
pop
or
sahf
mov
ljmp
mov
mov
mov
mov
mov
lods
mov
jl
nop
sbb
decl
or
popl
push
call
add
add
scas
add
mov
dec
xchg
call
push
fwait
fistpl
jmp
pop
mov
jmp
pop
mov
dec
test
cld
mov
mov
cmpsl
stos
cmpsb
xor
addb
add
add
dec
pop
jge
jnp
popf
xchg
lcall
scas
scas
pushl
mov
mov
lcall
sub
lcall
and
xchg
minps
xchg
add
lahf
add
cmpsb
add
scas
add
mov
xor
jmp
insb
test
in
stos
call
jb
in
jae
jmp
js
call
cmpsl
mov
shrl
cmpl
dec
dec
dec
pop
insl
outsl
imul
test
cltd
cwtl
xchg
ljmp
mov
mov
mov
jbe
lcall
cmp
sahf
sub
xchg
or
fwait
add
movsl
add
stos
add
mov
fs
or
call
inc
xchg
jmp
js
jmp
mov
in
test
push
xchg
push
mov
mov
cmpsl
test
lcall
add
sub
push
push
dec
pop
imul
xchg
mov
mov
mov
mov
ret
mov
mov
ljmp
sub
cltd
or
add
add
mov
arpl
mov
adc
fbld
in
pop
push
xchg
ret
push
cltd
push
cltd
stc
cltd
lret
fwait
lret
cwtl
jmp
stos
vcmpss
mov
add
add
xor
inc
pop
pop
pop
push
fisttpl
mov
mov
rol
inc
pushl
push
xchg
lods
dec
cmp
pop
imul
add
cmpsl
add
mov
mov
add
fisubl
cmp
jp
push
mov
sar
stc
stos
into
cld
test
iret
stos
sar
sti
test
call
rol
stos
test
popf
or
add
add
dec
push
push
aaa
jae
jb
stos
stos
stos
ror
int3
int
lret
cmc
leave
lret
int3
sti
leave
leave
enter
leave
mov
popa
mov
stos
inc
cmp
adc
test
add
add
int
insl
flds
xchg
push
xchg
cld
mov
std
mov
cld
mov
xlat
std
mov
xlat
cld
mov
jmp
leave
dec
rol
scas
lods
lods
mov
add
add
add
add
pop
or
rcl
dec
loopne
loope
fsubp
loopne
fstp
fcmovnb
fcmovu
aam
out
mov
gs
cmpsl
jae,pn
movsb
or
mov
mov
add
add
in
jl
repnz
mov
sti
ret
loop
inc
loope
std
enter
fdivrp
std
lret
std
lret
cld
lock
leave
divb
sahf
sbb
add
add
std
incl
std
incl
jmp
or
in
out
sbb
jmp
xor
loop
jecxz
lds
mov
mov
add
pushl
add
int
insl
fildl
je
call
insl
mov
cld
ret
sti
shl
std
shl
std
shl
std
shl
call
shl
push
enter
int
stc
mov
mov
add
std
std
std
add
incl
std
incb
aam
push
mov
pop
mov
sahf
or
ljmp
add
lds
imul
loopne
jbe
out
pop
mov
clc
mov
shl
fsubr
std
fucompp
xlat
out
std
fsubr
cld
xlat
out
std
fsubr
sti
aam
push
enter
iret
xlat
sti
mov
sahf
sahf
das
add
add
into
int
or
fs
mov
add
mov
add
add
loopne
ja
in
xor
stc
int3
loop
cli
leave
fdivrp
test
aad
repz
lock
aam
out
out
shl
ljmp
ljmp
stos
das
std
incb
aad
push
mov
jb
or
mov
insb
inc
sbb
int
jnp
aad
xchg
loopne
lcall
mov
out
loop
leave
jmp
fdivrl
lret
leave
faddp
iret
mov
in
fcompl
in
out
jns
rcl
dec
mov
add
add
mov
mov
mov
ljmp
xchg
fidivrl
andb
int
mov
shll
enter
lret
insl
aam
int
aam
iret
dec
xlat
cmp
fnstsw
das
in
fsubl
in
icebp
adc
jmp
or
std
incl
std
std
add
mov
mov
lods
jns
mov
mov
mov
mov
shrb
enter
aam
pop
rol
adc
rcl
or
or
int3
int
stos
stos
stos
add
std
add
std
std
add
add
add
int3
int3
pextrw
or
int
int3
add
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
lcall
rol
enter
enter
mov
ret
mov
mov
mov
stos
stos
lods
xor
je
add
add
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
enter
sar
aad
aam
rcl
sar
int
into
std
mov
mov
test
addb
add
add
add
add
add
add
add
add
jae
jb
addr16
inc
inc
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
int3
int3
call
rcl
dec
into
iret
dec
mov
mov
lods
scas
lcall
mov
push
add
add
add
add
jne
jne
xchg
adc
outsb
outsb
ret
popa
mov
addr16
jb
popa
pusha
cmp
pusha
sbb
mov
in
mov
mov
mov
lods
stos
lcall
xchg
lcall
xchg
cwtl
lds
jae
and
add
pop
add
add
jb
je
pushf
xchg
pushf
mov
xchg
mov
xchg
test
addb
push
push
push
inc
mov
fwait
into
mov
mov
xchg
decb
mov
fwait
pushf
popf
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
push
add
add
xorl
stos
mov
mov
mov
xchg
cld
pushf
popf
pushf
cmc
cltd
cwtl
lcall
push
push
imul
jg
lea
notl
mov
pushl
push
lcall
lods
lods
push
stos
lods
stos
add
add
add
cmpsl
mov
scas
test
cld
xchg
xchg
xchg
call
fwait
cltd
lcall
cltd
cwtl
std
xchg
xchg
xchg
out
xchg
mov
loope
jne
out
xchg
fs
push
jp
fwait
inc
jne
cmpsl
ss
lods
sub
mov
jno
mov
insb
pushl
sahf
lods
lock
mov
imul
int3
add
xchg
pop
scas
cmpsb
stos
test
popf
pushf
sahf
jmp
mov
xchg
decl
push
js
nop
inc
jb
mov
push
lea
popa
call
or
mov
push
outsl
pushl
es
shrb
inc
ds
rcrb
subl
jne
push
mov
mov
cmpsb
ljmp
mov
lcall
sub
mov
pop
incl
add
decl
add
mov
adc
shll
lret
call
inc
mov
aam
call
dec
xchg
dec
lcall
movsl
movsl
movsl
push
add
add
push
xchg
xchg
test
mov
lods
pushl
mov
movsb
call
decl
or
xchg
add
mov
add
mov
push
xchg
fstpl
fistps
jmp
popa
mov
call
pushf
mov
test
cmpsl
cmpsl
pop
add
add
popa
popa
arpl
popf
lcall
mov
mov
scas
lcall
jo
lcall
lcall
add
mov
xor
call
jl
out
jle
out
jle
ficompl
mov
mov
add
add
dec
adc
addr16
mov
mov
mov
mov
ret
mov
bound
lcall
add
ljmp
add
pop
outsb
fisttpl
in
mov
push
xchg
clc
xchg
enter
jmp
cmpsl
mov
movsb
sub
inc
aas
aas
adc
push
xchg
mov
mov
inc
sarl
ljmp
sbb
movsl
add
mov
fs
add
aad
jns
ljmp
clc
lods
sar
cld
scas
sar
sti
scas
sar
std
scas
sar
ljmp
fldenv
std
add
xor
inc
scas
mov
mov
aad
mov
aad
rcl
out
lret
lret
mov
mov
jmp
add
add
add
call
pop
cld
mov
fdivr
std
ret
inc
std
ret
out
mov
ret
test
dec
jg
addl
stos
stos
stos
add
in
in
or
call
in
outsb
fcmovu
movsb
daa
outsb
ljmp
add
int3
add
add
out
cmp
dec
in
call
in
shl
std
aad
aam
push
enter
int3
in
lods
scas
scas
popa
cmpb
incb
incl
int3
lret
shrl
mov
add
mov
add
jecxz
js
cmc
push
cmpsl
cld
loopne
std
aad
std
aad
cld
shl
sti
aad
sti
shl
push
fdivr
fcmove
shl
mov
mov
xchg
xchg
xchg
pop
scas
mov
cld
scas
add
mov
or
fistps
cmp
insl
lods
cld
out
mov
shl
ljmp
jmp
in
aad
jmp
fcmovu
scas
push
fwait
fwait
lcall
add
add
sahf
stos
xchg
dec
and
push
mov
ret
int3
lret
ja
mov
xlat
mov
lret
xlat
int3
into
pop
aad
jecxz
loopne
out
call
sbb
mov
mov
scas
arpl
mov
ret
cs
mov
lret
sbb
fstp
bswap
into
int
aam
aad
incl
cmpb
std
std
add
add
add
mov
add
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
call
mov
rcll
sub
stos
inc
jl
into
gs
sub
out
and
or
je
sub
xchg
xchg
and
in
xor
sbb
data16
aaa
cmp
imul
mov
cmp
fisttps
push
xor
test
jne
xchg
pop
mov
fxam
jl
stc
sbb
pop
dec
cmp
jl
and
into
sarl
add
je
and
sub
jnp
test
mov
enter
sti
jmp
mov
subl
insl
mov
ret
hlt
mov
loope
mov
dec
xor
imul
sti
mov
dec
out
xlat
sbbb
push
outsb
add
pop
popa
mov
xchg
jge
push
scas
mov
inc
out
fdivl
or
pusha
cmp
cli
xchg
push
pop
out
lea
scas
cmpsl
scas
add
int
add
xor
push
in
dec
push
inc
flds
mov
aas
mov
add
stos
imul
cs
xchg
adcb
cmp
sub
mov
pop
sbb
cmpsl
pop
cmp
js
jo
lds
ret
repz
mov
adc
cmp
addr16
sbb
test
mov
lahf
mov
xlat
jp
stc
mov
mov
ficomps
movd
punpckldq
in
add
lcall
jns
lods
int3
mov
lcall
fnsave
mov
push
jb
xchg
movsb
jae
imul
jle
fstl
iret
mov
pushf
xor
stos
push
in
fistl
push
cmp
or
movsl
fsubrs
dec
xchg
sub
aaa
cwtl
das
imul
dec
mov
int
imul
and
sbb
repz
inc
fldcw
adc
rol
mul
jle
mov
outsl
push
jo
pop
dec
jne
jle
mov
rorl
mov
es
popa
adc
inc
jp
enter
out
xchg
mov
test
out
outsb
sbb
das
icebp
cmp
mov
dec
in
mov
stos
mov
loopne
mov
add
stc
daa
and
pop
mov
adc
fsts
push
arpl
xor
xlat
mov
lret
insl
pop
and
call
mov
outsl
push
test
adc
cld
and
push
sbb
dec
in
jo
popa
mov
ret
call
and
sahf
inc
insl
test
mov
repnz
out
inc
or
stc
cmp
pop
adcb
mov
sahf
xor
cmp
testb
jge
loopne
stc
nop
faddl
pushf
xor
std
pop
scas
cs
mov
int3
subb
ljmp
jno
es
adc
addb
jns
xor
rcrb
push
out
out
lret
bound
inc
outsb
add
jae
mov
lret
xchg
pop
sahf
inc
push
out
mov
jb
inc
fisubrl
out
lds
add
pop
fidivrs
adc
and
arpl
mov
cmc
push
fcomp
jo
xor
sub
mov
lcall
mov
lret
insl
pop
and
push
jge
mov
rclb
test
sti
and
push
sbb
inc
dec
je
in
outsl
lret
insb
add
ret
hlt
sbb
sahf
inc
insb
test
mov
icebp
mov
out
inc
or
cmp
add
xchg
pop
adcb
mov
mov
loop
inc
fdivrs
pop
ret
pop
xor
push
sub
test
test
jmp
sub
lret
push
adc
out
popa
clc
aam
in
xor
inc
fsubrl
dec
pop
lock
sub
loopne
shrl
add
jns
lock
mov
xorb
and
add
ret
pop
notb
pop
mov
xchg
xor
test
mov
mov
loopne
lcall
push
in
bound
gs
mov
inc
fdivl
shll
pop
push
popa
clc
test
xchg
sub
jnp
fstpt
or
leave
sbb
ja
jo
dec
lahf
sbb
lcall
mov
insb
or
xchg
cmp
pop
mov
mov
push
fldt
popa
clc
pop
cld
jns
stos
dec
stc
nop
jp
lret
bound
jno
loopne
inc
xor
jae
scas
inc
stos
stos
mov
fidivl
test
lret
bound
in
scas
xlat
outsb
fidivrs
mov
xchg
sub
cmp
cltd
mov
call
andl
roll
test
fs
cwtl
mov
ja
mov
arpl
jbe
mov
jge
mov
popa
adc
rcr
mov
mov
fnstenv
cmpsl
push
ljmp
jns
jnp
aas
movsb
test
jo
jns
sahf
stos
inc
fwait
xor
jno
lods
mov
aam
jb
mov
jg
and
mov
mov
jae
ljmp
imul
call
ss
orl
fnstenv
jo
jl
cmp
cli
stos
mov
shl
ja
pop
cmpsb
aas
movsl
cmp
jl
mov
call
aaa
sbbl
test
mov
push
cmpsl
bound
ret
sbb
arpl
dec
loop
insl
std
xchg
mov
andb
mov
xlat
outsb
lock
gs
mov
sub
mov
in
test
insl
addr16
lahf
sub
pop
xchg
mov
push
in
clc
insl
dec
loopne
and
push
mov
incb
imul
sbb
pop
dec
sub
mov
fnstenv
and
cmp
push
cmp
dec
xchg
into
mov
push
in
or
push
call
push
je
and
jg
add
jp
mov
idivl
call
push
jp
stos
in
test
jle
add
das
and
lods
int3
int
add
mov
xor
dec
push
cli
xchg
or
and
es
lret
negb
inc
push
dec
cmp
jl
cmc
mov
stos
push
in
fldenv
jne
test
fnsave
pop
lock
sub
pop
push
leave
pusha
xchg
add
or
pop
mov
scas
sbb
push
lods
mov
int
sti
decb
arpl
inc
lahf
ss
jnp
pushf
and
mov
je
cmova
lret
sti
in
cwtl
push
cmp
dec
mov
jbe
mov
or
lea
es
test
imul
sti
push
out
mov
lcall
cld
xchg
xor
and
cmp
push
aam
mov
jge
shrb
lcall
jnp
stc
and
mov
jecxz
xchg
cmpsb
cmp
jnp
sbb
inc
mov
jbe
test
and
pop
jns
pop
icebp
push
mov
xor
repnz
mull
mov
mov
jae
xchg
jo
ret
or
adc
stos
cmp
outsb
int3
add
add
stos
inc
push
add
dec
movsl
pop
xchg
sub
jnp
mov
ja
push
push
stc
nop
cmc
aas
lds
sbb
shrl
inc
lahf
sti
pop
hlt
sub
enter
scas
inc
jne
and
bound
mov
loop
inc
fidivs
cmpsb
cmp
lret
push
mov
xor
scas
push
out
xor
arpl
outsb
add
mov
fcom
out
or
mov
pop
and
cmp
push
mov
sub
push
in
subl
ds
enter
xchg
xchg
ret
aas
dec
jecxz
scas
sbb
pop
xchg
cmp
outsb
mov
xor
or
out
or
cs
sub
popf
pop
mov
xlat
in
jns
mov
dec
in
fldenv
cmp
push
jle
xchg
pop
fnstcw
ljmp
and
call
mov
push
mov
xchg
out
sbb
cmp
lock
pop
and
dec
cmpsl
insl
aad
popf
cli
call
into
call
add
int3
arpl
push
mov
jno
popf
out
test
xchg
mov
std
pop
cmc
das
push
call
adc
mov
repnz
add
ss
les
push
stos
inc
mov
xchg
cs
add
cmp
add
shrb
xor
mov
mov
stc
ffreep
xchg
mov
test
mov
lcall
testb
out
push
lret
fistps
insb
inc
int3
and
rorl
dec
and
in
iret
jecxz
mov
rclb
pop
inc
push
into
push
jae
xor
sbb
xchg
mov
inc
and
das
aad
ffreep
pop
adc
sub
mov
xor
adc
dec
adc
add
inc
pushf
lods
repz
xchg
sarl
ds
push
xchg
lret
ficompl
std
stc
mov
fildll
lret
in
jae
movups
or
lds
test
add
cmp
sbb
imull
stc
out
into
pop
dec
fcmovne
adc
ds
mov
negb
sbb
lods
mov
mov
insl
mov
popf
and
mov
cmp
adc
lods
mov
in
notb
push
in
frstor
out
cwtl
dec
fs
xchg
pop
pusha
or
add
mov
cs
add
sti
jle
mov
in
ds
mov
xor
jnp
test
and
divl
cmp
mov
jmp
insl
test
test
xchg
lahf
lret
xor
pushf
push
mov
sbbb
mov
pop
outsl
mov
mov
push
aad
jmp
hlt
push
imul
add
adc
cmpsb
cmpsl
xlat
scas
inc
clc
push
cmpb
arpl
xor
xlat
mov
fidivrl
mov
push
push
daa
imul
mov
enter
sub
gs
fsubl
sub
mov
loopne
mov
push
imul
push
fstpl
mov
dec
or
cld
test
in
int
pop
lods
lea
push
icebp
mov
andl
mov
push
lds
sub
cmp
inc
jp
mov
jae
addr16
je
push
jl
xlat
cmp
mov
jnp
out
dec
int
daa
ds
jo
scas
shll
inc
in
ja
into
mov
daa
leave
cmp
dec
pop
add
mov
dec
and
pop
cmp
or
mov
mov
and
mov
lcall
stos
mov
in
mov
fs
in
daa
lods
pop
dec
rorb
imul
dec
imul
loop
pop
out
jg
in
xchg
xor
xor
pusha
popf
mov
mov
pop
cltd
iret
sub
cmpsb
aam
cmp
bnd
push
test
xchg
daa
mov
frstor
cli
in
pusha
negl
sbbb
jle
adc
test
lret
mov
fadd
push
push
sbb
mov
stos
mov
cld
pop
hlt
sub
push
movsl
sub
add
mov
cmpsb
pop
xchg
sub
call
mov
mov
inc
cmp
outsl
push
push
pop
shrl
je
movsb
push
mov
cmpsb
mov
icebp
lea
and
inc
test
aaa
insb
jge
sahf
pop
pop
mov
les
sbb
jns
push
int3
arpl
repnz
xchg
ljmp
add
mov
rcll
ljmp
xchg
jp
inc
pop
fs
mov
das
shll
pop
icebp
jmp
jl
xor
aad
fdivl
adc
pop
mov
xchg
fdivrs
fadds
sbb
or
es
loopne
push
jmp
or
rorl
inc
dec
cli
nop
daa
and
pop
mov
loopne
push
mov
icebp
mov
cmc
mov
andb
adc
ds
addr16
xchg
lock
rep
mov
jp
pop
inc
insl
add
jg
pop
push
xchg
mov
mov
test
inc
outsb
loopne
pop
push
mov
subb
jl
cmpsb
xchg
cld
lcall
fimuls
and
lods
pop
inc
xlat
inc
lds
outsb
insb
pop
cmc
mov
lret
or
test
and
sub
fwait
pushl
ljmp
jg
xor
xchg
ret
popf
mov
lret
mov
roll
pop
mov
loopne
xor
pop
xor
jle
divb
mov
xlat
es
push
mov
outsl
pushf
cltd
fnstenv
mov
out
js
mov
adc
lods
ljmp
fisttpl
mov
das
lods
hlt
jno
mov
dec
in
fimuls
add
mov
and
pop
fdivl
pop
test
xor
cld
pop
pop
dec
adc
in
mov
leave
add
sub
and
pop
lcall
std
pop
repz
repz
xor
inc
jp
mov
lret
imulb
mov
cmpl
stos
aad
fst
jne
mov
rcll
mov
or
fstpt
fnsave
stc
shlb
jmp
mov
adcb
mov
sahf
xor
or
inc
fdiv
sbb
jb
adc
gs
nop
scas
xchg
jb
xor
pop
scas
and
mov
int3
movsl
mov
ljmp
jno
inc
and
test
imul
inc
and
sub
jle
lret
bound
out
add
jne
pop
ficoms
scas
es
cmp
int3
stos
push
mov
ljmp
jb
outsl
call
nop
daa
mov
or
lret
mov
push
loopne
lret
out
aaa
ljmp
jbe
lahf
push
ljmp
jae
mov
fstpt
xlat
stc
sub
int
mov
adcb
loopne
sbbb
or
jne
aaa
into
clc
sahf
fidivl
adc
add
jmp
sub
test
inc
or
test
daa
mov
in
inc
shrl
mov
repz
xchg
lret
or
aaa
pop
jnp
rclb
mov
lock
cmp
add
cli
xchg
lods
xchg
mov
jbe
sbb
sub
ss
inc
xlat
outsb
daa
fs
jmp
push
cmc
mov
adc
or
inc
fdivs
fstps
or
insb
add
movsb
mov
pushf
mov
pusha
mov
mov
or
daa
aad
mov
aam
mov
scas
adc
pop
xchg
aas
cli
je
negb
jge
pop
fldt
aad
fwait
xor
xchg
movsb
jbe
sub
adc
mov
or
shrb
mov
stos
cmc
hlt
lock
outsb
add
test
mov
push
sarl
jae
dec
xor
pop
insl
rcll
dec
mov
add
enter
mov
and
adc
adc
mov
vpsrlq
sbb
xor
mov
jns
imul
lahf
mov
and
loope
and
popf
lea
pop
xchg
cmpsb
and
dec
mov
inc
fstps
adc
cltd
mov
pusha
div
movsb
and
jae
ds
popf
lea
cmp
inc
fdivrs
cld
mov
fdivl
movsb
sbbl
cwtl
jmp
cmp
dec
pop
sahf
adc
push
pop
cmp
je
sbb
cmp
mov
aad
mov
gs
cs
lcall
cmpl
jnp
dec
xchg
sub
mov
and
add
outsl
stos
in
test
mov
or
or
mov
ds
rcrl
repz
mov
insl
cmpsl
jp
fimuls
cwtl
das
or
add
push
ljmp
outsl
mov
aam
xchg
mov
fcoml
cmpsl
divl
add
pop
das
cmc
fwait
xor
cmpsb
dec
in
ljmp
sub
mov
lcall
ds
inc
add
pop
adcb
mov
fidivl
xor
cwtl
repz
jecxz
pusha
idivl
push
jle
xchg
into
lcall
push
cmpsl
ds
mov
pop
outsl
je
jo
mov
jp
int
mov
aad
lods
or
es
imul
push
call
adc
jne
sbb
and
inc
movsl
cmp
mov
ret
pop
ljmpw
loope
push
aas
out
mov
lret
add
adc
adc
fwait
xor
test
push
ljmp
jno
and
dec
mov
leave
lods
inc
cli
pop
xsha1
cmpsb
or
es
sbb
hlt
or
aaa
cmp
mov
pop
pop
inc
fistl
mov
mov
shl
adcb
sti
aam
jp
sahf
xor
dec
mov
push
loope
aad
gs
nop
mov
lret
pop
sahf
adc
pop
cmp
sbb
push
ficompl
mov
clc
lds
jg
sbb
push
mov
int3
mov
mov
pop
fidivl
sarl
mov
aas
lods
dec
in
pop
push
lods
xchg
sub
and
xchg
cs
repz
jmp
add
jo
push
sub
push
orb
cmp
lods
inc
inc
pop
pop
mov
outsl
lret
bound
xchg
push
in
dec
in
aas
sbb
cmp
push
cmp
popl
pop
out
mov
shll
add
aad
cltd
sub
xchg
mov
inc
inc
aas
add
out
xchg
loopne
lea
lahf
cvttps2pi
dec
mov
dec
loope
sub
push
inc
mov
leave
int
jo
movsb
cmp
cltd
sti
xchg
add
test
sbb
iret
jle
sarl
mov
cmp
jae
in
push
in
mov
aad
or
xchg
sub
ss
pushf
scas
inc
movsl
push
push
jmp
ret
fnsave
jb
out
out
xchg
stos
pop
xchg
sub
mov
sub
add
and
jge
in
xorl
or
je
sub
inc
mov
jmp
inc
fimuls
ja
push
out
data16
cltd
lret
add
mov
xchg
push
cmp
dec
mov
pop
jmp
or
mov
out
jl
fwait
cmpsb
or
data16
or
mov
mov
sub
das
into
stos
dec
lcall
fwait
scas
inc
sub
push
dec
dec
loop
subb
cmpsb
call
adc
in
ljmp
cmp
mov
mov
pop
jae
les
xchg
mov
lds
out
dec
adc
ss
scas
and
mov
fisttpll
push
push
pop
repnz
shll
adc
orl
sub
data16
add
test
pop
sahf
aam
sarb
cmp
int
push
incl
jne
fnsave
xor
jae
xchg
movsl
call
push
mov
cmp
insb
sbb
aad
lea
out
pushf
loopne
dec
adc
shlb
adc
mov
flds
sahf
cld
test
jl
sbb
mov
idiv
xchg
sub
inc
fistl
mov
stc
in
cmp
sbb
repnz
repnz
aaa
mov
jbe
mov
xor
add
outsl
xor
mov
mov
cmpsl
adc
ret
lret
sbb
jge
cmp
add
mov
mov
fstpt
or
mov
pop
lret
push
mov
fidivl
aad
jp
aas
add
pop
xchg
and
lods
jecxz
adc
cmp
pushl
pop
lock
xchg
mov
ficompl
sub
sub
mov
dec
adc
mov
shrb
shl
mov
es
cmpsb
push
adc
inc
js
mov
sahf
lret
repz
and
xor
scas
xchg
push
icebp
mov
scas
jmp
flds
test
cmp
movsl
cmp
pop
into
mov
jle
loopne
rcrl
xchg
sub
jmp
mov
mov
xchg
sub
nop
sbb
xor
xchg
cs
ss
ljmp
call
xor
lret
bound
push
stc
mov
push
out
jo
adc
lret
imulb
shrl
aaa
into
push
push
adc
jno
or
lret
cmc
push
jmp
pop
push
jp
mov
ja
bound
pop
repnz
fmulp
data16
sub
mov
xlat
jae
pop
lods
clc
xchg
sub
iret
and
jge
movsb
cmp
shrb
fs
popf
jmp
hlt
mov
xor
insb
or
jl
lea
mov
push
call
adc
lds
cmp
xor
adc
aad
movsl
push
mov
mov
das
push
jmp
xor
push
decb
imul
pop
fbstp
or
lahf
xor
es
push
call
inc
out
mov
sbb
adc
xor
mov
xchg
push
in
mov
pop
lock
mov
dec
or
pop
xchg
push
and
icebp
scas
lea
adc
repz
cmp
inc
add
jecxz
fsubrs
add
fnstcw
pop
aaa
into
mov
xchg
sub
pop
cmc
rorb
xor
sub
nop
daa
add
adc
and
xchg
jle
arpl
lret
hlt
imul
adc
scas
inc
mov
int3
arpl
mov
mov
pop
add
mov
mov
mov
loopne
pop
add
add
mov
pop
repz
stos
int
aam
data16
dec
cmc
push
out
push
scas
xchg
dec
xchg
sub
cmp
in
lcall
aaa
in
sub
pop
sbb
scas
push
mov
jo
std
jnp
es
orl
xor
ljmp
rclb
fnstenv
cmp
andb
popa
insl
cmpl
mov
ret
pop
push
or
push
xor
jo
jae
ljmp
call
xor
sbb
push
pop
mov
mov
jo
mov
loop
adc
cwtl
das
xor
pop
lock
push
lret
bound
mov
cmpsl
ljmp
and
pop
nop
sbbb
ljmp
pop
aaa
fnstenv
pop
mov
addl
pandn
pop
lock
add
xchg
cmp
adc
test
scas
movsl
or
clc
lahf
sub
lcall
data16
xchg
mov
rcr
cli
repnz
fidivs
dec
jg
jns
pop
lock
lcall
out
out
xchg
adc
jno
inc
sbb
xchg
popf
mov
xor
out
pop
and
out
test
out
outsb
fnstenv
lcall
loop
fbstp
add
mov
push
mov
mov
fidivl
rcll
popf
cmp
cltd
xor
movsb
push
popf
out
xchg
add
jno
sub
push
pop
in
xchg
scas
cmpsl
pop
icebp
jo
or
es
push
pop
fnstenv
js
aaa
mov
les
incb
lcall
pop
cmc
mov
test
jno
mov
fsubr
repz
sub
out
xchg
pop
icebp
js
adcb
lcall
jecxz
fidivl
add
mov
and
mov
cmp
daa
shrb
inc
xchg
jne
test
cmpsb
xchg
inc
fcmovnb
fidivs
jecxz
loope
adc
dec
inc
ss
mull
mov
adc
xlat
mov
outsl
xor
into
gs
push
ret
ja
outsl
mov
ret
repz
add
cmp
push
call
xchg
jmp
loopne
adc
ss
cmp
dec
test
in
movsl
fsubrs
mov
pop
out
add
ds
or
jle
scas
inc
mov
shrl
in
pop
repz
repz
cmp
add
or
mov
fdivl
out
sub
push
jne
add
mov
adc
aaa
into
pop
xor
pop
rep
xor
mov
ficoml
scas
adc
das
mov
xchg
mov
int
mov
dec
flds
add
mov
push
push
das
mov
test
cmp
inc
add
dec
inc
pop
call
stos
xchg
imul
enter
jecxz
or
sbb
dec
dec
xchg
je
xchg
ss
cltd
mov
mov
data16
in
leave
pop
adc
repz
inc
aas
frstor
imul
xchg
mov
aad
ret
cmp
xor
push
hlt
pop
pop
dec
fiadds
test
scas
cmp
clc
test
sub
dec
nop
inc
mov
jnp
lret
pop
jecxz
loope
lret
imul
sets
in
jns
xor
mov
subb
cld
push
cwtl
and
cmp
or
and
popf
cs
lods
in
ds
cli
cld
cmp
jge
dec
lea
mov
lea
sahf
add
jle
outsl
cmpxchg
dec
sahf
fwait
es
lret
push
fdivs
bound
mov
popa
imul
dec
mov
ljmp
adc
xchg
cmp
push
mov
inc
adc
cmpsl
mov
arpl
imul
outsl
or
push
xchg
pop
inc
pop
popf
push
jne
mov
mov
mov
dec
dec
ss
pop
mov
fcmovne
push
int3
leave
imul
xor
jl
jg
xchg
stos
and
out
adc
in
cmp
pop
dec
jg
test
add
mov
lahf
sbb
in
fwait
push
and
sub
mov
mov
inc
jmp
push
jecxz
cmp
inc
pop
lea
cmp
push
loop
shll
xor
push
in
push
jg
fcomp
push
mov
out
or
inc
push
xchg
sub
mov
jne
jmp
pop
mov
mov
push
aam
mov
jmp
daa
pop
adc
scas
xor
mov
in
xchg
pop
cmpsl
mov
sub
repz
imul
rcrb
push
push
test
fwait
addb
scas
rcrb
jg
sbb
sub
pop
insb
dec
iret
jo
fwait
nop
sbb
loopne
xchg
sbb
aas
sub
int
mov
aam
mov
jmp
pop
pusha
js
test
shlb
std
fcoms
mov
dec
or
lock
js
popa
xchg
xorb
stos
jge
repz
lea
daa
shll
dec
push
fwait
test
or
push
xor
mov
xor
xor
stos
pushf
or
cld
les
mov
inc
sub
enter
jne
xchg
pop
ffree
div
mov
loop
sti
adc
stos
jl
adcb
popf
das
into
xchg
loope
fstpt
add
cs
pusha
xchg
xchg
sub
cmp
inc
sbb
or
push
cmp
jb
daa
inc
fstps
cmc
mov
jns
pop
stos
loop
ret
scas
inc
pushl
sbb
lea
xchg
mov
bound
imul
pop
sbb
dec
jg
jo
insb
data16
popf
shl
mov
test
icebp
and
mov
int3
test
ret
pop
xchg
leave
push
call
ljmp
jg
outsb
mov
jge
rcll
jecxz
iret
inc
add
cli
xor
push
sbbl
in
cmpsb
lahf
fcoms
ljmp
data16
jp
es
mov
mov
arpl
leave
shlb
sbb
and
push
out
adc
push
andb
mov
aaa
jne
mov
pop
ljmp
aad
xchg
lret
pop
sti
pop
dec
leave
and
push
pop
ret
jg
mov
jbe
sarb
push
jmp
mov
jl
mov
rcrb
xor
jge
addl
leave
lret
lahf
dec
in
pop
ja
push
test
rorb
in
mov
mov
mov
shlb
adc
and
xchg
mov
xor
int3
dec
mov
sbb
jmp
movntps
mov
dec
sub
iret
or
add
inc
test
and
mov
arpl
ret
out
rorb
push
aad
sbbl
push
inc
jnp
inc
mov
decl
mov
xchg
ret
cmp
movsb
fbstp
fadd
lock
popa
cmpsl
cs
jle
enter
mov
pop
icebp
xchg
xchg
out
inc
sbb
fiaddl
lods
call
in
mov
addr16
or
xchg
movsl
jae
sti
adc
cmpsb
in
gs
inc
repz
call
mov
mov
mov
fwait
mov
jmp
pop
sub
cmp
adc
rolb
loope
mov
mov
cmp
add
leave
call
or
in
sbb
jbe
lock
add
cli
push
dec
nop
fcmove
adc
lcall
arpl
mov
stos
das
aaa
adc
test
jns
test
or
or
les
repz
into
jns
out
cmp
cmc
cmp
jp
jnp
cmc
fdiv
add
cs
pop
rolb
fs
sbb
es
inc
shlb
adc
mov
call
pop
cmc
lock
xchg
add
fstps
adc
stos
scas
cmp
xchg
push
rorl
adcb
cmp
movsb
loop
call
sbb
mov
mov
or
lock
shll
or
sar
jp
pusha
jmp
subb
aaa
out
pop
sbb
insb
sub
in
adc
ficoml
stos
mov
js
pop
or
mov
inc
mov
ficoml
cmp
dec
pop
push
mov
ljmp
andl
pop
ljmp
push
lock
leave
stos
jle
push
mov
cmp
dec
jmp
dec
loope
push
sub
push
inc
data16
xor
cwtl
shlb
adc
push
adc
push
icebp
cwtl
icebp
push
iret
mov
push
mov
popf
pop
arpl
aam
ret
sarl
cmp
xor
in
popf
mov
add
and
mov
into
pop
sub
movb
daa
nop/reserved
roll
jle
in
xchg
fadd
shlb
mov
and
mov
push
add
bound
pop
mov
push
mov
mov
sub
jl
jae
sub
ficoml
clc
js
aas
sahf
aad
inc
add
jp
ret
sbb
xchg
dec
shrl
call
and
out
jns
dec
dec
cs
add
inc
mov
les
pop
loopne
sti
lea
or
sbb
push
out
pop
out
mov
dec
inc
movsl
mov
popf
ja
jl
lods
arpl
and
in
lock
stos
mov
cmp
lods
cltd
dec
and
cmp
mull
in
xor
js
dec
xchg
push
imul
inc
rcrb
je
sub
pop
sbb
setno
sub
cwtl
mov
pop
andb
repz
scas
sarb
add
add
loop
inc
ja
out
mov
sub
fsubrl
cmp
add
fidivs
dec
testl
push
nop
test
movsb
dec
cli
push
inc
enter
aaa
sbb
int
jb
jg
cmp
test
add
dec
push
xor
rcl
es
cmp
xor
jl
mov
sbb
cs
fimull
fs
es
mov
sahf
dec
fmul
and
cmp
outsb
push
mov
cmpsb
jmp
fisubrs
loop
push
jnp
jns
adc
inc
mov
push
cmpl
sbb
mov
popf
das
mov
sbb
jp
cmpsl
push
ds
or
aas
test
mov
fisttps
cld
pop
mov
subl
clc
jecxz
pop
cwtl
inc
jl
sub
stos
add
bound
add
je
std
mov
or
xor
push
lods
adc
push
inc
js
push
jle
js
mov
lock
cmpb
cmpsl
insb
sbb
sbb
test
shlb
fcomps
push
out
pop
sahf
dec
add
mov
jns
inc
shll
jle
rorb
mov
dec
lods
xor
cmp
or
test
mov
xchg
adc
mov
cmp
adc
jbe
pop
pop
cmp
bound
mov
or
outsl
xor
mov
xchg
aas
loope
sahf
dec
cmp
cmp
xchg
orb
xor
mov
inc
mov
gs
fildl
movsb
mov
mov
push
push
jo
das
sub
hlt
sarb
adc
mov
inc
fldcw
test
cmp
ficoml
icebp
push
jnp
lds
cmp
xchg
dec
xor
andl
dec
pop
sub
adc
sbb
jno
push
fbstp
pop
in
jo
mov
jno
mov
in
mov
lret
push
pop
in
daa
push
mov
in
push
sbbb
loop
mov
addb
lret
pop
bound
jp
push
sbbl
fcmovnu
fisubrs
in
mov
mov
xchg
xchg
jae
std
add
mov
das
mov
mov
dec
stos
sbb
jns
adc
lret
inc
xchg
jb
xchg
stos
push
inc
pushf
pushf
and
stos
scas
loope
sub
add
push
adc
inc
xor
pop
xor
dec
push
pushf
add
sub
popa
cltd
rol
mov
pop
and
mov
jbe
cmp
add
out
testl
roll
jecxz
aas
push
stos
cmp
insb
hlt
dec
sub
jne
arpl
ss
loope
push
out
mov
jmp
jb
jge
jl
dec
xchg
push
lret
insb
cmp
int3
movsb
jle
dec
out
test
adc
jl
mov
sarb
mov
xchg
insl
shlb
out
jge
adc
push
in
int3
and
push
es
arpl
cmp
dec
jne
push
scas
outsb
xor
jnp
add
push
aas
subb
mov
cmp
imul
filds
sbb
popa
ret
mov
mov
sub
imulb
cmpsb
movsb
sahf
pop
xchg
outsb
jmp
es
mov
sub
pop
cmp
pop
push
mov
inc
sub
dec
lret
ja
push
in
shrb
in
jle
aad
and
dec
scas
inc
jbe
sbbl
xor
mov
pop
add
pop
pop
ljmp
xchg
xor
je
jl
call
inc
pusha
add
addr16
in
cmp
mov
lods
dec
cmp
lea
adc
out
jns
adc
shlb
out
and
xor
out
xchg
and
cmp
mov
jns
shll
jg
imul
jmp
sub
filds
push
push
inc
adc
scas
inc
aam
adc
mov
popa
hlt
sarl
ljmp
mov
out
add
mov
fld
jge
cmpsl
sbb
mov
lock
dec
les
mov
in
or
fimull
xchg
sahf
mov
xchg
adc
test
mov
jecxz
add
addl
xor
mulb
pop
pop
cwtl
inc
enter
rorl
pop
les
jg
sarl
inc
sbb
cs
leave
dec
test
jle
mov
stc
mov
pop
add
cmp
out
addb
ret
divb
mov
divb
rcl
jl
fbld
inc
and
cmp
add
xchg
aam
jae
mov
fwait
xchg
jnp
inc
movsl
xor
cmp
divb
int3
sbb
shrb
std
cmpsl
or
cs
mov
es
xchg
insl
or
push
xchg
std
sbb
sbb
cmp
xchg
jne
or
sti
mov
sahf
jo
xchg
cmp
cmp
xor
dec
clc
xlat
sbb
mov
inc
mov
leave
sub
test
mov
jno
dec
xchg
gs
dec
jle
sbb
pop
popf
inc
scas
adc
mov
push
inc
mov
jmp
mov
dec
inc
jmp
sbb
cltd
loopne
testl
rcl
dec
mov
faddl
or
enter
das
dec
and
enter
push
jae
mov
cmp
sbb
mov
inc
neg
jecxz
hlt
pop
mull
pusha
cmc
push
add
push
negb
jns
inc
dec
dec
pop
cmpb
sub
test
sub
push
cmp
test
mov
test
pop
arpl
xchg
mov
out
mov
popl
aaa
cmpsb
or
or
sbb
pop
and
push
inc
cld
ss
loope
scas
mov
mov
data16
sub
rcrl
mov
orps
cmc
push
dec
and
mov
xor
xchg
repnz
mov
mov
push
mov
sbbl
les
cmp
adc
fidivrl
popf
movsl
add
dec
jo
pop
shr
shll
and
shl
stos
imul
push
jbe
lds
hlt
push
rclb
ss
and
add
lahf
fsubr
ret
lret
aaa
imul
xchg
rorb
mov
cmp
pushf
mov
in
fsubrl
jmp
and
adc
pushl
repnz
addr16
and
je
fcomip
hlt
lods
cmp
add
getsec
adc
mov
xchg
movsb
imul
call
aad
xor
mov
push
pop
adc
out
test
sti
xchg
mov
out
mov
pop
dec
jmp
mov
pop
sbb
push
jp
repnz
movsb
bound
adc
daa
push
test
mulb
pop
xorl
mov
add
test
rcr
mov
stc
fistpll
sub
sar
adcb
pop
add
dec
repnz
push
xchg
gs
ja
pop
xor
out
mov
jnp
mov
out
mov
mov
pushf
add
dec
in
aad
lcall
push
cmp
sub
pushf
inc
cmc
iret
mov
out
add
adc
fsubp
rolb
into
add
mov
movsb
pop
in
hlt
jmp
rcrl
mov
cmc
faddp
in
mov
out
sbb
aas
daa
sarb
lock
dec
fcoml
ljmp
jecxz
fldl
in
mov
cmp
dec
mov
outsl
mov
push
xchg
sub
cmp
ret
pushf
push
das
push
jl
xor
cmp
mov
mov
sub
jae
enter
lds
and
or
jmp
mov
jle
insl
repz
and
push
stos
dec
mov
mov
loopne
jbe
or
sub
adc
les
jb
lods
cmp
inc
inc
negl
mov
mov
outsl
ficoms
sti
mov
mov
bound
and
mov
jle
xchg
dec
lret
fisubl
inc
lahf
adc
cmp
push
mov
push
inc
pop
mov
mov
mov
lds
inc
and
push
fdivp
or
jmp
clts
scas
jae
loop
adc
pushf
stc
jge
mov
cmp
add
dec
and
minps
inc
hlt
cs
nop
xchg
bound
repnz
sbb
jb
jnp
ss
xchg
add
int3
sbb
inc
out
pop
shrb
sbb
in
imul
lahf
mov
or
frstor
sub
scas
test
push
xlat
fistl
jns
out
das
jp
mov
fwait
sbb
test
daa
sub
mov
inc
jns
jbe
inc
xchg
inc
out
rorl
scas
stc
xor
cmp
pop
out
cmp
inc
jg
popa
sahf
inc
jne
adc
arpl
iret
xchg
jae
sub
jmp
scas
std
mov
and
pusha
aam
xlat
and
test
loop
call
pop
cmpsl
mov
adc
pop
fs
xchg
cmpsb
les
icebp
push
mov
jle
jge
mov
imul
or
cld
call
loopne
inc
testb
icebp
dec
dec
nop
mov
pop
test
pop
ljmp
fcomps
or
push
std
adc
push
add
mov
ret
jmp
jl
jge
dec
dec
fldenv
out
test
adc
insl
addr16
into
mov
push
enter
mov
sbb
adc
or
test
repz
push
push
mov
jb
mov
xor
ficompl
test
or
and
mov
sub
dec
sub
lcall
movsb
xor
jns
pop
and
in
mov
out
xchg
cmp
dec
lods
cmpsl
lock
dec
pop
fnstcw
dec
sahf
and
pop
hlt
cmp
sbb
sahf
fisttpll
ss
fistpl
mov
cmp
xchg
les
and
inc
pop
rolb
imul
jnp
cmp
les
cmp
adc
lret
mov
popa
dec
gs
cmpsb
mov
aam
scas
mov
push
adc
adc
loopne
aas
or
gs
xchg
adc
inc
das
jp
loope
jle
js
inc
int3
paddb
push
push
mov
outsb
ret
dec
dec
leave
movsl
daa
sahf
dec
sub
push
sbb
or
divb
jnp
int3
aad
inc
divl
in
adc
mov
inc
scas
aad
pop
lods
pusha
jle
dec
push
scas
out
xchg
jo
aaa
xchg
xchg
and
test
sahf
sbb
dec
lds
push
inc
in
les
aad
test
rol
out
push
mov
cmpsl
pop
push
std
push
pop
shrb
xor
out
pop
xchg
arpl
add
jecxz
aad
clc
enter
xchg
pop
xor
icebp
xor
pusha
orb
aam
jle
imul
add
mov
fs
cmp
in
cltd
push
mov
mov
ficoml
andb
insb
adc
sub
xchg
notb
adc
aas
into
pop
xor
push
sbb
aaa
insb
cmpb
jl
ss
popa
pop
lds
pop
pop
gs
out
or
jmp
cmp
cwtl
out
fistpl
jb
pop
enter
aam
xchg
aas
stos
cmp
jle
add
orl
mov
sub
out
jns
mov
xor
jno
shll
movb
push
outsb
call
or
jl
cmp
cmc
mov
flds
addb
mov
aaa
pop
inc
sub
daa
push
push
inc
cmp
push
sbb
out
movsb
sub
adc
fcompl
divl
push
es
roll
jne
or
inc
xchg
xchg
pop
shll
pop
in
xor
ret
xorb
js
push
sub
js
dec
bound
xchg
mov
cmpsb
cmp
lret
aam
xor
test
jmp
jl
add
inc
cmp
jg
dec
xchg
out
jecxz
xor
movsl
jns
adc
jnp
xchg
rcrl
jge
or
dec
scas
push
jb
ja
push
aaa
inc
adc
push
repnz
sti
push
pusha
xchg
ficoml
mov
sti
and
sbb
mov
and
mov
outsl
adc
imul
out
dec
cmc
pop
ja
dec
lret
adc
mov
popa
sarb
rcrb
push
add
jmp
lods
shr
inc
lahf
cmp
mov
and
cmc
and
push
add
push
mov
add
nop
loop
stc
xchg
sub
js
xchg
push
and
mov
adc
adcl
mov
clc
repz
push
shlb
mov
dec
cmpsl
sahf
lret
mov
ret
push
pop
out
leave
popa
fmull
outsb
outsb
dec
dec
jl
jno
adc
decl
jecxz
push
jmp
pop
mul
jns
lret
mov
and
aaa
xchg
and
mov
dec
cmpsl
rolb
push
in
dec
js
adc
adc
mov
push
lea
gs
cmp
aaa
test
js
test
pop
mov
pop
push
sbb
cmc
dec
xor
push
mov
enter
jbe
outsl
aad
mov
or
xor
inc
mov
jns
pop
inc
sub
int3
shll
outsb
adc
ds
cwtl
sub
pushf
mov
sub
addr16
or
stos
mov
mov
fs
jne
in
dec
xchg
test
dec
call
push
adc
pushf
scas
jl
xchg
in
lcall
sub
jge
mov
pop
xor
push
jne
cmpsl
mov
daa
mov
ror
sbb
popf
jl
jl
sub
lahf
scas
cmpsl
sub
fwait
mov
mov
clc
in
jb
insb
lods
movsb
adc
test
lret
sub
decb
dec
lds
jmp
mov
es
sbbb
mov
xchg
jbe
mov
adc
xchg
ret
data16
dec
sahf
mov
pusha
xchg
lods
fnsave
add
jno
mov
je
and
xor
mov
dec
inc
pop
insb
int3
sarb
push
repnz
xor
into
adc
addr16
mov
jg
sub
sub
xchg
jno
mov
sub
or
addb
into
jle
aaa
sub
das
mov
icebp
mov
adc
jb
or
and
ss
sahf
push
and
mov
cmp
adc
inc
or
out
push
movsl
arpl
add
imul
shl
stos
xor
jl
stos
cmpsl
mov
xor
enter
sub
pop
inc
xchg
mov
int
std
insl
pop
idivl
cmpsb
cmp
sbbb
loop
xorl
ss
pop
inc
sahf
jne
js
loopne
sub
out
adc
daa
aas
popf
cmp
mov
arpl
mov
call
sub
test
and
lods
inc
xor
fsubrs
ret
sub
je
mov
push
test
push
dec
sub
or
and
sbb
mov
std
repz
hlt
xchg
icebp
inc
ja
mov
xchg
add
ja
dec
les
leave
xchg
pop
xor
mov
sbb
pop
mov
into
sahf
mov
pop
enter
add
jne
leave
cmp
stos
repz
sahf
sar
dec
iret
xchg
sbb
arpl
xor
push
and
cmc
pop
xchg
je
mov
andl
sub
xchg
add
andb
ficoml
mov
pop
adc
pusha
ret
out
inc
daa
addr16
prefetcht1
sub
or
xchg
cltd
inc
repz
popa
andb
sbb
jno
lods
outsl
inc
push
sub
dec
fwait
lcall
pop
je
aad
jp
repnz
or
xorb
jb
adc
xor
pop
push
push
fcomps
cmpsb
shll
shll
add
sbb
push
sbb
push
inc
test
push
xchg
cltd
movsl
into
mov
and
mov
test
jns
sub
xchg
xchg
addl
pop
leave
lds
jbe
push
movsb
scas
in
scas
adc
daa
and
movsb
push
lcall
repnz
bound
mov
mov
cmp
sarb
dec
jbe
out
aaa
and
stos
in
pop
adc
dec
in
xor
lock
lea
xor
aas
movsb
xchg
pushf
jle
sbb
sub
push
jmp
add
out
xor
xchg
andb
cmp
outsb
mov
cmp
clc
mov
or
iret
push
jo
sarl
add
xchg
lcall
inc
lock
je
loope
aas
jp
xchg
call
and
sub
push
cmp
fisubs
loope
mov
sti
ja
add
and
sub
lods
movsb
jae
sbb
push
sahf
inc
pop
xor
fnsave
jmp
push
loope
cmc
mov
rorb
jg
rcrl
and
filds
ficompl
pop
rorl
cld
cli
xor
push
jmp
fsts
mov
adc
cmp
or
xchg
jmp
inc
xor
xor
cmp
mov
test
mov
xchg
incb
clc
xchg
js
adcb
dec
dec
mov
fs
nop
stos
dec
aad
aad
fwait
push
test
and
bound
imul
divb
xorb
adc
into
fdivr
lds
jg
mov
dec
cli
xor
outsl
pop
les
adc
mov
ret
cmp
xchg
aaa
mov
mov
movsb
sbb
xor
lds
sbb
cltd
add
icebp
sub
negl
imul
stos
sarb
repnz
mov
cmp
inc
mov
xor
scas
add
inc
shr
pushf
push
cmp
pop
mov
inc
mov
mov
cmpsl
add
sbb
lods
fsubs
mov
inc
pop
and
movsl
insb
or
cmpsb
mov
frstor
or
cmp
scas
mov
sbb
stos
push
mov
ficompl
scas
fwait
mov
inc
pop
gs
sbb
mov
imul
xchg
fsubrs
into
cs
jo
mov
mov
js
not
adc
mov
testb
outsb
addr16
icebp
stos
dec
jge
pop
rclb
xchg
mov
mov
sbb
rcll
out
cmp
sub
mov
in
dec
mov
adc
ja
mov
dec
repnz
aaa
adcl
in
fiadds
sub
mov
adc
lock
js
out
dec
imul
clc
jmp
mov
imul
inc
in
xchg
div
dec
testb
push
das
gs
in
xchg
pop
loopne
cmp
aas
hlt
xchg
inc
jp
sub
pop
aaa
imul
jl
aam
add
fwait
jmp
rcrl
xchg
cmp
jge
jnp
mov
mov
lods
inc
inc
pushf
pop
cwtl
or
xchg
enter
ret
in
or
ja
lahf
and
pop
pop
sbb
mov
jnp
xlat
jbe,pn
push
into
mov
xchg
insb
cli
in
sub
imul
addr16
xor
inc
lahf
hlt
into
jge
aas
mov
mov
call
ljmp
fadd
fsubl
mov
insb
xadd
in
ret
aad
mov
lock
mov
push
xchg
mov
data16
inc
loop
mov
rclb
sbb
push
sbb
addr16
sub
pop
scas
fsubrs
or
mov
mov
lret
jno
idivl
xchg
cltd
hlt
out
cmp
fcoms
sbb
daa
or
cmpb
push
pop
push
pop
pop
fs
aaa
sbb
xor
pop
dec
sbb
xchg
sahf
mov
out
pop
in
lock
cmpsb
lods
rcrl
cmp
dec
pusha
xchg
cmpsl
mov
xor
in
adc
sub
mov
movsb
stos
in
push
iret
jno
jnp
fwait
push
fmulp
dec
imul
dec
push
in
vmovaps
imul
or
xor
ja
fcoms
jb
fs
mov
inc
cmc
lahf
adc
js
int3
sbb
xor
mov
lret
pop
shlb
and
pop
mov
xor
ja
push
pop
and
cwtl
push
adc
cmp
jae
and
mov
icebp
aaa
stos
sbb
in
scas
loop
inc
sahf
aam
xchg
in
nop
dec
lret
aam
push
clc
test
fdivrl
pop
sbb
push
mov
shrl
or
cmpsl
lcall
ret
mov
pop
push
pop
jb
iret
test
addr16
faddl
cmpsl
gs
xchg
enter
dec
aaa
push
mov
popf
or
and
ss
or
push
pop
mov
xor
ja
xchg
add
test
inc
daa
inc
cmp
mov
lahf
mov
test
aam
movsl
cwtl
cwtl
gs
les
sub
jbe
test
out
mov
pop
fldt
xchg
sbb
mov
insb
loop
mov
xor
movl
xchg
xchg
inc
cmpsb
aad
pop
dec
dec
in
pop
xchg
xchg
fcmovnb
stc
fmull
jnp
sbb
pop
jecxz
adc
sar
push
sti
mov
out
mov
xchg
sbb
jns
cmpsb
bound
jmp
clc
daa
add
dec
pop
xor
in
out
add
mov
mov
imul
hlt
cmpl
lods
and
jae
mov
pop
gs
xchg
test
sbb
mov
aaa
or
push
mov
xchg
mov
outsl
xchg
or
jnp
fstpt
jl
lock
les
jnp
mov
ljmp
mov
inc
arpl
add
aad
imul
fs
outsl
xchg
fildl
jnp
xor
imul
push
mov
pop
mov
loope
xchg
subb
lcall
nop
mov
pop
xlat
and
addr16
sbb
xchg
jae
aad
rcrl
xor
mov
bound
add
add
inc
dec
roll
mov
mov
sbb
pop
lret
orb
inc
xchg
jo
test
ret
imul
cltd
jmp
push
lahf
cmp
xchg
and
sub
insb
mov
xorl
mov
js
pop
cmc
pop
dec
sbb
lret
arpl
mov
shlb
movsb
adc
push
mov
jne
hlt
test
jmp
add
fadds
sub
or
or
mov
fldcw
cltd
sub
jo
fs
int
out
or
lea
test
enter
adc
mov
and
loope
jg
test
pusha
or
push
mov
mov
adc
repz
out
mov
xor
rcrl
out
push
and
pop
fidivrl
cmpsl
push
je
mov
fidivs
add
sub
mov
leave
iret
cwtl
clc
loop
mov
mov
movsb
dec
in
scas
jno
inc
lret
je
pop
cld
cmpl
les
jmp
add
mov
cwtl
sbb
orl
jmp
shrb
adc
pop
sub
shlb
jecxz
fildl
ficoml
mov
sub
jno
lahf
sbb
add
xor
sbb
in
ja
imull
pop
fdivp
xchg
sbb
sar
mov
push
pushf
gs
lods
push
inc
push
mov
add
scas
inc
leave
shlb
lfs
add
aas
loopne
add
push
shl
stos
pushl
dec
mov
add
out
mov
dec
sti
cmc
aas
bts
push
lcall
fstenv
lcall
orb
mov
cltd
in
aas
sbb
ficomps
jecxz
or
mov
in
shrb
das
imul
mov
fwait
xchg
les
scas
xchg
std
sbb
sub
rcl
mov
sub
jp
jge
jle
dec
or
scas
push
dec
jno
mov
pop
pop
pop
iret
repnz
or
scas
aas
mov
lret
insl
sbb
push
jmp
cmp
push
stos
lds
or
int3
mov
sub
test
movb
xchg
mov
mov
jmp
or
dec
adc
ljmp
sbbl
adc
dec
in
fidivrs
cwtl
pop
enter
mov
jge
mov
lcall
adc
daa
xor
gs
into
addl
js
push
rdpmc
lret
aad
xor
shrb
push
hlt
mov
mov
adc
sbb
fisttps
scas
data16
out
lret
xor
or
jne
xor
movsl
cmp
xchg
jb
mov
scas
inc
mov
fcmovbe
outsb
jmp
mov
imul
xchg
imul
enter
daa
ljmp
cmp
push
jno
cmpb
cmp
pop
jge
rorb
stc
das
jnp
lds
inc
sub
pop
js
lahf
adcl
jbe
push
orl
stos
push
es
sar
xchg
add
lock
cli
adc
gs
dec
sbb
notb
idivl
shrl
push
push
in
mov
pusha
hlt
arpl
jle
adc
ss
test
ljmp
arpl
dec
mov
ljmp
and
nop
cmp
rcll
dec
dec
ljmp
pop
mov
dec
and
imul
or
pop
hlt
cmpsl
je
addb
mov
push
stc
push
popa
sti
xchg
aas
das
and
pusha
pusha
test
inc
test
xchg
js
mov
out
stc
pop
mov
inc
lds
mov
movsb
mov
imul
cmpsb
push
sub
es
idivb
cld
jecxz
xor
push
cltd
xchg
sub
daa
mov
mov
imul
mull
or
nop
jmp
push
dec
push
mov
jp
dec
pop
and
cmp
jb
add
out
inc
and
xchg
sub
lahf
xchg
imul
jle
jmp
sbb
sbbl
xchg
cmp
pop
inc
faddl
and
cwtl
mov
into
gs
adc
pop
cmp
xchg
push
xorl
push
inc
jno
xor
push
push
push
mov
cmp
lods
inc
mov
aam
orb
ja
shrd
pop
lcall
adc
sub
fidivl
xchg
bound
shrb
sub
or
pop
mov
pop
sahf
daa
out
push
lods
inc
shrl
stos
inc
lcall
jb
scas
xor
and
jae
adc
xor
jbe
fsubs
mov
cwtl
push
xor
outsl
arpl
pop
mov
test
lea
xchg
push
cmc
adc
rolb
or
push
dec
pop
mov
jb
imul
mov
cld
dec
loopne
sbb
test
dec
push
xor
mov
cmpsl
and
pop
hlt
push
inc
mov
push
int
aam
clc
out
iret
data16
or
lret
outsl
push
call
ret
rcll
lds
repz
xchg
push
mov
xchg
mov
fistpl
and
cltd
sbb
ds
xchg
sub
xchg
in
sub
in
js
fs
xchg
iret
adc
aam
inc
cmp
test
pushf
lret
adc
ds
nop
mov
sbb
push
sub
mov
mov
mov
jnp
push
pop
mov
nop
loopne
std
sub
cwtl
add
fsubrl
hlt
add
jp
shll
pop
in
lea
cli
mov
mov
jae
addr16
add
idiv
shlb
adc
std
addb
sbb
inc
sub
xor
rolb
jae
dec
add
mov
xchg
aaa
xor
jo
or
std
aam
test
add
sub
push
lcall
loop
pop
dec
iret
es
xor
repz
add
std
xchg
arpl
sub
fsubs
sub
hlt
jl
or
and
adcb
inc
rcrl
sahf
xor
mov
mov
xlat
outsb
and
xchg
sub
mov
stos
push
lods
sbb
and
imul
into
hlt
adc
je
lock
ja
imul
ret
sub
hlt
push
xchg
and
sbb
xchg
jbe
xchg
test
mov
cmp
or
jp
ds
imul
xor
ja
cltd
jle
or
push
mov
inc
stos
sbb
fildl
pop
xor
in
out
pop
lock
in
fnstcw
lcall
popf
xor
into
sub
and
das
mov
loope
push
gs
es
adc
mov
mov
dec
sub
adc
cltd
jle
xorb
enter
and
xor
cs
add
jns
imull
mov
cltd
loope
call
xor
out
jecxz
fbstp
frstor
in
fistpll
cmp
out
loopne
fildll
fsubrs
pop
data16
cmp
iret
data16
insl
mov
lret
fadds
addr16
xchg
sub
sub
int
pop
test
addr16
shlb
mov
or
push
shlb
cld
or
cs
data16
cmp
je
je
fbld
mov
fnstenv
testl
bound
push
scas
ret
enter
stc
jmp
repz
aaa
into
mov
and
mov
add
mov
loop
stc
xbegin
fcoms
cmp
mov
lret
jne
mov
int3
mov
stc
mov
clc
loop
rcrl
cmp
mov
mov
mov
mov
data16
subl
popfw
or
lods
inc
aad
mov
mov
es
xor
add
ljmp
pop
dec
out
aam
pop
pop
jbe
mov
pop
xlat
lods
inc
or
push
in
adcl
inc
fucomi
jg
xchg
mov
testb
out
pop
mov
scas
mov
pusha
testl
pusha
add
sub
pushf
xor
das
and
sahf
call
jo
into
inc
fsubrs
or
push
mov
mov
xchg
cs
scas
inc
sub
call
fimull
leave
jle
mov
test
xchg
ss
into
gs
xor
pusha
arpl
pop
jnp
or
or
popa
cmp
scas
inc
xor
pop
stos
sub
pop
test
jmp
mov
mov
pop
pop
push
sub
ss
test
lods
mov
mov
and
and
sarb
lret
push
add
gs
js
push
insb
sbb
dec
outsl
lds
or
push
adc
pop
inc
sahf
dec
test
jb
sti
test
sbb
ljmp
ret
inc
lea
inc
dec
fistpll
jmp
sbb
out
test
mov
sub
cmpsb
sub
fcomps
push
dec
add
insl
xor
sub
mov
xchg
mov
scas
inc
loope
movsb
cmp
adc
pop
test
jg
sub
cmp
pop
rclb
mov
movsl
jle
dec
outsb
mov
mov
xchg
daa
mov
xchg
inc
int3
arpl
rclb
jbe
mov
mov
dec
in
push
fwait
xor
jmp
xchg
inc
fdivl
stos
xlat
outsb
in
jle
mov
pop
jp
pop
push
adc
repz
or
testl
jp
icebp
mov
test
mov
int3
adc
data16
addr16
pop
nop
jae
xchg
arpl
pop
lock
ss
push
add
imul
jne
stos
aas
jmp
sbbl
and
xsha256
cmpsb
adc
jnp
jo
mov
mov
icebp
mov
stc
hlt
std
xchg
call
in
xchg
loopne
repz
adc
xchg
adc
pop
test
das
dec
push
out
out
push
sub
add
and
loopne
sarl
aad
xor
shlb
cmp
sbb
stos
daa
mov
xchg
mov
mov
pop
lock
ret
or
outsl
jl
pop
repz
jg
in
outsb
test
popf
mov
aad
popa
mov
das
jecxz
push
in
push
sti
sub
sub
aad
fs
dec
loopne
jle
scas
sbb
mov
dec
loopne
pop
mov
das
iret
data16
aaa
rcrl
push
in
int
pop
repnz
mov
push
jmp
clc
xchg
sub
pop
xor
mov
inc
cmpb
cld
stos
fs
push
out
add
xchg
xor
fidivs
mov
loop
jns
shrb
mov
jl
lds
mov
mov
or
mov
mov
dec
in
pop
outsl
push
dec
in
out
xchg
jg
fsubrl
int3
arpl
in
adcl
push
cmp
mov
or
scas
cmp
mov
lock
mov
or
push
cmp
shrb
cmp
stos
xor
test
push
lods
scas
pusha
or
call
repz
and
faddl
in
insb
xchg
mov
push
test
js
inc
mov
mov
hlt
mov
dec
in
sub
pop
out
or
fiadds
icebp
mov
aam
popa
enter
cmp
xor
gs
jns
pop
insl
mov
shlb
arpl
adc
push
xchg
lods
inc
lds
pop
pop
xsha1
cmpsb
dec
fwait
fs
or
mov
cmp
inc
sbb
int3
xor
test
mov
xor
les
xlat
dec
push
into
gs
mov
pop
mov
movsb
adc
fists
lods
inc
inc
push
or
lret
rolb
cltd
ret
adc
mov
fs
mov
shll
xlat
or
into
cmp
daa
push
and
pusha
push
xchg
jg
push
lea
mov
test
movsb
fidivrl
adc
mov
mov
push
jmp
xchg
jl
subl
xchg
sub
jl
sub
hlt
ds
or
imul
sar
repnz
aaa
pop
shlb
ret
inc
inc
fnstenv
sahf
xor
mov
mov
mov
scas
and
ds
inc
jno
mov
jmp
dec
push
out
ret
cmc
aas
popf
xor
in
push
call
push
inc
jmp
jns
sahf
xor
xchg
xchg
dec
filds
int
mov
ss
push
push
ss
fsubl
test
dec
sbb
std
xchg
push
pusha
cmp
push
pop
lahf
mov
inc
fadds
inc
xor
jb
xor
push
test
test
stos
xor
sbb
pop
scas
pop
pop
rcrl
test
cld
ficoml
or
ret
pop
jg
mov
andl
gs
repz
inc
inc
sbb
mov
leave
mov
iret
loop
pop
lock
gs
sbb
je
nop
nop
xchg
sub
aad
cmp
in
dec
push
inc
mov
ja
shrl
je
jae
mov
mov
fcoml
test
sbb
mov
xor
enter
int
test
mov
push
out
jmp
jo
or
or
sub
sub
mov
dec
in
shrb
push
shrb
daa
repz
out
addb
push
mov
icebp
imulb
and
dec
loope
dec
dec
in
popa
insb
call
mov
sbb
sbb
mov
ds
pop
mov
pop
mov
fucom
ja
add
xchg
bound
lods
mov
xor
fcmovnbe
cmp
push
std
push
jmp
pop
dec
jo
cmpl
and
push
lods
inc
daa
and
popa
xchg
mov
mov
test
xchg
or
fwait
jg
xchg
sub
pop
mov
cs
pop
jo
shlb
insl
mov
mov
jl
or
sti
xchg
aas
ds
xor
lods
rcrl
aaa
into
mov
fsubrs
stos
leave
pusha
in
or
je
cmp
adc
push
jl
leave
outsl
mov
loop
test
jmp
adc
in
test
mov
xchg
xor
insl
arpl
mov
ljmp
mov
xchg
in
aam
outsl
movsb
cmp
outsl
call
pop
sahf
or
mov
cmp
dec
scas
sbbb
jle
jecxz
stc
sbb
sub
pop
dec
xchg
sub
pop
out
mov
mov
sbb
pop
xchg
sub
ljmp
push
sbb
mov
mov
movsl
arpl
stc
arpl
in
adc
xchg
inc
push
insl
add
pushf
mov
inc
rcll
fiaddl
jmp
js
fnsave
daa
mov
cmp
and
es
ret
pop
pop
mov
sbb
dec
jg
scas
outsb
xchg
or
adc
fwait
xor
lods
inc
sahf
inc
test
mov
cmp
and
adc
fistl
xsha1
cmpsb
mov
scas
inc
dec
fstl
test
rcrl
pop
mov
loope
test
mov
pop
mov
movsl
pop
repnz
or
popf
cmp
es
das
pop
sub
movsl
pushf
subl
scas
into
lods
aam
ficomps
mov
cmp
add
push
mov
sahf
add
lds
movntq
xchg
int
lods
inc
sbb
and
inc
pop
call
roll
popa
clc
cmp
push
movsl
push
mov
inc
mov
test
jmp
and
push
dec
in
cs
es
jp
les
xor
stos
cltd
pop
sahf
or
lret
out
stc
lods
add
xor
inc
fst
sub
lahf
pop
loop
mov
mov
ja
aad
inc
fneni(8087
in
gs
fidivs
ljmp
push
jb
mov
cmpb
call
daa
pop
sub
jno
adc
fwait
pushf
adcb
les
cmc
and
fs
in
into
gs
movsl
mov
pop
jp
mov
xchg
lods
clc
and
lods
inc
add
clc
inc
pop
push
in
mov
int3
fs
jg
xchg
and
nop
cmp
stos
lret
sti
fldt
push
adc
dec
pusha
idivl
outsl
push
jb
add
clc
rcrl
jmp
fstpl
fsubrs
xor
test
aad
add
lret
adc
cld
stc
jmp
inc
sbb
imul
jno
ljmp
out
insb
add
ret
hlt
lock
test
out
repnz
pop
push
xchg
outsl
mov
test
jne
enter
or
push
jmp
jbe
jno
sbb
inc
or
insw
mov
lahf
cwtl
outsb
add
stc
ds
xchg
loope
push
aad
xchg
sub
lock
gs
cmpsb
sbb
push
nop
mov
out
test
push
test
push
jb
jl
mov
in
andl
shrl
adc
dec
lahf
out
setbe
mov
fsubrs
add
rolb
xor
mov
cmpsb
lods
inc
call
repz
adc
push
inc
fdivs
es
insb
hlt
mov
mov
pop
xlat
mov
push
push
jno
push
xchg
loope
push
mov
push
jg
inc
test
push
and
mov
add
xor
sub
pop
cmc
mov
clc
mov
mov
out
sub
adc
shrb
jae
mov
cmpl
cmpsl
mov
pop
imulb
mov
dec
sub
add
lahf
jnp
xor
inc
fsubr
or
xlat
outsb
and
cmp
pop
sub
stos
stos
pop
push
jmp
mov
inc
out
add
xor
repnz
fldcw
loopne
imul
ss
out
sbb
or
pusha
cmp
and
pop
fisttpl
dec
jecxz
sbb
cwtl
fists
mov
sbb
sub
jg
mov
test
mov
call
sbb
mov
pop
mov
clc
outsl
mov
mov
inc
fldcw
add
pop
mov
fnstenv
inc
sbbl
lods
sbbl
inc
inc
fnstsw
pop
push
mov
dec
add
push
dec
lds
stc
mov
cmpsl
cld
xchg
fldenv
inc
fsts
mov
cmp
pop
and
jecxz
mov
jnp
sbb
sub
pop
mov
sar
xchg
ret
xor
lds
pop
repnz
jae
shrb
inc
fiaddl
out
xchg
mov
push
es
imul
outsb
add
iret
or
add
pop
andb
mov
or
loope
movsl
cmp
stc
stc
nop
sub
movsb
pop
xor
cmp
scas
jmp
fbstp
or
sbb
jno
sbb
jno
sub
fs
push
insb
les
testb
cwtl
and
pop
sarb
fwait
xor
and
fsubl
mov
fnstenv
imulb
sub
cli
xchg
sbbl
mov
adcb
stos
inc
gs
in
add
fs
sub
daa
mov
mov
mov
in
daa
jbe
roll
sub
lret
cmp
bound
jno
pop
lahf
jne
rcrb
or
inc
and
scas
testb
cwtl
call
jmp
imul
sbbl
fisubrl
stc
pop
in
xchg
sub
test
xchg
mov
jns
shrl
push
call
sub
mov
popa
imul
xchg
sahf
mov
aad
shl
mov
es
push
jmp
mov
mov
push
lods
fisubrl
sub
mov
xchg
sub
push
xchg
sub
es
cld
xor
sub
scas
out
push
jmp
ljmp
and
mov
xor
jno
xchg
sub
rcrb
insb
dec
loopne
pop
repz
lahf
xchg
sub
pop
int
xchg
aas
dec
jecxz
leave
outsl
push
sti
loopne
sub
jecxz
test
out
loopne
dec
stos
inc
sub
sub
or
fs
ficoms
mov
lock
sub
fyl2xp1
nop
or
stc
xchg
or
sub
stc
nop
adc
cli
dec
dec
mov
sub
cltd
adc
push
ljmp
cmp
push
cs
icebp
popf
dec
in
jp
and
adc
inc
iret
and
addr16
ret
xchg
push
pop
xlat
pop
repz
sbbl
push
push
popf
test
cwtl
das
adc
sbb
push
mov
repz
and
nop
jp
and
int
mov
pop
push
cmpsl
inc
lret
outsb
xchg
sub
nop
outsl
add
ljmp
cld
push
inc
pop
mov
cmpsl
cwtl
sbb
stos
jecxz
ret
pop
gs
jecxz
into
aas
adc
add
fs
insb
and
pop
xor
xchg
pop
sbb
mov
push
push
jle
fwait
mov
fs
pop
sbb
fs
xchg
pop
imul
push
aam
fsubrl
or
iret
jl
jp
dec
out
fs
daa
jbe
mov
mov
push
cmc
mov
xor
xor
mov
psubq
push
stos
inc
cli
ret
movb
adc
sahf
push
mov
and
cmp
and
push
test
leave
fsubrs
xchg
jb
sbb
mov
xchg
sub
pusha
mov
sbb
xchg
mov
pop
dec
filds
or
test
lret
imul
push
mov
fists
test
cmpsl
push
jmp
icebp
cmp
loop
out
test
cs
enter
lods
sub
into
call
mov
dec
and
lods
pusha
sbbl
dec
inc
fnsave
mov
hlt
xor
jae
push
sbb
mov
xor
sbb
testl
shl
js
sub
push
ljmp
mov
pop
or
mov
cmpsl
xchg
sub
pop
das
stc
nop
mov
ret
mov
jecxz
sub
lret
leave
push
in
add
inc
fcomp
mov
vmovd
enter
in
dec
lahf
mov
jne
pop
xor
movsl
cli
sbbl
sbb
add
fstps
mov
xchg
es
mov
pop
xchg
incb
mov
dec
out
adc
aad
mov
and
sub
dec
in
iret
jbe
stc
enter
pushf
in
or
das
lret
jo
adc
fimuls
jbe
nop
daa
icebp
adc
repz
xlat
outsb
sbb
fnstenv
jno
inc
xchg
int3
xor
mov
push
add
imul
adc
jbe
fidivs
xchg
leave
pusha
or
out
test
inc
fsubrs
push
sub
inc
dec
mov
inc
call
push
movsl
push
mov
call
mov
shlb
push
sbb
jb
lock
scas
mov
and
test
inc
pop
repz
jbe
inc
pusha
xchg
sub
pop
out
push
dec
ja
mov
subb
sbb
mov
cld
adc
insl
shlb
inc
and
lods
inc
xor
push
push
call
push
push
cli
xchg
adc
outsb
mov
or
jae
mov
xchg
aaa
cwtl
das
push
mov
lds
inc
lret
bound
pop
repz
sub
dec
mov
mov
inc
xchg
subb
bound
pop
sahf
test
gs
xor
xor
sbb
lock
lret
or
inc
into
fnstsw
lahf
lock
sub
cmp
outsb
jno
push
in
je
dec
loope
xchg
adc
jae
sub
outsb
add
mov
pop
pop
icebp
jp
sub
push
and
or
mov
ss
jg
shl
jns
sbb
mov
or
mov
repz
shrb
vcvttsd2si
jno
in
add
add
jns
loopne
and
or
jb
mov
cwtl
in
popf
xor
test
mov
cmp
mov
ret
or
dec
aad
jle
in
es
fcmovb
mov
hlt
sti
out
in
xchg
jp
lret
push
fs
jg
xor
test
mov
push
xor
inc
or
sti
xchg
mov
fcmove
popa
int3
jge
push
stos
in
lock
dec
mov
sbb
icebp
mov
or
xor
lds
icebp
mov
mov
sbbl
dec
es
test
dec
mov
cmpsl
jno
push
arpl
aam
test
pop
dec
pop
push
jmp
in
xchg
sbb
jnp
scas
subb
iret
in
shll
lcall
cmp
in
mov
addr16
ja
js
stos
inc
cmp
mov
outsl
lahf
cmpsl
pop
not
rolb
mov
cmc
mov
xor
inc
xlat
clc
jns
xor
les
fimull
sti
or
dec
jle
lea
lahf
mov
out
sahf
xor
xor
push
mov
in
dec
and
int
pushf
or
fs
fsubl
push
popf
out
js
mov
sete
xorl
fnstenv
ss
cli
xlat
enter
jg
dec
lods
js
inc
xor
jb
cmp
ficomps
inc
inc
jmp
lock
cmp
adc
in
cld
movsl
sbb
pop
aaa
fidivs
insl
mov
bsf
je
xchg
sub
pop
push
ljmp
or
jbe
ret
pop
or
jns
fldt
xor
fwait
jb
cmpsb
mov
xchg
sub
dec
loopne
inc
daa
sbbl
popa
push
push
add
ss
shll
push
jg
mov
shrl
jae
inc
mov
out
pop
pop
shrb
inc
xor
xor
clc
pop
push
cmp
int
shrb
lret
insb
add
jns
push
imul
push
incb
imul
fidivl
mov
sub
sbb
ds
sbb
xor
xor
or
pop
mov
js
repnz
repnz
adc
mov
adc
je
sbb
cmc
mov
xor
mov
fists
xor
aad
sub
lods
inc
jbe
test
adc
bswap
pop
lcall
xchg
outsl
mov
lea
push
cli
xchg
inc
out
inc
fimull
fs
scas
push
cmpsb
add
frstor
add
cli
inc
icebp
mov
dec
jbe
iret
data16
es
xor
adcb
push
aaa
into
inc
mov
jns
addr16
pusha
pop
xchg
insb
push
mov
mov
les
and
mov
mov
hlt
and
std
xchg
add
xchg
cmp
mov
dec
test
test
insb
pop
icebp
pop
pop
repz
movsb
cmp
out
dec
xchg
or
add
sbb
sub
into
pushl
clc
mov
fs
cmp
int
pop
dec
fisttps
pop
jo
clc
pop
and
jb
cmp
repnz
sub
mov
xchg
cmpsl
notrack
shrl
cmp
lods
outsw
push
fwait
int
ja
xor
pop
out
shl
mov
in
xchg
and
sub
pop
mov
push
loope
test
xchg
cs
cmpsb
call
scas
stc
sbb
push
dec
cmp
jge
icebp
mov
pop
lock
ja
cmpsb
test
ja
and
push
adc
fildll
mov
out
xor
mov
cs
sahf
pop
dec
mov
pop
pop
and
xchg
arpl
cmp
jns
orb
sbb
fldl
push
inc
mov
push
sbb
movsl
pushf
mov
and
inc
lret
mov
ds
mov
out
sbb
jne
insl
push
clc
cmp
push
lods
mov
mov
adc
data16
push
jmp
mov
fisttpl
mov
sub
lods
inc
sub
lret
shlb
add
sbbl
icebp
push
popf
and
cmp
lret
mov
fld
push
fidivs
out
negl
jb
xchg
movsb
cmp
imul
mov
mov
push
jge
or
jl
les
mov
es
insb
sub
cli
cmpsl
out
ss
pop
cmp
ljmp
neg
xchg
push
sub
pop
ja
sub
lret
cmpsl
out
gs
dec
fcompl
mov
jp,pt
xchg
loope
dec
dec
mov
ja
repnz
cmp
cs
add
push
aas
push
sarb
dec
push
mov
sbb
outsl
mov
testb
call
xor
jne
xor
adcb
out
call
outsb
add
outsb
dec
mov
jnp
rcrl
stos
inc
into
loop
jbe
lock
std
xchg
push
mov
mov
xchg
add
fstpt
rorb
and
pop
cmp
insb
xorb
lea
mov
loopne
adc
daa
mov
pop
xor
data16
xchg
test
inc
pop
and
popf
bswap
inc
shlb
ljmp
or
or
es
icebp
jne
xor
loope
sub
int
inc
mov
add
jae
rol
lret
dec
rclb
mov
icebp
push
out
fisubs
into
adc
jnp
inc
fistl
xchg
out
fwait
lds
mov
add
sbb
push
imul
outsl
mov
push
data16
inc
std
jl
and
cmp
lods
push
jne
push
or
lret
testl
mov
jg
sbb
cmpsl
mov
js
js
stc
pop
cvtpi2ps
inc
aas
or
mov
dec
pop
push
ja
inc
outsl
in
pop
sub
lcall
mov
xor
testb
cld
and
mov
mov
push
out
sbb
mov
mov
popf
xor
sub
sbb
cltd
cli
pop
test
dec
pushf
jge
aam
test
mov
adcb
std
push
sub
push
xor
pop
movsb
adc
in
sub
aas
push
cmp
neg
mov
jbe
scas
jecxz
stos
cmp
add
jl
aam
sub
mov
and
jle
ljmp
cmpsb
shll
sbb
cmpb
jmp
lods
push
inc
test
push
popl
jno
cwtl
sbb
add
stos
push
pushf
inc
insl
sbb
fld
ja
clc
repnz
fistpl
arpl
xchg
out
ljmp
repnz
hlt
lock
xor
cmpsb
nop
xchg
faddl
jecxz
ljmp
incl
sti
add
je
ffree
fisttpl
cs
or
jns
jne
inc
aad
dec
dec
xor
fldt
cmpsl
push
jp
mov
jp
ret
or
jmp
mov
mov
cmp
cmp
addb
ficomps
imul
pop
sahf
fiadds
sub
cltd
push
insl
inc
jns
addr16
insl
push
stc
sbb
pop
dec
or
add
in
xchg
xchg
clc
decb
lea
jmp
inc
lahf
ds
xchg
das
mov
xchg
dec
xchg
adc
xchg
mov
push
and
and
ljmp
push
mov
rorl
inc
pop
mov
add
std
data16
rol
arpl
pusha
mov
cmc
cwtl
xor
popf
rolb
flds
pop
inc
notb
mov
cmp
adc
pushf
sahf
out
or
fld
in
adc
mov
lods
in
dec
lds
adc
in
test
mov
and
shrb
mov
mov
dec
or
imul
icebp
pop
popa
lds
cmc
sti
or
inc
xor
gs
sbb
andb
pop
push
aam
repnz
push
lcall
mov
xor
lea
rorb
subb
scas
sub
lea
mov
cmpsl
lcall
xchg
addr16
imul
stos
mov
xlat
or
mov
xchg
fstpl
ror
jae
ja
add
outsb
sti
push
ds
aam
in
fisubl
repnz
sti
pop
mov
add
fs
push
xchg
popa
mull
int
jmp
data16
inc
out
scas
sbb
sub
into
lahf
hlt
mov
push
int
cmp
xchg
inc
adc
dec
imul
xchg
rclb
mov
jb
daa
mov
mov
daa
movsb
xchg
ja
dec
fstl
inc
fdivrs
push
fnstsw
js
push
push
adc
dec
jl
sub
repnz
call
test
orb
sub
sbb
imul
cmpsl
xor
dec
insl
das
push
movsb
jno
xor
adc
mov
and
cmp
mov
and
fists
add
sub
stos
sub
xor
mov
sahf
ficomps
dec
stc
sub
aas
pop
cld
mov
aad
shr
jg
outsb
stos
enter
roll
push
mov
shr
push
lcall
sub
fisttpll
sub
int3
cmc
popa
repz
or
mov
lock
lods
cmc
mov
pop
enter
and
and
xchg
sahf
test
into
xor
pushf
call
shlb
icebp
addr16
inc
popf
loop
or
iret
fldt
inc
jo
sbbb
cmp
ljmp
aaa
cld
shll
dec
pop
movsb
cmp
imul
push
stc
loopne,pt
and
sbb
int3
xchg
and
mov
xor
loop
cmp
orb
cmpsl
sub
or
enter
insb
push
sub
xchg
xchg
sti
daa
cmp
mov
mov
mov
mov
add
mov
insl
mulb
cmp
push
push
test
xchg
mov
fiaddl
mov
imul
mov
repz
iret
faddl
mov
mov
leave
mov
mov
jnp,pn
dec
adc
imul
adc
inc
jmp
add
mov
sub
fildl
jbe
jns
mov
jle
loopne
pop
jle
popa
in
lret
imul
and
aaa
adc
xchg
inc
dec
push
jg
aam
es
mov
xor
insl
cmp
cmp
mov
insl
add
add
leave
leave
pusha
mov
stos
mov
xlat
idivb
les
jl
fisttpll
mov
pop
bound
xchg
jne
inc
shll
jae
and
movsb
mov
imul
mov
flds
add
cltd
xlat
mov
lods
push
cltd
push
or
mov
mov
outsb
inc
clc
push
xchg
jmp
stos
xor
xor
ja
test
popa
pop
add
mov
ss
addb
addr16
idiv
test
xor
pop
add
insl
dec
adc
daa
arpl
mov
and
push
out
push
add
cmp
insl
stc
mov
shll
clc
test
rolb
outsb
or
sub
call
jecxz
sub
dec
sbb
test
mov
mov
test
nop
mov
in
cltd
mov
in
jo
lret
data16
dec
shrl
mov
add
in
xchg
add
stc
mov
hlt
adc
mov
std
sbb
cmc
call
adc
sbb
addr16
sbb
inc
pop
xor
sahf
dec
sub
pop
and
jno
xchg
cmp
dec
jp
xchg
inc
data16
jge
hlt
jge
subb
inc
into
cmpsl
shrl
sbb
mov
push
push
icebp
mov
mov
in
lret
sub
mov
jge
xchg
mov
lods
data16
mov
popa
mov
roll
xorb
sub
ret
inc
lods
cmp
mov
cmp
ja
lods
dec
and
insl
sbb
mov
mov
mov
jge
addr16
les
aam
mov
ret
aad
pop
int3
cli
in
daa
jmp
mov
scas
es
stos
sub
es
and
icebp
dec
add
cmp
push
pop
push
and
cmp
pop
mull
jg
lea
rorb
scas
js
or
lods
mov
mov
mov
xchg
inc
daa
push
or
lods
leave
in
push
mov
lock
icebp
or
stc
or
sar
popf
pop
mov
or
or
mov
inc
push
insb
cmp
lods
fs
mov
jno
sbb
in
dec
insl
jae
into
ret
insl
jge
mov
shll
movsb
out
ficomps
mov
mov
mov
test
mov
aaa
loope
adc
in
xor
test
insb
add
xchg
mov
xor
sub
or
jl
sub
pop
test
lcall
and
add
shl
and
repnz
push
jns
mov
test
cli
xchg
dec
cld
mov
jo,pn
mov
repnz
and
cmp
out
jbe
pop
repnz
jne
leave
xchg
mov
ficoml
dec
repz
out
inc
adc
insb
inc
data16
cwtl
repz
sub
mov
mov
and
fidivs
cld
mov
mov
dec
fidivl
sti
adc
aad
xor
dec
clc
sahf
in
and
hlt
cmp
jg
adc
push
popf
mov
loopne
mov
je
int3
lret
cmpsl
outsl
test
mov
fcoms
jno
stc
adc
sub
xor
dec
clc
xchg
jns
jmp
rcrb
mov
and
cmp
push
inc
iret
data16
pop
cmp
ficoml
lds
ds
sub
dec
fdivl
mov
cli
xchg
rorl
mov
hlt
cwtl
das
es
ds
dec
mov
jp
pop
repnz
aam
int
jp
xor
repnz
push
cwtl
das
xchg
cmpsb
jb
ss
pop
adc
pop
cltd
cli
loopne
sbb
push
sub
adc
cmp
insb
mov
negb
mov
dec
int
sub
das
xor
jle
or
fsubs
mov
xor
into
xchg
test
pop
mov
cli
jae
sub
cmp
sub
mov
jns
iret
hlt
int
es
xchg
and
cmpb
dec
jbe
or
leave
in
daa
mov
sbb
ds
outsl
xchg
arpl
ret
nop
sub
sbb
jecxz
loop
cmp
add
mov
push
mov
fsubl
nop
fs
ret
pop
popa
test
scas
mov
loope
mov
xor
or
add
pop
sub
pop
push
fstps
mov
push
in
mov
jno
push
rcrb
je
sub
mov
clc
addr16
xor
mov
in
xchg
or
xchg
pop
sub
inc
mov
dec
jecxz
adc
mov
jmp
inc
ficoml
mov
cmc
call
push
js
aas
cwtl
cmpsb
cmp
pop
popf
xor
push
mov
push
loop
loopne
outsl
add
je
popl
cwtl
mov
frstor
mov
lods
sbb
jmp
or
cmp
add
dec
shll
push
mov
out
es
pop
movsbl
jns
jnp
gs
ljmp
cli
xchg
outsb
sbb
mov
add
jl
cmp
and
cmp
scas
popf
xor
mov
shrl
cld
xchg
xchg
sub
out
int3
cmp
mov
loopne
rol
xor
mov
frstor
inc
fidivl
and
movsl
rcll
and
mov
in
jl
jnp
push
inc
cld
mov
and
xlat
lahf
jl
cmp
jo
out
frstor
out
cmpsl
ds
push
aas
lea
out
cli
pushw
xchg
dec
out
daa
in
sbb
sub
lock
mov
add
sbb
sub
jg
sub
sub
mov
sbb
repz
lea
lods
adc
fnsave
fbstp
cmpsb
mov
fadd
std
push
mov
and
sub
rep
ror
ds
lcall
addb
xorb
or
mov
jg
sbb
dec
imul
ret
xchg
iret
data16
push
repnz
sub
negl
mov
mov
xor
jge
mov
mov
in
add
jb
sti
xchg
jo
mov
data16
or
ficompl
and
jns
repnz
xlat
jne
fbstp
xchg
pop
cmc
mov
insl
add
push
push
mov
cmp
rcrl
dec
jecxz
loope
jno
or
cmp
inc
sbb
cmp
hlt
rclb
ret
pop
enter
adc
xchg
shrb
and
hlt
sub
popa
aad
xchg
xlat
loop
call
mov
xchg
cs
das
mov
jge
xchg
jle
mov
rcrb
movsl
cmp
and
cwtl
xchg
stc
repnz
mov
call
movsb
dec
or
or
dec
loopne
push
fnsave
adc
das
in
out
fcoml
sub
std
inc
fdivrs
fidivl
enter
push
or
inc
das
ficoml
and
mov
gs
mov
js
ljmp
fwait
pop
repz
and
inc
lock
mov
jge
add
pop
negb
jo
test
sub
setbe
and
cmp
mov
ja
mov
insb
jmp
leave
pop
aaa
fs
push
mov
sub
loopne
dec
jnp
cmp
jle
or
or
nop
fnsave
loope
lock
add
imul
test
ljmp
mov
push
test
stc
nop
add
and
and
inc
push
je
pop
cmp
push
dec
pop
mov
push
dec
jb
pop
insl
outsl
mov
push
add
les
and
testb
inc
inc
xlat
xchg
sbb
mov
mov
pop
scas
sub
iret
and
je
xchg
flds
sub
dec
xor
test
push
inc
fnstenv
addr16
add
out
mov
sub
pop
cmp
add
cmp
arpl
dec
jge
inc
inc
push
add
ja
xchg
lods
sub
js
jns
lret
rorb
xchg
dec
fcompl
repz
sbb
ret
mov
adc
xchg
pop
clc
das
and
stos
pop
inc
and
out
aaa
inc
clc
inc
leave
daa
cmc
test
test
cmpsb
xlat
or
loope
inc
or
xchg
cltd
arpl
sti
mov
lods
add
push
in
xchg
nop
hlt
mov
xor
or
mov
mov
mov
enter
dec
fistps
ficomps
int
loop
cli
jmp
push
xor
mov
andl
inc
movsb
cmp
popf
repnz
pop
lock
mov
or
test
testb
push
sub
imul
stos
testb
add
mov
leave
pop
dec
in
ljmp
sub
push
dec
pop
xchg
dec
jns
outsb
insl
jp
movsb
imul
rclb
dec
fists
cwtl
lret
mov
adc
lret
cld
decl
mov
aad
or
push
mov
push
push
stc
mov
leave
pop
lret
mov
cld
dec
into
ljmp
cmpsl
mov
andb
push
mov
jae
pop
mov
xor
adc
or
arpl
mull
cmp
arpl
and
add
repz
sbb
shrb
add
mov
js
lret
and
fidivs
push
ret
pop
mov
movsb
cmp
sarb
jl
or
xchg
mov
ret
push
popa
out
notb
iret
setns
sahf
lock
loopne
mov
sbb
js
pop
repnz
cltd
mov
ficompl
or
pop
sti
xchg
sub
popf
and
popa
out
imul
subb
in
or
lcall
push
jmp
xchg
mov
fiaddl
pop
out
xchg
testb
and
or
pop
mov
pop
repnz
or
movsl
jns
jbe
push
cmp
lea
out
adcb
cmp
xchg
pushf
shrb
pop
add
inc
mov
popf
mov
mov
adc
jl
adc
out
lds
xchg
cs
dec
aas
mov
adc
enter
xchg
jmp
add
mov
xchg
stos
test
ds
fwait
decb
pop
in
test
jg
decb
pop
xor
scas
movsb
push
pop
icebp
jge
sub
fidivrs
inc
fsubrl
cltd
fdivl
ret
mov
ret
pop
cld
call
in
adc
push
int
mov
pop
nop
sub
and
mov
cmp
loopne
ret
nop
daa
loope
sub
bound
dec
loopne
xchg
or
add
pop
lock
and
jge
es
sbb
ds
lock
lds
xchg
shlb
xor
mov
jmp
pop
xor
dec
lret
mov
push
add
xchg
in
xchg
push
add
pop
ljmp
push
cmc
inc
into
gs
aaa
into
test
insl
add
sub
mov
add
es
jl
or
rolb
mov
les
out
dec
in
sub
shll
pop
or
stos
inc
cltd
sub
mov
mov
push
rcrl
pop
bnd
mov
jmp
and
push
lret
and
jmp
scas
sbb
shrl
cmp
lea
fwait
and
inc
in
pusha
test
lock
addr16
fmull
loop
pop
iret
data16
pop
scas
cwtl
shr
test
mov
js
les
pop
mov
in
jg
lcall
jle
adc
sub
sub
or
leave
jnp
jl
ljmp
inc
fldl
jmp
or
mov
shll
repnz
mov
adc
int3
test
jg
jge
daa
mov
sub
pop
scas
pop
dec
ret
jge
int3
cmp
sub
outsl
sbb
xorl
loop
les
loopne
leave
mov
add
in
push
and
xor
stos
js
iret
data16
push
in
sub
sub
mov
inc
or
mov
lahf
jne
mov
sbb
stos
stos
inc
add
cmpsl
mulb
clc
popl
sub
sbbl
jns
dec
dec
mov
lods
inc
aaa
sub
mov
inc
outsl
lods
mov
sti
nop
ret
pop
ret
scas
jecxz
pop
leave
rcrb
sbb
fsubrs
pop
push
ljmp
outsl
push
loop
xchg
jmp
cmpsb
cmp
orb
fst
insl
popl
adc
frstor
add
nop
push
in
cwtl
les
idivb
mov
fidivrl
and
outsl
nop
inc
ffree
nop
or
xchg
shrl
sti
jg
orb
inc
aam
pop
dec
push
aas
jbe
sbb
sahf
pusha
stos
stc
sub
pop
mov
sub
jle
cmp
insb
stos
rolb
pusha
xchg
in
call
testl
push
cmpsl
xchg
shrl
test
cmpsl
mov
stc
imul
dec
fisttps
leave
movl
dec
les
adc
fcoms
add
xchg
or
lret
add
mov
idivl
inc
lds
cli
movsl
sbb
cmp
mov
outsl
push
pop
ret
aas
mov
mov
mov
jmp
lcall
cmpsb
out
sbb
dec
cmp
rclb
jecxz
lods
lahf
in
dec
dec
fistpll
daa
or
add
jae
pop
pop
lea
lock
frstor
xchg
into
add
sbb
es
inc
xlat
icebp
add
and
pop
int
mov
and
xchg
out
sub
icebp
fwait
lea
imulb
pop
je
xor
push
sbb
mov
lods
repz
daa
inc
mov
adc
jle
testl
jge
loop
inc
cwtl
jecxz
add
adc
pop
and
cmp
rorb
sarb
mov
xor
cmpsb
cmp
sbbl
je
dec
cmp
mov
test
stos
jno
jae
test
mov
jnp
insb
pushf
xchg
iret
xchg
sub
pop
adc
call
cmp
mov
lea
mov
jg
pusha
mov
cs
insb
pop
sahf
rclb
and
jg
xchg
pop
dec
mov
jbe
addl
loopne
lcall
inc
fstps
adc
mov
cmp
jp
add
cli
xor
out
pop
sub
pop
insb
arpl
pop
cltd
jb
push
jae
into
fisttps
pop
dec
xor
repz
mov
mov
push
mov
push
sub
les
xchg
fwait
pushf
inc
pop
pop
addl
loopne
mov
cmc
mov
push
xor
pop
cli
shlb
sbb
int3
dec
outsb
pushf
mov
push
xchg
and
mov
cwtl
cmp
pop
pop
fldl
insb
or
enter
xor
ja
mov
add
jnp
inc
lods
leave
push
subl
sub
sarl
dec
jne,pt
adc
lock
sub
stos
push
cmp
jae
mov
jp
cltd
push
fldl
js
fstp
pop
xlat
adc
push
loope
xor
xchg
sub
mov
mov
pop
icebp
jl
ret
push
in
in
loopne
jbe
sub
leave
mov
insl
xlat
cltd
pop
sub
inc
xor
dec
push
xor
pushf
dec
inc
jg
pop
hlt
inc
mov
stos
in
push
std
mov
mov
int3
arpl
mov
orb
push
and
imul
rcrl
or
add
pop
aad
adc
xchg
cwtl
cmp
leave
cs
add
push
adc
repnz
add
mov
or
sub
popf
xchg
xor
ror
mov
add
sub
popa
ror
inc
fmuls
xor
leave
pusha
pop
add
insb
pushf
in
push
jle
add
add
imulb
lds
cmc
lods
pop
or
push
fimull
mov
jno
dec
loopne
mov
jmp
jg
mov
pusha
daa
fcmovnbe
ljmp
or
or
ja
fs
inc
jbe
test
push
inc
push
dec
insb
add
into
cmp
aas
enter
into
push
dec
pop
popf
test
jle
cmp
sbb
outsb
ds
hlt
push
pop
cmp
fs
rcrb
lret
stc
mov
ret
or
gs
fimuls
inc
jp
dec
push
xor
jle
pop
cmp
out
scas
inc
jbe
mov
mov
mov
adc
push
mov
inc
ds
sbb
jb
sbb
xor
jbe
cs
popa
and
mov
dec
xor
sbb
mov
jg
aam
and
repz
cli
cli
jns
dec
mov
mov
jle
rorb
sub
fisttpll
sbb
testb
ja
cli
enter
out
imul
mov
inc
loop
and
ds
in
in
dec
mov
loop
aaa
aam
jns
fsubp
stc
jns
outsl
xchg
and
lods
inc
or
iret
aas
roll
loopne
xchg
cmp
rorl
leave
and
push
out
call
cli
xchg
dec
iret
or
popa
push
sub
aas
inc
jg
xor
push
cmc
pushf
and
mov
scas
mov
cld
xchg
insl
dec
in
inc
iret
mov
lods
aaa
pushf
lret
lret
das
or
dec
int3
fimull
xchg
outsb
pop
addr16
or
fst
jne
push
enter
mov
fidivs
rclb
pusha
testl
je
push
cmpl
and
pop
icebp
pop
cld
fidivrl
dec
xchg
lea
cmpsl
cmpsl
fs
mov
xor
push
test
test
pop
hlt
xchg
push
mov
int3
or
sub
jae
sbb
dec
movsb
or
add
mov
aam
dec
push
mov
and
int
dec
rcrb
out
and
scas
ficoml
xchg
jbe
insl
adc
add
mov
jmp
out
outsb
jo
loop
pop
out
mov
cwtl
stos
adc
test
inc
fisubrl
das
adcb
test
loopne
repz
jg
inc
cmc
or
pop
sub
and
movsl
or
sbb
inc
dec
xor
cmp
lahf
mov
pushf
and
jb
cmpb
lea
dec
mov
mov
call
es
cwtl
and
cmpsb
mov
push
in
mov
inc
aam
xchg
test
pop
sahf
dec
movsl
xchg
adcl
inc
scas
je
sub
addr16
call
daa
sbb
dec
adcl
push
xlat
imulb
iret
call
push
stos
dec
pop
sub
dec
and
adc
xlat
fcoml
xor
out
movsl
out
out
in
push
push
mov
enter
lds
stos
cmp
sti
fimuls
orb
push
xor
push
fsubrs
dec
cmp
push
sub
inc
outsl
test
and
jae
ret
jmp
in
pusha
icebp
push
lds
out
xlat
dec
mov
add
movsb
and
sbb
lcall
repnz
incl
mov
or
cltd
mov
xlat
outsb
cltd
fsubs
loope
mov
jae
in
sar
add
push
push
test
cmp
lods
inc
psubsw
mov
sbb
data16
shll
xchg
sbb
ret
ret
add
pop
push
mov
movsl
xor
aad
fisttpl
loop
fimuls
je
and
shrb
je
dec
push
dec
loop
insb
pop
ljmp
orl
pop
fsubrl
inc
xlat
subb
cmc
sub
int
cmp
push
add
roll
and
rolb
mov
out
dec
jne
movsb
lods
outsb
jle
mov
into
lcall
and
jno
icebp
push
lret
orl
aas
insb
pop
aas
scas
xchg
jno
stc
mov
xorl
stc
sbb
enter
mov
pop
mov
push
sahf
dec
popf
add
popf
sub
sub
repnz
pop
sar
adc
outsl
add
add
pop
jmp
jno
sbbl
ret
xchg
pop
or
dec
imul
jp
mov
sbb
dec
loop
adc
cltd
insb
sahf
or
xlat
orb
push
adcb
pop
push
push
fsubl
mov
fildll
xchg
inc
sub
push
std
cmpsl
in
adc
and
xchg
mov
fstpl
push
ficoml
sbb
sti
sbb
pop
in
arpl
std
aas
leave
cmp
push
fidivl
sbb
adc
fdivl
and
push
sysenter
sti
fsubrp
xlat
stos
ja
ds
cmc
mov
xchg
and
jno,pt
mov
loopne
cmp
jecxz
jo
cmp
and
add
enter
push
mov
repz
lods
mov
xchg
loop
push
jnp
jg
add
xor
lret
inc
mov
testl
mov
sub
sbbb
xor
test
mov
aaa
xchg
sub
cmp
pop
push
loopne
mov
lahf
or
mov
mov
jbe
mov
hlt
dec
mov
psubsb
int3
pop
mov
jge
and
scas
jecxz
movsb
les
push
lea
push
adc
lahf
ja
nop
das
or
xchg
inc
xor
push
mov
lods
fidivrs
repnz
icebp
inc
in
jecxz
xor
sub
daa
cltd
pop
dec
and
jp
adc
scas
fwait
dec
sub
hlt
mov
jg
pop
mov
fdivrs
int
sbb
ljmp
jno
int3
outsl
push
gs
addb
pop
rclb
sbb
loope
dec
push
inc
aam
pop
push
shrb
stc
xor
jmp
sub
add
repnz
dec
imul
pop
cmp
xchg
mov
mov
ret
in
das
and
jns
nop
stos
lea
movsl
repz
das
addr16
aas
cmpsb
cmp
call
repz
pop
lock
push
repz
test
repnz
int
dec
mov
fnstenv
cmc
adc
xchg
adc
jne
push
outsb
arpl
push
sbb
aam
xchg
sub
fnsave
dec
mov
mov
cmpsb
roll
xor
js
mov
mov
out
dec
filds
lods
gs
sbb
xchg
fimull
push
aam
imul
sbb
jge
mov
fidivrs
adc
sub
das
adc
jmp
cmp
in
lea
mov
and
xor
aaa
loope
adc
daa
mov
adc
cld
sub
test
xchg
mov
fnstsw
das
cmp
idivl
mov
sbb
inc
loopne
inc
mov
dec
mov
sub
jp
add
scas
test
mov
test
or
bound
sbb
loopne
sbb
icebp
jae
sub
jle
rclb
in
test
hlt
mov
dec
sahf
sub
stos
mov
mov
sub
aaa
mov
dec
cld
lea
es
loop
push
icebp
popf
push
cmp
aas
stos
outsb
add
rclb
xor
in
das
out
inc
popf
mov
mov
xlat
push
rol
or
mov
sub
fdivl
sub
lcall
faddl
jb
xor
mov
jne
aam
and
fldl
pushw
cmpsl
adc
stos
gs
or
rcr
push
pop
mov
dec
data16
cmpb
adc
xchg
mov
xor
aad
cmp
rcrl
dec
pop
fcomps
jmp
or
imul
mov
push
data16
push
jno
jne
or
movsl
pushf
nop
and
fistpll
sbb
or
xor
mov
xor
cmpsl
pop
xchg
ja
push
sbb
xchg
jmp
adc
mov
shll
adc
dec
inc
cmp
inc
pushf
cmp
pop
mov
mov
in
jbe
mov
outsb
push
xchg
push
les
adc
fsubs
mov
pop
imul
push
ret
sar
jo
addb
pop
push
addl
or
inc
aaa
mov
popf
pop
or
sub
jge
fsubp
dec
mov
loopne
sbb
cmp
jg
add
mov
add
rcll
adc
lods
push
mov
fwait
mov
fwait
mov
dec
imul
push
jge
xor
mul
ds
lahf
xor
xor
ds
add
sub
push
decl
mov
xchg
insb
pop
mov
bswap
inc
aas
push
sub
dec
mov
push
in
adc
popf
iret
mov
mov
xchg
cli
lock
xlat
cmc
data16
jmp
fs
push
fidivrl
adc
jge
lods
scas
insl
lret
jmp
or
cmpsb
or
mov
mov
icebp
lret
out
in
js
dec
sbb
inc
push
cs
andl
lret
shrb
mov
loopne
sbb
adc
test
sub
out
imul
cmp
sbb
adc
xchg
xchg
ja
insb
nop
jo
scas
mov
push
fnsave
mov
fwait
test
mov
cmc
sbb
pop
jo
sbb
push
cs
push
and
mov
ret
jns
xchg
lds
mov
fwait
lcall
xchg
cmp
pop
adc
sub
or
xlat
jne
fmuls
popf
dec
cltd
pop
xor
pusha
push
mov
pop
jmp
mov
push
sbb
hlt
ja
addr16
lahf
xor
fcmovnu
mov
pop
lret
push
stos
inc
inc
adc
xor
sbb
or
xor
push
lods
notl
movsb
add
es
out
outsb
add
xchg
repnz
clc
outsl
lods
out
cmp
add
rcrl
cmc
lret
pushf
adc
xchg
push
cmp
leave
test
xchg
pop
cmp
ljmp
mov
leave
cmp
cwtl
movsl
repnz
and
insl
mov
push
pop
imul
insl
mov
in
xchg
test
sti
xchg
or
and
fwait
hlt
mov
dec
movsb
into
divb
imul
and
mov
sub
mov
add
fsubrs
xchg
mov
cmc
inc
pop
jecxz
jecxz
rol
aas
mov
push
adc
mov
lahf
sti
in
test
orl
aad
xchg
and
lret
push
scas
lock
push
movsl
jo
ss
popl
iret
ds
fstps
pusha
push
popf
pusha
imul
jo
push
jmp
xchg
sub
add
mov
cs
call
hlt
push
xchg
jge
adc
add
xchg
sub
ljmp
ds
fistpll
xchg
adc
push
stos
jecxz
arpl
dec
shlb
add
dec
xchg
push
insb
int
sahf
sub
mov
add
pop
lahf
fsubrl
and
es
xor
mov
push
and
pop
jno
mov
lea
ret
inc
and
mov
test
int3
dec
std
enter
mov
insl
or
pop
repz
push
adc
xchg
popf
xchg
xor
sbbl
js
hlt
mov
cmp
outsl
push
lock
outsb
mov
mov
xor
pop
pop
mov
mov
push
pop
or
cmp
mov
mov
int
lcall
and
mov
push
dec
pop
loop
and
rcrb
stc
dec
dec
cmp
cmpsb
push
out
addr16
sub
pop
cmc
hlt
dec
test
adc
mov
xor
cmp
mov
jno
jecxz
stc
shr
js
loope
mov
and
fcomps
dec
loope
sub
pop
xchg
jl
leave
jge
ss
ljmp
shl
test
fidivs
call
mov
ret
pop
repz
jg
idivl
push
int3
or
sub
cli
mov
inc
or
mov
push
sub
outsl
mov
fs
pusha
cmpsl
push
stos
jno
and
movsl
push
sbb
pop
cmc
arpl
fiadds
sub
pop
mov
mov
movsl
pop
dec
iret
xchg
loope
dec
int
and
push
out
shlb
mov
std
imull
int3
push
xchg
xchg
addr16
repz
jecxz
jle
push
add
xchg
pop
pop
shrl
sbb
hlt
stos
cmp
shrl
sub
lahf
push
add
inc
clc
mov
push
lahf
mov
add
mov
lods
inc
js
add
jmp
or
ret
dec
loopne
mov
leave
pusha
pop
inc
pushf
xor
outsb
mov
pop
dec
jb
pop
bound
sub
inc
add
xchg
jns
xor
pop
lock
sub
jle
pusha
or
sub
pop
push
mov
cld
mov
ret
test
jge
icebp
and
aad
inc
adc
push
rcr
mov
lds
stos
mov
enter
mov
xor
ret
hlt
mov
fcomps
mov
jmp
fimull
inc
sbb
mov
jecxz
mov
gs
xor
stc
stos
push
int3
adc
inc
cmc
fs
mov
fstps
mov
fs
xor
push
repz
fisubs
xchg
adc
mov
add
scas
fbld
arpl
xchg
dec
test
nop
mov
mov
int3
mov
addb
or
es
jae
push
call
jns
lock
mov
jl
xchg
pop
out
sbbl
xchg
lea
jbe
out
cmp
cmp
add
xor
js
dec
les
sahf
add
sahf
lock
divl
fsubl
shrl
fs
cwtl
movsb
cmp
daa
ds
stos
add
jae
xchg
pusha
pushf
and
mov
popf
inc
mov
sbbl
xor
lcall
mov
mov
out
inc
fnsave
outsb
add
jnp
and
iret
stos
inc
add
aaa
into
imul
pop
push
mov
mov
fidivs
adc
add
mov
fbld
mov
call
test
aas
leave
inc
pop
xor
arpl
mov
ljmp
inc
out
xchg
push
sub
popf
dec
adc
adc
arpl
jns
imul
lea
bound
lods
xchg
push
mov
or
repnz
js
cli
cmpsl
jno
fdivs
mov
jecxz
test
jno
pop
push
mov
adc
out
pop
cmc
xchg
inc
in
lds
es
jg
push
popf
lahf
pushf
fs
mov
cwtl
cmc
cmp
jecxz
pop
lret
data16
sub
loope
mov
dec
jbe
cltd
push
mov
shl
ljmp
xor
cltd
mov
mov
dec
cmp
xor
fistpll
dec
cmpsb
and
popa
xchg
dec
loope
shlb
data16
jl
mov
clc
roll
sbb
and
push
divb
sub
lret
or
nop
daa
ljmp
fcomps
scas
inc
xor
cltd
mov
jp
mov
push
xchg
pushf
mov
insb
scas
loopne
pop
icebp
or
sbb
fidivrl
arpl
pop
cmpl
popf
mov
xor
push
outsl
pop
ret
cmpsb
xchg
inc
pusha
mov
shrl
mov
pop
or
fiaddl
sub
xor
push
notb
cmp
insb
out
push
cmp
scas
aam
pop
imul
lret
mov
pop
test
xchg
mov
testb
pop
push
xor
push
pop
repnz
sbb
dec
cmp
jg
in
dec
ret
dec
subl
push
dec
sub
imul
clc
setge
sub
or
mov
mov
or
sbb
mov
movsl
adc
mov
shrl
jno
out
rol
dec
jnp
xlat
sub
jmp
testl
cld
mov
xlat
insl
jne
fwait
sti
push
push
sub
movl
int3
pop
xchg
fimuls
pop
test
pop
xor
jecxz
push
sbb
pop
xor
rorl
popa
mov
push
dec
mov
or
pusha
test
mov
add
jl
jo
fnstsw
pop
xor
shrl
cmp
cmp
jae
push
push
fisttps
data16
bound
xchg
cltd
jle
or
pop
scas
push
lcall
ja
repnz
xchg
sub
add
sub
arpl
lods
shrb
cmp
mov
push
enter
jne
pop
inc
fimull
sbb
lock
add
sti
mov
setnp
in
aas
add
cmpsb
out
jmp
sbbl
add
outsb
movsl
jmp
xor
inc
sbb
push
add
sbb
adc
mov
pop
xor
ds
mov
fwait
sbb
push
push
sub
push
push
icebp
or
imul
mul
into
and
mov
xor
xor
mov
adc
jl
ds
sub
es
mov
in
sub
testb
ljmp
fnstsw
mov
inc
xor
out
mov
jbe
test
inc
nop
fstp
fwait
decl
int
sti
in
add
and
sbb
dec
and
and
verr
mov
xor
xor
push
pop
cmp
xchg
scas
dec
loop
fwait
call
mov
gs
cmc
popa
repnz
mov
sub
and
pop
jg
stc
inc
cwtl
mov
dec
adc
jns
insl
test
fwait
bound
test
aam
adc
dec
fisubl
push
fidivs
lods
aaa
inc
pop
fdivrl
lods
xor
das
jmp
adc
push
or
sarl
mov
jb
rcrl
xor
lahf
cmp
sbb
push
or
inc
stc
std
rorl
and
lret
popa
ret
jge
pop
mov
sbb
cmp
fsubrs
pop
mov
rorl
pop
xchg
pop
sbb
sub
sbb
dec
or
pop
rol
enter
es
mov
and
addr16
imul
push
mov
jae
jg
and
test
jmp
lret
outsl
ret
xchg
lods
and
sub
mov
add
sub
and
jne
shl
jp
aad
jae
sbb
cmc
push
outsl
jae
mov
jnp
ja
stos
test
adc
and
gs
rorb
frstpm(287
pop
xor
setge
jp
ficompl
imul
outsl
push
mov
jecxz
test
push
sbb
pop
test
jecxz
aas
push
sub
je
test
pop
cmp
inc
xchg
jbe
xor
push
pop
ret
outsl
sub
jne
fwait
cmp
sub
fsubs
pop
or
popf
jo
out
cltd
inc
inc
in
lods
int
mov
adc
sbb
dec
push
lock
into
jle
mov
data16
int
xchg
jg
nop
mov
sub
inc
push
adc
out
lcall
add
push
enter
push
sub
or
sub
imul
jb
adc
repnz
pusha
ljmp
scas
rol
aad
inc
xor
cmp
mov
and
sub
push
lcall
xor
or
lcall
inc
adc
mov
or
imul
in
dec
lcall
in
out
cmp
lret
add
dec
jg
dec
cwtl
pusha
bound
xchg
mov
pop
jecxz
cwtl
in
cs
test
inc
xchg
sbb
rcrb
dec
dec
movsb
mov
hlt
addl
xchg
fiadds
pop
ss
jne
cs
inc
mov
add
ficompl
or
inc
fs
cmpb
and
xchg
das
lahf
lret
pop
mov
xor
lea
out
stc
popa
testb
addr16
sbb
dec
shrb
and
mov
pop
out
mov
jmp
out
cmp
dec
mov
and
xchg
push
ficompl
ja
sbb
or
fsubrs
fdivrs
daa
or
mov
or
das
adc
leave
pop
loop
daa
and
lods
loop
add
loope
dec
shl
shrb
setg
movsb
subb
ret
lea
in
pop
hlt
xchg
inc
mov
div
mov
jle
nop
ds
add
dec
inc
inc
out
mov
mov
in
arpl
int3
cwtl
xor
loope
adc
sbb
pop
inc
sbbl
jnp
xor
scas
mov
cmp
outsl
incl
ficomps
call
gs
lcall
hlt
and
enter
imul
dec
cmpsb
xchg
and
or
xor
xchg
sub
insl
jb
daa
cmp
cmpsl
mov
mov
ja
fists
or
adcl
mulb
inc
and
xchg
push
inc
cld
data16
movsl
xor
pop
inc
gs
add
inc
nop
sbb
in
mov
push
pop
shll
jp
jl
popf
dec
and
aas
movsb
sub
aad
popf
sub
jg
jecxz
hlt
sub
mov
push
xor
nop
daa
sub
iret
lea
lret
fisubrs
pop
push
call
pop
loope
push
shrl
cmp
push
ret
je
movsl
outsb
mov
rorl
sbb
mov
stos
pushf
aas
stos
pop
push
fsubl
es
das
rcl
out
test
or
xlat
cmp
push
stos
xchg
cld
test
xor
iret
cmpsb
inc
outsb
pop
enter
jns
xchg
and
loopne
enterw
mov
jns
xchg
xchg
cltd
inc
test
dec
out
in
loop
pop
lock
mov
not
jge
sbb
out
pop
jmp
pop
in
int3
cmpsb
pop
add
lods
ljmp
and
xor
mov
push
aaa
and
inc
hlt
subb
adc
test
and
and
lea
sar
sbb
aas
and
sub
jg
inc
std
mov
push
pop
adc
int
fwait
repnz
je
mov
or
in
out
sub
sbb
push
or
popf
pop
push
mov
jl
fcmovbe
mov
dec
jecxz
mov
or
push
imul
jg
sbb
inc
jo
dec
iret
jns
les
test
xchg
mov
fnstenv
lea
movsl
insl
mov
mov
scas
mov
xchg
or
in
mov
cmc
mov
push
jbe
stc
fwait
cwtl
sbb
pop
es
add
mov
dec
pop
scas
test
orb
xchg
jno
or
pusha
sub
wbinvd
shl
repz
push
sub
push
sub
imul
addr16
cld
movb
jnp
lds
jbe
fs
mov
and
xor
adc
xor
jmp
das
xchg
inc
arpl
repz
push
xchg
bt
aam
arpl
push
inc
cs
or
pop
or
cmp
scas
xorb
stc
sub
loopne
ud2
dec
aad
stos
dec
into
pop
mov
adc
jno
ss
inc
scas
fwait
cmpsl
je
lret
mov
push
push
les
cmp
rcr
xor
cmpsb
sub
mov
test
fdivl
stos
mov
fisubrl
and
aam
ret
dec
pop
lods
leave
js
sub
pusha
dec
fmuls
stos
inc
fildll
cs
xchg
int
adc
or
out
in
ja
stos
out
es
call
xor
mov
mov
outsl
pop
and
mov
fcmovnu
mov
inc
jno
inc
movsl
outsl
dec
out
xchg
stos
aad
and
xor
sahf
mov
hlt
push
jb
dec
xlat
js
pop
ss
pop
cmp
lret
je
stos
in
inc
stos
jns
ljmp
sub
mov
add
mov
mov
xchg
add
mov
sbb
iret
and
mov
in
mov
pop
push
test
xchg
insl
loopne
sti
das
icebp
cld
or
orb
xchg
sarl
jl
mov
out
mov
test
scas
sub
in
rol
loopne
push
pop
sarl
push
lds
dec
jecxz
addb
aam
dec
stos
in
mov
iret
cmpsl
xlat
jl
lock
fiaddl
aaa
into
jae
cmp
mov
push
enter
stos
pop
lea
pop
ljmp
scas
dec
fnsave
lahf
or
sbb
mov
mov
xchg
insb
aas
sarl
fsubs
dec
jae
out
stos
pop
pop
sbb
aad
scas
lods
jnp
dec
scas
xchg
outsl
mov
pop
pop
mov
fdivr
lods
push
popf
fisubs
and
inc
jbe
pushf
cmpsl
sub
out
ret
pop
mov
pop
dec
ret
or
mov
push
xchg
sbb
and
adc
call
popa
aam
sarb
testw
cmp
shl
mov
mov
insb
pushf
lds
outsl
sub
jo
sbb
mov
or
push
push
adc
sbb
loopne
js
mov
cmpsl
ss
ss
mov
fiadds
fnstenv
dec
daa
popf
cmp
inc
add
hlt
inc
inc
out
js
stos
push
rorl
xchg
push
dec
dec
stos
mov
repnz
aas
sti
out
push
outsl
xchg
inc
mov
lock
pusha
loop
mov
xchg
mov
xchg
stos
dec
xchg
ds
adc
pop
imul
xchg
adc
xchg
sub
repz
loope
xor
fisubrl
sub
out
xor
out
dec
mov
stc
popf
ret
je
push
mov
pop
mov
stos
push
cmpsl
pop
pop
adc
cmp
arpl
ljmp
lock
sahf
or
jecxz
push
jb
add
outsb
inc
ja
jnp
gs
int3
icebp
jg
and
or
std
mov
in
test
push
or
push
scas
adc
and
sbb
add
push
dec
and
fbstp
outsl
sub
xchg
imul
inc
gs
test
jae
das
insl
dec
sub
fucomi
sti
and
add
cmp
pop
stos
push
fadd
pop
movsb
into
ss
outsb
push
mov
ret
add
sahf
xor
addr16
sbb
lods
dec
cwtl
sbb
in
dec
lret
in
inc
sub
fwait
sbb
adc
jo
cmp
scas
pop
mov
or
rorb
dec
outsl
cs
inc
sbbl
loopne
test
pushf
push
je
adc
push
pop
jno
pop
outsl
cmp
cltd
test
or
xchg
faddl
popf
xor
mov
mov
mov
or
ljmp
jmp
fisttps
push
jmp
or
jno
push
sub
mov
lret
mov
jg
ljmp
out
push
repnz
push
adc
sub
rcrl
fwait
mov
fnstcw
and
jle
mov
rcr
jbe
rorb
push
mov
mov
aam
ficoms
push
je
mov
xchg
rorb
leave
aaa
xor
addr16
rclb
stc
je
sub
jne
pop
lods
in
mov
cltd
out
xchg
mov
out
shlb
jge
add
mov
fcmove
mov
fisttps
in
popa
mov
lods
addr16
stos
mov
and
jg
cmp
loop
cmp
mov
mov
nop
sub
fists
mov
sbb
adc
popw
ret
add
pop
xchg
roll
inc
cmp
xchg
xor
mov
dec
lcall
inc
sub
push
in
xchg
push
jne
push
jl
and
pop
lret
cld
push
data16
nop
cwtl
imul
fistps
and
xor
mov
push
push
ds
pop
push
sbb
pop
popa
pop
loop
or
mov
jecxz
sbb
xchg
jmp
out
cld
sbb
mov
adc
stos
cltd
jle
jg
fwait
stos
shr
stos
mov
addr16
mov
call
pop
cmpsb
inc
jnp
js
mov
dec
xlat
and
push
push
mov
subl
add
push
call
mov
add
lock
movsb
scas
pop
adc
fistpl
xor
pusha
mov
lret
cmp
nop
sub
pop
add
lods
mov
stc
pop
loope
repnz
iret
clc
gs
jecxz
aas
adc
addb
aad
fwait
push
stc
aas
mov
adc
jne
test
fdivrl
icebp
adc
mov
flds
arpl
sti
popf
aad
sbb
mov
sbb
xchg
enter
mov
lock
jp
rcrl
cmp
mov
das
das
push
mov
push
arpl
aad
test
sbb
call
and
ficoms
enter
mov
dec
jmp
iret
dec
mov
enter
scas
lock
mov
dec
jae
or
in
adc
jg
iret
or
or
outsl
mov
lock
repz
xlat
fiaddl
sahf
jae
adc
sub
in
imul
idiv
movsb
push
xor
jle
mov
mov
mov
movsb
psllw
xchg
add
stos
rcrl
mov
imul
shl
sbb
mov
movsb
mov
pop
sub
nop
jbe
cltd
test
jae
add
and
daa
in
mov
adc
mov
sub
pusha
loop
ret
add
dec
pop
mov
cmpsl
cltd
mov
test
repz
lret
xchg
pop
mov
lods
and
test
pop
inc
rorb
pop
ficoms
adc
mov
push
mov
jge
mov
push
inc
daa
mov
mov
pop
loopne
les
pop
hlt
pop
mov
int3
out
lea
pmulhw
mov
add
and
loop
pushf
push
js
pop
scas
mov
push
ret
mov
jns
imul
lods
ffree
inc
pop
sarl
jo
push
popf
sub
or
in
popl
cmp
sbb
in
dec
repnz
or
lahf
aaa
mov
push
movsl
or
jp
inc
std
add
lret
xchg
sti
dec
add
test
mov
inc
add
jmp
add
test
unpcklps
ss
in
out
mov
shll
mov
mov
gs
xor
pop
xor
push
into
orl
sub
loop
aas
xor
dec
pop
push
jg
aaa
into
ds
jb
sub
inc
add
aaa
xlat
outsb
push
ds
xor
sbb
pop
or
shrl
dec
mov
sub
clc
arpl
int
add
jle
jmp
pop
jp
sti
sub
mov
sub
mov
sar
je
cmp
fcomip
pop
repz
data16
fwait
mov
and
sbb
push
push
push
pop
ds
pop
stos
mov
add
jb
and
pop
adc
dec
das
or
leave
xchg
movsb
outsl
cmpsb
push
stc
daa
insl
cmp
test
pushf
cmp
outsb
cmp
mov
call
test
lcall
sbb
cwtl
sahf
mov
mov
jbe
es
mov
mov
std
pop
and
ja
inc
inc
xorl
ds
stos
dec
or
sub
movsl
sahf
cli
xchg
mov
pushf
pop
mov
orb
add
popa
adc
imul
cmpsl
loope
outsb
out
dec
test
aam
mov
fsubrs
add
mov
pop
imul
jno
or
iret
dec
pop
bound
movsl
jp
mov
jno
add
fldcw
sbb
jge
xor
add
adc
add
mov
mov
jmp
adc
addr16
popf
in
jmp
jne
inc
mov
mov
lock
jns
sub
inc
pop
pop
out
xchg
lcall
and
insb
push
aas
mov
or
mov
daa
mov
in
negl
mov
aad
int3
mov
cmp
vmovdqu
bt
fsubr
mov
sar
sbb
xchg
sub
lds
add
fs
mov
push
sbb
jnp
push
mov
bound
jge
xchg
mov
rcl
and
push
imul
inc
dec
ficompl
sub
and
dec
mulb
jmp
fisubs
cmpsb
les
pop
xor
js
sub
aam
arpl
sbb
mov
mov
push
in
std
cmpsb
mov
fdivrs
dec
rcll
pop
into
in
lods
or
push
push
clc
pop
addr16
sbb
je
ss
xchg
xor
bound
xchg
sbb
cmpsb
adc
pusha
add
sbb
add
clc
nop
lea
xor
xchg
imul
cmp
mov
testl
mov
outsl
push
scas
rorb
divb
cmp
jge
or
imul
cwtl
in
icebp
enter
pusha
stos
stos
jne
fucomp
addb
xor
movsb
xchg
call
mov
arpl
cmp
sbb
sbb
orb
xor
dec
arpl
pusha
dec
xchg
or
jns
mov
jbe
hlt
xlat
sub
inc
pop
cmp
sub
add
pop
jp
jo
mov
loopne
push
data16
loop
jg
or
lret
xchg
popa
enter
adc
jg
xchg
sub
cmp
sbb
dec
loope
push
pop
push
push
xor
loop
icebp
shld
sbb
mov
mov
xor
adc
es
adc
fnstcw
inc
cmp
pop
daa
bound
iret
jne
gs
xor
mov
addr16
mov
lds
shll
mov
loopne
adc
or
cmc
fs
mov
jge
sub
pushf
insl
and
adc
faddp
mov
out
shr
mov
jg
xlat
adc
mov
jns
xchg
sbb
int
adc
pop
mov
and
bound
data16
cmp
pop
popf
lods
bnd
orb
mov
add
pop
mov
sbb
mov
mov
push
pop
repnz
push
dec
dec
shlb
adc
mov
je
ja
ds
sahf
xchg
out
iret
roll
pop
jle
stc
jns
popf
jo
lcall
out
adc
bnd
frstor
stos
inc
inc
inc
pop
outsb
inc
xor
xor
popa
addl
stos
loop
xlat
mov
inc
lcall
pop
in
push
mov
xchg
sbb
lods
cmpsl
lock
jb
sub
inc
xchg
mov
dec
negb
add
ja
push
sub
mov
imul
iret
test
xchg
sub
cmp
loopne
mov
dec
adc
sub
gs
ss
rolb
popa
sub
sub
or
xchg
push
jp
xchg
or
mov
jns
ja
or
xor
sub
mov
jp
pop
ja
inc
xchg
mov
mov
mov
mov
test
inc
xchg
sub
stos
sbb
in
fstl
dec
cmp
loop
sub
cmc
inc
sbb
out
neg
sbb
mov
sbb
ret
nop
lahf
es
scas
push
pop
add
xchg
fdivl
out
dec
push
sbb
call
mov
out
cmp
pop
mov
pop
push
jnp
or
lods
shrl
ljmp
inc
std
scas
rcll
push
into
push
ljmp
cmp
dec
xchg
mov
fstps
cmp
mov
cmp
xchg
bound
or
fidivs
inc
stos
and
ja
mov
push
cltd
push
out
arpl
or
or
jno
mov
sbbl
add
mov
sahf
and
xchg
cltd
cld
and
lret
xlat
and
sub
fs
leave
je
popf
xorb
test
jo
std
movsl
mov
subl
dec
mov
sbb
xlat
xchg
arpl
add
xor
mov
sub
mov
int3
adc
mov
gs
insl
xchg
sub
scas
test
push
push
xchg
sub
nop
fisubl
jg
mov
lods
xor
xor
mov
dec
xor
xchg
mov
xchg
mov
cmp
icebp
shll
jmp
sbb
cmp
fistpll
mov
js
sub
xchg
mov
adc
jmp
int
ja
enter
repnz
mov
sarl
and
dec
repnz
xchg
xchg
sub
or
dec
cmp
aaa
call
lahf
es
addl
call
addr16
inc
ret
push
or
fs
dec
mov
inc
aas
inc
mov
lods
dec
test
sbb
push
testb
aad
cs
push
and
xor
lret
sbb
lods
fsubl
loope
jne
cmpsb
pop
dec
fwait
mov
xchg
mov
or
adc
out
loop
rcl
divb
mov
cmp
pop
xor
dec
loop
imul
mov
sbb
or
cmp
aas
inc
inc
push
adc
fidivrl
push
or
add
mov
out
popa
out
push
jno
test
imul
sub
or
mov
sbb
xchg
dec
lods
mov
clc
adc
cmc
bound
jg
lods
mov
into
out
mov
adc
and
fwait
sub
mov
push
lods
test
shr
pop
sub
movsb
js
icebp
imul
aad
pop
mov
cwtl
testb
cmp
xchg
ja
cld
cld
mov
out
cs
push
push
or
cmpb
mov
cltd
nop
pop
out
out
jg
xchg
push
mov
sbb
xchg
jmp
pop
sahf
or
out
fdivr
arpl
pop
mov
sarl
pop
es
movsb
xlat
sub
fwait
mov
nop
daa
imul
hlt
push
xor
jl
xor
popf
addr16
and
out
xor
stos
inc
les
push
in
and
test
int
rcrb
mov
push
out
pop
mov
in
dec
scas
jno
or
pop
mov
fcoml
mov
push
or
xchg
imul
cmpsb
jge
inc
jle
je
add
xchg
cltd
xlat
movsb
mov
jbe
mov
sti
xchg
pop
xchg
outsb
add
jns
cmp
fisttps
dec
loop
xchg
mov
dec
fnsave
rcr
adc
adc
daa
data16
add
test
daa
add
inc
repnz
ret
xchg
sub
add
add
push
mov
jno
dec
arpl
xlat
and
and
mov
push
push
xlat
outsb
cmp
jecxz
test
jb
xor
popa
mov
inc
and
dec
test
pusha
stc
adc
cmpl
in
rcrl
mov
sub
dec
mov
jge
bound
mov
loopne
pushf
popf
xor
scas
paddb
lds
fiaddl
sbb
dec
outsb
xchg
lods
push
xchg
pushf
cmp
sti
xchg
mov
inc
mov
out
cmpsl
cmp
cmp
stos
arpl
fcompl
int
jmp
and
push
js
test
adc
in
dec
jmp
or
nop
sub
adc
in
int3
jg
cmp
cmpsb
xor
clc
mov
les
sbb
lods
push
aad
in
push
or
adc
mov
xchg
in
sbbb
in
decb
adc
xchg
dec
out
loope,pn
or
data16
inc
sbb
add
mov
test
cmpsl
mov
shl
repnz
add
clc
inc
fldt
insl
jnp
mov
fdivr
cmp
inc
fimull
pop
sahf
lea
rcl
out
pop
add
mov
xchg
adc
xor
xchg
test
mov
cmp
mov
or
mov
xorl
or
inc
in
popa
into
sbb
sub
add
lea
mov
jnp
sub
mov
mov
sub
test
inc
push
int
ds
es
outsl
fists
shlb
jmp
imul
jecxz
mov
push
adc
sahf
ljmp
xchg
push
mov
aam
and
data16
mov
sbb
dec
mov
cli
sti
ret
mov
mov
mov
mov
scas
xorb
cmp
mov
cmp
arpl
cmp
cli
jnp
test
add
mov
es
inc
sub
mov
out
dec
daa
cltd
jl
jo
mov
lret
rcll
mov
out
std
mov
cmp
mov
jbe
pop
outsl
daa
cmpsl
sub
cli
jne
fnstenv
lcall
and
fneni(8087
ja
lahf
hlt
cmp
xchg
test
dec
imul
fidivrs
mov
sbb
cmp
stos
mov
mov
bound
js
push
or
or
push
or
push
mov
push
inc
inc
pop
xor
in
cltd
jo
mov
negl
dec
sbb
rcll
xchg
mov
iret
stos
xchg
mov
or
pusha
inc
pop
sbb
pop
push
fwait
and
and
popa
add
test
xor
sub
fisubs
mov
loopne
loopne
jb
gs
sbb
adc
push
xchg
xchg
sub
or
inc
cmp
fcomps
les
aad
mov
loopne
mov
popa
cs
fxch
adc
ljmp
pop
or
mov
fcmovbe
insb
push
outsl
add
movsl
or
imul
jle
fldenv
pop
or
dec
mov
ljmp
popa
inc
pop
xchg
out
jmp
sub
flds
int
mov
fwait
int
push
ljmp
pop
inc
rcl
add
sbb
int
add
adc
ret
repnz
dec
outsb
dec
out
push
insb
cmp
add
out
mov
cmc
cmp
adc
repnz
ja
fsubs
lahf
fstps
test
int3
fdivrs
sbb
push
push
sub
jne
je
aad
pop
adc
jbe
std
into
fwait
mov
push
sbb
cmp
cmpsb
sbb
lcall
add
jae
jo
and
sub
fldlg2
push
mov
push
out
xor
inc
or
xchg
dec
add
es
arpl
adc
lret
ret
sub
pop
cwtl
jno
lret
jnp
in
outsb
pop
mov
cmc
lret
shrl
xlat
filds
xor
sub
dec
push
inc
mov
adc
jecxz
int
pop
adc
jecxz
xor
inc
add
jnp
push
cmp
add
scas
pop
adc
scas
stos
and
lret
adc
or
insb
adc
dec
mov
loope
add
je
adc
pusha
inc
pop
rolb
cmp
adc
mov
sbb
lret
push
into
das
mov
in
push
gs
xchg
iret
pop
cmp
pusha
in
adcl
icebp
pop
imulb
outsb
in
rcrl
in
mov
dec
js
stos
in
jno
fiaddl
cmp
dec
mov
cli
sub
lahf
insb
sub
and
test
ret
or
cmp
cmpsb
mov
es
push
scas
fs
push
sub
add
sbb
cmp
insb
pusha
lret
les
cmpsb
jno
adc
fdivrl
push
test
inc
pop
add
mov
mov
push
shlb
call
mov
mov
push
push
inc
jnp
pop
push
cmpb
int
mov
lahf
es
xor
sub
popa
lds
arpl
iret
repnz
pushf
loopne
or
mov
adc
jmp
in
xchg
sub
sub
jl
xor
jge
aas
and
les
jle
int
cltd
mov
fcmovnbe
shl
fwait
int3
arpl
pop
push
fisubl
insl
clc
mov
adc
lahf
iret
fdivl
mov
ret
lret
fdivrl
ret
lea
mov
ja
scas
test
loop
dec
xor
shrb
aaa
inc
mov
mov
in
jge
sub
sahf
push
cmp
jecxz
push
cmp
pusha
xchg
mov
dec
pop
sub
lretw
test
aas
bsr
pop
insb
imul
dec
pop
adc
adc
add
out
sbb
mov
cmp
push
gs
jbe
mov
icebp
test
pop
andb
mov
pop
cli
inc
mov
xor
dec
int3
arpl
pop
ljmp
sub
cmpsl
cli
adc
sub
loopne
mov
cmp
pop
add
hlt
mov
test
mov
cmpb
cmpsb
adc
or
ret
jno
pop
inc
into
int3
aas
mov
push
xchg
dec
pop
aaa
sbb
adc
pop
stos
insb
jle
mov
lcall
into
xchg
in
and
xor
mov
pop
jmp
cltd
xor
jno
out
bound
daa
sub
mov
jno
pop
jge
pop
mov
outsb
aas
je
pushf
cmc
cmovnp
fwait
stc
xor
fs
cmp
add
mov
mov
jo
hlt
cmpsl
adc
jae
add
addr16
cmp
mov
xchg
packuswb
sahf
mov
xor
xchg
mov
push
sti
out
jns
xlat
jl
jb
and
orb
mov
mov
mov
dec
repnz
fmull
mov
inc
lods
test
shrl
test
dec
nop
imul
inc
push
mov
lock
inc
push
popa
andl
dec
call
das
mov
dec
jbe
push
lcall
sub
xchg
add
std
dec
jl
dec
xor
aam
in
dec
bound
push
push
mov
sub
sub
bound
add
cmp
sahf
xor
jecxz
cmp
pop
mov
push
mov
lahf
pop
lret
test
push
lock
dec
test
insb
jp
sbb
push
sub
xlat
push
inc
movsl
in
xor
add
jle
sub
push
mov
inc
jb
dec
test
jle
out
and
and
pop
cmpsb
or
dec
cmp
test
pminub
mov
cwtl
cmp
test
mov
rclb
cmc
out
adc
jo
jb
in
mov
pushf
in
test
rorb
mov
ret
pop
adc
cmp
pop
cmp
scas
imul
je
sbb
test
cld
inc
cs
int
mov
negb
jbe
cmc
aas
add
cmc
lods
lods
dec
fwait
call
int
or
pop
int3
sahf
insl
add
mov
sub
pop
sahf
clc
xchg
inc
sbb
pop
movsb
cmp
xor
scas
and
inc
pop
xchg
xchg
sbb
push
mov
lcall
add
mov
or
fs
subl
mov
push
mov
xor
int
test
notb
in
dec
xor
mov
sbb
push
inc
imul
push
jp
iret
add
add
test
cs
mov
mov
push
jecxz
fprem
add
push
pop
sbb
dec
inc
push
add
sti
scas
stc
inc
rcr
data16
mov
jmp
jnp
xor
cmp
jo
pop
or
rclb
sbb
ss
and
xchg
pop
js
int3
gs
inc
jno
pusha
dec
sbb
pop
or
sbb
jle
dec
fdivr
dec
cltd
xchg
sub
xchg
adc
ds
movsl
dec
fists
mov
xor
out
push
rolb
xchg
add
pushf
aad
fs
push
les
gs
mov
xchg
xlat
sub
push
mov
mov
data16
popa
xchg
ret
fidivs
shrl
mov
dec
cmp
or
cmp
iret
testb
sub
mov
fdivr
xchg
xor
mov
push
in
push
in
lret
fldenv
jne
push
adc
inc
pop
js
mov
sub
push
out
and
scas
cld
xchg
loope
sub
fmuls
leave
push
pushf
push
sub
idiv
xor
les
fs
dec
mov
mov
lahf
xor
fcomip
mov
sbb
dec
repnz
movsb
les
movsl
mov
sbb
inc
test
lods
out
sbb
dec
clc
out
pop
dec
in
scas
inc
rorl
loope
sar
adc
fldcw
mov
lcall
addr16
sahf
lods
lea
push
outsb
mov
inc
loope
subb
mov
xorb
cmpsb
lock
icebp
mov
pop
icebp
enter
pop
mov
mov
icebp
push
and
jmp
cli
aam
or
in
clc
pop
sub
insb
jle
cmpb
mov
data16
add
out
cld
pop
out
pop
fisubrs
stc
jo
mov
in
dec
cmc
inc
mov
bound
jae
ds
imul
mov
adc
outsl
add
popa
inc
mov
sub
sbb
repnz
cvttsd2si
sbbb
or
stc
enter
or
gs
adc
iret
add
es
mov
xchg
jo
pop
pusha
or
mov
push
xchg
add
jle
jecxz
mov
push
add
mov
shlb
sahf
dec
shrl
mov
stos
ficompl
push
jo
or
jnp
pop
cmp
icebp
cmp
icebp
roll
mov
insb
pop
out
lret
cmp
lods
xor
pop
movl
jge
lret
out
add
scas
dec
out
test
insb
xor
push
data16
enter
das
xchg
mov
sbb
add
pop
inc
gs
leave
jo
xchg
add
rorl
push
imul
cli
push
enter
cmpsb
adcl
adc
jns
mov
push
inc
cwtl
cmpsl
stos
insl
pop
mov
dec
and
sbb
rol
aad
mov
mov
cmpb
push
hlt
xchg
push
pop
and
dec
loopne
cmpsb
fxch
filds
je
jmp
pop
hlt
mov
xchg
push
in
push
pop
test
mov
jg
and
pop
mov
decb
adc
in
mov
add
outsb
push
jge
and
leave
lcall
fwait
pop
pushf
inc
mov
inc
nop
aas
aad
out
jg
out
das
xchg
out
mov
in
rcrb
repz
mov
dec
sbb
mov
shrb
lret
push
push
adc
daa
stos
arpl
inc
and
insb
adc
push
sub
jbe
frstor
movsb
cmp
inc
out
xchg
mov
mov
loop
jnp
and
loop
aas
jns
cmpsl
aas
cmpsb
sbb
inc
in
in
jl
push
and
out
lcall
je
push
cwtl
fisubl
sbb
int3
jg
scas
aam
lods
xchg
ljmp
fucomi
daa
cmp
pop
imul
out
push
movsb
ja
jl
jo
cmc
ficompl
out
mov
ja
fisttpl
popf
std
mov
sbb
xorl
leave
push
sub
enter
call
push
lahf
ljmp
js
rcll
leave
cs
int
in
or
cmp
cmp
dec
fcompl
dec
push
aad
push
xor
pop
stos
stc
pop
sbbb
std
mov
clc
sahf
enter
fdivs
and
loop
push
pusha
dec
xchg
adc
cs
and
test
adc
lods
mov
pop
sbb
pop
jb
jecxz
in
in
inc
xchg
mov
xchg
xchg
scas
icebp
add
lock
add
out
push
jmp
dec
jle
or
dec
aad
enter
loop
dec
cld
jecxz
mov
sbb
out
in
pop
xor
cs
in
dec
push
or
jb
jge
jae
inc
dec
xchg
cli
add
xchg
push
pop
jg
or
xchg
adc
push
or
aam
sbb
popa
in
mov
jno
push
jle
shll
push
or
sub
push
int3
xlat
and
incl
divb
push
fstpl
xor
aas
ret
mov
cmp
sub
push
sub
mov
add
lds
stos
xor
add
mov
lods
mov
mov
je
ds
dec
sub
push
add
cli
mov
and
pop
xor
leave
fidivrl
xchg
test
movsl
repz
movsb
pop
ret
pop
bound
iret
mov
loope
test
push
out
xlat
jle
les
xchg
inc
fbstp
sbbb
sbb
pop
mov
pushf
xchg
mov
sbb
pusha
mov
frstor
std
xor
jg
lods
je
pop
shrl
mov
push
int3
sbb
jg
push
fnstenv
mov
mov
push
mov
test
mov
inc
das
sub
pop
subb
bound
ds
xchg
jp
aam
cmp
adcb
imul
stos
in
fwait
addr16
ficoms
adc
sbb
scas
out
or
adcb
lahf
mov
cmp
or
movsl
mov
dec
jo
in
push
inc
lods
fdivr
push
cld
mov
fistpl
aad
sbb
andb
jl
cltd
fsubrs
mov
push
mov
or
cmc
mov
outsb
add
jnp
cmp
sub
cltd
mov
popf
aas
popa
outsl
in
test
dec
dec
test
ja
adc
xor
inc
adc
or
int
orb
aad
movsl
fdivp
notb
shrl
into
gs
aam
jmp
aad
jo
cwtl
imul
lods
xlat
shll
hlt
inc
inc
pop
into
mov
push
sbb
sbb
imul
adc
xor
in
xchg
jb
xchg
insb
add
sub
mov
pop
and
sbbl
xor
add
mov
mov
mov
repz
jg
cmp
push
pop
sahf
icebp
sbb
cmp
fldt
popa
cli
loop
out
imul
cmp
rorb
dec
out
xlat
mov
dec
outsb
xor
fucomip
insb
jne
lock
stos
js
pop
xor
test
and
imul
call
push
aaa
pop
cmc
pusha
dec
fistpll
comiss
test
sbb
iret
pop
sbb
fcoms
cltd
push
dec
sub
xlat
test
xchg
dec
mov
loopne
add
jo
enter
lock
rcrb
sbb
outsl
mov
ret
mov
mov
jb
mov
outsb
or
stos
xor
out
and
stos
pop
lds
add
outsl
cli
hlt
push
fldcw
roll
lea
sub
pop
loop
enter
and
pop
adc
mov
push
xchg
into
push
xlat
mov
cltd
sub
loopne
push
pop
and
xchg
pop
xor
test
xlat
in
add
aaa
cmpsl
sub
add
xchg
pop
or
jg
sbb
ret
scas
mov
cmc
call
sub
adc
les
mov
fbstp
jl
popf
and
cmp
inc
aas
in
rcrl
nop
sbb
mov
loope
push
add
leave
and
add
pop
push
or
mov
add
iret
das
pop
xchg
add
and
push
pusha
jae
shrb
stc
inc
imul
or
leave
fnstcw
dec
jno
sbb
mov
or
out
jnp
push
or
dec
insl
lcall
jns
dec
stos
jns
mov
xor
adc
cmp
mov
lea
mov
sbb
dec
out
repz
loop
push
aam
test
in
std
jnp
sub
jne
push
std
mov
and
cwtl
mov
inc
jg
xchg
daa
aam
xor
pop
mov
sub
dec
mov
adc
add
and
mov
jge
loope
jmp
pop
xor
scas
shrl
adc
lea
mov
cmpsl
shrl
aam
mov
ja
pop
stos
hlt
lret
jo
shlb
rcl
imul
xlat
leave
gs
stc
adc
xor
andl
cmp
or
xlat
out
repnz
stc
pop
sub
fisubrs
js
add
dec
push
jmp
andl
mov
sbb
aad
int3
and
fisttpl
call
cmpsb
inc
notl
fwait
leave
fs
outsb
jp
cmp
cmp
and
push
aaa
push
pop
imul
fidivl
mov
jge
clc
sub
inc
xchg
add
pop
mov
jle
int3
pushf
mov
xor
movsl
push
std
and
lcall
xor
aad
mov
rorl
mov
stos
jns
insb
rcrl
xor
cmp
bound
adc
xor
or
cmp
jge
mov
and
or
cld
xchg
sbb
xor
nop
test
into
cmp
xchg
fidivrs
adc
jmp
lods
pushf
and
outsl
jp
cld
xchg
mov
push
add
hlt
xchg
es
pop
mov
and
xchg
sbb
and
and
jnp
scas
mov
mov
fisubl
mov
push
stc
insl
adc
fisubrl
mov
outsb
insb
stos
cs
pop
pop
cmc
mov
adc
pusha
jecxz
xchg
sub
lcall
and
loopne
push
mov
ret
adc
cmc
jne
xorb
pop
cwtl
or
cs
mov
jb
mov
aam
xchg
xchg
scas
bnd
repnz
mov
fmuls
jp
push
sbb
jbe
enter
repz
cmpb
xchg
adc
jae
scas
inc
and
je
rolb
in
mov
mov
push
in
mov
add
xor
inc
inc
cmc
cmc
or
addr16
lcall
cs
push
in
and
sub
sbb
stos
or
imul
jns
movsb
ljmp
fdivrs
mov
inc
jbe
and
mov
leave
pop
dec
add
mov
ja
xchg
add
mov
test
jl
inc
cmp
push
loope
cmpsl
ds
cmp
ds
mov
sbb
outsl
aad
dec
iret
es
movsl
insl
ja
inc
std
mov
inc
rcr
sti
push
roll
and
dec
cmp
enter
fadd
sbb
and
stos
in
nop
shrb
mov
loop
and
push
mov
divb
clc
movsl
xchg
insl
cwtl
cwtl
fcmovu
iret
jecxz
push
pop
and
loope
pop
jmp
test
lret
rcrb
fdivrl
push
test
cmp
orb
ja
aaa
cmpsl
test
fnstcw
outsb
das
cmp
xor
jecxz
jl
xchg
iret
xchg
sub
or
ss
or
cltd
cmp
arpl
movsl
ja
adcb
in
daa
or
xor
push
lods
push
sbb
mov
and
pop
cmp
mov
leave
xor
dec
std
pop
das
mov
or
stc
jl
loope
insb
popf
or
push
dec
mov
out
jne
daa
insl
lahf
adc
mov
mov
adc
lret
cmp
arpl
arpl
sbb
xchg
add
insl
sbb
test
jae
add
push
es
fisubl
jmp
into
xor
cmpsb
add
fdivr
push
cmp
mov
jmp
pop
push
xor
cmp
xor
lock
jnp
mov
sti
cmp
push
mov
sub
xorl
and
sub
movsb
and
popa
test
arpl
or
jno
inc
xchg
xchg
iret
pusha
cs
pushfw
dec
xchg
lock
aad
pusha
fucomip
lahf
push
fdivl
leave
sub
lret
fwait
loope
xchg
frstor
inc
sbb
out
add
mov
les
outsl
testb
jnp
fmull
mov
push
mov
xchg
mov
xchg
data16
pop
jl
test
lret
jb
jmp
fstpl
adc
add
ja
sarb
push
jmp
add
jo
bound
lahf
xchg
mov
out
fmuls
jge
dec
imul
imul
push
rol
xor
insb
decl
fisubrs
sub
aad
inc
jo
pop
rcr
mov
cltd
push
inc
bound
icebp
jp
loop
lds
dec
shll
sbb
int3
aas
repnz
enter
rcrb
lret
jmp
and
add
ret
lods
mov
jle
add
mov
mov
pop
pusha
xchg
xchg
andb
inc
rcrl
mov
imul
adc
psllq
es
adc
dec
out
rcl
push
push
hlt
xchg
mov
aam
and
dec
and
or
pop
cmp
and
movsb
mov
popa
mov
add
cmp
into
and
scas
mov
js
add
push
mov
xor
ds
movsl
push
adc
pop
clc
xchg
daa
cmpsl
ret
xor
in
cmp
loop
jle
jmp
xchg
pop
sbb
mov
sahf
mov
add
fisubrs
shr
rol
arpl
add
sub
aaa
fdivrl
mov
dec
pop
aaa
pop
ret
mov
js
ljmp
and
outsb
stc
and
sbb
jge
aam
pushf
cmp
les
add
sti
mov
jmp
add
mov
jo
pop
mov
xchg
inc
out
scas
ds
sbb
jecxz
cmpsb
or
leave
xchg
rorl
pop
adc
push
enter
add
popa
push
and
xor
lcall
xor
and
leave
xor
sbb
aas
outsb
loope
aaa
adc
sbb
and
adc
adc
mov
push
push
nop
cmp
jl
lds
add
lock
pop
mov
movsl
mov
mov
xor
inc
mov
stos
or
sbbl
cmp
mov
cmp
or
mov
inc
mov
fstpl
mov
lods
mov
inc
sarb
add
and
mov
xor
jmp
xor
inc
cwtl
pop
push
in
insb
test
ja
fildll
inc
mov
in
and
and
mov
lea
jmp
or
rcrb
cltd
mov
mov
push
mov
sub
lock
or
scas
sub
jg
lret
test
push
cmp
gs
xor
dec
inc
into
push
mov
dec
repnz
push
cli
xchg
js
or
std
inc
repnz
sub
or
sbb
pop
aam
sbb
jb
add
in
mov
stos
sub
pop
mov
mov
and
les
mov
call
mov
sbb
push
stos
out
loopne
cmp
sub
cwtl
push
jg
push
leave
pop
pop
insb
push
jmp
jmp
jmp
push
in
cmp
lock
fs
xchg
cmpsl
lds
shlb
clc
iret
or
push
repnz
adc
xorl
gs
fs
xor
mov
pop
insb
in
call
inc
into
mov
std
jecxz
xchg
pop
stos
call
jne
dec
sub
jns
xlat
and
iret
fstpt
jae
mov
loopne
pop
pusha
out
jb
and
push
arpl
mov
sub
aad
ljmp
sti
fiaddl
mov
jb
pushf
fwait
xchg
push
cmp
cmp
adc
push
or
call
je
cmp
jecxz
push
das
jno
das
xor
bound
inc
or
and
gs
cmp
mov
adc
sbb
repnz
cmp
sarb
xchg
loope
cmp
dec
pop
scas
aad
adc
dec
cmc
pop
cmpsl
pop
outsl
test
jl
shll
push
pop
in
fs
dec
xlat
xchg
ja
jmp
out
jge
pop
push
xchg
in
loopne
pop
pop
or
int3
int3
sbb
lahf
cli
jl
movsl
icebp
jbe
clc
xchg
dec
fwait
sub
rcrl
sti
jbe
mov
shrd
outsb
sarb
dec
and
jne
mov
sahf
nop
jnp
roll
adc
xor
or
es
stos
loope
js
arpl
sbb
add
inc
sbb
push
push
mov
mov
push
inc
les
cmpsl
sbb
leave
aaa
imul
iret
fstpt
je
mov
nop
inc
clc
or
in
iret
or
cmp
fnsave
xor
pop
js
pusha
filds
adc
aad
mov
mov
aam
mov
iret
subl
push
xchg
stc
and
jae
push
aaa
lea
arpl
ret
stc
popf
lods
xor
neg
into
jns
sub
sub
lret
jae
sub
inc
fiadds
dec
sbbl
mov
and
pop
icebp
cmp
lods
push
loopne
jo
cvtps2pi
adc
inc
std
out
dec
pop
fisubrl
jecxz
leave
rcrb
enter
fcompl
push
iret
add
pop
sub
cmp
jge
pop
jbe
outsl
pop
shll
cmp
sbbl
jne
inc
rcrb
pop
or
mov
add
push
or
and
sub
sub
jne
pusha
movsl
xor
or
addr16
mov
cli
aam
pop
fcomp
mov
ficompl
jg
or
sarb
cmc
popa
push
dec
xchg
test
pop
cmpsb
gs
and
pop
cmp
mulb
pop
mov
fs
daa
mov
or
sbb
sub
addr16
push
nop
pop
loopne
and
mov
cmp
pop
repz
aas
jge
cwtl
jp
cmp
stc
xchg
outsl
pop
cwtl
mov
add
cld
or
lock
aad
repz
jg
cmp
inc
jmp
iret
add
bound
mov
mov
test
xchg
jne
adc
sbb
jl
mov
push
enter
mov
les
xor
push
pop
xchg
mov
inc
push
add
xorb
test
repnz
add
or
xor
fnstcw
inc
xor
aad
enter
xlat
mov
pushf
test
cmpsl
cmp
mov
pop
or
cwtl
inc
jns
mov
push
mov
jnp
dec
jnp
aam
mov
xor
add
leave
pusha
pop
inc
lock
jae
jno
pop
dec
ljmp
add
xchg
int
popf
sub
push
mov
inc
xor
cmp
aaa
inc
xchg
cmc
cmp
xchg
xchg
lods
test
loope
popf
fs
inc
or
call
addr16
jmp
es
add
sbb
mov
notl
in
enter
mov
fcoml
orl
call
bound
repz
jle
sub
push
mov
mov
and
xchg
mov
test
jp
stos
mov
movsl
and
pop
data16
pop
insl
jno
sahf
imulb
xor
pusha
sub
shll
push
mov
test
aam
fadds
pushf
dec
jmp
orl
push
out
pop
or
cmpsl
mov
and
fstpt
test
mov
mov
cmpsb
mov
ja
imul
int3
iret
imul
sbb
inc
mov
sarb
pop
lcall
pop
pop
int3
xor
js
fs
lahf
out
xor
ret
rolb
mov
out
inc
sbb
into
push
jmp
cmp
aas
out
mov
xchg
xor
out
push
idivl
in
notl
mov
add
into
shr
stos
pop
popf
sbb
shl
gs
ficomps
cld
xorb
movsl
cmp
inc
outsl
repnz
dec
fs
dec
or
mov
test
sbb
cmp
cwtl
xorl
ret
pop
rcl
push
sub
pop
in
jg
adc
and
je
sti
dec
cmpsl
or
inc
mov
push
fisubs
cmpb
sbb
lods
inc
cmp
jp
out
fmulp
fadds
xchg
jb
dec
shlb
pop
fs
sahf
in
mov
xor
idivl
rcll
xchg
or
fyl2x
ffreep
sub
fldenv
cs
in
add
mov
push
fistpl
icebp
xchg
xor
int3
out
xchg
test
addr16
dec
fwait
lret
sahf
std
push
inc
cld
inc
inc
fidivs
fwait
mov
shl
adc
mov
mov
push
and
andb
sbb
jae
aaa
imul
mov
in
dec
xor
addr16
cwtl
adc
in
xchg
push
daa
dec
inc
insb
cmp
outsb
fyl2x
js
dec
loop
jge
icebp
daa
popf
sbb
mov
popa
cld
aad
ss
sbb
cwtl
addr16
sbb
dec
in
add
int
mov
fbstp
mov
jl
fisubrl
negb
in
mov
cmc
js
cld
je
js
cli
mov
gs
mov
scas
shr
and
pop
push
xchg
shrb
inc
ret
pop
mov
mov
test
mov
adc
lahf
pop
scas
iret
sbb
dec
in
repz
fcoml
aad
das
test
cmp
jo,pt
push
out
xchg
decl
cmp
pop
movsb
popf
in
aad
add
cmpb
pop
mov
inc
out
hlt
rcll
sbb
shrb
into
inc
dec
push
or
cld
cmpsb
jnp
jg
pop
jno
mov
push
dec
test
inc
imul
sub
dec
sbb
out
xchg
lret
pop
jg
mov
sbb
and
or
cmpsl
cmp
sahf
cmpl
loope
or
mov
dec
outsb
pushf
pop
cmc
push
adc
cmpb
sbb
and
movb
jg
push
cmpsb
inc
and
push
mov
add
shlb
jb
ljmp
adc
out
out
cmpsl
adc
lods
mov
lds
adc
into
mov
mov
popa
xor
inc
push
push
loop
cltd
pop
cmp
mov
imull
pusha
push
jmp
sbb
push
fdivs
pushf
adc
xchg
pop
adc
adc
aad
mov
dec
or
jno
dec
add
or
dec
mov
hlt
sub
loopne
fildll
adc
in
jne
loop
and
jno
je
movsl
popa
dec
call
inc
xor
out
addl
testb
sub
call
jecxz
js
mov
dec
daa
or
add
dec
in
xlat
outsb
bound
xchg
push
dec
fistl
addr16
or
mov
mov
add
add
cwtl
cmpsl
xlat
fdivl
hlt
cli
adc
out
cwtl
ja
inc
repnz
roll
es
insl
mov
and
loope
movsl
cld
lea
test
jg
cmpsl
lret
mov
ss
sub
adc
dec
sarb
push
sub
inc
and
pushf
inc
jo
xchg
icebp
xchg
adc
sbb
cmp
inc
lcall
test
dec
aaa
push
leave
stos
push
sub
ljmp
shl
push
xchg
repz
iret
xor
xchg
xor
pop
and
jbe
jns
and
pop
std
adc
rclb
mov
loopne
shl
or
mov
es
xlat
imul
lcall
xchg
mov
cmp
outsb
fnstcw
test
adc
leave
and
lods
out
std
mov
or
sub
js
das
int3
mov
and
mov
add
fs
jno
jbe
mov
scas
inc
pop
lret
js
mov
test
dec
cmc
push
xor
fcom
imul
lock
pop
scas
xchg
insl
lock
add
fimull
fxam
ljmp
xor
aam
rclb
lea
dec
add
rorb
repnz
in
pop
std
jns
push
sahf
sub
mov
testl
aam
pop
dec
mov
leave
pusha
sbb
es
shlb
and
je
mov
js
cmp
push
lods
inc
fwait
xor
js
push
and
pop
shll
dec
loop
push
and
sar
add
add
xchg
dec
sbb
mov
jns
dec
std
inc
stc
inc
mov
mov
adc
push
push
insb
xor
cmpsb
je
inc
fdiv
xchg
fcoms
fcoml
lcall
and
and
leave
fnsave
sbb
xchg
stos
ljmp
xchg
push
sbb
sbb
sahf
jmp
outsb
mov
aad
mov
mov
jo
enter
scas
outsb
push
push
jno
aaa
xor
push
or
dec
out
push
mov
push
sbb
icebp
pusha
mov
fisttps
cmpsl
data16
cmp
xchg
rcll
or
lcall
jecxz
rcrl
xor
ds
dec
add
gs
push
jne,pn
dec
repz
mov
leave
out
mov
out
mov
sub
push
xorl
pop
popf
ficoml
jl
jne
adc
shll
mov
das
imul
mov
inc
adcb
mov
in
dec
ret
sub
sub
leave
sub
and
sbb
test
out
add
sbb
add
scas
in
pushf
jns
roll
repnz
push
mov
into
mov
shr
rcr
jb
jno
stos
sub
adc
adc
movsb
fcoml
sbb
dec
enter
outsb
push
ljmp
jno
outsl
les
jno
sahf
clc
insl
xchg
push
shrb
scas
jne
out
jno
adc
lds
imul
jnp
xor
and
mov
pop
inc
and
pop
add
loope
push
pop
cmc
mov
mov
push
or
outsl
int3
jg
push
push
out
xchg
fnsave
and
adc
test
add
hlt
lahf
push
push
in
or
das
je
dec
lcall
sbb
pop
dec
loopne
fstpl
psrlw
push
dec
icebp
nop
fwait
mov
sbb
mov
push
imul
fs
dec
dec
and
in
add
xor
mov
pop
fnstsw
push
lcall
test
push
mov
scas
jmp
mov
ret
cltd
stos
std
push
dec
in
cli
lahf
mov
or
ja
sub
xchg
inc
or
xchg
pop
sub
fcomi
divl
and
push
cmp
das
jl
int3
insl
sub
push
aam
xchg
cmpsl
mov
fdiv
sub
out
push
dec
add
enter
lods
imul
idivb
cmp
mov
xor
sbb
pop
mov
in
sti
jno
mov
sahf
pop
gs
test
fmull
xchg
test
lods
fidivs
inc
adc
ret
and
push
pop
sub
xor
aad
clc
ds
das
in
repz
jnp
mov
inc
pusha
jl
rcrb
inc
gs
xchg
sub
je
cs
mov
ret
test
int3
pop
rorl
sub
fistpl
and
cmp
fbstp
inc
xchg
dec
mov
cmp
cwtl
mov
jg
fs
frstor
into
fs
cmp
aad
fstl
jmp
pop
xor
jnp
enter
pop
lret
out
push
icebp
adc
pop
push
dec
mov
cmp
out
dec
in
les
test
into
cmp
or
jno
filds
mov
inc
adc
mov
in
mov
adc
adc
add
test
test
scas
lea
sti
inc
andb
mov
inc
push
adc
adc
jne
and
lock
pop
stos
stos
inc
repnz
mov
cs
jns
jl
hlt
popa
pushf
xor
xchg
xchg
sbb
pop
pop
push
sbb
add
cmc
seta
mov
lods
loope
lcall
sbb
fcmove
inc
mov
rcrl
outsl
jns
pop
adc
stos
enter
adc
and
loop
and
fildl
aaa
or
inc
cwtl
stos
push
sahf
jb
xchg
sub
cmp
and
dec
mov
jle
popa
rcrl
popa
andb
in
dec
mov
and
pop
mov
add
jno
cmp
mov
push
in
fwait
movsb
rcrb
out
je
xchg
repnz
xchg
stos
shl
mov
ds
lahf
ss
outsb
fwait
inc
fidivrs
jmp
out
ja
pusha
fdivl
mov
jae
mov
js
xchg
fisubs
fsubp
jp
lods
cmc
pop
mov
stos
ds
push
loope
int
xor
int
ds
mov
dec
jns
sub
sub
jae
sub
inc
pop
and
adc
mov
cmp
outsl
mov
mov
loopne
stc
clc
cmp
or
jne
hlt
cmpsb
mov
gs
pop
jl
inc
push
leave
jae
cmp
pop
dec
inc
fdivp
stc
dec
mov
adcb
mov
fnsave
xchg
mov
xchg
scas
fwait
test
int3
sbb
mov
out
xchg
or
test
pop
push
in
aaa
enter
sbb
enter
xchg
and
mov
xchg
add
adcl
cmp
inc
sbb
mov
in
mov
rcrl
dec
stos
call
adc
mov
push
adc
fucom
fldcw
or
dec
cmp
test
sub
mov
pop
xor
leave
lock
je
dec
add
push
jg
cmpsb
sub
ret
repz
xor
lcall
pop
push
jnp
mov
imul
push
pop
adc
clc
mov
jg
sbb
mov
mov
xor
adc
inc
jg
stos
sub
aas
push
dec
ss
in
xor
adc
inc
sbb
fwait
mov
jl
push
int3
sti
sbb
add
add
jbe
pop
jle
mov
fidivl
pop
call
pop
cmp
pop
cltd
sbb
das
lds
xchg
mov
cmpsb
loope
mov
mov
jns
das
scas
jns
out
data16
fdivr
outsl
rclb
or
pop
add
add
and
aas
and
xor
dec
add
mov
xchg
xchg
mov
in
sbbl
ljmp
cmp
inc
int3
sbb
lods
adcb
sub
push
sbbl
mov
mov
or
enter
or
std
cli
sub
stos
jb
pusha
subb
sarb
jp
insb
test
jbe
mov
lods
out
jl
mov
push
sbbb
in
sbb
jae
les
jno
xlat
mov
pop
pop
aaa
adc
jle
xchg
inc
cli
inc
cmp
js
movsb
repnz
xchg
dec
jae
jbe
bound
loop
push
or
sbb
push
jbe
or
orb
enter
and
xchg
push
in
ret
mov
cmp
ds
cmp
mov
cli
into
cli
lret
jbe
fnsave
jae
inc
mov
les
scas
mov
adc
adc
sahf
sub
pop
outsb
ja
call
test
stos
vcomisd
pop
cli
int
stos
insl
xchg
xchg
imul
xlat
insb
ljmp
fldl
aad
inc
lret
aas
adc
and
push
std
cmp
mov
xchg
int
pop
adc
popf
mov
push
jmp
mov
add
sub
sub
imull
add
pop
inc
cltd
jb
lods
std
push
cmp
inc
lds
cli
add
mov
lret
push
std
xchg
ja
mov
pop
push
sub
gs
test
dec
repz
call
stos
xor
xorb
push
add
mov
arpl
cld
fsubl
jp
jl
mov
popf
inc
icebp
add
push
pop
sub
mov
mov
jbe
in
push
shrb
rolb
aam
call
ja
mov
jns
in
jle
push
rcl
push
pop
out
inc
cmp
cmp
mov
pop
dec
xchg
mov
mov
cmp
rcl
and
jl
mov
stos
leave
xchg
push
cmp
sbb
push
movsl
out
pop
sbb
lret
lock
fsubrp
or
sarl
jb
lods
arpl
ss
scas
movsl
mov
bnd
out
mov
or
out
nop
push
inc
fcmovne
dec
or
or
popf
jge
and
rorl
lahf
fwait
mov
sub
inc
push
cmc
jge
daa
xor
mov
sub
ja
sbb
mov
pop
popa
cld
add
adc
insb
inc
push
mov
and
xor
cmp
sahf
cmp
fs
mov
lods
jmp
test
inc
add
inc
dec
out
lods
sbbb
push
stos
inc
nop
fdivrl
leave
inc
aam
mov
dec
cmp
stos
adcl
ret
mov
sub
add
or
jns
mov
aam
or
pop
pop
cmp
pushf
or
dec
jecxz
xchg
fwait
lea
inc
fdivrl
xchg
or
dec
pop
test
unpckhps
push
lret
icebp
adc
adc
addr16
xchg
test
sub
xor
mov
push
ret
pop
mov
push
sbb
cmc
fnstenv
aaa
pusha
sbbb
fadd
inc
cmp
jg
sub
sbb
or
sahf
lods
ss
dec
cmp
xor
addr16
pop
mov
add
jp
xor
push
inc
pop
or
les
stos
xchg
sub
arpl
push
sahf
je
fxch
lret
push
sub
adc
lahf
add
aaa
xor
stc
cmp
and
ret
cmp
pop
loopne
or
das
test
add
xor
dec
or
insl
jle
arpl
jbe
cld
leave
dec
push
ljmp
jno
popa
push
inc
pop
shlb
inc
in
stos
out
sub
mov
sub
out
scas
cli
sti
pop
ficomps
mov
cmpsl
mov
xor
loopne
and
dec
dec
pusha
iret
push
add
mov
sub
and
mov
mov
xchg
adc
fildll
adc
mov
jmp
call
out
fs
test
leave
test
bound
into
mov
sub
gs
lret
mov
cli
xchg
push
pop
inc
adc
lds
in
dec
in
lds
test
faddp
mov
mov
or
jg
jmp
cmpl
or
repz
cmp
aaa
inc
pop
xchg
cmp
cmp
cmp
and
test
dec
xchg
mov
rcll
jmp
aam
mov
mov
pop
cmp
dec
mov
pop
aam
mov
mov
jb
cmp
test
lret
xchg
mov
xor
nop
cmc
aas
push
faddl
leave
insb
shl
sarb
push
dec
jbe
mov
add
cs
push
loope
std
lods
adc
ret
int3
adc
push
xchg
pop
loopne
gs
sbbb
daa
ljmp
jle
sub
xchg
int3
and
outsl
cvtpi2ps
lret
shrb
outsl
adc
and
mov
clc
xorl
loopne
mov
stos
push
mov
cmp
pushf
cli
cmp
loope
mov
push
enter
inc
int3
or
subb
xor
int
lods
fcoml
pcmpeqd
gs
pop
sub
mov
imul
insb
mov
sarl
add
leave
in
mov
cmpb
inc
xlat
xchg
xor
je
fidivl
sbb
add
sbb
xor
loop
int3
lahf
jl
imul
sub
sbb
in
jns
int3
jge
mov
bound
add
xor
jo
mov
ret
inc
gs
clc
dec
jne
xor
call
mov
fidivs
fisubl
inc
jg
lock
js
lods
popa
mov
shlb
cmp
cmp
mov
sbb
mov
cmc
mov
sbb
in
mov
fcoml
mov
fidivrs
js
xchg
xchg
jno
movsb
sahf
jb
ljmp
push
jnp
fs
xchg
or
mov
rorl
subb
sbb
arpl
mov
addr16
pop
pop
mov
inc
or
jmp
xchg
ja
cmpsl
or
push
stos
mov
fs
add
std
inc
sbb
in
mov
push
sbb
stos
push
jl
xchg
jb
sti
testl
daa
pop
jne
fidivrl
lret
enter
movsb
sub
nop
cmp
out
xchg
and
and
inc
add
mov
lock
in
inc
repz
mov
fcmovne
imul
std
xchg
in
test
sbb
test
mov
mov
sti
cmpb
sub
loopne
insb
or
dec
cmp
adcb
das
jns
mov
mov
fnstcw
pusha
fidivs
pop
leave
push
xor
add
pop
test
push
xchg
cmp
pop
lcall
dec
loope
mov
cmp
sbb
or
aaa
jbe
test
fstps
mov
orl
aas
jae
inc
fisubs
or
notb
aad
icebp
cwtl
cwtl
jne
pop
cmpsl
mov
xlat
xor
call
inc
sbb
adc
cmp
xchg
xchg
cs
jg
lcall
mov
ret
pop
mov
xchg
push
mov
mov
push
ret
cs
pop
arpl
nop
push
fdivr
fs
add
inc
mov
loop
rcrl
scas
cmp
or
ret
shrb
cmp
adc
xchg
adc
xchg
out
push
inc
mov
adc
mov
jmp
mov
mov
fsubs
std
test
xor
test
icebp
fcoml
call
fistpl
xchg
mov
enter
lret
mov
sbb
mov
mov
dec
push
mov
mov
xor
out
or
cltd
pop
mov
pop
mov
psubsb
sub
jp
dec
lret
push
in
fwait
add
jle
int3
xchg
scas
and
push
shrb
inc
test
mov
test
adc
fbstp
addl
mov
sbb
push
movsl
xlat
and
mov
adc
loope
xchg
movsl
mov
ret
dec
mov
lahf
fidivrs
adc
cmp
push
aam
arpl
outsl
cmp
jecxz
jbe
sub
sub
gs
out
test
adc
leave
ljmp
push
adc
std
insl
lock
int3
cmpsb
mov
mov
repz
jle
daa
or
lahf
sub
scas
and
ss
sbb
mov
xor
pop
adc
xchg
mov
mov
out
fiaddl
mov
or
lods
mov
fisttpll
sbb
and
mov
add
out
jl
hlt
lea
jg
loope
cwtl
lock
movsb
lods
adc
push
cltd
jnp
mov
dec
fnstcw
or
ja
fnsave
jp
fwait
scas
inc
stc
jne
mov
lods
movsl
mov
ja
add
push
push
clc
stos
jae
cwtl
pop
jbe
sub
sbb
push
mov
cwtl
cmc
cmp
lahf
daa
repnz
push
add
mov
scas
daa
inc
fsubrl
inc
arpl
stc
test
push
push
test
mov
adc
cmp
fiaddl
mov
pusha
jl
xchg
adc
into
or
inc
addr16
fmull
movsl
mov
pop
xchg
ja
sub
sbb
sub
fsubrp
cmp
cs
and
cmp
mov
xchg
call
fisttpll
adc
test
add
mov
enter
inc
sub
jnp
loopne
push
lcall
pmuludq
mov
loopne
jecxz
jle
and
sub
jg
jmp
fwait
test
or
fs
fs
cs
jl
xchg
scas
sysenter
rclb
sbb
jo
xor
mov
xchg
testl
adc
aaa
mov
push
cmp
ret
std
std
push
ljmp
jno
div
sub
add
scas
dec
loopne
jp
fidivl
call
mov
cmc
inc
insl
add
push
call
and
fnstsw
in
mov
leave
daa
ja
movsl
rolb
je,pt
mov
cmpsl
aas
out
aas
ret
xor
mov
ljmp
lock
cmc
std
jns
ret
lcall
cli
xor
pushf
aad
std
xchg
lret
push
mov
loope
and
and
lods
mov
and
jp
inc
fmull
push
arpl
outsl
imul
adc
call
push
cmpsl
call
xor
adc
inc
pop
cmp
int3
push
stos
lcall
mov
fsubrp
test
jo
sbb
dec
daa
fsubrs
test
ds
fidivrs
shrl
or
sbb
test
insb
arpl
adc
adc
fs
xor
rorb
cwtl
je
dec
add
sbb
frstor
xlat
sub
sbb
loopne
xchg
sub
in
push
out
mov
fsub
movsl
cmp
adc
add
stc
inc
lret
and
les
mov
or
xchg
stos
mov
ret
lods
inc
mov
stc
inc
sbbb
sbb
mov
cmp
ss
adc
add
mov
adc
dec
mov
push
push
outsl
push
subl
xlat
or
mov
dec
xchg
or
jl
mov
std
jbe
and
adc
stc
cmpsl
add
lcall
mov
or
cmpsb
jb
rclb
push
lcall
jb
sbb
fisubrl
enter
push
xchg
jp
pop
out
xchg
jecxz
mov
xor
andb
push
les
mov
mov
push
push
repz
addr16
push
popf
ds
mov
add
sbb
sbb
push
lret
xchg
pop
icebp
ret
repnz
je
dec
js
stc
push
xchg
imul
fwait
or
mov
add
mov
mov
testl
push
test
sub
adc
pop
imul
push
xorl
dec
cmc
sub
add
push
in
or
testb
jnp
idivb
mov
shrb
cmp
jmp
imul
inc
testb
sbb
adc
mov
sbb
pop
jp
or
js
push
les
test
sbb
lock
out
cli
jmp
mov
in
inc
les
outsb
or
ss
aam
push
push
test
outsl
popa
sub
mov
fistpl
into
jns
je
mov
xorb
out
or
loopne
cmp
push
mov
and
in
mov
xchg
or
lds
cmpsb
test
std
aam
jge
xchg
sub
push
test
dec
rcrb
jae
ret
sbb
cltd
jb
fsubrl
jl
fsubrp
cltd
inc
pushf
mov
js
popf
sub
push
out
pop
pusha
mov
scas
wrmsr
decb
sbb
pop
stc
mov
pushf
cli
push
xor
clc
repnz
data16
jns
jg
mov
xor
xchg
out
fisubrl
inc
sahf
ljmp
sbb
add
imul
je
xorb
jmp
and
test
mov
or
fbstp
add
scas
mov
js
mov
stos
in
ret
data16
pushf
cli
aad
xchg
stos
jbe
mov
into
and
ds
cmp
sub
push
sub
test
pop
jbe
cmp
je
ds
out
mov
mov
inc
mov
ljmp
xchg
mov
sub
pop
inc
pop
call
sub
add
pop
movsb
andl
mov
iret
loop
xchg
xchg
sub
sbb
ror
mov
or
xchg
xor
cs
pop
pusha
fdivrl
inc
add
jns
dec
test
fiadds
mov
sti
mov
cmp
test
sub
push
sbb
fstl
push
fwait
xchg
icebp
or
pop
mov
sahf
insb
ror
mov
or
sbb
iret
lock
rorb
lods
mov
test
adc
iret
dec
scas
push
jecxz
dec
in
adc
lea
into
outsb
jp
ja
adc
or
pushf
sbb
sub
mov
icebp
mov
adc
jne
ljmp
stc
lret
push
notb
or
test
lods
pop
and
leave
jae
mov
cmp
dec
mov
pop
cmp
outsb
ss
push
cmp
mov
cmp
mov
imul
mov
fucomp
jle
enter
sbb
les
sbb
xorl
jnp
adc
mov
sub
popf
mov
push
sub
icebp
xor
repz
mov
pop
xchg
adc
inc
mov
cs
jge
push
out
jns
fwait
pop
fbstp
inc
out
std
cld
lcall
jae
push
jne
push
and
and
test
lea
cmpsb
data16
f2xm1
add
js
pop
in
filds
call
imul
ljmp
sub
out
hlt
stc
daa
push
xchg
sub
std
sub
or
inc
stc
pop
push
in
rcrl
daa
in
dec
fidivl
out
fmulp
js
xchg
insl
test
test
adc
aad
ret
adc
dec
lret
adc
add
jns
mov
xchg
or
rcrl
lock
mov
and
cmp
sbb
in
popa
jo
incl
stos
aaa
push
pop
xor
sbb
cmp
sahf
mov
xlat
mov
inc
xor
xchg
cmp
divl
jo
repnz
sub
bound
lods
aaa
and
pop
fiaddl
lods
jg
cmp
loop
pop
push
xor
sub
cmpl
mov
push
stos
push
pop
lods
sbb
pop
xchg
inc
add
shlb
ret
out
mov
dec
push
sub
and
inc
push
arpl
cmp
and
div
jo
gs
pop
mov
adc
push
sahf
xor
add
iret
out
jns
popa
lods
das
push
lret
rclb
rol
imul
outsl
aas
insb
test
loopne
test
cmp
imul
jnp
mov
rorl
imul
cmp
lods
dec
mov
es
sub
inc
arpl
sarl
repnz
mov
mov
ja
inc
mov
mov
mov
rcll
add
adc
sub
je
fdivl
insl
je
aam
pop
xchg
hlt
lret
jns
lret
dec
xor
push
daa
cmp
lret
and
scas
inc
rorb
int3
arpl
ja
pushf
xor
ljmp
ja
test
dec
fwait
es
fistpll
jbe
stos
int3
mov
jnp
and
aam
stos
test
pop
adc
hlt
or
jb
pop
movsb
dec
xchg
sar
int3
adc
adc
in
mov
in
dec
xor
adcb
lcall
cmc
rolb
push
mov
sbb
cmp
and
sub
sahf
adcb
adc
xor
or
adc
lds
pop
insl
aaa
dec
dec
lcall
sbb
mov
dec
ljmp
clc
fiaddl
daa
cmp
mov
adcb
push
in
add
inc
sahf
and
fs
jno
ss
sub
movsl
inc
mov
loopne
mov
pop
rorb
cmp
es
mov
stos
cmp
xchg
out
cmc
add
sub
out
rcll
fidivs
hlt
arpl
adcb
test
rcr
sub
lahf
pop
loopne
push
cs
mov
xor
sub
out
sahf
jbe
sbbl
orb
jle
mov
push
lods
sbb
pop
cmp
add
mov
pop
ror
jb
add
push
or
and
adc
nop
xor
int3
lcall
scas
adc
or
jae
xor
jmp
inc
mov
mov
filds
enter
cmc
aam
out
fistl
add
sub
fcmovnbe
mov
inc
cmpsl
jb
mov
dec
mov
xchg
enter
cld
lock
and
mov
inc
rcll
pop
aaa
in
push
mov
mov
ja
fsubrs
dec
out
sbb
mov
mov
and
adc
mov
ret
or
lea
jmp
adc
mov
mov
fdivp
cmp
ljmp
out
mov
adc
loope
loopne
mov
les
mov
aaa
pop
push
mov
inc
xchg
negl
jae
fs
pop
sbb
dec
cmp
pop
sti
adc
jge
sbb
shr
cmc
test
dec
mov
fmuls
sbb
adc
jmp
xchg
inc
stc
in
sub
fisttpl
push
fsubrl
ficomps
cmp
mov
xchg
push
popa
lcall
es
cmc
lods
popf
mov
push
jge
xorb
popf
lds
cmc
loope
cmp
cmpl
insb
add
xchg
aas
mov
lock
pop
lods
xchg
pop
or
lahf
test
push
mov
shl
out
add
sbb
inc
pop
dec
popa
mov
mov
cmpsl
mov
mov
stc
dec
push
in
jg
sarb
js
inc
sar
or
xor
mov
pop
rorb
movsl
xchg
jg
enter
and
push
jae
test
lahf
xor
jne
movsl
adc
mov
sbb
fstpt
mov
loopne
mov
jl
inc
mov
leave
je
sbb
aas
es
mov
jle
std
cmp
test
push
add
scas
jbe
inc
cli
les
inc
stc
lods
push
bound
cmc
in
cmp
fisubs
push
out
add
enter
push
gs
pop
xchg
imul
xchg
add
mov
fbld
pushf
push
mov
mov
dec
mov
mov
mov
movsb
repnz
mov
xchg
xor
mov
xor
into
push
ljmp
cmc
andb
inc
call
sahf
jmp
push
lock
out
out
xor
cli
test
mov
xor
std
rcl
popa
mov
jg
ss
mov
div
scas
adc
inc
mov
test
pop
ss
add
xchg
add
nop
cmp
insb
mov
imull
xchg
push
lea
sbb
int3
sub
div
mov
adc
adc
inc
jns
cltd
ret
call
sbb
mov
jno
sbb
pop
mov
int3
mov
cmp
push
xchg
jns
sbb
dec
jae
push
and
or
setnp
push
mov
inc
fs
mov
mov
enter
dec
outsb
jecxz
pusha
sub
pop
inc
cld
fnsave
repz
pop
dec
xchg
scas
mov
or
lahf
pop
and
popf
xlat
sbb
lds
jle
sub
leave
inc
dec
or
mov
fisttps
stc
movsl
pop
rorl
stc
or
mov
sbb
shrl
ja
test
insb
mov
lahf
arpl
xchg
mov
popa
jmp
mov
push
xchg
and
push
mov
fyl2x
iret
lea
cltd
shlb
pop
repz
dec
jp
mull
jmp
sbb
mov
call
les
add
add
pushf
and
push
mov
popa
js
push
dec
out
add
ljmp
jecxz
dec
lcall
pop
movsb
andb
push
call
pushf
arpl
mov
push
sti
and
fdivl
hlt
dec
jle
dec
jo
pop
jno
aad
pop
ret
icebp
cmp
or
inc
cmpb
je
mov
xor
decl
or
inc
dec
icebp
jmp
sbb
out
mov
mov
ficompl
sbb
in
pop
xchg
cmp
hlt
dec
mov
xor
loope
pop
pop
mov
sub
pop
fisttps
out
nop
mov
xchg
inc
and
sub
pop
imul
lods
or
lods
cs
addr16
lock
inc
loope
xchg
adc
push
loope
addl
inc
test
cmp
mov
loope
gs
into
fistpl
sbb
jae
das
jb
adc
aam
mov
lret
pop
jno
ds
xchg
imul
push
or
push
jo
inc
push
pop
insb
xchg
xchg
fldcw
shrb
dec
nop
pop
insb
stos
gs
pop
xchg
int3
dec
mov
or
es
arpl
xchg
sub
aad
imul
ds
and
movsl
stc
lods
inc
sti
sbb
push
xor
outsw
cmp
scas
or
pop
repz
lods
jnp
imul
lcall
mov
pop
xorl
dec
jnp
xor
loop
nop
stos
int
scas
add
movsl
int3
arpl
sti
pop
adc
pushf
dec
or
xchg
push
test
insl
hlt
mov
xlat
xchg
in
clc
fndisi(8087
mov
cli
xor
enter
incb
cmp
gs
imul
rorl
mov
or
cmpl
xor
xchg
gs
ret
inc
movsb
daa
imul
jno
mov
jno
popf
xchg
jl
mov
aad
pushf
movsb
in
cmpl
std
popf
or
push
inc
pop
cwtl
jmp
roll
push
pop
enter
gs
jnp
push
mov
insl
ja
xchg
sub
shll
faddp
outsl
dec
in
mov
imul
mov
cmp
cmc
jne
ret
pop
fildll
adc
push
inc
xchg
and
shll
pop
std
cltd
lods
mov
dec
shrl
fistl
add
jno
or
test
ljmp
cmpsb
or
xchg
dec
jecxz
mov
jae
dec
adc
movsl
pop
mov
call
sbb
jl
ja
adc
and
pushf
js
jns
sub
outsl
fcomi
and
scas
sahf
lahf
stos
xchg
push
je
lds
minps
jle
shlb
std
test
clc
xchg
jmp
ficompl
mov
sahf
add
xchg
or
pop
xlat
aad
sahf
push
fimull
les
lock
ret
inc
xchg
pop
mov
subl
in
push
and
bswap
sbb
jp
lret
divl
repz
or
jae
ja
bnd
dec
or
cltd
add
adc
jns
fnsave
fbld
jae
jle
or
sbb
insb
or
sub
fwait
xor
push
mov
fwait
mov
rcrb
lods
jge
pop
dec
inc
xlat
jl
and
ret
dec
scas
push
fists
sbb
andb
xchg
and
mov
test
mov
inc
pop
xor
mov
insb
fimuls
test
jge
stos
cs
das
lcall
and
mov
mov
sahf
cmp
cmpsl
out
jns
movsl
xchg
fs
out
lahf
sub
push
fsub
pop
fdivrp
or
sbb
js
jmp
adc
fsubrl
push
inc
ficompl
adc
pusha
push
dec
sub
fucomip
sahf
sub
push
mov
dec
and
rorl
out
xchg
mov
xor
push
push
movsl
xor
in
mov
insl
testb
or
cld
daa
sbb
sbb
movsb
jecxz
mov
ja
jb
push
lock
in
je
test
gs
ss
jle
dec
add
add
movsl
cmp
imul
cmpsb
sarl
dec
in
fistpl
jb
out
sub
mov
in
cmp
loope
or
push
shl
cmp
push
mov
popa
cmp
fldcw
adc
lahf
mov
pop
cmp
andb
movb
mov
xchg
bound
sub
dec
lahf
mov
mov
fcomps
mov
lods
xor
dec
mov
sbb
xor
xlat
pop
inc
outsb
pop
mov
sub
dec
cmp
dec
or
xlat
xchg
dec
adc
movsb
rcrb
ror
pop
sub
jmp
or
push
jbe
or
add
aaa
movsl
jnp
into
iret
and
stos
push
aam
inc
lea
pop
mov
in
dec
jns
pop
jb
inc
fwait
push
mov
cmp
cmp
sub
xchg
daa
test
loopne
into
pop
adc
push
and
repnz
lods
ret
aaa
out
xor
sbb
mov
das
insb
lds
adc
sub
stos
xor
test
lret
subl
imul
imul
insl
cmp
mov
cmp
xlat
or
int3
lcall
pop
bound
arpl
repnz
ljmp
pop
mov
mov
xchg
mov
xchg
stc
adc
xchg
xchg
mov
adc
shlb
pop
frstor
pop
in
test
or
les
xor
mov
fsubl
sahf
std
dec
mov
mov
sub
jo
mov
sbb
pop
pop
jle
imulb
sub
xchg
pop
or
dec
add
out
sbb
cmp
nop
gs
sbb
inc
jb
push
add
dec
push
lret
mov
dec
cmp
cmp
insb
into
and
sahf
imul
mov
and
cmpsb
pop
mov
push
adc
movsl
out
sub
fsub
lock
out
mov
mov
push
jae
mov
lret
jne
mov
pop
imul
mov
jge
push
pusha
xchg
pop
sbb
ret
mov
cld
lea
addl
xor
fwait
pop
push
lahf
push
push
mov
jne
stc
movsl
mov
ret
add
cs
lds
lret
xlat
or
mov
xor
add
inc
inc
test
out
js
jmp
jns
ret
pushf
mov
xlat
pop
insl
pop
sub
adc
gs
xchg
add
movsb
adc
jns
addl
or
inc
shlb
jno
ss
inc
bnd
in
cmp
or
mov
mov
gs
dec
inc
rorl
mov
pop
jo
lahf
out
sub
push
aaa
push
xchg
addr16
mov
fsubp
and
popa
xor
inc
pop
and
inc
sub
jne
bound
rorl
xchg
sti
incl
xor
pop
call
sbb
out
and
inc
fsubs
mov
jl
loop
in
fcoml
dec
popl
cmpsb
mov
add
pop
cs
mov
and
imul
stc
xor
and
lahf
dec
or
fwait
cld
sub
fs
shlb
daa
popa
dec
into
mov
adc
sbb
push
ljmp
sub
sahf
push
xchg
pushl
dec
push
mov
imul
and
mov
mov
vsubsd
mull
daa
iret
push
push
sub
fsubrl
fsubp
add
pop
int
lea
jno
les
mov
xor
test
iret
pusha
sub
test
cmp
fldt
pusha
lds
push
js
shll
cmpsb
pop
cmp
and
xchg
push
mov
cmpsb
fiadds
fcomps
adc
cmp
mov
movsl
add
add
popa
push
jae
sti
fnstenv
xor
imul
fnstcw
mov
enter
scas
movsl
inc
fstl
popf
dec
jecxz
or
sub
push
lods
lock
jg
repnz
mov
rolb
cmpsl
dec
jo
insb
imul
add
pusha
int
inc
inc
jl
adc
in
push
sub
mov
and
insb
pop
or
mov
xchg
jae
shrb
fisubrs
dec
mov
mov
sub
out
idivl
or
mov
iret
jns
outsl
and
lret
xor
icebp
jg
mov
cmp
inc
arpl
cmc
inc
adc
xor
nop
xor
push
pushl
das
pop
sub
xchg
push
and
shl
inc
sahf
lock
or
cmp
insl
scas
add
inc
mov
sbb
out
jl
mov
out
push
inc
cmp
cmp
ficompl
pop
jo
cmp
fucomi
jnp
jg
addb
jae
xchg
stos
pop
jecxz
addl
or
xchg
nop
je
xorb
icebp
insb
das
orl
push
outsl
add
jecxz
inc
adc
xor
inc
xor
jno
aaa
stos
push
mov
jns
mov
sbb
adc
out
scas
mov
aas
and
cmpsb
ret
pop
stc
sbb
cmp
in
mov
roll
and
xlat
aas
xor
ja
icebp
hlt
xor
push
out
insl
jo
push
movsb
sub
dec
xlat
push
mov
sbb
insb
xchg
add
jmp
or
shll
jbe
data16
xchg
scas
sub
fists
fistl
das
stc
adc
fstpt
push
push
jle
pop
sahf
push
jo
push
xchg
sahf
mov
adc
sbb
cmp
cmp
pop
movsb
or
and
stc
jl
xchg
scas
jp
sbb
jge
movsb
pop
daa
adc
rcrb
adc
cld
shlb
enter
and
dec
dec
pop
stos
adc
les
into
push
out
xchg
adc
dec
or
jns
lods
inc
setp
out
jl
lods
mov
push
popf
push
lret
pop
leave
pushf
and
into
mov
add
inc
jb
das
imul
cli
pushf
cli
data16
sbb
ds
adc
add
mov
adc
adc
test
insb
andb
lds
test
jmp
inc
fsts
jne
mov
pusha
pop
xchg
and
add
enter
imul
icebp
insb
call
shl
push
cld
repz
push
in
pop
push
rclb
cmp
outsl
pop
mov
sub
xlat
pop
adc
mov
jecxz
xchg
clc
cmp
lods
ds
jbe
fwait
lods
inc
cwtl
xlat
outsb
dec
xorl
cmp
sub
push
dec
iret
and
stos
enter
jecxz
divb
mov
pusha
cmpl
or
mov
lcall
cmpsb
jno
test
sbb
or
adc
mov
in
add
push
je
xchg
mov
ret
push
mov
pmulhw
test
lods
or
test
xchg
pusha
add
sub
pusha
movl
mov
fimull
stos
ss
in
addr16
mov
mov
sarb
adc
pop
push
test
push
inc
cwtl
ret
fiadds
shl
cmp
sbb
inc
jno
dec
mov
es
inc
scas
adc
inc
iret
icebp
sahf
jnp
clc
int3
jb
pushl
xchg
sub
push
stos
lock
sub
cmp
cmp
mov
pop
mov
testl
out
or
dec
sbb
in
push
rorl
sbb
pushf
jle
adc
sub
lea
sbb
inc
mov
ljmp
push
push
js
loop
loopne
cmpb
xlat
push
test
mov
dec
pusha
push
aam
popf
push
inc
cmpps
int
xchg
sbb
jecxz
int
arpl
repz
aam
aad
adc
push
xor
cmpsl
ds
lret
mov
pusha
xor
add
daa
dec
scas
mov
leave
pop
pop
dec
push
jno
out
bound
jecxz
adc
push
ror
stos
das
lds
dec
movsb
or
pop
scas
xchg
xchg
icebp
lock
sbb
mov
dec
lock
xchg
or
mov
xchg
andl
lcall
js
mov
imul
or
mov
int3
in
mov
pop
repz
push
adc
xor
xor
sahf
sbb
cwtl
lds
mov
dec
mov
imul
pop
pusha
cmp
popf
mov
pop
xor
xor
repz
iret
adc
push
dec
pushf
or
in
mov
dec
bound
mov
movsl
repz
push
jnp
aaa
xor
leave
push
dec
jle
sbb
out
pop
les
dec
aaa
add
notl
push
and
rcrb
in
mov
loope
call
add
sub
out
mov
push
and
jae
dec
mov
push
jmp
cmp
jmp
dec
sub
cmp
imul
nop
or
in
in
divb
aaa
pop
stos
loope
add
cmp
fdivrs
mov
insl
xor
scas
loopne
sti
rcrl
cmp
push
mov
fnsave
lds
test
iret
das
fadd
in
pop
aaa
sub
cli
ret
xchg
pop
into
subb
imul
xchg
sbb
dec
repnz
xor
inc
mov
fsubrs
cmp
shrl
adc
shlb
sub
xor
clc
jno
popa
sub
dec
pmaxub
ds
dec
or
insl
mov
dec
lds
iret
sti
fldenv
aad
mov
mov
test
iret
aas
push
mov
out
mov
push
push
push
js
jle
gs
xlat
ljmp
imul
clc
aas
inc
and
and
addr16
and
fdivl
insb
pop
aaa
aam
and
cmp
mov
es
xor
and
pop
mov
jecxz
xchg
in
mov
dec
push
mov
mov
add
mov
pusha
ds
cld
lcall
sub
lea
pop
pop
mov
das
sub
pushf
lret
loope
imul
xor
mov
call
ljmp
mov
inc
dec
jne
jnp
or
ret
hlt
out
ss
xchg
inc
xchg
jmp
in
gs
jg
mov
jbe
cmp
sti
push
mov
lds
and
aad
lods
and
cmpsl
fiadds
fdivs
add
shrb
jp
fnstenv
lahf
in
test
jo
and
mov
rcll
outsl
ror
fidivs
aas
mov
test
mov
scas
gs
sbb
jnp
cwtl
inc
je
cmp
lcall
jo
adc
testl
ljmp
movsb
mov
mov
das
xchg
dec
xor
mov
sub
lds
shrl
xchg
mov
clc
cli
imul
shl
mov
jb
subl
lods
push
ret
aam
cmp
adc
jmp
mov
mov
jbe
pop
sbb
mov
cmc
orb
and
pop
push
fmuls
subb
fcmove
sbb
jnp
mov
mov
dec
scas
je
xor
insb
xor
cmp
push
or
cmc
fsubs
scas
rorl
pop
negb
cmc
or
out
lret
mov
lea
sub
out
jb
stos
daa
add
addb
or
xorl
clc
in
out
divl
jmp
mov
js
inc
push
lcall
in
std
inc
mov
sbb
pop
lock
and
adc
lods
imul
movsl
sub
or
dec
cmp
dec
pop
xchg
mov
and
aad
push
addb
inc
mov
aad
test
mov
in
jle
or
adc
test
sbb
jmp
add
or
xchg
ljmp
mov
jl
jp
cmp
ret
xchg
jecxz
inc
adc
insb
pop
inc
call
sbb
stos
sub
mov
stos
popw
nop
outsl
js
sbb
les
mov
je
mov
rcl
sbb
pop
je
mov
adc
iret
leave
popf
adc
add
sti
push
cmp
push
idiv
stos
push
inc
mov
pop
ret
xchg
cmp
push
inc
bound
inc
pop
mov
push
mov
dec
lret
fstl
lret
rol
mov
mov
dec
push
ss
cmp
cmpsl
and
inc
cmp
shlb
xor
std
dec
nop
lock
inc
stos
dec
xchg
mov
arpl
and
add
in
cmp
push
inc
and
aaa
xor
pushf
imul
push
cmpl
inc
les
lret
jne
mov
jne
cmp
ljmp
xor
repnz
push
out
int3
int
jl
mov
jle
mov
in
sub
in
xchg
mov
lock
or
outsl
add
es
aam
mov
push
in
or
adc
pop
pop
xchg
jno
push
sub
xchg
fdivrl
je
mov
in
mov
pop
mov
scas
lock
adc
shlb
mov
std
adc
lret
sub
aaa
fmull
or
jmp
nop
mov
orl
mov
adcb
sub
xchg
fwait
jno
cmpsl
je
and
cmc
mov
out
ds
imul
lods
mov
cmp
mov
pop
xchg
data16
xchg
mov
stos
fcompl
icebp
mov
movsbl
repnz
inc
shrb
pusha
dec
popa
lcall
sti
ljmp
call
mov
fimuls
add
inc
pop
cwtl
lcall
ror
add
div
mov
dec
jbe
test
loopne
xchg
movsl
imul
repnz
test
pop
mov
pop
xchg
cmp
lds
sub
sub
out
mov
push
imull
sub
lods
mov
or
cld
scas
sub
pop
fdivs
adc
stc
loopne
stos
hlt
lea
idivb
pop
in
sbb
mov
pop
jb
out
add
outsb
ret
jmp
dec
xor
pusha
jle
adc
pop
testb
mov
in
call
shrl
insl
cltd
gs
cli
daa
lret
jae
pusha
cmc
mov
mov
lock
aad
push
sub
mov
lock
gs
loope
and
ds
loopne
jge
cmp
insl
cmp
ja
inc
inc
rcrb
adc
xor
cmc
fidivrl
or
call
pop
dec
inc
aas
hlt
scas
les
insl
jne
testl
mov
in
sti
jnp
fsubrl
mov
jne
divl
mov
mov
notl
mov
bound
add
loope
pushl
adc
in
add
cmp
arpl
bound
cltd
stos
scas
movsb
call
frstor
inc
gs
xor
movsb
in
inc
dec
aas
or
xchg
dec
and
xchg
sub
adcb
xchg
xor
xchg
inc
testb
incl
lea
pop
pop
push
or
ds
xchg
dec
push
imul
cld
leave
pop
mov
insb
lahf
js
jo
ss
aas
add
mov
mov
sub
push
jno
sbb
adc
mov
xor
pop
inc
mov
cld
test
push
sbb
sub
stos
mov
ja
jb
icebp
enter
xchg
push
add
std
les
mov
gs
sbb
cmp
push
xchg
push
ljmp
jno
imul
adc
jge
out
popf
imul
daa
xchg
fwait
jbe
xchg
mov
std
loope
cmp
add
aad
sub
out
xor
std
or
lret
xor
jmp
xchg
out
mov
dec
pop
fstps
neg
scas
movsl
insb
jl
outsb
adc
xchg
xor
rclb
mov
xchg
imul
sub
scas
inc
mov
jne
pop
stos
int3
mov
pusha
xlat
xchg
inc
enter
cmpsb
ret
xor
sahf
ret
inc
ljmp
call
addr16
aas
sbb
int
mov
iret
in
sbb
cmp
or
out
or
fldl
push
jb
out
or
sub
cmp
mov
pop
mov
ret
test
jae
dec
mov
inc
jns
cmp
xchg
icebp
dec
fmull
xchg
or
dec
aaa
and
push
outsl
xor
push
sti
int
and
lcall
in
mov
jb
cmp
push
adc
fmulp
jae
out
inc
pushf
stc
cmc
ficompl
or
push
add
mov
stos
mov
lcall
arpl
inc
adc
negb
add
jp
xor
cmp
lret
jle
fidivrl
jge
imul
adc
push
lods
and
cli
mov
andb
es
mov
out
into
xor
sub
test
out
lret
daa
lcall
adc
xchg
imull
xchg
cwtl
sar
subl
sti
xchg
insl
test
xor
xchg
inc
stos
adc
and
mov
cmp
ds
cld
outsb
mov
cmc
dec
jae
jnp
mov
sbbb
inc
xor
push
xchg
cmp
mov
sbb
aam
popf
push
ljmp
cs
stos
sub
or
pusha
stos
sar
push
inc
fdivrl
pop
leave
xor
jbe
jmp
ss
adcb
sub
nop
out
mov
mov
sub
jge
jns
in
in
outsl
jno
xchg
xchg
xchg
hlt
mov
pop
and
cmpsb
aam
roll
repz
in
pusha
out
nop
sbb
mov
push
sbb
ja
cli
ja
and
outsb
inc
ss
popf
pop
mov
pop
mov
aam
pop
rorb
fnstenv
ret
dec
out
or
mov
lock
mov
ret
inc
addr16
cmp
push
gs
inc
push
subl
sbbl
mov
aaa
jno
mov
jns
std
mov
enter
outsb
jae
stos
mov
aad
outsb
cmp
out
sti
xchg
and
pop
imul
sub
test
dec
nop
adc
popa
cmp
jmp
mov
inc
popf
or
xorl
mov
divl
mov
shll
rol
jnp
mov
adc
ror
sub
sbb
pushf
or
jo
sbb
sbb
jge
mov
pop
fdivr
test
ret
fs
mov
push
outsl
jb
jl
jae
rcl
jmp
ja
and
jg
pushf
mov
cmp
lods
aas
add
insb
push
push
cmpsl
aad
xrelease
push
adc
shrl
mov
imul
mov
sub
push
insb
mov
mov
loopne
mov
add
call
pop
imul
mov
xchg
pop
add
std
pop
incl
dec
fistps
xchg
sbb
push
dec
scas
out
loope
mov
xlat
imul
movsl
or
or
cmp
mov
std
mov
or
stc
rcrl
pop
xchg
jg
push
ljmp
mov
test
push
or
xor
call
jmp
xchg
adc
mov
out
sub
adc
movb
sub
in
pusha
bswap
pop
xor
xchg
mov
aas
mov
cli
sub
lea
pop
mov
dec
sub
mov
test
mov
loop
push
cmp
or
sbbb
xchg
xor
dec
pop
mov
repz
push
adc
int3
inc
idivl
pop
jbe
xchg
cltd
xor
ret
xchg
inc
jmp
mov
sub
into
pushf
nop
stos
int
mov
or
fwait
scas
push
and
mov
test
repnz
xchg
mov
jle
cli
cmpsb
jnp
test
inc
mov
mov
cwtl
clc
sub
jne
sbb
daa
lods
into
push
ja
mov
leave
mov
cld
jge
je
and
pop
xor
inc
and
xchg
rolb
adc
cmpsb
or
xchg
stc
rcl
in
andl
mov
stos
inc
push
and
movsb
fcmovb
enter
or
in
push
lahf
mov
outsb
sub
ficoms
mov
inc
and
das
das
lods
pop
pop
xchg
add
outsb
xchg
andl
jo
xor
lcall
ficompl
adc
xchg
nop
push
or
mov
loope
push
pop
adc
jno
mov
scas
jo
incl
cmp
push
aam
add
pushf
scas
ret
jecxz
xor
cmpl
push
sahf
jl
shll
sbb
mov
popf
fiaddl
push
je
out
test
xchg
mov
lahf
int
sbb
inc
dec
add
xor
push
mov
jo
inc
loopne
xchg
jge
dec
mov
mov
subb
mov
mov
js
or
cmp
int
rcrb
sbb
adc
lods
mov
fidivs
xadd
test
int
xchg
push
jmp
cmpsb
pop
fisttpl
mov
inc
add
iret
pop
and
aas
adc
dec
lods
lock
and
and
dec
push
sbb
and
js
sub
pop
mov
xchg
mov
aam
jp
push
add
arpl
dec
mov
arpl
push
mov
xchg
movsl
in
jb
mov
in
adc
lcall
and
inc
jbe
dec
pop
mov
jp
outsb
test
mov
or
movl
test
sbb
mov
jecxz
cmc
push
in
rorl
enter
xchg
jmp
push
fdivl
mov
pop
dec
shl
xor
pop
jg
or
sbb
rol
inc
adc
xor
fcmovnb
loop
sbb
aam
hlt
mov
rolb
mov
push
mov
jnp
dec
jecxz
popl
and
mov
xor
sub
test
into
or
cmc
pop
mov
movsb
pop
push
mov
bound
mov
repz
sbb
pop
push
mov
pop
mov
cmp
gs
in
loopne
out
xchg
mov
xchg
push
fsubrl
jle
daa
pop
jg
jl
xchg
mov
jae
adc
inc
xor
stos
xchg
adc
or
repz
test
sub
adc
mov
and
push
jne
adc
cmp
pop
cmp
dec
mov
ret
loope
sub
dec
test
cwtl
dec
and
xlat
mov
testl
xchg
test
lods
mulb
cmpsl
sbb
push
xchg
push
mov
sbb
loope
sbb
xchg
adc
repnz
sbb
lret
jns
fdivrs
jns
daa
pop
pop
pop
push
xchg
push
std
xchg
jbe
xchg
push
adc
repnz
xor
inc
fwait
jg
sub
xor
and
gs
or
pop
mov
xchg
out
loope
mov
cmpsl
es
in
movsb
cmp
addl
cmp
xor
cmc
cmp
loopne
mov
adc
xchg
and
mov
outsb
pop
ja
shlb
jp
cli
jl
mov
stc
or
xchg
fdivl
xor
sti
xchg
mov
mov
add
rclb
jae
cmp
gs
cli
and
cltd
jne
sti
or
and
hlt
out
push
inc
xchg
popf
xor
jmp
decl
jle
shrl
sub
mov
ret
jbe
jmp
adcb
push
stos
push
inc
push
add
scas
xchg
jae
xor
xchg
sbbl
addr16
filds
outsl
add
fldl2t
in
sbb
xchg
cmp
test
cmp
mov
dec
pop
aas
pop
dec
ficompl
cmp
pop
cmc
adc
call
test
test
cmp
out
inc
sbb
pushf
cmpb
adc
cmp
mov
pop
push
fsubrs
cmp
idiv
negb
loopne
add
lahf
mov
data16
mov
clc
aas
aad
sbb
popf
jo
xor
inc
pushf
testb
mov
lahf
and
pop
add
mov
inc
pop
add
les
popf
pop
in
cmp
dec
movsl
lret
xlat
sarl
xor
sub
mov
shll
jl
jg
xchg
sbb
or
sti
inc
jnp
scas
movsb
les
ret
jl
scas
mov
sbb
sbb
dec
lret
or
and
pop
lods
scas
xchg
cmp
leave
jmp
xor
xor
push
push
pop
pop
sub
mov
out
jp
shrl
inc
pop
out
out
inc
das
add
and
stc
fnsave
pusha
xor
lret
fnstsw
mov
roll
test
dec
push
sahf
mov
insl
or
mov
or
popa
jbe
arpl
fistps
pop
mov
in
sub
aad
push
iret
sbb
inc
ljmp
push
mov
push
lahf
xchg
lea
mov
and
xchg
jo
hlt
push
lret
jp
cli
fistpl
sbb
pop
loopne
lret
pop
mov
sub
cs
out
jge
and
mov
popa
adc
sahf
mov
adc
sbb
cmp
mov
lods
xor
stos
jb
pop
inc
lods
fstpt
push
pushf
inc
test
xlat
and
and
out
das
xchg
mov
jbe
and
xchg
movsl
xchg
xchg
imul
repnz
mov
iret
jl
cmp
das
sub
fists
xchg
mov
jnp
in
adc
in
xchg
adc
dec
lret
adc
mov
aaa
pop
test
push
fstpl
scas
mov
and
xor
aaa
adcl
fcmovb
loopne
jne
cmp
sub
repz
and
dec
add
movsb
mov
push
push
cwtl
dec
aam
jl
fsts
sahf
inc
jmp
mov
pop
sbb
xor
mov
test
lret
lahf
ja
call
xchg
loopne
adc
repnz
add
mov
cmpsl
cmc
cld
xor
out
std
and
sti
jbe
leave
test
aad
loop
outsl
ret
sbb
sbb
xchg
clc
repz
stos
mov
testl
mov
fimuls
cld
cmp
in
arpl
jns
shr
negb
shll
shl
mov
xor
cld
adc
sahf
jo
arpl
jnp
fcomip
movb
mov
push
arpl
inc
xor
push
loopne
or
fdivl
xor
repnz
in
push
mov
pop
lea
mov
fbstp
push
mov
adc
shlb
mov
out
xchg
xchg
mov
add
push
mov
iret
lods
mov
test
jns
cmp
jg
jb
push
mov
ret
lods
dec
adcl
xchg
add
mov
int3
cmp
lods
call
push
scas
sub
sahf
mov
xor
mov
adc
dec
sbb
jnp
and
pop
jle
shll
sbb
mov
add
jo
inc
pop
test
mov
xor
jl
in
repz
sub
aam
int
adc
and
cmpsl
xchg
lods
out
ljmp
je
fists
xchg
mov
xor
stos
jnp
dec
pop
or
js
imull
xchg
mov
dec
jp
cmc
decb
lahf
inc
insb
mov
inc
or
adc
lea
pop
adc
pop
adc
test
mov
add
shll
fiadds
mov
adc
and
cmp
jae
jl
cmpsb
mov
outsl
jmp
mov
js
and
xchg
movsb
fdivrl
shll
dec
ret
jb
pop
daa
scas
and
xchg
mov
shrb
xlat
pushf
out
lcall
clc
jl
inc
scas
sbb
int3
fwait
jecxz
cmp
xor
mov
inc
pop
cmp
imul
lcall
push
mov
negb
mov
das
inc
mov
sbb
repz
pop
sub
mov
mov
fsubs
adc
fnstenv
arpl
pop
mov
icebp
aas
dec
sub
scas
popf
sub
ss
cmp
jnp
lods
int
mov
mov
lock
fisubs
hlt
xchg
cmp
and
push
pop
in
mov
push
addl
lahf
sub
pop
insb
xor
stos
adc
add
aaa
imul
mov
mov
or
rcll
test
cmp
fwait
xchg
fstpl
jl
xor
mov
cmpsb
cmp
popa
cmp
pop
jle
jns
adc
int
push
in
test
cs
push
lret
cld
jmp
lock
aas
aad
movsl
or
je
in
jmp
leave
adc
imull
imull
call
xchg
pop
ljmp
dec
jb
jo
js
mov
ret
cltd
adc
dec
lock
lahf
sahf
fadds
add
lock
int3
jmp
mov
ret
fsubrl
add
jbe
dec
pop
dec
loope
test
sbb
push
std
int3
push
outsl
divb
in
aad
mov
push
mov
fsubl
and
les
xchg
sub
xor
cmp
push
mov
pop
push
sahf
cmp
mov
jecxz
ja
and
loop
fcomps
xor
xor
sbb
inc
les
in
inc
cld
dec
dec
push
push
cwtl
xchg
dec
push
add
dec
jae
mull
cmpsb
imul
inc
jmp
cmpsb
inc
neg
push
neg
adc
inc
stc
test
xchg
cmp
jl
mov
xchg
mov
add
repnz
cmp
pop
das
mov
mov
or
sbb
xchg
xchg
sub
in
xor
scas
lret
xlat
mov
orb
add
inc
mov
pop
in
mov
addl
sbb
or
push
ficoml
subl
shlb
lcall
or
lds
or
icebp
movsb
inc
sub
mov
out
pop
lock
push
jno
dec
dec
test
and
push
ss
sahf
call
loopne
lret
sti
outsb
and
add
lods
call
imul
dec
lret
into
pop
inc
dec
or
mov
push
push
repz
aam
in
ljmp
and
pop
cli
test
imul
or
mov
dec
cli
push
movsb
cmp
cs
jmp
movsl
repz
sbb
cmp
push
loope
fwait
bound
cli
mov
lret
test
adc
int
in
popf
mov
sub
cmpsl
arpl
inc
and
stc
mov
in
lods
repnz
and
cmp
pop
jmp
testb
cmp
cmpsl
in
aaa
stos
dec
and
adc
sahf
adc
pop
jo
fsts
adc
and
dec
push
pop
add
xchg
mov
jno
or
scas
shrl
mov
fnsave
addr16
lcall
sbb
loope
test
xchg
aas
dec
fcmovnb
mov
cs
fildl
aaa
push
jle
mov
gs
insl
int
popf
jg
movsb
cmp
or
mov
push
outsb
int
mov
pop
in
data16
stos
sub
lea
int
cmc
les
push
or
int
lahf
insb
jle
fisttpl
movsb
mov
xchg
mov
ret
sbb
mov
fiadds
dec
dec
mov
adc
andl
add
fwait
ja
and
jg
push
jg
ret
imul
pushf
test
lret
jo
push
fists
adc
adc
push
sahf
out
cwtl
sub
lret
inc
cmp
lahf
std
lock
push
movsb
lock
xor
clc
mov
push
sahf
xlat
cmp
cmp
ret
push
or
shll
call
mov
stos
in
dec
loop
xor
int
lods
fcompl
call
sahf
lret
inc
lret
add
in
xor
fcompl
rol
push
cmp
mov
sbb
rcrl
es
out
push
jns
shl
add
push
insl
hlt
mov
mov
jle
xorb
push
push
cs
loope
jne
jo
fs
jl
sub
lahf
adc
in
sub
insb
notl
movsb
lahf
xor
cmpsb
daa
xchg
lcall
xor
out
fsub
cmpsl
ret
sbb
fsubl
cmp
mov
and
test
mov
add
inc
xor
rdpmc
sub
sub
clc
arpl
mov
push
and
stos
mov
push
mov
push
ret
xchg
sbb
push
pop
push
mov
pop
xlat
xchg
bound
iret
int
sub
lds
stos
sar
push
mov
and
dec
int3
mov
out
xchg
insl
and
pop
mov
mov
xchg
sbb
mov
push
pushf
dec
inc
add
jp
mov
mov
in
mov
scas
mov
imul
push
mov
clc
mov
aam
pusha
adc
imul
pop
fwait
push
inc
cmp
cmp
mov
aam
out
nop
jp
je
cmc
mov
out
sti
mov
out
jmp
dec
call
adc
faddp
xchg
out
ja
addr16
and
cmp
or
pop
repnz
lcall
or
sbb
int3
cmp
ret
pop
sbb
pop
push
jne
loope
lods
addr16
stc
xchg
jo
mov
std
xchg
add
push
jo
sub
and
mov
cmp
aaa
lret
outsb
sbb
es
jnp
mov
iret
push
lea
js
testl
sbb
lea
push
and
or
fiaddl
cmp
into
xchg
fdivs
add
push
add
mov
jbe
push
mov
fcmovbe
xor
lods
jge
scas
scas
into
js
subb
mov
fisubrs
inc
sub
jnp
and
sbb
sbb
adc
into
lock
push
pop
int3
aaa
or
lcall
mov
mov
sub
adc
in
test
faddp
imul
mov
mov
sbb
pop
cmp
xchg
mov
imul
and
push
cwtl
push
fld
jg
jl
cmpsb
aas
or
test
mov
xorb
sbb
pop
aaa
push
lcall
cs
outsb
lods
jno
les
mov
and
mov
popa
lods
bound
scas
aaa
jle
mov
xchg
into
outsb
outsl
repz
clc
stos
mov
push
lret
js
mov
xchg
popf
mov
or
inc
inc
scas
dec
loope
xchg
ds
dec
enter
sub
sbb
dec
divps
pop
mov
add
in
daa
cmpsb
dec
cmp
jp
mov
pop
adc
mov
inc
jne,pn
dec
enter
mov
sub
dec
inc
fstps
test
int3
orb
fldl
clc
dec
jp
xchg
std
aad
int3
out
sub
xchg
lret
jl
fbld
push
jae
push
inc
sbb
push
call
mov
movsl
inc
mov
int3
ljmp
insl
mov
movsb
pop
cmp
hlt
daa
in
insl
mov
fsts
or
jo
mov
in
cmpsl
inc
push
leave
push
push
lods
insl
mov
xor
iret
push
insl
int
mov
pop
fcomps
rcl
stc
fmull
sub
push
fistpll
fistl
sbb
or
xor
mov
mov
jl
icebp
lret
and
lss
cmp
jg
jbe
in
rclb
xchg
sub
mov
mov
ret
test
mov
ficomps
or
hlt
insl
adc
stc
int
push
test
mov
mov
jae
push
sub
or
jg
mov
mov
or
pop
popa
add
int3
xchg
xchg
mov
dec
mov
fdivl
jmp
and
add
nop
xor
adc
rol
repz
mov
insl
hlt
imul
lock
nop
ss
mov
nop
movsl
inc
call
std
cmpsl
imul
fidivl
xor
fs
dec
mov
popf
ret
iret
cld
jecxz
mov
dec
inc
fcoms
pusha
js
cmpsb
xor
out
js
pop
je
inc
mov
test
push
fdivl
adc
ret
ljmp
mov
pop
mov
sbb
push
ret
and
inc
push
int3
dec
sbb
dec
cmpsb
cwtl
lock
faddl
adc
ret
mov
inc
or
stc
movsb
jecxz
push
imul
lods
inc
adc
inc
gs
push
xchg
adc
mov
stos
xor
imul
inc
fwait
pop
stos
inc
gs
les
jns
xchg
in
dec
push
xor
frstor
mov
je
fcompl
push
int
mov
jecxz
vucomisd
sub
out
or
in
tzcnt
or
lock
xchg
adc
add
hlt
leave
aaa
xchg
pop
cli
leave
dec
fistpll
fcmovu
xor
and
fs
mov
push
xchg
jae
pop
lock
dec
push
popf
nop
push
jmp
dec
icebp
cmpb
hlt
sub
dec
push
movsb
arpl
orl
dec
inc
and
sti
cs
rcrb
push
adc
sete
sbb
xor
mov
xlat
xchg
sub
adc
xchg
insl
xor
push
lahf
push
nop
dec
shrl
ja
scas
cs
push
inc
daa
adc
ficoml
cmpl
or
fwait
outsb
jne
mov
sub
sarl
inc
pop
mov
add
jbe
mov
cmpb
xchg
mov
mov
sbb
rolb
jle
insl
mov
test
mov
cmp
sbb
or
lods
mov
ss
sbb
xchg
pop
stos
pusha
lahf
ss
loopne
fistps
roll
mov
xlat
adc
push
inc
jl
pop
cld
jmp
loop
push
mov
sbb
inc
clc
mov
pop
stos
stc
shll
mull
push
cs
push
shlb
push
fadds
lcall
shll
mov
sbb
or
add
lods
inc
bound
lock
adc
cmpsb
andb
push
xchg
xlat
jbe
test
inc
and
inc
inc
or
xor
mov
ret
fnstsw
aad
sub
lods
add
popa
fwait
sub
jno
les
jl
sbb
cmp
jns
inc
es
cmp
push
jmp
jecxz
inc
fisubrs
test
sub
in
jecxz
lods
cmp
inc
inc
idivl
push
out
popa
inc
aad
add
cmp
inc
pop
cmp
inc
loop
into
and
pop
in
xchg
into
in
pushf
sub
push
ljmp
jno
pop
ljmp
nop
pop
cltd
xor
in
enter
outsl
sahf
push
and
or
dec
repz
and
cmp
fwait
inc
pushf
xor
mov
xor
mov
in
movsl
inc
aad
xchg
arpl
repnz
cmpsb
adc
xlat
movsb
pop
mov
test
push
sub
cltd
xor
push
mov
mov
sub
inc
push
add
xchg
adc
imul
mov
sub
dec
sbb
js
mov
push
roll
clc
and
ljmp
jp
mov
leave
add
cmp
arpl
aad
ret
mov
movsl
ja
lods
cmp
adc
mov
mov
pop
addl
xchg
lock
icebp
sbb
mov
sbb
cmp
mov
dec
pop
dec
bound
sub
jo
out
fnstenv
int
adc
rolb
lods
or
addr16
sbb
xor
imul
test
push
or
and
es
dec
lods
inc
addb
bound
fstpl
jmp
sub
xchg
pop
incl
pop
stc
push
xor
scas
scas
inc
push
loope
sub
dec
mov
jmp
popa
inc
outsl
mov
dec
mov
leave
pop
dec
cmp
mov
inc
jmp
push
push
push
pusha
jb
rorl
call
dec
outsb
xor
push
cmp
pop
fcomps
cltd
pushf
pop
clc
sub
add
sbb
pop
mov
sbb
jl
mov
dec
fldt
sahf
rcr
jbe
bound
jecxz
dec
out
mov
inc
scas
je
xor
test
sbb
pop
aas
push
cmp
pop
outsb
je
push
jg
adc
je
fldenv
pushf
mov
xchg
sub
sahf
ss
push
xor
dec
jl
xor
roll
pop
imul
test
fimull
sbb
outsb
mov
cmp
cmp
jne
mov
loopne
into
imul
inc
decb
cwtl
dec
jne
xchg
in
sub
mov
sbb
add
jle
jo
and
cmp
test
loop
or
xchg
and
imul
pop
mov
mov
dec
mov
in
test
lods
loope
filds
pusha
xchg
mov
push
shll
pop
ss
push
push
popf
dec
pop
add
insl
sub
mov
jg
push
add
fs
fstps
fidivrl
lcall
xchg
enter
cmc
ret
mov
lret
pop
jecxz
dec
mov
jecxz
nop
ret
jbe
imul
cmp
cmpsb
mov
and
or
pop
repnz
adc
add
jns
outsl
xchg
pop
sbb
or
daa
sub
mov
pop
scas
pop
push
ljmp
outsl
push
xor
sbb
lahf
bound
pop
fwait
xor
inc
dec
gs
jns
jno
pop
mov
outsl
loop
aam
ss
push
fstps
cli
xchg
jne
cmp
movsb
or
adc
cld
xchg
pop
mov
dec
mov
adc
cmpsl
sbb
jb
jg
pop
push
loop
shl
push
call
cli
dec
xor
dec
shrl
shl
arpl
test
jecxz
cmp
jmp
cli
jmp
or
loopne
mov
add
rcr
jg
sbb
outsl
clc
ljmp
or
xchg
xchg
or
mov
bound
xchg
mov
stc
xchg
popa
mov
ret
lds
aad
dec
or
ljmp
call
aas
adcl
push
popa
pop
enter
das
ret
pop
ljmp
das
addr16
pop
mov
mov
adc
fldt
inc
sbb
je
cwtl
dec
test
je
jae
dec
stos
ss
inc
jecxz
and
push
adc
arpl
dec
mov
adc
fldl
jb
xchg
mov
xchg
mov
mov
call
insl
xchg
xlat
movsb
mov
dec
push
cmp
or
aas
adc
pop
mov
andb
add
jno
int3
pop
push
mull
js
mov
jecxz
mov
cmp
loope
sub
enter
dec
or
in
mov
sub
mov
sahf
sbb
es
cltd
lock
or
inc
iret
enter
stos
xor
mov
es
mov
js
movsl
cmp
push
iret
gs
sahf
ret
inc
outsl
test
imul
je
add
push
mov
sar
xchg
add
inc
fsubl
ret
repz
adc
test
shr
sbb
xor
push
pop
lock
pop
push
addr16
xchg
leave
mov
push
fwait
movsl
into
dec
cmp
pop
sub
cmp
push
call
jo
outsl
jns
xchg
jmp
sbb
dec
pop
loopne
and
in
loop
xchg
push
imulb
jg
push
sub
aam
and
pop
mov
jecxz
rcl
lods
mov
imul
popa
cmc
fimull
wbinvd
data16
cmp
sbb
in
push
pop
cwtl
ljmp
mov
mov
or
fs
xchg
mov
and
dec
out
imul
sbb
mov
and
lahf
ss
lret
add
sahf
push
dec
pop
xchg
inc
and
add
inc
sti
aas
mov
cmp
jle
ds
mov
clc
mov
push
lock
add
cmpsb
mov
or
and
sti
sbb
sbb
gs
arpl
inc
pop
mov
and
repz
in
test
shlb
mov
jecxz
stc
test
lret
mov
into
and
jge,pt
scas
pusha
add
push
test
inc
jb
pop
and
shl
repz
mov
pop
jge
or
cmp
add
mov
jb
jno
outsl
inc
cmp
xor
dec
fistpll
cmc
or
inc
pop
mov
rcrl
mov
xor
outsl
es
cmp
jg
or
inc
cli
push
js
and
lock
mov
ja
test
mov
outsl
movsl
pop
fdivl
out
aaa
mov
clc
nop
xor
pop
pop
int
pop
sahf
hlt
loopne
fistl
xchg
pop
xchg
fmulp
aaa
add
xchg
int3
fmuls
fsubrs
jp
into
xchg
cmp
int3
arpl
or
mov
mov
jp
pop
mov
cmp
aad
jne
in
aaa
push
xchg
cld
scas
popl
xor
fisubl
popa
sbb
enter
lret
push
ret
push
stos
add
xor
call
orb
dec
push
inc
dec
dec
aas
push
popl
popf
lods
or
cmc
enter
add
jo
fdivrs
or
mov
das
rol
jbe
shlb
loope
stc
dec
outsb
xor
stos
and
xor
add
cmpsl
inc
jb
jg
and
out
mov
stos
je
in
cmc
inc
pusha
negl
push
push
sub
inc
mov
mov
mov
sbb
icebp
dec
mov
js
hlt
dec
inc
jae
push
loopne
dec
mov
insb
xchg
addr16
imul
lcall
jne
icebp
fsubr
sbb
das
mov
jp
cmpsl
dec
ja
dec
dec
mov
lea
test
test
aad
xor
jg
push
repz
int3
stc
cmp
or
out
mov
inc
xchg
bound
mov
ljmp
push
dec
out
mov
out
popf
pop
cmc
mov
pop
jl
mov
mov
icebp
xor
mov
addr16
xchg
mov
andb
mov
mov
outsl
fisubs
outsb
inc
outsb
add
pop
sti
inc
lea
jp
ljmp
lret
addr16
mull
sahf
scas
inc
adc
rcrb
jbe
fidivs
add
push
mov
inc
inc
int3
cmpsb
sub
fadd
push
mul
cmp
es
and
mov
mov
mov
jg
jnp
sti
mov
stos
jns
pop
icebp
jne
xchg
dec
or
jns
or
mov
aaa
bnd
add
adc
testl
sbb
imul
pop
scas
bound
loop
jns
dec
pushf
xor
shlb
iret
dec
push
mov
push
stos
push
sbb
movb
xor
mov
andb
sub
fbld
and
mul
dec
in
sub
cmpsl
cmpsl
ss
je
inc
notl
add
push
sbb
sub
mov
adc
out
das
test
sbb
fs
pop
dec
sub
mov
outsb
xchg
or
dec
outsl
push
popf
xchg
popa
cmp
js
push
mov
xchg
pop
adc
outsb
cmp
inc
in
push
sbb
xchg
mov
adc
sbb
jmp
mov
sbb
enter
cmpsl
in
ss
mov
and
add
push
dec
jns
pushf
xchg
jmp
adcb
mov
jae
cmp
test
or
bound
jns
movsl
mov
fs
adc
mov
jbe
fmull
and
repz
loop
les
xorb
jb
mov
into
ds
dec
sbb
jnp
xchg
adc
mov
jp
jo
xchg
push
ret
dec
or
mov
lcall
or
jp
or
ret
loop
cmp
incb
jle
in
and
and
or
stos
sub
adc
mov
push
push
ja
shrl
jl
scas
daa
jmp
ss
push
mov
rcrl
xchg
jp
xor
jnp
or
jo
mov
in
das
orl
sub
hlt
shlb
mov
test
shr
inc
add
enter
pushf
ss
cmovg
add
xor
ss
mov
dec
push
adc
addr16
mov
cld
pmulhw
decl
nop
mov
xchg
ja
int
mov
aas
testl
xchg
pop
fsub
fistl
stos
cld
dec
mov
cltd
stos
shrb
jns
inc
ret
testl
push
lock
mov
dec
and
fldenv
xchg
jne
aas
loope
repnz
cld
xchg
cltd
add
js
mov
and
xchg
incl
or
fsubl
and
and
imul
repnz
push
xchg
inc
dec
push
jmp
jnp
push
cmpsl
adc
adc
inc
inc
or
jno
mov
xchg
sar
mov
aam
lret
xchg
dec
lods
cmpsb
push
jle
loopne
mov
shrl
push
sbb
mov
sahf
cmp
inc
cwtl
add
pop
cwtl
iret
test
push
mov
jae
and
add
xchg
out
daa
inc
frstor
sub
shlb
les
insb
jge
xchg
mov
dec
out
mov
jmp
test
imul
ret
orl
jl
sub
fmull
xchg
in
jle
xchg
adc
pushf
outsb
lods
xchg
mov
xrelease
es
xor
xchg
dec
out
add
or
call
bound
sbb
daa
mov
cmp
dec
and
insb
fstl
mov
out
repz
cwtl
mov
or
scas
jge
sub
loop
imul
add
adc
stos
in
je
xlat
scas
aaa
or
pop
mov
cmp
lret
out
inc
scas
sub
pop
pop
or
push
sahf
mov
jno
dec
ss
jmp
mov
xchg
jnp
fidivl
fstpl
push
inc
rcrb
cli
inc
mov
sub
mov
andl
jb
stos
pop
lret
dec
pop
mov
jg
mov
loope
cltd
das
mov
fldl
cmp
adc
jae
std
test
cli
inc
adc
xchg
fbld
cmp
das
movb
xchg
or
cmp
in
mov
ljmp
ljmp
mov
pop
cmp
push
enter
push
out
in
cmp
outsb
add
stos
repz
cwtl
jmp
or
pop
inc
mov
cmpsb
mov
push
scas
inc
fisubs
pop
dec
scas
xchg
dec
xor
lock
push
pop
mov
es
jb
leave
cli
pop
mov
clc
mov
nop
mov
push
lock
sbb
mov
adc
cwtl
std
jecxz
fsubr
lret
fs
mov
mov
push
mov
sub
mov
xchg
scas
add
inc
jb
stos
xchg
aaa
push
mov
rclb
sbb
sub
loope
adc
data16
pop
and
xor
mov
dec
loopne
ds
lret
mov
fsubl
push
adc
mov
push
xor
aaa
push
mov
mov
push
das
mov
and
repnz
pop
outsb
mov
mov
fisubl
adc
pop
sub
movsl
add
cwtl
std
shll
mov
xlat
jo
popf
mov
push
push
pop
cmp
fcomps
cwtl
dec
and
movhlps
aam
lods
add
nop
push
lret
adc
jo
loopne
mov
lahf
jns
in
les
xor
xchg
cmp
jge
repnz
xchg
and
not
aam
push
mov
cltd
repnz
outsb
inc
out
ror
jecxz
sbb
pop
push
pop
outsl
push
xor
outsl
mov
pop
xor
dec
js
adc
mov
dec
push
negl
ljmp
xor
jg
out
dec
fwait
xchg
inc
mov
inc
inc
or
sub
sub
stc
or
adc
cmp
in
xchg
sbb
push
dec
mov
arpl
imul
popa
nop
out
lcall
ljmp
and
xor
xlat
jge
leave
shll
pop
ljmp
ss
aaa
xor
mov
movsb
bound
hlt
int
or
js
sbb
pop
outsb
jmp
sbb
dec
mov
mov
ds
inc
adc
sarl
add
notb
lahf
jge
inc
stos
mov
ss
insb
and
inc
mov
das
xchg
push
jge
adc
imul
mov
loope
mov
and
lcall
or
dec
mov
sbb
dec
dec
bt
out
or
mov
je
mov
fwait
test
or
xchg
cmpsb
jecxz
pop
mov
or
gs
fs
xchg
mov
sbb
ret
xor
jbe
xor
xor
iret
decl
int3
jge
adc
jo
push
jb
sbb
dec
xchg
lea
nop
repz
mov
test
mov
sub
jle
sub
cltd
pop
xor
sahf
cmp
mov
add
movsl
mov
shrb
mov
hlt
fdivl
test
jge
push
or
dec
xchg
popf
xor
insb
out
jns
inc
nop
mov
imul
lock
outsl
loop
sahf
les
aad
mov
jbe
xor
mov
or
call
into
adc
mov
hlt
sbb
jne
adc
add
sbbb
inc
xor
xor
jp
cmp
mov
sub
out
cmp
std
xchg
jmp
ficompl
mov
push
xor
or
out
loop
in
and
mov
xchg
add
rclb
cs
mov
inc
sahf
repnz
sbb
add
jp
cld
nop
push
push
repnz
leave
and
xchg
outsl
sbbl
or
sbb
std
cs
and
popa
mov
adc
lods
xor
mov
aad
loopne
cmp
sahf
mov
nop
dec
mov
pop
out
nop
push
push
fisubrs
aad
and
dec
jp
dec
fistps
test
in
and
mov
notb
mov
xlat
fwait
xlat
icebp
stc
add
push
stos
sub
xchg
mov
in
cmp
mov
cmpsl
adc
pop
sub
clc
push
out
mov
push
pop
push
fisttpl
jbe
jbe
in
nop
jge
and
fstpl
int
lock
or
mov
inc
inc
pusha
lods
push
sbb
inc
dec
xchg
dec
jno
leave
pusha
add
jge
iret
imul
xchg
xor
loopne
mov
mov
cmpsl
int
pop
sbb
sbb
rcrb
ds
push
and
gs
pushf
and
notb
push
aad
idivl
icebp
enter
cmp
push
or
xor
fnstcw
sbbb
loope
rep
add
test
jge
adc
inc
or
ja
scas
jp
xchg
jmp
dec
scas
in
and
jmp
cli
scas
xor
push
sbb
stos
add
ljmp
pop
arpl
ret
out
pop
inc
cld
push
mov
adc
mov
repz
out
lock
les
fldcw
xchg
adc
test
mov
loope
rep
cmp
adc
push
inc
and
std
sub
leave
jns
popf
push
xchg
push
adc
stc
mov
push
pop
je
cmp
lods
pop
shlb
dec
cmp
sub
popf
xchg
in
dec
xor
cmc
and
xor
cmp
js
enter
aas
cmp
dec
adc
popl
jbe
mov
aam
or
mov
movsl
cld
shlb
sub
or
popf
loop
fwait
lcall
dec
sarl
lcall
or
js
and
in
xor
sub
dec
js
test
sbbb
out
and
jb
pop
arpl
mov
or
pop
mov
lods
loop
clc
push
dec
cmp
push
popl
push
rol
xor
mov
aaa
push
sub
fwait
sbb
push
mov
cmp
pop
repz
pop
arpl
testb
mov
stc
je
mov
call
jns
dec
pusha
out
leave
jecxz
mov
inc
ljmp
orb
pop
xchg
mov
push
cli
popf
xlat
insl
int3
mov
hlt
cmp
lcall
or
test
fildl
es
cmp
je
stos
add
jae
xchg
push
or
icebp
xchg
cmpl
add
mov
push
push
pop
push
or
cmp
stos
pop
adc
and
lods
test
inc
mov
mov
pop
and
or
cwtl
add
or
sub
jns
mov
dec
mov
cmp
push
lcall
sub
mov
jnp
sbb
rorl
sub
stos
or
mov
stos
iret
dec
jecxz
stos
popfw
outsl
rcll
add
insl
jae
inc
fiadds
xchg
or
test
xchg
sbb
adc
loop
cmpsl
inc
xchg
rol
adc
pop
push
cmp
lahf
jp
pop
fisttpl
mov
mov
jb
inc
pop
or
xchg
out
jno
inc
mov
dec
xor
aas
xchg
fdivl
sbb
shrb
repz
xor
mov
std
xchg
lds
or
add
lret
push
mov
scas
lcall
fnstenv
movsl
pusha
adc
into
and
adc
adc
test
into
push
jo
push
dec
lods
in
xchg
cmp
xor
sub
subl
nop
lcall
sbb
push
cli
xchg
adc
ret
pop
bound
leave
movsb
xchg
mov
cmp
pushf
mov
sarl
imul
int3
clc
dec
pusha
addb
push
jge
adc
cmp
addl
mov
stc
loopne
adc
xor
jne
adc
je
lret
xchg
xchg
std
xchg
cld
cmp
add
int
jnp
pushf
lahf
test
repnz
inc
out
movsl
icebp
inc
sbb
xchg
sbb
lods
push
ljmp
inc
inc
xchg
mov
ss
mov
imul
test
shl
xor
pop
sbbl
inc
mov
push
rcll
iret
or
lret
ss
subl
sahf
dec
iret
jecxz
and
fwait
cmp
adc
test
je
mov
sub
imul
in
idivb
stc
mov
and
pop
xchg
mov
int
ret
dec
xchg
mov
nop
outsb
and
ja
or
add
add
sub
adc
add
add
loop
pop
negb
cmp
push
in
xchg
push
push
test
inc
jle
dec
cmp
sahf
sbb
iret
lahf
sbb
pop
bound
sbb
push
notl
pop
ds
mov
sbb
daa
divb
or
sbbb
or
lods
and
mov
and
xorl
xor
sbb
loope
jnp
js
inc
pushf
xchg
sarb
ljmp
into
jp
lds
test
cmpsb
mov
in
clc
mov
das
cmpb
add
repz
sbb
sub
int
cmp
mov
in
jne
stc
popa
jne
xor
mov
and
aas
cs
daa
movsl
pushf
fisubs
add
test
push
repnz
xchg
das
cld
bnd
loope
popf
sub
or
fisttps
push
or
xor
jmp
mov
decb
lahf
or
sarb
xchg
repnz
cmpsb
les
faddl
mov
xorl
call
xchg
jbe
cmc
leave
mov
sbb
dec
mov
std
mov
sbb
and
xor
dec
cmp
fnop
outsb
ficompl
rorb
testl
pop
xlat
sbb
cmp
rcl
adc
sbb
pop
jmp
loopne
or
cmc
inc
insl
jg
sub
adc
fmuls
xchg
dec
data16
xchg
cmc
lcall
sub
sbb
outsl
dec
dec
xchg
xchg
mov
cld
fidivrl
lods
or
sub
pop
stc
loopne
push
mov
stos
lret
inc
add
in
and
frstor
std
sbb
aas
xchg
push
mov
sahf
decb
lret
xor
lods
es
mov
jno
movsl
adc
aas
loope
fldcw
repnz
mov
cmp
pop
out
push
or
push
sub
xchg
ljmp
outsl
push
lods
stos
cmp
sbb
mov
arpl
push
adc
insl
int3
and
or
mov
mov
stos
pop
test
fistps
pop
dec
jnp
cli
test
pop
xchg
add
pop
out
jmp
lret
sbb
adcl
and
xchg
xchg
mov
pop
iret
jb
popa
ja
cmp
mov
daa
jno
inc
cmpsl
push
notl
push
popf
and
popf
or
xchg
mov
fistl
adc
mov
in
push
repz
jno
jb
push
jle
inc
lret
hlt
aaa
and
and
mov
mov
adc
xchg
add
jbe
pop
repz
movsl
sub
push
movhps
into
sbb
aad
lds
cmpsb
insl
mov
adc
sbb
int3
sbb
or
cltd
cmpsl
xor
cltd
lock
aas
xchg
aas
or
lcall
jne
xchg
cmp
lds
scas
cld
inc
loope
inc
pusha
sahf
push
int3
movsl
adc
mov
loope
xchg
mov
dec
in
sbb
popf
mov
idivb
rorb
cmpsl
aas
push
leave
fcomps
divl
mulps
loope
das
push
mov
push
lahf
test
int
sbb
pop
push
mov
mov
cmc
xor
mov
in
scas
clc
rclb
test
sub
bound
int3
mov
xchg
mov
mov
arpl
jae
and
jne
pop
jmp
xor
ds
xor
xchg
outsb
std
enter
push
lret
push
out
imul
and
mov
xor
movsl
in
aam
xor
loopne
fdivs
sub
insb
inc
fcompl
lcall
sahf
dec
mov
bound
xor
push
fsubl
dec
mov
push
lods
mov
in
or
mov
sub
add
js
sub
adc
pop
rcrl
dec
testl
mov
ss
test
mov
xor
push
push
lret
and
int
aas
push
dec
push
loop
jns
leave
imul
divl
clc
dec
xor
jo
add
dec
and
xchg
xor
mov
sbb
sub
loope
shl
xor
test
lds
cmpsb
mov
ja
out
jp
scas
aaa
movsb
aaa
jbe
pop
or
ss
mov
inc
call
in
fs
xchg
lcall
fwait
shrb
push
add
push
cs
fmull
jl
jmp
pop
int3
dec
xchg
push
jb
push
shl
insl
fxch
sub
cmovs
test
inc
fisubs
adc
dec
jb
dec
mov
scas
adc
jo
lds
xchg
lcall
jne
fbstp
push
fmull
push
loope
xor
push
dec
insb
sbb
testl
stos
icebp
mov
imul
rol
cmc
repnz
out
sub
or
push
mov
sub
xlat
repnz
mov
lahf
mov
rcrb
fwait
mov
rcrb
lret
jbe
and
sub
dec
jns
mov
push
xor
scas
and
fistpll
lods
xor
jle
push
aam
mov
cmpsb
out
fldenv
inc
adc
inc
out
jae
sub
xor
subl
sub
mov
and
mov
imul
adc
mov
outsl
outsb
sahf
inc
jl
xchg
cmp
add
pop
sbb
pusha
leave
and
incl
sub
and
addb
int
cmpsl
xor
cmpsb
mov
xchg
incb
cltd
sbb
jb
dec
sub
pop
outsl
gs
fidivrl
sbb
lods
jbe
adc
sub
mov
xchg
add
in
mov
idivb
pop
sarb
aad
mov
hlt
shl
test
shrl
inc
xlat
lock
dec
push
lods
fsubrp
aad
rcl
xchg
adc
mov
adc
or
aas
ret
add
mov
les
rorl
push
sbb
xor
sub
jecxz
pop
arpl
outsw
cmpsl
jle
aas
dec
xor
js
out
xchg
lods
and
icebp
popa
mov
push
jb
xor
inc
leave
fdivs
iret
test
push
mov
adc
or
lods
jmp
push
ljmp
insl
sub
lods
inc
loop
push
sub
pop
or
lahf
lock
xor
in
xor
movsl
push
inc
jp
test
inc
ret
jae
cmp
or
fbstp
mov
int
je
mov
in
and
aad
test
mov
arpl
pop
adc
std
lods
xor
divb
inc
fadd
sbbl
out
cmpsb
adc
flds
push
sbb
je
xchg
add
pop
mov
test
inc
movsb
mov
pop
and
scas
mov
push
add
push
pop
cli
push
mov
cmp
jns
and
outsl
pop
inc
movsb
push
sbb
jle
cmpl
pop
iret
into
cmp
in
scas
pop
scas
test
jns
xor
cmp
xchg
cli
jnp
adc
jno
xor
jg
cltd
add
push
jp
xor
mov
subb
push
fwait
jg
and
sub
movsl
dec
cs
mov
sbb
jbe
mov
ja
addr16
or
fisubl
test
inc
out
jmp
xor
dec
loope
ret
pop
and
adc
push
call
sbb
ja
rcll
adc
mov
loopne
out
mov
jo
fbld
jg
mov
jp
out
add
mov
adc
ja
add
insl
or
pop
inc
sti
imul
movsl
cmp
cmp
lret
add
mov
xchg
sarl
or
mov
cs
push
ds
pusha
pop
xor
xchg
sbb
inc
mov
in
out
out
push
ja
and
inc
fwait
cmp
out
xchg
fmull
mov
and
out
xchg
call
xor
dec
loopne
outsb
popf
imul
pusha
aaa
sbb
jb,pt
cli
stc
push
adc
daa
data16
int3
gs
call
in
cmp
ljmp
fstpt
cmp
sbb
pop
and
dec
sbb
jp
push
mov
push
fyl2x
test
add
sti
mov
jmp
cmpsl
out
out
jmp
or
sbb
xor
xor
xchg
pop
push
mov
ret
add
leave
sub
mov
mov
stc
addb
nop
dec
std
ds
repnz
fcoms
xchg
mov
mov
mov
xlat
add
pop
in
sub
inc
pop
xor
or
dec
fldenv
adc
shl
mov
leave
fcoms
mov
bnd
jp
inc
jb
fcoml
xor
mov
fs
mov
cmpsl
mov
pop
mov
into
add
mov
enter
out
loope
iret
std
push
repnz
in
cmp
adcl
lret
call
jg
ds
pop
adc
addl
xchg
adc
adc
lods
dec
int3
mov
iret
ficompl
push
pop
movsl
cmp
gs
mov
add
aad
xor
lea
in
or
icebp
mov
daa
js
jnp
fmuls
xchg
test
fdivrs
std
lahf
nop
in
aad
inc
mov
pusha
pop
xchg
mov
in
sub
stos
mov
adc
push
jmp
lret
xor
rorl
clc
push
push
mov
fstps
mov
fdiv
xchg
bound
mov
jne
notl
scas
les
movsb
pop
in
and
xchg
pop
lret
mov
notb
push
sbb
dec
jb
aam
in
hlt
dec
fisttpl
fs
mov
cmp
ret
enter
jb
mov
ret
mov
inc
es
scas
xchg
xor
mov
sahf
lret
jb
shl
and
or
ficomps
mov
int3
sbbb
xlat
pop
and
stc
imul
jmp
loopne
and
jbe
pop
adc
cmp
mov
faddl
lods
imul
divb
mov
mov
inc
fsts
mov
pop
repnz
out
sbb
adc
mov
xchg
pop
int3
and
gs
clc
or
in
sbbl
cltd
sahf
jnp
jns
rclb
jg
ljmp
jb
pop
lahf
fsubr
sarb
jne
outsb
add
mov
jecxz
sub
sbb
lret
cmpl
or
es
test
cmc
inc
js
negb
xlat
mov
rclb
pop
mov
cmp
jbe
xchg
pop
pop
mov
std
cmpps
mov
repnz
frstor
aad
lods
jge
scas
scas
lret
stos
decb
jae
lcall
loope
push
mov
mov
fists
jecxz
scas
pop
adc
sub
test
jb
cmp
es
lock
rorb
push
loop
ds
jo
addr16
leave
cld
or
mov
adc
jb
ret
inc
fwait
xor
orb
inc
ss
push
lret
jb
sahf
pop
mov
and
and
pusha
popf
xor
mov
mov
out
push
dec
dec
adc
jno
sbb
das
into
sub
dec
clc
inc
jnp
sahf
inc
sub
xor
push
mov
in
inc
pusha
out
jecxz
xlat
jns
xor
cmpsb
sti
inc
or
ret
xchg
lret
cmpsl
int3
cmpsl
dec
faddl
mov
fbstp
push
dec
pop
xor
aad
fistpll
mov
xor
add
xchg
mov
dec
rol
gs
notl
roll
bound
cli
jmp
fistpl
pushf
fidivs
mov
pusha
inc
orl
xor
fwait
jns
fbstp
out
test
test
sub
addr16
imul
inc
loop
test
leave
xor
sbbb
or
adc
push
inc
sub
test
bound
sahf
pushf
insl
cs
fdivrs
push
pop
int3
lret
aad
addr16
test
push
es
dec
in
mov
jge
dec
imul
sub
decl
xor
jecxz
arpl
xor
testl
mov
jnp
int3
arpl
mov
push
es
xchg
addb
pushf
sub
enter
jge
cmp
xchg
in
and
jecxz
out
xchg
sub
pop
ds
mov
test
inc
push
cmp
ret
cmp
sti
xchg
xchg
daa
mov
sbb
mov
adc
dec
sbb
xchg
xlat
frstor
mov
lods
ret
jle
adc
jecxz
pushf
pop
sub
rcrl
sub
push
mov
mov
mov
inc
cmpsb
ljmp
pop
jg
aam
jnp
rorb
push
add
std
dec
shr
cltd
stos
pop
cmp
ss
cli
xor
jle
push
sbb
enter
mov
test
int3
xor
pop
dec
dec
mov
cltd
sub
sub
sbb
lds
int
push
lock
push
xchg
inc
movb
fisttpll
push
cmpsb
out
ja
testl
push
mov
add
adc
outsl
xchg
adc
add
mov
test
dec
mov
mov
call
xlat
xchg
sbb
cmp
and
adc
xchg
inc
mov
out
xchg
xchg
dec
lock
repz
mov
jp
xchg
fbstp
push
imul
stos
cmp
or
inc
and
mov
lock
xchg
iret
xor
into
pop
dec
ja
out
test
dec
sub
cs
or
fcmovne
lret
jg
lods
insb
sbb
lods
dec
addb
xlat
pop
fisubl
iret
adcl
test
or
pushf
cmp
push
pushf
int
jne
jmp
dec
leave
adc
and
in
fs
xchg
pop
and
fdivl
jl
fbld
sbb
rorl
mov
push
clc
jg
lea
test
xlat
lea
lret
inc
dec
pop
cltd
lret
jae
fpatan
sbb
add
mov
dec
xor
sub
and
test
xchg
lods
jno
xor
dec
cmp
lods
inc
cld
and
push
test
lret
push
cmpsb
pop
fdivs
mov
es
jmp
cmpl
dec
bound
loopne
aam
std
add
cmpsb
xor
jne
scas
arpl
and
push
in
popf
xor
dec
cwtl
add
adc
lds
pop
mov
pop
fldcw
cmp
divl
and
mov
aas
mov
xor
pop
loop
packuswb
mov
cmc
push
imull
imul
xchg
fsubs
mov
jbe
subb
adc
repnz
sub
push
mov
dec
lods
lcall
pop
push
out
test
inc
push
push
clc
pusha
dec
mov
int3
shl
push
insl
sub
mov
fiaddl
and
push
fidivrs
movsb
lret
pop
lret
push
inc
cpuid
lea
loope
xchg
div
pop
mov
push
imul
subb
push
sbb
lds
mov
popl
aas
add
jno
loope
or
dec
sub
out
mov
pop
mov
repz
popf
push
andl
movsb
imull
cmp
inc
std
xchg
pusha
rcrl
jp
dec
insb
add
mov
cmpsb
lret
ret
xlat
adc
scas
jg
test
sarb
push
or
pop
fldl
push
xchg
int
inc
jae
pop
xor
adc
mov
fldl
imulb
jo
sbb
test
mov
dec
sub
cmp
movsl
aad
and
mov
fcoms
add
push
sbb
gs
dec
inc
adc
jns
loope
ja
mov
rolb
push
pop
rcrb
mov
inc
add
ljmp
jge
and
cld
das
adc
sarl
add
cld
or
add
lret
out
sub
inc
enter
xor
adc
xor
add
cmp
add
adc
movsl
cmp
xlat
or
andb
scas
add
das
adc
inc
aas
into
pop
ljmp
imul
adcb
add
movd
jmp
or
xchg
clc
sbb
xchg
clc
bound
pop
sbb
shl
sbb
xchg
cltd
insb
dec
sbb
sub
repz
nop
stos
fldcw
repnz
or
stos
jge
mov
leave
mov
sti
mov
lods
jmp
sub
call
inc
mov
mov
xchg
cmp
jb
mov
test
jns
nop
sti
mov
mov
mov
jecxz
add
or
mov
stc
je
pop
pusha
daa
fsts
stos
add
stos
idivb
and
adc
inc
shlb
cmpsl
adc
or
ja
dec
pop
out
xor
out
cmp
inc
sahf
mov
pop
push
rol
inc
clc
div
pushf
imul
mov
jne
lock
mov
mov
shll
ja
subl
sub
ja
mov
fnsave
into
push
and
neg
rclb
cmpsl
out
stos
mov
mov
out
fimuls
jns
mov
movsb
jle
test
xchg
inc
inc
push
or
mov
orl
outsb
add
push
jecxz
in
daa
jp
test
sbbl
aaa
stos
movsl
lcall
mov
frstor
cmp
in
std
xor
push
mov
stc
mov
movsb
mov
adc
mov
mov
jnp
xor
in
std
mov
mov
inc
sbb
xchg
repz
pop
sub
pop
jle
icebp
lahf
dec
fdivrl
and
sub
add
inc
jp
out
inc
cmpsl
dec
xchg
les
mov
xchg
sub
add
sbb
mov
xor
shl
push
mov
cs
or
mov
in
je
mov
xchg
cmp
push
insb
rorl
ja
fs
jns
sub
jle
lea
cmp
push
lods
push
xchg
xchg
hlt
and
cmpsl
dec
dec
in
dec
popl
lock
cmp
pushf
jg
dec
clc
jb
sub
adc
pop
insb
xor
add
add
pop
jmp
je
cwtl
or
push
insl
sbb
fimull
mov
xor
jnp
mov
and
aad
test
sahf
mov
jb
arpl
jmp
mov
std
pop
ss
cmc
ss
ja
push
stos
je
pop
xchg
scas
fists
loopne
roll
xlat
icebp
gs
inc
rcll
and
jns
jno
faddp
mov
gs
xchg
xchg
in
mov
ret
les
lret
pop
pop
cmp
dec
sub
jno
cmp
and
cmpsl
test
lods
pop
jae
mov
leave
push
push
inc
test
pop
lds
int3
std
inc
movsb
mov
adc
dec
dec
bound
mov
pop
lock
xchg
adc
or
mov
sbb
dec
pop
or
xchg
cs
xor
dec
cmp
inc
push
popa
xchg
sbb
push
aam
push
pop
clc
cmpsl
mov
adc
xlat
jp
lock
sub
or
push
dec
mov
cmpb
pushf
jo
cmpsl
xchg
xchg
imul
out
xchg
lret
push
pop
imul
push
sahf
and
pop
push
ds
cltd
fs
dec
shll
mull
sbb
in
lahf
cwtl
gs
fmul
es
add
mov
lahf
xor
lds
dec
sub
cmp
xchg
ret
arpl
inc
jo
dec
push
fstps
fidivrs
add
pop
pusha
mov
addr16
sti
pushf
pusha
jge
rcrl
sbb
repz
xlat
loopne
gs
mov
les
mov
dec
loop
sub
imul
out
mov
mov
push
lahf
sub
cmp
ret
xlat
or
lea
sub
filds
jmp
mov
es
fnstenv
sub
iret
mov
add
dec
and
call
sti
rcll
movsl
jl
sbbb
add
hlt
stos
lock
test
jmp
jp
mov
inc
jae
cmp
jns
mov
push
xchg
bound
loopne
jge
add
lods
sahf
sahf
adc
jnp
movsb
lods
cmc
mov
ja
call
cltd
loopne
mov
sub
sbb
mov
bound
sbb
jns
and
cmp
cld
xchg
xor
fistps
sub
jecxz
ljmp
add
lods
inc
inc
popa
inc
lahf
daa
dec
or
mov
addb
sahf
lret
lock
cmp
shrl
mov
sub
jl
andl
aam
fs
push
cmpsl
out
inc
lods
aad
fimuls
loope
inc
mov
movsl
in
stos
mov
mov
mov
cltd
add
jbe
push
and
cs
insl
sbb
dec
pop
test
fcoml
mov
in
push
cmp
xchg
and
ja
mov
ds
mov
adc
lock
mov
in
std
outsb
mov
mov
or
mov
pop
inc
in
cmc
jg
add
push
les
decb
mov
addb
popa
movl
pop
mov
andb
fcomps
inc
jb
out
adc
addr16
mov
test
mov
xchg
stos
inc
xor
jo
mov
xchg
sti
aas
imull
cmp
xchg
cli
push
xlat
lret
cmp
sub
aad
jle
sarl
clc
arpl
sbb
or
jae,pn
xchg
cltd
mov
imul
mov
jle
or
adc
dec
cwtl
inc
cmp
fs
dec
add
push
add
add
dec
shlb
into
push
jne
incb
js
pop
mov
pop
idiv
test
enter
pop
sub
popa
jb
les
mov
imul
sbb
test
jle
shll
pop
and
mov
fcoms
leave
push
aaa
mov
mov
rcr
mov
add
jne
outsb
iret
pop
mov
cmp
xchg
push
add
lea
mov
clc
sti
and
adc
jmp
jp
jmp
push
sub
shl
dec
negl
sub
lea
xor
push
arpl
mov
movsl
aaa
sbb
int
or
lods
pop
sub
leave
test
cmc
loop
mov
inc
cli
pusha
insl
mov
xlat
pop
inc
adc
lahf
dec
xor
mov
enter
movsb
roll
adc
cltd
idivl
push
jmp
lods
lds
jle
leave
pop
inc
mov
sti
fmul
xor
mov
aaa
push
inc
or
jo
and
mov
aas
cmp
push
in
adc
and
mov
icebp
jmp
repz
outsb
out
fsubrs
sbb
sub
push
mov
int
cmp
es
cmpsb
ss
popf
sub
add
scas
in
cmp
pop
test
lcall
fwait
xor
push
call
dec
in
fldl
dec
cmp
add
stos
fnstenv
sbb
xlat
jp
negl
je
fcmovne
xchg
push
dec
movsb
insb
in
out
sbb
dec
pop
in
dec
faddp
loopne
cmpsl
in
std
fmuls
sub
out
sbbb
or
xchg
push
mov
dec
gs
ss
mov
mulb
or
and
shlw
lock
das
push
stos
insl
add
das
fnsave
jge
inc
arpl
lods
clc
lds
xor
cwtl
push
sahf
adc
aam
into
repnz
mov
and
lea
inc
sbb
inc
pop
outsb
aad
test
cmp
inc
inc
dec
mov
xchg
jle
jmp
add
pop
gs
jp
push
pushf
decb
push
jmp
test
jl
fsub
xchg
sub
jle
cmc
jg
sbb
aad
jns
sbbb
cmc
jg
das
cmp
xor
cmp
mov
getsec
repz
sbb
rolb
addr16
mov
xor
cmp
dec
add
dec
jecxz
shll
shlb
sbb
pop
dec
pop
add
mov
jo
mov
ficompl
sub
cmp
pusha
movsl
loopne
xchg
mov
orb
cs
imul
sbb
icebp
movsl
push
nop
xchg
adc
jns
aas
mov
imul
fwait
sub
add
mov
xchg
or
rcll
inc
push
mov
xchg
mov
sub
in
pop
pop
push
in
and
mov
fld
data16
pop
fnstcw
push
gs
in
mov
insb
jle
and
jmp
cmp
or
pop
inc
fidivl
fiadds
and
push
jne
frstor
sbb
xor
adc
sbbl
aas
or
xchg
pop
daa
adc
mov
fs
or
fmull
shrl
sbb
and
loop
int3
int3
cmp
pop
shrl
sahf
imul
fimull
pop
lahf
pop
mov
mov
dec
out
xchg
cs
adc
imul
and
xor
out
data16
inc
lret
cmp
movsb
rcrl
cltd
std
daa
push
mov
jnp
inc
ja
iret
imul
in
jp
movsl
inc
lret
mov
jno
mov
test
arpl
or
sbb
pop
cs
js
shrl
xchg
add
sub
insl
out
xchg
push
icebp
inc
sbb
sub
cmpsl
aas
push
jp
ret
ljmp
jns
mov
ret
add
dec
xor
inc
pop
out
xlat
xchg
jl
lret
ficompl
movswl
test
inc
pusha
loop
mov
scas
or
inc
orl
cwtl
scas
movsl
sub
test
lahf
dec
icebp
sbb
mov
cmc
add
daa
pusha
insb
fbld
or
push
loop
xlat
adc
loopne
ffree
pop
cld
icebp
aad
mov
fidivs
leave
adc
dec
mov
inc
clc
mov
jmp
addr16
xchg
mov
lret
shrb
push
scas
mov
fisubl
adcb
lret
cli
push
mov
loope
movzbl
inc
and
push
mov
xchg
dec
out
jecxz
aam
jmp
adc
xchg
xchg
in
add
jge
loop
push
push
arpl
sbb
mov
mov
mov
pop
cmpsb
sbb
and
imul
aaa
lahf
push
xchg
and
mov
xor
test
or
pop
xchg
sub
test
test
shrb
fdivr
incl
or
fisubrs
daa
clc
addr16
mov
cli
xchg
jmp
dec
sahf
lods
add
cld
nop
inc
jne
and
fwait
or
xchg
add
adc
repz
or
daa
mov
roll
dec
cmp
rorl
jg
jecxz
mov
mov
std
xchg
mov
fiaddl
adc
cmpsb
pop
and
pop
xchg
jb
or
in
mov
cli
test
popa
add
stos
push
pop
testb
or
mov
into
xor
push
add
lods
leave
mov
iret
data16
pop
icebp
jno
test
arpl
aas
test
inc
ret
xor
jge
add
das
sti
inc
inc
lds
je
lret
jb
dec
out
lret
out
push
call
jnp
repnz
test
shl
mov
pop
push
fcoml
dec
mov
sbb
pop
loope
mov
scas
add
dec
lea
dec
out
repz
and
push
data16
and
rcll
repz
xor
sti
mulb
mov
lock
aad
jecxz
inc
xchg
add
jle
pop
daa
lea
ret
pusha
lret
aas
sub
jbe
out
jmp
sbb
mov
cmp
inc
pusha
mov
push
lock
cltd
sbb
stos
jmp
and
jb
jb
cltd
sub
ljmp
pushf
scas
iret
cmpsb
in
jmp
or
mov
rcr
imul
cmp
hlt
repz
popa
and
imul
scas
mov
or
scas
push
or
or
push
cs
rcl
mov
cmpsb
inc
std
pop
data16
int
shll
out
ja
ss
int
addr16
shlb
inc
lds
repz
push
mov
dec
sbb
add
data16
mov
adc
and
std
popa
es
mov
push
mov
push
add
mov
inc
sub
fiaddl
fwait
inc
cli
and
frstor
jp
aaa
pusha
jae
pop
dec
lods
sahf
sbb
push
sarl
or
mov
stos
dec
mov
loop
cli
and
aam
cmc
jo
lea
add
push
sar
idivb
dec
in
lds
lret
inc
fnstsw
push
lods
push
sahf
lret
sub
sub
ret
outsl
and
inc
cld
shrb
repnz
inc
mov
int
testl
jle
add
aas
popl
sti
sbb
cmp
dec
stos
scas
xchg
xor
les
pop
push
movsb
jmp
push
and
push
scas
xchg
out
xchg
mov
mov
sbb
fmul
or
pop
cltd
inc
push
sub
mov
scas
popl
addr16
sub
das
fisubl
leave
xchg
out
dec
int
jp
jge
faddl
inc
bound
insl
pop
aad
mov
flds
repz
in
out
in
rcr
cmp
aad
inc
cld
xchg
ja
inc
es
das
out
in
aas
fcompl
loop
push
ljmp
ljmp
mov
inc
xchg
pop
dec
repnz
or
test
insb
mov
js
addb
sub
stos
fisttpll
rorb
lea
inc
push
mov
inc
lret
sahf
sub
xor
pop
cmp
out
xlat
outsb
sub
enter
and
jno
xor
inc
out
adc
inc
jnp
out
aas
mov
sbb
or
mov
cwtl
test
hlt
jnp
pop
jg
pop
or
fcoms
xchg
add
push
mov
ds
sbbl
push
sbb
sahf
and
mov
and
cld
or
xor
int3
outsl
fwait
mov
cmpsl
xor
testb
stos
xchg
sahf
addr16
insb
add
sub
mov
cmp
push
mov
jno
sub
and
mov
out
mov
push
imul
das
xor
pusha
les
adc
daa
repz
popf
aaa
pop
lcall
je
imul
cmpb
ret
ret
mov
mov
mov
xchg
xchg
nop
arpl
ficomps
mov
or
aam
xchg
insl
add
add
push
aaa
shrb
jp
outsb
scas
jae
mov
jge
fisubrl
lea
sti
fwait
xor
lods
pop
cmp
lret
imul
out
ja
xchg
fisubs
imull
fs
dec
dec
jle
dec
lods
rcl
insb
aad
adc
pop
rcr
loop
inc
aas
push
pop
je
sarl
add
in
cld
sub
dec
pop
mov
stos
nop
testb
and
and
mov
aam
inc
je
lcall
mov
aaa
push
imul
dec
xor
insl
imul
and
hlt
fs
jb
mov
pop
xchg
pop
insb
cli
daa
fbld
leave
adc
out
or
gs
xor
ja
cld
outsl
aaa
test
push
pop
stos
lods
adc
sub
cltd
adc
mov
insb
idivb
ret
outsl
lea
and
xor
xor
jo
mov
mov
xchg
jle
out
mov
jp
int
testl
mov
xor
xor
dec
cmpsb
push
mov
sbb
ds
call
imul
jmp
mov
mov
cs
jnp
pushf
sti
divb
jecxz
dec
movsb
sub
adcl
push
into
jns
fistpll
mov
pop
rclb
outsb
jl
mov
mov
aad
out
xlat
xchg
imul
add
iret
sub
cltd
and
data16
lods
push
mov
mov
ret
jno
cmpsl
or
sbb
pop
in
cmp
aad
stc
and
xchg
je
jo
fs
movsl
mov
jge
jmp
addl
xchg
das
fwait
int3
mov
ljmp
and
std
push
inc
das
rcrb
jae
xor
push
and
cmpsl
or
inc
jle
and
pop
cwtl
mov
int3
xchg
push
adc
mov
fnsave
js
mov
mov
and
or
lahf
ss
scas
sbb
loope
lods
mov
xchg
das
aam
popa
mov
jmp
sub
mov
push
cmovne
jb
or
adc
xlat
push
shrl
jo
push
mull
rcll
add
subl
mov
femms
or
mov
pushf
mov
mov
fnsave
xlat
cmp
call
cmc
adc
push
jp
shlb
dec
ds
jnp
jmp
in
lcall
cltd
xchg
hlt
xor
insl
sub
mov
ss
in
pop
pop
dec
lods
ds
pop
mov
es
jecxz
ljmp
pop
mov
sub
jp
lret
in
test
pop
or
pop
outsb
lods
aam
push
sbbl
dec
daa
push
sub
xchg
movsb
cmpsl
pop
jge
xchg
scas
sub
jle
jle
jnp
mov
icebp
adc
mov
xchg
icebp
jno
push
and
mov
ja
xor
arpl
imulb
jg
jne
adcl
lea
cli
negb
in
cmp
push
nop
rcrb
imul
jne
cs
hlt
jb
push
test
stos
repnz
out
das
adc
lock
je
sti
cli
test
mov
pop
in
pop
cmp
and
je
ret
mov
xchg
push
pop
push
fadds
xchg
ret
loop
or
jb
sbb
or
push
lock
push
jl
cmpb
push
sahf
cmc
iret
aam
sub
fists
inc
inc
inc
sbbl
mov
loope
xchg
adc
sbb
std
mov
sub
add
jne
pop
vmovss
push
push
adc
dec
repnz
add
add
xor
gs
data16
sbb
sub
mov
dec
xor
xchg
add
adcb
lcall
in
test
rorl
mov
outsl
jae
in
cmp
inc
sti
int
repnz
push
ss
dec
sub
gs
je
loope
out
dec
cmpsl
mov
mov
sbb
sub
xchg
mov
out
mov
sbb
push
repnz
sti
push
test
adc
std
sbbb
mov
filds
mov
or
jmp
sbb
pop
iret
or
lret
push
into
lret
in
pusha
icebp
push
enter
sti
push
dec
cmp
jo
inc
xchg
outsl
xchg
xchg
ljmp
push
cmc
enter
insl
push
sti
push
iret
jne
ja
lock
mov
movsb
ret
mov
sub
fnstenv
and
cmp
test
jle
and
sub
fsubp
cmp
lods
xchg
imul
push
mov
pop
std
insb
lods
jns
das
xchg
fcoml
mov
fcmovb
sbb
pop
jmp
pop
xchg
movsl
mov
pop
movsb
mov
es
cmp
xor
jne
cld
lock
mov
fwait
shrl
jb
out
mov
les
mov
shrb
rclb
fidivs
push
adc
mov
or
jo
pop
mov
iret
loope
add
mov
inc
into
jmp
aad
mov
lock
adc
mov
xchg
and
mov
adc
loope
into
lea
out
and
mov
sbb
mov
push
lods
lds
jecxz
rcrl
mov
js
add
fdivrl
or
jnp
pushf
xor
loopne
das
test
aam
push
xor
in
test
mov
cmp
aam
xor
aam
je
lcall
inc
push
or
pop
mov
flds
shr
inc
ds
mov
dec
mov
movsl
movsl
imulb
out
inc
insb
lds
loopne
mov
lret
insl
or
lahf
mov
push
adc
adcl
mov
dec
mov
xchg
xorb
movsb
aam
in
sbb
dec
cmp
dec
popa
mov
push
cmpsb
mov
fnstsw
adc
push
mov
bound
jbe
daa
outsl
pushl
push
shlb
in
xchg
mov
shll
push
mov
cmp
push
mov
sub
adc
scas
ljmp
pushf
pop
stos
loope
xchg
jmp
cmc
lahf
mov
inc
jo
lahf
sub
xor
mov
sub
mov
push
pushf
push
pushf
jmp
xor
push
push
add
leave
movsb
inc
test
inc
divb
cmp
xchg
sbb
xor
lea
test
and
xchg
mov
cmp
orb
inc
pusha
add
and
jne
adc
cmp
cli
test
out
add
inc
dec
in
outsb
fisttpll
loop
cmp
sahf
dec
jge
push
jmp
out
in
int3
pop
int
jp
jmp
push
xchg
inc
mov
lret
mov
bound
bound
adc
test
jns
mov
clc
mov
imul
pop
mov
jle
jl
dec
pop
out
nop
pop
xlat
insl
mov
xor
addr16
cltd
das
aad
xor
jns
cld
mov
lods
mov
and
push
sbbl
adc
iret
cltd
mov
mov
jne
insb
sbb
inc
aad
or
int
bound
jp
jbe
out
pop
cmp
fidivs
lds
pop
outsl
jg
out
or
jne
push
add
add
stos
ret
shll
js
movsl
mov
xchg
pop
ds
mov
ret
enter
push
inc
dec
cmpsb
std
jb
outsb
push
into
shll
mov
pushf
cmp
xchg
xchg
pop
movsl
divb
inc
dec
outsl
and
jno
mov
ret
js
xor
sub
mov
test
in
jmp
ss
nop
mov
ljmp
jo
jae
pusha
mov
into
test
fs
push
scas
loope
cmp
iret
testl
mov
or
cwtl
es
jmp
jle
cmp
nop
pop
fsubr
dec
shl
lret
xor
push
mov
fdivl
sbb
or
fbstp
cltd
cli
adc
mov
mov
jb
mov
fldl
mov
mov
orl
pusha
xchg
inc
fwait
cs
pop
pushf
popf
xor
rcrb
js
add
and
sbb
sub
push
stos
leave
xchg
scas
fcmove
and
iret
sbb
lret
mov
popf
dec
ret
test
xchg
push
xor
mov
sub
sub
loopne
fs
sbb
das
ror
cmpsl
push
add
mov
mov
aad
cmp
ret
jno
ss
xlat
insl
insb
xlat
fmulp
ret
add
mov
jo
rclb
mov
mov
inc
cmp
sbb
add
sti
xchg
mov
fnstcw
rcrb
cmpsb
dec
nop
loop
cmp
gs
pop
push
in
mov
test
jno
inc
sub
inc
push
jns
xor
mov
push
sti
sbb
aas
inc
sbb
mov
add
jnp
add
in
loope
inc
pop
test
outsb
ret
ret
icebp
mov
movsl
mov
clc
repnz
inc
outsl
push
jb
push
in
push
aaa
jg
push
lock
mov
mov
scas
cmc
mov
mov
add
add
es
jb
stos
xchg
ret
ret
ret
sub
cs
pop
in
xor
bound
push
loopne
movsb
mov
sbb
pop
repnz
cwtl
pop
shrl
or
shlb
icebp
sub
cmp
mov
lods
outsb
adc
dec
leave
cmpsb
fucom
fildl
outsl
out
incb
outsl
or
es
add
out
sahf
and
inc
fildl
push
in
sbb
lods
je
push
addr16
adc
js
cmpsb
inc
data16
scas
cmp
in
filds
fmul
out
cmc
push
or
sbb
aad
jg
xlat
scas
test
and
adc
xchg
cmp
sbb
fsubrl
mov
in
add
test
rcl
lcall
and
sarb
mov
jmp
push
out
cmp
cwtl
xor
jns
mov
test
fwait
or
push
scas
sti
movsb
pop
jle
ds
jne
xor
dec
push
adc
and
mov
and
test
xchg
adc
outsb
mov
inc
pop
or
lcall
jb
push
lock
and
mov
gs
out
push
sbb
in
sbb
imul
aad
arpl
scas
jp
shlb
xor
arpl
cwtl
rorl
sarb
inc
fs
or
sbb
aas
adc
jl
incb
mov
fisttpl
adc
xor
and
idivl
int
fsin
lahf
insl
pushf
lds
fistl
sub
and
enter
dec
mov
gs
mov
and
jle
js
xor
sbb
sbb
daa
fwait
mov
insb
mov
mov
xor
mov
lods
cmpsb
jp
xor
pop
fwait
arpl
mov
fs
nop
mov
or
or
int
pop
xorb
movsl
je
sub
and
mov
mov
aas
not
sub
cmp
push
call
fldcw
mov
mov
xor
out
jne
nop
jg
sbb
fildl
cmpsl
jmp
pop
sub
xchg
pop
lds
mov
mov
addb
out
into
fcompl
inc
shlb
addr16
push
leave
in
in
arpl
leave
push
call
adc
mov
ljmp
inc
test
push
pop
cmp
int
mov
shll
enter
lcall
mov
fucomp
cltd
push
aad
cmp
push
sti
pop
and
out
es
adc
mov
dec
add
inc
loope
add
push
adc
cmc
push
lcall
push
mov
repnz
subb
cmp
lret
push
in
test
mov
lods
mov
sub
xchg
adc
push
xchg
cwtl
push
or
lods
mov
or
out
xchg
sub
xchg
adc
cmp
jmp
mov
push
fst
add
jno
rcl
lahf
insb
orl
adc
or
jl
pushf
push
or
std
xchg
xor
xchg
sub
jno
mov
clc
or
pop
and
mul
out
les
mov
inc
push
jle
insl
jecxz
xlat
push
sti
lock
and
jl
mov
cli
pushf
out
dec
lret
fdivrs
and
mov
arpl
xchg
stc
mov
fs
mov
add
adc
push
stos
inc
xchg
cltd
repnz
sti
movsl
mov
mov
and
les
lods
mov
ret
ja
push
lea
lock
push
sbb
mov
push
shll
inc
cmp
xchg
in
insb
cltd
cmp
fnstsw
push
pop
fildll
sbb
inc
dec
mov
ficoms
push
filds
call
cmp
adc
adc
jns
test
shr
pshufw
ret
cmc
lods
pop
ficoms
push
mov
push
sub
sbb
out
sbb
out
imul
cmp
xchg
sub
push
mov
mov
cmp
cltd
orb
mov
std
lret
shrb
fs
xchg
je
sbb
cmp
scas
add
ds
adc
push
repnz
lret
fsubr
pop
add
pop
repnz
std
and
pop
adc
ret
jnp
lds
sub
cmc
push
mov
mov
les
cmpsb
or
imul
pop
in
sarb
xchg
mov
outsb
sti
or
shl
lock
xchg
int
test
jmp
sbb
ret
aaa
pop
imul
add
lods
lcall
std
push
imul
imul
fcmovnb
gs
jmp
xor
cld
lods
cmp
xchg
aas
vmovd
sbb
xor
fisttps
int
cmp
jo
mov
loopne
add
mov
pop
sub
jno
mov
das
bound
sbb
das
cmp
ds
push
jmp
lea
sbb
test
pop
jnp
clc
jecxz
pop
jae
mov
lahf
daa
cli
rorb
pop
sbb
push
sahf
ljmp
rorl
scas
mov
stos
mov
lods
mov
push
ftst
push
iret
outsb
mov
pop
scas
into
loop
test
mov
xchg
mov
sub
add
out
fs
mov
or
push
int3
in
ja
stc
mov
scas
std
insb
or
subl
xchg
lods
sub
push
push
or
outsl
or
mov
inc
shlb
dec
xlat
mov
out
push
adc
push
sbb
lods
dec
cmp
addb
mov
test
cmp
sbb
jmp
dec
jmp
dec
out
xchg
inc
sbb
insl
add
mov
mov
in
in
inc
in
xchg
xor
xchg
inc
add
sti
clc
adc
xchg
sbb
push
scas
lret
insl
sub
adc
push
sub
lods
jl
push
jg
rclb
sub
xor
jnp
mov
ror
leave
mov
adc
test
pslld
ss
in
shl
push
push
ds
pushf
mov
add
xlat
test
mov
push
mov
lcall
cwtl
sub
mov
lcall
adc
xchg
sbbb
mov
push
fld
sti
push
jg
mov
lock
scas
mov
icebp
testl
xlat
nop
mov
xchg
mov
fucom
xor
mov
fs
sbb
clc
and
push
mov
mov
repz
sbb
dec
jg
lret
cwtl
les
inc
in
or
fwait
lods
loope
add
das
push
mov
pop
xor
xor
or
mov
fiaddl
xchg
insl
and
int
das
xchg
insl
mov
pusha
inc
push
push
ret
pop
lret
xor
dec
orb
mov
or
cmp
dec
fildll
add
lret
cmp
cmp
and
mov
push
shlb
subl
adc
cmp
dec
dec
fisubl
jecxz
sbb
enter
das
mov
add
add
inc
jo
xchg
rcll
xor
pop
add
pop
sub
lock
sbb
cld
dec
loope
xchg
or
xchg
inc
push
cld
cmp
ljmp
pusha
xchg
ja
imul
stos
lds
add
cwtl
movsb
cltd
insb
popa
lret
sbbl
jne
or
ficoml
xchg
sbb
pushf
lahf
mov
mov
fbstp
xchg
and
fldt
pop
cmpsl
fstps
pop
ret
jno
xchg
repnz
cmpsb
xor
test
adc
fisttpl
fs
inc
pop
imull
jmp
pusha
int3
lret
aam
dec
int
dec
and
rsqrtps
lds
into
xchg
add
shrb
mov
cmp
insl
mov
sahf
sbb
loope
mov
add
pop
push
mov
jle
int
test
cmpsb
pop
fs
mov
lea
xlat
in
dec
inc
testb
and
and
push
inc
mov
loope
inc
pop
scas
sub
sti
mov
fnstsw
inc
rcrl
xor
pushf
fs
inc
dec
dec
inc
aaa
mov
rcr
rorl
leave
and
imul
aas
ds
int
mov
lds
pop
std
dec
and
not
xchg
dec
repz
daa
sub
or
pop
adc
ss
push
ljmp
pop
and
sti
loop
aaa
sarb
xchg
mov
les
jns
testl
js
push
out
icebp
xchg
lock
inc
add
fwait
ss
mov
aad
ss
cmc
mov
cld
popa
push
test
cli
jne
push
xchg
pop
icebp
ret
xor
and
int
mov
sub
cmovs
mov
jne
repz
lahf
ss
mov
inc
inc
hlt
pop
std
std
shr
jb
mov
std
adc
rcrl
dec
sub
add
sbb
and
mov
inc
inc
push
movsb
xchg
inc
fadd
shl
mov
lret
sbb
cmp
cmp
pop
sbb
adc
pop
mov
xor
push
or
loopne
mov
jo
cmp
inc
push
fnstsw
pusha
xchg
outsl
fwait
leave
mov
push
dec
fsubl
dec
call
push
mov
mov
fcmovu
outsl
pushf
loop
sub
mov
mov
leave
mov
jp
repnz
cmp
add
int
outsl
sarb
out
mov
jae
lea
clc
sahf
arpl
xor
or
dec
es
pop
insl
sub
inc
or
in
call
sub
pop
cmp
or
sub
xor
mov
leave
lock
sbb
test
sbb
ret
cmp
sbb
inc
js
fcmovb
jl
imul
pop
adc
inc
push
cmp
inc
pushf
push
fsubr
aaa
dec
inc
inc
ss
adc
in
dec
xchg
mov
mov
cmp
or
jg
rorb
xchg
pop
push
jecxz
imul
outsl
add
rcl
aam
mov
cmp
mov
xor
xor
jmp
icebp
xchg
add
jb
sbb
inc
push
outsl
push
push
cmp
and
adc
inc
mov
cmp
insl
adc
sub
fsubl
jmp
adc
lret
jnp
rol
repnz
sub
bound
sbb
jbe
aam
in
mov
mov
arpl
lea
leave
adc
mov
add
xchg
sub
call
out
cmc
push
mov
test
adc
test
lret
xchg
pop
aas
cmc
iret
in
push
fnsave
mov
fwait
lcall
pop
popf
repnz
movsl
pop
je
insl
std
xchg
insl
jge
ret
iret
enter
cld
xchg
hlt
sbb
and
xchg
cmp
xor
and
cmpsl
and
push
dec
adc
and
xchg
or
pop
push
mov
cmp
mov
push
loopne
inc
mov
bound
xchg
dec
test
mov
arpl
mov
ljmp
movsl
cmp
jae
rorl
inc
mov
div
cmpsl
sbbb
insb
fisubrs
pop
mov
xchg
in
pop
add
mov
stos
sbb
dec
and
sbb
inc
aam
xor
xor
out
jbe
cmc
cmp
lcall
cwtl
cmc
imul
cmp
and
insl
cmc
mov
add
pop
std
pop
mov
int
loop
mov
loope
pop
sub
sbbl
xchg
adc
inc
ljmp
cmp
add
pop
adc
xlat
hlt
mov
scas
hlt
loopne
fimuls
pusha
cmc
pop
xchg
sbb
hlt
lds
pop
sub
sub
jno
lds
les
ret
daa
jne
xchg
int
jmp
mov
out
test
push
sub
mov
loop
sar
xchg
push
sti
inc
dec
inc
jmp
add
cmp
and
push
popa
hlt
out
add
pop
jno
stos
pop
stc
aam
push
int
ret
out
sbb
in
sub
xor
xchg
loop
ret
or
add
es
negb
insl
mov
sti
jge
dec
inc
fdivrl
and
pop
fcomp
in
or
inc
mov
stos
mov
outsb
pop
lahf
mov
mov
xor
sbb
jge
inc
mov
push
and
out
mov
fwait
dec
fsubr
icebp
clc
sbb
sub
dec
movsb
mov
stos
jne
xchg
cmpsl
dec
sbb
call
iret
mov
push
sbb
jl
mov
dec
push
test
mov
xlat
repz
mov
loop
xchg
retw
inc
cltd
pop
jne
sub
inc
pop
xchg
dec
movsl
jmp
sub
jl
cmp
jae
xlat
out
mov
sub
mov
add
push
mov
jbe
gs
popf
mov
ds
test
lds
pop
push
out
test
jne
push
mov
mov
cld
mov
and
repz
sub
adc
pop
pop
cld
mov
push
fimull
sarl
mov
je
lock
jns
lock
mov
mov
add
pop
mov
jnp
xor
lds
xchg
andb
add
ret
out
pop
pop
dec
dec
jo,pt
mov
ss
inc
xchg
rcll
adc
adc
jne
pop
push
rolb
test
loope
xor
cmp
inc
xor
mov
cld
xchg
inc
pop
testl
xor
push
push
insl
lea
xor
mov
out
ds
and
dec
sbb
push
xor
push
mov
cs
mov
pop
dec
push
sahf
xor
loope
cmp
add
shrb
aad
pushf
ss
or
xor
mov
xlat
mov
push
iret
and
mov
inc
fwait
pop
daa
inc
jle
imul
pusha
ret
jns
movl
incb
cmpsb
rcll
mov
jle
mov
pop
daa
stos
jg
push
inc
pop
outsb
dec
and
test
sub
push
dec
nop
inc
je
movsb
mov
push
push
arpl
dec
int3
pushl
sub
lock
cwtl
mov
cltd
mov
or
lods
repnz
repz
imul
lret
or
add
mov
repnz
jecxz
notl
sbbl
mov
push
sbb
shll
jne
sub
jb
cld
pop
add
ret
inc
clc
sahf
lock
mov
enter
push
test
mov
or
and
jg
ret
out
mov
sub
je
mov
cli
sbb
sub
lret
xchg
ror
mov
dec
rclb
push
jbe
jo
push
stos
test
sub
hlt
mov
dec
adc
cmc
fidivrs
loope
out
mov
cli
jo
rol
insl
cld
aad
pop
pop
and
and
dec
and
es
push
cmpb
pop
or
lods
inc
sbb
fadd
jle
lahf
sbb
test
and
mov
mov
dec
cmc
mov
testl
bound
jne
mov
cld
fstl
jp
fimull
adc
xor
mov
cmp
testl
and
out
shlb
adc
jno
sub
dec
and
lahf
insl
seto
xlat
cmp
push
aad
js
sarb
call
out
cmp
sub
fldenv
repz
mov
push
inc
das
cmp
outsl
push
or
push
inc
dec
adc
xchg
rclb
pop
dec
adc
push
mov
std
cli
xor
fsubs
mov
out
lock
sbb
xor
ja
in
aam
data16
adc
push
mov
popa
pop
jp
mov
push
fdivs
mov
cmpsl
cmp
sti
rol
xor
pop
inc
in
in
jg
push
cmp
xor
mov
adc
inc
push
lods
test
and
adc
cmpsl
jnp
mov
sahf
dec
rcrb
add
movsl
cmp
xchg
jns
shl
jne
pop
mov
pop
add
cmp
pop
ret
bound
inc
adc
and
xor
pop
outsb
push
popa
lret
jns
ljmp
lock
and
into
loop
pop
out
stos
ds
pop
add
mov
cmovs
aas
mov
jno
mov
in
cli
mov
imul
push
into
push
jle
mov
imul
fcmovu
jns
add
xchg
xlat
hlt
dec
iret
arpl
dec
fstl
xchg
xor
pop
fsubrp
out
shr
aad
jnp
pcmpgtw
inc
test
and
aaa
adc
xor
xchg
mov
jne
popa
fwait
xlat
pusha
sti
rol
mov
arpl
cmpb
mov
push
dec
xchg
inc
adc
das
jb
add
rorl
loopne
push
out
or
jo
cmp
ss
cmp
lcall
mov
lret
out
sub
dec
add
push
lds
jle
cli
xchg
xchg
dec
fsts
sbb
push
lods
outsl
or
sub
pop
out
nop
add
mov
mov
std
and
xchg
js
lret
mov
test
loopne
sub
dec
push
bound
push
icebp
pusha
jo
add
insl
pop
repz
rolb
std
iret
fsts
pop
or
cmp
sub
xchg
sbb
xor
or
aad
mov
xchg
mov
outsl
fsubr
push
scas
jl
and
fwait
xchg
notb
sarl
push
jo
mov
cmp
push
sti
jbe
cmp
sbb
cld
mov
adc
into
or
lret
les
movsb
mov
mov
jne
repnz
mov
adc
iret
fisubrl
pop
and
dec
popa
jg
mov
insl
xchg
pop
mov
or
mov
cltd
sbb
int3
xchg
xchg
jl
int3
mov
fnstsw
mov
sbb
int3
add
pop
mov
sub
xchg
mov
repz
xchg
cmc
or
mov
pop
sahf
xor
or
notb
mov
int
inc
cmpsl
jmp
jle
jmp
fnstsw
aas
dec
xor
ret
mov
pop
or
adc
sub
inc
xchg
ljmp
aad
mov
in
adc
dec
mov
jmp
xlat
push
or
and
das
nop
mov
decl
add
sub
xchg
push
sti
cmp
repnz
mov
movsb
and
push
sub
dec
mov
int
jl
pop
movsl
fwait
mov
push
adc
xchg
scas
mov
outsb
lret
mov
xor
adc
jo
movb
fnstcw
jecxz
in
sub
push
icebp
xor
add
mov
ret
jge
xlat
sub
jbe
lds
xchg
xor
test
xchg
inc
push
jae
mov
call
sub
mov
cmpsb
add
in
dec
popa
jecxz
pop
imul
sub
xor
add
sahf
mov
notl
push
pop
pop
jmp
iret
push
mov
or
icebp
sar
stc
test
and
in
push
sar
nop
cs
dec
filds
outsl
dec
cmp
xlat
imul
sub
sti
jbe
push
arpl
ret
xchg
mov
and
popf
es
add
mov
cmpsl
or
loopne,pt
jmp
add
scas
icebp
xchg
pop
xlat
mov
or
lahf
push
lock
iret
push
pop
sar
push
mov
push
jge
sti
je,pt
clc
or
xchg
in
add
aam
jmp
push
sahf
cmc
shr
es
jbe
mov
out
decb
or
lds
lret
in
mov
or
pop
or
xchg
stc
xor
iret
xor
adc
jg
pop
cwtl
ds
aaa
and
xor
xor
shr
movsb
nop
mov
dec
cmp
sub
loope
cmp
cmp
push
mov
fwait
mov
int3
xor
cli
dec
mov
jle
lock
pop
scas
mov
and
mov
xchg
jg
ret
decb
cmpsl
mov
pop
jno
mov
imul
sbb
clts
mov
in
adc
ljmp
ds
je
outsl
mov
out
sub
sahf
outsb
loope
mov
icebp
insb
push
int3
orl
xor
pop
mov
dec
push
mov
mov
xorb
mov
sub
jecxz
mov
ja
mov
pop
lret
ja
enter
stos
out
fiaddl
cld
pop
xor
out
loop
addr16
fstps
repz
sub
popa
push
dec
mov
stos
adcb
cmc
inc
aam
jns
arpl
jecxz
sbb
dec
push
aaa
and
xchg
xchg
inc
mov
jae
sub
adc
into
arpl
push
lock
inc
repnz
cmpsl
ror
int3
pop
int3
sti
dec
mov
and
cmp
fs
fucomip
jle
and
outsl
fsubr
mov
push
ja
xchg
lods
jp
push
imul
push
mov
pop
repnz
sbbl
and
xchg
mov
push
inc
mov
fcomip
shl
sub
lcall
movsb
dec
ret
cmp
sbb
scas
jns
and
dec
pop
push
cmpl
outsb
shll
outsb
push
test
shrl
lret
pop
mov
fucomi
push
xor
inc
push
fxch
cmp
insb
push
adc
int
rorl
mov
push
pop
mov
mov
or
testb
leave
adc
lods
je
xor
xchg
and
popa
mov
sub
out
and
dec
lock
xor
xchg
push
pop
push
lds
loope
les
jb
shlb
pop
je
shl
aas
addl
mov
sub
repz
jl
inc
mov
adc
lea
aas
or
and
xor
jbe
testl
cld
subl
mov
lea
sahf
inc
nop
dec
repnz
sub
addb
cmp
push
dec
pop
xchg
mov
scas
cmpsb
xchg
sub
lods
flds
cli
cmpsl
add
pop
jae
testb
fnsave
push
jp
xchg
insb
cli
mov
sbb
mov
mov
mov
mov
fldt
fmuls
test
cmp
clc
cmpsl
aas
sub
adc
push
adc
mov
push
mov
int3
push
jge
xchg
lcall
jb
xchg
stos
cmp
mov
rolb
js
adc
sub
pushf
mov
dec
mov
push
cs
xor
and
out
mov
xchg
dec
repz
adcl
cli
xchg
sub
pusha
dec
push
scas
orb
add
sub
jb
rorb
inc
js
enter
push
sbb
imul
lahf
xchg
adc
sub
std
and
jbe
push
test
test
mov
push
cmp
push
movsl
lcall
jge
xchg
mov
mov
ds
fwait
xor
mov
gs
mov
add
in
rorb
scas
pop
dec
mov
int3
into
data16
pusha
cmp
imul
call
and
cwtl
mov
mov
jmp
mov
data16
scas
pop
jb
mov
mov
pusha
push
cltd
lret
cmpl
or
mov
test
inc
jge
in
inc
adc
lcall
sub
flds
lahf
fwait
xor
pop
cmpsl
cmp
jle
jl
stos
dec
mov
lods
add
mov
mov
fistl
push
or
mov
lret
outsb
pop
sbb
scas
stc
je
jbe
jo
mov
daa
test
icebp
sbb
in
pusha
push
jmp
cmpsl
and
aaa
push
or
adc
scas
and
pop
push
jno
test
or
fdivrs
lods
pop
repz
pop
out
sbb
mov
ss
xor
insb
xlat
cmp
or
inc
cmp
mov
clc
loope
rcll
push
inc
lret
mov
jge
mov
fiaddl
clc
jae
test
stos
and
es
cld
aaa
or
xor
imulb
push
adc
pop
movsl
mov
aaa
loope
push
outsb
mov
imul
inc
jo
mov
push
das
xchg
addr16
movsl
mov
in
push
cmp
mov
out
push
out
mov
aaa
add
push
inc
fwait
icebp
jne
out
mov
push
out
inc
lds
or
xor
jns
xor
push
movsb
iret
mov
sub
jne
mov
add
shlb
push
mov
fnstenv
je
int3
loopne
lods
dec
xchg
pop
mov
aas
out
adc
stos
int3
adc
adc
fcmovnb
pop
dec
in
mov
jg
sub
ja
jnp
add
shrl
jo
inc
stos
dec
xor
lret
lock
lahf
jbe
out
ret
push
inc
mov
inc
in
mov
mov
lret
cs
cmp
cltd
cmp
inc
mull
ret
xor
lcall
test
sbb
clc
sahf
dec
xchg
lret
adc
sub
cmc
push
in
loopne
pop
jbe
lret
out
jbe
scas
cmp
test
adc
outsb
lahf
mov
popa
and
cmpl
shll
stos
mov
jne
aad
inc
pusha
scas
enter
lods
jae
pop
out
daa
lcall
inc
fsubrl
fidivs
cli
test
das
ds
push
dec
sub
std
fldenv
xchg
cli
outsb
fisubrl
rolb
test
imul
push
push
pop
mov
mov
and
inc
xchg
jle
adc
or
cltd
shl
mov
pop
fsts
cs
push
bnd
sub
lea
inc
adc
xor
test
add
jb
dec
scas
and
push
fwait
xchg
xor
pushl
mov
dec
push
je
cmp
addr16
lret
scas
mov
imul
xchg
and
cmp
jo
sbb
fwait
sbb
push
andb
jb
mov
sbb
inc
and
xor
push
cmp
fsubr
mov
fsub
sbb
xchg
nop
cmp
sub
sahf
stos
cmp
call
or
xchg
mov
pop
pop
sub
je
xor
jle
out
dec
addr16
pop
je
and
jo
pop
mov
push
cmp
dec
inc
addr16
adc
test
or
sbb
pusha
ss
and
cmc
rcll
cld
sbb
cli
pop
aas
cmp
add
sbb
xchg
lahf
stos
dec
sti
mov
daa
imul
xchg
sub
jge
in
imull
cmp
lods
pop
cmp
sti
movsl
sbb
mov
pop
dec
dec
fdivs
jecxz
mov
jge
dec
cltd
mov
sbb
cli
or
cmp
arpl
jmp
nop
push
cld
xchg
inc
ret
jl
sub
jnp
push
jle
cmp
dec
xchg
cmp
jp
mov
loopne
mov
repnz
sti
movl
aad
and
mov
fdivrl
inc
mov
dec
mov
mov
xor
jae
pop
sahf
popa
lea
jae
lret
pushf
jb
sti
or
dec
in
jg
pop
and
xor
mov
inc
or
xor
test
adc
inc
sbb
rolb
jb
jns
xchg
stc
mov
leave
inc
pop
jb
lds
add
dec
call
add
push
mov
mov
jecxz
mov
jno
outsb
cmc
mov
jno
mov
in
pop
adc
add
sbbb
mov
dec
sub
aas
push
hlt
movsb
jne
jne
sarl
sbb
scas
adc
mov
cmpsb
sbb
loope
repnz
shl
adc
sub
rcl
ljmp
mov
in
or
test
call
pop
lcall
std
lods
jns
adc
clc
jnp
mov
xlat
pusha
test
add
cmpsb
out
mov
sahf
sbbl
mov
imul
ljmp
xchg
faddp
push
dec
dec
fstl
je
lock
and
xchg
insb
pop
cld
jo
test
cli
call
pop
push
sbb
pop
cmc
pop
leave
repnz
or
pop
sbb
jbe
mov
negb
insl
ret
movsb
xor
stc
inc
mov
loopne
pop
fxch
stos
and
fildll
minps
mov
jge
call
fstl
jge
sbb
pop
inc
outsb
dec
cli
call
xchg
daa
jbe
xor
push
xor
mov
pushf
jb
xchg
fcompl
mov
in
stc
lret
rclb
jecxz
add
mov
fmul
jge
pop
scas
jmp
mov
adc
sbb
push
sbbb
push
inc
xor
fcmovnu
jmp
push
sahf
scas
je
xor
adc
mov
testb
dec
pusha
daa
gs
cmc
aas
push
pop
adcl
push
lea
mov
mov
cld
ret
imul
pop
push
mov
loop
and
les
fidivl
pop
mov
sbb
dec
in
pop
es
test
lret
sbbl
jnp
or
mov
lahf
fwait
sub
movlps
mov
inc
adc
ds
push
test
addr16
popf
sub
dec
dec
leave
sbb
je
xchg
outsl
ja
scas
jg
loope
shlb
les
icebp
or
sub
enter
cmp
repz
jmp
mov
in
cmp
fistl
pop
leave
jns
cmp
enter
in
mov
sbb
mov
pusha
lock
pop
imul
icebp
xorl
or
xor
cltd
cli
cmp
xchg
loop
repnz
pop
dec
adc
sbbb
test
lock
gs
das
xor
je
xchg
xor
mov
and
xchg
mov
iret
push
adc
andl
cmp
xor
fdivr
fmuls
add
rcrl
lds
js
push
add
mov
int
scas
out
xorl
loopne
mov
xchg
jg
jmp
sbb
loopne
sub
popa
clc
dec
dec
push
xchg
outsb
jo
push
subb
sbb
ds
loop
push
xor
dec
aam
push
fsubs
lea
imul
jns
addr16
sti
mov
xor
jle
mov
mov
sahf
sub
cmp
les
enter
rorb
shlb
cs
pop
push
ss
outsb
or
adc
mov
xchg
scas
arpl
lods
add
mov
xchg
jp
and
jmp
sbb
sahf
mov
cmp
pop
clc
int
les
adc
or
xor
fs
xor
sbb
ds
jo
pushf
xor
adc
inc
jmp
rdmsr
gs
mov
xchg
repnz
stos
inc
or
mov
push
imul
xchg
fwait
add
xchg
mov
movsl
xchg
push
or
inc
mov
sub
shrl
dec
dec
mov
outsb
jl
mov
mov
mov
notb
adc
pop
iret
cmpsl
jmp
inc
dec
scas
push
push
in
daa
sub
loopne
inc
mov
jns
addr16
cmp
push
inc
add
sbb
lret
dec
jb
out
dec
scas
cmp
push
aaa
into
and
adc
sbbl
pop
cmp
out
scas
sbb
and
les
add
mov
cmpsb
loop
iret
ret
jb
mov
test
lods
xor
mov
and
in
fdivs
jle
stc
je
cmp
jno
or
dec
mov
loopne
inc
dec
call
inc
fwait
add
and
or
dec
pop
cli
mov
adc
std
xchg
jb
test
xchg
jmp
inc
xor
lods
sbb
sbb
and
xor
inc
icebp
insb
addr16
fsubrl
mov
mov
js
dec
pop
nop
cmp
mov
inc
xchg
mov
les
lock
or
mov
test
imull
xor
jb
adc
mov
adc
jo
cmp
test
cltd
je
inc
and
stos
jmp
cmpl
mov
xchg
sub
add
sub
inc
or
adc
pop
loopne
jl
jge
mov
hlt
cli
jne
add
lret
jns
in
pop
adc
imul
mov
push
xlat
mov
jg
setb
int3
pop
and
jle
pop
xchg
sti
divb
lock
int3
fisttps
push
into
test
cmp
push
sub
out
pop
add
popa
xchg
out
ret
lods
leave
js
mov
mov
aaa
mov
xor
dec
mov
in
aaa
int
loop
icebp
out
push
pusha
add
sbb
shl
clc
daa
repnz
or
xchg
test
adc
repz
in
imul
fdivl
pop
pushf
mov
sarl
cwtl
fwait
xchg
xlat
outsl
and
pop
add
popf
loopne
in
dec
push
sub
xlat
push
or
bnd
push
push
sbb
mov
xor
add
ljmp
jecxz
mov
test
std
pusha
mov
lret
and
adc
repz
rorb
ret
mov
fwait
call
mov
dec
cli
push
jne
mov
pop
mov
out
insb
scas
out
pop
mov
sarb
mov
sbb
mov
rolb
jge
xorl
gs
insl
rorl
std
jp
imul
dec
loope
lock
es
sub
out
ret
pop
fidivrl
push
mov
jp
mov
pop
jno
jl
mov
push
xor
xor
mov
adc
sbb
mov
nop
inc
mov
js
fisubs
dec
lahf
clc
mov
es
nop
jb
mov
pop
aaa
or
ljmp
mov
loope
orl
in
mov
pop
sub
jo
inc
mov
inc
cmpsl
and
dec
sub
andl
add
cmp
pusha
mov
xor
sbb
dec
jp
in
rcr
mov
cmc
push
rorb
repz
xchg
dec
fwait
cmp
push
add
cli
jno
loopne
cmp
xor
rorl
arpl
cmp
xchg
mov
pop
dec
movsl
decl
dec
bound
cwtl
push
and
or
clc
fs
std
jp
pop
popf
inc
cwtl
into
cmp
push
imul
popf
jno
mov
ljmp
cli
gs
jb
jl
rcll
mov
loop
push
call
or
test
sub
sbb
sbb
leave
xor
jns
into
sbb
stos
loopne
xchg
sbb
mov
loope
xlat
mov
or
xchg
dec
movq
and
fsubr
jle
mov
xor
imul
leave
pusha
into
and
cltd
insl
insb
test
and
mov
jmp
mov
repz
sub
out
xchg
aas
xor
or
xor
xchg
mov
cli
mov
pop
inc
or
mov
nop
adc
push
testb
adc
sub
jmp
and
sbb
cmp
push
bound
dec
and
orb
negb
jl
xchg
xor
push
popa
dec
and
or
mov
xchg
and
dec
inc
mov
les
call
push
aam
push
push
cmp
movsb
xor
pop
pushf
shlb
scas
dec
mov
test
cld
mov
daa
insb
and
ss
dec
mov
fistpll
cmc
mov
movsl
pusha
mov
xchg
leave
xor
mov
pop
rcr
mov
xor
mov
dec
xchg
pop
adc
in
pop
push
pop
pusha
leave
lea
xchg
pop
imul
ss
pop
imul
test
mov
iret
loope
sub
out
inc
pop
loope
dec
fstpt
add
cmp
hlt
mov
movsb
add
std
nop
add
int3
push
roll
and
mov
adcb
jns
daa
test
mov
roll
mulb
add
xor
loope
cwtl
popf
rcrb
imul
mov
es
aaa
jne
popf
arpl
into
mov
cmp
pop
shr
jbe
mov
dec
shll
lret
bound
imulb
cli
jmp
movsb
mov
ret
sub
lock
sarl
fprem1
sbb
adc
and
inc
mov
cmpb
mov
fdivrl
push
aas
das
ficoml
xor
test
or
imul
add
pop
out
inc
and
fnstcw
push
cli
notl
popf
and
mov
push
push
jp
cmp
dec
xchg
dec
xchg
add
push
stc
sbbl
push
and
movsl
xor
adc
aad
dec
outsb
xor
out
rclb
andl
lds
push
mov
lods
dec
push
jecxz
mov
mov
lods
mov
lea
cmp
dec
out
pop
jle
loop
in
dec
int
mov
sub
outsl
xchg
adc
lret
divb
testl
repnz
jno
fisubl
add
mov
lds
dec
xor
inc
inc
incb
pop
xchg
aam
mov
fnstcw
jecxz
and
and
lret
int3
int
imul
cld
lods
mov
ds
jg
cmpb
mov
fisttpll
sarl
adc
xchg
push
in
xor
adc
mov
mov
aas
add
xchg
scas
imul
pop
stc
fwait
arpl
fidivrs
stc
push
jp
data16
jg
xor
xor
inc
sbb
mov
mov
enter
mov
leave
jns
sub
iret
mov
lret
enter
adc
ljmp
popa
cmp
and
sbb
cs
cmp
aam
cmp
xor
push
sub
push
mov
inc
into
jmp
mov
outsb
fdivp
xchg
ljmp
lret
rcr
repnz
mov
or
jg
leave
sub
out
orb
inc
pop
push
sub
add
fidivs
inc
xor
in
push
gs
xchg
mov
adc
pushl
or
sub
xchg
sub
hlt
orl
sub
sbb
cmp
adc
lret
xlat
fldt
jno
pop
cld
mov
push
sbbl
mov
lcall
std
mov
ret
outsl
cmp
mov
adc
mov
rolb
sub
testb
outsl
adc
dec
loop,pn
mov
or
cli
out
ficoms
outsl
jae
sub
dec
jo
mov
jo
xchg
cmp
in
lret
mov
imul
movsb
mov
push
mov
imul
sub
jge
jb
gs
cmp
xchg
jbe
sub
mov
testl
cmc
add
lds
je
aas
pop
aas
mov
inc
es
mov
inc
push
jl
xchg
sub
xchg
mov
in
daa
inc
in
adc
arpl
mov
mov
fdiv
adc
or
pop
jno,pn
inc
pop
sbb
pushf
lods
mov
or
mov
mov
lods
movb
push
imul
mov
sub
push
pcmpgtw
xlat
pop
pop
mov
adc
adc
or
ret
cmp
push
mov
pop
shrb
jo
pop
stos
shlb
aam
mov
inc
in
jmp
inc
iret
jp
test
mov
test
fcoms
call
insb
shr
test
ja
mov
aas
ds
and
jns
adc
mov
jbe
mov
sub
sbb
popa
sub
jmp
mov
fidivs
push
aad
test
daa
cmc
or
mov
movsl
cmpsl
jle
push
push
insl
push
xor
les
inc
pusha
repz
shrl
jecxz
mov
enter
add
ja
stos
push
lock
dec
add
mov
addr16
xor
mov
cld
mov
pop
push
test
rcr
daa
mov
pop
push
sub
shl
cmp
leave
stos
xchg
add
movsl
in
jne
shlb
xchg
jne
ficoms
popf
sub
xchg
cs
and
popl
sarb
mov
mov
jnp
adcb
mov
aaa
das
mov
mul
pop
add
jbe
jne
imul
fdivs
jbe
adc
orb
mov
pushf
jecxz
outsb
adc
xor
das
mov
shll
in
push
repz
pusha
mov
pop
mulb
stc
xchg
xor
dec
mov
in
lcall
and
subl
mov
and
mov
and
mov
add
mov
lds
pop
out
fcomps
jge
pop
ffreep
sahf
fists
dec
out
cmp
inc
shrl
les
sbb
out
call
sar
xor
inc
mov
pop
pop
fldenv
pop
adc
jecxz
mov
mov
fsubl
mov
push
push
ffree
testb
ljmp
jo
mov
mov
addr16
cmp
das
push
pusha
cmp
push
pop
insl
stos
lret
mov
jmp
inc
das
scas
ss
dec
sub
sbb
pop
add
insl
inc
test
lock
repz
cmpsb
iret
adc
movsw
add
imul
lods
cs
les
or
xchg
adc
add
xchg
inc
mov
les
sbb
sbb
xor
dec
or
adc
fadds
xor
outsl
sub
imul
ret
jle
ret
jge
repnz
gs
sub
mov
mov
push
sbb
xchg
into
push
mov
pop
mov
sarb
dec
movsl
xor
xor
popf
xor
jo
sbb
mov
out
lods
mov
mov
xchg
pop
mov
outsb
test
imul
push
dec
and
dec
xchg
lods
lods
cmp
mov
and
adc
jnp
ss
data16
push
jg
cmpsl
daa
xor
or
mov
add
lret
adc
add
push
adc
dec
into
aad
inc
or
jg
mov
jge
loop
inc
lcall
fisubs
cltd
test
sbb
je
loop
xlat
cltd
cmp
ljmp
jno
ja
dec
pop
lret
in
jmp
or
push
pop
jne
rcr
mov
mov
mov
loop
mov
sub
inc
addb
and
aam
dec
inc
ret
sarl
ja
push
ss
inc
popf
dec
mov
ds
xchg
add
into
adc
xchg
jno
push
fcoml
and
iret
jbe
subl
dec
ds
cld
xchg
pop
or
dec
dec
sti
mov
leave
xor
xchg
ficoms
cltd
mov
lock
pushl
or
jmp
xchg
fiaddl
out
gs
dec
pop
adc
mov
pop
mov
scas
xor
add
out
popa
mov
arpl
or
cmpsl
daa
icebp
addr16
and
or
sub
add
loop
shrl
sbbb
test
mov
push
idivl
mov
pop
add
pushw
mov
dec
cmc
adc
mov
imul
add
in
or
es
push
xor
jo
insb
iret
adc
es
mov
sbbb
cwtl
imul
lods
mov
test
pop
xor
mov
insl
enter
pop
pop
inc
push
sti
xchg
cmp
leave
adc
jmp
inc
rclb
andl
push
in
push
lea
sarb
jmp
fildll
mov
fwait
ljmp
mov
shlb
mov
lock
fmull
mov
aad
pushf
fisubl
sahf
subl
daa
jb
lods
add
ds
sub
inc
icebp
and
or
push
in
adc
or
lds
loop
xchg
jmp
pop
in
into
dec
enter
and
sub
or
or
mov
bound
cmp
test
xor
lcall
or
mov
divb
shll
pop
jae
rdpmc
pushf
jbe
adc
icebp
out
fmull
lahf
push
xlat
stos
sbb
aad
mov
add
lcall
out
das
cmpsb
dec
xchg
or
add
call
stos
outsb
sahf
push
icebp
clc
sbb
cmp
push
or
js
fiadds
pop
in
ds
jg
outsb
cld
lods
addb
fcmovu
movsl
jge
inc
sbb
enter
dec
inc
lods
ja
aam
and
fisubrl
mov
or
setb
movhps
bound
ror
roll
loope
arpl
and
dec
vpmulhw
pop
jbe
or
dec
std
ret
pop
mov
push
test
out
test
fs
mov
pop
jmp
xor
pop
cli
out
cmpl
hlt
dec
cmpsl
xchg
xchg
lock
movsl
movsl
fdivp
out
scas
cmp
pop
lea
or
adc
repz
push
inc
ds
cmp
loop
leave
xchg
pop
xlat
outsl
rorl
pusha
clc
jecxz,pn
jno
inc
adcl
adc
or
xchg
jne
lahf
outsl
neg
loope
cmc
push
mov
xchg
in
xchg
xor
adcb
ds
mov
fsubl
dec
dec
iret
push
add
sahf
push
cmp
jge
fnstenv
lds
les
in
adc
inc
adc
sub
mov
jecxz
add
orb
scas
in
fildll
sar
es
lcall
imul
add
icebp
sbb
pop
testl
lea
stc
mov
jnp
mov
shrb
gs
and
push
or
push
fwait
or
imul
int3
pop
sarb
cld
rolb
in
arpl
fisttps
loope
sbb
push
push
mov
js
ret
xor
sbb
mov
andb
imul
mov
xor
dec
cmp
fcomi
ds
or
lea
out
cmp
fs
bound
inc
jb
jne
cmp
mov
roll
insl
dec
pop
lahf
aaa
cmp
mov
sbb
xchg
outsb
outsb
add
leave
xor
mov
push
jecxz
pusha
pop
out
xchg
test
pusha
idivb
jbe
in
inc
rol
inc
xor
mov
sarl
mov
mov
xor
inc
inc
test
leave
pop
popw
sti
lahf
sub
lret
enter
iret
push
mov
sbb
sti
jl
push
stos
fbld
push
les
mov
insb
push
push
xchg
ss
loope
movsb
enter
push
fcoms
dec
in
xchg
jl
and
in
orl
cmp
or
xchg
jmp
movsb
inc
or
xchg
ljmp
or
lods
cli
xchg
inc
fcmovne
psrad
bound
lea
mov
sub
jbe
std
test
inc
nop
push
out
inc
xor
leave
notl
push
or
pop
fnsave
fistps
push
pop
adc
mov
lcall
dec
add
jge
and
andnps
and
sbb
or
mov
sub
sub
int
mov
jmp
dec
mov
mul
or
ret
jecxz
std
xor
mov
push
xor
test
aas
xchg
cmpsl
push
dec
out
or
xchg
cs
inc
pop
aas
xchg
mov
cmp
xlat
jns
mov
pop
addr16
jno
fsubrl
mov
cmp
cwtl
jg
stc
ret
iret
add
sarl
xor
push
xor
or
sub
dec
adc
arpl
sub
pushf
push
inc
mov
fnstsw
lahf
sahf
flds
mov
cwtl
cmp
js
lods
cmp
fldt
xchg
fcoms
push
xchg
lea
pop
lahf
ss
xor
mov
or
push
rorl
loop,pt
jl
fcom
popa
xchg
xorb
and
sub
cmpb
push
sbb
pop
or
ja
jmp
xchg
sbb
ficompl
sarb
fimuls
stos
data16
mov
lret
lret
inc
hlt
mov
add
in
and
lods
push
mov
xor
xor
lret
xchg
stc
or
inc
fisttpl
xchg
stc
movb
dec
push
stos
stc
je
int3
movsl
in
mov
out
aad
mov
repnz
sbb
fisubl
pop
test
or
outsb
in
fcom
push
xchg
xlat
out
bound
mov
xor
sub
pop
in
push
ljmp
hlt
and
jae
fstpt
add
sbb
imul
sahf
mov
xor
jp
jecxz
ds
fsts
aad
ja
fildll
pop
cld
outsb
insl
and
scas
imul
jp
lods
jo
daa
mov
stos
hlt
pushl
aam
and
xchg
call
dec
scas
scas
push
xchg
pusha
and
mov
inc
mov
int3
ljmp
fwait
xchg
push
stos
push
pop
test
fidivrs
movsl
lahf
xchg
out
inc
movb
mov
les
adc
mov
or
dec
in
push
fld
jmp
aaa
mov
adcl
data16
adc
das
mov
xor
inc
push
ficoml
loopne
hlt
fldt
cli
stc
and
jmp
cmp
arpl
mov
and
sbb
fstl
aam
aas
addb
sti
push
das
and
xchg
push
mov
inc
sbb
testl
dec
mov
jmp
and
ljmp
push
or
ljmp
mov
push
stos
scas
loop
dec
jne
stc
cmpsb
insl
mov
insb
mov
popl
inc
mov
and
das
mov
cld
pop
test
mov
stos
jne
pop
jne
dec
insb
movl
addr16
out
daa
jle
pop
dec
ds
xor
iret
outsb
in
dec
aas
push
subl
frstor
popf
jo
sbb
mov
push
shlb
jno
xrelease
loop
cmp
stos
sub
cld
cmc
mov
adc
and
mov
flds
or
packssdw
insb
pop
nop
arpl
int3
jmp
cmp
int
xlat
lret
add
rorb
stos
pop
lock
ja
ja
iret
aam
insl
stc
push
in
mov
mov
aad
int3
add
loope
mov
push
inc
xor
lret
xor
mov
lret
testl
inc
mov
fistpl
std
das
or
pusha
les
sbb
in
inc
in
push
insb
ret
fiaddl
cwtl
cmpsb
jns
sarb
js
inc
add
push
call
xor
imul
cltd
jecxz
mull
mov
or
sti
xchg
idivl
popa
sub
mov
and
xor
pmovmskb
inc
push
mov
mov
negl
fists
iret
repnz
jne
inc
mov
test
mov
xor
mov
call
inc
mov
in
sub
cmp
and
std
imul
shl
lahf
mov
and
push
ds
or
mov
add
fnstenv
jns
cmp
testl
jne
push
inc
movsb
ret
test
call
cltd
stos
and
lea
and
int
mov
push
jne
cmp
xchg
add
jecxz
orl
leave
xchg
dec
mov
shl
push
add
add
xor
xor
in
pop
lds
ret
dec
dec
dec
fisttpll
lea
out
jmp
inc
mov
iret
mov
add
cmp
filds
jae
add
inc
sub
addr16
pop
lret
pop
bound
mov
andl
mov
ret
out
test
xchg
lods
cmp
int3
inc
push
arpl
fxch
lea
mov
dec
jmp
cmp
mov
xor
mov
sbb
and
xchg
lods
pop
pop
xchg
dec
loopne
jns
sub
enter
push
push
int3
repnz
inc
shr
lock
mov
xor
lcall
cwtl
aam
imul
jb
jmp
cwtl
pop
loopne
shl
stos
inc
mov
int3
pop
mov
daa
pusha
fistl
dec
int3
in
stos
fimuls
cmpsl
mov
and
std
mov
out
in
call
push
mov
sarb
sbb
cmpsl
push
xchg
test
cmc
ja
ljmp
int
cwtl
std
cltd
mov
std
and
jne
repnz
adc
push
gs
jb
jns
mov
xor
mov
inc
in
push
lcall
and
lea
push
in
mov
in
add
jbe
cld
cmpsl
out
and
jo
ret
hlt
lock
cld
adc
sub
inc
jmp
mov
mov
push
test
cmc
push
sbb
sub
les
fstps
test
cmp
jns
mov
or
sbb
xchg
test
dec
pop
jno
std
fsubrs
xchg
jne
dec
divl
dec
imul
int3
cmc
mov
inc
fcoms
jae
xchg
sub
cs
fsubrs
mov
dec
mov
xchg
int
fwait
push
mov
outsb
jnp
jmp
outsl
jo
cmp
push
in
stos
cmp
or
scas
out
xor
or
sub
adc
aad
in
push
fnstenv
xor
adc
movsb
aam
and
pushf
xor
and
loopne
je
push
cmpsl
je
push
bnd
jo
adc
mov
fwait
pop
cmpsl
mov
stos
jmp
dec
mov
cmpsl
mov
inc
jg
sbb
jecxz
aam
sbb
pop
dec
je
cli
subl
pop
mov
add
mov
jne
cmc
pop
adc
and
pop
mov
or
sbb
jnp
lods
inc
push
jmp
cmp
inc
dec
lods
fwait
sub
imul
fnsave
jb
popf
xor
sahf
dec
das
iret
cmc
mov
jae
and
mov
and
sub
cmp
push
or
dec
bndstx
shl
jge
mov
add
into
push
decb
gs
or
stc
jecxz
or
xor
cmp
add
xchg
mov
sbb
jle
repz
inc
xor
push
outsl
loopne
inc
bound
mov
mov
pop
sub
imul
testb
or
div
daa
stos
and
inc
dec
add
repnz
dec
in
sub
movsb
not
fsubrl
pop
insb
std
sbb
cwtl
repz
ljmp
sub
outsl
scas
inc
gs
fsubl
xchg
jg
cli
adc
xchg
pop
icebp
and
cld
add
popa
xchg
push
scas
mov
fbstp
jnp
dec
push
loope
pop
ja
nop
mov
and
movsb
dec
cwtl
cmp
in
sbb
orl
mov
in
mov
out
inc
inc
xlat
inc
std
outsb
loope
fiaddl
sahf
or
sahf
bound
xor
mov
enter
pusha
outsl
loop
or
jno
lea
sub
adc
std
jae
scas
out
inc
loopne
dec
into
imul
cmp
fstps
dec
insl
loopne
inc
loope
add
mov
jge
in
repz
xchg
add
cmp
call
adc
xchg
test
pusha
rcl
cmp
pop
and
mov
in
fldt
push
xor
cmc
mov
xchg
cs
mov
ficoml
pop
cltd
lock
std
mov
add
push
out
dec
lret
pop
in
in
inc
push
inc
jp
add
movsb
les
mov
mov
pop
inc
outsb
js
ret
mov
xor
mov
aas
inc
repnz
add
and
mov
pop
pop
ficoms
cli
out
ss
inc
inc
pop
test
out
cmc
pop
shl
dec
add
add
movsb
cmp
pusha
notl
inc
pop
jns
std
and
sbb
xor
or
cmpl
nop
das
ret
ror
in
stos
pop
lcall
cmp
scas
cmc
or
cmp
dec
mov
mov
subl
mov
leave
fmuls
scas
inc
inc
movsl
je
inc
jo
jg
fmull
or
fdivl
push
sbb
sbb
xchg
sbb
push
cmpsb
mov
in
lea
mov
xchg
adc
mov
addr16
cltd
sbb
sub
addr16
mov
leave
sub
push
cld
mov
ret
jle
pushf
stc
int
test
mov
testl
fldl
cltd
sbb
stos
xchg
push
outsl
xor
jl
hlt
mov
in
push
jl
lcall
xor
fucomi
test
xchg
xchg
mov
xor
pop
cmp
int3
mov
scas
fwait
cmp
rolb
mov
and
jno
pop
jecxz
lret
push
dec
xchg
loope
repz
fistpll
cmp
adc
dec
test
insb
add
and
cmp
mov
push
sbb
loope
xor
fwait
mov
mov
push
movsl
sub
or
aam
test
clc
pop
sub
aad
repz
jl
test
sub
inc
cmp
lret
and
cmp
hlt
push
jbe
xor
xor
bound
jmp
or
cltd
aam
mov
jle
mov
out
hlt
fstpl
in
mov
fldenv
cld
cwtl
cli
fs
cwtl
cmp
inc
adc
cmc
daa
sub
popa
jno
lret
imul
adc
mov
cmp
cmp
mov
dec
daa
loop
iret
or
jp
adc
cmpsl
fwait
mov
or
dec
or
adc
sub
insl
ja
rcrl
fstpl
stos
shll
addb
mov
mov
and
fs
int3
rcrl
sahf
loopne
push
inc
ja
jae
sub
enter
add
mov
lods
fs
popa
stos
adc
mov
xor
lock
scas
ljmp
int
insl
in
test
mov
push
add
xor
mov
mov
or
movsl
cmc
test
jmp
pop
outsl
dec
xor
xlat
and
stos
lods
inc
fisttpll
stos
es
inc
pop
scas
je
add
loope
inc
adc
lret
cltd
pusha
sti
mov
icebp
or
std
jmp
and
xchg
inc
lods
mov
mov
sahf
fwait
sti
xchg
cmp
pushf
js
loop
call
test
cltd
xchg
fcmovnbe
mov
mov
sub
pop
xchg
mov
jmp
js
cwtl
or
xchg
hlt
mov
dec
mov
adc
xchg
mov
cld
jg
mov
sbb
xchg
mov
fstp
testb
or
jge
clc
push
aam
xchg
jecxz
sbb
or
jns
stos
push
testb
add
idiv
jae
dec
mov
jg
cmp
fsubs
popf
mov
nop
xlat
mov
push
dec
pop
pop
sahf
and
iret
lock
movsl
arpl
xchg
movsl
cmp
jge
adc
dec
and
js
int3
stos
inc
xor
js
or
aaa
xchg
nop
cli
pop
jg
pop
xor
and
bound
sti
dec
pop
mov
fisubl
mov
xchg
and
add
int3
jo
jg
lret
mov
cmp
jne
xor
mov
jnp
js
ss
lret
push
dec
jno
clc
cmp
test
fwait
pop
cmp
sub
jp
mov
adc
std
dec
lock
arpl
imul
and
mov
pushf
ret
sbb
loop
subl
mov
clc
fcmovnu
cmc
ret
mov
push
das
in
cmp
mov
pop
pop
sub
movsb
rorb
xchg
icebp
adc
sbb
xor
in
inc
inc
xchg
lock
mov
fadd
fcomip
mov
or
ror
fiadds
test
inc
test
arpl
fadds
test
stc
test
arpl
iret
rorb
int3
lock
mov
dec
xchg
or
push
jae
pop
mov
xchg
cltd
mov
shlb
loop
data16
xor
idivl
pop
andl
pop
jns
xchg
xor
pop
jecxz
addb
mov
das
lret
push
in
jmp
push
sti
pop
dec
add
scas
stos
sbb
mov
sub
stos
ljmp
sbb
sahf
inc
inc
outsb
and
loop
inc
push
fnstsw
pushf
iret
sbb
jb
mov
fnsave
push
jbe
pcmpgtb
clc
inc
imul
push
add
out
dec
sbb
int3
add
cmp
int
jne
or
jecxz
xor
add
rep
jl
mov
xchg
test
fs
push
mov
testl
sub
jmp
or
hlt
adc
xor
int
cmp
inc
out
icebp
ljmp
xor
arpl
cld
cmc
sub
cmp
push
mov
in
movsb
or
imulb
into
sub
sti
in
ds
repnz
xor
fs
sti
in
xor
xor
fwait
xchg
ds
mov
out
fsts
ret
sub
pop
dec
mov
fisttps
pop
rorb
data16
dec
movsb
mov
je
mov
sub
leave
into
mov
dec
pop
inc
pushf
call
shlb
cmp
into
jbe
fimull
ret
mov
je
andl
dec
test
loopne
das
sub
lds
data16
xchg
or
lcall
and
xchg
dec
es
cmpsl
inc
out
cmp
add
test
icebp
sbb
xor
insb
sbb
out
mov
subl
insb
xchg
divb
xor
inc
pusha
xchg
sbb
lods
mov
insb
inc
mov
movsl
mov
mov
or
push
pop
lds
dec
fbstp
or
jo
jae
out
mov
shll
jbe
dec
dec
jae
adc
adc
insl
inc
ret
pop
dec
lcall
pop
call
test
jp
mov
add
sbb
dec
adc
dec
inc
mov
leave
and
into
sbb
push
fdivrs
add
ja
pop
dec
adc
pop
ficomps
pop
bnd
xor
lahf
les
mov
loop
mov
push
add
cmp
movsl
lds
shrb
cwtl
enter
icebp
fdivl
mov
lcall
mov
mov
cmp
pop
ret
out
mov
fidivl
and
int
mov
jno
insl
es
jnp
jg
int
enter
push
jae
into
xor
mov
dec
in
jne
popa
jl
rcll
add
loopne
add
xlat
ljmp
jno
out
jae
cmp
jge
mov
mov
push
xchg
mov
xor
sub
push
adc
call
test
out
cmp
add
cmp
xor
sahf
aad
arpl
push
mov
pop
insb
cld
sbbl
fisttpl
mov
jb
mov
stc
nop
imul
cmc
mov
sbb
repz
adc
or
sarb
push
sub
in
jne
dec
cmpsl
push
adc
fisttpll
fcmovb
pmaxub
stos
jle
xor
jno
addr16
insb
fisttpll
xor
sbb
and
push
push
cmp
or
cs
lea
and
pop
xor
fisttps
lock
and
iret
data16
cmp
fidivs
ret
push
cmp
push
mov
push
sub
push
cmp
inc
cmp
xlat
sti
test
adc
ret
imul
xor
mov
ljmp
add
add
sub
dec
mov
mov
and
xor
mov
xchg
outsl
hlt
cmc
fimuls
push
mov
or
icebp
decb
jge
fsubrl
xchg
sub
call
dec
std
in
push
movl
leave
movsl
push
sahf
xchg
arpl
js
xor
cltd
data16
adc
lret
fs
pop
adc
iret
push
aaa
sti
int
xor
je
pop
mov
scas
or
sub
sub
jb
imul
fmull
ljmp
movsl
cmp
lods
sub
pop
ret
pop
nop
into
lahf
push
nop
loope
dec
nop
aad
dec
xor
mov
cmp
adc
push
rep
mov
pushf
xor
xchg
scas
inc
sub
pop
xrelease
pusha
mov
scas
sub
les
mov
dec
or
call
nop
stos
pause
stos
faddl
testb
pop
adc
scas
xchg
cmc
vpcmpeqb
pop
repz
fbstp
push
push
xorb
mov
cwtl
daa
xchg
lahf
lods
les
orl
dec
push
or
sub
cs
inc
out
nop
jl
cmpl
sbb
add
and
sbb
sbb
or
adc
mov
xor
push
mov
ja
daa
dec
leave
fists
je
lods
xchg
inc
fadd
data16
push
negb
ja
dec
mov
mov
or
sub
sbb
xorb
xor
push
insl
and
push
add
movsb
vxorps
mov
das
fmulp
adc
lret
push
pop
es
arpl
testb
popf
in
pop
push
call
sub
mov
fidivrs
cmp
scas
movl
lret
popa
int
sbb
sbb
decb
lea
xor
push
call
xchg
pop
scas
pop
sahf
mov
and
mov
in
xor
xchg
repnz
mov
xor
in
mov
or
fnstenv
repnz
or
fwait
xor
mov
shll
cmc
mov
inc
test
rcl
movsb
xor
pop
repnz
pop
jae
lods
jns
fisubrs
ficoms
xor
push
outsb
aas
loope
xor
popa
outsb
pushf
inc
add
mov
xor
mov
and
dec
into
xchg
push
out
lds
jne
push
mov
and
daa
jnp
std
ds
mov
int3
insb
inc
fnstcw
or
push
sub
dec
and
roll
in
testl
dec
push
push
roll
dec
movsb
enter
pop
pusha
adc
xor
cwtl
xchg
scas
std
pop
lds
and
or
fidivrl
pop
enter
dec
int3
fs
in
pusha
test
inc
negl
lds
sarb
hlt
mov
inc
test
repnz
mov
push
movb
inc
int3
adcb
mov
arpl
cmp
aad
aad
pop
add
sbb
jp
pop
movsb
cmp
cmpb
std
ret
das
mov
loope
cmp
mov
jbe
andb
sbb
cmp
xchg
adc
loope
push
or
xchg
sub
push
mov
idivl
xorb
pop
dec
mov
cmc
push
sbb
insl
sub
jmp
out
jnp
cwtl
into
das
xchg
push
adc
xor
lret
cwtl
cmp
imul
jo
gs
popf
push
dec
fwait
decb
cltd
mov
lret
sub
xchg
bound
mov
jae
lahf
or
in
sbb
and
sbb
sub
dec
popa
bound
and
pop
or
mov
xchg
ds
lds
cwtl
das
call
or
mov
xchg
cmp
in
adc
adc
or
adc
outsl
and
leave
push
mov
mov
mov
ret
jp
cltd
repnz
aas
or
xor
jmp
imul
test
repz
cmp
and
es
scas
cmp
in
mov
cmpsl
dec
aad
decl
or
cld
xchg
xchg
sub
fwait
or
inc
sar
add
insl
daa
lds
mov
push
stos
xchg
stos
insb
add
mov
push
lds
fdivr
and
lock
out
fnstcw
adc
ja
std
xchg
jo
lock
or
sub
inc
movsl
jge
lods
dec
mov
xor
push
add
adc
push
pop
fmuls
pop
mov
cmp
aam
outsl
dec
in
add
cmp
sub
jb
xchg
lahf
scas
aaa
std
shll
mov
mov
loope
jo
sbb
popa
pop
or
and
mov
loopne
ss
pop
scas
bnd
test
and
arpl
xchg
mov
lret
es
and
sbb
and
aad
mov
ret
shlb
pop
stc
imul
popf
sbb
cs
mov
scas
mov
je
jge
pop
fnsave
stos
mov
testb
sub
mov
out
xlat
jmp
pop
sbb
push
sahf
xor
test
inc
arpl
inc
cld
pop
sbb
mov
push
mov
sub
adc
xor
aas
pushf
test
out
jecxz
jg
cmp
movsl
add
push
fwait
sbb
push
push
or
mov
pop
or
ljmp
dec
mov
or
xor
cmp
jnp
mov
dec
lds
jb
jns
push
cwtl
fbld
inc
push
inc
and
xor
loopne
dec
fucomp
jl
in
das
cmc
sbb
dec
in
stos
add
add
or
jg
repz
mov
leave
or
in
hlt
mov
loop
insb
mov
imul
or
sub
stc
test
sub
mov
mov
mov
inc
sti
pop
sahf
inc
inc
xor
sbb
cltd
xor
mov
in
pop
fisubs
sub
addr16
pop
arpl
mov
push
mov
enter
push
fisttpll
lea
jle
movsl
fdivl
sub
xor
xor
lret
scas
jno
bound
xchg
hlt
cld
data16
and
xor
jle
xchg
mov
or
int
pop
scas
out
cmpb
jg
adc
popf
and
or
lret
and
xchg
mov
push
sub
ljmp
or
add
push
call
mul
cmp
iret
scas
inc
sub
idiv
and
fisubl
cmp
mov
into
inc
dec
pusha
aaa
adc
lret
mov
sub
inc
daa
xor
cmp
js
stos
div
mov
push
in
lea
sahf
and
dec
push
add
pop
cmpsb
cmp
movsl
pop
mov
push
and
and
jbe
jo
fadd
dec
inc
add
arpl
sub
movsb
iret
jns
cmp
mov
sbb
mov
add
jl
fs
mov
cmp
jecxz
decb
insl
add
cmp
mov
lods
push
popf
dec
repz
mov
inc
xchg
or
iret
or
sbbl
shrb
fimuls
mov
data16
nop
sbb
mov
fnsave
bswap
rol
xor
xor
push
test
xchg
mov
push
rolb
fnstcw
vmwrite
adc
dec
inc
loopne
lret
shr
js
mov
xchg
or
mov
dec
dec
mov
push
xchg
pop
adc
cmp
or
sub
push
fisttpll
pop
xor
jo
jp
cmp
enter
lods
dec
mov
adc
dec
daa
aam
pusha
insb
cmp
xchg
movb
or
in
pop
popf
inc
fdivl
cmp
adc
push
fistps
popf
mov
pop
adc
int3
cmpsl
loopne
fldz
or
cmp
addl
mov
inc
ss
lds
xchg
add
iret
fwait
jl
jae
fistpll
shll
lret
jl
mov
xadd
or
sub
fyl2x
xchg
adc
inc
add
push
pop
fsubs
adc
test
or
fs
fsubrp
into
push
in
test
pusha
fisttpll
mov
test
lcall
push
lock
inc
adc
cld
inc
or
xor
pushf
xor
xchg
loopne
inc
cmp
fdiv
scas
or
cltd
ret
stos
inc
hlt
mov
jno
orb
jbe
sbb
pushf
inc
dec
out
in
xchg
repnz
cmpl
xchg
lock
into
mov
arpl
add
aam
lahf
int
mov
xor
sub
aaa
aam
stc
jbe
ret
mov
push
pop
les
int3
jo
addl
push
pop
mov
mov
mov
jo
loopne
sahf
xchg
mov
pop
pop
orl
mov
jle
aaa
pop
arpl
xchg
flds
repnz
mulb
nop
repz
pop
insb
insl
popa
je
sahf
cmp
lret
add
pushf
mov
xchg
movsl
and
inc
xor
jno
jg
popf
scas
inc
mov
int
es
ja
mulb
dec
lahf
jl
xor
push
cltd
jecxz
or
and
fbstp
add
jge
push
in
cmp
mov
mov
int
pop
push
cld
jecxz
xor
sub
xlat
lea
test
inc
jbe
adc
cmp
popa
clc
aad
push
loop
xchg
mov
inc
shrl
test
into
push
cmp
push
jg
ljmp
lods
mov
mov
cmp
rcll
lcall
jecxz
mov
je
sub
stos
stos
dec
iret
fwait
push
mov
mov
sbb
jmp
mov
or
pop
ret
add
sub
jo
imul
outsl
inc
mov
test
xchg
ljmp
lock
cs
dec
sub
sti
mov
push
call
loopne
inc
push
dec
dec
cwtl
in
mov
mov
pusha
mov
repz
jl
das
outsb
sub
inc
dec
or
adc
js
pop
push
arpl
popf
push
test
inc
mov
enter
imul
and
mov
arpl
adcb
push
mov
rcl
xor
iret
insb
inc
cmp
iret
sti
inc
ds
aaa
cmpps
mov
or
cmp
inc
xchg
jnp
test
mov
sbb
jno
jbe
ret
push
leave
push
dec
mov
adc
or
out
fbstp
cwtl
dec
cmp
mov
popa
fidivs
push
mov
pop
mov
mov
jmp
popf
adc
and
vphaddbw
enter
mov
jne
mov
popa
push
sub
xchg
pop
inc
sub
int3
add
jbe
sti
add
hlt
leave
jns
les
pop
cmp
xchg
add
neg
je
or
mov
pop
inc
and
nop
imul
imul
les
and
cli
push
hlt
sub
dec
push
jno
adc
std
pop
xor
fsubrs
push
mov
inc
pop
and
pushf
sub
add
in
out
pop
adc
sub
jge
mov
jge
pop
or
adc
insl
std
jo
mov
jge
stos
in
sub
lret
pusha
aam
xor
stos
push
xchg
and
out
xchg
enter
icebp
and
cmpl
cld
mov
jle
push
mov
xchg
popa
sarl
pusha
or
mov
fcoms
mov
xchg
jp
inc
pop
xchg
adc
sub
inc
out
xchg
fidivrl
add
xor
call
inc
push
mov
hlt
pop
daa
push
xor
xor
xchg
push
addr16
mov
mov
dec
dec
out
mov
adc
push
xchg
test
lea
and
loopne
pop
hlt
filds
sti
inc
xchg
test
scas
dec
xchg
stc
jge
ljmp
call
mov
out
dec
cmc
or
test
push
xchg
cmp
mov
mov
or
and
imul
lock
xor
xchg
mov
mov
shl
in
xchg
loop
cmc
adc
push
adc
jns
jb
ret
lret
shl
orb
enter
cmpsb
inc
adc
int
pop
inc
std
pop
xor
push
fdivrl
sbb
dec
rcrl
xchg
pop
out
xchg
cmpl
test
add
push
repz
aas
push
cmp
scas
dec
jae
iret
xchg
insl
int
fbstp
or
arpl
lcall
stc
inc
sub
inc
push
inc
inc
pop
or
jl
fldt
and
mov
insb
aas
xchg
or
mov
mov
fisttpll
mov
sbb
pop
cmpsb
lret
mov
aam
pop
hlt
dec
sub
jl
sbb
adc
nop
lods
fdivs
mov
fidivrl
popf
xor
ja
addr16
xchg
sub
cmp
imul
popf
js,pt
jne
and
popa
adc
ja
xor
sti
cld
cmp
add
subl
or
adc
cmp
ret
jnp
sbb
or
and
inc
pop
shll
fcompl
popa
hlt
cltd
icebp
adc
and
mov
cmp
cmp
jl
movsl
cmp
adc
dec
fisttpl
or
lods
add
stos
adc
test
inc
ficompl
inc
mov
cmp
cmc
mov
in
adc
or
xor
cmp
push
push
pop
xlat
sub
dec
push
fdivs
mov
mov
pop
mov
dec
je
ja
enter
cmc
inc
daa
xchg
imull
pushf
scas
stos
cld
outsb
rorl
sub
mov
dec
adc
mov
push
or
push
inc
pop
orl
scas
xchg
sbb
and
lods
aas
mov
or
mov
jb
cltd
mov
pop
pushf
scas
xchg
jnp
push
jecxz
clc
hlt
xchg
js
sahf
rorl
mov
mov
adc
fidivrl
repz
dec
ret
hlt
rcl
add
jg
mov
push
in
fdivrl
out
pop
cmpsb
cmp
pop
inc
and
in
lcall
sub
loope
in
ror
daa
jno
jbe
scas
push
mov
in
sarb
jae
mov
cmp
jg
jne
jae
ja
ss
inc
int
push
fcoms
dec
mov
sub
gs
add
sub
bound
cli
dec
int
or
push
daa
sbb
ljmp
repz
sti
push
push
int
fisttpll
jp
jp
sbb
sbb
sbb
xor
mov
pop
pop
sbbb
jg
mov
repnz
push
sub
or
inc
into
and
in
push
xor
dec
aad
in
push
in
test
pop
fnsave
aas
add
outsl
mov
mov
push
inc
fs
push
jge
mov
sub
sbb
inc
dec
js
lahf
subl
bound
arpl
imul
daa
repnz
jg
inc
popf
test
pop
sti
xor
int
inc
jbe
mov
mov
dec
dec
loop
dec
test
jnp
add
imul
leave
aaa
mov
shlb
movb
sub
push
sbb
stos
and
fisubs
jmp
sub
add
push
lods
int
lods
or
xor
inc
add
xor
jno
sti
ss
daa
ljmp
sar
cwtl
out
jno
insl
sub
insb
test
jg
shrb
mov
inc
in
pop
inc
test
aas
aam
sub
in
pop
mov
fcoms
cmpb
cmp
loopne
jnp
pop
stc
fucomi
sub
and
xor
fimuls
sbb
in
pop
inc
lcall
pop
repnz
int
add
xor
pop
jecxz
std
into
mov
outsb
sub
das
mov
addl
pop
rcll
xlat
repnz
adc
dec
cmp
jle
adc
push
xor
mov
inc
lret
mov
adc
cmp
lods
pop
cmp
jg
add
push
fidivl
pusha
xchg
pop
pop
test
add
aad
push
or
insl
loop
test
push
sbb
mov
jmp
rorb
dec
xchg
cmp
aaa
cltd
ret
in
cmp
in
fsub
jb
push
push
fwait
jbe
jb
in
ja
jb
and
push
scas
jnp
xchg
and
fwait
sub
lock
lods
push
dec
add
jl
inc
out
xor
lcall
into
xchg
les
scas
inc
and
xorb
scas
movsl
pop
lock
push
sub
dec
dec
sbb
fldcw
dec
sub
in
sub
mov
dec
popf
ret
pop
mov
add
int3
add
paddb
dec
fcoml
and
and
xor
js
flds
arpl
mov
mov
test
sub
jp
lret
mov
ss
xor
loopne
outsl
mov
es
movsb
test
dec
lock
lods
mov
push
lahf
cmp
out
mov
popa
lahf
notl
cmp
insb
shlb
out
mov
push
cmpsl
out
push
fisubl
and
sbb
dec
inc
shll
fnstcw
enter
adc
stos
push
into
fidivl
mov
nop
lods
lret
lret
repz
inc
leave
push
bound
ds
adc
andb
outsl
adc
movsb
pop
fwait
aas
cmp
and
jg
xchg
stos
punpckhdq
ja
and
jne
enter
scas
ds
rcrl
hlt
divb
cmp
into
dec
jg
jns
dec
and
mov
orl
cli
xchg
and
rorb
insb
push
jmp
mov
sbb
popl
jecxz
mov
lret
push
inc
push
popa
sbb
push
ret
or
pop
bnd
and
loop
lahf
and
lods
jecxz
pop
push
adc
sti
pop
push
mov
jge
test
xor
fldl
cmpsl
ret
test
jecxz
dec
add
fsubl
cmp
pop
fwait
daa
stos
andl
or
push
je
xor
aaa
xor
sahf
xchg
fldt
or
xchg
mov
loop,pt
push
sub
or
mov
sbb
in
xchg
decb
bound
and
pop
jnp
dec
lods
jnp
aad
jae
cmc
movsb
add
sub
movsl
cli
in
cmp
xor
jmp
adc
jae
sub
enter
cmpxchg
adc
pop
mov
in
adc
aaa
push
dec
inc
shlb
sbb
or
in
jnp
lahf
shlb
subl
sbb
aaa
cli
xchg
outsb
push
mov
aam
add
pop
lea
dec
cmp
sub
xor
push
push
xchg
mov
mov
dec
xchg
inc
xchg
jne
out
aas
mov
adc
fwait
das
stc
or
shll
inc
hlt
xor
xchg
or
addl
push
inc
loopne
push
lock
push
imul
ja
fnstenv
std
cltd
arpl
cmp
ss
lods
icebp
sti
inc
gs
andl
push
jo
mov
rolb
adc
mov
fimuls
inc
ljmp
pusha
jne
sbb
xchg
imul
or
lcall
aam
adc
lods
fnsave
mov
pop
aam
addr16
stos
imul
mov
lock
test
mov
fimuls
hlt
mov
imul
inc
sub
xchg
icebp
out
and
insb
test
jl
ret
insb
push
dec
sbb
mov
mov
stos
cmp
test
pop
sbb
jmp
mov
mov
daa
push
sbbl
fmuls
enter
and
jns
xor
out
addr16
fcmovbe
cmp
lahf
mov
pop
ss
stos
mov
leave
and
iret
fs
dec
dec
add
ja
mov
or
rolb
pop
cmc
andl
cld
mov
dec
mov
push
jmp
test
sbb
fbstp
xor
out
push
xchg
out
push
inc
dec
enter
xor
bound
scas
jmp
mov
xchg
and
out
aas
fwait
sbb
pop
popf
jg
and
adc
das
mov
repnz
push
mov
mov
scas
push
jae
ret
inc
out
mov
mov
jo
jle
call
in
sahf
clc
or
mov
inc
sarb
sbb
mov
jl
cmp
pushf
cmp
adc
nop
lds
jle
jl
and
leave
or
push
sti
push
je
dec
pop
mov
sub
mov
xchg
call
jo
xor
or
stc
dec
mov
sti
push
movsb
xchg
fsubr
mov
sub
dec
lock
arpl
xor
pop
push
stc
incb
cli
xchg
add
flds
cltd
fisubrl
je
mov
js
movsl
into
in
cmp
xchg
iret
pop
test
andb
loope
inc
xchg
pop
outsb
iret
inc
pop
jbe
xchg
add
dec
push
ficoms
sub
inc
sti
and
mov
pop
and
push
mov
aaa
xor
dec
daa
idivb
ja
in
movsb
inc
sbb
mov
add
dec
in
pop
xchg
mov
pop
outsl
mov
cld
push
iret
iret
cmc
sbb
fisubrl
add
clc
add
cmp
rcrb
hlt
mov
xchg
xchg
in
leave
xchg
jno
or
jae
push
scas
dec
and
add
xchg
mov
mov
xor
fsubl
mov
xchg
mov
into
shl
in
and
call
sub
jmp
out
adc
or
xchg
int
das
or
adc
mov
aaa
lea
or
repz
dec
out
fwait
sbbl
dec
or
pop
sub
je
stos
lcall
negb
or
dec
mov
lahf
cmc
or
mov
andl
outsb
mov
or
add
cs
mov
adc
inc
bound
test
mov
pop
push
push
or
shll
push
jl
popf
mov
fidivl
inc
or
popf
jo
cmp
and
lahf
testl
stc
pushf
xchg
fcmove
dec
ljmp
pop
xchg
jnp
test
xchg
call
cld
icebp
shl
out
fwait
mov
push
fsubrs
xlat
test
xchg
jbe
or
imul
or
sub
je
push
ja
xchg
xlat
jbe
leave
cmp
mov
fstps
popf
rcrl
fs
push
sub
aas
cmp
add
fmul
push
add
mov
sahf
aas
pop
test
repnz
js
icebp
fstpt
mov
xchg
mov
sbb
js
mov
mov
call
fdivp
hlt
mov
lds
mov
sub
movsl
inc
inc
adc
inc
push
mov
lock
in
sahf
push
incb
mov
out
out
outsl
mov
loopne
stc
loop
sub
jmp
adc
sub
pop
and
movsl
ja
arpl
pop
into
jb
mov
jge
pop
aaa
xorb
mov
adc
sub
lds
push
mov
popa
nop
mov
cmp
loopne
xlat
test
pop
adc
fs
mov
clc
mov
loope
and
or
ret
pop
aam
movb
sub
int3
out
pop
jnp
sarb
scas
pop
cmp
stos
pop
hlt
xor
inc
js
fistl
pop
mov
out
test
lods
imul
cli
arpl
mov
or
jne
sar
xchg
add
sub
mov
enter
mov
into
icebp
aas
push
andb
lods
insl
test
sahf
scas
mov
adc
add
jecxz
out
push
inc
adc
jno
lret
and
jg
fsubr
adc
push
pop
mov
into
js
dec
pusha
idivl
pop
cmp
pop
mov
aas
movsb
sub
xchg
sub
add
adc
sahf
imul
mov
mov
push
ret
fs
adc
popl
and
jb
daa
sub
sub
sub
nop
mov
dec
test
and
loopne
pop
mov
das
sbb
sub
cmp
fstl
mov
ds
jo
mov
fs
ss
movsb
jmp
adc
pusha
mov
rorb
jmp
fwait
sub
cmp
sub
or
jae
push
or
mov
jnp
ljmp
out
cmc
out
cmp
mov
push
out
cmp
fadd
arpl
loope
sbb
sub
sbb
jno
lods
sbb
loop
rcr
mov
subl
push
cwtl
mov
repz
or
mov
push
or
out
or
fiadds
mov
xor
es
fcom
or
clc
adcb
cli
adc
lahf
fwait
xor
std
pop
cmc
neg
es
dec
adc
stc
cld
push
sub
jge
std
add
test
add
adc
mov
ds
lahf
and
inc
mov
aaa
out
rorb
xor
cmpsb
lods
dec
sbb
mov
push
push
xor
add
jmp
inc
inc
popf
stos
stc
scas
cmp
stc
and
es
jmp
jae
mov
xchg
lods
pop
sarl
inc
sub
xor
jmp
mov
ljmp
inc
push
push
psllw
movsl
scas
push
pop
pop
adc
shlb
cwtl
pusha
push
sub
stc
or
mov
add
sti
xchg
mov
cmp
jno
dec
cld
push
iret
imul
dec
int3
arpl
xchg
mov
ret
hlt
cmpsl
sub
bnd
outsl
jae
pop
movsl
mov
cli
mov
sbb
mov
loopne
mov
fisubrl
jecxz
js
sbb
repnz
jle
mov
add
inc
xchg
pop
pop
mov
cld
mov
flds
jo,pt
lahf
jno
roll
sbb
sbb
mov
scas
mov
mov
inc
dec
add
jbe
and
and
mov
daa
dec
adc
scas
sbb
and
push
and
dec
pusha
daa
dec
jb
xlat
push
das
rcll
xchg
push
mov
pop
xor
xor
nop
adc
filds
mov
push
mov
int
andb
pushf
sahf
xor
add
scas
jns
or
push
lods
pop
push
in
inc
repz
ret
mov
vpackssdw
push
imul
fcoms
ljmp
mov
popf
cmpsl
dec
dec
sbb
ljmp
enter
shlb
outsb
sbb
mov
xchg
sti
inc
test
mov
mov
mov
dec
push
stc
js
movsb
sub
insl
mov
cmp
mov
inc
ret
jg
mov
imul
pop
or
xchg
mov
dec
add
adc
push
out
inc
lods
mov
dec
xor
and
enter
mov
add
pop
or
fdivrs
addb
push
outsb
bound
add
mov
ret
out
cmpl
jo
lds
lock
jecxz
adc
repz
test
loope
jl
mov
dec
push
je
sbb
cmpsl
gs
mov
jle
jp
insb
fwait
jg
mov
cmp
jnp
sbb
xchg
push
ret
sub
sbb
mov
mov
ret
cmpsl
xor
aaa
xchg
ret
ljmp
ror
and
scas
lock
insb
push
xchg
sbb
mov
mov
lcall
and
cmpsb
cmp
mov
in
xlat
add
dec
xor
sub
and
and
inc
dec
pop
xchg
lea
scas
mov
data16
inc
pop
cmpsb
cmc
ss
daa
enter
cmp
pop
lahf
add
pop
stos
sub
xor
sbb
push
sbb
stos
jecxz
pop
pushf
mov
stos
and
jle
rcrb
pusha
push
pop
pop
sbb
and
std
sahf
lods
adc
dec
add
push
push
jge
and
inc
sbb
or
test
mov
fs
mov
dec
xchg
outsl
ret
xor
and
and
pop
xchg
xchg
shrl
and
lret
lahf
adc
adc
testl
movsl
mov
icebp
popf
jae
out
in
jge
add
leave
insb
push
addr16
je
outsb
rcr
and
push
pop
xchg
xor
sahf
arpl
into
and
add
in
mov
cmp
sub
mov
movsb
out
scas
pop
ret
repnz
mov
enter
fsubs
inc
lret
mov
gs
cmp
addr16
add
loopne
inc
cs
mov
xchg
testl
aam
fwait
mov
pop
sti
hlt
test
in
movsb
mov
in
jg
and
ret
jmp
repz
lahf
jbe
clc
cmp
add
in
adc
rolb
test
mov
cmpsb
je
xor
and
lea
out
lret
fnsave
mov
jg
jnp
cmp
mov
enter
add
stos
jnp
lcall
adc
in
mov
jae
push
movsl
or
pusha
aas
rolb
arpl
mov
test
sbb
test
fs
stos
inc
mov
mov
adc
sarb
add
push
shll
aas
outsb
push
hlt
adc
cmpsl
les
xor
adc
mov
int3
js
inc
jno
cltd
adc
popa
negl
mov
aam
bound
push
ss
repz
fs
xor
cmpsb
iret
push
mov
cmp
dec
inc
inc
xor
daa
xchg
jbe
dec
pop
xorl
fiadds
jmp
les
jg
mov
icebp
dec
jo
insl
inc
test
mov
std
xchg
sub
push
pushf
fucomi
mov
lret
xchg
xor
repnz
sbb
int
fwait
pop
jecxz
stc
adc
loopne
ds
test
mov
or
mov
sbb
loop
sub
inc
outsl
jo
or
stos
add
jp
arpl
inc
out
js
jl
push
and
rolb
mov
sbb
mov
ljmp
adc
dec
fwait
cmpsb
std
pop
addr16
pop
hlt
xor
xor
push
push
inc
jo
inc
shl
inc
in
xor
in
xor
jg
pop
loop
xchg
xchg
xor
testl
cmp
test
pop
jns
mov
mov
inc
adc
lods
add
push
hlt
fnstenv
xor
dec
jno
mov
dec
jae
jmp
mov
in
arpl
push
lods
fcompl
and
pop
ljmp
jecxz
mov
fdivp
cld
lcall
push
mov
cmpsb
sbb
shll
or
jl
call
insl
dec
sub
dec
sub
inc
mov
jne
dec
fisttpll
and
repz
jge
mov
fisubl
push
adc
mov
xlat
mov
mov
fcoml
test
inc
or
cmp
loop
add
and
in
outsl
lods
mov
js
aam
mov
pop
lcall
into
das
fsubp
xor
ret
data16
mov
adc
mov
je
subb
lods
xor
mov
mov
insl
mov
movl
outsb
cmp
jae
rcrl
mov
pushf
pop
cmpsl
fcomps
sub
pop
jle
test
xor
cmp
or
movsb
pop
es
xor
add
pop
jle
and
sbb
dec
push
push
sar
fyl2x
cmp
inc
and
mov
test
aam
call
push
repz
mov
enter
fstpt
outsl
xorl
ljmp
into
jne
mov
loopne
mov
xchg
xchg
push
aam
je
loope
dec
fstpt
or
push
xlat
push
push
cmc
mov
icebp
mov
mov
ss
xchg
add
lcall
mov
fimull
pop
scas
adc
js
sub
sbb
cmpsb
dec
imul
cmp
data16
or
sub
and
mov
lock
imul
xor
aad
jge
aam
aas
inc
mov
inc
adc
mov
add
or
mov
test
pop
pop
mov
sub
aad
mov
mov
mov
jecxz
add
xchg
mov
in
fnstsw
push
jnp
cmp
push
stos
push
imul
movsb
fwait
lea
int
inc
in
arpl
jae
adc
sub
and
xchg
jne
aad
mov
jns
jbe
repz
addr16
and
mov
out
pop
cmp
shrb
hlt
lahf
mov
dec
push
mov
fst
jae
push
call
sbb
das
lret
lods
rol
orl
pop
add
lea
mov
ret
sbb
outsb
push
repnz
mov
xchg
add
shl
push
lods
cmp
cmp
roll
dec
mov
iret
sub
mov
inc
aam
add
and
popf
xor
idiv
and
mov
ds
xchg
sub
or
pop
insb
cli
inc
fsubl
mov
fs
pop
sub
repnz
inc
jae
imul
popf
push
lret
icebp
imull
lods
push
or
je
cmp
jmp
scas
jl
mov
mov
ljmp
sbb
insb
pop
stos
iret
in
pop
xchg
fs
sbb
xor
cli
imul
ds
mov
dec
addr16
cmc
push
aaa
cmc
out
int3
stos
mov
cmp
movsb
lods
nop
imul
fwait
test
lea
pop
ja
add
out
push
sub
pop
xlat
ret
mov
nop
push
ds
insl
inc
jg
mov
cmpsb
in
fstl
pop
xor
icebp
leave
loop
pop
xor
cmp
stos
sarl
popf
pop
jae
adc
adc
mov
std
xor
xor
int
add
test
gs
inc
das
mov
xor
jmp
outsl
and
repnz
mov
leave
sbb
cs
rcr
pop
jnp
mov
iret
lods
jp
aad
add
pop
jge
inc
dec
mov
bound
pop
pushf
std
outsb
lret
lret
push
push
ljmp
pop
pusha
push
cltd
addr16
inc
rorl
jmp
movsl
inc
jo
loopne
cmpsl
out
pushf
in
lret
andl
ss
xchg
cmp
cmp
and
cmp
push
push
imul
xchg
xchg
fdivl
xchg
xchg
xchg
les
stos
xchg
mov
cld
insb
mov
aaa
mov
push
push
or
data16
add
push
mov
cmp
test
lret
pop
dec
lahf
pop
in
test
cmc
pop
stos
dec
bound
inc
dec
jle
mov
in
std
jno
out
sbb
push
inc
mov
fldcw
push
popl
in
bound
out
jmp
xchg
mov
clc
jb
popa
out
lret
test
jo
fucomp
jg
mov
adcl
jecxz
or
jg
popf
std
jo
sub
es
fdiv
ss
mov
jl
mov
fbstp
imul
pusha
sub
cmp
std
and
pop
movsl
int3
loopne
jbe
fs
mov
sbb
nop
mov
adc
nop
int3
arpl
pop
lds
repz
hlt
and
call
fimull
pusha
test
push
push
and
ljmp
popf
or
aad
decl
pop
movsb
cmp
add
push
pop
aaa
sub
out
add
mov
icebp
pop
jbe
das
je
pusha
add
or
aad
pop
cld
push
lods
jmp
mov
xor
ss
and
out
lods
xchg
test
shlb
cmpsb
sub
out
xor
xor
jne
lcall
xchg
push
js
sbb
sbb
inc
cld
pop
mov
sbb
scas
arpl
fcomip
cmc
dec
xor
or
outsl
sbb
pop
xchg
push
inc
fcoml
jb
pushf
pop
divl
test
dec
fists
fcmovnb
pop
mull
pop
pop
mov
sub
adc
ss
fldenv
mov
and
sarb
jb
dec
pop
scas
aas
loope
xchg
dec
dec
fnstcw
aad
sahf
ret
inc
lds
push
inc
mov
or
in
inc
arpl
lods
lea
jb
stos
mov
sbb
adc
adc
push
fldl
push
or
das
out
mov
lret
jbe
fsubl
sbb
ljmp
out
push
jbe
pop
scas
inc
cmp
cmp
mov
arpl
adc
addb
cmp
movsb
rcl
ljmp
mov
ret
pop
adc
inc
inc
mov
cld
in
add
inc
xchg
or
shll
and
push
out
nop
adc
sub
sub
mov
adc
jmp
push
cltd
inc
inc
out
adcb
sub
ucomiss
aas
lods
mov
clc
arpl
rcrb
mov
mov
cwtl
jp
ret
popa
and
lcall
adc
inc
xchg
mov
and
ret
sahf
dec
jo
dec
mov
or
test
cmp
add
daa
rcrl
and
addl
mov
and
rcr
add
hlt
mov
sbb
lea
push
ret
xorb
push
icebp
mov
mov
fstps
push
add
mov
aaa
es
filds
dec
mov
repz
shl
inc
outsl
imul
outsl
mov
mov
mov
mov
fnstcw
std
xchg
mov
add
filds
loop
aas
mov
fs
mov
nop
test
dec
sbb
negl
mov
push
mov
movsb
jge
pusha
icebp
dec
dec
mov
dec
mov
mov
rolb
sub
fwait
pop
imul
dec
loope
decl
xchg
xchg
push
mov
dec
jle
adc
jmp
sbb
dec
push
mov
mov
inc
and
mov
xchg
dec
sub
insl
or
cltd
dec
mov
and
xor
stc
adc
loopne
lahf
outsl
dec
lahf
pusha
jl
gs
sahf
filds
push
mov
sbb
mov
mov
stos
cwtl
repnz
push
dec
adc
mov
loope
mov
pop
incl
ret
in
int
ljmp
out
cmpsl
jp
lret
pop
loopne
push
xchg
cld
std
cmp
xchg
dec
adc
jmp
and
imul
jno
pop
inc
imul
xchg
ror
mov
dec
jnp
push
mov
mov
pushf
inc
aaa
inc
push
out
sahf
imul
dec
xchg
jle
jecxz
cltd
aas
imul
mov
mov
shll
adc
dec
mov
sub
lcall
mov
adc
ror
jo
mov
lock
adc
cmpl
outsl
mov
and
test
cmp
mov
mov
or
push
pop
dec
out
lcall
push
cmc
mov
imul
push
jmp
mov
out
jb
mov
adc
stc
mov
fxam
iret
popw
sti
inc
lret
adc
push
pop
scas
mov
and
push
jb
imul
xchg
test
outsb
loope
inc
sbb
xor
test
inc
lcall
pop
ficoms
fmull
or
mov
xor
fstpl
xor
push
clc
subl
stos
icebp
xchg
pop
and
sarl
adc
jecxz
sub
or
mov
jg
cmp
cmp
mov
cmpsl
sar
or
hlt
lods
fwait
cmpsl
rclb
pop
insl
imull
add
pop
data16
ds
gs
jle
or
adc
sar
pushf
lods
add
popa
and
inc
fidivs
fwait
outsb
mov
jg
mov
hlt
fldcw
sub
outsl
repnz
sti
cmp
mov
movsb
mov
inc
mov
fiadds
out
insl
mov
arpl
pusha
popa
lret
add
mov
sub
push
jmp
bound
jmp
add
pop
ret
xor
mov
sub
ljmp
neg
mov
adc
adc
xor
sbb
out
dec
fwait
and
lret
adc
arpl
mov
aad
push
mov
push
shrl
mov
jle
push
ja
stos
pop
and
rorb
ja
xchg
test
lret
mov
notb
jne
push
pop
push
out
xchg
pushf
mov
icebp
aam
aas
in
adc
mov
sahf
gs
fistpl
mov
stc
je
sbb
push
inc
repz
bound
mov
call
lahf
push
insl
dec
dec
sbb
sahf
insb
aaa
into
cmp
fsts
or
clc
jg
dec
cmc
jns
daa
ljmp
jp
sub
insb
movb
jbe
int3
leave
lahf
push
inc
loope
jb
andb
xor
roll
xor
sahf
push
cs
sbb
push
test
mov
jne
inc
orl
insb
mov
inc
scas
popa
shl
aam
push
xchg
lods
das
movsb
cmp
inc
out
dec
ret
sti
xchg
aaa
ss
mov
and
mov
cmp
mov
fmul
fistl
pop
xor
sbb
stc
xor
js
std
mov
stc
push
dec
fsts
sbb
sahf
aad
iret
out
pop
sarl
jns
orb
or
dec
sahf
xor
cmpsb
movsb
jmp
push
dec
xor
mov
inc
call
add
pop
scas
imul
or
jge
push
inc
testl
and
jmp
mov
jae
pop
pop
adc
lods
mov
add
cmp
lahf
test
jne
push
or
bound
push
pop
adc
stc
je
icebp
inc
stc
mov
outsb
clc
jle
stos
xor
leave
mul
sub
fwait
cld
sbb
inc
inc
enter
stos
push
or
mov
stc
iret
push
push
xchg
push
add
pop
mov
add
jns
dec
inc
mov
dec
dec
pop
pusha
shrl
or
inc
cwtl
jae
push
dec
mov
xor
jne
cmp
mov
xor
inc
cmc
enter
pop
push
cwtl
arpl
jb
mov
adc
imul
repnz
test
dec
int3
jno
mov
leave
fldenv
sbb
rcr
push
push
cmp
mov
and
fisubl
push
repz
repnz
lahf
pusha
jl
hlt
mov
cmp
aad
mov
jecxz
or
mov
test
mov
pop
fdivl
jmp
cli
daa
je
xchg
xor
icebp
ret
ds
push
mov
and
cmp
jecxz
mov
pushf
dec
adcl
pop
aaa
push
sbb
arpl
push
ds
mov
fimuls
mov
cmp
sbb
stos
jle
int
out
arpl
dec
push
repnz
dec
jno
dec
push
lods
mov
fsts
or
sub
sahf
cpuid
out
jle
jle
add
mov
mov
in
mov
fwait
xor
adc
ljmp
cmp
xor
jmp
inc
pop
push
mov
out
mov
pop
daa
mov
dec
iret
out
push
idivb
mov
mov
jge
testl
adc
fnstenv
hlt
call
jb
ljmp
imul
popf
mov
out
mov
repz
cwtl
outsl
push
lret
outsb
inc
es
pop
fs
test
mov
jmp
sti
movsb
xchg
sub
pop
lret
pop
mov
sahf
clc
mov
inc
fdivs
lods
mov
push
pop
loop
fadd
les
or
mov
cmpsl
inc
pop
ficompl
xchg
sub
sbb
rorb
out
jge
cld
xor
mov
push
sbb
push
sti
sub
cwtl
jg
stc
pop
popf
and
popa
pop
lods
inc
psllq
dec
xor
popl
aam
jl
ftst
lods
pop
movl
push
xor
pop
mov
mov
jge
cmp
clc
iret
inc
and
aaa
mov
hlt
mov
fdivrl
xor
rorl
out
mov
mov
xchg
enter
cmc
in
jno
ss
lods
aaa
jno
xor
xor
sub
mov
aaa
jo
movsb
addr16
test
push
in
std
sub
adc
jae
cs
add
test
daa
and
lahf
movsl
xchg
fcmovnb
fiaddl
and
loop
mov
xchg
fs
ds
lods
loopne
pusha
ljmp
test
or
imul
leave
xchg
out
mov
mov
insl
insb
addr16
imul
insb
nop
xchg
sahf
fcoms
jle
fisttpll
sbb
std
mov
sbb
push
cli
sahf
repnz
or
fcmove
lret
test
xchg
fidivl
lahf
stos
lods
inc
jnp
test
mov
add
js
jg
ss
cmc
mov
mov
pop
in
nop
pop
notb
ljmp
inc
add
cmpsb
and
int
adc
pop
out
fsubp
mov
js
stc
movsl
loopne
scas
adc
inc
mov
or
sub
fidivl
pop
cmc
mov
jns
sub
lcall
and
mov
subb
jmp
jge
rcl
dec
scas
rcl
icebp
push
cltd
and
jb
xor
filds
call
or
sub
dec
mov
push
insb
fidivrs
test
mov
test
ds
inc
lret
pop
fsubrs
sub
iret
push
mov
mov
add
pop
inc
adc
adc
or
ljmp
es
mov
jae
push
sub
mov
negb
dec
stos
shl
jo
pop
lods
push
lods
mov
aas
push
push
fistpll
mov
sub
mov
mov
outsl
mov
dec
pop
cmp
xchg
add
xchg
movsl
data16
in
les
xor
mov
int
cmpsl
cmp
jecxz
jbe
pop
add
or
decb
lahf
and
dec
jmp
negb
sbb
or
mov
clc
loope
cmp
leave
sbbl
mov
mov
adc
sub
fwait
ljmp
sub
pusha
mov
add
pop
push
ss
xchg
jg
push
mov
pop
addr16
jl
cmc
sub
jmp
add
jo
mov
xchg
outsl
ret
aad
mov
insl
inc
cmp
pop
or
sahf
aam
cld
mov
xor
fldl
mov
pop
mov
xchg
or
aaa
mov
xor
in
xchg
in
add
cs
fbld
arpl
into
loop
push
mov
jns
cs
or
xchg
jge
sti
xchg
xchg
adc
sbb
mov
dec
add
jo
jb
xor
jns
pop
mov
xchg
inc
loopne
aam
push
popf
cmc
ljmp
cmpsb
and
sarl
jae
clc
aam
mov
shlb
cmpsl
pop
xor
negl
rcl
lock
aas
test
jo
fisttpll
shl
dec
mov
cmp
imul
sub
shr
pop
lret
rorb
push
mov
enter
test
shl
jne
xchg
das
push
mov
mov
mov
aam
loop
jl
lret
enter
adc
push
cmpsb
ds
jb
in
sbb
movsl
ret
sub
push
fwait
push
cmpsl
xchg
sub
out
shll
mov
push
test
jg
outsb
in
jns
bnd
ja
decb
cwtl
xchg
push
ret
loopne
mov
jmp
jg
insb
fistps
adc
loope
lea
xchg
andl
mov
dec
cmp
pop
mov
aaa
cmp
xchg
popa
add
es
divl
jl
dec
xor
out
fcoml
pusha
fiadds
cmp
jge
jg
jo
ret
jge
cmc
ljmp
scas
inc
cltd
test
cmc
jae
jbe
repnz
sub
jns
shlb
dec
sbb
aam
jg
lahf
and
inc
jmp
push
outsb
push
imul
jno
stos
aaa
jne
fistps
outsl
in
roll
int3
imul
sub
fidivl
mov
mov
cmpsl
mov
mov
fisttpl
es
push
std
rolb
sub
cmpsb
xchg
mov
sub
pop
pop
xor
cmpsl
dec
jle
inc
jl
in
sub
lcall
aas
or
mov
cli
push
mov
mov
cmp
mov
mov
pop
xorb
mov
popa
clc
dec
mov
jg
pop
push
and
dec
push
in
push
dec
mov
mov
pop
fwait
inc
cwtl
scas
jmp
sub
aaa
decl
fldl
cli
push
sbb
sbb
lock
push
gs
arpl
mov
psubw
movaps
sub
mov
xorb
pop
cmp
ret
sub
imul
in
scas
mov
testl
movhlps
pop
push
adc
jp
and
jmp
lcall
jmp
gs
add
mov
movsb
ljmp
pop
sub
cmpsb
add
inc
frstor
les
mov
push
popf
lahf
lea
cli
xor
push
movl
or
bound
stc
out
stc
lret
mov
adcb
mov
sbb
rorb
xor
aam
lock
popa
mov
rcl
call
scas
and
je
int
pushl
cmpsl
add
mov
jnp
scas
inc
fwait
cmp
push
imul
fidivl
rol
shl
std
push
pop
pop
jno
mov
pop
ss
xchg
je
test
mov
hlt
stc
popf
cmp
push
jbe
ja
rcrb
mov
adc
inc
adcl
inc
or
cmp
movsb
nop
daa
xlat
mov
scas
adc
test
jge
enter
adc
lahf
out
push
inc
lods
lods
cmp
jmp
push
jmp
loop
jmp
aad
fisubl
mov
push
fsubr
fidivrs
cmpsl
cmp
into
int
add
jmp
ret
jb
dec
sub
mov
jp
mov
or
out
mull
push
shll
jle
decb
das
sbbl
dec
imul
sub
jge
dec
jb
movsl
es
sub
notl
inc
push
xor
into
adc
ja
cmp
mov
repz
push
cmp
mov
jno
sarb
fbstp
jle
adc
int
leave
mov
test
imul
fldenv
pusha
test
mov
dec
push
dec
repz
test
test
cwtl
stc
ja
jp
fstpl
repnz
mov
pop
sub
dec
adc
loopne
xor
imul
outsb
jge
add
mov
fsts
push
addr16
lret
mov
jno
pop
mov
cmpsl
jg
adc
stos
fstpt
std
and
bound
movsl
inc
es
or
sbb
xchg
in
sbb
xor
jo
inc
dec
jno
clc
in
lret
xor
sbb
call
jmp
movsl
mov
mov
pop
scas
inc
repz
ljmp
xor
push
out
xchg
ja
les
xchg
ljmp
jb
push
xor
adc
in
repnz
gs
push
in
add
cli
jo
add
xchg
push
push
subb
sub
pop
or
jmp
pop
test
sub
mov
jae
fs
pop
inc
jbe
mov
pop
addb
mov
adc
jmp
push
sahf
inc
aas
inc
jp
out
xor
cmp
mov
mov
mov
dec
add
pop
repz
pushf
mov
jo
mov
stos
xor
adc
and
dec
add
aas
dec
out
and
mov
mov
add
xor
sbb
cmp
sbb
addr16
and
jle
and
imul
imul
ret
rorb
sbb
sti
xchg
imul
out
stos
add
xor
jbe
mov
push
xchg
sub
and
mov
sbbl
std
adc
adc
in
xor
into
fwait
sub
pop
add
repnz
or
pop
cmc
pushf
sub
xchg
jne
es
and
push
mov
in
cmp
mov
shrb
into
jo
mov
cmpsb
hlt
inc
fldenv
aam
adc
pop
fiaddl
or
call
out
stc
mov
insl
xchg
movsb
aaa
mov
jg
sbb
pop
scas
ja,pn
xor
mov
dec
test
leave
in
mov
mov
lcall
pop
das
dec
mov
ret
push
mov
fs
sahf
call
scas
loope
xchg
jns
xlat
test
xchg
jecxz
inc
cmpsw
ds
sub
pop
and
mov
imul
mov
mov
sbb
jb
push
ljmp
adc
movsl
adc
jge
cwtl
out
cmpsl
sahf
jnp
fsubs
shrl
push
loop
cmp
jg
push
cmc
ja
xor
pushf
push
scas
sub
sahf
inc
getsec
outsl
shrl
stc
jbe
inc
and
adcb
imul
aad
xor
or
jo
cwtl
adc
or
scas
cmp
fisubrl
lock
jge
scas
xchg
popa
mov
lcall
sbb
sar
add
sbb
loope
pop
push
sbbb
pop
mov
push
add
insl
push
add
sub
inc
imul
mov
jne
pop
addr16
xchg
adc
xchg
add
ja
out
mov
jns
cmp
push
fwait
mov
out
cwtl
dec
nop
out
mov
inc
movsb
rol
lret
jl
cmp
inc
cmp
mov
mov
push
mov
mov
jg
lock
call
sub
jl
dec
fisubrl
ficoms
shll
push
fdivr
mov
icebp
push
repz
mov
fimuls
cmp
sub
push
dec
pop
inc
cmc
mov
imul
xor
mov
fdiv
mov
inc
fldl
out
cmc
sbb
xor
cmp
ret
movsb
inc
sbb
pop
push
fldt
ja
cmpsl
int3
inc
int3
cltd
push
adc
stos
cltd
outsl
sti
loope
mov
cld
inc
mov
jbe
push
add
and
xor
dec
iret
cmpsb
xor
push
ljmp
jmp
bound
sahf
xchg
dec
aam
popf
ss
ja
mov
mov
add
in
jne
sbb
xor
jae
xor
scas
mov
fcmovnu
jo
push
dec
sub
cmc
adcb
bound
ss
cwtl
cmpsb
sbb
imul
sahf
inc
push
ljmp
ljmp
push
sbb
insl
mov
imul
cwtl
and
and
lods
inc
jno
fidivl
adc
es
and
fnstcw
cmp
sbb
jg
mov
push
cmp
repnz
jge
jo
or
out
lahf
sub
and
pop
sti
dec
or
jl
lahf
lret
pop
jmp
or
in
movsb
cwtl
out
pop
cmc
mov
and
loopne
add
and
mov
aas
leave
mov
mov
movsl
xor
dec
arpl
xchg
add
jl
cmp
ds
mov
or
in
clc
pop
daa
aaa
test
push
fcmovnb
addr16
test
add
and
mov
pop
movsb
or
lret
mov
mov
lahf
dec
cmp
out
jae
nop
or
cmp
call
stos
cmc
and
inc
loopne
xor
pop
xchg
jne
sbb
jmp
add
xor
aam
sbb
dec
sbbl
out
dec
outsl
add
xor
nop
shl
icebp
pushf
xor
cwtl
xlat
xchg
mov
int
movsb
movsb
loop
push
push
js
xor
push
popf
push
cmp
add
cmpsb
and
xchg
cld
stc
push
mov
test
and
adc
dec
loopne
mov
addr16
pop
lcall
jne
and
lods
fmull
push
insb
sbb
mul
or
loop
daa
mov
shrl
hlt
clc
cmp
xor
jp
xchg
xor
pop
sbb
jbe
stos
stos
es
adc
jae
pusha
enter
call
fs
shl
stc
sti
push
lcall
in
stos
mov
shll
test
add
rorb
jmp
cmc
sub
and
xchg
fyl2xp1
mov
addr16
pop
mov
loope
mov
in
xlat
shl
cmp
jmp
cmp
dec
pop
fchs
in
push
push
mov
sbb
stc
bound
and
jns
xchg
add
pop
sbb
pop
jns
xchg
sahf
roll
mov
or
inc
cmp
xlat
aad
outsb
inc
cld
aaa
sti
mov
in
or
neg
jb
or
lret
addr16
cmp
jge
clc
sar
pop
pop
in
js
sarb
jns
or
push
mov
lcall
jae
leave
and
into
push
insb
lds
add
push
roll
test
incb
ret
sbb
insl
push
inc
fadds
test
fldt
pushf
fwait
push
int3
jg
xor
mov
ja
lds
inc
lret
mul
xchg
enter
xlat
mov
add
push
jecxz
movsl
les
xchg
xchg
repz
mov
and
loope
pop
cmp
imul
sub
in
fucom
and
out
mov
repnz
adc
or
fidivrl
lods
ret
js
stc
into
ja
pop
repz
jmp
xor
mov
push
dec
insb
jle
mov
stc
mov
sbb
aad
xor
ret
inc
lea
gs
mov
jne
shrb
outsb
xor
fldt
jbe
das
ret
pause
or
fistps
outsl
iret
sbbb
mov
push
and
jae
mov
hlt
in
dec
fs
cmp
pusha
sahf
mov
mov
dec
cmp
fistps
into
mov
mov
cmp
pop
ret
ret
xor
mov
xor
arpl
cmpsl
dec
pop
push
mov
inc
jo
dec
aaa
cmpsl
sub
jge
add
push
ds
and
and
insl
sub
stos
adcl
fxtract
cmp
push
xchg
mov
out
xchg
or
cmc
int3
ja
pop
filds
aas
or
ret
fsubl
lret
icebp
icebp
loopne
pop
and
imul
iret
mov
aaa
out
sbb
xor
cmp
mov
adc
jae
stc
or
dec
pop
mov
pop
xchg
imul
sbb
mov
gs
xchg
pop
mov
xor
push
push
loope
xchg
pushf
pop
pop
les
hlt
sub
mov
cmp
and
push
inc
repnz
fwait
sti
mov
test
adc
mov
xchg
mov
lahf
or
addr16
rcll
pop
cmpsb
cmpsl
dec
ret
mov
sub
mov
fmull
scas
imul
out
push
push
cmc
mov
movsb
adc
push
movsl
add
jl
out
lcall
fisubs
cmc
aaa
imulb
call
sar
out
cltd
aam
cmp
cwtl
jb
sub
subl
mov
fsubr
or
inc
incb
in
inc
movsb
xchg
ret
aad
retw
cltd
scas
add
out
leave
test
adc
xchg
mov
adc
adc
sub
std
or
adc
cwtl
push
mov
mov
out
je
rclb
or
add
xchg
sbb
repz
inc
imul
dec
lahf
out
mov
jnp
dec
add
mov
loopne
xchg
lock
rclb
mov
out
and
clc
mov
mov
cmpsl
adc
stos
push
jmp
lods
xchg
sub
nop
add
sbb
pop
int
mov
pop
dec
mov
enter
ret
hlt
xchg
inc
push
mov
arpl
lds
push
xor
fwait
push
int
js
dec
mov
dec
cli
or
test
pushf
data16
cmpsb
push
push
imul
sbb
fmull
cmp
pop
lods
ret
inc
jae
xchg
cltd
add
cmc
add
ljmp
mov
jb
and
lock
xchg
dec
jae
test
loop
daa
out
sbb
stc
into
pop
dec
sbb
xor
and
enter
or
enter
mov
dec
cs
mov
out
out
hlt
arpl
js
dec
sub
xor
popf
mov
push
call
pop
je
lahf
movsl
jp
lea
push
notb
pop
ljmp
ds
xchg
fnsave
mov
test
xlat
outsb
cmp
je
jp
jae
imul
lea
pop
mov
std
jl
out
call
cmp
push
mov
push
adc
cmc
lret
fs
pop
xchg
test
js
jmp
repz
sub
sti
xchg
out
cmp
mov
mov
adc
loope,pt
mov
aaa
jl
je
inc
and
gs
xor
pop
in
cmpsl
ds
pop
mov
sub
cmp
loopne
mov
xchg
lret
aaa
xchg
add
push
repnz
fucomi
cld
push
inc
push
fimuls
ss
xor
mov
ret
add
mov
push
ret
insl
in
out
incb
push
sub
aaa
out
pop
cmp
bound
pop
jecxz
rcll
mov
mov
int3
pop
lahf
dec
add
jle
push
inc
outsb
jl
add
rcr
leave
fwait
dec
out
mov
jo
dec
add
xor
mov
test
std
inc
push
pushf
fisubl
bound
and
lods
ljmp
inc
rcrl
pop
lock
scas
scas
mov
push
push
jecxz
in
mov
out
out
mov
aad
and
fdivl
movsl
mov
mov
leave
cmp
inc
inc
dec
jle
dec
insl
ss
aad
aam
sbb
mov
pop
inc
cmp
clc
icebp
rclb
inc
sub
test
aaa
testb
push
sbb
jg
pop
stc
or
xchg
insl
and
scas
lods
sub
aaa
popa
cmpsb
jl
push
pop
jp
mov
insb
lahf
lret
mov
out
je
test
pop
inc
aaa
pop
inc
cs
xchg
shll
push
push
fidivrl
xor
jae
and
fistpll
adc
and
cltd
add
xor
sbb
pop
mov
cmp
push
icebp
pop
xchg
push
dec
push
notb
rolb
xor
cmpsl
cld
insl
out
lahf
cli
pop
cwtl
jge
mov
aas
mov
rol
jb
and
cmc
mov
mov
in
stos
xor
sbb
shrl
adc
pop
mov
std
sub
push
fbld
mov
mov
mov
adc
add
sbbb
dec
movsb
sti
stos
jns
movsl
rorb
dec
insb
or
jae
inc
rcrl
and
push
js
ret
cmp
fisttps
jns
dec
adc
inc
inc
shrl
mov
push
jo
clc
sarb
xchg
std
or
aad
push
push
loope
mov
mov
mov
movsb
push
pop
mov
mov
ljmp
xchg
pop
cmc
and
in
push
push
cmpsb
lock
adc
inc
or
jp
je
jne
xchg
xchg
fildl
jg
popf
test
xchg
adc
adc
insb
xchg
push
jae
mov
cld
fneni(8087
pop
cwtl
mov
loop
jno
or
daa
je
push
aas
sarb
repnz
data16
aad
cmpsl
cmp
xor
inc
mov
lahf
test
jl
movb
call
mov
fwait
jge
sub
sub
dec
push
pop
mov
mov
mov
pop
pop
jnp
cmc
inc
mov
loop
lret
cmp
mov
jns
add
idivb
lcall
jbe
cmpsl
call
cmp
clc
jecxz
dec
lcall
std
xor
das
cmp
jns
aaa
aad
jle
fstpl
imul
lods
stos
das
pop
cwtl
aad
test
cli
inc
shrl
pop
scas
leave
in
in
in
popa
ss
stos
mov
sti
test
stc
push
mov
mov
jno
andl
repz
lret
dec
aad
sub
dec
stos
mov
dec
loopne
mov
addr16
pop
inc
inc
cwtl
add
ficompl
loop
and
outsl
hlt
adc
or
loop
xorl
inc
push
xchg
insl
divb
ljmp
mov
push
lods
fiadds
mov
xlat
jo
ror
out
inc
cmpsb
lret
dec
sub
push
sbb
repz
cld
jg
inc
fwait
dec
pop
int
insl
add
mov
lcall
cwtl
scas
dec
jl
movsb
cmp
push
mov
pop
pop
adc
test
pop
mov
mov
out
sub
jg
in
push
xchg
xchg
popa
fcoml
nop
jmp
xorl
mov
idiv
daa
or
pushf
in
movsl
loop
pop
mov
lcall
and
jae
icebp
adcb
out
out
pop
mov
mov
addr16
mov
dec
lret
xchg
push
inc
sbb
rol
cmp
mov
loopne
int3
xor
lds
or
pop
out
or
out
jbe
test
js
into
jne
push
and
cmpsl
ds
mov
clc
xor
mov
repz
mov
lahf
xchg
rcll
xchg
sbb
and
lea
filds
jb
lods
div
in
andl
push
es
ficoms
lods
push
adc
fldl
dec
mov
lods
cmp
and
repz
push
add
sahf
sub
lods
add
pop
fwait
outsl
inc
int3
push
mov
out
jp
pop
aaa
outsb
mov
or
es
adc
mov
mov
ja
add
cmp
clc
dec
xchg
xor
pushf
xchg
mov
frstpm(287
mov
andl
roll
test
gs
test
scas
jle
add
roll
sahf
add
into
fucomip
pushf
mov
inc
mov
pop
test
shlb
leave
push
pusha
mov
ds
iret
xchg
inc
or
popa
dec
adc
add
mov
jo
aad
sbb
aad
imul
ret
push
insl
in
dec
mov
test
adc
pop
sbb
and
dec
bsf
pusha
cltd
add
pop
xchg
jge
mov
into
aad
das
dec
mov
mov
int
mov
xor
scas
xchg
sub
or
push
out
inc
lods
push
nop
sbb
bound
in
mov
scas
mov
jno
mov
cmp
sahf
andl
psrad
inc
xchg
pop
sbbb
jecxz
hlt
sbb
pop
xchg
adc
lret
rorb
aad
sub
aam
ds
pop
jmp
xor
jmp
dec
adc
arpl
push
lods
pushf
out
cld
int
sub
sub
cmc
or
or
xlat
loop
jge
in
mov
jno
cltd
aaa
rorl
clc
fldl
adc
jns
aas
dec
sahf
test
and
xor
and
movl
dec
shrl
fcmovb
pop
dec
push
mov
jb
cli
int
jmp
add
nop
xchg
mov
jg
push
mov
jle
dec
lcall
and
and
mov
sub
sub
int3
push
add
insb
and
imulb
push
push
mov
xchg
pop
xor
int3
or
sub
notb
push
rclb
mov
inc
mov
pop
shrb
add
xor
scas
out
in
xor
fwait
xor
cmp
popa
lods
mov
cwtl
xor
push
sub
mov
lds
rorb
and
push
adc
push
pop
push
insl
xor
in
lret
enter
test
pop
sub
fwait
outsb
mov
je
pop
mov
xor
jns
rolb
repnz
aam
adc
data16
xor
adc
push
xchg
ja
mov
sbb
negl
cmpsb
cld
fcomps
aam
push
outsl
xchg
lcall
push
xor
push
mov
mov
pop
imul
ret
scas
iret
repnz
shrl
leave
mov
stc
insb
jno
pop
mov
mov
bound
inc
cmpsl
dec
add
sbb
adc
pop
fdivl
jae
sub
daa
push
ja
mov
setbe
push
cld
sbb
pop
sti
es
xlat
nop
mov
ja
jmp
mov
int
in
jne
add
gs
fcompl
xchg
adc
das
push
pop
mov
ljmp
arpl
sub
lret
push
inc
and
mov
mov
mul
sub
xor
xor
out
cwtl
sbb
in
mov
pop
enter
inc
fnstsw
das
xchg
xor
in
push
cwtl
inc
pushf
pop
xchg
or
sbb
jnp
or
js
fwait
jb
and
mov
hlt
mov
fldenv
xchg
jle
mov
xor
sub
pop
push
mov
or
xor
sarl
pop
aaa
stos
or
mov
xchg
xchg
pop
lea
popf
ja
std
and
jbe
ljmp
sbb
jbe
pop
iret
push
sbb
test
adc
cmp
aaa
decl
imulb
cmp
iret
inc
and
cmpsb
pop
cmp
out
add
fld1
sub
scas
stos
ds
push
ss
pop
cmp
xchg
mov
pop
dec
and
mov
jnp
jnp
cltd
faddl
orl
pop
outsb
sub
ret
sbb
out
xchg
seto
incl
dec
and
in
dec
push
imul
jb
adcl
fldt
mov
sub
inc
inc
cld
cmpsl
mov
push
out
scas
lret
xchg
cmp
nop
mov
xor
mov
push
outsb
in
push
test
or
out
dec
movsl
add
and
pop
cmp
call
jne
cltd
xor
mov
repz
cmp
cld
movsb
aas
push
mov
push
les
ret
rcll
out
mov
pop
cmp
in
mov
daa
mov
ds
push
cmpsl
aas
enter
inc
pushl
pop
cmovg
mov
and
loope
dec
out
jge
imul
mov
arpl
pop
pop
stos
es
and
jge
inc
bound
dec
sbb
dec
sub
pop
dec
mov
mov
push
lods
addr16
rol
and
adc
pop
sub
mov
imul
adc
mov
outsl
sub
and
push
push
ret
add
mov
sbb
lds
scas
insb
addr16
adc
leave
xor
pop
lcall
bound
ljmp
fsubs
xchg
add
mov
mov
test
cmp
and
adc
dec
cs
outsb
repnz
xor
sub
lahf
xchg
jb
leave
jge
pusha
pop
mov
es
repnz
insl
mov
in
pop
or
xchg
add
cmpsb
imul
mov
in
cltd
xor
pop
push
sbbb
imul
imul
arpl
bound
imul
inc
cmp
pop
mov
test
sub
xor
clc
aad
xchg
and
cmp
nop
jecxz
orl
cmp
xor
jae
flds
mov
scas
std
fcompl
sti
fwait
jbe
or
stc
push
in
pop
xchg
arpl
mov
lahf
sub
fucom
push
addr16
inc
pop
mov
adc
mov
iret
frstor
or
xor
or
out
push
inc
lret
jns
icebp
pop
push
test
push
lcall
ret
sub
lods
je
nop
add
lods
mov
lods
hlt
push
addr16
push
int
add
or
lret
xchg
dec
xor
pop
mov
pop
pop
and
mov
jae
jbe
jb
dec
mov
shlb
pusha
and
add
mov
ficoms
and
cmp
rorb
xchg
sbb
iret
cmc
adc
nop
inc
dec
lods
mov
xchg
pop
xor
dec
push
icebp
movsl
sub
xlat
pop
or
inc
ds
xchg
mov
adc
rcrl
sub
imul
outsb
loope
sbb
ja
pop
ds
and
inc
fisubs
mov
jbe
gs
jae
call
mov
adc
add
rcrl
mov
rcrl
push
mov
fisttpl
xchg
movsl
mov
ja
sub
bound
xor
mov
repnz
jb
or
jmp
inc
dec
xor
clc
aaa
std
adcb
mov
daa
xor
inc
scas
and
push
mov
sub
pop
aad
inc
jle
cld
in
inc
push
inc
ds
in
pusha
xor
xchg
jge
roll
sub
mov
cmp
pushf
popa
jle
cmp
cs
and
gs
les
push
xchg
dec
fcompl
in
pop
outsl
es
out
mov
push
xchg
aam
cmc
mov
popf
push
mov
addr16
je
and
leave
inc
test
insb
mov
adc
add
cmp
adc
out
stos
pop
sti
fwait
nop
movsl
add
xchg
add
stos
xchg
sbb
adc
leave
or
in
add
imul
data16
xlat
mov
add
or
jns
lret
rcll
int
push
stos
sub
add
xchg
cmpsl
aas
mov
sbb
mov
and
fs
pop
mov
data16
inc
xchg
push
pop
mov
aaa
test
pusha
cmp
mov
xlat
push
inc
std
push
jg
repz
insb
add
rolb
lock
mov
arpl
add
call
or
adc
int3
mov
inc
adc
data16
jae
bsr
cmpsb
loop
dec
cmc
mov
into
pusha
jl
and
fsubs
cmpsl
and
push
paddb
xchg
in
dec
imul
mov
mov
mov
push
fnsave
ret
cmp
fisubs
inc
shr
sar
add
and
adc
ja
fs
jnp
cmp
repnz
mov
sub
jge
das
and
cmp
rolb
ljmp
bound
pop
pushf
lds
adc
push
lods
xchg
xor
inc
icebp
int3
repz
jae
fwait
inc
mov
popf
out
out
and
js
or
shll
adc
lahf
jnp
popa
cwtl
pop
sbb
out
mov
push
fsubr
addb
mov
lds
mov
aam
mov
and
iret
sbb
ja
loopne
mov
pusha
ret
cmp
inc
outsb
jnp
fstl
mov
aas
mov
cmp
call
out
adc
cmp
adcb
loopne
mov
test
dec
aas
mov
xchg
sub
rcr
cli
insl
cmp
cmp
sbb
jecxz
sub
hlt
mov
loopnew
lea
jne
call
lock
sub
pop
fwait
cltd
or
rcl
and
push
add
cmp
call
ljmp
arpl
into
ret
jnp
clc
jmp
dec
push
hlt
and
jo
sub
shl
pop
andl
test
negl
or
out
cmpsl
jle
mov
lret
shrl
lods
stos
int
test
mov
mov
xchg
pusha
ret
mov
test
adc
movsl
xchg
push
movsl
inc
icebp
mov
mov
xchg
mov
jno
out
insb
pop
mov
jle
pop
into
fsub
pusha
ficomps
xchg
sbb
in
and
lds
cld
lock
dec
jnp
jecxz
push
adc
inc
inc
arpl
ja
jmp
add
or
jmp
and
in
pop
imul
test
xor
fisttps
cwtl
leave
aad
mov
pop
js
test
xchg
xchg
shrl
cltd
mov
push
dec
test
es
sbb
inc
inc
xchg
test
in
adc
push
mov
xchg
mov
push
dec
fs
movl
mov
loop
sub
cmp
add
mov
and
int3
scas
pop
inc
xor
xchg
int3
arpl
sbb
inc
es
ljmp
jnp
push
lods
adcl
jbe
out
and
mov
pop
xchg
fcmovne
lcall
jo
ds
jb
das
pop
cmc
dec
in
icebp
sbb
xor
cmpb
aad
pop
es
push
loop
test
ljmp
je
sbb
xchg
clc
cmp
sub
inc
nop
les
rcrb
cwtl
sti
jg
sbb
incl
lods
mov
sbb
arpl
stos
popf
stos
loopne
cmpsb
les
xchg
adc
sub
or
scas
pop
mov
stc
mov
lods
repnz
test
jo
popa
out
xchg
movsl
mov
cmp
push
cmc
pop
fwait
push
sti
adc
jmp
int
bound
mov
fistpl
mov
jnp
mov
das
jo
sbb
add
sub
dec
jg
in
lods
rcll
stos
and
fisubs
or
imul
daa
mov
shl
push
jl
lds
hlt
or
out
inc
pop
repz
outsb
or
jnp
aaa
push
jne
es
or
jae
xchg
cmpsb
push
mov
pusha
mov
adc
int
jge
cld
popa
dec
pop
fwait
les
sbb
push
xor
lods
mov
orb
or
lock
das
mov
mov
fistpl
mov
mov
jge
mov
les
jp
push
mov
mov
xor
mov
fdivrl
pop
arpl
pandn
push
popf
xchg
jge
sbb
lret
jbe
and
inc
and
pop
out
vpshuflw
mov
test
aaa
jmp
dec
rcr
mov
or
daa
xor
fsubl
mov
xorb
sbb
push
cmp
pushl
push
adc
lahf
call
dec
push
mov
es
jle
call
or
aad
pop
in
add
std
mov
xchg
jle
outsb
je
add
rcrl
add
fdivs
push
mov
dec
addl
xchg
ds
scas
lahf
dec
mov
fdivl
mov
aas
push
in
imul
fcompl
ret
shrl
icebp
insb
hlt
jae
mov
mov
push
sub
sbb
mov
imul
push
cmpsb
mov
insl
cmp
mov
sub
mov
add
add
adc
and
std
pop
or
sbb
icebp
lret
cld
sub
pop
jns
in
mov
dec
and
fistpl
mov
jbe
inc
xor
add
jns
pop
mov
sbb
cmp
adc
jns
jmp
dec
mov
xchg
dec
sbb
jle
shrb
and
pop
lret
mov
xlat
out
push
dec
outsl
mov
repnz
clc
inc
sbb
repnz
inc
jle
outsl
lods
movsb
in
or
cwtl
mov
lock
imul
int3
inc
push
orl
fsubrl
cmp
pop
mov
nop
imul
popf
cmc
ret
call
ss
ss
aam
sbb
sbb
or
mov
dec
loopne
scas
adc
push
jmp
in
jo
leave
push
mov
dec
mov
adc
jbe
pop
insb
or
mov
aad
lea
push
add
insb
pop
lock
inc
mov
stos
xor
decl
cwtl
push
jb
addr16
push
lcall
xor
imul
xor
jl
sbb
sbb
add
fbstp
repnz
push
imul
xor
jg
or
sub
pushf
les
imul
mov
mov
outsb
xchg
sub
out
add
ljmp
popf
das
aam
aas
roll
mov
and
ds
loope
xchg
aam
rcrb
lds
jmp
aad
sub
push
stos
ss
mov
push
ret
xchg
mov
cmpsl
cwtl
xor
test
iret
push
jge
add
push
xor
mov
dec
outsb
repz
push
lods
xchg
mov
xchg
outsb
mov
jmp
lods
sbb
inc
rcll
sub
or
das
dec
sbb
push
hlt
push
mov
xchg
and
pop
nop
iret
cmpsb
inc
jns
dec
and
pop
vandnps
dec
add
or
sbb
cmp
lds
jmp
into
std
jecxz
cs
or
pop
movsb
cmp
mov
test
pop
xor
mov
testl
pop
in
sahf
xchg
shr
pop
aad
adc
popa
and
movsl
cmp
xchg
xor
stos
and
dec
push
int3
in
dec
aas
stc
push
arpl
sahf
lods
add
negb
inc
je
shll
add
push
cmp
enter
in
scas
add
popf
pop
adc
sub
movsb
test
push
xchg
in
mov
dec
and
mov
xor
xchg
jb
rcrl
jecxz
xor
pop
push
push
push
sbb
and
mov
das
jb
pushf
sub
lahf
push
movsb
test
jo
sbb
dec
mov
call
mov
mov
adc
iret
data16
icebp
js
lahf
insb
add
decl
addr16
push
mov
xor
push
inc
fsubrl
movsl
cmpsb
dec
cmpps
dec
add
test
xchg
add
vfnmaddps
jmp
ds
mov
in
stos
jnp
mov
cmp
push
shl
mov
mov
or
sbbl
inc
pusha
adc
inc
pop
arpl
lods
js
push
out
inc
movsl
int3
ss
jne
in
inc
decb
orl
mov
cwtl
and
iret
and
hlt
adc
and
xor
pop
xor
push
jno
jno
dec
rolb
mov
adc
adc
popa
mov
loop
sub
pop
shrb
pop
dec
add
push
rcrl
nop
mov
scas
in
fsubs
xchg
std
aas
out
and
mov
data16
lahf
dec
cmp
mov
jno
inc
jo
hlt
or
mov
adc
ficomps
in
mov
aas
fdivl
stc
imul
jp
ret
or
mov
aam
cwtl
jp
movsl
or
lods
ret
repz
inc
dec
or
iret
es
loope
cmpsl
lea
sub
in
out
pop
clc
inc
cmp
test
sub
inc
and
enter
sbb
lret
mov
jbe
pop
inc
add
cmpsb
adc
popa
xor
xor
dec
inc
fwait
sti
not
pop
ljmp
adc
xchg
pop
repz
mov
xor
mov
inc
ret
add
call
mov
sbb
push
and
lea
add
cmp
cmp
pop
pushf
pusha
push
mov
lods
rorl
orb
test
aam
dec
icebp
and
push
inc
arpl
je
arpl
cmp
jl
jl
call
xchg
sub
sti
dec
jnp
enter
add
jp
add
imul
mov
mov
add
shrl
mov
sub
pop
dec
push
sub
sub
pusha
sbb
stos
push
shll
test
and
mov
push
push
xchg
or
sub
lahf
jne
push
mov
ret
in
dec
add
jmp
into
inc
fucomp
in
mov
dec
jo
das
int
orl
sub
add
lock
mov
jno
inc
ror
add
inc
sbb
sbb
mov
inc
jmp
xchg
ficomps
loopne
push
mov
test
nop
rorl
gs
out
std
subl
idiv
pushf
and
cmp
in
xor
pop
xchg
xchg
outsl
inc
dec
dec
jl
sti
lods
bnd
stos
cmpsb
in
js
jmp
iret
insl
test
sarl
push
mov
lock
jmp
test
addr16
les
adc
data16
aam
jl
and
jle
repz
mov
inc
sub
bnd
add
mov
cs
mov
shll
hlt
jmp
sub
xor
xchg
in
out
es
in
jmp
or
lcall
and
add
cld
adc
ja
sbb
jp
repnz
sbb
stc
pop
push
inc
adc
hlt
mov
push
pop
mov
pop
sahf
loop
cmpsb
scas
bnd
lock
jae
or
mov
or
incl
mov
ds
leave
xchg
jo
clc
push
aas
int
dec
xchg
inc
fisubrl
or
adc
mov
int
pop
xlat
mov
jno
jbe
and
xchg
sub
and
or
push
push
jle
dec
or
jl
insl
xor
mov
push
or
repnz
repnz
movsb
mov
pop
outsl
jne
and
cmp
mov
pop
lea
inc
push
dec
aaa
lret
xchg
push
cs
sub
adc
sarb
fisttpll
jno
or
sbb
cmp
lods
mov
lock
in
test
in
gs
mov
jp
out
jnp
aam
and
inc
fstl
fimuls
jnp
jns
jle
and
outsb
jge
jge
mov
sahf
stos
pusha
ret
pop
push
push
mov
lock
stos
test
adc
aam
xor
push
pop
cmpsl
mov
mov
adc
pop
into
push
out
into
xchg
ror
pop
mov
mov
jnp
popf
push
dec
lds
xchg
xchg
cmpsb
push
jae
loop
jmp
cld
lds
negl
cmp
cmp
sbb
lods
pop
pop
test
fistl
or
daa
lcall
adc
sbb
fisubl
mov
pushf
and
push
test
pop
cmc
std
insl
lret
jbe
push
add
mov
fistpl
xor
das
cmp
pop
in
popf
push
xor
out
sub
inc
inc
push
xchg
in
daa
iret
enter
push
imul
or
out
into
sbbb
adc
mov
sarb
arpl
insl
add
push
inc
sbb
mov
xor
jno
lret
leave
inc
jmp
fnsave
xchg
arpl
mov
int3
imul
leave
add
gs
mov
mov
daa
je
xchg
pop
lcall
mov
pop
and
xchg
push
jp
les
imul
es
cmp
je
mov
xchg
mov
pop
jns
xchg
stos
je
sbb
into
push
add
mov
push
xorl
cmp
in
adc
iret
call
rorl
xor
cli
adc
jge
push
dec
daa
cwtl
dec
xor
and
into
xchg
loop
testl
mov
sbb
mov
rorb
inc
mov
ljmp
call
jp
fnstsw
out
jns
js
jl
cmc
jo
popf
cwtl
stos
cld
testl
fcmovbe
mov
jnp
stos
ds
sub
push
and
rorb
push
sti
popf
pop
xor
daa
subb
test
inc
stos
fidivl
mov
outsb
push
adc
cmp
dec
data16
push
movsb
cmp
bnd
aad
test
jae
movsb
nop
jo
out
stc
push
pop
pop
xchg
call
pop
push
outsb
das
or
stos
call
or
cmp
xchg
mov
sbb
push
mov
stc
jp
ljmp
in
call
bound
inc
orl
repnz
jge
test
pop
push
test
mov
fcmovnu
jb
in
jb
stc
mov
adc
daa
jbe
xchg
and
mov
dec
dec
fistpll
xchg
adc
mov
sub
add
cmp
jb
test
decl
pusha
xchg
bound
xchg
add
adc
or
mov
daa
in
sub
clc
gs
daa
adc
jge
je
lods
cmpsb
sub
push
ja
mov
jnp
fucomp
pushf
js
stos
sahf
mov
mov
mov
shrl
jns
cmpl
pop
outsl
jns
mov
mov
roll
fucomip
or
lret
and
xor
xchg
sub
bound
aad
in
xchg
jecxz
stos
push
jb
sahf
ss
mov
out
rcrl
aam
es
pop
decb
adc
and
pusha
inc
sub
or
push
add
xchg
sub
sbb
enter
push
jb
lcall
lcall
sbb
movsl
xor
xor
sbb
pop
ljmp
inc
aas
mov
repz
lods
xlat
rcrl
mov
dec
testb
sarb
dec
out
jl
sahf
in
scas
pop
xchg
pop
mov
fdivrs
mov
lret
jge
xor
jg
mov
sub
sub
mov
sbb
cmp
mov
rol
pop
xchg
add
in
cmp
and
xlat
push
and
int3
pop
js
pop
mov
lods
mov
cltd
mov
daa
outsl
in
imul
xchg
in
xchg
jle
and
shlb
jns
pop
arpl
addb
fstpl
scas
and
aad
stos
mov
mov
xchg
into
dec
inc
test
push
mov
shrl
aam
mov
pop
jne
xchg
cmpsb
inc
push
inc
movsb
ret
push
push
xorl
jmp
xor
xor
or
adc
mov
lcall
push
or
imul
xchg
mov
add
adc
and
jg
ljmp
push
jle
add
mov
mov
sbb
mov
pop
mov
iret
fnstenv
mov
mov
loop
in
pushl
cmp
testl
pop
aas
shr
icebp
enter
cmpsl
mov
fsubrs
cmpsb
adc
test
dec
in
xlat
ljmp
mov
mov
mov
iret
push
cwtl
std
mov
fmulp
cmp
sarb
ja
push
pop
out
nop
adcl
mov
adc
cmp
mov
xchg
lods
imul
fs
xchg
les
movsb
jmp
sti
sarb
sub
mov
inc
lea
jecxz
lock
out
loopne
sbb
xlat
mov
mov
push
stos
int3
mov
inc
xchg
pop
mov
or
cld
jns
xor
jmp
mov
dec
int
fwait
and
and
lahf
pushf
xor
pop
idivl
test
and
sub
icebp
ret
imul
imul
les
pop
inc
sbb
jb
idivb
pop
mov
hlt
inc
add
cmp
and
leave
pop
mov
or
das
xchg
repz
dec
out
ficompl
xlat
icebp
or
jge
cwtl
stos
sahf
push
fnstenv
fucomip
dec
mov
shll
data16
push
test
push
popf
inc
pop
hlt
xor
push
into
sahf
add
xor
addr16
cmp
popa
dec
ljmp
mov
xchg
adc
inc
sti
add
outsl
mov
les
add
nop
mov
lea
adc
push
imul
dec
insl
orb
xlat
push
cltd
mov
xor
enter
out
xor
or
imul
jno
pusha
push
jle
inc
dec
scas
xchg
and
or
mov
lcall
push
mov
fwait
and
mov
outsb
sub
add
push
out
je
pop
nop
cli
sub
movsl
out
pop
loope
loop
sbb
or
sub
xchg
inc
fmull
and
mov
imul
dec
lea
cmp
orb
xor
xchg
cld
fisttps
adc
ss
jg
inc
lods
mov
insl
scas
cmp
and
mov
fucomip
test
add
or
mov
cwtl
imul
repz
in
xchg
xlat
mov
add
sub
or
cmc
popa
clc
and
fsubs
mov
add
ljmp
adc
pop
cmpsb
dec
aad
cmpsl
ds
imul
xor
call
mov
mov
rorl
sub
movsb
cmp
test
dec
cmp
add
stos
in
cmpb
mov
xchg
sub
movsb
sbb
test
mov
jns
pop
test
movsb
push
jae
add
xor
iret
movlps
das
push
leave
mov
inc
movsb
cmp
std
bound
fstl
test
test
test
out
push
ss
out
dec
lods
push
jle
mov
iret
lahf
xchg
push
loope
jp
mov
sub
sbb
sbb
insb
mov
inc
test
add
ljmp
jg
rcrl
pop
icebp
movsl
inc
lods
mov
and
jo
mov
leave
jge
imul
inc
jae
add
lods
cltd
cmpsl
fsubrp
add
cli
sbb
lods
scas
gs
iret
in
and
or
xchg
pop
sti
xlat
pop
xor
mov
sub
fcoms
jns
sub
rorb
push
mov
adc
aas
pop
shrb
adc
adc
lods
popa
add
mov
mov
mov
pop
fisubl
es
sti
cmp
pusha
ss
stos
push
xor
sub
cmpl
stos
in
xchg
icebp
mov
or
insb
sub
cltd
cmp
pushf
jg
loopne
insb
inc
cs
scas
arpl
out
loope
adc
fs
jo
and
fnstenv
push
lds
lds
mov
mov
sbb
test
stos
jb
and
das
mov
fdivl
loopne
jno
mov
add
add
and
dec
mov
subb
lods
lds
push
js
test
lods
jmp
and
lds
dec
adc
adc
adc
scas
icebp
push
fsubrs
add
jno
fcomp
stc
bound
into
push
lock
sub
ss
rcrl
mov
ret
mov
movsb
icebp
stos
mov
lds
mulb
cmp
push
dec
aad
hlt
scas
xor
or
adc
adc
test
jg
cmp
add
stos
xchg
xchg
xchg
scas
call
sahf
and
add
adc
xchg
sub
add
adc
pusha
xchg
and
and
sub
or
addr16
sbb
pop
out
pop
test
loope
cli
jne
sbb
scas
mov
xchg
jmp
je
xchg
cmpl
adc
arpl
ror
inc
cli
movsl
jl
das
adc
loop
int3
sti
add
sbbb
xor
or
xor
fnstsw
xchg
insb
lds
repz
fs
push
jmp
aaa
repz
imul
je
das
in
xchg
fnsave
push
sbb
pushf
icebp
cmp
mov
cmp
jg
push
std
lahf
movsl
in
and
out
push
sbb
fmull
mov
mov
cmp
mov
adc
loope
in
fildll
sbb
inc
mov
or
ljmp
sub
jne
rolb
sub
mov
insl
arpl
cmpsb
ss
add
pop
int3
mov
xlat
mov
popa
iret
cwtl
push
push
or
jle
jae
outsl
mov
push
dec
movsb
leave
je
cmp
xor
loop
call
fildll
hlt
das
leave
orb
mov
adc
push
ret
xchg
jg
cmp
push
call
mov
mov
hlt
andb
xchg
mov
fadds
sbb
ds
pop
and
cmp
lea
mov
shrb
mov
fcompl
fs
mov
test
ds
xor
mov
fwait
xchg
add
adc
add
and
cmp
dec
jb
push
mov
dec
loopne
fisubl
mov
icebp
xchg
mov
add
mov
sub
sub
or
inc
push
sub
out
daa
and
push
jae
loop
fimuls
push
out
das
and
xlat
xor
mov
jbe
mov
sarb
mov
xor
imul
cld
xor
xor
push
sbb
and
push
lods
jmp
adc
and
loop
inc
sti
lods
ds
mov
jb
xchg
push
and
sub
scas
lods
inc
testb
jmp
push
inc
or
push
std
jo
mov
pop
aas
jb
pminsw
add
adc
mov
cwtl
loope
xor
sub
pushf
or
repz
jnp
lret
cmp
sub
mov
mov
cmpsl
out
repnz
lret
mov
pop
push
ds
and
int
in
dec
cmp
sahf
cmc
jmp
xor
aas
movsl
out
scas
mov
xchg
les
arpl
iret
jl
sbb
icebp
pop
or
pop
repz
fidivrl
int3
xchg
and
movsl
adc
dec
jmp
in
and
sbb
out
icebp
incl
jecxz
mov
ret
push
cmp
xchg
ret
sub
insl
mov
cmc
sbb
pop
scas
and
xlat
cmp
xchg
ljmp
sub
sbb
cwtl
mov
cltd
jb
xlat
xchg
cmp
mov
push
imul
fldl
nop
cmpsl
mov
or
pushf
pushw
mov
mov
testl
and
add
pop
mov
sbbl
lret
icebp
pop
add
insl
jge
or
jl
xchg
xchg
outsb
orb
pop
test
cwtl
fmulp
inc
or
loop
pop
mov
jae
test
jmp
movsl
inc
mov
jno
dec
ljmp
dec
sahf
ljmp
out
imul
mov
dec
sub
in
jecxz
aas
mov
rcll
std
or
mov
daa
decb
pushf
sub
test
js
sbb
push
je
sbb
sbb
das
mov
sbb
dec
loope
push
fsubp
mov
jo
popf
test
xchg
mov
leave
cmpsl
xchg
add
rcr
mov
cs
xor
push
pop
repz
push
push
and
mov
ds
pop
adc
ljmp
ss
lods
clc
out
lods
je
mov
stc
es
pop
fistps
pop
repz
stos
cmp
out
mov
sbb
shll
insl
cmp
xchg
add
mov
add
imull
jmp
jb
mov
jmp
sub
pop
fsubl
pop
jbe
pop
jno
stos
into
push
je
cmp
bound
dec
adc
into
aam
pop
sub
sub
or
in
add
push
xchg
sub
xchg
pop
lea
repnz
mov
es
mov
insl
sbb
dec
pusha
mov
xchg
sub
jle
mov
sbb
add
aam
and
cld
mov
incl
jl
nop
mov
sub
fldcw
mov
mov
lock
push
js
ja
mov
rcrb
mov
mov
push
out
jg
outsl
dec
adc
sahf
lahf
xor
push
ret
insl
out
sahf
jo
into
lret
ss
fdivrp
xchg
scas
pop
sbb
popf
cltd
add
arpl
xchg
dec
in
mov
mov
cmp
dec
fildl
xchg
enter
shlb
xchg
fwait
dec
lods
shl
push
repz
in
setle
pusha
dec
pop
xchg
mov
inc
mov
dec
jecxz
pop
sbb
mov
or
sarl
dec
mov
pushf
fidivs
mov
imul
push
das
fistpll
loope
ja
ds
mov
enter
rcl
cld
adcl
in
jb
repnz
fcomps
in
jae
mov
ficompl
sub
or
notb
into
xor
aaa
add
pop
sub
sub
stos
out
sub
and
pop
fsubrs
mov
imul
inc
int3
and
add
push
mov
into
stc
xchg
sbb
and
imul
mov
xchg
cli
repnz
push
imul
ds
pop
mov
dec
mov
jne
push
shlb
mov
clc
xchg
mov
int
adc
pusha
inc
mov
cmp
push
add
jb
mov
sub
pusha
pusha
push
dec
das
outsl
sbbb
xchg
loope
icebp
push
mov
xchg
lea
xor
out
pop
inc
add
cmp
lods
shrl
int
pop
repz
data16
call
in
jno
test
aaa
sahf
lret
fwait
test
push
jb
or
add
xor
dec
lds
cmc
pop
mov
orl
insb
xchg
push
lds
sub
inc
cmc
jle
and
lds
xchg
fs
loopne
cmp
lcall
xor
push
nop
sbb
mov
loope
sub
jge
xchg
dec
bnd
pop
cmp
cwtl
cmp
mov
add
add
test
and
rclb
fwait
mov
fisubl
loopne
inc
das
mov
mov
sahf
ljmp
or
inc
push
mov
inc
mov
add
call
movsl
mov
outsl
jo
rolb
adc
sqrtss
mov
jne
mov
add
dec
pop
adc
xor
fldenv
loop
mov
mov
ret
add
mov
push
call
movsl
shr
movsb
add
fidivs
pop
xor
imulb
fnstenv
and
dec
pop
inc
in
in
lcall
in
roll
fdivp
stc
mov
repz
push
jne
aaa
sti
dec
inc
mov
minps
in
xorl
lea
movsl
subl
xorl
dec
mov
inc
pop
sub
ret
popa
xor
mov
inc
jb
fstpl
add
mov
rcrl
enter
sti
adc
lods
mov
xchg
outsl
sarl
add
or
popf
dec
jnp
push
push
or
add
xorl
out
lock
lret
das
cltd
push
test
pushf
mov
dec
jae
add
cmpsl
dec
mov
test
enter
orl
add
stos
jg
sub
rcrb
pushf
pop
stos
xchg
sbb
sub
daa
sahf
hlt
fisubrs
ss
or
push
fdivrl
fidivs
aas
fidivrl
imul
fsubrl
sbb
loop
sub
jg
ret
pop
lock
cmp
push
lock
enter
or
mov
or
insl
add
je
mov
and
jle
fs
pop
out
test
dec
mov
outsl
in
cmpsb
and
in
sbb
sbb
imul
sbb
insl
scas
or
setb
add
jp
je
negl
scas
add
add
mov
iret
xchg
adc
lock
rorl
fwait
cmpsb
pop
xor
mov
jno
aam
lods
mov
ja
pop
mov
mov
adc
mov
adc
fidivrs
jecxz
cmp
xchg
mov
pop
ret
fcmovnbe
dec
xchg
mov
stos
sbb
subb
jne
jbe
xchg
pop
in
mov
inc
out
test
inc
fsubrp
sbb
data16
aaa
push
out
push
test
dec
test
data16
js
arpl
mov
popa
cltd
fsub
fdivl
cmp
aad
mov
sbb
sub
mov
dec
sub
sbb
into
gs
ss
adc
inc
lret
test
add
lds
out
jne
test
in
xchg
cmc
int3
inc
or
inc
sbb
mov
lock
loopne
mov
pop
pop
loop
lcall
dec
imul
cmpb
mov
adc
sti
jno
jo
rclb
cmp
push
loopne
mov
jae
xchg
inc
add
loop
scas
inc
mov
adc
scas
int
fistps
mov
fmulp
or
inc
je
xor
mov
jnp
cmc
iret
fmuls
or
call
xchg
lahf
call
inc
mov
cli
xchg
push
mov
mov
xchg
lret
and
cmp
mov
inc
rolw
jp
jg
js
scas
xchg
imul
inc
xchg
filds
repnz
adc
test
pop
sti
pop
mov
scas
pop
sub
popa
and
pop
mov
ret
cwtl
cs
add
insb
scas
pop
ret
adc
mov
jnp
adc
push
das
cmp
aad
or
cmp
pop
mov
xor
xor
mov
push
ror
push
mov
arpl
and
push
out
pop
js
push
loope
mov
ja
sbb
imul
stos
mov
dec
idivb
jg
push
dec
lock
adc
outsb
sarl
repz
mov
push
movsb
nop
push
sub
les
das
jecxz
and
mov
fs
jnp
cwtl
sbb
jbe
sti
arpl
mov
or
scas
je
dec
out
cmp
xchg
pop
je
roll
pop
jo
sti
inc
popa
flds
push
inc
repnz
fnstcw
mov
insb
mov
mov
cvtps2pi
push
xlat
pop
pop
ja
mov
jno
in
inc
push
sbb
mov
mov
icebp
outsl
mov
imul
jg
mov
dec
test
push
arpl
add
xlat
lea
jo
repz
adc
jle
or
sub
pop
cmp
clc
lret
pop
mov
or
adc
out
adcl
into
pop
clc
add
imull
mov
into
movsl
adc
sub
cmp
cmpsl
pop
jne
mov
push
xchg
insb
or
fsubrp
xchg
rol
fldt
pop
mov
lahf
mov
leave
pusha
mov
lcall
cli
add
outsl
mov
test
clc
lds
xorb
pop
icebp
aas
xor
stos
push
hlt
stc
mov
aaa
lods
xchg
sub
ret
test
hlt
push
outsb
adc
jne
sbb
and
sub
sub
pop
mov
sbb
lds
xor
jns
xchg
or
clc
sahf
stos
dec
and
sub
cmp
xlat
or
lea
scas
inc
or
insb
test
ret
add
in
insl
daa
inc
jae
shrb
fistps
test
sbb
sahf
xor
les
in
es
addl
push
mov
xchg
fwait
adc
dec
adc
mov
jo
addr16
and
addr16
pop
call
mov
adc
xchg
pop
add
jo
mov
push
cltd
test
cli
jle
test
or
dec
cmp
jmp
js
cmp
into
mov
push
push
lcall
push
jmp
xchg
bound
push
mov
call
or
das
insb
push
push
pushf
lea
data16
cmpsw
xorb
je
mov
add
mov
ficompl
pop
pop
sub
cmpsl
mov
mov
in
push
call
push
sbb
mov
imul
sub
insb
insl
mov
ret
outsl
shrb
repnz
or
bound
mov
inc
test
fucomp
xchg
sub
into
or
inc
fdiv
inc
mov
pop
stos
push
out
sti
xor
scas
mov
ja
sub
ja
and
lock
cmp
inc
stos
int
mov
out
push
popa
orl
xchg
sub
dec
imul
rorb
lods
in
aam
out
rcl
adc
jmp
push
pushf
fistpll
dec
test
jb
xor
cmp
adc
fwait
jo
cmpsb
sbb
and
in
int
dec
push
fstpt
cmp
les
cwtl
mov
dec
and
jns
push
flds
repz
movsb
push
icebp
js
testb
xchg
jge
add
cmp
cltd
loop
add
jp
xchg
movsb
ljmp
aaa
and
shll
arpl
lods
and
bound
and
sbb
sti
pop
stos
push
ljmp
cld
test
mov
cld
ds
inc
pop
pop
mov
loope
add
cmp
sbb
xchg
inc
repnz
lret
hlt
fstl
jae
jmp
add
nop
idivl
and
push
push
mov
sbb
loop
lds
sar
in
scas
adc
pop
fnsetpm(287
jns
mov
xor
lods
jmp
adc
mov
dec
fadds
pop
stos
rolb
cmc
mov
add
lahf
test
jmp
pop
hlt
push
jb
clc
mov
fnop
fiadds
aaa
xchg
push
pushl
roll
lret
jne
dec
push
dec
sbb
jo
icebp
mov
idivb
repnz
scas
movb
and
rol
and
rorb
icebp
jle
in
mov
mov
sub
pop
mov
and
sub
sti
je
outsl
push
loope
jo
jecxz
adc
addl
and
jno
xchg
cld
xchg
pop
call
push
mov
popf
loop
jmp
cs
lcall
pop
mov
adc
inc
dec
jo
and
xor
test
int3
sahf
inc
leave
cwtl
std
xor
popa
std
and
adcl
push
std
mov
push
adcb
xor
sbb
xor
gs
es
nop
mov
and
jbe
mov
dec
xor
inc
dec
inc
in
scas
adc
sub
rcl
pop
iret
test
jl
fsubrl
adc
lock
mov
mov
push
inc
data16
fdivs
push
pop
je
mov
mov
mov
test
mov
mov
fidivrs
pop
out
sbb
cld
mov
pushl
inc
std
mov
sub
enter
jo
xorb
aad
das
rcrb
push
lods
dec
pop
aaa
fcomps
fdiv
adc
xchg
hlt
sub
les
xchg
xor
add
mov
mov
mov
cmp
cmp
sbb
pop
sub
pushf
inc
in
dec
jecxz
in
cltd
cmp
outsl
xchg
xchg
cmc
pop
loope
jecxz
icebp
lea
fimull
clc
inc
scas
cmp
shrb
or
fs
adc
lret
mov
adc
mov
adcb
lds
dec
push
sbb
and
add
xchg
dec
pop
lock
xor
lods
lret
inc
lods
jno
push
sub
sahf
pxor
test
scas
inc
jmp
jae
shlb
or
loop
pop
outsl
repz
out
dec
ds
fisttpll
lock
add
or
js
cmpsl
lds
mov
leave
test
lret
xchg
xor
dec
inc
pop
bnd
movsl
fmul
adc
mov
mov
push
xor
push
or
xchg
adc
jg
mov
cltd
sbbl
stos
dec
movsb
enter
in
pop
les
aas
dec
ds
mov
lock
xlat
mov
aas
lret
mov
and
loopne
mov
pop
xchg
pop
mov
pop
xchg
lock
sbb
into
sub
aad
mov
movsl
ret
nop
or
out
orb
nop
daa
and
scas
cmp
fidivs
push
pop
inc
mov
popf
sbb
cmc
nop
jb
rcrl
sbb
sbb
stos
xor
jb,pn
or
mov
aam
je
push
mov
arpl
bound
inc
inc
dec
scas
jne
mov
and
xchg
mov
push
jne
or
fmul
adc
ja
sbbb
sbb
les
ss
cltd
fs
nop
test
cmp
mov
jbe
roll
xlat
in
popf
or
rolb
lahf
cld
popa
shll
sbb
lods
andl
lods
fimuls
or
rcrb
adc
icebp
xlat
sbb
popa
pop
push
leave
aad
pop
lock
push
push
xchg
sbb
call
mov
pop
shlb
stos
xchg
sahf
sub
mov
sub
cmp
push
push
outsl
jnp
cmp
or
movb
scas
je
jne
push
xor
in
jge
fwait
lahf
adc
jns
out
push
inc
fcoms
ss
aaa
adc
fistpl
aaa
insl
sbb
mov
scas
inc
cld
cs
dec
dec
adc
inc
mov
les
mov
iret
mov
xchg
ret
lds
jmp
gs
addl
xor
popa
sarl
into
lcall
sbb
mov
pop
cmp
add
xor
outsl
xchg
sbb
inc
sbb
add
xchg
in
lds
outsb
in
sub
pop
pusha
add
imul
cli
pop
mov
adc
mov
xor
xchg
lods
mov
popa
faddl
mov
test
iret
or
sbb
cs
scas
dec
outsb
insb
sub
xor
fldl
push
xor
mov
std
cltd
repz
cwtl
add
into
andb
lds
clc
sbbb
mov
lret
ret
push
sub
sarl
testb
add
lar
jns
pop
cmp
cltd
dec
pop
dec
js
int
cmp
imul
and
push
out
pop
les
xchg
sbb
adc
mov
dec
clc
js
cmp
test
mov
loopne
xchg
fdivl
xorb
lahf
sub
sbb
add
movsb
mov
mov
mov
pop
ja
mov
pusha
stos
xor
inc
xchg
int3
repz
jmp
push
sub
inc
push
hlt
xchg
fisubl
repnz
xor
mov
mov
ss
jbe
jbe
xchg
adc
sub
adc
outsl
jbe
shrb
scas
jge
dec
dec
fistl
add
jmp
push
sbb
movsl
pushl
out
hlt
xchg
repz
mov
out
jae
pop
stos
fcmovbe
stc
ja
sub
xor
mov
cli
push
data16
sbb
xor
pop
push
pushfw
jle
and
cmc
adc
test
mov
adc
adc
mov
xor
xchg
and
mov
imul
lds
inc
sarb
fdivrl
pushl
cmc
fldl2t
es
xchg
shl
jge
pop
sub
xchg
push
sbb
sbb
cltd
cltd
mov
add
mov
adc
and
stos
inc
cmp
js
pop
jb
pop
cltd
xor
xchg
scas
fists
jmp
add
xor
inc
in
icebp
mov
imul
pushf
or
fisubrs
push
clc
sarl
inc
mov
mov
aaa
push
mov
es
push
mov
lret
xchg
shrb
test
imul
add
jg
clc
lea
jg
ret
xor
mov
cmp
adc
icebp
mov
mov
mov
gs
aam
daa
adc
sub
cld
cmpl
shlb
shl
in
js
les
lret
dec
dec
insl
jae
fsub
or
and
dec
cwtl
mov
jg
inc
mov
ljmp
test
sbb
lods
cmp
xor
stos
aas
rorb
adc
inc
insb
lcall
xor
test
int3
xchg
ds
sbb
xor
sbb
sarl
sahf
and
sti
pop
flds
lock
inc
pop
pop
fistps
xchg
sbb
fistl
nop
mov
rorb
shlb
into
adc
nop
fwait
arpl
and
xchg
aam
loop
sbb
mov
cli
xchg
add
mov
mov
ffree
es
mov
mov
xor
imulb
testb
inc
add
fdivrl
punpcklbw
xlat
mov
nop
xchg
adc
or
data16
mov
leave
ja
lret
leave
fsts
cmp
jl
and
popf
xor
fwait
scas
jmp
adc
jb
and
fimull
adc
insb
fnstenv
clc
pop
cmpsb
mov
add
and
gs
loopne
jnp
fidivrl
or
inc
fimull
mov
push
call
repnz
push
sub
sbb
lahf
inc
out
add
xchg
jb
pushf
in
pop
add
pop
pop
mov
push
sbb
les
pop
xchg
mov
out
int3
adc
add
and
loope
test
pushf
add
loop
aaa
push
sub
push
call
ljmp
lock
add
mov
repnz
push
insl
pop
mov
pusha
jns
testl
lods
popf
jo
inc
or
dec
xchg
mov
sbb
mov
adc
inc
gs
xor
xchg
sbb
ret
fcmovnbe
mov
sbb
lods
cwtl
adc
jnp
dec
in
mov
dec
jno
insb
jl
pop
inc
pop
jg
mov
mov
loope
rcrb
aad
xor
sarl
sbbl
lea
aas
push
xchg
test
push
mov
or
les
mov
daa
xor
mov
outsb
testb
inc
mov
stc
clc
adc
sbb
jge
xchg
adc
xchg
sarb
adc
xor
jb
fisttpll
cli
or
insl
sbb
jbe
lret
mov
pushf
jg
sti
lahf
scas
xchg
inc
push
cmp
mov
dec
mov
mov
dec
xchg
jns
aam
aad
inc
jmp
and
cmp
mov
ret
lock
hlt
xchg
push
shll
pop
mov
inc
hlt
jo
sub
clc
mov
push
pop
loope
sub
lods
cmp
loope
stos
sbb
pop
sahf
push
sub
lahf
pop
mov
cmp
pop
adc
mov
ror
out
dec
pshufw
inc
aas
sbb
scas
adc
jne
dec
jno
push
cs
popa
lds
test
mov
js
les
lahf
sahf
in
pushf
add
and
pop
dec
icebp
movsl
loop
lock
loope
push
push
sti
push
mov
jb
mov
cmpsb
xchg
flds
xchg
lods
mov
lock
lds
adc
mov
fsts
cmp
adc
push
push
test
jno
mov
test
pop
sbb
mov
shr
sub
icebp
xchg
sub
hlt
inc
popf
add
fwait
lods
xlat
add
inc
adcb
outsl
push
addr16
test
add
movsl
aaa
jne
in
stos
mov
mov
rorb
jae
and
sub
loopne
enter
inc
rclb
mov
icebp
pushf
xor
lock
inc
imulb
cmp
ja
sub
inc
sub
pusha
and
xor
ret
inc
jnp
sbb
repnz
mov
pop
mov
pop
cmp
aam
sub
in
repnz
xlat
mov
outsl
cmp
daa
inc
sti
pop
dec
loope
add
mov
xor
arpl
xchg
imul
shlb
mov
xor
ficomps
jge
pop
stos
daa
mov
mull
pop
mov
push
imul
dec
sub
int
popa
lahf
and
mov
loop
add
mov
sbbl
ret
push
push
pushf
pop
mov
dec
cmp
pop
dec
and
rclb
xchg
lods
daa
andl
mov
pop
stos
leave
dec
push
test
pop
push
jo
iret
sub
add
add
fsubrl
sub
pop
into
cmp
add
cmpsb
in
inc
mov
jmp
fcompl
mov
mov
movsb
sub
movsb
cmp
xchg
aaa
dec
pop
sub
not
push
mov
add
shrb
cltd
xchg
lret
cld
mov
mov
jmp
xor
popf
inc
pop
iret
adc
xor
and
fldenv
and
jae
jge
dec
test
aad
jge
mov
jg
jle
inc
es
push
nop
sbb
mov
inc
dec
dec
in
popa
mov
addr16
xchg
cmp
push
out
repnz
stos
xchg
outsb
add
in
mov
adc
mov
jmp
or
jl
add
sub
inc
mov
flds
or
cwtl
xchg
mov
loop
iret
daa
mov
scas
jmp
sbb
push
pop
rcrl
les
rclb
das
ss
movsb
scas
jns
lods
add
sub
in
mov
adc
pop
jle
jb
mov
mov
and
dec
push
lock
fsubrl
dec
mov
pop
dec
inc
mov
push
mov
jle
sub
dec
loope
dec
push
loope
pop
cmp
push
pusha
inc
sbb
cmp
lock
adc
adc
in
repnz
stos
into
and
or
hlt
push
jl
inc
sarb
add
ds
stc
orb
mov
iret
shr
cmp
sub
cmp
fwait
test
lods
outsl
adc
pop
scas
adc
dec
dec
cmpsl
shrl
lods
in
lcall
sbb
inc
mov
insb
cmc
cmpsl
mov
add
hlt
jo
loopne
int3
mov
inc
daa
inc
inc
sbb
test
pop
cmp
add
inc
push
roll
mov
and
pop
sub
movsb
insb
js
int3
mov
mov
dec
out
lea
outsb
insb
adc
cli
nop
push
sbb
sbb
cmp
std
push
push
test
fnsave
pop
testb
push
jecxz
and
cs
clc
jmp
arpl
mov
test
lret
mov
add
iret
jno
pop
in
xchg
cmp
cmpsl
jp
mov
dec
adc
stos
xor
and
and
xor
adc
push
push
jge
ror
lret
nop
push
jae
and
jnp
mov
jb
pushf
xchg
mov
mov
shl
adc
lret
xchg
lock
decb
mov
xchg
add
add
and
lcall
das
mov
mov
lock
cmc
pop
iret
and
cmp
mov
ret
shl
inc
mov
mov
jns
push
push
lcall
add
data16
cmp
mov
fs
call
sub
or
pop
in
add
xchg
and
sbb
jmp
jg
jno
fcmovne
mov
jo
adc
sbb
faddl
std
xor
xor
jmp
xor
xchg
jae
mov
mov
pop
mov
inc
scas
sbb
lret
fdivs
shll
shll
out
scas
jmp
or
test
addl
aam
jg
jae
cmp
push
das
adc
imul
loope
dec
bound
lods
mov
sbbl
addr16
fnstenv
mov
int
xor
std
sarb
pop
sti
decb
adcb
cwtl
addr16
loop
aaa
or
xchg
sahf
mov
push
dec
push
js
mov
ss
outsl
fdiv
mov
into
mov
xor
imul
test
mov
hlt
shrb
mov
push
mov
sub
mov
mov
test
clc
pop
dec
push
popf
xchg
and
push
mov
mov
sub
adc
ss
pop
xchg
in
mov
mov
les
imul
shlb
jmp
push
adc
xor
xor
movsl
pusha
cmp
cmp
jbe
mov
mov
inc
movsb
pop
out
jp
test
jl
mov
jb
ljmp
inc
mov
js
add
jp
sub
mov
pop
aaa
dec
push
or
cmpb
inc
cld
cmp
pop
movsbl
addr16
pop
cmpsb
cmp
push
inc
iret
push
mov
sbb
outsl
adc
push
xor
or
add
popa
lods
repnz
xchg
mov
out
mov
jae
cmpsl
ds
lcall
insb
pusha
lret
iret
lret
xor
mov
aas
incb
jge
push
push
bound
fsub
cmp
jns
pop
lcall
rol
cmp
ret
int3
push
inc
mov
add
and
sbb
adcl
pop
je
enter
outsl
adc
fwait
movsb
mov
ficoms
movsl
cld
xchg
les
shr
sub
mov
es
jo
jl
adc
std
adc
mov
inc
push
repz
iret
fimull
xlat
jae
cld
movsb
clc
push
inc
js
fwait
test
adc
push
cltd
pushf
idivl
xchg
jns
lret
cld
xchg
inc
nop
mov
addr16
shrb
add
stos
lods
aas
or
cmpsl
out
xchg
jae
popa
sub
lds
in
push
adc
insl
jbe
loop
mov
das
test
adc
repz
jb
popaw
in
xor
pusha
pop
sub
xor
inc
aas
cltd
loope
popa
pop
hlt
lea
mov
fidivrl
roll
or
pusha
mov
repz
aaa
sub
mov
data16
cmpsb
sub
add
repz
movsb
push
jo
mov
cmp
sub
insl
fdivl
adc
in
sbb
int3
lahf
mov
sbb
and
mov
xor
and
xor
lock
ja
or
lret
cs
jp
push
test
sbb
pop
ss
cmp
ret
sti
xchg
hlt
int
inc
or
sub
add
cs
jp
mov
xor
xor
cli
fisubs
sbb
test
inc
insb
jmp
mov
mov
push
clc
push
and
mov
cld
push
mov
adc
scas
and
inc
or
or
dec
pop
loope
lods
jo
in
sub
push
leave
fistl
call
adc
inc
mov
mov
push
adc
int3
fwait
dec
mov
stc
mov
push
xor
addr16
ret
dec
push
ds
popf
arpl
mov
fs
test
ljmp
fwait
scas
xchg
mov
and
iret
jmp
je
cs
xchg
add
cmp
or
xor
adc
lods
and
aad
bound
inc
fstpl
aas
lods
mov
add
cli
xchg
je
sub
mov
idivb
add
iret
nop
jae
cmp
xchg
sbb
sbb
bound
and
cmpsl
cmp
adc
add
bound
call
push
outsb
pop
cmp
mov
adcb
aad
dec
inc
hlt
dec
add
pop
lret
lods
aam
loope
mov
cli
mov
push
inc
sbb
and
fwait
xorb
je
dec
mov
filds
das
imull
xchg
mov
cli
jne
pop
push
rcll
repz
loope
cs
xchg
xor
lahf
and
into
lods
dec
lock
jns
push
or
aad
dec
dec
xchg
push
loop,pt
xchg
fcom
aad
pop
test
xchg
push
fiadds
mov
lcall
or
sub
sbb
sti
xchg
test
add
loop
sti
imull
sub
test
lcall
inc
data16
shl
outsb
daa
dec
test
and
pop
daa
lcall
popa
xor
cmp
bound
mov
jecxz
jp
nop
mov
add
scas
mov
or
test
jecxz
fsubp
cmp
call
sub
jg
add
insb
ret
stos
push
add
imul
dec
or
push
xor
push
scas
jg
jmp
lods
jmp
jge
popf
hlt
cmp
cmp
mov
shl
mov
and
xchg
pop
lods
cmp
out
push
inc
stc
or
mov
xchg
ljmp
int3
mov
push
outsl
adc
je
dec
adc
dec
ret
push
sahf
sbb
and
pushf
testl
mov
jno
jmp
rcll
mov
sub
or
mov
pusha
xor
inc
xor
fcoml
inc
mov
adc
fmuls
test
rorb
fistpll
orb
insl
add
pushf
cmp
pop
imul
popa
mov
push
jle
scas
ja
mul
scas
fisubs
mov
xchg
mov
fsubl
je
fldl
inc
cli
or
jmp
and
sti
jbe
lret
adc
pop
or
out
pop
push
jl
inc
jo
ffreep
dec
movsl
mov
cmp
mov
push
push
out
arpl
test
xlat
int
dec
js
bound
jne
in
sub
sti
mov
push
or
sub
add
in
push
and
push
sub
cmp
pusha
lret
and
int3
adc
inc
mov
lock
push
xor
into
add
ja
jbe
mov
inc
dec
push
cmpsl
insb
adcb
xor
leave
and
ljmp
inc
add
les
nop
cwtl
out
inc
sbb
cmp
fadds
enter
outsb
and
insl
shll
aaa
call
dec
add
dec
bound
mov
bound
ret
dec
inc
inc
insl
in
and
sub
nop
pop
mov
pop
mov
xchg
push
adc
mov
insl
jl
jne
loope
pushf
decl
mov
cmc
rorb
daa
adc
loopne
push
cli
cmp
sbb
pop
cwtl
inc
ljmp
mov
push
xlat
icebp
int3
test
push
in
pop
push
aas
push
outsl
and
pop
push
mov
sbb
testl
adc
push
cmpsl
ja
ljmp
jg
stos
sbb
jle
stos
jge
in
jnp
push
lods
adc
or
jne
jmp
xchg
mov
mov
mov
and
rcl
jne
popa
mov
inc
mov
daa
cmp
enter
subl
xchg
sbb
aaa
pushl
in
popf
push
pop
jb
mov
jle
xor
push
leave
fstpt
mov
push
movsl
mull
xchg
dec
mov
mov
mov
xchg
lds
lret
pop
aas
lock
and
pop
adc
ret
push
aaa
subl
enter
dec
loop
rorl
sbb
lods
sahf
movsb
repnz
and
xor
add
jl
call
push
call
mov
xchg
xor
push
add
mov
sub
dec
jge
xor
inc
out
int3
inc
fdivrs
rcr
and
cmc
xchg
leave
mov
cmp
mov
into
xor
testl
les
mov
mov
and
pop
adc
gs
pop
cltd
sti
lds
sub
jno
cmp
andb
pop
aam
add
outsl
pushf
mov
jle
pop
lcall
push
hlt
cmp
inc
mov
movl
repnz
jg
loope
push
frstor
xlat
ffreep
subl
js
xchg
xchg
and
inc
repz
aaa
into
test
mov
jmp
inc
add
mov
push
jge
push
imul
mov
or
in
arpl
dec
fidivl
push
outsl
icebp
cltd
int
cmp
sbb
lods
mov
mov
inc
pop
cltd
aad
xor
mov
mov
sbb
push
inc
shll
mov
pop
insl
int3
pop
add
dec
bnd
leave
mov
mov
pushf
cs
mov
cmp
inc
bound
jl
and
inc
je
leave
movsl
and
daa
rcl
inc
mov
dec
movsl
cmp
fbld
cmp
ljmp
shrl
into
jnp
xrelease
cmpsl
test
test
adc
fists
lea
dec
loop
testb
pop
sbb
pop
gs
dec
fidivl
shrb
imul
lock
sbb
jnp
icebp
mov
aad
add
sbb
arpl
xlat
in
les
dec
testb
ret
popl
popf
insl
adc
lock
fldenv
add
jnp
shll
add
repnz
mov
pop
pop
popa
push
xchg
lret
lock
xor
mov
loopne
lahf
push
aad
not
mov
inc
and
add
xchg
xchg
pop
into
add
jno
mov
clc
popa
or
in
add
repz
mov
xchg
jecxz
jg
adc
or
pop
xor
inc
push
ss
scas
jae
pop
in
mov
fisttpl
mov
fstl
in
shl
push
int
mov
daa
loop
loopne
enter
mov
movsb
push
sub
int
jae
mov
aas
pop
push
mov
fidivrs
push
jmp
and
push
mov
dec
jno
inc
sbb
mov
lret
mov
pop
push
les
push
jo
add
mov
movsb
int3
out
jecxz
loope
cmp
js
dec
mov
mov
ret
lods
jg
aam
jae
lret
xlat
insb
stos
pop
add
or
pushf
idivb
xor
outsl
sub
mov
push
sbb
fs
mov
lock
lods
mov
outsb
sbb
sbb
std
mov
cld
loope
aad
insl
add
mulb
add
adc
xor
ss
inc
mov
jne
repz
scas
std
pop
sbb
loop
pop
scas
or
shll
scas
xor
mov
outsl
into
mov
adc
out
lods
out
aas
data16
xor
or
mov
outsb
push
xchg
pop
mov
sbb
test
and
idivb
out
mov
sub
xor
adc
nop
sbb
cmp
shl
loopne
je
ja
sub
cmp
and
push
jg
out
scas
lahf
mov
and
mov
cmpl
push
lahf
inc
push
adc
and
mov
fisttpll
shl
fstpl
mov
mov
idivb
pushf
test
jl
cmp
xor
or
ds
adc
sbb
add
imul
sub
or
leave
or
mov
ret
insl
xorl
stc
mov
addb
scas
xor
mov
incl
fsts
jo
pop
push
imul
clc
sub
pusha
addr16
stc
int
frstor
mov
pop
in
fs
sub
mov
call
mov
pop
and
jmp
jno
jae
push
andb
add
inc
out
divl
xor
cmp
sub
pop
cmp
inc
aam
xor
push
in
das
pop
je
cmp
divb
shrl
adc
or
test
call
xchg
sub
shll
iret
imul
sbb
aas
mov
jmp
xchg
sbb
xchg
jmp
fidivrl
push
mov
sbb
das
gs
stos
test
push
shrb
movsb
push
dec
mov
xlat
pop
sbb
pusha
dec
xchg
repnz
inc
data16
mov
shrl
xchg
mov
push
lret
sarl
pop
cmpsb
add
adc
push
jae
ret
pop
loopne
jae
gs
call
bound
call
test
outsl
int
cld
jno
mov
pop
jo
out
loope
in
loope
call
lret
inc
fldl
pop
jg
dec
test
stc
mov
sti
adc
add
shl
push
cmp
cmc
pop
mov
jmp
fnstenv
mov
cmpl
cmpsb
cmp
mov
testb
aas
dec
mov
sti
adc
insb
sub
push
fsubr
xor
ljmp
mov
mov
sub
jae
stos
fs
push
mov
and
adc
test
in
fadds
fsubrp
into
push
mov
xor
ss
jns
hlt
js
jmp
push
sbb
out
sbb
cmp
inc
scas
xor
cli
push
xor
sarb
mov
testl
daa
aaa
inc
mov
inc
popa
or
scas
add
movsl
mov
es
dec
sub
mov
stc
in
or
jnp
push
inc
js
jae
outsl
shll
stos
scas
sbb
pop
add
mov
jae
imul
inc
pop
das
fisubrs
cltd
pusha
idivl
div
data16
lret
inc
push
lcall
sahf
clc
data16
popa
es
scas
mov
popa
imul
pusha
ret
pop
fimuls
and
fistl
or
es
or
pop
out
int
movsb
jns
sub
idiv
mov
nop
daa
and
push
cli
xchg
xchg
stc
dec
call
and
mov
mov
jge
mov
movsl
xor
or
xchg
pop
out
push
outsl
insl
clc
pop
stc
jbe
fisubs
incl
mov
pushf
jg
test
stos
sub
and
std
loopne
add
pop
bound
hlt
xor
shl
dec
xchg
inc
cmpsb
lea
mov
int
and
cmpsl
out
push
or
ljmp
fcomi
mov
into
loop
mov
mov
pop
sub
pop
xor
leave
lods
daa
rol
insb
dec
mov
pusha
adc
mov
xchg
cltd
ljmp
pop
sbb
push
mov
jae
popa
bswap
mov
mov
es
int3
mov
xor
xchg
or
inc
mov
or
xchg
insb
push
or
lcall
xor
stos
repnz
call
mov
dec
int3
loopne
jne
xor
lods
sbb
add
fdivs
jp
mov
loopne
inc
ds
hlt
jbe
mov
push
push
push
mov
push
adc
inc
and
push
cmp
test
jge
lret
inc
xor
mov
insl
and
popa
stc
pop
push
pop
dec
add
sbbb
pushf
push
call
pop
stc
cmp
jno
loopne
iret
adc
and
jg
insb
scas
xchg
cmpsl
pop
jae
mov
mov
inc
push
in
or
outsl
cmp
daa
xchg
out
jo
mov
call
mov
negb
push
clc
and
lea
cld
inc
stc
pop
adc
mov
push
mov
and
inc
sbb
dec
and
hlt
mov
scas
xor
xchg
popf
mov
push
imul
pop
cli
scas
pop
repnz
stos
fdivrs
inc
mov
mov
lea
inc
daa
push
jbe
and
cld
or
incl
adc
fdivs
scas
int
pushf
jg
in
inc
and
xchg
lcall
push
scas
xchg
jg
andl
or
sbb
and
movsl
sub
mov
gs
pop
mov
loope
add
pushf
xor
jg
shlb
sub
pop
and
xchg
pop
stc
jbe
cld
sbb
lock
inc
fcoml
int
fwait
cmp
int
push
xor
repz
mov
adc
sti
pop
das
nop
xor
inc
cmc
mov
mov
pop
aaa
push
adc
dec
ret
xor
movsl
mov
inc
jp,pt
repnz
push
add
mov
aaa
aaa
lods
pop
popl
cmp
fcomi
mov
inc
es
testb
hlt
stos
addr16
pusha
xchg
push
mov
addl
sbb
push
pop
adc
je
addr16
decl
push
push
and
aaa
bound
stos
push
or
inc
adc
xlat
in
filds
rorl
lcall
insl
ja
xor
ret
rcrl
stos
ds
popa
add
sub
outsl
mov
push
pusha
xchg
jle
fs
clc
sbb
lcall
in
jns
imul
xchg
sub
push
xchg
jp
xlat
shl
insb
cmpsl
mov
push
mov
and
je
out
xchg
mov
jbe
xor
and
push
jg
xchg
jns
pop
and
fsubrs
cld
cmp
ds
aaa
test
mov
add
inc
mov
aad
sub
xor
cltd
cmpsl
hlt
mov
mov
pop
mov
jo
icebp
mov
push
lds
insl
pushf
xchg
sub
push
cmpsb
mov
test
jmp
in
fs
lcall
hlt
xchg
mov
add
mov
xlat
or
outsb
xor
popf
pop
mov
mov
and
fnstsw
push
and
fs
pop
in
xchg
jle
cmp
int3
or
push
test
dec
loop
decl
scas
mov
inc
mov
adc
in
pop
int3
filds
mov
pop
into
fnstsw
mov
gs
ja
mov
and
aad
xlat
shll
rorl
mov
push
ja
fs
rol
xchg
lea
into
repnz
shrl
and
pop
ret
sub
cs
aad
dec
xor
addb
sbb
loope
ljmp
cld
push
push
stos
mov
or
and
int3
push
arpl
out
shll
pop
into
call
pop
add
pushf
pshufw
cmpsb
ljmp
push
pop
cld
in
nop
lock
mov
and
les
out
mov
pop
xchg
shrb
lcall
xor
push
insl
cmp
xor
and
sub
jae
jmp
lods
push
cmp
stc
or
into
xchg
dec
pop
mov
sub
outsl
adc
loope
add
xor
jo
inc
mov
test
sahf
jecxz
stos
add
imul
push
inc
incb
jg
inc
push
inc
loopne
push
sub
inc
pop
pop
dec
outsl
jnp
jl
dec
ret
mov
enter
in
insl
adc
bound
push
int3
mov
mov
out
int3
add
mov
popa
ljmp
xlat
and
popa
jge
sbb
sbb
test
xor
fisubl
insb
dec
in
add
mov
xchg
pop
or
sbbl
inc
pop
push
movsl
sahf
hlt
popf
lret
xor
aaa
sub
lret
fsincos
shlb
inc
movsb
xor
adcb
pop
lcall
cwtl
push
dec
cli
pushf
loope
sub
and
sahf
push
imul
insb
leave
in
js
movsb
inc
lret
rcll
jb
inc
xchg
pop
lahf
lret
filds
fwait
lret
rolb
lret
test
xchg
adc
mov
nop
push
or
pop
sub
or
lcall
pop
push
mov
call
pop
xchg
jle
adc
out
dec
mull
xchg
enter
movsb
pop
icebp
adc
jl
ret
mov
and
rcl
sub
mov
fldt
stos
fucom
xchg
xchg
sub
add
jnp
nop
inc
aam
or
int3
inc
push
call
imul
hlt
inc
and
mov
scas
sub
xcrypt-cbc
cmpsl
xchg
fldcw
cmp
jge
dec
popf
mov
stc
inc
xchg
mov
bound
push
aam
fidivrl
jg
adc
pop
outsb
test
mov
int
dec
and
push
notl
ss
mov
imul
pop
jno
xlat
and
cmp
jle
or
and
fisubl
lds
les
leave
jae
xor
adc
adc
or
mov
paddb
loop
gs
jle
jne
jb
subb
xlat
sub
jecxz
jmp
jo
lret
lret
and
pop
ja
adc
sub
push
cmp
dec
xor
mov
mov
cmpsb
or
js,pt
push
pop
fcoms
in
notb
frstor
xchg
clc
pusha
mov
adc
jl
pop
jne
das
xor
cmpsl
pop
mov
cmp
dec
out
ficoms
push
mov
mov
pop
sahf
jb
aam
lods
dec
scas
stc
mov
lret
cmp
mull
jl
cli
cmp
std
jo
sbbb
testl
stos
xchg
sbb
xor
mov
lret
lock
pop
outsb
mov
mov
shll
adc
stc
mov
jns
mov
gs
mov
pop
inc
sub
addr16
inc
popa
cmp
cmpsl
xchg
push
mov
pop
out
cmpsl
sub
aad
adc
jae
inc
dec
repnz
push
mov
popa
les
lock
movsb
push
das
inc
out
cmc
xchg
jno
in
jmp
pop
sub
pop
xchg
dec
andl
cmpsb
popf
lods
pop
sbb
or
xchg
add
lret
adc
sub
mov
cmpsb
push
out
pop
imulb
xchg
jge
andl
sbb
mov
fcoms
cli
fdivrl
stos
pop
mov
test
sub
shll
out
lcall
movl
or
dec
mov
inc
xchg
pop
lahf
data16
jg
pop
fwait
je
cmp
test
xchg
add
into
add
cmp
in
insl
or
mov
adcl
dec
push
sub
nop
xor
jmp
pop
or
sub
pop
repnz
cwtl
std
jo
jecxz
or
out
inc
mov
in
ror
sbb
lods
ljmp
scas
fsubp
sahf
push
inc
xchg
and
roll
cmp
sub
mov
gs
xchg
jo
cmpsl
bound
andb
pop
inc
fsubrl
inc
fwait
std
xchg
jge
aas
aas
jo
fisubs
xchg
dec
enter
push
repnz
arpl
cmp
xor
inc
fstpl
jl
iret
push
and
add
daa
add
inc
mov
dec
and
push
sti
pop
push
cmpsb
ljmp
jmp
out
xchg
insb
pop
mov
pop
sub
lcall
movsl
dec
inc
dec
gs
insb
outsb
sti
mov
dec
fisubl
xlat
cmp
aam
insl
add
mov
ret
xlat
cmp
dec
mov
dec
ret
cli
insb
jle
loope
cmp
xchg
mov
std
push
dec
pop
in
daa
cld
cvtps2pd
jg
jl
cmp
push
stos
daa
cmp
inc
add
push
inc
sar
jle
xor
enter
shlb
dec
pop
fcomi
xchg
out
test
ficoml
clc
add
and
lds
sbb
mov
push
ljmp
add
dec
mov
jbe
jo
icebp
mov
lret
test
mov
sub
in
mov
int3
cmp
cmp
lahf
jnp
xchg
adc
cwtl
jae
or
pusha
mov
jbe
push
ljmp
les
mov
pop
jb
xchg
xor
ftst
fisttps
divb
fwait
ljmp
adcl
jle
jo
aam
jb
xor
jle
inc
inc
jo
xchg
and
mov
or
aaa
pop
mov
popa
fcoms
addl
xor
and
push
jecxz
loopne
popa
fdiv
add
rcl
arpl
into
cs
pop
out
mov
dec
sbb
sbb
ds
xor
popa
inc
add
adc
mov
inc
dec
out
pop
test
push
jo
nop
xchg
adc
mov
mov
or
sub
inc
fsubr
in
scas
push
in
ja
xor
inc
sbb
xchg
mov
data16
test
mov
dec
xchg
jmp
or
lods
aad
cmc
add
mov
and
ds
adc
ljmp
push
addb
movsl
sub
into
pop
add
mov
push
mov
aaa
and
pop
jno
or
mov
push
test
ja
mov
movsb
add
movsb
inc
insl
lds
insl
dec
push
insl
cmpsb
dec
mov
stc
andb
cmp
xor
lahf
or
or
sub
or
jg
cmp
out
ljmpw
rolb
mov
frstor
andb
gs
testb
xchg
adc
out
das
ret
sbb
call
aad
pop
pop
ret
jge
pop
sub
scas
xor
jg
jle
push
jbe
xor
mov
push
pop
scas
fisubl
inc
pop
cmpsb
fs
inc
iret
aad
std
push
mov
mov
ficomps
xor
cmp
cld
cmp
in
xor
jnp
add
sbb
jbe
mov
mov
cmp
inc
pop
std
rorl
and
stos
pop
xchg
xchg
pop
cmp
jl
push
stos
icebp
pushf
fs
push
ja
and
imul
xchg
gs
lret
insl
pop
mov
hlt
movsl
and
loopne
scas
inc
fcompl
or
mov
dec
cmc
adc
push
roll
and
aaa
cs
cmp
jmp
in
stos
cs
out
leave
loop
xchg
add
pop
fldcw
shrl
xchg
push
jmp
or
int
pusha
ljmp
cmp
fdivp
aaa
imul
jns
add
test
add
push
and
xor
xchg
fnsave
mov
decb
xchg
pop
adc
aam
jnp
mov
pusha
cltd
std
cltd
mov
int
outsl
enter
movsl
push
dec
xchg
jge
and
loope
pusha
int3
shrl
repz
aaa
clc
icebp
dec
mov
push
xlat
lret
pop
iret
gs
in
sbb
incb
out
sub
test
xor
push
cmpsl
pop
and
xchg
adc
lret
add
pop
lods
dec
fnstsw
pop
lret
dec
and
daa
outsl
inc
mov
das
js
xor
sub
jmp
mov
test
push
lods
mov
lret
imul
repnz
and
jns
stc
push
cmp
mov
in
push
and
aad
testl
cmp
insb
popf
sub
mov
xor
jp
sub
sbb
and
pop
ret
push
inc
sbb
lock
fcomps
stos
int
jecxz
je
imul
dec
pop
out
outsl
test
xor
aaa
clc
cwtl
and
mov
dec
cltd
mov
stos
jmp
or
outsb
add
imul
push
nop
nop
jp
fstps
cmp
adc
das
dec
mov
jl
lea
mov
push
inc
cld
inc
and
into
inc
fs
mov
xchg
or
push
out
ja
cwtl
icebp
jp
jmp
in
fwait
test
or
cmpsl
lods
mov
dec
jne
pop
sub
dec
in
loop
test
xor
in
sbb
dec
or
pop
sahf
jno
cmpsl
cmp
andl
icebp
mov
and
outsl
cli
push
mov
es
fists
adc
and
daa
popa
leave
or
and
ss
or
pushf
imul
mov
mov
loope
cmpl
pop
test
mov
sbb
pop
ljmp
adc
pusha
ss
shlb
push
repz
in
ja
cmc
test
ds
pop
xor
dec
push
adc
pop
stos
inc
mov
and
and
xlat
push
xlat
clc
out
scas
int3
filds
pop
cmpsl
ds
rclb
dec
sbb
jl
icebp
test
leave
or
push
lods
push
faddl
stos
cld
or
aaa
rolb
mov
call
pop
sbb
ss
jl
mov
mov
push
out
pop
or
jecxz
aas
mov
cmp
sub
nop
sbb
int3
xor
xor
jmp
cmp
or
pop
rorl
gs
xlat
inc
dec
lock
cli
pop
rorl
pop
lea
leave
ret
add
insl
xchg
dec
stos
xchg
sub
fisubs
xchg
or
jge
lods
inc
mov
movsl
mov
adc
mov
jno
lds
js
cmc
push
imul
dec
mov
xor
mov
fwait
rcrl
test
jp
xor
pop
mov
xor
xchg
xor
push
icebp
jmp
mov
adc
js
fbstp
pop
sub
xchg
js
sbb
rcrl
sahf
sbbl
test
das
pop
jl
popf
and
fiadds
mov
or
jp
pop
xor
in
es
push
movsb
shlb
xchg
into
mov
xor
test
scas
pop
lods
sbb
stos
sbb
xchg
sub
sub
sbb
push
mov
adc
lcall
mov
jne
mov
cmpsl
adc
insl
mov
jge
stc
fldt
mov
push
jge
stos
popa
pop
jb
jl
jg
jge
mov
popf
push
pop
loopne
subb
call
mov
jmp
pop
imul
sbb
lcall
xchg
imul
ja
test
out
or
roll
nop
out
psubsw
dec
ja
lods
nop
aam
dec
aad
sbb
test
jne
lahf
push
mov
leave
pusha
jmp
jmp
add
mov
fwait
inc
outsb
ss
out
pop
call
or
ljmp
shll
adc
or
subb
mov
xor
cwtl
out
movsl
add
clc
das
xlat
and
mov
ja
or
in
lea
sbb
std
clc
jo
and
mov
jle
out
mov
bound
sbb
aas
movsb
jl
xchg
push
mov
test
gs
test
xor
add
sub
jmp
xor
sbb
mov
fsubs
adc
out
add
sub
lods
std
mov
sti
jbe
subl
push
faddl
sbb
and
rcr
xchg
shl
sti
push
js
daa
sub
add
xchg
mov
and
in
dec
pop
inc
push
mov
shlb
mov
out
push
xchg
ljmp
adc
mull
or
and
fiaddl
sbb
in
jbe
jmp
pop
sbb
sbbl
imul
aam
or
xchg
mov
sub
add
fisttps
incb
inc
or
int3
test
out
leave
inc
cmp
adc
xlat
lds
add
mov
icebp
or
xor
nop
cmp
or
add
sahf
dec
push
jno
mov
pop
pop
pop
mov
stc
mov
push
xor
popf
add
into
and
fldt
push
jecxz
inc
les
daa
fbstp
xchg
push
insb
int3
mov
or
xor
and
pop
movsl
jg
in
scas
or
and
sbb
push
cltd
xchg
xor
push
loop
xor
imul
cmp
mov
adc
fs
or
cltd
xchg
lahf
inc
xchg
xchg
sti
movsb
pop
xor
xchg
mov
out
mov
dec
repz
dec
rorl
popf
ret
fbstp
aas
and
in
test
movsb
fidivs
popa
mov
or
aam
sbbl
fidivs
mov
push
fadds
xchg
repnz
cmpsb
rol
mov
adc
nop
push
gs
pop
mov
sbbb
popf
sub
repnz
mov
test
mov
xchg
xchg
inc
xor
xor
sbb
push
cwtl
pop
xor
and
stc
cmp
stos
inc
pop
cmpl
jl
idivb
adcb
icebp
mov
sahf
clc
inc
push
mulb
lret
push
icebp
push
jne
shll
mov
fcomip
test
shlb
xchg
xchg
dec
cmp
fwait
adc
pop
push
int3
pop
xchg
loop
rcl
mov
daa
mov
popw
inc
in
mov
in
pop
lods
in
jge
or
push
fs
push
inc
dec
xchg
jb
inc
fstl
cs
scas
pop
cmp
ljmp
arpl
mov
fdivrs
movsl
adc
dec
aaa
mov
pusha
test
push
into
cld
in
jns
mov
push
jno
pop
jae
nop
xchg
push
mov
imul
sbb
sub
cmp
outsl
stos
inc
mov
and
mov
sub
cltd
stc
rcr
dec
sub
into
add
fs
fs
push
sub
popf
mov
stc
dec
aaa
in
loope
fbstp
cmp
lods
pop
adc
adc
lahf
out
lret
fistl
or
cmp
dec
loop
scas
cli
cmp
dec
mov
stos
sub
cs
in
and
stos
lds
sahf
decb
push
cltd
mov
and
int3
xchg
sbb
adc
lcall
in
aas
cmp
mov
mov
addr16
ret
cs
inc
mov
les
inc
dec
push
jbe
outsb
in
sarb
xor
dec
mov
push
fwait
xlat
lea
and
sbb
xor
aad
out
pop
mov
stos
cltd
xor
in
xor
mov
addr16
jne
mov
ffreep
xchg
push
or
je
jne
xchg
rolb
dec
jmp
int
outsl
adc
cmp
arpl
mov
cld
fstpt
adcl
pop
push
dec
gs
jns
cmp
xor
adc
mov
out
push
cmp
xchg
rcrb
mov
dec
xadd
jnp
dec
push
push
adc
leave
shr
inc
sbb
pop
mov
dec
mov
pop
jae
outsl
mov
lcall
pop
xor
and
fisttpl
leave
int
stos
test
outsl
es
xor
lds
push
jnp
aaa
and
outsb
js
jp
jb
sub
push
adc
xchg
shlb
inc
pop
iret
inc
insl
cmp
stos
cs
outsl
pop
inc
pop
outsb
jp
ss
mov
hlt
mov
jle
into
jle
adc
int
int3
arpl
outsb
xchg
out
mov
ljmp
xchg
dec
arpl
iret
clc
inc
add
jmp
inc
xchg
xchg
xor
cmc
ret
rcrl
pop
ljmp
insb
inc
std
push
sub
rcr
fcmovne
insb
stos
and
lods
cld
mov
call
sbbb
cmp
int
cli
pop
lods
ja
sbb
or
push
lods
push
jp
jnp
mov
xchg
or
jne
and
jae
test
insl
aad
mov
mov
pushf
or
scas
pop
mov
loope,pn
shr
jns
mov
fstps
arpl
mov
pusha
and
daa
push
xchg
ret
xor
mov
push
xor
pop
sbb
xor
inc
int
xor
in
aaa
iret
test
sahf
mov
in
sub
push
test
add
sti
xor
pop
xchg
xor
mov
and
xchg
xor
jecxz
das
cmpsb
ror
fstpt
dec
sub
xchg
adc
adc
scas
and
sub
shll
jg
lea
icebp
out
push
inc
xchg
adc
xchg
mov
mov
sbb
adc
mov
ss
addr16
cmp
jae
test
insb
loopne
testb
ljmp
loop
mov
test
stos
mov
push
xchg
sub
jns
sbb
mov
das
icebp
pop
hlt
mov
daa
adc
flds
dec
out
stos
mov
test
or
flds
fdivp
adc
test
add
sbb
je
sbb
add
lret
pop
enter
out
cli
jge
xor
pop
mov
xchg
pop
stc
or
lret
lods
add
xor
jo
push
out
ss
cmpsl
dec
out
cmp
pop
xchg
sub
pushf
sbb
mov
movsl
std
push
cwtl
rcr
flds
stos
push
jne
test
inc
call
pop
xchg
mov
and
repz
divb
data16
adc
mov
pop
xor
push
ret
sahf
inc
cmc
aaa
cwtl
push
lret
push
in
fnsave
xlat
sbb
sti
aam
cltd
mov
sub
cmp
ja
jns
lds
leave
mov
repnz
ss
adc
subl
nop
mov
sub
sbbl
jmp
xchg
sbb
jl
mov
dec
pop
sub
mov
xchg
xchg
jo
lds
cmp
pop
bound
mov
push
xor
out
xor
xlat
int
push
pop
ret
jle
cld
cltd
push
mov
jb
push
cwtl
gs
sti
stos
jbe
iret
sub
xchg
jp
push
in
jp
mov
dec
shr
test
mov
mov
movd
pop
mov
ja
jne
jge
sub
mov
push
incl
push
sbb
leave
xor
sub
in
xchg
jmp
or
mov
scas
hlt
jge
pop
ret
outsb
scas
jmp
insb
adc
fcoml
jmp
and
mov
and
nop
lods
cmp
ja
adc
inc
lea
repz
bound
loopne
jb
dec
xchg
push
add
pop
and
sub
lea
cli
or
sbb
pop
jg,pn
aad
outsb
mov
lahf
mov
mov
push
lret
inc
add
es
push
and
push
je
jae
notl
xchg
jecxz
cmp
xor
push
stc
sahf
pop
fwait
daa
jg
divb
push
mov
int
inc
jmp
fsubs
mov
mov
loopne
xchg
test
loop
repnz
ss
fbld
inc
loop
xor
add
pop
sbb
nop
call
out
enter
xchg
jmp
into
sub
pop
pop
or
daa
push
shll
in
pop
hlt
movsl
cmp
das
pop
ss
stc
cmp
jns
cmp
cs
fcomps
push
das
or
and
bound
inc
aas
aaa
cmp
sub
fsubr
mov
xor
add
test
xor
add
inc
icebp
jno
or
insl
push
push
gs
dec
lahf
cmpl
stc
stos
sub
hlt
sbb
push
mov
mov
aas
shrb
cmp
add
sahf
stos
std
inc
faddl
dec
pushf
pop
sti
sub
pop
sbb
je
jecxz
jp
cmp
mov
insb
sbb
xchg
sub
add
call
outsb
stos
sbb
xchg
mov
aam
add
test
push
shll
xchg
pusha
add
and
subl
mov
mov
mov
mov
xor
lock
out
xchg
mov
xchg
stc
jg
fcmovnb
mov
mulb
rcr
adc
xchg
push
loopne
mov
lock
jge
add
fcompl
push
out
fidivs
loopne
popf
arpl
cld
lods
ror
stc
xor
xchg
lds
rcrl
leave
mov
iret
aas
sbb
push
push
mov
lret
mov
fnstenv
ret
dec
jle
dec
mov
dec
loop
cwtl
xchg
add
aad
mov
cmc
sahf
xor
imul
rcll
rol
pop
adc
xchg
jp
mov
jae,pn
clc
xchg
cmp
pushf
sub
test
out
push
sbb
xchg
in
pop
repz
lcall
shl
adc
adc
into
fidivl
add
jns
icebp
loopne
xchg
sbb
mov
es
js
lret
or
xlat
mov
jmp
jp
or
add
jg
cwtl
in
mov
cmc
mov
adc
adcb
popa
clc
pushf
cmp
mov
pop
xor
sahf
call
or
pusha
add
cmp
testb
fisubrl
es
pop
imul
mov
and
push
xlat
insb
inc
sub
mov
sbb
sub
sahf
xchg
test
cmpsl
out
or
push
push
int
in
lret
jle
repnz
scas
dec
jp
repz
cmc
and
dec
fstps
rclb
das
xor
or
sbbl
das
jmp
xchg
jg
in
cmpl
or
shl
arpl
pop
clc
mov
fdivrs
pop
pop
scas
lret
pushf
repnz
fbstp
cmp
pushf
push
shrl
mov
mov
mov
adc
ror
fs
es
iret
xchg
ja
lock
or
mov
dec
jl
test
sub
lods
fisttpl
push
xor
fdivs
push
push
sahf
push
inc
shlb
mov
dec
ja
pushf
pushf
ljmp
stc
lcall
xor
test
jg
adc
adcl
jmp
cmp
in
xchg
data16
pop
hlt
mov
push
pop
dec
adc
xor
push
fiaddl
cmp
fs
xchg
adc
push
int3
sbb
mov
add
xor
xor
inc
faddl
xchg
mov
or
dec
sub
daa
fstl
ss
fidivs
cmc
xchg
lea
push
lea
adc
sbb
sub
adc
test
aas
cwtl
and
push
sbbb
cli
jecxz
mov
ret
xlat
stos
push
adc
dec
loop
aas
xorl
cli
enter
loop
outsl
adc
cmp
inc
mov
cmp
outsb
outsl
add
icebp
movsl
mov
into
add
rcl
mov
rcr
inc
stos
mov
ja
out
and
mov
dec
sbb
adc
lahf
dec
xor
inc
xor
xchg
js
call
cld
pusha
aaa
pop
mov
add
add
add
inc
xor
std
cmpsl
pusha
and
pop
fisttpll
mov
fildll
addl
dec
data16
jge
adc
pusha
movsl
shll
xchg
js
cmpsl
subb
ja
int3
pop
sub
xchg
sub
les
cmp
in
mov
xor
pop
fldl2t
rcll
dec
push
stos
pop
scas
orl
cmp
pop
scas
push
add
lahf
add
mov
daa
lcall
and
mov
push
mov
daa
or
enter
std
jg
jbe
arpl
mov
retw
and
jns
jno
out
inc
push
lahf
out
stos
or
adcl
cwtl
sbb
mov
test
adc
add
in
pop
aas
mov
pop
sub
fisubl
and
cmpsl
mov
adcl
dec
scas
cmp
mov
adc
lods
mov
test
jge
and
jno
int3
rcrb
push
jmp
push
cmp
aad
lea
dec
jmp
xlat
mov
and
cmp
push
jno
in
ss
inc
movsl
adc
in
xor
decb
mul
je
adc
ret
xchg
push
mov
pusha
sub
pusha
pop
cwtl
shrl
mov
pop
mov
lods
cmpsb
lock
xchg
mov
push
dec
mov
int3
jl
push
lret
lretw
cs
mov
xor
ds
jle
cltd
es
or
mov
push
rcr
aas
push
fisttpl
jne
gs
and
xlat
in
repnz
push
pop
negl
pop
icebp
scas
aam
imul
mov
cmp
push
in
ds
cmp
rcrb
or
pusha
clc
inc
pop
cmp
add
popf
dec
mov
shll
lret
shrl
fstl
inc
andb
pushf
jle
cltd
mov
and
inc
xchg
mov
daa
adc
mov
xchg
fisubl
adc
mov
addr16
mov
cmp
jge
xchg
aad
ret
out
call
dec
jmp
jmp
aaa
xchg
pop
or
push
sbb
dec
xor
push
and
mov
sbb
inc
movsb
sbb
cmp
sti
ja
sub
cmova
dec
scas
loope
dec
cmp
and
or
push
xchg
pop
test
outsb
push
fcomi
xchg
das
cmc
mov
mov
ss
int
in
movb
jle
mov
push
popl
por
push
cmp
imul
imul
xchg
cmp
andl
outsb
inc
into
div
cmpb
mov
mov
sbb
shlb
and
jno
bound
das
cmpl
push
popf
sarb
adc
cld
inc
and
js
inc
std
or
inc
bound
lods
insb
aad
sub
je
inc
shl
mov
mov
push
pop
dec
mov
fwait
adc
push
sahf
push
pushf
scas
imul
ficoms
clc
aaa
jae
add
das
idivb
stos
push
push
rcrl
fsubrs
out
mov
or
cmp
sub
pop
repnz
shll
mov
dec
mov
bound
cmc
jb
pusha
iret
mov
fisubrs
inc
pop
and
int
sbb
and
mov
shlb
leave
fninit
mov
cmp
in
stc
andl
and
out
lods
std
aad
pop
aas
testl
ret
hlt
mov
outsl
sub
or
nop
jmp
push
in
fwait
in
xor
mov
jnp
lahf
js
jecxz
inc
mov
ljmp
inc
pop
xchg
pusha
xchg
in
cmpsb
lea
push
dec
mov
and
aas
push
push
lods
add
mov
fdivp
clc
mov
inc
adc
push
fistps
icebp
sti
cmp
shlb
xchg
sub
pop
dec
mov
jg
fidivl
push
dec
lds
stc
nop
pop
fmulp
jecxz
sub
scas
pop
decl
mov
xor
add
jecxz
movsl
lahf
in
or
xchg
xchg
sub
xchg
cs
out
out
jns
cmp
mov
xor
cmp
shlb
in
adc
xlat
mov
inc
stc
push
fmull
jb
adc
cltd
xor
cs
xchg
and
push
inc
fs
out
test
push
outsb
loope
mov
sbb
dec
pop
adc
mov
cmpsl
fmuls
sahf
push
inc
in
fsubrp
cmp
lock
icebp
dec
fsubrs
xchg
clc
aas
jmp
sbb
test
movsb
fsubl
popf
int3
ja
pushl
in
subl
jne
shrb
icebp
stos
aas
push
push
xchg
sub
rcrl
fistl
add
outsb
pop
jbe
aaa
xchg
jmp
aam
jo
or
fwait
bnd
addr16
and
in
sbbl
or
lret
outsb
cmp
filds
mov
push
movsl
cld
mov
testb
pusha
pop
iret
cmp
cmp
sbb
adc
aaa
jo
jl
add
sbb
cmp
adc
adc
xor
sahf
pop
inc
and
mov
sbb
loope
jbe
dec
add
roll
mov
and
push
sub
loop
std
outsl
cmp
mov
sub
push
aaa
pop
mov
jmp
pop
jmp
xor
inc
loop
mov
vpcmpuw
mov
rcll
test
or
xor
fldcw
loope
cmp
add
mov
mov
cmp
into
movsl
or
test
ja
xor
ret
sbb
dec
dec
repnz
push
pushf
jg
rol
sub
shl
sbb
xor
jp
push
call
pop
sub
jb
and
scas
sbb
loop
push
adc
sub
push
mov
sbb
flds
mov
add
inc
fcomps
mov
mov
femms
jge
nop
adc
push
dec
dec
loope
xor
lds
hlt
mov
bound
mov
lds
dec
movsl
add
mov
js
push
addl
les
nop
dec
fildll
lahf
xchg
add
rcr
and
jns
ror
mov
dec
jno
pusha
ss
sub
sbb
dec
adc
mov
and
mov
int3
imul
push
mov
jge
xor
adc
jb
mov
pusha
jae
in
test
mov
xlat
xlat
cwtl
mov
push
clc
adc
fstpt
jp
jns
scas
and
cmp
push
popa
lods
fisubrs
mov
fisttpl
push
xor
mov
or
dec
das
mov
mov
adc
filds
arpl
jmp
sti
mov
mov
sub
aas
ror
icebp
pusha
fidivs
imul
xorl
mov
dec
adc
mov
or
pop
out
aam
repnz
dec
cmc
jbe
stos
in
xchg
pop
int
sub
mov
pop
out
mov
insl
enter
int3
les
sbb
jmp
aaa
cmp
loopne
fisttpl
lods
xor
pushf
cli
fcmovbe
xor
shlb
mov
out
or
lock
shlb
or
push
mov
insl
jp
mov
stc
xor
push
jg
jb
loope
rcr
ret
mov
test
popa
stos
repz
or
sub
pop
fwait
test
and
lods
xor
xchg
add
movsb
cmp
and
fsubs
fidivrl
pop
pusha
mov
cmc
push
js
stos
addr16
sub
in
imul
fldcw
inc
test
test
jge
mov
hlt
mov
andl
cwtl
xlat
adc
push
es
repz
sub
cmp
and
xor
dec
lcall
push
mov
cmp
icebp
test
dec
add
mov
pop
xchg
fcompl
lret
sub
cltd
push
xor
mov
push
jb
mov
adc
and
or
stos
add
xchg
mov
push
push
mov
mov
lock
out
xchg
iret
daa
adc
mov
repnz
pop
in
add
add
push
xor
adc
rcr
mov
lcall
test
lds
xchg
pop
adc
push
lods
add
add
xor
ret
in
jae
dec
aam
test
in
rolb
andb
lock
cmp
and
dec
cwtl
mov
jno
shlb
mov
cmp
cs
iret
pop
sub
ja
mov
push
inc
clc
push
es
stos
xchg
inc
popf
hlt
cmpsb
mov
xor
cmpsb
sti
cmp
pop
xchg
sbb
inc
fstps
mov
popf
das
jmp
pop
scas
inc
jmp
add
popl
xchg
inc
sti
ret
jle
in
adc
icebp
sar
adc
push
sub
fcomps
test
shl
mov
jp
clc
int
push
add
aas
call
ret
and
notl
cmp
clc
in
inc
movsl
xor
sbbb
push
loope
pop
jnp
jg
cs
push
or
dec
mov
out
imul
in
pop
cmp
bound
mov
lods
mov
inc
sub
pop
stos
pop
popf
push
dec
les
cs
arpl
dec
je
push
stos
pusha
rorb
movsb
xchg
jecxz
int
dec
mov
mov
inc
lods
pop
arpl
sub
es
cmpsl
es
pop
enter
hlt
mov
push
cmpsl
jecxz
add
sarb
xchg
add
ds
xchg
or
sbb
pop
outsl
cmpsb
lods
pop
cmpsb
pop
jp
arpl
jbe
lea
test
mov
jne
push
aaa
outsl
push
dec
aam
pushf
cld
or
jge
and
fidivs
push
mov
lods
push
daa
or
imul
int3
and
fldenv
pop
jge
pop
ficoms
mov
data16
jnp
jp
push
pop
sti
into
xor
cwtl
add
and
enter
adc
inc
push
test
jae
cltd
sbb
insl
mov
inc
stos
in
jae
xor
mov
push
xor
test
dec
push
mov
shll
push
aad
je
aam
push
xchg
jns
rclb
xchg
mov
jbe
loop
daa
sbb
mov
mov
sub
les
nop
cmp
pop
xor
adc
mov
lock
or
lahf
jl
arpl
addr16
push
mov
fimuls
insb
pop
and
stos
pop
mov
rorl
sbb
scas
jnp
mov
jb
test
jl
pop
imul
in
push
out
bound
cli
incb
dec
and
lahf
jne
orl
jne
insb
pusha
ds
fdiv
into
daa
rcl
in
mov
xlat
jp
mov
cld
push
in
jge
std
insl
negb
sahf
and
cmp
xor
push
in
fdivrp
outsb
add
mov
mov
jl
push
scas
les
sti
xchg
push
push
cltd
shrb
cltd
cmp
pop
and
mov
js
lods
pop
cmp
pop
fwait
mov
leave
inc
push
lret
cmp
xor
fdivr
mov
nop
jnp
clc
push
push
sbb
jecxz
es
mov
fistpll
add
iret
pushf
movsb
jmp
sahf
outsl
and
cltd
cmp
sahf
jmp
test
movsl
test
lcall
jnp
sub
addr16
cwtl
xor
popa
lret
rcll
repz
popf
cmc
add
cmp
lea
call
jno
add
mov
popf
imul
lahf
xor
inc
loop
mov
movsl
fwait
loop
cmp
nop
imul
add
sub
xorl
dec
jmp
cmpsl
pslld
jmp
clc
icebp
or
dec
test
lock
icebp
and
jns
ja
fwait
ret
popa
add
sbb
test
stos
std
jo
das
or
daa
add
and
cmp
jns
xchg
cwtl
cmp
xchg
and
sbb
mov
imulb
mov
cmp
or
add
sub
ret
lods
dec
mov
jge
rol
mov
fidivs
fs
and
mov
ss
push
cmp
aas
jg
push
fnsave
jl
mov
nop
fistpl
mov
cmpsb
jns
xorl
xor
cs
mov
mov
fcomp
xchg
stc
adc
pop
and
xchg
pop
iret
push
or
std
cltd
add
inc
push
xchg
mov
sub
mov
nop
iret
mov
dec
lahf
mov
pop
adc
aam
nop
daa
out
call
aad
jle
test
cmc
pop
dec
lock
add
jno
mov
mov
or
jns
xor
dec
aad
test
jmp
insl
daa
dec
not
imul
stc
imul
jl
inc
shll
inc
jle
into
out
pop
jmp
in
mov
or
sbb
add
ds
push
lcall
movsl
cmp
lret
adc
das
lret
add
test
or
jmp
out
icebp
fidivs
mov
cmp
jmp
mov
mov
jl
enter
out
test
fisttpll
push
and
outsl
sbb
popl
mov
imul
in
int
subps
popf
sub
ror
adc
jmp
jno
pop
lahf
jno
sti
fwait
pop
or
jmp
jbe
andb
dec
jne
sahf
cmp
cltd
mov
mov
mov
and
sub
stc
dec
in
arpl
lret
push
in
adc
xchg
adc
push
je
jne
xchg
clc
push
int
aad
scas
out
pop
sub
out
jns
int
sbb
cwtl
and
mov
fisubs
jecxz
js
push
mov
inc
jbe
aas
das
mov
mov
nop
fdivs
cmp
ret
dec
sahf
sub
in
loopne
aaa
add
sub
xchg
loop
mov
inc
push
mov
cmp
stos
jmp
mov
pop
repnz
sub
add
loop
pop
xor
insl
jnp
pop
mov
jo
lods
inc
cld
jae
jg
pop
aaa
add
je,pt
loope
insb
and
and
push
add
push
ss
sub
pushf
sbb
cmp
xor
push
push
push
aad
push
stc
fdiv
es
shlb
lds
inc
mov
inc
aad
mov
insl
call
mov
sub
fadds
in
mov
dec
mov
sti
in
jmp
sbb
inc
popa
cwtl
mov
pushf
bound
jle
std
xor
mov
xchg
iret
fld
sbb
cmp
cltd
pop
inc
int3
aam
fmul
mov
dec
inc
repnz
pop
es
data16
add
add
mov
in
mov
int3
out
pusha
mov
gs
xor
mov
mov
mov
lret
cmp
fisttpl
iret
subl
jo
daa
rcr
jbe
push
flds
mov
fidivrs
insl
rcll
mov
movsl
scas
or
popa
and
mov
cmpsl
shl
mov
or
xor
xorl
pop
push
test
mov
pop
cmp
das
rcrl
inc
inc
fbld
adc
testb
sahf
xchg
imul
hlt
cmp
das
movsl
inc
cmp
pop
mov
into
and
loopne
out
cmc
sbb
test
xlat
mov
fisttps
add
push
xchg
sahf
int3
mov
mov
or
popa
xor
mov
lcall
jbe
sti
stos
push
push
lahf
notl
adc
mov
imul
adc
push
rol
xor
shlb
xchg
xor
in
and
mov
sahf
js
subl
push
pop
js
shrl
movsb
adc
or
jle
push
in
mov
inc
fcoml
sbb
adc
jne
pop
cmp
cmp
push
mov
mov
fstpt
xor
add
daa
mov
cwtl
out
jbe
flds
mov
out
aaa
in
jbe
adc
jne
sti
xchg
mov
and
in
gs
out
cmp
pop
outsb
pop
movsb
fbstp
add
sbb
mov
testb
push
stc
nop
xchg
sti
xchg
ret
addr16
pop
mov
push
xchg
sub
mov
sub
sub
xchg
sub
movsb
jecxz
jb
int3
mov
dec
and
cmp
add
rclb
call
dec
clc
andb
mov
xor
cmpsl
pop
sub
nop
daa
fnstenv
dec
mov
jnp
mov
pop
mov
lret
cltd
xor
loopne
add
stos
mov
adc
mov
cmp
xchg
sub
test
cmp
sub
into
fmull
and
popa
sahf
push
into
aaa
out
mov
adc
aaa
jnp
cli
adc
clc
sub
repz
ss
nop
daa
push
test
jmp
add
mov
ds
or
or
push
mov
into
inc
dec
ja
test
or
adc
jle
insb
cli
aam
xchg
sub
add
out
lea
ret
pop
dec
mov
push
das
call
push
popa
fs
cmp
repz
pop
jb
push
addb
dec
loopne
mov
test
mov
test
iret
fldl
inc
enter
mov
sub
popf
mov
xchg
enter
shlb
vpaddsb
outsl
sbb
push
mov
push
add
fsubrs
jmp
push
add
xchg
sub
jmp
jbe
mov
inc
ret
jbe
movsb
cmpsl
in
in
sahf
fsubrs
or
pop
popa
add
lods
jb
mov
hlt
mov
fldt
mov
mov
add
fists
mov
jl
out
int
jl
add
shrl
jns
jge
xor
orb
mov
loopne
mov
scas
out
aad
call
pop
cmpsb
push
sub
cmpsl
out
lahf
enter
push
mov
jne
cwtl
ret
mov
xchg
push
cmp
hlt
sbb
mov
adc
shlb
push
negb
dec
ret
std
jo
fbld
dec
bound
decb
mov
push
aaa
jl
pop
mov
sbb
sub
imul
xchg
jle
jne
jno
add
push
stc
lods
fistpl
jp
push
mov
int
hlt
xchg
xchg
arpl
aad
mov
mov
or
test
clc
clc
stc
xchg
mov
scas
mov
push
loop
and
adc
popl
jb
inc
hlt
or
cmpsb
fsubl
out
cltd
push
add
add
scas
add
pop
cmp
dec
in
xchg
lret
jecxz
rcrl
xchg
push
loope
inc
sarb
rolb
outsl
mov
xlat
xor
xor
push
mov
pop
out
movsl
and
and
jns
pop
mov
push
fidivrs
fldcw
ret
jle
rolb
sub
push
movsl
repnz
test
sbb
inc
dec
daa
dec
add
cmp
scas
push
sbb
lret
mov
lods
push
xor
xor
fcoml
jns
xchg
pop
out
push
cmp
lcall
std
out
lahf
imul
enter
insl
movsl
imul
lret
test
dec
mov
rolb
xchg
and
sti
lock
cmp
out
xchg
mov
das
pop
ret
insb
add
dec
int3
push
jmp
aaa
cld
push
imul
jecxz
xorps
or
pop
add
stc
in
jl
jle
xchg
out
xchg
lods
orb
fdivrs
aas
fcomi
sbb
push
mov
push
aaa
outsb
adc
hlt
test
and
cmc
pop
sbb
inc
lcall
and
xor
sar
sub
adc
fdivs
enter
dec
inc
cmp
push
push
in
fwait
mov
pop
insl
sarb
adc
xchg
test
mov
mov
add
leave
bnd
xor
in
cld
test
xchg
mov
out
dec
or
ds
jp
decl
cmp
in
pop
xsha1
cmpsb
dec
sbb
adc
mov
movsb
dec
cmp
cwtl
negb
xor
sub
inc
sbb
ja
leave
pusha
lods
sub
add
shr
pop
xlat
mov
or
sub
push
iret
into
cwtl
in
mov
push
pusha
push
jo
mov
or
rcl
imul
xor
in
jmp
loope
mov
imul
mov
pusha
popa
mov
cmp
xor
fdivrs
fdivs
shrl
scas
in
sub
je
shrb
fisttpll
xor
mov
mov
xchg
cmp
subb
push
addr16
adc
orb
dec
ror
xchg
jle
jbe
adc
pop
jns
dec
and
mov
fwait
jmp
adc
inc
and
cmp
arpl
into
inc
cmp
add
xor
add
xchg
dec
xsha256
cmpsb
push
mov
and
or
jle
jae
jne
fistpll
sub
mov
loope
sti
pop
test
dec
movsl
popa
ds
xor
inc
mov
sbb
mov
cmp
cmp
cmp
out
jnp
daa
add
cli
iret
inc
pavgb
lock
int3
popa
fwait
dec
jb
or
cmp
hlt
rcr
mov
mov
sbb
xchg
mov
mov
and
mov
push
and
xchg
mov
pop
idivb
test
in
and
dec
in
inc
sbb
adc
movsb
iret
cmpb
fcoms
push
sahf
clc
jns
testb
je
ljmp
push
push
cmp
clc
inc
scas
dec
loope
icebp
sbb
and
test
addb
inc
adc
inc
movsl
setnp
cmp
dec
clc
aad
add
inc
or
lahf
testl
mov
out
std
push
jne
pop
lahf
add
and
inc
push
loopne
xor
adc
in
test
aaa
ret
adc
popa
inc
iret
push
jb
push
rcrl
add
fdivr
lahf
test
jp
xor
popa
fwait
mov
pop
lret
int
lret
mov
pop
xor
add
mov
mov
xchg
je
stc
nop
or
mov
movsl
dec
das
mov
lods
mov
imul
dec
ss
xchg
in
jge
pop
mov
pop
fcomps
jg
fisubs
sub
adc
sub
nop
push
dec
daa
adc
arpl
mov
inc
pop
out
xchg
jge
mov
push
lret
sub
outsl
pusha
lret
movb
or
dec
rclb
xchg
mov
arpl
aad
subl
mov
sbb
dec
popa
push
adc
js
mov
xchg
sub
repz
insl
pop
lret
push
dec
cmp
je
pop
add
testl
lea
xor
xlat
mov
mov
mov
movsb
jnp
sbb
jns
add
cli
sub
xchg
sub
push
mov
inc
daa
xor
sub
xor
jo
mov
clc
mov
push
in
in
jb
pop
testl
mov
cmp
mov
pop
xchg
pop
mov
sub
push
mov
outsl
push
hlt
xlat
cmc
xor
cmp
xchg
jo
call
shlb
out
add
pop
push
jne
js
mov
lret
jg
add
test
in
addr16
fists
xchg
xchg
xchg
cmp
mov
adc
rolb
and
jo
add
mov
pop
adc
pop
lods
ljmp
popa
es
jno
movsb
popf
outsl
or
incl
cmp
lea
cmp
popf
xor
sti
test
mov
cmp
pop
in
sbb
mov
movsb
insl
les
xchg
and
lahf
jo
dec
mov
testb
rclb
jg
aam
adc
inc
cld
dec
fs
and
jecxz
push
js
insb
stos
xor
test
xor
fimull
in
or
inc
pusha
cmp
push
test
inc
mov
inc
push
mov
popf
cli
ljmp
mov
jl
test
add
fs
test
movsl
inc
decb
xor
daa
pop
loop
sbb
imul
out
scas
outsb
mov
and
mov
cmp
rcl
das
les
adc
aam
cli
cmp
dec
sti
xchg
repnz
mov
out
push
dec
add
add
mov
movsl
js
and
out
into
aam
sbb
mov
ret
mov
pop
jle
pop
scas
sub
xorb
fwait
pop
and
sbbl
and
aad
mov
loopne
inc
cs
clc
sub
or
sbb
push
mov
loopne
test
addr16
addr16
ljmp
aas
inc
std
int
ds
ficoml
scas
xchg
sti
add
mov
dec
test
fnstenv
or
mov
lret
and
ret
pop
testb
jo
gs
xchg
lods
lds
mov
dec
in
mov
out
ds
shll
push
sbb
mov
xor
jnp
imul
arpl
fldenv
mov
xchg
or
inc
push
pop
jns
or
xor
scas
and
add
iret
sbb
adc
dec
lds
xchg
push
or
xlat
outsb
dec
in
adc
or
cmp
in
add
das
fwait
cmpsb
mov
std
pusha
sbbb
popa
xor
aad
cmpsl
rorl
andb
adc
inc
jl
mov
lcall
mov
mov
xlat
negl
sub
in
repz
imul
xchg
jle
fstpt
pop
stos
sahf
push
add
ljmp
clc
xchg
adc
and
std
xchg
icebp
jle
ss
fwait
hlt
adc
mov
jle
lahf
out
sub
nop
fs
cwtl
das
into
push
pop
test
sub
and
ljmp
inc
pusha
jo
inc
cmpsl
push
xchg
fistl
pop
or
adc
outsb
int3
push
les
adc
jo
mulb
orb
xor
mov
addr16
mov
fistpll
cmpsb
push
pop
cmpsb
loopne
mov
sbb
test
or
fucomip
xor
insb
shll
shll
andb
mov
xor
pop
mov
ret
fistpll
scas
cmpsl
jno
in
sub
jg
xchg
nop
les
insb
imul
lea
fistl
or
fcoms
push
xchg
push
pop
xchg
mov
lods
push
mov
int3
stc
ss
pop
int
lods
ficoml
adc
mov
je
into
fcmovnb
push
lock
ja
fnstsw
jecxz
xchg
inc
pushf
es
inc
enter
sbb
stc
push
call
mov
out
dec
sbb
aas
sub
sub
into
cmp
sub
insl
imul
sub
sub
and
lret
mov
mov
and
cmp
mov
shl
mov
adc
jo
aam
and
outsl
push
and
cmp
and
repz
jae
pop
call
aad
cmpsl
mov
add
jne
jns
xchg
clc
jle
mov
gs
xor
loopne
mov
cmp
popa
jbe
setg
pushf
in
mov
cmp
out
sbb
jmp
in
and
aas
lret
je
xor
push
in
aam
ljmp
cmp
sbb
fadds
stos
fs
pop
push
mov
add
cli
xchg
movsl
sbb
mov
int3
add
popf
repz
mov
xchg
push
clc
insl
es
rcll
stos
aaa
popa
ja
push
orb
push
fwait
sub
les
mov
or
out
subl
mov
test
bound
sbb
loope
jno
inc
mov
jle
push
pop
inc
xchg
movsb
pop
iret
ret
fs
push
sub
loopne
inc
adc
mov
add
popa
lahf
repnz
dec
xchg
mov
sbbb
cwtl
pop
inc
xchg
sub
pop
mov
pop
movsb
cmpsb
aaa
dec
add
cld
cltd
stos
cmp
ds
inc
lret
or
add
lcall
push
push
and
and
xchg
push
cmp
stos
call
mov
jmp
test
hlt
xor
pop
fbstp
sbb
jae
pop
arpl
inc
sar
push
xchg
arpl
or
rcl
aaa
dec
pusha
loopne
push
mov
icebp
inc
out
lret
ljmp
xor
incb
ds
data16
push
fbstp
cld
lcall
lcall
dec
mov
mov
out
imul
es
fwait
aaa
sub
and
cs
bound
repnz
lahf
cmp
in
jg
sub
jl
dec
pusha
add
aam
cmp
outsl
aaa
iret
xchg
inc
sub
sbb
and
fdivrl
jl
imul
icebp
adc
xchg
adc
in
iret
adcb
adc
sub
cltd
xor
sbb
xlat
shr
inc
bound
sahf
lods
or
mov
mov
imull
pop
push
ja
add
rcl
iret
sub
sub
loope
push
push
inc
pop
cwtl
dec
xor
fwait
cmp
in
lods
adc
and
clc
inc
sbb
popf
mov
addl
push
lock
xlat
roll
pop
repz
mov
jnp
pushf
popf
pop
out
adc
pop
mov
testb
mov
and
test
inc
adc
dec
add
jp
sbb
popa
sti
xchg
sbb
pop
das
ret
insb
cmc
push
addb
sti
xchg
aaa
mov
inc
xchg
fnstsw
mov
scas
mov
jbe
lock
cs
xchg
dec
jnp
es
in
ret
dec
dec
fwait
out
mov
adc
xor
data16
mov
sub
sub
mov
leave
pop
test
dec
and
fidivrl
inc
clc
lods
jne
pop
xlat
dec
outsl
jnp
adc
xor
cmpsb
mov
popa
lods
and
cmpps
adc
rcrl
xor
call
jecxz
iret
sub
sahf
sub
in
repz
xlat
fnstenv
aas
outsb
lock
add
fucomi
cmpsl
xchg
jnp
jmp
out
test
sub
lods
add
dec
cmpsl
out
xchg
int3
fcompl
jbe
jmp
pop
mov
mov
jge
jmp
leave
test
mov
pop
fprem1
adc
jle
adc
or
sbb
test
lret
int3
dec
fucomp
or
in
fs
imul
mov
bnd
sbb
lret
cmp
adc
xchg
and
scas
aad
cmc
mov
shlb
clc
jg
or
ja
mov
rcl
jl
sbb
sti
jns
test
sub
mov
or
pop
mov
mov
out
sub
lcall
sahf
sbb
xchg
add
div
leave
jge
and
notb
stos
arpl
or
dec
add
in
stc
cmp
daa
pop
dec
sbb
mov
inc
inc
mov
and
adc
sub
aad
mov
pop
in
cmp
mov
push
sub
or
fldcw
dec
push
in
jle
or
sub
jne
dec
call
icebp
shlb
subb
lret
cmp
sbb
mov
mov
push
or
and
ret
daa
fistpl
mov
mov
mov
xchg
mov
pop
mov
in
sti
adc
daa
call
and
push
lods
inc
push
xor
stc
sbb
fwait
jl
push
outsl
leave
arpl
adc
pusha
in
cmp
pop
test
push
jne
xchg
lea
cld
stos
jmp
sbbl
xor
notl
test
rcll
add
mov
pop
repz
mov
xor
pop
insl
xchg
dec
sub
nop
jno
push
cmp
idivb
inc
ret
add
mov
ljmp
cmp
iret
xchg
frstor
nop
push
mov
add
frstor
je
add
cli
rorl
and
jg
jno
addr16
arpl
jnp
inc
scas
and
sbb
mov
cmpsl
xor
out
imul
out
adc
inc
cmp
xchg
mov
jae
jmp
fstl
shlb
orb
pop
xchg
push
jg
adc
les
jnp
sub
add
sbb
jp
iret
in
jbe
add
pop
fwait
repnz
rcrl
mov
push
lods
push
or
push
jge
cmc
cltd
fdivp
cli
addr16
jl
and
sti
cmp
push
push
push
pop
movsl
inc
pop
push
sbb
clc
es
and
mov
dec
in
inc
mov
jne
xchg
mov
aad
cmpsl
or
pop
xor
xchg
fisubrs
sub
std
inc
xor
inc
inc
pop
hlt
pushf
jl
or
jp
mov
add
shrl
mov
or
and
leave
mov
fldl
ja
or
repnz
int3
adc
jecxz
daa
push
stos
xchg
add
cwtl
adc
inc
lcall
pop
aad
pop
getsec
inc
fucomi
adc
push
jl
xlat
sbb
dec
rep
inc
sbb
imul
xchg
add
push
fadds
mov
dec
ljmp
xor
lock
xchg
xor
mov
mov
mov
mov
int3
adc
mov
dec
pop
jae
leave
xor
ror
push
mov
cwtl
jae
test
fidivs
dec
dec
mov
outsb
cmp
rolb
jp
int
insl
loop
jnp
int3
jne
nop
stc
mov
push
mov
shlb
fdivl
test
cmp
inc
inc
fsubs
pop
mov
fldl
xchg
outsl
inc
inc
mov
cmpsl
xchg
cmp
pop
imul
stc
push
jmp
mov
movsb
rcrl
or
add
pop
dec
sbb
add
loope
ret
fwait
dec
jbe
divb
fstpl
cmp
and
into
pop
pusha
add
clc
test
cld
cmpb
rcll
lea
or
push
push
xor
adc
and
mov
fsubp
clc
sbb
mov
js
shll
mov
lret
adcl
repz
popf
jne
lfs
pop
out
imul
cltd
lret
shr
mov
in
inc
insb
scas
adcb
aas
or
inc
popa
add
or
xor
dec
mov
sti
cmpsl
int3
mov
fdivrl
add
pop
loopne
lahf
int3
pop
inc
stc
push
lods
mov
stos
adc
xchg
cmp
jae
xor
mov
clc
xor
sub
outsb
pusha
cmp
jecxz
rolb
ret
xchg
mov
in
sbb
adc
ss
xor
lds
adcl
mov
inc
dec
xchg
sub
cwtl
push
sahf
xor
adc
mov
out
jp
stos
lahf
es
xor
test
movsb
mov
idivl
mov
dec
test
mov
jmp
sbb
dec
imul
into
insb
adc
clc
scas
in
stos
stos
adc
aas
add
cmpsl
rcll
outsb
shll
mov
jl
lcall
xchg
xor
enter
and
pop
mov
mov
sarl
arpl
std
mov
jnp
nop
sbb
movsl
jle
mov
pop
gs
sbb
pop
mov
repnz
ljmp
and
rorb
jl
int3
imul
sbb
mov
and
push
push
mov
add
gs
or
fwait
xor
in
push
dec
movsl
jnp
push
aad
jl
adc
jmp
jo
push
fcomps
sbb
push
jns
or
jmp
cli
fistps
repz
mov
xchg
stc
push
shrb
or
lock
mov
mov
stc
dec
dec
pop
mov
add
inc
sbb
pushf
adc
andl
fwait
push
cli
push
in
aaa
stos
mov
pushf
mov
fdivl
ljmp
out
xchg
sbb
add
out
xchg
add
inc
push
popf
inc
xor
or
fsubrl
cmpxchg
test
mov
pop
jne
lds
lahf
jne
cmove
push
pushf
xchg
fisubrs
aaa
mov
xchg
test
call
in
sarl
pop
out
mov
adc
movsb
fbstp
les
cs
imul
mov
pop
cli
mov
roll
mov
pusha
mov
fcmovu
inc
push
rol
lret
pop
negl
jecxz
and
out
clc
subb
xor
pop
cmc
push
out
and
push
adcl
push
lret
les
mov
or
stos
mov
ret
mov
or
xchg
jg
dec
ds
pop
cmpsl
jge
sbbb
aad
testb
rcrb
sub
sub
inc
cmpsl
cmp
cmp
fbld
pop
inc
insb
mov
mov
pop
jne
push
es
and
and
pusha
adc
mov
pop
out
sub
out
mov
add
sbb
adc
je
scas
add
ds
sti
push
sub
pusha
mov
rcrl
mov
or
mov
or
out
ret
test
inc
mov
in
pop
aaa
mov
out
cltd
es
sub
inc
pop
sub
dec
sbb
mov
fstp
jl
fs
mov
loope
imul
rorl
div
mov
xchg
cmp
sub
push
sbb
and
pop
std
nop
xchg
lahf
sbbb
in
jae
loopne
jmp
or
xor
mov
jp
divb
cltd
rcr
movsl
sbb
fsubrs
add
notb
xchg
xor
xorl
jmp
sub
inc
jp
mov
sbb
hlt
and
xchg
icebp
scas
adc
sti
add
pop
dec
pop
out
cli
pop
dec
clc
jecxz
add
rcll
pop
mov
xchg
jnp
inc
jmp
or
int
lret
sarl
jp,pn
push
out
je
jne
pop
sub
sub
xchg
xchg
mov
push
mov
hlt
adc
rol
loopne
push
xlat
icebp
cmpsl
inc
sub
xchg
movsb
cmp
mov
es
imul
dec
jmp
mov
inc
dec
out
sbb
xchg
push
inc
sti
mov
dec
iret
das
xor
gs
push
or
repnz
pop
mov
dec
shl
mov
das
mov
test
sub
sti
mov
out
inc
mov
fcompl
cmp
xor
lods
mov
add
mov
inc
xor
sub
inc
shlb
fisubs
in
sbbl
or
ljmp
add
push
cld
pushf
pop
mov
sahf
mov
dec
pop
jl
add
stos
cltd
xor
fs
add
repz
sarb
inc
xlat
jmp
or
xor
lahf
xor
adc
xchg
mov
test
and
jno
testb
nop
pop
imul
ss
push
xchg
ljmp
fisubl
ja
xchg
mov
scas
pop
mov
adcb
mov
jbe
jno
and
into
test
or
pushl
jmp
adc
bound
mov
ficoms
xlat
ljmp
jmp
es
xor
enter
cs
adc
imul
pop
cmp
mov
dec
mov
jno
ret
ljmp
fs
fs
xlat
out
push
mov
clc
in
rorb
fdivs
addr16
dec
mov
mov
adc
mov
and
lret
xchg
mov
out
push
loop
or
mov
and
xorl
in
fdivl
fnstenv
or
add
inc
scas
popf
xor
addr16
xchg
dec
cli
add
aaa
pop
mov
mov
mov
decb
iret
cmpsl
xchg
dec
andl
cmp
add
mov
jb
out
std
sbb
fwait
lret
mull
ds
inc
mov
sti
aad
and
sub
jge
sub
push
into
ja
add
jne
decb
gs
dec
stos
repnz
rclb
jmp
and
jnp
mov
inc
pusha
ja
cld
push
lcall
push
and
mov
loopne
sub
pop
push
icebp
pop
sub
in
cmpsb
and
pop
jno
insl
pusha
shlb
jb
aad
stos
mov
mov
dec
mov
orps
add
xchg
sbb
es
add
imul
lock
xor
lret
xchg
arpl
fdivl
cmpsb
cmp
nop
and
arpl
sbb
push
jp
lods
ret
jmp
or
in
push
sbb
push
or
sbb
xor
adc
xlat
pop
sbb
push
or
pop
mov
into
jno
mov
cmc
in
leave
pop
mov
xchg
jmp
lods
cmp
xor
and
sub
pop
jne
ret
data16
icebp
stc
adc
and
out
adc
mov
stos
pop
popa
cmp
out
xor
je
imul
repz
inc
std
cltd
jmp
dec
movsb
jb
or
xchg
jl
xchg
movsb
repnz
outsl
sti
and
adc
mov
cmpsl
jns
imul
rcrb
dec
aaa
xchg
cmc
sahf
pop
addr16
mov
popf
cmp
jl
mov
inc
or
pop
and
test
mov
pop
icebp
aas
jge
xchg
jnp
pop
jb
adc
aas
rorl
movsb
inc
pop
push
jmp
sub
gs
ja
adc
iret
andl
in
arpl
bound
mov
hlt
xchg
mov
js
cmp
push
xchg
mov
xor
jo
cmp
mov
pop
test
xlat
jb
int3
mov
pop
iret
cmp
xchg
fildl
fisubl
das
inc
cmova
xlat
jge
or
insb
cmp
jecxz
xor
pop
arpl
aam
pop
mov
sbb
pop
lods
cltd
and
hlt
mov
sub
lea
daa
bswap
incl
in
jno
push
out
xchg
mov
sub
mov
js
push
dec
ret
adc
fiadds
lahf
sub
enter
dec
fucomip
aad
cmc
sbb
mov
inc
leave
adc
sbb
into
stos
cmpb
scas
jl
mov
popf
in
daa
out
leave
jle
xchg
pop
cmp
jmp
stc
cmc
fldenv
or
jne
inc
pop
xor
xchg
sub
dec
push
call
sarb
scas
mov
mov
lods
daa
pop
or
cmp
dec
dec
aad
and
or
jle
sbb
sub
inc
dec
sub
jno
outsb
gs
in
icebp
mov
hlt
lea
xor
xor
mov
jae
rorl
mov
sbbb
fstl
mov
scas
inc
xor
shll
jg
call
fnstenv
cld
and
ja
cmpsb
sbb
cli
mov
cmpsb
mov
inc
cs
push
dec
and
dec
pop
clc
inc
lahf
fidivs
add
hlt
jle
pop
inc
jae
daa
jb
mov
mov
push
es
pop
mov
adc
mov
jb
push
cmpsl
scas
pop
imul
int3
cmp
lods
scas
test
lahf
dec
sbb
lahf
divl
shl
addr16
fsubrs
xor
jno
scas
push
cmp
dec
pop
out
mov
iret
aad
jae
ss
push
jle
bound
lods
out
mov
ljmp
call
in
test
cmc
int
xchg
nop
xchg
leave
cmc
aad
fbstp
test
mov
imul
push
int3
fadd
mov
clc
gs
rclb
or
pop
sbb
sbb
mov
xchg
cmp
sbb
pop
dec
test
fdivrl
out
lock
inc
ss
jnp
aaa
jge
cld
or
mov
mov
rcr
clc
pop
jmp
out
scas
xchg
aaa
cmpsl
std
sbb
jge
jle
imull
add
and
std
inc
mov
je
outsb
loop
sbb
insb
addr16
daa
in
pop
add
push
cwtl
and
xor
das
dec
pop
scas
or
dec
dec
lods
lahf
push
repnz
sub
das
aad
pusha
mov
scas
ljmp
imul
ss
push
sub
imull
nop
loop
push
stc
pusha
or
mov
fdiv
es
pushf
insl
xchg
xorl
aas
nop
jmp
xchg
jns
push
cs
xor
test
push
push
popf
in
stos
std
jge
xor
insb
mov
stos
jae
add
adc
stc
or
in
iret
inc
cltd
loop
insl
mov
fwait
in
inc
test
cmp
xchg
dec
gs
pushf
push
sbb
sbb
cmp
fisubs
shll
nop
sub
movsb
add
test
mov
xor
jo
pop
pusha
insl
not
sbb
sub
or
jp
push
or
xchg
insb
inc
sbb
mov
gs
insb
mov
mov
jo
mov
mov
dec
pusha
test
test
add
xor
insb
das
push
xor
les
mov
outsl
pop
xchg
lods
out
dec
das
cmp
nop
xchg
sbb
sbb
or
pushl
jmp
dec
test
inc
outsl
mov
movb
pop
pushf
adc
lret
lret
jb
push
cmpsl
movsl
ja
add
inc
cs
inc
mov
xor
das
dec
inc
gs
fwait
mov
inc
adc
fisubl
jecxz
in
mov
jle
mov
ja
decl
mov
inc
dec
push
sub
insl
mov
push
inc
jns
sbb
in
in
cmp
pop
call
jbe,pt
and
repz
les
sbb
dec
ljmp
xchg
mov
add
ret
xorl
outsb
push
loope
ret
push
xor
cmp
clc
xchg
sub
enter
movsb
inc
jnp
cld
jl
mov
filds
dec
jne
pop
mov
xchg
ret
rorb
mov
fistl
push
jae
fbstp
loope
test
mov
addl
scas
lret
insb
fucomi
inc
test
shll
sub
sbb
ret
in
jge
imul
mov
xchg
mov
lret
das
adc
out
jmp
sbb
inc
arpl
xor
and
add
in
inc
jg
mov
or
fbstp
iret
jb
mov
loopne
sbb
fadd
xor
jp
call
dec
leave
movsb
les
bound
je
aad
lods
xchg
mov
lods
andb
ret
loope
insb
xorb
adc
cmp
mov
xchg
cmp
das
mov
sbb
mov
xlat
xchg
out
inc
dec
inc
fistl
xchg
scas
xor
int3
add
hlt
sub
push
hlt
out
or
sub
jb
xor
notl
adc
sbb
aas
aas
xor
push
mov
sub
lcall
clc
or
idivb
fcompl
pop
xchg
xchg
fldcw
mov
inc
jnp
stc
lods
arpl
pop
iret
je
and
cli
pop
in
ss
cmp
pop
jecxz
test
aad
pusha
mov
xor
mov
mov
mov
loop
out
sub
xchg
aad
xor
lds
xchg
sub
mov
movsl
rolb
out
mov
sub
mov
jle
insb
adc
cmpsl
movsl
inc
mov
popa
dec
fmul
cwtl
xchg
and
movsb
out
dec
mov
or
jmp
jl
push
push
jmp
loope
mov
jb
ret
ficoms
add
testl
mov
jnp
and
inc
loopne
add
jmp
lods
test
lods
dec
leave
xor
aam
sub
pop
pop
and
push
jle
shlb
sbb
lret
hlt
mov
in
push
roll
adc
shlb
popa
jmp
pop
push
cmp
and
pmuludq
loopne
inc
inc
fidivs
inc
sbb
test
lret
testb
jge
nop
jno
inc
push
shl
imul
sbb
jle
sbb
push
or
add
addr16
add
in
push
add
cmpsb
mov
sbb
cli
loop
loop
push
mov
xlat
mov
mov
and
fdivl
subb
cmp
out
les
and
push
lahf
and
in
dec
test
dec
popf
test
hlt
xorb
xchg
leave
pop
pop
ds
cld
aad
and
sub
add
xor
je
jp
dec
mov
scas
and
popa
cmc
dec
mov
iret
push
jno
addb
pop
sbb
rclb
push
add
add
xchg
add
or
lea
sbb
lcall
in
movsb
bound
sub
xor
in
movsbl
and
mov
dec
stos
int3
pop
jns
xchg
bnd
jae
inc
clc
rclb
iret
in
jae
pop
gs
aam
test
jle
dec
mov
lcall
sub
jle
insl
and
movsb
push
inc
lds
mov
add
jl
add
pop
call
adc
adc
in
and
test
cmpl
jp
xchg
shrb
insb
or
xlat
aad
mov
adc
jmp
pop
push
jo
sub
push
test
jns
xor
jmp
mov
je
stos
mov
in
pop
adc
cld
in
out
std
jmp
out
cmp
cmp
fnstenv
aaa
push
movsb
int
hlt
jp
mov
push
ret
sub
out
mov
xchg
xor
jne
pop
xchg
adc
mov
sub
leave
iret
pop
test
pop
call
inc
and
sbb
mov
and
mov
inc
mov
shll
test
mov
xchg
into
mov
shll
pop
imul
les
jg
sbb
cmp
xlat
inc
adc
mov
xchg
in
mov
sub
mov
icebp
xchg
nop
movsb
push
dec
or
xchg
jne
cltd
test
rolb
inc
pop
cmp
xor
imul
adc
mov
in
xor
adc
xor
daa
sbb
into
mov
repnz
mov
cli
xorb
xchg
mov
cs
xor
add
popa
mov
popf
int
loopne
xchg
xchg
mov
jmp
xchg
mov
and
sbb
stos
cmp
fucomp
les
std
pop
in
popf
dec
adc
inc
out
xchg
jo
stc
mov
add
mov
js
neg
jmp
pop
pop
ss
add
mov
mov
movsl
pop
call
jbe
hlt
loopw
mov
popa
popf
int
mov
loop
loope
xor
pop
cli
sbbl
push
loop
fcmovne
dec
add
into
sub
jno
psubw
insb
sbb
repz
dec
cli
or
stc
pop
inc
daa
into
sbb
fnsave
adc
dec
lret
jnp
out
xor
call
xchg
icebp
sbb
lods
fistpl
xchg
je
push
bound
xchg
mov
nop
dec
sbb
stos
push
jnp
out
std
mov
rol
xor
std
shlb
inc
mov
xor
xchg
int3
cmpsb
xor
or
push
stos
adc
cmp
pop
adcl
mov
sbb
mov
mov
stc
dec
mov
movsb
mov
lods
or
jmp
fwait
cmpsb
sbb
add
idivb
mov
inc
mov
jbe
lods
enter
stos
inc
cli
pop
dec
arpl
xchg
outsb
jno
xchg
pop
inc
push
push
mov
loop
outsl
repnz
mov
mov
divb
int3
je
into
andl
push
orb
or
vshufps
mov
jne
sbb
pop
or
shr
and
loop
mov
dec
in
divl
add
imulb
pusha
inc
mov
push
enter
std
cvtdq2ps
push
sub
push
dec
sub
dec
inc
loopne
ljmp
pop
add
cs
and
inc
lea
xor
jge
mov
sbb
mov
add
lcall
pop
push
and
mov
jns
jg
jnp
cmp
cmp
cmc
pop
subl
xchg
hlt
popf
lods
adc
xor
sub
jp
jge
push
int
add
rcr
mov
inc
jns
sub
flds
call
repz
jo
sbbl
les
add
sbb
leave
inc
jmp
mov
xchg
sub
sub
and
dec
xor
jge
xchg
popa
push
jp
mov
sub
sbb
sbb
hlt
jecxz
mov
inc
cmp
cld
or
lcall
jo
out
dec
icebp
shrb
add
cmc
dec
imul
nop
and
adc
push
fucomp
inc
mov
mov
mov
mov
mov
es
hlt
into
inc
jg,pn
push
xchg
jne
popf
inc
or
xchg
shrl
mov
mov
ror
pop
add
mov
cli
mov
pop
cmp
sub
cmp
fisubrl
sbb
scas
jns
mov
or
cmp
bound
xchg
mov
test
ret
jg
insl
mov
mov
or
jg
xor
push
add
or
xor
xchg
nop
ljmp
pop
loop
icebp
adc
pop
push
out
inc
test
sti
stos
or
push
xor
add
cli
gs
mov
adc
inc
mov
jge
test
aas
mov
sbb
mov
in
das
mov
push
mov
shl
jo
xor
push
rol
or
dec
jae
pushf
jl
push
jg
sbb
out
sarb
xor
cmp
jecxz
js
aad
mov
into
sub
lods
lds
push
fiadds
pushf
ficomps
shrl
pop
pop
jmp
ds
pop
push
int3
int3
cmp
pop
jl
jmp
xor
and
lea
lret
cs
dec
lock
dec
in
cld
test
xor
lods
std
jae
xchg
pop
dec
xchg
lret
outsb
jae
dec
in
dec
mov
orb
adc
xor
or
add
mov
mov
adc
vcomiss
insb
out
std
inc
arpl
sub
mov
insb
jnp
xchg
outsb
orb
sti
movsb
rcrl
pop
daa
gs
mov
jbe
inc
out
inc
je
je
test
mov
add
js
mov
sub
sbbb
xor
sub
pushf
int3
cmpsl
mov
mov
popa
call
mov
negl
dec
aas
sub
into
fisttpll
jb
fistpl
arpl
cmpsl
jo,pt
or
fnsave
sbb
jecxz
add
sbb
fisttpll
pop
jne
arpl
xor
push
ret
in
inc
dec
xchg
or
push
mov
cmp
jp
pop
call
cmpsb
and
adc
repnz
add
add
jecxz
aas
jl
push
mov
pop
mov
notb
jmp
add
xor
cmp
dec
pop
dec
pop
jecxz,pt
sub
dec
sbb
scas
cld
jns
xor
imul
and
scas
pusha
push
ss
sub
sbb
mov
mov
dec
in
xor
cmp
pop
cmp
and
add
pop
ss
push
mov
push
mov
sbb
pop
outsb
pop
sub
ror
fsub
and
jg
sbb
cmovp
add
push
movsb
mov
and
aaa
jb
push
pop
jns
push
outsb
popa
xchg
mov
ret
mov
js
in
mov
call
dec
shrl
ja
jl
shll
push
mov
fbstp
cs
pop
dec
jecxz
or
adcl
xchg
or
cld
cmpsb
scas
and
fldcw
insl
lret
dec
push
ffreep
mov
jo
popf
xchg
pop
sub
inc
sbb
addr16
push
and
out
xchg
mov
mov
mov
xor
mov
push
xor
jmp
sbb
out
inc
gs
iret
mov
fistl
jno
cmp
dec
mov
sub
jnp
or
hlt
hlt
out
movsb
repnz
pop
xchg
lods
outsb
movsl
data16
test
inc
xlat
sbb
nop
xor
push
fwait
sub
or
xor
push
lea
fsubl
adc
testl
jmp
lods
pop
imul
bound
jb
loopne
xor
dec
js
xchg
jmp
jmp
aaa
and
out
pop
cmp
jecxz
dec
into
mov
push
mov
inc
mov
sti
movmskps
xchg
mov
jge
mov
mov
gs
std
and
dec
sbb
pop
fdivr
cmp
mov
sbb
scas
xchg
jae
sahf
enter
ds
fisubl
inc
inc
fistpll
ret
std
loopne
mov
pop
lret
push
or
or
pop
jp
aaa
dec
arpl
adc
pop
xchg
int3
xchg
push
test
dec
and
mov
in
rcl
sub
popf
mov
inc
lret
sbbl
stos
sbb
adc
stos
test
rcrl
mov
xor
rclb
ja
cmpsl
loop
inc
fisubrs
cmp
inc
dec
lahf
and
and
decl
adc
stc
stos
xchg
aam
std
adcb
adc
pop
mov
cmp
imul
lret
popa
cmp
adc
mov
pop
in
cld
std
test
stc
pop
loop
adc
jecxz
dec
xor
into
jne
mov
test
pop
lock
insl
test
stos
add
in
sahf
xor
jle
mov
pop
push
adc
andb
jge
mov
sti
xchg
mov
stos
out
xchg
stos
sbb
mov
sbb
cmp
push
pop
adc
cmp
or
mov
imul
enter
jb
test
mov
ret
les
mov
xlat
jecxz
mov
ret
push
addr16
push
xor
rol
fmull
and
outsl
jo
jae
call
mov
bound
xchg
ret
into
lcall
faddl
ret
ds
sbb
mov
mov
pusha
adc
lods
les
add
jne
nop
cmp
mov
nop
pop
lods
dec
lock
fnsave
roll
xchg
pop
pop
xor
mov
fisubrl
shlb
inc
jo
ss
std
adc
ja
xor
sbb
stc
in
lret
out
sti
push
inc
ss
push
test
mov
imulb
lahf
rcrb
out
bound
jecxz
push
cmp
xor
out
rcrb
lret
bound
fsubl
or
fs
push
icebp
pop
adc
scas
ret
sbb
data16
data16
xor
push
int
gs
push
mov
test
arpl
ficompl
cwtl
repnz
add
test
sub
fdivs
push
cmp
adc
rolb
mov
adc
push
in
or
rorb
mov
cmp
mov
sbb
xor
push
mov
mov
pushf
xor
cmpsb
dec
rcll
cmp
loop
dec
lret
pop
push
add
and
ret
mov
mov
sbb
and
fucomi
sarl
xchg
mov
xorb
push
outsl
xchg
fpatan
int3
pop
das
jmp
mov
dec
jge
pop
mov
pop
xchg
push
cmp
icebp
or
in
aas
sbb
jp
pop
cmp
xchg
insb
cmp
jo
pusha
gs
dec
pusha
int
jecxz
shr
ljmp
pop
and
sub
jmp
xor
aad
add
std
rdtsc
push
sahf
clc
loopne
xchg
dec
sbb
vmovdqa
xchg
mov
mov
cmp
pop
test
adc
xor
dec
push
aaa
dec
movsl
and
repnz
sub
outsl
mov
dec
daa
inc
call
data16
or
inc
mov
push
xchg
lods
jmp
sub
and
outsb
push
imul
fidivrs
lds
daa
pop
movsb
cmp
je
mov
or
mov
bound
stc
jno
jne
sbb
sub
mov
fidivl
idivl
sbb
mov
lds
dec
pusha
mov
shlb
xchg
jns
jne
jnp
fidivs
sbb
enter
add
faddl
add
mov
lods
lods
push
dec
jl
fcmovb
out
fstpl
jecxz
jne
add
mov
lods
jb
or
repz
mov
cmc
fildl
sbb
jbe
popa
mov
pop
cmc
fiaddl
fstpl
jg
sub
inc
rcll
push
pause
mov
xor
inc
rcl
jo
call
push
inc
and
inc
or
jno
sbb
cmpsb
sbb
push
xchg
sbb
inc
pushf
add
inc
lcall
popf
push
jae
rcll
gs
int3
add
mov
cmp
pop
mov
adc
push
stos
sbb
lea
clc
push
inc
cmp
jmp
xchg
cld
adc
adc
xor
inc
fcmovnbe
orl
nop
xchg
dec
fmull
sbb
aad
add
xchg
xlat
sbb
sbbl
aad
jecxz
sbb
dec
stos
mov
inc
orb
and
fdivl
ss
cli
cmpsl
or
add
mov
es
xor
mov
xchg
mov
sub
andb
arpl
dec
loop
in
mov
lds
sub
shl
test
stos
xor
xor
add
mov
seta
addr16
pop
rorb
ljmp
int3
jecxz
in
adc
add
sub
xor
fisubrs
mov
jno
mov
notb
push
jl
adc
fdivrs
dec
mov
fmull
and
aas
lcall
push
xor
xchg
cwtl
cmc
mov
fdivrl
push
push
inc
jmp
xchg
sarb
sbb
imul
test
mov
in
jg
mov
lcall
loope
or
pop
inc
shlb
xor
inc
mov
mov
in
movsb
mov
aad
test
or
test
push
stc
and
scas
inc
jmp
lods
cmp
repz
adc
mov
bound
and
dec
and
shr
aaa
mov
pushf
cmp
cmc
arpl
cmpsl
cwtl
into
movsl
ds
fldcw
sbb
push
inc
pop
add
dec
mov
stos
in
and
imul
jb
or
cmp
sbb
rol
lds
rcrb
std
cmpsb
mov
mov
lret
xchg
outsl
lock
adc
sub
cltd
adc
std
loop
xor
std
and
andl
shlb
popf
stc
stos
test
lea
icebp
rcrb
xchg
pusha
dec
fistps
leave
mov
imulb
add
inc
mov
jge
xlat
ror
jecxz
jns
jecxz
xor
mov
or
push
jmp
pop
and
add
lret
sbb
sub
xor
scas
push
push
sbb
loop
insb
and
movsl
stos
and
enter
inc
fs
push
daa
scas
add
stc
xor
aaa
add
iret
rcrb
lock
out
sarl
js
xchg
loope
push
inc
popf
lret
mov
sub
repz
iret
aaa
xor
mov
dec
inc
cld
pop
test
mov
mov
add
xor
sub
insb
xadd
out
mov
lret
ds
inc
add
movsb
and
and
stos
adc
rol
sub
in
xor
mov
or
lds
das
dec
cmp
hlt
mov
std
imul
popf
cmpsb
not
pop
jno
and
leave
imul
mov
dec
test
push
call
idiv
outsl
daa
xor
scas
js
add
jnp
sub
lahf
or
lods
jne
sub
lods
fldcw
sbb
jo
out
add
je
dec
lods
fnstenv
pusha
frstor
mov
xor
fdivr
in
pop
or
push
or
push
and
xor
shlb
popa
cmp
xchg
loop
stos
icebp
jb
or
inc
shl
repnz
mov
mull
lds
dec
push
imul
jg
or
movsl
jmp
mov
fwait
jmp
or
inc
stos
lea
and
push
and
movsb
addr16
aad
enter
out
sbb
stos
jecxz
sbb
jno
mov
or
aas
inc
push
cmpsb
jg
ja
push
enter
lods
movsl
and
push
repz
push
or
mov
pop
jmp
jmp
sub
push
cmp
loop
jp
daa
sub
cwtl
sub
push
pop
hlt
in
lds
ret
out
fwait
push
das
das
loope
stc
lods
out
nop
lahf
int
and
mov
mov
cmp
mov
cld
cmp
inc
je
inc
mov
int3
mov
jae
mov
mov
sbb
pop
mov
fidivs
shll
jbe
jb
or
cwtl
adc
pop
mov
cmc
inc
mov
into
mov
push
sti
nop
mov
into
and
add
jl
aaa
mov
pop
jecxz
scas
aaa
mov
cmp
cmp
addr16
shrl
cmp
filds
call
leave
push
call
mov
jle
int3
mov
das
out
inc
arpl
push
lods
mov
mov
or
jg
pop
inc
fs
pop
mov
int
inc
lods
fbstp
or
ds
sbb
adcb
divl
inc
sti
int
push
cmpsl
test
and
popfw
cmpsl
jl
jne
mov
push
add
and
adc
jnp
pop
mov
ret
outsl
les
xchg
dec
mov
jbe
daa
cld
fwait
mov
sbbl
iret
and
rcr
xor
mov
cmpb
nop
pusha
jg
fdiv
ds
in
mov
arpl
rolb
cltd
lock
movsb
lret
cmp
stc
mov
sub
and
sbbb
xchg
loopne
aaa
adc
cmp
add
les
nop
sbb
jle
ljmp
test
pusha
mov
pop
std
inc
cltd
outsb
push
inc
fwait
std
insl
and
loopne
and
fwait
push
sbbb
jle
stos
jp
cmp
cmp
mov
rcrb
push
or
mulb
addr16
add
ds
out
inc
xor
lret
enter
mov
stc
data16
ret
or
dec
lcall
or
cs
imul
or
lahf
mov
jmp
jge
cmpsb
outsb
lods
cltd
outsb
pop
lahf
shlb
pushf
in
das
xchg
sbb
or
mov
sub
cwtl
fnsave
shll
pushf
stos
jae
push
jle
adc
pop
push
pop
xchg
xor
xchg
lret
rcrl
cmpsl
xchg
test
jl
jo
aas
lock
ljmp
jno
inc
cli
xchg
repz
pop
imul
xor
dec
shlb
pushf
xlat
inc
xlat
cmp
mov
dec
mov
mov
ffreep
out
cli
dec
push
adc
subb
xchg
out
sbb
or
mov
cmp
ret
aam
add
pop
dec
dec
cwtl
andl
adc
les
xor
sub
aaa
daa
xchg
inc
cmp
mov
test
mov
jae
mov
movb
xchg
and
scas
mov
or
mov
push
lret
cmp
pop
icebp
xor
sti
xchg
inc
dec
inc
cmp
addr16
inc
ljmp
xlat
mov
lret
enter
mov
mov
mov
xchg
inc
pop
lret
mov
or
insl
das
adc
pop
sub
repz
cmpsl
addr16
jo
inc
loop
sbbb
or
xchg
xor
imul
sub
dec
mov
xor
add
lea
fnstcw
jae
dec
pusha
xor
add
mov
inc
mov
jp
jge
jno
sub
sbb
push
test
cld
cmp
jno
aaa
or
int
test
aam
sub
out
testl
adc
mov
cmc
push
repz
jns
inc
xchg
pop
or
push
sub
mov
fcomi
pop
inc
sbb
inc
push
add
adc
sbb
xchg
mov
add
add
xchg
push
jns
xchg
icebp
into
mov
push
das
mov
cmp
mov
dec
adc
pop
add
js
std
push
lahf
or
mov
dec
add
sbb
pusha
mov
jns
add
mov
aas
fdiv
pop
or
gs
mov
into
stc
inc
lods
fstps
add
lods
xchg
aas
std
test
outsl
cmp
jb
idiv
popa
pop
test
sub
pop
mov
and
lcall
cs
jle
sbb
inc
call
test
sub
inc
sub
cmc
stos
testb
jg
xor
les
add
inc
hlt
pop
adc
pop
daa
pop
and
mov
clc
bound
mov
adc
in
xor
push
cwtl
sbb
lds
add
sbb
push
testb
mov
lcall
insl
stos
xlat
pushf
inc
imul
cmp
repnz
lock
pop
mov
sbb
outsb
in
sub
push
pop
xchg
or
outsb
mov
xor
aas
push
xchg
mov
cmpb
add
int
inc
sbb
mov
push
xchg
fmuls
repz
shll
jbe
push
dec
filds
rcll
insb
repz
xchg
jmp
pop
ficomps
xor
lret
int3
addr16
enter
loope
loope
lock
movsb
mov
push
pop
js
mov
sub
sub
xchg
shlb
js
mov
mov
jg
shlb
sbb
imul
out
fistpl
or
xchg
push
mov
push
popa
loopne
dec
dec
dec
stos
sub
in
stos
adc
lea
in
pop
ret
test
pop
shl
arpl
loop
or
lods
and
xchg
push
loopne
jnp
idivl
fndisi(8087
sub
push
int3
adc
push
jne
aaa
into
loopne
mov
popf
xchg
dec
mov
mov
push
inc
div
push
mov
dec
loopne
adc
xor
repnz
jo
aaa
cmpsb
inc
push
cmp
xchg
lret
in
cltd
push
cwtl
push
or
lcall
xor
and
push
adc
adc
jnp
pop
add
adc
les
mov
push
and
inc
je
mov
loop
sbb
rcl
rorb
and
inc
jp
repz
outsb
je
ljmp
sbb
sahf
dec
daa
inc
cmp
push
inc
jmp
mov
movsl
jmp
pop
sbb
or
add
mov
ds
loope
popa
icebp
mov
sub
sub
shld
sub
xor
mov
mov
enter
fs
aam
dec
fisttpll
insb
imul
mov
fs
leave
push
and
int3
ljmp
adc
xchg
jge
mov
sub
sub
push
jnp
sbb
xchg
adc
lods
loop
pop
movsl
sbb
clc
ret
loope
imul
bound
cmp
test
gs
pop
xchg
leave
cltd
mov
addb
inc
or
outsb
mov
pop
adc
push
aad
inc
fcomps
add
inc
cmp
pusha
test
adc
jg
loope
lds
jnp
xchg
int3
cmp
adc
xor
mov
sub
cmpsb
clc
adc
ret
pop
shrb
lods
mov
xor
sub
push
sahf
pop
lock
sbb
and
xchg
add
mov
ret
and
outsb
sub
inc
jge
cmp
lods
hlt
cltd
mov
fstp
pop
fisubrl
xor
cld
bts
fiadds
rcr
lret
jb
cmp
cmp
mov
xchg
jg
shrb
add
cmpsb
pop
inc
test
inc
movsb
sub
xchg
cltd
ss
push
arpl
stos
daa
inc
sub
out
push
mov
cmpsb
inc
mov
jo
dec
rorl
int
xchg
jmp
mov
imul
testl
hlt
stos
xchg
jge
lock
test
ds
push
daa
arpl
push
std
pop
repz
lcall
lcall
daa
pusha
ss
or
push
mov
neg
jmp
cwtl
xor
sub
bound
push
sbb
lock
cmp
sbb
sbb
jge
push
insl
or
scas
or
notl
fbstp
mov
dec
in
test
jb
mov
cmp
sub
xchg
ss
cmp
jl
adc
fisubrl
cmp
jle
xor
sbb
jbe
or
jae
xchg
xor
or
cld
mov
hlt
push
out
dec
add
xchg
dec
or
in
dec
shrb
jg
jo
leave
loope
dec
jo
mov
imul
sub
cmp
xchg
test
adc
mov
inc
les
jns
ss
adc
or
jle
push
iret
ja
add
notb
les
jg
repnz
dec
lahf
lods
aad
mov
sti
jb
fsubrl
pop
jb
gs
sub
fisubrs
int3
fstl
popa
ret
fdivs
test
ret
and
es
add
cltd
sub
inc
jbe
in
jl
xchg
fidivl
jo
mov
mov
imul
test
adc
dec
std
inc
int
shl
mov
clc
dec
repz
sbb
pop
out
shlb
add
xlat
mov
push
test
mov
out
sbb
das
insb
test
jne
out
lea
sbb
stos
mov
inc
or
jge
subb
pusha
inc
add
pushf
sub
xchg
mov
mov
or
aam
or
shlb
fisubrl
scas
fdivr
rcr
add
sti
pop
mov
lahf
mov
out
cwtl
sbb
in
aaa
sub
mov
xchg
xchg
jns
push
aas
mov
mulb
call
loope
and
sbb
and
ss
jnp
xchg
jns
leave
shll
mov
aam
pop
mov
mov
in
incl
mov
ret
sub
inc
pop
add
ret
add
jbe
pop
movsl
mov
mov
and
popa
cmp
jbe
xor
push
ds
and
xor
mov
lret
bound
mov
jl
add
sti
mov
icebp
add
pushf
xor
xchg
or
scas
inc
push
scas
je
std
sbb
outsb
pop
mov
das
mov
out
sbb
stc
dec
int3
mov
icebp
pop
mov
jb
mov
dec
sarl
sbbl
pusha
pop
jns
cmp
hlt
add
popf
scas
je
jmp
fs
outsb
xor
jbe
cmp
dec
mov
andb
jnp
mov
dec
in
out
in
mov
call
or
mov
or
decb
lahf
std
sar
mov
mov
cmpsb
adc
mov
adc
adc
mov
in
ss
ret
loop,pt
push
stc
je
sub
insb
push
shr
xchg
imul
lahf
gs
xchg
sbb
jns
imul
aaa
fcmovu
pop
js
in
negl
dec
pop
rorb
mov
js
les
jle
dec
test
pushf
and
add
dec
shr
jle
mov
mov
je
jno
xor
xor
in
push
xor
mov
fs
push
push
popa
iret
sbbb
sbb
mov
sbb
jle
push
test
cwtl
sbb
jb
mov
sahf
idivl
shrb
stos
push
notb
or
sub
gs
xor
ds
adcb
arpl
hlt
mov
jb
aam
andb
cmp
or
pop
inc
fiadds
mov
repz
in
sub
mov
xchg
lods
fadd
cmp
xchg
push
sbb
nop
setae
call
push
mov
jmp
mov
dec
mov
add
jg
sub
push
movsb
cmp
bound
subl
sbb
and
stc
idivb
mov
in
cmc
push
arpl
add
stos
add
lret
xchg
push
imul
dec
push
mov
outsb
ret
outsb
dec
cmp
push
imul
sub
or
mov
xchg
and
out
mov
mov
jne
add
xor
adc
or
jmp
test
inc
push
inc
or
jb
int3
arpl
sbb
imul
push
arpl
aam
sub
xor
sbb
scas
mov
mov
scas
rcr
out
ret
and
inc
test
and
or
cmpsl
lds
pop
ja
fwait
sub
ja
add
jo
bnd
xchg
jns
scas
push
inc
push
sbb
and
cmpsl
lea
jecxz
mov
xchg
mov
ret
cmp
fisubrl
sub
push
sub
and
push
fwait
sub
mov
or
mov
clc
xchg
pop
pop
mov
daa
je
stos
sub
pmullw
stc
and
jno
out
in
mov
jne
xchg
mov
pop
sbb
scas
ljmp
or
fcoml
sub
xor
sub
xchg
sub
pop
sbb
ret
fcomi
cs
xor
xor
cmpsl
push
outsl
sub
mov
call
loopne
jle
mov
jbe
loopne
pop
and
xchg
imul
push
mov
jns
scas
mov
aam
mov
push
and
jb
mov
jmp
fsubr
stos
filds
icebp
sub
and
and
das
xor
pop
jl
jno
outsl
ret
in
mov
fists
cmp
stos
int3
js
repnz
aam
pop
and
in
popa
jb
leave
sub
jl
inc
push
ja
dec
ljmp
rorl
inc
rorl
fs
cli
sbb
jbe
push
sub
lock
std
adc
lret
out
arpl
add
loopne
sub
fistl
addr16
mov
test
or
inc
jo
pop
xor
dec
call
jmp
cmp
jno
lret
aam
std
add
lea
or
std
inc
repnz
add
xchg
cmp
pop
inc
inc
test
andb
fidivs
daa
leave
mov
adc
out
dec
ret
hlt
mov
jmp
int
push
mov
fisubrl
pusha
fcmovnbe
je
jnp
notb
mov
out
sub
mov
fnstcw
lea
xchg
xor
cli
pop
mov
mov
ds
dec
sbb
push
jo
lea
fldt
stos
push
aaa
xlat
pop
xor
add
subl
pop
cwtl
andb
cmpsl
dec
loope
jecxz
popa
fbld
mov
mov
push
out
mov
mov
orl
or
and
adc
inc
jl
mov
ljmp
fildll
fisttpl
les
outsl
xor
pusha
jg
out
and
inc
mov
imul
mov
out
mov
es
sub
jbe
testl
sub
out
cmpsl
push
xchg
add
mov
test
add
int
add
xchg
pop
loopne
lods
pop
mov
pushf
addr16
into
xchg
cmp
add
js
cs
jb
dec
sub
out
mov
or
notl
insl
cli
sbbl
in
lds
mov
aam
jge
iret
jle
add
jae
repnz
test
iret
jmp
add
sub
jne
cmp
adc
sub
pop
lret
sti
adc
popa
pop
imul
jp
in
out
fcomps
sbb
jae
or
cmpsl
xchg
add
in
out
adc
inc
in
notb
out
mov
mov
and
cs
test
nop
dec
lret
xor
xchg
cmpsb
loopw
push
ret
dec
negl
aam
and
insl
cmpsb
mov
fistl
or
sbb
xlat
sahf
pusha
cmpb
imull
push
xchg
call
pushf
int
jp
rclb
sbb
jl
inc
mov
mov
test
out
out
adc
cltd
jecxz
lods
loopne
or
mov
or
shl
push
test
push
mov
push
sbb
mov
push
jnp
out
push
inc
fwait
lcall
mov
cmp
add
mov
cmp
or
das
ret
insl
add
mov
enter
cmpsl
push
sbb
loope
push
xor
cmpsl
and
cmp
and
rclb
popf
aad
dec
rolb
mov
jb
aam
xlat
xchg
dec
aad
mov
push
xchg
imul
mov
dec
sbb
dec
sti
sbb
pusha
inc
loope
shll
add
popa
inc
jo
icebp
in
call
in
mov
jns
pop
inc
imul
cmp
sbb
stc
add
pop
cs
inc
arpl
test
mov
xor
push
cmpsl
adc
or
pop
or
dec
dec
out
divl
shl
and
mov
xor
push
or
je
lods
jbe
xchg
or
push
in
nop
push
mov
shl
adc
dec
mov
or
cli
push
xor
adc
xchg
xor
sahf
shlb
push
test
dec
sbb
fsubl
aad
cs
cmp
jecxz
fldenv
jmp
repz
xor
jbe
pop
iret
pop
aaa
stc
nop
cmc
cmpl
jmp
lods
ljmp
es
adc
les
mov
out
and
insb
mov
shr
addb
test
mov
xor
loopne
repz
pop
and
mov
and
repnz
ds
jp
sbb
arpl
dec
add
gs
daa
testb
imul
inc
mov
xor
insb
jmp
fistl
add
cmp
enter
gs
rolb
mov
or
cli
sbb
ja
xor
sbb
and
repz
and
push
push
jp
testl
cmpsb
mov
dec
mov
inc
xor
in
ret
cld
sbb
sbb
mov
lods
cmp
cmp
ss
add
mov
cmpsl
xchg
iret
aaa
in
js
sbb
mov
inc
lods
mov
scas
xchg
test
cmp
lcall
xor
and
mov
mov
sbb
sbb
mov
cmp
inc
out
dec
dec
ret
dec
loop
addr16
pop
cltd
push
in
lock
test
sbb
sbbl
enter
pop
std
adc
push
mov
jbe
insl
lahf
hlt
lahf
add
test
mov
inc
xor
mov
icebp
dec
and
arpl
cltd
outsb
push
cmp
out
rcrb
adc
add
aaa
lret
adcb
xlat
jbe
jmp
push
xor
andb
mov
inc
xchg
mov
sub
xchg
pop
mov
jnp
cmp
jl
loopne
or
add
jbe
test
enter
mov
xor
xchg
dec
adc
inc
jb
xchg
insl
enter
out
lock
mov
test
in
sbb
add
xor
xor
filds
mov
jne
mov
clc
xlat
gs
cmpsl
adc
stos
xor
in
jg
ss
arpl
jmp
mov
lea
adc
jle
fstps
pop
adc
adc
push
shll
mov
xchg
pop
popf
sarl
pop
in
nop
insl
aaa
mov
out
jmp
daa
testl
sbb
pop
push
pushf
jne
mov
inc
cmpsl
cmpsl
test
in
mov
jg
dec
dec
xlat
mov
push
push
mov
mov
insl
sarb
dec
xor
pop
stos
sub
lds
push
loop
in
adc
or
xchg
aam
filds
adc
aaa
ja
lretw
jne
dec
or
movsb
mov
shrb
imul
xlat
stc
mov
xor
dec
mov
sub
lds
inc
xchg
cwtl
addr16
mov
sub
test
mov
fistpll
inc
fdivrl
mov
mov
pop
stc
mov
mov
sbb
imul
shrl
mov
jl
sub
xchg
add
push
mov
clc
jecxz
call
push
mov
mov
mov
ss
cmp
pop
filds
stc
adcb
add
mov
test
dec
sarb
fsubrs
call
dec
mov
sbb
add
xor
mov
jp
insl
cmp
xlat
mov
test
cld
xchg
hlt
xchg
xor
int3
or
or
insl
add
mov
fwait
outsb
adc
push
inc
gs
test
imul
mov
repnz
jae
test
ret
sbb
sbb
or
push
mov
leave
push
mov
sbb
inc
scas
fdivr
out
xchg
ret
scas
test
imul
insl
xchg
dec
in
mov
lret
cmp
adc
mov
mov
mov
cmpb
daa
sub
pop
dec
shll
insb
aad
jp
ja
mov
or
ficompl
add
call
test
mov
xchg
mov
dec
mov
das
push
pop
cmp
jl
scas
inc
sbb
test
dec
or
pop
inc
repnz
out
pop
test
arpl
sub
ljmp
xlat
loope
adc
ret
repz
negl
cltd
lret
ds
inc
or
push
inc
jge
add
mov
rolb
jns
mov
ficompl
sub
push
pop
xchg
dec
test
xchg
cmpsb
jae
fsubrp
inc
mov
or
or
aaa
inc
subb
xchg
loope
int
addl
popf
fwait
loopne
push
inc
xor
or
mov
leave
ret
out
out
aas
insb
push
xlat
push
xchg
js
and
scas
mov
or
daa
push
push
sbb
imul
sub
cmpsb
mov
and
ja
lahf
shlb
mov
xchg
inc
cmp
push
outsb
xorb
push
jae
dec
push
sbb
loope
mov
dec
and
add
insl
or
mov
xchg
ss
push
js
mov
ja
imul
jmp
mov
xchg
mov
mov
mov
pushf
add
loope
cli
lret
mov
xor
xchg
cmpb
jmp
stos
jecxz
sahf
mov
sarl
or
mov
cld
jp
sub
push
add
xor
ret
fistps
in
dec
jae
mov
je
pop
push
xchg
push
into
in
divl
mov
popa
or
mov
push
mov
outsl
lock
aaa
into
cs
popl
repnz
hlt
mov
in
xchg
xchg
jmp
mov
and
test
fwait
popa
mov
cld
imul
push
mov
mov
pop
int3
cli
imul
repz
cmp
adc
pop
xor
inc
push
outsl
stos
es
int
cld
mov
daa
loope
push
and
lock
cs
outsl
fs
test
sti
mov
add
inc
pop
pop
sti
frstor
jl
mov
mov
fndisi(8087
and
inc
push
outsb
push
test
call
test
inc
into
lods
nop
lds
insl
jg
call
mov
sahf
repz
in
mov
loopne
hlt
out
aam
aaa
cs
nop
stos
jmp
or
jmp
pop
sub
test
sti
orl
fidivrl
js
outsl
push
sub
inc
cmp
pop
jbe
sub
scas
xchg
mov
mov
popa
sbbl
xchg
test
push
nop
cmpb
mov
testl
fxch
out
xchg
imul
xchg
mov
pop
cmp
pop
add
mov
xor
call
push
add
cs
mov
add
repnz
in
das
adc
mov
pop
iret
dec
scas
inc
jns
inc
mov
fldl
popa
mov
xor
popf
cwtl
and
in
repnz
test
daa
or
pop
add
ret
and
pusha
cmp
ljmp
gs
lret
adc
dec
stos
push
jno
inc
lret
jecxz
or
ret
mov
iret
push
or
cmp
fnstcw
test
xchg
bound
push
sub
jns
mov
popa
inc
mov
cld
pusha
cmp
and
xchg
ljmp
dec
xchg
scas
jmp
jns,pt
repz
sub
sbb
sarb
mov
daa
insl
pop
sbb
and
push
lea
cmpsl
adc
sub
js
inc
and
outsb
cmp
loope
inc
push
movsb
ljmp
adc
xchg
jnp
loopne
ficompl
or
icebp
lea
dec
xchg
jno
cltd
lods
cmp
sahf
add
push
xor
and
jae
jno
mov
icebp
lea
jb
out
testb
inc
jae
pop
mov
je
out
cmpsb
ljmp
push
insb
mov
dec
pop
imul
fdivs
enter
hlt
add
das
dec
jp
xlat
pop
add
adc
xor
xor
pop
in
xchg
shl
xchg
and
cs
lret
into
or
scas
jne
push
push
jno
loopne
test
add
ret
inc
in
mov
sbb
inc
xchg
ss
mov
mov
popl
jnp
int3
cld
or
mov
and
or
mov
adc
test
and
mov
stos
push
cmp
xor
or
inc
add
xor
div
adc
cmp
jmp
leave
inc
cmp
and
xchg
pop
xor
mov
fsubrl
cli
insl
inc
mov
dec
and
mov
mov
lods
pusha
imul
and
xchg
xor
in
jo
fsubs
imul
push
mov
inc
push
call
xor
xor
fs
clc
and
add
push
jl
mov
das
mov
or
push
add
push
or
adc
or
aas
loop
rorb
xchg
lahf
sbb
repz
cmp
ret
in
push
cmp
incb
sub
mov
rcr
push
sbb
mov
mov
shll
sbb
cmp
addr16
ret
out
je
test
fdivl
cmp
xchg
inc
test
test
int
sbb
in
out
stos
pop
sbb
sbbb
aam
adc
js
pushf
test
cli
push
nop
pop
mov
fsubs
inc
stc
inc
lods
jnp
leave
leave
pop
mov
push
in
ret
mov
negl
add
sbb
sbb
aaa
inc
cld
xchg
mov
insb
out
dec
pusha
stos
fdiv
mov
leave
lret
cli
cmp
add
jmp
jo
mov
testl
out
dec
sbb
xor
test
lret
cld
test
rorb
test
jle
xor
and
ret
subl
xor
inc
xchg
aam
jno
in
ret
cmp
cmp
test
dec
fnsave
and
cld
or
fcmove
bound
jo
push
xor
xor
xchg
das
add
add
sbb
es
mov
xor
addb
and
mov
xor
inc
xchg
or
xchg
out
dec
pop
sbb
iret
stos
ljmp
loope
andl
xchg
inc
xchg
cmc
push
lock
fbstp
mov
dec
hlt
imul
movsl
sbb
pushf
sub
adc
push
pop
push
lods
xchg
mov
pusha
movsb
call
movlps
xchg
outsb
add
mov
xlat
push
aas
pop
icebp
pop
jmp
mov
or
loope
push
das
cli
push
es
pop
dec
add
adc
dec
mov
mov
add
and
cmpsb
jmp
mov
push
mov
loopne
pop
out
insl
sub
cwtl
xor
ret
xor
js
fdivl
inc
jo
push
inc
sbb
jmp
ss
or
and
jbe
cmp
repnz
mov
fstl
jbe
into
enter
test
lcall
mov
clc
mov
fwait
js
hlt
movsb
inc
push
leave
sti
and
imul
lret
add
inc
xchg
test
xlat
outsb
push
repnz
out
je
sbb
hlt
xchg
fs
mov
rcll
sti
mov
mov
ja
clc
and
test
cli
or
jbe
jne
imul
push
ret
sub
sbb
push
ljmp
push
jae
shrl
outsb
arpl
mov
inc
outsw
sub
cs
xor
cmp
jl
cmp
pop
mov
mov
fbstp
add
mov
mov
mov
jbe
push
and
mov
inc
inc
push
lds
mov
add
pop
mov
fwait
out
mov
dec
inc
inc
std
push
cmp
inc
sbb
in
cwtl
mov
into
mov
mov
ret
shlb
or
aam
insb
fcoml
mov
lods
cmp
xor
imul
xchg
movsb
out
adc
not
sub
push
xlat
lcall
int3
pop
in
rcrl
push
cmp
mov
test
inc
shrl
sbb
lahf
push
push
sarl
repz
popf
pop
xchg
add
or
xor
jecxz
in
fildl
cltd
add
imul
xlat
lret
fdivl
pop
inc
jmp
fldlg2
and
cmp
clc
xlat
repz
push
filds
and
xchg
imul
xchg
dec
pop
lahf
inc
fs
iretw
lret
lret
popa
mov
and
adc
xchg
adc
push
test
xchg
mov
out
cli
adc
mov
add
sarb
sbb
and
lock
pusha
lcall
jno
nop
ds
jne
xchg
stos
lea
pop
xor
jge
out
sub
pop
repnz
shlb
xor
sbb
and
push
std
xor
cltd
pop
mov
push
lcall
xor
push
push
push
int3
xor
dec
fldl
call
xor
and
pop
xor
or
push
dec
lock
lea
out
push
push
popa
test
out
xchg
adc
out
xchg
mov
mov
mov
sub
jae
adc
sti
rdpmc
inc
shr
sub
fdivrs
and
aaa
dec
scas
pop
pop
adc
pop
fbstp
in
in
jp
popf
scas
out
add
jo
push
roll
repz
or
ret
xor
jb
roll
cltd
sub
rol
aad
pop
mov
ss
in
andl
mov
setne
add
xchg
push
hlt
mov
and
jb
mov
cmpsl
mov
inc
dec
jns
fwait
pop
rcll
xchg
loopne
movsl
inc
jbe
imul
aad
vpsubw
pop
icebp
jnp
sub
bound
push
arpl
and
cld
mov
in
adc
test
mov
adc
push
dec
dec
sbb
pop
mov
sarb
call
dec
xchg
in
loop
rcrl
jle
mov
lcall
repnz
popl
sbb
sbb
repnz
enter
ljmp
mov
fcoms
inc
fs
fdivs
mov
ret
out
sbb
add
icebp
rclb
inc
repz
mov
sbb
mov
mov
push
push
jnp
gs
inc
cmpsb
push
pop
mov
adc
nop
mov
in
imul
out
shlb
loop
mov
xor
test
mov
lahf
cmp
mov
jo
fadd
fidivrl
idivb
sub
pop
jg
icebp
dec
sarb
lds
inc
adc
les
xor
mov
sti
xchg
inc
dec
dec
into
insl
sub
sub
push
pop
imul
mov
add
loop
inc
in
sub
movsb
or
ja
scas
sub
sbb
push
jmp
mov
push
ja
or
out
push
jmp
push
scas
jo
push
and
adc
lcall
sub
lods
xor
cmp
retw
imul
and
mov
push
mov
add
hlt
cli
mov
sub
inc
ljmp
mov
testb
decl
jp
jb
lods
adcl
mov
jge
mov
pop
mov
rclb
cmp
stos
pop
rcll
xor
mov
pop
pusha
mov
or
arpl
cmpsl
cmc
jmp
imul
adc
xor
fcomp
les
mov
in
mov
enter
repz
int
push
jnp
xchg
scas
mov
jmp
mov
push
xchg
push
jge
jp
and
rcr
test
rcrl
mov
pop
roll
ficompl
test
cmpsb
lock
adc
mov
xchg
aad
loop
cmp
fs
iret
push
adc
loop
test
or
xchg
and
xor
in
lods
std
movb
and
fs
stos
cmp
jbe
addr16
rcrl
aaa
hlt
sub
stc
add
xor
mov
inc
mov
jnp
xor
fcmovbe
outsl
loope
and
decl
jecxz
xchg
jmp
loopne
jmp
push
push
loopne
loope
adc
icebp
enter
adc
test
ja
into
push
xchg
or
stos
test
stos
push
xor
xchg
cmp
bndstx
dec
push
jae
in
adc
xchg
cltd
adc
xor
andl
fisubrl
xor
mov
lret
mov
pop
jbe
push
stos
and
inc
adc
lods
push
mov
loopne
push
cmp
daa
sbbl
sub
xorb
pop
decl
lahf
stos
cmpsb
loope
mov
sbb
leave
jo
arpl
mov
lret
jmp
ss
mov
test
inc
dec
pop
in
iret
cmpsb
pop
in
xor
or
mov
and
add
shrl
pop
out
jns
ret
repz
and
enter
repnz
mov
mov
call
fisubrs
xor
xchg
push
inc
in
es
fisubs
or
cli
add
sbb
movzwl
loopne
fcom
mov
inc
inc
ret
jbe
sti
jbe
stos
dec
add
insb
adc
jns
imul
mov
or
fnsave
and
sti
sarb
inc
fnsave
xlat
pop
incb
scas
add
outsl
xchg
lock
push
mov
cmp
divb
push
sbb
cmpsl
pop
mov
lahf
leave
mov
jge
inc
pop
adc
push
lea
rcrl
xorb
fs
pusha
xchg
lods
into
gs
mov
xor
and
popf
fcomip
lret
and
sbb
mov
bound
loopne
scas
push
int
xchg
sbb
xor
push
sub
xchg
adc
in
clc
lret
mov
xor
cltd
insl
lret
js
arpl
sub
out
xchg
mov
in
lock
pop
stc
dec
jb
cmpsb
scas
mov
pop
adc
add
push
lret
jmp
stos
mov
jmp
jne
inc
rcr
out
in
and
xchg
adc
add
xchg
hlt
dec
lret
aaa
out
xchg
mov
dec
loopne
add
mov
mov
lret
std
shl
daa
add
xor
dec
cmp
cmpsb
mov
lds
sub
sub
es
cmp
inc
xor
dec
out
insb
xor
dec
mov
sbb
xor
sbb
push
and
push
dec
insb
shl
lret
and
xchg
jl
addl
jnp
jo
push
mov
inc
and
mov
cld
insl
mov
mov
pop
shlb
adc
negl
sbb
sbb
jecxz
push
pushf
movsl
iret
sbb
enter
dec
sbb
int3
outsb
inc
xor
les
test
in
fstpt
xor
jge
in
test
jno
push
ss
ret
inc
xor
stos
push
rorl
mov
lret
xor
scas
sub
and
mov
dec
mov
push
pop
shl
xlat
jmp
lea
loop
inc
in
push
inc
pop
and
subl
fisttpl
fists
out
test
dec
test
inc
push
inc
into
pop
lcall
cmpsl
loope
subl
add
jg
clc
xlat
movzbl
mov
jl
mov
call
jecxz
sahf
and
adcl
test
ja
xor
nop
inc
fdivs
pop
adc
mov
adc
in
es
mov
mov
push
xlat
insl
aam
stc
aad
cmc
hlt
push
push
pop
jmp
pop
insl
cwtl
repz
or
sti
pandn
pop
xchg
pop
call
push
mov
cmpsb
inc
xchg
dec
dec
hlt
out
jle
inc
add
daa
enter
call
cs
mov
or
out
ss
int3
les
ljmp
imul
call
push
inc
sbb
aaa
pop
insb
xchg
iret
lret
cmp
fidivrl
rcrl
lea
cmpsb
mov
add
scas
adc
in
es
pop
adc
adc
outsl
sbb
inc
andl
sub
inc
jnp
cmp
mov
mov
scas
fiadds
fnstenv
dec
rcr
push
call
les
test
notb
xchg
rcl
cmp
pop
jne
push
cs
mov
xchg
inc
hlt
jecxz
rclb
xlat
sub
or
aaa
push
inc
add
mov
cmp
cmpsl
in
test
shrl
test
push
sahf
int3
adc
into
lock
push
push
std
xor
or
xor
frstor
adc
mov
xor
inc
dec
add
fsubr
sub
ficompl
mov
sbbl
mov
mov
and
mov
fiadds
mov
arpl
lret
jbe
pop
int
or
stc
inc
push
bswap
mov
jnp
or
repnz
les
sub
mov
rorl
sbb
cmpsb
ret
lock
mov
ljmp
lret
mov
out
test
test
xor
mov
mov
and
jnp
xchg
lods
xor
cmpsl
data16
cmp
cmc
xor
mov
pushf
xor
gs
and
mov
call
aam
stc
pop
jae
or
fmull
xchg
ficoms
jnp
inc
mov
sub
mov
mov
jb
xchg
sbb
insl
inc
mov
decl
ja
lods
dec
jecxz
popf
hlt
pop
or
push
mov
aad
sbb
or
xchg
sti
pop
or
pop
sbb
cmp
cmpxchg
rclb
icebp
fstpl
xor
lret
lahf
pusha
shlb
jb
je
mov
adcl
pop
cld
xchg
cs
and
jl
cmp
dec
data16
push
iret
xchg
in
mov
fnstenv
stos
clc
inc
aam
addb
push
iret
ljmp
pop
repnz
jno
mov
xchg
xor
cmp
push
or
jns
sub
mov
lods
mov
stos
inc
cltd
in
sarl
cmp
daa
fnsave
in
push
mov
xchg
sub
std
adc
cmp
lahf
pop
mov
and
mov
sub
mov
xchg
rolb
lret
xchg
je
jbe
in
fcoml
imul
jle
arpl
out
mov
fldcw
loope
inc
jp
imul
pop
leave
xor
and
xchg
and
int
xlat
leave
hlt
cld
inc
cmp
fcmovne
gs
push
in
flds
fsubr
loop
pusha
jl
out
jne
xor
sub
clc
jae
cmc
push
push
cmpsb
lea
mov
jnp
lret
and
jg
mov
sbb
jg
xor
add
imul
stos
mov
xor
mov
push
add
lret
outsl
xchg
andnps
lods
cmp
sti
call
or
xchg
xchg
fildll
pusha
and
aam
inc
pushf
jg
or
repz
inc
and
cmpsb
lock
xchg
dec
insb
add
adc
addr16
mov
je
insb
in
cmp
rclb
fldenv
sbb
jnp
and
pop
insl
or
cmpsl
aad
sbbb
lret
xchg
mov
jbe
loope
repz
mov
stos
jae
xor
mov
or
int
mov
pop
imul
mov
and
or
xchg
jecxz
sbb
mov
insl
ja
dec
shl
adc
xchg
dec
sbb
jl
rolb
je
out
bound
and
pop
iret
jb
int
jle
push
mov
push
andb
out
pop
sub
insl
outsb
dec
in
mov
ret
movsl
jl
adcb
or
mov
nop
sbb
out
add
mov
fmulp
inc
fstpl
jns
push
lahf
lahf
adc
inc
jle
jbe
iret
outsb
repz
std
gs
push
sbb
movsb
or
xchg
push
and
js
sub
xchg
mov
sub
aad
mov
xchg
popa
iret
test
pop
out
push
and
cmp
fdivl
fmul
xchg
mov
rorb
adc
xor
in
clc
fcompl
or
lods
or
shr
lea
ja
and
sarb
mov
mov
int
jae
cmp
shrl
int
loop
aam
test
vprotw
out
mov
jge
pop
repz
nop
cld
andb
jnp
or
testl
mov
mov
std
jg
mov
xchg
std
mov
sub
sbb
cmc
popf
lret
test
sub
ror
push
fisubs
aam
jae
jns
rcr
outsl
jnp
push
rorl
jns
adc
arpl
aad
lods
adc
dec
je
outsl
daa
inc
jmp
repnz
adc
lret
push
inc
xlat
sub
movsb
jecxz
aas
pop
call
ss
mov
mov
jb
pop
scas
adc
sahf
xor
adc
mov
xchg
xchg
cmpsl
ja
sub
and
add
adc
ljmp
push
shlb
pop
cmp
sahf
mov
mov
xchg
enter
add
xchg
fcompl
pop
add
fnstenv
lcall
xor
sub
paddusb
scas
fsubl
mov
scas
jl
inc
mov
dec
lret
xchg
mov
orl
pop
or
mov
adc
pushf
popf
repz
std
fnsave
ret
fbld
aas
rcrb
mov
cmpsl
add
push
jne
and
mov
xor
dec
arpl
aad
cli
inc
call
into
push
inc
lret
in
out
fistpl
push
add
stos
mov
push
pop
int3
in
lods
pop
mov
pop
rcl
mov
or
stos
xchg
das
ja
add
dec
fsubr
ds
out
pop
mov
xchg
xor
or
jp
jecxz
inc
enter
pop
mov
add
cmc
mov
fildll
lcall
sbb
pop
shll
xchg
sub
call
xchg
dec
andb
adc
xchg
pop
sarl
fstp
xor
xchg
mov
addl
mov
push
js
jmp
lods
dec
sub
shrb
sbb
pop
push
jbe
dec
fsubl
pop
mov
aad
daa
lcall
adc
xchg
les
push
jecxz
sahf
leave
out
cmp
jbe
rol
add
nop
shlb
xchg
mov
sbb
and
lret
dec
lods
lds
xchg
mov
repz
std
dec
or
push
out
or
inc
cmc
je
es
rcr
sbb
xlat
fnstenv
sub
mov
ljmp
fs
bound
xchg
sub
jmp
dec
flds
outsb
rcl
js
sti
and
jl
shlb
mov
lock
cmp
mov
jae
mov
or
mov
mov
push
popa
xor
stc
or
mov
js
dec
popa
loopne
mov
imul
pop
jge
adc
dec
pop
jno
andl
jp
lods
fistps
das
mov
mov
pop
adc
fst
inc
shrb
loope
dec
adc
fldt
test
lret
cld
push
or
or
mov
and
sbb
lret
add
mov
je
mov
nop
xor
inc
data16
xor
arpl
sbb
pop
mov
mov
rcrb
aad
mov
fildll
cmp
dec
jecxz
jnp
loop
and
in
lret
xor
imul
leave
aas
into
out
xlat
mov
push
push
cltd
js
mov
test
or
push
mov
inc
lods
iret
sti
cmp
push
out
push
lods
ds
jae
mov
jg
adc
push
pop
mov
push
xor
stos
stc
mov
xchg
stc
es
out
dec
mov
xor
or
sbb
sub
sub
fstps
xor
sub
mov
repz
push
dec
mov
dec
pop
push
xchg
xchg
out
or
inc
inc
popa
shlb
out
aaa
xchg
cmp
in
test
adc
daa
shrl
fiadds
out
je
shrb
dec
add
xlat
fldt
or
dec
lahf
repnz
cwtl
std
sti
push
decb
les
jmp
out
mov
loopne
mov
ret
loope
push
lock
or
pushf
xchg
pop
into
pop
push
cmc
test
pop
sub
mov
in
xchg
adc
mov
push
or
cmp
cmc
int3
add
sarb
jg
jmp
mov
sub
fists
mov
test
cmp
pop
in
fcomi
push
xchg
insl
or
and
xchg
xor
mov
mov
xchg
nop
imul
push
adc
je
test
aaa
inc
hlt
sar
inc
adc
insl
push
xor
inc
enter
fistpl
faddl
pop
loopne
test
rcll
mov
jae
xchg
and
push
lret
mov
and
adc
adc
mov
cld
iret
lods
imul
push
test
jae
inc
aas
lret
aad
filds
sub
xchg
push
inc
and
outsl
jmp
inc
pop
add
or
and
push
ljmp
push
lret
push
loop
dec
ret
cltd
sub
rcll
cmpl
ret
mov
loope
psubq
or
popa
xchg
mov
popa
dec
test
mov
inc
in
nop
add
stc
ds
push
push
icebp
ret
cmp
or
jae
xchg
mov
hlt
addr16
adc
dec
repnz
and
cmp
bound
aam
nopl
and
test
enter
bound
dec
add
or
pop
pop
fldenv
int
outsb
loope
push
lods
iret
cmovns
call
dec
mov
jp
cmp
outsl
lcall
out
push
inc
out
dec
sbb
or
inc
js
ljmp
cltd
data16
imul
rorb
dec
mulb
lods
inc
pop
jae
sbb
je
adc
nop
xchg
lret
mov
aas
loop
clc
ret
faddl
dec
pop
out
fistps
add
cmpsl
jg
mov
add
aas
or
aas
jmp
rcrb
sbb
divl
or
popf
cmp
sbb
es
xchg
sbb
add
test
cmp
scas
hlt
jae
add
je
add
mov
jmp
pop
dec
movsl
sbb
sbb
bound
add
cmpsl
ss
or
lods
sub
mov
sbb
mov
push
cmp
dec
rcl
out
js
movsb
test
xchg
mov
out
push
or
cmp
popa
xor
sbb
insb
mov
scas
jg
mov
icebp
jb
fiadds
inc
sub
fwait
in
out
push
insb
cmp
pusha
lds
cltd
cmpsb
add
and
cli
outsb
and
jo
or
ja
es
pop
and
push
push
lds
movsl
dec
push
out
jp
sahf
lods
add
ljmp
pop
mov
pop
jns
flds
out
bound
ret
mov
xor
push
push
inc
test
fadds
testb
and
fsubrs
out
jo
cmp
dec
addr16
adc
adc
fistl
inc
pop
movsl
sbb
push
jb
loop
fistps
sub
cltd
or
test
imul
repz
fbstp
movb
lock
and
in
test
xor
shll
xor
fidivrl
push
jmp
scas
sbb
dec
and
jg
gs
mov
jno
aam
or
inc
inc
cmpsb
jb
in
pushf
scas
adc
sahf
subb
inc
jb
push
adc
sbb
movb
pop
cmc
mov
int3
xor
lea
lcall
dec
movsl
push
mov
popa
loop
sub
pushf
mov
mov
ret
scas
enter
and
and
mov
pusha
divl
mov
sub
out
push
or
arpl
arpl
or
divl
movsb
test
inc
dec
dec
push
lods
repnz
mov
ret
loopne
outsb
std
lret
push
mov
repz
jo
mov
xchg
jp
xlat
das
loope
and
mov
ret
lret
popa
insl
adc
addr16
lret
es
xor
cmpsb
loop
scas
call
cmp
mov
repnz
jo
and
jg
cmp
fcomps
mov
nop
nop
daa
es
daa
les
test
pop
pop
stos
in
adc
push
inc
andb
cmp
push
inc
test
ss
pusha
push
cmp
sub
mov
mov
ret
cltd
mov
mov
cld
pop
hlt
inc
dec
andl
movsl
les
rorl
dec
hlt
aas
and
int3
pop
imul
movsb
jp
mov
mov
xchg
shl
loope
sbb
mov
imul
and
push
or
mov
out
test
inc
mov
mov
cltd
lret
loope
lock
popl
pop
insb
outsl
loope
add
cmpsb
and
pop
inc
std
xchg
js
cmp
pop
fwait
test
clc
fidivrs
dec
sbb
in
and
test
jno
mov
sub
cli
push
sub
in
or
call
imul
gs
and
int
mov
dec
or
or
sbb
sti
fwait
sbb
push
loop
xor
push
pushf
int3
jne
mov
scas
and
addr16
gs
mov
mov
test
dec
mov
je
int3
dec
adc
out
int
lret
cmp
jg
pop
lret
lahf
clc
xor
popa
push
dec
in
mov
or
xor
pop
dec
enter
dec
dec
in
xchg
cmp
ret
jb
cmp
pop
dec
add
mov
into
lds
cld
mov
mov
mov
iret
mov
and
mov
pop
jg
std
jns
jmp
in
xor
sub
idivl
flds
mov
push
cmp
pop
in
adc
gs
pop
imul
jg
ds
dec
mov
adc
and
pop
push
test
je
insb
sbb
popf
mov
cltd
dec
stos
cmp
xchg
aaa
pop
inc
cwtl
pop
repz
ficomps
in
jp
mov
sbb
notl
cli
loopne
dec
cmp
jecxz
std
in
and
mov
das
cmp
shrb
out
or
inc
arpl
jbe
frstor
test
into
out
xchg
insb
insl
in
inc
or
cmpsl
pop
mov
mov
pop
and
movb
push
push
dec
inc
lret
lret
sbb
mov
inc
popf
jno
push
enter
js
mov
sbb
sub
lods
hlt
inc
fstps
clc
cmp
pushl
dec
adc
fldt
xor
lahf
outsb
adc
mov
ffree
sti
mov
jno
or
icebp
test
lods
ret
mov
es
push
xor
ss
data16
pop
dec
sub
repnz
ret
inc
imul
adc
into
add
or
test
mov
and
xchg
sub
jbe
and
pop
lcall
jb
inc
std
fdivs
cmpsl
pop
dec
fisttpll
xchg
mov
mov
adc
mov
xor
pop
clc
flds
xchg
cmp
movsl
sbb
jb
jl
push
jmp
sbb
lea
or
add
movl
inc
loope
xchg
xchg
test
and
ljmp
lods
jg
jb
test
and
pop
stos
mov
mov
pop
or
mov
push
sub
rcrb
xor
hlt
mov
jl
sbb
inc
movsl
fisubs
ja
fxtract
data16
aad
and
pop
mov
mov
iret
pop
adc
jns
pop
dec
ljmp
add
sbb
jbe
sti
xor
scas
in
loopne
popa
repz
xchg
fmull
out
mov
xchg
mov
mov
mov
push
cltd
xchg
aad
das
pop
out
xor
gs
xchg
sete
movsb
cmp
adc
es
mov
xlat
xor
xchg
jae
add
mov
nop
arpl
push
cmp
cli
pop
xor
out
movsb
repz
dec
sbb
mov
mov
inc
js
ja
and
fcoml
outsb
fucom
mov
outsb
mov
pop
imul
mov
sub
push
sbb
shlb
sbb
xor
in
dec
and
or
cmp
xor
dec
fidivrl
lea
adc
push
mov
cltd
cmp
out
jmp
adc
outsb
sub
xor
popa
popa
or
xchg
xchg
pushf
rcrb
cmovo
jl
inc
xchg
cmpsb
push
pop
cltd
and
lret
xor
dec
mov
std
mov
out
aam
test
cmc
adc
and
inc
push
xchg
add
inc
xor
xor
cld
jmp
cs
cwtl
rol
cwtl
sbb
int
stos
data16
out
imul
mov
mov
adc
popw
jle
lods
jae
subb
dec
repz
adc
inc
xchg
add
jne
cltd
sub
roll
ror
mov
dec
icebp
fidivl
les
out
sub
insl
sbb
fmul
mov
mov
in
pop
imul
jl
push
cli
mov
clc
imul
xchg
mov
in
or
mov
mov
bound
out
inc
dec
mov
adcl
cmpsb
mov
jnp
and
pop
pop
xor
sarb
push
in
xor
cmp
adc
mov
outsb
or
insl
mov
pop
xor
jp
mov
sarl
inc
sub
outsb
adc
icebp
mov
test
mov
nop
dec
adc
jmp
sbb
aaa
pop
stos
out
xor
int3
mov
jno
hlt
scas
xchg
xchg
fdivs
inc
sub
in
rcll
es
aam
push
loope
das
mov
shl
inc
dec
int3
lods
and
inc
inc
int3
xchg
mov
jge
ret
xchg
pop
dec
inc
xchg
mov
or
sbb
sbb
jne
mov
fs
lods
imul
loopne
sub
jns
pop
in
icebp
jmp
mov
mov
sbb
lahf
and
lds
push
cmc
out
inc
orb
jge
mov
sahf
push
pop
xchg
insb
inc
shlb
mov
pop
cli
xchg
mull
add
mov
adc
sub
clc
sbb
dec
or
or
daa
imul
mov
cmpsl
ret
mov
sbb
xchg
push
mov
and
aam
and
out
fdivl
scas
test
pushf
into
xlat
push
lea
adc
fstpt
xchg
ss
dec
pusha
lret
mov
call
aas
mov
jo
popf
cli
cmp
mulb
xchg
mov
sub
sahf
xchg
rclb
xlat
push
test
pop
frstor
adc
push
jno
adc
clc
sub
cmp
xchg
test
in
mov
scas
and
inc
mov
jp
in
pusha
sub
adc
add
negl
jle,pt
pop
jne
cs
add
lret
xor
bound
mov
in
dec
push
mov
in
mov
lret
sti
incb
mov
test
or
pmaddwd
std
ret
or
stc
mov
mov
dec
mov
pop
enter
mov
mov
and
or
xor
imul
xchg
jo
jecxz
add
dec
cmpsl
or
stos
mov
stos
ja
push
mov
and
inc
pop
movsb
jb
mov
add
out
mov
pop
jmp
inc
adc
sbb
cmp
clc
and
cmpsl
clts
outsb
adc
or
jne
ja
push
test
fisubl
data16
iret
push
or
ret
push
popa
lods
shll
push
test
aam
ficompl
dec
push
add
bound
or
nop
xor
push
jmp
aaa
jnp
inc
inc
out
fldcw
mov
xchg
and
push
loope
or
sbb
mov
jle
mov
mov
out
cli
pop
cld
push
jno
addb
jne
loop
sbb
mov
test
scas
mov
ja
mov
fs
and
in
jecxz
cs
jp
inc
mov
jo
adc
into
and
jbe
daa
pushf
or
inc
mov
push
imul
mov
push
inc
cmp
dec
add
lret
js
mov
int
ja
push
and
mov
or
scas
cmp
das
cli
loope
xlat
adc
sub
daa
sbb
jle
lret
lahf
pusha
or
push
mov
and
arpl
push
aam
sbb
les
cmpsl
xchg
mov
cmovl
subl
mov
pop
inc
scas
orl
rcl
sub
sbb
mov
mov
push
cli
push
arpl
out
mov
cs
xchg
jb
jl
in
and
xchg
mov
lods
pop
cwtl
rcrb
lahf
aam
test
add
lods
andb
mov
xchg
sub
loopne
aad
jb
fs
pop
sbb
pop
outsl
push
adc
and
or
pop
aaa
adc
mov
imul
sbb
nop
addr16
mov
or
jge
int3
sbb
pusha
fwait
or
cmp
dec
inc
call
cmp
sub
jns
cwtl
lret
push
or
test
pop
stos
leave
pusha
fcompl
xchg
mov
push
and
xchg
aas
pop
inc
and
orb
mov
insl
sar
add
movsb
scas
xchg
or
jmp
aas
incb
dec
ficoml
faddl
push
or
scas
xchg
cmpsl
shrl
jnp
repnz
jnp
mov
movsl
sarl
rcrl
add
fisubrs
and
scas
dec
lcall
inc
fcompl
cmp
lock
add
sbb
pop
icebp
dec
xlat
mov
adc
test
cmc
inc
fisubrl
int3
notrack
in
subl
xchg
sbb
jge
loop
hlt
shll
pop
sub
repnz
outsb
stos
and
jmp
cmpsb
arpl
fcom
xor
or
push
or
mov
aas
mov
xchg
sub
stos
jae
or
lcall
jno
jg
xor
insb
jl
sub
xchg
dec
mov
mov
and
adc
cmp
je
mov
sub
cmpsb
nop
daa
fsubr
in
push
icebp
test
mov
prefetch
addr16
push
pop
push
test
sub
or
cmp
arpl
mov
jne
iret
xlat
scas
test
jne
scas
mov
mov
sbb
gs
std
fadds
xchg
js
into
loop
push
jl
loope
mov
repz
pop
cmp
stos
int
pushf
dec
dec
fmull
repnz
imul
mov
xorl
and
adc
stc
xchg
sahf
or
add
roll
sub
lcall
cmpsb
dec
stc
mov
movsl
or
sarl
popf
loope
dec
sub
and
add
jnp
sbb
push
pop
mov
sti
aad
push
insb
lods
push
call
sar
sbb
das
test
lret
sub
subl
and
dec
push
das
cli
xchg
mov
fnstsw
lods
int
ret
int3
cmp
in
add
xor
pop
inc
sub
push
lods
jg
sub
mov
pop
sbb
adc
fdivl
xor
fldcw
pop
xor
inc
push
pop
pop
push
cmp
je
jg
pop
lods
mov
int3
mov
mov
pop
mov
xchg
pop
xor
xor
pop
sub
push
inc
pop
add
mov
mov
sub
or
inc
dec
pop
xor
fistpl
and
mov
dec
ret
pop
mov
push
in
xchg
ds
sub
fbstp
in
les
lea
pop
mov
gs
fcomp
inc
pop
add
das
jae
test
ret
or
jns
xchg
mov
mov
mov
pusha
xorb
add
xor
xor
cmp
push
push
shrl
inc
test
movsl
fsave
lret
mov
ljmp
in
and
test
daa
lock
mov
aad
add
ret
push
fsubs
add
mov
and
in
push
rclb
cmp
ret
clc
arpl
movsl
mov
adc
add
shrb
add
xor
xor
adc
jle
lret
pop
scas
fwait
das
rorb
aam
jecxz
mov
push
in
insb
sti
mov
outsl
xor
sbb
inc
or
xor
push
test
lock
lods
push
or
orb
sbb
push
ljmp
shrb
sarl
jno
int
daa
xchg
pop
pop
or
pop
nop
xchg
jp
fidivrs
jge
push
repz
sub
jb
mov
xor
ficoml
sub
insl
shlb
sbb
pop
xor
js
jl
lea
sti
jno
call
jno
gs
fistpll
lods
outsb
mov
popa
push
jbe
test
pop
sub
or
or
mov
sar
je
jnp
in
aas
fs
push
arpl
in
cltd
mov
sarb
add
pop
iret
xor
mov
mov
cli
cmp
fmuls
sub
jb
das
std
test
stos
mov
repnz
imul
test
aaa
lea
js
mov
mov
cmc
and
icebp
push
nop
add
test
and
xor
lret
add
in
push
sbbl
jo
rcll
adc
je
comiss
mov
sahf
jp
pop
lods
lcall
sub
lret
mov
push
int
adc
jo
add
decl
mulb
in
sbb
icebp
add
sub
adc
clc
movsl
icebp
repnz
stos
adc
dec
bound
outsb
in
mov
int
pop
les
out
into
gs
lret
pop
adcb
mov
inc
int
push
xchg
adc
push
pusha
sub
lea
push
ds
les
jg
aam
add
pop
adc
ds
sub
cmp
pop
in
out
adc
aad
adc
jg
in
mov
adc
fldcw
or
imulb
stos
add
shrl
iret
push
stc
inc
icebp
shl
xchg
repnz
adc
xor
push
cmp
xor
mov
jmp
sub
xchg
lret
sub
mov
rcrb
pop
insl
push
call
fistpll
sub
test
mov
mov
push
lods
jo
adc
mov
or
mov
xor
sbb
push
dec
cld
push
xchg
pop
xchg
jl
xor
idivl
mov
mov
cli
nop
or
mov
mov
fidivrl
pushl
adc
inc
push
leave
xchg
cmpsl
sbb
jp
popl
mov
imulb
clc
mov
insb
sbb
mov
in
jge
inc
scas
cmc
popa
mov
mov
fstl
xor
dec
scas
lret
scas
mov
mov
nop
movb
imul
xchg
pop
dec
lock
addr16
out
pop
ja
test
outsb
daa
outsl
fsubrl
pushf
sbbl
xchg
xor
sbb
sub
addr16
xor
hlt
ljmp
mov
xchg
mov
test
sub
sbb
pop
sub
mov
sbb
adc
jmp
lcall
std
shl
addr16
orl
stos
call
rorl
ret
bound
out
jnp
cmpsl
xor
inc
mov
orl
cmp
sub
incl
and
aam
ret
nop
neg
mov
sti
xchg
lret
adc
test
jl
pusha
not
and
call
mov
enter
push
or
mov
push
dec
into
inc
data16
sub
sbbl
mov
scas
or
inc
mov
jb
inc
sub
shll
push
sbb
std
je
or
ss
add
scas
es
loopne
jae
cmp
pop
rcr
andb
add
ja
adc
cmp
add
xchg
jno
mov
mov
loope
addr16
mov
in
xchg
adc
pop
xor
dec
inc
pusha
push
sti
ds
std
push
sbb
inc
aam
xor
imul
inc
push
push
out
sub
gs
ss
push
out
cmp
cmpsl
mov
sub
jo
imul
aad
or
call
testb
sbb
scas
jne
sbb
stos
fdivs
sbbb
negl
divl
cltd
xor
stc
inc
push
aaa
into
adc
jge
lcall
xor
pop
adc
cmp
loope
loopne
ss
xchg
xor
arpl
ljmp
cmpsl
es
cs
outsl
addr16
dec
pop
xchg
mov
stos
add
jno
pop
vpunpcklqdq
cmp
inc
xchg
xor
xchg
cmpsl
mov
mov
and
pop
loopne
xchg
lahf
jp
mov
in
cmp
flds
scas
ss
jmp
andl
mov
jg
lret
push
or
fldl
popf
push
popf
xlat
push
jmp
pushf
dec
adc
mov
orb
ror
arpl
jg
pop
imul
andb
and
xchg
adc
lods
mov
leave
mov
mov
fnstsw
xor
lcall
gs
sub
xor
outsb
mov
imul
sbb
jbe
imul
or
lahf
loop
fsubrs
sbb
pop
lods
xlat
pop
or
dec
lahf
pop
inc
mov
pop
ret
lods
scas
ds
and
xchg
test
lahf
sub
mov
mov
movsb
xorl
mov
shl
mov
pop
lock
cs
push
scas
data16
push
jg
sahf
lods
dec
pop
xchg
mov
pop
fistpl
mov
dec
mov
stc
shrl
jmp
push
cmp
rcrl
fmuls
dec
or
adc
and
mov
lods
shl
cmc
shrb
cltd
add
lret
mov
hlt
mov
in
push
pop
xchg
ret
jp
cmp
mov
cmp
in
es
pushf
cli
out
bnd
decb
inc
in
mov
and
shl
in
and
mov
stc
dec
inc
push
add
pop
jae
jmp
xor
lods
out
push
mov
jo
int
mov
sahf
popf
cli
loop
pop
ss
push
out
mov
fidivl
jmp
rclb
repnz
fildl
mov
mov
jge
inc
mov
pushf
cs
and
aad
outsl
jnp
negb
fnstenv
dec
and
int3
lods
inc
push
mov
lret
das
test
and
jl
push
ret
bswap
sub
repz
push
adc
xchg
out
jle
inc
push
fdivl
in
lahf
out
xchg
fldcw
lahf
out
insb
cmpsb
adc
xlat
lea
aas
jne
mov
xchg
pop
repz
mov
call
xchg
ret
stos
and
bound
mov
or
movsb
cmp
fdivrs
or
or
je
test
adc
cltd
jbe
inc
shlb
adc
sub
sbb
lcall
cmpsb
sbb
mov
retw
push
clc
movsb
out
or
xor
add
gs
sub
mov
test
mov
xor
push
push
dec
in
sbb
xor
rolb
stos
mov
bound
imul
add
nop
aam
rcrl
xor
cmp
jecxz
add
xchg
add
lock
fcomi
lea
dec
lods
scas
pop
div
lahf
cmp
sbb
dec
bound
cmp
xor
inc
cmp
mov
cld
jo
sbb
sub
rol
push
insl
mov
sbb
xlat
les
pusha
call
sub
ljmp
imul
faddl
jae
stc
adc
test
sbb
sbb
mov
shl
movsl
loopne
push
sbb
shll
test
xor
js
mov
adc
pop
jo
cmpsl
ds
fstpl
stc
mov
or
mov
push
out
stos
jo
test
xchg
stos
mov
repz
dec
popa
mov
pusha
imull
pop
mov
fcmovnu
js
add
or
das
mov
mov
jp
inc
data16
xchg
daa
mov
js
inc
mov
dec
push
pushf
jg
pusha
std
mov
ret
test
subb
lods
loop
mov
push
ret
cwtl
add
push
mov
mull
inc
das
pop
icebp
pop
dec
xchg
pop
dec
jge
adc
out
pop
push
lock
lret
mov
and
xor
mov
std
mov
push
jb
jg
aam
mov
mov
dec
stc
push
inc
out
les
jno
movsb
add
sbb
jns
adc
adc
add
iret
fcomi
cmpsb
mov
fstps
pop
adc
mov
loop
push
leave
sub
adc
mov
faddl
out
cmpsl
cmp
in
mov
xor
sub
pop
sub
cmp
imul
jge
push
jmp
fdivrs
push
pushf
testb
ja
stos
xchg
mov
dec
dec
mov
sarb
leave
insb
or
xchg
pop
inc
shrl
or
or
or
popa
js
push
shl
dec
inc
push
dec
enter
mov
cwtl
xor
in
insb
shrb
inc
divl
and
jmp
and
lods
or
cmp
lret
dec
mov
xchg
push
ljmp
mov
mov
mov
pop
loope
sbbl
or
fwait
dec
xchg
dec
divb
jmp
ds
das
movsl
fwait
pop
mov
sub
pop
sti
xchg
dec
rol
leave
mov
dec
aam
arpl
mov
es
jns
cmpsb
dec
xchg
mov
mov
sahf
or
mov
gs
mov
mov
add
mov
lods
mov
rcrl
dec
push
pop
cwtl
nop
aas
push
mov
sbbl
mov
push
or
pop
mov
mov
jo
cmp
dec
inc
cmp
in
cld
push
fidivl
xor
xor
mov
jl
inc
jmp
adc
les
inc
inc
sbb
sub
mov
xlat
lods
mov
ret
push
jae
mov
cmp
mov
nop
mov
mov
and
in
outsb
shr
loop
mov
sub
je
jo
or
inc
inc
scas
out
faddl
add
imul
js
jae
les
outsb
stc
cmc
xchg
sub
pop
sub
rcrl
lods
add
cli
in
xchg
jmp
jmp
out
xor
clc
daa
out
icebp
adc
mov
into
mov
icebp
inc
cmp
jle
loope
mov
jp
xchg
jns
addr16
push
stc
iret
add
je
xor
push
inc
mov
test
shlb
jecxz
mov
lds
ret
stos
dec
mov
pop
mov
es
insl
xor
sarb
out
ds
push
xor
leave
movsb
shlb
push
data16
in
mov
xchg
testl
test
leave
sahf
jl
dec
pop
cmp
repnz
stos
lock
push
push
xchg
inc
aas
jmp
push
or
daa
or
hlt
xlat
fimuls
xchg
cli
les
negb
pop
cmp
xor
jecxz
mov
push
adc
ret
icebp
dec
push
add
loop
test
cmpsb
out
syscall
and
sub
adc
scas
inc
xchg
cmp
iret
gs
inc
fadds
pop
test
pop
loope
add
cmp
js
sahf
xchg
mov
mov
push
outsb
into
in
jbe
int3
jecxz
pop
test
repz
adc
movsb
mov
fisttps
and
mov
in
loop
mov
iret
xorl
das
shll
shlb
inc
pop
aas
sub
xchg
sub
int3
leave
ret
dec
das
les
es
js
dec
addr16
mov
jecxz
inc
inc
dec
rol
xchg
in
mov
shl
inc
jl
sub
lea
xor
pop
sub
pop
adc
daa
jmp
or
jb
inc
js
arpl
lret
addr16
call
jg
aam
test
jno
adc
sahf
and
xor
push
test
enter
filds
out
repz
mov
pop
xor
add
sahf
dec
lds
jns
jb
cmp
xor
into
add
jo
and
cmp
jecxz
sub
fdivrs
sub
movsl
or
xchg
jnp
stos
outsb
insl
fcoml
sbb
out
xchg
xor
xchg
in
mov
bound
adc
xchg
and
into
shrb
push
and
enter
xchg
adc
jmp
test
vpand
jle
rol
js
sbb
out
fwait
lods
pop
scas
fmul
inc
xor
dec
mov
aam
xor
outsb
adcl
mov
sarb
sub
stos
mov
jmp
adc
jb
lock
lods
push
fnstenv
dec
mov
inc
mov
jno
lods
popa
and
push
clc
and
xor
in
jnp
dec
test
inc
push
fldl
das
adc
and
jb
and
or
or
mov
sub
in
adc
fstp
mov
psllq
outsb
shrb
push
adc
mov
lds
fwait
xchg
xor
imul
sub
aam
xchg
xor
xor
icebp
and
xchg
mov
int3
push
test
inc
subb
push
ljmp
scas
mov
pop
hlt
scas
outsl
push
xchg
in
sti
xchg
push
addr16
insb
push
mov
mov
or
pop
fwait
sbb
cmp
out
test
icebp
push
cmp
ds
das
arpl
movsl
cmp
mov
fiaddl
mov
negl
mov
adc
dec
imul
or
pop
sub
jns
insl
mov
sbb
push
push
xor
cmpsb
mov
fbstp
loope
add
les
adcb
shlb
or
jle
xorl
xchg
add
cmc
dec
push
mov
into
scas
in
in
repz
sbb
lcall
mov
addl
adc
mov
repnz
mov
pop
dec
mov
fistl
add
cltd
sbb
cli
jl
xchg
and
lds
rcrb
dec
dec
push
and
repz
ss
movsb
cltd
jp
mov
push
aaa
into
mov
lcall
aad
xchg
xor
inc
aad
xorl
push
sub
in
push
sub
add
lods
inc
adc
inc
loope
repz
rcll
fdivrl
mov
push
mov
mov
enter
sub
jno
add
nop
das
test
ja
jle
out
push
push
cmp
rorl
nop
loopne
sti
out
mov
dec
stos
or
jp
inc
adc
cltd
jns
dec
jecxz
shlb
jle
or
pop
shrl
daa
ja
xor
sub
pop
in
or
push
cmp
mov
or
xchg
ss
cmp
sbb
inc
pop
dec
filds
insb
loope
ja
sub
sbb
inc
pop
mov
js
mov
aas
outsb
leave
subl
leave
jne
sti
jbe
pop
jae
pop
jno
notl
outsl
jns
xchg
cmp
lock
shlb
loopne
bound
mov
mov
scas
adc
frstpm(287
xchg
aam
test
cwtl
dec
repnz
mov
push
jmp
aaa
jae
push
aad
add
lea
xor
adc
pop
loop
cmp
insl
push
jns
xchg
lcall
inc
xor
mov
cmp
sbb
xchg
iret
repnz
and
adc
and
cmpsl
pop
repnz
jp
jmp
adc
fwait
je
lock
sahf
addr16
popf
mov
aad
outsl
ret
xchg
add
negl
or
icebp
xchg
xor
xchg
sub
lahf
lods
jae
or
int
cli
push
adc
sub
mov
xchg
or
lods
loop
adc
jle
mov
call
dec
push
sbb
add
ss
ljmp
add
sbb
cs
add
mov
lcall
xchg
xor
test
in
outsb
jae
dec
pop
testb
notb
mov
jp
arpl
lahf
and
inc
aas
cmc
jl
popf
jle
inc
mov
test
cmp
clc
sub
fnstenv
hlt
sbb
mov
add
mov
mov
loop
mov
mov
fmull
movntq
out
insl
cmc
and
push
aaa
sub
mov
pop
sarb
test
daa
mov
jne
or
adc
js
or
xchg
cmp
add
ss
mov
xchg
sbb
or
xchg
push
sbb
pop
loop
mov
clc
sahf
nop
sbb
jb
cmc
out
lret
cli
cmp
test
pop
inc
cs
sarb
cmp
iret
aam
daa
push
in
scas
divl
scas
xchg
push
nop
push
in
push
or
test
and
xchg
ret
sti
fsubs
xor
pop
and
dec
adcl
hlt
mov
orl
ret
sbb
xchg
aaa
mov
or
sub
pop
inc
push
movsl
xchg
fs
jb
mov
sub
adc
pop
and
ret
pop
call
lea
xchg
add
mov
inc
jg
pop
ljmp
push
test
dec
movsb
xor
sub
inc
or
and
jge
and
pop
lret
push
popa
jnp
cmpsb
sbb
mov
xor
outsb
adc
fistpl
mov
xchg
jno
push
shll
fisubs
pop
lods
push
addb
xor
repz
lds
outsb
loope
fimuls
mov
dec
xor
sbb
jno
jne
cli
cmp
call
fidivs
add
adc
subl
mov
js
mov
adc
stc
push
mov
jne
fcoms
jp
xchg
cmp
daa
out
stc
or
lods
imul
add
sbb
sarb
cmp
xor
sbb
loope
ss
lods
inc
and
movsl
cmp
jl
cmpsl
xor
cmp
mov
mov
shll
fs
sbb
mov
sarb
inc
hlt
push
test
and
jno
out
xchg
push
pop
cmpsl
jne
xor
sub
xchg
xor
jmp
or
pop
xchg
mov
xchg
stc
xor
mov
xchg
inc
or
mov
outsb
push
cmpsl
fimull
or
iret
fstpt
stc
xchg
arpl
xchg
mov
out
mov
adc
andl
iret
xchg
pushf
pop
pop
adc
div
mov
sarl
xor
push
pop
nop
daa
mov
lods
and
bswap
popa
into
sub
in
mov
imul
sbb
pop
ret
cmp
mov
gs
add
add
inc
cli
test
and
mov
pop
sbb
iret
das
fdivp
cmpsb
add
jne
cwtl
gs
arpl
mov
and
dec
insl
jnp
xchg
lods
ret
push
push
loop
add
or
lods
mov
sti
mov
add
faddl
lret
mov
fsts
xor
cmpsb
jle
pop
fldt
sub
fsubr
mov
sub
push
dec
inc
dec
fsubl
dec
pop
ret
adc
sti
sahf
lods
xor
rcr
cmp
mov
shll
sbb
scas
mov
in
movsl
popa
cli
sti
int
lea
mov
adc
adc
out
jns
in
jne
mov
fistpll
push
iret
fwait
or
cli
add
push
cmpsl
ret
adc
shll
insl
mov
inc
out
sbb
mov
hlt
mov
push
in
jo
popf
jg
or
lock
mov
push
mov
mov
test
add
rcl
pop
mov
inc
pop
mov
adc
mov
xchg
imul
push
imul
sbb
cmp
cmp
or
dec
xchg
add
inc
stc
je
push
push
xlat
mov
stc
je
imull
insb
adc
fcomip
lods
jne
sbb
int
dec
jecxz
sarl
shr
shr
cli
sub
pop
adc
mov
cli
mov
push
mov
cli
or
arpl
stc
addr16
ja
cmp
mov
out
xchg
sti
xchg
add
xchg
shrl
mov
movsb
scas
inc
add
mov
pushf
pop
xchg
into
negb
daa
add
lcall
rcrl
jmp
leave
hlt
xchg
pusha
movsb
aad
dec
rcrb
pop
push
jmp
in
xchg
nop
pusha
int
mov
out
rcl
int
add
cmpsl
stos
inc
cli
mov
push
jmp
icebp
jnp
cmp
test
mov
out
pop
xchg
sub
nop
pop
add
pop
cwtl
jmp
dec
xor
shll
aam
sbb
fcmovne
pop
rcrl
xlat
xchg
rcl
dec
aad
jp
dec
mov
bound
inc
and
lret
xor
gs
les
mov
rcr
jp
pop
scas
cld
push
sbb
outsl
push
jne
outsl
inc
loop
jl
int
xor
cwtl
lret
sti
jb
push
mov
sbb
cli
stos
xchg
pop
jno
adc
roll
clc
dec
add
dec
negb
mov
add
les
sub
pop
cmp
sbbl
rcr
gs
sub
call
fprem
cmp
cmp
mov
decb
mov
dec
loop
xchg
push
movsb
leave
jae
adc
mov
movsb
add
mov
add
into
movsb
loop
idivl
xor
cmc
inc
xor
fwait
pop
ds
mov
pop
pop
sbb
lret
nop
push
enter
adc
or
insb
andb
clts
sbb
movsl
adc
je
dec
nop
mov
test
mov
movsb
loop
or
das
and
rcrl
or
mov
lcall
lock
in
jg
push
dec
jecxz
leave
aam
cmp
sbb
xchg
dec
fdivl
push
outsl
sbb
addl
nop
add
sub
jno
lds
in
mov
and
jg
adc
hlt
rcll
pop
rcl
dec
adc
sbb
jg
stos
mov
std
adc
or
or
movsl
or
pop
data16
push
sub
test
mov
and
mov
scas
ljmp
xchg
fidivrl
push
or
dec
sbb
and
lods
stos
jp
scas
and
xor
dec
push
cmp
addr16
jne
cmp
lock
adc
fistpll
je
mov
xchg
add
ds
hlt
dec
cmp
mov
lods
push
and
mov
dec
mov
sbbl
sahf
insb
add
or
mov
sbb
scas
cmp
pushf
xor
clc
enter
cmp
adc
sub
pop
in
sub
sti
or
mov
xchg
pusha
xchg
xchg
pushf
sti
pop
rcrl
leave
sahf
cmpsb
adc
stos
popa
add
pop
test
adc
leave
mov
lret
jo
sub
outsl
mov
leave
jecxz
cmc
or
cmp
fsubrl
sbbl
test
xchg
xchg
push
inc
mov
push
pop
cmpl
out
inc
lcall
fadd
cmp
rep
mov
xchg
int
adc
xchg
out
xchg
cwtl
testl
jl
xchg
in
dec
adc
icebp
dec
pusha
lcall
addr16
fsubl
mov
pop
xor
inc
xor
mov
nop
outsl
and
mov
push
aas
aas
mov
xor
sbb
jne
into
inc
pop
pop
pusha
decb
test
imul
jge
adc
pushf
sub
fldenv
test
mov
jmp
and
frstor
lret
jnp
imul
sbb
out
or
cmp
imul
rorb
mov
cmp
ss
sub
add
dec
jns
ss
stos
push
movsl
faddl
mov
cmpl
pop
push
jne
cs
mov
ljmp
xchg
test
repz
xsha1
cmpsb
dec
mov
sbb
cmp
shll
out
xor
pop
ret
neg
xchg
ljmp
es
daa
sbb
pop
in
in
pop
jne
addl
mov
push
fwait
arpl
or
lea
clc
sahf
notb
scas
iret
shr
jg
icebp
mov
adc
mov
push
xchg
popa
enter
sub
pop
outsl
sbb
or
jmp
lea
lea
aam
push
jo
nop
or
xchg
push
dec
mov
sbb
loop
lods
push
lea
jecxz
cmc
jl
fsubrs
sub
stos
daa
mov
imulb
stos
inc
and
and
xchg
insb
jg
cmp
cmp
add
dec
in
fidivs
shll
les
xlat
mov
jno
xor
mov
dec
into
ss
je
xor
mov
addr16
ds
inc
pushf
mov
popf
sub
daa
scas
adc
pop
test
xchg
xor
sub
in
addl
test
pop
xchg
shlb
ret
popa
lods
int
out
add
or
push
mov
xchg
out
sub
xchg
adc
inc
push
outsb
mov
lahf
lock
pop
repz
sti
xchg
int3
loopne
sbb
sbb
push
aad
psrlq
adc
xchg
xchg
cmc
mov
inc
add
sub
cmp
rorl
jb
fsubl
xchg
cs
outsb
sbbb
leave
test
sbb
pop
fnstsw
push
fdivs
lds
xchg
pusha
cli
sahf
or
int3
adc
sub
pop
or
lcall
and
xchg
jle
sub
leave
or
and
sub
mov
jg
daa
test
inc
call
mov
mov
mov
lcall
and
cltd
sti
call
lcall
enter
rcrb
test
movsb
jecxz
leave
xchg
add
xor
push
cmp
inc
dec
cld
ret
pop
cmp
or
out
jns
dec
push
jmp
adc
es
ja
mov
cmp
add
ret
mov
out
sbb
dec
jae
push
je
push
xor
xor
mov
orb
lods
push
fists
imul
add
ss
adc
fwait
mov
xor
lret
les
jmp
fisubl
push
adc
push
push
pop
sub
out
jmp
ret
test
push
aam
rol
sub
loope
dec
and
jmp
test
mov
xchg
clc
dec
pushf
sar
sbb
dec
push
pop
in
movsl
dec
in
aas
hlt
mov
bound
jbe
pop
mov
mov
mov
add
int3
fcomps
sahf
sbb
xchg
in
scas
pop
xor
ds
inc
jg
es
adc
imull
adc
mov
sti
sub
pop
jo
jl
stos
push
mov
imul
sbb
icebp
jne
sbb
mov
int3
jae
or
stos
push
stos
pop
jecxz
jl
loope
std
mov
andl
sbb
xchg
jle
divl
loopne
repz
shll
inc
push
nop
dec
hlt
adc
mov
mov
push
mov
ds
lods
dec
inc
jnp
jne
cmp
dec
add
aad
cli
cmp
dec
lea
fmuls
cmp
pslld
aam
sbb
pushf
imul
or
inc
xlat
orl
jmp
data16
mov
push
mov
lock
pop
ret
mov
lods
push
add
xor
mov
cmpsl
ds
maskmovq
notl
mov
fsubrl
mov
mov
push
add
inc
int3
outsl
inc
jp
or
ret
inc
je
imul
addr16
adc
mov
aad
addl
leave
das
test
bound
mov
imul
jl
out
sbb
jne,pt
fmull
aaa
sbb
xchg
sub
mov
lock
xor
push
fidivrl
fnstenv
push
ret
jb
and
cmp
lea
xor
repnz
sub
divl
shlb
jl
fcmovnu
subb
dec
data16
pop
push
cmc
jae,pn
adc
test
sub
pop
sub
int3
lret
dec
aad
push
mov
mov
into
mov
loop
mov
addr16
cmpsl
cmc
jne
shlb
or
adc
rcl
xchg
inc
mov
mov
cltd
cmpsb
arpl
fdivrs
push
jae
outsb
dec
out
mov
or
fs
nop
loopne
and
loope
lock
xor
jle
btr
cmp
fstpl
push
cli
mov
out
fs
imul
push
test
lahf
jno
mov
rorb
mov
seta
dec
stos
adc
inc
push
fisttps
fs
xchg
sub
and
and
xchg
sti
into
sub
cmpsl
pop
jg
pop
popa
xor
push
movsl
addl
dec
fsubrs
pushf
push
and
imul
push
xor
hlt
jmp
or
jg
arpl
xchg
test
lods
inc
lods
lea
bound
jmp
add
xor
pop
inc
xchg
lods
or
push
insl
mov
out
test
cmpsb
stos
lea
ss
ja
push
xchg
daa
push
mov
xchg
jno
mulb
pop
call
pop
aaa
push
in
pop
loopne
mov
rclb
movl
enter
mov
repnz
xchg
xor
mov
jo
imul
popf
xchg
popl
addr16
add
imul
cmp
icebp
repnz
cs
add
cltd
mov
push
jmp
mov
test
jb
jne
out
cmp
or
xchg
add
bound
xchg
and
sbb
add
sub
and
aad
sbb
add
xor
cmp
pop
jbe
popa
or
adc
es
fsubrl
and
cs
popa
xor
jl
push
lods
lods
jge
test
cld
lcall
push
and
inc
adc
mov
xor
arpl
push
ds
xchg
jmp
jno
jo
and
jne
fldenv
pop
and
dec
xlat
dec
inc
loopne
or
jne
mov
test
in
imul
out
insl
xchg
mov
inc
jecxz
sbb
sahf
stc
stos
inc
xchg
push
inc
mov
movsb
cmp
imul
int
sbb
call
or
mov
add
leave
sub
jae
pusha
inc
je
lds
adc
ret
xchg
inc
not
sub
fstps
pop
adc
data16
gs
cmp
pop
sub
out
sbb
fs
push
dec
shl
dec
cmp
pop
out
mov
jl
pop
enter
add
cli
and
lret
ret
lods
hlt
in
push
in
adc
hlt
adc
pop
mov
jle
stos
psubb
fbld
ret
into
gs
adc
movsl
int3
mov
addb
xchg
pop
repz
sub
mov
lds
test
pop
inc
fisttpll
and
stos
adc
cmpsl
push
js
cmp
sbb
and
dec
push
jae
cwtl
sbb
add
mov
xchg
lret
sbb
pop
clc
ja
leave
add
outsl
shlb
sbbb
out
mov
xchg
test
lds
add
in
adc
rcrl
lods
mov
dec
mov
jno
insl
dec
in
xchg
outsb
cmpsb
jecxz
pop
mov
mov
ret
pop
pop
inc
fmuls
call
das
xor
or
prefetcht2
sbb
sub
popa
ror
out
leave
pusha
stc
test
pop
nop
jg
xchg
pop
rcrb
cmp
js
sti
test
xlat
sub
test
popa
fiaddl
insb
pop
fbstp
push
dec
lods
sbb
inc
jl
xchg
pop
adc
cmp
mov
in
sub
scas
gs
sbb
sbb
xor
mov
gs
js
mov
dec
pushf
lds
xor
cmp
or
rcrl
insb
and
pop
daa
aaa
repz
jmp
adc
loop
jno
cs
pop
ror
in
xchg
in
dec
jecxz
je
lahf
subl
adc
cwtl
pop
cmc
inc
sbb
movsl
mov
mov
dec
enter
adc
scas
mov
ss
scas
aad
stc
iret
aam
popf
mov
repnz
in
mov
sub
outsb
pushf
sub
cmp
fs
test
or
outsb
loope
scas
fs
fstpl
shrd
mov
or
enter
fisubs
decl
scas
inc
cmpsb
xchg
cld
mov
cmp
add
xor
mov
sbb
push
out
hlt
sahf
mov
and
and
stos
mov
jge
insb
lret
lock
lods
scas
das
iret
fldenv
or
cs
dec
mov
inc
and
xchg
fisubs
adc
std
push
inc
inc
pop
xor
cltd
leave
mov
push
inc
scas
adcb
rcrb
ja
addr16
xchg
scas
inc
les
mov
mov
lock
sbb
leave
outsb
mov
xchg
adc
std
jns
push
cltd
int3
sbb
cmp
add
outsl
jle
mov
cmp
or
xchg
ret
out
jl
inc
stos
pusha
jnp
mov
cmp
lods
hlt
mov
mov
loope
and
dec
add
xor
sub
push
or
les
push
or
scas
and
icebp
shrl
cltd
cmc
adc
insb
jecxz
and
aad
dec
push
push
pop
sub
mov
adc
mov
jl
xchg
lret
lods
les
outsb
push
in
pop
pop
fs
sub
dec
sub
icebp
add
test
cmpb
insl
out
cmc
adc
jne
insb
imul
repnz
add
out
sbb
cli
inc
push
xchg
mov
push
mov
dec
testl
icebp
insb
or
mov
adc
cltd
xchg
mov
inc
fimull
xor
ds
adc
icebp
cmpsl
mov
xchg
jge
push
push
mov
testb
push
mov
sti
stc
movsl
xor
dec
add
inc
adc
adc
ljmp
sahf
int3
jle
jne
push
or
dec
clc
adc
std
xchg
adc
popa
subb
inc
ljmp
bound
pop
and
test
hlt
js
and
mov
jb
push
add
nop
mov
xor
js
push
pushf
out
adc
xor
sbb
ret
xor
pop
repz
movsl
mov
xor
jb
into
push
sbb
cltd
push
mov
xchg
xchg
loope
sbb
inc
jl
mov
push
xchg
divb
aam
jns
aaa
mov
pusha
sub
leave
jno
scas
sbb
push
dec
pop
or
mov
mov
out
sbb
dec
jne
orl
fucomi
mov
push
xlat
pop
pop
lcall
push
jb
loopne
cmpsb
mov
je
add
pushf
lods
popf
add
xor
cmp
in
dec
pop
insl
ret
jns
mov
cmpsb
ljmp
xchg
jge
js
cmp
into
jnp
scas
xorb
dec
aas
adc
push
jae
xchg
inc
aas
add
lods
jmp
test
add
stc
icebp
in
add
mov
je
adc
insl
arpl
ficompl
mov
or
sbb
jecxz
rcrl
outsb
into
mov
mov
push
dec
xor
bswap
ja
push
inc
xchg
mov
xorl
enter
add
push
stc
shlb
jmp
mov
cld
add
imul
call
outsl
adc
iret
xchg
or
mov
pop
push
dec
cmp
iret
ljmp
arpl
adc
shr
mov
stos
xor
push
out
inc
dec
dec
inc
enter
ja
xor
add
mov
add
bound
xchg
cmc
cmp
in
shlb
repz
rcll
and
scas
movsl
adcb
data16
push
inc
push
leave
jg
nop
imul
divb
and
xchg
push
testl
cmpsb
cmp
fidivl
xchg
and
sbb
add
sub
outsb
es
mov
lcall
push
cmp
call
xor
lods
mov
fstl
movsl
rsm
or
add
lcall
hlt
mov
mov
dec
aad
insb
js
cmp
faddl
add
mov
xor
adc
adc
stos
cmp
adc
pop
inc
xor
icebp
movsb
sti
add
ss
adc
push
cltd
pop
lds
push
pop
rcr
daa
push
inc
mov
mulb
jbe
es
mov
pusha
cmp
inc
inc
pop
fdivrs
stos
shlb
mov
repnz
outsl
jbe
das
repnz
mov
mov
adc
mov
or
ja
jbe
inc
cwtl
xchg
movsb
int3
aaa
data16
stos
sbb
cmpsl
push
jmp
cmp
xchg
daa
xchg
add
icebp
sar
pop
ret
outsl
push
dec
push
shr
xor
and
stos
jbe
sti
sbb
xor
fsubrs
bound
pop
lcall
ret
test
stos
xchg
sub
ficomps
repnz
hlt
je
rcrl
icebp
pop
sahf
and
lahf
push
add
rcrb
imul
mov
jg
out
mov
inc
sub
stc
mov
lock
mov
aaa
mov
or
lcall
ja
xchg
inc
jecxz
in
mov
add
dec
push
nop
stos
dec
mov
add
add
xchg
ret
inc
mov
dec
iretw
lahf
mov
lret
js
pop
cmp
fwait
negb
cmc
mov
pop
dec
xlat
mov
and
push
pop
dec
push
faddl
loope
xchg
xor
lods
test
xor
or
hlt
add
jnp
mov
mov
add
xorb
sti
fmuls
lods
jae
sub
inc
lret
imul
aam
dec
mov
or
into
imul
pand
xor
mov
mov
aaa
fcmovne
push
frstor
dec
out
cwtl
in
movsl
imul
xor
adc
lock
add
pop
or
lds
jecxz
dec
cmpb
lret
movsl
in
pop
or
xor
push
jo
testl
das
jne
jo
inc
out
jae
testl
or
in
idiv
push
xor
out
in
inc
pusha
push
iret
test
add
fstp
adc
bound
add
mov
sbb
xchg
dec
sub
fnstcw
mov
add
inc
pop
imul
sarb
insb
push
cmpsb
pop
pop
inc
mov
xchg
arpl
cs
xchg
insb
push
ss
idivb
mov
call
fimull
xchg
dec
movsl
mov
data16
cmpsb
fsubrs
mov
pushf
xor
mov
xchg
bound
push
or
sub
sbb
in
das
dec
fdivp
and
test
data16
pop
cmp
cmpl
daa
iret
cwtl
insb
mov
mov
xchg
fnstsw
lock
cmp
lret
or
popa
hlt
pop
pop
hlt
cmpsb
xchg
cmc
pop
sub
fwait
pop
int
pop
aas
adc
mov
lret
es
je
inc
pop
jb
movsl
xor
and
jnp
push
xor
dec
dec
js
jne
fbstp
jcxz
add
mov
jmp
test
inc
push
int3
sub
lock
in
ja
shlb
insl
paddsw
mov
outsl
notl
notb
dec
mov
das
pop
mov
nop
add
pop
inc
cmp
inc
push
adc
rolb
or
dec
out
dec
sbb
xchg
adc
scas
mov
test
cltd
cmp
xchg
testl
ss
inc
inc
fnsave
and
sti
dec
mov
cmp
add
scas
xchg
outsb
mov
sbb
dec
int
pusha
negl
pop
sbb
mov
xor
sti
pushf
cmp
add
out
cmp
cmc
pop
testl
mov
bound
repz
lea
sub
adc
xor
inc
jl
in
and
inc
ficomps
cmp
jl
jbe
sbb
dec
aaa
lcall
or
mov
xor
ja
adc
enter
dec
out
sbbb
xchg
adc
hlt
adc
fs
jbe
clc
inc
out
xchg
test
test
push
push
ret
fstp
inc
sti
leave
jno
jmp
shll
mov
push
negl
jo
fs
aad
inc
sti
or
rcr
xor
scas
sbb
xor
mov
fsts
pop
scas
jns
mov
stos
cmp
lock
pop
fwait
xchg
pop
int
roll
add
jno
movsb
cmp
insb
lds
mov
test
xchg
inc
cmp
or
mov
hlt
xchg
ret
pop
adc
sub
sub
jmp
sbb
pop
xor
into
movsb
gs
sbb
nop
sub
ss
dec
pop
mov
lret
jp
pop
out
pop
jae
add
cli
jne
rclb
test
cmc
pop
leave
sub
adc
js
add
test
and
ja
or
lock
push
rolb
pushf
push
jno
xchg
shll
mov
dec
outsl
mov
dec
jl
pop
add
jo
bound
mov
jno
jno
inc
mov
sbb
or
mov
mov
test
loopne
mov
adc
xchg
jmp
mov
into
int3
out
add
arpl
enter
jne
cmp
xlat
repz
lock
repz
movsl
xchg
mov
sub
or
xchg
mov
dec
dec
mov
stos
cmp
fsubrl
leave
int
fisubs
cld
push
pop
ljmp
out
dec
out
loopne
mov
xchg
arpl
lcall
xor
lret
call
mov
add
push
or
mov
sub
jmp
adc
push
faddl
repnz
and
sub
aas
dec
lret
mov
lds
and
jmp
hlt
and
sub
dec
xchg
sub
pop
int3
mov
and
xchg
push
jne
cs
sub
loopne
jmp
or
inc
lds
in
hlt
pop
aad
lcall
dec
setns
inc
insl
imul
mov
cltd
repz
cwtl
in
jo
movsb
cmp
shll
or
cmc
adc
ss
jae
cld
push
mov
jne
sub
ret
enter
cmpsb
insl
ret
dec
jp
shlb
mov
jge
aaa
fnstsw
dec
adc
in
cmp
jae
incb
test
fistl
or
sar
scas
pop
ljmp
jno
inc
adc
in
stos
pop
das
cmp
jo
subb
push
inc
test
nop
mov
aam
add
push
test
jnp
jno
popa
pop
stos
jbe
subb
push
test
js
pop
cltd
test
and
leave
push
jo
push
lcall
push
out
js
in
and
lcall
and
xchg
ret
movsb
sbbl
adc
fimull
lock
int3
mul
cli
rcll
ljmp
div
pop
sbb
sub
lods
cmc
push
mov
lcall
adc
outsl
sbb
push
adc
sub
addr16
int
add
and
lcall
push
call
cmp
bound
xchg
inc
adc
jle
sbb
push
movsl
shrl
push
flds
cmp
jbe
xlat
hlt
fs
test
popa
daa
sbb
outsb
or
aad
insl
sbb
jg
sub
popf
sub
xchg
pusha
ret
ret
cwtl
pusha
lea
out
lds
lods
fidivrl
ret
scas
test
movsb
sbb
jle
or
pop
out
out
pop
bound
inc
mov
xlat
sbb
xor
sbb
push
les
inc
sbb
jae
dec
mov
jo,pn
cmp
sbb
and
lea
clc
sbbb
push
mov
push
mov
andb
je
mov
xlat
push
xorb
es
push
mov
cmp
jecxz
pop
add
mov
lock
pop
shll
push
mov
bnd
mov
cmp
cwtl
inc
lahf
inc
ljmp
pop
and
pop
cmp
add
sbb
jge
inc
gs
pushf
add
dec
ss
into
je
pop
cltd
and
adc
jge
xor
cmpb
push
push
jecxz
xchg
mov
mov
push
leave
flds
gs
fstpl
ss
out
xor
mov
add
movsl
mov
icebp
mov
pushf
or
cmpsl
ljmp
jne
or
dec
jbe
in
mov
notl
data16
dec
loope
or
iret
jle
push
mov
or
push
icebp
jp
movsb
mov
xor
and
sub
pop
sub
ret
stos
mov
ja
or
adc
mov
or
cmp
mov
mov
add
jb
cltd
xor
arpl
andl
jo
jg
mov
sti
adc
enter
push
cli
es
push
and
mov
xor
mov
or
pop
repnz
pusha
xor
and
push
fdiv
imul
cmpsl
hlt
ss
pop
data16
cwtl
xor
iret
push
loop
jle
out
add
sti
fwait
mov
push
fildll
fsubl
push
fwait
pusha
push
out
shl
xchg
cld
cltd
cmpsb
jbe
aam
decb
ret
hlt
outsl
xchg
daa
cmp
scas
cmp
loop
cmpsb
mov
lret
orl
shrb
dec
dec
mov
lret
mov
imul
pop
push
and
push
jae
cmp
fs
mov
inc
call
nop
aad
repz
inc
jmp
loopne
rcr
lea
and
subl
mov
fstl
test
sub
adc
rclb
dec
sbb
push
mov
movsb
pushf
sbb
je
mov
push
and
pusha
aas
scas
xchg
inc
js
jae
push
test
pop
xor
sbb
jns
mov
and
outsb
sar
mov
mov
aad
mov
mov
decb
inc
push
stos
enter
mov
jae
pop
cltd
xchg
mov
mov
dec
lret
aaa
push
adc
xchg
dec
sbb
xlat
outsb
decl
loopne
push
mov
adc
arpl
adc
rcrb
mov
int3
mov
or
jl
insb
popf
call
dec
mov
ret
imul
scas
jp
push
push
adc
aas
mov
cmpsl
aad
cwtl
aaa
xor
loopne
inc
cmp
xchg
stos
mov
mov
lret
fwait
inc
mull
into
jbe
lret
int3
dec
add
outsb
mov
pop
mov
sti
push
dec
lcall
gs
xchg
mov
fs
ds
dec
pop
mov
adc
lret
mov
pop
loopne
aad
sub
outsb
imul
xchg
lds
mov
les
data16
jo
out
xor
jne
mov
test
enter
dec
fs
or
daa
dec
out
jg
or
cmp
dec
pop
sub
imul
dec
rcll
or
cs
fcomps
pop
pop
xchg
push
inc
mov
cmc
pop
es
inc
fsubs
shlb
cmp
pop
xor
loop
or
jne
lds
cmp
lods
pop
ljmp
test
idiv
test
insb
popa
movsl
rorb
push
pop
jnp
movsl
pop
rcr
ds
pop
mov
xor
dec
mov
xlat
bound
sbb
jp
cmc
pop
push
jno
subb
lahf
in
out
sahf
jle
out
mov
pop
js
jl
cli
test
dec
xchg
xor
jbe
pop
mov
ror
push
into
iret
loop
testl
sub
hlt
clc
movsl
cmp
je
orb
mov
loopne
test
in
dec
popf
push
cs
lds
fwait
ret
jb
jl
cmp
push
cld
scas
test
popa
lods
fucomi
cmc
into
call
jle
mov
int3
mov
fistl
clc
mov
mov
fiaddl
or
scas
or
sub
lahf
sub
ljmp
iret
mov
mov
add
xchg
mov
adc
mov
fnstenv
xchg
aam
pusha
call
pusha
and
inc
stos
das
inc
sbb
push
jg
push
stos
movsl
movb
xor
or
sbb
xchg
nop
xor
xor
sub
push
test
mov
or
xchg
inc
test
incb
frstor
pop
insl
lret
lods
inc
sub
mov
push
fcmove
sbb
iret
lods
xor
std
call
or
mov
cwtl
mov
mov
call
sarl
insb
movsb
dec
mov
xchg
fdivr
push
fldenv
xchg
arpl
push
loop
scas
inc
adc
cmp
imulb
pop
cwtl
nop
imul
xorl
cli
pushf
xlat
mov
ljmp
arpl
inc
sbb
inc
faddl
sub
cwtl
aas
rorb
mov
push
sarl
pop
out
lret
insb
leave
test
jbe
pop
jns
shlb
xchg
or
push
mov
cmpsb
pop
sub
lret
inc
aam
mov
fnstsw
dec
xchg
sub
mov
imul
loop
push
cmc
mov
les
ss
scas
xor
mov
lds
xor
int3
fs
pusha
xchg
mov
dec
scas
int
mov
add
fldenv
fimull
pop
and
adc
sub
lea
dec
loop
jmp
imul
stos
test
lret
push
arpl
push
mov
cmp
dec
mov
xor
jnp
adc
stos
or
pop
xchg
sbb
mov
xchg
and
pop
push
mov
sbb
xchg
lock
loope
mov
mov
cmc
cs
or
pop
scas
shll
push
pop
ss
add
pusha
ss
jnp
shrl
das
push
or
and
add
xchg
cmp
imul
pop
jle
rcrb
fnstenv
xchg
pop
and
loope
ss
mov
mov
inc
gs
add
pushf
aaa
ljmp
push
insl
push
inc
les
in
xchg
jo
inc
push
mov
add
leave
repnz
wrmsr
mov
push
into
dec
daa
cmp
fsubrl
xor
mov
sbb
push
push
cld
das
cmp
xchg
lock
mov
dec
cltd
lahf
xor
ds
sub
adc
add
mov
stos
je
lahf
jns
push
ja
mov
xor
bndstx
jge
sub
mov
adc
in
jno
pop
shll
cmc
pushf
fcomps
xchg
sbb
lret
pop
popa
push
jmp
inc
cwtl
jmp
imul
rorl
mov
xchg
dec
sbb
add
in
js
xor
lcall
outsl
push
mov
clc
test
add
sbb
es
imul
mov
stc
add
sub
call
pop
pushf
cli
or
adc
ss
sbb
xchg
in
lods
adc
gs
dec
jecxz
addl
sbb
mov
pushf
fwait
mov
test
jns
mov
jns
int
push
sahf
aam
ds
mov
nop
test
fcmovbe
mov
or
nop
and
data16
out
out
push
sbb
xchg
pop
jg
ret
mov
sbb
xor
jl
or
loopne
cmp
hlt
add
jne
adc
inc
cltd
pusha
in
pop
insb
adc
sti
pop
sub
call
aad
dec
xor
mov
pop
ret
fs
inc
mov
lods
mov
adc
inc
mov
je
inc
in
shrl
jp
testl
lock
shrl
inc
lahf
stos
lret
inc
icebp
xchg
sub
jnp
push
movsl
adc
ret
jmp
adc
sbb
dec
daa
dec
dec
jg
dec
imul
adc
jo
jnp
negl
scas
icebp
add
lods
sarl
fiadds
and
mov
daa
mov
and
sbb
bound
mov
push
mull
pop
cwtl
lcall
dec
data16
and
push
pop
push
xchg
mov
mov
shlb
mov
scas
mov
xlat
outsb
xchg
lods
jp
dec
cmc
mov
negb
pop
push
enter
decb
les
aam
fidivs
loopne
cmp
sbb
cmpsl
out
gs
adc
pop
imul
jge
add
js
mov
mov
pop
dec
lcall
xchg
add
and
out
and
sbb
dec
fs
test
add
or
inc
xchg
mov
pop
testb
movsl
ret
shrl
add
int
andl
mov
mov
and
mov
inc
repz
and
adc
test
adc
fisubs
sahf
stos
insb
sbb
push
cmp
nop
xchg
in
inc
mov
push
or
cs
or
int
fucom
adc
xchg
repz
ss
and
push
add
lock
mov
xor
sbb
lret
sti
sub
or
int
dec
aas
scas
movsl
in
aad
shl
jge
xchg
test
jle
mov
scas
and
ss
ret
push
sbb
je
jg
test
cmp
in
and
loop
sti
cmp
ss
repz
leave
adc
dec
sbb
xor
push
add
or
outsb
outsb
out
pusha
testl
sub
inc
lods
decl
inc
jo
inc
mov
push
loopne
out
jecxz
lock
arpl
pushf
mov
aas
lret
lahf
adc
gs
xchg
lock
pushf
dec
xchg
out
stc
cmc
outsb
arpl
ja
inc
push
fstps
dec
or
sub
dec
dec
inc
cmp
out
cmp
mov
pop
cmp
cmp
js
cli
dec
in
movhps
xchg
cs
xchg
fnsave
xor
adc
aas
shl
push
scas
stos
loop
popa
in
adc
cmp
jbe
push
push
lret
or
pushf
and
aas
push
xor
or
jmp
neg
xchg
aad
pop
hlt
cmp
pop
jnp
rorl
pop
mov
ds
push
jmp
push
jg
jb
mov
and
je
fldcw
cmc
mov
pop
aam
test
mov
or
jbe
add
stos
cmpsb
dec
roll
jne
lret
mov
and
bound
out
test
mov
cli
or
mov
mov
call
test
add
inc
jmp
loop
pop
pop
xlat
cmc
mov
pop
inc
mov
xchg
cmp
fwait
xor
js
imul
pop
sub
in
scas
jmp
stc
sbb
mov
or
and
test
cmp
jle
jnp
shrl
push
movsl
enter
jbe
or
mov
or
scas
push
or
push
ret
es
and
jle
loope
inc
fsub
in
push
cmp
aaa
push
decl
add
mov
int3
movsb
imul
in
shrl
jns
cmp
fldenv
pusha
pop
sti
fidivs
cwtl
mov
aaa
push
jne
test
stos
test
hlt
xlat
fwait
mov
mov
xchg
test
ja
mov
mov
movsl
outsl
aas
fxrstor
jecxz
cmp
cmp
xchg
mov
pop
sti
cmp
fidivrs
call
ficompl
push
or
mov
adc
adc
cli
mov
pop
sbb
inc
push
dec
mov
scas
mov
mov
and
fldenv
mov
cmpsl
jecxz
pop
jg
pop
pushf
ja
adc
test
fnsetpm(287
dec
in
std
jecxz
push
xchg
inc
dec
jl
mov
fdiv
dec
xchg
lock
sbb
lret
add
push
mov
in
fidivrs
xor
push
push
je
xor
neg
jb
test
shrl
hlt
ss
mov
insb
std
push
inc
inc
lahf
lods
int3
and
push
mov
sbb
ss
xor
and
add
sub
adc
inc
into
push
sbb
in
cmp
ficompl
nop
jp
movsb
lret
int3
fnstsw
push
mov
into
sbbl
push
lahf
stos
les
insl
dec
es
xchg
pop
stos
dec
or
push
xor
or
scas
fs
into
mov
add
mov
stos
gs
inc
ficoml
jge
lret
push
and
fmulp
mov
xor
sub
fldenv
mov
pop
or
sbb
pop
sbb
adc
stos
test
push
push
jle
andl
mov
sbb
aas
adc
mov
leave
aad
lret
mov
jge
xor
xchg
mov
popf
data16
push
and
gs
jae
aam
xor
sbb
nop
subb
mov
test
xchg
fbstp
sbb
imul
jle
pop
add
mov
loopne
cmp
and
sub
xchg
mov
cmp
push
cmp
push
sub
inc
loopne
insl
jl
mov
sbb
mov
bound
sbb
jnp
and
jb
lds
aad
leave
jmp
lret
nop
jp
inc
xor
shrl
nop
mov
mov
mov
in
push
jmp
pop
ja
jg
rolb
mov
push
dec
sub
cmpsl
inc
xor
outsb
mov
popf
shll
pop
cmp
mov
imul
scas
jl
loopne
pop
adc
inc
out
push
pushf
aaa
scas
sarl
loopne
dec
push
std
rol
xor
jbe
cwtl
iret
jp
dec
andb
mov
dec
mov
or
xchg
mov
loop
pop
sbb
in
mov
gs
repz
dec
stos
mov
dec
add
push
out
inc
ljmp
dec
cmc
xchg
lea
enter
xor
jb
jle
sub
inc
in
loope
out
fwait
jb
mov
xor
sub
int3
scas
hlt
push
adcb
loope
mov
insl
jg
adc
dec
lds
sub
ret
fsubrp
repnz
sbb
nop
lcall
jo
dec
mov
loope
xlat
idivb
pop
push
gs
xor
sub
mov
inc
idivl
pop
and
aad
cmpsl
mov
clc
and
cmpsb
cmpsl
or
repz
repz
inc
fmul
add
mov
shlb
sbb
enter
add
push
jnp
add
ss
in
mov
mov
pop
mov
push
into
cmp
adc
xor
popa
addl
and
orl
push
out
jb
cmp
fs
shll
aam
mov
sub
dec
psrad
and
rorb
jle
add
sub
lret
cmp
mov
xchg
push
out
cmp
xchg
dec
cmp
or
jge
add
xor
jae
xchg
lods
mov
out
push
aaa
scas
lock
int
in
jo
int
sbb
jecxz
push
leave
test
sub
pop
pop
rorl
push
push
test
push
inc
enter
push
lea
fsubs
pop
lahf
aas
sbb
pop
mov
movl
push
aam
and
cmpsl
inc
or
pop
inc
push
push
sub
lret
xor
in
call
sub
cltd
xor
dec
out
js
mov
addl
repnz
scas
addr16
adc
or
enter
xchg
imul
and
xor
add
cmp
pop
ljmp
out
xchg
mov
inc
arpl
add
push
in
mov
or
or
inc
iret
cmp
ljmp
add
jge
pop
stos
mov
out
lock
subb
fnstenv
clc
cmc
mov
aas
push
imul
lcall
lcall
shl
je
add
mov
dec
inc
icebp
mov
push
scas
lret
aas
aam
arpl
loop
cltd
pop
cmpsb
inc
push
cmp
aaa
or
inc
fdivrs
mov
mov
aad
jno
outsl
mov
adc
push
shl
xchg
cmpsb
push
cmpsb
rcrl
sub
sub
xchg
dec
xchg
ret
xchg
sub
repz
or
lret
adc
lods
xorl
pop
imul
sbbb
repz
mov
aaa
adcb
pushf
mov
in
std
lods
adc
pop
push
lret
and
pop
lods
mov
fldt
add
xchg
xor
enter
cmp
popa
fcoms
pop
pop
jbe
sbb
add
mov
push
and
dec
mov
scas
cmc
push
mov
clc
lea
pop
cmpsb
ljmp
imul
mov
pand
inc
call
sub
les
lea
mov
jmp
loopne
cld
outsl
jnp
scas
push
in
ljmp
cmc
fcomi
xchg
mov
sbb
mov
dec
rcll
sarb
xor
cmp
xchg
push
in
inc
mov
mov
mov
dec
ds
clc
or
dec
lds
int3
js
rcrl
xchg
and
pop
leave
fldl
dec
cmc
adc
sbb
cli
and
stos
xchg
mov
dec
andl
mov
aad
jg
adcb
daa
sahf
in
pop
and
cmp
mov
xor
jge
pop
lods
or
lds
mov
pusha
ss
push
lea
fucomp
cld
push
inc
fdivrs
mov
in
bound
idivl
leave
fwait
in
push
inc
and
sti
jbe
leave
inc
int
adc
out
inc
jno
sti
clc
jmp
cltd
inc
pop
cmpps
pusha
fucomp
jne
loopne
in
stc
sub
pop
push
sub
in
sbb
ja
xchg
pop
and
iret
fsubr
or
xor
xchg
shlb
cli
pop
int3
test
ja
enter
lcall
data16
call
add
add
push
push
addb
cmp
cmpsl
sub
pop
loope
dec
pushf
pusha
outsb
or
rorb
mov
movsb
bound
inc
cli
pop
scas
sub
sub
fwait
xor
mov
test
imul
cmc
ret
mov
jae
scas
inc
insb
xchg
push
mov
subl
cmpsb
jge
dec
pop
daa
and
add
jbe
pop
jb
mov
xchg
ret
sub
out
enter
cmpl
cmp
in
lods
cmp
xchg
test
clc
fwait
loop
xchg
and
xor
out
je
jmp
xchg
test
xor
cwtl
mov
pop
mov
int
pop
out
cmp
cmp
divl
insb
cmp
outsb
aaa
xor
ss
incl
mov
mov
rorl
push
mov
cmp
pop
mov
push
aam
in
sbb
std
or
out
dec
jmp
nop
xor
jmp
or
shr
push
pop
dec
addl
push
jbe
ljmp
fsubrl
mov
pop
mov
out
sbb
into
mov
out
adc
cld
ss
xor
xchg
cs
push
or
fs
popa
mov
data16
fstpt
mov
mov
sbb
mov
mov
fadds
push
std
fimuls
cmp
enter
adc
fmuls
mov
sbb
mov
cmpl
js
pop
mov
outsb
movsb
inc
jno
imul
fistpl
jecxz
mov
push
stos
and
fmull
inc
sub
sbb
add
aam
jecxz
mov
scas
cmp
sub
in
jecxz
sbb
jmp
aam
mov
pop
mov
xor
or
loope
sbb
ds
cmp
jno
cmpsb
sbb
mov
sarl
pusha
insl
rcrl
enter
ret
nop
xor
jecxz,pt
mov
push
and
add
cmp
testl
and
in
loope
jbe
adc
xor
xchg
cld
xor
mov
xchg
dec
xor
xor
push
xchg
imul
lock
mov
sbb
dec
mov
ljmp
jno
aaa
faddl
ficoml
and
mov
dec
jecxz
inc
push
mov
cmpsl
inc
sbb
das
insl
lock
adc
pop
insl
arpl
mov
dec
jmp
jnp
int3
outsl
addr16
sub
nop
sub
push
ficoms
movb
mov
mov
jg
dec
and
push
jge
pop
pop
mull
mov
pop
pushf
adc
cwtl
in
mov
iret
rcrl
push
int3
ljmp
mov
loop
mov
jecxz
rcl
adc
stos
cltd
pusha
in
and
mov
loopne
mov
or
cmp
sbb
outsb
adc
mov
push
sub
mov
push
scas
lret
ret
mov
push
fsub
test
negl
push
push
adc
jae
mov
xchg
adc
inc
icebp
xlat
out
movsl
js
dec
mov
fidivrs
sub
pop
sbb
jo
adc
adcb
xorb
dec
add
fisubs
xor
test
mov
xor
adc
mov
sub
frstor
repnz
scas
and
mov
sub
out
sti
ds
jmp
mov
push
aaa
or
ss
js
add
les
xchg
lock
imul
and
imul
leave
fistpl
cmp
in
es
adc
mov
and
jb
clc
repnz
push
sahf
ret
sub
pop
loope
adc
jmp
movsl
out
aas
fadds
sub
in
inc
jno
addr16
lret
dec
xor
daa
repnz
repnz
sub
jns
mov
dec
out
xchg
xor
fs
push
repz
inc
mov
fildll
push
mov
aas
cmpb
adc
clc
ss
sbb
or
jne
or
push
scas
lds
movlps
repz
aad
mov
xor
nop
setge
icebp
or
jns
cmpsl
push
jns
cmp
push
cmc
sbb
mov
ret
loop
push
scas
aad
rcl
popaw
nop
lret
ret
hlt
icebp
repz
lds
test
jnp
in
ljmp
ret
call
mov
mov
popf
mulb
sub
test
je
adcb
out
xchg
mov
ss
aad
lcall
mov
lods
stos
lods
loopne
test
push
out
std
jo
into
test
mov
fcomp
push
jne
into
daa
sqrtps
aaa
lahf
call
or
fnstsw
xchg
and
push
imul
lds
inc
inc
repz
aam
aas
inc
ljmp
mov
add
out
andl
mov
mov
add
imul
push
xor
cmpsl
repnz
jnp
in
mov
mov
lock
adc
xchg
jp
ret
sbb
lea
cmp
xchg
add
sqrtps
cli
or
cmp
mov
jnp
cmp
jmp
mov
push
not
mov
or
loop
jnp
jne
cmpb
sbb
or
fnstcw
fwait
ret
add
stc
pusha
aaa
scas
lock
xor
imul
mov
adc
add
sbb
or
dec
loopne
mov
adc
loopw
addr16
inc
dec
cmp
sub
mov
fldcw
out
lcall
cmp
xor
in
mov
lods
enter
int
repz
cmp
mov
out
cli
mov
adc
rorl
xchg
dec
daa
mov
inc
lea
in
lea
cmp
or
std
or
sbb
rol
sub
cmpsl
scas
out
inc
hlt
xlat
xchg
xor
mov
jp
inc
fistl
mov
jle
push
pop
push
add
xlat
outsb
fmul
dec
in
stc
cmc
vmovhps
xchg
lds
aad
mov
add
hlt
mov
cmp
push
stos
sahf
jae
into
push
fists
mov
pop
movsl
cmp
mov
ret
pop
inc
mov
mov
or
cmpsb
mov
fsubrs
mov
mov
loope
inc
int3
cs
mov
xchg
or
mov
jo
sbb
data16
pop
icebp
mov
xchg
push
mov
enter
fildll
dec
les
cld
sbb
iret
out
adc
movsl
mov
xchg
xor
add
cld
adc
into
int3
arpl
and
sahf
xor
jle
mov
gs
ficoms
cmc
addr16
enter
mov
and
test
pop
cmc
gs
mov
icebp
xchg
dec
mov
mov
cmp
push
mov
pop
add
ja
and
pop
cmp
adcb
inc
cmp
in
gs
push
push
cwtl
das
push
fidivl
stos
xchg
mov
das
test
adc
out
mov
and
sbb
lods
dec
jb
dec
mov
lods
push
xlat
movsb
sti
lods
pop
or
push
lds
mov
mov
clc
stos
jl
data16
dec
sbb
xchg
sbb
fwait
add
sub
cli
add
sbb
test
adc
movsl
add
push
xchg
mov
roll
xchg
or
push
jecxz
adc
push
cwtl
fwait
sbb
push
inc
and
dec
pop
push
es
std
and
sti
sbb
or
out
push
push
fucomp
inc
mov
mov
fimull
and
mov
ret
imul
mov
addr16
adc
loope
stc
and
pop
dec
jne
mov
std
and
imul
mov
movsl
insl
lods
std
push
pop
test
pop
sub
sbb
xchg
push
mov
and
mov
mov
jnp
call
or
and
test
mov
mov
xchg
mov
adc
fs
push
movsl
mov
shlb
sbb
xor
js
jne
data16
add
outsb
iret
mov
fisubrs
sub
in
sbb
aam
pop
jns
stos
mov
adc
cmp
jg
pop
mov
addl
mov
mov
or
int
out
ret
mov
inc
test
adc
xorl
rorb
sahf
test
sbb
inc
push
mov
xchg
xchg
daa
jge
jl
sub
scas
jno
cltd
je
jbe
and
sti
xchg
icebp
lret
pop
adc
sbbb
iret
mov
jge
mov
lcall
and
call
sbb
repnz
hlt
filds
inc
dec
add
daa
mov
xchg
dec
lcall
sub
mov
sub
or
adc
loop
fisubl
cmp
aas
outsb
mov
add
or
xchg
inc
pop
enter
outsl
jne
fdivs
out
push
dec
mov
mov
sub
inc
adc
cmc
cmp
aad
mov
aad
adc
enter
insl
cwtl
push
xor
xchg
mov
mov
add
repz
and
cltd
xchg
popa
insb
pop
sbb
loope
mov
sbb
int3
push
dec
push
sarb
es
add
jbe
inc
xchg
fwait
out
ret
sub
sub
xchg
sub
jg
fildll
movsl
int3
inc
scas
and
inc
imull
mov
insb
mov
mov
inc
xchg
push
ja
or
jns
outsl
stos
cmp
hlt
push
cltd
cmp
jge
aad
push
into
cmp
jae
inc
pushf
sbb
cmpsl
in
push
fimuls
movsb
jecxz
inc
pop
mov
xlat
sub
or
rclb
and
add
xor
lea
out
sti
push
xchg
mov
jge
arpl
adc
lds
popf
insb
pop
inc
scas
call
in
sahf
mov
xchg
into
les
xchg
cli
push
aam
jne
ja
sbb
mov
in
cmp
adc
fbld
and
and
out
fsts
mov
test
push
lea
adc
jbe
addr16
loopne
out
sbb
nop
mov
out
sbb
call
repnz
xchg
mov
adc
aaa
aad
push
mov
imul
push
bnd
fdivl
lods
dec
dec
cmp
cli
popf
ret
call
or
insb
xor
daa
jbe
dec
nop
stos
jae
jp
repnz
xor
push
dec
push
push
and
fimull
icebp
enter
inc
mov
jp
inc
js
cs
lret
xchg
out
sub
insl
jns
push
ret
or
jecxz
das
sub
mov
mov
popf
mov
fwait
aad
inc
mov
iret
push
jo
mov
aam
xchg
sbbb
pop
xchg
lcall
mov
addr16
mov
lods
cmp
fidivrl
or
push
push
cs
adcl
mov
xlat
adc
push
and
xor
mov
sbb
mov
sbb
mov
add
lcall
popf
push
xor
lea
or
pop
xchg
xchg
ss
cmp
leave
mov
push
cmp
push
sub
lahf
push
outsb
mov
rorl
enter
mov
adc
iret
jbe
orb
addr16
aad
sub
or
ret
rcll
cmp
push
sub
jg
jno
mov
imul
ljmp
xlat
outsb
stos
adc
inc
mov
cmp
mov
xor
out
mov
jecxz
jp
lret
ficomps
nop
daa
mov
pop
and
xchg
sub
ja
jle
jb
fwait
bound
dec
dec
pop
es
ss
cmpsl
das
sbb
rorb
cmc
mov
push
fcomps
int3
imul
pop
sub
enter
push
xlat
push
in
lret
xor
inc
push
or
orb
sbb
add
in
loopne
testb
rclb
pop
fisttpl
adc
loopne
jb
jbe
mov
ja
and
mov
test
sbb
scas
push
and
cwtl
mov
pop
ljmp
sbb
mov
in
sub
xor
and
int3
inc
mov
jb
fsubr
mov
stos
xor
mov
or
rcrb
bound
push
sub
fcmovb
adc
xor
jp
std
adc
out
or
loope
out
test
sbb
mov
scas
adc
fwait
add
or
add
mov
adc
inc
push
fistl
fdivs
leave
push
add
pusha
ss
mov
and
push
test
jbe
inc
sbb
aad
repz
inc
stos
mov
mov
push
lcall
xchg
inc
pop
lahf
icebp
sbb
sbb
mov
repz
jle
loope
sbb
cmp
fnstenv
fs
cs
and
add
repz
xor
jp
insl
sahf
jmp
es
xor
lea
in
nop
adc
orb
mov
stos
arpl
ja
bound
lret
jge
gs
enter
cltd
pop
mov
clc
add
mov
add
aaa
mov
pushf
mov
into
fistl
mov
pushf
cld
inc
mov
jne
pop
push
dec
or
jg
int
dec
inc
push
cld
xchg
push
dec
les
ljmp
ja
xchg
mov
daa
push
mov
call
or
pop
icebp
scas
cld
mov
cs
dec
out
int3
outsl
lock
in
xchg
jbe
dec
and
xchg
in
scas
inc
push
cltd
cld
pop
ficomps
sub
mov
cmp
bnd
das
popf
lods
pusha
insl
mov
clc
cmpl
inc
sub
scas
cmp
je
lods
push
testb
mov
sti
loop
subb
in
jbe
adc
xor
ret
daa
or
popa
mov
and
jne
hlt
jge
jmp
jmp
in
sub
xor
adc
mov
fidivs
inc
jmp
mov
aas
loop
and
or
xor
pop
cli
scas
push
rorb
add
jmp
mov
cli
scas
adc
push
inc
int3
mov
imul
jmp
sahf
ss
adc
fimull
sarb
loopne
subb
inc
xchg
push
in
shlb
cwtl
jbe
in
cmpsb
test
int3
mov
sahf
xchg
sub
scas
es
clc
or
addr16
movsl
cmp
test
inc
into
push
shlb
enter
test
sub
in
ret
les
lea
and
adc
imul
imul
mov
in
mov
and
inc
cwtl
xchg
dec
cmp
out
subb
cmp
jg
cwtl
pushf
insb
dec
in
lea
aaa
xorl
js
dec
roll
mov
cmp
xchg
pop
lock
into
pop
jns
subb
imul
push
es
xchg
push
mov
in
in
cmpxchg
ljmp
int3
cmpsb
mov
mov
aam
sub
jg
dec
es
jl
inc
out
fwait
shll
push
pop
loop
mov
lock
pop
pop
int3
inc
xor
or
xchg
or
out
stc
xor
loopne
mov
adc
mov
jne
in
xorl
xchg
mov
jg
mov
dec
dec
ljmp
stos
mov
pop
test
pop
icebp
jmp
movsb
out
call
stos
or
and
add
mov
pop
xchg
rcrb
add
les
jl
add
sbb
mov
pop
cmp
and
or
orb
andl
stos
xchg
insl
pop
mov
in
rcrl
fwait
or
cmp
xchg
rcrb
push
loop
sbb
mov
repnz
lcall
sahf
mul
popa
dec
or
sub
addr16
or
cmp
ret
stos
mov
xchg
xorb
sbb
adc
inc
cmp
mov
clc
pop
sub
xchg
inc
out
outsl
rclb
jmp
in
pop
lds
xchg
pop
sbb
fiadds
leave
jnp
mov
xor
shl
movsb
cmp
fdivrl
hlt
adc
in
popa
movb
pop
push
lods
add
mov
icebp
insb
add
dec
xor
jecxz
loopne
jo
fwait
scas
sub
aam
pop
scas
sbb
test
inc
fs
pushf
and
mov
lods
out
cmpb
xor
inc
inc
inc
fwait
add
imul
int
pop
push
popf
jle
sarl
push
and
pop
pop
cmpsb
dec
xchg
add
fwait
lcall
adc
outsb
sub
je
adc
jle
insb
mov
mov
scas
lods
stos
je
ljmp
inc
sub
mov
mov
push
sub
push
add
add
fbstp
idivl
sti
cmpsb
inc
jno
ja
push
ror
fs
mov
or
jmp
jnp
fnsave
popf
dec
sbb
cmpsl
in
cmpl
sub
inc
pop
xor
mov
mov
jo
sub
or
dec
mov
jge
cmpl
jne
cmp
ret
mov
pop
andb
mov
dec
dec
daa
jl
leave
cmp
mov
and
cmp
sbb
insl
jmp
notl
or
xchg
jecxz
inc
push
lret
sbb
movsl
xchg
aaa
jle
ret
sbb
mov
outsb
and
xchg
cmp
xchg
or
subb
cmp
shrl
aam
std
pop
clc
mov
mov
jae
jge
mov
sti
xor
add
xchg
test
mov
aad
add
xor
loopne,pn
dec
sbb
fs
into
mov
out
and
add
dec
cltd
xorl
test
dec
icebp
cmp
or
arpl
popf
push
inc
mov
lret
jb
pop
jmp
inc
mov
movsb
add
xchg
negb
repz
imul
mov
jmp
rcll
mov
fcomp
xor
inc
push
or
mov
sbb
dec
repz
fwait
cmp
das
sbb
mov
add
cmp
frstor
sbb
jle
cmp
push
test
lahf
mov
btc
movsb
out
dec
daa
mov
cs
mov
fstps
call
int3
outsb
adc
jle
xor
outsb
mov
jl
mov
mov
add
mov
inc
inc
cmp
cwtl
inc
mov
sub
popa
ss
push
test
mov
sbb
pop
mov
shrb
lds
stos
ss
lock
mov
pushf
sbb
loopne
adc
xor
cmp
inc
cmp
das
int3
pop
dec
inc
roll
push
pop
loopne
into
and
mov
push
and
mov
add
popf
pusha
sti
mov
dec
cmp
cmp
add
add
cli
pop
shr
ret
repnz
and
xchg
dec
xor
test
inc
idivb
mov
ja
aaa
dec
gs
mov
movl
fsubl
in
mov
inc
xor
jl
xor
cmp
xchg
sahf
mov
or
pushf
cmp
sbbb
jl
inc
pop
sub
lahf
nop
repnz
mov
sub
pusha
pop
out
sub
test
dec
jbe
jge
add
outsl
pop
aas
xchg
sti
jg
jg
jge
xor
fisubl
mov
mov
pusha
adc
in
das
cmp
jns
repnz
add
inc
jbe
dec
cwtl
mov
push
push
loopne
out
andl
jns
inc
mov
pop
imul
mov
cmpl
pop
or
dec
jge
inc
insl
mov
jl
fnstenv
sub
pushl
loopne
push
hlt
repnz
lret
hlt
mov
scas
pop
pushl
mov
and
imull
lods
dec
nop
lds
lds
int
inc
insl
ds
inc
sbb
add
aaa
and
sahf
popa
shll
jge
fwait
mov
lcall
cwtl
lods
and
xchg
cs
push
xchg
sbb
es
inc
dec
mov
sbb
pop
xchg
mov
mov
mov
push
repnz
adc
cmp
flds
fidivl
cli
subl
sbbl
cli
rorl
cmpsb
dec
jno
jg
movsl
subb
mov
mov
pop
sahf
addr16
pop
ja
ret
mov
sub
mov
sbb
lods
xchg
jns
call
mov
push
bound
int
or
outsb
es
stos
into
sbb
pop
lea
mov
add
mov
andb
cmpsb
in
mov
in
sub
xchg
adcl
cli
cltd
fnstsw
sahf
dec
js
cwtl
and
and
les
sbbl
cmp
js
or
or
push
xor
mov
inc
push
mov
scas
sbb
mov
xlat
mov
cs
mov
nop
gs
movsl
gs
push
lock
aam
lcall
scas
in
addr16
aas
stos
int
push
out
push
lock
inc
xchg
adc
inc
adc
dec
jno
sub
lcall
sti
int3
push
cmc
xchg
pop
push
dec
dec
mov
push
dec
fisttps
sbb
ds
data16
pop
stos
lods
in
push
in
inc
dec
lods
jle
jae
dec
push
das
lcall
pop
pusha
lcall
xorl
mov
in
mov
mov
xchg
fcomps
insb
lods
xchg
jle
lods
jnp
sbb
dec
leave
movsb
jne
call
test
mov
mov
sbb
insb
mov
jl
das
pop
cmpsb
aad
mov
stos
xor
fcoms
fistpl
in
sub
cmp
jmp
push
and
mov
stc
pcmpgtb
lahf
cltd
subl
ret
es
hlt
or
incb
movsb
repz
dec
pop
shl
jge
sbb
cmp
lds
ficompl
ss
jg
sub
inc
rcrb
sbb
mov
lods
testb
sbb
aam
fnstcw
adc
xor
nop
sbb
mov
push
sub
daa
push
repnz
dec
sub
jge
cmp
mov
xor
aaa
mov
fidivs
jge
jmp
aam
sarb
mov
sbb
cmpb
cmp
ret
popa
mov
aaa
inc
adc
lret
loope
gs
loop
pop
mov
cs
sbb
inc
arpl
jo
mull
pop
clc
iret
je
inc
and
xor
inc
xlat
fidivrl
nop
push
mov
mov
pop
pop
fidivl
inc
fsubrs
sub
js
cmc
mov
lock
jmp
fdivs
outsl
jno
mov
nop
arpl
push
sbb
notb
mov
je
xchg
dec
aas
pop
fidivs
jnp
push
cs
xchg
xchg
lea
frstor
xchg
sub
aaa
fnstenv
xlat
icebp
mov
push
shrl
stos
sbb
lret
test
das
xor
adc
jecxz
inc
sbb
or
push
cmpsb
in
cmp
aam
xor
lock
xor
aaa
scas
out
adc
inc
pusha
adc
ljmp
sahf
pop
aam
lcall
push
cmp
mov
mov
adc
dec
and
negb
fbstp
add
in
adc
clc
test
mov
cmpb
or
jae
mov
hlt
sub
mov
loopne
enter
and
adcb
fsubrs
in
int
jle
dec
jmp
mov
mov
nop
adc
mov
jno
cli
sub
mov
sbb
aad
mov
shrb
mov
xchg
pop
pop
mov
sbb
xor
add
mov
nop
and
inc
mov
jo
mov
lds
adc
mov
push
out
adc
adcb
out
es
sbbb
mov
push
push
jae
inc
insl
mov
xchg
in
nop
mov
cmpb
das
inc
notb
jb
shrl
adc
repnz
push
insl
inc
xchg
lcall
mov
jmp
and
mov
ret
and
jmp
pusha
lret
cmp
mov
test
mov
repz
adc
push
pop
push
pop
fcoml
lahf
pop
in
push
xchg
sub
pop
call
add
cmp
mov
and
push
mov
xchg
lods
pop
stc
sahf
outsl
mov
imul
call
mov
dec
add
aas
stc
and
sbb
outsl
shll
out
mov
xchg
into
jbe
add
icebp
repz
xchg
dec
daa
mov
sub
je
or
aas
aam
scas
pop
ret
pop
jmp
jge
xor
or
cmp
stc
push
stc
aad
sbb
jnp
insl
movsb
popf
and
decl
push
inc
and
stc
mov
imul
inc
inc
outsl
repnz
icebp
add
adc
insb
jg
xchg
xor
sub
lods
pop
loopne
cwtl
dec
out
add
mov
dec
and
out
das
jb
aas
pop
mov
push
cmc
outsl
int
mov
nop
ds
add
out
cmpsl
sbb
pop
or
hlt
and
and
xorl
sar
in
rorl
loop
rorl
in
sub
gs
sahf
sub
ficompl
xrelease
pop
and
sbb
mov
adc
insl
inc
dec
mov
jmp
add
and
loopne
bound
ja
mov
pop
and
push
jmp
adc
test
xor
fmull
mov
std
mov
and
gs
cld
mov
test
xlat
fdecstp
test
or
fcomp
xor
adc
outsl
jnp
xchg
cs
fs
push
popa
mov
cmpl
lahf
sbb
popf
cmp
jns
jle
and
jo
sub
inc
pusha
mov
test
and
sub
xor
jae
fiadds
or
pushf
test
sub
cmc
sub
stos
stos
call
pop
hlt
mov
jnp
fcompl
shrb
jge
shlb
pop
scas
pusha
enter
sahf
jbe
push
mov
fstpl
pop
bt
lock
sub
out
dec
arpl
push
mov
pop
xchg
mov
xchg
imul
cli
ja
ljmp
add
imul
shll
pop
xor
std
cmp
jp
pusha
mull
leave
jle
loopne
mov
enter
lea
nop
pop
push
sbb
cld
inc
jo
sub
mov
and
cltd
imul
scas
sbb
dec
jecxz
shl
outsl
push
push
cmp
scas
cwtl
jmp
int3
cmp
fimuls
xor
test
repz
mov
popa
subl
pop
pop
mov
popa
jg
imul
or
leave
add
dec
mov
fidivrs
fstpt
out
rcl
mov
gs
out
mov
pushf
adc
std
inc
mov
inc
jns
add
or
sbb
mov
shrl
insl
adc
jne
ss
icebp
mov
test
int3
test
jl
jne
push
mov
ss
push
pop
add
xchg
add
test
and
or
lret
lea
inc
movsl
scas
push
in
jmp
xorl
mov
fs
rorl
mov
pushl
xchg
pop
cmp
test
repz
imul
das
push
push
pushl
xor
bound
dec
and
push
or
mov
nopl
pushf
imul
test
cmpsb
xchg
sub
mov
outsl
push
pushf
ss
xor
sbb
enter
cmp
jmp
mov
data16
dec
inc
mov
jno
stc
cmpsb
push
mov
dec
xchg
xor
cld
fisttps
leave
cmpl
enter
sub
lahf
mov
cmp
add
xor
and
mov
inc
ljmp
inc
ret
jb
call
xchg
xchg
push
sbbb
mov
ficompl
int
lahf
dec
fmul
pop
cwtl
out
lods
inc
les
fdivp
mov
dec
jnp
icebp
inc
scas
fisttpll
mov
adc
push
xor
fs
in
daa
mov
inc
mov
jg
enter
aad
dec
clc
jne
sub
lcall
movsl
icebp
rclb
cmp
mov
daa
push
aas
scas
cmp
das
movb
dec
in
stos
jno
aam
imul
mov
xchg
sarb
push
in
ret
cli
cwtl
fisubs
out
ret
push
lods
xchg
ss
add
xchg
lods
mov
mov
xlat
insl
cs
xchg
push
mov
add
jae
add
icebp
mov
inc
repz
sub
bound
popa
jecxz
pop
add
mov
cli
rorb
pop
stos
stc
stc
inc
mov
or
aad
ret
daa
js
dec
in
repz
add
mov
lods
cmp
pop
push
xrelease
jns
mov
dec
popa
jnp
pushf
call
sarb
adc
mov
aad
inc
nop
sbb
xchg
jg
fdivl
pushf
fsubrp
mov
into
xor
sti
cmp
jo
sbb
inc
repnz
xchg
push
sahf
adc
int
jmp
movsl
in
cli
xchg
xchg
cmp
xorl
adc
xchg
push
out
jge
das
scas
subb
enter
pop
xchg
mov
mov
test
mov
in
adcl
inc
jl
icebp
insb
adc
jle
test
popf
nop
loopne
out
out
cmpsb
mov
ret
sub
mov
shll
cmc
ret
inc
sbb
push
lds
jb
in
xchg
addr16
adc
xchg
xor
adc
mov
daa
or
cmpsl
stos
inc
jmp
pop
movsb
inc
xchg
jno
push
stos
sti
push
movsl
sub
xchg
and
sarl
mov
and
sbb
std
sbb
stos
popa
lahf
push
es
add
cltd
inc
fcmovne
jno
scas
jo
bound
fldl
mov
test
les
leave
out
test
loopne
xchg
mov
bound
cltd
xor
add
mov
jb
mov
push
add
lahf
mov
or
out
hlt
nop
test
adc
jecxz
ss
pusha
clc
sbb
adc
sub
adc
or
into
jno
xlat
into
fdiv
mov
xchg
arpl
adc
mov
adc
xchg
pop
xchg
adc
add
dec
mov
pushl
mov
inc
push
mov
add
mov
nop
daa
xor
lea
inc
mov
mov
xchg
in
bound
lea
mov
cltd
adc
or
pop
fsubp
xchg
sub
incl
push
adc
rcrb
lahf
scas
inc
inc
repz
cmpsb
shlb
fsub
test
cmp
into
pop
sub
push
loope,pt
fcmovnb
and
xchg
cwtl
leave
fistpl
sbb
adc
mov
cltd
arpl
sub
test
sub
arpl
inc
or
div
lods
mov
dec
dec
xchg
sbb
push
mov
cmc
fsts
outsl
lret
pop
adc
or
aas
push
push
inc
or
mov
xchg
pop
aam
iret
arpl
mov
sub
sub
je
xor
cld
scas
add
sub
jmp
test
pop
and
mov
push
in
pop
pop
xor
jmp
mov
mulb
enter
pop
adcl
shl
dec
jnp
mov
ds
les
xor
lahf
cmc
scas
rol
and
push
mulb
in
add
xchg
inc
jge
inc
aas
jno
push
and
sub
jbe
shrl
add
mov
pop
ret
repz
js
fmulp
push
adc
pop
in
js
xor
xor
daa
mov
adc
mov
mov
mov
fwait
das
and
dec
fs
rcrl
push
sub
add
xor
rorl
mov
es
xchg
dec
aad
mov
inc
dec
pop
xor
adc
ss
dec
sbbl
push
xchg
fisubrs
dec
jno
popa
cmp
mov
sarl
repnz
subl
jns
jnp
sub
dec
or
or
repnz
jo
adc
incl
mov
pop
test
mov
loope
pop
inc
psubusw
leave
shll
sysret
dec
popa
dec
bound
xorb
mov
jl
sbb
mov
push
lods
mov
pop
sbbl
outsl
pusha
stos
xchg
push
mov
dec
inc
adc
mov
sub
outsb
lret
repnz
jecxz
rcr
and
mov
xchg
outsb
add
mov
lea
stos
push
jg
cmp
push
mov
add
push
clc
inc
scas
push
push
fxch
aaa
jo
mov
roll
mov
dec
aam
fidivs
push
test
mov
mov
icebp
inc
add
mov
push
fdivrl
cmp
inc
jmp
test
push
fcompl
outsl
pusha
icebp
fucomip
repnz
insb
lar
and
pop
ljmp
cmp
or
pop
das
rolb
movsb
and
aas
dec
lcall
sub
out
lretw
fidivs
jnp
mov
dec
mov
mov
sub
cmp
cld
xchg
dec
mov
jl
cwtl
je
pop
mov
and
cs
insb
js
mov
notl
shrl
xchg
dec
loop
mov
jmp
and
aas
dec
stos
pop
jmp
jl
inc
hlt
inc
jae
mov
sti
push
adc
sub
inc
fcoml
popa
mov
jge
or
into
cmp
push
aaa
pop
pop
pop
mov
cmp
sub
sub
fadds
mov
push
push
xlat
outsb
xchg
pop
pop
push
cmc
xchg
pop
mov
jns
rcrb
mov
jmp
cltd
push
pop
ss
mov
out
or
movsl
icebp
cmp
ss
cmpsl
loopne
mov
shrb
int
xor
ficoms
mov
pop
sbb
pop
je
mov
xchg
mov
leave
cmpsb
in
jp
insl
shrl
push
xchg
sub
out
test
cmpsb
or
xlat
leave
mov
mov
lahf
pop
xor
inc
jp
inc
dec
bound
das
je
pop
adc
add
dec
mov
dec
and
or
mov
ret
or
mov
or
xor
in
inc
call
inc
xor
mov
pop
mov
in
fsubrs
jno
lods
ret
mov
cltd
out
imul
mov
dec
lret
push
addr16
sub
mov
hlt
push
push
scas
inc
cmp
int
xchg
sbb
cltd
cmp
xchg
jno
push
dec
xlat
lods
inc
daa
fstpt
pop
cld
aas
dec
cs
enter
movsb
inc
inc
xchg
popf
xor
int
dec
js
mov
mov
in
dec
ret
jnp
andl
lret
repz
jb
mov
scas
ds
pop
data16
mov
clc
insl
xchg
cld
mov
or
aas
mov
popa
inc
fnstenv
decb
test
ret
xor
call
stos
inc
dec
fdivs
jb
mov
xorl
mov
iret
push
test
inc
add
jp
test
mov
gs
cs
shlb
mov
and
neg
js
mov
or
sbbl
push
sub
stos
jecxz
cld
lcall
dec
dec
clc
testb
jecxz
addr16
add
clc
jl
ss
dec
inc
jg
in
shll
jl
sub
inc
inc
mov
add
push
inc
xchg
and
push
ljmp
jle
add
push
scas
outsl
jb
into
dec
dec
pop
dec
out
xchg
incl
sub
mov
sti
jbe
jmp
aad
les
jl
vpminsb
add
jb
pop
cmpsb
and
iret
sub
dec
cmp
xchg
andl
in
aas
xlat
mov
jnp
testb
xchg
and
xor
adc
leave
jno
sti
inc
or
or
push
in
sub
int
jle
cmp
cmpsb
dec
xlat
push
pop
rclb
mov
fwait
add
rcrb
sbb
jbe
popa
dec
testb
loop
cmp
sub
mov
pop
jbe
ret
cmp
cltd
cmp
inc
imul
dec
out
or
xor
scas
in
test
adc
mulb
mov
nop
daa
popa
sub
sub
scas
int3
fwait
dec
or
aad
or
mov
mov
push
fwait
add
and
fidivrl
fiaddl
xchg
out
cmpsl
hlt
test
push
in
xchg
in
enter
into
ficoms
add
xlat
mov
pop
and
test
sbb
mov
lahf
mov
lock
jns
stc
rcll
inc
sbb
popf
test
mov
faddp
icebp
mov
inc
pop
cmp
aas
xchg
jmp
dec
mov
jge
push
scas
outsb
nop
sbb
aaa
sbb
jecxz
adc
xor
inc
mov
fwait
cmp
fbld
jge
clc
xchg
int3
lcall
mov
jmp
fistl
outsl
test
and
aam
inc
fsubr
cmc
mov
icebp
imul
adc
push
push
push
in
test
outsl
mov
in
fs
mov
fs
fsubrl
mov
lods
lds
jle
repnz
stc
jo
shl
cmpsb
pop
hlt
imull
pop
xchg
jnp
mov
inc
and
mov
fildl
sbb
enter
fsts
arpl
outsw
adcl
call
xchg
icebp
mov
jno
aaa
scas
bound
repz
leave
rcl
aad
add
mov
repz
push
mov
xchg
jmp
push
push
call
sbb
dec
mov
adc
cmp
adc
jge
mov
mov
cs
mov
nop
push
sahf
mov
sti
or
lahf
mov
mov
ja
mov
sub
vhaddpd
sti
mov
shll
js
mov
ss
and
pop
mov
cmp
dec
bound
jns
lcall
xchg
sbbl
xchg
or
cmpsb
dec
mov
cmpsb
sti
fistpll
popf
lods
stos
scas
in
fisttpl
imul
or
cmpsb
mov
test
mov
inc
fisubrs
cltd
adc
fsts
cmc
dec
es
mov
nop
mov
ret
addr16
insb
movsb
jecxz
inc
jne
jmp
inc
mov
rolb
push
add
sti
fwait
in
sbb
rorb
rorb
push
in
sub
mov
add
shlb
xor
pop
ret
mov
mov
inc
lods
nop
and
mov
idivl
test
loope
or
or
test
jae
adc
stos
inc
push
sub
xchg
or
in
sbb
mov
mov
test
cld
xor
adc
sti
fwait
rcrl
xchg
push
movsb
mov
lods
cmpsb
adc
mov
mov
fcompl
pop
shll
icebp
shrb
popa
das
dec
lock
pop
cli
int
repz
icebp
movsb
xchg
in
aad
xchg
sub
xchg
cs
inc
mov
adc
iret
ss
aaa
or
xorb
pop
cmp
and
jnp
mov
xor
pop
lods
loop
pop
fcompl
add
dec
rolb
daa
mov
push
inc
sbb
mov
out
cltd
das
xchg
and
and
icebp
movaps
loopne
cltd
jns
fnstsw
jmp
mov
lods
sub
int
arpl
subl
rolb
or
xchg
outsl
enter
jmp
call
xor
sbb
xor
lret
cwtl
xchg
push
cli
test
stos
popf
lcall
mov
test
jl
pusha
lcall
movups
test
sbb
mov
stos
inc
xor
arpl
pop
xchg
jb,pt
and
es
insb
sub
stos
das
fsubs
sarl
ds
jge
cmp
push
fcmovu
push
fstl
mov
add
xchg
or
or
dec
popa
pop
xor
and
sub
xchg
sub
andl
pop
scas
sub
in
inc
push
mov
sbb
add
mov
cmp
iret
xchg
mov
sub
mov
fidivrs
in
fsubl
xchg
or
ja
pop
negb
push
jg
xchg
jge
push
lcall
and
jecxz
shrl
or
jg
test
push
adc
out
hlt
jp
or
pop
jp
aaa
cmp
repnz
jno
clc
mov
gs
sbb
ja
ret
lods
inc
cmc
out
xchg
in
push
rcrb
inc
rolb
enter
scas
jmp
fsts
cmp
adc
lret
and
nop
pop
movsl
in
fwait
jns
scas
stos
call
lods
inc
inc
or
leave
mov
flds
dec
cltd
sub
xor
jge
mov
mov
andl
cmp
jno
pop
fistpl
inc
dec
idivb
fists
xor
cwtl
inc
popa
mov
stos
dec
enter
mov
mov
adc
pop
pop
jae
sbb
popa
lret
mov
pushf
xor
mov
lahf
mov
sahf
and
pop
ret
ret
jnp
stos
jmp
dec
outsb
scas
inc
mov
xchg
dec
cmpsb
push
sub
sbb
cli
test
orb
pusha
sti
xchg
xchg
fnsave
mov
jmp
push
popf
sti
inc
dec
hlt
xor
test
outsl
mov
out
mov
or
pop
jmp
mov
jae
ffree
or
and
and
aam
out
clc
and
rcr
gs
and
pop
insb
add
sub
in
mov
jb
and
lcall
mov
enter
mov
movsl
inc
xchg
lea
and
mov
inc
jl
cld
mov
sub
mov
mov
fistpll
mov
jno
adc
xchg
scas
xorl
aam
pushf
idivl
push
jle
xchg
scas
loop
inc
sub
cmp
push
inc
xchg
inc
push
mov
cli
ror
shlb
adc
popf
pushf
xor
std
pop
sahf
cmpsb
add
dec
stc
mov
pop
in
push
shrb
xchg
iret
sets
loop
adc
jl
gs
rcrl
mov
clc
mov
sbb
jns
je
xor
int3
loope
sti
mov
les
jbe
lds
dec
pop
fnstenv
mov
cmpsl
inc
or
dec
imul
xchg
dec
push
imul
rcrl
mov
outsb
rcrb
or
push
or
test
imul
repnz
pop
jge
iret
mov
iret
push
sub
mov
repz
xor
stc
pushf
cmp
pop
pop
shl
cmp
shrl
out
xchg
jecxz
hlt
or
push
add
pop
ja
push
xor
imul
add
nop
mov
mov
rcr
lret
jb
adc
sbb
jle
int
jl
lret
popf
inc
pushf
inc
cmpsl
adc
lods
xchg
or
lret
addr16
cmpsb
adc
pop
lock
dec
ret
hlt
insl
loopne
lahf
add
add
dec
xlat
cltd
jae
rolb
inc
int3
push
push
aas
lock
sub
inc
lods
jns
repz
and
xchg
or
mov
fwait
add
shrb
xchg
pusha
shlb
gs
xor
push
inc
push
ss
push
fimuls
sbb
lret
lahf
dec
or
jnp
sub
popf
pop
inc
ret
jo
jle
inc
mov
data16
jnp
lcall
and
roll
cmp
dec
daa
or
lahf
add
adc
pusha
jno,pt
push
jmp
push
add
repz
mov
test
or
fdivrl
sub
lcall
fs
adc
jae
out
insb
add
out
cmp
adc
xchg
incb
mov
cld
rcrl
push
fsubrl
push
pop
cs
dec
test
inc
push
mov
push
hlt
inc
push
push
and
in
inc
push
pop
push
mov
lods
and
adc
jle
out
push
popf
and
dec
push
jns
sub
sahf
je
shl
add
push
ds
dec
loop
pushf
add
je
fcoms
add
out
pusha
cmp
repz
push
daa
sbbl
fistpll
lods
add
cmp
fmuls
stos
pop
neg
adc
out
ret
cld
mov
inc
mov
cld
push
fldenv
jbe
pop
gs
and
inc
push
repz
int3
out
jne
push
xor
cmpb
arpl
and
push
jb
xchg
cpuid
push
push
mov
inc
pop
jmp
fcomi
sbb
jp
and
dec
mov
cmp
adc
dec
fcmovne
fmull
dec
lahf
sub
adc
push
movsb
outsl
loope
iret
int
cld
fwait
mov
repnz
sub
jns
shrl
jno
dec
push
mov
fsub
jge
xor
and
pop
scas
adc
cmpsl
rol
pop
fs
mov
pop
icebp
dec
adc
mov
adc
or
or
sti
aam
mov
test
test
pop
jno
aaa
jl
or
mov
push
stc
push
adc
or
inc
mov
subl
sbb
pop
mov
cmp
rcr
repnz
cmp
xor
lds
loope
cmpsl
call
mov
lock
xchg
xchg
xor
dec
add
mov
test
pop
negl
pop
movsl
loope
gs
add
shlb
loopne
into
pop
sub
pop
cld
inc
in
mov
stos
inc
idivl
sbb
out
dec
pushf
jb
dec
jmp
inc
pushf
icebp
sahf
loopne
enter
loope
mov
faddp
push
adc
bound
les
or
sti
push
xlat
rcll
les
lods
mov
aam
aad
mov
notb
sub
sbbl
mov
inc
and
popa
push
test
in
xchg
negl
sbb
pop
jg
test
jl
push
scas
jmp
xor
push
and
pop
out
adc
repz
jne
scas
mov
xor
js
in
hlt
dec
fbstp
cwtl
sub
inc
pop
mov
pop
shlb
dec
add
jmp
or
jnp
jle
or
test
hlt
xchg
sub
inc
mov
jmp
lods
add
or
mov
and
leave
jno
or
xchg
hlt
sbb
jb
cmp
stos
stos
cmpsl
js
xor
data16
sub
les
inc
andl
sub
in
popa
cli
aaa
clc
mov
sub
add
cld
add
cmp
insb
test
cmp
popf
lea
arpl
lcall
dec
les
add
xchg
test
popf
xor
icebp
fnsave
pop
fwait
leave
lahf
int3
jl
enter
sahf
pop
pop
dec
sub
jmp
outsl
jb
scas
aaa
push
xlat
mov
or
mov
jmp
int
out
cmp
loope
xor
push
test
pop
mov
fnstcw
mov
fisubrl
orl
mov
mov
fiadds
and
lods
mov
pop
scas
xchg
js
jmp
movsl
imul
mov
jnp
inc
pusha
movsl
sarl
inc
dec
pop
mov
enter
mov
push
jnp
es
pop
mov
andb
pusha
sahf
es
jg
sbb
cmp
xchg
lods
cmp
mov
inc
sbb
leave
pusha
dec
test
push
jns
insb
and
rorl
arpl
pop
call
and
lock
pop
sbb
or
es
stos
rorb
mov
shll
cli
lcall
in
sbbl
push
push
rorb
bnd
sub
sbb
clc
cltd
mov
xchg
push
daa
xchg
and
sbb
shlb
ss
arpl
adc
and
mov
clc
or
sti
aam
movsl
cmp
mov
repnz
fsubrp
stc
and
mov
jmp
cmpsl
adc
or
pushf
xor
push
leave
in
loop
sbb
push
cmc
mov
int
xchg
cmp
sti
loop
lret
mov
ljmp
pop
mov
dec
bound
outsl
sti
or
jge
es
aas
dec
lcall
mov
fmulp
cmpsl
and
jge
xor
adc
sti
xchg
int3
gs
aas
lods
mov
add
jbe
nop
dec
popf
mov
jb
enter
add
pop
mov
lods
in
pushf
scas
into
or
push
and
mov
lods
xor
add
decb
outsb
aaa
adc
push
sbb
insb
inc
jp
leave
shl
shlb
cmc
dec
xchg
scas
sbb
jg
bound
daa
pop
adc
stos
arpl
mov
aam
push
mov
aas
lods
sbb
adc
pop
or
sub
andl
dec
mov
outsl
and
out
cmpb
inc
add
aam
and
xchg
lahf
cmpsb
xor
es
inc
or
and
fs
test
call
stos
jg
inc
fldt
sbb
xchg
ds
enter
jp
mov
aas
stos
and
add
jae
lahf
mov
sbb
xchg
ja
std
aam
xchg
xor
outsb
insl
add
mov
push
jns
pop
push
jb
jbe
enter
jns
popa
jo
sub
xchg
cmpsl
out
push
mov
mov
inc
mov
xchg
jo
insl
ficoms
jb
dec
cmp
stos
call
or
sub
nop
ret
shll
in
lcall
loop
aad
cmp
mov
xchg
cmpsb
shl
xchg
xor
ds
or
xchg
int3
push
pop
mov
jo
or
lcall
mov
xor
xchg
lods
stos
out
xorb
stos
mov
test
sub
push
jp
or
lret
pop
mov
and
insb
aad
add
stos
jnp
orb
jmp
in
lock
sub
in
mov
sub
add
call
or
sub
add
mov
xor
mov
push
lock
ja
test
int
dec
shrl
imul
repnz
lahf
imul
insb
lock
and
mov
mov
fildl
push
xchg
cmp
ss
ftst
xchg
sbb
sahf
cmp
xchg
jecxz
pop
out
jne
xchg
lods
add
std
or
mov
sti
inc
sbb
repnz
movsb
push
fstpl
mov
dec
jae
push
jo
push
loope
adc
out
mov
adc
or
jmp
cld
xchg
and
clc
sub
lret
test
mov
or
lahf
fistpl
or
jbe
inc
and
shl
or
sbb
sbb
in
and
jb
mov
std
pop
stc
or
aaa
mov
push
xor
add
push
sarl
cmp
adc
pusha
mov
mov
dec
sbb
gs
adc
mov
adc
xchg
sbb
aas
cmp
shrb
fsts
scas
movsb
cmp
inc
mov
dec
pusha
mov
dec
stc
fsubr
popa
sbb
push
mov
bound
loope
cld
xor
and
ffreep
inc
mov
cmp
sbb
adc
in
addl
repnz
popf
aam
and
xchg
out
mov
imul
pop
mull
iret
das
fs
jae
pop
jle
popf
lods
mov
adc
std
mov
jnp
xchg
and
cmpsb
out
clc
or
lret
sub
movsb
daa
aam
pop
lds
mov
mov
or
loop
out
jmp
xchg
cmp
mov
pop
mov
cmp
cwtl
sub
inc
push
sub
test
into
gs
push
dec
in
stc
icebp
fisubs
jp
push
out
arpl
mov
push
popa
popf
pushf
or
hlt
fldl
mov
cld
les
push
push
mov
movsb
gs
dec
fstps
leave
pop
cmp
pop
xor
mov
and
imul
cmpsl
pop
ss
mov
mov
les
mov
pushf
mov
jl
inc
pop
dec
mov
jle
dec
pop
fildll
scas
fsubrs
jge
mov
cmp
sub
pushf
add
mov
jge
cmp
mov
inc
push
inc
mov
je
push
roll
iret
push
or
gs
push
das
pusha
mov
sub
movsl
mov
push
or
pop
adc
dec
push
mov
sub
rol
pop
push
cmp
repz
lods
mov
xchg
pusha
push
fstpl
xor
pusha
sub
sti
mov
in
sti
push
movsb
add
or
aas
setl
inc
sbb
jge
mov
add
sti
lods
push
je
sbb
jle
mov
rep
fidivrl
or
pop
sti
stc
xchg
adcb
cli
fadds
add
xchg
imul
stos
lea
test
push
negl
daa
enter
dec
jge
dec
and
popf
shll
or
pop
dec
sub
ja
xchg
mov
jecxz
bound
adc
scas
sbbl
repnz
lods
sahf
pushf
les
mov
loopne
inc
add
std
mov
insl
cmc
call
xor
pop
inc
mov
enter
out
inc
push
outsb
je
les
imul
jae
aaa
xor
cmpsl
push
add
cmp
push
sbb
rcl
movsl
int
sbbl
mov
mov
jecxz
sbb
loope
cmp
into
jl
js
sbb
lahf
fwait
jb
imul
xchg
push
nop
sbb
addl
jp
mov
xchg
jne
rorb
outsb
cmc
xchg
mov
xor
mov
repnz
cmp
popf
bound
xchg
sbb
push
lock
hlt
mov
push
jmp
call
testl
pop
lods
pop
xorb
and
sarl
ret
addl
inc
mov
loopne
sbb
xchg
cmpsb
or
sti
cmp
and
inc
mov
mov
test
mov
pop
jge
dec
scas
lds
subl
je
rorl
xor
push
addl
lds
mov
xchg
gs
mov
adc
cmp
jbe
jns
or
mov
scas
andl
arpl
pop
in
iret
ret
sbb
jns
dec
cld
xchg
fwait
gs
cmc
cld
push
xor
adc
enter
xchg
jno
aam
std
int3
test
sti
pop
jmp
and
sbb
cli
loopne
in
daa
push
repnz
mov
ja
and
push
lock
std
movsl
jg
push
movsb
cmovg
ljmp
mov
cmpsl
jne
je
jno
cmpsl
stos
out
mov
into
into
mov
xchg
sub
add
pop
mov
scas
sub
jae
dec
jle
adc
xor
fs
push
jge
or
mov
fcomip
push
xchg
ljmp
inc
inc
fnstenv
aam
jmp
sahf
imul
cmpsl
jb
push
sbbl
xchg
mov
pop
push
call
jle
ljmp
pop
ja
sarl
push
fs
sahf
or
cmp
pusha
loopne
add
adc
and
jo
les
loop
std
mull
push
insb
add
mov
jle
cmpsl
outsl
sbb
and
outsl
cld
push
sbb
jmp
lds
sub
nop
ret
fdivs
or
sbb
xchg
mov
cmp
pop
xchg
push
lret
or
out
jmp
mov
xchg
adc
rorl
sbb
mull
hlt
pop
adc
jne
jnp
push
mov
cltd
push
push
cmp
or
lods
std
xchg
fsubp
loope
dec
jle
std
mov
pop
adc
xchg
lock
or
mov
xchg
mov
shl
or
in
andl
leave
mov
gs
fisttpl
sbbl
inc
push
iret
xor
xor
push
inc
pop
xchg
nop
mov
sub
cmpsb
icebp
test
in
add
cmpsb
cld
addr16
push
inc
fldl
movsl
add
lret
mov
addr16
mov
push
loopne
adc
cltd
pop
addr16
inc
shll
mov
cmp
cwtl
push
jb
xchg
pop
add
jmp
mov
sub
lds
fiaddl
xchg
mov
fistpll
pushf
sbb
iret
mov
push
sub
fidivl
fs
clc
adc
mov
pop
repnz
iret
push
out
jg
sbb
add
cs
movsl
xor
adc
xchg
push
xor
and
mov
shll
mov
movsb
mov
subl
psrlq
dec
mov
test
ret
fidivrl
loope
pop
cmp
add
mov
adc
lret
clc
fcoms
jecxz
jbe
xor
aas
fdivrl
ficoml
push
insl
repnz
insb
add
adc
pop
inc
addr16
ret
loop
sub
add
sub
and
int
cmp
sti
pop
aas
sbb
fs
lret
inc
es
mov
sub
sub
push
cli
fwait
loop
lds
bnd
jnp
ficompl
fiadds
loopne
sub
imul
scas
out
repnz
incb
sub
setb
add
stos
inc
sbb
xchg
xor
xor
int3
sarb
mull
xchg
sub
ss
sti
mov
ljmp
push
repnz
push
adc
pop
inc
mov
push
es
pop
repnz
daa
mov
xchg
scas
inc
mov
test
lods
inc
mov
push
dec
int3
stc
nop
sar
sub
mov
insl
cld
repnz
pop
jb
dec
nop
repz
inc
stos
mov
sub
mov
sub
in
or
cmpsl
sbb
rcll
out
pop
mov
leave
stos
sbb
mov
xor
mov
in
inc
iret
mov
adc
lock
negl
add
adc
push
xchg
iret
hlt
hlt
iret
imul
fnstsw
dec
mov
fmuls
sbb
and
pop
jnp
aad
push
pusha
pop
and
xchg
ss
jmp
mov
pop
jl
shl
mov
ret
cs
cmp
aas
xchg
lods
add
movsb
mov
packuswb
jl
rcrb
shlb
insb
add
xor
mov
mov
add
outsl
push
repz
jo
data16
jecxz
test
ficomps
mov
adc
pop
pusha
stc
into
mov
xorb
stos
jle
aas
mov
aam
push
push
data16
mov
dec
lret
int3
fstl
stos
push
push
movsl
ja
das
xor
xor
movsb
mov
mov
bound
iret
std
and
dec
pop
pop
andb
fsts
sti
dec
sub
lahf
call
shll
inc
lock
call
dec
rcrb
cmp
clc
jp
push
sbb
repz
mov
sub
in
sbb
dec
ss
push
xlat
xlat
mov
mov
ss
call
pop
inc
outsl
leave
xlat
icebp
xlat
mov
cmp
test
test
int3
fadds
xor
xchg
in
sbb
jo
dec
dec
in
lods
negl
imul
jno
outsl
push
fldcw
pop
push
je
jnp
push
pop
cltd
rcl
ret
adc
mov
xchg
test
push
sbbl
lods
outsl
negb
fadds
call
insb
jnp
adc
xchg
mov
cltd
mov
and
mov
jne
test
in
pushf
out
lret
dec
inc
bound
clc
outsl
pop
cmp
arpl
inc
push
leave
cmp
pop
cmp
jecxz
inc
pop
lcall
js
cmp
xchg
xchg
xor
pushf
dec
jo
mov
ret
cmp
clc
insl
call
sbb
cwtl
and
int
in
mov
dec
add
inc
jle
xchg
jo
outsb
mov
das
imul
inc
std
mov
push
hlt
jmp
dec
mov
mov
and
cmc
push
cmp
dec
jg
sbb
movsl
cmp
or
jp
ret
inc
call
cmp
adc
js
cmp
mov
mov
rcrb
ret
or
mov
pop
jns
filds
lcall
mov
fwait
xor
lea
mov
hlt
pop
fldenv
adc
and
mov
mov
mov
or
fcompl
mov
repz
ljmp
repnz
dec
clc
popf
stos
cmp
out
hlt
adc
pop
or
lcall
adc
cmp
xor
inc
push
movsl
jno
aaa
inc
mov
fdivrl
fistps
mov
loopne
push
push
pop
je
orl
repnz
jge
or
hlt
lods
xchg
mov
cmp
stos
bound
rclb
xchg
ja
and
ret
push
test
cmp
sbb
jmp
jecxz
add
setbe
mov
mov
jnp
inc
and
imul
fisubrs
mov
repz
inc
loopne
adc
shlw
xchg
pop
sbb
push
je
push
sahf
and
xchg
and
add
stc
rclb
xor
jmp
dec
das
lds
repnz
sub
pop
xchg
jge
les
dec
addr16
xor
lods
shr
ja
or
xchg
add
lods
sbb
mov
rorl
adc
and
outsb
adc
adc
insb
sub
mov
jae
aas
pop
ds
rclb
push
sbb
outsb
sub
outsb
enter
es
insb
pop
in
ret
fdivrs
push
cmc
inc
cmp
call
sub
shll
daa
cmp
sub
add
out
xchg
mov
dec
lods
inc
cmp
popf
mov
sbbl
mov
sbb
movsl
testl
xchg
mov
jecxz
repz
into
imul
lahf
stos
dec
gs
repnz
sbbl
dec
loop
aas
jmp
jmp
addr16
rol
mov
xchg
push
pop
push
iret
xchg
pop
jbe
cmpsb
in
cltd
push
cmp
in
test
adc
and
or
icebp
jb
test
inc
test
lret
push
and
push
rclb
imul
pop
daa
iret
mov
cmp
out
jp
shrb
mov
cmpsl
jecxz
pop
and
mov
aad
in
push
jnp
push
ja
fldcw
loope
cs
shll
imull
adc
fdivrs
subb
mov
sahf
lods
push
bswap
mov
adc
dec
cli
popf
mov
pop
xor
lea
lret
aas
loop
sbb
imul
adcb
xchg
and
mov
aas
cli
push
out
dec
push
into
add
pusha
pop
insl
loope
dec
les
mov
and
adc
ret
add
daa
in
sbb
imul
inc
mov
in
out
rcll
mov
mov
nop
pop
loope
inc
adc
movsl
dec
clc
dec
shrl
jb
push
push
inc
inc
lret
aaa
push
push
and
test
xchg
mov
xchg
mov
popf
inc
xchg
fld
mov
mov
pop
neg
cld
lcall
sahf
out
adc
sub
lods
add
push
fstl
jne
sbb
popl
jl
int
sbb
loopne
push
add
push
mov
jbe
lahf
lods
or
sbb
xor
popa
ds
adc
mov
mov
sub
cltd
cli
cld
adc
mov
push
outsl
scas
call
mov
sahf
das
xchg
push
test
jns
adc
jbe
add
mov
push
xchg
pop
xor
xor
mov
mov
mov
xor
in
mov
jg
sbbl
sub
js
jle
xchg
fst
dec
roll
ljmp
add
ljmp
dec
lea
fucomi
mov
push
mov
lcall
out
adc
mov
jnp
mov
pop
push
jp
ljmp
push
clc
lret
into
mov
and
adc
push
in
pop
inc
je
jle
or
std
add
cmp
bsf
add
imul
fwait
jge
inc
or
inc
iret
mov
ja
sub
adc
sub
call
xchg
mov
aaa
adcl
cltd
imul
fldenv
inc
push
jge
arpl
dec
adc
outsb
mov
fwait
ret
repz
xchg
stos
popa
jecxz
loopne
dec
dec
out
cmp
imul
fstps
dec
out
mov
pop
or
and
inc
inc
mov
push
push
shlb
pop
shrb
inc
lock
lea
xor
xchg
out
enter
ret
testl
mov
mov
cmc
and
sbb
and
in
mov
inc
push
xchg
push
mov
lahf
pop
insl
xchg
imul
adc
sbb
clc
dec
repnz
mov
mov
divl
xchg
add
cmpsl
jl
push
out
test
jo
or
sub
hlt
dec
mov
cmp
push
iret
lods
ljmp
mov
adc
push
sti
cmpb
aaa
sbb
sbb
stos
add
ret
std
fs
lretw
push
add
sbb
add
ja
mov
loope
in
orb
cmp
xor
popa
std
fs
adc
sub
out
test
or
xlat
push
ljmp
add
mov
ret
lahf
ret
xchg
lds
dec
aam
mov
notb
sub
push
or
addr16
test
dec
lret
data16
int
cmpl
adc
jp
gs
popa
ret
aaa
bnd
rcr
ret
sbb
fs
ret
xor
cmp
xor
notl
mov
lahf
aas
or
in
mov
jl
pop
push
lea
xor
or
cmc
sahf
or
mov
add
icebp
push
add
clc
das
inc
fwait
inc
or
push
out
sub
inc
pop
mov
pop
cmp
sbb
pop
mov
outsl
repz
mov
sbb
pusha
enter
adc
std
lods
pushf
sbbb
or
in
das
aam
test
mov
out
aaa
push
adc
test
movsb
mov
xchg
ror
data16
mov
gs
scas
jmp
ss
fistpl
jne
mov
and
mov
pop
imul
inc
inc
loope
xor
in
cmpsl
sub
push
xchg
mov
add
sbb
cmp
mov
into
push
xor
adc
xor
adc
lea
fiadds
mov
subl
dec
sbb
rcl
addr16
aad
mov
xor
or
nop
test
jl
pushf
cli
hlt
stos
inc
pop
loopne
add
test
test
out
mov
dec
mov
sub
xchg
pop
and
sub
and
push
push
inc
aad
ja
xchg
pop
inc
cwtl
push
sub
sub
aas
stos
lahf
out
scas
ss
sbb
xlat
cmp
fidivrs
idivl
and
fstp
mov
push
or
test
fwait
push
cmc
int3
popf
je
and
pushf
push
dec
test
or
jmp
hlt
xor
rclb
mov
dec
fmuls
sub
out
adc
and
add
hlt
outsl
ret
shrl
iret
push
cmpb
fs
push
out
pop
stos
repnz
xorb
jge
popf
bnd
push
je
pop
mov
iret
mov
xchg
and
jecxz
inc
lcall
fbld
jo
inc
loopne
shl
xchg
pop
repnz
jns
aas
outsl
sbbl
add
mov
sub
sbb
sub
xchg
scas
test
popa
cmp
sbb
mov
nop
je
jecxz
lock
inc
fdivrl
loope
in
sbb
fmull
add
lahf
and
stos
cmpsl
cltd
mov
sub
test
pop
adc
movsb
xor
push
jae
cmp
hlt
iret
imul
lahf
stos
rorl
and
arpl
add
dec
lea
sbbl
add
xor
mov
jle
ficompl
test
sarb
push
js
adc
out
pop
lock
mov
adc
cmpb
xchg
sbb
aas
sub
cmpsb
pusha
cmp
xchg
inc
inc
sbb
loop
lock
scas
add
testl
pop
mov
xor
push
push
aad
push
jo
ss
lock
mov
fmul
sub
fwait
out
sbb
mov
pop
jecxz
nop
mov
mov
or
push
jns
addl
jl
push
xchg
push
inc
pop
loope
cmp
jnp
xor
inc
xchg
mov
ljmp
pop
xor
pop
iret
cmp
inc
iret
cmpsb
hlt
cmpsb
nop
daa
test
lea
mov
cmp
mov
sbb
fisttps
rclb
arpl
outsl
push
daa
push
inc
iret
popw
add
fs
mov
mov
xor
rcrb
scas
mov
rclb
pop
int3
rorb
fstp
sbb
pop
ss
loope
data16
and
sub
add
lret
in
xchg
out
push
dec
mov
add
push
inc
cmp
dec
fisubrs
xchg
sbb
adcl
int3
sbb
pop
rep
cmp
pop
mov
lahf
and
jnp
ja
ss
mov
push
enter
imull
mov
push
cli
aas
loope
pop
aad
push
cmp
pop
lods
add
pop
adc
sub
or
pop
testl
or
arpl
dec
test
inc
jb
call
xchg
pop
stos
dec
sbb
push
sarl
dec
jmp
cli
sbb
jecxz
inc
lds
xchg
cltd
in
xchg
in
push
aas
jp
data16
test
mov
xchg
enter
iret
fdivp
mov
gs
dec
adc
jle
or
xor
pop
cmp
jb
inc
mov
shl
sbb
jmp
adc
or
mov
xchg
out
mov
test
les
xor
xchg
in
jp
jge
cmp
cmp
pop
sub
dec
push
sub
add
ljmp
out
cld
xchg
cmc
out
mov
mov
sarb
outsb
into
mov
sti
iret
adc
pop
outsb
push
jae
cwtl
cld
fsubrl
mov
xlat
je
js
jno
rorb
mov
sti
push
out
stc
pushf
or
inc
mov
dec
bound
xorb
cmp
xorl
jge
sbb
test
arpl
xchg
pop
gs
testl
fldl2t
mov
ret
leave
out
scas
mov
mov
xchg
ret
dec
and
xchg
jns
jecxz
mov
mov
stos
xchg
mov
adc
adc
cli
pushf
data16
sbbl
shll
inc
pusha
mov
and
sub
pop
iret
inc
xor
jo
cmp
fldl
fs
adc
nop
cmp
mov
movsl
add
xchg
popa
jecxz
fidivrs
daa
les
imulb
repnz
jb
ds
ss
scas
xorl
mov
mov
loop
add
mov
ljmp
jno
call
rcll
enter
inc
push
dec
sub
int3
in
js
jne
daa
fmull
test
out
xor
lahf
push
testl
jae
sbb
push
pop
mov
test
fidivs
lea
xor
jmp
mov
mov
arpl
hlt
pusha
shlb
xchg
pop
ret
push
push
jecxz
test
sbb
sbb
outsl
pop
into
loop
nop
jl
ret
and
cmpsb
pop
jbe
xchg
repz
mov
sub
gs
mov
les
inc
enter
adc
push
ret
or
add
gs
and
mov
jae
inc
sbb
sbb
cwtl
dec
adc
hlt
pusha
in
add
in
andl
bound
jmp
xchg
std
mov
or
movsl
cmp
push
inc
fsubl
loop
push
out
arpl
add
sbb
insl
or
jbe
or
xlat
mov
je
mov
xchg
andl
fwait
add
or
test
repz
jg
fwait
ret
or
test
inc
pop
ja
dec
dec
push
jb
insb
dec
lcall
adc
mov
dec
jl
pusha
lods
pop
popl
rol
lods
mov
jg
mov
mov
int
stos
fwait
hlt
ret
jl
pop
adc
in
shll
and
mov
xchg
sub
jne
outsl
push
mov
inc
divl
pop
inc
sti
insl
mov
xchg
fists
mov
mov
insl
cmp
or
sub
mov
cs
int3
xchg
mov
dec
mov
outsl
loope
arpl
lret
mov
or
lret
adc
adcl
mov
aad
outsl
xlat
mov
or
mov
mov
int3
dec
inc
js
nop
cmp
sbb
xchg
ljmp
aad
cli
fwait
mov
imul
jno
mov
add
ret
inc
pop
inc
ret
into
ficompl
lods
dec
mov
es
cmpsb
xor
pushf
xchg
jge
lret
pop
mov
pushf
gs
test
imul
loop
mov
icebp
sahf
int
mov
pop
call
cltd
xor
and
cld
hlt
inc
pop
xor
inc
fimull
data16
popf
jge
int
mov
aas
loop
jge
dec
and
sbb
or
adc
mov
scas
call
mov
lret
mov
sub
dec
jl
add
fdivl
xor
push
and
dec
add
inc
mov
lret
sahf
xchg
pop
mov
out
les
mov
std
lea
and
mov
fadd
cmpsb
les
mov
jnp
sti
push
cltd
xor
rdmsr
and
cs
sbb
and
test
cmp
cmpsl
cmp
cmp
int
jno
push
pop
imul
jl
add
pop
inc
push
dec
cmpl
movsb
add
fs
jbe
lods
and
mov
jb
lcall
movsl
pop
std
sbbb
adc
xchg
ret
push
and
sbb
pop
stos
xchg
test
jle
hlt
push
sahf
or
dec
sti
mov
xor
cli
or
mov
sarl
dec
pop
cmp
cmp
aaa
adc
dec
dec
adc
mov
iret
hlt
pop
scas
mov
iret
push
rol
arpl
into
pop
jecxz
mov
mov
in
icebp
or
std
inc
cmpsb
mov
pop
loopne
fsts
jae
arpl
fstpt
push
lret
fists
testl
out
out
mov
mov
jnp
in
dec
dec
push
jge
in
cmp
shrl
dec
dec
es
mov
cmp
mov
push
fistl
jnp
fmul
jecxz
addr16
xchg
sahf
stos
movb
mov
fisubrl
push
adc
rcll
add
insl
sbb
mov
and
or
inc
xchg
icebp
neg
mov
into
popf
xchg
add
insb
popa
or
test
daa
pop
std
and
pop
or
pushf
aaa
pop
aaa
movsb
xchg
stos
pusha
jmp
adc
jnp
dec
add
sub
das
cmc
enter
sarl
dec
dec
adcb
mov
ja
sbb
pop
pop
and
push
sbb
das
inc
sbb
pop
sbb
adc
cmp
imulb
aam
fcomps
jp
ljmp
cmpsb
and
mov
scas
inc
sbb
push
push
lahf
xchg
sub
inc
dec
add
cmp
or
test
cli
pushf
mov
add
push
shl
setno
jns
nop
adcb
jb
push
mov
test
iret
xchg
pop
add
negl
aam
mov
mov
aas
lcall
aad
lea
aad
xacquire
mov
xor
negb
jg
push
repnz
mov
lret
xchg
mov
jecxz
push
dec
pusha
fwait
enter
test
dec
ja
xlat
mov
sbb
pop
or
pop
sub
sub
insb
fnsave
mov
cld
mov
mov
xor
arpl
das
jo
adc
out
xor
jle
mov
in
sub
mov
pop
cmp
push
sub
or
mov
jge
mov
insb
mov
mov
jnp
mov
or
inc
subl
dec
pushf
cli
call
lahf
cli
fiadds
dec
dec
and
cmp
sar
les
into
loop
dec
and
jmp
jg
inc
adc
pop
and
insb
das
test
xchg
scas
bound
cltd
or
lahf
dec
and
jl
push
in
scas
call
int3
out
ljmp
mov
test
fsubl
cmc
add
sbb
addr16
and
sti
mov
or
int3
mov
push
sub
and
mov
mov
iret
pop
pop
lods
lods
movb
cltd
daa
jb
out
fwait
add
jae
lds
push
adc
aad
rcrl
popf
xor
jge
mov
jmp
adc
xchg
pop
adc
xor
cmp
or
std
push
sub
adc
jno
and
push
fsubl
mov
aaa
push
dec
loopne
adc
cmp
add
testl
push
das
add
jmp
cmpb
daa
inc
adc
repz
mov
mov
clc
sbb
inc
xchg
mov
outsl
dec
mov
jl
in
out
in
dec
lcall
jns
jge
adc
add
sub
sub
testl
dec
adc
mov
sti
xor
mov
xchg
or
lret
divb
lds
inc
gs
push
movsl
mov
stos
shl
out
test
and
or
mov
xor
jl
or
cmpb
pop
jecxz
adc
les
rcrl
mov
repnz
sbb
add
ficomps
inc
cmc
xor
lock
fsubrs
lret
inc
add
cmp
rclb
mov
outsb
int
inc
outsb
mov
dec
inc
mov
mov
adc
into
sub
push
shr
cmc
cmovns
mov
push
fidivl
into
and
sbb
or
decl
push
jmp
stos
repnz
xlat
leave
int3
inc
orb
pop
and
sub
mov
loop
inc
in
sbb
adc
ret
cmp
xchg
lods
xchg
jne
testl
icebp
push
and
xor
incl
divl
shrl
sbb
sahf
iret
fisubl
ljmp
iret
cmp
mov
stc
dec
lret
lds
push
cld
pop
dec
jmp
in
adc
and
loop
mov
adc
sbb
pop
repz
sbb
sbb
mov
adcb
mov
in
rcr
mov
bound
fidivl
jno
inc
sub
clc
insb
outsl
repnz
popf
inc
push
mov
sbb
scas
jo
sbb
pop
in
aad
idivl
shrl
cmc
mov
mov
xchg
jb
adc
xor
cmp
mov
out
xchg
sbb
mov
adc
mov
push
mov
int3
mov
hlt
inc
xlat
and
inc
pop
hlt
adc
jnp
roll
add
addr16
rorb
mov
out
movsb
sub
aad
pusha
sbbb
shrb
mov
icebp
mov
fs
jp
inc
mov
inc
add
mov
mov
insb
enter
shlb
xchg
loope
fnstenv
dec
xlat
jnp
push
pusha
sbb
cmp
enter
loope
inc
dec
push
xchg
mov
inc
shlb
or
rorb
xchg
rorb
add
inc
loop
jns
jmp
ret
mov
mov
hlt
scas
mov
add
mov
add
mov
sbbl
jecxz
sub
cmc
hlt
mov
shlb
sub
adc
push
ss
push
fnstenv
mov
mov
lret
xchg
negb
ja
sub
dec
shrb
addr16
mov
and
sbb
push
arpl
dec
xor
mov
shrl
cmpsb
inc
outsb
xor
sub
call
pushf
dec
outsl
mov
jg
xor
faddl
dec
sarl
jmp
jg
insb
cmp
pop
xor
lret
cmp
push
xor
push
mov
jecxz
jmp
movsl
lahf
lea
inc
rcrb
sub
inc
or
sbb
call
or
inc
aaa
mov
aaa
mov
lret
imul
loop
push
icebp
aam
pop
mov
and
stos
stc
insl
int3
mov
or
cmp
ret
shll
mov
mov
jecxz
ds
pop
dec
cmp
aam
insl
push
fisttps
fsubs
test
inc
sti
mov
out
ss
clc
sbb
leave
pop
aam
mov
pop
stos
cld
xor
das
push
mov
mov
cmp
cmp
push
adc
imul
cld
ret
loop
int3
loope
and
lea
imul
or
insb
or
ds
inc
pop
inc
jecxz
push
push
cmp
sub
dec
sbb
push
jo
sbb
shlb
mov
imul
add
out
fwait
lods
bound
std
or
push
xchg
les
mov
movsl
mov
mov
or
xor
and
adc
cmpb
xor
jnp
sbbb
jg
gs
xchg
mov
mov
data16
push
arpl
push
fimuls
idivb
mov
jge
dec
pop
lock
aam
sbb
jne
cmp
sbb
pusha
sbb
mov
nop
jnp
in
mov
or
leave
lcall
in
inc
loope
mov
jno
add
mov
adc
popf
std
dec
sbb
stc
or
jp
lods
xor
rolb
insl
fisubrl
les
sub
insb
add
xchg
pop
inc
int3
sub
and
lret
cltd
movd
cmp
mov
dec
inc
dec
repnz
int
cmp
push
aaa
push
mov
fcompl
ret
dec
sbb
push
and
pop
nop
mov
les
pusha
adcb
or
sti
xchg
lret
bound
dec
mov
cmp
sahf
lods
repz
and
into
icebp
adc
adc
jns
loop,pn
je
iret
mov
adc
dec
sbb
mov
pop
scas
or
in
ljmp
insl
lahf
fldl
mov
bound
mov
cwtl
jno
or
outsb
push
sub
inc
dec
and
loope
in
mov
mov
xor
mov
adcb
sub
pop
fistps
jmp
enter
fsubrp
mov
mov
mov
and
rorb
or
stc
insb
cmpsl
lods
jb
lahf
mov
les
stos
adc
mov
mov
out
pop
mov
mov
shlb
pop
sub
in
inc
inc
xchg
sbb
adc
mov
push
xchg
decb
mov
rcr
in
inc
ds
mov
out
sbb
lock
sub
dec
lea
add
and
insl
mov
xchg
int
icebp
fdivl
ja
inc
xor
ljmp
cmp
int3
fadd
mov
inc
or
dec
inc
pop
into
jno
bound
push
clc
xchg
popf
insb
add
int3
push
lods
std
push
loopne
inc
sbb
cmp
sub
mov
jb
and
outsb
push
jecxz
loope
leave
je
add
dec
jo
sti
xchg
jne
shl
cwtl
and
inc
fbstp
pop
mov
mov
cmp
xchg
sbb
lds
push
mov
push
cs
mov
dec
xchg
out
dec
scas
out
adc
cmp
stc
out
rclb
xor
sub
inc
popa
rep
sbb
ja
push
and
pop
inc
fcomps
mov
inc
and
xchg
mov
xor
clc
cwtl
lea
aaa
cltd
xor
inc
orl
sarb
cmp
sbb
mov
add
test
pop
xchg
xor
jae
sub
cli
mov
lahf
dec
lds
jle
es
hlt
dec
mov
sub
iret
inc
dec
test
fldt
iret
bound
stos
fwait
test
lea
xchg
cs
cmp
jle
clc
movnti
out
mov
xchg
add
add
mov
cmp
dec
nop
mov
arpl
xchg
add
adc
inc
pop
jp
fnstcw
or
insb
inc
sti
jg
in
sbb
sbb
pop
mov
jmp
test
gs
xchg
jp
lea
adc
jmp
adc
insb
or
mov
or
dec
push
jne
or
or
out
es
mov
adc
rolb
and
es
pop
push
sub
xchg
xor
push
xlat
push
xchg
inc
adc
push
fdivl
das
mov
xchg
mov
sbb
loopne
aaa
mov
and
push
inc
sub
jne
rcrl
pop
lods
jo
lds
pop
lods
sub
sub
cmpsl
fiadds
in
fs
sub
pop
jecxz
hlt
adc
xor
inc
jmp
lds
or
aad
sub
adc
pop
pop
cmp
fnstenv
add
std
fdivrl
or
push
inc
int
sti
mov
push
cmc
imul
js
leave
inc
push
adc
mov
xor
ror
arpl
movsl
lds
sbb
mov
cmpsl
add
cli
push
insl
dec
xor
xchg
jns
sbb
fisttps
aas
cmp
mov
call
shrl
aas
push
insb
insl
add
cmp
xor
push
imul
nop
push
sbb
push
mov
shld
mov
jne
cmp
ja
or
in
pop
sbb
or
mov
push
lret
and
push
xor
aam
leave
jo
mov
addr16
ds
inc
mov
mov
les
fdivl
xchg
lcall
pop
sbb
or
jmp
mov
mov
push
mov
sbb
sub
mov
add
xor
or
insl
cld
add
add
mov
sarb
ss
and
or
pop
sub
idivl
les
shrl
dec
or
pop
into
aaa
std
xchg
scas
fs
int
fdivp
cmp
push
adcb
inc
popf
xor
pop
sbb
and
test
movsl
ret
in
xchg
lret
cmp
cs
scas
aam
mov
mov
add
sti
sahf
cmc
pop
inc
out
inc
sub
jl
fs
scas
cltd
dec
xlat
xchg
sbb
fisttps
loope
loop,pn
std
adc
ljmp
sbb
sub
in
or
and
cmp
ds
ret
jo
jmp
and
xor
mov
test
aam
inc
push
test
rolb
insb
adc
ds
push
loopne
iret
adc
xor
push
cmpsb
push
into
cli
push
loope
inc
or
pop
jns
stc
mov
dec
andb
or
add
hlt
and
sbb
add
movsb
mov
pop
cmpb
or
dec
jge
cmp
insb
test
iret
mov
mov
jnp
daa
lock
sbb
in
popa
ret
adc
mov
nop
repnz
mov
lods
out
dec
mov
inc
fcoml
vpsrlw
mov
into
xor
sbb
ds
out
push
pop
decb
outsb
lret
bound
aad
or
mov
aad
ja
inc
out
lock
cwtl
lods
and
mov
inc
out
add
xlat
andb
je
or
std
jb
repnz
aad
xchg
adc
lahf
rclb
test
push
mov
gs
pop
inc
fidivrs
pushf
pusha
int3
inc
or
mov
push
dec
pushf
or
mov
lahf
dec
jecxz
sbb
pop
jp
inc
fwait
test
jbe
andl
pop
loope
sub
ficomps
xchg
aas
cs
pop
pusha
pusha
push
loop
xchg
mov
pop
cmpsb
inc
insb
pop
je
rep
imul
inc
test
push
and
mov
mov
or
fmul
jmp
inc
sbb
add
iret
jo
mov
movsb
jmp
std
iret
data16
or
xlat
and
mov
or
int3
test
cmp
ja
push
test
lods
cmp
cmp
fmul
sub
jae
dec
mov
shlb
sti
mov
lret
push
scas
cmpsb
ret
jmp
pop
lea
imul
push
mov
adc
adc
gs
fstl
push
jecxz
xchg
xlat
int3
xor
sbb
loopne
mov
jecxz
mov
hlt
movsb
add
xor
stos
mov
pop
add
jno
jbe
pop
test
notl
jae
daa
mov
and
fistps
xor
gs
imull
ficoml
inc
or
cmp
cmpsb
aam
push
mov
or
xchg
sub
ljmp
mov
xchg
lds
sbb
cmp
cwtl
movsb
fsubrp
cli
bound
ds
fs
orb
cmpb
xchg
sbb
jnp
sbb
arpl
xchg
ja
fwait
add
adc
fisubrl
je
pop
in
push
xchg
xor
pop
test
dec
sub
clc
pop
push
pop
mov
in
bound
subb
out
pop
sbb
fnsave
or
repnz
cltd
test
loopne
sbb
pop
lock
add
out
or
insb
xor
rolb
call
push
enter
push
mov
popa
aaa
gs
hlt
xchg
push
test
jne
dec
dec
scas
sbb
dec
sbb
repz
cs
adcb
push
push
mov
mov
stc
frstor
xchg
xchg
in
enter
movsl
cmp
mov
mov
fcmovb
pop
jo
mov
call
dec
call
mov
ret
sbb
repz
push
loop
pop
insb
mov
pop
insl
push
loopne
push
sub
test
ja
lods
pop
lods
push
into
jno
ja
adc
stos
jl
ljmp
jb
push
xchg
mov
lahf
ds
sub
jecxz
std
repnz
ret
and
push
cwtl
test
jmp
xorl
sub
scas
ret
paddq
xor
shll
dec
out
lret
decb
int
jmp
hlt
xchg
and
push
mov
shlb
jge
xchg
xor
out
notb
mov
push
js
insl
inc
or
dec
xchg
cmp
xlat
jl
movsl
cmc
nop
add
and
jb
xchg
push
adc
ss
inc
pop
mov
fwait
sbb
mov
mov
clc
stos
pusha
xchg
mov
shrb
int3
pop
lock
aad
sbb
cmp
push
mov
push
daa
lds
int3
fisubs
push
push
popf
lods
cmp
or
jg
mov
jae
xor
test
inc
daa
cmpsl
xchg
fidivs
adc
xchg
mov
jb
loope
sub
enter
or
mov
or
push
cmp
push
notl
or
fstl
je
inc
imul
int
pop
xchg
mov
stos
lods
das
sbb
add
push
inc
jmp
in
adc
cmp
jb
or
sub
or
and
fnstcw
cmpb
or
lods
dec
cli
scas
leave
jmp
inc
xor
xchg
sub
ss
shll
add
rcrl
out
nop
int3
je
mov
rcr
xor
jmp
mov
faddl
movntq
testl
push
test
push
xchg
sub
mov
cli
jecxz
jecxz
dec
jmp
and
jno
mov
ds
and
fsts
mov
arpl
mov
aas
jne
sub
mov
shlb
mov
mov
sub
addr16
sarl
add
and
fldt
jge
out
pop
insl
sub
jge
cli
inc
stos
cmp
xchg
mov
imull
lret
cli
push
pop
ret
inc
imul
aas
or
aas
fldenv
movsb
cmp
xchg
call
pusha
pushf
std
pop
xchg
je
push
cmpsb
lods
inc
fmul
jnp
movsb
ja
inc
es
mov
sarb
xchg
mov
cs
sbb
mov
mov
adc
into
in
lret
dec
lods
notl
pushl
lods
mov
xor
inc
ret
inc
xchg
ficoml
and
sub
adc
mov
jb
dec
cmp
xchg
adc
push
add
scas
xor
in
push
pop
push
enter
dec
dec
mov
rolb
adc
stos
inc
xor
and
inc
push
sbbb
nop
lds
pop
mov
xorb
lcall
xchg
add
mov
popf
out
push
inc
inc
xchg
aas
cmp
add
push
push
mov
in
adc
or
inc
aaa
cmp
sub
lods
inc
sub
mov
fwait
imul
adc
dec
insb
rorb
cmpb
add
add
mov
jl
push
shll
sbb
cmc
sahf
mov
mov
enter
cli
cmp
add
aad
add
pop
pop
mov
nop
mov
rcrl
mov
sub
dec
lea
mov
or
outsb
push
push
sbb
sti
dec
clc
mov
push
hlt
call
mov
cld
jnp
push
ret
sub
pop
sub
fmuls
cmp
loop
sub
cmp
xchg
imul
jb
cltd
mov
shr
test
bound
mov
xchg
push
fsubrl
inc
rorb
cmp
push
ja
push
sub
das
xor
sub
testl
mov
add
ss
push
fsubl
xor
sbb
enter
mov
dec
dec
movsb
in
test
jbe
jo
cmp
jp
mov
lods
popa
adc
outsl
lret
rclb
sbb
push
pop
stc
mov
fwait
xor
lretw
aas
adc
and
int
sbb
loop
int
aas
add
in
movsl
int3
cld
movsb
outsl
push
or
fcmovnb
adcl
adc
adcb
xor
jecxz
xchg
lgs
lds
clc
into
subb
icebp
and
dec
or
add
mov
gs
xor
lds
adc
cmc
fbstp
adc
insb
jnp
or
pop
cmp
dec
xchg
mov
addr16
cmp
xchg
mov
fs
xor
leave
cmp
lds
aad
addl
dec
leave
xor
cwtl
push
js
inc
shl
test
ret
sub
pushf
and
xor
mov
push
stos
repz
inc
fimuls
daa
inc
xchg
daa
fcoml
cmpsl
ret
mov
mov
xchg
mov
push
leave
jle
loope
mov
pop
mov
push
jb
cld
rolb
and
mov
stc
dec
not
mov
pop
ret
dec
loope
jp
dec
movsl
mov
test
add
lock
mov
jp
jb
out
js
jo
fsubs
sbb
leave
rcrl
push
aaa
mov
xchg
xchg
xor
cmp
xor
adc
jbe
mov
notl
cmp
pop
or
fucomp
mov
xchg
inc
push
pop
jne
aas
lods
imul
mov
jl
mov
ret
shlb
cmpsl
dec
jecxz
or
mov
lret
repnz
mov
xlat
jecxz
aad
nop
xlat
jecxz
mov
ret
add
push
sahf
mov
jge
adc
fwait
lret
xor
lcall
pop
xchg
leave
xchg
or
inc
xor
push
xchg
sub
aas
pop
mov
dec
xor
mov
pop
jge
xor
fs
flds
clc
add
adc
jbe
inc
add
stos
or
leave
pop
popf
mov
push
out
in
subl
cmp
inc
push
daa
fcomps
scas
fsubs
push
pop
lret
lahf
mov
shrl
push
out
and
push
jns
fnstenv
loop
inc
pop
adc
fcmovne
mull
loop,pn
mov
cmp
rclb
lcall
aam
jae
adc
fcomps
jl
mov
add
and
jecxz
sub
sbbb
inc
stos
ss
fsubrs
fisttpll
xor
push
test
mov
mov
inc
xlat
xor
or
mov
lds
idivb
in
sbb
and
and
repnz
ret
fnsave
inc
mov
inc
mov
adc
dec
sbb
cmpsl
ficomps
inc
mov
popa
in
daa
cmp
cmpb
add
int3
mov
es
dec
xor
fisubrl
push
inc
mov
shlb
mov
jns
ds
cmp
pop
out
mov
pop
ja
lods
mov
hlt
add
adc
xchg
inc
add
cmp
dec
hlt
int3
fdivl
gs
scas
out
cmp
lcall
lret
ss
cmp
scas
cli
insl
push
in
or
mov
sbb
ljmp
or
sahf
lods
psllw
cmp
cmp
sub
mov
movsb
jmp
pop
xor
cmp
xor
or
lcall
and
pop
xor
pop
test
pop
jl
andb
mov
lahf
ljmp
inc
arpl
jge
mov
les
out
cmpsb
in
mov
adc
mov
cmp
mov
adc
or
lea
das
pusha
ss
mov
add
lea
cs
lea
and
mov
sbb
add
sub
ja
mov
dec
and
out
outsb
jbe
lods
ds
adc
lds
adc
repnz
aaa
adc
fstpl
int
enter
movsb
mov
jge
mov
icebp
sbb
outsl
inc
ljmp
cmc
and
push
xchg
mov
cmp
mov
shlb
fisubl
mov
add
lods
inc
inc
pusha
mov
mov
stos
shl
adc
add
loope
pop
adc
int
icebp
cmp
clts
arpl
xchg
xorl
xchg
mov
js
inc
inc
dec
loop
fdivrs
jne
dec
jae
cld
inc
sbb
shll
mov
repnz
into
mov
adc
push
orl
es
in
negb
mov
daa
outsl
in
loope
add
xor
sbb
les
jmp
sbb
push
pop
ret
fistpll
and
outsb
jl
jmp
jmp
insb
mov
mov
pop
xor
mov
test
push
lods
dec
aad
and
outsb
pop
mov
cld
jecxz
xor
test
ds
mov
cwtl
sub
inc
push
loop
dec
mov
cli
pop
movsl
cmp
bswap
mov
and
inc
fstpl
ret
jae
scas
inc
sbb
into
bound
sub
in
aas
dec
mov
lea
cmpsl
lds
mov
aaa
out
enter
inc
mov
push
fcomps
mov
sarl
xor
daa
sbb
jle
loope
mov
dec
add
jno
jl
mov
jns
fdivrl
test
shrl
int
mov
aas
jle
das
divl
fs
pop
mov
fdiv
inc
fwait
ss
sbb
ret
insl
cmp
pop
imul
sub
inc
daa
inc
add
dec
ret
lret
sbb
pop
sbb
jo
rclb
push
mov
dec
pop
jo
xor
inc
addr16
aam
popf
and
jnp
frstor
adc
aas
push
mov
in
mov
adc
addr16
insl
cltd
out
call
push
push
adc
shl
out
or
lds
cmp
stos
out
pop
test
pushf
dec
fcmovnbe
sbb
adc
in
or
cmp
xchg
pop
mov
or
aam
xor
push
dec
ljmp
pop
dec
xor
adc
pop
adc
push
repnz
loop
sub
xor
jl
jo
icebp
jl
pop
and
outsl
add
pop
setns
test
mov
jnp
mull
pop
inc
mov
faddl
ljmp
inc
adc
mov
xchg
sub
xchg
mov
shr
inc
push
mov
xor
arpl
insl
fucomip
sahf
or
xchg
aaa
out
push
adc
push
test
fwait
incl
jbe
mov
push
out
jmp
out
testl
test
xor
jecxz
loop
repnz
add
pushf
lods
pop
clc
push
inc
test
jae
jns
lods
popa
shrl
jne
jge
pop
xor
inc
jo
push
cld
push
mov
movsb
dec
fldenv
call
push
sbb
insl
pop
cmpsl
movsb
pop
lcall
loopne
imul
adc
ljmp
lds
sbb
mov
jae
loop
push
pusha
aam
and
push
jno
loop
or
scas
cmp
push
test
dec
add
and
pop
sbb
subl
mov
mov
test
icebp
inc
mov
js
pop
and
xlat
jo
shll
add
jp
cmp
jnp
jle
xlat
pop
lahf
lea
push
dec
lds
mov
hlt
jl
rolb
sbbl
dec
arpl
sbb
scas
lods
outsl
mov
loopne
aam
and
inc
loopne
xorl
ret
in
int3
into
ja
dec
and
test
cmpsl
add
mov
je
pop
outsb
fisubl
in
fwait
scas
repz
cmp
adc
cli
cmp
mov
dec
int
jg
xchg
or
clc
fists
fmuls
mov
fneni(8087
mov
mov
lret
inc
ljmp
jno
in
xor
sub
mov
cmp
das
xchg
rcr
fwait
mov
in
push
in
mov
imul
loope
adc
dec
mov
add
int
xchg
mov
cld
push
mov
xor
scas
pop
cmc
loopne
adc
outsb
jmp
and
push
pop
xor
pop
jne,pt
mov
stos
sub
aas
push
andb
shlb
je
adc
push
aaa
int3
dec
repz
mov
cmp
adc
aam
ret
fiaddl
mov
aam
mov
and
repnz
jb
and
lahf
fidivrs
insb
jno
imul
scas
mov
icebp
ljmp
ret
clc
lret
inc
mov
hlt
scas
lods
mov
inc
sub
dec
sbb
mov
inc
inc
test
mov
negb
mov
cmp
mov
xchg
adc
inc
lods
pop
xor
roll
lret
xchg
push
adc
fucomip
sbb
mov
mov
jle
mov
test
out
inc
leave
xchg
pop
mov
adc
jno
cld
xchg
xor
mov
mov
jmp
mov
push
jmp
je
jno
mov
jmp
repz
cli
adc
push
jns
xchg
xchg
cs
testl
sub
inc
aam
dec
cmc
mov
inc
shlb
testl
cwtl
aad
fidivs
mov
xchg
call
iret
lahf
jo
cld
xchg
movsb
jnp
jmp
rorb
and
cmovp
jecxz
ss
sub
popa
pop
sub
add
test
ud2
xor
dec
fdivrs
fst
inc
lds
and
imul
xchg
jl
in
mov
or
sar
dec
mov
xchg
adc
pop
cmpsb
lock
pop
sbb
add
ret
cmp
ja
js
mov
lret
jmp
test
pop
or
mov
ljmp
inc
xchg
lds
outsl
cmp
repnz
popf
mov
dec
and
lea
mov
cmp
ja
call
daa
ret
jnp
cmc
push
or
aam
test
das
leave
add
dec
mov
cmp
mov
xor
xchg
stos
push
pusha
mov
lcall
and
add
inc
out
xchg
jne
xchg
in
shl
cmp
sub
push
fcom
out
adcl
mov
insl
int
adc
mov
dec
cwtl
arpl
add
jno
push
jne
lcall
test
rolb
lods
mov
sahf
push
sbbb
adc
mov
mov
xor
jae
iret
shr
cli
mov
xchg
subl
fbld
ret
jns
add
jns
mov
std
jne
cmpsl
imul
scas
and
dec
mov
inc
imul
ficomps
dec
adc
in
nop
sbb
mov
repz
cmp
cmpsb
pop
push
andl
mov
inc
cwtl
divb
and
lret
aam
or
push
mov
cmpsl
fstpl
push
mov
jge
pop
mov
push
dec
and
hlt
mov
scas
add
jge
push
mul
addl
and
enter
shr
adc
lcall
pop
out
sbb
adc
sub
hlt
mov
dec
mov
pop
cli
push
adc
pop
pop
sbb
int3
mov
push
pushf
stc
rorl
xchg
pop
fidivs
inc
test
ficoml
adc
negl
pusha
mov
test
xchg
aad
hlt
pop
mov
test
jae
pop
mov
aad
mov
aaa
pop
outsl
add
xor
mov
ret
and
xchg
dec
mov
fucom
cmc
in
call
daa
sub
sbb
outsl
out
push
out
insl
daa
or
sub
jecxz
push
iret
movsl
adc
dec
sbb
sti
and
sbbl
sbbb
fstl
stos
cld
fsubs
pop
ret
cmpsb
xor
push
mov
les
mov
rcrl
cmc
push
ds
daa
or
xchg
pop
cwtl
hlt
stos
inc
aas
mov
adc
or
ljmp
pop
shrl
lock
xchg
js
sub
xor
and
xlat
orb
xor
jmp
pop
clc
stos
inc
xor
leave
rcll
outsb
test
mov
inc
xchg
push
notb
rcrl
hlt
loopne
insl
inc
mov
mov
xor
mov
inc
mov
imul
popf
aaa
notb
mov
pop
xor
adc
add
lock
fisttps
pop
jmp
mov
sub
inc
out
lock
cmp
inc
fs
jb
pop
mov
xchg
dec
mov
icebp
jno
add
mov
jbe
jg
and
shrl
adc
sbb
arpl
push
mov
sub
and
mov
inc
jmp
mov
rclb
inc
pusha
push
sti
xchg
fs
mov
fimuls
bound
inc
push
sub
fmull
add
push
xor
les
out
or
add
dec
ds
jns
sub
daa
sbb
in
sub
cmovg
xchg
adc
mov
fstps
mov
sbb
jb
movsb
jnp
mov
add
adc
xor
cmp
insb
mov
sbb
cmp
or
dec
adc
hlt
loop
add
cld
dec
cmp
adc
pop
or
sub
lods
push
cmpsl
dec
sbb
adc
inc
dec
inc
repz
jb
adc
enter
cli
ror
pop
push
loope
aaa
into
lcall
lods
lds
lret
lret
sti
xor
and
inc
movsb
push
das
fwait
in
xor
pop
dec
push
arpl
aas
imul
ret
scas
add
enter
lods
jmp
sbb
push
dec
arpl
xchg
pop
xor
jp
xlat
imul
psrlq
adc
push
inc
test
out
rcrl
adc
mov
fs
insl
fisubs
sub
mov
dec
or
pop
rcrb
inc
loope
lcall
and
dec
push
adcb
shlb
movb
dec
push
cmp
push
enter
outsl
pop
inc
pcmpgtw
ret
adc
cmc
jecxz
ret
cmp
mov
and
cltd
dec
insb
iret
loope
ja
sbb
xorl
insb
in
pop
adc
add
add
cs
outsl
pusha
ss
ret
cmp
mov
flds
stos
mov
leave
lret
sti
sti
out
popf
ja
jo
sbb
enter
push
inc
push
out
inc
xchg
int
sti
inc
cmp
xchg
outsb
xchg
pushf
xor
cmc
pusha
sub
insb
cmp
xlat
cmp
mov
jmp
mov
dec
aad
fcmovne
in
cld
cld
dec
jecxz
push
mov
outsl
or
and
adc
shrb
cmpsl
ret
add
xchg
imulb
adc
add
mov
lret
add
pop
loope
sbb
stos
xchg
frstpm(287
jecxz
rcrb
outsb
sub
jnp
and
jg
scas
repnz
or
mov
int
jnp
push
jecxz
jne
sub
pop
xchg
cmp
imul
pop
sub
js
decl
aas
mov
sub
mov
int
popf
mov
loop
jg
xor
pop
dec
dec
jne
into
in
divb
adc
int
jno
addr16
jb
lret
pop
or
mov
mov
push
mov
dec
lods
sbb
inc
cmpsl
out
pop
sbb
shll
test
cmp
jo
xor
sbb
xchg
mov
mov
xlat
fbstp
out
xor
scas
dec
repnz
outsb
adc
lds
mov
dec
inc
xchg
adc
cmp
mov
daa
dec
cmp
faddp
sub
icebp
das
xchg
in
jne
test
clc
xchg
add
lcall
xor
stc
pop
mov
cmpsb
movsb
pop
in
data16
lcall
push
mov
int3
clc
or
or
scas
xor
push
ss
dec
mov
jl
push
mov
pmulhw
mov
mov
sub
movsb
add
mov
in
xchg
xchg
in
ret
pop
mov
fucomi
and
sbb
and
dec
popf
and
push
sar
mov
mov
pop
insb
in
xor
loop
pop
fwait
bound
sub
xchg
shl
cmc
dec
mov
cmp
xchg
int
and
in
in
popf
dec
adc
dec
mov
in
fsubr
cmpsl
mov
cmp
dec
mov
adc
enter
inc
jmp
pusha
rorl
int
mov
pop
outsb
push
insl
fbstp
xor
test
int3
arpl
sub
rcll
pop
out
movsb
fwait
or
imul
and
sub
jo
test
in
mov
and
inc
ss
push
nop
and
jmp
clc
add
mov
sub
add
mov
and
add
mov
ret
gs
sbb
les
or
xchg
es
cld
sbb
cli
repz
stos
cmpl
outsl
ss
jp
pop
outsb
xor
push
or
or
mov
aad
mov
ret
ret
iretw
and
aam
cli
adc
mov
sbb
cwtl
stos
cmp
push
sbb
pushf
dec
lahf
dec
hlt
inc
test
icebp
leave
cmpsl
inc
pop
jle
inc
subl
inc
fisubrs
gs
sub
cmc
cltd
cli
fisttpl
xor
and
outsl
into
xor
push
and
mov
pushf
aaa
push
pop
in
inc
inc
out
xchg
or
imul
outsl
push
iret
xor
dec
lock
push
push
pop
jbe
les
imul
pop
in
scas
jne
mov
cmpsb
stos
shlb
ret
lock
gs
push
dec
pushf
cmpsb
pop
adc
sub
bnd
xchg
cs
fiadds
dec
sbb
dec
fcomi
cmp
lea
cmp
test
out
mov
sbb
inc
mov
lcall
mov
xchg
and
addb
ss
mov
bound
and
lds
repnz
pusha
aas
inc
fidivs
aam
mov
sbb
into
dec
aas
sti
xlat
aaa
push
pop
loop
sub
cmpl
pushf
sub
adcb
jnp
data16
imul
lret
push
mov
push
imul
and
add
push
pop
cmc
jl
fwait
test
sub
and
insb
rorb
test
pusha
iret
lret
xchg
xor
ret
test
sarb
iret
xchg
sub
cld
idiv
andb
loopne
cmpsl
fidivl
sub
mov
mov
sbb
sbb
cs
fwait
and
pop
or
pop
jb
jmp
lcall
mov
cmp
adc
dec
fmul
leave
inc
shrl
int
ret
mov
jmp
mov
xor
loope
cmc
push
mov
push
jae
pop
test
inc
aam
sti
add
testl
js
fucomip
movb
je
pop
xor
ja
inc
mov
or
adc
xchg
pop
in
or
iret
add
adc
mov
push
jnp
int
pusha
movsl
xchg
ja
mov
push
mov
scas
sub
mov
ffree
pop
int3
adc
inc
lods
pop
xor
mov
fnstcw
xchg
stos
push
pop
clc
nop
jb
ret
mov
xchg
dec
pop
les
aam
mov
mov
out
pushf
mov
lahf
ss
or
loopne
xchg
pop
ret
jmp
mov
pop
iret
and
jae
sbb
inc
sbb
jecxz
xchg
outsl
add
das
jp
pop
out
ljmp
aad
fstpl
push
cmp
out
pop
xchg
dec
shll
stos
pop
adc
mov
movsb
mov
xchg
mov
into
fcompl
fsubrl
stos
sbb
mov
adc
rcl
or
dec
add
lds
xchg
sub
outsl
mov
push
inc
sub
inc
mov
mov
add
call
in
or
lds
mov
repz
cmp
mov
aam
push
daa
fnstenv
lret
int
xor
in
lods
in
mov
jb
add
sub
sub
jne
mov
xchg
pop
inc
cmp
xchg
mov
je
add
ja
and
inc
fwait
push
or
aas
mov
test
add
mov
push
maskmovq
idivl
fs
inc
or
cltd
xor
mov
mov
ds
bound
enter
xchg
testb
pushf
jno
fwait
sub
arpl
movsb
mov
jmp
sbb
int
dec
sbb
mov
fbstp
in
aam
call
lea
mov
fwait
movsb
pushf
repz
out
data16
or
cmp
in
pop
mov
adc
or
lret
fmull
mov
in
mov
test
adc
arpl
pop
outsl
pop
cmc
push
jl
cmc
scas
int
jo
mov
fildll
pop
inc
pusha
inc
scas
jae
push
push
push
cmp
dec
add
ficomps
jl
inc
nop
push
call
or
adc
and
adc
inc
dec
nop
jle
into
lea
lahf
cmp
and
jbe
fistl
lea
lahf
shrb
lods
imul
das
movb
les
imul
mov
push
ja
aam
daa
xchg
xor
pop
stc
mov
scas
pop
jb
clc
stc
nop
sub
push
ret
sbb
stos
inc
lods
jno
mov
es
or
leave
aas
cld
dec
stc
out
lahf
stos
pushl
jecxz
jecxz
and
xchg
cmc
push
xchg
jecxz
inc
int
push
sbb
sub
pop
cs
cmp
loop
stos
inc
jb
adc
pop
out
pop
loope
add
cmp
xor
pop
xor
or
or
adc
in
mov
lcall
lods
xor
xor
pop
data16
sti
aas
sub
call
dec
push
les
pop
movsb
xchg
jns
outsl
jl
or
cmc
mov
shll
mov
je
nop
pusha
adc
xchg
push
jmp
movsb
mov
sbb
lds
das
dec
mov
test
movsb
nop
push
fnstcw
pop
jmp
fisttps
pop
xchg
cmp
dec
cmp
int3
iret
mov
jbe
repnz
mov
add
scas
ljmp
mov
jge
push
sub
push
js
out
inc
add
push
inc
in
jge
lods
push
sub
fnsave
or
jnp
scas
lahf
xor
dec
idivl
insl
inc
in
mov
push
in
in
cs
xchg
fsubrp
mov
jo
clc
repz
insl
clc
rcrl
pop
lock
cmp
mov
jnp
rorb
jo
mov
ss
out
mov
pop
mov
jno
arpl
dec
pop
aas
inc
jno
mov
mov
cltd
push
es
test
fwait
call
test
and
jnp
dec
xchg
sub
add
inc
out
lods
ja
fiadds
jb
das
jnp
mov
ljmp
xlat
push
or
stos
int3
ds
gs
and
icebp
mov
dec
jnp
decb
xlat
cmc
clc
scas
add
mov
int3
sbb
xor
push
ss
or
mov
and
mov
add
cmpsl
xor
das
cs
push
fwait
cmp
data16
std
scas
dec
loope
push
imul
pop
adc
inc
push
scas
or
ror
dec
fucomp
jns
sub
pop
lock
repnz
jns
int
jg
notb
push
int3
cmc
inc
ja
xor
clc
lock
xlat
dec
sbb
outsb
or
or
outsb
add
shl
push
add
or
jp,pn
in
lods
fstpl
mov
daa
sarl
nop
adc
and
decl
adc
icebp
or
arpl
ds
push
cwtl
lock
ds
ret
lret
xchg
mov
adc
test
in
and
mov
sub
inc
lahf
inc
movsb
test
push
jno,pt
std
inc
inc
ja
and
mov
sub
insb
lock
inc
xchg
sub
jae
mov
add
sub
xchg
sahf
stc
and
dec
cld
fsubr
sub
out
xor
mov
sbb
pop
leave
fidivrs
rclb
xchg
sub
jb
push
jae
dec
jno
xor
xor
xchg
mov
push
out
dec
in
test
scas
cmpsl
or
cmpl
or
pop
cmp
pop
pop
pop
out
add
ror
ljmp
pop
lea
mov
push
add
push
fcompl
outsl
stos
xchg
mov
mov
test
ret
sarl
pop
jno
outsb
adc
rcrl
aas
loopne
movsb
push
xor
nop
mov
or
sti
mov
sub
fadd
rol
sub
movsb
iret
data16
push
push
mov
in
std
jg
or
pop
nop
pop
sahf
sarl
xchg
cmp
ja
adc
push
pop
pop
hlt
mov
sbb
nop
scas
jno
shrb
movsl
das
add
jne
shrb
outsl
jb
aam
pop
xchg
push
mov
jmp
add
mov
pop
and
adc
orl
xor
and
fsubs
cmc
pop
in
sub
loopne
push
loope
mov
jno
mov
pusha
lods
fcoms
lock
cmp
loopne
insb
or
sub
notb
inc
sub
outsl
xchg
inc
mov
jae
push
jbe
xchg
aam
loope
sub
lfs
inc
jnp
ja
adc
ljmp
mov
jnp
pop
xor
adc
inc
sti
rolb
adc
lock
rcrl
cmp
bound
push
fwait
xor
lds
jbe
lret
bound
lea
cltd
adc
ret
push
xchg
sub
mov
imul
mov
inc
pusha
add
stc
push
lret
inc
enter
xor
adc
out
test
insl
sub
jnp
add
movsl
inc
test
sbb
mov
pop
mov
lea
cmp
adc
arpl
cld
mov
rcr
mov
adc
dec
cs
cmc
insb
push
in
cmp
dec
fdivl
pop
test
xor
jle
ljmp
mov
incb
pop
mov
cmp
scas
mov
dec
push
jbe
mov
add
das
mov
or
xchg
mov
or
and
mov
jno
repz
sbb
pop
ret
push
iret
push
sbb
pop
sbb
inc
repnz
inc
xor
icebp
or
icebp
fwait
out
push
outsl
mov
mov
push
mov
push
fs
icebp
in
pop
jo
cmp
dec
pop
dec
pushf
add
movsb
lret
sahf
cltd
lods
jmp
dec
sbb
inc
in
dec
pop
cmpsb
push
fstpl
dec
mov
push
and
lret
pop
mov
cltd
push
xor
cmpsl
pop
xchg
ja
lds
shlb
xchg
inc
loope
leave
fistpll
mov
or
sbb
mov
sub
or
pop
jae
fdiv
mov
jg
fwait
mov
mov
and
sarl
fs
cmp
cmp
jnp
push
xor
xor
arpl
jne
mov
movsb
or
andl
orl
outsb
pop
jg
mov
subb
pusha
out
test
out
adc
stos
inc
and
adcb
dec
icebp
imul
pusha
ljmp
scas
add
xor
push
lock
lock
inc
jne
sbb
test
mov
cltd
jb
push
inc
push
push
jb
push
call
pushl
sbb
aaa
sahf
and
jl
xor
fstpl
cmp
ljmp
nop
mov
cwtl
fs
imul
jge
mov
data16
push
dec
cmp
rcl
out
pop
enter
xchg
dec
jne
jl
and
push
push
scas
sbb
call
cmc
dec
fucompp
ret
xor
fstp
jp
xchg
sub
sub
je
adc
push
cmpb
sbb
testb
and
pop
dec
push
mov
test
or
jb
xchg
lock
test
add
ret
ret
lock
pop
iret
data16
stos
nop
stos
add
dec
sbb
gs
in
test
outsl
cmpsl
inc
rcr
jg
push
roll
add
xor
testl
sbb
mov
repnz
test
sbb
nop
dec
ficomps
sarb
adc
add
imul
xor
push
iretw
jbe
insl
pop
push
dec
pop
jg
mov
sbb
cmp
in
sbbl
xchg
mov
cmp
adc
cmp
cmc
mov
cmp
jno
lea
inc
sbb
ja
popf
mov
lret
cld
ljmp
cmc
adc
mov
jns
xlat
xor
cmp
xor
or
repnz
movsw
mov
add
divl
jl
jnp
pop
and
adc
pop
bound
stos
jae
cld
mov
pusha
outsl
cli
dec
icebp
lret
cmp
cmpsl
sub
adc
jmp
mov
jmp
xchg
inc
mov
cmp
pop
fdivs
or
test
dec
xchg
cli
sbb
mov
cmpsl
jecxz
lock
xchg
mov
xchg
pop
test
mov
call
dec
cmp
aad
call
cmpsb
subb
xchg
aad
pop
sarb
xchg
mov
mov
push
test
out
movsl
push
data16
mov
movsb
rol
mov
ret
scas
inc
xchg
pop
dec
in
jg
pop
mov
test
add
lret
fildl
in
mov
bound
aaa
fnstsw
negb
mov
test
test
mov
sbb
movsb
or
jmp
xchg
lret
pmullw
outsl
andb
loope
mov
jb
in
add
mov
xchg
jmp
add
push
shl
push
pusha
rol
mov
dec
or
xlat
mov
stc
jecxz
inc
add
cmpsl
xor
data16
fs
pop
sub
pop
mov
cmp
inc
push
adc
int
sub
daa
xchg
sub
or
xor
cwtl
cmp
ss
movsb
push
loope
decl
push
pop
rol
sub
inc
sbb
inc
push
sar
stc
inc
mov
dec
inc
push
repnz
jae
sub
inc
test
ret
les
stos
das
and
cmpb
insb
sbb
xchg
cmp
pop
add
test
mov
fwait
mov
or
add
es
sbb
imul
sub
mov
xor
xchg
es
xor
xor
xchg
std
cmp
cmpsb
mov
lahf
hlt
divl
sub
call
addb
out
mov
mov
outsl
shl
push
aas
fldl
cmp
jge
jmp
sbb
push
sub
loop
in
cmp
out
jge
push
popf
cmpsb
or
es
push
into
xchg
inc
push
fwait
push
in
je
push
mov
mov
icebp
adc
xchg
fsubl
mov
xchg
ja
bound
jo
pushf
sub
call
das
leave
push
cli
lret
inc
xchg
mov
mov
lcall
and
negb
mov
gs
cmpsb
sbb
mov
cld
or
xor
xor
loop
sti
jo
cmp
dec
xchg
push
ljmp
imul
xchg
adc
insl
xor
cld
xchg
inc
fcmovb
pop
pop
and
in
add
lods
push
push
jge
push
pop
sahf
dec
pop
in
shlb
sahf
lods
adc
arpl
mov
test
sar
adc
pop
push
pop
mov
xor
shrb
int3
pop
sub
testl
mov
cmpsl
or
cli
pushf
sbb
xlat
and
dec
mov
lods
xchg
mov
fucomp
mov
fucomp
icebp
jns
sbb
loope
xor
lret
ljmp
push
call
movsb
jo
sub
jo
xchg
mov
fcmove
jb
jl
mov
mov
sub
sahf
subb
ss
out
push
dec
cmp
cmp
js
xchg
sbb
fwait
push
jmp
jecxz
imul
mov
fistps
sti
add
test
ja
test
lret
jb
das
mov
xor
pop
mov
dec
loop
das
je
mov
test
add
add
pop
ljmp
lock
xor
fsubl
adc
es
test
mov
sbb
push
int3
jge
ja
add
sahf
fwait
out
neg
in
sub
jmp
or
or
popf
nop
pop
lods
dec
mov
clc
scas
mov
fwait
sbb
vpunpckhbw
mov
cltd
sub
daa
cs
lods
adc
pop
push
pop
hlt
shrb
adc
jns
stos
mov
jle
mov
rolb
aam
loope
pop
cmc
mov
adc
pop
inc
aad
test
lea
inc
inc
repz
dec
in
or
pop
loop
and
xlat
sbb
cmp
and
nop
or
nop
in
mov
mov
pop
test
mov
xchg
or
xchg
mov
fdiv
sahf
hlt
xor
testw
cmp
pop
stos
mov
sbb
jb
dec
mov
sti
ljmp
jae
lock
mov
lds
cs
gs
sub
cwtl
pusha
je
in
lea
adc
xchg
cmp
cmc
aam
inc
sbb
cmp
add
outsb
push
ljmp
jno
in
inc
lcall
stc
adc
les
push
jmp
orb
or
in
mull
fucomp
fists
cmp
lret
inc
fidivl
adc
mov
daa
add
lds
test
and
jmp
sbb
pop
cmp
sbb
lods
pop
dec
sbb
mov
test
or
scas
cmp
inc
mov
pop
cmp
jae
enter
adc
shl
and
mov
imul
loopne
inc
xchg
cs
je
mov
pop
sbb
inc
sub
mov
cltd
lret
pop
imul
add
stc
cmp
dec
cmp
pusha
cmp
and
xor
cltd
xchg
add
xor
mov
and
test
mov
sbb
xor
inc
xlat
jo
push
dec
cltd
std
mov
shrb
mov
les
mov
and
push
cmpsl
mov
push
mov
sbb
scas
pop
fmull
xchg
adc
jle
out
inc
in
inc
jecxz
push
popa
arpl
popa
pop
mov
or
sub
data16
pop
fadd
mov
xor
test
mov
jle
lcall
cmp
imul
repnz
aaa
pop
push
mov
inc
mov
mov
adc
push
mov
mov
mov
bound
xor
stos
sti
shll
mov
cwtl
mov
mov
pop
orb
cmc
rep
cmp
pop
push
jae
jae
sub
or
imul
ss
cmp
inc
loop
mov
out
sbb
pop
jo
add
mov
xchg
in
int
lea
lods
pop
scas
mov
sbb
sub
aam
movsl
cmp
loope
das
inc
int3
cmp
jbe
repnz
sti
jp
pushl
xor
mov
imul
dec
loope
xchg
lahf
ss
mov
in
xlat
dec
fcmovnb
sahf
and
dec
pop
mov
into
out
mov
fisubl
shl
mov
xor
push
stos
loope
mov
insb
movsb
ja
push
pop
dec
int3
incb
fistl
dec
and
sbb
add
sub
or
jo
sub
into
orl
call
rclb
ja
subl
xchg
es
xor
mov
adc
cld
popf
lock
iret
fnsave
and
pusha
push
lret
mov
aad
aaa
lret
dec
jno
popa
scas
lock
add
and
mov
lret
and
stc
add
loope
push
ret
fidivrs
jmp
scas
fdivr
or
repz
and
clc
mov
and
and
popa
sub
sbb
out
pop
inc
push
lret
bndstx
xchg
test
add
pop
lock
pop
dec
sbb
mov
mov
xchg
stc
adc
pop
aad
lods
je
sbb
push
pop
or
dec
in
fisubs
xchg
add
mov
sub
out
test
fcoml
cmp
dec
jp
icebp
adc
or
dec
mov
subl
addr16
icebp
clc
out
gs
adc
mov
pop
andb
jl
ja
das
and
popf
fs
test
jae
sbb
xor
rclb
pop
fs
mov
js
repz
rcr
in
mov
push
cltd
xor
iret
andb
daa
orb
sbb
xchg
adcb
pop
and
xchg
dec
mov
cmp
adc
es
and
push
push
jne
lret
cld
cld
and
adc
xchg
pushf
xor
nop
push
in
sbb
inc
adc
popa
cwtl
movsl
fidivl
daa
jle
cli
and
mov
test
cmp
fdivrs
lods
push
fsubr
orb
mov
jne
add
push
sbb
mov
inc
insb
cmpsb
fs
adc
or
adc
fnstenv
inc
aam
push
in
or
jns
add
xchg
pop
adc
ljmp
cmpsl
mov
orb
jns
jne
pop
lods
adc
xchg
sub
cmc
hlt
mov
es
cltd
and
inc
out
fsubrs
xor
mov
cmp
fldl
fdivl
mov
popf
push
inc
xchg
xchg
mov
push
mov
bound
xchg
jmp
mov
data16
or
lea
movaps
xor
fcos
out
es
and
fistpll
insl
stos
lret
inc
ffree
cmp
mov
test
add
and
jecxz
jl
mov
xor
mov
adc
fsubl
cltd
vsubss
inc
das
jne
pushf
in
je
xor
xchg
mov
sahf
add
cmpsl
out
clc
push
xlat
outsb
cmpl
movsb
cmc
adc
and
lcall
and
fcomps
inc
cmpl
cltd
aam
sub
sub
nop
jae
push
aas
adc
push
mov
outsb
in
sar
jl
and
pop
mov
lods
fdivrl
sub
cmp
outsl
adc
cmpsl
mov
and
sbb
es
adc
aad
push
rclb
lea
lock
dec
ljmp
fdivrl
jb
aas
sbb
inc
and
mov
add
movsb
fists
sti
add
mov
xchg
xchg
pop
and
je
int
push
xor
fs
jno
inc
test
sahf
int3
adc
inc
and
and
inc
fnsave
mov
mov
and
fs
in
mov
stc
sub
pop
arpl
mov
xor
jne
out
xor
mov
adc
aam
xor
dec
adc
cmp
jnp
aad
push
in
cmp
push
testl
rcll
push
popf
xor
add
and
jno
cmpsb
pop
xchg
push
popl
push
push
push
les
xlat
mov
pop
mov
pop
and
inc
fcmovbe
inc
jecxz
jmp
lods
inc
aas
push
outsb
add
xor
mov
in
dec
jecxz
cmp
test
lret
addr16
and
mov
repz
and
icebp
movsl
jae
mov
lock
jns
int
cmp
movsb
mov
out
out
and
or
scas
inc
mov
jns
scas
ss
sub
lcall
and
inc
fnsave
sbbl
iret
sti
fwait
popa
mov
pop
negb
sarb
dec
and
ds
in
scas
jne
jle
shlb
popa
jns
lahf
insb
int
or
ret
hlt
loop
add
mov
ret
repnz
inc
adc
inc
sbb
fbstp
jl
int3
mov
xchg
add
cmp
pop
cmc
ffreep
pop
cmc
cmc
add
xor
jge
inc
push
jne
test
push
lods
mov
scas
mov
fidivs
es
cmp
ljmp
jno
ret
pop
int3
arpl
xchg
sbb
jbe
cmp
pop
xchg
sub
mov
out
in
and
pushf
xor
xor
rcrl
jmp
jbe
loop
add
mov
jge
xchg
fwait
loopne
les
mov
insb
add
lidtl
fwait
mov
adc
loop
fidivs
lret
lds
fnsave
cmp
mov
fistps
or
in
test
cmp
push
fbstp
mov
mov
xlat
jg
or
stc
dec
sarb
add
adcb
xor
jo
scas
scas
inc
fidivs
int3
arpl
pop
xchg
sub
lea
out
lahf
js
rcll
xchg
sub
adc
add
xorb
dec
loop
or
inc
mov
mov
xchg
or
cmp
adcb
or
test
stos
mov
ret
nop
add
cmp
mov
daa
mov
fists
xor
mov
shrl
cmc
adc
int3
inc
or
es
std
xchg
lds
divb
xchg
sub
xchg
add
imul
sbb
mov
dec
gs
xchg
adc
in
test
inc
fmuls
stc
nop
pop
rorl
or
xor
int
cmp
jae
lods
sbb
iret
push
int
dec
sti
jb
sti
cmpsl
sbb
imul
in
adcl
mov
test
mov
xchg
xchg
sbb
mov
cmp
insl
pushf
xor
mov
inc
flds
movsl
into
rcrl
aam
cmc
je
daa
lods
pop
repnz
jns
sti
jns
sub
pop
sahf
sub
xlat
jbe
mov
and
xor
sub
dec
jecxz
hlt
dec
loop
mov
push
out
and
loopne
insl
cld
adc
in
jmp
pop
sbb
or
xor
cli
xchg
out
jo
push
ds
mov
xchg
sub
mov
mov
in
xchg
sub
or
xor
jae
sbb
sbb
insl
add
movsl
xor
nop
daa
sbb
or
insl
add
xor
add
in
jg
and
cli
xchg
sub
mov
mov
sub
repnz
push
and
or
fs
pop
repz
mov
scas
inc
xor
out
out
inc
fcompl
add
xor
inc
xlat
pop
out
es
testl
push
jmp
ljmp
testl
xor
pop
loope
or
testl
les
out
sub
movl
xor
sub
jmp
out
jno
shlb
or
cmp
nop
daa
pop
out
loopne
movb
sub
in
push
sbb
mov
cmp
sub
sbb
dec
in
add
pop
in
pushf
xor
and
sub
and
daa
mov
inc
fidivl
ds
in
jmp
and
cli
xchg
clc
stc
movsl
cmp
and
pop
sub
cli
xchg
add
lea
sbb
dec
add
xor
dec
loop
out
xor
push
sbb
dec
or
or
push
sbb
dec
or
pmaxsw
leave
push
sbb
cmp
shrb
out
adc
cmp
cmp
cmp
add
and
add
sub
fbstp
add
cld
sbb
inc
ficoml
or
mov
xor
jl
push
out
mov
inc
add
mov
out
adc
add
outsl
or
sbb
dec
or
sarb
testl
jno
dec
loopne
sahf
repz
call
scas
xor
adc
mov
and
roll
push
addr16
clc
or
call
push
pop
lcall
mov
nop
daa
and
inc
scas
inc
jne
popf
xor
xchg
data16
jg
mov
in
addr16
stc
nop
add
xor
outsb
and
adcb
ja
add
xchg
sub
cmp
insl
adc
xchg
inc
mov
cwtl
fcomi
xchg
mov
add
inc
mov
jne
fbstp
fcmovnb
pop
adc
js
fs
imul
adc
xchg
shll
add
xor
loope
cli
xchg
pop
or
jmp
mov
jo
add
cmp
rcll
cli
xchg
xor
shrb
push
movsb
cmp
movsl
jbe
shll
fs
push
dec
push
jmp
sti
mov
xchg
cs
mulb
mov
push
sti
out
sub
jbe
push
dec
add
test
ss
leave
mov
fldcw
push
incb
into
gs
test
sahf
inc
xlat
lret
mov
call
xorl
adc
jl
lea
jge
fnstcw
aad
mul
ja
es
jecxz
dec
adc
lods
pushf
vshufpd
pop
and
push
inc
pop
jae
je
and
mov
clc
out
cmp
dec
cmp
mov
inc
mov
xchg
adc
mov
push
cmp
jp
nop
fsubrs
lds
cmp
repz
mov
mov
sti
jecxz
pop
adc
ss
and
mov
clc
jecxz
sbb
sbb
dec
ss
sub
and
mov
jg
add
das
pop
lock
push
scas
inc
scas
mov
mov
repz
insb
aas
and
push
push
out
cmpb
mov
loope
fstp
mov
or
lret
bound
icebp
fnstenv
mov
push
out
mov
sub
and
out
xor
ds
push
sbb
in
mov
or
ss
ds
push
call
movsl
fnstenv
sub
out
js
cwtl
shll
adc
stc
popl
sbb
xchg
xlat
jbe
jmp
test
cwtl
subb
mov
push
das
fsubs
cmc
inc
mov
add
push
leave
lret
and
or
cmc
pop
lock
dec
cli
stos
sub
popf
js
and
pop
or
mov
push
lea
or
pop
jge
jle
add
xor
sbb
fwait
xchg
add
sarb
dec
mov
mov
push
sarb
pop
cmp
pop
insb
mov
push
imul
xchg
hlt
inc
cmp
dec
mov
imul
andb
sbbl
push
es
call
clc
and
cld
mov
inc
mov
bound
lds
and
popf
in
cmpsl
insb
mov
or
xchg
dec
ds
addl
nop
movsb
js
add
push
out
mov
nop
pop
cld
icebp
xor
mov
lds
or
sbb
xchg
mov
js
mov
jp
cmpsl
out
movb
or
xchg
mov
inc
fiaddl
adc
addr16
addl
or
inc
mov
xchg
push
and
cmpsb
popa
xchg
mov
mov
fsubrl
dec
leave
sahf
xchg
out
pop
xor
mov
push
stos
stc
mov
in
iret
pop
rcl
jp
xchg
cmp
clc
repz
ret
rcrb
push
lret
ds
push
sub
jb
jp
xchg
push
sbb
outsb
pop
jne
xchg
daa
fnstenv
adc
mov
xchg
inc
and
mov
mov
lods
pop
push
mov
mov
pop
into
inc
aam
push
inc
hlt
mov
into
aaa
and
test
dec
icebp
or
test
add
xchg
xchg
jns
mov
xchg
jp
out
xchg
dec
lcall
ja
mov
pop
xchg
sub
push
dec
mov
pop
addr16
into
inc
cmp
xor
mov
stc
pop
add
jp
push
jno
hlt
mov
xchg
ficoms
jp
rorb
movsb
jl
pop
cmp
xlat
add
or
in
repnz
loop
xor
jae
movsl
pop
or
or
and
out
addr16
test
adc
jg
pop
cli
dec
insl
daa
xchg
xchg
jne
scas
inc
push
inc
js
ss
mov
inc
push
pop
lret
bound
arpl
insl
orl
jno
cmp
and
mov
jne
paddw
sbb
push
dec
push
adc
add
xorl
dec
mov
subl
mov
push
cmp
popa
orl
addr16
movsb
pop
inc
mov
pop
push
rcrl
sahf
jo
fs
xchg
pushf
nop
outsl
pop
jp
bound
pop
mov
lea
dec
mov
inc
rolb
push
cmp
push
test
aaa
fisttpl
or
gs
fdivl
and
lcall
or
xchg
cmpsb
imul
testb
dec
cmp
jo
outsb
scas
bound
es
mov
push
imul
hlt
popa
clc
and
inc
add
pusha
jo
pushf
mov
lds
gs
jo
decl
jg
mov
xchg
sub
and
ljmp
pop
adc
or
add
xchg
xchg
add
cwtl
test
jle
and
inc
rcrb
inc
jb
adc
jg
mov
inc
das
inc
movsb
bound
mov
mov
in
bnd
mov
mov
int3
shlb
mov
mov
xor
inc
mov
jge
cmp
mov
lods
fwait
dec
fcomip
int
xchg
fidivs
pop
out
mov
stc
das
adc
cmp
insb
mov
add
adc
push
lods
mov
jp
cs
inc
fldcw
out
or
cmp
adcb
mov
xor
push
test
push
pop
lidtl
xchg
cs
negb
cmp
add
cmpsl
cmp
movsb
pusha
ficoml
jecxz
mov
xchg
mov
cli
fnstenv
add
mov
repnz
sti
or
jbe
call
mov
sarl
fadd
mov
int
push
aad
fwait
xchg
loopne
lods
inc
inc
add
adcl
or
inc
ja
addr16
pop
and
repnz
daa
cwtl
and
insl
test
movsb
pop
sbb
popa
clc
nop
pop
mov
frstpm(287
push
out
dec
ret
aam
push
push
or
xor
dec
pop
shlb
cmp
push
jg
adc
das
cmp
sbb
sbb
xor
into
arpl
inc
pushf
or
mov
jge
hlt
mov
jno
sbb
lods
pop
insl
data16
cmp
test
and
insb
cmp
outsb
lret
gs
jecxz
or
cmc
add
adc
jb
sbb
add
add
outsb
lret
aam
in
and
pop
shl
lret
gs
pop
dec
pushf
xchg
sub
mov
mov
lret
cmp
mov
fistl
xchg
sub
sub
insb
iret
outsl
movsb
in
dec
repz
jb
xor
jns
cmpsb
cmp
mov
fstl
push
fimull
cmpsb
mov
jae
cli
ficoml
jmp
lret
leave
mov
sti
shlb
leave
sbb
xor
push
in
orb
out
adc
cwtl
inc
cmp
push
mov
hlt
out
sbb
fld1
das
ljmp
mov
push
xor
xor
fisttps
js
or
mov
jae
into
push
addr16
mov
fisttpl
mov
mov
test
sub
xor
cltd
imul
cmp
cmp
movsl
adc
fildll
adc
sub
xchg
mov
sti
orl
push
mov
shrb
les
adc
repnz
shll
jmp
pmaxub
pop
les
std
cmp
inc
adc
pop
stos
push
xor
outsb
mov
fs
scas
inc
sub
mov
pushf
jp
pushf
dec
adc
out
stos
aas
jae
mov
sub
push
clc
xor
mov
and
xchg
and
cld
xor
ja
into
bound
cmp
jb
aam
daa
inc
inc
mov
pop
push
push
lret
dec
loope
push
xor
inc
cmpsl
sub
cli
and
out
test
adc
cmpb
nop
pop
sub
lea
shlb
cmp
mov
jecxz
lret
cmp
testl
ljmp
mov
xor
addr16
inc
lods
movl
outsl
mov
pop
pop
dec
xchg
jge
jl
push
cmp
mov
xchg
dec
inc
imul
xchg
xor
adc
jb
movsl
mov
rorl
loopnew
sub
mov
xchg
mov
sbb
pushl
xchg
xchg
inc
fld
add
dec
test
lods
mov
push
int3
mov
lock
call
adc
sbb
push
mov
sbb
xor
or
sbb
clc
cmc
xor
stos
cmp
add
in
adc
sub
sti
shrl
pop
ljmp
ljmp
or
xchg
sub
jle
subl
jl
pop
stc
and
inc
jp
cli
inc
inc
fiaddl
dec
mov
xor
push
int3
mov
repnz
into
lret
inc
pop
fsubs
fsub
pop
mov
pop
push
mov
jo
push
mov
push
cmc
arpl
cmp
jo
fldenv
push
in
sti
mov
inc
mov
dec
test
outsb
js
xor
jl
inc
data16
cwtl
xor
mov
mov
pusha
idivl
sub
movsb
rcr
jae
loop
aam
roll
fnsave
out
cmc
in
push
rcrl
aas
inc
mov
push
push
fs
aas
pop
push
rorb
inc
insl
dec
inc
rclb
mov
pop
sub
arpl
dec
xor
mov
cmp
push
shr
jp
add
inc
in
pop
test
loop
stos
mov
stos
aad
movsl
jge
shll
movsb
jle
ret
aam
xchg
sub
mov
out
mov
fucomi
inc
loope
pop
stc
mov
call
lret
popf
ja
out
popa
into
leave
mov
sub
xlat
addr16
cmp
xchg
xchg
insb
mov
rdtsc
and
stos
jnp
out
push
pushf
test
push
ret
xchg
mov
push
xorb
pop
mov
loope
cmp
push
mov
test
push
pop
stc
push
cwtl
outsl
mov
xchg
mov
push
push
sub
mov
aad
sbb
lea
or
inc
xor
push
jmp
imul
and
call
cmp
stos
repnz
repnz
movsl
arpl
stc
xchg
jp
nop
andl
ret
inc
ficompl
stos
inc
cmc
imul
xchg
push
lcallw
lods
inc
test
jmp
mov
add
cwtl
xchg
dec
aas
cmc
sub
jne
out
cmp
dec
ret
lcallw
into
sub
jbe
adc
xor
xchg
jnp
jb
fmull
cltd
mov
pop
das
mov
icebp
das
hlt
lcall
or
sti
xchg
adc
add
add
cmpsb
xchg
daa
and
psraw
fsubl
cmp
stos
sub
xor
and
fdivrl
xchg
pop
iret
inc
test
xchg
hlt
xor
pop
inc
mov
or
push
mov
or
xchg
sbb
lcall
mov
jbe
jmp
lods
jg
stc
mov
push
adc
inc
ret
scas
xchg
int
pop
in
adc
dec
pusha
movsl
jmp
mov
popl
ret
cld
or
int3
shll
sti
push
add
ljmp
icebp
ror
popa
lods
adc
aaa
cwtl
ljmp
fwait
mov
shrl
xor
cmp
mov
mov
hlt
jg
ret
or
cmpl
cs
mov
clc
sub
into
mov
push
in
adc
adc
fsub
out
xchg
stc
mov
movsl
dec
cwtl
cld
icebp
mov
cmpsb
xor
and
in
push
aas
out
mov
or
roll
sbb
jno
sar
dec
fcoms
imul
popl
and
lock
addr16
cltd
cs
fwait
mov
ljmp
xlat
outsb
divb
mov
test
mov
cmpsb
sub
fwait
addl
xchg
call
lea
stos
subb
test
jns
push
ljmp
cmp
add
jns
and
or
mov
repnz
dec
xcrypt-ecb
cmpsl
dec
mov
or
rcrb
mov
test
jg
mov
cmpl
pop
ret
xchg
add
scas
mov
lcall
jnp
sarb
call
or
adc
in
add
je
add
jmp
clc
negl
pop
sbb
std
fs
xor
jno
sbb
in
push
cli
xchg
mov
pop
or
cld
out
xchg
ret
mov
add
in
stos
mov
hlt
push
iret
mov
enter
xor
dec
push
push
pop
cld
push
rorb
sbb
scas
dec
shrb
jmp
mov
mov
mov
push
lcall
sarl
outsl
jl
ss
subps
mov
pop
js
push
pop
cld
xchg
mov
jmp
push
std
sbb
popf
xor
fimuls
fsubs
adc
je
sub
stc
ds
xorl
cltd
andb
jl
cwtl
mov
mov
lahf
xchg
gs
pop
rcrl
cwtl
pop
shrl
inc
lret
cmc
subl
jbe
sub
mov
add
in
sbb
push
into
gs
movsl
mov
jne
movsl
push
sbbl
bound
std
sub
flds
std
ja
ljmp
stos
mul
mov
clc
xchg
jle
sbb
push
pop
cmp
and
xor
mov
loopne
inc
cli
js
mov
out
cmp
sub
out
pop
or
out
push
iret
mov
dec
add
ret
inc
sub
dec
cmp
inc
js
push
dec
popa
sbb
inc
dec
cltd
subb
jo
jb
mov
lds
repz
xchg
pop
inc
pop
or
lds
loope
in
xor
stc
adc
push
movsb
lret
testl
pop
pop
rcrb
shll
std
das
xor
ret
adc
jmp
mov
pop
or
push
fisubl
mov
cmc
pop
popa
dec
ret
dec
arpl
imul
mov
dec
sub
dec
pushf
insl
imul
or
sub
inc
pause
sub
adc
adc
adc
das
popf
xor
xchg
mov
pop
mov
sbb
jl
ficomps
dec
movsl
cwtl
bound
fstpt
adc
inc
ficoms
xchg
adc
and
xchg
and
das
sbb
sbb
repz
sbb
test
int3
push
cli
push
lds
inc
mov
femms
dec
cltd
nop
sub
loopne
aas
xor
mov
cmp
push
mov
lea
cmc
push
lods
arpl
into
and
sahf
mov
or
scas
jge
rcrl
ret
pop
int3
movsb
mov
or
loop
add
cs
xchg
mov
xlat
dec
rolb
rcrb
sbb
mov
mov
sti
jns
out
ret
ret
jmp
rorl
push
mov
jl
xchg
cmc
stos
fldenvs
dec
les
popl
jg
jbe
decl
or
fwait
inc
add
addr16
sub
sbb
push
jl
mov
outsl
mov
xchg
pop
mov
fsub
loopne,pt
jecxz
and
fidivl
inc
popf
mov
arpl
push
lret
mov
pop
jo
sub
jbe
imul
imul
addr16
dec
shlb
mov
addr16
inc
mov
mov
sti
add
outsl
gs
cli
pop
sub
jg
push
mov
mov
insb
lcall
jae
and
pusha
into
or
sbb
sub
nop
fwait
sarl
es
or
dec
pop
out
out
idivl
shll
jl
mov
sbb
shrl
cmp
shrb
sub
and
jl
lcall
test
cmpsl
cmpsl
and
test
inc
inc
mov
inc
jge
cwtl
dec
inc
cmp
addr16
loope
ss
jbe
push
out
pop
daa
aas
aad
jle
int
or
outsb
daa
mov
cmp
mov
inc
popa
inc
lret
jb
bound
fdivs
push
daa
in
push
adc
out
pop
or
xchg
mov
adc
add
aad
rcl
adc
pop
mov
add
cli
rcrl
mov
fwait
xor
ret
mov
in
cltd
mov
fcoml
fistpll
into
push
dec
iret
mov
dec
or
aaa
out
int3
fwait
stos
inc
flds
out
xlat
cwtl
dec
shlb
mov
mov
sti
dec
rcl
mov
shr
test
ret
scas
jbe
clc
mov
add
into
push
popf
jmp
or
xchg
leave
push
adc
movsb
fnstsw
mov
adc
adc
ret
add
and
scas
sbb
cld
ror
pusha
add
adc
mov
jmp
into
or
adc
loop
outsl
enter
mov
out
ret
test
idivb
pop
sub
sub
sub
pop
xchg
je
cmpsb
adc
mov
pop
add
mov
xorb
xchg
mov
in
pusha
fcomps
or
adcb
sbb
arpl
leave
push
mov
enter
les
fadds
xchg
out
and
adc
or
in
leave
pusha
mov
in
repnz
push
or
mov
out
cmpsl
pop
decb
fcoml
mov
pop
lods
sbbl
fcmovnbe
iret
cmp
fwait
xchg
icebp
cmpsb
fcoms
test
sbb
fisttpl
fists
add
dec
ss
lds
or
jmp
mov
mov
jnp
lret
loopne
shlb
add
pop
out
adc
push
mov
mov
lea
loopne
sti
jl
lret
aas
hlt
ror
movsb
jle
xlat
pop
mov
loopne
idivl
ljmp
movsl
fmull
call
std
fisttpl
mov
stos
mov
stc
out
push
scas
xor
jno
stos
dec
or
push
popf
sub
pop
mov
xor
push
or
ret
js
imul
imul
fwait
jmp
inc
adc
sub
jecxz
aaa
mov
pusha
mul
fdivrs
adc
in
add
or
jg
sti
dec
in
add
decl
lods
das
add
sbb
nop
sub
test
inc
dec
push
cmp
sbbb
cmpsb
in
sbb
cmp
out
icebp
mov
jns
pusha
inc
sub
pusha
inc
push
mov
outsb
pop
push
iret
push
sub
push
inc
test
mov
and
jno
mov
in
push
lret
pop
scas
cmp
and
mov
mov
push
or
inc
jp
xchg
cmp
adc
insl
pop
lock
aaa
outsb
cs
loop
mov
or
sbb
dec
lcall
pop
jp
add
in
mov
fs
push
lods
call
xor
xchg
imul
mov
cmp
pop
loopne
cmp
cmpsl
pop
shll
mov
push
loop
movsb
pop
call
scas
mov
mov
scas
shrb
jo
mov
mov
cmp
pop
xchg
aas
and
xor
push
repz
pop
sub
jle
clc
mov
push
mov
sbb
stc
adc
pop
leave
mov
out
inc
mov
xor
pop
leave
in
and
cmp
and
popa
into
addb
mov
cwtl
add
out
mov
jae
sub
int3
dec
int3
addr16
inc
aad
mov
adc
cwtl
pop
jne
pop
or
stos
push
push
out
repz
jbe
mov
add
xchg
lahf
andb
sti
xor
addr16
jecxz
push
mov
fbld
jno
jge
xor
push
cs
clc
mov
jb
das
and
mov
out
fdivs
sbb
mov
cmc
or
ret
fisttpl
jmp
in
sar
mov
xlat
pop
pop
in
lahf
xchg
mov
sbb
sbbl
mov
cmc
outsl
ror
aaa
sbbl
les
fstpt
cld
ss
adc
jno
add
xor
out
xor
adc
ja
ljmp
aas
cs
iret
shrb
pop
mov
or
fs
xchg
outsb
sub
dec
cmc
sbb
and
and
sbb
and
mov
mov
negb
scas
cltd
inc
lret
repnz
sbb
ds
fwait
outsl
cwtl
test
pushf
add
add
lret
popf
adc
lret
cmp
jl
push
dec
fcomp
dec
ret
insb
pop
leave
dec
mov
adc
scas
push
in
ljmp
pusha
pop
or
testb
push
dec
adc
pop
les
int
push
jmp
pushf
jb
mov
push
sub
mov
xor
cmp
cli
pop
shll
cmp
lds
sti
mov
or
stc
xchg
xchg
aas
adc
outsb
int3
aas
jb
popa
clc
jl
ficoml
popf
dec
mov
lcall
rorl
jnp
mov
pop
cmc
dec
lods
xchg
jbe
sub
push
xor
push
jb
inc
stos
push
cmp
mov
in
xor
in
mov
and
cmp
in
ds
and
sbb
lahf
sbb
sub
or
fs
cmp
sub
mov
rorb
bnd
add
xchg
sub
add
mov
cltd
jbe
enter
xchg
cs
add
std
pop
lock
lock
dec
lahf
test
enter
or
xor
js
pop
xor
add
sbb
or
cmpsl
cmp
out
or
into
ja
sbb
fists
cmpsl
ljmp
sbb
and
sub
jecxz
xchg
scas
mov
push
out
cwtl
mov
mov
sbb
ret
cmp
je
orl
dec
mov
and
aas
jbe
mov
push
in
add
xor
push
mov
pop
jb
mov
pop
xor
test
pop
imul
push
orl
mov
sbb
arpl
das
or
cmp
test
push
fwait
cltd
stos
inc
sti
mov
pushf
mov
mov
jae
sahf
je
cs
mov
lret
mov
dec
inc
add
push
dec
push
into
push
cs
cli
jae
daa
mov
xchg
test
sub
cli
sub
dec
jecxz
dec
sbbl
mov
mov
mov
cmp
jns
les
lcall
xlat
in
pop
scas
push
stc
add
jno
push
mov
xchg
push
ljmp
jno
push
lock
icebp
and
es
js
je
lods
inc
mov
fmulp
bound
jmp
jmp
imul
lock
xlat
and
movsl
adc
inc
ficompl
sub
data16
clc
lods
xchg
mov
fisubrl
or
popf
xor
sub
sbb
cmpsl
jg
cmp
rol
pop
add
clc
dec
and
push
lods
mov
shll
lret
sbb
cld
adc
inc
sbb
jno
xchg
outsl
pop
lock
shll
or
sub
nop
addr16
cltd
mov
and
add
mov
aas
push
daa
mov
xchg
test
mov
les
sbb
sti
lea
sti
xchg
push
lods
sbbl
cmpsb
add
dec
adc
xchg
sub
xor
mov
xchg
mov
testb
adc
xchg
push
xor
inc
xchg
push
cmpsl
pop
jl
mov
jl
into
and
sbb
jb
aaa
into
dec
xchg
jae
lds
inc
pop
xchg
sub
test
lock
add
fidivs
jmp
jge
lds
movsl
idivb
cld
xchg
jo
or
or
imul
push
lea
out
xchg
addr16
cmc
std
inc
fsubrl
pop
sub
push
cmc
arpl
es
and
pop
call
jbe
lods
push
fst
xor
inc
data16
fs
and
repnz
and
test
pop
test
loop
fdivr
sti
push
adc
insb
add
fisttps
jns
ds
repnz
adc
cld
mov
mov
ljmp
shll
call
mov
or
test
lods
jl
icebp
clc
fnstenv
jae
xchg
lret
jb
push
mov
scas
leave
pop
push
mov
test
pop
movsb
popf
and
test
ljmp
cwtl
rol
xor
ret
lcall
lahf
or
movsb
movsl
pop
insl
imul
sbb
cmp
pop
cmpsl
andw
mov
les
cwtl
outsl
adc
leave
dec
dec
xchg
xor
jne
notl
subl
mov
daa
sbb
xor
cmp
adc
xor
jp
ret
cmp
push
inc
cld
xor
push
jl
add
jg
fsubp
and
jp
cmp
loop
sar
andb
mov
aad
stc
leave
mov
xorl
mov
cld
ljmp
inc
nop
mov
popf
sbb
popf
pop
xchg
test
and
mov
sub
or
mov
add
int3
jne
inc
les
sbb
pop
pop
jge
xchg
inc
stos
notl
fimuls
cmc
clc
out
mov
and
data16
pop
fwait
cmp
test
inc
jno
insb
or
mov
je
bnd
cli
out
pop
into
xchg
push
data16
mov
lahf
aaa
arpl
addr16
pushf
insb
ljmp
push
push
mov
sub
pushf
mov
sahf
shll
fwait
mov
iret
insl
inc
stos
mov
rolb
pop
and
and
sbbl
test
jmp
clc
movl
add
add
add
fdivrl
xlat
scas
add
adc
xchg
cld
orb
adc
fsubrl
jg
mov
lea
iret
inc
aad
insl
pusha
add
daa
shrb
lret
push
lods
aad
ret
shl
fcoms
and
xor
push
out
mov
push
mov
imul
fidivs
xchg
mov
jg
xchg
sub
add
xchg
mov
add
mov
lea
hlt
jp
out
cmp
lret
outsl
or
insl
mov
imul
iret
and
mov
xchg
sub
sub
cltd
test
cltd
imulb
add
inc
stc
sub
ds
mov
mov
mov
push
outsl
push
inc
mov
lds
js
add
cmp
imul
nop
lods
inc
add
fiadds
sahf
xor
push
nop
lock
dec
dec
loop
and
movsl
push
mov
sub
xchg
repz
jns
mov
inc
je
fldl
mov
loopne
rcrl
aam
addr16
sti
pop
lods
sbb
fistpll
sahf
in
mov
sub
cmp
aam
movsl
and
or
movsb
xor
fcmovnb
xchg
xor
jmp
adc
dec
in
mov
adc
xchg
inc
andb
xchg
in
movsb
mov
loop
pop
add
add
daa
push
push
push
cli
inc
test
mov
push
inc
push
cmc
andl
jae
cmp
fcoms
mov
and
fcmovne
xor
and
jbe
fiadds
sarb
bound
fwait
mov
mov
jecxz
xchg
scas
xor
jbe
pop
add
das
mov
push
jle
les
nop
cmp
pop
mov
and
cmp
insl
mov
pop
add
imulb
xor
call
pop
lret
lods
in
jne
shrb
jne
nop
cmp
mov
mov
out
mov
xlat
mov
pop
sahf
add
mov
pop
jmp
aad
jmp
inc
or
xchg
enter
pop
add
push
add
lret
adc
adc
and
add
inc
pop
gs
mov
jb
std
out
fldl
inc
cltd
add
mov
lods
pop
add
cld
fnstsw
and
mov
mov
stc
icebp
sarb
or
mov
mov
cld
pusha
pop
sub
adc
mov
popf
cltd
inc
dec
adc
int
gs
hlt
je
adc
lock
std
dec
dec
adc
mov
mov
pushf
dec
int3
xchg
jo
stc
andw
fnstenv
scas
xor
xchg
mov
mov
sbb
rorl
stc
adc
ficompl
rorb
push
lret
stc
roll
dec
pop
mov
movsl
mov
clc
bound
jbe
fldl
loop
xchg
mov
retw
loopne
sbb
xor
mull
scas
je
in
jge
pusha
mov
xchg
aam
add
lock
ljmp
dec
mov
mov
pop
stc
push
jb
int
push
fdivrl
lock
pop
pop
sbb
inc
adc
mov
hlt
xchg
mov
jns
cmp
push
and
xchg
pop
fnstcw
sbbl
pop
lea
mov
inc
fnstcw
jns
pop
xlat
cmpsl
xor
push
xchg
inc
mov
hlt
data16
jmp
sbb
inc
stos
sub
mov
sub
fnstcw
dec
adcb
je
jb
jnp
or
push
lcall
test
out
test
jnp
fidivl
idivl
popa
test
dec
or
fcmovnu
ja
pop
xorl
mov
je
fsubr
insl
jb
repnz
add
push
int
int3
jecxz
or
in
das
outsl
je
les
mov
sbb
aaa
jne
stos
mov
pop
cld
dec
fsubs
mov
xchg
aas
cltd
sti
sbb
cmpsb
out
push
int
and
clc
mov
movsl
jecxz
dec
pop
test
pushf
jl
xchg
arpl
pop
sarl
sub
push
ja
adc
aam
sub
xchg
lds
stos
pop
jge
push
mov
stos
imul
xchg
or
pop
cli
push
push
lods
sub
mov
xchg
xchg
xchg
pop
pop
xor
outsl
xchg
jno
jno
dec
adc
jns
roll
aam
jg
xchg
push
adc
into
scas
mov
sub
in
jo
into
or
push
add
sar
ret
xchg
push
adc
pop
test
ljmp
rorb
adcl
mov
sbb
pop
add
out
sbb
outsb
sbb
jno
push
mov
lret
adc
ret
push
pop
mov
stos
das
mov
dec
push
xchg
sub
push
and
inc
out
dec
mov
scas
mov
loop
or
push
sti
sbb
mov
stos
out
jns
cmp
xchg
aas
and
pop
mov
mov
dec
push
les
idivb
pop
mov
cmpsb
insl
push
cld
adc
out
jae
nop
lods
ss
xor
adc
jns
test
inc
or
addb
sub
cmp
test
mov
or
lret
popa
push
and
jle
push
jl
xor
popa
in
jno
repnz
sbb
xor
push
adc
cmp
jp
das
mov
ds
push
inc
jno
fs
ljmp
inc
test
js
mov
xchg
cmp
dec
ljmp
fucomi
mov
cmpsb
sub
and
mov
out
add
push
cli
arpl
mov
sarb
ss
mov
cmpsb
daa
rcr
push
mov
sub
movsb
xchg
cmp
cs
popf
orl
int3
push
addr16
mov
dec
mov
mov
jg
or
dec
push
pushf
sbb
icebp
andl
jg
adc
fdivrl
or
outsl
fmuls
or
push
sub
fdivrl
xchg
add
enter
inc
psraw
cmp
fsubs
add
add
scas
and
data16
jp
loopne
push
add
arpl
dec
or
cmpb
popf
add
in
lock
std
xor
pop
in
pop
sti
mov
out
hlt
fs
int
mov
mov
fdivs
lods
sbb
iret
mov
ror
push
pop
add
fisttpl
mov
inc
mov
les
and
cmp
mov
dec
or
rcr
jbe
lret
cld
and
popa
mov
mov
push
stc
mov
lods
xor
mov
mov
cld
nop
mov
test
ja
lret
mov
cmp
pop
sub
addr16
mov
test
arpl
mov
clc
pop
mov
xchg
aas
mov
lea
shl
jo
imulb
dec
mov
mov
js
add
mov
mov
out
insb
adc
or
push
sub
adc
sarl
ds
mov
or
push
lret
addr16
test
imul
enter
pop
sub
roll
sbb
in
clc
inc
jle
fsub
pop
mov
xor
lods
sub
and
dec
inc
mov
pop
or
popf
cmp
push
cltd
ds
icebp
data16
sub
push
or
and
lret
mov
ds
xor
mov
mov
pop
cld
sahf
sbb
xor
jb
outsb
and
loopne
cmpsb
sub
repz
add
jb
mov
push
cli
fldenv
xor
cmp
lock
in
cmp
xchg
test
aaa
dec
or
pusha
popa
clc
bound
mov
out
adc
jmp
dec
test
cmp
sub
xchg
sub
and
cltd
push
je
dec
ror
xchg
xchg
ljmp
enter
dec
into
mov
push
add
shrl
out
out
lock
adc
dec
enter
xchg
push
mov
or
push
out
lret
hlt
or
push
sbb
lods
sub
and
int
aaa
out
push
sbb
inc
adc
ja
sbb
sub
stos
xor
pop
call
scas
cmpsb
xchg
in
mov
dec
sbb
xor
lds
sub
jo
mov
xor
inc
push
mov
cld
enter
push
sbb
sub
mov
mov
lret
xchg
hlt
mov
lahf
inc
fnsave
out
or
jge
outsb
cs
and
std
pop
insb
cmp
jle
mulb
aad
idiv
ret
jmp
sbb
jae
rcrl
mov
cli
inc
cmpsb
das
push
ja
adc
cmp
les
jo
xchg
roll
sbb
xchg
clc
arpl
aam
cmp
fcoml
mov
xor
jns
sub
jae
sbb
mov
sub
dec
addr16
fistps
push
add
pop
mov
push
add
cmp
in
loop
leave
mov
cli
pushf
aaa
add
das
stos
js
jns
adc
mov
or
roll
pushf
sti
and
mov
sub
mov
sbb
adc
pop
inc
inc
lahf
ss
xchg
imul
or
gs
movb
cmp
into
adc
leave
xchg
lds
add
fnsave
rclb
cmp
mov
int
sub
fmuls
xchg
adc
pop
pop
sarb
repz
mov
popa
lock
fistpll
xor
push
ret
sub
xchg
popa
sbb
cmp
lods
test
mov
add
pop
rcll
mov
dec
ret
and
nop
push
add
lods
sub
inc
fisubs
rcll
enter
add
push
xor
in
mov
sbb
xor
cmc
data16
das
mov
iret
jmp
test
in
xlat
cmp
jp
sub
data16
addr16
jo
js
test
ficompl
cmpsl
sub
pop
je
insl
cmpsl
mov
pop
mov
xchg
nop
lahf
inc
test
fldl
rclb
mov
js
or
cli
adc
sub
inc
mov
mov
lret
mov
mov
mov
cmp
cmp
stc
inc
jp
pop
gs
dec
adc
je
jp
aas
lcall
and
xchg
inc
test
popf
cmpsb
mov
int
mov
int3
mov
mov
movsb
xor
mov
sub
mov
and
jns
nop
cmp
mov
int
mov
icebp
lds
sub
ja
and
inc
push
clc
cmp
imul
xor
add
adc
scas
xor
mov
out
jo
daa
mov
mov
cmp
xor
sub
jb
cwtl
fistpll
pop
mov
mov
rorb
add
sbb
sub
fiaddl
js
jns
jl
negl
imul
adc
add
sti
and
lea
pop
mov
test
imul
dec
sahf
cmp
inc
add
push
dec
sub
pop
mov
movsb
or
adc
lock
test
jmp
cwtl
cmp
sub
insb
jle
arpl
pop
lahf
mov
jns
das
mov
push
fdivs
and
or
mov
mov
mull
movntq
xchg
scas
sbb
nop
jnp
les
xchg
sub
mov
mov
arpl
mov
pop
xchg
or
or
pusha
out
je
mov
push
repz
imul
call
or
insl
ret
mov
jp
frstors
and
xor
enter
fs
hlt
add
jb
jecxz
fidivl
xchg
cmp
mov
out
imul
and
mov
mov
mov
sti
sahf
cs
es
bound
dec
or
jge
movsb
ljmp
mov
negl
lods
inc
push
or
push
mov
mov
pop
dec
pop
push
add
sbb
xchg
push
ljmp
jbe
xchg
mov
mov
mov
scas
outsl
cmc
rclb
push
sti
mov
call
pop
out
ret
sbb
pop
shlb
mov
movsb
xchg
cmp
mov
fistpl
mov
xchg
sahf
and
faddl
orl
inc
ds
cmc
and
loop
in
jle
je
jmp
std
sub
push
in
dec
or
sbb
inc
sbb
add
mov
jb
jne
mov
inc
jl
mov
jmp
idivl
cltd
std
push
roll
repnz
adc
sahf
in
sub
jg
adc
xchg
sub
ds
dec
outsb
pop
scas
xor
in
cmp
adc
fnstsw
movsb
lea
push
mov
insl
inc
or
into
sbb
insb
and
insl
dec
jne
in
push
fdivs
je
leave
sbb
push
lret
adc
lods
fisttpll
or
or
aam
js
cmp
int3
lock
cmp
pop
add
rol
stos
notb
push
mov
mov
movsl
adcl
xor
cmp
rolb
mov
movsb
xor
jecxz
dec
or
bound
cltd
in
jle
cmp
mov
lret
xchg
add
inc
or
push
inc
or
jge
jae
aaa
push
stc
std
sbb
aad
in
jl
jbe
dec
shld
test
pop
mov
lea
cmp
sbb
imul
test
ja
jo
repz
mov
int
pop
scas
fidivrl
subl
aas
test
jl
jno
je
xlat
outsl
xchg
mov
inc
sbb
jae
call
shll
mov
lea
aaa
ja
cs
imul
decl
xchg
int
mov
pop
sbb
cmp
lret
inc
icebp
sbb
outsb
jmp
stc
roll
cmp
insb
mov
adc
lods
push
call
sbb
cmp
cmpsl
sbb
sub
ret
xor
sub
cwtl
out
or
int3
negb
xchg
cltd
inc
sub
push
scas
cmp
ret
mov
leave
xchg
xchg
ja
xchg
rcrl
xchg
lahf
inc
lods
jmp
jae
xor
mov
out
push
fwait
sbb
jp
sub
mov
lods
sub
kmovb
in
je
out
sbb
sub
cmp
dec
mov
lcall
or
xorb
das
mov
data16
insl
mov
pop
mov
rcll
movsl
lds
int3
adcl
xor
push
cmc
pushf
rorl
scas
pop
mov
add
mov
dec
pushf
mov
mov
xor
inc
cmpsl
aad
mov
xor
add
cltd
movsb
inc
pop
push
jg
lds
outsl
add
negb
jae
loop
push
insl
fstpl
push
js
sbb
pusha
idivl
loope
adc
push
mov
sbb
shlb
movsl
jbe
sub
or
roll
dec
mov
dec
push
or
push
xchg
test
mov
jmp
das
cmpsb
aaa
fwait
aas
cmp
sarl
push
pop
add
mov
sbb
stos
xor
outsl
out
sbb
push
jl
inc
fldl
and
fsubrs
mov
rorl
and
xor
dec
test
xlat
sbb
jmp
add
clc
data16
mov
dec
jl
xor
fdivs
sub
cmpsl
lock
xor
das
push
add
dec
or
cmp
sbb
adc
fdivrs
daa
out
imul
lret
mov
orl
test
dec
lret
pop
stos
cs
jne
inc
cmc
hlt
or
and
push
ret
pop
std
sbbb
sub
adc
xor
mov
xor
lret
ds
jmp
xor
adc
ss
mov
lods
sbb
std
fbstp
xor
push
jne
push
add
xlat
rclb
ffree
or
insb
sbb
cmp
js
ja
idivb
test
hlt
cli
pop
repz
xor
add
jbe
mov
dec
pop
jg
adc
inc
popa
cmp
xchg
mov
push
in
hlt
mov
adc
stos
xor
pop
cwtl
inc
jl
add
movq
mov
mov
jo
cli
pushf
sub
xchg
roll
int
ss
jmp
rcrb
lea
das
stos
xor
rorl
push
add
sahf
scas
pop
stc
mov
mov
xor
pop
std
vpackuswb
in
cwtl
inc
push
or
sbb
fmull
sbb
sbb
test
xchg
inc
aam
mov
sbb
fbstp
data16
cmp
shrl
pop
cmp
icebp
arpl
lods
daa
andl
lods
cmp
xchg
add
roll
enter
out
mov
stc
xchg
inc
adc
call
fbstp
sub
stos
xor
loop
push
mov
out
iret
hlt
pop
cmp
sbb
sub
xor
loope
dec
adc
icebp
sarl
jl,pn
inc
ds
jae
xchg
push
cld
leave
stos
inc
or
push
jo
data16
mov
divb
loopne
shr
cvtps2pd
or
movsb
sub
pop
xchg
cmp
cmc
xor
add
mov
das
iret
mov
lock
fs
push
cld
adc
inc
jmp
push
fdiv
add
push
pop
and
outsb
loop
jne
je
xor
sub
sbb
adc
int3
xor
lcall
test
mov
stos
mov
adc
inc
or
stos
hlt
push
add
push
jmpw
pop
add
aas
out
push
mov
dec
or
lea
jnp
iret
lods
jmp
sbb
movsb
pushf
xor
sub
leave
or
cmp
cwtl
inc
xor
movsl
daa
imulb
sub
pop
push
aaa
cwtl
into
dec
pusha
out
pop
sbb
aad
mov
pusha
jne
mov
pcmpeqw
mov
sbb
adc
inc
inc
adc
mov
xchg
pop
or
loope
cmp
sub
mov
pop
das
test
mull
pop
mov
mov
pop
push
gs
mov
mov
popf
inc
push
hlt
fstpt
mov
cmpsl
mov
addl
jecxz
iret
out
sbb
hlt
sbb
gs
test
bound
jecxz
hlt
adc
push
int3
xchg
inc
or
sbb
bound
stos
dec
jne
rcrl
push
hlt
adc
cmp
insl
lods
iret
stos
jnp
pop
sub
or
bound
ja
out
imul
dec
mov
mov
ds
mov
testb
lock
mull
in
ja
or
int3
xchg
aad
in
lock
xchg
pop
and
repnz
lock
addr16
shll
cmp
jmp
mov
or
lret
aad
mov
fnstsw
dec
inc
cmp
jnp
jmp
std
or
adc
enter
mov
xchg
add
imul
push
jnp
sub
dec
sbb
xchg
sub
repnz
mov
fwait
xor
mov
dec
call
stc
cld
arpl
mov
jnp
mov
jb
popf
inc
mov
stos
clc
fbstp
test
aam
xchg
aaa
mov
stos
orl
bound
test
std
bound
sahf
aas
rcrl
test
loop
out
push
xchg
ss
cmp
enter
inc
jecxz
sahf
sbb
sbbb
sub
xchg
roll
jns
push
push
mov
cmpsl
add
xchg
inc
mov
mov
or
pop
xor
pop
push
and
push
xchg
jne
cltd
inc
adc
inc
cmp
xor
or
int3
and
cmp
push
inc
or
pop
ljmp
xchg
pop
out
je
lds
mov
js
aaa
cltd
aad
inc
or
add
adc
push
ja
dec
cmp
push
jb
adc
sbb
testb
jmp
jge
aad
cmc
mov
stos
push
mov
mov
push
test
pop
add
filds
hlt
pop
add
cmp
insb
pop
loopne
jecxz
mov
mov
fnstsw
jne
aad
inc
pop
push
mov
dec
or
adc
mov
fwait
cmp
inc
insl
out
std
or
push
rorl
mov
lea
dec
or
xchg
mov
pop
mov
mov
mov
cmpsl
push
sbbb
clc
stos
inc
sub
jnp
push
out
adc
in
jbe
sbb
shlb
scas
adc
mov
xchg
int
or
ficomps
pop
movsl
or
xlat
mov
out
adc
aas
and
jp
xchg
cmp
sub
lret
mov
mov
push
add
fstpt
aam
sub
add
pop
sbb
les
mov
mov
xchg
rcrb
mov
dec
adc
adc
mov
mov
inc
or
fcomps
les
iret
push
clc
jl
sub
pop
adc
iret
lea
clc
mulb
sub
jnp
sub
aaa
inc
adc
shll
insl
or
and
cmp
mov
and
into
sbb
adc
mov
jg
adc
ret
pop
cli
xchg
rcll
xchg
js
pop
not
push
pop
jne
jle
loop
mov
cmpsb
xchg
hlt
cmp
fdivrl
cltd
add
mov
inc
adc
pop
in
push
pop
xchg
mov
xchg
sub
xlat
filds
int3
push
orl
cmp
repz
push
fiadds
adc
or
rcrb
shl
call
mov
adc
setns
sub
into
pop
add
imulb
mov
das
das
or
arpl
mov
jne
call
jle
stc
pop
mov
int3
fcomps
mov
push
cmp
imul
loop
jmp
sub
call
bnd
jns
dec
addr16
jnp
lahf
scas
xor
shrl
arpl
lcall
test
push
xchg
cld
pop
push
fadd
mov
or
pop
out
bound
mov
mov
mov
call
cld
lea
aas
jmp
shrb
movsb
ss
or
xchg
nop
xchg
rolb
mov
xor
mov
pop
mov
adcb
jle
jb
push
cmp
jbe
aas
xor
aas
push
imul
mov
fnop
ja
stc
fiaddl
jnp
filds
mov
negb
mov
loopne
adc
dec
cmpsl
xor
roll
and
iret
jbe
inc
test
cmc
pop
xchg
mov
insl
cmc
cmp
mov
xor
add
mov
daa
stos
fldenv
fiadds
push
and
mov
fdivrs
mov
or
pop
ret
addr16
ss
add
mov
push
push
addr16
cmp
xor
and
aad
mov
add
rol
and
jmp
iret
xchg
loop
sti
data16
mov
fisubrl
fisttpll
lret
xchg
clc
or
imul
mov
sbb
add
sbb
inc
mov
sbb
add
imul
rorl
cmpsl
xor
xchg
sub
add
xchg
jne
imul
imul
ss
ret
les
adc
sbb
push
cmp
loop
push
mov
repnz
adc
inc
add
cmpsl
scas
dec
adc
mov
loop
adc
adc
cmp
repnz
sbb
fldl
aas
mov
out
stos
cs
xchg
mov
rorb
int
sbb
push
dec
mov
fistpl
daa
test
call
pushl
xchg
lret
add
mov
sbb
aas
xchg
pop
rcll
cmc
repnz
mov
aas
xchg
xor
cmp
subl
out
mov
pop
movsb
inc
or
sub
or
inc
lcall
xor
mov
popa
in
xchg
cmp
repnz
pop
repz
mov
pop
call
adc
leave
aam
adc
enter
loop
mov
jmp
in
push
callw
mov
jo
adc
push
inc
adc
mov
lock
jns
sti
rol
cmp
in
mov
sbb
mov
xchg
outsb
in
out
or
adc
int
add
hlt
std
pop
jge
mov
lods
daa
ret
scas
imul
pop
cmp
mov
movsb
into
mov
cmp
jg
pcmpgtb
aam
incb
xor
bound
int
cmpsl
jae
push
dec
mov
cwtl
sbbl
mov
aam
jns
push
pop
int3
xchg
testb
xchg
loope
xchg
repz
adc
gs
movl
mov
sub
mov
and
or
es
outsb
and
sbb
lret
mov
add
aam
add
test
orl
push
sub
cmp
sub
lret
dec
and
cmpsl
sbb
mov
dec
mov
and
ret
pop
cld
lcall
cmp
lcall
js
xor
push
xchg
dec
lds
xchg
nop
cmp
negb
cli
pop
mov
lods
fs
cmp
inc
or
and
ljmp
fildll
mov
jge
inc
jl
cli
gs
imul
push
fs
dec
je
cmpsb
mov
stos
sub
int
or
call
decl
rol
fs
mov
cmp
fwait
add
mov
lahf
fwait
and
pop
jb
inc
addl
add
stos
fisubrl
test
mov
rolb
pop
gs
xchg
sub
jl
int
push
mov
test
fdivrs
filds
mov
outsb
cmc
lea
into
xchg
cmc
sub
pop
jnp
cld
pop
imul
jle
outsl
pusha
out
mov
and
sub
fsubrl
jg
inc
out
imul
and
mov
iret
mov
jmp
inc
mov
movsl
mov
test
in
and
jb
lea
jo
mov
jno
mov
fbstp
arpl
aad
sahf
cmp
lea
ds
inc
jo
aas
cmpsb
sbb
jnp
dec
xchg
cmp
or
sub
add
sar
outsb
sbb
push
stc
bound
jp
fwait
add
out
mov
mov
scas
or
jns
adc
lds
shlb
sub
cmp
sub
stos
xor
cmp
mov
call
add
je
orl
icebp
push
stc
cs
or
sbb
pop
add
dec
out
jo
fnstsw
data16
stos
adc
pop
cltd
mov
push
cli
pop
test
mov
clc
stos
pop
or
inc
psrlw
xor
mov
dec
inc
inc
adc
cwtl
mov
pop
lcall
popf
roll
xor
sub
aad
ret
repz
rep
adc
push
mov
mov
mov
setnp
pop
xchg
insl
xor
pop
jne
out
fildl
mov
scas
pop
cmp
adc
ljmp
int3
cmp
push
push
inc
cmp
addr16
scas
cwtl
std
mov
xor
xor
pop
dec
and
xor
aad
sbb
mov
iret
dec
mov
cmp
sbb
and
xchg
cmp
mov
pop
add
or
negb
jne
sub
shrl
test
in
ds
aad
das
scas
mov
jle
ljmp
daa
lcall
daa
hlt
cwtl
jno
sub
cmp
jne
movsb
mov
mov
mov
stos
cs
aas
xchg
inc
jge
xchg
ss
xchg
and
aaa
out
mov
das
stos
jle
outsl
ljmp
stos
sub
in
mov
stc
inc
push
mov
ret
xchg
push
stos
sbb
adcb
jns
imul
mov
xchg
push
jmp
dec
out
add
ret
mov
cmpsl
fnstsw
inc
dec
or
and
sbb
cmp
aas
int3
mov
sbb
adc
aad
dec
push
rcrb
add
jge
in
pusha
sbb
lahf
dec
pop
push
movsb
insl
jmp
push
sub
dec
nop
fbstp
xchg
jge
insb
jle
cld
pushl
loope
xchg
insl
jmp
popl
fidivs
enter
test
xchg
mov
cmp
ljmp
ja
daa
xor
cli
insb
dec
lret
xchg
jge
xchg
ds
insl
pop
int
lret
push
data16
push
mov
mov
pop
mov
bound
ljmp
ja
scas
mov
cmpsb
adc
and
pop
clc
js
sub
je
adcb
xchg
data16
mov
repnz
inc
call
lcall
and
enter
push
sbb
pop
mov
psrld
cmpsl
mov
mov
push
jecxz
or
lock
daa
cmp
jb
stc
xchg
push
in
pmullw
xchg
rclb
mov
std
lcall
aas
insl
aas
popf
push
sub
aam
mov
push
jns
repnz
loop
jns
mov
sbb
iret
stos
mov
push
push
lret
cld
pop
or
lahf
stos
sbb
or
pop
lret
cltd
inc
push
imul
out
jnp
mov
pushl
or
xor
dec
inc
sub
lret
mov
sub
xor
daa
jae
mov
mov
popf
lods
orl
push
std
outsb
scas
mov
int3
mov
outsl
rcrl
mov
jb
adc
rcll
repnz
jg
hlt
push
sbb
dec
or
xchg
inc
sbb
ljmp
daa
dec
or
cmp
insb
add
test
jl
into
xchg
dec
insl
pushf
inc
xchg
cmpsl
xchg
shlb
mov
outsb
inc
push
call
lds
jl
and
cmp
mul
and
data16
std
ds
rol
sub
inc
pop
mov
adc
jb
and
ljmp
in
and
scas
sub
fnstenv
iret
mov
fwait
xchg
std
rorb
jnp
jo
xlat
xchg
movsb
push
into
in
or
jo
pop
cld
cli
push
loopne
in
or
xchg
aas
bound
add
add
nop
inc
adc
aaa
jecxz
adc
in
dec
or
cli
dec
pop
sbb
scas
sub
icebp
arpl
ret
loopne
mov
inc
xchg
movsb
push
jmp
mov
out
mov
movsl
cmp
insb
mov
mov
cli
mov
shlb
lods
call
xor
jns
xor
sahf
inc
jo
jnp
stos
popa
lock
xor
lds
pop
fadds
enter
std
jnp
lret
in
imul
aas
fucompp
test
or
mov
dec
icebp
mov
cltd
adc
cmpsl
shrb
pop
mov
mov
or
jnp
adcb
pushf
shlb
mov
xor
and
mov
mov
lea
nop
loopne
dec
fists
add
scas
xor
data16
imul
mov
frstor
or
xor
push
arpl
jle
fidivs
lahf
scas
inc
rcl
cld
xchg
or
int3
arpl
inc
ljmp
cltd
or
add
es
push
ds
fldt
xchg
sub
enter
loop
pop
adc
iret
dec
xor
in
test
ret
repz
jno
adc
clc
pusha
addr16
fistps
mov
xor
add
test
and
mov
pop
test
lret
cld
add
lods
inc
dec
pop
xchg
mov
bound
ret
jmp
shrl
pop
or
subb
lcall
fucomi
hlt
xchg
sub
push
arpl
aas
inc
mov
jns
sbbl
int3
mov
ss
out
test
pop
mov
mov
mov
cli
xchg
dec
fists
ss
addr16
aaa
into
test
push
in
or
das
rclb
xchg
sub
fidivs
sahf
scas
inc
rcl
cld
xchg
pop
repnz
and
sbb
ja
cmp
lods
cwtl
or
ljmp
push
cmp
fsubrl
xchg
sub
mov
clc
loopne
sbb
sbb
addr16
xor
test
rorb
jb
adc
ret
stc
nop
pop
gs
loopne
jg
scas
mov
addr16
call
or
ljmp
jno
cmpsl
mov
pop
loop
es
add
js
sbb
xchg
mov
arpl
shr
repz
cmp
sub
or
jle
daa
mov
sarl
xchg
sub
or
sti
cmp
pop
sbbb
cwtl
shrl
mov
aaa
jecxz
out
xchg
ds
je
nop
sub
shrl
loopne
lcall
mov
xor
aaa
into
addb
in
aam
mov
or
rcrl
xchg
sub
fbstp
pushf
scas
inc
into
aam
xchg
push
lock
and
sbb
jne
cmp
stos
xchg
or
std
call
jbe
push
cmp
imul
movsb
mov
mov
fiadds
push
arpl
sahf
test
movsb
lock
adc
inc
sub
nop
pop
fs
loope
jge
scas
scas
mov
jmp
iret
xor
push
cmp
push
ljmp
jno
movsl
scas
ret
pop
loope
es
add
jns
sbb
xchg
xchg
sahf
cmpsl
push
mov
mov
cmp
sub
or
jl
daa
mov
iret
mov
fsubr
lock
sub
cmp
dec
jne
sbbb
xchg
shrb
scas
mov
xchg
add
movsl
insl
push
fnsave
sub
mov
loopne
loope
std
sbb
fs
aaa
into
addb
in
rcr
movsb
cmp
hlt
jae
es
pop
pop
inc
xchg
sub
loopne
mov
scas
inc
int3
sar
xchg
add
int
and
sbb
push
inc
jmp
jae
cmp
test
lret
sti
out
mov
dec
cmp
imul
cli
mov
faddl
imul
lock
push
movsl
out
aad
jb
adc
nop
pop
bound
xchg
jnp
scas
lods
mov
add
int
int3
incb
mov
cmp
push
jmp
pop
cmpsb
cmp
mov
les
jp
pop
scas
inc
dec
push
add
pushf
movsl
pop
mov
mov
cmp
mov
jp
sub
int
inc
fucom
out
xchg
and
gs
cmp
dec
jae
sbbl
xchg
shrl
lods
mov
mov
add
push
xor
imul
mov
xchg
dec
loop
sti
sbb
arpl
iret
jle
xchg
mov
push
in
rcl
movsl
cmp
bnd
and
ret
pop
pop
inc
xchg
sub
loope
mov
mov
lret
xchg
add
into
gs
and
in
xorl
shrb
leave
pop
lock
in
mov
dec
ss
frstor
xchg
sub
mov
fiaddl
push
sub
icebp
mov
mov
fdivl
ucomiss
inc
es
xchg
pop
popa
dec
jecxz
jns
scas
stos
mov
add
lret
ss
push
mov
cmp
cmpsl
mov
or
ret
hlt
jmp
jp
push
mov
dec
push
add
fwait
movsb
pop
mov
mov
cmp
mov
jns
sub
xchg
lcall
in
xchg
cs
pop
data16
cmp
dec
jb
test
mov
mov
mov
add
pop
xor
push
fbstp
mov
xchg
fcomp
dec
loop
cli
sbb
bound
jge
xchg
mov
push
out
iret
movsl
cmp
icebp
jne
and
ret
pop
pop
inc
xchg
sub
loope
scas
xchg
mov
leave
sar
xchg
add
iret
sbb
mov
ds
test
cmp
cmpsl
xchg
or
stc
jecxz
rclb
cmovge
xchg
sub
mov
flds
push
sub
cmp
icebp
mov
mov
fnsave
lds
and
dec
jecxz
js
mov
mov
add
lret
sti
add
push
in
dec
pop
cmpsl
mov
or
rcll
xor
add
lcall
test
cmc
cmp
mov
js
sub
xchg
cltd
jns
lret
mov
in
xchg
cs
push
addr16
aaa
aas
mov
jno
test
xchg
shrl
stos
mov
mov
inc
pop
xor
push
fbstp
mov
xchg
xlat
fisttpll
push
stc
sbb
bound
sarb
push
mov
push
out
into
movsl
cmp
lock
and
ret
pop
pop
inc
xchg
sub
loope
scas
xchg
mov
enter
add
iret
data16
sbb
test
cmp
cmpsl
nop
or
stc
loop
rclb
js
dec
xor
fisubs
xchg
sub
mov
mov
repz
push
sub
mov
mov
fnsave
lds
and
xchg
push
pusha
dec
jecxz
ja
mov
mov
add
leave
aaa
into
cli
add
push
in
dec
pop
cmpsl
mov
or
rclb
xor
dec
inc
push
add
cltd
mov
in
test
cmc
cmp
mov
js
sub
xchg
cltd
jns
lret
mov
in
xchg
cs
add
mov
jno
test
xchg
shrl
stos
mov
mov
inc
pop
xor
push
fbstp
mov
xchg
fisttpll
push
clc
sbb
bound
sarb
xchg
mov
push
out
int
movsl
cmp
out
jne
and
ret
pop
pop
inc
xchg
sub
js
xchg
mov
sar
xchg
add
iret
sbb
test
cmp
cmpsl
or
stc
loope
rclb
js
dec
xor
outsb
xchg
sub
mov
mov
repz
sbbl
adc
mov
mov
mov
fnsave
lds
and
xchg
push
pusha
dec
jecxz
jbe
mov
mov
add
enter
add
push
in
dec
pop
cmpsl
mov
sahf
stos
lds
xchg
sub
jecxz
xor
mov
inc
push
add
cwtl
mov
in
test
cmc
cmp
mov
js
sub
nop
cltd
jns
lret
mov
in
xchg
cs
add
xor
push
test
xchg
shrl
test
icebp
mov
std
rcrl
push
fbstp
mov
xchg
aad
dec
loop
negl
mov
xor
bound
sarb
xchg
mov
push
out
int3
movsl
cmp
out
jne
and
ret
pop
pop
inc
xchg
sub
loope
scas
xchg
mov
sar
xchg
add
iret
data16
test
cmp
cmpsl
mov
mov
stc
loopne
rclb
js
dec
xor
arpl
sub
mov
mov
repz
sbbl
adc
mov
mov
mov
fnsave
lds
and
xchg
push
pusha
dec
jecxz
jne
mov
mov
add
aaa
into
clc
add
push
in
dec
pop
cmpsl
mov
or
mov
jecxz
xor
mov
inc
push
add
xchg
mov
in
test
cmc
cmp
mov
js
sub
cltd
jns
lret
mov
in
xchg
cs
add
xor
mov
jno
test
xchg
shrl
test
cmp
in
mov
cld
rcrl
push
fbstp
mov
xchg
aam
dec
loop
negb
mov
xor
bound
sarb
xchg
mov
push
out
lret
movsl
cmp
in
jne
pop
sub
pop
pop
inc
xchg
sub
loope
scas
xchg
mov
xchg
add
iret
sbb
test
shlb
enter
fildll
rclb
js
dec
xor
bound
sub
mov
mov
repz
sbb
adc
mov
mov
mov
fnsave
lds
and
xchg
push
pusha
dec
jecxz
je
mov
mov
add
aaa
into
testl
cmpsl
mov
or
xchg
sub
jecxz
xor
mov
inc
push
add
xchg
mov
in
test
cmc
cmp
mov
js
sub
mov
dec
fnstsw
in
xchg
cs
add
xor
mov
jno
test
xchg
shrl
cmpsl
mov
mov
sti
rcrl
push
fbstp
mov
xchg
rcr
dec
loop
cmc
sbb
bound
sarb
xchg
mov
push
out
lret
cmp
in
jne
push
sub
pop
pop
aas
xchg
sub
loope
scas
xchg
mov
sar
xchg
add
iret
data16
test
cmp
cmpsl
mov
mov
stc
fisubrs
rorb
js
dec
xor
popa
outsb
xchg
sub
mov
mov
repz
sbb
adc
mov
mov
mov
fnsave
lds
and
xchg
push
pop
dec
jecxz
jae
mov
mov
add
lds
iret
testb
ss
push
out
dec
push
cmpsl
mov
or
stos
lds
xchg
sub
std
jecxz
das
adc
cwtl
andl
mov
mov
test
hlt
cmp
movsb
cmp
bnd
sub
lea
dec
loopne
jmp
cs
ds
jo
xchg
ret
cmpsb
movsb
cmp
in
mov
cli
ret
cmp
cmpsb
imul
les
fmull
or
das
imul
ja
xchg
mov
pop
out
leave
aad
cmp
jmp
or
pop
ds
sub
loope
scas
xchg
mov
ret
iret
call
pop
and
test
cmp
cmpsb
mov
mov
rorl
js
dec
das
dec
fbld
xchg
sub
mov
mov
repnz
inc
mov
mov
mov
fidivs
or
lds
pop
dec
jecxz
jb
mov
mov
add
les
shl
add
out
inc
push
cmpsl
mov
or
fstpt
jecxz
btr
dec
add
xchg
mov
out
xchg
repz
movsl
cmp
bnd
sub
mov
dec
loope
ljmp
xor
xchg
test
movsl
cmp
jecxz
mov
aaa
push
mov
xchg
rcr
dec
loop
hlt
sbb
add
cmp
ja
xchg
mov
pop
lock
aam
cmp
jmp
push
sbb
ds
sub
jnp
js
xchg
mov
ret
into
call
pop
and
xchg
cmp
movsl
mov
lock
sub
push
sbb
dec
das
dec
loopne
insb
xchg
sub
mov
mov
icebp
roll
push
mov
mov
mov
fbstp
or
lds
xchg
push
pop
dec
jecxz
jb
mov
scas
push
loope
cmp
cmc
add
lock
push
cmpsl
xchg
push
lcall
sub
sti
jecxz
sub
dec
add
xchg
mov
lock
repnz
cmpsb
cmp
jne
sub
adc
lods
dec
loop
jmp
push
xor
pop
test
cmpsb
cmp
adc
les
ss
addr16
loop
jg
sub
xchg
rcr
dec
loop
repz
mov
sub
cmp
jbe
xchg
mov
pop
icebp
enter
add
daa
ret
pop
pop
cmp
loope
lods
nop
mov
ret
xchg
jmp
shrb
and
mov
lock
cmp
movsb
mov
movsl
mov
fldt
or
jns
dec
sub
xchg
cs
jg
pushl
roll
imul
push
repnz
mov
loopne
cld
or
cmp
dec
in
jo
mov
scas
imul
ret
repz
icebp
inc
push
test
xchg
sets
xchg
sub
sub
mov
aas
dec
add
xchg
lahf
and
in
ds
pop
adc
je
lds
stos
dec
jecxz
call
push
xor
dec
outsb
push
mov
orl
cmp
adc
les
adc
jge
lds
fimull
icebp
push
mov
sub
cmp
je
mov
mov
pop
icebp
shll
bndldx
les
cmp
jns
mov
loope
imul
xor
xchg
cmp
movsl
mov
fldcw
or
jp
dec
sub
pop
push
das
pushf
jge
ljmp
iret
xchg
inc
and
xchg
jne
pop
cmpsl
mov
test
enter
or
cmp
call
mov
mov
lods
insb
add
sarb
icebp
add
icebp
inc
push
test
setbe
xchg
sub
sub
mov
cmp
pop
shrl
sahf
and
jecxz
aas
and
pop
hlt
jae
lds
test
cltd
xor
cld
push
cmp
pop
orl
repz
test
sub
loop
jnp
das
mov
or
push
mov
sub
add
cmp
jb
mov
mov
pop
icebp
shlb
nop/reserved
lds
xchg
sub
stos
mov
std
imul
xor
xchg
aad
test
movsl
mov
pop
repz
xlat
sub
or
jnp
dec
sub
pop
imul
dec
out
int
sbb
inc
and
mov
adc
clc
pop
xor
cmp
add
mov
mov
stos
insl
add
mov
mov
xor
pop
repnz
push
test
adc
xchg
cs
in
sub
mov
cmp
lcall
and
loope
aas
pop
add
test
inc
pop
hlt
jno
das
movb
dec
in
in
xor
cli
imul
cmp
and
aad
mov
fcomip
mov
hlt
lds
adc
jns
das
mov
add
or
pop
mov
sub
pop
aas
cmp
and
shlb
adc
and
pop
push
aaa
xchg
imul
dec
mov
fst
push
sbb
icebp
mov
ds
orl
mov
pop
repz
les
adc
adc
dec
loop
addr16
xor
mov
xchg
decb
cmpsb
cmp
xchg
jb
pop
movsb
mov
test
testl
dec
out
push
mov
test
cmp
and
subps
inc
dec
test
adc
mov
das
out
in
daa
or
lcall
and
loopne
aas
sbb
ds
hlt
outsl
push
xor
test
dec
in
jecxz
xor
aaa
mov
imul
mov
mov
repz
pop
and
inc
in
js
das
mov
add
push
in
and
pop
ds
jnp
and
into
cmpsl
ds
jp
adc
ss
das
push
mov
cwtl
stc
imul
and
popa
insl
ds
adcb
mov
pop
repz
lds
es
jecxz
gs
xor
mov
mov
std
or
insl
cmp
pop
hlt
mov
mov
test
testb
enter
cltd
dec
push
dec
out
imul
add
mov
mov
sub
pop
hlt
aas
dec
test
adc
mov
xor
repz
and
inc
add
mov
hlt
mov
ljmp
xor
enter
adc
movsl
dec
out
loope
xor
clc
insl
add
xor
mov
jge
aad
mov
fcomi
mov
das
adc
ja
das
mov
add
add
and
pop
cmp
mov
stos
pop
hlt
ror
ds
loope
adc
and
pop
push
xor
xor
in
movsl
xchg
cltd
neg
aad
or
and
pop
imul
pushf
adcb
mov
pop
hlt
out
shrb
movb
jl
inc
and
in
arpl
add
leave
mov
sti
or
outsb
cmp
aas
dec
pop
cmc
mov
scas
adc
hlt
add
leave
xor
push
out
and
outsb
add
ljmp
cmc
cmp
pop
jl
nop
sahf
enter
lcall
add
add
jne
xlat
outsb
mov
cmc
mov
call
adc
insb
push
xor
orb
out
loopne
xor
imulb
sub
dec
dec
mov
jnp
insl
mov
mov
pop
and
adc
jne
xor
mov
add
add
and
push
cmp
insb
js
inc
ds
xor
jne
in
jp
mov
les
jg
shlb
test
aad
jnp
ljmp
test
inc
sub
sti
loope
mov
xor
cmpsb
pop
repz
fistl
das
jl
popf
xchg
jg
dec
cmc
mov
or
xchg
push
pop
jb
push
fimuls
mov
inc
cmp
imul
fwait
and
fidivl
out
or
sub
lods
push
cs
push
in
pop
pop
jecxz
xchg
xor
orl
shl
rcll
or
mov
movsb
popa
cmp
cmp
popa
xor
adc
xlat
dec
lods
and
ja
mov
adc
jb
lret
pushf
mov
xchg
add
movsb
sub
sbb
ficompl
or
stc
xor
xchg
rol
push
fcom
nop
mov
or
mov
mov
ljmp
push
popa
xor
cmp
scas
pop
sub
fdivrl
into
loop
dec
movsb
pop
pop
rorb
or
out
sbb
lahf
push
mov
outsl
mov
mov
cwtl
sub
mov
jae
mov
cmp
lcall
inc
and
incb
inc
aaa
inc
mov
test
fs
mov
fdivl
rorb
pushf
ret
in
stc
pop
push
in
pop
loop
arpl
test
stos
mov
scas
jae
cmc
jmp
adc
mov
adc
test
xor
xchg
push
daa
imul
mov
lods
mov
and
sbb
rclb
or
adc
pushf
insl
mul
or
je
xor
insb
fsubs
mov
xor
xchg
cltd
movsb
push
xchg
enter
shl
cmp
lret
push
or
dec
test
mov
adc
movb
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
add
xchg
std
mov
andl
xor
dec
inc
pop
add
jbe
mov
stos
stos
gs
lea
out
jns
repnz
out
adc
lods
xor
fs
jmp
xor
mov
cltd
dec
cmp
cmpl
jo
mov
inc
movsl
mov
mov
xchg
jl
jne
dec
subl
jnp
ss
pop
cmpsb
inc
lret
xor
add
movsb
cli
enter
mov
jmp
repz
cli
pop
jg
lods
pop
push
test
outsb
ljmp
jg
or
add
jmp
in
sbb
sub
dec
sbb
xchg
inc
sub
lock
popa
xor
and
int
inc
xor
xchg
push
mov
cmp
jmp
shlb
inc
add
xchg
sahf
std
adc
xchg
cmp
mov
jno
sbb
jne
sbb
lock
scas
push
test
xor
outsb
test
mov
lds
adc
add
aas
pop
xchg
sub
or
xchg
dec
xor
loop
and
xor
daa
push
lret
or
mov
xor
push
mov
pushf
aad
je
fsubs
jae
daa
cs
addb
cmp
mov
leave
dec
imul
mov
adc
outsl
lds
fs
mov
js,pt
lea
aaa
fildll
cltd
fsubrl
out
addl
mov
inc
nop
leave
and
fldcw
call
pop
inc
mov
bound
shrb
sub
dec
adc
mov
out
lret
pop
test
rclb
outsl
jl
pop
sbb
hlt
scas
mov
in
mov
loop
xchg
daa
pop
test
in
mov
pop
imul
cltd
movsb
pop
mov
inc
mov
in
xchg
movsl
subb
out
or
sarb
adc
outsb
daa
add
std
mov
xchg
cmpsb
bound
lds
test
inc
pop
xlat
xchg
addr16
add
stc
fldcw
fwait
sbb
stos
in
add
shlb
aas
ret
fwait
imul
or
xchg
addr16
pop
xchg
sbb
fwait
mov
mov
inc
adc
sahf
sbb
mov
cmp
jae
adc
dec
inc
push
pop
in
fs
push
ret
push
icebp
sbb
mov
cmp
sbb
push
xchg
icebp
outsb
dec
bound
xchg
push
jae
dec
inc
add
dec
jle
mov
aam
insb
mov
push
inc
in
fdivl
jae
cltd
cwtl
adc
mov
outsl
pusha
rolb
sub
push
loop
sbb
push
jl
sbb
mov
lock
adc
inc
incb
je
es
popl
cld
sub
into
push
pop
stos
adc
cmpsl
pop
int
fsts
ret
mul
cmp
mov
cmp
fidivl
mov
pop
inc
cli
not
push
les
out
add
mov
lea
loopne,pn
in
outsb
andl
sub
adc
arpl
push
lods
data16
inc
ror
mov
inc
sub
inc
sub
lods
test
sub
cmp
lret
xor
push
mov
push
pop
xor
mov
pushf
rcrl
dec
arpl
cmp
orb
shlb
mov
jg
add
xlat
xchg
jge
push
repnz
clc
pop
push
shrb
outsl
out
cs
sbb
jmp
inc
jecxz
rorl
mov
frstor
and
cmpsl
pop
cmp
int
cltd
push
inc
adc
mov
inc
mov
fldcw
sarl
sub
dec
push
push
loopne
clc
or
lock
pop
sti
push
movsl
inc
mov
adc
in
out
loope
int3
cmp
xor
data16
test
jp
cmp
mov
inc
cmp
dec
push
mov
push
lock
int
push
pop
movsb
lods
cmp
mov
aaa
mov
sbb
push
mov
mov
maxps
out
push
mov
dec
pushf
add
or
push
xor
xor
lret
cltd
fnsave
shll
data16
lds
xchg
push
inc
adc
mov
decb
push
add
jb
mov
lea
lret
shl
jmp
push
push
lahf
bound
push
shlb
sbb
push
pushf
cmp
xchg
pushf
mov
repz
mov
add
inc
cld
mov
insl
aam
loop
mov
sbb
sub
xor
ret
lds
lds
lret
xchg
out
mov
ret
mov
mov
cmp
cld
insl
stos
xorl
sbb
lret
xor
int
lret
cli
dec
popa
add
adc
aas
push
fdivrs
sti
and
into
and
test
pop
xor
rcll
faddl
pop
push
orl
out
mov
repz
add
in
jecxz
fstpl
rol
adc
push
out
and
lcall
scas
xor
add
adcl
sbb
hlt
loop
imul
lcall
gs
in
repnz
add
mov
ljmp
cmc
jmp
cmc
and
fwait
ss
aam
mov
gs
jecxz
mov
fmull
movsl
and
pop
adc
loope
adc
pop
add
ss
cmp
sub
cltd
fcompl
loop
leave
or
adc
mov
lods
inc
cwtl
les
divb
dec
data16
mov
aaa
sub
iret
pop
shrb
sub
or
ret
push
sbb
scas
push
pusha
adc
mov
pop
shrl
lods
test
push
sbb
fnstcw
int
icebp
lcall
pop
xor
movsl
fmull
cmp
fcmovb
sub
mov
les
leave
cmp
dec
mov
add
sbb
push
out
pop
insl
loope
shll
call
clc
ljmp
sbbb
adc
sbbl
adc
clc
adc
or
sbb
pop
pusha
jl
vpmadcsswd
sbb
popa
fucomi
jl
xchg
adcl
fucomp
jl
cltd
adcl
fucomip
jl
fwait
adcl
loope
jl
popf
adcl
aas
jge
lahf
ret
dec
aas
cmp
xchg
test
das
inc
aam
pop
movb
enter
dec
ret
jo
xor
je
out
dec
mov
test
jl
je
pop
insb
push
add
hlt
jnp
mov
jmp
jb
rcl
pop
incl
jecxz
and
sub
in
mov
scas
jle
cmp
out
aaa
and
lds
adc
and
adc
add
and
dec
icebp
movsl
mul
or
xchg
insl
movsl
inc
mov
fadd
rcll
jmp
push
mov
mov
ds
cmp
imul
push
jge
dec
mov
adc
mov
pop
pushf
fiaddl
adc
jmp
jne
repz
call
ret
adc
push
xor
.byte
