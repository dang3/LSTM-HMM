js
add
pusha
mov
add
dec
mov
add
xor
add
mov
add
mov
add
add
je
add
mov
add
scas
mov
add
fidivrl
add
add
add
push
mov
add
scas
rolb
pushf
rolb
xchg
add
jp
add
outsb
rolb
pusha
rolb
push
rolb
dec
rolb
rolb
sub
add
and
add
adc
add
clc
mov
add
aam
add
inc
mov
add
es
add
clc
mov
add
mov
add
mov
rolb
test
add
mov
mov
add
je
add
pop
mov
add
mov
add
and
add
xor
add
inc
mov
add
fs
add
xchg
mov
add
scas
mov
add
aam
add
out
mov
add
and
add
inc
mov
add
jb
add
cmpb
add
mov
add
lret
add
mov
add
or
add
es
add
add
add
push
mov
add
cmp
add
bound
add
out
add
aam
add
sarb
add
mov
add
jb
add
push
add
pop
mov
add
ss
add
push
mov
add
out
mov
add
into
mov
add
scas
mov
add
mov
add
ret
add
mov
add
je
add
lods
mov
add
dec
outsb
inc
add
jle
add
scas
inc
add
inc
add
aas
sub
repnz
out
cmp
xor
pop
push
push
xchg
aad
jge
mov
xor
or
in
xchg
call
call
call
push
cmp
mov
fisubl
in
push
xor
scas
push
pop
fsubs
xchg
cmp
lret
mov
xlat
addr16
dec
dec
adc
sub
ret
push
pop
clc
mov
cmp
test
add
mov
lret
cmc
add
fsubr
stos
lcall
add
add
lods
inc
pushf
sbb
rol
pop
inc
and
sub
sbb
hlt
xor
fildll
push
adc
mov
add
stos
mov
call
in
loopne
incl
inc
cmp
inc
sahf
shl
aad
xchg
mov
mull
or
f2xm1
lret
jl
mov
leave
mov
mov
add
ss
sbb
nopl
mov
jmp
lret
dec
inc
xor
mov
enter
xchg
push
imull
push
sbb
test
or
pushf
lcallw
addl
lods
sub
lock
das
jnp
push
imul
stos
mov
xchg
call
frstor
xor
dec
mov
cmpsl
push
pusha
and
cmp
jl
testb
clc
test
and
inc
mov
jg
mov
out
mov
mov
scas
addr16
ljmp
imul
add
add
add
add
leave
sbb
pop
mov
sbb
roll
mov
call
call
test
shl
jle
cmp
stos
fadds
faddl
lret
nop
push
test
pop
shrl
adc
or
mov
xchg
fisubs
add
cmpsb
sbb
popf
insb
fldl
and
ja
sub
or
sbb
mov
outsl
mov
inc
pusha
cmp
fsubrl
hlt
adc
inc
scas
mov
cltd
popa
xchg
mov
outsl
cmp
pop
or
dec
adc
or
pop
insl
and
iret
roll
mov
add
insb
and
cmp
imul
add
lret
popl
sarl
adc
pushf
popf
mov
cwtl
and
jmp
pop
pop
lcall
mov
loope
jbe
ja
sbb
push
leave
clc
in
xchg
push
pop
jge
inc
cmp
into
mov
call
fnstsw
hlt
xor
mov
push
jmp
push
lds
cld
repnz
push
fsubrp
mov
ja
mov
pop
rolb
aas
cmp
mov
cmp
mov
add
add
push
pop
adc
fsub
int3
inc
xchg
mov
or
and
shll
push
sbb
mov
xor
mov
daa
sbb
je
gs
jnp
xchg
sub
sub
daa
push
loopne
mov
add
add
add
add
dec
cmp
or
pop
cmpsb
or
dec
inc
or
xchg
lcall
jae
adc
lcall
data16
adc
xchg
xor
test
sbb
dec
fsincos
loope
cmp
push
icebp
cmpsl
xchg
cmp
daa
adcb
and
fstl
inc
cmp
leave
push
inc
xchg
add
cwtl
add
loop
or
add
add
add
pusha
dec
sbb
xor
push
sub
sahf
jmp
xchg
in
inc
mov
bound
jge
cs
add
dec
scas
and
pop
repnz
outsl
inc
ret
and
and
repnz
add
xor
mov
jle
pop
cmp
push
aad
loope
push
dec
jge
pop
aad
add
out
inc
ret
insl
push
pushf
ss
xor
jb
mov
loopne
aas
and
sub
fldenv
xor
popl
add
and
cmp
mov
hlt
push
xchg
les
xor
adc
inc
sbb
add
cmp
shlb
or
cmp
sbb
add
ret
in
hlt
hlt
test
push
pop
xor
add
add
add
pusha
dec
dec
loop
xchg
jo
movsl
popf
jno
std
pop
dec
pop
sub
insl
scas
inc
mov
stos
xchg
int
add
adc
inc
shll
jb
divl
xchg
add
push
dec
sbb
add
mov
stos
mov
daa
add
inc
enter
mov
lds
xchg
inc
or
jge
add
icebp
push
aad
mov
lahf
pop
rcrb
dec
and
call
call
call
out
dec
pop
lock
rol
jp
fsubp
nop
lds
add
push
clts
roll
gs
test
xchg
into
daa
mov
mov
addl
mov
jbe
ss
xchg
sub
call
call
add
xlat
jp
dec
xchg
jmp
add
mov
mov
loope
sub
mov
jecxz
sbb
ret
cmp
popf
mov
or
xchg
loopne
popf
fbld
pop
mov
xchg
mov
push
js
cltd
pop
pusha
sub
pop
push
mov
pop
fdiv
lret
rorl
insl
xchg
lret
ror
add
add
fbstp
or
das
imul
dec
mov
cmp
mov
into
pop
pop
xor
aam
push
popa
ds
call
mov
sub
loopne
or
xchg
addl
mov
xchg
outsl
fldpi
jae
lret
add
add
add
icebp
sub
lahf
jle
neg
sub
adc
inc
xor
mov
jns
pop
mov
fnsave
inc
pop
std
vmovupd
or
pop
add
add
lret
adcb
test
mov
pop
imul
mov
or
push
push
push
add
sub
add
jmp
imul
and
dec
mov
and
out
add
push
xor
call
call
fstpt
imul
add
add
inc
iret
cmp
pusha
mov
pop
mov
mov
add
add
add
add
dec
iret
mov
sbb
scas
mov
sbb
iret
jae
and
dec
fs
js,pt
sub
dec
sub
sub
repz
lods
cmp
push
cmp
push
scas
mov
and
mov
inc
pop
stc
pop
pop
cltd
lds
dec
and
pop
leave
loope
cmp
add
add
add
add
sbb
push
je
aas
adc
xchg
xor
lds
add
add
add
mov
scas
xchg
fsubp
std
fstp
aaa
push
scas
jle
andl
cmpl
and
out
pop
aam
outsb
pop
mov
dec
inc
mov
lds
add
add
arpl
lods
xchg
fcompl
mov
add
push
fistps
xor
sbb
fnstcw
lcall
cwtl
xchg
es
into
sub
mov
pop
movsb
stos
scas
das
pop
filds
movsl
pop
and
out
out
adc
movlps
push
iret
mov
push
mov
add
jae
loope
movb
add
xor
xchg
fldl
jo
add
stos
add
sbb
mov
push
add
mov
sub
add
xchg
shlb
movsb
fidivl
pop
jb
aam
and
mov
testb
jl
sub
cld
jmp
adc
sbb
popa
xchg
pusha
lods
daa
clc
lds
mov
les
iret
aas
cmp
sub
add
add
mov
push
inc
add
sbbb
inc
cs
xor
jmp
and
dec
or
gs
cmp
cvtps2pd
mov
mov
pop
adc
pop
or
dec
jge
mov
fists
jle
xchg
fstp
sbb
jbe
xchg
cltd
inc
add
sbb
popf
rorl
jae
bound
mov
jge
cmp
jne
jmp
adc
push
dec
and
imul
or
fidivrs
sbb
clc
daa
cmp
pop
mov
data16
add
add
add
push
xchg
call
call
call
call
inc
fbld
xor
jle
stc
adc
jg
jmp
mov
xor
loopne
mov
shl
fsubrs
icebp
in
lcall
test
add
loop
and
xor
lret
add
outsl
fisubrs
dec
sbb
stos
add
add
sub
push
inc
outsb
sbb
pop
out
xor
lahf
sbb
xchg
push
pop
outsb
sbb
loope
xchg
mov
sbb
divl
ficomps
in
ss
add
out
xorb
xorb
nop
adc
mov
mov
call
call
call
fisttpl
cld
adc
sub
xor
dec
nop
rcrb
hlt
ds
or
cmpsl
mov
shl
push
adc
in
call
nop
fcomip
jae
addr16
push
jmp
sbb
adc
and
xor
ret
pop
outsl
movsb
or
pop
push
js
add
add
add
add
push
fldt
popa
scas
adc
lods
lcall
add
pusha
sub
in
jge
imul
xchg
sbb
arpl
rcrb
adc
xor
pop
imul
add
add
add
add
cs
xlat
dec
mov
adc
in
popa
jge
loop,pn
repnz
pop
cld
sbb
mov
sub
or
jmp
lock
jl
mov
xchg
push
sbb
add
add
add
add
in
adc
in
and
test
pop
lea
mov
dec
jno
aaa
xor
icebp
and
jle
and
ret
add
xor
and
scas
mov
mov
adc
mov
pop
ja
and
add
pop
jge
call
call
call
call
int
out
loopne
mov
xchg
sub
xor
lret
lods
add
mov
jmp
movsl
in
push
in
jecxz
stos
out
mov
add
add
sti
jnp
test
jno
and
add
in
sarl
int3
jns
xchg
and
push
aaa
mov
sbb
fstpt
add
add
sub
jp
or
gs
lcall
adcl
mov
adc
ds
out
std
pop
in
cli
dec
jb
movsl
sub
cmp
movsb
sti
jp
dec
and
pop
popf
es
lcall
sub
mov
insb
mov
add
and
push
jg
add
and
pop
mov
sub
call
call
shll
dec
push
adc
pop
and
je
add
add
jns
jle
or
inc
cmp
cmpb
xchg
out
pushf
mov
mov
push
das
sbb
jns
es
faddp
sub
xor
cli
push
pushf
sbb
pop
mov
insl
call
mov
add
mov
fnstcw
xchg
mov
adc
ret
outsl
adc
and
jecxz
testb
andl
jmp
js
dec
in
dec
cmp
mov
jl
or
mov
push
movsl
in
lods
mov
xchg
sar
inc
jg
mov
cmp
andl
enter
loopne
and
sub
jne
pop
loopne
inc
xchg
cli
push
lret
pslld
xor
ret
jnp
mov
pop
and
dec
jae,pt
pop
mov
pop
pop
adc
aas
mov
xchg
or
out
mov
push
jne
add
xchg
pop
pop
dec
lea
pop
lcall
call
call
lods
mov
dec
dec
mov
sti
inc
xchg
call
call
call
loopne
popf
mov
mov
in
add
push
sbb
xor
push
push
xlat
jle
popf
dec
mov
loope
add
sbb
popa
rcl
push
add
cltd
push
scas
icebp
pop
mov
sbb
shlb
mov
xor
dec
scas
push
movb
and
insb
sub
dec
testl
pop
mov
and
comiss
inc
stos
outsb
test
insl
xor
mov
pusha
popa
and
add
add
fisubs
mov
ja
push
sahf
sub
and
mov
shlb
pop
gs
outsb
lds
shlb
ret
fildl
es
sub
icebp
xorb
jnp
divl
inc
and
sbb
ja
push
ret
add
push
dec
jns
jecxz
mov
aam
jb
push
add
add
add
add
sbb
inc
test
push
sub
jge
call
mov
into
aam
sbb
mov
pop
sub
push
sbb
rorb
xchg
xor
inc
jmp
out
call
call
call
mov
loop
sti
add
add
ret
push
jp
test
cmp
aaa
in
fnstsw
add
add
fsub
jle
adc
lods
pop
mov
mov
outsb
out
inc
fwait
add
hlt
lcall
and
inc
fwait
mov
shlb
sbb
lret
out
sub
je
jns
add
add
add
loopne
xor
rcr
mov
out
xchg
add
sub
call
or
sub
push
inc
jno
jle
adc
out
push
add
jle
pusha
and
xchg
add
aad
sbb
in
in
mov
aaa
leave
mov
push
popa
fwait
dec
jg
rol
mov
cs
jns
lods
push
movsl
hlt
stc
stc
cmp
push
cmpsl
aaa
mov
or
call
call
or
pop
mov
add
add
add
mov
out
outsl
jnp
outsl
xor
fucomip
iret
int3
inc
cwtl
or
ror
inc
push
mov
mov
xchg
dec
lods
push
push
out
dec
mulps
or
pop
xor
jge
or
fidivs
movsl
jmp
adcl
data16
aam
test
xchg
fbstp
add
add
hlt
cwtl
xor
push
mov
fstpl
mov
jecxz
cmp
mov
out
bound
push
mov
fildll
test
dec
inc
orb
push
mov
dec
jno
iret
les
pop
pusha
movsb
cmp
add
add
add
dec
scas
mov
cmp
push
lods
xchg
ss
mov
add
add
add
lds
push
adc
xor
repz
jecxz
add
fidivl
sub
ret
scas
jl
pop
or
imul
add
add
add
inc
imul
mov
adc
mov
arpl
inc
xchg
jp
jbe
ret
add
add
add
add
xchg
pop
inc
fcompl
mov
xchg
and
pop
and
jp
lods
std
sub
je
adc
jb
int3
aas
mov
add
add
add
inc
dec
jne
jb
or
sbb
or
or
imul
lahf
lcall
ret
mov
pop
call
call
ffree
adc
out
imul
sahf
xorb
cli
out
test
or
dec
xor
sub
xchg
dec
mov
pop
pop
or
out
lahf
test
jnp
add
add
lret
add
adc
pop
test
mov
add
add
fs
push
cli
cmp
enter
lahf
aaa
jmp
xchg
adc
add
jge
sub
sbb
inc
inc
xlat
xor
shr
adc
inc
sub
inc
in
add
add
add
add
xor
roll
add
add
push
insb
sub
imul
add
add
add
add
pop
push
jge
sub
into
adc
ss
arpl
add
into
std
mov
dec
dec
sub
out
xchg
repz
xor
push
rorl
add
add
jbe
rcr
xchg
sbb
and
and
std
cli
add
sbb
ljmp
add
add
jno
sub
in
xchg
out
stos
sub
clc
lahf
dec
in
loopne
xchg
jmp
fisubrs
xlat
ja
cmp
push
mov
add
leave
shrl
gs
xchg
pop
xchg
movsb
sub
or
push
jmp
jle
dec
jge
jb
push
push
test
jnp
mov
sbb
outsl
lret
lock
adc
xchg
call
call
call
pop
sub
sub
fistps
aad
mov
insl
mov
add
add
add
inc
mov
pop
andl
je
pusha
stc
insl
push
cli
jno
mov
mov
inc
xorl
cmc
shrl
sbb
icebp
setns
and
stos
mov
push
jno
outsb
jno
repz
sbb
outsb
mov
push
lcall
add
testl
rorb
lret
jae
insb
ret
cmp
push
push
loopne
test
xchg
dec
mov
pop
sbb
mov
xor
nop
and
pop
or
sbb
add
add
add
cmp
pushf
pop
addl
mov
leave
jb
inc
sub
dec
jmp
jle
sub
out
cmpsl
mov
jp
arpl
rcrb
add
cli
test
cmp
push
aas
push
push
xor
push
lds
and
xor
push
jl
mov
movsl
mov
lahf
adc
add
add
nop
in
and
sub
jl
cmp
sub
sub
jmp
std
outsl
xor
cmpsl
aad
lock
out
dec
push
mov
add
lds
xor
pop
loop
or
ja
fdivrl
add
pop
rcrl
outsl
in
xchg
mov
aas
inc
sub
filds
shll
sbb
filds
xchg
fsubl
cmpsb
insl
mov
add
ror
ds
bound
cmp
loop
jnp
mov
popf
mov
imul
add
les
add
add
add
add
cwtl
out
test
mov
inc
sub
aam
pop
xorl
leave
adc
lods
jg
add
jmp
stc
test
add
add
add
xor
xor
or
xchg
insb
inc
test
cmp
inc
std
mov
insb
xchg
pushf
faddl
add
stc
mov
and
cmp
js
inc
imul
and
iret
sub
pusha
mov
call
call
call
jle
maxps
xchg
or
sbb
dec
hlt
pop
adc
push
cld
test
lods
pushf
mov
sbb
hlt
mov
mov
loop
inc
push
imul
cmpsb
jle
std
push
push
insb
xchg
jae
sbbb
aas
fistps
lahf
in
mov
sub
test
jns
add
add
add
add
jmp
and
ret
in
pop
sub
pop
leave
xor
dec
in
inc
repz
push
dec
mov
icebp
or
divl
push
insb
cwtl
mov
adc
les
lds
gs
add
je
inc
insb
popf
mov
push
addb
add
add
add
addr16
and
mov
or
inc
aad
jbe
ret
mov
enter
add
outsl
lcall
add
xor
std
cld
cmp
mov
jg
gs
dec
enter
ljmp
psubsb
call
call
xchg
enter
jl
data16
jbe
inc
fidivs
or
pop
inc
popa
lahf
add
out
dec
and
push
stos
push
std
mov
add
add
add
insb
addr16
jb
rcrl
xorl
test
jno,pt
hlt
mov
pushf
mov
adcb
add
add
add
mov
pop
sub
push
mov
into
sbb
cmp
adc
aad
adc
xchg
imul
inc
pushf
movsl
push
movsl
adc
fisubs
flds
add
sub
xorl
inc
iret
push
lret
sbb
sub
mov
sbb
mov
lret
int3
xchg
jmp
daa
xor
and
jo
aad
jbe
sbb
sbb
xchg
jle
xchg
push
lret
sbb
inc
insb
loope
dec
push
mov
mov
push
in
dec
cltd
jecxz
bound
push
fimull
add
pop
push
andb
cmpsl
xchg
dec
sarl
or
mov
fisubl
mov
add
cltd
test
movl
bound
or
dec
cltd
lret
lods
cld
ljmp
mov
add
fwait
jns
mov
add
dec
push
cld
mov
addr16
lcall
or
add
add
std
mov
or
or
push
cs
ja
add
dec
mov
mov
test
mov
call
call
call
add
add
add
ss
push
rcrb
stc
in
mov
jge
movsb
cmc
pop
jbe
sub
call
call
sbb
sti
mov
adc
inc
or
mov
stc
sti
mov
add
add
mov
aam
ljmp
pop
mov
shll
sub
jno
push
cmp
add
insb
sub
dec
test
and
sbb
jle
bound
mov
dec
mov
incb
scas
lods
call
call
call
or
hlt
add
int3
sub
sub
insb
cmp
adc
ret
xbegin
sbb
fiaddl
sub
and
and
subps
push
out
inc
aas
sbbb
inc
sub
push
cmc
xchg
cld
out
mov
mov
lock
not
ret
in
jb
inc
cmpsl
cmp
dec
push
jle
jp
js
xchg
sub
je
pop
testb
loope
dec
mull
adc
cmc
aaa
cmp
xor
enter
xor
mov
add
add
add
dec
mov
xor
cmp
mov
ror
and
sbb
call
jge
xchg
and
ss
add
cmp
mov
adc
mov
notb
incb
sbb
popa
mov
scas
stos
pop
xchg
push
in
push
in
imul
mov
or
test
das
addb
add
jb
dec
xchg
sub
and
lock
ja
xor
std
aad
addb
adc
jg
pop
push
insb
or
push
xchg
pop
push
fabs
jle
push
cli
ret
pop
and
call
call
call
mov
mov
pop
push
rol
jb
inc
popa
dec
pusha
insl
daa
sub
dec
in
or
add
sub
add
subl
insb
aam
into
sbb
enter
push
and
mov
add
add
add
jl
rcrb
sbb
cmp
test
sti
js
fists
or
stos
jge
and
jnp
movsb
mov
push
insb
or
jl
rcrl
cmp
in
dec
sbb
cs
popf
mov
sbb
addr16
jae
xchg
sbb
mov
popa
xor
ja
inc
jmp
push
xchg
pusha
int
and
mov
into
lds
jecxz
mov
mov
int3
pop
pushw
in
fs
shl
pop
mov
popa
xchg
rorb
adcb
add
les
neg
loopne
inc
pop
out
cmp
adc
sub
out
mov
inc
sub
and
adc
ficompl
and
or
inc
outsb
movsl
test
push
stos
jmp
insl
movsb
add
fbld
pop
imul
scas
cmp
daa
dec
dec
mov
jp
jmp
loope
adc
mov
sbb
jne
mov
into
insl
mov
call
call
and
sbb
fldt
ret
jb
or
or
cwtl
pop
scas
iret
cwtl
push
mov
test
cmp
leave
movsl
shr
jecxz
add
popf
add
sarb
lea
dec
sub
mov
push
outsl
sarb
les
sbb
xchg
ret
mov
add
add
in
aaa
inc
xchg
jmp
adc
cld
mov
dec
xorl
mov
sbb
call
fstps
sub
mov
and
outsb
mov
add
mov
sub
add
mov
lock
sbb
xchg
into
dec
sub
inc
call
call
xchg
stc
cld
addr16
mov
adc
shlb
scas
xchg
add
dec
or
push
icebp
push
insb
xchg
pop
or
arpl
add
add
add
add
sti
cld
call
call
dec
subb
nop
xor
or
adc
loope
pop
sbb
pop
enter
lret
scas
mov
pop
sub
cmp
jae
leave
inc
int
cltd
arpl
rol
sti
pop
jg
mov
jecxz
and
add
add
adc
inc
mov
ret
sbb
or
dec
mov
out
dec
adc
pushf
loop
ret
nop
or
bts
xchg
lods
dec
roll
ret
outsb
push
sbb
mov
int3
inc
push
cmc
roll
xchg
mov
xchg
addb
add
push
pusha
xchg
outsl
sbb
loopne
add
add
add
add
inc
push
xchg
xor
dec
test
push
lods
shll
int
cmp
add
andb
jb
adc
addr16
jl
add
imul
mov
pop
jno
rorb
je
and
ja
mov
out
and
push
pop
stc
mov
add
add
stos
lods
and
cld
inc
clc
mov
call
call
jle
xchg
xchg
scas
insb
push
daa
call
in
cmpsb
mov
jno
lret
stos
mov
adc
jo
clc
rcll
dec
mov
mov
hlt
sub
jnp
adc
iret
adcl
add
cmp
dec
gs
mov
outsb
and
inc
push
cmp
fmuls
aaa
add
add
and
mov
ljmp
sub
add
outsl
imul
daa
xchg
arpl
loop
inc
aad
data16
jo
adc
inc
nop
dec
and
push
inc
loop
add
add
add
in
xchg
pop
pop
outsl
daa
fs
sbb
das
jbe
loop
lret
sub
add
jmp
jg
iret
jge
mov
jle
ds
in
push
pop
cmp
fistpll
lcall
add
add
add
es
arpl
fsubs
test
add
jecxz
test
sub
xchg
pop
inc
pop
rcrl
scas
fwait
push
testl
sahf
loop
int3
outsl
popf
push
movsl
hlt
adc
mov
jl
xchg
mov
add
cmc
lock
cmp
push
mov
call
call
add
jnp
jo
xchg
int
inc
fstpt
jo
clc
inc
jno
popa
mov
add
xchg
sub
dec
ljmp
rcl
cmpb
push
pop
aas
cld
cmc
jle
xor
rcr
sbb
cli
add
mov
mov
cmc
sbb
ljmp
iret
negb
fldl
andl
add
add
add
add
sbb
insl
scas
insb
jbe
imul
or
add
add
add
push
pop
js
adc
xor
mov
adc
jecxz
push
stc
and
mov
jne
imul
jge
mov
sub
xor
xor
insl
xchg
mov
add
add
jnp
rcr
out
sbb
lea
jg
stc
lds
and
xchg
fldl2e
shlb
sub
pop
add
mov
ret
inc
or
or
and
scas
push
mov
xor
test
lods
or
popf
dec
jecxz
or
add
mov
testl
jge
test
inc
dec
mov
sub
sub
call
call
jp
and
adc
and
mov
add
ljmp
aaa
and
jmp
inc
dec
pop
add
int
add
add
add
add
dec
rcr
aad
fwait
idivb
add
repz
lahf
arpl
xor
cmp
gs
and
out
pop
or
mov
popa
lcall
ret
aaa
adc
sbb
jo
cli
adc
mov
xchg
int
add
add
add
add
add
leave
or
lock
sub
pop
testb
fnstsw
sub
pop
cltd
jns
sbb
dec
mov
out
aam
xchg
test
enter
pop
call
add
add
add
cli
jbe
mov
js
wrmsr
add
xor
mov
ret
adc
push
jnp
cmpsl
cs
jb
outsb
outsb
dec
imul
mov
add
inc
jne
popa
test
les
xchg
adc
add
subb
jnp
frstor
dec
loope
popa
sbb
mov
cmp
xchg
jle
add
add
mov
and
frstor
xor
and
inc
int3
xor
or
rolb
lods
xchg
mov
data16
mov
add
lret
mov
nop
cld
push
nop
xor
gs
jne
cmp
pop
sbb
and
outsb
sbb
incl
pop
inc
add
adc
frstor
dec
outsb
add
add
add
add
movsl
nop
dec
sbbb
inc
test
xchg
fmuls
inc
xor
and
sub
xor
pusha
pushf
mov
add
xlat
lcall
mov
mov
call
call
call
add
add
add
add
inc
push
jns
inc
xchg
rcrl
pop
mov
mov
scas
bound
adc
sbb
mov
aam
sbb
mov
leave
xor
shrl
rorl
ficomps
leave
ret
add
orl
add
add
add
add
pushf
dec
sbb
adc
and
cmp
gs
dec
mov
out
xchg
xor
daa
insb
stos
push
add
dec
loope
adc
sahf
inc
adc
cmpsl
mov
movsl
jae
sldt
or
adc
test
jb
fisubl
add
push
jecxz
add
add
add
add
pop
add
pushf
bound
mov
sahf
pop
je
dec
and
push
fcomps
lods
jae
clc
jge
aaa
fadds
dec
sub
sahf
push
in
add
add
scas
shl
out
in
notl
pop
jo
pop
lahf
push
push
cmp
in
lcall
adc
inc
loope
fiaddl
mov
scas
and
xchg
fadd
sbb
cmp
cwtl
adc
jle
aam
mov
icebp
pop
rol
inc
pop
test
sub
ljmp
repnz
add
dec
mov
push
out
movsl
out
jb
out
daa
inc
sbb
cmp
call
call
call
pop
jo
add
sub
popf
add
add
pusha
dec
dec
and
adc
repz
imul
jne
cmpsl
sbb
add
add
add
sbb
pop
cs
call
or
loop
notb
push
xchg
inc
insl
add
loop
pop
data16
test
push
sub
push
push
jge
push
stos
and
xchg
xchg
mov
ret
mov
sub
rclb
add
add
add
add
xor
test
adc
inc
mov
push
outsl
pushf
in
push
call
call
xchg
es
dec
repz
cmpl
ja
mov
mov
jge
popa
ja
mov
xchg
adc
mov
pop
or
dec
pop
jecxz
arpl
add
add
add
add
sarl
aam
xchg
cmp
and
ljmp
xor
mov
sbb
fidivrl
add
call
call
pop
sbb
dec
inc
dec
enter
inc
lods
xorb
nop
mov
dec
push
cmp
nop
jmp
jns
arpl
jp
add
and
cmpsb
cmc
in
dec
xorb
sub
add
inc
jbe
fisubl
xor
popf
int3
or
adc
iret
int
inc
xor
test
cmpl
paddsw
imul
sub
mov
cs
mov
and
in
cwtl
cvtps2pi
andl
mov
adc
in
lret
filds
popf
movsl
fwait
arpl
dec
mov
sub
adc
es
xchg
dec
or
movsb
mov
ljmp
jb
add
pop
and
outsb
xlat
arpl
add
push
rcll
dec
cltd
adc
ror
in
test
xchg
stc
sub
add
add
add
add
add
call
es
ja
in
pop
inc
dec
js
sub
fdivrs
add
mov
inc
iret
jb
xor
cmpsb
add
mov
jae
leave
test
mov
rclb
stos
dec
insb
sti
pushl
add
mov
push
ret
pusha
jmp
mov
insl
movsb
clc
jo
or
jae
mov
pop
jecxz
scas
xchg
fwait
stos
jne
pop
and
dec
sub
dec
or
add
add
inc
imul
loope
sbbb
idivl
add
loope
shl
pusha
stos
pop
test
mov
add
add
add
dec
jno
out
pop
pushf
cld
cmc
push
popa
jbe
mov
pop
shr
call
call
call
or
and
sbb
aam
cmpsb
xor
dec
dec
loope
and
push
movsl
mov
fbld
add
adc
xor
push
add
add
add
stos
or
ret
xor
jne
and
mov
test
mov
push
sub
stos
inc
mov
mov
mov
push
insl
push
sub
in
andb
in
add
add
add
and
cli
jb
sarb
pop
sbb
jg
adc
xchg
mov
clc
fnstenv
jnp
arpl
xchg
stos
imul
movsb
adc
cmpsb
ja
mov
mov
mov
add
loope
and
enter
add
dec
adc
mov
insl
add
in
in
push
les
sarl
lcall
add
xor
iret
push
sbb
lea
frstor
gs
call
call
call
push
adc
sbb
mov
fdivrl
add
add
add
ret
add
add
add
sbb
das
mov
aas
jnp
ss
mov
loop
pop
sti
mov
add
add
add
push
test
aad
arpl
aas
aad
lahf
pop
xchg
xor
hlt
in
movsb
xor
mov
fwait
xchg
pushf
arpl
in
jle
dec
icebp
incb
push
das
int3
cmp
xchg
addb
add
add
out
xor
pop
xor
icebp
mov
ret
xor
filds
add
add
add
add
mov
dec
enter
outsl
insl
jle
jo
js
sbb
xor
inc
in
cmp
fcompl
lahf
push
daa
jg
and
loop
or
ret
movswl
mov
out
in
sbb
add
add
add
test
xor
out
mov
add
push
push
and
sbb
sbb
lods
xchg
scas
fldt
call
sarb
mov
pushf
jecxz
jg
xor
xor
rol
xchg
jnp
inc
aaa
les
mov
pop
mov
xchg
in
rclb
pop
cmp
cmp
jae
add
lcall
add
add
add
inc
cmp
fisubrs
sahf
sub
add
add
add
add
push
push
lods
sub
add
jmp
and
loope
sub
call
call
call
add
add
add
adc
clc
jbe
and
dec
jg
jle
dec
add
imul
call
call
push
and
adc
pop
and
mov
repz
pushf
mov
fsub
scas
ljmp
daa
test
adc
jmp
pop
sbbb
add
sub
mov
gs
sti
jae
dec
xchg
mov
mov
pop
xchg
in
bound
add
xor
add
xor
arpl
push
jge
cmp
add
add
int
bound
sub
ss
shlb
add
fnstcw
xchg
lret
add
sbb
jmp
add
pop
cmpb
cmp
movsl
fnsave
and
sarb
jg
int3
js
jge
fcomps
ret
add
arpl
push
add
test
lret
subb
push
or
xchg
js
or
mov
pop
mov
xchg
sbb
and
lahf
and
stos
xor
push
mov
mov
xchg
fisubrl
adc
test
lods
jo
add
pusha
scas
pop
or
add
add
add
add
add
add
add
insb
or
loope
jle
or
add
push
sahf
xchg
or
cmpsl
cmp
jmp
add
fdivl
sbb
cltd
mov
cld
xor
add
cmp
in
xchg
xor
inc
shrl
cmpsb
popf
inc
call
jo
pop
pop
xchg
adc
out
add
loopne
adc
push
inc
adc
push
pusha
or
push
sub
xchg
push
pop
pop
and
int3
push
sahf
sbb
insb
mov
push
ficoms
xchg
das
shlb
adc
add
xor
pop
in
add
add
inc
pop
incl
adc
call
call
aas
cmp
scas
or
xchg
cmp
aad
sub
add
test
mov
adc
sub
mov
push
inc
add
out
testl
cmp
sar
and
cmp
sbb
add
popf
or
xor
stc
clc
fistl
jnp
fsubl
add
enter
and
adcl
add
add
add
pop
mov
push
lahf
mov
cmp
pop
jle
inc
test
sbb
addr16
add
in
lret
cs
mov
outsl
jo
lods
bound
add
add
add
add
push
outsl
push
imul
push
aad
dec
mov
inc
imul
jl
outsl
sub
leave
into
mov
pop
into
cmp
jns
xor
or
mov
loope
push
inc
idivb
jno
and
xor
rclb
int3
shlb
setnp
popa
in
add
sti
xor
add
add
add
add
push
sub
cli
sub
imul
mov
mov
adc
call
call
adc
aam
out
std
hlt
pop
push
xor
inc
mov
hlt
sbb
inc
cmp
arpl
mov
adc
jb
test
dec
adc
jbe
into
jo
pop
xchg
shlb
ret
sti
xchg
hlt
add
dec
in
mov
or
fidivl
push
xor
cli
dec
sbb
push
sbb
sahf
jb
push
sbb
repnz
in
pushf
sbb
push
ja
adc
adc
pushf
imul
sti
mov
shll
daa
cmp
int
addr16
push
and
xor
inc
add
dec
loop
mov
jbe
jb
and
pusha
sbb
addr16
inc
int
idivl
jmp
adc
cmp
dec
jns
ret
into
fnstsw
insl
lcall
add
add
add
xor
je
into
xor
aaa
cmpsl
jae
or
inc
mov
xchg
mov
scas
cmpsb
andl
mov
and
mov
dec
jg
insl
xchg
out
dec
rclb
inc
in
negb
test
inc
mov
jecxz
inc
and
sarb
jmp
xchg
add
lret
pushf
or
ss
andb
loop
int3
dec
inc
push
xor
pop
fucomip
lcall
movsb
call
call
call
pop
lcall
inc
mov
mov
insl
fsts
div
in
pop
adc
mov
add
add
inc
add
add
push
pop
subl
jno
add
add
inc
jmp
xchg
shll
or
add
sub
pop
mov
push
icebp
mov
pop
nop
lds
mov
jg
mov
idivl
adc
push
clc
adc
fwait
pushf
scas
dec
jno
pop
and
cwtl
dec
out
ret
nop
mov
push
dec
iret
nopl
jle
dec
cmp
dec
and
les
cmp
xchg
mov
add
mov
pushf
sti
imull
pop
cli
inc
call
dec
mov
jne
iret
push
mov
push
mov
je
add
into
pushf
add
lcall
call
int
push
test
loope
sbb
add
imulb
adc
out
xchg
cmp
xchg
pop
adc
popa
dec
xlat
scas
out
xchg
mov
jns
push
icebp
fmull
dec
or
add
adc
icebp
xor
jbe
add
xor
mov
cmp
pop
xchg
dec
jge
jo
addr16
call
call
popa
inc
and
pop
mov
mov
mov
adc
mov
call
mov
dec
ret
test
adc
decl
add
add
add
add
es
mov
sub
sahf
pop
call
mov
lock
mov
test
xchg
push
in
scas
fnsave
cmp
mov
inc
cmp
jg
ret
mov
xchg
insb
in
push
cmp
addr16
add
sarl
scas
mov
lea
push
test
push
ffree
je
pop
adc
and
mov
call
call
mov
adc
mov
mov
mov
cmp
cs
fsubs
inc
or
stc
dec
outsb
loop
movsl
daa
xor
bound
lcall
add
add
push
mov
push
pop
or
lret
cmc
dec
adc
jns
sahf
push
das
ret
stos
js
lahf
xor
push
ret
ja,pn
xor
cmp
ja
adc
add
mov
add
push
mov
daa
mov
in
jl
stc
add
dec
xchg
insb
lret
shrb
push
sub
jge
cmp
add
out
call
call
call
add
adc
dec
or
bound
inc
ja
or
fldcw
nop
addr16
aaa
adc
adc
loope
adc
jae
lea
add
daa
out
push
jmp
outsl
jae
std
pop
loope
test
pushf
sub
aaa
in
pop
xor
mov
stc
add
call
mov
jp,pt
ret
pop
mov
test
mov
in
rcl
adc
cmp
and
add
fidivl
sti
pop
mov
and
scas
add
cmp
jne
adc
sub
lahf
std
mov
push
dec
aam
in
mov
cmpsl
dec
cmp
cli
mov
mov
and
arpl
arpl
xor
shll
sbb
cmpb
test
pop
std
xchg
xchg
jecxz
nop
mov
add
decl
sbb
cmc
scas
hlt
mov
cmp
scas
fistl
mov
push
data16
sbb
out
adc
rorl
mov
dec
adc
leave
cmp
rolb
lcall
test
fmull
lahf
cwtl
outsb
jo
add
add
add
add
mov
shr
jo
dec
mov
aam
dec
or
fcmovnb
test
push
mov
push
repz
popa
cli
repnz
pop
insl
or
or
mov
cltd
pop
out
sbb
and
jmp
cmp
call
call
jl
fwait
test
leave
push
imul
add
add
add
pop
stc
cli
xchg
mov
mov
fmull
or
pop
mov
jmp
sub
jb
inc
inc
pop
mov
in
push
and
jno
add
add
add
add
sub
rcrl
repz
loope
ret
call
call
cmp
mul
scas
lcall
sub
cld
xchg
lret
icebp
imul
mov
addr16
jmp
pop
adc
cltd
fisttpll
xorl
or
leave
jbe
sub
das
jnp
fsubrs
nop
add
pop
lcall
lock
cmpsl
push
or
dec
sbb
je
cmp
xor
in
sub
call
xchg
jae
and
or
lahf
push
sti
lock
adc
and
mov
cs
xor
aad
les
les
cmp
sbb
sbb
cmp
xchg
out
imulb
jp
add
add
adc
jae
pop
pop
call
call
call
or
cmpsl
or
iret
cwtl
lds
dec
fwait
loope
xor
dec
mov
test
mov
addr16
push
test
icebp
xchg
cmp
add
add
add
add
xchg
and
dec
imul
sti
out
outsb
push
jg
mov
push
cmpsl
jle
daa
aad
call
repnz
pushf
dec
lock
ds
shlb
xor
mov
call
call
add
push
insl
out
push
sbb
insb
inc
adc
lret
pop
and
add
add
add
jbe
repz
push
dec
cwtl
cmp
out
add
add
and
lds
sbb
rcrb
mov
out
cmp
outsl
push
push
outsb
enter
mov
pop
test
test
sti
push
dec
in
adc
ja
popa
std
add
lea
jo,pn
nop
jb
and
fld1
das
inc
dec
mov
xchg
mov
sub
mov
mov
shl
sbbb
lcall
shl
xor
lcall
js
cmpsb
shrl
pop
or
out
push
std
test
jmp
lea
bound
pop
rcll
add
mov
stos
testl
imul
mov
cmp
addl
pop
repnz
repz
xchg
stos
dec
jnp
cltd
inc
lahf
pop
cmpsb
clc
push
mov
or
mov
in
add
adc
and
loopne
in
enter
xor
cmp
add
add
add
add
out
call
call
adc
popf
mov
inc
stos
aam
mov
push
add
add
add
add
add
nop
arpl
lods
xchg
mov
dec
dec
mov
imul
adc
mov
xor
push
insl
mov
mull
adc
push
sbb
sahf
pop
cld
hlt
repnz
fdivs
inc
add
cli
popf
add
push
jp
pop
div
add
jle
sbb
dec
ret
ljmp
mov
push
pusha
mov
jg
cmp
gs
and
sbb
mov
and
add
and
pop
std
out
xor
mov
mov
xchg
mov
jp
mov
pop
mov
pop
inc
mov
push
dec
jnp
cld
lret
inc
or
icebp
arpl
mov
cmpl
call
mov
mov
inc
enter
cmp
cli
mov
add
fisttps
test
cmp
and
neg
add
cs
jb
push
out
adc
mov
fs
cli
inc
cmpsb
jg
and
iret
inc
or
into
cmp
xor
dec
pop
xchg
xor
cltd
cs
mov
sbb
shl
lods
add
add
add
add
pop
xchg
das
rcrl
call
jb
add
add
add
add
cmp
sub
js
inc
dec
add
sub
call
call
call
loopne
jecxz
add
add
add
add
gs
fisttps
mov
sbb
nop
stos
imul
sbb
and
jo
xchg
push
in
xchg
xlat
outsb
lds
xchg
flds
xor
in
stos
inc
lcall
mov
addr16
addr16
or
loopne
fsub
xchg
xchg
pop
sub
popf
int
lcall
adc
mov
inc
and
mov
insb
jle
add
add
add
lcall
mov
push
int
xor
dec
cwtl
scas
cmp
lret
jmp
mov
je
and
bound
cmp
add
add
pop
xor
mov
aaa
or
cwtl
cltd
iret
inc
and
dec
mov
mov
js
pop
jae
into
clc
iret
testl
out
nop
fabs
mov
mov
lock
or
mov
xchg
push
ds
xor
lret
cld
sub
mov
mov
lea
mov
xchg
mov
mov
test
inc
push
inc
lcall
sbb
sahf
jmp
movsl
mov
inc
pop
test
sbb
jo
add
add
add
xor
xchg
icebp
jge
popa
pushf
jge
test
clc
std
imul
cmp
add
pop
outsb
push
push
call
call
pop
aaa
fnsave
fmulp
xor
adc
sbbl
jle
loopne
call
mov
loop
inc
add
add
ret
mov
stos
sbb
or
cmp
mov
adc
xchg
mov
mov
jge
dec
lods
into
mov
bound
xchg
fs
inc
pop
mov
push
imul
mov
add
add
add
sub
std
jge
adc
add
movsl
pop
cmp
or
je
adc
xor
xchg
pop
bound
or
adcb
in
push
divl
xor
testb
mov
lret
add
add
jnp
sbb
icebp
in
ror
push
fcoms
add
movsl
mov
pop
pop
pop
ss
jno
mov
and
or
mov
subl
push
scas
xor
sbb
fwait
sbb
insl
rcrb
fmuls
add
andb
shl
dec
sub
test
sahf
push
inc
cmp
xor
inc
pop
mov
test
push
add
bound
in
mov
pop
ret
das
xor
add
adc
enter
xchg
int
leave
setne
dec
mov
sub
push
xlat
adc
scas
and
stos
mov
ret
repnz
pop
call
call
push
mov
add
push
mov
icebp
add
add
add
test
ljmp
ret
or
sub
add
mov
push
add
lret
movsl
add
xor
stc
mov
fsts
sbb
or
adcl
add
add
add
add
popf
jmp
cltd
shll
xchg
faddp
add
pusha
dec
xor
add
je
push
addr16
or
call
mov
lcall
cmp
mov
mov
not
or
cltd
out
mov
movsl
aaa
lods
jg
mov
lcall
push
xchg
jl
push
loopne
dec
mov
test
cmp
daa
sub
add
add
add
jp
jb
sub
xchg
jb
sbb
sbb
filds
mov
sbb
add
add
add
add
sub
loopne
stos
mov
sub
lcall
jo
sbb
out
mov
out
pop
cmpsl
rcrb
and
test
dec
sbb
int
adc
jns
movsl
jg
jecxz
addr16
daa
jno
adc
jecxz
popf
add
push
add
and
add
dec
or
ret
adc
lods
repnz
js
out
insl
push
rorb
cltd
mov
lret
lods
pop
roll
cli
sub
jmp
cs
mov
mov
stos
repz
add
dec
dec
sahf
jecxz
addr16
loop
add
xchg
xor
dec
daa
inc
add
fildll
lods
in
jo
jb
jnp
mov
fldcw
add
add
js
xchg
rcll
jle
insb
mov
arpl
aaa
call
sbb
jecxz
xchg
arpl
std
jmp
jne
insl
dec
ret
cmpsb
stc
repz
call
rorl
cld
push
mull
or
add
push
cwtl
loope
lock
add
cmp
pop
mov
add
hlt
and
fwait
sub
scas
mov
in
push
imul
jge
jp
inc
jle
js
icebp
jle
sbb
stc
fbld
sbb
xchg
cs
cmp
in
lds
xlat
or
xchg
add
movsb
in
cmc
sahf
add
cmp
and
adc
xor
inc
add
daa
lds
clc
fstpt
jns
ss
lahf
mov
cmp
add
xor
daa
stos
les
test
outsl
sbb
dec
loop
repz
out
sub
dec
mov
mov
lret
sti
pop
mov
ljmp
mov
jge
xor
xchg
mov
push
or
xchg
inc
insl
pop
mov
sub
bound
mov
aaa
mov
add
add
add
add
rorb
add
add
add
add
push
add
mov
xchg
fwait
popf
daa
jmp
xor
or
popf
ljmp
ds
daa
fiadds
lcall
mov
ret
mov
ffree
cmc
lret
leave
icebp
mov
push
cltd
sbb
jge
dec
call
call
jle
xor
dec
add
lahf
fmuls
mov
cmc
adc
into
dec
idivb
xchg
scas
jnp
adc
cs
shlb
iret
adc
fwait
xchg
rcrl
inc
mov
or
mov
inc
and
jb
cwtl
loope
call
dec
adc
iret
ret
sbb
call
push
cmp
add
add
add
add
cltd
cs
shll
lea
add
call
call
call
mov
xorl
pop
mov
out
pop
pop
mov
ret
shl
dec
iret
pop
push
xor
mov
jl
lea
push
and
pop
rcrl
pop
pop
test
adc
iret
loopne
adc
mov
inc
loopne
call
sub
rorl
push
push
xchg
dec
out
scas
cs
dec
es
pop
inc
adc
cs
out
enter
adc
leave
or
sub
sub
call
call
add
add
add
frstor
pop
jge
add
add
add
add
inc
cli
mov
add
inc
jle
adc
daa
test
jnp
add
push
mov
xorb
mov
insb
pop
pop
and
dec
addr16
int3
fstpl
or
adc
movsb
push
nop
xor
andb
push
cmp
fidivrs
push
pop
xchg
pop
xlat
nopl
rcrl
xchg
pop
add
int3
xlat
aam
inc
lahf
adc
pop
adc
jne
adc
and
xor
stos
scas
cmp
cld
xchg
les
call
call
call
jge
mov
mov
jb
call
call
out
jae
pushf
inc
fwait
das
call
lret
mov
loopne
addr16
mov
jnp
push
test
popa
xor
fcomp
inc
mov
mov
cmc
jns
gs
aam
inc
dec
xor
pop
xor
or
aas
std
push
imul
lcall
jnp
in
fistps
cmp
pop
lea
mov
jmp
mov
and
add
add
add
add
iret
repnz
ds
lret
add
fdivp
clc
jnp
ljmp
dec
in
xor
std
jge
int
test
sbb
add
int
push
lock
mov
inc
cltd
sbbl
pop
je
pop
sbb
push
dec
jg
xlat
lahf
cs
int3
or
mov
icebp
ljmp
fistl
cmp
loop
rcrb
imul
call
sbb
add
dec
shlb
sbb
leave
cmp
stos
lahf
xor
mov
cli
push
adc
mov
push
movsb
and
push
adc
add
add
add
scas
adc
mov
scas
mov
dec
cmp
inc
cmp
pop
push
fdivs
call
call
call
pusha
xor
mov
hlt
xor
js
or
inc
fcmovnb
test
pop
mov
je
cmp
dec
call
xlat
cmp
push
push
call
loop
sub
pop
inc
repz
push
xor
cmpsl
push
out
push
dec
roll
call
call
call
test
fsubrs
rcr
popa
mov
subb
iret
daa
pusha
ret
sbb
add
subb
pop
imul
or
mov
dec
mov
ds
add
jns
and
mov
xchg
lret
sbb
pop
jge
inc
dec
in
scas
loop
insl
imul
mov
xlat
adc
adc
imul
sbb
ds
adc
pop
nop
imul
sahf
pop
or
jle
push
test
jp
jge
add
pushf
pop
ds
sub
and
fisttps
sbb
xor
add
inc
lea
cwtl
pop
test
add
add
mov
sbb
cmpsl
insb
mov
fdivp
int
adc
insb
ret
and
jne
push
int3
mov
out
fwait
jnp
add
leave
lds
cld
dec
int3
adc
pop
push
pop
add
nop
add
mov
mov
add
mov
push
adc
hlt
arpl
jecxz
js
adc
inc
jp
xor
loope
mov
dec
sbb
call
call
call
cmp
cmpsb
mov
add
and
inc
ja
jg
enter
outsl
ror
clc
sarl
add
push
cmp
jp
mov
fwait
xor
adc
mov
jb
adc
popf
loope
xchg
lret
ret
mov
or
sarl
inc
sub
int3
cltd
pop
sbb
mov
add
add
add
add
xor
rclb
cs
lahf
add
mov
pop
mov
cmpsb
lods
dec
cmp
jl
lea
mov
clc
in
es
or
or
and
std
mov
aad
ljmp
add
add
pop
inc
or
les
clc
hlt
dec
sbb
nop
push
push
inc
jle
add
xlat
or
jnp
inc
stos
lods
shlb
pop
sub
add
ret
jmp
add
lods
mov
inc
or
fwait
imul
pop
inc
pop
or
roll
in
push
pop
stos
mov
sub
dec
repnz
add
add
xchg
pusha
sahf
and
add
cmc
sbb
mov
popa
add
xor
push
xor
test
mov
ja
arpl
and
cmc
sbb
mov
loope
ret
pop
repnz
inc
fwait
mov
mov
lods
mov
push
sub
mov
lds
add
call
call
call
jg
cli
pop
cmp
jg
add
add
add
cmp
stos
dec
fdivl
push
mov
ljmp
mov
inc
arpl
popf
testb
je
clc
dec
and
or
adc
inc
rcrb
bound
incb
dec
daa
xchg
xor
sbb
pop
fidivrs
fs
push
xchg
movsb
dec
inc
or
dec
sarb
xor
cmp
jp
sbb
dec
repz
pop
inc
sub
lea
idivb
mov
sar
push
xchg
cmc
daa
pop
loope
lods
adc
stos
mov
pop
mov
int3
addr16
pop
pop
mov
add
lds
out
adc
aas
dec
insb
jge
mov
push
fwait
add
in
mov
test
ror
iret
add
add
add
add
xchg
test
repz
xchg
stc
in
mov
flds
add
jge
jno
out
xlat
and
xor
inc
pop
xor
and
lret
call
call
add
jge
test
std
pushl
add
sub
push
push
mov
inc
fisubl
outsl
popa
inc
sti
add
push
pop
mov
add
pop
jne
outsb
repnz
or
push
cmpb
js
insb
nop
ds
pop
int3
sbb
fwait
out
mov
xlat
push
jbe
add
ret
lahf
gs
jmp
push
jae
int
sbb
iret
stc
lret
dec
xchg
mov
mov
out
iret
add
jle
data16
ja
pop
mov
outsl
adc
loop
ja
pop
enter
add
xchg
dec
adc
and
sub
push
pop
ljmp
jo
sbb
cmc
push
mov
add
int3
lret
out
clc
cltd
mov
cmp
lock
shrl
lods
push
cmp
inc
testb
sbb
call
call
call
rcr
sbb
add
jle,pt
mov
add
add
add
mov
jae
push
cmpsb
or
add
sub
call
call
and
pop
cmp
daa
push
addl
dec
lcall
test
subl
add
mov
sbb
push
test
and
or
es
add
sub
lahf
lods
das
sbb
enter
push
das
cwtl
dec
cmpsb
in
mov
push
mov
daa
sub
les
outsl
inc
ja
invd
testb
add
add
add
cmp
fwait
dec
xchg
xlat
js
push
pop
addr16
out
fists
pop
scas
sub
call
call
call
jo
dec
call
push
pop
jp
push
mov
xlat
add
xor
sbb
xchg
fstpl
push
push
stc
rol
cmp
out
fadds
les
sahf
xchg
inc
xor
sub
sahf
pop
xchg
or
add
jnp
mov
ja
sub
cmp
cli
fnstsw
cmp
add
xchg
in
data16
add
add
add
jne
sub
stc
roll
cmpsb
pop
shrl
sbb
ret
pop
imul
insb
ret
add
add
add
aam
inc
scas
push
and
insl
mov
inc
push
push
push
xchg
sub
insl
insl
je
int
test
adc
movsl
movsb
mov
into
inc
ret
dec
jb
mov
xchg
loope
lea
or
call
add
enter
push
aaa
adc
in
fwait
out
pusha
rolb
movsl
jl
add
add
aas
or
adc
test
popa
in
sub
enter
iret
sarb
in
sub
insl
nop
pop
call
add
jge
xchg
stos
cld
ljmp
mov
or
xchg
out
jl
icebp
cltd
push
inc
cmp
mov
rol
and
std
inc
pop
or
add
add
add
push
pop
sti
stc
xor
inc
dec
xlat
sti
pop
lahf
dec
inc
xor
add
push
andl
add
jnp
sahf
sub
clc
xor
xchg
clc
addb
cltd
insb
pop
out
cmp
call
call
call
call
lcall
sub
pop
out
mov
idiv
xor
cmp
fmuls
cmp
adc
call
call
call
inc
outsb
and
mov
jnp
icebp
add
rolb
lahf
and
decl
test
add
call
call
mov
sbb
ja
pop
pop
add
pop
or
dec
fcmove
stos
ljmp
jmp
leave
add
aad
jle
notb
lahf
out
inc
jp
andb
xor
data16
aam
dec
hlt
pop
addl
xchg
int
adc
xchg
add
add
add
add
or
or
adc
or
mov
or
jo
xor
jecxz
xchg
loope
loop
lds
cmp
unpckhps
mov
push
cmp
push
mov
fwait
adc
adc
aas
fsubrl
add
jge
mov
jb
jbe
mov
pop
sub
aaa
mov
outsl
aam
jecxz
jae
sub
cmc
dec
push
out
popa
lahf
mov
add
pop
cmp
rcr
adc
or
imul
cmp
jae
stos
loopne
jmp
inc
cmp
add
add
or
out
dec
outsl
sti
mov
mov
outsb
ja
mov
ret
mov
popf
jl
loopne
insl
adc
movq
add
add
add
add
pop
out
insl
push
cmpl
lahf
fstl
adc
and
pop
xor
push
jle
jge
push
movsb
adc
sbb
xor
call
outsw
inc
mov
cwtl
mov
adc
pop
pop
aas
cld
shr
sbb
or
fists
in
mov
call
call
cwtl
in
cmp
adc
jae
cmpsl
out
popa
or
gs
jmp
sub
push
andl
lret
add
xchg
sub
pop
loope
pop
jnp
lock
outsl
divl
xorl
push
pop
cwtl
cmova
push
mov
and
jge
sarb
popa
loope
cmp
fildl
sub
out
xchg
call
add
pop
lds
lds
mov
lods
pop
stos
scas
xor
mov
rorl
lahf
aaa
sbb
movsb
mov
cmpb
or
ret
cmp
mov
mov
add
ss
mov
shlb
add
add
call
call
mov
sti
jae
cld
das
sbb
fistpl
sub
jae
fwait
ds
push
jl
or
inc
add
loopne
pusha
nop
mov
add
and
nop
cwtl
popa
add
inc
inc
sub
mov
add
add
add
addr16
aas
in
movb
add
test
outsb
out
ret
mov
mov
test
in
popf
inc
add
dec
push
pop
sti
sbb
push
es
push
aaa
mov
pop
mov
adc
xor
int
addr16
add
push
cmp
jl
cmp
ss
test
insb
iret
jle
aad
cmpsb
popa
lods
sub
xchg
or
cwtl
xor
test
push
push
add
add
add
add
sub
call
call
call
loope
scas
orl
stc
add
mov
adc
sarl
mov
rol
arpl
fidivrl
push
sub
test
jb
dec
scas
mov
testb
push
jecxz
dec
arpl
cmc
sbb
and
je
xchg
cmc
xor
adc
add
out
sbb
dec
jecxz
cmc
les
test
call
ret
and
std
pop
or
add
pop
xor
add
call
push
cmp
add
sti
ret
xchg
test
inc
enter
loope
add
pop
cmp
aaa
jne
loop
push
jb
adc
mov
jp
test
mov
lds
add
add
add
add
insl
scas
sbb
lods
call
call
out
das
repnz
pop
test
ljmp
repnz
mov
push
sub
fists
sbb
cmp
mov
addb
cwtl
push
xchg
add
xchg
mov
js
add
sbb
push
mov
pop
pop
pushw
sub
aad
repz
add
add
add
adc
filds
arpl
cmp
leave
mov
data16
sahf
cli
cld
cmpb
loop
cmp
js
push
ds
bound
cmp
test
repnz
xchg
pop
filds
and
and
add
add
add
imul
dec
sbb
imul
push
pop
or
hlt
cmc
repz
ja
xor
sub
testl
icebp
mov
das
int3
push
jnp
jno
add
cmp
dec
in
add
sahf
outsb
mov
lahf
mov
mov
jp
and
ljmp
add
sub
xchg
mov
push
in
sbb
cmc
xchg
aam
mov
stos
lods
out
insb
add
add
or
adc
sub
mov
add
es
sbb
sahf
imulb
push
add
add
add
add
and
add
or
xor
aam
or
pop
or
push
mov
jecxz
negl
std
pop
and
scas
jb
cmp
aad
mov
icebp
pusha
sub
push
sub
call
out
lock
mov
jl
in
lods
cmp
add
inc
sub
sbb
sahf
sub
ja
and
clc
in
data16
clc
sub
pop
jns
add
ret
arpl
outsl
das
pop
shll
xor
mov
cwtl
imul
add
add
adcb
sub
mov
sub
testl
lret
inc
jne
mov
pop
movsb
mov
pop
xchg
dec
push
cmp
lods
test
pop
cwtl
sbb
test
mov
icebp
and
push
cld
and
pop
pop
push
loopne
shlb
fwait
aad
adc
adc
enter
testl
add
pop
jnp
aam
dec
inc
sub
xadd
shrl
xchg
or
cmpl
clc
push
add
roll
test
int
cwtl
aas
nop
or
aas
data16
imul
enter
loope
pop
hlt
cwtl
daa
lahf
add
icebp
scas
add
adc
adcb
xor
push
fildl
cmc
jp
std
mov
es
sti
xor
mov
mov
aam
jge
jnp
mov
test
cmc
lock
stos
cli
loop
sbb
pop
add
insb
inc
hlt
dec
add
call
call
xchg
ss
fisubrs
jecxz
pushf
aaa
rclb
loopne,pn
push
cmc
push
add
adc
cmpsb
adc
cmp
xor
sub
ret
cmp
inc
clc
mov
lahf
pop
stos
sbb
out
add
xchg
cmc
sbb
add
jno
pusha
sbbl
pop
pop
stos
test
addr16
leave
jmp
push
or
out
pop
repz
jg
mov
mov
stos
push
xchg
mov
sub
push
inc
add
out
int
jae
cwtl
int
push
cs
mov
mov
push
xchg
lds
mov
xlat
bound
xor
add
mov
add
call
sub
mov
add
xorps
add
jns
sub
lahf
fcomps
ss
sbb
push
add
inc
rcrl
mov
xlat
inc
out
dec
gs
mov
inc
cmpsb
imul
nop
mov
imul
fldl
js
adc
mov
mov
xor
pop
add
add
xlat
push
or
mov
mov
add
rcr
sarb
push
adc
sub
addr16
push
inc
xchg
push
or
dec
lock
cmpsl
scas
push
jmp
xchg
in
mov
mov
sbb
punpckldq
or
pop
jg
out
xchg
test
mov
sub
shl
sub
test
mov
int
dec
adc
int
push
loop
adc
movsl
sub
inc
test
push
jp
sbb
mov
mov
inc
fs
inc
fdivs
test
mov
jae
scas
push
out
test
out
jp
dec
pop
je
fsubrs
and
lcall
fistl
xchg
inc
ds
in
arpl
add
add
xchg
mov
add
es
insl
dec
leave
jnp
dec
push
cmp
test
popa
cmc
and
jle
mov
jp
insb
test
cmp
push
cwtl
out
add
mov
test
add
sbb
sti
shrb
mov
bound
imul
in
sahf
hlt
inc
lea
insb
outsl
mov
push
pushf
test
icebp
movsb
add
in
nop
add
add
sbb
scas
insb
sub
jle
dec
and
add
aas
inc
call
call
xlat
pop
xor
mov
cmp
and
mov
mov
fidivl
iret
pop
mov
in
xor
add
cmpsl
dec
jl
pop
pop
imul
mov
aaa
pop
std
push
adc
aad
cmp
sbb
ret
push
add
stos
cli
add
sub
test
aaa
cwtl
push
pop
inc
in
add
xchg
or
iret
jecxz
pusha
add
jns
pop
int3
adc
pause
iret
add
xor
mov
test
movsl
aaa
or
test
out
inc
mov
bound
call
call
mov
push
or
fnstenv
sbb
add
add
cmpsb
cli
pop
das
int3
cmp
xlat
in
ja
dec
mov
ror
inc
fdiv
mov
decl
out
sbb
loop
mov
jl
sbb
lea
ja
sbb
pop
out
test
sub
jl
mov
and
popa
imul
xchg
loopne
aad
xor
loope
cmp
aad
sbb
loop
mov
insl
or
add
add
push
mov
in
dec
mov
jne
cld
sti
cld
mov
push
or
cmp
pop
rorl
jbe
xchg
arpl
aas
aam
into
into
mov
add
add
fidivrs
jb
jb
cmp
sub
add
adc
mov
pop
mov
xor
daa
das
sub
mov
dec
stc
or
lds
fwait
sub
xor
xlat
ret
push
push
out
mov
ja
add
inc
lahf
add
push
mov
pop
iret
inc
push
hlt
imul
dec
ljmp
pushf
sub
repnz
icebp
and
sub
jae
lods
jnp
inc
outsl
push
clc
mov
repnz
xor
lods
push
inc
jne
pushf
mov
adc
mov
xchg
sbb
add
add
call
pop
mov
les
add
mov
inc
aam
call
call
or
ret
in
test
jns
xchg
adc
movsl
mov
mov
inc
cmp
jl
jp
das
cmp
or
lods
test
insb
js
pop
pop
jae
shll
pop
or
and
pop
sub
push
scas
xchg
sbb
add
add
int
mov
stc
push
push
and
and
add
enter
cmpsl
fxtract
sbb
jne
add
add
add
add
imul
sbb
cmp
ljmp
outsb
dec
insl
popa
sub
lcall
mov
call
call
pop
cli
xor
int3
sbb
sbb
mov
imul
repnz
stc
add
add
in
in
stos
cltd
xor
xorps
xchg
sahf
mov
rclb
sarb
or
movsl
cmp
nop
in
sub
lods
cmp
sbb
icebp
xchg
jns
add
sbb
push
loop
cli
and
fs
sub
mov
push
xor
leave
mov
mov
ret
cmp
add
add
add
add
das
into
arpl
inc
add
add
add
add
xor
aaa
sub
cmp
pop
fidivl
call
and
adc
ja
xchg
adc
inc
or
das
ljmp
or
add
fimuls
push
outsl
je
arpl
add
dec
jbe
jne
fld
push
add
pop
mov
mov
sub
je
sarb
pop
push
fs
mov
pop
inc
bound
mov
and
ss
cmp
iret
std
pop
mov
movsl
mov
repz
and
add
xchg
mov
out
into
dec
jns
lds
inc
mov
xor
add
jne
pop
loopne
fisubrl
out
rol
mov
std
call
dec
idiv
pop
sbb
jo
mov
hlt
push
sbbb
pop
jg
cmp
xchg
push
insb
adc
mov
jecxz
jmp
loope
sbb
add
add
and
lods
bound
sbb
sub
xchg
cltd
pop
or
shrb
psubsb
call
call
or
lods
push
aaa
sbb
or
add
call
jge
decl
leave
insl
aam
lcall
add
mov
fsubl
movsb
pop
xor
add
add
inc
mov
mov
adc
mov
push
outsl
notb
daa
add
leave
in
dec
out
rcr
cmp
pop
movsb
and
jle
clc
xor
test
pop
stc
add
jg
addr16
jl
mov
imul
addb
inc
jg
stos
leave
jp
push
rclb
jmp
pop
ljmp
dec
mov
dec
jmp
mov
in
out
idiv
clc
cmp
aam
cmp
into
dec
fldenv
cmp
sbb
movsl
mov
fwait
inc
adc
jne
lock
out
out
scas
or
out
cmpl
pop
mov
arpl
outsl
mov
stc
cld
nop
ficoms
cs
sbb
out
int3
pop
fisubl
add
add
add
sub
rcll
pop
in
in
das
call
cltd
sub
lret
inc
push
sub
add
setg
add
mov
xor
sarb
leave
add
xorb
sbb
and
xor
mov
jae
pushf
mov
icebp
ljmp
push
jo
shll
int3
cmp
jmp
pop
mov
lea
add
fists
pop
out
or
pop
inc
ret
mov
mov
push
mov
add
add
add
add
clc
ljmp
add
xchg
push
dec
prefetch
fs
mov
add
add
ffreep
stc
shll
sub
adc
mov
adc
dec
push
stos
fs
xor
mov
insb
outsb
insl
cmp
sub
inc
sub
inc
mov
add
add
add
add
fwait
in
pop
cs
pop
test
jae
adc
sarb
push
mov
dec
jae
jbe
ja
mov
insl
sbb
cs
mov
pusha
call
call
int
push
loop
or
insb
adc
push
dec
pusha
adc
lods
pop
pop
in
adc
imul
mov
fsubrl
fildl
push
add
add
add
mov
adc
imul
xor
movsl
add
pop
add
lock
sub
xchg
loop
mov
jp
rcrl
add
mov
push
rolb
and
mov
movsl
pop
test
adc
xchg
push
out
data16
scas
or
rcll
add
jno
imul
mov
mov
imul
mov
paddd
idivb
mov
aaa
lods
aaa
insb
fs
movsl
inc
add
sub
xor
sub
push
sub
mov
xchg
add
xor
gs
pop
push
inc
repz
inc
mov
add
add
fistpll
shrl
and
imul
lock
stc
mov
sarl
add
add
cmp
sbb
push
jmp
insb
lods
pop
sbb
enter
or
add
cltd
test
ss
pop
les
mov
sti
int3
mov
call
call
call
lods
stos
inc
inc
test
jecxz
jle
sar
push
xorl
je
add
sub
jl
pop
lret
jnp
imul
cmc
imul
jne
jnp
inc
adc
add
add
push
rcl
in
pop
jge
loopne
add
repnz
fs
mov
fcompl
push
mov
shrl
scas
inc
je
repnz
mov
arpl
insl
call
call
jle
inc
xchg
push
mov
stos
mov
jno
call
jo
iret
divb
loope
test
add
addr16
adc
std
mov
divb
push
add
sbb
dec
xlat
jge
and
or
outsl
xchg
jne
iret
mov
sbb
push
popf
out
scas
insb
sub
xchg
mov
inc
cs
stos
hlt
jecxz
inc
fmul
xor
std
lret
add
xor
jmp
imul
pop
pop
sub
xchg
xor
jb
and
inc
inc
pop
shlb
sbb
test
outsl
lods
outsb
outsl
mov
cld
mov
xor
adc
xchg
mov
iret
loope
jg
sbb
mov
into
rolb
fnop
stos
sub
pop
pop
out
imul
add
call
call
adc
push
pop
lea
outsl
mov
std
lods
add
mov
add
add
add
add
jmp
dec
push
fsubp
push
sti
add
mov
lcall
push
dec
in
leave
test
in
lret
fstl
imulb
out
add
add
pop
lods
push
jle
imull
les
xchg
mulb
call
mov
insl
jno
mov
jo
pusha
push
mov
call
call
call
jne
or
lea
into
movsl
icebp
pushf
inc
fbld
adc
mov
in
outsl
xchg
xchg
call
call
fcomi
add
xchg
xchg
push
call
adc
or
mov
std
shrb
andl
and
es
pushf
rcl
aam
mov
icebp
fdivs
daa
mov
dec
ret
jnp
mov
xlat
add
insb
inc
loope
add
js
mov
clc
jbe
nop
mov
int
mov
lret
call
call
call
cwtl
cmp
jle
or
inc
ss
sub
push
mov
push
or
inc
clc
mov
sbb
xchg
fs
call
and
cmp
repz
aas
push
in
jno
or
call
pushf
push
gs
sbb
test
mov
add
add
roll
pop
ret
fucomp
lret
clc
popa
call
inc
int
mov
pop
jmp
push
sbb
rorb
push
mov
lods
lods
lea
jmp
add
call
out
push
mov
or
xor
adc
mov
test
add
mov
test
arpl
and
dec
push
sub
jg
and
cmp
push
inc
ja
lahf
aad
push
dec
lds
mov
lcall
fmull
xor
mov
inc
mov
add
add
add
shl
jmp
ret
add
pusha
mov
cmp
adc
lods
pop
insl
arpl
stc
outsb
inc
mov
push
push
dec
adcl
ds
dec
popa
jge
sub
hlt
dec
xchg
loopne
in
pop
movsb
mov
add
cmp
mov
xchg
jmp
add
add
jle
clc
in
jmp
test
inc
outsl
xor
rorl
jmp
insb
xor
xor
xor
mov
pushf
iret
adc
xchg
cmp
adc
mov
in
adc
in
jb
mov
les
xor
jbe
xchg
movsb
xlat
in
movlps
mov
add
jecxz
cmp
mov
scas
jl
sbb
pop
ret
loope
and
not
dec
or
popf
pop
sub
cli
push
add
xchg
dec
fs
mov
stos
pusha
jge
push
and
lods
xlat
and
xchg
fistpll
xchg
adcl
stc
pop
repz
imul
roll
jl,pt
push
jno
mov
aaa
mov
push
cmp
insb
outsl
pop
cwtl
lret
ss
mov
mov
xor
mov
pop
dec
mov
push
jmp
mov
jl
mov
ret
dec
pop
mov
fstpt
repnz
mov
aas
inc
cmpsb
sub
pop
cld
pop
jne
mov
push
mov
push
dec
jbe
aas
sbb
dec
and
or
inc
js
add
imul
rclb
stc
pusha
sub
popf
add
fiaddl
sub
sbb
xlat
out
fs
pop
jo
loop
cmpsl
enter
test
sub
pushf
int3
sbb
jne
or
push
jge
jbe
clc
mov
or
add
negl
cwtl
pop
sub
insb
add
adc
aas
cmp
in
fs
shlb
inc
pop
and
pop
mov
xlat
mov
xchg
call
call
jecxz
dec
or
xor
or
stc
add
in
and
enter
jo
add
test
mulb
add
mov
mov
inc
and
lcall
sar
push
mov
dec
jg
in
repz
lods
cld
out
jnp
adc
adc
ljmp
mov
sarl
lcall
sbb
stc
pop
ret
xchg
fiaddl
fnsave
add
lea
mov
xor
shlb
lods
dec
sarb
ss
sbb
cmp
sbb
mov
dec
test
cmp
xor
add
lret
mov
jo
jle
aaa
sti
add
sbb
and
adc
jmp
jge
pusha
ds
mov
sub
jecxz
js
mov
add
in
test
incb
adcl
xchg
test
testb
seta
push
mov
scas
test
mov
sbbb
xchg
mov
fistpl
pop
dec
inc
loop
cmp
sahf
sub
add
xchg
and
jmp
pop
pop
enter
push
mov
std
shll
sub
xor
pop
int
push
ja
jne
cmp
ds
movsb
push
leave
mov
pop
out
sbb
scas
pop
sub
sub
aas
movsl
inc
adc
inc
jnp
sub
call
call
inc
int3
fidivs
cltd
outsl
sub
jl
out
xor
inc
pop
cmp
pop
and
sbb
lcall
sub
xor
push
les
lods
je
pop
jb
xchg
jecxz
pop
bnd
popa
xor
mov
xor
aam
cld
sbb
sub
dec
add
add
insb
dec
xor
fld
inc
fsubl
push
xchg
psubsw
pop
insb
adc
ret
jno
push
stc
cli
js
in
xchg
add
lods
jne
push
jl
jmp
orl
imul
stos
int3
sub
aam
pop
or
add
inc
mov
add
add
add
add
iret
mov
shrl
stos
add
pushf
jmp
push
outsb
mov
and
cmp
lcall
xlat
outsb
and
push
call
call
mov
int
mull
cs
sbb
pop
test
sub
repnz
pop
xchg
cmp
jae
dec
shrb
cwtl
rol
jno
les
test
int3
mov
loopne
imul
call
fwait
or
lods
mov
sahf
imul
out
in
xchg
das
dec
pop
repnz
add
scas
pop
push
ss
cwtl
push
xchg
add
cli
and
pop
add
sub
add
leave
in
inc
fsubl
test
mov
add
das
mov
bound
std
repz
fidivrs
mov
pop
ja
aad
int3
cmp
xchg
mov
mov
mov
fidivs
fincstp
sbb
cli
mov
add
adc
mov
arpl
cmp
add
add
scas
popf
push
adcl
insb
jg
dec
mov
movsl
dec
mov
mov
push
jns
rcrb
add
testb
push
sbb
jae
dec
mov
xchg
pop
jae
sahf
test
adc
lea
cmp
push
add
add
add
or
inc
sahf
ss
testb
mov
cld
mov
add
add
add
sbb
cmpsb
aam
insl
sbb
test
addr16
dec
dec
mov
popf
push
adc
fwait
inc
in
mov
sub
ss
js
push
push
cmp
cwtl
add
movl
ror
pop
enter
mov
cld
or
call
sbb
jbe
cmp
testb
mov
cmpsl
hlt
pop
cmp
lret
or
lcall
fsubl
out
scas
cmc
test
and
loop
pop
lods
mov
and
outsb
xor
mov
push
stos
lods
fstpl
outsb
push
adc
dec
mov
add
aam
lock
outsl
mov
add
add
add
add
test
icebp
cmc
cmp
add
mov
cmp
mov
fstpl
outsl
pop
outsb
jl
push
fdivs
sub
das
adc
nop
sub
mov
xchg
faddl
xchg
int
adc
je
pop
xor
dec
sbb
cmp
cmp
pop
lcall
add
add
add
dec
jp
add
mov
xchg
jne
jnp
nop
imul
insl
jg
jmp
mov
pop
addr16
jmp
ja
cmpsb
ja
mov
xchg
sub
dec
or
jae
jne
fcomip
cwtl
xchg
in
xchg
test
data16
dec
jecxz
lret
iret
sbb
add
or
mov
cmp
xchg
in
or
pushf
lds
jnp
jns
cltd
sbb
fbstp
dec
test
ss
jo
mov
std
ficomps
cmpsl
outsl
pop
aam
fistps
aad
call
call
cmpsl
fcmove
stos
push
lods
lock
loopne
imul
movsl
cmp
mov
add
loopne
fildl
iret
loop
jno
ljmp
add
jbe
sbb
or
pop
inc
mov
out
mov
loope
ret
lahf
in
or
mov
adc
aaa
xchg
inc
insb
push
shrb
inc
jge
sbb
cmp
incb
imul
pop
pop
mov
mov
xchg
das
fwait
movsl
add
adc
sbb
mov
adc
shlb
stc
pop
sti
std
mov
or
and
jno
data16
and
fisttps
je
enter
jo
mov
inc
gs
scas
daa
rcrb
add
add
or
cmc
inc
les
mov
in
adcb
cs
lret
in
fisttps
sbb
add
leave
lea
push
js
mov
gs
jmp
inc
adc
mov
ds
cltd
adc
sti
jae
movsl
sahf
call
ds
loopne
fcoml
rol
adc
aaa
outsl
cmp
sbb
cmpsb
push
and
dec
mov
cmpsl
icebp
clc
ja
sbb
xlat
and
or
rcll
and
arpl
xchg
inc
cli
and
sbb
xchg
ljmp
mov
push
jecxz
mov
sbb
xchg
inc
jnp
add
iret
out
mov
sarb
xor
mov
push
in
stc
movl
lahf
mov
out
cmpsl
aam
loop
cmpsl
pop
xor
xchg
jnp
pop
pushf
loope
sbb
or
dec
mov
ja
addr16
mov
lods
int3
jo
jnp
push
xor
add
pop
mov
dec
and
xchg
xor
inc
addb
mov
add
sbb
add
loope
dec
push
xor
push
jmp
or
out
ja
jl
dec
stos
mov
dec
ret
mov
js
roll
mov
aam
rcrw
pusha
stc
add
in
mov
fdivs
addl
fisubrs
lret
or
adc
dec
mov
mov
mov
add
outsl
sbb
inc
sbb
sub
repnz
and
loope
sahf
xor
xchg
sub
inc
fstpl
push
fwait
enter
add
inc
xor
sahf
jmp
cltd
mov
ds
inc
ret
push
es
add
repz
mov
cs
adc
shlb
testb
inc
js
je
jb
arpl
jae
add
arpl
gs
insb
add
outsb
je
insl
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
xor
xor
or
and
jo
imul
and
jae
insl
popa
fs
and
je
insl
jo
and
insb
outsl
popa
and
and
jb
outsb
je
insl
and
jb
jb
and
arpl
jb
arpl
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
add
add
xor
xor
je
gs
jo
and
jne
and
dec
dec
and
fs
outsl
insl
and
jae
popa
jae
gs
bound
fs
imul
imul
and
imul
je
outsl
outsb
or
jae
imul
gs
popa
and
and
and
jne
and
jo
imul
and
and
and
jae
and
gs
jns
je
and
jae
insb
je
outsl
data16
insb
insb
imul
dec
push
dec
dec
sub
imul
insb
jb
and
outsb
arpl
outsb
and
outsl
insl
and
outsb
popa
je
jbe
and
outsb
jae
jb
arpl
and
and
outsl
insl
and
dec
popa
imul
push
xor
xor
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
arpl
and
outsw
jb
popa
je
outsl
outsb
or
add
add
xor
xor
je
gs
jo
and
imul
imul
and
push
and
jb
and
outsb
and
arpl
or
jae
imul
gs
popa
and
and
and
jne
and
jo
imul
cs
xor
xor
push
push
and
je
imul
imul
add
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
push
push
jo
insb
imul
and
jae
jb
jno
gs
gs
and
outsb
je
insl
and
je
jb
imul
je
imul
outsb
jne
jne
insb
and
jns
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
jo
jb
and
je
insb
outsl
popa
fs
add
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
or
add
cs
jb
addr16
insl
and
insl
and
imul
outsb
add
push
jne
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
insl
imul
outsb
arpl
gs
outsl
imul
add
push
dec
inc
dec
xor
cs
dec
dec
add
add
inc
arpl
gs
outsl
imul
add
jae
jb
add
jae
gs
popa
insb
jne
add
jae
gs
popa
insb
jne
add
jae
insb
insb
outsl
arpl
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
add
imul
gs
xor
cs
insb
add
add
inc
gs
jb
arpl
jae
imul
popa
je
outsl
outsb
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
inc
push
xor
cs
dec
dec
add
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
jnp
jge
jg
addl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
decl
cmp
cmp
add
add
fs
dec
dec
dec
dec
and
and
jns
add
das
fs
jns
add
add
push
dec
add
inc
dec
add
inc
arpl
bound
add
add
dec
outsl
jbe
insl
bound
add
add
dec
arpl
gs
push
gs
gs
bound
add
add
addr16
je
add
insb
jns
add
add
outsb
add
add
inc
jo
imul
arpl
add
inc
bound
popa
jb
add
add
dec
popa
outsb
jne
jb
add
add
jbe
dec
arpl
gs
inc
jne
add
insb
add
outsb
add
jns
inc
jo
add
jb
inc
bound
dec
popa
outsb
add
je
jb
popa
jns
add
add
imul
jne
jae
popa
jns
add
add
outsb
gs
popa
jns
add
push
jne
jae
popa
jns
dec
outsl
outsb
fs
jns
add
outsb
fs
jns
add
je
inc
jb
add
add
add
add
outsb
add
outsb
add
push
inc
add
pop
inc
add
outsb
dec
outsl
outsb
push
jne
push
gs
push
push
popa
je
add
dec
popa
outsb
inc
bound
jb
jo
dec
popa
jns
jne
dec
jne
inc
jne
push
gs
arpl
jbe
arpl
add
add
add
add
add
call
cwtl
inc
add
add
add
push
add
cmp
add
push
mov
push
inc
add
jb
dec
xchg
add
add
or
bound
fadds
dec
jb
adc
add
inc
les
add
loope
xor
mov
nop
inc
bound
pop
pop
push
es
pop
ljmp
imul
pop
sarl
pusha
push
or
and
and
mov
lahf
insb
iret
add
add
sbb
xor
outsl
lods
add
lret
cmpsb
jp
fnstenv
dec
outsb
xchg
lds
fmulp
pop
or
add
sbb
cmp
insb
pushf
push
dec
mov
and
in
call
call
push
es
jp
repnz
aaa
imul
lret
pusha
imul
mov
jo
push
leave
divl
subb
jnp
sarb
inc
xlat
add
stos
call
call
push
inc
gs
rolb
add
sarl
mov
sbb
jo
arpl
outsb
dec
xor
popf
adc
dec
cmpsb
in
adcb
jge
call
call
std
les
bnd
and
outsl
pop
jp
inc
int
push
mov
mov
movsl
jno
xor
dec
test
xor
and
outsl
and
cwtl
gs
mov
pusha
int3
xor
test
sub
clc
je
cwtl
fs
add
jnp
pop
inc
test
push
sbb
pop
push
add
in
mov
add
add
add
jle
jle
mov
xchg
pop
adc
es
stos
into
sbb
add
inc
xor
dec
sub
stos
jg
add
daa
jge
pop
or
fbstp
dec
sub
into
ss
dec
insl
add
mov
out
aaa
ficoms
dec
movsl
lcall
add
pop
push
mov
inc
bound
adc
imul
adc
inc
insb
insb
and
je
jl
cmp
pop
test
int
or
or
push
xor
xor
cmp
adc
and
imul
xor
add
cltd
cs
outsb
or
inc
dec
pushf
nop
inc
push
mov
dec
cmp
mov
ret
jl
cmpsb
sarb
loopne
stc
jne
fsubr
pop
xchg
dec
outsl
xor
fisttps
dec
xchg
insl
sub
mov
popf
add
add
mov
sbb
mov
and
or
stos
test
and
ret
in
inc
push
or
rorl
mov
add
lret
and
add
pminsw
mov
push
and
int
arpl
mov
aam
pop
testb
adc
hlt
outsl
pop
mov
sbb
jge
xchg
arpl
sbb
dec
test
fisttpll
clc
je
xor
sarb
mov
add
stos
pushf
fimuls
sub
and
push
push
jp
mov
add
cmovp
push
stc
sub
les
xor
adc
jmp
xor
jae
sbb
jnp
mov
sbb
sarb
push
rorl
adc
adc
add
add
add
popf
imul
cmpsb
jns
fdivrl
jo
inc
daa
cmp
loop
scas
jo
dec
stc
mov
cmp
jb
pop
pop
or
mov
xorb
call
call
or
sbb
and
cmpsb
jp
in
xor
and
push
out
mov
cld
xor
push
jns
insb
outsb
and
outsl
rorl
into
and
adc
pop
das
repz
dec
insl
lea
jg
test
or
jl
sbb
arpl
add
add
mov
sub
dec
in
mov
adc
xor
push
js
xor
add
add
add
addl
scas
mov
push
xchg
into
cld
jnp
ds
jno
pop
or
daa
fnstcw
sub
push
cmp
jns
sub
sub
xchg
ds
pop
add
xchg
and
sbb
adc
inc
cmc
cmpsl
sbbl
fildl
call
frndint
fistpl
inc
iret
mov
dec
lret
sub
js
shl
ss
out
inc
cld
outsb
jnp
mov
bound
or
pop
loop
ret
enter
stos
sti
into
in
jecxz
mov
lahf
fsubrl
repz
fs
add
clc
sbb
dec
negb
lods
jbe
add
add
gs
inc
mov
add
outsl
insb
xchg
cmp
call
call
rcrb
push
adc
pop
mov
lahf
idiv
insb
mov
cmp
pop
into
push
mov
jmp
mov
lods
or
lods
sbb
movsl
inc
push
cmp
jbe
stos
js
ja
sub
cmp
cmp
popa
lock
xchg
pushf
fldt
xchg
sub
repnz
add
lods
push
pop
incb
add
pop
cs
and
add
pop
cmc
movsl
xor
pop
xor
inc
jns
lret
jge
xlat
and
sbb
push
cmp
jl
int
dec
jl
push
test
enter
or
cltd
in
xor
hlt
pop
jnp
mov
in
mov
add
add
pop
in
lods
sub
call
call
xchg
lods
ret
sbb
adcb
adc
outsl
pop
int3
sbb
pop
xor
in
push
mov
jle
mov
jae
fisttpll
jne
push
xorl
cmc
pop
scas
inc
xchg
lds
mov
stos
mov
xor
lea
fcmovnu
ja
dec
inc
ss
idivb
scas
movsl
mov
sub
jnp
add
sub
add
stos
loop
add
insb
push
in
pushf
jne
sbb
aaa
xchg
lahf
fimull
push
enter
add
or
bound
mov
lahf
mov
add
add
add
shl
jmp
pop
cmc
cmp
jp
popf
xor
shll
outsl
gs
call
call
call
cmp
aam
jb
in
pop
lods
bound
pop
pop
dec
scas
and
add
add
add
mov
xor
sbb
cmpsb
js
test
and
mov
jl
lods
les
mov
mov
sbb
jmp
sti
xor
mov
ja
push
mov
pop
sbb
fldcw
dec
add
xchg
stc
cld
jbe
jno
cmpsb
xor
stc
xor
stc
fiadds
mov
out
pop
xchg
jle
add
add
add
add
pop
fiadds
imul
mov
pushl
or
andb
sbbb
adc
push
repz
shl
imul
add
add
add
add
es
nop
push
subps
in
sarb
in
cmpl
mov
repz
pop
inc
in
int3
xor
data16
jae
add
jno
jmp
inc
outsl
xor
add
leave
sub
adc
sbb
xor
push
into
imul
add
das
dec
dec
or
pop
fwait
outsb
mov
add
stc
and
clc
test
lock
xor
into
in
sbb
or
or
pop
or
pop
dec
sbb
loop
or
push
jp
addl
sahf
xchg
ret
test
pop
cs
push
add
xchg
int3
jp
sahf
movsl
xor
add
add
add
add
jp
add
popf
mov
xchg
sbb
xchg
mov
pusha
push
dec
leave
xor
cmp
stos
jnp
fdivrl
sub
add
push
repz
adcb
jnp
inc
inc
aas
ja
loopne
call
call
call
call
push
xor
cwtl
cmp
push
outsl
leave
cwtl
xor
outsl
xchg
mov
dec
int3
jecxz
add
es
sbb
jge
bound
cmp
arpl
dec
add
cmc
xchg
push
je
lock
pop
xchg
pop
js
or
jmp
fucomp
les
cmpl
mov
lods
in
cwtl
add
or
pop
or
imul
pop
daa
xor
outsl
and
cmp
mov
mov
push
adc
or
pop
add
imul
add
add
add
add
jecxz
pushf
mul
sub
xor
divb
sbb
das
aaa
jge
adc
sahf
out
push
push
add
add
dec
xor
cmp
sbb
xor
add
push
pop
aas
adc
inc
sbb
add
mov
xor
cmp
mov
xor
sub
add
and
inc
push
shl
adc
in
pop
push
cmp
sub
add
cs
stos
imul
cltd
cmp
mov
int3
push
pop
dec
ja
xchg
cmp
sub
add
add
add
push
dec
out
arpl
pop
aam
cmc
call
call
call
pop
dec
hlt
xor
xchg
push
mov
sarl
outsb
inc
imul
imul
dec
inc
xchg
loope
sub
aam
inc
lahf
loope
xor
lods
cwtl
xchg
pop
sbb
or
into
sbb
cli
sub
mov
out
mov
mov
and
aad
add
add
add
jno
adc
movsl
xchg
jg
pop
inc
mov
rclb
insl
xchg
xor
scas
add
pop
fisubrl
mov
loope
clc
loopne
or
dec
cmp
mov
adc
call
call
mov
call
cmpsl
xor
insb
hlt
sti
loope
fwait
int
enter
jne
xchg
add
adc
jge
jecxz
mov
lea
mov
mov
xor
adc
call
or
cmp
dec
or
ja
cmp
pop
lea
xor
icebp
add
push
inc
popf
testb
add
cmp
push
movsl
push
bound
sbb
xchg
stos
or
movb
iret
mov
or
mov
pop
shlb
push
pop
insl
imul
leave
roll
add
add
add
cmp
xor
cld
jae
repnz
lock
pop
jno
fiadds
stc
mov
and
clc
xor
rorb
inc
inc
fsubl
jecxz
inc
xchg
mov
inc
addr16
dec
adc
mov
lds
fsubl
cmpsb
xor
cmc
inc
push
mov
xchg
mov
mov
jbe
xchg
call
xor
ljmp
sub
or
sub
aad
pop
neg
scas
jge
add
add
roll
cwtl
in
out
pop
xchg
sub
cmp
jle
xchg
cmp
push
add
aas
subb
cmpsb
inc
call
call
call
cwtl
pop
enter
xchg
cmp
imul
jmp
push
arpl
mov
add
add
add
and
fbld
push
xor
sub
adc
sar
in
scas
mov
add
xchg
enter
jmp
pop
hlt
sbb
aad
push
pushf
add
add
add
add
jmp
sbb
fwait
jne
xchg
aad
mov
add
out
adc
push
je
inc
jno
out
or
inc
inc
dec
notl
jo
xor
fildl
pop
mov
stc
mov
fisttpll
lret
aas
fcom
jns
mov
xor
xchg
xor
imul
movsl
xor
and
test
jle
pop
cmp
mov
sahf
push
jo
repnz
add
inc
enter
sub
mov
fildll
and
pop
mov
sbb
ds
and
aad
or
fwait
loop
xchg
push
out
cmpsl
notb
jne
int3
lret
xor
add
stc
adc
push
mov
lods
test
add
add
add
xchg
dec
movsl
loope
imul
divl
js
in
inc
mov
ja
or
shr
addr16
or
aam
imul
call
call
xchg
hlt
mov
mov
ljmp
lods
xchg
pop
shll
or
xchg
add
inc
pop
push
ret
dec
jb
add
and
xor
das
adc
inc
ds
cmpsb
add
ss
aam
lock
mov
xor
push
insl
inc
and
out
sbb
sahf
fdivrl
mov
push
addr16
roll
pop
scas
sbb
push
fidivrs
add
add
add
add
gs
xchg
jp
jae
aam
lahf
adc
cmp
data16
push
stos
jns
adc
clc
insl
push
cmp
repnz
imul
adc
aad
and
sub
fdivrl
imul
add
jbe
aaa
and
push
scas
shl
cs
shrl
add
sub
mov
jl
mov
int3
fimull
ret
add
push
dec
add
add
add
aaa
jg
sub
nop
fstpt
adc
jmp
dec
pop
push
pop
mov
adc
jg
call
call
ffreep
sbb
or
in
das
int
jmp
mov
push
jge
add
js
jle
push
stos
push
ljmp
mov
stc
in
aas
das
lods
repz
lea
add
push
push
or
stc
hlt
mov
xor
pusha
rorl
jo
xor
int
pop
sahf
test
in
addb
imul
scas
faddl
xor
cmp
push
movzwl
mov
and
orl
mov
push
mov
add
xor
testb
or
mov
pop
pushf
mov
adc
es
mov
not
cmp
xchg
fsub
stos
fbstp
das
jge
xor
mov
call
pop
inc
cmpsl
xchg
add
add
add
sbb
cli
sub
fdivrs
cmpsb
inc
cmp
add
aad
in
sub
ds
dec
pop
sub
dec
pushf
rolb
mov
faddl
add
add
pop
mov
push
ret
mov
jb
cltd
insb
and
mov
add
add
add
add
jo
xorb
jno
and
cwtl
xor
jbe
sub
loop
mov
xchg
lods
push
and
dec
arpl
das
push
lock
cmp
sbb
adc
pop
or
nop
pop
xor
cmp
add
cmp
sti
ret
movsl
mov
dec
lcall
stc
push
xor
push
push
xchg
sbb
sbb
add
std
imul
call
adc
stc
push
idivb
xchg
mov
test
mov
sub
fcoml
shrb
cmp
mov
stc
sbb
dec
mov
pop
push
cld
jns
pusha
mov
add
shrl
sbb
inc
movsb
push
sbb
mov
cmp
arpl
sub
rorb
addl
mov
mov
pop
add
in
sub
ret
adc
push
sub
nop
cmp
imul
mov
gs
addr16
dec
pushf
jbe
push
add
add
add
lret
jp
cs
add
dec
and
insb
jle
cmpsl
test
lcall
lcall
and
adc
imulb
push
xor
jne
inc
leave
pushf
dec
into
mov
out
shll
mulb
scas
js
es
sub
dec
lahf
dec
inc
in
data16
add
lahf
inc
insb
outsl
mov
dec
call
call
call
inc
dec
aas
cmpsl
adc
inc
int
push
jo
cs
andl
dec
jmp
fs
or
fisttpl
frstor
mov
into
cmp
jmp
push
xchg
add
and
ret
mov
test
fst
jb
test
rep
jnp
scas
sti
ret
add
add
insb
jo
sub
out
lret
iret
push
int
loope
pop
cmp
pop
aas
data16
add
add
cli
out
cltd
add
add
aaa
jae
in
xchg
sub
jns
movsl
loope
push
and
jnp
fwait
push
and
cmp
call
push
jo
icebp
mov
adc
xchg
cmp
and
add
add
add
add
rol
repz
leave
cmpl
add
add
dec
adc
mov
mov
push
in
mov
enter
sbb
or
add
add
add
add
cwtl
xor
nop
stos
fadds
es
sub
popf
dec
sbb
shll
ret
push
sub
ret
xchg
jnp
call
call
sub
mov
pop
dec
cwtl
pop
stos
repz
int3
jg
xor
and
pop
and
adc
ficoml
cld
lock
mov
cmpsl
out
sbb
pop
mov
add
add
sahf
push
shlb
in
ret
dec
dec
add
add
add
add
inc
adc
and
sub
jbe
push
xchg
sub
add
imull
in
lods
push
jge
rcll
in
jns
mov
dec
insb
loopne
scas
push
aam
inc
dec
cmp
cmp
add
add
add
pop
repnz
pop
bound
add
arpl
into
fstps
sbb
sub
daa
dec
inc
out
sahf
scas
sarl
int
ss
dec
pushf
mov
mov
xchg
push
xor
std
ds
test
or
nopl
xor
shl
jge
adc
jbe
pop
add
ret
frstor
scas
mov
rclb
push
and
dec
xchg
and
sub
add
lock
nop
mov
in
mov
add
dec
out
ret
jne
cwtl
imul
popa
in
stos
stos
cwtl
cmp
call
call
call
inc
sub
add
mov
inc
xchg
fisttpl
or
shrl
cld
and
inc
jg
push
aad
sbb
scas
in
ja
jg
fsts
insb
outsb
out
lods
ja
inc
sbb
es
cmp
push
clc
jb
jge
add
add
add
add
push
ret
xchg
roll
test
leave
mov
in
dec
movsl
pop
add
pop
jp
jecxz
pop
mov
imul
mov
mov
push
push
call
call
fwait
sti
std
pop
push
push
popa
imul
dec
add
push
or
add
pop
inc
or
add
or
dec
in
xor
mov
lcall
out
xchg
inc
dec
mov
idivl
add
add
add
call
dec
push
jnp
inc
sbb
mov
stc
mov
setl
xor
push
dec
dec
push
adc
pop
ret
sbb
lds
jne
sbb
lahf
addr16
jns
iret
adc
fstpl
sbb
add
add
add
add
in
insb
pop
subl
insb
lods
add
adc
pop
test
inc
movsl
je
and
popf
pusha
xor
jne
das
xchg
sbb
sbb
out
adc
lods
push
js
pushf
add
dec
adc
cmpsl
lea
out
sbb
or
call
call
call
in
push
sbbl
add
into
stos
adc
push
mov
aaa
mov
push
push
dec
fbstp
xchg
pop
pop
jge
mov
jnp
inc
jno
mov
sub
add
sbb
adc
jno
test
or
push
mov
push
jge
adc
sti
push
pop
or
push
dec
sti
and
push
cmp
and
es
aaa
int3
inc
sbb
xchg
js
pop
jbe
xchg
or
pop
insl
pop
push
cmpsl
jp
pop
mov
outsb
andb
pop
mov
aaa
add
and
add
add
add
add
sbb
sub
out
pop
and
inc
dec
adc
inc
and
dec
lahf
pusha
cmp
add
das
fs
dec
add
shrb
lcall
xor
and
or
xchg
cmc
and
add
mov
xor
xchg
dec
sbb
cld
je
bound
out
mov
jns
mov
scas
add
jnp
pop
add
lret
daa
pushf
push
leave
adc
mov
mov
push
jnp
pop
or
test
imul
pop
dec
xchg
push
jmp
icebp
sbb
add
imul
adc
jae
aaa
imul
add
add
add
add
dec
clc
sbb
stos
pop
lock
adc
data16
adc
pop
mov
jg
notl
std
movsl
mov
aad
cmp
xchg
pushl
fsubrp
pop
mov
push
movsl
daa
aam
mov
mov
mov
rcl
daa
pusha
mov
imul
xchg
fmulp
fs
rcrl
dec
add
test
sbb
loopne
repnz
fistpll
mov
jmp
into
sbb
aam
mov
sub
sbb
push
es
inc
fiaddl
add
add
add
xorb
fdivrl
sbb
stc
mov
insl
jno
int3
lret
pop
cmpsb
popf
ljmp
loope
mov
sub
xchg
cmp
jl
push
mov
fdivrl
mov
add
mov
loopne
mov
xchg
sub
in
test
lcall
sahf
dec
cmc
jmp
or
movsb
ret
add
fnsave
mov
xchg
sbb
mov
loope
inc
adc
push
mov
out
out
xchg
sahf
hlt
and
fistl
jp
std
lcall
and
mov
inc
and
gs
jle
popa
jl
cli
pop
js
outsb
sahf
push
inc
mov
xor
sub
scas
daa
and
hlt
inc
push
add
add
int3
stc
mov
fbld
lret
jbe
dec
rorl
out
xor
call
sub
aas
sbb
push
cmp
movsl
mulb
loop
jbe
cmpsb
add
bound
mov
fidivrs
add
sub
push
pop
xor
outsb
inc
jp
xor
dec
xor
inc
xchg
jno
mov
push
fidivrl
clc
inc
and
nopl
push
push
das
xor
data16
lds
jae
xchg
jbe
fmull
je
sbb
mov
call
sti
stos
mov
adc
es
jge
xchg
in
call
das
mov
or
mov
mov
imul
popl
das
mov
or
cmp
dec
xor
xchg
sbb
push
cmovle
add
push
popa
fdivs
mov
pop
int3
es
pushf
and
sbb
add
or
js
xor
cwtl
adc
xor
inc
outsb
out
and
jb
sub
in
push
sub
jnp
cmp
gs
dec
sbb
add
mov
icebp
pusha
dec
je
pop
call
mov
icebp
cmp
cwtl
call
arpl
nop
jae
out
popf
aas
jno
mov
add
and
negb
cwtl
lods
jb
test
lret
xor
test
cld
dec
and
mov
inc
sbb
dec
dec
and
cltd
test
inc
sahf
or
in
cmp
test
pushl
rclb
imul
jne
xlat
call
call
call
adc
xchg
pop
push
cmp
and
js
je
add
cltd
jo
sub
jae
pop
mov
push
add
mov
inc
out
es
mov
xor
cmp
lock
or
xor
fldcw
adc
lahf
mov
push
jae
fimuls
int
jp
sub
jecxz
or
cmp
inc
xchg
dec
sbb
push
pop
lock
sbbb
ret
in
push
pop
sarb
fists
jne
outsl
sbb
pop
pop
dec
inc
pop
jge
add
add
fidivs
in
push
loope
outsl
fsubl
jge
aad
js
jp
mov
mov
loop
ss
rol
xchg
mov
mov
dec
popf
jnp
or
xchg
or
inc
jmp
sub
inc
or
add
push
scas
jno
stos
mov
jecxz
adc
mov
aaa
push
scas
or
inc
mov
and
movsb
push
and
push
or
rcrl
das
test
sar
or
add
add
add
out
adcb
lea
sub
adc
jne
cmp
in
jns
and
ds
fistpl
add
inc
xchg
ret
push
cmp
icebp
mov
call
call
push
loopne
jne
mov
outsl
adc
decl
cmp
addr16
loopne
or
out
push
push
outsl
push
repz
or
xor
popa
hlt
mov
jns
loope
or
mov
fs
xchg
adc
or
xor
lahf
mov
pop
jb,pn
dec
jnp
xor
adc
xchg
sbb
movsl
rcrl
loope
lret
ret
faddp
mov
adc
xor
filds
cli
cmc
or
sub
jp
stc
cwtl
leave
shr
movntq
out
xchg
mov
out
shl
cmp
mov
add
and
inc
mov
das
and
fisubrs
add
adc
pop
pop
mov
mov
dec
leave
sub
sub
lock
mov
mov
fcmovb
frstor
ret
mov
es
ja
insb
in
jae
loopne
imul
enter
pop
jp
repz
insb
addr16
pop
data16
imul
add
inc
fimuls
dec
sbbb
inc
repnz
jnp
pop
in
int
cmp
ds
je
push
sub
jbe
xor
insb
nop
mov
and
add
mov
das
push
insl
dec
pop
adc
outsl
add
loop
testl
sub
rorl
cmp
jnp
inc
add
shrb
push
mov
mov
cmc
jmp
cmp
sub
or
aas
ror
call
call
int3
int
sbb
ds
mov
lret
adc
mov
jge
mov
icebp
adc
add
xchg
jns
ret
sbb
xchg
fidivrl
adc
add
mov
jae
std
jbe
mov
mov
mov
fstl
pop
cmp
add
add
in
mov
inc
shll
and
add
sbb
js
sub
outsb
cmp
mov
inc
stc
xchg
hlt
callw
es
or
insb
pusha
rorl
das
dec
popa
rcr
push
xchg
hlt
popa
jl
imul
orb
popf
pop
xchg
aam
int
xor
xchg
pop
mov
ljmp
xor
mov
jg
sub
dec
cmpl
mov
dec
dec
dec
add
mov
out
call
call
lods
into
movsb
pop
or
sbb
inc
and
push
cli
stos
mov
sarl
imul
insl
or
add
add
add
xchg
jl
cwtl
and
test
shl
stos
jecxz
push
ljmp
inc
lahf
lret
jmp
adc
out
in
pop
fiaddl
add
fisttpll
bound
add
sahf
adc
dec
scas
pushf
icebp
shl
bswap
loop
add
mov
push
ljmp
mov
sbb
out
aad
pushf
xchg
out
xchg
push
aam
jae
rorl
icebp
imul
push
notb
add
adc
int
pushf
pop
pusha
xchg
stos
add
jg
jb
negb
lret
insb
lret
adc
mov
sub
iret
mov
in
mov
xchg
das
sbb
xchg
lret
dec
mov
sub
mov
xchg
push
cmpsb
popl
outsl
les
into
inc
je
and
jp
mov
add
add
add
insb
ja
mov
leave
movsb
inc
dec
cli
testl
push
ds
out
push
orb
push
aas
fsub
dec
and
call
inc
fists
cmp
call
call
add
int3
and
push
jp
stos
cli
mov
sbb
aad
push
fsincos
mov
in
xor
jns
sbb
fwait
ja
adcb
js
imul
pop
dec
repnz
pop
shrl
push
in
sub
add
mov
cmp
scas
cmp
lods
dec
scas
xor
push
cmp
sbb
inc
adc
les
loopne
fcmovu
roll
add
add
add
and
mov
int
out
movsb
call
call
call
call
ret
mov
cli
sub
mov
and
call
call
call
and
outsb
rclb
pop
add
iret
cmp
and
rclb
add
lods
inc
dec
sahf
sbb
js
pushf
push
add
add
inc
jmp
lcall
add
add
add
cmp
xchg
out
sbb
into
mov
push
sub
mov
mov
push
lods
add
add
xchg
int
sbb
test
pop
mov
inc
dec
sbb
push
dec
inc
mov
out
repz
pop
out
adc
mov
fimuls
fldl
mov
jno
lods
xchg
int
xchg
pushf
mov
add
jno
pop
test
fdivs
fsubrl
call
call
add
jl
and
leave
movsl
lods
mov
push
sbb
lea
and
dec
dec
aas
cmc
pushf
sahf
in
test
cmp
in
out
add
add
add
xchg
data16
add
mov
div
mov
outsl
push
scas
std
std
and
jns
adc
cmp
xchg
fdivl
fs
bound
dec
or
add
push
cli
aas
push
sub
fidivrl
inc
insb
pop
scas
mov
call
call
jns
mov
addr16
inc
adc
mov
addl
cmp
sub
iret
dec
mov
lods
int
sub
adcb
rolb
push
aad
fidivrl
sub
jno
ja
xor
or
sbb
movsl
nop
adc
ret
icebp
and
aaa
sub
pop
mov
imul
inc
pop
pop
jmp
push
jno
pushf
movsl
icebp
push
dec
or
dec
mov
add
pop
dec
insb
xor
movsb
lods
arpl
mov
pop
xchg
clc
and
sahf
rcll
mov
outsb
mov
fstpl
mov
mov
or
fidivl
pop
fldenv
mov
clc
cmpsb
xchg
push
xchg
mov
push
dec
ret
xchg
mov
push
or
xor
mov
add
adc
dec
pop
push
test
arpl
add
add
decl
jbe
test
inc
aam
sub
sahf
and
in
sbb
add
push
adc
pop
repz
call
dec
xor
aas
in
xchg
aaa
xlat
push
jle
mov
imul
add
add
adc
cmpsb
lcall
cmp
je
push
pop
xchg
dec
jmp
inc
sbb
bound
add
mov
in
mov
add
add
sub
fiadds
xchg
jle
push
mov
aam
fsub
mov
mov
in
xor
add
mull
push
shrl
jmp
mov
fmul
jecxz
repz
enter
popf
ret
daa
mov
add
mov
sbb
xor
out
mov
xchg
sub
push
dec
sar
imul
in
lea
or
js
shrl
adc
add
add
fwait
inc
jae
ret
negb
imul
sahf
dec
dec
ret
imul
add
call
call
cmp
sbb
out
pusha
aas
das
cwtl
jp
call
call
call
dec
cmpsw
jl
push
xlat
add
mov
fistps
bound
adc
std
fcmovbe
pop
ds
adc
movsl
popa
into
pop
inc
mov
dec
mov
add
test
lods
lock
aaa
mov
mov
lods
xchg
out
cmpsb
clc
sti
mov
xor
rol
fst
inc
adc
movsb
mov
fdivr
out
push
pushf
shrb
rorl
ljmp
test
aaa
inc
push
jge
add
add
add
push
test
je
add
cmpsl
insl
adc
inc
xchg
dec
ds
xchg
cli
enter
add
add
add
in
cmpsl
icebp
inc
mov
xor
repz
call
lcall
int
inc
pop
and
loopne
insb
rcrl
movsl
jp
mov
xchg
aas
ud1
jb
mov
dec
add
jge
mov
pop
data16
add
into
push
inc
add
stc
sub
xchg
std
shll
imul
mov
outsb
dec
or
orb
inc
and
in
mov
fistl
in
fxch
test
jmp
mov
jae
icebp
dec
fiaddl
xchg
or
jge
lahf
out
cltd
mov
xchg
cmpsb
pop
lods
leave
add
jge
popa
dec
ss
gs
lea
fwait
push
dec
cmpl
in
ja
mov
cmc
sbb
cld
push
dec
shll
and
test
test
and
cs
cwtl
cwtl
outsl
insl
or
jne
add
add
mov
in
or
popa
ljmp
idivb
ficoms
loop
leave
fwait
mov
ja
mov
sarb
inc
jecxz
inc
cmp
lahf
mov
push
cs
sbb
sub
or
ljmp
call
ss
add
add
sbb
pop
add
cmp
outsb
xor
push
adc
add
jns
inc
or
aad
dec
clc
sub
jg
push
aaa
push
push
jmp
pop
mov
sarb
test
aam
mov
lods
call
call
nop
xor
xor
mov
sbb
shll
jno
mov
dec
jp
repz
inc
into
lods
dec
ds
jge,pt
dec
rorl
cmp
int
cmp
addr16
dec
incb
pusha
jbe
jbe
ljmp
add
add
add
sbb
cs
add
push
cmp
jg
imul
insb
lcall
inc
add
xlat
and
add
add
add
push
call
shrb
insb
test
in
inc
arpl
add
pop
ljmp
add
add
add
add
sub
out
pop
fsubrl
pop
jl
and
mov
adc
and
mov
push
out
jl
adc
jb
push
repnz
dec
mov
sbb
daa
xchg
mov
add
add
jg
push
adc
bound
add
add
add
pop
test
pusha
cmc
mov
fidivrl
daa
cmp
push
and
dec
imul
js
sub
dec
ret
call
adc
notb
jecxz
iret
gs
incl
push
mov
jl,pn
testl
call
call
lret
sbbl
pop
dec
in
push
lcall
and
movsl
and
imul
add
add
add
repnz
cmc
repnz
inc
add
sbb
imul
inc
add
cmpsb
push
js
xor
inc
add
leave
inc
mov
push
sbb
sub
add
jno
les
call
call
jge
es
sbb
push
and
bound
xor
imul
add
add
add
mov
dec
inc
adc
es
or
jb
add
clc
cmp
push
inc
push
imul
fisubrs
add
xor
xor
add
add
xor
add
xor
mov
aaa
mov
nop
jp
std
sbb
sub
add
add
dec
cmp
mov
jns
pop
insb
pusha
and
pop
daa
inc
dec
add
and
or
popa
mov
or
mov
into
xchg
xlat
lds
sbb
in
and
mov
in
add
jg
pop
add
jno
mov
je,pt
or
jp
gs
sbb
xchg
cmp
push
and
pop
pop
or
add
push
xor
call
call
sub
lret
or
sahf
sbb
add
data16
aam
jnp
jl
aam
into
adc
cs
inc
jns
xchg
aaa
or
or
or
imul
adc
push
and
aas
add
add
jecxz
and
sbb
sbb
aad
jnp
out
dec
sarb
add
add
add
push
test
bound
mov
dec
cmp
aaa
push
adc
outsb
pop
mov
fucomp
call
call
push
lahf
cmp
dec
push
push
addr16
mov
es
sub
pop
pop
xchg
sbb
jp
push
addl
add
add
push
sbb
add
outsb
movsl
test
push
insb
add
out
or
dec
loope
sub
in
dec
sub
pop
jne
pop
add
push
nop
inc
push
push
push
xor
push
push
js
sbb
add
xor
jne
inc
add
ffreep
inc
inc
stos
sbb
push
andb
lods
inc
inc
add
arpl
xor
adc
push
js
fisttpll
mov
mov
xor
mulps
test
dec
cmp
or
imul
and
out
push
add
out
or
fmuls
int3
bound
mov
repz
and
ret
push
rolb
mov
pop
pop
xor
cs
pop
adc
daa
lods
pop
dec
or
aaa
push
add
sbb
xchg
sub
mov
xor
sub
or
adc
xor
aas
cld
addl
lret
jo
iret
xchg
sbb
call
call
call
add
add
add
add
imul
sbbl
adc
inc
or
and
lret
or
pushf
lods
call
push
pop
xlat
xor
mov
daa
push
dec
xchg
sarb
pop
arpl
fistl
adc
fs
or
popa
adc
add
jb
aas
in
jmp
orl
cmp
imul
push
stc
or
jnp
stos
std
es
int
xchg
cmp
in
cli
aas
test
mov
inc
push
sub
insl
pop
push
cmp
mov
adc
jecxz
in
jg
fwait
mov
mov
push
lds
xchg
or
or
loope
sub
fisubrs
pop
iret
and
addr16
jge
pop
sbb
sub
into
sbb
sub
test
or
jp
cmp
mov
test
data16
add
and
jb
rcrb
je
test
mov
inc
pop
dec
xchg
sub
das
and
jb
mov
jae
clc
add
int
out
inc
aas
out
mov
mov
xor
mov
fists
mov
xchg
adc
sbb
clc
in
mov
adc
jnp
add
pop
into
aaa
push
cs
popf
mov
push
adc
pop
lods
pop
push
call
call
call
test
pop
enter
pop
adcb
pop
or
das
sub
cmp
push
and
add
xor
fs
shr
inc
ret
ja
add
add
add
jno
and
jmp
jnp
out
dec
and
push
arpl
pop
adc
push
pop
out
gs
jae
or
add
add
add
add
inc
push
imul
xorb
clc
mov
shrl
cld
ds
push
push
jno
inc
je
pop
into
fnsave
fistl
jp
or
outsb
inc
add
sub
arpl
add
add
add
out
and
jne
and
test
lods
out
ret
subb
or
call
call
aaa
imul
dec
sbb
sub
cmp
sub
jl
xchg
pop
cmpl
xchg
jp
xor
mov
or
call
call
call
clc
or
and
pop
cmp
xor
jecxz
icebp
or
xchg
add
iret
push
and
xor
pop
dec
inc
add
inc
jae
push
push
in
mov
ret
jno
mov
inc
dec
aas
test
adc
pop
pop
fsubrs
notb
hlt
arpl
mov
jb
cmp
into
cmp
daa
cltd
push
xchg
andl
jle
mov
xor
xchg
sbb
popa
jnp
pop
xchg
inc
jns
add
aad
pop
roll
inc
mov
xor
je
mov
add
pop
pop
add
mov
shl
lret
jbe
sbb
sub
aad
sub
push
pop
xchg
cmp
xchg
push
and
decl
dec
pop
ja
cmp
adc
iret
mov
int3
xor
sbb
mov
add
add
push
dec
xchg
or
das
aad
es
insl
rclb
adc
movsl
and
sbb
out
in
arpl
sahf
inc
daa
mov
sub
addr16
ret
hlt
sub
inc
pop
das
dec
mov
ret
add
test
and
imul
out
outsl
mov
test
xchg
call
call
call
xlat
or
test
pop
or
xchg
imul
aam
mov
add
add
add
jg
int
mov
dec
cli
call
dec
idivb
jns
jne
mov
xchg
lahf
mov
les
je
add
add
jecxz
ret
in
ss
shll
inc
add
add
fcoms
ljmp
mov
jge
mov
pop
aaa
dec
jb
je
pop
mov
bound
call
call
add
inc
mov
outsb
inc
movsb
cwtl
mov
adc
inc
dec
ja
call
call
out
inc
xor
sbb
sub
sbb
cmp
data16
adc
dec
push
mov
add
add
add
mov
push
push
push
inc
sbb
movsl
int
rcl
loopne
pop
push
orl
sahf
inc
mov
nop
sub
pop
pop
popf
sbb
sbb
aas
cmpsl
lds
enter
add
add
add
out
sbb
and
js
cmp
add
add
movsb
cmpsl
aas
call
call
call
mov
push
sbb
js
mov
mov
mov
ljmp
jb
lods
or
imull
add
add
add
mov
call
call
mov
xchg
cmpsb
sahf
mov
mov
sahf
inc
sti
repnz
faddl
fs
push
mov
imull
push
ret
add
dec
ljmp
stos
fldt
sbb
jne
insl
aam
fidivrl
popa
inc
fsubs
cmpsl
aas
stc
sub
stc
push
jno
mov
out
rcrb
adc
int3
sbb
dec
enter
cmp
out
add
add
add
add
jge
sub
adc
std
hlt
xlat
or
inc
cltd
cmp
inc
loopne
cs
outsb
add
in
lahf
dec
or
mov
mov
lahf
repnz
inc
xchg
int3
mov
add
pop
mov
xadd
push
mov
cmc
sub
je
cld
sub
cmp
add
push
and
jo
imul
dec
pop
mov
cli
jbe
and
push
test
sub
inc
test
adc
xor
inc
icebp
dec
push
je
arpl
sbb
sbb
inc
jb
push
ds
jl
pushf
add
lea
add
add
add
add
dec
add
xor
call
push
pop
pushf
dec
sbb
sub
popa
pusha
outsb
cwtl
test
scas
xchg
inc
jmp
add
add
add
pop
push
psubsb
call
in
or
mov
std
mov
ss
jo
jb
jae
roll
lahf
and
and
sbb
scas
cmp
push
mov
inc
ss
stos
mov
pop
orl
jno
push
mov
inc
pop
jns
or
pushf
lahf
push
sub
jle
push
cltd
xchg
jecxz
test
push
jle
xchg
fstps
fstl
jge
je
dec
pushf
xchg
pop
sub
sub
add
jle
std
hlt
cmp
in
sub
lea
adc
sti
xchg
outsb
dec
div
js
lea
sub
pop
cmpb
pop
jge
jp
rol
gs
push
adc
push
pop
adc
outsl
adc
sti
jae
cltd
lods
in
adc
fcmove
aas
mov
add
add
pop
jle
adc
push
enter
add
pop
jb
add
add
daa
das
cmp
and
pop
push
hlt
loope
jnp
jbe
sbb
sbb
in
add
push
in
jae
rorb
test
mov
dec
sub
cmp
cmpsb
mov
cltd
neg
inc
incl
negb
sti
pushf
in
data16
enter
dec
popa
lea
and
inc
cli
jmp
cmp
pop
notb
cmc
inc
sbb
ret
mov
imul
aad
sbb
int
inc
jbe
push
fimuls
or
stc
filds
add
and
sbb
idivb
xchg
add
add
add
add
cmpsl
arpl
pop
cmp
and
lock
add
rolb
jb
and
push
xchg
pop
nop
pop
popl
push
test
leave
scas
cld
cmp
push
push
pushf
out
icebp
jmp
loope
lods
or
add
mov
adc
in
fistps
rclb
les
popa
test
push
jo
add
jne
pop
jp
out
es
sub
int
fistl
andb
jp
das
jge
mov
dec
or
out
inc
idivw
ljmp
out
ds
scas
cmp
jne
movsb
clc
out
adc
popf
out
sub
push
stos
inc
adc
pop
iret
sbb
xchg
or
mov
cmp
cmp
and
std
lock
dec
mov
sbb
daa
inc
outsb
data16
in
fsubrl
xchg
mov
push
push
mov
in
repnz
sub
jl
inc
lea
push
cmp
loopne
push
add
add
add
adc
mov
ret
sub
mov
in
xchg
or
push
push
shrb
fdivrl
rcrl
inc
adc
push
loopne
jge
rorl
pop
leave
add
mov
jne
adc
nop
leave
lret
jbe
in
push
inc
lcall
jge
add
push
jbe
jp
mov
in
lahf
mov
gs
add
shll
mov
sbb
lock
adc
enter
les
add
add
add
jbe
mov
outsl
loope
pop
add
icebp
jmp
lea
and
outsl
mov
push
mov
mov
ja
cltd
scas
mov
cli
rorl
test
xor
in
xor
xor
and
in
sbb
sbb
dec
enter
icebp
ret
push
orl
xor
ss
sbb
jno
adc
xchg
xchg
lea
mov
inc
arpl
fs
xchg
and
pop
cmpsl
test
ss
adc
cmp
mov
xchg
repz
ja
xchg
data16
fnstcw
add
mov
pop
jmp
cli
call
call
call
movsl
mov
sub
jbe
push
jp
xor
adc
cld
xchg
cmp
mov
and
xor
pop
stos
and
addl
pusha
popf
call
call
inc
hlt
lahf
or
add
pusha
push
and
sub
and
inc
movzwl
jg
jo
add
add
add
int
das
push
cmpsl
aaa
loop
jbe
xchg
or
bnd
shll
leave
out
jle
icebp
in
push
js
insl
jg
repz
cmpb
jmp
add
popa
adc
rol
pushf
ret
mov
movsb
push
hlt
or
lret
loope
adc
sbb
adc
cmpsl
sub
daa
sbb
aad
jno
or
sbb
outsl
lcall
inc
push
test
movsb
iret
dec
add
xchg
ss
sbb
call
call
mov
jo
divb
inc
fdiv
fsubrs
inc
iret
jecxz
sbb
xor
xor
push
mov
mov
repnz
sbbb
dec
cmp
mov
jmp
dec
pop
pushf
jb
movsl
mov
add
scas
xor
int
and
mov
sbb
daa
mov
ficompl
lods
cltd
xor
mov
mov
iret
dec
pop
cmp
sbb
and
mov
std
cld
mov
in
fmul
adc
mov
add
add
icebp
mov
jo
xchg
clc
sahf
hlt
pop
sarl
data16
imul
add
insl
sbb
adc
mov
dec
cmp
call
mov
xor
xchg
pop
stos
pop
mov
and
mov
sbb
ds
pushf
dec
iret
add
stos
test
fs
mov
insb
sbb
int3
clc
and
imul
and
pop
add
ja
dec
out
push
cltd
jl
dec
mov
call
call
cmp
and
movsb
leave
xor
in
dec
out
movsl
aam
mov
daa
sbbl
inc
or
lret
flds
inc
cwtl
movsl
mov
xlat
mov
addr16
imul
add
add
imul
mov
add
add
adc
mov
fildll
push
adcl
es
sub
jmp
xchg
jb
loopne
lcall
add
sbb
repz
iret
int3
xlat
movsb
adc
cmp
loope
insl
xor
ljmp
xor
and
add
add
clc
daa
add
add
ja
mov
push
sbb
push
push
add
hlt
pushf
xchg
icebp
jl
iret
push
popf
xor
and
fucom
push
hlt
adc
int3
shrl
imul
out
sub
jnp
pop
pusha
sub
push
mov
add
add
add
add
pop
fistpll
mov
and
sub
fiadds
inc
mov
int3
add
in
lock
sbb
pop
jle
sub
int
roll
mov
call
call
dec
jl
idivl
sub
sub
add
jp
mov
sarb
xlat
xchg
nop
add
add
add
test
ret
pop
push
test
imul
jl
cmp
sbb
mov
pop
inc
jnp
outsb
jge
or
adc
ret
nop
mov
mov
aas
jmp
insb
adc
leave
enter
int
xor
repz
mulb
sbb
movsb
add
add
add
add
and
lret
jmp
inc
jge
xor
bound
pusha
and
stos
pop
mov
mov
lahf
mov
enter
fadds
test
lcall
add
test
push
push
cmp
fistpll
or
cmp
push
rclb
call
call
mov
inc
rolb
and
bnd
pminub
cmp
and
imul
jle
insl
cmpsl
repnz
xorb
jne
jbe
aas
push
aas
aas
jae
ffree
rolb
add
add
add
xchg
pushf
orb
pop
icebp
lcall
iret
test
pop
sbb
in
xor
outsb
test
dec
cmp
fdivrs
dec
and
repz
jns
repnz
into
arpl
movsl
cmp
arpl
push
inc
mov
daa
mov
fs
stc
jae
std
jge
imul
call
call
push
jge
add
add
orb
push
int3
bound
pop
and
xor
aas
scas
push
neg
sub
int
add
add
add
add
fcomps
ss
push
dec
jge
push
je
lcall
lods
std
sbb
jae
dec
repnz
mov
js
ljmp
sbb
fnsave
clc
outsl
test
jns
push
je
jmp
add
add
add
add
mov
aam
ss
mov
int
ljmp
call
call
mov
in
jl
push
mov
jl
add
popa
das
or
lret
jno
aad
iret
jge
add
add
add
mov
iret
xchg
adc
js
pusha
clc
cmpsb
jnp
and
pop
dec
push
aam
lea
adc
mov
adc
inc
cmpl
add
jle
cmc
xchg
addr16
das
and
jae
add
aad
repz
out
mov
add
pop
sbb
bound
fistpll
mov
js
imul
jmp
mov
aas
out
sub
jge
push
add
ret
xor
sub
out
jle
aam
xchg
pop
leave
jmp
add
sbb
pushf
add
pop
lods
pop
lret
fwait
jnp
mov
movsb
xlat
and
xor
xor
push
punpckhbw
xchg
fwait
scas
mov
call
sbb
fwait
xor
dec
ja
push
loope
cmp
jnp
lahf
add
fst
sub
or
cmc
add
lds
and
mov
adc
inc
jl
ficomps
add
add
add
jl
inc
pop
and
ret
imull
xor
inc
and
bound
add
add
add
add
push
mov
pop
aad
inc
inc
call
call
call
or
cld
add
or
mov
mov
dec
dec
push
in
ss
popa
jae
cli
cmc
push
cltd
sbb
add
cmp
jle
adc
pusha
xchg
and
add
add
add
add
cmp
sbb
mov
fs
loopne
add
insl
aad
inc
movsl
add
fdivrl
mov
dec
add
call
inc
or
lds
setnp
mov
add
test
dec
repz
push
inc
stos
inc
xor
and
fnstcw
das
imul
xor
mov
popa
push
call
add
int3
mov
adc
stos
or
loope
mov
fidivrs
dec
pop
test
pop
jecxz
xor
loopne
jne
aaa
mov
push
mov
movsl
jnp
clc
and
fs
sub
fimull
sarb
push
orb
test
repnz
xchg
jg
xchg
clc
jne
dec
push
adc
or
roll
in
fs
mov
mov
push
jp
lods
shll
mov
sbbl
push
outsb
sbb
xor
xchg
dec
mov
rcrl
add
add
add
add
dec
adc
jge
rol
jl
sub
xor
into
loop
cmp
cld
in
mov
int3
mov
pusha
ffree
mov
cmp
test
xor
mov
inc
mov
push
mov
pop
mov
call
call
sub
cli
insl
mov
fbstp
in
and
test
add
adc
fs
mov
lds
add
add
add
add
ds
add
mov
push
and
add
mov
jecxz
push
mov
test
out
rcrb
movsb
std
push
add
add
cmp
mov
call
adc
sar
push
lret
add
fists
mov
cmpsb
cli
adc
sbb
aam
cmpsl
pop
cmp
shl
inc
sub
jb
add
lcall
push
cmc
loope
pop
or
xchg
xor
into
imul
inc
fiadds
dec
insb
call
sub
pop
leave
in
fs
sub
sub
aas
leave
mov
push
pop
push
push
outsl
lahf
dec
or
gs
pop
dec
loopne
int
call
addr16
call
call
add
movsb
jbe
jne
cmp
ja
fcoms
xor
xor
jle
or
cmc
aaa
add
pushf
lods
cmp
ljmp
imul
and
or
mov
rcrl
push
add
repz
in
cltd
test
inc
out
and
inc
popw
dec
inc
rol
push
add
je
cmpsb
in
sub
clc
xchg
in
jne
adc
and
call
call
xlat
or
xchg
mov
push
pop
rcr
iret
stos
hlt
testb
pop
js
or
negb
nop
fcoms
dec
push
and
push
push
and
lcall
data16
aam
insl
sbb
xor
test
mov
or
add
jnp
mov
aaa
xor
or
sub
jmp
pusha
pop
adc
cld
mov
add
ljmp
fadds
lea
add
add
add
inc
mov
ss
sub
sarl
cld
pop
lret
mov
ret
pop
or
dec
movsb
xor
jmp
dec
mov
push
outsb
xor
sub
add
add
or
das
ss
push
xor
fnstsw
pop
sub
dec
out
pop
clc
cwtl
mov
push
add
aaa
pop
add
dec
je
imul
insb
cmp
filds
add
int
inc
pushl
mov
stc
jb
stos
or
jg
mov
dec
and
in
push
inc
xchg
iret
push
xchg
mov
jle
scas
stos
scas
imul
cmp
call
add
inc
test
repz
dec
fcompl
inc
xchg
arpl
push
mov
outsb
in
mov
mov
cmpsl
sbb
sbb
call
call
xchg
sbb
xchg
gs
jo
fcompl
add
shl
pop
mov
cwtl
jp
add
xor
and
xchg
addl
jo
jge
popa
cld
fs
add
add
add
xchg
and
xchg
mov
mov
aad
aaa
fdivrl
cmc
cmpsl
inc
dec
stos
sbb
leave
pop
sbb
jb
imul
cltd
push
add
xchg
lea
jb
bound
gs
sub
lahf
pop
mov
scas
sub
outsl
outsb
mov
js
add
in
outsl
das
fistl
fs
or
dec
ds
or
mov
gs
adc
xchg
je
cmpsl
daa
xchg
dec
loop
sub
xorl
sbb
mov
jge
sub
shlb
inc
pop
ds
or
and
in
out
test
cs
scas
imul
push
push
jl
pop
xchg
ds
mov
push
rorb
push
pop
mov
cmp
ret
int3
rorb
div
pop
push
or
cltd
enter
invd
jle
xchg
lock
notl
sbb
jg
dec
push
adc
mov
cltd
ret
jnp
jns
push
and
jg
mov
fwait
mov
divl
jg
adc
xor
pushf
jecxz
sarl
xor
cwtl
push
rcrl
aaa
push
imul
inc
add
lock
lahf
xor
stc
cmc
push
adc
push
add
add
cwtl
sarl
jns
push
push
add
pushf
enter
aad
xchg
cmp
mov
call
call
sub
adc
xchg
pop
adc
add
add
push
push
push
scas
add
jp
sbb
out
adc
daa
loop
cmpps
xchg
popf
xor
lret
cmp
fwait
mov
aad
add
add
add
lock
sbb
sub
lahf
mov
pop
xchg
add
in
dec
fidivrl
nop
jns
inc
fs
mov
dec
outsb
add
add
out
cmc
inc
sbb
add
add
add
gs
sahf
push
mov
or
cmp
cmp
imul
call
call
test
cmp
aas
idiv
sbb
fs
ds
sarb
jae
mov
pop
mov
stc
adc
inc
pop
cld
insb
imul
fsubrs
cmp
jbe
xchg
push
or
std
cmp
or
repnz
add
lea
adc
xchg
sub
cmp
nop
add
cmpsb
pop
aad
and
sbb
xor
aad
mov
out
lock
test
push
jbe
cmc
cwtl
push
arpl
cmp
fdivs
in
lea
sbb
and
fs
mov
or
mov
add
push
in
adcl
jo
add
sub
movsl
pop
in
pop
pmaxsw
aad
lods
sbb
aad
cld
repz
filds
add
add
mov
daa
in
mov
inc
call
or
cltd
mov
mov
mov
mov
mov
mov
mov
add
add
or
outsb
add
les
add
inc
sarl
lds
sub
sub
mov
mov
nop
orb
adc
and
popf
sbb
xchg
addr16
repnz
add
scas
xchg
jle
stos
mov
adc
outsb
cmpsb
add
addr16
jg
jmp
or
fdivrs
push
mov
add
xchg
jl
call
call
add
add
add
add
jp
cld
call
call
faddl
aas
aas
das
call
imul
cmc
out
jb
cmp
andl
sub
jge
cmpsb
xchg
sbb
icebp
mov
mov
jb
inc
fwait
push
add
add
add
push
sub
sbb
ljmp
call
call
ds
pop
andb
add
fidivrl
pop
clc
add
add
or
rcpps
mov
xor
jecxz
ljmp
jmp
in
test
fs
shrl
in
or
arpl
adc
arpl
or
hlt
mov
add
add
and
leave
mov
loop
imul
dec
mov
inc
imul
out
push
cli
orl
dec
pop
and
xor
gs
dec
fiaddl
mov
push
add
xchg
xor
or
bound
add
push
cmp
jne
sbb
xchg
out
outsl
mov
pop
clc
sbbl
and
cli
mov
call
call
push
and
sub
test
cltd
fdivr
jae
jns
or
sbb
into
mov
sub
mov
fsts
or
ljmp
add
add
add
lods
out
pop
cmpsb
inc
mov
test
enter
xchg
mov
pop
pop
nop
sbb
xchg
push
cli
or
imul
mul
pop
imul
loope
mov
jns
stos
inc
add
dec
lods
mov
cmp
addl
sub
adc
adcl
test
sub
popf
jp
mov
add
add
add
xchg
lret
jmp
adc
cmc
scas
aad
push
adc
stos
add
sbb
add
sub
inc
out
mov
xchg
inc
outsb
pop
arpl
test
dec
movsb
inc
loope
in
cmpsb
bt
pop
push
enter
fmuls
cmp
sub
loop
pop
mov
push
cwtl
mov
out
lods
xor
dec
inc
test
loop
xchg
fiadds
add
movsb
xor
push
call
call
call
mov
cwtl
inc
xchg
add
xchg
stos
imull
cmpsl
add
mov
pop
push
cmp
push
mov
pop
leave
jo
in
mov
add
inc
hlt
lret
ljmp
push
dec
stc
loopne
pop
push
cmpsb
pop
in
enter
mov
inc
fs
jecxz
sub
ja
push
jae
jp
movsl
cmp
and
lods
call
call
add
mov
xchg
jl
popa
sub
push
mov
adc
xor
add
mov
jnp
scas
pop
add
icebp
outsl
sarl
inc
fnstenvs
cs
mov
ljmp
outsl
inc
sub
add
add
add
add
mov
test
aas
mov
dec
adc
and
jp
test
fs
shll
and
add
jp
add
std
jmp
push
push
inc
add
popf
dec
imul
pop
into
mov
mov
cmpsl
jo
sub
lods
push
lret
int
sbb
and
mov
or
std
mov
fxch
pop
or
sti
imul
jae
cltd
movsl
fs
cmc
movsl
clc
xor
jns
xlat
aaa
xchg
sub
stc
fldl
aad
outsl
cmp
call
call
stc
cmp
sarb
dec
lret
nop
pop
test
jbe
std
jns
jns
dec
icebp
xor
mov
pusha
inc
xchg
inc
sahf
adc
jb
lcall
add
add
add
out
xor
push
popl
mov
sub
cmp
push
inc
movsl
or
xor
adc
pusha
clc
dec
hlt
inc
cltd
stos
movsb
test
mov
pop
rcrl
dec
scas
sbb
pushf
cli
loopne
add
pop
addb
shll
pop
mov
scas
mov
fldl
sbb
adc
add
mov
in
loope
fs
movsb
jnp
fisttpll
sbb
sarl
popa
mov
add
add
add
xchg
ret
push
shr
popf
sub
mov
dec
sub
aas
sub
or
sbb
das
add
shrb
and
jecxz
or
int3
andb
sahf
popf
mov
mov
shl
pop
mov
fcompl
decl
jle
sub
and
inc
sbb
xor
scas
sub
inc
mov
aas
xchg
push
add
mov
mov
call
call
ror
lret
mov
add
in
mov
mov
das
xchg
call
ja
aad
push
popf
fcompl
inc
mov
xor
das
sbb
push
mov
mov
in
add
fstps
enter
jl
add
or
xor
addb
add
add
add
push
testl
popa
loopne
pop
scas
outsb
sbb
xchg
xchg
or
shrb
xchg
stos
fisubl
sbb
adc
std
imul
xchg
mov
push
je
jb
jmp
jne
pop
sti
xor
divb
add
add
add
scas
lahf
adc
ja
jmp
dec
pop
sbb
test
xor
pop
dec
dec
cli
imull
int3
mov
das
push
rcl
fdivr
add
add
add
add
or
add
lods
cmpsb
push
xor
xchg
sbb
mov
in
pop
mov
scas
aas
outsl
ret
mov
lret
cmp
xchg
pop
out
divb
inc
cmp
sbb
daa
sbb
ss
shrb
std
xlat
les
call
call
call
sahf
jmp
or
jle
aad
aad
add
add
adc
fst
rol
adc
lods
movsb
mov
insb
fsubs
xlat
leave
mov
add
cs
pop
push
xchg
flds
push
iret
xchg
cs
and
inc
pushf
popa
ja
adc
enter
mov
stos
add
sub
lods
push
imul
test
lret
lock
pop
and
inc
mov
enter
add
mov
mov
adcl
test
testl
add
and
movnti
in
daa
and
lods
aaa
adc
add
int
call
call
call
jp
das
sbb
fwait
push
movsl
arpl
and
testl
pop
pop
movsb
cwtl
sub
jmp
repnz
aas
cmp
lods
mov
faddp
jne
push
jge
loop
ljmp
add
add
add
add
cwtl
movsb
pop
sbb
sub
add
add
add
pusha
push
add
bound
sub
adc
mov
dec
jne
out
fwait
xchg
sub
pusha
leave
scas
cmp
cwtl
gs
xor
xchg
lods
stc
or
addl
inc
in
dec
neg
add
add
sti
in
pop
xrelease
outsb
hlt
add
mov
add
pop
call
xchg
mov
sbb
and
test
mov
sbb
mov
sbb
stos
inc
pop
arpl
and
jbe
cmp
cmp
movsl
ja
insl
adc
insl
add
test
out
jae
mov
mov
jmp
pop
fdecstp
in
xor
stc
out
cmc
jb
pinsrw
andl
xchg
add
jp
lret
in
dec
inc
mov
mov
ret
mov
sbb
nop
rcrb
xchg
jmp
add
add
add
arpl
adc
scas
jge
hlt
and
rcrl
pop
mov
es
fisttps
in
outsb
gs
adc
push
daa
or
lret
aaa
repz
sarl
loopne
sbb
push
pop
push
loop
adc
mov
call
xchg
mov
inc
mov
xlat
lcall
add
push
dec
int
push
and
cltd
pop
imul
mov
add
add
push
mov
iret
dec
fmuls
cmp
sbb
add
add
add
aas
pop
xchg
fldlg2
pop
mov
pop
aad
outsl
cmc
push
jbe
rclb
ffreep
or
or
cmp
nop
stos
andb
jb
adc
sbb
inc
cmc
jmp
sbb
mov
pop
dec
adc
xchg
stos
call
call
or
dec
pop
rcrl
out
push
insl
loop
jp
jnp
lret
aas
flds
push
push
jbe
dec
dec
ss
rcrl
fwait
loop
mov
movsb
pop
test
test
mov
adc
adc
cwtl
push
jle
jecxz
hlt
cmp
add
or
lcall
fiaddl
cmp
loopne
mov
es
xchg
call
nop
xchg
mov
scas
hlt
pop
cmp
cmp
mov
das
daa
mov
add
add
xchg
mov
fidivl
outsl
in
imul
ja
push
into
sub
xor
call
call
mov
xchg
out
repnz
mov
jno
aam
es
add
add
add
add
or
jecxz
jbe
xlat
pushl
and
outsl
or
cmp
adc
addl
lahf
stc
call
call
call
xor
mov
xchg
inc
fadd
loope
add
or
pop
ss
mov
and
mov
ja
out
aam
add
push
pop
sub
push
iret
dec
cld
pop
clc
test
leave
mov
aad
sub
or
add
movntq
sbb
add
add
add
shlb
or
adc
cltd
inc
inc
mov
xlat
push
or
push
lcall
xchg
inc
or
loopne
jle
testb
enter
fadds
jo
sbb
daa
cmp
add
add
popf
jp
subl
jle
push
iret
mov
push
mov
fwait
xchg
jb
jbe
dec
loope
rcll
lods
inc
adc
jg
sub
popa
leave
dec
repnz
mov
and
in
dec
icebp
add
add
add
inc
insl
and
fldenv
lea
adc
xor
add
add
add
xlat
rcrl
xor
in
xor
and
sbb
in
jg
push
repz
xchg
stos
hlt
cltd
mov
mov
dec
lods
mov
shlb
sbb
je
push
movsl
mov
add
lock
ret
daa
mov
adc
dec
rorl
mov
xchg
push
add
add
test
in
lret
cmpsl
dec
iret
push
arpl
enter
add
add
mov
ja
and
addr16
jb
fwait
nop
add
cwtl
xor
aad
jo
jg
call
call
call
call
pusha
push
mov
fimull
mov
icebp
add
rclb
pop
sub
xor
lret
fldl2e
ret
fwait
mov
inc
add
jns
jns
subb
add
mov
shlb
int3
cmc
notl
pop
insb
sbbl
popf
dec
icebp
and
jmp
and
hlt
pop
inc
rolb
aam
cmpb
out
into
pusha
mov
icebp
xor
mov
sti
out
ss
dec
sub
aad
cmp
sub
add
pop
mov
popf
insb
ss
or
xchg
test
es
fistpl
in
or
or
sbb
push
and
sub
mov
js
mov
lock
test
cmp
in
cmp
mov
inc
call
or
push
es
cmp
add
add
add
add
mov
ljmp
mov
in
jp
jb
popf
sbb
scas
cmpsl
pusha
adc
pop
mov
pop
mov
sbb
adc
popf
and
pop
fmul
enter
xor
jnp
add
fmul
xchg
jg
call
sub
xchg
inc
inc
fnstsw
lock
daa
and
mov
filds
leave
inc
imul
mov
call
call
std
add
add
dec
and
mov
imul
les
popf
mov
nop
push
filds
push
sub
cmp
mov
ljmp
xor
nop
in
in
andl
lods
insb
jecxz
out
aad
in
and
dec
repz
xchg
jge
cmp
iret
aaa
sub
mov
and
jl
ss
add
add
add
add
dec
out
cmpsl
push
push
push
jae
add
adc
push
and
call
call
and
pop
jp
inc
cmp
cmpsb
lret
les
push
mov
and
mov
add
jbe
addl
add
sti
adc
aam
call
xor
cmp
mov
xchg
sub
inc
inc
pusha
fincstp
jmp
cmp
fmuls
add
mov
or
add
mov
inc
mov
outsl
cmp
into
jb
mov
mov
cmpb
aas
sub
add
sbb
aaa
dec
mov
call
call
pop
outsb
in
push
loop
cmp
add
jg
xlat
cmc
cmp
sub
je
rcl
xor
jo
adc
push
push
aas
syscall
int
xsha256
cmpsb
push
or
add
add
add
jl
lock
xchg
lock
test
or
daa
cli
jge
cwtl
push
xchg
outsl
cmpsl
lock
push
sbb
daa
pop
push
jb
sti
data16
add
add
add
add
cwtl
outsb
enter
push
add
dec
gs
xor
daa
outsb
es
fildl
out
dec
mov
and
inc
gs
das
add
or
and
popf
cmp
inc
adc
mov
sub
inc
dec
sbb
mov
fs
pop
sub
inc
pop
mov
inc
and
add
add
sbb
sbbb
repnz
sbb
cmc
jge
int
mov
sub
xchg
fs
adc
xchg
add
inc
icebp
pop
testl
call
call
mov
aam
add
inc
add
call
call
mov
jae
mov
addr16
add
add
insb
or
add
add
add
add
add
push
cmp
mov
pop
and
arpl
inc
cwtl
in
xlat
xor
adc
sub
inc
js
ja
sbb
add
js
repnz
fdivp
hlt
push
mov
mov
idiv
dec
inc
lret
dec
xlat
mov
call
inc
pushl
or
lds
add
pusha
lods
cmpsb
pop
pop
stos
and
pop
or
mov
xor
add
add
xor
in
adc
lds
add
in
jmp
jb
imul
cmp
add
gs
dec
stos
dec
in
cmp
mov
mov
jno
jmp
mov
pop
jge
mov
ret
nop
add
add
add
add
adc
xchg
xchg
push
call
call
call
inc
call
call
mov
cmp
add
add
add
add
xchg
faddl
cmp
mull
fisubrs
stos
adc
lock
jb
mov
mov
aaa
lcall
mov
nop
mov
push
push
roll
fdivrs
lods
hlt
cmp
cmpsl
inc
or
mov
sbb
sbb
lea
pop
push
lcall
in
in
clc
cmp
cmp
les
negl
mov
lock
imul
and
push
inc
out
inc
push
iret
xchg
add
add
add
push
adc
inc
outsb
jmp
cld
insl
pop
lods
add
call
call
loope
aaa
data16
add
arpl
in
and
cmp
add
mov
aaa
repnz
add
add
add
dec
rcrb
adc
fsubrl
lods
fildl
or
pop
ljmp
cmpsl
sub
push
push
test
cltd
xchg
mov
inc
mov
fsubrs
dec
jp
arpl
lea
mov
sbb
daa
pop
sub
ret
aad
add
add
add
inc
push
jmp
je
cmp
pop
xchg
sbbb
imul
shlb
hlt
aaa
insl
lret
das
in
inc
lcall
and
hlt
sub
rorl
icebp
mov
lahf
jbe
insb
sahf
dec
cmpsl
popf
in
add
add
cmp
fcoms
fs
andb
push
fcoms
and
int
rorb
les
add
sub
lea
lahf
jl
jle
ret
in
imul
lret
dec
and
xlat
sti
fildl
pop
mov
je
adc
test
les
cs
jecxz
pusha
xchg
scas
jns
or
add
mov
push
out
gs
xchg
fidivl
adc
add
and
jns
add
add
ret
faddl
rorb
ss
jecxz
leave
add
outsl
and
sub
ret
outsb
int
call
call
pop
push
cmc
xchg
sub
aaa
mov
add
pop
mov
dec
dec
xchg
mov
mov
mov
or
call
call
dec
push
add
out
ss
mov
add
jno
sbb
ss
lock
adc
rorb
xchg
es
adc
push
jbe
add
adc
lods
xchg
mov
out
mov
sbb
enter
mov
icebp
cmp
sub
imul
div
xchg
jno
rorb
jne
lret
cli
ljmp
add
call
sub
daa
xchg
jecxz
out
out
das
fidivrl
shl
jns
sbb
stos
dec
aaa
hlt
or
neg
cs
lret
dec
test
inc
cmpsb
hlt
inc
incl
pop
jle
jb
es
jp
loop
xlat
stos
push
sub
dec
lock
and
loope
xor
add
dec
clc
xor
push
scas
xchg
xor
sbb
cmpsl
bnd
or
scas
lahf
add
loopne
xor
jne
out
mov
adc
sarb
clc
xchg
sub
xchg
vmread
and
fwait
mov
add
jp
cmp
jg
cwtl
sti
cmp
pop
sub
push
jnp
pop
fmull
fidivs
pop
and
xor
xchg
insl
lea
sub
rcll
call
call
lock
or
push
dec
inc
scas
mov
ret
or
imull
pop
mov
xchg
call
iret
insl
dec
or
out
sub
sbbl
xchg
in
fs
pop
add
test
das
js
js
pop
popa
dec
lahf
mov
adc
inc
leave
mov
js
lret
hlt
and
push
jp
out
pop
sub
mov
push
xchg
scas
jp
jo
clc
hlt
add
testl
add
add
add
and
call
call
call
int
test
in
pop
stc
fsubs
fsubrl
dec
dec
and
out
cmpsl
inc
insl
and
lock
add
es
das
test
jb
leave
jb
push
xchg
lret
mov
or
mov
add
add
outsb
loop
aad
jo
xchg
xlat
inc
adc
adc
out
nop
cmpsl
jns
fiadds
pop
cwtl
cmpsl
ret
adc
adc
roll
mov
pop
stos
jbe
imul
xchg
jb
mov
push
in
dec
mov
xor
mov
sub
cmp
xchg
in
test
cmp
jno
rep
push
add
jo
cs
shl
add
iret
xchg
add
cmp
cmp
lret
cltd
jae
or
mov
jnp
pop
imul
call
call
call
pop
pop
js
add
push
jp
xchg
addb
jne
fmull
xor
cmc
pop
sbb
push
add
add
add
ja
inc
scas
xchg
pop
in
lret
dec
rcrl
dec
in
mov
mov
xchg
add
add
lods
test
lret
mov
js
pop
sub
sbb
dec
stos
idivb
jne
imul
bound
cwtl
cmp
push
gs
dec
xor
scas
movsb
hlt
cmpsb
imul
add
add
add
mov
popf
fistps
mov
inc
faddp
lret
mov
call
call
jg
fsts
in
sub
movsl
mov
adc
add
pop
js
repz
pusha
shrl
sbb
pop
jl,pn
dec
and
cmp
mov
rcll
dec
jb
addl
push
mov
sbb
int3
mov
cltd
out
ja
cmp
insl
adc
movsl
sbb
shll
repnz
daa
call
mov
add
add
add
sbbb
outsb
dec
adc
sub
leave
lods
lock
mov
icebp
ljmp
clc
jo
test
movsb
mov
mov
pop
hlt
add
add
aaa
pop
aad
outsl
scas
jnp
dec
or
movsl
pop
jne
fistl
es
aad
mov
pop
push
xor
in
xor
and
add
lods
dec
sub
push
cltd
sbb
adc
mov
jle
scas
leave
fistpll
pusha
inc
ja
insl
cmp
clc
adc
testl
or
fstps
push
xchg
add
outsb
es
fs
add
rcll
in
push
pop
sbb
mov
negb
add
hlt
xchg
push
mov
call
call
call
inc
xchg
mov
inc
aad
ljmp
ret
fisubrl
or
adc
xchg
pop
leave
test
add
add
pop
and
sub
jno
repnz
rorb
adc
mov
pop
sub
out
es
not
js
pop
jl
cmp
jecxz
cmp
mov
ds
sbb
ss
lock
cmp
sub
lret
out
js
mov
mov
pop
push
dec
jb
cmp
xchg
add
xchg
adc
mov
jb
sbb
call
call
call
jns
leave
cmp
or
pop
or
adc
jb
inc
jl
xchg
insb
rolb
push
lahf
push
lret
jnp
adc
sti
mov
add
add
add
pop
test
sub
int
pop
mov
mov
cmp
mov
mov
mov
daa
mov
inc
loope
ret
out
and
dec
mov
push
or
xor
push
into
sbb
inc
pop
push
std
sub
lea
add
push
sbb
sub
adc
cmp
push
stc
bound
in
xchg
inc
sbb
out
sahf
rep
mov
add
add
add
inc
xor
sub
xchg
arpl
pop
movsb
xchg
xor
leave
and
cmpsb
adc
call
call
add
hlt
sbb
sbb
pop
lods
xor
stos
mov
add
or
mov
loope
and
rcrb
fs
xchg
inc
dec
pop
and
mov
add
add
movsb
arpl
cwtl
add
xchg
mov
nop
dec
or
xor
call
call
call
imul
pushf
notl
and
filds
inc
sahf
ja
filds
outsl
bound
mov
dec
pop
lock
aam
outsl
cmpsl
jbe
stc
adc
xchg
xchg
and
mov
mov
or
adc
lret
arpl
mov
jg
add
js
int3
stos
mov
lcall
adc
loope
es
lret
jle
ljmp
mov
adc
mov
cmpsl
inc
icebp
jno
or
push
pop
dec
mov
sub
jb
ja
add
push
pop
inc
push
in
push
sbbl
addl
fstl
mov
pop
adc
add
cmpsb
add
insl
ljmp
add
add
push
les
insl
shlb
cmp
mov
jecxz
jbe
add
jns
outsb
cld
adc
mov
shlb
popa
cltd
jg
lods
in
imul
inc
mov
add
add
add
or
add
xchg
xchg
popf
iret
sub
js
fidivs
dec
pop
shl
out
push
adcl
aam
popf
add
call
call
call
xchg
cmp
insb
mov
cmp
add
js
in
icebp
cmp
pop
popa
stos
xor
add
add
add
add
pop
mov
jecxz
xchg
repz
inc
insl
and
rcrl
arpl
and
pop
fs
pop
mov
pop
inc
hlt
pop
lods
iret
push
stos
jmp
and
sbb
sbb
push
add
xor
fsubrs
fnstenv
adc
add
add
add
add
sbb
mov
jg
and
push
icebp
pusha
scas
fs
data16
lea
mov
push
aam
daa
mov
repnz
ret
jmp
sub
pusha
test
daa
and
in
or
add
add
add
add
dec
jmp
and
pop
push
notl
inc
jno
shlb
lcall
dec
clc
mov
gs
xchg
push
mov
and
dec
inc
cmp
push
push
jnp
add
add
out
sbb
xor
call
call
iret
enter
sub
sti
or
add
add
add
cmp
iret
xacquire
adc
and
xchg
mov
jmp
popa
orb
fsubl
das
jno
cli
iret
popa
pop
adc
xchg
into
movsb
sub
mov
sbb
jae
into
jbe
sarl
cmp
push
fdivl
jle
std
jbe
popf
pop
add
add
es
sbb
paddb
mov
scas
leave
dec
push
movsl
xchg
push
in
int
pop
xor
xchg
mov
add
add
mov
xor
xchg
in
loope
push
push
xor
mov
add
add
add
mov
shl
imul
push
add
sub
inc
cwtl
fcmovne
jb
inc
push
daa
imull
pop
iret
testl
mov
dec
jnp
jg
fistpll
and
movsl
pop
mov
add
add
add
add
aaa
rcr
fsubr
loopne
hlt
jge
push
jae
fldl
imul
imul
jecxz
mov
add
pop
int3
inc
loop
pop
adc
loopne
jbe
mov
in
push
dec
lods
mov
xor
push
xor
dec
dec
mov
push
ret
movsl
xchg
mov
inc
mov
mov
add
add
add
add
sub
fisubs
cltd
aam
pop
scas
xchg
adc
cmp
pop
imul
call
call
icebp
std
mov
xorl
ret
push
roll
push
pop
xchg
mov
incb
push
push
iret
es
mov
pop
mov
sbb
pop
imul
add
subps
pop
push
mov
mov
inc
cmp
movsb
test
xchg
lret
jp
xchg
and
pop
or
cmc
inc
ficomps
stc
or
add
add
add
add
sub
subb
dec
add
add
mov
mov
loope
rcrl
mov
nop
adc
jb
cltd
xchg
imul
dec
bound
add
testb
movsl
push
int
fs
ljmp
add
xchg
jl
ja
inc
sbbl
js
mov
inc
xor
je
jl
sbb
jge
aad
and
inc
dec
popf
or
pop
scas
mov
inc
xor
pop
daa
mov
es
mov
adc
sbb
push
add
xor
push
in
bound
jae
sti
mov
das
sti
dec
mov
stos
into
ret
pop
gs
mov
push
aaa
das
rorb
clc
sbb
call
mov
xchg
push
lea
mov
or
cmp
std
inc
out
xor
shll
jne
sbb
into
call
or
xchg
mov
inc
mov
add
add
inc
mov
mov
iret
test
xor
mov
cmp
das
pushf
dec
xor
incl
scas
daa
mov
pop
mov
call
call
lds
lret
outsl
in
xchg
dec
int3
roll
xor
xchg
sarb
adc
add
or
adc
mov
aas
outsb
sahf
out
push
push
andl
xorb
sbb
push
cmpsb
dec
fwait
mov
call
call
lcall
add
add
add
add
repnz
imul
fadds
pop
xchg
inc
jmp
cmpsl
and
incl
add
add
add
jg
mov
xchg
dec
fwait
ja
ja
or
ss
lock
pop
in
andb
cmp
and
mov
sbb
xor
call
call
call
cltd
jecxz
add
jg
mov
imul
xor
mov
loopne
stos
icebp
mov
jg
pop
ret
shlb
ret
fbstp
add
add
add
imul
imul
mov
insb
out
jg
cmp
fcompl
jmp
mov
xor
or
mov
int3
jne
scas
popf
push
add
xor
ljmp
call
inc
sub
inc
jne
xchg
xchg
adcb
mov
aaa
sarb
push
testl
mov
push
lods
jecxz
jl
fmulp
mov
mov
adc
and
js
cs
stc
pop
mov
hlt
sub
repnz
jmp
mov
fcompl
jmp
lret
cltd
rcrl
aad
mov
leave
pop
dec
movsb
mov
and
pop
es
add
outsl
leave
push
scas
add
ss
test
push
cmc
mov
mov
nop
fldt
aam
imulb
cmp
inc
insb
and
jmp
jg
ret
cmp
pop
lret
cmp
sub
xchg
mov
push
mov
dec
fimuls
xor
push
lea
add
jecxz
xchg
jnp
xchg
xchg
inc
popf
out
imul
sti
push
repz
pop
xor
inc
cmp
iret
xchg
imul
cmp
pusha
push
push
pop
aaa
cmp
pop
or
add
mov
adc
push
xor
sbb
js
dec
mov
call
call
cmc
iret
mov
das
adc
sbb
loopne
add
add
add
add
lea
xchg
sub
fldcw
and
out
push
lahf
mov
into
fwait
mov
mov
jmp
jns
imul
pop
scas
arpl
push
dec
mov
jle
and
jb
jns
addr16
shl
cmp
pop
in
cli
ja
loopne
inc
add
add
out
jle
jg
inc
sub
fdivrl
cmp
push
ljmp
add
pop
add
add
dec
or
rorb
add
inc
aaa
push
mov
sbb
mov
pop
gs
add
jns
loop
lds
sub
add
std
and
push
push
mov
pop
stos
add
hlt
add
jne
std
stos
jno
sbb
mov
add
es
mov
sub
ror
xor
push
add
and
xor
xor
adc
add
add
add
add
jge
nop
shrb
mov
popa
addl
dec
fsubr
sbb
dec
pop
and
push
lds
add
add
push
shll
lock
lcall
int3
repnz
call
call
outsl
das
cmp
pop
inc
jmp
scas
insb
sbb
cli
jl
sbb
jb
bound
inc
ja
mov
push
hlt
mov
sarb
add
imul
push
or
fisubrl
mov
dec
sbb
cmp
scas
pop
or
cwtl
dec
adc
pop
ficoms
rorb
add
pop
arpl
loope
cmpsb
jnp
add
xchg
mov
test
cld
out
dec
scas
pop
je
aas
mov
pop
je
add
add
call
call
or
rorl
fiadds
jle
push
outsl
mov
cmp
jb
and
call
call
lods
ja
lea
repz
mov
das
je
inc
enter
fisubs
call
call
call
cmp
cmc
sub
jo
frstor
cmpsb
lock
mov
inc
dec
mov
push
or
aaa
out
bound
daa
adc
pusha
loope
out
inc
adc
sbb
nop
xor
mov
pop
ret
xorb
inc
mulb
clc
push
sbb
or
dec
lods
ret
sbb
jmp
push
and
mov
jmp
movsb
xchg
jmp
ret
and
add
add
add
out
addl
inc
fcmovnu
out
inc
ja
pop
dec
gs
andb
and
xchg
ljmp
add
sub
mov
push
repz
xor
imul
add
add
out
add
or
shlb
adc
and
cmp
cmc
cmp
imul
cmp
xchg
fidivrs
aas
sub
ret
dec
mov
pop
loope
xor
jne
ficoml
xor
xchg
test
dec
lret
hlt
mov
inc
clc
pop
xchg
imul
ficoml
sbb
fmul
xor
ret
lahf
adc
dec
das
das
mov
hlt
les
mov
add
add
add
add
or
cwtl
repnz
xor
jp
stc
jae
lds
push
adc
push
add
mov
ss
and
call
call
sbb
jbe
mov
roll
xor
inc
cltd
addr16
sub
inc
in
or
hlt
add
mov
add
nop
add
cmp
out
dec
jne
cmovo
icebp
mov
and
adc
pop
test
push
in
mov
add
and
sbb
dec
mov
icebp
in
test
clc
jno
jnp
dec
std
imul
push
cmp
aad
rorl
enter
frstor
jmp
mov
xor
or
jg
mov
lret
loop
repnz
rcrb
aaa
push
or
ja
push
sub
cmp
call
call
call
sub
or
dec
sbb
jae
repnz
cli
inc
jg
das
push
in
into
dec
cli
add
les
aad
stc
pop
sbb
jl
xor
dec
arpl
pop
sti
jmp
add
lods
dec
xchg
push
add
icebp
jmp
stos
test
add
add
add
fmul
data16
adc
es
orl
pop
test
loopne
enter
icebp
sarb
lods
pop
shrb
arpl
add
mov
cmp
pop
jmp
aad
dec
arpl
outsb
and
cmp
mov
fsubrp
call
call
loop
in
inc
add
std
mov
sbbb
push
sbbl
movsl
lock
cmp
outsl
jno
xor
nop
sahf
jmp
inc
inc
testl
push
push
mov
test
xor
pop
or
adc
mov
divb
imul
lods
outsb
fninit
push
push
jg
jg
or
push
add
fsub
jp
sbb
inc
ret
push
sbb
xchg
std
push
pop
dec
enter
movsl
cli
sub
sbb
xchg
pop
dec
mul
pop
cs
sub
add
push
test
add
dec
cli
loop
cwtl
push
inc
adc
iret
out
add
sbb
sub
push
sbb
test
mov
mov
dec
pop
icebp
push
add
pop
push
enter
pop
add
jmp
sbb
and
and
inc
cmpsl
xchg
mov
mov
shrb
dec
nop
xchg
or
out
push
popa
jnp
push
std
jmp
pop
sub
mov
sub
inc
lcall
add
add
add
sub
rcll
push
cmp
push
jbe
mov
mov
jl,pt
call
call
dec
pop
adc
or
rcr
cmpsl
lahf
xchg
pop
sbb
push
jns
jecxz
cld
push
mov
cmp
adc
movsl
call
dec
jp
pop
call
test
push
mov
push
leave
jb
adc
popa
adc
mov
call
sub
add
add
sbb
add
cli
fisubs
lea
or
xchg
jg
pop
adc
pop
add
or
pop
ror
dec
dec
and
and
clc
push
test
ja
pop
in
pop
add
lods
ljmp
mov
add
mov
add
in
enter
into
mov
lahf
xor
xor
add
cmpsl
lea
mov
cmp
movsb
stc
mov
aad
xor
pop
jge
addb
clc
js
push
push
rol
mov
sarb
ljmp
mov
dec
in
sbb
push
xchg
mov
shll
cmpsl
dec
sbb
push
clc
inc
loope
mov
out
loop
mov
fildl
pop
cwtl
insl
loopne
push
repnz
in
cmp
lds
add
add
add
add
add
std
mov
add
scas
jmp
jg
in
int
cmp
xchg
out
or
insl
add
bnd
pop
daa
les
ss
pop
pop
das
push
clc
fmuls
jecxz
call
call
call
orb
mov
aas
mov
out
inc
add
test
adc
outsb
push
pop
subb
sub
add
add
dec
hlt
push
inc
incl
jmp
ret
mov
mov
mov
push
negl
mov
es
dec
mov
fucomp
sarb
and
outsb
and
sbb
cmpsl
test
add
xchg
orb
call
sbb
sub
sahf
pop
inc
jb
filds
jae
ja
sbb
push
movsl
xor
add
dec
sub
call
call
aad
mov
mov
aaa
repz
xlat
hlt
sbb
jo
std
mov
sahf
jne
bound
movsb
stc
add
jne
call
call
sub
cli
sub
or
xor
mov
add
add
add
push
xchg
or
in
push
sub
pushf
and
sahf
dec
rclb
std
int3
adc
or
loope,pt
pop
and
outsl
inc
aaa
mov
shrl
add
sub
sub
mov
sub
mov
lds
jle
sbb
sbb
int3
insb
and
rcrl
dec
xor
push
jnp
add
add
add
add
jmp
sbbl
mov
movsl
jl
mov
js
mov
push
inc
lcall
add
xor
lcall
push
push
fdivr
sub
add
call
call
call
repz
mov
icebp
mov
jnp
ljmp
lods
fstps
xchg
in
imul
jno
xchg
fmull
jmp
vxorps
int3
push
rcrb
imul
fisttpll
mov
sub
insb
lret
stos
pushf
pusha
sbb
and
rorb
add
xchg
and
cwtl
add
sub
xlat
mov
mov
jle
loope
sti
push
dec
pop
add
inc
ss
jo
pop
xchg
outsl
fisubrs
or
mov
xchg
pop
clc
and
add
add
add
out
call
call
call
pop
cmp
mov
adc
pusha
data16
fiadds
mov
jle
flds
fbstp
out
test
int3
rsqrtps
add
mov
jle
outsb
sub
jae
xchg
andb
pop
imul
jb
pop
cli
mov
out
jne
in
pop
aaa
xchg
aaa
lea
pop
jne
fwait
jnp
in
push
ret
add
add
add
jbe
in
mov
mov
jp
jb
xor
xchg
dec
leave
mov
adc
cmp
vphsubdq
push
jb
add
stc
das
inc
or
cli
sub
sub
stc
pop
dec
push
mov
add
push
sbb
push
or
pushl
adc
std
jb
cmp
jge
cmovae
mov
lods
jmp
adc
push
inc
dec
jae
lea
and
in
mov
nop
xor
push
inc
lds
pop
das
out
push
adc
shlb
test
movd
leave
mov
cmp
xchg
stc
out
in
sti
xor
add
fidivs
lods
push
popa
push
ror
jo
sbb
xchg
ds
mov
roll
mov
sub
imul
call
call
call
add
add
adc
or
and
in
mov
and
dec
mov
icebp
jecxz
adc
movsb
aam
pop
mov
xchg
hlt
inc
inc
sbb
inc
xchg
movsl
xchg
xchg
dec
inc
aas
gs
in
pop
daa
inc
cmpsl
push
jg
xchg
xchg
or
inc
xlat
xchg
sahf
cmp
fdivrl
push
push
rclb
in
sbb
jo
lret
orb
adc
scas
cmp
jg
pushf
push
aaa
jg
and
cmpsl
mov
dec
shr
in
lcall
add
sarb
mov
cmp
pop
inc
pushf
and
call
call
call
add
pop
inc
pusha
addr16
out
xchg
outsl
push
jb
int3
dec
jecxz
jns
add
xor
out
dec
repz
sti
fiaddl
inc
popa
out
stos
inc
pop
cmp
es
sahf
dec
push
and
xchg
push
inc
inc
sbb
add
les
fldcw
es
out
and
push
jb
imul
rclb
sub
add
add
pop
inc
push
jno
xlat
dec
jb
es
xor
jp
fwait
add
add
add
call
movsb
add
add
add
add
mov
stc
popf
or
add
add
popf
dec
adc
push
add
push
lods
xor
add
add
inc
pop
stc
mov
and
add
add
add
decl
out
cmpsl
cmp
sub
aam
and
test
mov
push
inc
out
sub
test
pop
std
or
xchg
dec
jle
dec
adc
mov
fidivl
aas
in
test
xor
adc
mov
add
insb
int
das
sbb
call
call
aam
xchg
lods
inc
sbb
subb
mov
out
and
adc
xor
addr16
sbb
or
in
dec
shrb
cmp
add
fisttpll
ds
sbb
jp
push
inc
mov
mov
cmp
ljmp
test
cmp
dec
loope
jno
push
mov
dec
jle
gs
aaa
or
add
add
add
add
scas
fdivs
and
test
push
jmp
mov
pop
inc
lods
inc
aam
add
div
call
call
sarl
lods
push
adc
test
bound
jp
and
push
fwait
mov
in
push
fldcw
cs
bound
mov
emms
and
out
ja
mov
sub
js
xchg
add
add
ljmp
xor
mov
sub
add
pop
or
jmp
lret
xor
cmp
pop
loop
xor
arpl
lret
jg
aas
stos
or
mov
fsts
mov
and
fiaddl
add
add
add
add
idivb
hlt
aas
mov
subl
add
add
roll
mov
xchg
call
call
sub
sbb
outsl
cmp
rcl
jno
fistl
pop
xor
push
inc
rorl
add
enter
stos
jne
fnstsw
dec
movsb
imul
dec
push
ret
cmp
dec
inc
pop
mov
sub
dec
roll
ljmp
fisubl
add
add
add
add
sub
xlat
js
push
pop
addl
add
add
add
push
cmpsl
inc
data16
mov
repz
or
pop
xchg
cwtl
xchg
and
test
mov
push
inc
cmp
or
add
orl
rorb
add
push
nop
ljmp
pop
sub
iret
mov
out
shr
jne
dec
inc
mov
push
add
pop
lcall
mov
xchg
and
add
mov
leave
pop
cmp
mov
lods
mov
sbb
xlat
nop
cs
call
call
call
cwtl
pop
pop
cmp
jle
and
outsl
xchg
mov
into
cltd
cmpsb
sbb
xchg
fstpt
dec
inc
aaa
shlb
pop
fdivrl
push
fisubrs
xchg
jecxz
jnp
clc
add
pop
fsubrs
mov
push
outsl
sub
xlat
aam
inc
cmp
add
add
add
add
in
shrb
andb
pusha
fcmovnu
test
inc
cld
cmp
sbb
std
push
fcmove
out
mov
int
arpl
adcl
js
sarl
mov
lahf
add
add
add
add
cmp
imul
ss
pop
mov
jle
and
jl
sarb
xchg
pop
das
push
mov
pop
imull
sbb
push
cmp
scas
pop
push
sub
jb
int3
cmp
mov
inc
and
mov
rorb
pop
jo
fisubrl
insl
jp
call
and
mov
add
pop
and
jb
ret
lods
add
mov
clc
enter
iret
add
cmc
int
loop
jne
cwtl
sub
add
add
fs
movsb
pop
orb
mov
adc
insb
or
lcall
jge
hlt
or
clc
and
mov
nop
call
call
call
fildll
or
push
in
jne
hlt
in
add
add
inc
shlb
inc
sub
add
xchg
icebp
push
addr16
sbb
pop
mov
or
nop
mov
xchg
xor
ja
jns
lods
jb
bound
add
add
add
cmc
cs
and
loopne
add
fmul
ljmp
idivl
push
dec
gs
xor
adcb
sub
int3
pop
inc
ja
fsubs
sbb
sub
ja
movsb
jbe
dec
pop
movsb
mov
lds
add
add
add
add
mov
fiaddl
fists
mov
inc
mov
enter
enter
xchg
or
dec
push
jle
cwtl
pusha
filds
clc
cmp
idivl
dec
fsubl
fwait
bound
loopne
xor
push
mov
jle
xchg
bound
ljmp
adc
out
ret
dec
and
add
or
sti
jne
in
push
lcall
cmp
insb
insb
into
icebp
movsb
push
and
pop
cmp
test
sbb
lds
xchg
add
je
cltd
cmc
mov
sarb
or
int3
int
subb
shlb
lods
subl
arpl
xchg
maskmovq
testl
mov
mov
sti
push
stc
ljmp
jl
lret
cmp
add
dec
xchg
lahf
hlt
or
add
cli
mov
pop
mov
inc
int
out
aaa
pop
les
xchg
mulb
ss
sbb
jmp
es
add
add
add
addr16
stc
neg
sbb
push
sbb
add
hlt
notb
cmpsl
and
sub
jecxz,pt
leave
repnz
sub
sub
in
jl
cmp
mov
sti
push
cmpsl
jl
sti
pop
push
stc
aad
dec
call
call
add
mov
mov
sbb
add
rclb
jg
fildll
pop
inc
fwait
add
jp
popa
adc
cs
dec
rcrl
call
call
fisttpl
jg
ret
mov
outsb
jnp
add
add
add
add
out
cmp
das
in
jns
add
add
add
add
add
push
jae
push
inc
jb
xorb
sbb
add
out
or
mov
push
mov
push
add
das
cld
inc
or
add
and
sbb
cmp
jl
loope
data16
jb
push
pop
sbb
lods
or
add
add
add
sti
mov
divb
fbld
sbb
jecxz
mov
xchg
popl
xchg
jns
xchg
xor
arpl
in
add
add
add
add
aam
jle
inc
jle
mov
test
or
movsl
mov
cmp
test
test
xchg
ss
pop
cs
mov
std
xchg
push
push
adc
add
je
pop
stc
popf
les
pop
add
push
insb
jae
stc
jge
lcall
xor
sbb
add
adc
or
test
aaa
jl
sti
mov
clc
hlt
ss
fidivs
push
sbb
add
add
add
add
jecxz
cltd
dec
jge
push
fistpll
cmpsl
mov
add
popf
or
call
call
call
and
mov
inc
and
das
add
mov
mov
jae
out
jb
daa
inc
mov
sbb
adc
xor
lods
jae
and
jp
lret
fwait
and
xchg
repz
mov
add
das
bswap
jno
and
mov
sub
lods
lock
sti
das
insb
ss
mov
fwait
xchg
push
push
adcb
add
add
add
add
sti
pop
divb
and
les
xchg
and
aas
mov
add
insl
sbb
push
mov
fidivl
sbb
push
xchg
jmp
iret
jo
int
dec
inc
xchg
in
xor
pop
or
xchg
mov
roll
add
add
shlb
leave
ss
push
mov
nop
loopne
cmpsb
xchg
test
into
jns
sub
shlb
scas
mov
loop
rclb
lods
bound
les
mov
add
add
inc
xchg
inc
and
pushl
lods
cltd
sahf
jmp
test
add
jp
aas
mov
sbb
jp
add
xlat
sbb
xor
leave
xchg
pop
sbb
outsb
scas
mov
jo
sub
stc
out
pop
in
mov
lods
mov
call
call
jne
jle
jbe
add
adc
out
xchg
sub
add
add
adc
ds
mov
xor
push
call
fisttpll
xchg
adc
out
jp
fsubrl
insb
jo
loopne
test
adc
or
lahf
decb
test
add
sbb
stos
ret
cmc
adc
out
adcb
pop
xor
test
pushf
mov
pop
and
imul
das
fisubl
inc
mov
push
xchg
iret
outsl
and
or
hlt
and
sub
dec
add
repz
outsb
adc
pop
or
inc
imul
inc
inc
mov
mov
seta
jg
stos
sahf
roll
sub
fbld
add
add
repnz
inc
add
push
cs
lahf
jl
and
mov
pop
rorl
enter
mov
mov
pop
in
insl
gs
push
shll
hlt
gs
dec
imul
add
dec
add
cmp
pop
bound
pushf
lret
push
push
ja
xchg
and
call
call
sbb
out
imul
mov
xchg
cmp
jl
dec
rorl
jge
mov
test
pop
dec
movups
imul
adc
mull
pusha
cmc
jg
dec
dec
mov
ja
pop
cwtl
inc
pop
xor
or
xlat
lods
pop
ss
jno
outsb
add
jg
mov
push
mov
sub
je
or
and
push
mov
sbb
push
outsl
movsb
lret
scas
subl
test
mov
movsl
dec
leave
arpl
not
sar
pop
mov
mov
xchg
dec
push
pop
scas
loopne
daa
sub
mov
bound
dec
dec
test
lret
loopne
mov
jle
pusha
pop
pop
jp
call
call
call
xor
mov
mov
in
cmp
add
add
add
mov
pop
test
aad
sbb
cld
shlb
pop
cmp
sub
mov
inc
ret
pop
sbb
xchg
sahf
ret
pop
add
mov
bnd
fcmovnb
ss
popa
jo
inc
pop
inc
stos
daa
and
dec
nop
lock
xchg
mov
sbbl
add
add
add
lock
shr
push
xlat
xchg
and
cmpl
cs
jno
bound
sbb
in
jge
pushl
xchg
pop
jb
stos
cmp
pushf
out
popa
inc
out
adc
mov
pop
out
shrl
cmpb
adc
inc
aam
std
add
add
add
add
xchg
subl
ret
test
movsl
arpl
add
imul
fistpl
add
addr16
imul
repnz
mov
in
outsb
mov
sub
push
int3
repz
dec
jae
sub
add
add
les
aas
imul
and
aaa
es
loopne
cmpsb
andb
pushf
pop
stos
dec
out
cmp
and
call
xchg
xchg
fmuls
sbb
das
jbe
shlb
mov
xchg
push
iret
fs
adc
and
pop
mov
pusha
les
insl
lock
jae
gs
insb
subb
jns
xchg
rclb
repz
mov
out
jecxz
adc
mov
xchg
pop
xor
lret
in
fldl
add
add
add
cmpsl
mov
jmp
mov
test
dec
add
rorl
push
sbb
rcrb
push
call
adc
dec
in
call
call
cld
sti
cltd
enter
out
in
mov
jno
xchg
mov
add
add
add
add
ljmp
cmp
push
xor
xchg
popa
or
cmpsl
aas
je
fwait
mov
out
jge
push
loopne
mov
or
add
and
hlt
pop
or
stos
adc
sub
clc
jbe
jb
jbe
xchg
rcrb
in
insb
xchg
orb
sub
aas
cmp
jnp
leave
aaa
pop
in
cmc
mov
iret
mov
add
adc
out
add
shrl
in
call
scas
or
add
add
add
lgs
shlb
add
add
imul
sahf
sub
jg
inc
lock
in
jecxz
insl
testb
std
test
leave
mov
shll
sbb
fistl
push
or
cmp
push
es
jae
aas
push
insb
mov
xchg
pop
push
add
or
xor
push
out
pop
loope
arpl
xor
loope
test
push
and
mov
adc
in
out
cmp
or
enter
cmpsl
test
lea
cmp
cmp
add
ds
sbb
cmp
and
lock
pusha
pop
jmp
dec
orb
js
xchg
push
cmp
pop
inc
loop
inc
arpl
cmpsl
inc
pop
sarl
xchg
test
xor
and
imul
jae
stos
cld
aaa
adc
and
dec
push
and
add
ror
and
inc
cmp
push
popl
sbb
mov
jno
mov
daa
mov
test
xchg
push
dec
daa
gs
ds
es
mov
in
outsl
mov
jl
add
lock
mov
stos
inc
xchg
je
rolb
inc
xchg
ret
lahf
dec
jo
ret
call
xchg
jne
mov
daa
cmpsl
jno
push
rcrl
add
cmp
add
add
add
push
das
or
addb
push
loope
lods
fidivrs
pop
xchg
out
test
in
imul
sub
jp
xor
daa
ljmp
hlt
adc
call
mov
insl
xchg
in
fiadds
add
add
add
sub
out
sbb
repz
inc
imul
dec
mov
movsl
push
cld
sub
movsb
sub
push
call
call
call
call
shr
sbb
aad
jb
loop
dec
or
cltd
notb
outsl
cltd
jecxz
xchg
xchg
cwtl
pop
mov
jmp
pusha
mov
jae
fadd
or
push
call
call
call
add
add
push
scas
lods
fldt
mov
push
gs
or
xchg
add
and
dec
and
add
add
add
add
imul
clc
inc
pop
mov
mov
arpl
push
mov
inc
mov
inc
rcll
pop
cli
jmp
or
and
aam
mov
btl
orl
scas
into
hlt
sub
and
and
leave
jecxz
xchg
arpl
dec
in
inc
push
sbb
dec
cmpb
mov
mov
ficoml
cmc
fwait
imul
or
sub
std
dec
pop
add
lret
add
sahf
or
pushf
fisttpl
fsubrl
jg
je
add
add
add
add
dec
cltd
out
push
ja
sarb
cmp
mov
fs
mov
lds
pushf
lret
adc
mov
mov
lock
cmp
or
test
jo
push
shlb
xor
sti
pop
fisttps
lods
add
xor
jg
cltd
lahf
mov
pusha
fdivl
inc
repz
lea
sbb
dec
insb
call
call
fwait
cmp
mov
mov
jns
jl
insl
mov
pop
pop
sub
push
aaa
sub
dec
test
or
xchg
cmp
clc
and
shll
in
adc
jg
popf
icebp
jo
leave
adc
lahf
testl
out
pop
or
stos
mov
or
ljmp
daa
mov
xchg
cltd
repz
and
lock
shll
sbb
jae
jmp
add
add
mov
in
fptan
inc
popl
movsl
fists
mov
js
mov
into
cmc
mov
enter
xor
aad
jle
add
add
add
add
push
inc
mov
lea
test
jg
inc
adc
cmp
in
adc
jge
xchg
test
pop
movb
je
push
pop
push
outsl
mov
rorl
ret
std
inc
scas
and
add
outsl
adc
mov
andl
int
repz
call
call
dec
cmp
mov
data16
inc
std
movsl
pop
jne
popa
pusha
jecxz
add
push
add
cld
sbb
dec
cmpsb
cltd
rcr
jo
mov
jnp
lock
lock
jl
inc
inc
push
stos
jmp
cli
xchg
fwait
push
addl
xor
mov
mov
mov
xchg
xor
outsb
push
jge
mov
add
dec
aad
ret
mov
cld
jge
sbb
out
mov
mov
add
popf
lcall
cmp
mov
call
call
pop
jg
loop
outsl
aaa
push
in
xchg
inc
adc
push
xorb
add
add
add
add
fnstenv
mov
rorl
and
push
add
push
mov
ljmp
insl
outsb
push
lock
mov
or
inc
int
ror
add
xchg
sti
out
mov
orl
jnp
mov
pop
or
mov
xorb
pushf
sbb
add
inc
xchg
mov
pusha
out
aaa
sbb
and
xchg
shrl
xor
mov
in
fld1
mov
add
ljmp
fcompl
ja
fcos
fcomp
pop
cltd
xor
test
hlt
bound
add
add
add
fcomi
cmp
rcll
ljmp
cmc
mov
leave
jnp
testl
xor
dec
into
es
cmp
ljmp
xchg
or
call
call
fcompl
imul
cmpsl
and
clc
in
push
sbb
inc
subb
xor
call
and
dec
jne
rorl
push
das
mov
xor
pop
test
cmp
xchg
add
inc
leave
xchg
pop
or
out
rolb
pop
sub
subb
mov
push
inc
add
add
add
add
add
test
cltd
adc
sbb
hlt
outsl
mov
lods
js
push
add
out
add
push
lahf
bound
push
lods
dec
jge
sahf
decb
shrb
aas
or
cmp
jno
add
add
jl
fistpl
sbb
dec
pop
mov
add
xchg
inc
mov
sarl
cmpsl
in
pusha
xor
xchg
cmpsl
adc
dec
mov
out
insl
add
popa
adc
or
andl
mov
inc
xor
push
testl
jl
cmp
out
jne
jp
fs
ja
mov
mov
dec
add
sarl
out
jns
subl
call
call
std
cmpsb
jnp,pt
aad
dec
lea
push
push
pop
dec
loop
or
mov
inc
int
jb
and
std
inc
mov
aad
jmp
adc
movsb
add
lock
jecxz
push
lock
sub
aas
dec
repz
cmpsl
jno
inc
imul
pop
call
call
mov
fdivs
cmp
bound
sbb
bound
shlb
cs
push
add
xor
call
push
add
add
mov
neg
out
push
lds
mov
cmp
movsl
mov
pop
sbb
mov
cld
push
lret
mov
cs
cmp
xchg
test
sub
fcmovnbe
ja
pop
add
add
and
sbb
add
mov
dec
sbb
add
dec
adc
fidivrs
mov
shll
dec
or
add
inc
jns
push
jb
mov
leave
xor
add
bound
dec
or
call
ja
or
cld
xor
xchg
jl
xchg
outsl
sarl
add
add
add
jecxz
push
lds
cmp
pushf
sti
call
call
mov
loope
jmp
icebp
inc
push
adc
inc
popf
int3
sub
jb
pop
fistps
cld
fstl
cmp
mov
arpl
dec
clc
pop
ret
mov
dec
ss
fstps
pop
xchg
repz
insb
mov
pop
outsl
sub
add
add
mov
inc
sub
mov
iret
inc
add
incl
pop
sub
jbe
cmp
sub
mov
ret
jmp
cwtl
jmp
mov
or
push
dec
mov
cli
and
inc
add
jbe
add
fs
cmp
push
sbb
cmp
add
add
add
add
ret
repz
push
sahf
cltd
dec
push
sub
sub
mov
imul
fwait
push
jns
cmc
add
pop
push
mov
jb
add
std
sti
negb
xchg
adc
mov
imul
in
imul
pop
sbb
addr16
leave
add
incl
in
jge
repz
imul
fcompl
add
xor
cmp
addb
call
call
aad
mov
into
pushf
xor
pop
nop
dec
adc
fadds
rcl
mov
add
inc
loop
mov
cmp
lods
loope
mov
cmp
adc
sbb
std
outsb
jne
mov
test
mov
add
mov
mov
add
add
and
push
in
in
cltd
inc
add
mov
xor
incb
add
sub
cmpsl
popf
in
sub
call
daa
dec
mov
loopne
addr16
cmp
cli
std
ja
test
je
mov
in
xchg
aas
adc
xor
and
add
and
fs
cmp
adc
aas
or
push
mov
add
add
add
sahf
repnz
pop
jecxz
sub
sbb
iret
pop
jnp
mov
push
dec
xor
inc
sti
and
push
leave
mov
add
sbb
xchg
call
call
call
sub
in
sub
add
add
add
jns
dec
loop
sub
popa
push
pop
xor
cmc
add
add
add
add
pop
mov
arpl
jmp
inc
mov
es
cli
scas
loopne
hlt
cli
sub
cmp
xor
fstpl
xor
add
add
vpunpcklwd
sbb
mov
jns
jae
add
add
add
jmp
out
loope
sbb
stos
xor
jb
and
pop
sub
jmp
mov
lahf
pop
andl
push
gs
into
adc
adc
add
add
add
add
lock
xor
int3
les
insb
lods
push
pop
js
dec
xor
out
std
int
popf
ds
jae
sub
inc
jae
test
aad
pusha
xor
push
loopne
add
lods
nop
jae
push
loopne
add
je
out
add
movsb
dec
jo
daa
or
fnstenv
add
les
sarl
and
add
add
repz
fldenv
push
aam
xchg
dec
shll
xor
inc
into
test
call
call
sub
mov
stc
and
and
inc
out
sub
les
mov
and
call
call
call
push
in
add
stos
addl
sbb
das
popa
lcall
push
bound
dec
dec
rorb
test
lret
xchg
mull
lods
mov
lret
inc
or
bound
lretw
or
cmp
add
add
add
sbbw
ror
in
mov
cmp
sahf
mov
fmuls
lods
add
loope
lods
pop
inc
jns
aam
lock
lahf
aas
aas
and
mov
or
mov
or
cmpsb
inc
fiadds
lods
loopne
mov
imul
sar
push
scas
sahf
pop
in
mov
pop
cmpsb
jle
add
cli
hlt
dec
addb
add
add
add
sub
fldcw
clc
jle
movsl
fimull
jno
loopne
jmp
jle
popa
inc
inc
xchg
sbbl
inc
pop
test
pop
xchg
cld
add
fwait
dec
adc
jnp
and
add
add
add
add
jg
add
pop
mov
cmp
add
jl
pop
and
jp
add
pop
icebp
jb
push
fsubrs
fdivr
test
mov
aaa
pop
fs
fidivrs
pop
mov
mov
subl
aam
and
add
add
add
add
mov
mov
push
adc
mov
mov
enter
push
push
xor
jns
ds
aaa
mov
jg
subb
xchg
dec
xchg
loop
inc
out
cmp
inc
mov
jbe
pushf
mov
pop
pop
movsb
add
call
call
dec
jo
or
scas
pushf
fnsave
xchg
loopne
xchg
sub
call
push
out
in
aad
clc
cmp
imul
inc
add
lods
rorb
and
lea
dec
data16
mov
adc
daa
xchg
test
imul
aaa
imul
add
add
std
imul
mov
add
rorb
lds
push
aas
fcompl
cld
xorl
shrb
or
jle
mov
or
mov
pop
ljmp
outsb
sbb
add
add
add
add
sub
xchg
xor
adc
xor
push
mov
pop
cs
pop
inc
test
pmaxsw
or
pop
xchg
cmp
hlt
push
jo
clc
dec
lods
inc
sub
cltd
in
xor
test
jbe
scas
daa
jl
lcall
add
add
add
dec
mov
lret
add
add
fsubrs
test
cli
sub
add
push
jnp
jle
jle
jbe
mov
add
add
add
add
ret
or
insb
cmpsb
fs
xor
add
lods
jb
into
stos
call
cmp
fsub
cmp
insb
cwtl
adc
rcll
mov
test
jge
loopne
add
add
lds
call
pushf
in
aaa
inc
mov
lock
in
test
or
push
or
stos
movsl
cmp
add
add
add
mov
ss
push
dec
ret
or
bound
mov
and
icebp
adc
in
xorb
clc
mov
cmp
call
call
xchg
xchg
lock
fstps
mov
fistl
xchg
mov
xor
pushf
ja
dec
mov
les
adc
les
lahf
scas
mov
add
daa
inc
jp
add
sub
and
push
jle
add
add
mov
arpl
xorb
or
aam
leave
js
adc
sub
or
insb
add
add
mov
add
cmp
lods
cwtl
ljmp
push
pop
adc
jg
imul
add
add
add
add
cmpsb
inc
sbb
out
cli
mov
call
sbb
test
test
cmpsb
jne
ss
xchg
and
cmp
repz
ret
jge
mov
mov
mov
push
data16
in
dec
cmc
mov
sub
dec
add
cmp
mov
pop
add
push
mov
bswap
rcrl
or
add
inc
xchg
push
lahf
test
pop
andb
sti
daa
cmp
fldt
lods
fcmovnbe
cmp
pop
or
mov
and
cltd
add
inc
add
pop
pop
jbe
imul
add
fsts
sbb
xchg
xor
stos
mov
stc
dec
or
add
cmc
pop
and
ret
in
or
les
daa
xchg
add
aaa
pop
sub
adc
loope
sbb
loop
call
call
sti
mov
lret
pop
mull
push
test
scas
aad
pop
pop
call
dec
insl
and
mov
sbb
add
add
add
add
out
insl
gs
xor
add
sub
testb
fmulp
leave
jae
jl
add
pop
or
add
mov
sbb
fisubrs
add
add
mov
xlat
stos
test
sbb
ret
test
sbbl
xchg
fidivrl
xchg
push
test
sub
andl
mov
add
add
add
add
mov
push
das
jmp
xchg
stos
ret
aas
jnp
scas
imul
or
popa
popa
iret
and
pop
xchg
loope
xlat
movsl
cwtl
adc
jecxz
divl
adc
or
aaa
stos
mov
popa
aam
cwtl
add
ret
stos
jl
cmp
sbb
divps
pop
stos
lcall
add
xchg
xchg
fndisi(8087
cmc
arpl
jp
push
outsb
lods
push
fwait
cld
ss
xor
xchg
inc
xchg
mov
fstpl
mov
or
mov
fs
mov
test
and
add
sub
andb
mov
fcmovbe
push
fldl
movsb
cwtl
icebp
icebp
js
dec
lcall
roll
push
lea
inc
pop
add
incl
pop
int3
ret
and
mov
jl
sub
or
pop
insl
lods
lcall
mov
pop
ja
sub
daa
jnp
add
add
add
add
mov
mov
cmpsl
sub
and
dec
bound
jp
das
add
pop
adc
cmc
loop
xchg
loop
dec
adc
jnp
cmp
xor
push
ss
inc
mov
mov
adc
insb
in
push
push
dec
cmp
loope
gs
mov
add
add
add
cmp
push
jmp
clc
shrb
jbe
inc
out
push
leave
popf
push
insl
fs
add
ds
or
mov
cmp
xor
adc
es
mov
dec
jne
inc
pop
loopne
xchg
stos
and
mov
pop
ret
add
and
sub
and
mov
fwait
pop
xlat
inc
adc
shlb
gs
in
jg
xchg
dec
arpl
jb
stc
ds
std
xchg
adc
cmpsl
sbb
imul
cmp
nop
sub
lret
add
or
pmullw
movsb
in
pop
mov
cltd
ds
mov
inc
jp
es
mov
mov
add
add
or
ja
fadds
adc
inc
rorb
jnp
push
dec
jae
sbb
jae
dec
lea
sbb
push
adc
pop
push
jg
xchg
scas
adcb
imul
cmp
lods
cmp
mov
mov
or
and
out
sbb
punpckhbw
jecxz
dec
jle
dec
xor
push
jl
pop
cmp
pop
ret
pop
ja
sbb
cld
into
mov
xchg
jno
aas
fwait
hlt
add
or
push
jns
vhaddpd
inc
add
xor
mov
and
xor
fisubrs
mov
mov
mov
in
cs
movsl
shll
int3
jmp
dec
shrl
shl
add
decl
inc
call
add
sbb
push
cmpsl
push
div
fadds
fdiv
mov
out
add
enter
data16
in
add
arpl
hlt
pop
adc
jae
add
ja
push
mov
sub
xor
mov
mov
sub
mov
sub
mov
mov
add
mov
push
xor
pop
mov
sub
add
xor
add
mov
mov
xor
mov
add
mov
sub
mov
cmp
je
add
sub
cmp
jae
cmp
jb
and
sub
mov
mov
sub
mov
add
jmp
xor
xor
leave
ret
int3
int3
int3
int3
int3
push
mov
push
push
test
je
add
mov
add
mov
sub
sub
cmp
jne
pop
mov
and
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
add
imul
xor
mov
sub
xor
sub
xor
cmp
jne
and
add
add
mov
add
sub
sub
call
mov
add
mov
mov
add
sub
xor
sub
mov
mov
sub
mov
cmp
jae
add
mov
xor
add
add
add
mov
cmp
je
sub
jmp
add
xor
mov
mov
mov
sub
mov
xor
push
rol
xor
ret
sub
sub
add
call
mov
mov
sub
ret
int3
int3
sub
shr
add
mov
cmp
jne
mov
mov
add
mov
mov
sub
leave
ret
int3
int3
int3
int3
push
mov
and
sub
xor
mov
sub
shr
mov
mov
xor
sub
mov
sub
dec
or
add
mov
mov
xor
mov
mov
mov
sub
add
sub
add
mov
and
add
or
add
and
mov
or
add
add
add
sub
mov
sub
mov
mov
sub
cmp
jae
sub
test
jne
mov
xor
shl
mov
add
jmp
or
add
sub
mov
add
xor
mov
and
sub
mov
sub
xor
mov
add
sub
sub
sub
xor
mov
push
mov
pop
or
add
sub
add
mov
add
xor
cmp
je
mov
mov
sub
xor
jmp
mov
add
sub
add
mov
sub
mov
mov
sub
mov
mov
push
call
cmp
jne
xor
jmp
or
sub
sub
add
xor
mov
mov
sub
sub
add
cmp
jne
shl
sub
sub
add
mov
or
sub
add
sub
mov
mov
shr
xor
mov
and
add
mov
add
sub
add
mov
mov
sub
and
add
sub
cmp
je
sub
mov
sub
imul
add
add
cmp
je
add
jmp
add
call
and
sub
sub
add
sub
xor
xor
add
add
mov
mov
sub
mov
sub
and
mov
sub
and
add
add
add
mov
add
add
xor
sub
xor
add
add
mov
cmp
je
mov
pop
mov
jmp
sub
sub
xor
xor
shl
call
call
cmp
jne
sub
mov
add
mov
add
add
push
mov
or
pop
sub
sub
sub
sub
add
add
mov
add
or
mov
xor
add
or
mov
sub
add
mov
sub
and
sub
add
mov
and
mov
or
mov
xor
mov
xor
xor
or
add
sub
xor
sub
xor
sub
xor
add
sub
or
add
sub
sub
push
xor
cmp
je
mov
mov
xor
ret
add
sub
shl
mov
add
lea
add
add
add
push
add
add
sbbb
ss
jne
jno
xchg
add
add
dec
xor
add
push
pop
jg
dec
push
mov
add
jge
jge
imul
cs
sbb
pop
aas
add
adc
and
add
outsb
add
add
add
popl
jns
sub
add
jge
jl
inc
add
pop
jle
dec
aaa
push
add
jnp
add
pop
inc
dec
aaa
jge
push
xor
cmp
insl
and
push
pop
aas
cmp
pusha
add
ds
cs
push
sbb
cmp
jp
adc
sbb
add
add
dec
imul
cmp
adc
test
and
xor
dec
push
push
inc
pop
and
xor
dec
gs
push
sbb
sub
sbb
jnp
pop
outsb
cs
jp
dec
add
add
push
xchg
dec
mov
cmp
add
add
sbb
test
add
xorl
push
push
push
sub
popa
inc
test
add
add
dec
aas
sub
sbb
sub
mov
dec
jle
pop
pop
aaa
dec
add
test
xorb
pop
dec
arpl
fs
inc
bound
pop
mov
sbb
xor
cmp
add
add
dec
popa
add
and
je
dec
xchg
pop
add
cmp
pop
cmp
inc
popa
dec
inc
daa
inc
addb
push
push
je
add
imul
push
push
push
bound
push
add
add
jle
pop
pop
add
add
and
sub
push
add
inc
gs
push
add
add
inc
xor
sub
and
pusha
add
push
add
push
data16
add
add
add
xor
insb
jp
cmpb
add
adc
lea
imul
jge
sbb
add
add
push
cmp
and
add
add
and
add
cmp
push
mov
mov
dec
jge
add
bound
sub
arpl
dec
es
cmp
add
pusha
pop
sbb
mov
add
add
add
adc
sub
push
pop
jb
mov
and
cmp
jae
pop
dec
cmp
add
popa
adc
outsl
add
bound
xor
pop
inc
xchg
push
add
push
add
add
xor
sbb
jle
add
add
sub
cmp
add
sub
jge
add
sub
dec
dec
jnp
arpl
add
add
add
add
add
cmp
add
add
add
add
add
dec
cmp
add
mov
push
xor
add
ds
dec
jbe
jns
jo
xor
es
jnp
add
dec
jle
cmp
pop
add
pop
xor
jae
mov
sub
sub
inc
push
push
pop
addr16
add
add
add
cs
inc
push
sub
sub
jp
jne
add
dec
jl
jle
add
lea
jl
test
push
xor
add
add
add
pop
xor
test
jl
sbb
ss
sub
add
add
jo
xor
popa
sub
add
add
add
add
mov
insb
and
sbb
jle
outsl
pop
jo
add
add
add
add
inc
add
inc
addr16
push
cmpl
mov
add
and
inc
and
push
mov
add
jns
jns
add
pop
andl
test
sbb
add
push
mov
pop
dec
add
jg
pop
jle
add
adc
jns
adc
add
add
pusha
sub
xor
sub
je
pop
and
adc
adc
jae
add
cs
add
add
fs
test
inc
daa
outsl
jbe
gs
add
add
sub
mov
jl
pop
js
pop
imul
sbb
dec
dec
and
adc
adc
add
xor
add
jne
xor
add
add
pop
fs
add
pop
inc
add
jb
ss
outsl
and
add
aaa
pop
adc
jbe
and
inc
add
inc
push
pop
imul
mov
push
dec
jl
jp
cmp
push
push
add
push
pop
push
jnp
cmp
cs
add
inc
xchg
dec
mov
test
pop
imul
sbbl
add
cmp
ja
push
orb
add
jae
push
inc
push
xor
ss
push
adc
sub
add
pop
add
test
inc
das
jg
add
dec
imul
js
add
adc
add
add
add
dec
xor
adc
gs
dec
lea
push
cmp
sbb
fs
sbb
dec
insl
push
xchg
inc
xor
add
sub
push
je
adc
ja
jo
add
pop
add
arpl
daa
pop
pop
add
popa
and
and
sub
lea
add
add
add
adc
add
and
sub
add
adcb
add
jne
pusha
insl
inc
dec
sbb
add
addr16
pop
jns
sbb
add
ds
add
adc
add
dec
add
adc
outsb
cs
add
pop
sub
andl
jl
dec
subb
inc
add
add
addb
cmpb
fs
sbb
pop
push
cmp
add
dec
and
and
add
adc
add
outsw
add
cmp
cmp
pop
mov
add
mov
mov
adc
mov
jo
pop
add
add
add
add
adc
sub
adc
mov
pop
mov
dec
dec
jno
sbb
adc
xor
add
push
xor
adc
add
add
add
add
adcl
add
sbb
je
add
push
das
add
add
inc
adc
inc
mov
arpl
mov
add
inc
js
dec
add
add
orb
aaa
inc
push
jle
add
inc
cmp
dec
add
jg
insl
dec
inc
mov
add
cmp
add
xor
add
pop
arpl
adc
add
mov
daa
aas
dec
add
jp
add
dec
dec
mov
cmp
xchg
pop
adc
adc
add
jae
imul
and
test
pop
imul
cmp
dec
add
adc
imul
push
xor
cmp
push
imul
add
add
push
insb
lea
cmp
add
pop
jnp
inc
outsb
add
inc
xor
add
inc
insl
cmp
add
bound
inc
push
ja
dec
pop
and
dec
pushl
rorb
push
mov
push
push
lea
push
call
mov
mov
push
add
push
adc
push
push
call
mov
test
je
mov
mov
leave
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpw
jne
mov
cmpl
jne
cmpw
jne
cmpl
jbe
xor
cmp
setne
mov
ret
xor
ret
push
push
call
andl
lea
push
call
movl
mov
push
push
mov
call
push
call
mov
test
jne
push
call
pop
jmp
mov
push
call
push
push
test
jne
call
push
call
jmp
mov
mov
mov
mov
mov
mov
mov
and
call
push
call
mov
cmp
je
or
mov
mov
shl
mov
add
mov
mov
mov
mov
mov
call
mov
xor
inc
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
push
call
pop
test
je
push
call
pop
call
test
je
movzwl
jmp
push
pop
push
push
push
push
call
mov
cmpl
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmpl
jne
push
call
call
movl
mov
jmp
xor
inc
ret
mov
movl
mov
call
ret
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
mov
mov
cmpl
jne
cmpl
jne
mov
cmp
je
cmp
je
cmp
je
cmp
jne
call
xor
ret
push
call
xor
ret
call
pushl
call
pushl
call
push
call
add
ret
push
call
test
je
push
push
call
test
je
pushl
call
ret
pushl
call
pop
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
push
mov
jmp
mov
test
je
call
add
cmp
jb
pop
ret
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
ret
mov
push
xor
cmp
jne
call
push
push
push
push
push
movl
call
add
push
pop
pop
ret
mov
cmp
je
mov
xor
pop
ret
mov
push
xor
cmp
jne
call
push
push
push
push
push
movl
call
add
push
pop
pop
ret
cmp
je
mov
mov
xor
pop
ret
cmpl
je
push
call
test
pop
je
pushl
call
pop
call
push
push
call
test
pop
pop
jne
push
push
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
test
pop
je
push
push
push
call
xor
ret
push
push
call
push
call
pop
xor
mov
xor
inc
cmp
je
mov
mov
mov
cmp
jne
pushl
call
mov
pushl
call
pop
pop
mov
mov
cmp
je
sub
mov
cmp
jb
cmpl
je
mov
call
cmp
je
push
call
pop
call
jmp
push
mov
call
pop
push
mov
call
pop
movl
call
cmpl
jne
mov
push
call
pop
pushl
call
xor
inc
cmpl
je
push
call
pop
ret
call
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
mov
pop
ret
push
push
mov
push
push
xor
xor
cmp
je
inc
cmp
jb
cmp
jae
push
push
call
cmp
pop
je
push
call
test
pop
jne
cmpl
je
cmp
je
push
mov
push
mov
push
call
add
test
je
push
push
push
push
push
call
add
push
mov
push
push
movb
call
test
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
push
call
inc
cmp
pop
jbe
push
call
sub
add
push
mov
push
sub
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
jmp
xor
push
push
push
call
add
test
je
push
push
push
push
push
call
add
pushl
push
push
call
add
test
je
push
push
push
push
push
call
add
push
push
push
call
add
jmp
push
call
mov
cmp
je
cmp
je
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
pop
pop
pop
pop
pop
ret
push
call
cmp
pop
je
push
call
test
pop
jne
cmpl
jne
push
call
push
call
pop
pop
ret
ret
push
mov
push
push
push
call
mov
test
je
mov
mov
push
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
cmp
jae
cmp
jne
mov
jmp
xor
test
je
mov
test
mov
jne
xor
jmp
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
add
cmp
jge
imul
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
pop
pop
pop
leave
ret
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzbl
push
call
test
pop
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
or
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
push
inc
push
call
mov
cmp
pop
pop
mov
je
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
push
call
cmp
pop
pop
mov
je
push
push
push
call
add
test
je
push
push
push
push
push
call
add
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
mov
push
xor
cmp
push
mov
mov
mov
movl
je
mov
addl
mov
mov
cmpb
jne
xor
cmp
mov
sete
inc
mov
jmp
incl
test
je
mov
mov
inc
mov
mov
movzbl
push
inc
call
test
pop
je
incl
cmpl
je
mov
mov
incl
mov
inc
test
mov
mov
je
cmpl
jne
cmp
je
cmp
jne
test
je
movb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
dec
test
je
movb
inc
incl
test
jne
mov
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
movsbl
push
je
call
test
pop
je
mov
mov
incl
mov
inc
incl
mov
mov
incl
mov
jmp
call
test
pop
je
inc
incl
incl
mov
inc
jmp
test
je
movb
inc
mov
incl
mov
jmp
mov
test
pop
pop
je
andl
incl
leave
ret
push
mov
sub
push
xor
cmp
push
push
jne
call
push
mov
push
push
mov
call
mov
cmp
mov
je
cmp
mov
jne
mov
mov
lea
push
push
push
lea
call
mov
add
cmp
jae
mov
cmp
jae
mov
shl
lea
cmp
jb
push
call
mov
cmp
pop
je
mov
lea
push
add
push
push
lea
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
jne
xor
jmp
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
jne
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
push
call
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
push
push
call
xor
mov
lea
push
call
movl
push
push
pop
push
call
pop
pop
cmp
je
mov
mov
lea
jmp
movb
orl
movb
mov
movb
movb
movb
mov
movb
add
mov
add
cmp
jb
cmp
je
mov
cmp
je
mov
lea
lea
mov
mov
cmp
jl
mov
movl
jmp
push
push
call
pop
pop
test
je
mov
lea
mov
addl
lea
jmp
movb
orl
movb
andl
andb
movb
movb
andl
movb
add
mov
add
cmp
jb
incl
cmp
jl
jmp
mov
andl
test
jle
mov
mov
cmp
je
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
shl
add
mov
mov
mov
mov
mov
push
lea
push
call
pop
pop
test
je
incl
incl
inc
addl
cmp
jl
xor
mov
shl
add
mov
cmp
je
cmp
je
orb
jmp
movb
test
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
mov
and
cmp
jne
orb
jmp
cmp
jne
orb
push
lea
push
call
pop
pop
test
je
incl
jmp
orb
movl
inc
cmp
jl
pushl
call
xor
jmp
xor
inc
ret
mov
movl
or
call
ret
push
push
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
push
mov
mov
cmp
mov
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
mov
push
push
push
push
xor
lea
inc
xor
push
mov
mov
call
cmpl
pop
jle
mov
jmp
push
push
call
mov
add
cmp
movzwl
lea
jbe
push
push
call
test
pop
pop
je
movzwl
inc
add
cmp
jb
jmp
andl
mov
pop
pop
pop
leave
ret
push
pushl
mov
call
test
je
mov
cmp
je
push
pushl
call
call
test
je
mov
jmp
push
call
mov
test
je
call
test
je
push
push
call
test
je
pushl
call
mov
mov
pop
ret
push
call
pop
ret
push
pushl
mov
call
test
je
mov
cmp
je
push
pushl
call
call
test
je
mov
jmp
push
call
mov
test
je
call
test
je
push
push
call
test
je
pushl
call
mov
mov
pop
ret
call
ret
push
pushl
call
mov
test
jne
pushl
call
pop
mov
push
pushl
call
mov
pop
ret
mov
cmp
je
push
pushl
call
pop
call
orl
mov
cmp
je
push
call
orl
jmp
push
push
call
push
call
mov
mov
movl
xor
inc
mov
test
je
call
test
je
push
pushl
mov
call
mov
push
pushl
call
mov
mov
movb
movb
mov
mov
push
call
push
call
pop
andl
mov
mov
test
jne
mov
mov
pushl
call
pop
movl
call
call
ret
push
call
pop
ret
push
push
call
pushl
mov
call
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
pushl
call
pop
call
test
je
push
push
call
pop
pop
call
orl
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
mov
test
je
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
andl
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
movl
call
push
call
pop
movl
mov
test
je
push
call
pop
cmp
je
cmp
je
cmpl
jne
push
call
pop
movl
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
push
push
call
mov
test
jne
call
xor
pop
ret
push
mov
push
push
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
cmpl
mov
mov
je
cmpl
je
cmpl
je
test
jne
mov
mov
mov
movl
mov
mov
call
cmp
mov
je
pushl
push
call
test
je
call
pushl
call
pushl
mov
call
pushl
mov
call
pushl
mov
call
add
mov
call
test
je
push
pushl
call
pop
call
cmp
mov
je
push
push
call
mov
test
pop
pop
je
push
pushl
pushl
call
pop
call
test
je
push
push
call
pop
pop
call
orl
mov
xor
inc
jmp
call
xor
pop
pop
ret
push
mov
push
push
push
lea
xor
push
mov
mov
call
test
pop
je
push
push
push
push
push
call
add
lea
push
call
test
pop
je
push
push
push
push
push
call
add
cmpl
pop
jne
cmpl
jb
xor
inc
leave
ret
push
pop
leave
ret
xor
cmp
push
sete
push
push
call
test
mov
jne
xor
ret
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
andl
jmp
xor
inc
ret
int3
int3
push
pushl
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
pushl
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
sub
push
mov
push
push
mov
xor
push
mov
cmp
movb
movl
lea
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
cmp
mov
lea
mov
mov
mov
je
lea
mov
test
lea
mov
mov
je
mov
call
test
movb
jl
jg
mov
cmp
mov
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
pop
add
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
jmp
cmpl
je
push
push
mov
mov
call
jmp
push
mov
sub
mov
andl
andl
push
push
mov
cmp
mov
je
test
je
not
mov
jmp
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
cmp
jne
mov
jmp
test
jne
mov
shl
or
mov
not
mov
pop
pop
pop
leave
ret
push
push
call
call
mov
test
je
andl
call
jmp
xor
inc
ret
mov
movl
call
call
ret
push
call
pop
mov
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
push
push
call
xor
inc
mov
xor
cmp
jne
call
push
call
push
call
pop
pop
mov
lea
cmp
je
mov
jmp
push
call
pop
mov
cmp
jne
call
movl
xor
jmp
push
call
pop
mov
cmp
jne
push
push
call
pop
pop
test
jne
push
call
pop
call
movl
mov
jmp
mov
jmp
push
call
pop
movl
call
mov
call
ret
push
call
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
mov
mov
ret
push
lea
sub
mov
xor
mov
push
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
lea
mov
movl
mov
mov
push
mov
lea
push
push
call
lea
mov
lea
add
movl
mov
mov
call
push
mov
call
lea
push
call
test
jne
test
jne
push
call
pop
push
call
push
call
mov
xor
pop
call
add
leave
ret
push
mov
pushl
call
test
pop
je
pop
jmp
push
call
pop
pop
jmp
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
ret
mov
ret
add
push
pop
cmp
sbb
and
add
ret
call
test
jne
mov
ret
add
ret
push
push
push
push
push
pushl
call
pushl
mov
mov
call
mov
cmp
pop
pop
jb
mov
sub
lea
cmp
jb
push
call
mov
cmp
pop
jae
mov
cmp
jae
mov
add
cmp
jb
push
pushl
call
test
pop
pop
jne
lea
cmp
jb
push
pushl
call
test
pop
pop
je
sar
push
lea
call
pop
mov
pushl
call
mov
add
push
call
pop
mov
mov
pop
jmp
xor
pop
pop
pop
pop
pop
ret
push
push
push
call
mov
push
call
add
test
mov
mov
jne
push
pop
pop
ret
andl
xor
pop
ret
push
push
call
call
andl
pushl
call
pop
mov
movl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
push
xor
lea
pushl
call
add
cmp
pop
mov
jb
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmpw
je
xor
ret
mov
add
cmpl
jne
xor
cmpw
sete
mov
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
add
movzwl
push
push
movzwl
xor
test
push
lea
jbe
mov
mov
cmp
jb
mov
add
cmp
jb
add
add
cmp
jb
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
cmp
sete
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
ret
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
pop
cmp
jae
cmp
je
xor
ret
pushl
call
pop
ret
push
push
call
xor
mov
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
pushl
mov
call
mov
add
mov
jmp
mov
sub
je
sub
je
dec
je
call
movl
xor
push
push
push
push
push
call
add
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
movl
push
call
mov
pop
xor
cmpl
je
cmp
jne
push
call
cmp
je
push
call
pop
xor
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
movl
cmp
jne
mov
mov
mov
mov
add
cmp
jge
mov
imul
mov
mov
incl
jmp
call
mov
movl
call
cmp
jne
pushl
push
call
pop
jmp
mov
mov
cmpl
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
pushl
call
xor
inc
ret
push
push
call
xor
mov
pushl
call
pop
mov
cmp
jne
lea
push
call
pop
cmp
je
push
push
push
push
push
call
add
cmpl
je
push
call
cmp
je
push
push
call
mov
cmp
jne
mov
push
call
pop
mov
mov
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
cmp
sete
mov
ret
mov
cmpl
jne
push
call
andl
movl
mov
call
ret
mov
mov
ret
pushl
call
test
pop
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
push
mov
sub
push
push
push
call
xor
cmp
mov
mov
mov
mov
jne
push
call
mov
cmp
je
mov
push
push
call
cmp
je
push
call
movl
push
mov
call
push
call
movl
push
mov
call
push
call
mov
lea
push
call
test
pop
pop
je
push
push
push
push
push
call
add
cmpl
jne
push
push
call
push
call
cmp
pop
mov
je
push
push
call
push
call
pop
mov
mov
mov
cmp
je
cmp
je
push
call
pushl
mov
call
cmp
pop
pop
mov
je
cmp
je
call
cmp
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
lea
push
call
test
pop
je
push
push
push
push
push
call
add
cmpl
jb
orl
jmp
orl
jmp
mov
cmp
je
push
call
cmp
pop
je
call
cmp
mov
je
mov
cmp
je
push
call
cmp
pop
je
pushl
call
mov
pushl
call
cmp
pop
je
pushl
pushl
pushl
pushl
call
jmp
xor
pop
pop
pop
leave
ret
mov
push
xor
cmp
push
push
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
cmp
jne
mov
jmp
mov
cmp
je
inc
dec
jne
cmp
je
mov
mov
inc
inc
cmp
je
dec
jne
cmp
jne
mov
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
ret
push
mov
push
push
mov
xor
cmp
push
jne
cmp
jne
cmp
jne
xor
pop
pop
pop
pop
ret
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
cmpl
mov
jne
mov
mov
inc
inc
cmp
je
dec
jne
jmp
mov
mov
inc
inc
cmp
je
dec
je
decl
jne
cmp
jne
mov
cmp
jne
cmpl
jne
mov
push
mov
pop
jmp
mov
call
push
pop
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
mov
push
xor
cmp
push
push
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
cmp
jne
mov
jmp
mov
mov
mov
inc
inc
cmp
je
dec
jne
cmp
jne
mov
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
ret
mov
push
xor
cmp
jl
cmp
jle
cmp
jne
mov
pop
ret
mov
mov
pop
ret
call
push
push
push
push
push
movl
call
add
or
pop
ret
mov
test
push
mov
movb
jne
call
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
testb
jne
orl
movb
jmp
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
pushl
lea
call
movzbl
mov
mov
test
jne
cmpl
je
mov
mov
movzwl
and
jmp
xor
test
je
xor
inc
cmpb
je
mov
andl
leave
ret
push
push
pushl
push
call
add
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
push
push
mov
mov
push
xor
lea
push
push
call
mov
mov
mov
xor
lea
stos
stos
stos
mov
add
sub
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
pop
pop
ret
push
lea
sub
mov
xor
mov
push
push
lea
push
pushl
call
test
mov
je
xor
mov
inc
cmp
jb
mov
test
movb
je
lea
movzbl
movzbl
cmp
ja
sub
inc
push
lea
push
push
call
add
inc
mov
inc
test
jne
push
pushl
lea
pushl
push
push
lea
push
push
push
call
xor
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
xor
movzwl
test
je
orb
mov
jmp
test
je
orb
mov
mov
jmp
movb
inc
cmp
jb
jmp
lea
movl
xor
sub
mov
lea
add
lea
cmp
ja
orb
mov
add
jmp
cmp
ja
orb
mov
sub
mov
jmp
movb
inc
cmp
jb
mov
pop
xor
pop
call
add
leave
ret
push
push
call
call
mov
mov
test
je
cmpl
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
movl
call
jmp
mov
push
call
pop
ret
push
mov
sub
push
xor
push
lea
call
cmp
mov
jne
movl
call
cmp
je
mov
andl
jmp
cmp
jne
movl
call
jmp
cmp
jne
mov
mov
movl
jmp
cmp
je
mov
andl
mov
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
push
mov
push
call
mov
xor
cmp
mov
jne
mov
call
xor
jmp
mov
xor
cmp
je
incl
add
cmp
jb
cmp
je
cmp
je
movzwl
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
xor
inc
add
cmp
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
lea
push
push
call
mov
add
imul
mov
lea
mov
jmp
mov
test
je
movzbl
movzbl
jmp
mov
mov
or
movzbl
inc
cmp
jbe
mov
inc
inc
cmpb
jne
mov
incl
add
cmpl
mov
jb
mov
mov
movl
call
push
mov
lea
lea
pop
mov
inc
mov
inc
inc
inc
dec
jne
mov
call
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
lea
mov
orb
inc
dec
jne
mov
call
mov
mov
jmp
mov
xor
lea
stos
stos
stos
jmp
cmp
jne
or
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
orl
call
mov
mov
call
mov
mov
call
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
rep
andl
push
pushl
call
pop
pop
mov
test
jne
mov
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
mov
call
testb
jne
testb
jne
push
call
pop
andl
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
movl
call
jmp
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
movl
jmp
andl
mov
call
ret
cmpl
jne
push
call
pop
movl
xor
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
movl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
test
jne
call
mov
call
push
call
mov
pop
call
ret
push
push
xor
pushl
call
mov
test
pop
jne
cmp
jbe
push
call
lea
cmp
jbe
or
cmp
mov
jne
mov
pop
pop
ret
push
push
xor
push
pushl
pushl
call
mov
add
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
cmp
mov
jne
mov
pop
pop
ret
push
push
xor
pushl
pushl
call
mov
test
pop
pop
jne
cmp
je
cmp
jbe
push
call
lea
cmp
jbe
or
cmp
mov
jne
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmpl
je
push
push
and
and
cmp
pop
pop
jne
pop
pop
pop
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
sbb
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
jmp
inc
add
addl
enter
rolb
add
addl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
inc
add
inc
add
addb
addb
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
movsb
addb
addb
addb
inc
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
addl
addl
addl
addl
addl
addl
addl
addl
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
addl
addl
addl
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
push
push
push
mov
mov
xor
cmp
push
je
cmp
je
mov
cmp
je
cmp
jne
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
pushl
call
add
lea
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
lea
pop
cmpl
je
mov
cmp
je
cmp
jne
push
call
pop
cmp
je
mov
cmp
je
cmp
jne
push
call
pop
add
dec
jne
push
call
pop
pop
pop
pop
pop
ret
push
push
push
mov
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
push
lea
pop
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
dec
jne
mov
add
push
call
pop
pop
pop
pop
ret
push
mov
test
je
push
push
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
push
lea
pop
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
dec
jne
mov
add
push
call
pop
pop
pop
mov
pop
ret
test
je
test
je
push
mov
cmp
je
push
mov
call
test
pop
je
push
call
cmpl
pop
jne
cmp
je
push
call
pop
mov
pop
ret
xor
ret
push
push
call
call
mov
mov
test
je
cmpl
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
lea
mov
call
mov
movl
call
jmp
push
call
pop
mov
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
mov
imul
add
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
imul
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
push
mov
push
xor
cmp
jne
add
imul
push
pushl
push
pushl
call
cmp
jne
xor
jmp
addl
mov
mov
imul
add
push
push
pushl
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
add
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
imul
add
add
and
mov
sar
push
dec
cmp
push
push
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
jne
xor
jmp
push
call
pop
mov
mov
mov
cmpl
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
andl
mov
lea
mov
and
and
or
jne
incl
mov
add
jmp
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
add
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
cmp
jne
repz
jmp
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
push
lea
sub
mov
xor
mov
testb
push
je
push
call
pop
call
test
je
push
call
pop
testb
je
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
lea
mov
movl
mov
mov
push
mov
lea
push
push
call
lea
add
mov
lea
push
movl
mov
mov
call
lea
push
call
push
call
int3
andl
ret
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
test
jne
cmp
jb
cmpl
je
jmp
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
push
call
xor
mov
xor
cmp
setne
cmp
jne
call
movl
push
push
push
push
push
call
add
or
jmp
cmpl
jne
push
call
pop
mov
push
call
pop
mov
cmp
je
mov
sub
mov
jmp
mov
movl
call
cmp
jne
push
push
pushl
call
mov
mov
call
ret
xor
mov
mov
push
call
pop
ret
push
call
pop
ret
mov
test
je
sub
cmpl
jne
push
call
pop
ret
push
mov
sub
mov
xor
mov
push
push
xor
cmp
push
mov
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
mov
sub
dec
cmp
jge
inc
mov
mov
cmp
je
cmp
je
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
cmp
je
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
cmp
pop
je
movl
add
mov
jmp
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
mov
push
push
push
pushl
pushl
pushl
call
mov
cmp
mov
je
testw
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
cmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
add
jmp
push
call
cmp
pop
je
movl
add
mov
jmp
xor
cmp
je
pushl
push
push
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
pushl
push
push
pushl
call
mov
push
call
pop
pushl
call
mov
pop
jmp
cmp
mov
mov
jne
mov
mov
mov
cmp
jne
mov
mov
mov
pushl
call
cmp
pop
mov
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
cmp
mov
je
mov
push
push
pushl
push
pushl
pushl
call
cmp
mov
jne
xor
jmp
jle
cmp
ja
add
cmp
ja
call
mov
cmp
je
movl
add
jmp
push
call
cmp
pop
je
movl
add
mov
jmp
xor
cmp
je
pushl
push
push
call
add
pushl
push
pushl
pushl
pushl
pushl
call
cmp
mov
jne
xor
jmp
pushl
lea
pushl
push
push
pushl
pushl
call
mov
mov
add
neg
sbb
and
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
cmp
je
cmp
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
cmpb
je
mov
andl
leave
ret
push
mov
push
push
mov
xor
mov
mov
push
push
xor
cmp
push
mov
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
je
cmp
je
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
cmp
je
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
cmp
pop
je
movl
add
mov
test
je
lea
push
push
push
call
add
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
push
call
mov
pop
jmp
xor
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
pushl
call
cmp
pop
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
mov
add
cmp
je
mov
pushl
pushl
pushl
pushl
pushl
call
cmp
mov
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
pushl
call
add
cmpb
je
mov
andl
leave
ret
push
push
call
andl
mov
cmp
ja
push
call
pop
andl
push
call
pop
mov
movl
call
mov
call
ret
push
call
pop
ret
push
mov
cmp
ja
push
mov
push
push
xor
cmp
mov
jne
call
push
call
push
call
pop
pop
mov
cmp
jne
cmp
je
mov
jmp
xor
inc
push
jmp
cmp
jne
push
call
cmp
pop
jne
cmp
jne
xor
inc
add
and
push
push
pushl
call
mov
test
jne
cmp
push
pop
je
push
call
test
pop
jne
jmp
call
mov
call
mov
pop
mov
pop
pop
pop
ret
push
call
pop
call
movl
xor
pop
ret
push
push
call
mov
xor
cmp
jbe
push
pop
xor
div
cmp
sbb
inc
jne
call
movl
push
push
push
push
push
call
add
xor
jmp
imul
mov
mov
cmp
jne
xor
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
mov
pushl
call
pop
mov
movl
call
mov
cmp
je
pushl
push
push
call
add
cmp
jne
push
push
pushl
call
mov
cmp
jne
cmp
je
push
call
pop
test
jne
mov
cmp
je
movl
jmp
xor
mov
push
call
pop
ret
cmp
jne
mov
cmp
je
movl
mov
call
ret
push
push
call
mov
test
jne
pushl
call
pop
jmp
mov
test
jne
push
call
pop
jmp
cmpl
jne
xor
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
movl
call
cmpl
jne
test
jne
inc
add
and
mov
push
push
push
pushl
call
mov
jmp
mov
mov
push
call
pop
ret
mov
test
jne
cmp
je
push
call
pop
test
jne
call
cmp
jne
mov
call
push
call
pop
mov
jmp
test
jne
call
cmp
je
movl
jmp
test
jne
inc
push
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
movl
xor
call
ret
call
jmp
test
jne
call
mov
call
push
call
mov
pop
mov
jmp
push
mov
sub
mov
mov
mov
mov
mov
shr
jmp
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
mov
mov
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
cltd
mov
mov
xor
sub
and
xor
sub
cltd
mov
xor
sub
and
xor
sub
mov
or
jne
mov
mov
and
mov
cmp
je
sub
push
push
push
call
add
mov
mov
test
je
mov
mov
add
sub
mov
add
sub
mov
mov
mov
mov
rep
mov
jmp
cmp
jne
neg
add
mov
mov
mov
mov
rep
mov
add
mov
add
mov
sub
push
push
push
call
add
mov
jmp
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
mov
mov
pop
ret
andl
call
mov
xor
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
ret
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
ret
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmpl
je
push
push
and
and
cmp
pop
pop
jne
pop
pop
pop
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
dec
movsl
inc
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
sbb
inc
add
cmpsb
inc
add
movsl
inc
add
movsl
inc
add
movsl
inc
add
movsl
inc
add
movsl
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
aam
inc
add
cmpsb
inc
add
cmpsl
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
inc
add
add
inc
add
inc
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
shlb
inc
add
cmpsl
inc
add
cmpsl
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
pushl
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
lea
mov
mov
mov
cmpl
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
push
mov
sub
mov
mov
mov
shr
pxor
jmp
lea
nop
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
mov
mov
pop
ret
push
mov
sub
mov
mov
cltd
mov
xor
sub
and
xor
sub
test
jne
mov
mov
and
mov
cmp
je
sub
push
push
call
add
mov
mov
test
je
add
sub
mov
xor
mov
mov
rep
mov
jmp
neg
add
mov
xor
mov
mov
rep
mov
mov
mov
add
sub
push
push
push
call
add
mov
mov
mov
pop
ret
push
mov
sub
push
pushl
lea
call
mov
lea
cmp
ja
mov
mov
movzwl
jmp
mov
sarl
lea
push
mov
and
push
call
test
pop
pop
je
mov
push
mov
mov
movb
pop
jmp
xor
mov
movb
inc
mov
push
pushl
pushl
lea
push
push
lea
push
lea
push
push
call
add
test
jne
cmp
je
mov
andl
xor
jmp
movzwl
and
cmpb
je
mov
andl
pop
leave
ret
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
push
mov
sub
mov
xor
mov
push
lea
push
push
pushl
movb
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
push
mov
mov
push
mov
mov
push
xor
cmp
mov
mov
mov
je
mov
lea
push
push
call
test
mov
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
mov
cmp
movl
jne
pushl
call
mov
pop
inc
cmp
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
push
pushl
pushl
push
pushl
call
mov
cmp
jne
xor
jmp
push
call
cmp
pop
je
movl
add
mov
jmp
mov
cmp
je
lea
push
push
pushl
call
add
push
pushl
pushl
pushl
push
pushl
call
test
je
mov
cmp
je
push
push
pushl
push
push
pushl
push
pushl
call
test
je
mov
jmp
cmp
mov
jne
push
push
push
push
push
pushl
push
pushl
call
mov
cmp
je
push
push
call
cmp
pop
pop
mov
je
push
push
push
push
push
pushl
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
pushl
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
push
call
andl
movapd
movl
jmp
mov
mov
mov
cmp
je
cmp
je
xor
ret
xor
inc
ret
mov
andl
movl
mov
call
ret
push
mov
sub
xor
push
mov
mov
mov
push
pushf
pop
mov
xor
push
popf
pushf
pop
sub
je
push
popf
xor
cpuid
mov
mov
mov
mov
mov
cpuid
mov
mov
pop
testl
je
call
test
je
xor
inc
jmp
xor
pop
leave
ret
call
mov
xor
ret
push
mov
sub
pushl
lea
call
movzbl
mov
mov
movzwl
and
cmpb
je
mov
andl
leave
ret
push
push
pushl
call
add
ret
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
push
mov
sub
push
push
pushl
lea
call
mov
mov
xor
cmp
je
mov
cmp
jne
call
push
push
push
push
push
movl
call
add
cmpb
je
mov
andl
xor
jmp
cmp
je
cmpl
jl
cmpl
jg
mov
push
mov
mov
lea
cmpl
jle
lea
push
movzbl
push
push
call
mov
add
jmp
mov
movzbl
movzbl
and
test
je
mov
inc
jmp
cmp
jne
orl
jmp
cmp
jne
mov
inc
mov
test
jl
cmp
je
cmp
jg
test
jne
cmp
je
movl
jmp
mov
cmp
je
cmp
je
movl
jmp
movl
jmp
cmp
jne
cmp
jne
mov
cmp
je
cmp
jne
inc
mov
inc
mov
or
xor
divl
movzbl
movzwl
test
je
movsbl
sub
jmp
test
je
mov
sub
cmp
movsbl
ja
sub
add
cmp
jae
orl
cmp
jb
jne
cmp
jbe
orl
cmpl
jne
mov
dec
test
jne
cmpl
je
mov
andl
jmp
mov
imul
add
mov
mov
inc
jmp
test
mov
jne
test
jne
and
je
cmpl
ja
test
jne
cmp
jbe
call
testb
movl
je
orl
jmp
mov
and
neg
sbb
neg
add
mov
mov
test
je
mov
testb
je
negl
cmpb
je
mov
andl
mov
jmp
mov
test
je
mov
cmpb
je
mov
andl
xor
pop
pop
pop
leave
ret
push
mov
xor
cmp
push
pushl
pushl
pushl
jne
push
jmp
push
call
add
pop
ret
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
int3
int3
int3
int3
incl
add
add
add
add
jmp
push
inc
add
ljmp
inc
add
inc
add
incl
add
add
incl
add
add
incl
add
add
push
inc
add
add
add
incl
add
add
add
call
pusha
inc
add
pusha
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
incl
add
add
inc
add
incl
add
add
incl
add
add
decl
inc
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
imul
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
stc
outsl
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
jno
add
add
add
incl
add
add
incl
add
add
jmp
jae
add
add
add
incl
add
add
incl
add
add
incl
add
add
jnp
add
add
add
incl
add
add
incl
add
add
incl
add
add
jle
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
xchg
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
sahf
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
add
incl
add
add
incl
add
add
pushl
scas
inc
add
inc
add
mov
add
mov
add
sbb
add
add
add
idivb
add
mov
add
add
add
add
adc
add
add
add
add
repnz
add
js
add
pusha
mov
add
dec
mov
add
xor
add
mov
add
mov
add
add
je
add
mov
add
scas
mov
add
fidivrl
add
add
add
push
mov
add
scas
rolb
pushf
rolb
xchg
add
jp
add
outsb
rolb
pusha
rolb
push
rolb
dec
rolb
rolb
sub
add
and
add
adc
add
clc
mov
add
aam
add
inc
mov
add
es
add
clc
mov
add
mov
add
mov
rolb
test
add
mov
mov
add
je
add
pop
mov
add
mov
add
and
add
xor
add
inc
mov
add
fs
add
xchg
mov
add
scas
mov
add
aam
add
out
mov
add
and
add
inc
mov
add
jb
add
cmpb
add
mov
add
lret
add
mov
add
or
add
es
add
add
add
push
mov
add
cmp
add
bound
add
out
add
aam
add
sarb
add
mov
add
jb
add
push
add
pop
mov
add
ss
add
push
mov
add
out
mov
add
into
mov
add
scas
mov
add
mov
add
ret
add
mov
add
je
add
lods
mov
add
ljmp
jb
imul
xor
dec
jae
popa
fs
gs
fs
je
add
xchg
dec
jo
outsb
push
jb
arpl
jae
out
add
jne
push
jb
arpl
outsb
inc
popa
arpl
add
jne
inc
imul
gs
outsl
arpl
gs
outsb
outsw
push
add
movsb
add
gs
push
gs
outsl
jb
popa
outsb
arpl
jb
jno
outsb
arpl
incl
inc
insb
outsl
bound
inc
jb
add
clc
add
outsl
bound
inc
insb
insb
outsl
arpl
or
inc
insb
outsl
bound
push
outsb
insb
outsl
arpl
add
add
je
jbe
outsb
je
add
je
outsl
jb
imul
push
arpl
add
je
jne
jb
outsb
je
jb
arpl
jae
add
je
gs
jo
popa
je
push
add
popa
add
je
imul
bound
gs
add
sbb
push
gs
imul
bound
gs
add
inc
add
je
jne
jb
outsb
je
push
dec
add
adc
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
push
add
fs
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
dec
add
je
jb
jo
add
pop
add
gs
je
dec
outsb
jne
add
add
imul
outsb
outsl
ja
gs
popa
addr16
add
loope
inc
js
je
imul
js
mov
push
outsb
jb
imul
je
gs
add
add
outsb
outsl
ja
jb
insl
push
outsl
imul
gs
gs
jae
inc
popa
jo
jne
add
mov
jo
je
push
popa
addr16
add
stos
add
outsb
jae
popa
je
dec
gs
popa
add
mov
fs
arpl
inc
add
add
je
gs
popa
addr16
add
add
insb
insb
push
imul
outsl
arpl
or
inc
jo
outsb
fs
outsb
jne
add
add
je
arpl
gs
imul
add
je
jns
inc
outsl
insb
outsl
jb
jb
jae
add
pop
add
imul
popa
jae
inc
js
add
or
inc
gs
jne
jae
jb
outsl
jae
add
imul
jne
dec
outsb
jne
add
inc
jb
popa
je
push
imul
inc
add
inc
gs
inc
add
add
insb
gs
jae
inc
inc
add
add
outsb
fs
imul
testl
insb
popa
jae
dec
outsb
outsw
inc
js
add
inc
gs
gs
popa
addr16
outsl
jae
outsb
add
je
imul
outsb
addr16
add
repnz
je
jae
outsb
arpl
jns
je
je
add
popl
inc
gs
imul
outsl
arpl
add
add
je
insb
popa
jae
dec
popa
insl
gs
add
inc
push
xor
cs
insb
add
dec
add
popa
jb
push
popa
add
push
je
jb
inc
outsl
arpl
cmp
inc
jb
popa
je
inc
outsl
outsb
je
outsb
imul
fldl
inc
js
push
gs
dec
jne
inc
add
add
jbe
inc
inc
add
add
push
gs
outsl
jb
inc
inc
add
add
arpl
insb
add
jb
popa
je
push
arpl
outsb
dec
outsb
imul
add
gs
je
push
outsl
insb
imul
add
inc
jb
popa
je
push
popa
je
gs
inc
jb
jae
add
inc
inc
dec
xor
cs
insb
add
add
inc
inc
fs
jae
push
outsl
push
je
imul
push
push
inc
inc
jb
popa
je
inc
jbe
outsb
je
add
add
inc
inc
outsl
outsb
outsb
arpl
adc
push
push
inc
inc
insb
outsl
jae
inc
jbe
outsb
je
push
push
xor
xor
fs
insb
add
lret
gs
jns
je
insl
push
imul
insb
gs
imul
gs
jo
jb
add
jmp
push
gs
imul
adc
dec
gs
jo
insb
insb
outsl
arpl
mov
push
jb
arpl
jae
gs
jo
add
push
je
jb
jne
dec
outsb
outsw
inc
add
push
gs
outsb
push
gs
js
gs
imul
gs
mov
push
jb
arpl
fs
jae
add
mov
je
jb
arpl
jae
movsb
add
imul
mov
push
je
dec
popa
outsb
fs
add
jge
inc
gs
outsl
fs
gs
imul
add
testb
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
fs
push
dec
jne
je
inc
jns
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
and
push
gs
popa
outsb
fs
gs
outsl
jne
je
add
inc
gs
imul
addl
je
inc
jb
je
arpl
push
arpl
outsb
add
push
insb
jae
gs
popa
insb
jne
add
push
insb
jae
insb
insb
outsl
arpl
add
push
insb
jae
gs
popa
insb
jne
add
insb
jae
jb
add
dec
outsb
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
dec
gs
jo
gs
jb
jns
adc
dec
gs
jo
jb
popa
je
add
addl
imul
jb
add
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
filds
inc
gs
imul
je
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
cwtl
add
je
jb
jb
je
arpl
push
arpl
outsb
add
pop
add
insl
imul
outsl
arpl
jae
add
push
outsb
push
gs
js
gs
imul
gs
add
add
inc
bound
addr16
jb
jae
outsb
je
push
add
fs
imul
add
and
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
inc
gs
push
dec
outsb
outsw
add
add
je
inc
push
add
xchg
add
je
inc
dec
inc
push
add
aas
add
push
popa
insb
imul
add
push
insb
gs
addl
jne
insb
inc
insb
insb
outsl
arpl
add
add
popa
jo
gs
insb
insb
outsl
arpl
xlat
add
insb
push
outsb
ja
outsb
add
dec
gs
jo
imul
dec
jne
je
inc
jns
gs
outsl
push
imul
je
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
inc
add
popa
jo
je
imul
add
popa
jo
je
imul
add
je
je
imul
inc
add
mov
push
je
imul
push
dec
inc
cmp
shrb
jne
lret
inc
sbb
shl
or
jnp
dec
xchg
andl
fdiv
pop
es
mov
add
xor
inc
daa
mov
loopne
loopne
aad
mov
outsl
aam
test
lahf
rol
imul
mov
std
daa
jmp
dec
mov
data16
xchg
out
mov
push
xchg
mov
mov
pop
lahf
xchg
rolb
lds
rolb
aam
push
je
test
or
inc
sbb
xchg
add
lahf
jno
or
ja
push
into
pushf
dec
ljmp
out
xchg
add
enter
sub
int
jo
jo
lret
aad
js
mov
cmc
fsubl
push
xchg
sub
ja
mov
push
cmc
push
mov
out
mov
xchg
add
dec
es
test
mov
cltd
enter
mov
cli
stc
xchg
pop
addr16
inc
js
rcrb
adc
lahf
out
mov
inc
push
xor
test
lahf
lods
out
pushf
lahf
mov
pop
fucomi
push
scas
xchg
nop
ret
xchg
test
xchg
pushf
cld
jne
mov
cwtl
fldenv
je
xchg
push
mov
mov
add
mov
add
or
mov
push
int3
fwait
mov
jo
add
nop
fadd
cmp
xchg
daa
cltd
sarb
inc
out
mov
jbe
push
and
in
xor
and
jns
pushf
js
sub
push
jecxz
insl
lock
mov
ficoms
add
push
xchg
jnp
movb
sub
mov
insl
jnp
sbb
xor
cmc
js
adc
lcall
jmp
xorb
jnp
push
jg
je
subl
adc
lods
and
in
arpl
shll
out
xor
fwait
or
mov
add
pop
fistpll
sub
sub
fcom
fcomi
pop
adc
xchg
jp
es
push
mov
pop
add
xor
push
in
fisubrs
call
fcmove
adc
push
daa
mov
jp
into
xorl
sub
mov
pop
mov
cmp
push
subl
mov
mov
repz
mov
mov
xor
mov
add
fsts
enter
xchg
jp
mov
andb
movsb
andb
enter
dec
lea
xor
sbb
lods
cmp
pushf
loopne
movsb
pushf
mov
addr16
das
mov
lds
cmp
sub
pop
cltd
cmp
aas
mov
xchg
fsubrs
aam
push
test
insb
jp
or
push
out
jmp
fcomp
outsb
mul
inc
sub
mov
lcall
ss
pop
sub
sub
push
cmp
sbb
inc
mov
sbb
dec
mov
jno
fcmove
sbb
add
dec
call
pop
fmul
enter
test
xchg
test
jl
repz
mov
dec
xor
scas
mov
push
call
cmp
or
or
jne
lock
or
jnp
adc
pop
sub
sbb
jge
xchg
out
cmp
in
mov
in
pop
jg
fidivl
ds
dec
aas
in
addl
iret
int3
ljmp
add
add
es
pushf
jle
addb
out
mov
cmp
mov
mov
or
sbb
push
push
pop
imul
pop
popf
call
call
add
cmp
and
pop
lods
cld
icebp
adc
and
sbb
pop
sbb
push
mov
cmc
mov
loopne
fcoml
loopne
lahf
sahf
enter
lods
mov
xchg
mov
call
call
call
add
and
mov
js
dec
cmpsb
adc
lods
push
daa
sbb
xchg
and
imul
sbb
jl
pop
inc
rcll
fwait
in
popa
xorl
or
cmp
add
rorl
jbe
pop
pop
stos
sub
in
enter
pop
xchg
add
cmc
sbb
xor
add
dec
mov
push
ja
jge
jg
adc
xchg
scas
std
adc
mov
shl
into
xlat
add
imul
in
and
xlat
cmpsl
jmp
pop
sti
push
fidivs
repnz
nop
add
or
inc
mov
cmp
add
pusha
push
xlat
inc
stos
loop
jge
adc
inc
rcrl
ja
lcall
cmpsb
or
jge
add
sub
in
or
sub
push
pushf
aam
je
call
addr16
sub
lret
fistps
loopne
jecxz
mov
adc
sbb
in
add
add
add
ds
sub
xor
jne,pn
sub
push
lds
add
clc
push
sbb
xor
popa
sbb
pop
cmp
ret
adc
add
add
call
call
call
stc
hlt
xchg
fcmovu
cmp
inc
hlt
pusha
dec
stos
imulb
cmpsl
les
sbb
sub
mov
cmp
jne
push
lock
fmull
mov
aas
push
jnp
and
orl
add
and
mov
test
insb
jb
aaa
and
out
aaa
sub
or
add
add
mov
push
sub
jle
lea
jp
sbb
jae
jo
pop
mov
sub
outsb
fistps
or
dec
sti
mov
lret
mov
out
jp
xor
mov
cmp
adc
xchg
cmp
call
jle
push
push
mov
mov
add
add
das
repnz
push
push
inc
cmp
jmp
and
jle
pop
push
pop
xchg
pop
xor
jns
jae
and
jp
push
aas
roll
push
cmp
dec
pavgw
and
pop
cs
sub
adc
add
shll
sub
mov
jne,pn
adcl
adc
jge
insl
mov
inc
mov
jbe
mov
mov
add
add
add
push
shrb
test
les
add
aad
push
cmp
iret
fistpll
add
adc
xor
mov
inc
and
mov
test
dec
sub
adc
mov
pusha
shll
inc
popf
xchg
popa
pusha
js
ret
rcrb
jo
stos
jnp
add
jge
mov
cmp
cmp
scas
inc
mov
lea
insl
mov
shrb
dec
bswap
addl
jl
enter
cmp
inc
add
mov
push
sbb
pop
adc
cmp
dec
lea
jl
aad
repz
out
cmp
dec
xchg
add
add
add
add
jbe
enter
lock
lds
lods
mov
or
mov
mov
ret
call
call
call
rclb
or
sbb
cmp
or
stos
out
insb
rol
or
orb
push
cs
sub
lock
ja
bound
mov
mov
aad
lods
imul
add
add
add
add
pop
loop
or
inc
jmp
call
stc
pop
pop
dec
jmp
punpckhdq
add
sub
call
adc
enter
cmpsb
push
inc
dec
test
pop
mov
arpl
jbe
addb
add
add
add
add
jecxz
or
add
add
add
aas
movsl
test
push
xchg
inc
dec
fcoms
addr16
cmc
fwait
and
lock
test
push
das
lods
sub
shlb
jo
stos
xchg
mov
push
outsb
jmp
jb
push
and
add
add
add
add
sarl
xchg
mov
mov
test
push
sub
dec
insb
adc
and
pusha
repnz
jge
mov
push
pop
jno
insb
jl
outsb
and
test
push
jp
sbb
int3
lahf
jbe,pn
add
dec
aam
mov
mov
mov
test
xor
loopne
fisttpll
add
cmpxchg
jnp
ret
mov
test
lret
sysexit
cs
push
jmp
inc
adc
push
call
call
cmpsb
lods
bound
in
es
sbb
popf
mov
inc
mov
push
clc
stc
jo
int3
outsb
mov
call
or
mov
cmpsl
xor
rclb
lahf
ret
push
xchg
pop
addb
add
jnp,pn
in
inc
cmp
mov
insl
mov
add
add
add
add
sub
call
call
rol
inc
pushf
dec
cli
adc
pop
mov
lods
push
add
cmp
cmpsl
aaa
test
rolb
add
add
add
mov
roll
and
push
dec
jl
stc
clc
test
cmp
mov
push
xchg
add
and
pop
cmp
or
pop
sbb
mov
cld
pop
aam
ficomps
push
add
jg
outsb
es
je
scas
and
ret
enter
ret
jnp
call
call
and
test
or
dec
out
cld
jo
adc
xchg
push
cmp
testl
add
xlat
movsl
in
xor
inc
push
inc
leave
mov
lret
mov
int3
xchg
lods
dec
xor
pop
mov
sbb
adc
dec
ja
push
mov
mov
push
gs
pcmpeqd
cwtd
jmp
sub
sub
cli
pop
icebp
mov
or
push
xchg
int
xchg
aas
xchg
cmc
sub
aad
xor
cmp
iret
push
xchg
fistl
pop
sbb
mov
outsb
pusha
lods
leave
xchg
or
cmp
lahf
int
sahf
mov
repz
or
push
add
push
lret
and
dec
inc
subl
add
notl
and
mov
add
add
adc
inc
xor
xor
and
loope
les
push
popa
imul
mov
fdivl
test
mov
call
dec
adc
sbb
mov
sub
jmp
mov
jno
add
pop
notl
or
mov
aas
div
insb
das
mov
and
add
popf
gs
or
call
call
call
xchg
or
xor
sbb
pop
mov
sbb
mov
add
add
add
add
mov
xlat
lcall
mov
aaa
add
pop
sub
add
js
or
pop
clc
cld
push
lret
fists
out
pushf
mov
and
movsl
add
add
add
add
push
movsl
push
dec
jge
dec
mov
int3
out
or
or
imul
inc
xor
notl
add
mov
or
xor
mov
xchg
dec
cmp
test
in
ss
add
add
add
add
push
daa
aaa
pop
sub
xchg
imul
mov
cs
aam
das
lds
outsl
cmp
sti
xchg
push
mov
out
cld
add
lock
push
mov
cmp
cmpsl
mov
xchg
call
pop
add
xchg
jle
testb
lahf
inc
jne
cmp
jle
inc
add
xor
mov
fs
cmpsb
sbb
push
jo
mov
xlat
movsb
bound
add
add
pop
jl,pn
cmpb
push
jbe
test
jle
jbe
push
push
stc
jecxz
xchg
dec
fmull
add
sub
cli
daa
or
fcomi
lcall
add
add
sub
add
mov
add
and
and
fcmovbe
or
ffree
lods
in
into
divl
push
movsl
sub
jbe
cmp
sahf
jnp
cmpsl
pop
fidivl
mov
sti
sub
sub
push
pop
pop
xor
lret
or
or
insl
pop
mov
mov
or
pop
push
mov
in
lcall
mov
cmp
or
add
add
test
cmp
jb
inc
mov
loopne
mov
sbb
in
push
add
shl
cmp
stc
mov
mov
lods
test
xchg
add
mov
xor
movsb
xor
fldenv
cmp
lcall
popa
nop
mov
insb
jne
sbb
sub
orl
cmpsb
stc
add
es
ds
cltd
mov
sbb
call
call
call
add
add
mov
jb
dec
nop
add
outsl
fbstp
iret
lods
lret
jge
nop
shlb
or
mov
ljmp
scas
push
pusha
adc
jmp
dec
loop
xor
jle
jl
sti
inc
mov
add
stos
pop
push
cld
jp
addb
xchg
int3
fsubl
xlat
popa
inc
out
inc
lahf
lods
cmpsl
and
ja
pop
test
sbb
imul
mov
lcall
add
sbb
mov
sub
ret
jne
int3
mov
call
xchg
cmp
jmp
roll
sbb
jmp
cli
pop
inc
sti
test
push
mov
xchg
pop
add
out
pop
push
loope
lret
pop
adc
sub
cmp
and
mov
sbb
push
jo
or
mov
pop
push
mov
xchg
fsub
repz
pop
lret
sti
nop
enter
pop
idivb
psrlq
sbb
cld
sahf
insb
cmp
mov
mov
push
or
adc
inc
dec
mov
adc
jae
cmp
call
jb
mov
mov
mov
sub
fidivrs
add
add
leave
ss
or
sbb
mov
xor
imul
sub
xor
cmp
push
inc
adc
xchg
outsl
daa
in
mulb
scas
and
jne
cmp
pop
push
call
jecxz
shll
add
fnstcw
ret
add
hlt
popf
pop
fcomps
inc
hlt
out
out
lea
insb
shr
sarl
adc
push
not
pop
addb
dec
push
sbb
andb
je
or
lea
dec
pop
jl
cwtl
jle
mov
vphsubbw
add
mov
add
add
ja
ror
push
push
or
test
ss
dec
pop
imulb
mov
inc
sbb
mov
roll
loop
pushf
xchg
push
shrl
pop
cli
mov
jmp
jg
rcr
pop
call
call
call
and
sti
aas
pop
daa
jno
sub
xchg
jno
mov
sbb
add
and
fcoms
ror
cld
push
inc
aam
test
xor
test
jp
sbb
jno
cmp
or
pop
adc
call
xor
cmp
stos
dec
dec
mov
dec
pop
stos
push
jb
es
ret
push
jl
dec
mov
add
addb
fidivl
cwtl
arpl
dec
sbb
and
shrl
and
add
rclb
jge
lret
sbb
rcll
mov
push
dec
int3
stos
or
rcll
sbb
lcall
pop
push
dec
pop
xor
add
add
add
jbe
adc
inc
xor
mov
lods
or
add
addr16
in
cmp
out
jle
add
lock
je
stos
pop
sahf
out
inc
rcll
out
and
mov
mov
test
loopne
fldl
and
arpl
sarb
pop
aaa
or
xor
add
add
mov
jl
inc
test
sbbl
lcall
dec
psubq
and
mov
add
add
add
mov
hlt
nop
test
jmp
cmc
dec
ds
cmp
sub
push
in
lods
push
push
jl
sar
sub
push
mov
mov
mov
mov
cmp
js
push
jne
and
push
in
adc
cwtl
stc
outsl
or
mov
lock
repz
mov
call
call
call
add
add
add
shlb
xor
sahf
out
call
call
rcrb
data16
pop
sar
inc
fimuls
add
dec
inc
stc
jne
mov
and
dec
ss
mov
movsb
dec
adc
push
lods
sbb
and
sar
dec
icebp
clc
jmp
dec
mov
add
adc
jns
dec
cmp
dec
jne
call
call
outsl
jo
popf
addr16
test
lock
mov
cmp
fld
popa
inc
int3
fwait
inc
icebp
and
aas
xor
sub
sub
test
sbb
xchg
test
aad
out
repnz
sub
mov
xor
mov
add
add
add
add
push
test
das
jge
adc
pushf
addr16
lea
push
mov
push
pop
or
jno
sub
lods
sahf
mov
lcall
cltd
push
add
cmp
std
jmp
dec
inc
sahf
repz
ret
fs
rcrl
push
adc
outsl
dec
cld
add
jo
cmp
xlat
xor
dec
and
dec
add
pop
mov
jb
xchg
dec
mov
fmull
sbb
push
addl
sahf
push
and
mov
push
sarb
sti
cmp
inc
jmp
inc
fbld
inc
call
jmp
movsb
pop
out
xchg
xor
add
add
cli
inc
or
call
pcmpeqd
push
jne
adc
in
arpl
add
jmp
cmp
and
xlat
jae
push
push
xchg
cmp
xchg
xchg
fdivs
pop
cld
dec
push
pop
ret
subb
jge
cmpsb
xor
inc
jmp
push
cmp
es
rcrb
add
hlt
movsb
sbb
mov
cmp
mov
lods
stc
in
inc
sbb
xlat
das
faddl
sbb
jge
jmp
andl
addr16
sbb
push
daa
and
ret
adcl
mov
xor
pop
es
cmpl
dec
aas
sub
xchg
and
mov
js
sub
dec
xchg
xor
xor
fiadds
add
out
daa
out
inc
sub
sub
and
outsl
push
outsb
sahf
cltd
rcrl
cmpsl
adc
pop
sbb
add
xor
xchg
push
mov
add
adc
mov
xor
pop
fsubl
cmpsb
jecxz
mov
dec
cmp
sub
sub
or
jae
movsl
adc
sub
loopne
mov
pop
jl
xchg
ljmp
pop
add
mov
pop
movl
add
in
loop
mov
sub
mov
add
fiaddl
andb
mov
shlb
mov
rcr
sub
sti
sub
dec
sbb
add
pop
push
cltd
mov
sbbb
add
jl
les
arpl
and
dec
aaa
adc
enter
je
push
hlt
in
push
popf
cmc
repz
and
jl
jmp
repnz
cmc
add
pop
dec
and
push
cmpsl
outsb
or
movsl
stos
pop
xchg
scas
hlt
test
mov
mov
or
out
loopne
adc
pop
in
cmp
into
add
add
add
pop
inc
mov
test
dec
ret
xor
sbb
faddl
imul
pop
push
mov
clc
push
sub
dec
cltd
jmp
arpl
cmpb
add
rcrl
js
xor
out
pushf
iret
dec
xor
pusha
mov
mov
mov
mov
sub
int
fwait
int
imul
jle
and
push
rclb
repz
mov
dec
stos
dec
std
ja
ljmp
cmc
jg
inc
dec
dec
rcl
call
call
call
add
add
add
add
test
jp
ror
push
call
or
inc
and
jne
cmpsl
adc
sar
ret
inc
test
inc
mov
cli
clc
mov
data16
std
icebp
add
add
mov
in
inc
mov
sahf
mov
insl
in
shrb
mov
mov
ss
mov
mov
jp
sub
fs
sub
nop
lods
ja
scas
fmul
in
stc
divl
fwait
in
out
scas
andb
jge
or
mov
cmc
lock
add
cmc
repnz
sbb
adc
cmp
test
xchg
mov
iret
xor
int3
inc
sub
rcl
scas
test
dec
int3
adcb
gs
movsb
mov
ljmp
mov
pop
cmp
inc
xor
cmp
shrb
or
je
mov
push
cwtl
or
sub
add
and
inc
pop
lahf
repnz
mov
out
jns
fldcw
cltd
gs
sub
movsb
mov
dec
pop
sar
bound
sbb
and
adcb
cmpsb
pop
adc
imul
or
hlt
pop
cmp
jnp
outsb
add
add
addr16
push
xchg
push
adc
push
inc
cmp
ret
jne
push
fidivl
idivb
add
int
inc
and
out
addb
add
pusha
fisttpl
mov
xchg
jns
mov
jecxz
mov
cwtl
mov
rcrl
aam
sbb
mov
sbb
dec
adc
add
imul
hlt
fisubs
mov
add
ljmp
or
cli
rcll
jl
add
add
add
add
aam
mov
pusha
xor
rolb
jns
adc
pop
call
call
push
or
fnstcw
inc
mov
and
mov
cs
and
testb
jecxz
pop
or
or
leave
test
mov
add
add
add
add
fwait
xor
insl
ret
xchg
nop
lods
dec
push
dec
sbb
in
adc
xchg
testl
or
pop
cmp
mov
test
rcrl
mov
jle
pusha
cmp
clc
mov
mov
shll
sti
in
and
add
mov
popf
clc
dec
ficomps
dec
idiv
mov
push
xchg
ljmp
lret
mov
pusha
adc
sti
mov
call
call
popf
sub
fldcw
std
ljmp
imul
add
add
add
lds
frstor
dec
dec
mov
out
push
repnz
data16
fiadds
push
mov
dec
testb
addr16
clc
shrl
fwait
dec
daa
sbb
xor
mov
add
mov
pop
sti
xor
insl
push
dec
test
call
call
insl
popl
add
add
dec
jge
loope
and
cmp
mov
pusha
dec
sbb
imul
xlat
jae
lret
add
inc
mov
cmp
add
sbb
mov
enter
pop
jmp
xchg
leave
lods
mov
orb
sbb
mov
push
and
stos
inc
push
insb
out
dec
xchg
dec
adc
cmpb
imul
arpl
mov
mov
cmp
fs
pop
in
sbb
test
je
and
xchg
push
fnstsw
add
add
ucomiss
adc
adc
cmp
or
outsb
and
dec
pop
cld
push
inc
js
cld
xor
or
je
ljmp
data16
add
sub
or
fimuls
mov
fwait
mov
adc
mov
push
pop
add
cmpsl
stos
or
cmp
ljmp
add
add
add
add
sarl
lcall
je
in
shrl
bound
jnp
int3
mov
insb
repz
imul
nopl
aaa
mov
sbb
sar
lret
dec
sbb
add
add
add
add
cmp
outsb
mov
push
aas
sbb
inc
inc
je
into
ljmp
mov
call
int3
push
push
xor
loope
jb
add
add
add
xor
xchg
pmaddwd
repnz
sbb
fsubr
decb
cwtl
enter
or
xor
neg
ds
scas
mov
fistpl
xchg
jle
inc
push
jg
aaa
mov
lcall
push
mov
mov
scas
decb
mov
mov
jne
cld
sbb
add
add
sub
loopne
cli
outsb
xchg
fidivs
in
outsl
jge
cmp
and
push
xchg
cs
jae
inc
call
stos
xchg
cmp
dec
mov
daa
mov
cmpsl
lods
mov
mov
adc
inc
sbb
add
push
mov
sbb
cmp
adc
out
xor
or
push
mov
dec
adc
rclb
sub
pop
mov
add
test
sbb
dec
ljmp
add
and
xchg
subl
mov
add
push
xchg
push
xchg
arpl
sub
pop
mov
int3
je
or
outsl
nop
push
fcoms
iret
mov
sarl
push
sbb
add
add
inc
add
mov
dec
dec
or
pop
ret
ficomps
pop
push
loopne
xor
flds
shlb
add
fsubrs
fcmovnu
pop
mov
push
xor
pop
clc
or
inc
cwtl
mov
inc
outsl
xchg
add
add
ss
out
ljmp
mov
dec
popa
call
call
add
in
out
xor
sbb
fcomps
pop
adc
fimuls
pop
xchg
push
in
adc
out
mov
icebp
sbb
jmp
inc
xchg
and
push
add
add
dec
movsl
rol
mov
stos
idiv
adc
in
or
mov
xchg
sub
adc
popf
xchg
dec
out
das
lcall
shlb
aam
ret
std
inc
cs
add
cmp
in
sub
fldcw
sbb
xchg
pop
and
jo
jge
mov
xor
test
xchg
jmp
in
mov
xchg
add
add
add
add
mov
arpl
loope
pop
cmp
mov
pop
ficomps
rorb
mov
enter
icebp
xchg
fwait
sahf
jge
adc
add
repz
sbb
or
add
xchg
push
stc
mov
out
jb
pop
mov
fwait
jnp
mov
or
pop
mov
cld
scas
sub
aaa
push
mov
pop
test
jge
popa
stos
pop
mov
movsl
inc
xchg
xchg
sub
aaa
mov
push
push
and
mov
aam
cli
mov
sbb
loop
cmpsb
or
mov
mov
cmpb
lret
call
push
call
fbld
mov
insl
mov
sarb
xchg
mov
cld
call
call
sub
inc
xor
jmp
add
add
add
add
push
into
ficoml
add
adc
mov
int3
add
repz
push
add
jp
or
push
push
cmp
add
call
call
call
or
jmp
ds
jp
mov
lcall
add
pop
push
das
rcrb
xor
jns
push
scas
repnz
pop
mov
and
jecxz
add
add
add
add
cmp
sbb
rorl
jnp
clc
jns
inc
outsb
scas
in
mov
inc
lcall
mov
gs
iret
adc
add
add
lds
daa
pop
pusha
das
mov
loopne
pop
fisttpl
and
out
jle
sub
sub
inc
loope
jae
mov
ret
loop
fidivl
adc
adc
and
notl
inc
xchg
mov
mov
inc
setno
jbe
and
add
call
call
or
in
adc
lods
lds
arpl
push
ret
push
and
lret
pop
arpl
out
out
cmpxchg
or
xchg
pushf
xchg
sub
insb
ja
leave
ds
inc
loop
adc
dec
cmp
xchg
mov
dec
pop
sbb
adc
add
add
add
adc
cs
mov
out
jae
call
call
add
lods
xchg
addr16
cld
push
aam
mov
ja
ret
jmp
int3
mov
sbb
shrl
cmp
sbb
cmp
adc
fs
and
xor
jns
insb
lret
adc
aad
std
mov
imul
enter
add
add
and
lea
dec
jne
adc
xchg
mov
imul
mov
cmc
aas
and
push
ljmp
and
xorb
sbbl
add
mov
nop
lea
push
or
mov
inc
in
add
pop
div
mov
inc
icebp
push
loopne
in
ja
or
adc
loop
xchg
sbb
pop
dec
inc
cmp
add
scas
movlps
pop
sub
dec
ja
sbb
xor
sbb
add
sub
mov
shll
out
add
daa
inc
lods
pop
push
pop
loopne
add
push
push
adc
loope
dec
xchg
push
sbb
adc
call
call
call
push
popf
fstl
daa
aam
andl
subl
add
sbb
ss
ret
ret
inc
inc
or
aaa
pusha
cmp
pop
int
add
sbb
jp
jecxz
or
daa
and
jbe
std
inc
lds
dec
shlb
push
jmp
movsl
mov
ret
push
not
xchg
loope
jne
lret
shl
pushf
out
fwait
sbb
add
add
add
jne
nop
cmc
xchg
pop
and
outsl
loope
sbb
in
insl
pop
shlb
std
dec
int3
cmp
lods
push
add
ds
push
cmc
pop
test
outsb
and
decl
adc
or
movsl
test
div
add
add
add
add
inc
add
shrb
loopne
sub
add
add
add
xor
faddl
push
sbb
lahf
aad
shr
and
mov
add
add
or
cmp
popf
test
clc
cmc
xor
add
push
inc
jmp
mov
ljmp
sarb
les
cmp
add
xchg
add
lods
outsl
adc
clc
push
lea
mov
add
add
jge
popl
push
xchg
lods
aad
jecxz
call
call
insb
jge
repz
xchg
xor
jp
mov
cmp
cwtl
xor
jne
call
fisttps
daa
push
lock
push
lods
or
xor
cmpsb
sub
xchg
push
addl
and
out
xor
sarb
sarl
sub
add
insl
call
fildl
add
cmc
push
aam
push
mov
andl
sbb
push
stc
xor
movsl
jg
inc
xorl
add
inc
stos
pop
leave
and
jno,pt
add
pop
push
pop
outsb
push
out
ffree
mov
out
adc
inc
fidivl
jns
pop
xchg
adc
dec
ljmp
add
add
xorb
mov
push
xchg
pop
pop
pusha
lea
dec
popa
xchg
and
andl
jb
repz
clc
imul
stos
jo
xchg
inc
daa
test
enter
outsl
jne
fucomi
call
call
fs
aas
scas
xchg
or
into
pop
mov
xchg
loopw
push
add
add
add
mov
icebp
jge
sub
test
inc
sub
xor
fisubrs
mov
mov
fwait
jl
out
dec
cmp
sub
mov
pop
mov
add
sub
ror
int
fldt
jnp
inc
dec
dec
out
pop
in
push
and
pop
mov
bnd
rclb
sub
daa
aad
sbb
xchg
xor
faddl
dec
popf
imul
add
add
add
setge
jae
in
aas
sub
jnp
sahf
fs
adc
outsb
jg
xor
sub
or
or
adcl
add
add
in
insl
adc
mov
mov
dec
lea
cmp
call
xorb
mov
xlat
rcrl
fsubr
stc
mov
cmp
xchg
pushf
or
mov
or
pushf
mov
roll
add
sbb
pop
in
dec
aam
cmp
xchg
mov
sbb
rorb
cmpl
test
cmp
sahf
insl
test
ljmp
test
dec
sar
call
int3
push
dec
sahf
adc
incb
call
call
call
arpl
mov
mov
mov
int
push
sbb
mov
or
popa
mov
hlt
call
inc
jne
leave
popf
xor
pop
sbb
out
sub
sti
and
add
add
add
and
or
mov
lds
aaa
adc
call
call
call
mov
cmp
scas
pop
pop
data16
in
push
pop
sarb
jmp
pop
push
xor
cmp
push
je
pop
mov
xchg
mov
pop
arpl
mov
int3
loope
push
cld
cmp
std
out
add
add
add
add
add
add
add
add
add
lahf
lret
mov
adc
add
add
add
pop
jmp
lret
xor
mov
add
or
push
fldl
iret
stos
imul
repnz
xor
in
jg
vucomisd
dec
scas
xor
and
and
inc
dec
xor
adc
mov
shr
call
call
dec
adcl
sbb
add
es
cmp
pop
fiaddl
xchg
mov
cs
cmp
inc
add
movsl
std
rorb
xor
pop
mov
adc
std
call
xor
inc
jne
pop
mov
add
add
add
add
xor
call
call
pop
add
xchg
cmp
and
lods
rolb
cmc
mov
in
add
mov
mov
out
divb
xchg
xchg
cmp
pop
mov
aas
push
aam
sbb
inc
cmp
add
notl
xor
sbb
and
loopne
ficompl
cmp
mov
mov
mov
rorb
addr16
addl
add
add
call
call
call
and
push
mov
sub
fimuls
mov
or
mov
add
xchg
lock
pop
test
movsl
ja
mov
shlb
inc
ljmp
add
jne
or
cmp
xchg
adc
add
add
add
mov
rcr
sbb
xor
or
pop
push
lds
loopne
adc
hlt
sub
ret
cltd
enter
das
adc
xlat
out
ret
push
mov
mov
inc
push
imul
daa
push
imul
inc
jnp
add
sub
pop
int3
data16
mov
dec
int
inc
push
cmp
arpl
add
add
add
cwtl
int3
pop
and
lods
adc
cmp
nop
test
aam
pop
dec
cmpsl
dec
pushf
dec
iret
add
mov
mov
mov
add
mov
add
sti
sub
enter
mov
jg
mov
and
insb
and
and
shll
adc
mov
jns
dec
inc
mov
and
and
pop
xchg
orb
mov
es
sub
sbb
sarl
ds
and
add
push
jl
push
call
call
call
mov
adc
xchg
inc
xchg
lods
pop
sbb
dec
jmp
iret
loope
call
adc
add
andb
mov
fcmovnb
cmpsb
xchg
jl
inc
sbb
add
add
scas
sub
dec
sbb
add
cmp
repz
nop
test
sahf
loope
push
call
call
orb
push
orb
mov
lret
sbb
daa
jge
int
dec
push
scas
sbb
stos
stos
or
cld
enter
lea
sbb
fnsave
sbb
add
add
adc
test
push
iret
cli
mov
dec
addb
lret
outsl
imul
lcall
int3
xor
inc
rcrl
out
pop
or
imull
cwtl
andl
sbb
xchg
test
mov
pop
xor
sub
add
lcall
fwait
mov
cwtl
pop
ljmp
fildl
repz
out
pushf
lahf
fidivs
leave
dec
test
and
jae
jno
dec
xchg
xlat
mov
add
fwait
mov
adc
fstp
dec
rcll
mov
call
add
xchg
iret
loop
mov
es
mov
sbb
incl
in
pusha
jg
and
stos
in
jmp
mov
jmp
jmp
mov
out
cltd
imul
xor
push
test
add
add
cmpb
imul
arpl
repz
jge
cmpsl
pushl
mov
scas
clc
jns
adc
pop
mov
in
mov
call
call
dec
sub
dec
scas
push
int
cmpl
lahf
out
aam
into
push
jl
hlt
out
call
call
test
aas
inc
lock
jg
inc
pop
inc
sub
cli
mov
ljmp
and
pop
popa
cli
hlt
xlat
outsb
insl
add
mov
sbb
and
mov
push
hlt
xchg
inc
jl
and
das
inc
mov
add
push
adc
and
sti
cmp
add
repnz
xchg
lret
adc
pop
test
adc
or
xor
dec
adc
or
dec
add
out
jbe
shrl
adc
fiaddl
add
jns
scas
sahf
cmp
imul
pop
je
stos
shlb
jle
dec
popf
or
mov
cld
decl
add
add
add
cmpsl
mov
mov
jmp
testb
test
ds
popa
stos
sub
std
or
lods
fdivrl
xchg
or
loop
test
adc
test
add
add
add
add
fldl
jo
pop
sbbl
je
pop
mov
fs
imul
jmp
mov
ja
jp
add
add
add
add
into
scas
hlt
pop
mov
lods
fisttps
dec
fildll
adc
push
cmc
inc
cmp
iret
inc
repz
icebp
daa
nop
sbb
cwtl
dec
and
xchg
ds
add
adc
push
leave
or
inc
lret
call
pop
add
iret
aam
push
ds
iret
call
cmp
mov
xchg
xchg
pusha
ljmp
push
mov
jo
sarl
push
mov
jmp
jb
sbb
rcrb
pop
lret
inc
pop
mov
add
dec
loop
push
rorl
push
and
or
lcall
xor
pop
inc
hlt
movsb
pop
fmull
add
pop
loope
insb
jmp
adc
mov
add
add
add
push
and
imul
mov
mov
jp
pusha
add
or
push
sbb
incl
add
sbb
sahf
dec
mov
sbb
push
pop
lret
orl
ljmp
jg
neg
imul
jmp
jecxz
and
adc
data16
pushf
sahf
imul
in
and
aam
lock
pop
xor
mov
notl
mov
pop
out
add
add
add
and
cmpsl
inc
jns
outsb
push
push
mov
pusha
jnp
push
fdecstp
sti
pop
and
add
push
in
pop
mov
jecxz
sub
imul
jp
pop
inc
sub
cld
xor
add
jns
mov
scas
xchg
push
add
rcll
mov
cmp
test
xor
cmpsl
xor
cmp
xor
xor
fsubp
xor
int3
jge
enter
enter
xor
cmp
popa
xor
add
add
stos
insb
xor
mov
jnp
push
mov
fwait
jge
push
xchg
jmp
add
push
ficompl
xchg
fisubrs
lahf
xchg
xor
mov
pop
shlb
nop
pop
xor
dec
jns
jb
mov
mov
inc
and
rcr
popa
ret
mov
das
adc
enter
test
add
add
shrl
daa
ss
insl
insb
sbb
dec
mov
add
add
xchg
and
jno
mov
mov
mov
add
add
add
add
push
addr16
sub
pop
bound
push
jne
inc
xchg
aaa
push
xorb
dec
inc
xlat
inc
outsl
pop
jmp
movsb
push
mov
push
dec
sbb
ss
std
pop
dec
mov
cmp
mov
lds
mov
daa
mov
cwtl
fmull
cmp
sbb
mov
ret
sbb
scas
dec
pop
xor
xor
add
mov
xchg
jne
dec
jmp
jns
sbb
rorb
mov
jne
nop
sub
andl
ds
jae
adc
test
adc
pop
in
sahf
cmp
sub
sti
sarb
lods
je
mov
insb
dec
dec
imul
add
add
add
add
mov
add
push
sbb
movsb
mov
aam
push
and
les
test
jno
xor
dec
jno
das
pop
xlat
ret
daa
insb
je
add
andb
ja
mov
repnz
adc
mov
gs
or
pop
loop
cs
out
mov
jo
mov
sbb
add
out
sbb
dec
ds
push
jl
adc
jo
adc
mov
push
jg
push
insb
int
pop
or
les
mov
out
inc
lcall
testb
call
call
call
push
and
pop
cwtl
into
dec
sbb
add
add
add
add
mov
int3
dec
inc
or
jl
pop
lods
testl
push
lods
push
xchg
xor
lahf
into
lcall
or
jl
js
popa
inc
bnd
cmp
loope
mov
mov
sbb
ret
jne
pushf
clc
xor
jecxz
push
pop
fbld
pop
sbbl
xor
jg
mov
add
aam
shrb
add
ret
mov
add
out
push
shll
sub
aam
sbb
cmp
cmp
and
insl
pusha
outsb
addb
adc
xor
movsl
stos
pop
mov
add
mov
loopne
or
in
lock
cld
dec
pop
repnz
jno
test
jnp
push
jmp
mov
outsl
or
dec
das
sahf
cmp
cmc
push
bound
call
call
ljmp
pop
add
add
and
jl
jle
mov
les
out
push
jnp
push
and
sub
pop
add
xchg
push
lods
jb
adc
sbb
ret
xchg
pusha
cmp
or
mov
mov
sub
rorl
ljmp
fildl
cmpsb
je
cwtl
in
inc
push
sbb
add
les
or
fwait
bound
inc
ret
or
dec
xchg
notb
sbb
mov
sub
add
push
adc
lahf
movsb
mov
jmp
inc
call
jne
aas
sahf
ss
fsqrt
incb
sbb
inc
jge
push
pusha
and
xchg
add
lret
mov
sub
xchg
inc
pop
pushf
dec
stc
and
push
mov
xchg
addb
sub
inc
fldl
xchg
adc
jp
ljmp
pop
divl
mov
adc
mov
in
jmp
jne
inc
pop
jnp
add
xchg
addb
xchg
insl
gs
pop
cmp
subl
call
call
add
add
add
push
inc
sarl
sti
ret
xor
sub
or
inc
daa
jo
popf
inc
inc
push
inc
jmp
enter
sarl
int
mov
pop
inc
cmp
and
aad
pop
push
adc
push
shll
add
add
add
add
inc
mov
das
sbb
mov
dec
pop
dec
imul
test
mov
adc
push
inc
xchg
fisubrs
dec
pop
add
dec
lds
outsb
bound
push
pusha
or
imul
add
add
scas
inc
test
add
add
add
sub
add
add
add
add
mov
pop
push
cmp
jmp
mov
jecxz
mov
cmpsb
imul
call
call
xor
insb
mov
call
xor
or
pop
pusha
fdivrl
not
and
mov
dec
dec
in
inc
xchg
or
and
xchg
es
sub
adc
xchg
mov
lds
pop
loope
adc
xor
js
flds
add
add
add
rcll
pop
call
mov
clc
push
gs
xrelease
arpl
icebp
insl
add
cmp
out
xchg
bndstx
add
or
stos
add
xor
pop
adc
add
add
add
add
add
in
pop
scas
test
add
and
push
js
mov
adc
sub
lret
mov
add
cmp
sarl
cmp
mov
xchg
sahf
jl
arpl
out
push
xchg
pushf
in
jae
or
scas
dec
aas
push
cmp
subb
xorl
mov
and
jnp
fisubs
push
sub
outsl
imul
andl
ss
inc
sub
push
add
dec
jl
aam
enter
mov
addr16
inc
call
cld
int
call
call
int3
and
pusha
fidivs
daa
shr
cmp
ds
stos
add
jmp
aam
inc
inc
and
xchg
sti
and
test
adcl
outsl
xor
mov
mov
cmp
xor
insl
add
add
movd
pop
lods
cmpsb
sub
scas
pop
cltd
mov
jmp
cmp
jb
lahf
pop
add
int3
inc
nop
push
fidivs
mov
add
call
pop
lcall
adc
push
inc
ljmp
leave
mov
and
add
dec
add
cmp
repz
ja
mov
and
xchg
andb
shlb
push
push
test
arpl
cmp
xor
mov
cmp
cmp
xor
push
add
pop
lock
into
jl
xor
ret
lahf
in
incb
pop
push
lret
addr16
xchg
add
ror
xor
push
ja
in
outsb
cmp
into
add
sti
movl
cwtl
add
add
add
sbb
popf
mov
fldt
rcl
xchg
aas
push
inc
push
out
scas
ficomps
fistl
imul
in
mov
je
inc
ret
lds
push
mov
fiaddl
and
cmp
xchg
outsl
popl
insl
aas
or
int
mov
fsts
push
sti
ret
sub
test
add
add
add
add
outsb
movsb
pop
sbb
jo
mov
mov
xor
inc
and
inc
loopne
and
push
lock
movl
jo
movsl
inc
xchg
mov
sar
jge
aaa
mov
mov
out
and
mov
clc
cmp
mov
push
fiadds
add
add
add
mov
mov
xor
call
cmp
mov
arpl
fwait
dec
xor
sbb
mov
add
scas
jo
mov
cmp
jo
jb
push
push
xor
ss
cmp
push
jle
out
xor
call
call
mov
xchg
jnp
mov
add
add
and
lcall
pop
add
or
nop
sbb
loope
popa
xchg
hlt
insb
jae
fidivs
sub
fisubs
jbe
add
jp
xor
sbb
insb
mov
out
lds
retw
dec
jp
xchg
mov
add
add
add
add
xlat
push
outsb
cltd
dec
fwait
lret
dec
xchg
mov
jae
or
mov
sub
pcmpgtd
adcb
test
std
call
and
push
imul
dec
stos
fisubl
lock
add
sbb
shrb
jge
movsb
fdivl
fidivrl
in
aad
sub
push
fs
pop
js
sbb
pslld
cmpsl
mov
push
cmp
dec
jmp
pop
ja
je
mov
ja
push
xchg
out
test
or
xlat
adc
sarl
push
pop
imul
notl
xor
test
add
not
xor
sub
xchg
je
push
orb
add
pop
sbb
cltd
stos
mov
in
addb
add
cmp
aas
test
loope
in
mov
imul
dec
cs
jmp
popa
test
xchg
mov
fwait
jg
dec
cmp
and
inc
and
cmc
pop
leave
movsb
or
int3
loop
mov
out
cmp
pop
lret
dec
lods
popf
call
call
lods
cs
data16
jno
add
add
add
add
push
call
pop
jns
fs
out
and
loopne
xchg
dec
call
loopne
mov
and
mov
mov
and
adc
jle
push
in
jp
jp
inc
inc
aam
xchg
test
sahf
adc
adc
xor
call
call
arpl
and
add
add
add
add
dec
popf
mov
sub
push
add
xchg
push
out
dec
inc
adc
stos
cltd
pop
pop
icebp
negb
xchg
int
add
dec
mov
lcall
add
or
sbb
jg
cmp
gs
or
inc
pop
xchg
dec
push
pushf
adc
pop
cld
inc
blcfill
aad
push
addr16
lods
loope
cmp
add
lret
pushf
push
aad
popa
je
or
mov
out
jecxz
mov
add
cmc
idiv
jmp
in
dec
mov
dec
fdivrs
mov
cmp
add
add
add
pop
lret
inc
cmp
dec
pop
and
pop
and
pop
add
mov
sub
cmpsl
mov
rol
or
add
int
mov
fwait
dec
mov
add
push
push
mov
fwait
bound
xor
xchg
fsts
and
sbb
inc
dec
mov
xor
fs
and
fmul
mov
mov
inc
call
call
call
mov
pop
jne
sub
sub
push
push
cmpsb
mov
mov
imul
cmp
push
mov
jb
fs
out
cmpsl
icebp
xor
movsb
add
std
jl
filds
subb
sarl
xchg
add
lretw
pop
sub
add
data16
mov
aam
loop
mov
cmp
sub
mov
mov
mov
add
xchg
xor
jle
jg
loopw
push
adc
adc
sub
mov
loope
add
add
jle
mov
adc
mov
aad
cmp
add
add
ret
push
add
push
mov
inc
dec
negb
jecxz
mov
jo
adc
and
insl
dec
into
sbb
loopne
andb
aad
insb
or
pop
jnp
jge
sbb
daa
fistpl
mov
mov
pop
xor
into
dec
cmp
popl
out
xchg
and
add
or
mov
enter
sub
leave
aad
and
pushf
and
lea
adc
mov
leave
je
and
stos
add
push
cld
scas
decl
cmp
xchg
call
call
callw
inc
pushf
xchg
enter
call
test
lahf
in
pop
pop
test
sahf
jp
pushf
dec
ss
mov
rol
mov
and
cmpl
mov
pusha
inc
jmp
and
xor
nop
pop
cs
adc
shll
out
sarl
push
test
insb
add
add
add
add
adcb
pushf
adc
test
fs
pop
cmp
add
add
xchg
sahf
jns
sahf
es
bsf
roll
mov
or
add
and
mov
xchg
fldenv
daa
sub
cmp
adc
push
dec
push
add
shl
insb
and
or
call
call
shl
stc
enter
sbb
xor
add
add
add
add
xchg
xchg
int
sbb
cwtl
js
testl
mov
scas
push
jge
push
inc
pop
mov
cmpsl
ljmp
int
cmp
push
imul
lock
rcrb
pop
in
repz
jp
add
add
add
add
dec
test
jbe
pusha
mov
mov
fldenv
mov
push
shlb
dec
xor
xor
add
add
jmp
in
into
sbb
cltd
push
rcl
sarl
std
xor
and
pop
or
cmp
ja
out
ja
push
pop
jl
int3
push
add
add
add
jge
xchg
loopne
pop
roll
add
add
add
add
jp
inc
call
call
call
sbb
push
xor
cmp
push
je
repnz
xchg
por
lock
lea
pop
testl
daa
outsl
sub
dec
jno
dec
pop
sub
dec
out
pop
jo
aaa
pop
daa
loop
sbbl
jmp
pop
inc
mov
jmp
push
xor
mov
push
mov
mov
cmpsb
mov
xorb
xchg
les
mov
ret
adc
and
ret
mov
pop
sbb
mov
ja
sub
cmp
add
add
add
add
outsb
mov
inc
xor
and
int3
adc
in
dec
adc
orb
sbb
lds
iret
imul
sbb
add
sub
in
add
sbb
lea
mov
push
imul
call
call
call
daa
inc
outsl
cwtl
test
sbb
into
mov
pop
pop
mov
sbb
sti
ret
mov
add
add
add
hlt
test
cmp
test
inc
call
or
ljmp
jge
std
cmp
jnp
sbb
push
orl
and
arpl
or
inc
repz
das
out
in
js
xor
das
insb
std
jae
sbb
je
push
and
or
add
mov
add
add
cmpsl
and
xor
xchg
fisubrl
call
call
call
jns
out
xchg
dec
in
mov
pop
sub
or
je
push
or
cwtl
popf
mov
mov
push
jnp
xchg
xor
aas
in
jae
sub
add
out
std
ja
push
dec
push
pop
cs
out
or
xchg
push
add
pop
jae
sarl
inc
xlat
and
outsb
push
cmpsb
stos
push
add
clc
cld
call
call
add
add
add
add
jae
lds
in
mov
sbb
bound
loopne
xor
mov
sbb
cmp
add
add
scas
popf
pop
xlat
js
pop
adc
aam
ja
fsubrp
lock
int
ss
add
inc
push
add
add
add
and
mov
mov
dec
icebp
je
mov
andl
ljmp
pop
cwtl
ror
mov
cwtl
int3
out
insl
add
lcall
inc
daa
mov
jbe
pop
adc
push
dec
add
cmp
pop
cmpsl
sbb
add
test
mov
pusha
dec
or
movsl
adc
les
mov
das
adc
addb
lods
mov
test
cli
push
push
dec
es
dec
loop
add
add
jge
addr16
outsb
movsl
aad
iret
push
test
and
sub
movsl
rol
sbb
sub
inc
mov
lret
pop
lock
ss
pushl
push
mov
mov
sti
stc
stc
sbb
and
and
and
adc
fidivrl
pop
dec
movsl
dec
mov
mov
ret
ss
out
hlt
ljmp
cli
mov
call
call
or
loopne
clc
mov
cld
jmp
jne
xchg
dec
jle
adc
cltd
jb
enter
fdivrl
je
call
call
add
add
dec
sub
jecxz
out
pop
or
xor
dec
js
push
jmp
stc
jp
add
shrb
addr16
stos
mov
xchg
pop
sub
and
jbe
mov
shlb
idiv
fadd
dec
jbe
adc
ds
mov
cmpsl
xor
xchg
repnz
js
jae
inc
addr16
sbb
cmp
add
add
pop
clc
outsb
xchg
iret
cmp
jnp
rcll
arpl
aas
dec
push
pusha
stos
pushf
faddl
add
or
mov
out
xchg
and
jle
outsl
jno
sbb
fcmovb
outsb
mov
leave
adc
dec
ret
js
push
pusha
mov
pop
mov
inc
adc
add
inc
or
test
jbe
out
mov
stc
lds
add
add
pop
cli
hlt
iret
xlat
ret
fstp
or
fs
and
loopne
outsl
fildl
mov
stos
pop
push
decb
clc
scas
pushf
jae
dec
cli
shrb
inc
mov
push
push
and
rcrl
sbbl
push
or
add
add
pop
xchg
push
or
jae
pop
test
call
call
xchg
xor
cmp
mov
sub
xlat
mov
dec
push
mov
loop
push
jno
fs
lret
aad
inc
pushf
inc
jae
fstpt
add
add
add
add
mov
push
push
add
sub
jp
cmc
js
push
sbb
push
sahf
rclb
insb
cmpsl
mov
pop
xor
xor
jnp
adc
insb
cmpsb
int3
push
mov
or
fisttps
lock
add
add
cli
mov
adc
add
add
push
stos
aas
shll
xchg
in
dec
cld
sbb
fmull
ds
fsub
lock
or
fiaddl
push
mov
int3
push
lea
shl
int
and
xor
ret
mov
mov
gs
inc
std
aaa
and
out
sarb
sbb
mov
cmp
fwait
xor
xor
cmp
icebp
in
inc
aas
dec
sarl
dec
sub
push
push
add
movsb
sti
sbb
sbb
add
add
add
add
or
cwtl
push
jmp
and
movsb
mov
psrad
mov
add
leave
aad
sbb
and
in
cmp
sub
pop
pop
add
into
icebp
aas
add
in
repnz
inc
jecxz
and
inc
xor
mov
ljmp
clc
sub
call
call
push
lcall
add
add
push
xchg
movsb
lock
pop
sbb
shll
dec
xchg
ja
fists
or
xor
outsl
pop
in
pop
jno
sub
xor
add
add
and
aad
add
xchg
xchg
cmovb
call
orl
fsubs
mov
xor
js
cmp
aas
adc
fucomp
inc
lcall
pop
jle
and
dec
cli
push
add
add
xor
mov
negl
test
cltd
insl
movsl
xor
ss
imul
into
jp
sbb
push
mov
add
out
loopne
mov
lods
pop
call
call
std
jo
inc
in
pop
jnp
fcoms
in
mov
mov
dec
aad
fwait
add
add
add
sub
call
call
call
jp
out
in
push
adc
test
adc
test
iret
xchg
xor
add
add
clc
and
loope
push
adc
mov
add
add
and
xor
jge
jno
es
fcoms
cmp
jb
push
and
jo
mov
add
add
add
add
ss
lods
fcoms
xor
jle
or
add
decb
xlat
inc
sbb
enter
pop
call
push
or
add
andl
add
mov
mov
fldt
cs
and
adc
bound
lea
mov
inc
ret
call
call
shr
in
or
add
add
loop
mov
lds
mov
aam
xchg
stos
outsb
or
or
xchg
add
mov
movsl
outsl
push
je
add
add
add
lea
jl
add
cmp
add
roll
xlat
rcll
jb
jg
xor
in
xor
jo
mov
add
inc
add
add
add
add
test
mov
sbb
lcall
mov
lods
icebp
xchg
out
lcall
dec
scas
cmp
cs
jp
js
movsb
icebp
xchg
rol
shll
add
add
movsb
mov
pop
sbb
sldt
add
lret
add
mov
enter
and
dec
jo
mov
push
pop
xchg
scas
lcall
sbb
push
bound
xchg
int3
gs
mov
sub
lods
fisttps
xchg
test
notl
jmp
jb
mov
push
or
bound
cli
push
add
add
hlt
jbe
stc
push
int
mov
xor
lahf
call
call
call
ss
dec
test
inc
pop
jne
hlt
dec
sub
test
nop
nop
add
xchg
and
ds
ja
xorl
enter
inc
jne
das
sti
sbb
fmull
out
xchg
call
call
in
pushf
cltd
cltd
inc
adc
jae
cs
cltd
xchg
add
inc
pop
inc
arpl
aad
arpl
add
add
add
add
repnz
int3
sub
lods
xchg
add
pop
pop
jns
jnp
pop
in
popf
fs
add
aaa
in
xchg
xchg
je
lret
cld
enter
popa
int3
xor
adc
inc
aad
jmp
cli
andl
jmp
sbb
fs
and
insb
xor
adcb
std
inc
sub
mov
fimull
ret
inc
sbb
or
outsl
mov
or
daa
cli
rorl
ss
ljmp
add
add
add
sub
dec
push
dec
fistps
mov
sbb
test
in
inc
push
dec
aam
pop
ret
push
sbb
lret
inc
sub
xchg
insb
push
pop
jge
adc
xor
jbe
push
pop
mov
test
cld
pop
mov
dec
daa
xchg
add
add
lcall
sahf
lods
les
addr16
add
stos
mov
leave
or
jns
out
scas
repnz
dec
movsl
xchg
cltd
fisubl
ljmp
lret
add
add
add
sbb
push
jns
rolb
and
sub
mov
test
loop
in
inc
or
inc
scas
pop
jo
shll
in
push
dec
popl
shlb
js
push
ljmp
sub
and
scas
adc
popf
pusha
mov
jae
sbb
jmp
daa
repz
aam
jmp
or
add
add
add
add
mov
inc
icebp
movsl
inc
inc
push
jg
loop
pop
dec
ret
cmp
ret
mov
push
loope
dec
mov
dec
in
cmpsl
push
cld
fmuls
into
pop
or
push
xlat
push
add
push
imul
jmp
or
push
cmp
add
add
add
add
dec
adc
adc
add
add
insl
out
mov
pop
pop
push
bound
daa
xor
or
jecxz
and
mov
clc
xor
add
add
add
add
xor
pusha
jns
mov
call
call
adc
mov
stos
jne
movsl
dec
sub
imul
repnz
lods
lea
rolb
xor
inc
push
push
add
shll
jb
loope
push
movsl
adc
loopne
out
ja
add
add
orb
fisttpll
sub
fcmovnbe
mov
or
daa
movsl
leave
push
stc
jne
out
push
dec
idivb
outsb
xchg
cli
inc
aad
add
and
dec
shrb
scas
dec
inc
cs
out
inc
adc
xor
jns
push
inc
push
int3
les
jnp
outsl
push
mov
lret
outsb
movsl
sub
and
cmp
jnp
xchg
in
fstpt
aas
push
add
add
fstpt
sub
pusha
iret
fwait
test
cmpsb
push
sub
add
outsl
jno,pn
js
cli
dec
clc
sub
mov
test
aam
xchg
imull
lods
and
jmp
or
fldl
jne
dec
cmp
lcall
mov
into
mov
cmc
mov
call
call
call
lret
inc
pusha
test
mov
xchg
xlat
add
stos
and
fadd
or
sbb
arpl
test
xlat
inc
add
add
push
loopne
mov
mov
cmp
sub
dec
inc
outsl
inc
lods
jecxz
pop
sarl
movsb
pop
call
call
call
add
sbb
and
scas
mov
in
cmp
bound
sbb
stos
adc
lds
pop
or
add
jo
mov
enter
ds
dec
pcmpeqd
pop
iret
sub
out
sahf
mov
mov
inc
dec
aas
hlt
mov
xor
loop
mov
sbb
pop
mov
cmp
sahf
pop
xchg
cmpsb
stc
fs
popf
fs
jns
jmp
call
pop
hlt
pop
add
mov
loope
add
mov
nop
jb
or
add
psllw
mov
negb
mov
mov
movsl
movsl
dec
je
jmp
imul
jae
loop
or
fistps
enter
add
xor
ja
shll
testl
int
cmp
mov
jl
jae
call
adc
mov
mov
mov
cli
xor
pop
pop
jae
sldt
add
add
mov
pop
or
push
mov
pop
xchg
dec
movnti
push
lret
subl
scas
sub
es
add
ds
arpl
mov
sub
jbe
push
and
adc
pop
mov
sti
cld
cmpl
add
adc
dec
inc
inc
sbb
mov
pushl
xchg
mov
out
in
sbb
cmp
jo
call
call
inc
xchg
fxch
loope
inc
pop
hlt
cmp
lcall
in
xchg
stc
test
aad
sahf
cs
mov
cmp
xor
push
lock
testl
aaa
adc
sub
mov
sub
lcall
pop
imul
jb
jg
sub
dec
add
stc
repnz
add
arpl
mov
or
dec
test
stc
add
add
add
add
test
mov
mov
or
jge
lds
lods
dec
sbb
jmp
daa
mov
cmc
clc
xchg
mov
xchg
aad
imul
call
call
mov
add
add
add
ds
lods
lahf
add
add
scas
cld
cwtl
arpl
push
jns
out
push
sub
mov
scas
clc
pushf
lahf
push
mov
pop
fistps
pop
pop
jl
divb
movsl
sti
popa
stos
repz
std
xchg
pop
adc
movb
mov
push
pusha
call
stc
jb
inc
mov
outsl
popa
xchg
cmc
add
add
mov
pop
or
dec
jne
mov
and
dec
out
jo
xchg
pop
add
testl
mov
push
push
mov
jbe
lods
jno
inc
mov
dec
rcll
mov
add
xchg
cmpl
cmpsl
mov
add
add
add
push
sar
in
ss
fcoml
inc
add
outsl
inc
pop
imul
lret
push
loope
aad
shl
xchg
or
mov
fstp
add
aad
or
aam
aad
mov
imul
add
add
push
sbb
sub
mov
mov
dec
movsb
adc
add
std
jmp
mov
outsb
pop
pop
out
pusha
mull
push
xchg
add
pusha
lret
adc
lcall
push
call
call
xchg
inc
push
and
mov
loop
cmc
fldl
push
or
outsl
jne
sub
mov
addr16
jecxz
lds
add
add
add
rorl
gs
outsb
aad
iret
xor
call
fcoms
js
xlat
mov
add
subb
add
add
add
aas
add
lcall
fdivr
pop
and
dec
scas
decb
lcall
add
jge
adc
sbb
iret
adc
sbb
pop
sub
dec
dec
adc
rorb
jnp
and
mov
dec
mov
xor
inc
push
cmp
cmpb
add
xor
pop
test
shlb
cltd
mov
pop
and
jmp
sbb
jge
cltd
icebp
nop
nop
imul
mov
subl
and
jg
fcoml
add
add
jnp
add
add
add
add
sub
lret
test
int
je
out
ret
aas
out
xor
pop
inc
loop
gs
dec
add
add
dec
xor
mov
fsubrl
das
test
ficoml
repnz
add
add
js
dec
jge
xorl
push
cmp
push
repz
sbb
pop
dec
dec
insl
test
inc
mov
pop
xchg
sub
push
jl
js
pop
js
and
adc
repz
inc
jmp
cwtl
lret
in
pop
call
adc
popa
mov
sub
sub
add
add
xchg
push
sub
daa
int
dec
add
jecxz
test
ds
out
lea
out
cwtl
jecxz
dec
pop
cmp
or
outsb
sub
inc
xchg
mov
add
mov
xchg
mov
sbb
sbbl
or
rcl
dec
mov
sbb
pop
loope
inc
push
std
movsb
cmpsl
clc
dec
xor
jno
lods
movsl
and
fisttpll
lea
call
stos
and
add
leave
stos
gs
popf
push
das
dec
mov
cld
mov
sbb
inc
dec
call
call
jbe
lret
push
loope
xchg
pop
xor
mov
cmpsl
negl
dec
shrl
dec
push
je
jp
sahf
icebp
sbb
push
outsl
iret
insb
lods
add
out
stc
aas
pop
icebp
pop
fs
cs
sub
sub
test
cmp
inc
jb
sub
mov
arpl
add
push
xchg
lds
lcall
cmc
aas
sbb
lahf
nop
out
fcompl
filds
pop
cld
add
jne
sbb
push
mov
mov
aad
aaa
push
andb
xchg
dec
loopne
in
pop
and
add
add
gs
cwtl
and
adc
out
adc
cmp
sbb
jecxz
out
lock
sub
add
iret
cld
sub
sbb
push
push
add
ret
jno
mov
push
out
mov
xorl
push
jb
mov
out
icebp
jle
jle
cmpsb
sbb
call
xchg
inc
xor
aas
repnz
fdivr
dec
insl
add
xchg
ffree
leave
fdivrs
xchg
imul
jbe
dec
xor
leave
add
sbb
add
mov
mov
pushl
out
ja
and
push
cltd
nop
xor
push
cs
outsl
orb
or
cmpsb
add
mov
call
adc
xchg
push
and
in
negl
push
mov
jbe
mov
pop
insb
fldz
jb
mov
or
inc
fimull
add
and
jmp
push
cmp
jl
out
jl
hlt
test
mov
int
jb
cli
pop
xchg
cltd
adc
mov
scas
sti
aas
add
fisubs
int
add
sbb
mov
pushf
les
fidivrs
rcrb
jmp
cmp
xchg
or
arpl
add
add
add
add
push
mov
sbb
iret
arpl
addr16
popa
andl
xor
mov
lcall
xchg
jge
add
cmpsl
adc
cmpsb
adcl
fisubl
mov
mov
gs
push
or
mov
scas
int
jae
rclb
mov
or
enter
add
fisttpl
addb
ss
mov
lcall
call
call
dec
pop
add
jg
jne
dec
repz
hlt
and
repz
pushf
test
lock
xchg
push
mov
data16
in
addr16
and
cmp
repz
mov
inc
jge
pop
icebp
adc
jbe
dec
jnp
xor
divps
push
fsubs
mov
xchg
sbb
enter
sarl
inc
aaa
test
sarl
cltd
lcall
je
jnp
add
ss
lods
nop
sbb
cs
add
add
add
add
xlat
pop
inc
push
and
adc
mov
or
repz
lods
cmp
iret
mov
insl
into
cmpsl
imull
jmp
pop
es
call
mov
sbb
and
bound
push
js
add
inc
cmp
add
pushf
ficoml
lahf
push
add
pop
mov
sbb
add
add
push
lahf
adc
add
es
jmp
mov
outsb
repnz
cs
pop
arpl
dec
lds
cmp
and
fs
ret
ljmp
and
js
insl
gs
inc
inc
dec
shll
outsb
or
vpcomud
xor
not
lcall
add
add
add
add
mov
ss
sbbl
xchg
or
mov
add
loopne
ret
jecxz
mov
dec
loop
jl
out
icebp
out
or
cmp
gs
lds
orl
inc
ljmp
popa
xor
js
or
jo
mov
mov
mov
jmp
cs
stc
cmp
outsb
mov
push
jo
and
or
mov
sti
stos
sub
jo
dec
daa
jno
int
sbb
sbb
jne
loopne
pop
ficomps
add
add
std
aas
and
jne,pt
pop
jle
fbld
adc
ja
out
push
sbb
fdivl
sahf
out
pushf
jmp
sub
dec
adc
aad
stc
and
das
insl
pusha
or
mov
sbb
push
subl
nop
push
jp
pop
mov
insl
mov
decl
mov
call
mov
es
or
cmpsb
add
mov
cmp
sub
push
add
add
add
add
stc
add
mov
movsl
loop
packsswb
cmp
mov
jle
repz
add
jo
fidivrs
add
lea
in
dec
xor
scas
jecxz
std
std
cli
enter
subb
ss
cmpl
dec
dec
adc
add
test
out
lahf
lds
fistps
aaa
ss
das
addr16
jl
mov
mov
lcall
dec
push
rcl
loopne
xlat
xchg
lock
pop
adc
mov
call
add
add
adc
sti
xchg
sbb
adc
orl
rcr
outsl
and
pop
jle
out
test
int
add
mov
adc
ret
outsl
ja
xchg
testl
data16
mov
in
sbb
xor
pop
clc
xor
push
insb
fpatan
or
call
call
pop
sbb
adc
dec
clc
inc
xchg
hlt
fnstenv
push
arpl
inc
add
mov
sub
or
pop
out
ret
lea
jge
xor
or
dec
dec
dec
jns
test
sbb
movsb
lods
push
ds
and
push
push
xor
xor
outsb
sub
popf
add
aas
inc
je
mov
mov
popa
std
xor
xor
leave
scas
sub
or
cli
inc
sub
add
hlt
push
dec
andl
call
ja
lea
add
push
xor
xchg
push
push
std
out
negl
xchg
lock
add
add
add
add
or
sahf
or
inc
push
push
add
dec
std
and
repnz
mov
adc
cmp
cmpsl
push
orl
loope
push
cli
dec
cmp
into
push
lcall
xchg
or
add
and
ret
cwtl
in
mov
fnstcw
xchg
add
add
push
and
add
add
add
loope
mov
leave
mov
cmp
test
popa
sbb
in
std
inc
mov
lea
movb
rcrb
shl
dec
test
lock
cmpsl
cmpsl
dec
mov
cmp
insb
loopne
cwtl
add
sarb
push
leave
hlt
jno
popf
push
nop
ss
cwtl
push
mov
div
cmp
add
push
push
cmp
dec
shlb
add
mov
out
mov
dec
ljmp
hlt
sub
push
and
jmp
mov
enter
mov
add
dec
cmp
add
inc
dec
adc
sub
jp
rcrl
push
fadds
push
xor
es
mov
or
or
or
cmc
rcl
and
ds
cmpl
and
xchg
cmpsb
mov
test
aaa
xchg
das
popa
inc
ret
mov
dec
mov
add
add
add
push
iret
sbb
pop
and
cmpsl
jl
xor
repz
pushf
loope
sbb
fbld
dec
call
call
call
imul
ror
cmc
xchg
mov
into
inc
movsb
jge
fs
cld
sub
mov
sbb
pusha
adc
add
add
add
cmp
mov
xor
lcall
mov
push
jnp
aaa
push
and
hlt
add
fucomi
call
call
call
movsb
scas
js
insb
mov
dec
mov
sub
cltd
push
testl
add
add
add
shlb
cli
lock
sarl
add
arpl
imul
mov
or
and
mov
cmp
call
call
call
inc
loopne
out
pop
shll
or
inc
int
inc
jb
in
fcmovne
mull
sahf
pusha
test
out
lret
push
cmp
movsl
ds
pushl
aam
aam
xchg
add
add
mov
div
outsb
call
movhps
sti
lods
aas
jle
xlat
out
pop
test
inc
adc
cmp
imul
imul
and
dec
cmp
mov
leave
adc
sub
std
leave
aas
push
inc
iret
popa
dec
xor
add
mov
dec
stos
push
aad
fs
pop
dec
or
jle
jp
push
popa
xchg
cmp
dec
ffreep
xor
ss
pop
pop
pop
xor
xchg
pop
push
pop
lret
roll
sub
inc
jmp
mov
jne
cmp
stc
das
sub
xorl
insb
and
or
add
add
mov
call
call
cmpsl
inc
sub
aaa
push
cmc
cmp
add
mov
mov
daa
rol
incl
inc
or
movsb
adc
dec
cld
adc
inc
cmc
loope
das
adc
xchg
lret
pop
cmp
cwtl
out
pop
test
leave
lods
jecxz
test
stc
repnz
decb
sub
std
es
cld
push
dec
pop
xor
push
xor
jnp
push
mov
outsl
aaa
jle
gs
mov
lods
xchg
rcll
mov
cltd
mov
or
sahf
lret
iret
out
fwait
insl
mov
xor
pop
popa
adc
and
jecxz
int3
sub
ror
add
add
add
pusha
in
std
add
add
add
add
arpl
jnp
dec
pop
mov
imul
pop
xor
lret
movsb
xor
sbb
lcall
cltd
jecxz
ss
add
add
add
add
nop
cmp
lret
push
or
test
and
call
sbb
mov
cmpsl
cli
add
or
cmp
add
mov
xor
not
or
sbb
hlt
filds
in
add
add
add
add
mov
or
xchg
xchg
sub
ss
mov
xchg
pop
push
push
mov
xor
or
jmp
sbb
stc
ret
jle
or
mov
add
call
inc
sub
jmp
and
add
leave
adc
jo
sbb
push
adc
inc
pop
lea
movsl
mov
xor
call
call
call
mov
and
jmp
add
add
enter
iret
adc
repz
sahf
stos
out
cmp
xchg
ror
mov
ret
sbb
bswap
aad
mov
fldenv
dec
jg
fisttps
jnp
andl
mov
add
cmpsb
jge
jne
fwait
shll
push
xor
out
insb
pop
xor
sub
dec
mov
lahf
mov
int
loope
loope
sarb
loopne
cmc
aas
shlb
add
add
add
jmp
test
add
add
add
imulb
xor
lahf
add
or
aaa
lret
stos
mov
dec
xor
lcall
jne
adc
add
add
add
add
add
jno
in
pop
mov
sub
push
loope
jno
inc
inc
or
js
iret
cmp
sbb
outsb
adc
cmpsl
add
ds
loop
ja
add
dec
jmp
xchg
jb
bound
mov
add
and
outsb
sub
bswap
and
dec
dec
dec
dec
shll
cmp
inc
sbb
add
cmc
sbb
in
push
push
xchg
xchg
xor
jne
mov
scas
push
addb
add
mov
push
dec
addr16
add
cwtl
inc
mov
mov
inc
cli
pop
add
add
add
add
cld
xchg
ret
mov
pop
inc
sub
sbb
subb
jnp
sbbb
je
out
push
ret
sbb
test
add
in
sub
or
cmp
out
xchg
imul
addb
es
push
xchg
incl
inc
mov
jg
and
or
cmpsb
insb
inc
fdivl
push
xchg
test
cmp
outsb
pop
push
mov
rorb
pop
cmp
test
push
push
jb
and
mov
push
test
pop
roll
add
add
add
sahf
insb
lret
jl
xchg
cmc
repz
ss
je
push
shll
imul
jge
movsb
sbb
add
add
add
add
push
push
inc
in
jbe
cmp
inc
scas
pop
or
out
add
and
pop
jne
xlat
popa
mov
pop
sub
sub
ja
add
js
inc
lret
dec
mov
jecxz
mov
fwait
inc
mov
nop
lahf
outsl
mov
cli
inc
and
xor
scas
pop
sub
pusha
ljmp
addl
gs
daa
shll
ljmp
sbbb
mov
xor
push
mov
fistpll
pop
jge
scas
pop
sbbb
add
add
add
pop
jp
fsubrs
daa
mov
and
jp
call
push
xlat
aad
sub
mov
ret
cmp
add
add
add
pop
fidivrl
jle
mov
mov
cli
xchg
jne
fs
call
cld
dec
xchg
call
call
call
pop
jo
and
jo
push
push
daa
adc
fisttpl
inc
pop
or
lcall
call
call
ja
cmp
pop
jns
add
dec
push
fnsave
or
fucom
movsb
inc
inc
jb
jno
pop
mov
lock
pop
mov
xchg
movsl
ror
or
cmp
jb
mov
xor
cmp
incl
xchg
gs
nop
cltd
enter
repz
ljmp
addr16
scas
hlt
mov
mov
push
call
inc
cmp
fimuls
sbb
out
mov
inc
push
pop
ds
adc
xor
stc
jae
mov
movsl
test
cmp
mov
cmp
mov
mov
dec
out
sbb
sbb
inc
int3
push
mov
add
or
std
lcall
neg
xor
fcoms
or
and
cmp
pop
cmp
sub
add
mov
into
mov
cwtl
test
cs
jge
push
jo
test
mov
and
cmpsl
stc
repz
push
mov
insl
add
mov
fsub
mov
or
sarb
mov
pusha
jp
scas
out
les
dec
into
pop
mov
push
ja
adc
pop
xchg
lcall
mov
add
fcoml
dec
mov
cmpsl
test
das
xor
dec
push
jae
fmulp
add
pop
jnp
ror
lock
xchg
pusha
push
mov
cmp
inc
or
call
call
stos
outsl
sub
pop
inc
inc
sub
jmp
xchg
loope
adc
arpl
jae
cmp
mov
std
sahf
jne
orl
mov
add
out
pop
es
push
sahf
mov
or
fwait
cli
inc
test
add
xor
loope
mov
insb
movsl
movsl
ja
orl
sub
or
cwtl
test
stos
mov
out
jae
out
lods
cmpsb
xor
std
pop
push
add
jno
inc
xchg
loopne
sub
add
pop
mov
call
call
call
adc
testb
cmpsb
fistpl
pop
add
shlb
frstor
pop
adc
dec
and
jge
das
cmp
mov
xor
inc
dec
rcr
inc
mov
xchg
add
add
mov
aam
adc
push
mov
push
into
jnp
push
addr16
rorb
or
andl
push
and
dec
cmpsb
xor
push
pop
cld
dec
push
adc
xor
cmp
add
ret
das
pop
ja
sbb
shll
and
push
xchg
push
into
add
xor
cmp
jbe
sti
add
jecxz
arpl
cmp
insl
inc
movsb
mov
xchg
cltd
insl
fcomip
or
xchg
les
sub
and
in
jge
mov
or
sbb
cmp
test
ret
sub
sub
xchg
sbb
sub
leave
shll
add
add
add
jg
fimuls
lds
scas
xchg
dec
test
inc
imul
aad
into
das
pop
xchg
lret
shlb
into
sub
jns
add
repz
jecxz
lahf
jae
js
outsl
cmpsl
lahf
test
mov
xchg
fisubs
sub
scas
cmpsb
cmp
add
add
mov
or
test
pand
or
rep
xchg
adc
call
call
call
enter
imul
or
sarl
stos
lods
sub
adc
sub
pop
imul
rcrl
push
sti
js
mov
mov
loopne
add
pop
ret
and
call
call
call
outsb
push
cmp
in
aam
scas
mov
add
loope
pop
je
das
cmp
jecxz
lea
sahf
popf
lcall
mov
dec
hlt
mov
inc
out
loopne
enter
fidivrs
daa
cmp
add
add
add
add
aaa
movsb
push
insl
jle
ret
imul
adc
push
clc
aas
fsts
jae
dec
pushf
dec
mov
jecxz
pop
ja
loope
lock
jo
imul
shll
fmulp
mov
cmp
or
add
add
xchg
mov
dec
sub
loopne
int
mov
add
add
add
mov
out
and
leave
enter
mov
lret
in
std
in
mov
xor
mov
xchg
cmc
mov
and
mov
mov
xor
iret
xor
pop
sub
dec
pop
dec
popa
sahf
inc
aad
jae
aad
aam
fsubs
scas
pop
and
add
or
mov
imul
popa
arpl
jge
mov
mov
out
jl
cmp
call
call
loope
push
ror
mov
sub
ss
mov
aaa
lret
pop
inc
adc
scas
xchg
inc
mov
popa
adc
adc
inc
push
sub
add
mov
add
add
adc
dec
adc
mov
insb
adc
ret
lret
aas
movl
lcall
flds
mov
cmc
add
sbb
cmp
xchg
repnz
sub
mov
cs
ljmp
sub
mov
int
sub
imul
outsl
or
ds
add
add
mov
mov
lret
or
add
fs
test
jne
fcoms
sbb
fsts
inc
mov
dec
iret
adc
lcall
ret
add
int3
mov
ret
cwtl
mov
insl
jb
cmp
fildl
inc
jg
mov
enter
add
pop
hlt
push
sub
test
or
inc
cli
cltd
cmp
sub
data16
add
sbb
gs
clc
adc
mov
mulb
mov
daa
repz
mov
insl
and
pop
push
xchg
push
dec
cmp
and
xor
stos
sbb
and
test
call
call
call
sub
inc
add
add
add
add
inc
add
add
nop
jg
das
fistpl
mov
add
call
call
call
inc
out
insb
lds
add
movsl
daa
lock
out
test
pop
and
in
mov
in
data16
cwtl
mov
inc
jp
mov
jge
stc
cmp
pop
pop
scas
jl
in
out
aad
ret
test
lods
xor
imul
lods
or
ret
sbb
pop
sbb
pop
xchg
andb
and
xchg
test
jmp
clc
lcall
pushf
enter
cmp
or
pop
fisubs
loope
loop
and
fdivrs
mov
pop
scas
xchg
dec
mov
mov
sbb
mov
mov
fnsave
push
xor
sbb
cmp
mov
inc
aaa
lods
das
ljmp
adc
fists
cli
xorl
lds
enter
mov
cmpsl
call
call
xor
inc
inc
das
ud2
cmpsb
cmp
dec
into
in
rolb
sbb
call
call
call
adcb
or
std
push
xchg
cld
adcl
std
jnp
nop
lcall
push
xorb
imul
cmp
and
pop
cmp
jecxz
jg
cbtw
sarb
inc
popa
jge
mov
jnp
inc
rorb
inc
jp
mov
cmp
mov
in
mov
add
add
add
add
idivl
int3
out
stos
add
mov
ljmp
jns
push
jcxz
aaa
mov
add
cmp
loope
js
icebp
xchg
mulb
int3
hlt
add
jno
clc
jmp
xor
lock
pusha
faddl
xchg
pop
stos
and
call
call
call
call
add
add
push
fldenv
sbb
or
mov
mov
xor
pop
hlt
out
shl
outsl
xor
push
je
inc
mov
jbe
repnz
hlt
jne
in
lea
pop
or
add
add
add
add
divl
xchg
stos
push
rcr
push
dec
stos
faddp
imul
inc
pop
pusha
jbe
jl
push
jnp
fwait
xor
dec
xchg
and
sbb
inc
xchg
icebp
add
cs
ret
lret
dec
std
ret
movsl
xchg
sbb
jecxz
stos
jmp
stc
sbb
jg
negb
mov
mov
inc
push
stos
mov
call
call
cmp
dec
jbe
add
fwait
outsb
mov
jle
sbb
sbb
leave
stos
xor
and
inc
leave
push
inc
inc
andnps
dec
nop
enter
xchg
lahf
repz
mov
dec
xor
ja
pop
jecxz
sbb
ret
ss
sti
jbe
aad
iret
xchg
mov
jl
scas
dec
xchg
pop
sbb
jle
or
sub
call
call
add
add
add
add
xchg
lret
leave
sub
xchg
jp
pop
ss
jnp
leave
jmp
adc
sub
pop
call
mov
and
cmpsb
sub
sub
push
and
add
mov
xor
push
and
inc
xchg
push
arpl
pop
bound
loope
sbb
stos
pop
push
es
and
or
mov
mov
loope
sub
shll
or
or
add
jp
ud1
add
aam
daa
imul
xor
fbld
add
add
cltd
ficoms
scas
dec
pusha
jmp
in
pushf
push
push
push
push
movsb
cs
popa
mov
sub
popl
pop
mov
scas
pushf
mov
inc
daa
add
add
popf
sub
ljmp
call
call
call
mov
jp
inc
jge
stos
mov
int
inc
in
sub
inc
push
andl
push
subb
mov
in
add
add
add
add
test
out
mov
stos
fisttpll
pop
sub
loope
inc
adc
jp
mov
out
or
cld
lea
xchg
inc
fs
adc
mov
add
add
add
addr16
and
int
xchg
mov
and
sub
push
das
ss
push
es
push
cwtl
test
adc
arpl
inc
xor
in
jb
xchg
mov
push
add
and
mull
jne
xchg
out
data16
nop
push
inc
mov
ficomps
arpl
add
lods
pop
les
jmp
out
inc
mov
sbb
out
or
aad
sti
adc
insb
loop
xor
mov
add
mov
repnz
xor
imul
hlt
rorl
aam
jge
xchg
data16
sbb
pusha
mov
lods
testl
aad
cltd
xchg
sub
outsl
scas
mov
notb
mov
add
stos
jp
lret
fcoms
cmp
push
push
cmp
je
xchg
mov
inc
imul
mov
pop
lock
adc
add
add
add
mov
mov
cs
stos
jne
test
call
call
call
call
call
insl
imul
cmpsl
dec
fimuls
fisttps
in
add
out
out
aam
push
dec
inc
loopne
xchg
ret
rol
dec
push
pushl
sbb
out
mov
imul
sti
pop
rcll
jle
sbbb
mov
sub
repnz
push
cmp
add
mov
mov
call
mov
pop
out
lods
stos
cmp
push
imul
cmc
pop
sbb
mov
mov
call
jmp
fcompl
lds
dec
leave
add
pop
sbb
pop
cmp
dec
fnsetpm(287
fnstenv
push
fdivs
std
cmp
movsb
insl
add
and
lahf
xchg
or
lret
es
inc
jmp
mov
mov
cli
cmp
and
daa
and
aas
lds
add
in
push
xor
jb
stc
jp
push
aas
mov
call
call
call
in
dec
scas
fnstcw
or
flds
xlat
loope
imul
mov
push
mov
std
or
add
xchg
jp
xchg
lret
imul
cltd
xchg
in
ret
sub
rolb
and
mov
aam
ret
shrl
lahf
add
mov
push
cmpl
add
rorl
int
pop
push
mov
dec
test
outsl
jb
mov
andl
in
out
inc
call
call
mov
push
gs
hlt
fcoml
jbe
into
xor
dec
dec
in
mov
jns
jmp
pop
imulb
fs
stos
mov
data16
add
add
add
add
push
shrb
xlat
dec
scas
cmp
add
adc
call
call
cmp
stc
jo
call
movsb
jae
or
daa
push
add
xor
adc
add
jp
aaa
int3
daa
jb
push
mov
cmp
mov
add
push
int
push
xchg
in
mov
lret
add
mov
add
or
xchg
jle
cmp
cltd
jo
inc
push
stc
and
test
pop
xor
test
or
jne
add
mov
inc
int3
nop
push
stos
cmp
jl
mov
mov
out
popa
lcall
add
add
jecxz
data16
decl
cmp
add
sub
andb
adc
jecxz
dec
bound
arpl
sarb
cmc
scas
or
add
add
add
adc
rcrb
pop
ja
pop
sub
out
data16
add
rclb
jmp
shrb
call
call
call
call
sbb
repnz
pop
jle
loope
dec
notl
outsl
xor
into
push
cmp
movsl
imul
sahf
mov
dec
std
into
int
push
mov
dec
push
sbb
dec
cmp
sahf
cld
mov
cld
mov
cli
jb
and
lahf
dec
jge
add
pop
nop
aad
mov
add
gs
sbb
mov
cld
movsb
js
dec
xchg
xor
and
rcll
xchg
das
xlat
add
add
add
lods
sub
xorb
gs
repnz
addr16
jns
cmc
scas
pop
sbb
test
outsb
rolb
xor
lahf
add
mov
cmp
push
xchg
rcll
shll
pop
sbb
push
add
add
push
iret
out
cmp
sarl
xor
icebp
or
xchg
adc
pop
and
add
pop
dec
scas
jmp
sbbl
cmpl
stos
les
call
call
push
sete
js
pop
or
daa
pop
xchg
nop
mov
mov
xor
jae
dec
push
js
lods
std
push
pusha
fwait
cmpsl
xlat
je
sub
ret
cltd
in
sub
cmp
dec
ja
cltd
addr16
adc
inc
push
mov
cmp
sahf
addr16
loopne
inc
movsb
dec
out
add
cmpsb
jmp
dec
std
xor
movb
jp
inc
cmp
cmpsl
loope
xor
jns
adc
mov
inc
and
add
mov
jb
jg
pusha
add
nop
jns
jb
mov
cmp
clc
aad
clc
out
outsb
orb
inc
fildl
add
sub
dec
add
inc
fcmovnu
cmc
movsb
int3
out
jnp
pmaxub
xor
mov
add
push
testl
jo
sub
cmpsl
fcmovu
test
jl
push
pushf
test
sbb
repz
fwait
ds
gs
pop
jge
stos
adc
or
add
add
xchg
shld
xchg
add
xchg
fucomp
xor
xchg
add
fcos
ss
xchg
dec
adc
mov
ljmp
nop
sub
ret
or
and
xor
xchg
xchg
dec
add
pop
divl
and
jo
mov
test
mov
push
sbbl
dec
push
jne
loope
cmp
fs
push
gs
pop
stos
jge
cmp
dec
ja
test
adc
push
lock
sbb
xlat
xchg
ljmp
xor
inc
std
mov
xchg
call
call
loop
push
sarb
mov
mov
jne
jne
jg
push
outsb
lods
lcall
mov
dec
pop
mov
scas
jmp
mov
clc
push
outsb
add
fiadds
or
arpl
test
sbb
jbe
mov
sti
push
jbe
mov
repz
jbe
test
cld
arpl
cmp
fldcw
sub
insb
mov
lahf
icebp
pop
test
xchg
call
or
testb
add
add
add
daa
ja
mov
aam
lods
outsl
or
inc
xchg
test
adc
in
stos
bnd
outsb
subl
add
cltd
in
std
or
incb
add
add
add
fistpll
mov
stos
pushf
dec
xchg
dec
outsb
mov
call
call
je
add
cli
mov
rcrl
es
push
les
test
call
call
call
sbb
xlat
shrb
add
add
mov
lods
xorl
jnp
mov
or
sub
dec
pop
mov
jae
jmp
mov
outsb
rorb
push
sub
adc
sub
mov
aaa
push
pushl
jecxz
and
test
cmpsb
adc
stc
aaa
decb
add
add
add
add
test
hlt
dec
cmpsb
repnz
maxps
dec
pop
mov
sbb
cmp
push
jge
push
adc
and
subl
and
xchg
pop
outsl
out
mov
aas
add
stos
adc
sbb
or
cmpb
sub
aad
add
test
clc
add
call
pop
cmp
push
xsaveopt
sbb
pop
xchg
sbb
ljmp
mov
rcrl
jae
push
adc
and
mov
loope
mov
jbe
dec
bound
and
xor
mov
cmp
sbb
stos
imul
in
push
ret
jno
ljmp
inc
rolb
mov
add
add
add
movsl
xor
and
add
jnp
into
in
in
inc
int
movsb
mov
xor
cmc
cld
int3
cmp
xchg
hlt
push
add
add
pop
jl
or
or
imul
aam
jecxz
xchg
jnp
out
pop
cmp
jne
ljmp
das
xor
bound
lcall
out
push
in
cvtps2pi
add
add
add
insb
dec
and
out
or
mov
and
cmp
repz
cs
arpl
pop
es
mov
movsb
jecxz
mov
sbb
fstl
sahf
jmp
cmp
int3
and
lret
cwtl
orl
cmp
mov
cmp
call
call
add
jbe
mov
dec
fwait
idiv
sbb
repz
mov
sbb
xchg
ja
imul
push
stc
push
push
lcall
mov
test
and
sbb
cmp
jle
scas
clc
add
dec
mov
js
pop
xor
imul
mov
dec
insb
mov
cld
inc
mov
mov
loop
inc
dec
repz
mov
dec
pop
inc
call
lcall
loope
inc
ret
add
sbb
fimull
push
or
js
clc
scas
sarb
fldl
bound
aas
push
and
lret
pop
arpl
cltd
dec
ja
inc
xor
lcall
rclb
ja
notl
mov
sbb
add
insb
jns
iret
div
mov
add
pop
inc
add
fisubrs
cs
addb
cltd
in
add
mov
xchg
jne
imul
adc
call
call
call
xor
lods
mov
cmpsb
mov
adc
subl
dec
mov
test
fwait
cltd
mov
mov
lea
pushf
lea
dec
sub
je
enter
pop
or
scas
pop
inc
aas
adc
push
movsb
data16
adc
scas
mov
andl
lcall
push
xor
in
test
sti
xchg
sub
mov
dec
mov
orb
or
and
add
mov
pop
in
jmp
negl
pop
adc
add
add
add
add
xchg
adc
add
rcrb
lods
sub
add
jb
gs
ss
shlb
jmp
sbb
arpl
movsl
or
stos
add
add
add
add
stos
xchg
bound
mov
or
and
fldpi
in
int
inc
movsl
in
cmpsl
jp
test
dec
fs
addr16
pushf
ja
jne
cwtl
mov
loope
es
insl
push
sbb
pop
int3
es
popa
add
add
add
add
mov
call
call
adc
fwait
xor
pop
js
pop
mov
push
pop
inc
scas
jb
or
in
in
cmp
arpl
cmp
imul
dec
pop
and
in
mov
insb
shll
mov
add
add
mov
xor
test
sbb
scas
or
xor
cmpsl
scas
jne
negl
repz
sub
sbb
sti
clc
loop
lret
xor
loope
clc
mov
pop
popa
cmc
inc
test
repz
inc
in
into
mov
in
inc
imul
cwtl
push
imul
decb
mov
cs
add
fcmovu
dec
bnd
or
fmul
mov
or
dec
add
std
cld
dec
dec
mov
push
inc
sbb
test
mov
xchg
loop
aad
call
dec
filds
ds
xor
mov
fcmove
clc
dec
lods
faddl
add
pop
das
outsb
jns
out
fcomps
xchg
adc
mov
jmp
jbe
cltd
gs
pop
xchg
xchg
push
adc
xor
cmpsl
sarl
dec
xchg
enter
inc
mov
sarb
add
jge
andps
loop
int
xor
lock
data16
add
add
add
add
mov
adc
adc
in
push
inc
popa
push
xor
xor
mov
sbb
pop
xchg
or
sub
sti
arpl
add
add
add
add
popa
repnz
push
sub
scas
sarl
leave
dec
leave
and
enter
xor
jge
add
sub
call
call
inc
inc
sbb
rcrb
or
out
push
or
es
adc
daa
aaa
xor
je
repz
jne,pt
negb
cltd
enter
movsb
sarb
negl
imul
test
add
add
cmp
add
scas
rcll
ss
sbb
inc
outsb
mov
xlat
sbb
add
jmp
xor
add
inc
sbb
xchg
test
xor
stc
adc
jo
in
jb
inc
or
and
and
insb
int
cmc
inc
insb
nop
jns
movb
and
mov
jb
jle
lcall
add
jmp
jbe
xor
iret
cmc
jp
mov
jp
daa
sub
lcall
pop
test
dec
cmp
lcall
inc
pop
out
mov
icebp
push
lds
popa
and
sub
xchg
jl
or
fdivrs
mov
insl
pop
sti
cmpsb
mov
sub
scas
sarb
push
mov
and
lret
sub
pop
fcmovbe
gs
pop
mov
add
mov
mov
mov
or
mov
hlt
jp
push
ds
sub
xor
xchg
mov
add
jns
sarl
rcrl
inc
mov
push
and
call
bnd
call
call
xchg
lods
fidivrs
sub
test
mov
pop
cmpsl
add
xchg
mov
sub
shlb
popa
mov
in
dec
xchg
xor
popf
xchg
mov
ret
mov
in
mov
and
popf
and
pop
ja
sub
ficomps
out
es
cmp
mov
and
sbb
inc
fistpll
lret
inc
imul
fcmovne
imul
add
add
add
add
out
cmp
or
stos
inc
push
lods
bound
pop
rorl
inc
inc
jne
sub
adc
mov
mov
xchg
sbb
insl
or
pop
push
ret
lret
stc
inc
imul
pop
dec
mov
test
imul
sbb
loop
or
shr
pop
test
add
add
add
cmp
inc
fsubr
outsl
add
xor
mov
push
movsl
je
in
lcall
call
call
sub
sbb
mov
in
je
cwtl
in
xchg
xor
call
call
adc
pop
cltd
cmpsb
cld
adc
sub
xchg
je
insb
inc
adc
add
aaa
bound
push
stc
mov
sub
leave
or
push
xchg
stos
xchg
in
sub
leave
cltd
rcrb
add
add
add
add
add
jle
mov
xor
call
pop
mov
scas
mov
push
lods
into
add
call
add
add
pop
xchg
xchg
adc
xlat
jb
fistpll
rolb
mov
push
xchg
push
ret
pop
test
mov
rclb
in
jnp
add
add
add
add
aas
fstl
mov
stc
daa
pushf
or
lods
mov
push
push
push
xor
sub
xor
cmp
call
call
call
imul
cmpsl
inc
dec
sub
into
ret
sbb
inc
je
mov
mov
add
add
add
add
ljmp
fadds
xor
call
int3
clc
pop
leave
daa
add
les
ret
or
dec
sbb
cmp
push
out
lahf
imul
push
je
out
lret
xor
fnstenv
or
daa
add
add
add
and
xchg
add
dec
push
pop
adcb
add
add
add
adc
mov
in
out
in
fnsave
lret
iret
push
ss
ficoml
fld
push
stos
out
sahf
lods
mov
pop
insl
add
scas
stos
cmp
cs
sbb
add
repnz
xlat
mov
mov
push
std
push
insl
outsb
inc
ss
pop
in
orl
daa
out
mov
mov
aas
fstpl
sbbl
shl
dec
adc
mov
adc
push
imul
push
insb
adc
mov
fsubs
add
or
ficoms
icebp
or
push
inc
pop
dec
and
sub
aas
sbb
sub
fldenv
pop
je
add
pop
aam
xor
loopne
hlt
pop
je
pop
fucomi
fwait
cmpsl
sub
ja
shll
mov
in
ss
outsl
test
clc
fwait
add
xchg
lahf
into
hlt
in
ficoml
hlt
shll
pop
addr16
stos
sbb
testb
shlb
loope
add
add
add
add
sbb
insl
adc
js
jno
loope
call
call
or
dec
aam
mov
lahf
loop
and
out
push
dec
pop
insl
jno
mov
je
push
aam
lods
sbb
adc
insb
add
lcall
popa
call
call
xor
dec
sub
jns
fwait
loope
scas
adcb
add
add
mov
popf
and
dec
hlt
pop
and
push
jne
mov
xor
cmc
addr16
movsl
dec
jmp
outsb
ss
sbb
add
xchg
test
mov
pop
movsl
repnz
and
jne
sbb
divl
adc
scas
xchg
pop
sbb
ss
out
ud1
add
mov
jg
jae
adc
fldl
fsub
in
ret
push
lods
out
lods
out
stos
cs
arpl
and
popf
in
loop
imul
add
add
add
add
inc
adcl
aas
cmpb
push
stos
pusha
add
add
add
popa
xor
sub
daa
imul
cmpb
dec
stc
fisttpll
xor
mov
insl
adc
lock
push
js
push
cmc
sbb
push
push
scas
movsl
xor
push
ljmp
cmp
mov
push
insb
xchg
in
pop
testb
cmc
or
xchg
mov
push
int
inc
mov
scas
aam
aaa
push
out
and
adc
dec
mov
mov
push
adcb
les
fdivrs
adc
popa
inc
lock
enter
sub
push
add
fcoml
cwtl
pushf
ja
mov
aas
in
adc
adc
pop
scas
bound
cwtl
cmp
mov
int
mov
add
mov
inc
push
cli
dec
mov
aad
sub
mov
fsubrs
cmpsl
inc
js
ficomps
shlb
adc
lahf
ljmp
dec
es
sbb
and
dec
ja
cld
popf
in
push
loopne
fs
sub
loop
in
ss
call
call
mov
mov
xchg
lea
xor
cmp
in
and
fmul
faddl
add
stos
xor
xchg
xlat
mov
dec
pop
dec
hlt
sbb
imul
cmp
daa
mov
cli
in
stc
lock
ret
scas
rolb
add
add
add
add
test
lret
push
pop
mov
mov
fldenv
xor
repnz
jo
fstl
popf
add
cli
sub
adc
add
add
adc
std
repz
mov
and
in
sbb
fstl
popl
js
dec
movsl
xor
mov
mov
adc
mov
push
xchg
sbb
shrb
frstor
push
test
add
add
add
cltd
adc
push
push
call
call
pop
jne
in
add
mov
jmp
insl
xchg
xor
xchg
push
leave
sub
adc
sub
jae
jecxz
add
or
or
xor
xchg
inc
sub
add
add
add
loope
sbb
inc
xor
mov
jb
or
icebp
imul
mov
jne
dec
and
lret
pop
mov
call
call
xchg
mov
push
adc
xor
insb
shrl
lods
std
ljmp
add
add
add
mov
loopne
mov
ss
sbb
push
or
jno
add
sbb
inc
ret
mov
mov
mov
mulw
push
and
xor
imulb
mov
pop
jle
imul
xchg
jmp
dec
cmp
jle
add
shr
dec
fs
jnp
ds
test
add
add
mov
push
jnp
ljmp
adc
jmp
push
inc
ret
adc
add
js
outsb
xchg
sbb
dec
test
aad
xor
lahf
mov
jmp
pop
rcll
lock
leave
xchg
mov
clc
je
enter
xchg
mov
cmpsl
arpl
add
shl
add
add
add
add
add
xchg
mov
loopne
mov
notb
mov
rcr
icebp
pop
push
hlt
cmp
jecxz
cmp
arpl
pop
scas
mov
jg
ljmp
test
add
add
ss
xchg
sub
repz
pop
xor
pop
ret
test
call
call
daa
xor
jns
aad
or
mov
jne
push
outsb
in
mov
add
add
add
add
or
inc
divl
mov
rsqrtps
pop
out
lock
push
clc
insb
dec
mov
cmp
sub
fisubl
dec
push
add
insl
sbb
add
add
add
add
inc
lock
icebp
jo
imul
cmpsl
mov
insb
test
lea
scas
loop
mov
out
ficomps
push
test
dec
mov
scas
into
dec
call
push
fidivl
decb
mov
movsb
fisubrs
push
pop
mov
cmp
sub
mov
cltd
and
add
add
add
add
adc
inc
and
mov
sbb
push
std
pop
add
out
dec
xchg
rorb
out
gs
hlt
push
mov
rcll
popf
sub
sbb
aad
jnp
stc
out
dec
add
pop
push
and
and
mov
add
cmp
jmp
aam
ja
leave
jp
and
adc
mov
sub
adc
cmp
lea
xor
inc
and
cmp
inc
lods
dec
test
xor
call
call
call
js
mov
dec
and
jbe,pn
loopne
fldt
jle
jecxz
mov
out
test
sub
aas
pop
jle
in
data16
fldcw
movsb
push
fwait
mov
mov
ret
iret
mov
pushf
push
stos
mov
icebp
bound
js
xchg
cmp
rolb
push
cmp
mov
cmpsb
add
add
add
add
cmpsb
in
fldl
mov
ss
xchg
loopne
push
push
jl
mov
mov
mov
add
add
add
lock
fbstp
scas
sub
push
scas
imul
inc
pusha
xor
add
add
sbb
add
add
add
pushf
add
sub
outsb
shrl
test
sub
aam
push
test
arpl
sbb
stos
dec
add
push
mov
addr16
rclb
sub
fldl
fmul
lods
xor
andl
ficoml
add
fwait
add
sub
out
fwait
int3
jle
xchg
loope
cmpsl
test
test
dec
fmulp
jno
lds
jnp
pop
pop
push
clc
iret
in
int
fs
xchg
pop
imul
scas
cltd
sbb
sbb
push
jge
sub
mov
sbb
in
pop
insb
sbb
int3
sbb
cli
jmp
cs
in
add
nop
mov
mov
or
test
cs
xchg
adc
cmc
inc
insb
xor
sub
aam
dec
ljmp
and
sbb
or
lods
xchg
call
call
call
call
test
shrb
xor
mov
es
in
lret
out
add
mov
or
je,pn
push
pushf
add
add
add
add
dec
imul
push
sbb
add
mov
xlat
ret
pop
and
or
push
adc
push
xor
jo
sarb
stos
pop
xchg
add
inc
notb
and
add
add
add
add
inc
bound
or
call
call
call
cltd
mov
xor
push
pop
cmpsl
inc
daa
inc
push
xchg
jmp
sbb
add
sbb
add
iret
lret
lea
mov
test
fwait
sub
jb
movsb
push
repz
sub
cltd
enter
push
sub
push
sub
ljmp
jge
add
push
andl
jnp
jb
aam
pop
xor
js
shll
testb
je
xor
lahf
mov
dec
add
adc
sbb
add
add
mov
fldenv
outsl
xchg
xchg
dec
sbb
inc
movsb
adc
push
dec
pop
psubusb
pop
adc
mov
outsb
das
pop
out
dec
cli
call
call
call
call
and
aaa
pusha
cmp
push
movsl
add
cs
mov
jnp
gs
cmp
leavew
xchg
das
pop
xor
add
ds
xchg
fwait
dec
mov
xchg
cmp
call
mov
jnp
cmp
gs
cld
bound
sub
outsl
es
jg
roll
jge
cmp
sub
adc
dec
test
and
rolb
arpl
sbb
insl
movsl
adc
cmp
add
mov
add
stos
pop
pop
jmp
cld
int3
repz
bound
and
es
pop
and
inc
jp
sub
addr16
xor
out
add
add
add
stc
pop
adc
inc
pop
or
add
bswap
cmp
push
scas
push
mov
adc
inc
adc
adc
dec
sbb
testl
add
sbbl
add
add
add
add
sub
add
add
add
add
xchg
out
jg
call
call
call
jge
adc
push
add
lea
outsl
mov
addr16
jae
push
push
imul
sub
xor
clc
addr16
cld
pusha
xor
test
push
lods
aas
dec
pushf
add
add
pop
fcoms
add
add
and
pop
cld
pop
cmpsb
jle
jmp
push
or
add
ss
adc
push
sbb
adc
dec
mov
xchg
gs
adc
adc
xchg
or
jle
imul
jp
lods
je
xor
ja
je
jl
dec
adc
jo
lock
jl
mov
sub
xor
add
pushf
in
cltd
push
inc
jno
je
sub
jge
jle
popf
pop
adc
js
ss
dec
xchg
adc
fldt
or
call
call
call
das
adc
add
pop
sbb
insb
adc
aas
cmc
mov
cmp
jmp
or
call
into
and
in
xchg
imul
adc
rolb
pop
stc
jo
ja
cmp
aaa
movsb
xor
movsl
addr16
xchg
bswap
sub
push
xor
lahf
ds
jae
push
add
rorb
in
adc
iret
dec
fs
lahf
pop
sub
movsl
add
mov
mov
mov
loope,pt
mov
pextrw
xor
xchg
xchg
add
add
add
add
add
sub
cmp
push
jno
cmp
nop
rorb
fsubl
add
and
mov
insb
int3
test
mov
add
aaa
call
and
pop
movsb
jg
popf
shlb
and
and
add
add
jge
push
jecxz
pop
test
dec
adc
jae
jnp
push
push
psraw
pop
sub
inc
repz
test
push
jno
das
xor
repz
add
add
add
add
and
add
ret
xor
xchg
jne
call
call
cltd
adc
adc
aas
jb
or
arpl
sbb
sub
lea
pop
andl
inc
loopne
stos
xlat
jno
bound
inc
arpl
dec
data16
add
add
aaa
push
xor
mov
jae
cltd
aad
pop
xor
ljmp
xor
and
dec
add
outsl
mov
sub
inc
jb
dec
jle
push
icebp
jg
cs
popa
jge
and
dec
mov
insb
leave
mov
outsb
sub
sarb
into
jb
stos
add
add
add
mov
and
pop
jl
imul
je
mov
mov
test
popa
mov
jmp
xchg
lsl
in
cwtl
pop
adc
pop
sub
xor
pusha
scas
inc
int3
and
xchg
arpl
cmp
sub
pop
jns
sbb
imul
insl
adc
jmp
adc
sbb
and
xchg
data16
popa
add
add
mov
and
scas
je
push
or
cwtl
bound
outsl
adcb
inc
icebp
cli
jno
jle
call
call
push
xor
leave
lods
mov
dec
xor
add
add
inc
insl
out
pop
or
add
inc
and
fnstsw
iret
push
mov
scas
push
out
push
pop
mov
sbb
inc
pop
das
xor
lahf
jl
ds
enter
adcl
mov
aam
inc
fstpt
mov
outsb
pop
adc
dec
adc
or
test
xor
lahf
push
adcl
movb
add
push
push
fstl
and
rorb
fsubrl
sub
mov
jle
in
push
mov
jp
inc
hlt
je
syscall
or
daa
lods
mov
or
daa
negb
and
imul
inc
inc
inc
flds
fistps
sbb
add
js
push
xor
push
in
push
sbb
pop
add
pop
mov
dec
xor
fisubs
and
inc
in
pop
or
pop
adc
add
sub
sarb
jle
lds
lahf
aam
xor
cltd
pop
xchg
push
xchg
bswap
sub
jnp
ja
add
push
adc
fdivrs
xchg
mov
mov
sub
sub
xor
lahf
mov
mov
adc
jl
sbb
and
adc
push
popa
fucomip
call
call
add
loopne
cmp
outsb
push
adc
pop
rolb
pop
pop
jp
enter
adc
push
nop
sub
inc
inc
movsb
push
xchg
and
mov
lcall
popa
xor
dec
add
dec
fdivrp
in
out
inc
outsl
sbb
pop
jns
jmp
jae
xchg
adc
add
cmpsl
add
das
or
dec
dec
xchg
and
add
add
mov
jmp
adc
jl
mov
cltd
pop
cltd
lahf
jae
adc
xlat
dec
pushf
aaa
cmp
aam
jae
fbstp
adc
clc
jge
xor
jg
adc
outsb
pop
or
add
adc
add
add
add
daa
cmp
and
cmp
and
scas
imul
add
sbb
aas
sbb
call
call
cltd
pop
pop
in
xor
sbb
or
pop
faddl
jno
push
icebp
sub
idivb
sub
aaa
cltd
pop
dec
and
pop
test
xor
sub
sub
mov
push
fwait
pop
add
or
sub
mov
pop
add
fidivrl
add
inc
cltd
ljmp
ds
push
fimull
ds
sbb
add
gs
jecxz
push
das
iret
pop
adc
inc
dec
addr16
popf
pop
xor
add
add
add
pop
insb
lcall
sbb
fcomp
adcl
das
xchg
in
test
sub
jge
jnp
jmp
add
or
mov
gs
mov
ds
pop
pop
add
popf
pop
daa
hlt
dec
sbb
xor
idiv
jb
movsb
cmpsb
push
push
mov
push
adc
jne
lock
or
test
cmp
jno
mov
call
mov
dec
xor
nop
popw
sbb
sbb
repnz
es
push
push
dec
push
cmp
mov
add
pop
fiadds
call
call
jp
shlb
xchg
pushl
test
push
imul
xor
rorb
xchg
aas
push
xor
mov
dec
push
shrl
cmp
movsl
js
mov
cmpsl
add
setp
jno
jb
ret
lret
mov
insl
push
push
add
es
int
jb,pn
add
add
sub
push
arpl
test
mov
call
call
call
xor
add
and
je
push
out
pop
stos
popa
pop
sub
push
or
jmp
or
pop
test
insb
pop
jb
xor
mov
dec
pushf
cmp
ljmp
add
add
sub
push
je
cmp
push
add
dec
push
pop
or
into
sub
xlat
ds
sub
mov
call
call
popa
sub
stc
into
sub
xchg
jnp
xchg
outsb
ss
orb
mov
push
jge
push
adc
add
add
add
mov
cmp
jo
adc
aas
das
sub
subl
add
add
add
add
dec
addr16
xchg
jecxz
dec
add
cmpsb
js
stos
sbb
and
xchg
insb
add
add
add
add
dec
fs
movsl
push
or
rorb
xchg
cmp
fsubr
push
or
add
jae
rcl
dec
add
add
add
add
repz
repnz
imul
cmp
jge
scas
add
cmpsl
add
clc
test
fucomp
push
add
stos
jo
test
add
sbb
jne
ds
cltd
leave
and
and
and
call
call
fisubrs
cmp
mov
pop
jmp
stos
jb
in
data16
jmp
add
pop
mov
pop
inc
jb
std
mov
push
add
cmp
mov
fdivrs
das
faddl
ret
pop
jp
pop
pop
jle
or
sub
cli
push
cmp
out
push
jle
mov
dec
idivl
xor
fldl
jp
or
push
adcl
rolb
dec
inc
insb
inc
add
add
add
add
add
fcmovnb
or
daa
pop
mov
data16
out
xor
sub
xor
aas
cmpsl
push
pushf
or
push
adc
idivl
pop
pop
jnp
xor
jno,pn
out
pop
mov
call
call
or
add
jne
xor
pop
cli
insl
das
leave
es
mov
pop
jb
pushf
pusha
or
and
adc
arpl
cli
insl
sub
mov
dec
add
pop
pop
decl
or
fwait
pop
and
sub
add
fdivrs
test
xchg
incb
push
decl
cmp
cmp
test
jge
or
mov
jle
mov
push
sub
in
cld
mov
jo
scas
push
stc
push
cmp
adc
movsl
adc
ss
shr
add
add
call
call
call
dec
adc
psraw
add
js
jl
cmp
adcb
lea
pop
adc
aas
mov
sub
xor
outsl
jnp
aam
dec
hlt
mov
and
jl
fcmovnu
imul
roll
fidivs
shl
ss
orb
or
mov
xchg
addr16
dec
sub
push
add
in
mov
push
sbb
mov
repnz
leave
jo
arpl
and
sub
shrl
shll
inc
mov
int
aas
jae
add
cmpsl
in
push
or
push
or
aaa
inc
add
add
add
add
or
jae
out
inc
outsb
pop
cwtl
pop
and
cmpsb
add
cmovs
push
pop
inc
jo
bswap
es
lock
jb
in
dec
xor
pop
sub
or
sbb
push
push
xchg
dec
repz
mov
push
in
mov
inc
std
outsl
test
push
adc
fsts
sub
dec
jnp
add
bnd
jnp
mov
rorb
cmc
pop
add
adc
fstpt
mov
or
push
xor
and
sub
add
add
add
add
imul
xchg
dec
adc
icebp
jno
jl
jae
mov
jb
dec
loop
je
or
pop
or
nop/reserved
xchg
jge
ljmp
xor
lcall
cld
mov
push
rolb
sub
fimull
mov
insl
aas
push
add
xchg
add
add
add
add
sbb
fistpll
call
pop
test
push
add
dec
push
sbb
dec
mov
insb
testl
pop
iret
cld
js
cmpsb
icebp
outsb
push
mov
push
popf
mov
jmp
inc
insb
fs
push
xor
inc
outsl
sbb
test
inc
push
adc
outsb
and
add
add
add
icebp
aas
pop
arpl
jg
jle
clc
jle
inc
mov
push
push
xchg
pusha
sbb
inc
xchg
pusha
push
scas
daa
xor
push
leave
xor
lahf
sub
insb
or
inc
repz
mov
sub
call
call
add
and
outsl
out
arpl
pop
psadbw
add
add
sub
insl
push
jge
mov
jo
pushl
cmp
cmp
filds
jo
pop
rolb
jbe
cld
pop
or
pop
ss
and
inc
addr16
add
add
add
mov
xor
movsl
ret
lock
out
pop
sar
stc
jg
pop
pop
add
hlt
insb
push
aad
aas
inc
or
fisttpl
and
insb
loope
adc
inc
sub
push
inc
jo
add
dec
xchg
cmpb
push
add
sbb
repnz
and
sub
add
add
add
add
jge
ror
push
test
clc
jge
and
ja
mov
xor
and
and
xchg
sbb
insb
pop
faddl
push
int3
jp
cmp
fsubp
pop
scas
pop
push
add
cmp
xor
test
jle
add
pushf
scas
jge
cmp
and
mov
sbb
fiadds
fmuls
adc
std
test
fs
inc
dec
jne
jp
adc
ret
sub
imul
cmp
pop
cs
jb
push
ret
mov
adc
pop
test
or
push
adc
imulb
clc
mov
cmp
mov
mov
add
inc
shlb
shlb
inc
loope
and
sub
pop
or
and
dec
inc
push
cmp
mov
cmp
imull
cmp
pop
inc
ret
or
aas
mov
sbb
dec
jae
mov
dec
pop
adc
dec
loope
add
sbb
aad
xor
fwait
outsb
nop
mov
push
dec
outsl
fimull
add
das
ljmp
xor
lahf
mov
sbb
fwait
jns
loope
xor
lock
jnp
push
push
cmc
adc
mov
cmp
mov
jo
add
and
call
nop
jle
jbe
sub
outsb
dec
mov
adc
jl
add
add
push
ret
sub
in
inc
cld
pop
pop
ret
push
scas
add
dec
sub
add
add
insl
int3
mov
add
inc
push
insb
test
enter
xor
inc
cmp
sub
sti
push
daa
iret
xchg
dec
outsl
jne
jg
dec
pop
loopne
stos
pop
push
jns
mov
or
xchg
popf
gs
in
das
inc
test
imulb
adc
or
push
jl
xor
je
mov
adc
dec
jb
cmp
sub
add
add
add
add
nop
pop
js
pop
add
pop
addb
add
and
jb
sub
push
pop
imull
fisttps
push
xchg
nop
pop
int3
pop
ja
sbb
push
add
dec
mov
or
xchg
pop
sub
xor
pop
nop
jae
push
pop
andl
jmp
dec
push
enter
aad
jge
popf
jmp
outsl
sub
fiadds
xchg
popf
data16
dec
insb
xor
add
popf
inc
pusha
cmp
push
and
lock
cld
sahf
dec
jno
adc
push
test
mov
test
jo
imul
add
les
or
pop
or
sub
fs
sub
pop
or
inc
push
outsb
sub
ret
insb
mov
dec
inc
xor
jl
pop
divl
push
je
pop
test
or
dec
sarb
idivb
cli
js
pop
call
call
pop
push
fs
ja
adc
sbb
pop
add
mov
dec
jp
pop
push
fildl
add
add
add
scas
sub
lods
cmpsb
jns
inc
sbb
imul
jge
lock
add
bound
dec
inc
gs
xlat
inc
das
jmp
jl
adc
fstpl
ss
iret
xchg
mov
sbb
lahf
mov
ss
jle
cmc
mov
xchg
popa
scas
sub
pusha
cwtl
push
insl
in
out
hlt
mov
cmp
jnp
sbb
adc
enter
data16
cs
cli
rolb
dec
jle
push
or
addr16
mov
mov
jns
mov
mov
cmp
xor
xor
add
adc
stos
stos
jo
int3
mov
mov
sub
jecxz
mov
inc
mov
outsl
andl
mov
push
outsb
icebp
fldenv
adc
jo
jmp
xor
add
or
in
ds
in
pusha
dec
add
call
call
pop
cmp
stos
mov
aaa
pop
xor
sbb
insl
shl
imul
test
add
xor
fwait
pop
es
push
cmp
cltd
daa
or
mov
inc
pusha
fs
aaa
mov
aas
sar
push
mov
mov
push
dec
inc
sbb
cmp
fmull
jo
ret
jge
mov
pop
out
sbb
divl
inc
das
add
notl
mov
lods
lds
add
push
inc
ds
out
faddl
mov
and
add
add
add
add
in
add
xchg
shll
or
iret
hlt
mov
dec
call
call
insb
jne
ljmp
incl
jg
and
xchg
clc
je
adc
push
push
pop
mov
jns
cmp
add
add
add
or
jb
mov
add
add
add
add
jno
jp
repnz
dec
fisubl
push
and
gs
add
push
ret
mov
das
inc
mov
xchg
fisubrl
xchg
jno
jo
mov
sbbb
mov
pop
xchg
loop
lea
push
int3
jge
loopne
push
test
movsl
sti
insl
xor
lods
cs
add
mov
xor
adc
loop
aad
pop
movsl
dec
push
ficoml
je
mov
scas
fidivrs
add
lods
stos
divb
popa
in
adc
sbb
mov
xor
ljmp
add
mov
inc
cs
movsl
xchg
jmp
or
mov
insl
lds
fildl
mov
popa
out
add
add
add
mov
or
sbb
stos
or
imul
pushf
jl
arpl
cli
push
xchg
in
mov
push
xchg
roll
js
sub
and
aad
mov
call
jle
xchg
xchg
lock
mov
and
test
mov
jo
test
roll
xchg
adc
add
xor
scas
push
jbe
mov
push
pop
aad
xchg
cli
fld
call
or
adc
inc
jbe
jae
or
test
cltd
pop
dec
cmp
add
je
push
mov
mov
insb
push
jge
mov
andb
fs
jnp
push
jno
pusha
and
call
call
movsb
adc
cs
lcall
mov
or
xchg
mov
cmp
mov
cltd
mov
gs
pushf
jb
pop
jne
insb
imull
adc
shl
push
jns
test
leave
dec
out
push
pop
scas
pop
imul
jmp
addl
dec
test
ljmp
add
xor
das
xchg
fdivp
jne
cmpsl
jge
add
add
add
add
pop
imul
push
fists
stos
in
cmpsb
sti
movl
sbbb
insb
fwait
push
jg
js
scas
fstps
inc
outsb
xor
arpl
push
mov
adc
js
and
mov
out
inc
ljmp
call
call
and
lret
and
out
pushf
sub
gs
insl
inc
or
cld
int
add
add
repz
dec
addr16
inc
call
rolb
cpuid
sbb
push
mov
rorb
add
add
sub
or
ds
mov
test
sub
mov
leave
cwtl
loopne
cmp
lds
jmp
dec
jo
add
add
lds
and
scas
push
shll
div
std
xchg
out
scas
xchg
imul
scas
sbbb
xchg
sbbb
jae
aad
insl
xor
push
jp
xor
xor
les
jnp
dec
negl
int3
or
out
loopne
out
in
pop
das
xor
mov
stos
sahf
aam
idivb
out
setne
mov
das
sbb
sahf
pop
mov
jnp
sbb
test
add
add
add
add
inc
comiss
sbb
in
rorb
sbb
push
adc
adc
mov
cltd
fxch
sub
cmp
imul
pushf
dec
or
pop
push
inc
daa
pop
or
pop
sub
add
or
jae
lcall
add
cmp
gs
cmp
addr16
in
and
pop
dec
cltd
lahf
fs
push
push
addb
xchg
lock
push
fadds
xchg
incl
add
mov
cs
sahf
imul
or
out
jae
ljmp
rcrl
add
cld
mov
push
cmpsl
es
in
inc
jle
xchg
mov
mov
nop
xchg
sbb
das
mov
pusha
lods
ljmp
mov
sti
lods
dec
push
inc
outsl
push
sahf
out
loope
leave
adc
pop
ret
jb
adc
cmc
sbb
pop
mov
adc
add
push
mov
ljmp
scas
and
jg
pop
jne
in
pop
lahf
mov
mov
sub
into
mov
xchg
pop
mov
mov
shlb
pop
pushf
repz
dec
clc
push
pop
gs
xchg
fisubs
dec
flds
test
add
scas
ds
jecxz
and
adc
adc
mov
add
add
sbb
push
lds
push
push
loop
cmp
xor
ljmp
call
aas
mov
out
les
xor
xor
sbb
shrb
cmc
hlt
adc
mov
cmp
sub
xchg
lret
xchg
ss
sti
xchg
lods
les
sbb
sub
rolb
jne
jmp
jge
xchg
dec
int3
mov
enter
ja
jmp
dec
loope
xchg
std
cld
cwtl
jp
jb
frstor
scas
arpl
xchg
sbb
add
ja
xchg
imul
out
into
addr16
insb
add
pop
cmp
enter
daa
fs
gs
jmp
mov
xor
out
iret
or
ja
mov
lods
sub
popa
sub
add
add
pop
cvtdq2ps
loop
sti
jne
xchg
gs
icebp
push
mov
sbb
xchg
idivl
in
inc
fwait
push
add
cmc
rcrl
pop
jb
mov
cmpsb
sahf
outsb
mov
jne
int3
dec
and
out
ljmp
inc
adc
add
add
add
add
mov
jmp
dec
add
or
pop
xor
mov
mov
push
pop
and
hlt
or
fnstenv
shlb
sti
cmp
cltd
inc
jg
shl
jle
or
loopne
cltd
fdivs
push
outsb
cmp
add
add
add
cltd
adcb
rolb
pop
test
xor
les
jg
rcr
add
hlt
and
loop
push
pop
insl
push
bound
mov
jl
mov
sbb
xor
push
call
call
push
or
pop
xor
mov
cld
inc
xchg
lret
dec
push
in
cld
movsl
in
clc
inc
pop
or
add
sub
sub
dec
je
and
out
push
mov
inc
ja
stos
fwait
imul
push
dec
es
cmpsl
jbe
dec
repz
clc
inc
in
dec
into
or
push
insb
add
outsl
lock
mov
add
add
add
dec
cs
sub
adc
or
loop
int3
insl
fwait
pop
rcrl
pushf
out
pop
pop
xor
xor
insl
cwtl
push
or
push
ss
neg
cmpsb
fisubrl
push
mov
push
test
jbe
lret
dec
popa
ljmp
add
and
cli
mov
pop
ja
cmp
int
std
cmp
jle
xchg
aam
test
push
xchg
xchg
and
pop
mov
testb
cltd
adc
push
xchg
pop
and
xchg
inc
push
out
mov
cmc
mov
add
xchg
mov
dec
call
call
call
rorl
push
jb
sbb
arpl
xor
ficoms
fisubs
addb
add
add
add
test
xor
and
in
sarb
dec
and
add
add
push
xchg
sahf
testb
loope
sahf
mov
and
push
lret
cs
test
in
out
je
adc
add
add
add
push
scas
push
shrl
push
cwtl
insl
dec
dec
bound
adc
je
pop
jmp
jg
push
add
adc
jge
push
dec
ret
shrl
jo
lods
in
mov
lock
fists
add
out
dec
notb
xor
insb
lods
and
call
call
rorb
jns
ret
xor
dec
vshufps
and
mov
xor
out
stc
addr16
adc
test
inc
or
jns
inc
dec
sbb
testl
push
repnz
fwait
jmp
dec
mov
inc
loop
and
mov
add
add
jmp
jp
std
fdivl
jge
push
daa
xchg
in
and
dec
mov
or
outsl
stos
mov
jmp
fnsave
int
mov
add
pushl
scas
or
int
xor
in
xchg
lahf
outsl
inc
push
in
in
cmp
out
rorl
jo
xchg
aad
les
add
add
add
add
sbb
dec
jle
add
mov
jge
ds
pop
stos
inc
orl
sbb
add
pop
int
in
std
out
fisubs
mov
cltd
fucomip
push
nop
leave
sub
add
xor
enter
and
daa
adc
aad
cmp
jecxz
or
adc
add
add
aaa
js
xor
cmpl
call
add
add
add
add
fisubs
pop
dec
pop
cmp
sbbb
test
add
mov
cwtl
jbe
in
js
jge
inc
cmp
fiadds
lea
mov
divl
lock
daa
add
pop
adc
add
xchg
add
sbb
push
je
out
inc
test
cmc
sub
shll
cmpsb
in
js
jae
pop
and
in
push
sub
cmp
inc
pop
wbinvd
pop
addr16
and
cmp
add
add
iret
adc
jecxz
mov
jp
adc
push
sbb
mov
fs
call
jne
jbe
pop
movsb
rcr
scas
arpl
in
sub
stos
add
add
add
add
popf
outsl
pusha
loopne
jecxz
call
call
call
aaa
cmp
xor
mov
mov
or
cmp
add
lods
es
cwtl
cmp
lds
mov
adc
notb
test
mov
fsubrl
insl
gs
adc
mov
add
nop
int3
sbb
jne
dec
dec
cmp
cs
mov
xor
jg
fs
and
out
and
pusha
dec
out
cmp
add
add
fwait
loop
or
sbb
jmp
ss
mov
ljmp
fnop
inc
cltd
mov
insb
cs
addr16
and
sub
call
mov
nop
mov
pop
cltd
bound
jns
xor
or
jecxz
cmp
addr16
call
gs
negl
jae
lock
add
add
sbb
xor
xor
pushf
xchg
xchg
sub
imul
mov
jns
into
mov
mov
clc
pushf
sub
jae
stc
inc
loopne
sbb
ljmp
add
js
daa
cmp
popf
push
scas
adc
or
mulb
in
inc
mov
cli
pop
adc
add
push
xchg
je
pop
and
adc
mov
lds
and
loope
lods
addb
add
add
add
add
jo
in
mov
pushf
adc
cmp
mov
mov
lock
jno
fldcw
test
adc
sarb
cmp
dec
jne
sarl
icebp
add
mov
xchg
jb
sub
test
scas
lods
das
add
in
clc
stc
inc
call
inc
mov
fmul
enter
mov
or
or
addb
ja
jmp
in
nop
cs
xchg
adc
repnz
icebp
fildll
dec
pop
sub
jp
sub
inc
stos
popa
sbb
jae
and
sub
mov
xor
das
inc
push
jb
adc
add
fwait
jg
in
ss
das
xor
popa
push
pushaw
lods
mov
outsl
fwait
addr16
fwait
pop
push
inc
xchg
xchg
fldenv
add
add
mov
in
pop
push
movsb
add
dec
insb
xchg
add
mov
testl
sbb
setp
imul
test
push
fisttps
outsb
mov
lahf
add
outsl
arpl
add
sub
fsub
mov
dec
pop
adc
and
pop
sbb
cmc
nop
and
insb
test
jle
pop
ja
add
add
add
add
jp
or
outsl
mov
stos
ficompl
icebp
imul
mov
dec
sbb
sub
dec
ss
cmp
test
xchg
insb
fisubl
loop
ds
call
call
fisubrs
cmc
mov
add
add
add
mov
sbb
push
jnp
jns
shr
test
push
scas
sahf
jle
cld
jnp
pop
sub
es
rclb
mov
dec
push
and
and
jl
mov
sub
push
vmovapd
mov
inc
iret
into
cmpsl
xchg
inc
es
jns
lods
and
pop
mov
addr16
in
inc
lcall
add
add
inc
or
das
sub
pop
push
ds
aad
push
popa
add
inc
push
jl
test
std
jl
je
lret
xor
fstpl
xlat
mov
add
add
in
lds
xor
clc
cmpsb
cs
jbe
idivl
pop
adc
cmp
pusha
adcl
add
add
add
shll
mov
cmc
scas
push
in
outsb
jb
ret
arpl
cmpsl
push
sarb
les
sahf
mov
rclb
in
push
std
out
jbe
std
call
call
movsl
pusha
jp
push
mull
cmpsl
jbe
aas
rcll
add
add
add
xor
sbbb
mov
pop
test
fucomi
das
fwait
dec
push
fidivs
ja
adc
mov
pop
mov
jecxz
inc
nop
loop
pop
pusha
adc
clc
mov
mov
xchg
and
fstpt
fscale
xor
mov
or
fisubrs
add
add
add
loopne
sub
push
iret
sbb
aaa
inc
xlat
push
fwait
outsb
loopne
push
lcall
stc
push
cld
in
test
jp
cld
inc
and
push
jns
sti
push
xor
out
jg
js
ret
sub
mov
popf
dec
ss
xchg
imul
mov
test
call
and
call
call
cmpsl
pop
jbe
icebp
in
mov
lds
mov
test
or
sub
mov
das
lods
incl
add
add
and
sbb
add
push
push
sbb
das
scas
je
sbb
cmpsl
xchg
sub
jo,pn
mov
in
inc
lahf
jmp
jns
push
les
out
aaa
jg
das
sbb
push
lahf
inc
imul
add
int
lahf
pop
loopne
add
add
add
or
test
dec
aas
mov
mov
mov
je
cmp
cmp
mov
add
xchg
fwait
adc
stos
fldl
add
add
add
popf
stc
mov
mov
push
test
sti
mov
add
xchg
push
data16
nop
add
add
add
add
inc
mov
lods
push
popf
xor
cltd
mov
lods
adc
xchg
aas
sbb
sarb
mov
hlt
dec
pop
xchg
mov
outsl
fnsave
imul
daa
lods
imul
jns
sti
in
pop
mov
inc
test
shlb
call
call
cmp
push
mov
inc
and
adc
push
popa
cmp
pushf
pop
fs
dec
xchg
insb
fadds
xor
add
add
add
dec
or
sbb
add
lea
xchg
pop
ds
sbb
cmc
fmull
insb
outsb
stc
js
mov
out
push
fcoms
push
add
cwtl
pop
aam
lahf
in
xchg
scas
insl
push
xchg
and
ret
negb
gs
fsubrl
jg
xchg
push
sar
sub
lcall
xchg
test
add
inc
pop
push
mov
popa
pop
or
adc
int3
cmp
shll
xchg
hlt
jno
dec
dec
lock
mov
scas
jp
pusha
movaps
aas
lret
bound
jae
fdivrs
adc
hlt
fmuls
rcrb
sub
add
add
add
add
mov
aaa
push
inc
repnz
push
arpl
cmp
mov
sub
push
imul
lret
out
mov
push
push
mov
add
add
add
add
incl
inc
jl
mov
call
call
in
movsl
mov
push
divl
add
jle
dec
test
shr
add
dec
fdivrs
jb
or
int
adc
or
add
xchg
add
loopne
or
shrb
test
jno
xchg
add
decl
int3
cmp
out
xor
ja
push
add
add
add
in
mov
add
out
add
mov
sahf
push
gs
pop
in
push
jno
lods
leave
outsb
es
and
repnz
in
in
or
loopne
add
add
push
fld
push
dec
jns
or
pop
dec
and
adc
imul
or
test
nop
adc
clc
fidivs
sub
inc
das
or
pop
jbe
je
fcoml
jbe
adc
jne
add
ja
insb
dec
and
add
cs
das
dec
push
lods
stos
fisubrl
rcll
outsb
test
jne
push
cmp
je
loop
inc
lahf
jmp
sbb
push
popa
mov
test
dec
in
popa
popa
mov
ja
fistpl
add
add
add
lea
sbb
stos
jbe
dec
dec
gs
xchg
sbb
sbb
imul
adc
ss
push
in
push
lds
sub
dec
push
cmpsb
aas
pop
xor
mov
sub
stos
dec
xor
mov
mov
call
call
call
jle
pop
aad
adc
xchg
pop
movsb
cmp
mov
and
inc
int3
lods
add
xchg
movsb
sbb
xchg
fdivrp
pop
xlat
and
mov
dec
xorl
mov
adc
jae
call
call
cmp
and
frstor
xchg
mov
jo
adc
das
outsl
dec
and
call
push
cmp
jbe
cmp
inc
out
and
cmpsb
push
sub
jl
xlat
arpl
jae
cltd
xchg
daa
push
and
or
fsqrt
dec
jno
jg
cwtl
mov
pop
pop
ret
lret
flds
add
add
add
and
loope
inc
mov
pop
push
out
in
testl
add
add
add
xor
or
pop
movsl
jae
roll
push
lret
sahf
xlat
imul
pusha
cmpsl
push
movsl
pop
popa
das
stos
jl
jns
dec
add
outsl
inc
mov
and
movsl
shrl
cs
xchg
mov
pop
loop
inc
push
imul
nop
mov
pusha
jne
or
or
mov
cmp
add
cmp
mov
push
jno
jle
stc
push
and
inc
push
pop
loopne
repnz
in
jae
imul
outsb
lahf
mov
push
sbb
or
out
or
inc
and
jl
sahf
add
add
add
xlat
js
xorb
push
scas
addl
inc
inc
pop
aad
ds
jl
pop
push
dec
out
and
std
add
fiaddl
or
fs
pop
sahf
or
jne
adc
adc
test
call
call
push
push
xchg
add
pop
pop
push
ss
aaa
xor
sub
mov
push
rorb
ss
outsl
sti
xor
mov
push
lods
test
mov
in
lret
dec
pop
mov
mov
popa
ds
and
cmp
lret
jae
js
popa
mov
mov
and
add
add
add
cmp
cmovp
push
jecxz
int
pop
jns
push
inc
and
push
and
add
cmp
and
pop
ss
xor
fwait
add
vmread
add
add
add
mov
sbb
pop
xor
lock
inc
dec
int3
mov
mov
inc
cmp
push
shll
push
iret
rorl
or
push
sti
fwait
punpcklwd
out
outsl
ret
test
mov
or
pop
mov
mov
inc
jae
mov
add
push
add
add
add
add
add
icebp
aaa
adc
outsb
mov
pop
dec
int
push
pop
es
sahf
daa
sbb
bound
jnp
pop
lret
push
xchg
mov
es
dec
push
movsb
inc
cmp
call
call
ret
scas
mov
mov
push
push
stos
imul
in
sbb
pop
pop
sub
cld
cmpb
outsl
in
insb
clc
jne
adc
and
pop
daa
lea
xor
jmp
xor
pop
push
adc
inc
inc
jns
lcall
shl
xor
repnz
test
ret
ja
test
jae
pop
icebp
sub
stc
out
insl
dec
fsts
mov
add
mov
or
mov
pop
and
int
mov
mov
dec
add
add
adc
imul
aaa
fadd
roll
pop
jo
inc
xchg
test
rcrb
xchg
adc
paddb
add
sbb
inc
xor
pushf
inc
sub
cli
cmp
inc
inc
xor
shll
pop
or
fmull
inc
stos
mov
cmp
out
sub
push
jge
call
call
xor
or
neg
call
xor
scas
in
mov
xor
sub
add
and
enter
aaa
pop
insb
in
or
cltd
or
bound
addr16
sub
push
cmp
les
repnz
xor
sarl
or
push
add
adc
pop
push
int
sub
push
daa
stos
dec
push
jae
les
add
popa
and
mov
push
rol
cmp
lds
xchg
mov
inc
pop
lods
inc
jmp
push
outsl
inc
cmpsl
rcrl
jbe
icebp
inc
add
jge
add
pop
pop
mov
mov
jmp
xor
addr16
add
lea
and
jne
push
les
dec
negl
push
add
add
and
loop
addr16
in
and
pop
int
sub
cld
addr16
lock
inc
mov
loop
pop
jb
negb
pop
add
cmp
jns
inc
adc
mov
sub
sbb
adc
testl
jns
aam
sbb
add
add
add
add
sub
push
test
jbe
dec
aaa
or
cmp
aas
inc
xor
jo
push
mov
add
add
add
mov
adc
scas
inc
fnstcw
bound
data16
add
sbb
jmp
in
or
dec
adc
add
movsl
xchg
or
call
call
cmp
cs
inc
jne
or
add
add
add
add
and
or
daa
mull
dec
out
dec
dec
adc
out
out
add
push
std
mov
jbe
and
sub
scas
and
xor
cmp
xor
daa
cld
and
cmp
add
add
sbb
ret
pop
and
adc
mov
int3
jno
outsl
mov
repz
sub
jle
mov
push
pop
jns
pop
xchg
int
jbe
test
sub
icebp
sti
jne
ret
cmp
sti
push
inc
scas
push
pop
jno
add
xor
cmp
push
cwtl
aad
add
pop
mov
mov
fsubrl
push
pusha
jnp
xchg
dec
sbb
and
add
pusha
pusha
sub
call
call
sti
jecxz
inc
cwtl
and
mov
pop
and
aam
dec
lcall
pusha
pop
mov
jle
mov
sbb
fldenv
pop
or
push
dec
data16
sbb
out
cmp
imul
in
inc
aad
jl
jne
call
call
dec
sbb
or
mov
pop
and
dec
mov
xor
dec
das
mov
test
shll
je
xcrypt-cbc
cmpsl
push
lcall
mov
je
cld
push
pop
test
call
call
call
jnp
in
ss
xchg
add
add
push
ret
test
pop
movsl
subl
add
or
cmp
cmc
cmp
dec
pop
mov
and
jns
cmp
jg
mov
jne
xchg
mov
xor
xchg
movsl
push
xchg
jl
pop
stc
inc
push
inc
dec
ret
fs
cmp
es
and
add
add
stc
sbb
out
sbb
or
push
lods
or
push
pushf
add
lret
jae
or
sbb
scas
rolb
and
repz
dec
lea
add
add
and
fdivl
in
xor
jbe
dec
test
inc
inc
repnz
inc
enter
data16
insb
inc
out
add
pop
adc
pop
push
push
outsb
or
call
call
loop
push
shl
or
xchg
push
cld
dec
sarl
push
js
addr16
sub
orl
add
add
add
sub
ds
je
and
dec
arpl
mov
jp
or
repnz
fiaddl
arpl
mov
ret
call
add
call
call
push
data16
add
add
and
adc
and
adc
add
cmp
cs
jb
adc
sbb
stc
test
jmp
mov
push
jb
cmp
or
pop
mov
add
pop
cld
or
call
daa
inc
dec
push
and
adc
ret
push
cwtl
test
je
add
push
fldl
pop
xchg
jo
mov
cmovnp
out
ret
daa
rcrb
adc
int
cltd
xor
ja
mov
inc
ss
in
xor
inc
or
inc
mov
rolb
loope
pop
xchg
mov
and
or
jne
mov
add
inc
mov
shlb
or
push
arpl
push
push
jp
test
adc
adc
add
add
das
bound
dec
loop
xor
inc
pop
sbb
adc
sbb
adc
aaa
inc
inc
pushf
je
xlat
paddsw
int3
pop
outsl
xchg
mov
add
repnz
add
cmp
add
add
add
sub
or
jle
rclb
cmp
outsb
and
insl
push
pop
push
pop
pop
sarl
hlt
inc
push
stos
adc
push
sbb
test
cld
sbb
adc
imul
or
push
out
push
jl
and
fidivrs
push
lds
movsb
pop
outsl
outsb
and
roll
push
mov
dec
das
dec
call
inc
inc
push
mov
xor
call
call
call
inc
sub
arpl
sub
sub
stos
push
add
add
cwtl
imul
add
xor
in
and
mov
dec
pop
mov
add
add
add
add
sbb
inc
add
loopne
cmpsl
or
fcoms
pop
adc
inc
cmp
mov
int
or
mov
cmp
fcom
data16
add
pop
xor
push
inc
les
and
ss
into
adc
add
add
add
jb
and
push
dec
fstl
pushf
jne
xchg
dec
test
mov
insb
fistpl
mov
jle
aaa
std
fistl
jns
sub
mov
lds
out
data16
bound
jns
jg
dec
pop
cmp
lret
mov
push
push
mov
inc
cmp
ret
add
movsb
push
cs
ss
mov
and
ds
inc
add
call
call
aas
pop
inc
in
jp
call
call
push
enter
xchg
xor
or
mov
insl
sub
xchg
mov
mov
lcall
sub
or
mov
scas
cmp
jl
ret
popf
mov
adc
push
insb
push
jl
mov
or
jo
cmp
mov
sub
add
add
add
pop
mov
mov
push
scas
push
push
jo
xchg
sar
sbb
jle
mov
call
add
mov
andl
cmpb
mov
xlat
push
arpl
or
cmp
dec
sbb
mov
or
fwait
xor
mov
ja
add
jbe
sub
sti
add
xchg
pop
pop
push
jbe
sub
leave
push
jg
adc
aad
inc
mov
pop
or
movsb
add
or
jecxz
pop
shrl
lcall
xor
les
ja
arpl
out
sub
enter
mov
push
pop
aaa
decl
jbe
das
lds
add
and
js
and
sbb
adc
add
ret
das
sbb
push
pop
lods
xor
bound
into
add
adc
enter
mov
cmpsl
sub
xchg
xor
std
clc
sub
mov
fimull
mov
and
dec
dec
out
dec
jbe
inc
sbb
xchg
bound
inc
cmpsb
jb
add
loopne
xchg
hlt
add
adc
or
loope
call
call
call
test
xor
inc
inc
jno
sbb
cmp
add
add
add
add
scas
add
jae
leave
adc
inc
mov
pop
mov
cmpsl
shll
ss
and
sbb
mov
add
hlt
in
das
mov
jl
dec
mov
imul
call
call
add
dec
jns
gs
iret
mov
mov
dec
jg
testl
jno
mov
pop
rorl
xor
cmp
push
push
push
adc
aam
cmc
es
xor
ljmp
sbb
loopne
push
mov
add
add
add
mov
mull
nop
loopne
sub
inc
lods
and
cwtl
mov
pushf
adc
nopl
bnd
call
call
pop
jle
ret
mov
xchg
adc
sub
push
or
add
dec
push
push
mov
mov
es
outsl
mov
sub
sbb
lea
jns
fistpl
divps
fwait
and
xlat
fcoms
pop
mov
and
or
pushf
push
jae
cltd
adc
cmc
sbb
fcompl
pop
call
push
aad
lock
add
add
cmp
or
cltd
sbb
or
xor
sub
mov
rol
outsl
sub
popf
mov
cmp
add
cli
sub
add
lret
lea
fs
mov
add
add
imul
push
leave
movsb
cmp
xchg
out
add
addr16
arpl
fwait
sbb
shlb
sbb
adc
andl
loop
pop
inc
push
repnz
icebp
ds
cmp
push
and
add
mov
mov
sub
xor
add
add
add
mov
data16
jnp
sub
and
jl
fstps
imul
sbb
sub
jge
cmp
mov
rcll
data16
xor
stc
mov
sbb
nop
mov
movsb
and
inc
add
add
daa
mov
push
fdivrl
jbe
mov
mov
pop
ds
jbe
xor
and
dec
sbb
stos
fsubrp
call
call
sbb
pop
and
lahf
sub
outsl
push
mov
push
sbb
mov
or
mov
or
hlt
sub
jmp
pop
cmp
or
push
sbb
jmp
pop
add
add
add
cmp
sbb
push
jno
hlt
imul
pop
int3
jne
push
jnp
xor
lds
insl
mov
lods
inc
jbe
sbb
pop
inc
inc
cmp
and
cmp
js
sbb
add
mov
lock
and
cmp
push
arpl
sub
rorb
jnp
rcll
sti
sti
adc
and
dec
push
push
mov
imul
insb
sub
xor
inc
enter
into
lcall
das
cli
sbb
adc
add
aad
pop
mov
lret
imul
pop
dec
jecxz
enter
add
jmp
sub
in
dec
and
fldenv
sbb
dec
jmp
fsubrl
sub
mov
and
imul
pop
inc
cld
jge
test
nop
push
popa
pop
push
push
pop
dec
sbb
jns
lahf
sbb
hlt
sub
out
sbb
dec
xchg
push
mov
and
mov
sub
es
mov
movsb
dec
jmp
movsl
inc
adc
xchg
push
gs
ljmp
pop
jne
sbb
jp
fildll
fadds
sub
xor
inc
jle
test
mov
fs
mov
add
aas
jns
adc
jp
push
push
out
xchg
daa
pushf
xlat
ss
scas
pop
push
movsb
add
jmp
push
add
pop
arpl
call
call
xor
inc
sbb
sub
cli
in
jl
or
fisubrl
pop
jbe
pop
add
dec
cmp
dec
addr16
inc
decl
push
adc
push
data16
or
pushl
jbe
mov
or
or
xor
int
aas
and
xchg
xchg
pop
das
sub
pop
sbb
jae
inc
add
add
dec
or
cld
dec
xorl
jmp
adc
jnp
adc
xor
sbb
dec
cld
roll
add
add
xor
inc
pop
les
adc
fwait
push
xchg
pop
and
stos
inc
inc
pusha
test
lahf
dec
rorb
mov
mov
xchg
jno
mov
popf
insb
iret
jns
add
inc
outsb
ss
nop
int3
movsl
add
xor
outsb
and
or
fs
jle
ficoms
je
out
and
pop
repz
outsl
pop
or
daa
inc
and
jno
sbb
mov
cmp
loope
or
daa
adc
aas
outsb
negb
call
call
call
sub
outsl
daa
add
and
sbb
push
sarb
js
addb
pop
int3
js
push
in
inc
push
add
xchg
and
mov
imul
cmp
add
fstpl
js
dec
jb
push
pushf
push
subb
fld
and
outsl
dec
pop
add
int
das
or
xor
lea
xor
cmp
mov
jg
and
inc
jge
mov
ja
js
push
mov
push
add
sti
jns
mov
xchg
sahf
add
jmp
xor
push
jl
aaa
push
jp
xchg
adc
and
cmp
mov
sbb
xor
lock
call
mov
in
inc
cmp
adc
cs
call
call
sub
mov
lods
dec
fwait
push
push
ds
fimuls
push
clc
push
push
stos
add
xor
add
add
push
adc
aas
mov
fnstsw
xor
lahf
jl
imul
cmp
stc
mov
push
add
jns
ficoml
sbb
sti
sub
cltd
cmpw
in
sub
push
jnp
pop
push
pushl
add
inc
nop
mov
jnp
shlb
dec
rol
push
cmp
es
movsl
js
rolb
push
mov
xchg
pop
shufps
add
pop
lds
ja
add
js
xor
ds
pop
or
aas
push
jnp
or
xchg
pop
sub
leave
cs
mov
insl
jl
daa
cmp
cs
arpl
test
js
cmpsl
jnp
add
stc
jbe
insl
fsubl
add
add
add
es
pop
sbb
sbb
mov
cs
adc
jno
arpl
dec
insb
sub
outsb
inc
jl
call
call
call
stos
or
cmp
pop
xor
or
lea
sbb
add
add
add
jg
ja
insb
fimuls
pop
mov
fs
xchg
or
sbb
movsb
cmpsb
cmpsb
sti
cmp
imul
push
inc
adc
pop
cli
arpl
aas
push
pop
cs
mov
sahf
insl
and
push
sub
add
add
add
add
cs
xchg
jnp
xchg
jg
jno
pusha
adc
aaa
mov
cmp
jne
fs
mov
sub
lods
add
add
add
dec
push
or
sbb
xchg
sub
push
fisttpl
mov
js
pushf
or
push
mov
adc
add
icebp
push
add
sbb
dec
ret
aas
mov
mov
jae
das
lds
push
and
dec
xchg
hlt
mov
rcpps
lahf
push
or
inc
dec
call
mov
movb
cmp
lods
sub
xchg
push
aam
jnp
pop
add
xchg
int3
pop
sbb
jle
iret
movsb
les
js
shlb
dec
xor
and
fs
xor
or
je
fwait
int
movsl
pusha
add
push
js
mov
inc
imul
ss
inc
int3
push
mov
add
add
das
jl
fisubs
inc
pop
sub
call
call
call
add
add
add
and
lds
lret
pusha
aas
movsb
add
mov
out
das
push
lret
or
loopne
sub
xor
and
repnz
jne
popl
add
pop
nop
mov
add
add
add
add
cs
cli
pop
jno
jp
pop
dec
fwait
in
sbb
inc
ja
fs
add
xor
out
jo
ja
stc
adc
dec
pop
cmp
out
dec
jle
adcl
out
insl
loop
jg
add
sahf
hlt
add
adc
mov
push
lea
cmp
push
aas
pop
or
cmp
lods
in
icebp
enter
push
mov
add
add
xor
and
adc
outsb
andl
add
out
mov
push
fsubl
dec
sti
xlat
mov
pop
enter
call
cmpsb
shl
mov
push
add
jns
imul
mov
repz
add
add
push
bound
cmp
xor
push
and
xchg
incb
in
jne
fmulp
out
push
or
lods
xchg
scas
push
add
int
and
clc
sub
mov
inc
outsl
loopne
arpl
add
xchg
xor
das
mov
and
and
sub
pushf
iret
out
or
and
shr
jno
adc
cmp
mov
xchg
adc
fimull
jno
stos
jp
adc
mov
add
pusha
mov
adc
cmpsl
jp
jo
xchg
aam
cmp
call
call
call
dec
adc
orl
adc
mov
add
ret
sub
or
mov
push
stos
push
lds
adc
pop
out
push
repz
add
and
mov
sub
jb
out
pop
pop
xchg
xchg
push
sbb
xor
adcl
mov
mov
dec
lods
bound
xor
sub
jg
and
add
add
aas
clc
jno
pop
outsb
dec
mov
inc
loope
xchg
je
mov
or
add
mov
lret
sti
mov
repz
test
push
inc
test
cmp
mov
inc
in
jbe
fs
push
outsb
adc
sbb
mov
call
call
dec
mov
inc
lods
add
add
add
add
add
add
add
lahf
es
inc
flds
jl
popf
push
sar
adc
in
fsub
mov
cwtl
out
clc
mov
mov
outsl
push
jge
popa
push
xchg
add
je
sbbl
call
add
add
add
add
xor
add
addr16
je
adc
test
insb
stc
loop
in
out
mov
or
rsqrtps
jnp
icebp
jg
xor
jno
test
xor
gs
and
add
call
call
sbb
mov
jecxz
inc
xchg
idiv
lea
fists
cmp
inc
das
jo
inc
sub
pop
std
inc
adc
and
hlt
adc
movsl
lahf
iret
push
sbb
push
in
outsl
add
push
iret
stc
dec
mov
addr16
xchg
pop
mov
pop
insl
mov
sbb
sub
shll
pop
jbe
mov
rcr
outsb
sbb
add
shlb
add
enter
addr16
inc
adc
fcoms
imul
push
lcall
mov
incl
rorl
inc
xchg
ret
sbb
add
xchg
pop
lods
lret
test
ret
sub
adc
mov
xchg
insb
mov
aam
lcall
add
add
add
cmp
ja
mov
jge
xchg
jmp
push
cs
ja
ljmp
mov
ret
push
out
sub
xlat
cld
push
loope
int
mov
mov
jmp
add
jge
loop
dec
dec
ror
stos
in
cmp
mov
push
pop
push
inc
sub
or
sahf
pop
call
call
fistpl
pop
pop
add
add
add
add
iret
inc
outsl
test
cs
jne
mov
and
add
pusha
shrl
jge
jno
ja
xchg
adc
stc
mov
insb
imul
icebp
popa
int
sub
and
xor
mov
pushfw
cmp
push
enter
not
or
mov
aad
push
imul
test
add
mov
add
mov
pop
sti
pop
xor
pop
mov
push
arpl
leave
pushf
pop
push
insb
leave
in
xor
or
mov
mov
mov
or
cmpsl
in
dec
add
popf
sub
mov
cli
lods
xorl
outsl
add
xor
lahf
call
dec
aaa
fnstcw
add
add
aad
add
adc
jmp
sub
xor
popa
sub
ljmp
bound
dec
loope
pop
das
arpl
testl
mov
jg
mov
dec
cmp
adc
insl
pop
sbb
mov
inc
jecxz
cmc
iret
mov
cli
gs
call
sar
lcall
pop
rcrl
leave
mov
addr16
movsb
adc
dec
mov
xlat
add
shrb
add
sbb
cmp
mov
inc
jne
inc
es
stc
xchg
pop
xchg
sub
cmp
pop
fdivs
in
sub
push
outsb
js
ds
in
orb
cmp
xchg
popl
xor
call
call
call
loope
shl
sub
cmp
xorl
adc
inc
cmp
clc
add
add
mov
jle
xchg
add
add
add
add
pop
stc
mov
in
lret
xor
loopne
sub
scas
jge
push
inc
xor
aad
jle
stos
lret
xor
or
jns
dec
mov
add
aaa
and
cld
rclb
pop
adc
lea
nop
and
push
mov
movsb
pop
pop
dec
push
push
repnz
pop
push
add
mov
mov
mov
ret
icebp
ret
jg
cs
orl
insb
push
fidivs
pop
pop
adc
xor
mov
ja
leave
outsl
sub
cmp
aas
dec
in
sub
dec
daa
movsl
in
dec
pop
xor
dec
mov
scas
lods
sub
mov
xchg
test
lea
pushf
out
xchg
xchg
sub
int
push
inc
jmp
jp
bound
sbb
sub
push
insb
push
pop
push
adc
mov
mov
cld
jb
push
sub
add
add
add
add
mov
iret
test
add
push
cmp
add
inc
andb
call
call
push
fwait
xchg
in
add
mov
fdivl
mov
popa
adc
jb
sub
mov
xchg
dec
ljmp
sub
test
cmp
push
and
ss
mov
jo
cmp
mov
and
mov
dec
push
mov
arpl
add
add
add
sbb
insl
xchg
sub
mov
mov
push
sbb
dec
icebp
sub
add
add
add
fldt
mov
xor
push
sti
mov
lods
mov
pop
push
sub
sbb
mov
std
lcall
add
add
mov
inc
pop
hlt
cld
inc
movsb
sbb
pop
bound
test
sub
mov
xchg
das
jo
idivl
add
mov
xchg
test
jae
dec
in
xchg
cmpsl
or
movsb
inc
xor
mov
adc
or
adc
repnz
ljmp
ret
xchg
adc
gs
fs
pop
lock
stos
pop
or
adc
pop
mov
aas
mov
add
aad
and
inc
push
xchg
dec
push
jno
pop
ss
outsl
sbb
test
mov
xchg
or
add
add
add
nop
outsb
fdivrl
cmp
loope
out
xchg
cs
mov
inc
jo
fimull
dec
cmpsl
and
mov
mov
jge
pop
loop
inc
fadds
insb
into
or
sbb
add
cmp
call
call
icebp
rcrb
out
inc
sub
pop
add
and
push
add
imul
subl
jno
adc
or
sub
mov
mov
xchg
add
add
jle
cmpsl
dec
sub
mov
pop
hlt
adc
fidivrs
xor
in
cmp
cmc
outsl
pop
sub
sbb
pop
lret
data16
dec
fimull
test
add
arpl
pop
cmpsl
dec
imul
dec
cmp
mov
or
daa
mov
test
cld
ds
xchg
pop
add
test
jmp
mov
inc
dec
imull
xor
nop
xlat
xchg
pop
push
cmpsb
js
outsl
jmp
and
pop
xor
adc
stos
sbb
in
out
jb
rorl
leave
leave
inc
cmp
imull
pop
or
push
mov
mov
dec
jecxz
add
mov
jnp
aam
sub
inc
adc
push
pop
jo
xchg
cmp
out
pushw
xchg
fld
add
add
pop
pop
pop
loop
mov
pushf
and
test
loopnew
add
aaa
lods
sub
mov
outsl
push
adc
add
enter
mov
sti
xor
push
xor
push
mov
test
mov
gs
xor
inc
ret
mov
add
xor
movsl
pushf
fisubs
out
mov
cmp
dec
cmp
movsb
jmp
or
dec
divl
arpl
call
call
fcmovne
cmovb
jbe
out
negl
add
add
add
pop
cld
inc
pop
rcrb
mov
xor
mov
shlb
sbb
jno
jge
add
clc
or
mov
push
lret
fdiv
movsb
jp
jecxz
mov
mov
xchg
hlt
outsb
addr16
dec
ss
std
ucomiss
inc
mov
xor
and
sub
pop
outsl
out
outsb
es
call
call
lods
cmp
push
jle
icebp
mov
aad
ret
mov
and
add
add
xchg
les
jnp
xor
mov
scas
add
add
add
xchg
lods
imulb
js
lea
imul
add
inc
sub
aas
hlt
lcall
jne
push
sbb
pop
mov
scas
push
lcall
cs
dec
ret
hlt
pop
jbe
loopne
jle
add
hlt
pushf
out
sbb
fistpl
stc
out
pop
lods
cmp
test
ret
popf
push
movsl
das
fstpt
mov
push
iret
jp
into
loopne
xchg
adc
pop
sbb
ja
popa
push
adc
sbb
mov
lret
bnd
push
test
fmuls
lahf
fwait
imul
lret
ljmp
add
stos
xchg
jge
jns
pop
lea
fsubrs
je
ret
cmp
add
pop
pop
ja
sarl
shrl
data16
pop
dec
je
add
add
nop
xlat
and
lcall
ja
divb
pop
sbb
sbb
call
call
cmp
add
add
add
add
orb
fdivr
lock
pop
scas
pop
push
mov
inc
push
in
mov
pop
in
push
xlat
int3
shlb
fisubrl
dec
or
iret
bound
add
add
add
add
xchg
pop
push
xor
aaa
pop
imul
mov
loopne
shlb
mov
and
dec
loope
mov
and
outsb
push
sbb
mov
mov
jle
jns
pop
xor
in
pop
sbb
fwait
imul
mov
stc
lods
mov
decl
add
pop
bound
in
cmp
jo
mov
data16
push
or
push
rolb
pop
mov
call
sbb
mov
cmp
lods
or
add
add
add
xchg
fistl
daa
outsl
add
lods
add
mov
test
jg
and
fsubl
outsb
fwait
out
ficompl
ficoml
clc
or
ds
scas
shll
out
jne
inc
clc
hlt
out
int
xchg
xchg
aad
xor
add
ss
nop
xorb
scas
scas
in
hlt
xchg
mov
dec
add
add
stos
out
and
jmp
add
dec
insl
sbb
jmp
mov
mov
lods
aam
movsl
fs
add
add
add
add
es
shlb
or
cmp
enter
dec
outsl
test
xchg
pop
dec
lea
jle
xor
ds
jbe
xor
sbb
inc
dec
ret
shr
and
lahf
shl
add
frstor
xor
sub
cltd
add
leave
dec
add
pop
icebp
push
jnp
movsl
mov
je
xchg
pop
xor
sarb
push
sbb
dec
test
sub
js
sbb
xor
add
add
mov
push
inc
sarb
sub
xchg
xor
lret
cltd
je
nop
out
in
mov
or
cltd
cs
and
in
iret
insb
jg
or
and
mov
ja
aam
sbb
sarb
pop
push
das
cmp
jge
sub
into
cmp
jge
adc
test
imul
es
mov
add
add
dec
pop
add
outsl
in
inc
addl
pop
int3
out
inc
pop
gs
or
call
call
leave
lds
and
pop
test
imul
cmp
pop
sbb
or
or
jnp
sarl
xor
js
adc
aas
push
add
add
add
add
and
cmp
es
mov
jg
les
sbb
push
testl
insl
rcpps
inc
scas
jl
dec
add
and
adc
dec
enterw
xor
xor
add
add
inc
push
adc
call
call
aas
ret
dec
mov
pushf
push
jne
inc
fisubrs
xor
call
call
pushf
aas
icebp
imul
cld
aas
pop
ljmp
adc
push
xor
inc
mov
xor
pop
das
inc
int3
cs
push
shl
lds
adc
inc
js
jno
push
call
call
pushf
imul
add
add
pop
inc
adc
jg
les
jge,pn
cmp
sahf
repnz
in
fs
jae
gs
sub
add
test
pop
leave
or
adc
test
mov
mov
dec
in
push
push
jl
inc
xchg
popa
je
imul
arpl
lret
xor
fimuls
mov
jge
cmp
aas
ja
inc
mov
aaa
cwtl
fs
push
push
jl
hlt
sti
jns
add
add
add
je
out
gs
sub
xchg
push
jge
or
add
ja
adc
cmp
jne
sub
bound
adc
test
imul
in
bound
adc
inc
pusha
jb
sbb
and
push
loope
add
xchg
push
jp
adc
add
add
add
add
sbb
push
lret
jb
scas
pop
and
or
aas
and
in
pop
push
cltd
shlb
sub
pop
cmp
lock
add
sbb
sub
bound
ret
out
sbb
push
fwait
in
fadds
dec
insb
pop
add
xor
lahf
dec
xchg
bound
pop
repnz
add
call
call
repz
insl
and
xchg
lds
or
add
pusha
adc
sbb
xor
cmp
sbb
test
out
jle
dec
jbe
jnp
xor
cmp
cmpsb
add
pushl
jns
push
jge
cs
xchg
cmp
pop
pop
or
lahf
or
sbb
icebp
push
sbb
cmp
add
xor
arpl
or
pop
ss
jns
or
stc
jne
cwtl
mov
pop
addr16
sub
imul
xchg
jge
xor
xor
lret
add
nop
mov
arpl
xor
insb
in
add
inc
lods
stc
jbe
dec
test
adc
shlb
add
add
add
add
add
imul
xor
das
cmp
or
daa
fidivrl
pop
outsb
jbe
imul
xor
cltd
jo
loope
out
js
sbb
jmp
fisttpll
jb
in
test
sub
insl
rolb
add
add
and
call
call
add
dec
sbb
sbb
outsl
mov
aaa
leave
int
jbe
pop
xor
lock
imul
inc
test
daa
dec
enter
jbe
test
jb
xchg
or
jle
inc
adc
jp
arpl
outsb
xchg
add
add
add
dec
cmp
and
arpl
stc
mov
mov
out
jne
xchg
pop
mov
jo
popf
or
push
mov
popa
sub
mov
cmp
push
xor
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
push
mov
adc
add
xor
add
add
inc
add
add
add
mov
sbb
add
movsb
mov
sbb
add
insb
mov
sbb
add
xor
inc
add
add
or
inc
add
add
add
mov
pop
add
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
je
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
incl
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
insb
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
or
add
or
add
std
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
lds
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
xchg
inc
add
add
add
add
add
add
add
add
clc
lret
clc
lret
clc
lret
clc
lret
clc
lret
add
add
add
add
ror
inc
add
popl
push
xchg
inc
add
xchg
inc
add
int3
inc
add
lret
inc
add
add
add
lret
inc
add
lds
dec
out
mov
add
add
dec
popl
lret
add
add
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
add
inc
add
add
add
inc
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
inc
add
xchg
inc
add
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
add
add
add
add
add
add
int3
inc
add
add
add
int3
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
jg
jg
jg
ror
inc
add
add
add
add
add
add
add
add
add
xorb
add
add
lock
incl
add
add
push
add
push
add
int
add
inc
add
incl
add
add
add
add
incl
add
add
add
add
lcall
add
add
add
add
add
js
add
xchg
add
add
add
add
add
add
add
add
add
add
add
insl
add
add
lcall
add
add
add
add
add
ja
add
xchg
add
add
add
repnz
add
add
add
add
add
add
insb
add
add
add
add
add
xor
add
dec
add
addb
add
pusha
add
adcb
add
js
add
add
add
xor
add
add
add
add
add
test
add
add
add
add
add
rolb
addb
add
add
add
fadds
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
addb
add
add
add
add
and
add
add
add
inc
add
add
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
pusha
add
add
add
add
add
add
add
add
bound
xor
add
inc
add
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
data16
js
imul
jo
jo
insb
add
imul
inc
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
jne
insl
add
add
insl
add
add
imul
add
jbe
outsl
add
add
add
and
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
sub
and
add
and
xor
bound
add
push
popa
add
add
ja
push
add
add
js
outsb
add
add
add
jae
add
add
add
inc
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
ja
imul
jo
imul
add
outsb
add
insb
add
add
ja
add
add
inc
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
popa
add
outsb
add
imul
add
insl
add
js
add
push
insl
add
add
push
add
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
js
insl
add
popa
add
popa
add
jp
popa
add
jne
jne
jae
imul
add
js
add
add
add
adc
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
ja
ja
imul
jo
imul
add
outsb
add
insb
add
add
ja
add
add
xor
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
and
add
and
xor
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
incl
add
add
add
add
add
addb
add
add
testb
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
incl
add
add
push
data16
add
add
add
incl
add
add
add
add
add
popa
add
jp
arpl
add
add
addb
add
push
add
jae
push
add
add
popa
add
insl
add
add
add
add
add
jp
outsl
add
jno
add
add
add
data16
jae
js
jbe
imul
je
insb
add
add
add
add
push
ja
add
insl
add
jb
jne
add
add
add
add
jb
popa
add
add
add
add
je
outsl
add
add
jo
add
