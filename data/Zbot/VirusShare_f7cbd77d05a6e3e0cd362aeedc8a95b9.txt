push
mov
sub
movl
movl
movl
mov
and
mov
movl
lea
mov
mov
mov
or
sub
add
mov
push
call
movl
mov
sub
mov
mov
pop
ret
push
mov
sub
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
lea
mov
lea
mov
mov
mov
and
mov
add
mov
movl
mov
or
add
mov
sub
mov
jmp
movl
cmpl
jl
movl
movl
lea
mov
mov
mov
and
imul
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
add
mov
sub
mov
push
call
jmp
movl
movl
mov
add
mov
cltd
idiv
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
or
mov
add
cltd
idiv
add
mov
movl
lea
mov
mov
mov
imul
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
lea
mov
movl
mov
mov
and
imul
mov
sub
mov
movl
movl
mov
cmp
je
movl
lea
mov
mov
mov
imul
add
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
lea
mov
mov
mov
and
mov
add
cltd
idiv
imul
mov
jmp
jmp
movl
lea
mov
movl
mov
or
mov
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
sub
add
mov
movl
mov
imul
mov
sub
mov
jmp
mov
add
imul
mov
push
call
push
push
call
movl
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
or
mov
sub
mov
sub
mov
movl
mov
push
push
mov
push
call
add
mov
cmp
je
movl
cmpl
jne
mov
push
mov
push
mov
push
call
add
push
push
push
push
call
lea
mov
mov
mov
and
imul
mov
jmp
movl
movl
mov
imul
mov
call
push
push
call
mov
push
mov
push
mov
push
call
add
mov
push
push
mov
push
push
call
mov
pop
ret
push
mov
sub
movl
movl
lea
mov
movl
mov
mov
and
mov
add
cltd
idiv
add
mov
movl
mov
add
mov
cltd
idiv
mov
mov
add
mov
cltd
idiv
imul
mov
push
push
push
call
mov
add
imul
mov
mov
pop
ret
int3
int3
push
mov
sub
movl
mov
sub
mov
movl
lea
mov
mov
mov
add
mov
movl
mov
add
mov
cltd
idiv
mov
lea
mov
mov
mov
sub
mov
cmpl
je
movl
lea
mov
mov
and
mov
mov
or
sub
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
jmp
mov
add
mov
cmpl
jge
push
push
call
jmp
movl
lea
mov
lea
mov
mov
add
mov
mov
cltd
idiv
mov
sub
mov
push
push
call
jmp
push
push
call
movl
movl
mov
and
mov
and
sub
mov
sub
mov
mov
pop
ret
int3
push
mov
sub
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
lea
mov
mov
add
mov
mov
cltd
idiv
mov
movl
mov
mov
push
push
push
push
call
jmp
push
push
push
call
movl
movl
mov
cmp
je
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
lea
mov
movl
mov
mov
and
mov
add
cltd
idiv
mov
movl
lea
mov
mov
mov
sub
add
mov
mov
imul
imul
mov
jmp
call
push
push
push
push
call
movl
lea
mov
mov
add
mov
cltd
idiv
mov
movl
mov
add
mov
cltd
idiv
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
imul
mov
movl
movl
mov
add
imul
mov
movl
lea
mov
mov
mov
imul
add
mov
movl
jmp
mov
add
mov
cmpl
jge
push
push
push
push
call
call
jmp
call
mov
add
mov
cltd
idiv
mov
movl
mov
and
sub
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
or
mov
sub
mov
movl
movl
mov
add
mov
cltd
idiv
mov
sub
mov
mov
imul
mov
movl
movl
lea
mov
lea
mov
mov
mov
mov
imul
add
mov
lea
mov
mov
mov
sub
mov
sub
mov
mov
and
mov
sub
add
mov
mov
and
mov
and
add
mov
sub
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
call
movl
movl
lea
mov
mov
mov
or
add
mov
sub
mov
movl
mov
and
add
imul
mov
lea
mov
mov
mov
imul
imul
mov
push
push
call
lea
mov
mov
mov
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
call
call
call
movl
jmp
mov
add
mov
mov
cltd
and
add
sar
cmp
jge
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
mov
and
mov
add
cltd
idiv
mov
sub
mov
cmpl
jne
lea
mov
mov
mov
imul
add
mov
cmpl
jl
movl
movl
mov
or
mov
add
cltd
idiv
add
mov
jmp
movl
movl
mov
push
mov
push
mov
push
call
add
movl
cmpl
jl
lea
mov
mov
and
mov
add
mov
jmp
call
call
call
jmp
movl
mov
add
imul
mov
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
lea
mov
mov
mov
add
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
add
mov
lea
mov
lea
mov
mov
add
mov
mov
cltd
idiv
mov
sub
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
call
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
and
mov
sub
mov
jmp
movl
movl
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
push
push
call
add
mov
cmpl
jne
jmp
movl
mov
add
add
mov
push
push
mov
push
call
add
movl
cmpl
jne
movl
push
push
mov
push
call
add
movl
movl
lea
mov
mov
mov
add
add
mov
mov
or
mov
sub
imul
mov
mov
push
push
mov
push
call
add
movl
movl
mov
and
add
add
mov
push
push
push
call
push
push
call
add
mov
cmpl
jne
jmp
movl
mov
push
push
push
call
add
lea
mov
movl
mov
mov
and
mov
or
sub
mov
sub
mov
push
push
mov
push
call
add
movl
movl
mov
add
imul
mov
push
push
mov
push
call
add
movl
mov
push
call
mov
movl
mov
or
imul
mov
lea
mov
lea
mov
movl
mov
mov
and
mov
sub
add
mov
mov
or
imul
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
push
call
mov
cmpl
jne
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
jmp
mov
add
mov
cmpl
jge
call
movl
movl
mov
and
add
add
mov
jmp
push
push
push
push
call
jmp
movl
mov
push
mov
push
call
mov
cmpl
jne
jmp
movl
lea
mov
movl
mov
mov
and
add
imul
mov
mov
and
mov
or
add
add
mov
mov
mov
mov
push
mov
push
mov
push
push
call
push
mov
push
mov
push
call
add
xor
jne
push
call
movl
mov
sub
imul
mov
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movl
mov
sub
mov
cmpl
je
movl
mov
add
mov
sub
mov
movl
mov
sub
add
mov
mov
or
sub
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
call
mov
pop
ret
push
mov
sub
movl
movl
lea
mov
mov
add
mov
mov
cltd
idiv
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
cmpl
jg
movl
mov
or
mov
sub
add
mov
jmp
push
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
add
mov
cltd
idiv
mov
movl
movl
lea
mov
movl
mov
and
mov
imul
mov
sub
mov
movl
movl
mov
and
add
imul
mov
call
mov
and
imul
add
mov
mov
cmp
jl
mov
sub
mov
mov
imul
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
call
lea
mov
mov
or
mov
mov
or
add
mov
sub
mov
jmp
jmp
movl
lea
mov
lea
mov
mov
add
mov
mov
cltd
idiv
add
mov
lea
mov
mov
mov
imul
add
mov
mov
imul
imul
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
call
push
push
call
movl
cmpl
je
call
movl
lea
mov
mov
mov
imul
mov
call
jmp
movl
cmpl
je
push
call
call
movl
mov
add
mov
cltd
idiv
mov
jmp
movl
movl
lea
mov
movl
mov
and
mov
imul
add
mov
call
lea
mov
mov
mov
imul
mov
movl
movl
mov
add
mov
cltd
idiv
mov
mov
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
mov
add
mov
cltd
idiv
mov
movl
cmpl
je
push
call
jmp
mov
and
imul
mov
sub
mov
jmp
call
cmpl
je
push
call
jmp
push
push
call
movl
mov
cmp
jne
call
mov
imul
mov
movl
mov
add
mov
jmp
push
call
mov
and
mov
sub
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
add
mov
cltd
idiv
mov
push
push
push
call
movl
lea
mov
mov
mov
sub
mov
movl
lea
mov
mov
or
mov
mov
sub
mov
sub
mov
movl
lea
mov
lea
mov
mov
mov
mov
imul
add
mov
movl
cmpl
jg
push
push
push
push
call
jmp
lea
mov
lea
mov
mov
mov
mov
sub
add
mov
mov
and
mov
sub
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
jmp
mov
add
mov
cmpl
jge
call
jmp
cmpl
je
push
call
movl
lea
mov
lea
mov
mov
mov
mov
sub
imul
mov
lea
mov
mov
mov
and
add
mov
jmp
lea
mov
mov
mov
sub
mov
sub
mov
lea
mov
mov
add
mov
cltd
idiv
mov
sub
mov
movl
lea
mov
mov
and
mov
mov
sub
mov
mov
sub
mov
jmp
cmpl
jne
cmpl
je
mov
sub
imul
mov
call
lea
mov
mov
add
mov
mov
cltd
idiv
mov
sub
mov
jmp
movl
lea
mov
mov
add
mov
mov
cltd
idiv
mov
sub
mov
push
call
movl
mov
cmp
jg
push
call
lea
mov
mov
add
mov
cltd
idiv
mov
sub
mov
jmp
mov
or
mov
sub
mov
sub
mov
jmp
cmpl
jne
mov
add
mov
cltd
idiv
mov
lea
mov
mov
mov
imul
add
mov
jmp
movl
lea
mov
mov
mov
imul
imul
mov
push
call
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
mov
mov
or
mov
add
cltd
idiv
imul
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
cmp
jl
movl
mov
and
imul
add
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
imul
imul
mov
jmp
movl
lea
mov
lea
mov
mov
add
mov
mov
cltd
idiv
mov
push
push
call
cmpl
jne
movl
jmp
mov
add
mov
cmpl
jge
call
jmp
jmp
movl
movl
movl
mov
and
mov
add
cltd
idiv
add
mov
cmpl
jne
movl
mov
add
mov
cltd
idiv
add
mov
push
push
push
call
push
push
push
push
call
movl
lea
mov
mov
add
mov
mov
cltd
idiv
mov
push
call
movl
mov
imul
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
and
mov
add
cltd
idiv
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
or
mov
or
sub
imul
mov
jmp
movl
lea
mov
mov
mov
imul
mov
call
movl
lea
mov
mov
add
mov
cltd
idiv
mov
movl
lea
mov
mov
mov
add
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
cmpl
jne
lea
mov
mov
mov
add
add
mov
movl
lea
mov
mov
mov
or
mov
and
imul
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
push
call
movl
mov
imul
mov
sub
mov
movl
movl
mov
or
sub
mov
sub
mov
jmp
jmp
mov
pop
ret
int3
int3
int3
push
mov
sub
movl
movl
mov
add
mov
sub
mov
movl
cmpl
jl
cmpl
jg
movl
movl
movl
mov
and
imul
imul
mov
mov
or
imul
add
mov
jmp
lea
push
call
movl
movl
mov
imul
mov
sub
mov
movl
mov
and
add
mov
jmp
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
lea
mov
mov
or
mov
imul
mov
jmp
movl
movl
mov
and
add
add
mov
call
movl
mov
add
mov
cltd
idiv
mov
sub
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
lea
mov
mov
mov
sub
mov
push
push
push
push
call
jmp
cmpl
jl
movl
movl
mov
cmp
jg
lea
mov
movl
mov
add
mov
mov
cltd
idiv
mov
sub
mov
mov
imul
mov
sub
mov
call
movl
mov
imul
mov
sub
mov
movl
mov
or
add
imul
mov
mov
pop
ret
push
mov
sub
movl
movl
movl
mov
or
add
mov
movl
jmp
mov
add
mov
cmpl
jge
mov
imul
mov
jmp
movl
mov
sub
imul
mov
movl
mov
and
add
add
mov
push
push
call
movl
mov
add
mov
sub
mov
mov
add
mov
cltd
idiv
imul
mov
movl
mov
or
add
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
push
mov
push
push
call
add
movl
lea
mov
mov
mov
add
imul
mov
push
push
push
call
cmp
jne
movl
lea
mov
mov
mov
sub
imul
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
movl
mov
push
mov
push
mov
push
call
add
mov
cmp
jne
lea
mov
mov
mov
and
mov
add
cltd
idiv
add
mov
lea
mov
mov
mov
add
add
mov
jmp
call
xor
mov
pop
ret
int3
int3
push
mov
sub
movl
lea
mov
mov
mov
sub
imul
mov
call
movzbl
test
je
movl
mov
and
mov
add
cltd
idiv
mov
movl
jmp
mov
add
mov
cmpl
jge
movl
lea
mov
mov
add
mov
mov
cltd
idiv
add
mov
mov
push
push
call
add
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
call
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
cmp
jne
push
call
pop
call
push
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
push
push
call
add
mov
mov
mov
cmpb
jne
inc
mov
mov
cmp
je
cmp
jne
cmpb
jne
inc
mov
mov
cmp
je
cmp
jbe
mov
lea
push
call
testb
je
movzwl
jmp
cmpb
jbe
inc
mov
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
jmp
jmp
jmp
jmp
jmp
push
push
call
pop
pop
ret
jmp
xor
ret
ret
jmp
jmp
cmpl
jne
pushl
call
pop
ret
push
push
pushl
call
add
ret
pushl
call
neg
sbb
pop
neg
dec
ret
jmp
int3
int3
int3
int3
jmp
jmp
jmp
jmp
xchg
inc
add
test
add
mov
inc
add
fiaddl
add
inc
add
add
push
inc
add
sub
ds
add
dec
inc
add
pusha
inc
add
je
add
mov
mov
inc
add
movb
inc
add
add
add
addb
lock
add
fiadds
add
inc
add
rolb
and
add
inc
add
add
add
inc
inc
add
pop
inc
add
pusha
inc
add
outsb
inc
add
jbe
add
mov
add
nop
inc
add
pushf
inc
add
add
add
in
add
adc
add
or
add
inc
add
and
add
add
add
add
push
gs
and
popa
and
add
dec
xor
push
gs
insb
and
push
jns
and
push
xor
add
add
jb
arpl
jbe
and
pop
inc
dec
push
pop
dec
and
outsb
je
inc
push
pop
dec
dec
inc
inc
pop
push
inc
dec
inc
inc
pop
push
push
dec
inc
inc
inc
push
pop
push
inc
dec
inc
inc
push
dec
dec
dec
inc
add
add
xor
dec
push
dec
pop
xor
dec
and
and
je
outsb
outsb
popa
and
add
add
bound
arpl
and
popa
je
jb
and
and
and
jae
imul
outsb
jbe
outsb
imul
and
pop
push
gs
gs
push
push
push
add
add
dec
push
push
pop
dec
dec
pop
inc
inc
dec
inc
inc
dec
pop
push
inc
dec
dec
push
inc
pop
inc
inc
push
dec
inc
inc
add
outsb
outsw
and
jne
and
je
jb
and
pop
dec
dec
inc
inc
pop
push
pop
pop
push
inc
inc
pop
inc
dec
inc
push
push
dec
inc
dec
inc
inc
push
dec
dec
dec
add
add
jb
gs
xor
cs
insb
add
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
add
add
inc
pop
push
js
xor
xor
pop
push
jne
jo
jb
gs
add
jo
je
push
jb
arpl
jae
jb
imul
imul
arpl
jo
bound
add
add
je
imul
arpl
outsb
outsl
je
imul
pop
daa
jmp
xor
xor
loopne
add
inc
add
add
add
add
cs
add
nop
inc
add
mov
add
inc
add
test
add
sub
add
dec
inc
add
dec
inc
add
xchg
inc
add
test
add
mov
inc
add
fiaddl
add
inc
add
add
push
inc
add
sub
ds
add
dec
inc
add
pusha
inc
add
je
add
mov
mov
inc
add
movb
inc
add
add
add
addb
lock
add
fiadds
add
inc
add
rolb
and
add
inc
add
add
add
inc
inc
add
pop
inc
add
pusha
inc
add
outsb
inc
add
jbe
add
mov
add
nop
inc
add
pushf
inc
add
add
add
in
add
adc
add
or
add
inc
add
and
add
add
add
add
add
add
dec
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
repnz
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
jb
popa
je
inc
jbe
outsb
je
add
inc
add
gs
je
dec
jne
gs
add
sbb
inc
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
inc
add
filds
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
gs
je
dec
popa
outsb
fs
add
push
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
fiaddl
dec
jae
bound
addr16
jb
jae
outsb
je
pop
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
mov
inc
gs
imul
je
add
add
je
jne
jb
outsb
je
push
add
xchg
add
je
gs
imul
dec
inc
push
dec
inc
dec
xor
cs
insb
add
mov
fs
jne
jae
jb
jb
insl
inc
imul
outsl
popa
fs
jne
jae
jb
add
fs
arpl
inc
add
add
insb
gs
jae
inc
inc
add
gs
imul
add
inc
push
xor
cs
insb
add
insl
jae
cs
insb
add
arpl
add
dec
push
push
inc
push
push
cs
insb
add
roll
pop
gs
je
dec
add
arpl
inc
imul
gs
je
add
insl
fs
outsb
add
pop
pop
addr16
popa
imul
lidtl
outsb
imul
add
jae
je
jae
jb
popa
je
gs
add
popf
add
fs
jae
pop
imul
add
jo
pop
arpl
insl
outsl
fs
outsl
add
jo
pop
insw
outsl
fs
addl
je
popa
jo
pop
je
jo
add
lret
gs
gs
pop
push
gs
add
mov
pop
arpl
je
outsl
insb
data16
add
pop
pop
fs
insb
outsl
outsb
gs
je
xchg
pop
outsl
outsb
gs
je
push
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
add
push
lea
pop
andl
cmpl
adc
mov
mov
mov
add
cmpsl
outsb
push
pushl
ret
rorb
dec
hlt
call
cmp
std
je
mov
and
add
push
xor
or
lret
scas
push
ret
xor
mov
mov
adc
cmp
addb
cmp
call
mov
push
mov
inc
stc
pop
je
jne
xor
and
add
adc
mov
add
mov
rorb
sub
dec
dec
sbb
movb
popf
pop
aas
inc
lret
dec
lock
dec
lock
xor
add
jl
mov
cmp
out
dec
xor
pushl
incb
jb
jns
push
daa
repnz
jno
push
call
mov
sub
sub
mov
jecxz
scas
ret
insb
sub
mov
sub
leave
jno
mov
lds
xor
add
int3
mov
mov
dec
adc
or
clc
mov
jns
mov
shrb
jmp
das
aaa
cmp
leave
aaa
ret
xchg
scas
hlt
ret
ss
pop
bound
dec
aaa
loop
sbb
dec
or
scas
ret
std
decb
pop
mov
mov
mov
push
leave
cmpl
mov
fldl
shrb
pop
pop
cmp
push
clc
dec
push
lods
hlt
dec
push
add
pop
or
push
mov
loopne
ja
lret
inc
xor
jne
mov
jbe
inc
sbb
shlb
pushl
sbb
mov
add
mov
jmp
xchg
add
scas
insb
lahf
mov
movb
ret
imul
push
mov
adc
mov
xor
xchg
inc
xor
insb
cmp
decl
test
inc
movsl
cld
pop
aas
add
pop
aas
lea
fwait
push
and
cmp
sbb
push
aas
add
test
cmp
mov
aas
add
pop
aaa
call
lret
jnp
cmp
cmpl
jne
pop
shlb
cmp
ror
pop
ret
lret
ret
mov
mov
add
hlt
cmc
ret
push
shlb
js
or
daa
push
xor
add
ds
add
add
scas
jnp
shlb
mov
ss
xchg
mov
fsubl
jae
call
xlat
out
dec
adc
in
dec
adc
fists
rcrl
xlat
sbb
adc
aam
add
adc
add
cmp
jae
cmp
std
jne
mov
or
mov
jns
nop
jp
out
jne
nop
mov
mov
pushl
leave
insb
jmp
adc
mov
pushl
lret
dec
bnd
and
and
xchg
cmp
xor
dec
jne
daa
mov
or
add
push
insb
cmp
inc
jb
and
pop
pop
dec
je
cmp
je
pop
dec
arpl
and
adc
push
push
xor
gs
xor
push
adc
ja
pop
xor
add
pop
cmp
add
add
xor
add
xor
add
xor
add
stc
icebp
int
stc
icebp
add
mov
jmp
jle
movsb
arpl
daa
and
pop
pop
sub
fcomps
mov
movsb
push
xlat
sbb
rclb
sub
pop
sbb
lahf
dec
lcall
jnp
je
js
fcmove
xchg
mov
notl
xlat
je
js
and
mov
xor
repnz
jno
movsl
in
mov
aas
and
cmp
call
xchg
outsl
ret
add
xor
pop
jmp
and
and
rorl
hlt
or
xor
lret
jg
repnz
pushl
test
pop
in
repnz
clc
pop
into
and
cmc
int3
je
push
clc
cmp
sahf
aam
or
mov
adc
cltd
inc
retw
in
jmp
mov
incb
lods
pop
pushl
mov
fiaddl
hlt
jmp
clc
stos
ds
mov
pop
rcl
mov
mov
jl
lret
ret
pop
pusha
loopne
insb
imul
jecxz
push
mov
arpl
rcrb
movsb
push
into
les
cmp
idivl
mov
pusha
add
dec
jnp
jl
adc
lea
andb
pop
call
hlt
cs
and
ljmp
sub
xlat
dec
add
mov
imul
int3
or
cmp
sbb
leave
mov
inc
or
jne
or
test
test
add
pop
sbb
leave
push
cmp
and
jle
inc
dec
or
push
push
inc
push
lahf
mov
mov
clc
inc
in
sbb
sub
inc
jmp
scas
fbld
mov
inc
xchg
sub
je
rcrb
clc
test
arpl
das
sbb
mov
push
push
data16
bound
add
add
add
sbb
add
xchg
mov
shll
out
lret
or
les
int
push
push
add
cmp
imul
add
or
jle
cmp
or
in
shlb
cmc
ficoml
mov
sub
jb
lods
or
adc
mov
lcall
popa
repz
leave
ret
pop
add
imul
hlt
push
inc
aam
jl
ret
xlat
int
fwait
int3
jno
jno
dec
outsb
aas
mov
mov
dec
adc
push
in
pusha
or
std
mov
int
aad
rcll
leave
jbe
icebp
mov
lret
andb
inc
out
jo
aaa
add
movsb
push
cs
sahf
sub
adcb
in
jae
test
int3
dec
inc
add
adc
sub
sub
fs
mov
gs
shrb
dec
sbb
das
sub
sti
iret
xor
nop
jp
and
sub
iret
sub
loop
pusha
cmp
push
lods
rorl
inc
pop
insl
inc
cwtl
into
mov
fisubrs
xchg
jns
dec
mov
pop
sub
xor
sbb
movsl
pop
ds
mov
pop
insb
clc
mov
cmp
dec
cmp
fs
jle
and
imul
nop
and
fwait
and
test
frstor
rclb
mov
xchg
nop
and
pushf
and
xchg
pop
push
cmovl
or
xchg
mov
mov
lahf
stc
adc
jle
sbb
push
ljmp
dec
pusha
lods
mov
mov
aad
test
lea
inc
and
sub
bound
add
push
aad
in
fmull
fnsave
das
sub
push
fistpll
push
cmp
lods
xchg
inc
sti
sbb
aad
mov
push
icebp
push
stos
loop
es
movsl
and
dec
loope
and
sub
mov
je
jns
xor
dec
push
inc
loope
and
push
push
ficoms
ret
sahf
pusha
mov
jle
xchg
push
mov
push
out
add
pop
mov
push
mov
cmp
mov
cmpl
and
enter
push
sub
js
int
loopne
xlat
xchg
adc
or
popa
adc
lahf
popa
xorb
pop
jno
sbb
adc
mov
dec
test
scas
idivl
dec
mov
shrl
rol
andl
adc
lods
call
inc
cmp
and
aaa
jns
mov
jge
shlb
xchg
inc
sub
inc
push
or
int
sub
inc
xchg
jne
xor
int
adc
xor
push
icebp
movsl
hlt
cmp
jb
and
stc
fcomp
pop
sbb
adc
jns
gs
push
xchg
push
pushf
dec
in
push
pop
jnp
cmp
rep
dec
or
bound
cltd
inc
cs
daa
pop
enter
mov
add
mov
adc
push
out
punpckldq
xor
pop
repnz
cltd
push
sub
dec
cmp
loop
sbb
jecxz
or
gs
lock
roll
adc
movsb
inc
addr16
pushf
push
add
xchg
inc
xor
inc
xor
dec
dec
xchg
fcmovb
lock
add
xchg
jo
cltd
dec
ret
popa
or
pop
add
sbb
orb
movsl
xor
pop
jp
sbb
sbb
sbb
mov
aas
mov
movsl
int3
xor
gs
pusha
sbb
push
adc
sbb
add
cmp
and
fdivs
mov
add
mov
push
lahf
std
sbb
andb
addb
stos
bndstx
addr16
jae
jl
jne
pop
adc
cmp
sbb
sub
dec
xor
mov
sub
loop
fs
ret
jo
inc
popa
addr16
push
shll
mov
add
sub
xchg
jo
cmp
sbb
xchg
jbe
pop
clc
sbb
xor
enter
sbb
les
inc
les
mov
fildll
xchg
pop
sub
push
jg
sub
bound
push
xor
pusha
or
es
dec
jmp
mov
inc
pusha
push
or
sub
jl
or
pusha
enter
xchg
or
lods
inc
fs
xor
in
imul
jmp
sub
adc
cld
movsl
or
test
xor
lods
subl
fidivl
push
lret
icebp
dec
inc
shr
pop
sub
add
xor
push
pop
mov
dec
cmp
dec
or
mov
cmp
xor
or
leave
add
push
mov
int3
add
pop
call
cmp
movsb
adc
mov
xchg
in
lret
mov
dec
cmp
adc
sub
insl
hlt
or
push
fimuls
push
je
xorl
jns
xor
clc
loop
mov
rclb
adc
dec
aas
inc
or
mov
pop
xor
inc
fisubrl
insb
adc
jl
and
or
cmp
cmp
fstpt
cmpsl
lret
scas
out
mov
pop
inc
ljmp
inc
push
cmp
insl
loop
fldcw
ja
mov
adc
mov
stos
mov
pop
jg
stos
fcompl
stc
hlt
dec
adc
sbb
rolb
loop
mov
xor
xchg
pop
pop
xor
or
fcmovnbe
cmpb
mov
push
push
sbb
pushf
sbb
movsb
sub
mov
mov
stc
cmp
call
imul
sahf
adc
movsb
cmp
cmpsb
pop
imul
je
push
or
and
repnz
jl
sub
fists
jge
hlt
or
mov
cmp
xor
js
sub
xchg
adc
or
pop
mov
push
pop
test
les
sub
add
loope
out
inc
cmp
pop
push
inc
clc
sub
mov
sbb
push
arpl
fmul
sbb
adc
pop
lahf
cmp
adc
cli
into
jns
ficompl
sub
leave
inc
js
jns
push
xor
daa
cmc
and
xor
mov
bound
jg
jl
enter
jb
fcmovne
imul
adc
xchg
dec
or
inc
sbb
int
or
stos
sbb
add
push
idivl
negb
xor
ds
sub
ret
orb
xor
or
dec
push
cmp
jl
sbb
or
daa
jl
and
ja
add
jl
push
and
push
and
adc
cmp
sbb
jge
add
push
and
sbb
pop
sub
and
pop
xor
pcmpeqb
test
and
and
or
push
jae
add
data16
out
sub
test
dec
in
test
pusha
in
pop
adc
addb
clc
jne
rorb
rcr
inc
ja
hlt
hlt
push
aas
movsb
mov
mov
jo
xchg
out
jns
jge
or
mov
jb
mov
pop
lods
cmp
pop
dec
pop
push
push
mov
cvttps2pi
sub
dec
jne
xchg
xchg
mov
data16
mov
test
dec
dec
adc
dec
dec
xchg
clc
outsb
fildll
movsb
jle
pop
pop
jle
add
or
sarl
add
insl
out
inc
jnp
cmp
add
cmp
push
cmp
pop
cmc
add
call
dec
fstpt
xor
cmp
pop
push
add
dec
mov
sub
cmpsl
daa
dec
lret
cmp
fistpll
aas
bound
xchg
pop
popf
mov
inc
call
dec
std
inc
sbb
lret
rol
or
stos
repnz
mull
scas
xchg
jl
pushf
add
outsl
arpl
jo
sbb
outsb
add
neg
call
jne
inc
jp
push
inc
push
imulb
push
xchg
cwtl
mov
scas
and
mov
mov
sub
xor
and
jne
adc
aaa
or
fcoml
shrl
dec
inc
hlt
frstor
das
hlt
and
and
jo
pop
insl
aam
scas
dec
mov
and
test
or
fiaddl
mov
xorb
cmpsl
jne
inc
mov
jo
insb
sbb
dec
jp
sub
pop
sti
add
stos
stos
mov
sbb
push
mov
jmp
mov
cmpsl
sahf
mov
aad
jge
mov
jne
movsb
idiv
pop
movsb
out
pop
inc
inc
pushf
daa
test
data16
rclb
jb
dec
js
sbb
fwait
inc
ret
mov
or
out
ret
mov
icebp
pop
pop
sub
jb
jnp
jb
mov
pop
movsb
and
das
cmp
jecxz
enter
jno
insb
cmpsl
cmp
dec
test
mov
icebp
push
incb
sbb
xchg
and
imul
adc
int
push
add
imul
pop
xchg
xor
int3
mov
jmp
clc
icebp
xchg
mov
std
and
imul
jbe
test
lds
pop
or
mov
or
adc
push
adc
push
pop
inc
push
std
xchg
pop
in
rcrl
sti
in
testb
push
insl
lret
xchg
and
cli
xchg
add
jno
das
stos
adc
rcrb
cmpsb
pop
jle
push
fstpl
sbb
clc
pop
mov
jmp
ss
imulb
fimuls
sub
pushf
fldt
add
pusha
inc
jecxz
and
add
jnp
add
subl
jb
xchg
mov
xchg
lods
mov
pop
xchg
push
lcall
dec
mov
mov
fidivrl
or
movsb
inc
repz
xchg
aas
out
into
add
adc
call
cli
notb
icebp
les
icebp
icebp
cmp
xchg
shl
aad
scas
fucomp
mov
icebp
mov
cwtl
cmp
out
push
sti
dec
and
lahf
adc
mov
arpl
mov
scas
and
push
push
loopne
mov
adc
int3
push
addr16
mov
lret
rcrl
add
xchg
call
je
fcompl
cltd
dec
imul
mov
in
push
mov
or
xor
iret
mov
jae
cmc
arpl
push
gs
ret
aas
jne
cmc
sub
jo
sti
push
and
xor
stc
add
lea
aad
cmp
mov
gs
add
pop
mov
fidivs
and
and
pop
jo
and
enter
loope
arpl
pop
inc
xchg
js
inc
rorl
mov
or
mov
mov
mov
push
bound
xor
dec
sub
sbb
push
test
imul
and
in
arpl
mov
dec
pusha
sub
fcompl
pop
mov
mov
in
xchg
jbe
add
push
ficoms
xlat
cwtl
xchg
cs
ja
lds
sarl
cmp
test
dec
ja
outsb
shlb
inc
ds
sub
push
stos
add
loope
push
or
lods
jge
mov
fildl
add
cld
stos
add
dec
inc
mov
push
andb
or
xor
mov
dec
sub
pop
cmp
cmp
fs
xchg
aam
inc
call
dec
insb
mov
and
cld
cmp
jmp
mov
arpl
jbe
pop
and
push
ss
pushf
mov
jg
push
inc
adc
mov
stos
sbb
xchg
popf
sbb
cmc
jg
cltd
adcb
cltd
imul
jge
andl
mov
popa
fidivs
sbbl
jge
and
roll
push
sub
inc
xor
in
xchg
lock
inc
xor
fstps
lcall
jae
cmova
jns
pusha
outsb
jne
pop
test
push
ljmp
xor
stos
and
or
inc
outsl
cwtl
adc
add
in
adc
add
jnp
dec
and
pop
ja
arpl
mov
fsts
sub
push
fdivl
add
sbb
mov
test
stos
fimull
xor
popf
or
cld
pop
jge
inc
jl
fbstp
cli
sbb
bound
shl
mov
sbb
loop
fsubrs
push
test
jno
test
mov
inc
pop
in
out
dec
mov
clc
sbb
inc
sbb
inc
adc
outsl
sahf
popa
cmpl
mov
mov
sbb
dec
adc
addb
mov
in
sbb
lret
cmp
je
xor
jecxz
lret
jp
push
jp
pop
out
pop
sbb
sti
jmp
fstps
mov
fidivrl
cltd
pop
lret
jmp
jp
and
xor
pop
mov
lock
aad
sub
and
push
jae
ja
sbb
movhps
xlat
and
scas
loope
push
lods
test
mov
or
cmpsb
rcll
cmpsb
push
or
cmp
insb
divl
sbb
jb
pop
cli
idivl
xchg
inc
divb
adc
xchg
push
adc
sub
in
and
fcmovb
and
int3
pop
push
rclb
outsb
decb
fprem
inc
mov
ficoml
aas
addl
or
mov
xor
mov
add
push
adc
pop
bound
fisubrl
repz
lret
mov
mov
cmp
sbb
push
inc
and
xor
mov
loope
or
mov
jle
jle
in
out
sbb
add
or
xchg
add
push
pop
das
cmpsb
pop
out
xchg
sar
out
mov
movsl
test
std
std
push
fidivs
cwtl
fwait
and
enter
in
mov
sbb
sub
fidivs
insb
aad
dec
jl
xor
mov
movsl
xchg
mov
mov
iret
xor
pop
dec
outsb
sbb
rol
mov
movl
cmp
call
mov
jns
gs
jns
movsb
imulb
jl
daa
inc
das
icebp
cmp
nop
pop
std
pop
add
mov
and
cmp
pop
and
movsl
aaa
test
jp
add
nop
adc
fmuls
mov
add
test
lods
lahf
jno
mov
pop
addl
ror
xchg
sbb
pop
sbb
out
lret
jbe
xor
in
xor
es
sahf
push
call
lahf
call
in
xchg
test
fstp
add
fisttpll
mov
xorb
and
push
sarl
jo
adc
popf
frstor
out
sbb
mov
ds
or
or
js
dec
fldenv
dec
mov
popf
imul
imul
in
sub
cmp
push
xchg
scas
repz
push
pop
imul
mov
and
dec
sbb
add
jmp
movsb
fstpl
and
cs
arpl
add
clc
mov
insb
fists
and
jo
das
inc
arpl
and
mov
mov
jns
popa
decl
and
xchg
and
xchg
inc
and
mov
leave
and
or
push
sub
adc
jg
movsb
jno
sbb
lods
shll
mov
lods
fldl
cmpsl
xchg
hlt
xchg
mov
hlt
cltd
icebp
add
lea
sub
fisttpl
aam
pusha
mov
push
cmp
sbb
call
data16
sub
ret
je
push
pop
jecxz
sub
fstpl
push
js
sub
ret
add
jl
cmc
xor
sbb
sti
ret
pop
jb
xchg
mov
decb
cmp
cld
popf
pop
test
or
sub
mov
inc
lea
cmp
cmp
nop
add
lods
into
jle
pop
daa
add
pop
es
sub
jp
xchg
sbb
in
into
aas
mov
xchg
push
jecxz
sbb
jmp
add
add
dec
xlat
outsl
hlt
inc
mov
xor
xor
ret
dec
mov
jg
ret
dec
adc
ret
add
and
add
push
addl
dec
nop
xchg
xorb
add
in
and
xchg
jo
cltd
sub
add
fisubs
mov
adc
dec
call
mov
or
adc
mov
push
imul
pop
lods
dec
add
push
rol
in
push
add
imul
sub
xchg
xor
pusha
fnsave
add
shrb
sub
ret
or
aaa
sbb
daa
sbb
shl
jge
icebp
out
stc
sub
aad
lock
sti
lahf
std
jnp
jne
mov
fs
add
fisttpll
pop
fwait
cmp
loop
scas
push
xchg
pusha
data16
cmp
lock
rorl
push
adc
push
mov
pop
inc
out
hlt
inc
mov
mov
mov
adc
imul
mov
jmp
loop
loope
pop
push
fsubrl
cmpsl
arpl
adc
jne
push
clc
pop
pusha
pop
repnz
push
mov
test
adc
iret
enter
dec
adc
mov
lret
js
fxch
nop
and
cmp
jnp
xlat
jo
scas
push
rcrb
pop
cmpsl
add
push
ror
iret
mov
add
sub
jb
cmpb
add
add
fidivrl
mov
into
add
ret
sbb
loop
push
pop
mov
aam
and
inc
mov
ror
mov
jns
sbbl
insb
push
daa
mov
or
and
add
imul
add
mov
sahf
or
dec
cld
cmp
mov
xchg
jnp
mov
in
mov
and
pop
adc
add
fstps
repz
insl
mov
test
or
cmp
or
dec
subl
and
mov
xorb
xlat
jmp
popf
xor
add
std
outsl
add
je
lret
clc
lcall
dec
pusha
pop
lock
pop
inc
jo
jp
aam
sbb
ret
inc
cld
sub
lods
xor
add
xor
fcompl
push
popf
out
sbb
scas
mov
int3
clc
mov
fstpl
xlat
pusha
lds
mov
jb
sbb
add
xchg
jno
and
pop
rcrl
js
call
js
jl
xchg
jge
fisttpll
adc
popa
mov
jg
sbb
mov
dec
add
push
mov
or
enter
ja
ljmp
scas
mov
addr16
inc
into
cmp
xchg
ret
subb
sub
dec
and
dec
inc
xchg
xor
mov
repnz
daa
xor
add
test
or
loopne
jne
int
movl
dec
ret
shl
int
mov
push
jns
push
cmp
pop
xchg
pop
and
mov
addr16
or
pop
fildl
lret
jp
cmpb
xchg
lret
sub
ljmp
inc
outsb
and
sub
cs
in
and
movsb
and
push
fwait
adc
orl
pop
and
adc
jle
mov
jb
xlat
xchg
cmp
outsb
push
and
imul
cli
ja
jp
dec
mov
fadds
in
inc
jne
and
jmp
push
jo
sub
inc
outsb
cmc
sbb
push
aad
push
and
iret
mov
cwtl
sbb
and
rcr
nop
inc
dec
ret
aam
inc
jno
sbb
imul
add
mov
stos
leave
mov
xchg
call
faddl
arpl
jp
repnz
out
add
sbb
add
imulb
out
popa
push
inc
push
jmp
xlat
outsb
mov
out
in
dec
es
test
fwait
sub
push
inc
outsb
js
cmp
mov
nop
pushl
and
cmp
mov
pop
clc
fsqrt
dec
clc
scas
in
jle
pop
out
int3
mov
cwtl
dec
mov
popf
aaa
inc
das
movsl
push
jecxz
nop
jp
mov
and
ficoml
jecxz
push
dec
pop
sbb
ret
imul
dec
adc
push
mov
xchg
pop
sbb
and
and
in
movsb
mov
add
inc
lcall
scas
aas
pop
cmp
and
sahf
inc
pop
jo
rcrb
std
in
leave
dec
push
add
mov
fidivrs
inc
add
xchg
add
in
les
lcall
mov
jge
mov
rcrl
push
sbb
push
lods
xor
clc
push
jne
pop
mov
inc
sarl
adc
ds
stos
repnz
xchg
jno
add
lods
loopne
call
je
imul
enter
and
insl
nop
pop
das
jno
daa
sbb
in
xor
faddl
inc
push
insl
popa
pop
dec
mov
pop
rorb
ret
or
xchg
xchg
insb
leave
xor
mov
arpl
shll
int3
ret
adc
cmp
ror
mov
jecxz
aas
add
sbb
or
shlb
rolb
or
cmc
test
std
dec
sub
orl
leave
push
inc
mov
movsl
add
add
lret
mov
push
xor
sbb
cmc
add
fwait
out
sub
ret
fwait
bound
xor
jecxz
loopne
out
jne
mov
mov
stos
cwtl
push
adc
loope
insl
adc
js
stos
dec
jnp
jno
xchg
mov
dec
lea
inc
xor
rclb
dec
xchg
int
lds
or
mov
lods
out
xor
sbb
jo
or
jg
fisubl
movsl
fcmove
outsb
add
xchg
int
es
outsl
and
sub
inc
fdivl
movsl
jmp
lock
test
hlt
mov
test
fcoms
aaa
mov
mov
aas
push
add
bound
cwtl
icebp
sbb
ja
jno
daa
cli
jb
lds
xor
add
bnd
mov
jo
test
lea
lret
not
sub
and
and
mov
add
loope
adc
shlb
aaa
adc
jmp
push
pushf
and
xor
xchg
lds
call
xchg
cs
std
call
mov
ljmp
cld
loopne
aas
mov
add
loopne
push
cmc
loopne
mov
add
aas
add
and
dec
mov
testl
out
enter
dec
arpl
adc
mov
add
xor
push
xchg
lock
fldt
inc
pop
loopne
into
mov
jbe
outsl
pop
inc
aas
divl
xorl
add
sbb
gs
fbstp
lock
movsl
cmc
lcall
aam
jne
and
fwait
cmp
push
hlt
push
rorl
inc
jp
ffree
pop
push
sub
push
cmp
iret
ljmp
xor
and
cmp
gs
ds
call
mov
or
adc
in
and
ss
jle
mov
cmp
add
add
loopne
inc
inc
cmp
inc
and
or
iret
xchg
pop
add
mov
cs
loope
in
loope
dec
push
sbb
lea
cmp
and
xchg
leave
jo
je
imul
xlat
jle
add
sub
loopne
sahf
loope
cmp
addr16
test
push
jno
mov
shrb
and
out
icebp
push
outsl
or
cmpxchg
dec
sub
movsl
clc
push
btr
iret
pop
inc
cltd
mov
add
sub
aad
pushf
scas
outsl
inc
dec
filds
jne
xor
les
into
insl
jno
data16
mov
imulb
xor
cmp
popa
lcall
repnz
lcall
xchg
push
xchg
sub
jmp
xchg
inc
data16
mov
int
aam
movb
scas
pop
shlb
ja
jo
push
insb
xchg
fwait
xchg
fwait
jb
xchg
popa
ret
es
xchg
push
jecxz
scas
lods
daa
add
add
xor
add
sbb
xor
sbb
insb
fwait
clc
push
aad
jno
mov
aam
cmp
adcl
jmp
lock
adc
inc
loop
pop
rcll
sbb
jae
jns
push
out
mov
push
add
sbb
pop
adc
loop
mov
es
dec
daa
jp
or
test
xchg
sub
in
repz
je
mov
ljmp
cmp
arpl
sahf
pop
jno
filds
jbe
sub
jge
movsl
sub
push
pop
sbb
and
arpl
mov
add
xchg
test
sarl
pusha
mov
rcll
mov
add
inc
pop
scas
icebp
addr16
ffree
fstps
dec
lds
shlb
mov
mov
pop
xor
stos
ja
mov
insb
push
xchg
mov
imull
data16
dec
dec
cld
movsb
mov
mov
mov
mov
pinsrw
or
jno
insb
pop
fwait
cmp
aad
sbbl
and
xchg
test
mov
lods
and
xchg
push
sbb
icebp
test
hlt
adc
pop
fistl
stos
inc
jne
sbb
mov
pusha
adc
inc
inc
push
xlat
faddl
repz
aaa
push
dec
icebp
int
inc
dec
pop
push
xor
dec
jge
pop
mov
mov
rorb
shll
insb
cmp
xchg
cld
inc
movsl
test
mov
out
dec
push
dec
movl
mov
subl
les
xchg
aad
push
push
sub
and
mov
xor
insb
lret
out
inc
mov
popa
shrl
ja
cli
inc
push
scas
sbb
inc
push
fidivs
jnp
sbb
adc
movsl
jmp
adc
les
inc
aad
cmp
push
xor
and
lahf
ret
daa
sahf
in
inc
jno
inc
mov
out
sub
mov
movsb
shll
or
mov
mov
push
enter
mov
ret
nop
add
sbb
mov
nop
repz
push
xchg
fdivl
jne
sbb
ljmp
in
jp
cli
daa
pop
in
adc
clc
fistps
ds
add
addr16
push
sub
push
cmp
movsl
push
outsl
push
les
and
ss
jb
add
jo
imul
dec
pop
pushf
fcoms
jge
les
sbb
aad
cmc
loopne
mov
xor
ja
or
jno
leave
data16
aaa
add
icebp
das
mov
ret
adc
dec
inc
inc
pop
cmp
cld
dec
leave
shl
sahf
aad
mov
roll
inc
pop
cmpsb
negb
or
fwait
jno
mov
ret
and
jp
or
hlt
clc
jnp
scas
das
mov
stc
pop
mov
adc
push
negl
dec
xor
xchg
mov
sbb
pop
les
or
mov
add
fnstcw
les
sub
cmp
jge
mov
inc
test
fwait
push
movsb
dec
insb
mov
repz
es
push
jg
adc
dec
jns
pop
pop
aaa
or
fst
in
movsl
jmp
mov
imul
mov
mov
jge
stos
test
lcall
notl
adc
gs
mov
mov
lret
cmp
mov
mov
sbb
nop
pop
pop
imul
mov
jge
hlt
pop
pop
sti
mov
mov
jae
fisubl
dec
mov
jns
pop
cmp
mov
scas
and
jne
add
add
cs
pop
aad
iret
push
sti
dec
loop
dec
pop
inc
xor
jnp
movsl
sbbl
dec
cmc
mov
pop
test
or
lods
gs
mov
xchg
imul
sub
mov
adc
ss
mov
and
xchg
hlt
push
bound
lods
fists
inc
cmp
xor
xor
and
mov
add
shrw
loope
and
lds
test
adc
in
push
aam
dec
and
jmp
fwait
bound
mov
mov
aad
push
and
stos
lods
add
mov
aad
pop
push
loop
mov
ficomps
xor
dec
pop
movsl
and
insb
mov
sub
dec
cmp
xchg
stos
sub
mov
gs
imul
mov
repz
loopne
shll
jbe
loope
and
push
pushf
cmp
add
inc
mov
jo
and
add
mov
inc
dec
data16
stc
push
add
pop
xorb
andl
daa
mov
pop
mov
bound
lods
push
push
mov
xor
xor
and
xchg
push
lods
add
or
inc
aad
mov
fucomp
pop
out
mov
loope
popa
dec
lret
mov
pop
mov
hlt
mov
pop
pop
cmp
xchg
sub
add
mov
cld
jmp
adcb
push
xorl
dec
adc
add
push
pop
pcmpgtw
jb
hlt
jnp
adc
sbb
and
push
xchg
mov
xchg
icebp
jnp
mov
adc
adc
lret
ret
and
lds
test
adc
mov
test
mov
and
xchg
subb
bound
and
inc
mov
outsb
mov
and
fwait
or
jecxz
sub
cmpsl
mov
pop
lds
add
popa
pop
xchg
fs
cld
dec
insl
push
pop
inc
push
sbb
aad
fisubl
cld
or
test
aad
and
data16
push
out
movsl
xchg
jae
decl
mov
fs
and
sbb
sbb
push
adc
lret
mov
lods
fiadds
das
inc
xchg
dec
cmp
jnp
push
cmpsl
dec
mov
xor
sbb
movsl
pusha
cmp
sbbb
pop
nop
mov
xchg
xchg
inc
sub
mov
jnp
fldt
push
lahf
imul
cmp
mov
adc
loope
and
mov
test
adc
cmp
add
lea
mov
insb
xchg
pop
sub
mov
adc
jge
imul
mov
cmp
fsub
cmp
loope
and
sbb
int
mov
mov
mov
les
and
and
add
lods
adc
push
inc
sbb
ss
insl
and
mov
lods
pop
add
inc
adc
aad
scas
push
xchg
dec
fisttpll
cmpsb
xor
into
cmp
scas
dec
mov
mov
add
inc
xchg
scas
sub
mov
sahf
and
mov
or
add
inc
jl
test
push
push
imul
adc
xor
addr16
les
cmpsl
dec
stos
mov
mov
test
inc
js
inc
inc
add
shlb
ret
jg
jnp
add
sahf
aad
mov
es
add
xor
xor
movsl
repz
add
and
xchg
gs
hlt
mov
sbb
mov
push
mov
fwait
xchg
daa
jnp
mov
sub
adcl
dec
xorl
pop
scas
adc
dec
dec
mov
pop
test
das
mov
and
add
and
cmp
mov
stos
and
mov
dec
jl
sub
aad
mov
pop
fstl
adc
addr16
negb
fcoms
hlt
in
push
scas
cmp
mov
lcall
add
decl
aad
in
push
or
pop
fstp
pop
jle
xchg
inc
insl
movsl
jnp
add
rcrb
sub
cmp
mov
sub
mov
loopne
mov
ret
imul
mov
sub
fistl
or
lahf
dec
sbb
or
sti
lds
push
sub
ret
adc
mov
and
pop
out
sbb
add
test
xchg
push
jnp
mov
inc
stc
jp
or
fwait
loope
and
adc
lods
and
push
pushf
bound
lods
pop
push
mov
xchg
sbb
aad
xchg
push
into
lods
or
dec
inc
aad
cmp
sahf
dec
mov
xor
imul
dec
fwait
mov
into
mov
xchg
push
cmp
sub
mov
in
add
jnp
mov
lret
push
push
dec
jmp
jns
aad
call
inc
mov
and
xor
jo
xor
repnz
lcall
inc
ja
leave
mov
sub
cli
ret
pop
fdivl
flds
rorb
pop
sar
sbb
mulb
testb
movsb
pop
mov
cmp
and
insb
jo
mov
ficompl
and
mov
in
push
test
int3
rorl
cmp
enter
enter
dec
aas
cmp
lret
int
add
loope
inc
xor
jnp
jo
iret
stc
pop
cs
pushf
push
mov
adc
loop
pusha
xlat
add
inc
lods
cwtl
xchg
pop
lds
das
ficompl
mov
mov
mov
js
push
mov
xor
adc
sbb
xor
push
jg
aaa
rcll
imul
push
call
out
jo
and
mov
cmp
cltd
push
call
ja
jae
adc
jecxz
mov
aad
push
jle
fldt
ret
cmp
rcll
dec
mov
scas
sahf
scas
and
and
fadd
push
sbb
mov
and
fnsave
std
lds
jecxz
cmpl
sti
or
jle
pop
sarb
sbb
pop
jne
sbb
jne
xor
inc
xchg
mov
mov
and
shlb
ja
mov
jae
fcmovbe
push
push
xor
mov
leave
enter
mov
in
outsl
sti
loop
jo
daa
data16
jg
aas
add
call
fadds
pop
xchg
adc
dec
rep
adc
repnz
push
adc
jb
jb
inc
mov
rcrl
insb
scas
fs
or
inc
in
jg
sub
mov
adc
stos
mov
push
mov
mov
jo
sub
and
add
and
aad
push
dec
jecxz
sahf
mov
add
lods
inc
and
data16
mov
jo
mov
mov
add
int
fwait
aad
push
add
sbb
ficoml
lods
lret
pop
push
popf
cld
clc
lods
pop
xorl
fcoml
andl
push
and
push
pusha
dec
pusha
push
ds
mov
fdivrl
insb
xchg
mov
call
add
pop
pusha
push
leave
sbb
fidivl
iret
cmp
int3
xchg
inc
xchg
cwtl
inc
cld
testb
test
insl
xchg
pop
es
mov
xchg
cs
clc
sbb
fmulp
pop
and
xchg
cmp
adc
mov
dec
std
or
cmp
or
pop
pop
jg
cmp
sar
daa
inc
sbb
adc
jg
mov
mov
xchg
add
sahf
xchg
rol
jns
fnstsw
imul
rcrb
outsb
mov
push
cmp
loop
sbb
lock
and
in
dec
negl
orb
and
adc
mov
mov
scas
xchg
mov
add
jno
add
inc
std
popf
xor
cmp
push
mov
adc
mov
mov
jge
xchg
icebp
arpl
push
test
mov
fisubl
adc
push
xor
or
cwtl
lahf
adc
imul
xchg
shrl
in
sub
bound
icebp
pop
mov
xchg
cmc
cwtl
jmp
adc
enter
sub
test
cmpb
fmull
mov
cmpl
fsub
test
jno
orl
push
aam
iret
movsl
fcomip
stc
add
mov
sbbl
cmp
and
pop
lds
imulb
enter
fldt
scas
mov
mov
lahf
sbb
xchg
add
lea
or
iret
and
jmp
repz
in
arpl
xchg
les
aaa
push
ret
add
pushf
lcall
fsub
xchg
aas
pop
xchg
fiaddl
and
cwtl
loopne
sti
xchg
call
into
movb
loop
mov
aas
pop
imul
xchg
shl
outsl
int3
aaa
cld
or
testl
xor
add
pop
fcompl
imul
pop
xlat
jo
jbe
jle
out
shr
adcl
pop
out
fistpll
push
pop
in
fisttps
sub
push
lret
je
add
stc
pushf
pop
cmpsb
add
sti
sub
add
sbb
je
cltd
adc
cltd
lret
test
lcall
jl
pop
loope
dec
pop
fisttpll
and
adc
add
out
out
int3
or
stc
jmp
push
sub
adc
jns
inc
mov
int
out
jb
jo
outsl
mov
mov
inc
je
dec
cmp
push
iret
subl
add
aam
xchg
and
jle
or
fsubl
add
shlb
push
jbe
inc
shr
hlt
or
xor
pop
je
cs
sub
mov
lret
inc
in
or
imul
mov
push
insl
push
movsl
call
mov
gs
mov
and
outsb
repnz
xchg
sub
add
pop
sbb
cltd
imul
mov
inc
stc
inc
adc
add
ffree
adc
adc
lock
mov
and
xchg
mov
repnz
popa
push
inc
iret
sbb
aad
dec
lods
je
in
inc
mov
sbb
sub
fistps
xor
scas
fisubs
and
pop
xor
mov
int3
and
popf
call
fcmovnu
push
sub
jnp
pushf
lods
lea
push
fldl
pop
test
adc
inc
sbb
imul
bound
sti
insl
popf
lods
aaa
push
or
arpl
xor
lods
cmp
dec
dec
dec
aad
mov
fldl
push
xor
push
add
add
fs
and
test
pop
rclb
inc
mov
mov
jecxz
lods
mov
dec
insb
aad
fists
sbb
negl
xor
in
movsl
mov
add
pop
pop
pop
test
xlat
xchg
cmp
xchg
out
sub
hlt
std
pop
out
imul
into
dec
ficompl
mov
les
mov
and
bound
and
ja
lods
gs
fisttps
add
imul
mov
push
stc
adc
push
adc
adc
dec
lds
test
adc
and
push
mov
cmp
xchg
mov
icebp
and
push
add
cs
push
push
fimuls
fstpl
je
movsl
loopne
add
push
pop
add
pop
mov
imul
add
xchg
mov
das
stc
rclb
mov
stc
and
lds
push
sub
xor
mov
mov
and
push
bound
adc
jno
sbb
inc
mov
out
xor
and
add
std
dec
mov
add
pop
test
adc
orps
mov
mov
cmp
xchg
pop
sub
mov
adc
mov
jnp
mov
mov
adc
adc
mov
and
xchg
cmp
mov
mov
lods
iret
push
or
push
aad
notb
imul
mov
loope
and
xchg
adc
mov
and
shrl
loopne
dec
js
lods
out
test
icebp
sbb
pusha
lcall
jle
insl
aad
fstl
hlt
fnsave
dec
test
adc
and
and
xchg
in
push
ret
and
push
inc
lods
inc
push
mov
aad
ds
or
lods
inc
add
inc
fimuls
aad
mov
idiv
movsl
aad
jecxz
sub
gs
inc
adc
inc
iret
int3
out
stc
call
push
sub
jl
mov
dec
push
push
adc
test
cwtl
xchg
bound
xlat
and
mov
mov
imul
rclb
push
lea
and
lds
test
adc
mov
add
into
xchg
mov
adc
push
mov
inc
ds
aad
cmp
add
jb
push
push
dec
stc
fucom
pop
ss
stos
ret
mov
push
pop
lret
in
hlt
add
inc
inc
cmp
mov
pop
mov
arpl
imul
mov
lahf
stc
je
mov
lret
add
or
and
push
mov
movsb
jae
dec
cmp
mov
scas
mov
mov
aas
imul
push
in
aaa
pop
adc
and
iret
fisubl
dec
fimull
cs
rorl
and
sub
xor
fstl
lods
mov
stc
les
sub
mov
push
mov
xchg
icebp
xor
or
inc
mov
xchg
aad
fisubs
jp
in
pop
and
test
test
adc
lret
cs
and
cmp
and
ret
aas
push
icebp
inc
mov
inc
aad
jno
jb
call
inc
and
aad
adc
and
xlat
xor
stc
aas
aam
mov
and
push
bound
rcll
inc
cmp
adc
add
lods
in
add
inc
lods
dec
xor
xlat
jle
jle
inc
fldl
pop
sbb
pop
xchg
movsl
sbb
push
dec
lods
mov
es
jp
mov
aaa
sbb
aad
xchg
and
int3
sub
aas
dec
dec
aad
outsl
push
orb
and
xor
int
movsl
dec
out
add
push
pop
out
sbb
hlt
mov
pop
lods
cmp
mov
pusha
mov
icebp
inc
out
xchg
imul
inc
dec
xchg
frstor
pop
xor
movsl
xor
scas
mov
pop
xchg
rcrl
lods
sub
test
into
sub
ja
lods
fs
sti
je
sbb
adc
mov
pop
std
mov
adc
leave
imul
sbbb
clc
push
push
mov
leave
add
jno
push
gs
nop
mov
jno
or
push
jle
stos
mov
cmpsl
inc
and
cmp
mov
adc
es
push
dec
mov
xor
and
sbb
cltd
aas
jo
add
mov
push
or
lret
lods
and
pop
fdivrs
jb
mov
mov
xor
jge
stc
in
mov
adc
dec
mov
mov
mov
sub
inc
push
loopne
iret
push
jp
dec
mov
stc
out
jne
cmc
and
mov
mov
mov
nop
es
mov
movsl
enter
enter
fstps
or
loopne
adc
push
mov
mov
xor
adc
loopne
mov
cwtl
and
cmc
inc
adc
fadds
mov
loop
cltd
mov
aaa
movsl
sbb
push
sbb
test
pop
xchg
push
pushf
ret
shl
mov
ret
xchg
adc
mov
mov
imull
adc
test
aam
pop
or
dec
cltd
cmp
mov
push
fwait
rorb
nop
cmp
repnz
and
cmp
divb
dec
adc
sbb
lds
add
lds
xchg
jge
je
in
cltd
adc
test
xchg
mov
xor
mov
cltd
test
hlt
das
nop
rclb
inc
pushf
pop
rol
cltd
push
sub
mov
xor
mov
pop
insl
mov
cmp
sub
push
sub
or
nop
xchg
jmp
dec
xchg
int3
ret
mov
adc
popa
lock
ljmp
xchg
pop
adc
xchg
dec
jne
rolb
adc
hlt
xor
mov
sbb
sti
dec
loope
inc
int3
adc
push
cwtl
xchg
inc
push
jo
jmp
adc
cwtl
jb
jae
ret
cltd
pshufw
fdivl
enter
fcoms
rclb
xor
push
icebp
in
mov
in
xchg
jne
cwtl
test
aaa
xchg
jno
jae
or
sbb
dec
push
sub
or
fstps
xor
cmp
adc
sub
hlt
fwait
je
lahf
aam
adc
xor
cld
je
cmc
inc
pop
adc
or
cmp
fimuls
cmpsb
cld
mov
lock
adc
loope
mov
test
sub
test
and
mov
push
pop
adc
dec
mov
push
push
pop
mov
and
xor
sarl
lock
mov
xor
dec
mov
jmp
pushf
push
sbb
adc
fidivrs
call
popa
cmpsb
push
push
js
mov
mov
sub
popa
xchg
dec
or
sub
test
adc
mov
adc
xchg
push
add
test
call
xor
and
push
xor
inc
xor
sbb
add
xchg
out
mov
inc
mov
cmp
or
push
cmp
jo
push
bound
inc
sahf
xchg
rcl
push
sarl
fucomp
je
fcmovu
cltd
arpl
jb
add
loopne
mov
mov
loope
popa
dec
js
adc
mov
xchg
and
pop
ja
adc
popa
ljmp
ficompl
inc
dec
mul
loope
add
aam
adc
fidivs
sbb
mov
xor
je
xchg
dec
xor
push
cmp
jmp
sub
in
inc
pop
push
ss
in
ss
pusha
leave
cmp
pop
mov
aaa
nop
inc
xchg
incl
add
int
stos
add
pop
fldenv
lret
pop
mov
out
into
push
test
add
xchg
mov
pop
mov
pop
or
xchg
push
pop
stos
mov
lcall
mov
mov
jo
or
pop
dec
pop
sbb
data16
adc
and
adc
xor
jae
add
jae
addr16
xchg
and
xchg
shll
inc
mov
testb
mov
xchg
test
sub
xchg
pop
inc
xchg
sbb
loope
inc
es
stos
addr16
lcall
add
push
xchg
add
cmp
es
ds
pop
ds
popa
js
or
js
ja
adc
aam
xchg
add
stc
cmpsb
push
dec
push
mov
scas
adc
xor
inc
jg
gs
add
jno
mov
sub
sbb
outsb
test
mulb
popa
scas
adc
ljmp
sub
adc
dec
push
add
jo
lea
popa
cli
mov
lods
aas
lds
sub
loop
xchg
hlt
repnz
fisubrl
adc
dec
das
mov
cmpsb
clc
cmp
es
test
xor
decl
add
add
mul
iret
mov
adc
xor
std
lods
adc
jbe
pop
fnstenv
push
ja
pusha
call
test
imulb
into
pop
xchg
aaa
jo
or
fcoms
rorb
xor
in
xor
das
rcl
dec
jbe
lret
jnp
notl
mov
lock
xchg
mov
lahf
inc
shrl
negb
pop
ret
pop
push
popa
bound
mov
bound
sub
push
shlb
iret
dec
aas
dec
mov
shrl
dec
ja
sbb
and
sub
jns
adcb
das
inc
pop
fmuls
xchg
fdivrl
xor
sbb
clc
and
sub
ja
mov
jae
je
cmc
inc
in
xor
addr16
mov
jmp
xchg
xchg
les
fidivrs
shl
adc
pop
xor
mov
call
bound
jo
adc
jb
data16
enter
push
dec
cltd
xchg
inc
mov
add
lret
mov
ljmp
imul
adc
jb
sbb
xorl
pop
cltd
fsubs
cmp
faddl
dec
mov
flds
outsb
and
push
outsb
cmp
and
cli
outsl
and
sub
popa
cwtl
add
std
pop
adc
dec
adc
add
sub
inc
mov
or
mov
and
mov
sub
jg
mov
fwait
cs
lret
sbb
xor
add
les
jo
ljmp
inc
dec
imul
push
xchg
and
popf
je
adc
fisttps
sbb
lcall
inc
pop
inc
adc
dec
in
sub
xchg
xor
mov
dec
into
adc
ds
jae
jns
adc
xchg
sbb
pop
push
out
jb
ljmp
ja
push
or
or
cli
inc
in
loop
dec
popa
clc
imul
jecxz
dec
fmuls
rcll
and
cmp
add
pop
aad
fucomp
js
popa
mov
push
pop
add
adc
adc
and
outsb
call
dec
mov
push
dec
pop
or
fs
sbb
je
jo
bound
jno,pn
repnz
imul
call
jle
jmp
dec
inc
and
push
pop
xchg
adc
sub
push
push
cmp
add
jecxz
sti
out
loopne
adcl
cmc
outsl
push
sbb
sbb
pop
sub
getsec
cmpsl
xchg
mov
push
xchg
inc
lods
inc
pop
imul
pop
testb
lods
fisttpll
popa
dec
in
jo
mov
or
cltd
jg
add
cmpsb
repz
test
inc
dec
mov
dec
lods
pop
or
cmp
cmp
sbb
dec
ret
imul
adc
and
mov
test
hlt
bound
mov
xchg
test
ret
xor
xchg
aaa
sbb
mov
dec
inc
aad
xchg
sub
push
sbb
push
jg
add
inc
in
lea
inc
scas
and
aad
add
push
or
add
ja
jp
push
lret
push
hlt
lods
or
sahf
jp
cmp
jg
dec
and
adc
dec
inc
dec
jo
add
je
adc
pop
insl
and
sub
jg
imul
sbb
push
imull
sbb
push
insb
popa
push
add
push
mov
jp
or
xchg
jg
mov
fs
cmpsb
inc
and
sbb
enter
mov
or
jns
xchg
nop
dec
and
cmp
push
out
loope
pop
mov
and
jb
or
lea
cwtl
sub
pop
or
push
popa
jbe
es
rorb
sbb
cltd
jbe
bound
inc
or
out
lods
sub
insl
mov
and
xchg
cltd
sub
jp
js
rcrl
js
loopne
xor
les
popa
insb
mov
push
call
jne
inc
faddl
sub
push
test
dec
adc
fcmovne
sub
adc
mov
popa
iret
pusha
xchg
jno
rolb
fwait
aam
es
aas
and
dec
push
sti
pop
add
cmc
sub
inc
push
fsubrl
aas
inc
out
insb
inc
or
lods
test
pop
ja
mov
insb
cmp
jmp
cmp
cmp
push
sub
out
sarl
icebp
dec
cltd
pusha
repz
jecxz
inc
mov
or
lahf
mov
cld
repz
fadds
sub
mov
xor
out
cmp
clc
mov
mov
dec
jecxz
jne
lds
in
push
inc
mov
movsl
pop
insb
push
jne
jmp
xchg
pop
inc
pop
into
or
aas
push
jns
stos
adc
sub
adc
push
adc
outsl
inc
popf
mov
iret
insl
ss
dec
pop
lock
dec
sbb
cli
shlb
cmp
movsl
xchg
bound
dec
push
xor
adc
adc
aas
dec
nop
decl
fsubrs
jno
push
jns
fsubs
inc
and
and
fsub
jae
push
and
cmp
or
push
insb
or
xchg
mov
loope
mov
push
sbb
aaa
sub
push
gs
sbb
inc
movsb
cld
jne
xorb
push
pop
mov
cs
ds
cli
enter
ja
in
and
in
call
mov
out
subl
adc
mov
sbb
jecxz
adc
test
dec
pop
add
std
insl
test
mov
outsb
stos
mov
jo
ljmp
sbb
jbe
add
inc
sub
and
imul
cmp
push
pusha
enter
pop
call
orl
ds
divl
adc
sti
add
push
push
jle
lods
xchg
push
mov
pop
jne,pt
cli
imul
pusha
out
ss
pop
fadd
dec
bts
repz
fsubp
xchg
int
sbb
inc
adcb
jmp
popf
dec
fiaddl
sub
hlt
adc
xchg
int3
sbb
sub
pop
int
pushf
cmp
jne
mov
adc
dec
imul
sbb
movsb
neg
pop
add
rol
daa
lock
xor
outsl
je
adc
cmp
sub
xor
pop
adc
adc
mov
ds
loop
jmp
cwtl
adc
pop
or
outsl
stos
push
mov
pop
aam
or
pop
jecxz
ja
nop
sub
mov
push
daa
and
mov
test
sub
push
jmp
inc
and
cmp
add
pop
dec
rcr
std
test
adc
or
mov
mov
repz
js
add
xchg
loop
and
dec
adc
sub
sbb
es
or
push
pop
pop
push
push
adc
sbb
pop
cmp
or
test
insl
je
das
mov
pop
push
loop
nop
mov
adc
sub
sti
sti
jg,pn
push
lret
add
in
lret
insl
push
inc
pop
out
xchg
jmp
push
and
xor
and
dec
pop
jno
adc
xchg
sar
xchg
ss
add
and
push
adc
cmp
mov
jle
jp
xchg
icebp
in
adc
in
cmpsl
xor
shlb
mov
mov
clc
jl
sbbb
mov
push
xchg
inc
push
push
mov
push
in
cmp
insb
or
fs
adc
push
lds
and
js
inc
mov
rcl
push
rcl
add
push
adc
dec
mov
popf
xor
in
inc
push
popa
pop
psubb
jge
add
xchg
cld
cli
test
push
push
pop
push
xchg
dec
mov
push
push
adc
jne
or
sbb
and
xor
sbb
and
inc
cmc
insb
fadds
divb
nop
movsb
scas
push
inc
cmp
out
mov
andl
add
cmp
adc
aaa
scas
xor
sarl
pop
push
pop
cwtl
fsubrp
mov
jno
loopne
sahf
out
lock
daa
lock
sbb
cmpsb
sbb
cmp
aas
bound
push
dec
enter
nopl
data16
fs
add
jae
inc
adc
dec
inc
adc
adc
je
das
lods
mov
stc
xchg
cwtl
mov
ljmp
test
jecxz
test
push
mov
repnz
pop
mov
jbe
xchg
sbb
bound
or
mov
call
and
xor
and
nop
or
and
sbb
xor
add
mov
out
and
sub
cmp
in
sbb
xor
push
or
cmp
addb
lahf
mov
xchg
nop
mov
add
dec
xor
and
cltd
sbb
cmp
jns
pop
xor
sbb
pop
add
es
cmp
jg
mov
xchg
je
adc
loopne
cmp
mov
fcoms
mov
arpl
jo
cmpsl
jecxz
xchg
add
movb
sbb
pop
xchg
out
cmc
mov
imul
jmp
sub
jne
adc
pusha
dec
xor
shlb
xchg
je
cltd
inc
roll
imul
or
jg
add
jbe
jbe
fildll
mov
insb
add
fidivs
shlb
pop
int
cmp
adc
and
daa
pop
cmp
xor
add
xor
rorb
ds
add
mov
lret
adc
dec
cwtl
sahf
sub
mov
inc
pop
xchg
loope
dec
or
lock
adc
xchg
or
pop
sbb
mov
add
jo
adc
insb
icebp
lcall
int
repnz
aaa
data16
add
cmc
and
fists
xchg
repnz
push
mov
adc
adc
fs
mov
fmuls
or
sub
test
into
in
in
jb
jg
mov
nop
push
lds
pop
es
jl
into
jle
rcrb
fdivrl
sbb
arpl
lea
mov
jae
push
xchg
ret
xchg
int3
lock
sbb
xchg
mov
pop
into
jl
aad
cwtl
sub
push
jp
xor
push
xor
ljmp
andb
sub
mov
jmp
sbb
test
adc
cmp
jg
push
add
and
add
or
push
scas
arpl
sbb
and
push
adc
stos
or
clc
jp
ret
and
jmp
pop
push
test
fadds
fstpl
cld
mov
sub
out
rcrl
sbb
scas
std
pusha
frstor
add
sti
lods
add
popa
out
or
lahf
repnz
imul
and
xor
in
out
loope
lock
rorl
jp
js
mov
repz
sti
cld
sbb
lret
cmp
leave
ficoms
or
aas
in
stos
push
mov
test
adc
jbe
push
jb
pop
sbb
and
dec
fcom
cmp
push
push
fs
sbb
add
ljmp
mov
cmpsb
and
dec
or
xor
add
icebp
inc
xor
movsl
fldcw
movntps
push
sbb
cltd
out
test
mov
clc
push
cmpsb
rcrb
shl
and
sub
out
and
mulb
sub
imul
and
adc
cs
push
mov
add
add
cmp
mov
and
and
test
add
shl
jmp
fnsave
lret
sub
divl
ljmp
jg
add
jae
in
cmp
ss
jo
in
je
pop
sarb
mov
aad
imul
lock
out
mov
sahf
in
lock
add
sub
sub
mov
aad
sbb
mov
sub
add
pop
std
push
mov
and
outsb
adc
es
xchg
dec
xchg
out
mov
sarl
lds
rclb
jecxz
adc
push
or
cmc
ss
adc
dec
mul
jo
repz
and
mov
push
push
inc
cmp
out
sub
adc
sub
mov
lods
stc
pop
jbe
jb
aas
xchg
pop
push
sub
jne
mov
out
in
push
insl
push
or
sbb
js
pop
inc
out
add
scas
call
or
xchg
inc
mov
pop
repz
test
imul
mov
add
sarb
pusha
outsb
ljmp
or
and
or
cld
jmp
adc
push
movsl
or
fnstcw
and
xor
mov
scas
daa
cs
mov
mov
loope
xchg
lock
ja
lock
in
push
cmpsl
shrl
inc
dec
popa
je
push
jmp
jl
push
mov
rolb
jg
arpl
es
jae
mov
cmp
push
push
push
daa
push
adc
fs
add
icebp
xor
mov
xor
adcb
push
shlb
xchg
add
popl
in
mov
push
aad
sub
pop
jmp
test
mov
and
call
mov
bound
or
imul
add
mov
pop
sti
xchg
sahf
lock
pop
push
pusha
cmp
mov
sbb
jnp
insb
add
cltd
mov
sub
inc
pop
cmp
pusha
add
aad
mov
shr
pushf
int3
mov
and
mov
cld
iret
enter
pop
lods
insl
jo
dec
sub
pop
or
push
pop
dec
outsb
mov
mov
sbb
cmp
xchg
dec
pop
adc
mov
mov
cmp
xchg
sbb
push
repz
push
pop
cmc
call
cli
ret
fstps
shlb
mov
inc
sub
js
jbe
test
cld
dec
xor
xor
pop
and
sbb
and
fs
cmp
aas
or
dec
fimuls
flds
mov
aas
nop
ss
inc
gs
push
adc
jno
shrb
push
jmp
xchg
ljmp
adc
roll
repz
cs
xchg
nop
jne
in
add
xor
xor
sbb
pop
add
jp
lods
cmp
cmp
sub
sbb
jge
inc
daa
cmc
stc
xchg
imul
mov
sbb
aam
div
pop
and
sub
mov
nop
or
mov
pop
cmp
sbb
daa
sti
mov
sub
lea
xor
mov
fidivrl
test
jle
mov
add
sub
rorb
loopne
jl
add
jl
cmp
cmp
test
bound
aaa
or
cmp
jnp
fmul
je
cmp
pop
xor
xchg
xor
imul
popf
loopne
sbb
movsl
mov
push
and
mov
push
inc
pop
arpl
adc
cwtl
hlt
inc
lcall
mov
lcall
cmp
scas
cmp
push
pusha
cmc
arpl
lods
push
out
bnd
rol
ror
sub
std
ds
es
push
or
mov
shl
data16
pop
jge
push
dec
adc
jae
nop
lahf
and
push
addr16
pushf
pop
xchg
push
adc
mov
pop
and
push
pop
insl
in
push
inc
push
aaa
aam
lds
push
xor
cmp
cmp
lock
or
aas
cmp
je
adc
sbb
sbb
call
ds
inc
or
gs
es
and
sub
pop
push
push
lea
xchg
das
bound
mov
mov
sbb
repnz
dec
das
sbb
or
push
adc
ja,pn
adc
ja
pop
and
jae
adc
jae
or
dec
es
pop
add
dec
test
jmp
lock
mov
into
mov
inc
outsb
imul
stos
push
or
push
in
dec
int
scas
imul
pop
or
lcall
das
push
sub
imul
inc
mov
and
insl
jp
push
push
repnz
test
pop
out
xchg
cmp
outsb
popa
outsb
ja
xchg
mov
mov
popf
ss
mov
push
push
push
mov
or
gs
mov
adc
xor
scas
cmpsl
or
mov
mov
lret
ror
jae
adc
xchg
push
cs
mov
loopne
inc
add
and
cmp
aam
loopne
push
out
adc
out
mov
add
bswap
lods
icebp
fisttpl
inc
sbb
test
aaa
push
adc
add
sub
sbb
jno
inc
xor
dec
xor
jne
xchg
and
jbe
push
xor
insb
or
adc
cmp
or
sbb
aaa
inc
das
pop
imul
dec
ja
sub
push
cmpsl
push
repz
xchg
fisubrl
adc
or
hlt
add
lahf
push
mov
mov
adc
imul
in
sbb
add
jg
or
outsb
mov
mov
idivl
jae
sub
roll
mov
mov
std
pop
dec
ss
mov
cmp
jae
pusha
cmp
dec
inc
sti
je
sahf
jp
jno
and
pop
ror
xor
shrb
sbb
cmp
or
shrl
or
stc
ss
lods
jno
jp
dec
fs
add
lock
inc
add
jge
lea
add
cmp
cmp
in
insb
mov
push
adc
mov
sub
sarb
mov
popa
push
mov
sub
xchg
add
das
sub
push
mov
cmp
or
mov
in
lea
push
cmp
imul
out
pop
ret
aam
jmp
lret
fsubrl
mov
mov
aas
mov
lds
sti
cld
add
cmp
cld
xchg
push
mov
or
jbe
es
xor
ja
stc
ret
push
arpl
and
repnz
lods
push
fldenv
cmp
inc
test
add
inc
xor
aas
inc
stc
pop
or
pop
mov
andb
in
dec
adc
das
fs
fnstsw
data16
fwait
add
sub
push
add
xor
dec
mul
dec
daa
movsl
fdiv
mov
jl
pop
sbb
insl
movsb
ret
mov
dec
and
xchg
shlb
add
addr16
out
mov
xor
movsl
mov
cmp
orb
jb
jbe
or
outsb
push
lods
xchg
pop
mov
lds
mov
and
outsb
dec
and
sbb
add
ja
add
ja
into
add
push
lods
mov
mov
sbb
scas
mov
pop
dec
or
pop
orl
push
cmp
insb
xchg
xchg
fs
lea
loope
cmp
inc
or
inc
aas
lds
es
daa
or
test
jae
cwtl
adc
fsubl
daa
xor
pop
dec
stos
or
mov
je
pop
sub
imul
lock
xchg
push
adc
jno
dec
ja
aad
mov
mov
int
xor
mov
gs
mov
fs
enter
movsb
cld
xor
mov
lods
int
adc
outsl
pushf
fsubl
and
add
mov
push
arpl
popl
arpl
aam
inc
outsb
push
addr16
xorb
mov
pop
add
mov
stc
shrb
cmpps
aaa
xor
loopnew
shll
fisubl
stc
or
popf
sbb
and
mov
inc
add
push
cmp
add
cmp
push
pop
or
pushf
sub
push
and
lret
mov
and
jbe
dec
sub
mov
out
daa
inc
lea
int3
or
lret
and
and
test
inc
sbb
jle
dec
loope
arpl
xor
xor
hlt
and
xchg
cmp
in
xor
shr
lock
add
cmpsb
sbb
adc
pop
in
in
and
rcll
mov
dec
in
rcrb
pusha
dec
nop
mov
insl
subb
fildl
jmp
ss
sub
inc
aas
pshuflw
sub
mov
sbb
into
in
push
mov
sub
lds
add
xchg
mov
dec
aad
mov
pop
push
dec
adc
aas
aad
mov
mov
addr16
xchg
jge
mov
dec
std
in
jnp
ds
push
cli
adc
aam
insl
cmp
shll
jecxz
push
xor
aam
mov
dec
ljmp
jne
outsl
mov
scas
jmp
jnp
sub
ljmp
or
mov
shlb
dec
pop
push
push
xchg
fwait
pop
add
test
adc
roll
push
shl
nop
jnp
lock
adc
sub
add
pop
stos
ss
bound
add
data16
movsb
inc
icebp
das
loopne
push
adc
and
add
sbb
push
mov
jbe
cmpb
add
cmp
lock
mov
fnstsw
adc
xor
inc
inc
ret
adc
pop
sub
xor
out
or
inc
xor
push
sub
stos
inc
leave
lock
xor
xchg
push
out
pushf
dec
movsb
jle
cltd
shlb
insw
mov
stos
dec
xchg
pusha
stc
add
lds
jae
jo
mov
shrb
bound
int
popf
lcall
push
out
jl
lods
xor
and
push
repz
arpl
xor
stc
in
adc
jle
dec
pop
imul
scas
fldl
push
inc
in
cmp
int3
xchg
iret
add
push
shrb
into
and
addr16
pop
jle
scas
dec
or
push
notl
iret
and
ljmp
daa
rorb
int
sub
mov
pop
insl
mov
pop
loopne
mov
push
int
aad
cwtl
xchg
testl
fisttpl
loopne
movsl
add
lea
fs
and
xor
jecxz
xor
jo
cmc
mov
aam
push
outsb
dec
mov
ret
jle
push
dec
stc
negb
xor
aad
shr
call
dec
cmp
xorb
mov
and
in
lods
enter
je
push
dec
fcmovbe
or
movsb
and
xchg
push
jo
pusha
or
or
xchg
imul
or
xor
pop
popa
add
sbb
in
gs
mov
call
clc
mov
inc
mov
sbb
mov
pop
sub
jne
mov
push
pushf
enter
dec
int3
orl
cmp
in
test
xchg
popf
mov
mov
clc
fnstcw
push
dec
sub
dec
ds
or
mov
jne
inc
mov
jbe
sub
aaa
dec
adc
mov
inc
jle
dec
push
aam
fsubr
pusha
xor
or
out
ss
dec
jg
mov
xor
je
xchg
inc
jo
test
les
fs
sbb
sbb
add
cld
pop
mov
test
push
mov
pop
jns
xchg
popa
or
lock
jb
clc
cld
jp
jne
dec
inc
add
xor
hlt
cmp
cmpb
fs
lods
shlb
repnz
jbe
adc
mov
mov
mov
push
cmp
push
outsl
mov
add
xchg
mov
mov
or
sahf
test
mov
push
jle
sub
pop
loope
adc
fs
mov
cmc
arpl
je
addr16
inc
xor
cmpsl
sbb
or
mov
sbb
pop
pop
and
sub
cmpsl
adc
cmp
jg
js
cmp
or
push
push
sub
data16
jbe
or
dec
aaa
xor
mov
cmp
jg
and
sub
fmull
into
lcall
hlt
je
jb
mov
sbb
cwtl
gs
cld
ja
xor
aam
cmp
in
aad
push
sbb
xchg
fs
jnp
mov
pop
xor
push
loopne
mov
xor
push
movl
push
add
adc
sub
andb
aad
int3
std
mov
push
icebp
mov
jmp
jns
adc
out
sub
inc
in
fldenv
sub
jne
adc
push
inc
add
add
sahf
aad
and
mov
mov
outsl
mov
dec
popf
cmpsb
repz
mov
sbb
int
dec
push
mov
mov
sti
add
dec
popf
mov
lret
jnp
push
push
mov
test
inc
jmp
inc
das
div
insl
data16
in
scas
jmp
ja
mov
mov
pop
and
jns
inc
mov
dec
sub
or
sub
mov
mov
das
call
push
fsubrs
outsb
add
sahf
add
sub
or
test
aaa
ret
and
push
jbe
add
je
pusha
xchg
clc
inc
stc
sub
mov
jae
jo
inc
loop
add
dec
sub
and
cmp
sub
sub
push
addr16
int3
push
add
push
push
push
add
add
fucomi
fisttps
add
pop
adc
ljmp
jne
stos
xlat
push
add
cmp
stc
dec
repnz
out
mov
push
les
int3
fadds
je
mov
shrb
fdivp
aad
adc
arpl
push
sbb
sbb
push
dec
ljmp
inc
mov
pusha
dec
add
inc
adc
and
dec
adc
or
hlt
shll
xchg
pop
jno
push
adc
icebp
outsl
jbe
cmp
lods
cli
shl
jb
jnp
or
mov
sub
and
loopne
mov
jl
jns
je
mov
and
and
pushf
idivl
pop
jo
or
push
dec
jl
clc
xchg
into
jo
aaa
mulb
or
aas
or
push
sbbb
mov
jns
inc
inc
push
jl
jecxz
in
inc
sti
jl
lret
cmp
push
int3
insl
jge
or
or
add
rcrb
hlt
clc
lahf
xchg
jbe
fisubl
clc
dec
adc
dec
aaa
das
mov
in
sbb
pop
mov
cmp
dec
sub
out
adc
stc
push
push
sub
jns
pop
cmp
adc
cltd
or
add
add
add
cmp
cmp
ss
fwait
mov
jle
xchg
ljmp
xor
test
les
stos
out
pop
insb
dec
pop
dec
dec
jge
or
add
loopne
or
and
in
jae
sub
insb
lcall
mov
call
and
and
arpl
insb
mov
bound
xor
out
push
push
fstpt
mov
jp
pushf
push
shll
fstp
xor
xor
jae
adc
pop
iret
imul
push
mov
adc
fsubs
inc
pop
dec
mov
xchg
frstor
aaa
mov
cld
cmp
test
imul
or
pop
subb
je
imul
fs
fs
lret
sub
xchg
or
arpl
cmp
jbe
add
cli
or
xor
std
inc
adc
push
sub
lret
adcb
sbb
stc
and
xor
das
sbb
je
add
rolb
jbe
pop
sbbb
negb
stc
les
js
ss
je
outsb
fisttpll
or
les
sti
pop
stc
push
roll
jae
inc
adc
ds
mov
and
sahf
inc
aam
cmp
adc
jns
xor
pop
hlt
out
test
fsubrl
sub
test
stc
sub
inc
notl
mov
addb
pushf
jne
push
lods
xor
mov
cld
inc
in
and
jg
sbb
andl
xor
push
sbb
in
dec
cwtl
inc
pop
push
popf
aad
cwtl
fisttpll
imul
dec
mov
jae
cltd
imul
push
mov
imul
hlt
fs
sbb
pop
and
pop
dec
orb
sub
cld
lahf
sbb
mov
and
xor
ret
pop
mov
pop
mov
aas
cltd
scas
mov
fisttps
orb
lcall
jmp
rorl
aad
cwtl
xchg
jno
push
fwait
sbb
sarb
adc
enter
movsl
jbe
je
xor
hlt
test
adc
mov
andl
mov
or
xor
push
xor
ret
lea
cmp
decl
icebp
xor
stos
jg
xchg
popa
jae
stc
sub
divb
loopne
add
mov
sbb
push
dec
sub
push
sub
mov
push
push
sub
icebp
pop
jg
cmp
gs
rol
loop
xor
enter
rcr
inc
subl
inc
in
xor
es
xchg
les
mov
loope
adc
bound
or
jmp
mov
daa
je
jne
sub
sbb
jbe
pushf
xlat
out
jnp
loop
fnstcw
fcompl
push
cmpsb
cwtl
xor
mov
sub
and
subl
push
addr16
rclb
pop
dec
or
sbb
cmpsl
sbb
xor
je
je
lahf
adc
ror
sub
dec
in
andl
leave
mov
mov
push
sbb
inc
mov
push
mov
xchg
push
dec
movsl
sbb
cmc
inc
test
add
call
pushf
insl
inc
jp
push
jbe
xor
mov
aaa
shll
inc
or
test
add
mov
push
mov
and
sbb
cwtl
ljmp
push
rcrb
and
movsl
cs
mov
leave
icebp
or
inc
and
outsb
and
bound
mov
sbb
add
push
or
and
mov
push
fwait
or
push
jmp
ss
xlat
add
filds
add
dec
repz
push
jb
cld
test
xchg
pusha
xor
xlat
jo
cmp
cs
add
daa
lret
sbb
xchg
imul
mov
rcl
test
jl
xor
pop
jne
lock
cmp
sbb
cs
xor
add
inc
dec
rclb
adc
aaa
push
adc
movsb
mov
out
mov
or
adc
rcrb
clc
sbb
sbb
jne
mov
xor
xor
or
and
pop
js
fnsave
add
dec
inc
cmpsl
addb
mov
pop
mov
jno
xorl
adc
inc
mov
cmp
imul
and
insb
add
fiaddl
sub
pop
push
mov
ret
dec
pop
inc
ret
jle
hlt
push
movsb
ljmp
dec
push
pop
cwtl
ret
fst
jb
dec
jb
fsts
lock
popa
test
jno
dec
std
js
lods
mov
pop
push
mov
jg
mov
fs
sbb
cmc
mov
int3
jae
mov
bound
lret
test
call
movsb
js
cmpb
adc
pop
pop
addr16
repnz
add
je
dec
mov
filds
insl
sub
call
adc
daa
cmp
stc
inc
sbb
aas
pop
clc
adc
mov
cld
or
lock
and
and
stc
loop
sbbl
adc
inc
lds
jne
jnp
jbe
dec
lea
scas
fidivl
lahf
scas
cmpsl
stos
gs
xor
xor
xor
dec
push
test
in
mov
sbb
in
andl
clc
jecxz
or
dec
nop
mov
das
shll
cwtl
pop
dec
adc
or
dec
lret
lock
test
call
add
cmpsb
sbb
pop
test
cmp
sub
xor
fisttpll
mov
scas
jp
scas
divl
cmp
jl
mov
mov
outsl
xor
sbbl
out
jl
mov
je
int
fs
mov
and
stos
in
push
nop
clc
cmp
insb
push
add
movsb
ja
mov
mov
mov
cli
push
in
ds
pop
cmp
cmp
cmp
mov
and
pop
push
dec
add
shll
xchg
insb
fwait
repnz
push
mov
nop
fs
xchg
mov
xor
orb
sub
jne
sub
les
call
xchg
mov
lds
repnz
test
push
mov
icebp
insb
out
cmp
cmp
or
cmc
push
cwtd
xchg
ss
lods
cmc
mov
pop
ljmp
push
imul
jne
adc
test
iret
cld
pop
push
arpl
adc
cwtl
je
jecxz
xchg
dec
cmpsl
mov
cwtl
pop
or
mov
cmp
sti
rcrl
jge
das
and
mov
test
xor
and
pop
and
test
mov
mov
sub
pop
outsl
shlb
add
movsb
scas
loopne
flds
sbb
ljmp
ljmp
push
scas
mov
jge
fisubrl
mov
xor
into
jne
jbe
lret
and
cmp
cmpsb
xchg
add
add
and
cmp
addr16
stos
push
xchg
scas
iret
mov
mov
and
mulb
xchg
lret
add
addl
bound
mov
sahf
mov
push
pushf
mov
scas
sub
imul
add
aad
stc
sbbl
xor
mov
and
gs
scas
sbb
stos
adc
cmp
notb
aam
pop
mov
aad
mov
bound
push
sbb
imul
mov
test
adcl
mov
aad
jecxz
and
dec
sub
mov
popa
fsubs
xor
dec
adcb
std
jp
sbb
inc
inc
adc
ret
es
je
ret
cmp
mov
scas
sbb
call
lods
adc
cmp
adc
mov
jnp
stc
add
cmp
xor
pop
call
inc
cmpsb
popf
pop
clc
mov
sub
push
insl
adc
xchg
jno
sub
fisubrl
pop
test
loopne
or
mov
data16
dec
push
into
out
data16
sbb
cmpl
in
fidivl
sub
out
inc
jb
push
call
leave
sub
or
pop
sub
and
fs
outsb
inc
test
pop
adc
js
xor
dec
aas
jmp
push
fldl
lods
pushf
pop
mov
mov
adc
inc
outsl
leave
les
lret
mov
xchg
xor
push
jbe
push
pop
cltd
call
xor
mov
lock
jno
adcb
mov
xchg
push
bound
outsl
jo
call
mov
push
inc
dec
out
test
sahf
jnp
inc
data16
cmp
pop
mov
mov
repz
or
jp
loope
rol
leave
add
push
add
jmp
arpl
lret
dec
mov
arpl
les
adc
cmp
icebp
call
xchg
ds
cmp
ret
xor
fs
mov
adc
icebp
imul
lods
and
pop
pop
push
cwtl
xchg
mov
sub
movsb
fidivl
loopne
call
ljmp
movsl
in
xchg
int
xchg
jge
lahf
ret
dec
xor
inc
and
dec
call
mulb
inc
dec
dec
adc
push
mov
add
sub
xor
push
es
stc
push
repnz
call
mov
sub
mov
outsb
imul
push
xchg
or
fcompl
shll
jnp
rcr
push
inc
and
dec
je
cmp
mov
loopne
stos
stos
push
test
js
fwait
push
hlt
mov
sbb
icebp
repz
sbb
sbb
movsb
sbb
movsb
shl
jle
fnstenv
jne
adc
mov
daa
or
push
arpl
xor
jno
inc
dec
push
jno
dec
das
sbb
pop
sub
rcrb
mov
rcl
sub
and
fildll
leave
pop
sahf
jmp
add
iret
mov
imul
push
test
xchg
loope
cmp
xchg
js
rolb
add
xchg
adc
mov
mov
push
shlb
enter
and
test
jmp
add
add
flds
mov
push
mov
xchg
stos
std
repnz
mov
fs
test
or
mov
addr16
test
lcall
leave
or
jl
sahf
cmp
lea
movb
scas
inc
jmp
es
sbb
push
xchg
inc
out
adc
fsubrl
nop
jle
jo
cmc
mov
out
xor
pop
jb
stc
inc
jge
mov
mov
into
sub
jno
cmp
lock
xchg
aaa
push
leave
adc
outsb
adc
xchg
jg
mov
jmp
mulb
shl
mov
mov
push
mov
orb
cmp
jae
pop
or
inc
in
cmpsb
pop
xchg
and
dec
mov
pop
and
pop
movsb
ret
mov
sub
jle
add
adc
fistpll
xchg
add
inc
shll
dec
pop
xor
mov
jle
leave
or
push
dec
xor
into
xor
pop
jns
jl
cmpsb
inc
out
xchg
shrb
add
add
xor
daa
jg
repz
cld
iret
inc
mov
xor
add
jns
jne
jmp
or
mov
push
shr
and
shl
xchg
rorb
add
mov
cltd
xchg
jge
shrl
mov
mov
sbb
loopne
and
inc
xchg
adc
and
mov
and
lret
xor
jae
sub
inc
ret
adc
xor
mov
rclb
ds
es
dec
xchg
push
mov
mov
lahf
mov
nop
call
pushf
clc
imul
mov
push
jns
fwait
loop
jne
mov
pop
sbb
inc
dec
scas
cmp
es
into
sub
add
scas
pop
inc
leave
testl
push
xor
std
add
mov
ja
clc
jns
adc
cmp
pop
cmp
xchg
and
bound
mov
pop
and
mov
pop
push
jl
out
daa
ja
adcl
jge
mov
adc
inc
and
cmp
push
in
adc
movsl
ja
sub
pop
mov
mov
cltd
sbb
fs
cwtl
ja
mov
cltd
fmuls
or
xor
jns
in
test
call
fsub
jb
mov
pop
push
sbb
inc
xor
sub
aam
outsb
jecxz
sbb
out
or
cmp
notb
inc
xor
mov
ss
into
sub
cli
out
jg
mov
add
xchg
adc
aaa
pop
cld
fwait
shl
bound
xchg
dec
dec
cbtw
int
lret
xchg
jp
pop
cmp
into
mov
mov
pop
fwait
xchg
lahf
mov
dec
mov
lods
hlt
mov
pushf
outsb
ret
cmpb
cmpsl
mov
dec
call
jne
dec
out
dec
insb
adc
push
mov
std
mov
stos
or
inc
enter
jo
sub
sbb
sub
sbb
pop
xchg
imul
data16
pop
adc
adc
mov
jp
xchg
pop
clc
jmp
outsl
mov
dec
jg
je
cli
sbb
jmp
xor
inc
xor
push
popa
stc
mov
sahf
cwtl
mov
int
mov
mov
leave
push
push
add
mov
lods
ljmp
or
roll
out
pop
inc
rcr
ljmp
adc
xor
inc
ret
cmp
mov
add
cmp
dec
jb
lods
add
jle
insb
cltd
xlat
xchg
mov
sbb
pusha
std
pop
cmp
or
and
enter
addl
imul
rcrl
in
add
fldenv
xor
pop
mov
data16
in
cli
iret
and
sbb
adc
mov
sbb
dec
mov
mov
push
dec
in
mov
add
add
push
pop
add
repz
dec
sub
dec
push
push
push
cmp
aam
arpl
shll
or
push
sbbl
sbb
push
push
jmp
aam
inc
sti
xchg
xchg
aas
cwtl
outsl
jge
mov
test
dec
or
push
push
cmp
mov
sbb
xor
cli
and
sbb
gs
cmp
mov
shr
dec
leave
iret
insl
or
mov
add
loopne
add
in
lods
imul
cvtps2pd
mov
lock
test
xchg
fmuls
jmp
sub
jbe
les
pusha
inc
shrl
dec
and
loopne
inc
scas
fwait
mov
cmp
xor
inc
xchg
mov
or
push
arpl
mov
pop
mov
and
roll
test
push
xchg
movsb
jle
das
scas
imulb
inc
inc
outsl
dec
cmp
jne
inc
cmp
call
sub
push
jmp
xor
pop
adc
inc
and
movsl
xor
mov
or
adc
ret
movsl
pop
std
stos
or
or
aas
pusha
int
jne
orb
arpl
mov
sub
jns
add
mov
test
or
adc
xchg
add
mov
mov
xlat
aas
mov
sub
xor
cmp
pop
push
stos
pop
gs
pop
push
sbb
ja
sarl
call
stos
ja
xor
outsl
cmpsb
sbb
mov
push
cmp
inc
stos
jg
repz
into
sub
les
inc
orb
mov
movsl
push
int3
jbe
or
sahf
fnstcw
and
test
mov
clc
test
notb
aam
mov
fldl
loope
iret
mov
xlat
aaa
mov
push
dec
repz
divb
pop
stos
or
pop
adc
push
fmull
rorl
sub
loopne
ret
pop
add
and
dec
mov
into
xlat
cmp
lcall
push
popa
fildl
or
cmp
and
mov
mov
roll
adc
mov
push
lea
nop
pop
test
clc
pushf
testl
ficompl
adc
xchg
lret
in
lock
insb
mov
inc
leave
adc
push
test
pop
rclb
std
mov
addr16
or
pop
test
inc
mov
mov
sti
push
js
ret
pop
mov
inc
repz
mov
jns
call
pop
cli
fiadds
daa
mov
adc
xchg
cmp
fidivrl
jnp
cwtl
shrl
std
or
test
xchg
dec
push
dec
jno
popf
push
and
call
adc
sbb
imul
mov
popa
lret
inc
ret
test
pop
dec
sub
ja
dec
add
stc
push
daa
jnp
pop
adc
mov
test
dec
push
mov
adc
sti
and
jns
jnp
test
dec
push
dec
shll
jno
lea
lods
mov
lahf
sbb
ret
int
mov
js
add
xchg
pop
push
ljmp
cs
aaa
xchg
ficompl
jno
push
cwtl
out
mov
xchg
jge
pop
xchg
add
loope
and
gs
sub
ret
xor
push
lcall
pop
mov
jl
or
dec
incl
cmp
push
push
lock
rdmsr
pop
and
in
ljmp
cmp
add
xchg
jp
cmp
sti
lcall
dec
aad
adc
dec
sahf
xchg
mov
mov
sbb
add
or
jns
or
outsl
aas
daa
lret
imul
pop
inc
iret
lcall
cmpsb
sahf
test
xchg
lock
psubsb
bound
pop
mov
adc
ret
xor
push
mov
pusha
ja
mov
mov
xor
xchg
jnp
aad
mov
and
paddsb
xchg
inc
add
inc
mov
cmpsb
in
arpl
cmp
std
sbb
sub
xchg
je
cmp
out
pop
push
mov
out
mov
add
or
xchg
or
jb
xor
pop
sarl
add
lock
add
cmp
xor
add
addr16
xchg
jae
jmp
pop
in
lds
movsb
pop
lds
int3
jno
xorl
jae
ret
jl,pn
inc
add
xchg
in
xor
ss
mov
and
stc
scas
cltd
jae
mov
sub
push
cmp
cmp
scas
pushf
xchg
sub
xor
int3
out
adc
cltd
xor
std
enter
outsb
mov
mov
pop
cmp
rorl
data16
stos
pop
add
or
ja
int3
xchg
jb
add
dec
fiaddl
stos
cwtl
and
jno
mov
fistpl
cmpb
shl
or
cs
adc
xor
roll
mov
adc
push
rol
test
sub
mov
mov
mov
jmp
add
lea
cwtl
out
push
adc
mov
repnz
add
adc
fdivr
jl
js
aam
pop
in
jnp
and
cld
ljmp
add
divl
mov
faddl
jge
lahf
pop
xchg
popa
xor
call
xchg
cmpsb
scas
aas
sbb
rclb
sub
jge
or
push
add
adc
aam
sbb
pop
lahf
lcall
jmp
xchg
aad
xlat
mov
faddl
sbbb
add
inc
push
psrad
fnsave
aam
dec
pop
mov
inc
scas
sbb
adc
cmpsl
jno
stc
sar
das
add
jnp
roll
shlb
jne
push
add
xor
icebp
jbe
xor
adc
aas
js
lock
leave
fucomip
and
cmp
jmp
push
test
jg
int
jle
sbb
mov
pop
mov
loopne
clc
or
mov
sbb
xadd
call
sub
in
mov
int
adc
xor
mov
mov
pop
fcmovnu
or
popf
jp
xchg
jne
lcall
mov
mov
fisubrs
insb
jp
fisttpll
call
pop
leave
cwtl
xor
push
sbb
lcall
inc
int
push
or
mov
test
sbb
arpl
push
test
sub
dec
jne
jge
lods
push
aad
es
cltd
mov
adc
lcall
fldt
sub
adc
lods
jle,pn
into
cmp
inc
lcall
loopne
push
roll
jmp
mov
data16
adc
sub
mov
cmp
std
inc
into
std
cltd
push
orb
mov
aas
and
outsb
test
jecxz
adc
test
jo
xor
and
cmp
inc
cmp
rep
add
inc
lret
je
jo
xor
dec
inc
jno
or
inc
lret
pop
sbb
jge
repnz
mov
push
jae
fmull
out
inc
xchg
adc
shll
inc
movaps
scas
rcl
test
cmp
jg
jnp
inc
sbb
jp
cld
inc
xchg
outsb
jecxz
and
sarl
xor
dec
inc
aaa
and
mov
xchg
daa
add
and
or
mov
sbb
and
or
movsb
scas
lock
sub
decb
int
cmp
xchg
mov
in
cmp
jecxz
aas
das
pop
fcompl
out
xchg
mov
mov
scas
inc
xchg
cld
je
call
icebp
add
or
and
sbb
in
mov
add
inc
aas
cmp
data16
cmp
push
ljmp
repz
gs
jmp
std
sbb
cwtl
mov
xchg
dec
shrb
add
mov
pop
pop
inc
inc
sti
xchg
lahf
or
xor
or
push
inc
or
and
pop
pushaw
jae
lods
and
fs
andb
js
and
pusha
arpl
and
push
scas
cmp
mov
add
in
jmp
sbb
mov
add
xor
ja
jbe
mov
mov
push
xor
add
pop
mov
out
in
pop
ja
mov
xor
push
inc
out
jg
xchg
pusha
fcmovu
aam
enter
aas
imul
pop
insl
aad
add
pop
xchg
inc
out
data16
xchg
pop
adc
in
in
pusha
scas
jns
stos
sbb
aas
or
adc
push
push
or
jns
sbb
popf
mov
cmp
sbb
sub
mov
leave
scas
inc
into
push
cmp
cmp
jb
inc
and
jnp
dec
xchg
fldt
sbb
lahf
add
popf
dec
or
inc
push
mov
or
fisttpll
add
pop
shll
shl
or
pushl
dec
xlat
mov
int3
sub
lahf
rorb
mov
popa
adc
adc
xchg
xor
sbb
call
push
or
jecxz
icebp
icebp
pusha
out
and
sbb
repnz
and
mov
test
and
jb
into
aaa
jmp
push
leave
aad
js
add
cmp
cmp
push
cmp
mov
loope
int
mov
lds
lods
movsb
hlt
pushf
sti
cmp
lret
adc
sub
int3
pop
mov
std
pop
pushf
mov
sub
ficompl
testl
outsl
lds
and
ss
pop
movsl
ja
mov
fs
cmp
cmp
xchg
movsl
iret
and
jle
cs
push
mov
scas
imul
aas
mov
imul
out
mov
sbb
jmp
stc
sbbb
js
data16
leave
call
xlat
cmp
sub
scas
std
jmp
call
xchg
push
xor
jb
adc
das
sub
jns
leave
pop
mov
jecxz
retw
cmp
xchg
xchg
pop
fistps
lock
jns
loop
arpl
add
or
pop
js
adcl
leave
mov
jp
lea
inc
and
loop
cltd
jl
pop
and
adc
movsb
pushf
jns
shrb
mov
jo
mov
xchg
mov
add
gs
and
cmp
push
mov
add
cmp
inc
pop
je
sarl
inc
pop
cmp
push
or
sub
test
out
test
dec
mov
jns
inc
push
adc
cmpsb
enter
pusha
bound
and
or
adc
imul
scas
mov
mov
cs
int3
push
mov
xor
cmp
ljmp
lcall
out
dec
loopne
xchg
push
mov
sub
int
cmp
adc
sub
add
sbb
test
rclb
sbb
int3
arpl
in
adc
jl
adc
fistpl
pop
test
sbb
or
out
out
xlat
lret
dec
js
cld
notb
lahf
popa
mov
mov
dec
test
and
sbb
test
pop
xor
dec
cmp
rcr
out
fincstp
push
jmp
pop
jmp
push
outsb
sti
leave
sub
out
mov
push
push
jmp
adc
shl
mov
lcall
and
int3
xor
stos
fcoml
inc
dec
mov
jg
mov
sbb
pusha
enter
mov
shr
outsb
iret
cmpsl
andl
addr16
adc
sub
arpl
push
jns
fstl
mov
roll
test
lahf
or
jne
mov
inc
sub
fstpl
cmp
push
outsb
sbb
fadd
fsubl
outsl
inc
pusha
adc
lahf
js
jne
lock
pop
dec
dec
and
inc
pop
sbb
pushf
push
fists
mov
jbe
dec
scas
adc
in
dec
lahf
inc
ret
addr16
jle
cmpsb
or
and
xlat
jbe
push
push
sub
lods
inc
out
push
fisttps
dec
aam
inc
enter
vmovdqa
mov
pop
mov
jno
or
push
shl
jne
push
and
in
aaa
rcr
add
mov
jae
mov
fcmovu
push
aaa
sbb
inc
nop
or
lret
jbe
add
jg
xchg
push
cli
inc
call
mov
loope
or
dec
jb
sbb
inc
xor
mov
sub
push
sbb
ja
out
loop
cmp
and
mov
nop
xchg
dec
lret
aas
sbb
fsubs
cmp
push
mov
rcr
pop
xor
push
mov
jge
push
aaa
sbb
inc
xor
aad
xchg
hlt
imulb
sbb
push
lea
fbstp
movsl
inc
xor
lea
inc
jnp
lcall
daa
add
sub
stc
cmpsl
insb
std
js
sub
pop
subb
ja
sbb
and
pop
out
sub
rol
push
scas
xor
fnsave
nop
sti
pop
xor
lahf
xor
push
sub
push
jno
pop
xchg
xchg
mov
fldcw
insl
xor
dec
hlt
iret
cwtl
and
or
mov
stc
lods
push
push
ds
jp
add
stc
mov
std
cmc
fnsave
test
sub
and
mov
nop
in
in
sub
mov
or
jl
mov
shll
mov
pop
mov
sub
ss
gs
frstor
push
cmpl
gs
add
dec
ds
aas
pop
cmp
mov
mov
jmp
mov
jge
leave
testb
scas
out
dec
inc
or
or
jns
fiadds
add
add
jns
fisubl
divb
loopnew
xor
and
xor
stos
xor
mov
mov
jecxz
jo
add
xchg
shl
dec
out
in
std
cmpsb
in
jp
pop
mov
fsubp
aas
mov
jmp
cmp
pop
sbb
sbb
cmpsl
dec
fidivrl
pop
sbb
scas
mov
xor
or
jle
xchg
inc
inc
cld
mov
adc
push
sahf
xor
inc
xchg
je
dec
pop
addb
ret
fwait
jle
mov
cmp
mov
xchg
adc
lahf
add
or
pop
ret
push
inc
ss
pop
pop
outsb
pop
addl
enter
icebp
jmp
shlb
add
pop
mov
mov
out
adc
shlb
filds
arpl
sub
into
subb
lock
fwait
jp
popa
mov
xor
and
pop
pushf
inc
test
inc
dec
loopne
mov
inc
or
jecxz
mov
xchg
jo
sub
shlb
or
or
and
add
movsl
sub
out
icebp
push
mov
jnp
pop
notb
pushf
sti
loop
mov
or
sbb
outsb
pslld
dec
cli
xchg
push
in
fisttpl
lret
dec
pop
cmp
je
mov
inc
leave
test
cmc
sub
or
adc
mov
stc
mov
pop
xchg
pop
pop
or
aad
sbb
imul
xor
shll
adc
sub
add
or
mov
andb
mov
jae
cmp
ja
push
adc
inc
test
sub
mov
frndint
mov
xchg
add
push
fsubrl
inc
pop
pop
add
jo
mov
nop
adc
xchg
dec
sbb
mov
lea
cmpsb
sbb
push
loopne
lock
xchg
sub
fcoml
mov
push
out
into
or
outsl
mov
adc
xchg
and
arpl
mov
data16
mov
and
dec
int3
xor
dec
stos
adc
dec
fidivrs
bnd
xchg
loopne
pop
cltd
or
push
add
lods
inc
cmp
outsl
nop
add
mov
mov
fcoml
or
jle
jb
andb
test
repnz
repnz
pop
aad
xchg
aaa
mov
cmp
xchg
sub
adc
test
push
pop
test
mov
xor
test
dec
push
xchg
add
adc
lret
lret
and
ret
pop
mov
cmp
cmp
xchg
les
scas
adc
sbb
inc
js
pop
loope
or
xchg
mov
nop
lds
xor
shll
fimuls
inc
inc
lds
sbb
pop
aam
daa
orl
shlb
cmpsb
in
popa
imul
pop
sub
mov
lock
jle
repnz
push
popf
sbb
push
dec
jmp
mov
mov
insl
cmp
daa
sub
fbld
sbb
or
lods
push
clc
mov
mov
xor
jle
movsb
mov
or
jae
lret
ljmp
inc
xorl
fdivs
fadd
roll
inc
mov
ret
inc
inc
cmc
mov
jo
lea
add
hlt
sbb
xor
popl
add
out
jge
int3
je
out
inc
dec
lods
mov
cmc
add
mov
cmp
jmp
adc
sbb
sub
or
scas
adc
mov
push
push
out
pop
roll
pushf
or
popa
jo
mov
dec
cli
imul
mov
or
addr16
push
pop
xor
xchg
mov
jae
mov
push
out
dec
adc
call
cli
std
test
jae
stc
hlt
mov
loope
jecxz
sbb
les
das
aad
ficoms
aam
pop
ret
mov
inc
ja
dec
data16
inc
mov
pop
push
testl
mov
movsb
fistpll
xchg
mov
or
mov
and
push
xor
xchg
sbb
iret
pop
test
dec
push
pop
pushl
adc
mov
addr16
mov
xchg
outsl
cs
lea
bound
push
push
lea
xchg
lcall
cltd
gs
sbb
push
xor
jno
fdivrl
cmp
and
popa
out
xor
int
aaa
rol
pop
mov
xchg
jae
ret
or
lods
lret
fildl
lcall
sahf
mov
jle
and
sbb
in
push
sub
push
xor
add
imul
mov
jmp
push
adcb
cmp
cmp
lret
pusha
mov
popf
bswap
mov
and
jb
inc
dec
xor
es
xchg
push
mov
jo
fsts
lret
mov
dec
inc
pop
bound
je
mov
mov
insb
std
or
test
jne
pop
movsl
push
add
popa
sbb
xor
mov
mov
or
dec
push
add
inc
cmpsl
adc
jmp
repnz
mov
mov
pop
sub
and
adc
dec
pop
in
add
rcrb
adc
mov
popf
pop
inc
inc
pop
repz
cmp
mov
xor
pop
jge
add
lret
leave
push
cmp
mov
jo
mulw
xorl
shll
ss
mov
pop
bound
or
sub
incl
ja
or
test
into
xor
push
icebp
das
inc
xchg
in
lods
idivl
inc
cmc
mov
cmp
out
sub
mov
outsb
xor
xor
push
dec
dec
mov
push
cmc
lret
mov
ds
and
into
sub
popl
mov
dec
imul
ret
aad
ret
or
cmp
pop
pop
in
lea
jge
les
aam
push
xchg
xchg
xchg
cmp
xor
js
sub
roll
sub
pop
int
ds
mov
pop
add
enter
mov
repz
jmp
inc
sub
and
loope
cmp
mov
xchg
fsubs
lahf
mov
mov
sub
out
push
mov
cmpsb
daa
jne,pn
xor
and
cmp
dec
call
test
repz
jge
push
ljmp
and
mov
pop
mov
int3
push
mov
jmp
or
or
jl
cmp
or
repz
push
or
sub
xchg
inc
insb
push
cmpb
add
mov
sbb
in
jp
jb
sub
pop
xlat
mulb
addr16
dec
shrb
out
rcll
int3
test
jge
cltd
mov
imul
push
push
jp
or
in
or
mov
movsb
arpl
push
or
jno
mov
imul
icebp
repnz
inc
shr
adc
sti
testl
mov
fisttpl
or
jge
or
push
sbb
jns
inc
movsl
push
pushf
pop
stc
inc
sbb
add
dec
aad
adc
fwait
mov
loope
mov
dec
xchg
add
jno
push
xchg
das
and
jnp,pn
aas
outsb
out
mov
cmp
pusha
ret
test
in
fisubl
pop
mov
add
and
mov
cmpb
and
xchg
aaa
sbbl
aas
sub
push
add
aas
imul
push
add
js
aas
sbb
and
hlt
cmp
pop
inc
jbe
aaa
jg
ret
push
mov
add
call
popa
stos
and
loop
cs
jge
scas
daa
jg
movb
pop
scas
imulb
jmp
jae
movsb
loope
subps
jle
pop
add
roll
sub
loope
call
or
and
popf
ret
mov
mov
movb
xchg
or
and
cmpb
sub
sub
mov
testl
cmp
outsb
js
dec
fcmovbe
sbb
dec
pop
mov
dec
repz
xor
pop
call
jne
lds
xchg
movsb
adc
mov
jmp
sti
inc
adc
in
cmp
jmp
inc
and
mov
pop
jae
sub
pop
or
sbbl
out
je
lcall
jb
pop
lock
cmpsb
sbb
cwtl
xor
pop
outsb
inc
test
mov
inc
rclb
stc
ss
dec
push
xchg
inc
xchg
nop
sub
jecxz
or
rcll
xchg
sbb
fwait
xchg
je
sub
jno
mov
data16
and
in
mov
cmp
stos
pop
push
jecxz
push
sub
aam
mov
add
scas
filds
pop
sbb
fwait
loop
pop
add
ja
mov
cmpsb
and
mov
xchg
inc
test
or
jge
mov
jl
sahf
icebp
inc
mov
daa
bound
addl
mov
testl
arpl
mov
and
fldenv
les
jg
sbb
and
dec
sbb
jl
ror
lea
inc
fildll
mov
mov
sbb
jb
jo
push
push
jo
add
pop
cmpl
or
nop
popa
call
xchg
lret
mov
outsl
push
xchg
cli
xchg
adc
or
test
test
and
pusha
pop
or
mov
or
xor
adc
jmp
movsb
in
inc
xchg
add
imul
or
pop
xor
inc
mov
cmpsl
xchg
sub
mov
push
mov
xor
ds
imul
aaa
jmp
inc
movsb
jmp
or
inc
cmp
push
cmpsl
fisubrs
xchg
sbb
data16
outsb
adc
cmp
add
je
dec
test
push
push
xchg
out
jp
test
mov
push
or
out
mov
sub
lods
loope
sbb
repz
test
dec
cmc
jmp
leave
loope
adc
fcmovnb
cmc
mov
xchg
mov
stos
clc
arpl
cmp
ficoms
adcl
push
stc
dec
adc
jmp
inc
adc
cwtl
cli
iret
dec
addl
fstps
or
dec
in
fiadds
sahf
pop
jnp
hlt
call
pop
push
inc
lds
add
push
sbb
js
push
stos
pusha
iret
inc
cld
mov
pop
std
movsl
andb
addb
mov
je
lea
lea
push
imul
mov
ffree
jecxz
mov
push
sub
push
or
add
sbb
daa
push
or
or
pop
and
push
cmp
mov
and
push
xchg
ds
fimuls
dec
mov
mov
int3
lods
pop
mov
mov
xchg
xor
cmp
iret
lea
insb
call
mov
pop
movsl
insb
pop
xchg
cs
outsb
mov
stos
das
loopne
jg
cmpsb
xchg
frstor
cmpsl
xlat
pop
movsl
lret
or
movsl
insb
jne
xchg
and
inc
adc
push
fs
jge
or
rcrl
gs
or
lods
add
scas
jge
stos
xchg
inc
sub
inc
testb
cmp
sbb
add
push
rorl
xchg
imul
mov
pop
push
pop
inc
cmp
jl
sbb
in
adc
in
movsb
xorb
lret
xchg
mov
roll
mov
mov
daa
jnp
sub
test
pop
fdivrs
mull
cld
xchg
add
add
sub
in
or
pop
leave
xchg
jo
mov
dec
cld
pop
mov
mov
vcomiss
int3
pop
pop
and
je
in
pop
add
and
jo
xor
leave
and
notl
ljmp
or
sub
lahf
scas
or
mov
lds
hlt
cmpsb
and
sbb
lods
jg
lods
arpl
pop
xorl
int3
cwtl
ljmp
mov
orb
adc
jb
cwtl
sub
lahf
cltd
inc
push
ret
daa
inc
in
hlt
sbb
test
and
mov
es
mov
mov
xor
addb
lea
lahf
jg
das
sbb
pop
sahf
and
adc
popa
popa
ret
icebp
dec
outsb
outsb
push
enter
xchg
xor
clc
imul
adc
lock
mov
dec
push
cmp
imull
dec
out
sbb
repz
xor
inc
jne,pn
shufps
repnz
in
lods
push
mov
push
sub
jae
adc
pop
jle
in
push
xor
not
add
fstpl
mov
mov
ljmp
sbb
push
mov
test
cmp
mov
adcb
adc
rcrl
sbb
or
lahf
cmc
ja
inc
call
loop
rclb
and
jo
xchg
hlt
insl
push
mov
inc
xor
jnp
adc
mov
std
add
leave
sub
jne
xor
inc
fcompl
jl
push
pop
rclb
jge
xor
jno
and
jns
jne
pop
sbb
or
cmp
repnz
add
mov
push
mov
mov
xchg
cmp
xchg
rorl
inc
addb
call
shll
jl
loop
push
mov
scas
push
or
cmp
fsubrs
push
les
pop
ja
inc
inc
adc
test
or
dec
and
nop
popf
icebp
sbb
scas
lds
sahf
addr16
and
add
jae
lret
ficoml
cmc
pop
in
dec
outsl
push
andl
and
clc
pop
sarl
data16
repnz
jno
repz
or
ror
jecxz
test
or
cmp
push
clc
enter
mov
inc
or
dec
add
sti
enter
in
cwtl
jne
ret
cmp
outsb
in
clc
test
call
or
int
je
lcall
adc
sbb
pop
mov
and
lcall
mov
mov
or
outsl
lret
push
adc
gs
les
push
dec
aas
out
and
cltd
in
jns
mov
hlt
inc
sub
xchg
mov
inc
mov
in
dec
jae
mov
push
push
pop
rol
pushf
pop
mov
cmp
dec
rcrl
mov
jae
and
cld
outsl
scas
xor
jecxz
repnz
add
mov
sbb
jge
bswap
ss
test
sbb
or
out
sub
mov
fbld
movsl
stos
es
push
mov
fiaddl
sbb
and
hlt
pop
add
mov
lods
clc
into
nop
adc
xor
out
mov
scas
ss
jle
incb
test
add
mov
sbb
or
adc
jo
sbb
outsl
or
bound
xor
mov
fwait
ds
cmpsl
hlt
ret
fs
xchg
push
out
jno
xchg
pusha
fadds
push
insb
add
xchg
jo
xchg
add
xor
mov
inc
jns
fwait
das
mov
adc
mov
adc
push
into
shlb
rorb
fwait
jecxz
xchg
popf
repnz
pop
adc
pop
xchg
sti
cmpsb
xor
jne
push
jnp
xlat
std
stos
lea
lods
popa
daa
mov
inc
jns
sbbb
loopne
xor
or
sarl
pop
lcall
push
dec
inc
fsubs
inc
lldt
sub
xor
inc
add
fildll
push
loope
ret
add
popa
jo
in
popa
mov
aad
outsl
cmp
jb
faddp
push
or
stos
aaa
nop
out
push
add
int3
cmp
and
sbb
inc
cmp
lahf
icebp
push
xchg
sub
fmul
mov
pusha
adc
xchg
jo
popa
sbb
rcr
xchg
inc
out
cwtl
leave
xor
or
add
jmp
push
push
sbb
push
xor
not
rcr
mov
sub
push
jle
adc
js
es
imul
add
jbe
loopne
or
lahf
inc
stc
or
xor
mov
in
pop
mov
fcomps
jg
push
nop
cld
dec
or
pop
roll
aas
lds
or
cltd
fidivrl
jp
nop
add
rol
je
mov
pushf
sahf
or
scas
inc
add
out
sarb
push
mov
sub
call
lcall
push
pop
jge
cmp
cmp
xchg
sub
ds
enter
fdivs
es
lock
dec
and
ret
mov
fstpl
jnp
cld
xchg
and
jecxz
in
mov
aam
into
push
cmp
fimull
test
lea
lods
xor
js
mov
into
mov
mov
cmpsl
jnp
fs
pop
dec
mov
mov
pop
popa
inc
lahf
aaa
pop
stc
push
mov
mov
addr16
xchg
sarl
push
sbb
pop
in
pop
rclb
sarl
add
aaa
fwait
cld
jno
cmp
shll
fs
sarb
dec
xchg
push
cmp
fcoml
adc
aam
xchg
add
inc
adcb
jmp
pop
add
jno
mov
test
outsb
movsl
mov
cmpsl
add
push
aam
push
mov
fidivl
xchg
leave
out
cmp
mov
fnstsw
fistpl
adc
xchg
imul
inc
mov
cmp
neg
sub
add
mov
leave
sub
mov
js
pop
push
dec
dec
lods
stos
add
test
roll
hlt
mov
mov
jl
jecxz
cmp
ficoms
lods
mov
mov
jo
call
pop
dec
pusha
sub
pop
push
bnd
and
jl
pop
call
and
out
push
out
clc
cmp
js
call
sub
movsb
xchg
ret
add
jae
loop
aaa
in
sub
pop
adc
icebp
arpl
loop
cmp
out
xchg
adc
add
xor
ret
mov
xchg
push
imul
idiv
pop
scas
fcmovu
xor
rcrb
lret
and
popa
jb
ret
test
cli
xchg
mov
mov
jmp
ret
mov
test
sub
sub
addl
repz
add
jb
rcll
std
inc
add
jge
push
pop
jne
iret
mov
mov
add
cmpsl
mov
cmp
sub
les
pop
add
repnz
inc
in
sbb
pop
lods
loope
inc
sub
push
dec
cvtps2pd
sbb
imull
add
lods
pop
push
add
adc
std
xchg
rclb
and
hlt
xor
pop
cmc
pop
xchg
dec
mov
out
arpl
inc
xbegin
mov
jp
inc
neg
fstpl
psubsb
dec
dec
add
xor
sahf
push
mov
repz
out
sahf
xchg
out
jne
fcompl
subb
das
or
sub
fists
daa
jp
pop
mov
push
stc
and
jge
int
dec
imul
xchg
jae
and
aaa
cs
cs
inc
dec
stos
nop
sar
leave
pop
ja
les
push
push
sbb
push
pop
and
mov
mov
hlt
fsubrs
cld
mov
rorl
cltd
sub
pop
jbe
or
add
jle
ss
rolb
scas
sahf
fimuls
repnz
cli
push
out
mov
lods
inc
inc
daa
cli
sbb
or
dec
loop
jno
adc
add
and
test
push
test
pop
negl
test
stc
inc
sub
leave
push
sbb
in
inc
pop
mov
pop
inc
push
in
adc
notl
mov
popf
mov
insl
ljmp
add
mov
out
mov
aaa
sub
cmp
sbb
enter
cli
setbe
notl
cmp
or
push
add
sbb
aad
or
lods
pop
loop
cld
imull
fcomps
push
xchg
push
mov
shl
jne
popa
pop
dec
lods
xor
mov
in
rclb
sub
test
ds
mov
sahf
ss
add
mov
mov
test
pusha
sub
dec
adc
cmp
call
cmp
leave
xchg
sbb
mov
push
mov
adc
sub
mov
add
dec
out
pop
xor
popa
orl
cmp
add
aaa
test
lea
int
push
es
ret
mov
jmp
sbb
loopne
ffree
inc
insl
push
sbb
ret
mov
dec
dec
mov
xor
or
out
mov
adc
shrl
pop
xchg
or
divl
andl
test
mov
sbb
push
popa
and
fcmovne
ds
fsubrp
repz
adc
test
mov
adc
push
sbb
popf
pop
mov
outsl
add
scas
popa
jge
fwait
push
cmp
mov
add
adc
adc
or
mov
xchg
mov
mov
imul
mov
mov
aaa
lcall
push
jg
cmc
and
popa
std
ds
xor
iret
xor
stc
push
fsubrl
push
inc
jnp
test
push
ret
imul
mov
pop
repz
push
inc
add
sub
pop
cs
cli
push
mov
jns
cmpl
push
dec
outsl
push
nop
in
and
lcall
jge
cmp
mov
aam
test
inc
jb
iret
in
inc
clc
mov
pusha
adc
popf
aaa
out
stos
sahf
sbb
bound
or
adc
sbb
adc
clc
mov
adc
out
fsubs
xlat
cmp
arpl
and
mov
mov
push
clc
xchg
or
cli
arpl
test
xor
inc
cmp
test
lret
sub
lret
lea
sub
mov
cmp
pushl
sub
and
lcall
sarb
fisubrl
mov
fcompl
jns
dec
push
pop
dec
push
testb
lock
jmp
mov
mov
fucomi
stc
ret
and
or
cmc
sub
fsubrs
cltd
ljmp
in
popf
insb
movsb
cmpb
jecxz
aas
mov
or
and
fidivs
fldl
mov
nop
mov
stos
out
in
shl
clc
icebp
lods
dec
mov
push
das
cld
pop
stc
scas
std
pushf
sbb
enter
jmp
xchg
mov
insb
loop
jge
add
repnz
mov
ja
xor
loope
in
dec
and
add
lea
loopne
add
stc
dec
sub
cld
xchg
stos
mov
int3
movsl
cmp
fldl
lret
sub
jp
aam
mov
jbe
inc
xor
daa
in
pop
jp
jle
xchg
sub
adc
dec
lock
jne
dec
hlt
xchg
insb
leave
lret
mov
cmp
loop
adc
dec
movsb
inc
mov
add
or
dec
mov
dec
cli
lods
mov
enter
mov
in
xor
mov
ficoms
cs
dec
outsl
add
mov
jmp
lcall
fimull
not
cmpsb
in
ret
push
lea
fdivrp
push
mov
and
xor
and
lahf
pop
test
sbb
and
mov
in
push
or
cld
inc
push
sub
xor
cwtl
scas
in
sar
insb
dec
loop
or
push
add
sbb
adc
fs
ret
test
inc
fs
xchg
push
push
mov
xor
clc
add
sarl
adc
cmp
cltd
pop
pushf
std
cmp
push
xor
std
out
outsl
jle
inc
mov
jne
pop
pop
lods
dec
in
inc
sahf
mov
xchg
scas
ds
cmp
std
adc
inc
inc
cwtl
cmc
dec
bound
lahf
dec
cmp
ret
sub
xchg
push
ljmp
icebp
mov
sub
push
or
pop
sub
in
or
jbe
jns
jne
js
or
shr
je
sbb
push
push
mov
jne
ret
call
push
test
or
dec
dec
mov
add
jp
add
inc
push
jb
imul
add
lods
jp,pn
dec
dec
cltd
jl
mov
dec
enter
into
ja
leave
mov
add
fbstp
std
xor
in
movsl
cmp
push
cmpb
cmp
shll
aas
push
lret
sub
push
pop
insb
lock
push
inc
sti
in
call
mov
mov
mov
gs
and
inc
inc
mov
push
xor
bound
mov
int3
popf
push
and
in
add
mov
jb
inc
cmp
mov
nop
push
jae
jp
sub
mov
and
fwait
mov
xor
cmc
xor
das
xor
cmp
sub
pop
divl
adc
lods
leave
lods
test
cli
popf
and
push
cmpsb
pop
inc
push
hlt
dec
les
and
dec
lods
jnp
into
fwait
or
out
and
push
test
int3
fnstenv
movsl
adc
cmp
ds
pop
jl
cmpsb
xchg
jne
xchg
pop
or
dec
inc
data16
gs
and
sub
aad
xchg
dec
jae
out
lcall
cmp
pop
test
cs
pop
or
cmpsb
sbb
mov
cmp
insb
sbb
call
and
ret
loope
fidivrs
out
push
jo
xor
flds
dec
in
inc
into
or
adc
sub
dec
dec
pop
bnd
popf
cs
rcr
fsub
mov
sub
xor
sub
cmp
add
mov
ret
mov
adc
push
dec
insl
sbb
xchg
test
pusha
adcb
adc
in
cmp
imul
stos
aaa
js
aam
icebp
orb
popf
fimuls
loopne
lahf
out
or
mov
xlat
mov
loopne
loopne
mov
lods
fldt
xchg
dec
pop
jp
sub
pop
sbb
cli
lret
adc
jbe
and
pop
push
mov
adc
jmp
aas
mov
xchg
xchg
imul
inc
dec
or
popa
mov
test
popa
dec
jnp
jp
sub
fstps
stc
mov
cmp
xlat
int3
in
mov
mov
mov
push
or
pop
xor
fsubs
jne
pusha
out
std
inc
sbb
push
lods
inc
out
sbb
inc
xor
cltd
call
or
in
shrl
mov
mov
sbb
jp
add
mov
inc
dec
jo
roll
arpl
mov
cld
mov
adc
xor
popf
arpl
lods
pop
cli
inc
dec
cmc
fstps
xor
jns
and
pop
clc
aad
aad
inc
sub
jnp
fwait
out
rcrb
jno
pop
cmp
orb
inc
gs
jno
mov
dec
dec
loope
pop
dec
dec
sarb
cli
add
je
add
pusha
xchg
js
inc
ficoms
mov
add
and
push
sarb
pop
mov
lret
xchg
sti
jmp
push
add
pop
dec
out
push
adc
adc
add
lds
movsl
sbb
leave
dec
xchg
and
push
lcall
shr
dec
jge
cmp
inc
pop
pop
in
add
fsubl
aas
insb
cmpsl
mov
inc
jns
rorb
pop
sub
lret
ja
je
adc
push
mov
aas
rolb
sub
enter
mov
xor
mov
mov
stc
movl
mov
pop
enter
adc
pop
jge
xorb
inc
or
jno
cmpsl
mov
icebp
testl
lock
rorb
cmp
mov
sub
push
outsb
jno
fcomps
or
arpl
fsubs
xor
mov
je
xor
or
push
and
iret
in
pop
ret
movsb
and
jp
mov
dec
ret
push
js
add
lock
inc
xchg
pop
dec
cmp
or
mov
push
push
int
pop
mov
dec
mov
ficoml
inc
inc
sbb
mov
cmp
sub
push
pop
popa
pop
shrb
push
jb
and
add
xchg
mov
jo
stos
xor
inc
imul
dec
push
pop
push
sarb
dec
xchg
in
push
loop
gs
call
loope
and
cmpsl
mov
pusha
inc
dec
cmp
movsl
insb
test
or
outsb
mov
les
cld
adc
cwtl
fisubs
sub
scas
push
mov
inc
jg
or
sub
loope
jb
xchg
push
lods
insb
xlat
xor
repz
pop
pop
test
push
out
jne
or
jno
aam
jae
das
scas
cwtl
stos
in
daa
mov
add
aad
adc
popf
leave
or
arpl
daa
popa
sub
setbe
dec
sbb
cltd
mov
daa
dec
rcll
push
push
lds
add
stos
fidivrs
aaa
dec
jb
jnp
pushf
dec
mov
pop
mov
ja
dec
sbb
sbb
mov
pop
cmp
aad
cmp
sbb
push
cli
cmp
pop
pusha
xchg
mov
mov
mov
nop
adc
sti
out
in
mov
or
pop
push
cmc
lcall
repz
test
mov
or
imul
out
hlt
xchg
aas
adc
sahf
call
pop
test
sbb
jne
xor
jae
adc
sub
or
inc
pop
and
adc
inc
jecxz
sbb
sahf
mov
sbb
dec
jecxz
xchg
pop
push
pop
shrl
js
jno
jne
push
xchg
test
mov
ja
outsl
push
cmp
aas
jns
mov
cmp
es
lods
xlat
jae
sub
mov
outsb
pop
enter
hlt
jne
xchg
fwait
jmp
xor
pop
test
sub
cld
repnz
sbb
jno
push
cmp
pop
sbb
mov
sub
in
mov
mov
sbb
push
lret
and
push
jnp
mov
div
adc
cli
movsb
cld
sub
mov
inc
adc
fdiv
daa
hlt
xchg
pusha
fcoml
sub
ljmp
xor
dec
or
xchg
xor
push
ja
xchg
or
xor
jne
xchg
sbb
mov
mov
sbb
mov
out
adc
inc
or
daa
nop
lods
roll
ficomps
repnz
push
ds
mov
dec
xchg
mov
jno
out
aam
adc
sbb
add
dec
inc
cmp
lret
push
leave
mov
xor
mov
adc
dec
notl
test
sbb
lcall
subb
adc
push
pop
dec
daa
adc
ret
test
xchg
xor
ret
sub
push
push
or
mov
sub
mov
lods
xor
sbb
mov
pushw
xchg
arpl
and
xor
add
pop
out
xor
mov
stos
sub
andl
or
mov
xor
push
fdivr
lret
jno
xorb
inc
inc
push
daa
mov
pop
xor
andb
push
call
or
das
sub
sbb
ret
in
cwtl
cli
test
add
xadd
std
adc
inc
sbb
fldcw
jb
pop
and
xlat
aad
cmpsb
mov
lds
inc
or
adc
addr16
mov
xorl
inc
pusha
out
and
loopne
or
les
cli
in
in
daa
test
xor
test
dec
pushf
mov
sti
sbb
iret
pusha
ljmp
jg
and
fbstp
or
dec
lret
add
push
addr16
jnp
cmp
test
sbb
xor
xchg
sub
sub
stc
and
mov
cld
mov
jnp
mov
or
lods
push
and
pop
push
xchg
mov
pop
popa
cmp
je
sub
push
fidivrs
insb
add
outsb
cmp
movsl
pop
inc
out
jmp
xrelease
pop
jmp
mov
add
shl
aad
imul
adc
jge
arpl
fcmove
lock
add
or
cmp
sarb
jmp
add
les
or
loope
cmp
out
aam
mov
pushf
pop
sub
test
fs
push
fmul
inc
and
ja
jne
dec
test
testb
cltd
insl
addr16
sub
mov
out
sbb
aam
pop
es
test
sbb
add
xor
jle
popa
cmc
mov
push
stos
jl
mov
ss
or
xorl
mov
inc
imul
aad
jns
inc
addr16
add
lds
scas
or
mov
mov
cli
rcrb
insb
mov
mov
cld
cs
repnz
inc
jne
xor
push
mov
and
in
test
in
mov
sbb
xor
jecxz
or
js
sbb
add
es
fs
cmp
xchg
ss
cmp
sub
dec
push
mov
sub
les
pop
shrl
outsl
mov
jmp
insb
jmp
mov
mov
add
cmp
lcall
push
movsl
xchg
lock
mov
sbb
jno
enter
in
outsb
add
and
enter
fs
sub
add
pop
cmovg
ss
sub
scas
xor
aam
or
xchg
fistps
jae
inc
push
test
aad
js
add
xlat
jl
cwtl
sbb
jge
mov
sti
in
outsl
add
and
sub
and
or
or
sbb
adc
xchg
add
loope
test
add
xchg
sbbl
add
xchg
hlt
adc
leave
inc
ret
sub
negb
jo
rorb
mov
mov
xchg
test
imul
inc
and
jno
jmp
or
call
ja
int3
shll
fmull
push
cltd
in
or
jmp
js
and
or
jecxz
mov
lea
sbbb
sbb
add
sbb
jbe
cmp
jp
dec
mov
mov
loopne
lret
pop
mov
lock
cld
hlt
hlt
push
inc
rcrb
pusha
inc
je
cmp
or
pop
daa
sbb
aad
inc
inc
push
aas
or
jmp
pusha
hlt
sbb
inc
xchg
sbb
xor
sub
add
mov
popa
outsl
dec
jbe
test
loop
in
in
jge
mov
insl
fmuls
mov
xor
lahf
sub
and
jg
pop
movsb
cwtl
jmp
pushf
adc
fsubrs
or
je
enter
insb
dec
out
mov
or
jl
push
pop
in
je
pushf
inc
push
fcmovne
mov
insb
jge
orb
pop
insl
lods
cmpsl
cwtl
test
inc
mov
in
pop
sub
mov
sahf
cld
or
cltd
repz
in
adc
popf
imul
and
and
std
sbb
and
lret
cmpb
scas
rorb
pop
lret
pop
push
bnd
cwtl
and
js
popl
add
lahf
movhps
dec
mov
pop
jmp
jp
clc
in
pop
sarb
jae
xor
push
orl
inc
pop
call
imul
inc
inc
in
test
test
add
test
push
and
test
insb
bound
inc
es
fldt
loope
xor
and
sbb
push
jle
sub
mov
je
sbb
lret
mov
dec
push
sahf
lahf
push
movsb
jle
std
ja
pop
fidivs
adc
xor
xchg
jg
and
pop
fdivs
aad
dec
dec
push
sbb
mov
aaa
int3
adc
enter
cmp
xchg
imul
jp
and
jl
push
jl
jo
or
fcmovb
push
xchg
mov
aas
lcall
adc
rcr
rorb
sbb
xor
xor
mov
inc
push
mov
out
lock
popf
rclb
stos
leave
sub
test
dec
mov
or
sub
mov
out
inc
dec
loope
sbb
dec
scas
ffree
mov
cmp
lds
enter
stc
pop
fimull
sbb
cmp
pop
cmp
iret
jge
shlb
jb
popa
mov
int3
and
cmpsb
cs
aam
xor
or
test
lret
enter
nop
and
loope
stc
xchg
push
ds
aaa
test
cld
pop
or
mov
mov
push
push
stc
push
notb
in
cltd
nop
xor
roll
xchg
ljmp
sub
movsl
push
mov
add
add
cwtl
xor
ret
mov
cmp
outsl
inc
lds
push
xchg
mov
pushf
push
push
sti
call
pop
pushf
pop
std
sbb
dec
leave
or
jmp
bound
xor
push
in
mov
mov
push
xchg
test
pop
adcb
stos
dec
ss
lods
and
divl
push
test
out
out
nop
sahf
dec
sahf
xor
dec
adc
orb
mov
add
aas
daa
dec
imul
addl
fcoms
cmp
sahf
je
fwait
shlb
and
popa
and
mov
addl
std
cltd
mov
cmp
jo
pop
jbe
jl
or
call
adc
rclb
cmp
mov
xor
and
js
lret
and
out
dec
je
and
pop
ss
out
imulb
push
xor
movsb
cmpsl
js
cwtl
int3
pop
mov
push
cmp
into
jae
divb
mov
xchg
add
sub
push
sarb
dec
add
fsts
sub
fdivr
or
push
fwait
cli
push
fldcw
fcomp
andb
jl
xchg
rcr
mov
xlat
je
xor
insl
les
sub
jo
pop
movsl
cmpsl
inc
movsl
comiss
aad
sub
popf
mov
sbb
push
jp
popa
push
and
adc
mov
pinsrw
sub
shrb
mov
popf
mov
je
and
adc
add
enter
xchg
sub
push
nop
clc
das
lret
or
nop
outsl
inc
pop
loopne
orl
sbb
clc
adc
adc
or
inc
enter
adc
cmp
mov
push
int3
insb
cmp
adc
outsl
cmp
fbld
and
cmp
testl
cmpsl
xchg
rcll
test
or
js
test
xlat
gs
jp
xor
xor
jg
imul
add
into
sbbb
out
xchg
sti
mov
insl
cmp
cmpsl
out
and
sbb
sbb
pop
insb
mov
sbb
push
jo
repnz
loop
adc
test
cmp
rorb
mov
add
clc
loopne
out
xrelease
push
push
lret
aaa
loopne
mov
daa
pop
add
sbb
push
bnd
lcall
scas
and
fadds
jns
pop
add
jae
rorb
enter
xchg
push
jbe
cld
scas
daa
mov
jg
adc
pop
adcl
push
and
sbb
mov
stos
pop
jbe
push
or
jge
or
or
insb
in
icebp
mull
lea
xor
xor
mov
insb
cmp
movsb
pop
inc
xorl
jl
stos
out
sub
and
ljmp
pop
and
clc
int3
lahf
mov
inc
adc
jns
bnd
inc
mov
cmp
inc
xorb
jecxz
and
and
dec
inc
bound
pop
sub
or
aad
roll
stos
loop
stc
or
push
test
or
mov
stc
jle
shll
push
and
testl
jo
pop
mov
adc
lahf
dec
mov
sub
xchg
and
push
xor
cmp
fcoml
aaa
aaa
push
adc
mov
comiss
loope
sbb
jl
lock
movl
outsb
mov
scas
mov
les
push
mov
xor
lcall
and
scas
adc
daa
mov
into
mov
mov
jge
and
fs
icebp
push
dec
jle
or
aas
ret
insb
jg
sub
inc
xchg
push
push
pop
enter
push
mov
and
and
je
movsl
sub
lret
and
xchg
push
icebp
lret
mov
gs
adc
outsl
xlat
inc
jns
sti
and
inc
daa
jl
lahf
jae
cmp
pop
sub
sub
xchg
orl
test
in
dec
dec
out
enter
or
or
mov
roll
addl
gs
les
push
mov
mov
sbb
idivl
and
hlt
jne
imul
sbb
xor
cmc
jp
movsb
lods
loopne
je
sbb
cwtl
imul
sub
daa
inc
pop
xor
dec
lret
es
nop
lret
xchg
or
push
fiadds
xchg
aaa
je
xor
jo
ficomps
les
jmp
mov
lods
mov
cmp
pop
mov
loopne
lahf
in
or
add
sbb
push
xorl
sahf
fcmovu
cmp
test
mov
ljmp
test
in
cmp
in
dec
notl
mov
mov
add
popa
mov
arpl
sub
sbb
inc
lds
idiv
loop
inc
xchg
fldcw
rcrl
cltd
aam
out
stc
fmull
shlb
and
jo
push
mov
push
stos
adc
xor
fwait
out
lods
pop
add
pop
gs
pop
or
test
les
mov
fldt
xchg
adc
lea
add
mov
or
add
bound
lcall
stos
push
andl
jp
push
inc
inc
lret
jne
sahf
cmp
js
dec
push
arpl
xchg
shrl
inc
cli
ljmp
inc
fnsave
mov
popf
rcll
push
pop
mov
movsb
lds
int
xlat
jbe
loopne
add
add
nop
or
neg
repnz
or
jge
add
jbe
jp
jge
xorps
inc
push
insb
dec
sub
sbb
push
xor
dec
sbb
fldl
mov
inc
aas
aad
out
dec
stos
jbe
push
pop
xchg
shlb
jecxz
test
mov
mov
out
or
push
jp
mov
pop
add
push
es
mov
repnz
add
outsb
shll
out
and
das
add
outsl
movsl
add
push
cmp
fdiv
push
xchg
jmp
jnp
iret
in
jae
push
lahf
cld
inc
cmpsb
jmp
inc
inc
jne
je
xor
xor
dec
movsb
mov
rolb
adc
mov
and
popa
insb
and
pop
in
xchg
sbb
popa
push
push
stc
pop
sbb
adcb
adc
pop
sti
xlat
orl
mov
daa
mov
xor
iret
iret
or
cld
sbb
icebp
insb
loop
scas
js
mov
movsb
inc
leave
stc
dec
mov
dec
bound
in
lcall
sub
dec
xor
and
push
sbb
xor
mov
jp
push
add
mov
popa
leave
mov
xor
mov
pop
ret
insb
stos
test
scas
into
or
hlt
push
add
sub
fstp
mov
mov
sub
pop
push
push
push
sbb
addr16
jb
or
pop
sbb
fnstenv
rcrl
pushf
dec
sbb
push
sbb
bswap
push
jne
push
mov
jo
jmp
mov
adc
adc
mov
out
inc
ficoms
nop
adc
sbb
cmc
hlt
or
aad
lret
add
jno
insl
test
jle
push
and
mov
fcoms
mov
fisttpl
mov
adc
test
out
jo
nop
inc
popa
mov
iret
and
jp
cmc
push
sbb
adc
mov
cld
push
cmp
and
sub
in
or
add
xor
mov
pop
punpcklbw
repnz
in
xchg
fwait
cmp
das
das
inc
aas
mov
out
jl
aad
jmp
cmp
jo
std
int
push
add
mov
add
lods
sub
icebp
movsl
sbb
xchg
icebp
cli
or
fs
out
hlt
ret
negb
and
stos
cmc
adc
or
xor
dec
div
test
xor
mov
nop
in
and
cwtl
and
sbb
mov
jae
lret
mov
mov
out
and
fsubl
pop
addl
pop
mov
pop
out
cltd
jecxz
mov
gs
sub
lahf
stc
inc
jns
scas
sub
or
xor
lods
pop
or
mov
push
push
jo
xor
sbb
loope
sbb
xchg
in
cmpsl
popa
mov
cmp
daa
cmp
mov
icebp
int
outsl
es
dec
leave
xor
enter
push
inc
sbb
fcompl
adc
inc
sbb
jge
push
scas
test
mov
sti
push
imul
or
mov
lods
stc
sarb
test
or
inc
jp
xor
das
pop
sbb
lods
add
adc
lea
fisttpll
xchg
pop
jne
aam
dec
insb
or
xchg
into
or
clc
and
popa
inc
xchg
ret
push
jge
xchg
sub
cmp
sub
loop
stos
shll
sarb
adc
sti
or
in
mov
fs
xchg
mov
dec
jp
out
push
mov
inc
test
xchg
or
cltd
inc
arpl
cmp
inc
stos
into
mov
ret
scas
jnp
lret
add
dec
xor
sub
mov
jmp
and
cmp
add
lds
lret
pop
inc
cmp
out
aad
int
fisttpl
cli
pop
call
out
jnp
decb
jne
push
inc
jno
mov
push
mov
mov
xorb
daa
sbb
xorb
pushf
clc
call
ss
adc
or
xchg
js
push
sbb
test
and
push
fst
sbb
inc
jle
aam
push
fucomip
jle
rcrl
push
sub
and
ja
sub
mov
xor
pop
mov
inc
enter
enter
mov
sub
adc
pop
xchg
xchg
push
or
add
cmc
push
in
sbb
adc
adc
pop
imul
dec
adc
add
iret
jno
adc
lcall
ds
rcrb
outsb
jmp
call
cmpsb
sahf
jmp
xor
push
mov
into
fwait
adc
test
cli
enter
roll
mov
mov
add
mov
int3
popa
adc
mov
add
mov
fsubs
jae
xlat
aam
cmp
push
fmull
les
lret
fst
mov
sbb
cwtl
cmp
das
repz
mov
popa
lock
cld
cmp
test
mov
or
int
test
add
lock
dec
jno
roll
test
mov
arpl
add
xchg
sti
mov
dec
call
cmpsb
in
inc
jl
jnp
sarl
daa
xorb
cmp
adcl
pop
lock
mov
mov
mov
jl
cmp
rolb
xlat
pop
decl
sub
dec
sbb
pop
out
stos
inc
ja
adc
pop
mov
lods
xchg
xor
sbb
pop
sbb
sarl
scas
bound
add
loop
decb
jg
movsl
and
pop
outsb
cmp
ljmp
int
insb
jmp
push
mov
and
push
mov
dec
xorl
sub
jnp
xorl
cwtl
bound
mov
dec
cld
cmp
push
pop
aas
std
adcl
std
sub
push
jmp
sub
leave
mov
push
sarl
pop
jmp
push
gs
iretw
mov
scas
pop
setge
cwtl
mov
je
addb
das
jnp
nop
cmp
mov
test
mov
je
hlt
xor
and
icebp
cli
mov
loope
in
pop
xor
mov
dec
subb
scas
xchg
repz
in
pop
add
push
dec
mov
cmc
insl
mov
cmp
sub
xor
pop
add
add
pop
lods
insl
roll
push
add
nop
cwtl
xchg
and
inc
lock
movsl
movl
repz
es
dec
lahf
xor
in
fwait
sub
out
jecxz
ret
add
pop
sub
xor
sub
cmp
cli
es
mov
mov
cmp
cmp
jno
push
sbb
ficompl
in
mov
popa
testl
call
cmp
jnp
mov
pop
ja
adc
movsb
icebp
mov
popa
sbb
fst
mov
cmp
add
daa
dec
and
sub
sbbl
jo
enter
jl,pn
xchg
xor
inc
pusha
lods
or
cmp
xchg
popa
iret
fidivl
xrelease
cltd
mov
les
and
mov
dec
out
dec
jb
and
jb
adc
popa
into
xchg
cld
push
cmp
data16
xor
mov
pop
movsl
mov
into
fs
jp
aad
inc
subb
enter
dec
das
pop
dec
pop
je
pop
insb
inc
mov
std
arpl
push
adc
sbb
mov
gs
aam
cs
sarl
jnp
mov
rolb
cwtl
cmc
jg
xor
aas
shlb
movsb
xchg
push
int3
call
das
pop
repz
ja
notb
cwtl
outsb
scas
mov
mov
cmp
repnz
jbe
movsl
push
xorl
pop
iret
cmp
dec
outsb
jns
rclb
lret
mov
fldenv
ja
dec
pop
pop
int3
sbb
cmp
mov
jo
xchg
les
xchg
shrl
sbb
into
add
xor
rep
jp
nop
cld
fdiv
jno
or
pop
pop
pop
xchg
inc
push
push
jnp
test
icebp
adc
out
movsl
sub
hlt
mov
jno
and
fwait
jns
lahf
fstps
push
ror
lcall
or
mov
or
in
out
lds
jle
dec
jnp
stos
test
mov
sbb
push
jge
fisubl
xchg
aam
fstpl
jnp
les
int
jbe
jbe
or
addr16
mov
sbb
jecxz
jmp
cltd
inc
iret
popf
ds
push
pop
ja
inc
loop,pt
test
mov
mov
cmpsl
mov
mov
out
add
mov
adc
mov
mov
push
bound
aaa
bound
insl
loop
insb
scas
xchg
add
mov
movsl
and
xchg
sub
mov
sarl
lds
mov
cmc
xor
xorps
aam
inc
clc
cmp
and
xor
jl
movsl
or
mov
jb
sti
in
cmp
and
shrb
jns
stc
xor
lock
or
cwtl
mov
cmp
push
test
sub
mov
adc
lcall
fwait
pop
aaa
out
fadds
cli
enter
into
push
movsb
mov
inc
pop
fidivrl
mov
je
cld
push
daa
and
or
cmp
daa
adc
push
dec
cltd
cmp
sub
mov
pop
mov
sub
js
and
test
stos
cmp
mov
mov
mov
enter
mov
sub
dec
push
je
jbe
lods
or
fidivs
mov
addr16
dec
sbb
loopne
sub
ja
cmc
enter
pop
push
dec
rcrl
lock
mov
mov
and
test
pop
pop
or
jbe
add
adc
mov
daa
sbb
inc
or
testb
sub
mov
pop
cmp
mov
push
cmpb
cmc
test
push
fidivs
pop
jmp
ret
xor
mov
mov
shl
cmp
jne
add
xor
xchg
dec
adc
fbld
and
adc
inc
insb
jl
push
cmp
push
cwtl
outsl
lods
sbb
fsubl
imull
or
xor
push
movsb
loopne
lods
and
pop
mov
clc
push
mov
lret
ret
in
insl
stos
pop
xor
ljmp
sub
push
xlat
push
je
mov
dec
pop
xchg
xor
and
xor
aaa
cwtl
mov
gs
inc
or
mov
js
inc
mov
adc
push
lea
cmpsl
dec
sbb
mov
inc
mov
pop
push
sbb
popa
popw
jno
push
cmp
repz
loope
es
push
lahf
cmc
jl
mov
fstpl
in
add
fstl
inc
cmp
jmp
jnp
xchg
dec
jg
loopne
imul
call
xchg
arpl
mov
xchg
sti
test
int3
pop
sahf
fildll
into
dec
push
inc
or
mul
das
sub
pop
arpl
push
cmp
or
push
mov
sub
jbe
enter
mov
push
pusha
je
dec
ljmp
push
push
mov
pusha
jg
stos
cmp
out
fiaddl
mov
stos
add
icebp
shrd
jbe
dec
inc
xor
loopne
mov
cmp
xchg
les
push
cmp
das
xor
dec
mov
pop
jmp
lds
add
out
or
push
xor
or
xchg
jle
lds
mov
dec
push
jbe
jnp
or
inc
ret
dec
push
mov
fidivrs
adc
jae
cmpsl
shlb
scas
cs
stc
rcrl
adc
out
gs
enter
sbb
pop
nop
call
xchg
cmp
mov
xor
clc
sbb
and
push
cmc
aad
xor
or
xor
xchg
add
or
idivl
aaa
mov
push
or
aas
xchg
ficomps
inc
xor
mov
les
and
dec
filds
out
addr16
or
and
xor
push
sbb
out
les
push
mov
mov
pop
xor
test
pop
neg
sub
mov
mov
lret
mov
dec
out
inc
test
push
ja
inc
cmpsl
pop
sub
fs
xchg
push
jp
nop
xchg
add
addl
fwait
ss
push
andl
xor
icebp
lods
int3
mov
jle,pt
cmp
jle
mov
dec
xor
incl
jp
test
dec
xchg
cltd
sbb
cmp
dec
in
jne
ret
or
fwait
ja
std
jns
test
mov
pop
push
fadd
repz
pusha
outsl
loopne
xlat
ss
add
add
push
cs
or
or
adc
jo
or
sub
dec
pop
ds
jp
scas
test
mov
sbb
int
mov
cld
and
pop
movsb
push
ljmp
inc
hlt
aas
ds
push
insl
add
ja
loope
ljmp
sbb
lods
cmp
xor
or
push
iret
sub
rcl
and
push
sbb
fcompp
shll
fistps
sarb
mov
xchg
mov
sti
sbb
mov
dec
mov
add
int3
fwait
push
fnsave
dec
push
mov
fs
mov
jno
scas
sti
iret
pop
mov
shll
pop
dec
mov
andl
cmc
add
test
inc
push
xchg
fs
inc
push
add
pop
mov
imul
clc
jge
inc
std
mov
mov
inc
sub
adc
adc
lahf
pop
push
stos
int3
test
xor
mov
sub
jae
xor
cmp
loopne
mov
xor
in
lds
ror
fadds
nop
dec
jb
mov
dec
mov
xor
mov
push
cld
xor
mov
adc
push
adc
outsl
jnp
jecxz
xlat
push
cmpsb
sbb
sub
ljmp
mov
cmpb
test
xor
mov
add
xor
and
push
mov
js
inc
adc
xor
cld
sub
stos
int
faddl
addr16
jge
leave
popa
fdivl
test
mov
push
shlb
or
cmc
mov
pop
popa
add
push
aam
adc
xchg
fwait
cli
jne
rolb
jle
divb
rcr
pop
mov
mov
stc
push
fiaddl
jae
cmp
mov
mov
pop
and
push
pop
adcb
cs
subl
aad
cmp
in
aaa
bound
orb
xchg
jno
outsl
in
stc
mov
stc
out
push
loop
cmpb
sub
movsl
xor
and
call
mov
pop
and
mov
cmc
ret
js
leave
add
add
or
addr16
add
xor
dec
icebp
test
mov
insb
or
repz
jp
and
jns
mov
addb
jns
pop
arpl
shl
fcmovb
push
imul
sub
insb
jo
jae
pop
sti
mov
mov
es
sbb
repz
lods
add
sbbl
sub
inc
push
ds
sbbl
les
aam
inc
rorl
xor
mov
in
push
aad
mov
mov
mov
sti
adc
push
mov
mov
adc
and
and
mov
and
dec
mov
imul
sbb
pop
test
and
jns
andl
jns
and
jnp
inc
lea
adcb
and
xor
add
test
lahf
mov
in
xchg
stos
add
cli
imul
insl
sbb
aad
xor
aad
xchg
in
and
mov
mov
shl
mov
and
int3
jno
xor
into
xor
sub
lock
popf
jno
mov
xor
add
inc
lds
call
movsl
xchg
call
cmp
inc
mov
inc
jl
adc
jmp
bound
adc
fsubl
cwtl
es
adc
mov
or
mov
adc
push
cmp
cmpl
xchg
cmp
leave
xchg
push
subl
lret
sahf
dec
insb
pop
mov
adc
shl
aad
dec
cwtl
out
sub
jge
in
sbb
testb
mov
add
pop
xor
sub
xor
adc
rcll
test
inc
sub
jmp
sbb
adc
sti
push
jnp
xor
idivb
pop
pop
xchg
fisttpl
imul
lds
adc
rcrb
mov
inc
mov
repnz
lea
mov
pop
lea
outsw
and
inc
cmp
mov
adc
pop
in
iret
insl
fcompl
arpl
subl
adc
lcall
cwtl
and
daa
xlat
scas
inc
jne
xor
sbb
enter
daa
mov
push
je
or
xor
and
dec
in
adc
pop
repnz
jno
xchg
mov
stc
jae
mov
mov
fadds
xchg
in
or
std
sub
mov
ffree
stos
stos
inc
popf
es
ds
and
cmp
lods
xor
jg
pop
lret
arpl
push
xchg
lret
dec
ljmp
sub
outsb
jno
inc
lret
ljmp
sbb
sbb
iret
xor
repnz
fcomps
call
pop
lds
into
dec
inc
dec
shll
dec
sub
adc
fisttpll
jne
push
jecxz
popf
imul
icebp
and
iret
rol
mov
ja
std
and
dec
lock
xchg
fisubrs
stos
daa
jo
pop
inc
and
pop
enter
fisubrs
dec
push
fwait
jae
or
or
inc
and
fistpll
lret
mov
fs
adc
push
jno
paddsw
cmp
adc
pop
or
fdivrs
sub
cmp
push
repz
clc
insb
pop
xor
add
sbb
dec
call
inc
pop
insb
fsub
imul
sbb
cmc
icebp
xor
bound
and
xorl
enter
sub
outsb
cld
testl
ds
out
lea
lret
jb
loop
cli
mov
pop
sbb
cmp
mov
or
inc
lcall
push
xlat
iret
das
mov
or
fistpll
mov
orb
pop
xchg
sbb
popf
loopne
add
loop
add
testl
out
aad
lret
call
inc
test
fidivrl
out
and
push
je
ss
sahf
gs
mov
repz
dec
nop
pop
ficoms
cltd
sbb
fisttpl
dec
push
pop
cmp
sub
lea
inc
rclb
inc
sbb
je
sbb
jbe
fiaddl
clc
in
mov
lods
adc
repz
xor
out
inc
xchg
sbb
cltd
xor
push
daa
and
mov
cwtl
jl
mov
lds
xchg
outsl
xchg
sti
dec
ljmp
ret
ror
push
push
testb
jb
inc
clc
push
test
xchg
test
pop
or
fdivs
push
test
inc
jge
js
ja
sub
fstps
leave
mov
int3
test
mov
ret
jmp
adc
inc
push
out
cwtl
stc
movsw
iret
or
xor
adc
loope
fldl
in
rcr
adc
jae
push
les
icebp
mov
test
mov
xchg
rclb
testb
xor
sahf
xor
je
icebp
cmp
or
push
and
xchg
ds
inc
in
rorl
mov
adc
arpl
xchg
jle
enter
sar
mov
lea
cwtl
arpl
adc
pop
int3
dec
ficomps
outsl
dec
int3
and
adcb
dec
fsubl
out
push
add
adc
clc
ja
mov
shlb
movl
add
add
pop
sbb
int3
imul
sbbl
test
inc
leave
arpl
aas
xchg
push
jne
out
jl
dec
xor
loope
adc
mov
dec
sbb
psrlq
inc
in
shl
mov
xor
mov
data16
sbb
or
or
add
push
mov
sub
and
add
in
gs
mov
idivb
add
inc
cs
dec
sub
sahf
sub
imull
cmpsb
pop
mov
inc
sbb
fstl
out
fucom
and
add
ret
loop
jge
icebp
jmp
mov
jp
mov
imul
gs
test
ljmp
leave
dec
notl
push
out
adc
sahf
jmp
pop
das
bound
test
andl
insl
mov
fildll
push
xchg
dec
jmp
jmp
and
cwtl
pop
or
pop
xchg
test
movsl
pop
fwait
movsb
add
pop
test
aaa
lcall
mov
je
mov
ss
test
lock
mov
add
adcb
cmp
mov
or
mov
rcll
pusha
cld
xor
jle
adc
mov
test
icebp
jp
mov
mov
mov
adc
fxch
mov
jnp
and
add
jg
xchg
pushl
jmp
imul
pusha
mov
fstl
add
mov
push
inc
pop
cmpsb
cmpps
inc
jge
push
aaa
aas
in
lcall
pop
fbld
inc
sub
jp
pop
mov
lock
xor
insb
and
psrad
shll
pop
je
icebp
xlat
cmp
push
adc
fcmovnb
pushf
jo
sub
in
or
js
imul
popa
jecxz
sub
jb
int
push
scas
pop
pop
ret
shll
push
mov
xor
add
loopne
inc
and
rorb
xor
leavew
xchg
mov
pop
sbb
mov
sub
and
cli
sub
in
jo
mov
cmp
or
or
push
xor
or
xor
sbb
push
push
add
outsb
mov
mov
aad
repnz
loopne
aad
cld
mov
rolb
jne
and
xor
sub
jl
lret
dec
inc
dec
lahf
jg
sub
push
adc
adc
out
pop
pop
imul
adc
hlt
enter
call
or
mov
rcrl
dec
mov
fsts
jl
enter
leave
std
push
aas
cltd
jbe
mov
lods
dec
fstpt
sub
lret
movsb
pusha
dec
mov
pop
inc
xlat
inc
push
sub
subl
jmp
cmpsl
and
enter
inc
inc
mov
out
jp
push
xorl
xchg
lods
in
and
sarl
and
insb
mov
add
scas
cmpsl
or
cli
cmp
push
dec
mov
in
imul
push
test
ret
loop
push
scas
sub
rcll
push
ss
push
ret
or
cmp
inc
fcomps
out
lods
imul
cld
mov
xchg
iret
bound
xlat
fs
jecxz
cmc
sub
mov
and
sbb
mov
pop
dec
sbb
mov
push
cmpsb
pop
fistpl
and
cli
jns
imul
xor
sub
add
jecxz
xchg
and
invd
mov
mov
in
mov
push
mov
mov
ljmp
inc
sti
mov
push
arpl
push
mov
in
push
xchg
daa
dec
sbb
adc
mov
dec
scas
mov
addl
mov
ljmp
pop
jne
shll
call
cmp
andb
dec
sub
leave
mov
cli
cmp
push
pop
pop
mov
add
rol
mov
es
and
or
lock
repz
test
outsb
insb
imul
loop
sub
xchg
dec
push
cli
test
mov
lock
mov
mov
icebp
fs
icebp
cli
inc
jle
int3
test
fsubs
sub
add
imul
jle
xor
insb
fcom
add
jmp
dec
and
xchg
mov
xchg
pop
sbb
pushf
test
sbb
popa
bnd
xlat
mov
fdivrs
ds
in
adc
insb
movsl
lods
mov
sub
jg
addr16
mov
push
add
pop
dec
pop
mov
mov
movsb
cld
mov
into
in
int
insb
lret
sub
mov
test
xchg
lods
sarb
dec
sbb
xor
icebp
stc
sbb
jl
aas
add
loope
adc
mov
jns
cld
cmp
lods
enter
shll
shll
sub
or
sarb
sti
xchg
mov
adcb
adc
adc
fiadds
and
mov
int
jnp
mov
mov
pop
jae
add
mov
and
arpl
jmp
js
inc
adc
enter
jge
push
pushf
or
push
push
pop
lock
push
add
pushf
fimuls
arpl
fsts
jo
in
cmp
xor
arpl
mov
xchg
mov
stos
stos
in
jne
xor
ss
mov
sub
test
insb
hlt
and
scas
in
outsb
push
xchg
insl
imul
mov
int3
cmc
mov
aas
or
mov
push
xchg
rdmsr
jg
cmp
pop
insb
jb
aad
cwtl
stc
int3
outsb
jb
inc
into
mov
loope
sub
and
dec
cmp
les
aas
cmpsb
out
dec
xor
jl
call
fmull
and
dec
mov
loop
inc
cmp
add
jbe
pop
fistl
lcall
mov
ss
dec
adc
pop
add
add
sbb
mov
add
xchg
mov
clc
or
stos
int3
int
mov
dec
cld
jae
add
mov
pop
fsubrl
sbb
addr16
and
cmpsl
rol
leave
pop
call
lock
dec
pop
fidivs
outsl
lds
icebp
mov
cmp
in
divb
add
and
dec
mov
repnz
leave
scas
mov
into
icebp
cmpsb
std
sbb
mov
push
inc
shrl
jb
mov
aaa
iret
je
adc
mov
cmp
daa
or
stc
daa
jb
fimull
ss
mov
cld
mov
xchg
enter
jmp
mov
dec
cltd
aas
xchg
and
shll
push
into
mov
sbb
jle
pop
roll
scas
jne
and
jge
and
ret
xchg
gs
mov
jno
mov
loopne
mov
xchg
fisubs
jbe
out
xlat
pusha
adc
scas
cmp
insl
lret
repz
imul
shr
inc
int
and
test
pop
aad
ret
and
repnz
xchg
nop
cs
sbb
outsb
lods
mov
push
popa
sub
add
das
repz
movsl
sub
mov
xlat
loop
mov
sub
les
ficomps
push
xchg
sub
sub
aam
mov
push
jae
sti
dec
sub
movsb
and
mov
mov
fs
imul
cli
popl
aad
mov
ficomps
push
leave
pop
xchg
cwtl
mov
push
mov
push
pop
je
popf
jno
or
popf
ret
fisttpll
out
cmp
inc
out
push
add
icebp
xchg
popa
or
arpl
and
popf
je
gs
leave
nop
pop
icebp
icebp
jo,pt
jnp
loop
and
movsb
cmp
jp
jecxz
rcr
jg
outsl
stc
hlt
mov
cmc
iret
push
xchg
rorb
out
dec
dec
je
and
in
adcb
jge
inc
xor
nop
pop
xor
push
push
lods
push
xchg
push
in
dec
lds
cmp
std
pop
stos
dec
imul
push
xlat
inc
sarb
push
ret
paddsb
loop
leave
popf
or
int3
mov
testb
inc
shrb
add
insb
mov
inc
pxor
sub
cmpsl
ret
cmc
in
mov
mov
xor
ret
movsl
mov
mov
sbb
rcrl
and
adc
ret
xchg
movsl
jg
and
out
das
cmp
aam
pop
adc
in
icebp
xchg
cmpsb
outsl
sbb
mov
xchg
adc
inc
mov
cmovne
inc
dec
xor
popf
jg
or
test
and
cltd
mov
mov
call
call
jno
mov
lods
rcr
js
push
sub
xor
cld
out
test
shr
xor
shrl
fmull
dec
or
adcb
adc
push
or
arpl
inc
cmp
shlb
fcoms
mov
lock
cmpsl
mov
pushf
jbe
adc
inc
cmpsl
pop
push
mov
cmp
sbb
into
add
push
lahf
hlt
adc
or
pop
push
inc
cli
loope
jnp
sub
adc
sub
push
jne
popa
js
push
in
add
xchg
std
subb
push
jge
mov
scas
cmp
sbb
mov
inc
gs
push
aam
jns
ja
sub
cmc
sbb
repnz
adc
and
ja
call
mov
in
scas
je,pt
mov
mov
mov
mov
xchg
aad
test
xlat
out
inc
cmpsl
adc
jno
int
mov
mov
mov
leave
pusha
sub
cmpsb
mov
or
cmc
inc
push
jae
push
xor
les
cmpsb
out
jnp
push
lods
push
jns
imul
sub
xchg
daa
pop
jnp
pop
das
xchg
cmpsb
mov
adc
fwait
andl
js
xor
adc
lahf
insb
aaa
and
xor
insb
push
jae
inc
mov
lods
sub
stos
xchg
push
mov
imul
inc
or
scas
cld
adc
fldenv
mov
insl
stos
es
les
and
jg
fwait
add
ror
das
pop
push
in
dec
shll
xor
adc
sbb
xchg
insl
test
imul
cltd
cmp
xchg
movsb
mov
in
sub
inc
scas
sub
inc
mov
das
inc
push
nop
out
imul
enter
pop
sbb
push
or
inc
push
jge
pushf
nop
mov
arpl
ret
nop
fsubl
ja
out
mov
cmp
cwtl
enter
je
mov
outsb
adc
fsub
sbb
pop
cmp
mov
dec
popf
mov
jg
xchg
push
mov
dec
mov
xchg
mov
jg
add
jmp
dec
je
popf
stc
lock
push
dec
loopne
pop
xlat
dec
inc
std
xor
mov
in
cmp
dec
xor
xchg
aaa
dec
lods
sub
das
add
std
mov
jne
adc
clc
xchg
mov
jecxz
add
push
pop
scas
adc
dec
jle
jmp
cmp
fbld
jbe
test
shll
test
inc
shl
inc
fadds
mov
lcall
cwtl
adcl
adc
loopne
mov
mov
add
mov
lods
add
leave
lea
inc
test
fldcw
iret
clc
fstpl
gs
mov
out
int
adc
or
xchg
loope
outsl
iret
pusha
lods
add
jmp
dec
fistpll
nop
xor
cltd
mov
xlat
and
mov
mov
les
pop
shl
movsb
aad
mov
sti
cld
inc
adc
xchg
rorb
xor
cmp
mov
or
and
adc
pop
sub
pop
pop
or
cwtl
adc
inc
push
sti
out
and
mulb
test
mov
out
leave
xchg
jnp
add
inc
mov
arpl
mov
push
jae
mov
fs
dec
inc
mov
je
dec
or
push
mov
xchg
pusha
cwtl
inc
ficoml
aaa
pop
or
mov
push
sub
xchg
xchg
movsl
push
xorl
pop
ja
psubq
and
cmpsb
or
adc
test
nop
gs
lods
in
sub
xor
cld
pop
adc
dec
xorb
sbb
lcall
test
and
sub
pusha
mov
mov
movb
mov
add
cmpw
add
je
add
clc
in
pop
shll
push
andl
jo
pop
movsl
leave
jmp
pop
scas
es
mov
xchg
scas
mov
mov
push
and
scas
cmp
dec
pop
arpl
pop
pop
xchg
xor
movsl
in
ret
sub
ret
add
dec
xchg
insl
mov
jmp
xchg
mov
repz
inc
fwait
or
and
scas
dec
scas
pop
inc
movsl
aad
adc
mov
arpl
push
jle
insl
push
lret
jecxz
cli
xor
inc
repnz
out
inc
cmp
add
xchg
mov
std
and
jecxz
push
or
xchg
cmpsb
and
popf
adc
push
adc
cli
f2xm1
pop
je
lods
lods
cmovno
xor
rolb
xor
dec
jns
shl
cs
imul
mov
loopne
mov
dec
test
movsl
cmp
mov
push
dec
push
mov
add
mov
jecxz
cmp
popa
call
int
loopne
loopew
add
outsb
rolb
xlat
clc
push
jb
jne
push
into
adc
rcll
andb
push
loop
adc
mov
shlb
mov
adc
mov
jl
push
ret
sti
repz
cwtl
mov
lea
pop
cmc
hlt
or
dec
lods
and
push
xor
bound
mov
cmpl
repnz
sub
add
pusha
push
pushf
ficompl
mov
imul
cwtl
lock
pop
inc
and
adc
adc
mov
sbb
push
in
jl
int3
out
insl
hlt
stos
pusha
mov
aaa
imul
pusha
mov
xor
cmp
or
push
and
andb
ljmp
sub
push
xchg
leave
clc
icebp
jnp
js
stos
test
sbb
leave
mov
jne
mov
jnp,pt
inc
push
sbb
dec
pop
pop
adc
dec
pop
std
sbb
jns
test
je
push
pop
ret
loope
jg
rep
and
and
ret
fidivrs
mov
inc
xor
add
enter
daa
pop
popf
out
cmpsl
lret
mov
hlt
ljmp
les
loope
or
jne
and
dec
subps
inc
clc
imul
push
or
cmp
neg
mov
inc
fwait
push
ffree
jns
adcl
shlb
inc
push
ss
ja
stos
arpl
gs
pop
jp
adc
jae
cmp
out
dec
xor
mov
dec
or
sbb
out
cwtl
jecxz
repz
jae
rol
or
loopne
dec
aam
imul
aam
xchg
lods
adc
mov
inc
pop
xor
cmp
xor
and
sbb
jb
call
cmpsl
lea
out
push
cmp
jnp
and
ret
and
in
mov
xor
xor
call
or
mov
pop
inc
mulb
jo
and
pop
dec
cld
inc
cltd
imul
and
mov
movsl
fs
push
inc
fdivrl
mov
cmpsb
xlat
movsl
sub
sub
push
fwait
adc
shr
cmpsl
stos
xorl
sbb
sbbl
out
inc
mov
xchg
sbb
pop
cmpsl
cmp
push
mov
push
inc
bound
and
sub
jecxz
pop
and
mov
cmp
push
xor
neg
lret
pop
and
arpl
mov
inc
stos
cmp
pop
mov
rolb
lret
cmc
mov
sbb
mov
cmp
in
js
out
outsl
xchg
nop
pop
rcll
mov
jmp
cmp
ds
icebp
jmp
call
or
sub
outsb
cli
fs
sub
sbb
jmp
sbb
mov
jbe
aas
xchg
cli
add
xchg
cmpb
lds
inc
and
stc
lods
and
jne
lret
lods
test
or
pop
add
mov
dec
rcr
push
fldcw
pcmpgtb
jg
mov
cmp
or
test
mov
mov
fadd
push
ss
pop
dec
inc
imul
nop
and
or
out
or
and
movsl
movsl
push
cmpsb
mov
and
imul
sbb
enter
ficoms
push
mov
adcb
pop
imull
fdivrp
jnp
push
push
outsl
add
xchg
int3
mov
in
pop
push
ret
popa
into
mov
mov
sbb
addl
push
dec
lds
dec
jne
stc
dec
lahf
push
popf
push
out
mov
push
adc
and
push
xchg
mov
cmp
dec
imul
xor
add
mov
jne
pop
and
int3
mov
push
je
hlt
jmp
shrb
sub
jmp
xchg
sbb
adc
divl
cmp
adc
sbb
add
out
roll
add
mov
mov
mov
out
std
daa
aaa
repz
adc
ficoml
incl
sub
cmpl
pop
cs
leave
push
dec
pushf
jbe
faddp
adc
test
sbb
pop
sub
adc
mov
jbe
es
cmp
add
or
sahf
jmp
loope
jg
hlt
xor
nop
decb
or
stc
int3
in
pop
dec
push
loop
pop
xchg
rclb
mov
roll
or
sub
jl
jo
inc
cli
pusha
pop
xor
xor
mov
xchg
add
or
and
push
jle
xchg
add
mov
xchg
cmpsl
pop
jge
jle
pop
pop
dec
jl
bound
add
cmp
pop
ret
xlat
shl
or
lods
xor
inc
das
fstpl
xor
mov
aas
rorl
cltd
dec
and
lret
pop
jbe
test
sub
pop
sub
xor
cwtl
dec
inc
pop
stos
ja
pop
or
adc
jnp
mov
leave
out
sub
mov
jae
fldcw
push
and
hlt
in
addr16
dec
push
fisubs
push
sbb
sti
sbb
sbb
sbb
cltd
sahf
jle
pop
bound
sub
cwtl
int3
ret
mov
adc
pushf
mov
sahf
add
push
in
int
xchg
std
xor
leave
dec
lock
addr16
adc
jl
or
cwtl
jne
add
pop
xchg
cwtl
jg
mov
ficoml
inc
cld
ret
loopne
lcall
ret
pop
fiaddl
mov
xchg
jg
loop
int3
sub
xor
adc
mov
mov
ret
xlat
mov
push
jmp
xchg
mov
stos
inc
adc
lods
xchg
dec
pop
fcoms
lcall
jae
lock
cmp
inc
pusha
sbb
add
shl
add
sti
popl
mov
add
mov
jnp
xor
and
into
insb
movsl
xor
or
repnz
int3
mov
and
cld
sub
adc
lret
data16
jae
notl
pop
push
cmp
std
es
in
lret
call
orl
pop
std
sti
fsubs
fdivrl
jne
and
adc
sub
pop
jl
or
push
adc
adc
icebp
mov
cmc
ret
add
pop
loope
mov
std
aam
in
cmp
xchg
push
fadd
dec
adc
and
xor
fs
push
rcrb
cli
imulb
aas
das
mov
xor
enter
ljmp
push
mov
or
xchg
lock
lock
loop
mov
in
inc
cmpsl
adc
out
xor
divb
fs
dec
push
mov
lods
dec
push
aam
cmp
mov
icebp
push
mov
sub
mov
mov
sahf
jns
pop
jne
mov
add
stos
inc
outsl
lods
add
pop
addb
jg
lcall
dec
xlat
mov
jge
push
fs
mov
pop
in
sub
test
aaa
aas
std
dec
in
fisttpll
inc
ret
jl
daa
imul
aad
and
xchg
mov
sub
inc
inc
pop
lahf
daa
inc
std
mov
xchg
notb
xchg
mov
jecxz
push
xchg
mov
xor
in
ret
rcrl
movsb
jno
mov
test
inc
je
popf
aad
jno
jne
jb
jge
ret
cmp
subl
xchg
sub
xchg
mov
aaa
fs
mov
aaa
cwtl
and
pop
xchg
push
insl
bound
fbld
scas
pushf
adc
mov
lret
mov
repz
lods
inc
fstpl
cmp
scas
xchg
sbb
ret
or
mov
and
add
jl
push
xor
xor
aaa
imul
add
xor
test
repz
outsb
mov
and
popa
lea
loop
jno
cmp
inc
adc
add
push
popf
shrb
inc
cltd
cmp
movsb
mov
sub
inc
mov
jo
push
pop
push
dec
test
je
shlb
push
push
mov
mov
int
pop
fadds
lahf
outsl
test
sbb
sbb
cmpsb
inc
sbb
sbb
imul
mov
xchg
xor
sub
dec
mov
dec
xorb
xchg
movsb
xor
xchg
and
adc
xor
pop
loopne
adc
into
inc
idiv
aam
lret
cmp
xor
mov
mov
xchg
push
sbb
sub
sti
jl
push
ret
inc
popf
iret
fisttps
ja
jno
sub
jmp
jmp
popa
cwtl
adc
mov
lcall
lret
jecxz
and
sbb
sub
adc
jnp
inc
lock
push
rolb
push
push
in
or
add
icebp
fs
push
adc
push
movsb
lods
mov
in
xlat
mov
jmp
dec
popa
sub
or
dec
dec
dec
xor
mov
adc
or
xchg
sub
inc
add
mov
mov
mov
dec
negb
adc
mov
insl
mov
adc
and
stc
aam
mov
add
xor
ds
jle
nop
test
or
pushf
and
out
scas
stc
dec
and
push
xchg
mov
test
jl
lock
sub
inc
xor
sub
sub
int3
imul
mov
sbb
shrl
inc
dec
rorl
pop
push
cwtl
xchg
push
xchg
cmp
call
mov
gs
cmpsb
aad
call
push
or
out
inc
gs
xor
adc
sub
sub
fs
inc
lock
es
aam
pop
xchg
mov
ret
ds
push
mov
inc
mov
popa
cltd
pusha
test
popf
stos
jecxz
call
and
jo
xor
scas
stos
mov
rcrb
mov
adc
xor
lods
fnstenv
icebp
mov
ljmpw
pusha
cmpsb
ds
and
insl
lods
and
push
or
int
and
jae
cwtl
mov
adc
push
aaa
std
popa
repz
pop
cli
jbe
ror
jo
and
pop
adc
pop
dec
adc
sarl
sub
and
jmp
pop
mov
push
fwait
pop
mov
insl
pusha
cltd
movsb
and
mov
sub
mov
or
lret
xchg
lock
imul
dec
pop
add
int3
pop
arpl
cld
cmp
mov
or
sbb
test
or
and
cmpsb
cmp
bswap
xor
sub
test
inc
and
outsb
sbb
fisubl
cmp
dec
iret
push
or
fildll
xorl
out
sub
lock
popa
push
loopne
xor
hlt
mov
addr16
dec
sbb
inc
xchg
leave
dec
sti
mov
jp
in
mov
xchg
leave
rcr
or
outsb
pop
int3
pop
test
xchg
lea
popa
aam
insl
int3
pop
pop
loopne
or
bound
movb
pop
pop
movsb
or
bound
cmp
mov
or
cmpsb
sti
push
sub
js
leave
inc
dec
pop
xchg
movsb
or
jnp
inc
fsub
push
adc
lcall
cmp
inc
jge
jno
je
js
outsl
dec
outsl
mov
jbe
adc
xchg
push
cmp
jne
scas
and
jecxz
in
into
pop
inc
popa
jle
cli
pop
rcrb
aam
add
xchg
jecxz
aam
test
xchg
orb
jl
jae
insb
bound
rol
jo
lock
insl
orl
xchg
mov
pusha
jns
jae
das
sub
pop
cmp
push
sub
push
fs
out
mov
xor
pop
pop
cmp
addl
mov
xcrypt-ctr
cmpsl
fwait
repz
stos
cltd
push
addr16
xor
inc
pop
ss
xchg
mov
sbb
lret
add
out
cmp
iret
mov
movsb
jo
cld
pop
mov
pop
push
push
leave
das
mov
stos
xor
cmp
add
sbb
pop
les
out
movsb
mov
pop
movsl
adc
pop
sahf
pop
ja
imul
roll
dec
cmp
test
mov
mov
xchg
adc
sub
mov
leave
insb
jmp
lds
fstp
insl
push
rorb
jns
jge
in
dec
push
fucomp
pop
les
dec
sbb
or
test
sbb
aaa
push
cmpsb
jne
sbb
inc
pop
adc
into
into
insb
mov
iret
movsb
dec
mov
and
mov
loop
bound
imul
cli
sbb
and
and
scas
lds
loopne
ficoml
daa
or
sbb
add
es
sbb
and
or
imul
jo
sbb
stos
jnp
lds
ss
pop
inc
push
nop
out
mov
mov
fsubl
shl
fs
jmp
inc
mov
inc
ja
adc
nop
pop
cmpb
xchg
xchg
mov
fistpl
addl
xor
xchg
sub
dec
sti
rcrb
jecxz
stos
cmpsb
xor
lods
dec
popf
xorb
icebp
pusha
gs
clc
jnp
or
roll
nop
lret
xor
data16
fisttps
mov
jnp
neg
push
xchg
cmp
outsb
lds
aaa
enter
cmp
rcll
out
or
cmp
lahf
pop
clc
jnp
in
lock
rcl
mov
dec
adc
fs
fists
dec
jns
mov
add
push
add
enter
xchg
xor
aas
inc
dec
xchg
inc
ljmp
stc
fwait
imul
jmp
xlat
sti
push
xlat
xor
imul
and
pusha
mov
sub
sahf
sti
les
std
dec
adc
add
mov
mov
in
xchg
adcl
sub
xor
xor
mov
std
shl
lock
mov
ret
test
sbb
cmc
xchg
cmp
ret
xchg
outsb
push
ret
inc
shll
mov
cmp
sbb
pop
sub
es
adc
ds
sub
push
lds
movsb
data16
dec
loop
pop
xlat
adc
pusha
pop
push
add
adc
sahf
fldcw
pop
cmc
hlt
push
lock
mov
jecxz
mov
idivl
rcll
fdivrl
pop
dec
ljmp
sub
xor
stc
out
and
sbb
mov
jge
pop
push
push
xor
inc
add
jb
adc
imul
loop
adc
sub
imul
push
ljmp
or
pop
ja
sbb
popa
fldcw
aaa
cs
jp
inc
fcomps
sarl
rep
and
adc
std
js
jmp
xchg
or
dec
pop
jno
dec
lock
sub
lds
cwtl
mov
jnp
addb
leave
inc
or
or
lret
add
cmp
xor
dec
xor
fistpl
jecxz
pop
repnz
out
sub
stos
xor
sbb
pusha
dec
sub
call
repz
push
jb
mov
push
xor
stos
jecxz
lcall
push
sub
and
shrl
xchg
fistpll
hlt
pop
adc
lock
les
cs
adc
cwtl
shll
jae
push
mov
cmp
shrb
negb
and
call
sub
repz
inc
pop
cmpsl
cmp
cld
and
imull
mov
adc
xorl
xor
lahf
pop
pop
les
lret
dec
ret
pusha
adc
mov
xchg
add
icebp
cmp
xor
std
adc
mov
adc
pop
ja
mov
mov
clc
fsincos
push
sbb
loop
dec
je
cmp
push
mov
ret
cmpsb
jno
jne,pn
xchg
cmp
xchg
push
repnz
stos
out
int3
pop
sbb
ss
orl
lock
sub
and
outsb
ljmp
add
xchg
fidivrs
lahf
sub
into
pop
test
cmp
inc
or
pop
push
mov
mov
mov
data16
int
ja
sub
xchg
or
mov
pop
push
das
pop
ss
cli
scas
sub
sub
pop
pop
inc
inc
push
ss
push
and
js
and
xchg
add
pop
jne
cs
add
stc
push
sub
xor
gs
and
fisubl
xchg
adc
das
push
mov
je
or
test
jo
push
inc
into
sub
aad
ljmp
stos
cwtl
pop
push
push
dec
insb
lahf
lea
and
or
add
lods
ficompl
bound
mov
inc
adc
dec
inc
decb
push
fsubl
inc
rclb
jl
dec
gs
pop
dec
and
cmp
jbe
sub
outsl
xchg
push
jmp
sbb
in
pusha
jp
sub
and
les
fs
sub
mull
repnz
cvtpi2ps
bound
or
aam
adc
gs
aaa
or
aaa
call
cmp
jb
push
cwtl
or
dec
subl
leave
subl
into
aam
pop
lahf
cld
fimuls
stos
out
sbb
inc
push
xor
mov
pusha
mov
and
subb
fwait
jbe
loope
dec
int3
sbb
add
or
inc
mov
std
mov
mov
cmp
daa
xor
add
or
inc
movaps
push
adc
xchg
pop
repnz
into
pusha
pop
aaa
pusha
push
adc
dec
pop
call
sbb
leave
in
fiaddl
iret
loope
adc
or
inc
inc
dec
mov
jno
pusha
js
fisttpl
and
xchg
fnsave
add
imul
imul
je
enter
aas
mov
jmp
mov
out
out
std
int3
xchg
aas
rcrl
add
pop
sti
loope
mov
jne
iret
js
in
cmp
dec
mov
fwait
dec
popf
jae
int3
mov
out
sbb
sbb
imul
test
ja
inc
out
push
or
mov
movsl
fistpll
or
aas
nop
sub
xlat
into
mov
leave
push
and
sbbb
mov
mov
cmp
loopne
mov
mov
mov
cmovbe
lds
adc
in
movsb
sub
sbb
test
or
shrl
testb
push
adc
mov
jne
xchg
ret
push
outsb
test
xlat
rorb
cmp
xchg
jno
or
push
or
js
adc
cwtl
mov
bound
loop
xchg
fs
push
lret
push
mov
jo
cmp
jp
push
sbb
add
sbb
test
imul
or
ss
jge
mov
adc
add
leave
push
lahf
shrb
mov
das
data16
popa
or
leave
lcall
sbb
rorl
mov
lcall
inc
addr16
dec
dec
out
rcrl
or
mov
push
insb
imul
xor
push
mov
imul
add
popf
mov
and
and
xor
fmull
mov
ja
insb
adc
and
sub
push
dec
daa
pop
rcll
out
jnp
add
lock
jne
push
mov
jmp
xchg
inc
shll
push
hlt
scas
scas
jp
clc
mov
push
lock
in
xchg
pop
scas
xor
add
cmp
je
xor
int3
push
dec
cltd
pop
adc
xchg
adc
leave
adc
mov
lds
mov
jo
dec
xor
imul
and
xchg
repnz
in
fsubl
adcl
and
dec
adc
cmp
inc
int
mov
int
jmp
cmp
push
es
push
mov
dec
jns
pop
cli
or
jbe
and
mov
push
mov
inc
jno
jns
jl
addb
jbe
lea
pop
ljmp
testb
dec
insb
sbb
inc
push
mov
push
insl
ss
push
mov
dec
leave
push
add
fsqrt
arpl
dec
int3
mov
jo
nop
fsubrl
cmp
test
lock
fs
and
int
sbb
adc
sub
and
mov
jecxz
push
jns
jb
or
adc
or
call
ficompl
inc
xchg
push
insb
pop
adc
mov
mov
aas
add
cmpl
and
dec
hlt
rcl
mov
lret
mov
test
inc
pop
cmp
fstl
push
pop
mov
aas
stos
or
mov
lea
into
or
test
adc
jp
jns
cs
popa
ja
imul
jmp
jmp
cwtl
scas
fst
fnstcw
outsb
xchg
std
push
sahf
stos
adcl
enter
jbe
stc
fnstenv
cs
mov
add
inc
or
addr16
dec
lcall
cld
or
out
pusha
xor
xor
push
scas
mov
mov
adc
inc
dec
xchg
pop
mov
mov
adc
ret
xchg
push
adc
sub
push
pusha
add
imul
popl
imulb
adc
add
je
pop
jmp
push
dec
pushf
movsw
ljmp
mov
and
and
test
jbe
xlat
jge
and
sub
adc
aad
push
xchg
xchg
in
mov
pop
je
movsl
js
inc
int3
test
inc
xchg
mov
pop
out
push
loopne
je
or
inc
add
roll
pop
inc
repz
mov
lret
adc
mov
stos
subb
enter
push
sub
loopne
push
ja
mov
iret
sbb
test
mov
jb
addr16
inc
es
sahf
mov
mov
out
shl
mov
or
pop
mov
push
es
pop
enter
pop
lahf
movsl
jl
and
aam
loop
ss
pop
daa
or
rcl
mov
or
daa
paddusb
fsubr
loop
inc
adc
test
lret
cmp
imul
shrb
popf
mov
mov
mov
xor
mov
mov
dec
or
adc
mov
out
jo
sarl
mov
ljmp
outsl
repnz
jne
sbb
dec
out
adc
pop
rolb
push
mov
xor
stos
add
mov
ds
mov
subb
cs
mov
das
xlat
stos
mov
xor
shll
and
sti
call
push
pushf
mov
lods
cmpsl
hlt
rolb
roll
shrl
mov
pop
out
mov
lcall
or
loop
cmp
push
scas
pop
out
mov
je
enter
call
in
lock
xchg
sbb
push
idivb
or
data16
aam
aas
sbbl
push
cmc
sbb
dec
cmp
xor
mov
inc
and
lock
clc
and
popa
inc
inc
inc
sub
idivb
inc
dec
and
jbe
mov
pop
and
leave
sahf
inc
jmp
mov
enter
inc
or
rorb
movsb
adc
or
fdivrs
push
cltd
daa
stos
jns
add
fnsave
lret
out
inc
jbe
push
and
cmp
jecxz
lea
les
out
mov
loop
xor
enter
or
in
test
call
pop
dec
outsl
push
repnz
lods
cmc
dec
mov
fdivrl
xor
and
push
rcr
pop
lret
stc
imul
jne
ficompl
icebp
xchg
cmpsl
div
adc
add
adc
mov
jno
cmp
fisubrl
add
xchg
dec
push
jae
rcll
jle
out
das
pop
clc
subl
dec
fisubs
dec
xchg
sahf
mov
xor
cmp
in
ljmp
adc
inc
and
mov
roll
mov
popa
jae
xor
aad
imul
mov
loope
and
sub
and
add
jb
add
popa
pop
jnp
add
push
inc
cmpsb
xchg
or
jo
dec
mov
add
daa
push
es
push
inc
dec
sub
dec
xor
outsl
pop
push
das
dec
sbb
sub
pop
xor
std
dec
pop
mov
inc
sub
testl
dec
xchg
xchg
out
inc
xchg
pop
fdivrs
fistpll
jno
pop
cmp
mov
jb
and
mov
bound
jle
jae
adc
adc
cwtl
lcall
or
pop
adc
insb
and
int3
or
les
jp
daa
pop
cmp
xchg
insb
lea
cltd
in
adc
sub
cmp
mov
fidivrs
cmp
cmp
mov
loop
cld
or
sub
xchg
pcmpgtd
les
xor
mov
push
icebp
gs
bound
sub
dec
mov
sbb
push
jbe
xchg
sahf
pop
rclb
mov
repz
stos
fistps
cwtl
push
dec
ljmp
inc
adc
les
dec
cmp
xchg
and
sahf
jp
xor
add
xor
jne
xor
jae
ds
testl
fwait
sub
lods
cmpsb
add
jge
inc
shrb
sub
aad
insb
push
movsl
test
or
icebp
xchg
xor
cltd
inc
mov
fimuls
mov
idivb
and
repnz
test
je
prefetchnta
sub
or
cld
or
xchg
sub
loop
cmp
jecxz
mov
inc
out
jb
repnz
sarb
cmp
cld
pop
int
pop
mov
adc
sbb
mov
fisttpll
xor
clc
adc
cs
mov
rorb
sbb
in
inc
and
fcomip
jmp
sbb
hlt
icebp
push
or
and
lret
ja
jle
jns
sub
stos
mov
fimull
add
mov
xchg
es
lods
sub
cltd
loopne
adc
out
push
push
ret
xor
movsb
int3
add
add
bound
movsb
inc
pusha
push
movsl
in
mov
loop
loope
pop
fiaddl
jg
sub
adc
dec
pop
fcmovne
cmp
sbb
jle
dec
dec
mov
loop
push
shll
lds
test
or
in
addr16
arpl
sbb
aam
inc
dec
push
pop
mov
outsb
xchg
xchg
adc
jnp
add
jmp
and
into
imul
push
xor
sbb
pop
rcrb
mov
jg
add
jae
pop
mov
inc
negl
mov
nop
xor
jae
add
call
pop
shl
icebp
jae
ljmp
ret
nop
or
sbb
or
lock
mov
lds
test
imul
jl
mov
jns
sbb
das
inc
lds
pop
int3
jo
xchg
das
dec
push
mov
sub
mov
xchg
mov
add
adc
repnz
mov
mov
jl
into
ds
shlb
dec
cmp
call
jle
cmp
xor
inc
mov
cmpsb
out
xor
lds
jbe
xchg
fwait
adc
inc
pop
mov
ljmp
ret
lret
in
movsl
sub
repnz
stos
addr16
lcall
lahf
dec
and
xor
mov
das
adc
adc
sub
bound
jp
addr16
add
pop
scas
sub
jne
sub
test
adc
aad
xchg
fsubl
sub
loopne
push
jp
dec
nop
dec
and
outsb
inc
leave
push
clc
std
sbb
in
stos
cld
cmp
pop
aad
enter
add
push
xor
jl
addl
mov
dec
rcll
je
arpl
clc
push
les
fidivrl
repnz
outsb
dec
push
dec
mov
ret
movsl
hlt
sti
or
adc
xchg
cmp
push
out
notl
je
inc
inc
sarl
inc
insb
push
inc
movsb
loop
dec
xor
data16
fldz
add
adc
sbb
and
jae
lds
nop
fsubl
xchg
inc
out
imul
jne
adc
and
sub
push
push
inc
add
pop
shlb
sbb
jne
gs
popa
out
cmc
cmp
push
mov
mov
bound
adc
inc
aad
xor
in
inc
cmp
xor
mov
xor
fistl
xor
cld
mov
cld
popf
imul
jns
inc
sub
and
cmpsb
andl
pop
or
mov
cmp
mov
add
ds
or
sbb
cmc
mov
add
pop
jbe
lock
data16
and
xorb
inc
jle
imul
push
call
cmp
inc
lock
add
jns
in
movq
ret
scas
sub
sbb
adc
sbb
pusha
das
inc
mov
sub
sub
jg
aaa
inc
inc
pop
shr
mov
fildll
jp
inc
sbb
jl
jp
popf
cmp
push
in
leave
mov
pop
xchg
xchg
lods
jp
jp
test
mov
aam
fisubs
mov
pminsw
ret
pop
movsl
mov
xor
or
ds
pop
das
adc
ljmp
mov
inc
jp
xchg
xor
int
mov
xor
mov
cmp
mov
mov
aam
xor
cmp
push
jb
adc
sbbb
pop
cwtl
out
xchg
mov
xlat
inc
pushf
hlt
jp
inc
mov
mov
or
movsl
jmp
stos
and
call
iret
mov
adc
and
sub
add
nop
aam
rol
cmp
adc
dec
in
inc
push
fistl
sbb
aad
ljmp
add
fs
movsl
cmp
sub
fcoml
or
test
jl
out
jae
loope
xor
stos
and
mov
mov
pop
jg
and
mov
imul
nop
or
pusha
cmp
in
inc
movsb
xor
xor
jnp
rolb
in
punpcklwd
xchg
test
cwtl
adc
faddl
aad
xlat
xchg
das
pop
shll
aas
cmc
mov
mov
std
out
push
inc
cs
xor
loop
push
in
adc
ret
inc
inc
sub
inc
cmp
ret
and
cmp
test
cmp
xor
popf
iret
arpl
mov
fwait
jmp
jg
dec
leave
ss
xor
or
hlt
pop
push
lods
and
inc
cmp
mov
sub
sbb
dec
cmpsl
aad
push
add
inc
gs
xchg
cmp
mov
out
je
jl
mov
les
cwtl
jg
and
repnz
out
mov
lret
cmp
push
mov
mov
nop
aas
popa
push
push
push
lock
inc
leave
or
insl
mov
cli
leave
fldcw
xorb
pop
xchg
adc
lret
cmp
mov
adc
aad
sti
ret
mov
insl
cmp
notl
jp
fwait
icebp
cmpb
out
sbb
xchg
adc
nop
lock
mov
mov
pushf
repz
and
out
inc
das
sahf
jns
in
fwait
loop
mov
sub
test
loope
jb
std
xchg
jnp
lods
movsl
or
call
mov
dec
mov
mov
sub
push
mov
xchg
mov
aam
ficomps
cmpsb
mov
inc
leave
xchg
in
push
xor
cmp
scas
icebp
jmp
aas
jmp
aas
call
mov
xor
lds
adc
hlt
or
push
loop
and
jle
rclb
or
ret
xchg
jge
xchg
aad
test
push
loope
jae
loopne
imul
cmp
fimull
es
shll
andl
mov
xchg
rol
or
xor
daa
mov
inc
iret
arpl
imul
movsb
dec
xor
inc
adc
pop
fmul
icebp
in
push
xchg
in
inc
add
js
mov
fs
xchg
xor
repnz
sbb
push
adc
or
out
pusha
push
and
cmp
or
mov
mov
in
dec
or
mov
inc
dec
mov
ss
push
jmp
add
jmp
jnp
cmp
mov
aam
mov
push
nop
mov
sub
adc
into
popa
adc
jl
mov
nop
add
jbe
sahf
mov
jmp
movsl
mov
das
loopne
clc
lods
std
sub
fdivl
aad
mov
pop
in
ret
sub
and
push
cltd
jmp
fld
cmp
mov
adc
mov
jecxz
add
inc
xchg
in
and
sti
sub
js
or
stos
lea
inc
sbb
mov
push
sbbb
fnstenv
out
push
cmp
sbb
mov
or
xor
std
and
add
mov
mov
jb
ret
pop
enter
sub
and
mov
cmpsb
add
cmp
je
or
jnp
xor
inc
pop
gs
loope
mov
andb
orb
pushf
pop
xchg
pop
arpl
ja
dec
push
cmp
fnstsw
repz
add
adc
xor
mov
in
push
mov
out
mov
andl
pop
pop
loopne
push
jmp
testb
dec
push
push
loope
int3
out
int
out
mov
pop
xchg
std
ds
or
out
lods
into
jmp
xor
movsb
loope
sub
inc
and
data16
push
or
and
jle
sub
sbb
add
repnz
jmp
shlb
jmp
mov
js
push
jbe
add
movsl
les
imul
mov
inc
push
add
and
jno
push
pop
test
adc
test
mov
jp
sub
sti
sbbl
fs
pop
cwtl
push
daa
rcl
push
iret
xor
sbb
fistps
xor
popa
scas
and
popf
xchg
mov
fidivl
add
pop
mov
jle
int
sbb
fidivs
jb
inc
mov
hlt
into
subb
jmp
testl
lods
jge
xchg
outsl
fistpl
mov
or
fdivs
mov
xchg
lds
mov
pop
out
adc
dec
push
stc
shl
xchg
or
movsb
sub
cltd
mov
pusha
lock
xchg
pop
bound
ficomps
lods
xchg
inc
jb
outsb
aaa
inc
insb
mov
cwtl
xlat
int
movsb
xchg
inc
bswap
and
sti
dec
sbb
movsl
pop
das
notb
dec
pop
sahf
mov
test
jecxz
push
push
cmpl
loopne
scas
adc
dec
jg
popa
fucomp
mov
lret
and
pusha
adc
inc
mov
dec
inc
test
xchg
cmp
in
cmpsb
inc
xor
cmpsb
push
fstpl
sbb
test
adc
pop
xor
lea
cmovg
je
mov
dec
popa
and
js
inc
pop
pushl
cld
add
daa
fdivrs
insl
mov
andl
inc
jecxz
fidivs
imul
repz
mov
int3
leave
add
pop
or
jnp
ret
rclb
dec
mov
aam
pop
test
fnstcw
fcoml
jmp
add
sub
loop
xchg
inc
dec
jmp
dec
stos
xchg
mov
js
call
sub
out
nop
mov
jne
xor
pop
iret
ret
mov
movsl
pop
xchg
mov
cmc
in
rcrb
cli
jno
sbb
xchg
sahf
inc
outsl
fistpll
mov
or
lea
bound
mov
xchg
xor
adc
jp
mov
mov
fisubrl
mov
rcrb
xchg
push
or
adc
jne
aaa
xchg
ffreep
movsl
or
idivb
xor
popf
es
movsb
and
jl
enter
or
mov
loop
sti
pop
cmp
imul
and
push
out
inc
dec
sub
pop
roll
cmp
sahf
gs
sub
add
in
xchg
mov
push
inc
andb
mov
sub
lahf
and
test
push
cmp
push
bnd
adc
es
dec
insb
push
mov
xor
daa
or
jl
adc
pop
and
pop
mov
xchg
scas
sahf
and
sti
fs
insb
pop
mov
stos
jecxz
mov
in
inc
mov
xchg
inc
rol
sub
cmp
je
sub
jle
dec
cmp
inc
inc
and
jnp
xchg
aaa
int3
lret
cltd
insb
add
push
leave
mov
pop
sbb
popa
cmp
js
out
lret
call
sti
mov
lea
lcall
sbb
push
push
lretw
mov
sub
pop
jo
das
nop
cmp
cmp
push
xchg
repnz
xor
nop
push
outsl
cld
faddl
iret
jb
shl
sub
push
sbb
test
hlt
cmpsb
stc
inc
test
lret
push
xchg
mov
jmp
sahf
aad
push
test
push
subl
test
fcomps
or
sahf
jne
mov
jns
rclb
leave
call
jmp
xchg
daa
jle
sbbl
xchg
sub
mov
adc
call
jbe
push
adc
sarb
idivb
dec
mov
ffree
aaa
jne
into
dec
loopne
mov
jg
sub
cmp
cli
scas
mov
scas
jno
xchg
pop
call
xchg
pop
loope
xchg
dec
insl
leave
ja
and
or
lret
jecxz
cmp
add
imul
out
rorl
mov
jl
or
ds
movsb
sub
daa
jno
add
fisubs
in
jmp
push
test
hlt
mov
pop
cmp
out
je
jo
subl
hlt
inc
popf
dec
mov
pusha
jnp
addr16
dec
sub
fcmovu
cmpsl
cmp
pop
add
sbb
inc
push
das
jmp
imul
sub
jnp
mulb
scas
xor
sub
mov
inc
inc
dec
and
pop
and
add
roll
adc
cmpsl
call
imul
adc
mov
fisubrs
int3
inc
cmp
in
and
test
and
xor
loopne
in
stos
jno
shl
mov
das
iret
adc
pop
in
mov
sbb
dec
xor
or
je
stc
sbb
repz
inc
cltd
sub
shl
por
dec
inc
mov
insl
insb
push
fistps
cld
repnz
leave
push
xor
loope
aas
cltd
adc
sbb
dec
cs
enter
mov
bound
mov
or
je
xor
int
sarl
sbb
call
xor
sbb
gs
adc
lea
enter
push
or
xchg
popa
sbb
cmpsb
adc
movsl
rcr
dec
dec
pop
xor
jmp
mulb
cmp
out
dec
jae
adc
adc
pop
andb
add
dec
test
les
mulb
mov
daa
fildl
fbstp
jne
mov
push
shll
out
push
pusha
push
or
jno
xor
mov
cmp
xchg
out
jp
mov
and
scas
sub
nop
inc
loopne
fnsave
mov
test
in
es
cmp
dec
insb
leave
jl
aam
inc
aaa
cwtl
mov
pusha
cmp
into
or
sbb
push
or
clc
xor
and
aaa
push
lds
repnz
pop
mov
in
in
pushf
inc
dec
mov
cli
jne
mov
dec
stc
stos
addr16
pusha
adc
cld
mov
inc
mov
adc
mov
inc
xchg
mov
mov
int
pop
lock
add
movsb
or
xor
xchg
subl
ss
sti
fwait
std
add
ret
add
bound
cmpsl
fucom
subb
jnp
popf
xchg
jo
cwtl
mov
test
cmpb
adc
insb
sahf
cmp
sbb
cmpsl
or
addr16
dec
pop
add
movsb
mov
imul
fwait
push
movb
sbb
arpl
and
cmp
sarb
ss
mov
fmuls
in
push
adc
sub
pop
lret
add
and
inc
push
stos
dec
inc
es
or
inc
int3
gs
jae
jmp
cmp
xor
ljmp
inc
add
cmp
push
loopne
and
scas
mov
add
cwtl
aas
sbb
rclb
loop
sbb
bound
inc
pop
sbb
cli
mov
into
sbb
mov
push
add
rclb
sub
xor
je
adc
inc
aas
and
imul
sbb
dec
loop
cmp
jnp
pop
imul
jmp
lret
cmp
lahf
imul
add
cmp
mov
dec
divb
ret
rcll
fstpt
mov
call
or
ficoml
jne
lret
jp
imul
pop
imul
popf
daa
sbbl
push
pop
push
lods
xor
lea
add
negl
xor
in
out
rcl
test
push
or
sbb
inc
sub
adc
ret
xor
add
and
add
sub
dec
ret
mov
ja
loopne
rolb
adc
popf
add
cmp
adc
mov
fs
loopne
jmp
sub
inc
mov
lret
lock
sbb
in
cmp
mov
xorb
cli
out
push
jnp
or
push
movsl
popf
js
and
cmp
pop
imul
push
jg
sbb
push
leave
cmpsb
add
sub
xor
push
sahf
cmp
mov
mov
add
add
inc
enter
mov
xor
sbb
stos
int
ret
pop
cmp
xor
and
mov
sbb
mov
faddl
lods
push
jge
xchg
repz
ljmp
xchg
lret
je
lds
ja
dec
or
popf
dec
nop
pop
enter
dec
mov
fwait
mov
mov
imul
movsl
imul
pop
jle
xor
test
test
push
add
pop
cld
adc
sbb
mov
cmp
push
lods
in
dec
or
mov
aad
out
inc
xorb
fidivrl
std
xchg
jne
push
jge
dec
movsl
out
cltd
push
pop
int3
enter
jnp
rcr
jae
popa
push
or
orl
sub
add
jb
arpl
test
push
adc
sub
cld
repz
pop
adc
jo
clc
xor
xchg
sbb
jno
mov
xchg
mov
jmp
cwtl
jle
and
jg
mov
data16
shll
int
aaa
mov
add
pusha
pop
mov
les
jl
mov
jnp
sbbl
ja
cltd
jmp
xchg
xor
lods
xchg
push
sbb
lret
or
jl
sub
jbe
lahf
jmp
lret
sbb
mov
push
popf
adc
adc
xor
adc
push
or
data16
or
pop
push
movsl
cltd
inc
test
adc
in
ds
jno
push
out
pop
cltd
mov
cmc
sub
xlat
jge
in
sti
dec
push
dec
or
add
mov
xchg
mov
or
dec
insl
in
iret
fscale
mov
sbb
jb
mov
and
xchg
in
int3
sti
cmp
sub
xor
stos
das
mov
mov
add
mov
sbb
testb
andl
adc
pop
push
icebp
test
data16
jmp
jo
mov
add
jp
cwtl
sbbl
push
or
xlat
jle
mov
dec
mov
xor
daa
and
jns
call
jle
lock
mulb
cld
test
repz
mov
jne
or
test
xchg
shrb
test
je
rclb
sbb
sbb
sbb
in
sub
movsb
cmpsb
or
daa
xor
das
xor
add
aaa
push
jns
push
subb
insl
inc
leave
and
pop
sub
dec
lods
fidivs
push
mov
jp
mov
std
dec
xor
in
lds
and
dec
cmp
bound
push
add
jl
inc
or
cmp
jp
xchg
adc
cwtl
rolb
adc
inc
imul
js
stc
jns
jae
mov
push
jg
test
xchg
es
in
sub
imul
arpl
adc
add
lock
clc
pusha
iret
cmp
cltd
es
jge
jle
dec
inc
clc
push
push
test
ja
push
cs
and
jb
and
shlb
cwtl
out
mov
jo
cs
add
lds
lock
mov
lahf
push
jb
and
push
inc
sbb
push
xor
data16
jle
pop
in
add
daa
pop
ret
ss
dec
scas
pop
sbb
sub
sub
sbb
dec
js
mov
shll
movsl
and
xchg
lods
mov
imul
and
dec
push
lods
sub
lods
sahf
test
sub
fsub
or
aam
mov
das
es
cmp
adc
fbld
dec
das
dec
push
aas
mov
inc
push
mov
pop
lock
pop
scas
loopne
insb
inc
cmpsb
shlb
loope
mov
mov
sti
xor
jge
arpl
sub
dec
testb
nop
and
int
dec
jle
jle
push
popf
insl
std
mov
addl
and
les
ljmp
scas
push
mov
mov
movsl
lods
bound
popf
loop
mov
fiadds
cli
sub
sbb
xchg
leave
mov
gs
mov
imul
add
cli
mov
and
sbb
xchg
xor
mov
in
loopne
cs
push
mov
inc
jae
or
mov
idivb
icebp
mov
sti
jecxz
es
mov
sub
mov
jge
jae
jecxz
stos
jle
sbb
gs
and
imul
jl
aas
ja
aaa
mov
in
pop
jb
push
orl
movsb
fiaddl
or
ret
cmc
out
xchg
out
mov
movsl
negb
out
call
push
lcall
in
cmpxchg
cmp
push
pop
add
mov
dec
loopne
popf
jnp
vphaddubq
ss
ret
mov
dec
mov
ret
iret
push
inc
out
push
sub
jle
cwtl
out
fwait
or
test
pop
cltd
call
mov
leave
jae
js
sti
mov
push
push
adc
pop
sbb
bound
inc
xchg
sbb
inc
clc
ret
call
mov
or
pop
sub
js
pop
pop
or
jns
or
lods
enter
cmpsb
xchg
lret
lods
loop
in
jmp
pushf
ds
mov
dec
sar
in
and
sub
mov
push
stc
push
inc
push
push
stos
xchg
jnp
imul
frstor
mov
mov
inc
in
lock
nop
aas
add
enter
xchg
adc
or
push
sbb
xchg
pop
sarl
loope
loopne
jmp
loopne
mov
out
inc
aam
add
outsb
or
iret
js
inc
lret
mov
into
into
insl
xor
pop
mov
push
sub
mulb
mov
into
fstpl
ficomps
add
xchg
fwait
andb
and
scas
fcoms
sub
jnp
cli
mov
hlt
loop
inc
aas
jl
xor
jmp
push
nop
push
dec
shr
test
filds
sahf
cmp
fistpll
lret
mov
sub
lcall
int
push
nop
cmp
add
lods
aam
add
jp
or
jecxz
mov
pop
ret
popf
or
sarb
out
test
call
jb
dec
sbb
test
pop
push
mov
or
rcrb
dec
pop
ja
xchg
pop
ljmp
push
out
push
fsin
lds
mov
mov
xchg
rclb
push
mov
cmp
mov
mov
mov
and
xchg
pop
push
bound
and
add
lods
pop
push
dec
inc
mov
jp
leave
adc
adc
out
pop
inc
es
mov
je
jg
ficoml
pusha
hlt
add
sub
stos
cltd
jbe
jno
cwtl
mov
test
fwait
pop
sub
movsb
push
xor
clc
xor
loop
ret
ds
cltd
mov
in
xchg
addps
pushf
cld
xor
jg
fisttpl
or
cmovbe
xor
mov
fnstsw
leave
mov
popa
lods
dec
fbstp
sti
cmpsb
cltd
pop
lahf
mov
cmp
imul
or
inc
mov
leave
aam
mov
lret
add
mov
clc
pusha
dec
enter
dec
push
add
loop
add
lods
rcll
pop
xor
dec
xor
adc
xchg
or
mov
adc
movsb
addr16
xor
enter
je
or
inc
fnstsw
call
adc
push
int
mov
add
dec
xchg
popa
aas
sbb
cmp
shl
adc
add
push
cld
push
mov
adc
mov
ret
add
jecxz
dec
push
mov
jno
push
xor
pop
cmpsl
aad
add
sbb
add
shrl
sub
enter
or
push
stos
mov
pop
jb
std
pminsw
inc
xchg
or
xor
lea
xchg
jnp
test
aad
sti
call
mov
mov
jle
enter
dec
popa
sbb
frstor
data16
mov
mov
jne
test
xor
xchg
pmullw
stos
mov
push
push
dec
test
sbb
mov
rorb
inc
sti
push
xchg
jns
lods
pushf
adc
inc
add
mov
jne
arpl
enter
adc
imul
ss
mov
mov
lret
es
inc
imul
jnp
test
cli
xchg
scas
adc
jp
cmp
sub
scas
and
fistl
pop
in
sub
pushf
outsb
xchg
test
testb
mov
xchg
mov
in
or
lds
mov
jo
cmc
test
enter
inc
mov
push
mov
popf
ss
adc
pushf
sti
ret
mov
add
mov
mov
push
push
cld
lea
fsub
leave
jg
clc
aam
pop
jmp
inc
and
outsl
xchg
subl
stos
clc
cmpsb
stos
ljmp
mov
push
cwtl
xchg
fucomip
adcl
daa
mov
je
andb
lahf
mov
xor
notl
mov
jp
insl
fimull
dec
inc
mov
sub
and
call
jg
or
das
icebp
sbb
mov
mov
xorb
jae
and
insb
stos
aad
gs
sub
xor
and
cmp
cmp
test
rcll
xor
cwtl
cld
cli
jo
inc
int3
adc
fnstcw
ja
mov
sbb
mov
ret
negb
ror
push
pop
dec
cmp
test
push
or
test
jecxz
sbb
mov
dec
test
xor
sti
cwtl
and
scas
fistpl
and
cmp
imul
mov
mov
mov
stos
stc
xchg
mov
add
aas
sub
lcall
mov
mov
sbb
and
add
xor
daa
test
cmp
sbb
test
cltd
repz
pop
xchg
mov
into
xor
add
push
push
testb
push
movsb
insb
xchg
cs
scas
sub
mov
adc
sahf
push
iret
or
mov
call
mov
hlt
das
xchg
dec
test
mov
push
add
or
dec
pop
mov
push
jecxz
cmp
cmpl
xor
or
lret
push
sti
iret
insl
push
inc
jne
and
aaa
rclb
jne
mull
shlb
adc
mov
add
popf
cmp
les
cmp
xchg
adc
push
leave
mov
dec
enter
sub
cmpl
mov
sbb
lahf
call
and
mov
not
adc
gs
fildll
sbb
mov
jno
xor
add
mov
add
push
je
adc
loope
xor
xchg
or
jae
pop
scas
mov
add
addr16
adc
es
mov
lods
and
in
mov
and
push
cmp
fcmovnu
lds
jnp
mov
xchg
xchg
icebp
lods
jle
jge
shrb
inc
xchg
jne
ja
addb
iret
das
mov
add
ds
std
call
test
lods
dec
and
add
mov
loop
pop
mov
mov
jbe
ja
or
fwait
cmp
cmp
add
sbb
xchg
lea
jno
dec
mov
stc
jl
ja
mov
push
mov
hlt
push
fcmovnu
in
insb
push
mov
testb
mov
pop
pop
cwtl
bound
sbb
xor
jl
pop
pop
xchg
adc
jae
xchg
popa
lods
jns
dec
pop
das
das
push
in
pop
sti
xlat
sub
sub
in
insb
adcl
jae
clc
int3
dec
cmp
pop
lods
mov
paddb
mov
cmp
ss
icebp
mov
xor
add
fnstcw
xchg
push
cmc
clc
aas
out
pushf
fsubp
inc
fnstenv
lock
and
adc
out
jno
and
arpl
xchg
cmp
icebp
xor
test
hlt
aam
mov
loopne
xor
inc
push
mov
push
mov
fstps
daa
xchg
xchg
add
lock
repz
cld
xor
push
jl
push
fnstenv
mov
add
ja
xchg
lods
jnp
sarb
movsl
add
jno
add
lock
rorb
dec
dec
dec
fdivl
add
in
sbb
aam
push
enter
pop
inc
test
inc
lret
insb
jle
jb
sbb
mov
ljmp
add
mov
js
push
mov
mov
mov
mov
fcoms
test
xchg
pop
or
sub
test
lret
ret
leave
dec
and
and
mov
or
sbb
sbb
mov
bswap
xchg
jle
inc
sbb
aaa
cmpl
push
addl
movsb
subb
sbb
cmc
pop
pop
cld
insb
test
sahf
jge
sbb
sub
and
inc
mov
daa
pop
xchg
pop
dec
stc
sub
xchg
clc
ljmp
cmp
or
push
lds
stc
cmp
sar
leave
dec
sub
inc
jmp
ljmp
inc
mov
push
mov
push
icebp
add
dec
cmp
testb
test
daa
sub
push
and
test
imul
stos
dec
jl
les
push
in
test
xchg
and
jmp
jae
das
gs
push
mov
and
mov
mov
iret
push
les
rcr
pop
push
xchg
and
cmpsl
popw
mov
mov
lret
inc
pop
mov
int
dec
xchg
les
jp
movsl
dec
inc
outsl
push
sahf
in
test
notb
add
cmp
mov
jno
mov
insb
fistps
cmp
test
mov
test
pop
mov
xchg
xor
out
mov
test
repnz
add
ds
fs
stos
mov
test
in
shrl
adc
xor
mov
int
push
xorb
cltd
mov
mov
ja
add
rorl
inc
outsl
pop
mov
jle
adc
rcr
inc
or
push
jge
jo
inc
jmp
pop
mov
lock
mov
test
jecxz
sbb
jo
mov
cs
je
data16
push
jge
sbb
jns
loop
pusha
add
psrlw
mov
incb
xchg
push
dec
and
insl
mov
mov
in
inc
sub
and
test
or
lea
push
pop
loop
data16
mov
loop
rcr
jns
xlat
int3
sub
icebp
xchg
sbb
jl
xor
int3
add
xchg
sub
and
or
xchg
andl
je
nop
aam
push
es
adc
xchg
pop
add
xchg
vmread
dec
mov
push
or
roll
sub
fwait
mov
bnd
push
sbb
dec
pop
jns,pt
je
popa
loopne
xchg
xor
cmpsl
lret
push
inc
push
adc
aad
outsl
leave
mov
sbb
inc
adc
jo
mov
aam
mov
dec
sbb
add
mov
lods
shlb
adc
insl
xchg
mov
or
push
mov
sbb
pop
or
sub
xchg
outsl
adc
into
and
dec
jo
mov
shll
std
sti
xor
jno
mov
mov
or
sub
push
inc
and
add
jge
sbb
sbb
mov
movsb
jle
ret
push
pop
sar
in
sub
sahf
inc
xchg
mov
mov
mov
cmp
fcompl
and
imul
mov
push
xor
js
add
sbb
add
pop
dec
push
and
gs
mov
dec
pop
pop
jp
pop
mov
jmp
dec
bound
inc
xchg
ret
in
adc
nop
xchg
and
cmc
jno
xor
add
cmp
cli
iret
mov
cwtl
mov
cmp
adc
jl
xor
pop
andl
mov
ds
cmp
sahf
adc
jle
imul
adc
les
mov
sub
sub
and
fwait
adc
int
xchg
xor
data16
pop
jle
out
sub
mov
popa
jo
sub
jo
cmc
or
push
sbbb
or
pop
inc
pop
xor
add
mov
inc
mov
sbb
test
jno
clc
dec
popa
pcmpeqw
push
inc
imul
scas
xchg
jo
mov
fstpt
repz
hlt
jl
jae
push
jge
jle
dec
xchg
jle
test
insb
and
and
arpl
pusha
jo
cld
fisubrl
inc
arpl
outsb
xchg
cmp
mov
out
out
test
mov
jne
dec
insl
or
movsl
adc
xchg
jbe
pop
inc
jnp
mov
pop
rcrb
mov
adc
add
je
jo
pop
mov
shlb
push
clc
dec
xchg
out
mov
pop
popf
pop
orps
push
in
and
xor
cmp
loop
xchg
scas
loopne
mov
sarl
and
xor
pop
data16
leave
push
adc
dec
dec
lods
add
dec
jno
pop
gs
inc
lock
pop
push
out
push
sbb
stos
pop
jb
push
js
mov
sub
cmpsb
out
add
jnp
fcom
aam
adc
sub
popf
push
push
fistpll
lods
jbe
and
andb
scas
outsl
cltd
loope
mov
movsb
popa
add
mov
xchg
jp
push
jo
lea
mov
sub
rolb
or
inc
add
cli
adc
cmp
and
in
cwtl
pushf
data16
outsb
jbe
sub
icebp
pop
or
cmp
sbb
cmp
dec
add
xor
push
jl
cltd
cs
xchg
outsb
rorb
data16
or
jno
sbb
leave
xor
sub
sub
or
scas
outsl
push
imul
das
and
mov
sbb
inc
or
jg
lock
xchg
push
inc
jae
bound
stos
mov
mov
xchg
aaa
cwtl
dec
sub
dec
xchg
mov
jle
int
pusha
ja
sub
sbb
push
add
lock
adc
loopne
fmuls
or
lret
inc
into
xchg
aam
arpl
push
mov
xor
hlt
repz
inc
xor
dec
mov
or
sar
stc
inc
in
in
cmp
das
ror
add
and
hlt
pop
and
push
lock
cmp
fldenv
aaa
jge
icebp
inc
mov
ss
stc
dec
push
jecxz
lahf
xchg
inc
adc
push
aas
cltd
jo
int
dec
jle
lea
or
loopne
pop
fisubrs
sub
dec
call
test
rcl
xchg
stos
shll
inc
sub
lea
inc
xchg
jnp
push
jge
or
cmp
clc
push
pop
into
call
stc
mov
cmpsl
out
das
push
movsb
fmuls
mov
add
dec
lock
mov
es
sub
arpl
sbb
push
adc
pop
pop
aaa
xor
icebp
mov
test
addb
js
popa
mov
or
or
push
cmp
dec
sub
jecxz
dec
daa
mov
insb
and
leave
jmp
nop
mov
sub
push
test
cmpsl
jmp
mov
ret
pop
dec
aad
fcomip
ds
mov
dec
xchg
push
js
lods
sti
cld
ret
popl
cmpsl
fs
ja
adc
inc
pop
enter
aad
out
rorb
arpl
jg
pop
push
xchg
jg
inc
dec
addr16
cmp
fs
jmp
les
mov
loope
cmp
idivl
pop
fdivl
test
rcrl
arpl
outsl
je
adc
pop
mov
or
js
dec
dec
push
hlt
daa
pushf
sahf
ljmp
sub
xor
sub
leave
inc
xchg
push
jmp
loopne
add
enter
xchg
mov
dec
jbe,pn
mov
inc
orb
stos
push
sub
cmp
mov
addb
leave
cltd
jne
fldcw
mov
add
add
test
pop
lret
gs
push
repnz
cwtl
and
and
hlt
stos
aam
pop
or
fnstcw
stos
add
addb
push
gs
mov
and
movsb
rcl
fisttpl
add
inc
mov
dec
cmp
sub
jo
stos
mov
jmp
call
add
sub
lods
mov
cltd
dec
pop
jmp
cmp
dec
imul
lahf
lds
out
sbb
pop
or
xchg
mov
push
rorl
stc
adc
out
inc
lods
movsb
cmpsl
mov
sub
jmp
jmp
sub
adc
bound
sub
out
pop
jmp
cmp
adc
xor
cmc
or
repz
dec
mov
xor
sub
xor
clc
loop
movsb
mov
add
jl
loope
movl
ret
push
inc
add
adc
rolb
insb
mov
push
loope
ret
jnp
cmp
and
inc
mov
lods
add
call
movsl
rolb
bound
ss
in
mov
ljmp
popa
xor
jne
xor
orb
add
jp
cmc
pop
mov
xchg
in
jge
sub
cmpb
in
dec
xchg
sbb
insl
sbb
sub
jge
or
add
push
lock
sahf
inc
sar
aam
pop
xchg
rcl
pop
pop
aad
mov
les
int3
xorb
jb
pop
andl
dec
ljmp
sub
sub
cmc
lds
push
es
stc
adc
mull
sub
and
out
les
mov
add
loop
adc
jmp
ja
push
cwtl
xor
sub
push
mov
aad
sub
repnz
xchg
clc
outsb
ds
aas
xor
lds
jge
xchg
cmpsb
test
lods
out
aaa
aam
and
adc
xor
stc
xchg
sub
repnz
cvttps2pi
inc
cmc
shlb
xor
pop
popl
outsl
push
loope
test
loope
aad
xchg
pop
and
jne
int3
pop
mov
rolb
jno
adc
xadd
pop
sbb
sbb
and
pop
fistps
sbb
sub
test
dec
or
adc
test
or
push
fiaddl
mov
outsb
in
xchg
inc
stos
sub
jecxz
pop
add
add
mov
arpl
dec
adc
inc
imul
mov
outsb
out
adc
xchg
xadd
stos
and
cwtl
icebp
push
nop
hlt
mov
adc
sub
jp
sbb
dec
insl
adc
repnz
sbb
loopne
stc
mov
push
pop
cmpsb
xchg
leave
sar
push
sahf
cmp
in
inc
dec
sarl
scas
mov
mov
shrl
test
cwtl
arpl
xor
push
stos
xchg
jecxz
mov
ljmp
xchg
xchg
mov
cli
inc
push
mov
mov
fiaddl
out
test
sbb
sti
push
popa
mov
fwait
es
stos
jle
push
jnp
add
jb
int
mov
or
lea
mov
pop
sbb
cli
add
movsb
dec
orb
arpl
ret
push
out
inc
pop
aaa
leave
imul
int3
cmp
rorb
jge
mov
les
adc
pop
adc
sbb
cmpsb
jne
adc
jnp
das
leave
and
jo
add
cmc
add
sbbl
mov
dec
inc
pop
adc
xor
scas
jp
inc
fists
imul
shll
and
daa
addb
rcl
data16
inc
cmpsb
or
push
cmc
sub
add
jae
or
fisttpl
mov
add
out
addl
or
sub
cmp
lock
or
jb
mov
inc
insl
in
xor
aad
daa
je
xor
xor
das
sub
into
push
xor
outsb
cmc
test
or
and
jl
push
imul
testl
push
andb
push
add
mov
fidivrs
inc
aaa
mov
mov
incl
push
in
sbb
jne
xchg
adc
fistpl
in
cmovo
jge
lret
rcl
dec
ror
and
mov
test
cmp
fwait
jp
push
out
and
jecxz
ja
or
inc
inc
js
es
push
pushl
negl
addr16
or
xchg
mov
jl
cltd
inc
int3
and
ret
and
jbe
push
and
ret
adc
out
daa
xlat
loope
int
test
sbb
lea
sub
xchg
outsl
or
sti
ret
push
add
mov
mov
fwait
imul
dec
mov
out
push
scas
mov
cld
out
jns
cmp
pop
dec
pop
sbbb
inc
inc
jge
adc
sbb
sub
inc
gs
mov
bound
and
or
js
add
pop
xor
rcll
sub
xchg
mov
aam
jg
aad
push
sbb
or
je
std
daa
sub
loop
xorl
mov
and
and
cmpsb
or
movsb
sub
daa
insl
add
mov
lret
jmp
or
rcrl
inc
aas
mov
mov
push
fs
mov
hlt
xchg
fwait
fstps
aad
enter
call
push
mov
jae
push
push
shl
pop
xchg
out
dec
idivl
out
or
ljmp
in
repnz
orb
and
bound
dec
roll
popa
push
iret
or
clc
sbb
jo
nop
mov
cmp
jmp
fldenv
or
jmp
mov
or
pusha
mov
loope
ljmp
pop
test
sti
or
or
lds
popf
and
inc
mov
add
pop
je
outsb
mov
movsb
repz
loope
push
notl
mov
xchg
jl
daa
and
lods
aaa
lods
loopne
lock
inc
test
jp
fldt
mov
mov
xchg
ss
mov
repz
cmp
add
push
enter
sub
bound
mov
and
add
aam
push
sbb
xchg
xlat
arpl
mov
push
add
adc
dec
xchg
push
repz
mov
das
mov
adc
jno
mov
or
xchg
pop
pop
lahf
repnz
rcll
rcll
xlat
call
sub
and
inc
sub
xor
insb
popf
mov
push
dec
js
pop
inc
add
push
sub
add
popf
imul
repnz
jno
sti
push
js
mov
xchg
fcmovne
div
jb
mov
out
or
popf
adc
sub
sub
xorl
fiadds
mov
adc
xor
mov
inc
in
notl
push
daa
std
hlt
adc
or
add
push
cmp
in
mov
setp
jl
sarl
scas
mov
fldt
outsl
adc
mov
outsl
es
and
adc
dec
outsb
loop
cmp
cmp
push
pop
into
pop
ljmp
cmp
jb
cltd
faddp
icebp
hlt
lret
inc
call
je
lea
fisttpll
mov
fisubrl
cld
data16
lods
cmp
pop
loope
das
mov
mov
adc
fisttpl
jge
xchg
ljmp
xchg
movsl
dec
ss
push
or
mov
push
out
sub
je
add
ljmp
hlt
inc
fldt
fsubl
popf
fsub
mov
out
cli
insl
stos
sub
std
dec
and
data16
sbb
jae
sbb
cmp
rcll
imul
mov
stos
loop
xchg
push
loop
xchg
add
in
and
jae
inc
push
mov
xor
movsl
mov
push
xor
iret
mov
jmp
in
mov
mov
outsb
sbb
aas
sbb
jecxz
sti
inc
clc
mov
daa
nop
pop
mov
push
dec
inc
es
adc
mov
or
out
xchg
lret
cld
cld
loop
rclb
pop
xchg
jle
or
xorb
stos
xchg
add
out
mov
je
call
dec
loopne
jp
xchg
mov
out
mov
jle
mov
jb
and
cmp
mov
and
pop
xchg
daa
test
and
sbb
orl
ret
push
setl
mov
lock
decl
je
add
push
ja
xchg
or
test
adc
dec
adc
pop
dec
and
add
arpl
int
sarb
sub
xor
fildll
vmwrite
or
cltd
clc
test
adc
not
cmp
mov
addr16
pushf
cs
stos
into
pop
jno
or
mov
mov
out
movsb
inc
dec
cmp
mov
xchg
lods
xchg
in
fwait
add
cli
cltd
mov
sti
stos
sbb
mov
pop
ss
fidivrs
pop
cld
pusha
cwtl
sbb
xlat
xchg
notl
mov
or
stos
fwait
mov
jmp
lods
iret
push
mov
ja
adc
inc
and
in
cs
adc
inc
push
pop
fs
cmp
sbb
add
ja
aaa
inc
add
xchg
jb
adc
ret
stc
inc
push
cs
xchg
jge
sub
push
push
and
dec
jl
jl
pop
add
xor
inc
data16
mov
out
adc
sbb
aas
lret
dec
test
jo
cli
inc
daa
out
and
loopne
ss
push
das
test
ja
pop
enter
push
shrb
or
pop
flds
xchg
ret
out
adc
int3
shll
xor
daa
fisubrs
dec
mov
mov
cmpsb
adc
xchg
mov
xchg
adc
repz
mov
fisubrs
sub
mov
aas
xchg
push
shrb
cmp
nop
sub
data16
std
mov
fwait
in
xor
out
xor
dec
cwtl
popa
stos
push
cvtps2pd
mov
add
idiv
ret
xlat
dec
mov
or
or
pushf
cmp
fs
push
clc
xchg
jl
sbb
imul
push
das
mov
cmc
mov
cmp
inc
repz
imul
sbb
adc
je
cmp
std
fnsave
dec
ret
leave
loopne
xchg
lock
add
sbb
pop
test
push
lock
out
outsl
jnp
sbb
aam
in
fsubl
int
pop
test
mov
aaa
js
and
les
repnz
icebp
cmp
add
clc
mov
loop
xchg
cmpsl
mov
sub
lea
xchg
push
or
enter
push
fadd
add
fstpt
dec
test
push
and
sub
repz
fisubrs
fwait
xchg
jge
lock
jbe
push
adc
jne
jp
pop
inc
dec
pop
push
pop
mov
das
jge
mov
xor
pop
gs
jmp
mov
jnp
sub
fs
jbe
aas
scas
add
add
inc
xchg
pop
xor
inc
pop
in
std
std
iret
cmp
push
pop
out
pop
xchg
lods
mov
lods
testb
repz
xchg
dec
andb
push
jbe
movsl
movb
jg
add
jo
jle
jg
cmc
mov
jg
sub
mov
loopne
je
shlb
mulb
pop
fisubrs
insb
adc
sar
push
clc
lret
out
test
sub
adc
xchg
sbb
mov
sub
into
jo
lods
les
lock
inc
pop
mov
fwait
mov
xor
xlat
outsl
mov
push
adc
xchg
sbb
mov
add
xchg
inc
mov
lahf
add
test
lods
data16
inc
enter
gs
ret
jae
daa
loopne
dec
adc
cmc
icebp
sbb
mov
mov
ja
add
stos
mov
fsubp
sbb
jge
outsl
xor
mov
jle
imul
xor
jg
cld
sbb
out
cli
dec
mov
out
addr16
push
mov
fistps
push
push
mov
sbb
dec
loope
push
rcr
aaa
das
mov
or
adc
clc
pop
mov
pusha
mov
and
push
adc
xor
scas
jno
xchg
mov
nop
pop
cmp
add
sbb
ljmp
push
outsb
out
rorb
and
aaa
push
jnp
sbb
mov
sbb
push
test
jecxz
adc
mov
sti
ja
fists
mov
test
push
or
cmpb
and
inc
and
jb
lret
mov
sub
jge
cmpsl
mov
inc
cmp
mov
dec
lds
mov
cwtl
push
push
frstor
and
in
xchg
cli
pop
test
outsl
and
popa
push
mov
mov
ss
lahf
sti
orb
stos
adc
std
sbb
sbb
notb
push
push
sbb
mov
das
leave
clc
cld
dec
ljmp
dec
and
push
dec
xchg
out
sub
cli
in
inc
clc
adc
pop
addr16
fisttpl
movsl
cmpsb
insl
in
sahf
mov
push
jmp
clc
movsl
mov
xchg
mov
jg
sub
test
or
jp
ljmp
mov
fcoms
je
lods
and
sbb
and
mov
dec
addb
inc
shlb
and
sbb
mov
jns
ja
fistpl
adc
insl
clc
in
push
loop
push
in
pop
fldl
in
push
inc
int
bound
sub
stos
rcrl
sti
fcoms
out
mov
mov
jae
cmp
in
roll
mov
pop
push
movsl
push
xchg
add
pop
subb
sub
adc
test
jnp
xorb
inc
jge
arpl
cmc
add
pop
xchg
or
cld
in
test
sub
sub
das
jle
mov
xor
jne
popf
adc
clc
les
rclb
scas
jl
mov
pop
aaa
in
xchg
sti
scas
cmp
jns
pop
repz
mov
and
loop
or
cmp
rorb
add
popa
push
or
dec
sub
dec
xor
cmp
ljmp
push
clc
loop
mulps
hlt
pop
jo
sub
xchg
sbb
fidivs
inc
fistpl
insl
rcll
pop
jge
ja
dec
mov
or
mov
shl
cwtl
cmp
insl
push
sbb
mov
cli
sbb
or
mov
mov
add
je
cs
bnd
pop
movsb
mov
jb
xor
scas
cmp
push
push
xchg
scas
jne
pop
dec
cmp
cld
fucompp
jge
pusha
add
pop
aas
add
dec
lcall
and
mov
sti
sub
xor
inc
inc
push
in
push
inc
sub
test
aad
sub
xchg
sti
cmp
hlt
push
mov
push
hlt
outsl
add
cmp
lret
push
mov
inc
imul
outsl
scas
jl
cwtl
test
push
jb
dec
adc
insl
jae
push
dec
jbe
pop
ljmp
in
in
dec
imulb
and
mov
jbe
and
push
insb
or
or
xchg
adc
aad
pop
aaa
dec
ret
pop
js
mov
ja
outsb
inc
testb
shlb
lods
sbb
js
jecxz
cmpl
idivb
push
sub
and
loopne
sub
mov
jo
mov
aam
aad
movsb
popf
test
pop
pop
mov
ljmp
cmp
sbb
jns
andb
jb
loopne
pop
push
push
imul
adc
and
cmp
clc
jecxz
push
adc
push
sbb
push
aaa
jg
addb
jbe
movsl
out
test
loopne
cmovo
mov
sub
adc
jl
out
and
pop
push
sbb
shlb
add
imul
mov
std
in
add
xor
xor
jnp
subl
jg
cli
cmpsl
pusha
call
inc
movb
cmpsb
sahf
lods
adc
sub
cli
or
pop
mov
cwtl
wbinvd
add
pushf
jle
and
fadd
pop
pop
sub
sbbb
loopne
arpl
xchg
outsb
mov
cld
mov
divl
jns
jl,pn
fisubrl
or
fnstcw
cmp
sti
dec
bound
inc
mov
sub
xchg
mov
cmc
pop
sahf
jbe
fs
lods
or
out
jl
shll
push
mov
jb
mov
xacquire
jno
dec
mov
or
sbb
push
aas
xor
cmp
and
fistpll
cmp
mov
xchg
jg
ljmp
push
ja
push
and
lods
mov
dec
mov
aaa
or
test
dec
rclb
push
push
lahf
push
adc
adc
push
movl
xor
lret
inc
stos
sbb
scas
bound
lock
push
aas
and
push
push
test
daa
adcb
push
jl
cmp
aas
shll
cmpsl
ds
shlb
add
stos
lea
mov
dec
shll
lods
jg
sbb
int3
jl
pop
jge
pop
jno
dec
jg
and
push
add
lea
jnp
inc
es
leave
fs
in
sbb
cli
sahf
and
jge
outsl
sbb
mov
test
or
imul
cmp
std
cmp
add
addr16
mov
dec
xchg
filds
outsb
fwait
jo
jge
dec
imul
iret
xor
shrb
xor
sbb
cmp
mov
out
mov
out
xor
repnz
lods
adc
mov
jns
test
ss
xchg
jle
push
jb
fs
push
repnz
pop
mov
loop
push
inc
lahf
rcl
lods
push
ds
pop
pop
dec
mov
pop
jg
mov
push
mov
cwtl
inc
jmp
xlat
and
jl
inc
aam
adc
sub
faddp
bound
cmp
mull
icebp
in
shlb
lret
push
dec
pop
mov
xchg
adc
subl
ss
stc
test
in
pushf
popa
dec
orl
adc
aam
add
movsb
sub
inc
pop
and
insl
mov
cli
sbb
jle
pushf
sbb
clc
ja
jge
jb
repnz
pop
lret
enter
sub
xchg
aad
xlat
pcmpgtb
cmp
fidivl
push
and
call
and
lds
or
stos
pop
hlt
testb
imul
adc
push
xor
push
cmc
jp
mov
jae
cmp
inc
adc
outsl
imul
ficomps
outsb
das
or
cmp
xchg
mov
push
pushf
adc
jb,pt
fldt
repz
sub
or
jmp
test
sub
shl
sbb
shll
pop
lahf
jo
aaa
push
push
mov
pop
or
in
push
jbe
jbe
cmpsb
ret
rcll
lcall
sub
sub
adc
pop
gs
je
pop
dec
je
or
scas
jae
ret
lods
jmp
stos
mov
sti
jnp
daa
repnz
sub
inc
rolb
lods
inc
scas
cld
dec
sbb
jns
sbb
imul
pop
or
push
cmp
lock
nop
mov
mov
pusha
xorl
or
adcl
xchg
mov
jo
lret
imul
adc
icebp
xchg
sub
mov
mov
add
xor
out
and
dec
jge
xlat
jp
pushf
popf
inc
inc
fistl
jbe
int3
addr16
movsb
or
shr
xor
les
dec
mov
pop
lds
push
push
movsl
or
or
pop
dec
sub
or
inc
cmp
inc
cs
jg
sti
je
pusha
mov
cltd
icebp
mov
frstor
mov
addb
sub
divl
and
pop
mov
dec
sbb
mov
push
xlat
jl
mov
je
add
mov
sti
lods
sub
add
add
lods
jmp
xchg
mov
in
push
addr16
loop
icebp
ljmp
cs
sub
and
sub
insb
mov
add
sarl
xchg
je
mov
dec
loope
out
or
xor
xchg
test
and
leave
stos
mov
jb
sub
and
je
aaa
imul
jno
jmp
loop
leave
popa
dec
dec
xchg
jne
loopne
sarl
test
mov
jecxz
repnz
arpl
fdivl
dec
sub
xchg
push
mov
xchg
lods
dec
push
push
mov
jge
mov
inc
enter
push
push
jmp
jo
sbb
push
leave
or
push
shl
jnp
fdiv
and
mov
mov
sbb
mov
popa
pop
inc
mov
sarl
fimull
cli
mov
xchg
pop
dec
or
mov
inc
out
negl
push
ret
addr16
mov
sbb
ja
clc
jg
sbb
imul
in
cmp
stos
and
inc
sbb
jns
lods
ss
inc
lea
int3
bnd
and
into
adc
sahf
mov
or
sub
sbb
mul
repnz
lods
push
clc
lock
dec
xor
loope
push
mov
es
mov
daa
xor
lods
push
stos
call
and
xor
out
leave
cld
mov
lcall
and
sahf
jp
pop
jno
sti
add
ror
mov
inc
mov
cmpsl
pushf
fbld
clc
into
inc
pop
movsl
stos
mov
push
hlt
lcall
dec
push
pop
lds
repnz
and
sahf
arpl
sub
sbb
popa
fs
shr
insb
mov
stos
jl
sbb
decb
pop
jnp
mov
sbb
push
fwait
leave
inc
xorb
jmp
sub
ds
cmp
data16
js
loope
dec
or
mov
into
inc
sub
shld
fisubrs
inc
fidivrl
sti
cli
mov
inc
jle
cld
sub
and
mov
push
addr16
inc
cmpsb
inc
popf
cmpsb
sbb
mov
push
sbb
sbb
dec
fdivrs
das
movsl
aas
or
add
and
sub
setnp
sbb
mov
jmp
mov
test
cli
leave
loopne
cmp
push
rcl
fstp
fcompl
imul
cmpsl
arpl
shrl
into
dec
or
js,pt
dec
mov
and
stos
mov
push
mov
mov
dec
lret
dec
call
fnsave
adc
add
stos
inc
in
mov
stc
lcall
lods
xor
sub
pop
dec
push
and
push
sbbb
xchg
data16
push
push
pop
cmpsl
fbld
idivl
arpl
movsl
add
jo
cmc
dec
jno
fs
lahf
inc
lods
or
popa
adc
xor
xchg
out
jg
push
push
pushf
aas
decl
dec
or
mov
mov
and
adc
lods
jl
cmp
push
aas
and
mov
fs
fsubs
lcall
cmpl
ret
mov
or
je
xorl
mov
lods
push
mov
movsb
aas
mov
dec
sub
pop
mov
adc
stos
sub
fwait
dec
adc
jne
iret
sbb
popa
in
jbe
jbe
jb
sbb
mov
int
or
push
ret
mov
mov
inc
or
cmp
sub
fidivrs
subb
sbb
inc
lcall
jge
push
sbb
enter
test
pop
aad
push
sbb
mov
or
pusha
push
push
cmp
imul
sub
insb
iret
or
orl
sub
ror
jge
push
call
stos
stos
jno
mov
call
clc
jb
imul
negl
dec
pop
std
flds
cmc
push
dec
push
je
jbe
daa
das
xchg
je
jl
std
int
sub
mov
adc
call
imul
jns
cli
enter
hlt
sbb
mov
adc
mov
inc
in
mov
inc
mov
enter
subl
cmp
jb
inc
pop
dec
jl
pusha
fdivrs
sub
pop
sti
xchg
adc
sbb
aaa
loopne
and
jne
sub
dec
push
outsb
cs
outsb
fdivrs
dec
dec
dec
xor
or
dec
cs
jne
pop
sub
fwait
sahf
stc
inc
jo
and
xor
std
inc
and
mov
jbe
jns
inc
mov
dec
inc
jb
sbb
aaa
lret
pusha
cwtl
cld
cmp
mov
xlat
cmp
lret
ret
das
mov
inc
inc
add
cwtl
or
int
xor
out
mov
push
mov
fidivs
push
sub
mov
jbe
mov
outsb
loopne
add
hlt
jne
scas
repnz
and
es
xor
add
test
dec
sbb
hlt
popf
cmp
dec
ja
and
or
imul
jecxz
dec
sub
sbb
clc
mov
mov
adc
lods
scas
outsb
add
sub
movsl
les
xchg
cltd
dec
in
push
int
cmp
or
imul
ljmp
cmp
psubusb
daa
pop
cmp
or
mov
xchg
sub
in
addr16
sub
es
and
mov
mov
movsb
cmp
mov
fsubr
rcll
popf
subb
mov
or
adc
popa
shll
adc
das
sub
mov
js
lods
pop
cmp
xchg
pop
cmc
dec
ret
sub
add
push
pop
test
sbb
jns
or
add
call
pop
int3
iret
push
ret
adc
ret
pop
addr16
jae
inc
cmc
inc
pop
xor
pushf
jne
imul
push
addb
inc
rcll
add
inc
stos
nop
leave
pop
jl
ss
and
pop
push
out
pop
ja
mov
outsb
out
and
rcr
nop
mov
in
std
sbb
adc
cmp
push
xchg
cmpsl
jns
push
cmc
sbb
aad
enter
or
es
repz
mov
jle
mov
xor
arpl
pop
cmp
push
scas
lds
or
cmp
jns
or
add
mov
nop
nop
ljmp
xchg
rcll
cmp
xchg
cmp
out
mov
enter
mov
test
in
mov
je
daa
daa
arpl
lcall
push
mov
push
pusha
out
into
fstl
not
outsb
je
jb
ret
xlat
jns
fiaddl
rcrb
nop
sub
adc
lods
call
int
cwtl
test
push
or
rol
cmp
jbe
xor
push
dec
lret
call
imull
shll
push
sub
cmp
lcall
int3
inc
in
xchg
jbe
in
mov
in
das
mov
sub
cmp
std
arpl
jmp
shrl
stos
sub
cmpsl
enter
add
xor
fistl
xchg
pop
sarl
les
test
and
shll
and
sub
mov
lahf
and
movsb
cmp
or
jns
pop
imul
dec
mov
rcr
cli
leave
adc
pushf
enter
shrb
pop
call
repnz
lods
ljmp
lock
xchg
or
ljmp
pop
cmp
mov
or
movsb
sub
sub
jb
dec
outsb
test
cmp
sub
sub
or
cmp
popa
add
lret
mov
adc
rcrl
xlat
fsub
enter
and
or
mov
push
lods
imul
cmp
and
mov
imul
cmp
ds
into
or
push
mov
or
in
or
ja
adc
negl
rol
sbbb
jae
aam
jb
gs
dec
sub
xchg
ja
jmp
je
sahf
repnz
adc
sub
push
and
call
push
mov
add
test
mov
leave
pop
cmp
push
aas
push
mov
jle
stc
icebp
jns
add
notb
lret
cs
adc
lods
iret
std
imul
adc
mov
popl
fcoms
fs
mov
shr
pop
xor
cli
pop
sarl
fwait
fs
xor
cmpsl
inc
cs
jae
cmp
ljmp
lahf
jb
pop
mov
iret
sbb
jecxz
xor
sub
or
jg
scas
lret
and
call
cmc
cmp
push
mov
inc
sub
mov
mov
sbb
pop
dec
inc
test
xchg
sub
jae
outsb
je
jae
lods
flds
jl
jmp
inc
dec
ret
pop
sbb
cmp
stos
jo
mov
rcl
jns
sbb
aaa
xchg
jbe
mov
nop
pop
insb
push
jnp
imul
fsub
rclb
call
stos
push
imul
sbb
cmp
scas
adc
inc
sub
loopne
cmpl
out
pop
lcall
outsl
das
cmpsl
cmp
and
xorl
sub
pop
inc
or
sub
mov
xor
pop
and
xchg
out
cld
jg
cmpsb
fs
mov
out
enter
xor
sti
xchg
cmp
pop
add
push
sbb
sub
inc
sbb
mov
mov
add
repnz
inc
or
ret
and
sbb
lcall
mov
adcl
les
mov
pop
ljmp
cmp
jno
cmp
fsubl
xchg
add
pop
adc
or
mov
mov
xchg
add
jmp
or
rcrl
jmp
out
jno
leave
into
ror
iret
push
mov
jecxz
movsb
aad
push
inc
dec
lahf
pop
cmp
mov
arpl
cmpsb
stos
aam
out
mov
movsl
sub
stos
dec
arpl
shrl
hlt
cmp
mov
int3
les
lods
aam
cmp
adc
and
pop
hlt
and
loope
jo
icebp
cmp
push
or
into
push
push
push
mov
sub
xor
push
shlb
fucomip
aam
xor
push
pushf
xor
dec
xchg
popa
adc
mov
aam
xchg
fwait
cmpsl
test
mov
movsb
js
sbb
mov
loop
cmpsl
jp
add
and
push
orl
push
dec
ret
ficoml
rol
popf
out
mov
pop
xchg
mov
mov
dec
rcl
lret
pop
or
sbb
fwait
daa
pop
inc
dec
dec
data16
imul
push
lods
data16
push
adc
lea
sbb
sub
hlt
inc
jne
push
push
ja
dec
movb
adc
pop
dec
sub
sub
or
push
mov
cltd
mov
adc
vpsrad
clc
out
fs
rorb
cmp
sbb
std
mov
test
inc
cmp
inc
out
pop
ds
sbb
or
shlb
ja
sub
sub
sbb
shrb
mov
ret
sub
sub
cltd
add
and
xchg
xchg
dec
mov
in
fwait
adc
pop
arpl
pop
or
lods
in
jl
pop
scas
cmp
push
xchg
dec
dec
rcrb
mov
xlat
loopne
add
and
and
loopne
aas
sbb
sbb
mov
loopne
adc
pop
adcl
lds
test
iret
ret
popa
arpl
cmp
push
jp
stc
mov
sar
dec
pushf
mov
insl
cltd
mov
shll
or
push
scas
adc
xor
nop
cld
arpl
cmpsl
mov
outsl
push
cli
dec
aad
xchg
fiadds
loopne
movsl
enter
insl
nop
sbb
jge
ja
pop
push
pop
mov
sbb
cmp
clc
int3
inc
xor
stos
mov
lds
xor
cltd
and
push
push
fldl
mov
and
mov
xchg
mov
scas
icebp
inc
lock
xor
fwait
scas
sbb
enter
sub
pop
sub
jmp
xor
jle
xor
sbb
adc
cli
dec
inc
repz
mov
or
icebp
add
adc
mov
mov
and
test
pop
int
push
jmp
lcall
mov
daa
in
repnz
xor
std
leave
popa
fsubs
inc
icebp
add
out
sub
xor
adc
sbb
sub
movd
add
rcll
data16
jne
adc
stc
pop
xor
imul
sub
and
out
leave
dec
jp
mov
push
inc
add
jg
jo
xor
and
dec
shrb
cmc
dec
xor
jmp
movsb
roll
icebp
aam
rorl
mov
mov
cmp
out
addr16
iret
mov
and
jb
gs
enter
cld
lcall
mov
daa
adc
mov
imull
lds
dec
lcall
cmp
dec
push
stos
push
subb
out
subb
mov
fsubs
loopne
or
mov
popa
negl
xlat
sub
stos
mov
test
jb
xchg
insb
dec
rcrl
ds
jp
test
int3
movsb
xchg
popf
adc
cmp
xchg
pushf
ret
add
push
ss
dec
mov
mov
divb
sbb
loop
mov
lea
adc
mov
push
sbb
add
icebp
dec
ret
push
push
push
sub
xor
xor
jo
fwait
jecxz
jp
aam
sbb
push
inc
stos
sbb
cwtl
inc
insl
fidivl
test
lret
ret
push
out
lahf
leave
push
fidivrs
and
ds
mov
fildl
push
cmp
add
sub
push
pop
arpl
adc
or
pusha
or
cmp
mov
shll
les
mov
xchg
int3
xchg
push
lret
insl
outsb
nop
jecxz
mov
jmp
jmp
fld1
push
pushf
push
cwtl
xor
adc
adc
xchg
repz
mov
repz
xor
mov
cltd
mov
movsl
mov
push
and
daa
iret
repz
test
cwtl
pop
pop
push
fstps
xor
leave
into
test
lds
fisubs
sbb
jmp
arpl
add
pop
imul
je
pop
gs
jle
aam
fwait
push
mov
jns
push
jne
sbb
gs
cmp
and
dec
mov
add
inc
mov
ficoms
push
dec
jbe
or
fdivp
add
push
aaa
subb
adc
sbb
mov
ficompl
xor
sbb
pushf
mov
adc
push
ja
or
iret
out
jb
fcompl
insl
dec
test
fs
xor
mov
add
jo
inc
mull
leave
fcompl
adc
sbb
incb
pop
mov
and
mov
sub
mov
es
mov
sub
sbb
imul
jp
mov
mov
dec
push
push
pop
lods
jg
sbb
and
in
sub
cmpsb
insb
and
rorl
xchg
fildll
jae
pop
aas
push
ror
mov
pushf
jo
push
mov
mov
jecxz
jb
sbb
pusha
dec
adc
je
sub
pop
enter
or
leave
add
pop
xor
out
std
jne
cltd
bound
mov
push
inc
ds
insb
push
andb
dec
scas
and
pop
nop
or
js
stc
jmp
or
mov
test
ja
fcoms
popa
loope
push
push
out
test
outsl
sub
inc
push
sub
or
into
mov
ficoml
jmp
xlat
adc
push
inc
out
test
mov
cmp
hlt
jae
insl
add
inc
pusha
ficoms
in
fimuls
jbe
mov
mov
orb
daa
ds
pop
dec
sahf
lcall
pop
fdivl
mov
xor
xlat
sbb
push
les
lahf
enter
pop
cmp
in
adc
leave
nop
cld
xchg
addl
inc
adc
test
pop
test
cwtl
aaa
or
xor
pop
repnz
xchg
or
mov
mov
mov
mov
pusha
cwtl
xor
cmp
test
xlat
lea
sub
dec
enter
mov
arpl
lret
pop
call
js
pop
jle
cmp
xchg
mov
xchg
sbb
or
push
pop
mov
adc
jg
push
adc
scas
stos
jle
int3
loopne
add
mov
lcall
sub
push
stc
mov
jns
daa
pop
sub
push
ret
push
mov
fadd
adc
sbb
dec
cmovno
xlat
cmpsl
arpl
xlat
mov
es
fsubr
jge
and
push
shlb
out
fwait
mov
adc
adc
push
nop
in
inc
jb
in
lods
lcall
dec
fwait
lods
push
push
int
push
cmc
xor
outsl
loope
ljmp
insb
sbb
jns
mov
lcall
or
jmp
push
icebp
test
sbb
inc
int3
iret
mov
pop
repz
roll
cwtl
xor
sti
mov
cs
test
ss
jp
mov
cwtl
movsb
mov
aaa
pushf
cld
sahf
sbb
loop
jne
jmp
cmpsb
or
js
push
int3
enter
mov
jmp
scas
pop
inc
or
inc
adc
adc
xor
mov
loopne
jp
mov
xchg
jns
sub
test
andb
dec
mov
adc
push
pop
ss
lcall
lds
dec
pop
js
pop
jle
inc
adc
and
inc
aad
add
push
sbb
cmp
add
sub
cmpsl
or
ret
xor
iret
push
sub
jl
dec
and
mov
insl
sbb
fmuls
xor
loop
pusha
pop
cmp
je
loop
fiaddl
jnp
pop
imull
jge
mov
inc
mov
xchg
scas
pop
jns
jne
aas
in
call
out
pop
imul
cmp
shll
divl
int3
pop
mov
sti
imul
sbb
mov
or
lock
cmp
jg
repnz
mov
mov
add
mov
es
xchg
pop
into
loop
adcb
and
leave
add
mov
and
rorb
pushf
fistpll
mov
popf
jno
dec
pop
rcl
leave
push
inc
xor
sub
sbb
ficomps
push
lea
pop
pop
loope
and
dec
or
inc
push
outsl
xor
addb
jle
js
inc
jp
and
stc
or
push
pop
ss
cwtl
popa
inc
sub
add
lahf
jg
xchg
inc
mov
fwait
and
mov
in
sbb
mov
incl
idivl
pop
ret
xchg
and
dec
idivb
adc
les
jge
rcrl
int3
jb
testb
popa
jp
pop
les
sbb
stc
push
and
dec
jmp
xchg
push
test
and
std
xchg
aam
adc
incl
cmp
push
addb
jae
push
pop
pop
ret
mov
jge
sub
cwtl
xor
cmpsb
mov
xorl
ja
sub
xor
insb
lods
adc
jmp
pusha
mov
mov
sub
aaa
add
lcall
lcall
sbb
mov
add
lds
imul
mov
mov
jno
das
push
dec
and
imul
xor
push
sarl
cmp
scas
call
imul
dec
add
popf
pop
lret
sbb
mov
lcall
subb
es
icebp
mov
xchg
jl
rolb
gs
mov
and
pusha
mov
cmpsl
mov
in
ficoms
adc
inc
rorb
or
pop
out
and
lock
es
dec
int
loope
mov
and
push
sbb
pop
push
clc
push
xchg
pushf
xchg
lods
pop
out
push
xor
mov
cmp
mov
shll
jmp
test
sar
or
sbb
cmp
sub
imul
loope
ja
das
cmpsl
sahf
adc
push
jle
cmp
xchg
sbb
jmp
jle
rclb
cmp
and
add
enter
shll
cmp
rol
cmpsl
repz
cli
mov
cmp
in
xor
movsb
lahf
sahf
xor
lret
ds
pop
and
int
lea
adc
jbe
mov
nopl
je
push
push
pop
xchg
fimuls
lcall
jnp
scas
jecxz
push
push
mov
or
mov
clc
pop
lahf
sub
lcall
xchg
bound
aas
inc
add
ljmp
xchg
mov
inc
adc
sbb
adc
in
in
xchg
lcall
push
cmpsl
std
cmp
scas
xchg
sub
push
in
clc
adc
fstps
add
lahf
jp
or
dec
and
insl
idiv
cmp
dec
bnd
mov
test
cmpsb
add
stos
and
push
or
mov
add
mov
sub
cmp
mov
dec
popf
test
stos
sarb
push
pop
sub
dec
xchg
cli
adc
clc
lods
sti
and
push
mov
aam
subb
test
icebp
ret
outsl
jne
int
lea
adc
hlt
jmp
jno
pop
out
dec
jnp
imul
std
inc
mov
jge
push
jbe
mov
xor
sub
xlat
loop
les
lock
pop
aaa
or
dec
sub
add
dec
or
je
enter
shr
xchg
add
repnz
iret
das
icebp
dec
jno
cmp
out
sub
arpl
xor
mov
inc
clc
mov
adc
pop
pop
sbb
js
pop
or
lgs
scas
call
sti
aam
push
inc
or
data16
push
adcl
xor
cld
sub
lds
rorl
mov
aas
cwtl
mov
add
leave
lret
pop
lret
cmp
xor
nop
sbb
xor
fisubrs
pop
movsl
icebp
adc
call
rcr
int3
pop
pop
ja
push
dec
cmp
outsl
jl
jae
push
push
push
push
adcl
jmp
jne
fs
lock
sbbl
test
and
jbe
jbe
xor
stos
rorl
inc
test
jne
enter
push
loop
ret
in
subl
sbb
xchg
jp
add
mov
mov
mov
aas
inc
ja
cmp
test
cmp
inc
je
ret
push
fnstsw
cwtl
pushf
sbb
ficoml
outsb
cwtl
xor
jbe
rolb
enter
and
call
xchg
sbb
mov
clc
and
and
test
test
adc
xchg
stos
lods
adc
or
ja
sbb
std
aad
cmp
cmpsb
sub
int
cwtl
cmpsb
out
cld
negb
cmc
cmp
xor
add
push
outsl
jbe
jb
clc
cmpsb
les
cmp
loope
hlt
cmp
scas
mov
and
mov
jmp
pop
and
mov
push
inc
in
cmp
out
addl
inc
sub
sub
cmc
pop
dec
je
sub
sub
jp
xchg
cld
pushf
call
dec
push
cmp
xchg
mov
add
cmp
loopne
jle
dec
nop
mov
stos
and
pop
xorl
mov
lahf
dec
push
mov
mov
jae
sub
int
test
cli
aad
lods
sbb
inc
pop
ljmp
repz
imul
add
popf
dec
shrl
fidivs
movsb
loope
call
push
fs
xor
jmp
fwait
add
add
push
loop
cmp
cmp
pusha
adcb
pusha
cmp
pop
adc
push
cmpsb
repnz
std
mov
jg
clc
mov
stos
and
imull
outsb
clc
sub
icebp
xchg
idivl
mov
cmp
sbb
cmp
addr16
es
inc
insl
daa
jo
pop
adc
std
adc
lock
mov
cmp
xor
mov
sbb
sti
xchg
pop
or
xchg
lret
jl
sub
sbb
faddl
cmc
inc
scas
mov
adcb
addb
sub
cs
dec
add
mov
or
test
es
jae
dec
lds
or
movsl
xor
sti
call
and
mov
dec
xchg
inc
adc
add
je
dec
mov
xchg
fwait
jns
ret
or
jmp
xchg
pop
cmp
sbb
fsubl
adc
imul
xor
andl
xchg
cmpsb
push
jge
in
push
test
pop
cltd
xor
das
mov
lcall
pop
sub
sbb
xorb
je
push
jmp
xchg
stc
cmp
xor
jl
enter
mov
jl
push
jno
pop
inc
imul
mov
je
mov
insb
dec
mov
xor
jecxz
jmp
rcr
cmp
xor
sti
inc
inc
dec
ds
pop
and
fbld
xor
cmc
icebp
cltd
repz
mov
gs
push
fsubs
pop
lret
xchg
jbe
lock
pop
xchg
nop
mov
lcall
push
dec
push
mov
xor
cs
sahf
mov
jecxz
and
adc
lock
jl
add
fwait
in
dec
inc
xchg
lods
sbb
push
jno
cwtl
clc
shll
inc
leave
and
scas
and
pop
roll
jbe
mov
inc
mov
insl
push
add
adc
dec
outsb
loop
push
fadds
add
fwait
fs
mov
jmp
and
push
jae
in
inc
cmpsl
divb
sub
mov
pop
push
jne
fildl
sbb
xor
push
and
xchg
out
pusha
mov
mov
mov
lret
and
xor
int
adc
enter
pushl
andl
push
cld
sub
mov
adc
mov
mov
in
xchg
lds
xchg
rolb
add
xchg
stos
cmp
std
lahf
mov
adc
or
adc
mov
out
in
dec
das
mov
mov
scas
aad
or
loopne
pop
adc
test
lahf
aas
xor
fstpt
add
sbb
and
lock
and
pop
repz
cmp
add
ret
xchg
add
mov
or
addr16
xor
push
push
dec
cmc
mov
pop
adc
pop
adc
outsl
jbe
jb
adc
jnp
push
jnp
xchg
adc
daa
adc
or
mov
out
repz
test
xor
pop
daa
stc
push
sbbb
push
push
repnz
fstpl
in
insl
and
mov
aad
bound
pop
pop
mov
add
stc
sub
test
repnz
je
add
stos
andb
fiaddl
push
shll
test
push
sbb
jbe
jbe
push
push
push
cmp
fisubl
fsubrl
jae
aad
jb
insb
repz
movsb
jmp
stos
repnz
xchg
dec
outsl
mov
pushl
popa
and
jmp
adc
pop
stos
mov
imul
mov
mov
das
negb
xor
add
hlt
xor
xor
pop
jl
dec
cltd
or
popa
outsl
ljmp
xchg
xchg
fwait
pop
shlb
pop
mov
fwait
pop
mov
cltd
out
or
pop
pop
test
jns
add
push
out
sbb
call
std
mov
fstpl
sbb
inc
imul
int3
dec
sbb
cmp
xchg
mov
jmp
push
hlt
lods
outsl
add
aaa
pop
shlb
jne
mov
jo
xchg
pop
ja
js
or
aam
or
mov
sub
sub
jae
sar
imul
lds
inc
push
dec
loop
push
outsl
ret
dec
mov
repz
cmp
jp
inc
mov
push
and
mov
adc
lds
push
sbb
shll
loop
xchg
fcoms
adc
lods
lahf
pusha
cmpsl
stos
xor
sti
push
mov
sahf
dec
sub
fcoms
fxch
ret
je
aas
inc
das
adc
lods
adc
fwait
jnp
mov
dec
sbb
push
dec
push
mov
insb
dec
push
aam
shrl
and
pusha
sbb
lods
xchg
jecxz
dec
mov
repz
fs
outsb
xchg
scas
loop
mov
adc
push
sub
imul
int
cld
mov
repz
ficomps
mov
movsb
shll
mov
ret
adc
lock
sbb
xchg
mov
mov
jecxz
fcmovnb
repz
rcrb
or
pusha
repz
and
push
push
ret
push
adc
jmp
arpl
cmp
lahf
cmp
and
or
call
pusha
stos
cmp
movsb
and
or
into
xchg
filds
sub
dec
xor
mov
pop
insl
mov
aaa
mov
paddusw
jnp
popf
aam
mov
mov
jae
push
stc
xor
pop
aam
ds
mov
cld
pushf
jns
test
je
sarl
mov
pop
ficomps
xor
lret
pop
or
inc
and
mov
aad
jp
jne
aam
fistl
call
mov
mov
lret
stc
lret
shl
imul
sub
iret
mov
dec
sti
stc
push
in
xor
jb
mov
fbld
data16
in
inc
je
inc
mov
and
and
stos
sbb
aad
adc
jg
adcl
or
dec
cmc
pop
outsb
and
xchg
iret
pop
and
mov
jecxz
jnp
mov
add
imulb
bound
sub
jbe
fmul
call
jmp
and
xor
push
pop
adc
xchg
rcl
inc
xchg
push
pushf
mov
pop
test
adc
lret
mov
dec
dec
xor
inc
lea
hlt
mov
dec
hlt
xor
mov
pop
xor
repz
push
sbb
testl
shll
loopne
lret
adc
mov
int3
mov
and
out
mov
adc
or
mov
pop
pop
xchg
sbb
inc
push
push
ss
and
add
pop
outsl
and
pop
outsl
push
and
pop
mulb
sub
ret
insl
sbb
xchg
in
mov
cltd
imul
adc
push
imul
hlt
shll
mov
sbb
sahf
dec
mov
outsb
sub
sbb
bound
xor
xchg
imul
add
mov
aas
sub
aas
cld
dec
sbb
in
mov
test
cmp
lcall
inc
xor
cmpsl
cmc
pop
inc
rcrb
adc
ljmp
pop
mov
or
popf
daa
push
pusha
sbb
mov
clc
in
movhps
pop
jbe
in
cmp
outsb
mov
aam
aam
movsl
push
sub
test
lahf
call
clc
dec
sub
jb
xchg
xor
mov
fbld
and
repnz
push
xor
mov
scas
dec
cmp
ret
std
ret
popa
stos
dec
xor
stos
ds
jcxz
add
jb
lock
orl
push
push
xchg
xor
adc
test
fsubrl
push
pop
movsl
mov
test
adc
xchg
xchg
push
xor
mov
inc
pop
xor
xor
popa
jnp
jg
out
mov
out
aaa
and
and
ja
icebp
xchg
jae
gs
xor
addr16
cmp
xor
xor
add
aaa
daa
ljmp
scas
ret
mov
and
adc
sbb
or
cmp
icebp
adc
nop
add
and
push
mov
rorl
es
dec
fwait
mov
inc
inc
enter
push
inc
push
xlat
and
scas
jge
mov
outsb
mov
cli
es
adc
add
outsl
lods
or
mov
movsl
aad
iret
inc
das
pop
xchg
lds
add
add
push
imul
jecxz
add
or
sbb
mov
push
xchg
mov
pop
cmp
sub
in
push
xchg
repz
jg
xor
dec
xchg
mov
popf
cld
fidivl
inc
pop
pusha
mov
adc
call
loopne
int
xchg
shrl
or
lods
lret
cs
hlt
cwtl
movb
push
lea
es
mov
cld
mov
sti
cmova
jo
test
push
add
push
jo
cmc
dec
mov
out
xor
in
lods
xchg
ficoms
and
lock
sub
pop
sahf
push
mov
loopne
jge
inc
dec
jne
ret
sbb
xchg
test
dec
imul
inc
push
mov
adc
call
mov
out
add
jg
jo
add
ss
and
or
push
out
les
inc
sub
xchg
mov
adc
mov
mov
jl
clc
pop
inc
add
popa
sub
mov
mov
shr
cmp
pop
mov
movlps
add
xchg
jp
cwtl
xor
and
xchg
mov
out
and
ret
pop
and
adc
dec
inc
jbe
inc
icebp
pusha
mov
ja
adc
cmp
and
jbe
dec
xor
xchg
push
dec
std
adc
pusha
adc
push
push
inc
mov
or
xor
and
push
push
inc
inc
dec
js
jl
push
and
xor
push
adc
or
inc
push
pop
or
sub
xchg
in
nop
sub
mov
push
in
cmp
mov
mov
xchg
push
les
or
xchg
mov
mov
movsb
push
sub
cmp
gs
jl
xchg
pop
push
xor
cwtl
push
cmp
or
clc
mov
sub
lcall
fsubl
pop
jne
mov
and
push
adc
jge
or
fcoms
ror
or
push
test
insl
pop
pop
sub
pop
fadds
aam
cmp
popa
mov
outsl
shrb
cmp
mov
mov
imul
clc
inc
jmp
pop
sub
dec
inc
je
dec
and
ja
lods
or
pop
sub
push
and
and
cmp
js
sbb
mov
es
iret
mov
cltd
sub
sbb
enter
xor
mov
les
mov
js
or
xchg
mov
aas
and
rcrb
push
xlat
xchg
andb
and
cmp
xor
add
je
inc
scas
add
inc
imul
daa
sub
or
aaa
mov
js
sub
cmp
or
imul
adc
mov
aad
out
enter
pop
dec
or
adcl
cmp
jmp
xchg
mov
mov
and
bound
ljmp
shr
cmp
into
rcrl
test
cmp
bound
push
add
cmp
sbb
pushf
orb
sub
add
mov
push
push
imul
push
out
insb
mov
js
out
jb
push
rorb
imulb
stc
mov
sub
hlt
stos
test
inc
sub
mov
jne
pushl
je
enter
xchg
sbb
jge
or
popa
imul
sub
sbb
pop
sbb
xor
and
push
inc
adc
dec
aad
sub
add
cmp
cmp
hlt
and
sahf
jmp
cmp
or
xor
or
mov
rorb
or
fnsave
test
mov
or
cmpsb
test
or
xor
jo
dec
ret
stc
adc
fcomps
iret
add
xor
or
or
je
pop
repz
or
stc
add
or
inc
sbb
mov
hlt
cmp
fdivrp
leave
in
lea
int3
xchg
stc
push
sbb
sub
adc
ljmp
stc
mul
mov
and
movsl
bound
adc
jo
inc
mov
inc
stc
pusha
adc
mov
sbb
push
and
lds
push
jle
mov
cmp
sbb
imul
push
sbb
cmp
xor
or
and
orb
mov
or
sbb
shll
call
add
dec
pop
cmp
imul
jmp
mov
mov
jge
cltd
adc
mov
mov
mov
pop
sbb
xor
js
movsl
clc
pop
add
push
and
stos
pop
cmp
cmp
dec
dec
push
cmp
fnstsw
mov
js
decl
cli
dec
xchg
push
xor
xchg
xlat
add
dec
popa
fs
js
dec
test
out
jae
push
stc
dec
lahf
jae
sub
jns
and
call
or
div
aas
loopne
loope
xor
xor
cmp
inc
adc
dec
pop
xor
rorl
xchg
or
das
cs
mov
or
stc
adcl
push
jmp
mov
mov
pop
dec
or
fisttpll
pop
mov
movsl
or
mov
or
jb
hlt
js
repz
cmp
sub
or
sub
rorl
imul
mov
adc
adc
ret
push
add
push
and
lds
push
jle
clc
mov
add
add
sub
sahf
and
leave
push
inc
fimull
aad
out
push
lret
fstpl
pop
lahf
xor
mov
movsl
js
add
push
xchg
mov
dec
mov
stos
cmp
mov
push
mov
and
imul
mov
ja
push
adc
push
dec
loopew
and
lds
push
inc
adc
xchg
push
sub
mov
and
xchg
js
cmp
bound
and
js
lods
and
or
sub
cltd
sar
out
adc
add
and
lds
push
mov
les
mov
and
bound
lods
mov
sbb
aad
cli
and
movsl
push
inc
jbe
mov
or
dec
cmp
or
xor
push
sbb
dec
inc
mov
or
xor
pop
cmp
xchg
sub
or
sub
imul
sbb
and
xor
fstpt
and
xchg
cmp
cmp
or
xor
lods
or
mov
ret
aad
xchg
push
mov
sub
or
adc
pop
fistl
sub
jb
and
cmp
sub
dec
andb
xor
sub
adc
fs
sub
push
push
dec
sbb
or
jns
add
dec
mov
push
test
imul
or
stc
push
adc
fistl
sub
push
and
lds
push
mulb
sbb
movsl
lret
push
out
cmp
or
xor
lods
or
push
cmp
lret
ljmp
dec
cmp
or
xor
xchg
sbb
dec
orb
mov
js
repz
cmp
sub
or
sub
rorl
arpl
lods
mov
jns
xchg
in
pop
stos
or
and
je
imul
js
or
push
add
inc
dec
mov
and
dec
subl
or
sub
or
xor
lods
js
ret
dec
js
sbb
fnstsw
pop
mov
mov
add
mov
gs
push
hlt
push
pop
xchg
sbb
cmp
cmp
fildl
imul
or
stc
adc
lret
bound
loope
and
lds
push
jbe
add
cmp
xchg
stc
repnz
lret
xchg
mov
cmp
sarb
mov
out
ret
aaa
xchg
xchg
loope
and
lds
push
rclb
sahf
push
xchg
mov
mov
jle
out
clc
lods
push
push
outsb
inc
sub
sbb
xor
and
pop
dec
lods
cmp
ds
dec
dec
push
cmp
fnstsw
sysenter
sub
cmp
dec
push
mov
or
push
mov
push
and
and
inc
out
push
dec
sbb
or
insl
and
loop
add
pop
bound
lods
fdiv
stc
adc
scas
sbb
loope
and
lds
push
test
repz
imul
bound
lods
mov
lahf
cmp
or
scas
xor
and
push
jb
fs
daa
mov
xchg
xor
inc
aad
mov
je
push
mov
mov
mov
pop
inc
xchg
jne
mov
jp
in
sarb
and
add
pop
xor
push
sub
fstpt
sub
and
mov
fwait
adcb
fidivs
shlb
add
std
xchg
or
jmp
int3
cmp
inc
aas
outsl
psllq
jne
shlb
ret
or
fdivrp
pop
out
in
xchg
or
cmp
imul
pop
jno
and
adc
mov
pop
mov
sub
dec
adc
fwait
int3
add
xor
jae
inc
arpl
call
call
gs
dec
arpl
pop
add
pop
jge
movl
inc
xchg
mull
cmpsl
add
jno
sub
dec
nop
push
or
pop
sub
cmp
push
mov
push
sbb
rorl
lock
inc
sbb
jae
push
fcoms
push
pop
mov
jns
jbe
adc
cmp
and
jo
scas
or
cmc
data16
and
mov
or
xchg
cmp
adc
sahf
cld
outsb
ss
xor
je
pop
jge
mov
out
push
jbe
sti
stos
je
fldenv
daa
aam
sub
sub
adc
ret
adc
lea
call
je
jns
ficoml
sub
jp
jnp
lret
add
into
test
imul
pop
push
repz
fildll
mov
rcrl
aam
mov
je
pop
leave
mulb
or
shrb
add
scas
mov
cmp
xchg
dec
cmpsl
cmp
dec
xchg
cmp
lock
popa
jae
leave
nop
and
xor
pop
test
or
mov
das
or
in
sbb
les
push
push
or
adc
adc
mov
cld
mov
clc
pop
stos
and
lods
mov
notb
nop
add
cmp
sub
sub
in
imul
push
jmp
mov
dec
or
ss
push
dec
push
js
push
adc
rol
pop
out
ja
mov
mov
notb
cmp
cmp
and
lahf
popa
xor
enter
jmp
cmp
pop
icebp
mov
dec
gs
sub
push
sub
inc
or
sub
or
fimull
fcoms
mov
sub
outsb
pop
push
ja
cmp
std
movsl
ds
js
in
mov
shlb
movsl
inc
test
inc
mov
mov
jne
or
pusha
fwait
cld
mov
xor
les
js
stc
dec
test
les
inc
sbb
pop
jmp
xor
call
inc
or
rolb
add
pop
test
mov
les
outsl
xchg
inc
ficoml
mov
jmp
je
rclb
sysexit
sti
sub
addr16
adc
je
daa
push
or
sbb
push
jnp
cmpsl
scas
jmp
stc
or
xchg
cmpsl
jne
cmp
ljmp
or
clc
aam
aaa
sbb
mov
es
jnp
cs
inc
nop
inc
inc
jmp
dec
inc
adc
ds
sub
stc
cli
ds
out
rorb
cmp
push
adc
mov
aam
bound
hlt
cmp
adc
dec
in
stc
addr16
lret
inc
icebp
mov
cmp
test
lea
cs
pop
shlb
dec
movsb
je
dec
stc
test
mov
ret
cmp
xchg
pmulhw
jno
repz
aas
push
mov
mov
inc
frstor
ret
movsl
es
fwait
ret
cmpsl
add
or
ds
dec
lods
xor
mov
out
jno
rorb
add
adc
imul
movsl
outsl
add
cmp
mov
clc
lds
mov
push
adc
cmc
pop
sub
mov
sub
pop
das
fimuls
mov
jo
jl
test
inc
lret
je
rcrb
jg
jne
sahf
inc
jp
xor
bound
adc
add
pop
dec
add
mov
cmp
sbb
idivl
pop
hlt
in
sbb
js
push
out
js
out
loope
call
test
rclb
pop
iret
sbb
ret
daa
adc
cwtl
fcomi
mov
sbb
sub
jns
shll
subb
insl
xor
or
adc
std
movsb
sub
cs
mov
fldenv
dec
cld
jge
and
jl
jle
pop
add
movsb
push
sbbl
stos
shr
cmpsb
and
pop
xorb
or
xor
mov
bswap
inc
or
pop
sbb
repz
daa
stos
adc
into
mov
sbb
pop
test
add
push
movsb
cmp
loope
movsl
int
cld
mov
lahf
push
repz
push
int
shl
xor
mov
in
jb
push
dec
adcb
inc
and
push
pushf
mov
and
and
imul
jl
imul
inc
jb
adc
and
loop
xor
adc
inc
mov
jmp
jo
gs
push
arpl
in
mov
push
aas
xor
sbb
mov
and
sbbl
add
pop
test
inc
cmp
inc
call
mov
and
fsubs
idivb
add
repz
or
push
push
adc
pop
cmp
adc
dec
sbb
xor
push
leave
movsl
in
je
push
push
add
xchg
sbb
mov
push
xchg
fs
repz
dec
loope
and
call
adc
cmp
mov
test
test
jmp
inc
push
mov
imul
mov
lret
sti
repnz
jmp
pop
and
push
push
dec
bound
lods
xchg
push
bound
sbb
daa
or
or
bound
push
lods
and
out
stos
dec
xchg
aad
rcll
adc
inc
and
sbb
push
pop
bound
lods
jecxz
faddl
push
adc
popa
push
or
aaa
push
dec
mov
in
shrb
mov
add
call
pop
mov
mov
vpsubb
mov
mov
mov
sub
nop
sbb
add
aad
cmp
cltd
add
fisubl
xchg
in
sub
and
loop
lods
cmp
popa
add
jno
xor
push
fst
rolb
mov
sub
or
add
sbb
cmp
cld
jne
rcrl
vmovdqu
mov
xchg
mov
out
stc
ficoms
int
lcall
or
inc
push
or
bound
push
arpl
mov
or
mov
and
out
and
rcl
xor
pop
sbb
loop
jmp
cld
mov
adc
or
sub
push
and
pop
shrb
cmp
push
push
pushf
jg
icebp
mov
pop
and
pop
or
xor
pop
inc
je
popa
adc
push
add
add
or
xor
fs
fistpll
jmp
std
xchg
scas
es
xor
les
mov
aad
add
push
shlb
xor
mov
sub
add
xchg
es
push
or
dec
rol
jnp
dec
adc
imul
sahf
pop
fs
mov
push
aas
arpl
mov
inc
or
xor
fsubs
push
fstps
imul
inc
orl
daa
addr16
and
inc
push
popa
mov
mov
dec
nop
cmp
test
pop
in
inc
pminsw
or
es
xchg
insl
jo
mov
into
xlat
jae
cmp
bound
cwtl
inc
adc
sbb
test
ret
cwtl
and
lock
xchg
adcl
int
insl
sar
xchg
fnstsw
aad
arpl
aam
mov
lds
sbb
ret
sub
sbb
add
popf
adc
adc
add
adc
xor
inc
stos
adc
jns
cmpb
dec
adc
in
add
mov
and
dec
or
mov
test
je
testl
call
pmaxub
push
shll
sbb
stc
mov
and
ret
in
push
and
mov
pop
or
push
pop
cmp
add
push
mov
ds
movsb
sbb
jae
sbb
inc
and
cmp
mov
cmp
push
fcompl
roll
sub
gs
dec
bound
hlt
divl
stc
xor
aad
sbb
in
scas
xor
ds
insl
inc
lret
stos
jne
mov
xor
mov
cmp
jb
popa
sbb
add
cmpsb
jb
and
push
in
cmp
clc
out
loope
inc
test
push
cmp
sbb
sarl
inc
in
insl
mov
jmp
loope
call
dec
add
push
and
and
out
cld
cmp
cmp
or
and
dec
stc
sbb
leave
fmul
fwait
sbb
add
jp
xchg
or
ss
mov
mov
mull
es
cwtl
fcmove
ja
sbb
lea
mov
or
out
pop
mov
cs
mov
mov
imul
sbb
andb
in
mov
mov
fs
test
xchg
push
lods
lret
in
and
dec
jae
popf
mov
out
pop
sub
pusha
aam
or
out
cli
mov
sub
shll
push
out
inc
filds
or
jbe
lock
loop
sbb
xorb
mov
inc
or
js
aam
xor
inc
push
cs
pop
lods
add
sahf
pop
jle
js
jb
cmp
and
scas
fisubrs
sti
jb
mov
fidivrl
inc
lret
lret
enter
icebp
cltd
jae
loope
shlb
repnz
fldt
or
sarl
adc
jns
xor
sub
cmp
pushf
pop
push
insl
cmp
inc
mov
cmp
push
mov
mov
adc
mov
into
and
pop
out
stos
dec
xchg
in
add
es
push
inc
dec
imul
and
data16
pop
mov
bound
and
pop
pop
rorl
add
out
rcrl
testb
fsubl
mov
lret
inc
nop
arpl
pusha
orl
insb
adc
dec
jb
push
add
xchg
sub
dec
adc
cmpsb
nop
push
repz
mov
lock
xlat
mov
xchg
xchg
xor
xlat
stos
push
sub
mov
jo
sbb
or
dec
cmp
adc
xchg
sbb
mov
fistps
outsl
int3
adc
movsl
mov
xorb
push
jae
inc
add
lds
adc
aad
ja
mov
push
test
mov
mov
mov
outsl
or
cmpsb
pushl
data16
or
subb
nop
adc
nop
dec
sbb
adc
xchg
sub
imul
xlat
inc
mov
dec
pusha
cmp
xor
std
loop
int3
fistpl
inc
mov
dec
fwait
data16
rcll
mov
and
pop
sub
push
sbb
sub
adc
push
sub
movsl
xor
xor
aaa
nop
dec
mov
insb
add
cmpsl
and
xor
je
xchg
test
dec
ljmp
in
inc
sbb
sub
add
fcomps
mov
xor
pushf
adc
jp
push
and
pop
loop
sti
jno
subb
in
push
cs
push
pop
ja
push
xor
into
cmpsb
sbb
rcrl
xor
xor
pushf
lods
sub
jle
cmp
adc
repz
fcompl
dec
cs
stc
fsubs
adc
int3
cmp
dec
xchg
movl
fdivrl
mov
xor
pop
and
mov
and
aad
push
cmp
add
repz
or
mov
xor
cmc
push
lret
jle
sbb
sub
jns
dec
xor
xor
sbb
mov
sub
cmp
and
ds
add
scas
xor
mov
je
mov
aad
subb
subb
cmp
push
lods
mov
mov
pop
in
add
ja
push
or
lods
out
mov
add
cmp
cmp
fisubrl
sub
fiadds
jge
dec
jae
andl
lahf
push
cmp
lds
mov
cmp
or
arpl
or
cli
dec
loop
or
jb
pop
add
sub
aas
cmp
push
dec
sub
pop
sbb
or
lahf
rcrl
jb
insl
and
ja
or
xorb
ljmp
inc
sub
fwait
cmpsl
add
adc
rcrl
pop
add
je
fcoms
lahf
lret
adc
imul
jmp
and
or
adcb
push
adcl
or
or
cmc
test
popf
adc
pop
add
sbbb
pop
mov
xchg
jmp
nop
jae
push
sub
stos
inc
jmp
and
mov
loopne
cld
cltd
and
aaa
mov
ficomps
push
pop
pop
cmp
adc
insb
jb
rcll
ss
aaa
outsl
pop
add
loop
fnstsw
dec
lds
mov
add
sarl
and
pop
push
pop
xor
mov
xchg
mov
or
popa
push
push
int3
js
insb
fs
and
stos
repnz
mov
sub
and
pop
jbe
mov
inc
lods
xor
inc
pop
fcomi
je
leave
push
xor
cmp
mov
xchg
xor
in
xor
rcl
xor
pop
xor
push
xor
adc
mov
dec
dec
pop
adc
push
xor
movsb
push
mov
call
mov
mov
adc
out
adc
bound
arpl
pop
sub
cmpsb
fidivl
insl
ret
hlt
sub
test
pop
inc
das
or
pop
inc
dec
bound
ret
push
push
inc
scas
dec
lret
inc
fwait
sub
mov
aad
and
data16
or
push
addr16
das
add
sarb
popa
dec
sub
jmp
pop
jbe
push
ret
xchg
mov
pop
push
not
add
jae
ja
cltd
aas
rorb
and
movsl
aad
dec
negb
js
mov
push
ret
fmulp
addb
arpl
xor
sahf
xor
imul
mov
jmp
sub
add
xchg
in
mov
add
addr16
out
xchg
mov
xor
jno
mov
jmp
movsl
jns
outsb
imul
ret
cmp
lcall
fs
inc
sbb
sub
mulb
jno
dec
insl
push
sahf
mov
dec
mov
pop
mov
and
mov
push
push
or
lds
sub
xor
push
push
scas
cmc
and
mov
ja
fildl
or
xor
bswap
or
xchg
call
insb
aad
ja
xor
pushf
push
js
xchg
pop
notl
dec
lret
stos
test
xor
es
mov
mov
add
bound
aad
lahf
add
dec
push
mov
addb
ret
cmc
loopne
clc
dec
sbb
xor
jne
dec
push
insb
push
mov
mov
shll
rolb
call
pushf
xchg
stos
sarb
testb
inc
xor
sub
pop
movsb
pop
hlt
push
lock
nop
movsb
roll
out
xchg
jbe
aad
ss
flds
mov
sub
sbb
cs
fld
fdivrp
xchg
pop
fs
arpl
lret
loope
adc
insb
sub
movb
sbb
ret
pop
insb
xor
lods
pop
xor
movsl
jmp
cmp
pop
sub
inc
sbb
xor
mov
xor
hlt
je
iret
loopne
adc
and
mov
imul
add
mov
fisttpl
movsl
mov
pushf
inc
insb
pop
xlat
xor
dec
add
sub
sbb
imul
stos
jb
dec
jmp
sub
das
jecxz
xchg
vprotb
out
iret
je
es
js
outsb
loope
loop
add
and
stc
ds
push
jbe
or
outsl
sub
mov
and
mov
or
or
inc
jb
imul
cmp
sete
addr16
mov
add
lret
mov
insl
lcall
jns
shlb
jo
and
and
scas
sub
dec
test
jp
sbb
addb
scas
ret
leave
out
fsub
adc
daa
sub
push
mov
lods
mov
and
xor
jo
dec
xor
push
ss
dec
jo
pop
leave
push
xor
and
fstps
dec
test
inc
pop
pop
aas
mov
inc
jle
mov
inc
int3
ret
and
adc
arpl
push
cmp
sbb
xor
sub
push
inc
cmp
leave
cmp
xchg
inc
jbe
or
loop
pop
jb
ret
inc
pop
loop
les
cmp
gs
sbb
iret
data16
adc
addr16
fimuls
jge
xchg
bound
out
leave
cld
iret
enter
inc
out
mov
loop
add
fs
push
mov
inc
call
jp
in
imul
and
add
sbb
bound
sbbb
enter
jne
adcb
gs
mov
jno
jg
add
nop
push
rorb
jle
es
mov
insb
mov
in
repnz
and
fdivs
imul
push
daa
addl
repz
orb
and
push
cmp
pushf
adcl
mov
gs
ss
test
std
cld
lods
cltd
xchg
addr16
pop
ljmp
add
xchg
mov
push
pop
inc
or
clc
roll
or
js
leave
add
cwtl
iret
cmp
cmp
mov
inc
push
pop
xchg
add
pop
gs
fmuls
jns
je
subl
sub
cmp
pop
adc
les
mov
mov
push
sub
fs
cmp
sub
imul
popf
mov
ja
pushf
rcl
jbe
call
xor
addr16
dec
pop
inc
outsl
sub
and
and
call
jbe
ja
fisubrl
xor
cmpsl
add
mov
dec
or
jb
inc
test
inc
into
ljmp
jecxz
cmp
sbb
jne
jae
xchg
mov
sbb
js
inc
daa
into
xchg
or
ljmp
inc
and
shll
repnz
xchg
xor
hlt
cmp
ljmp
fldcw
out
es
add
cmp
cwtl
in
jge
jge
iret
pop
imul
inc
jno
leave
xor
dec
insb
jmp
daa
inc
negl
js
mov
mov
xchg
jbe
sbb
xor
js
or
fadds
movsl
mov
add
jb
push
fs
and
sbb
movsb
test
stos
cmp
fstl
aam
xor
add
test
mov
loopne
js
movsb
mov
pop
mov
mov
sbb
push
lds
popf
in
and
rclb
pop
loope
data16
mov
lods
mov
movsl
lret
les
orb
test
mov
outsl
mov
push
xchg
push
inc
ret
pop
mov
push
das
push
jecxz
cltd
adc
in
sub
dec
sbb
push
hlt
mov
lahf
inc
into
adc
dec
push
test
sbb
mov
lret
dec
or
in
push
xor
pop
jg
xor
jp
cmpsb
dec
mov
hlt
inc
and
rclb
dec
adc
les
adc
xor
push
adc
or
js
inc
sbb
out
outsl
jnp
or
aaa
icebp
inc
xor
enter
dec
add
idivb
push
hlt
bound
pop
jae
cmp
sbb
test
movsl
pushf
bnd
iret
mov
cli
dec
stc
xor
jno
push
fsubrl
je
adc
insb
xor
fnstsw
stos
adc
xor
or
or
xchg
rcrb
sbb
clc
or
push
or
lock
or
js
rol
adc
adc
cltd
out
sbb
mov
cwtl
inc
jge
sbb
jmp
xchg
mov
mov
xor
lea
adc
dec
stos
cmpsl
ret
push
in
mov
adc
arpl
cmp
je
or
xchg
ret
bound
push
lods
mov
dec
xor
push
and
pop
aad
out
add
cmp
xchg
leave
pop
sbb
movsl
and
insb
sbb
fsubrl
jae
adc
jg
sbb
dec
ficoms
mov
and
inc
aad
in
enter
jns
stos
arpl
mov
adc
cmp
mov
cmp
sbb
push
sub
push
or
cltd
je
xchg
or
and
add
ss
xor
std
dec
adc
rcrb
xor
inc
push
push
mov
imul
or
and
movsl
aam
pop
adcl
push
mov
hlt
push
leave
xchg
or
xor
adc
icebp
ficompl
xor
mov
nop
fbstp
and
aam
std
inc
in
fcomi
mov
xor
and
xor
xor
pusha
jo
jge
fs
xor
add
test
xor
add
jo
add
jo
add
mov
stc
xor
add
mov
xor
lret
push
insb
js
and
dec
jle
and
sub
and
xor
jle
and
lock
in
jle
and
xor
jle
and
jo
lods
jle
and
xor
sbb
and
lock
sahf
and
pusha
add
ds
lahf
inc
and
jo
sub
and
xor
pusha
add
mov
pusha
add
mov
pusha
add
lods
lahf
in
pusha
add
mov
pusha
sbb
data16
addr16
pusha
inc
xor
mov
fs
xor
add
test
xor
add
jo
add
jo
add
mov
cld
xor
add
mov
xor
lds
insb
cmp
das
pusha
push
xor
mov
fs
xor
add
test
xor
add
jo
add
jo
add
mov
cld
xor
add
mov
xor
lds
insb
cmp
sub
push
xor
dec
aas
inc
and
jo
sub
and
xor
or
test
pusha
add
push
in
aas
movsb
and
xor
int3
aas
les
pusha
add
lods
aas
in
pusha
add
push
mov
add
pusha
xor
scas
insb
iret
and
pusha
xorl
mov
jl
sbb
mov
fnstcw
fadds
xor
loope
enter
inc
call
cmp
js
arpl
and
xchg
push
outsl
sbb
ds
daa
push
add
pop
aas
insl
and
xor
test
jge
std
push
out
popf
and
or
fistpll
mov
jl
sbb
and
sbb
outsb
xchg
sub
sbb
dec
jmp
dec
mov
add
jo
add
mov
cmp
jno
ret
push
das
js
and
fdivrl
and
mov
and
cmp
sahf
inc
pop
sub
outsb
ds
jp
dec
add
and
mov
inc
add
xor
inc
or
dec
cmpsb
sub
and
loope
movsb
add
shll
or
aaa
enter
adc
push
push
sub
popa
sbb
add
push
out
pushf
and
and
add
jge
adc
mov
adc
push
dec
sub
dec
inc
aas
jle
mov
pop
dec
xchg
aas
adc
add
jo
xlat
sbb
lds
xchg
add
dec
add
push
or
das
js
je
or
push
test
je
add
jo
add
inc
pusha
popf
sahf
aas
fldl
notl
lods
adc
imul
cltd
scas
icebp
adc
aaa
adc
cmp
xchg
add
inc
and
jg
inc
pop
inc
adc
adc
mov
add
jb
jb
cmp
mov
or
jp
jl
or
push
pushf
jle
jb
add
dec
and
stos
adc
jle
push
add
cmp
test
pop
xor
mov
cmp
jmp
push
inc
cmp
int
lock
fisttpll
stos
orl
push
xor
dec
stc
jo
inc
add
cmpsl
test
xchg
hlt
dec
or
adc
inc
mov
lds
repnz
loop
test
and
fs
xlat
and
and
mov
and
notl
jl
sub
inc
daa
push
jge
xlat
pop
dec
jg
dec
cmp
cmp
lods
stos
fimull
pop
mov
pop
mov
out
sub
aas
addb
jno
shl
pop
xchg
sbb
sub
sahf
mov
pop
outsb
shl
or
out
xchg
shrb
shr
pusha
cwtl
in
test
and
pusha
dec
sbb
pop
pop
fsubrs
lahf
cmp
adc
cmp
lret
xchg
inc
mov
mov
shlb
loope
or
ret
sbb
outsb
push
adc
dec
push
sub
inc
insb
cs
dec
mov
ljmp
mov
sbb
ret
jg
cld
xchg
clc
rcrl
es
mov
sbb
test
xchg
imul
popa
sbb
mov
pop
nop
cmp
addr16
push
stc
inc
popf
out
loope
popa
inc
inc
ret
aam
sub
mov
cld
or
add
push
add
and
add
push
test
jp
decl
popa
aas
adc
jo
add
aas
mov
push
mov
daa
adc
callw
xor
fisubl
fs
jbe
or
insb
es
push
jle
and
xor
add
inc
addr16
adc
dec
xor
mov
mov
insb
dec
xor
mov
fisubl
outsl
stos
xchg
loop
push
mov
ss
int
xchg
pop
jge
push
sbb
push
mov
daa
ja
inc
mov
scas
loope
shlb
dec
mov
dec
sub
roll
or
outsl
dec
inc
xor
inc
cs
fsts
cmp
popf
fistpll
and
loop
lock
ror
push
shlb
mov
in
lods
rcl
inc
cmp
jg
xorl
iret
icebp
inc
pop
add
cld
jbe
mov
inc
xor
cmp
jae
les
add
or
jl
pop
scas
add
in
mov
mov
push
lret
cltd
fsts
cmpsb
xchg
sub
push
push
push
mov
and
ret
in
add
jbe
es
dec
pop
sbbl
sbb
daa
mov
testb
mov
or
jnp
sbb
xor
jle
jo
add
sub
sbb
jl
addr16
aaa
bound
pop
xchg
adc
fisttpll
jnp
add
inc
add
cmp
pushf
pop
adc
or
jle
je
add
enter
aam
iret
scas
inc
insb
dec
movsb
or
push
les
inc
inc
icebp
outsb
mov
and
cmp
or
gs
js
sbb
js
add
mov
cld
jnp
cmp
pop
push
aam
mov
sub
outsb
incl
push
xor
dec
inc
add
jecxz
mov
test
push
leave
pusha
lret
pop
push
add
mov
xor
xchg
xor
shll
xchg
xchg
add
jnp
adc
dec
dec
mov
and
fidivrs
adc
cmp
add
jbe
arpl
adc
inc
mov
arpl
in
mov
xchg
xor
push
sbb
push
out
test
add
add
mov
sarl
mov
rcrb
add
mov
popf
dec
stos
pop
add
pusha
aas
sbb
ja
sarb
lret
into
add
addb
cmpsb
push
mov
add
aaa
jb
push
or
roll
xchg
loopne,pt
gs
cmpsl
cld
pop
pop
arpl
mov
js
mov
and
inc
and
push
inc
add
gs
adc
adc
xor
repz
adc
and
orb
jns
jo
or
ds
shlb
addr16
clc
push
icebp
mov
shll
and
dec
out
in
popa
pop
inc
and
cmp
in
lds
dec
rolb
add
jecxz
rcl
ljmp
push
cmp
inc
and
jbe
sub
fbstp
and
call
imul
sub
test
cmp
xchg
pop
mov
dec
jo
cmp
mov
xor
outsl
sbb
mov
iret
aas
enter
js
mov
push
in
es
jb
arpl
xor
or
push
adc
cmp
sahf
cmpsl
add
repnz
cs
mov
adc
lahf
mov
push
xor
mov
imul
push
cmp
jbe
xchg
dec
outsl
mov
enter
repz
fcomps
cmp
dec
fildll
pop
mov
into
stc
fldt
push
xchg
jl
aaa
fadds
pushf
repnz
add
test
inc
fsubs
js
inc
sub
sub
dec
addr16
jg
adc
mov
sbb
mov
push
xchg
loopne
cmp
pushf
out
lock
sbb
push
mov
scas
insb
cmp
mov
scas
xchg
outsl
dec
in
mov
sbb
mov
adc
in
cmp
in
in
push
sbb
arpl
jecxz
ds
fidivrs
into
jb
add
cmp
pushf
loope
orb
popl
pop
sbb
xchg
clc
into
mov
shll
les
imul
ficomps
fcoml
jnp
sbbb
out
fistpl
pop
jno
add
testl
pop
pop
xchg
xor
shlb
out
lods
mov
add
test
in
fcompl
xor
inc
pop
aaa
mov
or
loopne
daa
push
cmp
dec
popf
add
fs
in
pop
sbb
mov
push
gs
push
imul
mov
sbb
jno
sub
lock
fld
mov
mov
ljmp
mov
addr16
repnz
or
test
jmp
shlb
add
outsb
jmp
sahf
sbb
cwtl
push
and
out
outsb
sarb
and
fiaddl
hlt
stos
iret
adc
add
xchg
adc
daa
cmpsl
xorl
sbb
xchg
bound
mov
out
xchg
pop
insb
or
or
xchg
cmp
dec
mov
ljmp
sub
mov
data16
sbb
in
push
stos
es
divb
mov
jb
sbbb
push
mov
push
cmp
xor
enter
sub
int
in
nop
cmp
add
cmpsl
sbb
pop
shr
dec
fwait
icebp
pop
and
push
xor
cld
or
add
push
mov
or
shl
ret
mov
sbb
fisubl
push
xchg
std
xchg
inc
rorl
daa
inc
stos
out
xchg
jge
push
hlt
cli
insb
aas
cmp
push
mov
das
sbb
sbb
fdiv
loop
inc
out
pop
in
mov
xchg
aad
inc
in
test
pop
mov
jg
cli
inc
cmpsb
hlt
cmpsl
mov
ret
out
add
pop
movl
lea
mov
jns
mov
insl
mov
xor
push
push
xchg
je
cmp
in
inc
andb
bound
mov
roll
ret
fisttps
iret
sahf
dec
cmp
dec
out
push
pop
jno
xor
sub
xor
xor
cmp
call
cmp
std
xchg
mul
jle,pt
pop
ss
aas
call
xchg
add
ffree
std
inc
and
rcl
sahf
adc
pop
mov
pop
loop
dec
imul
cmp
shl
dec
cltd
dec
lds
sbb
jle
cmp
loopne
pop
xchg
insl
mov
xchg
divb
outsb
les
add
or
fldenv
ds
in
dec
divl
push
addb
add
jp
and
xor
push
adc
addl
stc
pop
jp
mov
fsubrs
xchg
sub
xor
xor
xor
mov
je
lock
push
dec
mov
mov
adc
inc
ja
xchg
ljmp
bound
pop
pop
pushw
xchg
stos
xlat
clc
add
leave
dec
in
xchg
dec
pop
rcrb
loopne
push
mov
add
pop
in
clc
add
cmp
mov
mov
jp
enter
sbb
dec
clc
jmp
jmp
popf
jecxz
addr16
lods
dec
pop
cmp
mov
in
xor
data16
and
dec
xlat
pop
sbb
lcall
or
js
shlb
pop
push
lahf
push
dec
nop
cmp
scas
mov
push
stos
stos
sub
inc
push
fldenv
das
repz
sbb
test
mov
fcoms
inc
mov
mov
or
in
jl
sub
stos
mov
adc
mov
mov
pop
push
cmp
pop
pop
cmp
shll
insl
daa
sub
and
pop
out
call
or
add
sub
loop
test
popf
repnz
mov
test
and
cld
enter
jae
push
sbb
sbb
xchg
inc
scas
mov
fdivrl
dec
jecxz
adc
pop
dec
insl
or
xchg
push
mov
adc
add
cmp
cli
sbb
test
add
sti
and
je
mov
cmp
and
xor
mov
es
jne
lahf
stc
adc
xorb
icebp
push
pop
xlat
jp
and
or
lea
outsb
ds
dec
xor
repnz
xchg
push
je
ljmp
sbbb
jge
sbb
jle
sbb
pop
popa
stc
or
mov
cmpl
flds
in
cmpsl
inc
xor
data16
sub
dec
mov
bound
leave
cmpsl
rcll
stc
mov
dec
ret
jbe
push
jle
adc
cs
dec
jmp
aad
imul
xor
orb
stc
pusha
xchg
pusha
pushf
lahf
loope
xchg
ret
adc
or
dec
and
std
das
test
or
or
mov
jmp
cmp
lret
outsl
cli
test
adc
bound
adcl
and
add
push
jns
pop
movb
mov
fwait
cmp
xchg
fwait
and
mov
mov
jg
dec
cmp
in
mov
cmpsb
aas
imulb
mov
inc
mov
push
leave
mov
or
popf
xor
fidivrs
in
xor
aaa
mov
les
sub
pop
push
mov
popa
out
popa
inc
dec
fdivl
dec
push
or
cmpsb
push
jbe
cltd
inc
push
add
mov
insb
inc
cmp
sub
xchg
js
mov
fs
icebp
subb
inc
adc
in
sub
ljmp
imul
xchg
data16
addr16
push
lock
lahf
fs
xor
mov
cmp
shll
sub
out
test
and
stos
lret
clc
sub
xor
jb
mov
in
shr
out
cmpsl
outsl
xor
add
orl
jl
call
fucom
fnstenv
add
hlt
lods
repnz
ds
sbb
dec
adc
aad
stos
ficoms
cmp
mov
jl
imul
push
js
mov
icebp
push
cs
push
sub
je
xor
lcall
mov
mov
pop
push
cmc
jne
mov
and
push
push
xor
addl
loopne
jl
ja
dec
push
cmp
repnz
push
push
pop
sbb
imul
push
popf
cmp
push
stc
push
roll
test
aam
jo
push
cmp
mov
cmp
repnz
in
and
sarl
xor
and
mov
sub
push
inc
jno
inc
cs
dec
repnz
mov
cmp
stos
cltd
xchg
js
inc
call
testb
shrl
push
mov
dec
xlat
pop
in
dec
dec
dec
cmpsb
and
pop
add
jle
out
fcomip
ret
adc
add
or
jno
sarl
jmp
and
xchg
ret
push
push
push
mov
ficoms
sub
lret
lret
sbb
cmp
push
js,pt
pop
or
pop
lock
push
out
aad
clc
sbbb
into
pusha
pop
ret
cmc
xor
sbb
xchg
cmp
cmp
popf
loop
push
jno
or
mov
jnp
push
fnstsw
aas
or
mov
test
in
push
pop
shlb
xor
int3
xchg
mov
dec
jbe
scas
bound
ficoml
mov
sub
shl
and
adcb
mov
or
es
jge
ret
sbb
aas
jle
jb
add
pop
jle
jo
add
lock
sbb
movsb
mov
cld
sbb
pop
add
es
sub
jge
cwtl
in
adc
dec
xchg
aas
imul
pop
bnd
push
inc
push
push
fisubl
out
xchg
je
xlat
sbb
push
push
sub
mov
movsl
jbe
and
outsl
jmp
cltd
mov
or
inc
sub
in
pop
ja
sarl
push
and
dec
jb
loopne
lahf
dec
ja
mov
test
jb
adc
adcl
adc
dec
sub
aad
pop
sahf
pop
sub
sub
xor
sbb
mov
cld
test
mov
xchg
xor
push
cmovno
popf
cmp
xor
fcomps
xchg
mov
fsubl
sbb
shrl
mov
jne
or
jb
xchg
mov
mov
add
dec
fwait
cmp
cmp
lret
mov
sub
jmp
fs
outsb
pop
push
push
mov
sbb
sub
mov
fisttpl
mov
pop
mov
mov
popa
mov
mov
push
clc
mov
fcompl
jo
call
leave
in
adc
rorl
sahf
xchg
fdiv
roll
or
das
jb
mov
int
mov
jl
xor
stc
call
gs
xor
bound
or
inc
sbb
dec
inc
xor
cmp
inc
ret
push
adc
movsl
mov
mov
icebp
out
fadds
jno
mov
xor
or
leave
out
lock
lds
jl
mov
add
sub
clc
or
sbb
loopne
mov
adc
inc
xor
lods
je
lds
and
test
or
jno
jle
std
lods
push
cmp
mov
cmp
ret
pop
ret
push
push
sbb
dec
rolb
test
clc
aam
xchg
sbb
and
mov
cld
jl
and
test
into
out
sub
push
mov
bound
push
push
sub
cltd
push
scas
cmp
scas
insb
nop
push
push
enter
je
push
test
and
sarb
out
inc
inc
inc
loop
nop
bnd
xchg
imul
cli
imul
fs
pop
sbb
cld
mov
mov
jle
outsl
into
andb
lock
cmp
add
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pusha
inc
add
add
add
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
add
add
add
add
xor
cmp
xor
xor
bound
xor
add
xor
or
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
arpl
jns
bound
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
sub
and
xor
sub
and
xor
sub
and
xor
add
add
cmp
or
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
xor
sub
and
xor
sub
and
xor
sub
and
xor
add
add
inc
add
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
insl
add
jae
js
bound
js
add
js
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
and
xor
sub
and
xor
sub
and
xor
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
