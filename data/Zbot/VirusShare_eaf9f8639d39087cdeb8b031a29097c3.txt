add
or
add
add
jo
add
loopne
add
addb
add
add
and
add
pusha
add
add
pusha
push
add
orb
orb
add
or
orb
add
add
add
jo
add
mov
add
lock
add
add
add
add
add
adc
add
add
adc
add
cmp
add
pusha
add
addb
add
mov
add
mov
add
fadds
add
add
add
sub
add
push
add
orb
add
mov
add
add
add
adcb
add
lock
adcb
add
sbb
add
inc
add
adcb
add
push
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
or
xor
add
in
add
add
add
add
add
sbb
add
add
pop
lods
or
mov
add
in
add
add
add
add
add
sbb
add
add
or
or
xor
add
in
add
add
add
add
add
sbb
add
scas
or
xor
add
in
add
add
add
add
add
sbb
add
add
add
add
add
in
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
mov
add
add
in
add
add
add
add
add
sbb
add
add
adc
add
add
add
add
add
add
sbb
add
add
inc
mov
add
add
in
add
add
add
add
add
sbb
add
mov
add
add
in
add
add
add
add
add
sbb
add
mov
add
add
in
add
add
add
add
add
sbb
add
add
add
mov
add
in
add
add
add
add
add
sbb
add
add
add
or
xor
add
in
add
add
add
add
add
sbb
add
add
add
or
xor
add
in
add
add
add
add
add
sbb
add
add
jl
or
xor
add
in
add
add
add
add
add
sbb
add
mov
add
in
add
add
add
add
add
sbb
add
mov
add
in
add
add
add
add
add
sbb
add
add
add
rorb
mov
add
in
add
add
add
add
add
addb
add
add
adcb
add
xor
adcb
add
add
add
add
add
add
add
add
sbb
add
add
add
rorb
sub
add
add
add
add
add
add
sbb
add
add
hlt
les
add
add
add
add
add
add
sbb
add
add
lods
lds
add
add
add
add
add
add
add
add
add
test
add
rolb
addb
add
clc
add
addb
add
add
add
add
add
add
add
sbb
add
add
add
add
in
add
add
add
add
add
sbb
add
add
add
or
call
add
add
add
add
add
sbb
add
add
or
sub
add
in
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
sbb
add
add
lock
or
adc
add
in
add
add
add
add
add
add
js
add
add
add
call
js
add
push
add
cmp
add
add
add
add
add
add
add
sbb
add
leave
or
call
add
add
add
add
add
sbb
add
add
or
call
add
add
add
add
add
sbb
add
push
add
ror
or
mov
add
add
add
add
add
sbb
add
push
add
je
or
pop
add
add
add
add
add
add
add
sbb
add
add
ror
or
xor
add
in
add
add
add
add
sbb
pop
add
add
add
jo
add
cwtl
pop
add
rolb
adcb
add
call
push
add
adc
add
cmp
add
pusha
or
adcb
add
mov
add
mov
add
fmuls
add
add
add
sub
add
push
or
addb
add
js
add
mov
sldt
enter
adc
add
lock
adcb
add
sbb
add
inc
or
adcb
add
add
nop
or
sbbb
add
mov
sldt
loopne
add
or
add
xor
add
pop
or
addb
add
add
add
add
add
add
add
sbb
add
add
add
or
lret
add
add
add
add
add
add
sbb
add
into
or
jo
add
in
add
add
add
add
add
sbb
add
iret
or
inc
add
add
add
add
add
add
add
sbb
add
pop
add
or
add
add
in
add
add
add
add
add
sbb
add
or
add
rorl
add
add
in
add
add
add
add
add
sbb
add
or
add
aam
add
add
add
add
add
add
add
add
sbb
add
add
pusha
xlat
or
jo
add
in
add
add
add
add
add
sbb
add
add
rcl
or
push
add
add
add
add
add
add
add
sbb
add
fmuls
add
add
add
add
add
add
add
add
sbb
add
or
add
add
in
add
add
add
add
add
sbb
add
or
add
add
add
add
add
add
add
add
add
sbb
add
or
add
fimull
add
add
add
add
add
add
add
add
sbb
add
add
mov
add
add
add
add
add
add
add
sbb
add
add
inc
fisttpll
add
add
add
add
add
add
add
add
sbb
add
fimuls
add
add
add
add
add
add
add
add
sbb
add
fimuls
add
add
add
add
add
add
sbb
add
or
add
fisttps
add
add
in
add
add
add
add
add
sbb
add
or
add
loopne
add
add
add
add
add
add
add
add
sbb
add
or
add
in
add
add
add
add
add
add
add
add
sbb
add
add
clc
call
add
in
add
add
add
add
add
sbb
add
jmp
add
add
add
add
add
add
sbb
add
in
or
lods
add
add
add
add
add
add
add
sbb
add
or
add
add
in
add
add
add
add
add
sbb
add
or
add
in
or
les
add
add
add
add
add
add
sbb
add
or
add
add
add
add
add
add
add
add
sbb
add
add
adc
or
sub
add
in
add
add
add
add
add
sbb
add
add
inc
cmc
or
inc
add
add
add
add
add
add
add
addb
add
jns
add
or
addb
add
add
add
add
add
add
add
sbb
add
cmc
or
jo
add
in
add
add
add
add
add
sbb
add
or
add
cmc
or
sbb
add
in
add
add
add
add
adc
add
add
jns
add
jns
add
or
adcb
add
clc
or
sbbb
add
and
add
dec
or
add
jo
add
cwtl
or
add
rorb
add
or
add
adc
add
cmp
add
pusha
push
add
mov
add
mov
add
fmuls
add
add
add
add
add
add
add
sbb
add
testb
and
add
in
add
add
add
add
add
sbb
add
or
add
testb
and
add
in
add
add
add
add
add
sbb
add
or
add
add
add
in
add
add
add
add
add
sbb
add
or
or
adc
add
in
add
add
add
add
add
sbb
add
or
or
adc
add
in
add
add
add
add
add
sbb
add
add
nop
testb
adc
add
in
add
add
add
add
add
sbb
add
testb
adc
add
in
add
add
add
add
add
sbb
add
testb
adc
add
in
add
add
add
add
add
sbb
add
or
or
adc
add
in
add
add
add
add
add
sbb
add
push
add
loopne
or
adc
add
in
add
add
add
add
add
sbb
add
push
add
hlt
testb
adc
add
in
add
add
add
add
add
sbb
add
add
or
or
adc
add
in
add
add
add
add
add
sbb
add
add
sbb
or
adc
add
in
add
add
add
add
add
sbb
add
testl
add
add
add
add
add
add
sbb
add
push
add
inc
testl
add
add
add
add
add
add
sbb
add
push
add
pop
testl
add
add
add
add
add
add
addb
add
sldt
dec
sldt
add
add
add
add
add
add
sbb
add
sldt
xor
or
adc
add
in
add
add
add
add
add
sbb
add
add
insb
testl
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
sbb
add
xor
add
add
add
add
add
add
add
add
add
enter
add
add
add
add
or
add
sldt
shlb
add
add
in
add
add
add
add
add
addb
add
adc
addb
add
add
add
add
add
add
add
sbb
add
adc
add
add
add
add
add
add
add
add
add
add
and
add
add
call
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
push
add
add
push
aas
add
add
add
add
add
add
add
faddl
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
mov
add
add
xor
cmp
xor
xor
add
add
xor
or
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
add
push
add
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
jae
and
push
add
jae
imul
add
outsb
add
add
jb
add
je
sub
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
jb
jbe
xor
xor
pop
add
jo
xor
pop
add
je
insl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
add
imul
add
jb
add
js
add
add
and
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
arpl
sub
and
dec
add
arpl
jb
outsl
add
outsl
add
je
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
je
popa
add
imul
add
jb
add
js
add
add
adc
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
outsb
add
add
jae
and
push
add
jae
imul
add
outsb
add
add
jb
add
js
sub
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
add
jb
jbe
xor
xor
pop
add
jo
xor
pop
add
je
insl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
popa
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
fs
outsb
fs
arpl
or
and
gs
outsb
fs
je
jae
gs
bound
or
and
and
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
and
fs
outsb
fs
je
jae
gs
bound
or
das
fs
outsb
fs
arpl
or
jae
gs
bound
add
sub
add
and
add
inc
add
add
add
add
add
add
add
adc
add
adc
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
pop
add
add
incl
pop
incl
pop
incl
pop
pushl
ja
incl
pop
incl
add
pushl
ja
or
add
add
pop
decl
mov
add
add
pop
pushl
ja
or
add
add
pop
decl
mov
add
add
pop
pushl
ja
add
pop
incl
pop
pushl
ja
add
pop
decl
mov
add
add
pop
clc
or
add
add
pop
clc
or
add
add
pop
clc
lock
add
add
pop
ja
jo
ja
cmpb
add
or
add
add
add
add
add
or
mov
add
add
add
mov
mov
add
add
add
mov
mov
add
add
add
mov
add
add
add
pop
mov
add
jo
mov
add
jo
add
add
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
jg
add
aas
clc
add
push
pop
push
cmp
push
cmp
push
cmp
push
add
push
add
clc
add
cld
add
incl
incl
or
add
add
add
add
add
add
add
or
add
add
add
add
jne
add
add
add
adc
add
add
add
addb
add
nop
or
lods
add
add
add
add
add
stos
sahf
add
adc
add
out
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
or
add
add
pusha
cmp
add
add
add
or
add
add
cmpl
add
add
add
add
add
add
add
add
add
cmp
add
add
add
cmp
add
add
add
cmp
add
add
add
add
addb
add
or
add
add
add
cmp
add
or
fdivrl
or
insb
cmp
add
cmp
add
or
in
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
or
int
or
and
or
xlat
cmp
add
or
in
or
xor
or
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
dec
xor
cs
dec
dec
add
dec
inc
dec
inc
xor
cs
dec
dec
add
dec
push
push
dec
dec
dec
cs
push
push
add
push
inc
push
dec
xor
cs
dec
dec
add
inc
dec
dec
xor
cs
dec
dec
add
dec
inc
push
dec
xor
cs
dec
dec
add
dec
push
inc
push
dec
cs
dec
dec
add
inc
inc
dec
inc
cs
dec
dec
add
inc
xor
cs
dec
dec
add
inc
inc
push
push
xor
cs
dec
dec
add
dec
dec
dec
dec
cs
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
push
outsl
jae
push
push
dec
gs
popa
addr16
add
add
popa
insb
gs
imul
je
js
add
inc
gs
imul
push
add
add
jne
outsb
je
jb
jo
jb
imul
push
gs
outsb
jne
dec
gs
add
add
addr16
jne
jb
inc
imul
outsb
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
push
popa
je
inc
imul
dec
popa
insl
gs
add
add
gs
dec
inc
jne
jns
add
add
addr16
jo
outsb
push
je
jb
addr16
outsb
dec
dec
outsl
arpl
jns
gs
add
push
push
dec
inc
outsl
ja
insb
outsl
popa
fs
outsl
inc
imul
and
add
add
add
add
add
add
add
dec
cmp
add
rolb
lock
pushf
pusha
call
pop
sub
lea
cmpb
je
movb
mov
sub
mov
add
lea
add
push
push
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
pop
pop
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
incl
mov
cmp
jne
sbb
adc
xor
or
ret
pop
mov
inc
mov
pusha
mov
sbb
popa
adc
or
push
push
and
rolb
or
push
jmp
pop
pop
call
in
mov
shl
or
dec
mov
jne
pop
push
add
push
push
mov
pop
xor
test
push
cmpb
sub
push
sbb
shr
and
jb
sub
sbbl
pusha
jae
shl
or
test
clc
dec
jne
pop
mov
dec
jp
sbb
ret
pop
mov
repnz
dec
popa
push
movzwl
fadd
sarl
push
scas
movl
jae
xor
cmc
add
lock
sub
roll
add
cmp
sbb
lahf
mov
loope
cmp
loopne
jmp
sub
dec
clc
insl
push
mov
outsl
mov
shl
rcll
ret
mov
add
pop
ret
adc
push
ficoml
jle
mov
inc
mov
or
sbb
call
out
or
jne
pop
ret
mov
shl
pop
pop
add
xchg
pop
sbb
jbe
pushf
xor
incl
jge
mov
sti
test
jle
gs
js
add
push
call
rclb
roll
loopne
inc
cld
inc
cmp
dec
jl
sbb
popa
insl
repnz
call
outsb
in
call
cmp
cmp
ljmp
sbb
les
jne
mov
shr
pop
lea
iret
loopne
add
jbe
inc
call
or
add
lock
cmp
sbb
call
fcomps
mov
test
push
cmp
icebp
call
shlb
sub
lods
add
add
call
cmp
dec
add
and
jne
sbb
and
or
add
push
clc
mov
mov
rcl
addr16
dec
cmp
adc
dec
push
icebp
inc
dec
or
enter
jo
icebp
movsb
push
sbb
int3
dec
hlt
enter
in
adc
sbb
inc
dec
clc
nop
push
in
and
add
shl
add
xor
dec
dec
sbb
or
dec
pusha
push
pusha
adc
fdivl
push
add
mov
inc
jne
sar
mov
fsubrl
and
rep
adc
popa
data16
jne
and
adc
lea
call
jge
orb
jo
pop
mov
adc
sbb
fisubs
test
adc
hlt
inc
stos
popa
and
fwait
ret
bound
inc
std
inc
adc
sbb
inc
inc
andb
and
pushf
lds
mov
inc
nop
add
in
mov
jge
xchg
add
adc
sahf
out
add
movsl
hlt
into
xor
je
and
cmp
mov
lcall
stos
sbb
xorl
or
insb
out
fcoms
xchg
push
repnz
or
xor
xchg
call
cmp
push
sbb
cmp
das
cmpsb
mov
jne
movsb
inc
setb
add
sbb
cmp
sysexit
test
pop
incl
pop
popf
shrb
clc
lea
inc
stc
hlt
cmp
mov
add
pushl
dec
mov
jmp
mov
inc
sbb
ret
dec
in
jmp
sub
enter
cs
lock
mov
xchg
sbb
fldl
dec
xor
ljmp
out
or
jmp
insb
lock
sbb
fcmovnbe
or
popf
test
pop
sub
mov
xor
or
call
add
mov
dec
add
pop
fcoms
push
adcl
jl
dec
loop
xchg
and
dec
stc
iret
xor
sub
pop
jge
adc
lock
dec
pop
add
pop
add
and
sti
movsb
sbb
dec
add
xchg
testb
fcmovne
mov
test
orl
and
xor
cmp
cmp
rcl
inc
inc
add
mov
inc
inc
cmp
inc
dec
test
mov
aam
jb
in
icebp
js
loopne
adcb
inc
rclb
test
jne
inc
js
shl
arpl
adc
mov
addb
or
add
pop
inc
jmp
push
sub
sub
jb
xor
mov
jge
cs
shrl
dec
jne
cmp
mov
sbb
xor
icebp
addb
mov
iret
push
es
sbb
jno
int
and
mov
xchg
adc
mov
and
mov
adc
sbb
mul
mov
inc
outsb
addb
add
mov
test
pop
push
clc
push
add
add
pop
add
and
lcall
add
xor
sub
sub
adc
mov
xchg
sbb
mov
out
cmp
in
mov
stos
outsl
inc
lods
fidivl
push
push
mov
js
ljmp
jmp
je
shrl
push
clc
nop
jns,pn
out
loopne
or
inc
sbb
enter
mov
mov
notl
mov
mov
je
sub
cmp
ds
mov
and
dec
popa
or
lds
hlt
inc
stc
adc
sub
push
popf
lods
xor
sub
adc
iret
xor
inc
sub
sub
out
lret
mov
test
shrl
fistps
int3
insb
inc
push
and
addr16
cmc
cmpsl
rol
repz
hlt
dec
dec
ret
in
dec
inc
xchg
in
aad
cli
xchg
dec
out
shl
std
jb
xchg
push
mov
decl
or
mov
add
pusha
popf
jle
pop
aam
jecxz
xchg
push
shlb
xor
popf
stos
dec
pop
xchg
pop
subb
mov
jecxz
stc
loopne
dec
adc
sbbl
sub
adc
fidivs
jnp
jno
inc
lahf
hlt
dec
jmp
shl
jns
sbb
lea
bound
add
mov
ret
shrl
jb
pop
inc
cli
fldenv
int
adc
int
push
mov
xchg
mov
mov
inc
mov
out
xchg
ss
or
testb
test
out
mov
mov
push
dec
test
popa
std
pop
out
jle
js
cmpsl
mov
mov
push
pop
xchg
mov
lods
pop
push
mov
or
jne
push
jmp
insl
nop
and
pop
jb
negb
and
mov
addl
sub
mov
xchg
inc
dec
mov
or
push
cmp
and
pop
mov
fsubrl
push
jle
popa
pop
pop
scas
or
push
sub
cmc
pop
out
dec
bound
or
popa
and
adcb
push
push
call
or
inc
pop
imul
movsb
add
roll
add
hlt
repz
js
inc
sahf
push
adc
push
or
inc
pusha
das
lret
mov
cmpsb
sub
pushf
inc
repz
iret
cmc
ljmp
mov
andb
mov
xlat
fdivs
call
pop
xor
cmpsl
xchg
mov
cs
int3
fisubl
js
push
dec
das
gs
and
xchg
pop
sbb
enter
pop
jo
add
jg
arpl
in
hlt
inc
out
add
fildll
mov
fwait
addr16
out
jb
mov
mov
dec
out
xlat
mov
jge
daa
xlat
and
sub
fsubrl
xchg
add
aam
and
int3
std
dec
jb
and
lods
jp
ljmp
inc
inc
push
pop
xor
adc
jl
gs
jecxz
xchg
xor
repz
fistl
dec
addr16
lahf
clc
cmp
sbb
and
je
int3
int3
and
int
loope
pop
loope
inc
pop
hlt
jge
shlb
scas
jno
sub
inc
gs
xchg
or
aas
cmpsb
aaa
add
cmp
push
cmpsl
aam
sahf
mulb
addr16
jne
jge
cmp
push
scas
push
mov
push
fsubs
stos
cs
test
mov
jns
pop
cld
adc
test
int3
xchg
enter
cltd
push
mov
pop
in
inc
xchg
add
pop
outsb
adc
imul
pop
or
out
imul
scas
push
movsb
dec
xchg
pushf
and
push
sub
ss
out
jp
lahf
pop
xchg
jae
cwtl
mov
inc
mov
xor
setp
pop
xlat
cmp
cmpsl
or
fwait
jno
int3
mov
into
mov
adc
icebp
push
push
insl
dec
mov
mulb
pop
adc
pop
test
iret
mov
iret
out
cmpsl
adc
inc
cmp
sbb
pushf
out
pop
dec
xor
popf
scas
push
sub
jg
rcll
dec
push
pop
fidivrl
loope
hlt
fiaddl
sbb
adc
cmpsl
mov
sarl
icebp
mov
pop
aaa
insb
ds
sbb
fiadds
ljmp
int3
insl
cld
dec
cli
icebp
dec
mov
cld
stc
les
and
inc
nop
loope
gs
out
lods
xchg
jp
daa
rclb
popa
enter
or
pop
push
cmpl
add
push
push
jp
aas
ror
popa
data16
jns
mov
popa
mov
rclw
xor
inc
stos
jo
test
negb
cld
mov
mov
fmuls
push
push
pop
cwtl
sarl
cmp
mov
jo
mov
imul
jb
jg
adc
cld
jp
xchg
xchg
data16
add
stos
fdivrs
mov
mov
jge
and
in
jno
pop
das
pushf
adc
ret
adc
data16
lock
push
sbb
cmpsl
hlt
dec
dec
jb
jecxz
test
shlb
mov
lret
pushf
movsl
xchg
mov
or
mov
mov
adcb
push
pop
cs
push
pop
lock
sub
mov
push
loope
and
cmp
mov
xchg
aad
and
loopne
inc
mov
outsl
push
adc
mov
jmp
daa
div
rorl
xchg
idivl
xor
pop
inc
fs
push
sub
mov
mov
pop
adc
add
fildll
movsb
xchg
add
xor
stos
mov
push
mov
loopne
fisubl
push
hlt
dec
mov
pop
dec
mov
fwait
xchg
add
out
add
fs
or
xchg
sti
jp
adc
inc
jmp
in
int
or
xchg
dec
add
enter
cli
xchg
inc
and
mov
mov
mov
cmpsl
imul
pop
mov
insl
imul
mov
comiss
pop
jbe
loop
cwtl
loopne
gs
mov
and
jns
scas
mov
lcall
ljmp
jnp
sbb
sub
daa
shl
fnstcw
sbb
leave
adc
lods
js
ret
push
or
or
or
mov
sub
cwtl
jg
mov
popa
mov
jno
insl
leave
int3
les
adc
mov
pusha
movsl
sub
fs
daa
inc
jb
and
nop
pop
pop
std
pop
sbb
pushf
sahf
lret
int3
mov
pop
cli
jne
dec
push
fisttpll
subl
ss
movsb
loope
mov
andb
lret
jle
mov
jo
enter
pop
or
inc
pop
cmp
and
add
mov
insl
sbb
mov
mov
lock
xor
mov
lret
fidivrs
inc
jp
call
lcall
and
pop
add
xor
in
sbb
aas
mov
adc
fs
xor
mov
dec
or
test
xchg
js
sub
test
push
xor
mov
xchg
adc
ficoml
cmp
insl
jns
sub
pop
cmp
stos
fsubr
pop
sub
inc
lock
sti
mov
xchg
addr16
cmc
or
push
pop
test
iret
cwtl
or
addr16
les
lds
jle
daa
cld
sbbb
xchg
jae
add
scas
pop
sub
or
fcomps
mov
or
sbb
dec
push
sarl
aad
out
imul
sbb
fstpl
test
mov
repnz
fnstcw
sub
and
push
int
insl
test
int3
jp
mov
enter
dec
popa
dec
dec
rolb
jg
push
ss
xchg
fstpt
push
cwtl
jl
inc
mov
mov
iret
mov
lea
mov
arpl
in
or
or
add
insb
adcl
and
int3
insb
xchg
and
and
loope
das
cmpl
dec
push
std
ret
inc
xchg
fisubrs
pusha
fcoml
icebp
decb
fcoml
cmp
lock
out
push
gs
insl
xor
ss
je
fs
and
xor
or
scas
cmp
shlb
adc
das
sarl
leave
and
lret
xorl
adc
jbe
xchg
dec
daa
sbb
add
jle
outsl
insl
xlat
leave
les
sahf
rorl
push
xor
push
and
out
ret
cmp
clc
sbb
daa
sbb
lea
pop
adc
shrb
inc
cmp
ror
cs
mov
ret
int3
sub
or
lds
mov
adc
out
jnp
lods
insl
nop
negl
mov
sub
shrl
iret
sbb
mov
sub
aaa
nop
cmp
push
ret
mov
xchg
icebp
popa
loop
adc
out
lcall
movsl
out
inc
mov
aas
adc
aam
scas
or
inc
adc
shrb
in
jmp
and
lahf
stos
cmp
repnz
outsb
adc
pop
in
fwait
cli
outsb
leave
nop
cmp
fldenv
jecxz
adc
mov
lret
daa
push
push
scas
notw
cmp
xor
fdivrl
xor
xor
aaa
ror
inc
clc
mov
and
sti
int
add
fldl
scas
add
lea
int
into
iret
rcrb
add
xchg
mov
clc
cltd
and
stos
mov
fstps
mov
pop
repnz
xchg
xchg
jle
or
push
xor
test
shlb
push
xor
inc
mov
stos
imul
movsl
lea
sub
inc
lods
mov
sbbl
stos
mov
push
imul
insl
add
iret
fisubl
je
sahf
lds
sti
rorl
pop
jge
stc
pop
mov
inc
mov
int
xchg
push
push
nop
fbstp
mov
mov
repnz
ss
sti
xchg
leave
push
out
or
push
lods
push
ds
je
fcoms
fs
sub
stc
xchg
or
cmp
push
dec
popa
in
pop
mov
dec
pop
add
sbb
std
sub
push
adc
or
push
mov
xor
sub
ret
mov
xor
fdivs
pushf
sarl
lods
cli
ds
out
repnz
xchg
cmp
cmp
hlt
mov
jo
mov
inc
repnz
and
ficomps
and
adc
jmp
addr16
jb
out
out
lcall
lock
fnstenv
jbe
or
xor
mov
pop
aas
cltd
ss
xchg
xlat
out
addl
fistl
cmp
jae
jo
mov
loope
ja
inc
mov
cld
int3
sbb
test
push
out
or
pop
push
iret
bound
sub
add
lods
cli
inc
and
outsb
cmp
stos
sbb
pop
xchg
pop
lea
int3
sub
push
call
mov
enter
arpl
lods
out
cmc
out
test
negl
cmpsb
arpl
or
dec
test
adc
inc
aad
sub
fwait
das
in
fldcw
push
test
hlt
push
adc
cmpl
cld
andl
jecxz
test
push
sub
xchg
fcmovnu
decb
insb
xchg
cwtl
mov
mov
fs
xchg
loop
jge
stos
sub
rolb
sbbb
lods
into
sti
lods
mov
cmc
scas
inc
cld
leave
nop
pop
ss
fbstp
popa
mov
xlat
aad
andl
cmp
and
rorl
xchg
dec
and
inc
loopne
mov
inc
and
lds
sub
mov
push
outsb
push
insl
jle
sti
push
fsub
adc
mov
add
dec
sub
outsl
daa
cmpsb
addb
inc
cmpl
out
ficomps
fsin
mov
jp
sbb
insb
imul
shll
dec
cmp
sbb
aas
je
fdivrs
push
mov
xor
dec
dec
cmpsb
sti
movsb
inc
dec
cmp
pop
dec
cwtl
push
out
stos
pop
aaa
adc
mov
cmp
sar
clc
fiaddl
rcr
mov
fistpl
adc
cmp
add
sub
xchg
adcl
mov
pop
mov
and
cli
sbb
jnp
push
mov
mov
xor
les
nop
pop
aam
addr16
out
dec
and
insb
out
pop
mov
jl
jecxz
lods
mov
rorb
iret
push
jbe
daa
sbb
add
fcmovb
cmp
enter
cmp
les
sbb
cmp
test
loope
mov
cld
stos
push
sub
shll
mov
pusha
mov
mov
pop
ret
mov
sub
add
inc
cmp
inc
inc
xchg
xor
aad
or
mov
sbb
push
xchg
lock
cltd
or
sti
sub
mov
jmp
xchg
mov
ljmp
add
inc
adc
cmpsb
mov
outsb
dec
sbb
popa
and
movsb
pushl
inc
dec
inc
cmp
mov
adc
jg
adc
test
xchg
test
and
fisttpll
bound
std
pop
pop
lahf
stc
imul
roll
stos
shrb
lods
aam
es
xchg
push
add
outsl
lret
jb
std
xor
out
out
xor
enter
jns
dec
push
jno
dec
stos
cmc
fisttps
out
xchg
sub
and
or
mov
fistps
push
ss
div
cmpsb
leave
jns
inc
pop
or
dec
or
and
daa
inc
or
pop
cmpxchg
ret
mov
repz
push
movb
push
jnp
fidivs
lahf
cltd
push
cld
fists
pop
aas
mov
inc
out
fnsave
and
push
jns
cmpb
pop
insl
insb
push
inc
mov
mov
mov
lock
mov
mov
jne
scas
in
sahf
fs
mov
or
das
push
int
push
xchg
mul
sub
mov
and
loop
lea
inc
pushf
or
or
mov
popa
adc
mov
mov
mov
sub
bound
test
lods
scas
wbinvd
cmp
aad
mov
xchg
lret
lock
pop
outsl
and
cmp
lds
out
sbb
pop
xor
xchg
in
andb
popa
fmulp
jne
stos
sub
pop
dec
jmp
rolb
cmpsl
fucomi
lods
ds
sbb
popa
mulb
shll
jle
enter
add
jns
lods
insl
out
ss
test
mov
stc
arpl
call
pop
aam
loopne
inc
decb
mov
imul
mov
aam
push
out
fistpl
push
cltd
mov
aad
insl
fwait
movsb
and
ss
jle
xlat
mov
inc
pop
mov
sbb
jno
dec
xorb
stc
repz
fwait
mov
out
mov
or
in
mov
mov
fistl
add
sbb
mov
andl
int
or
push
adc
push
lea
fcoml
sahf
mov
and
ret
inc
inc
in
pushf
xchg
cld
mov
xor
loopne
sub
jno
or
addr16
insl
adc
adc
loop
sahf
mov
aam
nop
daa
mov
pop
inc
xchg
ret
scas
add
add
pop
sarb
pop
arpl
movsb
and
iret
imul
adc
out
jae
imul
push
mov
mov
cwtl
in
into
mov
lret
cld
repz
popf
mov
mov
mov
addr16
pusha
jp
std
in
jge
jns
inc
jnp
jb
jno
and
addr16
mov
cmp
mov
jne
popa
mov
xchg
push
add
mov
inc
aad
rep
jae
push
cmpb
sarl
xchg
test
push
mov
jle
inc
mov
cmpsb
pop
scas
dec
scas
push
rolb
aam
js
xor
lret
xchg
daa
iret
call
mov
js
dec
dec
test
inc
fisttps
cmp
mov
test
xchg
jecxz
push
mov
test
adc
cltd
test
jmp
dec
jge
fldt
bound
call
out
mov
shr
jne
xlat
push
inc
cmpb
or
sub
lcall
dec
movsl
inc
and
push
add
jmp
aad
movsb
xlat
push
not
aaa
mov
lods
or
jecxz
jns
inc
repz
mov
mov
in
jae
mov
int
xchg
xchg
mov
xchg
sti
sbb
ja
or
sbb
test
cmp
xlat
xchg
mov
pop
inc
push
xchg
xchg
stos
inc
out
jle
cwtl
dec
pusha
shll
les
pop
pop
pop
dec
stos
bound
jl
dec
bound
xchg
call
dec
mov
rcrl
cmpsl
daa
adc
imul
xlat
sub
lret
outsb
sbb
push
dec
mov
insb
mov
sbb
sbb
imul
xor
adc
jge
les
add
pop
inc
movb
sub
incb
add
pop
adc
xchg
and
inc
xchg
cltd
mull
cwtl
stos
xchg
cmpsl
test
push
jecxz
dec
jecxz
mov
dec
mov
pop
push
lea
jmp
xor
addb
fwait
loope
stos
mov
das
aas
movb
jg
mov
movsl
sub
repz
jp
cltd
xchg
sahf
incb
lret
das
js
andl
hlt
out
aad
inc
cli
cmp
lret
in
or
ljmp
in
movsl
push
dec
adc
dec
xchg
add
push
inc
jb
ja
jle
jle
add
mov
pop
aaa
adc
call
push
or
mov
lods
aaa
add
add
sbb
pop
mov
ds
fnsave
jo
fisttpll
movsl
dec
loope
add
ficoms
dec
ss
mov
push
dec
arpl
movsl
aam
cmp
dec
jl
add
lods
test
jno
push
addb
inc
xchg
cmpsb
push
add
adc
mov
add
repz
stos
insl
push
stc
pop
sahf
js
test
mov
and
or
sub
lods
cmp
or
mov
mov
test
ss
rcl
and
adcl
imul
xchg
lods
push
aad
lahf
clc
cmc
push
inc
inc
mov
mov
bound
adc
push
sub
adc
stos
out
sub
sub
jle
add
scas
and
test
jne
cli
stc
andb
daa
push
fdivs
out
xor
in
inc
data16
into
sbb
xorb
adc
xchg
cld
shrb
pushf
xor
inc
aad
push
xor
inc
lahf
aam
dec
dec
xor
mov
and
xor
sti
jmp
inc
add
int3
adc
xchg
push
xor
aad
incl
push
jl
and
xlat
lods
jne
push
int3
jne
lods
push
pop
mov
loope
js
xlat
dec
leave
jo
popf
mov
sbb
jge
inc
push
ds
and
lret
aas
shlb
in
insb
icebp
push
sub
inc
sbb
and
imul
clc
loopne
sub
lcall
xchg
mov
jo
lret
das
pop
out
pop
pop
fcoml
pusha
pop
jle
mov
cmp
iret
dec
in
xchg
cwtl
movntq
out
pop
cmp
cmpsb
scas
pushf
adc
movsb
daa
scas
sbb
ret
mov
mov
pop
cmp
repz
test
icebp
sub
test
add
aas
test
xor
out
adc
jb
stos
imul
adc
popa
fdivrs
sub
mov
mov
mov
into
jbe
es
sarb
sub
mov
xor
inc
mov
in
jno
xor
xlat
mov
enter
pusha
mov
add
sarb
cwtl
test
fdivl
pop
testb
or
rclb
shlb
mov
dec
push
das
jl
mov
cmc
inc
repnz
add
loopne
fdivr
repz
popa
xor
je
cmpsl
insb
pop
mov
sbb
int
sub
insl
or
insb
popf
mov
lds
jp
cmp
mov
mov
fidivl
dec
stc
push
aad
dec
jo
or
int
xchg
push
movsl
popf
sub
sub
sub
jo
cmpsl
cmpl
jecxz
cmp
mov
sub
lods
sub
negl
mov
xor
xchg
stos
in
xchg
push
cmp
or
cli
jle
pop
ss
iret
shl
xor
push
xchg
jae
rcll
or
push
out
pop
jno
cltd
loopne
imulb
pusha
push
jl
mov
loop
shl
cwtl
add
dec
pop
add
jns
mov
xor
cmp
out
dec
mov
inc
rcll
jae
fsts
xchg
pop
stc
adc
pushf
and
notl
in
in
sub
dec
xchg
lret
insl
orl
insl
sbb
mov
or
imul
dec
xchg
xchg
jne
mov
xor
and
mov
pop
jb
ljmp
cltd
test
or
lock
mov
sarb
cmpl
mov
andb
mov
jae
sub
popf
rolb
sbb
cld
xchg
inc
add
adc
data16
inc
lods
pop
jl
sbb
leave
leave
xchg
mov
mov
ljmp
in
int
push
mov
mov
push
mov
aam
fiadds
in
pop
or
lcall
ljmp
or
fs
sub
adc
leave
jno
sub
sub
cwtl
nop
enter
fs
pop
sar
mov
es
mov
outsb
cmpsl
insb
in
mov
out
neg
enter
mov
hlt
pop
pop
push
leave
mov
and
sbb
sbb
xchg
jns
dec
in
mov
push
std
inc
inc
ds
mov
push
inc
sub
xor
movsb
aam
pop
sub
mov
push
das
scas
mov
adc
fs
aaa
inc
pop
in
adc
inc
mov
jns
ss
mov
insb
iret
repz
push
cmc
rolw
inc
sub
adc
jp
jge
clc
add
push
movsl
ds
pop
int3
rolb
movsl
mov
cmp
insl
adc
pop
jl
fdecstp
jg
adc
not
lea
add
in
clc
les
dec
jge
dec
inc
arpl
inc
or
mov
lret
nop
loop
cmp
mov
clc
adc
push
aad
jmp
push
adc
mov
sbb
dec
and
fcoms
inc
enter
lock
pop
stc
lock
ja
les
pop
pop
stos
into
pushf
mov
ljmp
xor
jg
push
jbe
lock
sub
sub
loop
push
pop
adc
mov
mov
in
or
addr16
outsb
outsb
add
jle
inc
mov
or
jg
jno
sub
ja
out
outsb
push
sub
xchg
pop
xor
mov
push
lcall
insb
icebp
jp
arpl
in
fisubl
popf
gs
or
jecxz
inc
sbb
and
fwait
imul
ficoml
or
movl
ljmp
sub
or
pop
mov
das
jns
outsl
and
jp
push
push
jmp
mov
dec
daa
dec
mov
mov
xor
push
fsub
rep
out
sub
ss
ret
and
mov
daa
pop
je
mov
adc
cwtl
inc
cmp
sbb
dec
add
das
jp
jnp
inc
movsb
andl
cwtl
out
arpl
jl
jle
mov
mov
add
pop
sub
mov
adc
push
xchg
sub
incb
xchg
jle
hlt
xchg
inc
xlat
inc
jae
xchg
mov
loop
push
rcrl
dec
inc
xor
scas
in
out
jmp
mov
push
lds
test
jmp
dec
mov
push
sbbb
mov
jns
shll
xor
push
adc
mov
repnz
cmc
sbb
shlb
mov
cmp
cmpsb
pop
xchg
in
mov
fsubs
cltd
sbb
dec
push
adc
xchg
ja
add
xor
dec
cmp
lahf
push
repnz
jne
jno
adc
mov
cmp
aam
or
cld
xchg
scas
lds
sbb
in
sub
fidivl
cmpsl
xor
loopne
rcll
repnz
cs
aam
sti
outsb
insb
xlat
leave
jge
outsl
in
mov
mov
rcrb
negb
aad
mov
aam
adc
inc
push
in
push
inc
lcall
mov
sahf
push
cmp
idiv
sbb
pop
and
inc
lcall
outsl
mov
adc
mov
add
dec
icebp
mov
xchg
push
mov
xchg
fdivr
mov
test
xchg
icebp
cmp
mov
aad
sub
pop
insl
outsl
push
or
inc
sbb
xchg
push
push
push
sbb
stc
jecxz
dec
enter
insl
idivb
das
adc
mov
sub
push
sbb
mov
addl
pop
int
sbb
inc
adc
int3
add
addl
loopne
sar
sub
lds
sahf
add
hlt
repnz
cmp
sub
and
iret
or
imul
repnz
shl
pop
jo
cmc
cmp
das
xor
fisttps
and
cmp
outsb
and
rclb
push
popf
jecxz
jnp
outsb
jmp
loop
nop
pop
xor
loope
in
insb
in
xchg
xchg
xor
xchg
mov
push
leave
rcl
stos
fnstenv
add
test
add
cwtl
add
adc
repz
into
inc
mov
mov
xchg
fwait
and
int
aam
xchg
xor
push
cmpsb
pop
cmp
sbb
out
push
add
int
and
sti
and
sbb
push
xor
add
fistps
push
clc
or
sbb
dec
fdivl
adc
pop
jecxz
mov
mov
cltd
push
mov
sub
cwtl
or
in
mov
inc
push
add
sub
mov
and
or
sbbl
mov
pushf
adc
stc
xor
jne
push
jo
mov
fildl
jmp
mov
daa
daa
add
in
cld
jle
sbb
mov
imul
cmp
adc
dec
pause
shlb
inc
pop
pop
nop
stos
dec
dec
and
stos
sbb
mov
in
xlat
xchg
dec
mov
ret
iret
pop
inc
cmp
outsb
pusha
aam
inc
hlt
and
gs
mov
nop
fildl
mov
dec
shrb
pop
cmova
xchg
pop
ret
sahf
fmul
xlat
sbb
ret
and
xchg
mov
ds
mov
sar
outsl
jge
mov
inc
xchg
int
popf
movsb
add
rclb
mov
adc
xor
repnz
mov
movsl
aam
mov
pop
rorb
xchg
inc
jo
or
addb
repnz
or
fisttps
lret
inc
popf
xchg
add
dec
xchg
adc
inc
or
jb
xor
aas
jno
imul
aaa
inc
loopne
sub
ja
jl
and
iret
or
push
and
mull
div
mov
fwait
sti
sub
add
xor
sbb
cmpsb
push
nop
inc
adc
pop
hlt
cmp
xor
out
and
mov
mov
pop
insl
cmpsl
dec
push
and
ror
adc
call
out
jl
push
mov
je
jge
aam
cmp
rolb
mov
sub
sub
dec
imul
pop
or
xchg
cmp
dec
dec
int3
aam
jne
pop
cmpsb
inc
mov
inc
add
or
push
insb
scas
mov
jl
pushf
fwait
stos
dec
or
lods
pushf
or
mov
jno
mov
inc
jl
clc
aam
jl
cmpsl
jle
mov
je
insb
ss
xor
xor
sbb
add
cmp
nop
inc
sti
out
pop
movsb
inc
mov
adc
fs
and
outsb
sbb
lock
cmpsl
mov
aaa
push
mov
outsb
pop
jnp
into
dec
jecxz
and
cmpsb
push
icebp
dec
loopne
jge
xor
and
data16
adc
out
xchg
aam
xchg
in
mov
imul
mov
xchg
insl
cmp
in
xchg
push
notl
or
mov
pop
push
inc
adc
mov
pop
add
test
push
lahf
or
call
mov
xchg
sbb
sti
sbb
mov
and
xor
dec
pusha
push
lods
cmpsl
insb
nop
lods
and
sbb
or
cmp
mov
sbb
mov
lea
pop
gs
or
rcll
mov
movsb
sub
rcrl
scas
mov
fsubr
cmc
lods
xchg
fmul
inc
shl
mov
cmp
pop
mov
loopne
notb
dec
insl
jmp
push
xchg
push
in
pop
addr16
jp
pushf
stos
mov
call
stos
sbb
ds
adc
xlat
xorb
sub
cmp
push
add
add
cmp
xor
js
iret
adc
cmpl
fwait
mov
ds
gs
aaa
idivl
mov
cmp
insb
cmpsl
arpl
les
mov
adc
push
inc
pop
mov
cmp
jp
aaa
mov
arpl
lret
push
cmpsb
inc
lea
std
xchg
cmp
inc
imul
sbb
pushf
popf
mov
outsb
insl
pushf
lods
mov
inc
pushl
insl
push
mov
jle
sarb
cltd
sbb
enter
imul
je
mov
xchg
pop
test
add
pop
or
shr
or
ss
xchg
lods
mov
mov
jecxz
xchg
ret
jns
or
inc
inc
inc
jbe
repnz
mov
fidivl
or
testl
jnp
jo
out
jecxz
push
repz
adc
sti
movsl
bound
add
mov
mov
inc
push
cli
faddp
sub
std
pop
mov
pop
jl
sbb
sbb
je
sub
out
addr16
mov
mov
insb
mov
push
add
jl
dec
push
add
in
fdivr
jno
cmp
rcl
jmp
xor
adc
inc
ljmp
in
adc
test
jae
mov
mov
push
sub
jne
daa
pushf
push
push
fdivr
inc
jns
pop
addb
and
cmpsl
sub
sbb
mov
mov
test
jo
xlat
xchg
int
es
out
pop
pop
and
aas
scas
mov
mov
lock
xor
push
fdivl
pushf
add
or
scas
pop
int
push
movsl
add
jae
pop
mov
xor
push
bt
lret
out
sti
cmc
stc
cmc
iret
push
jg
sub
mov
loopne
xor
stos
add
hlt
gs
mov
bound
or
mov
sbb
jle
outsb
aam
jp
and
add
xchg
jge
and
xlat
sbb
adc
fcomps
sbb
sbbl
dec
mov
ficompl
mov
push
mov
ljmp
jl
and
fadds
or
push
leave
pop
pop
sbb
and
rolb
pop
inc
pop
xchg
mov
stos
xor
popa
mov
sbb
mov
aad
jecxz
inc
out
mov
inc
fwait
pusha
pusha
sbb
loopne
mov
push
std
out
cmc
test
xchg
lods
std
push
nop
adc
mull
xbegin
lods
dec
add
mov
ret
xchg
jl
mov
pop
pop
push
push
inc
sub
test
in
inc
int
mov
pop
aaa
pop
fidivrs
and
inc
or
xchg
ds
and
mov
adc
or
push
mov
mov
cmc
mov
fwait
xor
adc
aaa
lods
popf
pop
xor
jb
test
jge
test
mov
repz
add
dec
fwait
mov
insb
sub
or
call
push
nop
rcl
or
cmp
arpl
aad
and
bound
cmp
or
jns
hlt
push
hlt
gs
aaa
dec
and
sub
cs
rcll
dec
aas
mov
fildl
push
mov
adc
nop
pop
mov
pop
das
mov
sti
leave
into
jmp
out
cmp
adc
push
ret
repz
push
mov
rorl
jo
jg
cld
jecxz
mov
out
pop
xrelease
ret
and
into
add
jp
loope
jne
or
rorb
into
bound
xor
xchg
xchg
mov
icebp
mov
subl
lea
or
pop
cmp
fcoml
scas
add
mov
mov
popa
push
icebp
sbb
and
leave
fdivl
xchg
pop
xchg
rcr
push
sti
ret
lods
push
xchg
and
in
push
mov
push
cmpsl
add
add
sub
and
pop
sti
dec
call
inc
fimuls
inc
cmp
jns
or
adcb
and
ret
mov
scas
jg
mov
lahf
int
xor
cmp
scas
mov
out
sbb
push
pop
xor
mov
xchg
dec
mov
push
pop
loop
jae
mov
je
dec
mov
mov
inc
push
das
push
xchg
inc
mov
xor
es
pop
xchg
data16
shlb
and
ljmp
shrl
sub
mov
out
xchg
xor
shlb
or
out
push
jp
inc
ficompl
cli
out
mov
loope
jbe
into
mov
imul
sbb
cmp
out
fs
push
push
add
test
imul
mov
add
sbb
mov
lods
dec
xor
xchg
cld
xchg
decl
or
cmp
shrl
mov
mov
sbb
jle
jge
popa
sbb
pop
rcl
lcall
mov
movsl
xchg
test
movsb
repnz
sbb
insl
fiadds
cmp
in
cmc
push
xchg
mov
sub
mov
mov
mov
sub
mull
sbb
mov
pop
jp
je
andl
daa
insb
loope
call
mov
fidivl
sbb
mov
mov
shll
in
mov
xchg
push
add
mov
cs
jge
jl
fldcw
jle
sub
mov
and
mov
gs
sub
mov
mov
xchg
andb
or
sbb
mov
push
mov
fisubrl
xor
dec
je
inc
rcr
aad
dec
data16
mov
in
notb
stos
xchg
loopne
xchg
je
push
aaa
push
ljmp
into
push
clc
mov
lds
mov
push
and
nop
ror
mov
mov
ret
mov
movsl
cmpb
ret
sub
repnz
mov
fwait
push
mov
mov
jae
mov
mov
and
pop
gs
push
sar
outsl
add
or
jae
sub
insb
dec
jmp
subb
repz
outsl
shll
ret
int
mov
pop
xchg
test
mov
or
sub
xchg
add
sti
fs
test
pop
mov
test
rcr
enter
xorb
cmp
dec
call
lret
int
sub
hlt
testl
cmp
pop
mov
mov
adc
push
sbb
cwtl
mov
fmuls
das
pop
inc
mov
pop
mov
pusha
sub
ret
lret
js
and
jp
push
add
movsb
cmp
les
mov
rcll
cli
inc
xchg
lahf
arpl
dec
mov
push
jmp
cmp
scas
loop
adc
clc
outsl
mov
sbb
mov
dec
xrelease
test
lahf
into
xchg
loop
mov
push
ret
cmp
add
jg
fcomps
movsl
rcll
leave
pushf
int3
aas
mov
in
ja
aam
sub
sbb
add
gs
or
jmp
push
mov
adc
sbb
lods
jl
shll
out
sbb
in
and
jns
ds
sub
into
mov
andb
sbb
jbe
fldt
std
jns
pop
lcall
sub
gs
push
test
mov
int3
xchg
out
adc
stc
lahf
mov
adc
sbb
ret
hlt
mov
mov
mov
insb
pushf
pushf
add
fcmovb
lret
mov
ret
fbld
sub
fcoml
out
xchg
push
mov
mov
cmp
pop
cmpsl
mov
addr16
push
xchg
jb
arpl
mov
arpl
sbb
dec
mov
jnp
jnp
ja
adc
jae
mov
add
inc
jae
jg
fcoml
repz
dec
insl
mov
fdiv
push
push
pop
dec
lds
pop
adc
jle
or
sub
imulb
push
test
xchg
test
xchg
pop
dec
and
pushf
push
dec
fimuls
or
stos
adc
xor
data16
pop
jnp
mov
shrl
mov
add
ret
and
push
push
mov
das
sub
inc
ja
mov
jp
pop
pop
pop
loopne
rolb
ss
mov
dec
pop
loop
mov
dec
dec
repnz
std
out
or
jno
stos
fisubrl
inc
pop
push
je
fdivr
add
shll
xchg
es
add
xchg
stc
push
cmp
cmp
out
inc
dec
ret
xlat
cmp
dec
stc
push
pop
or
jmp
mov
data16
loopne
cmp
sbb
loop
sub
jno
adc
cli
lods
mov
andl
dec
lret
hlt
scas
mov
pop
jae
movsl
inc
add
sub
mov
scas
mov
push
fldl
loopew
jecxz
ret
pop
sub
lcall
add
popa
jae
in
or
bound
mov
cli
and
lods
sub
stc
ficomps
add
inc
xlat
pop
rcll
mov
jae
ljmp
push
enter
cmp
pop
sbb
jbe
adc
mov
cmp
xchg
mov
nop
xchg
pop
add
xchg
mov
daa
movsb
pop
mov
xchg
popa
xor
push
nop
cmpsl
sysexit
sub
sub
lods
inc
adc
cmpsl
pusha
std
andb
ficompl
push
movl
adc
pop
adc
je
push
jb
sbb
mov
inc
cmc
in
push
sub
add
loopne
inc
mov
rcll
imul
pop
sbb
out
sub
call
jmp
in
add
dec
mov
or
push
pop
das
mov
es
dec
ss
fstpl
test
ljmp
adc
ret
lods
movl
popf
jg
add
dec
xchg
sub
inc
mov
fists
repz
xchg
pop
lock
js
pop
jecxz
xchg
in
adc
popa
cmp
out
jl
mov
sbb
xchg
bound
pop
stc
jns
add
mov
inc
jnp
jecxz
pop
fisubl
push
dec
and
cld
and
das
push
adc
or
sub
jp
popf
and
inc
imul
pop
mov
mov
inc
push
pop
jle
flds
loopne
imul
dec
lods
mov
mov
add
nop
adc
iret
rcl
out
shrl
mov
xor
mov
je
pop
and
fwait
movlps
add
and
dec
das
push
outsb
jl
and
mov
cmp
data16
cltd
icebp
outsl
cli
inc
sub
stos
stos
inc
push
xchg
stc
adc
in
aaa
sub
test
xlat
scas
dec
imul
add
pop
mov
sbb
movsl
sub
lea
dec
pop
lea
adc
iret
add
mov
repz
lcall
gs
cmp
popa
add
fistl
imul
cltd
jmp
roll
mov
cli
dec
sbb
in
xchg
sub
into
sub
insb
icebp
fwait
mov
or
sbb
mov
pop
lock
insb
or
or
fs
cmp
pop
das
pop
jns
cmpsb
jne
lret
cmp
stc
xchg
dec
imul
jb
push
adc
cmpsl
add
shrb
icebp
test
sbb
lods
faddl
js
mov
jb
cmp
cmc
jns
adc
dec
adc
xor
and
fxch
arpl
rcll
cmp
mov
roll
adc
fbld
out
push
inc
mov
adc
int3
ret
push
lods
mov
sub
fld
add
clc
jle
adc
popf
sbb
dec
into
inc
pop
sub
lods
pop
pop
push
sti
mov
divb
sbb
scas
scas
push
outsl
shlb
loopne
pop
addr16
sub
push
push
ret
pop
das
cltd
call
push
sbb
sbb
outsb
inc
jmp
and
daa
jmp
lcall
xchg
push
or
push
pop
adc
jmp
push
stos
insl
lahf
adc
and
stos
and
pop
pusha
rorl
lods
dec
pop
jle
outsb
or
and
lret
push
cmp
int
push
jmp
mov
sub
ret
jg
inc
dec
ret
push
jae
xchg
jnp
push
sbb
fiaddl
push
out
jne
imulb
jecxz
out
stos
inc
fldenv
insb
dec
add
lea
adc
rcr
push
fsubr
push
lods
mov
xchg
cmc
ds
fwait
inc
mov
es
test
adc
test
push
dec
insl
stos
addr16
xchg
dec
push
lcall
jl
sub
jl
mov
inc
rclb
loopne
cmp
ret
dec
sub
cmp
mov
mov
pop
dec
fsts
sbb
mov
dec
push
into
cmpsb
fstps
or
mov
nop
or
and
fisubl
push
adc
or
dec
adc
and
lea
xchg
push
adc
jne
pop
add
mov
dec
por
sub
in
in
cld
out
sub
inc
xchg
dec
leave
test
pop
pop
inc
cmp
js
adc
sub
fidivrs
mov
mov
or
hlt
je
jp
mov
loope
fadd
clc
add
cmpsb
dec
mov
into
pop
pop
sbb
gs
mov
les
xchg
push
in
add
pop
mov
outsl
stos
int
out
dec
in
jns
mov
jb
dec
xchg
jmp
pop
pop
adc
sub
stos
popa
or
cli
or
sbb
cwtl
sbb
jg
test
out
dec
adc
sbb
sub
into
dec
mov
inc
test
or
sarb
inc
dec
mov
cmp
test
es
sub
cmc
pop
push
in
sbb
popf
ret
sub
movsl
sbb
das
or
xor
cmp
inc
stos
int
adcl
or
mov
cmp
xor
lea
dec
mov
decb
test
mov
pushf
push
arpl
and
rolb
fwait
addl
jnp
scas
mov
mov
into
cwtl
daa
sbb
mov
mov
add
push
scas
jge
cld
cli
add
in
inc
pusha
pop
cmp
out
lret
fdivr
leave
lds
popf
out
lds
sarb
cmp
and
mov
dec
leave
pop
xor
xchg
sbb
jmp
sahf
into
shlb
mov
frstor
jp
andl
mov
or
jg
inc
xor
popa
cwtl
test
and
jbe
lret
mov
or
repnz
movsl
or
fwait
stos
mov
mov
ret
dec
sbb
mov
mov
fsubrl
cmpsb
sbb
idivl
test
fwait
mov
add
fldcw
testl
pop
xchg
adc
or
lahf
jne
loopne
jae
mov
mov
sbb
push
lret
out
or
fisttpl
sahf
add
ret
mov
mov
adc
push
mov
xlat
and
insl
lods
cmpl
stos
xchg
dec
mov
lock
push
push
jecxz
mov
mov
andb
xchg
iret
daa
xchg
xor
outsb
jns
rorb
and
out
mov
ljmp
enter
pop
or
aam
xchg
mov
adc
xor
cmp
or
ds
int3
sbb
fcoml
ficompl
pop
pop
arpl
loopne
inc
test
mov
es
mov
fcomp
pop
jg
fmulp
cmp
shlb
cmc
dec
vpsllw
cmp
in
pop
in
scas
jmp
sbb
test
fwait
addr16
outsl
mov
ds
adc
pop
pushf
sub
mov
or
push
fwait
test
into
cmp
lea
sub
cld
pop
adc
mov
les
ret
cmpsb
inc
push
adc
dec
xchg
ret
mov
mov
aaa
sub
xor
sub
jo
lods
pop
sbb
sub
pop
test
jmp
or
aaa
arpl
dec
jbe
pop
int
push
mov
mov
stc
push
jp
inc
frstor
out
push
je
sbb
inc
pop
mov
inc
jno
inc
ds
pop
and
mov
jo
ja
or
adc
loop
push
scas
sbb
out
aad
cmp
adc
mov
lds
add
mov
or
mov
aas
out
repnz
in
nop
aam
mov
nop
sbb
jle
jp
mov
ret
clc
fnstcw
test
ss
daa
lret
dec
fnstenv
sysenter
lea
cld
inc
jo
xor
jp
hlt
insl
jle
sbb
test
imul
shrb
loopne
aam
ret
andb
int
das
ljmp
mov
push
mov
mov
scas
inc
mov
cmp
sub
and
leave
push
jecxz
jle
mov
cmp
icebp
scas
mov
popf
addb
outsl
leave
pop
xlat
pop
ljmp
mov
cmp
insb
shrl
pop
ret
mov
sub
lods
dec
xchg
dec
loop
mov
test
dec
iret
mov
outsl
mov
aam
ret
sub
lods
jg
test
adc
repnz
cmpsl
ret
sahf
jae
xlat
xchg
ljmp
xchg
mov
outsb
adc
mov
neg
cmp
ret
dec
mov
inc
insl
and
loopne
test
cmp
int
sbb
popf
es
mov
popf
mov
sub
int
mov
inc
cmp
rorb
mov
cmpb
pop
loopne
xlat
popa
dec
fwait
sbb
std
idivl
sbb
iret
mov
mov
xor
jo
ljmp
fimull
and
addr16
les
jmp
xchg
push
pop
stos
jg
or
cmpl
mov
je
lret
pop
negb
pop
mov
sahf
push
add
sub
jmp
push
adcb
mov
fcomps
pusha
jne
arpl
fcomp
push
sbb
lock
hlt
out
popa
and
push
sti
testb
mov
adc
push
mov
cmp
jecxz
rolb
into
xchg
stos
push
pop
inc
mov
ss
and
mov
lahf
mov
imul
xchg
and
pop
movl
mov
mov
jecxz
les
push
lds
nop
call
mov
mov
pop
xor
ss
std
push
and
stc
add
lods
dec
in
xor
xabort
insl
mov
sub
pop
int
sbb
into
xchg
fldl
and
pop
and
and
pop
rcll
mov
push
mov
inc
leave
imull
movsl
out
sub
in
inc
divb
movsb
xor
lock
insl
mov
in
pusha
filds
xlat
in
sbb
icebp
add
in
hlt
jns
mov
cmpsb
inc
arpl
test
pop
adc
ljmp
mov
xchg
xor
pushf
mov
xchg
popa
pop
sub
insl
fildll
out
jg
dec
xchg
js
add
int
movsb
cmpsb
hlt
into
xlat
dec
call
ss
sbb
imul
fldl
cmpsl
xchg
pushf
sbbb
sahf
cmp
loop
clc
bound
in
and
and
pop
and
orl
cmp
push
std
sub
in
xor
into
lods
nop
or
loop
popf
repnz
or
into
sar
ds
lock
mov
sbbl
sub
movsb
dec
and
hlt
xchg
cmp
leave
and
stos
cmpsb
mov
cmp
inc
mov
addb
rcl
les
mov
and
xor
test
mov
clc
notb
push
sub
les
test
data16
xchg
insl
sub
inc
in
push
or
jbe
inc
sub
sahf
mov
mov
es
out
mov
adc
or
jl
mov
sub
mov
sarb
repnz
imul
mov
ret
ss
insb
pop
ljmp
push
cmp
adc
in
jno
test
addr16
mov
pop
ljmp
inc
xchg
hlt
mov
push
cmp
sub
sbb
xor
dec
into
sti
into
test
out
fcomps
mov
aas
shr
and
push
pop
stc
ja
movsb
lret
jp
jmp
ret
loop
inc
loop
mov
ficomps
repz
movsb
mov
fiadds
and
shlb
push
ds
push
mov
xor
fildl
xor
jp
out
pusha
std
or
xor
daa
mov
jecxz
ja
aas
xor
or
push
xchg
push
das
fadds
push
mov
andb
out
jle
mov
adc
push
inc
add
pushf
adc
loopne
aad
fwait
ss
or
daa
jg
fdivrs
movsb
jmp
das
xor
dec
cld
add
push
pop
in
aaa
dec
cwtl
pop
les
js
leave
add
roll
mov
mov
xchg
loop
push
dec
and
ficoms
loop
dec
ret
mov
div
ljmp
dec
sub
cmp
sbbl
sbb
insl
stc
or
push
loope
cld
out
std
test
pop
mov
adc
out
clc
ss
adc
out
fstl
insb
lret
shll
loop
pop
mov
fwait
pop
enter
lret
daa
xchg
add
sbb
pop
andl
xchg
jns
add
jne
jp
push
inc
mov
mov
imul
or
xchg
xchg
dec
or
out
fucomp
sbb
cmp
std
push
jbe
test
jmp
push
es
or
cmpb
sbb
int3
sub
in
insb
insl
enter
adcl
mov
cmp
add
xlat
xchg
sub
mov
cmp
adc
adc
lds
movsb
xchg
bound
clc
fistpl
cmp
imul
loope
fwait
mov
mov
enter
mov
out
mov
or
mov
adc
cmp
test
sub
sti
add
adc
cmp
test
sbb
jle
mov
mov
into
fmuls
mov
adc
ret
mov
into
push
and
js
xor
jl
jne
loopne
push
rorb
sbb
cmp
cwtl
push
xorl
fs
rorl
mov
jge
add
mov
mov
push
pop
sti
jg
xlat
mov
in
push
sbb
scas
ss
stc
xor
aam
aad
lods
mov
ja
push
test
and
fisubrl
jp
rolb
mov
sbb
jge
pop
js
and
shlb
ret
sbb
adc
test
sbb
shll
inc
sub
subl
gs
das
loope
mov
dec
sub
sbb
dec
dec
mov
adc
stos
jnp
and
fidivl
mov
cs
and
loop
sbb
and
inc
je
addr16
stc
and
pop
ret
and
xchg
cmc
add
insl
lahf
or
jne
lods
cmp
pop
cmp
pop
aas
sbb
lret
sub
lods
fndisi(8087
lahf
insb
aaa
ljmp
mov
leave
ja
and
dec
cmp
inc
lcall
out
clc
cltd
mov
fsubrl
jl
pop
sbb
leave
test
scas
mov
mov
fabs
stos
notb
inc
xchg
cmp
movl
cmp
cmp
mov
loop
xchg
jmp
dec
lds
push
std
fnsave
mov
xchg
cmp
dec
mov
std
push
rorb
mov
subb
enter
arpl
inc
imul
push
jbe
shll
into
add
and
pop
js
mov
les
pusha
push
mov
aaa
sub
mov
sbb
mov
mov
sti
insb
dec
dec
out
pop
sahf
jb
lods
jecxz
hlt
sbb
cmp
cmp
mov
and
cmp
pop
add
fbld
jbe
inc
mov
rorb
mov
dec
cmc
les
incb
mov
mov
dec
lea
sbb
and
aas
adc
pop
les
jns
rol
jo
call
mov
and
lea
and
aad
cwtl
jae
adc
je
jbe
jbe
jo
leave
stos
xor
icebp
or
ror
icebp
daa
decb
imul
jae
or
dec
pop
fidivrl
push
cmp
jb
push
outsb
imul
dec
cmp
in
pop
sub
add
lods
adc
inc
test
push
cmp
xor
dec
inc
rcrb
jnp
mov
mov
add
push
xor
fiaddl
push
dec
mov
hlt
jnp
ret
jb
fldl
test
cmpb
leave
mov
xlat
and
pop
loop
fidivs
pop
inc
push
adc
mov
insl
mov
aas
fs
ds
repnz
push
push
ds
mov
out
jnp
mov
and
or
in
das
jl
mov
pop
sbb
scas
loope
xor
and
add
dec
inc
scas
cld
mov
mov
add
mov
filds
mov
insl
dec
hlt
adc
inc
scas
pop
push
cwtl
test
pop
mov
mov
ljmp
call
xchg
shrb
mull
out
jb
std
mov
je
mov
xchg
mov
mov
int3
cmpb
jle
inc
daa
inc
ret
xlat
fldenv
rcll
mov
fldt
movsb
insl
pop
gs
ficoml
and
shll
jl
std
adc
rcrl
jecxz
adc
pop
hlt
lock
int
addr16
mov
out
xor
inc
and
fisubl
mov
add
daa
or
jle
mov
repz
adc
mov
xchg
push
int
jg
out
aaa
loop
mov
out
and
push
xlat
cwtl
lret
pop
test
rcrl
out
push
orb
inc
out
movsl
into
leave
mov
xor
dec
jle
mov
lods
mov
dec
cmp
sbb
mov
aaa
sbbl
sub
dec
test
cli
jo
dec
orb
inc
js
pop
cmp
sbb
test
jecxz
cmpsb
or
sub
stos
sbb
aaa
xlat
and
sub
inc
imul
shrl
js
mov
ret
pop
mov
jb
aas
rcll
jl
js
or
dec
movntps
or
sub
or
pop
sub
nop
arpl
jbe
inc
pop
push
dec
cs
repnz
bound
push
add
icebp
push
lahf
mov
mov
aas
jo
mov
mov
push
sbb
out
bsf
push
fwait
dec
and
xchg
aas
cwtl
lods
push
addl
jmp
inc
lea
add
ja
test
mov
insl
adc
pop
cwtl
cmpsb
out
sub
adc
sbb
push
psubsw
icebp
in
mov
mov
push
mov
mov
mov
scas
mov
xchg
or
lret
orl
cli
rclb
test
inc
jg
xchg
lods
mov
rcrb
jbe
inc
mov
mov
push
shll
jns
or
mov
mov
imul
andb
adc
or
push
xchg
jns
pop
or
mov
pop
mov
lret
bound
notb
into
xor
lret
sbb
mov
cld
sbbb
orb
xor
push
mov
push
push
inc
add
cmp
push
outsb
cmp
stos
test
andl
jg
test
pop
xchg
incb
jo
pusha
adc
bound
addr16
movsb
test
and
orl
clc
add
cmpsb
nop
pop
inc
push
out
nop
lcall
inc
cmp
inc
sti
inc
sbbb
in
mulb
and
hlt
cmpsl
or
loop
inc
pop
xchg
jg
cli
aaa
fwait
or
test
xor
jne
push
inc
jo
push
pop
clc
pop
ss
and
adc
sub
ljmp
test
mov
lcall
xchg
loope
std
cmpsl
aam
es
add
and
or
mov
fldt
sahf
iret
mov
cmp
lods
outsb
xor
pop
inc
aad
out
sar
sbb
fwait
or
inc
test
stc
push
cmpsb
pop
pop
mov
sti
push
not
js
push
rol
add
nop
jmp
jmp
jo
loope
out
cmpsl
repnz
stos
push
fadds
movsb
jle
es
xchg
in
pushf
adc
mov
imul
push
jb
jae
jae
mov
lahf
xchg
mov
loope
push
fdivl
pop
mov
inc
loope
sahf
or
mov
push
popa
mov
fld1
mov
enter
mov
lret
xor
xchg
roll
pushf
cmp
mov
cmpsl
jno
xchg
imul
lret
movsl
pop
or
xor
add
xchg
xchg
sti
push
cli
jp
mov
inc
ficomps
add
js
fmull
xor
xor
push
stc
mulb
in
dec
push
inc
arpl
pop
jmp
ret
std
bswap
adc
js
ja
inc
mov
or
pop
inc
sbb
pop
call
jge
dec
pop
into
add
adc
hlt
push
cmp
inc
loope
sub
xor
inc
pusha
daa
lds
sub
inc
mov
leave
pop
or
jecxz
jbe
repz
and
pop
bound
fs
pop
push
or
sbb
add
xor
sbbl
cmpsl
fcomps
sti
scas
or
rclb
in
mov
xor
mov
sub
mov
adc
stos
xchg
pop
jmp
or
sbb
or
nop
sub
hlt
loop
or
xor
or
std
xor
int
adc
mov
repnz
lds
pushf
dec
xchg
jge
mov
push
mov
pop
xor
out
ss
fmuls
test
fisubs
adc
jmp
mov
push
sahf
dec
jno
in
cmpl
lret
test
cli
mov
mov
push
inc
cmp
sub
scas
pop
enter
push
fcmovne
fwait
test
xorl
inc
mov
add
jle
or
ss
xchg
push
stc
dec
into
iret
cmp
pop
or
test
mov
mov
push
mov
mov
add
sti
std
bound
mov
leave
ret
mov
popa
hlt
cli
repz
jno
iret
mov
sbb
rcrb
lods
dec
addl
enter
roll
sub
iret
mov
arpl
test
insb
pop
arpl
sbbb
enter
arpl
lret
inc
nop
addl
outsl
mov
rcrl
xlat
sbb
cmc
or
loopne
jnp
cs
gs
cmp
pop
xchg
sbb
bound
divb
enter
inc
pushf
push
movsl
mov
loop
enter
xor
fildl
mov
or
jmp
adc
mov
pop
popl
mov
sbb
push
sbb
movsl
push
aam
aad
push
jbe
jae
sub
and
pushf
inc
jno
push
push
jmp
arpl
cmp
cmpsb
je
xor
mov
test
mov
or
mov
inc
stc
adc
lret
popl
mov
add
in
call
bound
test
jns
mov
pop
popa
mov
mov
imul
pop
mov
adc
inc
add
in
testb
ret
pop
shl
inc
mov
push
adc
or
inc
push
popf
xchg
jnp
movsl
pop
and
out
and
ja
sub
mov
mov
push
pop
pop
repnz
loop
push
jmp
out
xchg
pop
fdivrl
cmp
adc
xchg
jl
mov
js
push
outsl
mov
ret
jbe
dec
cld
xor
movsb
outsl
cmp
jne
jmp
inc
sub
ss
in
in
rcrb
inc
xchg
outsl
test
mov
dec
pop
aad
mov
outsl
ja
add
cld
cld
xor
or
jae
mov
icebp
imul
jle
sub
rcr
mov
push
icebp
push
ss
adc
lods
push
adc
les
mov
nop
pop
xor
adc
repnz
icebp
mov
aam
jns
xchg
sbb
sub
fwait
pop
mov
inc
lcall
sbb
in
pop
cld
dec
add
in
xchg
inc
rorb
mov
push
popa
push
div
lea
aas
adc
inc
push
cwtl
ret
movsb
or
pcmpeqb
inc
xor
in
mov
mov
dec
in
imul
popf
dec
das
dec
repnz
jae
sub
xchg
push
push
jbe
scas
mov
inc
pushl
push
shrl
sti
ss
movsl
aam
popf
lds
mov
lods
cmpxchg
lret
int3
add
cmpl
rcl
lret
mov
adc
shl
and
je
and
mov
lcall
pop
loopne
in
jmp
mov
fdivs
mov
push
xchg
cli
loope
inc
es
popa
addr16
inc
pop
add
cmp
rolb
fldt
mov
sub
push
jge
add
pop
mov
call
pop
or
mov
xor
fcoms
adc
pushf
dec
xchg
and
mov
cmpsb
inc
push
mov
adc
add
cmp
into
xor
mov
add
xchg
xor
out
adc
xor
jle
push
mov
pop
and
lds
outsb
scas
or
xor
stos
shll
or
cmpsb
or
sbb
dec
jae
pop
ljmp
insl
call
and
das
lds
mov
cld
lea
mov
mov
in
test
out
jnp
scas
nop
sbb
fwait
andb
loope
int3
xchg
push
jnp
sub
outsl
aaa
pop
mov
push
test
sub
mov
dec
jbe
stos
inc
fadds
mov
cmpsl
movsb
cltd
sbb
stc
mov
lock
aad
cmc
pusha
adc
adc
enter
xor
leave
mov
dec
inc
sbb
movsb
mov
adc
sti
add
mov
negb
push
loopne
sti
dec
or
jb
mov
mov
cltd
push
xorl
imul
adc
scas
test
cmpsb
es
pop
ret
mov
and
pop
lods
aas
adc
aad
cmp
pop
xchg
outsl
gs
mov
adc
das
mov
in
jl
cmpsl
push
call
loopne
or
std
js
or
and
push
fld
es
fwait
pusha
mov
inc
or
sbb
ljmp
out
les
mov
cmpl
sub
js
sub
xor
pop
nop
xchg
test
jp
pop
mov
jb
and
mov
mov
adc
in
pusha
cmp
mov
push
or
pushf
pop
clc
stc
outsl
shrl
or
out
fsubs
push
mov
or
pop
jae
andb
push
jae
jl
imulb
aaa
mov
push
jnp
lahf
fidivl
lahf
mov
pop
cs
jae
fidivs
bound
mov
add
inc
xchg
adc
sarl
mov
insl
gs
mov
movsl
fstpt
nop
dec
xchg
sub
pusha
lcall
jns
xchg
pushf
ja
xchg
sbbb
fadds
xchg
mov
push
lahf
mov
and
cltd
lea
adc
add
sbb
cmpsl
fmuls
rcl
mov
add
cmp
jae
aam
dec
cmpsl
sbb
jnp
into
add
sbb
std
mov
xor
int
int3
mov
call
out
in
or
outsl
and
ficomps
aaa
cld
xor
or
mov
push
scas
lds
es
fimull
es
adc
xor
mov
cmc
xor
fsubp
xchg
imul
jo
or
or
shll
lcall
int
out
test
mov
into
movsl
mov
dec
jbe
pusha
in
mov
sbb
mov
and
push
mov
adc
push
mov
and
sub
pop
inc
test
js
and
mov
mov
xchg
mov
ret
lods
xor
scas
fisubs
mov
test
add
test
mov
fisubrl
mov
sbb
pop
push
es
xchg
aaa
sbb
test
mov
aad
lock
inc
sti
stc
xchg
lahf
fstl
pop
orb
in
scas
mov
adc
inc
test
lds
fdiv
je
rclb
ja
xchg
jbe
push
clts
movsb
cld
nop
push
stos
and
mov
xchg
ret
out
mov
sbbb
mov
rcrl
lods
mov
loopne
sub
mov
data16
jbe
cmp
cld
sub
and
adc
pop
push
ret
in
xchg
imul
iret
iret
cltd
add
lods
inc
out
divb
fwait
mov
dec
dec
aam
mov
xor
adc
stc
inc
int3
push
mov
insb
mov
adcl
pop
push
adc
sar
lret
push
pop
add
and
lcall
mov
mov
enter
pusha
pop
js
aas
jl
dec
inc
jne
lods
movsl
push
clc
push
fisubrl
adc
aad
or
pop
jl
clc
jg
in
or
mov
aas
push
mov
mov
addr16
cmp
sub
hlt
in
std
and
dec
not
add
fnstenv
add
cmc
add
paddq
or
aaa
out
sub
and
pop
psllw
sarb
pop
inc
sbb
nop
or
lahf
lock
adc
add
sub
or
nop
or
cmpsl
fldcw
enter
rorb
loop
in
fsubrl
xor
stc
aad
cmp
loop
lret
mov
sub
sub
pushl
cmp
mov
xor
and
scas
mov
in
sbb
and
mov
mov
cmpb
int
fisttpll
hlt
fcoml
push
in
ja
or
ret
outsb
rcll
add
in
andb
test
xor
and
push
out
add
in
mov
ret
jg
arpl
cmpsl
fsubrl
dec
dec
js
outsb
cmp
pusha
xchg
xchg
dec
mov
fs
sub
mov
xchg
shll
jnp
dec
fs
es
ret
dec
or
sub
orl
cli
cmp
imul
aas
or
ret
jae
adc
movsl
cwtl
add
push
pop
pop
jecxz
rcl
sahf
fbstp
cs
fisttpl
cmpsb
jne
push
jns
jmp
outsl
nop
andb
ss
in
je
xor
xchg
mov
shrl
lea
mov
dec
dec
cli
int3
xlat
aad
lods
dec
loope
or
xor
push
mov
push
sub
adc
mov
movsb
divb
xchg
ds
out
xchg
jmp
fmul
add
mov
inc
nop
sub
pop
xor
les
hlt
inc
dec
dec
dec
in
std
inc
ljmp
sub
loop
and
outsl
inc
push
test
pop
xchg
jae
add
bound
mov
pop
lcall
cltd
xchg
sub
rorb
rorl
sbb
cld
es
sbb
aaa
aad
push
lahf
mov
add
add
push
xchg
sti
cmp
scas
xchg
jecxz
aam
daa
xchg
mov
mov
adc
xor
cltd
mov
jbe
in
popf
jns
inc
xchg
mov
inc
icebp
mov
rcr
loop
dec
je
jg
and
aas
sub
adc
imulb
pusha
fwait
test
das
and
fmul
or
inc
lods
test
repz
das
jo
pop
jo
jmp
inc
inc
jns
sahf
repz
rorl
pop
and
xor
cmp
test
inc
push
add
fwait
test
lcall
iret
inc
ljmp
movb
adc
xchg
lock
shr
mov
xchg
cmovnp
mov
mov
pushf
cs
mov
in
hlt
cmpsb
push
aad
add
sbb
pop
add
in
shll
pop
xchg
push
pop
cli
ljmp
inc
testl
pop
pop
or
sahf
fdiv
into
add
sbb
fstl
sar
or
and
dec
pop
sbb
mov
mov
and
mov
inc
xlat
jge
popf
bound
push
add
aaa
fldl
xor
xchg
lahf
and
sub
lea
fcomp
or
addb
out
es
adc
shl
push
jb
jbe
in
ficoms
scas
jecxz
test
inc
pop
xchg
or
pop
in
ret
data16
adc
hlt
dec
pop
mov
or
leave
test
dec
test
gs
inc
pop
add
movsl
jb
adc
es
add
sbbb
cmp
gs
aad
adc
jns
ljmp
jo
nop
add
inc
mov
sar
inc
lea
mov
cmp
ljmp
mov
and
repnz
testb
int
xor
jmp
dec
imul
lock
aaa
sti
js
sbb
jle
outsl
test
mov
sbb
or
dec
test
jg
mov
add
sbb
pusha
popfw
orb
pop
inc
xor
and
sub
in
outsb
pushf
push
fs
xchg
push
pushf
rcll
in
movsl
inc
call
mov
mov
jbe
inc
iret
stos
shrl
lcall
out
cmp
gs
js
fisubrs
ret
xor
push
add
mov
xor
mov
rorb
inc
xchg
xchg
in
push
xor
add
in
and
cmp
or
cmpl
sbb
dec
test
jle
popa
mov
mov
push
push
inc
push
lds
adc
sbb
xchg
inc
ja
rcl
sti
and
xchg
jmp
jp,pn
push
addr16
jnp
jae
xchg
push
movsb
std
pusha
add
cmp
fidivl
inc
loopne
xchg
dec
inc
clc
sahf
scas
pusha
pop
and
sahf
data16
jl
leave
jb
fnstcw
pop
inc
notl
mov
cmc
imul
add
xchg
mov
push
mov
pop
and
test
xchg
xor
lcall
mov
jp
outsb
insb
je
movsl
rcr
in
outsb
popa
mov
xchg
testl
pop
repnz
jge
jecxz
insb
cmpsl
adc
sub
inc
mul
les
shr
jle
ja
dec
inc
mov
inc
ss
test
mov
xor
sar
or
js
loope
mov
insl
jmp
jcxz
es
jmp
stos
xchg
lea
mov
inc
inc
push
adc
inc
cwtl
cmp
sub
push
pop
sub
dec
sbb
addl
imulb
iret
hlt
mov
xchg
lahf
cld
xchg
sub
clc
push
sub
in
sub
loopne
xor
rol
rcr
push
daa
lds
es
sbb
xlat
pop
shll
pop
ds
inc
ja
jns
std
lods
faddl
bound
lods
sarb
arpl
loope
jo
xlat
out
or
shl
push
jecxz
movsb
xchg
mov
xor
xor
or
pop
aas
jns
dec
push
aas
icebp
xchg
out
dec
leave
out
push
adc
mov
jns
cmpsb
int3
cs
add
mov
and
push
mov
inc
mov
testl
pop
stc
cld
nop
mov
xchg
movsb
mov
outsb
gs
test
cmpl
inc
cld
xchg
in
rclb
outsl
andb
mov
or
aad
mov
and
sub
stc
lcall
push
fiaddl
aam
pop
mov
mov
push
in
cltd
icebp
inc
leave
cmp
xchg
or
pop
pushf
jge
test
aam
or
out
scas
dec
ficomps
pop
iret
sahf
xchg
aaa
pushf
lds
xchg
cmp
fld
jns
fldenv
ds
movsb
in
adc
push
dec
sub
add
mov
fadds
dec
and
pop
cwtl
punpcklbw
cmp
xchg
adc
xor
push
push
adc
add
lock
and
xchg
mov
stos
or
cwtl
rorb
mov
popf
push
lock
adc
cmp
in
jl
add
xor
je
sbb
pushf
mov
test
hlt
jae
adc
hlt
loopne
cld
adc
fcmovu
jb
or
add
int
popf
xor
xlat
xchg
js
dec
test
or
test
les
xor
fneni(8087
add
fsts
cmpsb
pop
pusha
test
mov
jb
sti
mov
mov
test
pop
jns
xor
imul
xor
pop
inc
pusha
pop
inc
sbb
out
outsl
adc
sub
fdivs
cmp
loopne
cmpsl
dec
xchg
lock
jecxz
sub
lock
rcr
push
cmp
movsl
pop
lea
rorb
lahf
adc
jo
cmp
jp
xor
mov
icebp
fcmovnu
jae
rorb
cmpsb
jmp
lea
pusha
mov
cmp
ja
dec
iret
xorb
inc
sar
cs
pop
mov
xor
shr
test
out
cmpb
mov
mov
push
lret
incb
stos
sub
push
jbe
iret
fucom
es
xor
fbld
movsl
gs
cmp
jb
mov
sbb
outsl
and
aaa
fucomp
fs
xchg
pop
mov
mov
es
cltd
dec
adc
push
scas
sub
jmp
out
add
add
add
std
xchg
aad
jmp
push
insb
pop
lods
cmpsb
mov
push
addl
xchg
cs
pop
ret
jbe
ror
lods
jmp
mov
iret
sbb
out
adc
subb
cli
pushl
mov
jno
loopne
push
push
xorl
jo
mov
lods
and
push
cwtl
pop
sbb
or
xchg
sets
jmp
jecxz
sti
out
rcrl
dec
cwtl
int3
add
xlat
inc
cmc
dec
xchg
mov
pop
add
sub
stos
rolb
inc
sub
dec
mov
insl
mov
sub
repz
sti
in
adc
leave
pop
out
aam
arpl
lock
cmp
mov
dec
mov
xchg
sub
jp
push
jecxz
cs
mov
add
inc
jl
adc
inc
shl
idivb
add
dec
popw
push
cltd
jge
mov
call
psubd
xchg
cli
xchg
add
pop
adc
pop
jo
push
enter
jmp
xor
lcall
subl
or
test
insb
lea
in
jl
fnsave
pop
mov
fidivs
pop
cmpsb
xor
aad
jp
movsl
fisubl
jnp
mov
mov
and
aad
das
pushf
test
mov
mov
lds
mov
pop
insb
mov
loopne
push
adc
test
add
popa
daa
pop
mov
push
shll
xchg
icebp
popl
outsl
clc
popf
adc
or
popf
inc
sub
popa
enter
scas
or
sbb
or
and
xor
dec
xchg
in
lret
mov
xchg
divb
xchg
hlt
into
sub
cmpsl
fs
test
fcoml
jmp
adcl
cmc
pop
cld
out
dec
ljmp
out
adc
inc
in
jne
xchg
mov
inc
xchg
and
push
in
sbb
scas
out
xchg
incl
cwtl
popf
dec
bound
test
mov
mov
jmp
cmpsb
sbb
sub
xor
push
mov
sub
mov
push
cmp
lcall
cltd
xor
add
nop
gs
sbb
out
jle
outsl
push
lret
shl
inc
jnp
mov
inc
adc
repnz
adc
jle
rcrb
push
pusha
mov
call
sub
pop
ror
pop
out
push
jle
aad
into
into
movsb
inc
data16
popa
lds
and
inc
sub
inc
or
pop
ds
out
retw
je
cld
inc
cmpsb
in
gs
jb
jbe
mov
xchg
jbe
leave
outsb
insb
imul
out
or
mov
inc
mov
pop
fmuls
fcoml
cltd
call
xchg
insb
pop
popa
lret
mov
test
rolb
in
adc
mov
cmp
out
xchg
mov
mov
icebp
lret
into
pop
xchg
sbb
loopne
sbb
repnz
call
push
fdivl
nop
mov
rcll
jl
fiaddl
or
jmp
arpl
mov
adc
shll
int3
rcl
out
adcb
out
outsl
jno
push
or
fildll
mov
dec
inc
or
mov
icebp
frstor
xchg
ss
js
jmp
push
mov
sti
xchg
in
and
mov
imul
and
out
je
insb
add
enter
sahf
mov
sbb
mov
add
mov
and
dec
cmp
cli
adc
adc
mov
add
test
mov
xchg
mov
shr
shl
mov
sarl
aam
sub
mov
mov
stc
dec
sub
pop
les
daa
xchg
insl
jmp
dec
xchg
imul
pop
scas
and
jne
lret
sbb
insb
sub
daa
lcall
adc
push
mov
cltd
ja
lret
cmpsl
dec
cltd
adc
fisubrl
mov
push
sub
andl
push
data16
sub
in
mov
lods
jg
add
dec
mov
imul
jl
cs
ss
jmp
jno
pop
gs
cltd
pop
sahf
pop
lods
mov
imul
fistl
insb
adc
pop
and
mov
push
or
pop
xchg
mov
aad
push
dec
push
mov
das
popa
xor
repz
fldl
fists
cs
inc
mov
outsl
xlat
in
sahf
lods
cli
mov
cmp
mov
inc
repz
cwtl
std
sbb
cmp
mov
nop
ret
cmp
je
fcoms
dec
loopne
js
push
pop
jmp
fistps
xlat
jecxz
mov
inc
mov
or
fistps
jmp
pop
sarl
push
clc
adc
pop
test
inc
imul
xchg
mov
sub
sahf
dec
jne
and
arpl
div
inc
cmc
sbb
in
js
jmp
ljmp
push
addr16
mov
sti
mov
loopne
mov
scas
in
rolb
xchg
ror
daa
cmp
mov
adc
xchg
insl
jbe
pushf
repz
or
and
cli
push
jae
cmp
xchg
dec
repnz
inc
ss
cmp
xor
pop
rorl
dec
mov
leave
cmpb
mov
test
push
and
jo
mov
int3
adc
add
stos
mov
shll
mov
push
mov
and
push
scas
daa
push
cmc
mov
mov
cmc
insl
jno
cmp
xor
fldenv
fstp
lcall
mov
ds
adcb
repz
lea
in
xchg
loope
rcr
pop
hlt
jecxz
mov
push
push
mov
lcall
adc
cmp
mov
push
dec
sbb
sbb
jno
fistps
pop
sbb
sub
mov
mov
mov
lret
outsl
mov
negb
loopne
jle
pop
inc
mov
add
leave
jecxz
sbb
mov
add
fldt
xchg
pop
clc
push
cmc
cmp
push
cli
inc
and
out
fdivs
mov
ror
jno
add
out
mov
aas
sbb
loopne
adc
dec
nop
add
repnz
inc
mov
push
lea
lods
pop
int
xor
sahf
xor
ljmp
scas
adc
mov
jno
enter
mov
mov
and
lret
mov
leave
add
popf
movsl
outsl
mov
or
sub
insl
adc
and
stos
fstps
add
in
dec
and
jl
lds
arpl
stc
test
xchg
jmp
stos
add
bound
hlt
or
cmp
jns
out
mov
add
pop
ret
cmpsb
fidivs
dec
xor
jmp
sbb
jo
adc
xor
cmp
add
inc
push
jl
jle
jb
push
andnps
and
sbb
lea
popa
xor
sub
add
jge
fwait
scas
lea
or
hlt
adc
mov
nop
int3
mov
imul
clc
imul
or
or
push
mov
xchg
add
insl
aad
push
fsts
sub
rolb
loopne
xchg
outsl
std
fsts
jno
xchg
pop
lods
mov
adc
jbe
jns
adc
mulb
roll
aad
add
pop
mov
shll
insl
loopne
incl
pusha
adc
enter
insl
insl
sub
fsts
cmp
in
pop
lea
sub
push
out
sub
push
xor
rcr
in
mov
mov
loopne
mov
ficompl
imul
in
out
movsl
std
sbb
mov
fsub
jne
sbb
adc
xor
fs
fadds
dec
cltd
sahf
push
js
adc
mov
stos
in
push
in
xchg
cmp
nop
dec
jb
icebp
pop
add
lret
mov
pop
push
jge
cmpb
xor
jae
ja
inc
lahf
cltd
bound
xorb
mov
cmp
icebp
pushf
addr16
outsb
push
adc
cmc
dec
xlat
into
push
pushf
mov
jae
jbe
cs
jmp
rolb
jo
dec
pushf
mov
push
and
mov
insl
sub
dec
repnz
add
cmp
imul
out
test
rcrl
pushl
lock
inc
aas
adc
add
cmp
fdivp
or
leave
out
or
enter
and
xlat
scas
and
xchg
leave
mov
mov
dec
popl
repz
loopne
pop
aad
aaa
lcall
mov
vphaddbw
adc
push
mov
push
rcr
out
add
aam
push
daa
lock
daa
daa
and
jge
jnp
pop
dec
mov
mov
jl
pop
mov
dec
adc
jo
repnz
push
inc
sub
xchg
push
sub
sbb
mov
lock
dec
in
fsubr
mov
xchg
aam
fldl
push
mov
ror
testl
pop
call
mov
or
out
or
in
inc
data16
push
xchg
daa
xor
and
dec
out
dec
sbb
sub
cwtl
inc
lret
push
jle
sahf
imul
clc
roll
ret
xchg
pop
nop
mov
lea
out
sti
add
inc
ror
call
dec
push
pop
jl
jae
push
mov
push
cmp
js
scas
int3
inc
imul
xchg
fucomp
lock
and
ss
in
lcall
lock
mov
pextrw
sub
js
rcl
out
jno
inc
out
shlb
fsubs
es
or
dec
sbb
aas
ret
and
pushf
jb
lcall
cmp
insb
jb
sbb
push
lcall
pop
mov
pop
cmp
fwait
dec
jo
psubd
mov
out
aas
int
mov
mov
leave
leave
xor
ret
or
sub
dec
xor
mov
or
lret
lock
cli
stos
out
mov
jl
out
daa
or
je
mov
lds
shll
mov
xor
lret
movaps
push
cmp
pop
lds
lds
out
sub
or
hlt
or
addb
in
xchg
jmp
or
mov
nop
mov
dec
xchg
out
sbb
xor
stos
mov
xor
jo
cmp
outsb
lods
je
add
sub
sbb
loopne,pn
fcoml
or
and
sub
cmp
in
sarb
mov
pusha
shlb
pop
sbb
xchg
mov
xor
je
roll
sub
xor
test
xor
inc
sub
addr16
rcl
pop
inc
sahf
xor
outsb
dec
jbe
push
cmp
sbb
lock
xor
sub
jge
cmp
insb
iret
add
pop
sub
scas
fldt
push
cmpsb
add
hlt
sbb
or
jb
mov
aaa
add
jns
push
mov
stos
sbb
ficoml
pusha
mov
xchg
les
or
daa
aam
rcll
adc
jo
or
mov
xor
inc
jle
cmp
xchg
into
cs
arpl
in
popa
popf
hlt
fistps
xchg
and
push
adc
jle
enter
mov
push
test
dec
mov
sar
push
nop
testl
dec
push
pop
iret
sub
push
test
mov
push
jno
and
bound
mov
cmp
icebp
test
in
popf
mov
add
xorb
sahf
flds
and
dec
insb
aad
test
inc
adc
dec
mov
addr16
inc
sbb
or
xchg
fcompl
stc
es
inc
inc
js
sbb
iret
fwait
sub
mov
inc
jmp
xchg
aas
addr16
rolb
adc
xor
ja
cmp
sbb
mov
dec
and
fmul
aaa
dec
hlt
sub
fwait
setne
sarl
leave
lret
inc
js
ja
mov
add
in
push
mov
mov
loop
movsl
dec
in
popa
es
addr16
out
mov
fsubp
dec
mov
cmc
das
dec
data16
mov
fimuls
lock
rclb
nop
xor
add
ljmp
or
testb
mov
aam
lret
nop
or
addr16
int
imul
lods
add
sbb
pop
add
push
bnd
add
pop
enter
and
in
int
jl
mov
mov
filds
fcomi
lret
mov
dec
das
xchg
cmc
pop
jae
shl
test
mov
stos
adc
sub
ja
fabs
adc
push
in
aaa
call
sbb
pop
insb
and
jmp
add
or
mov
inc
andb
and
adc
fcmovnbe
outsl
xor
jl
and
push
nop
sub
cwtl
loop
inc
sar
add
dec
es
loopne
btc
cmc
mov
repnz
les
andl
xor
dec
cmp
sahf
adc
or
mov
dec
in
into
ja
mov
push
imul
xchg
sbb
std
push
mov
adc
fcom
lahf
jmp
repz
cmp
daa
cltd
pop
data16
pop
das
dec
aas
xchg
jns
ljmp
adc
iret
bound
mov
mov
test
jmp
xor
ds
in
add
jmp
pop
inc
pusha
cmp
jnp
rcrb
out
mov
fwait
mov
out
sbb
jno
test
cmpsb
andl
aad
pusha
es
adc
fwait
clc
ljmp
mov
add
lods
imul
ja
or
gs
out
xchg
iret
and
mov
sbb
std
pop
pop
push
xlat
lahf
lea
jl
cmp
aam
add
push
ds
pop
hlt
dec
adcl
orl
pop
test
jb
mov
or
and
push
xlat
stos
xor
xchg
sbb
mov
mov
jb
loopne
mov
mov
fcomps
movsl
loop
push
cmc
xlat
mov
pop
push
daa
dec
push
xorb
mov
and
mov
lahf
adc
xchg
mov
leave
outsl
call
add
test
loop
jmp
fnstcw
iret
mov
xlat
repz
inc
pop
int
xor
lahf
adc
out
sbb
int
xor
xorb
mov
gs
push
je
mov
push
xor
cwtl
in
push
xchg
in
dec
jg
pop
imul
popa
adc
xchg
ljmp
fisubs
insb
repnz
movsb
mov
stos
shrl
andb
pop
pop
and
testl
sarl
ss
cmpsl
jbe
movb
pop
dec
xlat
xor
cwtl
lret
sbb
pop
dec
sub
inc
stos
mov
lcall
cmp
jnp
push
das
or
nop
fyl2x
xor
aaa
push
push
fdivl
mov
test
jge
xchg
insl
lock
push
adc
cmp
sub
test
ret
outsb
vpackuswb
sub
aam
in
fidivrl
dec
sbb
cwtl
shlb
sub
insb
mov
push
xchg
xchg
stos
xchg
pop
test
lret
push
stos
sub
fwait
cmp
xchg
ss
or
mov
addb
in
pop
mov
ljmp
fnsave
xchg
push
inc
pop
dec
fcmovne
push
mov
adc
push
pop
lock
and
mov
jae
inc
mov
cmp
cmp
jne
in
lret
push
inc
je
andb
xchg
sub
xchg
int
call
loopne
sbb
lcall
pusha
adc
xchg
mov
shl
mov
das
mov
mov
push
cmp
pop
pop
jmp
xorb
or
cwtl
inc
aad
jns
push
test
subb
jecxz
ficomps
xlat
fcoml
jno
arpl
add
in
sbb
cmp
sub
lret
xlat
daa
aam
cli
fmull
inc
jecxz
sahf
icebp
cmp
orl
jmp
lods
push
sub
cmp
pop
scas
rcl
inc
sbb
xor
dec
mov
jne
add
fdivs
and
and
fidivrl
shlb
mov
test
jl
mov
jnp
shl
sub
and
push
mov
pop
shl
dec
movsb
gs
pop
dec
push
xchg
imul
scas
pop
sub
ficoms
rorb
fsincos
jnp,pt
aaa
outsb
pop
out
cmpsl
rorl
aas
inc
repnz
in
dec
dec
sbbb
call
cltd
dec
and
call
sbb
or
add
push
test
cmp
or
cmp
aam
dec
outsb
arpl
lds
lea
xchg
in
mov
popa
pop
pop
cmpsl
cmp
push
mov
and
mov
lock
pop
xlat
xchg
in
jp
pop
adc
adc
inc
inc
call
repz
arpl
and
lea
repz
cltd
into
xchg
sub
int
dec
ljmp
mov
push
or
cli
stc
cltd
fisttpl
push
stos
stos
fwait
push
jae
cld
rcl
dec
mov
fmul
mov
inc
imul
jb
dec
repz
push
sbb
lods
mov
arpl
outsl
stos
and
mov
mov
cmp
mov
movsb
sahf
dec
mov
nop
cmpsb
nop
loop
bound
mov
mov
shll
gs
in
test
iret
inc
inc
test
sbb
ja
cmp
insl
pop
inc
mov
aaa
fwait
ret
outsb
push
cmpsb
dec
pop
rorl
jb
lds
out
mov
pop
cltd
jl
jns
iret
or
sub
xlat
push
scas
push
aam
lods
push
cltd
loope
xchg
loop
xchg
mov
bound
sbbl
aam
cmpsb
sub
inc
xorb
adc
repz
out
shlb
call
lods
xor
xchg
adc
divl
xchg
xor
std
aad
xchg
ret
popl
xchg
xor
pusha
aas
adc
out
notb
add
lods
fcomi
notl
push
sub
fsubr
jne
pop
fprem1
jb
lret
mov
and
idivb
mov
test
mov
loopne
mov
test
push
mov
inc
rclb
pop
sub
mov
out
out
and
cmp
mov
push
mov
mov
add
scas
aaa
push
xor
shl
outsb
ss
mov
push
lds
xchg
dec
jp
and
ds
inc
jl
test
sub
fimuls
loop
pop
push
pop
xchg
popf
fwait
cmpsl
pushf
jecxz
loop
rclb
jne
push
jmp
push
test
jno
in
rorl
out
push
xchg
and
sti
repnz
stos
and
clc
ret
pusha
js
lcall
popa
fldl2t
sub
jae
pop
inc
loope
mov
repnz
pop
bswap
movsl
addr16
xlat
aad
aas
inc
sti
mov
roll
jno
and
test
add
pop
and
cs
jmp
cli
test
fimuls
inc
xchg
add
xchg
mov
mov
repz
aam
scas
xchg
fidivl
sub
stc
scas
dec
mov
shll
test
push
mov
xchg
gs
push
or
aam
dec
lea
test
fldt
loope
push
loop
jns
or
xorl
shl
or
cmpsb
mov
lods
seta
in
imul
push
cmp
sub
or
mov
out
or
sbb
rcr
mov
lcall
push
sbb
xchg
fwait
inc
inc
dec
repz
test
sbb
mov
mov
inc
stos
dec
mov
mov
sbb
clc
or
test
and
xchg
arpl
xor
sub
sub
sub
push
add
rcl
ja
ljmp
mov
push
mov
repz
imulb
push
scas
or
into
cwtl
mov
mov
and
adc
cltd
cli
mov
jne
mov
outsl
lds
and
push
loopne
movsb
fbstp
xchg
daa
adc
adc
jae
dec
add
cmp
add
loopne
sub
and
test
in
out
push
jno
out
arpl
push
inc
cli
pop
jns
or
add
rcl
gs
sbb
shld
fsqrt
popf
xor
pop
mov
xchg
int
sahf
cmp
test
in
push
sub
jbe
mov
dec
cld
jecxz
pop
aas
dec
ja
pop
cltd
ja
fs
or
sbbb
xchg
add
mov
inc
int
inc
js
shrl
cld
jbe
jl
jmp
inc
mov
inc
cmpsl
mov
imul
mov
dec
std
out
jne
mov
in
fiadds
iret
xchg
lods
test
imul
aaa
mov
mov
repnz
sbb
mov
enter
in
out
dec
mull
fldt
int
push
in
push
sub
daa
xor
jo
fcoms
mov
mov
mov
roll
jl
es
sbb
lcall
push
fsubr
adc
fldcw
data16
lock
sbb
cltd
clc
jnp
pop
xchg
shrl
push
clc
es
shrb
jno
jnp
outsb
in
les
jge
int3
fsubs
push
mov
cmp
scas
and
mov
daa
sub
mov
jo
xor
jle
sti
imul
pop
dec
sub
jnp
enter
mov
enter
sar
sbb
cmp
popf
cmp
xor
inc
dec
xor
cltd
pop
pop
sub
pop
shll
dec
lea
repnz
push
mov
or
pop
je
xor
pop
fnstcw
mov
nop
mov
stos
lods
jbe
mov
add
xchg
mov
push
mov
jne
xor
add
lret
stos
fbld
cmp
xchg
cmp
sub
popa
rcrb
arpl
stos
sub
jecxz
addr16
pop
dec
push
fsts
iret
adc
daa
or
dec
jecxz
test
mov
test
adc
xor
lods
js
push
sti
insl
jmp
sbb
bound
ss
pop
push
sub
inc
push
iret
ret
addb
insb
cmp
sarb
sub
inc
jbe
daa
and
fwait
add
sbb
int3
andl
out
or
sbb
sahf
cmpsb
outsb
add
stos
mov
iret
call
loopne
and
testb
add
out
jb
shl
aas
and
adc
aad
rolb
sbb
jbe
fldcw
cli
ret
arpl
mov
ds
sbb
into
xchg
xchg
xor
inc
add
add
xchg
xor
dec
ds
sti
jno
pushf
rclb
mov
sbb
pop
or
pop
push
cmpsb
and
sub
jl
push
push
mov
push
sub
push
js
ljmp
out
cmc
imul
ret
xchg
das
dec
mov
sub
xor
mov
sub
adc
movsb
pop
jo
xor
out
roll
inc
jle
cwtl
hlt
or
cmpsb
xchg
icebp
sahf
daa
xchg
xchg
pop
rolb
push
in
repnz
mov
pop
cltd
insb
xor
cmp
xchg
mov
jmp
in
fwait
aas
int
rclb
jge
in
jnp
shll
dec
jp
sti
jne
adc
out
inc
lods
xchg
mov
sbb
inc
pop
shrb
aas
in
cwtl
mov
dec
aad
xor
sbb
gs
add
xchg
push
inc
sbb
inc
setns
xor
test
push
xor
fldl
ja
inc
pop
jns
xor
mov
or
pop
dec
jo
outsb
movl
cmpb
fcomps
jmp
push
mov
pop
mov
inc
adc
lret
xchg
test
leave
cli
loopne
inc
in
rorb
adc
jbe
popa
cmpsb
adc
mov
sbb
and
jnp
addr16
dec
xchg
jns
mov
stc
sub
sbb
dec
jb
shrb
cltd
loopne
jb
sbb
in
push
aad
movsl
mov
bnd
inc
jno
mov
aam
xor
mov
mov
pop
and
fs
stos
scas
jle
dec
dec
shrb
test
sti
and
mov
int
push
sub
xor
lock
jle
xor
jg
lahf
fucomi
ljmp
je
push
das
cs
fmulp
sub
push
insb
adc
cs
pop
add
icebp
lret
adc
xchg
push
push
xchg
xchg
pop
roll
mov
jns
sbb
xlat
inc
sub
sbb
pop
mov
xor
gs
mulb
pop
paddusw
sub
sbb
or
movsb
outsb
aam
jl
sbb
pop
fwait
mov
mov
test
in
pop
push
shlb
pop
adc
pop
pop
lods
nop
mov
in
pop
movsl
mov
and
adc
mov
mov
jle
or
cmp
cmp
adc
fs
and
sub
dec
sti
movsb
dec
or
arpl
adc
xchg
in
out
popa
mov
xchg
adc
add
pop
mov
mov
test
movsb
jl
dec
jno
and
orl
sbb
sbb
iret
mov
movsb
or
stos
test
lock
incl
fidivrl
dec
fsts
dec
jnp
fcoml
cli
mov
repnz
and
pop
pop
mov
in
mov
inc
jne
cmp
xor
ss
inc
arpl
mov
insl
pop
in
test
mov
xchg
fsubs
pop
ljmp
hlt
push
fstpt
push
div
jmp
das
call
imul
sahf
mov
jo
jmp
cmp
jb
fwait
popa
push
ja
jnp
es
or
pop
and
xchg
xor
bound
sub
dec
cld
ret
scas
cli
xlat
xchg
xorl
or
jb
test
mov
add
stos
inc
mov
xor
mov
sub
sahf
sub
jae
xlat
xchg
dec
and
push
xchg
fsubl
pop
stos
stc
hlt
sbb
mov
cli
inc
daa
adc
push
mov
sbb
pop
loop
outsl
xorb
xchg
test
lods
sahf
push
aaa
inc
addr16
cmc
jle
call
lock
xchg
sub
in
push
or
adc
adc
lds
and
rclb
adc
jmp
mov
inc
sub
out
pop
mov
es
leave
imul
xor
repz
aam
adc
in
mov
push
test
cltd
daa
fsubrl
mov
and
daa
sbb
aaa
jle
int
sub
pop
lods
pop
mov
jle
jp
cmc
xchg
pop
sbb
mov
cli
test
push
and
cld
jo
cmc
mov
int
popa
xor
mov
pop
std
inc
mov
rolb
xchg
imul
dec
pop
xchg
pop
jle
push
add
fdivrl
inc
inc
pop
ficomps
mov
insl
push
int3
mov
inc
pop
inc
inc
fstl
scas
das
xchg
lods
mov
decb
push
in
cmp
xor
pop
out
sbb
cmp
sub
or
ret
hlt
aam
cmpsb
pop
sbb
sub
jle
aad
push
dec
sahf
cmpsl
sub
adc
std
data16
das
mov
ljmp
nop
lods
addr16
call
arpl
ljmp
cmp
and
dec
lock
xor
mov
cmp
pop
cltd
and
lahf
xor
adc
pop
mov
mov
stc
sbb
enter
sub
or
fucomip
mov
mov
leave
mov
enter
dec
push
lea
pop
pop
aam
push
mov
pop
hlt
sbb
add
shrl
add
sub
rorb
stos
mov
adc
sbb
fwait
subl
int3
gs
mov
push
jmp
addb
mov
pushf
add
push
roll
iret
add
shrl
jns
clc
mov
pop
jne
and
js
push
add
es
pop
push
mov
lods
jnp
jno
test
jns
push
icebp
ja
ficoms
xchg
xor
clc
test
jp
insb
js
lock
or
rcrl
mov
jns
or
inc
or
aam
mov
xchg
jp
dec
ret
cmp
and
addb
stc
mov
ret
jl
addr16
cld
inc
mov
push
jg
jge
sbb
pop
xor
and
xor
jnp
mov
xchg
repz
les
xor
jmp
cli
fucomp
retw
cmp
and
lret
fbstp
jo
call
sbbl
jmp
fdiv
ss
cmpsl
cmp
xor
scas
je
inc
test
mov
daa
movsl
pushf
popa
jg
xchg
cli
mov
xor
lock
or
mov
jno
pop
iret
lods
insl
add
mov
lret
cltd
rorb
popa
rolb
neg
cwtl
jmp
lds
in
jg
xchg
mov
je
xor
cmp
loopne
inc
mov
gs
jecxz
lods
clc
cmp
or
es
mov
inc
or
ret
mov
ss
cmp
and
fnstsw
pop
ror
add
push
sbb
mov
lods
mov
xlat
cmp
loopne
jl
jne
aam
pusha
enter
mov
stos
xor
sbb
lods
add
nop
sub
idivb
rorb
cli
mov
fs
xchg
int
pushf
xor
test
cmp
jmp
insb
and
fisubl
jg
nop
es
mov
push
daa
das
cs
loop
and
fnop
fldcw
pop
loopne
cmpsb
xor
push
xor
inc
mov
pop
dec
xchg
stos
rolb
pop
sub
xchg
decb
mov
jge
ret
mov
push
test
pop
mov
lock
int
pop
std
mov
push
xor
fists
jne
popa
and
std
std
fistl
adc
mov
jmp
adc
rolb
fwait
dec
shll
ss
scas
inc
pushf
pop
cwtl
pusha
xchg
ss
push
loope
jl
call
inc
mov
mov
push
dec
inc
xor
dec
loope
jle
dec
adc
xchg
movsl
repnz
lret
aad
push
inc
aad
mov
push
dec
jns
jle
arpl
adc
pop
cwtl
and
dec
cmp
jae
push
or
mov
into
push
mov
dec
fs
adc
xchg
ja
push
pushf
in
pop
movsl
std
mov
cmp
jecxz
xchg
in
ja
scas
adc
adcl
push
imul
shlb
or
cs
or
cmpsb
sti
push
aaa
shrb
jl
dec
push
jmp
push
jl
adc
and
and
mov
or
and
pop
push
adc
dec
scas
movsb
push
cmp
jno
push
cs
cli
mov
fs
inc
aas
or
push
cmpb
push
faddl
dec
push
add
adc
lods
movsb
mov
int
pusha
or
je
ja
push
pop
dec
jbe
sarl
dec
mov
call
in
int
pop
push
xchg
pop
pop
mov
sub
jne
in
jae
pop
lods
mov
pop
idiv
mov
sub
aaa
xor
and
pop
in
jge
pop
mov
fisttps
dec
lods
or
pop
rclb
sub
add
inc
aad
cmp
scas
outsb
aas
imul
dec
and
or
imul
jmp
cmp
shl
jmp
inc
and
dec
test
imulb
mov
sub
stos
subl
pop
repnz
popf
mov
jecxz
sbb
int3
cmp
jne
outsb
push
add
and
int
push
xlat
shrb
bound
test
cmp
pop
cmp
inc
imul
xor
notb
movsl
test
iret
jns
cmp
add
inc
adc
jne
clc
stc
sbb
inc
test
aad
loop
dec
out
push
cmp
out
adc
or
or
xlat
mov
push
xchg
push
ljmp
stos
clc
aas
and
add
ss
push
int3
mov
cli
jno
ret
xor
loope
stos
ljmp
jne
jo
adc
pop
into
scas
mov
cltd
push
sbb
xchg
dec
mov
mov
cmp
add
dec
push
fisttpll
sbb
mov
adc
mov
jmp
cmp
imul
jl
push
fdivrs
adc
mov
mov
inc
sahf
inc
cmp
push
bound
adc
adc
js
mov
mov
je
push
adc
std
xor
frstor
sbb
shll
ds
cmp
pop
movsl
das
mov
leave
xor
push
push
insb
add
rcrl
addb
cmp
lahf
mov
test
pop
push
sbb
sbb
and
jae
mov
scas
loopne
mov
into
cmp
cld
xchg
xor
and
shl
mov
inc
in
cwtl
insl
xchg
push
int3
inc
fidivs
into
outsl
repnz
in
mov
in
add
pop
mov
mov
adc
mov
mov
mov
sbb
cmp
cmp
cmp
stos
ja
fcmovnu
inc
jle
aad
out
cwtl
scas
push
and
xorl
jb
in
push
or
xchg
push
nop
pop
les
xor
gs
call
repnz
insl
inc
lods
and
dec
dec
xchg
push
and
mov
jb
cltd
or
jg
cmp
cmpl
adc
xchg
dec
aaa
xchg
cmp
adc
shrl
jmp
outsb
xor
stc
aas
pop
push
mov
jle
lcall
adc
fildl
jae
fldenv
daa
jle
inc
or
xor
fidivl
xchg
orl
xlat
fildl
cmp
inc
ss
or
xchg
sbb
mov
ret
push
ret
imul
popa
and
monitor
and
es
nop
xchg
or
in
and
int
pop
sbb
in
mov
fsubs
popf
pop
push
or
cli
sbb
cmp
popa
xor
out
int3
lea
test
flds
cltd
push
ret
or
daa
push
out
add
insl
mov
cwtl
dec
repnz
add
dec
jle
cmp
stc
or
dec
mov
out
pop
scas
adc
or
ret
fisttpl
adc
mov
xor
mov
nop
sbb
clc
jae
xor
insl
test
sti
or
mov
dec
stos
add
ret
iret
fidivrl
jo
sub
cs
push
mov
nop
fwait
pop
cli
push
int3
std
xchg
decb
cli
stc
sub
cs
orl
scas
cs
dec
add
into
jp
rol
dec
and
push
aas
cmp
in
scas
sbb
add
fisttpl
loope
push
dec
push
rcll
cmp
inc
lret
sub
inc
clc
cs
or
stos
and
cmc
mov
adc
cli
fistpl
test
jns
push
mov
rcll
test
jp
dec
mov
mov
jle
mov
mov
add
cmp
and
xchg
push
aam
jbe
jb
subl
mov
adc
inc
fs
mov
xor
add
test
hlt
es
lret
daa
mov
sbb
add
dec
nop
cmpsb
adc
xchg
jbe
pop
loop
loop
sub
add
mov
test
arpl
xchg
shll
mov
xorl
enter
xchg
ljmp
and
dec
push
rep
arpl
dec
add
imul
mov
jne
inc
loop
insl
mov
les
push
inc
hlt
or
cli
dec
adc
and
andl
daa
push
lahf
je
lods
xor
call
adc
push
incb
xor
sub
mov
idivb
mov
mov
popa
jle
cmp
clc
xchg
dec
pop
test
xchg
push
xchg
cltd
sbb
cmp
frstpm(287
inc
xchg
loop
shll
dec
inc
jno
xor
addr16
iret
jbe
push
in
inc
push
lret
shlb
int
icebp
daa
inc
xchg
js
sub
xchg
lods
jne
pop
das
push
aam
jns
cld
push
daa
rclb
outsl
push
iret
push
cltd
mov
or
imul
push
loope
mov
or
gs
xor
in
ljmp
scas
sub
xlat
inc
jb
or
and
sbb
sahf
mov
sub
xchg
dec
out
ja
inc
pop
notb
lret
fnsave
mov
mov
shll
imul
shlb
popl
shl
inc
dec
inc
hlt
xchg
add
cmp
push
add
pop
outsl
fdivs
test
lods
pop
mov
and
jnp
dec
xchg
sbb
mov
lret
dec
xchg
cmpsb
ja
insb
ja
in
filds
cmc
icebp
add
sub
nop
inc
leave
adc
sarb
mov
mov
call
imul
sbb
xor
stos
ret
pop
sbb
arpl
movsb
push
scas
mov
mov
test
xor
lahf
out
mov
imul
das
je
or
sbb
shl
jecxz
jp
adc
xchg
ljmp
call
shrb
fstpl
jb
xchg
lea
push
call
setns
out
mov
sarb
cld
pop
mov
movsb
test
ret
out
mov
add
cmp
mov
dec
push
scas
adc
addl
call
sbb
inc
push
dec
dec
dec
in
inc
mov
xchg
jbe
xor
pop
shr
ja
fnstcw
jae
cli
add
cli
cmp
mov
cmpsb
and
push
sub
inc
lahf
test
repnz
imul
xchg
loopne
testb
jns
loope
outsb
loope
pusha
inc
movsb
add
dec
aad
or
push
jne
dec
pop
lcall
cmp
push
or
es
int
mov
push
pop
fcoml
shr
pop
hlt
fidivrs
js
mov
dec
js
insl
pop
jmp
dec
sub
inc
fldt
pop
movsl
pushf
push
daa
movsb
mov
pushf
divl
les
add
jecxz
cmp
out
ljmp
mov
xchg
mov
lods
push
fs
jnp
fnstenv
popf
dec
add
adc
jne
pop
sub
xor
lret
pop
shlb
mov
pop
push
dec
ljmp
add
outsb
gs
into
mov
mov
lcall
adc
aaa
ljmp
sub
popa
push
jl
sbb
hlt
loop
xor
jbe
push
lods
lcall
add
js
aaa
adc
pop
or
sub
pop
pushf
test
push
push
ss
adc
in
out
push
sbb
int
pop
sbb
or
fcompl
daa
xor
sbb
inc
xchg
call
and
or
mov
or
cmp
aad
push
lods
js
mov
pusha
dec
xchg
iret
pop
mov
test
inc
outsl
jnp
shll
jle
pop
add
dec
mov
pop
or
aad
aad
daa
or
adc
mov
mov
mov
pop
ljmp
les
cli
negb
add
mov
aas
lods
test
rclb
lcall
ss
cwtl
loopne
pop
ja
add
fadds
inc
mov
mov
stc
adcb
into
sub
push
lahf
push
jp
repnz
fists
cmpsb
push
jae
cmp
scas
outsb
es
pop
xchg
mov
or
sti
jb,pt
out
jmp
pop
popf
xor
aam
xor
push
push
and
cmp
stos
mov
jns
cmp
mov
push
jb
pop
negl
outsb
rclb
inc
cmpsb
cmp
mov
or
xchg
mov
sbb
xchg
sbb
sbbl
cmp
or
push
inc
leave
icebp
mov
repz
gs
fstps
pop
mov
insl
xchg
loop
jp
out
push
pop
clc
adc
imul
xor
lea
or
cmp
int
cmp
add
testl
xor
xchg
inc
sbb
andb
out
pop
mov
lret
sub
push
add
xor
mov
pop
xchg
inc
sbb
mov
cmp
insl
dec
inc
cmp
add
or
cmc
scas
mov
mov
mov
sbb
popa
xchg
jle
loop
fistpll
mov
aam
mov
mov
test
gs
push
mov
push
mov
jmp
aad
je
push
inc
pop
cmp
jecxz
or
adc
in
vunpcklpd
divb
dec
add
xor
mov
mov
setnp
push
lcall
xor
cmp
sub
cld
aad
pop
push
aaa
aad
dec
lcall
cmpl
mov
lret
adc
pop
orl
aad
jnp
fistl
xchg
xchg
sbb
lcall
sub
xchg
add
push
dec
pop
ja
adc
arpl
ret
ja
push
xor
call
in
mov
mov
or
lret
in
imul
push
add
imul
outsb
imul
aaa
orb
lods
jb
inc
adc
mov
add
mov
sub
xlat
outsl
sbb
inc
push
mov
into
mov
mov
xor
enter
or
sub
jnp
fmuls
sub
test
dec
aaa
mov
jns
divb
sub
shll
inc
js
sbb
push
out
jns
xchg
jnp
insl
aam
inc
test
pop
in
sbb
mov
aaa
flds
cli
es
dec
jmp
pop
xor
call
stos
pop
lcall
mov
adc
arpl
xchg
dec
push
mov
ljmp
out
and
jp
dec
add
ret
mov
mov
push
xor
dec
cmpl
popa
adc
xchg
sbb
shlb
jno
gs
mov
rcl
mov
lahf
stos
xchg
pop
data16
shrb
int
loop
scas
rcl
cmpsl
lock
mov
adc
mov
sti
adc
adc
jp
xchg
push
xor
lahf
mov
std
cltd
sti
push
fdivrs
dec
mov
inc
jmp
jne
xchg
pop
cwtl
mov
icebp
push
mov
push
cmpsb
mov
fwait
mov
insb
jbe
add
pop
rorb
jl
cwtl
jno
repnz
and
mov
inc
cmpsl
cltd
rcrb
shlb
pop
pop
mov
jns
in
jae
mov
loope
xlat
xor
rcl
std
mov
inc
stc
outsl
jge
sbb
fld
pop
sarl
inc
enter
out
adc
int
in
add
scas
lods
xor
les
aas
std
push
outsb
mov
pop
sbb
inc
cwtl
cli
and
sub
sub
xchg
mov
and
push
mov
sub
or
mov
sbbb
int3
pop
xor
dec
rcll
fmull
or
mov
mov
xchg
push
aaa
movsl
and
out
adc
mov
std
lea
push
sub
cmpl
xchg
rorb
jle
in
sbb
pop
jle
pop
cmc
adc
inc
and
test
adc
clc
sub
test
pop
iret
xchg
jg
or
jb
xchg
or
pop
cwtl
xchg
shll
pop
mov
lahf
pushf
cmp
loope
push
inc
jbe
jg
or
clc
hlt
ret
push
pop
and
inc
mov
lahf
imul
xor
or
ds
or
push
mov
adc
flds
sbb
out
cwtl
mov
test
addr16
xchg
pop
gs
mov
test
adc
sub
jge
cmp
mov
adc
or
das
fiadds
jle
or
inc
push
cmp
orl
xchg
sbb
xor
ss
rclb
dec
in
ds
addl
xchg
xor
and
int
sbb
ljmp
push
add
pop
xlat
jg
test
push
sahf
push
fwait
hlt
xorl
fs
imull
imul
fwait
lods
push
pop
call
xchg
imul
ficompl
push
call
ret
pop
xor
lock
movsl
inc
and
mov
cmp
xchg
notl
into
xor
mov
sub
out
xor
aam
in
jp
addr16
aas
mov
outsb
insl
jmp
lods
mov
xor
es
inc
cld
rcr
jo
scas
pop
and
daa
icebp
xor
pushf
aad
xor
xor
lret
iret
shlb
aam
sbb
int
out
sub
int
sarb
cmp
dec
fadds
es
mov
push
cltd
fsubs
fs
adc
enter
test
push
push
loope
and
movsl
add
dec
push
mov
je
fldl
ficomps
insb
fldt
lea
mov
icebp
les
mov
sub
loopne
shlb
imul
ffree
loop
loop
insl
mov
lods
test
inc
dec
pusha
test
xchg
pop
ja
enter
std
lcall
push
add
ja
sarl
fisubl
movsb
fidivrl
call
test
inc
test
push
sub
jae
sbb
sbb
icebp
addr16
sub
int
fwait
jp
ret
ds
repz
insl
sbb
sbb
lret
sbb
ss
cli
idivb
dec
pop
pop
xchg
ss
xchg
mov
ret
les
fs
jg
jecxz
dec
out
bnd
cmp
pop
clc
or
sahf
jl
mov
ret
cwtl
add
or
scas
lods
push
test
jno
fs
addr16
xchg
les
cmpsb
lock
cmp
sub
loope
xor
movsl
fldl
push
das
or
mov
fidivrl
loop
and
and
push
arpl
push
cli
jl
js
scas
aas
in
ret
jp
dec
mov
repz
inc
xchg
push
fisubrl
shlb
add
movsl
and
dec
mov
inc
dec
psrlq
or
mov
arpl
sub
scas
jae
cmc
dec
sub
icebp
cmpl
stc
lea
xchg
cs
xor
shlb
xor
lea
push
les
adc
mov
imul
and
mov
imul
jbe
cmp
lret
inc
mov
jae
jne
test
adc
arpl
mov
push
or
or
dec
ds
jge
sbb
aam
jno
or
call
cmp
aaa
and
adc
int3
inc
mov
fidivrs
mov
rclb
das
pop
mov
or
imul
pop
aas
dec
sahf
aas
mov
xchg
jns
icebp
or
repnz
xchg
cltd
push
push
sbb
xlat
in
push
fisttpl
adc
fwait
jmp
popf
rclb
aad
pop
leave
loop
xor
mov
jbe
mov
leave
shrb
test
jb
lret
jns
inc
mov
jnp
cs
xchg
fstps
imul
mov
std
data16
sub
push
mov
cmpsb
pop
add
sub
fbstp
jb
and
cmpxchg
outsb
lods
shrl
mov
mov
movsl
je
jae
insb
sub
frstor
adc
jns
loopne
test
ds
rcr
jne
sti
or
lea
pop
jge
stos
adcl
insl
mov
mov
dec
ss
cmc
sbb
stos
faddl
lods
jns
sub
aas
dec
stos
dec
icebp
test
lret
mov
and
adc
sbb
seto
lret
push
jg
inc
inc
in
pop
popa
fstps
cmc
or
cmpsl
out
mov
sbb
addr16
mov
xchg
shr
lahf
mov
ljmp
xor
add
mov
daa
sub
pop
data16
add
mov
int
aas
imul
push
adc
sti
test
mov
or
adc
mov
and
cmovne
pop
mov
add
repz
test
mov
out
bound
fidivrl
aam
or
aaa
mov
jl
nop
jle
push
inc
jge
test
ret
jne
push
test
call
stos
dec
andl
mov
fwait
aaa
dec
xchg
push
pop
sbbl
add
pop
adc
mov
lock
jbe
mov
mov
push
pop
cld
pop
mov
imul
mov
inc
cmp
mov
pushf
aam
mov
popa
sub
lods
addb
in
dec
pop
lcall
dec
jmp
xchg
repz
dec
sbbl
xchg
push
scas
xor
mov
xchg
out
mov
stos
je
ret
xchg
xlat
jnp
push
jge
ret
clc
repz
xlat
leave
add
cli
andb
or
aas
adc
enter
lret
int3
pop
aad
sub
inc
mov
pushf
push
iret
into
mov
sbb
fdivrs
mov
adc
loop
test
hlt
iret
mov
jae
jo
lret
enter
fwait
ss
adc
das
adc
push
ljmp
ret
add
mov
push
mov
clc
test
arpl
adc
xchg
pop
iret
testb
dec
test
or
cmpsb
dec
cmp
jns
sbb
rolb
pop
out
jle
movsb
and
data16
sub
pop
sub
or
hlt
arpl
mov
dec
xchg
push
in
cmpsb
cli
or
ljmp
and
sbb
jae
sbb
repz
mov
pop
daa
aad
xchg
mov
loopne
jbe
pop
jl
jp
adc
inc
insl
imul
push
daa
jmp
add
test
inc
add
movb
out
add
dec
lds
in
jo
and
mov
cwtl
cmp
jb
add
dec
sub
dec
inc
jbe
aaa
or
negb
daa
sub
je
push
or
xor
dec
das
test
repnz
pop
scas
imul
cmp
sub
ret
insb
mov
xor
fsts
mov
mov
lods
sarl
or
jno
push
imul
sarb
repz
jno
popa
or
pop
loope
adc
mov
mov
cltd
sbb
xchg
cmc
ficomps
pusha
xchg
jo
push
jno
jecxz
mov
sbb
add
hlt
xchg
adc
xor
not
cld
pop
loopne
jbe
outsb
sarb
xchg
repz
mov
lds
push
inc
cmp
jg
xor
repnz
sbb
pop
stc
iret
xchg
dec
xor
inc
sub
sub
or
popa
add
jo
push
adc
sub
das
jl
or
sub
xchg
mov
dec
dec
add
fs
rorb
imul
inc
rcll
pop
mov
and
dec
negb
mov
mov
cmp
cltd
add
pushf
loop
sbbb
int
mov
or
push
outsb
pcmpgtd
out
dec
mulb
daa
sahf
cmpsb
jnp,pt
jbe
dec
es
adc
in
inc
mov
lcall
repz
mov
mov
pop
and
leave
andps
mov
data16
dec
sbb
in
loop
jns
adc
xor
movb
cs
in
lcall
repz
scas
push
hlt
mov
add
and
mov
mov
sub
cld
fdivrp
and
xchg
cmp
sub
cmp
in
mov
imulb
adc
pop
and
insl
out
mov
sarl
jb
outsb
and
daa
fs
es
pop
enter
and
dec
fisubs
cmp
pop
mov
push
cli
std
and
sbb
cmc
mov
sbb
lds
sti
and
sbb
xlat
fadds
loop
loope
jno
adc
test
pop
scas
adc
pop
sub
dec
clc
mov
jmp
neg
cmpb
or
mov
movsb
fwait
loopne
cli
sbb
icebp
adc
subl
add
mov
pop
scas
jb
js
cli
insl
lret
and
sub
out
enter
pop
stc
push
roll
mov
mov
minps
nop
xor
bound
fwait
in
or
pop
ret
fisttpll
mov
push
mov
push
andl
dec
add
cli
xchg
cmp
nop
and
rorb
fldl
imul
xchg
sbb
inc
jl
mov
sbb
call
add
push
push
lahf
xor
vmovupd
or
add
mov
lods
sbb
push
sbb
ja
mov
push
ficomps
push
stc
inc
ljmp
mov
in
das
out
jmp
inc
lret
imul
mov
pop
orl
xchg
into
xor
lcall
sub
sub
sahf
xchg
mov
loop
fs
sti
lahf
lcall
pop
and
mov
xor
sti
lahf
sub
cltd
rcrl
push
subb
inc
jne
lods
or
mov
sarl
or
push
imul
call
in
je
in
adc
push
shl
add
loop
bound
cmpb
xchg
push
sbb
dec
mov
sub
push
inc
add
lock
int3
test
pop
mov
push
or
into
lcall
xchg
loopne,pt
imul
adc
jnp
xlat
mov
mov
dec
negl
enter
shrb
rep
push
ljmp
sbb
xor
sahf
mov
pop
mov
xchg
popa
fldenv
jne
hlt
push
mov
stos
add
imul
lea
dec
popf
sbb
xchg
iret
inc
repz
movsl
das
popa
lret
aas
mov
out
xchg
push
dec
iret
test
pop
test
xor
mov
out
inc
dec
mov
ss
out
mov
lods
xchg
inc
aaa
lret
pop
or
push
push
shrb
popa
sbb
rorb
sbb
fisubl
outsb
inc
push
loopne
add
and
cmp
or
lods
mov
stos
jne
mov
popf
nop
xor
int
sahf
das
sub
das
hlt
push
psllw
lcall
push
test
cld
aam
mov
sub
mov
mov
xchg
faddl
and
es
sub
js
popl
and
jb
jp
sub
data16
jmp
sbb
push
stc
outsb
fwait
sbb
icebp
repz
lcall
and
je
jmp
fs
xor
push
pop
aas
sub
imul
cmp
jb
lea
xor
mov
inc
shlb
gs
push
and
inc
loopne
cmpsb
insb
cmp
leave
and
pushf
in
mov
push
shl
cld
push
insl
sub
lahf
enter
test
std
sbb
jno
mov
dec
test
in
cmp
stos
sbb
pop
sub
aas
push
fldt
fimuls
add
push
repz
cmp
jecxz
mov
mov
lock
cmc
roll
js
shlb
fsubl
dec
cmpsb
inc
xchg
xor
mov
xchg
aam
ret
fwait
dec
push
roll
mov
push
mov
xchg
and
sbb
mov
imul
sbb
push
push
or
pop
sbb
or
xchg
or
sbb
jl
sub
jno
pop
and
clc
pop
pop
cmp
out
add
scas
mov
xchg
enter
adc
jge
fstl
int
jecxz
cmp
jl
lods
fs
cli
push
fxch
push
data16
sbb
mov
jmp
sbb
add
fimuls
push
or
mov
mov
cld
or
push
and
add
popa
jmp
shrl
inc
xchg
jecxz
sbb
dec
inc
mov
dec
pop
repnz
xor
cs
loope
pop
push
sbb
sbb
sbb
cmp
cmp
aam
std
adc
cmpsb
sbb
repz
push
push
xchg
pop
xchg
roll
es
popa
pop
mov
outsb
sbb
cmp
testl
push
mov
js
pop
xchg
push
jmp
xor
loopne
cld
inc
xor
xchg
mov
mov
pop
sub
push
adc
pop
mov
mov
pop
mov
aad
pop
mov
into
loopne
nop
dec
pushf
ds
es
lods
call
mov
dec
int
outsl
hlt
fs
jmp
lret
scas
fldcw
push
xchg
xor
jle
inc
jb
xor
sub
int3
repnz
out
sbb
ret
insb
jp
loopne
jo
adc
mov
ljmp
ret
inc
lods
jg
fwait
mov
xchg
mov
fdiv
sbb
scas
sub
xorl
cs
adc
xchg
or
loope
outsb
pop
icebp
dec
mov
or
outsl
or
loop
icebp
out
lods
pop
mov
adc
pop
xor
gs
mov
sbb
nop
and
pop
pop
test
imul
cwtl
je
fidivrs
scas
fdivrl
push
cli
mov
je
fdivrs
push
repz
in
adc
addr16
mov
jle
mov
sub
into
xchg
mov
inc
adc
jae
mov
pop
outsb
aad
jmp
das
xor
test
jnp
or
lret
cld
in
std
mov
dec
jecxz
dec
push
jae
pushf
dec
mov
test
sub
cld
test
push
pop
bnd
dec
xchg
insb
push
sbb
pop
pop
cmpsb
loop
cmc
jl
daa
mov
int
xchg
jbe
popf
jno
mov
mov
jle
push
and
outsb
je
sub
mov
jb
dec
push
mov
inc
jno
stos
lret
sbb
cmpsb
test
xor
push
aaa
xor
add
cmp
push
in
cwtl
inc
cltd
pcmpeqw
sbb
mov
cltd
mov
repz
xchg
leave
cmp
and
fiadds
pop
mov
into
hlt
mov
mov
pop
pop
out
ret
rcrb
divb
std
adc
sbb
jno
in
aaa
popa
arpl
jmp
std
fildll
xor
out
enter
mov
popa
or
cltd
les
imul
adc
and
enter
insb
lock
out
arpl
jo
xchg
lcall
jl
imul
dec
scas
pop
sbb
mov
adc
xlat
push
mov
mull
sbb
and
inc
pop
js
clc
push
cltd
aam
inc
scas
ds
shld
outsl
iret
mov
aaa
test
lret
mov
mov
pop
cmp
cmp
pop
adc
mov
cs
dec
mov
push
add
fdivs
jecxz
fs
or
data16
fs
sub
cmc
inc
mov
xor
ret
ret
pop
inc
cmpsl
cwtl
and
mov
mov
andb
xor
cmp
in
shll
imul
in
fcmovu
outsl
push
jle
xor
xorl
in
jnp
aad
sbb
aaa
xchg
inc
into
cli
cltd
cmp
andb
mov
jmp
push
push
ja
mov
dec
pop
pushf
int
inc
mov
push
pop
stc
mov
hlt
xor
mov
stos
push
jp
pop
addl
xchg
cli
sbb
adc
loopne
daa
pop
pushw
mov
icebp
or
sbb
gs
lods
mov
mov
std
fisttpl
outsb
lret
shrb
cmp
jbe
sub
mov
cmc
aad
sub
arpl
sub
fcomps
test
sub
mov
sahf
outsl
scas
and
sub
dec
hlt
xchg
push
mov
leave
mov
orb
sub
push
or
pop
out
xor
mov
fmull
pop
xlat
dec
push
sbb
cmpsb
mov
jle
cwtl
jp
push
dec
adc
push
pop
pop
add
in
cmp
nop
aaa
cli
push
add
sbb
hlt
loope
hlt
cmpsl
cmpl
push
pop
jmp
je
mov
mov
lret
add
stos
repnz
lret
mov
das
push
jmp
inc
addl
push
cwtl
push
sti
icebp
shlb
fildll
xor
jmp
and
xlat
outsb
pusha
cmp
loop
jge
daa
int
inc
pop
inc
push
xchg
mov
fstpl
adc
lret
dec
data16
push
and
mov
bound
rcrb
push
fistpl
inc
adc
sbbl
arpl
mov
xor
sub
xor
mov
xchg
fsubrs
ror
mov
stos
ret
cltd
cmp
fcos
inc
mov
lret
movsb
mov
mov
add
push
pop
fldl
mov
sbb
js
fldcw
sub
mov
sbb
mov
gs
and
cwtl
inc
pop
jae
into
push
dec
aad
stos
push
pusha
or
mov
jecxz
mov
fdivrl
mov
imul
test
mov
ds
call
jg
jmp
stc
and
adc
mov
jmp
lock
jmp
mov
lods
incl
mov
pop
inc
mov
pop
push
fwait
enter
mov
xor
popf
dec
sbb
jmp
and
inc
cmpsl
sti
iret
ret
or
fucomi
shlb
mov
and
push
push
inc
cli
and
cmp
scas
cmp
rolb
xchg
inc
fsubrl
cmp
mov
aaa
cmp
jecxz
dec
mov
sbb
sub
mov
cmp
inc
and
mov
lods
jg
fs
sarb
adc
mov
out
pushf
jae
and
out
jecxz
cmp
add
dec
add
push
movsl
movsb
mov
lcall
fsubrs
js
xchg
loopne
into
loope
adc
xor
pusha
push
xchg
jne
mov
fimull
jne
adc
jo
xor
lea
cltd
cmp
add
or
loopne
mov
in
aam
jg
enter
test
mov
out
xchg
mov
mov
in
jne
fistpll
daa
push
adc
cmp
sub
sub
inc
and
incl
pop
and
dec
les
rcr
push
mov
shlb
test
mov
stos
in
addr16
ss
mov
pushf
push
lcall
popf
lahf
js
and
dec
sbb
jbe
jne
add
test
movsb
rcrl
int
or
stc
lds
xchg
dec
cmp
mov
pop
fsubrl
xor
and
fs
add
cmp
jb
in
mov
or
push
lods
daa
and
fnstsw
mov
jecxz
ljmp
adc
insb
add
jo
call
jge
int
insl
data16
mov
adc
jb
pop
mov
adc
shlb
pushf
pop
mov
dec
pop
leave
mov
pop
push
cmpsl
lahf
push
xchg
mov
fwait
jno
and
inc
fstp
in
jo
jmp
and
call
add
stos
mov
add
fstl
movsb
ret
inc
sbb
lahf
jbe
in
lcall
xchg
xor
lock
push
jp
decl
ljmp
inc
cmpsl
lods
jmp
ja
xor
into
pop
mov
stc
sarb
mov
pop
movsl
std
cltd
ljmp
cmp
stos
mov
push
sbb
loop
xchg
fsubs
in
inc
arpl
rcr
cli
adc
es
addr16
inc
and
das
sbb
movsb
push
shlb
lock
loope
stos
lret
jecxz
or
pop
dec
dec
fiaddl
int
push
insl
lods
inc
jge
xor
std
mov
mov
sub
call
push
inc
addb
testl
outsl
dec
mov
lcall
cwtl
faddl
pop
mov
xchg
jge
dec
clc
popf
out
sbb
mov
pushf
inc
mov
scas
xchg
shl
test
hlt
ljmp
mov
push
cmp
int3
inc
jp
cmc
pop
and
sub
mov
nop
jg
push
dec
repz
jge
mov
movsl
stos
ds
outsb
icebp
mov
fldenv
ds
pushf
jo
dec
jb
mov
nop
aas
lret
mov
inc
ret
cld
jns
movsl
mov
addl
xchg
loope,pn
sbb
mov
test
lea
in
test
cmpsl
daa
dec
mov
out
mov
jne
and
add
xchg
pop
lret
jne
je
dec
lahf
outsb
fucomip
or
sbb
arpl
das
ja
pop
icebp
cmpsb
mov
arpl
mov
push
cmpb
dec
in
or
hlt
imul
aam
test
cltd
push
dec
in
in
mov
dec
scas
fdivr
int
jl
jp
pop
jmp
insb
loop
ficoml
es
dec
adc
rolb
aam
push
jg
add
jp
pop
push
sahf
sbb
data16
outsb
xchg
mov
test
pop
and
push
test
mov
scas
sbb
or
repz
inc
inc
push
cwtl
rorl
stos
stos
movsb
sbb
sbb
pop
hlt
xor
sbb
outsb
shrb
and
inc
test
jp
shrl
pop
jns
push
std
jb
mov
mov
inc
pop
cmpsl
insb
in
mov
mov
xchg
add
cld
dec
in
inc
push
sub
shll
pop
xchg
loop
jae
mov
jl
sbb
mov
inc
filds
lock
js
inc
gs
fldenv
push
jl
jnp,pn
test
jae
xchg
xchg
and
cmpsb
sbb
or
xchg
out
jo
push
lret
xor
les
cmc
int
xlat
mov
xor
sbb
outsb
out
in
mov
xchg
ret
jge
arpl
imul
dec
adc
nop
addr16
in
xchg
jmp
jp
dec
xor
bnd
xchg
ret
mov
sub
outsl
adc
popf
and
jne
subb
pusha
adc
sbbl
pop
cmova
ret
mov
mov
adc
push
push
mov
push
pop
stos
lret
je
mov
add
mov
lret
adcb
and
push
xor
loop
and
cmp
cmp
fdiv
loop
scas
ret
or
xorl
dec
inc
adcl
push
inc
ss
or
jl
mov
adc
jnp
shll
and
jno
pusha
mov
xor
lret
dec
pop
inc
gs
inc
jae
or
das
aaa
push
outsl
jns
lcall
sub
dec
jno
jno
cmpsb
test
iret
cwtl
repnz
push
sti
lahf
pop
jecxz
cli
popa
movsl
int3
fists
jecxz
dec
and
mov
jle
push
daa
shrb
fisttpll
add
dec
pop
test
sub
push
xchg
mov
ror
cltd
fidivl
arpl
les
jmp
loop
les
or
lods
push
push
stos
data16
push
imul
fsubrs
movsb
jecxz
sbb
cmp
ja
std
jl
mov
pop
in
mov
and
loopne
nop
mov
push
arpl
mov
loop
mov
outsl
mov
out
jle
sahf
insb
clc
mov
adc
jmp
sub
sbb
mov
rol
lods
mov
sbb
rcl
mov
mov
insl
leave
loop
sub
push
es
fadds
sub
aad
mov
jmp
cmp
or
sub
data16
les
mov
test
push
icebp
pop
sbb
aam
pop
cli
nop
sub
mov
fincstp
rol
mov
cmc
mov
xlat
shrb
jnp
push
fsts
sbb
add
test
mov
jae
inc
push
adc
push
sbb
outsb
nop
mov
mov
add
int3
push
hlt
aas
lock
in
ds
test
adc
jnp
or
push
outsl
sub
out
daa
push
jns
cmc
cmpb
push
sbbb
cmp
sbb
push
sar
les
out
or
pop
pop
sbb
pop
sbb
out
add
test
or
sub
fadd
lahf
push
xchg
pusha
mov
sub
mov
enter
sti
nop
xor
sbb
adc
loop
xor
push
sub
outsl
jmp
push
fimuls
aas
imul
cmp
lret
and
sbb
inc
out
inc
lea
inc
or
in
pop
in
xchg
insl
data16
aas
js
adc
aaa
mov
imull
add
push
push
mov
mov
sub
mov
mov
stos
and
loope
xchg
sbb
sbb
mov
inc
lcall
scas
xchg
mov
out
int3
adc
and
mov
xchg
cmpsb
ret
jl
sbbb
lea
fisubrl
shll
arpl
fiadds
cld
xchg
sbb
xor
int
adc
rcrl
add
xchg
mov
push
fsubl
lock
jecxz
scas
bound
cmpl
sarl
testl
stos
dec
lcall
roll
pop
leave
or
sbb
push
stos
shr
push
and
stos
inc
xor
movsb
ja
pop
sub
sbb
mov
test
pop
push
push
scas
xchg
cwtl
dec
sub
cmp
xor
div
adc
insl
mov
lods
jle
push
jnp
cmpsb
mov
add
xor
and
dec
sbb
jns
mov
inc
xor
fdivrp
mov
loope
idiv
and
movsl
aad
stc
test
testb
push
and
mov
rcr
sub
mov
les
std
cmp
xchg
sbb
xchg
mulb
pusha
jmp
xlat
fnsave
stos
dec
mov
and
adc
inc
addr16
js
mov
fwait
jl
fimull
jns
jns
cmpsl
nop
and
xchg
mov
xchg
pop
test
aam
inc
xchg
mov
mov
add
test
mov
lods
ljmp
stos
cmp
aam
outsb
mov
mov
sub
in
int
addl
xor
fs
ja
mov
jl
jnp
dec
sub
mov
sub
movsl
movsl
jns
rcll
xchg
mov
je
mov
mov
sbb
ret
cmp
jno
faddl
imul
ds
shlb
or
mov
iret
pop
lds
popa
xchg
aas
push
or
sub
inc
out
imul
bound
lods
xor
aam
xor
xor
add
sub
insb
xchg
lahf
lods
inc
mov
out
gs
les
loope
movsb
je
xor
stc
ja
mov
je
bound
jp
repnz
inc
pop
mov
inc
cmp
jae
fisttps
mov
adc
stc
sub
in
inc
imul
es
add
int
movsb
int3
je
cwtl
mov
cwtl
cmp
inc
and
push
xor
cmp
roll
loop
push
pop
int
test
fimuls
cmpl
les
sub
push
xchg
ja
rorl
aaa
loopne
dec
popf
xlat
lods
adc
mov
sub
dec
adcl
or
pusha
xlat
jne
and
push
mov
cmp
xor
jp
xchg
pusha
shrl
es
add
cmp
push
in
jmp
sub
fs
rclb
xor
mov
addl
xlat
xor
fcmovnu
mov
mov
sub
aam
cwtl
and
loop
cli
iret
lea
push
lcall
sub
nop
mov
cmpsb
xchg
jnp
push
lcall
je
fldl
mov
push
mov
cltd
push
daa
mov
cmp
out
iret
int3
js
int
mov
xchg
xor
dec
xchg
mov
inc
xchg
sbb
pushl
jmp
hlt
sbb
cmp
test
repnz
outsl
xchg
sti
movsl
mov
adc
and
pop
fstpt
adc
in
popa
fistps
aas
pop
subb
cmp
loop
popa
xchg
add
push
xlat
das
ret
inc
add
outsb
out
jg
xor
lahf
push
push
imul
xchg
adc
test
notb
and
mov
inc
lret
leave
icebp
lea
insl
scas
xchg
sub
bound
frstor
push
xor
jo
cld
lea
test
lods
fmul
pop
push
bound
jge
js
clc
dec
les
inc
adc
inc
add
mov
xor
xchg
cmp
mov
inc
shlb
or
dec
jno
mov
push
subb
lahf
movsb
push
in
push
loope
aam
int
push
push
outsl
mov
push
add
je
cmp
jl
cmc
cmc
xor
sub
add
sti
dec
dec
cmpsl
cmpsl
mov
inc
or
bsf
push
add
dec
pushf
ja
cmp
lds
jns
lret
mov
dec
adc
aaa
lds
or
in
incb
inc
repnz
pop
in
push
sub
sub
pop
mov
out
dec
ja
pop
xchg
mov
adc
push
and
adc
push
mov
inc
push
in
mov
aam
outsb
cmp
xchg
in
lock
xchg
xchg
mov
mov
mov
dec
cli
in
xor
cs
sub
xor
mov
jnp
insl
leave
lds
cmpsl
push
std
pop
leave
fnstsw
dec
xor
shrl
cli
add
and
roll
gs
cmp
sbb
mov
loope
xchg
int3
mov
or
mov
sti
mov
mov
xchg
pop
fadd
outsb
push
adcl
pop
out
inc
adc
xor
ret
jb
add
mov
dec
jmp
xorl
shll
adc
repz
pop
mov
cmp
scas
cwtl
and
dec
jmp
mov
xor
out
stos
or
add
lods
jmp
insb
mov
mov
jg
sahf
mov
lods
and
xor
aas
dec
rorl
sbb
imul
es
mov
pop
add
dec
ss
rcl
cmp
dec
xlat
mov
lock
and
cmp
push
and
mull
shll
rcll
pop
dec
cmpsl
lods
push
mov
sbb
mov
mov
into
ljmp
mov
dec
or
sbb
pop
icebp
mov
lea
sbb
leave
mov
sbb
ss
xor
push
jg
mov
inc
pop
cmp
js
loop
dec
dec
adc
push
inc
dec
xor
aam
sbb
adc
xchg
sbb
leave
or
jo
fcomps
gs
add
jp
mov
pop
cmc
pop
xchg
je
push
jecxz
icebp
cmp
inc
cmp
loop
dec
xchg
xor
insl
xchg
fiaddl
push
jge
pop
loope
cmp
in
sbb
mov
je
inc
rorl
push
lcall
mov
mov
addl
mov
or
test
lock
and
movsl
into
cmp
arpl
adc
xchg
push
adc
xchg
js
lret
mov
add
add
or
in
shrb
jno
pop
xchg
jae
cmpsb
cmpsl
popw
test
lods
ljmp
pushf
in
pop
push
fbld
add
push
sbb
movsl
mov
mov
lods
xchg
fsub
jmp
cwtl
jae
and
ds
in
xor
jne
push
dec
push
scas
pop
or
inc
sti
aad
jecxz
jg
loop
subb
xchg
lds
sbb
sub
ss
inc
arpl
imul
sbbl
cltd
addb
sub
daa
xchg
sub
pusha
or
lcall
sbb
stc
out
pusha
sub
dec
mov
pop
pusha
dec
push
or
jns
xchg
in
cltd
push
add
mov
mov
cmp
cmp
jo
pop
or
lods
sub
cmp
mov
popf
or
pop
cmp
push
mov
cs
dec
add
movsl
ficomps
stos
aad
cs
rcl
hlt
push
lds
cmc
cmp
cmp
jmp
mov
sbb
aam
imul
ljmp
icebp
call
bswap
cmc
xchg
das
insb
push
sub
mov
mov
test
data16
in
pop
mov
je
jp
sar
aam
xchg
jecxz
cmc
das
loop
ret
shll
and
or
ret
mov
aad
dec
dec
mov
aas
nop
cli
adc
jge
jno
imull
adc
lcall
push
cmp
jmp
test
sub
and
sbb
popf
pop
lcall
sbb
mov
mov
cmpsl
sub
dec
imul
add
inc
test
dec
pop
or
out
sbb
cmp
mov
push
in
jg
mov
testl
stc
inc
or
cmp
xor
mov
mov
mov
mov
subl
sbbb
inc
pop
mov
jae
mov
cltd
scas
stos
xor
enter
adc
sub
cmp
into
insl
roll
lods
and
fwait
jg
pop
aad
cmpb
outsl
rolb
xchg
ljmp
cmc
mov
mov
jnp
sub
fmull
notl
dec
int
cmp
push
out
int
jl
aad
fsubrs
aas
insb
insb
sti
jne
fimull
jle
mov
fstps
jno
pop
dec
xchg
push
andl
jae
xor
cmp
lahf
lods
jns
pop
repnz
mov
jns
dec
mov
scas
jecxz
jo
sub
lds
adc
std
outsb
push
dec
cltd
mov
loope
mov
jne
sub
lahf
aam
sahf
movsb
cmpsb
push
insl
mov
mov
pop
cmp
pop
lcall
jle
xor
jl
imul
xor
test
xlat
sbb
lock
and
jmp
loope
aad
icebp
inc
jbe
fcoms
sub
rolb
adc
lods
inc
mov
stos
int3
test
jmp
push
cltd
mov
pop
mov
sub
or
rclb
ja
sub
lcall
push
repnz
dec
or
dec
inc
dec
lods
pusha
negl
dec
mov
xchg
jecxz
xlat
out
in
iret
lock
adc
add
lds
dec
lahf
in
inc
fldcw
addr16
and
fwait
sub
lahf
xorl
sbb
arpl
cmp
push
mov
shl
cmpb
or
lcall
cmp
fdiv
jle
xor
in
xchg
jnp
addr16
pop
xlat
xor
cwtl
push
pop
or
mov
hlt
pop
jmp
int
push
dec
inc
fs
stc
fidivrl
sbb
je
cltd
je
and
dec
ret
stc
je
xchg
sbb
xchg
xor
jle
loop
sbb
or
push
orl
aam
pushf
jb
and
es
divb
jbe
cwtl
pop
jl
mov
testb
mov
in
xor
in
addr16
xchg
sub
lea
sub
sbb
into
dec
sub
fcmovnu
sub
mov
imul
movsl
out
fcmovu
mov
ss
js
cmp
in
fcompl
mov
jle
jg
leave
mov
ja
cmpb
jns
clc
xchg
inc
stc
subl
les
cmp
mulps
arpl
dec
out
pop
xchg
lods
xchg
aad
nop
add
mov
mov
jb
push
and
jmp
xlat
fsubs
jl
or
stc
stc
xchg
sub
dec
fildl
icebp
inc
test
push
aam
jp
add
cmp
in
jp
loope
sbb
inc
cmp
outsb
cmp
ret
jle
das
repz
sub
in
pop
data16
push
dec
bound
xor
repnz
inc
outsl
sbb
daa
test
stc
xorl
fmuls
sahf
push
jg
jnp
adc
add
cmpsb
stos
leave
sub
rolb
rolb
int3
xchg
mov
rcr
lods
in
inc
pop
cld
mov
dec
aas
enter
pop
xorl
in
lret
in
imul
xchg
pop
jmp
out
imul
mov
int
push
je
test
cwtl
push
lds
andl
loopne
leave
push
cmpsb
xchg
push
shr
cld
insb
xor
or
or
push
and
in
push
mov
inc
mov
cltd
pop
cmpsl
imul
xor
sbb
lock
test
xor
gs
mov
in
xchg
popa
jae
out
xor
adc
int
call
mov
pushf
xchg
mov
pushf
and
loopne
xchg
and
cmp
pushf
or
hlt
mov
out
or
and
loopew
shll
jae
pop
mov
je
mov
sub
dec
mov
outsb
ret
cwtl
imul
loop
push
out
sbb
scas
mov
push
daa
mov
mov
addr16
popl
fprem1
stos
sbb
loop
movsl
mov
aam
jno
cld
adc
jns
std
pop
mov
sbb
into
mov
ret
xchg
and
jne
scas
insb
mov
xorl
push
add
or
repz
das
ffreep
push
adc
cmp
lods
test
pop
aas
les
mov
mov
sbb
jl
lcall
les
jbe
ret
inc
ss
mov
cld
int
pusha
or
jp
mov
test
orl
push
jecxz
xchg
dec
ret
nop
in
rorb
pop
jo
push
hlt
cwtl
xchg
loopne
das
mov
rcll
lret
ficoml
aad
repnz
pop
xchg
test
fdivrs
mov
or
jae
notl
push
ljmp
rorl
out
adc
out
add
aam
mov
popf
sbb
int3
mov
xchg
sub
leave
pop
inc
pushf
cmc
in
push
shll
jo
xor
cli
cmpsb
pop
cmp
sahf
mov
mov
fwait
pop
mov
pop
adcl
push
popf
mov
sti
mov
sti
and
pop
out
lahf
or
inc
inc
test
mov
out
mov
or
adc
sbb
filds
mov
add
push
js,pn
pusha
scas
mov
jnp
adc
loope
ja
sarl
movsb
sub
push
sbb
les
or
imul
mov
push
and
popa
fwait
mov
fldenv
ret
adcl
or
or
stos
sub
cltd
mov
shl
xchg
lahf
cli
jbe
or
shlb
scas
sarl
xor
push
into
jecxz
aam
and
test
mov
scas
pop
scas
shrl
dec
fsub
fwait
aas
iret
mov
cmp
in
jp
fidivl
cmpsl
cmpsb
jp
mov
mov
loope
iretw
test
mov
jmp
cmp
mov
sbb
ss
or
jb
jb
lea
mov
jo
aas
inc
push
or
insb
cmp
xchg
xor
ds
mov
mov
xor
xchg
push
dec
das
pop
daa
mov
pop
bnd
add
sbbl
shlb
out
inc
inc
and
mov
mov
aaa
popa
lahf
fistpl
jmp
push
fxch
cld
cmp
out
pop
leave
movhlps
lods
pop
cld
jo
mov
jp
inc
xchg
pop
or
add
inc
mov
push
mov
dec
test
pop
cmpsl
cwtl
lahf
mov
xor
xor
add
cmp
aam
xchg
mov
dec
repnz
icebp
or
les
ret
pop
push
shrb
fwait
movsb
mov
xchg
pop
push
arpl
dec
mov
add
pop
inc
mov
mov
mov
aad
jmp
jmp
pop
jecxz
out
jae
lret
xor
push
add
or
scas
push
xlat
push
ret
push
fstp
outsl
lcall
push
sarl
jns
cs
mov
push
aad
pop
mov
dec
mov
mov
rcll
cwtl
lock
outsb
push
sbb
roll
sbb
mov
pop
popa
mov
xchg
inc
jge
aam
sub
bound
sbb
leave
stos
xor
or
pop
xlat
push
enter
and
cmpsl
jne
orb
push
add
mov
push
loopne
test
lcall
jl
xor
and
shr
mov
xor
repz
xchg
push
test
mov
inc
repnz
sarb
or
sahf
jb
inc
insb
data16
add
mov
xor
fucomi
sbb
cmp
in
mov
push
bound
add
add
dec
dec
mov
mov
data16
mov
xor
adc
inc
insl
cmp
jg
cmp
push
int3
adc
negl
repnz
dec
mov
insl
adc
mov
addr16
mov
push
rclb
or
sub
dec
pop
aas
test
pop
leave
pop
out
sub
xchg
mov
xchg
xor
in
stc
iret
aad
int
fneni(8087
test
mov
mov
inc
pushf
push
andl
idivb
arpl
jnp
lods
fists
stos
sub
or
push
adc
pop
cwtl
shlb
pop
and
out
das
sbb
push
mov
call
js
dec
mov
jmp
arpl
aad
data16
add
or
movsl
int
out
fwait
mov
xchg
and
inc
add
ud2
stos
push
push
and
jle
xchg
int
push
and
jnp
sub
push
fisubl
xchg
es
push
jo
leave
out
mov
mov
orb
cmp
add
iret
pop
loopne
pop
xchg
frstor
loopne
outsb
bound
hlt
mov
mov
dec
in
gs
cmp
push
popf
enter
cmp
dec
scas
dec
nop
cmpsb
inc
add
es
aas
adc
into
cmp
insb
jnp
push
jae
test
mov
aas
insl
cli
lea
test
push
pop
xor
lret
dec
dec
push
sbb
push
cmp
ds
dec
test
push
out
call
mov
push
fbld
in
mov
xchg
lcall
lds
push
out
fcomps
int3
arpl
fsubp
cmp
inc
adc
add
mov
jnp
into
jae
movsl
cmp
test
fsub
inc
xchg
pushf
sub
push
ret
push
in
ficomps
aam
push
imul
jp
adc
push
nop
adc
das
test
ficomps
jb
fdivrs
and
lahf
inc
loopne
int3
ret
iret
int
jl
mov
push
or
std
add
mov
xchg
stos
repz
pop
movsb
xchg
dec
cmpsb
sti
lcall
ss
daa
pop
lods
xchg
sub
insl
mov
fwait
out
xchg
mov
and
jmp
out
add
popa
xor
xchg
shl
testl
popf
mov
fdiv
shll
lds
vpmovsxbq
rolb
and
cmp
das
cli
int3
cli
mov
andb
stos
jbe
mov
cld
add
mov
push
add
add
cmp
jns
jo
inc
mov
xchg
xor
adc
and
ljmp
xchg
xor
divl
xchg
inc
inc
call
and
mov
shr
cmp
adc
cmp
mov
cmc
xchg
add
jb
arpl
or
aas
pop
push
gs
mov
mov
stos
sbb
pop
jns
in
sub
daa
cmp
lret
mov
jle
daa
pushf
xchg
xchg
mov
push
in
mov
add
mov
clc
into
in
or
jb
loope
add
mov
loopne
jmp
fadds
rorl
insl
lret
jno
xchg
hlt
out
cld
or
out
jns
sahf
jb
hlt
jne
rclb
js
nop
xchg
mov
popf
fnstcw
mov
mov
dec
sbb
ds
testb
mov
sbb
push
ja
mov
pop
cwtl
jns
mov
sub
mov
xchg
lcall
jl
aad
cld
rolb
test
push
fwait
inc
pop
add
ss
push
inc
pop
xor
fldcw
out
mov
in
jp
inc
jle
sti
scas
push
cs
das
mov
xorl
and
mov
ret
sbb
dec
arpl
push
gs
jbe
test
ret
mov
and
ret
mov
lock
jb
adc
andb
inc
scas
outsl
push
cs
inc
popf
push
mov
scas
stos
stos
lahf
push
adc
xor
mov
stos
pop
add
dec
mov
mov
movsb
lret
mov
inc
addr16
push
pop
stos
das
out
mov
lcall
xchg
mov
fisubs
xor
sub
push
add
gs
inc
push
fdivrs
out
loopne
xor
lds
dec
mov
mov
scas
dec
stos
in
xchg
int
or
push
mov
mov
rorb
pop
fucomip
dec
add
add
sbb
dec
lods
das
jp
in
dec
cs
push
cmp
dec
add
divb
cmpsb
push
pop
push
stos
mov
mov
andnps
mov
xchg
int
stos
sub
imul
aam
pop
add
add
adc
outsb
jmp
loopne
loopne
add
push
add
and
add
test
add
fcomip
jno
xor
cmp
inc
daa
xchg
lods
add
pop
lret
rcrl
push
sub
out
sbb
xchg
imul
andl
scas
test
jb
and
inc
fwait
jo
adc
xor
cmp
pop
mov
xor
push
aad
stos
xor
adc
bound
addb
ret
inc
jp
inc
adc
in
idivb
mov
adc
dec
sti
mov
mov
cmpsb
add
ret
dec
sbb
cld
mov
cltd
and
lea
call
lds
add
lret
das
and
cmc
testb
ss
test
sbb
sbbb
xor
imul
push
movl
gs
mov
dec
test
push
adc
cmp
data16
cwtl
outsl
cmp
pusha
sti
pop
sub
jne
jg
or
xchg
aam
inc
fstpl
push
adc
leave
mov
int3
cmp
cmp
dec
mov
inc
loope
push
jg
stos
enter
add
aam
vmwrite
js
push
ljmp
pop
mov
test
pop
mov
into
outsl
loop
sbb
jmp
add
dec
push
xor
jmp
jb
movsl
nop
shll
in
mov
aas
shr
bound
and
mov
shrd
mov
ror
adc
movsl
sub
test
scas
xor
cmp
xor
outsl
sub
popa
test
stos
je
jbe
pop
gs
jbe
lods
cmp
dec
push
sub
cmp
jmp
std
std
mov
push
pop
ds
jb
xor
cmp
roll
pushf
movsb
cmp
push
xchg
sub
xchg
out
out
jb
jnp
mov
dec
data16
ds
fucomi
movsb
stos
dec
es
jp
nop
push
das
jg
shld
ret
cmp
ds
insl
sbb
mov
push
or
idiv
aas
leave
es
and
jo
push
add
sbb
or
cmpsb
shl
mov
leave
repz
ret
adc
and
cmpl
in
lock
adc
jmp
fsts
fisubrl
shl
inc
out
addl
cltd
dec
sbb
push
mov
fcmovbe
movsl
inc
push
cmp
cmp
cmpsb
jns
div
fs
test
dec
pusha
arpl
mov
adc
jo
iret
and
int3
sub
subl
lret
rcll
clc
out
xchg
jo
ret
jne
jne
inc
repnz
mov
sub
das
mov
dec
xor
xchg
decb
inc
gs
rcrb
push
sub
pop
je
mov
mov
adc
int3
sub
cld
xor
into
cs
lret
rcl
in
mov
sbb
popf
sarl
std
and
inc
insb
outsb
cmpsb
aad
loope
xor
or
sub
outsb
repnz
dec
lds
decl
mov
hlt
sub
test
xlat
xchg
fsubl
xor
xor
or
flds
ss
sub
data16
daa
xchg
repz
popa
pushf
jecxz
call
push
or
mov
jns
jp
adc
mov
push
mov
cmp
inc
es
mov
xor
lret
fs
movsl
int
xchg
out
jo
hlt
or
adc
dec
sbb
lret
lret
popa
sub
push
das
adc
push
push
xor
push
loopne
adc
je
push
add
das
cmpb
inc
xor
jl
sub
push
adc
xlat
cwtl
jp
sub
jge
pop
add
mov
rol
out
xchg
dec
shl
jp
mov
ficomps
xchg
pusha
cmpsl
fwait
ljmp
mov
xchg
jle
mov
xor
push
negb
std
hlt
aaa
stos
lcall
adc
push
adc
dec
aas
xor
outsb
adc
or
mov
adc
and
jo
push
arpl
test
mov
mov
dec
mov
popa
repnz
push
jp
mov
xchg
je
repnz
dec
das
push
mov
bound
jo
inc
xrelease
xchg
cmp
pop
add
insb
call
inc
loopne
xorb
xor
fcomi
inc
test
xchg
push
inc
pop
push
or
push
dec
sub
nop
inc
xchg
sub
xchg
adc
daa
iret
mov
push
dec
arpl
jno
jb
mov
pop
push
rol
stos
jo
push
js
or
jge
loope
testl
pop
ror
jge
adc
pop
stos
je
dec
or
aaa
cmp
sti
sub
xchg
push
out
popf
scas
iret
rorb
aam
push
dec
sbb
popa
xchg
xor
out
and
mov
stos
lret
mov
sbb
push
test
int
mov
clc
or
outsl
pop
sbb
dec
sbb
mov
stc
or
or
jmp
test
call
push
or
xor
sarb
jl
pop
adc
jbe
call
stc
xchg
mov
dec
movsb
out
ror
mov
movl
cmpsl
sbb
rcll
fstl
dec
lods
push
pop
jmp
pop
jp,pt
cmp
ficomps
je
bound
mov
mov
and
pop
mov
xor
or
adc
push
leave
push
mov
or
call
nop
mov
jg
ds
mov
cmpb
lret
popa
in
hlt
into
adc
xor
insl
sub
and
push
fldenv
ret
mov
into
cmp
adc
in
aaa
pop
ljmp
xchg
jae
jmp
sub
inc
mov
or
repz
rcrl
add
ljmp
push
fcomps
fs
inc
pop
out
cmp
ljmp
jl
push
add
fs
adc
lds
adc
movsl
pop
leave
in
cmpsb
cmp
inc
ss
xchg
jns
cmpsl
and
jl
mov
aam
lds
dec
cmp
add
push
ja
add
dec
xchg
sar
mov
sub
or
iret
inc
rol
int
jg
fstpl
jmp
push
aam
fabs
sbb
push
icebp
in
cmp
xor
or
inc
lods
leave
icebp
test
testl
push
adc
xor
nop
sbb
leave
cltd
cmp
add
cwtl
pop
lock
into
lahf
pop
mov
jmp
leave
lret
stc
jno
sbb
test
mov
sbb
lret
push
mov
lods
inc
repnz
loop
cmc
data16
inc
xlat
push
adc
call
xor
loop
jge
sub
dec
sbb
cmp
jns
adc
add
repz
enter
inc
ljmp
push
xor
cmp
aaa
adc
and
mov
adc
jecxz
lahf
lds
insb
jo
imul
mov
testl
push
hlt
jl
pop
push
dec
sbbl
adc
sub
scas
sub
add
pop
xor
loope
pop
sbbb
dec
push
aad
test
push
adc
push
xchg
in
mov
jmp
lods
jb
cmp
jae
inc
mov
xchg
loope
xor
inc
pop
add
ret
mov
leave
xor
mov
cmp
adc
mov
sbb
dec
adc
add
adc
xor
sbb
pop
addr16
aad
aas
aad
push
push
push
jg
repz
js
mov
sub
lcall
add
sub
loopne
mov
jne
inc
ds
outsl
and
jae
les
add
mov
jge
cs
sub
mov
inc
xlat
pop
stos
inc
movsb
hlt
or
aad
in
stc
fmulp
pusha
imul
lcall
popf
and
das
sub
cmp
repnz
in
push
dec
es
leave
and
lahf
les
imul
pop
push
inc
cs
frstor
mov
jle
repz
pop
popf
outsb
aaa
jp
push
popf
mov
icebp
inc
jb
es
imul
arpl
aam
mov
sub
into
int
dec
imul
push
das
icebp
mov
pusha
out
xor
std
cmp
inc
inc
add
add
cmp
lcall
lret
outsb
stos
in
push
into
xchg
shlb
or
adc
pop
pusha
mov
lcall
mov
inc
fdivrl
cmp
cs
add
add
jbe
mov
cltd
filds
insb
mov
jbe
dec
adc
dec
mov
jle
out
shll
scas
xor
stos
sub
push
insb
movzwl
sub
cmp
pop
and
dec
and
clts
test
pop
ror
ret
mov
jg
adc
scas
add
jge
inc
jp
out
fs
xor
cld
mov
data16
pop
fdivrl
jne
mov
push
inc
pop
xchg
cli
fstps
icebp
loopne
inc
scas
into
ret
les
int
sub
push
enter
inc
xor
jne
or
sub
jg
sti
fldenv
aaa
in
test
subl
fsubrl
xor
pop
mov
adc
sub
jo
push
jecxz
test
inc
or
add
ljmp
mov
mov
sarl
push
mov
loope
insl
imul
pop
addr16
insb
movnti
inc
and
dec
xor
xlat
push
push
popf
jne
sub
cli
jae
add
cmp
mov
fs
outsl
mov
mov
dec
mov
pop
push
ljmp
iret
push
xor
push
jecxz
shll
and
iret
stc
xor
jg
mov
shll
pop
lea
clc
push
xchg
cltd
push
pop
mov
pop
mov
popf
in
add
or
or
insl
out
cmp
das
icebp
icebp
push
mov
push
push
movsb
mov
negb
xor
or
pop
scas
in
adc
stos
sbb
int3
pop
push
and
dec
push
cmp
sbb
push
pop
push
das
lcall
pop
ret
push
out
shrb
sbbb
in
adc
stos
ret
mov
clc
cld
pop
pop
sbb
scas
in
push
les
mov
mov
push
sub
out
and
pop
cmp
imull
push
adc
mov
das
bound
sbb
cwtl
xor
ss
add
stos
add
cmp
jge
jb
cmpsb
frstor
jge
adc
push
fstpl
dec
push
xchg
dec
sti
repnz
outsl
push
fisttps
lds
xor
les
push
adc
jo
scas
push
repnz
and
cmp
add
pusha
cli
jp
fiadds
add
clc
dec
cltd
addr16
ret
sub
nop
cli
ror
mov
push
sub
imulb
inc
jne
pop
sub
fwait
xor
sbb
aaa
inc
sbb
loopne
imul
mov
dec
jle
rclb
icebp
rcl
xchg
aad
loopne
jmp
pop
mov
outsb
mov
stos
adc
xchg
sar
sahf
int
cmp
icebp
xchg
push
lret
and
push
or
test
and
fmull
push
lds
in
aam
and
in
inc
in
in
xchg
rclb
out
push
int
dec
rcrb
sub
int
dec
dec
xchg
mov
jno
cs
loop
or
in
mov
push
bound
sub
shl
repnz
add
jg
mov
insb
js
jecxz
xchg
lock
shr
cmp
sbb
ret
insl
rcrb
mov
andb
cmp
lea
loopne
inc
push
xlat
xor
mov
push
xlat
cmc
and
lock
divb
bound
ficompl
and
pop
pusha
imul
jg
xchg
js
mov
ds
mov
shll
dec
pop
stos
adc
cmp
push
cmp
jg
pop
adc
movsb
lods
loop
inc
or
cmc
stc
lcall
inc
xchg
push
xor
iret
fidivs
lahf
lcall
adc
pop
js
jnp
pop
and
xchg
jbe
mov
sahf
sub
mov
sub
stos
mov
and
lret
mov
mov
iret
mov
adc
mov
out
inc
sub
mov
stos
fwait
call
in
mov
push
sti
sub
jl
xchg
xlat
mov
mov
push
xchg
or
es
imul
pop
pop
cmp
inc
out
pop
das
jecxz
or
inc
imul
fistps
xacquire
and
push
outsb
int3
in
dec
lods
rorl
in
out
sarl
les
jne
add
shll
xor
xchg
push
mov
int
mov
and
mov
es
pop
jno
sbb
rcll
dec
out
cmp
cmp
xchg
or
test
addr16
imul
inc
or
bound
xchg
std
push
inc
test
outsb
adc
inc
cltd
pop
stos
push
leave
fcmovu
popa
adcl
dec
lea
orl
inc
jo
jb
pop
mov
adc
add
mov
sbb
jl
loopne
push
movsl
cmp
cmp
xchg
or
cmpsb
fstps
mov
std
dec
push
out
neg
icebp
mov
shlb
mov
lock
or
mov
sahf
andb
cmp
cmc
in
dec
jno
shrb
lds
and
lahf
fs
add
xchg
pop
cmp
loopne
mov
xor
pushf
lret
js
ret
cmc
push
pop
mov
and
adcl
arpl
rcrl
out
imul
mov
leave
sarb
dec
cmp
lea
inc
and
pop
stc
adc
sbb
outsb
js
mov
sub
pop
push
adcl
push
cs
outsb
cwtl
mov
test
das
mov
aas
jnp
int3
pop
cli
jno
imul
inc
sub
or
mov
stos
cmpsb
push
sub
push
dec
jo
scas
in
inc
and
mov
fstps
sbb
xor
inc
imul
out
test
les
test
xor
mov
ds
xchg
fldt
nop
sbb
sub
repz
stos
mov
out
sti
jbe
ja
ljmp
cmpl
stos
or
push
inc
stos
stos
mov
mov
xchg
add
mov
push
pushf
or
into
stos
cmp
cmp
mov
test
push
mov
mov
mov
mov
inc
mov
cmp
add
add
faddl
lea
cltd
mov
add
push
xor
mov
iret
mov
cmp
add
inc
imul
adc
cmp
cld
pop
and
jg
aaa
push
xchg
ficompl
dec
jmp
mov
aam
insb
mov
stos
cmp
lock
dec
push
pusha
hlt
mov
fidivrl
aas
jmp
add
push
clc
addr16
out
fiadds
out
dec
xchg
pop
xor
xlat
dec
cs
das
push
in
xchg
add
cli
out
or
test
xor
jle
pop
out
stos
cmp
xlat
ja
jg
les
dec
adc
xlat
sub
adc
and
out
das
in
push
xchg
mov
imul
into
jmp
jbe
dec
insb
fldenv
in
xsha256
pop
aam
pop
xchg
imul
push
pop
pusha
push
cmp
xor
pop
enter
mov
dec
add
and
cmp
sub
add
pop
push
lea
or
int
mov
adc
xchg
jno
ja
cmc
dec
daa
xor
pushf
cmpl
fs
mov
jle
adc
jb
jmp
xor
ds
mov
inc
xchg
mov
ficomps
pop
or
pop
scas
pop
inc
or
lret
sub
pop
jp
scas
lock
mov
lock
xor
or
lock
ljmp
push
jmp
ja
dec
dec
adc
mov
mov
mov
repz
mov
and
int3
rcrb
int3
sbb
dec
inc
xor
movsl
jecxz
push
mov
mov
je
add
mov
pop
push
loopne
insl
scas
mov
xchg
notl
hlt
xchg
or
lock
outsl
or
push
jbe
in
pop
sbb
push
fistpl
xchg
scas
repnz
and
push
test
mov
dec
cli
sbb
jmp
push
inc
frstor
jecxz
in
pusha
iret
fbstp
aam
xor
adc
sub
mov
seto
inc
and
mov
sub
pop
dec
push
test
mov
repnz
sbbl
cltd
or
test
mov
sub
std
call
push
cmc
pusha
sbb
test
rorl
sbb
ja,pn
inc
dec
or
pop
test
dec
imul
mov
xor
push
inc
sarl
mov
push
jbe
inc
movsl
je
jns
lcall
pop
loopne
aaa
fisttpll
adc
leave
stc
dec
loopne
insl
fldt
jae
shl
xor
repnz
xor
rcrl
in
xchg
int
jge
ja
cmp
rep
xor
mov
mov
dec
jmp
iret
ljmp
jbe
das
inc
out
cli
sub
add
int3
jae
pop
and
xchg
insl
or
subl
test
adc
inc
sarl
rorl
jmp
jbe
push
or
lahf
inc
ja
jmp
sbbl
mov
mov
inc
pop
xor
jne
sub
dec
or
sub
decl
lret
sub
scas
in
inc
mov
and
mov
push
add
xchg
push
and
sbb
adc
xchg
addr16
fidivl
push
cwtl
add
btr
dec
ret
fists
cmp
sub
or
out
jl
pop
xchg
mov
push
push
dec
mov
mov
cmp
sarb
in
je
mov
mov
cwtl
sub
outsb
mov
and
aad
popa
loope
enter
imul
sbb
push
movsb
push
call
pop
xor
jp
sahf
xor
adc
xchg
mov
repz
fwait
push
out
add
cmpsb
pop
xor
xor
cmovg
cld
leave
call
push
cmpsb
mov
gs
in
xchg
push
int3
test
aaa
jl
add
mov
push
xchg
fs
out
xor
and
icebp
cld
sti
repz
and
or
lret
btc
sbb
jae
jp
jl,pt
cmpsl
int3
push
loopne
xchg
ljmpw
icebp
jno
cmp
imul
inc
stos
dec
ret
and
push
and
jge
out
push
mov
jle
pop
cmpsb
mov
negl
push
out
mov
or
adc
sbb
cmpsl
dec
stc
mov
loope
bnd
or
inc
cmc
pushf
push
out
insb
mov
sub
push
or
pop
sbb
lahf
outsl
aam
das
scas
fcoml
pop
cmp
out
xchg
scas
xor
outsl
pop
stc
push
lret
in
js
fildl
les
add
in
mov
cmp
fsubl
jl
sub
aad
and
iret
push
push
cmp
fs
ret
mov
and
pop
add
and
inc
xor
sub
push
mov
ret
mov
mov
jecxz
out
push
and
push
scas
shrb
jbe
mov
gs
xchg
int
in
push
mov
or
mov
std
sub
into
adc
xchg
xchg
xor
out
iret
pop
cmp
loopne
in
push
sbbb
fnsave
push
mov
int
inc
push
jg
mov
jecxz
dec
lahf
sbb
ja
jae
imul
nop
testb
mov
jge
fbld
mov
sub
jnp
mov
sbb
cwtl
xor
clc
xor
xchg
andl
not
push
inc
sub
xchg
adc
jo
sub
loop
andl
pop
xchg
jnp
inc
addr16
inc
jbe
pusha
xor
divl
adc
movsl
dec
mov
push
add
into
mov
push
xchg
fildl
add
inc
cmpsb
adc
sub
faddp
cltd
divl
test
sbb
push
dec
mov
adc
push
push
pop
pushf
mov
jecxz
sbb
jp
xchg
outsb
stos
in
push
jle
push
pop
lods
subb
push
sub
and
cmpb
pop
stc
push
dec
lds
mov
lcall
fs
dec
cmc
in
aaa
in
sahf
push
cmp
mov
push
mov
cli
les
dec
mov
shl
jle
ror
push
stos
and
stc
xor
fs
mov
adc
es
insl
push
jmp
mov
mov
fistpll
dec
adc
into
je
push
mov
xor
jmp
pop
cld
jne
xchg
jnp
xlat
xor
xchg
mov
in
xchg
pusha
loopne
xchg
xorl
popf
cmp
popf
cmp
enter
pop
popa
sahf
aad
mov
jo
or
mov
pushf
inc
jecxz
jne
xor
mov
or
popa
fistpll
and
adc
movsl
mov
cmp
outsl
inc
mov
shrb
pop
cli
out
sti
mov
gs
xor
adc
incl
std
negb
loopne
cli
fldl
xchg
dec
jnp
fbld
sbb
xorb
ljmp
idivl
out
bound
lods
push
imul
jp
inc
add
imul
xor
inc
mov
scas
shlb
dec
sub
or
int
jl
ret
cwtl
xchg
int
xor
mov
cmp
pop
rorb
sub
ret
mov
in
add
scas
and
sahf
fcoml
adc
mov
fdivrs
jecxz
sub
outsb
cmp
push
sti
out
xchg
pop
mov
gs
dec
loope
and
jmp
out
jecxz
mov
pop
leave
cmp
and
cmp
push
mov
and
pop
cmp
mov
jle
mov
sbb
add
arpl
pop
les
int
cmp
dec
jb
inc
into
mov
divps
test
out
popf
aam
inc
sub
std
in
jne
fs
inc
pop
add
loopne
out
or
jl
xor
dec
test
mov
adc
adc
inc
fstpt
cmp
popf
ret
jo
aas
add
push
jnp
push
mov
or
pop
dec
inc
cmc
xchg
loope
enter
ret
inc
aaa
in
loop
out
add
mov
pop
mov
out
push
lods
sbb
mov
sti
mov
fisttpll
xchg
mov
pop
in
std
hlt
mov
xorl
inc
jnp
lret
cltd
push
push
imul
int3
sahf
push
mov
and
ds
out
imul
lods
xor
mov
into
cmpsl
add
push
jmp
jbe
loop
or
jl
xchg
sub
push
aad
dec
push
ja
sbbb
in
insl
lret
clc
push
adc
inc
pop
and
fisttpl
roll
pop
sbb
in
dec
lret
fcompl
fldt
fdivrs
aas
adc
add
pop
dec
in
js
xchg
or
fcmovu
hlt
lret
mov
insb
adc
sub
cmp
ljmp
call
mov
leave
push
push
data16
test
or
movsb
push
push
mov
shrl
pusha
ret
cli
sbb
mov
jg
add
xor
mov
cmpsb
xchg
adc
insl
pop
add
sbb
cs
and
imul
into
jmp
into
ja
stos
or
mov
and
cmp
mov
xor
outsl
push
cmc
roll
push
dec
jb
cwtl
dec
pop
mov
daa
jl
fcom
ret
dec
add
shrl
andl
mov
or
adc
data16
jle
stos
adc
sub
into
xchg
jo
jno
dec
fdivs
jmp
jl
roll
jmp
mov
sub
test
jo
cli
stos
push
mov
xchg
mov
and
add
lcall
sti
aad
out
pop
rol
pop
adcb
imul
inc
imul
inc
shlb
cmpsl
inc
push
pop
push
test
sbb
lret
fdivl
sbb
sub
shr
cmp
enter
incb
sbb
jb
or
jae
mov
dec
add
ret
shrl
mov
imul
into
xchg
inc
pop
push
daa
imul
pop
pop
lcall
xor
mov
divb
push
rcr
cmpb
xor
lahf
loopne
imul
je
xchg
sahf
int
popf
xchg
sub
push
enter
fcmovnbe
and
push
roll
sub
fcoms
sahf
nop
in
sub
cmpsl
add
pop
sub
rcrb
out
xchg
lret
jecxz
pop
mov
pop
cwtl
sbb
fwait
ret
hlt
popa
sbb
mov
add
aad
cmp
ss
and
dec
mov
ds
and
jno
jbe
out
sbb
gs
lahf
movsb
xchg
addb
mov
ds
or
cmp
add
and
xchg
cmp
std
sbb
or
rcrl
lcall
push
daa
and
xor
jnp
dec
adc
imul
enter
out
cmpsb
scas
jae
sub
cmp
mov
mov
mov
adc
popl
mov
scas
hlt
sahf
or
lret
aad
jmp
xor
xchg
sub
test
mov
aaa
ss
adc
je
cmp
dec
inc
push
inc
sub
and
and
into
pop
das
imul
mov
pcmpeqd
enter
and
aaa
cmp
je
out
test
test
out
ret
and
iret
call
sub
xchg
adc
cwtl
mov
out
js
testb
shl
dec
mov
sbb
insb
sub
mov
dec
into
stc
repz
xchg
cmp
fwait
int3
ss
xchg
and
and
and
cmc
mov
mov
stc
call
sub
mov
push
xchg
imul
mov
in
mov
mov
ss
xor
mov
or
lcall
jae
mov
inc
pusha
mov
lea
ljmp
inc
push
pop
and
fisttps
call
cld
faddl
xchg
out
jecxz
pusha
xchg
rorb
jno
les
cmc
adc
call
sarl
jb
mov
rcrl
insl
sti
loop
dec
pop
dec
dec
and
push
dec
ret
outsb
repnz
jnp
mov
cltd
sbb
roll
push
leave
push
loopne
adc
imul
test
icebp
push
mov
sbb
int3
sti
cld
mov
xor
mov
outsl
cltd
jge
dec
fldcw
adc
in
adcl
movsl
xchg
cmpsl
sub
test
push
inc
imul
push
xchg
aaa
mov
mov
jge
mov
test
lahf
loopne
addr16
xorl
add
push
push
out
sbbl
je
icebp
hlt
ficoms
repz
xchg
cmp
jne
jp
mov
dec
adc
inc
cmp
cmp
das
cmp
loope
jne
test
pop
scas
xor
mov
cltd
sbbb
loopne
mov
sub
ljmp
push
sbb
xor
push
xchg
icebp
es
cltd
js
fimull
dec
lock
xchg
ja
jne
sbb
push
xor
ret
mov
sub
push
stos
dec
xchg
push
mov
add
cmp
not
or
xor
call
fdivrs
mov
dec
add
or
add
subl
dec
or
aam
scas
clc
cmc
lds
add
cmc
sub
dec
cli
imul
lods
sub
dec
jmp
lods
jbe
lret
and
in
mov
and
mov
jg
xchg
xchg
inc
jae
sbb
jno
or
lahf
push
mov
dec
jnp
test
adc
push
jp
inc
dec
cmc
mov
mov
loope
les
mov
dec
test
ret
shl
xchg
mov
or
dec
mov
jae
adc
pop
das
dec
clc
and
inc
adc
and
repnz
jle
popa
test
or
aas
adc
out
lea
adc
cltd
rorl
xor
out
call
add
mov
pop
xchg
je
jl
shrl
fwait
mov
add
daa
adc
into
stos
xlat
lods
aam
push
imul
mov
lock
mov
mov
popa
sbb
bnd
push
adc
das
xchg
xor
sbb
lret
mov
jbe
shlb
push
push
cli
addr16
iret
flds
out
aad
dec
mov
lods
mov
dec
fwait
jae
test
push
ficomps
ds
shrl
dec
lock
inc
pop
add
lret
pushf
dec
cmp
sub
push
sbb
es
cmp
adc
mov
mov
or
cli
ss
cmc
fdivp
outsl
push
or
mov
inc
idivb
dec
ret
cmpsl
xor
push
or
movsb
sub
pop
push
xchg
lcall
insb
xchg
imul
lods
out
mov
or
pop
pop
sbb
mov
add
jae
cli
aad
outsl
cmp
scas
sub
push
mov
rclb
mov
xor
pop
out
jecxz
dec
mov
out
out
pop
pushf
sar
aas
cltd
outsl
adc
inc
iret
add
mov
and
jae
jp
mov
inc
inc
jmp
push
outsb
jbe
test
stos
cmp
bound
add
adc
outsb
out
lock
lcall
mov
ljmp
pushf
scas
mov
frstor
js
out
test
xor
pop
movsl
dec
shrl
or
inc
outsb
xchg
sbb
fldl
pop
int
out
xchg
xchg
pop
mov
es
jo
into
iret
call
aam
and
or
call
int
sbb
adc
pop
pushf
push
in
cmp
inc
dec
gs
jae
sbb
scas
and
fnstsw
xor
adc
shlb
sub
cmc
add
dec
inc
stos
inc
repnz
adc
lret
cld
mov
xchg
aas
lea
std
sub
sub
nop
push
xchg
loope
xor
inc
outsb
ja
movl
mov
mov
sub
or
fwait
outsl
or
sub
nop
ja
insl
imull
pop
imul
adc
out
cli
push
dec
movhps
stc
mov
pmaxub
hlt
adcb
pop
mov
rcl
mov
jbe
shll
arpl
icebp
mov
stc
clc
mov
xor
pushf
xchg
sub
and
sub
or
add
mov
mov
mov
cmp
inc
mov
cmp
lret
outsb
fcoms
mov
mov
nop
cmp
mov
mov
in
xchg
push
add
mov
mov
push
gs
ficoms
shr
fdivl
push
inc
sub
jb
test
cs
sub
xor
jecxz
mov
lods
push
xchg
push
js
jmp
aam
pop
inc
sub
inc
ja
enter
test
add
repz
cli
mov
jne
lret
jne
gs
jl
aam
shr
jecxz
pusha
js
xchg
outsl
mov
push
mov
dec
pop
xchg
test
cli
pop
lock
loope
in
dec
pop
pushf
aaa
mov
std
jle
adc
mov
add
xor
ds
mov
ret
push
jecxz
add
adc
mov
arpl
stos
push
iret
icebp
jb
testb
stos
mov
test
mov
add
shrl
jle
fs
nop
es
sbb
xchg
fidivl
xor
pop
sbb
jge
cmp
xor
leave
js
and
adc
sbbb
mov
fsubrp
jne
jmp
or
cmpsb
ss
dec
dec
leave
inc
lret
loopne
jmp
aam
das
lahf
lock
aaa
ss
xchg
mov
das
and
mov
xchg
jnp
jge
xchg
pushf
ret
fxch
orb
xchg
in
sti
push
data16
rcrl
adc
push
nop
sbb
sub
out
scas
rcr
pushf
xor
sbb
cld
in
cmc
dec
xchg
test
lds
xor
mov
ljmp
mov
xor
addr16
or
inc
arpl
inc
push
inc
dec
lock
jl
lret
pop
lcall
clc
leave
adc
into
gs
inc
push
mov
push
pusha
std
fs
mov
jns
mov
clc
aad
pop
add
mov
js
jp
inc
cli
sbb
or
outsl
sub
mov
sub
idivl
out
int3
xchg
xchg
test
inc
pusha
cmpsl
xlat
subl
ss
xchg
fs
jne
fstps
das
loop
mov
adc
push
cmp
outsl
add
jmp
mov
lods
xor
test
cmp
xchg
lea
push
dec
sbb
popf
ret
push
jne
bound
adc
mov
jl
mov
add
pop
popf
push
sbb
es
push
dec
lea
mov
add
jns
add
pop
jbe
in
ficoml
and
push
sub
inc
jmp
and
roll
or
gs
and
lock
je
std
mov
movl
cli
mov
js
push
push
in
push
inc
ja
pop
or
cltd
xor
mov
push
dec
pop
jge
sub
jp
ret
divl
push
mov
cmp
hlt
aas
pushf
lcall
leave
loopne
cmp
ret
sti
or
xlat
test
jb
shll
mov
das
cmp
scas
out
push
pusha
cmpsl
sbb
mov
nop
std
cmp
js
int3
out
pop
push
cmp
mov
dec
insb
mov
jge
fs
xor
mov
stos
sbb
jl
pop
adc
xorb
cli
xlat
dec
es
cld
mov
shlb
mov
jp
aad
sbb
pop
mov
cltd
ficoms
dec
adc
mov
insb
or
jecxz
xor
mov
sub
cwtl
cld
shll
cmpsl
sub
dec
dec
js
mov
aas
repnz
test
push
daa
loope
push
outsl
jl
dec
iret
pop
push
std
fsubl
pop
sbbb
int
fs
inc
pop
gs
mov
lcall
pop
enter
or
jge
mov
mov
sahf
shlb
adc
in
aam
aaa
dec
jle
rcrl
cmp
fcoms
hlt
sbb
mov
loope
inc
jecxz
inc
push
inc
jmp
sbb
push
popa
mov
inc
dec
xchg
test
and
inc
xchg
outsl
inc
rorl
xchg
push
cmp
inc
mov
and
neg
mov
push
jo
ret
pushf
inc
sub
inc
inc
lock
fsubl
xchg
cmp
cmc
lods
mov
lods
lock
fstpl
pusha
mov
push
dec
cmpsl
rcll
pop
dec
insl
push
sbb
add
cmp
mov
xor
dec
cmpsl
xor
sub
out
cmp
cmp
mov
je
xchg
sbb
add
lods
sbb
sbb
in
xor
fmul
xor
mov
es
sbb
xchg
subb
in
jge
test
mov
push
insl
push
mov
sbb
fwait
test
push
mov
sub
int
dec
cmp
adc
lods
cli
mov
cltd
add
mov
or
leave
test
mov
push
xchg
inc
imull
pop
testb
filds
inc
jp
sbb
rcr
loop
out
scas
icebp
ds
mov
addl
les
and
insl
jl
inc
popf
popa
push
or
pop
mov
dec
mov
orb
test
aaa
mov
pop
lea
pop
inc
stc
sbb
or
test
or
or
lea
shrb
fisttpl
mov
pop
cmp
scas
gs
pop
lcall
insb
adc
ror
das
mov
out
and
pop
leave
adc
test
movsb
pop
leave
in
test
jmp
sub
cmp
pusha
xor
jge
jbe
in
movsl
jge
sbb
std
dec
dec
dec
jo
mov
adc
fwait
repz
pop
pop
dec
aaa
inc
mov
outsl
jge
out
mov
mov
jl
nop
insb
sub
mov
mov
jecxz
inc
mov
jb
pop
and
mov
dec
gs
add
daa
idiv
ss
or
xchg
jge
pop
lcall
ljmp
leave
jae
lock
repnz
bound
mov
pop
xchg
lods
sub
pusha
cmp
and
jmp
fimull
lret
and
aad
mov
adc
in
cmpsb
std
cmp
arpl
jl
xlat
sub
sub
sub
outsl
lret
sbb
hlt
or
ror
mov
imul
out
adc
adc
xor
scas
sub
mov
dec
ud0
clc
cmp
popl
jecxz
xchg
lret
xor
dec
dec
nop
mov
mov
insb
jb
mov
pop
or
push
xchg
push
dec
outsl
inc
or
xchg
fs
rclb
and
adc
or
rcll
or
cmpsl
add
icebp
mov
mov
mov
lds
mov
dec
push
aas
in
lock
int
ret
inc
out
ss
xor
sub
push
and
dec
sub
add
outsl
xchg
lcall
lods
or
pop
roll
sahf
incb
push
bound
mov
mov
push
dec
mov
dec
jecxz
enter
mov
or
inc
imul
testb
fcompl
xchg
es
pop
icebp
addl
nop
out
or
sub
lea
xor
cli
mov
mov
mov
in
loop
lods
test
les
and
js
leave
out
dec
push
mov
dec
jl
inc
fimull
mov
add
out
fimull
loope
sbb
loope
or
sub
dec
or
jae
out
mov
adc
rcrb
push
out
cwtl
popf
xchg
add
scas
fistps
and
loope
push
not
ret
in
and
outsl
orl
cmp
dec
cmc
sar
orb
decb
insb
scas
ds
cld
loopne
into
pop
arpl
xchg
or
and
scas
nop
cmp
cmc
js
mov
cmp
loope
inc
dec
xor
push
arpl
cltd
dec
hlt
adcb
lret
pop
jnp
dec
pop
test
or
out
in
out
mov
aas
sub
mov
cmpb
dec
inc
pop
or
test
jno
sarl
sar
cmpsl
mov
pop
mov
fmull
imul
xor
fs
sarl
rcll
add
push
add
fmull
stos
sbb
movsl
ret
insb
adc
add
push
and
sbb
inc
sbb
push
mov
fs
inc
and
divl
adc
jnp
mov
sbb
or
mov
push
shrl
addr16
jbe
repz
adc
and
pop
inc
mov
lea
rcll
sahf
pop
lret
sahf
xchg
sarl
gs
inc
push
out
jg
imul
xor
xchg
push
cmp
push
subb
sub
xchg
or
adc
cmpsl
decb
loopne
lds
xor
loope
mov
icebp
adc
pop
inc
nop
push
dec
mov
rolb
add
xor
adc
cs
jb
in
fsubs
jb
mov
jne
cld
scas
movsl
in
xchg
lods
sub
adc
sub
mov
hlt
mov
lock
in
mov
jno
les
xchg
fsubrs
shrb
leave
add
xor
popf
jmp
js
push
subb
or
sar
or
addl
inc
lods
xchg
jl
jns
in
push
jnp
and
ret
loop
add
mov
jb
shll
fcomi
into
xchg
mov
mov
lock
push
in
and
jns
mov
adc
movb
pop
xchg
xor
cmp
jae
sarl
sbb
lcall
arpl
arpl
inc
inc
mov
bound
shll
mov
loope
shrl
mov
call
jmp
mov
jp
imul
popf
shll
int
adc
into
dec
pushw
mov
fidivrs
pop
mov
mov
nop
jg
or
mov
sbb
mov
mov
pop
pushf
mov
js
adc
adc
cltd
dec
aaa
scas
xor
les
cwtl
out
into
rolb
xor
add
pop
cmpsl
jecxz
and
inc
inc
cli
push
adc
jbe
cmc
je
std
xor
or
sub
add
aam
fisttpll
xchg
sub
jmp
popf
add
adc
add
out
dec
pop
stc
sarb
mov
xchg
inc
int3
push
in
jle
pop
add
dec
mov
stos
mov
inc
xchg
ds
or
adc
gs
add
mov
jecxz
test
ret
fistl
cltd
mov
aas
out
bnd
mov
imul
xchg
stc
iret
xor
mov
rolb
rorl
jl
popf
test
enter
icebp
mov
lahf
xchg
test
xor
cmp
bswap
leave
fcoms
xor
xor
mov
data16
mov
movsb
btr
dec
cld
mov
nop
stos
fcmovnbe
insl
cmp
pop
loopne
popf
push
sbb
mov
sahf
mov
lret
hlt
xchg
or
nop
iret
test
jne
mov
xor
mov
fnstsw
lret
lods
mov
fldl
rcrl
and
mov
cwtl
mov
adc
outsl
lea
aad
sbb
imul
iret
mov
mov
xchg
call
lret
jns
pop
add
jmp
leave
add
ret
gs
cmpsl
mov
pop
outsl
pop
leave
jb
mov
push
arpl
out
sbb
lahf
xchg
loop
imul
mov
sahf
sbb
jae
jbe
fisubrl
imul
push
fistps
inc
lahf
shll
out
xchg
push
dec
xlat
imul
or
sbb
or
lcall
push
or
push
into
out
pop
jns
nop
cmp
stc
es
xchg
pop
loopne
outsb
out
stos
push
sub
jno
leave
repnz
adc
inc
ljmp
ret
jge
rorl
roll
pop
mov
mov
cmp
and
stos
mov
adc
cmp
idivb
mov
lret
shll
iret
pop
mov
cmp
xlat
lods
mov
dec
clc
jno
mov
arpl
out
pop
cltd
lret
popa
jno
int
jl
jle
test
inc
cmp
sub
push
icebp
stc
xchg
je
lods
push
sub
push
cmp
mov
xchg
shll
imul
push
rcl
push
inc
shl
pop
std
xor
mov
aas
stc
adc
jle
dec
dec
test
gs
or
clc
cmp
loopne
xchg
cmp
dec
loope
jmp
adc
popf
sti
cld
jae
jle
loop
outsb
sub
push
push
lcall
dec
xchg
dec
stos
imul
add
adc
fwait
cltd
lds
fcomip
ret
mov
mov
jnp
sahf
pusha
push
dec
call
inc
enter
xchg
cmp
lahf
imul
bound
pop
mov
dec
mov
cli
dec
les
out
pop
fbstp
sahf
fwait
mov
xlat
lcall
mov
test
insb
lret
inc
fs
movsb
and
mov
or
outsb
aas
adc
aam
dec
test
in
push
out
xchg
pop
xor
or
jp
paddw
push
enter
aaa
cwtl
adc
jmp
fs
pop
sub
std
out
xchg
adc
out
pop
insl
test
scas
xrelease
sti
mov
insl
insb
arpl
cmp
mov
orb
ljmp
scas
aas
ror
lcall
xchg
mov
mov
cmp
rcrl
iret
xor
dec
or
sub
pop
in
loopne
push
push
repnz
in
or
jbe
andb
cli
cmp
cmc
jbe
lret
insb
frstor
cmpsb
repnz
jbe
and
loop
xchg
dec
shlb
add
mov
and
mov
clc
xchg
jmp
fucom
sahf
lret
dec
popf
loopne
es
jle
icebp
xchg
js
pop
mov
icebp
insl
fiaddl
xor
push
int
or
insb
push
or
xchg
inc
es
negb
in
js
cld
cmc
fsubrs
shll
push
dec
cmp
inc
rcl
pop
cmp
mov
ss
lds
in
scas
std
call
movsb
sbbb
lods
dec
dec
test
addb
jmp
add
and
sub
adc
or
jg
xchg
cmp
lods
pushf
add
mov
jg
sub
mov
inc
in
popa
aad
fcomp
xchg
call
jnp
test
lahf
outsb
xchg
ja
fdivrs
dec
xor
hlt
mov
mov
or
sub
adc
dec
fcomip
mov
pop
jecxz
mov
pop
rcll
cltd
ss
lcall
stos
nop
pop
xor
sarb
xchg
data16
int
mov
jno
sub
cmp
add
mov
pushf
scas
mov
and
sub
sti
fmulp
ret
rorb
sub
subl
and
xor
push
sbb
xchg
cmpsl
mov
push
leave
mov
xchg
loopne
mov
cmpl
mov
sarb
gs
and
jbe
cs
mov
rcrl
insl
pop
pusha
mov
stos
fadds
and
xchg
add
mov
push
sub
sub
ja
mov
addr16
jae
push
dec
in
jl
mov
lods
aaa
int
sub
popa
push
roll
subl
or
cmpl
and
iret
or
out
movl
hlt
mov
sti
fwait
nop
jne
mov
scas
push
push
jne
scas
rcrb
and
icebp
push
iret
mov
orb
sub
dec
je
cmp
push
daa
sbb
rcl
adcb
or
cmp
ret
add
cmp
xor
push
addl
mull
test
xor
nop
pop
push
or
push
sub
not
adc
inc
sbb
xor
or
arpl
add
mov
xchg
lret
push
jp
jecxz
int
inc
loopne
jl
push
lea
pop
into
mov
inc
xchg
arpl
jb
jmp
pop
cld
mov
test
and
or
inc
adc
pop
mov
dec
mov
je
mov
mov
dec
outsb
outsl
lds
int3
mov
aaa
sahf
mov
lea
push
sub
js
bound
loopne
xor
fmulp
and
pop
pop
cs
mov
pop
or
outsb
sti
xchg
and
mov
in
insb
dec
daa
std
ja
and
xor
rolb
mov
cmp
adc
hlt
add
jb
andb
jae
enter
and
fbstp
lahf
and
xor
rorb
sub
jl
or
mov
xor
lahf
scas
jbe
adc
dec
mov
jle
enter
mov
clc
mov
sub
pop
push
push
aas
push
ss
push
in
jmp
jle
aaa
lock
out
mov
data16
mov
or
mov
loop
pop
sub
in
dec
dec
daa
filds
inc
mov
push
rol
insb
mov
mov
roll
xor
add
lock
loopne
cwtl
sahf
sbb
out
inc
je
dec
xor
inc
add
jbe
dec
sbb
xchg
mov
push
lahf
imul
or
push
push
inc
xor
lahf
lret
mov
mov
leave
mov
and
fldenv
fisttps
pop
xor
adc
loope
jo
out
xlat
repnz
test
and
clc
pop
sarl
xor
push
cld
mov
fabs
pushf
mov
xor
xchg
pushf
inc
lahf
adc
pop
mov
in
sbb
ret
ficoms
hlt
jp
pop
addb
ret
hlt
pop
jb
decb
popa
out
mov
test
pop
jns
sbb
leave
fldenv
gs
pop
pop
bswap
jno
cmpsl
jge,pt
inc
outsb
outsl
jge
and
inc
cmp
sti
ret
lcall
pop
dec
add
pusha
int
out
loopne
mov
xor
repz
je
int3
mov
xorb
movsb
xor
mov
and
outsl
mov
enter
add
pop
pushf
mov
adc
aas
push
out
or
adc
sub
les
jle
pop
stos
out
sbb
pop
jmp
xor
or
jp
pop
xchg
notl
in
mov
ljmp
xchg
cs
sub
enter
mov
les
lds
adc
cli
lret
loop
bound
mov
mov
push
sbb
xchg
push
push
mov
shll
jbe
ret
fsubs
mov
xor
jmp
jmp
cs
jns
pop
adc
mov
mov
xlat
xor
pop
in
ret
scas
or
add
and
imul
jbe
movb
lock
xor
movsb
ja
pop
jbe
scas
ret
mov
cmp
insl
shll
imul
jecxz
pop
out
xchg
inc
push
aas
jge
cmp
add
jecxz
push
xchg
jge
cwtl
adc
mov
outsl
add
movsl
dec
push
cmpsb
cmp
dec
aaa
sbb
lcall
notb
aad
pop
fstpl
ret
into
bound
xchg
aad
sbb
ftst
sub
adc
inc
hlt
mov
les
cmc
pop
mov
icebp
pop
mov
push
in
push
cmpb
enter
es
xor
test
icebp
xchg
push
sbb
fldt
xlat
imul
out
cltd
and
xchg
pop
lret
jae
fistpl
or
sahf
fsub
fidivrl
push
add
lretw
shlb
mov
xchg
mulb
test
xor
lret
jecxz
lret
test
xlat
mov
outsl
or
mov
sbbb
std
xchg
inc
negb
xchg
lret
filds
jp
popa
lock
and
cmc
mov
outsb
add
imul
mov
rol
pop
dec
sbb
jbe
mov
jno
add
sbb
add
dec
mov
jl
inc
in
or
sti
mov
xchg
lcall
and
and
sub
aam
xor
sbb
scas
xor
daa
pop
fcmove
mov
int3
mov
inc
dec
push
dec
ret
pop
cld
out
test
in
pusha
mov
or
movsb
sub
out
pop
iret
push
sbb
mov
loopne
lods
cmp
std
sarb
jb
mov
mov
lods
add
mov
jb
mov
gs
fcomp
jecxz,pn
jp
inc
xor
loope
cltd
hlt
and
cmp
push
sti
and
and
mov
cmpsl
jmp
icebp
imull
add
lret
lcall
dec
lahf
daa
imul
cld
pop
adc
and
scas
pop
push
sub
gs
and
inc
xor
jmp
sub
push
enter
cmp
test
out
movsl
rorl
and
push
sbb
rcrb
jg
mov
jg
cmpb
daa
cli
cmpsl
cmc
cmp
mov
lret
cmp
lea
ja
adc
mov
push
jo
pop
xor
jbe
gs
mov
scas
in
pushf
stos
in
sub
dec
stos
lret
cmp
push
inc
cmp
add
outsl
pop
xor
and
js
nop
pop
sahf
adc
cmp
inc
cmpps
adc
and
cld
push
mov
outsl
mov
out
aam
dec
gs
xchg
dec
mov
adc
or
jmp
mov
pushf
shrl
pop
bound
orb
loop
and
mov
xchg
adc
xchg
outsb
ss
jge
test
xchg
pop
add
adc
push
mov
cli
fs
or
je
call
iret
or
dec
add
push
call
daa
loope
test
call
movsl
push
mov
leave
int3
jbe
rol
je
xchg
add
ss
into
ficoms
or
cmp
ss
sahf
scas
fidivrl
arpl
lds
fildl
jg
xchg
dec
fadd
sbb
pusha
movsl
xor
int3
dec
adc
pop
cwtl
cmpb
mov
dec
imul
sbb
and
lea
sub
push
jne
pop
test
or
pop
jo
call
ljmp
pop
cmp
in
mov
lods
imul
mov
mov
pop
jge
imull
lds
das
movsl
push
repnz
mov
add
push
add
es
pop
mov
inc
stc
lret
scas
push
cld
aad
clc
cs
adc
testl
fwait
int
mov
scas
pop
cmp
aad
lahf
add
and
aad
push
sub
out
adc
loope
xchg
inc
bnd
sub
nop
sub
ljmp
movsl
mov
mov
cmp
push
clc
push
sub
scas
xchg
pop
push
cmpsl
fcomps
mov
push
ret
rcrl
std
inc
in
ss
in
lea
std
test
and
jmp
jns
jp
pop
jecxz
jns
enter
dec
dec
sub
jne
cs
or
nop
jge
xor
popa
add
fstl
xlat
xor
xor
xor
sub
mov
fistpll
mov
or
imul
and
pop
dec
and
or
push
jb
scas
push
nop
cmp
inc
push
xor
scas
sub
stc
jge
sahf
enter
adc
imul
shlb
sub
jmp
xchg
add
xlat
rcll
mov
popf
adc
mov
repnz
dec
dec
mov
mov
inc
add
or
pop
mov
pop
dec
addr16
loop
sub
fwait
inc
inc
mov
ss
les
in
push
call
aaa
imul
or
or
push
sub
clc
movsb
sahf
mov
push
sbb
mov
cltd
lret
insb
or
test
adc
les
adc
mov
add
repz
imul
cmp
xor
inc
xor
es
sarb
jp
rep
cmp
mov
ljmp
shlb
mov
add
xchg
and
inc
mov
or
inc
ffree
rol
cmp
adc
adc
into
mov
mov
pop
movl
mov
cmp
jecxz
add
lods
orb
mov
push
sub
loope
shrb
inc
sbb
movsb
std
ss
push
loopne
test
cmpsb
stos
cmpsb
rcll
add
arpl
push
xor
scas
adc
lods
std
sub
out
rclb
rclb
cmp
das
aaa
cmp
sarl
cltd
aas
std
cmp
dec
test
add
jbe
add
outsl
shr
and
rclb
std
and
xchg
sbbb
ret
lret
iret
push
cmp
in
sarb
rcl
jo
incl
mov
sbb
cmc
xchg
xor
cmp
dec
movsl
add
dec
outsl
insb
sbb
dec
mov
cltd
fcomps
ljmp
add
mov
xchg
sbb
ret
adc
push
hlt
pop
lock
fnstsw
mov
dec
jle
lea
imul
insb
nop
sbb
enter
fmuls
xor
lods
push
jl
stos
push
sbb
jecxz
subl
push
fdiv
mov
jno
fwait
pop
and
mov
mov
lahf
or
pop
js
push
cltd
xlat
ja
cs
cwtl
xchg
out
ss
in
popa
cmp
or
mov
imul
ret
jecxz
xchg
std
inc
cmpb
cmp
cs
and
cltd
push
sbb
jb
inc
push
aam
dec
lcall
pop
pushf
sbb
and
push
mov
or
sbb
outsl
gs
xor
cmc
scas
shl
aam
pop
push
stos
xor
test
lahf
fbstp
jno
push
sub
cmp
imul
imul
sbbb
stos
es
out
push
std
sub
iret
fidivrs
imul
ljmp
in
ds
insb
sub
xchg
xor
insb
jp
pop
pop
mov
xor
or
xor
sub
mov
imulb
pop
mov
bound
andl
xor
xor
jmp
popf
pop
icebp
or
fdivr
mov
cltd
or
divb
add
rol
inc
loop
sbb
and
cmc
dec
jecxz
jl
jno
popf
aas
addr16
movb
out
or
lcall
shll
mov
sub
out
xchg
clc
adcb
dec
das
and
leave
mov
mulb
add
imul
lock
icebp
add
in
add
pop
jmp
jnp
sub
test
mov
xor
and
sub
scas
inc
jo
or
inc
inc
mov
pop
lret
jecxz
inc
in
inc
jp
lock
mov
adc
cmp
mov
out
mov
orl
xor
jg
cmp
jae
sub
add
push
mov
sbb
stos
pop
ror
faddl
rorb
xlat
mov
std
and
dec
xor
out
es
push
push
jg
jo
pop
or
jne
test
clc
out
jbe
xor
mov
hlt
and
int3
xor
enter
jno
clc
jns
and
mov
loope
cld
sahf
mov
sub
dec
push
sbb
mov
mov
push
rcll
js
add
mov
dec
mov
sti
pop
mov
mov
movsb
push
jnp
in
inc
inc
aam
pop
pop
sub
sbb
rorb
lret
iret
xor
aaa
sub
les
rol
mov
inc
aas
xchg
daa
adc
sbb
sahf
ljmp
adcb
int3
adc
cli
adc
mov
adc
sbb
sub
xchg
leave
pop
cmp
cwtl
es
scas
xor
sub
fcoms
inc
addr16
cmp
push
jl
jle
ficomps
int3
mov
mov
jp
std
lds
mov
sbb
ja
sbb
cmp
jo
inc
int
cmpl
and
ret
mov
test
sub
sub
fucomi
xchg
mov
sar
test
add
test
scas
lea
icebp
lds
shrb
sbb
in
sub
push
sahf
adc
sub
mov
xor
hlt
pop
xchg
decl
and
mov
cmpb
roll
pop
cmp
sti
xchg
mov
mov
jg
mov
mov
pop
ret
add
popf
insl
das
dec
imul
inc
popf
pop
jge
cmp
addb
and
dec
dec
imul
mov
push
fs
add
adc
sbb
pop
mov
hlt
imul
in
inc
movsb
sbb
sbb
adcl
mov
test
ret
or
cmp
and
mov
pop
nop
jo
pop
ret
xchg
cmp
xchg
in
push
pop
push
roll
or
jnp
pop
dec
mov
and
jb
pop
cmpsl
repz
js
lods
cmp
pop
pop
jo
mov
jo
push
cmp
ret
dec
jmp
jmp
push
mov
jne
out
sbb
scas
cmp
and
aad
aad
mov
mov
jo
mov
movsl
popa
rclb
stos
pop
sbb
sub
push
jbe
sub
data16
cmpsb
dec
jle
movsb
push
mov
cmp
cmpsb
and
xchg
pop
jno
fdivl
mov
scas
imul
inc
or
nop
xchg
js
add
fbld
sbb
mov
repz
jecxz
jnp
xchg
or
sbb
or
stc
lds
mov
fiaddl
mov
js
sbb
out
test
mov
jno
adc
adc
aaa
sbb
sbb
pushf
test
addr16
jmp
fistpll
cli
ffreep
lds
movsb
mov
loope
pop
add
ja
cmpsl
out
les
dec
mov
daa
mov
mov
stos
nop
cmp
xchg
cld
dec
dec
lock
mov
mov
pop
push
mov
push
jne
and
xchg
fimull
inc
jbe
jle
and
sbb
fwait
imul
dec
aaa
push
mov
test
mov
stc
mov
and
test
xchg
mov
and
imul
imul
and
pop
jl
fmuls
scas
nop
outsl
mov
hlt
dec
scas
popf
xor
mov
shl
dec
out
sti
or
xchg
push
mov
sub
mov
sub
enter
mov
mov
xchg
cmpsb
xor
lahf
ss
popa
push
add
pop
jge
mov
sbb
adc
dec
scas
sub
and
mov
jle
pop
lds
cmp
dec
inc
or
es
ret
dec
scas
aaa
ljmp
lret
adc
pop
sub
push
loope
sahf
aad
sbb
mov
sub
and
push
iret
add
imulb
shlb
int
jae
aas
lret
pop
insb
and
bound
es
aas
ja
xchg
aaa
mov
add
jl
mov
lret
movsb
adc
lods
out
adcl
jne
lcall
xor
push
ja,pt
icebp
or
sub
fnop
sbb
pop
cmp
jne
inc
loop
inc
popl
pand
xor
popa
sbb
sbb
xchg
data16
jno
sub
fwait
add
push
jno
jl
repnz
cmp
movsl
mov
jbe
mov
dec
pop
xchg
pop
stos
hlt
in
cmp
cmp
pop
sbb
pop
inc
iret
mov
cltd
loop
push
fmull
loopne
dec
leave
dec
lret
fisubl
arpl
bound
out
inc
faddl
jne
scas
in
shl
xlat
xchg
repz
jge
or
or
sub
out
imul
xor
sbb
xchg
cli
jb
sbb
pop
stc
adcl
inc
and
add
xchg
sub
jnp
test
push
xor
leave
inc
iret
es
xchg
xchg
sub
xor
stc
cmp
xlat
or
js
mov
xor
jl
outsb
loope
push
scas
mov
sbb
scas
xor
or
and
ficomps
xor
mov
jmp
ja
mov
xor
pusha
mov
xor
mov
mov
push
add
cli
mov
je
pusha
sbb
inc
pushf
sbb
fs
aas
sti
stos
mov
or
clc
imul
pop
ja
adc
cmp
idivw
loope
iret
inc
mov
jmp
xor
out
imul
cmpsb
xchg
dec
jne
pushf
or
cs
outsl
jecxz
mov
push
es
xor
daa
outsl
jecxz
push
icebp
imul
data16
mov
mov
lret
out
hlt
cli
and
xchg
test
inc
cmp
push
add
mov
mov
je
imul
jae
inc
call
mov
pop
or
in
adc
dec
xchg
cmc
loop
daa
dec
mov
outsl
mov
dec
rcll
cs
dec
shlb
and
xor
mov
adc
cld
repz
adc
mov
xor
sbb
jne
aad
pop
jg
repz
pop
sub
lock
lret
pop
push
mov
sti
mov
shlb
and
inc
hlt
adc
adc
and
dec
mov
push
fldcw
in
aaa
cmpsl
loopne
jnp
xor
jns
in
orl
xor
in
into
cld
adc
outsl
mov
ja
test
ja
iret
aam
push
cmpsl
adc
inc
cltd
loope
ljmp
pop
pop
mov
lret
xor
fdivs
test
mov
pop
aaa
repz
or
iret
shrl
push
enter
hlt
pop
jbe
jmp
movsb
jo
xchg
push
ljmp
mov
add
push
js
outsl
jl
pusha
jo
add
jns
mov
mov
bound
popf
loope
mov
dec
pop
xor
cmp
push
test
cmpb
or
inc
cmp
xor
add
test
test
mov
in
das
mov
and
or
mov
hlt
mov
xor
rclb
inc
adc
dec
xor
adc
sahf
mov
jmp
loope
cmp
cmp
inc
inc
add
fimull
adc
jp
in
lods
push
imul
enter
and
insb
dec
mov
mov
jmp
nop
mov
cmpsl
xor
insb
repnz
dec
push
rdmsr
xchg
adc
and
fidivs
jl
push
inc
jno
fcomi
cld
out
sub
cmp
push
mov
inc
xchg
sbb
and
lods
movsl
push
imul
and
pop
ret
mov
push
addr16
sahf
aam
inc
push
inc
mov
sbb
and
je
mov
sahf
test
or
incb
mov
scas
scas
push
cmp
cmp
ds
clc
adc
sub
xchg
push
xchg
mov
push
xchg
push
jnp
cmp
mov
icebp
rcrl
sbbb
call
mov
xchg
pop
push
jne
pusha
push
filds
sub
mov
sub
pop
jl
ret
lods
xchg
cmpsb
dec
imulb
addr16
lock
jp
std
movsl
dec
mov
stos
jnp
icebp
ss
or
test
add
add
cli
mov
sub
dec
mov
hlt
jmp
adc
add
adc
fcmovne
es
pop
int3
jmp
jns
clc
shll
cltd
gs
sub
add
mov
cmc
cli
mov
stos
inc
stos
add
insb
adc
jae
or
and
sub
neg
in
into
test
nop
aaa
stos
mov
jno
aad
ljmp
cltd
shl
js
shl
int
loop
pushf
frstor
into
popf
inc
insl
scas
addr16
sub
inc
cmpsl
dec
jbe
pop
xor
dec
jl
and
mov
loope
push
popf
xchg
and
lock
inc
pop
dec
xchg
inc
insl
sbb
jl
jg
dec
jl
das
add
loope
jnp
lret
inc
mov
or
inc
imul
daa
sarb
lcall
dec
andb
dec
dec
pop
jl
repz
pop
ds
testl
and
cs
add
outsl
mov
rorb
fdivrl
iret
jl
dec
add
mov
push
sub
repz
inc
add
aam
adc
adc
mov
add
lret
sub
cld
push
push
jb
lret
lods
cmc
mov
cli
cmp
jl
xchg
push
jecxz
adc
and
popa
mov
or
test
rolb
cmp
fsubrs
repz
pop
mov
pop
or
mov
and
push
jge
ss
jl
jbe
cltd
push
lahf
mov
movsb
cmp
lcall
fwait
jmp
lret
adc
out
adc
xchg
outsl
daa
int3
xchg
sub
or
sar
imul
mov
std
xor
sub
adc
rorb
add
xor
xchg
lcall
xor
push
mov
rcrl
sbb
mov
dec
or
jno
pop
inc
andl
arpl
ret
pop
push
bnd
lcall
mov
adcb
cmpsl
hlt
sbb
fcoml
add
movsb
push
dec
dec
arpl
adc
int
imul
es
inc
movsl
in
ss
into
in
xchg
add
std
fnsave
std
push
jge
push
push
and
in
jb
test
xlat
pop
in
lds
lods
test
and
mov
cli
pusha
xchg
jnp
mov
xchg
mov
jecxz
cmp
xor
shr
inc
push
aam
xchg
jnp
ja
cmp
push
push
imul
jbe,pt
mov
mov
in
jl
push
xlat
or
arpl
out
or
push
mov
sub
es
cmp
xchg
xor
pushf
shl
jae
push
jb
das
in
pop
inc
dec
ds
mov
xchg
push
std
mov
outsb
adc
pop
fwait
in
popf
xchg
in
test
les
xchg
imul
cmc
mov
cs
imul
sub
mov
lcall
sbb
adc
ja
and
jo
rcl
sub
xchg
xchg
cs
adc
push
push
or
call
adc
dec
outsb
or
cmc
add
add
ficoml
xchg
std
sub
xchg
and
mov
sbb
test
cld
jp
sub
adc
fidivl
mov
xchg
das
lea
roll
cmp
xchg
rcll
cmpsb
ljmp
xadd
imull
sarl
aaa
push
filds
adc
adc
clc
lods
dec
add
dec
sub
pop
jns,pt
sub
xlat
mov
pop
add
aas
xor
pop
js
iret
divb
and
adc
leave
push
aam
mov
in
mov
pushf
xchg
adc
notb
popf
add
add
lock
dec
mov
push
cmp
mov
pop
mov
lret
in
popa
lcall
inc
pminsw
leave
dec
imul
mov
add
cmc
das
jl
es
enter
or
nop
push
jae
or
fildl
hlt
inc
lods
sub
mov
fcoms
popf
in
popf
push
popa
hlt
aam
sbb
pop
cmp
cmp
outsb
inc
mov
cmp
dec
inc
imul
xorb
sti
outsl
out
ret
popa
and
cs
lret
scas
popaw
clc
outsb
jbe
stos
fmuls
adc
add
sub
sbb
sbb
loopne
es
lods
mov
and
shl
sub
add
and
popf
jb
out
jl
mov
push
jecxz
mov
pop
add
subl
iret
sub
insl
dec
push
shrb
add
call
and
jae
jle
inc
shlb
jmp
ljmp
stc
js
aad
cmp
test
xchg
int
fucom
or
inc
test
stos
fldenv
data16
cmp
int3
cmp
js
stos
es
cmp
aas
xorl
or
xchg
adcb
push
mov
jnp
mov
mov
xchg
call
xchg
int
sbb
out
cmovl
sbb
jne
out
inc
or
icebp
xor
mov
cwtl
out
iret
jns
repnz
mov
push
jne
popf
js
ja
and
stos
cmpsb
cmova
pop
cmpsl
and
pop
ret
mov
push
lahf
into
cmp
xchg
xchg
je
out
dec
mov
lock
test
imul
push
insl
jl
ds
dec
inc
pushf
jno
leave
jge
xchg
mov
pop
sub
or
or
xchg
mov
mov
dec
ret
in
clc
mov
out
inc
push
fiadds
out
mov
sub
scas
arpl
fldl
lahf
arpl
mov
arpl
jl
mov
adc
test
out
lcall
fwait
sbb
scas
movsl
pop
scas
ja
or
out
ret
int
lret
cmc
jmp
ljmp
or
push
rcll
fdivrp
les
dec
add
cmp
jmp
mov
cmpsl
pop
jae
cwtl
jbe
sti
mov
mov
push
cmp
push
mov
iret
inc
push
bound
mov
inc
cltd
lcall
push
mov
jl
pop
jb
repz
mov
stos
jmp
xor
dec
loope
in
pop
xor
lcall
xchg
adc
pop
scas
scas
popa
sbb
jge
mov
and
cmpsb
mov
ds
icebp
sub
pop
std
arpl
mov
repnz
push
out
fadd
fcomip
scas
mov
in
jmp
sbb
loop
cs
int3
imul
movsl
sbb
mov
xchg
mov
pop
mov
int3
jns
add
cs
adc
mov
lods
xor
and
lahf
push
scas
cmp
imul
out
lret
jne
lcall
sbbl
and
push
pushf
mov
add
or
push
inc
sbb
popf
stos
dec
scas
imul
push
mov
jecxz
sarl
pop
shr
cmp
and
sarl
pop
push
xor
dec
jno
adc
fldl
outsb
divl
into
pop
mov
inc
jmp
daa
ficomps
in
fidivs
imul
dec
or
mov
je
lahf
pop
xor
fldenv
ds
mov
lahf
mov
xchg
sub
push
xchg
in
aas
push
mov
inc
add
loope
nop
ss
dec
xchg
jnp
aad
dec
xor
shrb
pop
cltd
idivb
movsl
mov
leave
out
repz
aam
sarb
sarl
dec
movsl
sarb
das
cmc
jo
lret
mov
es
and
push
adc
jge
adc
dec
pop
repnz
cmpsb
push
ret
mov
mov
mov
ficompl
push
pop
push
rcll
sbb
cmpsw
cld
out
mov
mov
out
push
cld
je
test
cmpb
dec
jg
movb
lea
and
std
xchg
sahf
cmp
dec
pop
outsl
idivb
sub
clc
xlat
sahf
std
sbb
cmp
stc
fisttpl
pop
push
adc
pop
in
add
dec
cmp
cli
mov
sbb
sub
push
pop
push
aaa
dec
xchg
sub
mov
les
icebp
mov
imul
pop
lcall
and
pop
mov
es
mov
or
mov
jge
inc
daa
mov
cwtl
jo
cmp
frstor
push
jne
sub
stos
jge
int
xor
mov
jmp
cld
movb
icebp
lahf
xor
sub
cmc
xor
push
loop
fdivs
or
sbb
imul
call
lcall
or
aas
inc
xor
fnsave
inc
xchg
xorl
mov
adcb
cmc
int
cmp
ror
insl
adc
movsb
lret
adc
pop
fbld
add
push
jmp
lods
cli
inc
cmp
dec
cs
add
int
outsl
jg
sti
cmpsl
mov
jp
ret
push
jl
ja
add
dec
loope
sub
cwtl
or
pop
arpl
xor
rclb
or
aad
popf
repnz
scas
nop
and
xchg
pusha
jno
lock
negb
pusha
and
xchg
mov
shlb
jge
pop
jl
out
popl
push
cmp
xor
xchg
xchg
dec
xor
dec
test
lret
and
xor
cmp
jo
adc
ds
cmp
push
ret
pop
pop
mov
imul
or
inc
sub
xchg
xor
jmp
mov
insb
sti
cld
jnp
loope
popf
pusha
mov
or
jmp
mov
or
sbb
sbb
data16
sarl
in
xchg
mov
sbb
pop
jl
push
jle
xor
xor
inc
pop
cmpsl
or
pusha
outsl
rolb
clc
outsb
out
pushf
mov
int3
or
mov
clc
in
popa
mov
jns
das
push
loopne
outsl
je
lds
pushf
push
cmp
adc
insb
inc
mov
add
push
lcall
mov
aas
sub
into
mov
aas
fldcw
movsl
xor
arpl
xor
loope
jle
data16
or
sbb
insb
jae
mov
in
pop
pop
cwtl
lret
push
inc
adc
sub
aas
add
or
jl
push
insb
sub
test
jp
push
addr16
xorb
dec
imul
shlb
int3
push
pop
nop
popf
cmpsb
hlt
and
push
std
mov
push
mov
dec
jne
lret
or
hlt
dec
sub
push
xchg
test
jge
add
cmp
mov
xchg
dec
adc
cmp
xor
movl
mov
adc
jecxz
out
adcl
push
fidivrs
add
aaa
aad
xlat
std
sti
or
jp
adc
sub
repnz
mov
hlt
shlb
dec
in
out
sbb
lds
inc
inc
mov
inc
cs
mov
data16
scas
pop
jp
lods
loope
and
fs
sti
jno
cld
dec
xchg
int3
and
std
imul
add
leave
pop
nop
sbb
dec
lods
cld
es
mov
sub
jecxz
push
push
or
in
jecxz
pop
fwait
cmp
int
icebp
sub
or
lock
inc
test
inc
test
aas
or
call
push
or
in
push
push
xchg
jne
push
xor
push
pop
scas
test
add
daa
test
jle
ss
dec
out
inc
dec
lret
mov
incb
jmp
js
ret
xchg
inc
ljmp
inc
jmp
lcall
fldl
adc
and
push
aad
mull
pop
call
mov
inc
and
mov
xchg
pushf
cmpsb
out
pop
pusha
std
icebp
sbb
and
adc
repz
or
mov
decb
mov
mov
push
adc
das
in
outsl
jne
in
sub
jbe
dec
cmp
and
mov
and
aaa
sbb
mov
cmpsb
push
loope
popa
sub
cs
imul
icebp
sbb
jne
xchg
cld
and
sti
dec
inc
inc
mov
fs
or
add
stos
and
xchg
andl
cmpl
lods
outsb
add
pop
sbb
lods
scas
pop
imul
mov
inc
cwtl
pop
in
and
into
xchg
ss
dec
shrb
inc
push
ja
mov
andl
cmp
cld
add
push
mov
mov
bound
xchg
orb
daa
sbb
ljmp
or
adc
xor
sbb
hlt
dec
xchg
sub
sarb
test
jne
add
movb
fisttpll
or
sbb
xchg
stos
fwait
sbb
xor
xchg
imulb
mov
dec
pop
sti
cmp
icebp
jg
outsb
push
in
or
lods
btr
cmp
loope
or
mov
out
movsl
xor
repz
dec
in
pop
add
pop
push
xor
lret
jnp
sub
shr
push
lcall
xlat
pop
call
subb
imul
push
mov
in
pop
dec
xchg
xchg
and
mov
xor
cmpb
and
stos
xor
xchg
fdivr
or
sub
push
ja
mov
xor
je
stc
mov
cmpsl
fs
add
iret
mov
sahf
sbb
pushw
dec
in
inc
cmp
push
rorb
das
push
shlb
add
stc
sbb
or
mov
cltd
push
adc
sub
xlat
sbb
popa
fcmovb
add
test
imul
shl
adc
repnz
inc
nop
mov
push
lock
dec
addr16
out
call
jl
mov
push
xchg
dec
shrb
es
mov
les
in
xchg
stos
pusha
cld
push
iret
dec
fisttpl
adc
mov
mov
repnz
mov
pop
bound
xor
sti
sub
scas
jnp
mov
fmuls
test
sub
ljmp
push
rcr
adc
stc
xchg
inc
adc
mov
push
lcall
call
rorb
sar
test
das
mov
js
in
arpl
addr16
jp
ljmp
cmp
inc
jnp
ret
xchg
dec
push
xchg
scas
mov
or
ret
mov
xor
int3
shll
add
fbstp
enter
mov
mov
and
ja
pusha
cltd
and
inc
icebp
pop
sbb
inc
ret
cli
es
jno
dec
mov
shl
lods
cmpsb
bound
data16
faddp
ja
or
movsb
cld
ret
and
xchg
mov
andb
lret
xchg
popf
mov
fidivs
jl
loopne
pop
in
dec
dec
in
call
mulb
adc
gs
jnp
push
xor
nop
jo
push
and
pop
push
stos
push
jle
mov
ficoml
movsb
push
lock
sub
cmp
imul
xor
push
push
xchg
mov
clc
jne
adc
sub
movsl
pop
cwtl
cmp
out
dec
xchg
jo
add
or
and
pop
out
cmp
stos
into
pop
jp
mov
std
popf
cli
pop
lock
test
iret
mov
into
xlat
sbb
lcall
jbe
outsb
dec
pop
push
jp
in
test
pop
inc
lods
pop
xor
mov
dec
fst
fdivl
cli
in
or
cmc
das
xchg
push
mov
sub
xchg
lods
andl
and
loop
ljmp
adcl
adc
in
in
fwait
loopne
push
push
movsl
rorl
dec
addb
into
andb
dec
push
nop
ret
cld
push
sub
push
fucomp
push
jmp
out
push
faddp
jmp
imul
jnp
mov
mov
out
arpl
fs
inc
xor
mov
sub
adc
in
mov
mov
dec
orb
inc
sbb
test
sti
insb
fs
imull
testb
movb
rclb
mov
push
in
and
cmp
ss
sub
fildll
ljmp
aam
aam
xchg
loopne
push
push
fcomp
mov
in
fisttpll
push
mov
imul
out
jb
jne
rclb
sub
lret
add
out
imul
mov
sbbb
into
mulb
lcall
test
cmp
cmpsb
das
cltd
mov
in
pop
pop
imul
push
stos
dec
cwtl
notl
outsl
mov
shll
jecxz
inc
lds
in
push
xchg
mov
mov
sbb
fisubrs
cmpsb
cmpsl
fdivr
adc
es
fistl
mov
shr
pusha
dec
lret
fldt
dec
fildll
ret
or
push
testl
mov
mov
shll
mov
and
adc
fwait
dec
push
mov
outsl
xchg
nop
dec
pusha
and
movsl
in
push
sahf
insl
out
insb
mov
test
out
adc
xchg
mov
mov
rol
push
mov
aad
and
lret
stc
mov
ret
test
mov
test
jns
scas
or
loop
pop
push
or
pop
clc
jle
xor
mov
fisttps
aaa
inc
popa
sti
pushf
rep
pop
adc
pop
dec
jne
repnz
stc
mov
jnp
sbb
pushf
ret
mov
sub
add
mov
pop
or
ja
jne
cmp
lret
inc
insb
push
cmp
adc
mov
ror
inc
sarl
jecxz
arpl
testb
icebp
pop
mov
cmp
test
mov
add
cmpsb
jmp
cmp
test
pop
iret
xor
add
push
dec
cmp
sbb
dec
popf
push
jge
inc
in
xchg
fstpt
sbb
add
clc
cmp
jno
aad
into
mov
js
popf
test
add
cmp
aaa
dec
imul
pop
mov
popf
fldenv
cltd
icebp
push
pusha
sub
mov
insb
mov
pop
xchg
mov
dec
repnz
xchg
adc
pop
push
aas
and
ljmp
cs
xor
xchg
add
sbb
sti
xchg
cld
adc
lods
mov
cmp
jae
fnstcw
push
adc
out
pop
sub
lds
fidivrl
in
aas
xchg
mov
fistpll
enter
push
test
push
jp
mov
push
scas
or
insl
sti
rcrl
hlt
mov
jecxz
test
sbbb
mov
cltd
and
sub
mov
mov
arpl
arpl
lods
jno
out
cmp
test
pop
sahf
jns
arpl
or
jb
adc
leave
popf
in
xor
jne
jle
inc
out
mov
daa
dec
cmp
aaa
push
xchg
inc
test
jecxz
xsha256
cmpsb
xchg
jp
outsl
add
fnstcw
icebp
fistl
sbb
cmpb
push
lods
push
repz
or
lcall
jge
fxch
sbb
into
cmp
popa
xchg
int3
xor
mov
xchg
fildll
int
pop
add
movl
fsubl
mov
mov
inc
adcb
cld
in
mov
sbb
xor
mov
inc
cmp
push
push
ficompl
jmp
dec
fcomi
pop
dec
mov
xor
in
lock
les
in
in
xchg
add
jne
xor
imul
mov
mov
inc
jbe
lret
ljmp
jle
push
out
or
es
sbb
cmpsl
push
pop
leave
lock
cmp
and
dec
enter
xor
lods
leave
pop
cli
imulb
inc
call
ljmp
aaa
int3
jns
sbb
xor
mov
jmp
inc
xlat
push
ljmp
fwait
pop
movsl
pop
mov
sbb
ljmp
sbb
cli
mov
stos
mov
sub
mov
fcompl
push
xchg
jecxz
jp
adc
imul
loop
jle
les
cltd
cmpsb
dec
xlat
pop
adc
mov
push
push
test
ja
mov
sub
mov
xchg
push
data16
jg
dec
push
mov
push
pushl
add
mov
ss
je
nop
sub
xor
sub
pop
push
pop
sbb
int3
ss
in
pop
andl
push
push
push
in
scas
mov
mov
out
xchg
or
cmc
and
inc
ja
adcl
mov
in
cmpsb
or
or
mov
mov
cltd
loop
xchg
mov
sub
mov
and
sbb
pop
mov
adcl
cs
dec
cmpsb
ret
xchg
add
out
mov
pop
push
push
xchg
sub
cmp
mov
aas
aas
clc
mov
imul
inc
aas
inc
imul
xor
scas
movsl
fdivl
mov
jne
mov
fiaddl
dec
xchg
mov
ss
test
push
jbe
cld
loopne
and
sub
push
jmp
cmp
cs
mov
inc
xchg
insb
xchg
call
xchg
mov
sbb
out
mov
std
test
std
inc
jmp
lret
dec
sub
add
xchg
adc
popa
sbb
rorb
mov
jno
inc
loop
lcall
jp
inc
faddl
iret
fdivrl
iret
xor
gs
pop
lret
daa
pop
sub
jmp
popf
dec
clc
aaa
jno
inc
les
sti
hlt
sub
dec
jmp
subl
sub
cmpsb
fwait
add
mov
sti
dec
imul
pop
jle
clc
jmp
movaps
cli
call
dec
push
xor
aad
inc
mov
dec
jmp
adc
pop
mov
adc
ljmp
jl
sbbb
xor
xchg
js
mov
push
ss
xchg
in
mov
pop
packuswb
lods
adc
hlt
lods
ljmp
mov
fcmovu
repnz
adc
clc
sbb
cmp
insl
orb
arpl
test
mov
push
lahf
xor
push
test
cli
je
dec
jp
fisttpl
ret
jnp
or
inc
add
nop
jne
test
cltd
loopne
insb
imul
mov
dec
not
push
iret
jmp
mov
lock
mov
push
dec
pop
je
lcall
cs
ret
fs
in
sub
mov
inc
fdivr
mov
push
pop
test
or
and
int3
mov
inc
sarb
js
pushl
sub
xchg
imul
stc
in
sbb
sahf
lea
lock
fwait
ja
dec
dec
xchg
je
sbb
scas
jo
sbb
pop
xlat
fdivrs
fists
or
in
pushf
subl
dec
fisubs
ret
cmp
mov
jl
movsl
xchg
daa
jg
into
cmc
and
arpl
mov
repz
xchg
sub
pusha
mov
mov
inc
sub
fsts
sub
add
dec
pop
cli
push
add
jno
outsl
loopne
repz
jmp
fld
mov
xor
shll
adc
and
sbb
mov
popf
xor
jb
cmc
nop
xor
cmp
fs
cltd
mov
pop
jecxz
imul
sbb
and
in
add
xor
xchg
jge
arpl
sbb
add
lods
xor
mov
dec
mov
pop
insb
adc
adc
push
decb
push
cmp
jge
in
insb
xchg
scas
stc
mov
and
lret
pushf
adc
rcrb
sbb
sti
daa
and
or
cwtd
arpl
xchg
inc
adc
jno
cmpsb
pop
or
lds
adcb
pop
test
test
enter
push
loope
adc
int
xor
push
outsb
mulb
push
adc
xor
inc
pop
sahf
jb
repz
lcall
mov
js
mov
ds
je,pn
pusha
loop
sub
cltd
xchg
insb
scas
in
ret
lret
and
out
and
and
int
mov
push
pop
fnstsw
ds
enter
ret
cmp
out
xor
xor
dec
sbb
mov
sarb
dec
in
and
lods
gs
xchg
aaa
lds
shlb
movsl
and
rclb
push
dec
pop
adc
jae
sbb
dec
cmpsl
lock
fwait
mov
xchg
out
xor
in
pop
pop
in
jns
push
pop
fwait
test
xor
sti
sub
std
dec
jge
pop
repz
push
sbb
in
mov
clc
sub
stos
std
enter
cmpsl
cld
dec
ret
mov
xchg
inc
sbb
adc
xchg
mov
adc
mov
or
cmpsb
arpl
jl
xorb
and
incl
mov
in
xor
push
nop
clc
cmp
push
lret
sbb
repnz
mov
imul
lods
add
pop
mov
xchg
push
bound
test
fidivs
icebp
out
sahf
fsub
test
xor
adc
add
sbb
daa
jge
dec
pop
movsl
xchg
adc
fwait
push
fisubrs
rcrb
in
mov
arpl
ss
cmp
out
mov
cmp
arpl
and
les
push
scas
loopne
fiadds
icebp
inc
inc
aas
int
test
das
xlat
xor
mov
loopne
data16
jmp
rolb
mov
fiadds
repz
mov
sti
jns
fsubrs
rcrb
xchg
and
cli
ss
add
mov
xor
jbe
sarl
jmp
loopne
stos
sti
sub
dec
repz
mov
popa
pop
shl
pop
lea
nop
sbb
inc
mov
imul
lahf
jg
fwait
imul
push
int
enter
jno
jno
fistl
add
insl
test
in
jnp
cmp
and
sub
test
jle
xor
popf
sbb
add
mov
call
xlat
xor
fiaddl
cli
repz
inc
mov
mov
mulb
data16
push
xchg
xchg
push
mov
cmp
jo
ljmp
test
xorb
pop
jle
loope
cld
adc
mov
cli
test
and
les
inc
dec
jae
call
cmpsl
ds
loopne
iret
sub
pushf
or
xchg
and
mov
and
shrb
push
pop
adc
aas
dec
rcrb
fdivs
dec
mov
cwtl
xchg
test
imul
mov
xlat
pop
out
std
mov
dec
mov
cmp
std
and
and
int
bswap
mov
rclb
jle
sbb
xor
sub
pop
adc
shrl
shrl
mov
cmp
call
add
xchg
mov
fidivrs
jnp
inc
ret
movsl
out
lods
push
popf
aam
adcb
icebp
and
jo
sbb
mov
jnp
inc
sub
mov
pop
xor
pinsrw
shll
hlt
mov
xchg
outsl
outsb
or
mov
clc
aam
or
mov
in
lahf
daa
cwtl
bound
xor
pop
xchg
leave
pop
mov
clc
mov
addl
subb
jo
pop
inc
loop
fmuls
sarb
cmp
insb
jecxz
pop
xchg
jnp
xchg
pop
dec
rclb
dec
mov
inc
sub
out
xor
pop
jns
pop
pop
scas
test
addr16
sbbl
js
repnz
outsl
jmp
lock
jns
pop
or
mov
jno
jae
and
mov
fistpl
add
add
rcrl
fiaddl
mov
push
sti
inc
add
sub
push
pop
je
in
das
push
and
lret
push
cmp
jp
inc
jns
outsl
lock
pop
pop
and
hlt
cmpsb
dec
mov
mulb
push
pop
add
bound
xchg
mov
sbb
stos
mov
inc
or
mov
cmp
mov
fidivl
inc
or
pop
jge
or
in
mov
pop
pusha
or
push
add
lahf
jecxz
push
dec
adc
fwait
outsb
mov
mov
sub
cs
ljmp
js
in
pop
cmp
shl
fldenv
sbb
push
cld
loopne
nop
xor
mov
pop
push
je
pop
jmp
sub
add
pop
add
sbb
sbb
jge
or
enter
out
xlat
push
lret
add
cmc
not
sub
mov
xor
sbb
call
mov
jnp
jae
sbb
rol
pop
add
adc
fidivl
loope
aaa
sarb
mov
call
iret
std
cmp
pop
into
jecxz
fucomi
rclb
dec
andl
jb
scas
pop
sbb
out
inc
insl
xchg
push
mov
mov
loope
fwait
inc
xchg
cmpsl
lret
gs
lretw
stos
sub
mov
es
notl
add
ds
test
lods
ret
push
into
daa
inc
xchg
shlb
cmp
sbbl
lods
pop
call
xor
pop
add
loopne
pusha
cmp
mov
scas
adc
pop
sbb
fwait
aaa
fmul
int
fistl
lea
inc
test
mov
add
es
mov
fmul
test
insb
arpl
push
sbb
push
and
add
arpl
xorl
dec
dec
scas
cmpsb
lods
in
push
stos
insb
lret
out
xchg
imul
mov
inc
mull
inc
inc
in
loopne
lahf
mov
in
jl
and
mov
adc
and
fidivl
mov
jnp
inc
push
and
xchg
adc
dec
xor
xor
pop
mov
sbb
data16
dec
mov
or
xchg
call
daa
inc
pop
jns
push
xlat
test
xchg
pushf
fimuls
cmp
repnz
xorl
mov
das
sub
dec
aad
stc
dec
mov
sub
push
mov
or
mov
dec
outsb
imul
cs
jno
cmpsl
ret
push
push
out
ljmp
sti
ror
mov
popf
pop
ds
mov
jbe
sbb
add
add
repnz
popf
and
adc
mov
sbb
sbb
sub
test
cwtl
mov
dec
dec
nop
or
jb
inc
dec
scas
in
xor
mov
in
jno
adc
lret
addr16
fistps
loope
fcompl
andb
fidivrl
int
xchg
imull
jecxz
mov
adc
lock
les
inc
repnz
outsb
mov
or
movsl
ret
cli
add
cmp
dec
imul
xchg
cmp
sub
into
ss
jge
neg
cmpsb
out
lret
pop
shrb
fldl
jmp
xchg
popa
daa
int
in
fcoms
psubw
jmp
das
mov
in
rcrl
dec
add
and
xchg
mov
mov
inc
je
inc
or
ja
adc
dec
push
sarl
shll
mov
jno
sbb
pop
dec
cli
dec
jns,pt
xchg
dec
outsb
push
mov
mov
mov
dec
cwtl
scas
cwtl
mov
add
popa
cmp
and
push
lds
dec
imul
andb
push
les
clc
arpl
push
xchg
sbb
jecxz
test
shl
int3
jp
xchg
mov
sbb
xlat
jb
out
or
fisubrl
mov
roll
mov
das
jge
jns
into
mov
inc
lods
cmpsl
bound
ss
jbe
jno
outsl
jo
pop
sbb
shlb
cld
jne
insb
inc
repnz
sbb
stos
xchg
test
mov
adc
cs
pop
mov
mov
les
subb
addr16
xor
and
andl
shll
mov
int
aas
lahf
jne
pop
and
movsl
into
add
jmp
std
aas
pop
sbb
xchg
adc
xchg
jmp
imulb
pusha
scas
pop
jge
faddl
mov
mov
in
nop
scas
sub
or
mov
xchg
lock
sbb
jmp
pop
sub
fistps
xchg
push
mov
push
cmpsb
xchg
jno
xlat
rorl
cmp
jmp
xor
dec
mov
lds
imul
mov
js
xchg
jo
mov
notl
mov
xchg
mov
fsubl
dec
call
cwtl
jmp
ja
in
cmp
arpl
loopne
sbb
adc
inc
add
xor
bound
scas
ret
jmp
mov
rcl
pop
dec
fisttps
mov
add
jbe
sbb
subb
dec
xchg
cmp
jno
setl
push
jle
mov
lahf
mov
fstpl
icebp
in
orb
dec
sbb
fs
and
insl
test
into
testb
add
add
mov
xchg
sub
popf
int
shll
sbbb
xor
mov
dec
push
addr16
mov
hlt
and
repnz
int
sub
jp
mov
sub
or
int3
or
inc
out
ljmp
xor
xchg
mov
daa
sbb
sbb
pop
maxps
xlat
repnz
dec
pop
sub
xor
and
hlt
data16
sbb
loope
int3
jae
xchg
xchg
jo
fisubs
cmc
add
in
test
rcr
cwtl
add
mov
movsb
out
add
push
add
outsl
ret
pop
xchg
xchg
sarl
vmread
push
xchg
dec
stos
mov
test
inc
jp
adc
outsb
ss
cmpsb
add
cmp
repz
cmpb
loope
jmp
mov
pusha
xchg
jae
jmp
scas
and
insb
scas
mov
jno
add
jae
push
insl
inc
sbbb
lds
mov
push
adc
mov
xchg
push
fmull
fs
xlat
push
clc
mov
ret
movsl
insb
lret
or
pop
pop
add
repnz
test
jnp
jmp
ss
or
test
jb
push
mov
lret
jns
lock
ds
lcall
inc
and
push
xor
dec
cmp
jecxz
xchg
jns
lret
push
insb
adc
out
mov
jmp
out
inc
in
pop
scas
pop
test
es
ja
or
dec
dec
test
loopne
pop
mov
sbb
scas
movsl
sbb
mov
mov
jno
lahf
int3
sub
inc
inc
lds
fisubs
adc
loop
in
mull
in
stc
push
push
xor
xchg
cwtl
sbb
lea
push
pop
bound
loopne
sub
cs
fists
decb
pop
xor
or
adc
js
mov
fstps
or
inc
add
jle
jae
jb
ljmp
inc
jl
push
jb
popa
cli
neg
pop
fs
jle
pop
fadds
jge
loop
mov
sbb
ret
mov
cmp
or
in
pop
das
arpl
dec
das
nop
lret
shll
add
cwtl
add
mov
mov
jae
jno
faddl
fisubs
clc
cmpb
pop
cmp
mov
xadd
push
jo
dec
insb
je
xor
or
mov
int
dec
iret
into
xor
sbb
mov
jge
aad
loopne
js
sub
jmp
call
in
cmp
addl
cmp
xchg
or
outsb
dec
iret
lds
ret
inc
dec
xchg
fimull
out
ja
or
lods
std
sub
sbb
adc
mov
sbb
push
xchg
loop
push
sub
jmp
leave
push
imul
dec
insl
mov
test
cld
lods
hlt
fldt
loope
aaa
scas
pop
jns
stos
inc
out
mov
adc
out
mov
daa
ret
ja
jle
inc
out
movsb
push
adc
mov
into
push
xchg
insl
mov
xor
dec
jg
mov
int
cmp
lea
jmp
mov
push
out
cmp
je
sub
dec
test
jo
mov
xor
rcr
mov
inc
push
push
sbb
test
pop
loopne
adc
ss
in
fdivrl
jns
scas
ja
xchg
outsl
test
jge
pextrw
sbb
rolb
adc
addr16
ret
loopne
or
rolb
adc
movb
gs
adc
lods
aas
subl
test
js
lds
cmpl
sub
je
into
rcll
pop
push
push
sbb
inc
add
jb
jp
inc
mov
scas
rcrl
movsb
stos
push
pop
shll
mov
sti
fisubs
dec
xchg
or
mov
movsl
aas
inc
mov
xlat
into
insb
add
mov
push
mov
cmc
pop
push
mov
jp
xor
jb
push
sub
sbb
std
lret
movsl
mov
imulb
lahf
xor
jbe
mov
roll
or
pop
xorl
daa
push
mov
test
insb
jbe
loope
mov
jno
sub
cmp
addl
std
in
roll
dec
sbb
fwait
xor
jno
cld
jmp
push
adc
xchg
xchg
cld
add
pop
pop
jbe
cltd
and
cmp
rorl
lret
sarl
push
xlat
es
push
and
repnz
cmp
repz
jg
inc
cwtl
lcall
loop
adc
cmpsb
add
fisubs
aad
jp
clc
push
aad
lods
loop
pop
or
pop
sub
inc
jno
mov
shrl
or
popa
push
jnp
mov
aas
js
cmp
rcl
inc
dec
dec
outsl
stc
fs
daa
mov
lods
sbb
xchg
mov
rcr
adc
dec
pop
jae
lods
mov
scas
jae
xchg
in
mov
xchg
pop
add
in
xor
xchg
adc
sbb
pop
add
sub
pop
mov
aas
sbb
and
sub
call
inc
pushf
push
cld
addb
adc
aas
push
mov
mov
xor
xor
xchg
mov
loop
shll
arpl
mov
inc
in
rcrl
jmp
jae
or
adc
push
js
in
fsubrs
inc
inc
and
pop
ja
fldcw
decl
out
imul
xchg
cmp
idivl
lods
push
add
mov
xor
iret
scas
cmc
ss
mov
push
mov
cld
jg
sbb
and
aam
popf
push
xor
orb
mov
adc
repz
adc
cmp
mov
adc
mov
sub
outsl
xchg
aaa
mov
jae
pop
popf
popa
push
pop
insb
push
adcb
mov
fwait
inc
test
sahf
inc
sbb
pop
jle
cmpsb
pop
adc
or
stos
sbb
xor
pusha
and
pop
mov
cmc
lret
mov
ss
mov
fbld
mov
test
out
in
sbb
popa
cmpsb
rcll
sarl
sub
stos
mov
push
jmp
mov
or
fstpt
dec
push
cltd
inc
xor
xor
aaa
jno
cwtl
mov
enter
nop
sarl
pop
pusha
leave
jle
and
fwait
outsb
xchg
lods
adc
mov
push
arpl
push
inc
push
pusha
sub
xor
adc
xor
xor
xchg
mov
pop
push
mov
add
jmp
fwait
jno
cmp
out
mov
jecxz
pop
mov
pop
mov
push
aas
ret
dec
int3
push
sahf
loop
test
cs
flds
mov
and
popf
pushf
rcr
mov
or
sub
nop
jae
dec
mov
movsb
fwait
jo
mov
jl
pop
cmpsl
shlb
jno
sbb
push
mov
add
dec
mov
push
sub
int
sarb
pop
test
pop
mov
ss
jmp
cmpsl
out
jae
mulps
lcall
lret
pop
es
pop
paddusb
es
jns
sub
cmpsl
cmpsl
jns
mov
data16
mov
xchg
lahf
daa
jmp
fimuls
lea
loop
xchg
test
adc
mov
dec
mov
jo
add
gs
loopne
out
ljmp
pop
in
negl
cmc
mov
xchg
movsb
aas
push
lods
hlt
add
inc
mov
into
jae
cmp
js
data16
in
mov
and
cmc
imulb
jo
mov
cmpsl
lock
xchg
movl
loop
mov
scas
movsl
push
push
jnp
jo
adc
popf
and
cmp
cmc
test
xor
popf
pushf
add
fimull
sbb
jbe
pop
mov
and
push
dec
mov
stc
shr
dec
pop
sbb
push
repnz
adc
lea
mov
inc
in
add
sub
pop
out
stos
dec
popf
jl
neg
je
mov
fwait
or
sti
outsb
mov
pop
imull
mov
popf
movzbl
xor
loope
stos
rcrb
in
loopne
ja
mov
lcall
adc
outsl
faddp
sahf
xor
leave
mov
xchg
loopne
push
enter
aam
ja
jmp
lret
shlb
faddl
cwtl
pop
gs
out
lret
dec
fs
push
pop
xchg
ljmp
fwait
out
sub
movsl
out
push
lds
push
pop
bound
add
or
cmpsl
rcll
sbbl
sbb
in
mov
in
push
ret
lahf
add
xchg
pop
addb
stos
pop
in
and
loopne
cld
mov
jle
mov
mov
fadds
pop
dec
jle
push
daa
outsb
adc
scas
jb
je
rclb
shlb
cmp
inc
pop
push
sub
pop
inc
mov
xor
leave
push
mov
adc
sub
xchg
pop
xchg
cmp
test
dec
adc
mov
sbb
xchg
inc
mov
add
int3
hlt
data16
pop
lds
cmp
xchg
enter
pushf
xor
xor
fstpt
pop
out
or
dec
inc
xor
insb
mov
jecxz
daa
dec
jge
andl
cmp
adc
jg
dec
cmc
popf
and
mov
insb
mov
mov
push
mov
scas
stos
stos
or
add
cli
cmpsl
insl
gs
jl
xchg
xchg
mov
mov
bound
out
dec
jbe
xchg
arpl
mov
mov
or
push
shll
or
pop
pop
cld
bound
repnz
ret
cmp
arpl
add
xor
xor
fs
cmp
test
dec
add
dec
mov
sbb
or
aad
sub
xor
dec
jae
push
lock
push
imul
lahf
jns
push
jp
movsb
xchg
inc
outsl
sti
jno
outsl
cmp
inc
jnp
lea
jecxz
add
cmp
test
or
and
pop
mov
ds
sbb
sbb
imul
xchg
cmc
mov
out
cmpl
jg
inc
popa
sub
mov
adcl
pushf
pop
sbb
xchg
cmp
xchg
lret
xor
xchg
mov
jg
inc
mov
mov
xor
out
in
lcall
sbb
xor
stos
adc
ss
ss
fidivrl
sub
in
lea
out
andb
pop
mov
nop
ret
xor
shrl
das
jnp
imul
pop
addb
sbb
sbb
dec
dec
cmovp
and
xchg
sub
pop
ss
cwtl
repnz
fidivrl
pop
sbb
decl
loope
push
push
cmp
sub
jmp
insl
dec
mov
das
inc
pop
andb
pop
xchg
mov
mov
xchg
jbe
fmuls
mov
jno
jge
fidivrs
inc
adc
adc
xor
bswap
inc
das
ss
push
xor
fistps
ja
add
dec
dec
push
push
lcall
xchg
ficompl
insl
mov
sbb
cmp
int3
repnz
xor
jae
mov
or
cmp
dec
ja
rclb
adc
xor
out
or
cwtl
fists
xchg
sbb
pop
jb
test
adc
push
std
dec
pop
stc
mov
fs
sub
adc
out
or
and
jns
jb
xchg
addb
inc
mov
mov
pop
push
mov
outsb
cmpsb
sti
jge
in
mov
aam
mov
jbe
mov
dec
or
in
jno
loop
gs
int3
mov
jne
cmp
inc
mov
xchg
insb
aad
xor
sbb
mov
xor
andb
mov
fsubrl
mov
arpl
inc
mov
push
ljmp
bound
sbb
dec
adc
das
pop
lods
sbb
mov
xchg
mov
push
lea
pop
ret
mov
adc
dec
movsb
lock
cmp
inc
and
push
pop
movsl
adc
pusha
jb
push
insl
aad
loope
pusha
ret
loop
bound
mov
cmpsb
stc
stc
aad
cmp
jge
movsb
sub
or
xchg
das
fs
and
push
mov
aam
xor
cli
aam
jp
xchg
mov
cmp
pop
cmpsl
pop
and
dec
sub
dec
arpl
pop
loopne
test
pop
aad
shll
lret
xchg
push
js
lods
lock
insb
mov
mov
push
add
sti
lret
push
mov
aad
xor
cmpsb
sub
loope
push
lock
into
sbb
jbe
mov
jno
push
sbb
icebp
push
inc
outsl
dec
test
sub
std
mov
repz
ja
nop
add
lods
inc
into
fistps
movsb
adc
nop
cld
pop
fwait
shrl
and
shll
cltd
or
xchg
add
pop
xor
addr16
test
insl
in
ds
mov
and
or
and
aad
jo
into
inc
pop
jp
xor
sub
or
jne
int
daa
pop
fisubs
test
push
jo
out
jo
or
mov
stos
iret
jne
inc
sbb
sub
or
push
push
pop
mov
mov
adc
dec
adc
jl
xor
and
xor
pop
adc
arpl
mov
dec
add
popa
mov
mov
xchg
dec
push
jg
lea
jp
cmc
test
mov
cmp
xorl
cmpsl
cmc
xchg
jae
push
ss
mov
mov
mov
fldt
pop
or
clc
lds
jg
stos
xchg
cmpsl
inc
push
gs
add
jae
scas
icebp
add
push
push
fdiv
mov
dec
cmpsl
dec
dec
cs
fs
mov
fwait
xchg
and
adc
add
inc
int3
cmp
xchg
out
mov
fistpl
call
mov
nop
xchg
dec
aaa
inc
fnstsw
scas
xchg
outsb
add
push
movsb
out
sbb
incb
loopne
pop
xchg
cld
pushf
or
push
jno
dec
xor
xchg
mov
divb
xor
stos
insb
and
or
jg
pop
and
adc
mov
xchg
mov
add
push
lret
cmc
xor
add
push
mov
loopne
xchg
and
or
mov
mov
mov
cs
std
inc
loopne
movsl
adc
in
pushf
in
mov
sub
subl
outsb
je
or
gs
test
mov
xchg
sub
sub
leave
test
ss
fs
inc
pop
out
ljmp
sbb
lea
add
jb
add
jg
int3
mov
and
cmpsl
lret
push
popf
xor
in
lahf
pusha
dec
sbb
push
enter
pushf
xor
loop
mov
pop
in
mov
shlb
and
cmp
ret
jne
int3
pop
dec
and
repnz
orl
sbb
mov
lahf
pusha
pop
sub
fs
imul
rclb
xchg
lahf
adc
je
sbb
cmp
mov
jecxz
cmc
insb
dec
aam
lock
in
cmp
sub
xor
fidivrl
js
or
in
inc
lret
adc
pop
outsl
aaa
fs
mov
icebp
and
mov
and
add
rolb
mov
add
mov
cli
and
mov
shll
pop
add
lods
adc
lahf
or
sahf
mov
mov
les
nop
mov
ret
into
jb
add
mov
aam
loopne
add
xor
sbb
cltd
or
fiadds
rcrb
call
dec
mov
ret
sbb
shlb
cs
loopne
sti
dec
scas
sbb
pop
mov
scas
cld
cmp
testl
fcompl
js
repnz
xor
sti
movsb
push
pop
cli
cmp
mov
mov
push
inc
xchg
push
adc
push
pop
xchg
sar
cltd
incl
out
adc
mov
dec
les
xor
inc
lds
push
and
xor
daa
xchg
push
mov
and
jecxz
lds
rol
vphsubbw
inc
sub
inc
lods
or
sbb
ss
and
sbb
repnz
cmc
xor
sti
xchg
mov
pop
xorb
mov
mov
xchg
cmpsb
outsb
and
mov
mov
scas
aaa
jo
push
adc
mov
ds
lret
add
loopne
nop
test
add
push
aas
pop
ljmp
sbb
dec
mov
lods
push
imul
jecxz
repnz
adc
in
nop
out
add
or
mov
sbbl
sub
push
mov
jns
je
shll
dec
mov
sbb
mov
mov
jg
subl
xlat
cltd
das
pop
jne
in
sahf
mov
xchg
mov
add
mov
adc
and
das
jle
inc
aad
sub
je
dec
xchg
xchg
aam
cmp
shrb
xchg
ss
mov
add
cli
sub
fnsave
sbb
js
push
add
mov
dec
dec
mov
sub
jl
bound
xor
mov
mov
add
sbb
push
insb
inc
sahf
in
pop
mov
imul
dec
mov
pop
pop
sahf
cmpsb
push
pop
jne
pop
push
lds
lahf
mov
mov
mov
xchg
xchg
lea
int
iret
and
xchg
pushf
cmp
lods
insb
fisttps
rcrl
in
popf
mov
sbb
das
and
enter
shrb
test
jle
dec
and
sub
push
jle
xchg
insb
shrl
push
aad
mov
shll
int3
ja
push
ss
inc
mov
push
dec
mov
call
std
data16
lret
jg
jl
pop
lock
adcl
loop
int
aam
fsts
test
mov
std
dec
jb
mov
rorb
out
das
inc
movsl
mov
repz
dec
xor
pop
into
shll
mov
dec
mov
fnstcw
leave
mov
aam
imul
int
adc
ret
popf
outsl
aas
cmp
fildl
aaa
push
movsb
mov
jle
mov
add
test
inc
subl
mov
mov
xchg
hlt
mov
das
mov
xor
in
test
inc
sbb
repz
daa
and
xor
lock
xlat
movsl
in
and
sub
or
jns
insb
je
adc
aad
jbe
stos
sub
xchg
fdivrl
sbb
jb
or
adc
pop
dec
xor
enter
jecxz
mov
cld
int
lods
inc
dec
popf
repz
popl
cmp
jle
pop
or
in
push
lods
sti
or
mov
dec
mov
inc
push
xor
pop
add
fistpll
add
xlat
icebp
or
jno
pop
adc
sbb
popa
testl
mov
lret
stos
dec
jg
mov
enter
daa
js
mov
inc
movsl
imul
adc
lcall
out
fisttps
jne
pushf
adc
idivl
je
test
ljmp
push
call
adcl
sbb
mov
out
adc
sbb
mov
push
sbb
stos
in
hlt
sbb
movsl
inc
inc
shrb
lds
cmp
fisubrs
xchg
mov
popa
in
cltd
push
xchg
jl
pop
mov
rol
cmpsl
mov
mov
sbb
fsubrs
mov
rclb
pop
mov
les
dec
arpl
jo
jecxz
fimuls
pop
fdivs
xor
sub
sbb
mov
mov
sub
adc
dec
stos
xchg
adc
popf
out
xchg
jae
ret
loopne
and
dec
lcall
push
inc
inc
xchg
jl
nop
stos
mov
inc
push
pushf
inc
or
xchg
sbb
jge
and
sbb
ja
fbstp
mov
std
xchg
outsl
ja
adc
jae
cmc
pop
push
fnstsw
test
scas
mov
mov
int
pop
inc
lock
ss
cs
add
pop
sbb
add
mov
push
lahf
sbb
adc
dec
adc
sbb
mov
cmp
add
dec
lods
cmp
ret
pop
xchg
mov
lea
loopne
cmc
mov
push
js
mov
cmp
dec
jns
outsb
and
add
les
push
rorb
test
pop
and
ret
push
pop
outsb
stos
leave
pop
push
xor
xchg
mov
ja
adc
dec
pop
xchg
enter
mov
aas
iret
fwait
int
js
aas
push
ret
xchg
pop
pop
lahf
repnz
or
jecxz
and
mov
cmp
daa
xchg
push
rorb
inc
icebp
int3
in
scas
cmc
and
fisttps
rep
sub
sbb
faddp
sbb
and
push
cmp
mov
rol
sbb
xchg
jmp
in
lahf
cld
in
cmp
push
jp
dec
and
into
mov
rcr
mov
call
stos
repnz
cmp
ja
ljmp
sub
shlb
cltd
std
lcall
xchg
and
adc
dec
fistps
adc
cs
jecxz
movsb
inc
adc
lret
mov
dec
cmp
ret
mov
sub
and
xchg
cmp
xor
mov
shrb
int3
pop
test
cld
out
pushf
push
cmpsl
data16
aas
and
arpl
pop
ret
mov
int3
ss
sahf
xchg
xchg
lahf
mov
stc
push
scas
inc
pop
lcall
mov
lret
mov
into
in
mov
xchg
xor
lret
cltd
and
adc
nop
push
xchg
iret
dec
stos
xchg
xchg
addr16
sti
into
mov
xchg
lods
loope
push
mov
jae
shlb
loop
shl
or
inc
nopl
ret
shl
mov
adc
xchg
ljmp
gs
scas
jle
xchg
add
and
mov
lret
mov
idivl
push
jne
lods
jecxz
push
jle
xchg
out
pop
jmp
pop
push
adc
pop
cmp
test
aas
ljmp
cmp
dec
push
dec
int
mov
cmp
push
mov
ret
pop
jae
push
xorl
sbb
sbb
inc
sbb
sahf
inc
scas
inc
xchg
ds
mov
jne
and
decl
xchg
mov
int3
fildl
arpl
dec
inc
popa
push
mov
cmp
inc
lods
pop
ror
sahf
mov
daa
out
test
adc
call
cmp
sub
popa
xor
and
jp
lods
shl
inc
sbb
insl
add
cmp
sbb
pop
add
mov
and
addb
or
sub
mov
mov
inc
dec
cmp
scas
mov
mov
dec
iret
xor
mov
cld
pop
loop
or
in
sub
fs
mov
in
scas
into
insb
mov
insb
les
movsl
pop
cwtl
dec
loopne
adc
and
roll
and
in
push
in
out
out
and
add
cmp
clc
in
dec
int
push
or
rcrb
insl
or
cmpw
mov
in
jns
cmp
scas
ret
jb
pop
push
cwtl
xlat
mov
push
push
inc
dec
mov
icebp
iret
xchg
outsb
xchg
adc
outsl
fisubrl
mov
xor
iret
es
sub
push
loop
popa
sti
push
imul
mov
xlat
dec
stc
pop
jle
mov
xlat
out
jno
mov
stos
data16
iret
call
ret
test
lahf
ljmp
dec
push
mov
int
mov
into
mov
movsl
adc
sub
loope
jbe
or
inc
jb
sbb
xchg
sti
in
fwait
stos
ss
sbb
sbb
pop
test
out
fwait
push
jbe
add
push
test
cmp
out
sahf
sar
xor
js
adc
mov
mov
shll
mov
fimuls
mov
dec
xchg
outsb
aam
push
jb
cmp
cmc
pop
imul
jo
jo
stos
pop
mov
xchg
sub
pop
push
xchg
fldt
into
cmp
cltd
pop
insb
stc
mov
loopne
out
or
mov
outsb
mov
and
enter
shlb
mov
or
add
fisubs
mov
or
std
fcmovnb
aaa
push
xchg
cmc
addl
repz
aaa
insl
cld
cmp
mov
icebp
pop
jne
push
mov
test
ret
lods
sbb
mov
jmp
cmp
enter
in
ficomps
mov
dec
insl
jge
pop
sti
mov
cltd
push
adc
inc
movsb
negb
fcompl
stc
mov
notb
js
loope
lret
push
and
or
lret
sbb
mov
cwtl
movsl
dec
rclw
out
mov
mov
xchg
lods
jecxz
push
les
mov
sub
or
mov
mov
xor
roll
popf
sbb
dec
je
lock
fdivrs
hlt
aaa
push
jne
rorl
jle
jne
fsubl
cmp
inc
sub
push
mov
shll
jne
add
cs
cld
jo
and
jnp
push
int3
inc
and
jno
jecxz
imul
and
scas
xchg
es
arpl
aaa
mov
mov
lret
insb
xlat
dec
shl
rcll
stc
mov
push
daa
add
cmp
lret
cmpsl
sbb
cmc
gs
enter
jg
inc
in
js
add
cli
iret
aad
inc
sub
jno
jns
push
fadds
ret
les
imul
pop
pop
jl
sbb
cs
and
jl
cmc
insl
xchg
dec
mov
push
mov
iret
jle
mov
idiv
jmp
lcall
jnp
push
stos
aaa
andb
int3
test
cmpsb
rcll
jno
movsb
fstpt
hlt
je
xor
out
cmp
insb
xor
lea
into
mov
out
pop
or
imul
iret
add
divb
das
les
adc
sub
push
pop
fwait
aas
test
cmp
insb
pusha
mov
inc
jl
pop
ficoml
xchg
cs
das
je
shll
jecxz
lret
push
scas
mov
sub
pushl
push
gs
mov
mov
loop
pushf
jmp
iret
stos
cmpsl
mov
mov
jbe
test
mov
cmpsl
mov
mov
shll
dec
sbb
out
dec
pop
pushf
aaa
pop
cmpsb
mov
push
or
mov
inc
sbb
and
xor
setnp
and
in
shlb
cs
adc
std
in
dec
sbb
mov
lods
push
in
in
in
ja
outsb
orl
cmp
fs
pop
js
inc
xchg
inc
jbe
inc
inc
push
sub
movsb
stc
call
insl
mov
mov
add
lods
int
adcl
mov
or
push
imul
outsl
sbb
divb
dec
inc
inc
dec
push
fdivrp
or
xchg
xor
ficomps
jno
push
add
movb
clc
inc
sbb
inc
dec
mov
sub
loop
pop
call
sub
sbb
jl
cmpsl
cmp
or
xlat
mov
or
push
jecxz
pop
pushf
jl
cmp
lods
lods
pushf
adc
jge
pop
outsl
adc
pop
into
sub
popa
inc
push
push
inc
pop
clc
stos
call
sub
or
adc
in
test
xchg
dec
xor
add
inc
cmp
out
mov
fstpt
sub
lret
adc
dec
sub
std
pop
pushf
lret
mov
sub
fistl
loop
sbb
xor
ds
cmp
pop
test
mov
stos
cmp
lret
into
inc
fistps
repz
and
ss
sbb
loop
inc
cs
cli
jp
enter
pop
cmp
pushf
inc
gs
test
mov
scas
cmp
lods
rclb
ror
cmpsl
cs
add
les
bound
call
cltd
adc
cmp
push
fcoml
test
cwtl
and
incb
negb
stos
idivl
push
push
nop
add
insb
ficoml
pop
add
out
sar
test
xlat
sbb
insl
xor
iret
ds
mov
xchg
out
adc
pop
out
mov
sub
adc
movsb
sbb
pop
xor
pop
scas
imul
mov
fmuls
ss
pop
adc
dec
jp
mov
cmp
inc
je
js
or
cs
sbb
push
fistl
orb
jnp
sbb
ret
mov
loope
test
sbb
push
fidivrl
xor
sbb
add
jp
std
xor
add
int
mov
in
push
adcb
add
inc
jmp
pop
imul
xor
cmp
push
cld
xchg
sahf
mov
cwtl
cmp
mov
jbe
dec
sub
cmp
jmp
hlt
or
sar
jo
mov
xor
adc
neg
js
cmpl
out
fwait
inc
sbb
cmp
cmp
in
dec
movsl
imul
push
or
mov
lcall
movsb
jmp
mov
outsb
mov
mov
addr16
xor
push
jl
into
add
jecxz
sti
insb
inc
xchg
adc
out
mov
je
les
mov
and
cmovnp
adc
jmp
or
xor
rclb
into
lods
pop
pop
xchg
lahf
loope
test
add
pop
fwait
lret
in
fs
aad
xlat
push
mov
in
lods
pushf
xchg
jmp
and
lods
mov
push
sbb
flds
out
iret
cmc
arpl
push
mov
mov
xor
inc
ror
pop
sbb
jecxz
call
ficomps
add
xchg
push
jb
jl
rolb
adcl
jl
jns
mov
inc
jns
push
pop
or
loop
sarb
testl
cmp
inc
sub
adc
adc
or
push
xchg
test
jo
ret
add
enter
shll
jecxz
stos
es
and
dec
sbb
sbb
call
lret
pop
fs
stos
sub
daa
push
fimuls
aaa
imulb
cld
sbb
jg
sbb
adc
mov
lea
popf
in
lcall
aaa
sub
cli
dec
jg
scas
aam
or
add
pop
fld
jno
lods
push
inc
adc
mov
push
aas
mov
push
jbe
sbb
fsts
pop
cli
pop
int3
adcb
adc
mov
dec
sbb
scas
pop
mov
enter
sahf
inc
mov
or
jmp
bound
aaa
pop
repnz
mov
sbb
bound
inc
std
sti
sub
test
imulb
loopne
mov
testl
insb
js
mov
shl
adc
dec
mov
pop
jge
jne
push
sar
and
cmc
add
or
outsl
adc
jl
aad
in
andl
pop
ss
mov
or
ja
lods
dec
jns
outsl
push
and
cmc
dec
int3
movsl
pop
lahf
out
jbe
insb
cwtl
mov
dec
push
shrb
mov
iret
push
addr16
aam
psrad
imul
mov
pop
adc
popa
push
cli
sbb
cmp
mov
jns
sub
test
ret
std
test
add
mov
mov
dec
popf
xor
gs
mov
repz
cwtl
fadds
sti
movsl
adc
js
jg
jo
dec
fldcw
fistl
adc
xor
add
mov
xchg
sbb
addr16
inc
xchg
xor
mov
shl
add
inc
iret
ds
mov
adc
iret
xchg
push
jno
cmp
lahf
mov
aaa
pop
jle
pop
sub
xor
pop
sub
and
push
and
addr16
fdivrs
in
or
mov
inc
xchg
rsqrtps
push
stos
pop
pop
pop
cwtl
std
xchg
into
lds
cmpsb
or
push
inc
xor
xor
nop
addr16
cmpsl
rclb
test
insb
test
push
mov
js
add
inc
lock
mov
push
fsts
enter
ja
mov
xchg
or
loop
mov
push
lods
pop
mov
mov
in
inc
rcrl
adc
addr16
inc
pop
addl
push
jae
or
nop
cwtl
cmp
popw
enter
xor
and
fisttpll
push
push
andl
stos
enter
cld
sti
jl
mov
inc
lds
push
mov
push
inc
push
xchg
test
cmp
sti
stc
cltd
in
pop
inc
testb
dec
aas
lds
bound
movsb
out
cmp
adc
mov
and
les
push
mov
mov
mov
clc
fiadds
les
cld
xor
testl
dec
inc
push
cmp
es
stc
push
jp
imull
sbb
cld
and
enter
adc
cld
sbb
sub
sarb
mov
xchg
repnz
ret
aas
loopne
sub
lods
mov
adc
dec
icebp
das
xchg
sbb
hlt
rcll
sbb
cmp
movsl
fstl
adc
out
lahf
jns
js,pt
into
xchg
sbb
inc
jg
sbb
dec
xor
or
sbb
insl
dec
add
push
ja
jmp
pop
jle
stos
in
out
inc
inc
cmp
cmp
xchg
outsb
jbe
mov
sbb
lods
ljmp
dec
sbb
jp
xchg
mov
ljmp
out
cli
push
in
inc
in
pop
gs
mov
xor
repnz
hlt
xchg
lahf
icebp
test
mov
mov
mov
mov
fwait
pop
pop
in
or
divl
mov
std
data16
aaa
loope
fnstsw
ja
push
shll
aad
cmp
fstps
pop
pop
push
hlt
faddl
push
sub
pushl
dec
loop
loope
cmp
ret
dec
call
rclb
inc
and
mov
mov
repz
hlt
pop
xlat
pmullw
xor
inc
or
stos
inc
fldl
xor
cltd
mov
and
inc
test
cmpsb
dec
push
sbb
mov
sbb
jg
fistpl
sub
bound
mov
xchg
push
fmul
iret
test
rcl
nop
mov
es
in
or
pop
inc
aaa
push
ja
jae
mov
inc
mov
add
movsl
inc
rcll
inc
lret
cmp
in
mov
into
lea
insl
andb
aam
insb
and
shlb
dec
mov
je
xchg
push
mov
leave
jle
xchg
or
cmp
stc
xchg
fstpt
call
mov
orl
sub
push
test
or
and
cld
outsb
call
jp
pop
mov
or
lds
sbb
mov
cwtl
inc
lds
sub
scas
sbb
int
push
jns
setno
inc
and
or
adc
mov
lods
push
push
ljmp
sbb
push
shll
sub
imul
sbb
and
mov
loope
and
les
mov
push
fdivrs
push
mov
scas
call
cmp
in
in
adc
fisttpll
movsb
mov
xor
mov
pop
das
sbb
push
or
leave
mov
jg
sahf
out
repz
mov
aad
lds
popf
dec
fwait
or
gs
rclb
scas
in
fmuls
aad
pop
adc
add
clc
cmovnp
adc
fwait
push
fs
cltd
call
sarl
stos
push
out
popf
pop
pop
enter
mov
mov
jne
add
mov
cld
dec
cmpsb
stos
lcall
aam
stc
cmpsb
mov
cmpsb
jp
sbb
push
fildl
xchg
aas
adc
jp
push
mov
jle
pop
push
mov
xlat
scas
jae
mov
fcmovnbe
insb
pusha
and
mov
mov
ret
fs
cmp
push
addr16
stos
in
pop
rclb
outsl
jo
sbb
sahf
inc
and
dec
fistpl
mov
jecxz
adc
pop
mov
xchg
outsb
mov
cmp
jl
push
mov
mov
out
jle
ds
mov
mov
sub
enter
and
add
das
int
lds
pop
xor
xchg
cld
jo
jg
cmp
pop
mov
cmp
cmp
out
xchg
pop
daa
push
mov
fcmovu
pop
mov
jo
cmp
repz
sbb
shll
xor
mov
mov
leave
outsb
lret
inc
mov
mov
mov
add
imul
jecxz
xlat
or
test
inc
jp
ds
je
sub
mov
loop
cld
xchg
adc
fdivl
aad
and
test
pop
repnz
mov
jmp
insb
and
xor
jg
xchg
adc
inc
or
sub
test
test
mov
push
insb
mov
mov
sti
or
inc
xchg
jg
add
push
dec
dec
push
aam
push
testl
dec
dec
dec
scas
int
adc
mov
imulb
xchg
jnp
loopne
bound
push
pop
cmpsl
ljmp
xchg
roll
ja
jge
jb
xor
xchg
pop
jbe
dec
sbb
test
sub
in
xor
into
jae
insl
mov
in
inc
in
pusha
push
mov
xchg
pop
xor
bound
outsl
ficomps
fldcw
xchg
aas
aam
cmp
mov
push
lods
dec
enter
std
out
in
std
pop
cltd
inc
movsb
jge
jge
inc
jmp
aam
je
cmp
subl
push
dec
outsb
outsl
and
jmp
fnstcw
push
sub
repnz
ja
lahf
mov
outsl
popf
sti
mov
and
add
add
jmp
or
pop
mov
add
jle
shlb
in
dec
rolb
cmp
mov
inc
mov
and
pop
mov
mov
test
xchg
shrb
mov
jns
add
ror
cmpsl
mov
mov
jne
xchg
and
or
sahf
pop
cltd
in
imul
xchg
out
lock
imul
cmpsb
cmp
scas
and
inc
dec
push
test
lcall
push
mov
mov
push
pop
inc
fwait
cmp
pop
jne
mov
sub
cld
aam
lahf
ja
cwtl
xchg
or
lret
jo
jge
fs
adc
sbb
mov
scas
sbb
push
xchg
xor
xor
sub
mov
adc
lea
add
rorl
jae
mov
shr
mov
call
cmp
pop
idivl
adc
xchg
add
jmp
fsubrp
sub
push
add
mov
jb
data16
pop
in
enter
sbb
sbb
sbb
sub
sbb
je
dec
sbb
rorl
pop
cmp
sti
loopne
dec
std
ret
xor
push
stos
stos
push
xchg
out
pop
jb
jle
or
ljmp
and
cmc
adcb
orb
dec
js
in
out
sub
lret
or
das
pop
or
lret
stos
xlat
lock
hlt
inc
push
or
pop
stos
cmp
popa
add
push
pop
pop
and
leave
xor
outsl
adc
dec
in
and
jns
jl
jge
bound
push
push
ds
adc
adc
xchg
xchg
mov
adc
out
cltd
sbb
pop
rorb
cmp
mov
imul
subl
leave
mov
or
loope
aaa
hlt
mov
sub
cmc
pop
ror
clc
or
or
les
push
arpl
pop
out
mov
or
adcb
and
hlt
shlb
roll
outsb
shl
int3
mov
incl
loopne
leave
out
xchg
bnd
pop
mov
pop
inc
adc
add
dec
ret
in
cwtl
cs
jb
leave
lahf
mov
push
mov
imul
gs
mov
popf
push
sti
and
in
mov
mov
jno
mov
shl
mov
mov
cmp
arpl
rcrb
addr16
je
add
jp
cmp
sbb
imul
call
rclb
cli
pop
in
cwtl
stos
stc
cmp
cmp
fs
sub
lds
push
xchg
repnz
or
popa
shlb
dec
mov
add
dec
jb
outsl
jp
rol
and
insb
fs
mov
xchg
adc
imul
mov
scas
enter
push
arpl
mov
ss
xchg
jae
cli
stc
mov
loope
test
imul
sub
xchg
inc
lea
dec
ljmp
icebp
fdivrs
jae
add
ret
xor
cmp
push
pop
jnp
pop
rcpps
mov
daa
arpl
dec
xchg
jl
ds
pop
or
jle
pop
mov
repz
test
sti
sbb
rcrb
xchg
adc
repz
fs
jb
sti
pop
sub
mov
imul
ljmp
sbb
sbb
mov
dec
xor
call
mov
scas
pop
sbb
jecxz
scas
pushf
cmp
int3
aad
in
cmp
cmc
or
xor
adc
sti
mov
sarb
jmp
mov
jns
push
cmp
mov
jle
stos
hlt
mov
cmc
cli
pop
cmp
xorb
jle
icebp
sub
add
cltd
repz
mov
inc
mov
pop
adc
cmpsl
fcmovnu
sbb
pusha
mov
add
add
push
jb
es
fnstenv
test
dec
push
cmp
sbb
jg
cmp
outsb
lds
cld
add
lcall
dec
and
data16
add
ret
mov
notl
out
stos
push
dec
sbb
xchg
addr16
movsl
add
mov
mov
test
clc
arpl
negl
mov
jnp
mov
jnp
popa
sub
push
push
or
mov
xor
inc
cmp
mov
mov
lcall
iret
dec
sbb
notl
push
xchg
mov
enter
icebp
inc
call
jae
pop
mov
sbb
leave
xor
adc
aas
jb
hlt
jmp
sbb
faddl
test
push
inc
mov
push
add
dec
fcompl
int
xchg
sarb
sbb
sub
outsl
je
loope
or
xchg
ret
inc
movsl
mov
or
push
push
xchg
shrb
stc
sbb
in
jecxz
mov
stos
dec
inc
inc
int
lcall
dec
hlt
jecxz
sbb
ds
rcl
adc
pop
hlt
shr
xor
and
pop
add
add
cmp
sub
jnp
adc
ret
xchg
sbb
xchg
add
popa
fwait
adc
lods
cmp
mov
in
jmp
div
jo
mov
sahf
sbb
xchg
loopne
lods
imulb
lcall
stos
xor
mov
adc
add
pop
sahf
lods
push
push
jge
orl
mov
inc
adc
inc
cmovle
dec
cmp
jnp
aaa
fprem
cld
dec
in
inc
dec
sti
repz
jmp
mov
cmp
dec
xchg
jno
and
iret
pusha
jmp
popf
mov
xlat
mov
mov
sbb
mov
fistpll
movsb
sbb
addr16
dec
sarb
and
cli
pop
cmpsb
jnp
hlt
lods
xor
loopne
sbb
add
gs
cmp
mov
pop
fsts
and
fisubs
ljmp
or
cs
jge
mov
dec
popf
fistps
dec
inc
popf
and
xchg
insb
in
sub
xor
nop
fsubrl
or
ljmp
inc
incl
dec
imul
adc
out
push
movsl
xchg
stos
sbb
or
iret
cld
pop
sub
and
in
mov
inc
jle
int
sbb
xor
fdivrs
sub
enter
lahf
or
orb
sub
pop
decl
shll
cli
or
sbb
daa
jo
dec
aaa
sbb
jl
pop
daa
xchg
push
cld
mov
hlt
fcompl
pop
rclb
mov
inc
push
ds
pop
out
test
repnz
sub
stc
cmpsb
mov
das
pop
out
and
imul
mov
fs
shrb
out
dec
jle
mov
adcl
sbb
xor
inc
cmpsb
arpl
xlat
fdivs
stos
add
bound
pop
ret
mov
ljmp
mov
shlb
scas
in
repz
daa
ljmp
mov
dec
xor
dec
dec
mov
mov
daa
subb
insl
bound
cmp
jg
pop
fs
inc
stc
stc
cmpsb
xchg
jg
jbe
fstps
rorl
pop
and
stos
insl
inc
inc
jbe
mov
popf
out
imul
stos
gs
bound
insb
mov
xchg
das
loopne
pop
add
sub
pop
xlat
arpl
dec
push
addr16
jecxz
adc
scas
push
popa
cmp
fwait
push
push
pushf
xor
sti
xor
repnz
jb
js
sbb
or
jge
cmove
testb
sarb
cmp
inc
sub
jne
and
stc
cmc
jmp
or
lahf
in
repz
add
cmp
add
dec
nop
stc
clc
loope
fnstcw
lahf
sbb
cld
pop
mov
js
jne
scas
add
ficoml
jno
mov
sbbb
push
mov
hlt
mov
mov
xor
mov
pusha
push
dec
clc
loope
mov
mov
xor
out
xor
xchg
cmc
adc
fbld
sub
xchg
stos
mov
orl
and
ss
adc
mov
dec
cmp
jno
jge
or
and
jns
mov
icebp
or
out
je
sub
cld
mov
mov
mov
mov
lret
xor
pop
inc
inc
and
sbb
xchg
pop
xchg
push
jp
pop
fimull
mov
cld
addb
aas
arpl
fs
es
ret
xor
insl
adc
call
jecxz
sub
ja
push
sub
inc
mov
fwait
pop
loopne
lods
jg
adc
lock
addl
mov
pusha
pop
jnp
sub
xor
popa
data16
mov
mov
out
add
mov
or
mov
jmp
js
inc
mov
das
iret
mov
and
in
dec
ljmp
sub
mov
dec
push
imul
adc
ja
sub
sarb
std
sub
or
push
sar
inc
add
pusha
sbb
ds
adc
sbb
mov
dec
xchg
sarl
push
mov
dec
and
add
or
mov
cmp
addr16
or
pop
shr
and
mov
fimuls
push
jl
sub
aad
push
sub
cmc
std
sbb
jmp
sahf
mov
adc
xchg
std
dec
mov
icebp
fs
movsl
xchg
and
out
movsb
shrl
lret
or
mov
and
clc
cld
ficoms
jecxz
andb
sar
cmp
mov
fisubs
jle
lods
popf
adc
ss
je
xorb
sub
sahf
or
or
lcall
pop
cmpsl
js
add
leave
mov
pop
int
xor
cmp
adc
sub
imul
mov
adc
cmp
fbstp
mov
sbbl
xchg
dec
sub
xchg
imul
sahf
sbb
fisubrs
or
cs
out
xchg
bound
cwtl
ret
sub
push
fwait
mov
xor
cmp
loop
sti
push
mov
mov
dec
mull
lock
lea
add
in
inc
mov
push
fists
sub
dec
cmpb
data16
fdivrl
cmp
add
nop
sbb
call
enter
shrl
rorl
into
aam
fcompp
lret
out
add
ret
push
outsl
aas
aam
jno
add
data16
dec
push
pop
fdivp
or
inc
aaa
imul
fidivrs
dec
rcll
push
sub
xchg
dec
icebp
roll
or
adc
pop
add
or
in
data16
or
fsubrl
pop
clc
das
mov
mov
rorl
int
in
push
and
hlt
mov
mov
cmp
mov
imul
mov
adc
or
xor
pop
jecxz
cmpsb
cmp
lret
lods
or
pop
cmp
push
hlt
push
inc
aas
imulb
in
fwait
push
mov
add
push
ja
test
inc
ffree
fldl
push
push
dec
and
push
and
jp
bound
imul
push
addr16
data16
xchg
jle
stos
ficoms
pop
add
fdivl
je
sub
xor
sub
out
mov
leave
es
outsb
stc
cmp
std
or
cmpsb
fcom
les
aad
test
mov
repz
in
mov
out
in
mov
fnstsw
gs
in
jge
add
push
xchg
pop
aad
fisubrs
mov
mov
int
and
jnp
xor
mov
aaa
shl
or
ljmp
sbb
or
jmp
data16
xchg
mov
xchg
test
fimuls
push
and
sti
hlt
call
push
mov
pop
xor
rorl
popa
js
mov
aam
dec
jne
rcll
stos
cmp
ret
push
or
pop
jge
xchg
or
mov
lods
xor
pushf
cmpsl
push
xor
shlb
xor
push
mov
aad
jo
cmpsl
test
and
mov
jbe
fldcw
inc
xchg
fldcw
lret
push
push
lret
cld
call
outsb
add
addr16
jb
jbe
xlat
cmp
inc
push
out
jno
ljmpw
add
sub
mov
inc
lret
rolb
cmp
mov
imul
mov
push
int
imul
insb
hlt
test
cmp
jmp
adc
jg
repnz
pop
cltd
lahf
subb
enter
mov
cmp
mov
std
aad
testb
mul
loopne
and
xor
dec
add
xchg
mov
pop
push
mov
jmp
je
test
add
lahf
cmp
mov
lret
or
fdiv
xchg
inc
decl
add
stc
add
shr
daa
mov
testl
aas
pop
sahf
jns
outsb
pop
inc
push
lret
in
and
inc
ret
xor
cmp
fldt
out
inc
into
jmp
pop
test
mov
sbb
mov
mov
repz
jge
pop
fsub
test
add
adc
fcoml
sbb
loopne
ja
aas
xor
push
jno
mov
xor
std
xchg
fadds
test
ds
outsb
jno,pn
jno
mov
pop
or
andb
mull
mov
jecxz
xchg
pop
sub
ss
lahf
imul
mov
ret
sbb
mov
sbb
xor
xchg
push
jge
cmp
jmp
insb
dec
jle
mov
ret
ror
out
scas
in
mov
out
cmpsl
das
push
fsub
xlat
xchg
push
fwait
push
insb
mov
inc
pop
inc
jge
std
idivl
in
pop
fcoms
popa
jns
mov
or
leave
bound
movsb
or
andl
rcrl
mov
push
shll
sbb
inc
jns
mov
enter
sbb
or
and
cmp
enter
and
jl
inc
inc
pushf
adc
sysenter
add
push
inc
add
into
mov
adc
cmp
incb
out
pop
rolb
push
pop
xchg
pushf
dec
imul
push
push
stc
rolb
subb
cwtl
lret
mov
popf
mov
cmp
sub
gs
add
les
popaw
in
mov
negb
push
icebp
fs
mov
fs
rcrl
jno
pop
xorb
push
sbb
fsubs
out
cmp
or
xchg
cmp
mov
inc
lods
dec
jg
add
rcpps
dec
push
adc
or
enter
lret
push
mov
fs
pusha
fldl
push
les
pop
jnp
adc
inc
sbb
repnz
dec
xchg
call
mov
in
add
pop
cli
fidivl
ret
mov
and
add
shlb
clc
fidivrs
lock
movsl
push
dec
xor
push
sub
push
jl
jne
mov
xor
sbbb
es
adc
rcrb
leave
and
mov
xor
lea
es
mov
inc
popf
leave
clc
pop
lahf
sbb
pusha
mov
jmp
fidivrl
enter
test
outsb
jl
mull
cltd
nop
test
jmp
mov
inc
shlb
sbb
paddb
mov
cwtl
je
jp
dec
or
dec
jns
pop
and
adc
fists
pop
mov
testb
push
in
pop
cld
xor
sbb
sbb
lea
lods
inc
pop
call
push
aas
and
hlt
test
in
fldcw
popf
sub
push
push
inc
pop
out
outsb
in
gs
daa
into
push
mov
test
mov
stc
and
pop
pop
mov
cli
shll
xor
insl
sbb
cmpsb
lock
sti
lea
outsb
xchg
adc
jno
imull
rcrb
pusha
mov
sbb
ret
xchg
call
insl
xchg
mov
adc
andb
dec
sub
cltd
push
std
adc
xchg
sti
in
mov
jns
lret
mov
or
adcb
lret
es
cmp
lahf
add
jns
and
mov
xor
cmp
cmpsl
sti
pop
mov
mov
xchg
dec
out
shll
mov
stos
mov
test
and
pop
fcmovbe
sub
pop
sbb
ljmp
inc
pop
adc
pop
mov
mov
dec
loop
sti
test
fcomi
inc
push
clc
mov
sbb
aaa
loopne
cmpsl
mov
xchg
mov
xor
fsubrs
pop
pusha
movsl
sbb
push
pop
stos
and
or
sbb
inc
pop
icebp
push
mov
push
testl
push
push
loop
aad
loop
or
cs
sub
fs
xchg
test
out
push
cli
xor
fxch
loope
rol
nop
inc
dec
add
dec
ret
aaa
mov
jmp
mov
stos
mov
js
mov
inc
cmp
stos
xor
test
jl
mov
das
clc
mov
inc
cmp
dec
xorl
inc
das
cwtl
jnp
sbb
add
cld
test
mov
stos
mov
pop
sub
jae
sbb
clc
ljmp
repz
xor
and
mov
imul
xchg
outsl
add
dec
in
in
fisttpl
jmp
jecxz
jg
dec
push
insl
mov
fidivrs
mov
arpl
dec
ret
lock
pop
aam
mov
xor
inc
out
cli
pop
data16
fwait
aaa
xor
mov
scas
shll
lds
rcl
adc
aad
xchg
mov
loopne
inc
or
out
ds
mov
xor
sysret
or
fnstsw
in
hlt
pop
js
jecxz
fucomi
and
insl
lds
lds
dec
mov
jl
flds
outsl
iret
xor
lds
mov
lcall
sahf
mov
mov
jns
sahf
cmp
push
mov
lods
cli
scas
mov
sbb
cmp
lea
shll
and
or
sahf
mov
lock
mov
inc
xchg
mov
aas
int
int
sub
stos
cmp
fcmovu
sbb
in
cmp
sti
mov
sbb
shl
or
pop
js
nop
mov
ja
and
xchg
into
jns
push
imul
sbb
xchg
inc
add
push
test
sub
jns
aad
mov
adc
or
jle
push
adc
aam
add
pop
xor
ss
arpl
or
sbb
sub
fisubrl
cmp
mov
and
neg
daa
shll
xlat
cwtl
lea
jae
lods
bound
mov
inc
and
sbb
cmp
gs
pusha
movsb
mov
loope
push
or
bound
dec
das
push
ljmp
jmp
inc
mov
and
call
push
andl
lahf
data16
mov
jae
lret
mov
push
xor
cmp
adc
rcll
lods
rolb
shrb
mov
aas
or
dec
add
lahf
or
xor
rolb
xor
push
stos
imul
je
aaa
aam
je
ja
je
push
mov
cwtl
push
cltd
jae
xor
xor
pushf
inc
mov
jp
nop
mov
daa
xchg
dec
rcll
jnp
mov
and
sub
sbb
sbb
jmp
repz
jae
shrb
mov
mov
loope
mov
dec
call
pop
lock
repnz
call
sub
push
enter
lea
js
inc
sbb
aam
pop
mov
fsubs
insl
mov
ja
and
add
cld
ds
or
arpl
mov
inc
and
xorl
ret
pusha
inc
insl
pushf
das
pop
push
add
adc
jb
mov
inc
rorl
insb
pop
aas
jbe
test
loopne
aam
shrb
fmull
jmp
add
push
pop
push
xor
xchg
cmp
inc
popf
hlt
dec
mov
call
rcl
rcrb
jb
pop
and
outsb
sub
fs
mov
pushf
adc
out
subb
mov
mov
ret
lock
daa
stos
inc
pop
cld
xchg
inc
lahf
int3
pop
mov
daa
lret
je
stos
stos
mov
sahf
insb
ds
lea
cmc
movb
sbb
xor
xchg
andl
jae
jae
cli
or
loope
mov
xor
pop
jle
ja
inc
push
mov
push
xchg
push
dec
out
je
xor
jae
push
push
jmp
sbb
sbb
aad
ja
in
cmp
jecxz
sub
sub
add
ret
rcll
lret
test
and
or
movsb
in
lods
dec
adc
pop
int
lretw
pusha
pop
jg
sub
lock
outsb
xor
ds
cmc
out
adc
dec
fucomi
push
sbb
pop
fcmove
js
notl
negb
sbb
sub
test
scas
fmuls
out
lods
fsubrs
js
fldt
mov
rcll
push
rorb
movsb
jb
sub
mov
cwtl
mov
loope
and
xlat
imul
popa
cmpsl
arpl
sub
xorb
andl
lods
inc
popf
rcrb
repz
xchg
ss
or
inc
and
lret
jg
push
mov
bound
loop
mov
and
xchg
sbbl
push
fsubl
add
inc
xchg
movsl
xchg
mov
push
ljmp
inc
out
das
dec
xchg
push
pop
sub
sub
cmp
add
xor
arpl
daa
fmulp
ror
scas
nop
les
jmp
jns
push
lret
xchg
jl
es
sbb
xor
and
sti
push
movsl
popl
out
inc
rclb
popa
sbb
outsl
xor
dec
add
nop
push
lods
sets
lret
or
mov
jecxz
jmp
in
inc
mov
je
lods
decl
std
adc
jne
lcall
push
adc
decb
aaa
outsb
cwtl
insl
cmp
pop
arpl
aad
pop
push
stos
sub
xchg
je
push
div
popa
mov
cmpsb
out
fwait
lea
adc
xor
jae
in
js
xchg
repz
shlb
sub
xlat
mov
fucom
pop
cltd
inc
sbb
cmp
mov
imul
add
jle
popf
cmpsl
dec
lock
addb
aam
and
inc
arpl
stos
mov
cmpsb
and
inc
into
jmp
cmp
pop
pop
rcrl
sbbl
sbb
in
fs
fdivl
test
in
mov
sbbl
mov
sbb
les
mov
loopne
inc
sti
enter
mov
mov
inc
js
add
xor
loopne
xchg
rcl
mov
mov
nop
std
test
pop
mov
insl
fisttps
push
test
inc
sarb
movsl
rcl
mov
into
mov
push
lods
sub
mov
xor
enter
add
js
xchg
arpl
mov
mov
gs
jmp
popl
sub
and
or
sub
sarb
jle
sbb
inc
xor
leave
xchg
xor
pushf
push
call
stc
loopne
sub
movsb
sbb
dec
in
push
mov
mov
iret
inc
mov
dec
test
in
or
sahf
insl
cltd
xchg
iret
push
movsl
and
adc
cltd
out
pop
insb
lock
xchg
dec
jge
inc
or
adc
test
or
fdivrl
push
pop
and
xor
scas
daa
out
mov
jns
cmp
out
adc
mov
aam
push
pop
test
aaa
push
fdivrl
sbb
sub
iret
lods
xor
data16
repz
fisttps
subb
push
or
jge
test
mov
inc
xchg
or
mov
jae
movsl
repz
push
or
mov
repnz
lds
andl
sahf
cmp
xchg
dec
scas
inc
xchg
outsb
xchg
inc
popa
or
mov
adc
sbb
mov
fs
adc
mov
mov
pusha
push
movsb
jb
pop
fcomps
and
or
pop
jb
add
pop
dec
jb
aas
stc
sub
in
xchg
mov
rcrl
movsl
imull
jae
cltd
outsb
decb
sub
mov
aam
jle
je
daa
daa
jmp
cmp
add
xlat
mov
xor
dec
iret
jl
arpl
and
aad
dec
push
fstpt
test
in
push
inc
test
xlat
cs
negb
and
inc
test
inc
cwtl
push
cmpsb
mov
mov
in
adc
and
mov
push
jl
cmpsb
iret
pushf
iret
or
pusha
push
mov
mov
pop
test
xor
mov
aaa
sbb
jecxz
inc
stos
popa
mov
test
cmp
xchg
add
aad
sub
and
sbb
popa
aas
jg
xor
sub
fcomp
es
lcall
add
outsb
das
sbb
data16
mov
clc
in
stos
je
inc
lcall
mov
push
fidivs
cmp
nop
mov
inc
or
mov
xor
jbe
sbb
aaa
cwtl
and
mov
push
in
jns
sar
data16
jns
pusha
pop
mov
roll
sbb
into
add
fcmovnu
cmp
je
popa
in
fistps
xor
inc
enter
push
xor
int
lret
xor
mov
loope
sbb
push
pushl
rep
test
movsl
mov
inc
pop
xlat
mov
xchg
jge
gs
mov
jle
les
jle
in
push
mov
dec
add
jb
pop
or
into
in
stos
pop
push
or
xchg
sbb
or
icebp
mov
rcrl
jecxz
iret
and
and
sbb
dec
push
aad
ds
inc
outsb
push
xchg
ljmp
push
mov
aad
mov
int3
rorl
int3
sub
cmp
repnz
out
ret
mov
mov
call
dec
mov
jno
shll
stos
jmp
insb
xchg
ljmp
bound
loop
or
jbe
sti
iret
mov
xlat
mov
sti
jne
mov
push
icebp
mov
imul
aad
lahf
push
or
ds
aas
and
mov
in
add
dec
xor
adc
mov
jle
daa
shll
idiv
jmp
icebp
dec
hlt
aas
and
pusha
andb
sbb
add
sahf
cltd
pop
adc
mov
cmpsb
sub
stos
jge
test
cmpsb
aad
hlt
int3
popa
fwait
pushf
pop
ljmp
sbb
pop
mov
imul
jnp
sub
ljmp
or
test
fwait
cmp
mov
jg
sbb
cltd
imul
mov
adc
sub
or
popa
mov
lods
sti
test
jne
cmp
sub
lcall
jae
cmc
push
add
fcomps
or
jbe
jns
inc
mov
lret
dec
mov
sbb
les
test
xchg
test
ret
sbb
add
jmp
mov
add
out
aam
icebp
inc
mov
mov
lret
lea
leave
xor
out
lds
adc
add
testb
inc
test
lock
xchg
ret
fcomps
pop
sub
sahf
in
cli
push
mov
popl
xchg
std
dec
shll
mov
sub
test
ret
ljmp
inc
fiaddl
rcrb
pushf
push
xchg
jge
xchg
inc
dec
idiv
shl
std
mov
xor
movsl
jle
mov
jmp
ficompl
mov
add
push
mov
cmp
xchg
andl
test
fwait
adc
das
mov
jae
lods
or
add
mov
cmp
cmp
iret
out
jne
push
adc
cwtl
lea
push
cmpsb
mov
xchg
repnz
sbb
mov
das
mov
enter
jo
aam
add
lock
fnstsw
je
nop
mov
fidivrl
std
out
jnp
xor
mov
cwtl
mov
cmp
fsubl
repz
inc
cltd
rcl
xchg
arpl
jnp
or
inc
leave
dec
xchg
sub
mov
fcomi
shlb
int3
jbe
cwtl
inc
pop
push
push
int3
xor
lock
rcrb
dec
mov
push
sbb
data16
fimull
loope
mov
add
out
test
jne
jb
inc
or
fmull
pop
jb
sbb
adc
adc
hlt
addr16
xchg
das
push
fwait
jbe
mov
imul
cmp
mov
imul
aas
add
pcmpgtw
loopne
xchg
scas
mov
mov
xchg
or
pushf
rcll
aam
fsubrl
orl
data16
inc
mov
mov
xchg
test
mov
adc
xlat
mov
std
mov
into
mov
mov
xchg
push
push
jecxz,pn
pop
out
jecxz
aaa
cmc
rorb
inc
ret
xchg
jmp
mov
push
mov
jmp
pop
push
daa
ret
or
jo
pop
cmpsb
push
dec
je
xor
sub
mov
add
fiadds
ss
cmp
not
xchg
mov
cmc
loopne
sub
mov
cli
sbb
inc
jge
jp
jp
mov
mov
inc
lret
xchg
add
sbb
subb
mov
std
mov
push
ret
sub
mov
fcmovnu
inc
fisttpll
lods
nop
mov
jp
sahf
jo
or
out
ds
jle
add
mov
insb
inc
test
pop
push
push
popa
cmp
dec
and
mov
es
neg
ret
sbb
and
jno
xlat
inc
inc
das
ret
repnz
insb
push
sub
jnp
pop
push
push
pop
lret
ljmp
cwtl
xor
rorb
loope
popa
stc
add
cmc
dec
rcrb
jbe
dec
mov
add
test
mov
cmp
leave
pop
icebp
pop
pushf
push
and
xchg
add
or
sbb
dec
jbe
imul
cmpb
test
rorb
sub
push
adc
test
jmp
pushw
cwtl
push
inc
rcr
and
outsl
pusha
mov
mov
add
xor
pop
pop
mov
mov
cltd
in
popa
rcrb
mov
inc
paddd
mov
jmp
inc
stos
xor
mov
stos
mov
inc
js
push
das
icebp
xor
jle
sub
shl
or
jbe
inc
and
push
add
jne
sub
cmp
push
push
push
pop
lret
pusha
incl
cmp
rcll
mov
movsl
out
pop
mov
mov
cmp
sbb
das
sbb
push
mov
stc
cmp
imul
rorb
pop
insl
sbbb
xor
push
js
jecxz
adc
pop
add
or
les
sahf
aam
shlb
div
sbb
outsl
pushl
mull
sbb
sbb
lar
mov
lret
mov
jp
aad
cmc
fstl
xor
add
in
mov
lds
and
inc
pop
xchg
cwtl
add
xchg
in
or
mov
je
ljmp
add
in
cmp
insl
cs
cmp
jo
in
inc
sbb
out
xor
dec
inc
xor
rorb
push
lcall
sahf
xor
adc
popa
outsl
out
imul
ljmp
les
push
lds
add
jge
out
addr16
lcall
jmp
push
ljmp
gs
cmc
jnp
cmp
add
mov
adc
shlb
pop
loopne
push
dec
mov
in
or
cli
sahf
movsl
mov
or
lret
xchg
rcll
sub
or
inc
mov
lds
and
push
out
dec
push
fs
stos
nop
dec
inc
int3
sbb
pushf
rcll
cld
lds
sbb
pop
fdivrl
cld
pusha
lret
add
scas
push
mov
out
jge
lret
or
and
or
and
inc
add
lock
aam
jnp
mov
add
aas
mov
imul
sub
xchg
lea
mov
add
fwait
and
or
pushf
cmpsl
clc
inc
push
insl
std
scas
pop
mov
lods
lfs
imul
insl
dec
adc
sti
sbb
xchg
fldenv
es
shll
scas
outsb
in
popa
enter
pusha
ficompl
insl
xchg
sbbl
in
cmp
ja
mov
neg
jnp
bound
test
mul
leave
into
add
adc
cwtl
mov
lods
test
bswap
sahf
push
lahf
lret
xchg
dec
lods
daa
sarl
mov
mov
xchg
and
mov
imul
cltd
cwtl
push
rol
mov
pop
xor
mov
mov
pop
movsl
sub
loopne
cmp
jnp
mov
cmpsl
push
or
jmp
cmp
push
add
inc
iret
popl
shr
test
subl
jae
or
popa
dec
push
nop
out
dec
test
sbb
xor
mov
test
inc
ret
outsb
dec
jecxz
inc
xor
push
subb
lret
add
filds
imul
bound
cmc
in
loopne
fcoml
in
cmp
lods
rolb
int
lds
mov
push
pop
xchg
jl
arpl
add
cmp
cmp
xor
push
inc
rcrl
pop
ret
xchg
sarl
dec
sahf
ret
lock
adc
cltd
or
jmp
cmpb
out
clc
mov
and
or
jmp
pop
das
and
xchg
dec
fcoms
xor
and
push
xlat
xchg
xor
xor
push
js
js
add
jg
imul
and
mov
xor
lock
dec
xor
or
std
jle
ret
lods
rcrl
adc
jp
mov
lret
jne
inc
roll
ljmp
stos
push
push
outsl
es
imul
aad
mov
jne
xchg
or
sub
mov
lahf
push
call
loopne
xor
dec
std
dec
dec
push
xor
mov
jns
add
inc
movsb
js
or
sbb
das
jns
xchg
in
mov
hlt
test
jnp
jbe
ds
test
test
loope
in
pop
sarl
add
cmp
push
clc
lahf
xchg
or
lret
xchg
sarl
xor
jns
lods
popa
or
popa
out
jno
aam
jg
scas
test
leave
or
stc
out
test
data16
inc
aam
loopne
stos
rorb
or
adc
xor
popf
pop
mov
sti
jbe
inc
sub
xchg
fwait
pop
enter
cmpsl
aaa
jmp
clc
mov
jp
cli
rcrl
mov
mov
aam
imulb
int
or
lret
pop
push
aaa
lahf
jle
stc
out
movsl
scas
push
dec
sub
mov
mov
pop
out
std
dec
ja
mov
hlt
movsl
outsb
sbb
out
in
sti
push
xchg
jne
int3
pushf
jae
push
push
or
mov
stc
insl
shl
test
inc
sahf
out
es
adc
cmp
sub
lods
cmp
sbb
xchg
inc
inc
push
cmp
sahf
fiadds
xchg
into
sub
mov
xor
mov
pop
imul
mov
sub
repnz
lods
xchg
pop
xchg
gs
in
dec
inc
inc
xchg
and
lds
push
cmp
lock
insl
xchg
add
or
mov
mov
lock
fistpl
fld
outsl
add
or
xchg
jnp
maskmovq
mov
movsb
cmpsl
pusha
mov
sub
bound
inc
dec
add
and
popf
mulb
shr
lea
imul
pop
sub
ljmp
lret
adc
inc
mov
or
or
cmpsl
dec
pusha
inc
push
cmp
in
repz
mov
sbb
sbb
xchg
sub
notl
or
xchg
scas
sub
xchg
push
mov
mov
adc
fsubl
test
scas
xor
enter
jmp
fcoml
loop
sbb
xor
ljmp
inc
and
lret
xchg
cmpsb
push
lcall
push
lods
shll
and
int3
mov
or
mov
sbbb
mov
sbb
pop
adcl
cmp
subb
mov
hlt
ss
iret
in
push
push
shl
xor
mov
push
aaa
out
pop
adc
dec
mov
jbe
rorl
out
xchg
push
lahf
xlat
scas
das
xor
fcom
jge
mov
fidivs
ret
in
stc
iret
loopne
lock
pop
add
jo
xchg
fistl
je
sbb
outsl
leave
jbe
xchg
sbb
pop
leave
aaa
inc
in
pushl
lret
rorw
pusha
ljmp
rolb
xchg
scas
sub
jle
jle
loopne
gs
movsb
jp
movsl
jmp
sub
push
sub
insl
inc
jno
arpl
xchg
or
imul
adc
test
lahf
pushf
cmpsb
push
faddl
push
cmp
imul
mov
int
aam
xchg
popa
jge
adc
ja
adc
imul
sub
lea
clc
jbe
cmp
sub
data16
xor
mov
inc
jle
mov
xchg
xor
pushf
icebp
out
sub
dec
je
adc
outsl
stos
int
pop
push
dec
jb
rcrl
inc
or
xor
cmp
adc
in
push
outsb
test
add
test
add
and
adc
mov
sarl
mov
and
mov
jb
enter
cmp
sti
sbb
shrb
fldenv
imul
loopne
pusha
shlb
adcb
paddw
inc
push
shrb
mov
leave
aam
sub
add
addr16
push
dec
push
sbb
hlt
gs
add
neg
aad
insb
xchg
sbb
push
int3
enter
mov
mov
enter
pop
shrl
dec
test
test
int
adc
xor
sbb
push
mov
or
or
xchg
and
xchg
nop
push
pop
add
push
loope
jne
outsb
cmpsl
pop
imul
or
je
shrb
call
jbe
add
xchg
add
jmp
jg
ret
pop
jmp
movsl
pop
mov
fidivrs
insb
push
push
ljmp
daa
cwtl
xchg
das
cs
jns
in
scas
add
loop
jno
sbb
ret
andl
xor
mov
popa
push
in
jmp
xor
repnz
mov
inc
inc
sub
xor
scas
popa
push
pusha
sbb
jbe
enter
lret
ficoms
insl
aaa
in
pop
mov
pop
xor
push
and
jo
cmpsl
xchg
aas
or
sbb
mov
cmc
add
andb
shrl
out
sub
mov
mov
test
jg
in
xchg
push
arpl
stc
out
mov
inc
rolb
movsl
sbb
mov
mov
ret
cmp
xor
push
inc
movsl
pop
cmc
rcll
lods
push
jge
pushf
fldl
sub
xor
push
and
mov
mov
xchg
push
shll
mov
shufps
inc
idivl
mov
jno
xchg
fsub
mov
ss
rclb
mov
lcall
rcrl
clc
inc
xor
das
pushf
and
sbb
pop
inc
add
xor
inc
outsb
sbb
pop
pop
mov
sub
insl
mov
shll
orl
lock
xchg
ja
pop
pusha
rcl
xor
inc
es
mov
clc
inc
lcall
loope
and
cmc
dec
xor
mov
mov
test
xor
inc
or
outsl
aaa
push
adc
xchg
in
jle
enter
dec
jnp
mov
mov
pop
mov
lods
mov
in
pushf
push
mov
sbb
add
cmp
dec
pusha
push
cwtl
and
or
loopne
sbb
iret
lret
push
aaa
xchg
insl
adc
and
cmpsl
inc
repz
mov
inc
jmp
push
dec
scas
push
push
test
out
jnp
dec
rorb
aaa
dec
mov
xchg
and
add
inc
repnz
fdivrl
adcl
sub
xchg
nop
xchg
sbb
dec
arpl
jbe
fstpt
addr16
decl
xchg
inc
jns
mov
fcoms
inc
push
mov
fnsave
cmp
pop
test
lcall
sbb
add
jmp
jno
or
fisubl
out
ja
int3
pop
into
cmc
paddusw
test
add
mov
ljmp
mov
sbb
fwait
xchg
inc
loopew
pop
mov
rclb
inc
mov
and
bnd
push
or
das
jl
pop
add
int
aas
sti
aad
shl
and
mov
sbb
dec
in
aaa
dec
nop
mov
pop
stc
gs
cmc
mov
jp
lods
jge
daa
mov
jno
adc
mov
ss
lcall
xchg
and
into
lahf
dec
mov
test
js
sub
lahf
cli
or
xor
loop
sbb
dec
outsl
mov
pop
cmp
int
cld
add
popf
pusha
mov
pusha
ret
outsl
inc
insb
and
lcall
into
fstpl
pop
pop
pop
rcll
mov
jl
fistl
out
les
jnp
adc
add
out
inc
ret
mov
stos
cmp
sbb
jbe
push
sub
lahf
movsl
mov
push
push
xchg
dec
in
push
mov
inc
test
mov
cmc
mov
hlt
out
stos
cmp
push
xchg
out
loope
stos
imul
push
fiadds
fdivrs
jecxz
jne
pushf
inc
pop
mov
stos
fs
push
inc
or
xor
xlat
scas
je
stos
decl
lret
test
and
ljmp
js
xor
or
adc
add
js
xor
mov
mov
pop
mov
push
aaa
cmp
xchg
lods
jg
ljmp
fsts
sti
push
jmp
adc
mov
cmc
ficompl
mov
dec
xor
in
mov
sub
jb
mov
add
push
push
scas
ss
loopne
jnp
add
and
cmp
xor
mov
dec
popa
inc
xor
inc
ds
xchg
mov
outsl
and
pop
xchg
or
sbb
aam
sub
sub
ret
int
mov
mov
cltd
push
in
ja
sub
xchg
push
mov
mov
mov
xchg
sbb
cmp
mov
pop
jg
fistps
dec
movsb
not
loope
xor
jae
pop
sub
fwait
scas
in
jg
lock
aas
and
loop
ja
jns
ja
and
adc
sti
xchg
cmp
jns
cld
jp,pn
loop
xchg
cmpsb
adc
scas
or
scas
popf
pop
or
xchg
in
mov
xor
xlat
fdivrl
mov
test
pop
mov
xor
jb
aaa
pop
mov
sbb
js
aam
adc
ja
andb
or
shrb
or
lret
adc
and
das
cmp
jl
leave
sub
mov
hlt
cs
pusha
test
data16
stos
clc
dec
jecxz
sub
push
jecxz
ret
push
loop
leave
mov
outsl
lea
insl
adc
bound
xchg
push
xlat
mov
cli
pop
xchg
push
je
stc
xlat
jge
xchg
mov
fcoms
sub
fst
and
sub
xlat
jmp
jle
inc
mov
xchg
lcall
rol
lods
rolb
lods
fsubrp
xor
push
push
xchg
cmpsb
add
fcomps
jecxz,pn
shl
push
pop
and
rcrl
jmp
or
xlat
lcall
cld
push
jae
sub
jl
popa
stc
lds
cmp
fcoms
mov
push
add
mov
mov
mov
mov
adc
in
int3
pop
or
adc
cmpl
test
mov
dec
pop
add
enter
ds
pushf
xchg
es
mov
in
fstl
or
dec
dec
popf
add
push
int3
jbe
pop
lcall
jnp
or
xchg
les
sub
sub
cld
jne
lea
adc
int
cmpsl
aad
cmp
jb
imul
push
fs
mov
in
push
xchg
xchg
push
push
or
cmp
mov
pop
sti
mov
inc
xchg
in
scas
test
xlat
push
popa
mov
test
scas
cwtl
jbe
lock
fistl
or
dec
pushf
jno
adc
fldl
imul
cmp
sub
sahf
xor
mov
or
es
es
shlb
jmp
outsb
in
sub
sub
dec
sub
sub
stc
push
or
xlat
push
push
mov
ret
mov
andb
or
pushf
pop
or
pop
mov
std
out
xor
imul
dec
cltd
clc
push
push
inc
fwait
pop
jno
es
xor
push
mov
mov
ja
movsb
adc
push
pop
xor
sar
shll
push
jle
jge
xorb
sub
ror
adc
sub
jl
or
daa
out
out
push
insb
mov
ja
minps
test
mul
cmp
push
std
pop
cmc
in
jne
sub
int
shr
mov
fldcw
adc
stos
frstor
sub
stc
sti
les
xlat
mov
test
adc
fisttpl
mov
sub
mov
xor
call
out
outsl
xlat
int3
and
jecxz
push
and
fnstenv
loopne
adc
mov
push
lahf
and
pusha
out
mov
mov
popl
mov
jmp
cmpsl
pop
or
inc
ss
es
jno
or
aad
sbb
pop
fildl
xor
pop
in
aad
inc
inc
pushl
fwait
add
dec
inc
loopne
rorl
divl
mov
pop
xchg
lock
fisttps
test
jns
in
mov
inc
mov
xor
out
jno
out
xor
jl
push
fs
jmp
mov
jne
inc
mov
mov
scas
cmp
mov
pusha
xor
xor
int3
addb
stos
xor
imul
arpl
or
inc
out
dec
popf
cwtl
popa
and
call
jbe
jge
scas
and
sahf
sbb
mov
dec
mov
jb
cmpsb
mov
fimuls
ss
fistl
adc
punpckhdq
push
stos
sbb
in
push
nop
push
insb
dec
mov
cmp
sbb
mov
js
frstor
in
inc
mov
mov
jecxz
call
sub
or
cli
test
int3
inc
cmp
dec
ja
mov
xor
and
repz
xchg
outsb
insl
jae
adc
cmpl
test
mov
mov
lods
cmp
repnz
enter
and
daa
int
mov
add
xor
adcb
xor
cmp
jne
lea
popl
dec
inc
call
push
dec
lret
je
pop
pushf
iret
push
or
repnz
jae
sbb
ret
cmpsb
daa
fdivr
cmp
in
lea
sbb
jle
cltd
xchg
inc
xor
jg
mov
rorb
sub
dec
add
jl
hlt
sar
push
lret
out
stos
dec
test
cmp
sub
gs
mov
push
addr16
xchg
int
dec
push
std
sub
push
dec
das
dec
hlt
out
mov
cmp
mov
hlt
mov
rclb
stos
hlt
loopne
fsubrs
aaa
movsl
xchg
fisttpll
xchg
fwait
pop
cmc
subb
mov
js
xor
and
xor
insb
imul
add
sar
or
mov
push
jl
push
xchg
add
aam
inc
into
lock
jb
xor
jle
ficoms
adc
adc
lods
jl
jno
push
xchg
and
sub
iret
cltd
leave
jl
movsl
cmp
add
xorb
icebp
dec
push
inc
and
inc
mov
xor
cmp
popf
stc
aam
mov
cmp
and
loopne
jb
mov
jl
out
dec
mov
cmc
mov
mov
sub
popa
push
fyl2xp1
cwtl
sub
fadd
adc
mov
test
outsl
jne
lret
stc
xchg
mov
mov
push
sub
mov
sub
int3
sbb
or
xchg
fs
mov
cmp
scas
mov
loopne
push
mov
jne
mov
test
aaa
in
xor
xor
lock
inc
push
jnp
icebp
mov
inc
cmp
sub
jg
into
add
repz
xlat
pop
pop
inc
mov
mov
fcompl
loope
sub
cwtl
aam
sub
mov
pusha
mov
cld
loop
mov
rorl
test
jg
push
dec
or
int3
or
sbb
or
shr
sarb
and
mov
cmp
out
or
xor
sti
fisubrl
sub
int
and
dec
sbb
cld
fdivrs
sub
int3
dec
mov
fwait
stc
jae
mov
cmc
cmp
xchg
adc
testb
rclb
repz
cmpsb
sub
pop
and
cmpsl
addr16
mov
push
rcl
cmp
rcll
dec
sti
into
fsts
cwtl
xor
mov
or
pop
clc
cmpsl
cmpl
es
add
gs
sbb
mov
adc
inc
dec
sahf
mov
movsl
mov
test
push
cmc
push
out
xchg
stos
aaa
jb
adc
mov
popa
jmp
lea
orl
pop
js
scas
outsl
add
movsb
cld
ja
outsb
or
sarb
xchg
iret
repnz
cld
jbe
mov
mov
push
sub
scas
cs
outsb
fmull
fldt
xchg
fcompl
jmp
mov
or
mov
mov
stos
cld
fistpl
cmp
cs
call
adc
insl
outsl
pop
xlat
sahf
enter
outsb
cmpb
xchg
and
push
push
daa
jne
dec
inc
pushf
inc
mov
pop
sub
adc
xor
pop
shrb
jnp
ja,pt
shlb
and
pop
lret
and
xchg
or
inc
mov
fistps
pop
mov
sub
enter
imul
test
cwtl
mov
and
fldl
mov
sti
mov
xchg
loopne
mov
push
cmp
aaa
ljmp
test
aas
jl
inc
lret
add
jl
mov
daa
addr16
and
aas
movsl
dec
cld
imul
sbb
cltd
inc
movsl
dec
movl
mov
int3
sbb
add
mov
inc
push
sub
cmp
pop
adc
mov
inc
out
xchg
jg
notb
int
mov
out
inc
sbb
addb
mov
nop
jecxz
outsb
aad
mov
pop
test
or
mov
out
pop
repz
pop
push
and
ds
pop
or
imull
xor
mov
roll
pop
adc
and
stos
and
lahf
xor
sub
and
leave
sbbl
lods
push
mov
lret
lods
mov
and
mov
sbb
mov
pop
mov
pop
aas
pop
and
sarb
jno
pop
and
das
sub
ficoms
xchg
cmp
lods
arpl
mov
outsl
sub
xor
ja
shrb
loopne
fwait
adc
xchg
outsl
and
in
mov
fmul
arpl
pop
and
lea
iret
push
pushf
repz
jb
xor
jno
pop
arpl
clc
cmp
mov
int3
adc
add
push
movsl
outsb
aas
or
das
pop
mov
hlt
and
inc
sbb
cmp
outsl
or
dec
sub
adc
xorl
test
filds
push
xchg
inc
ficompl
hlt
mov
test
xchg
lahf
dec
fsubrs
test
filds
push
cmp
movw
lret
pop
insb
fwait
pop
xor
xchg
sub
cmp
sub
mov
push
dec
int
xchg
mov
xchg
jnp
jno
or
or
pushf
and
divl
sub
sub
add
clc
pushf
xchg
cmpsb
je
ret
mov
insl
popf
xchg
adc
fiaddl
int3
ja
cmp
lea
dec
xchg
loope
sahf
dec
into
repnz
filds
xchg
lcall
jbe
pushl
js
iret
dec
pop
mulb
popf
lods
sub
mov
and
pop
mov
xchg
mov
mov
sbb
pop
cmp
xor
movsb
push
pusha
xchg
insb
popf
mov
add
in
xchg
mull
outsb
or
pop
jle
dec
idivb
mov
enter
jns
mov
mulb
xor
add
xor
stos
int
push
push
cmc
aaa
ss
shrb
xchg
sub
pop
fiaddl
and
in
push
fisubrs
cs
les
fs
fidivrl
cmpsl
push
jo
jo
in
js
xchg
arpl
jmp
sahf
stc
and
push
push
addl
push
xor
rcrl
xchg
loope
jle
inc
jge
leave
cmp
add
mov
dec
and
push
outsl
cmp
fnstsw
les
fsubs
loopne
je
fptan
je
pop
aam
lds
push
decl
leave
test
test
ljmp
mov
stos
arpl
ror
fdivr
lds
test
jns,pn
movsl
arpl
lcall
jle
mov
lea
mov
cmp
sbb
sahf
cmp
test
sub
adcb
push
gs
leave
sarb
push
inc
vcomisd
add
add
sbb
sub
insl
ds
mov
or
clc
cwtl
fidivs
and
cmpsl
es
aaa
or
stos
mov
cltd
cmpsl
std
cmp
inc
pop
ret
mov
loop
sub
mov
pop
lock
cmc
in
loop
cmpsb
jo
imul
std
pushl
popf
shl
adc
and
aas
lock
jl
sar
pop
adc
push
test
and
inc
xchg
mov
aam
dec
test
and
dec
xchg
nop
push
repnz
cmp
sub
adc
icebp
sbb
push
das
sbb
test
jmp
fidivl
cmc
cwtl
mov
outsb
out
push
aam
inc
scas
jo
push
sbb
xor
leave
ret
nop
test
xor
out
xlat
lds
data16
inc
mov
or
fsubrs
mov
mov
popf
xchg
stos
adc
sub
xor
cmpsl
push
cmp
jl
sub
mov
push
aam
xor
and
or
inc
xorl
mov
xor
xor
xor
insl
pop
push
xchg
pop
push
mov
shrl
incb
dec
sbb
and
sarl
imul
shrl
inc
stos
mov
mov
ja
adc
xchg
dec
cwtl
cmpsb
cltd
adc
push
hlt
dec
clc
mov
push
xchg
cmc
ljmp
call
sub
inc
cmpxchg
xor
lock
jmp
xchg
inc
inc
cwtl
jo
xchg
call
mov
das
pop
in
shlb
pop
pop
xor
xorb
xchg
cmp
inc
test
aas
mov
inc
sbb
adc
push
mov
sar
out
lcall
enter
jg
mov
rolb
add
mov
or
insb
lea
imulb
fwait
push
outsb
adc
sub
daa
pop
shrl
dec
imul
push
cmp
addr16
repz
mov
dec
in
lds
cmp
jge
or
inc
mov
imul
sahf
movsb
mov
mov
dec
push
pusha
call
sub
jb
out
pop
cltd
xlat
ficoms
rcrl
adc
jno
icebp
cmp
movsl
xor
xchg
xchg
stc
ret
adc
iret
mov
adc
jge
xorl
adc
and
cmp
shlb
dec
adc
adc
les
mov
aaa
rclb
and
jge
fs
jae
cli
mov
loopne
cmp
fs
adc
aas
mov
ljmp
pop
lds
fcomps
int3
cltd
cmp
stos
repnz
loop
leave
sub
add
aam
jg
sbb
lea
incl
lahf
jmp
cmp
insl
gs
lcall
sbb
das
or
pop
xor
cmpsl
int3
hlt
pop
mov
insl
xchg
sbb
cltd
mov
mov
loop
inc
loop
or
enter
mov
es
cmc
adcb
gs
jb
ja
rcl
shl
xor
orl
les
repnz
sub
or
jnp
sub
sbb
rcll
and
jg
sti
cmc
cmp
or
stos
xor
push
daa
lods
loop
pop
shll
iret
jp
xlat
ret
std
outsl
cmpsb
fwait
idiv
ds
sub
inc
xor
inc
mov
dec
call
icebp
mov
xchg
dec
out
lret
mov
or
pop
stos
test
xchg
add
loop
imul
fldt
int3
aam
andb
adc
popa
shll
cmpsb
ret
imul
and
and
mov
out
xchg
adc
mov
mov
jp
cli
sar
mov
pop
addr16
ss
leave
adc
insl
in
add
stc
inc
adc
inc
clc
aam
xor
cmp
fnstcw
cmp
movsl
lods
or
loope
push
cmc
pop
sub
sti
jnp
inc
mov
jae
cmp
sbb
inc
pop
push
mov
mov
jne
scas
push
daa
fcoms
jno
nop
jb
mov
fsubrl
ds
pop
mov
rolb
sbb
xor
mov
movsl
mov
fcmovbe
jb
loopne
std
pop
test
not
mov
stc
lea
push
add
xor
lahf
repnz
adc
adc
dec
data16
pop
addr16
iret
lahf
pusha
imul
pop
sbb
or
shlb
sbb
js
mov
sbb
shll
dec
jno
mov
mov
packuswb
aad
jle
mov
mov
push
xchg
mov
in
push
mov
push
insl
or
ja
add
jns
and
push
xor
and
scas
jb
test
adc
andl
rcrb
xchg
dec
xchg
pop
into
repnz
daa
fldcw
and
xchg
and
mov
ljmp
cmpsb
cmp
idivl
les
xorb
pop
xchg
aaa
dec
mov
ret
imul
mov
orb
dec
ret
addl
fisubrs
mov
push
test
loope
orb
insl
dec
ret
sub
mov
ficoms
and
mov
sahf
pop
into
mov
out
daa
add
cltd
adc
lods
cmc
dec
and
bound
leave
or
push
sub
dec
ret
int3
popa
jne
repz
adc
mov
adc
ret
imul
lret
xor
mov
lods
lods
cmpsb
outsb
ja
xchg
cmp
test
lret
dec
movq
sbb
pop
jmp
dec
iret
jno
push
mov
mov
xchg
inc
mov
fsubs
std
sti
test
or
or
loopne
enter
push
daa
xchg
cltd
lock
fdivl
adc
fstpt
fidivs
mov
mov
nop
jne
call
nop
mov
sub
ret
sbb
add
mov
cmp
mov
sahf
rclb
inc
shll
fidivrl
xchg
mov
hlt
jle
lret
dec
in
pop
adc
push
pop
cltd
lods
lret
add
test
jmp
mov
movb
xor
repz
push
pop
shlb
add
cwtl
push
testb
test
ret
pop
lods
test
jmp
jp
fldenv
ds
mov
sarb
cmp
jns
pop
and
mov
cmp
in
mov
xor
xor
add
sub
mov
xchg
mov
pusha
mov
adc
cmc
or
in
xchg
imul
div
adc
xchg
mov
and
inc
lds
enter
push
or
sub
push
mov
lods
fs
aaa
inc
sarl
jl
dec
cmc
inc
pop
cmp
mov
mov
imul
lea
les
clc
sub
outsl
xor
loopne
cld
cmp
rclb
dec
aas
or
mov
mov
sub
test
rclb
or
mov
and
clc
xchg
dec
dec
push
push
out
call
pop
xchg
sub
and
inc
add
test
push
inc
call
jnp
add
sbb
push
lret
pop
jne
dec
mov
sbb
push
push
aas
dec
xchg
dec
inc
cmp
add
iret
sbb
data16
jnp
sub
in
in
das
push
push
jbe
sub
push
sub
jge
sbb
and
add
cmp
hlt
into
cltd
add
jno
sub
lcall
dec
lods
stos
enter
jecxz
stos
push
push
les
push
jno
cmpl
mov
and
push
popf
notb
pop
xor
add
push
xacquire
ds
adc
mov
enter
and
push
icebp
xlat
pop
sub
popf
mov
adc
pop
adc
les
pop
xchg
and
xchg
icebp
cvtps2pd
das
inc
or
in
mov
mov
mov
push
add
or
or
lods
insl
je
iretw
push
lods
mov
jmp
and
adc
xchg
cltd
inc
jg
xchg
push
mov
push
xor
jge
sub
ds
sub
adc
aas
xchg
sbb
lcall
out
ret
insl
in
sbb
add
jg
icebp
cwtl
add
cmp
cmp
xor
and
mov
cmp
mov
nop
inc
movsb
add
cmc
mov
out
repz
mov
inc
pop
orb
jge
iret
ss
stc
push
jecxz
mov
loop
or
test
int3
aad
cmp
mov
int
fmull
xchg
scas
addr16
inc
jnp
sarl
sub
test
adc
pop
dec
mov
push
cmp
fcom
sub
loop
jno
cld
pop
push
push
cwtl
and
call
loop
sti
or
jge
xchg
aam
push
inc
in
cwtl
cmp
or
sahf
test
movsb
jno
and
loopne
cmp
leave
jno
out
fmull
das
dec
mov
pushf
xchg
add
xor
push
xchg
sub
fcoms
stos
pushf
loope
mov
mov
popa
cwtl
out
lds
mov
dec
sbb
or
mov
icebp
sub
ja
jnp
dec
ja
lahf
xchg
sbb
mov
mov
decb
in
in
xchg
xchg
mov
add
sbb
adc
out
push
lcall
jnp
jmp
jo
and
add
mov
lret
rorb
clc
pop
jnp
cmp
adc
push
or
sahf
add
shl
and
bound
pop
sub
out
mov
add
mov
pop
movsb
in
shrl
ss
mov
xchg
roll
mov
and
inc
hlt
out
push
mov
sbb
cmc
mov
or
push
test
adc
ficoms
mov
imul
mov
mov
ljmp
xlat
and
dec
dec
xor
cmp
movsb
pop
pusha
add
cmp
addr16
adc
dec
mov
mov
daa
loope
clc
xorl
mov
jne
or
jle
jmp
push
inc
inc
pop
inc
push
scas
and
jg
sbb
pop
mov
xor
aas
ss
rorl
aam
lea
mov
pop
loopne
vmovaps
pop
leave
sbb
adc
aaa
or
in
sbb
leave
adc
call
mov
std
ret
jo
or
int
gs
ror
ret
adc
push
mov
rol
es
mov
loop
out
xchg
in
lds
test
xchg
call
xchg
jge
out
lahf
int
cmpsl
out
cmp
jne
call
pop
sbb
into
das
or
pop
xor
testb
push
and
outsb
in
daa
sbb
movsb
mov
or
sub
add
sub
scas
xchg
iret
jecxz
fsubr
aaa
test
mov
xor
ljmp
adc
aad
jns
cmp
pop
and
pusha
inc
lret
scas
sub
das
pop
mov
daa
lret
imul
decb
sub
loopne
pop
xchg
mov
jecxz
in
mov
and
outsb
fsubrs
sub
lods
test
pop
dec
and
xchg
ret
sarb
pop
jns
loopne
jno
nop
cmp
scas
int
push
jl
or
inc
cmp
test
mov
insb
cld
fldcw
inc
pop
jns
mov
xlat
and
push
add
jne
fldt
inc
xor
lret
outsb
add
cmpsl
dec
jne
lret
sti
or
inc
mov
out
pop
cwtl
rol
lahf
mov
fsubs
and
xor
xor
push
xchg
cmpsb
pop
js
insb
and
push
loope
sub
shlb
push
sbb
adc
ljmp
xchg
xchg
arpl
scas
lock
jae
aam
and
sub
mov
in
outsl
and
jp
aaa
jge
cwtl
sahf
popa
ret
jge
ss
fldenv
adc
es
xor
jae
jae
in
add
scas
sbb
jl
and
mov
ret
xchg
mov
pop
cmp
cmp
and
jo
sub
stc
xchg
jge
lods
mov
jbe
fwait
es
adc
push
das
add
nop
add
inc
mov
std
repnz
or
movb
jo
popa
leave
adc
xlat
sahf
pop
sub
int3
sub
js
arpl
jge
aas
loopne
test
hlt
pop
inc
push
mov
mov
jecxz
into
cwtl
mov
jmp
push
mov
fmull
sti
movsl
aas
mov
stos
sub
jo
inc
int3
pop
outsl
xor
lret
lds
stc
or
out
xor
stc
adcb
push
dec
scas
jp
aad
xchg
jl
mov
les
mov
xor
mov
outsb
stc
adc
add
loopne
and
lret
lret
mov
incb
daa
sub
cmpsb
or
xchg
aas
cmpsb
and
pop
mov
test
lcall
sbb
mov
cmp
stc
pop
cmpsl
cltd
ret
xchg
jo
cmp
cld
mov
psubq
pop
add
fcoms
sub
arpl
adc
js
or
fld
sahf
and
xchg
fimuls
push
push
and
mov
push
loop
xchg
adc
add
cmc
and
popf
xor
pop
or
out
in
add
sub
sub
add
add
add
sub
sub
add
dec
push
dec
pop
or
inc
inc
dec
ror
inc
add
ror
sub
dec
inc
call
push
add
sub
sub
inc
add
sub
call
inc
inc
dec
dec
push
call
add
sub
sub
sub
dec
xor
inc
call
call
add
sub
add
pop
mov
add
call
dec
inc
sub
add
dec
call
add
sub
add
inc
inc
push
add
pop
sub
dec
push
push
push
pop
add
dec
push
sub
inc
pop
sub
sub
call
add
push
inc
pop
sub
sub
call
ror
sub
sub
add
sub
add
shl
dec
add
sub
inc
sub
add
sub
mov
push
push
dec
and
add
push
cmp
jns
dec
pop
push
push
rol
add
inc
ror
dec
add
sub
add
push
push
dec
xchg
inc
neg
add
add
dec
ror
inc
inc
sub
push
push
inc
dec
sub
push
dec
sub
pop
add
lea
call
push
call
inc
dec
add
add
dec
inc
sub
sub
sub
mov
inc
add
sub
dec
add
call
push
push
pop
pop
push
add
sub
add
add
sub
push
movl
pop
push
dec
push
call
add
add
push
sub
add
pop
inc
dec
sub
or
add
neg
inc
inc
inc
dec
dec
add
dec
add
mov
push
add
and
mov
sub
add
push
inc
dec
add
neg
sub
inc
or
dec
or
inc
dec
sub
xor
add
push
shr
inc
pop
push
rol
push
inc
dec
sub
add
dec
sub
push
sub
add
sub
call
add
add
inc
sub
mov
sub
push
shr
rol
add
add
push
add
sub
pop
shr
sub
dec
dec
shr
inc
call
neg
add
inc
add
add
push
call
push
push
add
add
mov
add
push
ror
or
pop
push
inc
call
call
add
sub
sub
sub
sub
inc
push
xor
or
pop
dec
mov
sub
push
add
add
inc
push
mov
push
sub
add
sub
dec
test
jne
add
push
sub
xor
pop
add
call
call
add
add
xchg
sub
sub
inc
sub
call
sub
add
add
sub
sub
mov
sub
xor
rcrl
loope
sub
adc
imul
movsb
lahf
call
rolb
and
push
popa
out
cmc
dec
push
roll
and
adc
shl
test
and
gs
adc
fidivs
in
sarb
fiadds
cmc
adc
inc
or
sbb
push
rcll
inc
add
adc
inc
xchg
movsb
jmp
aaa
dec
xor
mov
xor
push
lcall
mov
sub
adc
inc
mov
outsl
cmpsb
daa
in
es
mulb
jo
dec
mov
mov
sub
outsb
adc
adc
mov
pop
cld
or
cld
push
rclb
test
xchg
cmp
jl
and
test
lods
adc
add
sub
lahf
lcall
inc
outsb
and
pop
push
add
repz
xchg
or
and
in
in
in
popa
xchg
mov
mov
push
and
mov
mov
rcll
push
pop
mov
outsb
push
dec
pop
es
xchg
and
fwait
loopne
rclb
adcb
rclb
aas
jmp
or
adc
cmpb
adc
pop
les
and
push
in
cmp
in
test
in
dec
cld
fs
nop
out
fdiv
xor
jns
out
sarb
nop
int3
jb
mov
sub
push
cmpsl
sbb
adc
out
push
cmc
sarl
jno
pop
in
sahf
aas
flds
stc
fists
mov
outsl
xor
sbb
pop
out
and
jb
xor
cmpsb
sbb
pop
cmpsb
jb
mov
lea
inc
mov
xorl
jnp
cmpsb
sbb
jne
and
ret
xor
cmpsb
jb
mov
pop
and
out
aad
pop
out
and
jb
bound
adc
out
imul
jb
mov
cmpsb
stc
push
mov
jae
xor
out
push
cmc
sarl
adcb
xorl
jbe
xor
pop
out
and
jb
outsb
lcall
mov
push
mov
or
xor
and
xchg
jne
testl
cmpsb
jb
mov
cmpsb
sti
add
and
xchg
jne
testl
cmpsb
jb
mov
cmpsb
sti
add
and
inc
inc
mov
add
cmpsb
jb
mov
cmpsb
sti
add
cmpsb
jb
mov
cmpsb
testl
cmpsb
jb
mov
cmpsb
sti
add
cmpsb
jb
mov
cmpsb
sti
rcrb
and
xor
pop
out
and
jb
push
pop
inc
xorl
xor
xor
and
out
or
mov
xor
push
testb
lods
test
xorl
jno
and
dec
stos
jno
bound
add
out
mov
shll
lret
xchg
jne
and
dec
mov
js
nop
jno
push
push
pop
cmpl
add
aaa
orl
stc
mulb
jmp
lret
xchg
jne
notl
scas
lea
mov
sub
sbb
and
jb
cwtl
lods
mov
cmc
clc
sub
repz
std
cmp
jns
cmp
repz
jns
inc
fists
or
movsl
sub
out
cmpsl
and
hlt
cltd
fidivrs
idiv
int3
xor
add
mov
and
gs
jb
lret
lahf
adc
and
jne
lea
mov
push
dec
mov
subl
sub
xchg
jb
inc
lods
push
jl
cmpsb
jb
xor
cwtl
jl
fldenv
xor
mov
mov
inc
jge,pt
pop
xlat
cmpsb
jb
push
sub
stc
jge
pusha
push
shll
cld
sar
xor
icebp
jp
sarl
jp
pop
int
dec
je
jnp
pop
int
sub
jno
push
and
xorl
cli
xorl
jb
xor
cmpsb
jb
aas
popf
in
xor
dec
pmullw
cmpsb
jb
inc
sahf
dec
adc
cmpsb
jb
inc
xchg
dec
add
cmpsb
jb
inc
stos
jno
jmp
sub
xor
cmpsb
jb
inc
stos
stc
push
scas
mov
xorl
pop
dec
fisubrs
jb
push
push
mov
popa
idiv
inc
fs
jne
and
mov
sub
out
and
jb
mov
push
mov
jbe
push
lahf
inc
cmpb
ret
xor
and
mov
jl
mov
mov
mov
andl
out
xchg
push
or
cmpsb
jae
push
push
push
xchg
cltd
dec
mov
jno
jle
popf
push
jb
xor
cmpsb
jb
push
data16
push
sub
xor
test
jecxz
jns
dec
pop
xchg
or
arpl
cld
adc
push
js
sub
pop
outsb
inc
push
rclb
lret
push
cld
push
in
rclb
stc
push
in
rcll
rclb
rclb
rclb
jnp
lret
mov
jmp
cmp
cmpsb
data16
jbe
mov
mov
jae
pop
stos
sub
enter
dec
cld
and
xor
movsb
bound
call
push
inc
push
fwait
cli
shll
push
or
das
dec
roll
movsb
mov
icebp
pop
mov
adc
push
pushf
push
xlat
push
pop
das
cmp
adc
lret
fldt
jae
or
mov
pop
repz
fidivrl
sub
cmpb
and
mov
push
iret
xor
repnz
push
aam
dec
das
inc
sahf
cmp
imul
imull
iret
clc
add
cmp
icebp
mov
cwtl
jae
dec
scas
mov
inc
cwtl
subl
xor
jle
clc
fwait
push
push
rcll
mov
xchg
gs
add
scas
mov
add
int
push
cmp
mov
mov
aaa
and
sbb
jp
stc
mov
adc
imul
jns
icebp
inc
loop
xchg
pusha
lret
movsb
push
das
leave
lcall
inc
test
mov
cltd
cld
fwait
sub
out
pop
xchg
pop
repnz
out
jae
push
xchg
rcll
lcall
or
in
fldenv
mov
add
xchg
mov
push
push
xor
sub
cmp
loop
xchg
in
adc
js
push
sbb
aas
sbbb
dec
sbb
loopne
mov
or
popa
nop
jg
push
outsb
cltd
outsl
in
xor
addr16
jnp
aad
mov
pop
jmp
and
bound
jle
iret
xchg
push
pusha
and
int3
les
rorl
and
mov
dec
add
pop
data16
mov
and
aam
push
cli
jg
int3
shll
fcoms
mov
sub
out
dec
jmp
icebp
mov
xchg
jno
xchg
xchg
int3
cs
push
jg
mov
cmp
rcpps
clc
dec
pop
xchg
in
jmp
pop
out
jmp
fs
iret
add
pop
data16
pop
mov
out
test
mov
and
dec
inc
mov
xor
inc
push
sub
ret
ret
adc
cmp
subb
int3
and
mov
stc
negb
push
ja
movsl
cwtl
faddl
aas
sbbb
pushf
mov
mov
xor
push
inc
out
into
push
sub
jb
cmp
les
in
test
lods
int
pushf
cmp
test
pop
mov
popf
mov
inc
mov
xchg
imul
clc
adc
rcr
and
or
or
add
cs
inc
roll
xchg
mov
add
add
outsb
xchg
repnz
pop
pop
nop
push
cli
fadds
fadd
cmpsl
les
sbb
fldt
xchg
outsb
push
jle
movsl
jg
xchg
dec
jnp
pop
cmc
pop
aaa
cmp
addr16
lcall
mov
xor
mov
cmc
or
stos
rorb
idivl
jns
push
subb
or
mov
test
sbb
mov
mov
std
adc
mov
mov
scas
push
dec
data16
lret
cmp
sbb
clc
mov
mov
shlb
or
xlat
jge
adc
flds
aam
xchg
fwait
mov
cmp
enter
pop
sbb
shll
addr16
sbb
cltd
push
push
mov
fimull
pop
mov
scas
adc
insb
jno
cmpsb
jmp
push
and
test
pop
push
xchg
mov
popa
sub
inc
xchg
xorl
popf
mov
xor
cmpsl
jmp
in
ljmp
sbb
xchg
add
xor
clc
or
and
cld
add
iret
adc
jg
inc
lret
jb
rolb
mov
jl
sbb
inc
jecxz
sbb
xor
pop
jp
xchg
jecxz
xchg
cmp
and
inc
push
sub
mov
in
clc
dec
mov
add
cld
fistps
mov
stos
das
adcb
adc
add
pop
xchg
sbb
adc
sarb
add
add
cmpsl
aas
cltd
and
inc
inc
or
xchg
in
stc
mov
scas
jle
inc
test
insb
imul
push
mov
imul
stos
dec
ja
cmpsl
fcmovnbe
das
jo
mov
lea
call
jno
cmp
xor
call
and
ret
pop
js
incl
xchg
push
pop
mov
mov
xor
cld
lcall
mulb
insb
and
jl
inc
cld
push
push
daa
xchg
lods
xchg
test
pop
js
push
test
sub
jge
jg
jle
mov
pop
push
sysenter
mov
stos
clc
or
insb
dec
mov
popf
mov
jne
inc
xchg
subl
or
in
cmp
adc
loope
loope
xchg
lock
shrb
loop
std
pop
sub
mov
pop
mov
jle
cmpsl
lock
sub
fiaddl
in
xchg
xor
sbb
sbb
lods
jp
sub
es
add
dec
sbb
lret
fcmove
jo
addr16
cmp
lea
add
ja
mov
rcr
xor
or
enter
out
dec
int3
pop
cmp
xlat
mov
pop
xor
ja
add
fcmove
in
ljmp
jl
cmp
int
pop
call
adc
fs
pop
dec
push
push
sbb
loopne
addr16
jmp
inc
dec
push
movb
sub
cwtl
or
sub
lahf
stos
add
xlat
jns
ja
cmpsb
xchg
sub
mov
shrb
arpl
fwait
lock
xchg
jno
sti
mov
cli
mov
cltd
ss
test
mov
and
add
out
shlb
lods
jge
add
icebp
cmp
xor
push
fs
push
rcl
btcl
mov
or
andb
inc
stos
ljmp
call
add
outsb
fcoml
jg
idivb
jb
addr16
or
bound
shrl
stc
arpl
imull
add
out
mov
into
lcall
icebp
and
fadds
adcl
push
mov
dec
jbe
fs
lea
cmpsl
sarl
push
int3
popf
cmp
js
das
insb
in
mov
jns
mov
push
aas
sbb
dec
jmp
adc
inc
fcmovnb
in
ja
sbb
cmp
sbb
aas
dec
adcb
lds
sub
stos
inc
aas
cld
dec
pop
sub
xchg
and
in
or
adc
mov
enter
or
jecxz
add
mov
adc
add
in
jae
mov
outsl
adc
test
int3
pop
repz
mov
adc
mov
sbb
test
push
cmp
inc
fnstsw
pop
xor
and
and
xchg
lahf
dec
jno
xor
aam
push
xchg
adc
add
ljmp
dec
sub
xor
jle
sub
cmp
mov
cmp
fisttpl
stc
mov
fs
adc
pushf
xchg
pop
mov
mov
sti
adc
in
in
rclb
adc
icebp
mov
lret
push
adc
in
sbb
pushf
cmpsl
xchg
in
add
in
jle
add
xor
fs
jno
mov
sbb
imul
mov
cmpsl
mov
pop
lcall
mov
stc
dec
cmpb
push
dec
jae
push
jp
jae
and
push
mov
pop
jecxz
aam
out
jb
jne
test
gs
lds
in
sub
pop
aad
je
ficoml
hlt
and
orb
cmpsl
test
xor
cmp
push
adc
cs
inc
sbb
movsl
loop
mov
and
push
or
loopne
cmc
mov
push
cmpb
inc
sub
inc
fwait
cmp
movsl
fucomip
cli
or
lds
cmpsb
push
pusha
dec
and
mov
inc
xor
gs
fstpt
jmp
push
mov
pop
pop
fdivs
mov
dec
into
loopne
mov
xor
int3
push
pusha
stos
cltd
gs
cmpsb
sbbb
sub
dec
enter
push
cmp
jge
and
mov
mov
lods
jne
jbe
cmp
test
lods
jne
pop
lods
push
sub
popf
ljmp
call
adc
jno
aad
push
testb
add
mov
test
sub
dec
lds
aad
sbb
dec
and
cld
dec
dec
iret
pop
xchg
notb
xor
cmp
xor
int
das
shrl
push
adc
sbb
sbb
out
daa
scas
icebp
mov
stc
fs
inc
stos
aam
out
push
in
sub
push
call
das
cmp
push
rcrl
ljmp
mov
fs
dec
pusha
sub
imul
push
mov
inc
push
ret
mov
js
gs
adc
xchg
mov
mov
dec
push
push
adc
cmp
and
mov
cmc
xchg
inc
lea
ljmp
xchg
mov
pushw
xor
adc
cmpsl
pop
je
adc
adc
dec
andl
sarb
shlb
and
cmp
sub
adc
lock
cli
mov
add
mov
movsb
xor
sbb
mov
jno
into
or
sub
sbb
mov
xor
cld
test
idiv
xchg
jle
lock
inc
outsl
lret
icebp
iret
ja
jle
sbb
jbe
sbb
mov
sbb
in
add
and
push
movsl
pop
jno
adc
incl
jne
cmp
out
lret
mov
in
hlt
mov
dec
decl
inc
mov
cwtl
test
std
outsb
push
rclb
cmp
mov
rcrb
jecxz
jg
sahf
fs
mov
push
add
mov
std
xor
sbb
push
cmp
mov
insb
clc
mov
dec
loopne
fcoml
mov
jae
lret
mov
cmp
dec
mov
cmpsl
je
pop
ds
das
push
push
pop
jns
sar
xchg
negl
hlt
stc
leave
js
cmp
and
shl
inc
test
cmp
scas
push
in
push
jg
jmp
inc
mov
scas
push
adc
test
outsb
push
out
rcrl
cmp
sub
pop
jecxz
cmc
rcrb
cmp
pop
adc
mov
or
shll
int3
jo
lds
out
dec
fsts
push
inc
imul
test
rolb
sbbb
jns
and
sahf
sbbl
push
push
faddl
ss
lahf
push
cmp
gs
cmp
icebp
andb
scas
or
push
pop
jge
xchg
jle
mov
addb
sub
adc
adc
cmc
mov
fists
in
jl
sahf
iret
ljmp
sbb
rclb
and
mov
das
orb
cld
mov
mov
stos
add
xor
jmp
mov
ds
pop
push
inc
fcmovnb
inc
sbb
les
mov
out
imul
sub
jo
push
jno
cmp
push
or
clc
xchg
lods
ds
mov
mov
sbb
lea
add
stos
xor
in
add
mov
push
cmpsb
stc
jmp
data16
arpl
out
pop
movsb
lds
movsb
pusha
out
xchg
leave
adc
cmp
addr16
fwait
mov
loop
push
mov
add
pop
cmc
fldcw
xchg
inc
pop
jl
dec
pop
idiv
push
xchg
push
mov
sbb
or
inc
out
daa
rorl
arpl
cmp
pop
outsb
aad
sub
jmp
dec
leave
daa
dec
mov
sbb
enter
sub
add
adc
xchg
mov
repz
das
es
stos
fldcw
push
push
mov
jo
lret
dec
jnp
cmp
and
lods
dec
xor
ficoml
mov
mov
push
movsb
xchg
jle
lret
xor
test
xor
and
fcomip
xchg
es
sbb
push
or
push
or
adc
push
sti
ljmp
outsb
ret
push
loope
int3
add
cmpsl
dec
push
sub
orb
or
loope
les
popa
sbb
lds
icebp
sub
jmp
adc
insb
cmp
imul
lahf
jl
adc
insb
xchg
les
cmpl
adc
mov
xor
cwtl
lods
mov
push
adc
cmc
lahf
je
int3
and
adc
mov
outsl
mov
out
imul
push
lods
pop
lea
jae
test
lahf
popl
jbe
in
loope
inc
movsb
ljmp
pop
pop
scas
sub
fcoml
ds
mov
fcoms
cs
mov
inc
jbe
or
cli
scas
fsts
mov
jg
jne
icebp
sar
call
ffreep
inc
sbb
dec
jns
mov
popf
movsl
push
orb
pop
xor
pop
add
add
sbb
sub
addr16
icebp
test
push
mov
dec
sub
add
and
push
out
pop
mov
push
pop
or
repnz
cmpsb
in
pop
in
sub
mov
pop
ret
arpl
jle
xchg
mov
ficompl
nop
fsubl
cltd
ds
in
pop
scas
sub
adc
dec
cmp
ljmp
jo
jmp
roll
ljmp
xor
sbb
das
cltd
push
mov
jge
push
loop
outsb
xor
hlt
xchg
add
data16
push
adc
loop
jnp
pop
repnz
je
xor
push
sarb
fpatan
jo
pusha
pop
hlt
xor
popa
add
xor
dec
cmp
adc
mov
jo
jne
jp
push
push
in
scas
cmp
bound
xchg
mov
xchg
call
sahf
sub
dec
loope
xchg
mov
cwtl
loope
insl
ficomps
jmp
fldt
lea
adc
pop
jne
xor
jp
movsl
inc
mov
movsl
js
add
ja
pop
push
lret
xchg
fsub
cmpsl
push
xchg
sbb
in
repz
mov
pop
or
movsl
xor
or
ss
cmp
push
xor
jnp
pop
stos
jp
loopne
xor
sub
call
fcmovnb
adc
and
mov
out
cmpsl
dec
pusha
rorl
sbb
jbe
adc
imul
arpl
int
cli
pop
loopne
shll
arpl
jecxz
dec
data16
cli
mov
xchg
adc
pop
pop
push
out
mov
mov
lods
or
mov
cld
stc
pushf
int
fsts
or
mov
inc
or
lcall
pusha
dec
lea
jns,pt
xor
sbbl
dec
out
shll
sbb
aas
aad
int
pushf
stos
in
mov
into
fs
mov
lods
mov
lret
push
mov
cmc
jp
pop
jno
imull
arpl
enter
test
and
test
decb
xor
imul
cmpsl
dec
add
dec
outsb
fldcw
dec
lods
pop
adc
sub
call
pop
pop
cmp
push
in
adc
sub
dec
scas
cmp
sub
or
cs
out
xor
push
shll
cmpsl
sub
frstor
fldl
sti
mov
dec
into
insl
add
xor
mov
test
sbb
xor
add
cmp
cwtl
adc
mov
xchg
mov
gs
outsl
ret
test
xchg
adc
cmpb
fwait
gs
adc
pop
cld
jge
into
stc
popa
ficoms
sbb
inc
dec
xor
test
fwait
push
jmp
sarb
mov
call
cltd
jg
ffreep
rorl
push
inc
ffree
dec
mov
aaa
add
mulb
cwtl
leave
insb
adc
inc
sbb
add
scas
lea
add
lods
aas
adc
pop
addr16
cmp
add
mov
cwtl
iret
repz
xlat
aad
int3
lcall
cmp
lods
mov
int
ficompl
aaa
repz
pop
cmpsl
outsb
std
pushf
jmp
jp
inc
or
test
cwtl
sub
ret
test
lcall
data16
dec
push
jo
jmp
push
mov
xchg
pop
adc
fidivrs
jle
pop
pop
cld
adc
pop
es
je
cmp
out
fcompl
inc
bound
mov
out
jle
push
mov
lret
dec
in
push
jl
push
pop
mov
adc
nop
push
mov
into
jg
je
shl
mov
inc
mov
mov
cmpsb
gs
mov
mov
sub
fstpl
dec
mov
shrb
shrl
lods
imull
and
and
push
push
mov
loope
mov
sbb
imul
pusha
popf
fisubs
in
xor
sbb
or
xor
jo
jmp
and
xor
dec
int
adc
fwait
les
cmp
lods
sub
cli
cmp
inc
cmc
mov
lahf
hlt
adc
call
xchg
mov
jmp
es
add
clc
push
cmp
sti
jg
cmpb
and
mov
xchg
or
inc
mov
pop
sub
leave
push
leave
ret
adc
fwait
adc
jnp
and
mov
addl
or
xor
xor
les
dec
xchg
sub
lret
or
add
testb
dec
inc
push
jmp
fildll
pop
pop
testl
adc
shlb
mov
test
lcall
out
mov
jns
inc
sbbl
leave
jmp
sub
inc
aad
filds
fstpt
loop
sbb
xchg
mov
js
mov
dec
mov
mov
or
push
pop
inc
fmuls
push
jnp
movsl
sub
adc
icebp
sahf
jl,pt
icebp
movsb
and
xchg
sbb
jne
sbb
aas
pop
jae
gs
push
fldl
mov
test
mov
xchg
cs
xor
mov
andl
addr16
dec
mov
pushf
fcmovne
mov
rclb
pop
mov
repz
pushf
pop
add
xchg
jae
mov
loop
xchg
out
lahf
scas
fildl
mov
in
pusha
jnp
and
mov
in
push
into
js
sub
pop
cmp
int
iret
xor
out
es
jp
cld
decl
ficoml
inc
outsl
mov
addr16
pop
add
add
divps
xchg
outsl
mov
into
scas
ror
rcrl
pop
inc
bound
sti
inc
xchg
jbe
lods
xchg
add
fildl
shlb
jecxz
ret
push
jb
mov
subb
jno
cmp
cltd
in
lods
push
jne
xchg
and
cmp
mov
stos
aaa
sub
sahf
pop
cmp
jbe
or
sub
popf
push
jns
push
loope
icebp
jae
mov
and
fcoms
out
gs
or
jbe
inc
pop
scas
dec
push
das
mov
ljmp
loop
test
lea
ja
mov
outsl
cltd
gs
and
daa
sbb
xchg
pop
xor
cmp
mov
ja
adc
push
test
fs
mov
mov
test
iret
repz
push
dec
sub
xor
pop
jl
movsb
leave
out
xor
inc
add
mov
xor
xchg
test
pop
cwtl
add
popf
mov
lcall
sbb
daa
sub
push
push
mov
aam
cmpsb
stos
dec
mov
inc
and
jle
sbb
adc
adc
mov
push
adc
lods
gs
out
jns
popf
cmp
orb
sbb
sbb
xor
or
insl
enter
inc
mov
jl
cwtl
push
jg
psubq
xor
jp
jl
cmp
add
push
sub
test
pop
fsubrl
loope
xchg
loope
mov
pop
sahf
scas
nop
jp
and
pop
mov
pop
sub
dec
frstor
dec
jp
lds
inc
xor
out
jbe
xchg
mov
mov
jnp
mov
mov
in
dec
jg
lea
leave
int3
cs
pop
lods
xchg
pop
pusha
das
lret
fucomp
lods
fadds
inc
cwtl
sub
sub
xchg
xchg
pop
inc
pop
push
fstl
mov
leave
jecxz
ja
and
xchg
jg
les
cmp
rcr
pop
dec
sbbb
mov
jl
fadd
mov
daa
addb
ja
scas
and
daa
xchg
pop
out
in
sub
ret
cmp
and
sub
inc
std
ja
int
adc
shll
sbb
sbbl
or
jb
jecxz
sbb
cmp
inc
pop
inc
imul
cmpsb
repz
dec
cwtl
sbb
loop
lret
xor
xor
xchg
out
icebp
push
push
mov
std
and
int3
adc
sti
shl
je
jno
jmp
add
sti
mov
ljmp
sub
jne
lods
std
and
out
movsb
sbb
or
mov
sub
loop
sti
push
dec
sub
or
push
xor
or
mov
js
nop
dec
xchg
xor
or
ja
outsb
stos
testl
cmp
out
sbb
and
sahf
jo
lret
shlb
xor
ss
mov
sarb
icebp
cmp
inc
inc
mov
mov
and
mov
aaa
cs
in
fs
scas
stos
or
dec
mov
loopne
notb
je
cs
mov
xchg
mov
and
sahf
lret
mov
and
popa
mov
jo
das
mov
mov
sbb
cmp
mov
jge
in
or
dec
ljmp
movsl
out
fdiv
mov
pop
push
lock
ljmp
and
out
and
lock
out
loope
dec
lret
pop
imull
sub
stos
sbb
lcall
sti
aam
test
xor
ds
mov
adc
stos
cmpsb
inc
movsl
ljmp
mov
jp
scas
mov
imull
jns
mull
push
mov
mov
popf
inc
outsl
or
xor
imul
xchg
outsl
stos
arpl
ret
adcb
data16
ljmp
popf
xchg
mov
adc
push
frstor
mov
shll
rorl
leave
sub
gs
or
shrb
pop
jmp
and
pop
adc
das
xchg
lods
inc
sub
jb
in
mov
push
rcrb
popa
push
test
xchg
sub
jl
jecxz
sub
pop
fs
add
out
inc
out
xchg
divl
and
push
ret
je
fs
mov
lea
push
jl
push
jne
nop
xor
sub
dec
lods
into
mov
push
dec
ja
dec
mov
pop
arpl
mov
lgs
jno
pushf
jge
shll
pop
pop
sbb
fwait
and
inc
add
cmp
pop
out
stc
rcrl
gs
leave
insb
popf
xor
leave
and
testb
xor
inc
cwtl
fsubrs
dec
or
rcl
stos
push
push
cmpsb
rolb
push
popf
test
cmp
dec
mov
lcall
inc
leave
pusha
push
loopne
pop
dec
and
add
sub
leave
pop
cwtl
cmc
or
aad
je
mov
stos
enter
xchg
mov
dec
idivb
pop
ficomps
push
scas
mov
movsb
xor
sub
inc
push
add
popf
fsubs
mov
pop
sbb
out
cwtl
orb
mov
lods
jne
into
jmp
mov
scas
aas
and
and
jno
mov
leave
inc
sti
jle
stc
push
and
mov
sub
sub
inc
push
ret
lods
enter
xchg
mov
div
ret
mov
dec
sbb
mov
enter
insl
aas
lods
cmp
inc
jl
test
pop
sub
jno
fwait
inc
inc
mov
jnp
lahf
pop
idivl
sub
rcrb
mov
lret
test
xor
push
cltd
jle
jg
mov
mov
les
rorl
adc
stos
sbb
lods
cld
aaa
into
in
sbb
inc
mov
pop
ficompl
sbb
cltd
cli
pushf
rcll
lock
icebp
js
je
outsb
stos
mov
mov
out
sbb
adc
add
fldcw
xchg
outsb
ret
cmc
rcrb
sbb
inc
mov
mov
stc
pop
add
xchg
and
icebp
cwtl
push
xchg
daa
movsb
loopne
mov
pop
xor
cmp
insb
in
dec
incb
mov
lds
pushf
popa
sti
adc
inc
dec
dec
jno
mov
jb
mov
xchg
mov
movsl
mov
aas
push
shrl
lock
in
xor
test
test
xor
jg
push
in
je
sub
push
jns
fldcw
rcrl
push
cltd
lds
push
outsb
xchg
sub
leave
out
push
pushf
xor
sub
or
les
ja
ja
mov
ret
sbb
lods
push
dec
push
mov
rolb
sub
mov
dec
daa
xor
inc
in
flds
pushf
daa
rorb
movsb
stos
cmc
sahf
pop
int3
fidivrs
cmp
pop
pop
enter
ja
fwait
cmpsb
adc
test
xor
pop
insb
cs
mov
mov
ljmp
pop
lods
pop
in
and
outsb
shll
aaa
mov
and
rol
jb
xchg
cli
iret
cs
xchg
stc
push
xor
and
dec
fdivrs
cmp
push
pop
stos
jo
fwait
dec
cmp
ficoms
cs
js
fsubl
comiss
je
aas
mov
xchg
andb
push
push
addr16
push
sbb
xor
cmpl
mov
aam
lea
pop
push
and
or
sbb
lods
rcl
xchg
or
int
data16
imul
dec
dec
gs
sahf
mov
xchg
test
test
pop
iret
mov
ds
pop
shl
add
mov
std
jle
test
lds
inc
das
test
jb
repz
adc
dec
lods
cmp
jg
in
leave
mov
lods
outsb
push
pop
cmpl
pop
jg
adc
das
add
push
roll
jl
movsl
lret
cmpb
in
and
loop
mov
outsb
test
cmp
xor
cmp
push
mov
in
insl
fadd
adc
xlat
push
mov
ljmp
adc
add
mov
pop
aaa
das
cmp
and
mov
mov
mov
out
push
xor
pop
jno
ror
mov
pop
mov
cmp
mov
cmp
adc
into
dec
aas
daa
mov
inc
mov
nop
xor
popa
cmpsb
xchg
fdivrl
mov
lcall
mov
and
lds
sbb
andb
lret
andl
jmp
insl
jg
das
sbb
cmp
xchg
push
lret
lock
xchg
inc
fsubrs
insb
and
cmp
stos
xchg
sahf
sbb
pop
cs
lea
popf
rorl
jne
jne
adc
fdivr
lahf
jmp
cli
push
cmp
imul
in
xor
jno
std
inc
and
inc
push
xor
inc
stc
pushf
fwait
add
out
xchg
popf
test
jnp
mov
and
lea
out
out
push
iret
push
dec
lahf
push
int
ss
mov
mov
mov
cmpsb
setno
sti
pop
xor
push
xor
dec
repnz
push
dec
pop
fildl
mov
ficoml
mov
inc
shll
shll
test
sub
jnp
xchg
cld
movsl
lcall
ss
mov
and
sbb
xlat
ret
sbb
in
imul
into
fsubr
jo
stos
pop
dec
mov
dec
jmp
xchg
sbb
scas
in
add
std
inc
or
push
fs
out
sub
cmp
sbb
fsubl
out
cmp
pop
dec
cwtl
mov
fcmovb
pop
and
out
xorl
jp
sub
lret
pop
push
dec
ja
into
cld
fwait
xchg
pop
jle
mov
mov
push
xor
rorl
push
adc
pop
scas
pop
movsl
sbb
imul
jae
lods
or
cmpsl
or
dec
xchg
push
pop
jnp
push
pusha
cld
inc
adcl
ja
pop
sti
adc
fcmovne
jo
jp
dec
mov
les
xchg
inc
push
sbb
cmp
cld
push
pushf
jp
imul
dec
push
imul
pop
xor
icebp
lret
push
push
mov
out
xchg
sbb
subl
lret
js
jp
mov
mov
push
fsubrs
je
add
out
ficompl
jno
fimuls
or
into
sbb
insb
mov
xchg
inc
frstor
jne
dec
adc
idiv
xchg
cmp
mov
mov
mov
push
push
dec
das
xchg
dec
icebp
xchg
push
sahf
or
pop
add
xchg
xchg
negl
add
mov
daa
sub
sub
loop
movsb
es
shll
pop
popf
push
les
pop
inc
inc
mov
aaa
push
sbb
std
in
out
lods
out
mov
dec
ja
push
jns
lahf
push
repz
dec
push
faddl
or
push
push
sarl
mov
popa
out
or
lret
mov
div
mov
popf
xchg
cmpsb
dec
xchg
sub
sbbl
mov
dec
int3
in
repz
push
neg
mov
test
xor
mov
icebp
dec
inc
dec
push
xor
add
jno
jg
test
push
adc
push
fcomps
shll
out
jno
lock
call
pop
addr16
cli
stc
add
imul
inc
shlb
into
ja
dec
stos
pop
push
mov
and
cmc
btr
lcall
pop
add
dec
and
add
inc
ret
aaa
mov
cmc
dec
push
pop
daa
pop
jnp
scas
mov
sbb
test
in
shll
test
cmp
scas
mov
lds
mov
cltd
sbb
sbb
les
inc
shlb
cmovb
mov
mov
idivl
inc
lods
cmp
jge
cmp
push
xor
mov
or
ds
pop
rolb
or
enter
movsl
ja
cmp
aas
or
dec
add
push
push
fildl
push
aad
cltd
sub
xchg
sub
pop
xlat
stos
test
push
adc
hlt
lret
mov
cltd
mov
push
xor
nop
ss
pop
mov
data16
dec
cmp
push
fistpll
push
daa
lock
add
fwait
and
jmp
xorl
inc
inc
stos
dec
lods
dec
lret
jl
xchg
mov
imulb
xor
call
sub
lds
adc
lods
add
mov
scas
test
or
mov
push
pop
fwait
inc
ss
mov
out
dec
sahf
incb
notl
movsb
jg
data16
lea
repz
jae
sub
xchg
cld
and
jne
jle
jg
fdiv
cmp
fbld
outsl
in
xchg
stos
jo
mov
push
mov
fstpl
sahf
enter
mov
xchg
mov
xor
nop
insb
test
sets
int
pop
mov
push
dec
fadd
leave
xor
xchg
xlat
icebp
sbb
shll
add
mov
out
sbb
test
add
jp
push
lea
inc
mov
cmp
clc
loope
in
jo
push
in
imul
push
icebp
jp
sub
pusha
sbb
pop
mov
loopne
fucomp
adc
nop
xchg
aad
jle
cmc
sahf
push
and
mov
data16
sub
dec
xor
test
fiaddl
and
mov
mov
lret
scas
push
stos
sub
ficomps
jge
rorb
jmp
inc
fnstenv
addr16
inc
addr16
push
mov
mov
jle
shll
lret
push
mov
pop
pop
inc
mov
push
jae
out
mov
rsqrtps
mov
push
aam
iret
arpl
inc
pop
sbb
jne
mov
push
and
int
add
lods
les
mov
repnz
test
int
and
mov
inc
hlt
fprem1
clc
jmp
pushf
test
or
sbb
xor
ljmp
push
dec
cltd
incl
stos
jle
ljmp
fistl
push
mov
aam
movsb
add
movsb
in
nop
sub
dec
fnstenv
dec
mov
les
xor
rcl
xchg
mov
add
sub
into
add
jno
pop
sti
jp
pop
add
pusha
cmp
ret
xor
inc
adcb
scas
mov
rcr
jmp
mov
lods
mov
les
mov
cmpsl
push
les
mov
adc
fildl
cmp
call
jns
shll
movb
mov
push
in
sub
lcall
mov
dec
push
test
fiadds
inc
dec
xchg
sahf
cmp
fidivs
cli
and
cmp
popf
shl
ret
dec
cwtl
cmp
les
dec
xchg
out
push
jl
ljmp
jge
ret
lret
xor
addr16
fistpll
lcall
lahf
pop
push
pop
lods
jns
fdivrl
mov
mov
loopne
inc
adc
sub
and
aas
out
int
mov
cmp
mov
and
sbb
or
stc
jns
jl
or
hlt
int3
push
int
call
rcll
and
mov
insb
mov
pop
dec
rolb
mov
cwtl
pop
lods
mov
jbe
dec
sbb
push
imul
repnz
xlat
mov
add
dec
push
pop
add
add
nop
xor
ljmp
sbb
sti
lret
enter
adc
xchg
pop
sti
mov
mov
dec
loop
or
adc
mov
pop
sbb
pop
paddq
aad
sub
popf
sti
mov
out
test
sub
push
jno
scas
xor
dec
mov
add
movsb
arpl
stos
insl
loopne
adc
lods
divb
or
ret
xor
mov
testl
mov
mov
rolb
popf
insb
adcl
mov
lock
popf
mulb
and
xchg
push
inc
pop
scas
bswap
ss
cmc
xchg
and
dec
inc
sbb
push
cwtl
jmp
pop
sub
mov
cltd
orb
in
out
out
rol
xor
pop
mov
cmp
mov
xchg
sub
out
or
in
imul
xchg
mov
xchg
sub
pop
aam
popf
enter
mov
aaa
cmp
cwtl
cmp
imul
and
pop
push
xchg
dec
popa
insb
popa
mov
sbbl
and
aam
cmpsl
mov
jmp
enter
or
cmpsl
pop
push
dec
lds
sub
test
stos
cmp
test
sub
add
lret
jg
or
cli
aam
mov
mov
pop
test
hlt
and
mov
cmp
xor
repz
subl
ja
cli
mov
cld
mov
les
faddp
sub
sbb
or
xchg
jns
cmp
mov
xchg
xchg
loope
push
mov
mov
add
sbb
jge
sub
int3
xor
aas
aad
xchg
push
mov
sbb
test
jle
call
xor
daa
mov
test
jno
and
aam
fwait
adc
leave
or
pop
inc
scas
addl
xchg
pop
push
das
out
dec
inc
jmp
inc
jl
dec
enter
in
mov
outsl
dec
push
ret
add
sub
mov
jl
and
or
push
add
jno
push
fwait
cmp
fildl
mov
test
fldt
push
cwtl
push
mov
icebp
fsub
mov
cmp
mov
mov
push
inc
pusha
xor
cmp
movl
push
xchg
cli
pop
mov
and
lea
js
imul
xor
shrl
iret
add
loope
mov
es
adc
add
mov
loopne
mov
push
dec
push
mov
inc
inc
cmp
cmp
inc
and
fldt
enter
arpl
arpl
jae
xchg
enter
cmp
sbb
mov
icebp
scas
arpl
sbb
add
sarb
xor
sbbl
add
cmp
lahf
insl
popa
jae
test
sbb
loop
aam
in
repz
mov
pop
jo
fsub
xchg
inc
and
mov
jg
cmpsl
adcb
lds
popf
neg
mov
jnp
shlb
mov
shlb
sub
cmp
popf
test
add
sbb
je
addr16
aam
add
cmp
sbb
pop
pop
adc
or
push
or
adc
dec
negb
mov
xor
aad
ret
stos
int3
and
cmp
mov
sbb
cli
rclb
bound
cmp
enter
and
sub
inc
inc
pop
add
push
int
popa
jo
stc
pop
sub
sub
inc
rcll
hlt
dec
clc
inc
out
mov
icebp
cmpsb
pop
pop
or
jecxz
push
imul
dec
mov
cld
fstps
repz
push
add
loope
jb
ds
xchg
xchg
arpl
dec
int
in
mov
and
out
inc
sub
lods
ret
inc
jge
dec
insl
mov
in
dec
inc
stos
inc
addr16
mov
pop
or
cld
adc
xchg
sbb
mov
xchg
decl
aam
cmpsb
mov
or
mov
lret
mov
setae
in
mov
int
bound
inc
and
and
cmpsl
lods
int3
lret
mov
xor
inc
shll
add
mov
imul
sub
leave
pop
pop
fsub
jae
in
out
cmpsb
fdivr
repz
sar
sti
cmp
dec
dec
aas
faddl
iret
int3
mov
cltd
jg
cs
jo
push
adc
repnz
fwait
cmc
aas
adcl
dec
lahf
repz
jg
add
xchg
lret
repz
push
jo
sub
mov
out
mov
mov
mov
mov
lret
push
rcrl
cmp
subb
mov
dec
out
popf
iret
mov
in
mov
jne
mov
push
call
arpl
xchg
mov
scas
mov
inc
jnp
mov
mov
shl
into
mov
pop
jbe
ret
negb
pop
call
xchg
add
imul
cltd
dec
mov
scas
ret
pop
xor
inc
jp
repz
enter
stos
fldcw
add
cmp
ret
sub
push
addl
ja
dec
sub
subl
mov
adc
jo
xor
fxch
cmp
je
xor
imul
cmp
mov
outsl
jle
xorb
ss
fsubp
fildl
mov
lahf
fdivrs
push
pop
popf
orl
ds
mov
jecxz
inc
stc
mov
inc
out
or
scas
into
arpl
mov
mov
daa
xor
jae
pop
or
add
call
mov
test
insl
pushf
sub
in
test
inc
xorl
xchg
repnz
mov
xchg
add
inc
outsb
pop
ror
inc
jbe
shrl
mov
push
addr16
test
jo
sbb
pop
add
stos
sahf
push
xor
pop
sbbl
pop
push
hlt
imull
and
sarb
sbb
and
in
xor
cmp
leave
jg
pop
icebp
or
pushf
je
iret
test
jne
int3
inc
push
cmp
mov
pop
movsb
jb
in
pop
sbb
cmpsl
or
or
push
pop
je
in
sbb
popa
adc
out
icebp
iret
repnz
xchg
lea
insl
les
mov
enter
jge
imul
test
push
jbe
jns
sub
ds
icebp
jl
movsl
hlt
jno
aad
pop
push
sub
mov
clc
loopne
cltd
xchg
xchg
cs
xchg
dec
dec
or
mov
lea
dec
dec
pop
cmp
out
jne
and
mov
popf
mov
add
sub
mov
dec
pop
sub
dec
mov
fistps
mov
mov
and
ret
push
sahf
inc
xor
bound
or
pop
mov
addr16
push
or
popf
cltd
mov
call
fistps
test
and
mov
mov
adc
pop
shll
xor
mov
out
insb
cmp
std
mov
cmp
fisttpl
test
pop
insb
inc
push
aaa
push
cmp
sbb
fidivrs
negb
pop
pop
sub
pop
ja
inc
fsubs
dec
lahf
icebp
negb
mov
inc
std
fistpll
fildl
dec
xchg
push
out
test
dec
fsubrl
hlt
mov
xchg
sub
ja
xor
in
shl
cwtl
xchg
cmp
mov
jno
ret
xor
out
es
xor
jno
jns
push
sub
dec
rcr
cmp
inc
jno
pop
sbb
enter
es
clc
lds
push
push
inc
pusha
je
arpl
subb
xor
js
dec
push
popf
mov
jg
pop
int3
rol
fbld
xor
pop
scas
and
push
lods
loop
jno
xor
adc
mov
sahf
inc
lock
test
call
fstpl
or
insb
or
daa
xlat
icebp
or
das
ds
in
sub
inc
aaa
cmpsl
in
xchg
andl
jg
pop
xchg
mov
xchg
jecxz
pop
lea
dec
loope
fidivl
xor
arpl
iret
jge
mov
xchg
subb
jbe
subl
mov
les
test
dec
int3
push
push
mov
push
test
lods
pop
or
adcl
mov
and
mov
push
or
jp,pt
stos
cmp
mov
cmpsl
ficomps
es
xorl
inc
adc
add
xchg
xlat
inc
clc
sbb
jecxz
aad
dec
add
scas
imul
fildll
clc
gs
dec
lock
xchg
xor
aaa
and
lods
push
roll
movb
mov
test
movsl
pop
add
dec
adc
lock
jae
mov
lock
ss
inc
out
xchg
sub
test
test
jge
xor
cmpsl
push
add
dec
adc
jne
outsl
jae
popa
test
ljmp
adc
leave
inc
iret
add
sbb
mov
and
test
jno
cmc
gs
sub
fwait
mov
dec
lret
pop
jno
filds
lcall
ljmp
cs
xor
cs
mov
push
cmp
mov
pop
add
push
cmpb
popa
jae
and
fcoml
fs
xor
andl
xchg
dec
arpl
daa
sub
jg
jecxz
dec
add
outsb
push
loop
jns
in
nop
insl
data16
call
les
mov
scas
xor
mov
aaa
and
push
ss
lods
iret
test
cmp
lret
mov
push
mov
jnp
int3
std
daa
mov
test
mov
fmull
and
pop
loope
jne
sub
xchg
mov
mov
fisttpl
jg
sbb
push
inc
push
push
and
outsl
adc
out
out
xchg
xor
imul
sarb
push
arpl
add
test
pushf
mov
inc
rcrb
push
fstl
mov
cld
push
cmpsb
adc
mov
pop
mov
push
xchg
movsl
ret
stc
xor
lcall
pop
mov
imulb
repz
jb
pop
insl
ret
jecxz
aad
jp
mov
call
xchg
enter
mov
lcall
out
adc
out
std
mov
mov
xchg
sub
sbb
cwtl
cmp
and
mov
inc
sbb
jge
push
pop
mov
push
cmp
addl
fstps
dec
xchg
jle
pop
xchg
xchg
sub
mov
rcrl
xchg
xor
mov
push
cmp
xor
scas
push
jmp
mov
lret
mov
cmpsl
das
cmp
cwtl
dec
mov
sarb
call
jecxz
cmp
push
negl
lds
nop
lahf
scas
or
xor
imul
push
mov
ficomps
call
cwtl
sub
daa
and
and
or
xor
cmp
pop
adc
out
push
aad
cmc
sbb
enter
adc
add
popf
mov
loope
leave
xor
and
inc
out
adc
jge
sbb
lcall
ss
pop
rcl
scas
jmp
fcomip
and
mov
jae
jno
adc
mov
xor
ss
add
push
lcall
push
js
leave
and
lds
sarb
popa
icebp
mov
adc
adc
dec
sub
cmp
ja
adc
andb
and
pop
imul
pop
adc
lret
sbb
xchg
pop
mov
mov
inc
push
jp
mov
jecxz
sbb
push
push
mov
add
sbb
jge
xor
fnstenv
lcall
sbb
pushf
int
data16
jbe
cmp
out
std
inc
xlat
jg
nop
enter
out
jge
rcll
stc
jg
sbb
je
popf
stc
xor
js
test
add
ret
dec
andl
in
inc
jl
shlb
iret
cli
lcall
adc
ds
fstl
xchg
xchg
inc
insl
jle
stc
int
sub
xorb
clc
jl
test
sub
mov
pop
add
js
mov
mov
xchg
lahf
or
pushf
dec
pushf
xlat
mov
xchg
pop
xchg
push
sbb
push
pop
rolb
sbb
imul
adc
mov
adc
cmp
pop
pop
fsubs
rorb
cmpsb
into
js
addr16
int3
pusha
jb
fsts
filds
repnz
nop
adc
je
adc
jbe
xchg
mov
bound
cwtl
pop
mov
mov
mov
dec
test
mov
inc
jl
int3
adc
adc
cmp
in
aaa
bound
adc
pop
add
lds
push
cmp
push
mov
adc
clc
sti
jae
outsl
stos
xorps
out
add
lods
sub
xchg
mov
clc
mov
ret
mov
mov
insb
jmp
xor
sahf
xchg
loopne
daa
dec
dec
add
jecxz
lea
repz
mov
jle
outsl
out
clc
notl
loope
sbb
leave
adc
pushf
and
pop
cs
mov
xor
fistpl
xor
loop
pop
adc
in
sbbl
pusha
jp
dec
xchg
stos
pushf
jmp
in
mov
jb
mov
idivl
shlb
fnsave
sub
fistpl
sar
mov
xchg
out
cs
or
faddl
push
cmpsl
das
js
mov
xchg
inc
fsubrs
mov
int
je
xor
icebp
aam
xor
push
scas
jns
ficoml
dec
mov
xchg
mov
mov
testb
xlat
js
nop
lods
das
aad
out
shr
aam
adc
mov
dec
mov
shlb
inc
add
ja
push
arpl
fmull
mov
lret
out
negb
dec
out
xor
adc
xor
adc
popl
out
push
sub
adc
icebp
out
dec
rclb
dec
outsl
push
icebp
or
ds
mov
aaa
popa
push
xchg
adc
popf
out
and
add
imul
adc
out
leave
rcrb
xor
push
outsb
lahf
inc
add
add
pop
mov
mov
cmpsb
out
mov
mov
pusha
jmp
enter
mov
pusha
add
std
das
inc
popa
sub
daa
jno
xor
test
jmp
fwait
rolb
mov
std
mov
add
dec
adcb
jno
inc
mov
cwtl
call
call
mov
mov
or
mov
xor
test
mov
mov
test
dec
dec
cmp
ret
adc
repnz
imul
sbb
mov
cmp
dec
bound
aad
imul
mov
leave
sub
inc
out
lahf
inc
stos
cwtl
jle
mov
mov
cmc
pusha
push
pop
xchg
dec
test
test
lret
pusha
lods
jmp
push
or
lahf
lock
iret
jmp
sbbb
push
inc
push
into
jne
ss
pop
sbb
in
jbe
in
and
mov
xchg
arpl
fsub
popl
test
jbe
into
jns
pop
arpl
or
es
cwtl
fldl
inc
push
jp
lret
sub
and
mov
dec
gs
inc
fiadds
and
cmpl
fstpl
adc
mov
dec
cmc
imul
sbb
push
cmp
adc
daa
adc
out
sbb
fisubrl
jmp
mov
or
in
push
js
xchg
xchg
cmp
lods
faddl
pop
addr16
fisubrs
jb
cmp
shlb
and
das
fisttpll
add
fidivl
cld
sahf
and
add
and
sub
cli
fnsave
mov
cmpsb
sub
out
push
loop
imul
scas
fcmove
dec
sub
fldenv
lock
mov
out
ret
xorb
fistps
icebp
dec
cltd
inc
flds
orb
sbb
cmp
pop
mov
sbb
sti
inc
push
popf
mov
sbb
xor
mov
insl
test
mov
lahf
das
insb
gs
jmp
push
push
sbb
lock
aam
jmp
out
sub
lea
lods
in
push
sbb
out
sub
pop
sub
std
pop
in
sub
test
shlb
mov
and
pop
or
xchg
xchg
jg
outsb
pop
scas
mov
jmp
std
xchg
or
inc
mov
enter
jne
xchg
fs
cmc
rorl
inc
and
mov
xchg
fnstsw
out
mov
xor
or
cwtl
xor
lret
sbb
push
mov
enter
add
xor
stos
push
dec
add
sub
cmp
lcall
dec
sub
mov
xchg
cmp
pop
ret
imull
cmc
push
mov
jmp
dec
subb
xor
jbe
sbb
xor
mov
push
call
out
mov
xchg
dec
sub
xchg
mov
mov
sti
je
mov
add
inc
enter
lds
mov
or
push
ljmp
adc
and
mov
call
xchg
adc
fstps
add
lret
xchg
test
push
push
mov
pop
dec
repz
pop
nop
sbb
dec
in
push
ret
mov
push
jecxz
mov
sti
addr16
lret
inc
mov
adc
out
mov
int
dec
imul
test
mov
cmp
loopne
sbb
setns
pop
mov
test
and
out
mov
movsl
icebp
and
aam
mov
mov
inc
mov
jg
inc
inc
mov
xchg
shl
test
insb
nop
jae
insl
jg
dec
lcall
cmp
jecxz
and
inc
movsl
pushl
jp
push
icebp
test
pop
lahf
jnp
inc
adc
ror
rcll
jbe
repnz
cmp
fdivl
or
mov
dec
icebp
aaa
cmp
orb
ficoms
inc
mov
pop
enter
outsl
mov
add
rcrb
orl
pushf
mov
test
movsb
mov
cmp
repz
cs
mov
out
negl
outsl
jp
and
aad
sti
pop
xor
ds
outsb
mov
shll
pop
loopne
cmp
pop
jnp
jge
daa
movsb
push
adc
data16
pusha
shrb
inc
mov
inc
rcr
nop
push
mov
sub
push
inc
jne
sub
fs
mov
popf
or
push
adc
add
daa
lret
jb
jb
lea
cmp
mov
repnz
aam
fwait
xor
mov
rolb
lods
sbb
mov
mov
imul
lahf
jb
xor
xchg
mov
xchg
or
jns
and
add
sti
inc
pusha
cmpsl
cmpsl
cmpsb
stc
xor
les
fsubrs
repnz
jmp
push
adc
mov
das
out
and
aam
sub
mull
xor
stos
jae
ljmp
lret
dec
adc
or
adcb
lods
and
xor
js
pop
sbb
test
sbb
add
inc
aas
adc
xchg
xor
cltd
mov
xor
xor
nop
inc
jb
cmp
push
test
aam
or
fsubp
cld
clc
insl
mov
jle
pusha
push
add
lahf
xlat
adc
ss
test
pop
and
cmp
ds
cmpsb
daa
pop
xor
loop
mov
pusha
ljmp
or
and
cmc
push
push
pop
add
jecxz
inc
and
xor
jmp
test
das
inc
push
lret
cwtl
add
sub
stc
rcl
popf
lret
cmp
cltd
popa
fisubl
jne
loop
dec
push
es
jb
aad
add
rorl
shr
fwait
mov
xor
test
lret
rcrl
js
cmpsl
addr16
mov
sub
push
sbb
xor
dec
pop
std
mov
pop
add
add
jl
xor
dec
mov
in
cwtl
dec
fisubl
out
outsl
out
outsl
aaa
xlat
xchg
imull
mov
cmp
loop
sbbl
test
mov
daa
xorl
sbb
gs
cmp
jnp
pop
adc
jle
into
add
shlb
cmpsb
addr16
test
add
xor
mov
sbb
or
rolb
lods
or
mov
inc
xor
add
or
in
pop
add
xor
mov
sbb
adc
dec
loop
xchg
add
cltd
inc
dec
mov
mov
add
mov
ja
nop
jle
movb
add
test
pop
lret
stos
cvtdq2ps
pushf
loop
mov
sub
mov
add
adc
xchg
icebp
sarl
rclb
test
add
add
fldl
cmp
mov
test
out
cmc
lcall
pusha
es
incl
cld
pop
gs
or
add
xor
inc
nop
mulb
and
adc
stos
mov
adc
dec
jge
mov
adc
or
or
lock
mov
ljmp
mov
push
xchg
sub
cs
mov
sbb
pop
push
outsl
xchg
lds
mov
mov
add
fdivrs
rclb
in
jmp
jl
loope
cmc
mov
dec
pusha
ja
aas
adc
sbb
movsl
ljmp
push
mov
adcl
adc
xchg
mov
imull
mov
pop
in
rcrb
movsl
mov
pop
icebp
stos
push
sbbl
and
adc
pop
cwtl
fmul
ds
fldcw
js
mov
repnz
dec
jge
jle
pop
xlat
sbb
stc
sub
jno
jmp
ret
testl
fcoml
push
mov
stos
push
push
mov
movsl
aas
adc
inc
je
push
pop
xchg
mov
scas
pop
out
sahf
shl
int3
pushf
or
int
dec
lea
add
notl
fisubl
rcl
jo
es
insb
shll
or
or
mov
fiaddl
ds
cmp
data16
add
dec
mov
stc
movsl
mov
pop
xchg
mov
mov
rclb
leave
add
shlb
pushl
fwait
sbb
dec
ja
test
mov
or
lds
sbb
mov
mov
lods
jecxz
pop
inc
sub
sub
dec
sbb
dec
mov
xchg
pop
fxch
das
pusha
sub
jno
mov
inc
jno
xchg
mov
loope
lahf
daa
shl
mov
int
test
sti
ficoml
push
ss
mov
push
or
mov
loope
fcoms
subl
xor
xor
jecxz
loope
cwtl
xor
decl
jo
pop
outsb
icebp
mov
aaa
dec
in
gs
fidivs
mov
add
cld
cmpsb
mov
xor
fisubs
cmpl
scas
jmp
mov
int
sbb
jge
inc
shll
je
add
push
xchg
jmp
cs
popa
out
and
les
ficomps
xchg
jmp
iret
scas
daa
inc
int
out
and
add
sub
xchg
movsb
jno
pop
repz
clc
jae
call
xor
sbb
mov
xor
push
xchg
andb
mov
lret
mov
cmp
jg
mov
pusha
push
js
loope
cmp
imulb
adc
mov
jns
mov
into
jl
nop
push
cwtl
repz
or
mov
mov
pavgw
adc
hlt
mov
adcb
test
rcrb
dec
out
rorb
ljmp
movb
jge
push
aad
incl
mov
sbbb
push
pushf
xor
add
rcll
and
outsl
loop
imul
loop
xor
imul
stc
mov
pushf
xor
cmp
adc
sub
pop
cwtl
adc
fcmovnu
jb
out
push
test
mov
push
xchg
imul
mov
lret
pushf
inc
add
sbb
fstps
pop
call
mov
rclb
out
std
or
jae
daa
test
xchg
movsl
mov
aad
cld
es
pop
inc
add
pop
fcompl
das
ret
aas
jbe
shrl
ss
xor
pushf
sub
adc
jo
dec
dec
popa
push
jmp
ja
sub
into
test
sub
clc
jle
mov
mov
loop
rcll
push
inc
aaa
mov
mov
lds
ss
mov
or
lahf
stos
aad
lret
je
cmp
neg
call
aaa
xchg
adc
pop
and
jmp
lret
mov
or
rclb
es
bound
and
scas
inc
shlb
in
xchg
and
mov
sbb
shll
out
xchg
push
mov
push
fidivl
fisubs
dec
filds
cmp
push
lret
push
mov
dec
inc
aad
sub
and
mov
jns
dec
mulb
jmp
inc
and
std
icebp
dec
inc
mov
sbb
and
je
sub
xor
leave
rcrl
xchg
add
ror
in
xchg
xlat
cmpsl
and
lret
iret
je
adc
rclb
leave
jns
lahf
push
leave
es
js
arpl
add
rorl
out
lahf
mov
sarl
stc
jae
adc
mov
fidivrl
jne
pop
outsb
fisttpl
sbb
jb
leave
mov
inc
stos
aam
adc
and
es
xorb
test
lea
push
xchg
inc
push
add
mov
xchg
pop
outsl
xchg
and
and
aad
adc
js
ja
mov
pop
fbld
push
mov
sbbl
xchg
xor
fwait
mov
test
cwtl
mov
pop
add
mull
iret
xor
pop
jle
xor
jle
cmc
imull
add
bound
push
push
into
or
shl
out
cmp
mov
cli
mov
inc
clc
push
mov
cmp
add
cltd
mov
cmp
fidivrl
xchg
iret
incb
clc
adc
shll
sub
lret
dec
pop
mov
es
nop
test
stc
push
xor
pop
jp
test
dec
loopne
add
mov
inc
adc
lods
sti
loopne
jle
ljmp
fldenv
add
mov
test
pop
push
xchg
movl
push
cmp
hlt
ja
mov
ret
and
dec
fwait
addl
bound
stc
lret
arpl
jmp
push
loop
xor
and
popa
and
jbe
das
divl
push
aam
xor
xchg
ljmp
pop
push
out
sahf
pop
sub
cltd
int3
push
push
fwait
into
getsec
xchg
in
adc
int
xor
sub
sub
or
enter
jb
mov
out
push
mov
andl
vunpcklps
jne
adc
sbb
sbb
fmull
jns
out
ljmp
insb
mov
dec
sbb
rclb
loopne
ret
test
sub
aam
jne
xor
enter
dec
les
hlt
loopne
pslld
cwtl
mov
jnp
sbb
pop
test
shlb
les
mov
lds
jl
sbb
outsb
and
call
sti
arpl
inc
mov
sbb
bound
jae
fcmovu
adc
push
arpl
adc
pop
pop
rolb
cmp
push
mov
sub
jb
mov
jnp
int3
sub
adc
xchg
stc
mov
jb
test
ljmp
in
ja
push
pushf
lock
fwait
jl
loopne
ret
pop
push
fstpt
push
lock
in
sbbl
mov
xor
push
jp
movsl
and
cmp
add
out
push
sbb
mov
fsubl
mov
into
push
or
push
xchg
push
xchg
test
leave
inc
popa
pop
cli
test
bound
out
adcl
and
jp
or
mov
idiv
cmc
test
inc
aam
in
push
aad
mov
lods
dec
mov
cwtl
or
test
add
fmull
out
inc
imul
js
pop
mov
ja
mov
pop
add
jnp
add
xchg
rcll
sub
adc
xchg
je
mov
cmp
ror
push
lahf
insl
push
popf
lea
mov
jno
dec
insl
loopne
xchg
push
push
push
test
pusha
in
aas
cld
sub
enter
loopne
popa
nop
fsubs
aaa
or
dec
and
and
jg
into
cs
cli
cli
int
lcall
mov
jmp
fstpt
dec
inc
aad
jge
fstpl
and
imul
scas
pop
add
fsubrs
iret
mov
aaa
popa
ret
xor
adc
out
int3
mov
adc
les
out
and
mov
ja
fs
jns
cmc
pop
mov
sub
daa
lods
adc
stos
les
xor
xchg
dec
adc
dec
push
and
je
push
xchg
dec
js
jae
dec
jns
lahf
push
mov
add
mov
adc
push
in
mov
jno
adc
jmp
shlb
xlat
pop
xchg
cli
mov
mov
inc
jo
push
mov
mov
mov
cmpsl
fistps
jno
adc
mov
pop
addr16
ja
or
pop
popf
data16
clc
in
mov
fistl
pop
fisubl
inc
lods
addb
in
mov
pop
cli
fcmovnbe
es
cmp
das
push
and
imul
insb
push
test
and
arpl
inc
sub
in
fcomps
lahf
xchg
aaa
mov
ds
lds
popf
bound
xlat
cld
and
out
mov
mov
mov
push
imul
stc
adc
jecxz
lret
or
movsb
mov
add
cmp
fistps
fwait
pop
test
xchg
fwait
incb
mov
dec
jb
add
dec
popa
rorb
ljmp
xor
pop
jecxz
push
mov
test
jo
mov
btc
cli
in
mov
aad
and
cmp
cmp
nop
ret
sahf
add
fistpll
mov
jns
adc
adc
mov
mov
pusha
test
lods
lret
jmp
xchg
movsl
movsb
rorl
jbe
push
pop
jmp
ja
xlat
inc
and
jle
pushf
sbbl
fiadds
dec
inc
imul
inc
enter
cli
sbb
xchg
push
xchg
enter
push
popa
rol
mov
shrl
mov
stc
cmpsb
repz
fadd
call
sub
out
xchg
inc
cmp
jnp
mov
test
test
ret
push
dec
inc
xor
sub
out
and
pop
inc
push
or
xchg
pop
jae
sub
add
outsb
xchg
xor
and
adc
jnp
addr16
incl
loop
push
mov
and
jp
out
popa
jnp
in
addb
sub
lcall
lods
int
arpl
lds
pop
or
testb
in
xor
hlt
movsb
sub
insl
inc
push
and
fbld
jnp
stc
sub
xchg
pop
ja
fstl
stos
mov
sub
sti
push
pop
int
pop
mov
jecxz
xchg
add
out
fsts
inc
jbe
push
mov
loopne
fisubrs
test
jl
lcall
jns
xor
int3
repz
cmp
dec
mov
and
dec
mov
mov
int3
jmp
adc
sahf
fldenv
int3
adc
mov
pop
lret
cmpb
loop
hlt
adc
rcr
jbe
dec
jns
pop
and
lea
mov
cs
popf
je
mov
leave
cmp
movsl
mov
cmp
mov
mov
mov
in
jmp
mov
out
pop
pop
adc
and
xor
xchg
sub
jnp
outsb
sahf
mov
and
daa
aam
push
cmpsb
aaa
add
iret
hlt
push
mov
xchg
stos
rclb
sbb
pop
repz
cmp
sbb
mov
push
xchg
lods
pop
ss
mov
lret
push
gs
fcompl
pop
lret
pop
cmc
rcr
pop
adc
mov
das
fcmovnbe
push
xor
add
jns
dec
stc
and
or
mov
mov
mov
mov
shlb
insb
sbb
loopne
popa
cltd
jae
dec
je
shrb
lahf
lcall
inc
lock
insb
push
inc
ds
fmuls
cmp
add
or
sti
rcl
inc
lret
ds
insb
sahf
add
movsb
xor
lods
mov
and
xor
mov
ja
sbb
pop
pop
mov
lds
outsb
stos
xlat
sbb
mov
jbe
in
jb
mov
push
jl
push
cld
add
push
cli
add
xor
jp
loop
xchg
sti
cli
fstpl
iret
and
into
adc
stc
xchg
xor
popa
jae
outsl
jo
pop
dec
movsb
xor
pop
inc
shl
imul
les
or
push
mov
aam
or
inc
and
add
sbb
jbe
or
fcmovb
fcomp
sbbl
xchg
sub
popa
lea
ds
mov
xchg
cmpsl
push
sub
jno
outsl
in
mov
in
mov
and
cmp
gs
adc
jo
mov
scas
loopne
popf
pushf
aam
sbb
sub
sahf
mov
dec
sbb
mov
pop
push
cmp
in
test
lods
jg
mov
adc
fwait
mov
pop
sub
lods
inc
pop
shlb
cmp
mov
leave
jmp
lret
insl
popf
or
xor
jnp
mov
xor
add
imul
jge
xlat
xlat
jecxz
mov
mov
add
decb
jecxz
cld
ljmp
std
imulb
inc
jge
pusha
and
sarl
icebp
and
jl
mov
das
cs
mov
inc
add
mov
dec
add
arpl
les
ljmp
rorb
outsl
pop
adc
inc
push
lret
dec
ds
fisttpl
movsb
adc
repnz
cmpsl
pop
push
lods
ss
cmp
addb
mov
aas
push
add
pop
loop
arpl
or
mov
shlb
test
in
lods
xor
mov
mov
sub
popf
mov
dec
pop
mov
les
cmc
jmp
mov
out
jns
mov
mov
fimuls
in
pop
dec
xlat
mov
and
mov
xor
add
in
daa
xor
xchg
jge
cmp
idivl
sbb
idiv
adc
aam
add
notl
dec
cmp
sbb
lret
enter
xor
mov
mov
ss
enter
inc
push
mov
inc
lods
push
loopne
sbb
addr16
xor
ret
sti
jge
adc
mov
lds
pop
mov
push
rcrb
inc
lock
push
insb
mov
or
pop
and
sarl
das
in
push
xchg
mov
mov
dec
push
sbb
es
out
inc
inc
mov
sbbl
mov
cli
and
push
fimull
and
call
mov
mov
das
pop
jns
xchg
stos
mov
nop
cld
push
xchg
sbb
mov
lods
pop
rcl
mov
test
or
push
lahf
push
xchg
das
in
loope
jle
mov
mov
xor
jmp
subl
and
sbb
inc
pop
ret
inc
popf
leave
lret
push
push
add
stos
and
sti
adc
cmp
dec
pop
mov
xlat
lds
adc
insb
outsl
push
add
ja
das
fisubs
imul
xor
mov
pop
cmp
out
cmp
add
pop
mov
in
mov
push
cmp
adc
jo
sub
pusha
jno
ss
sub
jno
ret
lock
in
and
inc
aaa
popa
in
icebp
mov
in
lock
fs
insb
cwtl
pop
push
sbb
or
pop
pop
adc
pop
inc
bound
xchg
adc
fists
das
push
les
leave
test
pushf
sbb
movsb
push
dec
sbb
mov
gs
xchg
sahf
inc
cmp
daa
decb
add
in
mov
test
jmp
out
jl
das
pop
or
and
inc
xchg
cltd
jmp
fistpl
in
ror
xor
push
xchg
mov
dec
mov
mov
mov
out
into
pop
or
inc
and
insl
push
jle
mov
bound
mov
aas
mov
mov
pop
add
aaa
in
inc
lock
pop
dec
add
xor
jge
cwtl
add
and
cwtl
int3
cltd
jmp
mov
jl
xchg
dec
sub
fimull
xor
sarl
mov
xchg
mov
push
aaa
incb
or
sub
mov
sub
pusha
mov
xor
cmc
inc
mov
xchg
shlb
dec
ds
mov
xor
mov
mov
or
movsb
cmp
outsb
arpl
inc
pop
lret
cmp
bound
aam
push
sub
push
cmp
aam
mov
addr16
jge
cld
test
inc
mov
out
addr16
movsb
arpl
mov
pushf
pushf
fsubs
pop
cs
jno
adc
enter
pop
sbb
loop
call
mov
fdivrl
loop
mov
arpl
push
jbe
pop
fcoms
sahf
cmp
xchg
int3
bound
add
and
sbb
popa
dec
pop
aaa
aad
rolb
sub
push
cmp
test
push
out
aad
add
movsb
and
pop
mov
imul
adc
iret
pop
arpl
rclb
push
dec
in
pusha
test
cltd
cwtl
iret
and
sub
jmp
insb
xor
lea
loop
fidivl
push
roll
rorl
cmpsl
add
inc
ret
or
xchg
ss
repnz
xchg
sbb
xor
cmpsb
inc
push
in
cmp
arpl
into
and
imul
inc
jle
mov
fistps
out
mov
rcll
sbb
adc
push
or
cmp
loop
inc
jmp
ljmp
leave
mov
adc
jmp
in
and
cmp
add
dec
xchg
inc
ficoml
jo
xor
sbb
jge
dec
int3
loopne
and
scas
xor
add
cmp
sahf
shl
fisubl
inc
add
fnstcw
in
cmp
mov
fdivrl
int
dec
xlat
xor
in
mov
cltd
inc
add
xchg
add
push
jle
adc
xchg
or
jne
int
scas
pusha
hlt
fwait
push
adc
jmp
ja
lods
mov
xor
or
jmp
les
shl
pop
ficoms
loop
mov
cs
mov
sarl
loop
out
mov
fstl
or
inc
andb
inc
cmp
mov
add
xor
pushf
bt
movb
popf
or
xor
or
pop
jns
call
jle
adc
xchg
inc
or
hlt
xchg
or
rol
dec
push
mov
push
rcl
mov
mov
push
add
inc
cmp
lds
xchg
cmc
sti
sub
push
daa
out
xchg
fisttps
sbb
mov
or
cwtl
rolb
iret
push
leave
leave
enter
ljmp
loope
inc
fwait
repnz
mov
clc
mov
fstps
mov
sub
xlat
bswap
hlt
lods
mov
xor
or
lahf
shl
cmp
sbb
xor
sub
icebp
out
add
jle
push
outsb
add
mov
enter
push
xor
pop
sbb
pop
mov
in
lock
xorl
fwait
cmp
mov
xor
scas
mov
ret
mov
adc
pop
pop
and
pop
mov
imul
inc
aaa
lret
pop
mov
js
lcall
mov
negl
add
dec
hlt
adc
sbb
out
lods
imul
mov
in
ret
dec
icebp
cli
jp
pop
pop
xor
aam
mov
push
out
popa
ret
ret
adc
push
or
or
repz
pop
dec
jmp
fists
arpl
sarb
jmp
xlat
test
cld
sti
xlat
mov
lods
lea
shrb
or
mov
repz
movsb
mov
cs
pop
notb
mov
aam
sbb
adc
bound
sub
add
pushf
jno
pop
scas
into
out
pop
cmpsb
mov
lock
add
scas
push
inc
mov
ret
fs
pop
lret
loopne
mov
or
out
jg
push
mov
pop
dec
bound
in
cmp
mov
adc
jp
lcall
pop
or
insl
iret
adc
lcall
cld
mov
dec
jnp
inc
outsl
add
rcrb
lods
mov
ja
and
sarl
push
test
imul
imull
mov
inc
xchg
ljmp
cs
adc
add
mov
nop
mov
jnp
or
xchg
push
mov
xor
jmp
push
jmp
clc
rorl
xorl
push
test
xchg
adc
fsubs
jbe
xchg
out
or
xchg
inc
xchg
mov
sbb
push
jb
iret
call
repnz
mov
pop
xchg
inc
push
adc
adc
ljmp
mov
mov
insb
add
mov
push
or
iret
test
sub
imul
test
in
mov
add
and
mov
test
xchg
push
and
addl
subl
cmc
jle
nop
cld
idivb
cmc
out
dec
sub
pop
and
lock
movsb
cmpsl
ret
and
mov
mov
push
imul
gs
xchg
fisttpl
clc
dec
imul
cmpsb
xchg
js
and
mov
xchg
test
jecxz
popf
shlb
sub
inc
mov
dec
aam
out
sbb
sub
shll
ds
sub
aaa
mov
je,pn
jecxz
out
or
sbb
mov
xchg
std
and
neg
push
cmpsb
shrl
cmp
dec
pushf
faddl
jb
shr
int3
mul
sbb
aad
clc
imul
fidivrl
cmp
inc
pushl
pop
add
jbe
cwtl
stc
cmpsb
pop
mov
fldl
lods
cmp
filds
enter
lret
arpl
push
call
adcb
addr16
decb
getsec
push
arpl
dec
pop
stc
stc
or
je
push
jns
xor
mov
stos
xchg
push
std
mov
xor
mov
adc
xor
movsl
xchg
or
mov
sub
and
out
inc
sbb
jmp
mov
data16
movsb
arpl
sub
cmp
repnz
jmp
dec
mov
ja
pop
dec
sub
pushf
cmp
sbb
outsl
sbb
xchg
insl
pop
sub
xlat
lret
ss
shrl
das
out
jmp
or
cltd
pop
test
out
push
pop
xchg
outsl
sub
outsl
in
jmp
testb
ljmp
cmc
fstpt
jnp
lea
or
sbb
push
in
ljmp
test
call
adc
xor
mov
and
aam
mov
pop
xlat
jbe
cmp
xor
pop
out
xor
decl
ficomps
insb
subl
add
sub
inc
repz
lea
xchg
loopne
push
divl
push
out
rcrl
and
dec
lahf
mov
sbb
jmp
jge
fsts
push
ja
mov
aam
cmp
inc
pop
fildll
sbb
adc
dec
cmp
xchg
fcmovbe
test
loopne
insl
outsl
ficompl
lods
push
out
test
ds
and
mov
imul
daa
push
out
rclb
into
push
mov
sub
xlat
ja
repnz
push
movsl
xlat
in
jb
add
add
testl
mov
adc
cwtl
fs
dec
push
pushf
lret
pop
leave
cmpl
push
ret
cmpsb
fs
loopne
mov
shrb
push
je
and
movsb
xchg
sbbb
mov
into
lcall
or
adc
push
pop
lds
dec
jnp
outsb
jg
adc
pop
and
sbb
push
sbb
lea
test
addb
in
push
mov
add
in
push
jg
mov
mov
push
inc
mov
iret
jmp
mov
sahf
add
dec
inc
jl
mov
mov
inc
dec
test
pop
inc
arpl
xchg
cmp
sub
sbb
fidivrl
sti
pusha
movsl
push
mov
movsl
insb
mov
mov
movsb
es
sarb
js
jmp
sbb
cmp
mov
and
mov
push
jg
fwait
cltd
or
arpl
and
adc
js
push
pop
lods
add
rolb
outsl
adc
inc
divl
pop
adc
adc
pop
add
xor
out
fdivrl
into
fdivs
pop
pop
xchg
sarb
adc
push
mov
pop
xlat
into
pop
call
add
sbb
outsb
adc
mov
aam
stc
pop
adc
lods
lds
sub
rclb
add
push
fmuls
xchg
sub
fisubl
push
scas
rcrl
push
aas
aaa
mov
xor
imul
lahf
subb
and
sub
jae
and
in
stc
adcl
arpl
rorb
dec
mov
pop
sbb
sahf
pop
sbb
mov
cld
jmp
stc
or
mov
push
jp
sahf
incb
inc
leave
ffreep
into
ss
nop
cmpsl
push
sbb
and
inc
and
in
mov
scas
ret
lcall
arpl
daa
pop
pushf
movsl
out
mov
pop
inc
stos
xor
pop
lcall
in
push
sbb
mov
xchg
dec
push
ss
push
add
jne
or
xchg
and
jmp
sub
fldcw
push
mov
dec
push
jmp
outsb
lods
fsts
add
xchg
pushf
out
xor
leave
cmp
lcall
icebp
mov
popa
sbb
insb
sbb
imul
push
mov
out
daa
sub
pop
mov
jl
and
or
pop
popf
mov
sbb
mov
and
inc
xchg
adc
pusha
jge
jp
shll
shlb
sbb
inc
or
inc
mov
jb
rcrb
ret
cwtl
test
test
mov
loop
and
inc
shlb
out
mov
sbb
int
shrl
inc
out
dec
push
mov
aam
insb
sbb
xor
loopne
add
in
push
mov
lcall
subl
push
mov
outsb
fldt
jns
pushf
aam
push
sbb
into
test
jnp
push
lods
hlt
xchg
ja
pop
mov
popa
ljmp
aad
jne
jae
lcall
loop
mov
dec
lods
adc
cs
inc
jo
out
gs
rol
fstps
cs
in
fiaddl
mov
sar
jl
rep
sarl
jmp
mulb
xor
movsl
push
jbe
sbb
pop
add
xor
test
call
adc
mov
mov
or
mov
sub
mov
pop
in
stos
sbb
jbe
cmpsl
add
jne
xor
imul
in
jbe
or
pop
clc
adc
js
mov
mov
mov
add
push
adcb
int3
mov
inc
into
sub
jmp
xorb
int
fisubrs
lods
aaa
fldl
or
iret
xor
jl
pop
imul
ficoml
ret
rolb
adc
mov
pop
mov
cmp
jns
dec
mov
icebp
push
stc
int3
ret
jmp
cmovp
ret
sbb
aad
fmull
sbb
push
inc
push
call
mov
dec
loop
loope
add
xchg
sub
jmp
pop
cmp
mov
push
mov
sti
ja
cmp
cltd
dec
mov
into
les
int3
ret
outsl
xchg
stc
imul
mov
loopne
fistpll
sti
pop
sub
adc
xchg
rorb
imul
and
bound
pop
and
push
sub
add
xor
add
ja
ljmp
lcall
in
mov
mov
mov
mov
fildl
xchg
sub
xchg
movsl
jg
adc
rclb
imul
fstpl
push
lock
mov
and
sbb
push
inc
dec
pusha
arpl
and
inc
mov
sub
mov
and
js
in
or
sbb
push
lds
into
jp
xchg
scas
pop
aaa
imul
adc
adc
gs
lea
mov
push
sbbl
add
adc
jae
lea
fimuls
cltd
mov
mov
xchg
imul
push
xor
dec
pslld
jecxz
andl
mov
adc
leave
dec
inc
or
and
ret
push
scas
add
xchg
movsb
cmp
inc
or
out
fwait
movsl
or
lods
inc
jbe
fucomp
fucomp
pop
fnstcw
pop
sub
dec
filds
xchg
mov
lods
bound
push
jp
jne
jnp
scas
dec
jns
icebp
xor
adc
mov
pushfw
sbb
or
mov
pop
dec
js
xchg
ret
push
icebp
mov
popf
jg
sub
out
sub
mov
negb
jae
loop
stc
lods
adc
dec
adc
dec
out
out
jg
std
jnp
pop
out
cmpsb
push
xor
sbb
data16
std
out
jmp
lea
fmuls
test
cmpsl
mov
iret
mov
dec
and
lods
and
insl
inc
mov
jnp
nop
and
ret
dec
mov
cmc
in
inc
inc
mov
call
repz
fs
or
jns
ret
movsb
cmp
push
lcall
jl
rorb
addb
mov
xor
cmpl
dec
ret
pusha
loop
movsl
lds
mov
jb
test
push
cltd
int3
hlt
arpl
xlat
testl
lret
ret
in
leave
int
sub
mov
faddl
shll
mov
xor
push
xchg
add
inc
cld
push
enter
pop
mov
jmp
jmp
pop
in
leave
xlat
jl
sahf
lds
mov
cmp
pop
xor
and
aas
mov
cmpsb
inc
dec
sub
add
push
xlat
out
lods
xchg
pop
or
mov
loop
insl
pop
shlb
popa
xchg
sub
mov
and
lea
mov
movsb
int
push
dec
mov
xor
cmp
mov
sub
lds
jmp
dec
stos
imul
xorb
std
repnz
cmp
xchg
in
sbb
mov
cmpsl
daa
int3
xor
sbbb
gs
aad
adc
movsl
stc
jo
pop
adc
pop
stos
lock
les
sbb
or
jae
xor
cmpsb
stc
add
jg
scas
push
ds
jl
mov
gs
or
push
adc
xor
add
add
cli
call
push
hlt
clc
lret
cmp
or
ljmp
adcl
sbb
cmpsb
mov
hlt
and
enter
aad
xor
push
scas
imul
aaa
into
or
rorl
inc
loope
dec
stc
stos
subl
xchg
repnz
lret
or
mov
inc
in
enter
fildll
lods
push
add
adc
cs
jmp
repnz
sbb
ret
out
dec
inc
xchg
sub
andb
push
cs
ljmp
add
lods
ss
std
mov
jns
push
lahf
ret
mov
mov
fiaddl
pop
mov
push
aad
ds
mov
rcr
shl
loope
sbb
push
jo
arpl
vaddsubps
das
outsl
add
sahf
pop
mov
lods
loope
jb
inc
lods
scas
mov
test
repz
add
fmuls
sub
xor
fs
push
lcall
out
leave
dec
jbe
or
lock
imul
stos
mov
add
xchg
push
scas
imul
std
iret
fistpll
push
js
jecxz
in
std
shrd
sbb
jns
push
pop
lret
adc
xor
mov
xchg
sbbb
sub
mov
mov
jbe
insl
in
xchg
dec
in
dec
loop
addl
popa
push
shlb
cmpl
fwait
scas
mov
xor
addr16
insl
sub
loopne
xor
rclb
rcrl
mov
mov
pop
jne
icebp
call
in
lret
adc
and
push
iret
leave
test
mov
xchg
lock
dec
fnstsw
dec
ss
in
loop
push
cmp
mov
xchg
adcl
mov
pop
jmp
dec
nop
cmpsl
fdivrs
add
hlt
cs
int
inc
sbb
incl
repnz
popf
inc
lock
das
outsl
push
xor
jo
sub
dec
inc
sbb
mov
push
sub
add
cli
add
fdivr
shll
mov
je
jecxz
mov
loope
dec
mov
jns
ss
jo
test
pop
rcrl
lahf
mov
jnp
push
loope
and
mov
inc
addb
pop
cmp
push
jmp
insb
and
xchg
stos
daa
jp
xor
cmp
inc
lds
fidivl
shll
push
mov
pop
lahf
xchg
lea
shrl
hlt
fs
sti
decb
adc
xchg
adc
lds
sbb
sbb
inc
push
cmp
pusha
es
jnp
pop
dec
pop
nop
lods
add
xlat
rol
mov
out
pop
fnstcw
and
lock
ret
jno
jle
outsl
sar
pop
pop
aad
xor
icebp
mov
lods
mov
loopne
mov
test
or
mov
add
imul
mov
xchg
xor
loopne
or
int
xor
frstor
xorb
pcmpgtb
into
inc
popf
inc
sub
cmc
xchg
popa
mov
setb
mov
ja
xor
rcrb
ljmp
mov
in
xor
sti
push
jmp
data16
fiadds
gs
cld
rclb
sub
push
cmp
movsl
pop
push
inc
xchg
mov
cmp
mov
bound
bound
sti
les
call
dec
mov
shr
xor
pushf
and
in
cmpb
cmpsb
andb
pop
lods
cld
pop
dec
fisttpl
or
mov
ret
scas
mov
addr16
jmp
mov
pusha
add
andl
outsl
les
sub
push
icebp
test
enter
imul
fs
xor
xor
mov
jnp
inc
test
xlat
repz
jecxz
jge
adc
or
insb
insb
cmpl
jbe
aas
lret
inc
pop
jecxz
subb
sarb
sub
mov
add
mov
push
add
lds
dec
repnz
add
mov
mov
test
ja
je
lcall
mov
and
cmp
inc
adc
mov
xchg
js
cmp
incl
add
lret
dec
sahf
jg
jl
xchg
lcall
xchg
scas
divl
mov
shl
mov
dec
pop
pop
inc
jo
mov
sub
jmp
mov
fistpll
mov
pop
mov
sbb
add
imul
dec
lods
stc
mov
shr
stc
mov
repz
out
test
arpl
mov
and
adc
mov
lret
push
lock
mov
push
fisubrs
repz
lea
add
faddl
add
cmpsb
or
divb
jns
sbb
mov
adc
ror
ror
mov
jno
push
adc
icebp
in
pop
popf
mov
js
cmpsl
xor
mov
dec
lahf
iret
adcb
dec
pop
loop
dec
or
sarb
loope
cs
sub
call
lea
mov
fbstp
stc
rorb
sbb
jb
int
test
outsl
mov
pop
insl
add
test
aas
ficompl
nop
ljmp
mov
sbb
jbe
fs
cmc
sarl
jl
test
in
sbb
cmp
cmpsb
pop
inc
faddp
cmp
fdivl
inc
aad
mov
daa
mov
xchg
les
mov
mov
idiv
push
sub
cmp
out
jge
rcrb
xchg
dec
fcmovnu
cltd
div
cmc
out
les
push
fadds
js
sbb
mov
lret
shr
add
out
mov
sub
loope
out
pop
mov
decb
inc
xchg
xor
mov
cltd
mov
test
shl
rorl
xor
mov
lea
or
cmpsl
jbe
pop
xor
dec
and
pop
rorl
inc
cld
jnp
cmp
test
iret
push
clc
push
insb
int
mov
cmp
out
jnp
push
jns
push
xchg
or
add
xor
subb
hlt
mov
sar
fiaddl
push
nop
fsubl
fs
pop
call
and
mov
jae
jbe
ret
jb
lcall
or
out
test
bnd
jne
lods
jecxz
int
pop
push
out
sti
cmpsb
cli
pop
loope
fs
cmp
in
imul
mov
and
pop
test
addr16
test
ret
pop
jmp
lods
jne
mov
sub
jbe
adc
loop
sbbb
xor
xchg
gs
jle
movsl
mov
movsl
into
xor
or
js
test
pusha
bound
mov
test
adc
not
inc
nop
mov
out
repz
push
ja
and
or
stos
push
push
imul
subb
dec
inc
cmp
adc
mov
push
mov
jmp
pusha
clc
aad
lock
jmp
and
sahf
outsb
push
adc
out
loop
enter
roll
inc
push
sub
cmp
xchg
mov
add
out
add
gs
jbe
dec
inc
out
dec
pop
out
adc
decl
repz
arpl
sbb
roll
cmpsb
fs
pop
xor
or
dec
popl
push
ret
xchg
adc
jne
shrb
aam
lods
sub
mov
add
jo
add
aas
out
mov
xchg
jmp
jmp
fs
jmp
xor
pusha
lea
das
pop
das
and
or
loope
iret
xchg
adc
xchg
pop
adc
mov
or
push
mov
dec
cmc
mov
mov
and
mov
shlb
gs
imul
movsl
sahf
outsb
push
orl
mov
fsubrl
les
cmp
sahf
jp
dec
cmp
mov
test
push
xorps
pop
test
sbb
sub
mov
adc
push
mov
jo
mov
icebp
push
pop
add
cli
in
into
push
inc
pop
or
adc
xlat
xlat
cwtl
sbb
sbb
sub
push
adc
rol
mov
dec
sbb
test
das
push
jns
cmpsb
jmp
mov
ja
aam
mov
sahf
ds
pop
lods
rcrb
push
and
mov
inc
fcmove
push
loop
addl
mov
mov
lods
cmp
jns
mov
nop
mov
loop
xor
jno
ljmp
mov
xor
inc
adc
and
in
call
xor
out
adc
outsb
push
outsl
outsl
out
push
popa
das
loope
addb
andl
shl
pop
test
sub
add
pop
call
pop
cmp
ret
mov
call
cmp
aam
aam
out
icebp
popf
outsb
popa
pop
cli
in
jmp
addb
xor
imul
loopne
scas
jno
cmp
int3
pop
loope
shlb
jp
pusha
subl
jae
push
sbb
aas
aaa
pop
and
mov
jae
adc
je
jae
cmp
rcll
testb
scas
dec
test
dec
cmp
cmp
lret
das
cmp
push
sbb
lahf
shl
or
xchg
pop
xchg
adc
aam
popf
or
pop
cli
test
mov
pop
fldt
push
or
push
mov
jbe
push
mov
push
out
mov
lea
insb
shll
dec
jb
ret
repnz
or
dec
mov
sbb
daa
scas
cmp
clc
mov
mov
je
flds
popa
sub
mov
int
mov
adc
xchg
xchg
cmp
sbb
shrl
out
push
mov
mov
cmp
outsl
testb
inc
pusha
rcl
xor
out
es
ds
fistl
dec
xchg
add
outsl
dec
arpl
or
pop
push
mov
movsb
lcall
outsl
xor
pop
sbb
or
mov
cmp
mov
adc
add
clc
pop
sahf
test
jnp
cmp
inc
fisubrl
cmp
pop
pop
mov
mov
aas
add
cwtl
or
xlat
push
out
and
push
mov
popa
jmp
das
push
inc
sbb
frstor
mov
xchg
hlt
inc
pop
xchg
out
sub
jbe
outsb
mov
test
das
mov
push
cmpsl
sbb
mov
outsl
rclb
cltd
scas
dec
mov
dec
push
mov
dec
mov
stc
jb
outsb
int
fidivl
ret
stc
pop
mov
jg
or
mov
and
inc
in
popf
or
jo
pushf
ficomps
das
test
dec
mov
outsb
mov
or
mov
vpcmpeqd
insl
lahf
int3
dec
and
movb
jns
push
jg
mov
jle
adc
add
aas
sbb
test
fists
add
sar
imul
test
loopne
pop
jp
lds
push
int
test
or
jmp
imul
test
lock
daa
packssdw
inc
in
loopne
xchg
fidivrs
fwait
pop
mov
dec
movsb
dec
je
mov
and
dec
inc
push
cltd
sbb
jl
push
test
mov
outsl
loope
pop
cli
xchg
cmp
xchg
mov
xchg
cmp
add
testl
icebp
cmp
sahf
cmp
ss
mov
fnstcw
jne
repz
sub
jo
ficompl
jns
in
int3
lods
inc
inc
add
push
mov
pop
jno
mov
outsl
cmp
or
cld
out
es
icebp
xor
rcll
dec
stos
inc
aas
xchg
loopne
cmpb
cwtl
imul
xchg
bound
in
push
aas
jmp
mov
push
movsl
lds
fiaddl
xchg
pop
es
xor
test
arpl
pop
jge
add
push
and
sub
loope
mov
out
sbb
out
iret
xor
repz
cld
stos
cltd
data16
jle
lds
fisttps
sub
push
sub
or
loope
xorl
ljmp
in
cmpsl
mov
mov
adc
rcll
ret
fisttpl
idivb
fs
pop
add
mov
inc
or
test
push
outsl
scas
addr16
jmp
sub
idivb
aam
cmp
mov
pushf
pop
lcall
pop
mov
sbb
and
pop
pusha
int
lods
mov
test
sub
outsl
mov
loop
fucomp
cmpsb
pop
rcr
fcoms
push
pop
repz
cmc
cmc
pop
sbb
or
xor
mov
stos
mov
arpl
push
and
dec
addr16
lock
and
adc
or
divps
in
cwtl
fcomp
inc
xor
pop
aaa
add
dec
in
xchg
cld
sbb
push
sub
add
incb
es
aad
faddl
push
mov
dec
icebp
scas
jmp
mov
cmp
cmpsl
xlat
out
cmpsb
dec
pusha
rsqrtps
std
mov
inc
dec
xchg
aam
fsubrp
stc
sbb
cmc
test
clc
jno
dec
push
sbb
addr16
in
popa
jl
cmp
mov
push
jns
cmp
and
lret
fsts
add
rcrb
test
mov
sbb
push
xchg
rol
clc
sub
add
mov
popa
jae
fimuls
into
lea
hlt
gs
aaa
and
sub
adc
arpl
dec
inc
cmpsl
insl
jle
adc
jo
inc
cli
aam
scas
faddl
mov
in
shrl
mull
rclb
rorb
adc
xor
push
xchg
jecxz
icebp
loope
inc
call
lods
int
stc
push
stos
push
cmc
lods
mov
rcrl
out
jb
jbe
aaa
leave
les
sbb
imul
lods
daa
xchg
pminub
cmp
sbb
gs
shr
test
in
adc
idivb
rep
xchg
pop
sbb
aaa
sbb
dec
cmp
mov
push
aaa
dec
cmp
jns
aas
sub
xchg
popf
jmp
jnp
ds
push
xchg
and
subl
mov
jecxz
sub
sbb
sbb
adc
inc
or
xchg
push
loope
and
in
adc
lock
jns
mov
pop
jmp
repz
sbb
dec
jmp
stc
jo
lods
and
sbb
adc
sbb
loope
and
push
out
mov
cwtl
push
sub
and
sbb
add
popf
outsl
leave
fwait
or
lea
push
loope
mov
insl
sub
pusha
mov
out
clc
hlt
outsb
lret
hlt
cwtl
jnp
inc
add
add
mov
pusha
testb
fistl
lock
mov
cwtl
inc
inc
or
mov
test
push
push
das
cli
cmpsl
mov
sbb
mov
sbb
jle
outsl
and
out
mov
out
leave
sahf
cmp
iret
mov
fsubrp
sub
mov
out
jmp
std
in
jge
test
stos
imul
xchg
cmp
in
aam
int3
or
imul
test
subb
enter
adc
int3
dec
test
fisttpl
pop
adc
bound
scas
or
xchg
out
xchg
mov
mov
shrb
push
xchg
roll
imul
fsubrl
xchg
pop
push
ja
add
test
sbb
or
mov
fisttps
sub
adcb
outsl
adc
dec
enter
sti
stc
gs
dec
push
frndint
inc
inc
mov
dec
add
ret
xchg
cmp
stos
sub
adc
out
in
mov
ds
or
test
pop
cmpsb
icebp
bsf
jbe
mov
mov
fcmovb
sarl
cld
add
lods
dec
pop
rcll
jb
jbe
pop
adc
repnz
add
movsb
sub
lea
fdivrl
xchg
out
fs
mov
or
sysexit
rcll
daa
pusha
and
jnp
mov
insb
sti
les
dec
jg
pop
icebp
cmp
sbb
mov
xchg
leave
ja
movsb
cli
jbe
xchg
fs
out
int3
mov
stc
inc
popf
mov
pusha
loope
xor
inc
fmuls
pop
xor
xchg
xchg
and
adc
mov
or
jl
js
dec
fisubrl
shlb
or
xchg
jnp
inc
in
dec
icebp
hlt
gs
mov
and
mov
outsb
jge
sub
cmovle
mov
add
mov
pusha
js
fwait
stos
stos
rcrb
jne
ljmp
adc
scas
mov
mov
sub
hlt
adc
xchg
jae
ss
push
cmp
cmpl
xlat
imulb
call
sarb
add
add
scas
in
movsb
pcmpeqb
lds
cmc
fs
mov
sti
ss
or
movsb
inc
fadd
std
loopne
lds
mov
mulb
jne
scas
push
add
and
jmp
add
mov
mov
and
cmp
adc
shlb
adc
push
dec
in
mov
movsb
loope
nop
leave
lcall
mov
or
ja
loopne
add
ds
data16
and
cmp
cmp
and
mov
pop
lcall
loop
inc
mov
movq
bound
mov
fidivrs
mov
mov
test
xor
jo
ret
push
rcrb
ficoms
fcmovne
jnp
test
and
out
adc
push
ss
mov
xor
fsubs
movsb
mov
fiaddl
xorl
mov
dec
fldl
int
push
stc
and
fbstp
jge
aam
sti
sub
xchg
aam
ja
pop
addr16
aaa
loop
jno
mov
ret
and
ret
shlb
popa
mov
push
test
jo
xchg
cmp
pushf
jge
cmpsl
aam
inc
mov
lods
rorb
iret
cmp
pop
clc
and
or
ret
xchg
fwait
test
push
pop
loop
movsb
jb
ja
aad
mov
push
mov
jl
mov
cmp
scas
repnz
aaa
sub
dec
mov
jnp
sub
ss
iret
sbb
xchg
lret
aam
mov
je
xor
mov
fcoml
andl
shlb
inc
xor
lret
out
xchg
lea
fsubrl
shlb
ss
cmovbe
fnstcw
pop
dec
insb
jl
rcrl
repz
dec
pop
leave
adc
daa
ljmp
add
jb
xchg
ficoml
lcall
fstl
mov
mov
insb
mov
sub
call
jecxz
push
xor
add
cmpsl
lea
lea
scas
sbb
out
ds
aaa
push
push
xchg
mov
mov
testb
mov
call
or
stc
sub
fwait
adcl
xchg
ds
and
sbb
sbb
xchg
cmp
pushf
shll
in
enter
scas
sbb
xchg
mov
pop
decl
popl
aad
mov
mov
xchg
or
xchg
fsubrs
shr
orl
pop
jae
jmp
mov
sbbb
aad
push
pop
dec
js
sbb
cmpsb
mov
in
ret
out
aam
inc
dec
xchg
out
loope
sbb
mov
mov
push
sbb
sub
aam
mov
xor
sbb
incb
and
sbb
pop
lods
mov
ret
mov
jl
jle
enter
sub
ljmp
lret
test
xchg
sarb
mov
pop
push
imul
adc
popf
int
nop
pop
lock
jecxz
test
adc
into
mov
ljmp
push
inc
add
bound
mov
pop
int
scas
sbb
push
cmp
ja
pop
lods
lods
cmp
adc
aaa
jo
les
lahf
cwtl
lret
shl
test
test
mov
out
mov
push
mov
mov
mov
pop
pop
ja
outsl
fwait
test
xchg
iret
inc
lock
stos
jmp
jg
sbb
test
ja
repz
aam
fldcw
push
popa
cmp
xor
dec
xchg
call
mov
bound
and
sahf
jmp
mov
cltd
addr16
and
psrlw
jns
gs
xor
aas
dec
xor
jbe
pop
sbb
adc
rorl
push
sub
jl
cmp
fidivrl
fidivrl
pop
jecxz
ljmp
or
nop
push
push
outsb
mov
pop
lods
lods
icebp
in
mov
data16
arpl
jnp
lods
or
add
push
dec
dec
into
xchg
lret
clc
outsb
inc
in
pop
leave
sub
jp
adc
cmpsb
or
rcrb
mov
ror
inc
ret
and
add
ja
push
add
inc
add
jmp
sti
fsubs
mov
jns
pushf
pop
aaa
loop
add
orb
add
xchg
xchg
dec
dec
in
add
pop
mov
in
xchg
loope
xchg
mov
mov
js
push
aaa
and
mov
pop
inc
dec
fsubrl
inc
xor
setnp
push
sbb
in
inc
nop
lea
mov
jge
cmpsb
ja
cmpsl
jp
mov
mov
push
push
in
xchg
ficomps
insb
jg
in
jle
mov
stos
push
fwait
shl
jle
enter
and
rcr
dec
mov
or
rorb
dec
sub
dec
outsl
dec
and
dec
pusha
aad
call
sub
mov
out
mov
push
pop
jne
cmpsb
les
pop
xor
ss
adc
lock
push
dec
lods
cli
push
mov
adc
cs
mov
sub
adc
repz
mov
in
jo
adc
decl
sub
rorl
push
push
cmpsl
inc
add
cltd
dec
ljmp
add
std
lock
pop
ror
imul
push
ds
sti
jecxz
sub
or
mov
ljmp
and
push
jb
call
cmpl
shl
iret
mov
into
out
lret
or
hlt
mov
jecxz
pop
sub
shl
aas
push
xor
push
or
insl
out
maxpd
fldcw
jg
mov
rcr
mov
dec
sub
int3
adc
adc
push
pop
add
cmp
int3
fsubs
sub
icebp
mov
out
les
in
in
icebp
inc
jmp
scas
sub
fcoml
sub
into
adc
cwtl
orl
xor
mov
or
aam
add
fsubrp
xchg
mov
mov
scas
les
imul
xchg
pop
icebp
test
sub
and
notb
rorb
cs
punpckhwd
cmpsl
out
aaa
out
cmp
pop
cmpl
andl
push
pop
pushf
dec
xlat
jmp
or
les
adc
and
push
cs
sub
lahf
pop
and
xor
psubusw
and
mov
mov
sarb
fdivs
pop
jbe
inc
cmp
mov
pushf
pop
inc
mov
and
aas
adc
gs
popa
adc
popf
lahf
xor
popf
jbe
ror
sbb
or
push
pop
pushf
daa
popf
xchg
test
xor
xor
xchg
mov
lods
cmp
sbb
ja
and
inc
sarl
jns
out
mov
imul
cmpsb
scas
xor
xchg
xchg
in
in
aad
stc
dec
or
xchg
xchg
inc
dec
outsl
aam
mov
ret
mov
inc
int
ficomps
std
pushf
push
nop
gs
pushf
mul
cs
mov
jmp
push
ja
mov
cmp
inc
fists
and
pop
cmc
cmc
mov
stc
xchg
loop
inc
popf
dec
lahf
mov
lea
push
xor
adc
pusha
les
js
int3
mov
repnz
sbb
fists
leave
jnp
popl
push
in
ret
jae
sub
test
inc
xlat
pop
cmc
scas
xor
adc
repnz
or
sbb
je
push
xor
add
loopne
mov
lcall
inc
adc
mov
inc
add
idivb
mulb
cmp
shll
xchg
or
int
in
out
sahf
add
sbb
stos
dec
mov
push
dec
out
jo
jge
jle
jo
xor
push
cs
insl
repz
pop
lret
movsl
sbb
inc
jg
les
mov
sbbb
fidivl
push
or
jno
sti
fsubr
pop
pop
je
inc
mov
cmp
adc
loop
sbb
cmp
test
insb
jmp
mov
pop
xchg
mov
dec
lea
push
add
push
je
pop
add
ja
les
das
je
leave
mov
test
fstpt
lock
cli
add
outsl
fdivrs
faddl
movsl
mov
add
out
aas
and
pop
push
mov
mov
cmp
shlb
pop
push
add
jmp
scas
or
pop
inc
cmpl
adc
dec
pop
stos
loope
add
dec
jg
andb
sbb
mov
add
xchg
ss
add
cmpsl
repnz
jle
jo
scas
mov
mov
ja
adc
out
int
orl
sbb
and
daa
es
je
mov
push
jo
lcall
and
fcomps
pop
pop
jl
sub
push
outsl
in
jle
arpl
push
loope
jo
mov
ja
mov
gs
les
in
push
faddl
scas
and
mov
push
pop
lcall
das
or
cmp
scas
dec
add
ret
popf
test
push
sub
testb
mov
jge
push
fadds
sbb
jg
fdivp
fisubrs
sbb
add
or
jb
push
push
fs
in
popa
inc
or
xchg
sub
xor
xor
dec
mov
mov
aas
mov
add
push
fidivrl
cli
inc
test
int
loope
cmp
ret
aam
ss
cmp
aam
sub
pop
sub
push
in
shr
int
push
je
dec
scas
mov
cltd
daa
mov
jmp
inc
cvttps2pi
arpl
sub
fs
movb
jp
sub
daa
pop
jle
jecxz
cld
inc
call
adc
fcomps
push
test
adc
imul
dec
sbb
stos
in
jns
pop
movsl
test
inc
cltd
xchg
ret
push
push
push
dec
popf
adcb
mov
scas
inc
aas
jmp
je
stos
jnp
jo
lods
dec
rcrl
mov
jns
cmp
jl
jo
clc
mov
fwait
inc
mov
or
lds
mov
dec
fstp
out
pop
add
fadd
fldt
mov
mov
push
test
jns
pop
or
jo
xchg
and
pop
inc
jno
fcmovu
or
test
test
test
das
loop
mov
mulb
je
mov
pop
adc
xor
in
lods
xchg
mov
jnp
icebp
jns
sbb
nop
movsl
cmp
icebp
mov
xor
dec
clc
sub
sbb
rclb
inc
mov
jg
sub
lods
push
rdmsr
int3
into
xorl
mov
cmpl
jmp
popf
fwait
or
sahf
push
imul
je
loopne
fisubl
scas
icebp
pusha
push
mov
sbb
sti
pop
mov
sub
sub
or
add
sahf
xchg
mov
xor
lret
cmc
popf
int3
xacquire
loop
repz
xchg
dec
pop
popf
and
in
add
scas
pop
sub
shlb
or
fldenv
push
icebp
push
fisubl
jle
xor
cmp
jmp
cmp
cmp
add
sahf
aam
andb
adc
scas
daa
das
insb
not
movsl
pop
lea
adc
leave
mov
sbb
sbb
cmp
xchg
push
jg
mov
cltd
call
cmp
add
xchg
in
xor
insb
add
or
imulb
xchg
pop
lret
sub
mov
xchg
outsl
mov
div
cwtl
jnp
outsb
mov
mov
dec
mov
sbbb
mov
pop
pop
jno
push
loopne
into
cs
loope
sub
cltd
xchg
xor
mov
pop
movsb
mov
test
mov
jo
jecxz
insl
movsb
mov
movsb
add
aas
enter
jne
repnz
dec
xor
push
loop
sub
xchg
cmpsl
out
jb
inc
pop
shlb
popa
mov
mov
jmp
repnz
push
je
jmp
mov
mov
push
repnz
jl,pt
xchg
aas
jno
adc
add
pushf
add
mov
ss
in
fisubrs
movsb
xchg
lods
cmp
xlat
in
clc
add
dec
ror
idivb
test
cmpsl
cltd
pop
adc
dec
or
pop
rcr
rclb
dec
call
add
sbb
pop
cmpsb
xor
pop
dec
fstpt
bnd
testb
and
repz
inc
add
xor
xor
lds
pop
or
mov
mov
sbb
mov
rorb
add
int
cli
outsb
push
std
inc
inc
rol
xchg
or
xor
sub
and
fcomps
movb
mov
and
addr16
ret
mov
cltd
rorl
test
int
out
shll
ficoml
pop
outsb
mov
mov
testl
sbb
inc
int
call
adc
lods
loop
or
or
pop
call
adc
mov
sbb
testl
and
xchg
ljmp
jns
daa
mov
stos
adc
shl
pop
xor
negl
mov
cld
inc
jp
pop
pop
cmpsb
adc
jo
mov
int
hlt
cli
xor
test
and
mov
in
jmp
cs
mov
jnp
js
stc
outsb
lahf
lret
addb
mov
mov
sub
fidivrs
movb
cmpsl
into
mov
mov
bound
fidivl
outsb
fisttpll
rcl
inc
push
adc
roll
fistl
mov
xlat
xor
shrl
cmpsl
in
xchg
inc
sub
jg
push
dec
sarb
fs
test
std
and
aad
pop
jmp
test
jge
fwait
loop
pop
sub
mov
xchg
dec
inc
sub
xchg
pop
scas
loopne
cwtl
lock
sub
jb
dec
gs
dec
cmp
fdivr
jecxz
sbb
inc
mov
pop
call
or
nop
mov
orb
sub
jae
adc
jge
push
loop
ret
mov
aaa
push
push
add
adc
out
push
mov
ljmp
outsl
fdivrp
lcall
fs
jl
out
jmp
push
roll
mov
and
sti
shl
mov
gs
xor
icebp
push
adc
pop
push
adc
inc
add
cs
cmp
into
pop
jbe
daa
enter
lret
rolb
inc
filds
jbe
xor
mov
add
push
or
loope
inc
or
xchg
sbb
pop
sahf
mov
enter
push
and
inc
add
rcr
push
sbb
or
mov
and
imul
dec
fisubrl
push
lock
mov
jle
ret
out
sub
mov
xchg
add
call
aas
lret
ss
jno
xchg
out
in
lea
pop
push
popa
andb
dec
imul
in
or
in
loopne
push
mov
ja
adc
icebp
inc
dec
xorb
pusha
jmp
popf
sbb
shl
aaa
negl
shll
jl
dec
or
jp
or
xor
or
ja
icebp
aaa
idiv
xor
push
mov
jmp
hlt
scas
inc
outsb
outsb
adc
leave
pop
in
and
das
jle
cltd
add
xlat
clc
mov
icebp
shr
mov
mov
cmpsb
lods
jnp
cmp
dec
sbb
out
fistl
mov
ja
mov
fldcw
and
push
fistpl
movsl
inc
cs
xor
nop
lds
shll
dec
sub
xor
dec
int3
or
and
lds
loop
loopne
out
mov
pop
sbb
pop
mov
or
inc
scas
movsl
xlat
rolb
mov
xchg
jmp
pushf
and
and
jge
subb
cmpsb
mov
dec
jae
sub
imul
mov
xchg
movsb
repz
loopne
and
adc
adc
test
xor
iret
xchg
in
iret
push
dec
mov
jno
in
mov
call
push
jb
les
cs
lahf
and
imul
in
out
mov
sbb
mov
sti
mov
sub
push
and
mov
sub
jne
jb
sbb
icebp
sbbl
jg
movsb
lods
inc
ljmp
pop
jl
rcr
mov
inc
cmp
adc
xor
scas
clc
iret
add
ret
xor
mov
fnstenv
sub
into
sub
cmp
and
mov
adc
insb
leave
pop
add
ds
push
lods
or
ret
cld
movsl
mov
mov
ja
jae
xor
dec
mov
testb
dec
dec
lods
xlat
cmp
repz
in
les
jge
adc
cmp
fsubrl
xor
punpcklbw
pop
adc
enter
cmp
fs
mov
scas
and
xor
inc
test
or
loopne
add
or
jecxz
movsl
mov
pushf
jno
js
adcl
sub
scas
jge
popf
or
test
sub
lods
jg
pop
jge
cwtl
repnz
dec
xchg
fs
popw
fmul
shll
cltd
sbb
in
fisubl
sub
loop
jbe
mov
push
lret
cmc
sbb
lcall
jecxz
sub
je
arpl
in
mov
xor
ret
outsb
mov
pop
push
hlt
jne
pop
cmp
fdivl
leave
mov
add
or
xor
cwtl
shl
push
jle
call
loopne
sti
std
jp
xchg
rcll
leave
push
inc
cltd
fs
ret
xor
pop
fnstsw
icebp
mov
pop
cmc
stos
pop
xlat
and
dec
sbb
inc
xchg
mov
adc
mov
sarl
leave
clc
scas
mov
mov
push
push
stos
in
mov
cmp
pop
popa
outsb
outsl
mov
cltd
push
or
fistps
test
and
ja
loope
xchg
lods
bnd
fdivs
imul
aam
in
adc
xchg
push
mov
push
pop
jbe
rcrb
and
movsl
dec
mov
push
mov
std
ret
mov
ret
fsubrl
pop
lds
inc
insl
xchg
scas
repnz
push
adc
icebp
fsubrp
cmpsl
into
sbb
cmp
es
sti
xor
andl
mov
das
into
pop
sub
int
xor
cwtl
lret
int
les
xor
add
stc
test
fbstp
in
in
mov
push
jae
pop
fbld
mov
insb
fstpt
sub
insl
jne
les
adc
xchg
ret
pop
dec
into
pop
pop
mov
jno
aam
or
lahf
sub
lock
in
xchg
into
push
stos
xchg
xor
xor
leave
pop
into
cltd
insl
pop
mov
lret
dec
gs
pusha
adc
xorb
lock
xorb
outsb
stc
gs
shrb
lods
out
pop
dec
lods
les
popf
pop
sub
push
cmp
sub
sub
scas
loop
test
testl
enter
mov
add
xlat
nop
add
orb
push
push
cltd
int
test
adc
inc
out
cmp
jmp
mov
loop,pt
jp
shlb
adc
dec
addr16
int3
cmpsb
jns
inc
mov
sub
mov
loope
xchg
xor
mov
aas
xchg
xchg
leave
inc
xlat
rol
mov
sbb
mov
inc
sbbl
cmp
aas
pop
mov
mov
add
push
jmp
shl
pop
adc
scas
push
das
mov
mov
shlb
add
sbb
hlt
xor
pop
sub
pop
test
jg
out
jle
gs
inc
outsl
fnstenv
mov
scas
sbb
iret
aam
or
movl
lret
mov
inc
mov
and
lods
inc
dec
cmp
push
xchg
test
inc
jp
ss
cmpsb
add
jecxz
ret
mov
pop
ljmp
push
sub
cmp
sub
fs
imul
mov
inc
iret
test
push
mov
pusha
in
pop
pop
lock
shll
fidivl
jb
jbe
inc
cld
test
fdivp
cli
push
in
scas
in
pop
jae
mov
stc
repnz
gs
mov
push
add
mov
pop
jge
push
negl
fsts
adc
insl
outsb
loopne
ja
arpl
fiaddl
jb
shlb
pop
fisubrl
jnp
pusha
out
adc
mov
movsl
push
push
test
jl
and
lcall
mov
sbb
fwait
insb
push
imul
sbb
fscale
out
pop
movsb
mov
inc
stos
stc
mov
pop
dec
xchg
dec
iret
push
sub
lret
xor
stc
outsb
mov
jge
jae
repz
repz
outsb
popa
cmpsl
dec
pop
push
sbb
add
aam
adc
pop
push
sbb
pop
out
mov
cmc
mov
rorl
out
mov
test
movsb
adc
dec
sub
or
shrl
rcl
mov
rorb
mov
int
mov
adc
add
insb
sbb
sub
hlt
jg
pop
lret
mov
xor
insb
sbb
or
daa
lods
push
cmp
ror
inc
push
sbb
outsl
xor
pop
mov
jg
lahf
cmp
sahf
jp
push
lea
iret
xchg
pop
jmp
inc
outsl
mov
push
sbb
gs
lret
dec
cmpsb
mov
je
adc
or
xor
dec
xor
xchg
push
adc
lret
in
pusha
idivl
daa
out
jnp
dec
nop
fs
out
mov
jae
mov
sbb
or
dec
outsl
dec
outsb
in
inc
sub
gs
dec
mov
aam
mov
movsb
jmp
sub
fsts
sbb
enter
pop
iret
jo
fidivl
decl
stc
mov
xor
das
jmp
fidivl
mov
fdiv
inc
jmp
adc
push
cmp
rolb
xchg
xchg
fisttps
add
jle
lret
adc
sbb
dec
pop
fs
jl
pop
je
dec
stc
out
in
mov
adc
ss
fcmovnb
icebp
cltd
xor
sbb
lods
and
in
into
adc
in
mov
vmovq
rcll
jecxz
mov
mov
mov
sub
xor
push
imul
mov
xor
xchg
rolb
lret
push
jne
loop
add
icebp
loope
scas
mov
mov
inc
jmp
outsl
leave
insl
dec
stc
fldcw
into
cmp
insb
sahf
inc
loopne
jne
cld
iret
xchg
roll
mov
imulb
in
lret
nop
xlat
out
push
fbstp
lcall
cmp
inc
lea
in
mov
rorl
mov
mov
xchg
std
pop
jo
or
sti
fs
cs
stos
dec
xlat
loop
adcl
push
cmp
mov
jnp
mov
nop
cmp
inc
popa
cmp
cld
insb
push
ja
fcompl
pop
rcll
mov
inc
iret
and
add
sti
in
aam
fldcw
je
inc
add
inc
sub
xor
xchg
jae
add
movl
enter
sub
inc
and
ficompl
xlat
push
scas
or
rorl
xchg
mov
bound
movsb
das
push
adc
sti
cmc
out
inc
adc
cmpsl
sub
pop
rcll
movsb
push
sub
in
mov
xchg
jae
add
sbb
test
mov
out
cmp
lcall
mov
push
ret
popf
jg
add
adc
jno
lret
into
and
sub
add
dec
movsl
mov
and
cmpsl
imul
cmpl
add
icebp
xchg
rclb
mov
pop
pop
ljmp
or
fmull
push
addb
movlps
sbbb
dec
jl
fsubr
sti
scas
pshufw
fldt
nop
mov
test
out
in
int
out
test
je
aas
flds
das
push
loope
sub
fiaddl
dec
xchg
and
jnp
push
ret
fistps
xor
mov
sbb
stos
jbe
pop
push
mov
mov
xchg
in
sbb
pop
loope
pop
or
mov
pmaxub
mov
cmpl
sub
pop
cmp
cld
add
rcrl
cmp
add
sbb
fldenv
in
sbb
or
and
inc
dec
movsl
dec
push
sahf
adc
jle
cmp
jg
cmp
cmpsl
and
popf
imul
fidivl
push
mov
sbb
jns
xchg
aaa
mov
pop
nop
mov
pop
movsb
adc
mov
mov
cmp
adc
bound
imul
mov
jns
cmp
mov
sub
xor
in
push
or
push
and
pop
cmp
or
and
cmp
fs
mov
mov
add
ja
cld
jecxz
ljmp
sub
jne
xchg
int
and
jmp
pushf
xor
imul
inc
mov
in
lret
cmp
xor
inc
xchg
and
cmp
dec
add
loope
sbb
or
cmp
xchg
movb
lea
pop
enter
iret
lea
ljmp
pop
pop
notl
cmp
push
jo
sarb
xor
mov
xor
shlb
jbe
movsb
add
sbb
rcl
pusha
push
xor
pop
sub
fstp
imul
lock
mov
mov
cmp
mov
mov
or
iret
dec
pop
leave
jmp
inc
insb
mov
cli
pop
imul
aaa
in
les
outsl
dec
and
inc
popa
sahf
push
negl
dec
mov
out
bound
in
aad
mov
in
mov
xor
sbb
adc
pop
aam
fistl
mov
je
inc
pop
stc
mov
sub
leave
pop
test
js
cli
xchg
jge
mov
mov
mul
xchg
push
mov
fucomi
jnp
jno
mov
scas
incl
xchg
ret
popa
dec
and
inc
sub
pop
mov
arpl
repz
pop
iret
lcall
les
xor
xor
into
mov
jmp
clc
sbb
or
jns
xor
mov
add
je
mov
cs
add
push
outsb
fiadds
inc
mov
xchg
mov
push
sbb
repnz
hlt
pop
cmp
jecxz
jl,pt
dec
mov
cmpsl
dec
sbb
das
fildll
lret
mov
fcmovne
mov
lds
rcrl
push
push
jge
in
lods
lret
gs
adc
cmovo
mov
xor
out
ret
adc
cmp
xchg
std
fsub
mov
dec
dec
push
sbb
repnz
dec
push
push
xor
mulb
inc
sbb
fcom
mov
ret
lahf
jg
jb
add
pop
mov
or
fwait
push
rcrl
jmp
cmp
sarl
and
xor
mov
push
pop
ss
jae
xlat
push
push
aam
add
test
lret
jbe
out
cmp
adc
jno
rcll
inc
sbb
mov
dec
fiadds
jbe
in
push
sub
mov
push
movsl
push
outsb
in
pushf
test
sub
jge
mov
xchg
insl
inc
je
mov
mov
js
lcall
pop
pop
divl
loop
inc
arpl
mov
into
inc
mov
sub
push
xlat
add
aaa
pop
and
data16
or
out
into
shl
stc
mov
sbb
pop
rorb
cmp
aaa
fnstsw
add
fwait
cmp
js
xchg
lcall
mov
mov
arpl
mov
mov
imul
shlb
or
stos
clc
ret
mov
push
int
jp
repz
mov
imul
fcmove
mov
xchg
cmp
push
nop
jnp
stos
roll
push
ret
adc
cmp
imul
sub
test
mov
popf
outsl
enter
cwtl
test
loop
dec
das
loopne
xor
mov
push
shl
mov
mov
mov
inc
or
mov
add
jmp
lods
push
fcmovnu
cli
loopne
cmpsb
mov
in
xchg
in
jge
add
pop
in
das
loop
pop
mov
mov
jb
or
jmp
stos
xor
ds
adc
inc
adc
lods
fdivl
or
xor
xchg
mov
test
std
mov
fstpt
sub
mov
and
and
outsb
or
rolb
dec
jg
loope
sbb
jbe
dec
aaa
xchg
scas
and
mov
pop
mov
push
push
fwait
add
popf
mov
aam
inc
mov
stos
xor
xchg
xchg
push
cltd
popf
call
pop
mov
inc
ret
sbb
and
mov
jl
aaa
jne
and
xchg
mov
in
push
loope
out
outsl
mov
shl
jge
pop
orps
push
sbb
aaa
lock
pusha
subb
ret
add
jns
jbe
mov
jmp
mov
test
faddl
add
ret
fwait
leave
loopne
or
xchg
cmc
pop
shrl
pop
cmp
mov
shr
and
rorb
hlt
pop
pop
mov
loopne
imul
dec
cwtl
movsb
xchg
sbb
xor
or
dec
xor
jae
pushf
push
mov
xchg
insl
adc
stos
mov
cmp
xor
sbb
movsb
dec
icebp
data16
pop
and
push
loope
mov
sbb
and
out
inc
rol
mov
lahf
pop
xor
mov
jp
xchg
fsts
sub
xchg
cs
mov
cmp
push
xor
jno
mov
inc
dec
cmc
fwait
cli
ss
loop
cmp
and
ret
iret
cli
pop
int
jl
in
aaa
scas
mov
xchg
mov
movsl
leave
push
scas
inc
loop
jae
lods
sub
les
ja
pop
cmp
xor
in
xchg
enter
and
movl
loop
shll
testb
je
ficompl
je
sahf
cmpsb
or
sti
fsts
adcb
and
push
inc
repz
add
inc
in
sahf
hlt
cmp
pop
push
ljmp
mov
popa
jp
dec
ds
aam
or
or
pushw
mov
jo
fstpl
shlb
mov
pop
jno
insb
and
xchg
lods
gs
or
jo
ja
adc
adc
out
mov
inc
into
jb
mov
std
inc
int3
mov
jle
cmpsl
movsb
inc
adc
popf
push
mov
mov
enter
adc
into
or
cmp
mov
aam
sbb
je
imul
jle
jbe
popf
push
cwtl
out
addr16
cmp
ja
pop
cmc
clc
lcall
and
jecxz
add
inc
xchg
xchg
mov
ja
and
pop
sti
jae
and
out
mov
and
sub
cmp
cmc
adc
imul
and
test
and
dec
je
mov
push
jo
pusha
jecxz
push
fdiv
sbb
data16
sti
rclb
mov
js
lcall
in
cld
mov
and
adc
jl
std
les
icebp
insb
adc
int3
lock
das
mov
fsubrs
or
sbb
and
and
popa
push
pop
lock
and
inc
enter
or
out
cwtl
pop
bound
mov
and
cmpsl
repz
dec
js
or
loop
push
cmpsl
or
std
mov
movsl
out
repz
sbb
and
mov
aam
or
pop
dec
sti
mov
les
sbb
or
in
shlb
nop
icebp
mov
or
and
dec
or
call
call
dec
repnz
das
jae
sbb
adc
mov
sbb
lods
cmpsb
loope
adc
mov
mov
cld
mov
sar
stos
mov
push
cli
xchg
cld
xor
addr16
push
insb
out
sahf
loope
adcb
dec
repz
inc
iret
nop
add
xchg
or
mov
stos
outsl
mov
push
sub
add
push
pop
fwait
xchg
in
les
jp
stc
pop
mov
dec
pop
aas
loopne
xchg
pop
jb
ja
movsl
sbb
int3
mov
add
xor
xchg
xor
pop
shufps
cmpsl
std
mov
mov
int
sahf
cmp
bound
sbb
push
nop
lcall
movsl
fcoml
or
lock
lock
pop
ljmp
sub
lahf
mov
insb
mov
dec
or
sar
mov
test
sub
hlt
loopne
icebp
cli
xor
imul
push
aam
xor
pushf
inc
adc
push
inc
and
dec
cmpsb
rolb
jle
pop
pop
stos
std
mov
sbb
adc
mov
stos
xchg
std
or
shll
jo
lahf
scas
push
arpl
pop
mov
popa
mov
jg
aaa
add
jne
or
sbb
push
std
jnp
jg
sarl
lret
mov
xor
mov
add
pushf
or
lock
jmp
xchg
mov
mov
cmc
cmp
lea
jge
mov
imul
sbb
jb
push
jg
test
sub
xor
orl
js
hlt
data16
ret
insb
repnz
cmp
xlat
hlt
inc
sub
jns
pop
mov
or
push
pop
push
adc
inc
push
insl
aad
dec
rclb
mov
pop
mov
ret
dec
pop
aaa
push
icebp
mov
cmp
push
shll
cmp
rcll
mov
ficoms
pop
int3
idiv
sbb
int3
or
pop
dec
push
lods
jecxz
inc
and
inc
and
pop
mov
ret
sbb
cltd
sahf
xchg
shlb
xchg
gs
ret
scas
stc
cmp
js
xchg
aaa
in
sbb
popa
dec
sub
xlat
add
jge
sbb
lods
nop
adc
sbb
jno
shlb
stc
lret
pop
jmp
cmp
adc
inc
push
inc
fcoml
fstps
push
stos
int3
mov
divb
enter
adc
inc
js
jne
aaa
and
enter
rcl
sti
shlb
out
nop
xchg
and
lods
adc
xchg
cmp
inc
movsb
fisubrs
sahf
push
push
mov
xchg
dec
mov
gs
or
movsl
pop
inc
or
or
fcomi
push
jbe
shll
hlt
adc
pop
and
jno
or
test
mov
loopne
ds
xchg
inc
and
aaa
cmc
sub
add
or
add
cmp
mov
add
push
mov
mov
dec
jle
out
push
jp
das
in
into
pop
and
inc
mov
pop
addb
mov
push
jmp
ja
bound
cmp
and
inc
hlt
cmp
xchg
push
addr16
pop
xor
push
fsubrl
mov
xor
add
jl
pop
les
test
les
fldz
sub
imul
fisttpll
data16
cld
test
pop
outsb
xchg
inc
mov
mov
and
sti
xor
ds
inc
mov
xchg
and
pop
shlb
lret
xor
push
pop
jmp
lcall
jecxz
adc
mov
jo
xlat
call
mov
test
ljmp
sahf
mov
xchg
insl
jo
mov
pop
outsb
scas
out
add
shll
push
aas
jg
testl
test
push
jmp
pop
sbb
data16
ds
insl
out
dec
in
cmpsl
xlat
xchg
mov
xchg
ret
stos
ljmp
movsl
in
cmp
sub
or
test
mov
fs
or
repz
rorl
call
inc
loop
jns
and
cli
inc
std
mov
mov
xchg
mov
or
push
into
sub
popf
repnz
push
xchg
xchg
cmpsb
outsb
or
ljmp
fstpt
ss
sti
adc
cwtl
shl
shrl
rcrl
mov
lahf
xchg
inc
cmp
repz
fs
or
addr16
ja
fidivrl
dec
mov
dec
xor
pop
fwait
scas
push
lock
fildl
dec
sub
add
cmp
mov
mov
push
scas
mov
mov
out
stc
and
loope
call
loopne
push
inc
mov
hlt
mov
add
fistpll
iret
cmpsl
sub
jmp
mov
push
jl
mov
shrl
scas
sbb
mov
pop
and
addr16
setle
aaa
add
stos
mov
or
mov
shll
or
fnstcw
sti
mov
mov
test
inc
lret
and
mov
mov
je
shll
pop
mov
jb
orl
jns
ret
add
bound
push
mov
jbe
incb
divps
mov
add
push
jno
cli
mov
je
mov
cli
adc
icebp
add
push
outsb
sbb
xchg
push
lods
add
pop
xchg
pop
cmpsb
or
sbb
xor
xlat
jle
sub
adc
push
xor
in
outsb
inc
mov
sbb
out
jg
add
dec
addb
andl
mov
fmul
sub
mov
movl
repnz
mov
dec
rcll
insl
ret
call
push
mov
subl
sbb
mov
sbb
push
lcall
jle
ss
and
xlat
push
jmp
mov
push
ficoms
or
mov
or
rorb
sub
jle
out
mov
les
gs
pop
cs
mov
popf
mov
mov
mov
ja
mov
insb
fwait
push
icebp
cld
lods
jecxz
xor
nop
pop
negb
or
out
pop
test
and
rolb
and
xor
and
ret
jbe
cmp
mov
xor
ljmp
xor
in
xchg
scas
repz
lds
bound
lea
xor
inc
and
pop
and
push
or
mov
or
fwait
cltd
push
lret
xchg
dec
insl
pop
lea
adc
lcall
pop
mov
sub
cmpsl
add
jp
push
es
jo
push
inc
push
add
lcall
fbld
mov
dec
push
mov
and
test
jg
lds
dec
shl
movsb
adcl
ret
inc
fstps
lret
sbb
or
push
mov
bound
adc
inc
sbb
adc
add
xlat
push
hlt
cwtl
jnp
pusha
cs
and
inc
jbe
imul
enter
push
jb
and
jge
lods
into
jb
in
js
xor
cld
sbb
push
test
sub
mov
aam
sarl
xlat
mov
dec
or
xor
call
cli
shrb
push
int
push
or
loope
cmp
mov
popf
aas
ret
cli
sub
addb
sub
jp
sahf
and
xchg
add
daa
pop
xor
sbb
cmp
stc
in
test
out
or
loopne
aam
adc
pop
les
pop
in
fmul
sub
test
clc
ret
test
ja
mov
lretw
sbb
aas
pop
fs
outsl
mov
mov
lret
out
lcall
push
sbb
js
or
pop
xor
jmp
mov
scas
fnstsw
repz
jge
mov
clc
ljmp
cmpsb
rol
ret
iret
shr
inc
inc
jp
arpl
mov
daa
mov
ljmp
xlat
dec
adc
mov
add
ljmp
push
inc
mov
mov
andl
shll
sahf
lret
fildll
stos
mov
popa
sbb
push
into
nop
dec
xrelease
cmp
daa
xchg
or
fistpll
lock
loope
mov
sub
pop
push
push
mov
pop
flds
dec
adcl
rol
or
sub
and
inc
or
pushf
push
fadds
fs
out
sbb
jp
nop
jp
out
and
rclb
sarl
int
in
push
fsubl
xor
lret
sahf
mov
dec
jo
ds
ljmp
xchg
or
or
jg
inc
jns
stos
pop
jge
loopne
xchg
fdivl
insb
and
jne
mov
clc
jbe
mov
xchg
mov
daa
push
and
out
sub
aas
sub
lret
popa
mov
shlb
shrl
mulb
mov
or
or
and
data16
int3
ret
hlt
ja
ret
movswl
inc
mull
imul
addr16
adc
sbb
test
xor
xor
push
popa
push
lock
decl
stc
lock
cli
bswap
daa
pop
and
outsl
or
inc
pop
adc
xchg
idiv
and
pop
in
sbb
mov
outsb
or
xor
loop
jo
clc
test
add
push
jns
xor
mov
pop
and
mov
adc
aad
mov
xchg
or
mov
dec
or
pop
dec
shrb
push
mov
mov
xorl
inc
das
cltd
mov
jl
jp
aaa
loop
inc
call
fldt
adc
inc
frstor
fimull
ret
shr
jg
cmpsl
mov
cmp
push
cld
orl
out
loopne
jno
xlat
ss
dec
ss
lds
int
jno
aad
jl
es
xor
push
adc
test
cmp
je
in
imul
adc
ret
loope
insl
or
cmpl
or
data16
cmpsl
mov
add
push
adc
popf
jecxz
fldl
dec
pusha
jb
outsl
into
sbb
pop
test
mov
cmp
cmp
pop
mov
adc
data16
insl
lret
mov
add
mov
mov
sbb
loop
addb
push
scas
add
adc
push
inc
xlat
sahf
push
ret
pop
hlt
dec
add
out
sbb
xlat
cmp
imul
push
pushf
add
and
scas
cli
jmp
cmp
xchg
cmp
or
sbb
adc
add
sahf
dec
js
push
cmp
mov
in
lret
out
stos
in
xor
outsl
lahf
test
icebp
inc
aam
mov
sub
xchg
xchg
sarb
xorb
or
mov
mov
add
shlb
sbb
sbb
adc
and
jmp
push
xor
pop
mov
sbb
push
out
mov
in
arpl
xchg
cltd
jb
jl
jo
pop
repnz
test
push
xlat
sti
cmp
into
mov
push
pop
pop
std
cmp
xchg
mov
xchg
out
xor
lds
pop
adc
push
popa
xchg
imul
idiv
jo
das
or
sbb
jnp
inc
test
hlt
mov
in
add
test
mov
out
pop
je
orl
movsb
xlat
out
int
xchg
xor
test
and
movsb
xchg
cmp
mov
cld
leave
dec
push
push
daa
test
out
into
push
or
dec
loop
cli
and
dec
bound
add
fstpl
je
mov
pop
inc
imul
popa
aad
dec
jecxz
das
or
ret
sbb
push
dec
cmc
loop
sbb
fwait
aad
into
jnp
flds
int3
pop
enter
pop
mov
loope
pop
stc
xor
mov
jbe
loopne
mov
movsb
adc
movsl
repnz
inc
ret
jae
inc
mov
sub
bound
test
inc
jle
rolb
lock
and
add
cmp
add
push
in
ja
ret
and
push
insl
stos
lock
push
inc
insl
fldl
mov
fwait
cwtl
adcl
cmc
or
pushf
sahf
xorb
out
movsb
dec
popa
xor
flds
cmc
int3
call
fnstenv
out
pop
pop
dec
xor
jb
outsl
call
test
push
cmpsb
daa
leave
mov
cwtl
test
jae
cmpl
mov
loopne
push
es
mov
xchg
sbb
jnp
inc
sbb
rol
popf
mov
add
cmc
lds
int3
lock
dec
inc
or
adc
mov
sub
cmp
imul
cli
int3
adcl
adc
mov
sub
push
sahf
fbstp
cmpb
mov
jne
stos
or
sbb
in
lret
lcall
or
mov
mov
ret
jle
cwtl
jno
ds
push
sub
or
roll
inc
and
sbb
fs
mov
dec
sbb
xchg
or
fmuls
pop
jo
scas
pusha
add
repz
pop
sub
jecxz
test
mov
sbb
push
cli
dec
add
sub
repz
mov
loope
loope
add
ja
lcall
pop
inc
es
arpl
xlat
xchg
insl
aas
lds
sub
xchg
push
xchg
aaa
add
jge
dec
mov
xchg
and
insl
pop
xor
in
daa
mov
testb
loopne
jl
inc
inc
cmpsb
lahf
test
rorb
and
fs
cmp
adc
inc
incb
in
stos
mov
imul
jle
mov
jbe
xor
fisttpll
jmp
outsl
arpl
mov
cs
xor
sub
adc
out
scas
data16
inc
fs
fistpl
push
sub
or
pop
int3
sbb
xor
mov
push
pcmpgtd
adc
lds
imulb
not
lock
ja
mov
stos
pop
aaa
xchg
rcll
mov
push
inc
cld
push
add
pop
sub
sbb
xchg
pop
sub
push
shll
movsb
fs
mov
mov
dec
jmp
ja
dec
and
xchg
int3
jno
mov
into
fdivl
push
lods
dec
cmp
sub
xchg
jo
push
and
clc
dec
jecxz
call
adc
rorb
cs
cmp
mov
cltd
rcrb
sbbl
pop
inc
mov
mov
dec
mov
cmpsl
test
pop
sub
mov
out
ror
loopne
mov
mov
jl
pop
cmp
out
sub
dec
fidivrs
shll
dec
sbb
dec
in
out
push
test
negl
sbb
inc
lahf
stos
fdivrp
cld
jno
cmpsb
in
lret
lock
cld
insb
jmp
sbb
lret
aam
lcall
push
or
pop
pop
and
adc
jo
inc
jge
pop
cmc
movsb
jb
fists
in
push
roll
cwtl
xchg
sub
mov
xor
mov
pusha
cld
nop
in
into
outsl
lds
jmp
dec
out
cmc
je
dec
movsl
jg
sbb
push
inc
movsl
lahf
cld
jp
cmp
push
icebp
sub
jo
popa
inc
pop
sti
shll
mov
jl
cltd
jb
xchg
iret
xchg
push
adc
in
fidivrl
mov
lds
iret
hlt
or
in
pushf
outsb
loop
add
imul
add
mov
es
or
push
nop
mov
pop
dec
aam
pcmpgtb
std
ja
mov
mov
pop
adc
cli
enter
call
leave
cmpsl
dec
mov
sbb
mov
shrl
je
pop
andb
lock
popf
and
adc
inc
insl
mov
aad
fxtract
dec
jmp
icebp
or
xchg
mov
pop
add
ret
mov
out
mov
jg
enter
pop
test
movb
lret
jle
mov
adc
fs
push
stos
andl
aaa
jmp
pop
out
cmpsb
mov
fldl2t
or
inc
stos
lds
rcl
mov
ds
js
scas
and
mov
fstpl
aas
repnz
in
in
pop
xchg
push
insb
or
das
loope
push
mov
lock
repnz
out
pusha
sbb
jno
cmp
dec
push
sbb
pop
xchg
inc
loopne
pop
mov
jl
aaa
bound
sbb
mov
xchg
sbb
imul
xor
adc
scas
test
cmpsb
push
xchg
sbb
invd
jecxz
orb
cmp
imul
inc
xor
fldt
mov
inc
push
push
leave
scas
neg
in
cwtl
out
movsl
daa
daa
stos
jmp
dec
cmpsl
push
loop
push
mov
mov
sub
push
movsl
into
mov
jbe
clc
push
ret
and
pop
jge
rolb
lahf
sbb
mov
cli
popa
leave
jl
jne
xchg
bound
jl
inc
loopne
xchg
sbb
cmc
mov
dec
jl
dec
ss
jge
and
adc
inc
ljmp
cmp
jle
dec
imul
push
mov
jnp
or
pop
test
sarl
jecxz
sahf
inc
or
lcall
sar
push
sub
dec
lods
dec
mov
call
aas
movsb
xchg
jp
aam
fstps
cmpsb
dec
aaa
and
sahf
in
adc
lret
or
sub
cmp
clc
mov
aad
mov
mov
iret
clc
pop
dec
mov
add
adc
out
pushf
in
push
cmp
or
mov
data16
push
aas
add
jbe
roll
test
xorl
lock
repnz
int
mov
pop
dec
sub
cmpl
pop
les
in
in
sub
mov
push
hlt
icebp
inc
push
in
add
or
adc
aaa
xchg
adc
jns
lret
movsl
lock
mov
push
sub
or
not
inc
lahf
ret
stos
adc
fwait
jg
jne
xchg
jmp
dec
in
push
iret
aaa
push
mov
sbb
aas
jmp
scas
fidivl
mov
aam
lahf
lea
mov
roll
rorb
outsb
sub
les
loopne
lds
cld
xchg
aam
mov
and
out
xor
cwtl
stos
stc
pop
cmp
popf
jbe
inc
jecxz
sbb
sub
add
jb
nop
cmp
dec
cmp
dec
sub
imul
pop
rclb
test
outsl
enter
gs
mov
cmp
mov
mov
push
imul
sahf
addl
pop
mov
cmp
mov
in
xchg
xor
jmp
mov
or
push
sbb
adc
mov
push
aaa
into
or
push
fisubrs
in
xchg
lds
inc
xor
push
hlt
and
les
sahf
arpl
dec
out
push
sbb
iret
int
inc
xorb
push
or
in
pop
inc
fildl
jne
xchg
dec
lahf
cld
sub
aam
push
jb
icebp
jge
inc
out
sbb
jae
and
je
jno
test
idivb
aas
push
mov
leave
pop
or
dec
sub
daa
lods
xchg
cmp
nop
push
addl
pushf
jg
or
add
jp
arpl
jnp
in
push
lret
inc
mov
fimuls
sub
fwait
stos
lret
popf
cmpsl
leave
popa
mov
gs
or
imul
loopne
and
aam
jge
mulb
or
pop
fildll
lss
in
je
jb
add
rcll
mov
in
flds
push
outsl
fwait
cltd
and
mov
or
movsb
test
cmp
loop
xchg
add
push
test
cmp
pop
popf
shr
call
insl
push
scas
aaa
rorb
push
cmp
popa
out
adc
sub
mov
inc
add
aad
inc
insl
mull
bound
ret
subb
adc
sub
xor
xchg
add
repnz
pop
sarl
pop
stos
jb
mov
xchg
mov
xor
xor
cmp
cmp
ja
push
movsb
xor
cltd
push
fwait
out
sub
pusha
jns
jo
test
sbb
inc
xor
lea
enter
and
shlb
aad
pop
test
xor
pop
stos
repnz
mov
stos
subl
inc
add
and
pushf
sub
and
and
jg
je
ds
addr16
adc
dec
xchg
or
lock
loope
cmpsl
iret
or
pop
jbe
add
out
sbb
xchg
adc
adc
test
loopne
jg
xchg
lahf
aaa
pop
pop
and
in
jbe
test
jle
add
push
pusha
pop
or
jg
push
add
xor
fcmovu
outsb
jbe
stos
hlt
ds
push
sbb
fwait
adc
dec
or
mov
jge
inc
sub
fcoms
push
fldt
or
xor
out
stc
clc
jge
and
mov
enter
sbb
mov
stos
test
mov
jb
jecxz
cs
pop
addr16
arpl
lock
bound
push
mov
bound
add
cmp
fistpll
sub
push
daa
scas
push
lret
pop
mov
sti
repnz
fwait
int3
inc
sti
fbstp
ds
xor
shlb
jne
jmp
xor
add
cmp
sbb
pop
xchg
in
or
mov
sub
adc
mov
popa
daa
xchg
dec
xchg
inc
loop
adc
jb
xor
popa
or
inc
rolb
stos
pop
push
lea
daa
fmull
mov
cmc
or
cmp
pushf
pusha
paddusw
ds
popa
testl
adc
out
sbb
lahf
and
and
fcoms
out
push
and
adc
jecxz
cmp
lods
push
daa
sbb
popa
jbe
adc
jge
jbe
imul
repnz
cmp
sbb
stc
pusha
or
pop
lods
cmp
pop
xor
hlt
into
push
pushf
jecxz
in
sub
jmp
js
fidivs
mov
cmp
ret
push
xchg
mov
lods
xchg
mov
fdivl
outsl
ljmp
inc
dec
dec
lret
mov
pop
push
jmp
int3
push
pop
daa
leave
lock
mov
or
mov
and
dec
or
pop
loopne
fmuls
adc
push
ret
xchg
stos
push
push
push
xchg
test
lea
js
cmc
lret
xchg
in
daa
fidivrl
pop
aas
ljmp
jle
xchg
movsb
jb
push
hlt
dec
adc
cmp
pop
hlt
test
outsb
xchg
sbb
jge
mov
jb
sbb
pop
mov
inc
mov
scas
sti
or
push
jle
mov
outsl
adc
sub
dec
rolb
jbe
xor
mov
pop
sbb
cmpsl
rolb
lahf
pusha
push
pop
scas
je
and
call
push
movnti
or
test
addr16
popf
jle
out
rclb
stc
dec
pop
js
sub
aaa
les
sub
lahf
in
and
jb
shll
xor
xor
ret
push
mov
movsl
fwait
push
addr16
jl
adc
jae
in
popf
mov
xchg
mov
xor
dec
repz
xchg
jge
dec
mov
adc
pusha
rcr
cmp
mov
push
test
push
mov
or
jg
bound
or
add
and
lret
xlat
iret
inc
jo
aam
cmpsb
repnz
and
add
sbb
movl
out
inc
jne
xlat
loopne
imul
std
ss
bound
jno
fidivl
xchg
hlt
xlat
into
jo
stc
mov
push
sub
or
ret
gs
adc
push
iret
fldl
pop
dec
scas
mov
xchg
xchg
loop
sahf
aam
jo
sbb
adc
das
add
repz
movsb
fidivl
dec
jl
push
repz
jo
gs
es
and
dec
and
pop
push
sbb
cwtl
pop
sbb
loopne
cwtl
mov
and
dec
cmp
sbb
dec
sub
dec
mov
or
push
pop
icebp
xchg
mov
jns
shll
ret
cltd
scas
test
movl
insb
push
push
add
mov
dec
mov
xchg
mov
inc
cmp
lds
jmp
jne
xchg
loope
and
adc
push
es
inc
movsl
outsl
movsb
or
inc
std
mov
jns
jae
cwtl
test
and
fs
cmp
dec
shlb
jnp
xchg
nop
mov
mov
add
xor
fbstp
aam
pop
xchg
cmp
mov
sbbl
addb
xchg
jmp
add
mov
jp
mov
xchg
push
call
or
lods
adc
popa
int3
mov
inc
std
pop
fldenv
cld
add
add
xchg
rorl
sub
mov
cmpsb
rcrb
sbb
push
push
les
fwait
dec
mov
jmp
jmp
sbb
mov
dec
sub
cmp
mov
dec
movsb
mov
gs
orl
testl
test
add
xor
in
lods
sbb
and
jns
jo
out
xor
mov
xchg
cmpsl
cmp
out
or
arpl
sbb
push
mov
add
push
cmp
xchg
jmp
lret
xchg
xor
xchg
ror
add
and
idivl
jnp
inc
lea
xor
dec
ds
or
ret
mov
jae
sub
sahf
mov
push
scas
xlat
je
adc
cmpsb
jae
and
aas
sub
cmp
into
inc
andl
cwtl
movsb
cltd
int
ss
insb
stos
add
mov
dec
pop
in
cmp
sub
and
jnp
test
fldcw
or
xchg
lcall
fdivrl
cmp
ror
xor
leave
ss
inc
jbe
cmp
movsb
pop
lock
cs
ret
xchg
test
filds
out
xor
lods
inc
cmp
xchg
and
sub
fimuls
pop
push
repz
sbb
cmc
jle
out
sbb
inc
inc
mov
std
mov
jne
pop
adc
cmc
es
cmc
push
mov
cmpb
pop
mov
xchg
pop
out
ljmp
cld
roll
push
adc
jae
mov
sahf
scas
push
lcall
push
push
pushf
mov
js
sbb
scas
roll
mov
sub
lds
cwtl
aad
in
mov
les
pop
push
pop
adc
hlt
int3
pop
push
push
roll
pusha
sbb
popa
cmp
rol
sbb
pop
das
aad
scas
xchg
cmp
add
out
bound
imul
inc
lock
movsl
mov
pop
std
jno
pop
sbb
mov
arpl
sbb
jnp
mov
dec
xchg
mov
add
ror
movsb
cmp
ds
in
cmpsl
sti
jmp
test
popl
cmpsb
repnz
fstpt
pop
jae
push
jmp
movsb
lea
repz
xchg
jo
cmp
pop
or
push
lcall
xchg
mov
mov
stos
xchg
std
repnz
adc
int3
sarb
test
cli
jb
mov
inc
cmp
jo
sub
nop
sbb
mov
rorl
dec
stos
stos
les
mov
test
inc
mov
fsubrp
inc
xchg
lea
jo
out
add
fistpl
jl
andl
pop
add
ja
xchg
or
add
movsb
rorb
leave
jg
xlat
movb
leave
jnp
repz
mov
cmp
pushf
lret
mov
std
mov
out
xor
hlt
inc
insl
mov
sub
movsl
int
cs
jno
push
imul
cmpb
cmpsb
movsl
int3
sub
lock
sbb
push
mov
leave
jne
rcrb
lea
xor
jno
aaa
jge
dec
add
add
cmp
movsl
pop
or
add
pop
dec
xchg
xor
sbb
push
repnz
pop
ret
aam
test
jp
or
fdivrs
cmp
sahf
es
loopne
ljmp
dec
jl
mov
or
in
bswap
sbb
std
idivl
xor
outsb
pop
adc
imul
sub
sub
and
xor
sub
out
pop
cmpsb
sbb
cli
push
mov
fsubl
sbb
pushf
lds
sbb
adc
rcrl
jge
dec
aas
cmpsl
pop
repnz
cmp
sbb
or
hlt
in
mov
xchg
clc
arpl
cli
dec
bound
adc
dec
or
push
aam
inc
imul
andl
negl
stc
inc
test
insb
fscale
fs
sbb
mull
mov
jmp
mov
mov
outsb
iret
xor
cmc
adc
pavgw
cwtl
inc
in
mov
addr16
xchg
xor
push
xchg
adc
add
jae
xchg
mov
push
std
mov
fucom
cmp
push
and
xchg
jae
jmp
test
mov
enter
pusha
pop
out
insb
xchg
ljmp
ja
inc
outsl
mov
popa
notl
xchg
mov
mov
mov
inc
xor
outsl
pop
inc
cmp
loop
notb
hlt
lcall
push
out
sub
jle
and
iret
daa
scas
mov
dec
imul
test
leave
pop
mov
and
mov
adc
pusha
bnd
dec
mov
sub
enter
mov
or
ds
adc
ficoml
mov
and
inc
pop
jge
rcll
jmp
mov
or
addr16
xchg
cmp
dec
jg
dec
cld
xchg
pop
leave
push
add
sub
clc
ljmp
std
mov
imul
std
adc
cltd
fsubs
add
cmpsl
inc
jl
xor
rcll
sbb
mov
dec
pop
jge
fdiv
outsb
movsl
xor
xchg
push
pushf
enter
xor
fildl
repnz
cmpsb
lea
jge
sbb
add
fwait
push
mov
mov
lds
fbstp
jne
dec
fwait
jns
xchg
loope
jae
push
in
iret
mov
push
jp
sbb
cltd
sbb
pmulhuw
fdivrs
xlat
outsb
pusha
insb
cmp
mov
aam
add
dec
nop
outsl
rcll
adc
xor
repnz
stc
in
es
ret
add
jnp
ret
xchg
lea
leave
and
jbe
add
sub
into
cmp
pop
stos
movsb
mov
data16
sub
cld
ss
adc
popa
push
jg
pop
aas
insl
fs
je
adc
test
pop
pop
ret
scas
add
lds
imul
push
dec
mov
lea
xlat
sub
ja
xchg
ja
add
pop
test
or
aad
sarl
das
push
mov
lcall
sbb
repnz
data16
adc
adc
mull
jne
and
push
aad
jb
cmp
ficoml
mov
aam
cmp
xlat
fwait
or
inc
sbb
test
push
rcl
sub
mov
mov
sbb
mov
ljmp
push
sub
jg
cmp
out
insb
out
xor
jp
sbb
jnp
rolb
mov
arpl
insl
sahf
insl
or
push
fbld
mov
xor
pop
loop
cwtl
mov
jmp
cmp
adc
xchg
out
rorb
dec
push
jl
shrb
push
inc
ljmp
negb
pop
mov
and
dec
repnz
data16
add
jno
push
fwait
loop
faddp
or
add
inc
idiv
es
adc
dec
sbbb
sub
inc
dec
dec
xorl
cmp
mov
aaa
xor
cmp
andl
xor
popf
xchg
sbb
outsl
or
std
xor
mov
js
mov
test
outsl
xchg
ret
fidivl
lds
add
dec
push
dec
fwait
inc
repz
xchg
enter
and
data16
mov
jp
jae
popa
mov
xor
or
xor
pinsrw
sti
das
test
sub
insb
fidivs
popa
outsl
and
test
dec
dec
cmp
jb
incl
andb
fbld
call
xchg
and
movsl
repnz
jo
mov
ljmp
sahf
or
ss
pop
dec
mov
xor
testl
mov
mov
in
adc
lret
jp
jno
scas
int
je
mov
mov
ss
jbe
xchg
pop
out
into
fisubrs
lahf
mov
xlat
xlat
push
jge
and
mov
test
loope
inc
xchg
mov
xchg
scas
lods
dec
pop
push
mov
mov
outsb
xor
sbb
inc
inc
push
out
imul
je
cld
arpl
cli
hlt
push
cmc
jle
outsb
dec
movsb
pushf
les
in
fucomip
andb
xor
pop
push
in
ret
scas
aaa
cmp
push
jb
fisttps
mov
test
or
pusha
xchg
mov
and
xor
cmp
inc
mov
sbbb
cmpsl
push
test
arpl
fwait
cmp
popf
cmp
repz
cld
data16
rolb
jle
popa
cmp
cvttps2pi
popa
cmp
push
cmp
inc
scas
ss
jno
imul
xchg
jmp
stos
imull
add
fstl
fnstenv
cld
cmp
pop
push
sub
push
out
or
dec
inc
out
clc
dec
adc
adc
pushf
push
mov
inc
aaa
and
out
aam
dec
out
mov
inc
pop
mov
jo
sbb
mov
in
cli
sbb
pusha
pop
sbb
mov
sarl
mov
pop
cmp
inc
add
ret
adc
dec
pop
mov
cs
scas
inc
mov
into
inc
lods
pop
daa
aad
or
test
sub
lret
fcmovu
sti
jmp
mov
cmp
or
lods
dec
loopne
jne
lods
or
subb
aas
push
sub
jg
xchg
push
sbb
mov
in
xchg
push
pop
int3
daa
leave
pop
pop
ljmp
push
and
jmp
xor
sub
mov
cld
ja
mov
jo
add
xor
pop
add
aad
sub
insl
mov
inc
fidivs
inc
sub
addr16
rcll
push
push
jl
sbb
loopne
incb
jae
inc
xlat
pop
push
push
mov
pop
cmpsb
push
bound
je
ds
xor
pushf
mov
pop
pop
aaa
cmp
mov
xchg
imul
mov
sub
sbb
mov
std
jne
xchg
push
adc
xlat
and
add
push
fs
stos
add
and
add
divb
mov
push
add
and
cmp
xchg
sbb
or
pop
xchg
imul
mov
or
jns
ficoml
outsb
or
sub
lahf
or
movsl
nop
fildll
rcll
ret
out
xlat
arpl
and
inc
push
jecxz
ds
xchg
popf
jmp
xchg
add
and
and
xchg
jmp
sbb
out
les
sarb
negb
push
int3
jo
mov
iret
xor
cld
lcall
and
pop
push
and
imull
jae
pop
pop
jno
or
rclb
add
jns
xchg
inc
dec
in
push
hlt
and
ss
cmp
adc
sub
jl
mov
push
cmp
in
push
insb
pop
cld
mov
fistps
jnp
jae
test
clc
cmp
lret
stc
ret
in
jp
aas
xchg
pop
xor
ja
pusha
inc
pop
mov
mov
outsb
cli
pop
repnz
xchg
and
je
push
xor
lock
scas
mov
sbb
ret
push
outsb
inc
mov
mov
ret
test
add
pushf
cmp
inc
push
aad
stos
out
mov
jo
jge
xor
sbb
loop
sub
aad
adc
les
push
enter
adc
aas
shlb
fimull
xor
or
inc
loope
inc
or
fistps
jb
pop
cmp
rol
jns
xchg
ja
lret
std
mov
sub
mov
dec
mov
movsb
ja
das
lods
movsl
cs
sub
dec
mov
xor
lahf
adc
insl
sbbb
psllq
and
push
repnz
shll
ror
mov
xchg
popf
jmp
cmpsb
xor
fcomps
sbb
outsb
stc
mov
loopne
ficomps
test
dec
dec
leave
cmpsl
dec
popa
cmp
stos
inc
in
xor
push
add
pop
cmp
outsb
gs
cld
xor
sbb
cli
sub
stos
cmp
sub
mov
sbb
jb
sbb
aam
incb
mov
xor
adc
and
xchg
add
sub
pop
dec
sub
xchg
nop
lcall
pop
popf
pop
jle
testl
mov
push
cwtl
lods
stos
sbb
gs
lahf
push
xchg
mov
add
jno
enter
inc
fwait
jle
push
into
sbb
cli
xchg
lcall
movups
sbb
insb
stos
push
loope
and
push
inc
and
in
in
sub
stos
loop
pop
mov
adc
lods
adc
jle
and
bound
push
sub
addr16
inc
pop
gs
mov
cmp
int3
stc
xchg
mov
mov
shlb
push
mov
or
mov
andl
jne
add
outsl
into
cmp
mov
push
fcoml
jbe
mov
xchg
stc
pop
xor
lret
hlt
test
lea
mov
inc
mov
cmpsl
cmp
rcrb
dec
or
mov
pusha
outsl
fwait
inc
and
fucomi
insl
sbb
lret
xchg
aaa
push
cmp
cmp
mov
inc
jge
pop
popa
mov
mov
inc
pop
cld
jl
and
jp
das
bound
leave
mov
mov
dec
mov
lds
ret
ss
lret
mull
fsubrp
mov
sbb
and
jmp
push
rcrb
push
and
jmp
mov
stos
arpl
sahf
pop
cmpsl
xor
lret
sbb
std
push
dec
dec
or
lcall
jmp
fs
or
xchg
sbb
out
pop
xor
addr16
shll
loopne
ja
lcall
bound
sbb
cmpl
or
inc
sahf
inc
fwait
loop
les
mov
ret
add
pop
push
enter
out
mov
pop
mov
jae
sbb
mov
lods
jp
adc
push
lcall
pop
test
mov
jmp
inc
ret
iret
sahf
out
fbld
pop
dec
mov
mov
xor
cmp
and
fdivl
sbb
movsb
je
scas
je
sbb
mov
das
cld
test
xchg
notb
mov
insl
ret
out
dec
adcl
std
in
ret
push
lcall
out
xlat
or
dec
sbb
dec
jns
ret
scas
leave
adc
dec
mov
rcll
inc
outsl
xchg
dec
in
push
push
and
test
cmp
stos
mov
cmp
fsubl
movsl
xchg
mov
sbb
subl
insb
xchg
cmp
pop
cld
out
shlb
mov
and
imul
adc
cmp
adc
hlt
and
lock
and
nop
and
mov
in
stc
aas
adc
mov
xor
lods
pop
repnz
cli
push
or
frstpm(287
fnstsw
mov
push
jb
fildl
out
dec
shlb
push
cli
and
sbb
cmp
int
push
jl
wbinvd
sbb
fsubp
xchg
mov
call
push
inc
dec
pushw
icebp
fadds
sbb
mulb
push
add
sbb
or
cmp
cmpsl
add
mov
daa
addr16
mov
pop
jne
xor
xor
daa
out
sub
cmpsl
fwait
cmp
inc
jo
daa
imul
sahf
leave
sub
dec
cmp
xor
sbb
lcall
insl
sub
dec
stos
insl
xor
hlt
push
fnstsw
dec
push
mov
cli
xchg
cltd
int
cld
or
insb
into
sbb
stos
rorl
aas
lret
repz
fstl
jl
inc
cmp
es
lods
sub
mov
push
rep
inc
adc
jp
stos
sub
jbe
or
jnp
xor
ds
dec
push
pop
jae
pop
iret
mov
mov
rorb
fstl
insb
je
xchg
dec
xchg
in
mov
and
das
outsl
cmpsl
cmp
xchg
mov
pop
data16
sbb
lahf
sbb
or
loope
enter
xor
loop
es
mov
mov
mov
test
iret
xlat
push
out
or
rclb
push
dec
lds
xor
xchg
outsl
mov
sub
xor
dec
movsl
fcmovnb
mov
or
dec
or
mulb
adc
cmpsb
pop
pusha
lock
nop
jecxz
mov
xor
subb
mov
ds
mov
mov
mov
call
fwait
sahf
mov
push
xchg
jnp
loope
ds
jle
xor
icebp
mov
push
shrb
jl
pop
sbb
push
xor
mov
out
mov
inc
and
inc
fisubl
cld
sub
pop
mov
enterw
out
push
rcrl
fcomi
icebp
xor
jb
fxtract
out
notl
stos
lods
cmp
adc
or
or
jmp
daa
xchg
aad
and
nop
and
lret
cmp
pop
movsl
mov
push
inc
jecxz
push
pop
xor
push
mov
vcvttps2dq
pushf
stos
cmp
int3
sub
xchg
mov
mov
pop
lds
push
imul
and
cwtl
iret
jecxz
add
or
lock
mov
xor
inc
cli
sub
xlat
sbb
pop
in
push
inc
mov
mov
test
and
mov
pushf
shrb
pop
fsub
adc
adc
jge
pop
xchg
push
inc
divb
stos
adc
mov
or
std
xor
jmp
mov
in
jg
or
or
jmp
leave
movsb
stos
mov
pop
enter
and
or
add
inc
ljmp
shlb
ficomps
pop
test
paddusb
add
mov
fsubl
mov
add
or
insb
dec
or
in
arpl
fwait
inc
test
pop
add
pop
cmp
dec
and
repnz
add
xor
in
add
adc
mov
fsubl
aas
sub
idivb
cltd
int
mov
out
pusha
fwait
mov
mov
outsl
bnd
and
test
add
add
pop
pop
jg
adc
xor
imul
das
add
xor
and
into
icebp
scas
outsl
fdivrs
jbe
add
xor
adc
push
xlat
stos
sahf
into
inc
dec
mov
idivl
sub
test
inc
iret
les
adc
mov
loop
pop
mov
mov
lret
dec
daa
fsts
xchg
or
aad
test
push
mov
cmp
scas
addr16
sub
mov
adc
pop
lahf
or
cmpsb
cld
dec
pop
scas
or
ss
push
sub
hlt
test
inc
pop
or
std
adc
dec
xor
push
daa
pushl
insl
ss
jecxz
sbb
jae
test
and
and
jno
cmp
cmp
cmc
dec
sub
jbe
outsl
adc
xchg
or
push
repnz
fs
mov
sarb
inc
add
pop
pop
arpl
test
out
jmp
ret
xchg
or
into
xor
xor
dec
rorb
inc
in
and
adc
push
cmc
adc
leave
pop
or
outsl
sub
fistl
pop
sub
das
out
imul
pop
enter
sub
mov
cltd
mov
popf
test
les
arpl
dec
lret
jns
ja
push
xor
iret
push
mov
pop
xchg
jmp
xor
xchg
cmp
cmp
and
sbb
das
gs
mov
inc
pop
fidivs
mov
outsb
cmp
pop
loope
sbb
rolb
push
inc
lret
pusha
adc
data16
push
notb
test
xor
mov
andl
orl
icebp
mov
jp
or
xor
jmp
stos
fxtract
popf
adc
push
and
push
imull
call
pop
scas
push
out
mov
sbb
xlat
pop
bound
push
call
cmp
pop
in
bnd
sub
pop
cmp
jg
data16
adc
js
movb
icebp
sub
push
das
mov
loopne
or
xchg
ja
lret
and
adc
nop
push
mov
or
sub
mov
mov
jmp
insb
popf
pushf
js
hlt
add
popf
lods
add
jl
pop
push
mov
mov
shll
xor
arpl
sub
in
xchg
lods
test
xchg
jmp
lds
dec
or
xchg
xchg
fwait
adc
jp
enter
ret
xchg
add
dec
sub
inc
aas
fists
jle
movsb
outsl
xchg
xchg
jnp
mov
call
sarb
cmp
stos
cmp
fcmovu
add
aaa
sarb
int3
mov
ja
out
or
test
sub
and
lret
xor
das
xor
sahf
pop
inc
mov
sbb
lcall
ret
inc
inc
loopne
sbb
and
cmp
jmp
adc
jecxz
ljmp
push
sub
hlt
xlat
cli
push
push
pop
in
cld
addr16
js
jb
les
pop
imul
xchg
push
mov
inc
xchg
ret
sub
jne
ror
sti
es
in
or
stos
nop
push
mov
lods
or
cmp
adc
push
jl
arpl
shl
push
mov
rclb
jecxz
mov
pop
adc
rcr
mov
hlt
jne
or
mov
mov
outsb
ret
ret
mov
sbb
icebp
flds
xor
aam
loopne
push
mov
fisubrl
push
rcll
imul
jge
iret
adc
mov
push
jne
push
pop
cltd
push
icebp
mov
outsb
popa
xor
xchg
dec
mov
mov
insb
push
inc
pop
shlb
loop
lahf
decl
mov
push
js
mov
subb
in
inc
imul
and
outsb
jmp
js
loop
or
sahf
add
icebp
hlt
out
inc
mov
push
xchg
invd
dec
test
daa
inc
push
je
jno
lahf
shl
ja
push
adc
cli
in
xor
dec
int3
adc
clc
mov
std
mov
cld
aam
push
add
outsl
std
push
std
mov
xchg
iret
cld
xor
or
inc
dec
or
xor
sti
sub
fptan
push
cmc
lds
add
jl
xchg
dec
cmp
int3
ret
cmovnp
out
add
jbe
shrl
dec
out
dec
scas
push
xchg
jne
inc
lret
repnz
out
or
or
mov
ljmp
mov
add
xchg
mov
scas
cs
stos
cmp
imul
in
subb
das
add
jns
and
push
mov
scas
push
loope
test
mov
in
nop
sar
jl
push
push
and
orl
add
adc
pop
and
aaa
cs
or
pop
cmp
inc
pushf
adc
aas
sti
or
int
lock
push
aad
repnz
rorb
imul
fisttpll
aam
and
mov
std
xchg
testl
les
xchg
aaa
aam
repnz
popa
movsw
and
xor
imul
test
adc
stos
or
test
sub
iret
outsb
fwait
jno
jp
push
add
int
or
rcl
mov
jmp
out
mov
lret
mov
xor
or
jmp
push
nop
or
sbb
lcall
sbb
movsl
xchg
faddp
dec
repz
mov
xor
pop
shll
push
fwait
std
insl
jge
loop
pop
lret
scas
in
mov
sbb
mul
sub
mov
mov
xchg
xchg
in
push
sub
jo
xorl
sti
push
stc
mov
shll
and
xchg
fwait
push
cltd
sbb
mov
or
movsb
or
push
adc
jp
test
aad
xor
aad
xchg
and
push
jo
or
aam
mov
outsl
sbb
jno
adc
js
push
lods
jbe
mov
mov
stos
and
stos
fcomps
addr16
jmp
and
inc
cmp
push
xor
packuswb
mov
inc
jo
cmpsl
pop
fsubrs
in
sbb
je
jb
jb
aaa
repz
ss
fidivl
imul
xchg
mul
insb
mov
aad
and
xor
mov
pop
mov
mov
in
mov
mov
bound
push
add
setae
mov
jg
or
push
push
jns
xchg
adc
insl
add
sar
scas
xchg
and
inc
cmp
push
add
bts
mov
pop
xchg
sbb
mov
aaa
fisubrl
sbb
xor
stc
sub
ret
or
xchg
out
movsl
adc
push
mov
rcrb
cmp
xor
out
push
imul
mov
and
insl
int3
mov
imul
roll
addb
fldz
jp
cmp
xchg
repnz
or
jns
repz
lods
leave
mov
dec
movsb
sub
pop
cld
mov
shrb
test
test
loop
push
adc
test
movsl
sub
ret
add
jbe
jne
add
enter
repz
cld
js
enter
int
xchg
or
repz
loop
mov
or
aaa
pop
and
dec
push
in
mov
push
jmp
mov
adc
push
arpl
or
sub
and
or
or
negl
popa
sbb
imul
popl
sahf
add
fdivl
or
jne
adc
and
into
push
roll
dec
test
mov
add
std
in
sbb
inc
ret
xor
dec
enter
int3
inc
ud2
mov
mov
push
mov
pop
addr16
adc
add
mov
andb
out
adc
idivl
mov
mov
pop
in
std
sbb
aaa
adc
mov
dec
out
setae
pop
aad
and
jae
add
dec
sti
je
andl
mov
lahf
cmp
sbb
adc
mov
pop
ret
mov
xor
sti
leave
jmp
cmpb
sub
loopne
frstor
push
inc
dec
mov
insl
popa
inc
pop
sahf
pop
pop
xchg
fnstenv
jmp
jg
ss
add
add
xchg
xchg
lods
aaa
mov
sub
sahf
and
imul
lret
jbe
push
loope
loopne
adc
stos
adc
out
orl
insb
dec
das
in
sub
or
jecxz
and
lods
or
lret
dec
enter
dec
dec
adc
dec
inc
dec
shrb
enter
add
out
fs
out
push
jge
sub
mov
adc
std
pop
jns
push
into
testb
inc
mov
mov
nopl
xchg
or
and
frstor
add
movsl
sbb
push
mull
dec
and
or
fstpl
xor
daa
cli
mov
scas
enter
jge
scas
mov
lahf
divb
adcb
cmpsb
push
lea
xor
aas
mov
push
lcall
sbbb
mov
sub
je
dec
hlt
ja
mov
cli
add
jo
faddl
iret
sbb
ds
fstpt
or
adc
int3
repz
ficompl
mov
fildll
push
pop
sub
stc
cmpl
pop
jne
rclb
icebp
dec
ja
sub
and
xchg
sbb
aad
negb
ja
outsl
iret
shll
sbb
pop
mov
inc
movb
xchg
roll
jbe
movsl
push
mov
mov
cli
mov
sbb
les
inc
es
sbb
xchg
dec
add
cmc
decl
lret
ja
jle
jg
cmp
shrl
inc
xorb
inc
lock
in
ja
fstps
mov
xor
xor
xchg
push
xchg
cli
lods
xchg
pop
sbb
bound
jp
xchg
sbb
push
mov
and
scas
ds
pop
and
mov
gs
shll
pop
mull
dec
fsubrl
fidivrl
repnz
cmpsl
jb
rcrb
stos
shl
subb
xor
add
inc
outsl
pop
mov
mov
jae
sub
lahf
xor
sub
pop
jae
add
decb
or
aaa
jge
mov
lock
scas
adc
add
imul
out
jne
xor
sbb
or
jge
pop
mov
dec
pusha
aad
inc
pop
in
add
mov
and
and
inc
cmpsl
aaa
filds
mov
mov
mov
ret
mov
xchg
lea
xchg
in
es
lods
jne
inc
jns
push
xchg
cmp
sub
mov
mov
rorl
mov
in
mov
adc
mov
push
dec
push
fbstp
fs
popa
push
fidivrl
cmp
mov
mov
movsb
dec
arpl
push
mov
pop
add
scas
and
jl
mull
mov
jno
insl
xchg
mov
inc
in
addr16
jbe
icebp
xchg
xor
jb
lcall
das
adc
insl
js
mov
das
add
mov
into
aaa
movl
jne
and
lods
cmp
and
push
test
sub
sbb
pushf
sahf
push
bound
test
inc
dec
or
mov
repz
mov
imul
cmpsb
lahf
stos
mov
pop
icebp
cmp
dec
push
testl
das
push
lahf
sti
sbb
push
sarb
jo
mov
sete
pop
outsl
addb
out
aad
adc
aaa
call
orb
sbbb
cwtl
fcmovnb
sub
mov
push
dec
inc
push
adc
pop
dec
pop
push
push
inc
test
sti
stos
xchg
imul
pop
jno
or
clc
shr
jnp
pop
loope
outsl
lods
push
xor
sub
add
inc
xor
out
fisttpll
sub
lds
jmp
data16
pop
cmc
aam
aaa
mov
xchg
add
mov
mov
or
pop
sub
cmp
xchg
dec
mov
into
or
popa
or
test
jp
add
xchg
xchg
scas
inc
neg
fstp
test
xlat
hlt
imul
lret
push
push
or
xchg
or
insb
aaa
ret
sbb
mov
pop
in
lret
cmpsb
inc
test
cld
adc
fisttps
loop
data16
pop
dec
jno
push
jg
dec
or
push
pop
fstpt
jg
int
pop
xchg
loop
xchg
pmovmskb
loop
push
in
repnz
fisubrs
cltd
xchg
addb
stc
jne
test
out
sub
cmp
jne
adcl
mov
jns
sbb
sbb
sub
xlat
mov
mov
andb
das
jp
cs
add
or
sarl
push
ret
push
pop
cmpsl
sahf
adc
mov
push
jb
or
ret
lcall
jne
jle
inc
cmpsl
jo
mov
mov
rcr
je
mov
roll
inc
mov
jne
lods
mov
aad
inc
jns
in
iret
into
into
fdivs
pop
jge
fstps
pop
xor
aam
adc
test
cmpsb
ja
xor
pusha
pop
call
insb
mov
and
mov
sbb
test
sbb
xchg
inc
repz
loopne
sub
jmp
adc
lret
adcl
js
push
stos
pusha
xor
xchg
js
inc
cmc
loop
adc
pop
icebp
loope
xlat
cmpsl
dec
loop
test
imul
dec
xor
int3
sbb
movsl
adc
sub
in
in
xchg
adc
xor
cld
scas
mov
fs
arpl
enterw
push
syscall
xchg
mov
add
sbb
pop
cli
mov
push
push
leave
dec
adc
out
dec
inc
in
dec
pop
pop
arpl
add
add
push
pop
imul
es
add
mov
push
loope
and
bound
lods
pushf
mov
call
pop
loope
aas
jno
outsb
fwait
imul
fisubrl
fldt
call
push
aam
aas
sti
jns
mov
scas
dec
add
sbb
ds
sbb
daa
cmp
jbe
push
xlat
mov
xchg
in
push
lret
fcomps
fcoms
push
push
insb
bnd
cmp
push
ret
loopne
cs
fstps
inc
mov
sbb
adc
jno
dec
cwtl
mov
xchg
xchg
xchg
mov
adc
or
movsl
lcall
mov
sbb
testb
loope
lahf
and
aaa
xchg
leave
cli
enter
push
daa
dec
mov
leave
mov
xchg
sahf
sub
jb
stos
sbb
pop
adc
adc
inc
fisttpll
inc
iret
roll
jns
mov
adc
fisubs
cltd
in
cmpsb
mov
push
cmp
pushf
xchg
inc
rorb
out
stc
mov
test
push
insl
mov
stos
enter
daa
add
out
adc
adc
pop
jecxz
fstpt
rolb
adc
cmp
xchg
push
lcall
push
call
clc
mov
jbe
packssdw
add
outsb
sbb
imul
and
cli
hlt
gs
xchg
loopne
jle
mov
mov
cmp
xchg
push
arpl
outsb
push
push
orl
sub
subb
or
jns
pusha
shrb
dec
sarl
loop
mov
in
jnp
inc
sub
out
leave
push
cmp
ljmp
mov
icebp
xchg
cmp
or
test
pop
cmp
rcr
push
pop
cwtl
iret
mov
mov
jmp
mov
jb
mov
mov
mov
inc
aam
outsb
test
cmpb
popa
adc
jl
sahf
lods
sbb
mov
jl
dec
mov
sti
sub
lcall
gs
cmp
movsl
jno
mov
fnsave
and
in
pop
lds
inc
rcrl
mov
jmp
push
adc
cmp
addr16
int
out
jb
fisttps
lret
add
push
dec
inc
dec
outsb
xchg
sti
add
push
cmp
or
lods
sbb
push
mov
gs
loop
clc
sbb
repz
ret
inc
pop
sub
xchg
push
test
inc
cmp
mov
aam
pop
popl
jmp
outsb
xchg
sbb
xor
inc
iret
xchg
das
and
fiaddl
rcll
xchg
cmp
in
xor
pushf
insl
push
inc
and
lret
add
mov
mov
sub
mov
les
call
inc
push
mov
imul
push
push
mov
fdivrl
mov
pop
repnz
repz
jae
xor
xor
test
iret
jo
test
add
push
fnsave
nop
gs
and
aam
scas
lret
jnp
and
sub
pop
push
sub
std
pushf
sbb
lea
mov
pop
addr16
mov
movsb
insl
imul
shlb
or
xor
jge
adc
sub
sti
ds
aad
sarl
cmc
stos
jl
iret
jns
jbe
hlt
ja
lea
jl
xchg
in
in
add
dec
push
mov
hlt
adc
ds
xchg
inc
push
pop
enter
jl
cmp
dec
jns
mov
mov
std
sahf
push
repnz
insb
lea
adc
inc
ret
cli
dec
inc
fdiv
pop
ret
add
and
aaa
add
aaa
ja
scas
mov
in
lods
in
push
fdivrs
mov
or
das
push
mov
xchg
add
dec
dec
out
xor
sub
dec
jg
cmp
xor
jne
icebp
jge
and
mov
dec
frstor
mov
bound
xchg
and
or
dec
add
jl
xor
lock
ret
or
push
xchg
ds
sbb
push
push
sbb
push
mov
loopne
fwait
movsl
fdivl
cld
mov
mov
test
rclb
mov
popa
inc
jae
xchg
mov
sub
out
nop
cmp
inc
lods
add
jp
cmp
mov
cmc
jge
mov
gs
xor
std
orl
out
push
cs
faddl
roll
lods
sbb
or
dec
cmp
es
cld
sbbl
mov
inc
and
jle
mov
add
mov
out
push
mov
arpl
test
or
cmp
inc
pop
cmpsl
dec
adc
sub
sub
push
xchg
jge
bswap
sub
sbb
rcrb
pop
sub
js
mov
inc
xchg
fs
or
ja
in
sbb
sbb
sub
popa
das
adc
lahf
inc
xchg
cmp
pop
push
loopne
out
sub
mov
rcrb
mov
lds
or
add
les
out
into
xchg
add
popa
lds
std
sbb
addr16
and
xor
and
xchg
int3
outsb
test
lock
fs
lahf
xor
test
add
out
push
inc
imul
clc
sbb
je
xor
inc
pushw
outsb
push
mov
jbe
outsb
and
cmc
int3
xchg
mov
loop
mov
mov
mov
or
out
jecxz
shl
xchg
cmp
sub
pop
dec
stc
push
scas
sub
scas
movsb
aad
aam
aaa
jno
lods
push
and
jp
jmp
fsts
test
xchg
in
lea
jb
jl
out
jge
incl
jnp
fcoms
jecxz
in
or
lea
dec
jecxz
mov
xor
xlat
xchg
movsl
jo
push
andl
adc
push
push
mov
add
into
test
stos
jno
aaa
fwait
inc
xor
movsl
pop
pop
cmovno
jmp
pushf
das
mov
jl
mov
cmp
popf
dec
outsb
dec
fimuls
mov
mov
inc
pop
cmp
mov
jp
mov
je
sarb
cld
sub
adcl
pop
sbb
sub
jg
push
sbb
dec
mov
dec
inc
hlt
mov
sti
cmp
xor
mul
sbb
and
ret
or
idivb
insl
mov
aam
int
jmp
xchg
fsts
das
dec
cs
rcrl
xor
add
and
out
jg
daa
aas
jl
pop
xchg
das
and
sub
iret
pop
arpl
pop
ja
xlat
adc
lea
xor
cli
fidivrl
xorb
xchg
sub
or
jno
sub
sub
and
adc
push
mov
sbb
mov
jbe
pop
test
lock
fcompl
fistl
mov
mov
mov
pushf
fldcw
insb
adc
adcl
sti
enter
xchg
push
stos
xchg
rcrl
mov
std
push
fwait
xchg
orl
cs
leave
or
call
cmc
dec
push
ss
daa
mov
aad
cmpsl
jb
call
lock
imulb
pop
ret
loope
push
mov
sti
and
fisubrl
cmp
into
pop
das
push
xor
addr16
rorl
insl
into
pop
jg
adc
adcb
dec
les
fcompl
push
pop
jmp
and
pop
dec
int
cmc
int3
icebp
sub
xchg
fnsave
jecxz
xor
pop
sub
dec
test
jne
or
xchg
call
xor
jno
call
lret
out
mov
cmp
xlat
jp
iret
inc
lds
cld
xchg
add
insl
rorb
sbb
fldt
and
outsl
inc
lret
aaa
movsl
inc
loop
test
jg
pop
adc
pop
xor
adc
test
dec
xchg
fiaddl
movsb
rcll
int
testb
test
inc
popf
sub
push
pop
jle
leave
dec
dec
adc
pop
mov
xor
out
mov
sbb
inc
lcall
push
push
mov
movsb
cmp
lea
pop
int
cli
xchg
sti
aaa
add
cwtl
into
and
popa
inc
shrl
stc
ljmp
subl
xchg
mov
add
xlat
insl
outsb
outsl
mov
cmpl
daa
lret
push
rolb
scas
cld
cmp
xchg
ds
jnp
pop
jl
lds
aas
xorl
mov
test
mov
cmp
imul
lods
pop
push
or
mov
in
mov
and
pop
mov
adc
xlat
xchg
mov
popf
pop
je
inc
rcrl
add
or
inc
fldt
pop
jns
hlt
or
repnz
or
add
push
fdivrl
sub
dec
or
mov
inc
out
xor
xchg
adc
mov
cli
addr16
mov
imul
lock
lahf
and
mov
subb
out
xor
pop
ret
sub
pop
jns
aad
xor
push
scas
rolb
and
inc
rolb
jmp
cmp
mov
inc
mov
and
and
jo
lods
pop
scas
stos
xor
mov
mov
jbe
hlt
std
ret
mov
subb
dec
shlb
xor
imul
imul
mov
loopne
je
or
mov
cli
sbb
movb
adc
jl
test
inc
jg
sbb
dec
mov
xchg
ffreep
and
jo
add
stc
pop
push
mov
sub
and
or
cmp
pop
push
ficompl
jo
sub
xchg
and
iret
daa
movsb
mov
xor
mov
fstpt
daa
cmp
shr
or
mov
xchg
arpl
xchg
inc
roll
or
add
xor
clc
xlat
cld
sarb
inc
cmpsl
inc
jbe
lea
mov
dec
jmp
fsubr
cli
add
sbb
int
int
adc
sbb
out
es
jnp
mov
mov
stc
jbe
pusha
std
xchg
mov
in
push
mov
ret
add
adcb
mov
aaa
pop
adc
and
nop
hlt
push
mov
dec
outsb
loop
pop
addl
dec
leave
mov
pop
or
push
push
aam
pop
or
jns
es
enter
jl
sub
pop
xchg
inc
test
paddq
pop
lahf
ljmp
mov
cld
aad
jle
mov
pop
shrl
cmp
inc
pop
cld
xchg
cmovne
xor
int
adc
sbb
notl
fxch
mov
sub
jge
cltd
xchg
test
adc
mov
je
test
fdivrp
mov
and
in
inc
xchg
dec
cltd
dec
and
jne
mov
ret
mov
in
add
jns
mov
aam
mov
shl
add
repnz
test
movsl
push
lcall
xor
test
add
negl
mov
in
aad
into
punpcklbw
jns
xchg
sbb
js
jbe
leave
fdivr
loop
pusha
mov
or
lock
in
sti
sbb
hlt
and
lods
rorb
ss
xlat
sbb
mov
mov
shlb
sub
lret
outsl
ret
dec
sub
push
lret
add
mov
cmp
xor
dec
loopne
loop
imul
push
mov
cmp
mov
xchg
call
repnz
std
cmp
pop
fwait
movsl
es
and
xor
aam
sub
fldl
std
mov
ss
jle
xor
xor
notl
dec
or
jmp
jae
adc
loop
jb
lret
mov
push
pop
sbb
fisttpl
adcb
push
insb
daa
dec
call
cmp
cmp
adc
or
adc
fsubrl
lds
or
push
popa
inc
stc
fadds
iret
sahf
inc
add
std
push
outsb
lcall
ret
xor
add
arpl
sti
mov
dec
or
mov
gs
pop
cmp
shll
pop
add
es
xchg
fidivl
clc
test
stc
push
pop
