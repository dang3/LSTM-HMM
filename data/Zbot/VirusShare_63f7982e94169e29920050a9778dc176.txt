mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
and
add
push
mov
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
xorb
add
add
enter
loop
add
clc
mov
add
mov
add
add
dec
mov
add
add
jb
add
xorb
add
add
mov
add
int3
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
mov
add
mov
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
insb
mov
add
je
add
nop
inc
add
jne
add
xor
add
add
add
push
inc
add
inc
add
jb
js
je
jb
arpl
jae
add
jae
arpl
outsl
add
add
add
add
add
jne
outsb
add
add
add
add
jb
jb
outsl
add
and
add
add
or
add
add
add
push
add
and
add
jb
outsl
add
or
add
dec
add
inc
add
add
jb
jb
outsl
add
or
add
add
add
inc
add
dec
add
add
jb
jb
outsl
add
or
add
add
add
add
add
add
add
add
je
je
add
jo
je
and
je
outsl
add
add
jae
add
add
push
add
dec
add
add
outsl
add
add
add
jb
outsl
add
and
je
push
add
add
jae
jae
add
bound
insb
add
and
add
jb
imul
and
outsb
add
je
imul
and
arpl
outsl
add
add
add
outsb
add
je
imul
imul
je
imul
or
push
add
imul
imul
imul
je
add
and
popa
add
add
jne
add
add
outsb
add
add
outsl
add
jb
and
popa
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
je
and
imul
insl
add
jae
je
and
insb
add
imul
add
add
add
add
and
jb
add
jne
insb
add
add
data16
add
popa
add
add
outsb
add
and
popa
add
and
dec
add
dec
add
add
outsl
add
jo
imul
add
add
add
add
insb
add
sub
and
data16
outsb
add
je
imul
and
data16
outsl
add
and
popa
add
add
popa
add
add
add
add
outsl
add
jae
je
jb
jne
arpl
je
outsl
add
and
outsl
add
and
data16
outsl
add
and
inc
add
add
popa
add
outsb
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
insb
add
arpl
popa
add
add
add
outsb
add
outsl
add
insl
add
je
imul
or
add
add
add
add
add
add
add
add
je
je
add
jo
je
and
je
outsl
add
add
outsb
add
je
imul
imul
and
je
push
add
push
add
add
outsl
add
add
add
add
outsb
add
add
outsb
add
add
add
add
add
jae
and
imul
imul
je
add
and
popa
add
add
jne
add
add
outsb
add
add
outsl
add
jb
and
popa
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
add
add
add
add
add
add
add
push
add
add
outsl
add
add
outsb
add
je
imul
imul
add
add
add
add
add
add
add
add
add
outsb
add
bound
insb
add
and
je
outsl
add
add
outsb
add
je
imul
imul
and
push
add
or
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
insb
add
ja
imul
imul
je
imul
imul
je
imul
or
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
jae
je
add
outsl
add
add
outsb
add
je
imul
imul
je
imul
or
add
add
add
add
add
add
add
add
add
jb
add
add
imul
jne
popa
add
add
jne
outsb
add
je
imul
and
arpl
popa
add
add
add
add
add
add
add
add
or
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
pop
add
outsb
add
js
imul
popa
add
add
imul
je
popa
add
insb
add
or
add
add
add
add
add
add
add
add
add
add
outsb
add
bound
insb
add
and
je
outsl
add
add
jo
add
and
arpl
outsl
add
jae
outsl
add
add
add
add
imul
or
add
add
add
add
add
add
add
add
add
add
outsb
add
js
jo
add
je
add
add
add
jo
and
add
jb
outsl
add
or
add
add
add
add
add
add
add
add
add
add
outsb
add
js
jo
add
je
add
add
jne
insb
add
add
add
add
add
add
add
imul
add
jb
jb
outsl
add
or
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
je
push
add
add
add
add
add
add
add
add
add
add
add
add
bound
outsl
add
je
sub
sub
and
push
add
add
add
outsb
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
add
jbe
imul
outsb
add
add
je
or
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
popa
add
add
insl
add
outsb
add
add
add
add
add
add
add
add
add
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jne
jo
jo
outsl
add
je
and
outsb
add
je
and
insb
add
popa
add
add
add
add
add
add
add
add
sbb
or
add
fcomps
inc
add
add
add
add
add
sbb
adc
add
fcoms
inc
add
add
add
add
add
pop
inc
add
add
add
push
inc
add
add
add
inc
add
add
add
push
inc
add
add
add
add
add
inc
add
add
add
adc
add
inc
adc
add
add
add
adc
and
add
call
add
add
adc
jns
add
lods
adc
jp
add
nop
adc
cld
add
add
add
add
inc
add
imul
outsl
add
outsl
add
je
and
push
add
jae
jne
popa
add
add
sub
sub
and
push
add
outsb
add
add
add
add
add
jb
popa
add
jns
add
add
or
or
add
add
add
add
add
add
jo
jb
outsl
add
jb
popa
add
and
outsb
add
insl
add
and
jne
outsb
add
outsb
add
ja
outsb
add
add
add
add
jne
outsb
add
add
add
add
jb
jb
outsl
add
and
or
or
push
add
outsl
add
jb
popa
add
cmp
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
or
add
add
add
add
add
or
add
nop
add
add
add
add
add
dec
add
push
add
inc
add
add
add
add
add
add
add
jae
jb
add
jae
gs
popa
insb
jne
add
jae
gs
popa
insb
jne
add
jae
insb
insb
outsl
arpl
add
add
je
jb
arpl
jae
imul
popa
je
outsl
outsb
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
push
add
push
add
add
add
add
add
add
add
dec
add
add
insl
add
add
jae
add
add
add
add
add
add
dec
add
dec
add
add
add
and
jns
jns
jns
jns
add
dec
add
das
add
add
add
jns
add
add
push
add
add
add
inc
add
add
add
inc
add
arpl
add
bound
add
add
add
dec
add
jbe
add
bound
add
add
add
dec
add
je
outsl
add
add
add
push
add
jo
je
add
bound
add
add
inc
add
add
jae
je
add
add
dec
add
insb
add
add
add
dec
add
outsb
add
add
add
inc
add
jb
imul
dec
add
jb
arpl
push
add
bound
jb
jne
popa
add
jns
add
add
dec
add
outsb
add
popa
add
jns
add
inc
add
arpl
add
dec
add
jbe
add
dec
add
je
add
push
add
jo
add
inc
add
add
add
jne
insb
add
add
jne
outsb
add
add
popa
add
add
inc
add
jb
add
dec
add
jb
add
inc
add
bound
add
dec
add
outsb
add
add
popa
add
add
add
jns
add
add
inc
add
imul
jns
add
add
push
add
jne
jb
jae
add
jns
add
add
push
add
add
add
add
jns
add
push
add
add
add
jns
add
dec
add
outsb
add
add
add
add
push
add
outsb
add
add
add
add
push
add
je
add
inc
add
imul
push
add
add
add
add
add
dec
add
outsb
add
add
jne
outsb
add
add
cmp
cmp
add
add
fs
dec
dec
dec
dec
and
and
jns
add
das
fs
jns
add
add
push
dec
add
inc
dec
add
inc
arpl
bound
add
add
dec
outsl
jbe
insl
bound
add
add
dec
arpl
gs
push
gs
gs
bound
add
add
addr16
je
add
insb
jns
add
add
outsb
add
add
inc
jo
imul
arpl
add
inc
bound
popa
jb
add
add
dec
popa
outsb
jne
jb
add
add
jbe
dec
arpl
gs
inc
jne
add
insb
add
outsb
add
jns
inc
jo
add
jb
inc
bound
dec
popa
outsb
add
je
jb
popa
jns
add
add
imul
jne
jae
popa
jns
add
add
outsb
gs
popa
jns
add
push
jne
jae
popa
jns
dec
outsl
outsb
fs
jns
add
outsb
fs
jns
add
je
inc
jb
add
add
add
add
outsb
add
outsb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
jnp
jge
jg
addl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
decl
add
add
add
inc
add
add
add
xchg
add
movsb
add
jo
add
push
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
ret
push
mov
push
andl
jmp
mov
inc
mov
mov
cmp
jae
movzbl
mov
add
movsbl
xor
mov
add
mov
jmp
mov
leave
ret
push
xor
mov
mov
mov
lods
mov
pop
ret
push
mov
push
andl
cmpl
je
mov
add
movsbl
test
je
mov
inc
mov
jmp
mov
leave
ret
push
mov
push
cmpl
jne
cmpl
je
or
jmp
cmpl
je
cmpl
jne
xor
inc
jmp
cmpl
jne
cmpl
jne
xor
jmp
cmpl
jne
cmpl
jne
mov
movsbl
mov
movsbl
sub
mov
jne
mov
movsbl
test
je
mov
inc
mov
mov
inc
mov
jmp
jmp
cmpl
jne
pushl
call
pop
mov
cmpl
jne
pushl
call
pop
mov
mov
cmp
jne
cmpl
je
cmpl
jne
mov
sub
mov
jmp
andl
jmp
mov
inc
mov
mov
cmp
jge
mov
movsbl
mov
movsbl
sub
mov
je
jmp
mov
inc
mov
mov
inc
mov
jmp
mov
xor
cmpl
setg
lea
neg
sbb
and
leave
ret
push
mov
sub
mov
xor
mov
movl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
mov
pushl
push
lea
push
call
add
pushl
push
lea
push
call
add
lea
push
pushl
call
pop
pop
mov
lea
push
pushl
call
pop
pop
mov
mov
xor
call
leave
ret
push
mov
sub
mov
mov
add
mov
mov
add
mov
mov
mov
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
mov
mov
add
mov
lea
mov
cmpl
je
push
push
mov
mov
add
push
pushl
call
add
test
jne
mov
mov
add
mov
lea
mov
mov
mov
add
mov
movzwl
lea
mov
mov
mov
add
mov
jmp
jmp
xor
leave
ret
push
mov
sub
mov
xor
mov
andl
andl
jmp
mov
inc
mov
cmpl
jge
mov
mov
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jge
mov
mov
add
mov
xor
divl
mov
movzbl
add
and
jns
dec
or
inc
mov
mov
mov
mov
mov
mov
mov
mov
movzbl
mov
mov
jmp
andl
jmp
mov
inc
mov
mov
cmp
jae
mov
add
and
jns
dec
or
inc
mov
mov
mov
add
and
jns
dec
or
inc
mov
mov
mov
mov
mov
mov
mov
mov
movzbl
mov
mov
mov
mov
mov
add
and
jns
dec
or
inc
mov
add
movzbl
xor
mov
add
mov
jmp
mov
mov
xor
call
leave
ret
push
mov
sub
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
xor
inc
jmp
mov
sub
mov
mov
cmpl
jne
xor
inc
jmp
mov
mov
add
mov
mov
cmpl
je
mov
mov
sub
shr
mov
andl
jmp
mov
inc
mov
mov
cmp
jae
mov
mov
movzwl
sar
mov
mov
mov
movzwl
and
jns
dec
or
inc
mov
movzwl
test
jne
jmp
movzwl
cmp
jne
movzwl
add
mov
mov
mov
add
movzwl
add
mov
mov
mov
jmp
xor
jmp
jmp
mov
mov
add
mov
jmp
xor
inc
leave
ret
push
mov
sub
mov
mov
add
mov
mov
cmpl
jne
xor
inc
jmp
mov
mov
add
mov
mov
cmpl
je
mov
mov
add
push
call
mov
cmpl
jne
mov
mov
add
push
call
mov
cmpl
jne
xor
jmp
mov
cmpl
je
mov
mov
add
mov
jmp
mov
mov
add
mov
andl
mov
cmpl
je
mov
mov
add
mov
cmpl
jae
mov
movsbl
test
je
mov
inc
inc
push
pushl
call
mov
jmp
movzwl
push
pushl
call
mov
mov
cmpl
je
mov
mov
add
mov
mov
mov
jmp
mov
mov
mov
mov
add
mov
mov
add
mov
jmp
mov
add
mov
jmp
xor
inc
leave
ret
push
mov
sub
andl
andl
cmpl
je
mov
mov
mov
movzwl
cmp
jne
mov
mov
mov
mov
add
mov
mov
add
mov
mov
cmpl
jne
push
push
mov
pushl
push
call
mov
cmpl
je
push
pushl
pushl
call
add
push
pushl
mov
mov
add
push
call
add
mov
movzwl
imul
push
mov
add
push
mov
mov
mov
lea
push
call
add
mov
cmpl
jbe
mov
mov
sub
push
mov
add
push
mov
add
push
call
add
andl
jmp
mov
inc
mov
mov
movzwl
cmp
jge
mov
add
mov
mov
mov
add
mov
mov
mov
pushl
mov
mov
mov
add
push
mov
mov
mov
add
push
call
add
jmp
pushl
call
pop
test
jne
push
push
pushl
call
andl
jmp
pushl
call
pop
test
jne
push
push
pushl
call
andl
jmp
mov
mov
mov
mov
mov
leave
ret
push
mov
sub
mov
xor
mov
movl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
call
call
call
call
pushl
push
lea
push
call
add
pushl
push
lea
push
call
add
lea
push
push
push
lea
push
call
push
call
mov
pushl
push
lea
push
call
add
lea
push
push
push
lea
push
call
push
call
mov
call
pushl
push
lea
push
call
add
lea
push
push
push
lea
push
call
push
call
mov
pushl
push
lea
push
call
add
lea
push
push
push
lea
push
call
push
call
mov
pushl
push
lea
push
call
add
lea
push
push
push
lea
push
call
push
call
mov
pushl
push
lea
push
call
add
lea
push
push
push
lea
push
call
push
call
mov
push
call
mov
andl
push
push
pushl
call
mov
call
pushl
pushl
call
mov
call
pushl
call
mov
call
pushl
pushl
call
mov
pushl
push
call
mov
cmpl
jne
push
call
pushl
push
lea
push
call
add
call
lea
push
push
push
lea
push
call
push
call
mov
call
push
lea
push
push
call
mov
mov
push
pushl
lea
push
pushl
call
add
mov
call
call
lea
push
pushl
call
mov
cmpl
je
push
mov
mov
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
call
mov
xor
call
leave
ret
push
mov
sub
mov
xor
mov
movl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
pushl
push
lea
push
call
add
pushl
push
lea
push
call
add
pushl
push
lea
push
call
add
pushl
push
lea
push
call
add
pushl
push
lea
push
call
add
pushl
push
lea
push
call
add
pushl
push
lea
push
call
add
lea
push
push
push
lea
push
call
push
call
mov
lea
push
push
push
lea
push
call
push
call
mov
lea
push
push
push
lea
push
call
push
call
mov
lea
push
push
push
lea
push
call
push
call
mov
lea
push
push
push
lea
push
call
push
call
mov
push
push
call
mov
pushl
push
call
push
call
mov
mov
mov
add
mov
mov
cmpl
jne
push
call
push
call
xor
jmp
xor
pushl
call
mov
xor
call
leave
ret
push
mov
sub
mov
xor
mov
push
lea
push
push
push
call
mov
cmpl
je
call
call
call
call
push
call
call
call
mov
xor
call
leave
ret
push
mov
sub
mov
xor
mov
push
push
lea
push
call
add
movl
lea
push
call
andl
cmpl
jne
andl
jmp
mov
inc
mov
mov
cltd
mov
mov
cmpl
jg
jl
cmpl
jae
push
call
call
mov
xor
mov
jmp
call
andl
jmp
mov
inc
mov
mov
cltd
mov
mov
cmpl
jg
jl
cmpl
jae
push
call
call
jmp
mov
xor
call
leave
ret
push
mov
call
xor
pop
ret
cmp
jne
repz
jmp
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmpl
je
push
push
and
and
cmp
pop
pop
jne
jmp
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
les
add
insl
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
xchg
outsb
inc
add
inc
add
add
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
inc
add
outsb
inc
add
outsb
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
push
outsl
inc
add
add
add
rorl
add
jmp
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
lock
inc
add
outsl
inc
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
jo
add
add
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
test
jne
cmp
jb
cmpl
je
jmp
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
mov
push
mov
cmpl
jne
call
pushl
call
push
call
pop
pop
pop
ret
push
push
call
lea
push
call
xor
cmp
jne
push
push
push
push
call
mov
cmp
je
mov
jmp
mov
cmpl
jne
mov
cmp
jne
cmpl
jbe
xor
cmp
setne
mov
call
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jns
push
call
pop
call
mov
call
mov
call
test
jns
push
call
pop
call
test
jns
push
call
pop
push
call
pop
cmp
je
push
call
pop
call
testb
je
movzwl
jmp
push
pop
push
push
push
push
call
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmpl
jne
push
call
call
movl
mov
call
ret
call
jmp
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
push
mov
and
test
jne
mov
and
shr
je
jmp
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
test
je
mov
shr
test
je
lea
movdqa
movdqa
lea
lea
dec
jne
and
je
mov
shr
je
mov
mov
lea
lea
dec
jne
mov
and
je
mov
mov
inc
inc
dec
jne
pop
pop
pop
pop
ret
mov
sub
sub
push
mov
mov
and
je
mov
mov
inc
inc
dec
jne
shr
je
mov
mov
lea
lea
dec
jne
pop
jmp
push
call
mov
xor
ret
pxor
push
push
mov
and
test
jne
mov
and
shr
je
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
test
je
mov
shr
je
jmp
lea
movdqa
lea
dec
jne
and
je
mov
xor
shr
je
mov
lea
dec
jne
and
je
mov
inc
dec
jne
pop
pop
ret
mov
neg
add
sub
xor
push
mov
and
je
mov
inc
dec
jne
shr
je
mov
lea
dec
jne
pop
jmp
mov
push
mov
mov
mov
cmpl
jne
cmpl
jne
mov
cmp
je
cmp
je
cmp
je
cmp
jne
call
xor
pop
ret
push
call
xor
ret
mov
push
mov
push
call
test
je
push
push
call
test
je
pushl
call
pop
ret
mov
push
mov
pushl
call
pop
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
ret
mov
push
mov
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
cmpl
je
push
call
pop
test
je
pushl
call
pop
call
push
push
call
pop
pop
test
jne
push
push
push
call
mov
mov
pop
mov
cmp
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
pop
test
je
push
push
push
call
xor
pop
ret
push
push
call
push
call
pop
andl
xor
inc
cmp
je
mov
mov
mov
cmpl
jne
pushl
mov
call
mov
mov
test
je
pushl
call
mov
mov
mov
mov
sub
mov
cmp
jb
call
cmp
je
cmp
jb
pushl
call
mov
call
mov
call
pushl
call
mov
pushl
call
cmp
jne
cmp
je
mov
mov
mov
mov
mov
mov
jmp
movl
cmpl
jae
mov
mov
test
je
call
addl
jmp
movl
cmpl
jae
mov
mov
test
je
call
addl
jmp
movl
call
cmpl
jne
movl
push
call
pop
pushl
call
cmpl
je
push
call
pop
ret
call
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
mov
push
mov
call
pushl
call
pop
push
call
int3
mov
push
mov
xor
mov
cmp
je
inc
cmp
jb
xor
pop
ret
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
mov
push
push
call
mov
xor
pop
mov
cmp
je
push
call
pop
cmp
je
push
call
pop
test
jne
cmpl
je
cmp
je
push
push
mov
push
call
add
test
jne
push
mov
push
push
mov
call
mov
test
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
push
call
inc
pop
cmp
jbe
push
call
lea
mov
sub
push
sar
push
sub
push
push
call
add
test
jne
push
mov
push
push
call
add
test
jne
pushl
push
push
call
add
test
jne
push
push
push
call
add
jmp
push
push
push
push
push
jmp
push
call
mov
cmp
je
cmp
je
xor
mov
mov
cmp
je
inc
cmp
jb
push
lea
push
lea
push
mov
call
pop
push
lea
push
push
call
mov
pop
pop
xor
pop
call
leave
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmpl
jne
push
call
push
call
pop
pop
ret
mov
push
mov
push
call
mov
test
je
mov
mov
mov
push
cmp
je
add
lea
cmp
jb
add
cmp
jae
cmp
je
xor
test
je
mov
test
jne
xor
jmp
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
push
mov
mov
mov
cmp
jne
push
pop
mov
andl
add
cmp
jl
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
pop
mov
pop
or
pop
pop
pop
ret
mov
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzbl
push
call
pop
test
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
cmpl
jne
call
push
mov
push
xor
test
jne
or
jmp
cmp
je
inc
push
call
pop
lea
mov
test
jne
push
inc
push
call
mov
pop
pop
mov
test
je
mov
push
jmp
push
call
cmpb
pop
lea
je
push
push
call
pop
pop
mov
test
je
push
push
push
call
add
test
jne
add
add
cmpb
jne
pushl
call
andl
andl
movl
xor
pop
pop
pop
pop
ret
pushl
call
andl
or
jmp
xor
push
push
push
push
push
call
int3
mov
push
mov
push
mov
push
xor
push
mov
mov
mov
movl
cmp
je
mov
addl
mov
mov
cmpb
jne
xor
cmp
mov
sete
inc
mov
jmp
incl
test
je
mov
mov
inc
mov
mov
movzbl
push
inc
call
pop
test
je
incl
cmpl
je
mov
mov
incl
mov
inc
mov
mov
test
je
cmpl
jne
cmp
je
cmp
jne
test
je
movb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
dec
test
je
movb
inc
incl
test
jne
mov
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
movsbl
push
test
je
call
pop
test
je
mov
mov
incl
mov
inc
incl
mov
mov
incl
mov
jmp
call
pop
test
je
inc
incl
incl
mov
inc
jmp
test
je
movb
inc
mov
incl
mov
jmp
mov
pop
pop
test
je
andl
incl
leave
ret
mov
push
mov
sub
push
xor
push
push
cmp
jne
call
push
mov
push
push
mov
call
mov
mov
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
push
lea
call
mov
add
cmp
jae
mov
cmp
jae
mov
shl
lea
cmp
jb
push
call
mov
pop
cmp
je
mov
lea
push
add
push
push
lea
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
mov
push
mov
sub
push
push
call
mov
xor
cmp
jne
xor
jmp
cmp
je
add
cmp
jne
add
cmp
jne
push
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
pop
mov
cmp
je
push
push
pushl
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
push
call
mov
jmp
push
call
xor
pop
pop
pop
leave
ret
mov
push
mov
sub
push
lea
push
call
push
push
pop
push
call
pop
pop
xor
cmp
jne
or
jmp
lea
mov
mov
cmp
jae
add
orl
movw
mov
movw
movb
mov
mov
mov
add
lea
add
cmp
jb
push
push
cmp
je
mov
cmp
je
mov
add
mov
add
mov
mov
cmp
jl
mov
cmp
jge
mov
push
push
call
pop
pop
test
je
addl
lea
mov
cmp
jae
add
orl
andl
andb
andl
movw
movw
movb
mov
add
add
lea
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
cmp
je
mov
mov
test
je
test
jne
push
call
test
je
mov
and
mov
sar
shl
add
mov
mov
mov
mov
mov
mov
push
lea
push
call
test
je
incl
addl
inc
incl
cmp
jl
xor
mov
shl
add
mov
cmp
je
cmp
je
orb
jmp
movb
test
jne
push
pop
jmp
lea
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
push
lea
push
call
test
je
incl
jmp
orb
movl
inc
cmp
jl
pushl
call
xor
pop
pop
pop
leave
ret
or
jmp
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
call
ret
call
ret
mov
push
pushl
call
mov
test
jne
pushl
call
mov
push
pushl
call
mov
pop
ret
mov
cmp
je
push
pushl
call
call
orl
mov
cmp
je
push
call
orl
jmp
push
push
call
push
call
mov
movl
andl
xor
inc
mov
mov
movb
movb
movl
push
call
pop
andl
pushl
call
movl
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
pushl
call
pop
movl
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
mov
push
push
call
pushl
mov
call
call
mov
test
jne
push
push
call
mov
pop
pop
test
je
push
pushl
pushl
call
call
test
je
push
push
call
pop
pop
call
orl
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
mov
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
mov
test
je
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
andl
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
movl
call
push
call
pop
movl
mov
test
je
push
call
pop
cmp
je
cmp
je
cmpl
jne
push
call
pop
movl
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
mov
push
push
call
mov
test
jne
call
xor
pop
ret
push
mov
push
push
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
cmpl
mov
mov
je
cmpl
je
cmpl
je
test
jne
mov
mov
mov
movl
mov
mov
call
mov
cmp
je
pushl
push
call
test
je
call
pushl
mov
call
pushl
mov
call
pushl
mov
call
pushl
mov
call
mov
call
test
je
mov
push
pushl
call
call
mov
cmp
je
push
push
call
mov
pop
pop
test
je
push
pushl
pushl
call
call
test
je
push
push
call
pop
pop
call
orl
mov
xor
inc
jmp
call
xor
pop
pop
ret
push
push
push
call
xor
test
setne
mov
mov
ret
int3
int3
int3
int3
int3
int3
push
pushl
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
pushl
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
movb
movl
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
movb
test
js
jg
mov
mov
cmp
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
mov
push
mov
sub
mov
andl
andl
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
cmp
jne
mov
jmp
test
jne
mov
or
shl
or
mov
not
mov
pop
pop
pop
leave
ret
andl
ret
push
push
call
call
mov
test
je
andl
call
jmp
xor
inc
ret
mov
movl
call
call
ret
push
call
mov
ret
mov
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
mov
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
mov
push
mov
mov
pushl
call
pop
ret
push
push
call
xor
inc
mov
xor
cmp
jne
call
push
call
push
call
pop
pop
mov
lea
cmp
je
mov
jmp
push
call
pop
mov
cmp
jne
call
movl
xor
jmp
push
call
pop
mov
cmp
jne
push
push
call
test
jne
push
call
pop
call
movl
mov
jmp
mov
jmp
push
call
pop
movl
call
mov
call
ret
push
call
pop
ret
mov
push
mov
mov
push
lea
cmpl
jne
push
call
pop
test
jne
push
call
pop
pushl
call
pop
pop
ret
mov
push
mov
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
pop
cmp
jae
cmp
je
xor
pop
ret
pushl
call
ret
push
push
call
xor
mov
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
pushl
mov
call
pop
lea
mov
jmp
mov
sub
je
sub
je
dec
je
call
movl
call
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
movl
push
call
mov
xor
cmpl
je
cmp
jne
push
call
cmp
je
push
call
pop
xor
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
movl
cmp
jne
mov
mov
mov
add
cmp
jge
mov
imul
mov
mov
incl
jmp
call
mov
movl
call
cmp
jne
pushl
push
call
pop
jmp
mov
mov
cmpl
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
cmp
je
push
call
pop
andl
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
lea
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
lea
push
call
test
jne
test
jne
cmp
je
push
call
pop
mov
pop
xor
pop
call
leave
ret
mov
push
push
mov
push
push
call
add
push
call
push
call
pop
ret
mov
push
mov
pushl
call
test
je
pop
jmp
pushl
pushl
pushl
pushl
pushl
call
int3
xor
push
push
push
push
push
call
add
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
pushl
call
test
je
pushl
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
mov
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
mov
pop
ret
add
push
pop
cmp
sbb
and
add
pop
ret
call
test
jne
mov
ret
add
ret
mov
push
mov
push
push
push
mov
push
pushl
call
pushl
mov
mov
call
mov
cmp
jb
mov
sub
lea
cmp
jb
push
call
mov
lea
pop
cmp
jae
mov
cmp
jae
mov
add
cmp
jb
push
pushl
call
pop
pop
test
jne
lea
cmp
jb
push
pushl
call
pop
pop
test
je
sar
push
lea
call
mov
pushl
mov
call
mov
add
push
call
mov
mov
jmp
xor
pop
pop
pop
leave
ret
mov
push
push
push
call
pop
pop
mov
push
call
mov
mov
test
jne
push
pop
pop
ret
andl
xor
pop
ret
push
push
call
call
andl
pushl
call
pop
mov
movl
call
mov
call
ret
call
ret
mov
push
mov
pushl
call
neg
sbb
neg
pop
dec
pop
ret
mov
push
push
xor
pushl
call
mov
add
cmp
jb
pop
pop
ret
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmpl
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzwl
push
push
movzwl
xor
push
lea
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmpl
sete
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
mov
push
mov
sub
mov
xor
mov
mov
push
mov
mov
push
push
mov
call
andl
cmpl
mov
jne
push
call
mov
test
je
mov
push
push
call
test
je
mov
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
mov
test
je
push
push
call
push
call
mov
mov
mov
mov
cmp
je
cmp
je
push
call
pushl
mov
call
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
orl
jmp
mov
cmp
je
push
call
test
je
call
mov
test
je
mov
cmp
je
push
call
test
je
pushl
call
mov
pushl
call
test
je
pushl
pushl
pushl
pushl
call
jmp
xor
mov
pop
pop
xor
pop
call
leave
ret
mov
push
mov
push
mov
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
test
jne
xor
mov
jmp
mov
cmpw
je
add
dec
jne
test
je
sub
movzwl
mov
add
test
je
dec
jne
xor
test
jne
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
push
mov
push
push
test
jne
test
jne
cmp
jne
xor
pop
pop
pop
pop
ret
test
je
mov
test
jne
call
push
pop
mov
call
mov
jmp
test
jne
xor
mov
jmp
mov
test
jne
xor
mov
jmp
mov
cmp
jne
mov
sub
movzwl
mov
add
test
je
dec
jne
jmp
mov
sub
movzwl
mov
add
test
je
dec
je
dec
jne
test
jne
xor
mov
test
jne
xor
cmp
jne
mov
push
mov
pop
jmp
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
mov
add
test
jne
sub
sar
dec
pop
ret
mov
push
mov
push
mov
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
test
jne
mov
jmp
mov
sub
movzwl
mov
add
test
je
dec
jne
xor
test
jne
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
test
js
cmp
jle
cmp
jne
mov
pop
ret
mov
mov
pop
ret
call
movl
call
or
pop
ret
mov
push
mov
mov
push
mov
movb
test
jne
call
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
testb
jne
orl
movb
jmp
mov
mov
mov
mov
mov
pop
pop
ret
mov
push
mov
sub
pushl
lea
call
movzbl
mov
mov
test
jne
cmpl
je
mov
mov
movzwl
and
jmp
xor
test
je
xor
inc
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
push
pushl
push
call
add
pop
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
push
push
mov
push
xor
lea
push
push
call
xor
movzwl
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
lea
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
lea
push
pushl
call
mov
test
je
xor
mov
inc
cmp
jb
mov
movb
test
je
lea
movzbl
movzbl
cmp
ja
sub
inc
push
lea
push
push
call
add
mov
add
test
jne
push
pushl
lea
pushl
push
push
lea
push
push
push
call
xor
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
xor
movzwl
test
je
orb
mov
jmp
test
je
orb
mov
mov
jmp
mov
inc
cmp
jb
jmp
lea
movl
xor
sub
mov
lea
add
lea
cmp
ja
orb
lea
jmp
cmp
ja
orb
lea
mov
jmp
movb
inc
cmp
jb
mov
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmpl
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
movl
call
jmp
mov
push
call
pop
ret
mov
push
mov
sub
push
xor
push
lea
call
mov
cmp
jne
movl
call
cmp
je
mov
andl
jmp
cmp
jne
movl
call
jmp
cmp
jne
mov
mov
movl
jmp
cmp
je
mov
andl
mov
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
mov
push
call
mov
xor
mov
cmp
jne
mov
call
xor
jmp
mov
xor
cmp
je
incl
add
cmp
jb
cmp
je
cmp
je
movzwl
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
xor
inc
add
mov
mov
cmp
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
lea
push
push
call
mov
add
imul
mov
lea
mov
jmp
mov
test
je
movzbl
movzbl
jmp
mov
mov
or
movzbl
inc
cmp
jbe
mov
add
cmpb
jne
mov
incl
add
cmpl
mov
jb
mov
mov
movl
call
push
mov
lea
lea
pop
mov
mov
add
add
dec
jne
mov
call
jmp
orb
inc
cmp
jbe
add
cmpb
jne
lea
mov
orb
inc
dec
jne
mov
call
mov
mov
jmp
mov
xor
movzwl
mov
shl
or
lea
stos
stos
stos
jmp
cmp
jne
or
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
orl
call
mov
mov
call
mov
mov
call
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
rep
andl
push
pushl
call
pop
pop
mov
test
jne
mov
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
mov
call
testb
jne
testb
jne
push
call
pop
andl
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
movl
call
jmp
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
movl
jmp
andl
mov
call
ret
cmpl
jne
push
call
pop
movl
xor
ret
mov
push
mov
cmpl
je
pushl
push
pushl
call
test
jne
push
call
mov
call
push
call
pop
mov
pop
pop
ret
mov
push
mov
mov
push
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
jmp
mov
test
jne
mov
jmp
mov
sub
mov
mov
inc
test
je
dec
jne
test
jne
movb
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
ret
mov
push
mov
push
push
xor
pushl
call
mov
pop
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
push
pushl
pushl
call
mov
add
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
pushl
pushl
call
mov
pop
pop
test
jne
cmp
je
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
mov
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
movl
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
decl
jne
mov
add
push
call
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
push
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
movl
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
decl
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
mov
push
mov
push
push
mov
mov
xor
push
cmp
je
cmp
je
mov
cmp
je
cmp
jne
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
pushl
call
add
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
lea
movl
cmpl
je
mov
cmp
je
cmp
jne
push
call
pop
cmp
je
mov
cmp
je
cmp
jne
push
call
pop
add
decl
jne
push
call
pop
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmpl
pop
jne
cmp
je
push
call
pop
mov
pop
jmp
xor
pop
pop
ret
push
push
call
call
mov
mov
test
je
cmpl
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
pushl
add
push
call
pop
pop
mov
movl
call
jmp
push
call
pop
mov
ret
int3
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
call
test
je
push
call
pop
testb
je
push
push
push
call
add
push
call
int3
mov
push
mov
mov
test
je
sub
cmpl
jne
push
call
pop
pop
ret
mov
push
mov
cmpl
jne
call
movl
call
or
pop
ret
pushl
push
pushl
call
pop
ret
push
call
pop
ret
mov
push
mov
sub
mov
xor
mov
mov
push
xor
push
push
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
mov
sub
dec
cmp
jge
inc
mov
mov
cmp
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
mov
cmp
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
mov
push
push
push
pushl
pushl
pushl
call
mov
cmp
je
mov
test
je
mov
cmp
je
cmp
jg
push
pushl
push
pushl
pushl
pushl
call
jmp
mov
cmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
add
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
xor
cmp
je
pushl
push
pushl
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
pushl
push
push
pushl
call
mov
push
call
pop
pushl
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
add
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
push
mov
xor
mov
push
xor
push
push
mov
cmp
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
cmp
jne
xor
jmp
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
pop
cmp
je
movl
add
mov
test
je
lea
push
push
push
call
add
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
push
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
push
call
add
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
mov
cmp
ja
push
push
cmpl
jne
call
push
call
push
call
pop
pop
test
je
mov
jmp
xor
inc
push
push
pushl
call
mov
test
jne
push
pop
cmp
je
push
call
pop
test
jne
jmp
call
mov
call
mov
mov
pop
pop
jmp
push
call
pop
call
movl
xor
pop
pop
ret
mov
push
mov
mov
test
je
push
xor
pop
div
cmp
jae
call
movl
xor
pop
ret
imul
push
mov
test
jne
inc
xor
cmp
ja
push
push
pushl
call
test
jne
cmpl
je
push
call
pop
test
jne
mov
test
je
movl
xor
jmp
mov
test
je
movl
pop
pop
ret
mov
push
mov
cmpl
jne
pushl
call
pop
pop
ret
push
mov
test
jne
pushl
call
pop
xor
jmp
push
jmp
test
jne
inc
push
pushl
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
movl
xor
pop
pop
pop
ret
call
mov
call
push
call
pop
mov
jmp
call
mov
call
push
call
pop
mov
mov
jmp
mov
push
mov
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
pushl
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
lea
mov
mov
mov
cmpl
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
int3
jmp
int3
int3
int3
int3
int3
int3
incl
add
add
add
add
pushl
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
addl
incl
add
add
test
incl
add
add
incl
add
add
incl
add
add
incl
add
add
test
incl
add
add
incl
add
add
jmp
mov
mov
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
mov
xchg
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
mov
add
add
add
add
mov
add
test
add
add
shlb
add
out
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
and
add
push
mov
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
xorb
add
add
enter
loop
add
clc
mov
add
mov
add
add
dec
mov
add
add
jb
add
xorb
add
add
mov
add
int3
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
mov
add
mov
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
insb
mov
add
add
add
gs
lret
add
popa
jo
insb
insb
outsl
arpl
iret
add
popa
jo
jb
add
inc
add
je
jb
arpl
fs
jae
add
cmp
dec
outsl
popa
fs
imul
add
adc
dec
outsl
fs
gs
popa
outsb
fs
gs
add
in
add
imul
jb
gs
add
imul
insb
insb
outsl
arpl
add
add
imul
jae
xchg
add
je
imul
je
add
push
gs
imul
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jmp
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
inc
push
xor
cs
insb
add
xchg
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
dec
gs
jo
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
arpl
inc
gs
je
jb
jne
dec
outsb
outsw
push
add
add
gs
imul
outsl
arpl
jae
add
add
je
jne
jb
outsb
je
jb
arpl
jae
roll
fs
gs
js
gs
imul
gs
add
push
outsb
push
gs
js
gs
imul
gs
add
dec
jae
bound
addr16
jb
jae
outsb
je
add
dec
jae
jb
arpl
jae
jb
gs
je
jb
push
jb
jae
outsb
je
sbb
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
lret
arpl
gs
outsl
imul
add
gs
imul
je
je
dec
popa
outsb
fs
add
adc
inc
gs
outsl
fs
gs
imul
add
adc
inc
gs
outsl
fs
gs
imul
add
popa
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
inc
push
dec
jne
je
inc
jns
gs
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
outsl
add
gs
popa
outsb
fs
gs
outsl
jne
je
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
repz
je
imul
roll
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
arpl
gs
outsl
imul
add
insb
jae
insb
insb
outsl
arpl
add
add
insb
jae
gs
popa
insb
jne
add
add
insb
jae
gs
popa
insb
jne
add
add
insb
jae
jb
gs
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
push
gs
popa
jae
inc
jb
outsl
jb
add
add
je
jne
jb
outsb
je
push
dec
add
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
add
popa
jo
jb
popa
je
add
cmpsl
add
gs
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
roll
gs
jne
jb
outsb
je
jb
arpl
jae
add
inc
gs
jns
je
insl
push
imul
insb
gs
imul
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
out
add
je
jb
jb
je
arpl
push
arpl
outsb
add
aas
add
fs
imul
add
jb
inc
gs
push
dec
outsb
outsw
add
inc
gs
inc
push
add
aaa
add
je
inc
dec
inc
push
add
or
dec
jae
popa
insb
imul
add
add
je
push
outsb
ja
outsb
fs
add
popa
jo
imul
dec
inc
dec
popa
jo
je
imul
add
insb
je
inc
jns
gs
outsl
push
imul
imul
je
imul
push
add
rolb
dec
gs
jo
gs
insb
insb
outsl
arpl
add
add
add
add
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
or
or
or
or
or
or
or
or
add
xor
pop
pusha
push
nop
xchg
cwtl
pushf
mov
mov
mov
enter
rcl
aam
fcomp
loopne
in
call
icebp
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
push
push
push
movups
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
push
push
pop
pop
pop
pop
sbb
sbb
sbb
sbb
sbb
sbb
pop
and
and
and
and
and
and
daa
sub
sub
sub
sub
sub
sub
das
xor
xor
xor
ss
cmp
cmp
cmp
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
or
or
or
or
or
or
or
or
dec
out
mov
add
add
add
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
insb
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
or
add
or
add
dec
movsl
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
add
add
add
or
inc
add
and
add
inc
add
and
cld
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
inc
add
add
add
pop
inc
add
pop
inc
add
inc
add
pop
inc
add
inc
add
pop
inc
add
inc
add
push
inc
add
push
inc
add
add
add
add
add
add
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
sbb
inc
add
sbb
inc
add
sbb
inc
add
sbb
inc
add
sbb
inc
add
sbb
inc
add
inc
add
inc
add
inc
add
sbb
inc
add
sbb
add
sbb
add
sbb
add
add
add
add
add
lret
ror
add
lret
ror
add
lret
add
add
add
add
and
inc
add
and
cwtl
and
inc
add
lret
xor
inc
add
add
add
add
add
ljmp
add
add
add
add
int
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jg
jg
jg
sbb
inc
add
add
add
add
add
add
add
add
int
add
and
adc
inc
add
add
add
add
add
add
add
pop
add
add
add
add
pusha
add
addb
add
addb
orb
add
cwtl
add
orb
add
add
add
add
sbbb
add
loopne
add
add
add
add
add
add
add
add
add
clc
add
addb
add
add
add
add
add
add
add
insl
add
add
add
or
add
sub
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
insl
add
add
add
add
add
add
add
add
add
push
add
jo
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
bound
add
add
in
add
add
add
insb
arpl
add
add
in
add
add
add
mov
incb
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
popa
add
add
add
add
add
add
bound
add
add
add
add
add
add
in
add
add
add
str
add
add
add
add
add
add
add
add
add
add
addb
add
incl
add
loopne
add
sbb
add
add
add
add
mov
add
adc
addb
inc
addb
mov
inc
adc
inc
and
inc
inc
inc
add
inc
add
add
add
add
add
addb
xor
add
add
and
add
sbb
add
loopne
clc
pop
jmp
pop
inc
add
incl
loopne
decb
sarb
cmpb
add
cld
ds
cld
cmp
aas
cld
cmp
cld
xor
add
aas
incb
clc
jg
add
jg
add
incl
add
jmp
pop
clc
pop
incl
add
add
add
add
imul
add
addb
add
add
imul
nop
add
add
add
add
add
add
bound
outsl
add
je
and
add
add
add
add
scas
clc
cmp
rcrb
inc
adc
jb
mov
call
call
mov
and
cld
add
aaa
dec
mov
std
adc
scas
std
push
fisttps
loop
ljmp
mov
insb
sahf
data16
mov
popa
scas
fwait
in
add
mov
dec
ja
or
jl
sbb
movsb
push
adc
xchg
and
pop
sbbb
mov
sbb
mov
mov
fstpt
ljmp
testb
jns
fldenv
mov
mov
pop
xor
sti
out
in
call
je
jo
mov
call
or
xchg
out
les
movb
jl
jl
cli
jbe
test
mov
insl
aaa
jnp
xchg
and
sti
mov
jo
pop
add
aaa
daa
ds
imul
sbb
popf
mov
adc
sbb
push
cli
add
jb
dec
loopne
xchg
xchg
mov
xchg
lret
imull
adc
push
pop
sub
pop
and
push
je
sub
and
and
fucompp
sub
imul
sbb
fists
pushf
push
fstpl
add
or
sub
es
stos
testl
icebp
adc
push
fs
shll
movsb
jg
daa
jae
insl
outsl
xchg
repnz
stos
stos
sti
mov
pop
ficompl
jmp
nop
mov
and
popf
lds
xchg
pop
cmp
mov
inc
mov
jb
push
testb
data16
mov
adc
int
movsl
dec
jns
mov
dec
imul
mov
jle
push
std
nop
outsl
xchg
loope
cmp
or
and
lods
or
sub
mov
fiaddl
xchg
js
inc
fiaddl
adc
sti
out
movsl
push
and
pop
mov
xor
stos
testl
pop
cmp
cwtl
sub
pop
cltd
mov
pop
or
lea
int
outsb
jmp
push
test
push
jge
push
sub
mov
push
addl
xor
popf
mov
repnz
mov
pop
xlat
inc
mov
std
lea
mov
push
imul
xorl
push
sbb
mov
jl
lahf
jns
mov
nop
test
jmp
push
testl
icebp
in
aam
adc
rorl
pop
mov
outsb
sbb
mov
inc
std
jnp
mov
ss
test
adc
mov
pop
popf
cmpsl
mov
loopne
jno
fcomi
subb
out
cltd
sub
idivl
ds
fs
pop
jge
mov
add
stos
out
push
adc
sbb
inc
pop
xchg
jne
mov
cmp
sub
loopne
cmpsb
sbb
les
loopne
imul
and
scas
dec
xchg
daa
scas
cmp
jmp
or
adc
test
outsl
cld
aad
jge
sub
push
or
outsl
out
cwtl
rorl
ret
mov
push
lods
or
loopne
mov
lahf
loope
cmp
les
addl
pushf
or
inc
dec
aad
inc
sub
jmp
addr16
sti
adc
das
ds
adc
popa
or
push
xchg
mov
or
mov
mov
and
mov
adc
pop
inc
sbb
int
pop
in
push
push
dec
xchg
xchg
push
hlt
jle
inc
push
sbb
push
fiadds
movsl
xchg
and
cmp
std
dec
inc
inc
or
sbb
cmc
jno
dec
lahf
sbb
movsl
mov
mov
sub
push
pop
and
inc
iret
push
cmp
je
sbb
sbb
out
jl
outsb
push
mov
dec
test
xorl
stos
dec
pushf
push
cmc
and
in
js
xlat
lahf
mov
pop
jns
dec
push
mov
mov
jno
into
jge
and
cwtl
repnz
push
jl
fidivs
divl
mov
mov
std
push
sti
popf
push
mov
pusha
add
jno
mov
inc
out
out
call
cld
test
clts
rcrl
orb
jecxz
adc
push
mov
mov
sub
cs
mov
pop
pusha
ficompl
cmp
adc
mov
jge
dec
lret
cmpsb
fistps
xor
ds
mov
lock
adc
ss
popa
pop
jb
loop
sub
mov
cmp
aad
xor
fdivs
and
repnz
cmp
xor
sbb
add
testb
fidivrs
jge
jb
imul
lods
aad
or
jmp
and
mov
stc
enter
movsl
not
rcll
push
movsb
ret
dec
xor
mov
push
push
nop
mov
sahf
mov
jnp
dec
xor
sti
fcmove
movsl
adc
sub
dec
clc
xchg
out
stos
ljmp
mov
cmpsl
stc
xor
pushf
rcll
mov
lret
movsl
fsubs
popf
xchg
xchg
fimuls
push
sbb
nop
lahf
jno
std
mov
cltd
sahf
pop
fs
xchg
pusha
inc
cmpsl
popf
jle
imul
ret
dec
cmp
cltd
dec
inc
daa
shr
gs
stos
lcall
push
jg
adc
mov
cmpsl
leave
mov
movsl
xor
inc
aad
hlt
fcmovnb
and
inc
jg
dec
mov
push
or
inc
out
adc
loope
mov
push
roll
mov
and
int3
loopne
xchg
ljmp
inc
jns
jmp
push
jbe
leave
js
ljmp
ss
pop
jbe
pop
mov
out
ret
enter
test
pop
mov
xchg
addr16
inc
rorb
out
repz
int3
ss
addr16
popf
adc
sbb
or
dec
dec
jmp
daa
lock
je
scas
inc
das
dec
mov
orl
enter
inc
adc
stc
pusha
add
dec
xchg
mov
sarb
ds
jno
or
add
inc
flds
in
lds
jns
inc
addr16
mov
xor
sbb
sub
in
push
xor
aam
js
sti
outsl
mov
and
dec
inc
xchg
fdivrl
movsb
stos
fnstcw
js
loope
inc
push
push
cli
inc
add
fldt
jo
js
pusha
daa
daa
arpl
cs
leave
out
push
fstps
jp
jp
pop
or
push
add
lods
shr
dec
shll
sbb
and
in
dec
push
mov
sub
insb
inc
lods
dec
pop
mov
mov
jg
mulb
loop
mov
xor
fs
and
aad
int
or
sbb
xor
adc
pop
inc
int
mov
out
or
fimull
or
jnp
cmpl
adc
lea
mov
lea
jbe
aam
fdecstp
cmp
xchg
push
inc
lock
cmc
insb
testb
in
mov
dec
lret
fs
out
cltd
mov
inc
mov
mov
scas
dec
dec
pushf
dec
mov
cmp
cs
arpl
cli
cmpsb
lcall
sbb
lcall
pop
xchg
push
or
jmp
ret
shlb
mov
mov
pop
cmpsl
nop
push
xchg
push
jl
mov
lahf
or
xchg
scas
mov
fldenv
ja
bound
mov
icebp
add
cwtl
insb
pushf
jmp
iret
cli
and
shll
pop
stos
mov
sahf
mov
lea
sub
test
ret
pop
mov
xor
cld
negl
or
dec
jnp
dec
jmp
mov
xchg
or
sbb
in
push
sub
sahf
jecxz
inc
cli
add
mov
cmp
jno
jge
aam
adc
imul
dec
lret
jle
mov
push
mov
stc
faddl
ret
pushf
nop
xor
lret
fdivrs
mov
xor
dec
ficomps
std
pop
pop
mov
mov
pusha
pop
imul
aas
cmpsb
pop
jo
inc
sbb
sbb
sub
or
out
js
adc
xchg
xchg
mov
leave
arpl
xchg
jp
mov
jnp
xor
xlat
xchg
popf
and
sbb
lods
xchg
mov
mov
or
dec
add
mull
mov
cmp
push
pop
sub
cmpsl
cs
fists
in
sbb
push
sbb
outsb
scas
pop
cwtl
mov
push
and
lret
jl
pushf
cmc
outsl
xor
inc
pop
adc
inc
es
lea
mull
adc
ret
je
mov
pop
jg
push
mov
push
xchg
addb
inc
xlat
js
fdivrs
hlt
jbe
push
cmp
mov
mov
dec
shlb
dec
adc
insl
lret
bound
lds
popa
jmp
aam
orl
das
loop
mov
sbb
sbbb
cs
and
jmp
xchg
pop
out
in
fs
roll
pop
cmp
ja
sub
inc
mov
popf
nop
dec
enter
imul
repnz
xor
cltd
cmp
push
addr16
cmc
cs
inc
addb
gs
aam
scas
orl
icebp
pop
add
decl
pusha
mov
adc
xchg
fs
and
mov
push
and
pop
fwait
es
cmc
out
pop
pop
les
sbbl
mov
outsl
test
push
mov
aas
xor
mov
add
mov
push
jbe
daa
pop
and
cmpsb
int
ljmp
int3
dec
xor
cmpsb
dec
xor
xor
vpand
repz
adc
out
repnz
in
push
pop
cli
nop
sub
pop
lods
icebp
mov
cmpsb
incb
cmc
mov
aam
jg
dec
test
ret
pop
push
test
rcrl
imul
cs
add
add
inc
xor
or
cmp
out
clc
lahf
jecxz
pop
mov
push
mov
xor
dec
loopne
xchg
cmc
rclb
sbb
adc
outsl
test
pop
test
push
jge
jbe
jecxz
and
xor
xchg
mov
in
mov
adc
aad
jno
jne
add
dec
mov
cmp
mov
fildll
rolb
inc
sti
or
subl
and
or
or
cli
sahf
xor
cltd
fucomip
divb
loopne
aam
lea
jle
mov
xchg
sub
dec
or
loope
push
gs
mov
leave
push
add
adc
imul
jbe
subl
movsb
imul
mov
mov
cmp
cmp
sub
push
out
adc
inc
fcmovne
xor
jno
xchg
jp
jge
pop
mov
inc
inc
les
lcall
xchg
pop
push
movsl
jle
or
jl,pn
or
adc
popf
push
push
jge
mulb
pusha
addr16
pop
fucomp
and
loopne
pop
or
fs
test
add
cmp
ret
test
cmp
das
lods
cmpsb
lret
es
std
dec
data16
jp
popa
stc
sti
outsl
sbb
push
or
sti
jns
mov
out
insl
punpcklbw
xchg
mov
xor
mov
cld
push
mov
fsubl
inc
jmp
jbe
cwtl
sbbl
jo
push
test
aad
push
sbb
in
mov
jmp
imul
inc
cmc
sar
inc
pushl
pusha
mov
fs
scas
cmp
mov
lods
inc
push
adc
das
and
lret
lcall
mov
data16
ja
add
and
lcall
adc
push
stos
add
sub
je
aad
jecxz
add
ret
push
inc
insl
sbb
in
xchg
xchg
inc
pushf
mov
push
lods
inc
sub
sti
xor
ficomps
add
pusha
cmp
testb
push
aaa
shl
jne
sbb
in
inc
push
inc
shlb
cmp
test
movsb
test
xchg
rorl
cmp
xor
inc
andl
andb
pop
inc
lds
sbbl
je
ljmp
mov
stos
or
rcll
call
stos
in
das
or
stos
lods
out
xchg
aad
mov
xor
aam
cmpsb
addr16
fsubs
jb
icebp
sub
pop
popf
lock
lods
loopne
push
pop
ret
mov
in
scas
outsl
pop
cmc
sbb
int3
test
pop
or
cmpsl
push
sbb
xchg
mov
pusha
ss
rolb
stos
lret
sti
push
ficompl
xchg
aad
or
test
mov
sbb
movsb
iret
mov
lret
ret
push
insb
pop
inc
push
in
cmc
movsl
daa
ss
into
sub
pop
mov
lock
dec
test
stc
sub
ror
mov
std
mov
xchg
cltd
cmp
push
mov
movsb
xor
mov
xlat
es
jb
push
xorl
leave
cmpsl
lret
and
clc
mov
sbb
data16
xchg
test
push
fnop
mov
lods
inc
dec
loop
pop
insl
jbe
std
add
mov
mov
xchg
xchg
xchg
cmpsb
sbb
push
push
inc
add
cmpsl
scas
in
or
cld
mov
arpl
or
pop
dec
fldenv
cmp
enter
dec
adc
cmp
xor
mov
mov
test
and
incb
pop
push
adc
xchg
sahf
popa
or
mov
ret
jns
stos
mov
add
mov
mov
lret
xor
or
roll
cmp
loopne
jl
inc
cmpsl
dec
pop
cmp
mov
mov
addr16
imul
and
sti
fs
adc
orb
push
xor
outsb
and
loopne
out
insb
imul
push
lock
sbb
mov
mov
inc
int
sbb
mov
add
sti
jmp
inc
add
pusha
xor
adc
loop
sub
or
jg
jle
addr16
dec
mov
dec
push
mov
movsl
sbb
ds
and
outsb
mov
or
les
inc
or
pop
sbbb
ds
fisttpll
nop
jno
hlt
mull
mov
in
sahf
mov
cltd
and
sub
inc
pushf
sub
loope
lock
adc
xchg
loopne
data16
cmp
mov
push
cmpsb
mov
adc
dec
sub
mov
add
fildl
shrl
xchg
repz
inc
test
fisubl
in
adc
ret
sbb
dec
xchg
loop
in
arpl
jecxz
and
shlb
ja
jno
push
fildl
inc
xor
pop
lcall
lret
mov
mov
mov
or
repnz
mov
add
shlb
cltd
push
scas
cli
out
mov
popf
sbbb
mov
dec
xlat
ret
mov
out
mov
movsb
loope
lea
aad
movsb
xchg
fcmove
mov
adc
es
testb
fstpl
mov
dec
out
test
cwtl
incb
mov
push
mov
jno
sbb
sahf
fisubl
les
mov
lcall
repnz
pop
cwtl
or
push
push
les
and
xor
push
xchg
mov
add
inc
lds
pop
insl
dec
sub
fistps
outsl
dec
add
loope
mov
cmp
clc
inc
sub
add
mov
notl
cmpsb
ds
xchg
out
cmc
mov
mov
lret
xor
jnp
mov
xor
xchg
jb
xor
sbb
mov
pusha
nop
xchg
repz
jns
pop
cld
cmp
lret
je
inc
notb
int3
and
xchg
insb
mov
adc
gs
xchg
aas
or
in
imul
arpl
lods
pop
xchg
and
imulb
dec
mov
in
fsubrl
loopne
cmp
sti
cs
add
les
cmpsl
add
push
jp
roll
dec
push
dec
fldcw
push
push
in
mov
outsl
loop
lcall
fucom
shrb
adc
jno
adcb
xchg
outsb
popf
sbb
xlat
inc
jmp
xor
sub
mov
scas
push
dec
jmp
cwtl
lahf
or
mov
dec
mov
mov
clc
xchg
and
les
jae
inc
stos
jb
dec
imul
incl
movsb
and
sti
mov
sub
adc
imul
shrl
mov
jno
sbb
add
call
mov
xchg
jne
test
sub
loop
std
test
fwait
pop
fildll
test
pop
cmpsb
inc
push
inc
xchg
add
xor
enter
dec
jne
push
repz
lahf
sbb
iret
out
mov
sbb
and
insl
mov
into
jecxz
mov
test
fstp
and
add
imul
adc
add
aam
cli
push
movsb
sub
push
xchg
bound
pop
or
stos
mov
cltd
sbb
inc
fbld
push
and
fwait
scas
insb
fcmovne
lcall
inc
out
cs
fistps
jae
or
push
and
or
ret
jmp
jl
jns
insl
push
pushf
or
enter
and
add
cld
push
gs
and
pusha
jmp
cmp
in
add
mul
mov
sbb
adc
shll
push
pushf
lret
in
push
push
push
cmpsb
pusha
push
mov
jge
lods
xchg
inc
ds
pop
cmp
out
test
cmp
mov
mov
pop
rorb
jne
jecxz
ror
and
sub
pop
add
push
mov
mov
add
pushf
cmc
and
data16
push
pop
dec
aad
sbb
pop
jns
cmpsb
les
mov
rorl
jne
movsb
sti
jle
jb
test
inc
sbb
je
pop
sub
fimull
push
or
or
clc
jl
aaa
mov
dec
aas
cmp
and
pop
and
inc
cmpsb
and
pop
mov
sub
mov
xchg
out
inc
enter
mov
ss
lock
dec
adc
scas
mov
in
es
sub
mov
xchg
sub
mov
aam
pop
je
out
push
notl
lcall
int3
and
jecxz
or
adc
mov
repnz
add
mov
out
sarb
lcall
pop
add
inc
mov
aas
into
lock
jecxz
jl
shll
inc
mov
push
pop
and
mov
repnz
hlt
mov
ret
adc
cmp
jb
roll
jnp
pop
psubq
imul
test
fs
mov
and
sbb
and
inc
into
scas
scas
rcrl
cmp
call
es
sub
gs
repz
fwait
push
pusha
enter
lods
nop
xor
repz
and
push
adc
mov
mov
icebp
xchg
xor
pop
adc
mov
jge
fisubrl
pop
push
sub
daa
adcb
push
cmp
insb
xchg
jns
xor
adc
and
cs
iret
ret
movsb
mov
mov
sub
ret
test
test
push
sahf
mull
cmc
ja
jle
out
dec
fwait
or
mov
push
bound
sbb
or
add
pmovmskb
ja
dec
rorb
xchg
repz
cmp
mov
out
das
sbb
loope
dec
aad
ror
dec
test
stos
loop
ljmp
mov
fdivl
jg
fwait
mov
sahf
ljmp
mov
in
jl
mov
call
jp
lcall
jg
dec
loope
jg
sahf
inc
mov
pop
into
lret
sarl
mov
shlb
push
xlat
add
dec
int3
or
in
pop
bound
mov
or
sub
xchg
jbe
movsl
mov
or
pop
jp
imul
outsl
je
out
dec
pop
dec
xor
inc
mov
rolb
push
pop
jbe
mov
or
cwtl
ret
adc
sub
inc
cmp
mov
es
out
sbb
nop
repnz
or
pop
jns
pop
cmp
movsb
in
scas
stc
sbb
test
aam
lods
adc
leave
lret
mov
sbb
xor
xchg
mov
negb
mov
mov
pop
adc
fdiv
xchg
arpl
sub
inc
stos
imul
lret
mov
std
push
pop
hlt
in
iret
jbe
xchg
in
push
push
mov
ror
cwtl
repnz
aas
push
lahf
xor
sub
into
jns
ret
inc
xor
mov
test
fdivrl
insb
movsb
test
or
test
jmp
mov
fmuls
xchg
pop
cmp
push
ret
and
shl
cmpsb
insl
lret
or
cmpsl
into
and
push
sbb
test
cmpsb
int3
icebp
pop
xlat
adcb
pop
cltd
orb
mov
loopne
data16
and
adc
das
das
les
movsl
in
cmp
lods
mov
push
fstp
popf
mov
outsb
inc
icebp
in
imul
pop
clc
sarb
mov
inc
push
inc
cmp
push
pop
lret
in
cmpsl
ret
and
in
stos
xor
xchg
add
out
cmpl
call
jns
add
nop
arpl
subl
cmpl
fwait
das
add
push
cmpsl
dec
dec
and
xor
sub
xor
jmp
out
mov
jmp
sbb
sub
dec
std
sub
lds
icebp
decl
data16
pusha
cmp
mulb
or
andl
lret
insl
fs
movsb
sub
iret
mov
sbb
mov
lea
jb
xor
es
cmp
push
jmp
push
aaa
stc
lods
jo
push
cmpsl
or
adc
xchg
push
xor
sub
xchg
imul
pop
mov
push
pop
sbb
test
es
adc
jns
fwait
subb
daa
mov
inc
jo
inc
fs
cmp
shl
outsl
sub
cli
add
mov
mov
xlat
mov
lret
inc
das
jbe
ljmp
mov
test
jns
and
dec
pop
mov
sub
lcall
pop
imul
xchg
ror
shlb
or
or
jbe
mov
in
pop
jo
sub
mov
orl
mov
sbb
mov
mov
fstps
push
loopne
inc
adc
push
lods
cmc
add
sti
xor
and
outsb
call
paddusw
fdivrl
movsb
mov
mov
vmwrite
dec
mov
daa
mov
sarb
jb
xchg
add
push
or
sbb
popl
xor
stc
arpl
push
mov
sub
xchg
ret
push
hlt
repnz
insl
mov
mov
cltd
int
lret
adc
pushf
pushf
inc
out
pop
add
test
insb
lret
mov
xchg
dec
xor
xlat
test
jmp
add
outsl
mov
mov
mov
shr
mov
sbb
in
out
cmp
ljmp
or
loop
cmp
add
jne
and
out
sub
testl
pop
add
xor
movsb
add
or
xor
rorl
pop
aaa
sbb
das
movsl
insb
and
in
jae
mov
dec
push
or
nop
add
cmc
add
movsl
xor
jmp
and
cmp
mov
mov
cli
mov
cltd
sub
cwtl
cld
repz
mov
rolb
inc
sahf
pushf
popa
mov
mov
lds
lods
popa
lret
fsts
rcll
clc
cmp
rol
xchg
push
cmp
inc
ds
addr16
xchg
daa
fwait
bnd
sbb
cwtl
mov
jp
lret
aaa
cmp
jbe
cmp
mov
pop
xchg
push
mov
lock
mov
movsl
push
pop
test
repz
cmpsl
test
or
int3
add
and
push
mov
shl
jae
popa
xor
sbb
in
pop
notl
sub
stc
sbb
stos
imul
sbb
and
pop
jne
mov
xchg
int
ss
int3
pop
mov
lea
xor
cmpsb
insl
stos
pop
fwait
push
adc
jns
push
jge
cmp
mov
dec
cmp
out
jl
sub
sbb
lret
push
adc
cmc
xor
ss
cwtl
dec
aas
dec
sub
aad
inc
jne
into
add
push
sti
stos
test
sahf
jnp
pop
jecxz
xor
xchg
mov
xor
stos
mov
xor
jbe
lock
iret
ret
pushf
sbb
outsl
pop
or
adc
in
notl
jbe
mov
cmpsl
mov
loop
gs
hlt
mov
push
mov
push
add
ja
imul
stos
insl
push
leave
test
lock
cmp
clc
mov
mov
jno
pop
adc
or
mov
int3
xorl
rcrl
jecxz
movsl
sbb
inc
loopne
fcomi
add
inc
cmp
xlat
test
insl
sbbl
out
jo
jno
mov
inc
xchg
and
mov
xor
sbb
test
jmp
sbb
js
lea
cs
lcall
mov
movsb
xor
cmpsl
and
add
pop
xor
cmc
xchg
add
imul
roll
mov
jecxz
cmp
dec
ljmp
xor
mov
add
jmp
jle
cmp
add
cld
test
mov
xchg
das
adc
mov
jnp
ss
pop
in
push
scas
ret
add
in
sbb
jp
notb
adc
ja
leave
xchg
and
pop
out
xchg
push
aas
add
cmp
pop
notl
sub
jnp
mov
push
fcomi
mov
das
mov
push
lret
mov
add
ss
pop
jne
xchg
push
lock
mov
pop
pop
clc
test
inc
sbb
sub
or
push
mov
pop
fcomi
test
adc
push
or
add
fldl
out
sbb
imul
cmc
shlb
ja
cmp
in
jnp
add
out
pop
fcmove
dec
popa
repz
pop
pusha
movsb
mov
sbb
cmp
xor
into
cmp
add
sahf
jbe
push
sbb
out
mov
in
cmp
js
xchg
rcrb
mov
sbbl
lods
scas
mov
sub
scas
add
test
sahf
pushf
jae
ret
cwtl
cwtl
jnp
jmp
mov
mov
out
and
cmp
adc
ret
in
cmp
fwait
mov
and
cmpsl
mov
cmpl
jl
lahf
jo
pop
lods
dec
jbe
mov
cltd
pop
data16
cmpsl
mov
test
mov
popf
faddl
xchg
addr16
mov
dec
jge
rol
mov
decb
sub
inc
les
push
scas
inc
idivl
push
fs
sbb
cmp
sarl
js
pop
loope
cmpsb
jae
lea
outsb
ficompl
xchg
in
movsl
adc
fstpt
iret
out
icebp
sbb
pop
cwtl
clc
add
shr
mov
jl
decb
sti
inc
outsl
inc
call
je
jno
push
loopne
sub
jne
inc
out
or
gs
call
xchg
shl
cmp
add
in
mov
scas
and
pop
mov
test
aas
aaa
cli
xor
and
xchg
push
add
mov
lods
int
scas
cs
sub
xchg
popf
enter
fwait
xchg
repnz
lds
pop
jns
pusha
jb
in
loope
mov
sbb
mov
lock
enter
sti
xchg
loope
mov
adc
dec
call
fidivrl
sbb
hlt
add
adc
data16
cmpsl
cmc
icebp
call
jle
jp
dec
cltd
pop
cmp
ds
subb
mov
cmp
cld
adcb
out
jecxz
mov
neg
test
jecxz
mov
jae
test
cmp
xchg
cmp
loop
cmp
ja
popa
xchg
sbb
aad
aaa
mov
sbb
filds
xchg
mov
jns
xchg
shrb
adc
push
mov
ret
xor
adc
mov
sbb
daa
jl
ffreep
sahf
sbb
mov
jnp
adc
outsb
adcl
ret
repz
jl
mov
jmp
or
push
rorl
jno
fwait
jno
lods
cs
push
ljmp
hlt
sbb
imul
mov
stos
fs
or
clc
jge
add
dec
adc
ret
pop
aad
ja
cmpsb
ss
push
dec
in
jno
arpl
pop
or
mov
mov
in
mov
mov
sbb
mov
out
sbb
lock
jl
insl
jne
clc
jge
add
adc
data16
adc
insl
je
inc
cs
lret
or
mov
jg
or
jle
sbb
sbb
jmp
scas
pop
mov
decb
ret
xor
xor
cmp
and
pop
loopne
popa
movsb
out
fiadds
or
or
or
repnz
movsl
std
int3
inc
jmp
and
inc
jne
stos
mov
pop
cmpsl
iret
jg
mov
aad
pop
insl
icebp
pop
add
or
cmp
mov
lret
ss
lretw
cmpsl
out
jo
mov
int
mov
roll
sbb
or
lea
rep
inc
pop
icebp
cmc
inc
cltd
testl
mov
rclb
iret
sbb
cmp
nop
pop
repnz
lret
mov
push
add
stos
and
and
inc
adc
iret
or
iret
enter
loope
mov
popf
sub
cmp
or
enter
inc
iret
stos
fs
mov
pop
cmp
lret
dec
aad
idivb
ljmp
call
sub
push
fidivrs
rorb
xor
jne
imul
roll
repnz
or
jle
in
jo
ficoms
jae
mov
add
xchg
inc
scas
and
mov
aad
adc
fcomip
or
mov
out
lret
mov
xchg
clc
lret
jl
hlt
pop
push
push
loope
fcomps
or
jne
mov
std
cmp
or
sti
xchg
rcrl
fsubl
cmp
dec
sbb
push
mov
pop
idivb
call
pop
mov
mov
insb
leave
clc
bound
aam
sub
xchg
nop
mov
jmp
out
out
inc
adc
xor
cltd
xchg
pop
pop
push
sbb
push
aaa
imul
in
adcb
mov
add
dec
xchg
lret
pop
scas
stos
mov
enter
gs
ds
mov
out
ljmp
das
adc
mov
shll
iret
nop
lret
inc
add
or
xor
sbb
mov
add
cmp
mov
mov
pop
cmpsb
mov
jno
out
call
cmp
mov
and
pusha
fsubl
inc
aam
into
mov
dec
test
push
nop
shlb
mov
mov
pop
je
mov
shll
inc
and
pop
aad
sub
stos
push
imul
aaa
cld
add
jmp
out
lods
pusha
sub
aaa
add
icebp
mov
in
push
test
mov
xchg
mov
or
jno
gs
aad
push
xor
sti
sub
sub
jno
jle
inc
adc
popa
mov
mov
loop
cmpsl
adc
lret
xchg
mov
cmpsb
add
pop
xor
push
pop
xchg
jne
cmp
mov
pop
aas
test
scas
loope
test
fimull
fldt
popa
pop
cs
jecxz
sub
push
pusha
ljmp
or
pop
test
ds
jle
es
lret
mov
loopne
dec
mov
aam
or
out
xor
inc
iret
sub
jmp
pop
mov
add
cmp
mov
mov
fwait
pusha
xor
xchg
xchg
fwait
loopne
dec
add
mov
test
xor
mov
insb
mov
pop
stos
xchg
add
mov
mov
ret
jb
push
add
lret
ss
stos
arpl
inc
cmp
jnp
mov
rolb
adc
aas
ds
pop
cld
lret
mov
sarl
mov
fcomip
imul
xor
or
add
sub
aas
addl
ds
push
pop
outsb
call
mov
pushf
mov
dec
dec
jae
dec
gs
push
jge
mov
ljmp
test
cld
pushf
movsb
jo
sbb
imul
outsb
gs
movzwl
dec
add
fcomip
inc
adc
push
mov
sub
dec
mov
mov
outsb
jmp
leave
jl
enter
loopne
jecxz
insl
xor
aaa
ljmp
ret
call
nop
jg
std
mov
repz
adc
push
cld
sub
icebp
dec
xor
mov
jmp
jmp
and
jb
cmpsl
dec
add
fcom
shll
roll
and
movsb
xor
cs
scas
mov
ds
loop
stos
adc
xchg
lret
popa
xchg
ss
xchg
loopne
xor
or
imul
sub
sbb
push
out
push
mulb
inc
xchg
push
shrb
out
aas
inc
mov
test
cmp
es
data16
xor
mov
mov
inc
mov
test
mov
outsb
into
sbb
lcall
leave
inc
fmull
cld
push
in
xchg
add
jns
scas
jbe
sbb
int
sbb
mov
jl
pop
lahf
and
shl
lds
out
add
lcall
orb
dec
in
jmp
test
clc
scas
sti
lret
inc
or
push
inc
push
jl
icebp
ret
stos
mov
pushf
frstor
clc
pop
fs
insb
mov
pop
aam
and
aas
fdiv
jl
or
xor
xchg
leave
test
leave
rcl
iret
xor
test
pop
mov
adcl
cmpsb
cld
dec
scas
jge
inc
or
dec
inc
jo
push
jno
or
mov
sbb
adc
push
push
pop
imul
les
nop
enter
int3
or
addr16
mov
inc
jecxz
hlt
dec
jnp
push
pop
dec
pop
aam
arpl
out
mov
sub
cld
shlb
std
lret
pop
pop
jae
pop
in
and
add
lock
adc
out
xchg
xchg
push
in
lea
and
enter
js
call
cwtl
or
cltd
testb
add
or
ret
pop
add
jmp
out
orb
add
daa
xor
cmp
pop
xor
aad
repnz
mov
cltd
imul
sub
add
cwtl
dec
icebp
jo
jp
xchg
dec
pop
mov
dec
or
mov
mov
sub
add
mov
stc
stc
xchg
or
popa
jae
aam
xor
push
rorb
in
fmul
mov
sub
mov
mov
dec
dec
cmpsb
in
jae
mov
imul
movsb
jo
jae
or
and
adc
test
pop
cld
sbb
xor
ss
xor
in
notb
pop
mov
pop
adc
je
jno
cmpb
pop
jns
outsl
stos
insb
rcll
scas
fldt
outsl
cmp
jle
mov
and
push
add
push
sahf
in
xchg
lahf
bound
push
out
xor
mov
je
ljmp
repnz
stos
sbb
xchg
sbb
jecxz
int
push
cmc
push
inc
mov
lds
sub
stos
std
dec
sub
popf
gs
xor
mov
mov
push
lock
sub
or
ret
jns
cli
lods
lret
int3
jle
daa
cmp
cmp
pop
add
inc
pop
inc
mov
fcmovbe
push
cmp
loopne
push
mov
aam
hlt
data16
or
test
out
cltd
sub
in
fisubs
fnstsw
cmp
add
addb
cmp
lock
vsubss
sbb
sbb
inc
cmp
out
sub
pushf
andl
sub
pop
dec
repz
int
ds
movsl
mov
inc
lret
lods
xor
ficoml
xchg
popa
hlt
ss
or
jns
imul
popa
cmp
test
pop
imul
sub
sub
pushf
fisttpl
cli
outsb
dec
nop
mov
jno
dec
mov
pushf
sbb
cs
jno
inc
fldt
ficoml
pusha
and
rcrl
and
mov
push
mov
adcb
inc
mov
std
outsb
or
mov
out
and
popa
sub
push
or
mov
add
lret
ss
scas
repz
adc
jle
shlb
fninit
xchg
cmp
fcoml
repz
ret
xor
or
push
xor
jbe
push
shr
mov
outsb
jno
pop
sbb
fidivs
cmp
sub
fisubl
cmp
and
clc
ds
inc
xor
vrsqrtps
pushf
sahf
pop
jmp
xchg
jg
sbb
or
xchg
mov
fwait
movsl
and
sub
jp
popf
jp
pushf
push
xor
xchg
inc
lcall
enter
xchg
je
scas
adc
inc
lahf
xor
or
test
mov
daa
mov
repz
push
mov
std
stos
ljmp
cmpsl
aad
dec
in
sub
cmp
jae
das
xlat
test
in
mov
mov
rcrb
and
or
and
sub
push
pop
andb
sub
jl
sbbb
pushf
fmull
push
sbb
aad
popa
and
or
aaa
mov
fnsave
clc
pop
mov
or
mov
push
jmp
hlt
sbb
test
jmp
mov
sahf
aam
dec
rorb
pushf
aam
lock
ret
ds
je
push
je
or
xlat
xor
bound
repz
data16
iret
sub
jno
inc
lret
stc
in
cld
push
adcb
dec
push
call
push
mov
dec
and
movsb
sub
in
insw
push
insb
cmp
js
pusha
cmpsl
jo
mov
das
xchg
bound
xchg
clc
int3
jp
mov
mov
stos
hlt
cmp
leave
pusha
mov
enter
sbb
adc
fs
sbb
ljmp
jno
icebp
inc
or
jbe
jnp
stos
test
xchg
mov
mov
xor
inc
pop
fs
or
cmpsl
dec
hlt
fidivrs
sub
ret
sub
fsubs
shl
mov
inc
jmp
push
xchg
adc
ret
cmpsl
arpl
call
inc
sub
inc
icebp
scas
push
mov
jns
or
fstps
scas
popf
pop
leave
mov
push
mov
or
sub
dec
inc
mov
iret
repz
push
movsb
scas
xchg
push
mov
push
in
pop
test
xor
ljmp
sbb
movsb
data16
mov
dec
stos
sub
inc
hlt
push
xor
mov
nop
imul
rorb
stc
hlt
cltd
lods
and
out
jbe
lock
and
mov
sarl
in
adc
jecxz
jne
xlat
mov
sbb
shll
test
adc
sub
hlt
mov
xor
pusha
testl
push
cmp
jns
ret
push
dec
sbb
movsb
test
insb
test
sbbb
dec
frstor
ret
imull
int
dec
sub
push
imul
sub
sbb
mov
jo
add
imul
jl
dec
notb
xchg
sub
stc
test
inc
sbb
dec
pop
or
add
mov
push
in
repz
or
subb
xchg
pushf
nop
test
pop
dec
xlat
fdecstp
cli
xor
adc
mov
sarb
add
ret
loopne
pop
and
adc
mov
fadds
adc
dec
aaa
and
shl
mov
or
clc
mov
push
in
push
loope
out
mov
bnd
jg
add
xchg
or
inc
lock
icebp
rolb
shl
cwtl
add
jns
jae
xlat
jg
cmp
xor
fcoms
jns
hlt
and
fldcw
push
add
mov
jle
lcall
std
jne
cmp
inc
arpl
fdivrl
sbb
inc
sbb
shl
push
les
cmpl
js
jmp
stc
movl
aam
into
jo
pop
test
out
mov
add
inc
xor
jmp
ret
inc
inc
adc
stos
sub
dec
ficompl
dec
arpl
negb
roll
out
and
pop
jg
mov
ljmp
sub
movsb
pop
mov
mov
out
mov
cld
push
push
inc
aad
sub
data16
jbe
in
mov
xor
or
add
fldl
dec
aad
push
jae
popa
ret
adc
adc
and
push
jmp
jns
mov
call
dec
pop
ds
in
jmp
mov
xor
lock
or
ja
cmp
popl
jl
fiaddl
pusha
mov
sub
adc
pop
xchg
inc
cmpsl
sbb
sub
movsl
dec
gs
inc
loopne
out
das
in
xchg
mov
sbb
cmp
outsb
xchg
iret
popf
sub
mov
scas
push
pop
data16
cmp
ljmp
pop
xor
dec
inc
mov
andl
or
jecxz
lahf
jns
mov
xchg
repz
sbb
lea
cmp
adc
mov
dec
xchg
repz
leave
js
dec
push
fnstsw
xchg
pop
les
mov
int
inc
pavgb
mov
sub
jne
xor
out
mov
mov
jno
jns
insl
jno
lea
mov
push
push
jmp
fadds
pop
lds
aad
aam
insl
lret
and
movsl
xchg
sbb
xor
push
dec
xchg
cmpb
lock
mov
adc
es
out
inc
lcall
push
dec
out
xor
movsb
jl
dec
iret
xor
ds
sub
or
or
ljmp
inc
clc
jne
mov
or
and
add
sbb
jb
push
jp
out
cmp
mov
insb
movsb
test
sub
aad
pop
jno
int
adc
push
gs
jmp
mov
or
call
test
andl
or
test
andl
cmp
mov
mov
fcoms
dec
and
test
add
loop
and
int3
dec
or
movsb
add
clc
icebp
mov
inc
mov
pop
inc
imul
out
cwtl
sub
or
int
loop
dec
in
add
mov
or
xor
jno
or
jae
fcoml
push
les
nop
test
lcall
xchg
jp
es
dec
xchg
mov
mov
push
jns
ss
cmp
push
mov
sub
xchg
outsl
jmp
dec
or
jmp
test
cltd
fs
std
add
mov
lret
or
bound
xchg
test
popl
adcb
dec
xor
shlb
fucom
scas
frstor
es
mov
or
dec
dec
mov
xor
inc
and
sbb
or
or
xchg
hlt
xchg
jle
mov
dec
mov
push
dec
das
sub
push
lods
inc
mov
jecxz
cmp
mov
jmp
out
fisubrl
inc
mov
in
inc
in
roll
das
dec
popf
and
mov
out
and
add
mov
jbe
dec
push
test
or
or
mov
fdivrl
cmp
aam
push
adc
mov
stos
sub
fistl
test
cli
mov
ret
enter
loopne
in
stos
jmp
loope
loopne
jbe
loopne
pop
outsl
jecxz
mov
sbb
add
pushf
mov
in
cwtl
enter
insb
adc
xor
pop
loope
icebp
in
and
xchg
pop
sbb
xchg
mov
and
pop
push
pusha
cmp
jnp
adc
fstpl
mov
jl
das
xchg
inc
sub
lods
sarl
pop
daa
sbb
call
sbb
cmp
xchg
out
in
mov
scas
in
hlt
xchg
loopne
stc
jbe
mov
orl
scas
mov
sbb
rorb
mov
inc
sub
daa
fbld
jmp
xchg
push
or
sub
adc
xchg
push
test
sub
mov
lods
sub
jg
nop
aaa
pop
add
pop
mov
xchg
cli
je
aas
movsl
push
test
outsb
and
mov
pop
aaa
insb
sbb
push
out
lea
es
je
sbbb
cs
add
add
repz
pusha
jg
insb
sub
dec
sub
enter
lods
mov
movsl
or
push
inc
cmp
dec
xor
lret
mov
nop
mov
and
nop
lds
push
aam
pushf
lret
sbb
into
rcrl
shll
jnp
jmp
mov
inc
push
stos
in
aam
xchg
test
pop
mov
dec
sub
mov
inc
mov
adc
int3
add
mov
pop
adc
lret
mov
inc
hlt
cmp
xchg
enter
jo
fstpt
test
and
xor
and
mov
rorl
int
mov
test
mov
dec
into
aaa
xchg
cmp
xlat
cld
mulb
mov
fldt
lods
add
inc
jne
xor
pop
bound
sbb
lcall
mov
clc
push
movsl
cmp
loopne
sbb
cmpsl
cld
js
pop
inc
mov
inc
pop
mov
nop
movsl
fisttpll
add
add
xor
scas
mov
scas
js
ret
sub
push
jecxz
js
jne
in
shrl
dec
aas
cli
push
cli
add
je
adc
add
pop
mov
xchg
lods
mov
xor
add
mov
xchg
or
mov
push
imul
xchg
dec
push
adc
loopne
int3
ret
inc
ret
scas
jno
sbb
sbb
mov
lds
xor
fildll
jp
jnp
inc
addl
push
xor
js
fnsave
and
push
mov
je
and
push
dec
scas
or
out
mov
scas
stos
or
lods
sbb
xor
insb
in
idivb
rep
mov
imul
fdivr
enter
iret
inc
test
cmp
xlat
lahf
mov
ss
pushl
push
stc
mov
or
dec
mov
mov
sarl
xchg
scas
push
or
pop
into
loopne
in
jae
lock
je
cli
fistpl
insb
xchg
add
mov
testb
lods
mov
fdivrl
outsb
xor
xor
or
and
aaa
les
inc
sti
outsl
jg
push
pop
dec
push
fmuls
or
xchg
popa
cmpsl
lds
dec
mov
jo
xlat
in
fidivl
andb
out
inc
mov
lret
loop
jge
add
idivb
enter
sarl
out
jge
jl
pop
lea
fwait
dec
rcll
pusha
ss
adc
inc
out
pusha
leave
popa
mov
or
lods
push
out
sub
lods
add
sti
jmp
pop
jge
aam
mov
dec
xchg
jno
xchg
dec
cmpsl
rclb
jle
push
ss
cmc
cld
sub
pop
fistps
and
push
stc
scas
loope
lcall
mov
popf
ljmp
and
cmp
lahf
mov
dec
dec
mov
add
dec
adc
xchg
mov
mov
popf
aad
xor
dec
cltd
lods
sbb
jnp
pop
je
jge
stc
sub
movsb
in
xchg
rol
frstor
xchg
repnz
sub
cmp
jno
add
pop
fmulp
inc
sub
dec
ficoml
sbb
jl
sbb
scas
bnd
test
push
xor
in
sar
and
push
test
sub
lods
xor
pop
mov
lods
or
mov
push
cmp
jae
bound
jae
fdiv
stos
xchg
stc
das
dec
xchg
repnz
insl
jecxz
adc
jae
cld
dec
pop
std
faddl
and
lea
jo
or
notl
mov
outsb
mov
sub
icebp
daa
xchg
add
pop
lahf
pop
lock
faddl
scas
icebp
jl
xchg
and
rorl
lods
shr
lcall
repz
push
jne
and
push
loopne
xchg
jp
cmc
adc
jl
xor
sbbl
scas
sub
pop
mov
je
cmp
jl
or
dec
xor
push
add
shlb
roll
push
push
subl
dec
jle
mov
push
std
xchg
repnz
mov
and
and
loop
pop
cmp
aam
jecxz
enter
outsb
cwtl
aaa
into
push
outsb
aaa
add
dec
fxam
mov
ret
or
pop
fcompl
pop
sbb
enter
aam
fstpl
pop
je
sbb
nop
lret
fiaddl
bndldx
mov
sbb
jbe
adc
xor
ja
add
jne
in
sub
lret
adc
call
or
xor
ret
push
or
adc
testb
imul
movb
cmp
pop
scas
pop
aas
sahf
xor
sarb
add
stos
or
shlb
rcrb
faddl
mov
lds
and
cwtl
fs
jo
fldt
xor
pop
mov
add
mov
or
cli
pop
clc
test
into
and
xor
das
or
and
lret
imul
ficoms
sti
xchg
mov
jo
ficompl
or
iret
inc
cmp
push
daa
jne
mov
or
ret
enter
stos
repz
test
mov
in
test
and
push
mov
repnz
mov
stc
adc
xchg
add
and
lods
in
lods
adc
mov
arpl
or
and
inc
leave
jb
idivb
pushf
sbb
je
cmp
dec
sbb
jge
or
xor
out
adc
and
nop
or
mov
les
rclb
jb
add
nop
xor
add
ret
inc
into
gs
addr16
scas
shlb
pop
cltd
test
jae
sub
call
inc
xlat
mov
cmp
rclb
push
sbb
adc
les
cs
push
and
push
push
mov
or
shll
aad
out
mov
int3
jl
ljmp
lods
xadd
adc
sub
adc
cs
fidivl
loope
gs
jb
hlt
popa
sub
mov
dec
cmp
leave
dec
xor
loop
fwait
and
xchg
movsl
inc
or
in
xor
cmc
sbb
ljmp
inc
cmp
sub
mov
inc
ret
aaa
mov
faddl
push
rolb
sub
mov
xlat
ret
inc
lret
bound
cmp
xor
inc
add
and
jmp
dec
out
dec
inc
rcl
push
or
mov
inc
lret
cli
popa
imul
into
and
fdivrs
mov
push
or
les
mov
sbb
jno
mov
leave
ss
pusha
test
in
xchg
loopne
inc
addr16
test
repnz
lret
xor
arpl
ds
dec
into
inc
push
add
push
adc
mov
pop
pop
das
divb
dec
adc
xchg
jp
inc
repz
aas
filds
scas
in
repz
pop
imull
leave
push
pop
add
in
pop
mov
mov
inc
mov
mov
and
mov
jg
pop
mov
dec
shlb
jp
out
aas
lods
mov
xor
xchg
jns
pusha
push
faddl
mov
test
js
out
cli
cmpsl
out
aas
dec
adc
repnz
adc
xlat
ja
gs
xchg
testb
lahf
mov
cmp
mov
outsb
sbb
pop
repz
mov
add
jmp
or
mov
xor
iret
popf
lods
cmp
sahf
fidivl
or
mull
mov
push
push
push
cmp
sti
or
repnz
insb
mov
ss
jmp
inc
cmc
popl
sub
and
pop
cmpsl
rclb
int
xor
sbb
inc
cwtl
push
and
xor
clc
loopne
xchg
jnp
xchg
add
xchg
cmpsb
jb
cmpsb
and
loop
sub
sub
in
mov
inc
shll
popf
jl
scas
pop
xchg
dec
fadd
fmull
sbb
shl
test
pushf
es
test
fldz
test
lock
adcl
popf
loop
mov
mov
push
xchg
movb
arpl
sahf
add
fstpl
fisubs
sub
insl
nop
arpl
mov
aad
frstor
fdiv
push
mov
inc
or
jbe
xorb
sub
ret
hlt
int
out
loopne
outsl
aas
push
rol
lods
fwait
mov
iret
mov
addr16
mov
int
jg
sub
mov
fidivrl
sti
push
repnz
test
cmc
mov
jnp
xor
mov
add
push
jp
jno
xchg
push
inc
push
int
lea
ja
addl
xor
aam
mov
dec
pop
in
shr
and
pop
mov
jne
sbb
popf
xchg
cltd
es
xchg
dec
jae
std
pop
adc
lahf
inc
dec
jno
sarl
mov
cmc
pusha
dec
int
push
pop
cmc
test
ja
shl
pop
and
cmpsb
pop
outsb
mov
or
test
fs
insl
or
and
inc
mov
leave
ss
aas
fdivrl
mov
push
scas
or
repnz
xchg
and
out
cmp
xor
dec
jo
sbb
addr16
dec
cli
js
ss
add
inc
andb
or
daa
ljmp
in
loop
je
sti
daa
mov
xchg
rorl
scas
jnp
pushf
fists
pop
and
jmp
xor
fldenv
pop
outsl
pop
mov
or
jne
int
lods
xchg
shr
cmc
lret
xor
inc
mov
cli
mov
pop
jne
mov
scas
push
mov
xor
add
add
mov
push
rolb
adc
out
push
and
std
ffree
daa
lods
pop
xchg
xlat
xchg
mov
or
push
xor
push
mov
add
repz
xchg
mov
ljmp
dec
je
mov
out
jmp
xchg
mov
mov
adc
std
int
push
or
jbe
insl
xor
iret
push
push
xchg
xchg
inc
rcr
popf
mov
pop
or
mull
pop
scas
and
push
aaa
outsl
cmp
rcl
lret
mov
sub
push
pushf
sarb
lret
adc
pusha
insl
xor
dec
rcl
mov
cmc
jbe
jb
dec
out
add
jne
mov
pop
xchg
or
xchg
mov
mov
aas
dec
fmull
push
call
frstor
jl
lea
push
push
jle
leave
and
in
or
pop
adc
xchg
sub
inc
jg
add
in
jns
mov
inc
jbe
xor
pop
lds
mov
mov
popf
iret
out
dec
pop
cmp
sub
out
je
into
fwait
dec
sbb
in
xor
cmpl
push
stos
push
sbb
inc
fmull
jno
rcrb
cwtl
or
daa
shrb
lea
in
cmp
cmp
clc
xor
jnp
loope
hlt
xor
loop
jns
or
pop
dec
ret
notb
in
mov
daa
inc
into
out
jmp
loopne
mov
mov
sub
shll
add
mov
mov
das
loopne
xchg
aam
inc
aad
insb
xchg
int3
push
jns
and
cmp
xor
xor
pop
mov
es
mov
insl
cmp
pop
xchg
xchg
push
les
imul
mov
jecxz
mov
lret
stos
cmc
mov
inc
push
dec
pop
inc
in
mov
xchg
movsb
or
dec
in
sbb
push
inc
insb
pop
pop
mov
adc
or
adc
imul
rcl
push
push
and
imul
stos
fcompl
js
push
adc
and
fistpl
mov
xlat
push
mov
push
jae
inc
pop
pop
inc
xchg
and
cmp
std
mov
ljmp
sbb
pop
in
push
push
shlb
add
and
add
xor
repnz
add
push
sub
subb
jmp
inc
and
dec
fildll
fs
xlat
xchg
xchg
push
cmpsl
out
mov
test
aaa
jno
or
fisttps
cmpl
inc
sbb
rcr
popf
sbb
or
pop
fsts
jle
jbe
scas
fmul
mov
es
mov
adc
dec
addb
cmp
or
imul
mov
aaa
fbld
ljmp
repnz
ret
xchg
fisubrs
das
xchg
jg
cs
test
mov
lret
jbe
jmp
rorl
xchg
adc
push
cmp
cmpsb
push
mov
jne
lcall
push
inc
pop
aas
or
mov
rcrb
clc
sbb
mov
pop
adc
add
faddl
add
cmp
push
sub
dec
pop
push
mov
pop
sbb
fdivrp
xchg
aaa
pusha
imul
rcrb
dec
sbb
jo
iret
fsubrs
outsl
jg
fsubp
mov
xchg
gs
scas
std
inc
mov
xor
pop
pop
sbb
inc
xor
nop
mov
xchg
dec
inc
mov
cltd
xlat
jbe
sub
jg
sahf
mov
sub
iret
sbb
lcall
mov
icebp
and
xlat
cmp
mov
test
test
adc
sub
push
and
xchg
mov
out
outsl
xchg
lahf
aaa
push
cmc
pusha
jge
adc
jb
aas
pop
out
sub
dec
xchg
sub
pop
mov
repz
int3
inc
cmp
movsl
les
mov
aam
cmp
xor
xchg
repnz
out
push
repz
jae
sub
dec
fidivs
fimull
jmp
mov
addr16
cmp
and
call
mov
sbb
lret
mov
ds
pop
ja
addr16
cmp
lods
mov
mov
mov
add
mov
ret
push
aam
ljmp
dec
jl
flds
mov
into
push
jns
mov
add
adc
xchg
mov
cmc
mov
pusha
push
out
cmp
and
mov
stos
jne
xor
mov
vpunpckhbw
cmpb
sbb
jp
int3
cs
scas
cmpsb
popa
adc
loopne
mov
test
xor
repz
cmpsb
dec
mov
sub
iret
xchg
leave
xor
hlt
lret
flds
mov
insb
sbb
sub
fcoml
ss
adc
notb
pop
fildll
jl
stc
insl
push
movsb
mov
cli
data16
or
adc
int
loop
pop
pop
pop
fcomi
pop
mov
push
xlat
mov
ljmp
aad
mov
add
jecxz
mov
mov
add
movsb
push
sub
mov
push
jecxz
les
test
jnp
dec
mov
filds
lds
sub
test
push
fldenv
test
out
ljmp
cmp
inc
sbb
cs
lret
jbe
or
dec
test
nop
push
sarb
mov
xchg
and
test
fs
test
and
in
inc
bound
fmulp
add
mov
jbe
cmp
iret
popf
lods
adc
cli
xor
fwait
insb
daa
je
inc
jl
je
or
cwtl
inc
inc
imul
push
stos
rorl
pop
enter
pop
imul
add
cmpsb
inc
outsl
iret
cld
mov
xchg
push
fs
jno
hlt
ss
xchg
int3
nop
outsl
cmp
lret
push
mov
scas
xor
sub
inc
jnp
out
fidivs
ds
out
rclb
fs
test
int3
mov
outsb
or
cmc
push
pop
leave
movsb
adc
push
fcoml
xchg
test
mov
jb
inc
mov
outsb
mov
jge
popl
test
mov
add
fcoms
notl
xchg
pop
pop
movsl
adc
xlat
jg
je
sahf
repnz
and
fldcw
xchg
and
subl
sub
push
in
sbb
xchg
cs
sub
loop
inc
sub
mov
dec
stos
xor
xsha256
cmpsb
xchg
and
ror
fld
insl
int
mulb
arpl
mov
imul
inc
fisubrs
lcall
stos
pusha
cmc
jae
push
push
cmpsl
sbb
pusha
mov
adc
repz
inc
fs
arpl
pusha
add
lahf
mov
or
mov
xchg
sub
pop
aas
pop
or
adc
pushf
lods
leave
mov
cmpl
mov
mov
cli
cld
out
lret
test
jno
mov
scas
das
popa
xor
or
inc
lods
push
sbb
fstpt
xchg
xchg
out
enter
rorb
xor
aad
movsb
add
loopne
push
int3
fiadds
jb
add
lahf
mov
and
sbb
sbb
dec
or
and
lcall
xchg
push
stos
loopne
insl
jnp
dec
cmc
inc
xor
jmp
and
xchg
push
dec
xor
push
lock
push
push
dec
xchg
inc
ret
lock
popf
fwait
push
flds
fwait
xchg
inc
or
pop
mov
dec
dec
sub
sub
dec
es
dec
int
das
mov
adc
xor
inc
push
jle
mov
pop
push
push
and
ss
les
adc
pop
dec
enter
xor
outsl
rorl
aad
inc
out
ret
js
inc
mov
popf
push
mov
sbb
insl
or
aaa
jmp
cmpsl
es
inc
jnp
daa
ja
dec
pop
xor
leave
add
xchg
paddw
sbbb
test
push
pusha
dec
bound
add
cmpsl
in
loop
cmpsl
mov
subl
insb
shll
adc
out
sbb
push
sbb
pop
ljmp
fneni(8087
arpl
push
mov
idiv
mov
movsb
push
loope
mov
mov
push
enter
test
adc
cmp
mov
jbe
enter
stos
cmp
out
das
ss
and
sub
mov
js
adc
cwtl
shlb
pop
sub
test
daa
dec
push
add
pop
lcall
repnz
cli
cmp
pop
cmp
lcall
aad
mov
insl
mov
sub
add
add
adc
pop
dec
cli
pushf
lds
lods
addr16
push
insb
sub
mov
or
imul
or
push
imul
push
pop
cmpsb
loop
mov
rcr
add
dec
cmp
in
in
fmull
jno
mov
sub
ret
sti
xlat
push
pop
rdtsc
rorl
cmc
push
dec
pop
cmp
call
gs
fistpll
dec
addb
cmp
or
aas
cmpsl
cmpb
or
mov
sti
jns
adc
xor
rcr
test
mov
mov
stc
shl
stos
aad
gs
pop
and
mov
jg
mov
cmp
jl
xchg
sbbb
push
xor
imul
mov
lock
nop
in
stos
jmp
jns
repz
cmpsb
jae
outsl
fld
mov
sub
fisubl
dec
test
mov
and
mov
shrb
or
rorb
test
inc
pop
int3
insl
loopne
fdivr
rorb
push
inc
lods
push
lahf
sub
out
mov
jo
js
daa
push
jp
jle
das
pop
xor
aas
cmpsl
cmpsl
adc
aam
mov
shrb
sar
fldcw
sub
pop
jmp
rcrl
dec
ds
ds
mov
repz
add
lea
xor
pop
jmp
push
into
into
icebp
pop
jmp
cmp
pushf
je
fisttpl
push
gs
jp
ljmp
cmp
pop
push
pop
jo
mov
mov
adc
sub
xchg
jmp
jns
push
pop
mov
sar
dec
ljmp
mov
lock
fcomps
lods
push
filds
js
push
ja
dec
js
pop
fwait
pop
daa
ss
and
std
cmp
jbe
sub
xor
addr16
fdivl
in
push
add
ret
mov
pop
jns
push
cmp
mov
dec
pop
ficoms
jo
sub
xor
inc
out
push
sbbl
outsb
cltd
sarl
ja
cmp
popf
test
mov
inc
js
ds
cmpsl
ss
and
sbb
call
repnz
dec
and
rolb
cmp
add
cmpsb
mov
mov
mov
daa
inc
mov
clc
or
add
jp
jo
xchg
jnp
movsl
js
mov
or
jne
sbb
xor
lret
cli
push
pusha
std
mov
mov
push
adc
sub
out
adc
adc
pop
jmp
pop
mov
iret
js
mov
scas
jmp
sbb
loope
popf
lahf
cmpsb
cmc
mov
and
pop
and
loope
out
jae
mov
mov
xor
je,pn
dec
lds
dec
inc
insb
inc
or
push
mov
ret
pop
cmp
mov
inc
xor
dec
and
jns
aad
ficoml
test
stos
pop
shll
and
adc
stos
orb
ds
xchg
out
mov
rorl
xchg
xor
ss
push
push
arpl
js
movsl
shll
sub
dec
add
dec
rclb
and
xchg
rclb
push
jmp
mov
iret
dec
lahf
inc
into
dec
push
out
imul
fwait
insb
inc
mov
mov
incl
rcr
test
aaa
jp
scas
xor
mov
pop
dec
out
sti
jg
push
and
dec
dec
xor
aad
and
shl
adc
pop
cs
dec
mov
insl
jne
test
sbb
out
icebp
add
faddl
jp
push
jp
pop
inc
setp
int
add
cmp
ret
fldln2
imul
pop
mov
popf
pop
iret
cltd
pusha
mov
lods
sub
sub
rorb
repz
xchg
pop
movsb
aaa
into
push
jl
es
xchg
xchg
lea
mov
jb
cwtl
sbbb
fwait
jmp
or
cltd
subl
rcl
add
pop
enter
xchg
cmp
ficomps
mov
cli
lds
ss
cs
divps
addr16
cmpsb
mov
mov
fildl
sub
dec
push
xchg
push
scas
popa
push
idiv
ljmp
dec
nop
inc
rcrl
inc
les
cmp
push
cld
je
jp
sbb
mov
adc
pop
mov
adc
jl
call
sti
xor
xor
repnz
movb
or
mov
cmpsl
repnz
dec
shrl
mov
out
int3
sub
cwtl
add
subb
sub
sti
movsl
je
stos
ljmp
aam
add
xchg
aas
shrl
sub
mov
psubusw
jae
iret
loope
dec
sub
sti
arpl
adc
and
mov
in
mov
imul
xor
fdivl
xorl
xchg
xchg
cmp
jg
js
jne
cmp
push
add
pop
jmp
ljmp
add
stos
mov
call
shrl
ret
je
or
push
scas
loop
dec
test
out
pop
and
jecxz
sbb
mov
xchg
bound
jmp
arpl
cmp
leave
adc
sbb
out
cs
leave
xor
or
pop
jl
sub
lret
rorl
pop
roll
inc
ds
jno
lock
popa
jo
stc
add
jge
hlt
push
sbb
cmp
adc
sbb
dec
push
xor
imul
inc
ss
inc
fsubrl
jl
pop
cmc
mov
adc
jle
jae
movsb
fiaddl
lahf
jmp
fiadds
std
and
aaa
and
filds
sbb
loopne
mov
sub
das
and
jns
pop
test
andl
sti
xchg
inc
xor
loope
fsub
roll
int3
addr16
mov
add
mov
leave
lea
into
mov
push
sub
adc
mov
mov
or
cmp
push
pop
shlb
sub
or
std
push
push
stos
sub
xor
mov
inc
pop
int3
sarb
push
sbb
stc
mov
jle
lods
inc
mov
enter
xchg
push
cltd
int3
dec
scas
in
jg
std
call
add
idivb
mov
mov
mov
test
adc
idivb
push
jp
test
xchg
fstl
xorb
fmull
push
dec
popa
sbb
xchg
loope
daa
lahf
nop
popf
and
fimuls
inc
aas
ljmp
es
stc
xchg
insl
insl
sahf
lea
aaa
in
cltd
mov
jb
cmp
loopne
jb
cmpb
cltd
leave
cmp
addr16
scas
xor
ret
or
push
inc
cmp
adc
nop
mov
shrl
inc
test
pushf
repz
imul
dec
stos
seto
pop
out
imul
mov
cli
aad
and
imul
popa
jo
jne
int3
aas
adc
imul
push
sub
jle
out
sub
scas
bound
cli
lock
mov
pop
push
xchg
notb
push
data16
jp
loope
cmp
ret
jg
xorl
mov
clc
push
xchg
andl
lods
sub
mov
sub
pop
mov
aad
fld1
mov
push
push
test
mov
rcl
and
push
hlt
loop
lock
leave
es
mov
add
hlt
sahf
xchg
int
aas
push
int
inc
and
das
stos
pop
sub
adc
in
rclb
adcl
jle
xor
je
sbb
xor
adc
cmc
mov
cmpsb
int3
imul
popf
dec
jp
ja
mov
andb
pop
mov
mov
inc
push
test
arpl
inc
flds
stc
push
test
xchg
lock
lds
mov
mov
outsb
xchg
inc
scas
es
repnz
cmp
addr16
jo
js
dec
fscale
xor
sub
or
xchg
cmp
shrl
mov
repz
lret
xchg
les
iret
gs
push
pop
ja
and
add
imul
cmpunordps
cmp
sar
pop
jmp
pop
aaa
ljmp
pop
js
test
pusha
jae
aad
jmp
mov
xor
hlt
xchg
loop
call
cmp
or
jmp
cwtl
mov
mov
cmc
sub
jl
aaa
dec
jb
inc
xorl
jo
xchg
mov
jmp
imul
xchg
inc
jge,pn
mov
test
push
loope
incb
push
hlt
dec
add
faddl
repz
and
push
push
nop
add
insl
imul
sub
sub
cltd
cmpsl
outsl
xchg
loope
lea
jge
movsl
adc
popa
scas
sbb
xchg
pop
test
xchg
rol
adc
stos
adc
into
test
sub
out
movsb
sarb
push
adc
icebp
std
test
and
jp
xor
addl
cmp
jne
or
push
dec
inc
mov
xchg
shlb
test
bound
or
fnclex
rorl
cli
jmp
and
add
in
rorl
dec
pusha
inc
sbb
outsb
dec
iret
jns
or
out
jb
sarl
sbb
int
and
in
lds
jecxz
nop
push
adc
sti
mov
jbe
sub
jns
or
in
rorb
add
dec
out
xchg
sbb
push
in
out
out
dec
cmp
pop
jo
add
mov
aas
test
loop
mov
bnd
add
mov
adc
shlb
adc
cli
pushf
loopne
lret
add
cmpsb
icebp
ror
cmp
cwtl
test
jmp
add
cmpl
repz
aaa
dec
sbb
sbb
sub
pop
mov
mov
push
xchg
addr16
in
dec
fbstp
out
dec
sbb
out
icebp
push
jbe
mov
mov
int
xor
loopne
stos
xor
rclb
inc
push
push
pop
xor
hlt
pushf
mov
and
jecxz
adc
lods
in
adc
add
test
jno
in
cmp
fsubl
adc
xchg
xlat
fstpl
dec
pop
out
jp
jbe
or
dec
xor
mov
jo
decl
adc
inc
repz
mov
sub
or
lahf
out
adc
push
stc
jne
mov
or
sbb
fbld
ljmp
out
inc
notb
lcall
mov
mov
dec
lahf
movsl
inc
fdivp
ljmp
add
xchg
push
pop
xchg
pop
and
ja
fisttpll
or
jo
out
rcl
add
scas
outsl
sti
xchg
jnp
jle
xchg
leave
and
mov
add
sbb
das
push
pop
scas
scas
and
inc
mov
int
cmpsb
neg
test
popa
pop
sub
inc
ljmp
sbb
push
pop
adc
scas
outsl
repz
mov
je
jmp
adc
dec
pop
sub
inc
xchg
xor
sbb
xor
lahf
lock
out
add
aaa
les
inc
in
pop
xor
xor
mov
pop
pop
or
loopne
dec
dec
sahf
pop
int
dec
int3
pushf
scas
jmp
sub
stc
jl
rcl
daa
mov
js
sub
jns
pop
push
mov
ret
xor
ret
dec
mov
xlat
sti
out
pop
or
xchg
arpl
ret
sbb
and
sub
jmp
sahf
fldenv
cld
jle
xchg
inc
imul
or
jl
je
cmc
xor
jge
push
mov
push
push
add
jbe
pop
in
repz
push
in
outsb
out
insb
mov
mov
pop
call
xorl
sbb
daa
mov
fiadds
jae
jns
test
int3
out
pop
fldenv
clc
adc
aam
sbb
mov
push
sbb
fbstp
out
and
cmp
pop
cld
mov
outsl
mov
pop
in
cs
test
xchg
adcl
cwtl
push
push
jp
fisttps
and
scas
adc
es
sahf
lods
pushf
mov
push
jne
jmp
xchg
hlt
mul
test
scas
sub
rol
jl
subb
cmc
sarb
push
hlt
mov
iret
sub
mov
mov
sbb
inc
jle
mov
push
add
gs
mov
loopne
mov
ret
or
jns
lods
xor
sbb
pop
dec
and
das
out
push
arpl
loopne
pop
push
dec
popf
mov
loop
inc
dec
pop
ljmp
mov
in
sub
ret
jno
cmp
add
fldl
jp
push
into
lods
dec
xor
mov
data16
sti
xchg
lret
xor
outsb
stc
and
push
ret
fldenv
bound
xor
mov
test
and
mov
mov
repnz
js
fs
ds
jae
xchg
inc
add
cmp
int3
lcall
jle
dec
xlat
ret
cld
fadd
stos
out
xor
pop
mov
movsl
in
jno
fldenv
addl
sbb
mov
jnp
lds
or
push
shll
or
xchg
not
int
roll
mov
mov
add
mov
xchg
inc
mov
les
jne
aam
movsb
repz
mov
xor
stos
leave
and
sar
aas
mov
ss
mov
shrb
cmpsl
test
mov
mov
rol
cs
jg
lock
dec
lods
xor
loope
dec
mov
lds
mov
aas
les
loope
ret
js
into
in
mov
notb
lods
push
xchg
enter
test
stos
movsb
aam
cmpl
jb
dec
mov
std
cmp
stos
scas
fcoms
and
mov
sti
shll
or
roll
add
mov
jbe
or
fmuls
ret
mov
data16
les
mov
and
mov
iret
sahf
pop
incb
ficompl
adc
imul
adc
push
addr16
push
pop
scas
pop
pop
pop
loopne
xchg
lret
orl
es
push
mov
jg
and
mov
push
repz
aaa
scas
jnp
xor
fwait
xor
xlat
add
adc
cmp
fildll
lret
fidivrs
xor
xor
xor
inc
and
jno
loope
xor
sbb
cwtl
push
add
jno
xor
in
cmpl
movsb
cli
fisubs
int
mov
in
pushf
mov
icebp
mov
fidivl
aam
jp
scas
and
sbb
lahf
inc
and
or
cld
cmc
sub
popa
stos
or
mov
mov
cmpsl
inc
rclb
inc
mov
fsubrp
stos
flds
in
cmp
ja
push
sub
mov
ret
push
mov
xchg
cmp
pop
add
in
sbb
adc
adcb
xchg
cmp
sbb
inc
pop
cld
mov
jbe
xor
jns
ficoms
je
sahf
lret
vmovhps
fs
add
cmp
sub
dec
and
jae
addr16
or
leave
xchg
sbb
push
gs
dec
xchg
lret
ljmp
insb
iret
jmp
add
jmp
mov
lock
jg
out
mov
mov
fldt
test
addr16
push
and
mov
adc
out
orb
jp
pusha
fnsave
sbb
lret
int3
jge
dec
jge
inc
popa
pop
cltd
jge
jmp
jle
loopne
dec
cmp
in
nop
and
gs
rcll
int3
shlb
or
jecxz
push
outsb
out
cs
fildll
lds
fidivs
add
mov
mov
xlat
aas
xchg
mov
adc
loope
mov
xchg
mov
enter
inc
jle
loop
fisttps
sti
sbb
test
sbbl
ljmp
popf
jo
clc
sbb
roll
test
pop
fidivs
push
add
ret
add
jno
mov
and
mov
push
push
movsb
dec
adc
fsubrl
mov
test
in
push
jns
sbb
movsb
xlat
sbb
and
inc
mov
fwait
adcb
sub
jne
imul
repnz
cmp
lea
mov
in
insb
jbe
mov
aam
rol
stc
test
or
pop
mov
xor
xorb
jns
inc
std
popf
lahf
jmp
ljmp
xor
jne
pop
gs
cmp
cli
aad
pop
lret
sub
pop
cwtl
xlat
cmc
add
out
push
add
add
add
lods
das
nop
outsl
das
lds
and
rorl
out
sahf
and
out
icebp
test
test
addr16
nop
lods
push
lock
nop
stos
or
data16
notl
rolb
inc
jne
lea
or
inc
and
push
shl
xchg
icebp
mov
mov
mov
jne
pop
dec
and
fst
xchg
arpl
sbb
scas
mov
sti
fistl
ficoml
cltd
jmp
dec
rcrb
and
dec
fcmovu
fbld
std
push
into
je
inc
adc
sub
imul
xchg
lahf
rcl
push
mov
mov
mov
jmp
divb
push
nop
cmp
loope
pop
bound
mov
lahf
push
pop
incl
add
and
push
js
inc
cmc
aad
mul
inc
clc
inc
pusha
dec
fxam
stos
idivl
inc
popa
ds
icebp
pop
pop
xchg
xchg
jmp
and
xchg
mov
ret
add
mov
cmp
dec
lods
dec
and
jne
in
roll
sbb
incb
in
jne
or
jnp
jl
push
push
lds
ret
add
mov
daa
in
xchg
movsb
cmp
out
mov
cmp
push
cmp
mov
mov
and
push
push
nop
mov
push
dec
loop
repnz
cmp
jge
xor
addr16
mov
cmp
mov
dec
ret
inc
jp
push
inc
lcall
add
add
pop
mov
into
js
push
iret
and
lods
or
and
insb
cmc
jge
mov
sub
dec
das
cmpsb
sub
add
cli
mov
mov
in
mov
ret
cmpsl
repz
xchg
jl
dec
mov
in
mov
imul
roll
mov
mov
adc
mov
sarl
test
aad
das
pop
cli
mov
jp
xchg
and
add
ficomps
adc
fildl
mov
push
imul
test
je
mov
sahf
inc
adc
push
icebp
sbb
add
sbb
das
les
cmpsl
mov
into
sbb
xchg
subl
scas
test
sbb
in
loop
xor
mov
inc
mov
sbbl
movsl
arpl
cmpsl
mov
pop
sub
pop
in
mov
adcl
mov
hlt
test
sbb
push
xor
rcrl
imul
icebp
cli
out
inc
push
gs
push
int
test
icebp
mov
pop
push
xor
sub
push
int3
dec
sbb
cmpsl
push
xchg
clc
push
push
dec
push
or
mov
leave
shrb
pop
sbb
and
cmp
stos
sbbb
lret
loop
and
icebp
bound
sub
jle
int
rorb
shlb
jge
in
seta
jmp
pop
push
add
sbb
cs
sbb
into
movsl
rcrb
cld
mov
mov
sahf
enter
lods
rcrl
ja
sti
clc
andb
pop
mov
shll
lret
enter
adc
jg
repnz
daa
repnz
in
cmpl
cmc
sahf
adc
mov
push
jo
sub
add
and
xor
jg
xor
lods
mov
test
ljmp
xlat
cmpsl
dec
pusha
adc
lds
shll
cmp
sub
fldl
es
shl
mov
dec
sbb
rorl
bsr
into
ss
jo
or
int3
lods
rcr
pop
dec
fdivp
mov
xor
pushf
pop
test
repnz
jmp
mov
outsl
inc
fmull
lret
nop
push
es
sub
sub
mov
xchg
xchg
testb
ret
add
cmpsl
imul
dec
es
mov
mov
ficoml
adc
jecxz
fs
or
mov
xchg
test
push
inc
push
jnp
xchg
addb
push
add
in
sub
repz
mov
xchg
movsl
fistl
jb
mov
pop
mov
jmp
mov
repnz
pop
cmp
add
xchg
push
mov
jmp
cltd
cltd
daa
inc
sub
sarl
loopne
xchg
rcrl
stc
movsb
out
mov
push
or
jo
fcomps
call
mov
aad
mov
lods
sar
pop
leave
bswap
mov
jle
pusha
or
push
adc
cmp
pop
das
fbld
fisttps
dec
call
imul
repz
shl
mov
mov
adc
xchg
repz
jns
mulb
push
outsl
andl
dec
and
out
adc
or
lret
mov
ret
and
aam
fstp
lods
pop
and
push
jae
popa
jns
loop
subl
or
ret
adc
test
dec
inc
dec
inc
jmp
inc
jo
mov
out
cmp
and
pushf
cltd
pop
out
pusha
sub
sbb
jecxz
xchg
jnp
lahf
mov
stos
xchg
mov
jno
dec
loopne
adc
fisttpll
addb
cmovb
inc
adc
pop
gs
mov
rcrb
push
loope
xor
stc
aam
fnstsw
mov
push
and
addb
daa
in
je
add
mov
es
ret
jmp
and
lahf
lret
sub
lahf
xchg
mov
arpl
adc
xorl
cld
xlat
in
dec
mov
movb
mov
daa
rorb
loope
shlb
dec
push
push
cmp
adc
xchg
fs
dec
jg
push
enter
shlb
lock
addl
mov
mov
sahf
add
fists
push
fdivl
sahf
and
shrl
push
jne
cmpsb
add
mov
mov
jge
xor
mov
dec
lock
repnz
lea
adc
xor
fildll
into
mov
fcmovbe
out
cmp
movb
add
mov
jmp
jns
ds
jnp
cs
andb
cs
ljmp
sbb
lea
pushf
xchg
push
sub
in
sub
pop
push
mov
call
repz
pop
rorb
adc
add
xchg
sbb
hlt
mov
mov
pop
jne
inc
mov
cmp
ds
inc
sub
sti
cmpb
ja
out
stos
mov
sub
adcl
jb
mov
mov
repnz
in
push
mov
adc
jg
inc
popa
mov
jo
lea
leave
movsb
dec
rolb
lret
mov
adc
xor
jecxz
mov
aad
in
bound
xchg
mov
add
jp
xchg
mov
add
subb
or
aas
cmpsb
push
inc
popf
push
pop
xlat
jle
std
leave
mov
out
popa
dec
sub
ret
verw
xchg
movsl
sbb
and
and
insb
pop
xchg
cltd
xchg
movsb
add
jmp
mov
lret
pop
sub
mov
test
out
mov
cmpsl
data16
or
push
dec
mov
test
mov
movl
rcrl
cwtl
jb
xchg
or
lcall
bound
or
mov
pusha
mov
mov
inc
sub
pop
cs
rolb
addr16
jmp
push
xchg
scas
into
push
lock
jnp
push
inc
cmp
xchg
dec
in
in
stos
daa
jbe
cmpsl
call
jl
cmp
push
push
icebp
push
mov
fildll
into
fprem
andl
inc
ds
ret
dec
in
insl
mov
outsb
xchg
cmp
aam
lock
cmp
arpl
out
mov
data16
movsb
dec
cmp
jno
test
std
add
std
mov
sbb
lahf
xchg
bound
loope
aaa
push
adc
sbb
je
fimuls
adc
cmp
ret
rcrb
xor
aam
pop
imul
clc
lcall
imul
stos
inc
add
mov
ror
mov
cld
dec
pusha
not
cld
xchg
xor
loope
inc
cmp
xor
xchg
xchg
jbe
sub
xor
out
inc
jnp
inc
out
ja
lds
pop
mov
clc
es
mov
push
movsl
mov
dec
mov
sarl
add
cld
cmp
add
das
mov
dec
mov
adc
sahf
push
aaa
push
lret
jns
push
xor
insb
repnz
sbb
je
aas
mov
mov
clc
outsb
push
and
in
out
or
int3
sub
cmp
dec
xchg
loope
lret
sub
cmpsb
vmovapd
popa
in
rcll
push
mov
jb
adc
cmp
or
sbb
lods
jg
fbld
or
jae
popa
adc
shrl
or
ja
mov
lds
orb
fwait
xchg
push
or
push
bound
mov
lods
dec
data16
mov
adc
imul
or
sub
dec
fcmovu
addb
push
cmpsl
inc
data16
lea
test
arpl
addr16
pop
fs
iret
in
sub
imul
xchg
test
lret
xor
mov
pop
sub
pop
mov
movsb
jle
stos
repz
or
daa
outsb
push
sarl
push
test
xchg
xchg
push
scas
xchg
jl
bswap
push
jmp
sbb
sbb
xchg
pop
aaa
lea
lret
cmp
fcmovbe
movsb
and
mov
jb
pop
test
pop
div
in
sub
loopne
mov
push
cmp
adc
cmp
adc
leave
push
fs
rolb
push
inc
add
ret
ss
sbb
sub
pop
pop
int
popf
cmpsl
inc
sahf
jns
dec
cld
xor
out
nop
and
pop
xchg
bound
push
lods
cwtl
cmp
xchg
btrl
aaa
push
mov
shlb
and
push
mov
lret
cmpsb
and
mov
adc
pop
jmp
adc
add
and
sbb
lar
js
arpl
sbb
xchg
or
mov
mov
jg
lods
jecxz
adc
rclb
mov
jge
aad
push
jnp
stos
stos
fwait
repnz
adc
movsb
insl
test
fisubs
cwtl
movsb
aam
add
daa
pusha
lahf
pop
add
sub
jno
jg
and
gs
fwait
std
jp
push
fs
xchg
push
sti
jno
call
pushf
add
sub
cmpb
mov
inc
inc
test
jo
xor
mov
test
lea
mov
int3
adc
dec
jle
ds
sub
js
fs
aas
icebp
add
pop
nop
loopne
fs
out
lret
add
mov
and
jns
or
scas
dec
rol
push
sub
lock
push
stc
lcall
inc
jmp
xlat
adcl
mulb
imulb
jmp
out
push
sti
mov
fmull
sub
xor
cmpsl
mov
ss
inc
inc
lock
loop
jo
lds
les
dec
outsl
push
aas
and
cmp
neg
xchg
iret
cld
sarb
cmp
cmp
mov
rclb
jg
repnz
mov
cmp
push
outsb
pop
mov
mov
sub
push
je
pop
add
sbb
shl
std
pop
add
jl
call
lds
vmovntps
subl
out
mov
sbbl
xchg
cli
sub
inc
insl
jne
stc
xchg
or
mov
push
rcrl
jae
jge
iret
push
lock
movsb
leave
and
test
mov
and
icebp
xchg
das
push
xchg
fisubrs
notl
pop
mov
roll
ror
mov
jne
sbb
loop
xchg
sbbl
lods
pop
mov
aaa
jg
into
ljmp
aad
mov
and
insl
or
cmp
xchg
ret
repz
sbb
jecxz
cmp
cmp
pop
stos
sub
aas
inc
int3
out
out
inc
rcl
xchg
lcall
mov
jecxz
xor
xor
mov
jns
add
aam
push
mov
enter
sbb
iret
fs
mov
out
push
push
out
jnp
into
jnp
jae
scas
add
aaa
dec
negb
mov
mov
les
repz
iret
in
and
rorl
icebp
lcall
push
mov
lret
icebp
data16
xchg
fmuls
add
scas
adc
mov
jg
fdivrl
dec
jmp
jae
out
jl
jo
fnstcw
jle
lahf
sarb
mov
incb
loope
loope
push
pushf
adc
mov
jg
ret
loop
jb
pop
pop
es
mov
mov
mov
and
xchg
dec
inc
adc
cmpsl
dec
clc
mov
stos
dec
pop
fcoms
jmp
jb
out
inc
js
outsb
mov
add
push
mov
push
and
in
and
mov
jno
mov
cld
imul
stc
inc
dec
or
or
fstps
aaa
test
add
inc
loopne
pop
pop
push
jp
mov
mov
popa
out
jbe
lods
mov
sbb
stc
lea
jecxz
mov
outsb
sarl
cmp
test
jb
sbb
insb
cmpsl
dec
js
xor
cld
jmp
cli
pop
fs
adc
movl
mov
fisttpll
popa
call
dec
daa
dec
mov
jmp
aas
inc
std
mov
push
addl
adc
push
xchg
mov
mov
mov
insb
dec
imul
aam
push
loop
adc
shl
pop
leave
aas
mov
xchg
push
add
lret
xchg
test
xor
jno
sub
pop
loope
divl
test
dec
jns
sbb
repz
push
les
mov
inc
movsb
xor
jbe
push
mov
jno
mov
mov
jecxz
sub
xor
mov
dec
dec
pop
mov
mov
mov
js
fwait
into
pushf
add
cli
add
popf
in
in
loopne
push
push
and
or
dec
insl
iret
or
sbb
ja
sub
inc
jge
xchg
aas
enter
cmp
xor
jnp
or
mov
pop
pop
xchg
iret
mov
mov
cmp
adc
fidivl
jle
dec
jmp
mov
shl
jge
cli
lret
cmp
inc
sub
push
inc
iret
mov
sbb
jne
jp
jne
enter
lods
sbb
pushf
and
ljmp
lock
fsub
cmpsl
xchg
aaa
lods
pusha
cltd
mov
adc
mov
push
pop
jmp
add
add
and
in
or
orps
insl
push
push
test
mov
lret
mov
iret
add
adc
out
or
inc
jmp
jg
push
lock
sbb
stc
pop
test
lea
xor
out
sbbl
sbb
cld
mov
mov
loopne
jo
lret
cld
cmp
inc
inc
movsb
push
insl
vmread
fnstenv
dec
xchg
inc
xor
push
imull
mov
sti
mov
icebp
js
stos
lea
pop
ss
jne
pop
xchg
into
test
ret
outsb
or
push
jge
iret
sub
and
lods
psubd
xchg
in
aas
jle
sub
pop
jne
mov
cmp
pop
fistpl
dec
setne
cmp
scas
push
sbb
in
pop
std
cmpsl
jp
adc
or
xor
hlt
shlb
mov
sbb
mov
stos
mov
adc
das
mov
lock
lea
or
pop
sarl
pop
in
pop
push
lret
mov
push
ret
das
int3
and
jne
sub
gs
sub
cmovno
pusha
inc
pushl
or
popa
sbb
nop
hlt
mov
xor
cmp
stos
pop
add
cmp
xchg
jnp
jl
xchg
xor
cmp
cld
pop
imul
jmp
jb
cmp
data16
cmc
push
fisubs
mov
xor
pushf
gs
popf
xor
lahf
icebp
and
dec
push
sbb
jbe
call
int3
andb
xchg
adcb
insl
nop
icebp
mov
stos
xlat
pop
inc
lcall
push
jae
dec
mov
jns
pop
add
pop
ja
mov
fdivs
aam
in
int
mov
push
add
cld
push
sahf
sub
dec
cmp
scas
mov
push
pop
jl
in
add
adc
movsb
push
fucomp
dec
and
push
mov
or
das
push
pop
ret
cmc
shll
push
push
xchg
movsb
rol
movsb
ror
jge
int
mov
xor
lods
add
scas
xchg
xchg
lahf
adc
in
mov
and
shrl
jns
stos
fs
lea
das
testl
es
inc
fmulp
ss
pop
in
xor
outsl
push
mov
cs
sub
loopne
stos
sbbl
cmp
push
repnz
xchg
je
das
dec
sti
pop
adc
pop
inc
insl
nop
sahf
xor
mov
push
add
lret
cmp
add
jno
loop
jecxz
lea
or
mov
imulb
lock
mov
sbb
mov
push
xchg
inc
inc
std
fstp
jmp
loop
xor
push
icebp
xlat
cmp
cmp
ljmp
jmp
mov
dec
loopne
jns
pop
fnstsw
pop
or
pop
adc
clc
push
adc
sbb
out
and
jo
sbb
fadd
or
out
jbe
mov
push
lock
sub
xchg
sahf
pop
push
gs
push
jg
out
sbb
inc
sbb
mov
lret
je
push
dec
mov
lcall
adc
or
daa
faddp
cwtl
push
fimull
xor
sbb
mov
jge
int
sub
iret
mov
sbb
jl
sub
sbb
sbb
fldz
outsl
pop
in
ja
xorl
stos
cmp
add
add
add
ffree
mov
or
fists
push
movsl
push
pushf
dec
sub
dec
shll
jle
dec
jns
jo
pop
and
mov
imul
ret
das
mov
repnz
add
cli
cmp
pop
push
push
enter
lea
sbbb
js
mov
gs
int3
jb
out
xlat
insb
lahf
mov
lods
push
faddl
dec
push
jns
test
ljmp
sub
data16
cmp
adc
fldcw
sti
in
inc
cmc
or
andb
mov
js
sub
sub
std
pop
or
sbb
xchg
movsl
rcrl
ficompl
cmp
and
sub
sbb
gs
int3
sbb
pop
pusha
mov
cmp
imul
mov
cmp
scas
inc
aaa
cmpsb
test
mov
inc
and
cwtl
inc
lds
cmp
inc
inc
bound
imul
cli
pop
jg
mov
sbb
test
jle
pop
mov
cwtl
lret
pop
adc
shl
adcb
cmp
cmp
sbb
mov
rcll
lret
movsb
mov
arpl
add
mov
jl
add
jge
jmp
je
stos
pop
jne
xor
dec
sti
dec
aad
or
sub
mov
fistps
das
push
push
jp
dec
mov
mov
mov
hlt
aas
movsb
xlat
shlb
sub
nop
pop
or
xchg
jle
push
inc
jge
rol
insl
mov
inc
mov
leave
stc
enter
js
out
repnz
js
mov
scas
std
mov
in
cmp
lret
add
and
mov
scas
shrb
cs
sbb
add
add
inc
ret
push
repz
in
mov
pop
push
or
inc
push
js
add
rcrb
jmp
jnp
iret
aaa
arpl
adc
ret
add
mov
cli
popl
lds
and
cltd
xor
lock
mov
or
shl
push
and
push
lcall
jmp
lcall
lret
stos
mov
movsbl
fs
cmp
repz
or
dec
fwait
pop
bound
jo
ds
test
mov
sub
cmp
xchg
add
shld
stos
rcll
sar
cli
add
or
imul
daa
out
repz
mov
and
roll
xor
decl
lcall
jb
push
add
inc
or
xor
sarb
xchg
outsl
repnz
ret
cmp
mulb
mov
movsl
mov
pop
xor
fsubl
fistps
int3
pop
jmp
repnz
and
add
sbbl
push
cmp
push
pushf
mov
push
pop
lds
stc
push
jmp
push
idivl
loopne
mov
lahf
pop
and
mov
jno
jnp
in
cmpsb
dec
ret
mov
jns,pt
pop
mov
test
sbb
fildl
push
and
imul
sbb
sbb
add
mov
add
dec
mov
dec
or
inc
xor
xchg
add
pop
fadd
enter
mov
ret
out
arpl
lods
js
xchg
cmpsl
lcall
dec
cmp
pusha
lret
dec
rorl
and
mov
orb
add
xchg
or
pushf
gs
sbb
or
aaa
iret
andl
or
xchg
push
xchg
pop
mov
cmc
sub
insb
xlat
stos
push
fisttpl
loopne
pop
mov
push
sub
cltd
xor
lock
mov
stc
gs
pusha
jae
push
pop
outsl
jl
xlat
jp
fisubrl
xchg
clc
jl
hlt
in
sub
hlt
pop
mov
cmp
movsl
in
mov
repnz
mov
and
scas
repnz
and
bound
push
insl
test
notb
adc
cmp
loope
dec
push
leave
addr16
dec
add
leave
sub
xchg
mov
inc
bound
sbb
xor
sub
mov
arpl
inc
cmp
dec
sbb
xor
pop
mov
mov
push
js
or
loop
push
popa
call
outsl
adc
xor
or
shll
sub
ret
push
or
cltd
test
loope
das
fidivs
adc
addps
popf
jb
call
cld
inc
sbb
mov
and
or
push
loopne
jge
inc
cmpsl
mov
xchg
loop
rol
mov
sbb
push
out
sbb
repz
outsl
out
addr16
sub
lret
mov
test
clc
pop
pop
and
iret
roll
and
jp
add
adc
xor
scas
stos
test
cmp
data16
int3
mov
mov
jle
inc
ret
adc
push
sub
inc
test
add
fdivr
pop
push
mov
mov
jecxz
subl
cmc
aad
sbbl
xchg
std
pop
aad
cmp
popa
cmp
sub
push
jno
mov
out
pop
sti
xchg
imul
nop
std
pushf
inc
jb
push
lahf
fmuls
add
enter
xchg
pop
add
cld
xchg
xchg
sbb
mov
adc
xchg
pop
addr16
mov
lcall
sbb
test
mov
and
jnp
lret
hlt
sub
push
enter
cwtl
mov
clc
or
in
sbb
push
or
fildl
popa
aaa
jge
xchg
out
test
adcb
popf
xchg
mov
adc
into
mov
sti
inc
push
outsl
jp
and
out
adcb
jecxz
mov
mov
lods
fimull
call
adc
loope
mov
cmc
xchg
mov
dec
icebp
pushl
addr16
sbb
xor
xor
arpl
test
aaa
xchg
xchg
nop
xor
in
and
and
xor
lret
out
or
ja
pop
jg
add
adc
cmpsb
adc
notl
leave
xchg
in
pop
and
out
sti
adc
inc
jo
in
cmp
xor
sub
push
mov
stc
jp
aad
insb
inc
int3
pusha
or
xchg
daa
shlb
sbb
cmp
out
rclb
call
mov
mov
repz
jns
andb
sub
fcomip
pop
xchg
stos
ret
lcall
in
movsb
popa
int3
jnp
out
add
mov
xchg
in
data16
popa
lahf
xor
or
imul
inc
xor
out
pusha
lods
xor
inc
int
push
add
push
sub
inc
xlat
sub
int
insl
pop
and
cmp
pop
dec
ret
sbb
cmp
sbb
in
adc
ret
aad
adc
mov
push
and
add
cli
jno
movsb
rorl
dec
jl
out
stos
xchg
insl
test
imul
roll
sub
add
pop
mov
xchg
and
cmc
lds
mov
clc
bound
cmp
sbb
cmp
xchg
push
daa
sbb
jae
sub
or
test
sub
js
out
push
and
mov
stos
sbb
mov
mov
fwait
or
dec
in
mov
jae
or
xor
jbe
xchg
push
in
loopne
and
mov
adc
mov
scas
dec
dec
call
xchg
or
mov
adc
lods
jmp
jne
stos
mov
sbb
lods
add
test
dec
jg
cmpsb
dec
stos
lahf
pop
out
aas
shrl
mov
das
or
ljmp
push
lcall
mov
cmpsb
mov
lock
inc
sub
pop
int3
dec
aaa
movsb
inc
stos
sarb
mov
adc
cmp
jl
pop
icebp
fdivr
xchg
and
and
and
cmp
aad
dec
adc
pop
push
popa
sub
testb
cmp
dec
hlt
std
test
pop
andl
ss
inc
dec
cmp
cmpb
cli
cmp
sbb
nop
es
imul
jecxz
fcoml
ds
mov
sub
ret
add
lock
fldcw
in
data16
inc
jp
push
inc
adc
mov
ret
je
icebp
sbb
fistpll
dec
push
xchg
xor
add
jae
in
sub
fdivrl
stc
rorl
fstps
xorb
sbb
adcl
xchg
popf
dec
out
push
aas
add
xor
inc
subb
mov
dec
xchg
test
sub
ja
push
sarl
loopne
mov
jne
lds
mov
repz
out
std
adc
pop
aad
out
mov
leave
sub
mov
cmp
and
add
pop
shrl
adc
xchg
mov
in
inc
add
fwait
sti
out
adc
mov
stos
pop
mov
cmp
dec
imull
sub
or
stos
pop
std
sbb
subl
loopne
and
cli
inc
bound
flds
cmpsl
popa
pop
sub
int
mov
out
or
inc
lea
or
ljmp
lahf
sub
mov
xchg
mov
fdivs
push
icebp
jbe
sub
jbe
and
jmp
stos
mov
fildll
loope
sbb
sub
mov
ret
es
or
jg
sti
sbb
insb
icebp
mov
dec
mov
push
xchg
dec
xor
xor
cmpsl
aas
adc
mov
mov
mov
lcall
lock
hlt
and
pop
std
cmp
pop
into
mov
push
insb
hlt
loopne
mov
cs
sbb
cmp
add
mov
in
fs
fbstp
adcb
jbe
inc
push
inc
push
push
or
and
pop
outsl
lods
push
sahf
mov
enter
outsl
cltd
negl
pop
pop
lds
xchg
jl
jno
pop
shrb
repz
loopne
cmp
pop
mov
testl
push
fs
mov
adc
clc
adc
scas
xchg
mov
sti
out
out
and
leave
in
jmp
mov
cmpsb
lds
pop
imul
aad
std
mov
movsl
inc
call
loope
scas
mov
xchg
loop
push
xchg
push
rcr
sbb
push
add
xchg
sarl
cmc
sarl
pop
add
cmpsl
dec
pop
js
add
leave
pop
jecxz
pop
aad
adc
jmp
inc
inc
call
cmpsl
push
and
rolb
shll
out
aaa
mov
mov
pop
mov
lret
dec
leave
ds
inc
jle
shrl
out
test
mov
mov
pop
repz
aas
add
repz
mov
add
addb
mov
xchg
subb
stos
enter
push
push
xchg
xchg
in
pop
shll
dec
pop
repz
in
xchg
pop
or
push
mov
test
pop
and
lods
pop
adc
iret
in
jbe
mov
and
or
and
sub
push
std
inc
mov
or
jb
cmpb
or
int
inc
and
icebp
popf
or
mov
mov
pop
out
mov
repnz
js
add
in
jno
lods
dec
sub
pop
sbb
xor
lret
xor
lock
test
sti
or
lcall
mov
pop
sub
push
cld
stos
mov
xchg
imul
int
jnp
icebp
mov
or
into
fiadds
scas
cmp
add
or
dec
hlt
sub
hlt
sbb
lret
mov
fbld
ss
fcmovbe
lcall
pop
xor
pop
into
pusha
hlt
popa
test
mov
fisttps
mov
sub
inc
hlt
xchg
inc
int
push
fucom
nop
sbb
push
pop
movsb
loop
jno
push
fstpl
mov
xchg
aam
mov
sarl
mov
stc
jae
mov
aam
adc
push
push
adc
dec
inc
out
in
insl
xlat
ljmp
dec
arpl
jl
in
mov
jmp
jae
mov
rorb
mov
sub
xchg
jno
scas
out
rcrl
icebp
sbb
fs
xchg
adc
jle
scas
outsl
arpl
ds
outsb
mov
sub
jmp
mov
xchg
lahf
push
popf
and
push
push
xchg
lock
loope
jl
test
cmp
popa
sbb
lahf
aaa
mov
int3
bound
push
sbb
dec
xchg
or
mov
and
pop
pop
and
test
pop
loopne
and
inc
adc
je
jmp
or
pop
lcall
jns
jle
mov
sarl
in
cmp
mov
inc
add
pop
cmpsb
lds
xor
mov
push
into
jne
dec
nop
adcl
inc
fdivrl
pop
or
dec
mov
std
jnp
pop
sti
aaa
mov
jp
xor
sbb
in
inc
test
rclb
mov
mov
jbe
test
fs
out
cwtl
push
push
loop
and
push
scas
sahf
rolb
cmp
iret
jnp
push
dec
xchg
pop
mov
push
movsb
test
pop
or
inc
out
test
fwait
dec
outsb
jmp
mov
test
xlat
adc
xchg
lret
xchg
fadds
ficomps
fucomp
in
pop
sub
or
push
sarb
adc
xchg
jnp
sbb
xchg
enter
pushf
inc
xchg
dec
cmpsl
mov
das
or
loope
fs
jl
dec
cmpsl
push
fcoml
lea
outsl
bound
sub
call
push
arpl
cmp
push
pop
rcrb
sbb
xor
mov
in
mov
or
nop
frstor
aam
rolb
in
clc
and
sub
jns
xor
pop
xor
subb
inc
mov
pushf
jo
cmp
xchg
test
mov
inc
shll
mov
sbb
dec
sub
mov
fstl
nop
mov
fldl
stc
pop
dec
and
adc
mov
add
inc
sti
outsl
pop
xchg
lea
mov
pop
fstps
subl
ljmp
lret
jge
inc
sub
cmc
enterw
lods
out
test
fcmovnbe
jg
shrb
inc
cmp
sub
mov
add
loope
or
dec
aad
pop
jns
jl
jmp
inc
imul
int3
es
call
add
mov
and
pop
push
pop
in
mov
in
xchg
add
idivl
dec
mov
push
in
jmp
adc
add
gs
insb
int
fidivl
mov
gs
inc
mov
into
ljmp
sahf
cmp
lret
or
inc
scas
push
mov
call
jl
xchg
push
pop
sbb
dec
frstor
push
ficoms
sub
arpl
outsb
aas
lcall
shrl
adc
add
lock
push
rorl
xor
and
in
popf
xorl
push
adc
adc
xchg
mov
inc
mov
rcl
repz
testb
andb
out
xchg
and
inc
movsb
or
movsb
insl
xor
pop
cld
jae
mov
push
jl
push
or
xchg
or
js
mulb
call
cmpsl
jl
shl
test
mov
or
push
aaa
dec
out
sub
mov
sub
inc
incb
pop
push
int
shr
and
dec
out
repnz
ret
daa
dec
das
and
arpl
cmp
sbb
pop
mov
and
inc
fnstsw
mov
pop
mov
mov
dec
add
push
inc
cli
call
icebp
sbb
inc
ret
mov
adcl
cs
jl
mov
adc
movsl
cwtl
imul
std
shrl
ja
cmp
pop
testb
and
pop
pop
push
cmpsb
stc
dec
xchg
repnz
js
xchg
rolb
pushf
push
scas
out
jl
out
jb
push
paddusw
pop
xor
cmp
and
lcall
pushf
xchg
jno
pop
out
mov
dec
mov
sbb
jb
in
xchg
test
scas
dec
jmp
cmp
pop
add
test
mov
jp
inc
lret
adcl
rorl
cmp
mov
enter
rorl
test
push
push
and
pop
ss
adc
cmp
mov
mov
inc
jle
jnp
mov
xchg
mov
xor
mov
push
test
cmp
out
xchg
mov
dec
mov
stos
sti
xchg
mov
inc
push
cmp
sub
inc
push
jbe
lods
jne
fbstp
mov
fucom
outsl
movsb
jg
and
jle
in
xchg
fcomps
dec
fs
clc
mov
loope
or
push
xor
fs
ss
mov
orl
xchg
or
lds
das
xlat
jbe
in
adc
or
jno
out
testl
rclb
or
mov
dec
cmp
std
scas
mov
dec
jne
test
jge
stos
shlb
leave
dec
push
jns
inc
add
test
jecxz
test
adc
cmp
daa
or
iret
nop
negb
cs
in
xor
repnz
lahf
test
jnp
mov
mov
dec
jl
aaa
in
push
shll
mov
and
inc
and
sbb
inc
mov
jno
and
xchg
jb
mov
push
cmp
jno,pn
xor
div
data16
shrb
fstps
cli
push
lods
mov
mov
pop
imul
repnz
and
mov
and
imul
test
fldt
jp
jb
int3
cmc
popf
xchg
out
add
xor
icebp
jae
ret
adc
test
or
roll
or
call
push
and
xor
les
leave
ret
pop
jb
cmp
nop
stos
cwtl
rorb
or
xchg
ficompl
dec
mulb
inc
xchg
out
test
repnz
sub
imul
into
dec
fstpl
imul
cmp
push
test
stos
pop
mov
mov
mul
jg
es
aaa
notb
mov
pop
lock
fidivrs
lds
add
ss
cmpsb
mov
iret
jns
addr16
push
pop
rol
dec
mov
sbb
pop
jb
pop
push
jno
aas
loopne
out
aaa
sbb
and
fimull
add
cmp
hlt
cmp
in
inc
mov
xchg
das
mov
inc
subb
cwtl
ljmp
mov
pop
hlt
sub
je
cs
imul
cmp
stos
mov
and
int3
movsl
pushf
pop
shl
in
fmuls
and
cmp
into
sub
inc
inc
mov
cld
mov
je
inc
sbb
mov
mov
or
bound
arpl
add
jns
rolb
mov
in
jmp
lea
aaa
cli
dec
push
jne
pop
test
outsl
mov
adc
leave
cld
addl
push
je
in
add
mov
es
iret
aas
or
xor
mov
dec
and
aas
pop
mov
cmpsb
cmpsb
xchg
pop
push
nop
bound
sbb
icebp
out
lods
out
dec
in
cmpsb
mov
add
sbbl
push
ds
cmp
dec
mov
lret
mul
loop
jg
or
adc
aaa
js
mov
push
inc
inc
inc
mov
xor
pop
mov
pop
inc
adc
leave
adc
fidivs
aam
xchg
and
mov
jae
nop
sarb
inc
pop
xchg
mov
nop
sub
and
popf
and
cmp
lcall
and
ret
out
iret
ror
xor
xchg
sub
adc
pop
cmp
push
dec
push
enter
rorl
movsb
inc
push
mov
xchg
xor
test
jge
test
ss
popf
xchg
mov
fisubrs
xor
push
lods
jns
inc
daa
mov
inc
xor
adc
jno
mov
jmp
mov
jp
cltd
jae
push
adc
sbb
sub
outsb
cmp
or
adc
and
and
stos
movsl
fmul
mov
cwtl
ds
dec
cmp
dec
mov
mov
lock
mov
push
stc
loope
jno
mov
fistps
das
push
dec
push
pushf
rclb
jg
pop
lret
mov
ror
jge
and
mov
das
stc
xlat
scas
and
push
cs
xor
add
fsubs
test
inc
stos
fcmovu
jmp
or
pop
lret
outsb
inc
inc
aam
adc
dec
movl
loopne
in
jb
scas
ja
in
out
adc
jge
mov
mov
add
dec
mov
gs
xor
cmp
sub
mov
jnp
sub
push
jl
xlat
sub
rclb
dec
movsb
inc
inc
mov
data16
test
mov
jmp
add
push
push
ret
or
xor
lahf
xor
xor
aam
aaa
inc
movsb
jl
nop
jmp
fdivs
xchg
subl
or
pop
imul
mov
adc
add
add
stos
lods
fadds
popf
inc
mov
mov
push
jne
leave
rcrb
ds
jns
cltd
ret
mov
pushf
or
je
in
test
rorl
xchg
inc
jecxz
adc
or
push
popf
out
fimuls
and
cmpb
and
lahf
and
cmpsl
int
ror
mov
inc
sub
mull
mov
imul
dec
icebp
pop
out
adc
in
sbb
lret
in
into
mov
movsb
mov
jg
jle
lret
inc
pop
add
xchg
mov
push
imul
mov
xor
out
cmp
scas
mov
mov
or
cli
es
add
push
pop
pop
push
jbe
int
xchg
sbb
ret
xchg
lret
rcll
mov
mov
daa
imul
sub
loope
pop
popf
push
fcompl
push
xchg
mov
or
mov
adc
pop
sbb
stos
jg
mov
pop
xchg
add
icebp
mov
or
cmpsl
xor
loope
mov
std
ret
jg
sahf
pop
pop
cmc
cmpsl
das
push
pop
and
adc
sub
mov
test
cmp
push
push
cld
mov
test
mov
cmp
add
xlat
mov
sub
push
addr16
mov
jle
hlt
mov
xchg
fxch
pop
loop
xchg
jmp
daa
jno
and
dec
sti
push
mov
xor
mov
pop
push
jecxz
stc
clc
push
mov
daa
cmpsb
inc
scas
mov
xchg
nop
arpl
add
push
cmpl
xchg
mov
in
scas
or
arpl
mov
cmpsb
sbb
nop
sub
or
dec
cmp
jno
fucomi
lea
inc
or
bound
es
rcrb
jb
or
addr16
jmp
bnd
popa
cmp
adc
incb
rol
adc
jmp
mov
sub
jb
fadd
popa
mov
mov
mov
int
pop
xchg
ja
ds
call
jecxz
mov
mov
aad
mov
xor
fldenv
and
aas
or
xlat
xor
pushl
repz
lret
fst
fsub
cmpb
enter
mov
or
lods
pop
rcrl
cs
hlt
xchg
fcmovnbe
lock
sti
sub
xorb
xchg
sbbb
inc
jp
fnsave
lods
fldl
adc
popf
rcll
mov
insl
mov
push
sbb
mov
add
aaa
popf
xchg
lods
mov
pop
mov
adc
sti
lret
int
cmp
sub
push
call
xchg
test
inc
sbb
rorl
mov
cmc
sbbl
jecxz
test
aam
je
je
jg
xchg
lods
mov
idivl
movb
jge
test
mov
stos
int3
mov
faddp
testb
pop
dec
and
mov
add
lret
pop
les
dec
icebp
prefetchw
and
push
xchg
jbe
xor
mov
ficomps
and
and
xchg
pop
dec
and
cmp
mov
inc
cpuid
sbb
xchg
adc
nop
mov
and
mov
iret
mov
out
movsb
cpuid
popf
adc
jo
lcall
scas
sahf
sbb
sub
ja
xchg
mov
mov
mov
mov
add
dec
xchg
sbb
fstpt
stos
push
std
test
sbb
mov
clc
jg
lods
pop
movsb
es
and
icebp
cmpsl
fwait
mov
xchg
aaa
add
cmovl
scas
inc
xor
mov
mov
iret
fstpt
lret
xchg
mov
add
outsl
or
pop
cmc
addl
sarl
test
cmp
idivl
outsb
dec
out
rcrb
ret
xor
push
jge
insb
sub
or
iret
repz
iret
fstps
push
mov
es
mov
mov
adc
add
jecxz
outsb
fisttpl
jg
ja
inc
push
cmp
xchg
repnz
xor
arpl
push
jns
push
dec
mov
mov
les
iret
adc
jno
in
mov
rcll
push
push
jl
lret
pushf
popfw
out
inc
in
mov
incl
push
pop
pop
hlt
insl
or
lea
repnz
cmp
mov
fistpll
mov
call
jle
loopne
out
jae
inc
cmp
add
and
insb
shl
adcb
gs
scas
inc
inc
sub
and
sub
push
icebp
pop
cmpsl
or
jne
iret
adc
mov
and
dec
cmp
scas
gs
clc
sbb
cmc
std
test
jae
pop
aam
sarl
cmp
mov
inc
add
adc
test
out
push
cmp
jne
stos
inc
sub
mov
data16
scas
insl
and
imul
sub
add
xchg
arpl
cmp
add
mov
lcall
cmpsb
inc
je
les
add
jl
nop
jno
aaa
adc
jg
call
loopne
cmp
lds
adc
ljmp
inc
cmp
xor
in
fptan
cmp
push
mov
js
push
cmp
clc
ljmp
and
jl
inc
pop
mov
pop
test
out
int
jns
cmc
inc
or
fcoms
jbe
pusha
insb
sarb
push
push
pop
out
test
jge
xor
clc
shlb
aas
push
xor
and
loopne
mov
mov
jmp
jne
jmp
fildl
xor
test
xor
lock
mov
rorb
lds
lods
rolb
inc
sarl
ljmp
adc
inc
in
xchg
inc
ds
mov
xchg
aad
jo
gs
dec
xchg
out
mov
shrl
testl
xchg
ss
mov
mov
xor
mov
das
and
adc
clc
sbb
mov
outsb
jbe
ficompl
jmp
cld
sbb
cmpsl
je
push
or
pop
add
lds
aas
add
je
add
dec
jb
loope
gs
test
push
and
push
or
xchg
push
stc
ss
mov
cmp
ljmp
movsb
jl
sbb
in
lods
sub
pop
inc
mov
push
inc
mov
nop
inc
fstpt
mov
mov
ljmp
dec
xchg
leave
lret
xor
adcb
jbe
sahf
nop
push
js
fsubl
cwtl
in
movsl
adc
dec
std
scas
test
and
lcall
imul
aad
dec
filds
adc
push
jecxz
fnstcw
movsl
mov
cli
inc
dec
or
add
or
mov
stos
daa
cmp
push
pusha
fs
fistps
sti
xchg
dec
pop
dec
push
push
arpl
or
fisubrs
jne
dec
pop
lret
imul
adc
sbb
pop
sub
adc
loop
sbb
add
cs
insb
jmp
pop
push
xrelease
xchg
ficomps
call
fnstsw
jne
enter
cmp
insl
xor
xchg
pop
or
mov
mov
sub
sbb
cmp
push
in
leave
cmp
xchg
adc
cmpl
negl
adc
or
sbb
cmp
xchg
add
cltd
into
cs
mov
pushf
mov
lods
cwtl
mov
fcoms
mov
xchg
jo
adc
outsb
imul
js
xchg
jle
mov
cmp
or
mov
lods
jnp
push
int
fisubrs
xor
push
mov
aam
add
mov
in
nop
pusha
push
sub
out
lods
int3
mov
or
ret
or
mov
cs
rclb
lcall
mov
subb
andl
loopne
out
jg
icebp
xchg
dec
jbe
xchg
daa
in
outsl
sbb
daa
sbb
push
dec
inc
adc
xchg
fxch
xchg
pusha
pop
outsb
push
inc
pop
pop
pop
push
jns
test
inc
xor
call
push
lods
jl
jmp
push
fsubr
and
mov
jecxz,pt
and
push
xchg
jae
std
push
add
xchg
add
in
cmp
jle
idiv
adc
adc
or
or
xor
out
setl
ja
sub
mov
aam
shrl
loopne
mov
sti
enter
hlt
mov
sub
sub
stos
xchg
ja
or
adc
xor
jne
push
add
add
inc
mov
clc
cmp
inc
sub
scas
jbe
stos
fwait
ljmp
rcl
inc
jnp
mov
hlt
sbb
scas
push
lcall
mov
test
pop
call
cmp
jp
jmp
pop
mov
push
cmpsl
xchg
mov
fists
xchg
test
pop
cmp
mov
addr16
cld
movsb
xor
lret
mov
into
ret
add
pusha
loopne
movsb
enter
mov
dec
arpl
loop
lods
mov
mov
xchg
mov
popa
or
fisttpl
popa
push
mov
mov
mov
mov
scas
ficomps
addr16
mov
sbb
pushf
fsubr
mov
out
loop
adc
jae
mov
es
cmpsb
jl
sub
aam
adc
dec
fcomps
mov
xchg
int
shll
mov
jge
mov
jg
push
adc
out
ljmp
in
and
loope
push
enter
jmp
cmp
adc
repz
push
pop
call
mov
std
sahf
push
aaa
mov
popa
icebp
shlb
stos
dec
leave
andl
mov
icebp
and
cmp
add
out
js
cmc
xchg
sbbl
mov
cli
xabort
xchg
mov
mov
add
popa
mov
xor
adc
jbe
shlb
mov
ss
sub
pop
xchg
in
mov
pop
shll
inc
js
in
hlt
sub
mov
xor
popa
test
idivb
mov
sbb
mov
mov
inc
pop
movsb
icebp
shrb
cmp
jg
mov
lds
xchg
add
xor
cmpsl
xor
xchg
pushl
xor
imul
bound
sub
inc
mov
and
jae
adc
into
inc
aaa
adc
pop
jns
push
push
sub
push
lret
movsb
and
ret
xchg
add
jno
inc
pop
addr16
xchg
fisubl
iret
xchg
mov
inc
jp
sbb
int
or
cltd
or
pop
and
xchg
mov
mov
xor
adcl
push
movsb
movsb
or
xlat
or
jmp
arpl
rol
imul
or
cli
sahf
dec
inc
jle
aam
jnp
inc
bnd
mov
data16
clc
cmc
add
cltd
lods
fimull
in
push
pop
rorl
call
jp
fwait
mov
push
add
out
ja
push
jne
mov
aad
notb
punpckhwd
xor
sbb
push
mov
leave
xor
rclb
popf
cmp
dec
lea
jg
and
out
shrb
and
jns
cmpsl
jne
imul
negb
fsubrp
outsb
mov
sbb
insb
js
xor
xchg
das
mov
mov
stos
mov
insb
dec
js
jp
std
push
add
and
inc
jbe
jl
outsl
adcb
push
mov
daa
pushf
and
sarl
aam
aaa
xor
pop
pop
push
stos
mov
loope
subb
and
or
push
sbb
dec
pusha
sbb
clc
jne
xchg
sub
cli
pop
mov
out
loop
sbb
stos
lods
jnp
xor
jp
pushf
or
flds
in
mov
out
add
push
out
push
repz
xchg
cmpsl
adc
nop
mov
addr16
inc
push
shlb
xor
and
and
or
xchg
xchg
loope
jp
xorl
push
adc
push
mov
jb
cmp
and
fwait
rolb
out
jl
xchg
cltd
pop
loop
loopne
int3
xchg
and
fnstenv
insl
sub
jl
or
out
popf
int3
xor
nop
sub
add
pop
add
testl
daa
jmp
or
mov
pushf
push
outsb
sarb
popf
dec
mov
gs
adc
cmp
into
dec
dec
lahf
notb
and
push
sbb
or
dec
jb
mov
test
js
dec
mov
pop
jmp
insl
test
xchg
addl
xchg
dec
dec
cltd
xor
sbb
xor
xchg
cwtl
aad
jg
mov
ljmp
push
jg
lret
fwait
insb
scas
adc
pop
cmp
push
stos
fdivs
ret
outsl
inc
sbb
jg
lods
mov
add
cld
pop
push
inc
sub
inc
insb
ja
hlt
pusha
add
loope
aam
push
pop
adc
sub
out
je
mov
sub
mov
adc
int
push
bound
stc
insb
andnps
cmpsl
mov
out
mov
xor
ret
int3
mov
push
xor
ret
adc
divl
xchg
iret
sbb
test
iret
pushl
popf
bound
scas
dec
jno
jecxz
mov
fldcw
add
jmp
outsb
ja
xor
sub
dec
sbb
movsb
inc
sbb
pop
aam
mov
xor
cltd
mov
push
cmpsb
stc
and
jecxz
cmp
dec
clc
sbb
rolb
add
arpl
dec
cmc
movsl
movsb
movsl
fldl
les
inc
ret
jno
enter
subb
mov
dec
scas
xor
cmpb
inc
rol
imul
jo
sub
and
push
lods
cmpsb
mov
pop
loopne
or
inc
cltd
mov
push
lock
or
and
push
sub
sbb
dec
mov
adc
mov
insl
cmp
insl
out
xchg
pop
and
mov
or
ss
xchg
iret
rclb
inc
adc
test
push
shll
ficoms
sbb
movsl
shr
in
add
das
xchg
xor
test
icebp
sub
mov
cli
mov
test
pusha
stos
inc
cmpsl
test
test
and
jg
in
lret
pop
popf
xor
sub
pop
jg
or
cli
insl
inc
arpl
sub
mov
icebp
mov
jecxz
in
adc
inc
mov
int
idiv
xor
adc
or
cs
clc
jg
pop
sbb
xchg
xor
fidivrs
ficomps
bound
push
jg
bound
scas
push
repz
push
test
dec
push
in
push
push
ror
loop
adc
cli
mov
ss
movsb
jno
fs
push
xchg
fsub
sahf
addl
add
iret
cwtl
add
fwait
jnp
fcoml
shlb
adc
jg
and
push
mov
cmp
repnz
dec
jp,pn
inc
adc
and
sar
daa
cwtl
mov
pop
mov
cmp
cli
pop
lcall
fdivp
out
sbb
pop
xchg
insb
xchg
push
ret
jne
loopne
inc
dec
push
sbb
cmpsb
rcr
les
rclb
vmovss
jno
cld
push
push
das
add
pop
cmp
cmc
xchg
dec
inc
sbb
mov
mov
sbb
cmp
ds
mov
xlat
adc
in
pop
js
push
dec
inc
jle
movsl
dec
lock
and
pop
popa
push
add
pop
jp
push
jp
cmp
aaa
pop
outsb
mov
cli
das
fisubrs
fistl
ret
cs
push
adc
pop
inc
sub
fdivrl
aaa
mov
or
or
mov
xlat
scas
mov
ja
pop
xchg
mov
push
mov
fmull
jnp
sbb
xchg
or
pop
addr16
push
pop
lds
or
notl
ja
clc
mov
scas
mov
sbb
sti
push
xchg
daa
push
enter
call
and
mov
xchg
inc
subl
fldenv
pop
xchg
xchg
push
mov
into
mov
cs
rcl
jg
out
fnstsw
movsl
loopne
nop
mov
subl
dec
add
aam
fwait
hlt
add
arpl
test
dec
mov
test
inc
push
cwtl
lcall
ljmp
or
xor
enter
push
outsb
scas
add
adc
ja
popa
test
sub
adc
inc
adc
and
and
lods
xchg
test
add
sbb
lcall
sub
jl
jns
pop
popa
cmp
or
jae
jp
xor
das
xchg
bnd
jae
sti
pushl
sti
inc
pop
loopne
aaa
push
xor
fidivs
mov
mov
cwtl
and
pusha
test
in
mov
std
jnp
ss
into
movsl
lahf
cltd
mov
mov
or
test
mov
adc
xchg
cmc
xor
jg
sub
fs
xchg
dec
iret
mov
andl
jbe
push
adc
inc
sahf
jg
ret
pop
imul
push
divb
and
enter
push
fbld
mov
mov
jns
mov
pop
in
or
daa
test
cmc
repnz
add
mov
clc
mov
push
push
sbb
sbb
subl
out
or
sarl
in
sbb
in
sahf
bnd
mov
xor
adc
imul
jl
aaa
cmpsl
sahf
insl
pop
adc
in
sub
test
add
mov
mov
dec
gs
movsb
sbb
mov
sub
pop
cmp
pushf
jl
addr16
cmp
addr16
and
push
adc
ret
pop
dec
sub
idivl
pop
pop
icebp
cmp
call
push
cmp
inc
das
pop
lret
mov
adc
int3
in
sub
jg
repnz
out
icebp
iret
popf
xchg
sub
test
add
pusha
pop
sbb
fcoms
das
imull
aas
sbb
pop
pushf
push
lea
aad
push
in
rorb
add
or
daa
in
pushf
adc
dec
xlat
add
fmuls
pop
pop
fwait
mov
sbb
bound
mov
out
mov
repz
mov
leave
insl
jb
ret
xor
mov
filds
les
insl
roll
mov
hlt
push
fs
sub
xchg
sub
sahf
cwtl
lret
ds
mov
xchg
test
sbb
push
add
ljmp
push
loop
jmp
lcall
inc
jmp
ja
loope
pop
mov
loopne
iret
out
ljmp
rcr
push
inc
adc
lret
and
ret
xor
pop
mov
push
xchg
jb
test
cmp
cmp
test
mov
pushf
xor
and
test
scas
dec
cmp
jns
add
xor
sub
cld
outsl
int
and
andl
js
cmp
adcb
lods
xor
lea
cmp
lret
inc
loope
rolb
sbb
jge
lods
orl
add
push
lods
aam
and
in
shrl
outsb
or
dec
mov
cmc
shlb
fs
test
add
lahf
inc
add
fidivrl
jno
scas
mov
lret
sti
loope
mov
mov
mov
jae
mov
pop
lcall
sub
xchg
xor
lods
ljmp
imul
or
push
xor
idivl
inc
mov
cltd
jnp
insl
inc
shrl
pop
lcall
sbb
addb
adc
mov
outsb
mov
or
sub
leave
test
inc
sbbl
add
mov
std
pop
lds
pop
es
enter
xchg
test
outsb
or
dec
cmc
aaa
pop
mov
xor
and
cs
mov
aam
jg
jbe
adc
std
in
xchg
add
sbb
mov
xchg
adc
jae
hlt
mov
push
xlat
rorb
insl
mov
xor
pop
ja
xchg
cmc
mov
jecxz
mov
scas
sbb
inc
adc
in
pop
pop
in
sbb
inc
sbb
outsl
nop
loopne
sub
lods
sbb
insb
jno
xchg
sbb
sbb
add
mov
lock
cmp
push
pop
loop
fisubl
popa
dec
or
push
ret
jmp
sbb
popf
je
pop
jp
out
jno
daa
addl
mov
lock
aaa
loopne
sub
loop
push
call
add
fs
cmp
mov
loope
aaa
in
inc
dec
cmp
inc
dec
movsl
inc
dec
inc
mov
sub
frstor
pop
and
jecxz
add
mov
pop
inc
nop
cmpsb
sub
cmpsb
outsb
cmpsl
loope
movsb
jns
sbb
fildl
ljmp
jns
cmp
in
pop
push
movsb
dec
test
les
ret
and
aad
cs
out
xchg
mov
pop
pop
out
pusha
clc
sbb
stos
int
jmp
mov
outsb
or
push
jmp
fmul
call
ljmp
add
mov
lahf
jmp
insb
ret
faddp
lods
pop
out
jb
dec
mov
int
in
mov
imul
icebp
sahf
lds
popa
jne
lret
gs
jp
xchg
ret
je
imul
out
sbb
fidivrs
lcall
pusha
cmp
iret
stos
mov
repnz
sbb
lods
dec
xlat
mov
sbb
daa
or
testl
xor
and
mov
std
sbb
popf
push
mov
jmp
popf
dec
mov
pusha
leave
lea
mov
rclb
bound
insb
ds
fcmovnbe
and
in
jl
cli
mov
pop
bound
loop
push
pop
sbb
inc
adc
test
enter
pop
xchg
jb
outsb
es
loope
int3
mov
mov
push
mov
cmc
ret
movsl
mov
lods
imul
mov
gs
shrl
lds
xchg
xchg
sbb
in
or
push
iret
dec
dec
cmp
push
cmp
out
sbb
lret
fimull
push
push
and
inc
es
mov
pushf
jae
in
cmc
push
lret
in
aad
sbb
jle
inc
mov
or
push
push
pop
and
mov
shll
sub
cmp
arpl
ret
and
add
jmp
pusha
orb
stos
repz
mov
xchg
ret
sbb
push
inc
out
lds
jmp
movsl
cmp
icebp
into
pop
mov
jo,pt
aas
jo
in
orl
push
push
jmp
popf
jo
xchg
fcoml
stos
pushf
mul
nop
mov
jae
ds
xor
lret
outsb
jl
mov
xchg
cmp
cmpsl
or
js
ret
lds
or
fisubs
cmp
scas
bound
add
and
push
xchg
ja
mov
pop
leave
jbe
push
and
jns
jmp
xchg
pop
pop
pop
pop
sti
ja
cmp
sbb
aam
out
mov
fldenv
and
in
ds
xchg
mov
pop
mov
push
frstor
inc
push
push
ja
xchg
scas
and
xor
insb
shl
mov
adc
int
pop
mov
call
mov
and
imul
push
arpl
or
cs
sub
push
aad
into
repnz
xor
inc
shl
shrb
mov
into
jg,pn
add
lret
mov
mov
jbe
test
ss
out
loop
aas
mov
pusha
sbb
sahf
push
addb
xchg
pop
or
ret
mov
mov
lock
dec
add
inc
mov
sbb
movsl
out
mov
jp
sbb
cli
repnz
jae
cld
xchg
xchg
mov
div
add
cs
repnz
sarb
add
push
lret
ret
jb
pop
js
mov
popl
xchg
push
inc
mov
sbb
setge
fimull
jne
and
adc
scas
aad
jb
into
hlt
out
mov
sbb
push
sbb
aaa
jae
pop
cli
repnz
dec
sbb
das
cmpsl
in
dec
push
bound
mov
pop
dec
mov
sub
cwtl
jl
inc
xlat
outsb
call
adc
cmp
out
stos
jbe
cmp
sub
mov
or
bound
xchg
add
arpl
adc
jecxz
mov
cmp
stos
in
aam
mov
push
aad
adc
xchg
inc
sub
sbb
rcll
sub
rcrl
add
xorl
stos
test
iret
ret
cmpsb
fstpt
insl
push
add
out
dec
fisubl
ret
dec
push
movsb
ljmp
pop
scas
mov
pop
jmp
xchg
cmc
mov
pop
adc
popf
ficoml
sbb
andl
xchg
push
loopne
push
jo
and
lea
pop
mov
and
daa
nop
shl
sub
pop
sbb
je
sub
or
xor
incb
push
xor
popa
psrlw
aam
sbb
pop
jl
push
jns
dec
or
lds
sti
and
mov
jnp,pn
dec
nop
xor
add
push
dec
dec
test
sub
push
dec
in
pop
mov
push
leave
and
fcomps
lock
sub
add
pop
and
inc
or
push
dec
repz
mov
into
loope
mov
cmp
lcall
lods
andl
ja
mov
addr16
in
push
adc
push
adcb
push
aas
mov
lret
cmc
mov
push
add
sub
rcll
pop
fs
xor
aam
mov
add
dec
mov
iret
fcoml
mov
mov
lock
fldenv
gs
fistpll
jne
iret
push
add
out
push
push
test
rcrb
mov
mov
jmp
popf
sub
push
sbb
push
call
dec
sahf
cs
jl
mov
imul
ja
mov
mov
xchg
pop
push
jmp
jl
int3
outsb
jns
sub
mov
fwait
movsl
aas
mov
jp
icebp
ja
negl
push
inc
cmpsb
cld
ret
out
test
shrb
adc
and
notb
and
mov
pop
sbb
cmc
ret
xchg
cmp
jg
rcr
mov
push
adc
clc
leave
push
and
fidivl
pop
aas
out
sub
popf
xchg
mov
loopne
inc
aad
nop
push
xchg
adc
pop
xchg
dec
adc
ror
fsubl
dec
test
adc
sub
movsl
pop
jb
and
lock
lret
push
bound
jne
jecxz
and
push
xor
xchg
adc
and
push
mov
cmpsb
jge
jle
pop
adc
add
popf
cmpsb
rorb
sahf
mov
cvtpi2ps
pop
dec
cld
adc
imul
mov
das
bound
popf
test
cmp
out
insl
stc
imul
adc
adc
jno
dec
lods
cs
std
loopne
fwait
popf
repz
push
sbb
fdivr
inc
push
add
call
xor
push
lds
ficoml
mov
pop
sahf
adc
sbb
out
adc
sti
xor
loopne
mov
inc
imul
lahf
adc
popf
jnp
push
pop
ret
pavgw
and
js
daa
jmp
push
sti
ja
and
jno
ljmp
sbb
jg
fimuls
push
orb
mov
sahf
ficompl
lahf
fldl
call
mov
fisttpll
jge
pop
jne
push
clc
push
icebp
addl
inc
cmp
popf
add
je
dec
fwait
pop
repz
add
mov
roll
mov
add
sub
or
jge
dec
and
or
inc
and
mov
mov
mov
enter
les
sub
lds
mov
xor
orl
jl
aaa
jge
xchg
test
sub
popf
xchg
xchg
fstpt
push
daa
inc
adc
dec
and
fisttpl
ret
push
int3
adc
stc
or
add
jp
stc
jecxz
das
rol
ds
ja
cmp
mov
mov
jmp
lahf
adc
dec
jno
push
lock
call
pop
xchg
sbb
sbb
addr16
loopne
sub
rol
ss
xor
and
lcall
push
scas
xchg
fdivrl
and
scas
or
lcall
lods
fisubs
lret
fwait
add
mov
loopne
out
mov
adc
jg
rcrl
negb
jns
lock
repz
lahf
xor
or
mov
mov
pop
or
push
mov
and
mov
int
insl
xchg
js
or
inc
xchg
pop
ret
lret
pop
jno
cmp
loope
pop
jno
sbb
cmpsl
cld
sbbl
ds
imul
dec
cld
mov
cwtl
fsub
pushf
add
arpl
xlat
aaa
clc
bound
push
das
cmpb
insl
shll
dec
dec
ss
mov
rolb
fcoml
in
and
cld
addr16
and
push
sbb
mov
sahf
jle
adc
std
cmp
push
mov
and
roll
inc
jmp
cli
xlat
xchg
mov
das
mov
filds
push
cmp
push
dec
popf
cmpsl
fs
lret
aad
push
out
mov
push
xor
pop
dec
arpl
out
or
sub
and
in
scas
add
or
bound
aaa
cmp
mov
call
jle
pushf
jl
out
cmp
mov
jo
mov
mov
push
inc
jae
loope
enter
out
cmp
and
xor
mov
sub
adc
dec
xchg
dec
ds
mov
pop
dec
cwtl
add
in
andl
cmp
xchg
ret
loopne
lcall
gs
addr16
pop
fdivrl
adc
fbld
test
mov
xor
add
imul
imulb
jnp
sub
fimull
imul
out
xchg
ss
jl
push
notl
cmp
mov
dec
inc
lods
ret
mov
lods
andl
imulb
jne
push
psllq
in
push
mov
fildl
daa
mov
add
mov
jecxz
ds
ss
jp
mov
mov
int3
loop
test
mov
sub
adc
inc
lret
test
sub
ja
rorb
insb
dec
push
scas
fsubrp
xor
or
inc
mov
xlat
movsl
insb
dec
or
call
adc
pushf
loope
icebp
lea
jno
cli
dec
or
xchg
repnz
loopne
push
jbe
pop
push
inc
stos
and
mov
dec
lds
mov
jle
jmp
sbb
aaa
inc
push
mov
and
jnp
dec
sbb
dec
xchg
jns
int3
fdivrp
lret
mov
push
mov
out
push
mov
lret
pop
mov
mov
cli
mov
test
mov
cmp
das
pop
adc
icebp
dec
xchg
in
rorb
xor
pop
add
repz
or
sahf
nop
aam
add
jae
xchg
aaa
aaa
pop
mov
mov
sarl
in
inc
adcl
addb
fistl
xlat
ss
or
pop
call
dec
push
pop
sbb
imull
xchg
adc
push
dec
ds
jo
sub
lds
arpl
jle
fstl
inc
stc
dec
cmp
mov
not
sbb
pop
notb
into
mov
dec
lcall
negb
pop
lret
jae
fwait
xchg
out
arpl
mov
sbb
int3
jmp
sbb
je
clc
sbb
sbbl
and
js
xor
icebp
jno
pop
push
pusha
adcb
repnz
xchg
leave
dec
mov
dec
out
and
sbb
push
jno
lods
jmp
inc
mov
fwait
test
insl
xlat
mov
imul
orl
mov
sti
xor
xchg
daa
adc
xlat
and
lret
ret
push
loope
bndldx
dec
push
addr16
insb
mov
scas
ja
push
push
mov
je
lods
es
mov
cmp
and
push
dec
add
fsts
mov
lahf
andl
inc
lret
cld
pop
jo
xchg
stos
inc
orl
lock
popf
xchg
ja
lret
sbb
js
lods
or
fstps
in
cmp
mov
xor
shrd
mov
mov
aaa
push
and
sti
mov
and
cmc
das
jne
sub
scas
and
fcmovnbe
push
stc
xchg
fmull
inc
stos
notl
shlb
and
das
shr
cmp
es
and
push
push
inc
cs
inc
pop
pop
push
or
xchg
xor
push
ret
outsb
jecxz
adc
stc
bound
lods
shll
je
or
outsl
xor
jmp
cmpsb
notb
cmpsb
ret
adc
mov
pop
sub
and
sub
fists
cmp
pop
or
mov
mov
push
fwait
rcrb
jae
scas
lret
cmp
cwtl
sbb
out
int3
mov
push
pcmpeqb
jle
loop
dec
add
push
or
pop
inc
insb
add
std
dec
fstl
xchg
loop
dec
jae
hlt
dec
mov
jns
dec
out
and
mov
pop
lock
mov
fcmovbe
fimuls
adc
adc
cs
sbb
sbb
sbb
dec
jae
dec
nop
lods
sub
bound
arpl
lret
or
cmp
cmp
pushf
adc
push
sub
pop
xchg
sub
fwait
push
scas
xor
xchg
test
inc
loop
pop
and
gs
sti
ret
or
repnz
adc
xchg
mov
fwait
jmp
repz
adc
fldln2
mov
out
jl
ret
and
es
shl
mov
pushf
je
out
pusha
mov
pop
cmp
int3
mov
push
xor
cmp
cs
cmp
adc
cmp
xchg
and
rcrl
mov
test
and
or
push
aas
add
mov
in
sahf
rorl
jnp
push
leave
cmpl
call
loop
cs
mov
icebp
test
push
cmp
and
in
xchg
shr
mulb
jmp
flds
or
mov
data16
and
inc
rol
add
push
cmpsl
rcrl
fsubr
and
adc
add
in
mov
mov
roll
cmpsb
mov
cmp
pop
into
in
xor
adc
mov
mov
rcl
cli
and
inc
lcall
add
movsb
mov
mov
mov
aam
cmp
mov
inc
addb
ds
outsb
jo
pop
or
push
mov
push
repnz
js
imul
out
addr16
cwtl
push
cmp
pop
mov
in
jmp
out
insb
test
dec
out
and
sahf
std
flds
inc
sbb
mov
push
fiaddl
xor
fnstcw
hlt
iret
dec
adc
outsl
jp
leave
jecxz
push
jno
mov
push
lods
call
daa
mov
push
flds
mov
mov
shl
inc
inc
and
movsl
arpl
mov
inc
call
jmp
inc
popf
adc
mov
mov
nop
andl
mov
clc
mov
shl
rol
mov
arpl
jl
scas
jbe
sub
and
lods
aas
pop
mov
and
cli
sub
repz
in
lock
jbe
je
jbe
loopne
test
sub
jmp
sbb
or
xorb
movsb
xlat
mov
negl
es
negl
cmc
int3
dec
and
out
jle
aaa
data16
nop
add
in
adc
test
das
and
nop
ret
mov
inc
lods
xor
or
movsl
cmp
push
fldt
cmp
xchg
mov
fs
idivl
lahf
dec
push
imull
inc
inc
inc
and
movsb
mov
or
add
push
xor
test
cmp
cmp
roll
subl
jae
cmp
out
into
insb
pop
rclb
cmp
imul
lods
dec
jno
sub
pop
mov
ljmp
idivb
addr16
sbb
fcomps
adc
rorb
fsubrl
add
cmpsl
mov
lret
sbb
je
in
jnp
cli
icebp
and
shrd
scas
mov
pop
movsb
cmp
xor
xor
or
cltd
lahf
aad
or
std
gs
cmp
xchg
pop
push
mov
pop
sar
jo
pusha
aam
in
clc
ret
fisubs
not
cmp
out
pushf
in
adc
jne
push
stos
adcl
pushf
scas
dec
mov
out
std
adc
xorl
insw
jb
sbb
arpl
ss
lods
mov
lds
push
das
test
push
cld
push
loopne
out
push
jnp
mov
or
in
pop
in
jecxz
stc
dec
sub
repz
lock
jl
inc
mov
shlb
scas
outsb
imul
jg
xor
xchg
mov
jmp
mov
stc
ds
aaa
or
inc
pop
aaa
and
iret
adc
cs
scas
mov
jp
sbb
shrb
mov
adc
jbe
fs
jo
and
loope
clc
test
rol
loopne
ss
pushf
mov
loop
rcrb
xchg
fildll
in
xor
test
add
xchg
ljmp
popf
push
cmp
mov
push
push
scas
je
data16
jl
cmp
dec
cwtl
arpl
pop
mov
icebp
mov
or
xchg
call
stc
push
js
mov
movsb
xor
lahf
jns
dec
out
and
mov
insl
mov
out
cwtl
adc
adc
inc
sbb
and
mov
jo
stos
push
lcall
push
xor
push
push
xchg
mov
jp
and
inc
std
mov
in
movsb
add
out
or
pusha
in
ja
push
test
xor
cmp
pop
jl
jle
lcall
daa
inc
lods
rolb
mov
mov
jnp
dec
sub
push
sbb
fcomps
ja
mov
dec
nop
fidivrl
jbe,pt
pop
or
aam
pop
mov
mov
push
gs
dec
fcom
cmp
int
cmp
inc
xchg
sub
shrb
mov
pop
jge
sar
sub
in
adc
scas
shlb
out
jo
and
mov
or
jle
es
mov
ljmp
pop
shll
stc
add
sub
adc
ficomps
inc
add
call
push
adc
leave
inc
dec
movd
enter
and
popa
mov
push
xor
ret
rcl
lods
jno
xchg
push
or
test
imul
pop
lret
popa
adc
stc
fs
adc
lret
push
push
jns
mov
and
fs
cltd
into
ljmp
inc
out
push
inc
push
fbstp
fs
ret
loopne
int
stos
fdivrl
inc
xorl
xchg
pop
outsl
shll
out
int
mov
inc
js
xchg
je
iret
adc
jmp
lret
insl
aad
cmp
add
adc
jle
lret
aas
dec
and
dec
jns
aad
adc
ljmp
push
mov
xor
jb
sub
repnz
cld
ret
sbb
or
pop
nop
dec
cmp
jecxz
mov
lcall
es
inc
addl
and
xlat
imul
iret
cwtl
mov
fmulp
cmp
jns
jno
mov
jmp
push
mov
test
mov
in
inc
jb
and
mov
or
sti
mov
ret
aaa
add
addr16
push
mov
leave
clc
int3
mov
cmpsb
mov
jnp
jne
es
test
sub
mov
adc
and
push
rep
psubusw
lea
xchg
pushf
sbb
pop
xor
add
cmpsl
enter
fnstcw
mov
xlat
push
mov
loopne
imul
add
adc
jbe,pn
jo
mov
xlat
cmp
inc
shrb
and
dec
jge
incb
jbe
and
mov
std
mov
outsl
push
enter
push
sahf
in
popa
clc
push
xor
loop
mov
ja
jge
jb
lock
pop
fwait
repnz
lds
orb
cmp
jl
inc
nop
out
mov
mov
imul
roll
dec
pop
lds
enter
xlat
jl
cmpb
pushf
sbb
mov
cwtl
xchg
aam
jecxz
push
insb
pop
mov
orb
out
mov
cmp
mov
jno
lahf
jb
add
push
repnz
sti
out
pop
mov
adc
jg
aad
lahf
push
pop
lret
mov
pop
push
lea
dec
xchg
sub
pop
mov
fadds
in
daa
pusha
sub
fsubr
pop
mov
add
push
mov
ret
repnz
dec
xchg
jno
mov
mov
add
dec
mov
orl
repz
sub
mov
xlat
aam
bound
divb
sbb
shl
cmp
sahf
popf
lds
dec
test
mov
loopne
push
fadds
jo
xchg
pop
mov
mov
dec
inc
mov
loop
xchg
stos
adc
and
mov
jge
call
mov
push
adc
fstpt
sub
mov
adc
aas
and
jecxz
enter
arpl
jb
inc
mov
std
popa
movsl
push
and
pop
xor
adc
mov
xchg
pop
mov
clc
test
stos
add
dec
and
or
mov
dec
sti
jno
bound
repnz
push
adc
dec
popf
es
leave
int
aas
jg
xchg
out
into
aam
aas
shrl
fxch
fistpl
lods
das
cmp
repz
movsl
mov
inc
shrl
xchg
das
ficoml
out
bound
cmp
and
adc
outsl
mov
cltd
loop
cltd
dec
and
fbld
dec
push
mov
test
adc
push
cld
push
lret
cmp
add
mull
es
dec
outsb
scas
aaa
clc
cmpsl
inc
jmp
in
clc
pop
pop
and
add
lods
xchg
xor
orb
fisubrs
jbe
mov
iret
jnp
add
rcrl
gs
ret
mov
scas
ja
scas
bound
jp
fisttpl
ret
xchg
rorl
loopne
aaa
cld
adc
pushf
mov
fnsave
popf
out
push
pop
nop
aad
jecxz
mov
fs
fprem
in
cmp
popf
out
mov
mov
add
adc
adcb
lea
push
adc
ja
adc
outsl
sbb
inc
ja
scas
cld
cmp
add
scas
xor
fcmovnu
and
mov
ret
pop
iret
mov
mov
jmp
loop
add
addl
call
pop
sub
and
push
and
pushf
jo
jp
lahf
loop
add
and
xchg
dec
xorb
cmp
rorb
cmp
cmp
xor
xchg
xchg
and
adc
aas
fstpt
pusha
aam
sbb
cmp
dec
add
inc
pop
cwtl
les
or
out
cmpsb
push
adc
pop
xchg
jl
xor
inc
mov
mov
jle
neg
xchg
repz
add
fs
cmp
xchg
jb
push
mov
leave
or
sub
les
idiv
mov
jle
mov
or
rcll
dec
sarb
cmpsb
adc
mov
orl
mov
mov
test
inc
addr16
and
mov
lahf
into
out
div
shlb
jo
ds
xchg
lds
jp
xchg
add
push
repnz
js
test
out
sbb
ss
pushf
fistps
jbe
jl
stos
repz
mov
and
hlt
xchg
out
lea
inc
or
arpl
adc
adc
bnd
sbb
dec
stos
adc
or
sbb
mov
insb
div
cltd
cmp
cmp
fsubs
aaa
jle
scas
lea
mov
rcl
jno
rorl
mov
fnsave
inc
and
mov
inc
inc
or
loop
mov
jmp
into
pop
or
jns
and
pop
inc
aaa
inc
jmp
and
xchg
aam
ja
pop
repnz
fldl
lret
call
mov
xor
cmpsb
test
loop
ret
mov
mov
cmp
clc
sub
cmp
sbb
cld
loope
nop
pop
addb
ror
push
vmwrite
pop
movsl
xor
call
jo
data16
outsb
cltd
mov
cmpsb
cmpsb
jmp
loop
mov
scas
xor
add
xchg
and
bound
and
mov
pop
data16
or
cmp
lds
adc
sbb
in
jo
rol
cmp
js
mov
js
in
fs
fdivr
jecxz
test
adc
adc
push
ja
xchg
bound
add
mov
arpl
ja
test
push
sbb
stos
cmpsb
lods
mov
into
add
dec
das
sub
ss
out
repz
xchg
test
cmpsl
arpl
push
fwait
mov
outsb
xchg
inc
inc
aad
or
nop
pop
mov
dec
xor
xchg
push
or
pop
mov
outsl
sahf
jo
mov
dec
mov
int
or
inc
jns
aas
dec
lock
ret
incb
push
test
adc
and
mov
loopne
ror
gs
jp
mov
mov
mov
pop
xchg
fldt
loopne
ss
arpl
push
add
std
push
jge
mov
jle
lret
sbb
sub
ss
push
and
enter
mov
pop
gs
std
out
mov
ret
or
sub
ret
scas
pop
unpckhps
mov
lahf
and
imul
push
cmc
xchg
xor
push
out
daa
inc
test
dec
add
or
fildl
cmp
or
out
fcompl
test
shll
outsl
xor
roll
or
xchg
mov
aaa
sub
cltd
les
xor
in
hlt
in
sub
pop
lods
inc
sub
cmc
int3
aad
loopne
adc
pop
lea
sub
jb
aas
aam
mov
rcrl
xchg
push
push
pop
mov
lcall
mov
adc
ret
cmp
xor
and
sbb
cmp
xchg
inc
fdivrp
mov
jg
out
mov
add
adc
imul
mov
cli
pop
pop
jg
mov
ret
dec
inc
std
pop
jecxz
mov
xor
mov
cmpsl
add
xchg
push
shll
mov
fnstsw
mov
sbb
adc
movsl
jo
inc
incl
jecxz
daa
mov
push
mov
inc
cmpb
out
call
aad
aaa
enter
sbb
ret
pop
repnz
pop
push
mov
adc
in
push
fidivrs
sahf
mov
xlat
out
xor
adc
pop
fsts
cmp
loope
cmp
jo
sub
in
in
into
cwtl
xlat
std
push
lock
jnp
iret
dec
loop
sbb
xor
es
mov
jge
aam
test
jg
imul
lods
adc
std
inc
loope
popf
push
mov
stos
pop
xchg
adc
ret
cwtl
jae
gs
ds
adc
mov
xchg
push
push
lds
sbb
fsubrp
inc
jge
mov
pusha
inc
jae
psubsw
stos
bound
mov
pop
jno
adc
loopne
add
lret
leave
fsubrl
negl
push
and
in
xorl
scas
je
or
xor
mov
frstor
inc
xlat
aam
lret
stc
and
sahf
jb
pop
js
sub
rolb
invlpg
into
hlt
and
test
icebp
sarb
mov
cmp
nop
xchg
adc
ja
push
add
and
push
gs
std
mov
sub
mov
jnp
aam
xchg
movl
divl
jmp
ss
push
mov
xchg
jae
sub
sarl
add
aaa
and
outsb
in
cmpsl
pop
mov
sbb
mov
and
movsl
lock
push
xchg
adc
mov
xor
loope
fbstp
ror
and
adc
sarl
jecxz
imul
mov
push
test
icebp
aas
jmp
int3
lret
enter
mov
pop
ss
pop
jnp
mov
or
orl
mov
and
popa
mov
or
sbb
jo
sarb
loopne
addr16
sbb
inc
pop
add
push
fsubl
fiadds
les
sbb
and
pop
sbb
and
jecxz
push
jmp
popf
cwtl
or
test
jno
test
inc
out
sub
movl
pop
mov
lret
cltd
pop
rcrl
in
mov
mov
ljmp
lahf
dec
insl
pop
mov
pop
lahf
cs
stos
dec
ja
das
mov
pop
and
test
icebp
in
jne
dec
outsb
cmp
rorb
ss
aas
mov
mov
std
or
movsb
jp
imul
push
dec
and
jb
push
je
fmul
push
xlat
stc
lds
xchg
cmp
gs
insl
push
add
and
cmp
fnstcw
inc
shll
dec
add
sub
push
arpl
cmpsl
sbb
shll
out
jno
bound
and
scas
out
xchg
movsl
inc
bound
add
adc
xchg
push
test
enter
or
cmp
mov
aas
es
icebp
cs
in
sub
pop
jae
and
and
mov
add
dec
push
or
push
inc
jb
add
std
xchg
cmpsb
ljmp
xor
enter
or
icebp
or
jnp
and
cs
push
test
mov
push
repz
jg
sub
cmp
sar
xchg
ss
test
mov
rorl
fmul
and
push
cmp
fdiv
call
out
inc
push
lahf
clc
incb
cmp
sti
popf
orl
dec
dec
testl
fwait
lret
clc
push
mov
rcl
push
out
iret
mov
insb
and
jg
push
push
xlat
mov
jge
movsl
test
insb
scas
dec
pushf
cmpl
call
mov
jle
add
sarb
fstp
cmp
cmp
and
lds
and
inc
pop
test
xor
shl
or
ja
jns
scas
xchg
jnp
inc
scas
bound
sbb
test
out
jbe
inc
pushl
sti
iret
inc
dec
push
mov
jmp
sbb
xor
in
jl
mov
subl
stos
and
mov
imul
jl
jb
nop
loope
shrb
fadds
fnstcw
dec
icebp
lcall
mov
adcl
insl
aaa
in
loopne
xor
nop
fwait
jle
lret
cmp
jbe
inc
add
es
rclb
pcmpgtd
rorl
mov
iret
mov
in
xor
sarl
mov
loopne
jp
ret
mov
or
sbb
add
adc
out
xchg
adc
xchg
scas
shlb
cmp
xchg
inc
les
fcoml
mov
mov
dec
stc
adc
sub
jle
xchg
dec
dec
mov
popa
push
adc
cmc
fwait
sub
ss
lret
xchg
movb
mov
adc
out
jp
pop
jmp
mov
sub
xorl
xlat
pusha
add
ja
rorb
out
clc
jns
mov
fmul
xchg
push
daa
and
jnp
stc
ret
test
pop
add
fmulp
out
jge
aam
adc
mov
mov
lock
gs
ja
lcall
pop
rolb
adc
jg
call
inc
ds
outsb
rclb
ret
pop
cmp
daa
repnz
mov
fstps
and
sbb
inc
out
push
pop
and
dec
je
cmpsl
lods
test
xchg
out
lcall
lods
inc
jnp
inc
hlt
das
lock
jl
aad
push
test
inc
mov
in
ss
int3
and
xor
or
xor
inc
and
fidivrs
data16
push
mov
sub
aad
dec
sbb
and
inc
aam
sbbl
out
scas
hlt
sub
mov
jp
popf
xchg
xor
cmpsb
pop
loope
ss
push
fcoms
pop
ljmp
test
mov
push
dec
lcall
add
push
push
fwait
lea
or
xchg
sar
lea
inc
in
xchg
jbe
sub
mov
jp
pop
push
jge
rolb
ficompl
aam
cltd
jbe
mov
ror
sbb
mov
into
lock
adc
mov
popa
push
iret
pop
dec
dec
push
repnz
mov
repz
mov
dec
adc
fmuls
popa
orl
mov
jne
sub
hlt
movsb
mov
ret
pushf
or
enter
mov
add
mov
faddl
fcmovnu
movsl
jmp
enter
jns
aaa
sbb
sub
gs
cmc
mov
xchg
icebp
mov
cmp
push
shll
pop
mov
sti
push
lea
push
xor
stc
dec
popf
or
sbb
xchg
jns
arpl
and
xor
sti
iret
dec
movsl
dec
leave
rolb
fwait
inc
jge
jb
xchg
jnp
dec
jnp
and
mov
aas
jle
scas
ljmp
xor
imul
fs
dec
test
negl
hlt
fisttps
loop
lcall
mov
push
and
ja
insb
ror
divl
xchg
shlb
leave
xchg
jle
mov
ret
pop
mov
iret
daa
decb
mov
xlat
test
dec
scas
sahf
ficoml
aaa
aas
cmp
mov
scas
cmc
sub
jns
testb
and
test
in
mov
shlb
cmpsb
pop
int
adc
fsubrs
data16
loop
mov
loope
out
dec
xor
into
sub
mov
add
fldt
movl
mov
pop
cmp
cmp
pop
mov
and
xor
outsl
aas
mov
outsb
fsts
fildll
inc
dec
ds
inc
xchg
imul
pop
adc
mov
adc
shlb
sbb
sti
in
xchg
ret
cmp
pop
ss
mov
xchg
cmp
clc
sub
push
jo
mov
and
icebp
mov
je
out
iret
cltd
xor
mov
insb
push
fsubl
pop
xor
push
cmpsb
pop
xor
in
jbe
scas
jo
cmpsb
in
jo
js
add
sbb
out
xor
push
or
loopne
cli
sbb
js
mov
pushf
and
lret
jbe
cmp
mov
aad
in
jo
iret
or
jecxz
cmp
aad
out
cmpl
push
lcall
ljmp
subl
jle
daa
mov
cmp
testl
jno
sub
push
push
inc
test
stos
lret
adc
xorl
movsb
jns
dec
pushf
aas
cmp
jns
xorl
push
push
adc
mov
pop
cmpsb
fstpl
sti
xor
adc
fidivrl
hlt
push
mulb
xor
and
sub
pop
movsb
lods
dec
push
inc
pop
scas
sbb
repz
mull
mov
push
iret
dec
sti
imul
sbb
mov
iret
mov
cmp
das
dec
jne
aam
sub
xor
cmp
pop
aam
mov
cmp
repz
inc
and
insb
adc
notl
lret
cmc
repnz
std
mov
fucom
xchg
aas
leave
pop
dec
rorl
loop
or
jbe
mov
push
orb
bnd
jecxz
notl
sbb
daa
lret
cwtl
mov
jg
inc
sub
cmc
or
cmp
jmp
push
test
adc
add
xchg
sbb
in
xor
mov
insl
insl
jg
movsb
mov
fs
mov
cld
lahf
clc
sub
mov
scas
fstps
fimull
dec
cld
test
sbb
pop
push
dec
mov
inc
shlb
leave
in
pop
mov
ret
add
lcall
mov
jp
and
xchg
das
lea
pop
ret
repz
push
mov
xchg
jo
int3
aaa
loope
pop
cli
pop
in
xchg
and
inc
arpl
xchg
xor
jbe
mov
pop
xchg
cmp
dec
sbb
sbb
out
xchg
push
test
sub
in
lcall
addr16
je
push
gs
arpl
mov
xlat
neg
cld
mov
imul
loope
cmpsl
xor
clc
pop
push
lock
movsl
mov
loopne
cmpsb
rorb
sbb
pop
xlat
jb
lds
pop
or
xchg
push
sbb
fcomp
movsb
loopne
push
pop
adc
adc
lahf
test
pop
jle
or
add
inc
icebp
in
mov
loope
stc
or
fs
mov
leave
or
dec
sub
adc
lcall
xchg
arpl
pop
aaa
cmp
jo
push
test
std
jb
lret
push
pop
sub
clc
mov
or
fistl
mov
jo
rcrb
adc
add
jmp
jmp
testl
repnz
mov
lahf
inc
adc
mov
jmp
and
dec
pop
mov
mov
shrb
jle
push
xor
call
or
push
jl
mov
jecxz
cmc
xchg
lea
and
jl
inc
mov
lods
fstl
inc
movsl
add
enter
popa
pop
insb
cmc
dec
mov
dec
inc
test
xchg
in
mov
xchg
sub
loope
or
loopne
add
add
daa
das
shl
and
cmpsl
sti
fwait
inc
mov
jmp
jmp
xor
das
or
rolb
or
into
pop
mov
pop
movsl
je
jg
jb
push
mov
jbe
test
jl
mov
inc
cmp
repz
xchg
and
sbb
sbb
adc
jno
pop
orl
fwait
or
ds
xor
mov
sahf
add
jp
cmpl
test
mov
and
push
movl
aaa
fwait
mov
xor
aad
xor
pop
inc
je
cld
sbb
flds
cld
cmp
lret
rcll
jg
int3
jp
insb
inc
gs
sub
ja
add
cmp
xchg
mov
cmp
loopne
insl
sub
push
sub
gs
ljmp
dec
divl
inc
xchg
push
xchg
jo
adc
jne
and
imul
mov
lahf
std
dec
mov
add
rcrl
test
loopne
pop
fwait
loop
sbb
or
call
rcrl
sub
pop
inc
fcmovnb
lods
sub
lcall
mov
dec
xor
inc
ss
mov
sbb
xor
mov
jb
gs
insl
cltd
in
pop
jbe
lcall
inc
subps
std
mov
sbb
sub
clc
sti
mov
adc
fimuls
add
jmp
dec
sbb
push
nop
shll
jmp
je
dec
je
and
arpl
fbld
stos
jmp
sub
mov
enter
imul
inc
mov
and
fucomp
jp
imul
ljmp
and
adcb
mov
pop
lret
mov
int3
std
xor
sub
and
loopne
xor
mov
subl
aaa
mov
icebp
jnp
inc
jmp
leave
movsb
jge
cwtl
jns
orb
loop
fbld
jg
and
je
stc
pusha
stc
cmp
adc
int
fcmovnu
push
jecxz
lcall
xor
push
lret
test
nop
scas
loopne
and
ret
orl
xor
xchg
jp
jne
loopne
jge
repnz
fsubl
adc
mov
jno
int
and
jbe
mov
xchg
and
jbe
out
xchg
push
sub
sbb
cmp
add
mov
mov
mov
inc
test
push
call
repz
out
ds
xchg
mov
cmp
push
sub
mov
scas
aam
ret
mov
nop
cmc
leave
js
aaa
test
add
test
les
and
orb
adc
push
and
test
push
fmulp
lds
jg
imul
push
sub
sub
imul
mov
jae
jo
cltd
pop
shl
xchg
mov
cwtl
dec
cmp
gs
mov
sbb
fsubrs
leave
sub
fmulp
inc
sbb
cld
cltd
addl
stos
push
fistpll
popa
ficompl
icebp
and
xchg
jge
cli
mov
xor
push
stc
cwtl
popa
or
add
sbb
iret
dec
mov
movsb
test
or
inc
cmp
push
mov
sbb
mov
xor
cmp
insl
lock
pop
dec
pop
jge
xchg
push
xchg
ret
cwtl
or
data16
add
insb
leave
or
sub
lahf
jmp
insb
movsb
aaa
mov
pop
jb
cld
stos
and
cwtl
fs
stc
aas
pop
push
mov
cltd
xor
cmc
aam
lods
out
addr16
jmp
pop
jl
test
arpl
inc
xchg
fwait
mov
in
shl
push
jl
aam
xchg
dec
xor
arpl
push
stc
mov
and
sarb
inc
jecxz
popa
bound
push
sub
icebp
add
outsl
xor
push
nop
push
psubusw
sub
add
jmp
stos
inc
pop
insl
lret
outsb
imul
into
es
addl
jnp
cwtl
pop
cwtl
and
lret
adc
pusha
mov
stos
push
in
xchg
or
inc
stc
aaa
sub
or
out
ljmp
loop
jbe
mov
cmp
mov
push
insb
and
jge
mov
mov
sub
fst
mov
and
iret
mov
mov
sbb
pop
xor
mov
fmul
mov
loop
pop
dec
or
test
xchg
sahf
xor
shll
or
data16
jne
pop
arpl
push
cmc
cmp
add
xchg
adc
test
les
rclb
outsl
cmpsl
add
push
out
js
sbb
pushf
pop
subb
ja
push
cmp
mov
mov
xor
inc
jmp
in
push
subb
mov
add
es
mov
das
cmovp
pop
test
and
dec
jo
fwait
pop
cmp
push
mov
mov
stos
push
jg
loop
mov
jge
fwait
jbe
repz
or
aam
test
or
sbb
js
insb
jb
jnp
mov
cs
cmc
fldl
push
shlb
mov
stos
pop
scas
jecxz
orl
jmp
jb
daa
outsl
mov
adc
push
mov
add
hlt
sti
fisttps
cmp
sbb
mov
push
out
add
xor
pop
rolb
lcall
shl
je
jp
cli
cwtl
mov
jecxz
jb
or
es
lock
push
enter
and
push
cmp
push
cmpsl
outsb
outsl
das
xchg
jae
mov
imulb
sub
ret
jle
pop
inc
or
xchg
fs
daa
int
sub
daa
adc
dec
push
mov
lods
adc
push
dec
xchg
popf
mov
push
js
movsl
jnp
cltd
add
xchg
pop
sub
jmp
and
push
sbb
fimull
imulb
or
xchg
jle
mov
fidivl
pop
shrb
cmp
gs
mov
dec
inc
jp
scas
inc
movsl
jmp
out
js
repz
mov
lcall
pop
dec
mov
orl
stos
out
ljmp
xchg
mov
push
inc
sub
movsl
pop
and
pop
sub
pop
aam
cmpsb
clc
inc
dec
out
lret
mov
hlt
fstpt
negb
add
xlat
mov
fs
lret
xchg
sub
dec
sub
dec
dec
loope
or
das
movsb
loopne
push
movsl
and
lods
mov
add
cmp
dec
lods
cmp
mov
mov
ljmp
or
adc
fmuls
lea
lcall
dec
push
push
int3
sbb
jns
jns
jnp
das
fnstcw
roll
add
dec
subb
xor
mov
repnz
test
ja
or
push
ret
xor
push
sub
or
dec
iret
bound
fdivrl
fs
jl
sbb
mov
push
int3
out
arpl
lcall
and
sbb
xchg
rcrb
mov
rclb
mov
pusha
enter
bound
sti
loop
jo
pop
xor
push
push
sbb
cmp
dec
je
int
push
push
cmovp
jo
dec
out
lcall
and
mov
testb
cmpsl
jge
pop
push
movsl
addb
iret
sub
add
outsl
in
sub
mov
in
ret
pop
outsb
dec
mov
mov
push
sbb
test
push
cmp
add
mov
test
mov
jne
movsl
lret
gs
hlt
lds
and
mov
popf
jno
int
or
lret
sbb
mov
shll
insb
insb
dec
sbb
roll
fs
imul
in
jg
sub
jmp
shlb
scas
loopne
cmc
adc
xchg
je
sti
cmp
data16
lods
push
movsb
mov
push
cltd
aam
movsb
arpl
jns
pop
or
lods
inc
xor
into
sbb
sub
loope
jmp
daa
insb
pop
or
jnp
shll
aaa
cmp
xor
call
cmp
int
cmp
add
push
test
bound
adc
cs
jae
fs
cmp
jae
leave
lods
jo
push
das
xchg
jmp
stos
insl
or
or
jb
pop
xchg
push
jmp
mov
add
arpl
jae
sbb
sbb
test
push
cmpsl
push
sbb
sub
test
pop
ja,pn
fidivrl
sbb
loope
fisubrs
loop
mov
cmp
fs
cmp
xor
pop
inc
into
lods
push
jnp
inc
dec
and
scas
fsubl
mov
lahf
mov
push
insl
movsb
stc
jbe
xchg
xor
pop
jne
loope
aam
aam
andb
loop
mov
shl
imul
push
jge
jmp
push
out
ljmp
dec
inc
or
mov
add
or
fs
mov
cmp
push
push
jp
fs
jl,pn
movsb
lss
cmp
test
lods
adc
popa
sub
jnp
mov
sub
lret
repnz
and
and
jns
sbb
cmp
pop
push
cmpsl
xor
jne
push
fisubs
xchg
lret
imul
ret
lahf
jno
ficoms
cmp
jmp
ds
std
arpl
and
jg
inc
aad
cld
pop
movsl
mov
xchg
sub
cwtl
xchg
mov
pusha
sub
inc
jle
cmp
test
jle
sub
xlat
pop
push
scas
jmp
or
lret
mov
xor
sbb
repnz
stos
mov
roll
push
mov
mov
rcll
lds
lret
and
icebp
rcrl
scas
push
push
in
es
out
into
das
es
fsts
or
pop
es
dec
mov
pop
shr
pop
inc
pop
inc
add
xor
xchg
add
inc
sbb
sbbb
xor
or
push
jne
add
mov
cmpl
ljmp
icebp
sub
push
ret
fldcw
cltd
fsubs
sub
xchg
inc
aaa
xchg
stos
push
pop
add
mov
dec
test
push
push
push
adc
test
and
test
dec
xchg
push
aas
xchg
push
xor
ja
cmp
jno
sbb
stos
jp
insb
mov
sbb
testl
sub
daa
mov
aaa
loop
fidivrs
inc
stos
jecxz
inc
or
ds
push
sub
or
mov
adc
jns
fisubl
ja
xchg
dec
fistps
stc
ret
jge
adc
pop
jno
sub
push
dec
cmp
scas
cmpsl
int3
cmp
jp
lock
inc
je
jge
outsb
sbb
xchg
inc
inc
mov
rcr
xor
outsl
cmp
jecxz,pn
jno
jb
scas
add
scas
repnz
gs
cmc
popf
add
jecxz
repz
popa
xor
inc
jno
jo
sahf
repnz
jle
fdivl
je
test
add
daa
jge
das
icebp
cmp
cli
cmpsl
push
pop
into
inc
sarl
dec
dec
xchg
and
inc
sar
push
fidivrl
and
push
push
insb
sub
adc
imul
jns
xlat
mov
jns
xor
push
push
xor
nop
lock
ficomps
pop
in
xchg
aas
or
dec
xor
subb
lock
call
fucomi
addr16
fwait
mov
xchg
test
sub
jp
push
jmp
pop
clc
cmp
adc
mov
mov
ljmp
dec
push
faddl
mov
data16
pop
repnz
mov
arpl
add
jge
mov
cmp
jecxz
out
lret
dec
inc
loopne
push
cmp
fdivrl
popa
lock
lcall
lahf
push
or
lcall
and
scas
xor
xor
inc
aas
lods
cmp
aaa
push
push
mov
cmpsb
loop
or
xlat
inc
stos
pop
mov
test
ret
dec
and
mov
in
aaa
out
push
pop
adc
cld
test
adc
jl
clc
iret
aaa
xchg
mov
sbb
mov
mov
lods
dec
orl
push
adc
dec
or
push
and
aad
inc
sbb
and
test
test
fimuls
inc
cmp
fwait
jne
cmp
jo
mov
sub
push
sti
inc
pop
xor
mov
adc
inc
das
xchg
jbe
ja
pop
int
add
sub
push
pop
imul
arpl
fadds
dec
js
lock
call
js
dec
xchg
vprotq
add
fisubs
daa
movsb
loop
mov
xchg
pop
pop
jns
jne
int3
xor
out
leave
lahf
jecxz
xchg
mov
xor
fildll
push
sbb
addr16
sub
add
pop
cmp
rclb
test
mov
pusha
dec
mov
jno
cmp
push
mov
adc
jno
jp
dec
sub
jle
dec
inc
into
xor
mov
sbb
lock
mov
insb
push
or
sbb
xchg
or
adc
inc
mov
mov
xor
fwait
enter
adc
sysret
jo
mov
xchg
pop
xchg
xchg
push
insb
mull
lods
fstl
xor
mov
out
jb
jp
mov
adc
pop
xor
push
insb
sbb
movsl
das
hlt
bound
shl
scas
gs
and
es
sahf
fldt
push
or
cmp
jle
divb
dec
mov
add
imul
clc
jg
bound
dec
xchg
xchg
mov
push
lock
adc
je
test
mov
mov
mov
int
mov
add
sbb
lcall
and
loopne
dec
scas
pushf
mov
pop
insl
jbe
shlb
hlt
stos
rcll
dec
mov
dec
jo
cmpsl
aaa
add
and
push
mov
xchg
mov
jl
add
in
testb
arpl
and
pop
dec
pop
mov
push
popa
cmp
test
jno
dec
and
popa
mov
inc
jns
lods
out
arpl
jmp
int
repnz
pushf
xor
lods
mov
jae
loopne
ss
aam
scas
mov
add
jecxz
cmp
scas
shrb
or
jo
sub
mov
dec
jbe
out
add
js
sub
push
push
stos
and
and
lahf
insb
mov
mov
adc
jo
and
pop
fmul
sti
or
pop
xchg
data16
pop
sub
push
mov
ds
lret
push
push
loopne
adc
add
hlt
mov
mov
aaa
sub
rorb
mov
loop
jno
pop
or
insb
jae
mov
jbe
push
fwait
pop
lds
daa
movsl
es
xor
aam
jns
jbe
pop
xchg
mov
popa
in
les
jecxz
ljmp
rolb
cmc
mov
shr
mov
dec
push
inc
jl
cltd
dec
and
nop
movsb
loopne
sub
xor
dec
popa
int3
cmp
fdivs
pop
leave
adc
jno
lret
dec
enter
and
insl
sub
rcrl
push
xor
sbb
xchg
mulb
or
shrl
push
mov
adc
cwtl
inc
ljmp
int
pop
mov
adc
arpl
test
aad
ret
popf
pusha
js
call
dec
cmp
mov
dec
cmp
push
ficoms
jno
push
jae
pop
ljmp
pop
inc
lods
dec
fiadds
test
xor
sbb
lods
out
add
cmp
test
or
mov
mov
or
push
and
clc
ss
adc
mov
test
mov
ljmp
gs
in
dec
mov
push
and
inc
je
xchg
shlb
add
mov
dec
loopne
test
xor
xchg
push
adc
mov
fisttps
cmp
xor
jo
fistpll
sbb
in
and
mov
hlt
add
cmpsl
push
and
mov
and
fnstsw
jbe
cmp
and
adcb
add
fcom
insl
loop
cli
test
jle
ret
in
xlat
leave
cmp
jne
jl
jecxz
je
dec
dec
sbb
clc
jmp
cmpl
mov
into
xchg
jno
mov
push
xor
icebp
jbe
or
in
adc
call
push
sahf
xchg
test
mov
insb
jae
icebp
sbb
ljmp
xorb
or
test
and
or
sub
stos
adc
cltd
cmpsb
lahf
divb
lock
outsl
xchg
js
sbb
jbe
adc
cmp
mov
outsb
xor
fwait
in
mov
fnstcw
add
sti
popa
sub
outsb
cmp
into
mov
popa
sub
in
sub
fsubs
addr16
pushf
mov
and
cmc
dec
xchg
mov
in
pop
jbe
ret
mov
or
dec
mov
mov
aad
jmp
mov
loope
mov
push
pop
or
cmpsb
mov
fdivs
jnp
adc
insb
aad
lahf
loope
and
sub
ss
fcoms
lret
test
and
push
add
xor
in
call
cmpl
rcrl
rorb
nop
cld
dec
adc
lods
cmc
cmpb
push
ret
inc
cmp
push
mov
adcl
aas
test
lret
push
cmp
mov
loope
jmp
nop
xchg
ret
sbb
lcall
pop
jns
inc
bound
push
les
movsl
adc
mov
popf
sahf
cmp
push
loop
repnz
and
mov
push
lahf
repz
or
jb
mov
xchg
movsl
inc
addr16
xchg
pusha
or
imul
or
fwait
sti
push
mov
cltd
loope
xchg
clc
loope
stos
shrl
xchg
rcll
lret
movb
jno
scas
dec
out
cmpsl
push
mov
in
in
adc
xchg
jl
fidivl
mov
dec
mov
aas
xchg
sub
jno
bound
cli
out
inc
push
xchg
mov
pusha
mov
sbb
jmp
mov
mov
insl
ds
jg
test
inc
data16
movsb
dec
arpl
jp
mov
cld
sbb
lcall
fwait
inc
cmp
lcall
cmp
pop
ljmp
shll
push
jne
aaa
push
roll
fucomip
inc
incb
fs
push
mov
sub
or
xchg
pushf
iret
xor
dec
lock
lods
add
out
push
sbb
int
sub
loop
mov
lock
mov
xor
movsl
inc
lds
add
push
int3
mov
idivl
out
test
add
ja
jle
in
repz
das
or
dec
pop
jle
inc
mov
sbb
xchg
dec
pop
and
inc
nop
jo
mov
pop
adc
mov
fcmovnbe
jge
cwtl
xchg
cltd
dec
push
and
sbb
cmp
cltd
repz
stc
fistpl
mov
inc
adc
mov
data16
adc
cmp
call
jp
lret
push
fadd
mov
out
pop
dec
rorb
pop
or
xchg
xor
icebp
stos
test
mov
lret
push
aaa
cld
jmp
aad
xor
icebp
pop
out
lcall
out
arpl
adc
and
test
lock
cmpsl
or
fdivs
lods
jne
movsb
out
push
outsl
scas
aaa
cmp
das
cmp
inc
mov
mov
add
mov
test
jp
mov
test
gs
popf
cltd
cmpsl
in
addb
popf
nop
cwtl
xlat
mov
popf
scas
cmp
in
cld
cli
mov
mov
data16
push
cmp
jg
fiadds
mov
es
bound
cmp
icebp
sub
add
int3
rorb
adc
ret
mov
ja
mov
lahf
push
sub
mov
push
fnstenv
das
int
ss
or
jne
stc
inc
bound
mov
ljmp
int
mov
fcomi
mov
rcrb
nop
push
mov
mov
lock
hlt
daa
cmp
xchg
icebp
adc
xchg
sub
push
sbb
fcmovb
mov
int
dec
or
jg
xor
mov
xchg
repnz
shl
pop
ficoms
inc
dec
add
cmc
shlb
cmp
stos
aaa
and
push
mov
pop
rclb
add
sub
jbe
in
shrb
push
addb
in
fmulp
cmpsb
scas
ds
sysenter
cmp
jb
outsw
and
out
push
scas
xchg
add
test
out
jl
inc
outsb
test
popa
sub
adc
adc
ficomps
sub
xor
popf
sub
aaa
sub
bound
and
ds
xlat
push
out
outsb
cmp
in
in
add
or
xchg
and
xchg
cli
in
cs
cmpsl
leave
dec
fdivs
xor
shll
push
and
add
enter
xor
iret
push
mov
add
inc
or
mov
cmc
test
cmc
out
xor
jno
and
inc
popf
jp
dec
in
mov
cwtl
jb
pop
and
jmp
fdivs
fisttps
cmp
outsb
xor
repnz
inc
cmp
inc
aam
pop
mov
pop
in
insl
xchg
xlat
adc
cmp
and
mov
add
sbb
inc
push
add
and
cmp
sti
test
inc
add
push
ljmp
cld
aas
or
mov
push
aad
or
add
or
pop
xchg
cmp
gs
mov
push
push
lods
lea
jne
mov
mov
leave
notb
adc
loope
jno
pop
mov
mov
lods
das
mov
and
adc
jmp
addl
stos
sub
jmp
dec
sub
hlt
idivb
repz
mov
outsb
sarl
fnstcw
sub
push
jp
push
rol
sahf
incl
icebp
mov
lock
adc
cmp
jnp
dec
and
push
sarl
mov
mov
test
das
stos
subb
fadds
mov
sbb
mov
push
pop
inc
adc
cmp
in
pop
or
in
pushf
enter
lods
scas
scas
pop
inc
xor
mov
int
iret
pop
cmpsl
mov
xchg
mov
in
cmp
jne
mov
stos
jne
aas
fs
inc
scas
adc
faddp
lea
xchg
push
inc
movsl
or
xchg
cmp
arpl
adc
sub
xor
push
or
fcomps
outsb
mov
push
dec
xchg
aam
pop
xor
adc
jb
sbb
fs
pop
sbb
cmp
das
les
fdivrs
jns
sbb
repz
or
lods
xchg
pop
dec
inc
xchg
jne
dec
push
and
mov
and
push
push
push
repnz
mov
pop
daa
add
mov
inc
bound
push
shlb
push
sub
or
imul
xchg
cmp
lds
add
push
aaa
mov
icebp
jmp
cli
in
popa
mov
xor
ljmp
or
cmpsl
ss
idivb
adc
arpl
add
mov
jno
pop
mov
icebp
and
es
es
adc
jg
jne
pop
cmp
mov
jmp
inc
xor
arpl
lahf
pop
cmp
push
pop
test
cwtl
mov
add
nop
inc
jbe
sub
ret
sub
int
mov
shrd
xchg
xor
jae
mov
xor
out
lea
mov
popf
or
addr16
out
push
cmp
push
adc
add
sbb
cmpsl
cli
int3
dec
aas
adc
out
jnp
mov
fistps
sub
and
lds
dec
bound
sbb
sbb
pop
ret
lret
out
xchg
jecxz
je
aaa
popf
lds
dec
mov
test
or
and
arpl
mov
dec
adc
cmp
cmc
data16
ss
lods
xor
add
mov
cmpsl
or
icebp
shll
adc
inc
sub
imul
jge
aas
jecxz
hlt
clc
loop
mov
frstor
adc
xchg
mov
es
sbbl
xor
cmp
xor
cmc
icebp
inc
xorb
push
ljmp
fs
dec
fisubrl
hlt
subl
push
mov
push
scas
adc
mov
jecxz
pop
pushf
call
push
sub
and
and
xor
aam
call
inc
jbe
and
jge
mov
cmp
or
add
repnz
in
call
cltd
push
dec
les
rcrl
xchg
pop
lock
mov
or
push
jnp
mov
cmp
or
bound
cs
icebp
cltd
out
subl
mov
iret
jb
in
test
add
call
lds
loope
subb
ljmp
iret
repnz
stos
inc
xchg
pop
test
out
loope
dec
cmp
aad
mov
std
sbb
or
mov
add
loop
aas
stc
addr16
add
pop
mov
jnp
lods
xor
and
in
mov
mov
cmpb
loop
int3
xchg
pusha
cld
sub
das
std
movsl
push
sub
popa
clc
add
icebp
and
pop
insb
sub
sub
fstps
mov
cmp
movsb
dec
or
insb
jmp
ja
and
pop
pop
bound
and
pop
lods
xor
pop
movsb
jle
push
jo
stc
xchg
pop
repnz
aas
sub
je
add
mov
xor
push
js
out
stos
jp
mov
rcrl
dec
lods
and
insl
or
fcomp
mov
aaa
xor
inc
clc
sbb
and
mov
test
pop
add
mov
clc
ds
in
test
lods
push
xchg
insb
enter
mov
mov
xchg
push
dec
or
lahf
repnz
add
loope
push
xor
fwait
push
fldl
iret
adc
dec
out
insb
test
cltd
sub
push
push
sub
or
imul
dec
mov
rolb
ficoml
mov
jle
cmc
and
mov
jg
xchg
mov
int
mov
mov
imul
xor
sub
clc
aas
in
inc
mov
mov
les
loope
or
imul
mov
js
mov
dec
hlt
lret
cmp
repz
roll
fstpl
cmp
out
lret
sub
stc
shll
mov
popl
push
or
inc
int
fmull
fwait
mov
fidivl
into
sbb
in
fiaddl
fs
push
mov
jge
xlat
gs
lods
mov
inc
sarb
mov
xor
dec
orb
in
inc
sub
rcr
jl
aam
add
and
and
sbb
add
dec
pop
push
sbb
dec
rcll
add
clc
pop
out
or
dec
lods
cmpsb
repz
xor
mov
mull
dec
push
out
xchg
in
test
test
ja
nop
mov
mov
popa
les
into
add
pop
pop
mov
mov
popa
sahf
xchg
enter
push
aas
rcrb
sbbl
add
or
repz
scas
stc
mov
cwtl
cmp
mov
inc
jmp
inc
adc
insl
out
leave
xor
push
xchg
outsb
outsl
xchg
or
sub
add
adc
push
mov
cmp
iret
and
push
ret
add
sbb
push
cmp
sbb
push
shrl
orl
dec
fnsave
cmpsb
and
cli
int
inc
cmp
out
loopne
jmp
ret
subb
int
mov
nop
push
jmp
icebp
jbe
inc
jae
call
fs
push
inc
dec
jge
out
aam
adc
sub
fistpll
into
pop
es
inc
test
lret
test
cmpl
aam
scas
je
sbb
cmp
jmp
sahf
dec
leave
pop
inc
dec
into
cmp
sahf
outsl
loope
jns
pop
pop
jl
sub
dec
out
dec
inc
xor
cmp
push
xor
xor
fwait
pop
jbe
pop
lret
fnsave
or
cs
cli
adc
sbb
fcomip
sub
rolb
popf
xchg
mov
inc
movsb
xor
and
shll
out
int3
inc
sahf
rcrl
mov
test
nop
pop
mov
xor
push
sub
int3
pop
dec
jle
int3
jnp
mov
adcb
sub
jo
and
sar
cmp
nop
mov
jecxz
add
pop
leave
sub
jmp
aad
mov
repnz
insl
insl
xor
mov
cmpsl
inc
ret
stos
sbb
cmpl
movsl
mov
sbb
cmp
inc
dec
jecxz
mov
and
dec
aas
ret
out
popf
jb
cs
and
xchg
cmp
and
and
int3
popf
in
or
mov
aam
out
bnd
addl
push
xchg
xchg
ret
sub
and
ljmp
dec
imul
jle
sbb
or
xor
in
push
rorl
lods
lds
daa
scas
and
mov
js
dec
mov
iret
test
stc
outsb
pop
cmpsl
pushf
mov
mov
mov
add
or
xlat
addl
out
subl
mov
lea
stc
movsb
xlat
jl
mov
mov
sbbl
test
jmp
out
xchg
js
sub
xor
mov
ss
and
stos
pushf
cmpsb
mov
cwtl
rcrb
mov
aaa
insb
inc
inc
int
inc
jg
and
data16
sbb
fcmovnbe
ds
mov
lods
jne
lea
dec
push
mov
xchg
into
push
mov
outsb
xor
fadd
cmp
dec
cmc
jp
pop
push
dec
sub
arpl
mov
sarl
push
jae
cmp
daa
es
mov
xchg
cmc
stc
mov
jne
mov
cmp
pop
jp
jl
pop
xor
not
cwtl
icebp
mov
xor
clc
inc
inc
add
or
cmpsl
xorb
int3
jg
fwait
arpl
pop
pushf
sbb
cmc
xchg
shll
pop
test
sub
xchg
mov
add
loope
outsl
ja
xchg
push
pusha
pusha
mov
fnsave
lds
mov
ret
pop
mov
jmp
das
mov
mov
fbstp
xor
mov
pop
jle
repnz
xor
imul
pop
sahf
mov
jno
push
popa
mov
adc
or
pop
daa
popa
sbb
out
pushf
or
imul
addr16
out
lea
cwtl
in
add
jp
out
js
cld
testb
xchg
jb
je
and
in
popa
push
iret
fstpt
hlt
rcrb
pushf
fidivrl
cs
mull
mov
mov
out
lds
push
lea
or
pop
scas
push
stos
sysexit
push
xchg
sbb
cmovns
and
enter
mov
sub
std
jmp
xor
xchg
mov
les
xchg
inc
fcomip
inc
ds
arpl
adc
pop
fnstsw
stos
gs
or
add
cmp
mov
mov
lods
sub
pop
int3
add
scas
push
fcoms
aam
pop
mov
jg
xorl
mov
mov
inc
jb
sahf
sub
aas
inc
rolb
cltd
mov
iret
mov
imul
adc
sbb
xor
mov
stos
scas
jl
pop
loop
icebp
jle
inc
mov
gs
push
push
or
hlt
sti
orl
xor
push
fwait
dec
mov
push
jecxz
or
mov
mov
jecxz
jmp
xchg
cmp
fstpt
pusha
mov
mov
shl
dec
in
sbb
xor
lods
mov
xor
mov
lods
xacquire
inc
sbb
inc
iret
or
ja
inc
and
imul
mov
add
arpl
pop
push
in
outsb
push
pop
loop
gs
mov
dec
cmp
cmc
or
and
mov
xor
cmp
es
inc
out
or
in
fistpll
leave
test
lock
xor
inc
add
sarb
push
and
imul
pop
fsubrs
dec
and
sbb
inc
mov
push
push
les
xor
out
repnz
xlat
leave
aad
imul
movsb
andb
jae
clc
out
and
aad
test
mov
adc
push
scas
enter
cld
cmpsl
imull
xlat
dec
outsl
mov
int3
sbb
add
pusha
cmpsl
mov
cmpb
xchg
negb
arpl
push
xchg
aad
jmp
sarl
or
fisttpl
loope
aas
cmp
aad
loop
in
arpl
sbb
test
dec
aam
fstps
sbb
pop
je
fs
push
mov
popf
and
push
rcr
and
test
cld
add
inc
popl
clc
fwait
push
adc
sahf
addr16
jbe
push
into
jns
movq
mov
xchg
push
neg
or
push
xorb
xchg
cltd
insb
cmc
mov
jecxz
mov
cmpl
loop
sub
test
mov
cld
or
adc
notb
js
xlat
das
ret
xchg
ja
cmc
push
add
add
out
push
scas
cmovo
ret
scas
and
dec
mov
lods
xchg
lahf
push
push
cld
push
mov
add
push
inc
and
out
sbb
jae
sbb
bound
ficoms
loope
sub
sbb
lock
arpl
hlt
mov
aam
sub
add
sbbb
sbb
fbld
dec
mov
push
pop
loope
mov
fwait
jbe
jbe
mov
and
xchg
sbb
cmp
js
xchg
add
or
lods
shrb
fimuls
inc
mov
insl
lcall
out
push
lret
push
movsb
mov
dec
jge
push
and
movsl
js
mov
adc
cmp
nop
sub
lahf
xor
repz
scas
icebp
adc
mov
push
jne
dec
adc
cmp
xchg
sbb
or
push
cltd
jo
mov
lods
mov
jecxz
addl
xchg
fld
mov
pop
and
fisttpll
repnz
je
push
inc
stos
pop
inc
adc
leave
sbb
and
sbb
dec
adc
insl
mov
dec
into
mov
and
jmp
out
jns
cmp
jo
movsl
les
outsb
sbb
roll
das
scas
popl
xchg
out
addr16
and
xor
pop
mov
test
jl
dec
mov
push
fistpll
imul
frstor
pop
mov
push
mov
in
adc
xchg
xchg
into
jns
pop
arpl
push
ret
shl
mov
jne
fwait
jae
cmp
xchg
lea
out
sbb
je
mov
int3
jl
jnp
push
dec
fisttpl
mov
pop
cmpsb
test
adc
rorl
stos
add
cld
sub
jo
jle
push
pop
test
sbb
jg
out
push
mov
mov
push
jno
inc
mov
ljmp
and
mov
xor
pop
sbb
int
ret
dec
in
push
mov
rclb
inc
movsl
adcb
sub
bound
mov
mov
arpl
aaa
jo
lds
push
cmc
rcll
adc
clc
out
flds
mov
push
inc
pop
leave
icebp
into
sub
jp
inc
push
push
add
cmc
dec
cmp
push
cmp
test
pop
push
jmp
xchg
decb
mov
xchg
sbb
push
cmp
xchg
es
int
pusha
mov
pop
or
sub
pop
jge
in
push
mov
cs
push
sbb
les
pushf
sub
and
sarb
mulb
mov
test
fdivr
stc
add
pop
sub
xlat
mov
add
jge
outsl
pop
movsb
and
sbb
mov
ret
inc
and
fnstsw
popa
adc
inc
fcoms
cli
and
or
mov
mov
adc
movsb
insb
aad
test
cmc
push
cmp
pop
in
mov
mov
icebp
addl
jne
mov
dec
xchg
lcall
push
cmp
int
in
arpl
cld
sub
xor
imul
add
or
inc
xlat
sbb
call
mov
mov
lahf
lret
or
add
xchg
ret
xor
mov
sub
inc
push
add
repz
and
fsts
mov
push
out
mov
es
test
nop
fimull
aaa
or
pop
cs
xlat
call
xchg
sti
scas
jl
push
mov
enter
inc
or
xor
xor
sbb
xor
or
fcmovnbe
std
in
fcomps
pusha
jno
xor
icebp
sbb
pop
jmp
pop
mov
pop
ss
and
jmp
or
test
js
xor
xor
or
sti
adc
jg
test
mov
ja
mov
pushf
or
sbb
sbb
jno
xchg
adcw
mov
push
repz
data16
fwait
xchg
andl
nop
jae
add
lds
push
call
mov
or
sbb
fists
dec
stos
sub
aad
jo
ljmp
xor
int
cmp
ror
aaa
sub
sbb
pop
iret
xorb
mov
pop
add
pop
dec
push
clc
lahf
inc
je
xor
aas
pop
dec
and
les
or
mov
aas
call
decl
hlt
jmp
movsl
lcall
mov
icebp
sub
adc
popl
imul
pop
je
jbe
test
mov
mov
lahf
ss
stos
sbb
cmpsl
pop
test
mov
pop
xchg
adc
int3
add
pop
ret
mov
ja
iret
mov
ret
into
mov
imul
push
adc
and
push
call
mov
sbb
push
pop
or
call
push
sub
shl
dec
sbb
or
add
push
sbb
repz
je
pushf
xchg
sbb
shll
scas
adc
stc
adc
inc
sbb
mov
test
fadd
loope
push
xchg
int3
add
stos
fisubs
mov
pop
bound
outsl
and
lods
popa
dec
xchg
mov
adc
or
out
sub
scas
push
aaa
or
in
out
loop
fiaddl
aaa
js
push
imul
jne
pop
cmpsb
push
jmp
or
pusha
icebp
in
sbb
push
scas
decb
push
sti
andl
sbb
push
jle
push
repnz
in
mov
mov
fs
hlt
sbb
out
adc
mov
sub
out
insb
mov
cwtl
mov
insb
mov
test
nop
push
xchg
je
inc
mov
jecxz
cmpb
adc
movsb
xchg
sbb
mov
xchg
cwtl
out
js
xchg
or
xor
and
sub
jae
in
inc
lcall
loopne
mov
mov
mov
mov
outsl
std
xchg
aad
pop
popa
sbb
inc
sub
cmp
cmp
fisttps
fiaddl
jmp
sub
out
testb
aas
push
xchg
cmp
imul
fisttpl
adc
mov
inc
and
das
clc
mov
insb
jl
fiadds
imul
push
jmp
xor
repz
popa
lock
ror
mov
imul
xor
aas
jl
movsb
sahf
add
lret
mov
mov
fisubrl
or
in
sbb
mov
les
out
fstpt
sbbb
mov
into
hlt
jmp
fidivl
stos
pop
sub
fs
pop
fsubrl
xchg
rcr
push
test
scas
dec
mov
outsl
mov
mov
adc
sbb
adc
cmpl
pushf
jb
fldln2
xorb
pop
aad
adcb
inc
les
cmc
pop
push
push
xor
mov
sbb
and
test
int
pop
fs
jp
js
hlt
adc
or
int
mov
cld
mov
mov
push
cmp
insl
mov
arpl
imul
mov
add
aad
cmpsl
jmp
sub
popf
out
fimuls
xchg
shrl
popa
shr
jmp
pop
xchg
mov
int
jbe
pop
in
push
lea
stos
pushf
rorl
scas
jno
rol
das
jb
movsb
mov
pop
mov
bound
inc
sbb
jg
pop
push
nop
adc
inc
pusha
cld
dec
inc
mov
and
xlat
push
out
adc
mov
pushf
lcall
stos
jle
lock
es
jns
mov
aas
jno
setns
jg
inc
pop
sub
mov
in
shr
push
lods
int3
pop
and
leave
je
icebp
fadds
xor
mov
jmp
sbb
jnp
xor
mov
or
into
loop
mov
jb
pushl
xor
lods
sbbb
aas
push
ret
mov
xchg
mov
push
scas
sub
in
add
or
pop
push
push
data16
gs
cmp
cmp
mov
js
cmpl
mov
popf
out
cwtl
mov
jnp
mov
and
cli
inc
out
repnz
jecxz
mov
enter
pop
call
mov
imull
and
inc
pop
mov
cs
lret
sbb
push
hlt
inc
mov
outsl
cmc
xchg
cmp
fcoml
bound
push
stos
mov
jo
jle
push
nop
mov
rcrl
aad
mov
sbb
push
loopne
jb
xchg
aas
loop
test
aam
es
cld
mov
pop
lret
rolb
mov
scas
inc
in
lahf
fwait
lea
jl
or
adc
aad
int
lods
inc
jb
stos
bound
roll
jle
xchg
jno
adc
sub
or
je
arpl
aam
jns
add
mov
divl
ja
mov
outsl
cli
mov
insb
ljmp
sub
adc
bound
jae
clc
mov
jno
adc
mov
clc
int3
repz
jge
std
pop
int3
mov
mov
fsubrl
dec
jle
inc
mov
mov
arpl
adc
movsl
loope
loopne
sbb
push
into
shlb
and
fnstsw
xchg
int3
loopne
inc
pop
daa
les
or
cmpsl
cmp
stc
cs
mov
in
popf
lcall
push
mov
enter
loop
pop
loopne
xchg
pusha
jg
aaa
sbb
cmp
lahf
cld
inc
add
inc
sahf
outsb
mov
inc
inc
push
adc
cmc
lock
ret
jle
dec
xor
and
pushf
mov
in
fidivl
jmp
dec
cmp
in
mov
adc
sahf
mov
std
pop
imul
gs
pop
xor
adc
mov
sub
test
cmp
leave
je
inc
sub
cmpsb
jae
nop
xor
and
test
mov
sbb
rcl
shufps
mov
into
push
or
repnz
pop
dec
cmpl
loope
mov
sbb
cmp
jnp
cltd
mov
in
pop
push
sahf
pop
scas
dec
aas
arpl
xchg
sbb
nop
xchg
fbld
mov
xor
add
sub
cmpsl
mov
xchg
mov
repz
inc
das
popf
or
out
mov
sarb
in
lcall
arpl
sbb
rol
aam
into
and
shlb
mov
pusha
fcoml
fsubs
push
in
cmc
mulb
test
sahf
insl
sub
sbb
jmp
sub
push
out
leave
xlat
jbe
cmpsb
jmp
mov
cmpsl
addb
xlat
or
pusha
leave
lret
xor
cmp
out
xor
pop
fisubl
push
loop
jb
in
mov
mov
in
nop
shll
in
in
scas
inc
add
stos
stc
push
jl
or
adc
cmp
enter
daa
jno
mov
fists
nop
jg
shr
push
adc
dec
xchg
imulb
inc
inc
int3
cmp
xchg
ljmp
gs
pop
inc
sbb
je
sbb
cmp
cmc
nop
clc
push
mov
xchg
ret
js
or
rorb
into
outsl
repnz
xchg
fsts
add
cmp
add
xchg
fldenv
cmp
cltd
insl
leave
add
push
dec
stos
repnz
test
dec
xchg
pop
jne
aam
ret
sarl
subl
fadd
xchg
in
mov
aad
int
pop
jo
ret
mov
or
repnz
insb
and
or
xchg
and
pop
dec
stos
test
lods
mov
jae
hlt
cltd
xor
pop
aad
inc
pop
std
mov
dec
sahf
cmp
cld
adc
push
mov
addr16
push
dec
sbb
insl
sub
adc
or
dec
gs
lcall
pop
push
std
or
inc
aas
and
adc
push
lds
push
jmp
int
shlb
or
lock
xchg
aam
pop
sbb
pop
mov
cmp
fldcw
pop
les
bound
in
sbb
add
xlat
pop
aam
jle
cmp
xor
scas
ret
or
shrl
pop
adc
xor
cmp
lods
test
mov
sbb
inc
out
xor
jmp
movsb
std
and
testb
xor
xchg
notl
aaa
mov
data16
scas
jp
push
outsb
leave
sbb
inc
push
xchg
test
mov
test
fs
insb
loope
mov
test
and
lret
add
fwait
lods
mov
lahf
loopne
loopne
aas
mov
loopne
shrl
jae
in
cmc
xchg
arpl
fs
leave
push
push
cmp
add
popf
jae
adc
loope
push
push
clc
dec
add
cmc
sbb
fdivs
cltd
or
int
lods
leave
mov
xchg
flds
sbb
lcall
les
imul
popw
imulb
and
mov
testl
push
cmp
pop
mov
adc
push
jg
and
xchg
xlat
mov
sub
mov
sbb
push
lods
fnstenv
cli
je
push
pop
push
cmp
mov
inc
outsb
sarb
mov
pushf
or
xor
dec
push
shr
ret
push
mov
cs
mov
or
addr16
mov
sub
jmp
or
pop
popf
sbb
clc
cmc
out
out
mov
jp
cs
lods
dec
lret
jno
jge
mov
add
call
or
insb
or
test
loop
push
mov
xchg
jno
out
bound
nop
scas
ret
inc
iret
movsl
gs
dec
add
mov
jae
popa
adc
add
js
mov
hlt
xor
nop
mov
mov
add
leave
ljmp
push
xor
rolb
or
repnz
loope
adc
cli
cmpsl
xlat
push
xchg
cmp
mov
jne
xchg
sbb
addb
pop
bound
adc
addb
lods
decb
stos
xchg
popa
leave
dec
ja
test
bound
shll
lret
adc
xchg
mov
pop
daa
cmp
addr16
sub
adc
out
inc
xor
jo
repz
out
cmp
leave
mov
lahf
push
scas
cmp
das
ds
clc
aaa
xchg
sub
sbb
add
inc
sbb
add
xchg
and
ljmp
aam
loopne
hlt
hlt
aam
xchg
sbb
jae
inc
outsl
push
jo
push
sbb
sbb
cld
xchg
fistpl
pushf
imul
xor
into
lods
es
test
adc
push
out
aaa
cmpsl
test
pop
mov
ja
daa
jge
es
fwait
mov
cmp
jg
test
fdivrs
jns
add
xor
adc
cmp
adc
aaa
js
push
call
pop
lds
mov
cs
and
test
decb
rcll
call
cmpsl
lcall
push
pop
inc
push
or
cmp
repz
mov
mov
jp
std
push
sbb
in
gs
pushf
inc
xor
aas
pop
adc
test
dec
test
inc
xor
push
xchg
xchg
int
ficoms
gs
and
xor
add
push
pop
outsl
scas
pop
out
mov
add
std
or
add
cmp
loopne
daa
out
roll
cmp
cs
inc
aad
push
mov
pop
xor
shll
xor
sbb
cltd
mov
das
jae
rorl
jmp
push
inc
pushf
out
pop
push
cld
xor
cltd
dec
loope
cwtl
mov
dec
andl
and
mov
fs
cmp
jne
data16
stc
adc
orb
inc
xchg
ja
scas
bsr
dec
jne
inc
add
scas
fsts
sbbb
adc
push
mov
stos
or
xchg
add
shl
jle
ljmp
test
cld
cmpsl
lea
add
pop
lds
mov
int3
test
xchg
pop
and
jb
or
loop
lods
mov
push
imul
lds
ret
sbb
cmc
jo
push
cmp
aad
lods
cmp
gs
jecxz
cmpsb
sub
popa
sub
pop
popf
jp
pop
sub
packssdw
imul
jnp
or
mov
loop
sub
xchg
push
pop
les
dec
mov
loopne
icebp
lret
aaa
inc
lods
fsubr
pop
cmp
out
orb
cld
in
cmp
push
test
push
movsl
call
and
dec
mov
movl
data16
push
std
sbb
push
pop
mov
and
int
testb
jecxz
fimuls
jg
and
gs
movsl
jl
stos
pop
adc
mov
sbb
jne
push
sbb
or
inc
imul
fadds
gs
and
mov
and
jle
and
into
daa
mov
xlat
sub
fisubs
ljmp
push
lds
lea
mov
cmp
cmp
or
push
mov
incl
xor
in
xchg
sub
cwtl
inc
pop
mov
and
mov
mov
xchg
push
in
sub
mov
xchg
repnz
loopne
cmp
xchg
lock
rorl
pop
and
cmpsl
adcl
lds
fmull
xorb
int3
std
std
mov
jo
rcr
cltd
shll
pop
repz
in
lods
push
push
or
add
adc
mov
xor
in
push
mov
in
xlat
insb
roll
iret
xchg
push
movsb
inc
mov
movsb
daa
stos
mov
or
mov
xchg
pop
jb
pop
out
daa
bound
std
fs
pop
stos
xchg
fwait
xchg
test
in
js
inc
xchg
or
stc
dec
mov
pop
mov
xchg
scas
lcall
mov
cmp
mov
cltd
push
sbb
imul
fcmovnb
cmp
add
in
mov
std
push
mov
xchg
ret
mov
out
bound
sbb
push
push
pop
inc
addl
push
fcomip
sbb
lcall
rcll
pop
gs
movsl
fstl
js
xor
bound
es
pop
jo
xchg
push
repz
roll
push
mov
xor
bnd
fwait
loope
pop
insb
jnp
mov
mov
in
push
int3
cwtl
xchg
pushf
mov
dec
mov
popa
fisubs
fstps
mov
mov
mov
sti
adc
or
xchg
lret
cmc
lods
ljmp
mov
xchg
dec
lock
fwait
xchg
int
sub
fisttpl
push
cmc
push
add
clc
dec
mov
pop
push
leave
je
xchg
aaa
lret
repz
sahf
add
mov
adc
jp
sub
and
lahf
xchg
xchg
adc
ljmp
shll
scas
out
sahf
jo
push
inc
jne
sub
mov
dec
cltd
out
push
lods
adc
call
push
xor
faddl
jnp
add
sbb
jle
pop
jl
ret
lahf
push
roll
imull
pop
xchg
jb
ljmp
jecxz
adc
sahf
insl
ljmp
rcrb
stc
lods
enter
xor
pop
add
dec
dec
mov
inc
pop
or
subl
add
sbb
in
inc
mov
in
in
ficoms
mov
test
jno
inc
push
dec
cld
std
xchg
or
push
aam
sub
dec
mov
mov
inc
test
insl
sahf
sbb
roll
xchg
sbb
mov
xlat
jmp
fisttpll
mov
in
pop
lcall
mov
aas
scas
mov
addr16
aas
adc
ljmp
testl
xor
mov
mov
pop
mov
sub
xor
add
xlat
mov
push
les
sti
and
mov
xchg
sbb
int
jp
lahf
pop
cmpsl
mov
test
add
inc
xchg
jo
leave
shl
jo
adcb
and
inc
fninit
loope
mov
mov
mov
in
fstps
pushf
jo
into
inc
mov
pushf
out
add
repz
mov
sub
fsubrs
rcll
adc
xchg
add
pop
push
push
test
mov
sbb
out
sub
or
adc
aam
fldt
and
pop
mov
xchg
lret
cmpsb
jbe
aam
js
pop
push
lret
or
cli
test
mov
shrb
arpl
cmpsb
push
push
push
mov
push
repz
or
or
pop
outsb
add
int3
mov
sub
mov
and
add
notl
rorl
add
andl
iret
fdivrs
ja
in
pop
inc
xchg
mov
pop
push
sbb
test
in
enter
push
cmc
mov
or
jae
mov
mov
mov
sbb
adc
adc
js
add
sbb
aaa
pop
mov
xlat
dec
adcl
adc
cltd
das
mov
adc
cmp
cmp
mov
cmp
fistpll
pop
pusha
jg
cmc
cmc
sbb
aas
out
inc
xor
es
test
inc
inc
shll
int3
cltd
arpl
stos
loope
bound
xchg
pop
push
test
outsb
cmp
cmpsl
testl
out
cltd
gs
icebp
jnp
test
or
sub
iret
outsl
lahf
in
rorl
aam
mov
fcomi
enter
call
stos
cmc
sbbb
add
sub
mov
rcrl
call
loopne
sub
xchg
pop
jmp
fidivrs
stos
aaa
adc
out
pop
sub
xchg
daa
les
fwait
push
adc
test
iret
dec
xor
pop
mov
pop
or
aam
push
mov
and
mov
jg
jge
push
mov
sbb
mov
xchg
and
xor
mov
inc
ja
bswap
pushf
jno
pop
xor
insb
pop
das
inc
or
rol
out
jo
lahf
imul
in
testb
dec
movsb
arpl
mov
cld
xor
das
xchg
push
mov
shlb
clc
sahf
jp
adc
out
dec
movsl
iret
sbb
add
and
into
fisubs
ret
cmp
clc
or
arpl
and
xlat
pop
lds
dec
sti
add
add
and
mov
scas
bound
mov
ficoml
mov
xor
dec
pushf
inc
mov
incb
jecxz
adc
mov
ret
inc
xchg
gs
es
sbb
dec
dec
mov
insb
je
jb
mov
pop
mov
or
mov
mov
sbb
les
mov
pop
jge
jae
repnz
jecxz
stc
xchg
jne
cmpsb
repz
into
pop
cwtl
ret
inc
fnstcw
aaa
dec
jo
sbb
pop
cmp
jno
pop
and
xor
xchg
repz
cmp
pushw
jmp
jle
imul
pop
dec
ror
ficoml
inc
sub
stos
push
push
lock
add
jo
hlt
and
xor
ss
sbb
fcoms
inc
test
add
pop
ret
sbb
ja
xor
rcl
and
aad
push
jle
push
dec
aaa
or
xchg
les
mov
scas
popf
inc
stos
sub
cli
rcrl
std
shrl
das
xor
hlt
pop
into
ss
sub
inc
cmc
pop
clc
les
gs
push
adc
nop
mov
push
mov
int3
cmp
nop
mov
pop
adc
fdiv
push
ja
or
outsb
add
pop
outsb
mov
fmuls
aaa
imul
movsl
add
cmp
enter
aaa
je
shl
jno
je
sti
push
jecxz
aam
mov
mov
repnz
add
adc
and
clc
xchg
push
pop
inc
add
sbb
pop
adc
sti
inc
sbb
cmpsb
scas
data16
ss
cs
sahf
pop
sahf
inc
leave
pop
ss
jo
jecxz
push
mov
push
rolb
fistl
shll
xor
fwait
dec
das
ret
xchg
add
xchg
pop
fwait
ljmp
push
cmp
imul
cs
test
pop
test
in
cmp
mov
jp
or
sbb
add
xchg
test
pop
xor
adc
hlt
repz
xor
lahf
into
sub
scas
adc
jge
dec
sub
scas
sbb
jae
fadds
outsb
pop
jp
dec
or
inc
add
out
sbb
xchg
xchg
shrd
clc
cmp
push
xchg
bound
scas
push
cmpb
lea
push
xchg
and
shr
lods
imulb
mov
and
mov
rep
add
fs
lock
xor
stc
test
les
jae
add
xchg
sbbb
jne
and
sti
into
es
adc
inc
iret
roll
sbb
ss
inc
rorl
xchg
sbb
pop
loope
xor
cmp
push
mov
fwait
adc
add
in
cmp
sbb
xchg
sub
insb
in
fld
and
mov
jecxz
mov
leave
cltd
mov
or
stos
xchg
jl
sub
mov
scas
test
shlb
lret
add
clc
ret
pop
cmp
dec
cmp
shl
xchg
subb
pop
xchg
out
jae
xor
mov
jl
addl
pop
xchg
adc
jl
mov
sbb
out
mov
lret
inc
mov
pop
jmp
jp
stc
mov
js
cs
js
in
daa
icebp
ret
adc
sbb
jl
mov
mov
insb
mov
cmp
stos
xor
pop
mov
and
cmp
pop
push
lcall
jmp
jmp
pop
sbb
mov
ja
bound
stos
mov
dec
scas
clc
rdmsr
xor
add
lcall
nop
in
xchg
jmp
stc
enter
push
outsb
inc
dec
aaa
sbbb
icebp
jo
pop
push
and
jge
cmc
cld
mov
mov
cmp
xchg
insl
lock
pop
in
xor
adc
outsb
aam
pop
sub
cmpsb
xchg
call
push
jae
lret
fisubs
cli
ficomps
mov
xor
xor
stc
cmpsb
movsb
call
cmp
movsl
or
pop
add
aaa
insb
and
pop
sub
mov
movsl
addl
adc
or
fs
sub
imul
mov
aam
mov
push
mov
es
js
mov
xchg
addr16
add
sbb
jnp
scas
gs
test
or
das
xor
push
push
mov
mov
loopne
xchg
psadbw
adc
mov
ss
mov
xor
clc
stos
nop
and
stos
push
call
rorl
addr16
fists
mov
aad
popa
loop
cmp
cmpsl
shll
jle
out
push
mov
pop
and
mov
cmp
dec
sti
xor
and
xchg
push
std
inc
sub
adc
add
outsb
mov
mov
popf
xor
dec
mov
data16
jnp
ljmp
fwait
pop
cmpsb
or
xchg
or
bound
xchg
das
mov
mov
repz
add
adc
fdivrs
cmp
adc
jnp
out
adc
sub
mov
test
mov
and
add
rorl
jmp
jp
in
push
outsl
insb
sti
mov
daa
popf
add
fadd
mov
dec
test
push
jp
loope
xchg
ljmp
repz
rcll
push
movsl
add
sbb
jle
ljmp
mov
imul
xor
lock
rcr
xchg
mul
sbb
or
pusha
mov
sti
stos
popl
xchg
push
mov
or
les
cmp
sbb
fldenv
inc
mov
xor
jae
dec
js
pusha
pop
jbe
inc
out
js
or
bound
dec
jmp
movsl
and
sub
cmp
pop
movsl
lea
aas
fxch
test
sbb
adc
push
out
shlb
fsubrl
mov
nop
push
push
sbb
mov
pop
es
paddusw
and
int
mov
jmp
inc
lcall
in
add
rorl
shll
mov
sub
iret
and
cmp
fsubp
pop
add
pcmpeqb
repnz
push
addr16
mov
push
jmp
pushf
mov
push
add
das
mov
enter
adc
test
shlb
mov
and
or
in
cmp
or
and
mov
scas
xor
stos
push
inc
mov
insb
xchg
and
lds
inc
aad
movsb
inc
mov
rorb
insl
jl
jns
pop
and
cwtl
mov
dec
mov
inc
push
push
scas
fisttpll
push
dec
or
add
push
cs
and
xor
add
pushf
imul
adc
mov
lret
sub
movsl
ficoms
jo
jl
inc
add
mov
fcompl
adc
pop
jne
sub
sahf
jmp
xor
sarl
mov
xchg
jecxz
mov
popa
outsl
fstl
es
and
add
add
add
mov
in
sub
lods
and
mov
dec
mov
or
sub
pop
stos
push
jmp
lcall
push
jle
or
shr
dec
pop
mov
imul
imul
add
pop
mov
and
scas
mov
add
fadd
xchg
inc
sub
push
out
and
pop
dec
cli
fbstp
loope
idiv
mov
cwtl
lea
xchg
and
stos
sbb
and
push
sbb
mov
fwait
adc
or
pop
cmp
movb
sti
mov
pop
pop
or
inc
mov
xchg
sbb
leave
mov
push
cmpsb
add
or
jbe
leave
loop
in
inc
pop
jo
inc
cld
test
dec
pop
jp
rcll
dec
out
push
sbb
ja
js
cmp
jno
cld
int
out
lret
sbb
push
ss
mov
ja
ret
inc
clc
inc
lret
aaa
int3
int
das
dec
jnp
push
jmp
sbb
sbb
push
xor
add
dec
inc
les
and
push
mov
cmp
pop
or
push
fsubrl
mov
je
or
mov
xlat
jne
cmpsb
pop
and
sti
xor
adc
stos
push
xchg
lret
dec
loopne
aad
cmp
mov
and
mov
push
sar
jne
int3
fldenv
jbe
insb
ret
daa
xor
mov
fildll
push
popf
jmp
adc
into
imul
shll
xor
jecxz
mov
pop
shlb
lods
mov
out
repz
jae
cltd
pop
imul
sbb
xchg
or
into
adc
hlt
stos
mov
dec
and
sbb
scas
in
xchg
adc
stos
push
and
leave
cmp
sbb
call
and
loopne
stos
cmpsl
mov
jo
dec
xchg
mov
xchg
dec
bound
xor
subl
jae
fsubl
addb
pop
into
add
or
movsl
lea
nop
push
push
popa
es
lret
push
fstpl
adc
or
xlat
insb
add
in
enter
fwait
cmp
lds
or
pop
call
jmp
sti
push
xor
out
repnz
push
mov
call
call
dec
lahf
inc
fcompl
xchg
insl
out
stc
je
pop
or
add
mov
and
and
scas
dec
jle
ja
mov
dec
or
idivb
loope
outsl
ds
mov
adc
imul
add
inc
pushf
dec
pop
xchg
nop
ficoml
es
or
and
fcompl
dec
out
mov
pop
movsl
sub
out
mov
mov
push
gs
xchg
scas
lods
pop
sbb
inc
pop
mov
roll
push
jo
cmpsl
pop
pop
lcall
and
scas
push
and
fimull
call
mov
mov
testb
test
test
ficoml
inc
xor
push
lret
pop
jmp
lret
sbb
addr16
cs
cmp
mov
ljmp
push
lret
mov
or
sbb
xor
sbb
sub
add
mov
fidivrs
push
daa
inc
outsl
into
push
sub
xor
je
aaa
mov
ja
add
into
popf
js
xchg
lahf
inc
dec
adc
fs
lret
inc
push
mov
jg
cmpsl
hlt
lock
cmc
push
lods
stos
int
fsubr
aad
mov
insl
ljmp
in
lret
fwait
push
int3
clc
pop
mov
pop
jae
or
or
pusha
pop
inc
and
xchg
arpl
pusha
icebp
cld
inc
cld
adc
leave
push
push
test
xor
cmc
push
cmpsl
cmpsb
call
lea
dec
lret
movsb
int
xor
pop
add
movsl
xchg
ret
popf
rolb
roll
loop
ss
shll
int
inc
sahf
out
mulb
xor
ffree
fdiv
ret
lock
test
pusha
pushf
push
xchg
mov
cmp
pop
in
or
imul
fisubrl
dec
or
daa
insb
push
lret
jns
je
ljmp
pop
inc
outsb
mov
arpl
mov
pop
push
jl
sti
imull
popf
and
cs
xchg
fnstenv
jne
cld
dec
sbb
fcoml
std
test
shr
push
fiadds
mov
add
jmp
push
rcrl
sbb
aas
adc
xchg
xchg
hlt
jp
cmp
cmp
std
aaa
out
ret
loope
cmp
or
lahf
sbb
pop
or
fs
fs
in
subb
jnp
push
cs
je
loop
ret
mov
or
bound
adc
push
cwtl
insb
ljmp
inc
add
stc
dec
jno
push
or
sub
and
leave
cmp
fsubrs
push
dec
push
mov
push
psadbw
loop
push
and
cmpsl
sub
add
ret
call
jecxz
pop
and
jecxz
inc
xor
jne
and
nop
dec
xchg
enter
jns
jns
sbb
out
jmp
mov
mov
add
fisttpl
loop
cwtl
jb
dec
shlb
bound
push
pushf
push
or
push
jbe
outsb
mov
pop
mov
cli
leave
xor
out
adcl
sub
xor
inc
lock
push
push
fisubs
xor
mov
shll
mov
xor
std
push
aam
xchg
sub
rcrb
mov
add
push
movb
lds
fdivl
std
pop
cli
cmpsb
push
enter
pop
mov
xor
arpl
shll
cld
adc
push
pop
inc
fiaddl
cmp
inc
mov
jle
dec
inc
mov
ss
inc
mov
imulb
xor
lods
jge
mov
call
adc
hlt
test
scas
movsl
rclb
fwait
or
out
faddl
icebp
shrb
inc
xlat
les
or
insl
or
and
inc
pop
push
pop
outsl
shll
or
test
insl
arpl
lods
cs
xchg
stos
scas
cmp
xchg
out
sahf
aas
jnp
outsl
je
pop
cmp
sbb
outsl
out
lahf
loop
jmp
xlat
movsb
add
adc
fdivl
cmp
sbb
xchg
xor
pop
loope
add
pop
fldl
icebp
inc
popf
xor
imul
cld
push
adc
in
push
cmpsl
rorb
xor
jb
stc
lods
stos
decl
aaa
outsl
pop
out
and
mov
pop
xchg
mov
shrl
mov
inc
jp
std
mov
jmp
cli
inc
fidivl
cmp
xor
in
sub
roll
rcrl
ret
adc
xor
push
mov
jb
cmp
imul
inc
jp
push
aas
std
or
mov
adc
mov
mov
jae
cli
sub
imul
xchg
testb
fwait
inc
mov
shlb
cmpsb
cmp
push
aaa
adc
mov
pop
mov
xchg
and
lods
mov
sti
xchg
stos
adc
aad
or
test
and
je
imull
dec
push
mov
mov
and
cmp
pop
sub
imul
pop
xchg
nop
add
roll
or
lock
ljmp
xchg
fwait
sub
push
or
inc
cli
cmp
enter
repz
sub
mov
call
cltd
mov
push
mov
or
cld
push
neg
jno
into
mov
mov
fisubs
push
test
pusha
mov
fistl
cmp
jp
test
jle
stc
mov
ljmp
popf
add
addl
lock
mov
test
xor
fcoml
stos
mov
bnd
dec
rcl
insl
jg
push
pusha
and
insb
out
daa
push
test
addr16
push
sub
mov
pop
loope
push
aam
out
and
lret
lcall
aaa
sarl
push
pop
jns
pop
dec
in
add
and
scas
fwait
xor
imul
fs
je
int3
test
adc
mov
push
push
push
sar
dec
sbb
xchg
rcrb
mov
or
or
pushf
xchg
inc
stc
xor
or
push
std
jp
mov
in
stc
shlb
sub
cmc
or
stos
pop
cmp
js
cmpl
pushl
dec
adc
nop
addb
inc
push
leave
and
or
add
mov
lret
xchg
mov
or
dec
add
xchg
pop
out
jg
shl
add
es
xchg
popf
mov
dec
xor
repnz
rol
cli
outsb
jge
movsl
mov
imul
add
mov
int
sub
mov
pop
mov
sub
and
jb
adc
loope
mov
out
mov
jo
pop
inc
aaa
pop
mov
mov
cmp
aam
cmpsb
into
incb
dec
clc
mov
leave
imul
dec
sbb
aas
jno
das
lods
cli
cld
leave
push
ljmp
xchg
cld
jne
dec
or
lds
loope
jmp
movsl
push
xor
sub
sbb
ret
mov
test
and
icebp
mov
or
cs
in
cli
in
mov
cwtl
cmp
icebp
arpl
stc
xchg
and
or
push
push
adc
ficompl
and
loope
lods
xor
fisubs
mov
or
inc
xor
ret
xchg
adc
inc
test
mov
pushf
adc
mov
lahf
cmpsl
ret
pop
add
cmpsb
push
into
cli
andl
lock
clc
clc
dec
mov
inc
jg
jecxz
data16
sar
jns
cmpsl
cld
sub
int
pop
cmc
jl
mov
mov
ja
test
jbe
mov
sti
mov
lahf
sarl
or
fsubrp
es
add
fadds
call
dec
cmovns
pop
mov
out
pop
rcr
repnz
sbbb
push
cld
aas
adc
or
sbb
pop
sbb
mov
mov
and
cmp
dec
fidivrs
mov
dec
cmp
push
fsubrs
mov
cwtl
loop
lcall
lahf
xor
in
sbb
and
sbb
iret
test
jge
cmpsl
jle
add
fcmovnbe
enter
xchg
xor
and
aaa
mov
out
mov
jb
mov
rcrl
scas
lods
gs
sti
xlat
xor
adc
adc
stos
test
jmp
jae
cmc
loope
xlat
inc
pop
xchg
dec
and
stc
mov
ret
cmpb
iret
fmuls
sbb
pushf
pop
push
push
iret
sub
push
iret
or
popf
pop
dec
add
push
repz
mov
or
mov
outsb
shrb
push
jle
orl
mov
icebp
mov
mov
or
lock
insl
loopne
add
stc
fwait
in
icebp
scas
inc
roll
sub
xchg
inc
lds
or
xchg
dec
mov
mov
push
flds
pop
sub
jbe
inc
ret
jmp
lock
cmpsb
jmp
push
and
sub
out
mov
sub
aaa
mov
lahf
xrelease
jle
xchg
je
inc
xchg
mov
mov
fwait
or
adc
test
cmc
orb
or
mov
push
cmp
jge
rcrl
in
dec
xchg
xor
lods
push
rcr
push
push
pop
in
popa
jmp
xor
pop
xchg
lahf
outsb
sbb
mov
mov
cmp
jmp
xchg
or
cmp
enter
loop
jo
enter
addr16
stos
mov
mov
into
mov
scas
or
mov
xlat
flds
shrl
fndisi(8087
stos
adc
pop
mov
and
pop
movsl
mov
push
jl
pushf
cltd
mov
and
ret
jle
or
gs
sub
dec
mov
push
or
push
jnp
sbb
jno
mov
insb
inc
in
xor
add
aas
data16
cmpsb
xlat
sbb
add
and
mov
ret
or
mov
cwtl
cmpsl
push
jne
or
sub
enter
lods
add
in
scas
repz
push
adc
sbb
mov
dec
jmp
clc
or
dec
mov
outsl
xchg
testb
lods
sub
nop
or
add
fwait
pop
pushf
sub
xchg
lret
xchg
dec
movsb
or
cltd
push
cli
outsl
mov
cmc
or
imul
inc
pop
push
or
inc
mov
lods
jae
insb
or
sbb
aas
push
loop
lods
pusha
jl
and
daa
sub
bound
nop
adc
xchg
addr16
cmp
test
pop
or
mov
testb
mov
rol
gs
cwtl
inc
and
cmp
push
popf
lods
cmpsl
cmp
int
imul
lds
cmp
or
pushf
out
out
loope
xchg
push
aam
test
push
push
fcmovbe
xor
push
pushf
mov
stc
or
lcall
push
push
sbb
out
ja
adc
jg
and
pop
push
mov
cwtl
jne
mov
cmp
movsl
pop
fstpt
hlt
dec
stos
in
aam
cmp
cmp
cmp
popl
and
and
sub
ljmp
cmp
jl
cmp
dec
pop
stos
shl
jnp
sbb
xor
push
mov
mov
icebp
ds
mov
xchg
cmc
sub
or
push
out
cli
out
call
inc
jo
jb
add
sahf
add
das
out
cld
adc
leave
push
lar
outsb
faddl
shlb
jge
mov
imul
inc
add
adcl
ds
out
sbb
pop
scas
sub
out
cmpsl
and
cltd
xlat
fidivs
andb
sub
xchg
dec
mov
aaa
dec
push
stos
aam
repnz
roll
pop
lret
lret
repz
xor
pop
sarl
fdivrs
lds
out
xor
mov
xor
loopne
out
xchg
out
movb
dec
cmp
lods
dec
jb
leave
insl
sti
movsl
inc
std
in
jae
into
lods
sbb
dec
mov
cmp
rcl
cwtl
adc
sbb
dec
jo
adc
cmpl
inc
pop
jnp
xchg
ret
mov
sub
pop
aad
je
lods
je
fisubl
std
adc
in
mov
negb
jnp
leave
sti
add
xor
sub
xor
push
mov
mov
mov
inc
mov
mov
aam
mov
popa
jae
inc
sahf
mov
in
xor
push
nop
pop
xchg
dec
jbe
add
add
adc
add
decl
add
jne
mov
outsl
sub
xchg
shrl
xchg
ficomps
pop
inc
fstp
add
jl
or
scas
and
inc
jno
jno
cmp
hlt
jp
add
aaa
cmpsb
das
adc
adc
movsl
clc
sbb
mov
aas
hlt
mov
arpl
add
push
je
adc
mov
adc
ret
push
and
push
imul
into
or
and
cmp
cmp
push
xchg
xor
fbstp
dec
xor
loop
fistl
lods
lds
cld
insb
fst
aaa
mov
sarl
lods
shll
jne
mov
dec
xor
das
sbb
xchg
inc
es
in
mov
sub
repnz
imul
les
cwtl
inc
mov
xchg
xchg
std
test
nop
outsl
sbb
enter
xor
or
jns
inc
enter
int3
test
mov
mov
push
pop
mov
mov
adc
adc
xchg
ret
sub
and
xchg
or
or
shlb
aam
mov
push
and
sbb
mov
insl
lea
jecxz
pushf
mov
mov
sbb
ret
push
adc
or
imull
bound
fdivrl
pusha
push
stc
clc
bound
jmp
lcall
sbb
iret
push
pop
in
les
dec
mov
jb
test
push
mov
inc
sbb
lock
adc
xchg
nop/reserved
into
jle
imul
cmpsl
mov
int
aas
or
lds
xchg
enter
jns
xor
out
std
leave
stos
inc
push
pop
inc
cmp
mov
adc
xor
push
and
xor
xchg
out
aad
xchg
aas
data16
mov
jle
incl
jno
jbe
mov
jg
call
loope
xor
es
jbe
test
inc
sbbb
cmp
sub
add
into
push
cmp
sbb
xchg
lods
add
jae
jno
and
outsl
mov
dec
inc
mov
lods
sbb
je
and
cmp
add
dec
dec
and
ss
insb
sbb
cmp
xor
adc
jecxz
rcrl
mov
popa
cli
int
jbe
adc
adc
dec
mov
jno
bound
dec
and
mov
loope
iret
popa
or
test
pop
sbb
push
iret
and
dec
lcall
dec
adc
mov
out
in
stos
addr16
cmp
js
loopne
inc
xchg
sub
cmp
in
xor
imul
outsb
daa
pop
push
ljmp
mov
jnp
in
scas
push
fbstp
add
jbe
sub
ret
es
cmpsb
push
mov
push
fistl
or
outsl
xor
and
mov
and
push
bound
adc
adc
sbb
movsb
leave
enter
mov
dec
mov
fstps
and
cwtl
mov
aad
xchg
push
stos
xor
leave
mov
mov
fcmovne
test
jne
mov
fldcw
jl
es
and
or
add
outsl
or
and
inc
or
pop
mov
push
jno
sub
inc
dec
mov
mov
shlb
cmp
in
int3
add
and
mov
or
adc
mov
sahf
sub
insb
lods
or
or
jns
fs
mov
pop
cmp
aaa
dec
xorl
sbbb
xchg
mov
repnz
ljmp
bound
leave
push
and
sbb
insw
push
xchg
test
insl
adc
popf
fstl
push
mov
decl
inc
jg
aas
int3
add
movsl
fisubs
push
lock
sbb
adc
mov
lods
shll
mov
adc
mov
xchg
fldcw
invd
adc
adc
rorl
or
and
sub
movsb
ss
mov
stos
mov
imul
pop
xor
adc
arpl
repnz
sbb
repz
sbb
hlt
inc
sbb
and
lcall
pop
loop
jae
mov
in
mov
popa
mov
and
inc
jo
or
cltd
jb
incl
aam
imul
loope
mov
test
and
cmp
xchg
jbe
jo
mov
pop
shrl
lret
aad
pop
mov
lahf
jae
stc
dec
jb
pop
outsl
test
orl
ljmp
xor
pop
mov
jb
adc
and
sti
mov
jl
insb
stc
push
or
loop
mov
jp
jbe
push
mov
mulb
xor
repz
popa
mov
andb
insb
mov
jbe
sub
inc
das
add
and
imul
addl
aas
call
movsl
xor
fstpt
push
inc
out
fcmovb
jecxz
jnp
pop
adc
adc
xchg
cwtl
arpl
ret
mov
into
mov
fmulp
xor
mov
xorl
hlt
pop
adc
xchg
insl
and
cmpsb
std
mov
mov
inc
push
mov
mov
push
sbb
repnz
or
or
pop
scas
hlt
repnz
sub
mov
cmp
or
ret
pop
popa
imul
add
cmp
sbb
loope
int3
imul
jle
sahf
jg
xchg
xor
or
push
inc
mov
jns
or
xchg
add
and
adc
rcrl
imulb
mov
lock
pop
mov
or
pop
lea
sahf
lea
sub
ret
xchg
sub
arpl
pop
sarl
jae,pn
std
inc
jno
out
and
and
sbb
les
aaa
or
pop
mov
dec
lret
fisubs
out
jae
mov
into
inc
cs
mov
fists
das
cltd
pop
pop
and
inc
orl
inc
xchg
inc
cmp
inc
mov
sbb
adc
mov
jno
iret
fcmovb
add
jmp
sub
neg
out
mov
lods
lea
shrl
jmp
pop
mov
add
out
shl
sarl
ds
pop
test
fs
popl
add
divl
mov
adc
nop
je
add
rcrb
pop
mov
xor
outsb
cmp
xchg
mov
and
jae
addr16
stos
adc
out
std
ret
dec
fcmovnu
fadds
and
sbb
cltd
scas
mov
adc
scas
leave
loope
in
outsb
mov
xor
xor
cmp
jne
into
in
shll
sbb
or
call
jo
ret
mov
fwait
pop
mov
sub
mov
pop
inc
aad
ret
mov
mov
lcall
stos
push
push
andb
dec
jae
inc
add
jae
push
push
fdivrs
pop
pop
sub
pop
movsb
mov
mov
dec
xchg
and
mull
repz
xchg
or
cmp
ret
mov
adc
add
lret
cltd
lods
cs
mov
adc
mov
jne
push
mov
jge
mov
movsb
fsubrl
out
mov
movsb
in
dec
scas
fldcw
lea
jle
inc
dec
jns
mov
daa
vmwrite
mov
or
imul
or
popf
push
lret
and
adc
test
inc
dec
xor
ret
ficoml
or
pop
sbb
into
or
dec
push
inc
or
vpcmpeqd
lds
mov
scas
add
sbb
add
adc
sbb
rcll
mov
sub
sti
and
in
insl
or
nop
sahf
fisubl
cmc
popf
mov
xchg
xchg
push
jmp
sub
dec
cli
pop
popf
and
bound
lods
repnz
imulb
sbb
in
add
aad
sub
adc
dec
pop
push
mov
stos
push
fmuls
xor
mov
ficomps
sub
mov
push
xchg
inc
orb
mov
movsb
mov
scas
jle
stc
push
ret
fwait
pop
loope
pushf
lods
and
mov
or
ret
call
arpl
pop
mov
xchg
insb
shll
pop
jno
push
mov
dec
mov
push
lock
xchg
fstps
and
ja,pt
iret
out
or
jg,pn
rcll
inc
mov
adc
xchg
fdivs
mov
rorb
outsb
pop
clc
xor
inc
arpl
sub
cmp
cwtl
loope
mov
cmc
aas
and
mov
push
xor
sbb
jo
repnz
xor
incb
jns
adc
pop
mov
jle
ja
shrl
pop
call
cmp
push
cli
out
mov
or
pop
adc
sbb
out
out
push
jno
cmp
sub
dec
andl
pop
push
data16
and
dec
inc
push
subb
and
div
out
xchg
imul
lcall
mov
cld
popa
jecxz
movsb
adc
jg
add
or
xor
push
jne
ficomps
daa
xchg
dec
cmpsl
ss
test
lret
faddl
inc
imul
pop
addl
ljmp
outsl
mov
cmp
inc
in
inc
repnz
loopne
loop
xchg
sub
adc
pop
cmpsb
jmp
or
or
ja
insb
gs
addr16
loope
lds
pop
pop
bnd
popl
jecxz
fimull
das
inc
mov
jo
mov
jl
inc
movsb
enter
cmpsl
xchg
fiadds
call
aaa
push
enter
inc
cmpsb
out
leave
jecxz
mov
addr16
xorl
movsl
mov
stc
and
popf
pusha
pop
or
dec
xchg
xchg
adc
lret
mov
cmp
sbb
xchg
or
cmp
pop
xor
lods
test
fwait
sbb
bound
lods
adc
iret
inc
imul
enter
jmp
mov
call
outsb
xor
dec
add
mov
inc
rcr
inc
into
sbb
xchg
fdivrl
jbe
bound
pop
xchg
lahf
cmc
sub
outsb
and
lds
sarb
push
xchg
sbb
ja
out
cmp
inc
inc
sahf
cmp
ret
insl
push
sbb
push
push
ret
insb
rolb
insl
mov
sbb
dec
and
sarb
jmp
rcrb
loope
xor
adc
std
leave
mov
pop
xor
push
mov
shlb
fwait
xor
shlb
sub
rolb
lods
cs
clc
jae
cmp
and
shrb
aam
in
test
call
jb
repnz
adc
mov
or
test
cmp
popa
adc
adc
in
add
ljmp
rolb
sub
es
mov
std
jl
out
gs
lahf
test
loope
cmp
hlt
lcall
cltd
mov
in
inc
sbb
sbb
fisttpll
jp
scas
orl
push
mov
sub
dec
xor
bound
mov
sahf
jle
js
sbb
dec
movsb
add
or
mov
mov
adc
cmp
mov
add
rcrb
pop
aas
xor
adcl
rcr
jge
sbb
xor
cli
jae
fildll
cmpl
or
jp
outsb
xchg
clc
mov
inc
sub
fs
jbe
imul
sahf
sub
loopne
and
cmp
inc
lahf
xor
dec
data16
pop
sti
pop
sti
xchg
testl
loopne,pt
sbb
sbb
mov
xchg
lock
push
int3
adc
lock
imul
pop
ss
push
pop
inc
cmovae
adc
out
call
push
movsb
inc
cld
pop
imul
stos
repz
jns
xchg
add
or
mov
dec
push
mov
es
and
into
testb
aad
outsl
pop
fldenv
ds
pop
popf
cmp
pop
ret
rcl
scas
lea
push
fucom
testb
outsl
pop
addr16
push
cmpsb
xor
ret
iret
mov
sbb
repnz
lea
push
fisubl
iret
popa
cmp
arpl
mov
das
xor
lret
or
outsb
leave
loope
and
jae
cld
ss
cltd
mov
shrl
lcall
int3
pop
sbb
xchg
xor
ffree
in
insb
icebp
cmp
imul
stc
xor
jo
add
push
jg
mov
xchg
fs
and
fildll
int
rcrl
inc
call
dec
call
ret
and
cmpl
add
rorl
test
jle
out
shl
cs
iret
cmpsb
mov
mov
mov
mov
lds
das
jns
mov
pop
push
rcrl
daa
add
fcmovu
and
ss
imul
jg
mov
test
lret
sub
lret
xor
leave
outsl
sub
cli
or
pop
sbb
jmp
daa
mov
lods
daa
icebp
sahf
xlat
mov
mov
rclb
inc
mov
negl
jg
cmp
and
xchg
out
outsb
inc
divb
mov
jnp
cmp
sub
sbb
dec
cmpsl
test
or
rolb
sub
sub
cmp
dec
and
push
xchg
and
adc
inc
ja
cmp
les
xor
imul
or
sbb
xchg
dec
mov
sbb
lahf
int
mov
mov
xchg
jle
insb
insb
loopne
adc
insl
in
daa
jne
fldl
or
imul
fwait
repz
xor
rcrl
pop
mov
cmp
jmp
pop
push
mov
sbb
mov
pop
loopne
int
dec
mov
inc
imull
scas
xchg
pop
aam
push
push
insl
sbb
push
inc
adc
adc
mov
aaa
sbb
pushf
and
fcoms
out
adc
lea
testb
jne
or
sbb
fdivr
shrb
push
out
fcoms
sub
mov
push
pop
test
dec
or
pop
fisttpll
and
fwait
adc
mov
movsb
dec
add
cmp
adc
or
stc
sub
mov
into
idivl
enter
and
movsl
insb
xchg
ja
outsl
test
adc
xor
xlat
jne
xlat
enter
jae
adc
jecxz
fdivs
add
push
scas
pop
popf
lcall
cld
fnstenv
shrl
mov
cmp
xor
loop
hlt
cmc
lods
ja
lcall
lret
add
repnz
jne
xlat
cmp
sbb
cli
lret
inc
sub
loop
add
pop
shl
call
push
adc
cmp
iret
dec
sti
jg
mov
cwtl
lret
sbb
std
mov
jne
js
mov
and
out
adc
push
movsb
mov
mov
subl
pop
or
push
and
jecxz
dec
out
jb
pop
mov
push
xchg
mov
and
fbstp
lods
jge
push
nop
jnp
nop
push
xchg
mov
out
jns
inc
sub
scas
and
insl
jle
and
les
ss
mov
xor
push
adcb
mov
push
hlt
dec
fildll
cmp
mov
jmp
dec
arpl
stc
pop
movsb
stos
std
fcoml
decb
je
sub
xchg
popf
pop
es
testb
dec
jae
jmp
fcomi
pop
mov
xchg
in
dec
lods
sbb
jb
mov
pop
out
fwait
pop
shrb
popf
aas
arpl
test
aam
push
jg
lea
ds
jne
inc
sub
or
push
movhps
sub
jbe
ljmp
push
fwait
or
sarb
movsl
cmpsl
cmp
mov
movsb
insl
out
add
inc
push
cmp
mov
fucom
popf
mov
repz
sub
inc
mov
sub
imul
cmp
sti
and
add
mov
loop
sub
xchg
imul
push
std
mov
and
ljmp
jnp
push
aaa
pop
orl
inc
pop
mov
je
push
jb
and
popa
rcrb
sbb
sti
dec
mov
xchg
sbb
addr16
pushf
push
fdivs
pop
lahf
movsb
shll
push
test
or
ss
scas
dec
xchg
dec
jl
add
aas
push
mov
jecxz
dec
mov
sbb
xor
mov
jge
es
and
mov
mov
push
xchg
mov
sbb
imul
int3
mov
insl
shl
jno
xchg
pop
mov
orb
fimull
jbe
lea
leave
and
scas
push
cli
mull
mov
aad
divb
mulb
adc
xchg
sub
outsb
aas
loop
inc
mov
pop
pop
inc
fisubrs
scas
push
xchg
rcl
inc
mov
les
dec
adc
lret
in
inc
inc
and
jo
stos
push
cmc
mov
lock
adc
loop
mov
ljmp
push
jae
insb
push
dec
xor
repz
inc
inc
push
test
loope
adc
sub
and
rclb
popa
out
sub
dec
icebp
outsl
jge
pop
lock
adc
addb
pop
popa
cmp
sub
pop
shrl
sar
push
stos
addb
insb
sbb
insl
js
pop
jno
add
cmovle
mov
subl
out
pop
adc
ret
sbb
sbb
push
sbb
jnp
outsb
lds
insb
in
subb
pop
es
in
push
xchg
cmpsl
push
outsl
lret
jp
or
mov
jl
cmpl
or
adc
mov
shrb
push
adc
add
cltd
repnz
sbb
mov
sub
inc
call
rcll
xchg
add
push
jmp
push
in
lcall
jge
push
aam
shll
mov
cmp
push
jbe
daa
negb
test
rcrl
fwait
jnp
fs
xchg
or
jmp
inc
pop
fists
adc
jl
xchg
push
std
lea
mov
insl
out
repnz
xchg
and
mov
xchg
xlat
sub
jg
outsb
push
and
jbe
dec
lea
daa
pusha
mull
jae
ficompl
adcb
mov
jnp
xor
sbb
stos
ficoml
fwait
push
sbb
fnstcw
pop
inc
jb
rcrl
push
xchg
mov
and
mov
testl
jmp
sbb
aas
mov
in
ljmp
pop
scas
xor
dec
pusha
stos
lods
push
les
push
pop
test
arpl
jbe
scas
mov
pop
in
xorl
mov
adc
mov
pop
fldt
in
mov
or
cltd
mov
xor
into
mov
add
mov
jg
aam
ret
insl
stos
cmp
inc
sbb
out
popf
mov
cmc
ss
lahf
push
pusha
mov
shr
lahf
divl
add
into
bound
int3
sub
add
imul
scas
mov
adc
iret
ret
popf
jns
lret
jne
adc
adc
push
addr16
pop
imul
mov
lods
mov
fiaddl
xchg
jg
xor
cmp
repz
data16
xlat
int3
test
and
jecxz
inc
rolb
xorb
xor
stc
sbb
int
xor
mov
dec
movsb
loop
pusha
sub
roll
adcl
mov
aas
add
push
addr16
loope
jns
cmp
pop
mov
outsb
cmpsl
jmp
inc
pop
jae
push
dec
inc
sub
and
daa
out
or
outsl
str
add
jmp
ss
cmp
or
and
aas
adc
mov
pop
inc
or
stos
mov
cmp
outsb
outsb
pusha
cmc
xchg
mov
cmpsl
adc
add
adc
inc
inc
jge
push
ja
mov
mov
xor
add
nop
faddp
xor
std
scas
aad
xor
fistpll
mov
jns
jg
mov
std
or
inc
rcrl
adc
dec
sub
das
and
test
sbb
pop
jbe
pushf
push
jbe
push
adc
add
jle
adc
loop
test
cmp
stos
sbb
cli
push
aam
inc
out
push
int3
andl
push
xchg
cld
ret
cmc
lods
call
sub
jb
imul
int
push
sbb
sub
adc
lahf
xchg
cmp
cmp
lock
out
das
add
icebp
ffree
rcr
ret
or
dec
jae
jnp
inc
xor
jmp
lahf
aam
mov
fs
out
or
xorl
or
xchg
dec
pop
or
rcr
pop
mov
int
shlb
mov
loop
sbb
lcall
adc
pop
jl
testb
outsb
lcall
jo
in
pop
cltd
cwtl
dec
mov
lock
pop
inc
jns
inc
inc
jo
ja
les
loopne
sub
mov
imul
addr16
inc
popf
movsb
inc
iret
sbb
rol
popa
mov
clts
pop
sbb
das
jae
inc
fcomip
xor
ds
cmp
insl
push
das
sbb
pop
and
xor
push
mov
sbbl
push
mov
adc
push
fsubrl
setb
mov
xchg
pop
push
jle
push
fwait
mov
out
push
addr16
outsb
jno
imul
fistps
jl
lods
ror
push
pop
inc
adc
mov
push
mov
pop
cmp
outsb
vpmaddwd
push
loopne
xor
inc
and
lock
sub
mov
lds
or
xchg
testb
push
inc
loopne
ljmp
movsb
mov
xchg
out
pushl
in
jns
push
jno
mov
jl
push
dec
cmp
and
pushl
adc
sub
insb
xchg
push
in
push
cmp
mov
sub
lock
lods
xchg
pop
xor
ja
cmc
mov
ds
out
push
imul
inc
addr16
jl
lods
lret
mov
xor
or
pushf
pop
or
and
loop
movsb
das
subl
addr16
out
mov
ret
lea
mov
imul
mov
test
int
jg
lods
mov
rcll
clc
ja
push
adc
mov
movsl
jecxz
jg
loopne
push
push
loopne
lcall
jns
data16
inc
jae
bound
adc
push
cmp
cmpsl
adc
and
imul
push
shlb
mov
mov
pop
call
fdivrl
in
les
int
jno
jmp
mov
cmp
pop
adc
pop
cmpsl
xchg
sub
pusha
repz
pop
aam
lea
jp
icebp
pop
cmc
dec
popf
push
std
push
in
icebp
pop
jge
cmp
mov
sbb
shll
xchg
loop
sahf
cmp
ret
cli
jge
stos
mov
and
add
push
xor
push
int
pop
jl
jne
lock
mov
mov
js
jl
imul
lret
cmp
push
xchg
arpl
jle
ret
dec
add
sbb
or
mull
add
test
adc
cmpsb
pop
jnp
sub
call
mov
hlt
xchg
cmp
xchg
lcall
rcr
pop
aam
push
xchg
or
pop
jle
push
out
add
jp
sub
cltd
fdivrl
fcmovbe
and
jo
rolb
fwait
sub
cmpl
lret
mov
lea
lahf
call
and
and
jecxz
add
adc
idiv
and
aad
stc
push
add
sbb
test
cmp
inc
in
inc
and
out
mov
loop
mov
pop
xor
jae
or
insb
sti
sub
inc
add
lahf
sub
xchg
adc
and
aaa
push
push
mov
dec
mov
adc
add
sarl
shll
test
popa
mov
addr16
lods
inc
mov
dec
lahf
sbb
cmp
jnp
jp
and
pop
ljmp
ljmp
push
mov
jge
mov
cmpb
cld
loope
pop
add
xor
div
arpl
fbld
bound
and
std
xor
pop
mov
mov
call
xchg
xchg
sbb
xchg
jmp
es
pop
pop
sub
xchg
pop
enter
stc
cmp
jnp
movsl
test
xchg
push
clc
lds
cwtl
and
arpl
je
sub
ljmp
and
aam
pop
or
adc
bnd
xchg
and
gs
lahf
dec
les
mov
shl
cld
mov
repz
lock
js
xchg
mov
repz
aas
fs
cmp
xchg
mov
jae
xlat
addb
push
ja
test
lea
fcompl
test
pop
insl
adc
icebp
in
int
daa
in
dec
rcr
add
cmp
pushf
xor
dec
mov
pop
lods
push
push
popf
mov
popa
pop
scas
movsl
xor
push
mov
sub
cltd
pop
push
daa
hlt
lea
pop
jge
and
jbe
repz
jmp
adcl
cmp
sbb
mov
add
gs
out
repnz
add
jae
dec
sbb
addb
mov
std
adc
stos
fs
dec
xor
pop
cmp
cmp
dec
shlb
mov
xchg
enter
dec
adc
xchg
jmp
jmp
lret
push
ret
daa
insl
enterw
enter
and
movb
inc
orb
ja
imul
cmpl
xor
pop
lods
pop
mov
push
pop
stc
dec
in
repz
cmp
add
cmpsl
and
vunpckhps
sbb
call
test
pop
jle
jb
add
shl
push
dec
fcompl
iret
jge
adc
enter
ficoml
loop
xchg
mov
jbe
pop
insl
decl
pop
jl
xchg
ret
lahf
fidivs
jp
sub
cmp
add
les
bound
insl
push
test
in
add
ficompl
repnz
mov
mov
fisubs
ret
ficompl
xlat
cltd
das
pop
cmpsl
or
shl
popa
jb
test
jae
mov
lret
xchg
and
fsubrl
lds
lods
add
sbb
or
jmp
data16
fildl
cmp
into
aaa
popa
sbb
testl
in
jge
mov
iret
cmc
jecxz
xor
xor
nop
adc
jl
sbb
push
cmpsl
lods
adc
cmp
fistpll
lock
test
ret
jne
jne
iret
jmp
mov
aas
aam
sbb
imul
repnz
mov
jle
lock
repz
popa
sti
repnz
jno
inc
leave
xchg
cmp
push
rclb
jb
ss
mov
pop
cltd
mov
jo
dec
cmpsb
add
dec
sub
stos
imul
jl
pop
test
inc
rolb
aaa
sub
push
mov
adc
dec
xor
jnp
sbb
cmp
mov
loope
inc
or
ret
rorb
clc
int3
mov
mov
popa
lret
adc
leave
rorb
stc
xchg
push
adc
scas
or
inc
jne
mov
cli
xchg
sub
and
insb
dec
adc
adc
xchg
push
cld
fs
jb
rol
mov
pop
pusha
shlb
adc
jl
lsl
cmpsl
cmc
leave
xor
add
adc
mov
ret
sbbl
ljmp
cmp
data16
pop
cs
testl
push
rolb
test
mov
lods
fidivrs
stos
or
lods
rcr
cmc
iret
xchg
ret
sbb
push
bound
popa
js
mov
repz
aaa
dec
ljmp
dec
sub
ja
push
cld
jae
ss
scas
push
int3
std
push
in
xchg
ljmp
in
sub
repnz
fisubs
add
jbe
clc
cmc
pusha
repz
pop
xor
dec
sub
push
xor
fnstcw
repz
imul
and
hlt
testl
sti
xor
inc
outsb
push
pop
or
sbb
lret
scas
gs
inc
cli
xchg
xchg
jne
in
cli
fisubs
jns
or
dec
cmpl
xchg
ds
shlb
outsl
aad
rorl
inc
lret
lret
fdivrl
ss
je
mov
cmpsb
pushf
out
enter
clc
pop
mov
push
xor
mov
mov
mov
sbb
movsb
adc
pop
ret
xchg
adc
push
in
and
mov
and
aaa
push
arpl
push
bswap
cmc
dec
movsl
pusha
xchg
or
rcrb
push
pop
push
pop
adc
lock
jmp
lods
xchg
test
jge
aas
add
icebp
adc
inc
jne
mov
stos
fcmove
mov
stos
enter
inc
or
ja
xchg
cmpsb
addr16
cld
aam
jbe
xlat
in
sbb
mov
test
mov
sub
jbe
xchg
mov
dec
or
out
adc
and
ficoms
dec
stos
sbb
xchg
fistpll
cmc
pop
pop
or
inc
dec
pop
addr16
mov
jae
gs
ja
and
pop
fbld
arpl
mov
xor
mov
push
mov
push
pop
cmp
xchg
jae
pop
mov
test
or
xchg
pop
cltd
cmp
pop
mov
and
adcl
lock
jge
stos
adc
dec
lret
daa
jge
movsb
lock
orb
cs
hlt
pop
jb
lahf
nop
and
cmc
jmp
sub
cwtl
gs
into
aas
xchg
movsb
call
roll
mov
mov
cwtl
lret
xchg
or
mov
lret
push
pop
icebp
enter
cmpsl
jbe
jg
jl
aas
or
arpl
mov
into
xrelease
and
lret
iret
shr
fwait
ret
icebp
cmpsl
fldl
imul
nop
ffreep
fxch
inc
movsl
lret
mov
arpl
pop
inc
adc
mov
lret
cmp
sbb
scas
or
jg
add
ds
cmp
in
nop
jmp
out
push
push
or
mov
pop
push
dec
mov
rclb
loop
fadds
cmp
xchg
out
andl
adc
sub
aam
xor
in
mov
out
addl
inc
mov
mov
cli
xor
adc
or
stos
es
ss
xor
sbb
fs
sbb
insl
push
repnz
movsl
lret
popf
in
pop
inc
aas
mov
mov
mov
shll
add
cs
arpl
lock
xchg
cs
jp
mov
push
sub
int3
adcb
out
sahf
mov
cmc
sub
hlt
sti
aas
fs
mov
in
int
add
sbb
dec
insl
or
mov
push
jns
lds
add
mov
cmp
clc
call
out
adc
xlat
xchg
pop
cmpsb
mov
push
cld
mov
data16
inc
ljmp
dec
xorl
xchg
pop
push
adc
ficompl
sub
add
add
rcll
and
jecxz
cmc
push
cmp
or
xor
filds
and
pmullw
std
mov
imul
fs
lahf
std
data16
jb
call
dec
iret
pop
ror
push
add
adc
inc
cwtl
dec
or
or
jnp
mov
pusha
cmp
popf
imul
outsb
mov
out
dec
mov
shrb
push
push
push
xchg
cmp
push
cmp
inc
scas
adc
add
nop
jmp
adc
xchg
and
and
pop
out
lods
loope
mov
dec
out
jmp
dec
scas
pop
mov
std
cmp
cmp
mov
dec
jno
pop
mov
loope
pop
inc
mov
int3
sbb
inc
fucomi
pop
pop
mov
adc
mov
pop
fidivrs
xchg
into
push
cltd
data16
adc
or
mov
sbb
roll
or
jge
das
movsl
mov
pop
int
mov
test
lods
in
add
inc
enter
in
mov
clc
mov
push
dec
push
pop
push
cli
cmpsb
cmpsl
jecxz
cmp
add
sbb
je
addr16
adc
jmp
xchg
std
in
dec
repz
dec
sub
js
sub
scas
xor
sbb
ficoml
into
bound
inc
xchg
lahf
or
pop
push
and
imul
lds
mov
in
test
jns
jle
adc
repz
mov
dec
hlt
add
dec
outsb
stos
and
sub
je
inc
dec
adc
out
into
incl
sub
scas
sub
adc
mov
inc
movb
xchg
cmp
mov
js
mov
sub
fidivrs
mov
test
sarl
xor
cltd
mov
mov
loope
adc
add
cmpsb
sbb
fstps
ss
adc
std
push
pop
fcoms
jp
xchg
xchg
lcall
pusha
cld
out
sar
jp
shlb
or
jbe
cmpsb
xlat
fs
int3
dec
je
in
cmp
dec
inc
mov
scas
dec
xchg
add
push
loopne
push
scas
fimuls
mov
add
nop
jnp
cmpsl
stos
insb
xchg
xchg
and
jmp
mov
mulb
sub
push
test
and
xor
js
xlat
sti
xorb
push
xchg
scas
fimull
lret
push
mov
mov
mov
mov
xchg
lds
xchg
pop
push
jl
dec
inc
xacquire
add
sbb
and
push
cmp
dec
data16
scas
cmc
jle
adc
adc
cmpsl
shll
mov
and
roll
ret
cwtl
sub
inc
pop
mov
and
fwait
mov
jne
fsts
insl
pop
jmp
cmp
xor
arpl
xor
mov
pop
ficoms
sbb
mov
dec
jl
mull
xchg
or
stc
fnsave
push
pop
in
inc
mov
mov
mov
jnp
xchg
jp
xchg
inc
mov
arpl
push
cmpsl
fimuls
icebp
jae
test
inc
mov
hlt
arpl
pop
nop
and
into
call
mov
scas
mov
js
cld
xor
and
xor
inc
inc
inc
dec
stc
pop
sub
daa
ffree
mov
pop
movsb
adc
jge
jb
in
pusha
nop
and
jb
ja
cmp
mov
loope
ret
cmp
adc
lea
dec
xchg
jae
xor
int
add
xchg
in
or
push
add
int
addr16
mull
clc
pop
popf
sbb
inc
adc
jo
push
sbb
jns
mov
lock
ret
add
add
fdiv
stos
mov
xchg
in
pop
jp
jmp
sbb
dec
aad
loop
xor
sbb
jle
mov
outsb
push
jbe
je
mov
mov
int
dec
sbb
jae
dec
cmpsl
nop
add
cld
loope
xchg
nop
addr16
jo
imul
mov
dec
shrb
repnz
add
roll
icebp
adcb
push
inc
aas
xor
pop
mov
mov
stos
mov
xchg
sti
int
or
in
jae
lret
mov
jbe
mov
jns
lods
mov
fldln2
add
cs
rorb
xor
and
mov
pop
lahf
int
arpl
xorl
or
andb
das
and
xor
dec
lea
je
mov
pop
mov
sbb
fadds
icebp
sbbl
push
data16
popa
push
adc
test
lods
lret
pop
or
xor
push
std
fbstp
ffree
fdivr
pop
jmp
and
rcr
mov
adc
pusha
pop
inc
mov
aam
and
pop
sarl
and
aad
xor
inc
je
nop
and
notl
xchg
pop
push
cmp
sub
popa
sbbl
mov
in
sbb
pop
cmp
imul
mov
mov
data16
out
mov
add
xor
mov
add
sub
in
push
cmp
ljmp
test
in
push
xchg
test
inc
dec
shlb
xchg
in
push
add
dec
je
into
in
push
cmp
and
out
ret
ret
das
in
ljmp
pusha
aas
mov
rorb
insb
gs
scas
mov
psraw
fadds
out
dec
repnz
test
jnp
push
into
call
lods
push
cmc
pop
test
loopne
fwait
pop
sbb
js
das
pop
cmp
ljmp
pop
shlb
fsin
dec
cmc
insl
cmpsb
std
insb
js
mov
mov
les
sahf
imul
mov
insl
xchg
ds
js
sub
dec
jns
inc
mov
mov
or
rcl
out
add
js
inc
xor
lret
out
push
xchg
aad
mov
andl
cwtl
sarl
loopne
jg
jl
hlt
int3
mov
sbb
sbb
rcll
sbb
imul
or
fwait
xlat
xchg
pusha
push
lret
ret
cmp
add
dec
stos
mov
lea
mov
loop
mov
int3
out
mov
in
insb
insl
lea
adc
das
test
std
stc
mov
popa
mov
cmc
inc
and
stos
and
push
push
fsts
xchg
out
push
icebp
mov
jae
jb
sub
mov
jns
ds
add
subb
shlb
add
adc
stos
xor
orl
stc
stc
xor
push
pop
icebp
push
dec
dec
repnz
sub
int
test
shl
aas
sbb
sub
mov
inc
push
call
xchg
jno,pt
ficompl
push
and
xchg
xchg
push
stos
dec
sbb
xlat
decl
loop
xchg
push
mov
jbe
dec
or
jne
sub
dec
ds
ds
rcl
fbstp
xor
lock
mov
push
pop
and
leave
adc
imul
ja
jno
jne
sahf
inc
inc
inc
rclb
cmpsl
dec
lods
mov
sbb
add
adc
rorl
push
xchg
jb
push
test
mov
into
mov
cmp
lock
sbb
scas
adc
push
popf
dec
fs
fldenv
xchg
in
xor
inc
aam
out
jmp
lods
xchg
cwtl
ret
xchg
fs
mov
xor
mov
add
mov
les
cli
shrl
test
adc
push
add
pop
jns
sbb
cmp
sub
pushf
fidivl
push
stos
minps
loopne
sub
jl
jl
push
xor
jg
sar
push
mov
test
dec
push
mov
mov
bound
add
xchg
sbb
inc
and
test
sti
ret
sbb
sub
nop
inc
xor
stc
push
call
xchg
push
and
pop
mov
push
movsl
ds
cmp
dec
jle
fnstsw
fisubrl
stos
aas
movsb
pusha
lret
clc
roll
mov
inc
mov
push
fisubrl
cmp
jae
mov
fnstenv
out
mov
cmpsl
or
cmp
in
cmp
sti
cmp
pop
push
push
push
movsl
lahf
jl
jno
xor
jo
shlb
mov
fldl
test
mov
cmp
in
js
in
clc
lahf
add
jp
xor
test
sti
mov
leave
cmp
adc
insl
ja
loope
xlat
ret
mov
gs
jae
lods
imulb
add
lods
add
dec
popa
sub
dec
xchg
scas
enter
dec
mov
pop
ja
ret
xorl
cs
loop
clc
rcr
cmp
out
orl
fisubs
and
cs
cmpsl
xor
jb
jbe
enter
push
rcrb
test
push
out
scas
add
jmp
dec
xchg
insb
mov
faddl
mull
pop
stos
mov
cld
sbb
mov
lods
imulb
inc
je
icebp
push
popf
sub
pop
sbb
mov
push
push
xor
jp
sbb
or
shrl
cltd
sub
ds
dec
inc
fiaddl
sub
jg
insb
xchg
cmp
inc
pop
shrb
adc
adc
sti
xchg
push
pop
cmp
subl
jge
clc
sbb
aad
dec
stc
stos
fnstcw
mov
int3
fs
imul
aam
js
and
and
dec
mov
mov
sahf
cmpsb
mov
xchg
inc
jns
into
fsubl
push
mov
xor
xchg
das
xchg
or
dec
adc
mov
loopne
scas
iret
or
or
push
mov
lahf
jno
fwait
pop
in
sub
mov
dec
push
int
out
aaa
xchg
inc
leave
enter
scas
mov
mov
push
aaa
push
lcall
dec
pop
leave
fs
jne
inc
cmp
mov
int
scas
sub
gs
fistpll
fistl
ds
ret
sub
lret
push
jmp
aam
inc
clc
and
jp
mov
frstor
cmc
mov
dec
push
sub
hlt
mov
and
xchg
pusha
pop
roll
rclb
add
or
push
test
sub
xchg
and
add
pop
jl
mulb
adc
adc
cld
cmp
jle
lret
dec
leave
stos
rolb
js
mov
and
push
mov
add
data16
push
mov
fsubrl
mov
mov
pop
cmp
jb
mov
and
out
jecxz
mov
inc
inc
mov
clc
ret
jl
stos
mov
movsl
cli
jle
inc
adc
xchg
int
bnd
sbb
stos
sub
add
aad
or
cmp
sbb
dec
gs
int
outsb
mov
aaa
call
out
fmul
outsb
inc
int
lret
mov
jg
adc
in
push
call
adc
adc
outsb
in
mov
lcall
cld
insb
mov
aad
jns
and
mov
push
mov
lock
scas
dec
movsb
pop
xchg
icebp
lea
xchg
ljmp
lds
test
adc
icebp
pop
fcomps
into
dec
or
dec
out
fmul
push
mov
out
outsb
sub
enter
jg
add
inc
js
aaa
xor
nop
inc
adc
mov
mov
fidivs
clc
inc
sub
ljmp
aam
sbb
outsb
bound
xlat
daa
xchg
push
cmp
scas
addr16
add
fnstcw
lahf
in
mov
cmp
mov
lods
dec
mov
stc
std
mov
xchg
mov
enter
out
cmp
pop
insb
hlt
inc
rol
movsb
lock
push
jle
lret
mov
cmp
push
movsl
sbb
out
xor
and
sub
movsl
cmp
or
ljmp
xchg
cwtl
xchg
push
ds
lods
xor
pop
jns
int
dec
clc
xor
push
cwtl
mov
test
cmp
std
mov
adcb
movsl
sub
outsl
mov
pop
lock
xor
jle
xchg
sarb
pop
push
mov
mov
mov
stc
arpl
push
ds
push
sub
dec
ret
insl
xor
fisubrl
jmp
jmp
inc
sbb
dec
sti
aas
add
push
test
inc
xchg
fs
or
xchg
fcompl
notl
inc
and
mov
cmp
cmove
cmp
rorb
out
lcall
and
test
mov
xor
mov
push
jne
fisubl
cmpsb
stos
aam
imul
xor
pop
xchg
mov
mov
jno
xor
shll
pop
xchg
sti
iret
testb
add
scas
test
push
fwait
das
xchg
lock
push
ss
jnp
mov
stc
movsl
sub
cli
mov
inc
xlat
push
add
subb
or
and
mov
xor
in
fldenv
add
orl
lret
push
pop
rorl
sbb
cwtl
jnp
mov
decb
sbb
call
mov
mov
sub
jle
sbb
vpackuswb
popf
sti
addr16
sbb
pop
dec
es
repz
pop
mov
xchg
xchg
lods
cmpsl
jge
stc
mov
cld
mov
in
rdpmc
sub
in
lock
dec
test
mov
cmp
mov
xchg
addb
cwtl
in
mov
sub
pop
xlat
dec
lods
jp
idivb
add
ljmp
push
xchg
push
cmp
cli
pop
mov
std
jns
ljmp
mov
push
jo
push
mov
inc
cli
or
jge
xor
sub
ja
xchg
dec
push
je
adc
mov
push
icebp
sub
pop
das
int
mov
lods
push
mov
repnz
sarl
jno
stc
pop
dec
fs
push
adc
adc
sbb
dec
popa
addr16
pusha
in
shll
div
call
ja
imul
mov
sub
insb
ss
cmp
jmp
mov
cmp
ja
loope
adc
clc
mov
call
aam
pop
sbb
pusha
push
bnd
mov
arpl
add
lcall
push
sub
sbb
loope
dec
xchg
mov
pop
sahf
test
sbb
pop
sbbb
xlat
or
inc
inc
jbe
inc
mov
xor
push
mov
sti
sub
or
xor
fwait
add
inc
sbb
xchg
xor
outsl
cmpsb
int3
sti
cmp
dec
aas
adc
xchg
inc
cwtl
dec
cwtl
call
gs
lcall
inc
nop
jmp
sbb
or
cmp
dec
stc
push
mov
leave
push
inc
push
inc
cltd
push
clc
sbb
xor
stos
imul
cmp
dec
jae
das
scas
ds
enter
mov
in
mov
ret
mov
int3
cmp
xor
push
call
cmp
in
mov
dec
repz
out
aas
daa
fsts
roll
push
sbb
fimull
sti
adc
mov
daa
mov
xchg
lret
sbb
sar
jle
mov
ja
add
stc
movl
jb
mov
out
pop
bound
sub
nop
lods
push
add
add
pushf
arpl
movsb
xchg
ljmp
dec
cmp
inc
pop
int
scas
jb
cmp
rcrl
mov
call
jnp
jg
jmp
cmc
bound
adc
popa
test
push
xchg
or
shll
jmp
xchg
imul
mov
jbe
add
or
pushf
mov
dec
addl
xor
adc
mov
sbb
or
dec
daa
daa
sbb
adc
cmp
in
push
push
das
out
addr16
lcall
popa
outsb
add
xor
aad
sti
mov
repz
push
inc
scas
lea
pop
ss
int
ja
or
fildll
lea
outsb
inc
mov
rclb
cmp
fs
adc
addr16
mov
mov
push
pop
fwait
pop
push
xor
imulb
sub
dec
push
mov
rolb
xchg
mov
cmp
sub
xchg
mov
jbe
sahf
dec
xor
push
ret
and
push
ret
xor
sbb
jae
pop
stc
mov
mov
dec
or
push
push
xor
es
cmc
jge
mov
jbe
sbb
inc
xlat
repz
sub
or
jno
loope
ret
in
inc
cmp
inc
out
inc
and
mov
jno
push
roll
inc
add
or
divl
into
mov
fldenv
loopne
add
rcr
dec
jne
push
xor
dec
pop
test
pop
fisubrs
jbe
sbb
ds
mov
xor
arpl
adc
xorl
jle
int
outsb
movb
mov
inc
aad
test
ljmp
shl
sbb
adc
ret
ret
lock
pop
xor
in
test
jo
lds
gs
or
test
pop
dec
push
adc
repz
push
hlt
mov
inc
jl
or
xor
insb
mov
cmp
pop
test
incb
pop
out
add
ret
push
add
insb
mov
cld
jg
call
sbb
filds
mov
ja
add
aaa
addr16
add
ret
fnstcw
jecxz
movsb
xchg
hlt
push
jne
push
push
dec
or
into
inc
jp
push
sub
sub
mov
cmpsl
xchg
repz
jb
call
push
add
mov
dec
mov
push
insb
js
in
mov
xlat
mov
fistpl
sbb
and
out
movl
mov
xchg
sbb
rcl
push
fildl
lods
mov
pushf
jle
add
sub
popa
inc
mov
sbbl
sti
arpl
das
adc
fidivrl
loopne
pop
jb
flds
sbb
pop
adc
or
cmc
mov
sbb
inc
lods
ret
das
jp
out
data16
inc
repz
and
push
popf
xor
imul
cli
sahf
jb
enter
jnp
mov
cwtl
sbb
imul
lds
inc
jmp
mov
fcompl
jecxz
es
push
scas
ss
movb
and
jp
out
jmp
sub
mov
cmp
dec
in
mov
cmpsb
dec
std
xor
inc
dec
or
inc
das
mov
cmp
pop
adc
inc
mull
jecxz
fs
push
add
sbb
dec
sbb
scas
test
mov
rolb
xchg
jle
cltd
mov
inc
das
xchg
jmp
cwtl
jp
icebp
jns
test
lods
mov
xchg
jno
cmp
sub
ss
jbe
in
mov
es
fcomp
and
in
jmp
aad
bound
pop
inc
sti
cmpsl
mov
loope
sub
pop
inc
out
sbb
test
jle
imul
add
inc
in
loopne
inc
push
fisttpll
jne
scas
push
push
pop
cmp
xchg
mov
sbb
xor
test
cmc
and
push
mov
mov
xchg
inc
pushf
cmpsl
sahf
cmp
ljmp
push
in
pop
mul
dec
pop
pop
stos
push
inc
outsb
enter
cmc
iret
xorb
les
addl
insl
out
add
dec
or
mov
mov
mov
mov
mov
mov
mov
mov
jno
add
xor
test
ss
and
or
mov
fldlg2
push
push
jl
movlps
inc
in
xchg
or
add
out
mov
shrl
or
xchg
xor
insb
lods
aas
popf
adc
xchg
dec
shlb
fistpll
and
or
das
dec
jl
gs
addr16
shlb
xchg
mov
push
xor
push
lock
data16
fwait
bound
push
push
mov
jo
lods
and
xor
outsb
loopne
data16
test
test
dec
xchg
inc
lret
sub
sub
sahf
mov
lea
movsb
jecxz
ret
arpl
and
dec
lret
fisubl
adc
push
vunpcklps
xor
mov
add
fildll
push
movsb
inc
fcmovbe
aas
cmp
fdivrl
sub
add
repnz
lea
and
icebp
aam
mov
xor
test
push
and
add
loope
fdivs
xor
cmp
adc
fiadds
xchg
mov
clc
lds
fldt
int
or
pop
mov
mov
and
xchg
jp
pop
xchg
repz
cmp
xchg
pop
js
adc
xor
icebp
xchg
xchg
add
test
pop
mov
les
mov
sbb
xor
dec
cltd
adc
cmp
cltd
jp
scas
or
cltd
push
xor
jg
mov
out
or
mov
jl
xchg
icebp
push
add
push
jle
mov
add
xor
aaa
pop
fmull
sbb
fidivrs
jl
ret
jle
jno
fmull
loop
pop
inc
or
lds
mov
dec
mov
stos
xchg
xor
mov
jge
nop
lods
dec
insb
inc
xor
cwtl
cld
imul
in
pop
mov
bound
xor
xchg
and
pushf
gs
mov
test
mov
incb
jno
adc
xor
imul
mov
cmpb
gs
das
cmp
or
iret
cld
push
mov
and
dec
adc
mov
or
dec
fs
adc
lea
xor
test
pop
sbb
scas
inc
dec
stos
push
out
mov
ss
unpcklps
xor
adc
push
mov
push
sbb
or
or
cmp
xor
addr16
ret
pop
das
push
push
loop
or
push
xor
mov
inc
jae
or
push
jne
cmp
sbb
aad
pop
movsl
push
mov
push
stc
or
and
mov
fstl
cmp
ss
aaa
arpl
xchg
sub
test
xor
adc
push
call
pop
inc
mov
xor
nop
xchg
mov
push
testl
fsubr
cmpsl
pushf
outsl
clc
ret
mov
clc
pop
ret
cwtl
jle
dec
mov
mov
push
jg
iret
jbe
push
stos
inc
roll
mov
mov
movsb
je
gs
fidivrs
adc
cmpb
inc
loop
imul
ds
add
cmpsl
lcall
pusha
pop
fcoml
xchg
cmp
dec
mov
cwtl
pop
dec
fiadds
push
imul
push
xchg
inc
mov
cmp
mov
ljmp
mov
xor
sbb
fnstenv
data16
addr16
cltd
sub
lret
rcrb
imul
pop
into
dec
and
stc
dec
enter
pop
scas
sub
insl
pop
dec
out
jne
jb
mov
cmp
insl
mov
mov
loop
scas
jmp
jle
cmp
test
movsb
xchg
jge
adc
outsb
inc
mov
mov
or
dec
sbb
jbe
test
sub
push
mov
mov
das
jge
xor
pusha
cli
pop
int3
sub
push
cmpsl
mov
push
mov
in
cs
or
cltd
push
dec
lock
out
adc
dec
test
mov
jp
push
mov
subb
mov
push
push
mov
pop
and
inc
movsb
xchg
testb
data16
sub
rcrl
outsl
mov
pop
mov
sbb
mov
jecxz
mov
dec
int
dec
fwait
aas
sub
push
ja
mov
mov
jmp
shll
in
jb
push
cs
daa
sbb
sbb
out
out
dec
lods
and
stos
lahf
xor
movsb
popf
int
out
push
sub
or
cmc
pop
movsb
stos
movsl
push
jae
aad
lods
xor
xor
pop
mov
loopne
jg
in
adc
enter
enter
add
sahf
mov
adc
std
jle
pop
sbb
push
jge
gs
xor
mov
rcl
lcall
in
jae
loop
mov
and
xchg
test
or
pop
xor
mov
in
cmp
jb
xchg
mov
sarl
mov
jl
cmp
std
jmp
mov
repz
jns
push
imul
fcomps
push
xlat
ss
jno
mov
mov
ret
idivb
addr16
das
fcmovne
add
dec
cmp
add
cmp
test
jp
and
cmp
jl
outsb
scas
mov
mov
xor
ljmp
ds
xchg
or
jmp
imul
add
pop
add
sbb
out
cmp
insb
pop
mov
mov
js
mov
fstps
scas
sub
leave
jg
popf
in
fcom
sti
add
stos
cs
jmp
movsb
mov
mov
push
push
test
sub
imul
js
push
std
adc
adc
sbb
jg
arpl
popf
out
dec
inc
or
stc
mov
jge
sbbl
lods
enter
test
inc
or
xchg
cmp
sbb
into
mulb
and
fstl
std
popf
int
clc
in
sub
divb
and
jbe
add
lcall
ja
stos
call
push
data16
dec
jmp
ret
lret
adc
add
adc
dec
shrl
lea
stc
jl
pusha
add
nop
inc
inc
es
dec
mov
pop
jmp
add
out
mul
imul
inc
or
aad
mov
xchg
dec
push
out
stc
repnz
push
fldt
mov
xchg
scas
test
jb
sub
or
insb
xor
outsb
and
mov
mov
mov
icebp
pushf
add
lea
insb
cmp
lret
xor
dec
mov
push
ja
mov
pop
mov
mov
imul
mov
and
sarl
fimuls
cs
dec
jg
mov
lods
mov
add
in
inc
xchg
fs
outsb
out
int3
cmp
cmc
ret
fistps
scas
add
shll
ss
xchg
add
add
lret
pop
xchg
jns
sub
hlt
push
stc
jne
mov
cld
xchg
xchg
popa
inc
dec
imul
je
jecxz
add
or
loop
fwait
ret
fiaddl
push
cmp
xor
mov
mov
mov
cmp
sbb
add
outsb
dec
decl
fwait
adc
jo
loopne
dec
pop
and
std
cmp
repz
jmp
mov
lret
ja,pt
cwtl
cli
cltd
xor
add
in
mov
jb
cmp
rorl
mov
sbb
pop
xchg
aaa
leave
popa
mov
mov
test
sbb
adc
dec
jp
fistpll
sbb
adc
and
pushf
and
sbb
xorl
and
iret
bound
in
inc
adcb
in
lds
xor
dec
ljmp
or
or
ljmp
js
loopne
incl
cmp
lcall
insl
les
mov
shl
inc
ficomps
push
jmp
mov
add
jae
mov
push
mov
dec
push
xor
ds
sbb
push
cld
dec
sub
in
sub
aas
aaa
and
adc
dec
push
inc
mov
xchg
fnstcw
inc
cwtl
or
sub
mov
fidivrl
stos
or
sub
adc
adcb
xor
outsb
pop
dec
cmp
cmp
mov
fwait
idiv
dec
lret
push
js
test
mov
sub
mov
sub
popa
cmc
jle
aaa
or
cmpsl
xchg
cli
mov
cmp
lds
sub
mov
ljmp
hlt
loope
scas
ss
lret
jge,pt
mov
addb
jge
fisubs
imul
mov
and
dec
outsb
sub
orb
ja
imul
jge,pt
dec
arpl
ss
fsubrs
test
mov
jnp
divb
push
cmpsb
sahf
call
xchg
std
dec
or
repnz
out
popa
jnp
cmp
int
shlb
ss
popf
movsb
cs
sti
sbb
sbb
movb
jnp
aas
lods
mov
test
sub
nop
mov
pusha
aam
dec
shll
add
scas
ficompl
pop
cli
mov
push
out
rorb
and
test
inc
sbb
cld
std
sub
jne
xchg
rcrb
sbb
in
xchg
adc
in
repnz
add
and
pop
in
loop
je
inc
es
ljmp
popf
pop
repnz
sti
fcmovne
push
shrl
jmp
es
addr16
push
adc
jae
jecxz
cltd
dec
push
pop
fistl
pop
iret
jl
cmc
data16
mov
sbb
lret
xchg
jbe
xor
cmp
or
lahf
mov
stos
mov
lds
rcrb
xchg
cmp
insb
inc
or
jl
inc
repz
inc
subb
sbb
jns
leave
push
popa
push
adc
and
test
push
arpl
incl
loop
mov
sar
cmp
adc
dec
dec
sbb
add
loopne
rcll
adc
inc
mov
xchg
cmp
stos
in
jge
sub
dec
inc
scas
mov
add
jmp
mov
je
mov
rcrl
mov
jge
loop
cltd
add
or
push
jnp
add
cmpsb
fcmovbe
out
xchg
ficomps
arpl
mov
fidivrl
mov
add
or
sub
scas
bound
inc
mov
inc
mov
sarl
push
fiaddl
sub
sbb
ret
push
outsl
stc
fcomi
nop
push
jge
mov
sbb
nop
mov
hlt
gs
mov
incl
cmp
sub
mov
jae
mov
dec
pop
aaa
jge
les
inc
repz
cli
push
pop
std
icebp
xor
push
aad
push
push
pop
aas
jo
scas
inc
cmpsb
sub
mov
mov
call
fidivrs
or
fisubrl
push
dec
sti
lock
mov
xlat
mov
pusha
push
stos
or
ficoms
sub
cmp
in
cs
mov
lods
xor
cwtl
dec
incb
out
or
pusha
cmpsl
or
jg
jp
adc
push
sti
outsb
cmp
mov
hlt
xchg
nop
arpl
lods
sub
mov
loopne
sbb
cld
push
paddw
dec
sbb
sub
dec
mov
add
fldcw
adc
inc
xor
cmc
rorl
test
xor
and
xor
mov
mov
xchg
dec
inc
xchg
fs
jmp
dec
test
mov
sti
pop
jp
sbb
lea
sub
add
inc
adc
cmp
loopne
mov
mov
ds
je
cmp
sub
rorl
mov
pop
fst
or
sub
aaa
xchg
movsb
repnz
push
dec
push
sarl
and
and
insb
imul
sahf
stos
inc
stos
inc
cmp
ljmp
cmpsl
ljmp
adcl
popa
stos
and
and
xchg
and
popl
and
xor
add
mov
clc
or
ds
paddusw
xchg
mov
cmp
inc
dec
fsubrp
fwait
jbe
iret
dec
inc
lea
add
repz
mov
fcmovnbe
inc
fs
lcall
stos
data16
sbb
fnstsw
cld
mov
orl
out
push
cmp
dec
into
cmpsb
leave
invd
mov
cwtl
mov
xchg
push
add
cltd
shlb
insb
jle
aas
out
in
insb
insb
xchg
ret
inc
mov
mov
sti
mov
shll
inc
movsb
mov
inc
or
pop
mov
mov
adc
cmp
ds
jge
cli
movsb
lret
mov
mov
jl
aad
mov
scas
icebp
jecxz
sbb
mul
mov
jns
xchg
sbb
sub
and
ret
mov
sti
cmp
mov
inc
xor
jmp
adc
ljmp
negb
xchg
fadds
adc
rclb
cli
cmp
mov
adc
lcall
xchg
mov
mov
shr
adc
inc
fdivr
pop
out
jae
xchg
and
sbbb
push
dec
xchg
mov
decb
arpl
push
cmp
lret
fisubrs
cmp
aam
outsb
xor
ljmp
fiadds
inc
addr16
or
movsb
mov
or
movsb
sahf
push
test
jnp
out
aas
out
jmp
sbb
mov
and
mov
push
cmp
ja
adc
aaa
mov
or
fistps
jecxz
or
or
jecxz
add
pop
data16
stos
mov
dec
sbb
and
stos
dec
popf
mov
cmpsl
push
mov
cmp
push
lods
mov
loop
mov
push
or
and
mov
cmc
inc
xchg
enter
ss
dec
sbb
add
sbb
dec
icebp
xor
mov
jnp
mov
pop
test
mov
pop
jl
sub
xor
and
sbb
mov
mov
aaa
mov
dec
call
adc
iret
dec
xor
aam
lds
cmp
pop
aad
pusha
fisubs
test
and
cmc
xchg
cmp
sub
rep
dec
xor
jae
aaa
out
in
mov
lods
icebp
cmp
adc
dec
xor
scas
scas
repz
pop
repnz
cli
lea
aam
fwait
andb
int3
loop
dec
out
xor
ret
lahf
nop
sub
sti
stc
xlat
jge
aad
dec
scas
inc
test
and
cmp
xchg
cmc
mov
mov
add
sbb
mov
or
and
xchg
jo
pusha
fdivrl
sahf
enter
les
jae
repz
jmp
and
or
loopne
aam
xchg
lock
jp
jg
gs
xor
pop
pop
pop
imul
xchg
dec
ror
dec
dec
stc
cltd
fdivrl
paddsb
add
jns
pop
imul
cmp
lahf
or
xchg
sub
sbb
int
jne
push
mov
sti
or
ja
aas
push
push
out
daa
sbb
sub
sub
fs
jns
push
test
outsb
fs
dec
cwtl
in
pushf
adc
add
fisubs
stos
and
jecxz
ds
mov
sahf
movsb
in
orl
cmp
rorl
pop
enter
ljmp
cld
jno
jecxz
mov
cltd
ja
ficompl
push
lds
repnz
dec
into
cmp
pop
mov
inc
popa
fcmovnu
imul
xchg
loopne
push
rcrb
repz
dec
jno
call
decb
xor
dec
andl
std
jb
inc
outsb
insb
insb
pop
lds
mov
adc
nop
outsl
sub
add
call
mov
push
adc
mov
out
repnz
jg
pop
mov
pop
xchg
mov
fwait
notb
cmp
pop
cmp
xchg
divl
nop
lock
ss
inc
les
popa
in
inc
out
jns
shr
xchg
mov
and
stos
jno
call
sbb
clc
cmp
fnstcw
insb
test
andl
and
cwtl
push
xor
pushl
es
dec
es
sub
xchg
loopne
adc
pop
movsl
loope
call
mov
aad
repz
cmp
paddb
and
lret
cmpsb
movl
cmpsl
mov
mov
in
bound
mov
push
ret
in
sub
imul
fs
stos
ror
rolb
cmp
xchg
or
mov
mov
in
insl
arpl
push
cmp
add
adc
pop
jmp
or
loope
cli
xchg
lds
mov
mov
rol
cmp
mov
push
int
sub
adc
pop
rclb
je
inc
ds
mov
mov
rcrl
scas
add
push
push
push
cmp
xor
cmp
push
imul
inc
adc
xor
xchg
decb
rclb
loopne
shr
adc
or
nop
mov
shl
ret
cld
pop
mov
push
imul
or
in
dec
push
std
and
dec
fcmovbe
mov
cmp
rolb
adc
and
addl
hlt
shll
lea
fiadds
lahf
adc
movsb
jns
pop
push
nop
pop
add
or
inc
gs
outsl
iret
popa
mov
cmp
adcl
mov
andl
or
push
jp
push
fadds
cli
push
in
fsubr
jg
jo
xor
test
xor
imul
push
mov
sub
lret
push
sbb
in
insb
mov
ljmp
push
cmp
mov
sbb
push
setb
adcb
add
imul
mov
data16
sbb
and
fsubs
dec
xor
pop
repnz
lret
mov
sub
sahf
pop
jae
jns
mov
sbb
sbb
dec
jo
jne
adcb
fmulp
push
into
pop
adc
sbb
int
sahf
dec
xchg
addr16
jbe
test
lret
stos
dec
imul
enter
pop
or
lret
enter
arpl
sub
imul
push
mov
mov
test
popl
sbb
shlb
insb
lods
enter
ljmp
push
push
mov
ds
or
addr16
movsb
push
mov
inc
xchg
mov
jno
xchg
mov
dec
mov
insl
xchg
sbb
ja
add
push
insl
insl
dec
dec
push
pop
shrb
push
popa
mov
aad
insl
imull
push
dec
outsl
cmp
sbb
xchg
cli
rclb
xchg
mov
into
pop
adc
outsb
fwait
inc
pushf
loope
mov
xor
jb
push
jnp
addr16
push
mov
jmp
jg
dec
and
mov
mov
xor
push
pop
or
xor
leave
or
cmp
pusha
xor
sti
sbb
dec
sub
lea
jns
push
sbb
ficomps
arpl
fs
aam
shl
add
fidivrs
xor
push
pop
fildl
test
mov
je,pt
ds
aas
xor
mov
sub
imul
divl
decb
adcl
push
ljmp
fidivs
int3
subw
fnsave
dec
jle
jae
shrl
inc
inc
cmc
add
sti
pop
mov
pusha
movb
bound
fbstp
outsl
jno
pushf
mov
aas
adc
sub
inc
test
cmp
ficoml
pushf
pop
pusha
gs
sbb
jnp
filds
sub
test
xor
mov
cltd
outsl
shrb
jo
bound
imulb
pop
inc
imul
cmpsl
in
xchg
and
and
shrl
data16
imul
aas
outsb
push
pop
lcall
nop
les
jb
in
aaa
xor
cli
inc
dec
adc
xor
sub
push
push
xor
movsb
lods
push
pop
pop
adc
xchg
in
outsb
sarb
imul
fs
aas
mov
rol
push
fwait
jbe
stc
mov
lcall
test
or
jnp
imul
fwait
adc
and
hlt
mov
xorb
or
and
or
loope
divb
mov
xor
xor
out
or
or
cmp
mov
cmpsb
lods
cs
mov
xchg
inc
cli
inc
and
out
sub
dec
add
imul
push
mov
push
adc
lret
aaa
mov
dec
and
out
inc
jne
lahf
or
and
idiv
ljmp
ret
xor
push
xchg
lret
das
adc
sbbb
mov
gs
adc
movsl
pop
or
jl
mov
and
cmp
cltd
push
adcl
inc
jge
es
dec
test
jne
cmp
mov
imul
aaa
jbe
pushf
out
xchg
cmp
fdivl
repnz
inc
add
add
out
movsl
subb
cli
sub
cmp
jl
push
xchg
shll
xchg
push
mov
xor
jecxz
test
es
stc
adc
pushf
mov
pop
lea
mov
jl
fbld
mov
pusha
inc
adc
inc
push
push
scas
cwtl
daa
and
imul
sub
push
aad
fwait
loopne
mov
xor
fdivs
mov
in
test
lock
out
fs
out
inc
daa
mov
fxch
int
dec
sub
sbb
adcb
inc
xchg
je
scas
inc
jne
xchg
pop
lock
cli
mov
outsl
popa
int3
cwtl
out
pusha
sub
sahf
rcrl
dec
xchg
fiadds
in
int
push
es
adc
jmp
mov
call
jns
ret
in
lcall
pop
js
aas
jp
adc
jo
gs
xor
pop
xchg
mov
dec
fistl
jp
adc
cmp
sbb
pop
add
jl
mov
mov
jp
xor
sahf
mov
pop
rcrb
mov
adc
bound
xor
inc
pop
not
pop
cld
cwtl
jg
xchg
insl
push
cmp
and
mov
js
jnp
lods
in
mov
push
pop
popa
inc
pop
push
outsb
jle
add
or
xor
adc
aad
sbb
push
ds
add
and
mov
psubq
or
mov
inc
inc
mov
cmp
int3
lea
adc
mov
inc
lods
cmpsb
sub
fwait
outsl
loop
iret
cmp
push
clc
outsl
and
or
push
inc
add
mov
int
add
movsb
jg
jle
add
adc
jbe
mov
push
dec
stc
push
push
push
shrb
xchg
xchg
clc
pop
add
push
std
in
lcall
push
sbb
push
and
jae
iret
dec
lahf
xchg
repz
add
daa
jae
dec
xor
stc
rolb
pusha
imul
shl
stos
jle
adc
cmpsb
jg
lahf
jl
pop
xor
xchg
adc
orl
fsubs
cmpsb
xor
adc
sarl
push
sbb
jmp
cmp
add
fs
push
in
jae
cld
mov
adc
out
rcr
add
cli
loope
pop
mov
push
fidivs
dec
mov
out
hlt
cmc
jp
dec
cmpsb
icebp
ljmp
mov
jae
sti
pop
cs
xchg
arpl
dec
shr
pop
cltd
fs
ss
mov
in
mov
outsl
dec
xchg
test
popf
stc
xor
pop
mov
add
pop
std
sbb
push
cmpsb
inc
nop
lret
shrl
or
adc
sbb
fisubl
adc
arpl
cmovne
mov
notl
fdivr
ret
cmpsl
cmp
icebp
mov
subb
ret
jns
or
jbe
xlat
roll
jge
sub
add
inc
outsb
cmp
cmp
and
mov
mov
jge
loope
dec
push
js
push
cltd
cmp
sub
mov
lea
sbb
les
lds
xchg
or
lods
mov
in
mov
hlt
mov
dec
test
dec
shlb
mov
mov
and
sub
lea
fbld
testl
pop
out
push
sarb
fs
mov
push
scas
lods
mov
cwtl
jnp
pop
ret
push
fldenv
inc
cmp
jle
xchg
mov
stc
jge
ljmp
js
out
pop
mov
das
push
or
pushf
sub
testb
push
mov
dec
mov
mov
fdivrl
or
mov
dec
sub
enter
test
push
fbstp
xor
adc
or
popf
pop
jl
sbb
and
out
inc
lock
or
push
sub
stc
sbb
pop
in
clc
fisubs
push
stos
or
mov
push
push
aas
cmpsb
inc
loop
stos
mov
lret
mov
out
rorb
jmp
jle
es
mov
jnp
js
push
and
daa
xchg
fstpt
sub
pop
lock
ljmp
clc
mov
jg
dec
test
mov
cmp
jo
adc
cmp
negb
and
leave
fs
cmp
jae
or
push
jmp
fdivrl
test
cmp
cmp
lods
sub
lret
dec
xchg
xlat
or
sar
pop
mov
ds
sbb
les
pushf
pushf
dec
dec
pushf
sbb
mov
mov
push
xchg
js
lea
mov
xor
lret
adc
mov
push
adc
in
std
xor
pop
xor
fisubl
add
pop
ja
xchg
push
push
mov
out
xchg
mov
mov
shl
scas
push
imul
inc
subl
loope
dec
and
add
push
mov
loop
add
jb
inc
sbb
mov
mov
adc
dec
mov
push
dec
adcb
sbb
adc
fmulp
cmp
mov
push
andl
lcall
xchg
xor
cmpsl
cmp
pushf
and
sar
arpl
psubusw
aam
cmp
sbb
fcompl
cld
inc
les
mov
push
mov
sbb
cld
je
int
mov
inc
popa
dec
pusha
fsts
or
out
lock
fisttpll
insb
ds
jecxz
push
scas
mov
cmp
mov
mov
mov
mov
add
je
dec
mov
enter
inc
jb
mov
dec
cmpsb
xchg
xchg
in
outsl
mov
stc
cmp
lods
add
gs
mov
xor
ret
push
mov
insb
adc
loope
push
mov
sub
pop
and
out
lea
jmp
ja
push
xor
ret
sbb
mov
push
cmp
rcrb
addb
nop
lods
push
mov
jl
or
in
lcall
cs
push
in
push
subb
in
ds
push
sbb
dec
leave
pop
stos
jo
mov
mov
sbb
fucomi
jecxz
push
cmovle
pop
shll
faddp
sbb
jno
sbb
sbbl
inc
dec
stos
ja
inc
repnz
xchg
push
ss
andb
mov
adc
shlb
decb
xchg
imul
adc
cmp
cmc
subb
mov
pop
pop
outsb
jb
in
xchg
ficomps
sbb
xchg
and
incl
scas
mov
xchg
shrl
in
jg
fs
mov
mov
cli
sbb
pushf
dec
lcall
aam
into
ffree
fldt
daa
push
jnp
jo
and
mov
out
popf
int3
arpl
pop
cli
testl
and
stc
cmp
mov
mov
fpatan
mov
sahf
jnp
mov
sub
add
jl
aaa
pop
in
pop
les
rorb
or
adc
sub
lea
push
add
sub
or
pushf
sub
dec
push
mov
or
loop
out
scas
cmp
inc
cmp
pop
sub
pusha
and
cmp
lcall
in
jle
daa
push
sbb
lods
add
outsb
pop
sbb
cltd
fists
dec
fwait
pop
stos
pop
je
cmp
and
jle
push
dec
sti
fdivl
xlat
std
mov
repz
xchg
std
fadds
xchg
gs
add
data16
dec
movsb
mov
hlt
inc
sahf
jle
xor
jp
and
sahf
push
cmp
rolb
loopne
dec
push
rolb
and
pop
sub
or
rcrb
cmp
into
jge
test
push
popf
pushf
xchg
jp
movsb
dec
xchg
out
test
ja
lret
sbb
pop
jge
in
aas
mov
mov
mov
mov
daa
in
and
pop
fcoml
loope
ss
push
movnti
test
xchg
xor
fdivrl
push
shll
adc
add
dec
mov
fsts
jecxz
and
push
mov
lret
push
jg
mov
push
cli
xchg
aam
in
adc
int
xlat
push
sub
xor
add
jno
cli
lods
out
ds
sbb
mov
adc
mull
jmp
js
mov
sbb
adc
xor
addr16
ss
mov
test
jecxz
lods
sbb
fisubl
or
pop
je
sbb
inc
or
mov
dec
into
movsl
xor
xor
cs
bound
cmp
and
stc
out
mov
loop
das
pop
je
out
dec
jae
push
adc
xchg
xor
push
lods
or
add
inc
sub
inc
out
inc
push
pop
sub
sub
mov
and
sbbb
stc
cmpsb
movsb
cmpsl
addr16
xchg
xor
and
mov
leave
in
aas
mov
xor
or
inc
sub
pop
jb
mov
jo
aas
adc
test
mov
je
pop
adcb
in
js
dec
enter
std
sub
jnp
xchg
loopne
rcrl
and
dec
fiaddl
repnz
mov
int
mov
idivl
cmc
gs
das
mov
pusha
or
fwait
addr16
mov
sbb
aas
stos
imul
mov
jo
insb
inc
inc
mov
jl
ds
push
int3
add
sub
push
adc
loop
int3
mov
or
rclb
or
sub
bound
ret
push
mov
int
or
push
push
cmpsl
dec
push
lahf
xor
out
cs
sbbl
pop
std
adc
push
mov
push
rcr
cmp
shll
pop
lods
jg
push
mov
mov
sub
cwtl
imul
inc
jae
xchg
out
punpckldq
fbstp
pop
push
shlb
fidivrl
or
and
nop
jmp
jbe
or
pop
rorl
idivb
mov
outsb
orb
jp
xor
xchg
pop
out
dec
fld
pop
pop
mov
andl
dec
push
jle
clc
test
addr16
inc
mov
mov
lahf
xor
mov
sub
ja
subb
out
push
or
adc
aas
sbb
mov
cmp
sti
andl
outsl
mov
outsb
dec
mov
mov
mov
loopne
mov
test
iret
pop
data16
and
sub
stos
xchg
sahf
out
das
lds
dec
lea
push
rcll
inc
or
testl
sti
movsl
sub
mov
hlt
sbb
push
out
cmp
aas
mov
movsl
jne
mov
enter
scas
hlt
xchg
jle
push
xchg
and
popf
mov
shll
aaa
add
mov
shlb
out
mov
xor
and
daa
jne
aas
mov
mov
mov
fcompl
add
xor
lcall
push
dec
outsl
sbb
adc
inc
ljmp
pop
mov
jmp
jecxz
adc
add
fnsave
push
cmpsl
cmp
popa
cli
mov
imull
push
adc
outsl
insl
mov
jecxz
fistpll
cmp
outsl
mov
fstpl
or
aam
andb
mov
mov
jecxz
cs
sub
lret
dec
push
cmc
mov
push
cs
insb
dec
fists
sub
loope
push
cs
out
jne,pt
dec
inc
cli
test
das
cmp
ljmp
cld
jmp
xor
mov
sbb
cmp
dec
push
loopne
lock
imul
gs
ljmp
and
fistpll
dec
jne
rol
dec
dec
call
push
dec
ds
je
xor
sti
lods
adc
and
push
mov
or
cmp
test
stc
xchg
mov
push
je
jae
out
movl
add
shrb
mov
and
es
dec
gs
xor
sarl
mov
push
xchg
aas
mov
cmpsl
cmpl
out
pop
jge
out
dec
or
xlat
divl
fbstp
shl
ja
out
fadd
mov
lock
mov
sti
popa
mov
push
scas
aaa
pop
mov
cmp
inc
and
insl
loop
fstp
cmp
outsb
scas
test
rorl
cmp
es
or
and
sub
push
xor
push
dec
xchg
ret
stc
jl
fisttpl
sbb
popf
mov
outsb
or
mov
insl
jmp
mov
pop
aam
cmp
int3
cmpsl
push
movswl
pusha
divl
pusha
xor
sbb
jge
ds
lods
jl
mov
imul
mov
aaa
xor
fucomip
mov
rcrb
fldl2e
pop
jecxz
int
ficoms
push
sbb
mov
or
aad
xchg
aad
push
pop
push
jo
mov
lea
ret
jnp
test
sub
mov
pop
push
lea
js
ret
and
and
inc
fldt
pop
jo
outsl
add
dec
and
imul
xor
xchg
jmpw
test
das
sbb
lcall
sub
lock
jg
cmp
cmp
ret
push
repnz
push
scas
mov
sub
rcrb
ds
mov
fsubs
cmp
addr16
inc
cmc
mov
cmpsl
pop
outsl
jne
js
call
inc
add
cmpsb
fst
aad
loopne
xchg
out
xchg
cltd
mov
adc
aad
inc
lea
stc
mov
scas
jl
pop
adc
add
icebp
inc
adc
pop
xor
loope
jl
pusha
sbb
or
arpl
mov
jb
jl
sub
cmp
xor
es
lret
pop
xchg
fsubl
int3
pop
pop
pushf
lock
insb
mov
fisubl
xor
push
imul
inc
imul
xor
cmp
ret
js
or
cmc
mov
cs
rolb
movsl
xchg
pushf
les
cmp
pop
test
dec
xlat
pop
adc
dec
adc
clc
into
or
les
testb
mov
push
lods
xorb
hlt
xchg
push
mov
add
jle
mov
push
push
jb
cmp
inc
imulb
or
mov
mov
lret
ss
jecxz
bswap
aam
cmp
sbb
loop
lcall
rcr
inc
mov
sub
fsts
loopne
ja
cmp
insb
pop
js
cwtl
ljmp
pop
pop
xor
push
pop
jge
fs
inc
stos
in
sub
xor
xchg
jne
xor
jl
jb
xchg
sbb
mov
fnstenv
leave
outsb
or
pop
lahf
je
addr16
call
imul
cmp
insl
inc
in
sbb
dec
xchg
lock
into
call
repz
jns
fildll
jb
and
movsl
xchg
sub
sub
subb
outsl
adc
in
subb
mov
pop
or
xor
outsl
stos
std
imul
in
push
je
cmp
outsb
in
in
lods
test
add
jnp
aaa
scas
je
cmp
pop
xchg
cld
rclb
inc
outsl
mov
mov
popa
cwtl
cmp
pushf
mov
aas
or
add
jge
or
rcl
sahf
dec
test
mov
lock
xor
insb
sti
xchg
lods
xor
mov
cltd
pushf
xchg
jmp
dec
shlb
fidivrs
outsb
jge
push
xlat
mov
cmp
into
dec
jmp
mov
je
cmpsb
xor
cwtl
mov
dec
inc
movsb
pop
fldl
push
js
xchg
pop
pop
push
int3
out
out
sahf
mov
das
pop
adc
fucom
mov
fstpl
inc
cmp
mov
fsubs
aad
inc
mov
cli
divl
scas
js
lods
lcall
jbe
vmptrld
inc
leave
mov
int3
arpl
cmp
aaa
sub
into
jl
addb
mov
xlat
cltd
mov
arpl
push
scas
sbb
imul
lahf
pop
cmpsl
add
aaa
add
dec
dec
mov
mov
sbb
dec
inc
adc
add
mov
inc
adc
dec
mov
sbb
mov
pop
mov
mov
mov
cmpsl
xlat
push
sbb
add
push
or
jg
jl
pop
lock
pop
ss
dec
pop
lods
push
fiadds
cmp
push
int
out
enter
mov
mov
sub
in
jno
jbe
push
pop
out
adc
notb
rcrl
push
inc
enter
loopne
jbe
and
mov
or
sbb
insb
push
pop
jp
jle
mov
adc
nop
dec
sbb
mov
test
cmp
ss
fmuls
add
nop
mov
push
pusha
pusha
hlt
outsb
and
ffree
xor
stos
das
clc
loop
cmp
mov
scas
or
aad
fsubp
dec
cwtl
pop
jb
cmp
jae
daa
sti
inc
sbb
filds
mov
push
xchg
jecxz,pt
subl
orl
mov
ljmp
pop
in
test
loope
push
dec
stos
lcall
cltd
pop
aaa
fcoml
mov
adc
popw
cmp
jno
test
test
aaa
mov
insb
adc
mov
cmp
cmp
lods
fcmovnbe
add
or
nop
pop
mov
cmc
or
mov
js
add
test
add
sti
mov
aad
addr16
xor
test
aaa
mov
lcall
sti
pop
sub
out
and
pop
mov
fwait
push
es
ljmp
enter
push
push
cmp
xor
sbb
fcmove
lds
mov
mov
jle
cmp
sub
and
gs
test
stos
andb
mov
mov
div
loop
mov
jmp
mov
dec
and
out
xor
dec
bound
push
leave
pop
cmp
sbb
sbb
insb
and
cmp
rcr
mov
cmpl
jp
out
xchg
add
mov
pop
out
pushf
sub
dec
xchg
push
mov
cmp
cmpsl
cld
imul
popf
aad
sbb
push
rcrl
jg
jmp
int
cmp
int3
aas
xchg
sti
dec
es
and
and
mov
fcoms
cmpsb
ljmp
daa
pop
pushf
push
ss
xor
testl
add
inc
pop
and
add
lcall
loopne
mov
bound
cmp
xor
cmpsl
arpl
or
cmp
cmp
fldt
test
repz
bound
jp
scas
cmp
mov
mov
andb
push
pop
mov
push
movsl
and
jge
int
orb
btc
stos
and
movsb
cld
js
jb
cmp
or
addr16
lcall
popa
sti
lea
shll
dec
dec
lods
cmp
negb
inc
push
bound
pop
pop
xchg
inc
mov
jge
test
mov
js
fs
pop
aad
repnz
mov
loop
aam
lahf
daa
icebp
adc
out
test
mov
imul
negl
pop
data16
or
mov
cmp
cmc
adc
adc
into
lods
mov
das
push
outsb
je
adc
ret
ja
das
inc
dec
mov
popf
cwtl
int3
sbb
cltd
cs
scas
push
in
push
sbb
inc
stc
ja
into
dec
and
js
insb
inc
mov
sbb
lret
mov
push
pop
add
cmc
xor
xchg
gs
in
push
xchg
aaa
add
or
aas
out
push
pop
rolb
mov
test
fidivs
fs
dec
jle
jp
es
xchg
xchg
mov
gs
and
and
jmp
push
pop
mov
test
and
ljmp
pop
xlat
cmp
mov
push
repnz
stos
cltd
loop
lcall
lds
xchg
push
jg
pop
mov
lret
mov
dec
outsl
or
aam
xchg
push
outsb
xlat
push
xchg
or
adc
cltd
das
sbb
mov
aad
jnp
lcall
push
testb
insl
push
push
or
xor
push
les
push
scas
lods
hlt
push
cwtl
and
xor
ror
push
mov
stos
xchg
mov
shl
dec
xchg
clc
push
mov
push
add
std
mov
xor
in
rorl
mov
or
out
xor
cwtl
ret
xor
adc
or
push
xor
xor
test
pop
mov
enter
inc
pop
js
cmp
add
fldenv
int3
imul
rclb
jbe
fstpl
jns
popa
adc
imul
pushl
aad
xor
inc
xchg
mov
xor
mov
ret
ss
push
in
and
movsb
inc
data16
sbb
sbb
adcb
mov
push
aad
lods
bound
adc
repz
pop
in
insl
out
xor
sbb
ficomps
mov
sbb
ficomps
ror
nop
cmp
lods
pop
test
adc
mov
jns
addl
ds
mov
lcall
and
ficompl
lcall
mov
xchg
mov
mov
pusha
ret
jne
leave
mov
inc
sbb
xor
in
cmovo
and
pop
out
push
sub
jbe
or
mov
dec
stc
cmp
or
bound
cmp
imul
jno
jge
aaa
cmp
add
stos
repnz
rcrb
out
pop
push
sbb
popa
test
and
mov
jns
imul
pop
push
andl
fadd
gs
scas
pop
jno
in
test
push
jo
add
test
jecxz
pop
pop
adc
fnstsw
fldl
or
pop
adc
mov
insb
lahf
lahf
int
sbb
ret
repz
fisttpl
xchg
sbb
js
push
test
and
cli
xchg
cmp
aas
rcr
call
mov
pushf
jmp
int3
cmc
sbb
mov
pop
cmp
mov
outsl
fbld
lret
mov
js
cmc
sub
mov
stos
aas
cmp
sbb
add
xor
pop
jl
inc
dec
leave
inc
in
push
sbb
jl
jg
js
push
jno
jo
leave
cltd
push
leave
into
popf
push
xchg
mov
insl
mov
test
rcll
jle
movsb
test
idivl
pop
jp
sarb
xor
call
dec
cmp
mov
cmpsl
pop
scas
lret
mov
mov
xchg
xchg
push
cld
rol
movsl
and
cmp
repnz
push
data16
push
rol
add
add
jle
in
data16
cmp
cmc
dec
addr16
dec
add
ret
pusha
ds
push
incl
or
add
iret
nop
adc
dec
js
movsl
das
fsubrl
arpl
scas
movsl
aaa
mov
and
aaa
popl
pop
or
sbb
sub
jl
or
mov
es
push
cltd
jb
fmulp
push
mov
jmp
mov
pusha
mov
rolb
mov
xchg
lret
stc
les
jp
inc
lret
mov
gs
or
je
jns
enter
sbb
fsubrl
jnp
xor
pop
add
jo
dec
sbb
jno
or
lods
jecxz
mov
mov
push
insl
icebp
movsb
pop
xor
inc
fst
pop
arpl
in
mov
cli
adc
insl
mov
leave
imul
aam
divb
pusha
or
daa
cmp
lock
gs
push
orb
pop
mov
push
enter
clc
testl
push
jmp
iret
mov
outsb
xchg
dec
cmp
mov
out
call
xchg
popf
popa
pop
gs
add
fmuls
xor
pop
add
sahf
loopne
cli
pop
xor
pusha
adc
lret
and
mov
out
sub
adc
xlat
in
add
cltd
push
push
movsb
lock
push
call
add
int
fs
pop
roll
xor
push
inc
jg
test
movsl
push
lea
add
push
fsts
inc
dec
enter
divl
sbb
adc
or
dec
mov
enter
jns
int
in
push
inc
add
and
jmp
push
addr16
jmp
mov
pusha
sbb
xor
das
push
push
sbb
jmp
std
and
leave
jns
pop
popf
lahf
add
lods
jg
jns
pop
dec
outsb
sub
and
xchg
mov
jmp
dec
inc
inc
inc
jl
aad
adc
es
lret
lds
int
dec
int
mov
enter
add
dec
push
add
jb
push
movsb
sbb
jo
pop
mov
outsl
rep
stc
int
mov
movsl
pop
mov
jmp
sbb
and
call
cmpsb
punpckhbw
sub
in
shll
jo
mov
mov
ja
scas
push
repnz
or
jge
jecxz
jl
mov
out
cmp
in
push
out
xor
aas
ljmp
lret
out
pop
mov
cmp
out
jmp
mov
adcl
mov
push
or
cli
frstor
andl
test
test
repnz
inc
popa
ljmp
sub
lea
xor
inc
push
andl
add
scas
bound
fcoms
dec
int
clc
jnp
lock
xor
ja
loopne
pop
loopne
nop
sbbl
add
aam
sarl
mov
dec
movl
jecxz
sub
mov
xor
adc
bound
inc
xor
mov
push
pop
sbb
mov
mov
nop
sarl
xchg
in
push
dec
ret
or
and
sub
arpl
mov
iret
jo
add
fwait
xor
adc
fidivrl
jge
inc
jae
loopne
dec
mov
and
imul
iret
das
push
rol
mov
cmp
popf
jmp
sbb
mov
jno
das
loop
clc
inc
pushf
stos
sbb
pop
jmp
pop
mov
mov
sub
push
mov
cmp
js
mov
or
aad
std
ds
and
and
decl
jecxz
jbe
push
pop
push
dec
mov
daa
pop
pop
aaa
ss
ret
xorb
dec
mov
cmp
mov
xor
push
jl
ja
or
lods
js
rcr
hlt
push
scas
fcompl
dec
rcll
dec
add
in
add
xchg
ror
xor
mov
xchg
outsl
jnp
shll
leave
cld
xor
dec
mov
inc
cld
xor
pop
add
mov
sub
cwtl
mov
ret
leave
mov
ret
insl
add
leave
add
out
sub
bound
xor
dec
jmp
fs
int
mov
jle
stos
imul
mov
mov
mov
xor
sub
cmc
lods
nop
addr16
push
jno
stc
sub
xor
mov
and
aad
xor
arpl
and
outsb
push
inc
fcoms
ret
fstpt
idiv
dec
lods
mov
aas
fildll
into
pop
cld
icebp
cmp
hlt
add
xchg
jo
dec
or
push
dec
rorb
test
push
mov
inc
cld
adc
pop
je
sub
das
pop
adc
inc
imul
mov
inc
popa
jge
js
aas
inc
mov
sahf
push
add
push
pop
out
mov
sar
es
sub
pop
jo
jl
mov
sbb
xor
mov
mov
insb
xchg
mov
fdivl
pop
add
jecxz
or
lcall
fwait
or
fildl
test
mov
cwtl
dec
pop
pop
fisubrs
mov
jecxz
sub
cltd
jne
enter
mov
mov
in
pop
cmp
jmp
adc
lcall
pop
sbb
jnp
adc
in
dec
ret
dec
fists
test
shr
inc
push
negl
xchg
xchg
out
mov
cmpsb
xchg
test
jnp
xor
mov
xchg
inc
cld
sbb
jmp
lock
mov
in
jns
mov
mov
mov
bnd
cmp
scas
outsb
mov
lret
iret
inc
int3
and
mov
xor
lahf
aas
sbb
out
jmp
or
iret
mov
xchg
iret
mov
mov
arpl
lret
sbb
shlb
mov
roll
cld
xchg
push
or
sub
fistps
leave
das
test
inc
inc
aam
lret
pop
std
jmp
movsb
xchg
lods
lds
das
shll
sbb
mov
pop
shlb
push
pop
mov
sub
movsb
test
cmp
or
sub
mov
mov
mov
pop
or
stc
inc
push
mov
inc
push
es
fists
movl
jne
and
pop
inc
push
loop
ret
daa
cmp
or
or
mov
pop
add
dec
cmpsl
jb
arpl
xchg
xchg
es
add
pop
incl
add
rcll
adc
movsb
inc
adc
popf
leave
call
ds
push
push
out
lods
pop
call
inc
xchg
sub
and
loope
ret
bnd
out
hlt
xor
jecxz
ret
dec
jne
aam
clc
or
outsb
stos
jge
pop
adc
testl
xor
adc
lods
lret
jl
insl
xchg
mov
sbb
dec
fiaddl
icebp
jecxz
fnstsw
outsb
mov
hlt
xor
add
mov
xor
sbb
enter
aaa
and
scas
sti
nop
mov
mov
sbb
xchg
mov
xor
mov
jbe
lods
pushf
dec
dec
outsb
mov
outsb
mov
test
mov
push
repz
icebp
cwtl
xchg
mov
or
rcrl
mov
sbb
mov
repnz
fistpl
mov
pop
mov
roll
das
test
ss
in
mov
mov
sbbb
push
mov
lock
mov
pop
shll
ficoml
lahf
adc
mov
and
mov
sbb
cmc
nop
fldcw
inc
xor
inc
fidivrl
sub
sub
rorl
pop
nop
bound
mov
push
sbb
adc
aas
and
lret
pop
and
cmpsb
adc
addr16
ret
dec
or
xor
pop
inc
xchg
jecxz
or
mov
cmc
lds
adc
push
sub
jmp
in
out
add
fistps
in
push
daa
or
in
inc
scas
mov
jecxz
xchg
xor
imul
jge
outsb
mov
ds
xor
adc
add
lods
popa
aas
mov
inc
cmovne
popa
cmp
stos
test
push
add
outsb
inc
rorl
cs
neg
dec
sar
add
or
xor
mov
xlat
into
dec
push
fistl
loope
call
movsl
popa
push
std
inc
mov
or
push
js
out
sub
sub
sub
push
cmpsl
fs
test
xchg
and
es
lahf
xorl
xchg
enter
inc
popf
sub
jecxz
inc
sbb
pop
outsl
jns
fisubrs
dec
pop
out
adc
test
mov
jbe
mov
fnstenv
mov
arpl
aaa
mov
cld
cmpsl
sbb
jge
in
adc
mov
popf
mov
xor
and
sbb
adc
sub
jle
gs
iret
add
out
sub
mov
mov
push
les
lds
inc
jp
aam
cmp
mov
out
iret
rcl
jge
jo
mov
xchg
pop
lret
js
in
cmp
mov
xchg
stos
jne
sbb
jp
sbb
push
cmp
sarb
add
xor
mov
outsl
stos
cmp
jno
jl
scas
bound
sbb
ud2
xor
popf
xchg
pop
xor
mov
add
xor
xor
sub
in
lods
sub
dec
xor
pop
inc
adc
inc
sub
dec
mov
push
and
lea
std
add
xlat
cmp
and
enter
mov
sbb
pop
add
jno
mov
pop
sub
push
leave
std
xlat
jnp
aam
mov
mov
lret
cmp
jecxz
jae
pusha
test
dec
popa
lahf
dec
scas
cwtl
add
adc
jns
xchg
and
fidivrs
inc
and
inc
fwait
mov
jne
mov
push
mov
mov
adc
iret
jno
imul
rol
sbb
fnstsw
test
pop
sbbb
sub
das
clc
xor
lret
and
push
sti
out
sahf
cmp
push
fwait
lods
aaa
push
sbb
mov
or
cmp
call
push
shrl
cs
pop
add
lods
pop
and
rol
in
les
rcl
repz
adcb
ficoml
adc
or
xchg
push
insl
cwtl
xchg
dec
xor
xchg
xchg
sbb
jp
cmpsl
xor
adc
pop
mov
jbe
mov
cmp
test
dec
xor
mov
xchg
pop
push
mov
add
cli
outsl
cmp
jg
cltd
cld
adc
repz
sub
jns
lcall
jecxz
sahf
mov
pop
and
insb
pop
nop
dec
pop
mov
mov
inc
daa
daa
xor
scas
in
insl
or
cmc
aaa
out
mov
sahf
lret
xor
sbb
dec
cltd
ljmp
cltd
inc
lods
mov
inc
hlt
jecxz
jo
loop
ds
xor
jns
dec
int
movsb
cmp
gs
daa
fwait
ds
test
shrl
cmpsb
pop
std
addr16
mov
push
cmc
or
lcall
in
rorl
mov
hlt
cld
adc
outsb
mov
jo
testl
test
mov
je
and
sbb
jns
sahf
sbb
cmp
scas
outsl
sti
pop
pop
lds
sarl
mov
out
ss
in
pop
adc
sub
iret
push
add
loop
mov
mov
fstl
fwait
lret
add
stc
std
cwtl
and
pop
cmpsl
xlat
push
jg
std
lret
dec
mov
xchg
outsl
test
add
cmp
loop
mov
lret
mov
jmp
pushf
out
pop
adc
ret
inc
loop
xor
mov
sub
das
mov
or
in
xlat
mov
mov
and
cwtl
xor
adc
or
jg
cmp
sub
in
xorb
mov
into
ljmp
adc
test
cmp
sbb
dec
shll
push
cltd
out
mov
dec
test
sub
mov
jp
faddl
xor
scas
arpl
imul
inc
repnz
pop
inc
jp
and
adc
pushf
or
jnp
loop
cmpsb
or
jp
pop
mov
jmp
cli
cmpsl
dec
adc
sub
pop
pop
mov
pop
lea
jb
pop
sub
jl
xchg
loopne
push
ret
push
push
xchg
xor
push
repz
xlat
in
mov
dec
dec
inc
sahf
rcl
jg
popa
aas
stc
js
add
inc
sbb
test
lods
sbbl
std
loope
cmpsl
loopne
iret
in
pmullw
jle
std
ss
fcomp
popa
dec
dec
test
push
loop
subb
aas
mov
aam
stc
mov
push
fincstp
mov
fisubl
shrl
xor
daa
jbe
loope
ficoms
icebp
imul
xchg
nop
jmp
loope
cli
imul
sbb
adc
repnz
lahf
adc
xchg
mov
cmc
mov
jo
sbb
mov
iret
push
mov
cli
pop
faddl
or
mov
push
pop
lahf
dec
aas
fldl2t
int
jmp
mov
mov
jle
inc
jb
test
xchg
mov
nop
lcall
pop
mov
sub
pop
outsb
xor
rcrl
das
xor
xchg
xchg
icebp
sbb
imul
push
dec
add
dec
xorb
in
mov
inc
outsl
jle
inc
jle
mov
test
fcoms
xor
inc
pop
mov
fadds
add
jno
cmp
mov
ret
out
jbe
cmc
or
int
fcmovne
sbb
mov
pop
cmpsl
pop
out
adc
mov
lret
movb
int
rcl
mov
mov
cmp
and
stc
push
pop
dec
popa
int
test
inc
pop
xor
jb
decb
shll
xor
sti
push
xchg
ja
push
dec
mov
xchg
mov
cmpsb
inc
pusha
or
or
lret
jp
aad
cmpsb
mov
outsb
cmc
daa
or
xchg
fldt
xorl
hlt
add
adc
scas
cmpsb
pop
test
or
aaa
cmp
sti
inc
xor
cs
mov
jmp
test
xor
add
ljmp
shll
cmp
iret
sub
shll
push
add
sbb
testb
int
es
imul
add
sub
mov
lea
je
mov
add
stc
push
adc
stc
sub
nop
inc
or
lods
movsb
test
hlt
enter
jo,pn
and
pop
push
cmp
ss
into
mov
inc
sub
pushw
adc
in
lcall
inc
paddd
jnp
movsb
push
inc
leave
mov
mov
mov
fstpt
adc
push
xchg
lods
lods
mov
lret
inc
int3
fisubl
fnstcw
push
sbb
mov
mov
cmp
add
pop
outsb
aas
cmp
cmp
in
repnz
test
jp
repnz
pop
jno
std
cld
sub
ja
subl
sub
rclb
out
mov
repnz
mov
pop
xor
push
filds
fsubs
sub
arpl
push
pop
add
lcall
in
jp
dec
stos
push
cld
lret
xor
flds
or
pusha
cmp
jl
repnz
leave
pop
push
iret
stos
push
pop
cld
leave
lds
jns
cld
popf
add
adc
add
mov
das
movsl
adc
orl
mov
jl
jo
cmpsl
call
jge
popa
call
or
push
fistl
jmp
scas
in
lcall
xor
sbb
in
out
xor
test
xor
mov
xlat
clc
sbb
or
lret
adc
adc
sbb
cmpsb
fcmovnb
repnz
inc
mov
adc
mov
into
popa
or
imul
cmp
mov
dec
sahf
dec
push
mov
jo
jno
jb
ret
je
and
icebp
sti
push
xchg
das
cltd
pop
push
icebp
inc
push
in
shlb
cld
mov
fwait
cwtl
pop
mov
js
or
mov
addr16
movsl
imul
mov
out
add
push
xchg
push
movq
mov
mov
xor
test
dec
lods
xor
mov
test
movsl
mov
in
push
mov
in
cld
pushf
lds
jp
inc
ret
mov
stc
mov
adc
dec
fwait
mov
add
fucom
out
push
aam
idiv
int
jecxz
or
mov
daa
cmp
pop
or
pop
lret
add
cmp
stos
jecxz
and
inc
or
or
add
out
cmp
adc
cwtl
lea
or
mov
xor
addr16
pop
stos
iret
ss
addb
xchg
adc
inc
cmp
int3
mov
imul
push
jge
adc
push
insl
pop
inc
shl
test
add
cmp
or
and
and
sub
xchg
adc
sub
fs
test
popa
jge
pmulhuw
cmp
daa
mov
jb
dec
ja
lea
je
je
mov
jmp
xor
rorl
sbb
scas
aad
js
xlat
jae
and
adc
jle
rorb
int3
sub
lods
add
add
mov
sub
pop
dec
xchg
push
mov
clc
aas
lods
imul
push
in
xor
scas
cmp
insb
dec
int
test
aad
mov
sbb
push
xchg
les
aas
jmp
rclb
inc
push
sbb
fistpll
dec
sbb
rorb
mov
outsb
push
lcall
cmpsl
mov
xchg
mov
shrb
sbb
pusha
jns
push
pushf
cmp
xor
leave
inc
mov
das
dec
sbb
movb
imul
xor
push
jnp
jb
pop
or
daa
pushf
xchg
adc
mov
or
cltd
mov
sti
cmp
or
sub
xchg
cmc
das
fistps
out
inc
scas
icebp
je
inc
add
xchg
jae
push
cmp
xchg
push
or
adc
cmp
shrb
loopne
jb
jmp
mov
fisubrs
add
push
cmpsb
mov
and
das
dec
inc
or
add
xchg
xchg
cmc
jbe
shll
aad
mov
popa
xor
jp
dec
lea
out
hlt
cmp
jl
fstp
mov
jle
jle
fcmovnb
addr16
inc
cmp
and
in
push
fists
dec
fstl
jmp
inc
cli
test
cmp
sti
je
mov
jg
sub
sub
sbb
data16
mov
fstl
sbb
mov
jl
hlt
and
dec
pop
cmpsl
adc
dec
dec
push
dec
add
xor
mov
jmp
rcr
xlat
lret
or
mov
nop
subl
cltd
cmpsl
add
cmp
ds
stos
add
xchg
pop
jmp
fdivp
pop
dec
jmp
or
inc
xlat
or
jle
leave
and
test
pop
add
lret
cld
dec
ror
test
xchg
sub
mov
add
adc
push
push
ret
mov
aam
push
xor
fidivl
jo
or
cmp
jmp
ds
les
sbb
jo
dec
fmuls
gs
push
jmp
push
cmpsb
cmp
stc
mov
adc
sbb
int
pop
mov
loop
icebp
idivb
in
js
push
scas
fistps
or
sbbl
add
and
js
je
jmp
in
dec
mov
mov
pop
jp
fmuls
xchg
xchg
iret
xchg
jb
cmp
and
test
dec
adc
movsl
jg
sub
fiaddl
sub
iret
scas
cmp
push
popf
rcrb
fisttps
jns
jmp
ret
inc
dec
test
push
jecxz
cmpsb
test
adc
aaa
repz
or
sbb
fstpt
out
lds
lcall
dec
adc
dec
jnp
loopne
cmpsl
adc
call
push
mov
pop
pusha
inc
sbb
sub
fisttps
push
adc
mov
sub
cmp
mov
add
mov
jl
sbb
in
push
stos
push
adc
sahf
dec
call
jb
mov
cmp
stos
sub
es
loopne
outsl
pop
adc
lahf
test
xlat
adc
fcomi
inc
jmp
adc
sbb
push
mov
imull
popf
push
mov
outsb
xchg
int
dec
pop
shl
xchg
loopne
lock
xorb
icebp
test
pop
sub
fdivs
das
lahf
add
sub
xchg
loopne
inc
mov
push
lcall
or
mov
push
push
xchg
pushf
inc
push
scas
jno
sub
sbb
pop
sub
movsb
jbe
ss
jg
cmp
and
fwait
fwait
jbe
xchg
test
out
and
mov
fidivrs
push
and
mov
push
or
push
rorb
std
jecxz
push
outsl
sub
aaa
fs
ret
les
jnp
mov
aaa
imul
clc
daa
stos
ret
outsl
movsl
cltd
test
leave
cwtl
cmpsb
inc
lret
into
jg
stos
jg
add
stos
fimull
leave
adc
lcall
test
insl
xchg
das
xor
sbb
sbb
mov
xchg
xchg
shlb
popa
lahf
xlat
jnp
mov
pop
pop
mov
aas
mov
roll
xor
jmp
and
addb
mov
pop
adc
mov
mov
insb
loope
cmpsb
hlt
xchg
rol
mov
and
dec
dec
xor
mov
out
pop
jae
mov
ds
push
sbb
leave
fistl
xor
lods
adc
adc
movsl
aaa
jmp
ss
jl
push
pop
hlt
out
lock
jl
hlt
mov
add
push
lret
addr16
ds
push
adc
je
js
inc
into
std
fmulp
jo
test
jge
lahf
dec
add
into
jge
sti
ds
jo
push
jnp
mov
pop
inc
imul
mov
mov
pop
int
je
jno
jae
mov
inc
fwait
in
mov
mov
pop
aaa
movsl
mov
lock
mov
clc
inc
mov
notb
pop
or
ficoml
aad
mov
xchg
incl
out
cmpsb
mov
addb
out
ret
stc
mov
sbbb
jne
into
aam
cmp
fidivrs
cmp
inc
inc
xchg
jge
aam
adc
scas
daa
lcall
cmpsb
call
sub
add
mov
scas
cltd
cmp
test
shlb
xor
cmp
outsb
mov
pop
std
out
jae
mov
cli
scas
sub
lods
or
or
pop
loopne
sub
pop
jmp
lret
dec
adc
nop
mov
es
cmc
pop
addr16
jmp
or
rdpmc
or
fbstp
ret
cmp
jmp
xor
xor
xcrypt-cbc
cmpsl
xchg
shlb
mov
sbb
hlt
mov
ja
cmp
push
push
out
push
inc
mov
loopne
xchg
jb
adcb
clc
outsb
mov
mov
enter
jmp
mov
inc
rol
into
dec
adc
mov
push
inc
push
flds
mov
push
mov
lods
sbb
orb
lock
mov
xchg
xchg
dec
pop
adc
popa
fisttpll
std
push
stos
mov
scas
xor
call
lock
fldt
push
stos
mov
les
fsubp
jp
push
adc
xchg
in
movsb
lds
xchg
pop
ret
or
shrb
pop
shl
inc
ljmp
sti
adc
push
mov
lahf
push
and
sub
or
sbb
cmc
mov
add
lcall
scas
rclb
jp
mov
sbb
inc
inc
ljmp
movsl
sbb
sbb
out
imul
push
arpl
js
in
add
inc
mov
push
adc
or
xor
push
subb
add
mov
mov
add
xor
aam
jmp
or
jle
in
push
dec
xor
lock
jno
sbb
jmp
and
mov
push
cld
xchg
jns
mov
and
sbbb
movl
sub
insl
push
mov
mov
fstpl
add
jo
adc
fbld
lods
stos
ljmp
imul
jecxz
in
loope
int
sub
dec
cwtl
xor
rcrb
mov
pop
adc
pop
mov
jl
ds
add
mov
xor
jae
cli
sub
hlt
jne
or
sbb
fldl
jae
pop
aas
xor
in
insb
push
mov
movsb
ficoml
andl
std
sbb
addb
sbbl
loop
int3
pop
fwait
ds
lods
cwtl
mov
pop
loope
mov
push
mov
and
nop
test
sub
pop
push
das
jbe
dec
cmp
into
xor
nop
cld
les
or
inc
leave
xor
push
xor
mov
adc
pop
test
jl,pn
push
pop
cli
jns
das
mov
aaa
cli
aam
and
xchg
mov
mov
xor
pusha
testb
sub
shlb
jmp
pop
adc
mov
js
les
cmp
inc
mov
jp
lods
jae
call
and
jne
mov
jno
fcompl
push
in
ljmp
sahf
mov
mov
mov
lahf
out
sub
cmp
aaa
mov
sti
push
cmc
jne
out
ds
mov
popf
jmp
mov
or
mov
fstl
push
stc
shl
arpl
ficomps
out
pushf
out
lock
mov
lahf
or
cltd
and
fucomp
cwtl
add
lahf
movl
mov
lods
lea
stos
inc
mov
mov
sbb
mov
fsts
mov
cmc
cld
mov
mov
xchg
insl
jg
idivl
push
xchg
mov
stos
sbb
pusha
push
push
push
ss
push
orl
cmovb
cli
in
sub
inc
leave
mov
or
stc
cmpsb
loopne
cmpsl
xor
ror
add
pop
lds
add
sub
jno
in
fildll
jmp
pop
xchg
test
jl
or
dec
pop
add
das
mov
add
add
les
shll
sub
xlat
jp
into
jp,pt
xchg
insl
add
repnz
outsl
sbb
dec
lahf
push
dec
ret
sbb
or
outsb
outsl
push
push
fs
nop
insl
fistps
xchg
sub
adc
adc
pusha
sub
lret
out
mov
enter
jge
repnz
stc
mov
cmc
pushf
ja
rorl
loopne
into
push
insb
fstpt
lret
cli
xor
subl
adc
addb
mov
pop
loope
mov
push
mov
mov
and
test
jmp
fs
hlt
aam
lea
dec
push
push
dec
pminub
leave
popf
xor
sarb
mov
inc
mov
mov
shll
pop
sub
leave
push
ficoms
jecxz
int3
pop
test
sbb
or
xchg
cmc
jmp
xor
inc
aas
roll
pop
iret
jae
add
stos
jnp
and
lea
arpl
int
test
or
jne
cs
loopne
shlb
mov
repnz
testl
gs
xchg
inc
adc
rolb
cmp
push
jecxz
cmp
cmovl
inc
push
sbb
fdivl
xchg
scas
adc
jbe
push
lock
insl
movsb
jle
pop
aas
stos
aaa
in
dec
and
push
stos
xor
adc
imul
mov
mov
jae
out
pop
pop
add
adc
pop
adcl
pop
cwtl
mov
shll
lret
in
cmpsl
cwtl
ss
jmp
dec
dec
cli
rcr
cmp
xchg
xchg
roll
sub
mov
mov
hlt
xor
lret
lock
rolb
push
sbb
inc
cmp
test
fdivrl
mov
mov
int
cmp
mov
scas
xchg
in
inc
mov
in
mov
or
lock
mov
mov
data16
mov
imul
sbb
scas
mov
xor
fisttpl
and
pop
pop
sub
imul
mov
cmp
ljmp
sbb
into
fidivrs
xchg
xchg
lds
xchg
mov
xchg
int3
cmc
push
xchg
outsl
xchg
mov
out
nop
into
sbb
inc
jge
mov
lock
test
and
inc
add
jbe
jns
in
call
lds
mov
int3
adc
mov
pop
insb
lock
in
add
rcll
fs
pop
outsl
shll
mov
sbb
cwtl
std
outsl
shll
out
adc
shrl
mull
and
daa
inc
sbb
lret
fmull
jo
repz
data16
dec
pop
mov
loop
outsl
jbe
pop
js
push
mov
add
jge
repz
mov
leave
mov
push
jl
out
lcall
les
and
in
shlb
pop
pop
in
repz
cmpsb
pusha
adc
lret
pop
push
rclb
push
sub
jecxz
pushf
sub
ret
fsubl
test
inc
jp
and
add
dec
sub
and
jne
repz
pop
daa
loopew
cmp
mov
popa
inc
shlb
push
lea
std
adc
dec
ret
std
rorl
in
jb
ret
cmp
or
jp
popf
daa
mov
imul
jl
addr16
xlat
inc
sbb
pop
jp
mov
sti
aaa
gs
faddl
sahf
xlat
push
lret
fwait
xlat
js
mov
fcmove
rclb
and
mov
notl
fadds
push
sbb
inc
out
mov
pop
rorb
dec
inc
lds
dec
xlat
inc
test
dec
cmp
cmpsl
xchg
pop
scas
xchg
xchg
lods
push
mov
add
fists
xchg
fidivs
dec
mov
adc
dec
ss
sub
in
shl
mov
xlat
imul
test
idivb
push
jnp
dec
push
imul
dec
mov
adc
aaa
sarb
ljmp
jmp
scas
pop
out
mov
inc
iret
jmp
mov
push
jmp
fadd
and
inc
ret
fdivr
fsubrl
xchg
lods
adc
mov
leave
xchg
pushf
xor
or
add
out
ss
pop
cs
stc
ficoml
xchg
insb
pop
outsl
sbb
or
ljmp
xchg
jmp
dec
mov
cwtl
ret
sbb
fldt
aam
xor
pop
jb
call
ret
cli
inc
push
loopne
adc
mov
mov
enter
popa
pop
mov
sub
xor
sar
cld
into
inc
cmp
arpl
jp
adc
ret
add
sub
mov
bound
xchg
push
lds
sub
sub
cmp
adc
lcall
aas
sub
lods
sub
icebp
fisttps
cld
xchg
pop
push
sub
push
adc
pop
lret
xchg
sbb
aam
cmp
cld
stos
mov
mov
xchg
cmp
pop
mov
int3
xor
pop
jo
pushf
outsb
or
jb
dec
sub
aad
fnsave
sbb
or
mov
jne
cmp
mov
mov
push
push
push
dec
stc
xchg
mov
xchg
int3
inc
arpl
sub
jle
scas
icebp
mov
shrl
outsl
leave
mov
cmc
notl
mov
out
mov
cmp
or
jmp
repz
std
xchg
push
cmpsb
jl
or
mov
mov
inc
jp
mov
sti
pop
dec
iret
mov
adc
or
inc
cmpsb
inc
jns
lret
lcall
fwait
add
add
fldcw
push
je
outsb
jo
xorl
add
dec
mov
repnz
repnz
aad
pop
push
loop
add
pop
or
mov
sbbb
les
jb
movsl
mov
ljmp
cmp
mov
inc
or
fwait
pushf
pop
push
push
lds
xor
mov
test
or
test
cld
xchg
repnz
jne
mov
and
mul
pop
pop
inc
inc
jle
cmp
sbb
dec
loope
rorl
mov
jle
test
cmp
adc
pusha
mov
fs
and
addl
js
outsb
fsub
mov
cmp
out
adc
icebp
inc
push
mov
xor
and
pop
jns
mov
push
or
xor
jne
lcall
push
les
sub
fcomi
rcll
testb
xchg
das
jno,pn
lds
fcmove
and
sub
loop
cmpsb
xchg
out
in
sti
mov
pop
scas
faddl
test
xchg
sub
nop
mov
sub
jb
add
dec
mov
rorb
lds
scas
xor
ss
mov
inc
test
jecxz
push
cmpsl
loopne
jle
push
enter
dec
int3
test
imul
mov
jle
cld
xor
cmp
or
pop
push
pop
test
mov
dec
add
push
dec
dec
and
addl
int3
data16
out
sbb
adc
loop
xor
dec
xchg
push
or
xchg
mov
ret
idiv
inc
pop
test
mov
or
mov
or
mov
mov
mov
xchg
outsl
sbb
mov
cwtl
inc
insl
adc
cmpsb
dec
aas
leave
sub
adc
sbbl
repz
pop
sub
mov
mov
dec
ss
test
jb
mov
sbb
lret
stos
popf
cmp
jb
push
cli
lock
fidivs
mov
sti
inc
add
cld
dec
or
jo
bnd
lret
inc
pusha
test
xchg
pop
sahf
sub
jnp
xchg
push
into
sti
inc
sub
in
lods
clc
ds
mov
lret
fwait
aad
mov
repnz
mov
and
push
stc
sar
fsubrs
adc
loopne
aaa
mov
or
add
sahf
push
int3
js
jl
icebp
or
push
sbb
cmp
popa
cltd
jnp
lahf
iret
xor
pop
imulb
adc
scas
xor
xor
pop
sbb
repnz
add
test
pop
daa
dec
ss
mov
and
out
xchg
hlt
pop
jl
cmc
loopne
add
cmpsb
pusha
jmp
int
adc
pop
pop
jnp
push
dec
jmp
inc
pop
add
lds
in
push
dec
lods
pop
dec
xchg
lea
addr16
jle
loopne
jb
es
icebp
push
inc
pushf
inc
mov
or
test
inc
leave
repnz
xor
jle
shrb
das
xchg
aad
xchg
push
xchg
cmp
jecxz
mov
xchg
pop
cmp
mov
and
push
ss
addr16
vmovdqa
and
or
cmpsl
push
or
mov
inc
mov
fimuls
imul
lea
jl
mov
cmpsb
inc
notb
dec
sub
cmp
pop
faddp
leave
movsb
inc
outsb
or
scas
cs
pop
es
cmp
jg
in
out
inc
or
adc
leave
pusha
add
das
out
xor
mov
into
mov
dec
inc
push
test
and
nop
repz
jg
pop
jae
mov
dec
mov
lds
dec
stos
scas
std
mov
test
orl
and
jbe
push
or
daa
pop
dec
or
fsubrl
out
enter
dec
xchg
lahf
insl
loope
cmp
insb
xlat
cmp
repnz
rolb
pop
pusha
adc
push
icebp
mov
nop
or
fiaddl
xor
cmp
movsb
mov
push
xchg
addr16
imull
jo
cld
ss
nop
orb
add
ds
mov
add
dec
dec
cmp
cmp
aad
push
cld
push
divl
shll
mov
add
movsb
ret
popa
stos
andb
insb
push
lds
mov
inc
outsl
and
jmp
mov
lcall
ret
mull
cmp
jle
add
jo
or
lods
jo
cwtl
sbb
jg
pop
pop
movsl
xor
inc
aas
test
xchg
mov
stos
pop
mov
iret
jecxz
aad
mov
push
ret
xchg
add
fbstp
xchg
mov
or
sub
dec
out
leave
gs
add
out
xchg
repz
xlat
inc
popa
pop
addr16
jge
adc
sbb
cli
sar
adcl
es
push
xor
jnp
xchg
pop
add
lds
popa
out
wbinvd
push
jne
mov
stc
jbe
sub
mov
pop
aaa
push
stos
xchg
ss
es
pop
inc
ja
mov
and
mov
in
loopne
in
add
mov
xchg
fwait
and
adc
jae
in
sub
jecxz
xor
repz
lret
and
mov
fmuls
mov
xchg
pop
cmc
outsb
cmp
negl
mov
xchg
sub
and
data16
push
fwait
ljmp
rclb
jbe
aas
push
sub
gs
movsl
adcb
mov
or
sub
jge
aas
push
dec
int
dec
lcall
pop
outsb
mov
jns
int
pop
or
xchg
cmp
lahf
jle
dec
push
mov
jae
in
mov
rorb
and
xchg
xor
mov
jg
jle
fcomps
mov
mov
inc
push
fdivrs
dec
or
add
jae
ss
push
inc
xchg
mov
inc
aaa
hlt
xchg
shlb
mov
pop
dec
cld
pushf
sbb
xchg
jae
and
dec
movsl
add
mov
aaa
movsb
mov
push
mov
and
sbb
faddl
inc
out
stc
lds
xor
jno
pop
sbb
pop
cmp
push
dec
mov
jo
jmp
xor
lods
mov
push
inc
and
mov
adcb
aas
cmp
push
mov
pusha
push
es
sbb
cmp
xchg
mov
sbb
jnp
jbe
sub
les
lds
dec
mov
out
std
lahf
push
movsl
divb
sub
push
mov
pop
pop
xchg
and
cmpsb
loope
das
rol
inc
lods
sbb
mov
mov
mov
jg
sahf
mov
aad
iret
ja
xor
mov
mov
or
cmp
mov
scas
scas
insl
fld
xor
jle
addr16
jmp
cltd
imul
ss
dec
inc
push
pop
xchg
sub
and
sbb
pop
cmpsl
mov
jae
test
out
call
int3
push
test
xor
or
push
mov
pop
adc
push
stos
sbb
dec
lea
ret
push
xor
aas
xor
jns
pop
sbb
xor
jle
rclb
ljmp
stos
cli
arpl
in
in
into
negb
xchg
stos
cmc
into
adc
push
sbb
sbb
leave
xor
mov
pop
insl
mov
add
add
daa
jp
arpl
cmpsl
mov
fstl
lret
lock
aam
xchg
out
sti
mov
bound
imul
and
scas
stos
mov
cmp
mov
aam
scas
test
popf
out
aad
in
into
sub
jo
sbb
mov
in
ss
xor
xchg
ss
fimuls
lcall
or
hlt
mov
test
mov
roll
jecxz
sbb
sub
pop
gs
sbb
inc
test
test
orb
in
enter
push
inc
paddusw
lcall
push
mov
inc
dec
mov
inc
cmp
jnp
js
push
sarb
pushf
adc
rcr
movsl
dec
test
out
pushf
pop
cmp
bound
in
push
xchg
mov
mov
jle
test
sbb
lret
sbb
sbb
fistpll
aam
sub
mov
insl
inc
dec
daa
int3
ficompl
daa
cmc
mov
out
push
or
nop
shrb
imul
jle
xor
inc
mov
pop
jbe
rep
jbe
jp
ret
out
cmp
dec
das
fwait
pop
cs
xchg
cmp
cmp
dec
iret
loop
fistps
adc
push
or
push
lcall
andl
mov
movsb
insb
mov
mov
add
daa
mov
lahf
mov
scas
jp
or
daa
insl
mov
pop
stos
out
flds
ja
xchg
xchg
and
rcrl
push
ret
cmp
idiv
dec
adc
add
subl
jbe
mov
call
sub
addl
std
or
fcmovb
adc
test
and
mov
loopne
sub
pop
mov
rep
aad
repz
mov
sbb
fimuls
ret
pop
ret
aad
pusha
cmp
cmpsl
jge
push
sub
push
pop
sub
push
xchg
cmpsb
mov
fists
pop
xor
outsb
in
loope
mov
inc
sbb
gs
iret
mov
pop
leave
mov
int
stos
mov
add
xchg
in
sub
adc
cmp
repz
jns
pop
add
scas
pop
jo
fsubrl
mov
cmp
jp
in
add
jno
out
mov
cli
cmp
push
push
roll
lods
aam
decb
xchg
out
add
cmp
outsl
in
sarb
dec
and
and
add
lret
je
insl
cs
ja
sbb
pop
lret
mov
xor
or
pop
leave
jb
fwait
dec
scas
loope
int3
mov
shlb
mov
mov
mov
xchg
in
jne
xchg
lock
mov
push
xchg
sbb
testb
rcll
insb
fisubrs
mov
jle
add
sub
mov
cmc
adc
arpl
inc
inc
fwait
ror
ss
aad
mov
mov
and
xor
xchg
mulps
pop
jle
add
jge
std
sbb
adc
adc
scas
cmp
jns
ss
js
adc
push
adc
mov
push
dec
js
aam
xchg
test
cld
leave
pop
jae
mov
or
dec
cmp
insl
jns
loope
fsubrl
add
rorb
pop
pop
inc
add
out
sbb
push
fidivrs
int3
shll
mov
xchg
test
dec
pop
jnp
push
sub
lods
push
shr
jnp
mov
aam
jmp
xor
scas
ljmp
dec
pop
outsb
cmp
dec
subb
jb
cld
loop
xchg
jae
adc
out
aad
sbb
sbb
xlat
inc
inc
adc
adc
lods
idivb
out
bound
cmc
jbe
cwtl
rol
aaa
rcr
aad
pop
outsl
sti
mov
pslld
push
loopne
jecxz
lea
movsb
lock
cmp
fcomp
pop
outsl
pop
push
cmp
insb
inc
mov
sub
sub
rcll
shl
scas
imul
jmp
lea
aad
int3
les
sub
push
or
or
push
pop
mov
push
in
pop
imul
jl
out
into
jnp
dec
jp
mov
push
push
mov
scas
je
xor
mov
mov
mov
out
out
mov
mov
jb
dec
sbb
filds
out
adc
push
icebp
mov
rorb
insl
ja
loopne
lea
testb
cmpsb
dec
pop
xchg
sub
pop
xor
and
movsl
jne
popa
icebp
mov
outsl
pop
rclb
push
cld
mov
push
movsl
inc
mov
cmpsl
cwtl
int3
dec
and
imul
mov
add
xor
lcall
fs
push
jp
arpl
stos
sbb
xlat
and
mov
mov
aaa
and
mov
sbb
pop
in
jnp
roll
and
cmpsb
sti
or
shrl
popf
adc
mov
add
stos
cmp
lcall
mov
dec
ficomps
insl
push
mov
pop
adc
xchg
loopne
mov
or
dec
and
arpl
scas
pop
mov
inc
movsb
into
cltd
aaa
stc
adc
mov
test
cmp
add
stos
clc
inc
fisttps
sbb
jae
fisttpll
popa
inc
jno
bound
mov
inc
fistps
gs
and
addl
xor
fcmovnb
lock
jb
or
std
loopne
std
out
pop
sarl
aaa
add
repnz
or
idivl
in
jo
fcmovne
xchg
lea
fs
mov
xchg
rolb
xchg
push
rorl
xlat
inc
push
mov
insb
dec
xchg
sbb
stos
cs
sbb
aad
jmp
push
aas
sub
movsl
push
arpl
rol
aam
pop
cld
cmp
sahf
pop
mov
push
ja
stc
pop
pop
std
enter
test
cmpsl
mov
mov
sbb
push
push
and
pop
fimuls
xchg
iret
xor
les
dec
pushf
dec
cmp
outsl
and
pop
pop
icebp
mov
fcomi
fcmovnbe
jge
lock
mov
stc
fcmovne
cmp
push
sar
mov
mov
lcall
pushf
sbb
iret
mov
mov
inc
and
fistpll
or
lods
jb
pop
je
push
add
cmp
mov
cmp
ret
out
jmp
nop
pop
or
push
mov
dec
push
or
iret
xchg
lahf
ret
std
out
addl
gs
cmp
fbld
jg
jmp
cmp
pop
nop
into
fwait
mulb
add
in
fcomps
cmp
and
jbe
stc
or
mov
aam
sbb
add
sub
or
dec
pushf
or
ljmp
inc
mov
dec
sbb
pop
cmpsl
xor
cmc
sub
das
fiadds
push
or
insb
paddusb
jbe
mov
sbb
cltd
add
mov
popa
mov
adc
mov
outsb
jo
rorl
fsubrl
inc
pop
or
in
inc
testl
ret
sti
lahf
jbe
std
mov
arpl
mov
fsub
shrb
jg
inc
test
in
xchg
movsb
xchg
jns
lock
mov
pop
nop
sbbl
jb
or
movsl
dec
insl
and
sbb
je
push
xchg
add
movsb
sub
fimull
mov
loopne
jmp
scas
das
stos
scas
popa
adc
insb
imul
dec
addr16
mov
outsb
xchg
sub
jnp
das
lods
and
arpl
aam
add
jno
aad
or
outsb
jecxz
cmpl
out
sbb
in
fs
sbb
dec
aaa
xchg
xchg
xor
daa
or
ret
cwtl
and
js
inc
cwtl
cmp
cmp
lods
frndint
and
xchg
popa
xchg
jns
sbb
and
sub
fbstp
lea
pop
push
jne
jecxz
push
xchg
pop
rorl
out
jp
cmp
bound
lds
paddw
cltd
fsts
adc
add
ss
adc
imul
ret
push
lcall
fsubs
jge
fcmovnbe
mov
movsl
sbb
fidivs
xchg
repnz
cmp
shl
stc
nop
mov
sti
icebp
inc
in
int3
xchg
sub
imul
rolb
or
push
or
mov
inc
push
lds
jns
cs
movl
loope
mov
or
stos
add
push
cmp
xor
js
test
popa
add
sbb
arpl
hlt
push
sbb
xchg
addr16
sub
dec
loopne
and
mov
dec
push
mov
xchg
pusha
jne
and
or
jge
jns
cmp
mov
dec
jnp
mov
lock
adc
cmp
fwait
xor
pop
call
lret
xor
mov
inc
fmul
jo
bound
imul
sbb
fildl
dec
cmp
imull
imul
lret
mov
mov
loop
mov
cmp
fiaddl
mov
roll
scas
inc
jge
in
shlb
mov
xchg
jo
jae
inc
fadd
flds
xor
inc
inc
orb
lods
sub
subb
sub
adc
add
aam
xor
xchg
mov
bound
mov
fstl
inc
fisubl
enter
in
dec
pop
pushf
lods
testb
fisubrl
and
mov
pop
arpl
loopne
sub
in
jp
hlt
test
xlat
xchg
loopne
popa
cmp
movsl
shr
mov
sbb
or
aas
sbb
xor
inc
popf
xchg
sub
jmp
inc
scas
jecxz
addr16
cmpsb
push
ss
inc
mov
jmp
std
pop
sub
cmp
adc
push
fld
jp
inc
xor
insl
mov
push
adc
out
dec
jp
jmp
andl
lea
out
mov
ficomps
push
imul
or
sbb
adcl
jnp
pop
hlt
fiaddl
scas
shr
shrl
cs
cwtl
lret
mov
sub
rol
mov
cs
jno
pusha
ja
xchg
push
out
jecxz
neg
js
mov
push
ljmp
mov
mov
push
incb
mov
repz
ret
add
dec
sahf
scas
stos
cmp
mov
xchg
lahf
in
jg
add
fisubrs
fldl
fnstenv
aad
add
out
or
arpl
repz
scas
out
incb
push
xor
add
cld
mov
mov
daa
in
jecxz
jbe
and
mov
fucomip
and
aam
ja
xchg
push
in
mov
xor
mov
testb
pop
sub
shl
or
lea
ds
push
andl
arpl
dec
rcl
call
push
or
insl
cld
fsubr
sbb
popa
stc
adc
ficoml
pop
in
lods
xchg
add
lods
into
leave
aas
mov
pushf
adc
andb
mov
adc
fs
rorb
lahf
imull
movsl
jge
pop
xchg
ja
mov
in
sbb
int3
dec
xchg
xchg
data16
pop
in
sbb
das
daa
mov
cs
inc
test
jns
mov
ret
mov
and
or
js
pop
rcrb
push
decl
xor
and
mov
lret
mov
jg
mov
daa
sbb
jge
jecxz
push
mov
jmp
push
push
into
inc
arpl
inc
shrb
rclb
cmp
jg
lret
push
mov
mov
xchg
insl
dec
lods
cmpsl
mov
cli
xor
cwtl
out
pop
aam
and
fnstsw
mov
pop
aad
test
jo
lret
aam
pop
mov
out
sbb
sbb
inc
push
dec
aaa
movsb
mov
mov
aaa
repnz
or
fidivl
ret
out
loopne
jne
push
iret
imul
xchg
stc
push
fisubrs
in
add
push
sbb
push
mov
adc
mov
sbb
imul
add
aas
iret
cli
pop
xor
cltd
jecxz
mov
imul
xor
mov
jo
pop
repnz
fimull
iret
push
sub
int3
jg
xor
out
pop
cmp
movsl
lods
push
mov
and
outsb
pop
shlb
pop
mov
popf
xor
movsl
mov
sbb
adc
cmp
movsl
lret
push
add
mov
orb
mov
pop
icebp
pop
adc
mov
push
inc
xor
fs
arpl
repnz
int
mov
cmp
push
cs
in
mov
addr16
int
stos
ss
inc
je
test
daa
xor
fstp
adc
sub
push
pop
mov
scas
inc
or
sbb
jmp
into
movb
sub
stos
cs
fwait
cwtl
fsubp
inc
push
scas
js
out
push
xor
jmp
pop
pop
sub
lret
int
push
pop
call
cli
or
stos
jecxz
pop
fidivrs
mov
inc
insb
iret
pop
roll
mov
cmpsl
or
xlat
adc
imul
mov
mov
sar
dec
sub
mov
xor
lods
jae
test
mov
xchg
out
xor
fwait
iret
ljmpw
inc
sub
mov
inc
movl
and
int
es
fs
popf
cmp
and
mov
xlat
test
fdivr
push
xchg
xor
push
test
in
xchg
sbb
adc
xchg
mov
cmovb
jle
das
push
clc
jg
mov
stos
push
mov
hlt
push
enter
mov
or
in
popf
testb
ret
dec
jp
xchg
test
jge
mov
mov
outsb
das
in
xchg
movl
and
out
rcr
and
add
jns
xor
addr16
cs
inc
ret
jo
inc
sub
ret
std
xchg
xchg
inc
dec
sub
sub
adc
or
pushf
xor
das
mov
test
mov
pop
xor
in
lock
cmpsb
cmp
mov
ds
outsw
mov
cmp
fimull
inc
xchg
shrb
pop
adc
leave
repnz
scas
popa
out
imul
loope
test
testl
andl
hlt
mov
push
dec
outsl
fldl
jbe
shr
mov
jecxz
mov
jnp
gs
inc
daa
add
pop
sub
dec
pop
bound
lock
popa
lds
xchg
jns
sbb
ret
ret
cmp
jne
sbb
xchg
xchg
das
mov
xchg
inc
cli
mov
xor
icebp
loopne
sbb
loope
xor
jmp
or
fsub
out
dec
dec
mov
movsb
inc
stos
cmc
test
pop
ss
and
or
ljmp
aam
loopne
push
aas
mov
ficoms
addr16
lret
sbb
mov
mov
push
push
adc
sub
or
jg
cld
sbb
sbb
push
pop
jmp
xor
arpl
xchg
mov
ds
lods
push
fincstp
push
push
pop
dec
mov
dec
jne
imul
js
add
ffreep
add
rol
test
cltd
and
ja
and
js
bound
or
lret
fdivrl
add
cmp
and
aam
adc
movsl
mov
es
in
shrl
lea
sbb
imul
mov
sbb
mov
push
dec
and
insb
movsl
leave
lods
dec
and
outsl
das
ja
in
insl
fdiv
aas
jge
xor
subl
cmpsb
cmp
nop
jp
jns
mov
lahf
lret
fs
daa
pop
sbb
lahf
dec
xchg
add
lret
fdivr
cmp
outsb
mov
cmc
jle
ljmp
data16
aas
cmpsl
insb
cs
cmc
clc
pop
cmp
sub
icebp
jge
add
std
mov
mov
fstpl
push
ss
push
sbbl
mul
inc
cmp
movsl
std
xchg
push
pop
pop
adc
gs
data16
push
pop
insb
rcll
lods
insb
push
push
dec
inc
ficomps
mov
jno
jge
shll
sbb
add
lret
sub
iret
lret
push
out
insb
push
cs
pushf
repz
push
mov
adc
sub
sub
cmp
push
push
movsb
xlat
rcrb
sti
push
in
iret
dec
mov
cmpsb
pop
mov
lods
push
lods
adc
jmp
test
push
or
push
xchg
push
ret
dec
gs
push
push
into
and
aaa
dec
inc
xchg
sbb
dec
jecxz
das
cli
xchg
loope
test
dec
sub
inc
pop
jmp
sbb
mov
call
jecxz
out
outsb
rorl
jne
sub
push
jns
mov
push
stc
imul
cmp
mull
pop
fistl
movsb
jp
rcl
mov
fs
sub
aam
add
xchg
andl
sti
testb
aas
jbe
imul
xor
mov
jbe
and
into
cmp
pop
inc
loop
pushf
flds
mov
movsb
test
mov
loopne
push
mov
or
push
or
mov
mov
sbb
mov
aam
stos
in
mov
in
pop
jns
int3
in
imul
pop
call
call
fwait
xchg
insl
stos
jmp
enter
add
push
or
lahf
mov
mov
xchg
xchg
sbb
out
mov
inc
and
pop
and
inc
and
cmp
and
inc
xor
movsb
stos
and
imul
mov
mov
and
push
dec
sahf
xor
imul
nop
leave
outsl
frstor
out
fwait
jecxz
push
cmp
imul
and
jl
loopne
lea
mov
outsl
mov
imul
pop
dec
hlt
pop
inc
cmp
xchg
add
xchg
clc
in
mov
mov
pushf
push
and
xchg
xchg
mov
fisttpll
call
ds
stos
xchg
roll
jecxz
push
mov
rol
fwait
ds
stos
dec
xchg
adcb
aaa
pop
add
push
sub
xchg
ds
aaa
mov
and
pop
pop
sbb
cmp
sbb
fildl
leave
sub
xor
xor
or
dec
ret
movsb
sbb
and
repz
pusha
in
pop
ds
je
ficoms
addr16
rcrb
cmp
repnz
idiv
cmpsl
cli
pop
xor
iret
xor
insb
mov
aaa
cmp
out
fstl
jbe
sub
ja
addr16
js
jp
enter
push
aad
gs
ljmp
lds
dec
dec
mov
fs
sbb
ffreep
test
fwait
xchg
fimull
out
fsincos
aas
pop
hlt
mov
addr16
pop
push
cmp
lret
cmpsl
mov
je
shl
add
ret
data16
js
adc
into
in
fwait
xor
addl
add
pop
sbb
and
xlat
inc
std
popf
data16
testb
jl
fadds
xchg
push
shll
lcall
inc
aam
dec
sub
outsl
sub
xchg
or
mov
lods
roll
gs
adc
inc
fimull
or
lea
pop
pusha
data16
faddl
jo
lret
xlat
mov
xchg
mov
rolb
push
test
test
xor
sarb
cmp
push
cld
dec
es
dec
push
in
add
pop
jne
movsb
call
inc
mov
push
aaa
sub
cmp
pop
out
loopne
dec
stos
out
enter
ret
pop
push
pop
xchg
inc
in
lds
ss
mov
fdivrl
fwait
sarb
ja
sub
xor
cmpsl
dec
nop
push
push
fimuls
dec
xchg
and
mov
cmpsb
mov
outsb
cmp
and
xchg
out
xchg
xor
pop
jae
xlat
xor
pop
push
test
hlt
add
or
stos
add
iret
mov
test
loope
push
jge
sbb
aas
cmpsb
fwait
sti
push
adc
xchg
mov
push
popf
cmpsl
dec
jno
pop
push
jnp
lahf
mov
jnp
sub
je
adc
push
xor
loope
xor
subl
adc
popa
xor
lock
lods
inc
cltd
mov
addr16
sbb
inc
movb
sbb
dec
lret
xchg
xor
ja
xor
inc
mov
xchg
mov
int3
sbb
sbb
pop
cmp
and
dec
outsb
mov
cmp
xchg
ret
sbb
push
mov
cmpsb
sti
cs
sub
inc
add
add
cmp
inc
jns
pop
std
data16
mov
mov
les
inc
iret
add
lahf
mov
pop
mov
inc
push
and
mov
aaa
iret
int
mov
xorl
sub
mov
inc
xlat
fs
mov
mov
arpl
out
rorl
pop
sbb
adc
ss
mov
sbb
je
test
and
xor
dec
mov
xchg
sbb
stc
jmp
push
xchg
lcall
pusha
jmp
popa
in
insl
mov
imull
add
or
add
sub
jl
fs
test
xor
pop
inc
mov
fwait
hlt
sub
sbb
scas
mov
std
add
icebp
or
sub
and
add
cwtl
test
dec
test
sbb
adc
pop
sahf
ret
xlat
sbb
push
cltd
xor
scas
adc
push
mov
jg
ds
int
pop
add
movsl
enter
adc
out
inc
cmp
sub
adc
aad
jbe
pop
sub
movsb
push
iret
pop
jb
aad
or
sub
shll
and
lahf
fwait
xor
hlt
add
xchg
es
xchg
jmp
pop
lret
scas
outsb
mov
adc
add
testb
and
pop
into
adc
fldenv
mov
cmc
adc
sbb
pushf
test
call
lds
lods
and
xor
sub
adc
fisubs
pop
int3
hlt
jle
ss
xor
loop
jmp
push
mov
sbb
shr
pop
sbb
ja
dec
loopne
scas
push
and
mov
sub
and
repnz
sub
ds
xor
inc
adc
dec
xchg
dec
sti
insl
shll
jns
lret
outsb
cli
or
arpl
jg
jmp
fimull
push
dec
stc
leave
int3
je
cmp
and
push
inc
mov
cmc
mov
mov
je
in
dec
push
in
and
adc
cmp
notl
test
pop
in
xchg
test
mov
push
xchg
fisttpll
movsb
push
push
dec
pop
push
push
mov
inc
test
xchg
xchg
push
xchg
cmp
scas
lret
push
cmp
push
adc
fldl
add
sbb
mov
pop
inc
mov
jne
xchg
mov
cmp
shr
and
inc
jnp
inc
das
out
jo
cmp
jp
dec
push
sbb
xchg
sbb
bound
aas
xchg
mov
mov
aad
sti
pop
out
adc
pop
fdivp
add
outsb
insl
nop
add
push
sbb
cmp
pop
xchg
inc
aam
pop
int3
xor
bound
mov
scas
xor
clc
or
push
xor
movsl
sahf
lock
subb
out
cltd
mov
mov
jns
inc
inc
inc
cmp
sub
fistpl
sahf
cmp
lcall
idiv
inc
add
out
cmpl
jge
outsl
iret
cmc
lahf
data16
jmp
out
test
and
mov
test
or
notb
push
leave
gs
pusha
clc
cli
jecxz
sub
xchg
mov
shll
out
push
out
jg
movsb
jmp
mov
popf
insb
aaa
mov
test
mov
cmp
fnstsw
jns
je
insb
jo
fld
xor
pop
mov
xchg
mov
sarl
adc
rcrl
add
stc
cwtl
jg
push
pop
fdivl
fdivr
outsl
add
adc
or
xor
cld
into
cmc
mov
and
cld
push
or
leave
outsb
icebp
pop
out
shlb
or
mov
rcrl
pop
mov
leave
sahf
pop
dec
imul
into
xor
jbe
sub
xchg
cmp
lret
mov
test
sub
lret
mov
adc
aam
sub
add
push
jae
ret
dec
xorl
orl
ficompl
xorl
js
dec
mov
pop
lcall
lds
mov
and
inc
mov
mov
int
stos
pop
and
sub
cmpsl
add
xchg
testb
mov
cmpsb
pop
add
add
js
dec
mov
dec
xchg
rorb
dec
jo
js
sbb
ljmp
xchg
fiadds
sbb
cli
mov
jb
or
sub
in
jno
or
ss
or
push
push
add
fisttpl
sarb
pop
xchg
jnp
sahf
je
mov
mov
roll
xlat
jl
in
jae
shlb
pop
xor
cltd
jp
icebp
scas
ja
xchg
imul
cmp
divl
movl
call
ficomps
fsts
xchg
popf
mov
mov
int3
and
sbb
jae
mov
jg
xor
or
jne
push
orb
ret
daa
cmpsl
ret
push
cmp
pushf
mov
dec
xchg
fcmovb
les
or
jo
out
or
in
imul
sub
pop
or
jge
add
sqrtps
adc
push
pop
pusha
push
call
gs
out
in
inc
insb
lcall
daa
mov
mov
mov
sbb
aad
inc
jo
xchg
std
mov
out
push
sub
loopne
enter
push
mov
fsubrl
ljmp
mov
pop
fdivl
ljmp
sbb
addr16
or
jne
std
mov
push
pop
mov
adc
or
mov
add
lds
xchg
sahf
outsl
mov
out
lods
inc
add
mov
pushf
sar
mov
mov
and
in
jno
cld
dec
pop
jnp
sbbl
jmp
aas
xchg
pop
pop
cmp
mov
sub
jbe
stc
lock
repnz
xchg
sbb
inc
mov
xor
es
lret
push
xchg
shll
xchg
vpsrld
xchg
sarb
xor
cmp
stc
push
in
push
ficoml
push
test
push
sarl
cmp
pop
sar
or
sbb
dec
stos
aas
xor
test
and
sbb
out
ficompl
xor
pop
jle
sub
shr
fcmovnb
sbb
xchg
fcoms
icebp
mov
inc
mov
add
push
scas
inc
or
xor
xor
aaa
cwtl
popf
test
add
mov
mov
mov
mov
lret
cmp
and
aas
mov
add
adc
insb
or
rol
push
or
aad
in
pop
jmp
ret
pop
in
xchg
mov
aas
dec
pop
push
popf
push
jle
xchg
inc
inc
cs
xchg
mov
jge
aad
stos
inc
push
out
cmpsl
pop
std
dec
mov
mov
pop
icebp
jg
xchg
or
push
mov
mov
fidivs
jne
mov
inc
into
adc
insb
push
arpl
jo
gs
out
in
ret
movsb
xor
sub
fstps
push
ret
and
movsb
mov
fs
pop
addps
pushf
push
inc
mov
movsb
shlb
les
mov
adc
add
cmpxchg
sti
xor
xchg
xor
int3
push
jne
add
xchg
mov
lret
or
mov
and
bound
jl
mov
ret
inc
std
bound
sar
adc
fwait
js
iret
fstpl
lods
dec
jmp
aaa
fbld
or
jne
and
mov
mov
mov
sbb
sub
repz
xor
out
xor
mov
stos
cmp
call
loopne
aas
pop
sub
xor
or
lea
cmpl
aas
and
and
adc
rcl
pop
add
cmpsl
js
and
push
xor
inc
addl
ljmp
jbe
loop
sbb
ret
push
nop
ds
sub
fstpl
jo
pop
bound
clc
mov
jb,pn
lds
cwtl
nop
lods
push
sahf
rcr
adc
out
jecxz
testl
or
xor
adc
out
scas
int3
xorl
xor
jb
sbb
lret
xchg
push
dec
fwait
and
inc
xor
bnd
loop
out
xchg
aaa
in
push
lea
push
lods
je
lds
rorb
inc
xor
popa
sbb
jne
sti
jmp
out
cmovns
lods
xchg
leave
test
test
out
int3
fmull
pop
adc
adc
push
movb
fdivrl
push
add
mov
sbb
les
push
out
loop
test
xorb
bound
pop
xor
popf
dec
shr
xor
mov
and
daa
roll
cwtl
or
sar
mov
imul
fnstsw
divl
mov
sub
mov
xchg
push
pop
loop
mov
push
adc
rolb
roll
push
jmp
or
rolb
inc
pusha
mov
stos
cmc
dec
loopne
mov
sbb
iretw
popa
mov
sub
fcmovnbe
xor
mov
push
cmp
push
aam
dec
mov
aad
lea
lock
mov
xchg
ss
fcoml
or
dec
into
and
add
add
xchg
scas
int3
xchg
cmp
adcb
sub
or
fsubrl
and
xor
lds
or
cmp
aad
sbb
jg
dec
sub
sti
flds
ds
adcl
sbb
mov
jns
dec
hlt
cmp
rcrb
adc
and
xor
sub
out
shll
add
movsb
push
pop
or
scas
iret
jmp
out
je
test
insb
dec
aas
push
pop
sub
imul
add
add
aad
xchg
scas
sarl
add
inc
pop
xchg
int
pop
outsb
nop
mov
ljmp
jb
andb
aam
loop
aaa
add
stos
push
imul
leave
popf
jl
jg
jp
cmp
pavgb
fists
pop
fisttpl
and
fwait
inc
fstpl
lret
in
outsl
lret
js
lcall
xchg
xor
and
sbb
sub
or
xor
call
push
push
or
xchg
pop
or
cmc
popf
movsl
jle
push
mov
adc
and
mov
sub
mov
xchg
aam
mov
push
out
jo
xchg
mov
sbb
test
cld
mov
push
push
jp
test
cmp
inc
cltd
sbb
andl
cmpsl
pop
push
pop
jle
cwtl
add
shlb
inc
pop
pop
sti
and
xor
mov
adc
push
jo
mov
push
ja
addr16
pop
movsb
aaa
iret
mov
mov
sbb
cmpsb
mov
and
dec
les
push
iret
jl
xor
int3
rcll
icebp
jne
adc
das
std
cmp
xorl
outsl
loope
mov
lds
das
jecxz
xor
or
xlat
ror
nop
cmp
test
adc
xor
inc
out
leave
jmp
jns
mov
mov
hlt
and
mov
dec
xchg
push
mov
and
and
shr
xchg
sub
divl
adc
push
mov
push
out
stc
cmpsb
mov
fidivs
sbb
sbb
in
or
lods
shr
push
push
jge
inc
jae
inc
decb
es
into
jge
dec
icebp
inc
cs
dec
mull
imul
inc
out
insb
ret
jns
sti
cmovne
adc
inc
movb
in
xchg
add
add
incb
icebp
gs
imul
dec
ffree
adc
xor
rcr
mov
ljmp
sub
jnp
out
pop
cli
add
add
in
enter
adc
repnz
push
jno
cmc
call
inc
repz
movsb
mov
add
movl
inc
inc
xchg
sub
xor
fisubrs
mov
into
or
aam
shrb
nop
cmc
loope
jecxz
std
jecxz
mov
pop
ret
sbb
sbb
jne
mov
pop
stc
push
movsl
test
dec
pop
mov
sub
lret
jmp
inc
jp
mov
xor
adc
adc
push
popa
mov
iret
in
dec
and
xor
out
or
dec
mov
sbb
mov
jne
ja
loope
setae
mov
lods
mov
xor
mov
adc
mov
mov
xor
or
mov
mov
xchg
outsb
inc
mov
dec
mov
mov
daa
push
es
rol
jle
mov
mov
fisubs
adc
test
dec
pushf
lock
dec
ja
push
filds
lea
jmp
pusha
cs
xchg
xchg
mov
loope
out
fcmovnu
mov
stc
jge
mov
pop
xchg
gs
or
or
fadd
rorl
push
loop,pn
sbbb
xor
mov
sub
lahf
lods
das
in
inc
pop
imul
push
sbb
jg
sub
sub
out
mov
xchg
push
cmp
inc
mov
ret
dec
add
pop
jns
sbbb
or
and
mov
pusha
loop
cmp
sub
fisttpll
pop
dec
push
pop
imul
andb
imul
xchg
xor
loop
imul
sti
mov
ja
arpl
es
fwait
ja
push
jge
push
gs
xor
mov
xchg
test
pushf
sub
iret
dec
cmp
call
xchg
push
sub
loopne
rcll
add
daa
adc
mov
or
andl
in
es
aam
push
int3
popa
or
push
addl
push
adc
or
add
adc
mov
jo
loop
popf
cltd
popa
mov
mov
push
les
mov
in
imul
scas
je
jp
cmpsb
adc
cmp
add
daa
mov
mov
das
push
cwtl
inc
and
mov
dec
jne
sbb
push
xchg
dec
or
aaa
jl
xchg
mov
stos
adc
cmp
addb
cmp
sub
lahf
sbb
add
pop
scas
dec
imul
pop
mov
repz
gs
cltd
mov
push
xchg
mov
mov
or
shl
cmp
inc
pop
mov
cmp
rorb
jp
xchg
or
push
fwait
xchg
add
js
push
dec
xchg
nop
dec
flds
fwait
sbb
pop
sub
or
lret
xchg
pop
inc
push
pop
jb
popa
repz
stos
idivb
sbb
test
and
add
sub
lods
mov
and
sbb
lahf
pop
dec
mov
jmp
or
sub
fdivs
adc
xchg
stc
popa
add
out
cs
jge
scas
mov
dec
mov
out
stos
sbb
icebp
dec
mov
shr
jb
sbb
xchg
andb
loopne
insb
xchg
xchg
loopne
jl
cmpl
mov
xchg
pop
cmpsl
mov
pushf
repz
push
pop
stos
mov
mov
mov
int
push
lods
add
cmp
in
enter
imul
outsl
clc
in
bound
pushf
jge
jbe
adc
push
sub
dec
sti
inc
stos
cwtl
xchg
mov
and
call
add
mov
mov
adc
push
fwait
mov
dec
rclb
jp
xchg
mov
or
jbe
jecxz
mov
jno
mov
sbb
mov
les
sbb
push
adc
sbbl
rcl
in
je
sti
xor
mov
push
int3
pop
inc
mov
int
push
cmpsb
add
jl
daa
mov
fcoml
sbb
sbbl
into
or
jo
mov
sub
lcall
mov
mov
pop
scas
outsl
enter
pop
and
ret
adcl
mov
flds
mov
xchg
xchg
dec
addb
testb
and
cs
jg
inc
cs
and
lret
mov
in
push
xor
cltd
xchg
sbb
push
callw
mov
imul
jecxz
adc
sbb
test
int3
inc
jg
xor
jg
cmpsl
and
cmc
loope
fcomip
stos
in
aad
sarb
jo
shlb
push
repnz
rcrb
sub
int
imull
test
sbb
addr16
push
adc
test
imul
out
fidivrs
out
adc
call
push
mov
data16
or
xlat
and
cmp
aas
jge
inc
dec
in
sub
cmp
test
pop
out
movsb
inc
std
pop
or
or
push
in
push
inc
cmp
sbb
es
jg
mov
lods
xor
push
inc
ret
push
mov
jmp
sub
or
jnp
jle
orl
mov
dec
sbb
inc
sbb
and
cmp
cmc
das
adc
push
inc
and
push
in
lcall
ret
aad
cmp
sub
es
cmp
hlt
inc
xchg
out
jg
pop
cld
push
xchg
push
movsl
enter
movsl
das
sub
insl
call
adc
dec
inc
xchg
stos
mov
sti
adc
mov
jmp
jg
mov
test
and
dec
xor
mov
repnz
outsl
and
or
jb
pop
fidivrs
sbb
mov
inc
fcoms
fbstp
cmp
adc
cmp
movsb
dec
or
je
lods
jp
xchg
mov
mov
jmp
jle
or
aas
sub
les
daa
pop
xor
lret
sahf
dec
jmp
sti
mov
pop
dec
sbb
and
addl
push
ja
mov
push
lahf
xor
sbb
add
aam
mov
cwtl
adc
aas
cmc
cmp
ds
cwtl
lock
xchg
and
inc
in
sub
pushf
ja
inc
jo
loop
push
dec
mov
xor
cmpsb
fs
loopne
popa
gs
dec
fnstcw
movsb
aad
and
enter
lds
sbb
sbb
mov
xchg
lret
lcall
out
scas
incl
jns
add
je
inc
inc
cmp
outsl
jmp
scas
xchg
push
jmp
icebp
pushf
jg
mov
lea
idiv
or
jns
cmp
sub
mov
sti
push
lea
bound
jne
jae
nop
or
mov
daa
movsl
sahf
and
fsubl
sbbb
xor
imulb
std
push
dec
sub
fs
ftst
stos
out
jae
into
aad
enter
jne
jo
js
jnp
or
loop
mov
enter
push
aad
dec
addb
push
dec
in
adc
frstor
cmp
or
cmpsl
fsubrl
movsl
repnz
sbb
imul
xchg
and
add
add
push
sbb
mov
pop
jg
out
jo
push
rcll
fdivs
pop
push
pop
js
sti
es
pop
pop
mov
mov
arpl
xchg
add
into
out
fmull
mov
push
inc
lock
insb
movsl
jbe
pop
jge
movsb
xchg
xchg
mov
dec
sbb
cmp
xor
movsl
dec
and
sbb
inc
pusha
test
inc
push
inc
xchg
and
mov
jle
push
xor
shr
stc
int3
sarb
sbb
andl
inc
push
pushf
idiv
mov
cld
xor
or
dec
test
ljmp
or
jmp
cmpl
arpl
mov
popl
adcb
stos
inc
cmp
test
push
loop
aad
xor
int
scas
popf
pop
adc
inc
dec
loope
sub
adc
data16
sbb
int3
out
sbbl
ja
rorl
mov
and
inc
cmp
add
pop
imull
mov
loope
fwait
dec
push
arpl
ret
jae
pop
mov
iret
ljmp
cmpsl
mov
adc
hlt
mov
push
cmp
orl
loope
xor
repnz
dec
dec
sbb
fimuls
push
scas
movsb
mov
mov
stos
bound
jae
cmpsl
repnz
lret
and
cmp
cmp
push
sub
xchg
repnz
aas
xor
js
or
mov
insb
arpl
lock
popa
lret
mov
mov
or
pushf
into
loopne
arpl
cli
inc
sbb
les
push
mov
vunpcklps
sub
cltd
jo
das
sbb
xchg
mov
rorb
sub
mov
sbb
xchg
or
dec
dec
lods
xor
cmp
xor
sahf
jecxz
aam
cmpsl
xor
mov
mov
sarb
mov
xorl
sbb
xorb
insb
shll
or
mov
js
mov
push
dec
fdivrl
cmp
ror
idivl
fstps
ds
push
mov
les
stos
fidivrl
cltd
int
js
sbb
mov
add
add
mov
jnp
lret
jmp
mov
jmp
fadd
mov
pop
dec
lcall
pop
sahf
lock
or
int3
test
movsl
mov
pushf
in
cmpsl
stos
mov
aaa
in
sbb
cld
std
adc
mov
cwtl
add
addr16
mov
xor
xor
ret
sbb
pop
xor
mov
rolb
sbbb
scas
push
xor
bound
aad
mov
fiaddl
push
pop
ljmp
fsts
lock
mov
mov
mov
add
popa
enter
int3
shrl
cmp
dec
mov
mov
jp
sbb
inc
icebp
repz
pop
fdiv
push
push
fstl
scas
or
pop
push
scas
inc
cld
and
mov
dec
test
faddl
adc
inc
out
loope
fiaddl
jp
test
sub
push
push
pusha
addb
sbb
jg
jecxz
rcl
xor
xchg
mov
cmp
cmp
out
sub
cmp
xor
pop
leave
add
adc
lret
aaa
pop
push
inc
jo
dec
mov
lock
inc
cli
add
adc
push
and
aaa
mov
or
test
add
or
jp
lret
pop
stc
int
xor
lret
xlat
int
push
pop
xchg
int
xor
lcall
out
sbb
pop
mov
mov
inc
push
adc
mov
pop
and
fcom
lahf
jl
test
dec
sbb
sub
push
mov
ret
out
dec
xor
int3
leave
std
push
sbb
jecxz
push
mov
adc
mov
mov
test
add
and
arpl
popa
sub
shll
jo
cs
push
cmp
and
xor
mov
int
js
push
add
pop
sub
fwait
in
rorb
outsl
mov
cmc
lds
sbb
xchg
in
or
sub
lret
inc
push
add
mov
outsb
out
test
mov
mov
dec
push
mov
sbb
loope
add
cltd
cmp
dec
pusha
lret
mov
add
or
sbb
mov
inc
bound
xor
add
lret
int3
mov
out
adc
pextrw
xchg
cmp
je
aaa
xchg
mov
mov
popf
out
pop
cmpsl
jecxz
jae
dec
iret
sar
test
cmp
imul
sbb
mov
test
lahf
sbb
jmp
out
mov
push
or
iret
mov
mov
push
stos
pop
gs
pop
pop
mov
stc
imul
hlt
push
jmp
aam
xor
incl
sbb
outsb
rcl
mov
ds
dec
sbb
xor
mov
scas
insl
mov
lret
add
jge
call
sub
cld
jge
sub
mov
bound
dec
enter
mov
add
jno
jmp
xchg
xchg
pop
ja
jno
fisubl
xchg
cmc
jnp
outsb
add
das
push
pop
imul
xor
mov
and
inc
xchg
mov
data16
leave
out
jge
loope
and
sub
sbb
pop
cmp
pop
push
je
lock
add
lahf
mov
push
sbb
add
loop
adc
in
xor
sti
sbb
test
push
stc
jecxz
xchg
sbb
int
pop
jb
sub
and
sarb
test
xlat
lret
sbb
jl
lret
pop
adc
mov
jecxz
clc
dec
fwait
aas
cltd
jle
inc
mov
lock
imulb
rorl
push
adc
test
cltd
in
cli
fsubr
adc
jl
add
add
out
and
sbb
and
mov
pop
leave
out
jo
xchg
sahf
fdivl
mov
lock
movsb
push
jne
lahf
xor
mov
mov
ss
inc
addl
xchg
dec
push
mov
enter
or
mov
aad
ficoml
shl
test
mov
test
ljmp
inc
in
mov
push
adc
sbb
cld
movsb
xlat
add
mov
jecxz
testb
mov
imul
adc
xor
pop
jecxz
push
xchg
cmpsb
mov
fcomi
jne
xlat
and
sbb
cmpsb
and
out
ljmp
mov
out
mov
inc
push
dec
aaa
cmp
lret
mov
nop
dec
icebp
pop
jnp
pusha
rcrb
fisttpl
jne
xchg
jge
mov
pop
cltd
scas
leave
mov
ss
test
in
cmp
iret
jbe
cmp
sbb
int3
cmp
sbb
mov
push
lock
jmp
lret
inc
test
stos
pop
pop
scas
or
sub
mov
cli
rorl
ret
sbb
data16
push
xor
int3
push
sbb
stos
loopne
ret
adc
adc
dec
fcoml
cli
gs
inc
stos
loop
add
testb
out
imul
nop
pop
cli
es
mov
out
daa
mov
and
ljmp
es
leave
adc
dec
add
decb
mov
cmp
fcmovnu
cmpsl
mov
in
and
inc
in
push
mov
loopne
xchg
stos
mov
insb
pop
add
pinsrw
sbb
xlat
jmp
aam
push
sub
lods
icebp
and
les
mov
cmp
cmp
pop
xchg
int
out
test
pop
push
addr16
aad
pop
cmp
or
pop
test
stos
xchg
inc
roll
fisubrs
je
dec
xchg
loop
dec
out
push
adc
mov
repnz
push
jne
mov
inc
stos
and
lds
xchg
lods
daa
bound
push
push
pusha
ljmp
loopne
fdivrp
mov
icebp
jg
cmp
adcb
and
adcb
jno
insl
lret
cld
cmp
js
or
push
scas
pop
mov
jb
cmc
cwtl
jp
or
mov
subl
mov
fcmovnbe
fiaddl
cs
mov
lods
and
dec
adc
std
cs
stc
pop
insb
or
add
push
mov
and
xchg
fwait
cmp
adcb
cmp
fstpl
push
test
ljmp
or
sub
incl
xor
ficompl
cmp
xchg
fimull
cmp
into
cmc
jne
fstpl
les
test
nop
in
fwait
cmpb
cmc
jne
rcll
push
mov
test
daa
and
push
push
fistps
sub
cmp
adc
mov
pusha
jnp
jne
xchg
xor
jle
ja
rcrb
and
ret
stos
or
testw
mov
inc
int
pusha
push
and
test
ss
mov
dec
and
scas
arpl
jno
out
sub
test
stos
sbb
pop
push
in
sbb
inc
sub
ret
jo
sub
sub
je
pop
aad
pop
test
test
adc
test
faddp
sti
push
loop
pop
xchg
sub
dec
push
movsl
cmp
sbb
ljmp
test
jp
out
cli
negl
ljmp
lock
popa
mov
xchg
cmp
and
jo
mov
push
lahf
call
push
jne
push
push
lds
ljmp
or
loope
or
cmp
and
out
lcall
add
dec
xchg
add
cmc
lock
pop
aaa
out
jae
add
fmul
pop
mov
stc
mov
sbb
cmpsb
shr
nop
mov
orl
mov
xchg
sahf
and
dec
shll
sub
cmp
pop
cltd
or
test
inc
jns
jge
fs
lret
xchg
iret
cltd
xchg
jns
push
push
out
cmpsb
fistps
in
out
inc
and
inc
clc
sbb
orb
mov
dec
push
cltd
into
in
or
add
sub
sahf
jge
imul
mov
lods
in
and
inc
mov
icebp
adc
inc
adc
mov
and
pop
mov
sbb
cmpsl
inc
scas
adc
adc
repz
ljmp
pop
mov
dec
sahf
mov
cmp
jl
pop
push
pop
xor
or
adc
inc
fmull
loope
and
and
shl
sub
jno
xor
in
call
cmp
ret
cwtl
add
addr16
xchg
or
mov
out
mov
mov
and
mov
sub
add
dec
jge
cmpsb
dec
push
std
jl
xchg
cmp
popa
or
pop
mov
mov
test
lock
jbe
fldl
into
push
test
jbe
fiadds
repz
daa
std
loop
mov
and
lret
pop
add
ljmp
loope
mov
mov
and
dec
pop
imul
mov
inc
push
in
popa
movsl
nop
rorl
shr
dec
movsl
stc
or
adc
mov
cwtl
inc
sub
ret
std
push
cmp
call
inc
jo
daa
and
pop
pop
inc
xchg
out
add
ficompl
fwait
mov
sahf
sbb
adc
mov
in
jl
loopne
js
pop
cmpl
add
dec
lock
mov
inc
mov
inc
dec
cld
and
mov
jno
xchg
pop
lods
inc
gs
cmc
pop
sarl
jge
jne
pop
iret
fcomp
inc
loope
mov
sbb
sahf
xchg
xor
rorb
mov
in
push
test
xchg
loop
xor
lret
imul
pop
std
rcl
jp,pn
jl
fisttps
sub
adc
jns
enter
mov
mov
enter
cmp
inc
mov
jecxz
and
pop
mov
insb
out
jg
or
pop
icebp
mov
mov
ss
mov
adc
fimuls
popf
adc
testl
lods
je
inc
fs
add
pop
pop
jns
push
in
ljmp
cmp
lea
sub
mov
rcl
and
mov
push
ss
push
movl
hlt
dec
outsb
dec
or
adc
mov
inc
insl
cmc
cmp
jae
xchg
adc
out
ss
cmp
pusha
cmp
fimuls
inc
adc
jb
aam
or
es
jp
mov
dec
inc
pop
jmp
nop
jnp
pop
xor
vmulss
sub
insl
loopne
cmp
out
lahf
ficomps
mov
test
lret
rorb
dec
lods
pop
stos
std
bound
mov
dec
popa
mov
in
dec
negb
rorl
setne
add
xchg
in
sub
xchg
sahf
mov
jbe
ss
out
inc
add
mov
adc
sbb
lret
mov
mov
ljmp
out
push
and
fcomp
shrl
scas
adc
shl
or
rcl
mov
dec
ljmp
in
inc
mov
aas
inc
sub
repz
mov
and
je
sub
and
sub
xchg
idivl
and
test
mov
add
lret
in
jle
mov
mov
decl
aas
test
rcrl
clc
xchg
je
add
xchg
push
pusha
add
mov
icebp
fcoml
sti
push
mov
pop
outsb
jge
pop
inc
mov
testb
sub
adc
jp
add
push
sub
jge
pop
je
xchg
loop
loope
cld
jecxz
cmp
sub
out
ja
sub
sub
jbe
xor
jp
jmp
mov
or
and
pop
js
or
outsb
adc
loope
pop
xor
ror
inc
cltd
in
bound
fistpll
pop
enter
pop
ss
add
outsl
pop
adc
pop
adc
insl
sub
jmp
and
add
mov
pop
jge
pop
js
popa
ljmp
imul
ds
aas
cmp
add
fnstcw
xor
setnp
add
and
cwtl
mov
xchg
xchg
mov
adc
xor
fwait
jmp
pop
fldcw
mov
fdivr
shrb
test
cmpsl
mulb
decl
mov
sbb
sbb
cmpsb
push
ja
xor
mov
dec
mov
stc
mov
dec
or
sbb
sti
mov
add
jae
and
inc
icebp
mov
dec
jno
bound
test
test
ljmp
xchg
mulb
sub
scas
pop
out
loopne
movb
or
sti
mulb
enter
pop
fadd
lock
pop
xchg
fmulp
jno
inc
push
sbb
push
or
daa
mov
add
faddl
jae
repz
xchg
and
mov
arpl
in
xchg
dec
jmp
sbb
aaa
rcll
jbe
mov
add
and
dec
adc
xor
push
mov
mov
lods
subl
leave
sbb
cli
lods
in
cmp
inc
mov
push
jns
xor
add
je
xor
sti
xor
adc
xchg
ja
add
cmp
or
cmp
mov
add
js
pop
mov
sub
mov
imul
cmc
stos
out
dec
push
sub
mov
adc
lret
orl
xor
cmc
or
sahf
xchg
push
out
and
lods
cmpps
cli
push
mov
and
lock
fs
sbb
push
xchg
jne
inc
xor
push
xchg
push
std
and
cwtl
xor
mov
jl
mov
lahf
mov
jb
daa
jno
mov
or
cmp
out
aaa
jo
push
mov
push
jmp
mov
mov
outsl
fsub
mov
pop
idivb
pop
xchg
fwait
bound
hlt
pop
testl
call
mov
sub
push
je
mov
push
pop
mov
jle
sub
std
and
push
fnstcw
stc
mov
jg
inc
mov
xchg
bound
jl
dec
pop
fcomp
inc
mov
mov
ljmp
jp
xlat
xchg
xor
inc
js
xchg
xorl
jno,pt
cld
inc
add
or
mov
cmc
aam
gs
in
push
in
xchg
adc
jnp
sbb
call
rcl
xchg
mov
pop
dec
out
dec
loope,pt
xor
inc
cs
ss
adc
hlt
rdtsc
testb
pop
xor
lea
jl
cmp
scas
shlb
imul
cwtl
je
sbb
dec
push
xchg
icebp
ret
sti
dec
into
push
or
movsb
jo
jg
bound
addl
sbb
test
sub
stos
pushf
mov
jno
pop
mov
jg
test
mov
push
cmpsl
iret
jno
scas
stos
jg
mov
int
ja
and
int3
jno
xchg
ljmp
outsb
jecxz
imul
iret
nop
out
push
movsb
inc
lcall
into
jl
pop
lock
dec
sbb
lock
mov
bound
add
pop
inc
add
inc
lds
addb
adc
xor
imul
dec
lods
inc
sahf
push
sti
fcomp
sbb
dec
outsl
xchg
sqrtps
mov
jne
outsb
mov
xor
movsl
in
sub
and
mov
or
cmp
sub
mov
fdivrs
cwtl
dec
inc
sub
repz
dec
push
cmpsb
cltd
dec
sarl
jnp
and
dec
lcall
dec
enter
push
push
bound
push
clc
nop
xchg
cmc
fsubrl
hlt
dec
shlb
in
sti
lods
frstor
sbb
sarl
out
cmpb
mov
jp
push
push
ja
jno
sub
adc
cmp
sahf
push
pop
out
test
imull
sub
mul
jbe
jle
or
fmuls
std
sub
mov
insl
adc
jne
adc
and
dec
add
push
int3
ss
xchg
stos
je
mov
loop
stos
xor
jae
xchg
sub
push
mov
sub
mov
pop
fs
mov
dec
bt
xor
push
fistpl
rcrb
add
jae
dec
outsl
imull
popf
mov
gs
push
aaa
xchg
mov
mov
rolb
mov
xchg
pop
mov
push
inc
and
addr16
roll
xchg
jge
pop
push
sub
xor
mov
xchg
lock
inc
mov
sbb
leave
out
add
fsubs
ljmp
xor
repz
mov
lods
pop
repz
aaa
push
loop
fwait
cmc
push
sub
jo
es
mov
sbb
push
sbb
sub
ljmp
mov
sub
inc
leave
fbld
push
ret
leave
in
fisubrs
adc
stos
hlt
cmp
sbb
stc
icebp
mov
xor
iret
in
mov
jmpw
add
inc
push
mov
aas
sbb
jnp
sub
jnp
mov
cmp
or
push
stos
add
das
xchg
jmp
pop
pop
hlt
loopne
pop
and
insb
insl
ret
push
loop
leave
movsl
into
movsl
js
xlat
jb
aas
sbb
bound
lret
dec
outsl
mov
pop
jg
loop
nop
cld
pushf
enter
sub
mov
mov
cwtl
mov
sbb
push
sub
add
add
ret
xchg
test
and
sbb
xor
outsl
lret
jl
xchg
xchg
repnz
sub
lahf
mov
loope
and
jg
dec
out
lret
jp
sub
jmp
jg
pop
loop
xorb
inc
push
std
fadd
inc
sub
jmp
test
mov
je
push
cmpsl
cmp
xchg
mov
scas
inc
aaa
loop
dec
jecxz
jecxz
mov
lret
in
inc
into
outsl
inc
dec
jg
mov
movsl
push
imul
scas
sbb
mov
js
sti
sub
fmul
outsb
aad
add
repz
cmp
out
push
push
ljmp
fwait
pop
lret
cmp
push
or
aad
dec
mov
and
decb
inc
sbb
fimuls
out
pop
pushf
push
push
pop
add
leave
lods
pushf
xchg
andb
ret
add
ss
imul
dec
add
mov
leave
shlb
xchg
add
mov
repz
popa
aam
add
dec
mov
add
push
sbb
jge
dec
lret
pop
pop
jnp
hlt
sti
add
lods
int
call
aaa
xlat
sbb
jbe
call
inc
xchg
dec
add
inc
xchg
sub
add
inc
sub
push
outsl
shrl
cmp
daa
and
scas
lret
rcll
adc
loopne
cmp
sub
sub
and
xor
cltd
ja
and
sbb
or
daa
push
fisttpl
fimull
inc
jecxz
inc
adcb
sbb
sub
out
outsb
and
cmp
cmp
inc
inc
ds
push
loope
dec
and
cmp
mov
jb
mov
mov
or
xchg
mov
jmp
adc
mov
pop
and
jnp
adc
dec
imul
mov
fmuls
pop
xor
add
repnz
lret
in
sbb
cmp
mov
lret
orl
mov
notl
mov
scas
sbb
out
ret
and
cmpsl
push
jge
pop
mov
cmp
ficomps
and
aaa
sbb
test
inc
imulb
mov
pop
sbb
mov
ret
stos
cmp
jg
sbbb
fisttpl
pop
cmp
sub
rorb
adc
adc
xchg
ret
out
xlat
aas
push
lahf
adc
jne
mov
jge
dec
cmp
cs
fmuls
and
adc
inc
int3
cmpsl
iret
nop
imul
cltd
sbb
pop
lock
push
ja
mov
je
and
adc
insl
sbb
xor
pop
mov
repnz
int3
popf
dec
insl
fwait
loopne
je
pop
push
sbb
dec
enter
mov
push
jmp
gs
jp
push
das
mov
adc
sbb
shrb
or
daa
cmpsl
jnp
jle
xor
call
rcll
out
mov
mov
xchg
cmp
cltd
fimuls
pop
fisubs
sbb
xchg
rorb
sub
sub
jbe
mov
pop
jg
lcall
cmp
cli
adc
jmp
lods
jae
pop
movsl
lret
ret
xchg
mov
pop
jbe
scas
mov
push
pop
dec
or
enter
push
shl
lcall
or
or
int3
inc
xchg
push
push
aas
and
aas
xchg
lea
scas
enter
add
leave
shlb
mov
jbe
cli
xlat
pop
add
ja
sub
or
lods
pop
inc
fwait
jl
mov
jl
or
rorl
movsl
jb
jns
repnz
and
xor
repz
loop
or
mov
sbb
push
dec
clc
adc
ds
out
into
fsts
push
out
pop
loope
jne
shlb
hlt
sbb
jnp
jb
mov
pop
mov
cmp
cli
dec
fstl
push
mov
and
pop
xor
cmp
subb
xor
outsl
pop
cmp
stc
mov
enter
movsl
insl
loope
es
dec
mov
xor
xor
push
stc
push
int
sahf
addr16
sub
jp
es
pop
jge
fcmovbe
jge
jp
cld
shlb
or
js
inc
cltd
cli
push
out
mov
add
nop
out
mov
inc
repz
outsl
dec
cmp
jle
cmp
inc
vpsubsb
dec
test
or
sub
movsl
push
aam
roll
test
scas
inc
push
int3
xchg
ret
mov
pop
push
jbe
and
out
add
mov
sbbl
pop
xor
xor
popf
xchg
pop
addr16
lcall
push
not
popa
insl
or
xor
mov
sub
repnz
xor
pop
scas
into
sub
mov
mov
mov
mov
sbb
stos
mov
or
sbb
outsl
mov
pop
cmc
jno
mov
add
jecxz
lock
repnz
mov
leave
xor
dec
dec
sti
mov
imul
aad
mov
mov
addr16
loope
outsb
push
xchg
lods
pop
inc
sub
es
mov
repz
rcr
outsl
fnstenv
add
dec
mov
rcll
pop
int3
push
aad
push
int3
je
jmp
int
xorl
xor
add
iret
cmp
aad
movsb
shll
mull
testb
push
es
insl
out
pushf
pop
xchg
and
mov
mov
push
push
stos
pop
mov
sarl
daa
out
das
sbb
in
xor
cmp
shrb
inc
lea
xor
cmp
dec
pop
repnz
inc
mov
cmp
std
and
icebp
out
sub
mov
sbb
dec
leave
incb
sbb
leave
cmpb
or
cmpl
push
mov
sub
mov
insl
mov
xchg
mov
xchg
in
adc
pop
stc
adc
cmpsl
push
xlat
mov
inc
cmp
inc
inc
repz
std
adc
xchg
enter
les
sbb
and
jne
xchg
xchg
jns
xor
loopne
mov
push
sub
fcmovbe
loopne
push
mov
mov
cltd
movsl
mov
push
lods
adc
dec
xchg
clc
jge
lds
in
enter
adc
mov
xor
push
cli
inc
sbb
mov
out
mov
lret
sti
adc
mov
jns
adc
mov
or
cwtl
dec
inc
es
jmp
jmp
ds
mov
lret
shlb
sbb
test
call
test
cmpsl
rclb
mov
or
add
add
or
xchg
sbb
paddb
xor
int3
imulb
mov
fcoms
jns
movsl
sbb
cmp
mov
rol
and
mov
test
in
inc
xor
scas
repnz
lods
enter
jge
xlat
enter
xchg
test
cmp
std
clc
dec
dec
out
adc
int3
sti
jbe
or
jno
mov
sbb
aaa
aad
shll
dec
rcll
mov
and
fidivs
cli
daa
iret
in
xor
pop
sbb
sub
fmull
cmpsl
fisubrs
ljmp
add
adc
loop
cld
or
cmpsl
sbb
scas
mov
jl
or
or
in
jne
ret
xchg
mov
fucomi
push
lret
mov
insl
js
pop
shrl
es
pop
daa
mov
fcomps
xchg
iret
and
out
or
pushf
idiv
and
xor
adc
and
pop
daa
mov
dec
inc
sub
pop
add
push
jnp
and
enter
pop
subl
mov
xchg
lea
xchg
mov
jmp
stos
lret
push
inc
xor
jo
and
data16
jle
jecxz
outsb
adc
fldcw
xlat
lds
push
mov
bound
ds
sbb
mov
js
cs
lahf
aad
das
cld
jp
sub
sub
or
insb
jmp
mov
pop
test
adc
cmp
and
jns
mov
aas
nop
jae
icebp
test
push
scas
in
test
fidivl
pop
sub
cmp
aad
fbstp
dec
pop
mov
int3
hlt
cld
lahf
sbb
sahf
jno
dec
jecxz
or
rclb
adc
loopne
adc
push
fldt
sbb
xchg
fs
mov
cmpb
aad
adc
jg
ds
into
lds
clc
repz
jge
adc
push
jb
lea
cmp
mov
mov
mov
cmpsb
dec
out
testl
xlat
cld
int3
mov
fistps
xchg
data16
divb
xor
cltd
pop
sub
fstpl
fwait
inc
or
sbb
sbb
outsl
out
push
mov
icebp
add
inc
iret
xchg
out
icebp
mov
loope
mov
sub
scas
cmp
lahf
stos
gs
add
sub
clc
pop
enter
or
andl
jae
mov
pop
not
or
clc
negb
test
mov
test
push
or
rcl
lods
push
pop
sbb
pushf
stos
jg
sub
mov
mov
xchg
out
jbe
adc
pop
or
xchg
xchg
scas
lret
cltd
imul
mov
ss
insb
jmp
jbe
movb
outsl
sarb
aad
dec
mov
xor
dec
lahf
push
bound
test
imul
push
push
dec
xchg
xorl
out
lods
movsb
xchg
xor
adc
add
or
call
ret
inc
js
push
movsl
inc
aas
outsb
sub
pop
adc
mov
leave
out
icebp
es
stos
mov
mov
adc
idivb
aad
jge
hlt
mov
leave
mov
imul
into
fsts
push
push
inc
repnz
xlat
cli
mov
jo
popf
pop
pop
xchg
dec
lret
fnstcw
and
pop
or
jmp
push
xlat
mov
sub
std
pusha
adc
mov
xchg
sbb
add
loopne
pushf
stos
add
lea
and
gs
cmpl
mov
cmc
cmpsb
mov
mov
ja
dec
cmp
mov
mov
incb
xor
sub
xor
cmpsb
sbbb
sub
dec
aad
mov
xchg
out
pop
mov
jmp
sbb
pop
das
cmp
lea
pushf
test
imul
stc
aaa
dec
pop
mov
subb
add
mov
mov
outsb
cmp
hlt
rolb
dec
push
pop
addr16
sub
jge
mov
pop
in
aaa
add
mov
jecxz
mov
arpl
test
xor
dec
arpl
sbb
xchg
lods
mov
repz
inc
mov
out
push
mov
dec
jbe
xor
jo
in
cmp
cli
jmp
or
pushf
sbb
jmp
mov
in
push
cmp
jmp
jo
ret
aam
notl
sbb
jb
pop
mov
dec
insb
jmp
mov
call
pop
jge
xchg
in
or
jge
imul
xchg
xor
pop
ror
es
js
loopne
add
mov
fnstsw
lret
lock
mov
mov
and
push
xor
int
mov
aas
lods
fildl
add
popf
aaa
push
sub
inc
dec
dec
movsb
jb
push
or
stc
or
push
into
aas
jne
fwait
out
sub
les
fwait
mov
loope
cmpl
or
and
into
repnz
out
mov
in
rorb
xorl
inc
dec
les
xchg
jle
lret
jne
jb
pop
pushf
notl
push
fstps
sub
cmc
repz
add
mov
jbe
int
jmp
push
cmp
inc
pop
push
jmp
divl
loop
in
dec
dec
sub
or
pop
pop
out
sar
scas
pusha
mov
lods
addl
stos
mov
mov
fs
jns
bound
push
dec
push
aad
pop
outsb
mov
jns
outsb
add
xor
xor
sbb
add
jmp
insb
mov
ds
loope
mov
push
sbb
cmp
and
jle
add
pop
or
dec
jg
fisttps
mov
cmp
push
rcrb
test
cwtl
adc
ret
into
jecxz
popf
inc
sbb
rcrl
psrlq
iret
fwait
inc
outsl
in
call
fstpt
push
call
cwtl
scas
sub
or
xchg
add
pop
repnz
dec
pop
test
sbb
jmp
cltd
mov
xchg
cmp
and
mov
aad
xchg
out
in
mov
mov
lods
je
or
sbb
pop
inc
mov
pop
stc
cmc
lods
mov
cwtl
mov
fwait
clc
dec
mulb
cmp
inc
ror
push
mov
mov
or
in
xchg
fnstenv
in
fs
ficompl
add
add
jae
push
addr16
sub
xchg
loope
fidivl
lock
mov
and
imul
shlb
lcall
push
jl
or
lret
mov
rorb
lea
inc
cli
psllq
push
pop
rolb
fs
shr
fistpl
push
test
out
inc
dec
pop
push
mov
cmp
dec
fldl
stc
mov
test
dec
popa
sub
inc
in
out
and
ds
mov
out
fdivrl
cltd
das
dec
les
add
mov
adc
inc
sbb
dec
dec
sub
lret
mov
insb
add
in
cmp
out
sbb
xchg
es
in
add
fnstcw
mov
pushf
adc
shll
or
int3
aaa
jne
mov
xchg
push
cmpsl
in
outsb
add
cmp
pop
sub
and
push
sahf
sub
imul
jp
mov
push
mov
jnp
repnz
imul
int3
shrb
dec
cmp
push
lea
dec
mov
test
jbe
das
ss
or
into
in
ret
sub
sbb
lods
jp
gs
jo
insb
xchg
dec
pop
lahf
mov
xchg
int3
out
aaa
inc
sbb
fsubrl
cmp
test
push
dec
jp
adc
mov
dec
rorl
push
mov
push
mov
dec
pusha
cmp
jl
mov
jne
pop
movsl
int
movsl
push
jp
daa
arpl
dec
mov
jecxz
jbe
loop
lods
xchg
mov
test
push
inc
or
xor
add
das
loop
jnp
xor
sbb
xor
data16
xchg
cmp
stos
inc
stc
in
imul
test
shll
cmp
push
xor
imul
push
add
lds
xchg
mov
popa
push
in
push
test
jnp
cmc
and
jmp
ja
xchg
out
dec
jbe
rcrb
adcl
pop
arpl
shl
aaa
lret
cwtl
ljmp
push
xchg
xor
push
shll
sub
cmpsb
inc
cmpsb
mov
ljmp
mov
enter
arpl
js
icebp
xchg
or
inc
in
enter
repz
mov
pop
aad
pushf
pop
inc
pusha
xchg
bound
movsb
cmc
fsub
dec
push
sub
or
data16
add
and
or
mov
rolb
ljmp
aas
jae
or
testb
in
xlat
jb
imul
icebp
jb
jle
mov
es
sarl
arpl
and
mov
adc
pop
xchg
fdivr
rcll
ds
dec
pop
cmc
clc
cltd
sbb
shrl
out
sarl
jnp
lret
mov
xrelease
loope
jns
jo
ds
push
xchg
dec
jns
adc
ret
das
js
jbe
loope
test
pop
pop
jo
dec
sbb
jns
jg
loopne
call
fbld
pop
mov
inc
jle
mov
ja
xor
clc
data16
int3
cmp
pop
pusha
mov
add
push
sahf
or
xchg
ljmp
pop
push
sbb
idivb
rcrb
or
push
mov
inc
iret
xorl
jns
jg
aaa
icebp
or
out
je
cmp
xor
mov
mov
sub
mov
mov
ret
pop
jmp
jno
cmp
pop
call
xor
add
or
jnp
dec
dec
pusha
jae,pn
jne
lret
push
adc
jp
dec
mov
int3
xor
ss
jb
push
xchg
inc
adc
int3
ret
xchg
inc
ret
sbb
shrl
test
pusha
xlat
mov
add
jle
jg
pop
aaa
inc
sti
fcmovne
cmc
ror
cmp
push
mov
negb
dec
out
pop
popa
fsts
out
mov
or
lds
pop
jb
enter
dec
xchg
dec
out
xor
fildll
xchg
and
cmc
pop
leave
clc
arpl
jg
aam
sbb
notb
jnp
jbe
pop
pop
fnsetpm(287
mov
int
adc
pop
idivb
scas
lea
sbb
fdivrl
cwtl
and
push
add
inc
jnp
xchg
adc
pop
xlat
bound
call
xchg
mov
add
xlat
push
and
pop
dec
scas
std
and
test
cmp
sbb
xor
pop
sbb
add
dec
cwtl
in
std
in
ss
dec
cmpsl
insl
movsl
mov
cmp
test
or
out
cmp
mov
mov
and
jne
push
xchg
mov
daa
inc
lds
shlb
jge
push
stos
outsl
and
mov
jne
push
pushf
push
xchg
ficomps
out
inc
inc
shlb
and
cmpsb
fsubrl
call
sbb
mov
je
flds
ljmp
lea
mov
test
pop
add
add
mov
fdivs
jmp
test
outsb
in
push
mov
sbbb
stc
or
cld
cmp
stc
inc
popf
insl
push
inc
xchg
clc
dec
jle
pop
shrl
mov
xchg
int
in
popa
cmp
dec
pop
and
or
sbb
ja
outsb
lret
mov
pop
pop
pop
or
imul
pop
int
cs
mov
adcl
xor
jo
cmc
xchg
sub
push
mov
shll
jg
dec
rclb
testl
jmp
sub
sub
inc
lcall
xor
mov
sahf
out
idivl
add
sub
call
sahf
mov
mov
xor
xchg
or
gs
mov
push
es
or
ss
adc
scas
movsl
dec
shr
lcall
mov
shlb
mov
jb
jecxz
push
shlb
add
or
sbb
mov
lods
pop
mov
dec
adc
pop
xor
popa
imul
and
std
test
xlat
add
pop
pop
pop
xor
xor
addl
and
inc
cmpxchg
pushf
push
jnp
jbe
dec
mov
fadd
aas
fisttpl
dec
sti
inc
lock
adc
lods
mov
imul
rclb
or
sbb
imul
fiadds
mov
mov
cmp
lret
shl
dec
ljmp
imul
pop
mov
sub
jae
mov
inc
mov
add
stos
xchg
and
add
jmp
inc
or
cmp
jb
cmp
or
les
mov
push
fstpl
repnz
je
push
cmp
mov
in
jns
cwtl
lcall
repz
mov
sti
pop
scas
loop
inc
lock
sub
ljmp
adc
outsb
sbb
lret
out
or
enter
testb
inc
jns
into
xchg
pop
aam
xchg
mov
std
fs
mov
xor
jne
andl
dec
pop
push
leave
xlat
orb
mov
or
std
bnd
int3
dec
cmp
ss
sub
inc
xor
movsl
mov
adc
lock
outsl
jbe
push
shlb
loope
inc
mov
in
sti
sub
xor
fsubs
xchg
insl
pushf
pop
mov
inc
loope
mov
outsb
pop
xor
sbb
push
cltd
pop
xchg
std
mov
and
jle
push
repnz
push
mov
xchg
rorb
add
fsubl
mov
add
push
sub
ds
andb
inc
hlt
push
lods
cmpsl
and
fistps
popa
sbb
adc
popf
test
pop
pushl
dec
inc
pop
and
push
lock
add
mov
test
pop
mov
loop
fldcw
xchg
mov
sbb
je
jecxz
add
adc
hlt
mov
inc
ret
cmp
jnp
mov
push
jmp
pop
pop
mov
inc
test
out
leave
add
cs
mov
and
mov
outsb
cltd
and
sarb
inc
mov
xchg
jl
push
ficoml
or
sahf
nop
lcall
mov
xor
push
push
cs
gs
adc
int3
in
stos
enter
sub
lds
cltd
lcall
add
nop
icebp
mov
jb
inc
or
jl
lds
mov
sbb
dec
bound
mov
iret
push
out
mov
subb
scas
mov
cmpsb
mov
rorl
xor
test
sbb
add
mov
mov
fwait
dec
dec
pop
jg
lahf
adcl
add
adc
or
jg
and
pop
cmp
sub
shr
mov
push
flds
fwait
xchg
cli
sbb
pop
stos
iret
mov
mov
add
mov
cmp
xlat
loop
xor
movsl
stc
mov
mov
jae
clc
test
jns
mov
shll
sbb
xor
inc
test
fcomps
incb
mov
inc
fwait
outsl
fidivrs
fsubrs
dec
daa
shr
jae,pt
fiadds
jae
push
ja
inc
dec
mov
loop
mov
int
dec
pop
jns
lret
jl
mov
inc
cld
lea
out
test
data16
xor
fnstcw
cs
movsl
je
push
andl
mov
into
ss
ds
inc
ds
fwait
mov
cmpsl
jbe
roll
into
pop
sbb
test
mov
adc
je
jmp
dec
in
push
arpl
inc
mov
cmp
test
arpl
jns
dec
repz
sub
push
les
push
sbb
sub
sbb
popa
mov
mov
jle
stos
int3
lahf
push
inc
xor
and
sbb
int3
cmpsb
test
das
dec
push
inc
ja
inc
mov
xor
jl
insl
xchg
out
xchg
mov
xlat
pop
mov
jp
rcrl
adc
cmpsl
push
jns
and
outsb
cmp
add
lds
movsl
and
ljmp
cmc
mov
pop
hlt
cmp
mov
inc
mov
scas
aas
mov
and
lea
pop
mov
cs
iret
mov
sbb
sub
lock
shl
mov
stos
cmpsl
testb
cli
js
ljmp
out
and
and
lret
xchg
mov
imull
push
loopne
stos
pushf
and
sbb
jge
xor
in
mov
or
pushf
xchg
xchg
jns
hlt
daa
test
push
int3
fisttps
lret
dec
cmovb
fwait
xlat
sbb
stos
mov
push
adc
gs
xor
stc
xor
cmp
mov
jne
mul
jb
xor
inc
mov
pop
pop
lock
in
insl
cmpsl
outsb
push
pop
push
out
dec
ret
filds
jbe
les
je
movsl
test
popf
stos
clc
inc
insl
fistps
add
xchg
cmc
fildll
push
fcompl
cmpsl
and
mov
mov
mov
sbb
in
lods
in
out
rcll
aam
add
xor
outsl
mov
pushf
test
adc
shlb
outsb
jo
call
inc
jle
int3
test
cmp
push
cmp
jmp
mov
insb
push
xor
add
mov
or
cltd
rcrb
jo
add
fucomip
fld
inc
dec
sbbl
sbb
outsl
les
pop
xor
sbb
xchg
aas
sbb
leave
lds
mov
ljmp
jg
je
repnz
in
cli
sbb
stc
sub
std
sbb
add
xchg
mov
test
std
ljmp
leave
and
mov
mov
das
mov
sahf
ja
jnp
dec
dec
pop
subl
or
mov
ljmp
pop
adc
jbe
inc
fcoml
es
lods
mov
ss
sahf
jb
cmp
sub
sub
mov
sub
or
cmp
adc
test
inc
dec
add
imul
mov
ficomps
dec
sbb
cmpsl
jle
adc
fdivrl
lea
fldl
fs
pop
daa
push
aad
outsl
xor
outsb
adc
jle
dec
xor
daa
sbb
pop
pusha
out
inc
jge
cmc
flds
pusha
shrb
xchg
cwtl
sub
xchg
jne
push
inc
mov
cld
xor
clc
pop
rorb
sahf
push
ss
divl
push
push
cld
mov
std
cmpsb
mov
fisubl
scas
jle
sahf
lahf
pusha
xchg
add
test
fsubl
inc
pop
orl
and
sbb
popa
mov
incb
inc
sub
sahf
inc
leave
add
std
jge
pop
lea
dec
repnz
push
xchg
sub
sahf
mov
iret
imul
lcall
dec
dec
ljmp
into
sub
cmp
and
jne
push
jmp
daa
loop
test
cmpsl
ret
dec
pop
inc
inc
sub
scas
jnp
and
add
in
inc
hlt
sub
insl
repz
cld
jle
dec
and
fstl
cmp
loop
aad
stos
pop
outsb
insb
xchg
or
test
out
in
pop
and
icebp
bound
dec
dec
cwtl
pushl
loop
pop
adc
lret
push
mov
sbb
movb
ja
pop
push
lods
outsb
rcll
xor
lods
lret
stos
hlt
jno
fcmovnb
push
divl
std
jmp
mov
in
aas
xor
sub
fstp
aas
and
add
and
ret
add
jl
dec
xor
hlt
stos
inc
mov
push
subb
and
xchg
inc
repnz
inc
push
fnstenv
fiaddl
jp
and
push
xlat
mov
out
mov
scas
les
pop
add
dec
data16
mov
and
adc
mov
mov
sbb
xchg
scas
xor
push
arpl
jge
push
jmp
jne
xchg
faddl
loop
mov
cld
in
cmp
pop
andb
popa
pop
push
and
loopne
test
mov
lods
pop
ja
jnp
push
fninit
xchg
sbb
ret
dec
fnstsw
xchg
cmpsl
sarl
pop
imul
sbb
into
dec
lcall
cli
test
pop
pop
cmc
mov
addr16
jne
sbb
clc
cmp
cmp
inc
sbb
push
push
out
outsl
dec
out
hlt
adc
addr16
mov
xchg
or
mov
add
jno
fistpl
push
mov
test
inc
inc
dec
sbb
ret
pop
pop
ret
and
pop
sub
mull
scas
push
pop
and
lods
ret
lds
retw
cmpb
mov
pop
lea
rcl
add
fsts
in
test
sub
adc
lods
lret
ja
cmp
jle
lods
adcl
mov
push
dec
std
push
sarb
sti
or
push
mov
push
and
arpl
inc
xor
test
cli
mov
popl
mov
pop
in
out
inc
add
int
xchg
add
and
xor
jae
rcl
ja
cmp
push
ja
enter
xor
stos
xor
xchg
fdivr
mov
div
movsl
adc
aad
sbb
adc
inc
or
cmc
xchg
add
pop
push
xchg
ret
in
ret
rorb
lods
sbb
sub
ret
mov
ljmp
add
ds
in
push
xchg
lret
cmp
or
push
adc
roll
ja
pop
jl
inc
xchg
pop
aas
mov
popa
mov
pop
or
lods
aaa
dec
mov
inc
mov
mov
sbb
ds
imul
xlat
lock
xchg
push
jnp
hlt
incb
cmp
mov
fbstp
shl
sub
enter
adc
jecxz
mov
jl
push
in
cmpsb
or
sub
addr16
xor
jno
ja
es
rol
aad
adcl
jne
out
daa
inc
push
clc
jp
inc
xchg
mov
fidivrs
add
xor
jnp
pop
adc
cmc
lahf
mov
stos
popf
jle
iret
rorl
divb
add
lods
pop
subb
hlt
in
pop
jl
xchg
outsl
xchg
nop
pop
test
aam
mov
mov
xchg
lea
or
jns
mov
pop
lcall
je
ficomps
mov
nop
cltd
aam
out
xor
dec
rcr
pop
push
mov
dec
fcom
pop
adc
dec
jb
add
adc
in
lds
notb
popl
xor
mov
mov
cmp
leave
mov
in
push
in
lret
loop
sub
jo
out
pop
jl
in
mov
shrl
decb
leave
loopne
jns
std
lods
adc
mov
mov
cs
ljmp
in
mov
push
movl
and
pop
movsl
mov
or
xchg
xchg
pop
lcall
jo
mov
adc
repnz
les
adc
into
xchg
xchg
sbb
xchg
cmp
push
dec
dec
sub
adc
and
leave
mov
and
test
in
xor
test
sub
push
lock
jl
test
subl
dec
rorb
cmc
add
or
repz
xor
sub
pop
inc
das
mov
loopne
adc
hlt
push
inc
test
add
sub
or
inc
push
mov
icebp
adc
inc
out
ss
leave
push
or
add
inc
push
sub
add
dec
push
mov
fiadds
push
add
loope
cmpl
adcl
xor
inc
jne
pmaxsw
or
inc
insb
cmp
mov
into
jnp
and
lods
hlt
xor
jae
dec
cltd
fildll
fisttpll
mov
rol
nop
add
iret
outsb
lret
pop
mov
icebp
jmp
sbb
in
jp
lds
sbb
clc
cmpsl
ljmp
daa
aaa
add
pop
sub
movsl
daa
negl
int
push
pop
cmpsb
scas
insl
xchg
js
nop
xor
lods
test
inc
or
das
stc
cmpsb
mov
sub
in
xor
push
in
xchg
fisttps
mov
dec
mov
mov
push
mov
adc
dec
sub
imul
mov
push
dec
inc
inc
xchg
push
pop
pushf
int3
fldcw
cmpsb
mov
mov
cmp
xchg
mov
or
cmp
jno
xchg
jae
add
test
xor
shll
push
push
fmul
cmp
cmp
fst
pop
push
cmp
xchg
pop
enter
and
ret
sub
xor
jbe
pop
lret
dec
xchg
jnp
lcall
xor
in
or
loope
or
push
fucomp
popa
jne
ds
stc
sar
cltd
in
sub
lds
test
sub
loope
sti
jle
stos
or
xchg
mov
xchg
adc
ss
in
testl
cmpsl
repnz
mov
mov
sub
shll
mov
xchg
hlt
insb
or
mov
iret
outsl
test
cmp
jecxz
xchg
push
dec
movsl
xlat
mov
mov
call
mov
xchg
imul
fisttps
idiv
mov
in
push
dec
mov
in
jl
arpl
push
sarb
xchg
fsubl
and
mov
sub
push
frstor
mov
gs
dec
test
cmp
cmpsb
sub
push
rclb
push
sbb
scas
std
inc
out
dec
sub
data16
pushf
xchg
mov
mov
enter
or
sbb
jne
ret
push
cmp
add
sbb
negl
adc
xor
xchg
jo
shrb
push
test
aam
dec
repnz
jnp
les
dec
cmp
add
iret
jnp
es
les
cmc
imul
fdivl
fadds
fldl
jp
jbe
fmulp
or
push
pop
mov
mov
pop
scas
sbb
cmpsb
adcl
xor
pop
sbb
enter
mov
push
mov
mov
adc
or
or
cmp
xchg
lds
pop
negb
leave
shl
xorl
lds
lds
sub
scas
cmp
or
int3
fdivrp
and
fsubl
cmp
sbb
cmp
and
mov
test
mov
jb
xor
ret
int3
adc
movsl
or
mov
dec
xlat
arpl
aam
aad
mov
out
jnp
dec
inc
pop
pop
je
mov
daa
stc
hlt
imul
adc
xchg
iret
jns
fincstp
mov
pop
out
js
xor
pushf
sbb
pop
jle
sbbl
mov
dec
and
add
cmp
and
mov
insb
push
shlb
daa
mov
xchg
jmp
add
cmpb
ljmp
mov
aam
or
stos
sbb
sbb
adc
lcall
pop
push
sub
jmp
xchg
jecxz
imul
out
rorb
pop
add
mov
ds
in
mov
pushf
bound
or
sub
cmpsl
push
lcall
adc
sti
pop
fiaddl
fs
xorb
lar
mov
inc
add
in
stos
xchg
adc
dec
rcrb
lods
ret
lods
outsl
sbbb
jns
mov
and
aas
ret
mov
lret
subl
shrl
cmp
jl
push
sbb
and
into
stos
fisttps
pop
xchg
jg
sub
push
data16
dec
mov
int3
fdivrl
dec
dec
inc
mov
and
cmp
add
mov
xchg
sahf
insb
xor
cmp
test
aas
testb
sbb
lahf
out
ja
icebp
xchg
pop
mov
pop
lea
sub
xlat
lret
jnp
jle
and
jmp
outsl
in
mov
jne
sub
cmpsl
fdivr
xchg
lea
scas
push
jp
or
xor
mov
xchg
les
in
mov
enter
dec
jecxz
inc
sbb
jle
dec
jmp
cmpsb
in
jnp
pop
fnstsw
xchg
rcrb
xchg
pop
hlt
xor
push
scas
fidivs
adc
pushl
or
testl
pop
jl
adc
mov
mov
xor
lret
sbb
repz
xchg
dec
in
mov
scas
lods
test
cmp
insb
and
or
addb
dec
jb
ds
fidivl
xchg
loopne
pushf
cmp
and
and
cmp
ror
scas
xor
ret
xchg
cwtl
out
sbbl
push
inc
adc
sub
pop
movsl
push
test
push
push
add
loope
addl
mov
fmuls
pushf
insl
cmp
in
aad
popa
xchg
ljmp
inc
gs
inc
inc
imul
fmull
adc
push
add
mov
inc
sub
inc
pusha
inc
jl
stos
scas
in
and
xor
mov
mov
dec
push
push
inc
mov
sbb
incl
dec
hlt
dec
or
rorb
stos
test
lea
ret
arpl
stos
outsb
in
mov
jp
int
mov
xchg
filds
sub
sbb
outsb
adc
mov
xchg
pop
test
insl
call
fisubs
cmp
push
inc
mov
insl
orb
sbb
push
inc
push
fisubl
fnstenv
enter
sti
or
fst
int3
scas
cmp
add
iret
adc
jecxz
dec
jae
xor
insb
call
cmp
xchg
clc
mov
sub
inc
jne
lds
mov
stos
jmp
push
and
sbb
shll
lret
lods
lahf
pop
pop
out
xor
jbe
pop
fsubs
jmp
pushf
sbb
jecxz
loop
nop
pop
jge
mov
sub
mov
adc
xor
sahf
xor
ds
adc
mov
dec
jg
fldt
sub
mov
leave
add
andb
jnp
fdivp
fists
and
cmp
repnz
imul
jae
adc
adc
sahf
leave
pushf
and
xchg
push
clc
dec
test
je
mov
mov
test
test
cmc
sub
mov
xor
mov
testl
and
xchg
imul
add
cmp
and
adc
mov
lods
in
cmp
xor
mov
inc
pop
xor
int3
cld
pop
mov
adc
mov
aas
cmp
xchg
dec
adc
shll
inc
mov
xor
loopne
daa
mov
cmp
push
ss
inc
sbb
lock
xchg
les
aad
xor
sub
and
add
add
inc
outsb
call
sbb
jmp
or
ror
jo
enter
or
popf
push
scas
das
dec
pop
push
cmc
lods
clc
sbb
dec
andb
sub
ljmp
xchg
pop
ljmp
adc
in
dec
fs
lock
popl
ja
imul
into
or
inc
jne
mov
sbb
sub
in
popf
fs
mov
clc
and
mov
and
jge
xor
pusha
aam
mov
pop
push
mov
xor
mov
pushf
roll
fnstcw
cmc
mov
gs
je
cld
pop
mov
cmp
int
orb
push
or
lcall
inc
test
js
ret
shlb
cmp
xchg
aaa
jb
and
fsqrt
stc
or
mov
in
ds
jg
xchg
cmp
xorb
es
and
add
sbb
les
into
mov
mov
aaa
inc
popa
cld
ljmp
mov
add
insb
mov
sub
cmp
or
sbb
jecxz
jecxz
lret
jae
xchg
std
sub
cld
bound
pop
mov
fwait
xlat
repnz
jl
mov
push
lods
fnstenv
and
cld
sti
inc
lahf
xchg
orb
gs
xchg
lret
out
xor
pop
leave
push
mov
push
push
lret
cmpsb
inc
and
call
loope
lea
add
inc
or
cmp
inc
push
xor
mov
push
mov
inc
adc
jmp
lea
xchg
and
or
sahf
dec
xchg
add
ss
or
push
sub
fmuls
outsb
jle
inc
aaa
mov
adcb
clc
adc
in
jecxz
mov
in
stos
cs
dec
pop
dec
aad
aam
fidivl
sahf
roll
les
push
test
icebp
jl
cs
or
jmp
cmpsb
stos
inc
rcl
cs
ds
xor
lahf
aam
int
mov
jb
cmpsl
mov
fmulp
xchg
mov
adc
icebp
sub
xchg
mov
mov
mov
jecxz
in
pop
gs
sbb
daa
mov
call
fsts
and
inc
mov
das
data16
imul
xchg
pop
adc
inc
add
ja
add
adc
jmp
fwait
popa
imul
mov
orb
insl
out
lea
xor
sub
shr
mov
push
test
test
sub
clc
fs
test
xchg
jnp
popl
cmpsb
inc
mov
lods
push
sub
add
mov
xchg
mov
sbb
jle
adc
jbe
insb
aad
xchg
and
gs
xor
loopne
sub
loope
mov
jno
jl
mov
stos
xlat
and
sub
inc
lret
aad
mov
lea
in
movsl
push
call
lock
insl
mov
mov
xchg
gs
xor
xchg
xchg
xchg
fcompl
mov
lods
dec
fpatan
loopw
int3
push
sub
pop
aad
dec
addb
fs
add
xor
shl
mov
xchg
dec
xor
jne
adc
loope
rcrl
ret
stos
enter
out
mov
stos
sub
je
dec
dec
jg
sbb
dec
jae
popa
lahf
sub
cmp
jae
hlt
ret
dec
dec
cltd
call
xchg
dec
sar
cmp
pusha
ret
pop
and
mov
test
cmp
loope
pop
mov
test
ds
pop
adc
je
fs
lds
xchg
jp
outsl
insl
lods
push
divl
mov
inc
mov
add
rolb
mul
sub
or
ret
jnp
and
jmp
mov
jbe
lds
dec
jnp
inc
pop
sub
inc
and
xchg
dec
jns
push
pop
sub
sbb
jmp
enter
dec
add
pop
inc
and
aad
imul
sub
or
enter
jmp
mov
insl
push
sbb
sub
popa
enter
call
xor
adc
or
sub
mov
jbe
mov
xchg
aaa
pop
pop
repnz
jg
inc
cmp
sbb
rcrb
add
lahf
in
data16
bswap
xchg
mov
aaa
xchg
js
lahf
pushf
in
outsl
dec
mov
inc
dec
lea
push
dec
add
addb
adc
xchg
lahf
pop
dec
pusha
ss
pop
pop
stos
aaa
jns,pn
stc
inc
icebp
ret
jle
bound
in
and
xor
iret
ljmp
insb
adc
jg
fwait
idivl
clc
fs
jae
jae
mov
notb
mov
mov
push
dec
jmp
sbb
cmp
shl
sbb
jae
xchg
or
and
dec
dec
movsl
popl
fs
bound
xlat
imul
insb
inc
fisubl
cmp
add
lret
stos
mov
inc
sbbb
inc
les
mov
pop
xor
movsl
mov
xlat
jbe
and
scas
sbb
cmp
xlat
mov
jp
subl
sbb
test
repnz
or
pop
int
cmp
jl
push
sub
pop
and
xchg
add
mov
or
imul
rcrl
mov
aaa
and
xor
pop
imul
hlt
cmpb
out
sti
sbb
stos
push
xchg
dec
jecxz
pop
or
xor
movsl
out
mov
sbb
sarb
inc
dec
add
sbb
inc
daa
cmpsl
fcom
jnp
push
push
cmc
shll
jecxz
jg
sbb
jo
adc
xchg
dec
pop
je
push
les
sbb
pop
lahf
lods
lahf
lahf
repz
mov
enter
fldl
cmp
aad
mov
push
fnstenv
add
das
je
jne
idivb
jp
sbb
dec
ret
add
add
pop
aaa
aaa
mov
hlt
int
dec
or
jl
mov
loop
test
mov
and
dec
mov
and
into
cs
adc
aaa
sti
sbb
in
push
pop
sbb
dec
lds
pop
inc
lahf
lds
imul
sbb
enter
jl
ret
mov
iret
cli
xor
dec
sbb
push
jo
push
leave
mov
nop
faddl
add
lock
sbb
xor
mov
lahf
shll
jecxz
mov
push
pop
rcl
fbld
mov
dec
nop
out
dec
jg
lods
frstor
sub
adc
daa
mov
sbb
scas
enter
out
out
nop
aad
stc
pusha
aad
inc
lds
push
fnstcw
sbb
pop
xchg
jge
les
or
push
das
adcb
test
jecxz
inc
movsb
push
lock
fisubrl
inc
or
fldenv
gs
outsb
add
xor
push
pop
mov
sub
ljmp
loopne
push
fistps
pop
pop
lods
repz
scas
jbe
insl
scas
ljmp
cmp
mov
xchg
xchg
xchg
adc
lcall
insb
dec
fdivrs
xchg
mov
mov
cmp
or
in
insl
or
or
pop
lds
movsb
xor
lods
lds
into
fsubl
incb
test
sbb
jbe
pop
sbb
mov
jae
stos
or
adc
cmpsl
out
sub
add
adcb
mov
lods
pop
repz
push
fiaddl
loop
sbb
loopne
push
mov
xor
sbb
or
jns
inc
sub
movb
fstps
sub
push
lea
mov
outsl
inc
mov
shll
cmp
cmp
inc
jmp
test
call
xchg
sbb
das
cltd
jge
mov
jns
lret
sarl
mov
insb
aad
mov
jno
fisubrs
mov
sbb
inc
jl
pop
sbb
xchg
dec
jno
imul
aam
hlt
hlt
inc
mov
adc
enter
pop
pop
pop
in
sbb
les
fcoml
dec
adc
cld
stos
cmp
cld
xor
push
ss
push
xchg
lcall
sarl
addr16
and
pop
pushf
int3
scas
xor
outsl
mov
gs
inc
push
popf
jae
lahf
add
arpl
mov
inc
shrl
dec
outsl
mov
and
ret
fnsave
rorb
xchg
test
sbb
adc
inc
lcall
push
shrb
imul
cmpsb
jp
fsubrl
nop
pop
or
dec
mov
mov
mov
into
pop
mov
push
mov
fmull
xlat
jae
vmwrite
shrl
imul
daa
cmpl
xlat
cmp
cld
jne
jbe
sbb
andl
bound
icebp
shrb
mov
out
and
lods
in
push
inc
jo
xrelease
push
enter
icebp
sbb
test
mov
push
lock
shll
inc
aaa
pop
movsl
daa
adc
insl
adc
out
shrl
dec
gs
cmp
mov
inc
fwait
cltd
push
mov
outsl
fsubr
movb
negb
mov
repz
lods
in
xor
decb
xor
and
sub
mov
call
and
ret
pop
leave
or
cmp
out
in
test
lea
inc
cmp
add
pop
pop
outsl
jle,pt
mov
mov
sti
js
pop
sbb
test
inc
xor
nop
mov
or
pusha
push
mov
jmp
push
add
sub
add
imul
xor
icebp
sahf
dec
sbb
fnsave
xchg
push
push
lret
ret
enter
xor
sub
lea
nop
mov
or
sub
rolb
sub
icebp
aad
xchg
loop
push
push
add
shll
lret
mov
xchg
test
cmp
and
dec
loop
dec
movsb
dec
out
test
insb
mov
aam
rclb
mov
roll
fnop
cld
lea
jne
xchg
sarb
mov
ficoms
outsl
and
jle
ret
std
push
adc
cmpsl
std
or
inc
sarl
data16
xor
das
sub
mov
repnz
mov
push
lret
loop
pop
ret
sti
in
cwtl
lret
mov
cmp
pop
mov
adc
fiadds
sbb
cmp
std
mov
cmc
mov
test
jbe
xchg
ss
ss
in
into
cmp
adc
jne
inc
hlt
cmp
fidivrs
dec
shrb
mov
subb
lahf
es
lock
dec
pop
or
nop
dec
jnp
sahf
inc
jb
and
mov
fists
inc
push
jno
adc
cli
push
or
xor
cmp
adcl
stos
loope
cmp
push
icebp
inc
stos
pop
andl
lcall
repnz
mov
cs
jne
sbb
adc
push
bound
ljmp
icebp
adc
movsl
pop
dec
push
mov
test
dec
lret
shll
lcall
sbb
mov
rol
outsb
mov
pop
addr16
je
leave
test
sub
fsubrs
rolb
mov
repz
std
mov
sbb
cs
or
dec
jne
aas
sub
aas
xchg
sub
inc
lret
push
or
icebp
xchg
xor
jmp
xor
adc
jecxz
dec
inc
xchg
jle
es
addr16
inc
dec
aaa
aas
xlat
gs
xorb
shl
xchg
dec
lret
mov
mov
sarl
xor
aaa
jmp
add
lds
lret
jp
insb
cld
dec
incb
cmp
scas
fistl
mov
testb
fsubrs
out
out
jecxz
outsl
jecxz
push
mov
lods
mov
movsl
jo
movsb
xorl
xor
and
and
shr
jae
cmc
jo
ja
mov
outsb
xchg
stc
dec
mov
xor
inc
pop
test
scas
or
xchg
rcl
jg
lcall
jg
loop
ss
loopne
in
flds
or
jne
dec
or
hlt
cld
test
es
and
sarl
inc
ret
bound
push
repz
loopne
clc
fistpl
jns
fildll
ficoml
push
add
in
xchg
ds
cmp
hlt
pop
scas
cmpsb
sub
xchg
add
cs
test
jge
lods
in
cltd
sbb
cmp
cmp
jp
jle
jle
dec
pop
imul
outsb
pop
das
mov
push
stc
sbb
add
mov
adc
xchg
in
movsl
aad
and
fldcw
and
xor
and
sbb
jbe
xchg
cmp
and
fcompl
out
sahf
adc
xchg
lock
push
insl
pop
sbb
lret
loopne
inc
in
imul
std
inc
movsl
dec
push
mov
dec
movsl
add
lods
mov
fisubl
jp
movsb
jmp
sbb
ja
fidivrl
mov
cmc
lds
int
inc
push
jp
cmp
sub
jge
jne
es
cmp
pop
sbb
aad
push
or
push
push
jae
adc
lods
mov
insl
inc
jp
ds
out
in
rorl
int3
mov
scas
popa
mov
pop
clc
mov
inc
sub
xchg
xor
xchg
arpl
test
ja
std
sbb
ss
jmp
cmpsb
or
pushf
ljmp
addb
lret
and
xor
into
cmp
pop
lret
push
mov
leave
xchg
lret
mov
mov
lret
jns
std
dec
push
inc
sbb
movsl
cltd
sbb
sub
dec
xor
add
fidivl
and
mov
mov
and
insl
in
and
adc
or
xor
js
jno
call
push
sub
fldenv
sub
roll
jno
mov
mov
icebp
lods
mov
jle
mov
mov
mov
cmp
cmp
loop
cmp
cmp
xchg
aaa
adc
and
movsl
movl
stos
fsub
test
hlt
push
shl
add
stc
cmp
sub
xor
sbb
movsb
lea
inc
inc
iret
insb
outsb
syscall
dec
jle
sub
adc
and
repz
push
ret
dec
mov
jmp
nop
jne
lret
add
es
fcoml
test
xor
mov
dec
sti
or
std
push
std
addb
outsb
daa
add
imul
in
lret
dec
jge
inc
repnz
or
shll
add
add
cli
jecxz
push
pop
xchg
es
cld
mov
pop
pop
jl
cmp
push
cmp
add
aad
stos
xor
out
pop
xor
mov
ja
mov
sbb
inc
xchg
mov
push
pop
jne
test
lock
rorl
inc
loopne
xor
outsl
pusha
or
add
or
sub
pop
and
xor
repnz
mov
push
test
mov
mov
movsb
cmp
xor
test
xor
adc
jbe
ret
mov
add
icebp
jae
push
fisubs
repz
mov
aaa
mov
or
das
add
mov
pop
or
fimuls
lods
repnz
cmp
or
mov
pop
sbb
dec
int3
jle
add
shlb
sub
xchg
sbb
mov
and
push
or
movsl
ja
mov
mov
repnz
pop
inc
xor
push
mov
icebp
loopne
pop
sbb
push
mov
in
mov
cs
fldcw
sahf
ret
arpl
icebp
ljmp
iret
loop
ja
cwtl
mov
and
pop
xchg
push
cld
out
adc
sbb
adc
push
jb
loop
mov
subb
ss
adc
inc
les
sbb
inc
imul
adc
adc
adc
pop
sahf
stos
sti
jbe
call
mov
mov
es
jns
cmp
xor
dec
adc
and
push
shll
frstor
pop
push
aas
mov
adc
adc
test
hlt
dec
push
in
mov
xchg
fwait
in
loopne
aaa
pop
cmp
daa
sbb
in
scas
and
jnp
inc
mov
sub
sbb
insl
push
sub
cmp
sbb
mov
movsl
imul
xchg
push
xor
push
rorb
add
mov
mov
push
loopne
dec
ljmp
or
ret
sub
lret
xor
pop
addl
ffree
rcr
xchg
fstl
jo
xchg
sub
bound
sub
jp
xchg
inc
ds
xor
ds
lock
je
or
or
mov
xchg
data16
mov
icebp
iret
stc
lods
mov
xchg
and
xor
cmp
inc
add
add
lods
push
adc
fs
inc
leave
mov
lret
xchg
mov
mov
xchg
pop
jnp
cmp
xor
ror
sbb
iret
sti
cmpsb
xchg
mov
mov
data16
cmp
stos
cli
es
sti
sahf
nop
inc
repnz
mov
xchg
out
pop
lcall
addr16
fnstenv
aaa
inc
call
repz
dec
shr
ljmp
jl
push
lahf
std
cmp
cs
ss
loopne
jo
popf
add
dec
cmp
mov
data16
incl
ljmp
adc
sbb
sbb
imul
pop
xchg
push
sbb
push
or
cmpsb
pop
fisttpll
ficoml
inc
pop
dec
xchg
mov
sbb
xor
dec
scas
sarl
out
movsl
jb
sub
push
adc
mov
push
xor
or
xchg
cmp
mov
bound
jmp
lods
rclb
or
out
out
mov
inc
xchg
ja
push
xchg
repnz
test
push
cmp
mull
ja
mov
cs
imul
into
int3
pop
sub
push
pop
push
add
xchg
out
out
test
sub
mov
mov
mov
jno,pn
sub
lods
test
das
sbb
les
push
jnp
es
lret
mov
xchg
xchg
xlat
jmp
addr16
addr16
jp,pn
daa
mov
js
adc
stc
stos
cmp
les
mov
int3
imull
negb
sub
cli
mov
shl
adc
jo
in
sub
cmp
frndint
and
sbb
call
and
stos
clc
mov
sub
adc
cld
push
mov
cmpsb
jl
push
xchg
sbb
add
std
or
pop
or
add
int
idivb
outsl
xor
cmp
insb
pop
adc
aaa
and
nop
je
xor
in
sarl
ljmp
dec
mov
and
push
mov
mov
jo
dec
push
xchg
ficompl
cmp
dec
jb
aaa
xchg
jno
xlat
in
sub
in
push
aaa
sub
test
std
jae
add
or
stos
push
repnz
adc
imul
dec
mov
arpl
out
push
jecxz
fdivl
push
push
test
mov
into
push
push
add
les
enter
jg
cmp
dec
movsl
mov
mov
mov
mov
mov
pusha
pop
xor
cmp
jg
jne
xor
and
out
push
fiaddl
push
lcall
push
pushf
mov
arpl
lcall
push
clc
add
lret
ja
xor
pop
mov
stos
aas
loope
hlt
push
adc
add
in
mov
xchg
cmp
mov
movsb
stos
xorl
test
sti
inc
pop
jbe
sub
sub
mov
jne
clc
lret
pop
je
adc
cmc
sarl
shlb
incl
and
ljmp
sub
ret
cs
je
inc
jecxz
add
or
call
fiaddl
decl
xor
xor
and
adc
pop
shrb
out
mov
sti
cmp
add
imull
in
sahf
stc
cmp
inc
push
hlt
dec
or
fadds
imul
dec
iret
daa
lret
dec
add
jno
fisubs
sbb
decl
lds
stos
xchg
das
xor
cmc
sarl
inc
std
xchg
push
xchg
mov
fbstp
xor
pop
int
fdiv
imul
cmp
xor
fldl
movsb
add
dec
sbb
mov
sbb
mov
mov
dec
pusha
adc
gs
in
push
out
sbb
lret
adc
hlt
dec
sti
frstor
or
cmp
sbb
movsb
fstcw
icebp
and
lret
pop
fmuls
sub
sahf
repz
dec
lods
cltd
dec
cld
outsb
in
out
insb
insl
pop
enter
ret
adc
in
cli
pop
out
icebp
sub
pusha
pop
enter
fsts
fsubrl
sbb
adc
packssdw
mov
sbb
lret
call
push
jno
divl
xor
shrb
jnp
fwait
test
dec
xchg
mov
sub
popf
sub
fmuls
push
push
sub
dec
dec
xchg
cmp
test
mov
idivb
push
lods
mov
xchg
cs
or
imul
push
out
adc
loope
push
dec
mov
dec
call
sarb
daa
pushf
pop
mov
xor
sbb
mov
fidivl
sub
sub
insb
data16
jb
out
sbb
ret
mov
stos
cmp
mov
xor
cli
insb
add
and
nop
mov
and
add
mov
les
fmulp
cmp
lock
pushf
add
adcb
bound
sub
cwtl
cli
push
pop
xchg
sub
mov
xor
xchg
xor
stc
scas
js
jp
sbb
orl
mov
cmp
fsubrp
xchg
add
sub
shll
insb
sub
jecxz
xor
mov
insb
sbb
movzwl
scas
cmc
sbb
cmp
adc
call
sbb
jns
shll
icebp
mov
lock
ljmp
jae
push
stc
or
rcr
cli
scas
mov
push
push
sarb
in
adc
out
leave
mov
sbb
inc
testb
in
push
lods
adc
lea
scas
cmpsl
cmp
rolb
jbe
iret
mov
aam
or
cmp
xchg
mov
mov
push
rcll
mov
or
rclb
loope
sub
inc
xchg
nop
mov
adc
push
pop
xchg
stos
aam
aaa
dec
add
aas
adc
dec
sbb
jno
ja
std
jnp
dec
xchg
fsts
ja
adc
pop
dec
pop
lret
sbb
es
mov
push
mov
lret
aas
push
sbb
fstpl
insb
repz
lods
or
push
mov
lods
dec
mov
fnstenv
das
fsubrs
sub
cli
jne
add
mov
push
aas
lcall
pop
push
dec
cmpsl
subb
inc
pop
in
sbb
mov
mov
aas
ss
mov
mov
xchg
sarb
subb
xchg
push
test
mov
int3
add
das
stos
cmp
cmp
push
push
add
cmp
enter
ret
add
stc
or
arpl
jle
imul
pushf
lods
xor
sahf
xor
or
in
jg
data16
push
sbb
mov
mov
dec
jnp
mov
sub
iret
mov
psllq
ret
lret
inc
xor
cld
dec
lret
test
cmpsb
out
mov
mov
dec
scas
push
insl
cmp
mov
stc
inc
xchg
jecxz
dec
sub
adc
cmp
adc
sub
imul
aam
dec
sbb
push
mov
sub
js
jp
and
fisubl
je
mov
cmp
das
mov
xor
in
subl
push
jns
dec
xlat
fwait
push
inc
mov
pop
push
adcl
fxch
or
pusha
pop
jg
cmp
sbbb
jb
add
cmp
xchg
xchg
cltd
sbbl
icebp
cltd
mov
inc
jae
std
adc
mov
mov
xor
scas
cmpl
push
imul
push
fwait
rorl
enter
cmp
or
sub
rcl
loop
lahf
xchg
fstps
mov
cld
fld1
sub
xor
mov
xchg
pop
jne
mov
sbb
adc
adc
dec
mov
inc
or
stos
insl
cmpl
cli
jae
cmp
pop
adc
ljmp
repz
pop
sub
mov
out
sub
test
lahf
rolb
adc
mov
and
mov
bsr
xor
add
jg
sub
les
mov
andnps
dec
cli
pop
fdivs
sbb
stos
repnz
mov
and
jl
jge
icebp
bound
dec
mov
loopne
lret
and
fbstp
out
cwtl
xor
jo
add
lds
adc
cwtl
pushf
fnstenv
out
out
push
cmpb
or
sbb
es
xchg
sub
notl
mov
fsubs
lods
mov
dec
popf
insl
push
fucom
lret
dec
or
leave
sbb
push
scas
jge
mov
sub
and
lods
or
mov
dec
imul
jb
fwait
clc
jmp
adc
in
ret
aam
and
cmp
xchg
cli
aas
jns
dec
and
js
cld
add
adc
sub
out
test
pop
inc
mov
inc
push
lds
mov
mov
lods
jmp
outsl
in
inc
test
bound
jnp
test
adc
xor
jp
shrb
mov
pop
or
inc
or
or
gs
push
sbb
loopne
jbe
adc
and
popf
adc
sub
enter
clc
mov
test
push
rcrl
cmp
xchg
mov
xchg
add
stos
aas
mov
mov
or
pop
lret
jge
push
lock
mov
mov
sbb
jmp
or
lea
iret
dec
or
or
outsl
push
mov
pop
inc
fsts
pop
jmp
test
cmp
and
jno
cltd
sub
adc
pop
es
xor
mov
insl
fs
mov
push
and
divb
addr16
andl
sbb
mov
lea
mov
cli
cmpsl
push
mov
movsb
cmp
push
sbb
mov
or
insl
retw
xchg
inc
test
stos
sbb
or
js
sbb
cltd
mov
mov
xor
jo
jp
sub
into
jg
jb
out
inc
or
pop
xchg
dec
adc
pop
mov
push
ret
test
pop
sub
jb
mov
push
dec
data16
cmpsl
lods
nop
dec
test
xchg
lret
mov
inc
mov
dec
rcr
pand
jo
add
sbb
ret
xor
dec
pop
mov
jne
insl
das
fisttpll
sbb
gs
mov
subl
daa
sbb
fs
dec
repz
mov
inc
and
adc
jl
push
rcrb
fstps
lret
inc
cmp
scas
repnz
pop
or
test
insl
loop
mov
mov
call
cmp
and
aas
sub
sbb
loope
lods
test
pop
fs
jb
test
xchg
xchg
cmp
pop
dec
call
inc
pop
mov
mov
sub
jg
fs
in
mov
cmp
lcall
lds
in
stos
int
std
add
jl
mov
mov
mov
rorb
mov
push
pop
sbbl
mov
sbb
je
push
into
push
mov
std
push
and
inc
lahf
mov
cmpsl
les
push
pop
je
fadds
lcall
jnp
sti
inc
add
test
inc
mov
pushf
lds
mov
inc
xchg
mov
jl
dec
dec
xchg
pop
inc
pop
jns
test
xchg
xchg
in
xor
popa
std
out
pop
pushf
insb
sbb
pop
xor
fcomps
jl
test
dec
repnz
scas
pusha
popa
pop
adc
std
mov
push
cmp
pop
cmc
push
and
aad
aam
cmp
mov
pop
add
xor
xchg
ret
fidivrs
int3
mov
jne
out
xchg
leave
sbb
jnp
in
pop
xchg
imul
cmp
popa
mov
ja
js
je
decb
or
and
adc
xchg
cmpsl
mov
cmp
add
ret
aad
cmp
mov
in
jle
lcall
inc
mov
dec
icebp
outsb
je
mov
lahf
leave
pop
lods
hlt
test
stos
jl
ja
daa
inc
sub
xchg
cmp
jmp
mov
lods
mov
xchg
cmp
lret
mov
cmp
mov
cwtl
fwait
lret
testb
adc
and
movsl
xchg
movsl
ss
pop
lods
mov
cmp
adc
pop
push
std
inc
sbb
lods
pop
loope
jp
std
cmpsb
xchg
sarl
test
cwtl
stos
lock
xor
mov
fisubs
mov
lcall
inc
jmp
lock
inc
fisttpl
pop
lds
mov
or
mov
mov
jns
les
rolb
rcrl
out
dec
jbe
jmp
cmp
add
cwtl
popa
out
lret
movl
mov
loope
or
insb
xor
lds
sub
dec
cmp
outsb
xor
inc
push
loopne
popa
inc
aaa
dec
inc
sbb
mov
lods
cmpl
push
pop
or
sub
hlt
or
test
fisubl
loopne
xorb
popa
push
out
sbb
in
dec
mov
sub
xchg
test
or
adc
int
sbb
and
arpl
test
push
lock
test
lret
ret
pop
fst
lock
pop
mov
out
adc
xor
mov
xchg
dec
mov
mov
loopne
inc
ljmp
in
gs
cmpsb
fs
ss
cmp
xorl
jae
iret
gs
test
mov
shl
inc
add
rorl
daa
hlt
inc
adc
test
xchg
shrb
sbb
jge
imulb
ljmp
and
xchg
shrd
loopne
test
xchg
lods
hlt
dec
pop
addb
push
mov
push
xor
add
sti
popa
dec
fdivrs
cmp
xchg
mov
rclb
mov
xchg
xor
lret
inc
out
xlat
lret
jge
or
daa
fmuls
jle
loop
or
or
or
movsb
jnp
lea
mov
or
ja
push
int3
xor
mov
lods
mov
inc
stc
aas
ja
sti
lds
and
mov
cmp
aas
inc
shll
xor
iret
mov
push
sub
add
dec
insb
dec
pop
cmp
lcall
xor
ret
mov
inc
add
jnp
inc
mov
scas
gs
add
sbb
into
in
fisttps
rolb
nop
mov
or
xchg
pushf
mov
add
fs
rorl
clc
adc
lods
add
push
mov
jl
mov
push
mov
sbb
jge
lret
cltd
cmp
shrl
stos
lret
ja
pop
mov
dec
push
test
mov
xor
adc
addr16
aam
pop
not
orb
ds
dec
adc
mov
loop
cld
sub
in
cmpsl
idiv
scas
test
enter
cmc
icebp
mov
test
adc
jmp
movsb
mov
jbe
imul
out
aad
test
gs
enter
into
out
pop
jge
leave
es
mov
cmc
pusha
leave
shll
push
xchg
clc
xchg
test
aam
inc
loope
popa
mov
xchg
sahf
add
nop
adc
mov
fstpl
jl
lret
pop
ljmp
flds
sbb
pop
mov
adc
leave
pushf
sahf
jne
frstor
mov
sbb
adc
sti
mov
int3
shl
and
fldcw
xor
pop
push
sub
ret
cmp
dec
ss
test
shll
add
push
sub
fisubl
sub
add
or
or
aam
dec
in
push
sub
fwait
nop
pop
sbb
xchg
jae
in
loopne
sti
jle
fnstenv
cli
jp
mov
insl
addr16
aam
fisttpll
cmpsb
and
cmp
cs
inc
rorb
popa
gs
xor
push
fucom
add
push
or
repz
mov
add
xor
ljmp
aad
popf
les
jbe
push
fldl
pop
movb
mov
lds
in
xor
pop
jne
movsb
xor
fstps
scas
stos
fstps
leave
loopne
ljmp
inc
or
sbb
repz
int3
out
sbb
pop
xchg
xchg
popf
cmp
sbb
jnp
fyl2xp1
mov
jbe
sub
mov
jo
fmull
cltd
or
movsb
mov
push
mov
mov
popa
nop
and
loopne
inc
aad
sbb
jns
adcl
pop
leave
shlb
mov
push
imull
inc
sbb
inc
adc
out
adc
movntps
sti
fdivrl
arpl
sub
jno
xor
pop
inc
xchg
pop
rep
pop
jno
sub
xchg
push
mov
push
jnp
cmp
dec
add
outsb
ja
mov
testb
cld
loopne
mov
push
movsl
cmpsl
inc
mov
mov
loop
lahf
int
sbb
xchg
scas
lahf
push
mov
or
mov
out
mov
jno
dec
jp
cmp
ret
cltd
iret
inc
fcmovnu
pop
inc
inc
int
cmc
int3
ja
mov
dec
jne
mov
bound
pop
jmp
popa
inc
daa
jns
rcrb
jge
pop
enter
fldz
ret
fdivrp
mov
lret
leave
es
inc
test
pop
adc
popa
in
mov
and
loopne
inc
sahf
aaa
mov
popa
addb
and
test
sub
sbb
sbb
xchg
pop
jae
stos
pop
pop
test
adc
and
mov
jae
adc
add
mov
sti
insb
push
and
sbb
jp
pushf
add
stos
mov
pop
mov
dec
out
inc
ret
cli
pop
fcmovnu
push
inc
xchg
fldenv
xor
jno
jae
out
jbe
jnp
or
in
cli
adc
jae
cmp
loope
jne
pop
addb
das
sbb
jnp
outsl
jnp
inc
arpl
les
addr16
and
jne
cmp
jmp
dec
sbb
repnz
push
in
push
add
movsl
icebp
sbb
je
inc
stc
lea
call
stc
aad
pop
push
and
cmp
or
mov
xchg
lock
jae
fcomps
lcall
pusha
addb
and
sub
sub
pop
fcomip
jne
and
repnz
sub
loope
test
jmp
jmp
lret
and
movsb
xchg
sub
outsl
push
cmpsb
xor
fisubrl
lcall
sbb
xor
ss
inc
in
or
inc
outsl
adc
rolb
mov
hlt
push
loopw
and
jne
subl
jg
stos
fwait
lock
fxch
mov
call
je
inc
andl
mov
test
or
stc
pop
leave
in
inc
or
mov
push
cmpsl
dec
dec
lods
xchg
scas
dec
xor
dec
mov
sub
mov
xchg
sbb
mov
stos
clc
outsb
aad
gs
xchg
cli
notb
push
or
pushf
nop
mov
jge
dec
push
and
mov
popa
rclb
test
andl
push
out
mov
adc
scas
sbb
loop
movsb
pop
das
xchg
mov
shll
fwait
testl
into
jnp
mov
cs
out
xor
or
push
xor
test
sub
pop
mov
sbb
cwtl
jecxz
and
dec
std
lahf
mov
jno
fisubrs
jne
xchg
push
ljmp
mov
sub
jbe
punpckldq
pop
aam
loope
sub
inc
cmp
je
leave
push
lods
push
add
xchg
jae
ficomps
sub
mov
xchg
gs
mov
xchg
mov
icebp
xchg
dec
ss
daa
cmp
sub
jbe
push
pusha
xchg
sti
or
pop
js
cld
out
adc
fwait
cmp
pushf
dec
mov
jmp
mov
xor
dec
aas
jnp
mov
xor
jle
imul
mov
or
xor
push
and
loop
pop
mov
shll
cwtl
or
xchg
adcb
and
mov
and
pop
push
into
bound
mov
cmp
pop
std
andl
xchg
jb
add
mov
into
aam
add
inc
mov
and
fcomps
adc
dec
add
lret
nop
push
xlat
test
or
loopne
xchg
inc
push
push
scas
ja
xor
jl
out
xor
xchg
pop
push
aaa
jbe
iret
adc
push
fs
fisttpl
push
ret
scas
mov
xchg
jmp
xlat
clc
std
aad
push
xor
addb
lahf
cmc
pop
shr
clc
imul
test
outsl
push
cli
dec
xor
into
scas
insb
push
fwait
test
dec
arpl
push
cld
testl
sbb
es
xchg
pop
ljmp
fcomps
xchg
fnstcw
in
inc
sbb
mov
out
cmp
movsb
add
ret
pop
jbe
cld
stc
mov
and
mov
sub
mov
xor
mov
pop
mov
push
xchg
out
and
mov
pop
repnz
mov
ds
fbstp
mov
out
mov
dec
fimull
mov
adc
push
push
in
movsl
pop
mov
mov
mov
mov
cmp
jnp
into
aaa
int
scas
fs
inc
repz
mov
repnz
ret
imul
ljmp
add
jle
xchg
add
jge
dec
stos
inc
dec
bound
lcall
jge
mov
jle
add
mov
or
cmp
leave
sbb
rcll
mov
out
jge
mov
fcomps
xchg
add
push
int
nop
add
pop
cmp
lea
in
pushf
jo
sub
call
xchg
jecxz
pop
xor
popf
mov
push
jne
dec
loope
out
xchg
flds
loop
in
mov
repz
sbb
sub
adc
out
pavgb
movl
push
sub
adc
adc
aam
push
int
hlt
mov
adc
lock
or
jle
mov
repz
cmpsb
mov
sbb
negl
cltd
and
out
flds
aas
add
adc
jno
xchg
cli
lret
outsl
cmpsb
mov
in
xchg
cmp
xchg
pop
ficoml
jp
leave
pop
pop
aaa
xor
mov
sub
add
mov
pop
mov
adc
and
xchg
jbe
sarb
mov
pop
sahf
jecxz
outsb
aad
icebp
push
xor
add
mov
hlt
mov
sahf
dec
andb
ret
push
cld
mov
push
fcmovne
inc
testb
mov
fdivp
imul
jnp
mov
sub
pop
and
lock
inc
mov
testb
out
pop
clc
sub
ffree
in
ja
out
or
test
int
jne
mov
inc
and
idivl
and
ja
fs
filds
int
cmp
mov
sub
mov
mov
mov
inc
mov
mov
dec
cld
jg
inc
icebp
xchg
xchg
mov
mov
xor
xor
mov
in
fwait
cmp
sub
jmp
sub
mov
xor
add
sub
into
inc
pop
hlt
and
in
adc
cld
push
and
jb
call
shl
xchg
cmc
loopne
jl
jecxz
mov
out
cwtl
test
mov
or
inc
ljmp
sub
mov
xchg
or
mov
add
std
lods
mov
scas
xor
sbb
les
dec
sbb
xor
in
outsl
jge
push
xchg
imul
paddd
and
lea
sub
int
xlat
sbb
cmp
jb
fwait
int3
idivl
and
push
pop
mov
cmpsl
int
mov
cltd
jb
push
jg
jg
dec
push
imul
loop
adc
xor
stos
insl
dec
pop
dec
imul
mov
sbb
fwait
pop
xchg
add
ss
and
mov
jne
test
ficompl
dec
mov
inc
out
bound
mov
or
sub
sahf
push
add
mov
and
add
adc
inc
inc
inc
push
popf
or
outsl
cmpsl
push
xchg
sub
loopne
test
loop
dec
cmpl
out
lods
je
mov
cld
push
ds
rorl
loope
inc
lahf
xor
inc
adc
les
out
fcoml
cld
in
inc
add
es
mov
sbb
sub
fwait
add
ror
pop
aaa
test
ljmp
out
push
jmp
aaa
mov
andb
movb
pushl
das
in
shl
nop
xchg
inc
js
jnp
mov
jbe
dec
push
outsl
frstor
and
sbb
ficompl
fstp
add
rcl
sub
push
rolb
rorl
data16
mov
fimuls
xchg
fsubr
dec
and
dec
xor
fdivl
mov
dec
jbe
ss
fs
mov
dec
and
mov
cs
mov
pop
int3
jae
or
imul
jns
sbb
mov
or
mov
in
outsl
dec
add
adc
pop
pop
ja
cmp
sti
ja
dec
push
imull
xchg
jb
jecxz
xchg
sbb
or
jge
mov
mov
xchg
inc
push
push
das
mov
cmpsb
jo
sub
int3
repz
clc
add
dec
mov
push
mov
mov
mov
pop
mov
xor
inc
nop
sarb
sbb
js
jl
in
jmp
xor
jno
jno
cmp
jmp
int3
loopne
dec
outsb
xchg
std
iret
bound
scas
add
aas
fildl
nop
inc
popa
or
fwait
js
loopne
sbb
jae
push
mov
popf
dec
or
xor
sbb
inc
sar
cmp
mov
dec
jnp,pn
cmp
push
mov
mov
push
mov
adcl
add
mov
xor
sub
inc
jbe
movsb
sbb
jmp
pop
and
xor
mov
movl
push
mov
imul
popl
fs
and
add
inc
aad
pop
xchg
repz
xchg
mov
test
movsb
inc
inc
xor
or
dec
xor
mov
imul
jno
popa
push
cmp
pushf
cli
pop
loope
xor
and
push
cmp
xchg
xor
mov
pusha
sbbb
movsl
repnz
sbb
jge
pusha
aas
cmpsb
hlt
in
add
and
rolb
adc
int3
leave
mov
lahf
in
adc
mov
das
mov
mov
loopne
cmp
add
push
scas
pop
mov
pop
cmc
mov
ret
sbb
sub
xchg
fmuls
adcb
aas
out
movsl
cwtl
and
jmp
mov
loop
stc
jmp
in
movsb
pop
cmpl
dec
clc
lret
fnsave
pop
aam
cmp
sub
lcall
mov
jae
pop
iret
dec
outsl
jno
mov
sub
jns
test
adc
lods
cs
xor
out
loope
sub
and
psllw
or
cmp
into
mov
hlt
mov
sbbl
add
mov
jae
mov
or
add
jne
movsl
pop
call
ss
test
lcall
stc
xlat
ret
fcomp
mov
dec
int3
out
aad
xchg
mov
in
mov
push
rcrb
jg
cmp
and
stos
jecxz
mov
lahf
in
dec
pop
adc
add
inc
sub
je
sbb
sbb
push
insb
pop
dec
shl
push
aad
inc
sbb
ret
pop
gs
sub
inc
idivl
xor
cmc
add
push
lgs
shlb
in
push
test
xor
shll
jb
imul
rcl
add
testb
ret
jp
cmc
das
pop
lea
mov
sbb
stos
cmp
push
mov
push
lret
push
pop
in
add
and
lock
dec
mov
icebp
dec
add
fnsave
and
jg
sub
lods
mov
insl
data16
mov
mov
pop
icebp
and
mov
pop
shl
or
and
out
cmp
adc
adc
add
cmpl
int3
pop
cltd
xchg
push
jmp
cmp
jo
test
out
test
mov
or
ss
mov
ret
out
mov
lock
jg,pt
in
lret
shl
insl
or
scas
mov
xlat
and
sbb
cmpsb
pushf
aas
ds
add
sub
and
testl
test
mov
add
jbe
jmp
je
mov
inc
lods
sub
out
iret
mul
sti
mov
pusha
popf
xchg
sbb
in
scas
and
cli
or
ret
rorb
mov
fs
xor
sti
xchg
test
leave
dec
pushf
mov
movsb
mov
or
fsubl
xor
mov
sub
dec
lods
xchg
clc
scas
ja
cltd
sub
enter
shll
jo
lret
fimuls
and
jb
mov
fsubrs
nop
addl
xchg
push
adc
adc
out
inc
and
bound
enter
je
movsb
or
jecxz
add
int
and
mov
cli
push
testl
jae
push
fdivr
xchg
ds
xchg
cs
pop
lods
sbb
push
adcl
stos
dec
dec
aaa
lods
lods
and
sbb
xchg
jecxz
pushfw
push
inc
xor
push
add
pop
mov
inc
dec
scas
dec
aad
inc
mov
arpl
push
inc
roll
inc
imulb
sbb
lods
sub
dec
pop
or
rol
xchg
mov
popf
xchg
push
mov
mov
rorl
dec
or
popa
aaa
sahf
imul
xchg
mov
xchg
or
or
cs
icebp
pusha
sub
xchg
mov
in
pop
jecxz
sbb
imul
xchg
cmpsb
in
adc
in
cwtl
dec
ds
call
repnz
mov
sbb
cmp
push
inc
xchg
xor
dec
mov
stos
xchg
lret
fxch
int
xor
push
sbb
loope
xor
mov
mov
xchg
movsb
push
js
fstpt
loop
xor
mov
and
insb
mov
xor
sbb
inc
sbb
fwait
dec
dec
lea
fwait
push
cmc
lock
jg
sbb
sub
lods
pop
push
mov
mov
mov
inc
push
pop
mov
subl
adc
test
inc
andl
imul
xchg
loope
mov
add
add
push
fcmovne
mov
sahf
loop
aaa
paddusb
xchg
push
jae
stc
fdivl
lahf
cs
or
nop
jnp
repz
nop
data16
jmp
ret
jo
xor
fstps
pop
inc
inc
pop
sbb
lods
or
xchg
jecxz
inc
xchg
jge
or
push
adc
loope
jg
cmp
gs
mov
cltd
les
imul
mov
dec
push
test
add
lods
dec
lcall
sbb
iret
mov
jae
ljmp
or
fnsave
and
add
ficoml
int
sub
jb
sbb
jbe
jns
popf
pop
and
or
push
movsl
xor
pop
pop
loop
repz
cmp
or
xor
sbb
jo
mov
into
jns
call
dec
and
mov
xchg
or
daa
cli
inc
gs
xor
lea
incb
xchg
inc
hlt
int3
andb
aam
sub
sbb
js
sti
out
js
fimull
jo
dec
int
int3
lcall
es
popf
fdivrs
mov
mov
std
jp
jmp
jnp
sbb
cmp
or
and
add
push
pushf
pusha
stos
dec
iret
bound
out
xchg
icebp
mov
jmp
sub
mov
les
lods
mov
lret
aas
jnp
sbb
les
stos
cmp
jmp
push
js
mov
inc
pop
leave
pop
mov
cmc
lcall
mov
jle
repz
jmp
xchg
push
mov
lret
mov
inc
icebp
fs
cmp
jbe
dec
or
push
fwait
sbb
in
pop
test
aas
jp
fldl
mov
iret
dec
into
pop
mov
rorl
dec
dec
and
in
adc
fistpll
sbbb
fwait
mov
movq
test
popa
gs
call
add
lods
lcall
mov
or
xchg
mov
pop
and
push
mov
mov
mov
sub
scas
nop
push
xlat
dec
mov
jbe
ja
mov
insl
pop
mov
pop
cmp
push
xorb
pop
and
mov
leave
mov
adc
push
adc
insb
push
pop
mov
or
incb
inc
insb
inc
mov
and
arpl
jns
jecxz
lods
xchg
sbb
sahf
mov
mov
and
je
outsl
sub
xor
in
lock
pop
sbb
test
push
in
mov
test
fcmovu
adc
xchg
pop
dec
push
inc
xor
cmp
dec
daa
xchg
icebp
out
mov
mov
cmpb
xchg
inc
pusha
scas
test
stos
pop
pop
stc
in
adc
into
pop
out
scas
xchg
and
lcall
pop
jl
xor
neg
iret
mov
push
in
popa
fscale
mov
cld
pop
psrad
sahf
fcomps
xor
push
pop
iret
jmp
pop
xchg
sahf
loopne
daa
loope
pop
mov
arpl
cld
dec
dec
aad
sub
and
add
mov
push
ja
jno
inc
mov
adc
pop
xor
aam
les
cmc
repnz
sub
test
ja
push
mov
and
fcomip
out
sbb
sbb
mov
lahf
jg
or
ret
test
jge
dec
cmpsl
or
or
adc
mov
mov
mov
sti
or
iret
arpl
push
pusha
dec
insb
pop
in
and
jg
push
or
jb
insb
filds
pop
into
popa
and
mov
push
mov
fsubl
push
es
loopne
cmp
pop
or
mov
mov
jmp
rcrb
neg
push
stc
add
fdivrl
push
iret
outsl
adc
inc
xlat
out
aad
cmp
jns
int
mov
push
test
adc
divb
inc
orl
inc
sahf
loopne
fidivrl
jg
jns
repnz
out
sbb
nop
popf
push
mov
pop
dec
add
add
sub
or
sbb
adc
push
xchg
scas
scas
sbbl
push
ret
subl
mov
adc
lcall
push
inc
dec
icebp
jp
fs
idivl
popf
pop
cwtl
push
mov
cltd
push
mov
enter
pop
xor
sub
push
pop
addl
xchg
push
sub
add
cmpb
fnstenv
movsb
outsb
pop
cmpsl
jecxz
jl
add
addr16
out
sub
insl
int3
mov
sbb
les
ret
xor
add
push
cltd
pop
and
xchg
daa
pop
cmp
iret
outsb
adc
loopne
sbb
lock
mov
subl
push
jnp
paddsb
cmpsb
push
sbbl
mov
xchg
scas
lret
lret
push
mov
adc
inc
adc
shrb
pop
sbb
ficoml
add
pop
push
cmp
push
leave
sbb
push
fidivrs
fdivrs
adc
and
scas
xchg
aaa
nop
enter
adc
inc
jp
jb
adc
push
sbb
xor
imull
out
xlat
stos
push
inc
es
cltd
dec
aas
xchg
in
cmp
dec
frstor
fidivrs
ret
add
jae
fwait
and
ds
mov
and
jo
xchg
adc
cld
inc
cltd
sub
out
mov
cmp
mov
inc
mov
push
sub
lgs
xorl
push
dec
test
icebp
repz
scas
outsb
push
and
jae
xchg
loopne
inc
jne
sbbb
lock
and
fdivr
rcll
sub
aas
pop
scas
xchg
pop
sahf
cmp
js
xor
sub
or
xchg
inc
xchg
rolb
es
jge
std
inc
fsts
decl
mov
xor
cmp
es
sahf
loope
xchg
sub
cmp
subl
in
pop
test
aad
sub
pop
fsubs
xchg
clc
pop
and
lret
xchg
enter
mov
les
in
popf
fldl
hlt
outsb
dec
mov
inc
mov
mov
stc
inc
push
mov
push
pusha
mov
xor
fprem1
or
dec
sti
mov
jl
pop
sub
pop
out
push
jnp
and
mov
lea
in
cmpsl
sti
jo
adc
xlat
rcrb
outsl
sbb
mov
dec
mov
sub
enter
add
inc
pusha
arpl
insb
push
hlt
and
cmc
xorl
pushf
inc
pusha
aaa
es
sbb
nop
add
jmp
fsts
aad
dec
xor
pop
stc
loope
sub
adc
out
push
jle
rclb
jno
imul
or
adc
insl
push
jnp
data16
and
pop
push
xchg
out
icebp
cmp
call
loopne
adc
lahf
or
jp
or
sti
xchg
xchg
adc
fcoms
clc
gs
stos
or
into
les
pop
push
clc
jp
dec
adc
push
jno,pn
ds
test
mov
insb
mov
pop
adc
into
clc
dec
or
dec
daa
out
jle
scas
pusha
sub
test
je
sbb
sbb
popf
cmp
je
and
repz
jle
insl
xor
out
lret
dec
sbb
cmc
jb
xor
sbb
std
movsb
mov
jecxz
ret
dec
out
mov
mov
sbb
aad
jae
dec
int3
shl
out
push
inc
shrb
mov
sbb
pop
inc
mov
fldl
adc
jbe
inc
lea
pushf
shl
mov
enter
inc
loopne
out
or
adc
into
mov
arpl
lods
xor
cmp
pop
test
lock
addl
mov
or
ficompl
xor
pop
out
scas
mov
lods
mov
push
cmp
xor
add
test
pushl
imulb
roll
addl
push
jle
cld
mov
mov
subb
adc
or
push
pop
rcrl
pop
fstps
cltd
dec
and
mov
push
popa
int
pop
arpl
out
mov
cld
aaa
cmpl
iret
fwait
aaa
je
add
call
sbb
jb
test
push
cwtl
cmpsl
arpl
aam
sbb
sbb
inc
xchg
dec
cmp
stos
jmp
push
and
enter
lahf
idiv
push
sub
aad
cmp
or
mov
dec
sub
test
and
stc
push
pop
repz
into
cli
repz
mov
sub
mov
xchg
push
add
mov
mov
xchg
fidivs
pop
stos
movsb
aad
in
dec
adc
inc
ljmp
xlat
mov
mov
xchg
jmp
xchg
adc
push
push
ja
add
jl
jp
adc
dec
adc
jecxz
pop
adc
or
jne
pop
test
add
fstpl
mov
pop
test
jb
xchg
out
cwtl
ss
cmp
jmp
xchg
jp
sbb
rcll
ds
sbb
mov
dec
jbe
xor
cmp
xchg
adc
jle
sub
dec
loop
jae
cmp
dec
jae
xchg
andb
in
sbb
in
imul
int3
subb
gs
jbe
dec
mov
add
leave
mov
mov
pusha
popa
jp
subb
jecxz
loope
lcall
mov
out
lret
add
out
xor
addr16
xchg
cwtl
add
jne
lods
and
dec
cmp
out
pop
mov
movsl
xchg
xor
mov
xchg
jle
or
outsb
pop
cmp
out
loopne
or
scas
fldl
aad
xor
xor
clc
sbb
add
sbb
mov
mov
xor
inc
rclb
lcall
mov
sti
bound
jl
inc
or
mov
pminub
mov
insb
jne
push
adc
sahf
mov
dec
push
sub
cmp
out
pop
jp
divb
and
dec
in
imul
and
xor
push
stos
inc
fdiv
xchg
dec
adc
jl
dec
hlt
andb
pop
inc
sub
jl
hlt
pop
mov
arpl
or
lock
out
jns
scas
mov
add
and
mov
mov
inc
test
imul
adc
ret
xor
mov
mov
sbb
repz
cmp
ds
jae
mov
mov
lods
data16
leave
scas
jecxz,pt
shr
repz
inc
mov
lret
add
cmc
loop
ret
popa
pop
jge
cmp
repz
jnp
fiaddl
xchg
mov
stc
sbb
mov
clc
mov
inc
mov
fbld
aad
clc
push
push
adc
rorb
fsubrs
pop
dec
outsb
inc
jnp
loop
jb
push
aam
test
arpl
in
pop
scas
leave
fwait
mov
inc
mov
mov
jb
mov
adc
subl
out
fs
fiaddl
cld
aaa
or
scas
fidivl
xchg
pop
mov
rcll
call
add
or
ds
das
lock
inc
and
shrb
or
ss
fimull
adc
icebp
and
push
mov
stc
xlat
sub
mov
mov
fdivp
pusha
sarb
mov
ret
and
xchg
mov
mov
and
sub
jl
aad
push
scas
lea
push
sbb
jle
push
repz
push
mov
push
pop
add
fmull
and
push
inc
mov
daa
test
mov
pop
int3
lock
inc
xchg
dec
pop
testl
and
arpl
inc
sbb
cmpsl
push
mov
dec
lret
adc
int3
inc
inc
jle
mov
popf
pop
inc
jb
xchg
add
add
xchg
or
adc
rcrb
jae
test
push
ret
je
inc
adc
jno
lahf
fcoms
pop
pop
or
jmp
cwtl
xor
ror
and
fwait
mov
imul
cltd
or
repnz
aam
stos
inc
xchg
loopne
dec
int3
mov
sbb
test
ret
lods
mov
and
ss
into
mov
push
dec
push
hlt
mov
cltd
dec
sbb
mov
in
loope
push
shufps
cmp
and
pushf
push
pushf
lret
scas
inc
popf
popa
enter
call
dec
es
repz
fwait
mov
xor
ds
xchg
pop
xorl
cmp
aas
ficoml
inc
gs
push
jp
xchg
mov
adc
and
jp,pn
cmp
insl
mov
aas
loop
aad
add
lods
filds
fsubrs
sahf
adc
icebp
and
jg
inc
inc
ja
mov
repnz
scas
or
jmp
and
jp
je
inc
cld
xchg
std
fs
cmp
mov
adc
xchg
iret
pushf
insl
mov
or
sub
les
roll
in
dec
mov
xor
sbbb
out
arpl
icebp
leave
imul
and
out
clc
stos
sbb
sbb
pop
rorl
loope
mov
xchg
xchg
pop
lea
add
movsl
push
or
and
fnstenv
out
sti
xchg
adc
popa
mov
js
sbb
push
out
int3
pop
add
lret
pusha
xchg
rcrl
cmp
aam
mov
psadbw
stos
cmp
add
sarl
or
divb
int3
dec
xchg
out
xchg
add
std
jo
mov
sbb
test
fdivl
or
and
add
in
rorb
xor
pop
lret
rolb
jnp
das
lods
adc
pop
ljmp
dec
aaa
in
mov
mov
iret
outsl
sub
xlat
add
jmp
jbe
fwait
add
cmp
fs
and
jecxz
in
xchg
ret
into
dec
sub
jge
fidivrl
leave
mov
ds
mov
cmp
adc
insl
mov
or
jns
lds
xorl
das
xor
xor
int3
cmp
jnp
push
lods
and
jmp
inc
jp
not
stos
sbb
inc
cmpsl
add
sahf
add
mov
or
pop
test
jg
or
push
dec
rcr
pop
push
adc
aaa
out
dec
sub
pop
call
adcb
push
and
add
push
jecxz
cmp
sahf
fld
mov
add
ds
movsb
mov
fisubl
sbb
mov
push
repz
clc
ds
sbb
test
or
negb
sbb
xorb
push
jbe
jae
leave
lret
pop
pop
lds
inc
je
sbb
cmp
or
inc
popf
lock
sub
xor
repnz
fldenv
loopne
lock
xor
rclb
in
and
std
orb
and
stos
mov
lods
subb
and
popa
inc
test
push
divl
cld
xchg
ss
sub
lods
fsubl
or
cmpsl
insl
lret
xor
fdivs
test
sbb
push
pusha
int
mov
aad
imul
sbb
mov
xchg
xchg
popf
jge
int
std
push
scas
lock
adc
xchg
cs
popf
jnp
lds
mov
add
xchg
sti
xor
add
sbb
stc
mov
cmp
xor
call
jb
stos
dec
mov
int
inc
mov
mov
aam
pop
je
repnz
dec
hlt
movsb
xchg
cmp
xchg
mov
shll
xchg
outsl
xchg
add
adc
cmc
loopne
loop
mov
mov
mov
xlat
shr
ja
push
dec
js
addl
int
daa
sarl
loopne
adc
int
xor
jno
int3
shrl
or
in
out
insb
mov
sahf
addb
xlat
pop
pop
imul
insb
test
jne
ret
inc
mov
jb
fsubp
sbb
sbb
cmpsl
push
pop
inc
or
add
fwait
cmc
ja
sub
xor
or
dec
and
inc
imul
pop
jp
sbb
mov
enter
cmp
ret
push
sbb
push
in
or
dec
lcall
cmpsb
push
or
and
add
jns
pop
jae
addr16
rorl
decb
insl
mov
pop
rcrl
jmp
pop
xor
cmc
pop
fdiv
mov
pop
xchg
out
sbb
in
cmp
xor
jne
pop
inc
cmpsb
mov
sub
cmp
dec
cli
faddl
jecxz
jle
mov
cwtl
mov
repnz
adc
jmp
mov
lret
jo
imulb
outsl
stos
jo
dec
mov
mov
nop
and
in
mov
aad
xor
cli
aaa
lahf
filds
cmp
cltd
mov
iret
adc
add
std
pop
fdivrs
je
sti
test
sarb
repz
push
out
outsb
lret
dec
cld
and
popf
cltd
subl
rclb
rorl
aam
jg
cmp
xchg
mov
sti
mov
mov
cmp
jnp
mov
xor
inc
mov
mov
and
popa
mov
lret
repz
icebp
clc
and
fsubs
sbb
in
fadd
jo
cld
xor
insb
xor
shll
outsb
jmp
or
dec
das
iret
sahf
cmp
ds
repnz
cmp
neg
sub
push
cmpsb
test
lock
gs
loop
jg
jne
sbb
ds
subl
fisubs
pop
pop
fs
cmp
scas
inc
jl
sbb
add
xor
lock
jb
jnp
fwait
xchg
or
push
cmp
scas
jae
xor
jp
push
and
push
outsl
shlb
jmp
pop
pop
xlat
fisttps
aam
push
test
daa
sub
movsb
mov
mov
jg
mov
es
push
dec
stos
adcl
fnsave
xchg
jg
decb
pop
cmp
insb
les
push
data16
fmull
jae
adc
adc
loop
test
jnp
cwtl
inc
fwait
loop
push
jl
dec
push
jo
in
push
ljmp
call
bound
mov
add
inc
imul
inc
aam
mov
push
sub
int3
dec
repnz
scas
testl
adc
fbstp
out
shll
pop
lods
xor
xchg
push
add
pop
mov
test
cmpsb
sbb
jg
jne
test
fcmove
jo
adc
cmp
pop
insb
cmpsb
jp
lret
loop
adc
adc
and
mov
js
stos
add
adc
dec
dec
movsl
hlt
rcll
test
add
insl
mov
mov
xorb
movsl
stos
xchg
jle
inc
sub
pop
adc
mov
pusha
pop
mov
stc
fnstsw
inc
mov
scas
adc
and
cltd
fldcw
call
popa
lcall
sub
cli
push
popf
push
mov
mov
ret
cmpsb
adc
add
mov
lock
fbstp
inc
rcrb
std
in
jbe
andl
inc
cmp
outsl
mov
adc
test
pop
mov
add
inc
rcrl
nop
rcll
bound
ljmp
shll
mov
mov
inc
shr
outsb
jb
cmc
sti
jg
mov
addb
pop
or
push
stos
imul
push
std
repz
push
nop
inc
sub
movsb
insb
cmp
dec
inc
aaa
sub
fwait
mov
scas
loopne
push
mov
jne
dec
mov
rcr
out
arpl
pop
iret
ss
and
mov
pop
fs
jle
jne
insb
mov
fsubrl
cld
fwait
push
inc
inc
pop
das
cmpsb
jmp
mov
dec
ljmp
xchg
push
mov
fsubrs
cmc
push
sub
ret
and
pop
call
cmp
sahf
lcall
adc
pop
daa
jmp
loop
pop
int3
or
pop
xchg
in
mov
mov
xchg
xchg
sub
cmp
mov
push
sub
aas
cmc
nop
fiadds
cltd
lods
out
icebp
stc
sbb
enter
dec
sbb
lods
lods
aam
repnz
pop
cmpl
xor
lods
xchg
loope
mov
test
scas
pop
xchg
mov
jb
xor
xor
cmpsb
dec
and
addr16
pcmpgtd
push
jmp
in
xor
or
xor
mov
dec
add
fwait
arpl
add
pop
adc
sahf
xchg
and
icebp
push
push
test
aad
inc
push
sub
dec
or
loop
fimull
mov
loop
mov
jmp
mov
mov
pop
sar
cs
push
adc
pop
cmpl
mov
sti
dec
xor
ror
stos
adc
lahf
insb
sub
rcrb
lcall
jo
imul
sti
xlat
mov
std
in
and
inc
add
or
leave
mov
inc
fistpll
cld
fsub
mov
mov
xchg
cld
jge
frstor
pop
cmp
scas
xchg
xchg
mov
and
mov
jb
xlat
sbb
xor
xchg
cmp
jns
js
dec
mov
daa
add
push
dec
fisubl
sbb
cmc
sbb
pop
aam
or
bound
mov
adc
shll
sub
mov
das
push
test
lods
mov
out
push
daa
pushf
push
sbb
push
mov
push
std
push
mov
inc
dec
out
inc
in
mov
clc
inc
push
dec
test
or
push
je
cmp
cvtdq2ps
mov
pop
fs
sahf
js
popl
fbld
stc
fnstsw
aaa
in
push
push
jg
into
mov
mov
xor
sub
test
int
in
add
dec
das
xchg
jb
scas
popf
pop
in
mov
in
or
dec
pop
mov
leave
cli
jle
xor
sub
add
xor
sub
sub
jecxz
call
dec
sub
out
adc
fs
lret
xorb
xor
outsb
in
mov
jne
adc
xor
in
inc
jp
fsts
insb
mov
cmp
scas
jle
or
test
call
and
pop
pop
push
test
pop
pop
sub
mov
mov
xchg
xor
in
and
movsl
ja
stc
xor
jb
dec
push
sub
lods
push
mov
xchg
sarl
sahf
insl
aad
js
rorl
pop
std
adc
sbb
out
pop
imull
cmp
mov
in
test
pop
mov
and
xor
test
test
or
mov
outsb
xlat
das
xor
xchg
or
aaa
sub
in
add
xchg
cs
cli
push
sbb
add
and
pop
dec
aaa
sub
mov
cmpsl
mov
cmp
fadds
call
push
push
mov
dec
mov
and
repnz
adc
test
ficoms
gs
into
xlat
repz
jmp
dec
fs
aas
andb
jp
dec
cld
cmp
fmull
fs
call
fxtract
sub
aad
push
scas
test
jl
ljmp
sarl
int
sub
jg
rcrb
mov
lcall
dec
dec
sarl
out
mov
lock
movsl
dec
nop
and
xor
jle
mov
into
bound
dec
loope
ret
xor
inc
rcl
loope
pop
add
cmp
or
dec
dec
popf
jne
xor
sete
stc
pop
sub
arpl
js
test
push
cli
mov
imul
cmpsl
xchg
movsl
stc
inc
dec
lods
fistl
xchg
mov
push
mov
dec
jecxz
jo
xchg
pushl
or
into
in
loop
enter
jbe
pop
push
in
in
je
inc
cmp
dec
mov
cmp
stos
and
mov
int3
mov
xlat
lret
adc
xchg
cld
pop
pop
push
or
adc
push
xchg
movsb
fadd
in
movsl
dec
dec
cs
sub
lea
mov
std
lods
cmpsb
pusha
pushf
popa
adc
int
out
mov
add
ljmp
mov
dec
adc
dec
lret
jmp
cmp
in
andb
rclb
inc
and
ret
stos
test
arpl
mov
mov
xor
sub
mov
rcrl
decl
add
ss
testl
enter
sub
push
ljmp
fimuls
lds
push
je
cmp
xchg
mov
cmp
add
sub
jnp
xchg
jno
push
popa
inc
inc
pop
insl
or
sub
daa
out
fildll
xchg
mov
int
add
pop
jae
xchg
mov
jno
xchg
insb
add
call
sub
xor
daa
cmp
cltd
ficompl
rorb
mov
push
ret
xor
mov
test
sub
sub
popf
jae
test
ficoml
dec
in
mov
pusha
xchg
and
movsb
stc
loopne
inc
xchg
ss
add
cmp
sti
pop
sub
sbb
iret
pop
lods
mov
movsl
fildll
lret
cmp
scas
cmc
xchg
lahf
mov
movsb
lea
stos
inc
fwait
sti
mov
sbb
les
pop
es
in
sbb
cmp
push
jno
sbb
int3
xchg
or
push
pop
cs
mov
mov
dec
and
scas
aaa
cltd
ret
xor
inc
loop
cmp
jb
push
movb
cld
or
test
pop
dec
pop
ljmp
inc
sub
or
rorl
jmp
jp
dec
cwtl
fisubs
mov
cmp
scas
leave
imul
call
out
sbb
jae
and
sti
arpl
cmp
sbb
cld
fsubrl
and
cmc
jne
mov
call
into
push
jp
sub
cmp
aas
push
fnstcw
test
xor
add
ret
pop
xchg
repnz
xor
pop
call
cmp
add
popa
xor
push
pop
ss
cmp
out
imul
das
in
insb
dec
add
jmp
jp
mov
mov
and
ja
repz
push
divl
jnp
jno
les
pop
mov
out
ficoms
imul
push
scas
mov
sub
and
into
daa
jge
imul
push
xchg
add
aam
sub
or
xor
cmp
xor
outsl
call
cmpsb
sti
fisttps
pop
fcmovnb
lahf
scas
jp
leave
pop
sahf
outsl
dec
add
inc
inc
ja
cmp
cli
js
push
sub
mov
cmp
testb
outsl
cmp
ret
out
gs
in
pop
mov
std
loop
jo
pop
into
popw
lret
jge
out
je,pn
adc
xchg
pop
outsl
xchg
filds
or
adc
scas
sahf
or
lcall
push
xchg
inc
cmpsl
push
or
test
mov
xchg
lds
mov
movsb
push
nop
outsb
push
xor
xchg
jb
xlat
insl
jb
or
inc
mov
test
sahf
dec
xchg
and
je
ror
imul
xlat
xor
mov
pop
inc
cmp
and
repnz
loop
imul
mov
rcrb
pop
pushf
mov
ret
rorl
jns
and
mov
cmpsl
shr
es
or
shl
mov
into
cltd
leave
mov
lahf
add
leave
mov
aam
adc
cmp
xlat
mov
xchg
inc
and
sbb
pop
pop
nop
push
inc
cs
mov
pop
jmp
movsb
mov
mov
stc
sub
and
mov
jl
xor
push
mov
jbe
push
jno
push
push
push
push
insl
cmp
xchg
inc
outsb
sbb
clc
jle
out
fwait
or
sahf
adc
inc
movb
xor
int
rorl
xchg
into
leave
inc
mov
mov
pop
shrl
addr16
dec
sub
sub
cltd
mov
xchg
mov
and
call
mov
or
cmpsb
cmp
mov
inc
mov
jno
mov
aas
into
mov
decb
fsubs
push
arpl
loopne
xchg
or
adc
popa
or
repnz
pop
hlt
in
pop
sub
jae
mov
int
scas
loopne
lcall
pop
xchg
mov
adc
mov
dec
xchg
jp
rol
leave
cmc
arpl
icebp
inc
sti
or
dec
sub
daa
add
hlt
and
push
insb
out
into
or
adc
cmpsb
and
popa
movsb
outsb
outsl
js
sbbb
call
rorb
mov
mov
mov
in
push
dec
out
sbb
shrl
or
arpl
push
cmp
cwtl
push
xor
and
dec
sub
inc
loop
lds
aam
and
adc
add
jmp
daa
cmp
rorb
lods
push
dec
add
mov
sub
pop
jl
pop
test
mov
cmp
sub
arpl
stc
jg
or
in
xchg
fwait
adc
es
enter
andnps
xchg
sbb
pop
push
inc
sub
sahf
aam
pusha
shll
out
jge
add
test
pop
icebp
mov
enter
daa
sbb
icebp
movsb
in
jle
or
dec
mov
test
xchg
jmp
xorl
pop
sbb
jecxz
add
inc
jecxz
sbb
or
xchg
adc
xchg
ficomps
fsubrl
and
adc
aaa
push
cmp
fwait
adc
aad
jl
aam
inc
stos
or
cmp
dec
dec
adc
inc
scas
push
push
mov
and
insb
or
out
jge
int3
dec
pop
fwait
test
int
bound
add
jmp
rolb
cmp
mov
testb
mov
xchg
je
imul
and
insl
or
sub
xchg
imul
mov
mov
push
movsb
inc
push
aad
jl
and
test
fiadds
movsb
cwtl
aad
push
push
push
pusha
out
push
cmp
cmp
jae
and
in
sahf
daa
dec
cwtl
jp
insb
or
pop
and
cmp
mov
cmp
or
mov
cmp
pop
sbb
pop
inc
push
jge
push
cmp
mov
sub
popf
adc
adc
insb
decl
adc
bound
cmpsl
push
dec
insl
inc
sbb
cmp
add
push
sbb
dec
sti
sahf
sarl
hlt
sbb
mov
mov
fstl
movsl
repnz
cmp
jle
mov
push
sbb
xlat
loopne
ds
test
mov
xchg
add
push
lret
mov
push
adc
fistl
mov
cs
inc
ljmp
mov
lock
adc
outsb
dec
vpshld
lret
mov
les
jl
mov
adc
icebp
pop
cmc
dec
pop
dec
xchg
pushf
cmc
in
jne
jp
test
outsl
sub
add
dec
sub
jo
cmp
jge
sub
sbb
jns
xchg
rolb
dec
insl
movsb
sbb
int3
popf
data16
cmp
pop
iret
rclb
inc
stos
jle
push
scas
fcoms
mov
cmc
cmpb
dec
movd
leave
pop
xchg
ret
xorl
lea
pop
mov
dec
sbbb
and
dec
subb
fstl
clc
insb
jg
jo
cmp
out
mov
push
sbb
repnz
or
sub
mov
adc
pop
jb
push
mov
lret
push
repz
dec
mov
mov
jp
fsubs
js
out
add
jne
pop
mov
pop
sub
cwtl
aas
mov
popf
sbb
or
mov
test
fldcw
div
dec
add
ljmp
jle,pt
loop
add
call
addr16
or
sub
push
pop
shlb
xchg
push
sbb
out
cmp
jno
xchg
fiadds
xor
in
aas
shrl
pop
popf
shlb
cli
addr16
repz
mov
and
xchg
out
data16
push
or
addb
in
dec
out
push
push
xor
pop
adc
sarl
or
mov
pop
sub
xchg
xchg
mov
test
xor
aaa
and
sub
dec
cs
adc
sbbb
ljmp
cld
scas
icebp
xchg
insb
insl
mov
jg
call
jmp
adc
jmp
xchg
mov
adc
cmp
xchg
scas
aas
push
cld
jo
inc
push
mov
add
int
addr16
mov
sbb
add
and
test
std
aaa
rcrb
subl
cmp
xchg
hlt
jg
das
xor
int
cs
adc
add
clc
dec
jno
cwtl
cmp
adc
lods
lcall
sub
sbb
inc
xor
fiadds
int3
jnp
cmp
jo
lahf
addl
inc
popf
rol
jl
insb
les
rcrb
cmp
adc
fadd
pop
cmpsb
out
inc
test
mov
sahf
pop
cmp
sub
jne
cltd
mov
fsubrs
pop
xchg
icebp
mov
sahf
repnz
in
test
adc
dec
jns
cs
in
push
lret
gs
xor
dec
lods
lock
inc
sti
add
jge
pop
jb
leave
insl
dec
jnp
lahf
subb
jmp
lock
pop
inc
and
imul
adc
loope
sbb
mov
ret
dec
stos
cmp
mov
cmp
pushf
and
bound
sbb
hlt
sbb
lret
rclb
mov
jo
mov
dec
dec
shl
and
mov
inc
jno
sbb
jl
test
xchg
popf
mov
dec
xchg
mov
xchg
lahf
faddl
push
std
pop
ljmp
push
push
mov
imul
push
mov
push
mov
jno
mov
sub
ret
mov
xchg
pop
xchg
les
pushf
insb
mov
or
rcrl
sbb
loop
idivb
sti
pop
sahf
jns
adc
sub
add
xor
inc
sub
inc
fdivs
mov
sbb
inc
and
cmc
dec
fnstcw
xorl
daa
add
pop
mov
addl
mov
sbb
inc
test
xchg
xlat
inc
add
shlb
mov
pop
arpl
fxch
pop
cmp
and
inc
mov
xor
pop
push
jge
pop
inc
inc
call
aaa
add
cltd
inc
jnp
xor
jne
popf
push
imul
loopne
sbbl
ret
pop
addr16
mov
and
dec
out
and
dec
mov
cld
mov
jo
dec
mov
xchg
dec
insl
int
movsb
sbb
xchg
cli
jecxz
in
jbe
adc
and
pop
cltd
andl
out
imul
shl
mov
cmp
test
ss
mov
mov
clc
pop
je
jg
push
loop
mov
xor
and
ficoml
icebp
stos
lock
daa
das
jno
ret
adc
mov
add
mov
jbe
aad
ret
mov
xor
gs
push
xchg
movsl
mov
movsb
subb
test
movsl
lods
mov
xor
push
jb
inc
xchg
lret
sub
rol
inc
loopne
dec
rcll
jne
ss
fldt
add
fcompl
rcll
data16
xchg
out
js
mov
push
shlb
mov
push
outsl
mov
daa
fs
cmp
insb
mov
jl
sbb
ljmp
inc
out
inc
mov
xlat
js
je
movsl
sahf
jge
aam
cmpsl
fldenv
mov
sub
push
jmp
add
ss
faddl
ret
xchg
mov
daa
xchg
cmpsl
sahf
aas
dec
out
xorl
sbb
ret
mov
mov
pushf
push
lret
sahf
ja
clc
adc
mov
fwait
jns
and
lcall
mov
cmpsl
dec
jae
outsl
jno
popa
stos
insl
sbb
inc
je
rclb
sbb
insl
dec
jmp
ds
dec
dec
das
push
jnp
outsl
xlat
mov
mov
pop
repz
cmp
fdivr
es
loope
xchg
flds
sbb
xchg
or
lods
or
out
inc
mov
lret
ljmp
sbb
dec
scas
frstor
mov
pop
fcmovb
add
cli
jge
xchg
pop
nop
scas
or
xchg
xor
jmp
icebp
cmp
dec
xchg
ds
pusha
stc
xor
out
lcall
stos
mov
fwait
shrl
mov
ss
sbb
gs
xchg
divb
cltd
mov
aas
pushf
inc
xchg
mov
sub
loop
mov
or
xchg
adc
out
and
loop
mov
mov
jae
and
cmp
addr16
mov
or
ds
lret
mov
push
sub
and
das
push
push
mov
out
int3
cwtl
mov
fwait
sub
ret
lea
outsb
adc
mov
je
pop
nop
mov
ret
sbb
mov
in
xchg
cmp
incb
xor
leave
outsb
mov
out
sbb
test
out
in
add
add
das
fadds
ljmp
xor
jne
hlt
xchg
jl
sub
lods
or
cmc
sub
inc
mov
inc
mov
lea
sbb
jo
mov
lret
push
sub
and
clc
sbb
push
xor
jns
or
int
cmp
fistps
inc
pop
mov
mov
pop
cmp
je
test
shl
mov
jmp
cmc
test
out
adc
fimuls
cs
dec
push
cli
hlt
lcall
adcl
jae
inc
aaa
sbb
pop
out
icebp
aam
movsl
mov
dec
je
arpl
addb
mov
push
adc
mov
xor
add
dec
aad
idivb
sti
cmc
sub
add
fistps
jp
pushaw
push
adc
outsb
cmp
les
mov
add
and
or
sub
outsl
sub
sbb
pop
mov
jle
xchg
push
mov
fstpt
stos
jecxz
jmp
pop
imul
jmp
push
dec
outsl
cmpsb
cmp
mov
sub
mov
movsb
inc
xchg
fsubrl
mov
in
fmuls
ret
and
leave
mov
std
xchg
dec
mov
pop
jnp
dec
or
pop
jp
dec
ja
bound
dec
push
dec
jmp
sub
jne
cmp
push
das
mov
fs
cmp
inc
arpl
add
pop
cmp
cltd
inc
pushw
movsl
lea
jne
pop
cmc
sbb
pop
sbb
pushf
cld
pop
fcompl
out
int
fnstcw
fsts
and
push
out
ss
inc
mov
shrl
stos
sub
inc
mov
jne
jle
dec
leave
sbb
jge
or
push
push
mov
push
or
cltd
lahf
jno
js
or
sti
insl
mov
lods
inc
outsl
jb
jecxz
adc
outsb
in
push
or
into
mov
into
jbe
loope
jne
iret
sub
enter
jecxz
or
lret
lret
mov
cli
push
movsw
and
inc
mov
push
into
mov
add
lret
sbb
std
icebp
popa
out
dec
add
dec
addr16
pusha
sbb
popf
fisubrs
bound
inc
xchg
cmp
orl
ror
xor
out
scas
cmp
test
iret
and
xor
push
jg
fcmovne
lahf
push
mov
loopne
call
fidivl
movq
or
fmull
popa
pop
cmp
rcrl
mov
mov
lods
gs
push
dec
cmp
fsubl
cmp
sahf
movsl
cmpsl
push
add
adc
xchg
xchg
jg
add
add
xor
or
xchg
jge
out
std
pop
rorl
in
sub
xchg
mov
outsb
push
dec
push
rorl
cmp
std
jbe
jb
xchg
pop
je
addl
cmp
mov
pop
test
fbld
mov
mov
fsubs
jbe
add
adc
aam
push
jg
sub
mov
mov
and
outsb
push
movl
push
fcoml
test
repnz
mov
sbb
add
adcb
mov
fcompl
dec
fmull
push
sbb
cmp
mov
xchg
je
mov
sbb
shr
mov
jecxz
stc
push
icebp
imul
jl
mov
jns
inc
nop
or
aad
popf
cmc
or
test
pop
xchg
sub
jmp
sarb
xchg
sti
lea
and
cmc
pop
push
adc
mov
adc
xor
loope
cld
sbb
pop
jp
or
dec
adc
rcll
cmpsl
mov
add
data16
lods
mov
and
insb
insl
push
and
test
sahf
stos
test
mov
lds
inc
ret
adc
xor
lock
fsubrs
fnstcw
les
jp
js
leave
sub
mov
adc
outsl
mov
shlb
adc
cmp
xlat
lahf
loop
mov
test
push
mov
rorl
add
adc
adc
and
push
mov
xchg
push
jp
cmpsl
lret
rclb
add
pop
add
aam
mov
stc
orl
mov
popf
mov
sub
mov
sub
inc
sbb
fldl
pop
fistpll
or
mov
push
sub
sub
bound
pop
cmp
test
cs
pop
cltd
and
lds
aad
fsubr
les
xchg
shll
popa
sbb
sbb
add
icebp
pusha
dec
sub
out
andb
fldl
clc
icebp
and
fidivl
adc
xchg
lea
and
nop
lods
stc
adc
in
pop
xlat
pusha
in
loope
inc
popa
stc
sub
in
mov
lcall
xor
data16
lock
jb
fdivrs
mov
push
testb
dec
test
mov
imul
mov
cs
adc
mov
xor
stos
jmp
cmp
sub
enter
ret
and
cmp
or
mov
adc
mov
jbe
pop
mov
dec
jns
stos
xchg
xlat
fcmovu
xor
add
pop
divl
aam
mov
sub
sub
enter
pop
mov
pop
xchg
fcompl
jg
xor
xor
sub
cli
sub
fprem
cmp
and
xor
cmc
rcrl
add
jp
pop
push
xlat
arpl
cmp
cli
mov
add
fists
outsb
in
addr16
jg
push
lahf
push
mov
test
sbb
leave
push
sub
in
xchg
dec
loop
add
inc
cmp
imull
mov
fdivrs
lcall
mov
repz
mov
jno
arpl
cltd
mov
cltd
pop
or
cmp
jl
jge
jmp
ret
jecxz
adc
jae
dec
and
jecxz
lods
pop
fimull
jo
dec
or
push
xchg
lret
mov
or
shrb
std
nop
mov
stc
mov
dec
or
stos
xor
sub
jbe
and
sbb
adc
inc
mov
xchg
or
mov
ret
push
sub
push
push
in
int
mov
add
iret
sbb
scas
adc
cmp
dec
jle
cmp
loop
iret
jne
xchg
xor
or
cld
fisubrl
es
sbb
cmp
inc
cwtl
mov
pop
or
sbbb
pop
cld
sub
mov
fucomip
sub
pop
rorb
sbb
mov
push
and
out
decl
ucomiss
int3
aas
push
scas
test
cmp
mov
xchg
push
dec
pop
aam
xchg
mov
sub
in
and
fcmove
sbb
adc
dec
mov
das
and
mov
cmp
add
ljmp
or
pusha
andl
cli
xor
sbb
inc
pop
mov
push
out
lods
xchg
xchg
cld
fcompl
mov
or
lock
inc
xor
xchg
cmc
bound
inc
imul
pop
pop
xchg
sbb
aam
jmp
xchg
in
or
mov
cli
movsb
fdivrs
pop
jle
pusha
mov
and
testb
pop
out
shl
lahf
ds
and
loopne
pusha
outsb
adc
jo
mov
cli
xchg
and
int3
push
in
insb
mov
jb
xchg
lods
cmp
cli
loope
pop
push
push
dec
fldt
fistps
call
push
enter
pop
jb
xor
lcall
repnz
call
add
aaa
out
int3
inc
xchg
iret
add
mov
jne
pop
sub
cmp
mov
jle
aas
xor
pop
iret
rcr
push
in
dec
or
movsb
pusha
outsl
dec
cmp
sub
jl
jae
shrb
pop
inc
outsb
lods
jmp
add
inc
fldcw
outsl
popf
add
mov
dec
sbb
sbb
inc
inc
ds
mov
sub
mov
lock
repz
mov
adc
ret
inc
lret
dec
popa
loopne
mov
mov
jecxz
mov
cmpsl
xchg
btr
xor
jne
or
pusha
fnstcw
pusha
push
jle
push
daa
cmp
add
inc
pusha
sub
add
xchg
fcoml
mov
inc
mov
aad
aaa
in
sbb
fldl
adc
scas
pop
stos
push
jbe
xchg
icebp
sbb
cltd
xorl
cmp
or
lods
push
dec
push
sahf
out
ja
lods
popa
aaa
in
sahf
movsl
dec
jbe
hlt
sub
pushw
push
sar
add
call
insb
push
aas
mov
cltd
fbld
add
lret
imul
jge
insb
jb
jae
mov
bound
sub
jg
jecxz
arpl
popl
lcall
adc
enter
fidivl
insb
int
xchg
inc
xchg
sub
jb
out
leave
mov
call
jmp
inc
sub
cltd
nop
fs
scas
pop
fidivrl
jo
push
xor
jae
inc
lret
push
arpl
xchg
mov
je
xchg
popf
fwait
cs
mov
nop
hlt
dec
popf
jge
in
test
jno
mov
push
sub
jl
sub
fwait
imul
jbe
xor
xchg
enter
jg
mov
adc
in
push
pop
xchg
scas
addl
repz
or
jns
adc
mov
mov
adc
outsb
in
add
jg
pop
cmp
jo
jmp
imul
jmp
and
int3
push
inc
push
xchg
pop
cwtl
jg
pop
or
lcall
fwait
push
repnz
jge
cmp
and
fsts
lret
popa
ja
sti
lods
loope
je
lcall
xor
call
cmp
inc
cltd
nop
dec
inc
test
sbb
imul
addr16
insb
push
add
inc
or
push
ss
ss
fdivp
dec
inc
push
cmp
xchg
jne
push
adc
add
out
push
mov
inc
mov
push
xchg
sub
test
gs
ret
lock
inc
lcall
add
testb
pushf
test
sub
cmp
adc
and
fadds
mov
mov
ljmp
xchg
pop
pop
add
and
inc
andl
mov
xchg
lea
dec
mov
jge
adcl
pop
xchg
push
out
and
ss
out
hlt
push
orl
adc
sub
mov
inc
adcb
pop
pushf
jg
scas
mov
sub
xchg
mov
or
in
xor
pop
push
pop
xor
pop
xchg
je
jge
andb
pop
cmp
mov
mov
push
cltd
push
cmpsl
xlat
ffree
cltd
jp
sub
out
push
ja
test
xchg
cltd
adc
fistl
xchg
push
push
cmpsb
dec
push
lret
jno
aad
insl
xor
cmp
sub
dec
adc
cld
sub
outsl
jne
scas
pop
mov
and
testl
pusha
hlt
out
push
xchg
fsubrs
mov
xor
repz
ds
movsl
push
add
or
addr16
loopne
and
xchg
orb
enter
inc
in
pop
mov
jg
add
outsl
sbb
sti
lcall
pop
popa
scas
xchg
jg
sbb
nop
sbb
int
add
xchg
iret
sbb
or
popa
push
stos
pop
inc
hlt
pushf
jecxz
mov
push
icebp
add
jmp
mov
xchg
sti
cmp
xchg
jns
mov
fbstp
mov
nop
mov
lods
dec
mov
inc
xchg
loope
bnd
mov
fstps
repz
insb
movsl
sub
jge
add
das
sti
dec
sarb
pxor
inc
sbb
imul
mov
mov
adc
sbb
jmp
pop
adc
fwait
adc
repz
cmp
or
das
mov
cmp
dec
jmp
aaa
cmc
sub
addl
outsl
sahf
test
pop
pop
dec
int3
cltd
imul
xor
es
bound
ds
loop
lahf
les
cld
push
push
insb
adc
gs
jmp
xor
repz
cmpsb
cmp
pushf
test
and
jo
lret
adc
imul
cld
mov
push
repnz
add
negl
call
es
mov
iret
pop
cli
das
aam
cltd
pusha
mov
jae,pn
fwait
sbb
mov
subb
testb
imul
aad
dec
lahf
sub
test
jno
lcall
stos
sub
cmpsb
sbb
iret
add
jo
mov
mov
adc
test
fxch
outsl
pop
sub
sub
jecxz
fnstenv
xor
ret
xor
pushf
adc
outsb
nop
dec
shl
pop
pop
push
arpl
cmpsb
mov
dec
xor
insb
pop
xchg
jp
movsb
jnp
cmpsb
xor
pusha
mov
faddl
into
push
xor
sbb
xchg
cmp
push
lock
mov
sbb
adc
enter
fsubrs
or
in
bound
pop
and
and
push
test
jbe
pusha
adc
mov
xchg
xchg
ds
mov
pop
mov
push
adc
test
mov
in
mov
cmp
xor
shll
adc
test
call
mov
sub
jmp
inc
and
mov
push
cmp
sbb
hlt
jnp
sti
xlat
loope
mov
cld
es
inc
sub
dec
loop
fsubs
or
mov
pop
subb
iret
icebp
add
push
and
or
pop
jbe
push
mov
add
iret
dec
push
xchg
push
sub
adc
mov
fnsave
push
cmp
shlb
nop
movl
mov
cmovo
out
add
rorb
and
push
mov
and
rcrl
cmp
cld
lods
jo
sub
push
imul
pushf
push
cwtl
push
cli
cltd
dec
lea
adc
cwtl
int3
lds
cmp
cmpsl
fisttpll
pop
inc
ds
lock
jecxz
fsubs
loope
aaa
push
fnsave
js
iret
mov
dec
lcall
movsb
mov
mov
rorl
mov
add
hlt
adc
leave
mov
pop
or
outsl
lret
fcompl
adc
aam
js
push
add
pop
and
sbb
mov
lret
sbb
test
xlat
push
popa
mov
ret
jb
lcall
dec
mov
dec
sub
lret
xchg
push
push
aad
cld
mov
cmp
pop
mov
sarl
icebp
cwtl
insl
out
les
mov
mov
sarl
jbe
cmp
cmp
adc
sti
setnp
sub
dec
sbb
je
roll
xchg
xchg
pushw
jbe
sbb
cli
loope
cltd
addl
js
scas
pop
cmp
sub
add
cltd
jb
cmpsb
add
xchg
stos
and
call
xchg
push
mov
cmp
xor
xor
xchg
push
jbe
aas
ljmp
dec
repz
sbb
sub
dec
sub
dec
jp
mov
insb
or
and
setne
shrl
stos
inc
int3
movsb
lret
jo
xor
push
imulb
ja
aam
cmp
add
popf
cmp
in
sub
push
dec
dec
push
push
xchg
out
push
push
adc
push
setae
adc
mov
mov
xchg
or
mov
pop
push
int3
xor
lods
pop
dec
xor
add
pop
xorb
pop
outsl
loope
fs
mov
mov
mov
push
mov
jp
out
mov
push
xor
sbb
xchg
xor
inc
sbb
stc
out
imul
or
mov
aad
dec
test
loop
addr16
mov
sub
sbb
mov
mov
lcall
outsb
push
jae
or
sbb
les
xchg
xchg
pop
cli
ret
push
xchg
jb
out
repz
lahf
or
adc
add
jecxz
jecxz
aam
dec
fimull
fmuls
hlt
fimuls
mov
or
and
fidivs
mov
gs
push
jnp
or
or
clc
mov
in
pop
inc
adc
je
fldl
aad
or
lret
pop
mov
test
rcrb
into
jl
data16
ret
xor
mov
ss
addb
add
sub
pop
mov
ds
pop
or
sbb
jne
cltd
fists
jo
mov
inc
loop
movsl
lahf
pop
push
jp
loopne
xlat
ds
fisubrs
inc
xor
ret
pop
sub
fildll
or
loope
inc
pop
das
xchg
or
movsl
jo
lahf
lret
xchg
jmp
mov
ja
jno
arpl
sbb
mov
in
xor
cmp
mov
fchs
mov
and
ret
js
add
lods
les
xchg
mov
mov
mov
jo
mov
inc
in
sahf
dec
int
mov
inc
xchg
dec
mov
lock
int
xchg
push
lcall
insl
jmp
dec
push
out
sub
orb
xchg
addr16
xchg
or
xor
mov
ss
or
jecxz
fs
pop
sbb
outsl
addr16
scas
rolb
mov
pop
inc
nop
cmp
cmp
lret
das
nop
clc
sub
loopne
adc
jmp
add
dec
std
movsb
inc
imul
xor
xchg
mov
dec
fcmovbe
daa
stc
es
xchg
sbb
leave
imul
lods
repnz
rcll
dec
mov
push
mov
movsl
cmc
sub
push
xchg
push
dec
aam
inc
sub
pushf
call
mov
cmc
mov
adc
sub
pop
cmpsl
inc
sbb
inc
lea
arpl
test
mov
ss
popa
xor
cs
pop
adc
cmp
lcall
fidivrs
sbb
fdivl
fwait
jle
test
mov
xchg
idivl
sub
mov
xchg
dec
sbb
and
dec
fisubs
lds
pop
test
mov
sbb
cmp
loop
cmp
and
imul
fildll
xchg
push
sbb
sbb
cmp
in
sbbb
push
and
sub
mov
iret
imul
js
sub
cmp
adc
lods
leave
jmp
scas
mov
push
mov
pop
lahf
mov
stc
and
add
ja
lods
scas
push
mov
xchg
push
jg
jle
mov
pop
sbb
sub
adc
ffree
add
insl
inc
scas
push
adc
dec
xchg
adc
aam
jl
jl
js
test
mov
mov
loopne
ret
dec
dec
lds
adc
and
xor
mov
lahf
mov
and
pop
mov
rcr
pop
jne
ljmp
xor
dec
sbb
ficoml
jae
repz
sub
mov
fs
aas
hlt
or
sbb
cmc
jg
les
add
cmp
or
fwait
popf
adc
and
xchg
lock
push
sbb
sbb
or
loope
mov
sbb
push
dec
xchg
add
fldcw
dec
mov
adc
sub
and
cltd
push
adc
scas
scas
scas
push
outsb
int3
jmp
imull
pop
notb
ljmp
bound
aam
repz
addl
cmpsl
stos
in
and
stos
cld
xor
lret
lea
gs
pop
cli
mov
push
push
jp
or
int
fucomp
dec
sbb
xchg
fisttps
imull
sub
pop
xchg
fldcw
fnstsw
xchg
addr16
cld
mov
cli
std
pushf
call
dec
and
dec
sbb
fldcw
div
jnp
cmp
popa
popa
inc
mov
mov
mov
push
stos
dec
stos
adc
adc
ds
push
sbb
xor
sbb
inc
scas
arpl
cmp
aad
fidivl
sub
je
mov
sti
and
pop
lret
dec
pop
test
mov
in
xchg
lods
jge
xor
jmp
or
clc
and
shr
into
sarb
and
jbe
jns
cltd
bound
daa
dec
ret
pop
subb
sbb
sub
lcall
jae
cld
mov
jbe
push
out
mov
outsl
jns
rolb
into
pop
daa
imul
push
cmovb
dec
jecxz
add
mov
jge
das
cmp
xchg
daa
push
filds
inc
mov
je
cmpsb
stos
bound
ficoms
cld
and
in
pushf
xor
xchg
inc
lret
adc
xchg
mov
fisttps
sbb
xorl
ds
test
pop
adc
fcomp
sub
pushl
jmp
xor
adc
pop
inc
daa
inc
fst
cmpsb
jp
sbb
das
scas
pop
xor
xchg
mov
mov
mov
out
pushf
enter
ss
inc
loope
insl
inc
repz
shll
outsb
jns
fcmovbe
xor
cli
lcall
int
push
cli
adc
mov
fdivs
cld
call
cld
adc
pop
xchg
fmull
push
ss
jl
test
cmpsb
daa
das
sub
jnp
mov
and
into
jbe
and
addl
clc
outsb
das
lods
and
sarl
cmpsb
stc
rorl
dec
pushf
ss
push
loope
mov
cmc
fsubrp
cmc
jmp
lcall
or
sub
incb
insl
inc
or
jns
pusha
jo
fisttpll
mov
pop
push
loopne
in
sbb
sub
mov
in
push
xlat
jmp
cli
ja
pushf
ret
loope
dec
fmulp
mov
cmp
mov
jle
adc
push
pop
movsl
sbb
cmp
mov
sbb
or
add
xchg
adc
jecxz
and
add
les
out
cmp
jae
mov
lods
insb
mov
in
mov
ret
or
xlat
idiv
sub
cmc
sahf
in
leave
out
aad
rolb
adc
jg
cmpsl
xor
aam
pushf
inc
pop
xor
dec
mov
xorl
pop
lods
add
or
push
xchg
pop
sahf
test
lret
sar
or
push
js
cmp
sub
fchs
pop
xchg
xchg
addl
mov
scas
ss
lods
movsl
mov
lret
stos
test
mov
scas
mov
jmp
cmp
cli
xlat
aas
mov
pop
jne
in
movsl
mov
cli
cwtl
mov
ret
rcll
jmp
push
or
xor
pop
mov
mov
sbb
movsl
xor
lds
pop
sti
cmpb
fdivl
or
cmp
xor
mov
cmp
mov
pop
pop
je
add
xchg
jp
dec
sbb
dec
xor
shlb
mov
mov
xchg
bound
test
lret
out
cmp
cmpsb
in
js
adc
sub
mov
lcall
cs
icebp
cmpsl
insb
xchg
movsb
bound
push
sub
loope
mov
fisttpll
stc
or
in
cmp
add
push
out
or
sbb
sub
arpl
push
inc
icebp
loop
push
or
mov
je
jo
jbe
mov
adc
adc
push
mov
push
into
mov
inc
pop
mov
push
mov
outsl
ljmp
sahf
add
int
shrb
push
negl
pop
loop
cmp
inc
fistpl
fists
fneni(8087
pop
data16
mov
adc
xchg
cmp
cmpsl
call
aad
add
ret
sub
lret
movsl
outsl
in
fldenv
pop
je
adc
jnp
lods
cld
push
mov
xchg
add
add
xchg
jmp
lahf
mov
cmc
and
mov
pop
adc
sub
cltd
aas
adc
dec
cld
popf
push
cmp
or
jns
or
pop
jp
fimull
jne
jmp
sub
mov
out
jge
cltd
xor
je
or
mov
call
cmp
pop
jns
js
sbb
frstor
pop
cli
pusha
jge
mov
mov
adc
push
push
shlb
and
add
adcl
hlt
lods
sub
dec
fnstenv
dec
pop
or
add
fidivl
lahf
pusha
ljmp
or
sbb
dec
and
sub
sub
aas
mov
cmp
outsl
fstl
lods
stos
sub
mov
ljmp
pusha
sarb
in
mov
ja
out
in
jmp
out
cmpsl
cmp
adc
movsb
lock
insb
xor
jmp
fs
loop
dec
pop
push
mov
xchg
ljmp
mov
mov
test
mov
xlat
mov
loope
shrb
fisttpll
jmp
inc
cltd
popf
pop
adc
pop
loop
add
mov
lods
data16
int
jecxz
cmpsb
notb
sbbl
rcl
add
and
and
in
data16
lcall
sti
jo
lret
imul
mov
add
add
fisubrs
xor
dec
dec
fmuls
mov
mov
mov
jo
pop
pop
mov
and
or
and
pop
in
or
call
repz
adcl
xchg
push
clc
xchg
sub
cwtl
sub
adc
add
pop
int3
shl
push
mov
jl
int3
xorl
xchg
fmulp
popa
add
lods
pop
add
jnp
pop
cld
cmp
add
mov
jnp
stos
xchg
mov
arpl
and
imul
or
inc
dec
jp
in
mov
rorl
sbb
push
sahf
cltd
fucomi
ds
lcall
lock
das
scas
mov
fimuls
hlt
sub
or
in
dec
loopne
fbstp
mov
movsl
xor
loope
jo
sub
sub
pop
lds
js
push
daa
or
int3
mov
in
loop
dec
adcb
test
mov
jne
test
fnstenv
fnsave
adc
iret
dec
cltd
cld
aaa
sbb
ret
push
xor
out
dec
test
nop
pop
scas
sti
xor
and
aam
int
out
js
or
push
and
inc
adc
imul
mov
repnz
or
push
mov
or
stos
shrw
out
or
xchg
test
or
lods
and
jae
lods
popa
mov
mov
outsb
into
rcrl
nop
jnp
jae
imul
pop
andb
mov
dec
xor
pop
cmp
and
add
or
pop
les
xor
daa
fadd
cmp
repz
imul
pushf
dec
jmp
cs
xlat
icebp
popf
ja
mov
pop
xchg
xchg
and
dec
es
xchg
ret
fwait
jmp
push
cli
leave
loopne
sarb
and
lds
fstp
inc
cmp
cmp
inc
andl
flds
mov
cmp
jecxz
dec
das
jg
lds
scas
jge
xchg
pop
adc
add
test
call
aam
insb
mov
inc
and
xor
mov
push
bound
rorl
mov
xchg
cmp
dec
lahf
jge
sbb
cwtl
jge
pop
sub
mov
mov
add
xor
bound
xlat
jl
sbb
and
lahf
push
pop
lea
ret
pop
push
les
jmp
inc
pushf
or
add
jmp
out
js
add
mov
jno
mov
dec
xchg
inc
xlat
and
fstps
fstpt
ret
clc
aam
loope
push
jo
orl
cmp
iret
xchg
adc
icebp
xchg
fsubs
and
iret
cmp
push
jnp
aad
sub
in
mov
cli
dec
inc
gs
jp
aaa
cmp
lret
rorb
mov
es
push
mov
lret
dec
mov
aaa
out
or
aad
popf
ljmp
xchg
stc
sub
lahf
cli
and
shll
std
jo
lock
inc
outsb
jne
cmp
sub
mov
jle
push
aam
cmpsb
cmpsb
xlat
xor
aam
and
shr
sti
loope
adc
mov
rcl
add
jb
push
sbb
loope
jno
insb
sub
mov
and
mov
dec
add
mov
and
pop
xlat
in
in
in
sub
sbb
mov
ret
nop
sahf
mov
jo
fs
xor
mov
lret
scas
lret
fisubs
sbb
jno
outsl
clc
in
sbb
aad
or
loop
mov
aam
iret
daa
pop
rorl
in
jmp
mov
add
aam
dec
lahf
hlt
adc
cmp
inc
and
or
dec
jbe
lods
insl
ds
cmp
mov
ja
sbb
pop
lahf
fwait
mov
push
jge
out
sbb
xchg
gs
ljmp
lods
pushw
fsubrs
xchg
mov
popa
out
sbb
popa
push
jmp
xchg
and
popa
ljmp
dec
jno
divb
scas
cld
lcall
push
jo
sub
jns
js
xor
in
inc
stos
sub
das
dec
shl
inc
xor
and
mov
sub
mov
dec
test
xor
aam
push
mov
or
jmp
out
outsb
push
xchg
cmpsl
mov
lods
insl
insb
mov
add
and
xchg
enter
pop
jno
mov
iretw
push
scas
push
jmp
mov
rorl
sbb
arpl
cli
push
cmc
imul
rcr
dec
push
mov
out
fcomps
jge
push
mov
lock
popa
xchg
insb
jecxz
add
adc
daa
roll
addr16
dec
fcoml
add
mov
xchg
push
lret
aas
adc
mov
and
cmpsb
mov
push
and
push
or
pop
pusha
nop
pop
popa
dec
leave
and
cmp
int
vpinsrw
pcmpgtw
dec
je
rcrl
sbb
sbb
shlb
popa
pushf
mov
js
sahf
mov
imul
popf
and
jge
xor
mov
outsb
jnp
shrl
loop
cwtl
ljmp
jb
fistpll
cli
inc
jecxz
incl
rcl
scas
fstl
pop
cli
testb
out
cltd
push
dec
push
lret
mov
jge
leave
mov
sub
jecxz
mov
daa
loope
test
fs
int
sub
daa
fsubrs
ja,pt
insb
push
push
adc
loopne
jae
loop
xor
jmp
inc
mov
xchg
lcall
mov
mov
jb
cmpsl
nop
fsub
pushl
pop
adc
les
sub
popf
std
fwait
or
dec
das
mov
std
shlb
dec
pop
mov
inc
xchg
mov
pop
inc
cmp
ret
imul
push
fwait
aas
push
push
pshufw
fwait
mov
sub
pop
mov
and
xchg
adc
scas
add
add
cmp
sbb
pop
outsl
fadds
pop
das
loopne
dec
push
shl
xchg
sarb
fcmovb
pop
loop
push
aad
repz
adc
sub
adc
call
lahf
rcrl
repz
inc
or
inc
xchg
or
test
push
cmp
cmp
and
adc
sub
dec
data16
sbb
je
stc
clc
jl
lock
jle
ds
adc
and
test
test
les
pop
ds
and
dec
xchg
pusha
fnsave
test
xchg
addl
rorl
mov
int
shl
outsl
leave
pop
faddl
xchg
cmp
sub
and
cld
cld
inc
cmp
mov
xchg
loop
test
pop
xchg
repnz
fnstcw
mov
mov
adc
or
push
imul
cltd
xchg
cmp
jae
cld
mov
dec
push
adc
ret
cmp
stc
inc
push
mov
xor
mov
cmp
mov
xor
test
imul
sti
lahf
mov
push
push
dec
gs
out
and
mov
push
mov
into
ficompl
ficompl
stc
cli
cs
xchg
rorb
adc
sahf
lods
lods
pop
adc
lds
mov
pop
add
dec
push
pushf
out
push
cmp
js
fmull
or
push
fcomps
notb
gs
loop
mov
xor
mov
add
jge
push
sub
fcoms
or
shlb
aas
jno
cmp
inc
pop
sbb
loop
jno
in
and
pop
addr16
ret
jp
out
popa
pop
pop
sbb
inc
mov
pop
rolb
out
mov
sbbb
adc
mov
inc
cmp
inc
mov
loop
movsl
add
mov
push
aam
jae,pt
inc
fdivr
pop
mov
dec
mov
jnp
mov
hlt
hlt
jo
jmp
shlb
nop
mov
out
sub
pop
push
pop
call
movsl
fwait
mov
mov
rcr
cmp
push
data16
mov
lods
sahf
cmc
and
or
mov
je
xchg
outsl
and
push
jecxz
stos
jle
jb
or
ljmp
and
into
pusha
dec
sub
out
lahf
dec
leave
dec
pop
dec
fsts
or
mov
cmpsb
xor
movsl
add
out
add
mov
dec
lods
or
scas
push
add
insl
imul
lret
push
aam
fsts
out
adcl
in
inc
inc
cld
gs
sub
fidivs
sub
push
add
lds
insl
add
cmpsb
sahf
fisttpll
or
sub
je
jge
sub
push
inc
mov
or
cmp
std
pusha
imul
and
cmp
test
dec
movsl
pop
and
pushf
ror
xchg
xchg
xchg
adc
inc
adc
push
imul
fadd
inc
cmp
lret
jo
pop
dec
fcoms
rorl
leave
push
scas
fdivr
cmpsb
out
dec
mov
jno
fsubrs
add
pop
sub
and
pop
mov
push
adc
mov
push
mov
add
je
pusha
out
mov
out
fdiv
lahf
add
pop
mov
into
lahf
push
push
jge
cmp
jns
in
pop
inc
mov
int3
movsl
pmulhw
lods
cmp
xor
dec
mov
xchg
adc
mov
sti
sbbb
dec
and
mov
push
pop
lods
outsb
xor
inc
out
fistps
mov
scas
jbe
adc
mov
test
js
cmpsb
mov
sbb
sbbl
rcrl
sbbl
mov
dec
idivb
fidivrs
enter
fwait
popa
rorl
pop
lret
sub
mov
pop
aaa
xchg
dec
aad
and
lret
push
add
and
cmpsb
stos
popa
pop
aaa
data16
fisttpl
xor
push
mov
pushf
cmp
fsubrl
jno,pt
push
test
mov
outsb
cmc
jmp
sub
inc
add
pop
mov
ffree
insb
call
mov
cwtl
sbb
lock
popf
pop
jb
or
dec
jae
mov
mov
dec
pop
or
xchg
dec
mov
pop
jbe
xchg
pop
popf
and
data16
dec
loop
jno
out
xchg
pop
sbb
or
xchg
mov
andl
xchg
aaa
or
and
gs
fmul
push
lods
jmp
push
adc
mov
into
jp
jnp
dec
stos
and
fstpt
jecxz
clc
test
adc
inc
loopne
mov
cmp
xlat
push
mov
ljmp
and
and
mov
pop
ret
scas
xchg
lock
aad
stos
daa
sub
das
xlat
and
pusha
xorb
std
adc
lret
pushf
sti
jne
sbb
jno
in
cmpsb
lds
xor
adc
mov
loope
pop
out
popa
push
aad
ja
jl
lahf
and
pushf
sarb
shl
lea
cmp
push
addr16
push
mov
mov
push
sbb
inc
sub
fsubl
outsb
jb
inc
or
add
mov
push
imul
outsl
adcl
mov
mov
push
pop
sbb
mov
lock
sti
ret
jmp
psubw
sub
in
dec
ljmp
and
adc
cmp
xor
push
mov
jno
dec
cltd
hlt
pop
bound
aam
hlt
std
mov
mov
xor
das
std
and
mov
cmp
sbb
mov
je
xor
addl
or
mov
std
out
add
sarb
lahf
mov
jge
cmpsb
mov
mov
mov
pop
lcall
movsl
sbbl
test
push
ljmp
jmp
lcall
mov
fldenv
mov
imul
and
push
dec
sub
arpl
adc
addr16
inc
pop
mov
pause
xor
add
call
pop
push
cmp
jge
and
push
dec
xor
stc
xor
jmp
inc
xlat
sti
jle
scas
xchg
shrl
inc
pop
inc
lret
jecxz
push
insl
outsb
lock
out
adc
ljmp
xlat
in
dec
xor
sub
je
adc
lock
testl
enterw
fcoms
lret
enter
pop
cmp
insl
and
xchg
aam
mov
das
out
std
or
mov
js
xchg
ljmp
xchg
pop
arpl
rolb
xor
into
pop
out
in
pop
jp
sub
xchg
insb
aam
pop
divb
lods
add
icebp
inc
int3
xchg
push
jnp
icebp
dec
ss
mov
iret
mov
out
cld
mov
bound
movsl
lods
mov
mov
inc
int3
std
jl
adc
es
jmp
mov
lahf
out
jge,pn
dec
jge
sbb
stos
cmp
out
adc
jbe
sar
imulb
addl
cli
in
push
xchg
sbb
xchg
rorl
push
and
lret
sbb
daa
push
push
sbb
sub
nop
mov
cmpsl
sub
adc
out
jp
iret
push
icebp
clc
lods
out
js
idivb
enter
pop
ret
jae
jb
mov
jne
xchg
je
xlat
fidivl
xchg
pusha
and
mov
test
push
add
scas
test
jg
es
add
and
dec
dec
pop
dec
outsl
rcll
rcrl
roll
out
out
jbe
xchg
les
add
adc
cmp
and
je
jae
aaa
in
add
adc
add
and
jp
movsl
mov
imul
mov
lahf
push
test
adc
inc
mov
stos
or
iret
jns
mov
aaa
pop
ret
rcl
sbb
or
stc
push
mov
sub
repz
jns
xchg
imul
mov
out
mov
cmp
sub
cmpsl
sbbb
loopne
ljmp
and
pop
mov
cmp
push
daa
lea
xchg
nop
mov
inc
adcl
sahf
shl
jns
mov
xor
push
ljmp
mov
scas
or
sbb
inc
hlt
pop
stc
sub
ljmp
into
jo
jmp
mov
jo
xchg
sub
mov
add
or
shr
outsb
xchg
iret
movsb
shlb
testb
scas
aad
es
add
mov
pop
clc
sahf
pop
shlb
movsl
or
js
ret
jb
std
jge
mov
mov
fstps
jmp
and
ljmp
addr16
jmp
roll
mov
test
mov
xchg
mov
xchg
push
and
iret
nop
popa
add
dec
mov
clc
ret
pop
pop
jb
ljmp
data16
ja
or
movl
push
fldl
adc
xchg
mov
pop
jno
pusha
push
jb
into
mov
inc
mov
decb
and
or
in
xchg
and
ucomiss
sub
fldt
mov
scas
ret
in
cltd
aas
in
xor
inc
mov
push
inc
stos
test
mov
aas
xor
stos
ret
std
sub
xchg
jne
loope
daa
lret
repnz
lods
into
push
mov
xor
aam
and
cmp
jp
fiaddl
sub
out
xlat
int3
cmp
mov
adc
dec
negl
adc
pop
push
push
or
sub
ljmp
movups
loopne
je
add
in
cs
add
mov
test
xchg
dec
mov
aaa
xlat
loopne
xor
pop
jns
pop
jp
dec
sub
arpl
pushw
push
xor
fisttps
add
in
xor
fists
leave
in
sti
mov
insb
xor
movb
test
cmp
mov
add
sub
lods
mov
push
push
jecxz
fimuls
and
popf
movsb
xchg
ss
cmpsl
mov
sbb
pop
hlt
adc
jmp
mov
enter
dec
mov
es
cmpsb
pop
lods
adc
not
xor
rclb
fwait
scas
loopne
scas
adc
add
loop
pop
mov
jg
lea
jl
and
xor
call
es
iret
xchg
sbb
adc
hlt
leave
or
mov
pop
inc
insb
inc
ret
popa
stos
cmpsb
mov
lret
mov
pop
dec
cmpsl
in
loop
push
lea
pop
sub
add
sbb
mov
sbb
movsl
lret
pop
jo
inc
roll
jnp
into
in
mov
int3
xchg
lea
push
faddl
inc
movsb
sbb
cmpsl
daa
jle
sarb
into
sbb
js
cli
shll
xor
lcall
dec
mul
sub
push
stos
push
and
das
add
and
pop
in
movsl
ret
cmpsb
sbb
ljmp
mov
inc
inc
ljmp
inc
or
jmp
inc
cmpsb
dec
pop
push
js
fwait
cmp
stc
cmpsb
pop
inc
xchg
dec
mov
notb
xchg
pop
loope
push
pop
hlt
cmp
stos
outsb
or
jg
fstpt
ja
cld
out
xchg
out
xor
dec
int
ret
jne
outsb
loopne
adc
inc
int
sub
push
xchg
jmp
fisubl
int
sub
pop
sbb
inc
fs
jb
cmc
xchg
testb
inc
and
mov
sub
call
or
in
stos
pop
data16
testl
inc
stc
push
es
jbe
scas
sub
movl
iret
rclb
pop
add
pushf
and
movsl
lds
leave
pop
cmp
adc
push
inc
fsubrs
ret
push
pop
inc
cmp
addr16
into
xchg
in
or
adc
xlat
jge
cltd
fdivrs
in
push
stc
jge
adc
call
cmp
ja
not
mov
pop
js
xchg
clc
movsl
adc
cmp
repz
mov
cld
adc
ljmp
test
jne
sbb
rorl
inc
push
je
mov
mov
add
repz
pop
xchg
mov
xchg
lods
lds
mov
iret
sbb
dec
nop
ret
inc
imul
xor
dec
dec
nop
cmp
repnz
sbb
pushf
dec
add
dec
xor
add
inc
add
aas
repnz
pop
mov
cmp
test
in
testl
xor
cmp
pop
push
dec
pusha
ss
andl
pop
or
stos
and
pusha
sbb
into
add
mov
xlat
xchg
cmp
rolb
cltd
nop
push
pop
cs
int3
nop
mov
cmpsl
xlat
sub
pop
sar
xor
mov
rcr
push
inc
jb
pop
in
push
mov
mov
flds
fdivl
mov
adc
cltd
sub
cmp
xor
stos
pusha
xor
icebp
fninit
lret
test
mov
mov
faddl
sbb
sbb
into
cmp
out
inc
cmp
popl
repz
icebp
mov
cwtl
insl
push
movl
imul
mov
sbb
repz
js
fcmove
xlat
pop
xchg
xchg
xchg
adc
dec
test
adc
xchg
mull
push
or
mov
ret
jnp
rorb
fistps
repz
inc
fmulp
rcll
xor
cmp
pop
mov
or
cmpl
jae
aam
loop
pop
dec
lea
aas
and
je
ljmp
and
inc
ds
leave
stc
lods
sti
push
test
adc
xchg
add
dec
cmpsb
shl
push
xchg
loope
adc
xor
dec
mov
lcall
mov
test
movsb
inc
imull
faddl
pop
pusha
stos
sahf
pusha
cmp
or
in
push
insb
sbb
loopne
js
in
cwtl
pop
lods
mov
lds
mov
inc
mov
push
xor
stos
leave
fsubrs
mov
push
push
sbb
pop
les
pop
cmp
aas
cmp
xchg
push
push
mov
std
cmp
clc
xor
mov
xlat
iret
cmpl
movsb
sahf
cmp
and
pop
jbe
lret
mov
in
add
xor
sbb
test
jb
push
popf
adc
repnz
mov
and
xor
inc
jns
out
push
iret
xchg
mov
jo
aaa
jb
dec
mov
andl
enter
outsb
and
scas
jns
addr16
outsl
jae
clc
stc
mov
gs
cmc
jae
sub
xor
mov
push
push
fidivl
push
pop
sahf
mov
jno
cld
push
push
fiadds
ret
mov
cmp
jns
jns
adc
pushf
sbb
jne
sbb
xor
cltd
push
hlt
imul
loopne,pn
in
cmp
jae
jp
loope
add
loop
pop
nop
dec
push
or
dec
int
dec
lods
push
in
test
nop
dec
jo
jbe
sub
nop
les
or
cwtl
lds
scas
mov
sbb
jg
or
and
pop
mov
enter
fdivrs
xor
hlt
jae
sub
cmp
inc
fs
cmc
fs
xchg
ljmp
mov
dec
in
pop
push
cmp
cmpsb
lret
out
sub
enter
adc
cmc
push
xchg
and
push
inc
lock
mov
cmp
enter
icebp
imul
popa
pop
cmp
inc
fidivs
push
mov
pop
and
sahf
mov
and
cld
xchg
stos
dec
adc
jecxz
pop
cmpsl
imull
roll
rolb
lock
es
negb
test
sbb
lret
adc
vmovups
jb
sub
pusha
vprotw
sbbb
loopne
jne
jg
mov
pop
sub
popa
shll
addr16
imul
stos
and
xchg
rorl
in
ret
mov
push
cmc
outsb
sub
lret
xor
jns
gs
mov
and
fxtract
stos
pop
imul
adc
repz
in
push
es
adc
pop
sbb
mov
sti
pop
in
mov
ljmp
adc
mov
push
jbe
nop
mov
xchg
mov
out
test
or
fcoms
or
push
lea
clc
js
in
pop
popf
lret
fimuls
lret
and
push
inc
movsb
ficomps
out
mov
sbb
inc
pusha
jecxz
push
cmp
cmp
inc
jg
aas
fdivl
fimuls
aam
adcb
ja
gs
aas
push
jne
and
imul
sbb
scas
in
mov
and
inc
fcoml
sbb
push
inc
cli
call
bound
and
enter
test
and
insl
pop
gs
push
sti
lods
jbe
mov
js
sbb
cli
cmp
outsl
xchg
stos
add
adc
test
fbstp
cltd
insl
fcmovb
mov
sub
mov
xor
popw
scas
cmp
jp
stc
sbb
stc
imul
loopne
sbb
xor
mov
lds
dec
aas
dec
cmp
and
and
insl
loopne
lods
imul
iret
or
mov
mov
into
das
jae
jl
sahf
jp
mov
sbb
jo
push
lock
icebp
incl
xor
fidivrl
or
je
insb
rol
dec
jae
outsl
repnz
test
mov
pushf
frstor
enter
fsub
or
aad
jno
push
incl
pop
cmp
leave
sbb
add
icebp
lret
mov
lods
pop
and
dec
xorl
xchg
fcoms
mov
movsb
lea
cmp
sub
inc
fnstenv
xor
ficompl
lcall
sub
pop
lock
scas
xchg
stos
shr
mov
mov
pop
xor
pop
jbe
and
sbb
rol
adc
pop
mov
pop
xor
dec
cmp
jmp
adc
popa
sahf
cwtl
jne
adc
mov
dec
push
xor
add
sbb
sar
mov
rcrb
xchg
mov
insl
aas
xor
inc
jg
ret
push
mov
cltd
test
inc
je
test
jne
dec
pop
sub
int
adc
sbb
dec
mov
fwait
mov
inc
cmpsb
faddl
fildll
mov
lds
jle
aam
mov
jno
fmull
xchg
adc
or
pop
cmp
xor
dec
add
ss
add
sbb
pop
pop
stc
jnp
pop
aas
daa
pop
dec
addr16
lahf
popa
nop
cmp
and
cs
int3
adc
shll
inc
mov
mov
xchg
insb
lahf
cld
leave
adc
int
inc
icebp
or
pop
mov
dec
imul
inc
imul
mov
fldcw
cmc
inc
push
daa
push
ja
sub
xchg
jle
jecxz
rcll
jbe
mov
mov
rorb
fidivs
in
popa
ret
mov
ds
arpl
push
jne
and
ror
inc
fadd
in
push
xchg
adc
add
push
test
xchg
pop
inc
or
dec
movsl
xlat
mov
fucom
adc
add
fisttps
outsl
cmc
ret
nop
es
adc
or
jle
fdiv
xchg
cmp
scas
insb
notb
cltd
out
xor
fxch
rorl
pop
push
fnstsw
mov
out
movsb
nop
adc
int
out
aam
setae
lods
push
lea
xchg
dec
sub
inc
ret
push
stos
ficomps
push
imul
fimuls
mov
lds
ds
aas
xchg
inc
lret
mov
shl
incb
test
push
adc
jecxz
push
lret
xchg
out
jns
push
cld
sub
pop
mov
or
adc
mov
adc
adcl
loopne
mov
leave
jbe
ss
inc
pop
add
clc
jmp
or
pusha
sub
lahf
push
shll
orl
mov
icebp
dec
addr16
and
ror
push
push
and
push
lcall
mov
sub
aas
mov
data16
sbb
scas
pop
scas
jno
pusha
mov
jae
fucom
fisttpl
outsl
xchg
movsl
jbe
shl
dec
leave
cmp
jns
outsl
sbb
lea
xlat
insl
jg
mov
mov
outsl
adc
inc
xchg
and
mov
jno
addr16
mov
jne
pushf
push
sub
lea
shr
repnz
pop
and
pop
inc
fwait
or
and
mov
jl
lock
jp
rcrl
sbb
mov
dec
jno
lcall
es
clc
fsubrl
dec
sbb
push
imul
xor
aas
ss
mov
rorb
fcmovbe
xor
fnstenv
cli
outsl
std
inc
pop
dec
jo
bound
xor
push
inc
int3
in
sub
dec
pop
add
sub
outsl
mov
arpl
sbb
ss
pushf
cmp
roll
sbbl
mov
inc
sarl
das
cmp
cmp
jp
inc
mov
mov
cmpsb
movsb
int
jne
fst
and
hlt
sbbb
int
lods
add
cmp
scas
jg
outsb
adc
adc
dec
divl
or
push
dec
divb
lret
aaa
xor
mov
dec
xor
pop
push
add
les
lahf
xchg
sbb
lds
mov
lahf
sbb
mov
iret
and
movsl
inc
jge
loop
dec
push
out
out
sub
push
sub
mov
sbb
fbstp
cmpsb
or
cmp
sarb
push
sbb
fdivr
pop
mov
inc
mov
inc
mov
mov
or
addr16
fisubs
out
sub
lret
bnd
add
movsl
jecxz
das
movsb
jl
enter
addr16
jae
xchg
call
aad
xlat
inc
cmp
test
cli
notl
je
push
xchg
inc
adc
cltd
or
out
and
mov
insb
add
lods
push
loope
fdivrp
pop
adc
adc
sbb
dec
xchg
dec
xchg
repnz
vpshufd
jl
lcall
out
repnz
push
mov
xchg
stc
push
sub
mov
push
aam
xchg
jae
jns
mov
add
pop
fsubl
aad
incb
pop
xchg
sbbl
lock
cwtl
push
pop
test
and
jle
inc
scas
inc
add
out
adc
add
test
ljmp
syscall
addr16
iret
test
push
stos
push
testb
or
lcall
cmp
ja
insb
mov
jb
jecxz
subl
mov
mov
cmp
lds
push
or
in
stc
in
int
xor
sar
mov
xor
arpl
clc
and
mov
pop
fs
jle
jmp
ficomps
mov
mov
test
xlat
pop
addb
idiv
pop
adc
leave
test
nop
mov
push
fwait
dec
ja
or
add
push
loopne
loope
int
inc
psubsb
fistpl
pop
pushf
jne
rorl
aaa
clc
inc
push
add
fwait
imul
mov
inc
je
or
mov
dec
mov
or
divb
jno
movsb
icebp
jl
mov
movsl
loopne
xchg
jno
test
nop
lock
test
sbb
add
xor
pushf
and
mov
xchg
or
mov
cmpsb
loop
das
push
and
dec
popa
enter
mov
dec
lods
mov
cld
mov
into
push
or
ficoml
sbb
repz
aad
cwtl
jbe
scas
jecxz
xor
into
ret
je
or
in
mov
mov
push
in
jecxz
sahf
mov
inc
fst
in
xchg
mov
in
jle
stc
sub
dec
mov
sbb
xchg
int3
sub
cmp
and
jl
sar
mov
mov
inc
testb
or
and
push
test
inc
mov
ss
lods
lods
dec
mov
test
ret
sbb
sub
sbb
rclw
mov
or
dec
cmpsl
iret
push
sahf
loopne
cmpsb
adc
adc
or
cmp
inc
es
js
mov
sahf
stc
inc
call
push
out
mov
push
mov
jge
mov
mov
ds
jb
rcll
inc
sbb
pop
cmpsl
scas
fwait
fwait
out
sti
push
leave
mov
xor
loope
aas
jg
or
xchg
stc
imul
cwtl
inc
lcall
scas
dec
rcll
arpl
push
cmpsb
inc
cld
iret
shlb
mov
out
add
mov
or
in
jmp
loopne
cli
test
iret
rcll
mov
inc
lret
sbb
lods
push
mov
sub
jne
mov
fsubrl
or
or
adc
popa
dec
mov
mov
push
xlat
add
loopne
pop
dec
ljmp
xor
clc
and
cwtl
push
cmpsb
mov
arpl
outsl
fstpt
dec
lds
mov
add
sub
mov
xor
pop
flds
repz
sub
pop
or
outsl
test
data16
jno
lret
mov
sbb
enter
xchg
mov
dec
mov
push
fisubrs
mov
jns
movsl
shlb
dec
loop
cs
mov
shl
inc
rcrb
cmp
insl
push
or
sti
dec
mov
push
jo
and
sbb
jo
pusha
inc
ljmp
sbb
popf
jae
jl
push
loop
out
adc
jns
cmp
mov
mov
mov
arpl
insl
sub
pusha
int3
lcall
jg
repz
js
imul
pop
jg
and
ljmp
insb
les
pop
jae
dec
push
shrl
xor
push
add
mull
xor
push
sbb
fucomip
fcoms
push
rcrb
out
cmpsb
xor
popa
xchg
inc
out
repz
xchg
mov
add
movsl
popa
inc
inc
mov
and
or
test
js
int3
xlat
jno
push
std
cltd
push
xchg
out
jecxz
les
test
push
mov
mov
and
icebp
mov
add
add
imul
addl
sub
xor
lahf
cmpsl
hlt
fst
popa
push
lods
push
xchg
jnp
xchg
adc
fdivl
xorl
inc
lock
lahf
xor
enter
and
out
stos
pop
repnz
inc
lock
mov
stc
pop
lret
jg
mov
dec
fdivr
loopne
sub
js
adc
and
lcall
neg
cltd
cmp
add
mov
sbb
pop
enter
and
imul
dec
mov
lcall
les
ret
arpl
aad
out
lods
lds
out
pop
bound
icebp
out
lods
mov
or
lds
sbb
adc
mov
pop
mov
xchg
ja
jge
xchg
cmp
movsl
sbb
rorl
adc
inc
sbb
inc
jno
inc
push
sbb
dec
lds
std
push
int
pusha
pop
fdiv
in
addr16
adc
call
movsl
push
cmp
enter
imul
cs
jle
xchg
movsl
mov
push
das
outsb
xor
pop
sbb
shlb
les
ret
add
xchg
mov
push
lds
push
ja
sbb
cmp
je
add
fucomip
sbb
andps
lcall
mov
mov
nop
sbb
cmp
mov
ret
or
mov
les
xchg
jmp
sahf
ret
jmp
cmpsl
ljmp
jne
xor
test
inc
testb
and
bound
aaa
push
push
add
push
cmp
sub
mov
inc
xchg
xor
hlt
js
cmp
jno
add
pop
dec
xor
lgs
loope
cld
lods
pop
cmp
mov
dec
gs
sbb
adc
push
pop
cwtl
push
psubsw
and
pusha
pop
push
fcompl
les
loop
fsub
dec
das
adc
lret
es
xchg
add
push
add
xchg
push
lcall
cmp
out
and
push
jle
mov
js
cmp
jo
adc
cmc
std
sarb
fcmovne
adc
lea
mov
arpl
jp
aaa
ret
push
cmp
pop
stos
pop
or
xchg
fsubr
mov
dec
hlt
cvtdq2ps
inc
jmp
cmpsb
fnstenv
jecxz
mov
xchg
cmp
push
jbe
mov
mov
cltd
jmp
sbb
mov
adc
mov
ljmp
gs
mov
out
fstl
fsubrs
jp
jp
push
insl
cmc
lret
outsb
cmp
je
arpl
or
dec
jbe
sbb
fcomps
imul
and
repz
push
mov
aas
cmpsb
dec
out
sbb
je
sbb
push
cmp
and
pop
sbbb
pusha
jbe
adc
jecxz
or
insb
imulb
sbb
rorb
sbb
and
inc
push
dec
stos
lock
ja
pop
add
or
or
or
mov
fcomp
call
call
test
sarl
mov
fldcw
or
jb
xor
jae
pop
mov
or
cmp
in
jmp
popf
rcrb
push
loope
stos
sbb
pop
out
xor
sbb
les
add
or
jl
mov
push
lds
pusha
mov
mov
gs
push
add
cltd
xlat
push
outsl
inc
int3
int3
mov
mov
or
daa
ficoml
cmpsl
test
test
ret
xchg
repnz
fwait
movsb
mov
repz
test
ja
push
cmpsl
pop
aas
icebp
mov
outsb
loopne
sub
mov
xchg
jne
and
xchg
fmuls
sub
in
int
test
data16
int3
int
push
std
fstpl
add
popf
xlat
fwait
sti
leave
push
inc
test
lods
clc
ret
cmp
cmp
fisubl
push
repnz
in
xor
push
loopne
stos
test
lret
fisubs
mov
adc
adc
movsl
push
mov
shll
sbb
hlt
int3
in
mov
cli
sub
in
pushl
pop
popa
inc
mov
xchg
adc
add
or
and
sbb
loopne
xchg
jo
push
movb
adc
test
scas
fwait
xor
mov
fldt
jb
jb
pop
mov
shrl
push
out
cmc
enter
xor
xchg
gs
test
jb
sbb
and
mov
xlat
rcrb
sbb
or
ds
stc
xchg
mov
sti
cltd
in
mov
aas
xchg
dec
rcrb
fucomi
adc
cmp
push
enter
xchg
xor
push
adc
cmp
inc
fldl2e
loop
sub
jle
adc
mov
cmp
inc
bound
daa
fsubrs
push
outsl
arpl
jl
test
repz
movsl
movsl
cmp
jecxz
dec
fwait
lock
pop
or
shrl
ss
push
push
sbb
lds
shlb
icebp
add
mov
outsb
js
outsb
inc
inc
adc
addr16
dec
pushf
mov
ret
mov
jne
dec
mov
mov
adc
xor
mov
movsb
inc
subb
xor
sub
loope
mulb
shll
adc
addr16
dec
adc
adc
and
dec
fidivs
je
in
test
mov
in
cmp
insb
les
adc
cli
je
icebp
cmp
out
mov
or
in
fdivrs
pop
in
into
dec
sub
or
test
ret
idivb
mov
and
data16
cmp
mov
cmp
lea
xchg
lds
jne
cmpl
dec
xchg
lret
retw
into
mov
enter
and
mov
add
jecxz
lcall
aad
or
daa
xor
xor
lods
and
dec
stos
mov
cli
fucom
popf
pop
inc
sub
sub
xchg
mov
cli
mov
mov
lahf
jmp
roll
dec
iret
mov
cmc
mov
out
and
out
jno
adc
sbb
mov
jnp
push
mov
push
add
lock
mov
or
fs
jno
out
leave
sbbb
test
mov
cld
shlb
mov
adcl
decl
cld
loop
bound
push
mov
outsl
xor
std
xchg
mov
jbe
in
sbb
clc
dec
or
inc
sub
mov
xchg
imul
in
sahf
xchg
jecxz
fnsave
loop
pop
sub
and
shll
movsl
sti
inc
lcall
sti
sti
push
notb
pusha
mov
aas
mov
jmp
cmc
int3
aad
cld
cmpsb
in
sub
test
sub
inc
xrelease
popa
inc
idivl
shrl
add
mov
test
lock
or
pop
push
shll
jno
add
gs
je
inc
xor
xor
loopne
xor
sarl
in
subb
sub
mov
push
xchg
cs
stc
pop
dec
jge
jge
inc
cmp
ja
ljmp
movsb
cli
add
loopne
sub
mov
pop
outsl
cwtl
inc
xlat
lock
fildl
mov
orl
sahf
mov
incb
or
jge
test
pop
icebp
xchg
loope
fwait
subl
cmp
shl
or
push
andb
movsl
push
cmc
inc
adc
cmpsb
push
pop
test
iret
jg
add
test
sbb
pusha
popa
xlat
jle
repnz
lret
mov
lcall
add
dec
mulb
mov
cli
pop
adc
cmp
mov
pusha
xchg
dec
insl
pop
das
jns
andl
mov
or
jl
shl
ja
std
mov
shlb
ss
jg
xchg
int
xchg
and
mov
mov
inc
mov
in
pop
insl
sub
pop
imul
pop
xor
aad
testb
or
mov
push
pop
pop
fstl
jbe
mov
and
dec
pushf
out
or
sub
cwtl
mov
mov
leave
cmpsb
jo
add
je
inc
test
add
ja
je
rolb
cmp
jbe
jmp
je
icebp
lods
fisubl
add
faddp
ret
negl
mov
stos
cmpsb
and
dec
xchg
pop
sbb
and
rol
mov
cld
add
sub
and
sub
les
in
dec
enter
pop
pop
ret
mov
jmp
les
shlb
in
loop
fldl
cmpsb
int3
xchg
mov
and
repnz
mov
call
pop
test
cmp
in
stc
mov
and
inc
std
pop
push
xor
lret
bound
bound
cwtl
les
mov
lahf
fsubl
push
and
roll
jmp
jg
add
out
shlb
out
mov
xchg
inc
bound
mov
or
xor
cmpsb
cmp
xor
or
fdivp
sbb
mov
mov
cmp
dec
imul
jmp
mov
cmp
pop
vpcmpgtb
fildl
pop
jle
pop
int3
mov
add
je
scas
xor
adc
adc
cmp
inc
insb
pop
inc
add
into
inc
jmp
and
lock
std
xor
mov
add
xor
fldcw
xchg
ja
inc
push
lret
jecxz
cld
adc
push
inc
push
jns
add
or
mov
cmp
cmpl
aaa
or
xchg
mov
cmpsb
xchg
jg
in
push
ds
push
sub
add
xchg
pop
mov
dec
jmp
sbb
inc
xchg
pop
jmp
js
or
mov
lret
fbstp
push
fs
pop
cli
adcl
orl
popa
lock
aam
fisubs
imul
ds
sub
xchg
int
add
je
add
aam
adc
sub
rol
std
jbe
outsl
jb
jns
xor
movsl
sahf
lcall
push
or
pop
jne
jge
sub
mov
movsl
cmpsb
test
pop
xchg
mov
in
pop
jne
pop
xor
pop
mov
cmp
cltd
add
jb
push
sub
in
insb
cmc
int3
test
gs
inc
mov
popf
data16
mov
iret
pop
push
fldenv
push
scas
xor
negl
out
ret
push
scas
push
and
adc
xor
test
test
cmpsl
inc
out
push
or
mov
stc
test
cli
add
shr
in
push
mov
xor
push
fdiv
and
xchg
xchg
aas
stc
or
repz
in
cmp
mov
jb
sbb
cmp
pushf
xor
adc
dec
sbb
out
leave
or
repnz
loope
mov
push
jb
mov
push
loop
add
jne
in
xor
jne
aas
push
in
sub
xchg
jnp
insb
xchg
xor
mov
popa
lcall
and
jg
inc
or
jp
mov
loopne
mov
cmp
popf
inc
in
pop
ss
fidivrs
xor
xchg
cld
dec
es
daa
addr16
pop
mov
leave
cwtl
cltd
shlb
mov
fsubrl
sbb
out
push
pop
in
mov
inc
in
rcr
push
dec
pushl
fnstsw
je
mov
les
dec
sbb
push
dec
inc
sub
lods
jb
les
mov
test
fmull
pop
int
jnp
cmp
mov
jb
push
ret
or
int
cmpb
sahf
popf
sbb
or
aas
add
mov
es
jg
roll
fsubr
outsb
pop
add
call
pop
jno
in
vmwrite
pop
pusha
push
cmp
dec
lock
adcb
and
mov
ja
push
aad
cmc
aas
pop
dec
sbb
push
loopne
pusha
clc
lret
fucomp
cmpsb
aam
push
xor
adc
xchg
or
and
enter
jno
out
scas
stos
pop
jmp
xchg
sub
std
loope
cmp
xchg
push
movsb
test
stc
addl
dec
lahf
pop
cmpsb
inc
jne
push
ficoms
xchg
xchg
loope
adc
std
and
sub
mov
enter
inc
popf
adc
dec
roll
dec
pop
mov
cmpsb
jb
sbb
xchg
jns
xor
mov
mov
mov
out
mov
sbb
aam
jg
lods
ficomps
adc
pop
cmp
dec
pop
mov
imul
mov
mov
xchg
popf
push
pop
iret
int
mov
or
jno
enter
mov
pop
mov
inc
jae
xor
push
and
mov
dec
ljmp
pusha
out
xorl
xor
jecxz
mov
mov
xchg
inc
pop
mov
adc
addr16
sbb
jno
js
sub
inc
dec
sbb
push
aad
and
mov
out
adc
iret
loope
cmp
mov
add
fisttps
scas
lods
in
xor
nop
mov
loopne
mov
xor
movsb
jno
dec
out
cs
mov
lahf
or
ss
mov
int
inc
aad
sarb
aas
pop
push
sub
movsl
adc
adc
std
jmp
rolb
js
sbb
aad
or
jo
adc
inc
cli
sbb
cmp
gs
jp
jb
and
mov
mov
cld
xlat
in
xchg
mov
xchg
mov
and
icebp
sub
in
inc
mov
mov
xor
mov
inc
idivb
mov
je
int3
xor
adc
mov
or
sbb
insl
jle
lcall
les
pop
addl
mov
incl
enter
ljmp
dec
arpl
test
daa
xchg
ret
popf
ds
sbb
test
dec
add
adc
mov
movsb
pop
cld
ret
out
pop
mov
bound
rcrl
hlt
enter
sub
pop
out
jge
xchg
scas
ficoms
pop
loopne
jle
clc
loopne
push
dec
xor
xor
adc
push
cmp
xchg
sbb
mov
scas
jns
sbb
je
ret
pop
adc
out
mov
xchg
inc
cmp
ds
test
sbbl
xchg
arpl
ss
mov
adc
cmp
call
movsb
lods
mov
into
push
jns
sahf
sarb
push
xor
mov
lods
and
cmp
loope
mov
gs
stos
clc
fiadds
push
adc
imul
mov
jb
in
gs
lods
pusha
nop
pusha
xor
notb
dec
sarl
icebp
insb
sbb
je
lock
cmpsl
xchg
inc
pop
pop
dec
xor
sub
sarl
inc
push
in
rcl
popf
mov
adc
pop
mov
test
sbb
mov
xchg
out
in
adc
mov
sbb
mov
js
aad
mov
lock
inc
jmp
aas
fcoms
ror
in
mov
lahf
or
call
je
xchg
mov
sub
xor
sbb
out
and
rcll
mov
pop
and
push
jns
outsl
push
scas
adc
leave
cld
sbb
leave
nop
popa
and
mov
gs
bsr
movsl
xchg
mov
rolb
xchg
jae
lcall
test
test
inc
and
xchg
adc
data16
pop
rclb
je
push
sub
pusha
aam
xlat
subb
scas
cmc
incb
cmp
fldenv
movsl
popa
mov
inc
cmp
fmuls
aad
or
mov
dec
hlt
ficomps
or
inc
sbb
mov
dec
push
xor
pop
cmpsb
sbb
push
xchg
loope
cltd
jg
std
cmp
xor
jle
inc
enter
push
mov
shrl
mov
outsl
pop
xchg
insl
sub
mov
push
mov
testl
xor
int
dec
lcall
adc
mov
lret
and
and
scas
out
lods
adc
add
push
outsb
sbb
cmp
addr16
mov
cli
into
and
push
xor
fistpl
push
pop
mov
xor
and
adc
ds
sub
sbb
jae
jmp
dec
stc
je
push
adc
push
ds
jl
push
sbb
mov
mov
bound
mov
cmp
andl
negl
jle
imul
mov
pop
xor
inc
rcrl
or
mov
push
insl
das
fsts
lock
dec
lret
nop
mov
inc
mov
pop
adc
fcmovne
clc
pop
rcr
push
scas
mov
inc
icebp
sub
pop
xchg
xchg
in
mov
sub
and
jbe
scas
scas
arpl
cmp
dec
cmp
and
lret
or
mov
adc
clc
in
adc
nopl
in
cmp
xor
push
outsl
je
jo
dec
fstp
lds
cli
loope
sbb
outsb
jmp
lock
pop
push
jp
fwait
or
shll
dec
subb
inc
inc
enter
lods
idivb
fwait
sub
icebp
sbb
filds
xchg
mov
inc
insb
push
dec
pop
andb
ret
loope
jbe
lret
sub
adc
aam
or
add
test
mov
lock
pop
cmpsb
pop
ret
xchg
in
cmp
js
adc
fsubrs
xor
int
xchg
jae
inc
mov
test
sbb
dec
dec
cmp
in
inc
xor
mov
test
rolb
inc
mov
or
mov
sub
mov
and
add
xchg
dec
test
and
add
mov
nop
cld
push
jnp
dec
stos
mov
clc
mov
jl
ss
hlt
loope
jne
xchg
popf
cwtl
repz
aad
jno
mov
push
shlb
pusha
mov
sub
je
sbb
pop
add
repnz
addr16
cmp
test
pop
mov
push
cmpsl
mov
dec
sub
mov
pop
outsb
mov
mov
call
nop
imul
sbb
xchg
push
subl
idivl
idivl
inc
std
xor
and
mov
adc
jecxz
int
movsb
add
lret
lods
xchg
ret
xor
and
dec
cmp
mov
push
insb
mov
xor
stc
sub
jo
ret
mov
mov
push
push
test
dec
cmp
jnp
or
inc
ret
leave
cwtl
sub
xor
popl
mov
dec
aam
xchg
adc
outsl
cmp
mov
insl
and
cmpsl
pop
adc
dec
enter
sbb
xor
mov
les
sub
out
inc
sub
jno
cmp
xchg
sbb
bound
jnp
roll
imul
mov
push
daa
stc
push
pop
inc
adc
mov
mov
add
sbb
mov
inc
pop
rolb
pushf
aam
mov
aaa
sub
lds
sbb
pop
std
enter
ret
arpl
jo
mov
les
xchg
pusha
gs
push
dec
ds
scas
push
mov
movsl
cmp
jl
ret
sub
aaa
pop
or
cs
adc
mov
icebp
jae
mov
pop
jno
inc
cmpsl
icebp
ret
ljmp
cmp
fmuls
mov
add
xchg
aad
jmp
mov
mov
pop
or
inc
cmc
icebp
dec
xchg
faddl
sub
pushl
inc
xchg
leave
aas
cwtl
inc
pop
jo
or
inc
das
xchg
mov
cmp
xor
jmp
enter
mov
sbb
pop
cld
jb
sub
out
or
test
mov
data16
dec
add
adc
or
jns
adc
push
imul
mov
inc
pusha
add
ss
jg
jecxz
fwait
imul
fstps
cmp
out
or
mov
xor
and
pop
das
cmp
or
mov
dec
add
and
xor
cltd
inc
imul
mov
or
jb
stc
dec
mov
aaa
xor
test
pusha
fwait
mov
lock
ret
outsl
icebp
xchg
fldenv
sarb
popa
inc
jns
inc
sbb
aam
ss
cli
fistpl
je
mov
push
pop
pop
rcr
subl
mov
sub
insl
push
or
in
dec
pop
dec
idivb
lock
out
xchg
notb
cld
aad
loopne
pop
jo
lods
push
addr16
adc
push
adc
cmc
int
push
sub
outsl
fsubrs
fstl
jb
push
sbb
out
lahf
icebp
icebp
bnd
arpl
dec
lock
xor
sub
nop
pusha
daa
aas
aam
out
test
mov
xrelease
jbe
mov
test
pop
xor
add
xor
cmp
sub
xchg
mov
loop
xorl
int
xchg
sahf
pop
push
jmp
lret
bnd
cmp
test
add
dec
test
mov
gs
xor
iret
pop
cmp
mov
mull
insb
cli
add
xchg
cmpsb
sarb
xor
in
xor
lods
inc
sbb
mov
adc
inc
bound
sub
and
in
rclb
push
js
and
xor
mov
inc
cwtl
cwtl
es
dec
lea
adc
frstor
stc
pop
js
lahf
sub
fbld
xor
daa
jmp
dec
push
cmp
jns
std
adc
dec
test
xor
add
aaa
jge
pop
imul
adc
sar
mov
xchg
inc
add
ficomps
iret
mov
push
jnp
cmp
loopne
sub
mov
pusha
mov
mov
mov
mov
sbb
stos
outsl
jg
dec
adc
cmpsb
ja
mov
notl
test
cmpsl
or
int
fsubs
mov
aam
mov
sti
and
addr16
xlat
inc
mov
test
in
sub
push
mov
xchg
mov
and
repnz
pop
cmc
shll
lcall
push
mov
movb
push
aam
rcrl
mov
cli
fwait
mov
sub
movsb
push
pop
adc
xlat
pop
add
in
jg
xor
ret
and
addr16
int3
in
out
jle
daa
push
and
scas
jecxz
add
push
decl
dec
fstl
jmp
push
fucom
or
or
jbe
stc
out
dec
std
fdivrl
xchg
sbb
dec
inc
xor
orl
hlt
mov
pop
cmpsb
bound
pop
sbb
aas
sub
bound
or
out
jmp
clc
rorb
xor
fidivl
dec
cmp
call
repz
jbe
xlat
into
cmp
lea
pop
divl
aad
or
std
push
sub
rcr
out
inc
fimull
sub
outsb
sbb
cmpsl
test
push
jmp
mov
aam
inc
or
loope
and
mov
popf
jmp
gs
test
cmovle
push
xlat
push
push
and
pop
mov
insl
push
sbb
rclb
loope
sbb
sbb
mov
push
orb
push
jb
in
arpl
gs
push
ja
mov
aam
int3
movsb
mov
shlb
jne
and
lock
jg
push
repz
popa
sbb
shl
sbb
xchg
iret
adc
or
les
movsl
dec
ret
cmp
movsb
push
outsb
add
push
idivb
pop
shrb
insl
push
nop
lahf
stc
or
or
cmp
jp
xor
fdivl
add
dec
or
jecxz
in
js
or
in
cld
das
push
inc
fisubs
cmp
dec
sub
push
daa
dec
push
or
mov
mov
cmp
fimuls
rolb
inc
inc
pop
and
popf
ret
imull
outsl
ja
push
loopne
cwtl
insl
lods
pop
subl
ret
xor
push
mov
stos
dec
lods
add
mov
sub
push
xor
mov
iret
ds
push
cli
es
stc
ss
or
jnp
rcrb
xor
sub
ja
movsl
fistps
fdivrs
hlt
fs
out
fimuls
pop
pushf
sbb
enter
inc
push
add
call
inc
jmp
cs
cs
popf
aas
clc
pushl
fldl2t
push
shlb
jle
pushf
xchg
push
cmp
push
push
lds
xchg
pushf
mov
push
mov
dec
sub
or
mov
bound
adc
jmp
lret
mov
jl
push
mov
stc
xchg
sub
aas
gs
mov
scas
out
aad
int
inc
adc
push
sahf
outsb
or
jg
mov
out
jbe
push
loop
cmp
faddp
pop
fnstsw
add
jae
in
dec
mov
jg
xchg
mov
scas
cli
dec
add
lret
and
cwtl
lods
inc
lods
fdiv
ja
inc
sbb
orl
mov
pop
loope
adc
mov
dec
pop
ror
test
lcall
jle
mov
sbb
or
push
sbb
inc
and
inc
xchg
xchg
lret
movsb
xor
xor
subl
xchg
lods
lods
add
insl
add
enter
daa
jg
lret
or
xchg
out
dec
push
mov
xchg
cli
xchg
inc
xchg
dec
das
inc
cmc
lahf
ds
xor
xchg
mov
vmlaunch
lods
sub
in
mov
mov
sub
cwtl
inc
popf
outsl
dec
decb
xchg
fisubrs
mov
repnz
mov
and
aaa
mov
jnp
xchg
pop
push
leave
rol
fwait
sbb
pushf
inc
fildl
in
popf
repnz
inc
and
xor
mov
mov
adcb
mov
hlt
dec
jnp
pop
mov
mov
push
push
jl
mov
dec
insl
js
pop
cld
fcmovnu
jmp
inc
sbb
sbb
jae
adc
rcrl
cmc
dec
jle
and
push
mov
mov
in
push
xchg
aaa
popf
pop
cmp
out
mov
sbb
fs
rolb
call
cmp
pop
aaa
sbb
cmp
mov
and
mov
cmc
mov
sub
pushf
jecxz
int
cmpsb
inc
xchg
mov
stc
fisubrs
or
movsl
sub
lods
jmp
jle
lcall
jne
mov
mov
pushf
inc
cltd
test
nop
xor
data16
and
sbb
push
test
mov
outsl
xchg
adc
xchg
pop
push
out
adc
sbb
mov
adc
cltd
test
es
dec
jnp
xchg
pop
movsb
push
out
int3
lcall
mov
aas
arpl
outsl
ds
jmp
ds
push
stos
mov
loopne
flds
xchg
fisttpll
or
addb
rcl
add
pushf
outsl
lock
xchg
ss
stc
push
push
es
inc
add
std
or
xor
sti
push
mov
xor
sar
dec
insb
popa
pop
aaa
sbb
sbb
orl
and
sub
push
mov
or
mov
nop
inc
sub
xchg
fsubrp
icebp
or
xchg
pushf
xchg
outsl
xchg
adc
add
pop
test
mov
or
mov
cmp
mov
fildl
sbb
cmp
mov
add
mov
sarl
ja
xchg
cld
add
das
jge
jmp
out
cmp
pop
cmp
add
jmp
add
mov
xor
mov
lock
nop
xchg
leave
fbld
push
aas
stos
lea
jmp
jne
jle
adc
out
mov
std
sbb
xchg
or
xor
sub
mov
lret
add
sahf
lret
lcall
or
movb
sub
jnp
pop
pop
dec
das
xor
dec
cmp
push
out
sub
adc
mov
xor
xor
addr16
pop
adc
ror
xchg
mov
enter
inc
andb
pop
mov
pop
mov
or
ret
mov
xchg
jmp
adc
nop
push
dec
test
aaa
add
add
sbb
jl
shlb
data16
cmp
ds
add
jo
pop
mov
cmpsl
mov
mov
mov
aas
jno
sbb
sbbb
mov
roll
in
xor
cmpsb
jb
sub
mov
jmp
fwait
or
inc
jmp
lds
fcmove
std
or
lods
movsl
add
pop
adc
pop
push
mov
sbb
notl
gs
ret
enter
xchg
jo
mov
inc
xchg
into
add
add
mov
pop
xor
inc
or
push
outsb
cmp
enter
shll
xchg
lock
stos
aam
pop
stc
adc
add
cs
adc
repz
jecxz
sbb
scas
push
mov
mov
testb
jg
arpl
sbb
mov
mov
movsb
pop
push
sub
dec
mov
push
aas
xchg
leave
inc
inc
xchg
jecxz
fistpll
lcall
mov
jmp
clc
mov
dec
lods
pushf
int
add
add
inc
fs
pop
push
insb
xorb
or
test
gs
inc
and
push
ds
dec
rolb
repz
mov
mov
mov
popf
pop
sub
push
pop
inc
jmp
mov
pushf
lods
xchg
das
out
jg
int3
and
test
pop
into
js
inc
data16
or
jae
xlat
popa
push
jmp
imul
and
push
cmp
pushf
out
repz
cmp
jno
sbb
bound
insb
add
cmpsl
inc
mov
sub
pop
fnstsw
pop
test
repnz
ja
add
cmp
xor
mov
enter
les
cltd
fsubs
inc
in
xor
sub
stos
cmp
popa
and
lods
shrl
or
out
bound
cmp
push
gs
jmp
out
pop
pop
adcl
adc
and
inc
xor
lret
push
pusha
aam
inc
jne
inc
push
mov
jp
ss
ret
xor
xchg
push
lock
jae
push
rorl
divb
hlt
stc
sar
rcll
loop
xchg
jne
insb
mov
pop
pop
fdivrl
popa
cmp
popf
mov
push
fimull
bnd
mov
aad
inc
xor
js
jl
and
inc
xchg
mov
fidivrl
cmp
sub
aam
xchg
out
decb
mov
data16
clc
repz
push
js
lea
adc
jmp
mov
ja
push
xchg
test
push
ffree
cltd
fsts
jns
sub
mov
pop
xchg
xchg
jbe
fdivr
adc
push
jle
inc
gs
adc
int3
inc
xor
xchg
push
inc
sbb
divl
and
and
dec
pop
js
xor
mov
pop
stc
dec
lock
jns
add
int
mov
mov
push
cwtl
cmp
pop
sbb
jp
add
cmovnp
xchg
jb
addb
mov
and
jbe
cmpsl
push
std
dec
adc
push
sbb
imul
shlb
ljmp
subb
xchg
jo
mov
mov
sub
push
xchg
ds
dec
adc
xchg
xchg
inc
mov
call
fidivrl
fists
mov
outsl
xor
mov
cld
in
ret
xchg
jo
popl
add
inc
cs
or
not
xor
adc
in
xor
test
jnp
fldenv
jg
leave
inc
aam
insl
and
shr
cmp
imul
xor
inc
pop
mov
sub
cmc
repz
loop
sub
fcompl
cs
lret
lods
adc
dec
jb
fadd
shrb
cmp
arpl
aad
jne
mov
mov
fcmovne
aaa
xchg
pop
mov
dec
pusha
jecxz
lods
cmp
mov
icebp
jecxz
xchg
gs
xor
mov
dec
adc
inc
xor
mov
and
cwtl
and
fwait
mov
int3
pusha
std
xchg
cmp
sub
std
movsb
adc
lock
jnp
push
mov
das
or
mov
pop
xor
mov
cmc
dec
test
add
mov
add
dec
xchg
cmpsb
xchg
cmpsl
inc
ljmp
push
lods
pushl
dec
cmc
ret
push
nop
mov
jae
dec
mov
mov
bnd
into
pop
aaa
mov
pusha
pop
in
mov
loope
jb
inc
push
dec
fnstenv
jmp
mov
repz
pop
fwait
test
jmp
cmp
push
xchg
jo
bound
sti
sbb
outsb
sbb
insl
mov
scas
in
test
push
bound
test
dec
nop
ret
lods
mov
inc
daa
or
inc
jae
fdiv
insl
loope
gs
fsubl
aas
cmp
or
pop
mov
imul
adc
out
adc
mov
sub
insb
nop
adc
dec
pop
fwait
xchg
fldenv
dec
mov
test
jmp
adc
cld
btc
jbe
pushf
data16
scas
shrl
clc
jbe
and
fistps
incl
mov
xorb
stc
in
sbb
in
rcrb
add
loopne
inc
insb
std
xor
aas
fdivl
shr
inc
xor
and
pop
jp
pop
out
or
dec
jne
imul
and
jecxz
push
movsb
jnp
in
pop
daa
xchg
dec
jecxz
aas
xchg
sub
adc
daa
lea
lret
shrb
xchg
aad
movsl
idivl
pop
xchg
and
aad
call
xor
dec
shlb
clc
cld
mov
fcmovu
fmul
call
mov
cs
xchg
cmp
pop
xchg
in
insl
imul
cmp
dec
mov
and
jl
sub
jg
add
imul
aaa
loop
dec
rcl
pop
jl
mov
add
sti
dec
sub
lcall
es
xor
xchg
movsb
cmp
jns
sbb
cmpsl
das
lret
aaa
mov
divl
or
mov
jp
jl
pop
cmp
xchg
push
mov
nop
into
loope
mov
xchg
sub
cwtl
inc
out
cmp
test
mov
lret
cli
sarl
xchg
dec
loope
jp
push
out
push
rolb
lock
sahf
lds
iret
push
jo
xor
testb
mov
pushf
fildl
out
adc
add
jecxz
lods
push
adcl
lock
out
lds
in
inc
mov
push
xchg
lods
stc
adc
sub
mov
sub
aas
sahf
push
movsl
adc
mov
lods
cmp
inc
fiadds
pop
fidivrl
in
lods
add
inc
and
dec
pop
imul
dec
jge
or
sub
loopne
sub
pop
jbe
mov
xchg
js
in
out
lods
xchg
cli
sub
stc
push
inc
lea
outsl
ret
mov
mov
push
mov
fdivs
call
xor
rcll
fdivl
push
cmp
inc
cltd
xor
xchg
leave
seta
fldl2e
push
xchg
loopne
pop
or
cli
aad
mov
push
es
std
pop
dec
mov
lahf
inc
imul
pop
push
xchg
mov
mov
loop
mov
insb
jbe
xchg
test
push
push
and
es
int3
lods
lock
and
stos
lods
ret
cmpsb
sti
mov
mov
fs
out
inc
jne
es
hlt
addr16
xor
jnp
add
jmp
imul
loop
movsl
adc
loop
sbb
pop
add
test
push
cmp
shlb
sub
ret
je,pn
mov
sbb
mov
inc
scas
and
sahf
mov
mov
lods
add
setge
ja
loope
sahf
hlt
fcomi
cwtl
lahf
push
out
xor
mov
fistpll
pop
das
popa
mov
inc
jl
adc
rorb
dec
push
push
xchg
or
mov
stc
sbb
popf
call
pop
iret
mov
mov
push
add
jmp
fsubrs
scas
and
push
js
adc
inc
mov
xor
push
jnp
mov
mov
mov
inc
clc
xorl
mov
mov
dec
mov
out
in
sahf
jp
adc
popf
xor
scas
cmp
pop
cli
into
jl
push
add
loope
dec
rcll
or
ja
es
call
repnz
mov
push
and
lds
xchg
bound
jecxz
fmul
fldenv
pusha
mov
sbbb
adcb
insl
pop
sbb
xlat
stos
not
add
ss
jnp
sbb
cmp
mov
sbb
dec
lock
aaa
dec
test
push
add
fidivl
sti
jb
fmulp
dec
je
mov
cmp
insl
xor
rcrl
jns
nop
shrl
loop
pop
mov
in
mov
insl
mov
into
mov
dec
sub
hlt
push
adc
repnz
scas
jb
std
pop
ss
push
mov
mov
fnstenv
push
int3
xchg
movsl
imul
outsl
out
fwait
out
nop
mov
popa
push
mov
mov
inc
pop
mov
mov
outsb
push
xor
pop
jnp
shrb
pusha
rcrl
mov
cmc
and
dec
pop
sbb
pushf
jo
mov
nop
ret
es
dec
lock
aad
lahf
nop
daa
jle
sbb
js
andb
fldl
leave
xchg
adc
adc
imull
adc
mov
xchg
push
sub
out
mov
or
leave
and
inc
sub
mov
mov
pop
jns
test
jecxz
icebp
lcall
jle
std
call
pop
adc
mov
aas
sahf
xorb
mov
pop
jge
mov
in
cwtl
imul
imul
pop
mov
sbb
inc
imul
dec
xchg
std
pop
or
les
mov
movsl
jne
data16
inc
sbb
movsb
negl
sub
jl
adc
adc
pusha
sahf
pop
dec
test
insb
lret
pop
testb
test
scas
jbe
mov
push
mov
scas
sbb
test
jl
adc
sub
pop
or
mov
out
fistpl
jle
mov
cld
lea
dec
outsb
inc
rcrb
jne
out
popf
stos
sbb
in
cmp
mov
push
rorb
sbb
pop
int
jae
mov
loop
jbe
pop
jns
jb
aad
stos
cmpsb
jb
or
ss
mov
mov
mov
mov
es
pop
lcall
mov
in
and
mov
rep
sahf
pop
imul
call
cmpsl
inc
mov
mov
mov
cmp
jne
cmp
mov
shlb
fiadds
or
push
rorl
mov
aaa
pop
lds
clc
xchg
pop
movsl
out
xchg
mov
jl
inc
xor
jae
sahf
jbe
pop
cmp
movsl
js
add
adc
sub
or
arpl
addr16
mov
imul
sub
adc
inc
test
movsl
pop
iret
lcall
or
and
dec
or
xor
outsb
sbb
mov
mov
pushf
sub
iret
test
sbb
xor
xchg
nop
lock
xchg
mov
movsb
sbb
mov
jle
fdivs
andb
and
std
in
jle
sbb
sub
xchg
cmpsl
int
xchg
loopne
pop
mov
into
scas
mov
push
imul
pop
sahf
jg
imul
leave
mov
push
test
mov
add
mov
pop
jae
or
test
idivb
mov
add
repnz
xor
or
int
imul
xor
or
adc
pextrw
add
aaa
icebp
jp
xchg
cltd
inc
mov
test
xchg
xchg
jle
dec
sub
sahf
cli
mov
clc
push
xor
jmp
lds
test
push
iret
cmp
sub
clc
int
push
pop
lds
jo
jmp
inc
add
fistps
push
mov
add
cli
sub
jmp
push
loope
sbb
movsb
dec
dec
pop
pop
repz
xchg
jae
rorl
mov
dec
arpl
shl
pop
adc
leave
push
in
sub
je
negl
mov
cmp
xor
imul
cmpsb
mov
lret
mov
ucomiss
or
cmpsb
mov
dec
ret
pop
imul
inc
in
test
mov
ss
ret
and
or
hlt
test
sbb
pop
nop
aas
int
mov
mov
into
jo
xchg
or
xchg
fsubrs
scas
dec
aad
scas
xchg
sub
jp
jb
sbb
and
outsl
test
icebp
and
repnz
sbb
and
cmp
mov
push
mov
movsb
xor
dec
es
mov
push
jo
jmp
or
and
icebp
dec
adcb
popa
jmp
rclb
xchg
repnz
cmp
and
cmp
and
out
das
dec
cs
xor
cwtl
adc
xchg
fsubp
test
rcrl
xchg
in
popa
mov
dec
sub
ret
pop
test
fdivl
dec
aad
or
je
cmp
mov
and
cmpb
cmp
sub
mov
mov
test
rcl
xor
jecxz
fldenv
jns
jg
pop
fisubs
and
fildll
lret
and
xchg
jb
mov
add
jnp
mov
popa
dec
push
push
push
std
jno
mov
and
mov
call
sub
jl
cmpsb
cmp
push
call
mov
jmp
aad
cmc
stos
lods
int
stos
push
inc
cmp
or
jnp
popf
mov
test
and
loopne
int
clc
jne
jns
pshufw
cmp
stc
xor
movsb
lret
mov
jnp
inc
cmc
outsb
mov
cmp
dec
popf
add
pop
loope
sahf
in
push
inc
dec
push
loope
or
pop
lds
popa
lea
inc
stos
nop
mov
cmp
aas
shlb
inc
imul
mov
mov
call
pop
lret
mov
loop
jae
in
insb
adc
int
cmp
iret
fdivrs
push
mov
add
ss
lods
jb
fs
mov
mov
insl
mov
add
rorb
pandn
daa
push
push
mov
cmp
mov
inc
dec
out
mov
fs
cmpsl
adc
fcmovb
rol
cmpsl
pushf
cli
test
inc
ds
insl
jle
sub
or
push
adc
test
add
adcl
mov
shrl
in
push
jno
xor
jno
cmpsl
mov
jp
dec
iret
cmp
cmpsb
xchg
js
mov
lods
xchg
xor
pop
jnp
ljmp
pop
xor
test
push
out
pop
mov
mov
or
std
insb
sub
pop
pop
mov
mov
fnsave
or
jbe
fidivl
lahf
shl
cmp
cld
cmpsl
shl
fimull
shr
and
dec
inc
sbb
adc
pop
jge
sbb
mov
shr
fs
or
cltd
and
sub
adc
push
popl
icebp
stos
sub
cmp
mov
or
jnp
ret
and
ud1
dec
cmpsb
push
iret
sbb
cltd
xchg
adc
inc
fwait
out
popf
dec
mov
in
pop
xchg
sub
mov
cmp
jno
fstl
lds
jge
mov
loopne
insb
sub
xchg
cmc
mov
fdivl
add
xchg
xchg
les
outsl
adc
inc
sub
loopne
enter
mov
and
push
sbb
test
mov
add
mov
stc
out
and
and
rcl
inc
mov
mov
pop
inc
pop
xchg
xchg
arpl
dec
pop
jae
add
push
shl
dec
sub
add
mov
aas
popf
xchg
repnz
stc
fildll
cmp
or
mov
aam
cmp
mov
add
in
sbb
movsb
adc
xchg
jle
jno
inc
xchg
xchg
es
xchg
jae
xchg
test
lahf
outsb
into
jl
rcr
pop
aas
fisubl
pop
popa
aaa
mov
mov
sbb
xor
aad
xchg
repz
pop
jbe
jb
out
inc
cld
out
sahf
push
jle
shlb
in
cmpsb
cli
lods
outsl
adc
scas
std
mov
add
movsb
lods
in
mov
std
lock
enter
dec
rorl
lret
pop
ret
inc
push
push
loop
sbb
cmp
mov
dec
fimull
aas
dec
mov
pusha
movsl
stos
mov
push
fimuls
lret
sub
inc
cmpb
sub
push
adc
push
jbe
iret
outsb
dec
rorb
inc
mov
xchg
xchg
add
mov
or
xor
jp
mov
or
adc
stc
adc
mov
push
dec
adc
gs
dec
adc
out
jno
pusha
pop
dec
mov
lds
enter
scas
sbb
aas
lcall
jne
icebp
jg
adc
push
and
aas
mov
mov
leave
imul
icebp
mov
xor
lret
inc
ljmp
and
sbb
xor
ds
sub
and
cwtl
data16
jle
mov
inc
dec
mov
mov
mov
std
pop
shrb
mov
pop
ljmp
xor
mov
or
insb
mov
add
xchg
jge
dec
or
and
rorb
pop
or
add
mov
jae
test
iret
push
inc
jl
cs
iret
adc
stos
sahf
stos
mov
adc
idivb
jl
insl
cmp
jl
sub
pop
nop
out
movsb
xchg
sub
and
xchg
xor
adc
jne
shrl
pop
cltd
mov
sti
push
loope
cmpsl
les
shlb
lret
pop
test
mov
and
in
pop
and
neg
xorb
mov
test
ds
or
push
int3
orb
push
call
inc
scas
imul
jl
dec
cmpsb
adc
xchg
sub
cmp
cmpl
cmp
jp
filds
outsb
push
repz
dec
mov
ss
leave
add
mov
outsl
orl
int
add
and
dec
fildll
outsb
sub
cmpsl
shr
test
dec
push
xor
pop
cli
stos
pop
or
int
sbb
xchg
adc
add
dec
in
gs
shll
xchg
xchg
lahf
ljmp
push
dec
sub
lock
ret
adc
pop
mov
lods
insb
fwait
pushf
fiadds
testb
cmp
dec
push
out
cwtl
aaa
adc
mov
fstpt
pop
mov
cmpsb
lret
testl
aam
jne
stos
shr
xchg
test
je
push
icebp
dec
push
push
ljmp
fnstsw
adc
sub
xchg
mov
fistpl
repz
shll
cltd
andb
aaa
out
sub
sahf
mov
into
and
hlt
inc
adc
cs
fcompl
adc
jae
mov
jne
inc
sbb
push
cld
cmp
pop
lahf
mov
jb
jmp
and
mov
rol
gs
or
inc
jb
pop
adc
adc
ss
enter
stc
popf
xorb
ljmp
scas
cmpsb
fdivrs
shll
cmp
fs
cmp
pusha
shrb
mov
push
iret
sbb
push
dec
or
loop
mov
ret
pop
lods
xchg
push
jo
movsl
loopne
int3
call
sbb
sub
cli
mov
mov
test
mov
bound
or
repnz
push
icebp
fisttpl
jae
pusha
adc
sahf
mov
test
and
inc
outsl
into
orl
int3
mov
in
pop
xlat
cmp
dec
loopne
mov
inc
repz
mov
cmc
jecxz
rcl
mov
js
insb
lods
add
mov
in
add
cmp
add
dec
add
mov
sbb
push
push
bound
ret
pop
sbb
enter
test
or
push
fdivrs
mov
cmpsb
mov
mov
loope
add
jo
cmpsl
outsb
mov
cmp
fs
or
cltd
mov
inc
push
adc
outsl
jne
clc
call
repnz
adc
in
int3
jnp
shll
jg
divb
test
cmp
mov
aam
shrl
inc
mov
in
add
pop
icebp
xchg
popf
mov
mov
mov
repnz
dec
fsubl
inc
and
adc
shl
sbb
test
push
and
and
repz
adc
testl
les
jg
cli
push
cmpsl
hlt
sti
addl
xchg
lods
dec
inc
imul
pop
or
xchg
jle
or
dec
in
pushf
mov
imul
in
pop
test
or
outsb
ficomps
or
pop
scas
xor
mov
pusha
adc
idivl
rcr
dec
les
sub
adc
stos
xor
jb
dec
xchg
pusha
js
leave
rcll
stos
outsl
push
inc
xchg
test
sbb
sbb
lds
sub
sbb
out
cwtl
in
jno
fsubrs
cmp
hlt
or
mov
scas
xor
push
shl
loope
inc
cmp
popf
mov
fstpt
adc
clc
ja
arpl
addl
daa
or
jo
aad
xchg
sti
xor
icebp
ja
mov
test
dec
jne
outsb
rorb
adc
cmpsb
loop
mov
cmp
movsb
loop
testb
push
loope
ds
sarb
inc
bound
sub
push
test
mov
push
popa
aas
push
mov
cmc
and
lock
mov
outsl
jmp
xchg
inc
outsl
adc
loope
fpatan
mov
push
pusha
or
lock
sbb
dec
sub
mov
es
aad
scas
jl
lods
mov
fstpl
push
scas
jg
cmp
mov
daa
jbe
jo
add
pop
out
enter
pushf
inc
cmpsb
xor
pusha
add
xlat
cs
inc
inc
lret
add
loop
addr16
mov
stos
dec
lahf
mov
fstpt
add
jg
inc
popf
xlat
dec
mov
mov
inc
cld
mov
mov
mov
inc
popa
bound
push
add
cli
or
test
jns
jo
push
lods
shlb
or
lods
rcrl
cli
jne
cmp
sbb
cwtl
jmp
pop
cwtl
inc
stos
jbe
fldpi
pop
push
pop
jns
outsl
push
push
mov
sub
lcall
or
sbb
sub
push
sahf
out
jp
cmp
ja
jae
lahf
and
jmp
inc
xchg
lcall
xchg
sbb
jmp
add
call
aaa
loop
jl
mov
std
scas
cmp
popa
gs
push
xor
sahf
lahf
dec
mov
add
mov
jo
jmp
sbb
xor
ficompl
cmpsb
dec
fs
loop
arpl
arpl
jb
cltd
pop
adc
mov
cmp
mulb
std
sbb
movsl
sbb
orb
fmul
mov
imul
ss
jecxz
pop
bound
pop
mull
sbb
and
or
push
xor
js
pop
imul
mov
repnz
aad
in
sbb
add
fists
sbb
mov
sahf
adc
fadds
and
je
inc
in
sbb
fildll
xor
imul
repnz
repnz
pop
mov
and
cwtl
hlt
clc
lock
push
cmpsw
sub
sub
imul
xchg
testb
cmpb
out
xor
jo
xchg
int3
bound
or
fcom
sub
scas
mov
xor
rorl
inc
sarl
aaa
sbb
fiaddl
inc
mov
xlat
xchg
ret
push
adc
insb
jmp
scas
cltd
cltd
dec
nop
push
sbb
fists
inc
push
pushl
sbb
add
mov
aam
aam
int3
and
inc
jecxz
ja
pop
fbstp
hlt
adc
mov
movsl
rolb
cmc
inc
icebp
fldt
icebp
mov
adc
nop
dec
mov
dec
pop
inc
adc
jbe
xor
dec
aaa
mov
pop
jp
and
xchg
les
xor
cmp
fdivs
add
fimull
hlt
test
dec
or
aam
mov
out
in
xor
mov
out
jge
xor
mov
call
stc
mov
mov
push
aaa
mov
xchg
cmp
push
mov
test
mov
aas
cmp
bound
cmc
xchg
push
enter
in
dec
leave
add
xlat
xchg
adc
jns
add
aas
pop
mov
sti
inc
out
pop
push
sbbl
xchg
and
movsl
xchg
shl
outsl
popa
xchg
imulb
xchg
inc
je
int3
fbld
cmp
cmc
jg
popf
push
cmc
jns
adc
out
sub
shl
xchg
add
pop
mov
add
movsl
xor
or
pop
daa
mov
mov
push
push
int3
jp
lret
pop
leave
pushf
xchg
fwait
popf
test
and
or
mov
sarb
dec
sub
mov
hlt
repz
mov
lods
adc
out
pop
cs
loop
jb
test
push
push
clc
in
mov
lock
sbb
pop
pop
loopne
xchg
or
in
xchg
cmpl
mov
das
sti
aad
sub
sub
or
sub
mov
xchg
sahf
mov
hlt
nop
movsl
inc
fisttpll
leave
or
push
dec
xlat
lods
adc
mov
enter
movsl
jecxz
shll
shrl
and
and
outsb
sbb
push
movsb
or
mov
test
aad
cs
movsb
add
stos
push
pop
in
fsubs
push
xchg
mov
push
outsl
sarl
icebp
cld
setle
movsl
sbb
int
fistl
push
scas
test
jmp
sub
shll
adc
jne
iret
dec
sub
sub
jno
jmp
mov
sub
sub
pop
mov
jmp
xchg
jmp
les
xchg
gs
pop
sti
test
and
or
xor
jae
imul
je
pop
scas
pop
fwait
adc
int
lods
mov
jbe
xor
test
shlb
jmp
sub
push
fdiv
push
cmp
pop
hlt
xchg
ds
mov
add
int3
push
jg
sbb
dec
jnp
out
mov
mov
adc
inc
cmp
popf
mov
sti
adc
adcl
add
in
addl
jl
push
arpl
lahf
xlat
dec
push
cmp
pop
push
or
mov
jae
adc
dec
xchg
sbb
jns
enter
fs
mov
adc
and
xchg
sbb
fs
cmpb
add
xor
negb
inc
xor
sub
jg
push
int3
push
iret
add
mov
ficompl
cmp
lret
lods
loopne
out
in
int3
jne
arpl
mov
fistps
jb
fwait
in
mov
and
je
mov
into
mov
cmp
jo
adc
add
and
loopne
ret
sbb
dec
lahf
push
sbb
std
mov
mov
sub
jno
sbb
inc
cmp
push
stos
and
pop
in
mov
push
adc
jo
push
into
sbb
shrb
fs
xor
mov
lret
adc
xorl
xchg
movsl
cli
xchg
xchg
mov
jnp
cmc
dec
and
pop
dec
mov
or
and
enter
push
adc
rolb
lret
adc
or
and
pop
add
loope
push
jne
jno
test
mov
loope
loopne
repz
and
mov
jae
add
test
pop
sbb
pop
fld
shr
test
stc
and
dec
fstpt
xchg
and
icebp
outsl
sti
push
cs
inc
daa
fisttpll
mov
mov
fwait
mov
gs
sbb
outsb
xor
jo
pop
mov
jbe
add
inc
inc
dec
out
insl
add
rclb
push
mov
out
data16
outsb
adc
popf
and
mov
pop
and
repnz
or
loope
jb
ret
push
ja
inc
loope
ja
imul
fsubp
mov
jae
ja
fdivl
or
jae
in
ret
cmp
jge
jno
jle
pop
mov
xor
out
xchg
xor
mov
mov
nop
xlat
add
jnp
lock
mov
pop
ljmp
daa
dec
out
adc
int
jle
fsubl
push
leave
fmuls
jae
inc
repz
push
xor
shlb
sbb
push
jno
rcll
adc
mov
leave
mov
adc
enter
nop
mov
cmpsl
es
xor
hlt
stos
inc
adc
cwtl
xlat
fwait
out
or
mov
push
jl
or
dec
in
repz
loope
popa
repnz
mov
add
and
outsl
pop
add
lea
pop
cmp
or
and
pop
jns
shlb
sbb
cmp
xchg
add
mov
clc
push
inc
pushf
std
lahf
lods
dec
push
pop
push
xor
loop
cmp
rcrb
push
and
push
cmc
inc
rclb
cmp
insl
ffreep
cmc
add
cltd
adc
aad
jo
lcall
fdivrl
cmp
out
xchg
int
and
in
sbb
inc
je
jae,pn
xor
iret
sbb
push
xchg
add
and
pop
inc
cmp
fwait
sbb
mov
out
test
inc
xor
jne
or
fs
mov
int3
pop
movntps
leave
scas
ss
rolb
or
movsl
popf
sbb
cmp
mov
adc
inc
mov
mov
shll
dec
adc
jle
lcall
jne
leave
pop
pop
mull
pop
xor
sub
loop
int
pusha
or
into
lock
loope
push
shrl
ret
and
outsb
mov
or
sub
lea
or
mov
inc
ret
mov
add
es
dec
add
aam
adc
dec
cmpsb
adc
fsubs
shll
movsl
mov
mov
and
sbb
xor
xor
cwtl
sarl
sub
lds
jg
and
sbb
fsub
and
mov
clc
addl
inc
stc
popa
test
stc
ret
insl
or
push
and
sub
sahf
inc
int
xchg
cmp
cld
mov
sbb
in
pop
pop
sbb
popa
test
lods
inc
push
mov
mov
cltd
xchg
test
mov
xchg
imul
xor
dec
add
and
pop
cmpsb
cmp
xchg
pushf
fs
cmp
dec
jbe
scas
or
mov
pusha
push
cs
cmc
rcll
mov
scas
jp
cwtl
js
stos
xlat
loop
mov
xchg
out
mov
xchg
mov
jo
sbbl
add
xchg
xchg
stos
push
xchg
lcall
adc
std
repnz
fprem1
imul
mov
or
sarb
xor
sbb
adc
daa
lods
mov
sbb
gs
aas
push
mov
mov
dec
or
sub
out
lcall
pushf
sbb
decl
push
xchg
or
cltd
xchg
pusha
stos
mov
inc
lret
nop
sbb
inc
cmp
loope
inc
iret
lods
add
out
popf
out
cmp
adc
cmp
push
jmp
movsl
jo
sbb
mov
add
bound
rclb
dec
imulb
jecxz
insb
out
icebp
mov
shlb
mov
dec
mov
jns
xchg
pop
loop
notb
adc
leave
lcall
fidivs
lods
dec
xchg
addr16
addr16
iret
loope
ja
push
test
aad
lret
xor
cwtl
mov
sub
jecxz
jo
xchg
stos
xchg
lcall
ds
std
mov
enter
pop
int
ljmp
scas
sub
in
xchg
inc
adc
loope
sbb
inc
in
adc
xchg
pop
enter
inc
gs
and
or
adc
test
jmp
cmp
and
adc
rcl
add
aam
sbb
dec
push
cmp
lea
aad
cmp
pop
jp
push
push
pop
mov
jno
and
loop
test
inc
ja
jno
sub
mov
cli
sub
add
je
adc
pop
mov
dec
and
bound
jecxz
mov
xchg
cli
int3
into
fldl
aam
jg
mull
jne
cmpsb
jmp
xchg
cld
jle
in
movsb
push
sbb
pop
stos
inc
add
ja
push
add
loope
fs
outsl
repnz
lret
aad
out
fs
aaa
sbb
cli
loop
stos
imul
inc
push
fistps
stos
xor
fwait
nop
xchg
leave
add
mov
repnz
hlt
cwtl
movaps
mov
dec
int
jecxz
cmc
or
or
xchg
inc
xor
fnstenv
cmp
mov
inc
popa
or
mov
dec
leave
add
mov
jg
insb
add
mov
mov
pop
mov
ud2
fucomp
rcl
fsubrs
and
pop
xlat
mov
rolb
jo
mov
shl
cs
inc
mov
fisttps
push
lds
mov
popf
cmpsl
js
or
sbb
and
gs
mov
out
jle
lds
mov
dec
pop
adc
out
xor
arpl
cld
xchg
das
jne
mov
in
or
push
xor
adc
cmp
adc
pop
clc
out
div
out
push
fs
popfw
ds
push
es
in
fdivp
mov
out
add
mov
xor
call
fisttps
cwtl
outsb
mov
cmp
dec
xchg
rol
inc
psubq
call
lahf
fdivrp
stos
xchg
in
mov
xchg
sub
test
ficoms
or
and
xlat
pop
dec
xchg
push
stos
ja
aas
dec
rcr
xchg
mov
sub
mov
shl
xchg
insb
dec
sub
in
jns
push
sahf
movsl
dec
loopne
jae
dec
imul
push
arpl
or
xchg
clc
xchg
inc
push
mov
mov
fmulp
jne
push
shrb
daa
mov
popa
push
es
dec
mov
je
dec
movsl
mov
outsb
pop
rclb
in
mov
mov
aaa
xchg
pop
mov
cmpsl
or
xchg
in
dec
sbb
sub
inc
ret
ljmp
and
inc
sub
mov
xor
call
es
or
dec
mov
fisttpl
lahf
adc
push
and
xchg
or
sbb
and
testl
bnd
push
xor
std
rorb
pop
stos
pop
jg
frstor
inc
sbb
ret
and
jne
pop
adc
jnp
dec
daa
add
aas
mov
int
test
imul
adc
jecxz
dec
inc
jmp
pop
scas
add
mov
test
jl
push
ljmp
jno
ja
rcrb
mov
mov
push
outsl
inc
rolb
js
xor
mov
stos
xor
push
adc
or
push
cmp
cmp
insb
and
sbb
aas
sbb
in
outsb
adc
shll
mov
inc
jp
inc
lcall
rcll
pop
fwait
add
jno
scas
xchg
or
mov
pop
sbb
cmp
test
fstpl
push
popf
and
sbbb
sub
ljmp
aas
daa
sub
lods
fsqrt
test
pop
stc
or
sub
adc
cmp
or
dec
out
xor
jno
push
jle
cwtl
inc
cmp
cmp
jp
lock
xchg
loop
push
loope
and
nop
mov
sbb
or
xor
frstor
mov
push
add
lock
ret
mov
pusha
mov
pop
mov
outsl
imul
push
mov
or
xor
std
pop
nop
mov
xor
arpl
aas
stos
adc
pop
pop
sbb
arpl
dec
hlt
call
lods
stos
lcall
stos
jl
cmp
xchg
sbb
jle
mov
xchg
sub
push
push
push
or
ffreep
out
shrb
lcall
sbb
dec
xchg
icebp
cmp
cmp
outsl
xchg
or
sbb
mov
mov
pop
das
mov
push
xchg
jo
lods
nop
pop
or
les
sub
les
sbb
lret
xchg
aaa
adc
lret
adc
pop
stos
mov
ss
xchg
lea
aam
ficompl
rorl
outsl
lahf
push
insl
push
xor
or
fisttpl
dec
mov
fdivrs
pop
cmpl
cmpb
mov
pop
cwtl
xchg
inc
test
adc
push
lds
popa
jecxz
mov
cwtl
fiadds
pusha
jp
mov
mov
mov
xor
rcll
fimull
dec
push
jo
push
mov
outsb
mov
add
pop
insl
sti
adc
adc
leave
jl
rcrl
int
addl
aas
and
pop
xor
jl
xchg
fisubrl
sub
mov
out
inc
imul
icebp
mov
stc
test
dec
in
xchg
push
and
outsl
mov
aas
adc
mov
insl
cmp
dec
jne
push
aam
cmpsl
lahf
nop
and
inc
loop
out
xlat
mov
scas
cmp
aas
mov
test
test
sti
mov
icebp
inc
push
js
arpl
cmp
shrl
sahf
mov
dec
sbb
aas
xor
stos
dec
push
lock
add
stos
jg
xchg
cmp
jnp
dec
repz
lea
call
lds
adc
inc
mov
adc
push
in
pop
in
pop
inc
das
dec
repnz
shl
outsl
in
outsb
lock
cli
xchg
test
add
shlb
stos
push
sub
clc
jnp
outsl
scas
lcall
dec
mov
addb
xor
and
hlt
sbb
pop
lods
sbb
mov
or
addl
sub
ljmp
leave
sarl
lock
in
mov
xchg
add
out
in
rolb
repnz
pop
pop
fsub
sub
xchg
inc
push
push
adc
stos
pop
xchg
std
cmp
add
lret
adc
out
ret
cmc
in
inc
xor
adc
jns
les
stos
cmp
inc
xchg
mov
dec
push
addl
lods
and
lock
inc
loop
mov
mov
add
lock
ja
cmp
rolb
aas
lret
mov
filds
rcl
lds
popa
pop
cmpb
jl,pn
shl
mov
inc
cmp
in
jmp
push
dec
dec
xchg
fldt
jbe
movsl
enter
push
stos
cmp
sub
pop
or
xor
lods
push
sub
es
insb
mov
add
and
aas
ret
aad
filds
add
or
cmp
rcrl
mov
add
and
imul
fcomps
pop
sub
notb
out
icebp
pop
mov
xchg
stos
xchg
add
mov
test
push
jnp
pop
andl
adc
shlb
loope
aaa
mov
rcrl
pause
mov
imul
pop
sahf
stos
cmp
rcrb
stc
and
mov
loopne
cli
sub
imul
mov
stos
jp
pusha
inc
in
mov
dec
test
push
cltd
je
shll
xchg
cltd
jecxz
jmp
clc
clc
scas
pop
adc
mov
or
fcompl
cwtl
jmp
push
test
int
bound
jp
adc
adc
cmpsb
arpl
sbb
inc
xlat
fmul
push
push
xchg
jne
imul
outsb
pop
adc
imul
loop
jns
sti
xchg
xchg
push
mov
adc
and
xchg
mov
push
outsl
out
and
xchg
fs
jne
ds
push
std
fiaddl
mov
mov
jae
arpl
cmp
in
push
mov
push
push
rcl
sbb
in
dec
fucomi
mov
mov
cs
shlb
inc
mov
mull
pop
add
inc
ret
jmp
sub
sbb
sub
lds
and
xchg
lahf
inc
popf
sbb
sbbb
add
jecxz
jp
inc
dec
pop
lods
insb
gs
or
dec
test
bound
lods
xor
mov
sbb
mov
insl
fdivrp
sub
mov
adc
mov
lock
cli
clc
leave
cmpsl
adc
data16
pop
dec
xorl
setl
sbbb
sbb
ds
dec
mov
test
push
nop
aaa
js
xlat
into
add
lods
out
cs
adc
loopne
fcomps
jmp
or
in
test
dec
ljmp
pop
rcr
movsl
lods
std
aam
inc
cmp
inc
outsb
jno
dec
dec
into
cs
xor
loop
fildll
iret
mov
fsts
cld
push
inc
es
add
inc
mov
xchg
out
push
push
insb
shl
pop
rclb
or
mov
sub
push
or
std
xchg
jb
cli
ret
shrl
xchg
dec
scas
sub
xchg
mov
push
dec
xor
insb
sbb
nop
add
leave
push
jo
lea
cwtl
inc
adc
divl
repnz
jno
xchg
sbb
pop
or
pushf
outsl
and
mov
xor
push
scas
arpl
xchg
pop
and
mov
sbb
ja
jns
aam
xchg
or
sub
pop
loopne
sub
cmp
mov
aas
cmpsl
mov
push
leave
sub
add
mov
fadds
arpl
fiaddl
addr16
cld
mov
pop
dec
scas
jbe
pop
pop
ficoms
lcall
inc
fwait
xchg
cwtl
movsb
mov
sarl
dec
movsl
popf
add
fsubrl
and
dec
dec
aas
sub
jns
lahf
jo
fnstenv
sbb
fidivs
mov
mov
inc
add
out
mov
andl
xchg
popa
adc
mov
cmp
aas
xchg
std
outsb
pop
mov
add
pop
add
add
mov
les
loop
push
cwtl
mov
push
xor
sub
inc
popw
repnz
jns
test
stc
xor
dec
xchg
or
stc
jne
es
pop
lahf
out
add
inc
lods
fs
cmpsb
and
divl
es
lea
sahf
jns
xor
inc
push
jle
pop
addr16
rorl
dec
dec
cmp
mov
dec
pop
inc
jl
popf
leave
jb
and
mov
test
xor
dec
and
pop
negb
jb
imul
xor
ds
insb
pop
xchg
and
enter
push
imul
jmp
mov
mov
sbb
jecxz
iret
mov
cltd
aad
int3
ss
mov
ljmp
pop
imul
add
aas
addl
repz
pusha
enter
std
pop
mov
pop
test
cmpsl
push
cmp
pop
enter
out
pop
std
outsb
iret
out
adc
mov
sbb
xor
mov
lahf
add
aas
push
xchg
jmp
push
insb
lock
mov
aam
in
or
outsb
outsb
pop
shrl
js
popf
cmpl
lock
pop
adc
or
stos
imul
xor
mov
lahf
fadds
xchg
push
sbb
dec
dec
push
cwtl
jo
and
and
pop
xlat
adc
mov
movsb
into
lcall
jae
mov
cmp
popf
repnz
stc
jae
fidivs
add
loopne
inc
push
mov
jmp
test
jmp
aad
negl
fbstp
push
fisubrs
rcll
rcrb
or
std
pop
jmp
int
test
sub
fs
scas
outsb
in
pop
pop
dec
movsb
mov
mov
push
cmpsb
cld
inc
push
jo
mov
gs
and
shl
into
dec
xor
cwtl
nop
mov
mov
cmpsl
jecxz
jmp
cmp
add
push
mov
test
and
in
pop
push
ljmp
pop
out
leave
xchg
sbb
clc
aaa
fs
sub
mov
sbbb
je
pusha
ljmp
adc
rclb
insb
pop
xchg
adc
dec
arpl
orl
inc
adc
outsl
xor
imul
cmp
and
cmp
cmp
inc
loopne
std
ss
push
mov
push
or
push
out
mov
imul
mull
lret
lret
test
stos
jne
sub
daa
jnp
rolb
mov
pushf
call
inc
mov
mov
and
inc
push
rcrb
and
cmp
loope
dec
push
out
loopne
outsl
xor
or
dec
sbbl
jae
ret
call
lret
adc
dec
clc
xchg
ljmp
out
mov
jp
pushfw
int3
xchg
mov
andl
inc
sahf
mulb
inc
mov
jno
in
adc
lcall
inc
xchg
mov
mov
push
sub
insl
aaa
mov
iret
cmp
popa
icebp
sti
push
popf
int
insb
lods
int
mov
loop
cmpsl
push
nop
jnp
dec
sub
jle
xchg
out
outsl
std
push
cmc
scas
sbb
inc
inc
push
in
cs
out
not
dec
int
neg
data16
roll
fwait
pop
adcb
mov
nop
out
sbb
rcr
cld
aad
nop
in
mov
mov
daa
das
xor
and
mov
inc
mov
pop
test
cmc
in
mov
xchg
ret
push
pop
dec
sti
jo
rorl
int3
inc
fnstcw
mov
xlat
push
xor
cmp
ja
dec
mov
mov
insb
outsb
es
fnsave
int3
mov
stc
push
jp
jbe
xadd
push
jmp
es
sbb
xor
lds
push
xchg
add
sarb
leave
movsb
subb
out
sbb
adcl
ror
pop
mov
das
mov
jb
mov
mov
dec
or
dec
dec
inc
adc
cmpl
inc
pop
jl
outsb
add
sub
lret
push
in
frstor
mov
jae
jne
mov
push
jg
inc
adc
push
adc
in
mov
add
adc
int3
addl
inc
xchg
push
pushf
add
test
mov
pop
xlat
int3
arpl
fimull
roll
int
imul
cmp
xor
dec
cmp
fcmovb
nop
les
and
inc
add
sub
or
dec
movsb
jmp
dec
enter
mov
iret
ss
das
xorb
dec
mov
movsb
jg
mov
push
enter
sub
sbb
rcrl
or
loop
mov
push
into
xor
es
repnz
mov
sbb
call
leave
cmp
cmp
cli
jge
mov
pop
add
int3
insl
add
add
das
fmull
mov
xchg
sub
rcrb
xlat
sti
or
enter
movsl
imul
xchg
push
pushf
cwtl
mov
jo
pop
mov
sbb
sub
mov
stos
inc
arpl
iret
sbb
or
test
mov
push
ret
cli
pop
xchg
jae
push
ret
or
jl
sub
or
ljmp
dec
mov
insb
ror
js
dec
movsb
in
inc
leave
adc
add
push
rolb
stos
sti
jg
xchg
loope
int
cmp
shll
dec
add
mov
in
loope
pop
inc
cs
mov
movsb
arpl
adc
sbb
add
xchg
das
lock
sahf
mov
ret
xchg
xchg
jno
incl
lret
or
sbb
sub
js
pop
dec
addl
cwtl
fcoms
mov
stc
in
lds
or
repnz
dec
outsb
enter
inc
test
lods
jno
add
push
pop
call
shrb
cwtl
add
jg
inc
inc
or
sub
loop
cmpsb
mov
mov
jmp
and
mov
jno
movsl
test
xor
inc
sub
in
dec
fildll
xlat
mov
mov
xchg
outsl
testl
inc
or
test
jecxz
loope
int
imul
jmp
mov
jns
cltd
cmp
rep
pop
xchg
cli
in
je
mov
cmc
dec
mov
mov
pop
sbb
ljmp
test
sbb
popa
mov
pop
cmp
sub
jmp
pop
iret
mov
shll
aad
push
sti
cmp
add
pop
sub
out
jno
push
mov
test
decl
lods
pop
adc
mov
cltd
mov
es
xchg
cmp
fwait
push
mov
xchg
test
push
cld
jbe
faddl
loopne
sbb
lret
mov
sub
jecxz
mov
inc
std
mov
add
mov
mov
das
cwtl
into
pop
dec
dec
sbb
fwait
adc
ret
pop
inc
call
or
clc
aad
ficoml
and
ret
adc
mov
push
pusha
in
lods
insb
add
icebp
lds
push
adc
xchg
out
sbb
sbb
mov
into
ds
sub
sbb
rclb
test
xchg
fcmove
cmp
daa
or
adc
in
and
push
jle
outsl
fmull
xchg
cld
rclb
push
jbe
or
mov
add
and
jb
rcl
mov
pushf
and
and
stc
movsb
lock
bound
mov
jecxz
mov
dec
or
sahf
inc
ds
aas
mov
xor
sti
fstpt
pushw
dec
test
jo
mov
fisttps
es
xor
ljmp
fildl
cwtl
mov
imul
xorl
addr16
mov
and
mov
xchg
mov
in
out
add
je
loop
lods
lret
and
cli
enter
mov
xor
mov
push
and
ret
mov
or
vunpckhps
lods
xchg
xchg
adc
enter
adc
cs
hlt
pop
add
stos
mov
add
out
das
inc
bound
mov
push
mov
jecxz
xchg
xchg
adc
clc
cld
xor
push
ds
jle
decl
mov
push
pop
outsl
pushf
sub
gs
xor
fidivrs
rorb
mov
outsl
outsb
les
sbb
jo
xchg
clc
arpl
cmp
xchg
loopne
pusha
or
ss
std
movsl
sub
cwtl
shrb
in
sub
or
xchg
sbb
repz
mov
mov
repz
xor
or
cmpsl
inc
mov
mov
in
test
nop
xchg
addr16
cmp
mov
lcall
cli
imul
cmp
lcall
mov
push
insl
and
cli
lret
das
or
jae
adc
iret
push
push
xlat
cmp
sub
cli
aam
sub
cmpsl
push
mov
es
inc
xchg
mov
sbb
jb
cs
int3
and
stc
inc
xchg
jae
aad
nop
jnp
in
mov
xchg
cmp
pop
repnz
cmp
cld
push
aaa
mov
bound
jg
mov
pop
or
movsl
flds
rcrb
fstps
jb
sbb
pop
cli
mov
push
push
lods
jp
inc
jmp
lret
mov
dec
xchg
pop
nop
jp
adc
sbb
push
mov
das
mov
sbb
jb
cmp
adc
add
cmc
roll
movsl
sub
loopne
mov
add
mov
leave
or
xchg
pop
pop
insb
xor
icebp
push
cmp
pop
divb
push
inc
dec
ds
fcmovb
loope
xchg
xor
mov
xchg
xor
psubsb
stos
and
and
pop
add
dec
cli
lods
imul
fcmovnbe
cmp
sub
and
movsl
ljmp
bound
push
push
lret
mov
xchg
push
cmpsb
push
stos
fdivrl
mov
mov
in
cmc
movl
fimull
xchg
xor
mov
std
scas
pop
mov
and
jmp
dec
shlb
jl
scas
and
cli
popf
and
or
scas
dec
mov
add
mov
mov
jecxz
movsb
jp
scas
sbb
dec
pop
mov
and
adc
into
cmp
mov
movsl
lea
push
push
inc
pop
int3
frstor
nop
sub
mov
nop
rcrb
adc
mov
add
jnp
add
adc
pop
inc
cmc
push
xor
add
out
jmp
jns
push
popf
inc
mov
push
xchg
jmp
mov
sbb
mov
add
sti
cld
mov
loopne
test
jbe
jne
xlat
xchg
fidivrl
scas
stos
ljmp
adc
jbe
xchg
fwait
sub
aam
sbb
daa
pusha
adc
fwait
inc
int3
mov
test
mov
cs
inc
sub
mov
cmp
mov
mov
xor
lds
inc
mov
jmp
dec
push
orl
sbb
je
call
ret
neg
pop
or
repnz
dec
cmpsl
jbe
cld
adc
aaa
xlat
std
dec
jo
push
mov
add
andl
int3
arpl
cmp
addr16
movsl
lock
mov
shl
clc
adc
lret
inc
bound
mov
jp
or
mov
and
pusha
add
pop
cli
mov
addr16
mov
test
pop
cs
cmp
mov
mov
icebp
cmp
xlat
and
add
pop
lods
pop
iret
mov
fistpll
xor
pop
lock
inc
frstor
iret
jge
dec
hlt
or
mov
push
sar
mov
testb
inc
imul
rcr
adc
add
sbb
add
int
jmp
adcb
ret
imull
jmp
orb
fisttpl
test
jg
push
push
push
cmpsl
pop
lret
enter
inc
mov
mov
out
mov
js
mov
aas
pushf
push
aaa
or
test
dec
imul
mov
fistpll
pop
or
sbb
lock
sbb
sarl
fists
enter
popa
adc
ret
add
pop
jmp
dec
mov
xor
xorl
cltd
jae
shrl
pop
and
bound
jl
pop
xchg
jae
leave
add
jns
outsb
pop
movsl
dec
hlt
outsl
mov
xchg
adc
mov
movsl
out
adc
popf
mov
push
movb
xor
shl
xor
stos
icebp
jmp
inc
scas
test
sarb
mov
inc
add
jbe
jge
sbb
fnstenv
sbb
or
mov
pop
mov
int
outsl
sub
adc
lock
jb
xchg
add
mov
ja
mov
mov
jmp
sub
xchg
jae
stc
ret
and
scas
inc
xchg
mov
out
call
sarb
mov
add
xchg
adc
mov
jo
xchg
dec
nop
movsl
cmp
jns
xchg
dec
ret
scas
pop
and
xchg
cmp
loop
push
mov
jg
mov
push
mov
pop
pop
push
sub
and
xchg
or
mov
repnz
and
aad
sbb
setl
and
mov
mov
jecxz
pop
int3
gs
pop
adc
or
mov
sbb
jne
pop
lahf
jge
das
push
test
xor
sti
mov
dec
movsl
xchg
lahf
out
and
lahf
js
sbb
sti
lret
clc
pop
je
rcl
out
mov
testb
mov
and
mov
lret
cmpsb
mov
fdivl
add
push
iret
pop
sbb
push
mov
ljmp
int3
enter
jp
scas
bound
rcrl
dec
adc
lahf
aam
call
cld
fadds
push
das
cmpsl
fnsave
cmp
insl
loope
sbbb
push
mov
sbb
js
adc
ss
mov
fbstp
cs
inc
inc
xor
dec
mov
aam
jbe
popa
jg
lcall
push
xchg
push
dec
cld
add
fisttps
idivb
sub
clc
rcr
ret
sbb
lea
test
testl
stos
loopne
dec
jmp
sti
jns
incl
jle
leave
mov
pushf
pop
xor
and
add
push
mov
mov
addb
mov
mov
xchg
cmpsb
dec
push
cmp
push
and
test
js
dec
roll
mov
loopne
inc
push
int3
mov
repnz
cmp
out
xor
in
or
dec
std
jmp
xor
in
jnp
mov
aaa
pushf
mov
mov
add
xchg
insl
mov
ror
loop
mov
pop
jge
int
pop
or
push
mov
leave
adc
addr16
leave
shrl
shlb
jno
jb
cmpsb
mov
test
ds
call
vmovss
adc
inc
test
test
out
sub
lds
push
mov
jge
mov
or
dec
push
rcr
inc
call
push
shll
sub
mov
mov
pop
cmpsb
mov
sub
cmp
popf
inc
hlt
push
and
cld
insb
xor
adc
lcall
subl
test
dec
dec
stos
pop
addr16
xchg
stos
jmp
xchg
xor
sti
sti
lret
add
cmc
mull
xor
mov
cmc
loop
lods
sbb
int
es
mov
sbb
repz
std
add
or
jecxz
sahf
and
daa
sahf
ja
lahf
cltd
out
sub
push
ljmp
inc
inc
sbb
lods
fmul
add
outsb
aad
aas
sti
insl
ret
mov
movsl
test
xor
ret
xlat
xor
ss
leave
mov
dec
dec
orl
jl
dec
push
push
and
cmp
cmp
jp
cwtl
and
ret
dec
add
xor
je
mov
mov
insb
out
pop
pop
mov
xchg
mov
ret
test
leave
and
inc
inc
or
mov
ss
ljmp
movsb
ficompl
xor
pop
mov
adc
mov
loope
in
push
sbb
jno
xchg
xchg
add
jb
mov
dec
xor
push
popa
mov
add
pop
mov
in
insb
xchg
movsl
mov
push
ret
adc
jb
push
or
inc
mov
pop
fdivl
insl
clc
dec
ror
cwtl
shl
test
mov
jne
cmpsl
jnp
push
loopne
out
and
mov
loop
pop
jnp
fimull
jl
xchg
lds
ret
jbe
cld
test
lods
and
add
and
test
lahf
xor
fstpl
push
pop
rcr
jb
imul
cwtl
xchg
ret
adc
fstl
scas
ret
ret
mov
arpl
js
jg
or
pop
mov
movsb
sub
dec
mov
pop
stos
insb
dec
bound
lock
mov
xchg
mov
push
in
or
sbb
mov
push
cmpsb
fisttps
movsl
sbb
dec
xchg
push
ror
xor
movsb
and
mov
sub
out
mov
lahf
cmp
fnsave
mov
jp
or
sbb
xchg
sub
and
test
mov
and
sbb
pushf
dec
sub
in
or
test
sub
adc
sub
scas
sub
cmp
daa
cmc
jg
cmp
nop
stos
test
movsl
iret
cmpsl
nop
loopne
std
clc
add
insb
sub
cmc
cmpsb
insl
imul
dec
sti
inc
mov
dec
lret
dec
and
clc
repz
add
lods
into
jge
pusha
imul
or
push
mov
aas
adc
out
fs
dec
or
fsts
pop
jmp
js
loope
push
pop
dec
xlat
mov
mov
incb
xor
jae
mov
inc
jne
add
nop
xchg
lds
push
popf
rorl
adc
add
faddl
add
cmpsl
ja
mov
call
out
push
pop
mov
sarb
inc
jecxz
jp
jmp
sahf
mov
mov
mov
adc
mov
mov
sbb
ja
add
sub
fld
or
scas
roll
xchg
mov
enter
jmp
mov
ljmp
pop
stos
jl
and
cmp
fcomps
into
push
mov
je
imulb
fs
dec
jle
ret
push
fisubl
popf
js
fsubl
push
iret
adc
fbld
add
push
std
pusha
addb
cmpb
das
pop
negl
clc
push
popf
mov
movsl
outsb
mov
xor
jmp
pop
sbb
jae
inc
mov
arpl
and
xchg
jecxz
test
mov
xchg
clc
xor
mov
jns
jecxz
add
insb
dec
adc
insb
xor
movsl
lcall
sub
mov
fistpl
out
outsb
mov
push
cs
ds
negb
jl
push
addr16
fstps
movb
gs
scas
push
pop
adc
fmul
jnp
jbe
pusha
push
idivb
mov
and
xchg
add
imul
mov
out
sub
and
cmp
call
outsb
movsb
pushf
jp
mov
xor
inc
and
sub
call
sbb
bswap
insb
hlt
mulb
mov
inc
and
mov
pop
into
rcrb
jae
jecxz
xchg
popf
pop
loop
pop
movb
call
inc
lods
loope
xlat
push
leave
inc
ljmp
mov
jmp
mov
das
push
cmovb
cmp
pop
or
imul
cmp
mov
fs
fwait
sbb
mov
inc
test
leave
or
xor
loop
jae
arpl
xor
xchg
mov
mov
pop
sarl
in
sbb
insl
addr16
mov
sub
or
in
stc
push
xchg
mov
pop
scas
dec
sti
mov
decb
shlb
daa
and
out
jo
cmp
sub
xchg
cmc
mov
icebp
jp
jecxz
mov
or
push
inc
das
sbb
fildll
push
jmp
das
fsts
testb
adc
push
inc
and
xor
adc
dec
mov
and
gs
dec
clc
jb
stos
clc
xor
mov
xchg
mov
lea
add
jbe
push
lods
mov
mov
rclb
cmp
jge
mov
fimuls
out
in
cmp
jbe
pop
xor
rcrb
or
sti
loop
and
mov
test
cmp
cmp
jg
inc
ds
jecxz
xor
pop
jmp
aas
cmp
aaa
cmpsl
enter
into
divl
and
dec
push
or
and
add
inc
xor
leave
add
ss
mov
adc
lahf
xchg
ror
sahf
mov
xor
mov
jg
mov
stos
push
js
xchg
add
pusha
and
dec
sub
dec
outsb
mov
xchg
add
xchg
and
cli
cld
jne
pop
push
loope
sbb
sub
arpl
or
pop
sbb
pop
push
xorl
cmp
adc
leave
int3
xchg
dec
add
aam
inc
std
clc
mov
pop
jbe
add
xchg
mov
jno
aas
jmp
or
movsl
je
sub
popa
fidivl
dec
pop
jbe
dec
gs
push
push
push
sbb
ja
pop
sbb
xchg
adc
sti
loop
jne
iret
adc
cmpl
and
out
push
push
insb
ret
fdivp
shlb
jae
jae
mov
jb
jae
iret
xor
mov
cmp
mov
dec
mov
sbb
rep
loop
or
xchg
jecxz
test
movsl
test
sarb
cmp
lahf
and
dec
loop
ret
and
fs
dec
pop
cs
mov
pop
or
lods
pop
lds
inc
adc
int
cs
shlb
mov
shll
xchg
les
dec
stos
aad
xchg
out
push
or
movlps
sub
test
pop
sti
xchg
movsl
mov
xlat
push
pop
clc
or
sbb
or
inc
arpl
pop
and
mov
and
sub
test
out
setnp
jnp
ret
in
daa
rclb
inc
inc
xchg
cs
imul
cld
iret
ret
mov
push
or
lret
mov
pop
aas
pop
imul
fwait
xchg
jns
loop
adcb
imul
mov
cmp
lock
xchg
lock
test
incb
jb
jmp
insb
mov
sub
push
shr
cld
adc
ljmp
hlt
mov
push
out
lahf
or
and
lds
and
test
insl
out
fwait
xchg
or
add
mov
fs
jmp
rorb
mov
fidivrl
mov
fnstsw
arpl
pop
stc
adc
sub
pop
cs
mov
js
mov
mov
jo
aam
inc
loope
iret
pop
push
insb
sbb
push
mov
cltd
lcall
imul
mov
xor
push
jae
aaa
xchg
popf
repz
xor
aas
pop
in
sub
je
jb
aam
int
jp
mov
mov
pop
mov
rorb
pop
mov
je
and
cld
xchg
mov
sub
inc
fcoms
int
faddl
negl
rclb
leave
fsubrl
pop
push
sub
pop
mov
push
mov
push
push
jp
add
fcmove
ss
xor
lods
xchg
lret
and
sub
fildl
in
or
insl
fwait
pop
ds
outsb
add
fcoms
pop
sahf
adc
loopne
hlt
jbe
xor
push
ljmp
cmp
ljmp
aad
ja
mov
pop
lds
and
fstl
clc
movsl
push
test
sub
dec
mov
and
xchg
inc
aad
adc
call
movsl
es
call
mov
pop
das
xchg
movsl
push
mov
divb
mov
mov
flds
pop
dec
dec
xchg
fidivrl
sub
loopne
in
enter
mov
push
add
push
adc
mov
pop
jb
imul
cmc
test
inc
stos
lcall
lods
mov
adc
push
add
adc
scas
clc
in
gs
ss
add
es
cld
ljmp
or
jp
push
scas
stos
push
mov
int
add
out
pop
rcll
test
xchg
dec
jnp
test
insl
cltd
xchg
cmc
pusha
mov
push
in
mov
lods
jnp
scas
xchg
jle
add
test
mov
jb
dec
add
icebp
lcall
mov
sbb
jo
sub
sub
in
sub
into
mov
jbe
adc
push
scas
pop
aam
cmpb
add
in
cmpsl
enter
pop
fstl
ljmp
cmpsl
loopne
subl
add
adc
lods
mov
rcll
out
es
inc
mov
cmp
das
es
je
dec
sbbl
push
ret
insl
or
aaa
fisttps
sti
loopne
bound
and
jecxz
sbb
sbb
adc
and
popf
push
sub
fcmovu
pop
sbb
mov
pop
pushf
jecxz
add
inc
shll
jae
jl
xor
out
adc
fiadds
out
mov
or
out
or
jo
jo
iret
insb
test
pop
pusha
sti
jg
or
mov
cmpl
adc
xchg
sbb
xor
inc
sub
lahf
cmpsl
sbb
int3
dec
stc
sub
adc
popf
das
fs
cmp
popa
scas
mov
addl
fcmovb
mov
or
pop
mov
ja
loop
push
aas
mov
icebp
pusha
nop
xor
pop
lock
and
mov
xor
pop
ror
xchg
shlb
cmp
mov
adc
sahf
xchg
in
test
and
cmp
mov
dec
xchg
xchg
sub
call
cltd
or
jle
dec
push
mov
xchg
inc
test
xor
xchg
je
loop
push
pop
lock
sbb
stos
nop
lcall
cwtl
dec
test
sub
fsubp
mov
gs
imul
test
sbb
sbb
imulb
adc
into
push
bound
ja
lcall
mov
or
mov
ljmp
outsl
clc
mov
mov
test
mov
arpl
pop
or
int
mov
mov
mov
fmull
test
test
loop
cmpsl
or
mov
jno
cmp
adc
mov
ja
int3
out
gs
jmp
pushf
mov
cmp
push
xchg
jo
call
call
stos
fistps
jge
cltd
adc
nop
mov
lds
jo
repz
popa
or
xlat
imull
xchg
pop
leave
cmp
pushf
mov
sub
mov
cwtl
fcoms
mov
popf
sahf
jl
mov
mov
mov
ljmp
or
dec
xchg
js
insb
cmpb
mov
loopne
lahf
cli
or
call
negb
hlt
stos
add
aam
mov
test
pop
or
jne
and
dec
xchg
and
mov
shlb
sbb
push
sarb
clc
scas
inc
cmp
and
das
cmc
fld
fisttpll
out
mov
gs
xorl
rcrl
js
fcoms
incl
adc
jae
mov
dec
lods
jmp
cli
ljmp
popf
and
sbb
imul
jbe
hlt
xor
into
das
mov
jmp
sub
jp
in
pop
add
mov
test
add
or
fcoml
mov
out
mov
pop
rolb
fstpt
stos
cs
test
mov
lods
pop
ljmp
lahf
and
mov
cmpsb
lods
fnstsw
sub
sbb
cmp
ret
sub
in
cmp
xchg
stos
jb
sbb
mov
mov
pop
stos
mov
test
out
mov
mov
mov
shl
lahf
mov
sbb
mov
xor
pop
pop
loopne
cs
call
cli
scas
rcll
xchg
shl
aad
mov
arpl
dec
pop
mov
les
adc
cmp
xchg
add
rorb
iret
hlt
fcomp
mov
mov
push
mov
jae
cmp
push
cmp
sub
xchg
rorl
or
test
movsb
rol
pop
add
imul
std
mov
mov
fists
mov
jno
pop
or
or
orl
cltd
mov
xor
movsl
mov
pusha
jge
imul
jg
ret
push
jecxz
movsl
mov
outsl
xor
mov
fstpl
pushf
dec
or
or
cld
xor
xchg
daa
push
and
sbb
xchg
dec
inc
cmp
shrl
cmp
pop
sub
mov
mov
inc
in
shrb
lods
adc
push
jg
bound
mov
jmp
add
pop
lea
int
pop
sub
push
testl
xor
ljmp
popa
adc
inc
ret
mov
or
aad
cmpsl
push
cld
lock
pop
mov
in
cmp
cmp
xchg
loopne
gs
pop
mov
in
adc
pop
jp
sub
adc
sti
cs
jle
ja
mov
xchg
adc
pop
or
leave
add
jo
xchg
lea
movsl
xor
out
pop
fsubrp
jb
pop
fnstsw
shl
movsb
push
jecxz
ss
fsts
mov
push
inc
mov
push
dec
adc
aaa
sbb
dec
loopne
and
aam
les
and
outsl
mov
outsl
enter
jg
and
lods
fidivrl
push
scas
dec
mov
push
sbb
and
sti
nop
rcrb
aam
adc
popf
inc
xorl
jae
movsb
push
cld
dec
les
mov
xor
ret
jnp
addr16
jg,pn
jmp
pop
inc
mov
xchg
mov
aaa
xor
into
inc
sbb
lcall
push
outsb
inc
pop
test
sub
adc
xchg
int
mulb
mov
cmp
cmpsl
dec
pop
adc
loope
mov
in
shr
adc
push
dec
inc
xor
xchg
cltd
cltd
cmp
gs
loopne
mov
data16
je
sub
inc
jmp
enter
loopne
mov
imul
pop
adc
push
popa
fs
xchg
icebp
adc
and
add
jns
ret
dec
xchg
sar
pop
mov
inc
les
add
stos
loopne
test
inc
xor
out
add
xchg
scas
add
adc
loop
cmp
ret
cmc
int3
xor
outsb
notb
jp
movsb
movsl
out
cmp
xlat
sub
stos
sbb
inc
loopne
sub
imul
je
insb
test
mov
loopne
test
dec
call
or
dec
cmpl
sub
jnp
bound
sub
scas
push
or
test
mov
int
xchg
or
mov
sti
fnstsw
stos
mov
mov
dec
std
insl
cwtl
dec
ljmp
push
aaa
pop
pop
out
inc
test
int
pushf
int3
inc
mov
outsb
fsubr
rorb
push
pop
push
lods
out
pop
rorb
xchg
lea
adc
fistl
test
stos
mov
mov
imul
mov
es
mov
pop
adc
inc
popf
or
insl
movsl
jmp
popf
popa
lods
rcrl
outsl
pop
xor
or
dec
jnp
imull
lods
pop
repz
xor
lods
fsubrs
call
cmpsl
mov
lods
dec
stc
dec
inc
outsb
mov
cli
cmc
mov
xchg
pusha
test
xchg
test
incl
cmp
leave
mov
leave
pop
ja
and
mov
std
jp
xlat
inc
xchg
xchg
xchg
rcr
push
cmp
popa
dec
add
lcall
xor
cmp
adc
or
cs
test
call
adc
ret
inc
mov
negb
aaa
mov
mov
subb
sub
orl
shl
mov
xchg
enter
pop
ret
imul
addr16
inc
outsb
cmp
or
pop
pop
adc
sarb
or
addr16
sub
dec
lahf
and
dec
push
push
test
mov
out
cld
andl
and
loopne
subl
and
jge
outsb
add
and
loope
js
fcompl
and
icebp
movsl
mov
and
inc
inc
out
and
cmp
arpl
sahf
adc
mov
and
adc
dec
pop
dec
adcl
insl
enter
or
daa
adc
xchg
cmp
mov
mov
xchg
xchg
lock
pop
lods
inc
pop
scas
rcll
mov
out
or
insl
jo
mov
or
aad
mov
mov
xchg
mov
outsb
mov
shlb
fcomp
dec
inc
pop
sub
mov
mov
lret
push
inc
inc
outsb
imul
stc
loope
cmp
xor
jne
cmp
push
aam
mov
es
fcoml
xor
rcll
mov
repnz
inc
rcrb
dec
sahf
dec
roll
popf
adc
in
mov
les
mov
dec
test
sahf
add
repnz
iret
cmp
les
xlat
ret
mov
sbb
mov
push
mov
cmp
jo
adc
lds
jmp
fwait
or
mov
add
xbegin
or
ja
dec
pop
addr16
loope
jnp
push
int3
adc
and
adc
dec
sbb
sbb
movsl
lea
jge
shr
pop
mov
es
mov
push
outsl
lods
lret
ror
rcll
pop
adc
ds
mov
shlb
dec
mulb
xor
inc
in
dec
inc
cmp
notb
and
cs
cmp
mov
cwtl
xorl
xor
xor
ja
dec
into
adc
and
jo
lods
mov
lds
jle
add
stos
insb
fwait
clc
sub
inc
pop
sbb
cmp
or
roll
stos
ljmp
xor
std
push
pop
jbe
push
jne
test
outsl
add
cs
push
into
dec
cmp
inc
in
pop
sbb
inc
leave
orb
xor
aaa
rorb
movlps
adc
mov
inc
inc
add
mov
and
jle
or
jl
data16
jp
test
pop
jmp
addr16
inc
xchg
data16
sub
mov
push
mov
jb
cmp
cmp
aad
iret
sub
adc
sbb
mov
fldcw
jne
xchg
inc
mov
dec
add
in
adc
aam
cli
sbb
xorb
sbb
pop
mov
xor
test
mov
sbb
jbe
inc
popf
sub
mov
xchg
jg
into
push
sbb
lods
pop
rolb
lds
js
sbb
mov
stc
jp
xchg
mov
les
outsb
push
adc
mov
push
leave
dec
xchg
fadd
mov
lret
or
pop
jp
mov
sub
or
cltd
fs
inc
call
jo
jge
aam
push
sbbb
mov
mov
out
imul
cmp
popf
or
pop
rorl
rcrb
sub
les
jbe
cmp
in
leave
data16
dec
popf
push
fcomp
fwait
cmp
test
pop
stos
sbb
xchg
sub
rorb
dec
lock
jle
insl
fcom
mov
ds
mov
mov
xchg
rorb
nop
testl
push
mov
test
cld
mov
or
int
jbe
inc
push
push
mov
daa
pusha
or
fxch
sub
gs
stos
cltd
cmc
lock
or
and
push
arpl
sub
push
jb
push
dec
mov
pop
imul
pop
mov
sbb
jnp
scas
inc
movsl
mov
shl
pop
fs
push
addl
pop
dec
add
xchg
cmp
fistl
mov
test
adc
jne
arpl
mov
fdivr
cmpsl
test
push
pop
movsb
xchg
repnz
sbb
mov
outsb
aas
jg
les
add
jb
fstl
jle
icebp
scas
mov
jo
ja
sbb
adc
dec
add
jmp
adc
popf
in
adc
lods
int
aas
test
popa
test
neg
xchg
jp
mov
inc
push
push
inc
icebp
mov
mov
fcomps
or
lcall
xor
fs
iret
push
jecxz
push
addr16
mov
xchg
xchg
inc
sbb
mov
aaa
xchg
sbb
xchg
pop
xor
push
jbe
in
inc
xchg
in
movsl
rcll
adc
lcall
jne
pop
js
std
repnz
mov
inc
test
adc
and
push
lret
idiv
pop
sahf
ljmp
icebp
fiaddl
aaa
insl
stos
fisubrs
fwait
inc
cmpsl
dec
add
aad
aaa
lods
push
loope
fimull
aam
add
or
cwtl
jle
cmpsb
pop
outsl
adc
ljmp
fldl
dec
shll
jecxz
ret
pop
dec
mov
movsb
imul
xor
mov
mov
mov
jmp
movsb
xchg
mov
xchg
test
cmc
push
jno
jns
icebp
ja
xchg
mov
xchg
jmp
lods
adc
cmp
icebp
mov
jle
lods
inc
int
add
nop
mov
and
lods
stos
mov
mov
mov
adc
lcall
jne
out
in
hlt
js
shlb
inc
dec
int
in
mov
in
enter
cmp
dec
pusha
leave
add
xor
je
sub
aad
subb
xor
adc
mov
jbe
mov
push
adc
in
daa
out
mov
jnp
adc
cmp
pop
lcall
adc
imul
add
int3
cmp
or
add
cmp
loop
inc
jle
cmp
adc
fdivrs
adc
jbe,pt
xor
nop
daa
cmp
and
sbb
add
popf
cmp
mov
cmpsb
pop
mov
loop
inc
iret
comiss
into
ss
daa
inc
cltd
in
pop
xchg
jp
lds
ret
mov
sbb
pop
cmp
in
je
and
dec
mov
clc
imul
pop
adc
stc
xor
shrl
cmp
and
pop
and
test
js
mov
inc
sarb
inc
jg
sbb
mov
mov
cmp
xchg
sbb
call
pop
les
xchg
push
push
ljmp
push
sahf
dec
aad
dec
or
sbb
data16
ja
push
cmpsl
fcoms
jmp
xor
repnz
out
inc
outsb
cmp
mov
fisubrl
mov
jb
push
sub
lahf
sub
mov
or
cli
push
push
mov
xor
out
lods
dec
mov
push
jmp
ror
pop
icebp
mov
add
add
xchg
outsb
adc
dec
push
pushf
xchg
in
mov
xor
js
pop
addr16
outsl
sbb
stc
and
xlat
es
test
cmp
add
popa
ficomps
xor
rorl
jg
and
dec
and
mov
lfs
enter
jns
ljmp
sub
icebp
push
loopne
out
mov
and
ljmp
jo
add
ss
pop
jmp
fsubrl
cs
adc
ret
inc
int
lcall
sub
push
stos
scas
lret
or
mov
dec
jl
jbe
xchg
sbb
clc
inc
f2xm1
dec
sub
in
stos
icebp
xor
fcmovbe
xor
and
add
dec
xor
icebp
push
imul
loope
fs
mov
cmpsb
mov
xchg
jecxz
mov
into
cmpsl
pop
sub
imul
cmp
jmp
cmc
and
jle
jmp
push
pop
cmp
in
cmovno
xchg
inc
orl
xor
add
imul
and
cmp
mov
call
lret
adc
mov
add
mov
mov
cmp
test
jl
iret
fs
pop
test
cld
leave
jo
in
stos
sbb
mov
xchg
loope
add
stc
loopne
call
mov
in
mov
jp
call
and
out
mov
or
jo
inc
lahf
out
lods
ret
jbe
jecxz
lock
jnp
divl
enter
inc
sub
add
jo
push
sbb
aaa
rorl
cli
xor
jle
out
sub
loop
lret
cli
sbb
dec
add
lret
and
push
adcb
ds
push
les
jle
mov
aas
jne
pop
jmp
mov
or
cmovnp
clc
shrl
dec
addr16
mov
mov
jecxz
and
cli
daa
mov
repz
out
pop
filds
cltd
test
aas
sub
out
rcrl
cmp
push
inc
popf
shl
jnp
fst
xchg
lods
pop
adc
sti
cltd
pop
xor
and
clc
leave
repz
mov
xchg
inc
fbstp
push
dec
out
out
push
push
or
xlat
aaa
dec
jmp
pop
xchg
and
ss
sub
cmp
dec
pop
cwtl
or
mov
rorb
xchg
adc
and
and
jns
in
dec
xor
pop
dec
xor
out
pushf
inc
mov
cmp
out
faddl
fbld
push
sbb
dec
inc
sbb
cmp
and
shl
out
shr
imul
jb
aas
push
aam
xchg
xchg
inc
cmpsl
aas
dec
subb
cmp
pop
mov
adc
repz
imul
xchg
mov
and
repnz
adc
call
in
cmp
push
mov
push
push
fidivrl
mov
push
cmp
cmp
sub
push
jne
aaa
xchg
loopne
cmp
mov
repz
lods
xlat
push
jo
and
inc
sub
xchg
mov
imul
subl
xor
pop
cld
pop
push
out
jl
inc
into
jbe
mov
jbe
jne
push
clc
add
hlt
mov
mov
pop
loopne
pushf
push
mov
adc
adc
ja
ljmp
jmp
insb
hlt
and
fcomps
movsb
filds
out
hlt
dec
out
in
leave
clc
push
push
dec
imul
xor
push
fdivrs
fdivs
inc
push
sub
mov
dec
mov
into
xor
cmpsl
xchg
jnp
adc
or
mov
int
mov
daa
inc
movsl
push
popf
add
scas
ret
inc
or
mov
xor
fidivrs
sahf
aas
cmp
cmp
mul
xchg
adcb
cmp
neg
outsl
and
cmpsb
pop
sbb
outsb
mov
xchg
pop
je
mov
adc
mov
dec
xor
sub
cwtl
mov
loop
and
dec
mov
sub
mov
xchg
dec
or
mov
mov
std
push
pop
jg
pop
in
mov
rorl
add
push
pop
pop
dec
jecxz
sarb
fcmovnb
pop
repnz
or
xchg
ret
sbb
pop
bnd
jb
pop
jecxz
repz
jae
in
sub
adc
bound
add
dec
mov
stc
or
sar
sub
mov
or
pop
testb
sub
addl
icebp
sub
push
xlat
subl
ds
xchg
xor
push
in
xor
jne
sbb
dec
insl
data16
sbb
mov
lcall
shlb
cmp
push
xchg
cmp
or
jbe
or
fmul
dec
pop
cs
lock
js
jae
lds
or
add
add
fisubrs
ds
inc
fwait
aam
mov
fsubrs
jns
push
lret
cmp
pop
scas
pop
pop
jl
icebp
jl
xchg
jns
mov
pop
and
pop
pop
hlt
sarb
sbb
mov
clc
aad
adc
andb
cld
orb
sbb
ljmp
fwait
cmpsb
pusha
mov
imulb
mov
and
mov
mov
and
into
cmpb
sbb
cmp
in
fisttpl
inc
jmp
popa
pop
repnz
aam
inc
sub
mull
xchg
mov
imul
xchg
mov
mov
dec
enter
xor
sub
adc
ficoms
fmull
xchg
dec
sti
out
iret
xchg
stos
aam
push
or
or
in
jl
xchg
data16
pop
mov
dec
shlb
jb
xchg
call
insl
ror
iret
mov
mov
sbb
cmp
inc
mov
lock
mov
xchg
mov
mov
lods
pop
jp
cmp
dec
pop
lret
mov
ficoms
jbe
or
repz
cltd
mov
ffree
lahf
mov
jle
popa
or
or
frstor
jecxz
jge
shl
bound
inc
lcall
jo
lds
sub
sub
dec
jb
hlt
pop
push
xchg
je
mov
xchg
in
fmull
jnp
mov
sub
and
icebp
mov
push
sbb
rclb
xchg
push
test
mov
mov
aam
fwait
mov
out
ret
out
mov
fwait
jb
imul
mov
add
aaa
mov
fidivl
add
ret
ret
clc
out
cmp
loope
push
dec
leave
inc
mov
jle
popf
ds
mov
fisttpl
jae
adc
jne
jne
adcl
pop
sbb
lea
or
movsb
pop
push
xor
fldl
movsl
test
and
fsincos
lea
cmc
push
mov
js
fistps
roll
and
rorb
movsl
pop
std
inc
mov
mov
push
mov
pop
push
xchg
pushf
outsb
stos
cmpsl
mov
ss
mov
mov
fwait
xchg
bound
adc
pop
inc
lcall
shl
dec
imul
leave
leave
mov
lret
add
cmp
jp
mov
xor
in
adc
inc
repnz
jnp
cmpsb
insl
bound
jns
sbb
ret
scas
rcrl
or
xchg
adc
pop
or
nop
sbb
jne
call
mov
insl
stos
in
aam
or
data16
inc
and
dec
stos
add
adc
push
stc
cmc
shrl
jne
popf
cmp
outsl
pop
lcall
lods
dec
ret
cmp
cltd
xor
nop
add
push
outsb
and
lea
sbb
shl
leave
ss
inc
pop
arpl
test
inc
lea
and
push
ds
jae
imul
shlb
outsb
add
imul
std
add
outsl
sbb
sub
nop
pop
nop
add
mov
mov
fistl
mov
sub
popf
mov
push
jg
xchg
jge
xor
xchg
ficompl
idivl
cmp
cmpl
sbbb
inc
and
ja
adc
das
mov
inc
push
clc
loopne
add
pop
ret
or
mov
jge
jg
lret
pop
or
int
ja
dec
adc
mov
out
pop
add
dec
dec
rcrl
sbb
ret
jbe
mov
mov
mov
or
pop
test
and
add
add
mov
sbb
pushf
mov
cs
or
addr16
adc
lds
popa
xor
inc
int3
sbb
adc
pop
nop
leave
loop
cltd
fisttpll
jp
mov
fcoml
xchg
fistpl
ds
mov
xor
je
negl
pop
inc
pop
ror
or
loopne
jg
movsb
popf
in
cmp
xchg
mov
gs
pushl
inc
sbb
mov
pushf
adc
ss
pop
mov
inc
lret
dec
xchg
fldt
or
and
out
mov
push
jg
mov
jp
mov
fiaddl
push
mov
pusha
mov
in
add
sti
loope
inc
jg
add
pop
fistps
movsb
mov
adc
push
in
int
in
jnp
repnz
xor
imulb
popf
pcmpeqd
mov
repz
jbe
xlat
sub
lods
and
adcb
jp
mov
or
mov
add
xchg
inc
mov
inc
mov
xchg
add
rolb
ja
fcoml
mov
test
mov
push
fcmovbe
adc
cmp
jg
mov
mov
arpl
inc
nop
lock
xchg
mov
mov
pop
fs
jo
dec
cwtl
jge
test
mov
pop
pop
jb
cwtl
sbb
stos
int
pop
sbb
cmc
lcall
jg
and
cs
stos
std
xor
pop
dec
dec
sbb
jnp
ljmp
mov
xlat
in
mov
ja
dec
ficoms
sub
mov
xchg
jno
fwait
mov
and
subb
add
leave
push
insl
sub
push
sbb
and
xchg
push
ss
fdiv
jmp
and
mov
ret
dec
push
sub
or
add
icebp
fiaddl
dec
shlb
xor
mov
loope
mov
ljmp
ss
sarb
jmp
and
mov
std
add
mov
mov
mov
vorps
leave
mov
test
cltd
in
cwtl
ljmp
mov
out
pop
fnstcw
mov
sub
xchg
dec
lea
fwait
xchg
or
adc
aas
lock
inc
mov
push
nop
stc
in
adc
lods
pop
sbb
sahf
pop
cli
cmpsb
sub
pop
add
lods
mov
dec
cmc
jecxz
fstpt
inc
jmp
dec
sub
adc
imul
adc
mov
or
adc
jecxz
mov
inc
aaa
mov
aaa
and
push
or
pop
lret
and
imul
loop
or
mov
add
iret
inc
loope
pushf
inc
fucomip
mulb
ss
sbb
jo
lahf
fs
outsl
sbb
sbbl
pop
xchg
dec
xchg
cmp
cs
mov
repz
or
mov
lds
lods
mov
jno
jbe
lcall
in
push
xchg
out
nop
jecxz
insl
sub
adc
mov
xor
pop
jge
fnsave
nop
xor
xor
cmp
fists
xor
ret
mov
mov
div
aam
mov
jg
aam
pop
cmp
xor
xor
adc
cmp
sub
scas
cld
rcrb
ja
sbb
xchg
jns
call
cmc
clc
fwait
jb
movsl
adc
shl
push
mov
cmp
inc
xor
or
inc
popa
ficompl
jno
adc
bound
mov
stos
adc
aas
push
out
test
mov
lea
push
push
inc
in
cmp
movsl
mov
adc
es
mov
xchg
and
dec
outsl
add
adc
sub
sbb
pop
inc
inc
adc
aas
inc
cmp
out
dec
sbb
lods
mov
test
insb
lock
shl
icebp
jae
jecxz
push
sbb
std
std
shrb
xchg
es
and
mov
gs
mov
outsl
fcompl
push
add
andb
push
xor
stos
mov
std
ja
mov
movsb
jp
fucomp
lea
or
in
jp
insb
lea
data16
jo
or
mov
mov
dec
inc
inc
in
mov
dec
adc
leave
out
test
mov
fimuls
lahf
outsb
cmp
gs
dec
adcl
pop
push
addl
ret
in
jnp
or
pop
inc
lret
inc
pushf
lods
dec
je
sbb
icebp
int
fcoml
insl
addb
adcl
mov
inc
inc
test
push
sahf
sbb
mov
push
add
cld
jmp
inc
fs
mov
outsl
out
mov
mov
test
fwait
call
push
sub
leave
inc
cmp
mov
ds
test
xchg
push
push
cmpb
sub
sub
div
xor
push
jnp
add
imul
adc
aad
inc
pop
sub
imul
shlb
dec
or
and
movsb
xor
jge
push
push
sahf
shrb
lods
rcll
or
dec
js
mov
adc
and
repnz
frstor
insl
pusha
adc
lcall
cmp
into
cli
aad
and
in
xchg
or
lahf
and
pop
push
push
dec
xchg
mov
cmp
andl
push
out
push
jp
push
mov
push
test
addl
sbb
sarl
adcl
push
inc
pop
mov
dec
jecxz
mov
sahf
push
and
jmp
rcrb
push
cmpsb
mov
in
fcompl
adc
xchg
lcall
cmpsl
adc
adcl
and
xor
imulb
or
sbb
mov
jae
push
push
pop
inc
rcr
sub
addl
sub
or
outsb
outsl
pop
ja
add
in
pop
mov
pop
or
dec
orb
nop
push
adc
mov
lea
jp
into
mov
scas
push
inc
test
lea
ss
nop
mov
lock
pusha
inc
sti
fcmovb
xchg
repnz
outsl
nop
hlt
sub
jae
push
jbe
pop
ss
push
push
inc
mov
add
mov
and
mov
jl
lret
inc
push
pop
mov
and
pop
leave
xchg
out
push
jae
xchg
inc
mov
push
add
popa
int3
or
gs
test
and
and
mov
outsb
pop
sbb
push
outsb
xor
das
jbe
mulb
repnz
inc
fisubrl
divb
aaa
in
inc
les
push
cwtl
bound
xchg
cmp
icebp
lods
add
cld
sbbl
outsl
fisttpl
sti
hlt
int
cmpsl
push
clc
xchg
pusha
test
int
xor
mov
dec
xorl
test
cld
sbb
or
in
sub
inc
sbb
dec
xchg
aam
ss
sahf
push
or
xor
dec
pop
push
xchg
dec
es
adc
stos
jbe
xor
xor
add
icebp
icebp
jmp
test
je
adc
mov
jns
fbld
mov
xchg
mov
sbb
ret
not
je
jne
hlt
test
cmp
ss
xlat
add
jmp
adc
arpl
cmp
pop
out
sarl
xor
out
sbb
cwtl
xor
pop
outsb
insb
enter
mov
xlat
cmc
scas
fistps
into
mov
lcall
cmp
pushf
xchg
adc
aas
lods
add
shll
or
push
in
adc
das
jne
mov
cmp
insl
add
sarb
outsl
insl
push
lods
xchg
int
fildl
neg
mov
mov
jle
test
inc
out
add
xchg
loop
xor
pop
xchg
mov
dec
fwait
lods
jnp
mov
and
rorl
imul
jno
xor
ljmp
pop
mov
and
and
adc
jg
xor
mov
push
test
repz
mov
ret
adc
sbbl
push
nop
dec
adc
lea
add
jmp
dec
adc
in
and
fs
test
inc
enter
cmpsb
inc
sbb
adcl
popl
xor
adc
mov
test
lea
movsl
xchg
aam
inc
mov
in
je
xchg
adc
pop
mov
mov
cli
push
and
lods
cmp
cmc
sub
mov
sbb
sub
jbe
cld
scas
adc
xchg
xchg
pop
in
in
or
out
in
jp
push
cmp
shll
or
push
adc
push
adc
sbb
dec
pop
mov
jno
pop
cmpsb
xor
fnstcw
fmull
outsl
cli
scas
inc
add
mov
test
leave
jnp
pushf
pop
jnp
xchg
push
mov
movsl
pusha
es
sti
cmp
xchg
dec
mov
inc
jnp
mov
xchg
scas
mov
pop
ficoms
cmc
dec
cli
js
jne
push
push
add
sbb
imul
mov
xchg
xchg
sbb
gs
loope
or
or
ja
stc
pop
jae
cld
scas
jno
cmpsl
sbb
pop
rcl
inc
mov
and
and
dec
push
test
sahf
pop
loopne
push
scas
mov
push
sub
test
jl
pop
and
xchg
insl
add
mulb
and
xchg
arpl
dec
lret
push
jl
rorb
mov
and
add
rorl
mov
adc
pop
jl
sub
cld
lcall
pop
or
popa
mov
ss
xchg
mov
push
adcl
scas
mov
rclb
adc
mov
adc
movsl
fdivr
inc
dec
ret
or
pop
mov
test
cmp
inc
push
cmpsl
sbb
cli
mov
lret
sbb
pop
pop
inc
out
cs
push
push
cmpsl
inc
pop
push
cmc
scas
inc
sbb
pop
leave
cmp
adc
mov
mov
mov
adc
das
fwait
mov
mov
sbb
hlt
pop
sbb
pop
dec
mov
add
rcrb
iret
xor
or
mov
and
out
popf
mov
cmp
cs
xchg
xor
cltd
cld
nop
mov
test
decl
cltd
outsl
mov
cmp
sbb
repnz
sbb
sbb
je
cli
sbb
jmp
xchg
pop
xchg
adc
int3
xor
cltd
xchg
outsb
loopne
jp
jno
inc
push
mov
cmp
adc
push
shlb
mov
loop
lahf
pop
ss
icebp
test
sub
clc
enter
sbb
cltd
daa
xor
add
dec
xchg
jnp
push
xor
ljmp
cmpsl
dec
push
jl
jg
and
and
fistl
mov
idiv
aas
in
or
add
leave
fs
or
out
stos
dec
aaa
jno
stos
mov
in
xor
xorl
pop
push
dec
arpl
sub
addr16
repz
jmp
sbb
fildll
and
push
lods
xor
mov
movsl
adc
cwtl
test
jg
sub
into
jno,pt
lcall
or
out
xchg
sahf
jnp,pt
cs
jl
adc
popf
add
into
and
adc
dec
es
mov
push
popf
test
test
mov
mov
push
mov
pushf
popfw
aaa
mov
pop
sbb
mov
xchg
loopne
divl
fmull
and
popa
idiv
adcl
jbe
repnz
and
outsl
pop
rcrl
mov
int3
mov
adc
jo
lock
cwtl
std
popf
repz
std
cmpsb
js
or
int3
nop
mov
xchg
enter
xlat
and
push
ss
pop
push
dec
xor
and
mov
xor
jmp
stos
cmpsl
mov
push
ds
jg
sti
in
adc
es
dec
or
sbbl
les
arpl
fcmovu
call
lcall
or
mov
mov
sbbb
fldt
xchg
jnp
mov
and
dec
add
and
inc
ja
out
and
bound
mov
mov
out
push
mov
push
aad
inc
add
sbb
or
xor
cltd
jbe
xor
add
loopne
pop
dec
shll
cwtl
pop
stos
loop
inc
test
scas
inc
out
sbbl
cmp
push
fidivrl
js
decb
adc
jbe
gs
das
cmp
mov
xlat
inc
imul
jb
jnp
dec
js
pop
adc
jae
and
mov
sub
mov
aam
and
cmp
dec
outsb
jbe
and
adc
mov
adc
jle
movsl
out
push
jbe
aaa
xchg
mov
lea
das
int3
test
sub
bound
lock
cmp
push
dec
jns
ret
push
fsubrs
jno
imul
jp
sub
pop
insb
add
icebp
jle
or
pop
sub
negb
adc
pop
psubb
sbb
or
jo
push
push
adc
sbb
fwait
adc
int3
in
mov
das
sarl
pop
dec
xor
sbb
mov
es
and
icebp
dec
js
in
mov
popf
int3
sbbb
ret
pop
inc
mov
dec
scas
dec
mov
scas
push
push
imul
adc
cmpb
cmc
xchg
cmpsl
mov
cwtl
out
push
data16
popa
outsl
cmp
fisubrs
add
xchg
iret
push
lea
xchg
mov
iret
mov
in
icebp
clc
movsl
stc
adc
cmp
in
outsb
cltd
add
insl
outsb
push
jno
pop
lea
or
and
xchg
inc
lock
jl
push
cmp
xor
dec
cmpsb
add
adc
hlt
cmp
mov
cmp
lahf
push
adcl
syscall
inc
inc
pop
inc
cltd
in
hlt
adc
push
adc
mov
xlat
inc
lret
xchg
call
dec
mov
pop
outsl
mov
pop
sarb
sbb
xorl
sar
push
inc
xchg
sahf
xor
data16
jno
or
sub
jne
push
rcl
setg
or
lods
imul
ss
popf
dec
orl
or
lret
les
add
hlt
test
jge
sub
inc
xor
cs
mov
andl
out
repz
lods
mov
pop
int3
hlt
push
loop
or
mov
pop
sbb
shlb
mov
rcrl
xlat
jp
pop
pop
push
add
les
sub
mov
xor
pop
cmp
icebp
test
jne,pn
filds
and
mov
mov
mov
mov
pop
out
daa
mov
lea
les
loope
xchg
inc
mov
and
lea
fdivrl
jmp
rcr
push
pop
sbbb
fdivrs
out
mov
mov
push
lret
jge
or
or
mov
addl
mov
cli
cmpb
push
push
pop
in
cmp
xor
jb
fisttpll
mov
cli
popa
jb
pop
add
xchg
or
lret
lahf
test
adc
cmpsl
mov
cltd
pusha
jnp
adc
jecxz
sbb
cli
fldl
hlt
test
mov
dec
mov
xchg
aaa
out
fmul
out
cltd
das
cmp
dec
scas
jmp
xor
mov
inc
sbb
xchg
or
pop
sbb
std
arpl
hlt
sbbl
dec
mov
rclb
cmpsl
xchg
int
rorb
shl
lods
add
dec
ret
lea
je
xchg
scas
je
call
xor
imul
pop
insb
ss
inc
loope
xlat
sti
sti
push
jp
cmp
lret
sub
loopne
cli
movsb
push
mov
lret
or
jne
lods
fstpl
xchg
add
inc
sub
cwtl
sbb
dec
jle
fwait
push
jge
aad
xorl
mov
inc
push
fadd
out
cs
xchg
xchg
clc
and
popf
sub
std
or
add
ret
rcrl
in
outsl
fidivs
mov
pop
sub
dec
int3
out
andl
mov
pop
outsb
das
mov
dec
dec
cmp
dec
mov
divb
xchg
out
mov
push
cmp
mov
mov
leave
testl
mov
jmp
popl
cmp
enter
ror
dec
add
cmovns
test
cmp
insl
mov
jbe
into
or
add
or
jl
dec
cmp
mov
popa
repnz
xchg
out
stc
xor
adc
test
mov
xor
add
imul
in
lahf
sub
add
sbb
sub
mov
jge
xor
push
xchg
test
sbb
scas
adc
lahf
adc
xor
test
mov
push
push
cmp
sbb
push
pop
inc
iret
sub
or
int
mov
in
xchg
inc
icebp
jl
jge
jg
into
rclb
stc
adc
stc
xlat
or
sub
and
sti
adc
das
ds
sub
pop
xor
ret
xchg
pop
sub
xchg
rcrb
jl
outsl
xor
push
jne
xchg
mov
sub
psllq
pop
add
jno
out
jae
in
sbb
cli
cmpsl
jecxz
insl
lds
push
cmp
or
pop
int
inc
test
pop
inc
addr16
pop
js
adc
and
aas
fisubrs
mov
std
jo
adc
les
mov
push
fdivs
test
xor
push
jp
pop
dec
popf
pop
vmptrst
fsubs
xor
xor
mov
ret
mov
add
sub
jmp
ret
xor
and
scas
inc
rcrl
mov
adc
jecxz
imul
popf
jge
or
pushf
dec
xchg
xor
hlt
mov
flds
mov
sub
es
mov
or
xor
repz
jmp
sbb
jbe
sub
mov
sub
repz
js
rorl
flds
push
adc
loope
mov
mov
mov
pop
faddp
and
sub
mov
lret
imul
fcmovbe
mov
sub
insl
fisttpl
inc
inc
pusha
aaa
cmp
mov
out
inc
dec
outsb
repnz
fs
and
scas
xchg
cmpsl
sub
jle
js
push
push
inc
test
les
fbstp
cmp
jmp
lods
push
push
dec
mov
gs
jo
iret
subb
aaa
hlt
stos
cs
jp
inc
xor
out
test
sbbl
jle
and
jnp
xchg
ret
call
ficompl
push
jae
data16
mov
sub
and
fbstp
pop
mov
push
aad
test
in
sbb
mov
int3
pop
aam
iret
mov
xchg
stos
lret
stos
outsb
testb
out
mov
sub
cmp
pop
fwait
cmpl
mov
int3
jecxz
jg
and
lea
or
and
roll
lret
movsb
inc
aad
test
test
int
fs
inc
xlat
sti
in
repz
add
pop
dec
aas
push
mov
adc
in
js
mov
enter
imul
rep
decb
lahf
and
scas
sub
cmp
lds
xchg
loopne
lods
xor
test
xchg
jmp
xchg
hlt
push
cli
push
xor
and
scas
dec
lods
sbb
mov
mov
cld
dec
push
and
sub
pop
loope
inc
rorb
out
xor
sub
faddl
cmp
not
mov
or
cs
or
icebp
mov
xor
cmc
leave
cld
dec
shrl
inc
ljmp
dec
push
mov
into
xor
ljmp
pop
lods
mov
mov
leave
mov
inc
xor
lret
shll
outsb
push
and
int3
scas
lods
pop
fmuls
xchg
xor
jecxz
sub
cmpsb
xlat
mov
rolb
jbe
into
dec
repz
jo
jns
shll
ror
sbb
jb
dec
cmpsl
cmc
and
mov
mov
push
mov
cmpsb
adcl
shl
mov
imul
cmp
in
cmp
les
loope
fnstcw
mov
mov
test
dec
clc
or
xor
jecxz
sti
in
int3
xor
das
push
daa
addr16
pop
inc
sub
xor
dec
and
mov
adc
mov
inc
xor
push
inc
push
fcmovne
insb
lcall
xchg
dec
jns
pop
mov
aad
int3
cmpsl
lock
stos
repnz
jno
test
push
pop
loope
adc
iret
mov
shl
fiadds
fwait
inc
adc
and
cmp
pop
sub
adc
mov
stos
stmxcsr
add
sahf
pop
sbb
movsl
mov
mov
sarb
lods
mov
leave
int3
stc
add
mov
mov
das
push
push
cwtl
dec
and
push
mov
scas
test
lods
je
lods
and
cmp
in
cvttps2pi
lcall
lcall
aas
or
nop
std
insl
shlb
cli
fstps
outsl
xchg
sub
dec
and
in
mov
jmp
and
jno
rclb
rcll
sub
out
and
inc
aas
sbb
push
pusha
xchg
sbbl
inc
enter
arpl
mov
mov
pop
loopne
xchg
sub
shrl
out
aas
dec
cmpsb
cwtl
aam
cmpsl
popl
in
xchg
add
push
imul
ss
xchg
movsb
push
mov
and
xchg
loope
cmpsl
popf
into
dec
nop
pop
dec
jmp
cmc
pop
in
jne
out
loope
push
fdivrl
jo
sbb
ds
jb
inc
xor
dec
adc
dec
fstl
push
mov
icebp
lcall
mov
jb
pop
arpl
sbb
cltd
div
pop
cmp
xor
jge
lock
and
aaa
or
cmp
inc
clc
mov
and
mov
mov
daa
bound
test
fdivrl
in
or
xor
out
mov
dec
or
ror
icebp
or
fisubl
push
push
fdivrs
or
lods
ljmp
pop
into
adc
adc
sub
dec
lods
adc
push
out
mov
ret
cmp
sbb
rcll
addb
xor
int3
xor
add
imul
daa
push
sub
cmp
cmp
push
or
pop
stc
fdivr
testl
sbb
mov
shlb
and
jnp
mov
mov
test
mov
and
xchg
fstps
into
insb
jl
lods
pop
mov
enter
mov
push
addb
sub
call
imul
pushf
movsl
orb
hlt
pop
mov
mov
into
push
jo
subb
push
es
rcrb
pop
cld
cmc
fs
inc
dec
adcb
test
movsl
sbb
cmp
data16
inc
cmp
jns
iret
hlt
jmp
cmp
mov
xor
mov
jmp
aaa
mov
mov
inc
dec
pop
inc
sub
pop
pop
mov
and
nop
mov
adc
mov
mov
and
mov
dec
popf
fnstcw
lds
outsb
jo
dec
and
inc
add
imul
sub
cmp
gs
sbb
push
jne
cld
lods
pmulhuw
inc
inc
and
pop
mov
stos
xchg
adc
outsl
fst
dec
cltd
outsl
or
adc
adc
jle
mov
mov
orb
insl
jecxz
mov
add
xchg
mov
mov
arpl
out
fcompl
pop
lcall
push
jmp
arpl
cmp
roll
push
int3
ds
lods
test
aam
iret
pop
inc
fsub
loopne
xchg
inc
inc
adc
jb
repnz
adc
divb
mov
adc
adc
scas
adc
sbb
cmp
mov
arpl
cld
lods
push
inc
mov
cmp
mov
sbb
push
nop
xchg
test
cmpsl
cltd
or
std
or
insl
ds
inc
push
in
push
mov
jmp
movsb
and
mov
idiv
pop
lods
mov
fwait
and
sub
aam
je
imull
jp
cmp
js
pop
cmp
sbb
in
jae
xchg
dec
nop
in
xchg
je
jmp
negl
cwtl
xchg
js
sbb
cmp
dec
mov
dec
int3
lods
xor
xchg
loopne
hlt
push
sahf
insl
cli
or
ret
sbb
shlb
aaa
test
dec
xchg
aaa
dec
cld
clc
insl
lcall
mov
sti
add
fwait
cli
repz
cli
jno
mov
test
aad
push
aam
ret
xchg
jb
fildll
push
add
xchg
decb
mov
sub
jne
in
ret
xor
xchg
fists
adc
pushl
movsl
add
push
adc
or
push
push
mov
in
or
je
xor
mov
insl
lahf
push
and
and
out
dec
in
mov
ljmp
mov
push
mov
es
xchg
or
pop
mov
loope
jns,pt
cmp
pushf
inc
bound
adc
jbe
mov
scas
pushf
xchg
pop
mov
pop
adc
push
push
cmpb
not
mov
push
bound
dec
enter
mov
inc
push
ja
incb
mov
int3
sub
call
cmp
imul
out
inc
js
push
xor
jnp
test
cmp
cmp
dec
roll
insb
fbstp
je
loope
cmc
stos
daa
jnp
sub
mov
ds
mov
outsb
push
mov
or
inc
test
lea
jg
mov
pushf
icebp
or
ret
inc
xor
pushaw
mov
dec
sahf
pop
mov
cld
jle
rolb
push
adc
movsl
inc
sti
adc
icebp
cmpsb
xor
test
or
mov
sarl
adc
adc
jbe
cwtl
shlb
mov
ja
jo
insb
clc
jecxz
push
jp
js
iret
dec
pop
xchg
and
add
pusha
inc
xchg
sub
pop
push
xchg
icebp
ljmp
cli
mov
xlat
in
and
and
xchg
mov
xchg
stos
sbb
jbe
jb
pushf
mov
call
adc
xchg
repnz
insl
pop
add
aaa
fwait
loope
fnsave
fwait
pop
xchg
rcr
int
loopne
nop
cmp
cs
xchg
adcl
mov
xor
mov
dec
xor
or
cmp
jp
pop
ret
push
jo
scas
outsl
outsb
mov
fbld
hlt
js
push
lods
shrb
sub
xchg
dec
nop
sbb
dec
sub
or
cmp
int
lock
mov
mov
in
mov
dec
insl
movsl
cld
leave
jno
idivb
imul
inc
add
in
sub
lret
outsl
pop
je
push
inc
sub
loop
or
sbb
call
jecxz
mov
pop
sbbl
mov
adc
je
push
sub
neg
adc
jge
add
out
orl
ds
push
call
out
mov
ret
pop
xchg
and
sti
cmpsb
pop
repz
mov
xchg
push
xchg
lcall
jo
mov
xor
js
das
cld
stc
and
bound
sbb
lods
adc
sti
mov
insb
pushl
sbb
mov
dec
lea
mov
inc
popf
cld
aam
popf
lods
fdivl
fstl
daa
clc
enter
mov
mov
mov
or
int3
inc
out
je
not
out
lret
pop
cli
xor
in
sub
push
idivl
xor
xlat
jae
jnp
ret
nop
pop
push
lea
lahf
in
test
xchg
cmpsl
rorb
adc
xor
push
repnz
andb
mov
inc
pusha
mov
or
pusha
adc
pop
add
mov
ljmp
and
enter
jo
das
clc
data16
mov
out
int3
test
sbb
movsl
pop
out
loopne
dec
jp
push
xlat
pop
inc
lods
insl
nop
push
mov
push
ret
sub
xor
cmp
mov
aaa
xor
or
mov
daa
fwait
bound
aas
xchg
xchg
insb
mov
sub
adc
fdivs
pop
mov
and
push
loopne
dec
imul
imul
jmp
clc
mov
fdivrl
shl
stos
push
mov
jo
jno
pop
fisubs
lret
mov
mov
test
and
lret
xchg
insb
icebp
or
aam
add
enter
xor
lret
adc
jb
or
sbb
mov
jg
arpl
popa
mov
push
inc
mov
mov
pop
jmp
icebp
and
sbb
lods
pop
sub
popf
fwait
js
sarl
aad
xor
mov
push
mov
mov
in
and
jp
or
push
pop
or
xor
subb
xor
and
jb
test
int3
mov
dec
outsl
xor
lret
notb
enter
adc
loope
push
pop
mov
daa
shrl
add
ljmp
cwtl
pop
repz
xchg
dec
aad
jg
or
gs
in
imul
pop
fstp
sub
mov
mov
jo
jns
out
sti
popa
jge
fwait
fsubs
lcall
dec
testb
cwtl
cmp
jns
lods
xorps
or
push
repnz
xchg
icebp
pushf
pop
and
outsb
mov
in
loopne
adc
sub
add
mov
aam
lcall
add
mov
xchg
icebp
mov
nop
and
mov
ficomps
mov
lock
fwait
hlt
cs
bound
adc
sarl
jb
scas
xor
jl
lahf
xchg
into
ss
and
sub
test
aaa
or
dec
add
pusha
inc
lock
lahf
test
dec
test
jmp
pop
jmp
out
idiv
mov
dec
lock
sub
or
gs
mov
pop
scas
lcall
or
sub
or
push
dec
fs
xchg
adc
inc
jle
nop
mov
in
mov
pop
xchg
loop
mov
popf
lret
clc
outsb
adc
add
roll
lret
pop
fsts
in
shlb
inc
ljmp
jns
jo
jecxz
cmpsb
js
or
mov
xchg
inc
jl
loopne
call
or
lret
sti
jp
insb
xor
jl
xchg
xchg
gs
das
mov
or
jg
in
cli
sub
xor
faddp
out
mov
adc
fs
gs
cld
cmpsb
add
xlat
decb
cmpsb
cmp
cmpsb
add
add
mov
rcr
je
es
mov
ret
sub
lea
cmp
and
push
dec
into
ret
sti
js
js
scas
pop
subb
jns
or
in
dec
data16
dec
mov
loopne
int
leave
xor
mov
mov
addr16
or
push
mov
pop
mov
mov
lahf
xor
mov
rorb
jno
mov
jle
xor
lea
sets
and
push
cmpsb
fstpt
into
inc
pop
hlt
mov
fs
xchg
xchg
fildll
fnstcw
clc
ret
xchg
push
cltd
sub
in
mov
sbb
mov
es
jle
loope
mov
jnp
lahf
sbb
rcl
test
sub
mov
shlb
xchg
bsf
sub
lahf
shlb
push
push
push
into
and
mov
fdivs
add
xchg
jnp
jmp
loop
and
mov
push
jl
outsb
in
dec
das
pop
clc
in
sbb
push
push
push
adc
lret
in
add
fdivp
cmp
xchg
test
les
jno
xchg
mov
mov
sbb
fsts
orl
lods
jmp
mov
hlt
int
out
mov
iret
lret
add
dec
mov
rcr
inc
fstpt
cld
aaa
and
stc
rcl
inc
jb
jne
popl
sub
jb
nop
mov
jns
popa
sti
loopne
add
xor
add
or
dec
mul
sbb
nop
jge
add
scas
aas
push
das
inc
cmp
jo
sbb
lock
xchg
insb
push
std
addl
mov
addr16
mov
and
imul
insl
aam
sti
xlat
lret
xor
lret
push
cld
das
xorl
or
iret
rol
gs
adc
sbb
rcr
pop
push
pop
stos
add
push
jno
add
in
or
das
ss
testb
aad
lcall
pop
dec
in
xor
sahf
leave
aas
mov
icebp
or
mov
out
jne
sbb
mov
stos
mov
adc
stos
cmpsb
imul
fsubr
andb
movsb
push
mov
mov
sub
sbb
aaa
int3
cmp
and
aam
mov
test
jg
or
xchg
xor
add
arpl
jae
ficoms
pop
push
cmp
mov
pop
cmp
loopne
adc
bound
movsb
inc
push
jbe
ss
mov
mov
pop
jp
push
pop
dec
push
mov
divb
xor
jl
add
or
add
sbb
mov
imulb
cli
sbb
or
mov
sbb
fs
mov
gs
pop
nop
es
lcall
icebp
mov
xor
sub
dec
gs
je
iret
sub
xor
sub
ret
out
cwtl
jp
cmp
push
dec
stc
mov
scas
stos
enter
fwait
pushl
and
or
adcl
inc
or
adc
xchg
sbb
and
clc
lcall
xchg
insl
ss
cld
arpl
xchg
std
mov
pusha
dec
mov
loopne
fisttps
fs
imul
push
xchg
push
push
and
xor
ja
sbb
sbb
scas
inc
sti
inc
mov
or
outsb
inc
mov
adc
int3
mov
movsb
out
inc
je
mov
rclb
in
add
push
fcoml
in
in
std
sbb
xchg
mov
or
sbb
fildl
clc
sub
add
shl
or
mov
stos
out
jmp
fnstcw
addl
add
or
lods
sahf
daa
cmp
inc
xor
jp
rol
xchg
loope
mov
imul
stc
movsb
fnstenv
jmp
bound
sbb
inc
repnz
inc
movsl
mov
cli
bnd
hlt
mov
sub
je
imul
lahf
push
jne
jmp
in
iret
jo
adc
sub
xchg
add
pop
lret
pop
test
sbb
sbb
pop
inc
fdivrl
pop
aam
xchg
cwtl
dec
dec
insl
les
in
lahf
testb
pushf
fisubs
testl
push
clc
sbb
mov
inc
cmp
pop
rolb
pop
mov
mov
test
dec
adc
sub
add
and
xchg
pushf
insl
loopne
push
cmc
in
pop
pusha
push
out
fsubrl
ja
out
mov
pop
cmp
mov
arpl
and
xchg
test
in
adc
jmp
ret
sbbb
cmp
insl
aad
lods
mov
divl
mov
xchg
jmp
sub
add
xchg
fwait
pop
ficoml
inc
repz
popf
ja
addr16
push
xchg
pop
imul
ret
js
stc
sub
in
lock
xchg
movsb
ja
pop
into
insl
lods
stos
sub
sub
les
into
fidivrs
mov
xor
jns
or
mov
fwait
mov
xor
sbb
das
or
or
pop
jecxz
or
and
jecxz
aam
pop
and
adcl
pop
ret
stc
idivl
in
mov
push
out
or
in
arpl
add
and
or
enter
js
neg
push
mov
push
push
aam
fstpl
lds
cmc
inc
pop
mov
pop
fldenv
sbb
fidivrs
cmc
sub
cmp
mov
test
pop
push
movsb
xchg
sti
xchg
dec
test
fcmovnu
inc
push
xchg
lods
leave
aas
jge
mov
movl
push
xor
cmp
sub
sub
cmc
andb
cmp
sub
ljmp
cmc
shr
push
and
push
xchg
daa
xchg
addl
test
int
pop
push
jb
subl
mov
ret
inc
test
mov
je
cmpsl
out
push
xchg
out
inc
jne
out
push
sub
and
adc
mov
icebp
xor
adc
push
or
mov
mov
fsubs
adc
hlt
mov
cmpl
aam
xor
jmp
jne
cli
xor
mov
jg
jecxz
das
imul
cmpsb
inc
loope
pop
add
and
push
scas
sbb
xchg
fistpll
call
rol
mov
push
push
bound
imulb
mov
and
aas
push
jb
mov
adc
xchg
and
adc
jns
xchg
push
dec
jns
mov
jbe
xor
mov
ss
push
jg
bound
push
mov
scas
cli
movsl
sahf
mov
pop
ljmp
jle
mov
cld
loope
cld
push
and
mov
cmpb
aam
dec
and
repnz
enter
dec
cmp
jno
or
es
insl
lret
int3
ror
cld
cmp
add
mov
divb
sbb
int
xchg
fisubrs
pop
adc
lods
ss
push
cmpsl
rorl
mov
xchg
xchg
cs
stos
xchg
jmp
std
test
inc
dec
adc
shlb
cmp
lea
mov
icebp
notl
and
xor
lcall
xor
adc
sbb
in
test
sub
movsb
sarl
repz
lds
loope
clc
jae
stc
dec
ja
enter
pop
add
jb
mov
test
dec
pop
jns
xor
fwait
mov
scas
jnp
xchg
jb
out
outsl
and
push
xchg
test
dec
dec
or
icebp
cmp
ret
fcompl
out
stos
mov
das
jo
cltd
push
inc
push
les
pop
push
test
test
push
outsb
sbb
out
std
hlt
jo
lcall
cmp
push
xlat
jno
mov
bound
imul
jae
addr16
pop
adc
test
or
insb
pop
fwait
push
adc
das
push
mov
jp
je
push
inc
jae
cs
dec
mov
in
pop
xor
cmpsb
repnz
and
and
dec
pop
jb
in
jns
mov
inc
fisubs
sub
pop
es
xor
pop
aaa
push
push
mov
mov
mov
iret
push
sub
pop
mov
cmpsl
pop
cli
and
call
adc
add
sbbb
lcall
mov
or
jge
test
out
pop
cmpsb
adc
arpl
jb
insl
add
fisttps
dec
test
loop
pop
cmp
xor
into
mov
jl
sbb
or
mov
xor
jo
ljmp
ljmp
testl
pop
sbb
xchg
pushf
fdivs
dec
enter
test
jg
mov
insb
sbb
imul
mov
aaa
icebp
test
cs
out
mul
mov
fs
and
addl
push
sarb
lahf
mov
roll
lds
pop
pop
test
and
dec
out
add
push
in
outsl
jns
inc
out
icebp
mov
add
jne
aaa
fldt
and
cli
adc
shl
jno
test
push
push
dec
mov
icebp
push
lods
cmp
pop
jmp
or
popa
popa
divl
jo
call
movsl
int3
ret
xchg
mov
cmc
add
sub
insl
cmp
xor
test
into
add
push
lcall
ds
orl
nop
add
xor
test
int
sub
shrb
ljmp
sahf
or
int3
ret
jno
push
mov
roll
leave
adc
sub
outsl
into
dec
mov
mov
sub
adc
mov
pushf
fnstenv
sbb
les
mov
and
xchg
pop
xchg
test
pop
nop
lret
cmpsl
push
mov
test
xor
dec
inc
pop
cmpsb
or
int3
out
mov
adc
xchg
loope
xchg
aaa
jmp
ss
int
or
add
outsb
xchg
mov
sbb
aaa
cwtl
xor
sahf
cmp
mov
jbe
lcall
sbb
cli
mov
push
decl
fsubl
pushf
cmp
push
jnp
addr16
adc
adc
mov
scas
or
or
cmp
arpl
sub
das
sub
rorl
iret
inc
xorb
lock
in
cmp
push
subb
fsubl
cmp
incl
inc
addr16
cmp
out
push
xchg
test
mov
int
outsl
xchg
repz
push
xchg
jb
cmp
rcrb
mov
call
mov
lock
and
inc
or
in
enter
fildll
inc
cli
add
xchg
test
pop
push
jge
stos
jno
ljmp
orl
fadds
add
xlat
mov
xchg
ljmp
pop
jg
std
jge
xor
cmp
lods
jge
xchg
dec
sbb
sub
jbe
sbb
adc
cmp
aaa
icebp
pop
enter
enter
loop
mov
mov
jb
adcb
pop
pop
dec
dec
and
fnstcw
test
mov
jecxz
xchg
aam
jns
cmp
push
mov
dec
daa
cmp
les
cltd
sbb
aaa
lahf
mov
jb
adc
repz
mov
movsb
rcrb
movsb
iret
inc
test
pop
jl
fsubl
les
fidivrs
xchg
inc
push
push
pop
xor
mov
and
in
lds
inc
notl
and
cmpsb
fiadds
ja
test
push
lahf
cmp
dec
into
fisubl
ljmp
loope
or
dec
lcall
lods
in
aaa
xchg
mov
loop
iret
dec
adc
rcrl
push
divb
repnz
mov
dec
jg
add
mov
mov
push
mov
aam
mov
int
int3
fldenv
jne
xchg
out
outsb
mov
iret
mov
bound
in
xor
push
sbb
call
and
mov
lea
or
xchg
mov
daa
shrl
hlt
arpl
jbe
clc
xchg
loopne
push
dec
nop
or
enter
faddl
push
cmp
jmp
gs
shl
int
cld
xchg
cli
hlt
sbb
loopne
popf
sbb
stc
js
lahf
xchg
rcrb
ja
mov
xor
cltd
sub
and
push
aad
inc
push
loopne
gs
mov
dec
jo
loope
mov
ss
frstor
std
rcl
mov
sub
mov
mov
adc
xchg
and
push
xchg
les
cmp
pop
in
and
pop
jb
shll
in
std
pushf
std
sub
test
imul
xchg
cwtl
daa
jp
xor
xlat
cli
or
inc
push
cmp
aaa
or
pop
fsts
xchg
xchg
mov
ljmp
mov
lahf
scas
pusha
and
xor
aas
inc
lock
xchg
sub
fs
xchg
push
adc
cmp
scas
divb
out
sub
in
loope
pop
inc
push
lahf
mov
sbb
ja
test
fcmovnu
jb
scas
orb
add
je
mov
dec
jns
and
lahf
fstpl
in
push
jecxz
dec
jmp
push
sbb
ja
js
adc
cld
jnp
mov
jo
lods
lahf
adc
mov
movsl
pop
add
dec
jle
pop
clc
cli
sbb
adc
addr16
xchg
xchg
les
pop
mov
push
in
xchg
mov
adc
or
loop
jge
lods
aad
ds
aas
or
bound
inc
ds
aaa
sti
push
imul
pop
or
cld
mov
rorb
fadd
jg
popa
jp
jnp
push
xor
mov
ljmp
popf
dec
arpl
fistps
clc
jmp
dec
sub
adc
add
sub
add
adc
xchg
mov
push
mov
push
sarb
or
mov
xor
pop
lahf
adc
sub
in
add
js
inc
add
sar
hlt
cmp
aaa
aaa
sub
adc
add
xor
out
aad
mov
cmp
enter
adc
sbb
fs
mov
dec
roll
add
jg
sbb
cmc
cmp
loopne
jg
inc
inc
aad
pop
jbe
stos
inc
andb
mov
and
sbb
inc
aad
push
leave
jmp
pushf
pop
repnz
movsl
and
xchg
add
fistl
ja
push
jae
repnz
cmpsl
cltd
or
ja
daa
mov
scas
inc
sti
lods
in
mov
iret
outsb
sub
les
push
sbb
sub
repnz
push
mov
sbb
add
fmull
adc
or
pop
push
loope
je
cmpsl
fidivrs
sub
gs
sbb
cmp
out
test
dec
scas
dec
mov
pop
stos
add
shrl
push
ret
test
mov
xchg
sbb
cmpsb
lret
xorb
or
mov
mov
mov
lcall
jmp
jmp
hlt
adc
fldl
imul
dec
inc
inc
cmp
dec
ss
sub
push
inc
inc
mov
adc
enter
sub
jg
aas
arpl
iret
and
ja
mov
pop
int
add
sub
arpl
adc
and
imul
les
mov
push
fucomi
fistps
pusha
and
popa
mov
test
shrl
js
jnp
pusha
inc
jp
adc
xor
xor
stc
test
icebp
in
call
pop
jnp
push
inc
push
dec
fdivs
jg
es
and
xor
adc
dec
xchg
xor
insl
jb
out
data16
sub
add
xchg
cmpsb
sar
pop
push
out
or
aad
out
jb
jbe
lcall
mulb
xchg
rorb
rclb
cmp
and
mov
and
jne
xchg
cmc
popf
mov
pop
dec
dec
mov
mov
lret
dec
inc
mov
repz
jno
dec
pusha
scas
xchg
js
lock
rolb
lods
data16
aad
pop
fisubl
inc
pop
mov
add
dec
lahf
iret
out
lret
test
aam
sbb
cmp
bound
test
orl
jae
xor
stos
movsb
sahf
jl
iret
sub
sbbl
pushf
shrl
jo
dec
mov
popa
aaa
jb
mov
aam
cmp
sti
xchg
sub
jge
in
xor
jno
jmp
popa
push
stc
test
mov
inc
xor
adc
call
fstpt
jmp
or
cmp
xchg
adc
in
mov
scas
aad
negb
lret
fldcw
mov
xchg
lods
or
nop
pop
add
fs
xchg
rep
lahf
test
cwtl
out
jmp
loopne
enter
mov
ja
jecxz
scas
rolb
imul
adc
dec
dec
mov
push
into
cmp
mov
cld
das
or
sub
add
in
cld
sub
lock
mov
pop
in
or
ss
subl
testb
mov
sub
test
enter
neg
popa
es
mov
loopne
or
arpl
stos
iret
pusha
test
push
mov
cmpsl
out
sarl
add
stos
sbb
fidivs
jge
leave
loope
stos
ret
xor
insb
adc
pop
bound
pop
rolb
shl
daa
xchg
js
mov
test
sub
faddl
fsubrs
cmp
xor
cwtl
add
mov
fs
xchg
jle
setp
fisttpl
xchg
pop
sahf
sbb
test
lods
lahf
jecxz
cmc
push
inc
cmp
adc
and
adc
mov
arpl
dec
hlt
in
inc
push
xchg
adc
imul
inc
lods
test
pusha
jae
ja
inc
push
push
incl
sbb
pop
jb
sub
mov
sub
aam
test
cmpl
arpl
cs
enter
aaa
loope
dec
in
stc
movsl
orb
sbb
test
jge
sub
push
push
jmp
aad
pop
jae
outsb
repz
jae
sarb
push
ljmp
loop
test
xlat
insl
adc
xchg
call
out
sub
jge
inc
cmpsl
pop
adc
fsubrl
mov
sub
leave
vmread
dec
lretw
and
fsubrl
sub
xor
daa
inc
and
mov
mov
pop
or
fimuls
lret
popa
inc
jge
jmp
adc
aas
mov
mov
inc
mov
and
and
rcrl
in
addr16
xchg
push
leave
test
in
rcr
stos
cmpsb
cmp
lea
ficomps
ljmp
in
out
pop
insl
sahf
jle
in
or
push
jno
imul
roll
jl
dec
imulb
push
inc
lea
mov
pop
mov
sbb
xchg
sub
out
in
aam
add
cmpb
jmp
xchg
jge
sbb
stc
cmp
push
sub
cli
xor
mov
sub
and
int
hlt
shr
mov
push
cmp
inc
fcmovbe
or
mov
sahf
mov
add
lret
bnd
xor
pusha
add
xlat
insl
jmp
sbb
int
popf
test
mov
add
shrb
push
inc
arpl
mov
fistps
das
test
cmpsb
add
out
push
lods
jb
cli
pop
aam
or
xchg
popa
out
loopne
adc
pushf
xchg
fcmove
and
sub
mov
add
add
sbb
push
rcrl
xchg
mov
mov
adc
dec
inc
stos
hlt
mov
popl
test
add
lock
adc
xor
jno
mov
pop
call
xchg
mov
sbb
push
mov
lock
enter
rcrl
and
das
test
mov
dec
pop
sbb
dec
mov
out
clc
jne
scas
xchg
inc
adc
adc
in
nop
in
cmpsl
lods
lds
inc
xchg
adc
sbb
lock
fsubrp
cmp
scas
out
mov
aas
adc
insl
fbstp
pushf
sub
scas
in
neg
xchg
xchg
mov
push
stos
sbb
stos
adc
and
xchg
xchg
mov
inc
fdivrs
or
dec
add
dec
mov
stos
imul
aas
out
mov
and
push
pop
or
cld
pushf
fildl
jno
in
jge
sbb
into
lds
insl
in
sarb
cmpsl
imul
mov
notb
rclb
and
mov
push
lea
mov
inc
sahf
icebp
punpcklwd
out
sbb
popw
insb
pop
jmp
mov
inc
je
sbbb
and
gs
inc
mov
push
add
mulb
sbb
stc
xchg
rorb
das
xor
xor
cmpsl
xor
lcall
shrb
je
outsl
mov
and
xchg
xchg
leave
mov
lods
xlat
test
cmp
in
mov
sbb
or
ss
incb
adc
aaa
stc
mov
push
jae
xchg
jnp
in
add
fmulp
hlt
cmp
lret
xchg
push
sbb
stos
add
pop
dec
sub
out
adc
cmpb
out
nop
hlt
in
jg
mov
mov
int3
and
push
mov
xchg
ljmp
and
push
jno
mull
ljmp
fsubrp
ss
push
mov
xchg
jae
enter
cmp
mov
xchg
jle
cmpsl
int3
mov
sbb
pop
push
test
insl
dec
push
or
fsts
inc
sbb
int3
sbb
mov
dec
sarl
outsl
cmpsl
jnp
dec
out
test
mov
mov
xlat
xor
inc
shrl
mov
push
or
or
mov
scas
push
cmp
jb
scas
jle
lcall
or
into
adc
movsl
add
orb
dec
out
dec
adcb
xor
imul
add
iret
fsubp
sahf
bound
imul
mov
negl
sar
loopne
bndstx
jo
shrb
outsb
xchg
aas
mov
je
and
sbb
es
nop
ljmpw
cmp
ret
xchg
jae
sbb
lret
insb
jae
fabs
mov
jmp
push
int
jo
clc
adc
xor
mov
jmp
mov
inc
gs
mov
add
cmpsb
aad
clc
movb
lods
jle
loopne
cs
mov
push
lds
pop
data16
es
or
lock
movsl
xchg
inc
mov
mov
daa
outsb
fwait
in
sub
lret
es
jecxz
xchg
icebp
inc
push
popf
lahf
sub
xlat
sub
jecxz
shlb
cmp
and
xor
and
push
add
rcrl
adc
popa
jb
mov
leave
xor
jo
xchg
out
out
loopne
cmp
xchg
xorb
cwtl
mov
filds
jl
adc
mov
mov
and
outsl
in
or
push
in
and
aam
lcall
roll
repnz
les
cmp
cld
xor
inc
insl
into
xchg
xchg
cmp
adc
fisttpll
lret
aam
dec
icebp
jb
mov
mov
push
add
mov
fisubrs
jp
lcall
in
or
pop
les
sti
dec
push
out
add
mov
cmc
jno
mov
adc
in
je
mov
in
jns
jb
and
cmp
push
add
bound
jle
mov
call
aad
jns
iret
mov
xchg
sub
jge
pusha
jle
fstp
adc
test
cmc
xchg
mov
fisubrl
and
xor
or
test
movsb
mov
repnz
loop
or
sbb
popf
cld
loop
jl
and
xor
shl
pop
xchg
push
lea
cmp
dec
cwtl
mov
movsl
shlb
loop
retw
push
enter
cmpb
and
ja
lock
out
dec
push
fnstsw
out
stos
je
imul
mov
lret
sub
sbb
ret
xor
cmp
pop
cwtl
sbb
notl
adc
add
rcll
pop
push
popa
sbb
movsb
inc
lods
shlb
sbb
adc
dec
loopne
pop
leave
out
pop
sub
xchg
sbb
scas
add
test
jmp
outsb
mov
or
xchg
inc
push
or
cmp
pushf
jno
adc
jl
push
clc
push
xor
sub
iret
add
aaa
js
inc
mov
sti
arpl
ret
aad
push
dec
lahf
lret
lret
push
add
xchg
sarb
outsb
dec
ljmp
inc
test
pop
mov
push
adc
dec
cmp
push
or
push
xor
cld
and
mov
sbb
inc
lock
lods
inc
push
lds
push
adc
push
mov
es
int3
pop
cwtl
inc
or
jne
cmp
test
push
out
loop
gs
cmp
push
push
imulb
add
dec
push
addr16
testl
dec
cmpsl
jae
fdivl
and
pushf
stc
dec
sbb
mov
or
inc
cltd
adc
xchg
cld
xchg
stos
ljmp
nop
ljmp
std
inc
mov
push
test
call
and
out
fs
add
imul
dec
test
add
stos
lcall
ja
jl
adc
ret
mov
mov
rclb
mov
push
shll
xor
lahf
insb
sbb
test
jecxz
jno
or
shr
add
fistpl
xor
dec
loopne
mov
xchg
cmp
dec
stc
cmp
jge
pop
fnstsw
push
aas
inc
clc
pusha
cld
jg,pn
push
inc
adc
or
imul
sbb
jbe
notb
jnp
mov
sbb
adcb
jb
in
repnz
xor
push
inc
lret
icebp
jmp
mov
clts
rcl
and
clc
and
mov
cmp
clc
pop
pop
jns
sub
sbb
ljmp
shll
mov
rclb
xchg
lds
pop
cmp
filds
aaa
test
sub
and
mov
xchg
cwtl
push
xor
cmp
jl
ret
daa
inc
xchg
jge
daa
xor
loop
jl
add
sbb
sub
inc
fcoml
scas
rcll
jl
pop
jge
jmp
add
pop
in
or
xchg
es
pop
insb
jbe
sahf
mov
shl
pop
cs
dec
xlat
scas
scas
cmp
push
leave
xchg
pusha
sahf
pusha
adc
pop
cli
ds
pop
movsl
sub
jmp
inc
cwtl
gs
scas
cmp
fistpl
imull
cmp
mov
sti
hlt
jle
xlat
mov
imul
mov
and
xchg
push
shll
push
xor
adc
cmp
and
imul
jo
out
jno
lret
dec
and
clc
and
sub
sbb
rorb
fdivr
mov
and
aad
out
std
pop
popa
inc
dec
mov
or
xlat
imul
xchg
div
pop
xor
push
leave
iret
sbb
iret
stos
xlat
hlt
sbb
nop
cs
aad
jns
sarl
xlat
inc
jns
addr16
out
cwtl
mov
mov
xchg
or
cmp
push
or
in
add
and
cld
enter
sbb
dec
xchg
sbb
sbb
adc
lock
pop
push
int3
adc
mov
insb
shrl
cs
sbb
mov
adc
inc
nop
mov
ret
mov
or
scas
pop
pop
fldcw
cwtl
ja
jl
std
dec
imul
icebp
test
xlat
xchg
ficompl
mov
incb
cmp
rolb
push
das
push
push
dec
mov
mov
loope
out
mov
push
shll
inc
xlat
ljmp
je
roll
repnz
in
inc
iret
sbb
in
fs
fisubl
jnp
das
cmp
pop
out
inc
jb
leave
cmpb
dec
icebp
lds
ljmp
imul
jne
vpmullw
mov
cmpl
or
cmpsb
lret
and
jmp
and
popf
dec
jmp
pop
fcomps
or
stos
mov
sti
inc
xchg
sti
add
fdecstp
pop
pusha
inc
nop
jecxz
mov
dec
push
pop
rolb
fisubl
pop
pop
jns
sub
mov
sbb
ret
push
xchg
or
dec
loop
xor
sub
mov
mov
ss
or
add
bnd
int3
addr16
lods
cmp
inc
cmp
mov
lcall
xchg
and
add
iret
jne
enter
xor
jmp
gs
rcrb
shrb
cmp
lcall
stos
stos
sbb
loop
inc
mov
pop
repnz
fdivrs
add
adc
mov
push
inc
pop
ljmp
jb
sub
addr16
mov
into
dec
jle
cmp
sti
outsl
bnd
cmp
pop
dec
sub
test
jp
in
inc
stc
aaa
ds
and
mov
call
sbb
inc
ja
dec
inc
sub
lds
sub
ror
mov
sub
scas
movsl
aas
mov
scas
and
or
dec
add
or
mov
movnti
inc
adc
mov
mov
push
sub
shrb
in
xchg
jge
mov
les
sbb
xchg
sub
jmp
cli
xchg
decb
dec
pop
mov
adc
mov
mov
inc
mov
clc
rolb
cmp
out
pop
dec
es
dec
inc
sub
jne
mov
push
es
into
inc
fdivrl
rolb
cmp
xorb
pop
lahf
in
aaa
imul
mov
imul
out
xchg
mov
aas
xchg
mov
subl
pop
and
movsl
dec
mov
int3
imul
in
fdivrs
sub
int
mov
mov
xchg
or
inc
jle
jl
mov
es
jle
jg
mov
jb
pop
aas
jb
mov
mov
addr16
mov
loop
xlat
arpl
jae
lea
mov
sub
call
adc
enter
clc
leave
test
fdivrs
imul
pop
lods
out
sbb
and
pop
jle
popa
in
push
and
jl
xchg
cmp
mov
adc
cmp
nop
sub
pop
fdivrl
sub
adc
call
dec
pop
adc
incb
inc
aas
fsubrs
std
push
or
mov
dec
mov
lods
fnstcw
leave
pop
adc
push
lea
mov
movsl
jb
cmp
aaa
hlt
and
cli
xchg
pop
test
jg
mov
cld
dec
rolb
add
icebp
aad
sahf
sti
xchg
stos
jae
add
push
xor
adc
leave
mov
shrb
in
mov
add
xchg
cmp
sbb
xchg
and
cmp
lret
das
fs
je
nop
jnp
inc
aaa
dec
mov
and
push
addr16
mov
repnz
shll
adc
std
data16
jmp
adc
int3
jl
push
dec
ljmp
push
in
imul
jne
inc
or
jae
sub
fwait
push
cmp
push
insl
or
call
push
out
mov
lods
xchg
or
mov
outsl
fsubrs
jne
aaa
enter
inc
mov
je
jo
bound
lds
pop
leave
mov
stos
dec
dec
add
rol
mov
aaa
push
stc
mov
hlt
sbb
call
rolb
ljmp
sbb
xchg
pop
mov
sub
ja
xor
add
out
outsb
dec
xchg
stos
lods
lods
xlat
or
cmp
push
sbbl
jg
push
repnz
sub
xrelease
mov
cmp
cld
fidivs
and
into
dec
arpl
daa
mov
test
pop
bound
mov
stc
int
xlat
loope
cld
mov
jb
xor
and
das
mov
adc
aam
fcomps
push
jbe
pop
in
sub
ret
pushw
lea
decb
fsubs
test
and
adc
je
xor
lret
lcall
sbb
cltd
xchg
cld
mov
add
es
jne
or
outsb
mov
clc
jno
jge
hlt
aad
mov
sub
fs
fbld
xchg
mov
push
popf
lret
ficomps
jne
and
rcll
xor
adc
mov
lea
or
fildl
and
inc
clc
ss
loopne
std
dec
ds
push
or
fwait
xchg
sbb
loop
sub
xchg
in
or
or
adc
sbb
pop
in
sbb
adc
xchg
cltd
mov
cmp
mov
fs
bound
shrb
lea
bound
and
mov
daa
fwait
cmp
fwait
insb
push
shl
push
lea
inc
mov
mov
arpl
pop
sbb
js
into
cs
pop
mov
cmp
jge
fisubs
adc
mov
sbb
mov
inc
in
xchg
and
mov
dec
fcomps
arpl
cs
insb
movsb
mov
das
movsb
and
xchg
adc
xchg
cmp
mov
pop
or
push
addr16
je
push
hlt
hlt
push
pusha
pcmpeqd
imul
push
jbe
cld
icebp
lret
cmp
dec
and
adc
xor
in
xor
out
mov
addr16
mov
inc
cmp
pop
leave
xor
jp
and
sub
xchg
jbe
hlt
and
mov
inc
mov
xor
pop
jp
mov
mov
pop
mov
aas
inc
lcall
fsub
ds
xor
xlat
mov
data16
roll
or
mov
jb
xor
push
cvtps2pi
sub
insb
jp
nop
scas
adc
jb
mov
scas
push
je
sbb
lahf
stos
sub
cmp
inc
divb
add
mov
add
lahf
jns
jg
cmp
jnp
je
gs
ja
sbb
sub
or
inc
leave
stc
out
mov
dec
xchg
rcrb
movsl
test
mov
inc
add
jns
shl
mov
push
test
add
ljmpw
pop
mov
movsb
push
lods
pop
jmp
pushf
fimull
jno
dec
cmp
rcll
and
shr
aas
lock
sbb
lea
fwait
nop
pop
adc
das
inc
inc
fistps
pop
jmp
enter
in
cs
sbb
inc
dec
sti
out
rcll
cwtl
aaa
and
dec
movsl
lds
mov
mov
out
into
cs
adc
mov
sub
jecxz
in
mov
cwtl
loop
aaa
out
dec
hlt
fmull
adc
popf
jbe
inc
or
push
jmp
add
fwait
pushf
pop
rclb
in
in
scas
gs
lds
adc
sbb
inc
xorl
pop
sub
stc
adc
mov
inc
inc
cwtl
xchg
call
xor
fildll
imul
or
add
mov
mov
jae
mov
fistpl
xchg
out
clc
les
cmp
lret
repnz
mov
sub
insb
insl
repz
call
clc
or
leave
mov
pop
jno
push
shlb
sbb
insl
out
pop
ret
insb
pop
cwtl
push
into
sbb
inc
push
sub
repz
fsub
mov
xchg
pusha
mov
pop
mov
mov
lret
shll
add
insb
sbb
or
lds
fstpl
dec
jp
jbe
xchg
add
es
es
sub
loop
inc
push
cmp
mov
inc
sbb
jae
cmp
add
jmp
inc
addr16
and
movsb
add
mov
daa
mov
or
inc
lds
or
mov
hlt
sbb
mov
dec
sbb
stos
dec
mov
sbb
in
out
adc
cmp
mov
js
scas
xchg
jne
arpl
shr
push
xchg
sub
cmp
mul
clc
lods
adc
xchg
cs
xor
ds
mov
sbb
idiv
jbe
sbb
push
out
out
popf
or
dec
repz
hlt
lds
mov
mov
fistps
and
xchg
das
cld
dec
in
repz
loop
rorl
xchg
push
rep
pushf
inc
out
mov
xchg
jp
adc
inc
fsubl
jb
mov
mov
mov
sub
jo
sbb
push
jae
test
fstpt
mov
mov
mov
add
mov
addr16
push
sub
mov
loope
jbe
mov
jl
push
xor
iret
addr16
mov
mov
or
sub
icebp
sbb
je
dec
xchg
jge
leave
out
lea
out
xchg
in
mov
sub
jne
sbb
jo
aam
xchg
xchg
movb
jno
pop
ret
stos
pop
inc
int
insb
mov
loopne
in
push
dec
cmpsl
das
mov
mov
adc
je
les
daa
pop
inc
xor
lret
dec
mov
dec
addr16
mov
dec
sar
movsl
lret
sbb
loop
imul
and
sbb
cltd
pop
out
sbb
fst
push
fisubl
jns
clc
movsb
sbb
movsb
cli
adc
fcomps
pop
mov
or
and
ss
xchg
jne
iret
div
out
and
lods
and
arpl
and
rcl
sbbb
insb
call
idivl
idiv
or
arpl
sbb
lock
aam
adc
shlb
loop
dec
popf
cmpsb
pop
add
jmp
push
adc
imulb
mov
rcl
cmp
xchg
sbb
xchg
cmpsl
mov
pop
xchg
fdivl
jmp
ja
es
cmp
jb
and
add
inc
stos
fs
int3
lret
add
mov
aaa
gs
sbb
pop
mov
repz
mov
rcrb
and
leave
xlat
cmc
data16
add
mov
inc
cmc
js
ja
adc
xorb
pop
xchg
push
mov
loop
xor
xchg
pop
lock
insb
jae
ret
pop
push
dec
test
push
and
push
mov
insl
push
fisubs
or
es
int
repnz
push
outsl
mov
jno
mov
stos
mov
scas
mov
adc
jne
iret
aas
sti
mov
and
and
sarl
stos
mov
mov
jmp
cli
mov
int
push
dec
mov
inc
cmp
xor
mov
pop
dec
imul
pushf
into
sub
addr16
shrl
mov
sub
daa
test
sbb
add
imul
lds
int3
xor
lock
xor
insb
sbb
fs
in
dec
dec
sbb
lods
subl
inc
xchg
dec
push
sbb
sbb
call
fwait
adc
popa
fstl
and
or
aad
fists
add
xchg
cmc
cmp
mov
imul
sbb
jno
out
add
repnz
ljmp
imul
mov
ss
xor
inc
sahf
test
es
push
jle
push
fwait
xchg
cmpsl
jle
popa
push
pushf
cmp
sarb
addr16
pop
fldenv
and
push
jl
pop
adc
mov
insb
insl
dec
popa
sub
pushf
sub
lret
cli
xor
add
mov
add
push
out
mov
inc
lret
movsl
daa
je
or
adc
xchg
inc
in
lods
inc
and
cltd
int
mov
insb
popa
add
or
cmpsb
pop
sbb
xchg
pop
inc
cs
mov
ficompl
push
je
pop
jno
dec
mov
sbb
sub
mov
mov
and
repnz
pop
cmp
xchg
mov
xlat
enter
sub
rcr
aad
adc
lcall
sub
jne
loopne
inc
cld
inc
test
sbb
adc
pop
and
loopne
add
mov
inc
sub
fldt
insl
xchg
xor
insb
lods
icebp
aas
pop
or
cltd
xchg
push
add
or
or
push
jne
andb
out
lret
xchg
xor
out
jle
push
std
data16
push
mov
and
pop
cmc
inc
jb
sub
cwtl
push
lds
push
pop
sahf
js
or
bound
or
pop
sbb
in
xor
dec
adc
ret
rcrl
add
out
pop
xchg
imul
xor
in
divl
cltd
or
pop
xchg
sub
xlat
dec
pusha
fnsave
jo
mov
pop
setnp
and
sbb
adc
mov
cli
adc
mov
inc
data16
adc
cmpsl
xor
xchg
mov
fdivl
aas
dec
cmp
lahf
sbb
adc
inc
sbb
rcll
or
and
iret
cmp
push
inc
iret
push
xchg
inc
inc
xor
mov
mov
mov
adcl
mov
sub
add
xchg
adc
inc
rcl
lret
call
out
push
mov
cmp
pop
sub
adc
arpl
js
push
test
arpl
cmp
test
cmp
test
jne
xchg
loopne
xor
out
es
out
out
lods
xchg
repnz
lock
testb
jecxz
adc
mov
inc
cmp
sub
gs
fcompl
mov
adcb
mov
jae
outsb
stc
mov
enter
popf
fwait
lahf
mov
mov
pop
jo
pop
out
push
mov
bound
fsubl
sub
dec
imulb
cmpsl
and
dec
stc
les
adc
call
mov
inc
pop
dec
sti
ret
xchg
push
cvtdq2ps
mov
lret
in
push
insl
fdivrl
sub
pop
out
push
push
sub
jns
add
cmp
and
mov
adc
std
rorb
cmp
mov
lods
add
and
xchg
or
sahf
or
test
and
int3
mov
push
std
or
mov
loop
int3
adc
pusha
fisubrl
fnstsw
mov
stos
pop
fistl
movsb
mov
pop
daa
dec
pop
and
loope
mulb
roll
mov
pop
xchg
jae
mov
sub
out
push
inc
lds
shl
data16
mov
aas
in
aaa
cli
or
imul
test
xlat
sub
mov
mov
jg
adc
cltd
int3
xor
frstor
push
sbb
pop
fwait
inc
stc
cmpl
cmc
and
or
inc
cmova
jbe
mov
in
fmulp
sub
add
xor
push
mov
mov
fsubrs
out
sub
in
inc
std
inc
ds
push
dec
bound
adc
sbb
add
xor
loop
stc
lea
call
cs
scas
mov
adc
push
hlt
loop
in
mov
mov
iret
jno
out
insb
int3
cli
insb
push
sbb
xchg
or
out
adcl
fisubrl
outsl
mov
push
subb
or
ja
mov
pop
lea
fbstp
xor
enter
sti
mov
iret
dec
lret
popa
jne
je
popa
lds
dec
bound
subb
imul
cmp
push
pop
pushf
add
stos
fbld
or
testb
cld
daa
arpl
sub
sub
sbb
les
cmp
cmpsb
cs
mov
pop
and
mov
leave
push
jle
mov
jnp
mov
pushf
push
addr16
iret
and
sahf
clc
and
iret
dec
test
data16
jge
jnp
pop
mov
push
add
sbbl
jns
data16
out
mov
movsl
sub
bound
enter
inc
aas
cmp
inc
mov
inc
cmp
xchg
or
push
sub
mov
xchg
or
movsb
mov
pop
mov
push
inc
cmp
mov
mov
cmp
scas
xchg
js
andb
adc
pushf
repnz
daa
push
add
pop
into
mov
dec
int3
dec
push
mov
or
cltd
imul
jne
gs
mov
add
sub
dec
iret
dec
cld
add
mov
loop
sbb
hlt
pop
add
int3
mov
and
les
negb
mov
pop
push
mov
lods
push
cmp
add
and
adc
mov
addl
mov
insb
pop
xlat
push
xchg
inc
xchg
sbb
repz
mov
dec
stos
loope
push
mov
loope
sbb
mov
test
ret
pop
mov
dec
pusha
inc
jg
pop
lahf
aam
enter
pop
dec
mov
sbb
enter
inc
push
jp
jo
mov
stos
btr
mov
mov
lds
into
cli
test
daa
leave
dec
xor
ror
xchg
roll
insb
mov
sub
mov
and
cs
adc
loope
sbb
clc
jg
mov
out
xor
in
jl
jne
adc
cmp
inc
inc
testb
jmp
imul
adc
xchg
pop
test
inc
mov
mov
adc
mov
cltd
mov
rorb
nop
in
fldenv
vmovdqu
icebp
out
or
cs
or
ljmp
loopne
out
arpl
adc
cmp
orb
inc
imulb
adc
push
out
jl
xchg
shll
call
ds
mov
repz
sub
lahf
iret
xchg
pop
call
and
mov
repz
daa
xchg
jge
lods
stc
imul
cli
popf
add
xor
pop
dec
outsb
out
and
repz
scas
push
ja
notb
mov
or
sub
jb
repz
inc
lock
mov
xchg
lret
ljmp
fsubrs
jne
ret
mov
daa
ret
mov
cmp
stc
cs
or
test
mov
dec
cmc
jo
hlt
faddl
mov
mov
ret
adc
int
jmp
lret
movsl
insb
cld
fstpt
push
push
loope
mov
mov
xor
ss
lret
mov
or
jno
lret
leave
shll
gs
dec
jbe
bound
xchg
mov
mov
add
daa
fldl
pop
rcll
pusha
sar
shrd
clc
mov
lock
roll
lods
ror
sbb
ror
ret
pop
shrb
sahf
xchg
or
sub
movsl
arpl
xchg
out
inc
sbb
pop
mov
test
ljmp
inc
leave
mov
stos
out
push
aas
jecxz
mov
jge
sti
pusha
cmp
shlb
xchg
sarl
cmpsb
push
in
rcrl
pop
mov
add
pop
or
les
push
xchg
lods
fldenv
mov
ret
dec
mov
fiaddl
idivl
push
dec
cld
xor
daa
mov
or
mov
les
cs
out
ja
inc
insb
pinsrw
lcall
js
push
xchg
adc
in
push
decl
in
ljmp
lea
inc
adc
fdivl
jp
pop
sub
jns
pop
mov
dec
or
mov
int
jns
pushf
sbb
xor
mov
dec
cmpsl
int
pop
lock
push
test
loope
jo
mov
jl
sub
pusha
sub
les
aas
inc
mov
popf
jae
scas
sbb
pushf
dec
inc
insb
aaa
clc
popf
scas
mov
add
pop
div
stos
jmp
pop
call
xchg
push
enter
sbb
cmp
mov
and
out
jne
inc
cmc
call
test
test
add
fmuls
mov
into
dec
push
pop
pop
xchg
push
mov
add
fdivrl
push
adc
mov
mov
or
jae
popa
outsb
and
cli
mov
sub
mov
cli
add
int
imul
xlat
jecxz
mov
nop
test
mov
addb
mov
lcall
bound
and
sub
pop
jg
std
sbb
push
dec
adc
in
fldl
mov
push
subl
inc
xor
cltd
push
sbb
arpl
repz
inc
in
scas
inc
clc
cmpsl
mov
sub
inc
out
daa
mov
adc
push
mov
aaa
and
mov
xlat
add
jle
mov
in
jae
cmc
out
mov
sbb
adc
push
push
inc
push
dec
cmp
jmp
lds
shrb
mov
push
or
cmp
xchg
xor
aam
mov
lret
loope
repz
xor
xchg
shl
mov
shrb
arpl
insl
loope
notl
xchg
fistps
gs
sbb
push
push
xor
mov
rcrl
dec
xor
or
add
cwtl
pushf
push
fst
xor
leave
icebp
or
fstpt
lock
fstps
mov
outsb
jge
jmp
push
idiv
pop
test
sub
push
icebp
dec
out
repz
pusha
testl
aas
pop
iret
and
pop
cmp
dec
mov
push
pop
cli
sbbl
or
push
cmp
pop
arpl
fcomip
ds
or
sbb
lds
or
dec
repz
dec
out
int
fnsave
pop
sarb
ror
mov
jno
aam
mov
jle
shll
add
fstl
je
add
ja
sub
mov
sub
inc
adc
lahf
in
lahf
jno
push
dec
cmp
pop
dec
mov
add
cld
cwtl
jnp
xor
push
std
outsb
add
pop
ret
and
clc
mov
sub
insl
pop
push
push
lea
mov
scas
mov
push
test
enterw
push
int3
out
popf
dec
inc
dec
cmp
je
cmp
pop
xor
inc
shl
mov
mov
sub
dec
sbb
push
bound
push
xor
mov
sbb
cltd
xchg
inc
sbb
aaa
mov
cmp
xor
and
jns
push
cmp
xchg
decb
adc
add
xchg
leave
sti
lret
test
dec
loop
mov
stc
xchg
xchg
xor
rorb
pusha
pop
testl
in
ljmp
outsl
imul
jg
ud0
pop
push
sub
mov
and
jg
test
xor
push
xor
push
push
mov
pop
mov
push
mov
loop
jno
push
jae
dec
ret
pushf
aad
cwtl
adc
mov
pop
std
dec
aam
test
aaa
sub
xor
push
mov
sub
rcrb
mov
mov
cmp
fwait
and
dec
pop
lahf
cmpsb
mov
nop
out
xchg
dec
lret
shll
inc
imul
cmp
shrl
repz
in
nop
cltd
shlb
push
test
and
mov
imul
pop
pop
jp
jne
dec
jnp
test
jo
pop
sbb
test
or
lds
pop
lea
mov
insl
cltd
fisubs
inc
in
xor
insb
enter
add
adc
stos
dec
dec
mov
cmp
mov
in
add
and
pop
inc
xor
rol
mov
jnp
mov
sbb
mov
xor
cld
es
cmpsb
test
adc
roll
push
rcl
mov
pop
mov
push
int3
jmp
xlat
mov
push
icebp
xor
aas
imul
add
jl
jns
jo
inc
mov
jge
stos
add
cli
xchg
movl
test
je
fs
mov
sub
fbld
daa
add
add
pushf
cld
pop
test
and
movsb
movsl
cs
cmp
in
cmpl
cmp
cltd
push
cmpsb
aas
pop
repz
test
mov
scas
xchg
push
push
inc
sahf
cmp
jo
lock
cmp
imul
sahf
ljmp
push
add
lock
stc
and
push
xchg
dec
das
adc
jne
adc
jns
dec
xor
sub
daa
js
hlt
loopne
xchg
push
push
or
inc
adc
hlt
jno
inc
xor
incl
test
fcmovnu
dec
mov
test
ret
imul
mov
movsl
enter
mov
sub
xor
mov
int
pop
daa
cmp
jae
adc
fcompl
push
repz
mov
jo
js
call
ja
fldenv
jb
push
dec
pop
dec
pop
cmp
sbb
jnp
out
xchg
sahf
push
ret
or
xchg
lret
gs
adc
or
ja
mov
fdiv
jl
pop
xchg
inc
scas
int
mov
add
xchg
mov
xacquire
sbb
cmp
add
out
ss
or
ljmp
fs
xchg
adc
test
fidivrs
sub
mov
jecxz
movsb
and
lret
fwait
or
jb
inc
push
test
jbe
cli
inc
xchg
bound
fldenv
stos
pop
cld
adc
xlat
xor
xchg
cmp
cmpsb
mov
push
jns
mov
xchg
cltd
push
sarb
xor
or
or
push
stc
in
jae
clc
sbb
xchg
ret
adc
fmuls
aam
leave
sbb
mov
shll
xchg
negb
sbb
xchg
and
cmp
jns
push
data16
mov
push
mov
mov
aam
pop
lods
cli
ret
inc
push
in
icebp
sbb
imul
adc
xor
jnp
int3
leave
adc
or
mov
sub
divb
and
mov
and
jge
xor
dec
cmpsb
ljmp
mov
pop
xor
daa
jmp
xchg
sub
shll
loop
rorl
mov
mov
in
xor
xor
xor
push
sub
sub
shll
pop
or
popa
inc
dec
jg
xor
cmovp
mov
cmp
push
pop
mov
je
fldcw
popa
je
mov
insl
xor
mov
aad
shl
daa
inc
popl
sbb
pop
movsl
outsl
xchg
mov
repz
negl
call
hlt
push
or
inc
data16
aad
or
int
add
push
xchg
dec
in
enter
pop
sub
mov
jne
pop
ss
fsubr
xchg
adcb
xor
mov
push
aad
add
mov
test
cmpsl
cld
mov
inc
lods
data16
ret
je
jbe
setns
mov
mov
push
fistpll
jnp
test
xchg
imul
cltd
std
dec
xor
in
push
aam
mov
jmp
push
cmpl
ss
mov
push
pop
mov
sarl
pop
dec
rcr
lret
ljmp
mov
push
jns
out
fnsave
out
test
push
es
push
cmp
ret
ficoms
sbb
imul
adc
stc
xor
andb
int3
fbld
movsl
sahf
push
arpl
adc
jp
loopne
xor
idivl
hlt
std
sbb
push
cmp
push
fstl
test
xchg
dec
adc
cmp
stos
test
fwait
mov
and
jns
test
mov
icebp
in
push
sbb
lret
mov
push
push
nop
mov
in
push
icebp
ja
and
fcoms
stos
scas
jge
inc
mov
fstps
jl
lds
hlt
add
in
mov
cmc
mov
jb
fwait
inc
mov
icebp
or
xchg
fmuls
and
mov
push
sbb
sti
adc
cmp
insl
xor
fistpll
test
jno
sbb
neg
mov
adc
mov
mov
es
cmc
pop
push
cmp
mov
subl
jmp
jno
in
int3
rorb
pop
sti
push
sahf
add
subl
xor
xchg
mov
sub
pusha
sbb
inc
out
pop
and
cltd
addb
xchg
jno
hlt
add
into
dec
or
add
repz
push
sahf
push
mov
notl
mov
mov
out
xchg
adc
test
aas
jmp
sub
jmp
imul
fdivl
lret
xor
lods
xor
test
jmp
jnp
ret
sbb
push
stos
les
jmp
imul
hlt
and
mov
mov
loop
iret
cs
inc
xchg
loop
push
aas
push
sub
mov
in
adc
jle
xchg
adc
or
movb
add
in
sbb
jno
jns
data16
mov
jb
inc
adc
xor
fs
and
leave
sbb
lods
popa
das
ja
lods
stc
fs
das
xchg
repz
js
div
push
cli
jmp
shl
mov
test
data16
lret
mov
dec
and
out
jecxz
test
sub
rcl
hlt
sbb
lods
sub
es
sub
adc
xchg
xchg
int3
pop
add
and
shrl
lods
mov
loop
gs
dec
dec
cld
cmp
outsb
loop
push
ja
shrb
pusha
rcl
fldt
aaa
mov
leave
fcmovu
push
sub
jnp
fimuls
xor
test
repnz
int
inc
mov
push
dec
jle
mov
xchg
aaa
sub
mov
sbb
ficompl
adc
jnp
or
xchg
xlat
std
ds
mov
lcall
lock
sub
daa
ds
xor
test
lcall
sub
sahf
or
outsl
stos
mov
fcmovnb
push
gs
rolb
int3
addr16
rdtsc
adc
mov
jmp
aam
jge
stos
pop
leave
jmp
stos
xor
jns
scas
inc
push
add
sub
jg
lock
movsl
dec
out
mov
dec
dec
pop
stos
sub
lods
ret
push
add
std
sbb
in
daa
imul
in
sbb
jb
inc
sbb
decb
inc
or
pop
add
xor
adc
sub
and
pop
and
jecxz
push
mov
xchg
xor
xchg
mov
repz
jb
pop
mov
lcall
xchg
sbb
xor
in
and
mov
and
pop
jns
mov
fdivl
dec
adc
lock
cld
scas
les
sbbb
cmc
fmuls
inc
or
mov
push
std
xor
push
imul
mov
and
stos
inc
mov
inc
pop
int
and
adc
cmpsl
das
insb
sbb
shlb
adc
clc
dec
mov
mov
stc
rcl
hlt
mov
push
add
pop
test
mov
or
sarb
out
out
repz
inc
and
lds
sub
inc
push
and
out
pop
dec
outsl
sbb
sbb
add
jb
jge
enter
lahf
insb
push
mov
push
mov
xorl
std
pushf
cmp
add
inc
lods
lods
leave
cmpsb
mov
dec
pop
cmp
je
jbe
arpl
mov
mov
clc
divb
mov
sarb
iret
lods
pop
push
test
data16
inc
mov
xchg
add
push
inc
decl
dec
shrb
test
aaa
dec
push
repz
dec
mov
mov
repnz
mov
adc
push
lret
lret
movsb
adc
dec
out
fwait
movsb
data16
ljmp
sbb
mov
popf
ja
bound
cmp
bound
dec
outsb
popf
vmwrite
repz
adc
push
iret
and
sub
xor
push
or
into
add
jl
and
or
dec
push
ret
clc
repz
loop
xchg
push
jnp
or
ljmp
aas
cmp
out
jb
or
sbb
mulb
or
push
nop
lods
sbb
and
xchg
mov
scas
xor
pop
jo
mov
sub
pop
icebp
cs
jnp
push
lcall
out
jo
int
mov
xchg
and
cltd
add
inc
add
into
fstps
push
shll
xchg
pop
pop
notl
lret
mov
jle
push
add
mov
push
dec
sub
dec
shr
pop
popf
push
std
addr16
lret
lods
xchg
sbb
fadds
loope
fistps
mov
sar
jbe
push
cmp
add
repz
mov
cmpsb
push
in
or
stc
push
and
sbb
and
out
xchg
shlb
xchg
aad
mov
sbb
push
mov
jnp
js
xor
dec
xor
fcmovnbe
mov
aaa
sbb
leave
sahf
fsqrt
aam
data16
jae
pushf
ficoms
lea
nop
loop
xor
mov
or
push
sbb
or
adc
jecxz
jle
popa
popf
les
inc
fiadds
and
fsubrl
jecxz
xor
pop
cmp
push
sbb
bound
jae
sbb
mov
mov
clc
scas
mov
jg
cmp
fwait
ss
pop
push
movl
pop
jmp
sbb
loopne
add
push
xor
mov
out
mov
push
insl
repz
push
sbb
mov
pop
mov
jbe
mov
pop
mov
jp
lock
inc
sbb
dec
notb
fmuls
cmpsb
sub
jecxz
outsb
vmread
scas
jge
gs
jg
out
sbb
push
loope
in
je
arpl
in
nop
sub
sub
push
enter
lea
movsb
add
cltd
pop
jge
push
jecxz
sub
pop
adc
pushf
fists
mov
cmp
cmp
out
mov
jle
xor
push
jecxz
jl
mov
jo
xor
arpl
add
cmp
mov
sub
outsl
stos
iret
outsb
jbe
pminsw
gs
cmpsb
loopne
push
push
cmp
pop
push
pushf
xor
jmp
sub
mov
nop
pop
out
sti
xor
jae
cltd
in
int
into
pop
mov
fcmovu
das
js
adc
push
sti
fstpt
fiaddl
into
lods
cmc
inc
mov
xchg
sarl
ret
mov
outsl
rclb
pop
stos
inc
cmp
in
jne
outsb
and
mov
inc
fucom
add
cmp
fstps
cmpsb
mov
clc
pop
cmp
push
jge
movsb
rclb
jae
xchg
inc
fs
mov
jmp
rol
cmp
jmp
les
cmp
xchg
sbb
movsl
ja
mov
loop
call
incl
push
dec
push
jo
fisttps
inc
push
adc
jmp
jmp
lret
clc
or
mov
stos
sahf
fcomp
and
sub
pop
data16
shll
sub
inc
cmp
push
lahf
sti
mov
fcmovne
jle
cmpl
xchg
inc
jecxz
jne
push
xchg
push
stos
insl
jmp
lea
and
xchg
and
dec
jns
std
mov
shl
hlt
mov
xchg
mov
mov
xchg
or
out
test
push
add
in
fs
addr16
mov
imul
insb
out
inc
fcoms
sahf
sti
cld
cmc
cld
pop
sbb
xor
push
inc
xor
sub
cmp
xor
sarl
in
std
imul
dec
cmp
pushf
sub
lock
push
push
inc
shll
mov
push
add
inc
push
aas
dec
outsb
mov
jmp
negl
mov
mov
mov
xor
and
pop
or
mov
icebp
mov
lods
out
out
push
mov
out
add
xchg
aam
adc
push
repz
inc
cmc
std
dec
dec
mov
sub
add
push
jl
push
test
dec
ret
shlb
cs
sbb
leave
outsl
aam
iret
popa
push
pop
leave
xchg
push
into
lock
js
mov
and
jle
push
mov
pop
inc
in
pop
mov
in
sbb
test
movsl
insb
sub
cmp
xlat
mov
xchg
jge
dec
and
jmp
out
out
rol
push
outsb
popf
mov
adc
push
out
je
fisttps
xchg
jae
jg
xchg
add
in
jg
out
das
xchg
sub
dec
shrb
xor
aas
jnp
push
adc
sub
mov
scas
cmp
cs
mov
add
movl
jle
jno
xor
add
idivl
in
pop
mov
mov
mov
cmp
jae
inc
pop
cld
xchg
es
cltd
xchg
shlb
mov
or
push
or
in
push
fcomps
icebp
or
lcall
stc
sub
fs
call
mov
popa
cwtl
or
mov
mov
fsubp
leave
addl
dec
add
xor
or
inc
iret
mov
mov
std
sbb
jns
pop
ja
fucomip
shr
into
xchg
negb
xchg
jae
popa
pop
lods
jbe
sub
xor
dec
in
cmp
dec
in
jge
fiaddl
fldcw
jg
jl
xchg
fwait
mov
js
sub
mov
or
xlat
or
adc
outsl
addl
push
fdivs
lret
test
aaa
sbb
int3
push
and
stc
dec
dec
subb
mov
leave
rcll
cmp
idiv
dec
fs
mov
inc
jp
sub
ret
cmp
xchg
sbb
push
pop
sub
and
mov
ds
pop
and
pusha
aas
xor
outsb
xchg
stos
fstpt
or
sbb
push
cmp
sbb
pop
out
ret
gs
sbb
jmp
jnp
mov
cmpsb
jmp
scas
loop
js
in
xor
xchg
or
xor
mov
rcrl
pop
inc
xchg
mov
in
mov
fucomip
xlat
fisttpll
int3
sbb
mov
jecxz
pop
cmc
ret
push
xchg
cmp
lock
push
pop
gs
adc
jnp
lret
pushf
xlat
out
js
sbb
xchg
ja
repnz
cwtl
test
out
insb
ljmp
inc
push
popf
cmc
aam
loope
mov
jmp
push
cwtl
dec
sbb
jg
in
movsb
mov
cmpsl
pop
adc
leave
or
cltd
mov
out
mov
inc
jmp
push
dec
out
xlat
and
test
xor
inc
popl
push
dec
das
into
or
loope
outsl
pop
cmpsl
xor
cmp
fnstenv
je
cmp
cmp
incb
inc
dec
dec
std
or
stc
pop
movl
cmp
call
sub
inc
outsb
xor
imull
call
pop
enter
pop
sarl
push
mov
imul
shrb
cmpsl
fcmovb
shrl
mov
dec
call
out
push
cmp
mov
cmpsb
testb
enter
out
movsl
dec
lea
jg
cmp
fcomps
jmp
fwait
sbb
xor
icebp
pop
inc
dec
pop
shrl
aaa
pop
ds
loop
xchg
jno
movsb
aas
lods
roll
ds
divl
pop
js
sub
sub
or
add
pop
sbb
jbe
addl
fstpl
xor
cmp
scas
mov
adc
add
jb
pushf
pop
mov
cli
xor
mov
mov
lds
mov
dec
rclb
mov
push
sbb
jae
frstor
lcall
cld
jg
mov
mov
ja
xor
mov
push
jecxz
fcmovnb
call
add
mov
ds
add
jbe
and
lret
mov
adc
dec
inc
lock
lds
dec
mov
hlt
ja
scas
sbb
jg
fsubr
cmp
call
pop
sub
xchg
dec
das
sbb
adc
push
lea
jl
movsb
mov
das
mov
aad
adc
sbb
in
pop
sub
mov
jmp
mov
fwait
dec
xchg
xor
std
jmp
scas
fwait
pop
pop
jg
cltd
fwait
int
sar
andl
fstp
lods
call
enter
xchg
and
out
and
stos
scas
imul
jge
out
xor
and
adc
pop
mov
sub
je
sub
cmp
movsb
pop
mov
daa
xor
add
xor
imul
or
cwtl
dec
sbb
push
cmp
sub
sbb
fisttpl
push
and
aas
mov
mov
div
jmp
pusha
push
sub
inc
sahf
xor
jmp
jl
mov
enter
aad
lock
push
dec
shll
push
inc
lret
xor
cld
pushf
out
sahf
and
mov
lea
std
divb
pushf
mov
jb
jmp
or
mov
cmc
aam
lahf
cmp
xor
fs
cmpb
ret
dec
mov
pusha
enter
inc
and
and
mulb
mov
xor
push
repz
insl
cmp
adc
andl
or
dec
xchg
jns
mov
gs
cmp
mov
xor
adc
shr
pop
cmc
xchg
out
and
push
leave
addr16
aaa
mov
das
lret
cmp
scas
leave
sbb
xchg
arpl
mov
in
ja
les
add
stos
negb
push
fldl
fcmovne
fwait
jno
cld
dec
mov
xor
into
add
jb
adc
lods
pop
pop
ret
mov
push
dec
mov
mov
mov
adc
sbb
dec
icebp
in
stos
xor
mov
or
mov
fsts
cli
lahf
ror
and
scas
mov
imul
lcall
add
mov
mov
lods
jb
sub
adc
fnstenv
xchg
rcrl
adc
adc
into
cmc
xor
and
loope
mov
lods
lods
mov
sbb
push
mov
mov
sti
cwtl
frstpm(287
fcom
mov
movsb
push
shrl
mov
lahf
sbb
test
rorl
xchg
imul
rcrl
jae
xor
and
call
cs
jo
cmp
dec
xor
imul
hlt
test
outsb
lea
pusha
dec
aas
cld
or
mov
lds
andl
out
jnp
cwtl
xchg
pop
xchg
add
add
push
add
lods
mov
add
imul
aam
or
mov
stos
mov
adc
aaa
ficompl
push
jae
push
lods
mov
aas
push
mov
lahf
sahf
js
icebp
pop
lret
cmp
lahf
repz
xor
aam
inc
les
mov
je
lret
ds
adc
mov
adc
jnp
fcoml
fcom
fcoml
add
dec
mov
push
cvtdq2ps
mov
insb
test
dec
mov
test
mov
inc
fmuls
cmpsw
ss
sbb
jmp
push
push
js
pop
arpl
push
sub
xchg
sub
lea
xchg
sub
out
punpckhdq
adc
push
sbb
dec
ds
mov
pop
push
loope
cmp
fstl
mov
mov
jae
xchg
or
cmp
xchg
and
mov
push
inc
mov
mov
mov
leave
adc
adc
aas
xor
out
daa
popf
push
neg
test
stc
psubusb
loopne
fwait
sbb
sub
add
jle
jmp
fcmovne
and
int
fmull
and
in
rclb
inc
lret
ss
lods
xchg
call
and
cmpsb
loopew
roll
cltd
xchg
cmp
jns
xchg
or
in
mov
lcall
aad
out
cmp
xor
scas
pop
xor
cld
mov
es
mov
jns
xor
and
punpckldq
adc
pop
pop
mov
ss
cmp
jne
idiv
xchg
push
mov
insl
pop
mov
sbb
xchg
cmp
sbb
std
insb
adc
inc
xor
out
std
pop
xor
dec
mov
imul
jp
xchg
cli
iret
or
lret
xchg
push
mov
xor
decl
inc
test
stc
mov
push
and
ret
cmc
add
pop
mov
xlat
and
rolb
dec
jmp
xor
inc
mov
mov
pop
fisubrs
xor
notl
push
jae
imul
pop
push
cmp
adc
inc
addr16
loop
pop
or
add
push
mov
cwtl
into
or
aam
or
xchg
push
roll
ja
aad
hlt
into
jmp
xlat
test
stos
mov
fdivrs
xchg
inc
or
mov
outsl
iret
push
mov
inc
rorb
pop
mov
andl
inc
jge
hlt
ror
jl
in
gs
sbb
add
int3
push
out
mov
in
push
arpl
arpl
jge
shll
testl
add
push
add
pop
fwait
enter
cs
mov
mov
mov
rcll
cmovae
jp
cmovl
loope
adc
dec
loop
lret
dec
jge
sub
xorl
mov
in
adc
mov
rorl
mov
into
pop
pop
xchg
inc
cmp
or
test
ret
mov
mov
pop
jmp
int3
shrb
xchg
jnp
adc
data16
inc
xchg
repz
clc
mov
daa
fisubl
sti
fcoml
xor
out
cmpl
lods
test
rorb
push
popa
add
divl
mov
inc
adc
sub
pop
dec
std
push
mov
lock
jo
aam
sahf
xchg
or
and
mov
ja
stos
loop
jbe
pusha
scas
scas
out
mov
stos
or
mov
pop
mov
pop
test
xor
xorl
xchg
add
loope
mov
or
xorl
hlt
cmp
scas
or
stos
call
cmp
shrb
xchg
xor
xchg
push
loop
lds
or
jg
mov
mov
pop
mov
arpl
and
stc
adc
hlt
mov
sbb
out
stos
cmp
in
arpl
fs
xor
out
dec
xor
icebp
nop
jge
and
jne
push
les
cmpsb
mov
jg
fstpt
xorl
pop
mulb
pop
mov
repnz
xchg
out
push
rorl
xor
jecxz
jg
inc
int3
shrb
loop
arpl
add
mov
mov
xchg
xchg
leave
dec
cmc
lahf
fwait
or
je
push
cmp
mov
mov
bt
movsl
fdivl
push
movmskps
shrb
xor
jnp
daa
les
or
pop
aam
repz
cmpsb
push
xor
cmpsb
push
push
push
roll
mov
mov
cmpsl
adc
jnp
mov
xor
jbe
xor
stos
jns
add
sub
push
mov
andl
push
cltd
scas
mov
std
or
jmp
inc
pop
cld
mov
mov
pusha
add
xorb
enter
leave
js
pop
jmp
scas
mov
andl
mov
stos
pop
outsl
xchg
push
jns
inc
leave
mov
nop
pusha
cld
push
pop
outsb
jne
push
cli
sbb
mov
cld
or
add
sub
stos
inc
pop
or
int
loopne
aam
inc
dec
cmp
add
mov
dec
lcall
test
rolb
cmp
or
jno
sbb
stos
cmp
ficomps
jle
fdivrs
mov
mov
ret
add
or
cmp
arpl
cld
out
lock
inc
push
pop
popw
fs
fs
mov
xchg
addr16
popf
test
aam
xor
lods
std
in
jp
outsl
dec
cmp
dec
in
xchg
stos
sahf
xchg
xchg
cmpsb
xchg
jmp
push
lret
popa
ret
call
push
jae
imull
shrb
cmp
rcl
stc
fcompl
int
gs
and
scas
arpl
stos
add
rcrl
and
xor
inc
div
adc
push
pushf
or
fidivrs
cwtl
mov
or
cs
shrl
push
add
int3
mov
outsb
push
dec
int3
xchg
fsub
and
test
add
sti
push
xchg
cltd
fimuls
sbb
mov
mov
add
scas
inc
and
add
sub
push
inc
mov
je
andb
into
cmp
outsb
mov
push
add
data16
mov
divl
cmp
cmp
sbb
iret
mov
out
xchg
cs
xchg
cld
add
in
movsb
inc
iret
popa
or
sbb
sub
mov
in
pop
dec
mov
decb
jg
out
mov
cmpsd
dec
add
dec
gs
int3
or
add
xor
je
fxch
push
fidivrl
sbb
aaa
mov
mov
mov
imul
scas
mov
fcoml
mov
pop
repz
jo
shlb
lods
and
xor
push
push
mov
inc
ja
jmp
or
les
jb
or
jg
xchg
inc
xchg
push
mov
lods
movsb
inc
bnd
sub
jmp
adc
iret
rcrb
sbb
jg
sbb
or
lret
ret
iret
sub
mov
inc
int
pop
rclb
mov
xchg
flds
sbb
pop
or
popf
mov
les
xchg
std
pop
daa
jge
push
div
dec
cmc
cld
dec
divl
ficoms
jbe
pop
or
in
arpl
sti
lret
rolb
orb
push
mov
cmp
ja
out
cmp
jns
call
clc
sahf
std
out
shr
inc
cmp
or
mov
cli
inc
mov
push
inc
pusha
addl
adc
fbstp
lcall
lcall
out
inc
int
add
cli
inc
mov
push
imul
mov
lret
xchg
clc
mov
ljmp
and
int
xchg
or
arpl
jp
mov
sbb
mov
pop
cmp
push
leave
fdivs
addr16
xor
fdivl
es
mov
stc
adc
pop
mov
sbb
ds
mov
mov
in
mov
add
mov
sub
jg
ret
jle
fstpl
out
jns
rcll
and
mov
fimull
and
add
mov
lds
out
lods
int
pusha
mov
mov
sub
xchg
scas
mov
sbb
rep
movsb
test
lds
sub
in
push
lock
mov
hlt
fwait
xor
mov
outsl
mov
add
adc
mov
mov
xchg
mov
jnp
jnp
stos
jl
xor
ja
fidivl
jge
cmpsl
fcmovb
shll
inc
inc
or
enter
nop
mov
cmp
mov
outsl
scas
pop
nop
mov
xlat
icebp
cld
or
pusha
shl
xchg
outsb
mov
lahf
sub
test
xor
mov
cmp
or
enter
mov
sti
cltd
cmp
jne
add
call
jp
mov
aas
mov
mov
mov
fs
cmp
push
sarl
imul
fstpt
mov
jb
adc
aaa
sub
arpl
push
or
sub
jb
rcrl
add
mov
out
aad
push
lea
les
mov
ror
and
pop
sbb
xchg
sbb
fdiv
add
sub
mov
dec
xchg
popa
arpl
jns
pop
bound
or
push
mov
xorl
insl
cmp
fildl
jecxz
push
adc
iret
es
test
jecxz
or
lea
inc
push
nop
adc
leave
fdivl
adc
cmp
scas
ss
aam
ds
add
popf
dec
fsts
fcoms
or
jne
or
dec
and
lods
sub
sub
pusha
adc
pusha
dec
nopl
iret
in
or
or
inc
mov
xchg
mov
fists
sbb
adc
icebp
mov
cs
imul
push
jns
rcrl
xor
pop
repz
xchg
pop
mov
mulb
imul
ds
fnstcw
lods
sub
xor
std
lock
gs
es
mov
or
and
xor
add
test
push
ljmp
popf
xor
fidivrl
daa
mov
out
mov
js
icebp
push
push
add
jo
pop
adc
add
and
mov
mov
mov
pop
cmp
and
mov
or
mov
outsb
add
das
adc
movsl
add
imulb
arpl
pop
fcoml
pop
ds
in
xchg
cmpsl
lods
stc
movsb
fwait
test
fcomps
lret
les
out
int
adc
inc
loop
and
clc
repz
dec
lods
pushf
ret
test
clc
outsb
pop
xchg
xchg
add
xchg
jecxz
scas
jno
pop
xchg
nop
mov
stos
fwait
add
mov
icebp
cmpsl
cmp
mov
mov
hlt
pop
fadd
or
mov
cmp
pop
push
addr16
add
incb
clc
mov
test
push
aas
out
pop
inc
add
in
mov
test
loopne
xchg
imul
fdiv
imul
je
mov
mov
mov
pop
fisttps
adc
jno
xor
dec
stc
fbld
out
fidivs
jl
std
js
adc
jmp
arpl
bswap
movsb
into
shll
jno
jns
xor
ja
rolb
sbbb
in
adc
and
pop
pop
jl
mov
sub
imul
inc
fildl
imul
mov
cmp
jb
pop
mov
push
cmp
dec
outsl
mov
sub
or
test
lods
sub
cwtl
enter
mov
lods
lods
cmp
adc
scas
daa
enter
adcb
dec
mov
mov
jecxz
adc
inc
fdivr
or
xchg
sahf
repz
leave
push
daa
mov
push
xor
push
imul
push
insl
aam
adc
and
lret
mov
adc
dec
add
sbbb
and
enter
cld
xchg
cmpxchg8b
leave
ret
call
pop
sub
jo
jge
pop
pop
push
pushf
or
bound
pop
add
sahf
xchg
sbb
jecxz
aaa
xor
xchg
and
div
lahf
dec
lcall
jle
inc
negb
stc
inc
mov
jne
mov
push
push
adc
ret
iret
outsl
or
lds
inc
rcrb
dec
lods
sub
inc
mov
cmp
cld
push
push
fs
push
ss
popa
subb
adc
push
test
rolb
xor
push
fists
stos
lea
test
cltd
push
sbb
add
scas
pusha
stc
xor
pop
mov
popf
jo
jnp
lds
loopne
pop
lods
pushf
ret
loop
mov
pusha
gs
dec
push
and
cli
mov
push
in
aaa
xchg
xchg
jp
out
mov
mov
or
test
sub
jge
iret
dec
and
movsl
sbb
jb
repnz
ja
mov
cmpsl
and
cld
fistpl
add
mov
pop
sub
push
mov
jnp
jo
mov
and
jbe
mov
in
addr16
sahf
std
add
call
pushf
enter
xlat
jae
sub
aad
mov
push
xor
jge
hlt
movsb
mov
fucom
nop
add
mov
xor
or
pop
xor
movsl
jl
bnd
das
mov
pop
and
std
aam
stos
mov
sub
inc
add
jae
lock
test
in
sbbl
and
imul
iret
push
pop
cwtl
scas
pop
or
sbb
test
jo
aam
cmp
daa
pop
inc
rcl
lret
pop
fimull
cmpsb
fistl
adc
and
xchg
inc
mov
jp
out
xchg
rol
cs
dec
adcb
es
bound
and
mov
test
pop
push
cltd
inc
push
inc
xchg
dec
jg
adc
daa
mov
dec
add
push
rol
sarl
inc
je
mov
cmp
mov
pusha
xor
pop
jmp
sbb
imul
dec
lcall
sub
dec
ret
and
fcoml
jns
nop
mov
inc
lcall
jmp
mov
push
daa
xor
and
sarb
sub
sbb
cmp
mov
mov
sub
sbbb
add
xchg
aaa
in
addr16
mov
mov
adc
mov
jmp
out
inc
or
in
cs
das
aaa
data16
push
push
sahf
lahf
stos
inc
dec
shlb
mull
rorb
ds
lock
or
mov
xlat
adc
aad
call
iret
aaa
jge
and
ss
jb
movsl
sub
outsb
add
xor
stos
cmc
cmp
aam
aam
xor
push
int
xchg
ret
xor
sbb
dec
cs
ja
jecxz
inc
pop
pusha
ficoms
jg
ja
xlat
pop
add
mov
xchg
das
lea
js
insb
xor
lea
call
push
int3
out
cld
sti
insb
pushf
movsl
jle
test
jnp
mov
fldenv
popa
inc
jle
and
pop
mov
dec
adc
inc
inc
adc
jp
cmpsb
mov
insb
inc
out
ret
into
adc
mov
test
xchg
lock
fiaddl
dec
push
xchg
inc
adc
inc
mov
loopne
lret
xor
ljmp
mov
push
das
inc
les
and
dec
sahf
cmp
push
scas
pop
lea
out
mov
les
xchg
adc
add
fcoms
jp
xchg
push
pop
stc
mov
clc
sub
fidivs
out
jmp
pushf
stos
daa
add
pop
rcrl
inc
inc
rclb
outsl
push
fnstcw
loop
dec
pushl
xchg
test
mov
nop
test
xchg
mov
jge
jns
rcll
addb
popa
in
popf
sbb
jbe
xchg
loop
mov
into
push
add
push
pushf
icebp
ljmp
mov
fwait
mov
jecxz
cmp
cmp
fninit
sti
push
pop
cmp
sahf
xor
lods
xor
inc
mov
pop
bound
sahf
jl
stc
shll
inc
mov
cmpl
cmp
ljmp
rcrl
fisttpll
jnp
les
push
ja
outsl
movsl
cld
adc
pop
lcall
mov
lds
add
icebp
daa
fidivs
and
xorl
xor
jp
or
fistpll
push
jmp
push
rclb
insb
in
push
fwait
pop
mov
adc
enter
add
js
hlt
jp
cmp
jo
pop
adc
inc
mov
jmp
add
rcll
stos
daa
cwtl
enter
enter
stc
loope
das
fsubrl
subb
out
insl
xchg
jmp
aam
jg
daa
fdivp
xor
aaa
fildl
clc
popa
inc
mov
fldl
flds
fidivrl
lret
xor
dec
orb
fnsave
jmp
shll
mov
fdivl
mov
jmp
stc
sarl
cmp
mov
mov
jno
repnz
push
int
fs
sarl
arpl
jg
mov
jae
add
loopne
mov
jecxz
into
jg
adc
aaa
test
loop
and
ret
cmp
ret
adc
loopne
sub
rcl
cmp
jae
ljmp
movsb
xor
jmp
movb
jge
and
jg
out
lea
clc
xchg
mov
cwtl
pop
stc
or
sbb
mov
pop
and
or
pushf
mov
jno
mov
cmc
push
shl
or
or
inc
inc
in
ret
and
outsb
cld
ja
out
cld
xlat
mov
jmp
test
adc
mov
pusha
bound
je
push
mov
call
add
mov
and
xor
mov
dec
lret
sub
mov
cli
leave
inc
lea
iret
jb
sub
cmp
lods
into
test
lods
dec
and
cmpsb
push
fwait
repz
test
xor
jae
loopne
xchg
pushf
data16
xor
inc
or
insl
push
or
jle
inc
sbb
hlt
scas
dec
add
cmc
int3
xchg
notb
sarb
mov
xchg
int3
ds
xchg
xor
mov
aad
fsub
push
fbld
subl
sub
sbb
mov
in
xchg
push
movsl
push
mov
out
jg
into
jne
mov
loope
rcrb
scas
out
stos
and
jne
inc
cli
in
movsb
adc
or
in
out
jp
stc
and
mov
sub
and
sbb
je
jge
mov
out
push
push
jmp
fcompl
test
push
movsb
add
cmp
fistpll
or
sahf
ficoms
push
lahf
sub
jp
cmc
sarb
dec
mov
cmp
cmp
push
mov
and
mov
or
in
dec
popf
outsl
mov
adc
xor
enter
or
mov
fcmovb
pop
push
dec
mov
mov
fisubs
subb
je
pop
mov
jo
hlt
adc
or
push
pop
inc
dec
into
dec
ljmp
outsb
dec
sbb
out
aaa
and
pop
sbb
pop
adc
jno
scas
and
int
mov
bound
adc
popf
push
sub
mov
push
inc
adc
mov
add
push
jnp
xchg
sarl
push
jp
mov
jge
dec
xor
and
inc
xlat
inc
dec
xor
loopne
pop
movsb
jne
repnz
cltd
sbb
inc
test
ficoml
lret
push
jo
jmp
xchg
out
dec
jno
inc
test
lock
sub
sub
pop
pop
shrb
fidivrl
add
cmpsl
add
cli
pop
in
or
movl
loopne
push
mov
jmp
popf
icebp
test
stos
inc
mov
fstp
into
sub
pusha
adc
push
mov
and
and
push
sbb
ret
jecxz
inc
add
daa
ficomps
push
out
pushf
cmp
nop
ljmp
int3
xor
fdivrl
xchg
add
ds
rcl
inc
xchg
mov
fndisi(8087
stc
adcb
hlt
xor
inc
stos
test
outsl
or
cld
dec
sub
movsb
add
dec
cmc
imul
mov
and
fiadds
arpl
sub
subl
inc
pop
adc
test
xor
rcll
cwtl
lods
mov
es
jp
addl
int
push
xchg
or
cwtl
shlb
scas
adc
insb
push
das
mov
dec
lock
mov
and
push
jmp
push
dec
mov
stos
lods
inc
cld
das
into
jo
stc
fists
xor
test
nop
push
jmp
iret
cwtl
std
inc
outsb
xchg
mov
mov
movsb
aam
or
mov
jmp
lcall
dec
icebp
dec
pop
popa
inc
or
xchg
and
in
cmpsl
bswap
stc
insb
xor
and
daa
mov
cmp
mov
pop
repz
push
ljmp
mov
insb
ds
sub
divl
push
jbe
cmp
push
adc
add
sub
enter
push
rorb
push
jns
jp
in
xor
xor
mov
sti
in
cmpsl
pushf
jle
sarl
insb
mov
mov
int
sti
lea
cwtl
pop
mull
repnz
scas
sbb
shl
push
sub
sub
test
out
lds
adc
xchg
out
out
test
dec
cmpl
ljmp
jl
loopne
gs
mov
pop
mov
outsb
std
lods
add
cmc
and
mov
push
dec
inc
js
sbbl
ret
fwait
icebp
push
rorl
push
or
or
push
xchg
outsl
je
cmp
out
loop
push
sbb
call
lret
dec
out
jnp
or
ret
dec
fwait
idivl
mov
cli
loope
insb
jno
repz
pop
fwait
scas
mov
sbb
fsts
icebp
sti
cwtl
stos
pusha
test
inc
pusha
stc
rcr
out
test
mov
andb
call
cmp
adc
inc
xor
fwait
cld
lcall
sbb
sahf
jmp
mov
lahf
cmc
ja
inc
into
or
frstor
push
jmp
into
or
pop
pop
lea
add
xchg
or
sub
sbb
sarb
in
mov
xchg
es
xor
inc
sahf
jne
in
mov
je
std
outsb
jle
icebp
inc
or
fldl
cmc
frstor
out
xor
mov
inc
mov
lahf
xchg
cmp
xchg
sub
ret
push
aas
xchg
stos
imul
inc
addr16
int
fildl
icebp
push
in
jl
cmc
ret
mov
pop
int3
rolb
pop
xchg
jl
dec
aaa
pop
sahf
pop
and
sbb
movsb
sbb
outsb
xchg
inc
int
or
mov
ja
sub
out
popf
mov
jecxz
pop
lcall
fimuls
mov
mov
mov
add
movsb
jno
imul
scas
or
xor
js
shlb
fsubs
clc
or
add
daa
jbe
iret
js
cli
push
pop
add
mov
in
push
pop
mov
sub
push
dec
out
test
push
pop
idiv
clc
mov
mov
cmpl
pop
pop
ljmp
or
popa
pushf
mov
and
sbb
mov
xchg
test
enter
sub
dec
ds
jo
push
lahf
int3
popa
xchg
adc
mov
std
lret
ja
mov
and
push
jmp
inc
jb
stc
flds
pop
sbb
test
neg
iret
sub
incb
test
fmul
sub
xchg
into
repnz
sbb
dec
popf
mov
pop
lahf
add
arpl
dec
addr16
add
and
push
sub
out
jge
xchg
lods
xchg
insb
loope
mov
mov
pop
add
jno
lds
cmpsb
mov
push
mov
xchg
push
or
add
mov
enter
les
dec
dec
and
subb
lcall
rcrb
mov
scas
add
pushf
bound
decl
dec
or
sub
ret
lret
cld
xchg
lods
insl
cld
mov
pslld
inc
gs
inc
test
xchg
popa
mov
inc
cmp
mov
cltd
or
push
fsts
lods
test
aaa
mov
inc
sub
mov
out
add
mov
addb
sub
mov
rep
scas
ljmp
and
ss
add
mov
cli
and
and
out
lea
mov
imulb
pop
push
fdivl
into
stc
in
mov
aaa
dec
cmpsb
adc
mov
mov
ljmp
mov
icebp
jne
mov
lock
lods
pop
cmp
lahf
pop
arpl
mov
cmp
mov
mov
mov
adc
jne
loope
dec
push
jecxz
pop
call
and
arpl
lea
loop
insb
fnstenv
and
sub
cmp
cli
add
shll
or
or
sbb
mov
xchg
jae
cmp
cs
mov
sbb
jle
push
xchg
xor
cmp
push
shrb
arpl
xor
dec
sbb
inc
mov
pop
out
into
dec
add
mov
mov
xor
es
mov
cmp
xchg
adc
or
or
and
inc
add
mov
pop
flds
push
mov
mov
pop
mov
aad
nop
test
pop
pop
jbe
imul
loop
sti
loope
cli
arpl
mov
fabs
popa
test
xor
aad
aad
xchg
inc
mov
lret
in
lock
mov
add
xor
push
imul
sbb
test
push
or
cltd
xchg
sub
inc
and
pop
aam
loope
cmp
or
insl
loope
sub
pop
in
xor
push
jle
inc
fnstsw
shr
mov
add
call
sbb
jb
in
jne
data16
out
or
mov
in
aas
je
mov
cmp
xor
fistpll
and
jmp
shr
pop
cmp
int3
jne
adc
xlat
mov
rolb
and
inc
dec
and
push
stos
cs
arpl
inc
mov
and
and
into
shrl
call
push
xor
inc
xor
mov
cltd
add
and
push
jae
jge
xchg
mov
dec
cmp
mov
test
or
add
or
ret
xor
inc
cmp
dec
js
addr16
lods
inc
xchg
aam
das
aaa
dec
sub
ret
pop
push
add
or
insb
repnz
dec
enter
xchg
and
testl
or
sub
xchg
cmp
add
das
adc
pop
data16
bound
inc
cs
mov
mov
fcoml
mov
addr16
lea
adc
sub
repz
xchg
mov
adc
fwait
adc
or
fs
pushf
shr
xchg
dec
daa
mov
xor
stc
pusha
sub
fsubl
xor
jge
je
cs
in
lret
mov
popf
fs
fcomps
xchg
and
dec
inc
sbb
jle
les
sub
popf
or
inc
adc
jmp
xchg
and
je
add
or
xor
sti
add
mov
jbe
xchg
pop
mov
vpsrlw
rcrl
mov
arpl
into
add
lahf
int
shrl
fcmovbe
mov
push
push
mov
ud0
lock
push
lahf
and
inc
and
push
aad
nop
add
imul
stos
push
mov
push
sub
push
pushf
fwait
ljmp
mov
repz
aaa
mov
dec
mov
and
mov
xchg
stos
fwait
hlt
push
cmp
mov
jge
dec
imul
or
mov
dec
jle
and
adc
leave
mov
je
inc
mov
cwtl
or
into
popf
xchg
xor
adc
and
fstpl
inc
or
mov
stc
pop
mov
push
jns,pt
aam
ficompl
lods
jbe
xchg
sti
pop
imul
jg
insb
or
mov
test
fcmovbe
dec
pop
push
sbb
and
xchg
xor
jne
push
stos
int
xchg
out
xor
add
es
loopne
and
dec
icebp
xlat
and
sub
in
dec
cmpsb
sub
mov
xchg
pusha
out
mov
sub
in
xorb
aaa
mov
or
push
inc
lock
mov
dec
sub
enter
xchg
loopne
mov
lock
and
cwtl
push
aas
out
insb
daa
cmc
mov
cwtl
jl
adc
jl
mov
lock
daa
adc
or
cltd
push
adc
xchg
lahf
and
aad
insb
dec
push
loopne
or
and
push
ret
out
dec
ljmp
movb
cmp
icebp
push
mov
daa
and
push
divl
cmp
addr16
repz
test
jne
jp
push
push
sahf
and
int
push
in
xchg
arpl
enter
shrb
shl
push
push
cli
pop
subb
adc
in
orb
jb
test
js
sbb
add
fistl
mov
jns
repz
push
sub
out
sbb
sbb
xor
jecxz
pop
std
xor
ret
movsb
xchg
adcb
mov
jmp
xorl
or
pop
shll
sub
js
pop
scas
test
mov
cld
cmp
repz
int3
lret
popf
xor
rcll
outsb
leave
mov
jb
or
loope
cmc
and
dec
sbb
imul
cmpsb
loopne
stc
xlat
rorb
fbstp
and
ja
mov
hlt
jb
jbe
xor
or
xchg
imul
test
pop
and
cmp
mov
mov
int
js
push
jmp
push
dec
xchg
mov
xchg
lds
lods
sbb
fidivs
out
pop
stos
dec
pop
mov
push
aaa
mov
icebp
imul
scas
cmp
das
fcomi
inc
mov
pop
push
addr16
add
sub
adc
in
lock
lods
jae
mov
adc
mov
call
add
subb
addr16
adc
in
mov
sub
imul
push
test
xchg
mov
scas
ret
rolb
xchg
inc
add
jge
stos
cmp
mov
es
lahf
pushf
ljmp
pop
dec
stc
das
outsb
xor
insl
icebp
loopne
ficoms
shlb
imul
xor
test
cli
cmp
or
jbe
push
add
clc
jbe
out
cmpsb
push
xor
push
mul
outsb
cltd
sub
xor
addb
cld
pop
xor
nop
inc
int3
les
mov
dec
ljmp
dec
xchg
sysret
dec
adc
fcmovnu
in
cli
jecxz
aam
mov
mov
sti
jnp
ljmp
scas
popf
lret
repnz
sarb
push
nop
insl
adc
cld
int
aad
mov
lea
dec
and
pop
arpl
cltd
es
shrb
insb
push
loope
cmp
dec
push
pop
fwait
xor
inc
int3
xor
adc
sbb
movsl
sub
inc
jae
dec
shlb
mov
dec
push
lcall
sub
adc
daa
and
mov
inc
pushf
fsts
or
aaa
sbb
xchg
cmp
push
bound
xor
jp
mov
adc
outsb
mov
adc
popa
or
sub
jns
and
push
push
movsb
pop
xor
inc
mov
xchg
cmpsb
mov
in
fldenv
inc
jg
pop
or
cmpsl
add
in
hlt
sbb
mov
xchg
mov
movsb
ret
cmpb
bound
jno
sarb
xor
ror
gs
dec
dec
xor
inc
stos
pop
lret
mov
mov
je
pop
ja
ljmp
sbb
xorb
cmpsb
aad
lcall
sbb
dec
popa
into
inc
mov
stos
add
sub
or
decl
inc
in
jo
lcall
shll
adc
fs
sub
inc
dec
inc
loop
subb
les
cltd
push
daa
mov
lea
xchg
shr
xchg
lea
inc
in
ja
xor
and
xor
push
movsl
ffreep
xchg
adc
enter
lods
dec
test
dec
in
stos
jb
xchg
mov
xor
mov
dec
sub
dec
sbb
movsl
test
xchg
fwait
push
jbe
rcll
push
or
mov
cs
mov
jmp
inc
ss
jo
jge
cmp
mov
addb
jne
imul
bound
repnz
xchg
jge
sbb
inc
das
mov
mov
faddl
push
mov
add
mov
scas
sti
fidivs
subb
mov
test
and
fisttps
or
lea
loopne
mov
push
inc
imul
test
mov
add
sub
jle
fcomip
in
cmp
fldenv
mov
jne
or
out
adc
cmp
fistpl
repz
inc
sahf
push
mov
fisubrs
mov
pusha
push
cwtl
cld
push
xchg
cs
jge
mov
mov
push
jmp
pop
jmp
dec
push
sub
jmp
cmpsl
sbb
mov
pop
jle
pop
rclb
mov
sub
mov
fldenv
repnz
test
xlat
loopne
push
rcrb
or
pop
imul
sub
dec
arpl
xchg
call
repnz
movsl
jb
xor
retw
pop
movsb
inc
mov
stos
mov
xor
js
pop
cmp
pop
aas
mov
lret
mov
lods
mov
lret
xor
sbb
movsb
pop
xor
mov
and
xlat
int
sbb
imul
push
jp
pop
and
cltd
or
adc
or
xchg
cmp
dec
add
fdivrl
xchg
cmp
hlt
stos
xor
call
mov
and
sahf
cwtl
xchg
imull
fcmovb
mov
jl
loop
and
adc
cltd
or
flds
sub
cltd
out
enter
cmpsl
sbb
dec
jg
jnp
pop
std
xor
aad
jge
mov
test
sub
xchg
loop
in
mov
jns
stc
mov
mov
jo
ss
lods
rol
xchg
lret
or
popa
aas
rorb
jae
insl
lar
ficoms
adc
xor
lret
lcall
test
jo
adc
pop
dec
sbb
xor
jo
mov
lret
sbb
or
xor
mov
xor
roll
push
pusha
fidivs
pandn
mov
pop
vdivps
sbb
or
faddl
aas
add
jmp
loop
insb
xchg
mov
mov
test
es
pusha
jecxz
and
aaa
xor
popa
aad
mov
fld
sub
or
xor
loop
les
push
xchg
movsl
inc
sbb
inc
jne
mov
xor
je
out
mov
pop
mov
pop
pop
pop
imul
xchg
mov
and
or
lcall
pusha
ss
cli
out
sub
sahf
fnstenv
lods
jbe
sahf
aam
push
push
jmp
scas
sbb
fs
add
roll
cs
push
shrl
cmpsl
daa
sub
nop
mov
push
pop
adc
movsl
dec
cmp
aam
ljmp
push
enter
xlat
cld
shll
pop
shll
add
adc
loope
pop
gs
push
add
pop
adc
cmp
push
or
in
leave
mov
imull
nop
xor
cli
fisubs
mov
call
add
xor
add
add
bound
xor
add
add
add
inc
add
add
add
add
add
add
add
nop
add
add
add
add
add
add
and
inc
add
add
add
add
add
xchg
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
hlt
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
rolb
add
add
xor
xor
xor
cmp
xor
xor
bound
xor
add
xor
or
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
add
cmp
or
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
outsl
add
popa
add
add
add
add
adc
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
sub
inc
add
add
add
add
add
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
outsb
add
outsb
add
insl
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
outsb
add
outsb
add
insl
add
add
add
xor
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
popa
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
je
jne
je
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
insb
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
and
and
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
jae
gs
bound
push
inc
add
add
inc
add
add
xor
adc
adc
cmp
cmp
in
cmp
cmp
cmp
or
adc
sbb
and
sub
xor
cmp
inc
cmp
cmp
cmp
cmp
cmp
add
or
add
push
cmp
add
add
or
add
jbe
add
add
add
add
add
xor
fnstsw
lock
cmp
cmp
add
push
add
dec
add
add
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmpb
cmp
repz
cmp
aas
cmp
cmp
and
add
pusha
add
mov
cmp
mov
mov
int
aam
fnstcw
icebp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
outsl
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
movsb
cmp
mov
cmp
sub
ds
inc
ds
ds
ds
ds
ds
lods
adc
sbb
aas
inc
aas
dec
aas
dec
aas
insl
aas
xchg
aas
leave
aas
sarb
aam
fdivrs
fdivrl
loopne
in
call
jo
add
add
xor
inc
xor
xor
xor
xor
push
xor
push
jbe
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pusha
xor
ja
jl
mov
xchg
xor
xor
xor
xor
jmp
xor
cwtl
ss
ss
mov
fdivl
clc
add
sbb
and
cmp
aaa
pusha
aaa
data16
ja
mov
mov
aaa
add
or
xor
aad
call
cmp
arpl
jle
xchg
mov
lcall
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
aas
sub
cs
lcall
aas
add
add
add
xor
cmp
push
xor
xor
or
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
test
xor
adc
sbb
push
ss
ss
ss
ss
ss
ss
arpl
imul
jns
mov
sahf
movsb
lods
ss
mov
ss
shlb
loope
out
in
ss
ss
aaa
push
aaa
arpl
jno
mov
loop
mov
cmp
cmp
push
cmp
sarb
cmp
cmp
cmp
cmp
push
cmp
cmp
lea
fwait
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sarb
repnz
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jns
jg
pop
ds
ds
aas
and
cs
insb
aas
jae
cmpb
aas
mov
aas
cli
aas
add
add
add
push
xor
xor
xor
lret
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
lds
lret
adc
sbb
sub
cmp
mov
cmp
cmp
push
cmp
outsb
cmp
cmpl
lret
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
fwait
cmp
sarb
or
and
sub
ds
ds
ja,pt
mov
ds
out
outsl
aas
js
test
mov
aas
add
add
add
or
adc
push
xor
xor
xor
xor
fnsave
divl
or
inc
xor
xor
xor
xor
mov
aaa
xchg
test
cmp
cmp
cmp
cmp
jle
mov
idivb
cld
cmp
cmp
cmp
lock
es
pop
jo,pt
cmpb
cmpsb
ds
ds
add
adc
and
ss
pop
aas
sarl
aas
add
add
inc
xor
push
xor
xor
xor
pop
xor
test
pushf
xor
xor
xor
and
inc
xor
xorb
add
rolb
or
add
jo
je
js
jl
xorb
xor
enter
int3
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cwtl
cmp
test
lods
cmp
cmp
enter
sarb
aam
fdivrs
fdivrl
loopne
in
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
sub
xor
cmp
inc
cmp
push
cmp
pusha
cmp
insb
cmp
js
