push
mov
sub
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
in
sub
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
push
mov
sub
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
pop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
add
push
pop
mov
mov
pusha
call
add
in
sub
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
in
sub
push
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
in
sub
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
pushl
push
push
call
add
pop
lea
pop
mov
ret
add
in
sub
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
push
mov
sub
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
push
push
pushl
push
call
add
pop
lea
pop
mov
ret
push
mov
sub
push
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
in
sub
push
push
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
pushl
push
push
call
add
pop
lea
pop
mov
ret
add
in
sub
push
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
pushl
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
in
sub
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
in
sub
push
pushl
pushl
push
push
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
push
mov
sub
push
pushl
push
push
call
add
pop
lea
pop
mov
ret
add
in
sub
push
pushl
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
push
mov
sub
push
push
push
push
push
call
add
pop
lea
pop
mov
ret
add
in
sub
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
in
sub
push
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
push
mov
sub
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
pushl
push
push
call
add
pop
lea
pop
mov
ret
add
in
sub
push
pushl
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
push
mov
sub
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
in
sub
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
push
mov
sub
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
in
sub
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
in
sub
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
push
mov
sub
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
in
sub
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
push
mov
sub
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
in
sub
push
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
in
sub
push
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
in
sub
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
push
push
push
call
add
pop
lea
pop
mov
ret
add
push
mov
sub
push
push
lea
push
subl
lea
push
subl
lea
push
jmp
mov
jmp
call
pop
mov
xor
adc
mov
sub
popl
mov
mov
mov
mov
sub
push
pop
xor
add
lea
mov
dec
lea
mov
sub
popl
pushl
lea
pop
repz
sub
test
jne
mov
pop
ret
add
add
in
sub
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
in
sub
push
pushl
push
push
push
call
add
pop
lea
pop
mov
ret
push
mov
sub
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
push
mov
sub
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
in
sub
push
pushl
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
add
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
pushl
push
push
call
add
pop
lea
pop
mov
ret
add
in
sub
push
pushl
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
in
sub
push
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
jmp
ret
mov
nop
mov
sub
add
movzwl
rol
pushl
pop
lea
mov
push
popl
mov
push
pop
cmp
jne
jmp
sub
sub
je
add
push
pop
add
mov
cmp
je
mov
sub
jne
push
pop
jge
sub
mov
cli
lock
add
and
add
and
add
and
add
and
add
add
and
add
and
add
add
js
add
ret
add
add
shlb
add
test
add
xchg
and
add
and
add
and
add
add
add
and
add
and
add
and
add
and
add
add
add
add
cmp
add
sbb
add
shlb
add
add
test
add
xchg
and
add
and
add
add
push
and
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
add
add
add
pusha
and
add
add
insb
and
add
and
add
and
add
and
add
and
add
and
add
add
and
add
and
add
add
js
add
ret
add
add
shlb
add
test
add
xchg
and
add
and
add
and
add
add
add
and
add
and
add
and
add
and
add
add
add
add
cmp
add
sbb
add
shlb
add
add
test
add
xchg
and
add
and
add
add
push
and
add
and
add
and
add
and
add
add
add
gs
outsl
outsb
jae
insb
gs
add
inc
outsl
insl
insl
popa
outsb
fs
imul
inc
imul
arpl
insl
gs
imul
gs
jo
gs
jb
jns
add
je
je
jb
jne
dec
outsb
outsw
inc
add
push
gs
insl
gs
push
add
icebp
add
imul
jb
je
arpl
cmp
inc
gs
jb
outsl
jb
je
inc
insb
popa
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
xlat
add
je
imul
bound
gs
add
dec
add
arpl
inc
add
aad
inc
gs
gs
inc
imul
jb
popa
je
push
imul
push
gs
jbe
outsb
je
add
gs
outsl
outsb
jae
insb
gs
add
gs
outsl
outsb
jae
insb
gs
add
insb
jae
jb
outsb
push
add
dec
add
je
jb
arpl
jae
gs
jo
add
inc
gs
je
dec
popa
outsb
fs
add
roll
push
imul
jne
jb
inc
js
add
inc
outsl
jo
inc
imul
dec
inc
dec
xor
cs
insb
add
add
inc
insb
insb
push
imul
jb
gs
add
inc
insb
insb
push
imul
jb
gs
add
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
dec
dec
inc
dec
inc
dec
inc
push
cs
insb
add
add
jp
jb
inc
jb
add
and
inc
jb
jo
push
dec
push
je
jb
inc
gs
dec
addr16
xor
inc
insb
insb
push
outsb
jb
imul
jb
gs
sub
inc
jb
jo
push
dec
push
imul
je
add
add
jns
je
dec
push
imul
popa
insb
push
imul
jb
jo
push
dec
push
imul
je
add
add
popa
insb
inc
outsb
jb
insb
insb
add
add
push
imul
jb
gs
sbb
inc
jb
jo
push
dec
inc
insb
addr16
imul
gs
add
add
popa
insb
inc
outsb
jb
insb
insb
add
add
popa
insb
inc
outsb
jb
insb
insb
dec
outsl
inc
push
add
add
jp
jb
inc
jb
add
add
jns
je
dec
push
imul
inc
push
dec
add
inc
push
pop
push
push
push
dec
cs
insb
add
add
add
add
xor
add
dec
add
orb
add
pusha
add
sbbb
add
js
add
add
add
add
add
nop
add
addb
add
hlt
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
lock
add
add
add
add
add
add
or
add
adc
add
or
add
and
add
xor
add
add
add
add
add
data16
adc
add
sub
add
int3
add
add
add
add
add
add
add
add
and
add
add
andb
add
imul
sub
add
movsb
pop
scas
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
stos
mov
mov
lcall
jle
add
jp
lods
stos
lods
add
cmpsb
push
mov
mov
mov
ret
leave
lret
leave
lret
int3
rcl
in
rcl
shl
iret
iret
shl
into
int3
into
hlt
mov
out
in
mov
mov
lods
stos
lods
lea
cltd
cltd
and
jae
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
sahf
add
mov
mov
lret
not
rcl
cld
fcomp
std
fcomp
fcom
xlat
aad
rcl
sar
into
into
into
aad
dec
rcl
inc
ret
std
mov
mov
scas
iret
mov
mov
and
add
push
add
add
add
add
add
add
add
add
stos
lods
lods
add
scas
sbb
mov
jnp
mov
sar
mov
leave
lret
lret
rcl
aam
xlat
fcom
call
xlat
fdivr
aad
aam
int
int3
dec
int
call
aam
dec
into
int3
inc
sarl
mov
scas
scas
std
test
test
xchg
xchg
xchg
mov
push
pop
fs
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
push
add
inc
add
push
add
push
or
inc
or
sbb
push
add
add
add
add
or
or
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
leave
leave
dec
int3
into
call
rcl
call
fdivr
fcomp
fdivr
aad
dec
int3
into
dec
lret
lret
dec
int3
int3
inc
mov
mov
mov
mov
cmpsb
cmpsl
cmpsl
jmp
cltd
cltd
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
imul
bound
pop
fs
push
sbb
or
sbb
cmp
cmp
adc
push
pop
pop
add
add
add
add
gs
mov
pop
mov
mov
mov
mov
mov
mov
dec
leave
dec
ror
call
aad
call
rcl
dec
leave
enter
inc
mov
mov
ljmp
movsl
movsl
sahf
popf
pushf
cwtl
xchg
xchg
lcall
addb
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
bound
push
push
push
add
jo
jg
jl
jle
jl
jno
jo
arpl
mov
cmp
lea
inc
mov
outsb
outsl
outsl
nop
bound
pusha
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
leave
enter
lret
dec
lret
enter
ret
mov
mov
ljmp
movsb
mov
call
xchg
cwtl
xchg
xchg
fwait
fwait
fwait
in
addl
push
or
add
add
add
add
add
add
add
add
add
add
add
outsl
outsb
outsb
add
pop
or
jns
nop
fcoms
cmp
jnp
jl
outsl
jo
out
addr16
push
ret
jg
js
jp
arpl
inc
inc
inc
cmp
sbb
sbb
prefetch
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
test
lcall
xchg
incl
addb
xchg
xchg
lahf
lahf
lahf
sti
mov
cwtl
xchg
mov
jp
jns
xor
das
das
add
add
add
add
add
add
add
add
add
add
mov
pop
push
addb
in
movsb
mov
incl
xchg
std
mov
jg
jo
jno
jae
jae
jge
jle
addl
xchg
data16
cmp
es
jg
jle
cltd
fwait
cltd
lea
test
lods
sti
lods
lods
lods
lods
stos
stos
test
stos
std
movsb
movsl
movsl
std
lcall
decl
jle
js
js
jnp
jp
xchg
xchg
mov
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
test
sbb
add
add
add
add
add
add
add
add
pop
pop
adc
movsb
mov
call
test
test
mov
xchg
xchg
xchg
std
xchg
cwtl
cwtl
stc
xchg
xchg
xchg
in
mov
or
addl
mov
pop
pop
push
rdmsr
inc
inc
inc
dec
imul
test
xchg
leave
fwait
fwait
lcall
lcall
mov
mov
mov
mov
nop
lea
jmp
scas
mov
mov
mov
mov
mov
std
mov
mov
movsb
mov
jl
scas
stos
test
pop
pop
pop
adc
cmpsl
call
lcall
incl
mov
xchg
xchg
xchg
popf
pushf
popf
std
movsl
mov
mov
in
xchg
xchg
in
addl
jne
cmovp
add
or
es
dec
dec
dec
outsw
jno
test
xchg
xchg
rclb
xchg
std
mov
nop
call
lahf
sahf
jmp
test
pushl
scas
cmpsl
mov
test
mov
les
mov
mov
mov
test
cmpsl
jle
lahf
sahf
adc
add
add
pop
pop
adc
mov
jmp
popf
fwait
cltd
decl
mov
call
xchg
xchg
xchg
xchg
xchg
pushf
popf
pushf
mov
test
mov
cwtl
xchg
fstpt
jl
push
push
push
outsl
dec
dec
dec
popaw
pusha
popa
jne
jno
mov
lahf
test
int
lea
notl
mov
lcall
cwtl
mov
mov
mov
mov
jge
mov
mov
mov
je
mov
sub
mov
mov
mov
mov
mov
movsl
movsl
add
pop
pop
adc
mov
mov
decl
xchg
call
xchg
xchg
call
xchg
cwtl
cltd
fwait
cltd
fwait
lcall
movsb
mov
movsb
stc
cltd
xchg
lcall
mov
aad
xchg
cltd
in
xchg
xchg
out
xchg
mov
stc
xchg
mov
std
xchg
jle
cltd
jl
mov
ja
ljmp
jno
pushl
gs
scas
pop
adc
ljmp
pop
or
mov
inc
mov
mov
stos
pushf
movsb
mov
movsb
add
mov
pop
adc
mov
mov
call
xchg
xchg
lcall
popf
pushf
lcall
sahf
pushf
lcall
xchg
xchg
call
xchg
xchg
call
xchg
cltd
cld
popf
xchg
fwait
stc
lahf
pushf
fwait
stc
mov
vpshaq
insb
xchg
jno
xchg
insb
dec
cltd
gs
lcall
lahf
pop
pop
jmp
pop
adc
test
pop
adc
lods
pop
ud0
pop
adc
mov
adc
mov
adc
mov
scas
lcall
scas
lods
scas
mov
movsb
movsl
add
add
add
add
add
pop
pop
adc
mov
ljmp
cltd
call
pushf
sahf
lcall
mov
movsb
jmp
xchg
xchg
call
mov
decl
cmpl
cltd
jns
xchg
imul
pusha
cmp
decl
dec
adc
popl
call
inc
add
lcall
jmp
bound
pushl
addr16
pushl
push
and
mov
jno
inc
addl
mov
lods
scas
mov
mov
movsl
mov
add
add
add
pop
pop
adc
scas
scas
ljmp
cwtl
lcall
movsl
movsb
jmp
cmpsb
cmpsl
ljmp
cmpsl
cmpsb
lcall
test
mov
decl
cmp
xchg
mov
incl
cmp
test
push
incl
cmp
decl
aas
add
xchg
inc
add
lcall
jmp
gs
mov
daa
mov
jb
mov
ja
inc
jns
dec
jnp
inc
jl
dec
xchg
enter
mov
scas
mov
movsl
movsl
movsb
dec
mov
movsl
movsb
add
push
push
adc
stos
test
lcall
mov
stos
ljmp
lods
pushl
scas
scas
jmp
jle
incl
ds
xchg
incl
cmp
incl
add
xchg
add
lea
add
nop
ds
xchg
inc
add
cltd
inc
add
sahf
dec
add
mov
pop
adc
mov
jp
inc
cmpb
leave
cmpl
dec
xchg
call
mov
call
mov
rorl
dec
dec
stos
mov
ret
sarb
movsb
movsl
mov
add
mov
add
add
add
mov
dec
dec
adc
mov
lcall
cmpsl
test
lods
scas
scas
pushl
mov
pushl
mov
ljmp
jbe
mov
incl
inc
adc
mov
incl
ds
xchg
add
mov
add
xchg
aas
add
xchg
inc
add
sahf
inc
add
mov
dec
add
lods
push
add
inc
jl
dec
xchg
int
inc
call
lea
rcll
dec
call
xchg
dec
fistl
fsts
xchg
leave
ret
mov
mov
mov
lahf
sahf
or
add
add
add
add
dec
dec
adc
jl
mov
test
ljmp
mov
pushl
mov
pushl
mov
mov
movsb
xchg
mov
pop
aaa
decl
dec
sbb
dec
sbb
mov
decl
pop
decl
ds
xchg
inc
add
sahf
inc
add
mov
dec
add
test
add
mov
pop
inc
jae
dec
mov
xchg
push
call
xchg
push
fistpl
pop
jmp
sahf
pop
ficomps
pop
jmp
mov
pop
call
mov
dec
ret
mov
mov
jne
lahf
sahf
or
xchg
xchg
xchg
add
inc
adc
jbe
sahf
lcall
mov
lods
lods
pushl
mov
mov
mov
mov
ljmp
imul
push
and
call
dec
sbb
popl
call
inc
add
lcall
jmp
push
add
mov
add
mov
jl
fcomps
pop
jmp
mov
arpl
jecxz
fs
cmpsb
data16
call
lods
push
jmp
stos
data16
fnsave
mov
in
cmpsb
cmpsb
cmpsb
mov
mov
add
add
add
xchg
xchg
xchg
add
inc
inc
adc
jp
xchg
xchg
call
mov
lods
lods
pushl
mov
mov
mov
mov
ljmp
jo
call
pop
xor
fwait
pop
call
push
push
call
inc
add
cltd
inc
add
mov
dec
add
lods
push
add
mov
add
mov
add
shrb
rorl
push
jmp
lods
jo
out
jno
ljmp
in
mov
out
mov
out
mov
in
mov
jmp
mov
mov
repnz
cmpsb
lcall
sahf
add
jge
ds
adc
push
mov
cltd
fwait
xchg
lcall
mov
pushl
mov
mov
mov
mov
cmpsb
lcall
xor
lahf
cmp
sahf
addr16
mov
push
sbb
call
dec
add
mov
push
add
mov
add
mov
add
mov
jno
fstps
js
ljmp
in
mov
cmp
mov
test
hlt
mov
test
repnz
mov
aad
mov
sarb
cmpsl
pushf
pushf
sahf
daa
mov
lahf
sahf
add
add
add
arpl
cmp
pop
pop
jne
jg
out
test
xchg
xchg
xchg
pushl
mov
mov
inc
sarl
ret
pushl
subl
insl
inc
jmp
addr16
cltd
push
sbb
xchg
inc
add
pushf
inc
add
movsl
dec
add
test
push
add
mov
add
mov
fs
sarb
loopne
data16
ljmp
in
rorb
push
lds
push
enter
lret
test
fcmovne
mov
mov
clc
stos
lods
stos
mov
pushf
sahf
xor
sahf
add
add
add
inc
inc
add
xor
push
inc
inc
inc
jb
pop
push
in
push
decl
mov
mov
mov
sar
ret
inc
mov
nop
jl
popf
push
ljmp
jbe
jmp
dec
push
lcall
dec
add
test
add
stos
push
add
mov
add
mov
pop
add
enter
mov
jmp
mov
in
les
push
enter
enter
int
push
lret
pushf
stc
into
popf
cld
rcrl
cli
into
lcall
int
inc
mov
shlb
popl
lcall
add
add
sub
cmp
dec
dec
jecxz
arpl
nop
mov
mov
mov
mov
mov
mov
inc
mov
mov
mov
lcall
jns
ljmp
bound
lcall
inc
add
mov
push
add
mov
add
mov
bound
dec
fs
shll
fists
mov
hlt
into
movsb
push
shll
push
aam
cli
aad
sti
cmpsb
sti
fsubs
cld
fldt
push
rcrl
dec
lret
mov
mov
sahf
sahf
mov
add
lcall
xor
xor
sub
sub
inc
inc
inc
bound
push
xlat
je
jo
mov
mov
mov
ret
ret
ret
dec
leave
enter
sar
mov
push
ljmp
jns
lcall
dec
add
movsb
dec
add
stos
push
add
mov
add
mov
popa
add
int3
data16
xlat
insb
add
fidivrs
in
cmpsl
pop
push
into
lahf
cli
xlat
scas
sti
fsubrs
sti
fldt
std
loopne
std
loope
std
loope
std
in
cld
loopne
push
xlat
movsl
jmp
shlb
mov
mov
lahf
mov
xchg
or
add
add
xor
sbb
dec
ss
outsl
mov
aad
jmp
not
rcl
std
lret
dec
leave
lret
lret
leave
lret
mov
lahf
jmp
jle
ljmp
push
ud0
push
add
mov
add
mov
bound
call
push
add
loopne
add
call
mov
scas
cld
fistpll
cld
loopne
cld
loop
cld
loop
cld
in
std
in
std
jmp
sar
jmp
mov
call
into
leave
mov
mov
xchg
or
add
add
xor
xor
add
pop
or
leave
inc
loope
in
call
out
test
jecxz
leave
fsub
fcmovu
fcomi
fsqrt
std
int3
into
sar
mov
xchg
lods
jnp
ljmp
dec
add
test
add
mov
add
mov
arpl
dec
data16
imul
jmp
js
out
xchg
xor
test
mov
std
in
jmp
ljmp
jmp
leave
jmp
jmp
in
leave
cld
in
jmp
mov
ror
mov
mov
xchg
adc
add
add
incb
std
incl
std
std
add
hlt
testb
jmp
pop
in
in
out
sub
out
out
dec
call
out
xchg
out
ljmp
fcmovnu
jmp
mov
jno
cmpsb
outsb
cmp
mov
dec
add
test
add
mov
add
mov
bound
dec
data16
xlat
imul
loopne
add
jmp
mov
mov
std
out
jmp
ljmp
in
int
in
int
std
out
sar
out
sar
lock
out
sar
sti
out
out
fdivrl
inc
ret
cmpsb
cmpsb
test
xchg
xchg
xchg
sbb
fwait
lcall
add
add
incb
std
add
idiv
add
hlt
repz
repnz
in
lock
out
out
repnz
in
out
pop
loopne
loope
lds
jno
mov
dec
pop
jmp
push
add
mov
add
mov
gs
shrb
fldcw
jmp
jb
in
test
push
scas
pop
cli
fnstenv
std
ljmp
out
sar
push
sar
out
aam
icebp
push
push
push
fcos
std
repz
cld
in
sar
hlt
loope
jmp
dec
lret
stos
test
fwait
xchg
xchg
xchg
and
xchg
cwtl
add
incl
clc
cld
cld
add
cli
sti
add
hlt
cmc
or
rcl
xor
mov
cltd
push
sbb
lahf
dec
add
test
add
lods
push
add
mov
arpl
dec
addr16
shrl
fldt
jmp
jns
out
mov
clc
mov
ret
in
fcos
push
push
push
lock
std
hlt
push
push
push
loopne
std
hlt
loopne
std
repz
out
sar
repz
jmp
loope
call
ror
clc
lods
stos
lods
lods
xchg
xchg
xchg
jo,pn
outsb
add
add
mov
add
ret
leave
sbb
lods
xchg
jnp
lcall
jmp
push
add
mov
arpl
dec
addr16
imul
fidivs
call
xchg
sub
cld
leave
nop
std
jmp
push
fdivrp
std
icebp
std
icebp
icebp
fcos
push
fdivr
lock
std
in
aam
cli
ljmp
stc
jmp
int3
push
in
out
fdivl
call
fdivr
mov
mov
fwait
cltd
cltd
cmp
lcall
add
add
into
xlat
add
ret
adc
scas
cltd
xchg
popf
pop
sub
lahf
dec
add
test
pop
add
mov
bound
call
push
add
loop
add
jmp
pushf
xor
cld
out
cld
out
cli
out
clc
jecxz
push
loop
push
loopne
push
fnstsw
out
fdivrl
ljmp
std
jmp
faddp
imul
in
cmc
fnstsw
fucomip
mov
mov
xchg
add
add
add
enter
mov
mov
loopne
gs
mov
push
add
mov
add
mov
fs
int3
imul
shrl
fidivl
jmp
sbbb
out
dec
call
shlb
out
mov
loop
scas
cld
fmulp
scas
cli
mov
fmul
mov
ljmp
leave
fsubp
fcmove
shl
fst
out
fidivs
lock
popf
jmp
leave
lret
stos
lods
adc
cmpsl
cmpsl
cmpsb
add
les
mov
rol
mov
popf
aam
jb
pushf
push
sbb
test
sbb
scas
imul
std
mov
addl
lea
lcall
shlb
cmpsl
out
mov
aam
mov
lret
rcl
leave
mov
ror
mov
xlat
aad
jg
fcmovnu
jb
gs
jecxz
out
jmp
xor
div
mull
repnz
fcmovnu
or
mov
into
add
add
add
roll
roll
scas
les
test
mov
mov
and
mov
xchg
sarb
mov
mov
mov
mov
mov
lret
ror
into
addr16
iret
push
rcl
rorb
xlat
xlat
inc
aam
xlat
xor
fcomp
daa
xlat
sbb
fcmovnu
adc
loopne
push
loope
call
pop
jmp
repnz
idiv
add
cld
std
add
incb
incl
mov
mov
shrl
mov
mov
mov
lods
xchg
mov
mov
mov
mov
ret
rol
rol
xor
lret
int
lret
iret
shll
rcl
aam
rcl
aad
rcl
or
aad
push
rcl
flds
xlat
fldl
fcomp
fiadds
fsub
in
in
jmp
leave
int
add
incl
mov
mov
add
rol
ret
les
sarb
sbb
mov
ret
mov
push
mov
add
lret
int3
add
iret
aad
rcl
fadds
rcl
add
xlat
add
aam
add
fcomp
add
aam
add
fnstsw
add
add
jecxz
add
repnz
std
add
std
add
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
xor
add
add
add
add
add
add
lods
in
sbb
out
fcos
or
sub
sub
jle
inc
fst
lahf
inc
fcom
mulb
repnz
mulb
dec
sbbb
inc
jge
jbe
mov
xor
out
mov
inc
sbb
fdivl
cmp
cli
xchg
enter
ret
scas
sbb
add
insl
and
mov
loopne
or
fistpl
or
nop
daa
sub
pop
xchg
xor
aam
dec
push
cs
orl
mov
adc
push
and
push
ja
stc
test
dec
in
leave
adcb
les
sbb
ss
pop
mov
dec
outsl
mov
inc
pushf
ret
hlt
mov
cli
xchg
inc
adc
jge
push
add
xchg
mov
and
cmp
pop
jae
nop
pop
pop
testb
jge
fldl
inc
ss
fwait
xor
pop
into
mov
push
xor
push
and
movsl
stos
inc
xlat
pop
adc
sub
into
gs
dec
xor
andl
nop
js
or
xchg
leave
sub
adc
inc
ficoms
push
cld
cmpsb
ja
sbb
lret
cld
sbb
pop
iret
insb
rcrl
loopne
and
loope
add
push
jne
call
enter
xchg
jmp
sub
ljmp
loope
mov
adc
daa
lods
cs
pop
sahf
jns
dec
jecxz
fwait
and
add
sub
xor
inc
fimuls
jg
subl
pushf
movsb
popf
xor
mov
mov
cmp
cmp
or
add
pop
mov
mov
outsl
jne
mov
ret
hlt
popa
pop
xchg
adc
in
out
shlb
pop
add
xchg
psrlw
mov
test
fldl
sahf
push
sbb
mov
mov
rorl
mov
cltd
out
dec
shll
les
shl
push
popa
clc
inc
push
pop
out
aaa
push
jbe
mov
xchg
sub
adc
lret
push
les
leave
loope
sti
loopne
dec
push
xchg
movmskps
imul
jl
shrb
iret
sbb
jg
aaa
into
push
mov
push
in
movsb
repz
cmp
clc
inc
les
sbb
jns
insb
mov
sahf
in
add
repnz
mov
adc
test
cmp
shll
xchg
loop
icebp
adc
js
or
cmp
xchg
sub
mov
mov
or
test
loop
shrb
add
xchg
rorl
movsl
add
fbstp
and
std
xchg
das
js
loope
push
sbb
sti
mov
xchg
dec
hlt
push
out
and
inc
jne
js
ret
pop
cmc
cltd
xchg
sub
push
loop
dec
in
mov
push
push
xchg
fwait
aas
iret
data16
push
mov
xchg
in
test
push
cmp
mov
xchg
aaa
sub
push
mov
mov
or
mov
mov
aam
filds
repz
sarl
test
fnsave
das
xlat
jns
xchg
stos
clc
dec
in
int
mov
dec
imul
pop
cmp
push
popf
mov
iret
jno
in
mov
les
inc
lds
xchg
sub
jecxz
enter
pushf
jmp
iret
lock
mov
adc
test
cmp
mov
adc
jns
arpl
dec
loopne
test
decb
test
sub
push
add
scas
push
ret
lret
sbb
fbld
cmp
push
cld
push
popf
sub
sub
int3
stc
cltd
inc
fxch
push
jb
dec
jmp
pop
and
aaa
mov
les
fwait
dec
adc
pop
dec
hlt
cli
xchg
and
cltd
inc
movsb
cmp
and
jae
adc
add
pop
and
pop
cltd
inc
cld
xchg
jb
insl
icebp
xchg
sbb
inc
out
adc
add
gs
and
mov
pop
mov
fstl
inc
mov
xchg
sub
fildl
add
sub
int3
arpl
inc
in
jae
push
jmp
lcall
mov
shlb
fildll
or
mov
pop
test
mov
mov
int
cli
dec
mov
jnp
loope
dec
xchg
mov
ret
push
xchg
jecxz
sbb
in
subl
cld
gs
push
jecxz
ret
pop
cmc
cmp
lahf
push
cmp
mov
hlt
cmp
scas
push
pop
lock
sbb
rorb
hlt
cmp
subl
gs
sbbl
aaa
adcb
ss
loop
mov
imul
xor
xor
mov
data16
out
mov
pushl
inc
fsubl
call
mov
cmp
loope
insl
mov
push
jmp
xor
cmp
push
fidivl
mov
lods
inc
push
pop
lock
testl
pop
mov
pop
repnz
xor
aad
sub
sbb
mov
sbb
cmc
cmp
imul
popa
mov
cmp
hlt
cmp
std
xchg
pop
mov
mov
clc
cmp
or
jecxz
pop
scas
clc
cmp
outsl
push
pop
mov
add
repnz
cmpsl
jo
stos
inc
pop
mov
xor
hlt
cmp
sbb
mov
or
mov
fstps
xor
xor
adc
shrl
repz
sub
jae
add
and
adcl
push
in
add
push
call
dec
mov
movsl
cmp
dec
jge
adcb
add
lret
xlat
or
js
adc
inc
xchg
lea
ficomps
pop
xchg
pop
add
mov
xchg
inc
fiaddl
lea
pop
pop
testb
mov
rolb
adc
sbb
fcoml
adc
je
push
movsl
cmp
test
mov
std
xchg
hlt
jo
sbb
jle
and
jns
hlt
stos
sub
cmp
cmpsl
ds
jg
out
sbb
lods
bound
mul
push
lods
inc
xchg
xor
bound
addr16
out
mov
es
inc
fmul
mov
push
loop
xchg
sub
xor
cmp
mov
rcr
je
pop
js
xor
pop
fsubrs
jg
scas
mov
testb
or
fdivrs
daa
sub
pop
pop
pop
jbe
jns
pusha
stos
lods
push
sbb
incb
mov
and
test
dec
mov
ret
clc
icebp
pop
daa
and
push
inc
push
in
ja
pop
scas
cmpsb
xchg
int
enter
imul
mov
dec
dec
cmp
mov
movsl
nop
xlat
outsb
mov
pop
repnz
dec
pop
push
testl
cwtl
xorb
out
shlb
into
pop
or
movsl
cmp
pop
cld
xchg
lea
xchg
stos
test
mov
std
xor
pop
repz
push
sbb
cmpsb
mov
add
div
lcall
dec
mov
add
sub
jecxz
adc
xor
idivl
mov
xchg
icebp
fucomp
push
mov
lds
inc
pop
cmc
js
adc
sbbb
jns
out
shrb
clc
in
subl
lret
push
inc
flds
scas
ss
fdivrs
push
stc
fidivl
xor
mov
mov
sahf
xchg
sub
fsubrs
lds
sub
pop
ss
arpl
lods
movsb
mov
mov
mov
jg
das
data16
pusha
mov
sbb
mov
xchg
sub
jae
cmp
lcall
ret
mov
rcrl
add
insl
add
sub
pop
adc
and
jne
and
iret
je
add
les
sbb
dec
adc
mov
add
sahf
shlb
cmp
icebp
and
mov
dec
je
in
movsl
imul
int
scas
cli
lret
cld
sbb
dec
sbb
shl
lahf
outsl
pop
hlt
pushf
mov
xchg
jmp
or
adc
popa
hlt
mov
mov
daa
mov
cmp
testl
jg
and
ret
fsubs
icebp
or
jnp
jns
pop
lock
ja
sbb
cmpsb
orb
outsl
ds
pop
lock
pop
mov
rolb
mov
jmp
lahf
xor
push
mov
mov
cld
xchg
fdiv
lods
inc
and
inc
lret
bound
cmp
scas
in
inc
cmp
pop
push
mov
xchg
stos
data16
pop
xchg
insl
sbb
xchg
mov
int
daa
aad
add
mov
shl
adc
sub
mov
cmp
mov
sbb
call
adcl
cld
repz
xor
push
les
enter
dec
enter
adc
scas
sbb
stos
inc
pop
cmc
jno
mov
push
aad
daa
int
iret
jmp
std
jg
push
lea
data16
sub
stc
dec
and
xor
push
dec
mov
dec
sahf
mov
mov
mov
push
adc
mov
addl
test
fildl
xor
sbb
in
in
xlat
out
cli
int
loop
in
js
push
aaa
cmpsb
ror
filds
push
add
das
ss
add
cld
pop
and
and
inc
cli
xor
fcmovu
cmp
mov
movsl
pop
cmpsb
sub
out
fimull
cmp
mov
lock
and
push
lret
imul
or
lods
cwtl
daa
outsb
push
daa
add
repnz
dec
out
mov
sbb
scas
stc
pop
xor
mov
jns
sbb
dec
and
stos
fnstcw
push
fsubrl
pushf
pop
mov
pop
pop
cmpsl
jne
ljmp
out
scas
xchg
cmc
sbb
xchg
loope
xchg
incl
andl
mov
cmp
lock
stos
and
test
mov
or
int3
inc
out
popf
lret
insl
int
outsb
icebp
mov
push
sub
sub
lret
sub
insb
inc
ret
les
jl
cmovp
mov
inc
pop
lods
ror
icebp
add
js
and
pop
in
mov
out
inc
push
inc
xchg
fucomi
insl
outsb
xor
jae
xchg
push
mov
bound
loope
stos
aad
mov
and
sbb
pop
nop
lcall
popf
push
fdivr
cmpl
insb
mov
ret
ret
mov
lcall
test
fsub
mov
pop
jnp
pushf
lods
inc
and
std
pusha
out
out
xchg
jno
dec
jnp
mov
pop
push
add
add
pop
in
notl
movsl
inc
inc
cmpsb
sub
or
mov
mov
mov
mov
inc
add
es
mov
inc
cmp
pop
push
incl
pop
and
adc
lret
add
in
inc
orl
push
inc
stos
loop
mov
xchg
ret
and
xor
xchg
enter
lock
jl
lcall
movsb
inc
data16
js
mov
sbb
ss
sub
dec
in
push
aam
sbbl
sbb
adc
mov
mov
jmp
jmp
adcb
mov
cmpsb
cmp
ja
and
xchg
cwtl
dec
loopne
mov
pop
es
pop
xchg
inc
fdivs
mov
cld
and
inc
arpl
ja
je
js
in
jno
mov
lret
xchg
add
repz
mov
adc
inc
jae
repz
outsb
pop
hlt
scas
jge
adc
decb
imul
aas
imul
les
imul
jbe
cltd
repnz
std
xchg
movsl
adc
cld
sarl
aad
adc
pop
repz
pop
out
xchg
xchg
addr16
sbb
test
rcll
mov
mov
inc
shrl
jo
addr16
out
xchg
inc
out
test
in
movsb
adc
ret
cmp
jp
pop
cmc
rcrl
jl
sti
xor
std
sub
dec
jae
popa
fs
sub
outsb
lret
inc
sub
cmc
mov
inc
int
fdivrp
adc
enter
mov
stos
dec
out
mov
insl
add
sbb
loope
fimull
adc
ficompl
pop
into
mov
out
fisttpll
fwait
daa
ret
add
jae
and
lock
xor
push
sbb
pop
aaa
push
out
jb
pop
stos
inc
jge
pop
les
xor
xor
aad
lret
call
outsb
dec
sub
jg
imul
xchg
mov
mov
sub
int3
xor
inc
fldcw
shll
fistpll
out
jle
cmp
sahf
xor
mov
mov
push
sbb
fidivl
xor
outsl
push
xor
popf
mov
adc
or
xor
mull
daa
lcall
inc
mov
int3
arpl
mov
ljmp
into
or
rclb
mov
cmpsl
push
fdivrl
shl
icebp
push
arpl
sahf
sbb
test
mov
inc
fnstenv
fisubl
xchg
sub
push
push
sarb
jge
jb
test
stc
nop
mov
fsts
scas
stc
dec
clc
cli
adc
ds
and
clc
xchg
leave
inc
fidivrl
jg
out
push
call
arpl
mov
and
aad
jno
pop
stos
inc
lock
jno
inc
push
lods
mov
xor
lret
pop
and
push
jg
fcomp
sub
imul
out
test
add
xor
lret
lea
jg
xlat
fsubrs
mov
popf
xlat
mov
add
mov
jb
inc
flds
mov
outsl
push
add
outsb
add
popa
adc
inc
add
stos
inc
dec
sub
pusha
push
imul
push
xor
pushf
sbb
inc
xor
mov
loop
inc
fsubrs
pop
negb
mov
add
xor
jo
mov
or
fwait
xor
cmpsb
cmp
push
sub
mov
lret
sbb
cwtl
inc
xor
mov
insl
pop
mov
pop
ds
cld
cs
pop
repz
jecxz
ljmp
imul
test
shll
and
aad
cmp
dec
push
push
repz
out
andl
mov
call
add
pop
add
out
insb
add
ret
mov
mov
aam
aas
add
gs
pop
insl
mov
cmp
call
ret
pop
pop
cli
add
mov
adc
das
aas
cs
sbb
jecxz
lcall
mov
pop
lock
lods
cwtl
das
and
ja
xchg
dec
mov
add
and
ja
sub
xchg
stos
popa
shrl
into
push
movsl
rol
out
xchg
sub
jae
or
loope
subl
std
insl
push
loope
in
mov
mov
inc
fsubrl
lret
jmp
xchg
sub
je
idivl
inc
mov
int3
int
push
int
pop
sahf
cmp
subb
jbe
orl
hlt
cmp
xchg
push
sub
sbb
inc
fs
cs
pop
icebp
mov
js
cmp
mov
cmp
adc
pop
gs
je
mov
js
fdivr
xchg
ret
xchg
shr
sbb
aam
aaa
into
push
std
sub
dec
andb
imul
repz
loopne
lahf
ss
or
ja
ret
lahf
jns
ja
out
nop
aad
xchg
sar
pop
scas
testb
dec
xor
rcrl
pop
repz
inc
jno
lods
adc
cli
lds
pop
movsl
sub
cmpsb
cmp
mov
les
mov
loop
test
sahf
jp
lock
xchg
and
movsl
and
xor
repz
cmp
out
test
jb
insl
add
xchg
push
es
push
mov
daa
aaa
test
cmp
add
sub
shrl
jne
lcall
and
pop
sarl
sbb
fcomp
xor
hlt
pop
add
fwait
jno
adc
movsl
cltd
xor
pop
mov
jae
lods
inc
push
pushf
insl
lret
and
jno
in
mov
clc
popl
dec
push
jmp
add
inc
fcoms
mov
out
mov
outsb
add
push
fmuls
fwait
mov
push
popf
jmp
fsubrs
add
testb
sub
mov
pop
popa
clc
xchg
lods
ds
mov
dec
in
std
popf
xor
rep
add
test
fnstenv
jb
aas
rorl
call
add
fdivs
adc
neg
xor
outsb
icebp
jge
sub
inc
fwait
xor
mov
push
in
popf
xor
push
fsubrs
mov
testb
or
jle
insb
xor
mov
hlt
mov
mov
outsl
push
and
aas
fisttps
and
clc
pop
hlt
jl
stos
inc
jmp
add
popa
jge
cltd
xor
xchg
call
ds
add
pop
xor
stos
cltd
push
aam
push
mov
leave
mov
rclb
adc
and
dec
mov
mov
lahf
popa
pop
repz
aas
jp
push
dec
enter
mov
mov
out
mov
cmpsb
cmp
mov
shll
mov
and
inc
xlat
pusha
inc
xchg
pop
mov
aad
sbb
std
jl
and
cmp
lds
xor
out
pop
lock
push
mov
bound
sbb
sbb
xchg
push
xchg
sub
call
add
js
push
pop
repnz
int3
jns
add
sub
xchg
cs
dec
in
dec
loopne
push
aam
inc
hlt
addr16
xchg
outsl
repnz
jno
add
cmpsl
je
es
lahf
lds
dec
jecxz
jle
jo
dec
push
jne
clc
rcrl
push
lods
cmp
pop
inc
fstpt
push
stc
xchg
jno
or
rclb
es
sub
jne
cmp
xchg
xchg
sbb
sbb
cmp
in
sbb
cmp
inc
frstor
shlb
stos
xchg
sub
test
or
pop
and
sahf
dec
rclb
out
test
jno
jne
in
mov
xlat
xor
shrl
fcomip
push
sub
xor
sbbl
push
xor
cmp
bound
fs
xor
fildl
fldt
repnz
jle
pop
sahf
cld
pushf
adcb
sbb
dec
in
mov
lahf
insl
jno
cmpsb
mov
lcall
adc
sbb
enter
mov
daa
jecxz
call
and
jnp
subl
mov
out
adcb
or
xchg
cmp
mov
lcall
mov
and
fcmovnu
js
pusha
lods
std
pop
cmc
xor
hlt
mov
push
sbbb
and
mov
xlat
jae
shlb
fdivp
dec
fdivl
sbb
dec
sahf
cli
xchg
shrb
sbb
mov
int
adc
pop
inc
xchg
push
in
fs
xchg
out
or
jmp
or
mov
mov
loopne
adc
loopne
ljmp
xchg
mov
xchg
lds
test
dec
fisubrl
dec
jecxz
in
fbstp
nop
jb
int
add
adc
cmpsb
cmp
adc
push
out
gs
js
xchg
mov
ficoml
mov
pop
rolb
or
cld
push
aam
addl
daa
push
movsl
pop
lret
cld
jns
shrb
dec
out
jo
jnp
sbb
clc
cmc
jo
and
ret
mov
cmc
push
shrl
mov
out
test
mov
test
nop
push
sub
aas
mov
cmp
pusha
dec
loopne
add
pop
ss
jecxz
fbstp
add
sbb
fcoml
cmp
stos
ret
dec
cmp
cmp
ja
mov
sti
xchg
xor
adc
fiadds
aaa
cmp
add
jae
cmp
es
lahf
ss
inc
inc
fldl
mov
jmp
je
or
rolb
mov
sub
test
add
rolb
gs
inc
sub
imul
daa
cwtl
imul
jb
sbb
into
cmp
sahf
xor
mov
into
gs
rorb
shrl
loope
in
jp
shlb
icebp
mov
test
movsl
mov
filds
or
cmp
mov
add
jae
mov
dec
int
in
imul
push
mov
out
jb
bound
lret
imull
cmpsl
xchg
sbb
out
arpl
dec
mov
lds
popf
xor
mov
or
push
leave
pusha
mov
xchg
fldcw
mov
cli
dec
loopne
mov
popf
out
inc
push
in
jge
mov
mov
xchg
call
lret
lock
mov
dec
mov
adcl
add
lock
imul
inc
fdivl
aam
sbb
mov
add
cmp
adc
xchg
jge
std
cmpsl
mov
inc
dec
add
push
xchg
pop
jae
xchg
mov
cmp
out
xchg
add
ja
test
cwtl
sub
roll
and
loop
jns
pop
add
test
sub
filds
inc
fdivrs
loop
cli
sbb
sti
test
popf
movsl
inc
xchg
jbe
incl
icebp
sbb
nop
jne
fwait
xor
or
iret
xchg
jge
sub
xchg
cs
test
jbe
and
roll
in
subl
add
ja
dec
out
cwtl
dec
ffreep
mov
imul
cmp
pop
pop
xchg
sahf
mov
les
cwtl
gs
inc
fildl
adc
lahf
loope
pop
sbb
cld
xchg
sti
cmp
filds
sbbl
pushf
fbstp
aaa
call
or
xor
repnz
add
in
push
sbb
ss
push
stos
pop
dec
loop
lret
mov
ficoms
xchg
sub
outsl
ret
pop
xchg
test
cmp
loopne
add
cmp
clc
popl
test
mov
test
mov
sub
dec
loop
dec
mov
xlat
jne
push
sub
in
loop
icebp
cwtl
das
sub
loopne
push
mov
out
rcrl
or
mov
push
push
inc
les
ja
lahf
scas
fwait
arpl
ret
rcrb
or
inc
fistpl
sub
dec
push
inc
mov
xchg
les
mov
pop
inc
fs
jl
pop
scas
mov
les
jmp
enter
arpl
outsb
jl
cmpsl
nop
xor
lret
psllq
mov
push
dec
aaa
xchg
sub
addr16
xchg
xchg
and
loop
push
jmp
add
outsl
aas
cmp
jle
test
out
arpl
sbb
enter
cmp
push
pop
scas
mov
or
or
mov
and
and
jg
pop
repz
mov
mov
sbb
scas
jge
stc
mov
ret
cld
ljmp
dec
xor
mov
xchg
mov
outsb
mov
ficompl
in
es
out
pusha
pop
mov
or
mov
xchg
call
or
aas
xor
js
pusha
int
cltd
mov
data16
mov
adc
cltd
inc
cmp
ret
js
mov
ret
imul
inc
ficomps
sbb
clc
js
out
xchg
leave
imul
sub
dec
mov
and
mov
cs
mov
es
mov
subl
push
fdivl
lea
or
xchg
inc
dec
mov
andb
cwtl
mov
inc
fsubr
mul
jle
cmovs
cmp
lcall
pop
scas
enter
loopne
das
sbb
ds
out
pop
lods
inc
xchg
lea
mov
fistl
mov
mov
popaw
and
mov
cs
in
add
pop
cmc
xor
testl
lods
mov
cs
ret
pop
xor
dec
loop
pop
loop
addb
mov
aam
inc
paddb
daa
daa
shll
dec
jb
jbe
decl
push
pushf
in
and
pop
stos
dec
dec
lods
aaa
jns
cs
int3
mov
jmp
pop
push
idivb
shrl
and
xchg
mov
test
adc
loope
xor
mov
bound
scas
mov
sub
push
hlt
cmp
sub
inc
fildll
dec
xlat
jns
pop
in
mov
push
or
xchg
xor
sub
aaa
les
js
pop
test
testb
aad
popf
or
shll
sbb
lcall
aad
ret
incb
bound
adc
push
xchg
xor
bound
movsb
ret
mov
cli
out
repz
add
ds
and
jle
lea
xchg
push
hlt
into
mov
subb
add
inc
jne
mov
lahf
sbb
cmp
add
pop
dec
sbb
pusha
cltd
dec
test
andb
xchg
aad
out
mov
in
adc
sbbl
stos
aam
cs
mov
ret
pop
pop
sub
jne
dec
out
nop
fs
scas
xchg
and
mov
pushl
je
add
testb
es
aad
hlt
pushl
loope
add
add
test
lods
ja
push
popf
sarl
pop
lock
dec
dec
or
xlat
bound
mov
out
and
adc
int
nop
inc
idivb
shll
loop
in
xor
js
test
cmpsw
mov
add
sub
lds
mov
sbbb
mov
in
sbb
test
sbb
ja
data16
jb
mov
mov
lret
or
pushw
push
cmpsl
dec
mov
mov
addr16
test
sub
or
dec
repz
cmp
pop
push
push
dec
insb
test
mov
aad
xchg
add
dec
jo
jmp
mov
pop
fcomip
adc
insb
xor
push
fildl
add
xchg
mov
push
fsub
jmp
push
xlat
xor
add
mov
jne
jecxz
lea
sbb
mov
popa
jp
test
mov
neg
pop
and
xor
push
pop
enter
pusha
adc
clc
js
fwait
nop
and
shlb
and
lcall
jecxz
fs
lea
lret
push
fwait
add
dec
cmp
stos
push
mov
pop
loopne
cmp
cmp
sub
repz
testl
fidivrl
loopne
sti
and
std
dec
inc
fdivrs
test
push
lahf
arpl
shlb
cmp
icebp
sbbl
vmulss
inc
cltd
xor
xchg
ret
pop
leave
imul
pushf
ljmp
out
cmp
cmp
inc
nop
xor
add
adc
les
xor
xchg
sub
mov
js
fstpt
mul
sub
sahf
xor
mov
mov
outsb
add
repz
cli
xchg
jp,pn
lods
stos
dec
push
mov
int3
sub
std
mov
pop
icebp
dec
repz
in
and
pop
out
mov
ret
ss
xchg
and
inc
jmp
repz
mov
mov
movl
dec
in
ss
add
xchg
push
lods
ret
and
xor
inc
fs
push
ljmp
add
in
lds
push
mov
dec
cmp
leave
outsl
clc
inc
adc
push
add
aad
or
lcall
jl
nop
testb
daa
or
stos
push
sbb
pusha
sub
jmp
dec
mov
cmpsl
movsb
jae
test
push
pop
shrl
mov
push
add
movsl
pop
mov
cmpsb
adc
lods
and
lock
adc
dec
shrl
hlt
push
test
test
insl
fwait
dec
cs
lds
stos
int3
cmc
pop
inc
call
mov
pop
xchg
add
fnstenv
stc
cmp
in
mov
mov
xor
pop
xor
roll
test
and
xchg
je
xor
out
cmp
mov
xlat
clc
rclb
mov
jmp
rol
sahf
jmp
addr16
mov
jp
dec
cmp
popa
and
xchg
and
ret
ror
xchg
popa
mov
lods
clc
xchg
movsb
pop
and
aad
stos
push
movsl
xorl
fdivrs
rorb
loope
jbe
clc
test
and
cli
jge
int3
mov
pushf
xchg
sbb
decl
mov
js
icebp
and
xor
push
dec
lock
fwait
mov
xorl
out
pop
xchg
test
xchg
fsubr
mov
and
dec
pusha
dec
shl
cmp
rcrl
cmp
nop
pmuludq
mov
scas
cmp
inc
shlb
xlat
or
push
or
imul
cmp
pop
mov
repnz
push
pop
and
dec
dec
sbb
enter
cmp
jle
adc
imul
stos
frstor
xor
lea
insl
sbb
inc
loop
lret
mov
lahf
into
ret
push
gs
mov
dec
lock
pop
in
popa
xor
inc
data16
stos
pusha
push
mov
push
fists
or
sarb
ret
jle
pushf
in
sub
and
push
fsubrp
mov
jecxz
rep
mov
and
inc
mov
hlt
mov
mov
xchg
in
push
push
aas
in
or
leave
add
loop
movd
ljmp
jl
xchg
lretw
cli
xor
cld
inc
fstpl
mov
test
inc
push
into
subb
cmp
mov
mov
lcall
cld
mulb
or
js
cmp
mov
bnd
unpckhps
in
pop
sti
sarb
xchg
push
adc
sub
sarb
imul
mov
lods
ss
unpcklps
jb
inc
movsb
mov
mov
cmovnp
bound
adc
adc
jb
shll
xchg
stos
dec
add
scas
cmp
fisttps
xchg
dec
mov
inc
cltd
jb
and
mov
dec
repnz
xchg
ljmp
or
sahf
xchg
fisubrl
popf
and
pop
xchg
outsb
mov
int
fldl
fisttps
xchg
and
out
push
pop
and
add
bound
jmp
or
sub
repnz
nop
cmp
fists
cld
daa
scas
jp
xor
inc
addr16
add
loope
dec
insb
and
outsl
call
push
aaa
movsl
jae
cmc
outsb
cmpsl
cli
inc
loopne
ret
jg
inc
mov
add
sbb
dec
test
or
jle
mov
inc
mov
inc
add
jae
xchg
lea
pop
and
fsubs
adc
cs
mov
cmp
xchg
insl
outsl
outsl
ret
jb
push
and
ljmp
xchg
adc
clc
testl
pop
mov
int3
adc
jge
lea
xchg
add
mov
test
add
or
push
hlt
pushf
popf
xor
leave
clc
outsb
add
pushf
je
mov
xor
jbe
xor
bound
push
mov
adc
lcall
cmp
inc
inc
inc
xchg
mov
sub
clc
ficoml
jb
adc
and
iret
sahf
outsl
loope
xor
mov
pusha
stos
mov
js
xor
dec
pop
lcall
callw
push
imul
aas
add
fimull
outsl
pop
push
push
pushf
cmpsb
inc
cmp
and
or
fistpll
mov
push
pop
add
mov
cmp
test
xchg
mov
mov
lea
inc
and
into
ss
data16
movsl
xchg
lea
cmpb
or
adc
inc
sbb
push
push
cmp
gs
out
mov
cmp
or
aas
push
into
pop
mov
pop
lods
ljmp
jl
dec
and
adc
out
in
cmpsb
ds
loope
minps
out
push
out
ds
push
roll
inc
mov
aad
sbb
inc
pop
sub
jle
insb
mov
fisubs
js
nop
cmp
push
test
mov
outsl
pop
dec
sbb
lock
stos
adc
mov
add
mov
out
pop
xchg
popa
test
imul
out
push
adc
jg
rcl
test
aam
shlb
jno
mov
hlt
jp
mov
and
push
addl
add
imul
ret
out
cmp
sub
pusha
or
test
jecxz
ficoml
cltd
rolb
xor
cmp
and
call
cmp
shll
add
movsl
and
mov
or
scas
leave
cltd
loopne
xchg
push
movsb
mov
jno
aas
repnz
stos
dec
out
ret
inc
stos
out
add
scas
jns
inc
stos
aas
daa
mov
xlat
push
and
sub
xchg
add
xchg
movsb
lahf
les
lahf
adc
sub
mov
mov
lods
dec
adc
lock
scas
or
ret
js
sbb
mov
mov
jnp
btr
and
ja
adc
mov
inc
dec
dec
sub
repnz
in
mov
xrelease
bound
aas
inc
pop
int
and
popa
stos
iret
aas
pop
sbb
cmp
ffreep
sub
xor
add
addr16
sahf
les
loop
xor
and
xor
add
cld
lret
sbb
stc
inc
cltd
push
inc
mov
pop
aad
int3
pop
shll
dec
adc
bound
movsl
repz
hlt
xor
shrb
jbe
loope
mov
enter
xchg
aas
xchg
faddl
push
mov
and
jge
push
das
mov
or
dec
lret
jl
add
xchg
sti
aaa
and
cwtl
mov
mov
cltd
mov
xor
test
stc
push
sub
push
add
test
ss
mov
xchg
cmp
mov
adc
mov
addr16
inc
jns
mov
pop
jae
repz
add
mov
iret
fs
sub
mov
pop
mov
bound
cmpl
outsb
idivl
mov
cmp
jae
out
jge
stos
xor
movsb
xchg
mov
ds
dec
fisubs
fwait
repnz
movsl
xor
in
push
daa
sub
js
dec
out
xchg
call
mov
xchg
shlb
jae
in
mov
inc
xchg
xor
sahf
loopne
xchg
xor
push
jns
repnz
fs
insl
jmp
push
popf
aam
in
insl
or
sub
cmpsl
xor
mov
in
fidivrs
adc
leave
mov
pushf
xchg
int3
int3
xchg
int
push
sti
lock
inc
fidivrs
jne
xchg
daa
sub
mov
aaa
je
dec
into
enter
sub
mov
inc
push
cwtl
mov
mov
mov
test
out
mov
pop
cmp
dec
stc
push
add
dec
aad
push
cld
subl
xor
fisubrs
pop
mov
fstpl
mov
mov
sub
sbb
adcl
cmpl
stc
loope
pop
int
lock
rclb
adc
roll
inc
add
xor
xchg
std
adc
ret
stos
in
out
es
inc
cmpl
rcrb
adc
xchg
mov
outsb
and
jmp
xor
lea
addr16
in
push
inc
movsl
adc
cli
shll
jecxz
lea
pop
pushf
jb
mul
cmp
add
mov
adcl
sub
mov
cmp
std
mov
lock
push
xchg
mov
mov
cmp
jbe
and
mov
xchg
fs
lods
imul
iret
inc
mov
je
daa
add
outsb
mov
pop
iret
pop
hlt
inc
arpl
mov
mov
in
out
inc
push
leave
sar
cmpsb
fdivs
jae
sub
in
hlt
mov
xchg
fwait
or
cld
inc
aas
nop
push
loope
push
stos
into
mov
adc
call
scas
movsb
lahf
cli
cmpsb
sahf
ret
jmp
stos
out
pop
add
sub
push
inc
test
xchg
lea
cmpsl
jecxz
mov
pusha
push
scas
sarb
std
and
aam
and
nop
jecxz
jp
fisttpl
pop
and
mov
fistpl
in
fcompl
stos
add
bnd
or
outsl
mov
inc
daa
adc
cmp
xlat
stos
adc
sti
inc
adc
pop
cmp
pop
das
rolb
fnstenv
mov
mov
jg
stc
xchg
push
xor
test
sub
xor
add
push
xlat
clc
int3
sbbb
shll
sub
push
icebp
clc
imul
pop
gs
sub
lods
sahf
mov
mov
cmpsl
imul
jge
int3
xorl
fldcw
inc
loopne
adc
pop
jl
movsl
shlb
sub
std
or
ja
aad
insl
jge
inc
idivb
xchg
pop
pop
mov
cmp
out
push
test
mov
push
mov
dec
xor
imul
iret
repz
cmc
divb
mov
pop
mov
jp
or
popa
outsb
lahf
iret
rolb
dec
andl
pop
push
jl
pop
xchg
xor
mov
pop
addr16
cld
loopne
xor
mov
in
jecxz
cwtl
xchg
inc
int
shrl
xchg
xchg
mov
or
push
orb
jae
jno
or
xchg
leave
or
mov
push
inc
adc
xor
jns
xchg
push
xor
mov
pusha
pusha
out
out
insl
fcoml
aaa
and
cmp
inc
mov
jg
data16
cmpsb
push
fistps
fistpl
inc
mov
mov
incl
push
sbb
stos
or
sub
pop
jl
push
pop
mov
mov
addr16
rolb
sbb
sbb
adc
push
cltd
jle
in
jmp
iret
lods
mov
pop
pop
andb
pop
mov
out
icebp
pop
inc
addr16
imul
cmp
mov
cmp
iret
inc
stos
enter
xor
sub
bswap
mov
jae
lahf
sbbb
mov
mov
cmp
imul
dec
insl
ja
mov
insl
push
movsl
cmp
out
xor
sbb
andb
mov
loopne
enter
cltd
fisubs
ret
adc
adc
xchg
loopne
adc
inc
mov
fildll
dec
dec
test
pop
lcall
in
shll
cwtl
pop
and
out
cmp
shrl
inc
cltd
xorb
mov
clc
iret
inc
adc
fsubrl
call
add
pop
mov
or
jae
gs
mov
shll
add
mov
mov
dec
shll
rclb
jmp
adc
lds
or
and
jno
mov
or
jne
out
hlt
dec
adc
inc
mov
sub
daa
dec
pusha
dec
sti
add
xor
xchg
mov
imul
in
jecxz
sbb
xchg
xchg
cs
add
cmc
jo
cmp
testl
aam
ret
leave
xor
add
mov
sbb
or
pushf
adcl
rcll
jmp
in
or
add
filds
mov
rcrl
sahf
adc
sbb
mov
clc
es
adc
arpl
and
sbb
mov
out
mov
scas
sub
dec
cmc
ss
lea
cmp
jnp
mov
subl
xchg
or
xchg
or
jle
push
add
inc
aad
or
fidivl
mov
jbe
int
loop
push
xor
or
cld
mov
inc
xor
incb
pop
les
jbe
filds
dec
adc
cltd
dec
dec
test
xchg
stos
or
popfw
and
lods
ljmp
add
add
mov
js
pop
mov
mov
aas
pop
sbb
or
aam
lock
mov
push
subb
in
mov
stos
lods
lcall
push
or
mov
stos
int3
dec
ja
xor
call
mov
lods
push
popf
call
popf
mov
jp
push
mov
jne
in
sub
mov
dec
adc
movsb
popa
rcrb
rcr
cmpsb
xor
aas
sbb
xchg
pushf
xlat
int
dec
xchg
xor
dec
xchg
int3
mov
xor
aam
insl
xchg
and
test
or
jns
dec
add
add
mov
das
cwtl
mov
jnp
movl
xchg
out
xor
cwtl
out
in
stc
fs
sbbb
mov
cmp
lods
fcomip
mov
hlt
adc
adc
pop
stc
lahf
sbbb
sbb
or
jo
jae
imul
pop
pop
repz
push
negl
movsl
cmpl
xchg
in
icebp
xchg
fs
addr16
push
cltd
dec
jl
cmc
fbstp
out
mov
inc
mov
fdivrl
ja,pt
in
pop
bound
shl
mov
movsl
aam
xchg
fidivrl
sbbb
xchg
je
jg
mov
sahf
xchg
fisubrl
movsl
xchg
repz
mov
jne
jg
stos
aas
xchg
xchg
pop
sbb
mov
lahf
orl
adc
cwtl
or
jnp
dec
mov
test
lea
std
cmp
add
movsb
xor
les
test
xorl
inc
into
bound
inc
sub
test
inc
pop
je
mov
mov
fnsave
sar
cmc
jnp
fcompl
rep
inc
adc
xchg
subl
sbb
mov
mov
in
push
dec
pmuludq
add
adc
bound
adc
cli
loopne
add
stos
or
jnp
fwait
dec
les
xchg
stos
pop
aad
and
add
ljmp
or
fs
push
push
mov
jne
add
fwait
sbb
xchg
test
jg
mov
mov
mov
inc
mov
incb
xchg
pop
rcrb
repnz
lea
inc
sahf
loopne
and
sbb
add
cmpsl
cmc
xchg
repz
loopne
pop
rorl
ss
stc
xor
jg
cmp
test
aas
xchg
jne
lahf
ret
push
pop
ds
addr16
scas
and
xchg
imul
js
jp
mov
xchg
or
nop
adc
xchg
sbbb
sbb
xor
int
loop
jg
mov
mov
ficompl
push
pop
adc
arpl
cmp
push
jle
insl
fisttps
mov
shlb
pop
xor
or
adc
push
ljmp
push
les
addr16
out
adcb
cwtl
ljmp
jp
jmp
pop
push
dec
cmpsl
das
mov
stos
add
fstp
mov
addr16
xor
lods
clc
cmpsb
in
pushf
xor
cmpsb
in
mov
jo
callw
icebp
sti
inc
das
das
ljmpw
lret
mov
ret
jmp
fadds
jl
stos
std
jl
inc
in
repz
cld
sub
add
shll
jno
jecxz
cmp
or
and
pusha
xchg
icebp
xchg
sbb
or
lcall
and
jl
jle
in
or
dec
pop
xor
push
jg
aad
vmwrite
cs
shl
or
cmpsb
dec
xchg
inc
stos
leave
or
loopne
mov
sarb
pop
out
sahf
dec
sub
push
stc
mov
lret
cmp
mov
xor
adc
js
add
mov
jmp
rcll
or
jne
add
xchg
or
shrb
pushf
sub
jmp
stos
imul
push
pusha
lret
pop
mov
mov
inc
sub
add
fwait
jne
call
jl,pt
add
adc
xchg
dec
ror
jecxz
pop
aaa
jle
lret
out
xchg
mov
pop
fistps
fildl
jae
xor
inc
loope
stos
jae
inc
fsts
xchg
fwait
repz
fwait
dec
and
sbbb
jae
pop
mov
aam
inc
dec
jbe
ja
dec
sti
mov
adc
xchg
sbb
adc
dec
mov
add
cmp
and
mov
push
cmc
shll
mov
dec
sub
test
pop
mov
test
xchg
cmc
pop
push
fisubs
jne
inc
in
leave
int
out
pop
sbb
push
and
adc
and
adc
orb
jbe
mov
cs
pop
adc
leave
ret
push
ljmp
pushf
fisubrl
shl
xchg
sahf
shl
lahf
ljmp
sub
arpl
mov
lret
adc
jns
cli
ss
sahf
lret
movsb
lret
repnz
add
add
movsl
push
xchg
daa
and
push
and
and
sbb
hlt
dec
xchg
and
jbe
leave
inc
lods
jg
xchg
stc
out
roll
negb
cmpsl
fistpll
cwtl
jmp
stos
sub
sti
addr16
mov
loope
cmpsb
jge
dec
cwtl
test
cltd
fbld
sub
lock
jmp
inc
push
cmpsb
lds
insl
or
lods
iret
aas
adcb
test
cmp
add
adc
lock
or
or
sahf
shl
xchg
xor
insb
and
mov
clc
or
xchg
sbb
and
out
fs
out
sub
mov
aad
stc
or
lods
xchg
lahf
cld
scas
push
xchg
mov
data16
jecxz
mov
je
jp
cltd
das
xchg
mov
mov
push
cmpsb
xchg
les
pusha
out
or
mov
sub
pop
xchg
outsl
fisubs
jae
adc
sti
cmc
mov
cmp
pop
mov
cmpsb
jb
push
push
sub
pop
xor
or
cmpsb
stos
sbb
fstpt
fstpl
push
push
jle
popf
xorb
js
mov
nop
data16
rol
add
out
fidivs
pusha
pop
sbb
lock
mov
rorb
cmp
inc
lahf
cmpsb
int3
pop
outsl
mov
or
jb
daa
pop
out
stos
shll
icebp
dec
ret
out
push
addr16
xchg
push
fdivs
nop
push
out
aas
mov
mov
xchg
xor
and
dec
repz
sbb
stos
lret
loope
das
popa
pop
mov
mov
jns
fdivr
incl
shrb
addr16
ja
push
pop
sub
ds
test
imul
sub
movb
rclb
imull
and
add
in
sbb
sbb
cmp
adc
clc
mov
xor
add
ret
xchg
ret
sahf
jb
inc
pop
bound
rcr
or
movsb
scas
arpl
mov
imul
cmp
and
push
mov
inc
popa
dec
roll
movsb
cmpsl
movsb
pop
and
lock
movsb
sbb
or
cmp
jbe
inc
xchg
mulb
adc
cmp
mov
dec
lahf
push
xor
pop
out
sahf
mov
or
push
ret
mov
testb
or
inc
lds
lret
imul
lods
sbb
jp
shlb
adc
negb
daa
movsl
jnp
lds
test
xchg
fsubl
rcr
inc
shrb
xchg
add
inc
test
in
bound
push
aas
xchg
mov
pop
mov
insb
fiaddl
mov
gs
cld
sub
mov
ret
mov
lods
xor
cmp
mov
xor
jmp
mov
jl
sbb
mov
jp,pn
dec
nop
pop
into
int
jl
sub
add
add
mov
dec
shrl
dec
nop
cmp
mov
insl
sahf
mov
hlt
pop
pop
dec
push
ror
movsb
loopne
dec
scas
push
and
data16
aad
lods
mov
jns
popa
mov
shl
adc
sub
fdivl
js
orl
filds
lcall
in
sahf
pop
mov
das
and
mov
jo
lret
lods
arpl
aas
xor
pop
xor
shrb
xchg
imul
mov
stos
sbb
add
mov
pop
out
inc
shll
adcb
or
mov
mov
pop
jae
xchg
jnp
jno
jmp
fsubs
inc
mov
divb
add
or
js
cld
sub
gs
pop
sbb
adcl
shlb
add
pop
push
jge
scas
adc
push
push
aad
dec
pushl
into
test
pop
in
cmp
movsb
adc
mov
xchg
enter
adcb
es
fsubr
push
inc
movsl
pop
push
cs
in
stos
dec
push
pop
ret
inc
pop
scas
or
mov
scas
inc
subl
inc
xchg
mov
clc
sub
push
dec
or
clc
sub
sbbb
jbe
test
in
out
push
mov
ss
xchg
out
jo
ja
ljmp
adc
dec
cwtl
jp
adcl
test
ljmp
mov
leave
push
mov
adc
sub
mov
inc
imul
cmp
mov
std
add
push
pop
pop
in
or
aaa
insl
inc
mov
imul
scas
xchg
xchg
mov
or
dec
in
mov
cmpsb
xor
in
aas
sub
sub
lods
je
cmp
popf
nop
in
outsl
xor
mov
and
scas
push
jnp
xchg
cmp
lods
fidivrl
scas
sti
mov
mov
and
adc
mov
in
std
push
xor
sub
pop
aad
cmpsb
aaa
push
stos
les
mov
testb
jb
ja
lret
stos
lcall
call
and
cli
xor
mov
add
mov
std
incl
out
pop
sub
movsb
inc
jle
add
imul
jp
mov
movsw
xor
out
xchg
stos
in
fs
incb
sbb
mov
or
and
lcall
rorb
cli
or
adc
and
add
sub
rclb
loopne
aas
mov
push
rorb
add
mov
int
sti
sti
mov
mov
mov
push
mov
popf
xor
jle
aaa
test
js
cwtl
mov
push
adc
mov
pop
xor
lock
dec
cmc
dec
and
cmp
and
arpl
mov
jns
ljmp
cli
inc
sbb
adc
in
push
cmp
push
aas
out
adc
addr16
subl
sbb
dec
xchg
pop
add
xchg
cmpsb
xchg
mov
jb
scas
arpl
or
test
ror
ja
lahf
cmp
add
lahf
aas
aas
push
pop
xor
dec
push
cmpsb
pop
test
hlt
stos
mov
jp
test
nop
imul
inc
cli
add
notb
cmp
jmp
mov
and
and
das
ss
out
std
mov
pop
stos
aas
mov
mov
addb
ret
jnp
xor
dec
rsqrtps
inc
mov
test
sbbl
enter
outsb
loop
movq
fsubs
popf
ds
int3
jmp
insb
mov
pusha
mov
sub
dec
fisttps
outsl
lcall
or
cmp
xchg
jge
outsl
rcrb
push
popa
lcall
fwait
xor
pusha
aas
scas
sub
rorb
inc
out
sahf
test
and
push
sub
sub
add
idivb
int
or
pusha
ret
aaa
mov
addl
mov
push
test
and
movsb
mov
push
mov
imul
out
mov
clc
lret
xchg
pop
jmp
and
shl
sub
call
jmp
jne
outsb
mov
xor
xchg
cltd
icebp
call
shll
sahf
movsb
addl
or
push
filds
out
sub
xchg
int
mov
fstpl
fistl
ds
mov
adc
ljmp
int3
mov
sbbb
or
cmp
out
movd
and
rclb
mov
and
xor
adc
pushf
ret
out
sub
adc
loopne
adc
mov
push
aas
xor
idivl
fstl
xchg
in
mov
pop
jbe
mov
test
push
sub
xor
idivb
adc
popa
or
shlb
stos
lods
popa
sbb
xor
adc
inc
lret
sub
clc
inc
adc
dec
mov
mov
lods
scas
jae
pop
xchg
negb
popf
xor
xchg
mov
test
pop
xchg
and
mov
push
pop
jbe
inc
lcall
cwtl
jmp
ds
repz
lods
push
mov
and
mov
adc
stc
cmpsb
nop
test
aaa
aad
push
pop
xchg
repz
pop
cli
push
jl
push
mov
cltd
or
lods
sbb
xchg
test
and
je
jbe
mov
and
sbb
in
cmpsl
push
and
repnz
mov
xchg
pop
xchg
outsb
bound
aam
cld
push
lahf
js
cmp
ljmp
cmpsb
cli
or
cwtl
dec
mov
ljmp
or
mov
cwtl
test
add
push
lret
add
cmp
xchg
mov
sub
cmpsb
shl
inc
mov
orl
adc
sub
push
in
out
das
push
addr16
sahf
inc
in
shlb
es
mov
inc
mov
div
add
and
or
movsl
mov
cmpsl
test
sarb
mov
pop
xor
scas
cmpsl
push
mov
scas
inc
lahf
jmp
shr
mov
dec
adc
push
cli
std
xchg
xor
sahf
hlt
pop
pop
jg
pop
cmp
dec
repz
pop
loopne,pt
cmp
pop
inc
imul
pop
cmp
imul
jbe
push
lods
test
addr16
mov
mov
je
sti
lret
movsl
xchg
sti
movsb
nop
movzbl
cmp
fucomi
sbb
fsubr
jge
mov
adc
ja
out
mov
add
movsb
xor
fwait
pop
jne
in
das
popa
cmpsb
mov
fiadds
cld
imul
dec
and
std
xchg
je
fsts
mov
ud2
dec
lret
adc
push
in
loope
pop
and
push
pop
neg
lods
dec
test
mov
fadds
rclb
mov
adc
jo
xor
insl
cltd
add
shl
pop
mov
repz
mov
sarl
push
js
push
in
xchg
js
adc
lret
in
push
in
cmc
mov
cmp
pop
push
and
pushf
xchg
xor
mov
lcall
ljmp
add
inc
fnstenv
pop
sahf
xor
in
test
rolb
dec
pop
bound
sub
shrb
add
arpl
xor
movsb
cli
xchg
xchg
cmp
jmp
pop
stos
out
xchg
sub
add
aad
push
mov
mov
add
leave
inc
std
pop
mov
mov
enter
mov
insl
mov
ret
push
popf
add
mov
mov
cmp
iret
add
mov
sbb
les
ret
data16
adc
fwait
xor
mov
in
ds
mov
aas
idiv
dec
sarb
cmp
adc
pop
lds
cld
rolb
fimuls
push
scas
push
aaa
aam
loope
push
adc
pop
repnz
sub
je
repz
and
sti
adc
lds
jbe
sbb
dec
xchg
aaa
lock
push
sbb
outsl
mov
xor
fsubs
lcall
adc
cmp
in
cmp
bound
fdivs
rcr
dec
in
addr16
push
lods
lods
je
dec
mov
outsb
mov
cmpsb
cmp
sti
mov
dec
aad
mov
xchg
in
lods
inc
and
leave
pop
orl
fsubl
inc
pop
lahf
addb
test
insl
jmp
adcl
add
and
fsts
ret
and
cmp
pop
mov
out
jmp
pop
icebp
or
mov
adc
insl
loope
dec
int
or
xchg
add
cmpl
mov
out
icebp
sbb
xor
in
sub
outsb
sbb
push
jg
dec
sub
dec
pop
jg
dec
jne
rsqrtps
push
imul
aad
ficoms
stos
mov
ljmp
into
adc
sub
xor
cwtl
stos
stos
push
push
insb
fidivl
das
jnp
mov
test
xchg
faddl
xlat
mov
dec
mov
xchg
or
mov
mov
lahf
out
mov
mov
shll
jnp
dec
stos
scas
mov
fcmovne
iret
pop
div
lret
pop
das
sbb
arpl
rcrb
jl
or
iret
movsb
out
mov
mov
sub
add
addr16
in
jg
lods
jb
pusha
lcall
test
xchg
push
jo
push
or
inc
jne
push
dec
lods
ficompl
cli
dec
mov
inc
movsl
stos
subl
pop
jno
xchg
je
mov
je
fisttps
push
mov
inc
mov
repz
test
inc
fs
daa
stc
rcr
mov
pop
lret
or
jne
or
int
sbb
mov
pop
xor
sbb
mov
bound
or
ljmp
push
mov
adc
mov
pushf
or
shll
adc
punpckhdq
xor
dec
inc
xchg
sub
scas
nop
inc
fld
mov
lret
jecxz
pop
notb
add
jge
push
jno
mov
es
mov
inc
xor
ret
adcb
mov
add
daa
shrl
dec
sbb
loop
icebp
mov
push
pop
xrelease
lds
jp
fnstenv
jecxz
cli
cwtl
das
sub
push
insl
hlt
pop
out
and
inc
jbe
js
test
sub
xor
mov
pop
mov
jl
inc
shrb
or
inc
mov
mov
xchg
or
cmp
fs
cmpsl
mov
mov
fstpl
lea
out
inc
fisubs
push
adc
filds
test
xor
adc
lock
das
and
lcall
fs
imul
sarb
jnp
cmpsl
push
mov
mov
fstpl
cmc
mov
in
inc
ficomps
add
or
xchg
xchg
sub
test
mov
jge
test
aam
push
je
xchg
pop
jb
test
stc
nop
jp
mov
cs
pop
scas
int
into
gs
in
adc
shrl
testb
daa
xchg
icebp
mov
dec
daa
mov
sbb
lds
cli
sahf
or
xorl
cmp
add
ds
push
xchg
mov
mov
shrb
mov
dec
ss
dec
push
jg
xchg
xor
out
dec
sbb
ljmp
addr16
push
cld
adc
ss
xchg
sbb
fucomp
cmp
sbb
jb
xor
push
in
insb
push
nop
daa
test
scas
inc
xlat
loopne
sub
stc
int3
arpl
xor
inc
dec
ljmp
lahf
or
or
es
pop
inc
inc
sub
rolb
add
adcb
and
sahf
xor
test
lret
cld
loop
jno
push
mov
addr16
je
mov
lods
mov
add
mov
loop
adc
sub
xchg
loop
cwtl
push
addr16
xchg
push
mov
add
je
mov
add
mov
add
jae
mov
mov
pop
movq
add
sub
xor
sbb
mov
insb
add
loope
scas
sbb
mov
jg
sbb
add
test
sti
xchg
fwait
aaa
cli
sahf
rolb
ret
xchg
movsb
sbb
and
xor
mov
int3
xlat
outsb
mov
adc
idivb
inc
xlat
lret
andb
and
adc
push
test
fwait
or
sbb
cmp
xchg
stos
xor
and
pop
xchg
repnz
aad
xor
push
cs
pop
stos
push
popf
fistpl
ja
lahf
ss
stos
cmp
fmull
dec
loop
stc
fsubrs
scas
jle
loopne
repz
push
lods
xor
push
xchg
xor
movsb
lcall
enter
pop
or
add
fidivl
jge
sub
jmp
sbb
aas
push
in
jo
shrb
scas
adcb
jbe
subl
jp
insb
adc
lea
mov
and
xor
sub
and
test
movsl
std
pop
repz
cmc
insl
add
pop
rcrl
cwtl
das
sub
rcrl
add
xor
aam
sub
adc
pushf
sub
adc
dec
cmc
cmp
and
std
dec
jecxz
xor
int
aad
push
mov
shrb
repz
icebp
and
std
xchg
popl
adc
leave
pop
inc
xlat
dec
ljmp
add
dec
in
jmp
dec
jecxz
add
dec
fistps
popa
sbbl
add
mov
push
push
jbe
mov
xchg
pop
test
cmp
pop
cld
lcall
dec
add
jg
mov
push
mov
in
orl
inc
xlat
jle
xor
cmp
jae
stos
push
jl
subl
and
pop
lock
mov
movl
dec
hlt
mov
lahf
and
sbbl
movl
xchg
sbbl
push
insb
add
sahf
popf
xor
cmp
xchg
stos
dec
test
sbb
cli
xchg
aam
adc
test
mov
js
or
jne
and
cmc
jmp
sbb
fdivl
mov
mov
xchg
pop
ret
push
adc
push
mov
mov
cmp
subl
push
jmp
subb
test
test
daa
mov
mov
sbb
int3
arpl
data16
xchg
cltd
mov
or
sahf
push
jo
iret
test
push
xlat
outsb
subb
ret
scas
inc
mov
adcb
mov
mov
mov
cmpb
outsb
int
mov
cmp
mov
or
mov
jg
lret
scas
lahf
loop
adc
cld
mov
jle
pop
mov
fwait
xor
jo
xor
jle
inc
mov
mov
fnsave
je
and
mov
hlt
mov
jo
mov
jle
mov
arpl
int3
lahf
bound
mov
andb
xchg
jae
add
imul
cmp
mov
inc
lahf
lods
xchg
sub
sbb
mov
sti
xchg
push
imul
fwait
xchg
push
jmp
xchg
mov
adc
pushf
cmp
lods
adcl
scas
or
mov
jg
and
outsl
mov
fstpt
pop
mov
inc
shrl
jae
fisubl
fwait
scas
addr16
pop
jb
lods
movsb
fwait
inc
xlat
or
inc
xlat
scas
dec
inc
fildl
dec
loopne
xorl
hlt
cmpb
sub
call
jmp
lret
faddl
sub
js
shll
leave
les
inc
fmuls
int3
jg
int3
scas
and
clc
movsb
ret
lds
cmp
sub
cmpsl
sub
pushf
jp
inc
lods
fbstp
jo
adc
test
subl
push
in
pop
inc
xlat
dec
pop
sub
push
jle
lret
jo
adc
hlt
ret
insl
add
push
cmp
js
shlb
mov
lret
mov
lcall
jp
repz
in
testb
jbe
mov
repnz
push
in
sub
lret
repnz
ja
test
jmp
std
inc
fldz
xor
jp
int3
ret
std
sbbl
adc
imul
and
in
out
add
push
in
repnz
jmp
cmp
dec
incl
lcall
cwtl
das
fsubrs
jle
jo
sub
jg
xchg
icebp
imul
pop
xor
add
int
pop
adc
outsb
inc
in
pop
faddl
cltd
push
push
push
ljmp
call
adc
call
sahf
filds
rorb
xchg
sub
test
mov
mov
mov
xchg
adc
xor
pushf
push
or
rcr
adc
xchg
inc
faddl
lods
mov
push
out
mov
dec
sub
jp
dec
sub
out
popf
xlat
mov
or
clc
rcll
mov
dec
test
lret
enter
adc
ss
fisttpl
mov
scas
inc
ret
clc
pop
add
je
jne
dec
xchg
ret
pop
lahf
or
test
cltd
xor
xorb
pop
icebp
push
jecxz
fnsave
xor
shrl
call
addl
sbb
jnp
sub
clc
jp
leave
imul
hlt
push
push
test
cld
lahf
mov
or
push
inc
lret
std
test
shl
and
dec
push
cmc
jmp
ja
out
push
fsubs
adcb
push
lret
cld
shlb
into
shll
les
add
incl
sub
push
or
cmpsb
jp
adc
cmp
fsubrl
ja
out
push
stos
inc
inc
jp
adc
je
and
jp
push
lods
jmp
enter
jecxz
mov
push
mov
mov
adc
sbb
mov
cli
and
push
in
scas
cmp
pop
stos
jb
sbb
jge
sub
jno
pop
mov
jle
addr16
inc
fiaddl
ret
xchg
cs
or
mov
insb
add
jno
aam
sub
lcall
ds
jno
call
jl
test
scas
jg
fidivs
xchg
sub
adcb
idiv
test
ljmp
out
lds
mov
mov
int
lret
mov
mov
push
bound
fbstp
mov
sub
gs
out
test
xlat
outsb
out
mov
jp
xor
cltd
fs
daa
mov
jmp
in
sbb
inc
out
xchg
mov
out
aam
rol
jp
insl
or
and
jns
ljmp
mov
cmp
out
arpl
or
shrb
dec
lahf
ss
add
mov
push
lods
jo
sahf
xor
loop
push
out
cltd
cmp
es
mov
adc
or
mov
outsl
mov
dec
out
push
in
pop
cmp
jns
sahf
mov
out
push
in
inc
cmp
mov
stc
mov
jp
out
xor
xchg
out
push
jp
nop
xor
call
add
dec
or
gs
std
mov
mov
arpl
xchg
jno
clc
bound
xchg
sub
mov
sti
add
xchg
sub
in
nop
aaa
pop
lock
lock
stos
nop
daa
sbb
pusha
fs
push
lea
mov
gs
hlt
xchg
inc
imul
mov
popa
jno
xchg
stos
insb
add
sub
xchg
adc
mov
mov
adc
push
inc
bound
rclb
pop
out
or
test
or
xchg
sub
pop
cmp
nop
hlt
rcrl
push
out
jecxz
shlb
add
or
les
sub
test
sub
cmp
dec
dec
jmp
cld
sub
test
jge
and
roll
shll
rcll
pop
out
movb
call
std
nop
into
inc
xchg
sub
sbb
and
int3
jb
lret
cwtl
push
jmp
xor
subl
or
mov
mov
jae
sub
adc
xor
addr16
enter
pusha
sti
mov
in
test
sbbb
xchg
or
pop
in
rclb
mov
fisubrs
fdivl
mov
mov
fildl
mov
mov
into
testl
fnsave
je
lcall
jmp
sub
aam
mov
hlt
mov
out
lds
shrb
fcoms
or
cmc
mov
fstl
cmpsl
into
aad
sub
jb
rclb
dec
in
ror
pusha
add
je
jmp
std
xchg
dec
ljmp
add
mov
xchg
push
adc
ret
iret
inc
fiaddl
add
mov
push
out
push
popa
or
sbb
gs
push
and
pop
jae
popf
mov
jg
cmpsb
scas
dec
mov
cmp
cmp
movsb
aas
mov
loop
mov
popa
es
adc
xchg
js
push
stos
ret
or
sub
jp
pop
lods
dec
in
jae
insl
movsb
mov
call
mov
mov
cmp
scas
push
lret
jno
in
xchg
clc
jge
push
scas
out
or
cmp
mov
lods
adc
xorl
ret
mov
out
xchg
jne
mov
and
xchg
jl
ret
sbbl
jno
cmc
mov
jge
scas
insl
call
mov
jge
pop
scas
xchg
jo
add
xchg
sub
les
cmp
subb
das
push
jl
xchg
scas
pop
je
dec
jno
mov
add
shrl
jb
in
jp
imul
scas
fwait
jo
or
push
mov
inc
lods
sub
jno
repnz
into
jecxz
jmp
lods
loop
sbb
jae
mov
pop
mov
mov
mov
into
jae
leave
movsb
add
into
jno
dec
fildll
je
call
in
test
stos
out
xchg
fnstenv
sub
sbb
lea
push
stos
rolb
pusha
cmpsl
add
xchg
lods
call
or
pop
jl
lret
adcb
je
std
movsl
jo
jne
jl
push
scas
xchg
mov
xor
stos
inc
lods
fdiv
mov
je
jne
add
jno
out
stos
xorl
mov
ja
mov
divl
int
pop
xlat
outsb
jns
pop
imulb
ja
add
js
xor
jne
inc
cmpsl
xorps
cmpb
lods
mov
shll
add
inc
jl
stos
lods
jbe
add
inc
frstor
jge
out
ds
pop
mov
jp
mov
jle
and
outsl
mov
out
add
mov
cmp
mov
lret
push
movsl
mov
into
jns
shrb
lahf
repnz
data16
aas
mov
pop
mov
loope
mov
jnp
mov
add
sahf
jg
jmp
mov
cmp
rep
loop
mov
jg
mov
jo
mov
jl
das
mov
ja
add
icebp
mov
subb
cmp
stos
outsb
sahf
xor
into
add
mov
insb
add
fidivl
test
xor
sbbb
pop
insb
add
adc
inc
outsb
repnz
inc
fmuls
dec
addr16
cmp
push
in
inc
cmp
mov
fldl
divl
shll
mov
rclb
pop
repnz
lret
enter
loopne
xchg
adc
pop
repz
mov
pop
mov
sub
fwait
sub
cmpsb
insl
fisubl
mov
aam
push
call
lea
mov
mov
push
in
pop
insb
lods
lcall
xchg
dec
push
in
cmp
sbb
jne
push
jmp
in
pop
sbb
push
mov
sti
int3
xsha1
cmpsb
or
adc
mov
out
push
in
loopne
adc
aad
and
mov
cmpsl
ds
mov
loope
aam
lods
xchg
sub
adc
inc
pop
xor
dec
fnstsw
lahf
shrb
adc
or
mov
lods
notl
into
gs
divb
mov
in
push
in
fstl
and
xchg
int
rclb
dec
pop
sub
js
imul
outsb
pop
popf
xor
insl
insb
add
test
or
mov
dec
push
test
jp
mov
cli
sbb
mov
add
mov
add
xor
dec
xor
mov
aam
sbb
dec
clc
jge
ljmp
mov
dec
sarb
add
dec
loope
push
jmp
push
enter
iret
push
mov
lret
mov
or
aad
iret
popa
clc
add
jne
push
xor
movsb
int
aaa
call
sbb
push
divl
jae
sbb
mov
outsl
ror
clc
outsl
sti
or
jns
add
pop
lret
sti
mov
cld
es
fcoml
shlb
lret
sti
mov
loopne
daa
jns
pop
push
int
inc
enter
jne
loope
and
shlb
lret
cld
adcl
and
push
js
add
std
mov
sti
and
lods
push
or
pop
jge
inc
xlat
std
lea
jmp
loopne
cmovbe
or
adc
mov
nop
and
lea
daa
cmpsl
ds
lret
mov
lods
int
loope
push
adc
mov
rcll
es
cmp
cld
and
cmpsb
xchg
and
push
rclb
add
pop
and
push
outsb
xchg
pusha
int3
sub
addr16
enter
popf
fs
fs
std
jb
inc
fs
or
jb
push
fs
mov
leave
arpl
test
xchg
imul
mov
outsl
sub
sbbl
cmpsb
outsb
sbb
test
sub
gs
pop
out
clc
push
sbbl
push
enter
dec
stc
ds
cs
pop
mov
pop
and
push
pop
clc
dec
lret
sti
jg
fs
inc
out
arpl
add
data16
push
push
pop
pop
int3
mov
call
push
and
pop
std
cmpsb
adc
push
push
add
stc
xchg
fs
sub
cmpsl
pop
sti
cmp
shl
out
mov
pop
in
les
notb
mov
pop
mov
fidivl
pop
and
movsl
out
add
mov
inc
lds
cmp
leave
test
jns
cli
test
js
or
cld
jbe
ss
js
inc
stos
repz
mov
jbe
xor
xchg
xchg
lret
mov
mov
scas
inc
imul
outsb
ljmp
cltd
addr16
and
jmp
in
sti
ss
fstl
sbb
or
fbstp
push
jnp
dec
fbld
mov
stc
adc
jo
daa
xchg
sub
and
sti
pop
fidivs
es
insl
pop
jl
mov
stc
popf
fnsave
or
mov
xor
test
adc
mov
sub
or
fnstenv
sbb
dec
lret
or
or
fidivs
adc
or
cltd
cmc
fnsave
enter
adc
mov
shrl
mov
add
out
pop
adc
bound
jno
mov
adc
repz
bound
fidivs
mov
adc
arpl
mov
push
lods
dec
out
pop
xlat
cmp
xor
imul
bound
arpl
pushf
sbb
loope
xor
mov
sub
add
jl
cmp
lcall
dec
shll
inc
add
stos
lret
sub
push
mov
pop
fcompl
cwtl
and
sar
in
mov
cmp
jl
adc
mov
mov
lock
sahf
mov
or
lock
jnp
adc
mov
repnz
mov
pop
out
xlat
data16
dec
cli
pop
inc
repz
mov
mov
jmp
subb
into
pushf
sbb
jg
ds
in
mov
xchg
jno
cmp
jl
je
aam
push
or
jge
test
cmp
pop
mov
xchg
push
sub
xchg
popa
xlat
push
sbb
sub
insl
mov
idivb
pop
lock
pop
repz
jnp
sbb
xchg
push
outsb
cmpsl
xlat
outsb
shrb
loopne
dec
adc
pop
xorb
mov
dec
loop
mov
xchg
fisttps
mov
xchg
mov
call
jp
mov
add
cwtl
pop
rcll
imul
jmp
and
div
sarb
in
leave
ss
xchg
mov
and
pop
in
rclb
divl
shlb
fstp
dec
insl
loopne
xchg
aas
push
fisubs
add
sbb
inc
repz
rol
repz
sub
in
addl
sub
cmc
dec
out
test
loop
add
enter
cmp
pop
nop
add
push
lods
or
inc
imul
inc
xor
xor
xchg
ds
aam
ret
aas
aad
hlt
xchg
and
add
arpl
cwtl
or
xchg
rsqrtps
notl
lods
xor
jl
notb
cmpsl
jl
add
adc
jbe
test
mov
add
scas
cmp
es
mov
push
push
retw
xchg
mov
xchg
sub
fdiv
lret
lcall
dec
in
call
mov
adc
call
pop
ljmp
stos
mov
insl
mov
fbld
test
add
xor
loopne
or
inc
xor
cmp
fwait
fs
cltd
mov
pop
lock
dec
cmp
aas
pop
incb
pop
push
sbb
stc
jae,pt
mov
push
jmp
xchg
ret
jo
mov
mov
lods
shrl
adc
aas
mov
jge
shrb
sub
in
inc
xlat
addr16
xchg
clc
das
jmp
or
jnp
push
jae
sub
popa
pop
das
jmp
je
scas
inc
mov
sahf
xor
movl
ficompl
jae
push
sti
cltd
xor
dec
insl
add
push
arpl
jg
js
dec
mov
mov
xchg
pop
scas
mov
les
ret
testl
push
jmp
or
in
sub
jmp
lcall
jno
push
xor
stos
jp
pushf
xor
fstps
fidivs
sbb
pushf
push
fnsave
mov
lea
in
addl
inc
ficoms
ss
imul
mov
fstpt
ror
and
imul
in
cmpl
in
and
mov
add
sbb
jge
pop
mov
sub
movsl
fwait
mov
jmp
add
aas
dec
xchg
cmp
sahf
sahf
pop
int3
arpl
xchg
sub
iret
popaw
pop
adc
hlt
and
sub
cmp
xchg
sub
icebp
xchg
call
inc
int3
imul
pop
dec
loop
fists
adc
ja
in
mov
or
icebp
mov
sbb
sub
mov
das
adc
dec
push
ja
inc
push
testl
outsl
jbe
cmp
or
cli
inc
cmc
mov
hlt
mov
int
and
xor
lahf
mov
stc
nop
inc
in
ds
addr16
daa
pop
mov
cmpsl
mov
inc
fisubrl
dec
loope
lea
decl
popa
clc
xchg
mov
icebp
loop
mov
and
enter
repz
mov
jns
dec
rclb
insb
xor
pop
lcall
outsl
jmp
scas
and
loop
stos
and
iret
xchg
clc
or
sub
lds
pop
lock
imul
pop
pop
dec
in
jg
bound
sub
lahf
xchg
montmul
cmpsb
add
stos
xor
mov
stos
mov
lret
daa
clc
pop
and
jns
pop
mov
or
sbb
xor
pop
mov
push
jmp
lock
and
jns
pushf
sahf
cmpsb
mov
sbb
in
stos
popa
adc
mov
loopne
cmp
jns
or
in
pop
out
cmc
push
push
jmp
test
push
call
pop
sub
cmp
jmp
sbbb
andl
imul
leave
pusha
push
jb
mov
add
sbb
out
test
mov
xlat
and
push
out
inc
jmp
ss
gs
out
dec
sub
push
push
cmp
cmp
cld
xchg
outsl
rclb
and
js
sbbl
push
mov
jmp
dec
push
mov
inc
sub
cmp
and
pop
pop
aas
dec
inc
adc
pop
pop
jo
xchg
jle
jmp
mov
add
cmp
and
xchg
pop
or
inc
mov
scas
daa
pop
repnz
mov
insb
pop
shlb
xor
mov
pop
add
inc
fdiv
out
loop
adc
in
cmpsb
loopne
sbb
mov
hlt
lcall
mov
filds
shl
push
call
in
add
ja
lds
push
movsl
or
jg
pushf
jne
inc
mov
sbbl
mov
scas
inc
sub
nop
pusha
bound
push
add
cmpsl
aas
je
mov
incl
sbb
ret
inc
mov
lcall
pop
popa
ds
data16
ret
pop
push
sarl
ret
inc
repnz
xlat
aam
pop
test
cli
xchg
out
rcrl
test
jp
pop
sahf
lea
std
xchg
pop
sub
repz
rclb
icebp
shr
xchg
xchg
aaa
into
shl
and
fs
xchg
stc
adc
imul
cli
xchg
xor
xor
add
test
lods
ffree
loop
mov
test
mov
pop
lret
jmp
mov
xor
mov
jb
adc
pop
andb
aad
push
xor
test
and
add
jbe
and
push
fidivl
int3
icebp
push
call
fisttps
jb
jb
in
test
and
ja
sti
and
sub
add
jnp,pt
pusha
xchg
pop
adc
pop
jno
mov
je
jae
std
pop
ss
lcall
sbb
into
scas
cmp
jne
dec
lea
iret
jmp
roll
jg
sub
rcrl
cmpsb
cmp
in
movsb
cmp
lds
xchg
sub
lcall
cmpsl
sub
mov
cmpl
outsl
push
inc
sti
data16
and
out
push
add
pop
push
scas
inc
loopne
fidivl
xchg
push
inc
fimull
mov
cmp
and
pop
arpl
sub
pop
dec
loop
push
xor
xor
imul
dec
fidivrs
insl
jns
je
mov
mov
push
lss
mov
inc
and
inc
push
call
aad
testl
pop
dec
xor
jbe
dec
loop
adc
jo
xchg
mov
repnz
mov
pusha
in
mov
cmp
lea
rorb
loope
jne
push
mov
dec
sub
push
lods
pusha
pushl
sub
ret
pop
call
loop
push
push
add
in
or
cmp
insb
add
pop
pop
testb
dec
in
mov
inc
in
pop
hlt
mov
int3
arpl
stos
jnp
fcompl
orl
push
mov
mov
xlat
push
inc
faddl
cmpsb
fs
aad
pop
lods
jp
xchg
mov
mov
in
daa
movsl
mov
add
cld
fdivs
xchg
lea
push
xchg
xchg
stos
inc
adc
push
mov
fistpl
or
jge
pop
rorl
movsb
add
daa
les
lods
inc
pushl
in
sbb
insb
xchg
jl
popf
mov
cwtl
repnz
paddq
arpl
lcall
sub
in
push
cs
xchg
movhlps
jp
push
call
sahf
sbb
xlat
mov
gs
enter
and
aad
shlb
sbb
pop
mov
lods
jge
repnz
shll
aam
lret
stc
mov
mov
cltd
or
popf
les
lret
test
push
mov
sub
xor
adc
enter
pop
jg
das
aas
in
das
out
sbb
testl
inc
mov
adc
jg
movsb
jmp
arpl
or
fndisi(8087
inc
outsl
push
lds
scas
das
sbb
out
add
jno
cmp
ror
leave
add
movsb
mov
das
pop
cwtl
lds
mov
mov
ret
mov
out
call
je
sub
xchg
faddl
hlt
sbb
mov
adc
not
subb
mov
cmc
jle
or
inc
pusha
jne
cld
pop
xchg
imul
std
xchg
enter
mov
repz
and
mov
adc
lods
jle
lret
mov
int3
mov
dec
dec
mov
adc
out
fcomi
mov
sahf
gs
mov
dec
pop
inc
enter
push
test
sbb
xor
fildll
add
dec
pop
dec
add
pop
frstor
and
mov
pusha
sbb
andb
mov
aaa
mov
std
push
mov
xchg
inc
jl
inc
bswap
movsb
xor
jmp
ret
test
sbb
scas
and
dec
jge
outsb
jno
or
push
jb
fildl
je
out
xchg
xor
mov
jno
dec
scas
aas
popf
int3
xchg
jp
pop
pop
sub
pop
sbb
inc
xlat
scas
pop
or
mov
loopne
pushf
repz
sti
cli
pop
jno
aas
popf
fldt
mov
sub
add
popa
cmp
ret
fisubrs
xchg
cs
mov
sub
pop
mov
or
lea
add
mov
mov
scas
movsl
push
jmp
mov
mov
mov
test
cmp
stos
xchg
inc
sbb
pusha
xrelease
cmp
fistpl
jge
or
fidivrs
mov
push
aad
cmpsb
cmp
ret
dec
lcall
mov
dec
jb
stos
lahf
cwtl
movsl
hlt
in
adc
lret
lcall
ret
and
insb
mov
dec
scas
cmpsb
xor
ret
sbb
push
jmp
cli
pop
imul
add
dec
icebp
leave
sub
inc
dec
and
jnp
imul
fisubs
xor
lret
mov
mov
mov
shl
pop
cmpsb
push
add
leave
mov
pop
in
jle
mov
mov
into
pop
mov
dec
cwtl
ds
or
repnz
mov
insb
nop
mov
lods
rolb
in
stos
scas
mov
inc
mov
lret
stos
fwait
insl
jmp
mov
add
xorl
dec
dec
and
and
rorb
jmp
cli
sbb
decb
arpl
movsl
out
negl
mov
dec
xchg
fstl
mov
mov
stc
mov
add
pop
fistpl
cld
rcrl
cmpsl
adc
pop
mov
mov
loopne
pop
cmp
mov
cmpl
hlt
mov
mov
add
gs
testl
pop
mov
js
movsb
dec
or
repz
stc
repz
cmp
xchg
out
loope
pop
popa
push
cltd
inc
insl
je
mov
cmpb
out
cmp
mulb
jno
movsb
push
sub
jecxz
sbb
lods
lods
pop
cmp
add
dec
call
fs
shl
shll
add
cwtl
mov
stos
inc
scas
nop
ret
mov
jecxz
nop
dec
jne
add
ljmp
adc
into
or
insl
push
nop
mov
xorl
push
jg
addr16
xor
pusha
in
and
filds
sbb
dec
orb
notl
not
jle
ss
dec
loope
test
shlb
insb
sbb
int3
xchg
jl
mov
ret
nop
aaa
stos
xor
enter
sbb
or
mov
mov
sub
movsl
adc
lcall
xor
dec
and
out
cmp
and
xchg
sbb
sub
cltd
cmp
test
push
cmpsb
addr16
outsb
mov
cmpsb
and
mov
stc
add
jnp
mov
je
xorl
mov
roll
xchg
mov
std
jecxz
mov
xor
add
popa
test
ret
test
or
dec
in
sub
pop
pop
daa
imul
scas
jp
push
lods
rolb
xchg
add
movsl
cmp
and
mov
and
pop
push
jne
shll
test
adc
movsb
add
mov
mov
adc
cltd
scas
test
loopne
hlt
mov
add
cmp
adc
and
jmp
repnz
fcmove
data16
dec
push
repz
and
addr16
enter
mov
rcr
inc
shll
xchg
jl
mov
and
mov
inc
out
fnstenv
pop
leave
pusha
cmp
out
mov
push
lods
cmp
xor
mov
and
fists
fadds
mov
es
jge
daa
cmpsl
lods
inc
xor
lret
bound
mov
cmpb
outsb
and
cmc
mov
mov
movl
enter
clc
leave
cmp
imul
push
sbb
insl
add
cmp
adcb
lea
add
jb
loopne
jle
adc
or
xor
add
pop
aaa
and
adc
dec
inc
inc
sysenter
bound
fstpt
rorl
inc
jmp
cmp
sahf
adc
xchg
pop
dec
fiaddl
add
out
pop
cmp
cmp
mov
sub
mov
dec
ds
out
aad
pop
cmp
mov
bound
mov
jb
sub
scas
movsl
icebp
subb
ret
sahf
xchg
add
mov
pop
out
sub
loopne
cmpsl
cmp
dec
fbstp
pop
lds
data16
test
test
xlat
add
cltd
xor
mov
mov
dec
rclb
ds
sahf
fidivs
negl
repnz
xchg
and
jp
jl
sbb
iret
xchg
cmp
enter
and
push
in
sbb
jbe
je
outsb
xchg
repnz
xchg
sub
ljmp
adc
ss
gs
mov
cmpl
cld
lcall
in
addl
or
push
sti
sub
xchg
or
testl
in
lahf
popa
clc
rcrb
jb
sbb
outsl
outsb
mov
inc
dec
push
mov
dec
cmp
outsl
scas
push
xchg
jns,pn
cld
xchg
test
call
gs
jmp
sarb
sbb
mov
jno
fnstenv
pop
mov
xor
insb
cmpsl
fnstcw
test
dec
dec
loopne
sub
cmp
mov
jae
bound
movsl
push
and
mov
jbe
aad
aaa
loope
jnp
mov
inc
ret
iret
data16
inc
xlat
mov
push
sbb
mov
xchg
lret
scas
xchg
es
stc
xchg
jp
fs
inc
sub
sub
dec
xchg
sub
mov
popa
clc
add
in
test
fadd
pop
lret
cmc
cwtl
cmp
jae
mov
in
add
push
jno
std
xchg
mov
testb
dec
in
stos
lds
sbbl
push
es
popa
dec
jle
xchg
cmp
xchg
fwait
pop
sbb
add
shrl
jl
popa
outsl
xchg
arpl
add
and
mov
adcb
mov
enter
fcmovne
inc
es
fstpt
sarl
fistpll
in
jbe
in
stos
xor
adc
aad
adc
cmp
pop
ret
pop
inc
cmovns
mov
push
lods
ds
jns
xchg
adc
sbb
pushf
adcb
fiadds
xchg
fs
sub
inc
fadds
mov
test
push
fdivl
jae
mov
popf
xor
jo
push
xor
fsubrs
push
in
subl
push
data16
adc
and
mov
xchg
sub
insl
pop
out
add
jge
pop
dec
call
mov
or
jp
pop
push
or
mov
mov
mov
lea
leave
dec
cld
popf
mov
jecxz
xchg
jge
xchg
jle
repnz
int
and
pop
fcoms
fistl
sbb
adc
or
cmpsb
mov
fsubs
out
stc
mov
cwtl
sub
jb
pop
fldcw
jnp
jmp
int3
in
or
lret
or
or
rorb
sub
cmp
insl
adc
inc
fildll
outsl
mov
call
ljmp
pop
ss
add
out
mov
jp
mov
pop
pop
je
cs
push
lods
cs
aas
jge
repz
jns
inc
and
xchg
or
subl
push
jns
cmpsl
mov
movsb
pop
cmc
into
adc
and
mov
dec
pop
gs
popa
dec
xlat
push
pop
daa
jns
pop
jnp
lds
jnp
out
mov
insl
mov
loope
pop
push
mov
mov
ret
popa
jns
in
mov
or
push
fcoml
test
jns
pop
pop
cmp
sahf
push
push
xor
shll
xlat
out
in
xor
fnsave
faddl
xlat
in
xlat
lret
adc
cmp
xchg
sub
test
mov
loopne
jb
dec
adc
imul
aaa
int3
cmp
add
iret
notl
adc
les
mov
fsubrs
dec
int
rclb
repz
addr16
adc
or
adc
addr16
ja
add
and
fwait
xchg
cmpsl
mov
jge
fsubrp
inc
fld
iret
psubsw
cmp
push
and
int
dec
xchg
mov
sahf
mov
loop
xlat
mov
shrb
scas
sbb
pop
stc
pop
push
or
xchg
popf
pop
hlt
into
mov
jmp
lea
sti
cli
lea
mov
sbb
ja
dec
rorb
sbb
dec
and
cmc
mov
lds
data16
rol
xchg
xchg
pop
arpl
pop
push
in
mov
pop
pop
das
jae
or
lret
sti
cmovnp
adc
lahf
lods
pop
shll
and
aaa
pop
jl
sbb
cmpsb
int
cmp
rcrb
in
jge
imul
rcrl
es
mov
and
mov
sbb
cwtl
sarb
jp
pop
sub
push
pop
repz
sbb
add
scas
or
xchg
xchg
cli
and
aad
and
and
or
es
mov
mov
push
fsubrp
adc
repz
aas
rorl
cmpl
sub
or
adc
cld
cmp
pop
fisubrl
inc
mov
mov
out
fistps
test
push
jbe
and
call
mov
dec
loope
rclb
add
aas
add
ljmp
mov
sbb
push
lea
out
sub
aas
cmpsb
dec
cs
popf
fsts
inc
lcall
das
pop
rcrb
ljmp
data16
addb
or
cmp
lretw
mov
mov
pop
repz
add
adc
lock
adc
xor
in
out
fistpll
push
aad
in
jbe
subl
jne
ret
fwait
dec
loopne
jle
test
rcrl
dec
pop
loop
sbbb
xor
repnz
xchg
scas
pop
inc
lcall
mov
ret
or
sbb
jo
aaa
into
andb
push
add
add
or
dec
xchg
dec
push
popf
jg
mov
aad
and
add
rolb
movsl
add
xchg
push
popf
stos
jno
jmp
stos
jmp
lahf
aam
jb
stc
push
out
adc
jge
lret
testl
jne
and
nop
lret
xchg
dec
je
sahf
mov
cld
lods
jp
test
dec
or
xchg
mov
ret
rol
test
xor
insb
cmp
and
push
xor
aas
imul
add
sub
mov
stc
rcll
cmp
insb
adc
mov
mov
cmp
sbbb
ja
incl
pusha
loope
mov
push
dec
inc
mov
sbb
in
mov
lret
and
loopne
sub
in
call
ret
sub
je
pop
jbe
bound
mov
xchg
cmpsl
mov
push
xchg
mov
fs
sbb
mov
cmp
xchg
sub
mov
push
es
pop
xchg
add
xor
cwtl
rclb
das
test
call
loop
fmul
movsl
js
push
and
fisubs
jecxz
dec
in
inc
mov
movsl
adc
mov
dec
adc
sub
xor
mov
and
cmp
and
mov
and
sahf
jmp
mov
stc
adc
jae
in
movsb
pop
push
lcall
pop
pushf
aam
scas
cmp
pop
hlt
out
rcrl
dec
sbb
sbb
xlat
mov
mov
clc
stc
mov
mov
push
negb
push
push
jmp
dec
or
cmp
inc
test
aad
sub
mov
imul
pusha
ret
inc
xor
in
or
mov
dec
mov
loope
cmc
xchg
adc
xchg
enter
cld
mov
inc
lahf
cmp
lods
mov
scas
inc
inc
stos
xor
push
xor
es
and
jg
ficoml
and
movsb
push
xchg
ret
or
sub
mov
mov
enter
sub
shrl
dec
sbb
aad
pop
scas
mov
push
xchg
sahf
ret
mov
jns
adc
cmp
imul
and
push
out
imul
or
sbb
xor
test
arpl
idivb
and
and
movsl
add
push
xor
xchg
movsl
outsb
and
xchg
jne
shrb
inc
dec
insl
or
jae
in
jle
lods
xchg
cmp
fimull
int
push
mov
mov
xor
lods
ret
int
test
in
ljmp
mov
push
test
cmp
cmp
clc
push
sub
and
push
xchg
cltd
ja
jb
mov
pop
jno
les
imul
lods
sbb
mov
dec
pop
mov
popf
pop
out
into
push
shlb
inc
not
push
jle
push
cli
shll
lret
mov
loop
pop
mov
insl
xchg
loopne
adc
xor
aad
cmpsl
or
lea
dec
movsl
xor
dec
loopne
mov
int3
icebp
push
into
leave
or
inc
cmp
lds
ss
add
jb
popf
mov
frstor
sbb
push
aaa
cmp
fmull
inc
xchg
inc
cmc
mov
cwtl
call
cwtl
jne
test
ss
fisubrl
pop
mov
addr16
sbb
and
loop
stos
adc
push
sbb
rcll
aam
loop
mov
data16
lret
and
repnz
mov
hlt
js
hlt
lds
push
jmp
les
int
cmp
jo
push
divl
mov
adc
push
dec
mov
arpl
mov
dec
inc
in
movsb
cmpsl
fbstp
push
repz
mov
outsl
into
scas
xchg
cmc
cwtl
and
sti
push
mov
add
ljmp
leave
stc
mov
inc
lret
repz
adc
lds
pop
notb
clc
lcall
inc
iret
ss
clc
adcb
push
cli
xchg
xchg
aad
jecxz
paddsw
in
into
repnz
sub
movsb
jg
rcrl
pop
push
xchg
mov
mov
hlt
lods
mov
fwait
mov
adc
push
notb
es
js
popa
test
mov
dec
sub
test
mov
jp
lods
mov
out
mov
and
cld
or
popf
aas
or
pop
xchg
inc
cltd
dec
int
lods
rcr
test
rcll
jmp
inc
push
fidivs
push
jmp
sbbl
xchg
outsl
push
mov
out
cmp
xchg
fisubrl
mov
sbb
pop
sti
jnp
mov
xchg
sbb
xlat
outsb
sub
inc
xchg
dec
adc
call
cmpsl
nop
int
cmp
xchg
mov
outsl
aaa
inc
ljmp
shll
xor
sub
push
sbb
xor
mov
or
cmp
cmp
pop
push
cmpsl
cmp
loope
push
rcrb
stc
pop
imul
imul
shlb
inc
test
shl
cmp
add
clc
into
gs
add
mov
add
call
call
cmpsl
jne
rorl
push
jns
or
out
or
lods
cmp
adc
vpaddd
pop
dec
lahf
ss
andl
mov
jns
and
or
mov
sub
rolb
repz
xchg
cld
jmp
addr16
int3
scas
mov
test
int3
das
and
pop
ret
pop
pushfw
inc
mov
xorb
xchg
popa
inc
movsb
mov
bound
shrl
cld
inc
push
mov
mov
xchg
pop
mov
out
adc
adc
mov
push
jmp
movsb
jp
pop
add
inc
ffree
xchg
scas
inc
in
dec
insb
push
addr16
mov
push
in
jge
lods
jns
xor
repz
cwtl
rcrl
scas
repnz
xor
subl
clc
in
test
xchg
mov
jbe
fdivl
xchg
and
cmc
sbb
es
cli
in
or
xchg
ds
sarl
rcll
inc
rolb
sub
xor
fnstcw
inc
fsubrp
fwait
pusha
mov
movsl
imul
mov
or
push
sahf
mov
add
adc
pop
stc
jge
ja
pandn
leave
cli
xchg
mov
inc
leave
cmp
test
daa
mov
cmc
mov
out
adc
and
scas
repnz
ret
jmp
or
fnstsw
push
fldl2e
or
lock
or
sarl
enter
out
mov
fistpll
mov
xlat
jns
adc
fimuls
cs
lock
imul
sub
mov
push
cld
rorl
dec
fucomip
ljmp
ljmp
push
pop
mov
cmp
in
sbb
fmull
lret
lock
inc
out
sub
sub
xchg
pushf
adc
ret
push
cmc
addr16
jp
in
bound
lods
sbb
daa
lods
rolb
dec
pop
sub
mov
pop
scas
nop
jbe
cmp
pop
add
mov
sub
movsb
subl
push
mov
loop
adc
loopne
inc
xchg
lods
jnp
scas
push
xor
mov
rorb
shlb
add
call
daa
dec
aaa
aam
or
inc
inc
sub
cs
das
mov
push
data16
test
cmp
ljmp
push
adc
scas
sbb
xor
mov
hlt
and
or
xchg
popf
out
testb
outsl
jle
xchg
xchg
in
sbb
cwtl
addr16
cmp
call
mov
sub
mov
fildll
jecxz
fistpl
mov
dec
mov
xchg
push
jae
cmp
fdivl
pop
jo
pushf
aaa
out
mov
lods
scas
fwait
adcb
mov
xchg
xor
pop
icebp
jmp
push
mov
mov
and
jmp
leave
aad
xor
xlat
or
mov
xor
mov
cmp
out
dec
outsb
adc
adc
push
jnp
scas
in
lods
jae
mov
sahf
movsb
sub
nop
adc
lods
mov
repz
pushf
test
dec
push
inc
lret
leave
icebp
movsl
and
lock
stos
inc
jb
aad
mov
std
in
test
and
adc
lahf
lea
shrb
adc
inc
imul
test
and
out
pop
jb
push
sub
inc
in
dec
or
flds
hlt
pop
lock
lea
incl
inc
xor
sahf
xor
test
pushf
inc
lods
scas
aas
mov
sub
sbb
add
cltd
sti
mov
std
cmpsb
sbb
or
mov
push
in
mov
shl
int3
fs
cli
aam
les
add
xor
ja
cmpsb
mov
icebp
rclb
add
pop
xor
sub
pop
xchg
or
push
xchg
clc
js
sub
jo
mov
fcomi
rorl
outsl
pop
adc
cld
shl
push
push
jne
xchg
cmpsl
clc
push
loope
clc
xchg
xlat
fistpll
sbb
fs
js
popa
test
sbb
testb
jmp
sub
ljmp
sti
daa
mov
or
mov
lret
lcall
cmc
xchg
inc
jge
subl
lock
pop
xor
jp
repnz
inc
dec
mov
push
mov
imul
mov
pop
cwtl
xchg
dec
mov
jp
push
fs
inc
push
sbbb
pusha
or
in
sub
xor
mov
pop
dec
in
mov
into
imul
es
ss
sub
or
push
or
enter
mov
xor
les
test
push
repz
xchg
sub
pop
int
mov
nop
mov
rcr
imul
sbb
push
jb
mov
pop
out
push
add
pop
out
iret
cli
cltd
lods
pop
repnz
out
hlt
loopne
lahf
std
repnz
or
out
aad
lcall
push
out
adc
xchg
sbb
push
jp
test
inc
xchg
cwtl
lahf
mov
sub
nop
daa
int3
std
dec
addl
scas
test
push
cmp
mov
jge
aas
or
cmpsl
add
push
cmp
sub
shl
cs
xchg
dec
in
jecxz
pop
xchg
sub
inc
iret
ret
or
inc
adc
mov
jl
popf
mov
xchg
negl
mov
mov
inc
hlt
xchg
sbb
sub
jnp
add
xor
and
sub
or
mov
int3
arpl
mov
add
shlb
mov
push
lods
lcall
int3
dec
repz
sub
in
mov
aam
repz
mov
inc
or
mov
scas
ds
sbb
pop
hlt
lret
inc
inc
mov
xlat
outsb
test
popf
xor
sbb
scas
inc
mov
or
jb
fidivl
xchg
out
call
or
and
xchg
pop
scas
add
jae
mov
mov
fwait
sahf
xchg
xor
imul
inc
xchg
sbb
push
jge
in
es
mov
mov
pusha
mov
xor
push
cmc
inc
jne
rorb
sbb
xchg
jns
sub
sbb
adc
or
xchg
cmp
stos
cmpsl
pop
aas
pusha
enter
sbbl
add
cmpsb
nop
xor
or
shlb
out
popa
xor
cmp
xchg
mov
rcrl
lahf
ss
adc
cld
xchg
dec
arpl
lcall
cmpb
dec
fnstenv
test
mov
pop
into
xor
mov
loope
jmp
std
repz
ret
jae
in
jge
and
inc
cmpsb
fisubl
push
loopne
shrl
add
pop
xchg
mov
sub
mov
jbe
or
sub
ret
mov
cmpsb
cmp
cmp
jg
pop
data16
xor
movsb
cmp
mov
sbb
sbb
cmpsl
jle,pt
dec
loopne
lahf
jmp
lahf
flds
in
cli
jp
ja
lret
dec
out
xchg
in
push
mov
push
outsl
push
cmpsl
pop
stc
insl
enter
mov
adc
outsb
add
xchg
dec
loopne
insb
mov
fisttpl
cs
fidivl
fnsave
inc
frstor
cmpsb
mov
shlb
imul
mov
push
mov
shrl
leave
dec
arpl
ljmp
pop
out
add
lcall
nop
in
or
adc
adc
push
mov
cld
loop
lret
int3
in
xchg
sub
push
mov
add
lcall
sbb
scas
add
pop
icebp
sbb
insb
add
test
call
and
lcall
inc
aam
clc
lock
and
xor
outsb
gs
shlb
jno
and
insb
xchg
sub
lret
push
out
push
loopne
cmp
push
lcall
mov
pop
in
xor
fnsave
xchg
shrl
pop
cld
xchg
jmp
xchg
pop
cmc
mov
jg
add
aam
xchg
int
sbb
fwait
pusha
testl
adc
int3
sbbl
into
or
aam
shll
ret
or
outsl
push
fisttpl
shrl
add
jg
ret
mov
mov
xlat
out
clc
fidivl
or
aad
push
test
arpl
fadds
xor
clc
pop
mov
arpl
jle
or
adc
cmp
leave
out
mov
add
div
loope
sub
inc
xor
out
jno
and
push
xchg
ljmp
mov
pop
cld
imul
pop
loope
mov
mov
lret
fs
push
dec
jbe
jl
sbbb
shrl
xchg
cmp
aaa
sahf
pop
xchg
test
loopne
mov
push
ret
mov
lds
rorl
sbb
repnz
jl
or
and
push
ljmp
inc
mov
jno
push
rcll
inc
shlb
and
pop
cmp
icebp
jge
pop
call
pop
adc
xchg
add
fistl
fistpll
mov
adc
fwait
imul
in
jnp
scas
inc
mov
fidivs
test
test
leave
pop
mov
dec
call
stos
mov
popf
arpl
dec
adc
cld
scas
pop
cmp
mov
and
lcall
push
add
cmpsl
jnp,pt
mov
and
xchg
xchg
sub
arpl
ss
mov
out
xchg
xchg
sub
cwtl
das
mov
mov
out
jp
insb
jbe
insb
imul
test
shl
sbb
cmp
push
movsl
xor
out
xor
dec
sbb
xor
sarb
rcrb
loope
xor
fmul
popa
out
xor
aaa
scas
ror
bound
fnstenv
and
dec
loop
add
cltd
inc
cltd
jbe
or
ljmp
cmpsl
loope
pop
mov
mov
and
mov
and
data16
jp
or
pop
fwait
adc
in
dec
inc
ficomps
mov
and
jnp
sti
sub
out
xchg
xor
mov
dec
lods
clc
cmc
es
daa
mov
jns
inc
xlat
outsl
push
dec
in
nop
pop
cmc
shll
adc
nop
repz
push
rolb
sub
xchg
daa
xchg
popf
push
imul
dec
xchg
pop
jno
inc
mov
jge
pop
mov
xchg
lock
stos
jl
idiv
jo
loop
addr16
mov
jge
fdivp
inc
mov
addr16
das
loope
mov
loope
push
fadds
mov
mov
sbb
adc
sbb
cmp
inc
aam
pop
xchg
mov
out
sbb
andl
call
xor
mov
add
jecxz
cmpl
and
imul
fiadds
or
sub
inc
fdivl
int3
pop
cmc
mov
sub
fcomps
cmp
test
int
dec
fbstp
mov
jl
cld
dec
in
test
or
jp,pt
push
jmp
daa
and
jb
xchg
pop
xchg
sub
sub
cltd
insl
dec
push
bound
clc
adc
test
nop
cmpb
mov
nop
adc
mov
add
scas
jmp
rcrl
push
pop
loop
adc
add
cltd
inc
in
test
and
pop
int
ja
popa
clc
iret
push
in
test
sub
push
or
jg
or
jge
call
mov
movsb
or
ja
movsl
cmp
push
stc
jg
dec
in
ljmp
xor
cmpsl
mov
sbb
fsubrs
pop
or
loopne,pn
pusha
movsl
sbb
mov
cmp
out
test
aas
lcall
das
lret
inc
fdivrs
cmp
hlt
add
jmp
mov
adc
lahf
cmpsb
jbe
loope
jp
out
or
lods
push
pop
cmc
or
sahf
loopne
push
mov
add
lcall
jg
into
jg
mov
nop
lds
imul
sbb
xchg
movsb
cmp
lea
jns
fcompl
add
push
jg
insl
mov
jb
popl
cltd
shlb
ja
jbe
cwtl
jmp
stc
nop
fs
add
sub
sahf
xor
sarb
je
icebp
mov
shll
das
push
repnz
mov
xor
pop
pop
push
mov
dec
dec
test
push
dec
xlat
mov
pop
dec
cmc
ret
pop
into
jo
push
mov
ret
ret
loope
inc
mov
fdivrl
add
ret
pop
mov
ret
fsts
mov
out
dec
mov
dec
loopne
xlat
test
pop
in
icebp
mov
cwtl
das
rcll
cmpsl
add
mov
mull
stos
inc
scas
xchg
inc
fisubs
rol
pop
add
addr16
inc
jp
sbb
sub
loop
dec
lock
and
inc
lret
push
jmp
inc
unpcklps
xor
inc
fdivp
push
xor
push
mov
rcr
mov
faddl
cli
ds
and
inc
dec
sub
pop
push
js
jl
mov
lcall
sbbl
fisubs
xchg
std
fnstenv
out
mov
es
ds
pop
jl
push
mov
popf
rcrl
pop
hlt
jmp
or
popa
insb
add
mov
cmp
scas
movsl
cmp
ljmp
dec
or
test
call
add
addb
cmp
add
clc
jne
mov
mov
and
ficoml
mov
insb
test
sti
inc
lock
sbb
into
xor
or
add
sbb
adc
cli
and
add
push
scas
ja
jg
mov
rclb
fwait
sbb
add
push
mov
adc
push
push
mov
xchg
dec
fbstp
dec
nop
push
in
inc
mov
xchg
jbe
in
jbe
scas
lods
xchg
sub
cmp
test
sbb
xchg
out
cli
or
shl
or
rcr
and
int3
sbb
out
stos
insl
fmull
mov
jg
stos
inc
mov
jbe
sub
enter
adcb
rcrl
or
jnp
push
push
and
cli
int3
jl
rcll
addb
cmp
mov
enter
sbb
into
adc
fldt
or
jns
xor
lea
dec
cld
dec
push
mov
mov
jo
sti
mov
cmovo
inc
push
adc
inc
xor
mov
push
dec
jnp
jge
and
push
push
out
test
imul
xchg
inc
mov
jns
psadbw
mov
les
out
push
mov
ss
and
jmp
mov
xor
cmp
lock
lock
or
cmp
int3
push
in
mov
push
das
movb
into
add
test
mov
adc
into
inc
sub
lahf
test
adc
test
lods
xchg
notl
test
mov
test
jo
mov
loopne
jg
dec
push
popl
test
divl
xor
shl
cmp
xacquire
adc
fimull
add
xchg
xchg
jbe
inc
test
mov
mov
mov
packssdw
inc
adc
xchg
imul
jge
js
mov
test
inc
fiaddl
add
and
mov
add
sub
cmp
xor
add
bound
mov
jno
jmp
pop
icebp
jnp
mov
sbbb
sbb
adc
ss
mov
push
in
nop
mov
lods
mov
leave
int3
jbe
inc
push
incl
sahf
lock
iret
cwtd
inc
sbb
in
xchg
fstl
mov
cmp
sbb
ds
jle
sahf
xor
outsl
int
inc
mov
or
jbe
xor
mov
xor
fnsave
repz
std
testb
int
test
pop
adc
pop
dec
rcl
push
das
fmuls
aaa
into
stc
inc
inc
fdivl
push
in
dec
xchg
sbb
sahf
jmp
xchg
sub
cmp
insb
adc
or
iretw
cbtw
loopne
sub
mov
mov
gs
iret
mov
rcll
or
shl
or
and
inc
dec
pop
fsubl
sbb
cmp
test
into
push
je
mov
mov
adc
or
xor
pop
in
shl
mov
shl
pop
scas
cmp
mov
mov
sub
inc
mov
inc
loop
pop
xchg
add
cmp
mov
jb
xorl
std
movsb
sub
rol
sti
mov
jno
mov
shll
ds
pop
not
mov
sahf
loopne
push
mov
adc
mov
inc
es
xor
push
sti
pop
sub
or
jnp,pn
test
or
sub
ffree
ficomps
adc
in
pop
mov
add
xchg
or
sar
adc
mov
pop
mov
iret
out
inc
or
mov
sahf
xor
shl
insl
and
bound
out
pop
icebp
sub
xor
enter
mov
out
outsl
add
das
popa
xchg
cmpsl
orb
cwtl
mov
insl
aam
and
xor
out
dec
mov
test
push
je
aam
call
cmp
shrl
sbb
mov
dec
fmuls
insl
pop
mov
in
rcr
add
mov
jno
jnp
adc
mov
mov
adc
aaa
add
xchg
adc
fcoms
lock
push
cld
adc
add
dec
out
arpl
mov
into
test
jbe
insb
loopne
cmc
orl
pushf
add
fildll
adc
pusha
loope
aas
int
repnz
aad
or
stc
cmp
inc
pop
andl
or
cmp
rcrb
or
mov
repnz
fisttpl
adc
outsl
or
aad
iret
cmpsb
out
test
xorb
movsb
les
icebp
movsl
ret
sub
mov
negb
adc
les
out
out
into
push
jae
movsb
push
cmpsb
popa
and
popa
cwtl
enter
mov
pop
repnz
sysret
mov
cwtl
xchg
inc
jecxz
mov
mov
fistl
cs
mov
pop
and
les
mov
dec
in
sub
mov
mov
icebp
scas
lods
mov
les
cmpb
sub
notl
inc
jle
gs
sbb
dec
fbld
data16
stos
data16
xor
cwtl
adc
ljmp
in
cmp
push
popa
clc
inc
in
inc
icebp
stc
xor
addl
or
jno
test
add
adc
add
out
jb
push
push
push
fadd
stc
jo
add
nop
scas
sbb
stos
pop
or
scas
cmp
mov
pop
scas
xor
jne
in
xchg
and
mov
clc
xchg
lock
ss
shll
and
stos
xchg
jo
sbb
ljmp
pop
push
fdiv
lret
pop
icebp
jns
adc
sbb
mov
xchg
dec
movl
js
unpckhps
pop
sub
scas
mov
loopne
enter
leave
std
aas
out
arpl
movsb
iret
push
cltd
lret
iret
inc
movsl
xchg
cmp
dec
into
imul
stos
cltd
jno
mov
ret
popf
or
pusha
shlb
mov
sub
mov
mov
jbe
pop
test
ss
mov
jp
push
pop
sub
mov
nopl
cmp
subl
pop
testl
cmp
imul
mov
push
in
and
imul
pop
mov
insl
lea
rcrb
jo
cmp
outsb
adc
je
pop
lret
lret
mov
push
mov
rorb
in
in
sbb
andb
jle
std
inc
leave
adc
stos
mov
jns
xor
mov
pop
jmp
or
loopne
and
push
mov
test
sbbb
bound
xor
mov
cli
pop
jl
xchg
loope
ret
mov
lret
mov
fwait
mov
int
inc
cmpsl
inc
addr16
cli
stos
ljmp
dec
in
out
pop
imul
movsl
cli
inc
xlat
jg
mov
in
sub
sbb
jmp
sub
xor
push
enter
jb
jne
mov
dec
in
mov
mov
mov
cwtl
add
mov
mov
ret
xlat
and
dec
in
sub
nop
jae
out
jns
in
push
shlb
jp
enter
xor
push
repz
aad
sbb
subps
out
pop
jge
bound
push
add
test
or
pop
adc
dec
fsubrs
lea
and
cltd
adc
cmp
subb
xor
pop
out
sbb
sti
sahf
push
repz
add
ljmp
inc
dec
clc
sbb
loope
fwait
in
loopne
inc
in
xlat
das
xchg
jns
dec
aas
lea
mov
imul
jmp
test
out
pop
dec
loope
sbb
inc
sbb
xor
xchg
mov
rol
fnsave
movsl
and
xchg
pop
rcl
push
and
mov
out
dec
mov
outsb
xor
sub
aam
pop
cli
pop
jae
mov
sbb
inc
std
dec
mov
das
mov
mov
mov
sti
iret
cmp
out
dec
push
inc
scas
sbb
add
fcoms
aad
push
inc
scas
sbb
insl
inc
out
out
ja
pmaxsw
mov
cwtl
rcr
xor
adc
dec
out
lds
bound
mov
jmp
xchg
mov
or
jmp
xor
mov
sub
jge
push
sbb
and
imul
cmp
jb
sub
xchg
dec
push
xchg
sub
test
xor
and
es
aam
ds
pop
repz
scas
inc
or
jl
rep
cmpsb
sbb
loope
mov
and
mov
ss
fdiv
nop
pop
ljmp
shrl
mov
outsl
fidivl
int
insb
mov
cwtl
cmp
pop
rcr
nop
into
adcl
or
fsubl
pop
fwait
data16
das
jg
mov
sbb
sbb
jnp
mov
and
jns
loope
xchg
lcall
dec
fsubrl
cli
lcall
and
inc
dec
loope
add
mov
mov
shlb
imul
xchg
cmpsb
mov
in
outsl
jbe
adc
insl
add
ss
lret
andnps
sub
and
lahf
dec
push
sahf
dec
lock
dec
pop
rclb
jns
push
jle
das
nop
adc
clc
cmp
adc
pusha
inc
les
fstps
fstpl
iret
mov
pusha
stc
push
xor
lock
jb
mov
sub
mov
fwait
mov
cs
gs
pop
repnz
cmp
adc
and
dec
iret
mov
mov
in
or
push
repnz
jb
in
cmp
pop
ljmp
jle
sub
jmp
sbb
add
xchg
and
xor
cmpsl
jp
movsb
dec
jne
add
test
test
push
mov
sbb
cmp
or
push
or
pop
rorl
and
jns
mov
cwtl
imul
loope
nop
sub
idivl
mov
lret
jp
lds
inc
popf
pop
std
stos
sub
mov
dec
dec
xor
jecxz
push
sbb
dec
loopne
jge
adc
dec
sbb
loop
jne
mov
das
mov
aam
push
add
mov
cmc
fwait
adc
and
roll
scas
mov
fidivl
cmp
xchg
in
cltd
pop
dec
repnz
call
jae
jle
mov
ljmp
inc
push
test
xchg
addb
dec
mov
sbb
sub
inc
aaa
mov
sahf
or
inc
xchg
out
mov
cmp
mov
or
push
fadd
pop
or
mov
aaa
mov
rcrb
adc
mov
adcb
pusha
lock
inc
int3
sbb
pop
xchg
aaa
mov
pusha
cmp
mov
sub
mov
jb
in
dec
cmp
mov
je
mov
stos
inc
pop
scas
stos
jge
sub
push
hlt
and
dec
push
pop
mov
movsb
icebp
mov
dec
jecxz
adc
sbbb
fiaddl
ja
mov
scas
scas
add
lock
mov
adc
repz
mov
imul
sbb
icebp
mov
stc
push
mov
enter
and
vcvtps2dq
int3
lock
subb
dec
test
popa
jmp
cmp
or
cmp
sub
inc
out
mov
sub
jmp
xchg
xchg
movsb
push
popf
fsub
cmp
mov
sbb
lods
push
mov
sbb
jne
hlt
push
fdivrl
testl
push
and
dec
out
aam
arpl
jp
aam
adc
or
push
sub
mov
sarl
jl
xchg
pop
repz
cmpsl
inc
mov
xor
mov
fcompl
hlt
cs
fbstp
addr16
sbb
jno
pop
inc
mov
xor
fldcw
lea
xor
into
push
adc
mov
mov
sub
push
sahf
mov
mov
xor
mov
adc
or
cmp
jmp
lods
inc
mov
mov
mov
fstl
rol
and
loope
mov
xor
in
int3
mov
int
jns
sbb
fistl
bound
test
je
dec
iret
adc
leave
loope,pt
movsb
gs
pop
insl
scas
or
jle
add
ds
nop
aas
dec
jbe
jg
mov
test
xchg
sub
lret
cld
data16
shrl
fnsave
cmp
es
pop
cmp
lcall
sub
repz
shl
and
out
rclb
call
ret
mov
mov
jmp
xor
lcall
fbld
sub
mov
xchg
scas
inc
sub
int3
arpl
dec
jbe
xlat
sbb
and
and
insb
inc
in
dec
push
hlt
scas
adc
mov
inc
rcl
jl
rol
sti
jmp
sub
ret
push
mov
test
insl
push
or
imul
or
and
jns
ret
imul
pop
add
int
and
test
dec
bound
xor
movsb
jecxz
sbb
pop
push
mov
add
sbb
mov
mov
filds
cmp
jo
imul
dec
sub
repz
mov
loop
call
mov
outsl
insl
iret
fstpl
ds
mov
in
ja
dec
push
jl
shl
or
pop
imul
shll
fwait
mov
push
sti
idiv
push
lea
sbbb
scas
sub
sbb
jge
cmp
push
or
xor
imul
adc
jg
bound
push
fs
js
inc
test
int
fisubl
lcall
and
test
mov
cmp
fsubs
mov
push
movsb
dec
scas
add
cmp
dec
inc
cmc
cmp
in
movsb
je
and
xor
cwtl
inc
sahf
dec
ljmp
sahf
add
fmul
xchg
mov
popa
cmp
cmp
pop
dec
cmp
in
out
sbb
in
sub
int3
pop
jmp
imul
pop
xor
mov
in
push
mov
push
sbb
or
dec
lods
mov
ljmp
loopne
loopne
sbb
fadds
push
add
or
pop
out
cmp
ljmp
fucomip
xchg
sahf
sbb
push
sbbl
sbbb
sbb
out
push
push
mov
ja
lods
test
into
aas
aad
push
and
inc
divl
cmp
xor
ret
fs
loopne
and
push
lods
repnz
sbb
push
mov
popf
stos
push
inc
push
push
scas
or
ljmp
jae
push
out
cld
xchg
scas
cmp
or
mov
adcb
pop
aas
fidivl
mov
adc
xchg
push
pop
mov
test
sbb
xchg
sbb
xchg
fsubr
test
pushf
jge
dec
jns
xchg
and
add
add
push
inc
mov
bound
jo
test
push
aad
subb
or
sbb
dec
dec
add
mov
mov
ret
call
jmp
test
mov
jle
sub
fnstcw
dec
xchg
push
in
stos
adc
mov
and
xchg
dec
pop
lods
adc
and
lcall
cmp
xor
je
add
xchg
lds
fucomp
out
addr16
dec
scas
jmp
push
sub
out
mov
xchg
push
mov
sahf
shr
xchg
dec
icebp
adc
fwait
pop
push
lea
in
mov
mov
fcoms
jecxz
imul
movsl
sbb
ds
mov
cmpsl
dec
xchg
pop
out
and
cmp
popa
scas
jb
jo
stos
gs
stos
dec
cmovne
add
adc
fsubl
dec
outsl
daa
loop
inc
movsb
negb
jae
incl
and
pop
ljmp
cli
leave
dec
stos
pop
scas
add
mov
mov
out
pop
les
xchg
cmp
scas
push
clc
mov
pop
add
pop
das
pop
fimuls
xchg
dec
fidivrs
cmp
cmp
negl
xlat
inc
mov
lret
ss
lret
movsl
and
mov
xorl
adc
ja
gs
jecxz
cwtl
sub
push
sbb
xor
xchg
fs
lock
pop
daa
or
add
mov
and
mov
shrl
aam
je
xchg
sbb
js
cmp
inc
aam
mov
sbb
or
adc
jecxz
and
cmp
cmc
insb
jbe,pn
lods
adcl
pop
int3
xor
mov
jp
dec
sbb
cmp
lahf
outsl
subl
pushf
pop
test
mov
nop
test
dec
mov
jbe
sub
fldl
push
pusha
mov
mov
icebp
push
push
adc
dec
mov
mov
into
jge
mov
ljmp
int3
bound
iret
push
fs
mov
jg
jg
test
sub
mov
mov
mov
sub
das
sub
insl
out
out
int
push
dec
cs
pop
push
mov
or
in
jecxz
sahf
lahf
stos
inc
fs
sub
cmc
xor
mov
leave
push
xchg
dec
jb
insl
aas
jecxz
cmpsl
andb
jecxz
fstpl
mov
arpl
leave
pop
scas
jmp
out
shlb
xchg
or
es
and
je
adc
xor
andb
loope
pop
cld
lea
or
jge
pop
adc
out
mov
mov
add
pop
cmp
std
loope
daa
outsb
xchg
add
bound
mov
sbb
cld
or
sbbb
jnp
adc
xor
jp
jl
frstor
stc
cmpsl
notl
and
in
dec
daa
int3
arpl
ljmp
outsl
fiaddl
mov
repnz
cmp
lahf
in
mov
adc
sbb
push
imul
addr16
bound
cmp
rclb
fdivl
int3
mov
dec
push
jmp
fwait
adc
cmc
loopne
dec
jmp
aas
dec
fsts
jb
pop
sti
movsb
or
inc
push
jae
jge
inc
mov
adc
push
je
lds
outsb
dec
sbb
leave
mov
and
xchg
scas
ljmp
out
mov
scas
popa
fistps
jno
ds
mov
fwait
xor
add
inc
lcall
pusha
xor
shll
inc
pop
pop
cmpsl
out
outsb
loopne
adc
cmp
cltd
test
mov
ret
ret
push
dec
push
mov
push
adc
jp
push
aam
dec
int
in
sub
insl
int
mov
notb
dec
clc
popl
fsubr
sti
inc
lahf
out
mov
stos
push
pop
jo
pop
jp
pop
lods
scas
pop
mov
aam
mov
push
xlat
ficoms
pop
xor
jle
dec
mov
mov
cli
sbb
and
push
out
dec
pop
fs
rcll
cmpsl
dec
mov
mov
daa
sub
jp
mov
les
pop
call
or
inc
pop
pop
cltd
or
int
pop
xchg
adc
sub
out
int3
adc
cwtl
stos
xchg
inc
stc
pop
add
jmp
cmp
mov
pop
hlt
fistps
arpl
pusha
stc
pop
jg
mov
std
sbb
jge
mov
incb
and
stc
fwait
dec
loope
jge
enter
cmpsb
outsb
insb
mov
push
ja
push
mov
adc
frstor
outsl
ds
jae
bound
int3
mov
push
pop
push
jle
rorb
push
lret
sar
push
cmp
pop
cmp
pop
dec
lock
adc
and
sub
std
or
jnp
mov
aaa
jmp
add
and
or
out
push
jb
iret
std
lret
jnp
orl
dec
push
add
adc
push
cwtl
fisubrl
popa
mov
out
lret
jo
pop
xor
sbb
and
lds
scas
bound
insl
fdivrs
stos
cmp
cwtl
mov
jnp
test
mov
pop
jnp
das
aaa
decb
arpl
cmpsb
ja
mov
pop
add
mov
cmp
out
mov
mov
jmp
push
pusha
lods
ret
jbe
das
icebp
lock
xchg
sbb
stos
daa
addr16
push
pop
lahf
mov
repz
dec
testl
mov
jecxz
insb
jmp
shrb
mov
frstor
ret
popf
xor
into
mov
pop
mov
movsb
pop
mov
adc
imul
ljmp
sarl
daa
negl
push
hlt
nop
popf
mov
ret
mov
ret
call
ret
push
loope
lds
xorl
cmp
dec
xchg
mov
bound
shrb
xchg
push
in
inc
xor
xor
mov
mov
hlt
mov
mov
jbe
addb
push
mov
cmp
jle
xchg
sub
adc
inc
lret
inc
mov
hlt
add
sub
add
hlt
and
sti
mov
and
inc
push
ss
sub
xorl
cltd
popf
cmp
fs
lods
shlb
mov
xchg
adc
js
out
mov
roll
loop
sbb
jbe
out
add
and
pusha
andb
std
insb
mov
test
out
sub
rcll
sub
out
outsl
fidivl
mov
ds
push
add
push
mov
push
aam
xchg
call
jnp
sbb
sbb
mov
sarb
call
inc
in
mov
xchg
test
and
xchg
push
mov
ss
lret
inc
lcall
jno
jl
pop
xchg
lcall
lahf
out
sti
lahf
pop
idivb
mov
xchg
jmp
push
fldl2t
cmp
inc
andl
jg
cmp
loope
outsb
cmpl
test
add
mov
push
je
add
sbb
inc
and
dec
push
shrb
out
cmp
ljmp
fldt
outsl
add
sbb
mov
out
xor
dec
test
push
inc
mov
int
sub
sahf
pop
repz
arpl
xchg
sub
push
out
out
push
lea
test
mov
push
lret
dec
sbb
xchg
fsub
dec
cmpsb
sub
test
dec
cltd
sub
mov
jnp
rcrl
jb
pusha
mov
addr16
pop
gs
jp
jo
add
in
dec
lret
sbb
xchg
cld
xchg
mov
notb
cmpb
pop
lds
jnp
stos
add
in
mov
shll
cwtl
daa
je
and
jecxz
loopne
xchg
lahf
mov
cmp
call
mov
xchg
dec
ficoms
jno
inc
icebp
pcmpeqb
add
int3
dec
pop
gs
idivb
cmpsb
xchg
insl
fstpl
jns
shrl
push
imul
ret
imul
sbb
icebp
and
sbb
adc
inc
popf
hlt
inc
nop
in
lods
out
mov
cld
cwtl
sub
iret
fsubr
xor
inc
mov
int
xlat
sbb
lcall
sub
jg
cwtl
push
inc
scas
adc
sub
addb
sti
mov
in
in
jg
push
call
jns
daa
stos
xor
dec
mov
cmp
adc
xchg
aad
dec
fiadds
lea
xor
arpl
in
lds
daa
push
insl
push
fwait
push
pop
testb
jge
sbbl
sbb
cmp
cwtl
jns
outsb
mov
lods
add
insl
test
mov
push
hlt
xor
jns
adc
xor
mov
jnp
inc
arpl
pushf
adc
int
into
xor
lock
sub
ret
bound
out
in
div
push
jo
jns
cmp
popa
or
cmp
xor
mov
mov
pop
jp
adc
push
adc
out
jo
add
mov
scas
cmc
push
aas
sub
daa
and
scas
inc
push
sbb
imul
shrb
bound
addr16
icebp
mov
incl
cs
add
jno
pop
mov
xchg
pop
cmc
les
jl
bnd
shrb
pop
ror
cmpl
push
popf
xor
outsl
push
sbbl
xor
jmp
js
fsubl
xchg
hlt
je
es
fwait
xor
xchg
lret
jns
arpl
mov
mov
cltd
mov
addr16
dec
lock
dec
popa
mov
scas
pop
lock
mov
cli
rorl
cmp
andb
inc
push
movsb
fbstp
mov
mov
js
cmp
shl
mov
test
das
rolb
add
mov
xchg
pop
cwtl
mov
dec
jge
scas
or
xchg
jp
sub
test
into
mov
mov
repnz
xor
fldcw
xchg
sub
shlb
or
cmc
fs
push
pop
out
sbbb
and
jmp
jo
test
inc
jne
shll
movsb
adc
push
sub
loop
mov
jle
xlat
ljmp
push
pop
adc
xchg
add
insb
lds
call
bound
lods
mov
xchg
and
jl
stc
mov
sub
adc
je
popl
test
ljmp
out
sbbl
aad
in
mov
aam
xor
adc
fcmovb
pop
or
pop
jbe
jp
aaa
lods
add
daa
movnti
inc
mov
imul
addr16
rcl
mov
lock
das
add
cmp
fwait
mov
add
jmp
sahf
fildll
es
add
jb
daa
and
push
mov
lock
mov
into
daa
lods
jp
fiaddl
sbb
sub
pop
out
jmp
xor
mov
pop
adcl
cmpsl
push
jmp
andb
or
inc
rcrl
pop
loop
cmp
out
mov
inc
jmp
les
outsl
push
call
adc
std
shrl
jae
push
fisttps
pop
adc
mov
sti
jp
and
das
mov
das
sbb
addl
dec
and
stc
xchg
psadbw
xchg
xchg
mov
out
adc
mov
or
call
and
xor
xabort
nop
ss
sbb
jmp
or
sbb
inc
jo
inc
jl
movd
daa
xchg
inc
cmp
cmc
inc
mov
lahf
repz
push
sub
in
std
jae
cmp
out
lea
mov
adc
scas
sbb
icebp
hlt
addr16
fwait
bound
bound
loop
pop
dec
dec
cmp
icebp
enter
xor
in
push
in
loope
cmpsl
lds
repnz
negl
stos
test
in
inc
es
mov
jae
mov
adcb
adc
jle
jo
addr16
test
test
mov
and
xor
adc
ljmp
inc
ljmp
pusha
xorb
ja
pop
xor
lcall
sbb
sbb
dec
xor
push
mov
dec
and
stc
push
cwtl
add
push
push
xchg
out
test
push
fiadds
leave
mov
imul
or
xor
cmpsb
sub
lea
mov
loopne
shlb
ficomps
dec
jmp
add
jg
cmc
push
jnp
mov
add
bound
and
mov
loope
int
sub
lcall
fbstp
ss
test
imul
hlt
aad
inc
icebp
insb
imull
cld
stos
and
xor
das
cmc
dec
push
xor
dec
jae
rclb
lret
lret
and
xchg
push
in
jb
push
pop
mov
jp
inc
dec
std
dec
cmp
cmp
bound
cld
js
mov
lret
lahf
dec
or
add
repz
in
dec
mov
ljmp
mov
lcall
sbb
cld
sbb
bound
pusha
addb
or
mov
in
les
push
movsl
lds
cld
or
and
cltd
xor
lea
rcrb
pop
and
mov
mov
aad
or
dec
cmp
out
xchg
aam
orl
divl
pop
imul
adc
mov
ret
hlt
or
mov
lcall
cmpsl
ds
push
sub
xor
mov
ret
mov
mov
add
adc
mov
mov
ss
or
sbb
in
arpl
mov
sub
in
loope
jecxz
notb
push
arpl
test
add
adc
add
ds
testb
adc
or
insb
js
jbe
cmpsb
into
mov
mov
mov
dec
shl
add
inc
jle
je
dec
mov
or
pop
sbb
mov
fwait
test
cmp
jle
jo
imul
mov
xor
aad
shrl
mov
push
lea
imul
xchg
jecxz
add
in
inc
fidivl
and
inc
in
lret
int
sub
cwtl
out
outsl
push
xor
ss
scas
mov
xchg
mov
insb
push
ljmp
loope
sahf
pop
sub
lods
jecxz
jmp
out
fmul
push
jb
pop
movsb
out
mov
shll
fldt
test
xchg
mov
hlt
rolb
cmpsl
aas
scas
push
xchg
sub
mov
and
iret
push
ds
xor
das
cmp
lcall
mull
in
push
mov
clc
xor
pop
and
jo
ja
out
out
mov
or
xchg
mov
ret
cs
dec
into
movsl
enter
add
push
mov
xchg
and
stc
es
out
rclb
pop
sub
add
fsubr
sub
add
bound
sub
push
call
xchg
dec
inc
out
xor
pop
xchg
sub
add
cmp
inc
mov
shll
lds
pop
xchg
dec
in
mov
push
insl
adc
dec
push
sbb
mov
shll
sbb
fsubrl
fcmovb
ret
jnp
stc
inc
push
or
dec
testl
int3
jmp
outsb
frstor
push
jg
aas
push
cmp
inc
cmp
test
jb
pop
popa
dec
mov
shll
sbb
adc
subb
sbb
adc
adc
and
fmuls
std
js
insb
subl
cli
enter
loope
aad
and
mov
nop
stos
fidivl
lret
insl
jecxz
and
imul
mov
jne
jl
add
bound
push
call
xlat
test
adc
rcrl
add
int3
arpl
call
mov
push
outsb
hlt
js
cmpb
data16
ret
mov
dec
cli
jle
dec
jo
inc
dec
pop
scas
in
fwait
iret
xor
lock
jle
loopne
mov
fdivp
adc
jb
rcl
mov
jae
mov
push
or
xor
je
adc
mov
in
xchg
pop
subl
inc
enter
xor
dec
pop
push
push
mov
xchg
in
adc
cmp
test
mov
sub
mov
pop
cmp
jecxz
pushf
clc
jnp
mov
sub
and
std
and
bswap
out
mov
sbb
xor
pop
mov
push
cld
popl
mov
data16
fwait
jo
je
xor
jo
or
xor
pop
shl
dec
push
movsl
sahf
jns
dec
pop
xor
xor
add
in
cwtl
cmp
jae
pop
cmpb
roll
jb
notl
add
shrl
rolb
into
in
insl
jmp
lahf
into
lret
lods
sub
pop
ljmp
inc
and
mov
inc
mov
adc
pop
shl
std
pop
loope
cmp
mov
sarb
imul
in
inc
cwtl
xor
nop
xchg
sub
cld
mov
and
dec
mov
sbb
sub
addr16
xlat
mov
cld
cltd
test
fs
cmp
dec
mov
mov
xchg
pop
pop
std
mov
loopne
sbb
mov
das
cmpsl
call
shrb
jge
inc
movl
fstpt
dec
push
in
mov
add
ja
pop
xchg
stos
xchg
outsb
and
stc
jecxz
mov
adc
dec
dec
lock
fdivrs
sub
xchg
push
xchg
inc
mov
mov
gs
pop
aaa
mov
jge
push
repnz
add
cmp
cmpsb
push
shl
xor
mov
aam
fwait
add
mov
xor
jno
imul
insb
out
iret
pop
stos
jae
push
dec
ja
call
shr
lret
xchg
addr16
lods
nop
dec
es
lret
iret
jmp
push
jmp
jge
jno
nop
mov
xchg
insl
test
mov
lea
pop
push
mov
mov
or
mov
fcmovne
xor
lret
bound
aaa
mov
cmpb
dec
das
pop
mov
movsl
ret
push
xchg
lret
repz
lcall
dec
cs
mov
aas
xchg
xchg
cmp
vcvttss2si
adc
fwait
and
xor
das
sarl
psllq
dec
dec
adc
cmpsb
xlat
add
cmp
mov
inc
push
fstpl
jae
inc
lods
xchg
fidivl
xchg
rolb
stos
aad
jbe
xchg
jo
and
push
cmp
pop
jb
mov
leave
jno
loopne
sub
leave
inc
out
icebp
pop
add
inc
adc
scas
mov
mov
fiaddl
pop
add
nop
and
ds
sub
sahf
lods
fcomps
mov
std
test
stos
movsl
lods
or
sbb
push
mov
jle
imul
and
mov
int3
mov
pop
int
movsb
inc
xchg
jne
movsb
xchg
pop
cmp
sub
jnp
push
notl
adcl
aas
and
mov
testb
nop
popf
dec
into
add
lock
and
fsubr
push
icebp
xchg
in
and
out
loop
dec
pop
xchg
mov
push
fldt
xchg
insl
outsb
out
fs
cmc
inc
mov
dec
shrl
rol
je
or
imul
or
incl
insl
mov
iret
lret
xchg
sub
push
mov
sbb
sbb
xchg
dec
out
jnp
push
loope
das
adc
push
adc
mov
out
mov
mov
sbb
ret
sub
in
cltd
xor
mov
push
es
or
rol
sub
mov
idivl
pop
call
adc
hlt
adc
shr
repnz
xor
cltd
std
les
push
daa
cld
adc
inc
or
and
fidivl
xchg
movsb
push
inc
xchg
push
jae
test
in
jle
aad
xchg
sti
arpl
leave
pop
add
push
out
and
and
movsl
icebp
int
fisubrl
loope
cmpb
iret
pusha
lds
cmp
imul
or
dec
fnstenv
mov
je
or
mov
adc
leave
add
dec
inc
mov
inc
orb
hlt
in
sub
aad
push
int
ja
pop
pop
push
rcrb
jae
ja
mov
xchg
jg
pop
ffree
pop
lahf
idivl
sub
and
pushf
sti
xchg
clc
cmp
mov
leave
out
aam
test
cmp
cmp
adc
je
add
xchg
jns
cmc
cmc
fldcw
call
jp
movsl
mov
adcb
les
imul
lea
sbb
cmpb
jl
mov
pop
out
mov
stos
push
sbb
cmp
cmpl
adc
or
lahf
add
fnstenv
movsb
sahf
in
div
dec
jecxz
cmp
pop
movsl
lds
jl
scas
mov
iret
pop
insl
inc
inc
insb
in
lret
bound
mov
jp
sub
push
sti
js
inc
jmp
ljmp
cmp
lock
push
pop
outsb
jae
sub
pop
pop
ja
mov
xor
cltd
xor
push
push
mov
rcrb
adc
pop
aas
lock
jl
mov
cmp
xchg
push
test
shr
push
add
dec
xchg
adc
hlt
mov
dec
add
sub
xor
and
loop
jle
jge
pop
cmp
xchg
add
mov
mov
arpl
cmpsb
fs
push
xor
ja
filds
andl
inc
sub
xchg
push
in
test
pop
mov
ret
mov
mov
mov
popf
loopne
fisubl
std
and
ja
mov
movb
mov
mov
sub
call
inc
mov
or
ds
sahf
mov
mov
scas
inc
scas
cmp
data16
or
jne
add
out
outsb
aaa
hlt
lahf
setne
xor
sub
adc
mov
pop
sbbb
movsb
pop
sbb
xchg
mov
mov
leave
fwait
idivb
dec
sarl
subl
add
pop
xchg
ss
cmpsl
mov
jge
data16
mov
inc
popa
push
sub
add
stos
mov
sarl
inc
and
call
push
mov
sbbb
or
mov
dec
cmp
jge
sub
push
push
lcall
sub
dec
and
push
fidivl
xlat
push
loope
das
clc
and
cmc
xchg
pop
subl
clc
test
cmp
add
xor
push
in
movl
inc
push
in
mov
cmp
rolb
pop
or
inc
arpl
imul
in
jns
cmpsl
fbstp
daa
add
add
sbb
and
and
sbb
pop
xchg
cmp
cmp
sbb
insb
add
insl
sbb
jbe
lods
and
or
sbb
and
mov
rclb
loop
outsl
leave
or
lds
lds
jmp
xchg
dec
push
inc
rcrb
add
enter
lods
inc
xor
sarb
push
out
push
cmp
push
cmpsb
testl
inc
sub
outsl
lahf
add
mov
int
pop
and
sbbb
mov
ljmp
mov
test
mov
cli
popl
xchg
test
mov
shr
out
std
jg
roll
popf
ret
pop
sub
mov
mov
sbb
cmpsb
cmpsb
or
loopne
xchg
mov
test
lret
dec
loopne
sahf
aad
push
in
sti
inc
pop
mov
jne
inc
or
test
xchg
mov
jg
add
fldl
lea
fmulp
push
push
iret
push
xlat
mov
mov
inc
lock
cmpsb
mov
push
sbbb
lea
les
enter
xor
stos
push
scas
push
hlt
push
mov
mov
jmp
adc
sub
push
xor
dec
repz
scas
push
pop
rorl
outsl
mov
mov
ljmp
rcr
mov
and
adc
out
mov
fucom
jbe
add
sbb
cwtl
adc
ss
fwait
cmpb
jge
rclb
dec
sub
cli
mov
in
jo
insl
xchg
and
and
addr16
pop
in
mov
cwtl
or
or
imul
mov
adc
or
dec
sti
or
test
shl
in
mov
jmp
or
mov
jae
lahf
das
aad
pusha
pop
inc
pusha
aad
dec
jmp
jge
cli
mov
push
cmpsb
cmp
cmp
out
aam
xchg
inc
xor
ffree
fidivl
adc
pop
xchg
lret
popa
insb
xor
sahf
in
call
mov
mov
int3
push
mull
mov
or
add
ret
xor
ss
lock
aad
push
push
in
jg
dec
mov
jmp
cmp
dec
test
sbb
pop
inc
push
pop
sub
insb
gs
test
mov
testl
imul
xchg
mov
cld
repnz
fistpl
jg
cmp
adc
rcrl
and
push
rcrb
pushf
push
ljmp
ret
sbb
mov
imul
mov
push
out
nop
mov
dec
out
repnz
subl
pop
outsb
icebp
cmp
dec
pop
repnz
inc
mov
lea
lock
mov
nop
push
insl
out
mov
push
lret
lock
add
adc
push
sbb
cmp
ja
xchg
fstl
mov
adc
push
jno
mov
fcmovnu
and
sub
cld
inc
aam
mov
dec
daa
daa
add
jp
rcll
xor
outsl
sahf
adc
xchg
sti
nop
sub
cmc
mov
enter
sbb
xor
lods
decl
push
testb
mulb
inc
mov
adc
shlb
mov
aam
push
push
push
jmp
out
loope
xchg
dec
cmpsl
out
xchg
adc
imul
outsb
std
or
push
fidivl
lds
shll
and
cld
pop
mov
mov
pop
jno
dec
jecxz
sbb
push
inc
div
enter
addl
jo
inc
pop
int3
and
mov
in
mov
push
in
mov
test
adc
stc
lahf
mov
adc
add
out
xor
xchg
out
gs
push
and
cltd
fsubrl
push
out
test
add
std
push
or
sub
aad
pop
stos
inc
int
dec
mov
and
push
out
xchg
out
ljmp
xchg
jbe
popf
pusha
add
xlat
mov
shlb
ss
sub
sbb
icebp
jnp
daa
or
adc
rolb
sub
aam
jmp
xchg
and
std
pop
and
jmp
adc
cmp
movsb
push
jo
adc
mov
inc
fisubl
push
dec
stos
sbb
pop
xchg
inc
dec
hlt
out
loop
pop
aam
xchg
mov
stos
xchg
pop
dec
std
xchg
jne
push
imul
mov
fnstcw
pop
sarl
shlb
cmp
fcoms
and
jg
out
dec
call
jmp
fwait
pop
lahf
lret
push
xchg
or
add
jb
stos
xchg
or
xor
das
clc
stos
fsts
jge
or
mov
fadds
pop
scas
dec
fst
insl
push
enter
clc
fstps
add
pop
mov
mov
mov
sti
xchg
int3
mov
popf
and
test
xor
mov
and
andl
cmpl
orb
mov
xchg
pusha
inc
mov
in
push
add
push
je
sub
daa
js
stos
mov
aam
jo
push
pop
fwait
ret
jle
scas
xlat
mov
arpl
sub
and
push
add
mov
cwtl
xchg
repnz
adc
roll
outsb
ret
push
pop
xchg
mov
orb
and
call
in
or
cltd
push
adcl
xorl
xor
std
add
mov
or
push
dec
notb
jge
fsubl
add
in
das
inc
inc
pop
or
mov
inc
sub
fwait
icebp
mov
or
pop
pop
mov
push
inc
sbb
adc
iret
test
inc
inc
or
jne
hlt
push
rclb
ss
out
addr16
and
push
loop
stos
jp
dec
mov
cmpsb
add
and
pop
lock
sbb
dec
add
mov
pop
and
adc
mov
iret
cmp
mov
xor
or
flds
movsb
cmp
xor
hlt
inc
int
dec
jmp
mov
sbb
inc
jns
xor
lcall
imul
ja
rcll
jae
mov
fisubs
push
cmp
push
jecxz
loope
inc
stc
nop
notb
adcl
addl
scas
or
fmull
repz
push
mov
mov
cmp
fcos
inc
test
mov
xor
lea
inc
jo
pop
xchg
fldenv
push
test
adc
xor
xchg
push
testb
dec
nop
mov
shr
in
out
out
adc
add
mov
scas
rorl
insb
and
add
xchg
mov
pop
frstor
xor
pop
sub
ds
sub
pop
gs
pop
fdiv
xlat
outsb
sub
fisttpll
pop
sti
xchg
and
call
fbld
adc
stc
or
xchg
lods
inc
lock
lds
adc
xlat
push
adc
mov
add
mov
mov
fldenv
lock
xor
test
ljmp
out
mov
inc
dec
and
cld
loopne
cmc
mov
test
nop
int
push
jecxz
scas
xchg
fldcw
pusha
jp
popf
js
sbb
add
stos
cmp
cwtl
pusha
jne
je
inc
adc
pop
daa
xor
fisubrs
js
inc
xchg
scas
je
add
data16
or
enter
insb
and
stos
adc
jo
negl
jp
mov
lahf
fwait
cld
xchg
int
fadd
jno
xchg
cs
pop
jmp
pop
mov
enter
scas
mov
or
add
xchg
xor
dec
sti
inc
std
call
and
adc
lods
inc
adc
xchg
or
call
push
or
in
insb
out
mov
push
cmc
gs
ret
jp
testl
jle
cld
pushf
ljmp
jo
add
adc
mov
mov
adc
and
dec
dec
fucomi
mov
xchg
inc
cmp
pusha
fucomip
iret
sbb
movsl
std
ret
jg
add
fnstsw
push
arpl
cmp
movb
inc
add
out
sahf
mov
insl
mov
mov
les
lea
pop
hlt
fists
inc
fmuls
fstpl
add
int
js
sub
jmp
or
mov
dec
out
jae
movsl
nop
loopne
jb
imul
adc
or
mov
andl
je
int3
xor
pop
pop
or
or
and
aas
adc
mov
ss
mov
push
and
addb
sahf
cmpsl
sbbl
in
std
inc
mov
in
mov
inc
dec
dec
jge
outsb
outsb
in
in
out
mov
or
inc
movsl
inc
mov
cltd
dec
jmp
or
rcr
inc
and
incb
imul
cmpl
xchg
adcb
pop
out
xchg
pop
popa
addr16
add
cwtl
in
mov
mov
mov
push
sbb
repnz
ds
outsb
jbe,pt
pop
cmp
arpl
rcll
dec
or
add
and
sahf
jmp
inc
xchg
fistpl
pop
aad
cmp
and
ficoms
subb
lock
shll
dec
in
aaa
inc
lods
cmp
es
inc
ffree
dec
pop
mov
fildl
or
cmp
loop
sub
std
add
pop
jb
imul
popf
adc
imul
dec
ret
repz
mov
fildll
lcall
sbb
movsb
pushf
arpl
jns
inc
mov
mov
jge
or
dec
dec
mov
loopne
sahf
sbb
or
mov
pop
mov
jge
scas
sub
aas
pop
mov
in
out
mov
clc
cmp
movsb
lcall
xchg
and
rcl
add
mov
rclb
cmpsb
push
mov
mov
pop
sahf
sbb
aaa
xor
rcll
xlat
gs
pop
pop
inc
cmp
pop
jl
pop
pop
jl
inc
jmp
pop
scas
mov
dec
movsl
lret
aam
int
push
xchg
mov
xchg
aad
mov
iret
cmp
add
aas
outsb
sbb
mov
mov
adc
popf
ljmp
xor
mov
lea
mov
clc
rcrl
push
xor
jnp
pop
pop
loope
mov
mov
cmp
sub
nop
cmc
cmp
mov
inc
insb
add
sarl
jb
cmp
mov
inc
repnz
cmp
inc
lods
ljmp
xlat
sub
pop
sub
rolb
push
div
scas
pop
stos
adc
xor
pop
lret
push
sar
mov
cmpsl
xchg
xor
not
mov
rcrb
shrl
imul
lock
lods
or
lret
pusha
or
xor
in
xor
insb
push
lahf
xor
subb
xor
stos
xor
mov
fsubrl
cld
stos
in
xor
mov
adc
inc
push
adc
cltd
fwait
jmp
xchg
stos
pusha
pop
je
cltd
icebp
mov
xchg
xor
cmpsl
mov
push
fisubrs
iret
mov
faddl
aas
loop
pop
fldl
pop
dec
cmp
dec
aaa
dec
movsl
push
mov
mov
mov
ficoml
lds
in
stos
pop
mov
push
mov
ljmp
cld
ljmp
sub
pusha
cltd
xor
call
shlb
repz
popf
sub
aaa
into
dec
cmpsl
lds
lock
inc
xchg
hlt
mov
add
mov
jmp
test
lods
xor
mov
dec
stc
jle
std
mov
out
and
cmp
ss
mov
pop
fildll
or
dec
mov
lea
out
add
dec
pop
mov
loopne
lcall
ja
pop
pop
dec
aas
xchg
dec
jmp
cwtl
add
and
loope
jns
jmp
subl
jl
xor
sbb
push
dec
sbb
xchg
test
xor
lea
mov
pop
sti
stos
and
adc
shld
pop
mov
lea
test
xlat
mov
insl
jnp
inc
pop
stos
inc
pushf
jmp
lea
cmpsl
mov
addb
cmp
loop
pop
xor
aas
mov
xchg
push
xor
xchg
pop
fdiv
mov
jb
adc
into
sbb
subb
push
orb
fnsave
push
repnz
sti
int3
jle
aad
dec
push
lods
add
gs
mov
ds
adc
imul
push
insl
fisubs
adc
rcll
mov
imul
mov
jle
or
lock
jp
aaa
test
mov
outsl
sarb
mov
add
clc
xchg
mov
rcll
cs
sub
inc
cld
mov
insl
fcmovb
pop
or
cmpsl
loope
popf
inc
sbb
inc
xor
jne
xchg
rclb
sub
adc
push
mov
xchg
data16
aad
xlat
test
ret
dec
cmp
and
add
adc
fsubrp
push
dec
xchg
push
cmpsb
inc
and
fs
and
stc
mov
lahf
test
and
mov
cmp
or
pop
dec
push
push
andl
mov
pop
push
mov
jo
ja
push
push
movsl
inc
fldt
mov
bound
clc
or
out
aas
push
or
mov
xor
pop
out
shlb
sti
in
xor
leave
cmpsl
clc
jb
movsb
addl
push
adc
dec
xchg
imul
sti
jb
out
shrb
bound
pop
js
mov
push
and
popa
pop
cmp
outsl
icebp
icebp
fwait
inc
int
mov
dec
movsb
addr16
lock
xchg
sub
jno
lahf
fisubrl
lds
adc
pop
int
push
adc
jle
decl
fst
fistps
mov
cmc
das
add
push
xlat
push
fiaddl
fwait
lods
inc
mov
insl
aaa
xchg
int3
in
fnstsw
outsl
cmp
ret
daa
in
sub
mov
in
pop
repnz
ret
je
fidivs
test
add
inc
cld
adc
mov
and
and
dec
in
insb
add
cmp
lods
test
call
inc
and
nop
sub
push
push
cmc
call
negl
push
xchg
out
pop
test
sub
adc
sti
sahf
or
xchg
sub
inc
clc
rclb
repz
xor
lret
pop
divb
sarl
sbb
xchg
insl
rolb
cltd
add
cltd
xor
in
pop
out
jbe
or
inc
fwait
je
stc
dec
mov
gs
out
push
and
enter
pop
call
inc
pop
das
int
fsub
mov
aad
ljmp
push
inc
sbb
sub
hlt
sbb
stos
shlb
out
fabs
test
cld
xchg
mov
push
sbb
mov
sub
cmpsb
arpl
jp
les
movsb
mov
pop
fs
mov
jmp
rcrl
andb
nop
das
movb
dec
in
inc
mov
mov
insl
loopne
pusha
mov
xchg
xchg
jle
dec
mov
jle
xor
je
bound
and
mov
push
shlb
push
dec
mov
pop
rorb
push
jecxz
add
cmp
cltd
add
out
out
decl
cmp
sbb
insl
sbb
pop
pop
adc
stc
nop
das
dec
push
rclb
or
aad
mov
cmp
loope
clc
sti
xchg
sub
fistps
cmp
jecxz
movsb
sti
push
cmp
dec
cmpsb
stos
jo
mov
insl
jl
xchg
sub
jnp
inc
imul
mov
pushf
test
xorb
lret
adc
inc
flds
pop
mov
outsl
fs
sbb
xchg
sub
mov
hlt
jmp
sbb
push
cmp
mov
loop
cwtl
lods
pop
hlt
sar
jecxz
pop
cmpsb
ret
add
add
xor
pop
fcomip
and
jb
mov
test
and
pop
sbb
push
adc
mov
or
and
pop
pop
and
and
add
mov
sbb
adc
clc
pop
cli
movsb
cltd
stos
icebp
inc
leave
lods
repnz
push
hlt
dec
and
jl
push
loopne
fistpl
push
mov
or
sti
stos
mulb
and
and
test
lods
cwtl
ds
sub
dec
repz
dec
into
gs
mov
mov
addr16
rclb
cmp
cmp
xchg
pop
scas
dec
out
cwtl
inc
cmp
push
push
xchg
test
pushf
or
dec
mov
pop
inc
jecxz
xor
xchg
mov
sti
push
mov
iret
shll
das
mov
sbb
sahf
xor
ds
ss
jno
mov
sbb
cwtl
push
in
mov
cwtl
je
pusha
and
fwait
push
fstpt
loop
xor
jbe
insb
mov
mov
sahf
inc
mov
call
addr16
mov
fildl
in
mov
rcrb
outsb
jg
ret
jmp
arpl
mov
pusha
or
xor
mov
out
daa
sub
stos
xor
sbb
xor
shl
js
lret
sbb
out
cmp
mov
jbe
pop
xchg
nop
sbb
mov
sbb
xchg
push
xor
scas
xchg
icebp
ds
lret
dec
push
into
push
cmp
mov
pushf
jg
iret
mov
data16
add
mov
adc
fldt
ds
cmc
push
or
dec
mov
push
in
or
inc
push
inc
adc
fmull
popf
jg
insl
mov
test
repz
add
iret
add
rcrl
ds
add
push
scas
test
aas
roll
mov
int3
fstl
mov
shrl
jno
fisttps
and
data16
bound
inc
pop
mov
popa
shlb
push
add
and
lret
adc
cwtl
lahf
xor
adc
cmp
sbb
out
loope
sub
xchg
aam
test
inc
pop
dec
and
je
ret
nop
test
scas
push
mov
loope
xchg
int
daa
add
sbb
into
jp
les
pop
stos
subb
out
xchg
imul
sub
mov
out
rcl
xor
pop
out
sti
xor
inc
sbbb
in
pop
in
fiadds
in
inc
jnp
in
mov
adc
add
lret
jne
int3
jnp
push
int3
fsubl
jns
sub
scas
gs
movl
das
jae
push
sub
xor
push
shrb
cli
adc
xor
adc
sbb
push
lds
pop
jge
icebp
pusha
aas
shll
inc
add
push
push
mov
pop
mov
icebp
and
nop
jle
push
roll
mov
test
mov
imul
jo
lcall
stc
jg
inc
sbb
in
cmp
sub
roll
ss
jns
jae
jne
fnsave
repz
sub
dec
gs
andb
mov
jge
cmp
leave
leave
out
in
inc
mov
cmp
mov
jecxz
pop
add
inc
jns
cwtl
pop
shll
jbe
pushf
mov
pop
outsl
jp
cmp
push
and
xor
stc
sbb
je
mov
cmpb
sbb
dec
dec
push
mov
inc
sarl
das
pop
push
jnp
push
lods
jb
lods
mov
jge
ds
inc
fs
addr16
test
jae
sbb
mov
pop
lods
dec
xor
and
or
mov
ja
add
aam
cli
fwait
rcl
or
cmpsl
cmp
popa
dec
les
jo
add
mov
sbb
mov
aaa
imul
push
test
jecxz
fstl
mov
cmpsl
sti
adc
xor
jle
daa
addr16
je
lock
std
xchg
pop
mov
sbb
mov
dec
gs
mov
cmpsl
mov
ret
xchg
mov
sub
pop
jne
mov
decb
dec
sbb
push
jo
fsubrl
mov
dec
and
and
loope
mov
sub
push
pop
xchg
shll
lods
or
mov
ljmp
fwait
addr16
data16
std
es
test
push
push
xor
ljmp
shlb
push
adc
pop
icebp
inc
xor
sub
cmp
push
sbb
loope
bound
insb
sbb
xor
leave
push
jge
aad
or
pop
repz
jl
jb
jp
fs
xchg
cs
add
gs
fucom
lods
push
inc
jmp
jae
jb
pop
and
daa
sub
shrl
stc
cmpsl
xor
mov
mov
cmp
push
fwait
push
sub
rcrb
enter
imul
xor
push
mov
lea
adc
std
pop
xchg
push
xor
inc
shll
shrl
lods
jnp
ss
call
xchg
push
sbb
sti
stos
jecxz
cli
xchg
lcall
cmc
popf
mov
repnz
jle
into
mov
out
les
jp
rcr
cmc
fwait
lds
jg
mov
add
sbb
enter
mov
jne
cmp
inc
xchg
js
out
clc
push
pushf
stc
js
hlt
clc
fsubs
inc
mov
stos
or
cmp
lahf
and
sbb
pop
lock
and
xchg
je
mov
sti
mov
addl
cmc
loope
sbb
push
push
lock
insb
iret
pop
mov
jb
hlt
push
xchg
jl
xchg
xchg
dec
dec
scas
mov
loopne
push
push
push
mov
adc
lahf
scas
fwait
lods
xor
mov
xchg
je
in
rcrl
mov
jno
ss
gs
mov
xchg
lds
and
push
sub
push
pop
hlt
cs
or
ret
subb
mov
pop
rolb
xor
clc
lds
ja
jnp
inc
test
mov
and
scas
inc
or
jb
outsb
movsb
mov
ja
mov
cmp
dec
xchg
pusha
int
xchg
mov
test
mov
iret
sub
dec
adc
sub
bnd
cmp
loop
mov
pushf
lds
int
in
pop
lds
xor
gs
pop
les
call
and
or
js
aaa
lret
in
sbbb
frstor
fucomip
bound
fs
xchg
mov
das
nop
and
into
xor
mov
ret
add
pop
dec
fildll
shlb
add
stc
jno
or
cli
mov
push
test
jle
dec
lahf
mov
pop
decb
shll
movsl
jne
dec
and
sub
sub
or
push
push
xchg
dec
xor
xchg
jecxz
and
lcall
push
xor
pop
pusha
mov
icebp
pop
pavgw
sbb
cmp
cmpsl
xrelease
jns
ret
xor
jb
or
stc
nop
jmp
pop
xchg
stos
add
pop
cmpsl
add
bound
adc
leave
lahf
mov
sbb
mov
jbe
fcoms
mov
adc
cltd
pop
das
insb
pop
icebp
lret
jp
shrb
cmp
movsb
mov
les
je
das
or
cmp
sbbb
add
lods
pop
outsb
or
cmpsl
pop
jo
dec
dec
test
push
cmp
push
clc
and
sub
movl
add
dec
and
fsubp
mov
out
pop
sbb
and
icebp
add
xchg
lret
es
in
cmp
or
sbb
cmp
xchg
sub
push
mov
cmp
cltd
inc
repnz
push
cmp
pusha
pop
mov
rol
ss
mov
inc
xchg
xchg
xchg
ja
iret
cmpsb
cmp
fadd
rclb
pop
cmpsl
aaa
loope
in
fisubs
inc
adc
push
push
dec
in
hlt
insb
in
fs
imull
mov
cmc
mov
adc
add
dec
out
stos
jo
in
cmp
das
nop
push
call
or
in
int3
sbb
jp
addr16
lock
cs
xor
inc
lahf
ss
repnz
adc
int
stos
mulb
adc
test
outsb
mov
mov
xchg
xchg
lret
cmp
ja
mov
and
inc
stos
test
lahf
jg
xchg
jne
mov
pop
loope
fucomp
aad
mov
std
jg
pop
mov
dec
gs
xchg
data16
ret
pusha
push
imul
jns
lret
testb
daa
in
mov
iret
jp
inc
loopne
mov
mov
pop
pusha
testl
xchg
mov
mul
push
cmp
add
mov
notb
push
sub
les
lds
jp
xchg
lods
aam
pop
lret
add
dec
xchg
sbb
sti
addr16
popa
mov
jmp
pop
ljmp
and
das
fmul
outsb
leave
fcmovnb
shll
or
call
lods
jnp
mov
in
mov
push
fmuls
scas
imul
outsl
arpl
inc
ss
push
sub
popa
jbe
jae
data16
es
mov
pop
jo
fldl
mov
add
in
add
pop
cmp
insb
cmpb
xchg
mov
fnstsw
mov
push
mov
pop
out
shrl
loopne
ja
dec
xor
mov
xlat
xor
inc
fsubrp
data16
in
push
jge
test
jb
cltd
dec
iret
cs
insl
and
outsb
out
sbbl
pushl
jnp
movsl
sbb
lcall
push
jb
sti
or
enter
ljmp
dec
ss
repz
pop
rcrb
dec
out
sahf
mov
inc
insl
mov
out
jge
into
jl
imul
insl
add
jo
sub
mov
adc
push
bound
sbb
cmpsl
sbb
flds
mov
mov
enter
mov
test
sub
mov
ss
push
out
jae
aaa
insl
add
jp
push
and
sbb
cld
and
outsl
js
push
imul
cmc
sub
les
test
out
fdivs
dec
repnz
sub
movsl
adc
pusha
push
mov
fidivs
cmp
dec
loopne
les
adc
je
ficoml
inc
pop
inc
cld
adc
add
jmp
xor
add
arpl
in
pusha
lcall
jp
jae
call
jp,pt
cmp
fdivs
scas
int
mov
mov
dec
mov
mov
xlat
mov
and
lret
or
and
push
mov
sbb
pop
ljmp
push
push
jg
in
mov
inc
popf
push
cmpsb
mov
stos
movsb
jp
dec
in
inc
inc
lcall
sahf
clc
or
mov
fwait
pop
stc
lods
idivl
dec
cmpsl
and
rcll
jnp
sub
and
and
fmuls
push
pusha
das
dec
or
lods
imul
shll
xchg
xlat
mov
add
lods
cmpsb
cmp
stos
jge
pop
lahf
lret
xchg
mov
dec
mov
jecxz
xchg
cmp
adc
ret
or
dec
push
data16
cmpsl
xchg
stos
jno
cmpb
jge
push
cli
mov
push
ret
mov
rcrl
fnstenv
lds
and
sub
push
jle
mov
insb
into
and
or
fistl
mov
sbb
dec
fiadds
cmpsl
notw
pop
insb
and
push
sub
dec
sahf
testl
sarb
stos
loope
mov
add
xchg
addr16
jnp
out
test
loope
rcrl
pop
and
aad
test
rcrb
push
cmc
rol
divb
or
test
jns
mov
std
xchg
mov
cli
test
xor
hlt
inc
push
inc
pop
push
jno
popf
mov
into
sti
push
insb
cwtl
andl
cmc
aaa
lret
mov
pusha
cmp
cltd
movsb
pop
xchg
outsl
into
lods
push
jne
inc
lret
lret
sbb
xchg
imul
and
icebp
push
push
out
pop
xchg
imul
decb
xchg
jae
pop
pop
jmp
push
push
xchg
add
es
cmp
mov
jns
sbb
xor
into
rclb
inc
daa
mov
adc
in
popa
gs
sti
jb
out
outsl
jg
push
or
push
insl
stc
mov
adc
pushf
add
push
cmpsb
mov
insb
into
insb
and
adc
push
mov
inc
je
inc
mov
subl
pop
insl
add
mov
cmpsb
out
xor
pop
data16
jbe
fdivp
or
mov
imul
scas
dec
loop
setne
shl
and
cwtl
call
cmpsb
jmp
shr
jns
stos
inc
jle
stos
mov
out
jl
cmp
fiaddl
pop
shll
push
mov
adc
in
push
adc
pop
mov
mov
mov
and
adc
inc
xlat
fsubl
pop
jae
std
inc
pop
rolb
out
mov
dec
loop
sub
xor
push
push
adc
pop
cmp
pop
rep
adc
es
mov
jl
icebp
mov
xchg
mov
shrb
outsb
push
inc
leave
fdivs
or
dec
and
into
or
jecxz
adc
xor
in
outsl
mov
loop
adc
add
sub
jo
cmpsl
test
xor
dec
stc
sub
lds
add
out
outsb
add
inc
shll
das
mov
sub
les
xchg
sbb
jae
mov
rcl
push
add
test
shrb
in
mov
icebp
nop
inc
adc
test
outsl
xlat
mov
cmc
movsl
sbbl
xchg
xor
lock
pop
jp
push
popf
pop
lcall
idivl
mov
mov
sbb
xor
aas
pop
dec
or
popf
lods
xor
addr16
repnz
adc
sbb
mov
pop
lods
les
in
mov
das
pop
jge
das
sub
sahf
dec
push
mov
mov
push
inc
lock
orl
ret
mov
sbb
ja
or
and
sbb
mov
inc
xchg
sub
jns
insl
mov
pop
cltd
xor
inc
setp
lret
sub
cmp
outsl
mov
fwait
test
cmp
adc
sti
pop
mov
mov
mov
jo
mov
sbb
sahf
jle
bound
ljmp
movsb
fdivr
push
jecxz
jns
cmp
inc
mov
ret
data16
mov
rcrb
out
mov
push
add
dec
loopne
cmpb
popf
in
lret
adc
gs
jge
sbb
mov
idivl
xor
dec
cmp
inc
mov
push
ljmp
xorl
jl
jo
inc
mov
dec
leave
test
int3
jg
jmp
out
mov
fnstsw
cmp
mov
adc
xor
loopne
adc
sub
lret
aas
loope
in
push
adc
movsb
mov
ficoms
ja
jg
gs
push
inc
add
jb
push
movsb
faddl
sub
fs
pushf
cmpsb
mov
out
and
ficoms
mov
inc
push
sbb
or
leave
mov
adc
push
xchg
in
xlat
and
aam
lret
adc
imul
imul
xor
dec
push
ljmp
aam
xorb
sbb
adc
cmp
inc
pop
xchg
cs
les
cmpsb
inc
adc
mov
sub
pushf
sub
stos
pop
outsl
push
lock
mov
outsb
icebp
mov
in
pusha
pushl
je
into
in
repz
fsubl
push
loop
scas
pop
fdivrp
sub
aam
lods
icebp
fistpl
les
cmp
bound
ds
mov
push
adc
into
xor
rclb
sub
add
pop
fiadds
xchg
ljmp
inc
fcomps
pop
jnp
cmp
xor
cld
mov
or
lret
gs
sahf
addr16
jne
mov
bound
pushf
pop
int3
jg
xchg
xlat
stos
inc
loopne
test
or
lret
add
js
bound
xchg
xchg
in
xchg
mov
add
mov
insl
sbb
mov
mov
cmpsb
cwtl
sbb
jp
push
xchg
push
mov
fidivs
or
pop
adcb
jbe
fwait
cmpsl
pop
mov
repz
stos
mov
cmpb
clc
mov
sub
cltd
jne
sub
inc
xchg
and
aaa
jmp
inc
push
xor
cmp
insb
or
popf
imul
mov
push
fwait
sbb
andb
sub
stos
in
ror
ret
fdivrl
xor
out
xor
cli
dec
call
add
xchg
or
add
es
mov
mov
jl
dec
adc
xchg
repz
fnstcw
jb
mov
cmp
mov
int3
jp
jge
dec
icebp
push
jl
cltd
fidivrs
push
scas
insb
movl
mov
fcmovne
adc
cli
cld
sbb
and
cmp
movb
xchg
mov
sbb
ja
pop
fs
sbb
mov
or
dec
mov
test
cmp
inc
pop
sub
xchg
add
rcr
and
sbb
xor
popf
cmc
pop
out
popf
inc
shlb
fdivr
lds
insb
testl
in
sub
sub
inc
mov
rol
sub
sbb
scas
loop
mov
lods
daa
lcall
pop
adc
mov
sti
adc
push
mov
jb
and
movl
jl
mov
fiaddl
mov
mov
and
push
jl
push
push
jb
arpl
fwait
or
int
lods
mov
shlb
xchg
loope
mov
lods
xor
pop
in
into
jge
add
fs
pop
repnz
das
xor
push
inc
xor
insl
dec
jecxz
xchg
lcall
jmp
mov
add
mov
adc
mov
loope
stos
mov
mov
lahf
orl
adc
or
test
daa
mov
in
inc
mov
push
pushf
cvtps2pi
popf
stc
jae
adc
dec
xchg
pop
sahf
out
push
in
fdivr
jo
outsb
jae
pop
push
xor
mov
popa
cwtl
pop
xchg
cs
mov
sub
mov
test
fmuls
mov
add
data16
aaa
adc
dec
jmp
xor
adcl
pop
sub
push
add
in
and
push
shlb
inc
xor
sub
mov
xchg
cwtl
push
loope
cmp
cld
and
mov
mov
das
orb
jge
lret
cs
and
dec
push
cltd
inc
loope
mov
cs
dec
fs
push
xchg
imul
icebp
pusha
xor
inc
lock
pop
xrelease
jp
inc
fbld
inc
and
and
fistpl
test
push
in
mov
scas
lods
xor
jnp
lret
mov
mov
mov
pop
loop
push
push
inc
popa
faddl
fsts
adc
or
inc
in
stos
pop
and
lcall
pop
pusha
les
repz
cld
notb
push
testb
push
lods
sbb
repnz
in
jo
xchg
dec
add
hlt
push
push
mov
pop
jp
push
lods
es
int
sub
mov
stc
push
mov
insl
in
fsub
mov
fs
mov
xchg
sbb
movsb
xor
sbb
push
sbb
xchg
test
push
push
mov
in
filds
mov
push
dec
aam
mov
lcall
dec
in
sbb
pop
es
and
xchg
ja
fwait
movsl
cmpb
or
jne
jg
clc
dec
and
testb
das
adc
lahf
jmp
call
push
jo
cmp
sbb
cmp
leave
loope
xor
pop
pop
inc
or
in
aas
pop
addr16
ljmp
movsb
or
jno
repnz
cmpsb
pop
xor
and
add
dec
sbbb
enter
adc
js
push
push
ret
rorb
imul
popf
sub
ss
push
call
cltd
inc
dec
lret
orl
or
ljmp
push
mov
mov
cmpsb
aad
push
popf
and
ja
mov
fs
icebp
and
aam
and
push
pop
icebp
lods
sbb
insb
push
dec
js
jb
or
sahf
repnz
pop
mov
lods
and
cmpsl
out
orl
icebp
push
cmp
cmp
loopne
pop
pop
mov
dec
lock
and
jne
add
xchg
push
sub
push
movsb
dec
add
clc
shll
push
ljmp
out
push
das
aam
mov
jl
je
lods
mov
mov
in
mul
fisubrs
std
pop
lahf
mov
call
out
shrb
xchg
add
mov
mov
pop
jno
lods
mov
aam
cmpsb
int3
lahf
push
lds
cmpsl
push
mov
ja
out
flds
cmp
arpl
cmpsb
shlb
ds
mov
jp
aas
hlt
dec
dec
mov
xor
test
sbb
xchg
adcb
pop
inc
jno
add
int3
scas
xchg
adc
shlb
sbb
add
iret
je
xchg
call
std
sbb
fldt
and
jo
mov
cmp
dec
mov
jbe
nop
das
cmp
dec
mov
in
cmp
fcomps
jae,pn
xchg
mov
cltd
jo
test
and
lock
cmp
push
or
je
mov
sarl
sbb
mov
out
pop
mov
es
or
sbb
repnz
cmp
push
pop
cmpsl
mov
dec
mov
and
xor
adc
pop
imul
pop
outsb
loope
mov
in
cmp
mov
dec
mov
cmpsl
pop
leave
mov
imul
repz
ret
sbb
dec
inc
les
xchg
xor
add
dec
pop
xor
out
sar
mov
lods
sub
pop
out
xorl
dec
pop
sar
or
in
pop
pop
ljmp
push
in
mov
pop
jne
adc
andl
mov
sbb
inc
push
loop
mov
mov
incl
xchg
xor
popf
or
stc
es
mov
and
pop
mov
cmp
nop
jmp
fnstcw
push
outsb
add
lret
pop
mov
adc
inc
cmpsb
stc
mov
sub
xchg
sub
out
jae
sbb
push
jb
mov
jo
xlat
sti
mov
cmp
sti
add
out
pop
jo
xor
out
js
rorb
inc
pop
popf
rclb
ret
fdivp
sbb
mov
orl
testb
add
in
lret
outsl
add
dec
shrb
fcompl
inc
inc
scas
gs
mov
loop
test
std
ret
shll
hlt
outsl
and
xchg
ret
jle
add
leave
loope
pop
add
jnp
cmp
xchg
push
inc
ret
pop
push
mov
cmpsb
stos
sahf
lret
xchg
repnz
fs
or
lcall
push
call
sbb
mov
mov
or
out
ja
sbb
mov
mov
push
cmp
popf
dec
mov
iret
xor
sbb
dec
mov
lret
fwait
arpl
outsl
fwait
stc
jns
sub
rclb
xor
in
jo
or
push
or
jo
popf
cmp
push
ss
shll
ds
push
lods
idivl
les
and
flds
mov
dec
fidivrl
jnp
push
sub
cli
jne
sub
mov
out
scas
mov
push
mov
dec
loope
in
add
cmc
mov
ret
and
movsb
jg
iret
decl
loop
int
iret
pop
lea
int3
arpl
loopne
sbb
jne
adc
pusha
mov
rcrb
mov
int3
popa
mov
jecxz
lret
enter
add
sbbb
xor
cmp
xchg
lcall
xchg
clc
and
and
in
out
das
sbb
xor
stos
mov
inc
jmp
jae
jo
sahf
pop
cmpsl
out
aas
icebp
adc
or
lods
jb
jnp
call
cmp
adc
mov
sbb
std
js
fucomp
xchg
mov
or
add
push
outsl
loop
dec
xchg
dec
xor
xchg
jmp
add
jns
scas
aad
sbb
ret
stc
int
sti
xchg
cwtl
pop
xchg
orb
int
adc
notl
hlt
lods
add
andl
jns
sbb
dec
push
and
push
testb
cmpl
dec
out
push
add
das
in
cmp
add
cmc
add
dec
movsb
xchg
cmc
xchg
and
mov
mov
notl
jecxz
dec
push
push
mov
je
imulb
sahf
jecxz
pop
xor
adc
addr16
mov
fdivs
mov
js
mov
jnp
mulb
daa
adc
dec
int
test
cli
cmc
mov
stos
je
jle
dec
mov
pushf
std
xchg
and
mov
mov
idiv
mov
add
fldt
adc
push
cs
das
and
or
inc
subl
xchg
jp
pusha
jns
cmp
lods
adc
int
sub
int3
ss
scas
es
push
lcall
push
imul
sbb
jmp
jg
dec
popa
pop
jb
inc
or
and
jbe
aad
shlb
sti
cmp
sbb
rol
data16
sub
fldcw
mov
jecxz
inc
icebp
xor
xchg
push
icebp
dec
xor
cmc
add
jl
pusha
adc
push
push
stc
in
or
xchg
lret
lret
lret
addb
adc
inc
mov
push
sub
jge
arpl
cmp
movsb
mov
pop
xchg
xor
sub
add
xchg
adc
xchg
jnp
fidivl
ret
nop
push
push
or
sbb
in
repnz
adc
mov
lret
int3
pushf
push
xchg
negb
jp
mov
push
jno
testl
cmc
sbb
je
ror
jl
mov
cmc
rolb
mov
add
fcomps
mov
lahf
add
inc
insb
ja
or
and
movsl
inc
insl
sub
dec
lods
sub
push
mov
leave
xchg
aaa
into
enter
sbb
pop
cmc
mov
pop
push
mov
dec
pushf
test
into
popa
repz
aam
adc
jle
pop
fmuls
lret
add
in
mov
mov
repnz
sub
daa
shl
and
pop
jns
mov
stos
es
xchg
sti
test
xor
rclb
inc
dec
outsb
push
fisubrl
sbb
inc
lods
sbb
sbb
mov
xor
cmc
add
push
sahf
cmp
or
pop
imul
je
xchg
jbe
clc
test
mov
ret
push
mov
cmp
enter
adc
ret
imul
test
in
fucomi
insl
daa
lcall
adc
sub
js
dec
cs
scas
inc
decb
stos
repz
sahf
stos
shlb
add
ret
out
adc
sub
or
xchg
sub
jne
mov
mov
rcrl
mov
xor
xor
frstor
sbb
je
pop
lret
push
lret
aam
inc
sbb
aad
pop
nop
fnstenv
add
scas
test
loop
std
testl
and
pop
mov
jbe
icebp
imul
mov
sarb
les
test
test
mov
inc
mov
imul
adc
sub
and
leave
test
js
in
xchg
xchg
push
mov
mov
movsb
out
xchg
inc
cmpsb
xchg
push
shll
or
mulps
mov
cmp
insb
sbb
or
and
cmp
js
xchg
mov
jno
xor
jo
out
jnp
adc
push
lahf
inc
daa
mov
shr
add
scas
int3
pop
cmpb
xchg
gs
inc
es
pop
sahf
int
aad
bound
into
dec
xchg
aam
int3
pop
xchg
or
data16
movsl
shlb
out
test
cmp
scas
bound
mov
enter
xor
cmp
sbb
sbb
cmp
lret
in
fdivs
ss
enter
pop
mov
ret
out
jl
or
movsl
pop
add
in
shl
sbb
mov
lods
pop
sub
shrl
ret
inc
in
jmp
sarb
pop
mov
jnp
pop
dec
xchg
sub
cmpsb
xor
push
mov
or
fwait
sub
push
stc
lods
insb
lods
ljmp
sbb
lret
cmp
sub
mov
fs
mov
ljmp
scas
xchg
imul
add
mov
dec
jnp
mov
out
xor
sahf
add
dec
pop
xor
jmp
aaa
xchg
sub
dec
scas
mov
mov
arpl
sbb
xor
push
lret
test
jo
lock
xorl
jo
jnp
xchg
jno
les
or
cmc
in
fwait
adc
add
inc
lods
mov
push
int
xor
testl
cli
inc
leave
unpckhps
sbb
shrl
mov
push
mov
mov
inc
fiadds
sub
dec
das
xchg
addr16
stos
shl
sub
push
movsb
sahf
sbb
sbb
mov
or
jmp
and
xor
push
js
adc
sub
mov
and
cmp
push
popf
sbb
and
inc
cli
insb
xor
jge
sub
mov
adc
inc
mov
repz
mov
icebp
clc
xor
rol
pushf
sbb
aaa
loop
loope
pop
pushf
pop
dec
fcoms
fidivl
cmp
lcall
push
cld
int3
mov
sti
xor
popa
cld
push
xchg
mov
inc
push
dec
in
scas
sbbb
inc
stos
mov
mov
and
call
inc
ror
lods
aas
out
shl
cmpsl
mov
ret
rclb
sbb
test
pop
jmp
sbb
adc
xchg
mov
add
push
xchg
xchg
adc
test
add
xchg
int3
adc
inc
add
in
pop
fstps
jns
leave
inc
imul
int
sbb
lds
pop
dec
inc
fisubl
mov
sub
mov
mov
fucomp
scas
shrb
in
das
loope
mov
xchg
push
mov
jmp
push
and
mov
pop
xor
cmp
fs
and
cmpsl
in
fnstenv
add
movsl
jecxz
mov
jae
jnp
mov
xchg
xor
push
or
mov
daa
inc
add
push
pushf
xor
push
cmc
jmp
arpl
addr16
dec
adc
sbbl
cmp
cmp
shlb
pop
pop
push
jo
dec
push
cmp
or
jle
andl
ljmp
mov
arpl
lds
mov
outsl
addr16
cwtl
test
sti
pop
adc
out
cmp
in
stos
sbb
inc
movsb
lea
pop
and
mov
popf
cli
cmp
adc
pop
les
sarl
in
movsl
icebp
or
push
mov
add
xchg
dec
enter
mov
pop
push
sti
push
fwait
or
mov
adc
jmp
popa
inc
dec
jae
shlb
fldcw
arpl
mov
mov
leave
std
cltd
addr16
aas
ljmp
lret
jp
in
lds
inc
movsl
push
popa
fs
add
push
mov
in
aad
and
sub
xchg
xchg
inc
or
pushf
cli
mov
pop
jl
aad
or
push
jns
into
pop
inc
es
stos
cmpsb
test
test
cltd
lahf
xor
inc
into
push
jno
lock
xlat
adc
sub
jl
daa
loop
push
call
test
sub
pop
fmul
fimuls
subb
push
daa
ljmp
jnp
adc
push
mov
and
test
mov
in
test
or
ja
in
cmp
jmp
and
sub
xor
stos
sbb
out
xor
idivl
or
adc
sub
xlat
adc
outsb
or
aaa
sub
mov
mov
inc
test
mov
clc
imulb
ficomps
cmp
xlat
sub
leave
adc
repnz
mov
adc
fmull
mov
inc
jg
and
dec
adc
dec
fiadds
loop
mov
scas
idivl
orb
cmp
dec
stos
sbb
cli
and
sub
xlat
insl
adc
lahf
xor
mov
push
mov
dec
loope
js
xchg
imul
jbe
and
add
xchg
xchg
lock
insb
in
mov
arpl
fwait
xchg
lds
mov
jo
fisubl
fldt
pushf
popl
mov
pop
arpl
sti
rsqrtps
cli
push
dec
lock
popa
inc
loop
je
aas
mov
lods
mov
test
rorb
shr
lret
pop
setle
lahf
xor
dec
push
add
dec
lods
insl
bound
cltd
scas
lock
adc
jno
dec
in
stc
sbb
clc
int3
xor
outsl
or
sbb
inc
lods
xor
sub
shl
sbb
inc
mov
jg
aas
dec
fcomps
inc
mov
adc
ret
aaa
dec
dec
stos
inc
mov
bswap
pop
jnp
cmp
push
pop
out
adcl
mov
shll
or
rclb
outsb
cmp
in
loop
insl
sub
in
sub
mov
popf
jg
mov
mov
or
loope
int
or
jl,pt
xorl
lahf
adc
lret
subb
daa
imul
das
jl
mov
pop
lcall
fisttps
add
cmp
sbb
mov
jns
mov
jne
mov
inc
jle
dec
scas
out
add
adc
dec
pop
scas
mov
mov
xchg
jl
fstpt
mov
mov
or
cmpsb
test
push
dec
int3
pop
pop
cmc
lds
push
out
cmp
test
and
fisubs
daa
push
adc
mov
dec
pop
mov
cwtl
pusha
fs
loope
lcall
test
daa
scas
sub
dec
popaw
inc
mov
jp
cwtl
cld
mov
lea
fwait
sbb
dec
jmp
sub
push
push
iret
jecxz
fildll
in
pop
pushf
pop
add
sub
testb
aam
push
addl
nop
std
testb
jp
jns
push
outsl
pop
xor
rorb
shl
cmp
adc
push
lea
cmp
test
shll
leave
fs
hlt
xor
jnp
gs
in
lret
pop
and
jmp
aaa
or
inc
lret
mov
rcll
js
repnz
or
ja
xchg
cmpsl
loop
pop
jmp
dec
mov
bound
sbb
jns
add
mov
jge
lea
mov
or
lods
mov
inc
fst
imul
out
mov
xchg
adc
pop
scas
inc
mov
xchg
je
push
inc
dec
jbe
mov
push
pop
pop
cld
mov
fucom
adc
mov
pop
gs
cltd
jo
add
xor
jp
push
push
xor
jmp
xchg
mov
push
sbb
in
mov
cs
cld
adc
enter
dec
repnz
mov
js
mov
mov
sub
fidivrl
xor
add
mov
and
outsb
sub
mov
aas
mov
cmp
outsl
xchg
dec
jns
dec
shl
je
sbb
add
sbb
ja
adc
inc
test
xor
mov
lods
inc
push
pusha
or
jecxz
nop
fsubrp
rcr
jp
out
inc
sbb
or
popl
cmc
pop
mov
mov
stos
popa
inc
cltd
sbb
pop
inc
inc
in
daa
cmp
rolb
out
testl
pop
mov
jmp
mov
ficoml
push
add
popa
or
ds
mov
sub
lret
dec
int
fwait
xchg
jno
push
xchg
add
std
jle
incb
mov
pop
push
adc
or
xchg
cltd
xor
adc
call
pop
insb
jo
mov
in
add
sub
jge
jmp
pop
ret
or
es
cwtl
divl
sbb
hlt
pop
bnd
outsb
cmp
jp
cs
aam
lds
dec
add
jg
add
mov
ljmp
das
add
adc
cwtl
insl
xor
xchg
lret
cmp
pop
test
mov
jmp
out
sub
sbb
ds
outsl
pop
ret
pop
loop
cmp
push
ds
push
mov
cmp
cmpsb
ja
bound
push
jge
mov
jmp
xor
aaa
sti
xchg
out
push
les
add
test
xchg
pop
jecxz
subl
push
xor
outsl
fildl
mov
jl
fsubs
lcall
xorb
lcall
stc
test
or
and
mov
les
or
push
idivb
movsb
xor
lret
imul
out
xor
inc
cltd
inc
add
jae
adc
rcrl
roll
das
or
xchg
adc
int
push
es
sar
fsubrl
push
fwait
mov
test
in
popf
xor
adc
cmp
pop
lea
mov
bound
inc
xchg
inc
xor
lock
xchg
dec
lret
mov
xchg
dec
cmpsb
fbstp
pop
cmc
fiadds
enter
data16
cmp
mov
imul
loop
pop
xchg
decl
idivb
mov
cwtl
outsb
jp
in
pop
push
dec
jle
push
and
cld
ret
shl
hlt
push
mov
push
addr16
fsincos
shrl
cmc
sub
mov
pop
subl
mov
shrb
adc
and
jl
test
mov
scas
mov
cmpsb
pop
mov
mov
mov
mov
subl
dec
dec
bound
xor
inc
and
mov
sahf
divb
int
lahf
cmc
jecxz
mov
dec
in
xchg
push
test
adcb
xchg
xor
adc
add
mov
and
push
adcl
xor
lret
xchg
mov
mov
shl
mov
test
mov
cmpsl
cmpsl
push
add
pop
jge
xchg
mov
pop
hlt
stc
cli
add
aad
jnp
cmc
cmp
fiaddl
push
jns
cli
cmp
inc
clc
add
sub
mov
popa
inc
xchg
xor
ret
add
and
jnp
scas
fstpl
and
mov
xor
in
fidivs
push
xchg
adc
mov
sarb
jmp
dec
stos
lods
lahf
stos
sub
ret
frstor
xor
xorl
cmpsl
test
mov
mov
pop
xchg
sahf
cmp
and
out
mov
pop
mov
mov
sbb
xor
sbbb
and
loop
inc
adc
movsl
xor
jge
imul
cmpsl
fxch
sahf
fadd
addr16
test
loope
das
adc
stos
lods
cmp
and
xchg
jno
push
sub
pop
pop
ficoml
mov
mov
xor
sbb
aas
outsb
bound
push
outsl
into
cmp
hlt
sbb
adc
jns
jg
push
hlt
dec
ror
enter
push
cltd
jb
cltd
mov
pushl
xchg
stos
mov
test
inc
jmp
lods
add
rolb
jp
push
adc
mov
jne
push
xor
fwait
lock
mov
adcl
push
xchg
lret
cmp
inc
xchg
mov
xlat
cmp
mov
mov
mov
subl
cwtl
pop
or
and
mov
in
in
bound
xor
in
decb
scas
cltd
aaa
mov
pop
and
push
mov
pop
inc
sbb
sahf
sbbb
lods
mov
cmpsl
lahf
test
ja
in
aam
repnz
mov
lret
xor
sub
and
and
pop
mov
or
jnp
setp
aam
in
jae
or
lds
sbb
ss
fidivl
sub
push
out
leave
sbb
std
push
sbb
movsb
xchg
scas
sbb
lret
inc
aad
sbb
lock
adc
add
lahf
push
out
test
std
test
mov
adc
or
and
pop
scas
fiaddl
pop
test
test
mov
xor
mov
pop
scas
dec
jl
cmp
mov
pop
adc
cs
and
aaa
lcall
lock
fcoms
mov
ljmp
push
int
dec
dec
mov
mov
out
cmp
cmc
mov
popf
add
pushf
xor
int3
mov
xor
sti
cmp
mov
dec
aaa
pop
jne
push
call
cli
cli
cmp
mov
divb
and
lret
loop
inc
push
leave
int
and
lods
jecxz
enter
scas
inc
add
push
in
bound
cs
cmp
inc
push
test
add
mov
mov
xor
test
sub
mov
xlat
sub
out
nop
inc
or
rcl
sub
inc
out
adc
jae
aaa
dec
lahf
jmp
mov
aas
mov
or
add
sub
fildll
jp
aas
xchg
dec
jge
mov
fcoml
loop
into
lods
dec
iret
adc
jle
icebp
cmp
in
das
sub
enter
cmp
add
inc
adc
fiadds
sub
shlb
popf
xchg
in
push
lret
mov
jne
cmp
inc
data16
dec
dec
stos
adc
repz
movsb
rcrb
push
in
test
mov
sub
rolb
push
popf
mov
insl
in
enter
cmc
bound
out
fildll
push
xchg
push
dec
adcb
stos
das
pop
jb
inc
js
ja
cmpsb
and
mov
sbbl
xchg
xchg
sub
adc
je
and
packssdw
jp
dec
stos
dec
dec
and
and
push
lahf
mov
sti
shl
mov
xor
cmp
push
push
mov
pop
adc
jecxz
std
sub
jne
leave
shl
or
xchg
add
jo
mov
mov
movsl
jnp
shrb
shlb
push
loop
popf
and
mov
mov
xor
nop
cld
cwtl
int3
rorl
xchg
pop
adc
dec
add
jp
cld
push
cmp
inc
add
jle
pop
jle
fisubl
fwait
sbb
andl
cmpsb
scas
fidivl
dec
js
icebp
das
inc
dec
stc
ret
outsb
daa
add
ret
xlat
adc
imul
outsb
push
jne
bound
inc
psubw
pop
push
scas
sahf
cmp
inc
add
or
daa
jnp
in
in
mov
lods
imul
fadds
sub
das
cmp
scas
ret
jg
cmp
mov
push
or
cltd
and
jns
in
and
es
stos
mov
daa
inc
clc
push
inc
xor
xor
enter
fs
cmp
loop
outsb
cltd
outsb
dec
aas
out
push
in
and
in
mov
push
lea
enter
dec
outsb
sarl
cwtl
fists
add
fs
cwtl
rcrl
out
adc
fmul
add
stos
dec
divb
in
mov
cmp
mov
and
out
or
xchg
mov
cwtl
test
es
sbb
jns
push
mov
xor
mov
xor
or
or
pushf
nop
lods
leave
push
pop
jbe
fstp
mov
ret
leave
loope
dec
pop
imul
inc
and
adc
sub
dec
insl
lret
xor
xorb
cmpb
scas
into
fnstenv
movsl
lock
cmp
shrb
inc
lea
movl
ss
mov
jg
jg
push
test
sub
xor
cmp
or
shl
push
lcall
push
aaa
daa
pop
test
xlat
add
icebp
sbb
enter
mov
enter
outsl
push
clc
aad
sub
sbb
jo
sub
popf
dec
hlt
jnp
int3
dec
mov
rorl
pop
push
inc
aas
pop
repnz
in
inc
push
test
lret
xor
adc
sub
inc
mov
mov
xchg
add
imul
sbb
mov
inc
mov
and
inc
lea
add
pushf
and
jp
inc
push
in
bound
and
pop
xlat
sub
rolb
shl
rolb
mov
jmp
dec
das
push
push
sub
cmp
jg
mov
ljmp
loopne
and
sti
sbb
adc
cwtl
push
mov
fwait
in
or
mov
stos
je
lods
jmp
or
jne
mov
push
imul
push
and
mov
xor
xchg
daa
cs
sti
or
outsb
shrb
sub
in
ljmp
inc
xlat
jae
sbb
insl
pushl
out
push
mov
stos
xor
lods
jmp
je
xor
outsl
push
xchg
sti
pop
mov
test
sub
jp
scas
pusha
sbb
pop
mov
push
mov
or
and
dec
sub
cmp
cmp
lahf
xor
pop
xor
pop
outsb
lcall
lret
pop
push
ret
sti
shlb
sbb
dec
leave
cmp
jae
pop
test
std
insl
jg
sbb
dec
mov
mov
ret
xchg
in
mov
mov
addl
mov
jb
inc
fcmovu
xchg
dec
dec
sbb
add
es
inc
push
add
mov
jbe
arpl
mov
andb
lds
or
dec
xor
xchg
push
insb
sbb
xor
popf
dec
inc
cs
ds
scas
bound
lahf
inc
or
sbb
jecxz
stc
push
xchg
popf
stos
xchg
mov
and
scas
es
push
add
pop
repz
filds
push
pop
mov
dec
movsl
fnstcw
test
rclb
xlat
lcall
scas
or
xchg
cmp
jae
cmp
fwait
repz
mov
sbb
inc
push
or
popf
inc
scas
fs
push
push
mov
cmp
lcall
outsb
clc
sub
dec
stc
or
inc
je
nop
mov
and
adc
popa
mov
pop
loopne
or
or
sub
into
push
rorb
ljmp
pusha
stos
mov
pxor
sbb
into
into
mov
pop
iret
fildl
add
cmp
push
inc
cld
sbb
aam
test
dec
jb
mov
rcll
aas
movsl
jb
stos
mov
mov
lds
sarl
cmp
das
rcrl
inc
or
js
inc
mov
xchg
jae
adcl
fmull
pop
dec
or
and
and
xor
cmpsb
insb
xor
dec
push
mov
cmp
jle
xchg
repnz
xchg
fdivs
inc
and
inc
xor
stos
shlb
push
inc
push
jg,pn
and
mov
xchg
andb
mov
daa
sub
mov
dec
and
mov
out
pop
rcl
testl
test
jnp
pop
inc
push
sbb
mov
mov
add
push
mov
hlt
inc
fadd
or
xor
xchg
mov
ret
cwtl
repz
jo
push
movsb
cmp
xchg
fiaddl
ret
call
mov
jp
bound
out
mov
pop
icebp
jg
test
xlat
adc
jbe
xor
lahf
negl
xchg
mov
imulb
frstor
cli
or
ja
je
adc
daa
pop
sahf
repz
sub
out
gs
aad
mov
and
cld
mov
push
adc
lahf
mov
add
sub
pop
inc
fs
sbb
xorl
pop
xor
jmp
lmsw
andl
push
push
repnz
aas
int
and
fs
jp
daa
or
fsts
mov
cs
sub
fmulp
mov
icebp
inc
dec
dec
fwait
xchg
pop
icebp
add
movsb
mov
adc
in
sbb
xchg
cmp
push
mov
mov
inc
test
mov
roll
lahf
pop
adc
pop
add
xchg
jns
inc
pop
in
test
pop
sti
movsl
mov
push
inc
fdivrs
das
test
nop
cs
jnp
or
and
adc
aas
xchg
adc
xchg
xchg
push
pop
addl
lods
mov
ja
xchg
insb
add
cmp
mov
sbb
daa
pop
test
loop
jb
push
cmc
ja
popa
sub
adc
mov
aam
pop
int3
or
fisubrl
cmpb
inc
icebp
cmp
dec
mov
cwtl
jns
xor
loope
add
sub
lds
daa
mov
loopne
outsl
sbb
hlt
push
popf
mov
pusha
and
dec
or
mov
mov
sahf
and
rorb
mov
cmovs
sbb
fs
or
iret
dec
xor
dec
sub
test
mov
in
sub
idivb
cmpsl
mov
fmul
cmc
pop
push
into
add
data16
xchg
lods
mov
sub
lret
mov
and
popa
rcrl
test
test
cwtl
daa
test
in
aas
push
pop
push
data16
sub
ja
inc
xchg
sub
cmc
out
shrb
add
rcll
adc
lea
lret
and
cld
xchg
add
xor
outsl
sbb
sub
or
sbb
inc
cs
pusha
dec
lds
mov
xchg
add
xorb
add
fwait
adcb
leave
xchg
mov
mov
or
adc
insl
cmpsl
outsl
out
or
mov
pusha
sbb
or
mov
dec
mov
jmp
xlat
sbb
aam
shrl
xchg
ja
aad
mov
and
xor
cmp
add
push
int3
orb
imul
in
cs
out
push
push
jmp
lcall
jne
in
pop
in
lods
xchg
and
mov
add
into
mov
xchg
cmp
movb
lret
xchg
mov
jb
pop
into
lock
xor
push
push
icebp
xchg
mov
xor
cmp
cld
xchg
sbb
cmpsb
dec
pop
mov
push
test
mov
mov
push
sbb
inc
push
mov
hlt
dec
iret
arpl
pop
push
shlb
xor
pop
push
jne
mov
xlat
xchg
adc
dec
dec
mov
rcrl
int3
loop
xor
mov
fiadds
pop
divl
icebp
cmpsl
sbb
sbb
jg
sub
std
xchg
movsb
pushf
in
ret
pusha
popf
add
arpl
push
bound
in
in
ss
out
mov
shl
and
mov
xchg
or
cmp
ja
adc
push
fisttpll
cltd
or
arpl
je
sub
xchg
mov
sub
pop
aad
hlt
ror
jae
xlat
jl
dec
pop
decl
stos
and
ds
jns
xchg
dec
mov
fadds
jns
arpl
inc
fidivs
pop
xchg
mov
int
in
daa
pop
test
rcll
scas
mov
push
mov
adc
inc
xchg
daa
gs
pushf
or
jae,pn
pusha
or
jno
mov
jnp
mov
push
xor
ret
sbb
stos
movsb
inc
in
add
decl
in
iret
inc
fldcw
add
movsl
stos
jno
xchg
lahf
mov
mov
stos
fldenv
and
repnz
enter
jne
sbb
dec
ror
and
sbb
popf
push
or
out
adc
or
cs
jne
out
das
cmp
mov
clc
loop
call
test
lcall
cwtl
das
fsts
call
mov
fcoml
nop
test
bound
inc
lods
inc
fdiv
pusha
enter
pop
adc
add
jae
add
std
or
stc
scas
cmp
pop
jae
add
cltd
push
lock
test
mov
aad
inc
inc
adc
cmc
jae
aad
jae
jle
or
pop
addr16
movsl
add
push
test
movsb
sub
icebp
insb
mov
xchg
xor
xor
cli
mov
pop
mov
and
push
sub
jo
cli
xchg
jae
aaa
outsl
dec
in
fmul
push
mov
xorb
cmp
call
fabs
mov
dec
in
outsl
sub
mov
pusha
lock
movsb
mov
rclb
nop
mov
das
rorb
daa
ds
inc
mov
xchg
divb
mov
add
ljmp
jae
lods
aam
int
call
fs
mov
icebp
incl
mov
shrb
hlt
pop
mov
fdiv
adc
and
mov
dec
jge
mov
jge
into
mov
jle
inc
jb
sbb
cmp
pushf
and
sub
jl
inc
scas
out
scas
inc
dec
cmp
xchg
mov
pushf
and
lret
sbb
dec
push
shll
pop
shl
repnz
in
popa
in
imul
xchg
loopne
and
rcll
and
outsb
xchg
mov
call
dec
pop
js
add
and
call
cwtl
fwait
xchg
in
xchg
mov
sub
push
dec
pop
in
rcrb
and
inc
scas
fs
ret
in
movsl
pop
push
cltd
pop
mov
je
cltd
xor
pop
in
std
xlat
mov
andl
push
push
dec
jecxz
ret
pop
in
xor
push
mov
mov
xlat
dec
fcomps
cmpb
cmp
sbb
cmp
mov
dec
mov
pop
fbstp
add
es
add
dec
cmp
mov
jecxz
inc
cmpsl
push
stos
lea
in
xchg
lds
add
xchg
ss
pusha
fcompl
into
dec
push
out
sti
xchg
sbbl
push
and
negl
xor
or
inc
mov
jbe
dec
sahf
imull
jno
cmpsb
mov
inc
stc
jb
and
adc
push
sbb
test
int
or
push
andl
dec
test
mov
dec
cmp
test
or
aas
sahf
subl
imul
sbb
mov
pushf
js
adc
loope
out
push
lahf
xchg
icebp
mov
mov
out
imul
add
xchg
clc
fcoms
mov
lret
jg
mov
sbb
mov
inc
push
jbe
int
cmpsl
push
xchg
push
nop
enter
daa
pop
divb
jge
pop
push
hlt
adc
pop
dec
rolb
or
sub
mov
dec
cmp
lcall
push
iret
hlt
imul
andb
mov
inc
mov
inc
fistpl
bound
mov
dec
inc
mov
je
xchg
out
mov
fdivr
mov
stc
mov
push
xor
fstps
test
divl
mov
jno
inc
fidivl
or
xchg
xchg
mov
pop
push
sti
sbb
inc
es
xchg
scas
or
pop
push
adc
cs
mov
pop
adc
icebp
add
shll
ja
xchg
jo
cwtl
test
mov
gs
jnp
inc
fidivrs
fcmovbe
sbb
pop
pop
scas
popl
fdivr
xor
xchg
cmp
fnsave
mov
icebp
or
lahf
dec
das
lea
pop
pop
sbb
out
push
adc
lret
icebp
jae
push
cwtl
das
cmpsl
mov
sub
lret
jge
rcrl
cpuid
pop
jl
lods
xchg
stc
inc
fsubrp
ja
xchg
je
add
stc
mov
fdivrs
fisubs
xchg
movsb
fdivr
xchg
add
sub
enter
insl
dec
aaa
aam
fwait
xor
jns
xchg
adc
dec
jo
pop
mov
cmpsl
mov
inc
sahf
ss
cwtl
push
in
push
cmp
cmpsb
jp
mov
mov
jl
adc
insb
jns
outsb
add
popf
fs
sbb
pop
push
push
pushf
test
cs
jb
dec
mov
fcoms
cltd
xor
jnp
and
in
lods
mov
xchg
outsl
xchg
mov
in
cltd
test
imul
sbb
int
movsb
push
loope
push
xchg
das
or
mov
cmp
cmp
lods
inc
pushf
inc
mov
cld
sbb
outsl
sbb
icebp
mov
adc
sub
jnp
stc
mov
cmp
hlt
int
fidivrs
push
mov
std
push
fwait
xchg
loop
mov
or
dec
sub
sahf
dec
pop
outsl
add
lcall
xor
js
ret
inc
xor
xchg
dec
sub
sbb
pushf
dec
push
rcr
aad
icebp
pop
and
cltd
add
aas
cmp
jmp
test
rorb
leave
mov
stos
adc
xor
jecxz
sub
rcll
fcomip
mov
xlat
mov
mov
jle
cmp
and
sahf
loopne
iret
push
push
pop
inc
js
push
ljmp
xor
mulb
out
les
cmp
dec
es
push
mov
inc
sahf
and
jb
xlat
cmp
xchg
or
sarb
fildll
lds
orl
dec
cmp
std
iret
jne
lds
imul
add
and
xor
pop
jmp
and
mov
pop
mov
jp
mov
pop
xchg
push
js
xchg
lret
xchg
adc
jno
mov
add
jmp
mov
lea
xchg
mov
test
and
xor
jp
cld
jp
shrl
adc
roll
inc
jbe
shl
into
inc
lret
jae
repnz
inc
call
lods
mov
xchg
sub
outsb
int3
dec
loopne
mov
add
out
sbb
ds
cli
lods
xchg
lock
dec
subl
popf
ret
sub
add
mov
sub
inc
clc
repnz
mov
call
dec
loope
inc
lcall
fisttpll
sbb
xchg
xchg
xchg
movd
test
lea
jp
daa
movsb
lret
sarl
cli
xchg
in
mov
dec
mov
roll
pop
mov
xor
push
push
push
mov
xchg
cmp
mov
pop
adc
out
xor
pop
pop
xchg
cmp
sbb
testb
adcb
adc
dec
fsubl
and
out
aaa
pop
int
or
mov
cmpsb
out
pusha
push
or
or
jecxz
pop
out
mov
push
rcrl
mov
hlt
call
mov
cmc
dec
and
add
cmp
sub
or
mov
cmp
and
popa
jbe
add
fs
scas
pop
jae
addr16
sub
xor
inc
or
xchg
insb
pop
xchg
cmp
inc
sahf
fnsave
das
test
pop
jbe
adc
pop
mov
pop
cmp
lods
outsl
dec
pop
in
cli
jbe
mov
ret
outsl
mov
jp
fwait
stos
mov
pop
andb
adc
mov
aas
ljmp
sub
cmp
push
mov
push
scas
in
add
push
push
pushf
je
mov
cmp
ss
xchg
mov
jmp
jae
jbe
jo
loopne
pop
mov
les
inc
push
scas
ja
dec
and
pop
out
outsb
inc
mov
lods
ja
clc
jp
mov
jp
adc
pushf
xor
les
lret
jb
mov
sub
into
gs
pop
push
out
aas
in
jno
mov
jnp
int3
jnp
push
adc
xor
aas
or
lcall
and
cmp
xchg
and
and
cmp
andb
lods
sti
jg
lock
cmp
inc
test
adc
andb
fildll
cld
jge
repz
frstor
imul
fs
fcoms
push
data16
jns
cmpsb
cmpsl
add
pop
ret
dec
shlb
js
pop
fistpl
add
scas
or
xor
add
sti
js
cltd
sub
add
out
in
xor
pop
lods
add
dec
fistpll
xchg
in
and
fdivl
xchg
add
jmp
inc
and
jge
out
mov
and
or
xchg
fstps
imul
in
mov
ljmp
sbb
sub
push
outsl
loop
add
or
sub
aam
jp
lret
or
adc
push
pop
adc
cmp
mov
dec
ss
and
shlb
shlb
push
popa
add
push
jns
addl
xor
dec
push
push
leave
push
sbb
adc
iret
add
pusha
inc
scas
sbb
pop
xchg
push
pop
adc
scas
xor
and
jecxz
push
push
mov
lds
dec
repz
xchg
sub
incb
or
or
inc
xchg
jbe
xchg
test
sub
ss
stos
push
lds
ret
xor
sbb
out
xchg
arpl
dec
pusha
cmp
rol
pusha
jmp
mov
fstl
mov
dec
mov
push
nop
push
fsubp
cmp
mov
mov
and
mov
out
xor
add
jno
inc
sub
xchg
ds
call
pusha
push
lcall
pop
cmp
mov
fadd
pop
cmp
std
jg
sbb
jmp
jno
push
out
test
sbb
pop
ficompl
mov
xchg
fcmovbe
shlb
mov
test
mov
arpl
stc
sub
clc
sbb
js
mov
add
faddl
bound
sub
xchg
or
mov
pop
push
insl
adc
cmpsb
clc
jb
lahf
adcb
jae
push
paddq
or
int3
scas
push
sub
mov
jae
dec
mov
lds
notb
mov
lods
push
mov
xchg
insb
mov
push
and
add
aaa
jle
jmp
mov
sbb
cwtl
sub
imul
gs
jo
push
or
sbb
rcll
cmp
push
ret
lea
mov
test
mov
adc
addr16
gs
scas
repnz
dec
pop
jge
or
jae
lahf
jb
popf
aam
inc
sbb
dec
std
cmp
xor
push
aad
push
inc
sahf
xor
insb
lsl
xchg
stos
testl
jne
push
sbb
fwait
cmpl
add
shll
jp
outsl
jp
add
pop
repnz
dec
push
mov
and
mov
sbb
out
cmpsl
jmp
sub
xor
movsb
mov
ficoml
jns
add
adc
std
lock
xchg
aad
ljmp
insl
dec
loope
push
sbbl
or
fucomi
mov
push
jo
jns
mov
es
stc
roll
mov
jmp
mov
xlat
xchg
pusha
cmp
xor
jg
lds
mov
lds
repz
rcrb
and
leave
pop
and
adc
pop
leave
int
pop
filds
mov
fistpl
push
xorb
inc
out
jae
dec
iret
rolb
packssdw
add
rcrl
pusha
or
push
mov
pop
sarb
inc
clc
mov
icebp
push
fucomp
cld
outsl
xchg
add
mov
cld
in
and
fldt
lret
pushf
cmpb
pop
lret
add
in
mov
inc
repz
pop
dec
arpl
sub
sub
icebp
pop
lcall
mov
xor
mov
subb
inc
sahf
mov
sti
sti
sbb
xor
inc
mov
in
fcompl
outsb
cld
inc
fsubs
xchg
adc
mov
or
xchg
mov
data16
push
push
mov
push
orl
sbb
lds
sub
add
sub
test
push
out
lret
fstps
inc
mov
cmp
fsubr
sbb
aas
testl
xor
cmp
stc
push
sbb
aaa
rcrb
xchg
sbb
inc
aas
push
js
inc
push
in
and
mov
ljmp
out
rol
dec
pusha
adc
divb
hlt
dec
mov
push
jmp
shl
into
std
dec
jns
inc
push
and
mov
ds
fwait
xchg
ds
lcall
test
cli
fbld
imul
inc
pop
jle
push
inc
insl
sub
or
xchg
addr16
push
pushf
xchg
ja
jg
push
add
pop
sbb
sub
bound
dec
push
add
insb
mov
sub
cmpb
lods
out
lea
iret
int
inc
dec
cmpl
sub
cmovo
mov
mov
xchg
scas
cld
scas
repnz
and
mov
cmc
mov
shrl
jecxz
sbb
dec
or
push
repnz
mov
adc
jle
call
pop
roll
in
cmp
nop
insl
subb
mov
pop
in
or
or
inc
xchg
jns
xor
daa
or
lret
fs
push
rcrl
pop
pop
imul
xchg
das
xchg
mov
test
mov
jae
mov
mov
sbb
inc
mov
sbb
or
mov
outsl
test
mov
push
loopne
scas
cmp
nop
stos
sub
push
lods
jg
adc
cltd
xor
cmp
mov
popa
cld
stos
mov
pop
sbb
pop
mov
mov
and
push
cwtl
adc
out
cld
sub
mulb
imulb
push
iret
pop
push
je
sub
cmpsl
ds
ret
lods
pop
adc
sub
adc
es
xchg
add
or
inc
push
sets
insb
adc
fisubrs
das
pop
push
ja
imul
fnstenv
clc
movsl
xchg
flds
xor
add
test
loopne
pop
xchg
xor
add
enter
lock
lods
pop
andb
xchg
fs
mov
ss
je
mov
and
cltd
sti
pop
cwtl
xchg
sub
xorb
out
fdivrp
xchg
out
xchg
pushf
pop
push
cs
xchg
mov
lock
stos
mov
jmp
data16
inc
popa
mov
and
loopne
dec
iret
or
sarl
loopne
jno
push
or
cmp
loop
mov
popa
add
jb,pn
imul
stos
mov
loopne
ret
sbb
xor
cmp
cwtl
data16
rcll
and
arpl
mov
lds
sub
mulb
jp
cmp
fstps
xchg
mov
mov
add
fucomi
dec
dec
pop
push
hlt
lret
scas
xchg
mov
pop
mov
pusha
and
cmp
push
xchg
xchg
pop
in
stc
add
dec
pop
jb
orb
cmp
test
cli
cld
adc
cwtl
mov
roll
dec
dec
jns
mov
pushf
rcll
sub
mov
mov
repz
add
imul
or
lahf
repnz
inc
loope
sbb
into
gs
inc
rcrl
insb
xor
clc
fmul
jno
ja
jnp
sub
addr16
add
std
sub
shr
cltd
sbb
adc
imul
stos
mov
sub
ljmp
sbb
jmp
aam
sbbl
dec
test
push
dec
and
loopne
mov
fst
in
inc
notb
jg
or
push
int
jp
cmc
in
popf
shufps
add
cli
inc
clc
ljmp
jnp
rcrb
push
jmp
andl
cmp
sub
stc
daa
sbb
mov
add
xchg
shll
or
sbb
imul
scas
call
rcrl
jecxz
clc
push
lea
arpl
cmp
pop
shrl
imul
push
int3
rcrb
mov
sbb
fisttpl
cmp
pushf
faddl
aas
imul
loop
insl
mov
push
sub
xchg
pop
ss
loopne
sub
gs
test
inc
std
xchg
jae
leave
mov
add
mov
rcll
cmp
sbb
cld
adc
and
push
imul
ljmp
outsl
mov
aad
cmp
imul
dec
loopne
insb
daa
sbbl
jo
jae
divl
add
dec
test
test
sti
push
adc
or
orl
enter
insb
mov
fsubrl
lcall
lds
sub
cmp
inc
popa
xchg
int
loope
lods
scas
xchg
ret
or
int3
out
add
lea
subb
inc
lods
add
cld
push
daa
notb
in
xor
xor
popa
push
arpl
jb
test
int3
ljmp
fstps
mov
jmp
orl
mov
int3
fsubrs
in
aaa
add
pop
lret
dec
pop
xchg
stc
and
push
xlat
mov
mov
cmpsl
test
in
in
call
iret
test
hlt
outsb
push
shl
xchg
and
mov
jge
push
in
js
jbe
lds
sub
arpl
stos
dec
mov
lea
dec
mov
mov
xchg
pop
aaa
js
or
adc
cmp
mov
addr16
or
lds
fimuls
movsl
fsubrl
pop
jbe
and
aam
insb
outsl
into
jne
pop
mov
pop
lods
pop
loope
imul
repz
mov
pusha
pop
xchg
xchg
push
inc
lahf
mov
xor
push
jp
fcoml
andb
imul
jb
fisubrl
pop
aad
or
outsb
bound
into
or
mov
and
cli
sub
cmp
aam
push
mov
and
mov
xor
push
movb
inc
lods
test
xchg
mov
scas
ja
xlat
mov
push
pop
push
fistl
cli
lods
mov
or
jg
and
jb
sti
xor
sub
inc
cmp
fucomp
push
movsb
pop
cwtl
pushf
fwait
rorl
pop
setb
in
cs
sub
jno
das
fwait
pop
lock
push
pop
in
push
adc
inc
add
jbe
test
insl
jne
jmp
xchg
pushf
adc
movsb
dec
pop
mov
test
outsb
fs
xchg
subb
jns
lock
insb
lcall
nop
sub
mov
mov
push
pop
mov
add
mov
dec
add
aas
adc
arpl
push
mov
mov
dec
outsb
call
aas
insb
push
stos
xor
out
and
icebp
jo
repz
inc
movsl
loopne
sahf
jecxz
out
loope
dec
pushf
or
imul
inc
xchg
pop
aam
add
ss
or
and
fdivl
lahf
in
push
sbb
out
subb
jb
lods
xchg
mov
mov
jg
hlt
mov
mov
inc
cmp
loop
xchg
mov
push
mov
mov
insl
sub
dec
sbbb
outsl
out
sbb
mov
xchg
imul
das
aam
insb
jp,pn
sbb
mov
jle
fnstenv
mov
pop
cli
push
mov
xlat
adc
and
mov
dec
push
iret
jns
lret
xlat
mov
jp
xor
fs
aas
sahf
loope
loop
push
xchg
js
stos
lds
mov
pop
inc
adcb
cmp
movsl
movsl
sbb
cmp
pop
mov
adc
jb
test
xor
test
xchg
testb
std
mov
sub
adc
fwait
insb
sub
push
mov
and
mov
imul
out
mov
out
es
test
sti
shrl
pop
xor
dec
pushf
out
fistpl
scas
pop
jge
fcomps
xor
mov
xchg
inc
mov
fimuls
mov
lods
cmc
push
ljmp
jno
mov
mov
sbb
movl
push
inc
adcl
popf
xor
sub
ds
imul
cmpl
cmp
andb
daa
rorl
shlb
addb
leave
xchg
js
bnd
cmpl
subb
mov
and
inc
stc
jb
mov
ja
or
mov
rol
adc
pop
lock
jns
imul
pusha
cmc
in
ss
jo
or
pop
cmp
in
jbe
aam
pop
push
call
dec
fimuls
jecxz
xchg
jne
sbb
in
xor
sbb
push
fsts
test
and
sbb
test
lcall
std
inc
mov
pop
lcall
imul
push
adc
shrb
inc
in
dec
pop
fistl
cmovg
scas
pop
in
inc
push
test
cld
sub
xorb
xor
loope
cmp
inc
jp
mov
pop
or
lods
xor
nop
jno
inc
scas
nop
jbe
js
mov
aas
adc
mov
mov
dec
push
mov
add
dec
out
cmp
repnz
sarb
push
imul
adc
push
iret
push
or
jb
inc
or
mov
fwait
push
js
pop
xor
inc
scas
inc
jmp
loop
xorb
push
sahf
imul
inc
inc
scas
xchg
addr16
lret
jp
dec
ret
pop
push
sbb
dec
or
mov
inc
jnp
pusha
jl
xor
cmpl
xor
and
loope
gs
mov
outsl
and
cld
inc
movsb
xchg
mov
scas
mov
add
pop
mov
adcl
pop
adc
cli
daa
lods
adc
mov
aad
mov
rorb
rcrl
inc
pop
and
cli
xor
sub
jns
jns
jbe
jns,pt
dec
in
test
aaa
cmpsb
mov
jmp
sbb
daa
jnp
xchg
dec
pop
clc
mov
fmull
jg
dec
lcall
xchg
and
xchg
and
and
movsl
mov
jg
fwait
aas
sahf
lea
movsl
xchg
or
and
fnstcw
and
inc
ss
jns
cmp
lods
jle
jle
int
cld
arpl
hlt
leave
pop
scas
mov
adc
mov
pop
ds
fxch
and
xor
arpl
lcall
inc
lock
les
inc
imul
pop
fwait
scas
ret
mov
or
fcoms
mov
sub
push
sub
insl
outsb
hlt
cwtl
mov
mov
test
push
and
inc
arpl
test
dec
xor
mov
mov
pop
jl
fdivs
xchg
bound
ljmp
out
popf
popf
popf
inc
sarl
sub
clc
push
sbb
mov
fcoms
test
mov
sub
gs
cmc
rolb
repnz
push
and
enter
outsl
sbbb
popa
clc
ljmp
lret
mov
lods
lret
cmp
iret
bound
mov
inc
aad
loope
or
adc
xor
push
or
loopne
pop
mov
in
jne
sbb
pop
dec
cmp
dec
lock
lret
xor
push
out
mov
mov
mov
nop
shrb
mov
jmp
das
aam
pop
pop
cmp
mov
mov
jmp
mov
ja
cs
push
xchg
sub
xchg
shll
rorl
adc
in
lcall
and
fisubrl
sub
and
sub
push
mov
in
xchg
xor
or
xor
push
rcrl
mov
shl
mov
fcmovb
out
idivb
dec
jmp
mov
cmp
dec
out
xchg
ja
nop
rcrl
xor
cmp
inc
jne
divb
xchg
inc
shll
jl
sbb
jp
pop
call
or
iret
inc
test
movsb
push
sbb
mov
xor
adc
push
ljmp
sub
jp
sub
dec
xchg
push
pushf
in
je
adc
push
xorb
pop
mov
dec
xchg
sbb
mov
mov
fst
scas
cwtl
cmp
fucomi
aaa
fnsave
in
or
fwait
xor
int
stos
jno
mov
push
push
pop
mov
lods
xchg
adc
shlb
call
jecxz
int
push
fs
push
out
push
aam
das
adc
sub
dec
inc
push
lea
loop
aaa
sub
pop
pop
jb
lods
lock
sarl
add
or
clc
or
inc
lret
shll
mov
repnz
jno
mov
mov
dec
mov
mov
test
adc
daa
hlt
mov
lods
arpl
outsl
sub
lret
pop
inc
iret
testb
lods
adc
pushf
movsb
andb
fnstcw
or
movsb
subl
xchg
add
ror
mov
test
pop
sub
leave
loopne
pop
imul
addr16
pop
enter
imul
loop
pop
dec
rorb
push
test
mov
fstl
and
and
xor
lock
lods
lods
jg
mov
cmp
gs
aad
cmp
popf
out
lea
fldt
dec
clc
mov
xchg
push
jbe
jge
adc
fs
ficoml
in
insl
lcall
hlt
loopne
adc
out
xor
enter
ja
mov
mov
outsl
adc
cmp
xchg
cmpsl
sbb
sub
nop
sbb
cmpsb
cmp
fstl
lods
and
xor
add
inc
mov
xchg
arpl
and
lahf
in
jle
mov
pop
fs
mov
shlb
dec
arpl
add
test
cwtl
adc
insb
into
cmp
stos
fsts
sahf
push
add
mov
push
mov
cmc
pop
ds
push
mov
jno
or
popa
xchg
xor
rcrl
ret
xchg
push
and
les
sbb
cmp
jge
and
lret
sub
cli
xchg
mov
fidivl
jnp
mov
negb
in
fstps
sti
dec
push
shr
addr16
pusha
movsl
lds
cmp
push
pop
cld
cmp
jle
pop
out
sub
add
std
inc
push
je
inc
mov
push
iret
xor
jg
les
mov
jg
or
or
jp
add
dec
and
punpckhwd
rol
inc
inc
fdivl
push
loope
xchg
fldt
int3
xchg
inc
mov
in
xor
adc
lods
icebp
test
out
jp
jecxz
fnsave
mov
ret
outsl
icebp
jne
lods
push
jecxz
data16
cmp
loope
in
idivb
in
xchg
loopne
mov
add
ret
insl
or
push
pop
inc
sub
jne
aaa
xchg
inc
inc
sti
adc
and
cwtl
inc
push
andb
movsb
daa
fsubr
je
sub
stos
xchg
imul
rclb
cwtl
inc
hlt
aaa
inc
subb
inc
ffree
imul
xor
mov
rorl
in
popf
dec
out
inc
push
mov
addr16
fiadds
mov
fnstenv
rcll
es
lea
lock
mov
inc
jbe
mov
pop
add
call
or
dec
mov
fists
stos
cmpsl
pop
fxtract
dec
add
addr16
pop
mov
lahf
jno
pop
roll
bound
rorb
mov
loopne
jp
jg
lds
out
pusha
inc
aam
pusha
push
aaa
call
movsl
mov
mov
imul
fwait
xor
pop
mov
clc
nop
loop
aam
fwait
add
jle
mov
mov
inc
adc
aam
add
cmc
call
push
adc
cmp
jmp
in
cmp
jno
or
lods
inc
fs
rclb
in
and
jmp
push
inc
je
in
test
fildl
test
je
loope
add
cmc
and
jge
out
inc
sahf
mov
adc
mov
aaa
mov
push
loope
inc
push
sbb
jo
mov
inc
sbb
mov
repz
xchg
ret
fistpll
or
ret
sbb
and
ja,pt
mov
aam
xor
mov
adc
cmp
mov
movsb
js
xchg
or
xchg
push
mov
jg
arpl
add
in
or
mov
push
outsl
shll
pop
cmp
aad
int
shlb
les
adc
xchg
loope
sbb
js
mov
cltd
data16
cmp
fsubrl
imul
sti
pop
scas
fsubs
add
loope
pop
outsb
mov
sbb
cmpsl
jge
fbstp
test
cmpsb
jle
xorb
mov
jbe
cwtl
std
ret
popa
mov
fstcw
xchg
jecxz
cmpsl
fwait
sti
mov
shlb
mov
push
or
fsubr
mov
stos
in
rcrl
xor
aaa
divl
std
mov
push
and
test
add
mov
inc
push
or
mov
and
dec
dec
add
jecxz
jb
xchg
shrl
cmpsb
dec
add
mov
in
and
outsl
sbbb
arpl
mov
repz
icebp
ds
and
fldcw
bound
and
cltd
or
shlb
cltd
ret
push
out
ret
push
out
mov
add
loope
jne
cmp
push
xchg
mov
repz
aas
push
mov
push
sub
cmp
test
dec
lock
mull
popf
stc
lahf
pshufw
cmp
and
lea
ss
cltd
and
mov
mov
movsl
loop
adc
ret
aas
pop
mov
cmp
movsb
in
rcl
or
jmp
dec
cmp
mov
mov
inc
fistps
dec
and
jnp
aas
cmpsb
mov
xchg
adc
adc
push
jno
add
inc
jmp
push
sbb
sub
or
rcr
pushl
dec
es
mov
add
sbb
jmp
pop
jb
sahf
mov
mov
cwtl
sub
ret
js
pop
stos
add
push
xor
lods
jecxz
fsts
rcl
add
jge
mov
pop
sbb
mov
and
inc
in
stos
js
icebp
aas
mov
inc
pop
dec
shrb
pop
or
into
pop
jmp
mov
in
cmp
jae
repnz
mov
cmp
dec
nop
lods
jge
mov
push
sbb
aad
xchg
inc
add
ljmp
lea
mov
add
lds
inc
jge
sti
aaa
mov
gs
decb
mov
mov
call
in
mov
out
push
in
enter
ret
pop
fwait
bnd
xor
sahf
add
testl
inc
shrl
or
jp
add
out
out
sub
call
push
movsb
dec
mov
adc
fucomip
push
xchg
shrl
mov
lods
mov
ds
lods
cmp
mov
push
popf
push
addr16
jne
sbb
mov
dec
xchg
outsb
notl
rclb
pop
and
cmp
int
call
xchg
daa
movd
je
insb
xor
add
pop
fistps
pop
outsl
sub
sub
cmp
pop
inc
data16
inc
in
pop
movsl
aas
xchg
push
insb
jb
push
mov
fcmovbe
mov
push
enter
fidivs
jne
scas
add
es
outsw
movsb
repnz
scas
sbb
push
imul
sqrtps
mov
test
pop
lock
xchg
sub
dec
call
loop
add
add
pop
lea
rcl
cld
mov
mov
dec
cmp
mov
xchg
insl
ret
jl
lahf
ficoms
mov
pop
popa
orl
lea
sti
lods
out
test
mov
nop
testb
push
mov
add
dec
mov
orb
adc
imul
pop
xor
sbb
outsl
rolb
test
push
in
jno
stc
mov
data16
std
xchg
mov
xchg
test
aaa
cmc
push
cli
rol
stc
inc
les
or
push
push
out
insl
jecxz
push
xchg
outsb
sbb
cwtl
jge
xchg
imul
lret
jg
jecxz
mov
push
cmpsb
lock
ljmp
mov
mulb
arpl
dec
in
add
lcall
pop
sub
xor
in
call
pop
jns
outsl
negl
push
sub
fiaddl
repnz
pop
stos
jmp
out
sub
test
sub
mov
sub
fwait
push
inc
mov
mov
sbb
imul
ss
sub
out
sub
in
test
mov
or
jno
push
lahf
push
cmpsb
or
je
stos
inc
test
xchg
jp
dec
leave
test
fdivrl
subb
mov
sub
lcall
cmpb
sti
outsb
jp
inc
inc
pusha
inc
loope
test
xorl
xor
loopne
pop
mov
int
sbb
or
divl
lock
lcall
cld
cltd
test
les
inc
sbb
xchg
and
sar
out
pop
push
pop
in
sub
ret
aam
pop
lods
popf
into
mov
cld
pop
xor
in
jmp
dec
loope
ljmp
pop
jno
mov
out
int
mov
movb
cmp
fsubl
cmp
cmp
sbbb
pop
pop
pushf
lods
inc
js
mov
push
ficompl
mov
pop
scas
jmp
push
mov
pop
xlat
mov
jle
outsb
sarb
pop
popa
sbb
lret
loope
mov
push
fwait
inc
lods
mov
inc
jne
test
push
jmp
imul
enter
adc
stc
aas
xchg
cwtl
push
and
inc
fiadds
adcl
add
or
adc
mov
loop
xor
jnp
stc
sub
rcrb
sub
and
or
dec
enter
xchg
sbb
cmp
jo
out
stos
inc
xchg
stos
push
rol
pop
fstpt
cmp
arpl
push
out
push
xchg
sub
sbb
dec
fwait
xor
push
and
imul
sub
jb
sub
aad
popa
xchg
rcrl
add
dec
iret
out
or
inc
jb
sub
pop
adcl
ror
in
sbb
aad
cmp
out
cmp
sub
dec
mov
mov
into
pop
fcoms
add
pop
in
rorl
push
movsb
aam
aad
popa
clc
lea
mov
jmp
jge
add
in
outsb
test
cltd
mov
jo
dec
ror
and
repz
xor
jmp
shrl
mov
dec
or
faddl
fucomi
cmp
push
out
xor
loop
or
inc
adc
or
test
sub
or
int
popf
shll
xorb
stc
jnp
adc
xchg
lods
mov
fistpl
push
cmp
xor
es
loope
adc
cltd
jp
inc
enter
push
push
xor
push
push
mov
add
pop
lret
and
jle
sbb
mov
dec
push
pop
bswap
aad
pop
push
inc
aam
fbstp
xor
stc
inc
outsl
and
outsl
xor
popf
imul
bndldx
lahf
inc
mov
lret
and
fs
mov
in
iret
jb
push
popa
scas
mov
imulb
andb
inc
out
xor
std
stos
sub
push
jecxz
loope
pop
mov
repnz
and
sub
xchg
dec
fildl
sbb
jne
sbb
pop
dec
in
push
inc
les
push
call
jle
xchg
rcll
outsb
iret
jae
shrb
popa
pop
lahf
sarb
bound
mov
loopne
jo
lcall
adc
jae
pop
push
and
push
pop
cmp
scas
call
sub
push
notb
and
in
ret
lods
dec
call
pop
mov
jle
jnp
pushf
push
cmp
sti
push
push
jle
mov
jl
add
push
push
data16
xchg
xchg
sbb
and
insl
out
xchg
scas
mov
adc
inc
adc
fnstenv
and
stos
das
rol
pusha
mov
push
aam
pop
icebp
jae
mov
xchg
js
mov
sarl
adc
fistl
dec
xor
stc
cmp
pop
and
inc
jmp
mov
pop
shrb
ss
sbb
and
addr16
scas
mov
jecxz
cmpl
add
sbb
push
leave
mov
cld
sti
incb
mov
pop
daa
mov
cmp
outsb
pop
aaa
jo
mov
push
xchg
test
xchg
jbe
cmp
sbb
int
outsl
push
stc
push
std
mov
aas
and
cmp
cmp
dec
loop
andb
add
cmp
cmp
int
andb
movsb
bound
and
out
mov
loopne
xor
hlt
test
xchg
outsl
sub
xchg
pop
cmp
movsb
ret
cmp
cmc
rcrb
addb
jns
adc
adc
daa
sti
ds
add
and
lret
cld
jne
dec
cmpsl
mov
fisubs
push
lock
jle
cmp
push
push
nop
lods
jecxz
dec
push
mov
lret
popa
sarb
ficompl
out
mov
clc
out
push
mov
jnp
inc
xchg
sub
push
sbb
mov
ss
stc
jp
push
in
adc
ds
cld
cmp
cs
sub
repnz
es
push
mov
and
daa
ss
fisubl
adc
imul
cltd
je
push
cmp
stos
imul
ret
xchg
sub
fnstenv
push
pop
mov
cmp
dec
icebp
cmp
add
add
daa
jne
aas
mov
jns
mov
daa
sbb
pop
jg
test
cltd
stos
faddp
pop
rcr
int3
xor
lret
xchg
jne
jecxz
hlt
lret
pop
cmp
inc
pushf
pushf
scas
cmp
inc
loopne
and
jnp
push
mov
add
popa
inc
insb
inc
out
mov
jno
sbb
xor
mov
adc
mov
fnstsw
in
leave
int
repz
push
push
movsb
sub
cs
cli
test
lock
mov
mov
gs
mov
push
out
sub
btc
or
out
dec
dec
xchg
sub
jp
jg
sub
pop
test
push
imul
pop
mov
sbb
shll
adc
mov
fisttps
fidivs
sbb
fiadds
fbstp
insl
pushf
je
or
daa
clc
pop
cmp
sbb
mov
out
or
popf
ss
mov
pop
fs
inc
fisttps
out
and
mov
add
sahf
and
aad
js
ljmp
jg
and
mov
lods
xchg
xor
loope
or
push
cmpsl
jl
and
push
movsl
fs
lcall
inc
cltd
fcmovnb
mov
cli
dec
nop
daa
repnz
mov
arpl
mov
add
add
cltd
adc
and
popf
int
sub
jg
lods
jg
out
mov
call
sub
xor
push
sub
xchg
and
popf
push
mov
fcompl
mov
sbb
or
mov
add
mov
aaa
add
mov
inc
pop
cmc
xor
cwtl
adcl
xor
or
dec
in
in
mov
cmp
imul
imul
jp
inc
and
cltd
xlat
dec
pop
mov
pop
scas
push
pop
mov
xor
or
iret
into
jae
test
imul
inc
loope
test
cwtl
xchg
add
mov
push
sahf
sub
inc
in
and
fdivs
mov
jp
flds
mov
aam
out
mov
or
pusha
in
mov
fildl
popf
iret
jno
pop
sahf
xor
loopne
cmp
mov
lods
inc
mov
pop
mov
clc
mov
xchg
imul
hlt
fs
lret
inc
flds
xorl
lods
dec
in
outsb
sbb
mov
cmp
and
xor
sbb
outsl
bound
adc
repnz
add
xor
es
rcll
mov
stos
pop
out
loop
add
cmp
push
mov
aaa
clc
pop
out
pop
cmpsl
push
scas
lods
cmc
test
aaa
inc
loop
jns
fldcw
loope
stc
sub
movl
int3
popa
into
mov
cmp
xchg
int3
gs
push
mov
sub
jno
lcall
jmp
mov
xchg
hlt
pop
jbe
fsubl
add
xor
xor
push
or
fs
outsl
mov
jecxz
mulb
mov
xchg
loop
mov
xchg
xor
es
sarl
mov
mov
popf
sub
in
bound
shlb
je
call
enter
push
or
clc
pop
mov
clc
pop
xor
ds
movsl
outsl
pop
aaa
pop
sbb
cld
pop
dec
add
mulps
sub
popa
lea
mov
lahf
xor
mov
jecxz
aam
test
sub
test
or
aaa
enter
jb
add
lds
adc
daa
mov
xchg
push
inc
jecxz
mov
out
popa
jmp
addl
mov
out
mov
adc
pop
testl
sub
nop
push
or
fwait
cltd
nop
cltd
xor
into
imul
adc
sbb
push
clc
pop
stc
sti
lcall
insl
lds
imul
popf
push
cmc
mov
lock
mov
inc
cmpsl
rcrl
out
inc
test
dec
mov
jne
ficompl
stos
dec
sub
mov
shrb
push
and
fsts
aas
and
aad
iret
insb
and
popf
out
adc
sub
cli
cmpl
data16
xor
xchg
popa
pop
xchg
icebp
movsl
pop
cltd
xor
push
or
sub
movsl
add
aaa
cwtl
adc
mov
outsl
mov
mov
mov
pop
adc
lods
int3
and
add
xchg
sbb
push
in
pop
pop
lret
icebp
inc
cwtl
cmpsl
lods
sub
hlt
pop
mov
jmp
or
pop
sub
loope
sub
sbb
cmpl
pop
mov
inc
test
xchg
inc
inc
push
in
cmpsb
xchg
cli
sbb
xor
mov
jb
outsb
push
out
lahf
stc
push
fstpt
in
stos
jmp
xlat
or
xor
cmp
lods
and
or
scas
push
lret
imul
jp
mov
and
fidivl
loope
jno
shrl
xor
jl
jecxz
scas
cmp
insb
add
je
jmp
adc
jmp
negb
jle
mov
jnp
jl
xchg
and
xchg
xchg
sbb
xorl
call
or
sahf
adc
test
int3
mov
jo
cmp
xchg
sub
scas
movsl
mov
test
andb
outsl
push
mov
mov
call
add
mov
mov
and
push
pop
add
out
xor
adc
cmp
test
xor
daa
aaa
mov
mov
in
adc
je
xor
xor
shrb
in
mov
les
xchg
inc
dec
and
mov
push
push
stos
xlat
sub
dec
dec
movsl
icebp
dec
inc
sbbl
imul
cmp
sub
mov
ljmp
sub
dec
idivb
shrb
inc
pushf
add
mov
mov
push
adc
dec
ds
push
fiadds
mov
jae
pop
adc
aas
sbb
mov
and
jne
es
lock
in
enter
sub
in
stos
inc
repnz
scas
pop
xor
push
popf
movsl
sahf
push
repz
lock
in
fnsave
iret
int
mov
fwait
push
out
and
mov
lods
adc
push
or
inc
fstl
jno
sti
mov
insb
cmp
aaa
aaa
push
xchg
cld
sub
push
mov
and
data16
test
hlt
add
cltd
std
js
cltd
in
push
and
adc
push
xor
je
cmp
arpl
fs
jb
pop
mov
ljmp
jmp
fsubrs
cmp
lcall
jne
and
fsubrs
clc
dec
test
mov
lods
fs
mov
jae
or
imul
or
dec
jne
cmp
cmp
insl
dec
adc
dec
test
sub
dec
orb
ljmp
xor
out
sub
cmp
stos
add
addl
ljmp
push
jo
xlat
or
xor
inc
js
pop
pop
mov
les
pop
outsl
repnz
dec
in
decl
bound
mov
mov
xlat
adcl
push
jb
out
xchg
dec
aam
cld
lcall
push
jno
insl
icebp
nop
outsb
add
out
test
cwtl
xor
mov
push
cltd
mov
popf
mov
outsb
in
xchg
add
jmp
adc
rcrl
test
sub
push
mov
ret
pop
popa
repz
aas
sub
sub
inc
arpl
add
dec
inc
sahf
push
inc
out
cmp
jmp
xor
jbe
sub
jge
popf
stc
push
dec
je
test
fbstp
sbb
add
sub
push
cs
jne
das
arpl
and
cmp
pop
dec
fisubs
test
hlt
jg
dec
or
jge
inc
aas
adc
fidivs
daa
aad
push
mov
inc
pop
inc
mov
mov
pop
inc
rorb
out
rcrl
adc
aad
lods
pop
pop
cmpsl
mov
or
dec
es
loope
xor
inc
inc
test
push
popf
dec
pop
adc
pop
js
clc
sbb
xchg
mov
rcl
jno
mov
lock
lret
jne
in
rol
inc
movsl
ja
jl
pop
xchg
sub
dec
mov
dec
sbb
in
adc
dec
mov
cmp
inc
aas
fcomps
lret
out
add
rcrb
pop
xchg
into
insb
mov
ja
fsubrl
bound
outsb
sbb
int
movsb
cmp
lock
fdivs
mov
mov
ret
or
push
inc
jp
loope
fsubs
out
pop
xor
subb
stc
xchg
sbb
mov
sbb
popf
sub
inc
jecxz
stc
xchg
xchg
mov
push
sub
fldl
rcrl
sbb
xchg
sub
sbb
inc
xchg
mov
sbb
adc
mov
mov
test
jg
aas
mov
or
repnz
sub
inc
cwtl
and
xchg
dec
roll
mov
or
test
fcoms
dec
xchg
shlb
push
gs
xor
test
scas
xor
jmp
aaa
cs
orb
add
mov
inc
out
cmc
push
cltd
test
sti
add
push
push
int3
push
or
pop
dec
out
mov
lahf
in
in
jecxz
es
cmp
xchg
js
ljmp
sbb
xchg
add
jbe
ss
cwtl
shl
push
movsb
fcom
mov
jl
and
jl
jge
das
jmp
xor
nop
push
or
inc
in
pop
das
dec
push
je
pop
cmp
sub
js
mov
repnz
pop
cwtl
das
mov
sub
xchg
pushf
xor
jmp
jae
fwait
or
mov
cmpsl
mov
sbb
and
lock
fucomi
in
ja
stos
loope
jmp
divl
mov
and
push
pop
xchg
int3
shll
push
out
dec
imul
mov
push
lret
push
jmp
sbb
sbb
fldpi
outsb
pop
hlt
push
jg
inc
push
insl
dec
movsl
cld
cld
lcall
fcmovnb
cmpsl
dec
adc
arpl
bound
popf
scas
cmp
add
mov
test
insl
shlb
mov
fcmovnbe
aaa
mov
fsub
or
loop
jno
outsb
repnz
mov
stos
sbb
icebp
mov
mov
sub
mov
xlat
jecxz
xlat
push
fcomps
js
mov
out
xchg
mov
adc
xor
mov
mov
push
mov
cs
jae
adc
push
pop
sbb
inc
mov
pusha
or
push
sbb
out
sbb
ljmp
fidivrl
pop
mov
cli
xchg
ret
sub
add
jle
testb
xor
pop
imul
jmp
fldenv
jp
iret
cli
push
rcrl
sub
popf
inc
testb
add
lods
insb
divl
jbe
jge
push
mov
add
inc
das
cmpsb
push
cmp
pusha
test
jbe
sub
jns
jmp
mov
push
loopne
mov
dec
lock
test
hlt
sub
pop
mov
inc
ss
loopne
or
jb
xchg
add
mov
xor
into
jle
mov
lahf
push
jne
inc
xor
xlat
test
cmc
les
add
mov
or
push
out
sbb
movsl
mov
outsl
das
dec
xor
jmp
and
in
sub
push
std
cmp
jbe
mov
rclb
sub
or
ret
das
mov
sub
pop
jo
jp
mov
cmpsb
lcall
mov
decb
loope
popa
push
hlt
push
loope
cmp
out
push
sub
xchg
pop
push
inc
fnsave
mov
dec
mov
mov
imul
insb
repnz
cwtl
dec
adc
lret
shr
push
sub
mov
xor
and
cmp
jnp
add
popf
arpl
mov
sub
push
sbb
cmp
mov
push
shll
popl
nop
insb
negl
sub
subl
cli
pop
cld
pop
mov
xlat
cltd
and
cmp
std
cmpsb
sub
pop
sbb
loop
ja,pn
add
and
jne
insb
cmpsl
clc
aaa
aam
mov
mov
out
sbb
lds
lret
jge
sub
jns
or
cli
dec
sbb
cmpsb
shll
int
out
scas
adc
jns
stc
ret
pusha
xchg
pop
lea
and
mov
sbb
push
or
montmul
insb
mov
sbb
sub
mov
inc
pop
int3
arpl
outsl
daa
lret
mov
notb
jle
enter
mov
pop
mov
sub
xchg
cmp
xchg
sub
add
adc
inc
int3
arpl
xchg
imul
push
lods
cmp
in
cld
xchg
adc
sbb
clc
loop
pusha
add
mov
negl
inc
std
nop
testb
dec
add
push
cltd
ret
push
fwait
sbb
pop
shl
mov
sbbl
out
stc
cmpsb
jge
adc
ret
sti
mov
into
xchg
mov
xorl
xchg
shl
xlat
pop
arpl
in
dec
sbb
adc
push
push
mov
mov
xchg
fsts
clc
sub
pop
imul
sbb
cld
pushf
outsl
mov
std
push
add
pusha
fistpl
fstl
push
stc
stos
inc
fidivs
dec
subb
mov
or
add
sub
repz
inc
sbb
fadd
jp
jbe
inc
mov
sahf
arpl
xor
lods
and
mov
mov
shl
cmpl
mov
test
filds
sbb
jbe
pop
adcb
cmc
mov
insl
jp
sti
push
jo
hlt
pop
xchg
inc
and
add
mov
lds
clc
push
idivl
push
xor
pop
push
push
mov
lret
lahf
aad
iret
sti
sbb
adc
outsb
adc
inc
in
inc
in
fistl
cmp
adc
or
mov
xchg
cli
adc
rcrl
outsl
push
mov
jle
lret
jg
xor
in
lcall
xor
gs
jmp
push
int3
out
jb
adc
mov
jo
sub
jnp
adc
inc
mov
cmp
cld
lret
mov
das
gs
divb
adc
movsl
sar
nop
add
and
mov
pop
sti
rorb
jle
call
pop
in
rcrb
mov
andb
incb
sub
and
test
pop
shll
pop
iret
sti
mov
insl
bound
cmp
or
add
ljmp
or
mov
xchg
sub
stc
popa
xchg
pop
and
sub
xor
loop
sahf
fcmove
ret
addr16
mov
mov
aad
and
jae
das
adc
sti
adc
push
push
pop
dec
lods
xchg
pop
ja
lock
stos
mov
mov
test
mov
fildll
std
xchg
icebp
xchg
mov
adc
pop
or
adc
adc
push
into
add
movsl
adcb
sub
mov
fdivr
sub
icebp
stos
aad
sbb
fmull
fimuls
lods
es
mov
dec
icebp
int3
subl
outsl
mov
sub
jg
dec
inc
cli
mov
in
mov
inc
push
outsl
xchg
mov
insl
leave
sbb
iret
inc
les
cmp
std
push
pop
sbb
lret
pop
sub
push
dec
pop
or
mov
or
lcall
or
rcll
cli
jge
dec
dec
cld
mov
cltd
enter
lods
fwait
push
or
mov
sbb
pop
sub
push
adc
cld
add
push
inc
pop
sarb
adc
jge
xor
mov
sahf
sbb
push
pop
adc
xchg
out
add
sub
cwtl
cmp
ret
add
pop
mov
test
and
jge
push
xchg
mov
faddl
cmp
and
aaa
arpl
xor
dec
lds
mov
jae
cmpsb
pop
pop
popa
fmull
test
mov
pop
jne
add
xor
icebp
std
addl
sbb
ret
mov
jo
pop
cmp
or
xor
jne
rorl
jle
push
out
jnp
mov
inc
rcl
cli
mov
ljmp
rcll
iret
fnstenv
jmp
or
mov
dec
pop
sbb
out
inc
mov
mov
pop
jae
mov
pop
cwtl
sbb
pop
mov
shrb
sbb
cmp
jnp
mov
test
lds
enter
jecxz
mov
imul
rcll
call
or
or
jp
cmp
leave
xor
sbb
enter
pop
xchg
sub
notl
int3
arpl
aad
cmp
ljmp
pop
pop
outsb
sub
mov
push
mov
icebp
dec
das
test
call
insl
out
pushf
repnz
inc
out
xchg
adc
or
xor
xor
ret
mov
int3
sub
fidivs
cmp
imul
cli
inc
xchg
es
fadds
notb
flds
mov
mov
mov
adc
ror
in
aam
push
popf
sbb
add
pop
lock
hlt
in
movsb
and
jle
loopne
mov
push
in
imul
dec
insl
stc
mov
adc
sbbb
cmpxchg
jecxz,pt
add
ljmp
in
mov
adc
sbb
jbe
push
andl
sahf
add
jl
rcrb
cmp
imul
mov
adc
mov
fadd
daa
fwait
cmpsl
pop
out
test
popf
push
xlat
icebp
push
lcall
inc
add
xor
cmpl
or
hlt
push
sbb
orl
movsl
data16
cs
leave
inc
std
and
mov
mov
xchg
cmp
je
call
int
fscale
stos
mov
and
mov
or
sbb
jno
icebp
or
popl
sbb
adc
xchg
push
xchg
pop
es
popa
fmull
sbb
fninit
dec
mov
jb
cmp
sub
hlt
xchg
jl
and
push
cltd
ds
mov
cmpsb
fcomip
or
and
sub
inc
push
jge
orb
fsincos
sub
mov
mov
dec
movsl
cmp
adc
xchg
imul
sbb
cmp
push
mov
mov
fs
fisttpll
iret
frstor
pop
fisubrl
scas
dec
cmp
cmp
jno
pushf
mov
sbb
jbe,pt
add
sarb
dec
sahf
and
and
sti
mov
push
rcrb
sarl
add
lcall
cmpl
aaa
mov
mov
inc
push
add
jnp
pushl
adc
add
pop
scas
lods
mov
push
enter
pop
fwait
popa
xlat
xor
cmp
js
pushf
sbb
or
push
dec
xorb
dec
sub
mov
in
sbb
loope
lcall
sbb
push
jle
rcrb
in
mov
in
repz
sbb
jp
cmc
xchg
mov
or
imul
repnz
mov
ficompl
hlt
inc
lret
cwtl
cmpsb
stc
dec
mov
cmp
imul
sbb
mov
arpl
lods
shl
inc
fistpll
pop
sahf
in
dec
lret
in
sub
xchg
add
dec
sbb
rclb
pop
ss
rcr
fmull
jecxz
jge
add
cmp
or
cmp
cmpsb
cmc
dec
sbb
pop
inc
cmp
pop
fwait
adc
dec
cli
out
xchg
pop
mov
cltd
js
orb
and
push
inc
imul
mov
cmp
lret
mov
add
mov
sbb
inc
lahf
popa
std
xor
sbb
out
pop
lods
inc
mov
jg
adc
push
cmc
stos
pop
or
rcl
jbe
test
xchg
mov
jnp
cmp
push
sub
repz
mov
xor
mov
push
data16
cli
in
test
sbb
xchg
movsb
mov
je
add
test
in
aas
xor
lahf
xor
ja
fucomp
ds
xor
loope
in
and
xchg
jne
ja
and
xor
push
or
sub
push
imul
jp
xchg
mov
xor
lcall
mov
mov
int3
in
out
dec
jnp
mov
xchg
call
popa
std
dec
sbb
xor
fs
shll
dec
movq
xchg
lock
inc
inc
mov
cmpsl
pop
push
jne
jl
loope
loope
stos
call
add
dec
sub
hlt
test
sbb
pop
imul
sub
dec
dec
dec
repnz
insb
lds
je
enter
movhps
jl
daa
test
add
orb
pop
xchg
mov
aam
daa
leave
adc
clc
jns
out
lods
lods
cmpsb
cmp
pop
lahf
ss
daa
pop
icebp
fadd
mov
mov
inc
mov
and
push
add
xchg
mov
loop
add
mov
adc
dec
jmp
lods
lds
loop
pop
out
lret
push
inc
push
mov
mov
jae
cmp
mov
sbb
in
push
pop
mov
jg
xchg
jnp
dec
inc
sbb
dec
rol
mov
pop
dec
xor
cmp
dec
mov
jo
mov
rcrb
jp
loope
adc
inc
int3
jns
mov
xchg
sbb
push
add
call
or
cltd
xchg
pop
in
sbb
pop
cli
mov
xor
movsb
jmp
es
push
jo
mov
jecxz
and
jo
xchg
lcall
popa
inc
cmp
add
loope
cmp
icebp
leave
mov
mov
dec
bound
enter
push
xor
inc
fwait
ss
sub
fs
mov
xor
and
int
stc
pushf
and
inc
adc
test
ljmp
xchg
cmp
sbb
dec
jmp
adc
mov
daa
mov
stos
in
jp
mov
notb
mov
push
mov
ljmp
jae
push
lock
cmp
add
push
out
sub
testb
hlt
push
xchg
push
sub
lock
add
lea
das
xchg
xor
fmul
and
bound
lods
mov
int3
xor
fsubrl
stos
jae
push
testb
ss
stos
jne
lret
mov
lahf
sar
mov
out
or
sbbb
mov
jbe
push
in
lock
jb
ljmp
xor
pop
fwait
xchg
sti
dec
mov
insl
test
jg
push
fsts
call
push
stc
pop
cmpb
or
stos
in
push
rcrl
sbbb
cmp
cmp
adc
mov
mov
bound
popf
outsl
jb
mov
pop
or
lds
lods
inc
test
rorl
bound
mov
fstps
dec
movsl
out
dec
out
push
nop
mov
add
fdiv
cmp
xchg
fwait
sub
xor
outsb
les
push
fdivl
mov
daa
adc
movsl
fiadds
sbb
addr16
faddp
jb
mov
in
out
dec
stos
sti
lea
adc
and
fldl
popf
mov
std
fs
mov
sets
lcall
mov
cmp
js
xchg
and
sbb
cmp
fdivl
xchg
mov
mov
sti
cmp
ror
inc
pop
pop
fsubr
or
dec
xor
mov
adc
stc
push
dec
mov
jge
cmc
fsubl
mov
mov
xchg
fs
jae
cmp
lret
mov
add
imul
popf
stos
outsb
cmpsb
inc
mov
pusha
dec
call
pop
jmp
xchg
jb
jecxz
lock
ficomps
cmc
and
sbbb
lea
dec
ret
sahf
adc
inc
mov
call
inc
xor
mov
mov
dec
in
mov
int
rorl
push
fidivl
jns
pop
stos
mov
call
adcl
movsl
fcomip
inc
call
bnd
incb
sbb
sbb
cmpsl
lods
ja
cmp
push
out
sti
insb
mov
and
and
insb
div
add
sub
mov
testl
negl
out
sub
push
jne
xchg
mov
inc
nop
inc
inc
ret
and
pop
push
repnz
out
loop
inc
add
cli
sarl
lret
cmpsl
sub
and
mov
fsubr
mov
push
loope,pt
inc
push
mov
xchg
sahf
sub
int3
sbb
adc
or
xor
mov
push
fidivrl
mov
cmp
push
imul
dec
mov
movsl
xchg
lcall
inc
cmp
cmpsl
ds
adc
push
push
sub
inc
iret
and
jae
fnsave
mov
mov
rcrl
mov
in
pop
add
jno
cmp
sarl
or
fdivl
inc
dec
test
inc
or
xchg
sbb
scas
mov
out
sbb
mov
repz
xchg
aam
jecxz
jecxz
arpl
es
subl
or
push
cmp
inc
lods
mov
pop
inc
clc
dec
inc
out
movsl
cmp
adc
je
in
or
adc
add
jno
pop
int
scas
sub
xor
mov
loop
aad
or
cli
imul
xor
mov
push
cli
imul
shlb
or
inc
pop
outsb
jge
ficoms
xchg
and
stc
push
mov
inc
push
sti
xchg
pop
cltd
pushf
and
inc
xchg
lods
push
icebp
std
cmp
cmp
mov
mov
pusha
ss
xchg
mov
push
mov
pop
mov
and
in
inc
popa
jp
push
fs
xor
test
mov
es
sbb
outsb
cld
mov
xor
inc
cmp
arpl
jle
jl
pop
inc
push
push
movsb
bound
xchg
aas
lods
add
popa
sub
and
shrb
cmp
addr16
stos
faddp
loopne
pop
jle
xor
das
mov
lods
pop
rcll
pop
fidivrs
cs
or
mov
cmpsb
xor
ja
aam
sbb
cmpl
dec
fucomip
xor
movsb
push
xor
jge
test
jne
xor
pop
out
call
ret
pop
dec
adc
loope
cmp
movsl
inc
xchg
sbb
repnz
add
in
xchg
fbld
jb
sbb
pop
mov
add
popa
les
aaa
dec
lock
jmp
add
push
imul
mov
rcll
xchg
mov
addr16
movsl
inc
lods
and
hlt
es
subb
fdivs
xchg
or
aam
testl
pusha
aad
xchg
imul
pop
mov
push
aas
mov
clc
inc
hlt
inc
je
dec
mov
bound
pop
cmp
mov
out
movsl
inc
pop
jecxz
cmp
call
add
xchg
out
clc
add
sub
dec
push
repz
add
mov
or
gs
mov
mov
arpl
cmp
mov
das
bound
push
and
test
mov
ficomps
inc
ficomps
sub
aam
mov
jnp
nop
fcompl
cli
aad
icebp
ret
test
ljmp
mov
lds
and
frstor
mul
mov
repnz
jp
lcall
mov
into
gs
out
or
bound
push
add
pushf
hlt
dec
adc
mov
mov
sub
in
mov
lret
cmc
repz
pop
sbb
or
inc
push
lcall
jae
xor
lods
adc
mov
mov
mov
push
leave
loope
push
adc
lret
idivl
jo
jbe
mov
gs
in
inc
add
lcall
push
addr16
xor
cmpsl
jle
inc
clc
fwait
cmp
sbbl
xor
cmp
imul
subl
hlt
shl
cmpsl
jno
mov
call
clc
in
jne
leave
push
mov
daa
adc
mov
inc
jo
hlt
ja
adc
jns
lcall
test
out
int3
xchg
pop
mov
add
lcall
pop
loope
es
add
arpl
repnz
push
cmp
push
mov
dec
aad
adc
sbb
shrb
jb
data16
out
cmpsl
imul
mov
pop
fbstp
les
jle
fbstp
iret
out
dec
outsb
aad
movsl
cmc
mov
xor
shll
adc
scas
fbstp
push
es
dec
cmpsl
je
or
js
pop
mov
int
cmpl
jl
fnsave
out
cmp
sub
mov
dec
inc
or
cmp
push
out
in
test
into
dec
sbbb
lahf
arpl
jecxz
add
shrb
dec
pop
popf
arpl
call
ds
in
loop
lock
push
adc
mov
xor
mov
jb
and
test
jb
sbb
mov
mov
xlat
sysenter
incb
xchg
pop
dec
cli
adc
inc
divl
cmp
movb
data16
aas
pop
dec
cmp
shl
push
pop
sbb
sbb
push
adc
leave
cs
xor
or
nop
sub
scas
xchg
lcall
popa
pushf
std
cmp
jmp
arpl
scas
scas
flds
and
push
lahf
jnp
jno
lret
cli
push
push
fstpt
sbbb
test
lods
in
dec
hlt
arpl
insb
mov
jbe
fmull
or
jl
push
pop
xchg
mov
push
push
mov
mov
dec
test
aad
mov
sbb
mov
adc
mov
jns
cmp
popf
push
pop
pop
out
jle
stc
scas
psrad
cwtl
cmp
sarl
sub
xor
sbb
pop
lods
out
out
leave
cmp
fists
push
stos
hlt
cmpsl
adc
jae
shl
adc
xor
xor
outsl
jle
xchg
pop
lret
lds
addr16
mov
cmp
xlat
jmp
sahf
sub
leave
mov
imul
mov
and
movsl
or
les
sbb
in
and
push
mov
dec
data16
push
mov
cltd
adc
fld1
call
arpl
inc
test
scas
das
enter
inc
cs
xor
dec
fldt
or
adc
repnz
dec
ljmp
mov
mov
add
jo
cmp
pushl
push
test
adc
dec
inc
sbb
leave
out
pop
adc
cmpsb
cmc
cmpsb
xor
es
or
test
xchg
and
mov
fldl
add
xchg
inc
jmp
hlt
cmp
sub
mov
add
fwait
aaa
jle
movsl
cmpsb
repnz
sbb
sbb
aad
mov
pop
push
out
sarl
lahf
clc
sbb
add
out
mov
in
and
jns
loope
push
push
sub
lret
adc
sbb
cmp
pop
aad
push
push
dec
cmc
push
das
push
and
call
mov
arpl
xchg
lea
sbb
jne
sbb
lds
cmpsb
dec
mov
aaa
ret
fidivrl
mov
jl
xlat
mov
outsl
inc
fwait
xlat
cmp
scas
loop
and
jge
cmpsl
mov
loope
out
push
daa
fmull
dec
in
xchg
loope
insl
insb
rclb
movsl
inc
mov
rcrl
test
mov
data16
lods
adcb
dec
jnp
out
add
rcl
addr16
outsl
jle
fsubr
testl
sub
sub
outsb
sbb
lods
inc
insb
fildll
add
sti
pop
push
add
push
dec
xor
dec
icebp
jecxz
scas
ficomps
repnz
jb
ret
pop
aaa
xchg
mov
std
dec
mov
push
xchg
inc
cli
push
add
sub
clc
push
mov
lds
cmp
pop
adc
bound
sar
sub
mov
jno
xor
add
mov
mov
cmp
nop
push
sub
dec
movsb
gs
fwait
ljmp
dec
lds
jns
outsl
adcl
shrl
or
das
xchg
movsb
sub
push
jne
sub
daa
hlt
mov
imul
xor
push
push
push
and
daa
aas
out
andl
scas
fiaddl
pop
push
ja
mov
jo
into
iret
inc
mov
adc
loope
dec
loope
or
scas
xchg
insl
or
xor
sbb
jg
sub
dec
inc
or
adc
test
lds
cs
or
cld
lcall
xor
jle
mov
aaa
stos
cmpsb
pop
ss
mov
or
xchg
lock
mov
aaa
jle
push
test
adc
mov
imul
pop
push
out
into
fiaddl
mov
imul
or
je
cmpsb
sbb
sbb
movsb
cld
xchg
cmpsl
lock
loop
movsl
out
cli
repnz
sbb
cmp
mov
fdiv
sub
mov
loop
push
testl
je
test
in
ret
outsl
xor
insl
dec
jns
rol
outsl
adc
mov
sarb
adc
xor
hlt
push
addr16
xchg
and
inc
sbb
stos
cmc
aam
rep
mov
je
inc
cmpsl
js
xlat
stos
arpl
das
dec
xor
sti
inc
cltd
in
sub
push
mov
mov
cmp
ret
pop
cmp
jae
jno
sub
hlt
push
fwait
jns
jno
mov
sub
sbb
dec
std
cltd
dec
loopne
add
mov
sbb
cli
sub
fs
pop
loop
iret
hlt
jmp
imul
stos
jmp
cltd
out
aaa
stc
xchg
xchg
bound
fistpll
pop
cmpsl
rcrl
leave
xchg
sbb
imul
sub
imul
mov
pop
sahf
mov
mov
popf
jg
jge
in
imul
mov
std
loop
pusha
adc
shll
fs
in
inc
test
jmp
or
out
add
xor
and
fiadds
leave
push
or
and
fists
ljmp
arpl
mov
jns
and
jle
sbb
mov
cmp
jg
cltd
adc
lret
mov
aam
mov
fisubl
push
int
mov
sbb
ret
hlt
and
adc
jb
mov
jae
mov
mov
adc
xchg
dec
mov
cmp
lahf
clc
push
inc
fwait
outsl
sbb
mov
or
fs
ljmp
cld
mov
frstor
je
movsb
mov
cwtl
dec
mov
xchg
mov
enter
sbb
xchg
cmpsl
dec
aaa
fnstenv
test
loop
mov
cmp
xsha256
cmpsb
push
rolb
add
dec
pusha
mov
lds
das
mov
mov
je
xchg
xchg
xor
jns
inc
jl
inc
stos
cmpsb
cwtl
sub
adc
push
inc
mov
ss
xchg
mov
mov
cmpsl
ds
sub
ret
adc
lds
pop
dec
mov
pop
ljmp
sbb
aad
and
sbbb
jmp
mov
movsb
fstpl
pop
add
xor
sbb
out
les
xor
fisttps
cmc
push
cmc
mov
in
div
mov
imul
mov
divl
scas
push
js
xchg
pop
mov
cmp
inc
sub
cmp
movsl
jb
and
and
xchg
mov
enter
popf
fs
gs
iret
jecxz
addr16
repnz
outsl
mov
push
testl
add
fstpl
out
pop
jg
cmp
iret
sub
pop
sahf
sbb
shlb
and
into
lea
lfs
and
gs
push
or
ja
mov
insb
rorl
fstps
loope
cmp
cmp
pop
mov
cmp
xchg
pop
xchg
inc
les
mulb
cmc
mov
push
mov
sarb
mov
pop
dec
leave
sbb
fs
inc
lea
clc
loopne
lea
mov
out
mov
ret
jbe
pop
sub
pop
jle
add
sti
pop
push
mov
adc
prefetch
xor
add
aaa
aaa
pop
rol
dec
clc
loope
inc
sti
pop
or
adc
add
push
and
pop
lods
jns
repz
dec
cmpsl
cmp
jne
les
and
scas
loop
jmp
pop
mov
fdivl
roll
imul
das
addr16
push
xor
jno
dec
in
cmpb
cmp
xchg
bound
cmp
pop
ljmp
adc
or
fnstcw
and
aas
inc
sbb
jb
repz
jl
mov
cmpsl
test
addr16
push
stos
and
jb
shrb
mov
fisubl
pop
scas
dec
sub
adc
shll
push
jmp
jp
dec
fisttpl
aaa
mov
and
lret
data16
mov
loopne
icebp
adc
std
outsw
sti
xchg
jo
test
insb
xchg
sbb
jne
aaa
jbe
jb
add
or
int
pushl
bound
nop
adc
xchg
push
mov
push
and
sub
loop
pushf
icebp
adc
cld
sbb
add
xchg
xchg
xor
inc
int
loope
cld
or
mov
push
jp
popa
ret
fisttpl
add
mov
fstl
push
int3
sbb
aaa
fs
in
lock
loopne
sbb
sbb
movsb
jecxz
fnsave
inc
jecxz
or
cltd
xor
pusha
idivl
push
mov
push
sub
adc
aas
push
int
repnz
mov
cmp
jle
out
jb
cmpsb
fwait
and
fisubs
movsl
ret
pop
mov
out
jnp
jnp
mov
mov
mov
sti
les
add
cmp
lret
out
jnp
xchg
add
or
loop
sbb
aad
xchg
add
push
cmp
sub
inc
scas
pop
out
in
daa
loop
mov
in
addr16
sub
dec
loopne
dec
das
out
xor
pop
int3
aad
cmc
data16
and
mov
xchg
mov
imul
fldt
mov
lock
aad
cmpsl
inc
jge
fadd
push
and
dec
dec
add
mov
push
lea
pop
sub
xchg
hlt
cltd
xchg
movsb
xchg
mov
and
add
stos
mov
loope
in
xlat
sub
pop
movsb
add
jecxz
xchg
ficoms
sub
test
jae
pop
fdivrl
ss
fsubrp
jle,pn
iret
pop
dec
ss
mov
ljmp
jns
test
pop
and
iret
jae
hlt
push
cld
pop
push
lcall
inc
fisubs
mov
fldcw
jbe
add
repnz
mov
or
cmpsb
mov
aam
lcall
ffree
sti
dec
mov
out
or
mov
fidivrs
shlb
mov
sub
inc
fucomi
pop
ljmp
sbb
mov
shll
mov
push
push
push
jmp
jbe
jmp
pop
cmp
sub
xchg
repnz
shrl
repnz
inc
lods
sbb
enter
addr16
repnz
fisubl
fwait
adc
jbe
jge
pop
vcvtps2dq
je
jae
subl
aad
xchg
add
scas
push
movsl
ffreep
fstpt
xor
es
les
xor
rcll
xchg
adc
stc
sbb
inc
stc
sub
data16
scas
push
and
jae
repnz
lods
pop
dec
shll
filds
loop
xchg
sbb
jge
mull
add
pop
xchg
lods
rcrb
scas
ud0
mov
xor
lret
into
orl
and
into
lahf
ds
mov
addr16
cwtl
push
loopne
movsb
sbb
fimuls
jnp
xor
lret
sti
call
mov
sahf
aaa
in
jl
mov
and
sub
cmp
cmp
adc
int
ja
cmp
cmc
aam
pop
jmp
pop
cmc
push
jb
adc
push
stos
xchg
fsubrs
into
xor
pop
push
in
daa
test
in
mov
jmp
movl
inc
or
sbb
ss
cli
push
adcl
ljmp
xor
xlat
cmp
jle
or
idivb
leave
pop
jae
stos
mov
popa
mov
dec
test
scas
mov
popa
xchg
or
ds
outsb
mov
pop
out
rorl
divb
in
dec
mov
int
adc
fstpt
inc
mov
filds
movsl
mov
dec
inc
jp
icebp
aam
jb
push
es
or
and
popf
jns
xor
movl
xchg
sub
fstpl
addl
ds
shrl
adc
dec
and
scas
mov
das
or
sbb
dec
scas
imul
divb
jnp
lahf
hlt
jnp
lahf
test
sbb
in
jmp
ret
pop
cmp
pop
popf
mov
fdivrs
mov
adc
ror
movsl
ret
jle
imul
in
mov
stos
mov
pop
pop
lods
cmpb
stos
push
orl
push
shrb
sub
cwtl
lods
sub
sub
jge
cmp
jp
shrd
adc
int3
das
xor
cmp
push
adc
and
jle
mov
fsubrl
inc
xor
pop
fidivrl
xchg
call
and
jno
stos
into
stos
xor
xlat
ja
int3
addr16
iret
push
push
inc
and
notl
in
mov
jb
mov
sub
jno
les
pop
psrld
scas
sbb
stos
cltd
pop
jp
scas
fiadds
fstps
fucomip
inc
jp
cld
in
stos
jge
dec
xchg
loopne
loop
repnz
ficoml
sbb
mov
cs
xor
je
add
sbb
mov
fdivs
mov
sub
outsl
push
jmp
and
xchg
rol
xchg
out
sbb
lods
lcall
fistpl
or
jl
xchg
imul
enter
pusha
pop
ds
es
jmp
mov
addl
dec
movsl
add
test
daa
lcall
pop
cmp
in
pop
xchg
inc
ret
aam
add
cmp
push
inc
jns
cli
jne
shrb
adc
int3
xor
in
jbe
cld
sbb
fucomp
xor
repz
cmp
or
out
xor
xor
mov
pop
sub
lret
int3
mov
popa
sbbb
decl
cmc
xchg
or
push
inc
dec
aaa
lcall
sahf
int
in
jge
outsb
xchg
add
xorl
cmp
movsl
add
add
cmp
sbb
icebp
out
mov
dec
test
pop
aam
popf
jp
pop
xor
mov
mov
jmp
outsl
into
and
sub
enter
sahf
sti
mov
push
stc
stos
add
cmp
cmp
and
fwait
jne
push
sub
mov
or
gs
jo
cld
in
aaa
mov
jns
xor
push
adc
std
mov
sub
insl
inc
and
movsl
mull
cli
xchg
lahf
fs
imul
pop
xor
lret
ret
loopne
ret
jg
xor
push
cmc
inc
dec
in
push
popa
pop
shrb
incb
adc
mov
sbb
jnp
xchg
dec
pop
js
and
mov
or
cmp
loope
or
and
idivl
sub
test
sbb
out
das
ficoml
data16
popa
and
inc
dec
dec
xor
mov
xor
pop
lock
popa
jnp
stos
ja
adc
adc
xchg
cmp
int
push
test
xlat
xor
mov
fwait
rclb
imul
mov
cmp
add
push
cmp
cmp
pop
dec
adc
mov
add
scas
adc
pop
push
std
mov
cmpsl
push
mov
imull
inc
daa
inc
mov
arpl
pushf
xor
mov
popf
loopne
inc
push
cwtl
sbb
xor
out
or
mov
sbb
add
imul
pop
or
mov
pop
push
popa
xor
push
aas
inc
cwtl
jecxz
mov
scas
andb
das
or
push
stos
dec
repnz
loop
in
aam
mov
imul
or
gs
pop
inc
std
cltd
into
arpl
in
dec
inc
ljmp
jno
fwait
pusha
adc
add
lds
mov
ja
dec
in
push
pop
push
js
scas
out
test
jnp
sbb
and
hlt
addr16
push
add
xchg
hlt
adc
fcmovnb
and
mov
jo
lea
aaa
sub
aad
add
ja
std
js
or
test
dec
addr16
inc
cmpsl
sub
xor
cmpb
xchg
push
cmpsb
jae
mov
ret
ss
outsb
mov
cmp
imul
push
or
shrb
or
jmp
dec
jge
fnstcw
scas
sbb
push
repz
sub
push
stos
scas
aad
icebp
dec
lds
inc
mov
push
jmp
js
ret
test
icebp
imul
or
dec
mov
icebp
aas
xor
dec
jg
leave
out
lods
xchg
ljmp
out
testb
lods
adc
xchg
jbe
leave
pusha
cmpb
fmuls
jmp
sbb
xchg
mov
pusha
sbb
jne
ss
notb
xchg
daa
dec
xchg
divb
pop
in
inc
xchg
xchg
sub
xchg
lods
ljmp
lcall
push
lret
xchg
loope
std
xchg
in
aas
dec
push
jno
push
mov
mov
ret
inc
sti
rclb
pop
push
xor
fadds
rcll
mov
adc
xorb
in
call
loopne
hlt
mov
lret
xor
sti
xchg
aam
out
into
gs
pop
adc
pop
int3
in
aad
sub
pop
mov
add
cmp
inc
sbb
xor
pop
pop
fmuls
and
or
stos
add
enter
sub
mov
sahf
cmp
pop
mov
mov
pop
xchg
leave
cli
lea
fildl
xor
pop
lock
sbb
popf
mov
pop
adc
sub
ja
and
cmpsl
pop
dec
lds
xchg
xchg
mov
add
push
sahf
mov
js
fwait
mov
xchg
daa
in
in
xchg
lods
cmp
or
or
sub
in
add
mov
and
push
mov
testl
clc
aad
inc
cmc
dec
mov
adc
ffreep
cltd
jmp
mov
mov
test
push
add
push
scas
sbb
jge
scas
cmp
data16
cltd
push
push
mov
xchg
sub
xor
ja
push
aas
aas
test
testb
daa
lock
pop
xchg
loop
jno
xor
lds
cli
pop
push
fdivs
xor
mov
push
jbe
arpl
mov
jnp
dec
ret
sub
jle
sbb
xor
rcr
out
xor
das
aam
xchg
inc
lret
nop
mov
push
sbb
cwtl
adc
and
out
bound
cmpsb
push
sub
xor
mov
push
icebp
mov
bnd
dec
aad
push
sub
push
fnop
rol
mov
push
xor
pop
jne
fcmovnu
pop
xchg
and
dec
push
mov
mov
xchg
mov
xchg
mov
push
hlt
mov
push
mov
mov
mov
enter
mov
mov
sub
push
adc
pop
pop
sti
dec
aaa
icebp
adc
iret
fimuls
daa
add
insb
or
sbb
mov
push
dec
loope
push
loop
cltd
jecxz
add
push
das
cmp
inc
push
xchg
pusha
scas
xchg
inc
or
mov
sbb
pusha
test
push
subl
cmp
roll
jno
jae
cmp
push
mov
lret
leave
fucom
pop
push
in
cmp
xlat
pop
adc
in
int
xor
sbb
aad
dec
loop
jnp
push
inc
insb
mov
mov
sbb
sbb
lcall
push
jecxz
cld
sti
mov
scas
and
sbb
dec
xchg
daa
add
out
jp
inc
fistpll
addr16
nop
daa
push
icebp
out
inc
scas
jno
pop
push
xlat
in
repz
rcrl
xor
in
add
xchg
aad
pop
arpl
lock
outsb
and
scas
mov
lods
mov
aaa
mov
add
mov
push
inc
sbb
lret
outsb
inc
jbe
push
jne
ss
fisttpl
lods
pop
imul
inc
sar
inc
add
dec
inc
jae
mov
inc
or
xchg
loope
cmc
adc
les
push
push
ja
mov
out
movsb
pusha
xchg
pop
mov
cltd
pop
fsubrp
push
or
call
cmpsb
std
sub
mov
push
out
sub
mov
ja
or
jns
sti
test
sbb
insb
dec
fs
addr16
mov
loop
arpl
mov
xchg
or
sbb
push
in
mov
pusha
sbb
jbe
sahf
xor
repz
in
jg
adc
jge
mov
push
push
fs
filds
inc
js
dec
jmp
xchg
inc
fisttpll
fadd
pop
sahf
fs
shlb
int
xchg
mov
xchg
mov
adc
aaa
insl
ds
sbb
hlt
into
aas
dec
movsl
inc
div
icebp
stos
sbb
pusha
dec
jg
mov
in
rorb
mov
in
jne
mov
xchg
loop
out
dec
ljmp
or
push
adc
lea
xor
lahf
push
sub
xorl
enter
xor
dec
inc
and
dec
into
cmpl
vprotw
rclb
js
and
pop
jae
inc
cmpsl
incb
out
pop
mov
jl
cmp
cltd
xor
loope
dec
rcl
and
sub
mov
out
dec
lcall
push
jno
aad
gs
jl
rolb
sbb
xchg
sbb
scas
add
mov
add
loope
jle
pusha
lea
imul
dec
in
ja
push
add
xor
pusha
stc
xchg
mov
shr
imul
movsb
rclb
fbstp
pop
loop
push
enter
sub
add
adc
data16
cmp
sahf
cld
idivb
xchg
aas
ret
in
cwtl
jne
sub
jecxz
push
adc
push
or
jmp
push
jno
or
mov
lret
test
xor
sub
int3
jge
cltd
jae
out
stos
mov
aad
stos
ja
sub
int3
mov
aam
rcrb
ror
les
cmc
sbb
nop
fidivl
cmp
movsl
mov
rcrl
and
sbb
mov
lock
out
aaa
xor
xor
add
push
cs
jecxz
jge
xlat
xor
lock
add
js
push
out
ss
shl
push
jbe
or
pop
lock
pusha
je
jge
add
leave
data16
mov
xchg
fidivrs
sub
icebp
cmp
dec
stos
in
lcall
js
imul
lret
add
mov
out
cs
pop
mov
xor
push
shrl
je
ja
add
lea
xchg
jp
cmc
pusha
adc
shl
xchg
mov
repnz
nopl
sahf
popa
in
test
std
js
push
or
test
inc
mov
xlat
jge
push
jns
fildl
lcall
push
cmpsl
stc
xlat
sbb
into
jnp
pop
lods
lock
loope
adc
fsubrl
rolb
push
xchg
call
popl
jmp
adc
out
mov
add
push
pop
enter
jnp
pop
add
mov
fmull
jmp
cmpsb
lods
inc
fcomps
push
je
mov
pop
cli
shlb
mov
mov
push
call
cmp
sbb
push
or
lcall
data16
popf
jo
push
cs
mov
ret
stc
sbb
ss
xchg
xchg
mov
ftst
sub
int
add
pushf
lods
jmp
test
cld
jnp
mov
lret
imull
sub
xor
jnp
rcr
pop
pop
arpl
cmp
ror
lcall
mov
ljmp
jg
jnp
mov
jmp
std
or
notl
into
xchg
mov
movsb
fsubl
sub
lods
push
pop
pusha
aaa
or
sahf
js,pt
sarb
mov
pop
mov
lret
xchg
mov
sbb
push
leave
cmp
xchg
fiadds
sbb
pop
std
aam
push
mov
xchg
cmp
cmpsl
test
xchg
mov
adc
cld
shll
sbb
popf
hlt
adc
jle
das
daa
mov
xchg
pop
shl
les
sbb
push
int3
rcr
pop
aad
lahf
loop
mov
popa
js
aas
aas
ret
pop
and
mov
cli
test
fisttpll
outsl
add
jo
adc
in
mov
popa
add
sahf
or
pop
or
ret
ja
pop
add
mov
test
imul
out
jl
sbb
inc
cmc
fcomi
loopne
sub
pop
lds
cmp
jl
jbe
and
movsl
cmp
repnz
repz
and
and
jp
stos
push
andb
fnstsw
jnp
cmp
push
lret
pop
outsb
in
lret
or
fisubrs
jno
lahf
ds
addr16
cld
imul
std
sub
pop
inc
dec
dec
cmpl
pusha
push
push
sbb
push
inc
ficompl
aas
pop
icebp
aaa
nop
data16
ljmp
ss
scas
dec
add
es
enter
lahf
cmp
inc
mov
int
cwtl
xlat
mov
ljmp
push
xor
in
jmp
repz
and
push
cmp
jmp
push
cmp
pop
fcmovb
inc
xor
push
lock
in
idivl
js
and
xchg
sub
fiaddl
shll
sarb
fistps
mov
enter
sbb
lods
imul
xor
pop
lods
mov
pop
lods
push
shlb
pop
rorb
insb
cmp
jl
push
std
adc
mov
in
or
cwtl
fldcw
cli
cmp
gs
pop
add
and
popl
push
push
push
push
movsb
int3
jg
rcll
jbe
jge
divl
cmp
js
rcrb
int
dec
imul
or
cmpsb
and
xorb
xchg
xchg
cmp
enter
xchg
in
add
mov
sub
pop
push
mov
adc
xor
dec
movsb
push
add
dec
pop
sub
cmpsb
and
cmc
sub
cmp
mov
or
outsb
xchg
fnstcw
in
push
movsb
fstl
sub
push
pop
cmp
pop
jns
mov
ret
fisubs
push
pop
jg
movsl
mov
mov
iret
jb
sub
rcr
cli
adc
jnp
or
xchg
adc
inc
dec
mov
inc
fiaddl
sub
sahf
mov
cmpsl
imul
or
stos
loop
rclb
int3
cmp
push
mov
inc
jmp
or
xchg
test
cmp
mov
test
mov
ss
movsb
xchg
xorl
jle
adc
mov
hlt
aaa
push
sbb
xchg
or
test
inc
cmp
xchg
cmp
add
sbb
test
test
inc
lea
sbb
cmp
mov
int
in
decb
daa
pop
into
xor
and
mov
xor
call
jno
aas
xchg
sbb
dec
push
fdivrs
shll
mov
or
sub
xor
or
inc
addr16
sub
and
mov
jg
and
jo
jo
stos
pop
push
dec
dec
inc
inc
and
call
pop
fldt
clc
lret
jge
subl
cwtl
incb
and
jp
and
sbb
mulb
ret
movsl
mov
mov
dec
test
jae
lret
xchg
or
add
push
imul
sub
lock
dec
js
push
push
movsl
pusha
mov
cltd
daa
stos
sub
push
dec
pop
mov
js
ja
fidivrl
cmp
fnsave
es
mov
pop
sti
inc
push
cmp
mov
inc
push
sbb
mov
sbb
cmp
jnp
std
cs
xchg
xor
cmp
into
and
scas
cltd
cmpsb
inc
xlat
stos
xchg
int
addb
jae
outsl
js
mov
jecxz
fwait
hlt
jl
dec
mov
and
das
pop
daa
adc
lds
adc
xorb
pushf
scas
push
mov
mov
sub
inc
pop
push
fcompl
orl
into
jg
sub
jnp
push
sbb
push
xchg
sbb
outsb
jae
xor
cmc
popf
push
lds
xor
test
loope
mov
lret
lret
xlat
mov
gs
cmp
in
mov
iret
dec
add
push
inc
push
pop
insb
shrb
push
mov
fcmove
mov
rcl
xor
addr16
mov
adc
je
ret
push
cmp
in
in
test
jmp
js
xchg
loope
insb
and
stc
cmp
imul
stc
aam
fisubrl
adcb
mov
ljmp
fstp
mov
test
ret
mov
subb
pop
frstor
fstl
ja
sbb
lock
js
xchg
or
push
push
inc
pushf
cmp
jbe
pop
pop
or
loope
sbb
addr16
push
out
test
mov
outsl
or
dec
cli
lret
lds
enter
mov
ret
incb
jbe
in
xorl
loope
cltd
fistpl
or
js
mov
mov
ja
xchg
xchg
cld
pop
mov
mov
add
cld
in
jmp
ds
dec
filds
das
adc
icebp
pop
xor
jle
pop
mov
fdivr
push
fimull
shrl
popa
popa
add
xchg
xlat
shlb
mov
inc
fcmovnbe
jno
mov
int3
sbb
jle
mov
push
lahf
sbbl
xor
adc
mov
xchg
pop
daa
dec
cld
aaa
int
movsb
push
jp
rcll
mov
sub
mov
mov
xchg
and
or
push
push
into
mov
add
lds
js,pt
pop
inc
sub
dec
lret
jo
cs
nop
out
inc
xchg
sub
dec
outsl
push
dec
scas
mov
sbb
adc
jns
out
mov
subb
xchg
and
mov
enter
hlt
xchg
cli
lret
mov
dec
mov
mov
mov
mov
mov
popl
dec
inc
push
es
xchg
movsb
mov
pop
sub
aas
ss
test
insl
fwait
ja
and
testb
into
mov
loop
sub
fiadds
adc
lret
xlat
fs
sahf
test
lret
push
popf
daa
ds
jbe
sbb
push
bound
loope
lret
mov
add
out
xor
out
cmp
xchg
push
inc
lock
sub
iret
xchg
cli
and
xor
addl
lahf
repz
lahf
and
es
int
push
loop
sbb
and
lcall
sub
add
push
mov
cmp
mov
icebp
pop
pop
mov
test
icebp
mov
es
pop
stc
xchg
sbb
adc
push
lret
push
out
test
fists
mov
inc
data16
push
lret
ja
call
sysret
lahf
xor
andb
call
adc
push
pusha
jle
decl
test
lahf
xor
lods
mov
out
aaa
mov
mov
mov
ret
adc
push
jb
and
jb
ss
out
jnp
aas
jno
mov
jno
lret
icebp
or
leave
cmp
xchg
push
mov
push
std
mov
mov
dec
mov
sbb
xlat
cld
add
pop
lahf
or
fs
push
hlt
stos
xor
pop
iret
lods
inc
push
loope
out
push
lret
aas
mov
jns
sahf
pusha
inc
dec
xchg
les
dec
test
add
movsb
out
sahf
shl
xchg
and
xchg
cwtl
sub
lcall
sbb
push
and
das
mov
or
sub
cmp
jns
sbb
pop
scas
mov
or
xorl
xchg
xor
or
addr16
leave
push
fisubrs
sub
pop
inc
inc
sbb
pop
test
loop
test
dec
loope
stc
xchg
movsl
shrl
lea
push
pusha
fxtract
shll
dec
or
dec
xor
push
adc
xor
stos
dec
mov
pushf
pushl
xchg
add
stc
mov
mov
aad
xchg
xor
shr
sub
xor
adc
mov
mov
adc
xchg
pop
gs
bound
pop
test
mov
lahf
popa
sahf
push
mov
faddl
int
cmpsl
dec
stc
jge
cmpl
jne
xchg
or
out
lock
or
cmp
and
cmp
insl
adc
cli
or
in
test
rorb
jge
jb
adc
je
popa
inc
dec
adc
xlat
jmp
or
test
sbb
jmp
sbb
xchg
addr16
or
xor
ljmp
pushf
sbb
adc
imul
ja
test
jecxz
jb
pop
insb
mov
nop
jne
hlt
pop
mov
dec
cmp
jb
or
pop
mov
mov
cmpsl
scas
shl
movsl
out
push
mov
xor
lods
pop
mov
stc
mov
and
test
sub
dec
rorl
testl
bound
cmpsl
dec
push
mov
mov
xor
dec
xor
xor
enter
pop
lret
adc
lea
mov
xchg
pop
mov
mov
push
aaa
sti
ss
add
out
add
rclb
into
sti
jbe
mov
repz
sbb
and
cmp
sbb
cmpsb
mov
adc
mov
pop
xor
adc
xor
xchg
ja
cmpsb
in
fcmovnb
cmc
push
xchg
aas
je
sub
sbb
rclb
xchg
mov
stc
mov
shrb
add
xor
push
or
loope
stc
enter
inc
pop
jno
xchg
outsb
mov
push
notb
dec
in
and
push
mov
mov
rcll
jnp
push
and
stc
popf
rcrb
movsb
add
mov
lret
mov
xor
mov
lret
cmp
mov
jo
loopne
lods
pop
pop
inc
dec
add
mov
pop
fildll
mov
adc
jo
pop
lds
add
fists
out
pop
jno
sbb
ret
dec
dec
cmp
cmp
rorl
xor
inc
lea
ficoml
loopne
push
inc
xor
xchg
push
sub
push
lahf
ret
rcl
dec
push
test
or
cmp
jnp
push
ss
les
lods
xlat
xor
pop
ja
les
roll
ret
inc
insb
sub
call
sub
lods
xchg
adc
push
add
mov
jno
mov
sub
cltd
pop
les
aad
push
orl
aad
int
ret
lcall
jns
cmp
mov
mov
movsb
push
daa
xlat
shll
ret
rorb
pop
jg
loope
stc
and
jl
pop
lahf
idivl
dec
mov
loop
dec
sbb
lahf
outsb
sub
lahf
xchg
ljmp
or
add
dec
in
inc
in
test
lods
dec
pop
ljmp
jno
inc
cmc
push
adc
adc
test
push
std
andl
sub
add
scas
aad
mov
sub
xchg
adc
test
dec
push
sbb
jle
xor
push
sbb
fdiv
sub
sbb
and
out
shrb
lcall
cmc
adc
cltd
lock
mov
or
movb
daa
pushf
mov
or
js
jmp
lret
and
pop
fwait
xchg
insb
mov
hlt
shlb
and
hlt
arpl
jecxz
push
jae
inc
cli
inc
cli
push
mov
dec
insl
xor
fisttpll
in
fisttpl
pop
xor
jb
jmp
rcrb
sub
sti
or
es
ss
pop
cmp
dec
mov
cmpsl
jne
nop
push
sub
mov
loop
je
lea
jecxz
sub
mov
sbb
stc
push
mov
adc
and
xor
jg
nop
and
mov
test
loopne
pop
jmp
lds
xchg
add
pop
xor
aaa
rcl
out
or
ljmp
xchg
pop
push
stc
out
pop
cmp
pop
cwtl
stos
cmp
sub
loope
push
mov
pop
test
leave
in
mov
sahf
push
es
fs
movsl
shrl
and
jne
dec
sbb
adcb
or
push
cmp
cmp
mov
lret
mov
mov
lods
loopne
fisubs
shrl
and
mov
cmp
pop
pop
out
lret
lret
in
lea
and
ja
lock
jecxz
fsub
mov
gs
lods
sbb
gs
je
push
pop
ret
sub
mov
cmp
or
pushl
sbb
pop
adcb
mov
adc
jb
gs
subl
test
jnp
imul
inc
cmp
aaa
test
add
data16
ret
fldt
pop
aaa
add
sbb
out
leave
mov
das
push
inc
xor
xchg
cmp
xchg
in
fistpl
test
in
push
stc
sbb
les
sahf
aaa
sti
cmpsb
in
cmpl
xchg
and
rcll
adc
enter
push
inc
xchg
add
add
ja
and
psrad
push
mov
sub
and
jecxz
pop
cmp
jecxz
incl
fildll
mov
and
stc
add
aaa
jbe
push
in
out
xor
xchg
sbb
add
add
mov
sub
out
outsb
fcmove
push
add
in
sti
jno
xlat
sahf
mov
fs
fbstp
stos
ss
inc
fnstsw
or
roll
test
mov
jge
sub
inc
test
cmc
xor
push
jl
outsb
sbb
fcom
cld
push
jge
jl
xor
neg
mulps
pop
mov
or
lods
movsl
out
sub
jge
bswap
outsl
push
and
test
scas
icebp
cltd
or
repnz
pusha
sbb
mov
adc
mov
pop
insl
scas
and
mov
test
sbbl
call
sbb
sbb
dec
rol
mov
and
in
adc
push
adc
mov
jne
mov
or
cmpsb
adc
add
mov
xchg
jmp
push
out
mov
xor
icebp
xor
mov
push
popf
in
repz
mov
out
in
jb
test
or
iret
dec
mov
loop
fcmovne
scas
add
or
fidivrs
pop
mov
mov
popa
push
lret
xor
mov
in
cmp
sub
cld
push
adcl
sbb
mov
and
ret
and
in
ret
mov
xlat
cltd
sub
std
iret
pop
or
cmp
dec
cmp
sahf
dec
cmc
mov
adc
insl
test
lods
inc
pop
aam
ljmp
mov
mov
mov
aam
int
pushf
mov
pop
push
fwait
mov
jle
mov
clc
inc
jecxz
adc
sub
call
mov
mov
clc
mov
jg
adc
sub
jb
push
mov
push
imul
and
fsubrs
insb
fsts
jmp
mov
inc
cs
adc
divl
ret
push
cld
cmpsl
add
jae
mov
xor
gs
xchg
call
push
sub
dec
cmpsb
mov
nop
push
cmpl
sub
xor
lods
sti
dec
cmpsb
mov
call
test
out
loopne
sahf
daa
js
lcall
cmp
sub
in
fimull
and
and
sbbb
lret
mov
pop
bound
sub
lock
jmp
pop
xor
sbb
repz
xor
lods
pop
xchg
push
sbb
icebp
cmp
inc
dec
testb
jns
xor
jns
popa
jns
mov
jo
pop
add
mov
pop
loop
mov
dec
pusha
or
test
andl
mov
pop
subb
lds
aaa
imul
ret
js
pop
clc
adc
mov
inc
push
ja
ret
push
jo
pop
cmp
adc
ds
mov
fucomip
mov
test
aas
add
cmp
mov
lea
xchg
add
mov
push
xchg
mov
fstps
mov
jge
test
cmp
popf
jecxz
aaa
iret
dec
outsl
adc
sahf
push
mov
mov
push
ret
insb
mov
sub
or
pop
loopne
arpl
push
js
jae
cmp
ret
xchg
sub
xlat
je
add
es
sub
mov
sub
lahf
lret
es
out
add
xchg
mov
jmp
out
or
push
mov
lea
neg
jg
mov
sub
xor
shll
pushf
cmpb
add
jl
jno
mov
inc
fldcw
sbb
dec
mov
jg
sbb
test
xchg
pop
sbb
dec
mov
fbstp
adc
sub
push
std
xchg
cmp
aad
daa
sbb
push
mov
xor
cs
push
stc
mov
mov
or
push
outsb
popf
mov
mov
decl
jb
cmp
fsts
outsl
add
push
popa
into
xor
andb
mov
test
decl
xor
sarl
mov
add
jbe
mov
xor
mov
mov
mov
insl
lds
inc
dec
and
cmpsb
in
pushf
xlat
sub
stos
pop
and
into
aaa
das
scas
frstor
sub
sub
push
fs
cmpsb
sub
cmp
in
inc
fnsave
lahf
aas
shrb
push
fs
test
cmp
fldt
ljmp
out
cli
sub
aam
cmp
filds
pop
xlat
insb
jecxz
cmpsl
sbb
in
jecxz
sub
adc
xchg
and
and
push
int
sbb
les
xor
push
ss
adc
imul
ret
mov
push
inc
call
xor
out
push
adc
cmp
les
enter
adc
stc
xchg
ss
sbb
mov
hlt
mov
and
mov
mov
and
stos
cld
push
and
nop
mov
pushf
pop
std
loopne
aaa
adc
and
mov
in
cmp
lret
xlat
add
or
xor
cmc
mov
jg
adc
addr16
pop
cmp
xor
dec
cmp
pushl
imul
jge
icebp
mov
lds
and
jl
orl
outsl
cmp
pop
fldcw
cmc
mov
mov
sub
outsl
jae
lock
dec
ja
andl
sub
cld
add
push
cld
and
sub
push
inc
test
fwait
add
and
out
and
stc
cmp
in
push
outsb
hlt
popa
mov
subb
pop
xlat
outsb
dec
mov
mov
adc
and
push
lcall
mov
add
jmp
jno
out
es
clc
popl
cmp
push
cmpsl
mov
push
pop
mov
cmp
rorb
lods
push
aas
test
or
outsb
and
add
push
bound
int3
sahf
fs
adc
ss
loope
call
into
jns
xchg
sbb
push
fisubrs
jne
popa
imul
sti
sub
ret
jl
movsl
pop
aaa
cmp
shll
xchg
notb
loope
xchg
test
dec
or
cmp
sti
pop
mov
ljmp
jmpw
xlat
loope
out
out
and
and
movsl
jbe
mov
insl
add
aam
psubd
popf
jmp
repnz
pusha
sbb
push
pusha
imul
testb
fimuls
in
push
mov
sub
push
jmp
cmpsb
test
cmp
ficompl
add
es
je
mov
pop
xchg
pop
rcr
mov
cmp
fcmovnb
cwtl
sub
and
add
out
movsb
ret
mov
sub
cmpsb
in
sbb
cli
in
mov
mov
inc
dec
pop
les
je
push
aaa
push
xlat
ror
les
jo
test
mov
push
loop
fnstcw
xor
dec
cwtl
addr16
cld
cmp
adc
jg
and
out
jbe
mov
mov
adc
mov
out
sub
pop
cmp
movsl
adc
daa
repnz
into
fcmove
xor
ret
cmp
int
popa
cvttps2pi
xor
cmp
xor
cmp
xchg
push
xlat
in
sub
sub
jmp
dec
pop
stc
dec
jno
xorl
pop
xor
popa
ret
leave
and
sbb
push
shrl
mov
pop
daa
push
lret
vpcmpgtb
push
jnp
lods
mov
cmp
pop
sbb
jno
sbb
popa
and
adc
cld
add
outsb
dec
loop
or
add
shld
fiadds
pop
sub
fstps
imul
aas
mov
imul
push
js
dec
mov
iret
cmp
addr16
icebp
cmpsb
gs
sbb
arpl
scas
cmp
in
div
in
mov
dec
jno
adc
xorb
imul
stos
jecxz
addr16
dec
pop
movsl
call
or
mov
addr16
mov
push
mov
cmp
in
in
fistps
mov
pop
js
add
jle
scas
pop
xchg
mov
fdivrs
dec
leave
xchg
out
push
push
inc
mov
dec
es
pop
and
mov
ja
ljmp
mov
lret
mov
inc
cmpl
andl
repz
pop
jge
cltd
daa
lcall
popf
or
jb
mov
shll
push
mov
mov
fs
sbb
int
movsl
sbb
stos
pop
mov
jp
sub
push
pop
cmc
add
out
incl
testb
mov
sub
and
pop
cmc
rcrb
in
sahf
and
xorb
out
xor
cs
stos
pop
xor
inc
lcall
jle
jns
sti
and
adc
mov
data16
insl
stos
mov
mov
cmp
inc
pop
test
dec
jbe
test
loope
sbb
add
jl
sahf
adc
inc
cmp
sahf
xor
sti
movsb
js
mov
sub
sub
pop
movsl
test
xlat
cmp
sub
jge
imul
inc
pop
je
xor
mov
sbb
xchg
inc
std
add
adc
sub
pushf
pop
rorl
test
out
and
push
adc
mov
adcb
out
test
and
cmc
ja
insb
incl
sarb
add
push
cld
insl
arpl
xchg
mov
rorb
ja
xchg
fs
and
inc
mov
mov
and
jle
cli
out
test
in
mov
call
or
or
push
and
push
aaa
inc
fdivs
sbb
add
fs
dec
fiadds
sub
inc
push
gs
mov
rcll
add
repz
push
aas
dec
adc
aad
push
pop
sub
js
pop
mov
insb
xchg
adc
xlat
stc
dec
xchg
scas
jb
lcall
mov
ret
cltd
repnz
in
es
jmp
jge
orl
into
enter
push
jne
mov
test
xchg
sub
xchg
cmpsb
mov
fs
int
clc
mov
inc
pop
daa
xchg
xchg
mov
je
inc
out
push
xor
aaa
mov
js
imul
fucomip
pop
pop
ds
daa
stc
pop
out
cltd
and
mov
mov
jle
shrb
lahf
ss
fdivrl
mov
lods
mov
in
jbe
xchg
add
cwtl
xor
mov
pop
and
sbb
pusha
repz
in
mov
insb
cmpb
push
push
inc
je
ja
and
mov
ljmp
aaa
sub
push
cmpsl
aas
loopne
pop
fdivl
jmp
inc
enter
cmpsl
mov
mov
adc
inc
cmpsb
sub
cmp
cltd
xor
jbe
dec
cmc
loopne
push
stos
add
xchg
mov
sub
cld
add
mov
mov
jle
cmp
fiaddl
sub
xchg
dec
dec
adc
mov
sbb
dec
adc
decl
sbb
orl
lcall
popa
out
hlt
adc
cwtl
adc
push
sti
out
xlat
imul
repnz
add
nop
or
dec
mov
mov
sub
aad
inc
dec
das
sbb
mov
dec
std
pop
jg
in
mov
fisubl
pop
xor
jg
insb
cmp
pop
arpl
xchg
repnz
fisttps
shl
shrl
mov
or
ljmp
push
cmp
roll
daa
ljmp
mov
mov
test
je
inc
push
push
in
ljmp
shlb
rolb
mov
inc
mov
cmp
gs
inc
xchg
cwtl
leave
cmpsl
cmc
pop
cmp
rclb
leave
add
push
push
inc
mov
cwtl
jmp
loope
mov
repnz
jg
fucomi
mov
in
pop
addr16
cmpsb
mov
test
jno
inc
leave
jmp
clc
or
pop
mov
sbb
fwait
jns
divl
fstpl
mov
ljmp
push
repnz
ja
movd
dec
aad
into
out
fstps
popa
daa
adc
sbb
jns
cmpsl
adc
pop
ds
cmpl
mov
cmp
ja
push
pop
push
mov
dec
dec
xchg
xlat
push
dec
data16
sbb
cltd
push
shll
dec
in
stc
out
std
inc
ljmp
ret
dec
jno
popa
data16
sbb
test
adc
aaa
in
xor
xchg
lds
jecxz
ja
addr16
addr16
mov
fldt
enter
ss
es
fbstp
jg
xchg
jo
loope
test
sbb
data16
lret
icebp
xchg
push
push
mov
mov
les
rcl
sbb
sbb
cmp
fistpll
pop
push
xchg
and
xchg
xchg
pop
call
int
movsl
in
pop
daa
sbb
das
cli
sar
imulb
dec
add
cmp
shr
push
mov
cmp
cmp
mov
int3
add
and
push
xchg
imull
in
fmul
pushf
pop
sbb
aam
sbb
and
cmp
sub
int3
pop
testb
leave
jae
sti
jbe
and
adc
dec
mov
xchg
cmp
add
sbbb
outsl
rcl
aas
or
cltd
mov
xchg
setb
ss
or
mov
insb
xor
stos
cmpsb
cmp
xchg
out
aam
mov
outsl
jmp
mov
clc
out
insb
cmp
fmuls
mov
cmp
ljmp
jge
and
mov
cmp
cmp
fs
jp
mov
adc
push
daa
adc
sbbl
scas
mov
cmp
test
cwtl
sahf
xor
aad
mov
lcall
push
pop
pop
test
and
adc
fcmovne
addr16
xchg
xchg
cmp
push
mov
sbb
sbb
sub
pop
rclb
pop
mov
orb
aam
push
ljmp
out
lods
adc
ret
sub
loope
fdivrs
in
jbe
sbb
insb
jo
rolb
add
das
gs
xchg
dec
cltd
xor
add
dec
mov
in
nop
daa
add
xchg
int
aam
mov
dec
mov
cmp
shll
push
mov
or
cmp
pusha
leave
gs
lret
mov
mov
inc
jns
sbb
jge
or
loop
sub
jne
push
or
xor
mov
pop
fistpll
adcb
ret
mov
jmp
mov
jmp
xor
or
out
sub
mov
popf
push
test
ss
fnsave
orl
ja
in
xor
sti
sbb
jne
push
popf
sub
ret
repz
push
popf
ss
pop
cltd
jmp
lods
xchg
rolb
xchg
pop
fs
stos
xchg
sbbb
xor
push
mov
jns
mov
jmp
cmc
jo
addr16
adc
je
adc
sub
jno
loop
sbb
sbb
or
js
add
fwait
xor
jl
or
push
in
fmull
mov
movsb
push
xor
push
roll
xor
push
add
mov
push
std
mov
sbbl
dec
stc
clc
xor
xchg
and
lods
scas
xor
or
pop
sbb
ret
pop
cmp
mov
and
sub
mov
sbb
cmp
cmp
jle
sbb
add
mov
fisubrs
in
shll
les
int3
inc
cmpsl
xchg
fucomp
cmp
aad
loopne
dec
in
js
clc
cmp
xor
js
mov
sbb
mov
or
lock
testl
jne
push
mov
mov
jge
pop
inc
rolb
stc
out
xor
scas
ja
repnz
faddl
adc
and
mov
outsb
jge
mov
cmp
call
pop
or
scas
inc
mov
gs
test
shrb
and
leave
flds
push
lahf
hlt
xorl
xor
sbb
pop
dec
shrb
pop
push
cld
adc
inc
in
out
jle
movsl
fldcw
testb
cmp
adcb
scas
adc
ficoml
push
test
jns
test
and
shl
in
sbb
jecxz
ja
out
cmp
repz
mov
push
add
mov
shrb
xor
mov
inc
in
in
rcrl
int3
add
xlat
mov
aad
cmp
in
outsl
pop
jmp
inc
pop
mov
fisubrl
jae
jb
xor
shlb
cs
ja
pop
repnz
popf
repz
inc
adc
in
inc
xchg
or
push
cli
fldcw
push
xchg
pop
rclb
lret
add
dec
lahf
hlt
lcall
xchg
inc
out
mov
mov
imul
adc
repz
mov
loopne
push
loope
sbb
push
mov
cmpsl
mov
xchg
movsl
jge
scas
into
push
je
call
dec
pop
movl
sahf
jae
out
cmpsl
push
mov
add
pop
mov
pop
test
lods
fcoml
jg
mov
sub
pushf
xor
pop
test
stos
movsl
aas
into
mov
cmp
cmp
mov
push
ss
out
cltd
or
insl
inc
add
lock
pop
sub
test
push
dec
add
out
push
xchg
mov
ss
xchg
and
lds
sub
leave
jno
int3
xchg
sbb
fidivl
clc
pop
call
rclb
scas
lret
js
jo
cmc
xor
arpl
push
out
loopne
and
dec
sub
call
xchg
add
xor
cmp
xchg
xchg
sub
js
and
push
adc
adc
aad
mov
insl
adc
lcall
dec
pop
or
sub
adc
mov
mov
pop
movsl
in
sub
outsl
sub
mov
stos
add
jb
adc
jge
jae
sub
add
iret
out
mov
sub
call
test
dec
pop
push
sti
stc
inc
mov
mov
bound
stos
in
add
mov
jp
mov
dec
fsubs
mov
mov
out
xchg
sbb
int3
dec
jecxz
push
mov
imul
mov
int
dec
mov
cmc
out
lds
mov
cmp
jle
sub
push
mov
inc
push
xor
and
jg
out
mov
jns
dec
mov
mov
js
sbb
push
imul
mov
test
or
shlb
adc
mov
icebp
cmpsb
scas
jge
push
test
cmp
sub
push
jno
jecxz
xchg
dec
jae
vmovd
xchg
je
ret
xchg
pop
out
xchg
mov
je
mov
shrb
xor
jl
outsb
xchg
xchg
lcall
add
les
pop
ja
inc
dec
inc
xlat
and
dec
mov
inc
je
in
pop
cmpsl
std
rclb
cmp
pop
mov
shll
aam
inc
sbb
cltd
push
sbb
lret
pop
test
sub
sbb
dec
jmp
idivl
test
cmp
jl
mov
mov
xor
pop
out
insl
int
jae
mov
pop
xchg
aam
pop
pop
imul
int3
mov
shrl
push
jmp
dec
push
mov
push
subl
loope
sub
pop
fstps
add
mov
xchg
adc
andb
fadds
cltd
pop
dec
mov
icebp
mov
ficomps
sub
cmp
xor
jl
loopne
sub
orb
adc
adc
xchg
pop
push
jg
jmp
xor
out
sub
cld
adc
xlat
jecxz
imul
int3
pop
adc
insl
mov
ret
sbb
pop
out
dec
adc
jg
aad
int3
push
xchg
icebp
enter
movsl
sahf
outsl
inc
ficompl
lds
dec
push
imull
in
add
lret
pop
cmpsl
scas
mov
out
fidivs
mov
std
xchg
or
dec
push
push
out
movl
insb
shrl
push
jb
mov
fistl
int3
jno
scas
js
es
sbb
cmp
jge
jg
cmp
cs
sub
dec
pop
pusha
fwait
mov
push
or
xchg
pop
outsb
lcall
mov
and
sti
dec
fsubrl
cmp
pop
sub
sub
sbb
cmc
jge
mov
es
push
add
push
cmp
rol
imul
sarb
popa
addl
pop
adc
ja
or
ja
cmc
jg
nop
imul
inc
pushf
jg
pop
popa
add
ret
popa
or
jle
mov
pop
repnz
lods
jecxz
popa
sub
aaa
sti
inc
xchg
cmp
not
mov
mov
jp
inc
sbb
jp
out
xchg
xor
mov
mov
sbb
int
gs
mov
mov
decl
mov
jmp
adc
ds
cmp
bound
ret
inc
push
adc
in
adc
mov
mov
adc
jns
jb
and
cltd
jae
enter
imul
pop
fwait
inc
aam
or
mov
xchg
inc
cmpsl
adc
pop
lcall
inc
mov
pop
add
pusha
mov
push
sub
push
mov
mov
sti
jo
rcrb
shr
sti
rorb
cld
or
mov
inc
lcall
lcall
or
sub
pop
sub
shrl
int3
fsubrs
stos
sbb
pop
je
add
inc
xlat
cli
repz
xchg
stos
sbb
rcr
cmp
xchg
das
mov
bound
pop
mov
sub
rcrb
xor
lea
sub
out
lret
js
pop
ss
jnp
loopne
mov
cmc
lret
ffree
addr16
into
jno
les
jb
xchg
push
scas
int
cmp
cmp
mov
inc
pop
push
cmp
ret
das
bnd
pop
mov
hlt
in
mov
int
adc
or
dec
fists
mov
sub
sub
or
mov
repz
pop
and
enter
pop
outsb
ror
jl
sub
mov
mov
ret
cmp
cmp
ds
testb
mov
pop
ret
aas
mov
dec
or
in
add
inc
pop
mov
sarb
pop
pop
dec
enter
loop
lds
fnstcw
dec
dec
mov
scas
rolb
xchg
xchg
add
jle
adc
and
xlat
cld
mov
popf
jb
dec
stos
xchg
subl
and
in
lods
out
xchg
push
mov
in
xchg
inc
fstl
aad
lahf
out
sub
pop
mov
and
xchg
add
or
adc
jnp
jmp
movsb
mov
push
sbb
cmp
push
mov
mov
enter
xor
pop
dec
inc
pop
add
insb
mov
dec
sbb
xchg
mov
cmp
ja
enter
iret
lods
sbb
inc
pop
into
fsubr
test
pop
pop
xchg
xchg
or
les
mov
mov
fldcw
xor
inc
imul
fidivs
adc
and
in
in
add
mov
repnz
fldenv
aad
inc
jne
ljmp
rolb
push
insb
pop
adc
stc
pop
jb
mov
int
int
pop
mov
cmpsl
jecxz
mov
push
jo
fstpl
xor
add
push
fldenv
cli
inc
mov
addr16
mov
sub
insl
sub
icebp
dec
aad
loop
imul
nop
iret
out
jno
pop
xor
jno
lods
sub
adc
sub
stc
mov
out
jle
xchg
cmc
mov
push
and
jmp
jmp
fwait
cmpsl
jle
jo
jno
lock
gs
insl
pextrw
mov
mov
bnd
add
sub
cli
cli
push
and
fsubs
sbb
mov
daa
dec
push
or
lret
jle
std
sbb
nop
and
cs
dec
mov
mov
mov
pushf
dec
cmp
cmp
push
outsl
mov
ljmp
mov
int
lret
hlt
movswl
and
jo
lret
repz
jg
adcl
xor
lods
fadds
in
push
xlat
jae
icebp
xchg
dec
mov
jp
push
push
andb
mov
mov
mov
jb
out
and
cmp
sbb
add
jne
lcall
or
xlat
mov
outsb
fcmovnb
scas
push
cmp
enter
test
xorl
testl
cli
sbb
xor
test
sbb
sbb
add
daa
repnz
rcll
jnp
popa
push
ds
or
and
stos
pop
push
test
loope
cmpsl
dec
mov
ficoms
bnd
jle
repz
jg
cwtl
fdivrs
mov
scas
sub
and
notb
imul
out
push
cwtl
fnstenv
loop
dec
mov
dec
test
imul
jbe
jo
xor
sub
add
xor
push
add
jmp
inc
loopne
lcall
xchg
and
pop
shrl
cltd
int3
mov
jg
push
xor
sbb
aaa
xchg
jbe
push
mov
jo
or
adc
jg
das
mov
movsl
cmp
ret
xchg
pop
iret
lock
imul
out
lcall
movsl
inc
in
inc
std
stc
push
loope
cmp
push
or
adc
insb
xchg
nop
adc
dec
iret
mov
mov
and
push
xchg
pop
call
pop
shrb
xchg
sbb
sti
mov
inc
or
add
sub
repz
dec
mov
inc
jp
xchg
lcall
push
lods
dec
lret
dec
and
adc
out
push
jo
fwait
sahf
lods
in
stos
mov
sub
cmp
jmp
cwtl
push
sub
mov
pop
lds
movsb
push
insl
pop
mov
adc
adc
movsl
shlb
add
xchg
enter
pop
outsb
ja
mov
in
xchg
push
lret
mov
xchg
push
sahf
adc
jp
fistpl
nop
jg
mov
xchg
out
into
mov
fsubl
std
aas
loopne
push
in
sbb
jp
mov
pop
sti
stc
insl
test
in
push
mov
and
pop
outsl
jmp
add
shrl
je
cmpsl
sbb
inc
sbb
sub
xchg
popa
or
fdivrs
rcr
lret
notl
cmp
aaa
mov
push
int3
sub
mov
push
or
imul
pusha
mov
cmp
lods
inc
shl
js
pop
add
cmp
push
pop
repnz
push
sub
jb
xor
call
in
push
fistl
dec
xchg
or
adc
mov
les
cmp
movsl
jne
cwtl
dec
nop
dec
xlat
cmp
cmp
dec
mov
inc
lock
insb
mov
or
or
and
mov
inc
pop
daa
mov
cmp
inc
xor
fwait
push
xchg
sub
aam
iret
and
pushf
jg
and
ss
inc
iret
popa
mov
pop
dec
jecxz
jle
push
xchg
loop
sbb
sbb
js
jp
cmp
mov
add
xor
dec
jbe
sarb
mov
ficomps
std
xchg
int
push
push
cmpl
clc
dec
xchg
pop
clc
pop
stos
add
mov
mov
arpl
mov
adc
and
inc
pushf
adc
pop
call
cmp
sbb
mov
push
subb
fs
xchg
bound
fbld
push
mov
scas
inc
inc
mov
pop
adc
into
int
cmp
imul
sub
inc
cmp
subl
and
pushf
sub
pop
insb
and
shll
scas
jp
sub
pop
add
inc
lods
fisubl
das
xor
pop
xor
clc
clc
cmp
sub
jg
sbb
inc
cmpsl
jne,pt
xchg
inc
hlt
adc
fnstsw
cmp
sbb
ja
pop
mov
xchg
xor
js
push
lds
jmp
roll
fnstenv
mov
push
push
rclb
sub
push
xchg
fdivl
and
cld
push
push
mov
in
aaa
cmp
pop
add
xor
stos
mov
scas
ja
dec
xor
mov
jns
dec
mov
lcall
mov
push
inc
into
sub
iret
push
jmp
or
dec
fnstenv
clc
mov
rorl
pop
idivl
stos
es
xchg
push
pop
mov
fnstcw
scas
or
stos
jno
jns
dec
scas
inc
in
mov
mov
sub
xor
hlt
or
es
adc
mov
and
insl
scas
add
cmp
pop
ret
rcrl
or
pop
pop
cmp
sahf
xchg
add
dec
out
push
mov
hlt
lods
clc
inc
scas
sbb
pop
cwtl
aam
lods
bound
in
add
mov
rcrl
and
add
inc
stc
mov
xchg
mov
aad
fdiv
dec
test
adc
js
sbb
stc
scas
nop
sbb
mov
addr16
sbb
xchg
add
dec
jae
mov
xchg
roll
out
scas
push
push
pop
xor
js
cmp
mov
cltd
adc
xor
stos
add
pop
in
mov
movb
test
movsl
xchg
push
xchg
push
jbe
lret
out
xor
or
out
sub
shrb
adc
out
jns
and
pop
int
xchg
mov
icebp
mov
jnp
nop
arpl
test
shrl
add
jne
dec
mov
lret
cmp
inc
pop
iret
fists
sub
pop
mov
imul
outsl
add
cmp
mov
dec
lock
inc
jle
push
in
cli
ror
pop
insl
lods
cwtl
cs
mov
test
je
ljmp
test
outsl
dec
fnsave
jo
push
and
nop
cwtl
insl
ljmp
xchg
sbb
pop
xor
push
popf
push
jecxz
cmpsb
push
xor
cltd
pusha
rcrl
js
test
push
mov
push
aad
rolb
jns
inc
stos
or
int3
cmp
fstpt
les
cld
xor
das
push
jno
stos
jbe
adc
push
jae
fmull
dec
ss
les
outsb
or
xor
inc
inc
push
repz
mov
pop
fidivl
push
inc
loope
xchg
cmpsb
lods
jp
stc
add
cmp
mov
arpl
pop
ja
cmpsl
sub
dec
xor
hlt
andl
push
movsl
sub
push
mov
and
jge
filds
pop
dec
arpl
lock
mov
dec
dec
inc
leave
mov
xor
pusha
cmpsb
inc
lock
mov
xchg
mov
push
jp
mov
mov
push
outsb
insb
ljmp
mov
aad
or
inc
sub
ret
pop
sbb
sbb
push
jns
sub
call
inc
pusha
or
cmp
xor
or
cmp
mov
rcl
popa
xchg
rol
mov
leave
cmp
in
ss
fnsave
dec
lcall
jmp
push
add
fidivrs
stos
mov
adc
and
xor
jge
cmp
jb
fwait
test
adc
rorb
dec
pusha
sub
insb
scas
cmp
sbb
push
dec
in
dec
xlat
mov
add
nop
pop
lods
dec
jp
push
mov
jge
or
aad
jns
rorl
aas
repnz
mov
xlat
ret
pop
and
lock
aas
je
andb
pop
ret
sbb
jle
ret
addl
xchg
dec
ret
mov
xchg
stos
pop
cmc
pop
scas
jmp
loopne
jl
inc
dec
dec
movsb
mov
push
or
xor
sub
fneni(8087
mov
add
mov
inc
xor
loop
xchg
and
out
xchg
push
mov
push
scas
addb
inc
incb
leave
mov
cmpsl
mov
arpl
stos
add
push
sub
inc
pop
xchg
popa
push
lods
xchg
adc
mov
cli
pusha
fsubl
push
inc
xor
popa
int3
cld
lods
lds
sub
sub
fwait
sbb
ret
into
jne
das
mov
lods
roll
jae
popf
scas
dec
sbb
xchg
out
push
sbb
test
repnz
sub
cmp
add
loopne
ret
adc
inc
ret
mov
mov
ficoms
or
jmp
mov
bound
fs
xchg
aam
mov
dec
jecxz
sub
push
out
mov
xchg
push
adc
inc
mov
and
push
cmc
pop
jb
in
push
out
sbb
xor
test
ja
insl
xchg
gs
pop
xor
fsts
push
mov
inc
fsubrl
sub
push
aas
std
lock
ds
mov
out
cmp
lcall
push
cmp
push
xor
sbb
ja
ret
mov
mov
cmc
mov
or
sub
ret
sbb
jo
dec
xchg
mov
fsubrs
cmp
pop
push
push
mov
pop
mov
pop
fldt
mov
adc
cwtl
sub
rol
push
sub
sbb
xchg
int3
shll
scas
sbb
dec
aas
out
lods
cmp
fst
cmp
movl
cmc
or
lock
aas
jle
lock
js
movsl
adc
sub
test
dec
cmpsb
pusha
cwtl
mov
xchg
sub
sarl
int3
mov
adc
pop
wrmsr
movl
shl
insb
lret
out
mov
xlat
push
flds
addl
test
push
inc
lahf
stos
rolb
fstpt
mov
add
sbb
movl
xchg
jmp
push
cmp
and
mov
inc
neg
jne
scas
cmpsb
aad
inc
mov
ss
stc
fstpt
es
adc
js
testb
inc
inc
push
call
and
jmp
xchg
andl
in
addr16
jb
daa
adc
aad
imul
mov
test
adc
enter
inc
fstpl
push
dec
ss
xchg
adc
mov
pop
repnz
jno
ret
xchg
xchg
push
adc
or
loopne
xchg
add
or
sub
testl
lea
inc
inc
inc
dec
pop
mov
push
bound
mov
push
mov
and
repnz
stos
jne
in
rol
or
add
test
or
fiaddl
adc
dec
out
add
fcmovnb
jg
push
pushf
pop
pop
jbe
std
xchg
dec
sub
inc
aam
jb
cmc
mov
rolb
pop
or
inc
push
jge
mov
daa
pop
fcomps
fadds
sbb
jb
inc
adc
xchg
in
insl
sub
nop
ret
pop
push
adc
add
repnz
ljmp
sub
popf
and
xchg
mov
adc
cmpsb
xchg
cmc
add
adc
pop
cmpsb
out
dec
es
sub
loope
mov
loope
cmc
movsl
out
incl
and
lea
dec
cwtl
out
and
jmp
lods
jb
pushf
cmp
jp
ljmp
and
push
sbb
jns
sti
repnz
fdivrs
or
decl
das
cltd
mov
dec
add
dec
mov
clc
lret
js
and
out
repnz
mov
sbb
xchg
int
nop
leave
shlb
stos
jae
xor
push
test
xor
mov
popa
jnp
enter
sub
rclb
dec
loop
pop
sbb
movsb
adc
popf
jb
inc
dec
lods
jno
pusha
cmc
enter
adc
in
loope
mov
mov
cmp
sarl
mov
sbb
and
test
shrl
aas
dec
loop
mov
push
xchg
and
sub
mov
cmpsb
cmp
loopne
cli
cmp
pop
popa
scas
inc
inc
xchg
arpl
stos
push
push
imul
cmpsl
inc
pop
mov
ss
test
pushf
push
loope,pt
les
cmp
push
or
insl
mov
or
dec
xlat
je
int3
jo
xlat
mov
in
jae
push
outsl
jg
cmp
shl
or
pop
fcoms
ss
fdivp
push
mov
out
jb
sub
xor
lock
sub
sbb
fcmovb
scas
lahf
test
push
out
pop
push
cmp
inc
xchg
xchg
mov
iret
call
mov
maskmovq
notl
ljmp
out
sarb
pop
xor
cmpsl
mov
adc
mov
and
mov
push
loope
xchg
testl
add
cmc
outsb
aad
popl
cmp
stc
jl
or
inc
cmp
fistpl
jmp
sub
push
sub
add
pop
cs
popa
sub
add
es
shlb
pusha
sbb
adc
std
jnp
loopne
adc
xchg
dec
push
stos
mov
xchg
cmp
pusha
loope
inc
in
pop
call
iret
sbb
adcl
jns
out
pop
clc
cltd
mov
pop
rorl
jecxz
and
stos
inc
mov
xchg
xchg
push
adc
cmp
xor
data16
cmpsb
jl
jb
inc
dec
out
dec
add
lret
or
orl
clc
mulb
ljmp
andb
popf
pop
icebp
imul
vmwrite
fdivrs
mov
push
sahf
ret
popa
popf
push
push
inc
loopne
gs
test
int3
jl
icebp
mov
gs
jnp
into
mov
adc
sub
orl
hlt
fucom
jecxz
cwtl
aas
jle
push
fstpt
test
mov
sahf
addr16
dec
mov
testb
iret
mov
mov
arpl
gs
xor
lahf
mov
in
mov
scas
test
loopne
aas
mov
mov
and
sbb
mov
cmc
xchg
mov
shrb
pop
cltd
jecxz
mov
add
std
lds
jbe
add
mov
mov
sbb
inc
fnstenv
pop
adc
and
jecxz
sbb
test
inc
sub
repnz
test
notb
movsl
inc
icebp
sbb
arpl
stos
push
add
or
mov
or
popa
pop
sub
push
xor
jmp
add
jae
loope
stos
mov
add
loopne
pop
mov
mov
pop
dec
mov
rol
fmuls
cs
stc
sub
sbb
les
add
mov
lahf
daa
mov
fwait
call
sbbl
xchg
sub
cmp
mov
jl
add
adc
mov
push
outsl
and
sbb
ficompl
scas
push
ja
int3
inc
jl
add
dec
insl
stos
mov
push
mov
clc
adc
jb
sub
popf
pop
jne
adc
cmp
inc
int
pusha
lods
xchg
mov
adc
mov
mov
jb
mov
loopne
ljmp
jb
sarb
aam
add
sahf
or
sti
les
fbld
pop
outsb
fs
pop
insb
or
dec
in
add
bound
cwtl
insb
and
adc
in
pop
add
jl,pt
jl
adc
sti
and
mov
push
and
popa
das
cmp
pushf
std
cmp
ja
ds
out
test
dec
pop
scas
jbe
shl
sub
dec
aas
push
jl
rcr
sub
bnd
sub
sbb
mov
test
xor
mov
mov
popf
sbb
arpl
aaa
out
popa
lods
mov
jle
dec
lock
fstpt
or
xchg
scas
scas
out
sti
lea
test
add
lret
or
pop
popf
rorb
xor
imul
push
mov
mov
scas
daa
cmp
add
daa
cmp
clc
push
fiaddl
mov
aas
add
out
fnstsw
jae
test
inc
xchg
mov
shll
dec
cmp
shlb
int
add
jns
push
es
subb
rcll
adc
sbb
loope
inc
cmp
lock
pop
into
mov
sub
out
rcll
rclb
xchg
dec
xor
or
push
cli
add
js
mov
push
fsubl
xor
dec
push
ljmp
adc
xchg
xchg
inc
in
and
add
mov
movsl
inc
fcmovbe
jle
xor
hlt
lods
cwtl
out
pop
adc
and
xchg
jns
loopne
jle
mull
push
jne
inc
mov
push
cmp
pop
xchg
jmp
or
lock
fiadds
pop
cltd
int3
cmp
mov
pop
sub
mov
dec
jne
sub
repz
out
dec
shll
in
mov
ror
clc
iret
pop
ret
lock
cld
out
sahf
sbb
fldenv
cs
mov
out
add
jns
adc
fbstp
adc
mov
sub
or
out
loope
inc
jecxz
fdivr
subb
loopne
or
pop
out
sti
notl
inc
hlt
cs
xchg
sbb
jmp
jge
mov
jp
jmp
xchg
add
stc
or
test
xchg
sub
movsb
mov
insb
scas
and
lea
hlt
aam
jno
inc
jge
sti
push
mov
or
loopne
xchg
not
push
add
or
or
daa
or
into
sub
outsl
xor
add
pop
out
sti
repnz
pusha
mov
fidivrl
or
mov
insl
mov
jp
sub
sahf
adc
cmpb
shlb
push
mov
fsts
pop
testb
lds
out
add
pop
sub
packssdw
inc
bound
dec
mov
and
mov
repz
cmp
out
pop
and
les
shrb
lcall
test
aas
dec
jae
push
push
aas
xchg
sbb
xor
xorl
sahf
xor
xor
xchg
sbb
inc
inc
in
fs
mov
lcall
out
adc
adc
test
cmpsb
arpl
sub
jne
dec
test
push
out
or
stos
stc
jns
xchg
jb
jge
adc
sub
js
adc
movsl
cltd
xlat
sub
jg
int3
stos
jp
jnp
mov
rclb
jnp,pn
fwait
das
insb
popf
or
cmp
out
jbe
inc
outsb
std
gs
jp
mov
je
xchg
cmp
or
cmpsl
jmp
jae
insl
daa
lods
xchg
fwait
xor
into
cmp
xor
les
push
push
mov
imul
push
fistps
iret
cmpsb
int3
add
bound
jbe
or
insl
les
stc
ja
outsl
mov
mulb
out
push
cmc
sti
push
pop
lahf
mov
cltd
xor
push
int3
cmp
ja
imul
fwait
test
xor
add
and
dec
shlb
jecxz
jae
fbstp
pop
cmp
outsl
mull
jle
out
sbb
scas
fsts
adc
push
jae
inc
sbb
aad
addr16
je
in
pop
push
insl
xchg
cmp
scas
hlt
mov
repnz
mov
xchg
adc
mov
jp,pn
pop
cmp
inc
iret
push
jb
inc
fsts
fnstsw
je
push
jns
push
push
fistpl
push
push
push
shrl
loop
nop
dec
iret
dec
enter
cmp
clc
push
inc
fimull
outsb
in
pusha
sub
pop
push
dec
mov
and
pushf
jmp
sub
ficoml
push
pop
pop
mov
cmpsl
cmp
ret
lods
movsb
out
pop
fisubrs
cld
pop
bound
popf
inc
and
jne
ret
push
int3
and
push
movsl
pusha
clc
push
call
xchg
dec
ja
xchg
mov
in
out
jle
push
enter
addr16
mov
pop
movsl
cs
add
jle
xchg
test
sbb
icebp
cmp
and
xchg
jl
adc
or
fcoms
or
add
rcrb
xchg
and
mov
sub
xor
xchg
out
mov
push
or
xor
cmp
gs
jo
sti
jp
mov
mov
xchg
jnp
lcall
arpl
or
int
xor
sub
jge
cmpb
lahf
jge
inc
inc
les
fimull
pop
xor
adc
push
mov
mov
or
or
gs
fsubr
in
bound
ror
jne
jo
push
shrl
js
cltd
jae
dec
push
add
nop
unpcklps
lea
popf
cmp
cmp
sbb
or
inc
mov
mov
out
pop
divps
adc
sbb
jne
es
ret
jns
dec
fcompl
add
xor
mov
pushf
xor
in
subb
loope
mov
imul
pop
inc
push
inc
clc
mov
pop
push
mov
lcall
cmp
popf
sbb
push
pop
and
or
stos
pop
mov
int
imul
jno
notl
mov
rclb
jno
sub
stos
fsubrs
jmp
sarb
mov
ss
stos
mov
gs
fwait
push
push
jmp
mov
call
jne
cmp
rorl
jg
mov
popf
hlt
aaa
leave
out
jl
pop
or
pushf
scas
jle
mov
sbb
in
fwait
call
cld
mov
fsub
or
or
lds
loop
adc
push
ret
nop
add
jnp
nop
and
gs
rol
icebp
sbb
test
lret
xchg
fsts
xchg
mov
in
mov
fcmovb
push
and
stc
call
cs
xor
das
pop
lcall
test
inc
sahf
mov
sub
movb
mov
in
jns
mov
xor
adc
scas
cmp
inc
les
cmp
dec
adc
xor
mov
int
sub
pop
aas
cs
pop
push
enter
imul
cmpsl
mov
popa
in
cmp
pop
pop
hlt
jle
dec
push
cmp
popf
nop
fisubrl
push
cltd
and
fdivl
lods
lods
popf
mov
xchg
and
addr16
leave
add
ret
adc
push
test
ret
mov
les
adc
pop
mov
int
sub
push
mov
sti
or
stos
xchg
sub
inc
call
fwait
xchg
insb
xchg
sub
fisubl
xchg
mov
mov
mov
imul
dec
add
stos
inc
sti
bts
jmp
iret
mov
and
mov
subb
or
pop
xchg
jge
shrb
fldcw
pusha
dec
int3
pop
arpl
inc
insl
aas
hlt
and
sarb
mov
movsb
mov
pop
xor
rcl
push
loopne
mov
int3
jnp
ljmp
movsb
adc
or
xor
inc
xchg
jns
jmp
lcall
jo
add
imul
faddp
in
adc
push
cmp
mov
mov
mov
das
sub
pop
push
lods
in
jbe
mov
int3
or
sub
int3
or
cmc
cmc
mov
add
popf
mov
add
dec
insb
push
jmp
cmpsb
mov
das
add
mov
mov
in
push
movsl
sub
xchg
jg
xchg
lahf
outsl
ror
mov
adc
push
jmp
or
outsb
std
sbb
mov
fsub
push
jb
call
pop
xor
mov
imul
ss
xor
inc
fsubs
inc
xor
or
lods
movsl
push
popf
lret
jnp
popf
xor
pushf
out
push
insl
xor
xor
movsl
push
mov
sahf
lods
icebp
leave
cmp
fldcw
mov
push
inc
dec
data16
add
xchg
cltd
or
dec
sbb
jmp
add
and
data16
or
inc
es
lds
movsl
sub
mov
je
jne
subb
pop
push
push
outsl
daa
and
xchg
push
sbb
out
push
gs
movsl
mov
mov
aam
addr16
pcmpgtd
daa
in
mov
insb
adc
rcrb
mov
cmp
xor
cwtl
pop
xor
or
mov
popa
in
fnsave
mov
sbb
push
out
inc
leave
mov
push
rcrl
out
subb
xchg
add
pop
mov
flds
or
das
movsl
inc
pop
mov
xor
cmova
aas
in
mov
jo
dec
cmp
mov
xsha1
cmpsb
xlat
out
out
xchg
mov
mov
mov
bound
sti
fwait
pop
cmp
add
add
push
mov
pop
ss
add
xchg
stc
xchg
and
addl
xchg
pop
inc
out
cli
loop
mov
stos
mov
adc
arpl
inc
add
xor
ret
cli
dec
loop
adc
ror
loop
fidivl
and
or
ljmp
sar
mov
xlat
xchg
pop
outsl
iret
cmp
pop
outsl
push
loop
bound
sbb
fs
inc
stos
xchg
cli
cmp
and
adc
daa
or
mov
mov
loopne
pop
std
xchg
scas
aaa
leave
and
cmp
incb
hlt
shlb
lcall
add
test
icebp
fs
mulb
cs
cmpsb
out
inc
lret
cs
cmp
inc
dec
shlb
shll
fiaddl
add
sub
sub
data16
inc
dec
aaa
cli
insb
lea
dec
sbb
mov
jo
jecxz
and
jmp
int3
sbb
dec
sbb
cltd
xor
jp
inc
pushl
sbb
adc
stc
inc
adc
xchg
cmpsl
loop
adc
inc
lcall
xchg
sahf
jno
mov
fsubrl
add
or
xlat
mov
sbb
cmp
lahf
fcompl
cmc
paddusb
or
ret
lahf
js
push
mov
nop
arpl
pop
sub
mov
pushf
lret
fdiv
sub
dec
xchg
std
sti
repz
vandnps
lds
mov
dec
or
mov
mov
xchg
mull
int
cmp
adc
or
fiadds
mov
adc
mov
jle
test
xchg
cmp
mov
int3
fwait
sub
fisttpl
enter
push
push
push
jnp
pop
sub
js
jb
and
push
xchg
mov
and
sbb
sbb
fwait
je
mov
pusha
mov
mov
inc
pop
lock
in
cmp
call
adc
push
fnsave
push
sub
sti
xchg
rorl
aaa
int
shlb
pcmpeqb
push
mov
into
and
mov
and
stos
and
fucomi
xchg
daa
sub
inc
js
mov
sbb
pop
sub
adc
sbb
sub
inc
pop
push
mov
cmp
int3
into
fcmovb
inc
inc
mov
or
andb
push
jmp
ret
push
push
mov
les
sbb
test
ja
in
daa
lcall
in
leave
jo
jo
ljmp
jge
or
rcl
fisttps
roll
lcall
pushf
mov
ds
pop
dec
in
in
and
sbb
xchg
jo
mov
subb
hlt
iret
sub
push
lcall
sahf
jmp
stos
cltd
mov
adc
and
arpl
xchg
pop
xchg
cmpsb
add
cld
inc
and
sbb
ja
pusha
aam
push
jl
push
xor
scas
popa
xchg
dec
adc
xor
pop
push
sub
lods
inc
iret
jecxz
fistps
lcall
xor
jle
psubq
lret
adc
mov
or
repz
shl
test
add
aam
cmp
jp
pop
lods
sbbl
cmpsb
inc
or
jp
enter
pop
inc
fsubr
jne
pop
repz
fsubr
pop
or
jl
inc
aam
mov
xchg
jns
in
and
fbstp
test
push
stos
inc
fdivrl
lcall
mov
aam
xchg
lock
dec
out
pop
pop
fwait
scas
mov
xchg
repz
pop
add
sbb
inc
adc
sbb
mov
mov
lret
fistpll
arpl
cmc
daa
mov
xchg
mov
dec
aaa
aaa
lods
add
mov
insl
xchg
dec
jnp
push
push
or
aaa
jmp
imul
mov
push
sub
test
cmc
sti
mov
ja
jno
aam
jle
aaa
push
ret
mov
xchg
push
addr16
adc
aad
inc
jle
leave
scas
arpl
cmpb
stos
inc
cmp
jno
call
or
inc
cwtl
mov
inc
pop
adc
pop
mov
push
sub
orb
add
push
out
std
push
in
mov
push
fxch
xchg
pop
divb
inc
rorl
add
sbb
mov
aad
std
sbb
mov
inc
add
push
mov
lcall
daa
push
dec
outsl
outsb
cmp
scas
shl
mov
addr16
bound
sub
lcall
insb
popa
cs
sbb
inc
xchg
adc
js
mov
movsb
insl
push
subb
add
cmpsl
repz
xchg
and
sbb
lods
mov
scas
sbb
les
cmp
and
sbb
inc
ss
fldl
psubq
mov
loopne
out
out
aas
roll
cs
fsubrl
xor
loope
fmul
sbb
clc
repnz
mov
or
aam
fists
push
out
pop
lahf
pop
mov
sqrtps
dec
mov
push
orl
add
movsl
push
inc
jl
aaa
imul
ja
mov
xor
or
dec
popf
inc
sbb
pop
jno
lea
popa
xchg
clc
dec
js
xor
cwtl
xor
leave
mov
mov
sub
fstps
js
inc
jmp
mov
lods
inc
pop
rorb
rcll
inc
dec
aaa
jb
nop
xor
ret
std
cmp
xorb
xor
add
dec
mov
adc
test
push
inc
mov
lods
cmpsb
pop
imul
mov
jnp
lock
sbb
mov
ds
jno
ljmp
mov
push
movsl
inc
adc
int
in
add
inc
xlat
aam
jbe
and
sti
pop
dec
and
dec
jmp
outsl
cmc
sbbl
aas
push
inc
hlt
mov
jae
cmp
adc
mov
je
push
add
xchg
jge
pop
xlat
sbb
mov
lds
flds
mov
cmp
cmpsl
inc
jge
rcrl
sub
push
pop
cmp
cmpl
add
movl
push
outsl
test
xchg
cwtl
jns
mov
rorb
pop
dec
lret
inc
adc
xchg
dec
dec
addr16
int3
mov
ds
jecxz
mov
daa
mov
push
xor
jmp
or
inc
mov
inc
jge
mov
stos
in
adc
enter
mov
test
mov
add
data16
xchg
pop
pop
in
xchg
gs
mov
mov
pop
dec
xlat
pop
xor
jb
xchg
jbe
cmp
pop
fidivs
sbb
mov
xor
jno
pop
xor
call
xchg
cli
sub
adc
data16
jo
lret
aad
notb
fidivrl
lods
lret
in
les
in
in
lods
in
add
add
inc
aad
cmpsb
bound
pushf
dec
inc
loop
mov
pusha
testl
sub
pop
add
pop
imul
mov
ret
shl
xacquire
aaa
push
repnz
ljmp
stc
in
repz
popa
xor
movsl
inc
jecxz
jnp
hlt
lock
lcall
or
les
adc
nop
xor
xlat
mov
repnz
imul
jecxz
hlt
adc
lds
insb
add
cltd
or
pop
pop
fldenv
push
mov
imul
hlt
mov
push
in
call
or
lret
movsb
pushf
fildll
repnz
call
sbb
adc
out
and
push
xor
fsubs
dec
arpl
jnp
pop
pop
fs
sub
sbb
incb
mov
push
repz
into
cmp
jecxz
nop
adc
sbb
sbb
inc
or
mov
fadd
insb
dec
adc
xchg
mov
push
in
cltd
subl
push
lods
adc
or
les
pop
xor
into
ret
movsb
rcrb
enter
jl
in
mov
cmp
lods
cs
leave
test
mov
arpl
mov
jns
mov
ljmp
insl
aam
decb
mov
sub
sub
dec
sarl
jae
iret
mov
add
scas
dec
mov
jecxz
and
outsl
or
fsubrs
add
loop
jo
or
jbe
mov
push
inc
subb
out
xor
pusha
sub
cmp
dec
out
inc
sahf
lds
and
data16
rorb
loopne
daa
xchg
sub
rcrl
or
loope
mov
out
sti
adc
sbbl
dec
insb
inc
dec
icebp
orl
test
cltd
movsb
addr16
enter
pop
add
mov
imul
lcall
push
jg
xchg
out
cmpsl
out
scas
fimull
insl
movsl
ljmp
cmp
adc
add
out
adc
int
fucomp
decl
leave
arpl
lcall
js
mov
testl
sbb
xor
mov
enter
and
dec
scas
add
inc
cmp
dec
loope
rcll
mov
ss
loopne
push
fsubs
mov
and
xor
jb
dec
int
xlat
ja
xchg
insl
push
shlb
add
adc
test
stc
cmpl
pop
das
int
shll
sahf
arpl
and
push
sbb
push
push
jnp
mov
jno
pusha
stos
fcmovbe
cs
add
scas
inc
jge
xor
aad
imul
adc
mov
xchg
lock
adc
sbb
pop
push
dec
mov
adc
lcall
mov
inc
dec
mov
jle
imul
loop
icebp
or
pop
push
incb
fcmovnb
xor
xor
xor
sbb
lds
xchg
inc
stc
sub
cmp
mov
daa
lods
aam
pusha
add
dec
add
test
test
sbb
inc
or
nop
xor
pop
mov
mov
daa
ja
cmp
fstps
inc
mov
dec
sti
xor
sbb
pop
ja
les
cmp
out
xorb
es
xchg
jne
adc
jnp
arpl
subl
iret
push
or
aaa
push
push
andl
lret
mulb
test
pop
lret
inc
fst
pop
dec
mov
and
pop
scas
incl
mov
aam
ja
xor
gs
and
std
repz
aad
dec
push
push
inc
pusha
jge
cwtl
repz
shll
mov
enter
add
sbbl
lret
push
fdivrl
call
flds
lret
pop
por
mov
mov
shrb
out
in
dec
mov
lcall
cmp
mov
lret
mov
and
adc
es
pop
out
leave
push
sahf
scas
mov
aam
jl
jp
add
sbb
popf
mov
mov
inc
mov
in
fwait
mov
gs
mov
mov
mov
mov
stos
cmc
orb
lock
stos
xchg
sarl
mov
gs
sbb
xchg
pusha
call
and
pop
jb
shr
rorl
mov
sub
dec
cmc
jge
xor
xchg
sahf
or
repz
pop
mov
pop
push
inc
aas
mov
push
aad
enter
jne
pop
sbb
daa
mov
in
stc
cltd
adc
loop
cmpsb
dec
and
inc
xlat
jne
add
out
movsb
pop
not
lret
jb
iret
or
mov
dec
mov
out
xchg
mov
jbe
add
lea
push
xor
mov
pop
scas
scas
xchg
cmc
fcmovne
lahf
inc
lahf
cld
cmp
cs
jmp
aaa
pop
test
xor
mov
inc
jl
cmpsb
mov
xor
ret
xor
sti
push
mov
bound
shll
jo
lahf
outsb
scas
movsb
or
cmp
mov
jg
pusha
inc
testb
xchg
sub
sbb
lcall
imul
xlat
sbb
lds
jge
sbb
mov
mov
icebp
popa
popa
sub
sbb
dec
in
mov
mov
push
rorl
test
inc
push
mov
push
out
fmuls
popa
or
dec
push
fcomi
into
mov
push
sub
jmp
nop
pusha
repnz
xchg
jno
fs
xlat
mov
je
icebp
gs
iret
xchg
test
inc
dec
stc
jbe
sub
and
lds
lret
push
xor
lcall
cmpsb
sbb
popa
stos
es
adc
push
sbb
in
or
sub
sub
out
inc
out
add
or
mov
mov
std
mov
fsubl
or
jmp
and
dec
int
repnz
xchg
xor
or
and
and
mov
mov
and
xchg
pushf
xor
mov
jmp
adcl
sbb
jae
loope
outsb
enter
es
arpl
shrl
xchg
dec
jecxz
jecxz
fs
mov
jge
cwtl
xchg
add
mov
mov
sbb
fcmovnu
decb
cmp
push
pusha
and
sbbl
mov
int3
int3
pop
jmp
pop
scas
mov
jbe
lods
cmp
lea
ds
in
stos
iret
data16
cmpsb
inc
popf
mov
jmp
mov
push
movsb
test
test
rorl
dec
sti
mov
insl
call
and
popf
sub
pop
ret
sub
daa
fmull
pop
xor
or
test
xchg
mov
sub
pushf
add
out
sub
mov
std
cltd
pop
insb
add
xor
sbb
pop
mov
aad
addb
jnp
aas
lret
inc
and
and
mov
inc
xchg
push
cmp
push
mov
or
dec
mov
xchg
mov
sub
jnp
jno
xchg
nop
xor
fstl
pop
adc
mov
xor
hlt
mov
adc
fldt
jle
inc
pop
adc
cmc
mov
pop
mov
mov
cmp
xchg
jbe
lods
xor
xor
xchg
mov
adc
enter
dec
ret
mov
shll
arpl
sbb
test
push
imul
cmc
xlat
jmp
out
rcll
mov
aaa
and
mov
ljmp
test
test
cli
jp
sbb
loope
pop
ja
out
pop
addr16
mov
daa
outsl
mov
mov
pop
fisubl
xor
mov
jns
mov
and
stc
inc
pop
lahf
mov
mov
sbb
cld
int3
lods
mov
xchg
pop
mov
or
jl
ret
test
dec
ret
xchg
jb
nop
jecxz
mov
jmp
sub
dec
pop
mov
xchg
out
test
xchg
aad
repnz
arpl
pop
aad
outsb
rol
xchg
mov
push
adc
or
mov
cltd
cld
sahf
sbb
jecxz
mov
or
jbe
adc
lahf
adc
sbb
jno
jg
push
shrb
pushf
add
mov
aad
into
push
jmp
dec
or
jbe
mov
mov
std
inc
mov
sbb
int
and
cmp
test
lret
cld
jl
rcrl
dec
fcoms
hlt
fdiv
push
push
roll
cmpb
inc
dec
scas
and
mov
fidivl
les
push
mov
movsl
icebp
nop
iret
loope
cmp
push
jne
inc
xchg
in
rcrb
jl
mov
fisubs
lock
jno
mov
push
push
cmp
test
sbb
loope
xchg
xlat
es
mov
addl
ds
ficoml
scas
aaa
repz
popa
cmp
leave
roll
dec
cmpl
jne
aas
popf
mov
rol
xor
push
and
fbld
push
mov
mov
iret
lahf
pushf
sti
shl
fwait
lret
xlat
adc
les
mov
subl
into
xor
pop
ljmp
cmp
mov
push
and
and
or
mov
in
jl
inc
push
add
stos
es
push
mov
jl
or
pop
mov
cmpsb
mov
mov
fmuls
roll
cmp
js
leave
dec
shlb
sti
xchg
dec
or
inc
mov
or
hlt
xchg
sub
sub
adc
dec
loope
popf
mov
dec
lock
xor
out
aaa
or
test
xchg
clc
stos
mov
or
pop
scas
rorl
pop
and
hlt
xor
fidivrl
add
pushf
or
adc
ds
push
dec
enter
inc
addr16
std
in
add
sub
aaa
pop
bound
adc
mov
pop
ds
mov
jmp
mov
lret
mov
inc
std
pop
jo
into
inc
es
clc
test
xchg
xchg
insb
xorl
inc
out
and
sbb
enter
repz
and
int
and
gs
gs
imul
dec
call
stc
fcmove
lods
out
iret
js
and
loopne
xchg
push
scas
stos
mov
pop
sub
xadd
add
movsl
dec
pop
ljmp
and
cmp
aaa
push
sub
push
sahf
jno
lea
and
shr
lds
or
sarl
and
sub
pop
xor
hlt
or
sbb
mov
js
repnz
xchg
out
lret
mov
fcom
mov
lock
dec
cli
cli
and
fst
mov
shl
mov
pop
fnsave
push
mov
std
stos
push
or
lds
xchg
pop
stos
dec
xorb
mov
fmull
mov
iret
or
cmp
cmp
xchg
dec
push
clc
add
loop
and
repnz
sub
mov
xor
jb
push
imul
fdivrs
pop
push
out
aas
ljmp
mov
lds
lcall
pusha
mov
cwtl
test
and
mov
adc
mov
mov
icebp
ds
stos
inc
sub
mov
pop
sbb
push
movsl
or
xor
ja
jl
sub
outsl
sti
jnp
dec
jmp
shl
adc
or
lea
sub
sbb
addr16
int
xor
xlat
jo
mov
test
fmuls
mov
cmc
mov
ret
repz
lea
mov
jo
std
sub
mov
push
or
mov
cmp
jmp
pop
push
jmp
inc
push
cmp
mov
punpckhdq
pop
in
mov
or
inc
push
sbb
cmpsb
jno
mov
cmp
adc
mov
dec
sbb
xchg
and
test
in
mov
int
adc
cmpl
int
std
adc
pop
aam
dec
and
clc
jbe
mov
pop
stc
sahf
jmp
stc
push
add
sbb
icebp
int3
sub
xchg
out
pop
sti
leave
or
dec
inc
sbb
out
cld
fwait
popf
add
inc
cmp
inc
lret
pop
lock
cmpsl
push
pop
sub
fistpl
mov
mov
xor
xor
and
fwait
push
inc
ljmp
push
sub
xchg
and
mov
mov
adc
movl
inc
fsubrs
push
rclb
notl
inc
pop
cmp
and
std
and
rorb
arpl
mov
sbb
pop
aaa
mov
mov
and
add
add
cmpsl
xchg
in
ljmp
jp
in
jbe
inc
repnz
std
mov
or
cmp
mov
cmpsl
in
mov
mov
mov
shlb
fsubrs
rcrb
incl
sbb
jbe
mov
sbb
mov
xor
jge
jecxz
pop
imul
inc
lret
cmp
cmp
inc
sbb
mov
cmp
dec
and
push
fwait
sbb
andb
ja
outsl
out
lds
mov
enter
xchg
dec
pusha
popf
mov
mov
cmpsl
adc
cwtl
push
dec
mov
out
push
sub
mov
bndstx
test
adc
lea
cli
xchg
test
arpl
aaa
test
pop
and
mov
cmp
mov
add
int3
lods
pusha
lods
mov
dec
mov
fisubrs
fwait
jecxz
xchg
jmp
addr16
leave
adc
mov
fwait
mov
icebp
sbb
xchg
sahf
pop
inc
fsub
jg
shrb
inc
lret
mov
hlt
imul
cwtl
cmp
dec
out
pop
mov
adc
dec
jb
sbb
mov
cmp
cmp
push
ljmp
jno
pop
lods
jne
sub
sub
lods
imul
adc
mov
jmp
loopne
cltd
loope
sbbb
out
out
mov
jns
mov
jae
loop
ljmp
or
push
cmp
jae
shrb
stos
add
or
adc
insl
lret
mov
stos
mov
xchg
mov
jo
jl
in
movsl
add
cltd
movsl
stos
pushf
subb
mov
and
jmp
mov
ret
push
mov
pop
clc
xor
imul
mov
inc
mov
mov
mov
adc
pop
cmpsb
jns
jge
xor
scas
push
fmull
dec
aam
insl
in
loopne
ss
fucomip
call
insl
jns
push
mov
mov
pop
rcrb
push
les
cmp
dec
or
xchg
xchg
mov
add
xor
dec
std
inc
dec
push
cwtl
and
jge
sbb
sub
shlb
out
xchg
dec
popa
adc
jno
outsb
ss
pushf
push
mov
sbb
mov
pop
dec
add
pop
mov
ds
push
adc
lods
or
mov
test
mov
fistpl
stos
dec
sub
repnz
jle
arpl
sub
adcl
out
shrl
pop
add
pop
add
lcall
push
in
sub
inc
xor
scas
out
mov
aaa
cmc
xor
data16
ljmp
mov
mov
or
adc
dec
nop
jl
lods
cs
mov
pop
aam
and
or
ja
mov
test
test
ss
daa
jge
dec
dec
cwtl
cmp
and
jp
adc
daa
cmp
aam
pusha
pop
dec
pop
mov
lret
mov
fsubs
dec
inc
pop
inc
ds
lahf
aas
xor
frstor
inc
packssdw
es
test
xchg
pop
mov
mov
jmp
pop
pop
cmp
sub
cli
call
sbb
ret
cmp
sahf
pop
sbb
adc
pop
scas
out
pusha
shlb
pop
cmpsl
fsubs
xlat
fidivl
or
cld
push
mov
xor
mov
lds
xchg
fimuls
xchg
mov
sub
mov
mov
jl
sbb
aad
mov
push
xor
fwait
ja
fwait
push
xchg
push
cmpb
sub
xchg
xlat
in
dec
fdivs
fldenv
mov
push
clc
negb
jp
insl
dec
ds
cld
xor
insb
xchg
enter
in
cmc
push
mov
das
into
out
pop
in
dec
out
clc
repnz
push
sbb
pop
adc
mov
ljmp
push
test
mov
cmp
movsl
xor
test
inc
xor
jo
jl
arpl
sbb
xor
xchg
sub
in
mov
mull
in
dec
push
mov
jmp
dec
mov
pusha
das
or
je
push
mov
dec
sbb
insb
dec
loop
cmc
pop
popa
cmpl
xchg
cmp
jmp
pushl
fisubs
rorb
arpl
rcrb
jle
ljmp
paddd
ja
xor
loope
xchg
mov
mov
mov
clc
les
flds
inc
sbb
out
push
movsl
aam
sahf
sub
sub
add
call
push
push
jg
push
jl
cmp
fwait
and
mov
stos
add
add
test
scas
in
pop
sbb
add
lahf
outsb
in
sbbl
fsubl
cmp
pop
je
cmp
in
add
add
inc
mov
stos
int
jo
cli
cmp
pop
in
lea
push
loopne
and
dec
inc
jmp
adc
mov
dec
daa
jge
pop
rclb
not
mov
xlat
xlat
mov
jle
aad
addr16
enter
daa
pop
add
stos
ljmp
dec
adc
into
sbb
or
aaa
in
loopne
test
imul
sti
repnz
or
or
jge
aas
aad
mov
push
jne
or
popf
jo
sub
adc
cld
int3
adc
data16
stc
movsb
or
lock
inc
sahf
jg
mov
or
inc
test
dec
sbb
sahf
adc
int
mov
leave
out
test
dec
cmp
leave
push
dec
aas
les
leave
pusha
dec
pop
xlat
fsub
je
push
pop
push
jnp
dec
cltd
dec
push
jmp
mov
sbb
ret
addr16
inc
cmp
pop
xchg
sbb
inc
dec
and
ljmp
push
mulb
mov
imull
push
cmc
cmp
js
push
push
movsl
pusha
push
and
xchg
lret
xlat
imul
sub
ss
push
adc
test
mov
fdivrl
push
out
sbb
addr16
outsb
rcrl
jge
stos
pusha
neg
iret
lcall
adc
jp
sbbb
and
sbb
dec
cmpsl
adc
pop
rclb
add
je
inc
lret
xchg
andl
jae
push
xchg
sub
adc
ret
add
mov
xor
cmpl
fistpl
mov
jp
push
in
aaa
push
cmp
push
nop
aas
cmpsb
inc
dec
and
enter
pop
jo
andb
popf
push
rorl
jge
and
hlt
mov
pop
cli
lods
jnp
cs
mov
cmc
cmpsb
cmp
mov
sbb
shrl
adc
cmp
sbb
stos
or
xor
test
sbbb
mov
lahf
dec
and
mov
fiaddl
cmpl
mov
adc
pop
addl
mov
fisttpll
ret
stos
pop
inc
loope
scas
pusha
daa
sub
mov
sub
cmp
pop
jge
mov
fstpl
mov
push
cmp
jp
aas
loopne
xchg
xchg
adc
sub
lahf
orb
std
mov
sbb
shlb
adc
cmp
sub
dec
shlb
idivb
scas
outsl
pushf
xor
shl
fisttps
das
dec
xchg
mov
dec
jns
push
cli
sub
ror
cwtl
lods
push
lret
sub
cmp
xor
stos
mov
push
pop
shll
pop
jnp
aaa
xchg
fildll
in
inc
roll
jmp
repnz
mov
adc
mov
cmp
loope
pop
mov
lahf
addl
stos
sahf
dec
xor
lcall
sahf
gs
cmpsl
cmp
sbb
mov
cli
push
jmp
mov
jb
jmp
bound
push
add
aaa
jns
mov
inc
insb
or
sarl
loopne
and
pop
fimull
ja
icebp
test
mov
das
sti
imul
dec
xchg
int
imul
nop
test
addr16
shrl
lock
repz
push
roll
mov
jge
outsl
aaa
push
jmp
or
jg
cmp
clc
or
jns
std
mov
popa
add
lea
nop
jo
push
cld
pop
fstpl
cltd
pop
hlt
out
mov
jge
fs
sub
xor
inc
fldt
push
in
xchg
popa
fmull
mov
or
push
mov
jp
cmp
filds
push
fucomp
test
and
sbb
sbb
cmp
push
insb
cli
out
jae
cmp
add
movsl
or
lock
mov
pop
mov
int3
cltd
add
in
xchg
loop
cmpsl
ret
push
sbb
lcall
lahf
in
xchg
ds
stos
inc
push
hlt
sub
xor
rol
repnz
aad
add
sub
sub
les
repnz
clc
jl
pop
scas
sbb
lret
ret
out
add
shll
dec
roll
es
stc
jno
inc
pusha
push
es
cltd
cmc
or
jo
into
xchg
hlt
fs
sbb
sub
imulb
fidivrs
popf
in
dec
and
push
imul
popf
jno
or
mov
lods
out
arpl
xchg
adc
gs
insb
scas
aas
jl
adc
cmp
mov
stos
fdivrl
pop
mov
mov
mov
dec
mov
mov
mov
mov
jno
or
pop
xchg
lret
pusha
enter
pop
jmp
arpl
movsl
cmp
jle
xor
ja
rcrl
xchg
outsb
xchg
lea
insb
mov
sub
pop
int3
adc
fdivl
jmp
cld
outsl
mov
gs
mov
stc
or
xchg
inc
out
lcall
push
call
imul
cld
das
inc
shrb
pop
pop
enter
or
andb
icebp
xchg
jl
fiadds
lcall
lds
lea
inc
xor
addb
or
rorb
and
add
add
pop
rcrb
daa
jns
sub
and
cmp
out
mov
xor
dec
loopne
mov
cwtl
xor
in
aaa
fildl
lcall
ret
and
and
mov
mov
and
sti
rol
sub
pusha
xchg
filds
pop
fsubrs
push
fldt
adcb
add
inc
lea
cmc
std
push
push
lret
mov
repnz
incb
pop
fimull
fimull
dec
jg
cmp
mov
pop
sti
js
pop
loopne
mov
jle
sub
adc
mov
sub
mov
notl
push
pop
sub
dec
and
pop
out
pop
mov
add
adc
outsl
lret
or
fstl
xor
inc
ljmp
stc
fimuls
enter
dec
das
mov
movsb
in
or
add
notb
dec
cli
jb
lods
nop
sbb
dec
int
jnp
inc
push
fldl2t
jns
jge
sbb
jge
cld
jp
sbb
fldl
push
ficomps
fdivr
pop
xor
or
cmp
js
mov
cli
aas
push
cwtl
mov
push
in
in
push
ret
or
adc
imul
repz
adc
or
cmp
ss
xchg
push
ds
out
jno
add
test
sbb
lods
xor
repnz
out
pop
mov
add
outsl
scas
dec
fistps
xor
pop
andl
popa
mov
adc
mov
inc
mov
cmp
hlt
fcoms
stos
mov
add
pop
aad
movsb
and
add
adc
outsl
sbb
int3
out
push
push
mov
pop
inc
jns
negb
in
sub
arpl
enter
test
lds
repz
pop
rcll
cmpsb
lea
out
xchg
mov
aam
mov
xchg
jecxz
pop
adc
dec
mov
rcrb
sub
or
sbb
flds
push
xor
arpl
outsl
mov
outsb
aad
adc
or
lods
ds
pop
push
push
movsb
sbb
dec
and
loope
loopne
push
ficoml
aaa
and
loopne
pop
stc
adc
xchg
mov
push
mov
js
push
stos
and
adc
hlt
or
scas
dec
cli
xchg
jg
repnz
cli
mov
jo
xchg
jnp
xor
or
loopne
jp
dec
in
jns
pop
cmpsl
testb
sbb
fwait
nop
dec
stc
cld
mov
xor
in
std
rcl
pushf
ss
jge
mov
loopne
sub
jb
add
and
mov
sarl
stc
rcrl
imul
icebp
push
dec
push
mov
adc
imul
mov
sti
or
out
add
adc
sub
cmp
adc
arpl
mov
pop
ret
fwait
jo
mov
in
sbb
out
pop
xor
fwait
sbb
cmp
adc
enter
lcall
andb
and
call
divb
pop
cmp
dec
mov
data16
fstps
xor
dec
adc
stos
inc
cmp
push
or
mov
enter
cmp
cmpsl
out
pop
in
mov
mov
cmpsb
cmp
jge
repz
lcall
sbb
pop
xchg
in
sbb
jae
cmc
addr16
aaa
xchg
inc
inc
pop
cs
test
int3
jmp
lcall
mov
mov
rcrl
xor
data16
mov
dec
test
sbbb
push
adc
push
pop
cs
in
into
aam
jecxz
gs
and
into
sub
sub
add
mov
imul
sub
mov
xchg
adc
in
or
cltd
and
xchg
push
add
stc
cmpsl
repnz
mov
cmpsl
sub
test
rcrl
fdivrs
divb
pusha
inc
cmp
jle
call
sbb
hlt
mov
mov
fdivl
bound
icebp
fwait
ds
push
test
pop
js
inc
jb
mov
aad
outsb
repz
sub
int3
mov
pop
adc
mov
fiaddl
mov
adc
sbb
or
movsb
into
push
mov
cld
cld
jmp
lods
add
cld
outsl
sub
inc
outsl
push
adc
ror
and
repz
mov
shlb
sub
xor
test
or
fstpl
je
lods
jle
push
cmp
bound
aaa
pop
jge
rol
push
test
mov
and
cmp
shrl
ret
jo
das
in
pop
stc
in
int
cmp
es
mov
dec
test
add
push
std
stos
sub
mov
adc
push
push
pushf
mov
cmp
out
cltd
les
xchg
jmp
aaa
adc
iret
inc
std
mov
leave
lock
and
or
stos
xor
mov
fsubp
xchg
inc
andl
out
into
fistpll
testb
testb
mov
mov
les
xchg
push
xor
ret
or
shl
and
inc
jbe
or
inc
call
mov
jl
push
mov
mov
bound
pop
mov
fisubrs
popa
roll
loope
fbld
dec
dec
mov
fsubrs
push
stos
mov
xchg
or
lahf
sub
pusha
mov
jl
inc
fsubr
inc
addl
mov
lods
icebp
andb
pop
into
psrld
mov
movsl
sbb
out
call
xchg
add
mov
inc
pop
push
jmp
cmpsb
push
or
pop
push
stos
and
and
inc
dec
and
cltd
enter
mov
mov
scas
pusha
and
movsb
loope
jmp
jl
and
push
push
xchg
xchg
jmp
lret
xlat
adc
fildll
jo
jno
popa
lods
or
mov
fnsave
cmpsb
out
adc
idivl
sbb
insl
cmp
mov
ds
sahf
das
sbb
cmp
mov
scas
imul
into
adc
jg
or
add
jecxz
inc
sub
out
scas
ljmp
scas
jg
sbb
xor
sub
sbb
mov
mov
inc
xchg
xor
inc
mov
or
roll
jo
inc
push
ret
pop
jo
and
adc
popa
lods
loope,pn
stos
adc
sub
add
and
add
gs
dec
lahf
fldcw
ljmp
pop
loope
insl
push
cmp
cmp
and
pop
sub
loopne
test
add
popf
jle
shll
cmp
or
mov
or
jp
into
or
add
mov
roll
pop
xor
inc
push
dec
push
or
lods
loop
pop
add
mov
push
insb
sub
mov
ss
pop
test
jge
and
dec
mov
sub
aas
stc
cltd
push
in
jmp
out
iret
les
mulb
or
pop
jmp
hlt
mov
xchg
sub
cmc
or
test
sti
adc
ljmp
jno
add
addr16
lods
pop
jae
dec
fstpl
daa
mov
lahf
mov
pop
xchg
cmp
enter
lahf
nop
clc
inc
sbbb
xor
leave
arpl
daa
inc
or
dec
mov
mov
ss
dec
cltd
insb
hlt
mov
sbb
das
insl
sub
ljmp
andps
popa
add
insl
mov
ficompl
lods
mov
push
lods
pop
je
aad
montmul
cmpsb
rcrl
std
mov
xor
dec
ss
xor
mov
dec
gs
cmp
xor
xlat
mov
fldcw
ret
pushf
pop
jp
pusha
lret
or
test
and
sub
fwait
fdivl
stos
or
mov
cmc
pop
sub
pop
pop
or
add
xchg
pusha
stos
scas
out
pop
add
shl
lahf
ss
xchg
mov
in
mov
sbb
push
cwtl
sub
xchg
inc
push
sbb
push
jg
in
xor
enter
mov
fists
sbb
sbb
imul
fs
incl
push
adc
or
pusha
pop
mov
xchg
outsl
es
adc
inc
jns
movsl
jg
jns
pop
outsl
pop
or
mov
mov
bound
repnz
pop
mov
mov
clc
lods
and
and
cmpsb
push
dec
push
adc
rcrl
fimuls
aas
lcall
or
xchg
and
movsb
mov
add
sub
leave
fisttpl
rcrb
mov
mov
inc
mov
inc
and
imul
sbb
push
push
jmp
sbb
jmp
fdivrs
or
jle
xchg
addr16
js
cmp
adc
stos
xchg
cli
and
push
aaa
mov
aaa
cltd
cld
push
sub
jg
out
pusha
inc
adc
xchg
mov
stos
inc
and
and
inc
fisttpll
in
nop
inc
aas
push
andb
add
adc
xor
fcomi
mov
xchg
add
in
lods
mov
jmp
push
mov
das
cmp
push
fcoms
mov
xor
das
push
mov
push
xlat
sub
stc
xor
mov
fisubs
int
push
aad
add
adc
pop
jle
enter
pop
xor
inc
sbb
sub
pop
loope
test
xchg
sbb
insl
ret
lds
scas
adc
mov
jmp
fcompl
xchg
in
sub
dec
in
xor
insb
aas
mov
sub
sbb
mov
cmpsl
sub
push
pop
or
inc
mov
jb
sub
popf
push
dec
mov
mov
mov
jmp
mov
mov
jb
daa
aam
dec
out
in
and
in
inc
xlat
mov
ficomps
push
push
mov
inc
fs
ja
xorb
aaa
mov
test
inc
jb
inc
dec
gs
out
cltd
movsb
mov
push
ds
pop
sahf
test
cmpsb
jno
and
xchg
lea
ljmp
sahf
mov
push
jecxz
fs
out
lods
aad
push
popl
mov
mov
std
push
or
gs
pop
xor
inc
sub
lods
jbe
js
test
jl
rcrl
mov
sbb
stos
clc
iret
cmc
outsb
add
in
fistl
test
mov
adc
mov
lret
bound
add
jmp
adc
push
sub
or
fildll
mov
hlt
aaa
insb
filds
test
ret
sbb
leave
pusha
mov
loopne
pop
lahf
mov
add
hlt
fistl
ja
es
dec
shll
jge
imul
xlat
mov
outsb
inc
sbb
out
stc
mov
rolb
ds
leave
push
cmp
pop
addr16
jno
in
jle
stos
adc
sbb
cwtl
mov
xchg
sub
push
cli
push
mov
sbb
clc
clc
cmpsl
repz
jmp
das
mov
xchg
dec
cli
push
xchg
addr16
mov
aaa
lret
lds
adc
gs
mov
xchg
repz
adc
and
insl
and
outsl
pop
fsubs
ds
mov
mov
jb
lock
sub
hlt
dec
sahf
mov
loopne
lea
adc
cmpsl
inc
sbb
enter
inc
outsb
add
push
adc
cmpsl
add
cs
push
pop
test
cmp
dec
lock
push
and
mov
jge
into
adc
cmpsl
xchg
sbb
mov
mov
imul
dec
icebp
mov
xor
int3
xlat
dec
sub
inc
inc
push
pushf
jl
xchg
lret
cld
mov
adc
cmpsb
pop
scas
cmp
lock
mov
ljmp
cmp
cmp
lods
cmpsl
mov
add
push
mov
gs
insl
xchg
lahf
pusha
leave
xchg
sub
pop
jb
nop
sbb
ret
dec
icebp
call
push
rorb
fs
js
in
mov
std
mov
sub
leave
mov
xor
roll
lods
jmp
int
ret
aas
add
mov
faddp
adc
dec
enter
and
mov
push
imul
scas
fcomps
mov
pop
or
adc
insb
scas
add
cmpsb
sbb
push
out
stos
mov
sbb
jbe
cld
adc
jns
xchg
push
popf
stos
and
test
mov
lret
aaa
fsubs
inc
inc
scas
pop
xor
pushf
and
aas
push
mov
sbb
cmp
addl
mov
jno
hlt
shlb
lods
aam
inc
fimull
stos
mov
cmp
popa
ss
adc
loope
ja
sub
jbe
mov
pop
xor
adc
mov
popa
popf
inc
mov
sahf
mov
dec
inc
mov
add
pop
or
mov
ret
fcmovnbe
and
push
push
andl
xchg
loope
adc
loop
jns
mov
aad
ds
jne
inc
xchg
lds
jge
sbb
lahf
out
lds
shrl
jb
pop
movsb
stc
jmp
jle
xor
add
mov
sub
adc
stos
xchg
mov
jno
mov
ljmp
out
xchg
jae
adc
xor
dec
shlb
test
repnz
pop
push
cli
shrb
add
je
les
push
idivb
inc
mov
push
rol
push
lods
add
push
pop
cvtdq2ps
cs
xor
jge
loop
loope
out
inc
pushf
insl
sahf
addr16
lahf
or
adcl
pop
cwtl
scas
in
jae
pop
dec
sahf
jno
pop
xchg
call
cmp
popf
pop
pop
out
outsl
xchg
fcomps
mov
jae
cmp
cmp
fnstsw
inc
inc
push
out
bsr
mov
jno
push
fbstp
lahf
jno
int
jge
pop
cld
add
jecxz
in
add
popf
xor
es
mov
dec
cmp
cmp
mov
push
jge
incb
sub
stos
mov
or
sbbb
jns
sub
xor
jb
mov
pop
fbstp
mov
and
cmp
add
mov
mov
popa
lds
sahf
sbb
cld
xlat
loop
adc
cmpsl
mov
push
leave
int
movsb
clc
cltd
jge
aas
dec
into
sahf
test
call
or
cld
adc
int
addr16
fcompl
xlat
sub
cld
jge
xor
fs
fcoml
in
orb
push
jb
push
pop
sub
jne
negl
loop
pop
adc
sbb
popf
add
xchg
xchg
inc
mov
subb
lahf
xor
add
sti
ljmp
cmp
in
push
pop
insb
les
xchg
imul
loope
pavgw
test
cmp
in
dec
xchg
mov
lods
stos
mov
subb
cli
andl
fwait
push
aam
int
xchg
jne
push
dec
push
dec
mov
hlt
jo
aas
in
cmpb
rorl
adc
cwtl
clc
mov
sbb
pop
cli
cmp
stc
push
inc
stos
leave
ffree
aad
popf
fdivl
inc
push
mov
or
mov
xchg
ret
pusha
mov
repnz
sbb
cmpsl
sub
xchg
sub
in
sbb
mov
ret
lods
pop
fisubrl
out
sbb
sub
adcl
or
ss
cltd
jmp
in
fwait
add
mov
or
mov
xor
mov
xchg
insb
std
mov
das
mov
in
jbe
sub
js
mov
ljmp
add
je
test
cld
cmpsl
xor
lods
xchg
inc
icebp
stos
mov
ss
pop
push
xorl
inc
add
test
scas
xor
inc
pusha
mov
push
or
or
das
test
pop
stc
out
sahf
xor
popf
xchg
sbb
pop
outsb
scas
or
and
jle
loopne
test
scas
cli
or
adc
pop
pop
stos
xlat
outsb
ljmp
adc
cmp
fsubrs
adc
mov
bound
pop
testb
jbe
in
cltd
xchg
or
inc
mov
add
add
addr16
dec
and
mov
cltd
stos
fldl
movsl
mov
pop
ficomps
stos
das
dec
ficomps
pop
stos
xor
lds
pop
data16
fidivl
jg
xor
loop
stc
sbb
repz
mov
push
lcall
xor
jbe
test
out
lret
in
iret
push
fisttps
ret
push
jp
dec
pop
xor
sbb
pop
lcall
dec
aas
rorb
adc
lret
aam
pop
xchg
or
loop
mov
cld
stos
fadd
mov
notl
iret
pop
jne
push
aad
mov
test
mov
jae
mov
mov
and
popf
adc
pop
mov
fadds
xchg
es
or
or
dec
in
repnz
push
ficoml
outsl
xor
or
mov
cwtl
sahf
mov
sarb
cmp
mov
or
outsb
andb
push
aad
xchg
outsb
and
xchg
js
roll
xchg
daa
les
cmp
mov
mov
push
dec
mov
mov
mul
jp
cmp
sbb
and
pop
imul
movsl
inc
jo
sub
push
dec
mov
jno
testb
pop
adc
dec
rorb
sub
cmp
nop
fnstenv
or
sbb
mov
aad
mov
jae
xchg
add
lcall
lahf
lods
fmull
cmpsb
int
data16
shrb
sub
lret
sarb
mov
movb
lods
out
movsb
sbb
jmp
xchg
mov
jge
mov
push
adc
sahf
xor
mov
adc
pop
push
pop
and
into
add
dec
pushf
decl
adc
std
cltd
push
movsb
and
lcall
test
lock
inc
mov
ja
jmp
pop
out
xchg
scas
xchg
jle
mov
flds
scas
int
call
mov
pop
cmp
lahf
dec
cmp
mov
int
fisttps
push
aaa
push
jl
mov
sub
xor
push
ljmp
dec
out
xchg
insb
push
fwait
jne
mov
sub
imul
or
and
mov
add
pop
jmp
xor
in
cld
es
mov
inc
push
mov
shrl
pusha
add
add
pusha
xchg
and
pop
popf
xor
xchg
sbb
jno
jne
pop
repnz
mov
imul
lods
add
stos
sbbb
inc
lcall
ja
fisubrs
test
xchg
xchg
xchg
repz
pop
insl
adc
mov
sub
nop
mov
je
ljmp
out
test
loope
adc
call
mov
inc
inc
inc
fdivs
mov
js
scas
jnp
sub
out
mov
sub
data16
shll
mov
inc
push
decl
push
cmc
fcomi
mov
aad
xor
rcll
jecxz
and
mov
popa
add
add
sarb
fimull
and
sbb
pop
icebp
add
test
adcb
imul
sbb
outsl
clc
mov
inc
push
xor
es
repnz
cmpsl
mov
fwait
stos
mov
outsb
cmpsb
dec
jmp
xor
pop
shll
sbb
cwtl
std
movsb
cmp
call
ss
lods
xor
lock
push
mov
or
dec
in
sbb
mov
fidivrl
jmp
daa
adc
xchg
adc
cmpsb
aam
and
cmpsb
inc
cs
adc
stc
jne
lods
ja
inc
test
jno
sbb
imul
mov
aaa
out
decl
inc
cli
or
cmc
push
cmpsl
je
ljmp
es
jg
adcl
push
stos
add
mov
je
xor
cmp
pop
xor
jecxz
push
add
fsubs
push
cmp
repnz
mov
push
lea
jo
jne
mov
xchg
std
mov
ucomiss
jp
cmp
je
lock
xor
push
mov
inc
lret
xor
orb
cli
mov
pop
inc
insb
mov
push
les
or
xchg
jle
out
or
adc
sbb
sbb
xchg
repz
pop
inc
sar
popf
push
roll
aam
test
mov
push
and
mov
jb
sub
ds
lods
mov
out
sahf
add
int3
inc
jl
jl
jo
mov
loop
test
mov
ret
xlat
sub
out
hlt
fisubs
adc
mov
shll
jmp
adc
lret
xchg
test
inc
sub
mov
mov
cmpsl
or
sub
pop
repnz
mov
dec
dec
adc
test
outsb
or
push
hlt
inc
test
std
jmp
push
rcl
or
push
sub
pop
pop
popf
or
mov
mov
arpl
inc
cli
divb
gs
hlt
cli
and
fscale
pop
jb
mov
mov
ja
pusha
sub
push
jne
jne
lods
cmp
xor
add
lds
sbb
sbb
lret
cli
push
imul
addr16
sub
dec
jecxz
rorb
movsl
dec
push
jnp
mov
dec
xchg
jno
pop
mov
or
dec
xorl
mov
iret
lret
cli
or
outsl
jns
fsubp
test
cmpsb
mov
dec
out
mov
adcl
stos
mov
out
lods
loopne
cmp
test
xchg
loopne
aad
dec
jecxz
aas
ss
fmull
sbb
dec
aam
out
das
mov
test
das
xchg
xchg
jp
ds
pop
push
inc
cmp
xor
pop
into
jle
jge
out
out
imul
insl
fisttpl
repnz
mov
fwait
test
scas
cmpsb
mov
dec
mov
jp
aaa
pop
mov
mov
jecxz
enter
enter
lea
idivl
int3
bound
ficoms
int
mov
mov
mov
pop
ljmp
mov
leave
fwait
cmp
arpl
sahf
dec
or
stos
push
mov
fnstenv
mov
push
std
cmove
rcr
mov
sbb
popa
cmp
cmp
jo
rorl
push
push
push
in
repnz
addl
jl
inc
outsb
jp
mov
jbe
jle
negb
outsb
mov
arpl
icebp
jns
or
sub
test
in
aad
daa
lcall
adc
sbb
cltd
mov
push
insl
pushaw
push
in
adc
xchg
mov
fwait
mov
sub
cmpsb
and
cld
push
in
xlat
fiaddl
test
xor
or
call
xor
leave
pop
fwait
adc
jns
js
test
into
cmp
sbb
fwait
lods
pop
dec
and
lahf
push
mov
and
jb
sbb
cmpsl
xchg
loope
aaa
call
ret
jb
shll
les
adcb
mov
or
jne
xchg
xor
ret
incb
dec
dec
fildll
les
inc
push
out
aam
pop
je
dec
out
mov
out
mov
outsl
sti
xchg
aaa
aad
imul
inc
arpl
pop
mov
cmp
cmp
jl
sub
imul
mov
flds
in
aaa
aas
mov
insl
fs
int3
mov
leave
shrl
add
push
sub
cmpsl
xor
dec
shl
jnp
xchg
dec
xchg
mov
sahf
or
lcall
stc
mov
or
mov
out
push
jo
cmc
lds
jge
jbe
das
ja
mov
xor
inc
out
sbb
mov
negb
std
call
loop
jo
rcrb
ja
out
mov
mov
xchg
push
adc
push
jnp
cmpsl
aas
ss
mov
push
inc
cltd
pop
das
iret
popaw
jg
cmp
fstpt
orb
ret
pop
je
out
into
adc
jb
mov
bound
les
mov
lds
fs
xchg
or
in
fimull
push
push
and
or
imul
insl
cmp
sbb
popa
lahf
mov
push
lret
mov
jmp
fdivrp
cmp
in
je
les
sub
scas
push
sbb
clc
insl
mov
jecxz
jne
mov
push
mov
gs
lea
addl
andl
mov
lods
imul
pop
hlt
push
into
and
test
rclb
push
testb
dec
sub
cmp
lret
rorb
pop
cmp
fbld
into
aas
arpl
out
jbe
subb
adc
les
cmp
jecxz
xchg
mov
loop
push
sbb
insl
sub
mov
sub
sahf
sub
jmp
add
mov
or
mov
adc
push
js
cmp
insl
pop
jo
jbe
sti
lock
lods
and
xchg
out
sbb
and
lods
stos
mov
ret
loop
xor
pop
fwait
dec
xchg
pusha
jg
out
sub
jno
or
pop
in
scas
call
add
sub
sbb
add
mov
xchg
mov
fstp
aas
dec
adc
sbb
pop
mov
xor
and
scas
xor
dec
and
mov
out
lods
xchg
mov
shll
or
adc
data16
mov
pop
fdivl
out
jb
sti
jbe
sbb
test
dec
sub
out
scas
or
rorb
jmp
ret
lods
les
roll
sub
mov
test
mov
jnp
in
pop
push
push
ret
sub
mov
repnz
lcall
jl
xor
sub
rorl
fstl
pop
daa
rolb
pop
lret
movsl
push
mov
push
xorb
in
adcl
movsl
pop
xchg
jb
xor
ja
out
jae
adc
in
nop
daa
pop
lock
push
push
inc
arpl
inc
fiadds
into
arpl
gs
cltd
ljmp
lret
cmp
icebp
push
pusha
jo
movsb
inc
mov
mov
xor
leave
xor
inc
orl
lret
sbb
jmp
scas
sbb
out
jne
xchg
lahf
inc
das
inc
xchg
daa
mov
repz
and
adc
add
js
mov
popf
adc
les
rcrl
xchg
push
push
inc
movl
icebp
in
adc
rcrl
ss
pop
xor
mov
and
xor
std
pop
roll
jns
mov
mov
jmp
add
out
mov
sub
sbb
and
sbb
mov
inc
mov
out
dec
in
xchg
cmp
mov
xor
mov
push
lahf
pop
or
fcomps
js
roll
adc
push
cltd
cmp
movsb
rcrb
adc
push
mov
pushf
mov
pop
ficoms
sbb
xchg
test
lcall
mov
sub
xchg
shrl
cmpsb
xor
xchg
xor
push
inc
inc
xchg
adc
sbb
jge
adc
in
cmp
fmul
loopne
xor
sub
pop
loopne
mov
rorl
pusha
add
sti
es
mov
addr16
xor
es
mov
mov
jns
in
mov
sarl
xlat
mov
popf
lods
sub
dec
gs
pop
push
jns
pushf
sub
dec
fcomps
mov
adc
cmp
push
pop
repnz
push
push
inc
int
xchg
daa
lcall
cmp
and
xchg
lahf
call
push
sub
xchg
dec
rcl
out
xlat
stc
ret
push
bsr
shrl
int3
jg
lds
inc
jb
int3
xchg
inc
in
jb
into
add
and
mov
ss
mov
sbb
icebp
fidivl
stos
and
sub
out
lea
outsb
in
shrl
and
sub
repnz
mov
arpl
test
mov
xor
int
mov
enter
test
ret
sbbb
and
fadd
push
push
cmp
and
rcr
sbb
push
or
inc
loopne
xchg
dec
fstpt
sbb
pushl
add
in
testl
sub
sub
mov
dec
xchg
mov
mov
xchg
or
jno
or
out
mov
sbb
sub
add
mov
mov
out
push
sbb
mov
xor
mov
shrb
ds
dec
rolb
xchg
mov
sbb
lcall
jns
add
mov
faddl
movsb
sbb
cmp
push
mov
pop
jnp
sarb
stc
outsl
rep
pop
pop
xor
jecxz
test
leave
push
sbb
inc
rcrl
cmpsb
pop
and
jnp
in
mov
xor
sbbb
xor
push
xor
out
mov
pushf
dec
inc
jns
pusha
inc
es
rolb
cmpsl
mov
sbb
add
cs
and
mov
fldcw
pop
lahf
fistps
mov
jge
or
aas
or
add
test
repz
or
push
mov
inc
push
popf
pop
andl
scas
and
sub
stc
bound
fsts
cmp
sub
jg
hlt
into
push
fsubl
push
movsl
mov
aas
mov
mov
lret
jge
roll
loop
cmp
add
pop
sub
cmp
cmp
mov
ret
cmp
call
cmp
stos
loop
push
lcall
scas
push
xchg
jbe
cmp
or
stos
inc
push
pop
enter
xchg
mov
inc
loop
notb
sub
inc
rorl
mov
xlat
cli
sub
ret
hlt
sbb
pop
mov
pop
dec
out
sbb
mov
rcrl
inc
sbb
push
adc
inc
cmp
adc
adc
fwait
xor
mov
mov
pop
imul
mov
push
test
popf
jp
mov
mov
pusha
sti
dec
sahf
setne
orb
pushf
pop
enter
insb
movsl
mov
mov
aas
sbb
mov
jecxz
lock
jl
or
ja
mov
jecxz
pop
out
std
pop
ret
aas
pop
cmp
pop
je
mov
cmp
mov
jge
cmp
pop
push
mov
fldenv
pop
cmp
ds
mov
xor
out
dec
aas
fdivrs
outsl
cli
mov
fs
test
mov
inc
popf
movsb
adc
out
jb
cs
xchg
mov
cltd
push
cli
mov
xor
je
rcl
pop
xchg
shl
cmp
push
in
inc
jp
dec
pop
mov
xchg
data16
test
gs
jno
lret
mov
fists
mov
push
xchg
xor
xchg
test
shl
hlt
sub
gs
sbb
jecxz
mov
subb
loop
push
xchg
stc
adc
jne
inc
inc
rcrl
mov
sub
adc
das
aas
cmp
dec
insb
sub
dec
mov
mov
daa
adc
andnps
negl
and
ja
lds
mov
int3
outsl
cld
push
inc
mov
jbe
lods
xor
add
and
dec
movsb
cmp
mov
mov
push
push
sub
sub
pop
inc
sub
jp
cs
sub
sbb
ja
jecxz
pusha
and
pop
scas
pop
xor
imul
jo
mov
cmp
xchg
pop
imul
std
shrl
mov
pop
mov
add
mov
fldcw
rcrl
repz
gs
mov
sub
sbb
xchg
dec
mull
add
mov
das
fisubrl
xchg
daa
add
outsb
popf
call
inc
popf
mov
icebp
fsubrl
xor
adc
mov
or
cmp
mov
movsb
scas
mov
shll
daa
push
out
adc
repnz
outsb
das
daa
subl
stc
push
loop
out
mov
out
pop
mov
call
or
aam
ja
jbe
mov
ljmp
cmc
jl
jae
jb
stos
sbb
js
push
jo
jge
scas
pop
test
rolb
mov
in
je,pt
das
cmpsb
pusha
or
pop
repz
sbb
stos
push
pop
in
mov
lahf
adc
pushf
xor
and
adc
incl
sahf
xchg
fdivp
ja
mov
add
loopne
mov
jmp
mov
fs
sbb
mov
stos
outsb
pop
xor
imul
sbb
gs
xchg
xor
call
or
cmp
adc
push
pop
add
fs
xor
test
iret
mov
into
jae
lret
xlat
rclb
inc
test
inc
int3
jg
daa
mov
rcrl
mov
shlb
imul
jno
pop
xchg
shr
mov
lock
les
rorb
adc
mov
xlat
xor
ljmp
popa
sbb
jmp
xor
push
jb
dec
xor
push
push
push
int
adc
stos
xor
ret
jnp
fiadds
loop
push
scas
fsubr
fbld
mov
aad
mov
and
mov
in
xchg
scas
pop
or
sbb
movsb
mov
add
push
in
push
ss
pop
sti
andl
xchg
push
sti
lds
les
dec
dec
loop
fwait
in
into
dec
sub
stos
jge
es
sub
xchg
iret
push
icebp
inc
xor
loope
jecxz
mov
pop
imul
loopne
in
andl
mov
test
pop
lahf
and
or
dec
int
inc
pop
pusha
aaa
or
mov
popa
fidivl
call
or
mov
in
cmpsl
jle
add
in
fildll
dec
or
shll
mov
jns
orl
sub
ret
in
pop
mov
icebp
out
jnp
mov
push
jne
inc
or
pop
cwtl
sub
scas
not
sbb
lds
js
pop
inc
ficoml
cmpsl
ret
jb
pushf
xor
lahf
inc
test
adc
out
mov
and
mov
mov
sbb
loopne
push
insb
xchg
outsl
mov
pop
ja
cmpsb
les
jo
fwait
clc
dec
fnstsw
or
std
sti
dec
ret
data16
jne
movsl
fdivl
into
fstpt
aad
leave
inc
cmp
out
scas
xchg
arpl
jge
dec
ret
fisttpl
add
stos
xchg
sub
pop
in
cmpsl
dec
aaa
xchg
add
cmp
mov
rcll
cmc
jg
daa
cmp
jge
cmp
adc
pop
shr
lods
mov
fisubrl
inc
stos
lds
rcl
and
pop
stc
inc
adc
mov
mov
sub
fstpl
inc
aam
loop
loop
movsb
out
cmp
xchg
ja
rcr
mov
rcl
push
inc
push
jne
xchg
clc
xchg
push
push
inc
push
pushf
addl
pop
add
mov
xchg
in
cwtl
dec
arpl
test
lret
lret
lods
ljmp
lahf
sbb
dec
ret
psllq
cwtl
rcrl
pushf
cmc
jnp
lock
pop
mov
push
adc
mov
enter
mov
push
adc
cli
movsb
mov
adc
rorb
lock
pop
movsl
jecxz
or
int3
cmpsb
test
push
mov
pushf
jmp
clc
popf
roll
add
sarb
pusha
pop
jge
insl
scas
jge
lahf
dec
sahf
in
mov
rcrl
push
ds
outsb
push
xchg
pop
xchg
push
sahf
bound
loop
adc
adc
pop
fs
data16
or
movsb
int3
jo
std
rclb
xor
xor
jecxz
cwtl
lods
cmp
push
testl
aam
cltd
shl
fadds
jno
mov
jle
mov
fistpl
dec
aas
or
jmp
dec
mov
mov
shrl
xchg
push
sub
jae
fcmovb
sbb
dec
pusha
sub
addr16
loopne
adc
add
adc
pop
cmp
rol
adc
pop
adc
movsl
mov
push
addl
popa
sbb
faddl
aad
and
inc
movsl
nop
add
cmp
fistpl
add
repnz
ret
addl
adc
repz
jg
dec
shl
icebp
out
out
outsl
pushl
movsl
xchg
pop
mov
adcb
xchg
test
xor
sbb
xor
lds
mov
jge
sub
pop
imul
push
lods
stos
testl
ds
sub
xchg
popa
mov
add
flds
je
xor
loop
popf
adc
arpl
aam
cmp
ret
fistps
fistl
dec
mov
daa
pop
cli
push
jl
or
incl
in
cltd
add
not
mov
or
jl
gs
fisubl
push
push
popf
inc
popf
sbb
mov
enter
jo
sbb
dec
dec
mov
and
or
lods
xchg
stc
sbb
inc
push
sub
push
jb
arpl
push
pop
stos
mov
pop
jmp
adc
insl
loopne
mov
xchg
add
jg
out
fdivp
mulps
push
nop
ja
loopne
mov
mov
loop
shlb
push
mov
pop
cmp
fmull
or
test
ret
lret
dec
rclb
out
adc
loopne
pushf
jge
dec
mov
aaa
bound
ret
dec
out
iret
inc
lcall
sbb
insl
inc
ss
jle
inc
xlat
inc
mov
sub
popa
add
or
scas
arpl
aad
sbb
pop
mov
fldl
push
notl
pop
repnz
jbe
lahf
stos
jbe
les
sbb
pop
out
in
inc
outsl
inc
negb
pop
cmpsl
adc
mov
push
jmp
and
adc
lret
pop
cli
add
mov
xor
push
cmp
jnp
es
sti
adc
popa
orb
pop
sti
or
sbb
mov
insb
in
sbb
daa
decb
xor
sbb
cmc
adcb
jmp
ss
in
cmp
xor
push
es
cli
lods
aas
adc
jecxz
jns
mov
or
cmp
mov
adc
aad
xor
xor
lods
inc
push
cs
jl
mov
adc
pop
adc
mov
sbb
sbb
loopne
bound
addr16
in
push
cli
cmp
inc
lret
mov
add
je
sbb
inc
push
movsl
push
fistpll
xchg
pop
loopne
ficoms
push
cs
push
ja
sbb
add
inc
lahf
pop
xchg
sbb
push
add
jb
out
xor
sbb
sahf
ljmp
dec
shr
das
pusha
js
std
out
stos
xor
push
inc
lea
fcmovnb
arpl
mov
jb
std
in
scas
jb
xor
jge
mov
rcrb
and
xchg
fwait
js
adc
mov
sbb
push
lock
fidivl
jne
imul
mov
shrl
repnz
sub
pop
aam
shl
pop
pminub
mov
cmpsb
inc
scas
fsub
ja
ds
add
decb
shrl
orl
push
and
sbbb
leave
sbb
pop
in
arpl
popa
out
mov
ss
inc
mov
xor
cmp
pop
outsb
js
mov
cmp
inc
push
lcall
inc
or
outsb
pop
lret
push
sub
jne
das
test
mov
jns
cltd
cmp
in
fisttpl
jle
jp
std
xchg
jl
in
std
xchg
and
push
ret
out
jle
xchg
std
xor
fwait
hlt
xchg
inc
movsl
dec
sub
adc
insb
cs
jno
add
rclb
stos
aad
dec
push
jb
cwtl
dec
adc
add
sub
es
dec
sub
cmp
push
rcll
movsl
into
push
rcll
xor
test
repnz
add
mov
push
and
mov
ja
aas
sub
push
dec
cmp
push
push
sub
xor
out
add
mov
pop
jecxz
mov
sub
mov
pop
sahf
call
icebp
mov
mov
mov
pop
gs
dec
mov
add
mov
leave
push
push
mov
and
aaa
mov
jmp
dec
repz
pusha
stc
mov
cltd
pusha
addr16
stos
jmp
es
or
inc
imull
cltd
or
lods
lods
inc
fisubrs
and
jbe
jae
ss
adc
cli
test
fldt
inc
leave
mov
fimuls
lret
xor
arpl
cmpb
jne
mov
out
test
jae
cmpsl
das
fisubl
or
sbb
and
rcr
mov
or
fldenv
leave
cmp
insl
or
mov
bound
mov
int3
jns
int
dec
mov
faddl
cmpsl
ds
loope
pop
adc
fstpl
data16
pop
andl
sets
mov
shl
add
inc
rclb
dec
repz
out
mov
jno
cmc
fsub
pop
xchg
cmp
mov
sbb
mov
xor
push
add
ret
and
pop
cmp
push
jl
fildll
mov
jle
mov
push
push
movsb
cli
xchg
and
adc
iret
in
add
rol
mov
es
jl
lahf
add
push
cmp
cld
cltd
pop
test
frstor
test
popa
mov
xchg
aas
cmp
test
mov
int
mulb
and
stos
icebp
jbe
push
jbe
push
test
scas
xor
leave
fldt
nop
jbe
cmc
out
movsl
inc
inc
push
fnstenv
jno
jbe
jno
mov
pushf
or
pop
pop
movsb
inc
ds
and
and
aas
ret
xor
xor
into
add
mov
mov
scas
pop
mov
sbb
inc
out
cmp
enter
cmp
aam
stos
aas
lahf
jbe
outsl
pop
inc
pop
idiv
mov
shlb
jno
dec
es
lret
fcmovb
sbb
in
push
fwait
cli
jae
mov
insl
inc
inc
sub
in
xorl
pop
sbb
pop
out
arpl
inc
pop
test
in
imul
outsl
pop
jne
cmp
cmpsb
jb
jne
ja
mov
sahf
xchg
xor
xchg
sbb
pop
xchg
or
xor
imull
addb
mov
add
pushf
xor
cmp
xchg
pop
dec
sbb
xor
push
and
sub
xor
pop
lock
pop
jmp
jnp
cmp
add
int
mov
or
cmp
push
std
cltd
mov
dec
hlt
jle
in
test
xor
mov
mov
add
loope
roll
pop
mov
push
stos
pop
pop
mov
aaa
outsl
iret
pop
ss
mov
xchg
inc
xor
xchg
cmp
popf
mov
out
or
das
mov
sbb
inc
mov
cmpsb
push
gs
jmp
and
lods
pop
lret
mov
cmp
dec
pop
insb
cmp
cs
push
out
test
cltd
rcr
xchg
dec
cwtl
jnp
dec
lods
mov
dec
out
jge
and
popf
ja
test
cwtl
inc
clc
or
aaa
push
push
movsl
aaa
das
addr16
jnp
xor
xchg
lahf
lds
aas
pushf
jecxz
mov
mov
mov
mov
adc
or
add
inc
cmc
in
dec
mov
mov
dec
mov
rcll
xor
mov
mov
adc
xor
popf
scas
ss
fiaddl
jo
lret
cmp
xor
dec
in
and
cmp
fnsave
bsf
fldt
aad
lea
sub
data16
out
push
push
mov
pcmpeqb
movsb
mov
jle
test
inc
add
out
int
ret
lahf
mov
mov
rorb
jns
popf
mov
sbb
bound
mov
movsl
mov
xchg
std
movsl
and
mov
mov
cmp
pushw
pop
popa
xchg
aam
adc
js
fmull
aad
jg
sbb
pop
subl
dec
loop
inc
cmp
and
add
jp
clc
sbb
imul
aas
dec
addr16
fidivs
mov
fidivs
sbbl
sbb
sbb
movsl
or
push
adc
je
and
xchg
dec
arpl
fldcw
mov
daa
mov
push
mov
lock
push
cmp
ss
sbb
xor
shlb
push
mov
jb
push
inc
lahf
cmp
mov
cmp
adc
lcall
stos
dec
in
lret
pop
lock
imul
mov
test
leave
jb
rcl
adc
mov
lret
out
popa
or
push
jmp
add
push
mov
mov
jns
lret
out
adcl
adc
in
pop
pop
jmp
jmp
xchg
pop
adcb
inc
push
fsubrl
enter
mov
fldt
push
bnd
notl
roll
in
hlt
adc
cmp
mov
dec
popa
out
push
xchg
mov
cld
imul
popl
stos
imul
adc
inc
fwait
fwait
aas
mov
adc
jns
lcall
mov
inc
lahf
adc
adc
push
in
test
and
fs
movsb
sbb
popf
fdivrl
out
cld
dec
in
leave
inc
icebp
push
lret
repz
imul
es
xor
pushf
dec
hlt
or
push
mov
nop
cwtl
scas
sbb
in
push
and
rep
test
rol
lods
das
sub
pop
pop
mov
sbb
fninit
stos
xchg
jbe
clc
test
mov
mov
adc
jo
adc
pop
enter
scas
mov
and
clc
pop
nop
testb
inc
sbb
add
bound
push
insl
sbb
sub
mov
fldln2
and
and
in
testl
xor
or
dec
push
insl
lds
inc
jl
lock
bound
ja
add
pop
pop
fprem1
or
mov
push
sub
add
push
inc
cmp
scas
inc
shrl
aam
mov
mov
shll
adc
mov
mov
jmp
pop
mov
roll
outsb
adc
push
sub
aad
out
fisubl
std
jae
push
aas
cli
in
adc
imul
ja
inc
cmp
ret
jg
sub
push
jbe
jbe
sbb
mov
adc
push
push
enter
stos
inc
gs
enter
jbe
pop
test
cmp
cltd
ret
cmp
inc
fwait
loop
loope
scas
aas
std
daa
stc
sub
pop
adc
arpl
push
sub
xor
push
ljmp
jb
divb
jae
mov
jl
cmp
inc
cli
add
push
gs
mov
add
in
sbb
cli
adc
cli
mov
data16
sbb
sub
sbb
ja
pop
push
mov
or
adc
and
test
pop
cmp
fbld
ds
xor
test
inc
aaa
fwait
test
fldt
fnstenv
push
add
mov
inc
loope
jnp
jb
add
fildll
mov
movsl
inc
push
cld
aaa
dec
and
pop
fs
mov
sbbb
add
xchg
es
adcb
ret
mov
cmpsb
pop
outsb
jle
xchg
lahf
xchg
shl
shlb
imull
addr16
dec
sahf
fs
mov
inc
shll
mov
adc
test
shrb
movb
sub
iret
lods
push
test
sbb
ds
outsl
movsb
daa
cmp
mov
dec
ficoms
ret
daa
mov
jb
inc
fsubl
jnp
into
test
xchg
xor
mov
addr16
mov
push
push
ds
xchg
repz
cld
loope
mov
leave
pop
adc
and
ss
stos
mov
out
xchg
pop
xor
mov
sub
aas
aas
push
out
cmp
push
xchg
movsb
pop
mov
jbe
jns
clc
push
mov
mov
and
sbb
or
xchg
shl
mov
jno
adc
push
jo
mov
pop
xchg
push
and
pop
icebp
lea
push
adc
pop
repnz
push
mov
mov
and
adc
mov
push
or
xor
or
push
out
inc
int3
jb
inc
movsb
rorb
inc
shl
notb
push
mov
sbb
jno
push
movsl
test
fidivrl
ss
dec
popa
clc
std
pop
xchg
push
sbb
out
sahf
mov
or
cmp
sbb
insb
std
iret
pop
push
lods
and
pop
push
int
sbb
aaa
aad
sub
ss
and
push
cmp
rclb
pop
adc
dec
mov
rclb
rcr
leave
mov
sti
cld
das
xor
clc
pop
imul
imul
push
add
mov
xchg
scas
xor
sbb
popf
cmp
inc
xlat
fisubrl
popf
mov
cld
call
or
jb
xor
fst
pop
sub
inc
mov
int3
cmp
cmc
pop
dec
inc
rcrb
in
xchg
std
shrl
mov
lds
jg
cmp
cmpsl
je
mov
adcb
sub
pop
cwtl
leave
mov
jae
cmpb
jae
push
scas
add
xor
aaa
fildl
xchg
push
repnz
lods
and
sti
adc
fimuls
out
std
repz
test
lret
rclb
add
mov
addl
and
fidivs
fldenv
loopne
inc
mov
decb
pop
or
in
cld
xchg
shl
hlt
repz
jns
inc
stos
daa
jp
push
dec
ss
imul
jg
fcoms
das
les
nop
outsl
xor
sub
push
cmc
movsb
mov
jmp
subl
xchg
fidivs
sbb
inc
sbb
in
arpl
jge
inc
bound
push
jnp
test
pop
xor
xlat
mov
out
pop
mov
js
and
movsl
jg
dec
push
xor
insl
loopne
fstps
push
jge
call
sub
sbb
jne
jg
sub
enter
adc
cmpl
or
ret
mov
mov
xchg
adc
imul
repz
ja
adc
add
cltd
inc
jbe
imull
inc
jle
or
scas
roll
stc
int
jl
push
inc
sbbb
xchg
mov
cmpb
add
mov
jl
pop
das
add
pop
add
jmp
inc
das
adc
adc
shr
jl
fwait
xor
inc
fcomp
pusha
and
mov
adcb
xlat
jae
push
dec
cmpb
ficompl
outsl
frstor
pop
sahf
push
scas
shr
fmul
and
or
inc
fcmovb
jg
jne
push
test
mov
popf
xor
addr16
sahf
je
push
pushf
adcl
cwtl
xor
stos
mov
xchg
insl
add
mov
ret
int
sbb
or
int
sub
cmp
inc
popa
xor
mov
mov
push
or
pushf
in
outsb
pop
push
mov
add
adc
hlt
cmpsl
stos
int
ffree
ret
sub
pop
push
mov
fldcw
xchg
sub
inc
stc
inc
mov
sub
ficompl
lahf
mov
jbe
nop
test
xchg
stc
aas
es
stos
imul
mov
imul
push
fsubrp
jge
icebp
push
mov
xlat
fisubrl
mov
or
shr
std
adc
stos
insl
pop
negb
out
cmp
sub
mov
xchg
add
les
ret
outsb
je
std
cmpsb
push
test
sbb
sbb
test
jbe
rclb
jge
jge
lea
or
sahf
mov
xchg
add
inc
dec
lcall
les
mov
int
jecxz
lcall
jo
push
outsl
cmpl
inc
leave
push
and
cmp
and
cmc
adc
es
pop
test
iret
fsts
int
das
sti
in
pop
adc
mov
inc
pop
add
inc
fistpl
cmp
packuswb
add
ret
push
and
pop
jae
sahf
repnz
pop
in
jl
mov
push
icebp
pop
pop
xchg
adc
jb
fcomps
push
seta
icebp
test
xchg
fs
test
mov
xor
xchg
mov
in
mov
and
xor
mov
out
jb
push
je
push
jmp
dec
push
inc
mov
adc
cwtl
mov
outsb
pop
mov
xchg
push
xor
add
push
mov
adc
cltd
cmpsl
call
out
jb
xlat
jg
sub
cmp
daa
mov
repnz
mov
mov
push
xor
xor
clc
push
out
add
xchg
lcall
lds
scas
mov
fwait
sti
pop
out
fsub
and
std
jbe
xor
es
cltd
dec
in
fisubrs
add
loope
leave
dec
inc
sbb
xchg
xor
sbb
xor
in
insl
or
adcb
push
movsl
stos
inc
sub
ds
leave
xlat
dec
pop
mov
mov
test
pop
stos
inc
jle
mov
decb
pusha
jp
jle
enter
outsb
fnsave
mov
mov
insb
add
inc
movsl
sbb
mov
xor
lret
lret
jecxz
push
cmc
rolb
imull
jnp
jo
mov
adc
add
cmpsl
pop
fistps
mov
rcl
adc
cmp
add
xlat
stos
inc
mov
fcmove
cmp
xchg
aas
mov
xchg
pop
sahf
hlt
stc
lock
xchg
xchg
xchg
repnz
adc
pextrw
dec
jecxz
aas
and
add
int
or
mov
lods
mov
sub
nop
fidivl
loop
jg
adc
call
pop
mov
outsl
cld
call
or
inc
imul
fidivrl
inc
push
testl
ret
push
sub
sbb
xchg
inc
fildl
inc
addr16
daa
leave
xor
jno
mov
dec
xchg
nopl
or
push
xorb
xchg
mov
mov
mov
shrb
outsb
push
push
movsl
rcl
or
push
cs
lret
xor
arpl
xchg
jo
subl
and
xchg
push
mov
cmpsb
int
xor
repnz
call
push
push
out
cmpsb
bound
inc
shlb
dec
inc
jecxz
push
out
ret
arpl
rorb
mov
jecxz
xlat
bound
nop
out
dec
popa
mov
push
pop
and
pop
fstps
add
dec
rcll
test
fisubrl
fstp
cmp
sti
jo
xorb
push
dec
insl
inc
fstpl
xchg
xor
pop
je
repnz
stc
xchg
stos
mov
push
in
dec
cli
nop
aad
insb
jle
dec
test
stc
rcl
inc
push
popf
fbstp
lcall
mov
aas
push
shll
cmpsb
or
jl
sub
cmpsb
jns
jecxz
sbb
out
insb
pop
add
inc
aad
fs
test
sub
and
lea
repnz
add
xor
jmp
hlt
jle
mull
in
inc
ficompl
jle
dec
adc
stc
xchg
ljmp
adc
mov
and
mov
lock
int
xchg
out
add
mov
lods
in
ret
iret
adc
dec
inc
mov
mov
mov
mov
cmp
pop
mov
inc
or
mov
ret
mov
in
jno
add
xchg
and
loop
mov
xchg
ret
sar
and
pop
adc
inc
in
add
lds
leave
int
in
cmp
jmp
mov
dec
imul
or
pop
lods
jl
add
lea
mov
cltd
push
lods
sarl
ss
inc
pop
xor
push
hlt
es
inc
sbbl
pusha
or
sub
notb
insb
scas
mov
mov
push
cld
or
enter
jle
pop
mov
lahf
scas
dec
or
popa
je
repz
enter
inc
ret
in
adc
push
cwtl
mov
xchg
pop
outsl
lahf
outsl
xchg
loopne
stos
leave
mov
shlb
dec
test
outsl
xchg
aam
and
pop
imull
mov
test
dec
fsubs
enter
jo
cmp
ja
addr16
ficoml
cwtl
dec
xor
sub
mov
imul
jle
add
cmp
xchg
call
test
mov
sbb
cmp
addb
mov
aad
xchg
mov
pusha
outsb
icebp
pop
ss
mov
xor
fstps
out
hlt
xchg
inc
push
scas
cmpb
cmp
sub
iret
push
sahf
cwtl
mov
cltd
jmp
out
mov
xor
lea
lea
mov
xchg
mov
sub
lods
rorb
mov
mov
ret
scas
inc
cmc
inc
pop
lock
std
jns
mov
in
push
lods
sbb
and
arpl
je
mov
data16
push
pop
mov
imul
loope
jno
test
jne
mov
and
cmpsb
inc
iret
adc
iret
aas
xor
push
filds
pop
cmp
popa
inc
pop
addr16
cmp
jbe
mov
add
fs
and
xchg
leave
int3
cmpsb
inc
mov
stos
jp
dec
lods
lret
icebp
movsl
push
ja
test
fsubr
test
pushf
sahf
stos
dec
inc
or
ja
cmp
fwait
js
sahf
sub
sti
lods
dec
and
aad
cmp
outsb
lahf
in
sahf
sbb
hlt
ss
inc
bound
imul
int3
pop
jnp
sbb
and
mov
sti
cld
and
push
push
lcall
push
std
aas
sbb
test
hlt
xor
mov
or
cmp
test
aad
dec
pop
xor
lods
add
fxtract
addl
test
adc
iret
sub
pop
sahf
divl
xchg
jg
lods
imul
and
test
jo
xchg
arpl
testl
xchg
inc
adc
js
mov
outsl
push
fnstenv
nop
push
fwait
jg
imul
xchg
or
ret
inc
insl
bound
bound
scas
xorl
sbb
ja
repnz
movsl
insl
testl
xchg
cmp
mov
mov
je
inc
fnstsw
sbb
mov
cwtl
fistpl
and
and
mov
stos
ds
pop
rcr
data16
mov
dec
mov
push
gs
inc
pushf
aam
lds
in
pop
out
aad
repz
adc
jle
push
outsl
testl
cmp
xchg
test
in
adcl
or
xor
mov
push
inc
in
jg
lcall
dec
insl
jnp
or
data16
xor
cmp
or
cmp
aas
adc
push
das
cmp
popa
clc
jae
lods
jns
inc
jno
test
mov
cli
adc
xor
gs
sbb
and
iret
sub
rorl
arpl
lock
mov
into
movsl
mov
dec
insb
cmpsl
mov
xlat
mov
insl
sbb
repz
jp
pop
in
clc
mov
mov
xchg
mov
cmp
dec
rcrb
imul
aas
push
addr16
mov
je
adc
testb
xchg
stos
or
aad
nop
loop
ret
dec
icebp
push
pop
jno
daa
sti
xchg
pop
mov
sbb
iret
or
mov
lahf
scas
mov
sahf
fnstcw
cs
rorl
loop
insl
fnstenv
dec
adc
xchg
and
push
xrelease
mov
jl
sbb
loope
mov
and
push
out
aaa
or
in
insl
stc
test
and
out
inc
sbb
mov
loope
jge
mov
das
xor
adc
js
cmp
push
shll
mov
adc
pop
hlt
cmc
enter
rsm
and
mov
adc
popa
bound
imul
sub
faddl
dec
xchg
fldt
fdivrs
test
push
lods
int
add
ds
xchg
aas
ret
push
mov
sub
in
xor
in
arpl
mov
imul
cltd
scas
fiaddl
mov
movsb
mov
inc
mov
lea
imul
xchg
mov
addr16
xor
mov
push
jmp
cmp
stos
mov
or
movsb
mov
popa
push
ret
int3
das
bound
je
sbb
repz
sbb
or
test
inc
adc
mov
clc
cmpsb
psraw
mov
faddl
push
mov
xlat
mov
inc
fdivl
movsb
sti
xor
xor
enter
cltd
call
ss
outsl
outsl
inc
mov
in
test
dec
fmuls
xor
jmp
out
adc
loopne
ss
sbb
daa
xchg
fs
xor
fsubs
call
jnp
test
test
pop
jmp
dec
into
cmp
xchg
fsubl
dec
or
push
xor
jmp
lods
js
scas
mov
fcomps
into
cmc
rorb
mov
xlat
enter
lcall
push
mov
test
test
shl
xlat
leave
lods
nop
jb
sub
push
ds
mov
add
dec
push
mov
and
xlat
stos
call
pop
lods
add
shrl
push
dec
mov
sbb
test
jp
adc
fstps
imul
hlt
repnz
mov
call
mov
mov
xchg
cmpb
idivl
lret
pop
and
sbb
adc
mov
cld
jl
adc
add
mov
or
xor
sbb
out
xchg
scas
sti
dec
jecxz
xchg
add
in
cmp
mov
xchg
cmp
cmpsl
inc
fcmovnbe
repz
push
lods
mov
testl
icebp
lret
and
fistl
test
jbe
jmp
popf
movsb
outsl
push
jle
repz
mov
fwait
push
call
pop
ljmp
fadds
sub
in
adc
xchg
mov
das
stos
lods
mov
stc
push
movsb
dec
fwait
jle
mov
clc
ljmp
cltd
das
sub
je
dec
mov
call
leave
arpl
cld
push
cmpsb
clc
and
mov
sbb
dec
hlt
inc
adc
imul
jge
fidivs
in
adc
cld
dec
jg
lds
addb
rcl
js
cld
test
cmc
add
push
insl
jmp
adc
jl
inc
xor
outsl
push
or
lds
stc
test
or
adc
mov
xor
outsb
addr16
mov
movsl
insl
out
and
fadds
aaa
stos
out
pop
push
inc
cmp
and
cmp
push
inc
mov
push
mov
jl
stc
mov
roll
cld
push
enter
out
inc
dec
pusha
cmp
jnp
jmp
or
test
fsubrs
inc
dec
jmp
xor
inc
sar
jg
push
and
cld
shrl
push
out
ret
sbb
cmpsb
test
jno
jmp
fdivrl
popa
dec
int3
popf
std
jno
mov
ret
jge
jg
sub
pop
pop
stc
icebp
mov
dec
and
popf
imul
fists
scas
call
cmp
mov
test
cmp
adc
xchg
stc
mov
xor
jle
fiadds
fdivs
lret
rorb
mov
int
dec
jae
and
push
xchg
lcall
inc
pop
out
fcomp
cmp
lret
inc
and
cmpsl
repnz
imul
jb
stos
cmp
js
ret
adc
sub
cmpsl
fwait
pop
sbb
enter
in
out
mov
lods
push
adc
push
ja
mov
xor
in
sub
cmc
xchg
popa
inc
lods
jg
inc
scas
xchg
xchg
pop
adc
shll
sub
cwtl
push
fucomip
leave
daa
mov
xor
testl
in
dec
pop
adc
add
sub
test
les
arpl
leave
push
clc
loop
push
pushf
leave
fs
and
sar
jecxz
sub
lret
orb
lret
scas
adc
push
imul
or
mov
push
jle
mov
in
jg
and
cmc
arpl
xchg
sbb
aaa
mov
mov
ret
add
loopne
pop
mov
xchg
test
pop
fistpll
pushl
mov
jmp
aaa
fiaddl
popa
movsb
ss
popa
arpl
dec
sbbl
out
jp
xchg
bound
push
fstps
in
rclb
mov
clc
into
and
xor
int
cmp
rep
cwtl
xchg
dec
dec
repz
jg
movsl
or
cmp
inc
test
clc
fnstsw
and
inc
fcom
sbb
add
push
add
fucomi
push
dec
push
or
jmp
mov
adcb
and
testl
inc
mov
pop
mov
xchg
mov
fldcw
adc
pushw
sub
movsl
sbb
inc
lds
out
cmpsb
out
jmp
inc
andb
mov
into
and
mov
lahf
adc
cwtl
pop
std
fcomi
and
and
movsb
mov
xchg
and
adc
inc
push
cwtl
mov
dec
mov
insb
adc
cld
dec
call
sbb
mov
jg
xchg
adc
mov
fnsave
mov
das
jl
sbb
push
enter
adc
movsl
sbb
cmc
pop
jmp
xor
cli
jo
imul
xchg
rorl
call
add
fidivs
ljmp
inc
jbe
adcl
mov
cwtl
mov
iret
mov
or
and
fdivrp
mov
cmpsl
push
clc
mov
jno
mov
push
arpl
jg
dec
gs
push
add
loope
lea
xor
test
pop
aaa
jg
out
cmpsl
mov
pop
fbstp
xor
ja
add
or
adc
in
fmuls
nop
das
sbb
out
stos
and
dec
cld
xchg
jmp
stc
shrl
out
inc
lret
pop
push
sub
jle
ss
outsl
mov
pushf
jecxz
or
and
data16
ljmp
cmc
sub
loope
aas
scas
push
out
test
aaa
lcall
jge
xchg
scas
push
out
jnp
divb
test
aaa
push
out
dec
mov
adc
loopne,pn
inc
loope
call
jns
xor
mov
mov
shlb
jbe
scas
and
or
jecxz
sub
outsl
sbb
test
loop
hlt
cmc
pop
int3
lods
or
outsl
add
movsl
mov
movsl
mov
push
or
push
scas
mov
cmpsl
ret
sbb
mov
sbb
in
jne
shr
xchg
pop
sbb
adc
fsubrs
int3
fs
sbb
or
jmp
es
pop
mov
sbb
xor
es
fiadds
xchg
fwait
mov
adc
dec
jb
dec
arpl
pop
in
cld
inc
cld
xchg
mov
out
and
sub
aam
fwait
jp
push
mov
cltd
cmc
jne
int
popa
inc
cmp
insl
sbb
lds
sbbl
or
xchg
inc
das
cs
out
mov
int3
repnz
orb
in
ss
pop
clc
push
fidivs
jo
jnp
jns
pop
test
add
in
das
daa
mov
inc
push
inc
cltd
shlb
jns
cmc
inc
gs
sbb
sahf
dec
inc
fwait
test
movsl
fldt
mov
lret
mov
cmp
ret
pop
dec
xchg
fwait
movb
pop
lahf
ss
jl
cs
mov
mov
adc
fmuls
pop
mov
test
movb
ret
js
dec
cmpsb
sbb
icebp
xchg
or
ss
sub
push
pop
movsb
inc
adc
add
or
fcompl
daa
mov
cld
xor
invd
xchg
pusha
aaa
aad
loope
pop
jle
mov
inc
iret
data16
mov
outsb
in
mov
push
clc
in
jbe
mov
pop
jl
dec
movsl
cmp
insb
fmul
pop
or
cs
es
pop
loop
fldenv
sahf
push
test
mov
push
fsubrs
movsb
fbstp
xchg
shl
jns
hlt
inc
popa
sub
dec
jg
push
xor
or
adc
mov
nop
inc
scas
xor
dec
lock
add
mov
lret
ja
mov
mov
add
mov
rcrb
jge
stc
pop
push
lahf
push
and
jmp
mov
lahf
inc
jg
xchg
mov
movsb
ja
pop
bound
data16
dec
cmp
cmp
push
movsl
ret
pop
lret
repz
pop
inc
stos
sub
xor
xchg
jno
mov
icebp
call
sbb
cmc
cwtl
inc
pushf
inc
push
sti
or
int
aam
or
js
addr16
in
sbb
jg
popf
daa
xchg
inc
push
ss
xchg
nop
out
pop
xchg
sarb
jo
jle
xor
mov
pusha
sub
pop
xchg
inc
out
aas
mov
lods
nop
cs
mov
pop
inc
mov
pop
pop
test
outsl
xchg
push
daa
test
ja
cltd
adcb
mov
jo
mov
adc
rcrl
and
add
je
addl
out
dec
fstpt
dec
jg
add
js
test
in
fidivs
mov
sti
in
ljmp
shlb
cmc
cli
cli
test
ror
stos
fdivp
inc
sbb
push
leave
test
ss
pop
adc
movsl
cmp
stos
xor
fildll
rorb
imul
add
ret
dec
adc
cmp
mov
adc
fsts
cmp
insb
xchg
aam
imul
jno
cwtl
and
gs
sub
push
mov
mov
sbb
pop
scas
pop
xor
cmp
xor
cmpl
or
xchg
loope
out
xchg
jle
add
lods
xchg
jmp
mov
or
xchg
lock
sub
dec
rcrb
jns
or
aad
insl
sti
cmp
mov
xchg
add
icebp
push
adc
jle
mov
jmp
repnz
push
mov
or
pop
rcrb
in
hlt
dec
iret
mov
sub
xor
pop
cmc
adc
cmp
ljmp
add
icebp
std
aas
jp
dec
push
pop
pushf
insl
inc
mov
dec
sub
clc
andb
pop
push
popa
or
out
mov
scas
mov
std
push
mov
stos
push
movsb
sbb
fs
lods
pushf
outsl
jp
inc
inc
xor
std
jmp
mov
push
mov
sub
out
hlt
xchg
dec
rcll
out
test
xchg
push
xchg
leave
jns
call
inc
pop
sub
loopne
popf
ds
test
sbb
xchg
repnz
cmp
ja
out
mov
push
cmp
mov
gs
mov
movsl
and
dec
in
jne
stc
nop
cwtl
imul
xor
pop
ret
aam
jle
divb
mov
les
xchg
popa
xor
out
push
out
ja
addr16
mov
lret
inc
popf
aaa
mov
les
ja
mov
cmp
in
jne
sbb
sahf
lods
mov
xlat
enter
lcall
adc
fbstp
xor
push
sub
sbb
mov
sub
xchg
push
fmul
pop
pop
bound
lock
push
or
imul
stos
movsb
icebp
or
adc
mov
push
clc
adc
xchg
std
mov
iret
enter
xchg
sub
rol
test
outsl
xchg
or
add
or
sahf
out
xchg
inc
mov
mov
int3
add
dec
cmc
sbb
pop
xchg
mov
jecxz
xchg
sbb
pop
cltd
outsl
push
aam
shlb
mov
hlt
sbb
cmp
add
js
shl
add
and
aaa
push
cmp
pop
fisttpll
mov
orl
cmpsb
cwtl
add
sbb
pop
mov
mov
imul
test
leave
jb
das
stos
or
jnp
test
inc
fwait
ss
or
popf
pop
mov
pop
es
mov
xor
push
mov
call
insl
std
and
out
mov
xchg
fmull
data16
adcb
mov
out
xchg
add
movsl
lds
xchg
sub
or
movsb
jle
out
jp
in
jb
sub
lahf
jae
inc
shl
sbb
inc
loope
pop
fsubr
or
pop
sti
mov
daa
sahf
xor
imul
shlb
jne
lods
mov
pop
test
insb
mov
mov
inc
xlat
and
int3
mov
jne
or
cmpb
and
mov
insl
jnp
data16
stos
mov
xor
sub
mov
sti
addb
aaa
or
lcall
adc
cmc
push
repz
xchg
and
pop
or
sbb
aaa
pop
aaa
into
mov
aaa
xor
decb
xchg
jne
icebp
sub
sbb
xor
inc
mov
cmpsl
movsl
cmp
call
aad
sahf
xchg
mov
dec
lods
sarl
lods
loop
bound
inc
pop
iret
mov
add
and
in
dec
fstpt
mov
mov
push
sbb
shl
and
mov
inc
fdivr
test
pusha
cwtl
pop
hlt
mov
xchg
and
pop
test
loopne
jae
push
les
in
pop
and
mov
incl
and
mov
xchg
das
add
fwait
in
arpl
mov
outsl
daa
push
inc
inc
fmuls
sbb
imul
push
mov
clc
ljmp
loop
les
mov
rorl
dec
sbb
stc
pushf
and
or
std
ljmp
jne
jecxz
pop
xor
ficoml
lock
lea
aad
test
scas
cmp
sub
jne
int
hlt
mov
mov
adc
fcoml
adc
pop
int3
mov
xchg
daa
lea
mov
sub
sbb
das
sbb
push
xchg
cmp
mov
jo
mov
cmp
rolb
cmpsb
negl
jne
cli
xchg
mov
dec
in
jae
cmpl
rclb
or
add
jne
inc
xchg
fdiv
lret
mov
out
dec
call
test
jae
push
mov
push
jl
mov
into
adc
and
lcall
sub
test
nop
mov
cmp
rcll
inc
inc
xchg
lock
inc
fbstp
dec
mov
cmp
push
sub
push
inc
mov
inc
stc
jle
inc
xlat
mov
in
xlat
jb
in
movsb
mov
je
jno
scas
inc
mov
inc
in
jmp
push
adc
das
or
push
adcb
nop
push
jge
and
dec
cmp
int
rep
sub
mov
les
jb
fdivl
xchg
fisttps
pop
aam
jmp
popf
mov
lds
push
test
loope
cmc
mov
cmp
mov
fmul
movsl
icebp
push
inc
inc
mov
dec
dec
mov
xchg
dec
ret
sub
fcoml
sbb
pop
loopne
or
pop
sub
iret
and
mov
xor
or
jno
popfw
je
popf
loopne
jmp
test
and
jmp
insb
adc
jbe
xor
roll
mov
push
inc
fiadds
ljmp
pusha
mov
aam
dec
or
dec
movsl
inc
mov
jae
or
rorb
pop
fcom
pop
cmp
daa
mov
or
popf
icebp
sub
and
jp
dec
fistl
lea
movsb
lcall
push
jbe
inc
stos
xlat
jbe
pop
jbe
addb
sbb
xchg
insl
cmc
or
call
or
mov
adc
cmp
lds
movsb
jecxz
stos
dec
lret
movsb
mov
jnp
aam
imul
adc
sbb
mov
jmp
hlt
lods
out
dec
sbb
pop
leave
lods
aas
push
fmull
out
repz
dec
cmp
mov
xlat
outsb
jl
jle
and
shl
jne
nop
adc
fdivrs
xor
aaa
pusha
testb
cmp
dec
out
add
and
sbbb
js
arpl
mov
add
xchg
test
cwtl
int
repnz
cmpsb
mov
xor
jbe
xor
xor
and
cmp
das
inc
sti
jbe
lds
mov
in
insl
mov
mov
cmc
sbb
cmp
test
push
xchg
cmpsb
jbe
mov
xchg
xor
mov
pushf
sahf
or
clc
add
jae
loope
std
xchg
std
out
mov
push
sbb
pop
adc
icebp
rol
cmp
div
xor
inc
inc
loopne
ja
mov
cmp
xchg
out
ret
in
cmpsl
stos
inc
and
js
inc
adc
xchg
or
pusha
mov
aaa
add
jmp
xor
mov
and
pop
and
jb
jp
out
pusha
sahf
stos
mov
loop
je
sarl
out
xchg
push
lcall
adc
js
clc
popf
stos
daa
iret
sbb
das
dec
call
push
cld
pop
cmpsl
lock
add
adc
pop
scas
cld
and
mov
leave
clc
test
fisubs
fisubl
cmpsl
xchg
int
lods
mov
mov
repnz
scas
adc
xchg
das
mov
inc
in
pop
mov
outsb
sbb
mov
loopne
pushf
pop
cmp
jo
push
sub
xchg
mov
or
or
mov
or
ds
cli
sub
gs
sbb
sbb
mov
cmp
adc
loopne
add
mov
stc
inc
rolb
divb
aad
xchg
cwtl
repnz
in
jo
mov
cmp
inc
cld
arpl
mov
andl
xchg
out
sub
cmp
add
cmp
and
lahf
mov
fucomip
jp
lods
jae
fs
lcall
mov
sub
stos
adc
xchg
fisubrs
push
jg
mov
xor
jle
std
xchg
lea
jnp
scas
sbb
mov
frstor
push
fbld
cvtpi2ps
mov
adc
mov
dec
sub
insb
or
jo
inc
psrlw
ficoms
push
adc
fwait
xor
pusha
jne
pop
cmc
push
jne
sbb
popf
outsb
rcl
mov
loop
insl
add
add
push
out
push
je
roll
repnz
dec
add
std
push
pop
jp
push
jbe
into
mov
pop
jb
in
call
cld
push
outsl
pop
xchg
cwtl
cwtl
lcall
cli
stos
pusha
push
ja
lret
push
jmp
lcall
and
cmp
imul
rcrl
xchg
add
bound
loopne
cmpsb
imul
cs
cmp
push
push
cli
iret
xor
adc
fucomi
pop
das
scas
mov
lds
adc
es
jns
int
xlat
outsb
std
cmpsl
adc
out
sbb
lock
aaa
shrl
fbstp
or
push
cmp
xorl
js
scas
cmp
mov
inc
in
stc
cld
call
clc
sahf
inc
orb
and
test
les
imul
ret
pop
dec
mov
out
xchg
insl
in
lahf
mov
mov
adc
dec
inc
or
push
out
mov
outsb
test
mov
add
sub
inc
fisttps
in
loop
inc
leave
mov
add
lcall
in
pusha
loop
xchg
insl
outsl
orl
add
sbb
add
cmp
stos
dec
fisubrl
pop
or
dec
fidivrs
pop
pop
cmp
mov
or
enter
jne
jae
push
int3
pop
cld
push
sub
sbb
aas
rorb
clc
bound
and
lea
jmp
ss
or
pop
jle
out
xchg
jge
xor
into
inc
ds
push
mov
fnstenv
lods
leave
xor
ret
idivl
mov
xchg
dec
add
and
xchg
sub
ss
inc
jno
jecxz
or
mov
lods
addps
and
ja
mov
push
movsb
addr16
pop
in
sahf
jl
fildll
imulb
add
orb
rep
test
push
in
xchg
dec
fcmovnb
push
imul
add
lcall
and
pop
cmc
xchg
inc
mov
cli
aas
push
popf
jo
inc
rcl
xor
inc
pop
ret
sbb
setbe
inc
mov
add
inc
out
add
insb
jg
hlt
cmp
mov
mov
pop
xor
cld
fbstp
or
jg
out
mov
dec
dec
jae
cs
lcall
xor
into
mov
push
xchg
adc
or
je
out
mov
pop
dec
repnz
sub
dec
dec
xchg
int3
scas
mov
push
adc
imul
movsb
imul
xor
outsl
dec
arpl
sbbl
and
aam
into
lahf
sub
out
repz
push
inc
mov
inc
popa
das
insb
cmp
popa
sub
outsl
flds
shlb
js
inc
xchg
rcll
pusha
inc
hlt
xor
cmp
pop
ss
xchg
adc
jae
and
sub
lret
bound
xor
jmp
out
pusha
ds
js
rclb
das
test
pop
repz
out
cmp
testl
pop
adc
aaa
sub
push
call
xor
sub
jg
jle
in
mov
inc
fimuls
out
aaa
stos
in
test
push
fisttps
in
cs
mov
xchg
mov
fcompl
js
jmp
push
push
cs
std
loope
lcall
mov
mov
or
test
adc
aas
daa
rcll
adc
inc
enter
out
xor
pop
mov
adc
jae
mov
fmulp
test
lea
push
sahf
jecxz
jp
cmc
add
cltd
loope
cwtl
das
pop
add
push
or
cmp
aaa
rcll
mov
pop
push
insb
mov
xor
sbb
stc
push
fadds
mov
xor
fidivs
add
sub
pushf
cmp
pop
std
lret
lret
cs
cmp
dec
sub
push
outsl
pop
push
or
sub
sub
mov
mov
cmp
lret
adc
xor
out
jl
inc
sub
lahf
xor
or
jb
cld
cmc
sbbb
sub
xchg
jg
or
stc
cmp
cmp
test
sbb
sbb
xor
cmp
mov
rcrl
xchg
xor
mov
das
xor
bound
shr
xchg
adc
mov
jmp
inc
fldcw
pusha
imul
inc
test
fldl
lods
lret
bound
lea
cld
cld
or
mov
mov
jbe
and
cmpsl
push
xchg
mov
mov
jge
aaa
jl
push
movsl
sbb
sbb
cmp
adcb
stos
inc
sbb
leave
pusha
jecxz
repnz
jbe
fnstcw
pop
test
lcall
push
outsb
cli
add
sub
sbb
cmp
stc
nop
jnp
sub
dec
pop
jg
arpl
lods
aam
pop
shll
mul
aas
adcl
adcb
xor
sbb
shlb
call
out
popa
aaa
nop
test
sar
xchg
rol
inc
fidivs
xlat
fcoms
or
les
jbe
aas
dec
and
xchg
or
shlb
jmp
scas
push
inc
lods
mov
pusha
or
les
or
xchg
gs
test
inc
mov
lret
push
xor
xor
ret
insb
data16
lret
lea
pusha
scas
and
stos
and
in
add
bound
adcl
scas
push
add
es
mov
push
mov
int3
jg
pop
popf
add
sti
fidivs
imul
or
lds
cli
or
sub
addl
mov
test
xchg
jb
jbe
push
lcall
add
lods
ljmp
xor
pop
mov
push
and
inc
aaa
out
loope
cmp
pusha
insb
mov
std
or
popl
sbb
clc
into
cmp
mov
dec
mov
sahf
adc
nop
lds
insl
mov
pop
jne
sbb
movsl
lahf
lods
push
sub
in
push
jo
add
into
arpl
js
jbe
cmp
mov
fwait
cld
xchg
int3
xor
in
mov
fs
stos
jno
or
les
mov
pop
in
movb
jns
mov
pop
jmp
pop
in
mov
add
pop
int3
and
jp
ljmp
dec
push
in
and
jbe
jg
ss
jns
test
mov
add
movsb
scas
test
push
xchg
outsb
setns
push
adc
mov
out
das
add
cmp
sub
addr16
pop
arpl
or
js
adc
sbb
cmpb
adc
xor
xchg
jns
lods
js
cmpsl
xchg
js
adc
xchg
enter
stos
pop
icebp
adc
iret
fdivrl
lret
mov
mov
dec
pop
lahf
mov
push
mov
xchg
scas
adc
fs
pop
add
rcll
cmp
repnz
std
xchg
sbb
shlb
dec
adc
lret
cmp
mov
jo
test
js
rolb
adc
loope
lret
mov
sti
mov
add
xor
jge
pop
sub
pusha
pop
mov
icebp
xor
in
mov
mov
and
lods
dec
fisttpl
scas
or
adc
pop
outsl
adc
mov
add
mov
dec
pop
bnd
sub
lret
std
mov
pop
lods
push
mov
or
add
mov
inc
popa
fimull
xchg
and
push
repnz
and
fsubl
xchg
or
sbb
rorb
stos
out
xor
cmp
mov
add
in
scas
xlat
sbb
addb
outsl
adc
push
andb
hlt
push
jecxz
nop
adc
js
push
stos
inc
push
shlb
enter
dec
call
lret
loop
or
sbb
push
test
or
repz
mov
and
cltd
mov
push
cs
lea
decl
pop
cwtl
adc
imul
data16
imul
inc
push
in
jbe
mov
xchg
outsl
sti
iret
cwtl
mov
add
jle
es
fwait
sbb
lcall
push
lret
or
xor
dec
lds
ss
push
inc
bound
cmp
fsubl
rorb
insl
xor
clc
scas
dec
fsubrs
xor
cmp
push
jnp
and
xlat
pushf
aaa
push
add
adc
inc
xchg
jne
pop
in
xchg
and
and
out
sub
stc
mov
sub
jg
mov
dec
mov
pop
in
xor
lods
fadd
xor
in
mov
push
enter
jns
pop
jns
fmull
stc
lock
and
stos
ss
lahf
lahf
pop
cli
rorl
imul
sub
adc
mov
lds
mov
mov
in
pop
adc
nop
shlb
add
mov
xchg
idivb
mov
xchg
cmp
es
cmp
out
cmp
dec
popa
dec
jae
addl
push
pop
sbb
mov
jno
ljmp
cmp
sahf
stos
pushf
xchg
jnp
or
fstp
lahf
xchg
rolb
mov
cmp
fsincos
dec
das
pop
ds
mov
rolb
lret
ret
inc
lods
roll
and
sbbl
ja
mov
rcrb
pop
into
movsl
mov
iret
jp
mov
dec
lds
in
stos
dec
jmp
pop
hlt
inc
stos
sahf
mov
adc
add
repz
mov
lods
mov
push
aam
mov
dec
adc
push
pop
push
addr16
pop
clc
adc
or
add
stos
fs
fsts
lock
cmc
inc
adc
inc
jg
rclb
cmc
loopne
in
insb
fwait
dec
shll
push
bound
mov
mov
pop
fidivs
fiaddl
shrb
out
aam
je
dec
fldenv
pop
dec
pop
and
mov
push
popf
xor
arpl
cmp
shll
mov
add
xor
cli
push
sub
jns
and
ret
test
hlt
pop
mov
fsubrl
loope
push
add
ds
pop
lahf
push
shrb
lcall
lcall
jmp
popl
ss
mov
add
fucom
nop
lret
into
in
sbb
or
insb
aas
mov
ljmp
push
or
adc
cmp
stos
aas
cmp
sub
or
cwtl
sbb
sbb
jl
sbb
pop
sahf
lret
inc
repz
icebp
les
jg
out
xchg
and
pop
and
int
pushf
dec
dec
and
xor
push
pop
data16
and
mov
into
jp
out
sub
cmc
sbb
add
cmp
and
ss
addl
dec
mov
hlt
idivl
ds
es
enter
or
dec
pop
sar
in
nop
adc
add
leave
test
lea
outsb
sub
dec
pop
mov
mov
aaa
outsb
pop
cmp
mov
lcall
imul
jae
push
stc
nop
cld
jg
mov
movl
test
or
push
dec
fbstp
dec
mov
cli
push
mov
cmpl
mov
jg
rol
loop
testl
daa
test
push
mov
imul
and
repnz
pop
mov
add
notb
mov
inc
das
mov
outsb
shlb
xchg
jns
mov
adc
add
aas
cmp
pop
aaa
sbbb
adc
mov
push
push
adcl
cltd
fsubr
rclb
pop
and
mov
jecxz
lret
stos
add
mov
xchg
lcall
fs
sbb
or
cmp
pop
popa
dec
loop
mov
imul
test
aaa
push
sub
pop
jae
leave
fsubrs
rcr
je
test
nop
lods
cmp
scas
inc
lahf
repz
xor
dec
pop
add
xchg
and
popa
add
xchg
fwait
adc
mov
or
lods
push
mov
push
sti
cwtl
xchg
out
xchg
scas
or
xor
mov
leave
sbb
push
push
xor
fidivs
loopne
icebp
adc
add
fcmovne
sbb
add
repnz
mov
out
sub
pop
mov
test
jl
sbb
shll
mov
addr16
ss
popf
inc
adc
shrl
in
xor
jo
mov
or
imul
pminub
and
xor
push
cmpsb
xchg
mov
cmp
jge
cmp
jbe
pusha
andl
jo
addb
mov
lods
shl
insb
syscall
cmpsb
lods
jg
bound
mov
ds
ss
repz
sbb
jo
mov
mov
arpl
push
pop
ret
mov
push
inc
std
sbb
mov
xchg
push
push
leave
inc
mov
xchg
pusha
jecxz
adc
ss
fs
pop
stos
ja
and
lret
push
push
out
adc
pop
into
cmp
push
data16
push
mov
mov
jp
jo
outsb
xor
fisubl
mov
es
rcrl
icebp
cli
jnp
jmp
sbb
push
pop
das
jb
test
std
and
mov
jg
jle
adc
out
jno
popf
or
sbb
pop
dec
loop
mov
xor
jbe
mov
xchg
xor
fistpll
mov
xchg
repz
ret
jp
ljmp
imul
dec
mov
cmp
dec
movsl
push
push
out
dec
or
in
inc
xchg
lock
and
js
addb
or
mov
jl
inc
mov
lcall
psubusw
testb
adc
pop
sarl
push
add
mov
xchg
mov
fcmovu
aas
data16
insl
push
leave
add
lods
lret
pop
xor
mov
push
in
outsl
push
int3
fdivrp
mov
mov
das
xchg
lods
outsl
jp
pushf
dec
mov
lret
rolb
jno
pushf
xor
loope
jae
sti
pop
and
jne
xor
xchg
mov
int
sub
sahf
dec
mov
mov
xor
cmp
loopne
mov
sbb
leave
lret
or
into
shrl
test
daa
sahf
dec
cmp
in
adc
hlt
cmpsb
aas
pop
jnp
insb
cs
pandn
or
push
fwait
pop
or
push
cmp
push
and
fmuls
cmpsb
cmp
rep
fcoms
stc
push
jo
xchg
inc
jnp
cmp
ss
xor
in
xor
mov
mov
or
dec
adc
mov
aam
xchg
aad
bound
mov
les
mov
mov
add
and
sub
jo
xor
faddl
clc
into
jmp
andb
repnz
jge
enter
jns
stos
and
lahf
push
xor
jle
adc
xchg
sbbl
imul
mov
repnz
enter
out
sti
lcall
pop
int
rcrl
add
fwait
jnp
pop
mov
push
test
push
mov
add
sbb
cmp
sub
mov
jl
cmp
outsb
push
cmp
sub
xor
lods
xor
fstpl
jne
mull
inc
mov
push
int
cmpsb
hlt
push
jp
push
push
cld
test
add
add
add
icebp
dec
ret
in
imulb
iret
fsubrl
cmp
or
push
subl
dec
loopne
dec
jbe
mov
fldl2t
hlt
pop
adc
outsl
icebp
sub
popa
gs
lods
aaa
in
movsl
mov
mov
das
add
xor
lcall
leave
cli
xchg
sti
jmp
sbb
mov
push
in
jp
mov
test
dec
xchg
loop
in
pop
cmpsb
mov
cld
lret
inc
cli
rcrb
cmpl
add
ja
sub
out
call
in
imul
mov
jecxz
jo
inc
loope
scas
mov
call
cmp
dec
call
cmp
js
push
jmp
ret
jns
pop
fnsave
or
fs
xchg
repz
bound
test
insb
adc
stos
dec
jg
jg
dec
pusha
mov
fidivs
push
lret
xchg
and
xchg
push
and
sbb
inc
cmpsb
mov
sahf
xor
jge
mov
xchg
fucomp
icebp
sbb
lcall
mov
add
ja
xchg
push
aad
aaa
inc
in
push
testb
inc
outsb
in
jle
inc
gs
sub
inc
inc
int3
jp
sbb
sbb
mov
mov
jne
xor
cwtl
testl
and
add
cld
out
lods
mov
adc
pusha
xor
sub
rcrl
loopne
add
lret
popf
xor
outsb
lods
pop
sub
mov
and
loope
stc
adc
aas
adc
pop
lea
xchg
call
push
fsubl
and
jb
icebp
mov
dec
sbb
jecxz
mov
sbb
sbb
addr16
fcomip
daa
subb
dec
add
xor
andb
sti
and
shlb
aam
mov
xor
lcall
daa
movsl
mov
mov
push
jp
aas
scas
xchg
mov
cli
cmp
pop
imul
add
push
inc
add
sbb
sub
xor
mov
scas
mov
std
and
outsl
mov
fwait
push
mov
add
mov
dec
cwtl
sarb
mov
stos
in
dec
pop
sahf
jp
jmp
mov
and
es
mov
xchg
inc
out
pop
sub
dec
test
in
push
mov
lock
xchg
push
orb
out
push
stos
data16
mov
les
cmp
inc
cwtl
pop
adc
push
fs
xchg
daa
mov
cli
test
pop
pop
aaa
mov
push
movsb
aas
rorb
push
popa
pusha
sub
xchg
xchg
clc
jae
mov
mov
sub
mov
mov
cmp
aas
cmpsb
mov
out
adc
mov
and
fimull
push
xor
xchg
xor
xchg
adc
add
adc
pop
jbe
lods
arpl
into
popf
xor
lods
repz
pushl
jg
call
notl
mov
jge
push
xor
mov
jle
test
clc
andl
xlat
sbb
lea
cmp
push
pop
test
loop
adc
mov
push
inc
push
fs
mov
movsb
ja
or
fcoms
imul
scas
inc
pushf
cs
add
xchg
inc
jae
push
add
mov
xor
mov
mov
daa
pop
or
jb
or
stc
inc
cltd
cmp
in
inc
push
add
gs
outsb
mov
add
push
inc
shl
jnp
in
nop
dec
and
cmp
sub
inc
lret
cmc
dec
pop
test
je
int
sbb
mov
and
fs
inc
daa
xchg
sub
pop
das
sub
sti
fsts
xchg
pop
cs
fldcw
xchg
adc
dec
dec
in
add
jl
mulb
ja
xchg
addr16
mov
insb
push
or
adc
cmp
xor
je
mov
dec
lods
pop
test
out
out
jb
aad
adc
add
movsl
popf
xlat
shll
sbb
jle
js
mov
shl
push
inc
pushf
pop
jg
push
stc
push
insl
sub
jl
outsl
aas
stos
cmp
es
clc
jmp
lahf
mov
pop
psubsb
call
xchg
std
mov
loope
lea
xchg
xchg
out
outsb
inc
pushf
mov
ret
or
adc
ss
arpl
out
jo
lret
mov
push
push
mov
jae
cmp
jno
mov
adc
lock
inc
mov
lea
movsl
sub
repz
and
adc
lret
push
mov
mov
leave
dec
mov
pop
in
jbe
xlat
xorl
mov
and
fldt
lcall
mov
jbe
rcrb
add
pop
mov
imul
mov
lahf
fs
movsl
jle
es
push
popf
xor
lcall
pop
mov
and
mov
mov
sub
xor
loope
jle
mov
adc
arpl
js
fs
testl
jae
pop
xor
dec
cmp
sbb
cmpsb
dec
shrb
xchg
mov
jnp
les
jle
js
sub
repnz
mov
pop
jg
insl
mov
sbb
lea
add
outsl
sbb
stos
stos
jne
lahf
xchg
adc
dec
adc
out
outsb
jl
fiaddl
dec
mov
jno
adc
je
into
dec
stc
nop
inc
adc
push
adc
ficomps
or
cmp
insb
fcomi
orl
insl
sub
lret
ret
bound
in
imul
aam
inc
sahf
sarb
mov
adc
mov
jge
xchg
stos
outsl
mov
out
cmp
shr
inc
insl
add
jecxz
cmp
rorl
adc
mov
das
cmp
sbb
mov
mov
fs
test
mov
xchg
in
xor
mov
aaa
jbe
shlb
push
jno
xor
jp
incb
xchg
sar
sahf
test
mov
mov
aaa
iret
orl
sub
lahf
adc
mov
js
scas
pop
mov
popa
jmp
in
scas
out
add
ja
mov
in
lods
push
aas
rorl
jge
lcall
ret
pop
dec
jb
arpl
cltd
aad
cmp
inc
xchg
pop
test
inc
loope
leave
mov
mov
mov
loopne
lret
popf
jbe
xchg
adc
mov
push
ret
mov
test
push
jne
xchg
in
les
mov
and
add
xlat
pusha
notl
lods
inc
mov
push
push
sub
andb
scas
outsb
loopne
pusha
fnsave
add
dec
dec
jmp
sub
inc
push
jb
dec
mov
das
xchg
outsl
stc
jle
push
daa
sbb
or
jg
mov
bound
mov
push
lods
js
and
cmp
cli
jae
rol
enter
pop
popa
subb
loop
adc
push
or
inc
xchg
ss
nop
in
cmpb
aam
sbb
jns
pop
shll
and
and
add
fucom
mov
mov
lahf
gs
movsb
imul
xor
call
inc
gs
jmp
dec
xchg
add
sub
leave
push
inc
push
mov
int
jecxz
jno
nop
out
cmp
in
jnp
xor
pop
out
dec
call
mov
insb
sbb
stos
bound
loope
es
or
adc
int3
lods
aaa
stos
adc
xchg
mov
jmp
adc
and
lock
mov
shl
cmp
sub
inc
hlt
jnp
jecxz
cmp
inc
fidivl
adc
lods
fsubrp
lods
ljmp
and
out
mov
ljmp
lock
in
pop
out
lret
pop
insl
jmp
xchg
pop
ja
fimuls
jl
in
lods
pop
in
movsl
stos
aas
fcmovnb
mov
imul
jae
push
pop
jne
push
mov
test
mov
xchg
and
mov
mov
pop
inc
loope
pop
xor
call
push
lods
clc
bound
imul
or
fildll
xor
outsl
cli
das
scas
xor
push
cmc
ficoml
sub
pop
mov
mov
loope
mov
iret
xchg
aam
int3
sti
stos
adc
push
mov
stos
and
sahf
add
mov
mov
fidivl
xor
cmp
aaa
or
push
mov
mov
bnd
popa
push
adc
inc
nop
add
clc
cmp
mov
sbb
and
fstpl
sarl
jae
clc
loope
out
lods
add
cmp
loop
push
sbbb
insl
sarb
sub
ss
adc
popa
pop
sahf
cmp
daa
sub
pop
ret
pop
out
pop
mov
jbe
lock
push
setp
xchg
sbb
push
cmp
int
aad
sarl
mov
fprem
popf
fs
aad
roll
jmp
push
in
divb
je
mov
fidivs
xor
jge
fwait
sbb
popf
dec
mov
in
inc
neg
xor
bound
pop
je
xor
imul
mov
pop
mov
loopne
xor
stc
call
je
pop
nop
mov
or
cmc
cmp
cmpsb
movsb
mov
cmp
or
dec
sbb
sub
sbb
loopne
iret
lcall
xchg
push
nop
rcll
cwtl
jmp
adc
mov
xor
adc
into
xor
sub
fildl
inc
cli
cmp
loopne
or
xor
xor
out
test
push
shlb
icebp
mov
inc
stos
jmp
pop
sbb
jg
test
ss
push
add
arpl
dec
hlt
cmp
pop
cmp
pushw
mov
push
cli
push
call
call
out
jl
sbb
scas
pop
add
pop
jp
arpl
imul
mov
pop
mov
popf
xchg
mov
ret
cmpsb
out
push
adc
xchg
ficomps
lahf
ret
loope
jl
sub
adc
ja
pop
in
mov
cmp
adc
mov
sbb
jecxz
inc
add
mov
imul
cmc
mov
in
vmovd
stos
imul
lret
xor
adc
add
call
leave
dec
aam
repnz
jl
or
ja
iret
test
imul
jne
xchg
cld
out
push
test
bswap
outsl
push
cmp
xchg
jne
mov
jns
jmp
ss
xor
stos
fld
insb
sbb
sub
out
je
fidivrl
aad
cli
ja
sbb
les
push
adc
in
jo
cli
iret
adc
mov
test
mov
mov
jb
call
pop
dec
jg
aam
push
insb
xor
addr16
xor
cwtl
pop
pop
repz
jns
aam
jle
popa
mov
mov
es
shlb
cltd
divl
lret
add
xchg
xchg
push
inc
or
imul
nop
xchg
add
mov
fcoms
in
push
xor
lds
and
call
jb
sbb
lea
mov
out
rol
aam
loope
sbb
dec
out
jp
mov
jnp
push
adc
cmp
mov
cmp
mov
mov
bound
fnstenv
mov
xor
jmp
pop
sbb
mov
jne
add
mov
lock
dec
scas
ds
loopne
aad
pushf
movsb
xchg
sub
mov
mov
mov
push
xchg
and
jp
mov
dec
and
pop
idivb
mov
adc
movsl
mov
popa
or
and
cmp
push
add
inc
test
sub
sbb
jne
jecxz,pt
lret
addl
push
cmp
pop
ret
push
fcoms
xchg
xchg
push
shll
inc
xchg
mov
push
or
jnp
das
movb
dec
mov
dec
cli
enter
lods
jle
cli
addr16
daa
in
mull
inc
pusha
pushf
arpl
andl
dec
dec
aam
cmp
cmpl
arpl
cmp
loope
dec
or
mov
imul
fstl
cmp
ficoms
mov
adc
pusha
jnp
pop
mov
add
das
jge
jno
pop
sahf
mov
inc
jno
pop
sub
fwait
inc
jmp
loop
push
pushf
pop
and
mov
push
andb
pop
mov
mov
sbb
mov
dec
int
jb
jno
scas
jo
orb
mov
pop
adc
inc
call
cmp
jge
adc
adc
add
sub
jne
cmp
scas
jb
ficomps
mov
cld
lcall
cwtl
pop
mov
mov
sub
minps
xor
cmpl
sbb
movsb
cmp
xchg
cli
mov
xor
outsb
inc
movsb
out
add
jnp
out
aam
or
sub
xchg
adc
mov
mov
push
jg
movsl
or
stos
xchg
inc
pushf
and
dec
dec
dec
mov
push
pop
push
jl
shrb
movsb
inc
xor
inc
dec
hlt
in
sub
movsl
dec
push
out
pop
add
xchg
aaa
push
pop
inc
sub
xchg
inc
popa
hlt
out
stc
add
inc
fstps
push
sti
adc
pop
lock
adc
inc
mov
jb
data16
adc
lods
daa
dec
loope
jno
inc
aaa
mov
aas
push
xchg
stos
xchg
mov
sub
push
leave
cmc
int3
jge
sbb
fisttpll
lcall
dec
je
js
arpl
add
scas
xchg
sti
shl
cs
mov
xor
inc
cmp
and
fisubl
mov
loopne
test
push
out
xchg
mov
iret
sub
cmp
cmp
xchg
sbb
add
jae
push
and
nop
sub
in
ljmp
fcoms
push
adc
mov
xor
lret
std
in
sbb
xchg
mov
mov
mov
or
sub
enter
lods
scas
mov
mov
mov
add
mov
arpl
lea
std
sysret
adc
clc
iret
sub
mov
imul
pop
fcmovnb
je
add
mov
jmp
inc
pop
leave
addl
enter
mov
test
movsb
les
pop
mov
jg
xor
cmp
popa
mov
pop
lock
aam
cmpsb
sub
jmp
call
hlt
lock
jmp
add
mov
mov
lods
fstps
das
push
inc
add
iret
jecxz
pop
repnz
fwait
dec
scas
jo
xor
fstps
out
mov
dec
cmpsb
jno
mov
js
sub
outsb
push
subb
cmp
and
inc
adc
daa
jl
mov
push
pop
and
into
sub
and
inc
xor
cli
push
pop
popf
push
jo
inc
fnsaves
loope
aam
inc
jl
jl
xor
sbb
lock
jne
dec
subb
add
mov
sbb
add
dec
pop
add
cmp
sarl
cmp
cltd
pushl
mov
push
stos
mov
inc
push
jmp
add
or
jmp
inc
ss
mov
sbb
mov
in
lods
cmp
icebp
int
adc
pop
lock
out
je
pop
cmp
push
push
cmp
stc
fisubrs
mov
fstps
sbb
lock
push
lret
sbb
add
fildl
mov
adc
adc
adc
xor
cmpsl
mov
popf
or
mov
data16
loop
imul
int
jbe
jge
add
outsl
outsl
lcall
ret
enter
aad
jp
and
leave
popf
or
xlat
xchg
fdivrs
jge
cmpsb
test
or
xchg
leave
push
xor
sahf
ret
shrl
sbb
enter
inc
inc
push
sub
popa
scas
xchg
sbb
in
cmpsb
and
inc
inc
jo
stos
mov
xchg
fnsave
arpl
jg
xor
or
lret
cmp
sbb
push
rcr
cmp
sub
flds
dec
cmp
xchg
sub
stos
jns
std
pop
sbb
xchg
xor
into
inc
scas
xchg
pop
in
and
adcw
mov
xor
jb
dec
loope
mov
jp
inc
inc
enter
ljmp
adc
loope
sbb
xor
dec
cwtl
xlat
test
data16
adc
mov
sbb
xor
es
stos
icebp
call
mov
pop
stos
xchg
or
enter
ljmp
idivb
dec
jno
aam
jns
xchg
cmc
mov
sbb
insb
decl
int
cltd
enter
xor
out
fs
or
fwait
push
or
andb
push
cmp
sub
data16
or
jae
mov
and
cmp
insl
mov
mov
aad
jno
fisttpll
scas
mov
push
fsin
sbb
add
movsb
sbb
shl
cs
pop
jnp
inc
jae
in
sbb
mov
mov
sbb
sub
cmp
dec
daa
jnp,pt
push
mov
jp
adc
push
shlb
pop
lods
or
mov
daa
xor
jo
out
sti
outsb
inc
add
or
cltd
int3
mov
adc
xor
sbb
mov
fistpl
add
jno
push
imul
sub
outsb
stos
mov
or
xchg
or
mov
or
mov
xchg
pop
in
leave
jle
xor
gs
lods
cmp
and
inc
jle
mov
xchg
jnp
dec
jno
mov
iret
or
xor
pop
add
fwait
shr
xchg
in
mov
std
and
pop
xchg
jo
leave
jnp
sub
pop
mov
ss
push
pushf
pop
sub
movsl
inc
clc
add
sti
or
jns
test
xchg
int3
jbe
roll
dec
data16
or
andl
xchg
mov
xor
scas
mov
mov
jecxz
stc
and
cli
mov
repz
mov
pop
xor
fbstp
dec
jae
pop
cmp
cmp
das
std
inc
dec
mov
lret
rcl
cmp
cs
and
sbbl
leave
call
iret
lock
mov
rcrl
cs
cld
out
xor
hlt
mov
jg
mov
mov
adc
lods
lds
xor
rcrl
clc
xor
iret
sbb
sbb
inc
lea
outsb
aaa
dec
dec
sbb
cmc
mov
sub
notb
std
pop
je
repz
mov
add
xor
in
ljmp
push
xchg
mov
aad
inc
lret
fs
test
jns
test
push
ficomps
fidivrs
and
movsb
add
dec
jae
div
movlps
or
popa
push
test
cmp
adc
sub
sub
sti
xchg
repz
ret
pop
fcmovb
xor
or
mov
or
xchg
out
cmpsl
jnp
mov
inc
or
mov
push
pop
adc
mov
xchg
xor
cwtl
lret
fnstsw
lds
into
or
fld
clc
xor
clc
push
ds
mov
ljmp
insb
dec
and
adc
inc
sub
movsl
js
lods
fwait
sti
frstor
push
in
pop
rclb
shr
adcb
xor
les
push
stos
jbe
fisttpll
shll
xchg
ja
pop
mov
lds
ja
in
mov
sub
cmp
out
aas
sub
dec
cmc
repz
jmp
adc
icebp
dec
clc
sbb
and
ss
movsb
push
push
fcoms
loope
iret
and
and
movsl
iret
jp
bound
or
std
or
add
push
xor
inc
inc
shlb
cmpsb
cmp
ffreep
xchg
add
xchg
seto
out
mov
push
in
jecxz
loopne
sbb
ret
pushf
cmp
arpl
sahf
testb
jo
mov
xchg
mov
dec
cs
and
outsl
test
xlat
sbb
dec
mov
adc
add
mov
cmpsl
adc
pusha
and
pusha
xlat
repz
or
inc
decb
int3
dec
mov
jno
pop
sub
sbb
hlt
sbb
and
out
jmp
outsb
in
cmp
dec
lcall
mov
jbe
fadds
fildl
fdivl
adc
std
xchg
sbb
js
mov
stos
xchg
and
test
ja
cmpb
inc
mov
aas
incb
out
dec
lods
mov
cmpb
pop
mulb
dec
dec
repnz
mov
div
ja
mov
mov
cmp
daa
enter
arpl
pop
or
jmp
enter
cltd
pop
aas
loopne
pop
inc
jge
inc
in
lods
dec
cmp
dec
testb
xchg
in
test
lock
lods
daa
test
push
xchg
inc
aas
popa
dec
pop
push
insl
cmpsl
sbb
mov
sbb
add
idivb
stos
inc
or
push
call
fcomp
jae
repz
stos
push
mov
inc
and
sbb
cmp
and
and
lock
and
adc
sahf
inc
lcall
xchg
adc
push
mov
in
mov
test
ds
orl
sbb
mov
xchg
inc
pop
lock
xchg
fisubs
add
dec
adc
enter
out
test
fs
xor
sub
repz
repz
cli
xchg
stos
push
bndstx
fwait
pop
icebp
mov
push
add
jle
cmc
add
xor
lds
ret
enter
mov
push
fisubrl
in
mov
mov
outsl
or
ret
hlt
cmp
jmp
pop
sub
shr
cmp
in
sbb
fists
lods
inc
lds
out
movsb
sbb
ds
call
dec
int
jo
scas
push
jg
es
inc
mov
js
add
lea
loope
lret
imulb
jbe
leave
and
pop
push
aad
cli
ret
xchg
loopne
insl
shr
or
mov
jb
push
mov
dec
neg
stos
dec
movsl
push
and
sbb
push
jecxz
stos
mov
ret
mov
jl
add
sbb
sbb
in
push
xlat
popf
cmp
dec
push
mov
fistpll
lea
stos
dec
jnp
and
xor
orb
push
test
cmp
and
rcl
and
aaa
adc
adc
cmp
call
mov
sbb
xchg
xlat
shll
add
stc
sbb
scas
xor
sbb
cwtl
mov
aaa
out
adc
lret
sub
stc
sbb
mov
adc
sahf
test
jmp
xlat
outsl
pop
shll
imul
add
dec
xor
cmp
out
jns
dec
cmpsb
pop
dec
test
call
sbb
push
push
mov
xor
or
pop
mov
add
push
push
stos
lds
xbeginw
xchg
mov
imul
enter
mov
mov
insb
cli
sub
push
mov
pop
jg
icebp
jne
fnstenv
fwait
andb
mov
test
repnz
dec
aas
xor
jmp
push
and
fisubrl
mov
inc
out
fwait
cmpsl
push
mov
movsl
jmp
sti
pop
incl
mov
stos
in
cs
pusha
xor
jbe
pop
adc
mov
ja
fdivl
mov
pushf
sbb
outsl
insb
adc
or
aad
push
fdivrs
adc
lods
dec
xor
mov
cld
xchg
pop
xchg
mov
push
inc
cwtl
adc
decb
push
inc
les
mov
pop
lock
int
lds
adc
int
fsin
jl
jo
mov
push
push
jp
or
in
adc
std
cltd
popl
ljmp
es
sbb
sub
jmp
jge
hlt
std
pusha
ljmp
mov
xchg
cli
dec
push
mov
add
xor
movsb
cmp
test
cltd
mov
or
mov
mov
popf
mov
sti
xchg
dec
sbb
in
mov
lret
mov
xchg
sbb
xchg
fnsave
inc
and
sti
int
sub
imul
xchg
dec
lahf
mov
cmc
es
pop
scas
push
dec
mov
xor
cmp
scas
dec
sbb
inc
inc
fs
xor
jp
pop
and
arpl
cmpb
cmc
jecxz
xor
out
lcall
and
daa
test
inc
mov
repz
jge
push
sti
iret
xchg
pop
and
shlb
push
jge
adc
in
dec
dec
outsl
addl
mov
out
add
mov
jbe
fistps
ret
push
ficomps
subl
inc
stos
jno
ret
aaa
xchg
jecxz
jmp
xor
mov
insb
dec
inc
fildl
aad
jmp
fidivrs
inc
push
sub
push
xchg
daa
aam
mov
sbb
dec
cmp
xor
inc
push
jne
ja
cs
push
in
xchg
lds
mov
imul
adc
cwtl
sahf
insb
sub
or
es
xchg
push
mov
cmp
xor
std
cltd
ljmp
outsl
jp
pop
sub
cmp
jg
stos
cmc
ret
or
out
xchg
or
dec
xchg
dec
and
push
adc
lock
cmp
ret
jecxz
lods
lods
loopne
imull
sub
arpl
push
jg
sahf
ret
ljmp
sub
mov
stc
sub
pop
pop
aas
andl
incl
mov
adcl
push
in
mov
stos
fisubl
xor
sbb
jp,pt
repnz
and
jb
sbb
jmp
jmp
out
lahf
and
stos
jmp
xlat
gs
fwait
fwait
xor
shll
shrb
movb
mov
aas
and
lock
out
xchg
xchg
ljmp
or
incb
jno
pop
rcrl
pop
mov
mov
pop
jae
mov
outsl
pop
sub
push
je
mov
mov
inc
fsubs
stc
in
test
int3
or
xchg
jb
mov
mov
es
rcrl
jecxz
adc
out
pop
addb
mov
push
add
lods
aam
clc
fistpl
pop
cltd
push
jg
jne
in
add
ror
adc
adc
leave
xor
out
stos
popa
sub
cmovp
sbb
pop
neg
and
mov
adc
jns
scas
cmp
xchg
mov
fwait
cmpsl
movsl
add
idivb
mov
ljmp
data16
cmp
ds
insl
mov
daa
gs
cmp
adc
adcl
sbb
das
push
pop
rolb
in
pop
push
pop
sbb
mov
xor
movsl
gs
push
lock
loopne
enter
lea
dec
dec
and
add
mov
orb
or
inc
lods
xchg
cltd
and
cmc
push
cld
jg
sub
nop
push
je
inc
or
jns
movsl
xchg
rcrb
mov
add
push
ret
jo
mov
popa
out
das
addr16
testb
stc
push
xchg
dec
aam
pushl
addr16
ljmp
inc
mov
jo
cmpsb
and
clc
sub
inc
sub
xchg
or
sbb
adc
jb
outsl
xchg
out
fs
ret
xchg
sub
sbb
lcall
out
cmp
ficoms
jae
leave
inc
imul
dec
inc
mov
hlt
repz
jge
fs
xchg
adc
add
jge
add
or
lret
jl
or
adc
aad
into
inc
push
arpl
les
sub
xchg
xchg
pop
dec
dec
xchg
mov
mov
in
or
mov
cmpl
hlt
mov
xor
add
jg
mull
lret
mov
sbb
sbb
sub
gs
sahf
mov
push
sbb
mov
lret
mov
ds
dec
xor
repnz
add
nop
test
dec
in
mov
mov
or
loope
inc
loopne
notl
into
dec
icebp
bound
dec
pop
xchg
mov
jmp
imul
or
xchg
out
xor
mov
pop
ret
call
sub
pusha
mov
jmp
leave
dec
xchg
out
sti
ljmp
pop
movsb
cmpsl
cmc
incl
xor
push
pusha
jo
sbb
out
inc
pusha
dec
ss
xchg
lea
jnp
out
mov
scas
xor
fildll
dec
cmp
clc
mov
xor
dec
jb
stos
xor
aam
subb
scas
lret
ja
mov
add
mov
aad
test
addb
insl
xchg
pop
mov
std
push
out
es
cld
cmp
and
lea
xor
sub
mov
pop
addr16
enter
scas
pop
cmp
call
cwtl
xor
push
test
shr
test
lahf
mov
or
jle
add
sub
sbbl
sbb
lahf
mov
insl
loopne
or
addl
lods
ljmp
xchg
fwait
xchg
testl
inc
xchg
inc
hlt
call
mov
in
xor
push
je
xor
in
add
cmp
inc
repnz
lea
mov
xor
dec
sti
jp
xor
and
sbb
xor
test
mov
in
fists
xchg
int
ja
add
int
aas
and
ret
push
inc
mov
icebp
inc
int
imul
jae
push
jp
lods
add
subb
mov
push
mov
push
repnz
fs
pop
dec
mov
test
sbb
jcxz
in
jne
sub
cmpsw
out
sub
loope
lret
dec
fnstcw
sbb
aad
scas
cmp
and
jmp
and
xchg
lret
push
je
cltd
cs
clc
and
push
scas
into
add
fmull
cmpsb
xchg
dec
xor
ljmp
fisubl
mov
and
push
movsb
cltd
fdivrp
cltd
xchg
mov
test
enter
inc
inc
sub
pop
mov
out
cmp
jns
cmp
xchg
imul
push
in
es
les
loop
pop
pop
nop
sub
sub
xchg
loop
or
insl
inc
sahf
xor
int3
into
xor
rcll
ljmp
faddl
cmc
dec
adc
xor
push
or
aam
sub
push
repz
fmuls
sti
fwait
popf
mov
push
push
jne
lods
inc
xor
adc
pop
jmp
pop
xchg
add
or
dec
xlat
mov
pusha
pop
insb
push
pusha
and
outsl
push
out
insl
pusha
mov
jbe
ja
cmpl
es
sbb
mov
paddsw
loop
xchg
push
dec
fwait
push
shr
test
stc
or
pushf
xchg
xchg
sahf
pop
jns
pop
fcomi
mov
jns
push
ds
xchg
sub
sub
sbb
cmc
jnp
pop
cltd
lret
in
insl
push
add
pop
mov
jae
movsb
les
ds
cwtl
call
jns
fstpl
sub
sub
jbe
ucomiss
mov
xchg
cmp
xchg
cmp
cmpsb
dec
fists
jle
cmpsb
push
jp
call
jnp
jb
dec
sub
ljmp
inc
add
or
divb
mov
ret
mov
clc
inc
into
loopne
popf
cmp
push
jb
call
and
jle
jb
ret
mov
cmp
ret
or
cwtl
inc
shlb
cmp
pop
daa
enter
out
fstl
dec
jns
xor
popf
gs
cld
push
fimuls
fidivrl
jo
mov
jmp
xchg
loope
xlat
cmp
mov
xchg
test
fucomi
add
push
lcall
xchg
or
add
ret
adc
and
sub
popf
pop
add
push
cmpsb
call
repz
movsb
out
adc
and
arpl
test
jmp
lods
imul
cmp
mov
les
adc
jo
mov
movsb
xor
jle
fistps
cwtl
and
ds
xlat
jb
hlt
popf
jno
xor
fadds
lcall
fstl
fidivrl
ljmp
in
add
cli
mov
inc
lcall
sbb
inc
ficompl
in
iret
pop
dec
jle
notb
dec
loopne
cmp
xchg
jecxz
ret
movb
call
add
cmp
ret
int
push
iret
fldcw
jne
arpl
mov
jne
flds
or
and
adc
cmc
pop
xlat
mov
mov
mov
bound
int3
stos
push
push
push
in
mov
daa
xor
cmp
sub
push
loopne
loope
pop
stos
mov
sub
hlt
jno
adcl
ja
cwtl
mov
int3
fwait
xor
push
mov
jo
lock
sub
or
push
inc
mov
xchg
insl
jnp
shll
stos
nop
mov
adc
out
push
popa
push
fnstenv
mov
pop
divl
jl
iret
mov
xchg
dec
mov
adc
push
jmp
cmp
jge
adc
inc
fs
cmpsl
mov
add
pop
xchg
mov
insb
adc
pop
push
stos
stc
add
popa
jge
fnsave
mov
lahf
cmp
mov
shrb
ljmp
mov
gs
gs
jnp
or
or
dec
testb
xor
xlat
iret
and
arpl
aas
push
ljmp
mov
fsubr
jp
rcll
repnz
imul
mov
push
stos
and
pop
mov
mov
popf
loop
jo
cmpsl
mov
sub
movsl
insl
cmpsl
test
aad
iret
fistl
dec
inc
mov
popf
add
lods
int3
jne
lea
mov
inc
and
mov
add
sub
out
jmp
mov
xchg
clc
pop
mov
data16
xor
push
fwait
add
xor
inc
popa
cmpsl
pop
cmp
jno
pop
sub
cld
cmpl
xor
dec
push
scas
mov
scas
cmp
sub
inc
pop
iret
push
outsl
jbe
cmp
sbb
test
fsubs
mov
test
push
shlb
das
addr16
popa
xchg
add
test
cmpsb
imul
leave
int
testl
inc
mov
pop
daa
jmp
lods
dec
and
pop
div
push
daa
lcall
adc
mov
inc
mov
push
stc
mov
fadds
mov
ret
push
add
shrl
pushf
dec
pop
push
push
inc
cmp
xor
out
int
and
mov
cmc
jmp
cmp
pop
or
cmpsb
fnsave
lahf
mov
dec
js
subl
push
lods
sbb
rcrl
nopl
movsl
in
push
sbb
xchg
pusha
cmc
cmp
mov
push
outsb
ss
inc
pop
aam
inc
pop
cmp
loope
sub
test
xchg
xor
movsb
inc
in
pusha
jg
xchg
push
lret
sbbb
push
dec
add
repz
mov
or
scas
cli
mov
dec
inc
add
leave
arpl
dec
add
fisubl
sbb
call
dec
cld
and
inc
orb
sub
fmuls
jp
mov
lds
insl
add
shl
pop
mov
out
or
jle
shr
mov
icebp
mov
aam
arpl
loopne
bound
mov
xchg
jnp
push
cmc
std
pop
sbb
pop
std
cmp
outsb
mov
adc
mov
mov
add
cmp
xchg
mov
push
jb
xchg
aad
add
mov
out
sub
xor
cs
jb
dec
dec
push
sub
jo
and
mov
mov
orb
in
push
jae
jo
adc
pop
sub
lahf
xchg
ficoml
jae
test
sub
dec
lcall
in
fidivs
adc
inc
scas
dec
dec
xor
sbb
xchg
inc
lahf
adc
lods
pop
jno
mov
loop
dec
and
jmp
or
jmp
or
jns
jl
dec
orl
cmp
adcb
pop
insl
add
lahf
ss
cmpsl
mov
dec
sub
ficoms
sub
jne
sarb
stos
movsb
mov
les
pop
mov
and
fnsave
and
test
lcall
xor
mov
cmp
outsb
push
enter
repnz
xchg
mov
push
sbb
shlb
icebp
rolb
std
jle
xchg
into
mov
sub
repz
xor
cmp
dec
out
pop
xlat
jb
mov
or
sub
out
xor
arpl
out
mov
and
push
cmc
push
and
xor
and
adcb
jno
lea
fidivl
xor
in
cmc
test
jmp
rcr
mov
or
fdivrs
dec
outsb
iret
mov
imulb
fnsave
jecxz
les
mov
leave
xchg
ds
aaa
pop
loop
sahf
int
sbbl
or
adc
je
mov
add
xchg
arpl
inc
xchg
mov
push
jmp
clc
xchg
jle
aas
vsqrtps
pop
imul
arpl
sahf
or
inc
int3
into
and
and
jns
cmp
in
pshufw
test
sbb
out
xchg
add
dec
dec
sbb
jne
xchg
scas
sbb
bound
push
jo
xchg
xchg
jge
int
in
xchg
mov
jo
shl
inc
neg
lock
pop
mov
dec
mov
cwtl
inc
and
push
xor
test
cltd
out
ja
pop
aam
popf
mov
jne
rol
jmp
push
gs
int3
sub
sbb
adc
js
stc
pusha
xchg
jp
enter
mov
fcompl
mov
dec
stos
or
lret
mov
xchg
lret
idivl
push
int3
sub
xchg
mov
mov
sbbl
decl
jmp
sbb
jle
lds
cwtl
das
xchg
fidivrs
scas
nop
aaa
fucomp
push
cmp
adc
es
jmp
cltd
out
mov
inc
mov
mov
lret
lret
loope
mov
sbb
sbb
and
insb
jle
inc
fwait
adc
adc
jne
inc
cltd
xor
cld
inc
shrl
mov
stc
or
mov
mov
movsb
jo
push
mov
mov
dec
out
or
mov
loope
dec
in
aas
jns
test
insl
mov
push
testb
push
sub
ds
pop
dec
frstor
mov
inc
jbe
out
lds
shlb
int
cmp
push
imul
jbe
mov
aas
xchg
lret
xor
dec
dec
outsl
lahf
mov
push
jecxz
jmp
ret
pop
add
mov
pusha
int
shlb
enter
sub
pop
push
aas
sub
dec
jecxz
into
adc
aad
in
sbb
repz
mov
and
push
aas
test
add
mov
mov
test
cmpsb
mov
cmpsl
clc
pusha
lret
pop
repnz
lahf
and
jne
test
jp
jp
mov
scas
push
inc
mov
xor
std
push
fistpl
sub
xor
xchg
in
adc
adc
adc
sbb
ja
lods
jmp
jl
popf
jmp
inc
cmp
jne
mov
lret
mov
imul
mov
inc
pop
xor
xchg
jmp
mov
testb
lock
nop
mov
cld
lea
insb
and
outsb
ret
mov
test
pop
sub
jbe
in
cltd
insl
push
push
xchg
mov
push
add
dec
aad
cmpsb
pop
cmp
inc
sub
loopne
popa
xchg
movsl
aaa
xchg
cmpb
aad
notl
pop
mov
sbb
pop
sbb
cmp
jae
or
or
and
ret
pop
push
pop
cltd
mov
mov
testl
repnz
mov
sbb
dec
mov
sbb
or
sbb
xchg
fs
decb
xlat
and
out
adc
mov
mov
test
mov
fimuls
add
in
sub
jae
push
out
scas
mov
imul
pop
mov
push
mov
test
daa
adc
inc
idivl
cmpsb
pop
icebp
pop
and
repz
hlt
stc
or
inc
mov
repz
mov
inc
pop
push
shl
inc
daa
pusha
and
imul
or
adc
out
inc
movsb
imul
out
inc
ljmp
xor
xchg
push
xor
dec
in
std
mov
dec
sbb
mov
dec
mov
xlat
int
mov
add
xchg
sbb
das
push
mov
mov
loopne
or
and
shl
fisttpll
cmp
pop
cmp
lock
sub
fnstenv
fstpt
or
sbb
dec
pushfw
fnsave
inc
test
aas
pop
fwait
push
xlat
sub
push
imul
js
pop
sub
ljmp
push
pushf
adc
push
jns
cwtl
das
mov
mov
mov
cmp
pop
nop
push
aad
or
adc
loop
jno
mov
jbe
stc
jbe
sahf
movsb
stc
xchg
faddl
push
loope
mov
add
push
mov
fbld
fidivrs
fistpl
push
incb
cmpsl
push
sub
cli
jmp
adc
les
mov
or
dec
rcll
int3
rclb
jle
xchg
sub
lds
push
es
add
fs
popl
subb
test
add
jg
sub
lods
cmc
mov
xchg
sbb
push
dec
add
shll
xor
in
or
cwtl
mov
sub
sti
sbb
xor
dec
std
inc
lds
cli
or
xor
ret
xor
mov
test
sbb
lock
in
pop
add
cmp
pusha
lcall
dec
dec
test
shrb
dec
push
mov
adc
sub
sahf
dec
jbe
cltd
or
out
fiadds
push
jg,pt
in
outsl
pushf
push
push
sbb
inc
sti
pop
inc
mov
push
xor
shll
lret
push
aad
js
insb
mov
dec
leave
lret
xlat
inc
sbb
add
inc
pop
shlb
and
inc
movsb
ss
bound
popa
popl
sbb
adcb
aad
orl
inc
notb
arpl
push
pop
push
ret
xchg
jge
mov
shlb
test
pop
dec
stos
and
mov
jbe
ja
add
sbb
pushf
rcl
mov
iret
cs
les
push
insl
xchg
bound
into
sti
mov
movsb
mov
icebp
adc
lods
int3
mov
mov
jnp
inc
add
leave
fs
fcmovnu
pop
xor
jo
movsl
jmp
mov
imul
mov
push
mov
test
cld
in
dec
cmp
test
sub
sti
aad
mov
hlt
testb
sub
mov
gs
test
lds
repz
mov
gs
add
shll
jmp
sub
orl
pusha
int
or
push
mov
lods
lea
sarl
mov
aaa
iret
xchg
rcrl
mov
popa
shl
movsb
cmp
fsubs
xchg
dec
mov
imul
mov
icebp
test
outsb
jp
repnz
pop
dec
cmp
push
mov
and
xor
subb
cmp
push
adc
jmp
mov
mov
lods
sub
cwtl
jmp
sub
jl
jnp
xlat
pop
adc
cmpsl
mov
enter
outsl
mov
adc
fwait
imul
cmpsl
imul
push
movsb
scas
pop
imul
sti
sub
pop
or
push
add
enter
orl
push
shrl
xchg
push
adc
adc
dec
jmp
cmpsl
ds
hlt
addr16
rol
mov
call
jb,pt
sar
or
pop
insb
rcr
or
or
sbb
into
sbb
rorb
outsl
jp
xchg
lods
in
or
push
jecxz
and
mov
fwait
mov
push
push
push
loopne
mov
fnsave
stc
sbb
call
aad
adc
jbe
mov
xor
ficompl
cmp
sbb
rorb
cmpb
cmp
cmc
pusha
test
cs
push
mov
dec
add
jge
mov
sub
add
data16
test
outsb
sbb
mov
fs
inc
push
les
in
lahf
xor
pusha
dec
mov
or
lock
dec
mov
jns
adc
ss
sub
scas
mov
mov
scas
adcl
jl
enter
ret
jb
xchg
mov
into
add
jae
insb
add
jb
lods
pop
decb
cmp
out
jne
int
mov
mull
popl
dec
dec
jge
push
cs
xor
mov
leave
fisttps
or
loope
daa
sbb
dec
dec
mov
inc
jp
mov
lret
or
testb
icebp
push
adc
push
addr16
je
xor
push
in
xchg
jo
dec
and
add
xor
ja
mov
mov
mov
cmpsb
out
outsb
or
jg
and
and
jp
arpl
cltd
inc
leave
fldpi
lret
mov
sub
cmpsl
ret
rorl
daa
mov
test
out
xchg
movsl
enter
pop
out
mov
in
std
mov
ret
push
fmuls
xchg
mov
jge
mov
pushf
outsl
shrb
in
sub
int
jb
pusha
scas
pop
outsb
fimull
mov
mov
cld
push
cmp
adc
xchg
mov
into
mov
adc
scas
xchg
adc
sti
mov
xor
mov
ss
inc
dec
push
mov
mov
negb
lret
decb
in
inc
in
xor
std
loop
adc
mov
mov
rcr
push
movsl
xchg
stos
decb
movsb
repnz
insl
rcl
add
dec
add
add
popa
and
aas
dec
outsl
nop
jno
dec
not
test
sub
pop
mov
fiaddl
icebp
fisubs
ljmp
int3
addr16
jmp
dec
lds
sub
jecxz
or
mov
and
cmp
test
mov
push
out
push
xchg
mov
stos
sbbl
add
mov
jmp
sahf
call
addr16
xor
test
or
loop
mov
hlt
mov
fsubs
dec
add
mov
lods
imul
test
loope
and
mov
mov
jl
sbb
sub
imul
push
das
cmp
mov
jb
cmp
icebp
inc
gs
inc
rolb
jmp
inc
or
sahf
shlb
aas
mov
shr
jnp
pop
in
and
imul
incl
xor
cltd
jo
add
addb
jge
int3
xchg
push
ss
jmp
inc
jne
stos
dec
sub
fsubrl
int
sbb
add
or
dec
cmp
jbe
dec
pushf
loop
cld
cmc
dec
mov
push
aam
push
sbb
sbb
mov
dec
in
mov
imul
fwait
lods
stos
fnstsw
and
into
sarl
scas
decb
loope
dec
movsl
jmp
inc
sub
fisubrl
loopne
inc
sbbb
lds
ja
add
push
in
and
inc
push
adc
sbb
bound
or
rcrb
jnp
sahf
cmc
out
lahf
sbb
in
jge
sub
jle
lahf
mov
push
inc
in
cmp
stc
test
mov
lret
or
mov
call
push
jne
push
sbb
add
mov
pop
inc
jp
scas
lret
mov
repnz
cld
jae
aas
aad
out
cs
daa
int
jnp
cmp
xchg
jg
pop
cmpsl
mov
leave
mov
imul
pusha
ds
add
dec
je
pop
xchg
jae
sub
add
out
and
mov
popa
gs
scas
jo
mov
andb
pusha
dec
aas
push
aas
sub
inc
flds
popa
pusha
mov
cwtl
dec
inc
dec
lods
mov
dec
scas
fldl
mov
jno
jns
sbb
and
subb
clc
sbb
adcl
in
shr
adc
std
movd
mov
mov
and
pop
adc
inc
xor
jge
loop
fxch
mov
stos
sub
push
enter
xor
inc
cmpsb
xchg
jbe
xor
push
jb
xchg
mov
dec
int
mov
daa
and
fstps
jb
sbb
jecxz
pcmpgtw
sbb
mov
hlt
xor
lret
and
add
hlt
pop
mov
sbb
inc
jne
sbb
inc
sbb
mov
cmp
adc
outsb
outsb
scas
jo
xor
into
and
adc
ljmp
insl
fbstp
inc
rcr
push
ds
stos
inc
inc
int
jb
iret
pop
lods
add
out
mov
nop
adc
sub
pushl
enter
sbb
out
popf
add
xchg
idivb
gs
mov
pop
xor
jnp
test
inc
mov
ljmp
sbb
ds
xchg
mov
test
xchg
pop
cmp
stc
dec
adc
cli
sbb
xchg
jecxz
subl
xchg
inc
sub
cmc
inc
adc
fidivl
adc
mov
cltd
in
mov
cmp
cli
push
mov
cmp
pop
imul
sbb
cwtl
adc
mov
imul
mov
adc
divb
insb
insl
and
stos
or
dec
sub
sar
inc
pop
xor
cmpsb
cltd
push
and
testl
addr16
movsl
or
add
dec
dec
test
push
icebp
push
xor
mov
std
icebp
iret
xorb
adc
sub
and
mov
jge
mov
addr16
xlat
xor
mov
or
decl
inc
inc
js
jns
dec
cmp
pop
mov
aad
mov
aas
mov
xchg
fcoms
shrl
mov
das
mov
xlat
scas
aas
aad
out
test
cmp
inc
insl
sbb
jb
push
pop
and
fbld
jmp
aaa
shlb
jae
cltd
std
and
add
jbe
cmp
adc
out
fstps
roll
mov
divl
cmpsl
sbb
cwtl
ja
outsb
push
fistpl
je
adc
mov
jae
jns
mov
inc
push
push
loope
ja
shrb
ss
mov
cltd
dec
sub
stc
sahf
jns
sbb
sbbl
call
mov
test
xor
inc
jle
insl
mov
hlt
ja
loope
or
popf
test
call
pushf
or
mov
mov
or
xchg
test
mov
jmp
dec
shlb
cmp
pop
jle
adc
insl
jno
xor
push
hlt
dec
push
sahf
icebp
inc
loopne
jg
sahf
adc
xchg
inc
dec
sub
aam
loope
stos
dec
dec
mov
mov
gs
das
fstpt
mov
mov
lret
lock
ja
fldenv
nop
daa
fnstsw
cmp
js
lods
sub
cmp
ja
daa
inc
sub
inc
cwtl
jle
imul
out
sub
fsubrp
xorb
adc
jl
je
inc
arpl
jno
cmc
jmp
adc
cmpb
sbb
shll
mov
insb
into
xchg
xchg
or
int3
je
cmp
push
scas
ficomps
mov
sub
or
cmp
shll
sti
xchg
out
rcrb
mov
push
dec
pop
mov
pop
addr16
int
mov
test
lea
lret
lret
push
test
push
mov
insb
mov
mov
xchg
js
sbb
push
pop
js
and
add
xchg
cmp
sbb
scas
and
test
addr16
mov
adc
roll
leave
xor
mov
in
xchg
dec
mov
sub
arpl
repz
scas
negb
pushf
scas
xor
and
jl
std
lcall
xchg
js
dec
mov
and
push
pushf
fwait
rorb
lods
push
jp
mov
insb
dec
test
fidivrl
mov
and
jno
lcall
popa
jns
jl
mov
popf
stos
scas
add
scas
and
aam
sub
loope
push
imul
sbb
sarb
femms
push
sbb
dec
pop
push
pop
flds
clc
cmpps
push
call
mov
mov
sahf
movsl
mov
arpl
sub
test
jmp
insl
or
add
or
outsb
mov
pminsw
cmp
loopne
sahf
aam
pop
and
test
add
sbb
aas
arpl
loopne
jmp
ja
cs
dec
fsubl
lahf
test
rolb
push
addr16
cmp
add
test
clc
sbb
jb
jns
add
sbb
aaa
cs
ljmp
std
jns
xor
xor
sbb
xor
jecxz
mov
jle
push
xchg
mov
mov
sahf
push
scas
xchg
mov
jecxz
ds
dec
movsb
inc
adc
and
loopne
dec
dec
les
clc
imul
popa
pop
popf
cmc
add
jmp
pop
clc
push
xchg
aaa
jne
mov
dec
mov
mov
cmp
stos
hlt
sub
hlt
pop
dec
pop
insb
xor
in
sbb
xchg
dec
xchg
or
mov
mov
push
adc
and
add
inc
sub
andb
and
xchg
dec
sti
pop
mov
sub
jo
repz
and
clc
or
adc
das
mov
or
and
dec
sbb
call
push
cli
sbb
movsb
arpl
loope
fwait
loopne
push
xorl
inc
sbb
jmp
inc
fstl
js
adc
cmp
and
sbb
in
xchg
push
dec
scas
xchg
adc
loope
jle
mov
inc
sarl
loope
push
js
fisubrl
jp
lds
xchg
rcll
push
in
and
sub
bound
lret
test
mov
enter
test
sahf
lods
shld
sbb
ds
pop
jbe
xchg
jp
icebp
popl
push
and
jo
xchg
mov
or
push
cltd
push
mov
xchg
insl
sub
movsl
inc
stos
leave
in
ja
inc
lret
push
andb
jecxz,pn
xor
movsb
ret
sub
sbb
loop
cmp
jne
sub
in
lcall
sbb
incb
in
cli
xchg
and
or
call
ret
vhaddpd
iret
mov
add
out
dec
adc
mov
mov
mov
dec
pushl
add
addb
mov
stos
inc
push
jae
pop
enter
loop
dec
loope
fdiv
inc
mov
test
sbb
nop
daa
adc
sbb
nop
mov
push
insb
dec
push
xor
xchg
aad
outsl
mov
test
int
xor
sarb
pop
jge
mov
adc
pop
ret
pop
cwtl
adcl
jl
pop
ss
arpl
xor
xchg
add
adc
cmpsl
icebp
xchg
pop
xchg
fcmove
in
mov
adc
shrb
insb
jb
push
in
adc
repnz
arpl
ret
out
sub
fbstp
cmp
fsub
icebp
std
cltd
push
stc
xchg
stos
daa
je
and
dec
movsb
mov
lcall
ret
add
int3
mov
data16
cmp
xchg
mul
mov
push
shl
mov
rol
pusha
addl
jb
sahf
add
fwait
repnz
mov
xlat
mov
ret
bound
gs
lret
imul
mov
sbb
pop
jae
dec
orb
dec
or
mov
movsl
out
out
shl
cmpsl
push
sub
xor
xchg
cli
testb
push
mov
call
push
xchg
sub
in
mov
mov
decl
and
out
js
push
jne
scas
push
add
loopne
scas
push
mov
jb
mov
insb
cld
fwait
imul
lds
add
add
mov
and
inc
xchg
cmp
push
lods
aas
mov
push
int
cwtl
or
out
xchg
xchg
rorl
movsl
les
cmpsl
out
mov
outsb
adcl
mov
shrb
shrb
cmc
dec
pop
dec
ljmp
int
into
fwait
mov
pop
in
inc
scas
repz
bound
xorb
insb
icebp
mov
jmp
push
sbb
and
fs
push
sbb
das
outsb
mov
nop
insb
sti
add
je,pt
pop
mov
inc
or
ret
mov
push
mov
bound
mov
jmp
pushf
adcl
adc
lret
clc
test
std
in
xlat
push
fisubrl
mov
fdivl
cmp
mov
mov
pop
addr16
out
or
sbb
xchg
push
inc
mov
out
or
push
hlt
test
jl
and
jae
xlat
aad
dec
ret
push
movsl
lea
iret
test
arpl
test
lods
push
shrl
lcall
ret
pop
cli
mov
dec
fbstp
jo
je
lahf
out
rcll
int3
xlat
lea
lret
push
jnp
fldt
and
aad
dec
jge
out
and
fnstenv
xchg
mull
push
xchg
sbb
dec
mov
pop
sahf
pop
jl
inc
jle
je
imul
lods
mov
mov
outsb
lret
mov
popf
out
loopne
mov
mov
mov
push
inc
sti
jbe
xor
ret
int3
inc
jb
dec
xlat
mov
fstpt
add
lret
xor
sub
jae
add
sti
xchg
dec
xor
hlt
lock
mov
jae
mov
cmp
jnp
adc
pop
lds
mull
xor
mov
sbb
jecxz
xor
ror
jge
call
mov
push
popf
scas
or
mov
xchg
lods
push
push
mov
push
stos
inc
pushf
mov
clc
or
enter
call
xor
insb
adcl
loope
xchg
insl
mov
sub
bound
pop
jg
clc
test
fistps
pushf
mov
lods
fisttpl
fiaddl
ud2
fisubs
pop
ljmp
imul
lods
popa
push
mov
dec
mov
jl
cwtl
mov
push
mov
xor
bound
cmp
lret
stos
inc
jmp
xchg
pop
jp
cmp
push
pushf
push
jg
mov
sarb
loope
inc
and
sbb
xchg
orb
mov
add
xchg
mov
pop
mov
inc
repnz
pusha
ret
adc
jae
xchg
fisubl
push
mov
js
std
pop
push
rcrl
mov
int
adc
lock
ret
jp
idivb
mov
push
insb
inc
icebp
mov
or
outsb
sub
push
stos
adc
leave
jmp
adc
mov
sahf
add
xchg
jmp
pop
jne
popf
pop
add
fs
data16
andb
jnp
jb
mov
inc
add
je
ss
cmp
jge
fdiv
fcomps
rclb
rolb
inc
add
mov
lfs
xchg
ret
rcrl
sub
jb
clc
xor
sub
mull
dec
fucom
sbb
std
xchg
fistpl
sbb
nop
ljmp
pushf
cli
jg
cmp
sbb
in
cmp
mov
adc
mov
iret
sbb
aad
or
in
pop
mov
pusha
mov
mov
fsubrl
jmp
xor
bound
in
in
sahf
adc
mov
daa
ret
and
adc
or
jmp
lahf
xor
xchg
test
mov
jg
push
cmp
sbb
movsl
inc
or
mov
popf
jb
adcl
sbb
mov
pop
data16
mov
pop
fsubrl
push
incb
jbe
rcl
add
outsb
std
or
das
nop
arpl
and
pusha
inc
xchg
inc
ret
jne
cmpsl
out
mov
fbld
shl
imul
repnz
shlb
mov
or
inc
fcoml
lock
xlat
add
jecxz
rclb
push
icebp
pop
mov
lret
nop
int
into
in
nop
adc
in
scas
les
pop
lahf
scas
fldl
push
jmp
addr16
lds
xchg
mov
les
bound
ja
and
cwtl
pop
arpl
xor
fisttpll
in
sbb
pop
mov
mov
xor
insl
bound
mov
outsl
jg
push
xor
aad
lods
std
push
mov
jae
mov
mov
mov
jo
lret
push
pusha
push
push
mov
push
and
add
insl
inc
mov
mov
adc
pushf
push
cli
bound
scas
int
mov
adc
repnz
and
scas
add
push
sbb
pop
imul
and
jno
in
popa
enter
pop
mov
int3
leave
into
jg
add
cwtl
inc
fbstp
xor
rorb
adc
mov
pop
leave
lret
adc
cmpsl
mov
js
inc
out
mov
fnstsw
addr16
dec
adc
mov
enter
lret
push
add
xor
pop
xor
sti
loopne
sub
dec
jbe
lea
push
test
sbb
mov
fwait
jb
cmp
in
xor
or
data16
sti
mov
inc
in
dec
push
inc
fdivrl
cmc
sbbl
jge
mov
mov
push
sub
push
adc
pop
inc
ljmp
xchg
mov
push
xchg
and
or
or
fdivrl
mov
adcl
ss
jno
out
jg
shll
pop
or
xor
mov
mov
lods
andl
cwtl
adc
cwtl
push
add
xchg
xor
or
mov
pop
rorl
push
loope
scas
fistl
ds
lock
sarl
mov
fnsave
mov
aaa
into
push
fildll
rcl
sub
loope
shl
add
push
xchg
repz
mov
xlat
mov
fcomps
in
adc
mov
sub
icebp
mov
sbb
aaa
dec
xchg
cmp
xorl
out
xchg
frstor
inc
cltd
incb
dec
lcall
or
loopne
sub
mov
xlat
imul
hlt
jb
mov
and
dec
ret
aaa
sbb
int3
mov
je
pop
sbb
xlat
pop
push
insb
push
test
es
aaa
cmp
in
dec
popa
loop
or
ret
xor
sub
pop
fildll
mov
cld
and
ja
sbb
sbbl
sbb
dec
push
sbb
mov
call
jp
cmp
outsl
fisubs
rorb
mov
mov
lea
dec
iret
pop
dec
cmp
sub
adc
mov
pop
mov
ret
sbb
cmc
cld
push
fxch
or
jns
adc
sbb
sarl
push
xlat
mov
shl
add
and
rclb
jo
shr
mov
sub
daa
popa
xor
dec
mov
adc
and
inc
lea
mov
jae
lahf
push
int
cltd
stos
mov
pop
in
shlb
mov
or
sub
push
ljmp
jno
rclb
xchg
mov
adc
loopne
xchg
push
jne
and
mov
jne
adc
or
movsb
ret
push
jno
add
rclb
cmpl
and
in
adcl
sti
dec
push
stc
push
sub
insb
lock
sbb
das
jbe,pt
out
adc
lock
push
pop
ret
dec
arpl
or
mov
adc
cmp
mov
sbb
dec
mov
icebp
insb
std
jg
inc
push
js
dec
daa
iret
sahf
xor
fsubl
mov
push
inc
cmp
xchg
das
mov
jbe
outsl
xor
imul
xchg
jle
mov
fistpl
scas
adc
xor
shll
in
mov
aaa
fwait
cmpsl
push
mov
mov
jbe
inc
fidivrs
cmpsl
out
xlat
xchg
fcoml
clc
jbe
inc
ljmp
add
cs
fisttpl
xchg
loope
jo
lods
sarb
xchg
xchg
fidivrl
pop
adc
mov
je
pop
popf
ljmp
xor
lea
sbb
mov
inc
lret
xchg
sbb
sbb
push
ds
pop
jl
jbe
xor
pop
aad
mov
push
inc
stc
insl
xor
jmp
rorb
mov
mov
lret
mov
stos
cmpsb
je
or
mov
mov
mov
les
push
mov
push
mov
pop
js
sbb
add
push
xchg
push
sub
scas
inc
gs
rcrb
dec
shr
mov
int3
jg
mov
mov
lret
out
dec
cmc
jle
shll
fisttpl
push
push
loope
fcomi
inc
fnstcw
dec
pushf
mov
aas
movsb
imul
sbb
std
mov
das
jecxz
dec
cmp
pop
xchg
mov
aam
fs
daa
clc
or
sbb
fistps
aas
push
sahf
in
or
lea
or
fists
pop
mov
pop
fsts
push
mov
xchg
mov
sbb
push
cmpsb
sbb
ret
mov
push
push
xlat
cltd
mov
or
push
sub
xlat
jmp
cmp
repnz
fidivs
dec
xor
mov
fdivrs
jle
call
test
insl
das
push
rcrl
or
test
xor
test
mov
push
fimull
push
mov
aam
nop
xchg
sahf
adc
sar
add
lods
sti
arpl
jl
cmpsb
les
cltd
dec
xchg
rorb
shlb
cmp
imul
scas
push
ljmp
or
mov
lods
mov
adc
add
cmpsb
jb
aad
jg
sub
fwait
sub
stos
xchg
aaa
iret
mov
push
push
lret
repz
fptan
or
sti
inc
aas
loope
cmp
dec
dec
scas
push
insb
cli
lds
jge
push
mov
mov
mov
add
mov
lret
sarl
in
and
push
mov
xchg
out
jg
mov
push
in
popa
mov
push
push
sahf
add
shlb
cltd
mov
push
andb
addr16
adc
mov
cmp
add
add
dec
pop
lock
aam
and
fcoml
mov
pop
or
inc
push
push
sarb
inc
jp
jle
aam
mov
data16
jne
stos
inc
movsl
out
adc
dec
enter
mov
add
int3
pop
xchg
cmp
push
xchg
or
mov
out
mov
mov
loopne
repz
push
cmpsb
lcall
lret
add
lods
jbe
cli
es
out
xchg
jge
lcall
cmpl
push
adc
push
dec
pop
jbe
jb
mov
inc
mov
cmc
or
test
bound
adc
aaa
cli
pushf
sub
mov
bound
jne
xlat
shlb
sbb
inc
je
out
ret
xchg
push
or
aaa
mov
fidivrs
xchg
fmuls
mov
sahf
enter
pop
fucom
add
add
es
rorl
imulb
cmp
push
add
in
orb
test
leave
cmp
outsb
lahf
and
mov
pop
addr16
inc
gs
in
pop
or
aad
sbbl
add
dec
or
mov
xor
test
add
int3
pop
mov
and
lcall
jns
fdivrs
clc
mov
imul
sahf
mov
inc
jne
je
lock
cld
loop
daa
aam
mov
dec
mov
orl
pop
out
or
mov
mov
cmp
imul
jo
add
ret
push
clc
popf
jo
outsb
sbb
pop
mov
xlat
icebp
push
xchg
pop
cwtl
mov
jge
sub
lcall
xorb
jns
imulb
xchg
sahf
lds
repnz
jmp
and
xlat
fildll
adc
cmp
xchg
js
repnz
cltd
pop
add
and
addr16
sti
push
push
sahf
sbb
out
sub
sub
repnz
sub
lea
movsb
mov
xor
mov
out
pop
ret
aas
imul
xor
sub
and
jo
xchg
das
cmpsl
mov
mov
stos
mov
ret
adc
mov
and
sbb
outsb
or
fsubrl
xor
fdivrl
push
sub
out
mov
movsl
shrb
inc
sbb
ret
pop
fimull
pop
mov
jmp
pushl
mov
leave
pusha
fidivs
imul
cli
dec
jle
jmp
or
fists
sub
ret
pop
inc
std
rcrl
or
cmc
fwait
sub
fdivl
jl
mov
dec
cmpsb
ret
fld
dec
mov
lret
mov
sub
sti
pop
aam
xchg
dec
and
insl
pop
xor
add
outsl
sbb
jge
dec
loope
movsl
adcb
lods
je
jno
fldenv
adc
stos
test
das
outsb
mov
push
sbb
in
cmp
sub
push
dec
cmp
sub
mov
sub
sbb
inc
xchg
or
pop
mov
in
lods
repnz
addr16
mov
clc
aam
out
xor
loop
inc
outsb
mov
push
dec
cmp
push
mov
mov
aaa
out
mov
outsb
shrb
sahf
adc
pop
addr16
lret
jne
ja
mov
aam
mov
or
ds
xchg
dec
pusha
je
outsl
call
addr16
pop
cmp
dec
mov
ret
shrl
test
sub
lcall
jae
mov
lea
into
mov
fcompl
inc
sub
js
or
fstps
pop
cmp
push
enter
cmpsl
ret
lcall
add
stos
lret
dec
jns
jge
popa
subb
inc
popf
jb
lahf
sub
add
repnz
dec
test
jns
sbb
sub
cmp
shr
cmp
popa
fidivrs
rclb
es
ret
jmp
or
pop
mov
inc
out
or
sub
aad
jle
movl
jle
or
rep
sub
rcrl
xor
enter
mov
fld
aad
mov
inc
fcmovb
inc
jmp
jns
sub
fnstenv
xor
cmp
imul
je
dec
les
rol
scas
js
sub
dec
imul
jno
jb
push
sbb
jbe
sahf
stos
das
ds
mov
andb
sahf
pop
scas
prefetchwt1
test
pop
sbb
das
shl
nop
daa
stc
push
xor
jge
scas
mov
lcall
jecxz
pop
scas
adcb
cmp
rcll
fcoms
sbbb
jl
shrl
stos
repnz
mov
inc
pop
jmp
mov
dec
mov
push
xchg
sub
mov
xchg
sub
xor
add
push
mov
fucom
sub
hlt
mov
cmpsb
inc
adc
insl
add
out
clc
ret
test
inc
jns
push
iret
sbb
sub
popa
push
outsb
pushf
out
xchg
stos
push
push
fwait
es
jns
ss
cltd
sub
push
mov
jns
push
inc
inc
pop
cmpl
jns
pop
or
and
scas
dec
insb
xchg
data16
inc
hlt
scas
add
test
mov
or
xor
jmp
icebp
fdivl
loop
jno
stc
popf
lcall
xor
popf
faddp
into
mov
lahf
xor
popa
and
push
mov
lcall
in
sti
dec
test
inc
fadd
mov
xor
daa
out
test
pop
add
dec
fisttps
push
mov
test
jne
push
jmp
aaa
fsubrl
scas
jnp
sbb
outsl
ds
and
stos
jns
xlat
dec
fwait
add
mov
mov
and
das
imul
sbb
jmp
test
dec
xchg
push
pop
xor
test
aam
sub
and
ja
and
mull
cmc
adc
mov
out
aas
shll
push
fdiv
sbb
mov
sbb
pop
pop
xchg
xor
and
iret
aas
add
push
mov
test
jecxz
std
add
leave
xchg
xchg
and
xlat
das
cli
jne
dec
xchg
incl
lds
fiaddl
fimuls
pop
xchg
aaa
dec
popa
clc
sub
ss
jnp
fcoml
pushf
pop
fldl2t
jb
push
pusha
lods
add
clc
mov
lock
inc
inc
fcompl
into
mov
or
mov
setg
movsb
mov
push
loop
jo
cmp
inc
imul
mov
cltd
mov
lds
mov
adc
enter
mov
inc
test
add
xor
fstpl
fimull
jle
shrl
sub
sub
sbb
in
dec
dec
dec
or
jp
jl
mov
push
xchg
sub
or
mov
shll
cmp
repnz
testl
mov
add
test
xchg
pop
aam
jp
mov
or
dec
repz
hlt
mov
std
inc
shlb
or
call
dec
cld
inc
cwtl
mov
aad
mov
mov
rclb
rol
into
jecxz
movsl
pop
mov
mov
cmpsb
sbb
push
mov
imul
lret
inc
into
pop
inc
pop
int3
leave
adc
bswap
cmpsb
push
push
dec
sti
test
xor
add
cmp
inc
ljmp
xor
insb
add
jmp
popf
mov
rol
aam
test
mov
xor
loopne
cwtl
push
mov
leave
loope
pop
sub
popa
into
andb
mov
in
cmp
push
loope
or
mov
or
mov
jnp
out
fwait
fistl
stos
xchg
or
adc
mov
iret
cmp
or
or
sub
dec
iret
sbb
cltd
jae
xor
cmp
xchg
mov
pop
icebp
lret
cmp
incb
jo
idivb
les
push
adc
or
xor
fdivrs
push
mov
ret
lret
into
mov
jge
or
push
test
push
in
ss
bound
shrl
mov
imul
xchg
xchg
imul
daa
push
adc
mov
frstor
cmpsb
xor
mulb
js
lds
inc
and
outsl
daa
xchg
jno
gs
mov
in
dec
jmp
mov
movsl
fimull
mov
sti
push
popf
adc
and
push
jle
orb
cmp
xor
negl
or
push
push
cmp
jno
insb
sub
rorl
sub
push
pop
or
daa
xchg
jo
xor
inc
or
stc
xchg
test
xchg
mov
mov
cwtl
add
aas
shr
in
push
cmc
mov
out
and
loope
xor
dec
mov
jle
dec
cmp
imul
insl
sub
in
das
daa
dec
mov
in
cmp
pop
insl
das
fisttpll
insl
lds
sbb
fstpt
inc
fiadds
inc
in
ret
fdivl
outsl
sub
add
lds
mov
call
in
nop
jno
xchg
notb
mov
pop
nop
aas
xlat
icebp
movsb
aad
push
jmp
rcr
sub
mov
dec
xor
rcrl
dec
div
outsl
ss
lcall
mov
and
cmpsb
ss
pop
lcall
inc
test
dec
rcrl
fistps
adc
pop
orb
push
adc
in
sub
rcrb
outsb
jno
insl
cmp
pop
adc
in
or
dec
loope
cmp
fdiv
xlat
sbb
add
popa
and
xor
mov
fsubrs
lahf
and
or
test
inc
cmp
aas
push
cs
stc
ss
jl
xchg
xchg
in
dec
add
dec
mov
xchg
pop
lds
or
mov
and
inc
andl
push
insl
les
cmpsl
push
adc
dec
or
jmp
mov
sub
dec
cmc
pop
out
pop
push
dec
dec
fdivrl
jp
mov
and
ficomps
sarl
les
dec
lds
or
push
inc
cli
mov
popf
outsl
jbe
or
sub
psraw
xor
iret
push
ljmp
jno
imul
jmp
popa
stc
addb
popa
pop
push
stos
fadds
cmc
mov
dec
fadds
cmp
ficompl
xlat
mov
xor
hlt
cwtl
movsl
mov
xor
mov
dec
mov
adcl
loope
sbb
ds
movsb
push
fimuls
outsb
add
and
mov
or
daa
ja
push
call
insb
or
push
jae
cmpsb
push
sub
imul
movsl
add
insb
cmp
xchg
loopne
pop
mov
sbbb
push
addr16
cs
pop
repnz
mov
cld
iret
pop
add
xor
enter
mov
std
xchg
inc
sbb
jmp
add
mov
inc
dec
sub
cmp
lods
and
lock
mov
push
jb
push
sbb
and
mov
cmp
shll
sub
mov
movsl
or
xlat
sub
rolb
add
movsl
sub
fldcw
hlt
insl
out
dec
add
jns
andb
jne
daa
in
into
mov
sub
cmp
xorb
inc
inc
pop
enter
xchg
frstor
sub
inc
inc
gs
mov
add
add
in
in
mov
sarl
or
repz
pop
cmc
jb
dec
mov
mov
sbb
fldt
inc
jno
and
sub
or
pop
out
int
les
sub
in
adc
dec
shl
xor
mov
pop
adc
sbb
xchg
push
inc
repnz
mov
adcl
out
mov
cmpl
cmp
mov
rcrl
notl
add
test
stos
mov
or
adc
pop
mov
dec
xchg
add
subb
das
or
repnz
inc
addr16
jmp
or
daa
dec
jae
in
testl
popf
jp
pop
mov
lock
fdivl
ds
xchg
orb
mov
sub
cltd
sar
notb
cmp
cmp
add
shl
aad
adc
cmp
sbb
ds
cmc
mov
aad
mov
jo
rcll
outsb
mov
in
test
lods
inc
mov
push
lret
rcll
inc
mov
pop
outsl
cmp
push
cmpsb
in
subb
pop
repz
mov
cmpb
jno
popa
cli
jle
mov
sbb
imul
xchg
xchg
xor
fdivp
bound
mov
movsl
stos
aad
mov
rclb
lods
inc
out
and
pusha
dec
dec
out
or
push
cmp
outsb
lahf
rclb
jmp
push
mov
iret
sub
daa
or
sti
outsl
xor
or
fcompl
sbb
xchg
outsb
arpl
xchg
add
add
icebp
imulb
adc
jbe
and
lods
push
out
imull
lret
sub
icebp
rorl
sbb
cli
pusha
mov
add
inc
outsb
pop
xor
adc
std
dec
bound
js
push
fs
sbb
icebp
insb
inc
int
mov
jg
insb
pop
mov
xor
test
inc
pop
icebp
cmpsb
and
add
cli
or
inc
test
aaa
popf
shl
lret
mov
pop
pop
jle
jne
xchg
repnz
inc
adc
ss
cmp
popf
jae
iret
add
loopne
fimuls
sbb
adc
jge
pop
scas
inc
mov
mov
mov
mov
inc
pop
sbb
call
or
mov
lret
ja
scas
xchg
jo
xor
fldt
pop
imul
ds
aas
push
lock
imul
jo
xor
adc
sub
add
xchg
add
dec
push
jo
sti
jbe
movl
pop
fdiv
xchg
cmpsl
int
add
jae
and
cmp
insb
jg
pop
cmpsl
mov
lahf
outsb
cmp
adc
ljmp
insl
shrb
xor
adc
out
dec
sbbl
xchg
jb
lret
movsl
pop
push
xor
mov
imul
lcall
push
scas
mov
pusha
outsl
test
dec
shlb
push
imul
sub
push
in
lds
jne
popf
mov
rorl
pushf
in
sarl
das
divb
sbb
cmpsl
sbb
js
sub
jno
stos
pop
hlt
jno
ljmp
xchg
or
sub
mov
sbb
inc
in
andl
stos
nop
xor
mov
push
cwtl
movsb
sbb
or
or
mov
jecxz
or
sub
movsb
add
xlat
xchg
test
jle
andl
sub
xchg
jnp
in
xchg
mov
leave
popf
mov
push
aas
mov
dec
sahf
std
imul
mov
jae
add
mov
loopne
xchg
push
rolb
jbe
icebp
fs
and
jge
pop
sub
adc
adc
popaw
add
jnp
movl
fists
mov
mov
icebp
insl
mov
cmp
nop
dec
or
out
cmp
jns
sbb
cli
and
xchg
or
out
aas
pop
mov
movsb
test
test
add
addr16
jnp
les
int3
mov
aaa
into
movsl
popf
out
push
xlat
push
mov
aad
lret
arpl
shlb
add
dec
sub
xor
push
addl
shr
cmp
sbb
sub
jle
xchg
xor
mov
out
lock
adc
dec
adc
fimuls
out
js
push
push
pop
in
int
xor
rcl
push
aaa
insb
dec
bound
pushl
mov
sbb
mov
mov
mov
cltd
ja
mov
mov
pop
cltd
stos
push
bound
xchg
jbe
dec
test
shlb
mov
jnp
push
lods
xchg
inc
in
jecxz
mov
scas
jns
das
cmpsl
mov
cmp
movsb
repnz
and
jecxz
orl
mov
sub
data16
ret
sarl
sub
mov
daa
outsl
mov
inc
inc
sbbb
int3
stos
inc
fnstcw
cmp
xor
shll
or
dec
pushf
xchg
sub
packuswb
negl
mov
into
sbb
and
popf
or
jo
daa
cli
repnz
or
mov
sbb
mov
outsl
fisubrl
iret
das
dec
mov
dec
push
sub
in
or
pop
sbb
divb
push
add
pushf
cmpsb
pop
pushf
pop
lods
or
int
cmp
cmpsl
ret
ds
inc
decl
scas
mov
lret
adc
lahf
adc
sti
cmp
xor
shrd
jmp
jnp
les
mov
and
xchg
popf
dec
xor
outsb
mov
lods
push
cwtl
mov
inc
push
pop
sub
addr16
mov
lret
cmp
pop
mov
in
add
xchg
sub
dec
push
pop
ret
push
xchg
jge
xchg
inc
arpl
cmp
inc
and
lcall
fisubs
xchg
add
push
jmp
aam
dec
mov
sbb
xchg
outsb
dec
push
pop
mov
mov
jp
inc
xchg
shrb
pop
insb
push
cs
sarb
jp
lock
pop
jno
outsb
and
pop
mov
mov
cmp
push
add
dec
cmp
adc
addr16
jbe
push
sarb
mov
jl
add
xor
mov
into
std
mov
adc
cmc
fcmovbe
stos
mov
hlt
fistpl
decl
jns
hlt
inc
loope
leave
fcmovu
push
jge
inc
es
xor
in
lahf
xor
aad
and
scas
inc
test
and
ficomps
xchg
adc
out
shrb
lret
loopne
jmp
pushf
loopne
add
dec
scas
jle
mov
test
ja
clc
nop
mov
mov
or
ds
cmp
cmp
fwait
aam
fwait
xchg
mov
mov
xchg
or
mov
mov
adc
pushf
push
jno
mov
icebp
movsl
cli
out
mov
cmp
inc
push
in
lahf
shrb
and
push
outsl
xlat
pop
push
js
mov
cltd
jbe
negl
push
xor
loope
xchg
jge
bound
pop
sbb
add
into
mov
out
inc
stos
inc
cmp
dec
dec
push
jge
icebp
popf
dec
in
scas
aaa
js
out
push
inc
push
or
mov
or
mov
ja
xchg
shll
mov
scas
movb
pop
cmp
in
sbb
clc
xlat
repnz
cmc
add
rclb
repz
decb
ljmp
out
in
jb
push
xor
pop
inc
sub
cmp
jns
mov
mov
movsl
jb
into
mov
bound
xchg
xchg
adc
mov
call
int3
mov
loopne
pusha
push
leave
mov
xor
xor
sahf
in
lahf
jnp,pt
and
adc
mov
imull
sub
ds
loopne
xor
xchg
add
into
js
adc
jp
int3
loopne
adc
jno
adcl
xor
push
lods
in
and
cwtl
ret
out
and
ffree
test
idiv
push
fldt
insb
inc
mov
jmp
lea
mov
sarl
je
ds
shll
aaa
xchg
dec
testb
inc
mov
mov
sub
sbb
mov
cltd
cmp
add
mov
xchg
das
adc
sub
jge
icebp
pop
push
loope
sbb
sub
insb
xlat
mov
daa
push
test
movsb
mov
mov
into
pop
cli
jbe
daa
mov
inc
mov
push
jb
xchg
xor
fwait
ret
cmpsb
mov
iret
jnp
sub
pop
xlat
xchg
loope
lret
call
ss
jg
dec
mov
insl
mov
sbb
xor
adc
aas
mov
jbe
and
clc
neg
mov
mov
aaa
mov
cmpsl
mov
push
das
out
sub
sti
inc
divb
sub
lods
sbb
cs
mov
and
cmpsb
xor
mull
sub
sub
mov
cmp
das
adc
bound
jl
test
sbb
inc
data16
mov
stos
inc
rolb
fldenv
xor
jmp
or
pop
hlt
lea
clc
je
mov
aaa
and
xchg
jmp
das
adc
and
mov
test
out
ds
xchg
jmp
outsb
add
sub
pop
or
shrb
pop
out
in
leave
pusha
dec
insl
repnz
loope
adc
sub
roll
xor
imulb
jns
mov
ret
shlb
jae
ljmp
mov
scas
sbb
js
out
movsb
dec
cld
ss
inc
arpl
imulb
stos
jle
xor
fmul
mov
out
mov
or
dec
sbb
cmp
stos
xor
adc
sub
mov
add
imul
lahf
xor
test
cmpsb
pop
or
adc
enter
shrl
sbb
or
shrb
and
rol
ret
adc
shrb
jnp
xlat
and
loope
cmp
jp
ds
mov
negl
cmc
add
cwtl
out
dec
add
pushl
xchg
xor
xchg
sbb
xchg
mov
fwait
mov
cmp
inc
pop
outsb
iret
jo
iret
jle
mov
inc
loop
repnz
cmp
push
or
inc
fstpl
nop
fisubrs
xchg
add
sbb
inc
leave
cmc
outsb
mov
xor
push
aaa
fistl
in
xor
cmp
sbb
jp
fwait
inc
adc
mov
in
lods
push
xor
fimuls
push
or
xor
cli
add
push
ljmp
lock
xor
pop
lahf
mov
in
call
push
dec
and
mov
fidivs
add
dec
push
dec
lock
jo
sbb
ljmp
sbb
push
sub
mov
notl
testb
std
movsl
and
or
mov
mov
cmpsb
adc
pusha
fisttpl
mov
or
clc
fildl
xor
xlat
popa
sahf
push
out
xchg
push
movsb
sub
xchg
sbbb
mov
iret
xor
outsb
cmp
ret
push
add
jno
popf
incb
pusha
ss
mov
mov
mov
push
inc
pushl
sub
mov
xor
mov
inc
imulb
aam
ss
mov
xlat
leave
push
or
mov
out
in
or
in
adc
pusha
cld
xchg
adc
or
jle
dec
lods
aaa
pushf
jmp
in
sbb
inc
lds
add
int3
add
enter
xor
lret
add
rcr
imul
out
out
out
in
jmp
add
aas
das
aad
cwtl
insb
lret
xchg
sbb
lcall
stos
pusha
and
mov
push
or
jnp
insl
scas
cld
and
addr16
int3
push
outsl
in
in
pushf
and
stos
in
xor
iret
mov
pop
xor
fsubp
add
sbb
add
into
and
imul
pop
clc
jg
and
std
dec
out
mov
hlt
mov
in
or
fs
sub
dec
test
jg
sub
repz
jmp
adc
mov
rcll
mov
into
inc
and
mov
popa
insb
dec
cmp
sbbb
movsl
aaa
sub
cmp
divl
add
dec
and
add
js
lods
jl
or
lret
push
jl
push
scas
lfs
mov
sbb
clc
imul
hlt
mov
orb
das
pop
hlt
loopne
lock
out
clc
in
sub
les
mov
xchg
pop
in
mov
test
test
addr16
dec
cmp
jecxz
cltd
fildll
adc
add
or
adc
jp
stos
inc
fwait
dec
scas
xchg
fcoml
bound
fsubrs
inc
cmp
imul
push
mov
mov
jne
mov
inc
xlat
rcrb
jg
pushf
jl
cmp
add
mov
inc
dec
gs
mov
mov
jmp
rcrl
mov
sahf
jnp
jno
out
mov
rcll
sbb
in
nop
xor
mov
inc
out
jo
rcll
push
cwtl
das
xor
pop
out
xchg
adc
sti
movsl
and
push
rol
lds
cmp
outsb
dec
ja
test
mov
or
sbb
pop
pop
inc
jp
sub
out
pop
fsubrs
in
or
decb
xor
dec
sbb
test
mov
pop
sub
stos
mov
push
inc
xchg
inc
pop
sub
and
ficoml
adc
dec
jle
pushf
mov
xor
sbb
or
jl
cltd
xchg
xchg
jecxz
mov
sub
adc
rorb
dec
jle
jecxz
sub
cld
push
ret
cmpsl
jo
or
jbe
jb
xchg
jae
sahf
movsb
cltd
or
dec
pushf
xor
sub
push
aas
test
jge
sbb
jle
mov
dec
je
cmc
aas
cmp
test
cmp
inc
fdiv
fmuls
dec
imul
xchg
lods
adc
imul
mov
jmp
lea
dec
sbb
fildl
stos
dec
int3
mov
fistpl
jnp
das
mov
lret
adc
es
xchg
in
notb
ret
lods
insl
jbe
push
stos
into
mov
add
loopne
jne
mov
out
mov
inc
xor
loope
pop
ret
in
sbb
sarb
sub
dec
loopne
iret
mov
cs
mov
mov
or
ret
hlt
sbb
loopne
and
scas
push
sub
mov
mov
lods
jo
xor
cmpsb
push
test
loope
mov
inc
jp
push
and
mov
popa
clc
xchg
push
mov
pop
call
dec
test
cmp
mov
lods
gs
test
push
lods
es
mov
bound
jne
mov
hlt
push
idivl
mov
inc
dec
mov
rorl
out
push
insl
fdivs
lods
out
cmp
mov
sbb
mov
loope
sahf
aad
mov
pop
mov
pop
faddl
xchg
mov
adc
and
or
js
inc
xchg
in
icebp
add
bound
and
enter
or
xchg
ret
jo
mov
out
inc
into
dec
test
jb
mov
in
xchg
dec
lods
jmp
movsl
popl
shl
pop
push
dec
into
push
mov
movsl
into
pop
pusha
ja
shll
lea
push
lock
fwait
cmpsl
jp
arpl
mov
aad
mov
push
or
sbbl
mov
jae
fdivrp
pop
sbb
inc
pusha
mov
cmp
pop
sbb
stc
pop
push
cmp
xchg
or
mov
ss
pop
xchg
repz
sahf
in
xor
ret
sbb
iret
in
mov
sub
pop
mov
adc
into
test
in
jns
fdivs
imul
cmp
or
push
cvttps2pi
cmc
loop
loope
sub
pop
mov
or
cmpsl
or
fnsave
scas
mov
pop
sub
lret
call
inc
lea
pop
icebp
scas
xchg
sub
cmp
push
pop
mov
scas
cmpsb
cmp
sti
mov
pop
or
cmp
mov
cwtl
jp
push
fcmovbe
daa
ljmp
push
xchg
xor
rorb
add
ds
das
push
mov
imul
fnsave
sti
fwait
pushl
jmp
fwait
ss
xchg
repnz
fstpl
repnz
lock
pop
cli
cmp
movsb
xchg
mov
sub
pop
lock
jle
mov
xchg
add
fdivrl
push
hlt
xor
add
xchg
xchg
add
das
lahf
clc
lds
lcall
cli
rorb
add
stos
or
ss
jae
adc
xchg
mov
test
out
loope
loop
jne
mov
lcall
dec
mov
xchg
sahf
push
sbb
test
dec
mov
ret
stos
fld
out
sbb
sar
sub
loop
pop
fdivp
ja
lock
and
adc
inc
dec
sub
pushl
mov
fs
jle
pop
xor
xor
lahf
nop
imul
xor
mov
mov
xchg
sarb
insb
std
adc
cmpsl
adc
and
sbb
xchg
sbb
repnz
rorl
xchg
dec
fistps
add
ljmp
jl,pt
jp
bound
cli
sbb
lret
and
out
mov
lahf
mov
add
jae
xor
popa
xor
inc
jmp
filds
xchg
sub
sub
and
seto
scas
add
lahf
or
inc
mov
cmp
inc
mov
int
je
les
in
jne
mov
add
mov
hlt
adc
mov
fcomi
pushf
inc
arpl
jae
pop
out
data16
add
neg
mov
xor
loope
pop
and
test
lret
mov
rcrl
pop
pop
jne
subl
mov
push
mov
ds
das
xor
aas
pop
and
ja
fnstenv
xchg
mov
or
int3
pop
xor
cmp
into
xchg
cltd
std
clc
xlat
mov
fwait
add
push
or
push
mov
rcrl
inc
jecxz
mov
xor
jg
lret
jo
mov
pop
rcl
aaa
add
xor
ljmp
clc
mov
imul
enter
loop
mov
sub
imul
fistpll
jo
or
sbb
sbb
mov
sbb
addr16
push
cld
enter
xor
addr16
inc
push
scas
mull
pushf
lret
stos
inc
std
mov
dec
fisttpl
das
ss
mov
stos
xchg
xor
or
add
lods
dec
jo
les
inc
push
cmp
add
in
inc
hlt
mov
jmp
cmp
pop
push
outsl
sub
sbb
mov
divb
popa
lea
cmpsb
mov
pop
jecxz
mov
jns
jl
scas
aad
pop
jb
sub
jp
pop
push
das
xor
loop
sub
add
push
dec
push
push
stos
sbb
cmp
sub
push
sbb
popa
xchg
sbb
add
pop
add
sbb
outsl
inc
mov
sbb
rolb
fildll
pop
cmpsl
sti
cmp
outsb
cs
leave
repnz
movsl
inc
jge
sti
mov
imul
push
outsb
dec
add
sarb
sub
cmc
insb
out
jae
sbb
insb
add
or
mov
xorl
lock
lcall
pop
jnp
dec
lds
imul
push
outsl
add
sbb
cli
xchg
jp
cmpsb
popl
pop
xchg
cmp
and
lea
imul
and
lret
mov
decl
in
sbb
xor
cmpsl
add
sub
insb
pop
and
sti
sub
sub
jl
ss
jne
push
lret
add
push
mov
jmp
inc
cmc
jge
sub
xor
shrb
lds
push
mov
pop
xchg
je
adc
fwait
aad
mov
sbb
cmp
fwait
cmp
mov
fisttps
leave
int
dec
lods
push
push
lret
sti
jae
jg
psubusw
xchg
pop
mov
repnz
rcr
inc
push
rorb
fxch
je
cli
xchg
sub
adc
stc
xchg
dec
sti
scas
jp
ljmp
jo
je
add
cwtl
push
and
cli
daa
std
outsb
adc
push
push
sbb
and
loop
pop
pop
mov
fwait
pusha
sti
push
out
jbe
cmp
sub
fwait
lret
inc
pop
idivb
lods
sbb
pop
outsb
add
stc
stc
pusha
inc
imul
adc
cmp
cmp
sbb
push
push
xor
pop
jmp
or
lods
test
bound
daa
sub
xchg
and
xchg
ja
inc
sbb
scas
jnp
cmp
add
adc
pop
adc
cwtl
pop
or
ret
mov
out
cli
pop
cs
rorb
loop
test
lock
add
es
push
insl
jl
cltd
lods
outsl
lret
sub
or
out
sbb
xchg
pop
xchg
push
jecxz
gs
adc
ja
cmp
jp
adc
clc
arpl
pop
out
aas
sbb
jno
cmp
inc
testb
add
cmp
or
add
lcall
les
mov
popa
cmpps
imul
mov
lret
push
icebp
sbb
test
stos
and
sub
push
xchg
mov
mull
arpl
jg
or
jmp
and
or
mov
push
pusha
idivl
adc
mov
sub
lock
or
jo
mov
sbb
push
pop
pop
cmpsl
mov
xchg
mov
adc
scas
push
lods
mov
ss
inc
mov
mov
loope
xor
push
adcb
inc
mov
rolb
sbb
divl
jbe
imul
push
mov
lahf
sahf
sub
dec
stos
inc
add
mov
xchg
ja
lea
icebp
stc
addl
popa
xchg
jbe
dec
lods
je
call
mov
dec
dec
addr16
push
mov
jmp
xor
stos
clc
push
xlat
insb
adc
pop
lea
jg
jns
xchg
cmp
lea
ss
and
cmpb
pop
xor
out
jnp
fdivl
add
jbe
sbb
mov
int3
imulb
mov
push
mov
in
or
shlb
push
sub
pop
or
cmp
sbb
dec
inc
insl
sub
ret
adc
sub
cmc
ja
rorl
out
call
jmp
mov
pop
cmp
adc
pop
icebp
adc
or
xchg
mov
imul
loopne
dec
adc
subb
lcall
mov
fsub
enter
cmp
test
mov
add
xlat
xor
mov
cmc
cmp
aas
or
fs
das
add
mov
in
jne
cli
sub
stos
pop
add
cmpsl
cwtl
cld
pop
mov
jbe
movsb
lret
repz
out
mov
jb
jg
fcomps
imul
adc
or
das
out
add
pop
jo
aad
icebp
scas
mov
add
xchg
or
test
push
repnz
mov
rcr
stos
pop
int3
pop
cmp
and
mov
iret
mov
inc
leave
mov
mov
fbld
scas
push
pop
stos
push
pop
pop
cwtl
fidivrl
fcomp
cmp
pop
int
pop
xor
stos
enter
js
jnp
push
icebp
test
das
sbb
mov
jmp
jge
test
adc
mov
lret
testl
ret
out
mov
enter
test
cs
jecxz
out
pop
ljmp
loope
pop
mov
pmuludq
push
loop
and
in
sub
movl
ficompl
sub
out
dec
rolb
andl
push
out
std
xlat
push
decl
push
sahf
adc
mov
push
in
pusha
add
mov
or
inc
jp
xor
subb
push
or
jnp
and
push
lret
sub
lods
dec
test
int3
loopne
push
repz
mov
mov
mov
cmc
int
mov
or
sub
mov
or
icebp
jnp
mov
mov
iret
sub
pop
dec
ret
outsb
leave
mov
daa
push
pop
xor
pop
sub
pop
jae
pushf
mov
push
popf
jo
jl
lods
cmp
ret
addl
ret
dec
in
add
adc
int3
call
xor
daa
in
mov
dec
cmp
imul
pop
push
sub
shl
stc
nop
sbb
jecxz
popf
addb
imul
pusha
lret
das
mov
mov
out
sbb
and
movsl
cmp
mov
add
out
adc
jo
popf
stc
push
dec
and
adc
aam
xor
sub
mov
popa
jns
mov
popf
orl
mov
push
push
xchg
push
clc
lcall
adc
add
iret
and
or
lds
scas
inc
mov
dec
mov
ror
push
add
mov
loope
sbb
inc
adc
inc
lahf
fsubr
add
push
ja
xor
and
mov
lods
movsb
les
fisttpll
adc
lock
fstpt
int
imul
lds
incb
push
cltd
xor
std
pop
ss
ret
fs
or
cmp
sarb
push
insl
push
pop
pop
jmp
fwait
xor
xchg
xchg
stos
cwtl
mov
lods
xor
xor
or
iret
sub
shrb
inc
xchg
inc
mov
addl
aas
loope
in
cmpb
ret
or
cmpl
jge
out
jne
add
sub
jl
or
mov
idivb
aas
test
stos
popf
sub
pop
mov
push
outsl
sub
iret
xor
loope
jmp
mov
and
or
iret
pop
mov
jbe
add
xor
inc
adc
lahf
or
data16
fsubl
call
adc
fbstp
adcl
adc
mov
pop
sub
imul
mov
jne
mov
lahf
jecxz
mov
inc
add
mov
xor
cltd
mov
ss
sub
pop
xor
dec
cmp
jp
sbb
mov
cmp
repnz
pop
xor
lret
dec
add
int
push
lret
pop
dec
inc
popa
addl
loop
jbe
mov
lret
stos
mov
int
movsl
inc
stc
add
jb
mov
adc
stc
and
mov
jne
pop
iret
jecxz
mov
dec
cmc
arpl
mov
or
mov
adc
mov
aaa
pop
xlat
add
cld
fs
jle
lcall
pop
cmpb
adc
out
jae
mov
stos
test
leave
ficompl
sarl
fincstp
pop
out
mov
test
nop
sbb
movsl
sub
push
movsl
sbb
dec
lret
insb
loop
mov
pop
mov
hlt
and
lret
jg
sbb
outsb
jp
add
lods
cmp
fimuls
mov
add
and
jns
sub
out
jne
les
ljmp
push
frstor
outsl
in
jns
das
or
mov
dec
and
inc
pop
insl
ret
dec
cli
jge
jne
mov
imul
stc
pop
push
sub
dec
cmp
push
aas
mov
jno
dec
or
mov
and
jb
push
and
loope
and
push
out
lret
mov
jae
loopne
out
xchg
cli
test
mov
xchg
sub
orl
rcl
cli
das
mov
cli
mov
xchg
shll
pop
lcall
sub
setb
cmp
std
testl
js
adc
sub
push
lods
mov
aas
mov
pop
xor
repnz
push
xlat
sub
repnz
movsl
outsl
mov
jne
stos
xor
xchg
in
push
or
mov
cmp
push
lock
loope
cld
cmp
pop
andl
jb
ret
pop
sub
push
fidivl
sarl
adc
adc
ror
lret
or
push
clc
xor
fnstenv
addr16
sbb
push
repz
stos
sbbb
leave
pop
sbb
pushf
pop
and
in
dec
mov
jg
popf
leave
mov
jnp
mov
inc
subb
mov
or
xchg
ja
gs
inc
out
ds
enter
es
adc
cli
cmp
stc
push
pusha
rcl
psubb
mov
lahf
leave
jbe
movsl
in
and
movsb
cmp
cmpb
lock
imul
icebp
jns
test
gs
jl
cmp
cmpsl
js
pop
jbe
jnp
push
pop
or
add
popa
outsb
sbb
insb
add
fwait
xor
or
cmp
fwait
or
push
mov
or
inc
das
add
fmuls
mov
sti
jl
xor
add
ror
add
fisubrl
mov
pop
sub
enter
insb
outsb
adcb
or
mov
sbb
es
sub
cmc
jnp
cld
cmp
dec
sarl
pop
cmp
add
sbb
xor
sahf
bound
cmc
sets
call
dec
mov
pushf
daa
inc
mov
xchg
push
lret
mov
js
jle
pop
cs
pop
inc
inc
mov
push
out
cmpsl
jmp
push
mov
in
and
xchg
sub
inc
shll
mov
dec
push
xor
sbb
into
sbb
jne
mov
jl
mov
and
push
cmp
js
out
inc
int
je
mov
in
addb
or
and
shrb
pop
inc
fs
pushf
xchg
pop
dec
std
sbb
cwtl
rclb
ljmp
push
mov
lcall
jge
ficompl
inc
arpl
hlt
push
mov
mov
or
and
arpl
xchg
dec
xor
xchg
dec
mov
out
in
and
adc
mov
hlt
or
loopne
xor
lahf
push
inc
sbb
jl
cld
xor
stos
loopne
mov
or
cmpsl
lds
sbb
pop
sbb
repz
into
mov
ds
cmpsl
out
lea
pop
or
stos
lahf
cmp
notb
xchg
mov
nop
out
dec
pushf
xor
cmp
into
mov
iret
divl
adc
pop
and
popa
push
ret
jae
jae
mov
mov
ja
sub
int
cmpsl
sbb
jno
std
inc
fidivs
adc
imul
and
arpl
dec
and
xor
xchg
aad
add
mov
or
aam
add
shll
aaa
add
hlt
scas
and
jl
aaa
or
fwait
cli
and
add
and
lcall
aad
inc
mov
mov
xchg
mov
push
ret
shl
xor
movsl
int
out
mov
push
jecxz
fistl
jge
movsb
cmp
data16
sub
xchg
jo
and
cltd
push
mov
sarb
cmp
test
add
sub
mov
push
jae
xchg
mov
push
xchg
add
test
sbb
adc
mov
pop
xchg
sub
mov
xlat
pop
cmp
mov
mov
xlat
dec
mov
out
sbb
xchg
sub
ja
loop
fisttps
adc
adc
aas
ret
sub
xor
lods
cwtl
and
test
pop
out
push
sub
dec
jae
mov
cli
xor
ljmp
lods
or
leave
popa
loope
into
and
push
fnstcw
cwtl
inc
mov
aas
inc
or
dec
nop
jno
call
xchg
jb
xorl
ret
cmp
shrl
xor
test
add
sbb
mov
mov
jecxz
pop
insb
jae
push
mov
jns
es
cmp
jo
lock
stos
push
cltd
mov
in
in
test
or
add
std
or
inc
fcmovu
int
ss
insb
je
push
mov
push
ds
xchg
cmp
repnz
insb
or
lods
fdivrs
ffree
cmp
in
sbb
xchg
sub
pop
mov
xorl
xor
jg
pop
sbb
jle
jns
push
mov
pop
mov
cmpsl
jecxz
jl
loopne
ds
cmpsl
test
js
insl
cs
xchg
add
sbb
ret
inc
cli
xchg
bound
mov
push
movsl
icebp
add
lcall
nop
adc
dec
pop
cmp
shrb
cmp
xlat
and
mov
scas
mov
lret
adc
adc
sub
call
cld
dec
fsubrl
lret
mov
aaa
mov
divl
jmp
pop
ret
xchg
call
sub
fnstcw
mov
push
xor
lret
xchg
jne
cmpsl
sbb
xchg
call
lret
nop
pop
out
jb
add
cmp
and
sub
or
ljmp
mov
fisubs
or
aaa
cmc
dec
ds
js
fcomps
jg
xor
push
cltd
cmp
pop
rcll
mov
jns
in
std
xchg
pop
movsl
add
or
jae
fs
aad
xchg
sub
dec
jecxz
and
leave
or
cltd
enter
pop
jmp
jbe,pn
pop
sub
test
mov
lret
mov
mov
jl
inc
push
pop
call
add
dec
and
mov
ret
pop
loope
leave
dec
ret
sti
mov
cmp
and
lahf
ret
pop
push
mov
das
mov
and
add
mov
mov
jb
add
xor
insl
rolb
ret
in
dec
inc
dec
in
popf
stc
pop
sub
pop
pop
scas
lea
jecxz
inc
js
inc
and
mov
je
mov
cwtl
adc
outsb
mov
sub
sahf
idivb
in
cli
movsl
mov
jg
sub
mov
clc
push
scas
cmpl
in
inc
pop
cltd
xchg
lea
repz
pop
inc
stos
push
bound
xor
daa
into
fs
in
stc
push
push
and
jo
negl
ja
pmullw
leave
insl
fsubl
jmp
fwait
sbb
outsb
test
sbb
cmpsb
bound
mov
imul
fldenv
test
adc
adc
imul
sbb
mov
aam
pop
rol
jge
js
dec
mov
imul
mov
pop
inc
or
popf
sbb
jg
hlt
pop
dec
xchg
xor
mov
push
outsl
push
lret
cmp
mulb
orb
add
lret
cli
push
sbb
inc
insl
dec
in
imul
loopne
andb
fldt
movsb
repnz
adc
xchg
test
jle
outsl
insb
pop
mov
inc
and
movsl
push
fs
aaa
scas
xor
insl
out
cld
push
out
adc
imul
and
cmp
loopne
arpl
testb
aam
pushf
cmp
xchg
push
hlt
outsb
roll
imul
sbb
mov
out
and
adc
inc
fimuls
cmpb
cmpsb
fsubrs
push
dec
cmp
mov
loope
int
pop
aas
mov
cli
or
mov
pop
imul
shlb
outsb
mov
jl
adc
insb
rcrb
aad
or
mov
stos
push
mov
mov
es
inc
pop
fidivs
jbe
arpl
hlt
ljmp
addr16
bound
pop
lret
fistl
adcb
ja
and
cmpl
and
rorb
cmp
out
xor
xor
lea
nop
ljmp
mov
push
push
add
imul
jge
mov
inc
sbb
mov
push
pop
inc
repz
inc
xor
cmp
test
lea
fsubrp
andl
xor
and
leave
shll
scas
push
push
sbb
aas
mov
and
leave
fistpll
stos
jbe
xor
push
inc
std
xchg
pop
aas
aas
mov
jnp
icebp
nop
scas
pushf
cld
stos
addb
in
inc
sub
scas
sbb
scas
orl
mov
dec
add
push
add
test
mov
inc
lds
add
xor
iret
cmp
pop
and
mov
mov
mov
push
test
loope
jno
cmpl
jle
push
rolb
jo
arpl
test
das
and
push
pop
mov
dec
xchg
outsl
movsl
ret
outsl
loop
fsubrl
pop
sbb
or
inc
inc
inc
shrl
lcall
xchg
pop
push
add
je
xchg
out
mov
iret
test
lret
je
mov
cmp
mov
stos
int
mov
mov
push
in
adc
sar
das
pusha
mov
hlt
movb
mov
sub
cld
xor
sbb
push
movntq
cmc
jo
les
testb
cmpsl
add
jl
mov
xorb
stc
nop
sub
cmc
mov
scas
hlt
cli
cmp
movsl
icebp
adc
aas
stos
mov
pop
xchg
pusha
stos
pushf
mov
nop
out
stc
push
leave
mov
or
mov
or
sbb
push
xor
js
jno
push
jae
and
inc
and
outsl
push
push
dec
dec
add
decl
jl
ljmp
ficoml
sub
or
xchg
sbb
scas
andb
ljmp
cmpsb
stos
adc
daa
sti
leave
out
out
and
clc
sahf
jae
dec
arpl
sbb
jb
fistps
adc
cmp
xorl
addr16
int
jge
push
loopne
mov
jmp
stc
movsl
repnz
mov
cmp
xchg
add
mov
push
xor
shrb
xor
cs
pop
loopne
mov
outsl
loope
cmpsb
or
jno
dec
and
arpl
jno
xchg
push
fstps
pop
pop
jmp
cmpsl
cmp
pop
les
push
lcall
add
jl
jae
sbb
fdivrl
push
out
and
and
dec
dec
xor
push
faddl
or
lds
lcall
mov
push
mov
sysret
js
push
jl
andl
push
jecxz
dec
inc
test
std
cmp
add
aaa
mov
ds
inc
aas
or
lret
add
inc
in
fsub
aad
adc
or
xor
jecxz
data16
mov
sub
xchg
add
call
fsubl
jmp
outsl
or
insb
in
outsl
leave
iret
jae
jae
ret
subl
and
push
leave
push
dec
je
adc
jo
lcall
or
cmp
push
push
movsb
or
sarl
data16
test
movsb
adc
xchg
sbb
mov
xor
jnp
pop
push
ljmp
adc
iret
int3
sbb
fistl
mov
push
insb
mov
jp
jle
popa
lods
xor
xor
and
adc
and
push
ljmp
imul
out
pop
pusha
push
lods
push
outsb
rorl
pop
and
pop
scas
clc
and
test
dec
vshufps
or
mov
add
aaa
pushl
cwtl
sub
inc
in
lds
lock
or
clc
and
loope
repz
mov
leave
mov
aam
dec
int3
adc
inc
sbb
ret
data16
repz
dec
inc
mov
push
jno
shll
in
dec
mov
lds
insb
sub
popf
lcall
cltd
jbe
push
xor
into
mov
in
adc
sub
inc
pop
insl
sub
in
test
push
lret
lcall
int
push
js
jae
adcb
rep
lds
pusha
jp
cmp
pushf
subb
cwtl
push
inc
lds
or
pop
inc
push
mov
pop
mov
dec
xor
mov
jae
cmpsb
sub
ljmp
and
int
lods
mov
mov
sub
stos
fstl
pushf
gs
and
mov
stos
cmp
xlat
dec
add
jo
in
andb
jno
dec
jne
mov
adc
scas
imul
fiaddl
insb
fnstcw
out
mov
ljmp
xchg
sub
mov
jp
in
sub
xchg
add
rol
lds
inc
fidivrs
sub
lds
cli
adc
xor
iret
fimuls
je
in
lret
xchg
dec
inc
push
jl
xor
mov
cwtl
aad
enter
jno
ret
jbe
jmp
jmp
andb
jnp
dec
lods
lcall
aaa
mov
cmp
faddl
or
mov
jl
sub
jns
or
and
and
jp
xor
mov
xor
xchg
scas
jp
loopne
pop
orb
inc
sti
pop
scas
cmpsl
cmp
lods
lret
out
and
movsb
or
pushf
jae
sbb
aam
or
dec
in
pushf
data16
mov
inc
mov
hlt
push
xlat
add
popa
xchg
ljmp
insl
push
in
xor
out
lods
mov
clc
xor
and
cmp
je
hlt
addr16
aad
outsl
mov
insb
mov
fdivrp
lods
push
add
mov
sbb
mov
ja
mov
cmp
xor
mov
test
adc
cmp
aad
xchg
dec
fidivrs
push
insb
push
hlt
dec
outsl
sahf
stc
popf
ret
cmp
cmp
jbe
push
lods
addr16
je
mov
cmp
xchg
call
dec
movsl
and
push
stos
xchg
jecxz
sbb
add
movsl
sub
cwtl
cmp
or
add
cs
xor
mov
lahf
sti
in
int3
inc
cmp
inc
std
rcl
lcall
cmpsl
xor
xchg
cmpsl
ss
push
mov
dec
jmp
dec
mov
push
shrb
lret
into
notl
adc
jle
mov
cmpb
cmp
cmpsb
int
push
hlt
xchg
jl
imul
jnp
push
inc
cmpsl
setbe
adcb
inc
loop
cs
pop
fidivrs
out
jg
xchg
in
jl
bound
pop
jns
xchg
push
movups
lahf
idivb
or
test
aam
fnstsw
pop
je
cmpsb
jle
xchg
inc
iret
pop
in
and
dec
orl
adcb
push
imul
xlat
cmp
out
adc
inc
movsl
inc
out
mov
gs
sbb
or
insl
add
mov
sbb
jo
sbb
mov
andl
loop
mov
out
mov
arpl
push
inc
push
jb
fs
xchg
xchg
test
stos
cmp
mov
out
mov
sub
push
aas
inc
sub
dec
xchg
dec
jmp
movsb
sbb
fsubrs
pop
dec
jb
ret
out
outsl
outsl
shl
shll
adc
out
out
lock
cs
xchg
insl
push
xchg
push
cltd
adc
hlt
mov
test
pop
add
jno
cld
or
mov
fistpll
jae
gs
outsb
std
dec
mov
mov
test
inc
inc
sbb
xor
inc
data16
xchg
mov
fs
sahf
mov
cwtl
ret
xorl
fwait
cmp
xchg
jbe
inc
in
orl
inc
and
clc
push
mov
cmp
jecxz
xchg
push
aas
dec
mov
cmp
roll
xor
mov
mov
xchg
lods
mov
cmc
repz
mov
out
adc
cmp
repz
push
mov
ficoms
adc
jo
xchg
sub
mov
mov
lret
out
cmp
sub
jge
in
push
jbe
lret
mov
nopl
mov
insb
iret
fldcw
enter
and
adc
call
inc
shr
cld
or
dec
das
mov
ljmp
fstl
dec
or
sbb
cmp
imul
ss
cmpsb
cwtl
test
pop
add
adc
loopne
dec
lds
adc
or
pushf
inc
imul
xor
pop
incl
xchg
repz
mov
cli
je
hlt
rcrl
in
sti
or
mov
push
push
hlt
mov
cmpsb
xor
mov
or
inc
mov
push
push
inc
jmp
add
cmp
mov
in
jnp
adc
jecxz
lods
outsl
jge
sub
push
test
hlt
dec
cmp
jns
sbb
popa
test
dec
lods
addb
leave
cli
in
xchg
rcll
xor
enter
lds
loope
cltd
pushf
out
popf
popa
lods
xchg
adc
sbb
or
add
mov
push
xor
mov
adc
jg
bound
cs
fisubs
adc
adc
das
push
gs
lret
pop
or
inc
lret
add
mov
push
jle
test
aas
dec
or
call
cld
pop
repnz
out
xchg
nop
pop
jo
cmp
mov
clc
xchg
mov
jmp
add
mov
daa
xor
fs
sub
push
jns
push
nop
inc
pop
lret
jo
fists
pop
inc
cs
shl
test
int
push
sbb
inc
inc
lods
stos
aad
xchg
ds
push
icebp
fwait
sub
xchg
ret
test
xor
popa
popf
call
shl
add
aam
test
mov
dec
imul
test
push
inc
stos
jns
stos
xchg
rcpps
lods
inc
adc
pop
jmp
insb
hlt
push
fnsave
icebp
in
inc
cmpb
jnp
mov
enter
cmp
popl
pop
adc
sbb
adc
adc
lods
xchg
les
mov
push
jl
ret
dec
cltd
push
jno
leave
sbb
inc
out
mov
in
adc
adc
test
push
xor
std
jmp
inc
sti
cmpsl
jne
out
loop
stos
push
jb
aad
aad
ljmp
shrl
out
lcall
sub
push
lock
and
ss
jp
adc
in
movsl
mov
stos
aam
popf
pop
mov
jl,pt
sarl
sbb
push
fildll
pshufw
loopne
aas
outsb
test
adcb
div
xchg
push
stc
and
sub
mov
fwait
mov
rol
ljmp
lock
movsl
or
push
pop
fisttpll
lods
add
push
hlt
imul
dec
sub
jp
fisubs
sbbl
adc
jge
in
mov
shrl
adc
insl
enter
aas
fsub
cld
outsl
iret
js
add
data16
dec
sub
dec
mov
stos
xor
rcl
rclb
jns
sahf
jp
xchg
nop
repz
andl
push
mov
mov
push
pop
icebp
test
pop
shrb
sahf
repz
stos
aam
mov
into
xor
ja
fldt
inc
insl
mov
push
pop
cmp
jbe
cmc
je
stos
add
mov
or
mov
fsubs
ret
add
and
or
xchg
leave
lods
push
jno
arpl
xchg
sbb
mov
jns
stos
jp
das
fisubrs
jmp
mov
fisubrs
jo,pn
test
jnp
das
adcb
cmp
insb
aam
push
push
cmp
cmp
shl
das
cmp
pop
aad
cs
mov
bound
and
and
push
and
add
dec
and
iret
fcomip
sub
repnz
iret
fisubs
ds
lds
insb
scas
inc
adc
int
in
push
xchg
cmp
das
pop
mov
xor
dec
sbb
xor
push
push
andl
cmp
mov
mov
inc
das
out
hlt
out
jmp
cmpsb
xor
in
jp
mov
dec
fwait
lret
xor
pop
and
jno
mov
in
call
movb
andb
stos
xchg
inc
or
inc
mov
out
lods
jecxz
loope
push
xchg
push
add
rcrl
xchg
add
pop
and
jo
pop
inc
inc
pusha
inc
sub
bnd
lods
jmp
aad
inc
loop
jg
pop
mov
xchg
jno
stos
loop
rorl
adc
sub
sbbb
xchg
pop
mov
xchg
dec
pop
negl
mov
xor
inc
andb
or
loopne
mov
imul
dec
enter
fmul
mov
cld
shl
mov
mov
pop
insb
cmp
inc
pop
daa
cli
inc
cmp
dec
repz
sub
xor
cmpsb
mov
mov
push
xchg
fimull
add
jno
bound
nop
enter
mov
gs
mov
cmpsl
mov
in
xchg
ret
cmp
xor
xor
inc
inc
test
lods
and
mov
adc
push
xor
add
pop
lock
adc
lea
sub
mov
jno
jmp
out
out
rorl
hlt
notl
outsb
cmpsb
adc
jmp
sub
or
pop
popf
jl
and
mov
stos
call
in
data16
les
ret
lret
aad
test
test
inc
scas
ja
and
and
in
jb
pusha
inc
shlb
bound
insl
and
ret
cld
filds
cld
dec
aad
dec
in
test
orl
daa
stos
mov
mov
jo
push
jnp
cmpl
mov
shll
cmpsl
or
mov
adc
fistl
add
and
mov
add
cmp
sbb
call
loop
mov
lahf
mov
call
pop
out
xchg
xor
xor
lret
std
inc
sti
push
in
je
inc
cmp
mov
dec
aad
rolb
popa
loop
vmovupd
inc
mov
jmp
and
sbb
and
push
pop
cli
rol
or
lret
push
jmp
pop
ds
pop
insb
cwtl
mov
popa
mov
and
add
sub
je
out
mov
dec
add
shlb
ja
fidivrs
xchg
xor
mov
or
repz
or
xchg
xchg
icebp
movsb
stc
outsl
shrl
fidivrl
xchg
push
pop
push
or
ja
fbstp
push
cmpsb
lock
outsb
lret
in
mov
mov
cmp
scas
stos
xchg
mov
ret
jmp
mov
mov
roll
sbb
dec
sti
inc
andl
push
push
or
jl
outsb
mov
pop
or
jns
insb
lcall
fs
and
xchg
xchg
xchg
enter
pop
addr16
cmp
adc
bound
sti
or
repnz
add
jae
jecxz
fistps
aas
outsb
jp
mov
loopne
mov
hlt
adc
lcall
xor
cmpl
jg
insb
push
mov
inc
cmp
mov
push
inc
and
jmp
stos
test
lock
call
dec
push
inc
call
clc
mov
inc
pop
adc
mov
mov
mov
or
daa
je
leave
int
inc
insl
aam
jo
in
inc
or
mov
cmc
dec
sub
fidivl
ss
xchg
pop
xchg
dec
mov
and
xchg
imul
jo
sub
in
mov
outsl
daa
xchg
push
repz
inc
jnp
andl
inc
cmp
lcall
es
loopne
das
mov
xchg
jl
dec
mov
jns
jmp
je
fnstsw
mov
jns
insl
sub
lcall
je
sti
stos
and
or
fwait
sub
lds
dec
loop
call
xchg
dec
push
pop
icebp
or
cmp
mov
sub
iret
xor
inc
stos
leave
inc
loop
fbstp
test
mov
imull
sbb
outsl
and
mov
in
pop
xchg
push
pop
sbb
in
aaa
shrl
sub
dec
scas
inc
cli
fwait
push
push
in
sub
je
mov
ror
cmp
in
jle
push
incb
sub
push
cmp
icebp
setnp
pop
sub
adc
and
outsl
aad
dec
fldenv
inc
std
adc
sti
aas
xchg
dec
xor
insl
or
cmp
sbbl
xor
inc
pop
pop
clc
rcl
mov
push
test
stos
cmc
or
add
js
idiv
xchg
cmp
add
shrb
push
mov
push
outsb
mov
push
out
xlat
lcall
pop
lock
dec
sti
roll
std
and
push
cwtl
push
sbb
aas
movl
inc
sub
cmpsb
cld
pop
out
out
lahf
cli
pushf
test
sbb
and
adcl
dec
repnz
fstpt
pop
stos
inc
nop
push
leave
pop
lock
or
fistps
into
add
add
and
fdivl
xchg
push
rcr
mov
cmp
ror
pop
jno
out
sub
pop
out
push
pop
cmp
mov
jbe
jno
inc
pop
mov
dec
mov
sub
mov
rcll
mov
xorl
inc
and
outsl
insb
lods
lea
add
mov
push
mov
shlb
and
adcb
movsl
add
and
xchg
faddp
sub
int3
mov
cmp
dec
pop
les
pop
push
test
ret
mov
es
imul
fisttpll
xor
mov
mov
test
cmp
pop
in
fidivl
jo
clc
hlt
fldt
movsl
mov
mov
movsl
lds
jae
std
or
lea
nop
cmc
in
cmp
lcall
mov
jecxz
loope
stc
and
subb
sub
iret
rol
jne
add
xor
pop
or
into
sub
test
test
and
dec
mov
add
xor
push
and
data16
icebp
jmp
cmc
fistl
test
pop
add
lret
cld
mov
fnstcw
sub
and
pusha
sbbb
mov
sbb
inc
and
jge
testb
sub
pushf
js
clc
cs
cmpsl
push
bound
xor
mov
insb
jecxz
cs
sub
pop
fnstenv
fcoml
pushf
push
and
mov
in
inc
push
sbb
sbb
arpl
js
cmp
jge
and
dec
sbb
aad
les
lahf
or
xchg
testb
ret
inc
push
adc
negb
dec
outsl
xor
or
dec
and
pop
cmp
add
mov
aaa
outsb
mov
xchg
mov
fldcw
mov
push
bound
lea
jle
ljmp
adc
outsl
mov
push
aas
pop
lods
fiadds
push
mov
cmp
in
jno
inc
xchg
add
jmp
mov
repnz
or
incb
addr16
jmp
lcall
out
in
shlb
cmp
and
mov
add
and
push
fisubl
jno
push
mov
jnp
lret
lret
push
xchg
xor
mov
arpl
jg
pop
aam
cmp
push
mov
lsl
lods
lcall
mov
adc
ficompl
rorl
insb
add
and
loop
int3
test
push
or
push
fwait
popa
xorb
pop
idivb
inc
mov
push
in
lahf
push
sbb
or
push
cli
jns
inc
mov
inc
rcrl
je
popa
ja
push
test
in
loop
lods
sti
and
dec
lcall
inc
in
stc
aad
pavgw
adc
stc
add
sbb
imul
fs
sbb
sbb
inc
std
je
scas
in
int
jp
inc
push
mov
mov
mov
dec
popf
cmp
xchg
bound
jo
push
jne
sarb
add
and
mov
sbbb
nop
pop
scas
mov
and
push
and
xor
push
hlt
sbb
es
loop
repz
mov
adc
jle
arpl
push
test
stc
les
cmpsb
push
add
lock
lods
shl
pop
mov
add
int3
popf
push
ret
in
dec
xchg
jbe
sub
int
add
push
jae
add
xchg
mov
mov
dec
push
jne
and
jb
inc
fs
jns
inc
push
mov
xchg
cmpl
inc
ret
jle
mov
xchg
adc
or
cltd
xor
ja
fiadds
adc
push
cmpsb
adc
add
xor
bound
sahf
out
add
movsb
lret
js
add
xor
jbe
rcl
mov
mov
jl
jae
add
xor
pop
adc
xchg
ret
and
cmc
add
lcall
bound
push
cmp
sahf
clc
or
lahf
loope,pn
dec
in
xor
sub
push
cli
sbb
xchg
mov
imul
or
cmp
xchg
pop
xor
sub
mov
mov
jne
sbb
adc
and
inc
jp
shll
insb
iret
sbb
es
pop
inc
ret
lds
push
ja
les
fld
mov
call
mov
pop
dec
or
ret
pop
imul
repnz
xor
into
xchg
sti
inc
inc
add
sub
clc
bound
pop
lds
xchg
xchg
add
mov
jne
dec
call
out
inc
and
addl
mov
pop
xor
sub
shlb
aaa
cmp
inc
out
gs
push
jb
jle
mov
pop
push
outsb
add
notl
lea
and
inc
add
xor
xlat
iret
popa
aad
add
sbb
xlat
test
cld
stos
repz
daa
rclb
pop
jg
jbe
xchg
clc
add
lods
xorl
pop
xorb
sub
mov
out
imul
cmp
insl
or
dec
sti
imul
cli
fs
gs
mov
out
xchg
icebp
or
jns
lcall
or
mov
adc
jne
mov
notl
push
sbb
lcall
lahf
hlt
cmp
inc
mov
fstpt
push
push
mov
sbb
xchg
dec
in
cmpsl
mov
ficomps
mov
jae
xchg
inc
mov
jmp
cwtl
or
push
or
fstl
sar
lcall
or
jns
stos
scas
subb
repnz
leave
rcl
out
jl
sahf
xchg
pop
jo
or
rclb
jno
loope
jbe
mov
xchg
das
push
mov
or
cmp
mov
fbstp
rclb
dec
loope
or
in
push
mov
mov
fwait
adcb
rolb
sub
xchg
inc
adc
inc
pop
jmp
dec
sub
cmp
sbb
mov
mov
pop
xor
or
push
test
addb
lcall
push
imul
adc
lods
or
inc
push
ds
push
xor
mov
testl
mov
dec
cwtl
pop
mov
into
loop
loop
adc
mov
sub
scas
int
mov
mov
and
xor
adc
insl
shl
lods
mov
test
sub
hlt
sub
or
inc
clc
mov
pop
insl
push
ja
adcb
mov
arpl
jns
in
je
ljmp
sbb
rol
pop
add
pop
dec
cmpsb
ja
push
stos
sahf
push
jmp
push
and
sub
jg
dec
adc
cmpl
iret
mov
stos
lcall
cmc
movsl
sbb
fsubl
imul
add
imul
push
dec
bnd
mov
cmp
jecxz
das
daa
outsl
scas
inc
mov
inc
loopne
cli
xchg
js
bound
adc
lds
pop
shll
mov
popf
int
ja
mov
ds
addr16
shr
outsl
pop
out
test
lds
imull
aas
cwtl
add
xor
hlt
addr16
mov
fwait
push
mov
push
rol
in
push
sar
imul
sub
imull
jl
rorb
jg
lods
jl
aaa
pop
dec
insl
loopne
icebp
stos
mov
es
pusha
ja
add
std
mov
cli
add
ljmp
pop
in
ja
xchg
int
sub
pop
mov
mov
mov
outsb
mov
or
push
jne
push
hlt
push
fildl
cmp
enter
push
stos
lret
out
sbb
xor
sbb
add
call
pop
dec
std
testb
aam
or
dec
pop
cmp
imul
test
lret
or
push
ds
xchg
fstpt
iret
std
add
insl
inc
push
sub
mov
ljmp
sub
xlat
push
xchg
adc
aam
shll
out
lods
add
lahf
fs
xchg
arpl
aas
mov
or
imul
mov
or
fs
mov
sbb
and
mov
loop
inc
sti
test
push
aas
cltd
and
call
inc
fadds
movsl
jecxz
lea
inc
pushf
or
mov
push
jb
fnstenv
sti
fidivrl
pop
cs
jae
test
mov
inc
sbb
sbbl
xchg
jle
rorb
adc
sub
mov
sbb
push
xor
add
aam
lcall
or
pop
fwait
or
mov
mov
xor
sub
fs
sub
mov
call
cmp
sbb
cli
pop
cli
lret
push
pop
dec
out
insl
stos
push
les
insl
add
divl
enter
movsb
sbb
pop
push
mov
iret
mov
push
push
in
ret
ja
mov
loopne
jg
imul
xchg
add
sbb
jmp
and
scas
repz
push
adc
lods
pop
in
add
sbb
mov
or
sbb
inc
adc
movsb
addr16
inc
push
out
mov
rorl
loop
mov
addr16
insb
out
test
jbe
stos
xchg
jge
insl
pop
or
push
dec
xchg
lods
xchg
ret
sub
test
pop
jl
loope
daa
cmp
xchg
lret
and
test
clc
push
cmp
fisttpll
test
push
out
mov
jne
pop
inc
jp
xor
repz
mov
or
orl
lcall
cmpsb
sub
cltd
aad
push
sbb
lods
inc
cmp
fs
in
add
push
paddsw
pop
scas
or
push
popa
scas
adc
je
test
es
stos
fdivrl
fsubrs
nopl
xor
jecxz
or
mov
dec
pop
mov
push
dec
outsl
mov
lret
loope
testb
cli
adc
sub
aam
enter
mov
std
xchg
mov
insl
sbb
add
or
das
imul
btc
push
xchg
mov
sub
xchg
jo
add
and
fstps
lret
cmp
mov
adc
mov
mov
pop
sub
dec
sahf
and
jp
in
sub
jmp
inc
dec
pop
push
fcompl
push
mov
js
mov
loopne
out
lds
mov
jmp
popa
dec
sub
ljmp
jb
les
mov
and
outsb
pop
repnz
sahf
or
jno
add
jge
rolb
mov
jmp
in
push
xchg
xchg
hlt
mov
int3
in
mov
js
sub
ret
fsubp
jns
jecxz
mov
xchg
decl
imul
imul
mov
inc
pusha
inc
mov
ss
mov
std
xchg
push
xchg
add
ret
or
aam
mov
and
ret
dec
pusha
sbb
sarl
fcompl
mov
inc
lods
mov
std
stos
outsb
mov
lcall
pop
adc
in
aas
jbe
jo
icebp
mov
lods
mov
fidivrs
cmpsb
lock
sbbl
insb
fildll
sub
dec
test
push
xlat
loop
cmp
xlat
mov
adc
dec
jg
mov
sti
adcb
xchg
sub
mov
mov
sub
repz
aaa
and
cmp
fbld
pushf
push
cmp
mov
int
lret
mov
clc
pop
sbb
xchg
lds
fsubl
mov
mov
jge
jecxz
sub
gs
jns
xchg
pop
loopne
les
inc
add
notb
xchg
mov
gs
in
mov
xor
jl
loope
xchg
adc
lods
jmp
lock
stos
or
lds
inc
lahf
mov
and
out
iret
inc
stos
dec
xchg
les
pop
std
sub
mov
mov
sub
sub
dec
pop
fwait
clc
add
jo
lcall
cld
jbe
clc
mov
mov
adc
and
sub
decl
sub
jne
shll
jb
scas
dec
dec
xchg
pop
rcl
rol
sub
clc
test
sbb
xor
ret
dec
adc
adc
fmulp
inc
mov
add
adc
test
adc
cmp
ret
decb
sti
mov
icebp
call
in
cmp
call
jmp
aam
dec
out
xchg
mov
mov
mov
aaa
push
movsb
imul
insl
int
mov
xor
cmp
cld
pop
movsl
xor
cmpb
aam
mov
sahf
sahf
add
rorl
sub
scas
and
adc
movl
push
repz
stos
push
movb
adc
jns
mov
popa
mov
mov
rep
jmp
aaa
loop
popf
loopne
adc
cltd
push
cmp
mov
mov
inc
pop
jecxz,pn
jns
push
and
lock
dec
adc
mov
mov
cmp
push
xchg
enterw
ljmp
jns
xor
repz
xor
aad
or
sub
jl
pop
mov
ret
cwtl
cmp
or
sbbl
mov
test
add
sub
aam
int3
jne
loop
fwait
cwtl
mov
das
and
sbb
lock
add
jbe
xchg
dec
fstl
add
ja
cmc
mov
fwait
idivl
icebp
repnz
lcall
or
push
add
js
pop
pop
lds
leave
into
push
mov
mov
test
imul
test
jp
loopne
sub
adc
dec
xchg
jnp,pn
dec
scas
subl
fstps
mov
cmp
xchg
test
stc
xchg
sub
push
mov
dec
loop
test
pop
ret
dec
push
mov
xchg
sub
scas
mov
loope
fistpll
sbb
gs
add
in
push
or
adc
data16
push
and
daa
push
lahf
and
adc
jecxz
xor
mov
add
loope
inc
sbb
xchg
dec
add
adc
call
mov
loopne
mov
fisubl
pop
dec
dec
cmp
sti
push
insb
sbbl
pop
orb
daa
dec
pop
movsl
jp
out
sub
mov
aam
cmpsl
std
fmul
loope
push
das
dec
movsb
or
mov
aam
andb
mov
mov
push
outsl
rclb
rolb
cmp
adc
add
ds
sahf
xor
sbbl
xchg
test
cmp
xchg
insb
mov
je
xchg
xchg
xchg
push
add
in
xor
inc
cltd
fcmovu
imul
or
lcall
mov
jg
mov
icebp
lret
sahf
dec
mov
or
fcomps
sub
cli
sbb
sub
cmp
add
inc
loop
mov
push
cmp
mov
stc
cmp
adc
jne
adc
jmp
shll
push
test
jmp
call
add
ljmp
mov
aas
jg
insb
fistps
adc
pop
xor
test
push
push
mov
in
push
loope
jo
lret
pop
cltd
cmpsb
popa
clc
xlat
mov
jle
mov
mov
cltd
or
mov
dec
pop
and
test
mov
pushf
sbb
jecxz
out
adc
gs
push
cli
aam
ds
ds
test
dec
popf
cmpsb
mov
push
xchg
dec
fsubrs
rcrl
mov
mov
subl
popf
mov
push
enter
scas
insb
movsl
js
shll
inc
mov
jp
inc
call
fdivr
xchg
xor
xchg
pop
dec
pop
mov
fsubrs
nop
les
fmull
mov
dec
mov
pushl
jne
imul
xchg
cltd
je
mov
xchg
fidivs
faddl
mov
and
in
push
mov
sub
jae
sub
pop
xchg
testl
incb
stos
int3
cmp
subl
into
gs
in
push
js
and
lcall
dec
cmp
lods
xchg
jnp
iret
xor
cmp
stc
rolb
mov
inc
push
insb
add
jecxz
stos
xchg
push
jae
les
jb
xor
or
cmc
nop
in
popf
jno
repnz
divl
cs
fwait
cs
sub
sbb
fcomps
outsl
add
mov
out
imul
in
int3
cmpb
add
je
lahf
insl
test
xlat
icebp
cmp
test
cmp
mov
sub
pop
cmp
popa
and
inc
fsubrs
fisubrl
jno
ja
ss
jno
xor
arpl
xchg
cmp
sahf
add
divb
call
cmc
int3
jnp
lods
sahf
adc
inc
xlat
add
inc
adc
rcrl
add
popf
xor
std
mov
mov
rcll
repnz
insl
adc
lret
call
push
xchg
lret
add
add
scas
int
loopne
mov
mov
incb
fcmovu
filds
stc
sub
sub
pop
enter
jnp
lahf
cmpsl
mov
sbb
hlt
out
les
add
sub
pop
xor
dec
loope
add
mov
adc
out
inc
jno
gs
pop
cmp
dec
and
push
jecxz
or
fiadds
inc
pusha
xor
dec
add
push
inc
cmp
lcall
lret
mov
imul
test
cmp
mov
ficoms
fs
subl
fs
or
inc
mov
push
testl
add
xchg
es
or
jae
lahf
fsubs
subb
inc
fisubrl
or
mov
mov
or
aad
push
jmp
imul
or
adc
inc
xor
dec
inc
out
add
pop
fs
sbb
imul
shll
mov
mov
pop
call
test
add
push
into
pop
cs
sbb
mov
sbb
fidivrl
xor
add
scas
shld
imul
in
in
sbbl
mov
xor
jbe
push
push
out
rcll
fsubl
orl
repnz
push
sub
lods
aam
ret
xlat
mov
mov
test
adc
shr
dec
mov
jg
and
daa
data16
outsl
daa
popa
mov
scas
jp
push
jo
dec
fsubrs
sbb
mulb
data16
cmpsl
mov
outsb
sbb
cmp
lods
fists
sahf
mov
mov
add
jmp
cwtl
dec
push
mov
das
repz
xchg
icebp
lahf
mov
xchg
ret
sbb
cld
cwtl
jo
es
cmp
out
xchg
mov
push
xchg
sbb
xchg
adc
insl
mov
xor
sbb
aad
gs
lret
movsl
scas
ds
ret
adc
fsubrs
xor
jno
cmpsl
push
sub
fwait
and
mov
cli
inc
mov
icebp
sbb
stos
and
mov
jne
mov
dec
and
icebp
mov
dec
rcrl
mov
mov
push
add
push
call
imul
xor
into
cwtl
insb
xchg
add
pop
loopne
mov
fistps
pop
in
stos
loop
sbb
pop
insb
pop
stc
orl
mov
aas
xor
or
mov
sub
jge
arpl
sub
testb
scas
out
stc
cmp
adc
jmp
cmpsl
divl
adc
je
pop
jecxz
xchg
adc
xor
ret
mov
sub
or
cmp
pop
inc
cwtl
dec
ljmp
sbb
sbb
in
xchg
adc
or
sti
fildl
push
dec
xlat
lock
or
mov
mov
aaa
lea
mov
aas
nop
push
adc
sub
sub
in
loope
ret
dec
mov
sub
pop
mov
das
mov
cmp
jb
sarl
pop
pop
and
div
xchg
sub
fwait
cltd
mov
jl
lods
lods
stos
inc
call
inc
xor
jns
jno
or
sahf
xor
das
inc
mov
pop
popa
inc
fidivl
test
inc
inc
push
adcb
in
inc
out
lahf
push
push
xchg
scas
fisubrl
mov
int3
pop
andl
cltd
pop
lret
call
mov
shl
xlat
imul
testb
outsb
push
movsl
lahf
rcll
xor
int3
lret
cmpsl
jge
and
mov
xchg
aaa
or
repnz
push
inc
jmp
js
cmp
int3
das
rcll
add
cmp
in
jb
sub
icebp
inc
test
or
jne
clc
adc
jae
lcall
ja
arpl
imul
dec
mov
sbb
fidivs
cld
stos
mov
jg
jno
jmp
out
push
popf
push
inc
in
test
stos
push
add
bswap
inc
xor
fadd
or
mov
ljmp
icebp
cmp
mov
mov
leave
pusha
or
in
jne
jp
dec
lods
loopne
add
mov
popa
or
fdivr
pop
lock
dec
insb
aam
xor
jae
fs
and
pop
jbe
mov
cmp
nop
loop
jne
mov
aad
mov
pop
sbb
lret
sub
push
mov
adc
jo
gs
js
add
es
ret
ja
pop
repz
mov
call
aad
inc
lods
pushf
jbe
popf
pop
clc
movl
bound
adc
rcl
in
pop
shl
lock
addr16
ja
mov
or
sub
or
xor
inc
xchg
test
leave
int
hlt
mov
push
call
mov
cmc
int3
aam
or
das
cmpsb
and
or
jge
test
test
cmp
cmp
mov
dec
in
xor
jmp
insb
add
sbb
dec
dec
mov
shlb
dec
loope
test
scas
js
sti
test
pop
add
or
arpl
pop
dec
dec
aam
ja
inc
sub
pop
aaa
mov
leave
leave
pop
out
in
dec
pop
dec
aaa
mov
or
outsl
push
call
loopne
xor
fidivs
adc
mov
sub
inc
mov
jb
mov
jmp
shrl
xor
into
das
mov
jmp
insb
or
movsl
sbb
jecxz
cli
jg
xor
xor
arpl
insb
inc
pop
or
ret
inc
fwait
xchg
inc
sub
ljmp
fwait
and
loope
lret
lock
clc
sub
addr16
adc
lahf
nop
add
dec
test
icebp
fldcw
add
sahf
scas
pop
jle
pushf
mov
mov
add
mov
lods
push
adc
stc
cld
cmpb
nop
mov
shll
mov
pushf
xchg
pop
add
sub
lahf
ss
add
cmp
subb
mov
mov
aad
and
sar
mov
inc
mov
xchg
mov
cmp
sbb
mov
xchg
jnp
inc
lret
cld
gs
pop
adc
addr16
es
arpl
shl
mov
xchg
outsl
fistl
out
clc
shr
cmp
jg
dec
popa
mov
fs
mov
push
movsl
xchg
test
lods
movsl
aas
sahf
call
cmovp
sub
les
push
sbbl
int3
rolb
xchg
pop
xor
adc
and
mov
sub
sbb
mov
enter
push
aam
scas
aaa
rcrb
adc
imul
push
mov
gs
aas
adc
imul
enter
lods
mov
xchg
repnz
sbb
in
push
add
mov
mov
cmp
fdivrl
call
add
hlt
mov
mov
push
test
ja
jge
xchg
test
enter
loopne
ds
daa
jo
addr16
scas
call
dec
ret
hlt
in
jne
adc
adc
std
push
jns
push
fildl
fbstp
outsl
mov
mov
jl
lea
sbb
into
das
imul
jg
and
bound
addr16
mov
jl
aaa
hlt
sbb
shl
aas
xchg
imul
cmp
xor
lods
inc
ficomps
inc
out
sbbl
imul
popf
outsb
pusha
sub
ret
pop
call
mov
mov
xor
test
inc
push
add
mov
inc
push
jbe
push
lock
mov
xlat
sbb
aas
loope
jle
pop
fsubrl
pop
cmc
nop
lods
mov
out
xor
jp
decb
cli
xor
fiaddl
push
or
cmpsl
cld
inc
sub
bound
mov
jne
adc
push
and
jmp
mov
pop
jbe
lods
aas
sbb
cs
ret
mov
add
pushf
mov
jp
xor
pusha
cmp
xchg
dec
xchg
xorb
loope
or
jo
sbb
js
stc
lea
mov
ret
cmp
lahf
jmp
mov
cwtl
mov
test
enter
pop
and
mov
mov
aad
js
aad
mov
dec
in
sarl
and
pop
fsubrl
addl
rcrl
imul
int
aam
adc
inc
or
adc
ror
loop
shl
dec
inc
movsl
testl
and
mov
ret
cld
mov
jecxz
sub
or
mov
gs
mov
fwait
cmp
ds
sub
inc
repnz
mov
mov
cmp
scas
xchg
andl
xchg
inc
dec
ret
xor
pop
fdiv
jnp
xchg
push
push
icebp
or
nop
andl
rclb
repnz
jg
jle
negl
adc
mov
stos
clc
sub
sub
lea
dec
fildll
mov
sti
jle
pusha
mov
jbe
xor
aad
rcl
add
xor
mov
push
sub
cwtl
fistps
cmpsl
jecxz
pop
stc
data16
stc
scas
jl
jbe
js
dec
mov
out
xchg
sub
mov
jl
jns
pushf
data16
or
in
mov
and
or
fucomp
inc
push
adc
xchg
int
push
add
cld
adcl
out
outsb
push
das
test
outsb
inc
jmp
inc
lahf
jmp
xchg
jae
in
lret
gs
jnp
lret
bound
add
mov
adc
sub
clc
popa
jns
in
add
out
xchg
sbb
pushf
test
stos
in
lock
inc
xor
push
addb
push
mov
mov
cld
mov
add
pop
cltd
and
cli
sbb
sub
scas
fcoms
outsb
aaa
mov
inc
and
lahf
xor
insb
mov
aaa
dec
xor
adc
xchg
inc
in
adc
pop
xorl
jo
in
pop
lahf
in
aaa
sub
sub
and
mov
movsl
xchg
jg
lret
outsb
push
ljmp
out
popf
xchg
sbb
mov
mov
jne
das
push
sub
loope
int3
pop
insl
icebp
push
mov
lret
cmpsb
shlb
pand
jae
add
fmuls
sbb
adc
dec
and
in
xchg
adc
lahf
xchg
ficoml
pop
jns
cmp
xor
sub
fidivs
sub
ljmp
hlt
aam
add
jno
test
insb
rcrb
movzwl
insb
sbb
mov
mov
ljmp
mov
les
ljmp
pop
pop
lret
bound
and
xor
mov
jo
mov
aas
push
orl
push
jp
repz
cmpsb
hlt
pop
scas
jno
cmp
out
orl
sbb
cmp
ja
shrl
pop
fwait
daa
iret
pop
add
nop
orb
stos
cmp
movsl
cmp
repnz
mov
shl
add
sub
push
pop
push
inc
arpl
movsb
push
inc
push
jb
fidivs
push
adc
daa
dec
std
or
or
mov
jle
jl
mov
adc
shl
gs
pop
or
insl
sbb
pop
jns
jle
aas
inc
loope
inc
sbb
dec
jecxz
add
add
mov
push
mov
pop
daa
movsl
or
jg
hlt
pop
aaa
cmp
cmp
ljmp
stc
das
mov
std
push
sbbb
push
insl
loop
popf
mov
add
cltd
or
push
outsl
es
dec
dec
xchg
and
push
outsb
scas
mov
and
lret
sub
scas
fs
pop
mov
sbbb
in
adc
mov
mov
xchg
mov
aam
sub
mov
rcll
mov
inc
xor
fbstp
fldcw
cmp
andl
test
cmpsl
shrb
leave
jns
cmpsl
pop
es
in
and
xor
lcall
sbb
pop
sahf
shr
add
stos
orb
cmc
pop
sub
xchg
sub
or
pop
sbb
clc
xor
and
pop
cwtl
cld
push
inc
sub
inc
fdivrs
daa
add
push
sub
pop
add
xchg
push
pop
cmpsb
shl
rcl
dec
shlb
mov
jo
add
mov
loop
xchg
cmp
push
out
int3
adcl
push
dec
jl
scas
mov
add
nop
iret
pop
insl
lret
jmp
mov
sarb
dec
cmp
dec
daa
scas
shrl
lods
adc
cmp
mov
or
dec
in
sub
insl
push
inc
jns
inc
sbb
bound
outsb
shll
testl
or
les
in
repz
jbe
inc
ss
push
inc
cmp
fidivrs
sti
nop
sub
add
mov
lret
push
jle
sbb
jp
jmp
inc
lahf
cmp
jnp
or
inc
arpl
jmp
push
sbb
inc
aaa
scas
xchg
sub
ror
popf
sub
fwait
rcrb
push
dec
and
xchg
lock
les
push
xor
addl
xchg
mov
ja
pop
test
dec
mov
push
add
shlb
cmpsb
adc
cmp
divb
arpl
jne
jnp
roll
cmp
adc
lahf
cs
sub
inc
xchg
test
mov
movsl
fidivrs
shrl
orl
mov
shl
sbb
mov
imul
cmc
add
adc
adc
repz
pop
mov
pop
loope
call
sbb
mov
scas
adc
cmpsb
aad
mov
pop
sbb
and
sbb
shlb
mov
cmpsb
or
les
dec
add
add
and
or
rcrl
jns
add
add
pop
test
lret
mov
push
mov
sbb
push
sbb
gs
mov
pushf
das
pushf
fiaddl
inc
movl
mov
outsl
std
xchg
sub
fcomps
ljmp
out
mov
pop
stc
sbb
sbb
mov
or
mov
mov
mov
mov
mov
inc
pop
mov
es
lds
imul
or
xor
sub
jne
inc
insl
sub
jne
in
popa
clc
inc
mov
in
mov
lods
dec
sbb
dec
lea
jnp
jno
call
ret
popa
testl
xchg
and
push
sub
in
ret
hlt
shrb
add
mov
out
pop
repz
xchg
or
jle
xchg
fiadds
loopne
pop
cmpsb
aad
adc
repnz
add
add
ret
loope
lcall
lcall
aad
pop
ret
inc
pop
flds
xchg
ret
lea
mov
outsl
or
outsl
in
in
stos
jbe
js
mov
fdivl
dec
in
je
xchg
mov
push
popf
dec
jge
psubw
mov
dec
mov
iret
loope
sub
aad
push
scas
inc
test
icebp
xor
int
icebp
dec
nop
push
cmpsl
xchg
add
jp
or
cwtl
cmpsb
jo
into
pop
cld
jbe
cmpsb
xchg
fdivl
sarb
cmp
rol
andb
push
into
lret
xlat
ljmp
sbb
test
jo
cmpsb
test
popa
sarl
jle
sahf
and
lahf
pop
lock
movsb
inc
sbbl
repz
xchg
mov
ret
ss
sub
xchg
add
pop
popf
pop
xchg
aas
xchg
jge
add
data16
or
inc
fidivrs
cmp
xor
test
aas
loop
cli
dec
push
je
test
outsb
inc
cld
and
outsl
aas
mov
aaa
add
decb
push
mov
mov
int
mov
jae
ljmp
loopne
lahf
push
imul
cmpsb
cmp
add
insb
xor
sbb
mov
xchg
outsl
lahf
xchg
inc
pop
dec
aaa
mov
jbe
add
xlat
mov
fstps
or
sbb
gs
cmp
mov
leave
or
cli
lods
push
lods
cmp
pop
xor
outsb
aad
cld
and
cmpsb
ficompl
jg
cli
in
fs
push
sbb
popa
push
xchg
mov
aas
out
inc
callw
push
fs
pop
xchg
std
adc
and
mov
cltd
std
fisttps
mov
stos
bound
cmp
and
pop
push
cli
das
clc
mov
imul
adc
loope
pop
sbb
push
jle
popa
jo
nop
pop
xor
xlat
push
loope
hlt
adc
call
sahf
loope
and
xor
in
inc
mov
and
inc
jns
test
nop
dec
aam
imul
adc
push
gs
xlat
imul
popa
cmp
mov
pop
xchg
jns
add
push
lods
xor
mov
ss
pop
subb
sbb
fiaddl
mov
dec
xchg
adc
rorl
lea
dec
mov
jns
cs
lret
dec
inc
jmp
insl
roll
mov
loope
push
movsl
push
add
hlt
mov
mov
lcall
lea
xor
inc
cwtl
movsb
xchg
repnz
mov
bound
jae
pop
cmp
push
rcrl
js
repnz
ret
xlat
dec
jp
repnz
or
hlt
cmpsl
daa
jl
pop
sbb
add
call
and
xchg
push
xchg
jp
icebp
sub
and
fwait
shr
cld
pop
pop
jmp
add
cmpsl
push
fldl
cmpsl
test
aas
lret
mov
loopne
fcoms
gs
jbe
jp
in
lods
sbb
andb
mov
jl
sbb
cmp
mov
mov
add
insl
xor
jp
mov
std
sbb
stos
ret
or
cli
xchg
sbb
insl
pop
cmp
scas
loop
imul
ss
cli
iret
xor
add
insb
mov
out
add
pop
jecxz
rolb
dec
or
sahf
ss
aam
xor
sub
out
fidivl
scas
stos
in
pop
lahf
stc
sub
dec
imul
cmpl
mov
xor
xchg
stos
jne
sbb
mov
loopne
mov
sbb
je
pusha
int
cltd
js
mov
fsubs
and
lret
rcrb
xchg
add
hlt
xor
call
pop
push
jo
das
test
fildll
hlt
mov
lret
inc
shlb
negl
mov
push
int3
insb
lods
cld
lcall
sahf
clc
cli
dec
insl
les
sub
pop
adc
push
push
dec
add
push
gs
jbe
int3
xchg
add
mov
movsl
clc
sub
push
cmc
dec
ss
mov
daa
mulss
test
xor
outsb
add
clc
lds
cli
dec
insl
loopne
xchg
lea
pop
aad
daa
or
out
out
shll
jns
push
or
aam
jnp
les
pop
icebp
and
mov
ret
jl
push
mov
adc
repnz
and
pop
push
inc
popf
es
pop
fmulp
fdivr
inc
xor
pop
sub
adc
stos
mov
mov
lods
pop
les
dec
inc
mov
dec
out
test
sbb
bt
cmp
notb
pop
fnstsw
adc
gs
data16
adc
adc
or
add
mov
jnp
xchg
mov
je
inc
xor
xor
sbb
push
decb
arpl
adc
ret
jle
dec
or
add
push
inc
rcrb
cwtl
inc
adc
mov
fsubl
fldenv
scas
nop
cmp
testb
pop
adc
mov
hlt
dec
xchg
inc
push
xor
cmp
mov
push
shlb
dec
xor
pop
mov
subb
pop
push
dec
xlat
in
jle
mov
ret
iret
dec
sti
inc
sub
push
repnz
mov
xchg
imul
cwtl
daa
mov
repnz
dec
outsb
scas
pop
mov
jmp
mov
imul
jns
or
rorb
and
push
cwtl
inc
sub
inc
add
inc
fdiv
loopw
inc
fcmovu
add
int
into
je
add
push
cmpsl
or
mov
fistl
jle
mov
adc
or
popa
add
iret
insl
xchg
sub
and
xchg
lahf
jbe
or
and
movsb
out
xor
test
or
cwtl
aas
mov
push
insl
sbb
pop
push
push
jae
jmp
imul
mov
stc
out
dec
xchg
jmp
cmp
adc
rorl
inc
pop
jae
cltd
gs
lret
inc
cltd
test
mov
shrl
mov
in
and
xchg
std
dec
scas
push
sbb
rorl
addr16
push
jle
aad
stc
cwtl
sub
repnz
xor
mov
sbb
jnp
fstps
in
repnz
sub
rcl
jl
das
xchg
stos
pusha
f2xm1
dec
xchg
enter
or
aaa
leave
add
mov
int
gs
push
dec
in
sti
shll
enter
vhaddps
pop
outsl
pop
xchg
pop
movsb
out
cmp
movsl
cmp
sub
hlt
and
incb
adc
sub
fwait
jb
xor
mov
mov
pop
cmp
subl
cwtl
cli
rcll
sub
mov
movsl
cmp
cwtl
fs
movsl
jl
cwtl
sub
and
addr16
inc
push
adc
cmpsb
out
pop
mov
inc
sarl
inc
push
out
aam
cmp
inc
js
mov
or
sub
inc
dec
pop
loopne
ret
ret
lock
loopne
jle
cmp
mov
andl
jl
ret
decl
pop
ret
mov
in
cmp
dec
and
add
inc
notl
es
push
sub
xor
push
mov
adc
decl
sbb
push
enter
fs
mov
popa
ret
jle
push
icebp
sub
sbb
fdivp
mov
add
popw
ret
ret
pushf
xor
xor
loope
mov
pushf
add
adc
call
fwait
xor
cmp
push
inc
pop
sub
sbb
push
mov
xchg
xchg
scas
test
notl
rorl
inc
jg
cli
mov
lahf
mov
enter
jge
fildl
inc
xlat
xor
hlt
push
push
movsl
pop
add
fldt
and
aaa
push
inc
daa
fnsave
fmull
cmc
stc
mov
cmp
push
or
in
out
xchg
jmp
addl
jge
daa
inc
xchg
es
outsb
add
outsb
dec
mov
loopne
xchg
sahf
jns
icebp
cmp
cld
in
sbb
sbb
stos
mov
or
sub
stos
mov
jecxz
jle
push
push
push
sbb
das
lret
loopne
imul
scas
mov
xchg
in
xchg
cmp
mov
mov
fldcw
iret
cmpsb
xchg
out
pop
fisubrs
icebp
sahf
xor
scas
jbe
loope
sti
fiadds
cs
in
push
xchg
mov
sub
pop
dec
inc
push
pop
jo
mov
cmc
imul
pop
movsl
sbb
inc
int3
shll
push
test
ds
push
sub
xlat
inc
notl
jbe
lcall
mov
pop
jmp
push
fbstp
and
leave
pop
xor
imul
add
flds
mov
pop
inc
dec
nop
scas
cmp
cltd
adc
icebp
scas
stc
dec
out
fidivs
fisttpll
cli
js
push
test
dec
fsubrs
icebp
and
pop
idivl
lods
out
xchg
cmp
mov
ss
add
leave
clc
jae
and
jno
pop
faddp
inc
addl
fcmovnb
pushf
push
jp
cwtl
test
aas
mov
ja
ljmp
pusha
fbld
adc
daa
sarb
daa
pop
sbb
daa
movsl
movsb
pop
leave
add
hlt
dec
sub
pop
fldenv
jp
jp
loope
adc
add
sbb
push
mov
outsb
cmp
or
cmp
xchg
scas
lods
jmp
and
popf
rcl
mov
arpl
jl
xchg
jle
mov
jns
pop
ds
mov
or
dec
loopne
or
addr16
loop
cmp
sti
jns
inc
fidivl
mov
pushf
dec
fwait
mov
fdivs
add
pop
js
mov
stc
and
clc
inc
loope
inc
call
ret
das
mov
xlat
out
pop
and
or
jne
adc
xchg
mov
fidivrs
sbb
outsl
popa
aaa
call
xchg
fbstp
mov
mov
jl
ffree
and
insb
add
xchg
cmpsl
inc
jbe
push
repz
xchg
jecxz
mov
subl
aaa
dec
push
out
cmp
xchg
je
jmp
sub
in
nop
push
test
scas
stc
test
je
std
movsl
mov
insb
lds
aad
in
add
popa
enter
and
adc
data16
push
add
aaa
sub
shrb
je
repnz
repz
push
xchg
fsubrs
lock
aad
divb
adc
lahf
push
ss
daa
push
jmp
mov
dec
std
xor
push
negb
es
jecxz
mov
cmp
insb
int
les
mov
or
xchg
sbb
add
fcmovne
loop
mov
push
notl
sahf
mov
cli
pop
into
adc
insl
sbb
ds
mov
cmpsl
out
adc
cmpsl
dec
loopne
mov
lods
ret
scas
mov
xchg
rcr
xor
mov
fimull
jmp
and
sbb
cmp
xchg
fs
andl
js
ret
sbbb
lds
or
pushf
fdivp
in
dec
mov
inc
fsubr
cltd
xchg
or
repz
xor
and
bswap
fiadds
and
mov
mov
addb
shlb
cmp
push
movsb
cmp
aas
xchg
sbb
dec
call
inc
mov
mov
pop
fwait
adc
xchg
sub
cli
and
add
jecxz
sbb
push
popa
fmuls
mov
mov
sub
xchg
jne
fbstp
out
mov
push
cmp
or
fadd
outsl
hlt
stos
xor
inc
pop
lods
shr
ret
ja
xor
pop
test
push
cli
mov
sbb
sahf
int
lcall
imul
popa
mov
std
inc
cmp
mov
sub
xchg
pop
addr16
push
lret
fnstcw
adc
sbb
ret
cli
scas
push
adc
ret
addr16
pushaw
or
adc
fidivs
jecxz
mov
ss
adc
sbb
add
mov
and
lea
mov
stos
sub
mov
ljmp
cmpsb
xchg
lock
xor
js
xchg
stos
inc
sahf
push
cmp
out
add
mov
mov
inc
dec
mov
cmp
dec
jnp
jge
add
fnstcw
add
mov
sarl
out
push
push
das
xor
jl
cmc
lods
shl
push
dec
dec
xchg
repnz
cmc
add
xchg
mov
jnp
xor
pop
jmp
sub
xor
xchg
popa
cmc
aad
sbbb
mov
ret
jle
pop
cmp
mov
sub
cwtl
icebp
jno
inc
cmp
xchg
xor
and
std
lods
inc
inc
jecxz
inc
adc
push
scas
clc
sub
fisttpl
jb
loope
xchg
xor
pop
mov
es
xor
jg
leave
dec
gs
add
sub
xor
call
mov
nop
push
jb
or
pop
movsl
addr16
add
cltd
jne
std
mov
aam
lcall
loop
outsb
das
xor
mov
out
inc
js
ret
dec
dec
cwtl
cmp
dec
or
and
jmp
jecxz
push
fimull
lds
rorl
pop
call
jg
push
lcall
inc
sti
mov
add
xor
gs
jge
cmc
lret
ret
insl
jecxz
dec
loopne
sbb
sbb
cmp
dec
in
les
mov
pop
fsubp
sub
repz
xor
stos
rcrb
or
sbb
dec
fsts
pop
inc
rcrb
or
inc
scas
nop
xchg
dec
pop
adc
push
negl
sub
loope
sub
imul
mov
out
dec
dec
mov
aaa
pop
in
cld
dec
cwtl
lcall
loope
or
push
cmp
pushf
push
mov
mov
popa
outsl
stos
shrb
insb
ror
sub
sub
xlat
insb
mov
pusha
xchg
jg
ret
sbb
push
lahf
add
ret
sahf
jae
add
and
lcall
push
pop
imul
fstpl
test
dec
and
addr16
mov
mov
sbb
pop
imul
sbb
or
mov
xchg
sbb
dec
pushf
mov
mov
sahf
sub
test
lret
inc
dec
mov
push
pop
mov
adc
pushf
dec
pop
push
outsb
push
jg
add
fcmove
movsl
adc
pop
mov
pushf
or
cmp
mov
icebp
inc
mov
mov
pop
adc
push
aaa
popf
xlat
mov
aaa
inc
bound
lea
dec
pop
lret
pop
dec
dec
hlt
fwait
insb
test
mov
push
scas
push
call
mov
inc
jmp
or
jl
jp,pt
arpl
mov
mov
imul
pop
fadd
jns
add
fisttpl
das
cmpsl
fidivl
pop
mov
loopne
cmp
lret
jne
cld
andb
dec
addr16
int
es
sahf
dec
push
cmc
fwait
sti
jmp
in
mov
mov
push
add
lds
or
je
and
pusha
cwtl
imul
push
cmpsl
fsubs
shr
cvtps2pd
loopne,pt
dec
out
xor
lds
jmp
jp
mov
test
nop
dec
call
cld
out
cld
and
insl
mov
loopne
cmp
scas
dec
shl
jne
and
jnp
jp
movsl
fstpt
lds
pop
call
jne
ljmp
shlb
mov
dec
and
js
xchg
sub
mov
jp
mov
call
pop
cmpsl
push
and
insl
push
in
sahf
cmp
dec
or
std
or
sbb
sbb
mov
pushf
sub
divps
dec
mov
or
dec
sbb
sub
inc
nop
and
cmpsl
mov
lods
jae
bound
inc
cmp
sub
mov
bound
ror
fnsave
cs
adc
imul
cmpl
lret
and
push
into
pop
jae
mov
jp
movsl
sub
js
push
bound
test
sbbb
data16
push
push
mov
jne
jle
imul
loopne
decb
cltd
xchg
stos
mov
jg
in
push
repz
fsts
aas
inc
sarb
mov
mov
jmp
lods
jo
push
jb
or
arpl
lret
aaa
cmp
sbb
repz
scas
adc
fisubrs
pop
sbbl
pop
scas
lahf
nop
fsubrs
cmp
pop
mov
cmp
mov
add
dec
mov
pop
lods
mov
jo
and
adc
jne
les
mov
pop
sub
ret
pop
add
mov
jmp
iret
inc
inc
jbe
and
and
cmpsb
sbb
inc
lret
push
das
lcall
lcall
dec
sahf
mov
ljmp
testl
jne
or
mov
lahf
pop
aaa
jne
test
int3
push
in
dec
mov
mov
lahf
cmp
stos
pop
and
adc
or
pop
or
stos
push
push
or
mov
inc
out
insb
or
sbb
call
fwait
lods
fcoml
mov
push
xor
push
test
sbb
or
pop
lea
test
adc
xor
sub
jbe
mov
data16
jl
lods
mov
xor
push
pop
push
mov
into
adc
inc
xor
test
inc
mov
mov
xor
faddl
daa
jno
mov
adc
jns
sub
stos
dec
incb
in
add
sub
pop
adc
inc
rorb
sti
adc
push
add
movsl
dec
loope
adc
add
and
out
movsb
sub
adc
shll
in
popa
xchg
push
dec
cmp
hlt
mov
jle
xor
out
push
negb
fsubl
or
lods
xchg
inc
ja
or
test
imul
push
or
bound
imul
lcall
clc
or
in
sub
inc
mov
sbb
xor
lahf
mov
lock
je
xchg
add
xchg
icebp
lock
and
dec
in
movsl
lods
jmp
mov
jmp
fldt
lahf
sbbl
jne
push
mov
test
sub
mov
lods
pop
shl
mov
jnp
sub
lods
push
rcr
dec
mov
jg
dec
outsb
icebp
dec
out
cld
jns
mull
xchg
xchg
iret
aaa
mov
subl
adcb
adc
lea
and
out
ja
sahf
push
jmp
adc
push
xlat
outsl
add
test
mov
mov
ret
mov
adc
add
sbb
cli
jbe
stc
cmp
ficomps
ja
insb
xchg
stos
inc
pop
lods
mov
inc
add
lahf
mov
mov
mov
pop
stc
and
mov
jmp
in
out
or
lret
jle
shl
mov
sbb
leave
xchg
ja
inc
jl
rclb
into
cmpsb
insl
test
fistpl
loopne
push
or
cmp
test
mov
mov
xchg
sub
mov
mov
mov
cs
adc
sbb
jge
idivb
jecxz
dec
and
xchg
movsb
inc
pushf
jle
lds
mov
loop
call
test
push
lods
ret
jb
pushf
jg
push
int
xorb
xchg
lahf
std
and
es
cmp
nop
jge
lods
jae
not
cmp
aas
pcmpeqb
mov
sbb
add
push
add
pusha
xor
scas
or
mov
popa
bnd
jb
push
scas
shlb
cmp
inc
dec
and
insl
fs
mov
lods
cmp
dec
inc
mul
mov
jg
cmp
mov
mov
testl
sbb
cs
jp
sahf
pop
dec
fwait
or
insb
jbe
inc
inc
cmpsb
push
mov
repz
stos
lcall
cmp
nop
rclb
push
pop
repnz
adc
sub
mov
addl
lret
mov
loop
loope
mov
xchg
out
adc
mov
outsl
or
mov
cmc
pop
push
mov
dec
adc
mov
fisubs
xor
cmp
out
popf
cltd
out
inc
pusha
mov
jne
add
cmpsb
mov
push
xor
xlat
mov
out
xor
inc
js
icebp
outsl
ja
call
dec
andb
cs
aas
int3
add
and
int3
outsl
push
call
jecxz
add
fs
jb
inc
push
cltd
jnp
adcb
inc
xlat
int
mov
gs
xor
mov
clc
in
mov
sbb
and
or
jp
int3
je
pop
mov
dec
inc
jmp
imul
dec
fwait
cmp
leave
loopne
or
fcmovb
push
dec
xchg
mov
pop
negb
imul
push
add
xchg
xor
enter
sbb
outsl
shrb
outsb
loop
xrelease
xlat
push
dec
test
js
movsl
aad
lods
lds
push
xlat
ret
fbld
xchg
adc
push
push
ss
scas
pop
and
sbb
icebp
lds
xchg
ret
fucomp
call
fldcw
in
pushf
mov
lock
insl
pop
lods
imul
jne
add
movsb
xchg
fcoms
arpl
jl
sub
jnp
popl
jne
clc
mov
insl
std
dec
and
push
jg
pop
mov
and
movsl
push
fidivl
push
negl
cmp
int
punpcklbw
push
xchg
or
lods
les
mov
cwtl
outsl
cmc
enter
aaa
ss
lock
popf
cmpsb
fsts
arpl
pop
and
mov
cs
and
mov
cwtl
shll
cs
shl
cmp
and
inc
aas
subb
imul
or
pushf
in
sbb
mov
push
call
or
sub
andl
fsubrl
xchg
jmp
adcl
fmul
out
mov
std
cs
add
push
fwait
add
mov
jne
aas
adc
adc
pop
pop
mov
lock
xchg
add
lds
xor
in
sub
xchg
sbb
sub
repz
or
inc
test
xchg
idivl
fistps
aaa
lcall
cli
xchg
mov
lret
in
pop
sbb
stos
sub
scas
jle
popf
mov
lds
subl
mov
sbb
sbb
cli
xchg
movsb
outsl
push
add
rol
sbb
mov
jl
and
pop
nop
jle
in
adc
mov
or
shrl
sarb
insb
dec
and
inc
push
psrld
fcmove
cwtl
call
xchg
jbe
out
fidivs
addl
les
imul
inc
or
call
pop
sub
dec
adc
mov
jl
jns
sbb
cmpsl
jle
mov
push
lret
rcrl
jecxz
fsts
dec
add
lock
or
aaa
cld
andb
cld
mov
fstl
jo
cmp
mov
adc
adc
daa
push
les
lods
mov
divb
xchg
das
sub
cli
jne
sub
mov
iret
add
xacquire
mov
leave
mov
icebp
inc
jnp
pop
xor
lret
jnp
fsubr
std
pop
sub
inc
sub
push
cmp
push
insl
outsb
push
adc
mov
mov
pop
sbb
adc
test
fnsave
jle
in
int
and
ret
mov
test
in
ja
cwtl
icebp
in
xchg
jbe
mov
ret
mov
outsb
mov
into
out
dec
inc
jmp
push
aas
pop
sub
xchg
scas
imull
inc
or
inc
ficoml
call
mov
into
rorb
lret
adc
lret
mov
and
mov
shlb
sub
xor
lahf
mov
jnp
inc
mov
jb
jo
mov
pop
mov
fucomi
mov
rolb
push
adc
sti
mov
and
rclb
push
push
out
pop
sti
lret
pop
add
addr16
pop
add
pop
ds
xchg
adc
mov
and
shll
push
repz
mov
add
pop
sbb
or
add
fchs
call
shl
dec
stc
popf
mov
mov
xor
aam
addr16
pop
cmp
mov
adcl
xor
xor
and
mov
pmaxsw
ja
cmp
pop
popf
xor
clc
fstpt
lahf
sbb
xor
xlat
lods
inc
xchg
mov
jbe
push
mov
pushf
jae
and
popa
stc
loop
pop
pop
dec
cmp
pop
mov
dec
jmp
es
pusha
pop
mov
movsl
add
dec
mov
and
gs
aaa
movl
dec
pop
lcall
ja
xchg
dec
std
ror
pop
pushw
pushf
or
push
sub
aas
sbb
int
push
mov
rcll
rolb
vpxor
movsb
mov
adc
decb
test
xlat
mov
xchg
mov
mov
aas
push
jp
jp
cwtl
xor
cltd
pop
iret
push
addl
in
pop
pop
jmp
cmp
xchg
fsubl
xchg
cmpsb
ds
fwait
pop
cmpsb
mov
jnp
inc
mov
inc
lret
pusha
xchg
sub
xor
rcll
inc
push
mov
xor
aas
dec
fsubs
aaa
pop
cld
pop
jecxz
rcrb
adc
inc
push
sub
and
sbb
mov
scas
inc
xor
lret
and
and
push
push
daa
sbb
aam
std
mov
jae
rorl
pop
sti
sahf
pop
jb
and
call
xchg
jle
sahf
outsl
pop
inc
es
aam
dec
mov
and
add
mov
mov
insb
loopne
loope
pop
xor
leave
sbb
fildll
movups
inc
mov
repnz
mov
xor
push
iret
inc
pop
inc
adc
call
mov
push
jg
adc
in
and
stos
fs
pop
mov
dec
mov
mov
icebp
hlt
mov
pop
adc
adc
insb
xchg
mov
lods
push
scas
cmpsl
mov
push
movsl
or
in
and
dec
dec
and
in
stos
sbbl
mov
psrlw
pop
sarb
inc
inc
out
test
sub
arpl
xlat
repz
sbb
push
inc
loope
push
pop
bnd
push
jge
sarl
js
call
clc
aaa
jmp
sbb
sahf
jp
testb
or
mov
jnp
lock
inc
xchg
pop
sbb
cmp
scas
pop
mov
pop
ss
aas
fistps
lock
ljmp
rcrl
sahf
or
adc
xchg
xchg
sub
or
mov
mov
xor
cs
push
sbb
add
xlat
cmp
fwait
push
call
jg
bswap
sbb
or
cmp
xchg
outsl
cmp
cmc
enter
xchg
inc
push
pop
add
or
lds
pop
add
xchg
pop
fidivl
sbb
jb
in
ds
push
sub
sub
inc
ljmp
mov
inc
inc
in
xchg
ja
or
mov
jnp
js
xchg
xchg
sti
fwait
cltd
mov
mov
in
sbb
cld
dec
xchg
add
sarl
xor
in
sub
sbbl
jp
stos
inc
mov
aas
aam
jo
jl
lock
jbe
sbb
cmc
mov
jg
std
jns
jg
mov
adc
mov
mov
xchg
mov
add
or
mov
fcoml
incl
in
test
xchg
imul
push
popf
int3
bound
in
aad
std
push
jns
subb
popa
sbb
adc
dec
fwait
cmpsl
orl
sbb
jbe
movsl
jno
shll
dec
cmp
subb
mov
inc
out
xchg
push
add
add
in
fsubl
subl
xchg
sahf
mov
ds
mov
movsb
pop
push
leave
pop
dec
xchg
mov
inc
stos
jb
adc
cmp
aad
icebp
in
dec
jns
mov
int
in
lds
addl
sub
push
push
sub
fs
xor
mov
into
mov
jb
xor
sarl
sub
mov
adc
cwtl
outsb
sbb
xor
out
push
lds
popl
in
mov
cwtl
dec
icebp
push
movsl
daa
or
mov
lock
mov
aas
ret
sbb
shl
ss
js
lret
sub
adc
jns
pavgb
mov
add
es
outsl
cmc
xchg
test
nop
leave
pusha
ret
dec
xor
incb
test
push
pmuludq
cwtl
jne
imul
ss
imul
into
and
push
mov
add
leave
jle
testl
inc
xchg
sbb
pop
lret
std
mov
mov
arpl
mov
xor
das
inc
add
fldl
lahf
in
lret
jle
imul
add
stc
push
adc
mov
lods
mov
and
mov
adc
jo
js
jecxz
sbb
je
insb
int
adc
loopne
fwait
push
leave
insl
add
jae
xor
jnp
push
hlt
cmp
adcb
popf
and
movsb
repnz
rcrl
outsb
jmp
inc
xchg
add
add
aaa
std
jl
push
test
out
jbe
dec
dec
fsubp
pop
mov
push
lea
sarb
mov
cmp
jge
out
mov
inc
scas
jp
fidivl
cmpsl
cmp
repz
xchg
addr16
imul
cmp
mov
push
int3
jg
mov
loop
stos
movsb
cmp
dec
xor
stos
dec
in
xor
dec
dec
test
mov
cmp
push
cmc
inc
pop
lahf
inc
das
pop
repnz
in
mov
and
pop
cmc
popa
mov
sub
insb
adc
mov
loope
pop
outsl
dec
loope
pop
xchg
nop
fcmovb
sbb
pop
repz
clc
mov
jmp
jecxz
cmp
inc
add
sarl
lcall
push
mov
out
cs
stos
aam
jae
insl
or
cltd
inc
jns
cmp
inc
and
test
mov
test
inc
add
jl
aam
mov
clc
sbbl
in
inc
dec
test
mov
mov
sub
loopne
pop
clc
inc
in
les
xchg
fistps
scas
push
dec
imul
sahf
xor
mov
push
mov
or
stos
out
lock
outsb
mov
push
sub
leave
int
negl
jo
mov
fsubrp
or
leave
mov
xlat
sub
cmpsl
pop
ljmp
fimull
xor
cmp
ds
cmp
out
adc
sbb
mov
and
aas
adc
xor
or
sti
adc
call
in
outsl
fnstsw
mov
and
dec
inc
push
mov
and
cmp
lret
mov
xor
dec
dec
pushf
cmp
aaa
jno
ds
lods
xchg
call
je
fisubl
aas
adc
dec
loopne
mov
jbe
add
jl
xchg
test
js
cmp
inc
std
push
je
dec
dec
inc
cwtl
push
insb
int
vshufps
sub
fwait
stos
mov
pop
out
mov
mov
jne
xchg
dec
dec
jp
mov
jl
aaa
mov
mov
mov
gs
push
push
lahf
xchg
push
fsubp
hlt
out
push
ds
pop
push
fidivrs
cltd
xor
rclb
mov
jnp
push
inc
sbb
xchg
in
sarb
inc
imul
pop
outsl
test
mov
sbb
jb
adc
mov
shlb
bound
push
cli
jbe
repz
or
mov
dec
pop
xor
pop
add
and
jmp
mov
lcall
outsl
adc
push
add
push
xchg
dec
mov
mov
lds
jno
pop
cwtl
aaa
jae
gs
jmp
xchg
pop
mov
adc
cwtl
loope
lret
mov
jbe
mov
popf
inc
and
push
scas
mov
pop
repz
xor
mov
js
ds
out
adc
out
popa
inc
repz
dec
scas
ret
jnp
push
mov
pop
xor
int3
cld
push
aas
push
jnp
hlt
cmc
data16
div
cmpsb
cmp
xchg
inc
rcll
add
and
xor
fdiv
cmp
add
mov
or
test
cmp
push
mov
call
outsb
xor
orl
add
xor
mov
pop
xlat
outsb
ja,pt
xor
arpl
fisubrl
outsl
push
dec
and
sbb
sbb
cltd
dec
pop
cwtl
lahf
push
mov
mov
dec
xlat
adc
sub
add
aam
jmp
sbb
pop
and
push
mov
das
sti
and
adc
xchg
ljmp
mov
shl
fcmovne
out
add
sbb
je
jl
add
and
mov
mov
sbbb
xchg
ja
popa
js
rclb
out
jge
or
leave
cmp
enter
push
insb
test
rcll
mov
mov
xlat
jp
xchg
arpl
pop
cmp
pop
call
nop
dec
in
xchg
mov
xor
mov
add
das
or
repz
cltd
movsl
loop
lret
xchg
and
inc
push
faddp
xchg
int3
inc
push
jle
ret
xchg
loopne
ret
pop
lret
aam
call
sbb
push
xchg
int3
lahf
mov
dec
cmc
loopne
cmp
mov
lret
sub
mov
xor
stos
xor
mov
push
mov
xor
and
sbb
adc
aam
add
sbb
pop
scas
aad
je
sahf
imull
mov
clc
fs
int3
pop
cmp
sub
xor
adc
sub
adc
xor
add
jbe
les
je
jo
shl
jne
aad
mov
ret
xchg
into
scas
sbb
mov
repnz
test
pop
aam
jmp
and
out
stc
cwtl
gs
out
jge
cmp
push
fwait
push
pusha
cmp
mov
fdivrs
aaa
pop
mov
shlb
fnstcw
mov
and
pop
push
js
push
push
out
mov
jnp
pushf
ret
cltd
cmovge
push
cmp
mov
arpl
fcmove
pop
hlt
icebp
xchg
fnsave
int3
std
pop
lret
clc
or
int3
push
mov
cli
shlb
jb
mov
aam
lock
dec
mov
jmp
lea
jbe
faddl
cmpsb
lret
pusha
std
mov
in
inc
daa
sbb
inc
sbb
xchg
mov
addb
pop
xor
das
add
add
lcall
mov
pushf
loopne
dec
mov
cs
cli
rolb
cltd
sbb
dec
loop
lcall
jns
mov
ret
ljmp
aad
out
xchg
push
inc
mov
loopne
sbb
stos
inc
push
and
mov
repnz
cmp
xlat
push
daa
mov
lds
and
cmp
adc
icebp
add
sbbb
inc
gs
lret
mov
mov
xlat
vmulpd
xlat
jg
cmp
mov
cmp
lods
ds
sub
adc
shlb
xor
adc
mov
int3
stos
mov
cmp
push
jge
sub
fpatan
sti
cs
movsb
inc
pop
jle
mov
push
ja
push
jno
and
adc
jg
mov
fnstcw
pop
fcmovnb
xor
loopne
mov
fists
push
jo
out
notl
mov
out
add
ja
out
and
shrb
sbbb
jl
fidivs
test
inc
gs
cld
rcll
arpl
cltd
lock
inc
push
repz
push
insl
sub
addr16
jg
ss
adc
filds
cmpsb
mov
cltd
pop
or
or
lcall
idiv
test
push
add
lods
jo
xchg
movsb
dec
add
dec
xor
pop
xor
sub
dec
xor
adc
aaa
ret
aaa
xor
sub
je
scas
dec
dec
cld
fs
aaa
mov
test
arpl
jge
push
test
test
dec
sti
sarl
add
es
fildl
es
lret
push
lds
mov
mov
loope
mov
inc
das
fwait
lds
pop
or
ss
xor
jp
xchg
or
repnz
aad
cmp
pop
pop
adc
cmpb
inc
adc
jne
and
dec
adc
inc
es
lea
je
xchg
pop
pop
add
cmp
lods
ja
fistps
mov
leave
jl
mov
loopne
mov
sub
lahf
pop
data16
sarb
jmp
or
adc
loop
xor
or
sub
pop
sysretw
jge
pop
mov
andb
lahf
cmc
pushf
hlt
clc
ds
sbb
cmp
push
push
daa
fwait
dec
loope
or
xchg
imul
push
mov
cmpsb
stc
sub
notb
loopne
pop
push
inc
sbb
dec
cmpsl
ds
outsb
insl
xchg
jmp
push
cltd
cmp
dec
and
pop
pop
hlt
mov
mov
or
out
add
jmp
inc
adcb
xchg
dec
pop
dec
jno
xchg
add
pop
mov
pop
notb
push
fisttpll
les
dec
dec
jmp
or
fwait
xchg
inc
stc
sbb
push
inc
scas
jp
sub
xchg
shll
jno
pushf
dec
fcoms
jge
les
ficoms
mov
jbe
dec
aaa
movsb
in
fstpt
xor
and
pushl
in
xchg
js
test
mov
lods
mov
sub
pop
pop
xor
je
shlb
pop
arpl
pop
outsb
jne
pop
adc
insl
loop
inc
pop
mov
lret
mov
fstl
dec
das
jbe
cld
popf
outsl
mov
inc
mov
jge
lds
xor
jl
mov
aaa
xor
sbb
aas
test
or
jp
sub
mov
mov
test
mull
aas
lahf
xchg
xor
pop
std
aam
add
sbb
xor
movsl
sub
or
xor
sbb
ss
movsb
sub
push
or
pop
psllq
jg
loopne
enter
sub
sub
add
mov
outsl
iret
adc
mov
and
jmp
jg
adc
adc
jo
cltd
cs
shl
cmc
adc
cmp
push
dec
pop
add
retw
sub
fdiv
sub
cs
jl
scas
mov
notb
cwtl
subl
xchg
inc
das
adc
jo
sbb
lods
jno
jecxz
sub
shll
pop
xchg
fdivs
fdivl
or
mov
mov
stc
pusha
aaa
mov
push
add
negl
decb
stos
add
sub
mov
ficomps
cmpsl
cwtl
jge
jmp
test
aad
inc
or
pusha
add
es
clc
stos
push
mov
test
popf
arpl
mov
ljmp
xlat
ja
addr16
cli
push
pop
call
xchg
movsl
cmpsb
jno
iret
xchg
mov
xor
push
fsubr
xchg
and
xchg
test
dec
cli
sub
adc
jmp
sbb
inc
fistpl
mov
rolb
bound
push
dec
in
repz
xlat
test
mov
movl
adc
ljmp
dec
push
data16
push
mov
fwait
rolb
lret
insl
lock
fnstcw
or
insl
push
xor
mov
jp
fs
pop
icebp
in
lds
mov
fs
inc
xchg
inc
or
push
jae
imul
inc
pop
dec
push
mov
cltd
test
push
mov
jecxz
movsl
xor
in
push
xchg
or
js
mov
mov
in
fsubrl
lret
cli
jb
sub
sbb
dec
test
jp
sub
sahf
pop
loope
aas
push
dec
cmp
int
cmp
dec
out
jnp
inc
lods
inc
sti
fwait
out
fwait
repz
icebp
lret
hlt
push
cmpsb
sbb
cli
aaa
pop
xor
sbb
push
dec
cmc
mov
idivl
rcrb
lea
ss
in
jnp
movsl
ficompl
ret
sub
cmp
fcmovnb
push
push
jae
pop
xchg
inc
dec
pusha
andl
mov
mov
outsb
loope
int
sub
insb
loopne
lcall
in
jp
inc
outsl
jns
push
sub
int
movsl
movsl
ret
repz
sub
div
or
xchg
in
xlat
test
xor
push
pop
cmp
inc
out
std
cmpsb
push
not
aaa
negl
cli
jno
fcoms
xlat
mov
or
adcb
les
jns
push
jo
push
icebp
cli
xor
jecxz
lahf
or
fwait
stc
nop
int
adc
xchg
shll
lcall
mov
push
sub
xchg
pop
xor
fldenv
xchg
testl
cmpsl
iret
rcrl
mov
add
push
in
xor
stos
cmp
inc
divb
roll
in
add
pop
addr16
cmp
cmp
cld
stos
add
cmpxchg
mov
iret
push
outsl
icebp
out
jmp
sbb
mov
arpl
xchg
and
pf2id
mov
call
leave
mov
mov
xor
mov
mov
sub
dec
outsl
js
mov
mov
clc
mov
pop
fcmove
movsb
nop
jnp
jmp
dec
imul
push
jg,pt
jl
loop
xchg
sar
adc
loope
aad
les
fs
aad
sub
test
mov
test
pop
enter
push
mov
jnp
jb
test
pop
pop
in
ret
mov
mov
movsl
fisubrs
sub
std
int3
adc
push
popa
xorl
pushf
xlat
pop
shrl
add
lss
mov
les
jp
cli
pushf
mov
stos
dec
mov
ficoml
lret
pop
das
jnp
out
loope
movsb
cmp
cs
out
pop
les
rcrl
mov
cmpsl
aam
add
pusha
cmc
popa
clc
sbbb
push
xchg
ss
mov
and
adc
lock
jo
ss
imul
out
and
pop
jp
jge
ss
pop
fnstcw
sbb
aaa
jns
jmp
stos
es
call
xlat
lods
addr16
mov
jae
sub
mov
xchg
xor
mov
add
mov
jge
inc
rcrl
mov
ret
xchg
pop
or
adc
ds
mov
pop
je
mov
aaa
into
adc
pop
cmova
das
mov
sbb
fidivrl
out
cmp
mov
mov
adc
mov
mov
repz
dec
out
xchg
cwtl
xor
notl
ljmp
imul
xlat
je
pop
cmc
mov
cmpsl
call
out
mov
hlt
sub
dec
push
ficompl
cmp
stc
scas
jg
dec
daa
add
pop
imul
cs
insl
mov
or
adc
push
adc
adcl
xor
and
push
add
shlb
inc
xlat
or
daa
stc
pop
dec
pop
inc
dec
add
cld
mov
cs
cmpsl
lds
sarl
jnp
ret
add
cltd
xor
outsb
or
push
cmp
lods
xor
jge
rcll
mov
nop
xchg
mov
inc
sahf
pop
gs
lret
pop
std
pop
adc
stc
cltd
mov
xor
test
xchg
aas
inc
shl
push
mov
adc
int3
and
jmp
lock
bound
les
cmpsl
ret
loope
xchg
sbb
sbb
loopne
or
add
xchg
test
fistpl
iret
xchg
mov
sbb
push
pop
loopne
add
movsb
or
jbe
and
out
cmp
sbb
sbb
and
sbb
jp
pop
jo
xchg
cmc
pop
push
xchg
loopne
stos
push
jne
dec
cmpsb
push
xchg
cmpsl
sub
andl
mov
push
cmpsb
mov
xchg
and
lahf
adc
sti
imul
xchg
or
sbb
xor
fxch
gs
sarl
xorl
xchg
sbb
fidivrs
lret
ret
outsb
xchg
and
mov
cmc
pushf
cmpsl
es
push
add
test
lods
repz
repz
jae
enter
stos
cli
adc
ss
outsl
out
hlt
sbb
push
loope
fidivs
dec
sub
dec
rcrb
xor
push
or
sbb
fwait
jbe
cmp
adc
add
dec
pop
out
incb
mov
in
out
mov
test
pop
mov
mov
dec
loop
cmp
pushf
inc
iret
out
std
or
xor
xchg
leave
push
and
cmp
xchg
xor
pop
dec
xor
adc
mov
data16
in
mov
insb
sbb
movsl
jo,pt
mov
jecxz
jg
mov
mov
fbld
push
mov
pusha
andl
ret
sbb
xor
jg
sahf
pushf
popa
popf
repnz
xor
in
jno
pop
mov
hlt
movsb
sub
into
mov
push
push
push
jno
test
mov
lods
js
mov
sarl
cmp
push
xor
add
pop
xchg
sub
repz
dec
aad
imul
loopne
imul
movl
iret
xchg
sbb
repz
push
xor
aad
inc
push
jmp
inc
lret
xchg
jae
imul
fidivl
js
dec
and
xchg
cmp
adc
add
fdivs
jns
cmp
cmp
xchg
repz
test
push
xchg
orl
sub
xchg
or
addr16
jae
xorl
hlt
xor
ret
addb
pop
adc
push
popf
pop
testb
and
jbe
mov
lea
outsl
xchg
scas
outsb
fisubs
mov
mov
adc
sub
jnp
lods
in
aaa
testb
loop
jg
xchg
xchg
mov
stc
aas
insl
fstps
xchg
repnz
sbb
push
test
loopne
dec
jmp
out
dec
loopne
int3
cmpsl
ds
es
lds
lahf
sub
lret
mov
jb
push
adc
mov
mov
pop
lea
imul
out
in
in
repnz
or
out
into
jno
je
and
lahf
add
sub
aaa
mov
pop
xor
lret
xchg
mov
pusha
push
repnz
adc
cld
adc
inc
into
aaa
inc
push
imul
out
into
push
lods
xor
mov
jl
movsb
add
in
mov
nop
mov
fstps
lret
addl
push
jno
push
sub
in
fxch
adc
mov
sbb
jns
pop
sti
mov
sub
fistps
js
sub
or
lds
sti
js
dec
mov
cmp
xchg
es
jo
pusha
mov
in
xor
xorl
pop
pop
aaa
mov
push
dec
jmp
scas
cmp
xorl
sub
scas
sbbb
dec
clc
mov
and
cmp
sahf
push
in
sub
pop
insl
add
sbb
push
dec
lret
addr16
push
ljmp
pop
stos
push
lods
cmp
lea
decl
test
mov
insb
push
out
sahf
fs
pop
fildll
fs
mov
fsubrp
jnp
dec
xor
mov
dec
ret
ds
lahf
push
jp
in
es
mov
or
inc
cld
cltd
cld
adc
pop
xchg
stc
inc
add
xchg
ja
dec
test
mov
adc
fsub
leave
stc
mov
jge
ret
rcl
and
xor
mov
scas
inc
mov
jnp
mov
sbb
jae
call
mov
in
arpl
xchg
into
loope
scas
lock
inc
push
icebp
bound
and
loop
clc
sub
aad
inc
lds
inc
inc
xchg
sbb
xor
or
push
sbb
dec
popf
pop
ret
scas
into
stos
js
mov
dec
test
cltd
imul
ss
dec
out
push
dec
inc
adc
mov
xchg
jnp
inc
dec
xor
divl
fisubs
cli
push
sarb
in
popa
dec
arpl
inc
pop
mov
push
fisubrl
lret
jg
mov
pop
mov
dec
gs
stos
xchg
xlat
or
mov
fld
and
mov
and
push
cwtl
sub
or
dec
pop
mov
sub
mov
int
pop
in
inc
or
subb
insb
inc
enter
imul
mov
scas
popa
add
call
sub
hlt
daa
inc
pop
and
pop
mov
insl
shl
add
mov
pop
sbb
xchg
push
push
mov
fstps
test
adc
and
rep
ljmp
ljmp
mov
xor
ljmp
sbb
popw
pop
cmp
cmp
cmc
mov
mov
pop
mov
xchg
mov
mov
popf
int
nop
cld
imull
stc
popf
or
xor
rorl
outsb
fsincos
mov
push
rcrb
clc
adc
pushf
rcrl
lret
mov
jmp
mov
out
daa
mov
std
jo
or
adc
mov
enter
icebp
inc
repnz
dec
lcall
xlat
lock
inc
pusha
mov
aas
adc
pop
ljmp
jno
jnp
stos
cli
mov
fnstenv
cmc
and
ror
jg
shrb
jg
mov
scas
mov
jns
jmp
fcompl
in
imul
mov
pop
cld
and
push
mov
or
jmp
ds
les
jae
icebp
aad
lahf
mov
push
xor
ret
cs
or
loop
aaa
fwait
xchg
add
out
loop
pop
clc
adc
pop
fs
inc
cltd
and
mov
dec
fnstenv
or
mov
sbbl
leave
popf
xchg
rcrb
lcall
sbb
mov
dec
adc
xchg
jmp
lods
sbb
in
addr16
lea
cmc
cmp
inc
push
fstps
dec
add
test
pop
pop
pop
cwtl
das
lea
jno
sub
jp
out
fcmove
xchg
inc
add
stc
scas
jno
imul
push
cmp
mov
or
cltd
inc
fcmovb
roll
adc
push
inc
or
fnstsw
mov
movsl
imul
imul
push
mov
enter
rclb
dec
dec
sub
dec
pop
cmp
mov
fwait
pop
lods
outsl
or
push
pop
hlt
mov
cmc
popa
movsb
lods
aas
inc
in
icebp
ret
mov
mov
dec
xchg
push
popa
test
cmp
adc
enter
and
push
lahf
mov
rcrl
cmp
mov
les
mov
call
adc
je
or
pop
jae
dec
dec
jo
subb
mov
clc
mov
fnsave
rclb
adc
adc
into
or
outsl
popa
clc
mov
or
clc
xchg
rcll
bnd
mov
fisttpll
mov
push
popf
pop
and
mov
mov
lds
push
add
inc
lods
jmp
movsl
dec
repz
jecxz
adc
lds
mov
mov
xchg
inc
outsl
cmp
popa
arpl
mov
mov
repnz
cmpsl
and
test
sbb
addb
arpl
jecxz
aas
adc
and
popa
add
mov
sbb
sub
stos
cmc
xor
mov
mov
scas
ret
rcr
stos
ss
call
in
fwait
sti
inc
in
sbb
push
mov
cmp
fadds
lcall
in
mov
ss
sub
or
push
icebp
data16
repnz
adc
cmp
sub
push
fidivrl
or
lea
repnz
inc
inc
fisubl
or
mov
inc
sbb
sub
xor
ljmp
out
cmp
sti
sub
pop
cmpsl
mov
inc
incb
mov
cmp
mov
pop
stc
push
add
push
mov
and
movsl
sbb
mov
mov
mov
loop
rcl
dec
dec
mov
dec
movsl
popa
loopne
xchg
push
sub
add
fdivrl
cmp
incb
jmp
add
or
js
mov
into
cltd
loope
mov
jge
icebp
cld
fucomip
std
adc
jge
jg
inc
mov
nop
adc
fdivs
aad
push
shr
sahf
stc
dec
pop
int3
lret
lea
cmp
into
jmp
int3
push
mov
ljmp
testb
xchg
rol
mov
push
and
xchg
int
imul
pop
fs
aad
das
fnstcw
scas
mov
shll
cmpsl
pop
xchg
xor
sbb
xchg
test
out
mov
ja
les
sbb
in
or
push
mov
push
mov
inc
cld
loope
aam
push
xchg
push
sbb
sub
pusha
arpl
lret
outsb
or
arpl
inc
ljmp
and
stc
loope
fidivrs
jno
xor
xchg
add
das
sub
pop
or
adc
mov
jne
mov
sti
addr16
lret
test
in
pop
outsl
insl
cmp
loopne
and
popf
push
mov
sbb
pop
mov
cmpl
call
out
fldenv
fcomip
xor
push
jmp
cmp
int3
aad
mov
test
mov
aas
jno
stos
ljmp
mov
mov
sub
pop
adc
ds
pop
sub
aad
xchg
mov
push
push
cmpsl
ret
cld
test
jle
mov
cmpsb
js
or
cmp
mov
orps
mov
jb
and
pop
sub
mov
cmp
into
fcoml
fistl
aad
lock
shll
add
cmp
jo
dec
frstor
cmc
popa
test
int
into
pop
adc
out
lret
cmpsb
test
ret
or
sub
mov
int3
fimuls
shl
lar
aam
xchg
testl
ficoml
test
sti
test
mov
push
cmp
insb
ja
test
rclb
inc
ss
sbb
in
xorl
je
mov
aad
cmc
shlb
jo
cwtl
mov
xchg
mov
fcmovbe
lock
push
mov
lods
pause
or
out
xor
jecxz
insl
inc
lea
cld
test
test
cwtl
invd
inc
cld
jne
aam
xchg
outsb
call
or
sbb
jno
mov
adc
mov
mov
inc
and
dec
and
loop
mov
fildl
movsb
xchg
jae
push
test
adc
add
and
xor
pop
xor
cwtl
out
jnp
add
jbe
aas
dec
rolb
loope,pn
sbb
movsl
mov
push
jnp
cmp
fstpl
fisubrl
outsb
mov
mov
pushf
and
sub
shl
xchg
jmp
inc
adc
xchg
inc
xor
push
inc
cmc
mov
enter
call
sbb
dec
out
addr16
mov
jne
jp
mov
cltd
fcoml
mov
xor
shr
addr16
imul
mov
dec
imul
xchg
jp
lds
and
leave
mov
addr16
leave
int
mov
jge
clc
push
filds
js
lret
inc
aas
mov
sbb
sub
aam
push
test
aad
ss
arpl
sub
or
cli
jb
cmp
xchg
pop
cmp
js
push
xor
in
pusha
xchg
test
xchg
sub
incl
popf
adc
jmp
jl
or
loope
add
mov
mov
adc
loope
inc
push
jne
js
or
or
sti
inc
leave
ret
xchg
nop
cmc
les
xor
rorb
insb
or
xorb
mov
pop
pop
ljmp
arpl
fnstsw
cmp
addr16
push
sub
adc
mov
push
fisubrs
xchg
sbb
inc
and
stc
loope
xchg
mov
aaa
leave
xlat
mov
pop
push
jo
out
aaa
aas
mov
inc
aad
pop
adc
cmp
xlat
adc
dec
adc
popf
cwtl
xchg
sar
cmpsl
outsl
push
flds
xor
mov
sbb
fwait
loop
xchg
jb
cmp
inc
ja
data16
inc
sbb
push
out
push
pop
cmp
xor
idivb
pop
adc
sbb
push
xlat
icebp
test
jae
aad
mov
cmp
cmp
jns
or
dec
inc
pop
dec
sbb
daa
out
inc
sbb
shlb
shll
or
cmp
ja
mov
or
cmp
movsb
push
ja
pop
pop
pop
insb
push
inc
pop
shl
and
stos
push
add
mov
dec
lds
mov
popa
mov
inc
mov
mov
dec
outsb
insb
sub
in
mov
pop
pop
dec
xor
movsb
repnz
pop
lcall
in
insl
jl
lods
lret
movsb
sbb
in
in
test
push
mov
pop
jg
mov
xchg
mov
rcrl
jmp
mov
loopne
xchg
inc
leave
loope
mov
mov
jbe
add
xor
mov
movsb
cmp
insb
imul
or
or
daa
das
je
pushl
cld
pop
fistps
mov
xchg
shr
push
mov
fistl
sbb
pop
pop
jo
pop
movsl
dec
pop
adcb
stos
stc
mov
rol
push
mov
or
mov
mov
and
pop
subb
leave
cwtl
mov
pusha
test
add
int
icebp
jp
jp
jo
std
fwait
cld
lcall
sahf
gs
jle
outsl
iret
in
outsb
lret
es
leave
cmp
ret
adc
dec
xchg
ljmp
test
xchg
test
jne
jno
cmpb
sbb
dec
cmp
stos
and
pop
mov
lahf
jae
xor
add
mov
fbld
mov
xor
inc
cmp
ljmp
xor
repz
dec
stos
into
jecxz
add
into
arpl
ffreep
iret
lea
js
sbb
mov
push
enter
fs
decb
sahf
cs
add
sub
ret
dec
dec
in
mov
sub
mov
arpl
push
ljmp
icebp
fidivl
lods
shrl
add
mov
xchg
push
cwtl
insb
mov
rolb
jg
mov
data16
mov
jne
push
stc
outsl
and
and
dec
mov
jae
mov
fstp
and
or
push
popl
aam
out
cmpsb
or
xor
sub
jb
lar
lock
xchg
jmp
cmpsl
rol
xchg
add
pusha
hlt
test
xchg
sub
clc
mov
insb
out
les
out
rolb
loop
ja
cmp
inc
and
int
imul
lods
sub
popf
lea
lds
push
out
mov
xchg
stos
pusha
loopne
mov
push
dec
mov
sbb
mov
mov
pusha
stos
xchg
lret
add
xor
xchg
loopne
orl
outsb
add
jb
mov
xlat
out
push
sbb
lods
and
popa
cmp
xchg
loop
push
ret
adc
pop
sub
out
out
xor
fldl
lret
inc
in
in
xor
add
fdiv
psrad
xchg
mov
xor
mov
jns
shrb
insb
add
xchg
test
mov
outsl
cmp
adc
sbb
cmpsb
or
sub
inc
out
jbe
or
adc
or
cwtl
and
xor
inc
xchg
push
add
and
outsl
sub
cmovle
xor
mov
cmp
jbe
subb
mov
push
popf
sub
jge
into
pop
sbb
fdivrs
ret
pop
xor
lahf
push
pushf
mov
ljmp
sbb
inc
jnp
test
fiaddl
fimull
movsl
test
out
arpl
mov
adc
ljmp
loope
adcb
inc
dec
aad
sbb
xchg
cltd
test
mov
int
dec
or
jl
cmp
aas
loopne
ja
push
sbb
fistpll
and
mov
je
cmp
xchg
push
call
jne
test
dec
stos
sahf
call
cmp
adc
pop
fwait
aam
sbb
xchg
sub
cmpb
mov
mov
daa
loope
pop
lock
dec
mov
mov
imul
push
pusha
rolb
aam
jle
into
enter
popa
out
fs
mov
aas
sub
or
mov
add
in
fdivl
push
out
enter
lret
pop
mov
and
cmp
subb
popf
hlt
dec
mov
pop
shlb
aaa
cmp
lret
or
into
mov
pop
cmp
push
cltd
add
sbb
dec
in
aas
fwait
push
jne
insb
fisttps
adc
inc
sahf
les
data16
jno
mov
in
aas
sbb
loopne
and
test
jns
stos
xchg
xor
dec
dec
add
andl
or
aas
out
popa
in
lods
cld
xchg
fimuls
lahf
notl
imul
push
pop
dec
mov
xchg
in
insl
imul
cmp
cltd
xor
jl
andb
pop
cmp
cmc
js
dec
jg
mov
cmpsb
mov
mov
and
int3
pop
mov
push
cltd
sbb
in
notb
dec
mov
cmp
pop
cmp
sahf
cmovp
or
cmp
jecxz
popa
sub
pop
lock
push
das
mov
cmpsl
dec
mov
out
popf
test
aas
jne
lcall
mov
push
sub
pop
addr16
sbb
dec
aam
andl
mov
mov
push
outsl
push
xor
leave
dec
adcl
xorb
pop
jmp
les
shlb
imul
xchg
cs
sub
stos
xchg
divl
fnstsw
and
xor
inc
nop
inc
enter
inc
or
cmp
jbe
add
xchg
addr16
pusha
xchg
mov
push
fcmovu
jl
nop
dec
popa
sahf
cltd
add
cs
push
into
mov
arpl
shrl
cwtl
outsb
sti
sbb
add
sub
jmp
pusha
loop
jno
mov
add
or
ret
pop
dec
cmp
or
stos
sub
mov
fisubrs
icebp
add
pop
mov
push
cmp
addr16
mov
test
sbb
scas
xlat
or
xor
mov
fistl
test
lret
insl
addb
push
pop
je
mov
sbb
aas
repnz
sbbb
mov
andb
lock
xchg
das
outsb
xchg
mov
push
fcompl
mov
in
int
mov
jo
cmp
mov
mov
cltd
push
orl
fdivr
jo
leave
adc
inc
dec
icebp
jle
aas
cwtl
cmp
popa
xchg
dec
dec
loope
and
xor
pop
or
mov
into
aad
int
mov
pop
xorl
or
aaa
dec
mov
inc
movsl
pop
mov
jecxz
cmp
shrb
in
inc
jno
fwait
scas
pop
mov
pop
repnz
pop
popf
mov
or
aad
xchg
mov
or
repnz
popa
mov
xchg
iret
mov
outsb
icebp
dec
jle
inc
sub
pop
xor
sub
cmp
xor
imulb
mov
aas
mov
outsl
mov
and
and
pop
mov
rcrl
lahf
and
out
andl
lcall
incb
mov
inc
cmp
pop
rcr
sbb
pop
out
mov
mov
nop
xchg
sbbb
and
mov
cmp
pop
std
cmp
dec
xor
faddl
pop
imul
ja
ret
je
xor
ret
clc
pop
repnz
xor
loopne
xchg
aam
mov
mulb
mov
add
add
push
mov
test
fidivs
push
or
addr16
pop
daa
jl
loope
int
lret
dec
xor
mov
or
fisubrs
cltd
cmp
jne
push
lods
dec
mov
sub
and
xchg
dec
or
mov
sub
pop
pop
insl
xchg
inc
xchg
dec
add
jle
shlb
and
dec
mov
aam
mov
mov
out
fyl2xp1
outsb
add
sbbl
loop
movsb
mov
sbb
pusha
xor
push
jp
hlt
gs
pop
fdivrs
out
scas
call
pop
jmp
movsl
inc
icebp
lcall
incb
push
shlb
add
or
xchg
mov
js
pop
pop
aas
and
mov
fwait
sub
loope
pop
aaa
loop
push
push
cltd
mov
mov
add
add
dec
xor
xchg
pop
jnp
push
fwait
leave
and
fdivr
and
mov
inc
sbbb
cld
in
rorl
repnz
dec
mov
test
lcall
push
or
in
pop
or
cmp
movsb
js
lcall
or
fstps
cmp
loop
js
pop
add
iret
fimuls
ret
push
call
iret
mov
loopne
aad
add
mov
mov
push
dec
cmp
addr16
sti
leave
push
mov
sub
pushf
add
je
aam
push
mov
push
movsb
out
xchg
popf
lahf
sub
mov
aad
outsb
add
lods
pop
inc
loop
push
pop
imul
lods
push
push
or
or
sbbl
fs
dec
dec
cmc
pop
hlt
cs
or
js
sub
dec
jnp
jle
push
cmp
popf
or
mov
sub
inc
in
shll
addr16
cmc
mov
adc
dec
lds
jp
inc
cmpsb
imul
call
adc
jae
add
loopne
and
xlat
leave
fstps
insb
lods
jg
mov
outsb
outsb
xor
lahf
repnz
repz
or
cltd
out
movl
ret
dec
fidivl
push
ret
push
sbb
enter
jp
pop
out
push
sub
sbb
ret
pop
loopne
cld
addr16
and
imul
sub
daa
outsl
jge
test
add
pop
scas
push
shrb
enter
rcrb
mov
and
gs
or
dec
in
ds
out
ss
adc
ds
pop
mov
sahf
cmp
into
out
jo
in
test
movsb
mov
aaa
mov
shlb
lds
pusha
lahf
sbb
sahf
clc
cmp
out
sub
ret
bound
leave
inc
clc
cmp
movsl
insl
sbb
les
cli
push
fidivl
xchg
or
mov
add
dec
sub
dec
push
aaa
mov
mov
aam
data16
popf
or
mov
test
sbb
mov
sbb
jo
pusha
pop
scas
inc
gs
mov
popa
lock
es
dec
into
je
jl
mov
xchg
mov
sbb
andb
push
xor
sub
dec
les
cmp
add
paddsb
mov
cmp
push
in
xor
orl
pushf
je
pop
popf
bound
sub
cmp
sub
dec
mov
mov
jecxz
lods
push
insb
aaa
dec
imul
adc
dec
jecxz
inc
adc
cli
add
xchg
push
lcall
int3
jne
or
jmp
cld
sub
inc
mov
ds
aam
mov
sbb
mov
push
jle
mov
shlb
and
push
push
stc
push
ss
xlat
pop
and
mov
cs
inc
xchg
sub
adc
daa
dec
dec
pop
movsb
mov
outsb
mov
ret
insb
mov
in
cmp
sti
or
jmp
adc
lods
dec
leave
int
call
jg
add
jno
sub
fs
mov
dec
or
jle
enter
fiaddl
cli
insb
jge
jo
jae
and
aaa
pop
das
adc
xor
stc
lcall
adc
pop
shlb
jns,pn
mov
and
es
mov
xchg
pop
jae
shl
and
adc
addr16
test
mov
fwait
xchg
and
push
lret
lahf
clc
push
daa
in
mov
icebp
mov
jae
xchg
adc
xor
mov
hlt
fwait
add
xchg
push
popa
and
xchg
xchg
mov
insl
into
xor
out
sbb
xor
push
dec
lock
cmpsb
adc
mov
lods
outsl
mov
dec
je
ljmp
call
xor
pop
testl
mov
mov
outsb
push
adc
push
fisubrs
ret
fdivrs
shrl
jmp
push
scas
cmp
fistpl
push
cwtl
fcomip
jge
push
xor
and
sub
pusha
dec
xchg
fs
mov
pop
mov
xchg
jmp
cmp
cmp
lcall
fs
jge
push
imul
scas
stos
jge
mov
addb
or
ret
ljmp
outsb
int
lods
pop
sub
test
outsl
sbb
xchg
push
in
jo
mov
or
test
sbb
std
fucomi
cmp
mov
sub
loope
outsb
mov
sbb
repnz
sti
cmpsb
sub
les
push
or
jb
and
jne
xchg
pop
mov
or
and
movb
push
mov
adcl
imul
scas
call
and
pusha
jmp
pop
jecxz
aam
push
out
xor
xchg
and
xor
xor
mov
mov
data16
lods
imul
push
jge
out
pop
xchg
sub
dec
jne
jns
loope
inc
ds
xor
or
lods
std
mov
in
dec
inc
fs
in
outsl
shlb
ljmp
fidivl
leave
or
mov
sub
or
add
push
jle
test
dec
inc
push
shrl
or
dec
xor
notl
popf
jp
xchg
mov
mov
nop
icebp
popf
pop
push
pop
aam
mov
adc
or
je
xchg
push
mov
sub
ret
cltd
add
test
sti
and
xlat
and
repnz
mul
jl
pop
and
or
cmp
push
outsb
xchg
and
mov
and
cmp
jl
cmpsb
xchg
and
jl
test
mov
dec
cmp
mov
dec
jle
jnp
negl
mov
mov
filds
jne
test
mov
fdivl
inc
arpl
mov
jge
fisttpll
push
adc
xor
das
les
cmp
icebp
pop
pop
cmp
int
dec
call
dec
popf
mov
shrb
sbb
inc
imul
divb
xor
mulb
add
sbb
fcoms
outsl
loop
mov
addl
lods
cwtl
incb
fs
jno
pop
icebp
mov
sti
rcll
bnd
stos
jb
out
sub
jle
aad
push
movsb
daa
cmp
pop
sahf
lods
xchg
dec
inc
and
movsl
sahf
push
fildl
cmp
lock
jae
adc
sbb
rcrl
decb
cmpsl
cmp
scas
xlat
fistl
cld
mov
mov
out
dec
mov
inc
shrd
lock
scas
jge
out
loopne
std
push
pop
mov
sahf
sahf
hlt
mov
or
je
jge
cmpsb
nop
xor
std
aas
subb
out
add
in
mov
pop
sbb
xchg
sbb
cmc
dec
int3
ret
mov
enter
cs
addr16
inc
inc
pop
inc
in
ljmp
bound
cmp
or
leave
bound
sub
mov
loop
rclb
adc
loopne
mov
sbb
inc
scas
jns
insl
test
arpl
mov
sub
fsubl
ret
jo
adc
inc
outsb
push
je
mov
and
clc
stos
cmp
pop
push
pop
addr16
jbe
clc
cs
es
aas
outsl
push
or
aaa
hlt
sbb
clc
out
mov
inc
dec
sub
aaa
push
jne
mov
or
xchg
and
cli
mov
mov
sub
out
or
cwtl
cmp
fildll
push
andb
bound
out
sahf
fstps
and
pop
mov
mov
in
jno
push
add
mov
ljmp
adc
or
cmpsl
fisttpll
mov
dec
jmp
or
or
sbb
fwait
out
jmp
clc
cmp
js
cmc
jle
lret
rorb
popa
and
xchg
inc
pop
or
jnp
push
sub
xor
nop
icebp
adc
xor
mov
push
and
mov
ja
push
out
clc
popf
bound
fcompl
and
xor
jp
sbb
movsl
cmp
cmp
repz
fisubl
movsl
out
fwait
repnz
or
mov
add
fcmovb
testb
fsubs
or
cmpsl
popf
loope
lret
mov
mov
inc
sti
fwait
out
stos
inc
fsts
push
movsl
in
xor
mov
rolb
dec
std
mov
movl
sarb
aad
inc
mov
stc
xor
dec
sarb
xlat
mov
jmp
jbe
sti
shrb
pop
pop
es
push
mov
fs
lret
ljmp
cltd
shlb
stc
out
dec
ds
je
lea
arpl
pop
jne
mov
out
xchg
sub
sbb
pop
inc
or
jge
js
mov
jl
push
aaa
xorl
fstps
jno
aam
nop
sbb
ret
loopne
add
shll
or
scas
aas
pushf
cltd
xor
push
ss
imul
iret
or
pop
movsb
addr16
inc
xor
or
rcrb
pop
data16
je
jge
stos
xlat
test
adc
mov
mov
call
ds
mov
repz
shrb
xchg
sbb
sbb
ret
sub
stos
repnz
adc
ja
inc
adc
add
and
dec
fidivl
js
out
or
and
mulb
std
or
push
xor
mov
xor
or
outsb
mov
jae
test
cmp
repnz
push
fwait
bound
and
cmp
fistl
orl
test
inc
mov
nop
mov
xor
cmpsl
rolb
popf
inc
sbb
xchg
cmp
imul
jae
aad
mov
test
jns
xor
add
sbb
ja
xor
mov
jbe
or
push
subb
sbbl
mov
pop
lret
pop
jne
jp
cmp
lods
ret
or
je
repz
pop
movsb
test
bound
ljmp
aaa
in
push
push
pop
mov
icebp
sti
dec
cmpsb
sbb
sub
dec
and
pop
stc
adc
stos
test
sbb
or
test
jbe
in
and
cltd
xchg
dec
shlb
out
ljmp
js
add
repnz
cmc
vmovhps
xlat
push
mov
xchg
cwtl
subl
pop
jbe
sbb
mov
and
popf
lods
cmp
pushf
xorb
test
js
negl
xchg
xchg
popa
push
cmpsb
xchg
mull
lock
sbb
mov
int3
mov
mov
and
and
sahf
inc
mov
into
mov
mov
push
popf
xlat
outsb
or
inc
ss
add
push
or
pop
test
ret
mov
je
outsb
fiadds
mov
std
inc
repnz
xchg
lods
xchg
jbe
mov
xchg
xchg
mov
inc
jns
mov
data16
in
call
lds
in
lods
or
jnp
lods
or
std
mov
aas
mov
cmc
dec
push
mov
iret
pop
pop
iret
sbb
mov
data16
mov
xor
xor
out
lods
mov
pop
movsl
cli
sti
cmp
je
pop
cmpsb
outsl
mov
test
rcrl
pop
cmp
xor
adc
pop
xlat
and
lcall
shrl
or
xor
outsl
and
pop
insb
in
jne
jg
adc
inc
cwtl
dec
cmp
outsl
frstor
testb
and
test
jne
and
push
fbstp
mov
aam
xchg
push
cs
sbb
jae
lea
imul
sbb
jg
sbb
jle
mov
ret
add
pop
push
cmpsl
dec
mov
shlb
sub
push
cmp
lods
jg
test
cmc
aas
jecxz
outsl
cmp
or
jle
inc
cli
cmpsl
mov
jl
out
ss
xchg
fnstenv
test
clc
mov
sbb
mov
out
loope
pop
into
cltd
ret
aas
sbb
imul
xchg
push
stos
call
lcall
cwtl
jb
das
fwait
cs
in
jmp
xchg
adc
sbbl
mov
xchg
sbb
mov
and
dec
in
sub
cmp
mov
push
jle
nop
lret
add
div
mov
cmp
ljmp
ds
lock
push
mov
push
mov
adc
je
cld
pop
je
fistps
cmpsl
inc
inc
sub
int3
icebp
insb
enter
sub
add
repz
push
frstor
xchg
idivl
and
lds
xchg
pusha
ret
dec
shlb
pop
lods
jp
jns
dec
xchg
cmpsl
lret
jge
jecxz
inc
roll
jmp
mov
or
push
sub
fsubl
sbb
jae
andb
mov
push
icebp
xchg
mov
add
xchg
and
mov
inc
jne
repz
dec
push
sbb
popf
xor
scas
loop
pop
shl
xor
scas
adc
and
fsubl
mov
sbb
lcall
jae
xor
bound
stos
adc
sbb
lea
iret
mov
fildll
incl
daa
outsb
mov
xor
pop
loope
call
fmull
lds
sbb
cmp
gs
mov
push
aaa
mov
mov
sbb
sti
in
mov
xchg
xor
cmp
jl
jne
inc
push
cmp
test
xchg
xchg
jae
xor
scas
ds
lods
or
sbb
xchg
loopne
cmp
mov
arpl
cmp
add
mov
pop
in
cli
or
mov
or
pop
xor
fistpl
and
hlt
test
dec
pop
test
test
jns
ret
daa
mov
test
out
push
icebp
jne
mov
mov
dec
pop
fucomip
mov
xor
xor
out
sbb
jbe
xor
bndstx
sub
xor
dec
fiaddl
sub
push
adc
and
xchg
andl
sbb
push
adc
into
fadds
fst
sbb
inc
mov
push
gs
pop
fiaddl
or
fidivs
sub
adcl
jl
pop
add
sub
add
testl
xlat
jg
push
inc
cmp
leave
mov
or
int
fldt
ljmp
jne
insl
jge
dec
and
not
stos
inc
pop
sub
shrb
jp
stos
stos
push
dec
dec
add
cwtl
aam
inc
mov
mov
xor
inc
xor
aad
add
lret
mov
fs
pop
inc
icebp
adc
jmp
pop
mov
aad
fcoms
dec
pop
subl
orl
sub
mov
mov
inc
xchg
sub
dec
push
jno
test
or
mov
test
cmp
icebp
repnz
xchg
and
ss
push
push
negl
jno
shlb
push
das
cmp
sti
and
fiadds
xor
pop
inc
enter
push
out
xchg
repnz
adcb
jo
gs
adc
lods
jnp
in
test
cmc
or
insb
xor
popf
int3
mov
push
xor
mov
push
push
fcmovnb
cltd
mov
ds
dec
cli
test
ss
and
fstl
sub
pop
sbb
add
popf
mov
ljmp
mov
add
inc
push
mov
insb
mov
shlb
fs
add
sti
clc
enter
daa
notl
or
leave
mov
imul
cli
cmp
cs
adc
ja
gs
adcl
jle
lds
ds
xchg
mov
xor
nop
pop
movl
push
sahf
inc
arpl
fs
ja
sub
mov
stc
orb
inc
arpl
call
pop
scas
or
aam
in
xchg
xchg
iret
arpl
lods
xchg
sbb
pop
mov
xor
jg
arpl
loopne
add
imul
inc
xchg
sbb
lods
rorl
loopne
imul
push
cmpsb
fimull
pop
mov
or
push
adc
push
push
pop
enter
jnp
in
sbb
mov
dec
rorl
xor
inc
mov
lret
adc
cmp
bswap
cmp
push
lea
rcl
and
out
ds
mov
jo
xchg
xor
test
bound
inc
cwtl
lock
xor
xchg
sub
out
jnp
push
das
mov
sbb
test
pop
cmp
lea
cmp
imul
jp
sbb
fdiv
or
mov
xor
lret
add
or
cmp
arpl
ss
sbb
aaa
xchg
cld
add
push
cltd
dec
fstpl
adc
scas
pop
xchg
sub
iret
shll
out
sbb
dec
push
xlat
outsb
inc
stos
clc
adc
push
cmc
xchg
test
testb
lret
adc
cli
inc
xor
or
inc
mov
ljmp
jno
sub
push
mov
and
lcall
addl
jg
scas
dec
mov
outsl
jae
call
subl
adc
and
jle
movsl
pop
ret
lock
pop
pop
xor
mov
enter
repnz
je
ljmp
stc
test
int3
rcrl
jl
rcll
sub
mov
xchg
mov
in
je
jle
dec
add
add
add
jp
and
push
jbe
push
pop
pop
inc
loope
jne
dec
cmc
mov
jp
repnz
adc
sbb
mov
mov
ds
repz
and
sti
cli
jae
test
and
mov
ss
cwtl
jno
lret
mov
je
into
iret
repnz
mov
nop
in
or
mov
mov
mov
mov
clc
push
sub
add
dec
pop
adc
xchg
mov
pop
push
sbb
xchg
mov
movsl
inc
pop
nop
mov
cmp
push
jge
dec
add
sub
pop
mov
push
inc
aaa
pop
inc
cmp
pop
cmp
clc
cmp
mov
xchg
inc
ss
cmp
loop
int3
add
rcrb
mov
and
mov
es
addr16
ljmp
addr16
aas
scas
mov
pop
shll
dec
mov
repz
dec
fsubr
inc
dec
push
jb
icebp
cmp
jb
dec
insb
cmpsl
cmp
and
cltd
stos
bound
xor
les
into
enter
cwtl
dec
push
xor
stos
cmpsb
inc
inc
fdivs
mov
outsb
shlb
div
cmc
or
mov
addr16
jne
call
sub
jnp
fs
push
movsl
es
sti
and
pop
mov
push
addr16
xchg
dec
loop
dec
jl
clc
mov
mov
adc
or
mov
xchg
mov
movsl
cmp
cmp
inc
jecxz
lcall
pushf
call
cmp
mov
pop
pushf
imul
and
sub
push
sub
cmp
or
lahf
push
lret
dec
xlat
sbb
pushf
mov
sub
mov
sbb
sbb
rol
pop
aas
xchg
dec
adc
pop
es
test
cmp
push
stos
xchg
mov
push
sub
pop
sbbb
xor
jp
hlt
push
adc
and
add
fnstenv
rclb
xor
loopne
dec
xor
shlb
xchg
mov
mul
jns
in
int
mov
inc
and
rcrb
arpl
scas
mov
je
fsubs
adc
loope
jnp
mov
or
fsincos
pop
adc
inc
xor
outsb
outsl
pop
push
sbb
ds
fsubr
fldt
mov
or
testl
or
lods
inc
ret
sub
lods
inc
push
mov
sub
mov
dec
sub
add
and
repz
lock
xor
cld
pushf
mov
insl
sub
pop
mov
shlb
insl
insb
xchg
xchg
mov
scas
inc
jg
addr16
push
addr16
xchg
or
ja
adc
add
sub
call
call
bsf
subl
fnstenv
andl
mov
decl
cmp
hlt
shll
pop
lret
mov
icebp
and
and
lods
imul
xor
and
cmc
dec
cmp
jnp
jmp
mov
pop
hlt
jle
mov
sbb
cmp
clc
in
test
xchg
or
sub
shll
sub
mov
xor
into
mov
nop
pop
adc
pop
hlt
xor
push
jnp
mov
aad
pop
movsb
pop
xchg
lock
cwtl
cs
pop
mov
hlt
int3
pushf
jae
mov
mov
mov
das
repz
cs
xor
in
xor
cmp
pop
lea
loop
jl
je
mov
cmpsl
push
mov
adc
xor
lds
jno
pop
sub
xchg
scas
fs
rcr
jbe
jo
pop
pop
movsl
push
repnz
xchg
test
xchg
flds
loopne
add
cwtl
sub
fists
xor
xchg
xchg
hlt
xor
add
add
movsb
mov
xlat
test
lods
bound
mov
jb
push
inc
jge
dec
test
mov
data16
dec
dec
das
shrl
sbb
addr16
out
into
out
cld
bound
shrl
adc
or
pusha
rcrl
aam
std
jmp
mov
aas
cwtl
into
flds
sti
sub
aam
sub
xor
or
jle
test
jnp
gs
fldt
imul
jg
mov
mov
sbb
or
xchg
fiadds
sbb
hlt
andb
cmp
push
mov
inc
sub
dec
stos
inc
jg
vcvtdq2ps
jbe
jl
push
pushf
repz
popa
fmuls
clc
std
xchg
stos
stc
inc
ret
jnp
or
cltd
mov
mov
psadbw
daa
clc
xor
loopne
hlt
lcall
mov
pop
cmp
jmp
fs
xchg
or
loopne
mov
les
test
fidivs
xchg
push
cli
push
push
daa
dec
fists
cmpsl
ret
jno
xchg
cmp
push
daa
pop
mulb
fcom
rorb
jle
cmp
dec
insl
and
cmpsl
adcb
push
das
push
add
scas
and
jo
dec
fs
add
sub
pusha
das
dec
loopne
xor
mov
mov
fst
or
lods
clc
fs
sbb
and
xor
sbb
paddsw
push
cmp
aam
pop
mov
inc
lods
aas
fidivrl
rcr
rolb
jnp
xor
inc
pop
cmp
cmp
and
sub
cmp
xchg
rclb
mov
divb
pop
mov
push
jge
popf
jo
mov
jecxz
add
add
mov
cmp
insb
jmp
test
pop
dec
daa
xorb
aad
test
xor
loope
scas
pop
hlt
loopne
imul
mov
and
mov
fs
negl
mov
xchg
dec
ror
pop
cmp
pop
insb
pop
and
jns
popa
stos
cmp
jns
adc
shrb
lods
sbb
xor
out
cld
mov
popf
mov
hlt
xor
push
jne
or
cmp
sbb
lods
mov
add
pop
sti
dec
jnp
cld
aas
pop
mov
mov
xchg
out
scas
dec
loop
jge
add
ja
cwtl
in
lret
sub
arpl
push
mov
jb
roll
aaa
shrl
push
lds
or
cli
cmp
outsb
pushf
out
xchg
and
xor
fldcw
subl
nopl
xor
cmp
sbb
mov
call
push
mov
iret
inc
cld
mov
mov
sub
push
flds
icebp
mov
gs
xorb
inc
fidivl
inc
fdivs
xchg
icebp
call
dec
pop
test
cmpl
clc
divl
or
pushf
push
lods
int
sbb
pushf
sub
int
in
sbb
jl
cmp
mov
or
lret
cmp
dec
movsl
add
jmp
out
jo
add
xchg
lock
aad
dec
dec
mov
add
jle
adc
mov
xorb
mov
xchg
xchg
daa
inc
mov
cmp
out
leave
pusha
and
and
and
pop
imul
test
mov
sahf
xor
mov
dec
or
pop
pop
jno
sarl
in
les
sbb
aaa
xor
jno
adc
aam
xor
and
pop
cmc
mov
xchg
gs
movsl
negl
pop
outsl
mov
shlb
pop
les
mov
pop
sub
jle
mov
je
stos
add
lds
xor
mov
sub
cmp
mov
lods
loope
sbb
cli
jno
sti
sahf
and
and
dec
mov
push
stos
mov
inc
outsb
mov
imul
sbb
subb
ret
in
or
pop
xor
cld
mov
sbb
mull
cmp
outsl
jnp
or
fwait
out
insb
popf
data16
adc
test
test
mov
shlb
pop
dec
je
and
arpl
push
into
cs
sub
pushf
out
cli
insl
roll
cmp
lock
fnstcw
and
fldl
rcrl
ds
xlat
xor
and
pop
lock
fbld
cmp
mov
xor
cmp
push
movsb
out
pop
cmpsb
int3
jl
jmp
cmpsb
xor
pusha
push
xor
jno
aaa
call
nop
lahf
ljmp
pop
sarb
in
ret
outsl
xchg
xchg
popf
test
mov
and
das
xchg
test
cmp
push
and
sbb
mov
pop
mov
lock
inc
scas
mov
cmc
dec
popa
shll
jg
push
adc
cmp
gs
push
popa
push
adc
mov
mov
sbb
ljmp
pop
or
jb
and
mov
nop
enter
clc
dec
adc
in
add
and
data16
xchg
cwtl
adc
jmp
gs
dec
dec
in
stc
ror
or
test
fwait
stc
sub
pop
dec
mov
push
push
push
xor
pop
mov
into
xchg
jno
mov
movsb
popa
jnp
stc
pop
push
jge
test
xchg
mov
jecxz
int
push
adc
icebp
mov
ret
enter
pop
cmp
icebp
lret
leave
iret
es
push
arpl
xchg
push
xchg
pop
cmp
repnz
lock
cmpsl
mov
mov
jle
mov
xorl
js
lods
in
pop
push
dec
out
fadds
mov
js
jecxz
repnz
xchg
xchg
scas
les
in
movsl
mov
jg
pop
scas
popa
and
push
sub
mov
xor
adc
fidivs
test
shl
mov
mov
imull
mov
cwtl
cmp
xorl
xchg
and
jmp
std
repz
dec
add
inc
adc
and
cmp
ds
xor
adc
push
lods
add
xor
test
shl
mov
mov
xor
jp
sub
jno
test
pop
je
mov
arpl
and
outsl
add
adc
mov
iret
fstpt
xlat
aaa
adc
sub
gs
jns
shlb
aam
loopne
add
cmp
push
mov
movhps
movsl
es
mov
inc
movsb
or
mov
xor
cmp
dec
enter
xchg
out
mov
roll
lcall
gs
xchg
xchg
scas
aaa
pop
xor
int3
es
xchg
inc
fstpt
pop
loopne
mov
repnz
xor
or
or
jne
pop
inc
xor
add
inc
test
call
inc
cltd
test
or
imul
data16
pusha
dec
rorb
insb
jmp
sbb
lds
cmp
fidivs
mov
int3
mov
xor
xchg
pop
sub
insl
push
mov
into
pop
and
lret
cwtl
notb
xor
xor
pop
in
xchg
stos
inc
mov
sbb
jmp
jo
imul
sbbb
cmpsb
shr
ret
scas
cs
nop
shlb
shrb
ss
loopne
lahf
mov
cs
cmpsl
scas
add
mov
jne
push
scas
mov
cmc
xchg
jp
fsts
movsb
lds
inc
jbe
xchg
sub
scas
mov
cmp
push
shlb
out
inc
sub
adc
dec
dec
mov
dec
xlat
fmuls
cld
jg
cli
dec
pop
and
jnp
lcall
add
and
inc
lret
adc
lret
cmp
jmp
xchg
sub
add
xor
push
inc
xlat
xchg
sub
jmp
cltd
pop
dec
xor
mov
fisttps
adc
mov
pop
data16
shlb
push
dec
mov
clc
xor
shll
sbb
dec
ljmp
ficoms
cmp
hlt
mov
bound
cmp
push
cltd
and
in
xchg
sub
int3
stos
stc
js
cld
outsb
mov
sub
mov
mov
out
incb
jge
adc
mov
push
inc
or
cmpl
lods
inc
imul
gs
fmul
pop
push
sub
pop
mov
xchg
lcall
mov
inc
int3
dec
cmp
idivl
inc
lcall
mov
mov
adc
and
stos
lahf
lods
outsb
into
jne
sbbl
add
inc
sub
adcl
mov
pop
loopne
vaddps
loope
sbb
pop
scas
jge
icebp
mov
sub
jo
popf
sub
aam
test
and
popa
or
test
mov
mov
jnp
sbb
xchg
rcrl
sbb
shrb
sbb
stc
jl
mov
xor
mov
sbb
sbb
xchg
insb
out
and
mov
xchg
inc
push
popa
add
mov
or
or
and
loop
xor
mov
fdiv
xor
cmp
sahf
dec
pop
xlat
cmc
lea
es
cmp
imul
imul
add
sbb
loopne
arpl
aad
stos
mull
flds
adc
cmp
pop
ret
jns
stc
int3
dec
and
xorps
sarl
test
lahf
push
push
in
xchg
push
xor
jecxz
stc
sbb
lds
dec
xchg
shll
push
add
cmp
js
push
ljmp
call
push
or
lea
mov
mov
sbb
pop
pop
leave
fnstcw
mov
es
mov
outsb
sbb
add
mov
sbb
xchg
scas
cmp
mov
mov
mov
mov
dec
mov
cwtl
out
fs
mov
imulb
jg
sar
dec
mov
xchg
pop
sti
rol
jl
loop
xor
xor
jmp
inc
sbb
rclb
idiv
mov
shll
jns
adc
mov
mov
iret
hlt
mov
mov
or
cmpsl
ret
lahf
sbb
add
mov
nop
daa
mov
shrl
sahf
pop
imul
shlb
and
pop
loope
stc
adc
iret
and
inc
inc
fdivl
stos
push
sub
and
jle
mov
and
rcrl
mov
mov
sub
lock
mov
add
leave
rcrb
mov
outsb
cltd
xchg
fwait
mov
shrb
into
int
cmp
cmpsb
aad
push
lock
ja
inc
jle
bound
outsb
test
das
into
cmp
mov
jp
lds
test
dec
dec
mov
pop
mov
iret
jle
repnz
pop
repz
dec
dec
sub
sbb
int3
jl
outsl
adc
push
mov
xor
xor
xor
sub
fadds
outsl
shrl
or
add
mov
mov
and
mov
cmp
jns
xchg
or
xor
testb
and
adcb
pop
sub
es
mov
inc
ljmp
outsb
sbbl
aad
repz
sbb
hlt
mov
das
lds
inc
dec
push
js
ljmp
movb
out
inc
xor
div
aam
push
xchg
inc
xlat
xor
movsl
cmp
push
inc
mov
xor
xlat
arpl
or
mov
mov
and
into
jne
clc
sub
psraw
mov
outsl
adcl
xor
in
push
xchg
inc
pop
dec
sub
leave
pop
jns
and
mov
dec
add
xchg
xchg
xchg
add
xchg
pushf
cmp
push
jl
adcl
pop
movsl
lcall
inc
data16
insb
push
jne
cmovb
lock
ds
pop
arpl
out
sbb
xor
dec
sbb
popf
jb
dec
pop
out
xor
in
xor
in
bnd
gs
push
push
xor
mov
jl
jnp
mov
insl
add
or
js
cmp
iret
mov
stc
mov
lcall
pop
out
xchg
mov
mov
push
push
push
sbb
les
and
sub
jno
std
pop
mov
out
loope
ja
mov
pop
push
je
xchg
xor
xchg
jle
test
inc
outsb
add
dec
movsl
aas
fdivrs
sub
and
lock
inc
sbb
out
pushf
mov
pop
push
sub
cwtl
lcall
ret
enter
jbe
push
test
jno
xor
and
adc
pop
fistpl
lods
xor
sub
sbbl
dec
fnstenv
test
adc
mov
cld
xor
ret
clc
lcall
push
sbb
jae
insl
xchg
dec
vsqrtsd
xor
in
les
and
mull
mov
xlat
mov
adc
xchg
adc
mov
test
cwtl
ffree
pop
cmpxchg
xchg
mov
mov
inc
dec
add
dec
ficoms
xor
mov
sub
dec
push
dec
pop
jg
call
jno
scas
sahf
fdivrl
iret
mov
sub
fcoms
xadd
jl
ret
push
shrl
mov
icebp
cwtl
in
push
push
clc
jne
inc
cmpsl
sbb
sub
outsb
add
lods
sub
fnsave
cltd
xor
jno
inc
pushf
scas
adc
add
je
loop
imul
pop
mov
loope
inc
fimuls
sbb
rcl
dec
push
test
xor
pushf
lods
pusha
push
mov
call
mov
ljmp
inc
add
lock
push
jne
inc
lock
lcall
inc
xchg
mov
xor
insl
xchg
fadds
mov
inc
inc
pop
mov
and
subl
or
lea
mov
pop
sbb
jmp
popf
jns
imul
aas
push
and
mov
mov
mov
jg
mov
mov
mov
add
sub
mov
fcmovbe
jo
mov
lea
subb
sub
mov
mov
push
mov
xor
scas
cmp
xchg
in
pop
lcall
cwtl
jne
add
mov
jp
and
aad
js
pop
lcall
test
inc
or
push
out
shll
lods
and
test
sub
cwtl
das
or
mov
cmp
adc
xor
out
jae
pop
push
mov
jmp
pusha
rolb
and
push
loop
or
movsl
test
outsb
repnz
xchg
adc
mov
dec
out
inc
fmul
in
lret
sbb
fdivrs
lcall
and
jo
sub
sub
mov
test
xor
xor
fnsave
inc
pop
les
and
hlt
inc
cmp
iret
push
inc
pop
or
push
cmpsb
pop
sub
mov
dec
sub
into
xorb
iret
mov
std
aam
ljmp
sub
cmpsb
stos
stc
shrb
jnp
jbe
dec
pop
xchg
out
adc
add
in
sbb
lods
mov
js
std
cltd
popa
test
or
je
push
sahf
sub
leave
dec
add
int3
mov
adc
pop
xlat
mov
outsl
mov
pop
je
loop
mov
leave
push
adc
jns
jb
pop
inc
loope
xor
cwtl
sbb
out
test
int
ds
and
and
xchg
mov
popa
push
popf
xchg
pusha
cmp
jo
push
push
dec
sub
iret
or
xchg
arpl
shrl
outsb
pop
jp
out
jmp
inc
jbe
mov
push
mov
jle
inc
out
sbb
mov
les
data16
dec
je
dec
scas
pop
stc
or
cmp
mov
ret
adc
jg
cli
out
shl
roll
aas
rcrb
cmc
nop
mov
push
cltd
pop
dec
push
and
aad
mov
ljmp
mov
xchg
mov
fadds
mov
pop
mov
cmp
sub
dec
push
mov
ja
lods
mov
add
dec
ficomps
std
dec
in
jl
mov
inc
insb
ret
cwtl
push
pusha
iret
ja
dec
loope
cwtl
push
xor
sahf
test
mov
adc
lcall
cwtl
das
mov
addb
cli
insl
ret
sbb
or
push
cmpsb
test
aad
outsb
outsb
mov
mov
and
mov
jl
inc
or
imul
pop
and
stos
push
int3
sahf
dec
lock
sub
fmull
mov
or
stc
adc
fwait
data16
dec
pop
mov
cmp
or
dec
jle
sbb
in
sti
sub
repnz
iret
lods
out
rorl
xor
shlb
pop
aas
add
movsl
add
sub
pop
pop
punpcklbw
adc
sbb
mov
dec
call
mov
xchg
test
push
mov
add
mov
push
xchg
jmp
lds
pushf
out
xlat
sub
cmc
nop
cmp
xchg
scas
mov
jne
jb
sub
jnp
or
pop
sbb
lock
leave
mov
icebp
test
in
adc
pop
out
pop
es
push
test
jae
xor
xchg
fs
mov
iret
xchg
mov
int
cmpsl
mov
imul
push
mov
xor
sbb
mov
cmpl
push
dec
push
in
lock
sub
add
push
sahf
push
out
iret
bound
test
xor
or
pop
shrl
repnz
adc
mov
outsb
data16
xchg
mov
jbe
xchg
cmpsb
das
inc
pop
jnp
jge
push
push
popf
jne
in
leave
nop
shrb
stos
call
push
jmp
imul
gs
sub
mov
mov
jo
sahf
sbb
es
out
push
dec
xchg
out
pop
inc
or
or
lea
pop
adc
popa
fidivs
sbb
sbb
push
test
mov
out
cwtl
mov
cmp
sub
and
sbb
fidivs
mov
fisubs
cli
ljmp
jne
js
push
ret
sub
and
pop
repz
jae
adcl
cmp
adc
inc
add
aaa
nop/reserved
mov
mov
or
lods
push
mov
call
xchg
dec
shlb
push
cmpsl
in
cwtl
inc
stos
mov
mov
fldt
xchg
out
stos
adc
fcompl
mov
dec
stos
cmpsl
push
sub
mov
mov
fidivrl
dec
cmp
xor
pop
or
out
cmp
test
sbb
jg
jge
jmp
cmp
cwtl
test
mov
adc
lds
push
adc
test
lods
cmp
cli
addl
cmp
xchg
outsb
pop
dec
cmpsb
les
sahf
sub
add
xor
fisttpll
inc
mov
ja
iret
int
loopne
adc
sub
fidivrs
pop
stos
in
pop
jecxz
pop
rdpmc
ret
cmp
into
ret
js
repz
in
ret
roll
dec
mov
pop
jmp
pop
inc
out
mov
sbb
rcl
ret
dec
lods
jl
pop
dec
stos
aaa
jp
push
outsl
loope
int3
adc
aas
dec
enter
insb
sub
jne
cmpsl
push
in
xchg
and
dec
xchg
push
insb
das
cs
or
xchg
mov
pushf
mov
rcrl
xchg
es
jo
cli
and
mov
pushf
xlat
cli
mov
xchg
out
stos
sub
test
icebp
jb
mov
dec
mov
mov
or
sbb
push
adc
mov
cli
insb
outsl
shll
in
dec
sbb
adc
lods
pop
dec
sub
jmp
mov
jns
fsubl
loopne
test
fs
dec
jecxz
add
mov
xor
pop
fidivl
jb
fsubl
jge
repz
push
call
mov
lret
outsb
dec
sub
xorb
negb
mov
stc
pushf
xchg
push
adc
shrl
jno
pop
pop
and
xor
push
sub
movsb
cmc
jne
push
rolb
pop
insb
cmp
call
xor
sub
xchg
mov
xchg
pushf
inc
fmulp
movsb
xchg
pop
xchg
mov
jns
push
and
sub
insb
jl
std
xchg
mov
fstpl
push
inc
bound
shrl
inc
arpl
inc
lahf
insb
std
cmp
or
push
out
pop
ret
loopne
mov
test
mov
adc
lds
lods
icebp
mov
or
stos
inc
inc
cmp
leave
andb
test
scas
pusha
sub
and
xchg
mov
arpl
icebp
jnp
jns
push
cltd
xchg
pop
inc
xor
jg
daa
or
mov
and
inc
aas
mov
fst
cltd
cmp
repz
mov
subb
lahf
mov
push
fisubrl
mov
add
inc
push
push
daa
jle
fcoms
fnsave
lock
jnp
in
or
or
enter
mov
jp
xor
push
out
xor
sub
dec
or
jle
push
and
pop
loope
call
cld
les
fidivs
lods
subl
xchg
stos
in
mov
mov
ds
iret
mov
xchg
mov
lret
mov
sbb
push
push
cmp
lea
or
std
subb
mov
aam
out
add
cltd
repz
dec
jg
mov
cmpb
inc
push
add
and
fcomps
adc
mov
mov
sub
in
sub
xchg
jmp
ja
shll
fwait
and
push
push
les
stc
and
imul
into
scas
push
inc
sub
mov
xchg
add
or
jno
ffreep
fstps
mov
sbb
ja
and
mov
pop
out
xlat
jmp
jo
mov
fidivs
sahf
jecxz
into
xor
sbb
addr16
shl
add
aad
cmp
imulb
push
int
lock
mov
scas
ds
push
test
fdivrl
and
cmpsl
cli
jmp
mov
xchg
js
sti
jmp
xorl
les
fcomip
insl
mov
sbb
out
dec
dec
mov
inc
jbe
test
pop
cmp
xorl
jne
pop
out
pop
xchg
push
ljmp
jno
sbb
out
outsb
movlps
in
push
movsb
mov
repnz
cmp
inc
sbb
shr
lods
leave
stc
addr16
xchg
mov
test
jne
lahf
gs
ror
cld
dec
jbe
xchg
sub
and
sub
notl
sahf
xor
sub
dec
fidivl
sar
in
mov
insl
jge
pushf
pop
mov
pop
scas
ss
lock
cmp
inc
fldt
adc
pusha
or
mov
loopne
sbbb
mov
and
iret
fldl2t
or
cmpsl
aaa
fs
test
imul
in
mov
mov
pop
dec
out
cmc
jnp
lahf
lods
push
pushf
xor
mov
or
movsl
rcrl
cmp
xorb
insl
push
nop
sub
or
mov
jp
imull
sahf
xor
outsl
adc
shrl
and
cmp
imul
and
lds
push
clc
or
lds
sbb
fs
imul
das
sub
or
mov
cmp
and
dec
and
mov
inc
mov
shrb
mov
repnz
jl
xchg
loop
cmp
sahf
push
add
cwtl
dec
jmp
in
ret
ficoms
ds
aas
lods
ljmp
cs
and
sbb
orl
add
cmp
mov
mov
leave
inc
push
add
xor
cmc
sbb
in
and
adc
divl
and
fldcw
inc
pushf
xor
jo
fidivrs
outsl
or
mov
scas
and
xchg
fdivl
push
ffreep
mov
test
push
push
lock
mov
sti
cmpsb
pop
test
scas
sub
jae
mov
pop
xchg
adc
in
push
or
outsb
jp
std
les
cmp
mov
loope
les
xchg
imul
and
fsubr
mov
outsl
aaa
cmpsb
inc
and
aaa
lret
daa
cwtl
push
hlt
xchg
lds
arpl
ret
hlt
push
mov
pop
mov
in
pop
push
dec
dec
shrw
jge
aaa
stos
push
ss
pusha
div
ds
cli
stos
lahf
jle
cmc
push
sti
fwait
xor
push
lahf
inc
aam
test
push
or
jne
je
sahf
movsb
push
std
or
xor
mov
pop
aad
leave
pop
ret
jg
lock
jb
push
and
push
mov
push
xor
mov
or
gs
testl
dec
shlb
cmp
mov
or
push
lret
lods
adc
and
shrl
pop
out
jg
repnz
out
xchg
push
mov
cmc
pop
sahf
inc
mov
lock
jne
pop
das
pushl
lds
inc
dec
loopne
dec
xchg
test
insl
add
cmpsb
sahf
and
mov
jo
dec
lahf
stos
addb
hlt
or
out
clc
and
push
xchg
and
stos
sub
cmpsl
mov
pusha
mov
decb
push
mov
roll
iret
outsb
mulb
push
rclb
in
insl
test
scas
test
xchg
fcmovb
jp
testl
fdivs
xchg
leave
inc
mov
outsb
cmp
clc
cld
movsb
int
pusha
sahf
jnp
enter
push
sub
mov
jl
xchg
outsb
ja
dec
dec
inc
xor
pop
push
jecxz
mov
inc
lret
pop
add
or
les
enter
mov
push
adc
cmc
pop
sub
aaa
pop
cwtl
xchg
cmp
pop
pop
sahf
shll
sbb
dec
xor
js
inc
cwtl
pop
mov
insl
in
cli
mov
dec
xor
add
pop
in
movsl
jns
loop
in
mov
mov
mov
int
xor
hlt
loopnew
adc
idivb
dec
inc
rcll
push
push
or
xchg
push
out
jle
pushf
mov
stos
adc
pop
stc
fidivl
imul
cmp
mov
mov
rcrb
jge
repz
or
in
and
lods
cld
repz
ror
pop
push
jg
jne
add
jno
add
jo
xor
decb
xchg
jp
cmp
xlat
add
pop
cmp
inc
xchg
in
dec
mov
imulb
call
xor
inc
aaa
pop
out
sub
test
aam
loopne
xchg
dec
fsubrl
int
mov
pusha
sbb
adc
and
loop
xchg
adc
leave
lret
bound
push
jno
stos
sub
push
lds
xlat
mov
dec
cmpsb
pushf
sbb
lods
lds
flds
pusha
fisubrs
jmp
xor
rorb
pop
fbstp
mov
jle
lds
cmp
push
pop
sbb
ja
gs
sbb
test
or
test
mov
and
sub
imul
punpckhdq
iret
lahf
add
shlb
andl
cmc
ficoml
mov
packuswb
jae
enter
xchg
mov
jle
mov
je
stc
movsl
inc
cmp
push
mov
fmuls
fwait
pop
fidivl
mov
stc
dec
ret
cmp
cmp
nop
cld
or
and
jecxz
mov
aad
mov
add
jae
xchg
int3
push
add
stos
je
adc
pop
das
scas
jns
jae
imul
mov
imul
in
xchg
std
push
xchg
push
sub
push
push
dec
adc
cmp
imul
fisubrl
xor
push
xor
pop
add
push
lahf
sbbl
stos
fsubrp
xchg
cltd
clc
int
xorl
flds
and
mov
inc
push
jecxz
daa
jl
popa
test
jle
cli
push
dec
pop
cld
add
add
cmp
adc
dec
ds
pop
insl
sahf
fidivrl
xchg
pop
xor
or
cwtl
mov
fstpl
scas
gs
out
js
dec
scas
jp
lds
movsl
push
es
sub
mov
out
inc
add
xchg
fcompl
pop
subb
dec
adc
lret
rclb
jns
cmpsl
ljmp
mov
cmp
mov
pop
in
dec
inc
out
pusha
insl
adc
test
inc
lods
xchg
xchg
or
push
push
in
lret
sbb
dec
xchg
stos
loop
insb
push
sub
push
lock
aam
dec
sub
xchg
cmpsb
loop
ja
lcall
sub
xor
cli
jecxz
jo
inc
adc
rorl
enter
xchg
bound
inc
xchg
mov
xchg
lea
movsl
lock
and
xor
int3
inc
ds
inc
inc
lea
outsb
test
push
mov
movsb
xor
sbbl
sub
jmp
push
push
cmpl
fcoms
mov
xchg
mov
jg
or
dec
lahf
and
inc
imul
fsub
cmp
inc
or
push
out
incl
xchg
lahf
rorb
or
inc
repnz
sbb
mov
pushf
and
testb
mov
jo
sub
pop
jmp
testb
loopne
and
imul
inc
fdivr
xchg
xchg
enter
mov
jne
rol
sbb
and
rclb
mov
push
xor
popa
icebp
cld
cwtl
es
or
in
jp
flds
pop
fwait
je
or
mov
inc
out
lock
stos
push
push
cli
xchg
mov
mov
stos
sbb
sub
sarl
add
and
pop
insl
in
stos
mov
pop
cmp
push
xor
aad
xchg
insl
gs
loop
movsl
jg
dec
not
sub
and
mov
sbb
add
popf
in
inc
add
cs
shl
xor
jbe
test
mov
xchg
add
add
or
mov
sbb
mov
decb
mov
jmp
test
jns
xchg
or
mov
xchg
cs
and
push
inc
insl
and
jne
lcall
jecxz
stc
cmp
aad
xor
shll
sub
pop
mov
out
data16
lret
mov
jb
push
lods
stos
rolb
insl
cltd
fbstp
mov
lahf
enter
inc
fisubrs
jbe
mov
gs
pop
mov
pop
mov
sbb
inc
jl
fisubrs
les
xor
push
std
xchg
je
jae
bound
or
sub
int
aam
mov
jg
dec
xlat
sub
push
call
mov
scas
mov
fucomip
adc
push
mov
mov
pop
pop
cmp
jl
aas
mov
push
iret
mov
out
jecxz
cmc
adc
outsb
clc
addr16
add
aam
cmp
xchg
fdivs
dec
mov
or
ja
shll
jmp
jmp
inc
mov
cltd
add
stos
mov
pop
push
push
stos
mov
dec
dec
sbb
fwait
jg
cmpsb
andb
fnstsw
pushf
lods
mov
push
jae
mov
lcall
int
xor
sbb
dec
mov
sub
xchg
icebp
xchg
insl
jecxz
dec
lahf
cmp
fwait
insl
inc
cltd
jp
ret
leave
inc
xlat
mov
mov
in
sbb
dec
mov
fwait
in
pop
push
mov
inc
andl
pop
inc
jae
nop
movsb
cwtl
cmp
dec
pop
ss
cmp
add
and
pop
fidivs
pop
mov
mull
cmp
ret
push
imul
xchg
mov
inc
add
xor
ss
mov
test
pop
xchg
sub
pop
mov
inc
addr16
in
notb
mov
mov
jae
mov
sbb
mov
jp
sub
cmp
cmp
adc
aaa
mov
sub
add
xchg
push
movsl
iret
in
dec
gs
iret
movsl
fldcw
pop
clc
add
in
push
xor
lret
sbb
in
mov
rclb
lret
add
pop
jbe
sub
jge
out
dec
push
mov
clc
arpl
xor
sub
sub
mov
sub
sbb
jb
and
add
jns
rorb
pop
movsl
add
popf
cli
adc
stos
in
jno
aas
nop
cmc
in
fidivs
lods
loope
lahf
mov
add
mov
xchg
push
or
pop
out
mov
insb
sub
or
imul
dec
pop
sahf
inc
test
rorb
ret
jnp
popa
and
repnz
dec
sbb
sub
jg
jo
insl
mov
fs
dec
or
add
jb
mov
or
jnp
fisubrl
es
or
and
mov
in
js
or
sbb
add
sbb
lea
shll
jne
jo
xor
mov
sub
cmpsl
fdivrs
stos
dec
jmp
insb
test
bsf
lods
dec
sub
fimull
inc
fists
hlt
icebp
or
push
jmp
pop
out
es
int
push
loope
and
jle
shlb
fidivs
cs
push
add
sbbb
xchg
pop
mov
pop
sahf
scas
push
ret
push
mov
push
push
ret
lcall
loope
fbld
jmp
push
inc
cld
sti
mov
fsubrp
cltd
sub
xchg
jl
cmp
popf
sub
inc
ret
imul
mov
addb
daa
fsubl
movsl
inc
repz
sub
jmp
icebp
jmp
cmp
mov
pop
clc
xchg
adc
aaa
cwtl
cmp
adc
outsb
imul
mov
clc
jle
scas
xor
push
inc
pop
pushf
cli
aad
jo
mov
clc
cmp
insb
fucomi
test
sbb
mov
lcall
shll
push
cmpsb
cmp
inc
out
fsubp
xchg
sub
jl
pusha
jno
inc
fldenv
in
xchg
mov
sbbl
popa
clc
movsl
sub
cmpsl
pushf
dec
adc
aas
ss
cmpsb
xlat
add
aas
outsl
inc
fstps
clc
pop
icebp
in
and
enter
das
movb
pusha
mul
mov
xor
cwtl
cmc
mov
mov
ds
arpl
push
sub
sbb
ss
inc
sub
push
xor
pop
out
add
push
jl
int
xor
sbb
jb
gs
push
lods
in
or
pop
jbe
lock
lods
into
cmp
popf
mov
rclb
mov
in
xchg
push
mov
data16
lret
jmp
jbe
lods
push
gs
cld
andl
iret
aam
add
stos
mov
pusha
iret
jne
popa
inc
lods
adc
jae
sbb
lahf
pop
add
ds
fwait
cmpsl
fdivl
in
mov
cmp
lds
adc
sub
jmp
lods
mov
stc
lods
int
sub
gs
jge
ret
and
es
push
inc
push
lahf
push
sub
inc
in
mov
ljmp
jnp
sbb
mov
into
das
or
push
imulb
push
ljmp
jno
cwtl
das
and
jmp
rcll
dec
cmpl
into
cmpsb
cmp
sbb
pop
scas
dec
cmp
clc
hlt
rcl
stos
subl
push
and
xor
xchg
pop
int3
mov
imul
hlt
nop
or
sub
rcrb
and
or
mov
testl
or
sub
addl
xor
out
mov
adc
pop
movl
xchg
pop
pusha
testl
xor
shl
dec
mov
add
clc
sub
xor
testl
add
out
sti
xchg
enter
mov
xor
inc
pusha
mov
gs
lret
xchg
mov
stos
cmpsb
jo
loope
lret
mov
adc
mov
inc
fsubs
scas
inc
push
popf
lock
fsubr
dec
test
ss
test
insl
xor
or
sub
and
pushf
in
stos
xchg
ret
divl
jecxz
popf
mov
nop
adc
inc
or
and
aam
lret
aam
push
and
jmp
daa
test
xor
ja
add
mov
lds
pop
mov
lock
sbb
cmc
lahf
aam
shl
dec
jmp
lret
mov
repnz
xchg
jno
cmp
xchg
mov
add
xchg
out
rorb
adc
lahf
push
push
ds
and
xor
fists
or
aad
mov
lret
pop
hlt
dec
enter
insb
jnp
sbb
dec
cmp
out
mov
or
std
enter
scas
xor
xor
xor
fldenv
test
mov
sysexit
test
cld
sbb
or
sbb
ja
mov
and
xor
xor
jne
push
imulb
and
cmpb
test
fsubrp
dec
das
fnstcw
ljmp
jae,pt
int3
fmul
dec
ds
notb
mov
inc
or
push
fcompl
xor
aaa
clc
push
lock
adc
das
sub
dec
cltd
xor
scas
mov
pop
adc
cmp
sub
jg
mov
fcomps
test
sti
movsb
inc
gs
push
sub
mov
mov
scas
and
pop
lds
push
push
push
push
push
cmp
xlat
repz
sahf
xor
aam
dec
push
stc
mov
mov
pushf
imul
sbb
dec
insb
mov
or
sbbl
dec
and
jl
pop
dec
xchg
jp
in
mov
fnsave
inc
jle
inc
popf
pop
push
sub
sbb
cld
test
cmp
adc
sub
jg
push
jge
sub
dec
dec
lock
test
push
push
sar
xchg
add
stc
sbb
and
fwait
jnp
repnz
push
sub
pop
and
push
cmp
and
jb
add
js
or
fimull
sbbb
scas
cmp
push
sbb
push
adc
sub
out
cltd
popf
or
repz
sbb
mov
adc
xchg
sub
push
in
push
pop
pop
mov
imul
xchg
jmp
sahf
or
packsswb
cmp
in
daa
nop
addl
fcom
icebp
dec
sbb
dec
push
adc
movsl
in
or
aas
pop
out
push
aas
pop
add
sub
in
dec
inc
ljmp
shrb
mov
mov
sub
cmp
adcb
gs
mov
add
into
insb
cmp
outsl
or
mov
mov
shll
out
stos
push
test
jb
sti
jo
pop
jo
push
testl
mov
mov
dec
mov
loopne
aam
mov
push
jnp
jmp
sub
clc
leave
sbb
je
dec
ss
test
mov
mov
mov
psubusw
sub
faddl
int3
arpl
insb
jp
stos
inc
andl
xor
adc
in
xorb
mov
mov
cwtl
out
mov
insb
mov
popl
int3
jo
add
sarl
sti
ja
daa
outsb
and
add
sti
adc
inc
jb
and
mov
dec
iret
and
jge
fsubrs
pusha
ss
pop
ljmp
jmp
pop
adc
movsl
lds
or
and
push
jo
ss
and
cmp
push
cltd
decb
lcall
xchg
adc
pop
arpl
pop
xor
enter
sbb
sbb
push
push
sti
shlb
xor
jb
jnp
mov
addr16
inc
fcmovnu
adc
js
lea
cwtl
rolb
jmp
cmp
sbb
repnz
cmp
out
adc
or
int
sbb
cld
inc
push
cmp
ss
add
sbb
pop
adc
rol
or
ret
mov
adc
jb
insl
mov
fimull
dec
adc
mov
lret
mov
fldenv
sahf
icebp
pop
cwtl
pop
call
js
hlt
lahf
inc
sbb
dec
cs
inc
and
xchg
push
shr
cmp
test
scas
mov
lahf
in
rcrl
mov
mov
xor
pop
jmp
add
or
je
and
push
mov
in
xor
mov
aam
add
dec
mov
cmp
fcoms
add
gs
sti
jl
push
mov
setbe
jbe
jo
inc
sbb
pop
push
mov
xorb
pop
pusha
xchg
out
outsb
and
les
les
repz
mov
adc
add
mov
mov
or
das
add
mov
dec
xor
jge
lcall
add
jne
push
xor
pop
xor
dec
scas
call
pop
mov
je
fmuls
fstpt
jns
rcr
cs
ljmp
repnz
daa
jge
jo
cli
mov
cmp
pop
sbb
pop
scas
aaa
data16
gs
psllq
pop
pop
test
xor
jmp
insl
xchg
mov
mov
cmp
mov
scas
ret
push
mov
jp
lahf
mov
roll
stos
and
inc
dec
fs
cltd
pop
or
add
pop
dec
mov
int
mov
xchg
mov
cmc
pop
or
aaa
adc
push
mov
outsl
pop
sub
pop
fwait
sti
xor
mov
shlb
jmp
cmp
or
pop
fdivrl
push
inc
add
mov
movsl
lds
mov
cmp
clc
cmpsl
cli
fidivrs
fmull
cmp
movsl
push
xlat
pop
cmp
cmp
into
push
iret
xchg
mov
and
scas
cli
inc
push
insb
in
es
aam
xor
lock
hlt
cmp
fbld
jns
std
ds
xor
adc
jae
mov
fdivrs
jne
xchg
iret
adc
out
pop
push
in
ret
or
ds
fwait
sahf
jbe
or
dec
je
jmp
or
fs
inc
mov
les
xchg
in
test
into
scas
sti
jle
call
jne
push
imul
xor
dec
es
or
les
cs
xchg
test
int3
popf
clc
mov
ret
lock
dec
stos
out
and
les
inc
jle
jno
jb
sbbl
aad
mov
sbb
dec
ja
xlat
xor
push
mov
inc
pop
aaa
inc
shlb
and
inc
stos
push
dec
test
rclb
jae
loope
movsl
adc
pop
add
mov
movsl
fwait
stos
inc
mov
mov
sti
mov
std
push
mov
std
jae
jbe
or
into
ss
cmpsl
adc
adc
out
fwait
xor
and
xor
sub
adc
sbb
enter
xchg
and
adc
ss
mov
into
xor
add
pop
bnd
or
rorl
or
mov
xor
mov
push
mov
andl
push
aam
aad
icebp
or
clc
sub
jmp
mov
push
cwtl
fdivr
int3
xchg
out
je
sbb
or
stos
cld
movsb
inc
sub
mov
mov
add
insl
cmp
mov
inc
arpl
int3
sbb
or
outsl
daa
scas
fst
push
dec
pop
hlt
push
jbe
pop
push
xchg
mov
jle
push
dec
dec
rol
pusha
jl
aaa
push
jo
mov
aaa
movsl
test
daa
pop
test
insb
shlb
repz
push
pop
cmp
mov
aas
dec
jns
out
loope
popa
sbb
adc
sbb
stos
xor
call
nop
mov
jno
cltd
cmpsb
stc
dec
adc
push
fldl
inc
or
mov
mov
ja
dec
popa
inc
aam
xchg
or
jg
push
aad
adc
push
push
fsubrp
in
inc
dec
and
jp
mov
sub
fisubl
pushf
pusha
mov
mov
fistpl
nop
sub
shll
xor
pop
mov
int3
mov
push
ljmp
jb
lahf
ret
shl
mov
cltd
clc
imul
test
std
add
cmpsb
icebp
mov
in
js
movsl
xor
xchg
sbb
std
jns
push
call
push
shrl
xlat
imull
cmp
inc
mov
dec
jbe
lahf
sahf
ret
rorb
mov
mov
fcomps
cld
rcr
push
dec
pop
hlt
dec
test
hlt
xchg
jns
call
in
inc
aam
movsl
sahf
imul
and
gs
xor
xor
pushf
iret
xor
push
in
pop
addr16
or
leave
pushf
test
inc
push
mov
jl
js
xchg
sbb
icebp
lods
push
fldcw
pushf
xchg
or
adc
jno
jle
shlb
in
outsb
add
push
fdiv
inc
les
aas
mov
mov
in
aas
push
test
xor
mov
mov
push
roll
mulb
ret
arpl
roll
cmp
xor
push
in
test
je
aaa
mov
pop
cmp
call
and
mov
es
popa
clc
fs
mov
popf
in
loop
push
mov
cmpsl
jmp
vprotd
les
xor
vmovddup
push
out
cmpsl
fstpl
push
test
cmpsl
xor
popa
adc
clc
daa
mov
or
jp
dec
fst
push
out
xlat
inc
notl
xlat
add
dec
dec
push
jnp
jmp
arpl
ljmp
mov
je
add
and
scas
cmc
pop
xlat
or
arpl
in
insl
jno
adcb
sbb
repz
hlt
test
dec
or
outsb
xchg
sbb
push
jae
fsubs
and
mov
pop
cli
les
insl
int
mov
mov
mov
inc
jp
insb
testl
xchg
fwait
xchg
jnp
xchg
lods
mov
jo
or
jle
aad
sub
jb
pop
and
and
dec
rol
inc
lock
inc
in
and
inc
scas
scas
push
jns
pop
jne
cmpsl
je
push
mov
fisubrs
jb
aaa
fnop
push
iret
add
out
pop
dec
and
xchg
cmpsl
out
ds
mov
push
lret
xor
out
sbb
inc
pop
std
loopne
dec
xchg
sbb
mov
xchg
lea
pcmpeqd
mov
loopne
push
outsb
xchg
sub
jns
or
mov
or
mov
xchg
out
lods
inc
cli
sbbl
out
add
cld
jne
jo
push
jnp
ficoms
pusha
push
cld
shlb
pop
rcrb
rolb
push
push
add
mov
mov
sbb
aam
sarb
repz
data16
and
xor
mov
xchg
hlt
loop
sub
add
dec
bound
mov
mov
ret
inc
test
aaa
jbe
dec
dec
pop
push
mov
insb
lahf
insl
stc
popf
sbb
lahf
testb
outsl
push
icebp
scas
push
repz
mov
adc
lods
jo
cmc
mov
popf
ret
cld
push
jp
mov
cwtl
pop
xchg
sub
fwait
push
and
inc
xorb
push
jg
jmp
int3
out
in
arpl
pop
cmpsb
push
popa
cmp
xor
jmp
jle
sbb
popa
cmp
out
xchg
sub
pop
out
fs
addr16
mov
insl
xchg
pop
orl
mov
orl
sub
xor
jb
and
and
inc
dec
pop
inc
loop
loopne
xchg
mov
and
sub
cs
xor
mov
jne
adc
out
push
and
jne
out
imul
push
xor
fildll
adc
aad
dec
mov
xor
xorl
rcl
xor
push
aaa
test
cmpsl
lea
sub
sar
mov
pop
aad
add
and
inc
out
scas
adc
and
ds
repnz
jle
fucomip
pushf
lahf
mov
movsl
daa
add
or
popa
jg
scas
rcr
addl
mov
lock
lcall
test
mov
insl
push
add
xchg
lock
in
mov
pop
mov
adc
popa
sti
fsubl
fldenv
mov
jo
inc
sbb
and
and
imul
pop
sbbb
pop
shrd
dec
jae
mov
test
jle
filds
and
push
mov
fs
icebp
xchg
add
fisubrs
lods
add
add
int3
xor
xchg
or
adc
mov
testl
popf
jne
sti
cmpsb
mov
testl
sti
jg
and
xchg
inc
pop
xor
inc
sbb
pop
stos
scas
xor
mov
jnp
cmp
push
jle
pop
push
cmp
pop
cmp
push
idiv
or
sarl
dec
fists
orb
nop
xor
pop
leave
mov
scas
mov
mov
sub
jnp
push
and
xchg
xchg
ret
out
adcl
jl
shll
sbb
shrb
sti
sub
jb
lret
and
xchg
xchg
pop
mov
dec
add
out
outsl
ss
loopne
mov
push
in
adc
movsl
mov
mov
sahf
mov
or
mov
dec
std
mov
ss
inc
mov
fwait
and
addr16
in
inc
jne
test
cmp
sbb
inc
cmpsb
out
xchg
xor
mov
cld
sub
nop
pop
xchg
hlt
jl
addr16
pusha
adcb
js
mov
or
dec
into
push
sub
dec
jecxz
sbb
sbb
fisubl
fldcw
and
dec
mov
repnz
rol
cld
fistps
aad
arpl
ss
cmp
shlb
cmp
gs
fxch
mov
ss
cmc
sub
in
add
shrl
lods
aas
into
add
test
movd
lahf
sub
sub
std
pop
mov
les
cmp
cs
mov
lds
dec
imul
xor
std
jmp
repz
scas
push
pop
fdivrl
sti
test
cltd
cmp
mov
jmp
mov
sub
pop
xor
je
dec
mov
hlt
in
fbstp
fimuls
mov
inc
std
xchg
outsb
scas
xchg
inc
pop
jae
mov
mov
das
sbb
and
cli
out
jo
xor
pop
jmp
ds
pop
imul
or
outsb
fistl
push
insb
hlt
stos
cmc
xchg
add
dec
das
xchg
scas
aaa
adc
adc
add
inc
xor
gs
dec
int3
and
or
sti
xchg
pop
test
xor
dec
mov
in
clc
sahf
dec
sub
jmp
call
stos
xchg
add
jle
stc
scas
mov
sub
movsl
call
outsl
dec
popf
xor
dec
sbb
sbb
shr
scas
stc
pop
jno
std
mov
cmpsl
hlt
inc
push
cmp
xchg
pop
cmp
mov
test
cmp
daa
addl
add
cmp
jmp
jle
out
call
adc
dec
dec
sub
xchg
pop
cmp
dec
dec
fcmovnu
pop
push
in
cwtl
and
push
cmp
roll
arpl
fsubr
push
lret
dec
negb
mov
push
push
push
outsb
mov
ret
fistpl
xor
sub
pop
xchg
aas
les
loope
add
cs
push
scas
cmp
xor
call
jg
enter
sub
enter
or
es
in
rcrl
pop
ja
and
cmp
andl
stos
adc
call
or
push
push
outsb
hlt
iret
nop
stos
std
mov
call
dec
outsl
jns
jmp
add
sbb
add
rcrb
xor
mov
cmpsb
xor
and
int
jl
sbb
pop
fldl
cltd
mov
shll
js
jmp
es
push
mov
inc
xor
inc
sar
inc
adc
mov
pop
cmp
and
dec
movsl
mov
and
push
cmp
addr16
adc
dec
push
push
pop
roll
or
sub
sbb
pop
loope
and
rcl
out
je
mov
sbb
cmpsl
cmc
xchg
loope
jo
lods
mov
sarb
in
mov
sub
cs
push
add
rcl
shl
pop
negb
call
or
scas
out
ds
jmp
sbb
add
mov
rcrb
loop
cmp
dec
jne
out
push
cmp
sub
shr
sahf
pop
in
pop
cmp
outsl
add
inc
pop
rcll
sbb
clc
aas
test
repnz
mov
sbb
cmp
aad
jno
fisubs
sti
test
jno
push
mov
push
mov
repz
add
scas
mov
adc
mov
mov
lret
outsb
lods
fdiv
mov
fstpt
xchg
or
cmp
pop
rclb
pop
sahf
cmp
popa
aaa
pop
rcl
cmp
jecxz
insl
mov
rolb
mov
cmp
adcb
inc
mov
cltd
xor
push
inc
in
mov
fldenv
mov
fstpt
or
rclb
popf
fisttpll
jle
imul
cmp
enter
mov
in
pop
lea
add
pop
and
arpl
inc
fdivrs
dec
sbb
inc
push
popf
test
test
fists
or
mov
pop
aaa
sbb
cs
push
mov
js
jmp
jp
lock
lret
lret
ror
jae
in
inc
ja
lret
cmp
das
mov
addl
dec
or
cmp
mov
jle
jl
xor
and
dec
pop
push
mov
arpl
sub
pop
cmpsb
xchg
xchg
mov
stos
inc
stc
lods
jmp
sbb
inc
rol
mov
push
in
int3
inc
sub
inc
movsl
mov
mov
mov
inc
test
imul
and
aaa
data16
dec
adc
inc
aam
cs
lods
inc
cmp
sub
adc
mov
fdivp
loopne
lahf
add
xor
dec
pop
imul
into
and
inc
cltd
push
popf
pop
btc
enter
outsb
mov
add
xchg
repz
scas
leave
pop
mov
popf
ljmp
or
cmpsl
jmp
xor
xor
test
ret
push
and
xchg
push
popf
sub
fldcw
push
jg
mov
mov
test
icebp
test
xor
mov
push
xchg
lret
subl
cs
inc
or
or
mov
das
cli
test
push
int
fisubrl
add
add
jnp
mov
cmp
push
jp
aaa
xor
je
enter
lret
pop
pop
pop
mov
xchg
sub
stc
mov
cmp
shll
ret
in
leave
fucomi
sarb
imul
pop
jns
mov
mov
das
xor
movzwl
int
in
pushf
out
inc
outsb
sub
mov
mov
xorb
icebp
jne
pop
cmpsb
mov
sub
nop
jle
imul
mov
aaa
imul
and
add
and
push
fisubl
fistl
pop
fstpt
or
cmpsl
jle
and
mov
and
fwait
mov
dec
lods
sub
pop
arpl
xchg
mull
xlat
ss
jns
mov
fsts
enter
inc
jle
push
push
repnz
bound
sub
std
das
loope
pop
sbb
call
std
fistpl
and
cwtl
les
ljmp
cltd
jbe
cmp
mov
or
xchg
int3
test
incb
inc
mov
push
test
mov
mov
xchg
cs
xor
sbb
subl
jno
in
cmp
mov
andl
aad
pop
jnp
mov
cmpsb
stos
lcall
xchg
adc
push
enter
dec
fucomip
cmpsb
pop
fs
or
cmp
cld
xchg
lret
adc
dec
xor
jns
push
stos
notl
pop
push
xlat
pop
xor
aaa
jb
jl
loopne
int
add
sub
pop
fnstcw
lea
sarl
pushf
imul
fldl
push
and
and
movsl
pop
insb
daa
cli
aad
movsl
sub
or
xor
adc
cltd
fnstsw
add
pop
jae
xorb
pop
aaa
mov
and
iret
sahf
pop
pop
xchg
push
popa
imul
sbb
lret
leave
mov
je
and
cmp
pop
mov
pop
pop
cmp
test
dec
sbb
mov
pop
mov
push
in
adc
jbe
sub
cmp
sub
jle
mov
negl
push
ljmp
jno
pop
fmuls
sub
inc
movsb
dec
push
push
repz
rcr
push
in
sti
pop
lock
inc
dec
push
xchg
ja
sbb
pop
repz
xor
les
dec
mov
sbb
push
fwait
push
pop
mov
xor
icebp
movsl
sbb
loope
mov
cmc
cmp
or
sbbb
icebp
jp
and
movsb
loopne
rcr
faddl
pop
cmp
adc
push
rcrb
shll
mov
inc
pop
insb
dec
and
lods
fcmovu
mov
push
fstps
jno
divl
xchg
pop
sbb
lcall
ret
enter
pop
mov
lcall
mov
push
jg
mov
push
and
pop
mov
rcrl
std
pop
xchg
xor
xchg
sub
mov
sub
sub
outsl
jg
aaa
popa
pushf
notb
mov
flds
cltd
mov
cwtl
fdivrl
cmpsl
cs
pop
inc
fsubrs
push
add
push
cmp
loopne
push
adc
xadd
xor
testb
inc
push
and
in
sub
clc
sbb
jl
hlt
push
mov
add
addr16
test
ds
dec
clc
cmp
out
sahf
hlt
push
repnz
jge
sarb
dec
lods
cmp
cmpl
push
std
cs
ja
cmp
mov
adc
inc
cmpl
enter
jle
adc
sahf
or
sbbb
out
scas
sahf
loop
sub
xchg
pop
int
mov
imul
xor
mov
pop
jae
pop
dec
je
push
lods
mov
mov
lods
add
sar
or
mov
push
push
cli
dec
rorb
iret
in
psubusw
xor
and
ss
xchg
lds
movsb
dec
sbb
push
test
pop
cmp
lret
out
push
sbb
iret
jno
insl
mov
aad
sub
idivb
test
mov
fwait
mov
pop
aas
mov
pop
xor
loope
add
xor
lods
or
call
mov
or
mov
push
mov
iret
mov
adc
sub
cmp
add
push
cmp
ficoml
pop
sub
es
jp
into
std
xchg
cmp
pop
pop
lods
jmp
fidivrl
jge
mov
les
jb
mov
and
fld
int3
mov
in
bound
out
add
or
sbb
adc
pushf
out
inc
aad
mov
xchg
add
popf
pop
and
mov
or
fwait
pop
or
std
add
fnsave
xchg
stc
push
nopl
push
shl
cmpsb
mov
adc
inc
pop
sub
push
mov
push
test
stc
fbstp
pop
or
or
xchg
cmp
sub
mov
mov
sub
inc
lcall
and
scas
mov
pop
sub
xorl
pop
aam
or
jmp
hlt
jns
sbb
das
cs
movsb
mov
les
outsb
lret
sbb
dec
and
jae
push
jl
adcl
cmp
dec
test
cmpl
adc
xor
int3
sub
jns
cwtl
das
cwtl
inc
inc
fiaddl
les
sbb
inc
xor
add
mov
mov
add
leave
cmpsb
movl
jne
nop
inc
jbe
lahf
cld
xchg
mov
in
sbb
int
paddsw
movsl
jmp
iret
ds
cmp
fdivrp
push
ret
sahf
daa
cs
cmpsb
popa
clc
xlat
jo
mov
scas
sub
adc
fwait
daa
shrb
mov
cwtl
test
mov
jns
int3
cmp
and
daa
addb
pop
insl
mov
mov
ret
pusha
inc
insb
aam
imul
jne
jl
dec
sub
mov
cli
jb,pn
cmp
inc
popf
repnz
cltd
out
add
insl
add
jp
fstpt
popa
jno
andl
jg
mov
clc
insl
jge
push
sbb
dec
ds
fwait
in
sbb
mov
lret
jbe
mov
xchg
jo
das
loopne
sbb
inc
rol
and
jno
lret
adc
imul
cmpsl
cmp
cmp
les
xchg
jnp
int3
loop
add
loop
dec
add
aam
xchg
mov
mov
daa
daa
push
pop
xor
xchg
push
mov
pop
push
je
cmp
cltd
imul
push
int3
ja
sbb
in
adc
pop
inc
push
inc
iret
or
dec
inc
adc
mov
mov
dec
jecxz
mov
xchg
push
sub
mov
dec
mov
lret
xchg
push
pushf
xor
pop
dec
loop
cmp
outsb
jns
push
sbb
insb
sub
pop
scas
shr
add
jp
sti
stos
xor
cmp
or
pop
mov
xchg
sub
cmp
pop
aas
mov
cmpb
dec
cmp
cmpb
jbe
call
pop
or
cli
and
and
push
mov
add
adc
xor
jge
mov
popf
out
ret
in
icebp
pop
ljmp
jno
xor
popa
xor
push
mov
push
adc
adc
xchg
imul
cwtl
mov
enter
push
mov
mov
xlat
xor
or
and
ds
pop
clc
lret
dec
movsl
rcrb
insb
dec
sbb
lods
test
push
jae
or
sub
push
sbb
inc
push
daa
sub
std
add
sub
mov
sbb
stos
sbb
pusha
in
sbb
dec
popa
out
xchg
scas
lods
lret
mov
sbb
fcmovu
je
mov
stc
inc
add
adcb
fwait
sub
fsts
cmp
sahf
fs
cs
xchg
inc
or
scas
mov
cmp
ror
pop
fbld
add
add
xchg
add
push
sub
jb
addr16
bound
xchg
or
lds
mov
push
xor
pop
push
test
test
lock
call
xor
xchg
pop
mov
push
out
fcoml
or
xchg
loop
out
mov
int
cld
push
cmp
loope
inc
or
mov
pop
je
fstps
fs
ds
mov
int
sub
scas
into
pop
outsl
insl
jg
jp
mull
rolb
sbb
inc
jns
xor
fs
in
adc
mov
mov
aaa
xchg
das
stc
push
dec
adc
pop
sub
jmp
andb
ds
fwait
sbb
aad
daa
mov
xor
fs
icebp
gs
pop
icebp
and
into
add
mov
das
call
dec
push
cmp
mov
or
pop
addr16
add
xchg
cltd
aaa
mov
push
inc
mov
mov
lcall
cmpb
inc
xor
jb
or
mov
leave
insb
add
scas
add
loope
pushf
xor
jnp
push
lods
sbb
sbb
das
cmp
adc
xchg
jecxz
pushf
pause
adc
inc
in
xor
push
insb
stos
lods
inc
fstpl
into
or
mov
out
and
sub
or
xchg
clc
cltd
sub
adc
jle
xor
pop
aad
lea
loop
in
and
push
or
and
call
orl
push
hlt
or
lret
imul
cmpsl
mov
in
adc
icebp
loopne
push
jne
loopne
iret
pushf
stos
clc
andl
rcr
jge
mov
negb
mov
pusha
xchg
mov
push
lds
stos
fidivs
in
gs
xchg
mov
andl
lret
pop
push
ret
test
shl
aas
cmc
mov
fists
rcll
push
xchg
jecxz
fwait
adc
xchg
mov
adc
addr16
lcall
mov
jl
lea
lahf
sub
ja
jno
mov
enter
push
push
xchg
andl
dec
insl
pushf
mov
pop
cli
or
inc
cs
fsubp
test
icebp
push
int3
inc
scas
xchg
sbb
testl
dec
cs
loop
shrb
imul
insb
mov
int3
scas
stos
dec
in
xor
cmpsb
jp
insb
je
inc
fistpll
jbe
xor
xchg
incb
xor
or
js
mov
in
call
idivb
test
jns
in
jmp
sbb
cltd
cmp
jmp
int3
shll
cmp
out
jg
lahf
pop
andb
mov
les
xchg
mov
addr16
push
xchg
cmp
adc
gs
imul
pushf
pop
jb
push
xor
push
sub
cmp
pop
dec
pop
gs
mov
test
pop
cmp
inc
mov
repnz
jl
cwtl
dec
enter
adc
es
ja
out
and
dec
imul
sbbb
outsl
xchg
mov
sahf
inc
aam
xchg
xor
fwait
rcr
jo
mov
cmp
sub
fdivrp
test
mov
sub
fwait
imul
cltd
inc
cltd
mov
xor
in
mov
dec
nop
test
mov
lock
jp
out
add
dec
jae
lods
xchg
sub
pop
push
enter
inc
int
jg
addr16
xor
cmc
mov
in
loope
lods
adc
loopne
lret
jmp
xchg
mov
ret
stos
push
dec
nop
shrb
call
xchg
or
push
push
outsl
push
repz
sahf
aad
dec
cmc
lahf
xchg
sbb
mov
sbb
icebp
sub
pop
sub
cmp
and
fs
in
es
inc
jbe
std
xor
fists
cmp
mov
xchg
stos
lock
and
fbstp
add
addl
jmp
pop
pop
mov
iret
jb
fcmovnb
cmp
add
popa
clc
adc
addb
repnz
aaa
mov
int
pop
orb
nop
mov
pop
std
jg
adc
xchg
jge
mov
fcomps
mov
and
xor
scas
inc
ljmp
call
dec
xchg
mov
out
lock
pop
int3
pushf
addr16
cwtl
push
push
inc
test
ror
mov
sub
jmp
xchg
mov
or
in
pop
dec
pop
ljmp
int3
mov
je
mov
mov
xchg
sub
shl
jb
mov
insl
out
ficompl
mov
test
call
and
fcoms
sti
and
je
jecxz
cmp
in
add
xchg
mov
stc
sub
jge
inc
fs
mov
into
push
cs
data16
aad
xor
and
test
pop
and
mov
mov
pop
jne
ljmp
enter
jmpw
or
cwtl
mov
lcall
dec
out
es
sub
mov
mov
inc
fdivl
aam
cli
add
jb
mov
and
aaa
mov
enter
pop
outsl
daa
fldenv
xchg
mov
test
lret
fldt
shlb
jg
rorb
popf
popa
bound
add
incl
jnp
or
adc
repz
or
push
aam
xor
pop
mov
push
cmp
hlt
and
mov
xchg
fildl
addr16
xor
mov
sub
shll
sbb
hlt
dec
and
fcoms
sub
mov
test
fwait
sbb
push
dec
mov
lcall
aaa
add
sub
loopne
push
jp
inc
inc
repnz
push
fsts
add
mov
mov
mov
data16
clc
sub
jb
sub
xchg
pop
in
push
outsb
andl
pop
xor
and
pop
rcr
sahf
mov
shl
out
lahf
sbb
dec
icebp
loopne
popf
and
adc
jae
mov
push
addr16
fstp
bt
cmpsl
jno
sbb
test
or
sbb
nop
enter
xchg
dec
dec
or
int
mov
movsl
lods
mov
and
lret
jno
add
adc
xchg
xor
je
and
aam
adc
aam
mov
xor
sbb
xchg
inc
add
sbb
loope
loope
mov
stc
nop
fcmovb
int
idivb
xor
jl
nop
mov
pop
sub
fisubl
enter
mov
sti
jo
push
jge
push
mov
pop
inc
andb
push
stc
ss
loop
test
or
adc
lea
lods
mov
stc
cmpsl
and
cmp
pusha
cmp
pop
adcb
sub
loop
dec
sub
mov
adc
lea
cmp
sub
xlat
and
jl
inc
xchg
xchg
sbb
fistl
jl
jp
in
sub
fdiv
fs
scas
call
xchg
fs
lahf
sbb
fdivl
cmp
jbe
sbb
xor
sub
pop
xchg
add
pop
out
mov
lahf
xchg
test
mov
lret
sub
imul
ret
stos
jne
sub
int3
add
cmp
jne
xor
xlat
mov
test
scas
pop
xor
sahf
mov
or
adc
ss
out
mov
imul
or
adc
cmp
mov
pop
scas
gs
int
stc
cmp
jno
std
insb
xchg
es
cli
sahf
pop
sub
sbb
mov
pop
xor
testb
or
clc
addb
adc
jns
and
lods
adc
adc
xchg
and
push
jns
sbb
and
xor
adc
aad
pushf
lcall
sbb
xchg
xor
xchg
sbb
test
sbb
imull
xlat
in
xor
and
aad
mov
push
out
xlat
test
sub
xlat
shl
xor
sub
pop
pop
push
neg
jns
nop
imul
pusha
or
cmp
dec
lds
push
jmp
jns
daa
fsubl
sbb
and
in
fwait
adc
cltd
pop
lret
movsl
push
push
pop
cmp
shlb
aad
sbbl
jmp
or
jp
pusha
sbb
push
in
or
enter
nop
cmp
dec
test
mov
jle
aaa
es
jmp
mov
mov
or
mov
aaa
daa
inc
imul
sbb
inc
sbb
fs
lock
and
fidivrl
addr16
and
popf
push
and
add
xchg
adc
and
jmp
das
xchg
sub
pop
pop
mov
std
jne
aam
push
cmp
mov
add
out
int
rolb
cld
sub
cmpsb
mov
and
pop
mov
mov
mov
in
push
les
pop
and
lcall
pop
lock
cmp
insl
outsb
ss
lods
ss
cli
mov
fbstp
push
jg
dec
dec
in
std
jno
and
fiaddl
inc
dec
movsb
jno
pop
repnz
mov
shlb
jge
out
jbe
sbb
fcomp
nop
xchg
sub
std
push
andb
sbb
imul
push
divb
and
cld
lds
pop
adc
dec
pop
daa
mov
push
nop
sbb
push
mulb
xchg
xorb
jle
xchg
faddl
sub
cwtl
jle
add
xchg
pop
outsl
sbb
xchg
sub
pop
pop
inc
mov
jns
out
mov
mov
jecxz
add
jl
sbb
sarb
clc
or
aaa
jbe
jmp
into
cmc
xchg
cmp
shrl
rorb
pop
loope
adc
jmp
push
jmp
cwtl
and
jl
and
xor
mov
cmp
dec
orl
imul
loop
imul
adc
inc
punpckhdq
dec
lds
jns
je
push
data16
mov
xchg
mov
and
std
rcrl
ret
test
mov
les
dec
sbb
imulb
lock
xchg
sahf
popf
lods
shrl
aas
adc
lods
decb
adc
mov
xor
daa
adc
out
subb
sbb
adc
add
pop
ss
fwait
sub
cmc
adc
mov
xor
loop
outsl
lret
push
add
mov
jecxz
cmc
shlb
icebp
adc
sti
xchg
inc
add
sbb
pushf
mov
add
insl
cmp
push
dec
fisttpl
and
ret
stc
nop
cmc
js
lods
ds
sbb
fcmovu
push
call
lret
inc
and
ja
in
sbbl
push
jl
pusha
xchg
xor
fbstp
lret
pop
call
or
sub
sbb
repnz
std
inc
and
mov
xor
add
fisubs
xchg
divb
pop
sub
inc
call
mov
lock
pushf
inc
add
mov
testb
rcrl
jg
xchg
mov
mov
fld
bound
enter
out
xchg
mov
rorl
or
loopne
sub
xor
jg
jns
add
jo
popf
je
xchg
push
test
mov
sbb
sub
mov
mov
out
cs
arpl
add
sahf
test
es
popl
jbe
pop
sbb
lea
out
in
mov
aad
ret
mov
inc
jae
lea
mov
shrb
mov
cmp
roll
not
in
cmpsl
mov
dec
jecxz
sub
mov
sub
mov
xchg
idiv
ret
aas
pop
shrl
aad
pop
mov
nop
dec
divl
out
shl
dec
fadd
jne
add
inc
repnz
aam
out
jmp
sub
out
orl
rorb
xchg
subl
test
pop
pop
gs
test
mov
inc
mov
fucomip
roll
imul
rol
pop
add
outsl
push
jne
inc
mov
mov
cs
mov
stos
mov
int3
cmp
sti
ljmp
xchg
mov
rcr
sbb
pop
cld
dec
scas
rcrl
jo
mov
test
sbb
repnz
test
adc
in
push
dec
filds
lahf
xor
jne
jg
jmp
mov
pop
or
push
mov
push
mov
xlat
test
inc
or
inc
mov
aas
mov
cmc
mov
fmuls
sbb
adc
les
mov
cmc
adc
ja
and
or
mov
cmp
sbb
lret
daa
or
int
mov
fs
xor
pop
addl
movsl
mov
test
and
rorb
cmp
jecxz
xchg
lock
inc
mov
add
xchg
test
dec
and
mov
mov
pop
and
aas
mov
push
ljmp
testb
xorb
movsb
loopne
fs
lods
mov
or
sbb
outsb
add
imul
jns
test
out
stc
nop
mov
ss
je
sbb
mov
jle
and
repz
xchg
and
das
ret
push
lahf
sub
jbe
lret
mov
mov
push
sub
mov
ss
and
fwait
xor
jne
mov
into
sbb
sbb
es
xchg
fwait
cmp
inc
xor
setg
int3
arpl
jne
shr
out
cltd
dec
pop
xchg
sbb
jmp
cmp
out
sbb
adc
adc
adcl
je
and
dec
dec
and
dec
in
pusha
sbbl
mov
outsl
lret
int3
or
js
in
cmp
jne
adc
xor
mov
cmp
dec
add
dec
xchg
movsl
rorb
lds
dec
pop
add
jecxz
adc
push
jo
mov
mov
jne
test
mov
aad
mov
loopne
test
pop
jnp
add
cmc
mov
sub
jl
enter
and
cld
aas
pushf
pop
inc
arpl
aas
dec
out
adc
loop
das
frstor
fsubr
lock
push
cmp
adc
sbb
mov
xchg
add
jg
out
mov
xchg
ret
or
pop
mov
jae
push
loopne
sbb
lcall
and
fadds
mov
inc
movsb
lods
fistpl
fcomps
cmp
inc
mov
xchg
adc
xchg
cmpsb
testl
movsb
js
aad
xor
rcrl
aaa
in
adc
sbbb
mov
mov
insl
push
movb
jo
or
add
xor
lock
push
movsl
notl
sub
push
mov
sub
dec
leave
xor
adc
push
or
cmp
mov
jo
popa
clc
rclb
adc
cmp
pop
jae
test
xor
rclb
test
in
stos
push
rorb
lock
adc
adc
iretw
call
jb
cmp
pop
andb
out
jno
sub
fimull
push
cmp
cwtl
fisubrs
adc
or
movsl
jmp
mov
xor
repnz
jl
rorl
popf
mov
mov
jnp
scas
push
mov
fs
ret
push
repnz
pop
push
shrl
popf
push
mov
mov
cmp
arpl
jb
mov
out
ss
mov
add
xor
cmp
fisttpll
rcrl
loopne
pop
mov
mov
inc
lcall
push
stos
rorl
lock
loop
adc
and
push
das
mov
lock
add
cmp
ret
cmpsb
jg
shr
in
adc
xor
add
mov
dec
xchg
mov
cmp
sub
push
mov
pop
shrb
rcrb
frstor
nop
in
loop
rorb
lds
imul
jne
sbb
mov
dec
fbstp
xor
push
sbb
and
sbb
cs
negl
mov
mov
inc
hlt
mov
adc
stos
inc
inc
xchg
cmpsl
jge
jl
je
in
test
cmpl
jp
aaa
mov
push
lds
mov
inc
daa
push
cli
imul
mov
inc
mov
push
fwait
es
scas
in
sti
xlat
cmp
imul
imul
and
mov
sub
mov
scas
addb
je
popf
or
push
mov
hlt
xor
in
mov
add
mov
adc
test
dec
sbb
sbb
xchg
pop
xor
or
test
push
psrlw
roll
dec
filds
cmpsb
data16
xor
dec
arpl
mov
ret
lods
lret
pop
jl
or
jbe
ja,pn
pop
cmp
int
pop
sbb
sbb
rcrl
dec
inc
enter
adc
sarl
shlb
test
mov
gs
inc
shlb
movsl
lods
push
call
outsl
add
inc
dec
xchg
mov
push
cmp
xor
stos
mov
mov
pop
into
movsl
repz
fsubr
loopne
sbb
stc
shrl
inc
ja
sub
push
adc
inc
aad
fcomps
jno
dec
push
sbb
ja
cs
jmp
jo
sbb
testl
fidivl
cld
xchg
sub
pop
insl
add
stos
lods
fnclex
cltd
std
adc
inc
jmp
adc
push
dec
and
test
pusha
cmpb
popf
xchg
push
stos
enter
inc
fcompl
mov
xchg
xor
push
mov
aaa
pop
cmp
mov
in
xor
add
movsl
inc
jmp
or
bound
jmp
xlat
pop
dec
fnstenv
mov
adc
notl
pop
mov
pop
fsubr
clc
jmp
js
xchg
scas
scas
pusha
in
stc
inc
out
jb
lock
xchg
jne
mov
lret
pop
xchg
add
pop
xchg
mov
arpl
movsb
lahf
and
ljmp
mov
add
and
cmpl
pushf
sbb
and
mov
aas
cmp
aaa
in
imul
aas
and
pop
push
or
pop
icebp
out
dec
adc
pusha
sti
aaa
jae
cli
sub
add
daa
pop
jmp
pop
cmp
lods
aad
mov
inc
cmc
lds
cmp
fsubr
or
sbbl
int3
dec
lock
test
clc
lcall
and
inc
cmp
jo
pop
rcll
xchg
loope
pop
cwtl
xor
jg
xchg
mov
cmp
mov
addr16
sbb
in
jmp
sbb
rorl
inc
aad
rorb
dec
fbld
jmp
cs
and
pop
fnstcw
mov
mov
outsl
push
imul
xlat
mov
ret
mov
xlat
and
jmp
popa
add
loope
mov
push
inc
in
push
gs
or
pop
enter
xchg
rcrl
out
sub
pop
pop
jnp
cmp
inc
mov
mov
sbb
popf
bound
fsubp
dec
lcall
sbb
pushf
cmpsb
cmp
pop
cmpsb
xchg
mov
or
mov
fbstp
lcall
cmpsl
cmp
pop
negl
mov
test
lcall
lcall
xor
popf
cmpsb
cmp
pop
daa
sbb
mov
mov
fdivp
cmp
mov
rclb
cltd
std
stos
mov
jecxz
xor
push
lret
imul
sbb
add
xchg
mov
ret
movsb
cli
cmpsl
xchg
inc
ret
and
lret
jmp
inc
adc
mov
inc
xor
pop
jmp
or
hlt
cmp
or
sbb
mov
sub
addl
sbb
imul
les
mov
in
daa
mov
int3
imul
lock
int
in
fbstp
xchg
dec
mov
imul
add
xchg
sub
and
jno
push
push
in
repnz
jecxz
lods
imul
push
mov
fbstp
lret
pop
fwait
cmp
fdivs
clc
inc
scas
jg
inc
ficompl
sahf
sub
pop
ss
sub
jnp
mov
das
push
mov
lods
dec
and
ds
inc
dec
mov
out
lods
cmp
lea
pop
dec
and
add
in
sahf
pop
add
add
mov
push
jns
mov
inc
push
push
jg
cmc
mov
popf
ret
in
xor
aas
xchg
and
push
xor
sub
xor
stc
cmp
out
scas
cmp
fisttpll
hlt
sub
cmp
sbb
dec
mov
scas
sbb
mov
xor
and
add
int3
pop
clc
push
push
out
adc
cmp
outsb
sub
mov
rcl
imul
cmp
ja
sbb
pop
jns
in
stos
cmpsb
daa
stos
jg
sub
mov
mov
sub
sti
pop
jge
lret
xchg
sbb
rcrl
pop
cmp
sub
movsb
repnz
mov
jns
repnz
insl
fsts
xor
lret
das
dec
or
push
call
int3
xor
push
addr16
popa
xchg
insl
insl
add
xchg
addr16
shl
mov
pop
notb
lret
sti
cwtl
bound
mov
ss
xchg
sti
daa
ss
fs
mov
jae
jp
push
mov
rcl
and
add
jne
inc
fldenv
scas
shr
pusha
imull
sbb
pop
cwtl
das
cmp
pop
outsl
sub
mov
and
dec
dec
ud1
pop
jmp
sarb
cwtl
loop
inc
sub
mov
xchg
push
push
adc
xor
fiaddl
pop
int3
cmp
and
xchg
int3
outsl
sbb
push
adcb
insb
idivb
inc
imul
xor
rorb
pop
aaa
mov
fnstcw
movsb
add
aaa
pop
mov
fsub
pusha
pushaw
jno
sbb
pop
or
popf
pushf
sub
or
clc
shl
sub
sub
insb
sub
xchg
xchg
in
adc
inc
clc
sub
jnp
mov
dec
push
inc
ljmp
pop
sub
mov
fwait
add
stos
mul
mov
int
ja
and
mov
ficompl
push
push
jae
popa
mov
xor
test
fstpl
int
out
ja
mov
fwait
push
fdivrl
mov
adc
shrl
adc
mov
aas
out
inc
cmp
test
seta
leave
cltd
adc
dec
dec
mov
cmpsl
jecxz
negb
mov
das
pop
test
lret
test
or
jo
cmp
aas
cmc
adc
push
push
push
push
fmul
mov
add
sub
aad
and
dec
push
stos
scas
adc
shll
xor
mov
push
hlt
sti
dec
out
pop
add
sbb
pop
xor
mov
mov
push
cwtl
aas
clc
jns
ret
cmpsb
pmovmskb
loopne
movsl
jp
push
xorl
stos
inc
pop
insl
mov
pop
adc
mov
jbe
sub
movsl
add
pop
xor
fidivl
dec
jnp
es
rcll
mov
jmp
mov
inc
and
fnsave
je
es
push
cmpsl
cmp
popl
xchg
shll
loopne,pn
stos
scas
out
mov
mov
out
cmp
and
jl
sti
lods
jb
sahf
sarl
aam
aas
pop
cmc
jo
lret
xchg
jb
pop
pusha
sub
pop
pop
bound
xorl
mov
in
inc
adc
dec
sbb
jmp
push
pop
in
fwait
movsb
je
jl
imul
jle
jb
les
sbb
or
faddl
lods
sub
sub
addr16
pop
jne
cmpsb
cmp
dec
dec
movsl
jmp
dec
ja
sti
sbb
pop
dec
sbb
push
cli
in
add
dec
int3
faddp
cmpl
mov
roll
or
pop
popf
dec
in
dec
add
sahf
mov
dec
outsb
nop
aas
pop
pop
fwait
hlt
adc
iret
xor
je
inc
fcoml
mov
lret
cld
arpl
out
inc
adc
mull
or
dec
call
stc
xchg
outsb
sub
mov
xrelease
jne
dec
aad
test
shll
mov
mov
inc
push
add
shl
pushf
pop
outsb
xor
xlat
lock
fwait
es
sbb
mov
imul
mov
imul
add
xchg
movsl
mov
test
aad
ljmp
aam
pushf
repnz
inc
cmp
jl
mov
inc
fbstp
in
inc
outsl
pop
fcmovnbe
add
cmpsl
sti
pop
out
sti
into
push
in
mov
in
in
fdivl
mov
cmc
or
xchg
cmp
xchg
sub
sbb
fwait
scas
cmp
gs
add
xor
loop
inc
push
sbb
test
movsb
xchg
cmpsb
shrl
mov
jns
add
movsl
ds
shrb
and
js
pop
push
mov
int3
push
movsl
rcl
push
push
sbb
mov
lret
push
addr16
or
mov
mov
arpl
jnp
jnp
ljmp
fcmovb
xchg
push
pop
fstpt
xlat
leave
repz
dec
push
jnp
out
out
mov
inc
sub
pushf
push
push
imul
push
mov
gs
mov
daa
xchg
jae
sub
push
mov
in
and
in
sti
inc
repnz
sti
hlt
push
scas
mov
stc
inc
jne
imul
cmpsl
push
stc
nop
cmp
rcrb
into
jnp
jmp
or
sub
test
pop
pop
fwait
dec
push
mov
or
jecxz
cmpsb
push
add
dec
or
cmc
mov
mov
jo
mov
push
sbb
imull
jb
pusha
sub
dec
out
fistpl
mov
repz
ljmp
or
leave
flds
or
sbb
lret
dec
aaa
adc
icebp
mov
mov
std
out
frstor
into
fcomps
jae
sbb
repnz
mov
mov
arpl
mov
aam
xor
movsb
aas
icebp
sti
xchg
inc
xchg
in
scas
aas
loopne
sbb
mov
or
outsb
or
fstpl
xchg
nop
jle
test
or
sbb
daa
cli
and
outsl
mov
xorl
lds
cli
fdiv
insb
jae
aad
popf
mov
fadds
out
arpl
stc
icebp
mov
add
je
arpl
inc
sub
sahf
jl
mov
sbb
xor
outsl
insl
sbb
add
and
and
mov
lods
jb
cld
or
sub
cmp
jmp
cmp
sub
push
in
xchg
negb
sbb
jno
into
lods
scas
decl
in
xchg
sbb
aad
cmp
mov
adc
jb
dec
jl
out
daa
jl
popa
loope
dec
repz
jb
sub
nop
inc
pusha
popa
jge
mov
mov
add
push
fisttpl
sbb
dec
or
cmpsl
or
lods
add
cld
pop
mov
int
loopne
ret
adc
sti
cmc
inc
fsubs
sbb
fidivrl
out
pop
ret
loopne
mov
lds
call
stos
lods
sub
cld
mov
mov
out
int3
mov
inc
push
sbb
shrb
call
sub
push
and
mov
test
mov
sub
hlt
fwait
mov
pop
scas
inc
push
inc
flds
jae
cmp
pop
cmp
cwtl
je
cltd
pop
push
imul
dec
xchg
jbe
sub
mov
fsubl
push
mov
add
sbb
shrl
in
cltd
lea
clc
out
sbb
enter
iret
sub
inc
test
dec
fwait
mov
scas
xor
cwtl
data16
gs
mov
jbe
aad
mov
sub
pop
xlat
aas
mov
and
or
inc
mov
bound
or
in
lods
sub
ljmp
dec
fwait
and
je
jnp
test
pop
pop
filds
xchg
sarl
rclb
push
vcvtsd2ss
cmpsb
mov
sarl
jns
data16
sbb
xchg
pop
lcall
push
add
and
xlat
jno
or
incb
hlt
adc
out
pop
out
ja
mov
and
push
ret
faddl
adc
push
sub
xor
xor
insl
adc
pushf
xor
clc
xchg
pop
inc
fadds
or
and
in
cmp
repz
imul
jnp
andl
cld
ret
adc
ja
in
aad
mov
mov
rcl
jmp
mov
mov
xor
es
pop
add
xchg
insl
dec
stos
test
pop
jecxz
sub
xchg
jb
cs
lods
mov
xchg
dec
lcall
cwtl
pop
in
cmpl
bt
cmp
shll
pop
mov
out
decl
jg
les
xor
cld
xchg
jge
bnd
lods
loopne
sbb
imul
or
mov
push
push
shll
movsl
cmp
jg
movsb
scas
xchg
sub
mov
mulb
nop
scas
dec
out
cld
push
cwtl
outsb
outsl
add
xlat
mov
adc
cltd
std
inc
sbb
pop
leave
loopne
mov
fldl
mov
sbb
adc
ret
ret
pop
mov
dec
out
cltd
loopne
xchg
mov
lds
int3
pop
sbb
lods
sti
adc
mov
inc
and
test
push
push
in
cmp
mov
stos
mov
xchg
rcrl
mov
cmc
or
sub
cmp
ljmp
mov
arpl
jmp
ficoml
cmp
outsb
pop
loop
xchg
movsb
into
xchg
cmp
push
mov
pop
jno,pn
inc
aaa
dec
std
insl
lock
stc
pop
iret
cld
and
mov
hlt
pop
mov
fs
out
cmp
jge
add
mov
mov
xchg
push
iret
push
or
inc
push
cmp
mov
sti
cmp
sub
push
fwait
scas
inc
int
mov
int3
jmp
enter
push
jmp
jne
in
inc
xchg
jae
mov
mov
int
and
mov
jp
loope
mov
mov
and
imull
scas
fcompl
add
cwtl
pop
lock
adc
adc
incl
xchg
mov
inc
inc
cmc
inc
jl
imul
and
dec
fucomi
outsb
mov
xorl
insb
shll
push
sahf
sbb
pop
push
pop
negb
cmp
push
add
mov
mov
sub
xchg
shlb
or
scas
ds
dec
add
push
icebp
pusha
push
jbe
jb
jb
push
int
and
sub
mov
adc
mov
out
dec
fcmovne
push
adc
aaa
ja
imul
push
nop
jnp
imulb
adc
arpl
or
pop
imull
ss
pop
pop
pop
sub
mov
dec
fdivs
jne
test
sbb
xchg
cmp
mov
or
inc
or
sbb
or
lcall
cmc
mov
lcall
mov
xchg
rcll
add
push
ret
cmp
outsl
mov
xor
pop
scas
aaa
sbb
ficomps
cmp
sarb
mov
cld
movl
cmc
int3
les
dec
sbb
inc
sbb
and
sub
inc
add
xorl
or
scas
xchg
mov
mov
fdivl
iret
jecxz
ds
test
stos
lret
or
leave
arpl
inc
fdivs
rcrl
sub
add
addb
sub
add
ja
cmpsb
xor
jb
jg
stos
inc
test
add
fnsave
gs
cmpsl
xchg
mov
shll
cwtl
fidivl
inc
jbe
jl
sbb
sub
add
fistpll
and
cmpsl
out
popf
xchg
and
neg
adc
jbe
jnp
mov
xlat
out
adc
call
pop
lahf
mov
shrl
or
fnop
jbe
into
or
mov
and
jle
jne
jns
test
nop
loopne
pop
push
dec
mov
iret
sub
repz
movsb
mov
lret
sarl
mov
ss
cltd
xor
push
mov
mov
sbb
stos
dec
xor
enter
pop
xor
or
add
push
outsl
cli
and
inc
fdivrl
mov
pop
js
mov
cmp
stc
or
cmp
clc
scas
loop
jae
out
lods
jmp
xchg
fucom
inc
xchg
push
es
dec
loop
in
outsb
pop
lock
lcall
mov
pop
xchg
sti
xor
push
push
adc
push
xchg
lds
mov
out
pop
mov
sub
dec
icebp
stc
jb
pushf
cmp
cltd
sahf
push
push
jns
leave
push
or
stc
lock
xchg
adc
xor
pop
sub
adc
lret
movaps
aas
xchg
fcom
jb
inc
sub
pusha
loope
pop
outsb
dec
pop
fdivrs
inc
outsb
outsb
lock
sahf
into
fsubl
cltd
cltd
outsl
cwtl
sub
in
sub
jp
cmc
ja
cmp
jle
pop
pop
out
cmp
sbb
or
cli
push
mov
pop
pusha
mov
pop
pop
sbb
ret
cmp
sahf
push
add
mov
lahf
ss
sub
mov
dec
shlb
movsl
pushf
xchg
adc
mov
mov
in
imul
cltd
or
mov
rcl
inc
push
or
mov
inc
inc
scas
push
fsubp
push
pushf
sahf
inc
pop
mov
out
stos
mov
adc
cmp
cwtl
mov
sbb
jae
lahf
mov
les
or
push
sbb
jp
insl
xchg
stc
push
out
mov
inc
sub
ret
xchg
icebp
pop
or
inc
loop
test
cwtl
lods
push
fidivrs
add
dec
popa
xor
mov
out
lods
aam
sti
adc
mov
push
movsb
push
xlat
add
jecxz
pop
add
mov
faddp
subl
rorb
or
adc
std
pushf
mov
test
out
out
cs
jnp
add
jp
test
iret
lea
inc
add
std
mov
fdivl
mov
leave
and
pop
imul
xor
mov
xchg
or
fdivr
sahf
push
jae
rcr
in
mov
mov
sbb
jmp
out
ds
cmc
cmp
add
xchg
cs
outsl
repnz
test
fsubrp
in
xor
test
pop
cmp
int
sbb
iret
test
cmpsl
xchg
pop
in
insl
cmp
pop
mov
jb
jp
addl
jecxz
js
xor
mov
jnp
sbb
xlat
inc
aaa
dec
dec
xchg
mov
jg
gs
or
mov
aaa
mov
sub
lret
dec
jbe
and
mov
loope
stc
pop
xchg
xor
dec
dec
repnz
inc
loope
xchg
and
dec
xchg
inc
push
jns
arpl
xchg
push
inc
or
aam
jmp
adc
mov
mov
sti
out
dec
and
adc
ret
adc
es
imul
push
bound
aas
pop
es
push
jb
dec
bound
mov
mov
movsl
mov
into
fldcw
pop
cmp
pop
cmovp
pushf
out
jge
mov
bound
imul
pop
je
pusha
jnp
rcr
or
adc
and
lea
or
int
push
jbe
push
xorb
xchg
sub
sub
in
fdivs
test
mov
adc
and
pushf
scas
sar
push
scas
inc
mov
pushf
sbb
pop
sub
dec
mov
movsl
pop
pop
mov
mov
test
jbe
js
cmp
push
decb
outsb
jbe
mov
xor
dec
stos
xchg
xchg
adc
jbe
dec
in
popa
inc
and
inc
or
je
xchg
popa
pop
mov
mov
jl
push
mov
leave
fxch
rolb
push
jno
scas
jnp
mov
or
push
data16
mov
adc
rorl
cwtl
or
sbb
mov
dec
inc
mov
bound
lea
jl
sbb
add
xchg
xchg
adc
scas
inc
mov
push
cmp
mov
je
lahf
pop
push
sbb
hlt
popf
bound
jmp
aas
shll
lock
xor
out
popa
insl
jg
mov
or
or
popa
ret
or
add
and
jmp
imul
lods
pop
pop
addr16
dec
or
dec
data16
pop
rorb
mov
sahf
inc
adcl
cwtl
sub
insl
sbb
dec
pop
ja
adc
add
cld
and
xor
aaa
fs
mov
dec
pusha
and
maxps
add
xchg
sub
out
les
lods
sub
push
jg
sub
mov
stos
push
mov
in
and
or
and
int3
jns
pop
stos
pop
push
push
add
xchg
sub
push
out
jne
inc
and
mov
sbb
mov
jne
jmp
out
and
test
xchg
inc
out
ja
lea
arpl
clc
movsb
cld
jge
mov
add
into
fisubl
arpl
fsubl
add
jns
add
cmp
sbb
mov
add
xor
mov
push
aaa
mov
pop
fsubl
sbb
stos
lods
nop
mov
clc
aad
stc
mov
scas
rcll
xorl
imul
scas
aad
pushf
mov
pop
je
xchg
cmpsb
xor
lock
out
dec
sahf
or
call
lds
pop
loope
ljmp
push
mov
sub
mov
mov
dec
out
ror
enter
push
jnp
mov
sub
bound
jb
gs
sub
jno
insb
lcall
cmp
nop
and
adc
fdivrl
cmc
test
cltd
mov
mov
addr16
sbb
insb
jnp
stos
xlat
mov
jle,pn
adc
into
lock
testl
push
fcomps
hlt
fidivrl
fs
dec
fsubrs
scas
mov
ds
dec
loopne
nop
fnstsw
gs
in
movsb
mov
xor
dec
imul
cld
push
jbe
lea
movsb
xchg
mov
outsb
pop
and
push
mov
pmulhuw
mov
scas
icebp
andl
or
push
test
pusha
daa
inc
sar
add
xor
icebp
mov
sbbb
aam
mov
addl
loopne
test
ret
popa
test
adc
push
aam
fs
sbb
pushf
mov
loopne
out
iret
mov
pop
je
jl
and
fucomip
pusha
pop
push
sahf
ds
add
sti
in
jnp
dec
inc
in
pop
clts
into
and
lods
mov
push
or
test
arpl
ja
mov
outsl
sub
pop
mov
loope
sbb
mov
fnstenv
imul
mov
mov
mov
dec
add
ror
inc
push
bound
jl
xor
stos
insl
xor
jo
xor
sub
jmp
outsb
int3
aam
test
aaa
mov
popf
cmp
and
mov
mov
add
gs
mov
xlat
mov
insl
mov
xchg
fdiv
enter
jno
mov
out
sbb
and
aas
dec
in
or
pop
mov
rorl
xchg
adc
adc
inc
xor
cld
jne
mov
pop
add
or
or
mov
stos
stos
aam
arpl
gs
dec
mov
repnz
icebp
dec
fcom
mov
mov
add
and
dec
testl
inc
mov
mov
cwtl
cmpsb
pop
jmp
addr16
lods
scas
lgs
nop
mov
sbb
sti
sahf
insb
push
add
jae
sub
jbe
fwait
sti
pop
scas
mov
mov
fcoms
jle
test
int
lods
cmp
movsl
and
adc
add
inc
dec
cmp
leave
out
mov
enter
int
sahf
lahf
mov
push
add
add
data16
scas
push
addb
jns
lret
cmpsl
inc
push
fisttpll
mov
imulb
leave
mov
pop
imul
mov
testl
es
in
add
xor
mov
mov
xchg
imul
fs
push
scas
dec
xor
les
ds
jae
jae
dec
cld
push
mov
clc
or
xlat
sbb
cwtl
int3
mov
jne
adc
rcr
testl
and
pop
pop
sub
cmp
das
dec
test
mov
out
int
push
fldenv
dec
ja
push
test
cwtl
shrl
loop
fistps
mov
add
jbe
add
pop
cmp
inc
orl
cmp
sbb
sar
inc
mov
sub
jae
cmp
and
dec
in
jg
xchg
add
stc
jmp
cmovbe
arpl
lods
imul
int
shlb
pop
mov
xchg
mov
pushf
add
cmp
es
in
dec
loop
pop
push
pop
cmp
aaa
inc
cmpsb
stc
popf
mov
xchg
adc
push
inc
bound
cltd
cmp
sbb
push
js
in
add
xchg
ss
jmp
test
jno
xchg
addr16
cld
movsb
xlat
fdivrs
test
ret
inc
inc
fisubrl
sub
dec
mov
xor
mov
iret
std
gs
arpl
pop
sbb
fdivl
andb
inc
cmp
movb
mov
xchg
pop
rorl
mov
ja
add
cmp
mov
xchg
andl
stc
xchg
cld
sbb
xor
in
inc
fisubrl
mov
bound
popf
pop
bound
dec
aaa
push
imul
mov
sbb
in
lahf
stos
call
lahf
outsb
jle
lret
cmc
mov
ret
pop
mov
or
out
ret
pop
mov
and
inc
or
ret
stos
pop
stc
pop
into
sub
or
movzwl
xor
push
and
pushf
mov
scas
cmp
push
mov
jb
imul
mov
cli
xchg
sti
rcl
hlt
dec
xor
mov
cmpb
pop
mov
std
push
jp
stos
mov
push
dec
fldt
rorl
inc
fadd
stos
dec
ficoms
and
and
mov
stos
inc
dec
mov
dec
jle
jmp
pop
test
fwait
popf
fadds
xor
nop
insl
sub
dec
pop
imul
or
je
stos
jbe
scas
test
lahf
cs
pop
fdiv
cs
mov
sub
xchg
push
cmpsb
jp
mov
adc
out
adc
xchg
add
add
idivb
int
aad
stc
mov
or
ss
clc
jg
adc
jo
add
push
es
jg
aaa
inc
cwtl
inc
inc
andb
adc
jbe
cmp
add
fstps
lock
rcrb
aaa
dec
lret
sub
push
cltd
adc
xchg
sub
stc
aas
loope
sbbl
js
xchg
std
js
scas
mov
xor
fists
fldl
sbbl
lahf
bound
cmp
enter
addr16
lcall
scas
out
sbb
or
mov
xor
out
fs
fadds
popa
xor
in
push
frstor
or
dec
fnstenv
mov
or
fdivp
sarb
rclb
push
mov
test
lret
fidivl
pop
mov
push
into
add
mov
dec
jl
mov
xor
sbbl
jecxz
std
shr
mov
lds
pop
outsb
mov
pop
xlat
clc
repnz
jge
aaa
lcall
xchg
pop
xchg
jne
add
sbb
adc
jne,pt
sarb
xor
jmp
inc
fdivs
ja
mov
notl
add
or
ss
dec
addr16
jp
jge
out
jne
xchg
or
loope
sbb
mov
cmpsb
lret
cmp
fwait
int
int3
and
add
rolb
sub
fs
sahf
push
cmp
jge
cltd
mov
loope
cli
jge
adc
cmpsb
cld
or
jecxz
sub
rorl
repz
fiaddl
scas
jp
mov
test
dec
adc
in
call
jae
es
rorb
push
xchg
addl
mov
push
or
and
fcmovb
mov
and
mov
lcall
adc
sub
add
xor
sbb
push
arpl
pop
out
hlt
and
and
jb
push
scas
movsb
and
xorl
lods
or
paddb
inc
jecxz
xor
jmp
push
push
or
stc
sub
imul
subl
mov
push
pop
out
shrl
sbb
cld
or
push
sbb
or
xlat
push
mov
sbb
gs
out
mov
test
xchg
lcall
cwtl
daa
sbb
jb
mov
loope
push
cmpsl
inc
inc
mov
mov
sbb
inc
fdivrs
xchg
inc
rcrb
nop
fs
outsb
daa
adc
jns,pn
cmp
mov
mov
or
ret
mov
jno
lahf
loop
ss
pop
add
imul
lahf
jb
inc
pop
mov
inc
out
xor
into
loopne
mov
mov
fidivl
shr
push
pop
adc
and
iret
scas
jno
rcl
lds
popa
test
lret
bound
shll
arpl
stos
push
addr16
mov
xchg
pop
js
sub
into
and
add
xchg
push
jmp
aaa
jg
in
insb
andl
add
imull
outsl
ja
and
dec
push
leave
add
sti
cmpsb
cmp
mov
pop
jecxz
and
sbb
pop
repnz
std
test
or
cs
or
inc
pop
outsl
mov
lcall
nop
cs
repnz
push
push
cmpsl
adc
cs
jnp
mov
aad
mov
repnz
movsl
rorb
jns
fwait
or
popl
mov
pop
or
fidivrs
mov
and
imul
ffreep
pushf
mov
into
in
sub
popf
jae
and
sbb
in
jb
subb
pop
push
pop
outsl
push
xchg
or
shlb
jno
fwait
pusha
cmp
xchg
stc
call
mov
es
sbbl
dec
das
lahf
ss
jno
cli
jecxz
inc
pushf
xor
mov
jns
or
adc
mov
adc
les
stos
movsb
hlt
mov
fistpl
out
test
mov
and
faddp
sbb
pusha
testl
jle
jnp
xchg
push
popf
or
repz
jbe
pop
aaa
xchg
leave
mov
in
sbb
jno
inc
insl
mov
insl
adc
inc
lds
movsb
adc
adc
add
stos
rol
sub
int3
fs
daa
stos
mov
jge
inc
jno
bound
pop
frstor
sbb
adc
fmulp
sub
push
repz
fldt
push
out
mov
or
js
daa
adc
pop
divb
sbb
movsl
pop
adc
jnp
xchg
ret
inc
test
xchg
dec
mov
cmp
dec
cmp
xchg
jle
bound
jl
xchg
xchg
int3
fs
xor
jnp
adc
icebp
mov
jg
inc
mov
jl
adc
xlat
sbb
mov
xchg
add
test
aas
daa
pop
cmc
pop
pusha
mov
sub
cwtl
out
test
shlb
push
add
or
in
add
jp
pusha
xor
mov
xchg
ret
lds
insb
pop
sub
into
dec
xor
inc
mov
arpl
pop
ret
hlt
jl
adc
lahf
inc
sbbl
bound
not
mov
push
in
push
mov
and
hlt
inc
cmp
imul
inc
daa
jbe
mull
or
cmc
xchg
stos
sub
jp
dec
js
cmp
pop
xchg
add
mov
push
popa
dec
loope
orb
movsl
cmp
dec
les
aas
into
gs
loop
into
scas
and
pop
mov
cwtl
mov
jne
movsb
push
jl
dec
dec
mov
jp
lcall
adcl
test
sbb
fnsave
jle
mov
pushf
cli
dec
xor
pop
scas
jo
push
popf
or
adc
addl
xchg
or
add
ret
pop
push
mov
js
mov
sbbl
dec
cmp
scas
insl
insl
test
lahf
mov
mov
int3
cmpsl
add
ret
and
pop
push
jp
ja
jbe
les
js
jbe
sbb
dec
lret
std
xchg
add
add
js
and
lret
cmpsl
ds
pop
testb
loope
imul
call
lahf
fcompl
or
sbb
mov
xor
cltd
push
sbbl
stos
out
test
lahf
cltd
xor
sti
or
sub
mov
sub
in
pop
test
xlat
fdivs
pop
cmc
cs
mov
or
mov
jno
aas
xchg
sub
stc
nop
cmp
das
sbb
push
jmp
imul
push
push
call
lock
clc
inc
dec
pop
jnp
cmp
test
or
cli
sti
daa
mov
dec
inc
test
fimull
or
push
xchg
adc
push
in
mov
shll
mov
adcb
aad
loope
stc
adc
add
popf
jl
leave
mov
pop
lock
fdivl
or
sub
jb
inc
fnsave
fs
push
out
insb
sbb
sbbb
cmp
mov
scas
mov
fscale
xchg
nop
adcb
push
pop
jne
and
enter
lret
add
push
jmp
and
mov
cmpsb
jae
cwtl
test
test
hlt
int3
mov
cli
sbb
mov
sbb
jnp
outsl
pop
negb
inc
fdiv
ret
notl
js
inc
adc
xchg
sub
mov
inc
fsub
or
enter
sub
mov
push
xchg
lods
sbb
xor
stc
and
cmp
fidivrl
iret
data16
xchg
pop
hlt
ret
mov
pop
sti
mov
xor
pop
xchg
sub
mov
adc
fisubrs
ds
xchg
insb
inc
fwait
xor
mov
mov
and
or
pop
repnz
lcall
push
call
jno
push
mov
lods
xchg
repz
js
dec
lods
push
adc
cmpsb
xchg
or
scas
push
ja
mov
and
xchg
testl
mov
test
jae
outsb
mov
jg
xchg
jae
enter
lcall
jnp
mov
rcrl
adc
scas
mov
jle
jae
cld
mov
jge
sbb
outsb
lds
jge
mov
pop
jo
je
pop
mov
xchg
jns
adc
daa
mov
xchg
jns
dec
lods
nop
cmp
les
pusha
mov
jge
jl
xchg
iret
enterw
sahf
push
cltd
xor
cltd
sbb
nop
lahf
push
in
test
cltd
or
sahf
push
or
mov
lret
outsb
sbbl
push
imul
mov
adc
mov
jg
push
scas
xchg
jge
jb
or
les
xor
adc
pop
dec
or
mov
shll
fcompl
cmp
dec
std
or
or
insb
add
adc
mov
std
les
frstor
mov
in
insl
and
shrl
stc
or
push
hlt
fdivl
and
xchg
push
icebp
pop
repz
mov
sti
adc
sub
testb
dec
loope
sti
xor
sub
mov
and
mov
stc
decb
push
clc
data16
sub
ss
cmc
scas
inc
sub
mov
pop
icebp
adcb
adc
das
xor
icebp
sub
mov
out
cmc
xor
daa
cmp
adc
mov
sub
out
es
inc
mov
je
pop
icebp
cmp
inc
and
fwait
cmp
or
sti
adc
sub
jae
decl
sub
sti
sub
sub
mov
xchg
add
cmp
push
int3
arpl
mov
pop
mov
inc
add
pushf
xchg
xchg
sub
mov
push
call
pop
out
test
inc
sbb
sbbl
jmp
icebp
sub
add
xor
push
pop
push
mov
movsl
cmp
loope
repnz
cli
scas
inc
xor
dec
out
push
int
xchg
insl
add
fildll
mov
pop
push
xchg
sub
stos
movsl
mov
sti
testb
and
les
inc
fidivl
insb
cmpsb
cmp
leave
mov
add
inc
inc
push
mov
data16
xchg
xchg
in
lds
lods
inc
pop
add
scas
xor
sbbb
push
mov
orl
rcl
dec
fists
testb
cmp
jns
inc
cmp
jb
stos
inc
rclb
pop
pop
jmp
lret
and
jb
outsb
inc
hlt
mov
and
shl
push
out
repz
out
xor
mov
jg
lds
shrl
lds
out
cld
xchg
sbb
mov
subl
and
rcr
xchg
push
jecxz
mov
cmp
outsb
mov
mov
loopne
mov
ds
imul
push
insb
sbbl
insl
or
inc
xlat
or
daa
jo
push
je
mov
leave
clc
dec
dec
in
and
cs
sbb
dec
jae
pop
test
roll
repz
adc
adc
cmp
cmp
pop
shrl
mov
repnz
add
adc
cld
adc
sub
mov
idivb
push
ljmp
sbbl
push
jne
cmpl
mov
mov
fldt
jge,pt
test
int
mov
mov
xchg
or
cs
xor
mov
mov
aam
dec
push
inc
mov
mov
lcall
mov
sar
xchg
pop
dec
mov
jle
lock
shrl
js
test
es
testl
dec
lcall
or
les
movsb
sbb
fisttps
cli
cmp
das
sub
call
mov
fisttpl
xor
cmpsb
cmp
lcall
sub
mov
adc
rep
pusha
leave
cwtl
cli
xchg
dec
ljmp
push
sarb
negb
dec
aam
pop
and
outsb
popa
inc
xlat
pushf
and
or
and
xchg
xorb
xchg
cwtl
adc
xor
mov
into
cmp
cmp
scas
mov
test
in
sahf
mov
fisttpll
or
push
in
popa
add
andl
aad
lcall
push
mov
fs
jns
dec
aam
xor
out
mov
lahf
mov
sbb
scas
pop
call
stos
aad
jo
push
divb
aam
cmpsb
adc
stc
js
rclb
push
inc
stos
cltd
sbb
mov
xor
add
in
sahf
xchg
cmpsl
mov
jmp
mov
cmc
cld
xlat
sarb
stc
int3
fists
mov
movl
push
int
lods
mov
push
cmc
adc
dec
movsl
mov
scas
pop
test
lret
fcom
outsl
mov
fisubrs
mov
mov
out
sbb
sbb
and
call
mov
cld
jl
test
and
inc
jnp
arpl
mov
movsb
stos
xchg
xchg
add
cmp
popf
push
pop
scas
mov
loopne
and
ja
out
add
int
daa
dec
mov
push
add
mov
lods
cs
mov
int
shr
js
add
gs
adc
add
mov
adc
or
xchg
jae
xchg
movsl
loop
pop
loopne
jecxz
frstor
aad
out
adc
jne
shlb
inc
lcall
cmp
sahf
xchg
xchg
jp
xor
sbb
jb
xor
out
icebp
mov
in
sbb
and
fiadds
pop
fidivrs
jb
int
xor
into
push
adc
ret
call
loopne
pop
loope
add
jbe
sub
xor
fwait
sbb
mov
int
push
in
movsl
out
sub
mov
inc
lahf
mov
or
mov
jno
jle
xchg
xlat
cmp
cmp
add
dec
jne
cmp
cmpsb
inc
sarb
or
insb
sub
test
inc
mov
mov
dec
add
adc
inc
popf
mov
ret
loope
sbb
inc
mov
sbb
add
movb
loop
sub
fnstenv
cmp
adc
out
testl
mov
in
ljmp
es
fidivs
adc
movb
scas
pop
mov
hlt
mov
sbb
mov
push
out
xor
lcall
ja
sub
cld
add
lds
inc
mov
xchg
scas
inc
enter
xchg
jg
inc
cwtl
es
call
xor
xchg
je
aam
adc
adc
push
icebp
divl
ret
mov
or
xor
sub
shrb
or
pop
dec
sbb
inc
push
sti
inc
push
dec
jmp
test
lret
decb
jbe
dec
dec
mov
scas
popa
xor
jae
jbe
pushf
jg
xor
mov
inc
sbb
bound
cmp
inc
shlb
dec
shrb
gs
cmp
popf
popa
xor
jl
pop
inc
outsl
jb
cmp
and
jnp
inc
lods
pop
punpckhbw
dec
mov
pusha
imul
je
adc
adc
mov
fmull
adc
mov
add
popa
xchg
sub
mov
inc
or
js
pop
dec
fwait
mov
sub
bound
cmp
cli
sub
ss
add
push
and
test
sbb
jle
loop
add
es
cmp
outsb
sbb
xchg
mov
sbb
xchg
sbb
cli
movsl
add
pop
movsb
mull
mov
in
cmpl
cwtl
sbbl
lcall
dec
stos
rorb
sub
cmp
xor
test
in
sbb
repnz
aad
loopne
xlat
lahf
xchg
call
sti
sub
and
cmp
stos
xchg
sub
dec
jmp
inc
std
test
inc
pop
cmc
mov
outsl
cmp
fimuls
imul
jne
cmc
push
add
pusha
pop
addl
push
push
cltd
xor
cmc
xor
jge
add
int3
push
or
xor
mov
jns
mov
aaa
and
stc
and
xchg
lret
jo
push
push
lret
inc
rorl
and
andl
fmull
in
lock
add
dec
lcall
inc
mov
and
jae
cmp
stos
xchg
add
jle
dec
mov
cltd
call
xchg
jle
gs
movsb
cmp
pop
dec
push
repz
pop
rcrl
int3
aaa
insb
xchg
arpl
aas
data16
push
popa
mov
inc
test
push
and
xchg
js
bound
xorl
les
sbb
or
adc
jp
insl
mov
subb
pop
lahf
lock
call
test
lods
fbstp
xor
inc
stos
gs
cld
inc
pushf
lret
xor
jl
mov
incl
les
jnp
shrl
loope
repz
mov
cmp
psadbw
enter
xchg
inc
mov
lahf
testl
add
lcall
in
das
dec
mov
adc
orl
out
js
out
aam
out
leave
inc
lret
or
in
aas
decl
jmp
jp
mov
adc
xchg
das
loope
sbb
adc
in
jne
inc
stos
in
add
mov
sbb
pop
out
xchg
xor
scas
or
leave
mov
mov
int
jecxz
jne
imul
dec
lds
lock
loopne
xor
ja
lret
sti
inc
and
std
aaa
insl
mov
ss
sbb
sub
dec
cmc
push
insb
fstp
dec
cmp
nop
pop
mov
pusha
mov
lds
ret
pop
cs
cwtl
in
insb
mov
hlt
mov
sub
lods
mov
lret
loope
cmpsb
pop
push
pop
xor
lcall
ret
cmpsb
pop
mov
push
mov
fwait
xchg
fcoml
adc
fcoml
push
das
cmpsl
cmp
jo
pushf
xor
jnp
lods
cmp
push
in
mov
cmp
mov
sti
xchg
popa
clc
or
icebp
test
push
fsincos
sbb
outsb
arpl
inc
enter
xor
inc
cmpsl
adc
inc
and
sub
jge
xor
in
sahf
ja
ret
mov
push
dec
cmp
lea
and
push
inc
cmpb
sub
push
inc
popf
xor
jae
lds
and
ss
es
jl
xchg
xchg
fxrstor
xchg
add
jbe
les
jge
adc
or
mov
and
mov
repz
out
insb
hlt
cmp
and
std
inc
push
inc
mov
add
ja
pop
dec
sbb
clc
xor
ret
loop
push
add
lods
pusha
repz
push
mov
ficomps
mov
mov
add
iret
mov
call
fidivrl
incb
ljmp
mov
mov
xchg
sbb
xchg
mov
ficoms
adc
lret
fimull
into
jp
aam
xchg
in
lock
and
fwait
xchg
bound
outsb
mov
jl
in
popa
cmp
or
stos
jnp
push
inc
adc
xchg
and
sub
loope
out
aad
xlat
imul
lods
mov
mov
pop
add
lahf
xor
lea
add
rcl
push
leave
mov
fstps
into
test
jmp
or
add
adc
push
xchg
mov
xor
pop
out
sbb
hlt
sub
sti
jecxz
rcll
and
xchg
loopne
jbe
add
cmp
add
sbb
clc
jmp
pop
mov
fiadds
pop
inc
test
arpl
sbbl
adcb
jmp
daa
mov
int3
cld
pop
leave
mov
fimuls
aam
mov
inc
mov
int3
jbe
sarb
sti
lahf
and
xor
in
test
lret
out
std
imul
jnp
call
scas
dec
mov
xchg
mov
pop
jo
adc
leave
add
push
int3
orl
ja
or
test
jnp
jo
cmp
sbb
lods
add
repz
rcrb
aad
insl
adc
xchg
mov
xorl
jmp
mov
jno
push
repnz
push
jl
cwtl
sbb
sbb
or
push
mov
adc
and
xchg
sahf
xchg
or
lahf
jp
mov
dec
cmp
insb
imul
xchg
xchg
jp
loop
enter
sub
mov
fdivrl
clc
stos
fisubl
and
cmpsb
xchg
jl
ret
enter
pushf
nop
or
stos
pop
in
sahf
jp
push
btrl
loopne
adc
add
cs
adc
sub
mov
shrl
inc
cmp
xor
in
out
cmp
xlat
rorl
jecxz
aam
fsubs
pusha
pushf
loopne
divb
push
lods
fs
imul
cmp
or
jg
adc
fbstp
push
into
scas
fsubs
fsubr
incb
filds
dec
cmp
xor
fs
xchg
add
or
pop
xchg
xor
fmull
aas
cmp
push
stc
insl
stc
xor
pop
or
jb
lcall
es
lock
shll
cmpsb
cmp
and
test
xor
adc
jge
pop
popf
dec
pushl
ds
int3
xor
mov
xchg
mov
sbb
fwait
shl
sub
outsb
adc
push
mov
loope
cmp
idivb
dec
fbld
xchg
aam
or
scas
cmp
pusha
clc
pop
cmp
idivb
inc
mov
jg
pop
les
dec
sahf
or
jne
lahf
lcall
test
inc
fimuls
and
mov
je
sbb
js
xor
push
sub
leave
cmp
pop
enter
dec
das
fistps
dec
or
pop
xchg
into
push
mov
push
test
jbe
scas
pop
pushl
xchg
lock
mov
mov
and
hlt
xchg
cs
sbb
in
jge
out
sbb
jmp
and
xchg
push
or
push
jg
data16
dec
push
stc
inc
outsb
pop
jg
lea
scas
push
lcall
cmp
iret
lock
sbb
cmpsb
enter
lock
adc
aas
xchg
test
sbb
idivl
cmpsb
nop
cmp
es
fdivl
jae
fs
mov
test
mov
dec
fistpll
dec
mov
and
push
int
insb
xchg
sub
fwait
sub
and
pop
pop
data16
inc
ds
sub
dec
ljmp
jne
sub
mov
bound
push
fisttps
mov
mov
pop
xchg
mov
pop
pop
pusha
add
bound
in
push
orb
inc
dec
add
push
ficoml
pusha
jmp
shrb
inc
int
and
popf
jg
sub
or
std
sub
jo
popa
dec
outsl
into
test
push
stc
stos
gs
pushl
in
inc
mov
xor
xchg
mov
shr
fsubl
inc
mov
shll
ljmp
mov
js
push
jo
aam
pop
lret
push
into
gs
mov
xor
popl
jbe
subl
inc
fisubrl
out
pop
out
dec
xor
pop
lret
cmp
outsb
lods
jmp
push
push
pop
test
pop
aaa
push
call
xchg
cmp
jnp
lds
adc
lahf
int
pop
aad
lock
mov
in
and
cmp
inc
adc
sub
adc
daa
test
and
sub
aaa
inc
test
mov
adc
ret
cltd
sbb
popf
jno
add
andb
lods
inc
jg
push
add
xor
mov
daa
mov
outsb
inc
test
push
inc
sbbl
dec
mov
sub
ficompl
fs
bound
sarl
jbe
xchg
lcall
movsb
insl
and
sbb
dec
xlat
dec
imul
into
in
rclb
sub
adc
addr16
cli
aas
pusha
and
ss
or
daa
adc
inc
imul
adc
pop
mov
inc
pop
insl
aad
dec
call
or
adc
das
cwtl
sub
lret
jge
push
out
sub
push
icebp
cli
jl
out
adc
call
int
fst
sarl
aam
xor
call
or
add
enter
stos
fldt
push
popf
mov
fcoml
adc
clc
loope
xor
mov
int
lret
iret
mov
adc
icebp
sub
sub
in
and
cmp
jge
test
aas
sbb
int
sub
addl
into
cmp
aaa
lods
out
pop
mov
int
dec
mov
fsubrp
pop
hlt
pop
pushl
repnz
sbb
xchg
stos
cmp
mov
stc
jns
jmp
lock
add
mov
and
adcb
test
xor
or
ljmp
xor
mov
in
and
sub
mov
add
loop
data16
cwtl
repnz
xchg
sbb
xchg
test
xlat
and
jecxz
stos
inc
xor
or
mov
repz
enter
ret
lds
loop
add
test
shl
sub
xchg
push
in
ret
sub
adc
and
jne
jno
clc
ds
sar
sub
movsl
lods
xor
bnd
leave
inc
fistpll
mov
xlat
and
nop
daa
testl
cmc
jp
and
fstpt
add
test
repnz
movsl
aaa
fdivrp
sub
sahf
pop
iret
pop
cld
lret
jle
test
mov
stc
jne
and
insl
xchg
lods
sub
mov
add
out
popa
dec
in
cltd
xor
cli
mov
lret
and
push
xorl
icebp
imul
push
jb
call
inc
popl
out
xor
add
push
ss
jecxz
icebp
push
xchg
mov
hlt
xor
daa
xchg
xlat
sbb
mov
mov
neg
inc
shl
scas
jb
fistps
jbe
iret
lret
cmp
out
and
push
fiaddl
sub
lock
add
xchg
popf
mov
leave
push
push
in
popa
aas
and
pusha
leave
xchg
outsb
in
xor
lea
or
mov
lret
cmpsl
pop
orb
inc
or
push
pop
cmp
arpl
ljmp
pushf
stos
inc
dec
push
rolb
cltd
xchg
push
inc
and
fs
push
inc
lods
dec
xor
jl
cmp
out
xchg
test
jno
out
jl
jmp
scas
sub
faddp
pop
or
cmpsl
cmp
add
icebp
mov
mulb
lret
fbstp
loop
movsb
loop
movsb
ja
push
mov
std
jle
mov
add
adc
loope
xlat
arpl
dec
ror
push
loop
push
ret
imul
subb
decl
mov
pop
adc
xor
imul
push
xchg
jle
icebp
into
sbb
in
popf
push
cmp
mov
in
aad
sub
or
fildll
loop
icebp
mov
aam
add
and
loope
stc
das
jae
sub
and
bswap
jle,pt
inc
aad
repnz
add
xchg
jb
je
scas
xchg
and
mov
push
shrb
inc
ror
lock
fbstp
in
mov
xor
mov
sbb
xor
test
jne
xchg
xchg
adc
mov
xchg
xchg
test
sbb
push
pusha
addr16
push
xorl
pop
cmp
push
pop
sbb
or
xchg
enter
orl
or
lcall
pusha
cmpsb
stos
xorb
ret
jno
int
stos
decb
and
pushf
mov
fldt
ljmp
ja
pop
cld
dec
and
push
jns
sbb
push
sub
mov
outsb
stos
jbe
jnp
idivl
std
xor
sub
setp
lretw
xor
shrl
inc
sub
mov
sti
dec
mov
inc
sub
dec
enter
add
mov
lods
shrl
jb
stos
fs
push
lret
ja
outsb
inc
and
test
pop
je
sub
test
push
leave
and
js
lret
test
lret
loopne
xlat
dec
icebp
stos
in
sbb
scas
test
sbb
jle
ret
cmpsb
mov
leave
pusha
or
dec
mov
sub
psraw
sarb
add
into
cmp
pop
and
push
jbe
movsl
push
inc
add
ret
mov
fnstsw
sbb
add
push
leave
insb
pop
lret
sub
stos
xor
mov
mov
gs
inc
mov
mov
push
aas
add
push
and
mov
idivb
mov
mov
mov
lret
in
push
hlt
mov
lret
pop
hlt
fsts
push
stos
mov
push
rorb
and
mov
sti
enter
rcll
push
mov
mov
orb
outsl
imul
cs
jnp
lods
or
mov
or
xchg
nop
push
movsl
loop
add
jno
insl
lahf
cmc
xor
jb
or
mov
mov
lcall
xchg
xchg
in
cmp
sarl
pushf
pop
fimuls
cli
in
dec
jbe
push
mov
test
or
jns
lea
sub
loop
adc
mov
sub
push
mov
in
stos
outsl
push
mov
test
push
inc
sbb
sub
data16
push
sbb
sbb
pop
mov
outsb
repnz
mov
bnd
mov
fld
push
lods
leave
rorb
ficompl
les
xlat
mov
xor
mov
pop
scas
mov
in
dec
iret
mov
or
cmp
add
out
and
lret
mov
rcrb
into
sbb
sub
add
push
pop
lds
sbb
jb
sbb
jo
add
popa
inc
testb
cmp
arpl
inc
add
cmpsb
pop
in
orl
jnp
sub
inc
mov
inc
push
push
in
int3
addr16
inc
ret
sub
xlat
dec
xor
push
fnstenv
or
push
sbb
cmpsb
mov
cmpb
push
xor
inc
popa
fwait
xchg
add
daa
sub
jl
loopne
inc
ss
push
arpl
push
cs
mov
outsl
insb
mov
cmp
insl
xchg
popf
mov
mov
mov
jl
bound
outsb
add
xor
nop
mov
lret
dec
cwtl
aaa
test
imul
sti
sub
mov
dec
add
add
andl
inc
mov
insb
adc
movsl
sub
js
add
dec
mov
cmpsl
insb
arpl
pop
ljmp
popf
mov
stos
push
adc
xchg
lock
data16
and
pop
loope
bound
adc
sbb
rcll
and
stos
pop
lret
or
stc
or
and
paddb
in
jnp
faddl
sbb
or
inc
mov
stos
add
ljmp
iret
fsts
pop
or
lods
inc
or
cmc
push
mov
xchg
je
adc
js
mov
cmp
and
daa
jbe
flds
and
scas
inc
adc
loopne
ja
fisttpll
inc
cmc
sub
les
jnp
into
sbbb
sahf
xchg
outsb
sahf
adc
pushf
js
add
dec
fistps
cld
adc
jecxz
outsl
push
cmp
xlat
dec
data16
cmpsb
rolb
and
in
mov
ja
pushf
repnz
xor
arpl
pop
sbb
mov
in
aam
pop
push
and
insb
cmp
jnp
lods
xchg
xchg
repz
shr
test
cltd
orw
mov
sahf
sti
sub
xor
in
jo
inc
xor
js
dec
ret
fldl
cmp
sbb
mov
std
sub
fldt
push
mov
jmp
pop
std
xchg
xchg
call
or
rorb
inc
mov
mov
jmp
or
push
stos
into
pushf
jg
in
add
shlb
xchg
add
lahf
lret
int
in
cmp
shlb
adc
ja
sub
or
ljmp
xchg
lea
dec
mov
daa
xor
clc
xchg
cmp
add
add
add
fildl
sbb
es
xor
les
sarl
dec
in
lcall
imul
mov
std
pop
xchg
sub
sbb
movsl
push
cmp
add
insl
mov
mov
in
test
or
push
popf
cltd
xor
je
shlb
dec
in
inc
enter
insb
outsb
mov
std
in
cli
jp
add
xor
add
xchg
mov
mov
cmp
shlb
add
es
push
push
rcr
int
mov
das
and
push
push
dec
out
jb
mov
les
notl
sub
sbbb
dec
loop
inc
pop
sahf
jno
imul
fimuls
fiadds
ds
mov
rcl
outsl
push
or
and
push
and
mov
inc
sbb
fistps
icebp
mov
push
xor
insl
or
mov
push
jns
gs
jge
mov
addr16
aas
mov
jb
or
rcr
xor
ss
lea
inc
in
jle
jge
les
fsubrp
jecxz
or
jae
mov
imul
insb
ret
sub
inc
ret
jnp
dec
sub
inc
xchg
jmp
xchg
cmp
jns
jo
cld
mov
in
insb
sbb
jbe
push
scas
hlt
sti
or
mov
lods
add
pushf
add
ret
scas
jg
pop
bound
sub
clc
dec
lcall
inc
repz
or
loopne
test
push
aam
inc
sbb
out
cmp
mov
inc
jp
inc
scas
xor
push
int
jmp
out
mov
iret
outsb
xchg
sub
repz
into
cs
sbb
and
data16
or
and
cmp
xor
mov
xor
dec
pop
cmp
clc
push
fistps
cmp
adc
gs
jge
lahf
push
add
daa
lret
stos
or
jb
rcrb
jo
cmpsl
test
insb
xchg
and
fxch
stos
adc
jg
pushf
adc
push
jo
sbb
sbb
in
mov
push
mov
sbb
sub
out
lds
test
push
xchg
fadd
in
icebp
js
dec
push
lds
pop
mov
pop
inc
je
cmp
rcl
stos
jle
jecxz
das
outsl
out
inc
and
mov
imul
jge
adc
or
push
cld
mov
push
in
xor
sub
and
inc
in
std
pop
aaa
cmp
pop
xchg
loopne
cmpb
leave
mov
mov
sbb
cmp
mov
enter
push
xchg
test
jns
mov
push
xor
cmp
fdivrs
rclb
mov
mov
fbstp
gs
inc
notb
adc
out
push
addr16
ds
push
mov
push
xor
aas
xchg
into
xchg
cmp
or
mov
xchg
sub
sub
sbb
cmc
mov
inc
sub
xor
xchg
sub
movsl
cmp
jl
inc
outsb
in
push
add
popa
clc
sbb
mov
sbb
lods
sub
outsl
inc
mov
inc
and
es
lds
pop
repnz
push
jmp
mov
push
out
aas
test
mov
pop
icebp
push
inc
push
popf
xor
enter
insb
push
lods
pop
dec
push
lods
cmp
rcrb
xchg
push
popf
add
mov
rcrl
push
lods
or
stc
nop
or
das
pop
scas
pusha
push
sbbb
cmpl
mov
rolb
aad
test
lods
inc
mov
rcr
jle
je
pop
cs
sbbl
rcll
xor
popa
push
ljmp
fldl
and
fildl
scas
cmp
cltd
mov
sti
pusha
jecxz
dec
movups
imul
inc
and
mov
mov
js
dec
addb
sbb
and
mov
xor
adc
test
orb
xchg
aaa
cli
loope
das
xchg
ljmp
xchg
movsb
imul
ret
cmp
jb
stc
imul
shr
mov
scas
inc
ss
inc
xchg
cmp
or
stos
mov
fstpt
loopne
jae
and
and
xchg
xor
test
enter
adc
sbb
mov
pop
add
iret
xchg
bnd
daa
jnp
mov
dec
mov
or
or
xlat
jns
cmp
pushf
inc
shrb
sub
cmp
movsl
mov
lods
mov
jge
shlb
xchg
sbb
shll
xchg
sbb
insl
ret
sub
push
imul
xor
int3
hlt
pop
ljmp
xor
into
xor
stos
mov
xchg
lods
xor
je
jo
sbb
xor
mov
sbb
scas
lods
xor
cmp
pop
subl
push
std
pop
arpl
xchg
lods
xor
imul
shl
fnstenv
pop
sbb
addr16
cmp
out
cmp
daa
push
push
movl
repnz
mov
jne
faddl
sarb
jno
test
in
cmp
sub
ss
push
adc
xchg
lock
lahf
jl
xor
xor
test
sub
es
push
nop
jae
psubw
cmp
data16
loop
cmc
or
cmpsb
in
and
pop
pop
inc
inc
adc
ret
lds
les
or
in
and
fs
rcll
leave
lds
dec
sub
data16
cltd
jmp
ja
or
dec
push
xchg
push
dec
or
roll
clc
pop
push
pushf
in
push
xchg
aam
or
push
decl
sbb
xchg
mov
fists
dec
push
push
cwtl
pop
mov
sbb
addb
pushf
cmp
aam
adc
and
cmp
xchg
sub
jns
ss
mov
and
jge
add
pushf
test
mov
lds
es
or
cmp
shlb
iret
mov
lret
mov
scas
loop
xor
sub
pop
adc
pop
sti
sarb
aas
xor
jnp
sub
out
mov
xchg
aas
xchg
scas
mov
fs
push
shlb
cwtl
ds
fstpt
scas
xor
mov
test
jno
sarl
cltd
xor
cmp
outsb
push
pop
movb
pop
add
lret
add
sub
and
mov
fs
pop
push
out
xchg
ds
or
xchg
push
xor
lods
aas
mov
and
ss
cld
or
xlat
jle
pop
push
cmpb
xchg
aam
nop
sub
push
sub
cmp
hlt
or
dec
push
out
pop
int
clc
sbb
es
mov
jmp
xchg
xor
mov
jmp
adc
and
es
dec
xor
je
popf
jbe
repnz
inc
or
push
filds
pusha
xchg
cmp
sbb
sub
in
paddq
jne
push
addb
shll
push
mov
stc
sahf
pop
ret
shr
pop
mov
mov
fistl
ret
ss
addb
xor
aam
push
stos
sbb
outsb
out
out
dec
adc
adc
push
cmp
jmp
ret
js
cltd
inc
shrl
lahf
adc
dec
adc
inc
xchg
cmp
sbb
push
mov
push
in
jno
xor
sbb
rcrl
rolb
aad
adc
pushf
mov
xor
mov
jae
fstpl
push
add
dec
bswap
push
dec
adc
sbb
cs
pop
out
or
pop
or
rcrl
int
or
inc
shll
mov
adc
mov
stos
or
dec
push
data16
adc
call
or
pop
stc
int
into
sti
push
mov
sub
lock
dec
xor
loop
shll
xchg
sbb
jle
leave
xchg
inc
mov
rorl
pop
jb
push
pop
iret
lea
mov
imul
xor
pushf
push
push
push
call
dec
pop
orb
ljmp
jne
shl
push
cli
sbb
pop
push
loope
je
mov
xchg
pop
test
popf
pop
push
push
enter
mov
addr16
insl
push
pop
popa
jmp
dec
pop
rorb
imul
lret
in
stc
jae,pt
push
jecxz
imul
pop
in
dec
hlt
fwait
aaa
ficoml
sub
jbe
stos
jp
push
je
iret
stc
cld
jecxz
xchg
inc
jno
inc
adc
imul
enter
dec
adc
jp
jmp
adc
dec
clc
jo
in
pop
sar
cli
ds
jecxz
cwtl
rcrb
das
ret
push
cld
push
in
adc
sub
enter
aam
bound
push
mov
lds
test
les
inc
sbb
dec
push
and
and
adc
ss
add
aas
sbb
loopne
adc
mov
cmpsl
sub
mov
test
nop
add
jge
negl
imul
es
pop
xor
jb
lds
jnp
sub
push
jg
add
adc
shrb
adc
fnsave
fs
scas
jae
stos
in
xor
mov
pop
add
pop
adc
fdivr
test
int
dec
or
outsb
jmp
and
push
fwait
cmp
xchg
inc
dec
outsb
fstpt
xchg
mov
dec
dec
xchg
es
cwtl
dec
or
xor
mov
lcall
aas
mov
and
inc
push
xor
mov
push
pop
js
ds
sub
popf
push
push
cmp
in
xchg
sub
add
repz
pop
adc
push
lret
pop
mov
xor
aam
mov
pop
cli
jae
jo
or
movb
or
push
rclb
in
xchg
inc
jnp
sbb
in
scas
xchg
inc
test
mov
adcb
loope
js
rcrl
mov
sti
add
xchg
jmp
xchg
jns
mov
loop
lods
xor
cmc
sub
bound
fistps
int3
jb
mov
scas
and
mov
in
cmc
loopne
test
lret
popl
fdivrs
jmp
enter
pushw
push
shll
dec
add
or
fs
fildl
imul
and
in
fdivrl
push
add
std
jnp
ss
cs
rcrb
stos
jl,pn
fdivrs
popa
jmp
sub
and
jge
pop
inc
push
add
adc
pop
pusha
repz
adcb
or
jg
idivb
leave
pusha
insl
ja
imulb
mov
cmp
sahf
and
into
and
insb
es
jl
mov
div
mov
mov
test
mov
jecxz
jnp
mov
fcoml
mov
mov
out
and
mov
pop
and
iret
mov
stos
mov
int
sub
pusha
icebp
or
lret
mov
mov
imul
pop
inc
mov
sbb
lea
inc
fsubs
xlat
outsb
lret
rcrl
in
push
cld
repnz
mul
jecxz
hlt
sbb
insl
sub
sub
dec
int
lock
adc
pusha
popa
push
jns
add
call
add
cmp
or
xor
out
ficoml
sub
shlb
lods
pushf
cmp
repz
mov
push
adc
mov
das
popf
arpl
jns
inc
adc
inc
cs
cmpsb
inc
aad
out
lahf
mov
mov
jbe
fsubs
enter
test
and
jle
jmp
outsl
push
insb
inc
xchg
popa
js
inc
or
popf
mov
pushf
inc
xor
repz
mov
stos
flds
push
cs
aaa
test
lock
andb
addr16
test
or
in
pop
xchg
push
incl
fstps
aam
les
cmp
sbb
and
xchg
cmp
push
mov
mov
mov
out
insl
stc
jae
xor
adc
ret
add
add
push
add
lret
cld
add
jae
sub
mov
xchg
imul
push
xchg
mov
inc
mov
jae
xchg
std
pop
aad
jne
jne
inc
push
and
leave
mov
movsl
push
add
mov
dec
fcom
adc
push
add
psubw
pushf
lock
out
stc
nop
and
push
movsl
and
cli
sub
ds
sub
push
stc
aaa
pop
mov
mov
orb
lahf
ds
xchg
dec
or
jbe
add
fnstsw
pop
ja
dec
inc
roll
rcr
jno
iret
push
lods
sub
adc
enter
ret
xchg
inc
pop
dec
insb
add
cmp
and
fldenv
test
test
fldl
jb
cmc
pop
mov
into
fsub
je
fadds
ja
jb
in
insb
mov
and
mov
fnstsw
pop
push
call
rclb
sub
adc
push
jge
cmp
pop
movsb
fdivl
lcall
xchg
test
or
aaa
jo
pop
movsb
es
inc
decl
dec
adc
jmp
add
out
mov
xchg
or
bound
adc
ljmp
out
push
icebp
pop
hlt
jmp
jae
cmp
push
cld
cmp
or
es
push
mov
mov
lds
shlb
pop
mov
roll
call
test
roll
shlb
xchg
jnp
ja
loope
cwtl
fld
fidivrl
add
arpl
pop
clc
pop
mov
mov
aad
imull
outsb
out
out
and
mov
dec
or
pop
cli
xchg
in
fsts
fidivrs
les
add
shl
dec
call
aaa
dec
sbb
lods
dec
xchg
dec
out
sahf
xor
iret
jmp
jo
test
push
cli
mov
push
ja
ret
inc
push
push
jnp
sub
pop
add
iret
and
mov
jmp
pop
movsl
jg
ret
xchg
adc
xor
out
jecxz
adc
aaa
lcall
mov
repnz
sbbl
cmpsl
sub
aam
push
mov
scas
scas
das
movsl
scas
das
jp
jge
xchg
outsb
test
push
lds
mov
or
jno
lea
addr16
jnp
test
cmp
in
add
pushf
pop
or
jno
jne
sub
push
xor
sub
rolb
repnz
sub
or
or
fcoms
inc
push
pop
sbb
rclb
in
adc
xchg
dec
adc
ja
dec
lcall
pop
sub
cli
jecxz
xchg
cmp
jae
xchg
bound
and
fs
sbb
movsl
xchg
inc
push
sarl
xchg
push
imul
test
nop
xor
jns
pusha
out
mov
loope
xor
add
sbb
pushf
mov
mov
iret
std
dec
ja
arpl
sub
dec
lods
das
mov
mov
adc
mov
adc
inc
sti
movsl
in
jg
sbb
int3
sub
inc
push
imul
push
enter
repnz
loope
jle
xchg
xchg
sti
pop
cmp
xor
iret
ret
fs
inc
pop
jg
sbb
out
mov
out
data16
jle
jb
dec
sub
and
fnstsw
cmp
nop
jne
sub
int3
add
mov
push
sbb
insb
dec
mov
xchg
fdivrl
pop
add
mov
cmp
or
pop
mov
stc
loop
sub
stc
pusha
push
decb
js
push
xchg
ds
mov
int3
sub
call
dec
pop
adc
xor
mov
lods
xor
scas
fsubl
in
mov
repnz
cmp
mov
test
adc
out
loop
xor
test
xchg
inc
lea
lret
xchg
lds
jmp
cmc
es
repz
ja
jno
daa
lock
mov
loope
aad
push
and
pop
xchg
inc
loop
sbb
repnz
dec
daa
mov
ret
lcall
inc
push
xchg
cmp
mov
je
movsb
mov
pop
mov
ficompl
popf
or
js
push
aam
rorb
sub
sub
sti
or
lods
and
dec
or
movsb
pop
rorb
xorl
sub
sbb
or
test
cmp
adc
scas
movsl
push
std
or
cmpsb
sbbb
hlt
aam
mov
rcl
and
fwait
aas
push
cmp
mov
push
rcrl
xchg
insl
dec
loopne
out
mov
jle
bound
add
mov
lods
je
aas
mov
addr16
pop
add
ds
pop
sub
mov
movsl
out
outsb
stos
cmp
gs
mov
vcvtdq2pd
mov
push
jo
cwtl
pop
jb
mov
add
sbb
repz
push
fwait
ds
xchg
mov
fcmovu
adcb
add
jle
fs
std
popa
int
ljmp
adc
mov
cltd
xor
push
outsl
negb
rorl
sahf
dec
adc
fstps
xchg
aaa
loopne
ljmp
push
mov
adc
int
inc
cltd
push
clc
xchg
outsl
lock
jg
jbe
int
pop
ss
lret
xor
mov
xlat
outsl
add
cmp
and
cmp
mov
xor
stos
stos
xor
cmp
pop
add
sbb
rorb
mov
popf
gs
fidivrl
int
or
mov
or
mov
sub
fnstcw
push
xlat
pushf
inc
mov
mov
movsb
mov
adc
jge
mov
mov
lcall
add
xor
jnp
jmp
sahf
bound
mov
adc
outsl
loop
push
pop
jne
xchg
popf
xchg
fwait
sub
hlt
pusha
mov
mov
pop
stc
clc
adc
scas
call
cld
xchg
in
push
jmp
push
push
js
orl
sub
pop
push
daa
test
test
movsb
sbbl
sbb
push
push
mov
test
dec
cld
sub
jmp
repz
decl
cmpsl
inc
in
sbbb
mov
and
mov
pop
icebp
cmpsb
stos
adc
lahf
or
fnstcw
sarb
outsb
arpl
fmuls
xchg
cmp
lret
jp
int3
sarb
sub
mov
mov
and
daa
fwait
and
aam
and
and
jo
outsl
data16
movsl
js
clc
xchg
mov
arpl
fs
fldenv
jg
in
cmp
push
jae
or
inc
adc
xchg
sub
je
xor
xlat
out
out
xchg
cld
pop
and
rcll
enter
dec
jne
or
push
fidivrl
out
mov
add
lret
in
adc
repz
pop
scas
xor
or
cmp
popf
cmp
ror
xchg
jo
movsl
mov
mov
shl
dec
data16
negb
adc
ret
xchg
adc
cmp
sub
sub
jle
add
sbb
dec
jmp
clc
push
xor
test
rcrl
mov
leave
out
adc
in
insl
out
cli
push
mov
mov
lret
mov
mov
test
add
xor
movsl
daa
lods
ss
cmp
aas
out
mov
xor
adc
dec
dec
adc
mov
jno
jmp
repnz
pop
pusha
sbbl
sahf
ja
sar
jl
das
inc
xchg
sub
push
or
data16
insl
jne
rclb
sub
pop
aam
sub
xchg
insb
mov
mov
addb
in
imul
inc
stc
xlat
jns
xchg
inc
or
mov
ret
fucomp
jbe
rol
rcrb
lods
xor
push
outsl
out
movl
add
aad
xchg
cmp
add
pop
outsb
push
push
add
ja
cmp
sub
jbe
cld
fwait
cmp
shrl
mov
enter
lds
scas
js
insl
fdivs
hlt
mov
add
adc
stos
das
mov
mov
mov
inc
adc
sbbb
dec
insb
pop
sti
sbb
mov
push
icebp
popa
jo
in
outsb
push
insl
test
fiaddl
fldt
cmp
add
arpl
cmp
cltd
int
adcb
stos
daa
sbb
cmp
jno
roll
repnz
lahf
cmp
lock
push
ret
stc
mov
xchg
out
in
imul
and
xchg
mov
jmp
xor
pop
xchg
push
js
inc
lds
jnp
aad
mov
mov
or
test
or
cmpsb
sub
lods
negl
mov
test
int3
and
out
aaa
stc
data16
out
and
sbb
aaa
xchg
inc
xchg
push
push
ret
jo
jno
adcb
mov
out
dec
jecxz
mov
imul
pop
add
les
adc
test
mov
insl
mulb
pop
add
aaa
lock
into
mov
scas
imul
inc
jmp
in
cli
or
pop
out
sub
pushf
jne
pop
ror
sub
sub
out
imul
pusha
ljmp
push
jmp
sti
pop
movsb
stc
push
cli
jmp
out
and
aaa
stos
das
sahf
or
imul
mov
js
movsb
loopne
popa
cmpsb
xchg
insb
negb
jbe
call
sbb
jns
dec
jl
test
mov
inc
or
inc
int
dec
mov
adc
mov
cld
pop
pusha
lock
xor
stos
inc
or
cmp
fisttps
nop
cmp
xchg
jns
mulb
scas
jbe
pop
add
arpl
or
xlat
add
push
xchg
fcoms
test
mov
mov
mov
mov
rcll
jb
ja
xor
popa
arpl
call
aam
push
lds
push
adc
jae
jmp
jecxz
inc
mov
jb
js,pt
movsl
push
cs
xchg
sbb
jne
dec
lret
nop
call
std
and
dec
push
push
gs
fs
sbb
into
xchg
iret
xchg
cmp
sbb
dec
adc
and
jmp
xchg
dec
adc
test
lcall
in
jb
jp
push
aas
mov
sahf
dec
insb
ss
or
jecxz
fidivrs
and
pop
push
push
popa
xchg
jns
jl
int3
jmp
cmpsl
adc
lods
sub
insl
out
cld
loop
outsl
sbb
popf
cmp
sbb
dec
and
repnz
mov
call
inc
inc
pop
add
pop
fs
popa
jmp
filds
sarb
ret
lea
cmp
cwtl
inc
xchg
fwait
mov
ret
adc
aam
sbb
mov
movsl
stc
pop
mov
rorb
jle
adc
lahf
jne,pt
in
pop
outsb
in
insb
dec
mov
cmp
mov
mov
arpl
sbb
aad
jne
xor
pop
jge
std
pop
dec
icebp
pop
xor
insb
shrb
push
pop
or
mov
pop
jb
jae
daa
mov
push
push
mov
sahf
cmp
cmpsb
in
insl
pop
jle
out
das
pop
pushf
cmp
fistps
mov
in
xchg
inc
daa
add
cmp
or
pop
and
imul
adc
ret
adc
dec
aaa
mov
pop
das
jae
movsl
test
pop
rolb
fmull
mov
mov
test
xor
or
pushf
aaa
push
cmp
lock
pop
repnz
mov
mov
xchg
xchg
iret
mov
add
cmpsb
cmp
movhps
lock
push
ror
mov
pop
sbb
test
sub
fdivrl
fisubrs
mov
lods
xor
jo
loopne
std
mov
xor
jbe
dec
fcoml
jo
sub
cltd
adc
and
dec
lock
out
pusha
out
es
pop
xor
mov
sub
icebp
or
jo
stos
pop
dec
or
sub
rolb
pop
mov
aas
xchg
mov
pop
push
mov
lock
divb
fdivrl
lahf
jne
in
je
data16
pushf
inc
sbb
in
movsl
dec
ss
jb
sbb
lahf
cmp
mov
pop
push
sbb
idivl
scas
out
xor
lods
daa
stos
pop
dec
adc
test
sub
fidivs
je
cmp
jae
in
sub
mov
pop
dec
cmpsb
xor
inc
cwtl
cmp
clc
rclb
mov
scas
daa
or
cmp
shrl
daa
scas
push
xorb
mov
ss
ror
xchg
adc
inc
outsl
hlt
xchg
jl
pushf
mov
pop
add
fsubrl
mov
add
leave
jnp
xor
and
and
xchg
enter
roll
adc
ja
mov
movsl
cmpsl
xor
in
outsb
mov
mov
test
add
cmpb
ret
dec
mov
daa
test
lods
sub
movsb
inc
adc
xor
mov
jge
aas
lods
sahf
stos
xor
scas
movsl
sub
and
mov
movsb
negl
pop
add
xor
into
mov
xor
adcb
rcl
cmpsl
sub
pop
push
rol
inc
int
mov
icebp
pop
sbb
jmp
int3
fnsetpm(287
inc
pop
rorl
sarl
mov
in
and
xchg
push
add
push
add
jge
xchg
mov
test
lods
adc
hlt
dec
hlt
data16
inc
adc
ds
xchg
mov
xor
sbb
mov
pop
inc
add
inc
mov
insb
subb
mov
movsl
jp
aam
push
add
or
orb
sbb
lods
or
lahf
mov
cmc
fwait
ret
hlt
movsl
xor
in
scas
daa
mov
aad
xor
cmpsb
repz
add
test
or
jne
sbb
xor
jmp
and
jl
loop
xchg
adc
push
ja
bound
xor
jmp
fiaddl
stos
stc
pop
int
sub
fstpt
mov
mov
xchg
cmp
sarb
outsl
push
sti
cwtl
mov
leave
fxch
jo
sbb
pop
call
jge
dec
xchg
sub
adc
cmp
mov
jno
sarl
addr16
jp
jmp
adc
pop
imul
outsb
das
lea
icebp
ret
add
out
push
addb
pop
mov
push
icebp
fnstcw
mov
xor
repz
int3
sub
jge
push
scas
lea
push
xor
jbe
or
sbb
mov
cmpsl
xor
stos
lods
sub
sbb
lods
sub
inc
es
dec
bswap
aad
push
rclb
dec
push
fisttpl
cmp
dec
cld
pop
mov
or
scas
mov
dec
scas
mov
push
mov
mov
adc
xlat
jg
cmp
mov
cmp
push
loope
sti
xchg
push
ljmp
shrl
sbb
mov
mov
out
popf
lret
cmc
pop
ja
cmpsb
mov
mov
aad
pop
inc
or
lds
and
add
mov
or
loopne
push
clc
out
loop
sbb
cmpsb
sub
dec
filds
pop
inc
mov
insb
test
sub
fs
xor
scas
scas
push
fdivl
mov
adcb
fdivl
icebp
adcl
or
xchg
and
jp
int3
xchg
xchg
scas
sub
ret
xchg
mov
pop
mov
loop
stos
inc
popa
push
mov
pop
nop
fadds
int
les
inc
jbe
mov
xchg
inc
jno
dec
xchg
push
rolb
jp
push
jb
call
inc
ret
adc
lds
xor
lods
stos
adc
test
mov
das
mov
and
mov
dec
push
jb
fistps
jnp
in
xor
insb
xor
es
daa
inc
adc
loopne
in
cmc
orb
enter
mov
jl
cwtl
adc
push
pusha
mov
mov
mov
movsb
mov
test
mov
out
icebp
push
pop
mov
mov
lret
add
lcall
xor
movsl
dec
data16
lds
pop
push
jg
xor
dec
dec
jp
fstps
sbb
int
outsb
loop
stos
sub
and
cmp
test
dec
movsl
xor
pop
sub
push
mov
mov
nop
mov
mulb
xchg
pusha
test
add
hlt
push
adc
and
ljmp
cmp
out
push
test
jno
sbb
lock
loopne
aam
mov
out
pop
repnz
or
mov
lret
push
loopne
inc
mov
call
pop
cld
ljmp
sub
lock
pop
pop
cwtl
cmp
xchg
ficomps
and
add
pop
sbb
neg
jns
lock
inc
sub
test
mov
movsb
leave
nop
jnp
inc
or
imul
aam
in
pop
xor
out
jns
xchg
push
data16
xorb
cli
inc
lcall
scas
shlb
jno
pop
add
mov
inc
push
add
sarl
push
mov
scas
jl
cmpb
mov
inc
or
sti
pop
push
jge
nop
pop
dec
xchg
ds
push
stc
sbb
sbb
outsb
cmp
inc
or
push
or
fimuls
add
sarb
push
xchg
aaa
xor
pop
add
and
into
incb
push
pushf
inc
add
adc
push
sbb
sbb
in
nop
push
cltd
inc
or
pushf
inc
xchg
clc
icebp
aam
jmp
mov
outsb
dec
xlat
imul
push
popa
rolb
add
cs
push
pop
fdivrs
popa
pop
and
fsubrs
cmp
imul
add
mov
or
scas
sub
divl
int
pop
mul
adc
and
mov
push
cmp
loopne
pop
adc
fiadds
ljmp
mov
add
hlt
test
shll
add
mov
mov
pop
pop
sbb
mov
push
cld
sub
jae
sarb
adc
adc
jl
sbb
insb
int3
inc
xchg
cmp
sbb
test
pushf
inc
or
cld
or
sbb
imul
movsl
sub
popf
inc
cmovne
jg
pop
jns
mov
mov
lret
stos
les
sub
lea
sbb
sbb
ds
cld
cwtl
mov
jno
arpl
xchg
sub
mov
sbb
lea
hlt
pop
cmp
aad
sub
sbb
push
xchg
cmp
in
fs
xchg
cmp
enter
pop
in
fdivrs
aad
add
popa
push
jg
mov
std
fcoml
push
enter
pop
adc
faddl
addl
inc
push
dec
lock
mov
xchg
jns
xlat
dec
rorb
lret
mov
dec
adcl
pop
int
outsl
fbld
out
das
mov
popa
les
test
jae
jge
dec
and
inc
imul
and
negb
xor
data16
cli
push
clc
jno
push
decb
les
test
sbb
cmpsb
cmc
pop
and
faddl
mov
in
mulb
jl
pop
mov
mov
scas
aam
aad
adc
push
add
mov
mov
push
ret
or
cs
pop
or
nop
in
pusha
roll
loope
inc
fnsave
and
sbb
aaa
fwait
gs
sub
in
lcall
and
pop
or
xchg
adc
jno
push
std
lods
mov
enter
mov
je
sbbl
push
test
das
ds
or
cmp
xchg
lret
repnz
push
ret
dec
test
jno
int
dec
push
push
daa
mov
inc
test
jno
inc
sub
mov
mov
in
test
xor
data16
or
out
jbe
xchg
aaa
push
mov
ds
aam
subl
mov
push
popf
inc
stos
out
pop
mov
cmp
pop
mov
int3
arpl
sahf
xor
pop
int
jecxz
mov
xchg
pop
jg
repnz
mov
lret
std
pop
nop
loope
lahf
mov
ret
xchg
enter
negl
jns
jmp
add
cmc
mov
mov
sub
adc
outsb
inc
sti
gs
xchg
jmp
jge
add
xor
inc
or
sub
and
in
mov
hlt
xchg
out
push
int3
enter
push
pop
add
bound
jae
mov
fwait
pop
sbb
fildll
stos
mov
add
mov
xor
or
xchg
shrl
out
test
fiadds
subl
and
adc
fldt
xchg
sub
xor
jecxz
jecxz
js
xchg
sti
cmp
imul
xchg
xchg
mov
adc
sub
int3
lea
in
insl
pushf
out
jnp
mov
mov
jne
xorl
aas
cwtl
mov
xchg
aas
movsb
scas
aas
cwtl
les
pusha
cmc
jno
negb
jo
mov
xchg
xchg
ljmp
sbb
xchg
aas
test
pusha
cmc
jmp
jbe
mov
pushf
cmp
mov
adc
mov
xchg
jne
aam
lret
mov
add
pop
repnz
mov
pop
pop
jns
jae
mov
gs
imull
mov
jle
cwtl
inc
and
fistps
fpatan
push
mov
mov
fstps
jnp
ret
xchg
mov
mov
iret
pop
loopne
cmpsl
push
mov
pusha
js
ljmp
xlat
sub
push
jl
imul
cmp
pop
and
movsl
push
sub
pop
jne
ret
cmpsb
jp
or
dec
loope
int
sub
sbb
dec
and
push
sahf
jae
movsl
mov
out
test
adc
pop
inc
sbb
jns
imul
pushf
mov
dec
loopne
or
mov
punpckhbw
inc
pop
cmp
sbb
fbstp
adc
pop
ret
pop
cmp
das
test
js
cmpsb
mov
fsubrs
aam
sub
push
mov
dec
repnz
cmp
test
pop
icebp
icebp
lds
clc
js
sub
jne
xchg
sub
enter
shr
mov
sbb
shrb
cmp
lock
les
cwtl
push
movsl
leave
jecxz
jns
jmp
ret
sbb
add
outsb
mov
mov
vprotb
rorl
xchg
pop
xor
js
mov
ret
rcll
ja
daa
mov
pop
das
xchg
popa
jp
imul
cmp
add
es
out
push
jae
les
dec
loop
lret
xchg
sub
pop
push
dec
push
mov
push
push
pop
pushf
jno
push
out
out
xchg
adc
pop
inc
pop
push
movsl
dec
arpl
jp
imul
out
dec
loope
or
mov
or
ds
pusha
xchg
xchg
lods
pop
repz
jp
xor
les
push
cwtl
das
sbbl
mov
xchg
fdivp
aam
sub
pop
mov
dec
repnz
aam
popf
adc
aad
lds
idivl
sub
jecxz
dec
xchg
jl,pn
push
popf
mov
iret
out
pop
sbb
shrl
cmp
mov
les
xchg
xsha1
loope
jns
ljmp
data16
loop
xchg
mov
mov
rcr
rorl
loop
push
adc
pop
icebp
pop
xor
js
mov
ret
pop
mov
fsub
js
and
call
stos
sbbb
std
aam
rolb
es
lock
jno
les
ret
dec
loop
lret
xchg
sub
adc
mov
push
push
shrb
mov
lock
push
lds
xsha1
cmpsb
dec
popa
jecxz
xchg
imul
loop
push
and
aas
pop
ds
pusha
mov
xchg
stos
pop
repz
jp
cs
lds
cwtl
das
sbbl
dec
aam
add
daa
add
mov
dec
repnz
ds
fwait
adc
aad
lds
idivl
sub
jecxz
dec
cwtl
das
jl
push
les
mov
pop
icebp
aam
and
cmpsb
cmp
jbe
les
xchg
adc
adc
lds
xor
xchg
fs
jecxz
test
mov
mov
rcl
rorl
loop
pop
adc
pop
icebp
pop
xor
js
scas
mov
pop
mov
fsub
jns
and
pusha
jbe
imul
sarl
add
xsha1
cmpsb
dec
and
sub
pop
rorl
lret
cld
adc
inc
sbb
mov
cwtl
jo
push
mov
icebp
mov
or
pop
ds
adc
xchg
push
add
jmp
and
ds
ds
pop
mov
xchg
test
repz
jp
sub
pop
cmp
das
jg
in
mov
add
and
inc
repnz
ds
lcall
aam
lds
aas
dec
jecxz
dec
cwtl
das
jnp
push
ret
pushf
mov
into
in
pop
push
lock
and
cmpsb
cmp
jne
les
xchg
adc
adc
lds
xor
xchg
arpl
dec
jecxz
test
mov
lea
mov
loope
pop
adc
pop
icebp
pop
xor
cmp
lods
xchg
pop
mov
fnclex
jns
and
pop
jne
imul
sarb
add
cmpsb
dec
and
icebp
push
outsb
sub
push
rorb
leave
xchg
sub
inc
sbb
dec
dec
mov
xchg
outsl
shrl
mov
icebp
mov
or
pop
cmp
pop
jecxz
nop
lds
cwtl
loop
dec
jecxz
add
mov
or
cmp
pop
mov
nop
cmpsl
pop
repz
jp
sub
cwtl
das
jle
in
mov
add
and
and
js
ds
cltd
adc
shr
lds
dec
jecxz
dec
cwtl
das
jp
push
ret
dec
int
mov
adc
aaa
cmpsb
cmp
je
les
xchg
adc
psubsb
lds
xor
xchg
bound
dec
jecxz
sbbl
mov
push
mov
loopne
pop
adc
pop
icebp
pop
xor
shrd
sub
or
mov
push
sub
xchg
pop
je
push
jle
mov
icebp
mov
sarb
add
adc
push
insl
lds
mov
xchg
sub
inc
sbb
and
mov
ds
or
pop
cmp
adc
gs
mov
jecxz
add
mov
cmp
test
mov
cmpsl
loope,pt
jnp
sub
pop
xor
push
in
mov
add
and
and
ja
ds
cwtl
adc
shr
das
sbb
jp
and
inc
cwtl
das
js
imul
cltd
mov
lret
loop
and
cmpsl
ds
mov
pop
mov
fsub
jp
out
lds
xor
cwtl
popa
cmp
sbbb
mov
push
mov
fimuls
repnz
xor
adc
int3
xchg
cs
xlat
loop
or
mov
push
sub
xchg
pop
jae
imul
repnz
into
cmp
lcall
adc
push
imul
pushf
jb
adc
xchg
testl
mov
dec
bound
imul
repnz
or
pop
cmp
adc
lea
xchg
scas
add
out
and
cmp
xlat
sbbl
mov
aas
fcomip
jl
sub
pop
xor
xor
in
xchg
lcall
and
jne
aas
jge
adc
iret
call
jnp
and
dec
in
inc
cltd
xor
insb
add
loopne
and
jmp
insb
sbb
repz
pop
mov
jnp
in
adc
ss
in
andb
mov
imul
sarb
aad
fmull
repz
das
cmpsl
ds
ja
adc
lret
cld
aad
jp
push
mov
push
sub
cwtl
pop
jno
insb
mov
repz
int3
cmp
test
dec
imul
adc
ret
cwtl
das
cmc
or
mov
dec
pusha
mov
xchg
imul
inc
in
repz
push
enter
adc
mov
xchg
lods
add
fnsave
and
cmp
xlat
sbbl
cmc
shrl
adc
add
pop
xor
xor
out
test
add
xlat
in
insl
pop
stc
and
jae
inc
xlat
jl
adc
into
out
pop
lock
and
dec
in
inc
lcall
xchg
mov
and
ljmp
fs
pop
mov
adc
or
xor
adc
add
data16
mov
xchg
sarb
aad
fisttpl
repz
cs
pusha
jne
adc
enter
aam
jnp
sbb
dec
dec
daa
add
mov
ret
hlt
lret
ds
adc
pop
hlt
dec
addr16
cwtl
outsl
jnp
mov
ret
hlt
or
cmp
pop
mov
nop
push
test
mov
add
pop
ss
adc
mov
enter
and
aaa
dec
inc
xlat
jg
mov
mov
stos
inc
jl
and
enter
lcall
cltd
mov
fwait
in
insl
push
clc
and
jb
inc
xlat
jnp
adc
int
xor
push
out
jl
and
dec
in
inc
lcall
xchg
mov
and
jmp
test
arpl
mov
pop
mov
adc
or
xor
adc
add
gs
mov
xchg
iret
ds
fimull
repz
sub
jp
cmpsb
add
mov
cwtl
das
stc
shl
jnp
sbb
cltd
push
outsb
aad
mov
shl
repz
sti
adc
test
dec
data16
xchg
outsb
jnp
mov
rcrl
cmp
mov
and
mov
inc
loop
hlt
mov
add
pop
xor
push
out
mov
enter
fidivl
and
ss
inc
xlat
jle
mov
mov
stos
inc
fdiv
jl
and
enter
lcall
cwtl
mov
fwait
aad
insl
sbb
aas
hlt
mov
inc
xlat
jp
adc
int3
in
adc
aaa
dec
in
inc
lcall
xchg
mov
and
call
test
bound
hlt
mov
pop
mov
adc
or
xor
adc
add
fs
mov
test
into
ds
fmuls
hlt
push
sub
adc
cltd
xor
shl
jnp
sbb
cltd
push
insl
insl
lahf
jbe
mov
shl
repnz
adc
stos
inc
sbb
dec
gs
xchg
insb
jnp
sahf
mov
out
mov
outsb
add
inc
pop
mov
mov
insl
xchg
scas
stos
inc
loope
hlt
mov
add
pusha
xor
adc
xchg
enter
pushf
fldcw
and
xor
inc
fdivrs
mov
xchg
stos
inc
jge
and
enter
fwait
xor
out
adcl
xlat
outsb
sbb
and
jo
inc
xlat
js
adc
lret
enter
adc
ss
out
aas
lcall
xchg
mov
and
das
test
mov
pop
mov
adc
pop
fbstp
adc
add
bound
mov
mov
aas
mov
or
pop
cmc
push
sub
adc
lcall
sbb
cltd
push
insb
xlat
outsb
sahf
je
mov
mov
ds
adc
inc
sbb
dec
fs
xchg
push
adc
cltd
xor
or
cmp
mov
and
arpl
insl
xchg
scas
stos
inc
loopne
hlt
mov
add
popa
xor
adc
xchg
enter
popf
fsubrs
and
sub
outsb
add
jl
mov
test
stos
inc
fsubr
jle
and
enter
pushf
xor
out
jg
mov
fwait
shr
fsubrs
repz
outsl
inc
inc
xlat
jbe
adc
rcll
leave
adc
jl
sbb
push
out
cmp
outsb
add
ret
and
insl
push
cs
inc
pusha
aaa
hlt
mov
enter
adc
push
fnsave
push
sub
pop
das
dec
in
jp
mov
mov
inc
xlat
std
aam
and
pop
pop
notb
test
pop
jno
adc
jp
pop
lods
les
jnp
pop
mov
lcall
and
out
les
cmc
adc
cmc
inc
bound
lret
jl
lcall
xor
push
jo
cmp
mov
and
xchg
lods
lods
inc
fidivs
popa
xor
adc
cmp
jg
pop
xor
mov
push
out
mull
sub
outsb
add
jnp
mov
test
inc
xlat
out
jle
and
enter
pushf
xor
jge
xchg
mov
fwait
shr
fsubrs
repnz
outsb
inc
inc
xlat
jne
adc
rclb
leave
adc
jl
sbb
out
cmp
xor
outsb
add
rcr
and
jecxz
insl
adc
ss
mov
enter
adc
add
daa
add
pop
cs
in
jns
mov
mov
inc
xlat
cld
rorl
testb
aas
pop
jo
adc
jns
pop
stos
ret
fwait
xor
int3
in
push
mov
lcall
and
out
ret
aas
hlt
unpckhps
popa
xor
xchg
addr16
cltd
mov
call
in
add
mov
and
xchg
stos
lods
inc
fnsave
lret
pop
adc
cmp
jg
pop
xor
mov
out
mulb
daa
outsb
add
jp
mov
sbbl
inc
in
jle
pop
clc
enter
pushf
xor
out
jge
mov
fwait
iret
out
outsl
sbb
and
insl
inc
inc
xlat
je
adc
mov
loopne
leave
adc
jl
sbb
push
out
cmp
add
rcr
and
loop
insl
adc
stos
inc
pop
xor
enter
adc
add
xor
or
add
push
sub
and
mov
inc
xlat
sti
rorb
testb
aas
push
outsl
jge
mov
ret
hlt
lret
in
std
adc
add
lcall
in
ret
repz
adc
cmc
inc
pusha
xor
xchg
data16
cwtl
mov
call
jmp
jo
ss
push
ds
mov
xchg
stos
lods
inc
fdivl
lret
push
adc
aaa
push
call
leave
mov
push
out
cmc
and
es
outsb
add
jns
mov
sbbb
inc
aad
jle
push
test
xor
out
jl
mov
fwait
into
out
outsl
sbb
and
insb
inc
inc
xlat
jae
adc
mov
fbstp
leave
adc
jl
sbb
push
out
cmp
add
mov
loope
insl
adc
stos
inc
pop
xor
mov
enter
adc
add
xor
or
dec
in
ja
mov
mov
inc
xlat
cli
rorl
testb
aas
push
outsb
jge
mov
rcrl
cld
adc
push
inc
sbb
fsubrs
outsl
and
in
sarl
repnz
pop
cmc
inc
pop
xor
nop
gs
xchg
mov
call
ljmp
push
cmp
pop
xlat
outsb
nop
test
cmc
mov
cld
lret
add
call
leave
mov
push
out
hlt
and
and
inc
inc
fnstcw
mov
sbbl
jle
sbb
aas
pushf
xor
out
jnp
mov
fwait
int
fsubrs
out
and
imul
jb
adc
mov
fidivs
leave
jl
sbb
push
out
cmp
add
mov
loopne
insl
adc
stos
inc
pop
xor
mov
enter
adc
add
xor
or
fwait
push
sub
pop
jbe
mov
scas
enter
rorb
testb
push
insl
jge
lahf
jbe
pop
test
fwait
xor
leave
in
sti
adc
lcall
and
jmp
aas
icebp
or
lods
cmp
pop
xor
fs
xchg
mov
call
jmp
or
and
fidivl
lret
add
stos
xor
push
xor
xchg
push
out
repz
and
outsb
add
ja
mov
sbbb
inc
shr
jle
sbb
enter
pushf
xor
out
jp
mov
fwait
int3
in
outsl
push
out
and
push
inc
xlat
jno
adc
mov
fnsave
leave
push
in
adc
xor
popa
cmp
add
mov
insl
adc
stos
inc
pop
xor
mov
pop
scas
test
test
add
xor
or
add
push
sub
pop
jne
mov
scas
movl
add
pop
testb
aas
push
insb
jge
sahf
jne
pop
cmpsl
mov
in
cli
adc
lcall
and
ljmp
lods
cmp
pop
cmc
inc
pop
xor
mov
adc
mov
xor
add
xor
mov
and
mov
cmc
mov
cli
lret
add
xor
call
leave
xchg
push
out
repnz
and
outsb
add
jbe
mov
jg
pusha
test
jmp
enter
pushf
xor
out
jns
mov
fwait
lret
jecxz
outsl
adc
aaa
testb
mov
mov
fdivl
leave
or
das
push
out
aaa
lcall
mov
and
insl
adc
stos
inc
pop
xor
mov
enter
adc
add
xor
or
add
push
sub
pop
je
mov
lods
movb
into
mov
add
pop
testb
aas
push
imul
je
pop
cmpsb
mov
in
stc
adc
lcall
and
jmp
or
cmc
inc
pop
xor
lea
adc
lcall
or
and
lea
cmc
mov
stc
lret
add
xor
jle
xor
test
push
out
icebp
and
and
outsb
add
jne
mov
jle
pusha
test
call
enter
pushf
xor
out
js
mov
fwait
lret
outsl
adc
and
push
mov
mov
leave
or
jl
adc
ss
mov
and
daa
stos
inc
pop
xor
mov
enter
adc
call
xor
push
and
in
jae
mov
stos
lds
test
and
pop
pusha
testl
jle
fwait
jb
pop
movsb
mov
in
testl
add
dec
fnstenv
push
mov
out
inc
xlat
in
or
lods
cmp
pop
idivb
pop
xor
mov
adc
lods
push
jmp
in
jo
xor
mov
and
xchg
pop
xor
mov
inc
cmp
inc
and
and
lods
rep
mov
inc
into
pop
shlb
fs
or
imul
test
test
aaa
fisubl
xchg
mov
stos
popa
mov
xorl
xchg
add
scas
add
fimuls
rclb
mov
lods
cs
mov
fldcw
mov
xlat
dec
inc
movsl
mov
sbb
mov
push
data16
pop
stos
out
or
xor
nop
xchg
hlt
jbe
fildl
inc
push
mov
push
cwtl
shlb
cmpsb
cmc
cli
daa
mov
xchg
jne
xchg
sub
daa
adc
push
pop
mov
sahf
mov
hlt
mov
cltd
ds
pop
cld
mov
xchg
sub
pop
movsl
jne
jbe
outsl
jmp
imul
mov
xor
jbe
std
imulb
push
out
lds
sbb
nop
mov
movsl
mov
stos
mov
push
push
nop
xor
dec
arpl
lcall
lret
and
jae
sbb
ss
ss
adc
xchg
cmc
xor
sbb
imul
xor
pop
ljmp
mov
or
add
pop
aam
cmp
ljmp
cmpsb
out
insl
mov
cmp
shl
jnp
stc
inc
fsubl
inc
shlb
ret
enter
pushf
pushf
mov
test
cmp
cs
fcompl
inc
adcb
mov
loopne
adc
cmpsl
into
dec
push
gs
xchg
es
popw
xor
add
jmp
loop
jle
lahf
loop
cmp
subb
push
inc
test
lret
inc
push
lret
add
mov
icebp
dec
ss
xchg
mov
int
movsl
fs
ljmp
mov
add
call
pop
pop
adc
rcr
icebp
jmp
cmp
inc
lods
les
cmp
dec
mov
testb
mov
inc
inc
mov
sarb
jbe
mov
dec
popf
rorb
ret
sub
cmp
sub
or
push
cmp
jnp
lds
adc
ret
in
cmp
adc
repz
adc
sub
test
icebp
sarl
xchg
ds
pop
scas
jo
stc
push
mov
lock
and
xchg
icebp
js
push
add
out
inc
sbb
mov
cmp
fcoml
xlat
push
inc
ds
mov
sub
repnz
mov
cmp
movsl
mov
pushf
mov
int3
mov
jbe
mov
mov
push
pop
gs
pop
lods
ud0
dec
xchg
stc
add
stc
jb
fs
sub
aam
pop
inc
cwtl
fisttpll
cld
out
pop
dec
and
stc
dec
mov
aas
cs
mov
pop
xchg
ret
fdecstp
and
sbb
icebp
mov
fstp
es
imul
push
adc
aaa
mov
roll
sub
aas
jb
mov
call
test
xchg
notb
stos
push
scas
stos
lods
push
push
add
mov
out
test
cli
jecxz
mov
push
push
loop
push
test
or
stos
mov
dec
push
lahf
xlat
sbb
ds
xor
inc
and
add
add
cmp
sti
sbb
into
xor
jg
popf
movsb
and
jp
pop
push
leave
imul
mov
lds
dec
mov
scas
and
fisttpl
scas
or
repnz
push
xlat
popl
outsb
xchg
inc
push
jmp
mov
clc
scas
out
xchg
insb
adc
push
jbe
adc
adc
mov
in
lret
adc
sub
mov
push
sub
dec
pop
cmp
push
repz
jne
out
loopne
dec
lock
fsts
jmp
out
lret
adc
gs
fildl
popf
sbb
dec
pop
sbb
int
xchg
pushf
pusha
sub
lahf
mov
aam
sub
gs
arpl
pop
lahf
jmp
fld
in
adc
dec
jnp
or
jg
pusha
cmp
xchg
add
jns
and
sti
xor
add
push
das
add
cli
push
add
push
pop
movsl
fwait
arpl
xchg
bound
stos
fucomip
dec
inc
test
adcb
xor
and
adc
add
out
adc
add
fisubl
test
iret
mov
jnp
sub
jl
orb
mov
sbb
xor
shll
and
sub
pop
test
cs
gs
lods
pusha
add
movsb
mov
shlb
ljmp
push
in
push
cs
loope
mov
xor
cmc
xor
mov
lret
push
dec
gs
cmp
sahf
lret
sbb
jo
sarb
dec
loopne
jno
mov
out
jae
scas
dec
out
push
adc
mov
and
xor
mov
js
inc
cmpsl
test
push
pop
test
mov
psubw
dec
jo
lds
cli
movb
loop
push
repz
repnz
or
lds
stos
sub
push
aas
pop
out
push
xor
mov
ret
cmp
dec
ret
add
shlb
stos
xor
xchg
xchg
lods
dec
mov
push
sub
lods
dec
inc
jmp
jae
mov
xchg
loope
push
push
imul
les
scas
in
push
int3
xor
or
iret
xor
repz
and
fisubl
ss
icebp
or
jg
cmp
mov
push
dec
add
test
add
jmp
ficoms
and
lret
push
xor
stc
xor
mov
test
int3
dec
cmpsl
pop
ret
cmp
dec
xlat
sbb
push
sub
mov
stos
adc
rorb
pop
adc
xchg
and
mov
loopne
hlt
frstor
inc
cwtl
and
aam
mov
ficoml
das
sarb
inc
pusha
xchg
and
enter
test
cmpsl
push
out
jmp
add
xor
cs
mov
mov
addr16
dec
in
xchg
mov
jne
dec
mov
ret
into
mov
test
add
dec
inc
mov
mov
lcall
inc
xor
mov
xchg
clc
js
adc
scas
imul
fmuls
jl
mov
sti
jg
hlt
dec
inc
icebp
jo
lds
push
pop
lods
sti
mov
pop
mov
cmovg
scas
in
xor
roll
fcoms
fsubl
lahf
testl
sub
xlat
scas
out
cli
pop
mov
push
ss
shl
ds
xor
sub
jns
adc
pop
ds
sub
push
es
sar
lock
pop
or
cltd
push
shll
repz
out
mov
data16
pop
mov
mov
in
out
fdivrs
stos
rorl
push
adc
pop
lock
sub
test
test
leave
jnp
mov
outsb
cld
mov
mov
stos
or
mov
add
pusha
lcall
push
outsl
dec
inc
mov
pop
enter
mov
fmuls
int3
sbb
adc
mov
scas
mov
dec
xor
cmp
int3
pop
add
sahf
sahf
lret
popa
cmpsb
test
or
in
lahf
cmp
pusha
fisubs
lret
sti
add
movsb
idiv
pop
or
mov
outsl
lahf
lds
and
mov
int
sbb
mov
and
jne
es
pop
mov
or
inc
ret
enter
push
add
js
repz
jo
das
adc
leave
bswap
movsb
dec
mov
mov
jecxz
arpl
fisubl
shr
xchg
aaa
or
enter
adc
sbb
cmp
dec
icebp
sub
mov
icebp
sub
scas
push
repz
lods
inc
cmp
xor
inc
cmp
xor
add
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
cwtl
mov
inc
les
bound
mov
mov
lock
cmpsb
cmp
mov
negb
cs
test
lret
xor
mov
push
ret
icebp
xchg
lcall
pop
lret
jg
pop
repz
mov
jle
pop
repnz
cmc
sbb
dec
repnz
inc
in
movsb
std
pop
sbb
jmp
lea
cmp
jne
cmp
pop
cwtl
dec
cwtl
aad
ds
gs
xchg
add
push
or
and
clc
fldcw
mov
sub
sbb
or
jno
cmp
shl
mov
in
mov
fwait
cmp
pop
loop
mov
mov
dec
lds
inc
sbb
mov
push
in
test
and
into
sub
clc
add
xchg
out
aad
outsl
xor
inc
mov
adc
jg
std
lds
aas
cli
cmpsb
popa
push
inc
in
movsb
divps
inc
pop
popa
fs
sub
push
xor
cmp
sub
and
rclb
pusha
xor
pop
stc
in
arpl
pushf
outsb
push
cmp
sbb
add
into
mov
add
pop
fucomp
popf
cmp
leave
das
pop
dec
cmp
cs
push
arpl
mov
lret
jmp
cmp
cltd
ljmp
mov
andb
xor
sbb
sub
mov
xor
ja
dec
in
mov
push
test
push
xor
push
mov
out
sbb
ss
mov
jmp
adc
imul
adc
lret
in
popl
and
xchg
sub
mov
js
bnd
dec
ljmp
adc
dec
fwait
pop
xchg
push
mov
