in
cmp
cmc
push
mov
sub
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
sub
mov
mov
pusha
call
add
sub
cmp
push
pop
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
add
imul
sbb
mov
pop
dec
jne
lcall
pop
jmp
sbb
pop
subb
push
mov
sub
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
outsb
divb
movsb
xor
clc
mov
jo
outsl
test
lret
push
repnz
inc
jge
stos
fidivs
xor
lock
ljmp
test
in
sub
push
push
lea
push
lea
push
subl
lea
push
lea
push
pushl
subl
mov
add
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
lea
mov
push
mov
addl
pop
push
pop
xor
lea
xor
push
popl
add
and
addl
clc
adc
pushl
lea
pop
repz
add
cmp
jne
mov
pop
ret
add
pop
gs
mov
daa
add
mov
add
or
inc
lock
pop
outsl
xor
push
or
lods
mov
jl
add
push
mov
sub
push
pop
bound
js
das
ret
ret
xchg
adc
lret
push
mov
dec
xchg
mov
mov
sbb
sub
ja
mov
add
daa
pop
dec
clc
push
xor
push
iret
push
mov
sub
push
push
push
push
push
call
add
pop
lea
pop
mov
ret
add
push
fbld
in
cmp
pushl
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
cwtl
sub
cmc
adc
ret
in
sub
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
mov
daa
jns
sbb
push
mov
sub
push
push
pushl
pushl
call
add
pop
lea
pop
mov
ret
inc
rcr
cwtl
pop
pop
divb
ret
pop
dec
jo
push
mov
sub
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
push
ret
test
xor
scas
outsb
xchg
aaa
stos
loop
movsb
fistps
in
cltd
xchg
dec
ss
pop
stc
stos
cmp
js
cmpsl
stc
pusha
or
fldcw
jmp
ret
push
pop
push
pop
sub
lods
mov
mov
shl
lea
mov
mov
add
stos
mov
push
pop
cmp
je
sub
sub
je
sub
mov
add
mov
cmp
je
mov
sub
jne
lea
jge
popf
call
jmp
add
roll
push
and
add
and
add
and
add
and
add
add
and
add
add
cwtl
and
add
and
add
and
add
and
add
add
mov
and
add
and
add
and
add
add
add
add
mov
add
insb
and
add
and
add
and
add
and
add
add
adc
add
add
add
and
add
inc
and
add
and
add
add
add
add
and
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
add
and
add
add
test
add
xor
add
add
add
add
and
add
and
add
and
add
add
and
add
add
cwtl
and
add
and
add
and
add
and
add
add
mov
and
add
and
add
and
add
add
add
add
mov
add
insb
and
add
and
add
and
add
and
add
add
adc
add
add
add
and
add
inc
and
add
and
add
add
add
add
and
add
and
add
and
add
and
add
add
add
add
gs
inc
imul
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
imul
jb
je
arpl
add
add
fs
imul
add
mov
push
gs
fs
outsl
outsb
jae
insb
gs
add
mov
push
gs
fs
outsl
outsb
jae
insb
gs
add
aam
inc
gs
jb
jbe
push
jns
gs
add
fs
outsl
outsb
jae
insb
gs
add
fwait
add
insb
jae
inc
jbe
outsb
je
add
jb
push
inc
add
insb
outsl
jae
dec
popa
outsb
fs
add
insb
jae
jb
outsb
inc
add
enter
jae
gs
popa
insb
jne
add
add
outsb
fs
je
insl
push
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
inc
gs
je
imul
push
add
mov
push
insb
gs
roll
dec
gs
jo
imul
inc
gs
outsl
imul
jbe
jae
add
add
insb
gs
jae
dec
jne
gs
add
push
dec
inc
dec
xor
cs
insb
add
jle
inc
gs
imul
gs
add
xor
jae
push
push
popa
je
add
addb
jae
push
arpl
add
push
imul
gs
add
add
je
push
outsl
outsl
insb
add
aaa
add
ja
push
fs
inc
gs
push
gs
inc
js
outsb
je
add
inc
gs
push
outsl
insb
outsl
jb
jns
inc
gs
push
jns
push
imul
jb
ja
push
popa
arpl
jb
jne
add
jae
push
push
popa
je
add
xchg
dec
jo
outsb
push
push
popa
je
add
gs
push
gs
dec
gs
imul
dec
inc
dec
inc
cs
insb
add
inc
jb
ja
gs
outsl
jb
push
dec
add
insl
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
outsb
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
jo
jb
push
push
outsl
push
inc
popa
je
add
inc
push
inc
inc
dec
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
sbb
add
add
add
add
add
add
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
add
inc
add
test
add
cmp
add
add
add
add
add
ja
add
add
add
add
add
add
add
add
add
xor
add
cwtl
roll
add
add
add
add
add
add
add
add
and
add
add
andb
add
imul
sub
add
mov
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
stos
mov
mov
cltd
pop
xchg
xchg
xchg
or
jg
jl
jl
stos
lods
lods
add
cmpsb
test
mov
mov
mov
lret
into
int3
into
rcl
in
rcl
shl
rcl
shl
into
int3
into
hlt
leave
leave
repz
leave
enter
mov
mov
stos
stos
stos
lea
fwait
fwait
and
jne
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
lahf
add
mov
jae
mov
leave
leave
not
rcl
cld
fcom
xlat
std
xlat
xlat
xlat
aam
aad
rcl
iret
dec
int3
into
aam
ror
sar
ret
std
mov
mov
scas
iret
mov
xchg
and
add
push
add
add
add
add
add
add
add
add
stos
lods
lods
add
scas
lods
sbb
mov
jnp
mov
mov
dec
lret
leave
call
rcl
aam
fdivr
call
aam
dec
int3
into
dec
int
call
aam
dec
int3
into
inc
mov
mov
ljmp
test
ljmp
pop
or
inc
add
add
add
add
add
pop
add
add
add
add
add
add
pop
pop
push
add
dec
add
push
add
or
inc
or
sbb
add
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
dec
mov
call
rcl
call
fcomp
call
fdivr
aam
aad
int
int3
dec
leave
lret
dec
into
int
mov
mov
mov
mov
cmpsl
test
jmp
fwait
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
popa
or
imul
pop
pop
pop
fs
sbb
sub
ss
aaa
cmp
and
adc
add
add
add
add
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
rol
enter
iret
call
aam
call
aam
rcl
sar
leave
enter
mov
mov
ljmp
movsb
movsb
pushf
sahf
popf
xchg
cwtl
xchg
lcall
addb
add
inc
add
add
add
add
add
add
add
add
add
adc
add
or
add
add
outsl
xor
jle
jg
jg
jno
jno
bound
mov
cmp
cmp
inc
inc
inc
mov
jo
outsl
nop
bound
pusha
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
enter
lret
lret
dec
leave
enter
mov
mov
ljmp
mov
lcall
xchg
xchg
xchg
cwtl
xchg
fwait
lcall
ds
cmp
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
jo
outsl
add
pop
or
jp
nop
lea
incb
jp
idivb
jl
outsl
outsl
outsb
out
push
data16
je
jge
jge
js
js
arpl
inc
inc
inc
cmp
pop
sbb
adc
prefetch
stos
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
cmpsl
test
sahf
sahf
pushf
decl
test
incl
xchg
xchg
lahf
mov
mov
mov
jns
jp
xor
das
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
addb
in
mov
mov
addb
decb
mov
loope
jo
enter
mov
addl
push
cmp
ss
es
jle
jge
fwait
cltd
cltd
lea
stos
stos
icebp
lods
stos
lods
sti
lods
lods
lods
lods
lods
lods
stos
stos
test
std
fwait
lcall
mov
jge
jp
jp
jp
jnp
mov
cwtl
movsb
movsl
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
push
adc
add
or
add
add
add
add
add
add
pop
pop
adc
movsb
test
mov
mov
xchg
xchg
incl
xchg
std
xchg
xchg
xchg
std
cwtl
xchg
xchg
stc
xchg
xchg
xchg
in
mov
or
addb
xchg
pop
push
or
inc
inc
dec
insl
insl
imul
test
cltd
cltd
lcall
fwait
fwait
stc
nop
xchg
xchg
std
mov
mov
mov
mov
lea
lcall
scas
lods
mov
mov
mov
mov
mov
std
mov
mov
movsl
movsb
movsl
addr16
jl
scas
test
add
adc
scas
call
cltd
xchg
cwtl
incl
xchg
decb
xchg
xchg
popf
pushf
popf
std
movsb
movsl
movsb
stc
mov
xchg
xchg
in
nop
nop
in
test
push
jne
push
or
inc
or
or
es
push
dec
dec
dec
data16
jb
xchg
xchg
rclb
xchg
xchg
std
mov
call
sahf
lahf
jmp
lods
pushl
cmpsl
scas
mov
xchg
test
mov
xchg
scas
mov
mov
ljmp
sahf
adc
add
add
pop
pop
adc
scas
mov
ret
mov
lcall
mov
decl
nop
xchg
decl
xchg
xchg
popf
pushf
pushf
mov
stos
test
mov
cwtl
xchg
fstpt
movsl
push
push
push
outsl
dec
dec
dec
popaw
bound
jno
jae
jp
jle
orl
int
nop
xchg
in
xchg
xchg
testl
lea
jmp
mov
mov
pop
nop
mov
ss
mov
jbe
mov
cmpsb
mov
mov
stos
stos
mov
movsl
add
mov
add
pop
adc
mov
jmp
mov
call
xchg
xchg
call
xchg
xchg
cltd
fwait
lcall
mov
mov
stc
cltd
cwtl
fwait
out
nop
xchg
nop
nop
xchg
les
cwtl
cltd
in
xchg
xchg
out
mov
stc
xchg
xchg
std
xchg
je
fwait
push
cmp
dec
jg
lods
inc
jge
mov
jnp
mov
je
mov
outsl
ljmp
pcmpgtd
lods
or
stos
or
mov
jle
mov
mov
lods
pushf
movsb
movsl
movsl
and
add
shlb
xchg
mov
ljmp
popf
call
xchg
xchg
lcall
sahf
sahf
lcall
sahf
popf
lcall
xchg
xchg
decl
xchg
xchg
call
cwtl
fwait
cld
xchg
xchg
pushf
stc
lahf
lcall
sahf
mov
xchg
push
xchg
pop
jge
cwtl
dec
jns
fwait
cmp
push
pushf
pop
push
jmp
adc
ljmp
adc
lods
adc
scas
adc
mov
imul
adc
insb
mov
cltd
lods
mov
lods
lods
scas
movsb
movsl
movsb
sub
movsl
movsb
mov
add
add
add
pop
pop
adc
mov
lcall
xchg
xchg
lcall
lahf
mov
jmp
mov
xchg
decl
mov
decl
ja
lcall
xchg
push
jp
xchg
jo,pt
cs
pop
pusha
call
or
add
push
lcall
pop
pop
jmp
sbb
mov
outsl
pushl
outsl
mov
and
mov
and
mov
xchg
lods
mov
scas
scas
mov
lahf
sahf
mov
add
pop
pop
adc
scas
mov
shlb
lcall
movsl
movsb
jmp
cmpsb
cmpsl
ljmp
cmpsb
cmpsb
lcall
mov
mov
mov
decl
sub
mov
pop
incl
add
incl
add
mov
pop
decl
add
fwait
add
sahf
add
or
mov
outsb
pushl
sub
mov
sub
les
jle
jg,pn
das
cmp
inc
mov
leave
scas
inc
mov
mov
movsl
mov
mov
add
push
push
adc
test
ljmp
lahf
jmp
test
ljmp
lods
stos
pushl
scas
scas
jmp
jo
incl
or
push
incl
add
incl
push
incl
add
mov
push
call
add
cltd
add
lahf
add
mov
adc
mov
ss
cmp
dec
cmp
call
cmp
mov
rorb
dec
mov
std
mov
mov
movsl
movsb
movsl
push
mov
mov
add
add
add
mov
dec
dec
adc
cmpsl
ljmp
lahf
jmp
scas
scas
pushl
mov
pushl
mov
ljmp
jbe
decl
or
mov
pop
decl
or
xchg
push
incl
add
lea
push
decl
add
popf
add
mov
add
lods
add
jno
ret
dec
inc
mov
int
call
inc
mov
rorb
call
dec
xchg
call
dec
xchg
fisttpl
fmull
fsts
call
test
mov
mov
mov
lahf
lahf
or
add
add
add
add
inc
inc
adc
jl
movsb
lahf
mov
lcall
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
outsb
decl
sbb
nop
pop
pop
decl
adc
mov
push
decl
add
xchg
add
popf
add
add
add
test
push
gs
es
int
mov
push
xchg
fcoms
ficoml
fistpl
jmp
pop
pushf
jmp
pop
pushf
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
cmpsb
cmpsl
cmpsb
jne
lahf
sahf
or
xchg
xchg
cwtl
add
inc
adc
js
lahf
cltd
sahf
jmp
mov
lods
lods
pushl
mov
mov
mov
mov
ljmp
inc
jne
xchg
and
xchg
and
call
call
or
xchg
add
xchg
add
cltd
add
mov
add
lods
add
mov
gs
mov
xor
fisubs
fisubs
jmp
cmpsb
jmp
gs
out
test
call
addr16
ljmp
dec
mov
mov
mov
mov
add
add
add
xchg
xchg
xchg
add
inc
inc
adc
jb
fwait
xchg
cwtl
call
mov
lods
lods
pushl
mov
mov
mov
mov
ljmp
push
jle
xchg
sub
fwait
jo,pn
fwait
outsb
lcall
pop
call
add
lcall
ljmp
add
mov
pushl
call
inc
fsubrl
jmp
outsb
stos
jmp
jo
jmp
jo
call
jae
in
je
out
je
out
jne
out
jae
jmp
mov
mov
cmpsb
test
mov
sahf
lahf
add
jle
cmp
aas
adc
outsl
js
mov
lcall
mov
mov
mov
mov
mov
mov
mov
movsl
scas
lcall
outsb
lcall
aaa
jae
sahf
xor
cltd
sbb
call
pop
lcall
add
add
mov
arpl
mov
fs
mov
sbb
fistl
jecxz
mov
jmp
jg
jmp
mov
out
cmpl
push
test
push
cmpb
mov
mov
cmpsl
pushf
sahf
popf
daa
mov
mov
add
arpl
add
aaa
cmp
pop
pop
push
jne
jle
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
mov
ret
inc
ret
mov
mov
sahf
insb
mov
cltd
cmp
movsl
inc
jle
movsb
inc
jg
mov
pop
arpl
xchg
add
sahf
add
add
test
add
mov
fs
mov
add
iret
es
mov
in
mov
push
mov
push
xchg
ret
nop
sar
xchg
ret
push
xchg
xchg
mov
out
nop
sar
mov
inc
ret
ret
clc
stos
lods
stos
mov
popf
popf
xor
sahf
add
add
add
add
xor
push
inc
inc
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
sar
inc
mov
jge
lcall
dec
cmp
dec
test
mov
maxps
cltd
add
mov
add
lods
add
mov
mov
add
movl
mov
in
xchg
push
cltd
push
fwait
push
lcall
negl
int3
cld
lahf
int
cld
lahf
into
cld
cltd
lret
push
xchg
ret
fidivs
cli
mov
mov
lahf
lahf
sahf
aas
nop
add
add
add
cs
outsb
push
dec
dec
jecxz
pop
pusha
call
mov
mov
mov
mov
inc
mov
leave
enter
sar
mov
ljmp
dec
mov
mov
or
sahf
add
movsb
add
lods
add
mov
popa
mov
add
enter
rorl
out
lea
push
movsb
into
push
movsl
into
clc
test
cld
test
cli
cmpsl
iret
sti
test
std
stos
sar
std
stos
sar
cld
test
push
sahf
jmp
mov
int3
std
mov
mov
sahf
mov
xchg
add
fwait
cltd
add
add
add
xor
add
sub
or
inc
bound
push
xlat
je
jo
mov
mov
ret
mov
inc
ret
enter
ret
rol
mov
test
movsl
push
test
scas
push
mov
scas
dec
test
lahf
sbb
lcall
add
stos
add
mov
fs
mov
add
into
add
add
ficoms
jl
out
pop
cmpsl
push
sahf
leave
cld
lods
sar
sti
scas
aad
cld
mov
cld
scas
sar
cld
mov
mov
mov
mov
pushl
sar
mull
dec
enter
mov
fisubl
xchg
xchg
or
add
add
push
add
dec
dec
ss
jo
cltd
lcall
aad
jmp
not
rcl
std
int3
int3
int3
dec
leave
lret
lret
leave
leave
lret
inc
enter
lahf
scas
jmp
push
mov
lods
cmp
arpl
mov
add
mov
mov
add
rolb
outsl
fadds
je
loopne
jae
call
jae
cli
lods
aam
cld
mov
mov
fdivr
std
mov
cld
mov
fcos
inc
mov
int3
call
lret
int
mov
mov
xchg
or
add
add
xor
xor
add
pop
or
enter
in
out
jmp
test
jecxz
leave
fucom
fcmovnu
fdiv
fcomp
xlat
cli
aad
fdivr
into
rcl
mov
push
test
stos
sub
mov
add
mov
arpl
mov
add
lret
call
add
faddl
jbe
in
ja
in
xor
cli
mov
loopne
std
ret
inc
loop
inc
fdivrp
inc
inc
std
enter
enter
leave
dec
loopne
cli
mov
leave
fmul
into
mov
mov
xchg
adc
add
add
std
add
std
add
incl
repnz
or
in
jmp
in
out
in
sub
out
out
dec
ljmp
xchg
call
out
aad
fcmovnu
jmp
mov
xchg
test
js
movsl
adc
pop
ljmp
add
mov
add
int3
add
fadds
je
fiadds
js
ljmp
cli
mov
jecxz
cld
lret
dec
out
dec
in
dec
loop
std
int
dec
loop
std
shl
shl
std
shl
shl
sti
in
mov
inc
ret
out
test
test
xchg
xchg
xchg
sbb
fwait
lcall
add
add
std
add
incl
div
testl
icebp
hlt
repz
in
repnz
pop
out
icebp
lock
out
in
pop
loopne
loopne
lds
sti
mov
push
pop
jmp
pop
pushl
add
movl
jno
flds
jne
jecxz
jp
jmp
jl
negb
sti
mov
std
iret
in
cld
shl
call
out
shl
call
in
call
call
out
fld1
fucomi
std
shl
push
ret
in
lret
repz
stos
fwait
xchg
xchg
xchg
and
xchg
cwtl
add
std
sti
add
testl
hlt
div
or
aam
xor
jb
negb
add
add
lods
add
mov
add
leave
add
roll
jb
fildl
jne
out
jns
out
sbb
cli
std
xlat
ljmp
fldlg2
fucomi
fucomi
std
fsubr
std
fucomi
fucomp
std
fsubrp
fsubrp
fucomip
aam
push
aad
out
iret
rcl
clc
stos
stos
lods
lods
xchg
xchg
xchg
outsb
outsb
outsl
add
add
mov
loopne
add
mov
xchg
stos
jnp
repnz
pop
jmpw
add
mov
popa
mov
add
int
outsl
call
add
filds
jae
call
sub
cld
shl
fucomip
std
fucomp
fldl2e
fucomi
std
xlat
call
std
shl
sti
iret
loopne
cld
shl
stc
iret
fdivrp
clc
lret
fdivr
test
out
mov
fcomp
fdivr
mov
mov
cltd
fwait
cltd
cmp
cltd
add
xlat
add
mov
sahf
jmp
sub
sahf
add
test
add
mov
add
rolb
outsb
fadds
jae
loop
js
ljmp
cli
xchg
cli
lret
cli
lret
sti
fdivrp
clc
mov
aam
repz
iret
push
mov
into
jmp
mov
iret
std
call
ljmp
in
mov
mov
xchg
add
add
add
int
add
rol
mov
cmpsl
loopne
ss
mov
add
mov
addr16
mov
add
int
jno
rorl
jbe
ficoml
ja
loop
cmp
ljmp
jmp
mov
std
loope
scas
ret
cli
fdivrl
lock
int
fmul
into
rcl
shl
fadd
out
loop
in
in
test
out
out
popf
ljmp
push
lods
stos
lods
adc
cmpsl
test
add
ret
rolb
rolb
ret
mov
lods
aam
dec
cmp
sbb
cmpsl
push
insb
scas
and
jns
mov
dec
xchg
ret
push
mov
leave
gs
test
mov
shll
enter
enter
lret
rcl
int3
mov
iret
shlb
xlat
rcl
jg
fcmovu
jb
loopne
gs
in
out
out
ljmp
sub
div
and
icebp
icebp
sbb
fstp
or
mov
int3
add
add
add
rol
mov
scas
mov
test
pushf
cmc
mov
je
ljmp
mov
sarb
test
mov
pushf
lret
ror
int
int3
jp
into
iret
addr16
rclb
rcl
dec
xlat
xlat
inc
aam
aam
aad
fsubs
xlat
fcmovnu
sbb
adc
in
push
loopne
in
out
ljmp
cli
testl
std
std
add
std
std
add
mov
shrl
mov
mov
mov
mov
mov
mov
mov
mov
ret
push
ret
inc
ret
mov
daa
int3
rcl
and
rcrl
rcl
aam
rcl
aam
rcr
aad
rcr
fadds
fstp
add
add
jecxz
add
in
jmp
lret
add
std
incb
mov
mov
add
ret
mov
rol
sub
mov
mov
push
ret
or
leave
movl
int3
leave
add
aam
add
fcom
add
xlat
add
aam
aad
xlat
add
xlat
loope
xlat
flds
fsubp
loopne
filds
jecxz
out
repnz
incb
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
mov
ret
mov
mov
mov
ja
test
dec
test
test
pop
add
add
add
add
add
add
scas
mov
adc
sarb
iret
ror
jmp
aad
cmc
aam
aam
ror
sar
int
int3
stc
lret
hlt
mov
mov
iret
lods
stos
lods
fwait
xchg
xchg
xchg
dec
ds
sbb
add
adc
add
push
add
add
jg
addb
aas
inc
add
push
push
add
add
add
add
add
add
add
add
add
mov
mov
mov
leave
cld
into
ror
xlat
xlat
call
aad
rcl
sar
iret
iret
iret
dec
lret
lret
mov
mov
icebp
cwtl
xchg
cwtl
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
jae
jne
jae
gs
dec
inc
dec
cmp
sub
sub
aaa
aaa
xor
dec
sub
inc
adc
sub
add
add
mov
mov
mov
mov
mov
mov
dec
lret
rcl
sar
rcl
aam
lret
lret
mov
sar
mov
ljmp
lahf
popf
cwtl
xchg
xchg
jmp
jno
xchg
push
pop
push
dec
add
add
add
add
add
add
cmpl
addl
aam
imul
pop
pop
movsb
push
push
push
stos
imul
push
pop
pop
cmp
aaa
cmp
jo
jno
mov
scas
pop
mov
mov
mov
mov
mov
ret
inc
mov
mov
mov
jmp
fwait
pushf
call
xchg
fwait
fwait
cltd
out
addb
adc
adc
add
add
add
add
add
pop
lcall
pop
fwait
cwtl
lcall
addb
jge
jge
jp
jns
jnp
jns
jns
jnp
jb
jb
push
push
push
cmp
jne
popf
popf
pushf
mov
lods
scas
repz
scas
lods
sti
scas
scas
scas
std
test
test
call
xchg
call
mov
lods
jmp
lods
scas
leave
cmpsb
movsl
movsl
cltd
je
je
adc
adc
add
add
add
add
outsb
insl
outsb
pop
nop
mov
loop
lcall
mov
sti
xchg
xchg
xchg
lock
nop
nop
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsb
outsl
outsl
orl
lcall
mov
mov
xchg
xchg
xchg
lcall
movsb
cmpsl
mov
scas
std
mov
scas
mov
mov
mov
cmpsb
mov
jg
popa
popa
popa
or
scas
mov
cmpsb
mov
mov
mov
nop
lcall
lahf
mov
negl
jle
stos
push
push
push
jo
pop
pop
outsl
imul
jle
subl
mov
lcall
mov
mov
xchg
mov
push
mov
mov
mov
out
scas
stos
insl
stos
stos
stos
or
add
add
add
add
pop
or
mov
in
movsb
test
call
xchg
xchg
lcall
cwtl
cltd
fwait
popf
fwait
pushf
sahf
pushf
cli
xchg
xchg
xchg
jmp
xchg
mov
popl
mov
xchg
imul
sahf
dec
jnp
mov
ss
scas
sub
mov
outsb
ljmp
sbb
mov
mov
scas
scas
jle
movsb
mov
add
add
add
popa
or
mov
lcall
lahf
lahf
jmp
lahf
lahf
call
mov
xchg
jns
std
xchg
jb
cld
cwtl
pop
test
xchg
dec
jns
xchg
cmp
xchg
sub
xchg
sbb
punpcklbw
sahf
punpcklbw
test
ljmp
pushl
sbb
mov
and
rcrb
mov
scas
scas
xchg
lahf
sahf
popf
adc
add
add
popa
pop
popa
or
mov
test
lahf
mov
ljmp
test
lcall
cmp
mov
decl
adc
or
mov
call
add
fwait
add
cmpsb
or
mov
jb
mov
jl,pn
lds
jge
enter
leave
xor
ret
test
mov
test
add
add
add
add
popa
or
cmpsb
test
jmp
scas
scas
pushl
mov
jmp
jb
mov
pop
decl
or
xchg
push
call
add
lahf
add
add
mov
insb
inc
aaa
test
int3
inc
mov
into
inc
mov
roll
call
inc
nop
call
popa
lahf
dec
test
stc
mov
mov
movsb
mov
incb
add
add
pop
popa
pop
or
popf
mov
ljmp
mov
pushl
mov
ljmp
jl
mov
arpl
xchg
sbb
mov
pop
call
add
lahf
add
cmpsl
add
scas
add
and
iret
dec
xchg
fstps
ficompl
jmp
pop
lahf
jmp
pop
mov
fisubrs
dec
cmpsl
mov
ret
cmpsl
xor
add
add
dec
pop
jl
jl
fwait
cwtl
lcall
lods
scas
pushl
mov
mov
lcall
sub
lcall
and
call
add
lahf
add
cmpsb
add
mov
fs
mov
xor
jecxz
test
out
lods
ljmp
in
jb
jmp
js
call
cmpsl
mov
shrl
addb
dec
dec
dec
pop
outsb
insl
insb
bound
lcall
mov
mov
sar
mov
jmp
cmp
lahf
cmp
pushf
sub
xchg
or
lcall
ljmp
add
ret
or
inc
xchg
jmp
js
jmp
mov
in
test
push
xchg
push
mov
mov
test
push
cltd
lcall
sub
push
push
push
dec
pop
imul
mov
mov
mov
sarb
mov
mov
jmp
sub
lcall
ljmp
add
mov
adc
mov
push
xchg
xchg
push
cwtl
enter
lret
fwait
leave
push
xchg
stos
inc
mov
stos
popa
mov
add
add
xor
pop
pop
push
fisttpl
mov
mov
ret
inc
xchg
test
movsl
push
mov
lods
dec
test
mov
add
test
add
mov
add
fldenv
cmp
jl
push
movsb
int3
push
test
clc
test
sar
std
lods
iret
std
lods
sar
stc
cmpsl
int3
jmp
mov
inc
mov
stos
jne
popf
popf
or
add
add
dec
dec
push
aaa
jae
je
stos
test
int3
out
int
cmc
leave
int3
int3
sti
leave
lret
enter
mov
bound
jmp
add
mov
gs
add
iret
add
fildl
jmp
xchg
std
mov
mov
fdivr
mov
mov
sar
jmp
lret
rol
scas
lods
lods
mov
add
add
add
add
pop
or
aad
dec
loope
jecxz
fsubp
loopne
fcmovnb
fcmovu
aad
out
shll
test
je
cmpsb
push
popa
ljmp
add
enter
aad
jb
in
jl
lock
mov
sti
loope
inc
loope
inc
loopne
dec
dec
loope
cld
fdivr
out
mov
lret
mov
xchg
popf
sahf
pushf
sbb
add
add
std
add
std
incb
ljmp
in
in
in
xor
loope
loop
les
mov
mov
add
mov
inc
add
into
add
fildl
jne
jmp
insl
mov
cld
fdivrp
std
iret
out
shl
std
shl
call
out
std
xlat
call
cld
shl
push
xlat
fcmovne
sar
mov
mov
and
add
add
std
std
add
std
std
add
cld
incb
aad
aam
mov
pop
xchg
lahf
or
ljmp
add
add
roll
jo
loopne
ja
out
and
std
shl
std
fldpi
std
fsubr
cld
fld1
cld
fsub
cld
fsubr
xlat
call
push
aad
mov
sahf
sahf
das
add
add
into
int
or
bound
ljmp
add
enter
aam
jb
loop
ja
out
das
nop
stc
fwait
leave
cli
lret
loope
stc
lret
fdivrp
test
aad
repz
out
ret
in
out
shl
in
shl
in
fucomp
enter
stos
test
das
std
std
add
add
add
aad
mov
je
or
insb
inc
sbb
lret
and
xlat
cs
ficoms
clc
loop
mov
out
jecxz
leave
jmp
fidivrs
leave
faddp
sarb
in
fistpl
in
call
rorl
mov
add
stos
stos
lods
add
xchg
movsb
les
xchg
mov
nop
fidivrl
jg
rol
lods
mov
mov
ret
nop
aam
enter
lret
insl
aad
int
aam
rorl
fcomp
cmp
loopne
das
in
frstor
loop
lock
jmp
or
std
incb
std
incb
mov
mov
outsb
mov
stos
jns
mov
mov
mov
mov
xor
leave
leave
and
rcl
pop
sarb
or
loopne
or
int3
into
add
std
incb
std
add
add
add
into
into
shufps
or
int3
int3
into
add
std
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
fwait
lcall
rol
enter
leave
mov
ret
ret
ret
mov
scas
insb
stos
lods
stos
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
jmp
aad
std
rcl
sar
iret
into
int
vshufps
mov
test
gs
push
push
add
add
add
add
add
add
add
add
jno
jb
pushw
dec
dec
inc
das
cs
and
add
add
mov
mov
cmpl
dec
into
int
aam
sar
into
into
iret
inc
enter
mov
lcall
mov
push
add
add
add
add
jne
jae
xchg
adc
outsl
outsl
ret
bound
outsl
outsb
outsl
jb
pusha
pusha
cmp
pop
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
lcall
cltd
xchg
lds
jae
es
das
add
add
add
add
je
jb
popf
xchg
fwait
mov
test
clc
mov
test
test
push
push
push
inc
mov
pushf
into
movsb
mov
mov
decb
mov
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorb
lods
movsb
test
cld
mov
mov
xchg
xchg
xchg
cld
popf
sahf
popf
cmc
cwtl
lcall
push
push
push
imul
jle
lea
xchg
testl
mov
mov
jno
mov
lods
scas
push
lods
lods
stos
add
add
add
mov
mov
scas
cld
xchg
xchg
xchg
call
fwait
cltd
lcall
cltd
cltd
std
xchg
xchg
xchg
out
xchg
mov
loope
jne
out
nop
bound
std
pushf
inc
jne
cmpsl
cmp
sub
pushl
sbb
ss
mov
mov
imul
int3
add
xchg
pop
lods
movsl
stos
test
lahf
popf
lahf
jmp
movsl
movsl
call
imul
inc
je
lea
imul
sbb
call
or
mov
sbb
je
mov
sub
les
mov
mov
subl
jae
push
mov
movsl
cmpsl
cld
cmpsl
test
ljmp
mov
lcall
sub
mov
pop
incl
add
decl
add
mov
adc
shll
int3
inc
mov
rolb
call
inc
call
dec
xchg
dec
cwtl
mov
mov
mov
movsb
movsl
movsl
push
add
add
push
push
xchg
xchg
xchg
test
mov
scas
pushl
mov
movsb
call
sbb
pop
decl
add
mov
add
mov
push
xchg
fistpl
jmp
pop
mov
jmp
cmpsl
call
fwait
mov
mov
cmpsl
test
add
add
arpl
adc
pushf
lcall
mov
mov
scas
lcall
xor
cltd
and
xchg
or
mov
add
mov
xor
jmp
ja
jmp
mov
out
jl
push
jg
ficompl
mov
and
add
add
adc
imul
mov
mov
mov
ret
sar
mov
jmp
inc
jle
mov
add
add
mov
gs
pop
insb
fisttpl
in
lea
notb
clc
xchg
jmp
movsl
inc
mov
movsb
sub
inc
inc
inc
adc
push
xchg
mov
mov
inc
ret
ljmp
cmp
sbb
movsl
add
mov
gs
add
aam
jns
in
insl
lods
clc
cmpsl
iret
stc
stos
iret
cld
lods
sar
std
scas
sar
cld
scas
iret
in
mov
inc
mov
movsb
ds
std
incl
xor
xor
jo
jno
scas
mov
mov
aam
rcl
rcl
out
lret
leave
lret
cli
mov
mov
jmp
add
ret
add
aad
jno
out
xchg
stc
mov
cld
mov
inc
cld
ret
std
rcr
lock
shl
cmpsl
test
add
add
add
jmp
or
out
call
outsb
fcmovu
mov
add
mov
add
add
out
cmp
cld
into
in
dec
in
std
shl
call
in
std
aam
push
leave
fcos
aad
int3
in
scas
scas
scas
popa
jg
jg
std
incl
incl
int
shrl
mov
add
mov
add
loop
js
cmc
push
cmpsl
dec
loopne
cld
xlat
call
aad
cld
shl
stc
shl
push
leave
fsin
fmul
shl
mov
mov
xchg
xchg
xchg
pop
ret
adc
mov
add
mov
push
jne
fistps
jg
in
insb
lods
cld
out
mov
shl
call
rcl
call
leave
aam
ljmp
scas
les
lcall
mov
sahf
lods
xchg
and
push
mov
shll
jbe
mov
mov
lret
int3
outsl
fxch
iret
pop
dec
in
fistpll
out
call
sbb
rol
add
mov
lods
arpl
lods
mov
ret
mov
cs
mov
lret
sbb
fstp
bswap
into
into
or
aad
push
incb
cmpl
add
add
add
rol
std
add
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
call
mov
rcll
sub
stos
inc
jl
into
gs
sub
out
and
or
je
sub
xchg
xchg
and
in
and
aaa
cmp
imul
mov
cmp
fidivrs
adc
rclb
cltd
xor
jne
test
xchg
xlat
fcom
insb
or
sbb
pop
dec
cmp
jl
adc
into
shrl
movb
je
and
sub
imul
xchg
mov
enter
sti
jmp
test
dec
cmp
subl
pop
mov
ret
in
cmc
loope
mov
dec
xor
imul
sti
mov
aas
in
xlat
sbbb
push
pop
cmc
aas
sub
adc
mov
xor
rcr
jae
pop
mov
xchg
push
pop
xlat
outsb
mov
scas
cmpsl
lods
cmc
mov
enter
add
xor
push
in
dec
push
xor
subl
movsb
push
out
mov
outsb
add
pop
dec
rcrb
add
push
movsl
stos
and
sub
js
hlt
movsb
pop
push
out
dec
jnp
adc
into
cltd
xor
pop
xor
dec
inc
mov
insl
lcall
mov
xchg
xchg
sub
or
test
sbb
mov
dec
in
or
outsl
push
inc
pusha
xchg
sub
mov
inc
in
stos
inc
flds
into
gs
fnstenv
pop
in
orl
adc
aam
pushf
xor
testb
pop
dec
test
outsl
scas
pushf
pop
lret
mov
push
jmp
xchg
pop
jo
mov
and
aaa
add
pop
mov
bound
test
inc
ficoml
pop
sub
dec
push
call
js
outsl
push
into
cltd
jbe
lret
out
lea
in
xchg
sub
inc
stos
push
mov
lods
arpl
pop
adc
loope
loopnew
adc
in
and
cmp
sub
mov
les
mov
pop
ret
repz
test
fs
inc
mov
mov
lock
and
enter
outsl
arpl
push
out
jl
lea
lret
adc
cld
scas
mov
loopne
xor
dec
add
xorb
mov
ret
lods
inc
cmc
cmpsb
daa
mov
dec
clc
inc
fsubrl
push
sbbl
sbbl
inc
out
lahf
and
fcoml
mov
cli
in
push
sbbb
call
mov
scas
insb
lods
mov
int3
mov
fists
adc
xchg
jno
arpl
es
aaa
into
sub
lods
inc
or
jge
lret
bound
jae
sarb
xorb
pop
sahf
add
inc
ja
and
fs
fisubl
leave
popa
clc
cli
or
dec
nop
daa
mov
mov
ret
hlt
xor
cli
gs
sbbl
lcall
scas
in
sub
push
pop
push
ss
jg
jb
pusha
push
jmp
sar
nop
add
jb
in
pop
scas
push
push
xchg
sub
ja
int3
test
scas
inc
mov
push
ljmp
jb
dec
jmp
xor
daa
mov
ret
hlt
movsb
daa
mov
inc
testb
imul
cli
jns
or
int3
push
sub
pop
popa
inc
fstl
mov
sti
in
add
stc
nop
sbb
cmp
lods
mov
int3
mov
ficoms
or
subb
cmpsb
pop
mov
or
sub
sub
outsb
jp
scas
inc
dec
cltd
inc
fcmove
outsl
sbbb
in
testl
jo
pop
repnz
xchg
add
rclb
mov
sbb
inc
gs
js
push
xor
movsl
cmp
push
xor
xor
shlb
movsb
cs
adc
es
and
cmpsl
jge
cmp
jae
xor
sub
out
cmp
sbb
jnp
shlb
das
mov
fcomi
xchg
es
jmp
adc
ds
nop
insb
les
test
mov
mov
push
fmul
pushw
jb
push
sub
pop
pusha
shl
mov
mov
jb
and
mov
and
test
shrb
push
mov
outsb
or
push
call
inc
and
stos
inc
adc
or
pop
repnz
fcmove
or
mov
inc
xor
shlb
ret
mov
dec
out
sub
pop
jecxz
inc
adc
cmpsl
ds
or
lds
inc
ficoms
data16
or
jne
cli
adc
aam
and
js
shll
into
add
xchg
sub
and
lret
dec
in
iret
ljmp
and
pop
cmc
clc
ret
or
pop
sub
ret
test
bnd
and
pop
sub
roll
repnz
fs
push
pop
shlb
repz
dec
in
xor
fs
repnz
inc
fstps
lds
lret
repnz
insl
in
fsubrs
cmp
ret
xor
icebp
mov
mov
aaa
fs
in
repnz
fdivl
aaa
nop
daa
mov
in
mov
test
arpl
mov
pop
mov
es
arpl
lock
mov
sub
fs
mov
xchg
bound
xchg
sub
out
and
imul
cmp
and
or
mov
pop
lock
popf
pop
aam
dec
or
ljmp
sub
jg
fistpl
jmp
dec
sub
cltd
pop
ficoml
or
sbbb
push
inc
fisttpl
dec
loope
fisubl
or
pop
cmc
repnz
and
add
or
push
repnz
inc
fistl
adc
repz
aas
pop
mov
jns
ret
call
push
dec
and
add
imul
or
sbbl
sbb
push
dec
out
push
in
sbb
or
mov
sbb
pop
icebp
sbb
or
cmp
addr16
and
pop
icebp
push
repnz
pop
cmp
sbb
or
or
lods
rcrl
inc
fcomps
std
fbstp
xor
addr16
mov
js
pop
mov
cltd
cmpsl
mov
adc
ds
push
xor
ljmp
jno
mov
lcall
call
add
jo
sbb
repz
push
or
testb
cmp
imul
scas
xchg
xchg
int3
and
mov
dec
xor
push
lea
lahf
mov
filds
or
imul
pop
pop
sbbl
lods
lods
sbb
add
sub
gs
push
inc
fmull
lods
icebp
mov
shrl
push
std
shrl
and
ja
jge
loop
test
lret
sti
push
dec
loopne
and
mov
int
pop
out
cld
push
insl
add
sbb
test
xor
inc
aas
jne
inc
xlat
dec
stos
shrl
aam
rorl
add
add
stos
xor
rcrl
pop
mov
push
pop
push
popf
cmp
or
fstpl
push
cmp
pop
push
xchg
jo
jnp
cmpxchg
xor
or
dec
jecxz
and
lcall
popf
xor
jge
inc
stos
xlat
outsb
cmc
ret
pushf
xor
sbb
mov
lea
mov
push
jmp
cmp
sbbl
lea
xchg
sub
cmp
ret
push
test
inc
fidivs
movsl
jno
rcll
movsb
cmp
icebp
test
jb
scas
inc
je
sbbl
call
pop
jbe
cmp
fldt
stc
adc
das
inc
rorb
push
push
fldl
cwtl
or
mov
mov
mov
fists
push
xor
fs
jne
pop
test
xorb
or
pop
daa
inc
fcoms
xchg
pop
cmpb
jno
enter
je
iret
or
pop
sbb
dec
jbe
dec
movsb
addr16
cwtl
clc
lea
mov
insb
insl
lcall
or
loope
lret
ret
xor
popa
jo
cmp
mov
sbb
ret
rolb
pop
out
out
and
jb
xor
shll
lods
test
inc
jns
lock
pusha
pop
sbbl
mov
cmp
xlat
xor
and
out
jg
jecxz
mov
es
mov
and
lock
xlat
jl
add
dec
or
insl
lahf
popf
push
nop
inc
call
enter
cmp
adc
out
arpl
divb
cmpsl
icebp
ja
jle
sahf
scas
lret
and
lret
js
dec
jbe
xor
fsts
sbb
fstps
mov
stos
mov
test
jbe
pushf
mov
aaa
jns
enter
dec
mov
insb
fmull
in
insb
ficomps
jecxz
dec
adc
xor
iret
es
inc
in
pop
cmp
icebp
mov
push
adc
and
and
clc
pop
add
out
xor
push
test
mov
mov
clc
sub
loope
inc
jne
jb
lea
pop
adc
stc
add
sub
lods
pop
jecxz
ljmp
pop
jb
fldt
repnz
andl
lock
adc
flds
test
pop
bound
dec
pop
push
iret
cmpsb
jge
xor
jo
and
xchg
xor
pop
mov
sub
sbb
rcrb
pop
push
dec
rcrb
dec
mov
mov
nop
aam
test
sbb
xchg
or
mov
push
int
add
rcll
inc
and
push
cmp
pop
inc
out
pop
mov
mov
int
les
or
xlat
in
imul
add
std
ret
imul
dec
add
dec
testb
push
xor
out
adc
dec
aaa
and
mov
sbb
les
aas
in
dec
mov
daa
shrb
test
push
jbe
push
xor
sbb
movsl
into
mov
cmp
pop
xor
pop
adc
and
cmp
inc
mov
sub
sbb
push
outsb
mov
mov
popf
or
mov
nop
ss
lcall
daa
and
mov
cltd
leave
ja
push
sbb
adc
cli
testb
in
test
pop
stos
sbb
dec
repz
push
inc
mov
mov
or
leave
mov
dec
fs
adc
dec
mov
jns
jns
lock
negl
xchg
inc
jmp
clc
jp
jp
jo
pop
xchg
mov
test
cmp
sub
push
ljmp
cmp
mov
and
mov
adc
jl
push
scas
movsl
xchg
sub
iret
fidivl
jbe
sub
test
mov
stos
inc
ret
fsubrs
mov
repz
scas
inc
out
ret
pop
leave
pusha
dec
pop
shlb
lock
sahf
adc
lea
daa
hlt
mov
pop
bnd
xchg
sub
adc
aas
dec
xchg
iret
imul
data16
lcall
sbb
and
inc
mov
cmp
test
mov
cmpsl
lods
test
das
rorl
repnz
pop
insl
sbb
ss
insl
sub
inc
hlt
mov
loopne
mov
add
inc
xlat
lods
sub
mov
pop
cmc
jbe
addr16
jl
mov
sub
and
rorl
cld
ljmp
pop
int3
mov
out
mov
jb
shrb
popf
cmpsb
cmp
xchg
xlat
les
mov
loop
adcl
push
lods
add
or
mov
das
addr16
lods
lahf
cmp
mov
aad
in
adcl
dec
lret
and
out
loope
mov
aad
xchg
scas
mov
pop
ror
mov
ljmp
scas
or
lcall
and
test
aas
sti
shlb
ficoms
cmc
pop
testl
push
sbb
fnstenv
cli
mov
mov
mov
lods
jp
hlt
mov
scas
adc
out
inc
fistl
jb
mov
lret
nop
daa
inc
xchg
adcb
addr16
xor
mull
cli
xchg
aam
fidivl
std
sbb
mov
push
lods
std
mov
adc
jbe
dec
mov
ljmp
jno
repnz
pop
lods
sbb
jbe
mov
xchg
js
int3
arpl
xchg
sbb
sbb
or
jo
data16
jge
push
jmp
xchg
test
sarl
jb
es
mov
ss
dec
rclb
mov
jne
ja
jb
push
std
xchg
jp
stc
nop
rclb
sahf
cmp
sub
and
out
pop
enter
jno
or
adc
std
test
jg
cmpsl
or
popf
xor
jge
movsl
mov
push
imul
test
fmull
or
es
push
sbbl
out
call
add
cld
and
stos
scas
je
dec
xchg
xor
xchg
scas
shrl
mov
repnz
insl
add
xchg
adc
pop
in
lds
dec
dec
jecxz
and
popa
mov
push
sub
mov
test
cmc
mov
scas
cmpsb
cmp
jne
les
lahf
xor
inc
and
jns
jo
out
mov
xchg
jecxz
jge
mov
pop
mov
fistpl
les
test
pop
fwait
in
add
mov
xchg
inc
es
mov
xlat
adc
mov
fsub
js
xchg
pop
cmc
add
xchg
arpl
jl
in
sbb
es
and
rclb
lods
inc
push
jp
lock
js
je
mov
push
int3
jo
xchg
cld
out
sub
push
sbb
lods
in
iret
push
vpunpckhbw
js
std
pop
adc
xchg
sbb
xchg
enter
mov
push
in
jle
xchg
jae
out
cli
xchg
loope
xchg
sub
sbb
pop
shll
into
data16
mov
int3
in
orl
sbbl
and
mov
mov
sub
rolb
repnz
loopne
arpl
gs
popa
mov
xchg
insb
mov
mov
frstor
rcr
loop
push
sbb
dec
xor
je
mull
sub
jne
pop
or
xchg
sub
xchg
mov
aam
lods
and
loope
dec
dec
xor
jp
call
add
sbb
pop
pop
or
mov
and
jo
lods
inc
push
cltd
jl
sbb
lret
xor
jg
inc
stos
inc
pop
int3
push
popf
adc
enter
and
bound
inc
fprem1
in
pushf
dec
sbb
sbbl
addr16
test
ret
mov
push
inc
mov
gs
cmpsl
ds
mov
andw
cmpsl
std
xchg
stc
mov
jp
adc
in
add
mov
fcomps
push
cmp
incb
push
pop
repz
xor
adc
mov
mov
cmp
mov
repnz
loope
addr16
insb
gs
call
mov
sbb
test
dec
cmp
lock
das
and
dec
loope
dec
dec
in
xchg
push
ret
jae
jmp
add
dec
insl
sbb
push
stos
xchg
imul
lock
cld
xchg
fs
push
movsl
xor
sub
test
dec
loope
dec
inc
fldl
punpckhwd
mov
push
out
cmpsl
xchg
int
outsb
add
and
sahf
xor
xchg
repnz
js
xchg
fidivl
add
xchg
jg
clc
into
xchg
push
mov
ljmp
sub
inc
dec
in
notl
mov
imul
fbstp
xlat
mov
push
insl
mov
ds
push
push
add
pop
xchg
sub
je
mov
sti
xchg
inc
pop
add
jo
pop
mov
cltd
daa
mov
jns
xor
push
xchg
pop
repz
out
icebp
jp
adc
jnp
ret
das
dec
jmp
xor
mov
aam
cs
aad
lods
dec
repnz
add
mov
fldcw
sbb
xor
jae
mov
xor
pop
stos
inc
test
enter
pushf
xor
aad
jge
add
fwait
cltd
jo
mov
mov
or
inc
fmuls
add
idivb
adc
popf
lret
lds
fwait
xor
popa
pop
cmc
inc
or
adc
jb
outsl
scas
das
lcall
cld
mov
stos
add
mov
cmp
aam
add
add
add
sub
sub
or
push
test
loope
scas
shrl
orl
xchg
les
ss
and
jmp
add
js
shlb
sbb
call
push
popa
push
movsl
cmp
inc
xchg
ret
adc
dec
loope
add
cmpb
xor
xchg
cs
daa
mov
mov
int3
lcall
ljmp
jno
add
mov
inc
jge
roll
lods
inc
mov
leave
lret
bound
fldl2t
addb
jne
fwait
sub
sahf
bound
mov
daa
cmp
cmp
jp
push
popa
clc
jbe
out
xchg
lahf
jg
in
push
movsl
jmp
sahf
xor
mov
rorl
pop
insl
fidivl
jg
adc
clc
or
xchg
cs
and
lds
aas
test
jecxz
ss
pop
hlt
push
repnz
jnp
push
lea
cmpsl
pop
sub
lds
ja
dec
inc
dec
jecxz
nop
aad
leave
icebp
jp
fsub
repz
negb
test
mov
pop
add
xchg
sub
ja
mov
in
andl
add
and
and
sub
repz
inc
fst
sbb
pop
push
repz
jmp
jns
jnp
jb
xor
ret
pop
mov
ja
mov
xchg
hlt
mov
sbb
test
cmpl
mov
or
rcr
lock
shll
ja
pop
push
pop
out
cmp
or
inc
push
mov
push
xchg
scas
out
xchg
mov
bound
adc
movsl
outsl
daa
jmp
ret
mov
rorb
into
mov
mov
sbb
outsl
push
xor
or
test
cmp
inc
mov
inc
in
xchg
mov
les
in
cmp
and
jae
xor
iret
cmpb
mov
sub
testb
or
fcoms
cmp
xor
mov
dec
xchg
loope
xlat
sbb
and
mov
and
fcoms
add
sbb
hlt
mov
jno
adc
mov
imul
fwait
xor
fcmovnb
pop
or
je
mov
fsts
sbb
xchg
xlat
in
mov
orl
icebp
inc
outsl
adc
outsl
std
jo
xor
push
dec
in
mov
mov
sbb
neg
sub
jg
cwtl
mov
pop
bound
or
insl
jo
jmp
das
jno
sub
leave
bound
xlat
cmc
std
xor
mov
shl
pusha
pop
sub
nop
pop
inc
mov
inc
shlb
jo
inc
push
dec
iret
sbb
mov
mov
xchg
xchg
notb
sbb
xor
lahf
dec
xchg
cmp
pop
pop
mov
fcomp
pushf
xchg
mul
loop
mov
xchg
mov
and
pop
xor
pop
adc
scas
scas
stos
mov
outsl
in
mov
push
dec
sbb
and
icebp
int
popf
dec
clc
xchg
testb
lret
movsb
into
cmp
pop
mov
mov
mov
loop
arpl
mov
leave
daa
in
test
cmp
add
inc
mov
scas
cmp
idiv
xchg
mov
jae
xor
mov
push
out
popf
xlat
or
in
add
fidivl
movsb
mov
sahf
mov
mov
test
sub
movsl
dec
addr16
mov
dec
popa
add
stos
loopne
int3
mov
adc
lcall
or
pmullw
insl
insb
jmp
mov
xchg
cmp
roll
push
int
cmp
faddp
fiadds
xorl
test
mov
rcll
jmp
fs
inc
mov
repz
add
dec
out
push
push
jg
test
push
mov
je
inc
jl
int3
adc
ret
test
daa
xchg
xorl
and
jecxz
stc
mov
pusha
xchg
movl
and
sub
inc
mov
out
je
addr16
jmp
and
andb
adc
stc
lods
std
adc
cmpl
aam
push
pop
sub
iret
aas
mov
hlt
pop
int
insl
les
dec
jns
inc
rcrl
ds
test
movzbl
adc
xchg
fneni(8087
andl
outsb
movsl
adc
xor
fcom
or
xor
mov
or
incl
cmc
popa
xchg
addr16
add
dec
sub
cmp
push
nop
iret
sbb
lret
xchg
fwait
mov
outsl
cmp
jnp
jmp
pop
test
dec
cltd
in
jne
adc
push
jbe
sbbb
and
loope
xchg
push
mov
in
fnstenv
add
add
iret
add
dec
xchg
cs
repz
les
jno
pop
adc
repz
cltd
cmp
lret
mov
mov
and
push
addb
ss
pop
push
or
fidivrl
push
mov
cmpsb
out
pop
lcall
add
mov
xor
pop
int
ljmp
out
cmc
mov
sub
pushf
and
cli
pop
imul
arpl
mov
mov
outsl
push
clc
mov
hlt
mov
mov
jne
mulb
pop
jne
or
test
push
cmpsb
les
mov
lea
mov
dec
jo
test
rcll
inc
push
xlat
dec
mov
and
ljmp
popa
fcompl
into
pusha
inc
dec
or
or
hlt
outsb
sbb
lcall
pop
int3
nop
push
dec
xchg
dec
sbb
and
call
jl
or
xchg
insb
pop
flds
xor
leave
inc
mov
sub
xchg
data16
push
repnz
dec
sbb
mov
jecxz
leave
push
push
push
mov
lret
and
jge
xor
add
jp,pt
fcoms
push
mov
in
dec
mov
inc
daa
mul
aaa
in
and
jmp
fwait
clc
data16
iret
push
jmp
sbbl
jg
dec
test
test
sub
pop
push
cmp
iret
mov
xor
xchg
pushf
xchg
enter
fldenv
push
outsl
push
ret
push
dec
xor
popa
pop
out
test
lds
testb
or
xor
sbb
push
cmp
aad
ret
mov
add
mov
insb
incl
jg
push
push
cmp
sub
fcompl
loop
xchg
add
cmp
enter
sahf
test
sub
sub
or
sbb
cmp
loopne
cs
xchg
cmp
int3
cltd
mov
insl
xlat
xor
jo
lea
iret
daa
repnz
mov
outsb
mov
sub
and
mov
pushl
fmull
jb
test
cmovae
or
icebp
mov
sbb
lret
cli
aam
mov
and
mov
mov
dec
daa
testb
sub
pusha
or
test
das
mov
push
sahf
imul
stos
add
iret
and
aaa
clc
and
in
dec
pusha
xchg
lea
sbb
and
fiadds
repnz
adc
test
loope
movsl
dec
sub
adc
and
loope
sbb
fnstenv
pop
jns
loope
aam
add
out
inc
movl
jno
mov
sbb
fmuls
fnstcw
adc
ret
rcrl
mov
mov
dec
pop
dec
lea
push
int3
cmp
aad
pop
rcrl
mov
sbb
ret
in
push
jb
cmp
imul
sbb
inc
mov
loope
movsl
fisubrl
out
add
xor
cmc
jne
cld
pop
jo
scas
lods
inc
xchg
rorb
inc
xchg
test
and
sti
mov
push
dec
jno
mov
dec
addr16
jl
mov
arpl
push
push
fcmovnbe
mov
std
push
je
lret
enter
mov
gs
shrl
mov
cs
testb
push
testb
stos
fmuls
xchg
xor
sbb
out
jne
jns
pop
push
pusha
inc
clc
loope
mov
repnz
push
and
xchg
mov
fcomps
adc
lds
mov
sar
inc
ljmp
xor
cmp
addr16
test
jnp
xor
and
sub
xor
lret
out
dec
pop
lret
aaa
inc
lock
in
jbe
mov
jp
xor
ds
sbb
stos
pop
or
cwtl
nop
push
in
add
arpl
pop
inc
enter
xchg
mov
daa
std
sub
xchg
mov
cmpsb
sbb
cmp
cli
dec
pop
pusha
xor
dec
and
inc
and
pop
bnd
or
lods
test
enter
sahf
xor
fwait
cmp
in
imul
insb
mov
test
sbb
push
pop
push
and
xchg
mov
adc
mov
dec
sub
mov
sbb
dec
mov
sub
xchg
xchg
add
fs
lret
mov
cmp
push
or
jne
lea
and
movsb
push
cmp
jp
lret
stos
jge
pop
icebp
loop
pop
cwtl
inc
mov
imul
decl
cmp
ss
lret
pop
aad
daa
mov
mov
xor
mov
mov
fisubrl
in
stos
dec
std
bound
es
mov
ret
push
xchg
and
jmp
inc
cmc
jbe
in
xchg
in
sub
mov
mov
mov
cli
xchg
enter
repnz
jnp
mov
scas
shlb
mov
mov
outsb
lods
inc
lcall
pop
clc
bound
jnp
clc
and
or
data16
fs
jmp
ds
test
mov
mov
adc
sub
push
pop
stos
and
mov
mov
in
cmpsb
xchg
inc
mulb
ret
jp
into
adc
sbb
divb
shrb
fwait
pusha
repz
sbb
cmpsb
push
in
inc
jo
mov
rorl
mov
fwait
sbb
clc
mov
sbb
inc
clc
rolb
je
out
loope
push
jl
faddl
or
mov
mov
mov
push
and
push
xor
movsl
cmpsl
cmp
adc
mulb
je
lods
das
sbb
arpl
daa
jecxz
cmp
fildl
repz
mov
cwtl
outsl
das
jecxz
scas
das
in
mov
cmp
outsl
jbe
roll
popf
xchg
add
sub
mov
jno
push
sbb
xor
and
bound
out
in
cli
pop
test
push
lods
ja
rol
mov
loope
inc
pushf
xor
dec
add
data16
ja
orl
incb
xor
ja
add
test
inc
test
xchg
loop
pusha
shlb
cmp
pop
xchg
lcall
das
gs
push
mov
rclb
or
out
movsl
jae
jbe
mov
cmp
cmp
in
ljmp
mov
loop
ja
or
or
pushf
and
cmp
aaa
je
adc
mov
ss
pop
jnp
lcall
lods
out
das
jno
cmp
jbe
sbb
inc
add
push
enter
cmpsb
insb
xor
scas
xchg
and
hlt
pop
cmc
ret
xchg
faddp
dec
sbb
or
or
js
push
icebp
rcll
lods
lret
lds
test
lods
pop
mov
daa
xchg
iret
sbb
mov
out
sub
sbb
xor
fstps
loope
adc
and
test
or
sbb
xlat
fs
insb
flds
std
aam
push
and
or
mov
sub
ret
mov
divb
dec
jb
in
mov
and
cld
cmp
or
pusha
mov
inc
sub
add
dec
cmp
push
mov
aaa
pop
pop
inc
xor
xorl
test
sub
lcall
push
stos
add
mov
outsb
in
repz
addr16
jmp
and
mov
mov
fcomip
adc
sub
or
inc
push
mov
aam
shrl
jle
or
push
pushf
aam
push
push
xchg
lods
xor
cmc
dec
fbld
loop
outsl
pop
xlat
inc
enter
leave
push
jbe
mov
mov
and
jno
pop
cs
inc
cmp
cwtl
add
sahf
sarl
xor
jno
sbb
lret
lret
psadbw
add
sbb
fadd
pop
movsb
mov
add
mov
mov
loopne
sbb
lret
ljmp
pusha
mov
xchg
pop
inc
xchg
sbb
add
push
repnz
dec
jns
pop
insl
je
mov
pop
jge
sbb
adc
push
rcll
cmp
and
nop
stc
out
pushl
add
push
lds
mov
mov
insl
xor
xchg
adc
and
std
xlat
xchg
push
sbb
icebp
or
les
call
xor
mov
xchg
and
inc
insb
pop
cmp
gs
inc
fsub
fistpl
jns
dec
xchg
ret
test
jge
jno
mov
mov
xchg
bound
lret
mov
dec
mov
orb
xchg
jbe
xor
es
jmp
cmpsl
xchg
ljmp
push
or
ret
lahf
inc
mov
mov
icebp
add
adc
jae
jbe
rcr
pop
push
or
pop
jbe
das
dec
es
in
sub
lcall
rcrb
mov
jg
xor
lcall
fs
xchg
xor
mov
rcl
pushf
inc
sub
punpcklbw
out
vpor
lock
adc
call
sub
sbb
and
sub
jo
cmc
not
and
cwtl
sbb
mov
fnsave
mov
jg
adc
cmp
sub
stos
mov
fnstsw
icebp
xchg
sahf
ret
aam
or
inc
outsl
outsl
jae
jp
int3
push
loop
adc
push
out
adc
repnz
aas
jmp
imul
sbb
es
xchg
push
push
dec
lea
cmpsl
mov
daa
add
outsb
das
lret
cltd
lcall
test
or
scas
xchg
or
or
xchg
lret
inc
inc
idivl
dec
cmpsb
js
push
adc
lret
inc
popf
lods
imul
xchg
sub
dec
cmpb
sahf
repz
aad
mov
ret
or
inc
enter
daa
shr
in
out
jecxz
xor
adc
insb
adc
lock
ss
cwtl
dec
pop
push
or
mov
sahf
inc
icebp
lods
adc
push
jns
push
and
shll
sarl
adc
adc
push
cs
lahf
sub
xchg
cltd
pop
hlt
hlt
repz
sbbl
test
aas
loope
mov
rcr
cmpsb
test
xchg
pop
xor
dec
jmp
sbbb
neg
pcmpgtw
cmp
sub
mov
and
mov
mov
sbb
pop
pusha
jno
cmpb
lock
push
sbb
mov
jp
jmp
jg
sbb
popf
insl
imul
call
jge
and
in
scas
push
addr16
cmp
lods
push
invd
mov
test
inc
cmpsl
jns
or
ret
pop
rcrl
cmpsl
lds
gs
in
dec
test
cwtl
jmp
fdivl
dec
jo
xchg
aaa
mulb
dec
repz
insb
and
lret
pop
xchg
mov
fwait
dec
mov
gs
pop
mov
or
outsb
add
and
pop
jge
or
into
mov
mov
cmp
mov
jae
jl
push
icebp
cli
mov
mov
jno
sti
popf
je
aam
dec
js
mov
mov
ret
push
sub
push
int3
lret
imul
and
adc
hlt
hlt
decl
cmp
pop
and
aaa
mov
and
hlt
xchg
icebp
and
int
mov
movsw
cmpsl
push
inc
imul
sub
and
mov
jecxz
test
mov
stc
cli
mov
rorb
mov
les
fisttps
dec
into
shl
imul
sub
jl
dec
and
es
mov
js
andl
imul
pushf
xor
stos
xchg
mov
stc
stc
mov
aas
aam
popf
mov
push
jl
xchg
test
outsb
mov
xchg
pop
cld
add
xchg
mov
pop
add
aam
jg
push
leave
dec
xchg
in
int
lret
lcall
pop
push
scas
xchg
daa
jmp
aas
inc
inc
je
ret
popf
adc
lahf
mov
mov
shrb
mov
in
stc
sarb
xlat
fldenv
jg
and
dec
clc
pop
mov
mov
jmp
inc
pusha
test
xor
sti
outsl
sahf
out
insb
movsb
inc
daa
mov
mov
push
lods
in
rorl
outsb
sbb
xchg
enter
enter
cmp
push
jno
push
xchg
bound
test
into
jmp
jp
lock
sar
loopne
pop
data16
fwait
shrb
stos
lods
data16
lds
mov
xor
imul
test
fdivp
fistl
shrl
adc
cwtl
inc
inc
aas
and
mov
fbstp
dec
hlt
cwtl
pop
push
add
in
out
sub
cli
mov
adc
pop
inc
loop
mov
mov
and
adc
int3
lds
lret
sbb
lahf
ljmp
fldl
mov
out
rol
addr16
repnz
cmp
test
and
inc
dec
fldenv
dec
cmpl
insl
repz
and
xor
cmp
das
out
sbb
mov
or
xlat
mov
insl
rcrb
push
jl,pn
stc
pop
cmp
test
xchg
pop
cltd
push
jge
add
xor
or
xor
lret
lret
mov
lea
add
frstor
and
dec
pusha
jns
cmp
dec
inc
jb
mov
imul
or
stos
add
cmp
nop
fsts
mov
xor
insl
out
aaa
xchg
mov
notl
lea
pop
add
sbb
mov
lret
or
loop
sub
adc
mov
and
add
cmc
mov
imul
shl
js
mov
test
cmp
inc
dec
sbb
jb
pusha
pop
imulb
fwait
pop
jns
mov
cltd
or
jne
shl
scas
xor
rolb
push
cmp
jnp
fsub
test
loop
xlat
xor
mov
repz
cli
sbb
insl
inc
push
into
popa
movsb
clc
add
cmp
das
jbe
iret
or
sti
loop
fistl
out
stc
cmpsb
mov
pop
in
in
push
or
lahf
and
and
sub
rcll
inc
adc
jns
fwait
clc
mov
or
ja
repz
cmp
cmp
and
or
icebp
fisttpl
sahf
ljmp
movsb
fsubrl
cmp
xchg
mov
inc
pop
mov
ficoml
sahf
adc
sub
fwait
xchg
mov
xchg
xchg
int3
das
pop
iret
movsb
xchg
jp
xchg
mov
mov
ss
sbb
sub
stos
ja
sbb
jb
jns
ljmp
fs
fs
cwtl
jle
push
jae
sub
aad
push
mov
xor
xor
inc
fcomp
cmp
or
pushf
dec
lods
iret
in
fsts
leave
or
mov
movsl
je
dec
inc
repnz
cmp
pop
sahf
inc
inc
shrl
cmpsb
jg
and
mov
and
and
test
xor
lret
sbb
jne
inc
fisubs
fsubl
mov
and
outsb
lods
rcl
push
push
jo
jbe
andb
shll
rcll
loopne
mov
sub
insb
rcrl
lock
sbb
aas
bound
pop
dec
insb
enter
icebp
loopne
movsb
mov
sbb
xor
pusha
loope
mov
cwtl
mov
mov
mov
xor
jne
idiv
xor
xor
dec
hlt
mov
jg
insl
in
pusha
mov
push
mov
pushw
inc
or
xor
ss
mov
add
ljmp
cmpsb
call
pop
inc
sarl
add
sbb
and
xchg
ret
cmp
cmc
and
mov
in
mov
lock
and
pop
jecxz
pusha
sti
loop
into
fisubs
scas
shlb
add
lds
repnz
fs
mov
cmpsl
jb
xchg
pminub
push
mov
xor
bound
std
shl
and
pop
cli
ret
mov
mov
mov
lret
dec
je
into
loop
mov
mov
adc
loop
or
xor
in
out
cmc
ret
jp
nop
in
adc
shl
adc
dec
loop
inc
arpl
mov
add
cmp
fcom
insl
sub
jnp
std
call
jne
mov
rolb
lret
inc
and
mov
leave
ret
hlt
je
fcoms
cmpb
out
add
xor
stc
out
pop
stos
lods
xor
aad
in
mov
jnp
xor
push
aad
xor
jb
push
movsb
mov
lret
outsl
scas
shlb
lea
cwtl
cld
lea
push
data16
or
outsb
out
std
dec
in
int3
pop
add
xchg
repnz
and
in
mov
xchg
jmp
cli
and
in
xor
leave
dec
push
mov
push
sbb
into
imul
push
hlt
neg
mov
lods
jp,pn
xchg
mov
jle
sbb
ds
jae
sbb
inc
pop
adc
bound
ja,pt
sub
dec
mov
in
out
je
in
sub
lahf
or
hlt
fiaddl
xor
inc
lret
mov
imul
xor
outsl
fsubrs
xchg
inc
jl
adc
and
movsl
les
clc
dec
sub
setle
aad
mov
adcl
fadds
xchg
xchg
test
mov
lods
mov
ret
sub
sbbb
jg
xchg
adc
test
inc
rorb
arpl
fucom
outsb
nop
leave
push
test
xchg
jno
jae
rol
sub
sub
add
out
cmp
pop
rclb
sbb
push
push
pop
sub
aad
jle
cmpsl
dec
sub
mov
jmp
lods
enter
add
jmp
dec
mov
sti
and
les
push
pop
pushf
mov
jmp
dec
icebp
dec
xchg
and
dec
je
test
pusha
or
lods
sub
insl
mov
jno
das
push
mov
fldl
mov
shll
cmp
mov
mov
cmp
add
out
daa
sbb
inc
mov
rcll
dec
push
inc
int
adc
push
adc
std
in
sbb
adc
jle
mov
sar
aad
iret
rolb
test
dec
subl
jo
test
scas
shlb
push
jnp
outsb
inc
in
sbb
or
out
lahf
fimull
push
push
add
arpl
stos
fdivp
out
data16
jecxz
push
test
xchg
loop
outsb
aas
in
push
inc
out
push
pop
mov
in
das
mov
cli
push
adc
fcom
xchg
not
mov
adc
adc
int
xor
arpl
pusha
and
scas
cs
js
call
aaa
sahf
jnp
scas
popf
addr16
rep
and
lret
sbb
mov
cwtl
cmp
sub
or
cs
cld
sub
dec
mov
cmp
test
xchg
mov
pop
adc
rcll
rorl
mov
mov
add
mov
and
int3
xchg
sahf
or
dec
subl
mov
enter
popa
es
fstpt
pop
mov
or
jg
or
add
orb
mov
insl
clc
test
in
mov
mov
decb
call
scas
es
push
mov
and
mov
std
xchg
jg
mov
pushf
shll
jnp
int3
mov
leave
sub
mov
mov
fstps
mov
stos
xchg
aas
add
in
out
sub
test
rol
outsl
sets
ja
sub
lret
dec
lret
je
xor
ret
pop
sbb
xor
xchg
cltd
int
pop
mov
inc
testb
add
shrb
in
hlt
jne
int
inc
jae
mov
xchg
fadds
std
sub
mov
adc
mov
cwtl
in
sbb
xor
sbb
cmp
cmc
push
mov
xor
imul
ja
mov
pop
inc
repnz
das
in
xchg
popa
mov
bound
push
cmp
sbb
inc
loope
fidivrs
jno
xchg
mov
xor
enter
insb
test
adc
daa
cli
mov
sbb
in
subl
pop
fmul
out
xchg
addr16
js
je
and
add
fcompl
out
xchg
jns
add
call
inc
aad
orb
outsb
stos
popa
gs
mov
test
andl
jae
inc
ss
cmp
jo
mov
sub
test
xlat
cmp
mov
cwtl
pop
test
mov
cltd
xchg
add
sub
jb
jbe
push
or
mov
into
das
push
xchg
push
loop
ret
cmp
arpl
insb
xchg
test
push
shll
mov
push
inc
or
or
cmovge
and
and
dec
jl
ret
test
mov
fadd
add
fidivl
hlt
call
lods
shr
jo
inc
cmp
mov
sbb
stc
adc
loope
mov
cmc
inc
and
fs
mov
scas
cmpsl
bound
int
jge
or
roll
out
in
cmp
mov
in
test
pop
inc
ficoms
clc
js
jmp
sar
out
adc
inc
cmp
les
icebp
push
shrl
cmpl
movsl
popa
jle
cmp
xor
and
inc
dec
fmuls
outsl
mov
ret
mov
insb
or
and
sbb
sbb
outsb
dec
sub
lcall
stos
xor
mov
or
setae
test
jbe
mov
pop
mov
sub
adc
pop
adc
sbb
xchg
pop
call
sbb
push
test
aas
dec
sbb
xchg
stos
inc
or
mov
test
xchg
mov
push
mov
pop
pop
orw
int
pop
pushf
jecxz
inc
sbb
hlt
adc
mov
into
popa
xor
aam
mov
pop
add
inc
lcall
or
or
or
ret
dec
out
adc
in
clc
sub
xchg
decb
cs
xchg
stos
in
mov
pushf
sub
cld
mov
mov
stos
jns
in
sub
mov
aad
fnstsw
test
insb
nop
lods
movsb
cltd
push
jae
xor
jb
lods
rcrb
aaa
aas
and
imul
shrl
les
cmp
mov
cli
mov
add
mov
sbb
subb
adcb
add
inc
sbb
pop
test
add
js
add
jecxz
mov
into
movsb
mov
push
inc
pop
in
fwait
mov
mov
xor
push
movsb
pop
or
add
inc
or
inc
aad
out
mov
inc
fdivrl
cmpsl
int
out
sarb
arpl
cltd
mov
mov
cwtl
outsl
in
scas
mov
test
dec
pop
enter
outsl
jl
inc
dec
dec
push
stc
jl
iret
cmpsl
mov
outsb
imul
mov
out
jle
sub
loope
mov
daa
and
std
fwait
clc
insb
dec
or
mov
out
adc
in
loope
adc
xor
push
pop
mov
ljmp
cmp
gs
push
push
fucomi
sub
insl
lcall
adc
cmp
pusha
jp
push
fbld
in
insl
inc
cmp
inc
sbb
mov
mulb
mov
cmp
cmp
add
add
pop
int3
and
push
cmpsb
sbb
mov
aaa
pushf
add
lea
pop
add
lcall
push
inc
xchg
jbe
cltd
pop
inc
and
lret
hlt
pusha
loopne
mov
out
es
xor
dec
and
shlb
and
out
jns
mov
cmp
test
or
cmp
cltd
cli
add
jecxz
das
sub
lods
popf
push
mov
mov
sahf
int3
out
hlt
dec
push
jg
add
fists
fistps
mov
inc
inc
movsl
add
sbb
hlt
pop
popf
mov
test
imul
enter
pop
lret
mov
xchg
xorb
fcmovu
andb
inc
push
call
imul
and
adc
jp
or
sbb
xor
jge
sbb
and
inc
mov
push
mov
pop
repnz
pop
push
and
lcall
addr16
jmp
dec
stos
in
xor
int
add
rclb
scas
cld
pop
sahf
jo
icebp
mov
and
in
jg
jae,pt
or
or
push
fwait
enter
dec
sub
ds
nop
jne
adc
adc
sub
add
stc
adc
ret
sub
inc
fisubrs
and
jbe
mov
add
das
push
in
and
arpl
je
out
lods
add
mov
mov
and
and
loopne
sbb
ja
pusha
into
mov
and
lret
insl
sti
iret
int3
test
dec
inc
int3
and
or
mov
cmc
fwait
add
scas
pop
and
mov
scas
jbe
xlat
cmpsl
rclb
leave
pop
cmc
cli
and
push
sbb
dec
jne
daa
cmpsl
outsb
pushf
xor
sarl
dec
adc
jno
outsb
in
test
rorl
jmp
das
movb
cmp
pop
pop
hlt
mov
add
loop
mov
cmp
xchg
sub
push
mov
mov
aam
in
adc
xchg
dec
or
xchg
imul
xchg
push
adc
call
or
cmp
dec
in
pop
jge
lea
add
cmpsb
xchg
fadds
mov
cmp
push
fidivl
dec
pop
jle
cld
xchg
ficompl
sbb
mov
inc
adc
rcrl
test
and
dec
loop
inc
cltd
xor
outsl
push
outsl
cltd
rcrl
xchg
sub
in
fidivl
in
inc
push
inc
add
jno
iret
imul
mov
fimuls
mov
push
mov
mov
fcoml
cld
push
xor
sbb
shrl
jp
cmp
mov
movsb
pop
and
jb
jl
lds
into
dec
jecxz
es
inc
and
pop
fs
pusha
sahf
jl
inc
cmpsb
mov
mov
add
mov
pop
push
inc
xlat
mov
inc
cmpsl
scas
xchg
sub
enter
cli
sbb
and
insl
add
inc
insl
jle
lea
lahf
jbe
leave
mov
push
in
adc
insl
outsb
pop
lds
test
pop
add
lds
dec
jle
js
cmpsb
cmp
ret
lret
repz
lods
sbb
outsb
add
stos
mov
fdivp
aam
inc
push
push
mov
jge
jno
out
jp
inc
movsb
lret
les
lds
popf
push
imul
dec
jno
sbb
int3
and
jbe
push
add
dec
jo
pop
stos
imul
hlt
mov
dec
lock
mov
test
lret
hlt
mov
js
adc
xchg
dec
outsl
mov
cltd
insl
stc
xchg
mov
pop
cmc
lock
sub
adc
mov
mov
ret
add
out
repz
sub
dec
popa
clc
ja
fs
xchg
cwtl
lea
mov
sbb
jecxz
ret
sbb
loope
dec
cmp
loopne
xchg
mov
lahf
mov
popf
xor
rolb
inc
dec
sub
sub
pushf
xor
mov
xor
or
jo
sub
push
push
pop
add
mov
gs
rcl
mov
repz
dec
and
mov
ret
or
cld
loop
add
push
add
addr16
test
in
ror
arpl
lods
inc
pop
pop
inc
fadds
mov
mov
pushf
and
daa
cmpl
adc
mov
add
sub
daa
and
jae
dec
mov
pushf
cmpsb
xchg
pusha
test
out
rcrl
dec
loopne
cmp
jl
stos
movsl
test
aam
fisttps
lahf
or
adc
push
jnp
mov
je
sti
lods
lds
dec
lea
pop
xchg
dec
sbb
stos
xchg
fs
jecxz
mov
push
in
shlb
cli
push
dec
in
sbb
cmp
pop
pop
cmc
andl
fs
and
xor
inc
dec
dec
in
movsb
cmp
ret
std
out
or
in
cmp
arpl
int
test
mov
fists
pop
adc
fs
insl
or
xchg
je
sub
in
rorb
or
xchg
sub
sub
push
xorb
lods
movsb
push
in
fmulp
xchg
cmp
dec
in
pop
xchg
sub
cmpsl
xchg
loopne,pn
into
gs
or
in
mov
in
stos
popf
xor
mov
add
cmc
mov
movsl
ss
pop
hlt
mov
add
mov
in
clc
popf
xor
or
xor
xor
fs
sahf
sbb
and
ljmp
xor
push
jns
xchg
xchg
stos
inc
lret
movsl
in
in
pop
hlt
push
push
jp
cmp
sub
bound
in
test
icebp
fstp
mov
or
int
sub
sbb
xor
dec
loope
xchg
dec
in
lret
popf
xor
in
jb
pop
pop
ret
pop
push
cmp
rep
xorl
into
inc
fisttpll
add
es
jmp
mov
rcrl
add
arpl
inc
and
pushf
xor
shll
hlt
sbb
hlt
inc
adc
xor
xchg
outsl
dec
jecxz
mov
xor
mov
xchg
sub
add
fs
sbb
test
cmp
cmpsl
dec
in
add
add
pop
sti
xchg
xchg
pop
stos
inc
mov
adc
mov
outsl
jmp
or
jle
bound
xchg
cltd
mov
inc
adc
push
cmovp
cmp
push
mov
ret
imull
mov
push
sti
mov
arpl
mov
outsl
into
adc
mov
outsl
dec
loope
cmp
arpl
dec
loop
add
add
fimuls
lahf
pop
pusha
push
mov
in
cmp
stos
add
pop
cmc
cli
push
cmpsl
mov
sbbl
fidivs
cmp
enter
dec
icebp
mov
fidivs
fwait
and
cltd
scas
lock
rcrb
mov
dec
pop
out
jle
inc
fstl
jge
int3
je
mulb
les
and
mov
push
fs
push
loop
push
pushf
push
lea
mov
push
adc
add
cs
fcompl
cmp
and
push
dec
fimuls
mov
jns
dec
repz
sub
sbb
mov
sub
xchg
mov
int
test
aas
loop
sub
push
mov
inc
jae
int3
push
mov
loop
sub
add
sub
mov
inc
xor
jns
inc
out
xchg
fs
out
push
sbb
xchg
xor
xor
bound
aam
mov
roll
lahf
adc
and
pop
inc
sbb
push
xchg
sub
mov
iret
imul
ss
xlat
imul
mov
xchg
xlat
xchg
xor
mov
ret
or
cmp
pop
mov
cld
stos
into
pop
xlat
adc
repz
stc
fisubrs
andl
dec
out
js
mov
push
in
xchg
decb
ds
cwtl
sbb
pushf
je
pop
mov
les
ret
adc
adc
and
cwtl
fs
push
movsl
mov
movb
rcrb
cmp
push
sbb
outsb
xor
mov
jle
pop
divb
outsb
dec
sbb
xchg
xor
mov
fucomi
mov
mov
sbb
daa
jnp
stos
xchg
pop
xchg
and
cmp
rcrl
sub
xor
cmpsl
push
and
sbbl
repnz
jne
push
std
cmp
push
sub
fs
shll
pop
fnstenv
int3
dec
out
cs
mov
xor
mov
mov
cmpsl
lret
or
repz
sahf
inc
imul
cmpsl
jg
scas
xchg
clc
scas
cmp
dec
pop
sub
xor
cs
dec
push
loope
movsb
mov
xor
cmp
scas
dec
sub
imul
outsb
adcl
and
sub
stc
mov
inc
push
repz
or
xchg
subl
rclb
add
shll
adc
pop
adc
sbb
neg
adc
dec
movlps
lcall
mov
test
sub
sahf
cmp
dec
cmpxchg
mov
jecxz
adc
and
lret
fs
insl
or
popf
pop
fnstenv
iret
dec
out
testb
pop
pop
mov
jae
mov
scas
mov
xchg
xlat
loope
add
adc
push
je
repnz
outsb
or
jecxz
inc
repz
sbb
add
shll
jbe
sbb
mov
lea
icebp
lock
mov
sbb
lcall
pop
jmp
or
cmp
inc
out
pop
inc
jns
addr16
cltd
lods
add
in
lcall
xor
mov
aad
popa
mov
cld
xchg
out
adcb
or
mov
jp
cmp
inc
int
inc
out
out
and
dec
loopne
inc
in
je
dec
out
xchg
shrb
mov
mov
sbb
xor
daa
cmp
inc
outsb
dec
inc
fdivrs
dec
jecxz
lcall
adc
std
xchg
and
sbb
mov
fildl
popf
or
pop
lock
and
push
inc
fnsave
rclb
fbstp
jmp
arpl
test
sbbl
sti
xlat
pop
testb
in
test
std
xchg
pop
insl
or
mov
sub
in
fdivrs
rorb
push
dec
fbstp
es
out
push
dec
data16
jns
jne
mov
mov
sub
or
mov
aam
rclb
aam
das
mov
jmp
test
lods
fsubs
mov
stc
cmp
mov
and
jle
insl
leave
in
test
into
gs
sarb
xor
dec
jecxz
push
sbb
jbe
sub
mov
xchg
mov
fsts
sbb
push
rcrl
xchg
sub
cmpsb
lahf
rclb
push
popf
add
leave
pusha
inc
and
stos
push
push
xor
mov
les
or
sbbb
fidivs
jge
jbe
pop
jnp
or
call
pop
sbb
mov
movsb
test
fisubl
and
sbb
xor
dec
cmp
push
xchg
jle
cwtl
sahf
mov
add
fcomi
xchg
cs
std
inc
ficompl
cmp
push
push
cmp
loopne
je
insb
mov
sar
xadd
cmpsb
mov
in
jbe
mov
cld
and
mov
mov
hlt
imul
mov
inc
jge
dec
test
inc
and
mov
lahf
roll
lods
shrl
hlt
adc
out
xor
sub
mov
cmp
xor
xchg
pop
add
insb
sub
sbb
out
jecxz
insl
mov
jbe
or
and
cs
les
mov
sbb
inc
xchg
shlb
adc
push
pop
test
data16
popf
xor
aam
push
movsl
repz
jb
cwtl
popa
push
xchg
sub
mov
xchg
icebp
inc
insl
add
mov
js
mov
cld
xchg
outsb
xor
pop
test
jno
lret
push
popf
insl
mov
adc
inc
fdivrl
rorl
mov
stc
stc
cmpsl
ds
jle
mov
ret
cmp
jl
mov
mov
lcall
and
fistpl
sarb
lods
inc
jl
stc
insl
jns
outsb
stos
popf
jp
lods
inc
push
dec
mov
jbe
jb
push
fs
out
pop
mov
cli
xchg
push
outsl
stc
nop
lahf
pop
and
mov
decl
aam
stc
out
incb
xor
jb
loope
push
call
bound
dec
xchg
xchg
in
mov
mov
leave
pusha
xor
mov
shlb
or
clc
xchg
nop
jbe
ret
add
mov
fs
aaa
mov
imul
in
sahf
fdivp
lea
mov
andb
dec
in
and
mov
cld
xlat
and
enter
lods
or
mov
pop
jg
mov
dec
jae
mov
cmp
mov
loope
aaa
es
xchg
fisubl
mov
mov
and
or
sbb
and
and
sbb
mov
xchg
fbstp
int3
and
mov
and
popa
mov
mov
jmp
and
adc
sbb
lret
aad
sbb
or
mov
hlt
jg
mov
jae
pop
movsl
jae
mov
push
sbb
cli
xchg
inc
fwait
or
cmp
mov
mov
or
stos
xchg
sbb
push
push
adc
push
xlat
sbb
dec
cli
adc
aaa
sbb
mov
shr
repnz
push
in
lods
pop
sbb
lds
adc
push
arpl
mov
sbb
dec
xchg
jl
or
fnstenv
mov
mov
je
scas
lcall
and
xchg
xchg
dec
icebp
mov
pop
hlt
leave
cli
and
jle
xor
mov
sahf
pop
not
insl
sbbl
xchg
imul
adc
ret
xchg
xor
inc
xlat
outsb
jae
add
sub
pop
cmc
fldt
inc
fimull
lret
mov
mov
jns
jo
xlat
outsb
mov
movsl
ret
pop
pop
mov
push
jecxz
nop
daa
dec
data16
pop
cltd
mov
xchg
std
pusha
shrl
add
push
add
gs
adc
mov
sub
sbbl
fimuls
pop
inc
cltd
jnp
lret
and
lea
xchg
ljmp
call
push
sbb
mov
lret
adc
std
mov
das
lods
xor
xchg
cmpsb
sub
lock
movsl
jns
pop
sbb
push
stc
nop
dec
or
ss
mov
std
mov
std
xchg
jb
jno
packsswb
test
dec
pop
scas
jle
decb
cli
inc
fsubrs
sbb
ljmp
test
xor
scas
movsl
cwtl
es
test
loop
mov
lods
dec
xchg
bound
inc
std
xchg
jae
cmp
xor
cmp
mov
fistpll
cmp
lret
cmp
stos
mov
sarb
push
mov
mov
jno
dec
in
stc
mov
scas
dec
lods
int
fimuls
testl
mov
cmp
push
add
push
popa
addr16
push
fistpll
mov
or
data16
pop
imull
pop
andb
mov
jae
imul
adc
scas
inc
clc
push
inc
fiaddl
fnstenv
xchg
fbstp
sub
subb
adc
sbb
mov
stos
daa
mov
dec
imul
lods
lahf
dec
out
sub
cli
insl
inc
call
or
das
jle
mov
mov
mov
mov
mov
cmpsb
cmp
jb
mov
jecxz
push
out
test
testb
mov
push
sub
sub
xor
pop
cmc
fnstcw
call
sub
jb
lret
fucom
jp
mov
orb
mov
loopne,pt
jno
lods
inc
sub
ljmp
lods
sbb
fstp
add
into
or
pop
out
mov
inc
sbbb
outsb
ret
pop
pusha
notb
push
mov
pop
jecxz
int3
arpl
shlb
dec
xchg
nop
cmp
sahf
stos
push
or
xchg
ds
pop
or
daa
xchg
pop
push
mov
sbbl
xchg
test
lds
aas
cmpsl
test
xchg
sbb
rcrb
mov
push
ja,pt
mov
add
mov
pop
cmc
inc
call
fsubrl
xor
popa
das
jecxz
mov
movsl
push
out
push
fimuls
arpl
mov
in
push
iret
into
add
pop
inc
xbegin
push
cmc
jg
mov
jmp
in
xchg
sub
dec
sbb
jb
inc
int
daa
mov
mov
scas
inc
lock
ja
jo
mov
jmp
arpl
aaa
dec
out
mov
lea
sahf
fbld
mov
sbb
adc
mov
sbb
divb
daa
mov
mov
repnz
es
push
popl
dec
inc
daa
mov
aas
cmp
add
test
xchg
cs
pop
ret
pop
dec
pop
rcrl
pop
mov
dec
shrl
cli
cld
xchg
in
stc
add
jbe
mov
scas
loop
cmp
push
gs
xlat
xchg
sbbb
xchg
jns
jmp
in
pop
neg
testb
xchg
scas
mov
mov
push
add
jb
jb
dec
es
pop
xor
das
pushf
lcall
dec
test
fwait
insb
add
dec
push
ljmp
ret
inc
stc
nop
jae
adc
sub
add
fistps
inc
fmulp
into
inc
fdivrl
mov
sbbl
xor
sub
test
mov
pop
dec
leavew
pusha
cltd
mov
mov
xchg
cli
add
mov
int3
arpl
dec
aaa
into
jg
inc
fstl
aam
and
stos
jae
faddl
movsl
cmp
jbe
sbb
scas
inc
mov
cmp
jo
mov
jmp
pop
push
sbbb
ficompl
sbb
lret
daa
mov
jmp
xor
mov
sbbl
addr16
xchg
xchg
loop
or
aad
adc
aam
ss
pop
test
ret
cmc
jl
adc
je
jb
insl
xchg
push
sahf
js
adc
imul
mov
cli
mov
in
loope
push
jmp
jg
lcall
jnp
shrb
roll
je
xchg
sub
repz
cmpsb
sub
fsubs
daa
pop
lahf
pop
repz
fwait
pop
lock
outsb
add
inc
cmp
icebp
cmc
jmp
pop
sbb
nop
daa
jmp
aam
or
gs
fmul
push
popf
sti
pop
mov
mov
gs
lds
cmp
or
loop
jecxz
jp
add
adc
mov
cmc
xchg
push
push
jg
jb
daa
mov
pop
sar
nop
add
cmpsb
cmp
jb
les
js
lods
test
scas
inc
fcmovnu
je
xchg
movsl
sbb
jmp
testl
mov
fwait
lock
adc
daa
lret
setns
inc
jp
jge
bound
sahf
std
mov
addr16
and
dec
or
xchg
insl
inc
fistpl
mov
cs
fisttpl
dec
out
popa
lahf
xor
jl
mov
and
pop
fsubrl
in
cmpsl
cmp
push
icebp
mov
scas
adc
rolb
leave
xor
push
push
out
mov
pop
mov
lods
jb
fildl
nop
sub
rcrl
or
xchg
jge
pop
cmpsl
shrl
jl
xor
sarb
cmpsb
jg
xlat
outsb
push
mov
cmc
mov
lret
sti
inc
imul
dec
xchg
xchg
leave
outsb
push
out
ljmp
rcr
scas
inc
unpckhps
std
test
mov
mov
sbb
jl
sbb
mov
sub
lret
sbb
in
jl
insl
insb
outsl
push
lahf
jo
in
popa
pop
cltd
xor
dec
stos
inc
jg
nop
daa
pop
sti
fnsave
mov
cmp
int
scas
pushf
icebp
mov
mov
and
push
ds
push
call
pop
hlt
add
xor
adc
add
cmp
add
stos
ret
pop
sbb
sahf
xor
push
and
xchg
notb
mov
inc
or
mov
mov
aad
mov
xchg
stc
push
jmp
sbb
fistl
xchg
xchg
sub
mov
ljmp
add
jb
loop
std
xchg
push
movsb
cmp
push
mov
test
aad
inc
loopne
je
jl
push
hlt
ljmp
mov
stc
nop
cmc
xchg
cs
cmp
jmp
in
jl
fidivs
sbbb
or
push
jle
xchg
sub
aam
dec
push
xor
aam
shl
repnz
sbb
jbe
xchg
xor
mov
mov
cltd
sti
in
ret
cmp
in
aam
hlt
add
les
cmc
clc
mov
or
and
shrl
adc
pop
inc
sub
aam
xor
mov
popf
out
add
test
cmpsl
xchg
das
mov
mov
dec
jecxz
cmp
ja
cld
xchg
int
cltd
xor
sub
out
cmpsb
stos
inc
fldz
sbbl
shl
test
aad
out
leave
sbb
mov
leave
cmpsb
cmp
mov
mov
sub
xor
inc
lods
jecxz
notb
add
clts
jecxz
rcl
mov
lahf
xlat
jbe
dec
test
gs
fsubrs
out
popa
ljmp
sbb
es
push
out
adcb
leave
sub
cli
adc
jno
jge
cmc
scas
mov
push
sub
push
xor
or
call
dec
andb
adc
je
in
aaa
xchg
divl
jg
jns
and
sti
push
sub
test
mov
repz
mov
add
andb
and
push
lds
aam
mov
sbb
popf
gs
decb
in
cmpsl
push
cmp
cmp
add
es
mul
jno
jno
adc
fisubl
mov
pop
in
mov
sub
xchg
sub
dec
adc
xchg
xchg
push
out
mov
inc
fmuls
adc
movsb
insl
pop
aas
mov
dec
loopne
aas
add
cs
jge
mov
lea
mov
mov
shrl
jle
fwait
cwtl
loope
lret
sbb
sub
and
and
mov
or
stc
pop
cwtl
call
pop
or
popf
xor
lret
lcall
jl
inc
scas
xchg
outsb
pop
or
js
sbb
cltd
dec
mov
cmp
in
jg
aas
in
lcall
inc
enter
fs
insb
xor
dec
in
cmpsl
lds
pusha
imul
pop
mov
dec
imul
rclb
pop
rep
test
in
sub
mov
out
in
in
inc
xlat
imul
push
rcrl
push
jmp
lret
test
mov
ror
mov
push
out
mov
ss
popa
clc
lods
daa
shrl
sub
fcompl
sub
stos
dec
fucomip
ret
lcall
cmpsl
cmp
sbb
or
jno
mov
or
stc
stos
inc
sub
lods
push
imul
lret
loopne
mov
mov
push
in
test
and
idivl
xor
out
pop
negb
out
insb
imul
int
xor
into
adc
inc
stos
mov
xlat
outsb
popa
xor
shll
out
sbb
adc
dec
xlat
inc
fmull
jg
sahf
jo
dec
out
adcl
stc
add
mov
mov
aam
cli
xor
xchg
jle
pop
adc
adc
push
xor
add
enter
cmpsb
cli
testl
nop
adc
xor
flds
insl
add
jmp
xchg
cs
outsl
rcrl
adc
pop
lock
popf
dec
adc
in
test
adc
cmp
shrl
mov
push
ljmp
iret
data16
push
nop
push
dec
in
push
leave
pusha
mov
sti
xchg
orb
sbb
or
icebp
aaa
into
and
add
clc
ret
mov
or
mov
movsl
cmp
and
rcll
add
sub
mov
and
xchg
lcall
mov
ret
enter
dec
jae
arpl
jae,pn
sbb
jne
fldt
enter
rcrb
inc
lret
dec
inc
addl
enter
scas
sbb
push
popf
aam
inc
pop
or
int3
shrl
popa
test
push
jns
pushf
stos
xchg
mov
pop
out
mov
loopne
cmp
dec
mulb
in
xrelease
in
ja
jmp
sub
mov
daa
mov
pop
cli
gs
jmp
in
push
stc
les
pop
testl
inc
sbb
xchg
mov
xor
jne
mov
aaa
into
das
insl
imul
scas
pop
jb
jl
mov
out
sti
stos
inc
sub
lods
fsubl
jge
movsl
outsb
cltd
incb
adc
pop
xchg
xchg
cltd
mov
aas
adc
jo
push
popf
jmp
sbb
jno
scas
adc
rcrb
lea
dec
jecxz
js
jge
jle,pt
jno
xor
pop
sub
xchg
sub
dec
push
inc
les
jno
cmc
bound
test
pop
ja
pop
mov
repnz
testb
stos
fidivs
xchg
montmul
cmpsb
les
int3
push
cmpl
mov
xchg
cs
aaa
dec
loop
inc
jp
aaa
loop
adc
aaa
push
in
test
xchg
pop
lods
mov
push
dec
les
fiaddl
lds
push
inc
ss
sarl
add
mov
test
jb
clc
stos
das
sbb
movsb
cmp
xor
lds
dec
test
xor
jno
mov
mov
dec
sub
aad
mov
dec
filds
imul
imul
fidivl
cmpsl
lods
inc
fnstcw
es
rcr
fnstenv
xchg
add
rolb
testb
call
lcall
fdivrl
xchg
loope
pop
sti
adc
addb
sti
xchg
push
cmp
imul
subl
add
add
out
out
loop
clc
and
xchg
jg
mov
cmp
mov
xchg
in
xor
push
cmpsl
fdivl
ficompl
or
adc
dec
lret
insb
add
outsl
jne
aas
cmpsl
cmp
mov
jnp
stos
adc
loop
fisttps
rorl
pop
push
in
rolb
push
sarb
shlb
add
mov
call
dec
and
test
xor
ret
dec
xchg
inc
jl
jnp
mov
cmpsb
mov
lds
xor
jecxz
push
cmc
push
call
jecxz
int3
fdivrs
or
mov
rol
push
xlat
sysexit
icebp
pop
push
or
movsl
push
fistps
jl
mov
sub
cmovs
jle
push
shll
fisubl
mov
mov
cli
push
lahf
sarl
ja
popw
adc
out
stos
pop
std
dec
push
roll
ja
sar
push
pop
dec
or
leave
mov
jne
and
cmp
mov
pop
arpl
dec
lods
mov
cld
shlb
pop
mov
mov
ljmp
cli
jge
frstor
iret
das
daa
sub
pushf
int3
mov
sbbb
mov
push
cld
outsb
movsb
mov
push
movsl
fsubl
add
fwait
cmp
pop
sahf
loope
dec
mov
imul
lock
jno
pusha
fildl
mov
fcoml
adc
push
sarb
das
aam
inc
sbb
cwtl
rorb
in
sti
push
dec
or
and
dec
mov
call
lods
ljmp
sbb
outsl
hlt
dec
dec
stos
xor
ja
mov
stos
das
jb
xchg
push
or
fstps
xchg
xchg
bound
lret
xchg
pop
in
jbe
negb
dec
adc
pop
ret
xchg
jg
push
or
xchg
mov
jle
xor
int3
mov
mov
xor
adc
mov
push
adc
outsl
sbb
jne
push
pop
xor
xchg
or
cmc
cmp
sarl
or
arpl
test
mov
add
fs
jbe
push
insb
dec
cmpsl
pushf
mov
jle
in
mov
leave
and
xchg
rclb
cld
in
pushf
push
adc
testb
lea
sbb
xchg
clc
xchg
sub
roll
xchg
mov
repz
je
xor
loope
sub
pop
sbb
mov
jp
jge
jp
sub
outsl
pusha
push
adc
aas
or
aaa
mov
or
rorb
cmc
cmp
sub
push
cmpb
jo
stos
jl
daa
cmc
scas
je,pt
xor
cmp
cmp
int3
out
cmpsb
and
xchg
aas
gs
jne
scas
pop
xchg
fstp
js
jo
xchg
call
mov
je
pop
adc
in
subl
fs
xchg
adc
aam
xchg
fsubrs
or
cmp
cmp
jbe
fcoml
mull
pop
aam
dec
dec
cli
sub
popa
scas
loope
neg
fidivrs
lds
insl
insl
roll
cmpsb
adcb
mov
mov
adc
test
cld
bts
mov
jmp
adc
inc
rorl
data16
jno
jmp
out
sbb
mov
je
fwait
scas
in
aad
push
push
xchg
jbe
ss
push
pop
les
xor
aaa
or
je
out
repnz
dec
xchg
mov
jne
mov
js
cmp
jecxz
data16
or
jne
in
dec
stos
outsb
cs
pop
sahf
loope
xchg
rcrb
divb
popf
xchg
mov
jp
inc
pop
int
imul
push
pop
arpl
pop
push
cmp
sbb
pop
divb
stos
xchg
out
xor
lahf
ficoml
popf
ljmp
pushf
fdivl
shrb
adcl
orl
push
push
ljmp
sahf
mov
lds
pop
sub
add
pusha
dec
cmp
bound
and
jmp
jne
push
lock
jecxz
push
js
sbb
xchg
rol
in
jle
xchg
push
rolb
lret
pop
sbb
int3
in
imul
fs
scas
push
jb
xchg
cmp
push
addr16
jmp
or
daa
or
clc
ficoml
repz
cmp
not
lret
lret
mov
jmp
mov
mov
or
adc
ret
or
mov
push
mov
mov
or
mov
es
push
pop
xchg
rorb
xor
sti
inc
and
test
sub
into
sbb
mov
aam
dec
stos
movsl
out
sbb
dec
mov
cmc
jns
ljmp
pop
mov
out
mov
lods
ljmp
andl
or
ljmp
jl
dec
cltd
jbe
xchg
cmpsl
mov
jne
shl
xorl
jb
mov
inc
insl
cwtl
andb
jbe
xor
lds
inc
xor
sbb
daa
sbb
inc
push
jle
imul
adc
or
aaa
sbb
and
jmp
jge
or
xchg
sub
bound
test
jne
and
adc
lock
ffreep
xor
push
ficomps
aas
ja
lret
cld
cmp
jne
fcmovbe
adc
mov
adc
xchg
xor
pop
test
aaa
fidivrl
lods
sti
mov
add
dec
fidivs
and
aam
test
cmpsl
cmc
adc
add
aad
sub
outsl
push
pushf
pusha
or
push
movsl
push
push
fdivs
mov
cmp
es
add
xor
scas
xchg
mov
stos
out
ret
es
cld
and
mov
mov
push
xor
iret
lret
loopne
jmp
xchg
test
nop
mov
shlb
out
jne
out
ja
repnz
pusha
stos
shld
add
gs
lahf
push
mov
inc
mov
fsubs
jne
sahf
or
out
mov
mov
sub
fs
xor
adc
out
sbb
jne
sub
cmp
test
and
je
int3
sbb
movsb
jge
and
xchg
cmp
fstps
cmp
mov
ja
add
mov
push
sub
cltd
std
aad
imul
scas
or
push
xchg
jle
out
sbb
fdivrs
push
inc
flds
scas
pop
out
shll
incb
fs
mov
adc
movsl
sbb
sub
xor
cmp
sub
sub
mov
loop
stc
mov
iret
cmp
sbb
ret
inc
sub
add
xorl
clc
lds
in
adc
lret
push
jl
dec
fs
push
hlt
sahf
push
movsl
mov
in
daa
repz
pop
mov
jo
vpcmpeqd
xor
and
in
fbld
sub
sub
fbld
cmp
loopne
and
mov
sbb
inc
cmp
stc
shlb
cwtl
insl
pop
inc
or
cmp
inc
jne
jmp
push
cwtl
out
lret
jb
adc
cmp
test
and
sbb
sub
jmp
clc
scas
xchg
aas
arpl
jmp
fdivrs
or
es
inc
jge
fldt
iret
stc
add
adcb
or
xor
jp
shrb
fwait
shrb
sbb
mov
lock
outsl
mov
shrl
inc
adc
bound
xchg
gs
xchg
mov
jmp
mov
xchg
cmp
cmpsl
aaa
es
mov
sbb
fdivl
mov
xchg
and
rcrl
sbb
cld
lods
fsubrs
sbb
testl
test
xor
outsb
movsl
xor
mov
pop
jg
cmp
lds
pop
icebp
pop
hlt
add
imul
jmp
js
jl
adc
aad
lea
testb
mov
leave
int
movsl
dec
dec
mov
rol
sahf
in
shl
pop
lock
repnz
imul
mov
es
stc
sbb
or
ss
int
mov
jmp
xorl
push
push
and
inc
outsb
add
fistpl
stos
inc
cs
stos
inc
push
push
leave
pusha
addl
jb
out
xchg
in
pushf
sub
add
jnp
mov
pop
into
or
dec
repz
and
or
nop
leave
xchg
and
call
sbb
test
mov
inc
pop
sub
pusha
adc
mov
sbb
or
inc
ds
test
scas
lds
pop
out
call
or
cmp
ljmp
xor
lahf
arpl
es
xor
push
lock
stos
push
movsl
fstpt
pop
lods
cld
sub
sub
dec
dec
loope
and
shlb
cmpsb
xrelease
cli
inc
movsb
cmp
pop
scas
dec
cltd
ret
insl
xor
ja
rclb
aas
xchg
jno
jb
inc
xchg
sbb
ret
gs
daa
xchg
in
rcll
ss
fisubs
xlat
outsb
das
mov
push
repnz
out
xor
pop
das
loope
popa
inc
dec
in
addb
push
aam
mov
inc
dec
loopne
fnstenv
outsl
push
push
xor
xor
scas
inc
cmp
pop
sbb
js
cmp
popa
and
arpl
dec
stc
nop
xchg
adc
fs
pop
test
mov
jl
adc
stos
daa
mov
add
fistpll
shrl
loopne
push
repnz
data16
jb
push
ja
int3
arpl
js
or
xor
insl
sub
xor
iret
data16
std
jne
aad
inc
das
test
pop
fs
inc
push
inc
lcall
sub
pop
push
stc
nop
sti
xor
insl
jno
imul
pop
scas
xchg
and
jns
inc
sbb
cmp
cmpsb
cmp
pop
sti
shlb
jp
jmp
movsb
mov
add
aam
insl
ret
pop
xchg
mov
inc
and
dec
loope
inc
mov
arpl
repz
in
sub
pop
jb
inc
mov
xor
mov
mov
jae
and
pop
xchg
rorb
mov
daa
pushf
xor
dec
inc
fstpt
fcompl
push
pop
add
mov
loop
dec
sbb
sbb
mov
in
in
cmpsb
lock
xchg
cmp
lret
mov
xlat
adc
mov
fucom
ja
mov
mov
lock
jecxz
mov
or
stc
xchg
sub
add
es
pusha
cwtl
pop
cmc
cld
mov
mov
ss
stc
pop
xchg
sub
loopne
aam
je
fs
and
mul
enter
aas
mov
subl
ds
mov
shl
mov
aam
in
push
dec
xor
test
xor
sahf
xor
scas
popf
jns
pmaddwd
jne
xor
fcmovne
jmp
and
enter
ljmp
adc
in
rclb
lahf
cmpsb
cmp
adc
add
cmpsl
mov
cmpsl
ds
fcmovnb
pop
int
mov
adc
cmp
repz
loop
jae
lret
xchg
sub
jb
mov
cltd
sub
sbb
jle
jg
ds
xchg
pop
pop
push
popf
push
inc
inc
xlat
movsl
jno
mov
push
das
test
iret
divb
xchg
icebp
jle
and
jl
mov
ds
scas
idivl
jge
test
mov
out
test
out
loop
sbb
je
ljmp
jns
in
jne
lahf
arpl
adc
xlat
mov
mov
les
xlat
push
mov
stc
ret
ljmp
pop
mov
popf
rclb
lahf
xorl
test
dec
ds
ss
test
test
leave
rcrl
mov
and
arpl
into
ret
clc
out
mov
loope
xor
mov
pop
adc
sub
push
pop
icebp
cltd
or
cmpl
loopne
sub
inc
fnsave
push
add
mov
add
cltd
aaa
test
fdivr
nop/reserved
rorb
stos
sub
sbb
mov
inc
and
rcrl
mov
shl
imul
cmc
stc
out
aad
testb
adc
mov
jne
pop
xchg
sub
sub
pop
jno
call
adc
loope
inc
call
outsl
push
pop
mov
stc
push
je
rorb
std
fwait
push
sub
cmp
lock
cmc
js
testb
push
mov
inc
loopne
mov
pop
ret
popa
clc
idivl
outsb
xchg
mov
mov
add
cld
jle
jmp
xchg
sbb
xchg
daa
lock
dec
dec
loope
mov
call
mov
lret
or
cmpsl
adcb
inc
add
test
sbb
pop
or
scas
xor
js
stos
fcomps
mov
lret
daa
mov
mov
or
into
push
add
es
lahf
addl
and
pop
std
xchg
sub
popa
clc
lcall
fsubrs
mov
sbb
andl
push
and
bound
mov
mov
clc
lds
into
or
fbstp
test
out
test
jo
push
inc
push
ljmp
lods
inc
inc
sub
pop
cmpsl
ds
std
shrl
jns
jns
leave
dec
out
lea
sar
stos
aad
loope
lods
inc
xchg
xchg
lret
daa
mov
popl
ss
push
pop
push
into
gs
stc
pop
hlt
imul
ret
fwait
xor
jle
outsl
xchg
dec
loopne
nop
mov
add
ss
and
push
push
mov
outsl
sub
jecxz
push
dec
and
test
pop
push
call
subl
lods
xor
pop
bnd
dec
loop
fstenv
movsb
pusha
notl
ss
repnz
or
dec
pusha
enter
pop
loope
pop
fldt
int
shrl
out
jnp
loope
xchg
sub
add
mov
jmp
sbbl
ret
cltd
gs
stos
mov
rcrl
repnz
inc
pop
sahf
push
pusha
es
mull
xor
lds
add
or
lea
cli
fwait
scas
jecxz
and
leave
pusha
gs
xor
xor
xor
push
adc
ljmp
popa
clc
imul
shrl
sbb
jecxz
mov
rcrl
stos
inc
xor
fwait
xor
push
add
std
push
jae
int3
jp
out
gs
std
std
dec
lahf
ss
ljmp
mov
or
fsubrp
addl
or
loope
add
mov
mov
pop
pop
scas
inc
cmpb
sub
and
cmc
adc
mov
add
mov
sahf
xor
mov
scas
dec
and
popf
pop
insb
pusha
negl
dec
jecxz
jg
pop
jno
push
movsl
cmc
xchg
mov
add
push
jmp
and
sbb
sub
fs
cmp
or
dec
and
outsl
push
popf
mov
sbb
loope
dec
rclb
mov
xchg
dec
fildll
das
test
enter
pushf
push
ljmp
insb
mov
or
sbb
in
xor
mov
pusha
imull
xor
and
iret
data16
aad
hlt
mov
out
jl
push
ret
mov
in
pop
fcmovne
jae
mov
push
push
call
push
mov
mov
sti
movsl
cltd
mov
lret
les
fcompl
test
aad
adc
xchg
das
adc
jnp
mov
mov
roll
jne
fidivrl
out
inc
loope
ss
fmul
sub
fwait
xor
push
mov
cmpsl
int
pop
call
push
dec
mov
sahf
sbb
outsb
jg
div
push
xchg
sbb
aas
mov
dec
or
xchg
inc
adc
inc
jbe
xor
enter
lods
je
xchg
mov
dec
pop
clc
xlat
call
je
in
xor
push
mov
xchg
loope
into
add
push
mov
mov
xor
dec
rolb
jmp
call
inc
loopne
movsb
outsl
pushf
mov
pusha
push
add
out
xchg
inc
xchg
xor
fwait
aaa
mov
xor
lret
iret
in
jb
daa
mov
inc
out
fmull
out
push
push
add
xlat
xorl
dec
pop
pushf
xor
mov
pop
movb
jnp
jl
sbb
dec
into
add
pushf
and
mov
out
jb
cli
mov
cmpsl
gs
sbb
push
fs
divb
mov
aad
sahf
cmc
addr16
enter
js
xchg
fsubrl
fbld
aad
mov
dec
in
adc
sub
xchg
inc
aam
pop
sbb
mov
out
pop
into
inc
mov
push
xor
lret
pop
rorb
call
and
inc
add
and
stos
inc
jne
aas
sbb
leave
pusha
leave
cmp
out
sbb
jnp
ret
pushf
outsb
jecxz
xor
ss
push
mov
insb
mov
mov
xchg
mov
ficompl
mov
mov
in
adc
add
cmc
mov
jnp
and
je
xor
fs
inc
int
cmc
mov
in
cmp
pusha
out
in
rorl
jo
aad
rcrl
push
adcb
mov
divb
pop
xchg
gs
lds
es
add
gs
lret
divl
cmpsl
shrb
nop
or
mov
sbb
lahf
sbb
fimuls
call
dec
jp
fdivrs
fwait
mov
mov
ficomps
subl
xchg
into
jne
add
xchg
sub
je
dec
cmpsb
pop
stc
nop
xchg
iret
data16
mov
scas
jecxz
out
test
int
insl
or
sahf
push
push
jmp
mov
jb
ficoml
dec
loopne
sti
nop
daa
sub
dec
scas
inc
xorb
arpl
or
es
ret
inc
or
loop
es
xor
push
sbb
stc
outsb
test
adcb
sti
pop
mov
shr
leave
dec
inc
dec
pop
out
jg
aam
cltd
mov
repnz
repz
sub
dec
xor
jns
clc
xchg
lcall
out
in
ds
adc
push
fs
xchg
xchg
test
mov
pushf
xor
fdivs
adc
sub
pop
mov
dec
lods
lods
pop
repz
hlt
mov
add
mov
sti
xchg
test
mov
in
dec
add
jae
mov
and
imul
hlt
popf
lods
loopne
or
stos
ds
add
mov
sarl
lock
fstps
add
js
pushfw
add
sti
loopne
or
stos
or
out
push
mov
ljmp
cmp
pop
dec
dec
mov
repnz
imul
push
jecxz
ja
movsb
shll
pop
or
mov
xchg
cmp
mov
inc
ret
fiadds
add
outsb
cmp
add
pop
pusha
imul
xor
jne
adc
pop
mov
mov
xchg
pop
xchg
add
xchg
pop
subl
pop
pop
je
pop
bound
popf
jg
xchg
inc
adc
int
repz
push
sub
dec
outsl
jle
leave
fisttpll
sub
mull
mov
das
outsl
fwait
call
sbb
in
add
aaa
pop
and
push
mov
outsl
mov
loope
lea
xor
test
mov
xor
mov
mov
jmp
push
sub
pop
jae
xchg
movsb
orb
fsubrs
out
outsl
das
int
pop
lea
jle
test
rorb
dec
insl
and
rcll
sarb
test
lret
push
jmp
xor
fs
inc
xlat
data16
or
mov
imulb
sbbb
addr16
movsl
cmp
lods
or
and
mov
inc
sahf
xor
ss
xchg
sub
mov
pop
repz
sbb
push
movsl
aad
leave
pusha
mov
sbb
jno
mov
mul
rcrb
cmc
mov
pushf
xor
repz
jmp
cld
sub
sbb
cmove
xchg
in
inc
hlt
inc
inc
int3
addr16
inc
fidivrl
sub
mov
mov
sti
and
xchg
push
xor
inc
cmp
cli
xchg
subl
sahf
xor
xorl
lds
push
outsl
push
inc
mov
add
repnz
in
mov
aam
push
ljmp
ljmp
push
jle
inc
or
mov
xchg
loop
out
mov
fisubl
mov
dec
or
test
jo
int3
dec
mov
push
shrl
xor
mov
notb
test
lods
dec
adc
mov
dec
out
jmp
sar
dec
in
and
bnd
sbb
sarl
push
mov
loopne
call
xor
pop
into
popf
sti
adc
leave
add
xor
clc
and
jne
clc
cmp
insb
sbb
jo
imul
cmp
imul
mov
stc
cmc
xchg
daa
sbb
and
dec
ficoms
pop
xchg
xchg
jb
pop
into
and
out
xchg
xor
xor
in
xchg
push
xor
test
adc
jge
repnz
loop
iret
adc
adc
ds
push
jl
cmp
mov
repnz
mov
mov
mov
imul
shrl
ds
aaa
xchg
sub
xchg
xor
imull
push
call
jp
add
pop
popf
sti
xchg
fbstp
fisttps
es
mov
fsubrs
sub
imul
repnz
inc
aam
cmp
gs
pop
push
imul
int
xor
mov
push
mov
int
icebp
cmpsb
cmp
pop
int
xchg
mov
ficomps
mov
loopne
fistl
loope
dec
jmp
or
add
mov
inc
or
push
sub
inc
stos
ja
pop
dec
lret
mov
push
cmp
les
pop
cmpsl
ds
push
out
lds
xchg
sub
jb
lret
bound
fcoml
js
call
sahf
xor
mov
mov
insb
rolb
cwtl
fisttpl
dec
loop
cld
enter
sbb
and
cmp
adc
add
xchg
aas
sti
sbb
dec
sbb
rcr
insl
cmp
sahf
add
xorb
jne
or
pop
mov
lea
jl
and
test
or
inc
sbbl
sti
mov
and
xchg
and
and
cmp
rcrl
gs
cmpsl
push
call
in
adc
push
mov
int
pop
mov
fcomi
ja
out
pop
repz
ljmp
in
push
mov
std
repnz
dec
in
push
mov
mov
push
add
arpl
adc
cli
ret
mov
jecxz
clc
adc
pop
mov
xor
and
mov
aad
js
lret
adc
jmp
jne
and
push
push
leave
ljmp
mov
cltd
aad
or
ja
mov
add
fwait
cli
ss
dec
xor
jl
addr16
cmp
pop
outsl
push
nop
out
jae
and
push
jmp
adc
adcl
push
test
sti
arpl
pop
in
fbstp
push
pop
sahf
inc
or
jmp
xchg
lock
sub
rorb
add
mov
sbb
loopne
pop
push
pushf
xor
cmp
push
dec
filds
dec
imul
popf
mov
loope
or
jno
cmpsb
mov
arpl
rol
mov
mov
mov
dec
mov
addb
jge
jge
jl
xchg
inc
push
scas
push
sub
mov
jecxz
leave
jl
xchg
sub
mov
addr16
repz
iret
stos
inc
add
fisttps
and
loopne
std
adc
sbb
ds
outsl
dec
sahf
repz
aad
mov
es
imul
popaw
push
push
mov
jbe
fs
xchg
sbb
push
lods
in
sub
xchg
jo
or
cmp
in
jge
ss
fs
add
cli
push
addr16
roll
xchg
repz
sbb
adc
test
arpl
cmp
push
pop
cwtl
inc
push
xor
lahf
inc
out
mov
fistpll
mov
dec
in
add
dec
in
and
loop
jo
cmc
mov
mov
mov
sahf
rorl
test
cmp
mov
sarl
shrb
fs
icebp
jg
mov
xchg
pop
dec
push
out
inc
sbb
int
inc
cld
jmp
rclb
test
cmp
mov
clc
outsb
dec
sub
mov
mov
pop
loop
jmp
jle
and
ss
inc
clc
mov
jp
movsb
pusha
mov
push
ret
push
les
lret
add
sti
stos
mov
in
pop
stos
xor
loop
dec
push
pop
outsl
or
sbb
pusha
insl
push
movsl
sahf
sbbl
neg
cld
adc
add
jl
pop
inc
les
push
push
clc
lcall
dec
push
mov
or
pop
mov
add
lock
push
inc
or
or
push
dec
pop
push
scas
int
loopne
cmpsb
lret
roll
clc
mov
repz
shrb
mov
xchg
adc
or
jns
jmp
adc
scas
fcompl
in
adc
mov
ljmp
ficoms
outsl
jae
xchg
js
cmp
mov
sbb
je
ds
xchg
sub
or
push
cltd
dec
ljmp
dec
out
add
je
xchg
xor
sbb
mov
hlt
idivb
ds
cltd
test
cli
xchg
insl
cwtl
movsl
dec
int
and
and
ds
lock
mov
icebp
gs
lods
cmp
push
lcall
pusha
xor
mov
mov
pop
xchg
fisubl
bound
std
dec
es
inc
loop
es
jae
inc
sub
jbe
es
adc
shll
xor
sbb
add
add
cmp
mov
mov
int3
inc
mov
daa
shrb
jmp
andl
add
sahf
inc
adc
push
cmpsb
fiaddl
movsl
sbbl
fstl
or
sahf
xor
cmp
dec
sub
add
shl
push
push
cmp
push
mov
and
jb
add
scas
lock
xor
cli
jmp
push
and
xchg
sbb
push
clc
mov
movsb
pop
scas
aad
mov
testl
loop
addr16
cwtl
jl
sub
das
adc
cmp
stos
fdivp
dec
lret
xlat
adc
movsl
test
jb
sti
insl
shlb
dec
adc
xor
jb
fs
adcb
and
out
xchg
ds
popa
push
out
in
sub
and
jns
add
mov
mov
jecxz
out
mov
dec
sarb
add
in
cld
or
aas
stc
out
mov
lock
inc
inc
lods
pop
fisubrs
lret
sbbb
stos
mov
shll
out
cmc
sbb
fucom
stc
aad
into
fnstsw
or
int3
mov
decb
jmp
cmp
mov
popa
clc
fisttps
bound
in
jb
scas
inc
mov
rclb
fs
adc
outsb
mov
dec
arpl
inc
test
lret
out
push
popa
push
lock
and
mov
test
scas
mov
lcall
mov
sarb
sti
test
mov
iret
lods
daa
push
and
in
push
jl
lret
popf
pop
sub
jl
leave
sbb
jl
cmp
cmp
sub
adc
mov
jne
pushf
mov
add
dec
lea
aas
add
test
and
push
xchg
int
imul
sub
ss
and
sbb
xchg
stos
les
ret
in
cmc
packuswb
dec
sub
mull
push
cmp
mov
roll
mov
insl
lret
inc
fmull
negb
mov
inc
xor
out
insb
sbb
add
adc
mov
loop
cmpsb
sbb
loopne
cld
sbb
hlt
or
ds
loop
push
xor
jno
mov
xor
in
arpl
cltd
lahf
dec
loope
mov
or
sbb
push
sarb
ljmp
xchg
jmp
aaa
movsl
and
popl
pop
jle
out
leave
mov
xor
cmp
push
int3
arpl
inc
insl
in
dec
or
lods
lret
repnz
int
pushf
rol
out
loope
mov
into
mov
xor
dec
xor
jp
mov
xchg
pop
addr16
cmp
stc
nop
sub
jmp
stos
inc
cld
xchg
jb
sbbl
repnz
iret
sub
in
clc
and
sahf
adc
inc
std
add
int
adc
push
js
pop
lock
mov
sub
push
cmp
or
or
pop
out
sti
movsb
dec
loopne
sbb
and
js
and
or
cld
mov
mov
js
aad
arpl
les
mov
dec
icebp
sbb
bound
in
mov
or
jmp
adc
sub
pop
loope
and
mov
jl
or
push
daa
mov
jmp
or
push
in
cmp
ss
enter
fs
dec
les
gs
and
inc
das
mov
sub
leave
push
push
mov
int3
stos
sbb
dec
mov
xchg
sbb
mov
outsb
xchg
repz
pop
cmc
mov
rorl
pop
jae
call
rclb
mov
jns
dec
xor
outsb
xchg
fcmovu
push
neg
push
add
mov
shll
jg
inc
rorb
add
pop
mov
pop
sub
adc
int
add
cmp
xor
push
dec
jle
lods
jge
bound
and
push
out
aaa
xor
mov
lret
pop
jp
pop
lods
fdivp
mov
in
std
xchg
push
mov
aaa
movsb
in
fsubrs
or
adc
sbb
jl
std
cmp
and
std
adc
sub
pop
out
xchg
aam
cmp
mov
xor
aad
adc
mov
push
jl
outsb
frstor
fmulp
insl
fsubr
fsubrs
xadd
push
iret
mov
jle
mov
iret
insb
pop
sbb
fildl
in
or
pop
and
lds
popf
repnz
fdivrl
loope
fmull
adc
adc
fwait
std
mov
clc
scas
push
jbe
neg
ror
mov
fnstsw
cltd
xor
mov
mov
fucomp
rclb
jmp
stos
dec
mov
repnz
add
mov
test
mov
mov
push
xchg
inc
imul
andb
push
aad
fwait
mov
fcoml
sbb
bound
mov
call
mov
mov
fildl
shrb
mov
adc
push
sbb
insb
imul
popa
pop
ret
push
fistps
cmc
cmp
lea
imulb
fs
jns
stos
clc
jno
mov
data16
pop
inc
lea
insb
sbb
mov
lods
gs
xor
xchg
cmp
imul
in
fidivrl
lahf
dec
fnstsw
pop
js
cltd
incb
fwait
mov
mov
outsl
mov
shrb
repnz
movsb
in
pop
push
pop
into
dec
jmp
stos
push
out
aas
or
and
popf
xor
paddb
lods
dec
jbe
xor
pop
mov
xchg
in
enter
mov
bound
scas
fdivl
xor
rcrl
sahf
stc
cltd
add
loope
or
xchg
cmp
test
testb
daa
mov
jns
int
gs
mov
ficomps
aam
test
test
inc
push
ds
mov
cltd
sub
cld
sub
mov
out
rcrb
out
test
mov
push
cmpsl
fisubrl
fisttpl
and
ljmp
push
cwtl
mov
fnstcw
pop
andl
shrl
loope
test
ret
mov
adc
and
loop
shrb
imulb
fcmovb
daa
cmc
push
loop
push
lods
cmpsb
xor
xchg
enter
in
or
repnz
dec
scas
leave
test
xchg
orb
or
mov
pop
pop
xor
push
sub
xchg
sub
pop
fs
ret
jno
sti
xor
push
adc
daa
mov
cmp
push
ret
lret
xchg
jecxz
sub
movsl
adc
in
mov
push
mov
loop
adcb
adc
mov
xchg
xor
mov
hlt
fwait
bound
jnp
and
mov
fcoms
pop
mov
shl
xchg
add
xor
jg
jl
pop
jl
enter
fcompl
push
push
in
mov
fdivp
jl
add
in
leave
repz
je
xlat
push
cmpsb
cmp
rcrb
lock
push
int3
inc
scas
jp
aas
lods
stos
mov
dec
jmp
test
lea
idiv
call
mov
xchg
aas
add
nop
inc
sahf
pop
dec
movsb
enter
cmpsb
dec
jo
std
xchg
inc
xchg
xchg
xor
bound
mov
and
fldcw
fmull
mov
js
ds
popa
clc
mov
scas
xchg
xchg
ud2
faddl
dec
cwtl
out
jb
loop
fstl
ret
or
test
mov
test
jg
iret
or
leave
ss
or
dec
xchg
mov
mov
lret
or
cli
and
push
pop
in
pop
aaa
gs
js
add
mov
test
movsb
jecxz
out
lea
lret
pop
or
mov
mov
and
mov
popa
out
enter
lcall
gs
icebp
cwtl
loop
mov
mov
adc
aad
jecxz
mov
jne
and
popf
and
and
push
scas
jns
push
imul
mov
lcall
incb
fldl
roll
dec
cwtl
in
push
xchg
push
jb
cli
and
in
mov
pop
gs
jl
push
pop
xchg
imul
loopne
out
test
inc
push
pop
mov
jg
jmp
adc
sub
add
out
and
xor
pop
sti
imul
add
xchg
xlat
daa
stos
inc
pop
clc
push
addl
ret
push
sbb
jmp
movsl
mov
inc
pop
popa
clc
jp
inc
lods
mov
pop
es
push
or
out
fstpl
outsb
stc
push
stos
mov
fsubl
inc
cmpsb
xor
pop
decb
lret
adc
add
test
insl
aam
stos
inc
test
hlt
mov
cmpsl
enter
loop
sub
aam
pop
inc
cwtl
shrb
push
cmpsl
cmc
repnz
add
jae
aad
stos
add
shlb
sub
and
push
sub
test
jmp
pusha
pop
and
jno
mov
xor
sub
das
roll
fwait
sub
fbstp
xchg
sub
loop
push
push
jecxz
adc
cmpsl
lods
adcb
enter
cmpsl
sub
mov
cmc
out
insl
das
lret
mov
fcmove
fmulp
push
cmp
sub
sbb
js
mov
fimull
cmpsl
aas
imul
jle
adc
fxch
mov
mov
call
aad
fisttpll
imul
cmp
jo
xor
shll
xor
sub
add
xor
outsl
mov
sub
imul
loope
push
adc
push
fwait
cmpsb
or
push
cmpsl
or
mov
push
inc
out
mov
clc
iret
fidivrs
add
jp
inc
and
cli
lods
and
arpl
sub
iret
jo
and
sub
mov
stos
add
pushf
sub
test
jmp
ret
push
pushf
aad
dec
add
fsubr
pop
icebp
popf
sbb
lods
inc
add
out
jns
xchg
sbb
inc
fisttpll
aad
jle
iret
push
mov
imul
jecxz
mov
mov
sbb
dec
pop
sysret
gs
sbb
inc
dec
cmp
sbb
mov
push
cmp
fwait
add
movsb
or
adc
jbe
fwait
stos
push
mov
icebp
jl
out
dec
shlb
pop
in
stos
and
and
adc
lret
sbb
add
jp
int3
sub
add
hlt
cmp
fisttps
mov
insb
lret
jnp
fldcw
outsb
adc
xor
jg
adc
jno
nop
fidivl
dec
sti
cld
pop
dec
push
jno
mov
dec
loopne
adc
stos
data16
sub
cmc
flds
sbb
xchg
adc
or
in
sbb
sub
gs
jecxz
or
inc
jb
ja
push
xchg
lret
sbb
cmp
and
sbb
mov
sub
sub
scas
pop
sbb
lea
ja
mov
pop
es
cs
scas
in
ja
stc
cmpsb
gs
mov
add
sub
dec
enter
and
rorl
rcrl
mov
mov
aam
xchg
push
ljmp
xor
in
sbbl
daa
f2xm1
cli
xchg
push
mov
clc
hlt
cs
mov
flds
stos
lcall
push
or
xchg
sarb
ja
mov
rclb
std
pop
leave
add
inc
mov
ret
enter
and
dec
pushf
sbbb
mov
shrl
gs
lret
testl
mov
xchg
xchg
xor
mov
cli
and
stc
lahf
inc
test
aaa
pop
mov
push
in
xor
mov
jnp
fisubrs
push
lods
push
inc
push
mov
shlb
pop
enter
repz
cs
mov
jb
and
jb
push
add
inc
push
sub
cmp
rclb
icebp
push
or
xor
in
xor
xor
dec
dec
cmpsb
xchg
mov
cmc
outsb
fmul
and
push
ljmp
dec
ljmp
inc
sbb
mov
or
hlt
test
call
jo
adc
mov
inc
push
pusha
idivl
hlt
mov
push
testl
and
mov
mov
xor
pusha
adc
push
jne
or
jecxz
cmp
out
loop
and
push
popf
lcall
into
mov
push
push
dec
adcb
repz
mov
cmc
add
mov
push
imul
test
cwtl
das
arpl
dec
loop
test
jnp
repz
push
call
mov
sti
nop
outsl
mov
mov
ds
pop
scas
das
add
fadds
lahf
ss
fsub
ja
jbe
in
dec
dec
mov
mov
pop
pop
dec
in
cmp
lcall
jno
es
stc
push
add
sbb
push
movsl
test
pop
icebp
hlt
sahf
xchg
push
adc
mov
adc
addr16
mov
ljmp
adc
loop
adc
xchg
jnp
rorb
mov
dec
into
in
lds
adc
sbb
std
jbe
mov
cmp
out
test
pop
sahf
jbe
or
out
xchg
xor
mov
adc
mov
les
idivb
iret
mov
fiadds
jp
jecxz
inc
repz
push
xchg
sub
test
push
repz
in
mov
bound
push
push
mov
sub
or
scas
inc
scas
scas
sti
xchg
and
dec
xor
cmc
mov
mov
sub
mov
mov
push
test
mov
repnz
inc
fcmovnbe
lret
cwtl
das
mov
sub
fwait
push
xchg
sub
insb
add
xchg
and
jno
jl
mov
mov
or
clc
push
xchg
xchg
insb
mov
jnp
cmp
cmp
movsb
ds
mov
mov
mov
xchg
mov
into
jne
out
pop
push
in
js
xlat
outsb
push
jnp
xchg
lods
inc
xlat
sbb
jne
cmp
lea
inc
sbb
fs
and
pop
adcb
je
in
cmp
rorb
inc
jl
cmp
jecxz
test
sbb
sbb
mov
fs
andb
pop
adc
xchg
inc
jl
xchg
pop
xor
ss
repz
pcmpgtb
mov
inc
jecxz
call
or
xor
xlat
fs
xchg
clc
mov
cli
enter
fbld
jle
cltd
xor
push
add
sbb
test
lret
xor
mov
lret
inc
lea
std
and
mov
js
lret
cmp
add
adc
and
jno
xchg
daa
sti
pop
push
ret
and
outsl
ss
mov
push
sti
or
scas
pusha
mov
xchg
dec
sbbb
pusha
mov
outsl
icebp
inc
cmpsb
inc
cli
xchg
jae
addr16
and
mov
ret
push
outsb
shlb
scas
jp
push
test
scas
bnd
aad
aam
sbb
jl
cli
pop
je
push
addb
jmp
nop
rcrl
xchg
out
or
and
adc
inc
pop
insl
mov
dec
and
mov
push
in
pusha
std
sub
jmp
roll
dec
mov
or
pop
hlt
das
xchg
push
iret
adc
xchg
sub
and
gs
xchg
dec
pop
pop
sbb
mov
insb
test
imul
ret
ret
xchg
pusha
mov
adc
mov
call
xchg
and
mull
popf
lcall
or
sti
ss
cmpsb
inc
jle
cmp
test
stos
mov
mov
or
mov
add
lock
loop
add
lock
cmova
xor
lahf
push
sub
iret
mov
rorb
enter
lret
mov
cmp
dec
cmc
mov
loop
push
xchg
push
and
inc
out
xchg
mov
gs
loopne
adc
sub
out
push
jmp
lds
mov
js
mov
mov
rcrl
jae
data16
pop
movsb
add
rclb
repnz
inc
cmp
jbe
loope
push
adc
imul
leave
mov
mov
xlat
jg
mov
jb
jns
rclb
fsubs
daa
jmpw
mov
cmp
xor
inc
xchg
ret
out
xchg
mov
jl
movl
mov
sub
jbe
sbb
fs
pop
lock
mov
ja
sbb
std
rorb
push
test
scas
stc
pop
ret
pop
imul
pop
xor
lods
jg
lea
sbb
adcl
mov
xor
ret
popf
inc
sbb
dec
out
fdivrs
cld
inc
mov
pushf
iret
pop
lock
xchg
inc
adc
sbb
jae
mov
enter
jge
xor
int
dec
lods
inc
cmp
mov
icebp
mov
outsl
push
movsb
jnp
cmpsb
lods
imul
subb
push
in
xor
scas
jbe
mov
call
data16
push
dec
insl
add
sbbl
mov
mov
add
rcrl
aad
cli
xchg
xlat
ret
jecxz
xchg
inc
and
bound
mov
leave
cmc
or
popf
cmp
repz
push
mov
imul
xlat
fistpll
aaa
mov
xchg
pop
scas
sub
pop
ret
jo
dec
mov
push
in
jl
xor
cmc
cmp
clc
jnp
ds
push
xor
scas
xchg
and
cmpsl
cltd
jg
imulb
pop
ret
or
jl
or
jp
cmp
inc
pop
sub
inc
sbb
or
pop
in
cmpl
mov
stc
jle
cltd
cmp
jnp
push
andl
pop
imul
popf
jg
mov
mov
loop
mov
pop
dec
pop
clc
push
out
sub
cmp
xor
dec
dec
lock
inc
sub
pop
sub
dec
orl
dec
sub
xchg
loopne
xchg
maskmovq
testl
in
mov
ret
xchg
sub
adc
mov
stc
in
loopne
cs
imul
dec
jne
pop
push
adc
cmp
scas
popa
ss
enter
xchg
cmp
adc
pop
mov
dec
clc
jl
cmp
mov
pop
sahf
sub
push
out
mov
jns
popa
inc
fnstenv
dec
xchg
cs
push
xor
insb
jne
jnp
lea
int
push
scas
inc
insl
sub
ret
test
das
xchg
cmp
or
cmp
nop
pusha
add
cmc
adc
pop
xor
lahf
je
stc
nop
and
xchg
push
data16
bound
cmp
add
test
lret
jmp
or
mov
and
pop
lock
push
mov
sub
mov
int
daa
aad
fisubl
push
pop
mov
pop
stos
xor
mov
in
js
dec
stc
imul
adc
ss
lds
xchg
sub
inc
xchg
pop
adc
lds
mov
mov
lret
jl
lret
popf
push
jmp
and
adc
gs
loop
xchg
xchg
sbb
pop
sahf
xlat
cmp
adc
scas
xchg
add
push
sbbb
mov
mov
fcomip
fisubrs
jnp
xor
call
jg
cmp
nop
or
sub
scas
mov
stc
cli
xor
pop
mov
mov
pop
out
dec
and
lock
and
int3
push
pop
repnz
mov
movsl
adc
or
jno
dec
jecxz
xchg
and
or
mov
sub
repz
xchg
and
mov
inc
sub
lea
pusha
idiv
xor
lock
push
lcall
xchg
or
test
pop
mov
add
je
jl
lea
les
inc
xor
jae
jecxz
cmpsb
xchg
cmp
adc
popf
xor
xor
aad
or
inc
mov
xor
mov
filds
fcomps
jg
stc
cmp
stos
nop
daa
add
jo
inc
and
push
xchg
fs
cmpsl
xlat
outsb
cmc
mov
mov
xchg
sub
jno
mov
gs
daa
movsb
cmp
add
jl
in
inc
popf
outsl
push
and
cmpsb
cmp
ja
xor
pop
cltd
sub
lret
out
jmp
stc
sbb
xchg
scas
adc
pop
mov
sbbl
fsubl
xchg
std
add
cs
and
cmp
pop
cli
xchg
nop
repz
cmc
and
sbb
ja
aaa
into
xor
push
push
in
xchg
mov
jmp
or
cmp
mov
sub
icebp
test
cmp
cmc
movsl
pop
inc
push
sbb
pop
or
aam
stos
sub
dec
mov
fcmovnb
pop
jecxz
xchg
adc
pop
hlt
les
pop
out
testl
mov
xor
aaa
and
adc
imul
mov
sub
dec
aam
dec
loopne
jns,pt
insb
test
repz
dec
int3
xchg
scas
inc
sbb
outsb
adc
iret
aad
xlat
adcl
cmp
pushf
jg
iret
and
adc
and
or
mov
pop
insl
ret
jg
push
imull
mov
xor
clc
lahf
push
hlt
push
fmul
add
dec
lret
mov
shrb
push
cmp
add
repnz
scas
mov
push
repz
shrl
adc
sbb
repnz
xchg
sub
mov
je
movsl
mov
pop
nop
lret
bound
movsb
lds
mov
sub
lods
inc
shlb
jecxz
pop
mov
mov
loop
or
or
sbb
inc
pop
lock
mov
jg
inc
clc
add
in
jecxz
scas
and
add
shlb
mov
fbstp
fldt
outsl
outsb
std
cwtl
dec
mov
add
aad
nop
lock
jb
sub
insl
jl
in
add
sbb
sbb
lods
shl
sahf
es
cmpsl
enter
insl
insb
ss
cmp
ret
mov
nop
adc
mov
xchg
lods
jle
sub
rcrl
pop
push
pop
xor
fsubs
gs
inc
out
push
sbb
sbb
pop
in
repz
xchg
inc
add
add
into
iret
fcmovne
scas
lods
cmp
notl
mov
repz
rolb
xchg
xor
iret
and
mov
addr16
popa
mov
loopne
mov
mov
jbe
hlt
xchg
test
bound
data16
cmp
jnp
jo
inc
roll
jbe
in
sub
xor
lret
xchg
lods
mov
arpl
sbbb
pop
mov
adc
inc
jae
mov
mov
test
sti
addr16
sbb
inc
sbb
test
sarl
js
jnp
add
bound
mov
push
dec
push
or
push
cmpsb
fchs
add
and
in
test
push
in
ja
rorb
add
and
std
add
out
lods
test
pusha
lock
mov
or
fwait
pop
into
gs
in
xor
push
add
mov
xchg
mov
pop
sahf
push
add
arpl
stos
and
test
cs
push
dec
cwtl
daa
push
inc
inc
mov
fstl
push
into
push
jnp
or
inc
adc
sub
push
imul
in
push
dec
loope
add
xor
pop
lods
mov
mov
dec
insl
add
mov
mov
incl
nop
pusha
jb
xchg
stc
mov
cmp
or
repnz
xchg
and
sub
inc
mov
mov
popf
mov
jmp
xor
xchg
dec
pop
repz
sub
mov
jnp
inc
jmp
out
cld
cmpsb
fcompl
push
jo
push
int
jnp
add
lahf
ss
add
movsl
ja
int
or
sub
inc
adc
clc
loop
dec
xchg
sbb
jp,pt
lods
iret
aad
dec
pop
scas
dec
rolb
adcb
clc
fcmovnu
decb
stos
std
adc
pushf
jp
mov
jne
mov
or
inc
out
push
and
shl
adcb
jl
mov
imul
mov
pop
mov
push
and
jb
aam
pop
push
mov
ja
xor
scas
inc
inc
loopne
mov
or
inc
insl
jb
or
sub
out
test
inc
mov
inc
bound
aaa
lahf
adcl
or
xor
mov
inc
cld
in
cli
cmpsl
mov
idivl
or
or
aam
xchg
cmp
jns
adc
mov
outsl
push
fsts
lds
in
mov
hlt
push
xor
jne
lea
cmp
xor
decb
adc
cmp
jecxz
push
add
pop
movsl
popa
and
ja
and
cmpsb
hlt
push
cmc
jecxz
xchg
pop
jo
jle
cmp
inc
dec
push
gs
out
movsb
push
outsl
adc
aam
pop
sub
add
cld
sbb
rcll
sahf
xor
cmp
cmp
pop
sbb
daa
dec
cmpb
iret
push
mov
pop
imul
cltd
fwait
test
ljmp
mov
dec
cs
cmp
sub
fstl
fisubl
data16
insb
cmp
outsl
jno
jbe
mov
les
cld
push
inc
xor
push
imul
xchg
ret
pop
mov
inc
push
or
ja
push
lods
fdivl
icebp
les
adc
push
jnp
out
mov
jle
xlat
outsl
xor
xchg
je
or
fisubrs
push
shrb
scas
sbb
adc
in
push
adc
addr16
repz
add
mov
mov
out
dec
mov
push
insl
sbb
cmp
mov
inc
cld
ret
add
jge
mov
mov
rolb
push
divb
jmp
xor
mov
ja
dec
aad
xchg
dec
out
arpl
inc
add
clc
out
outsl
daa
mov
mov
daa
sbb
insb
push
les
js
enter
scas
cmp
mov
inc
jmp
push
jo
push
data16
shr
ret
imulb
dec
stc
cmc
and
jl
popa
jmp
sbb
xor
icebp
sti
push
xchg
sub
dec
xor
iret
loope
sub
sub
sbb
fwait
cmpsl
lds
and
outsl
out
mov
mov
and
dec
rorl
jl
add
hlt
mov
jb
push
outsl
enter
jbe
ret
pop
imulb
pop
dec
iret
or
orl
in
cmp
pop
aam
lret
movsb
xchg
mov
scas
inc
enter
push
mov
xchg
pop
test
jp
icebp
stos
lods
hlt
cmp
js
sbb
mov
out
jae
stc
mov
js
sub
adc
jge
or
xor
mov
and
outsb
mov
cmp
cmc
repnz
ret
faddl
lods
adc
pop
jae
xor
mov
add
rcrl
add
test
subl
mov
nop
or
push
fadd
push
cmp
outsb
mov
gs
sub
mov
xchg
xchg
push
push
aad
or
fistpl
mov
sti
mull
in
xchg
adc
lcall
sti
or
adc
adc
adc
jb
and
stos
loop
push
stc
xchg
xchg
xchg
jl
sub
jge
repz
jns
ja
add
in
inc
jne
xor
iret
daa
sub
mov
xchg
push
stc
ror
dec
cmp
dec
cld
clc
mov
inc
shrl
sahf
jbe
loope
rorl
dec
mov
xorl
ja
mov
in
jo
imul
mov
cltd
cmp
fmuls
stc
rolb
mov
aam
mov
jmp
dec
loope
pusha
int3
mov
push
outsb
inc
out
daa
and
test
lret
enter
add
cmp
dec
daa
lods
mov
hlt
mov
and
mov
lds
push
push
push
adc
fisubrs
int
mov
fbstp
lret
xlat
adcl
xor
push
push
push
lret
pop
jge
fsubp
xchg
adc
push
scas
push
sbb
and
insb
pop
pop
sbb
sbb
insb
sub
mov
mov
test
in
orb
loopne
and
mov
sar
inc
inc
out
enter
push
push
pop
cwtl
mov
sbb
ljmp
adc
jne
bound
pop
sub
mov
jbe
jg
movsl
xor
frstor
shlb
add
orl
pop
jnp
in
jnp
cmp
xchg
sub
test
cmp
inc
add
xchg
dec
mov
jg
inc
add
mov
mov
es
or
sub
mov
mov
sub
loopne
push
cwtl
pop
sbb
nop
mov
ds
sub
xchg
fcomi
das
dec
mov
ret
aad
insl
jl
lods
pusha
pop
pop
test
pop
orl
stos
dec
aad
and
popf
adc
push
dec
outsb
fnstcw
je
into
sbb
cmp
int
movsl
addr16
push
ljmp
jno
outsl
outsl
mov
nop
pop
mov
shlb
mov
stos
psadbw
jp
sbb
push
sub
mov
mov
pop
or
sarl
mov
push
mov
jle
jg
and
loope
adc
xchg
repz
push
xchg
pushf
adc
and
adc
inc
add
shrb
js
lcall
in
cmp
cmp
xor
dec
test
adc
decb
jl
jb
cltd
add
nop
adc
sbbl
mov
push
cltd
sbb
push
or
mov
xor
fldl
insb
jne
push
add
into
jge
sub
pushf
cli
gs
sub
push
into
jb
add
mov
fdivrs
and
in
xor
mov
arpl
add
inc
cmp
out
out
pop
movsl
arpl
push
push
or
js
daa
push
jbe
enter
scas
std
inc
mov
cmp
push
sub
dec
das
sub
or
xchg
mov
pop
mov
inc
cmovbe
xlat
jnp
or
imulb
loop
push
dec
movsl
shrb
fidivl
pushf
jg
jbe
sbbb
bound
mov
rorl
pop
mov
movsb
inc
rorl
mov
dec
test
jp
outsl
fidivrs
sub
xchg
int
ret
dec
aaa
scas
popf
test
mov
or
lods
je
sub
lea
mov
xor
adc
test
or
fnsave
push
nop
mov
mov
sub
cmp
mov
sbb
into
outsl
dec
bound
cwtl
into
lea
ficomps
pop
sub
xchg
ss
mov
push
mov
push
ss
cmc
lds
testl
add
jge
jb
pop
push
std
mov
cmpsl
rcll
mov
inc
jg
pop
adc
jae
cltd
in
inc
movsb
cli
repnz
mov
jbe
mov
jp
sbb
mov
mov
push
or
cmp
sbb
mov
scas
inc
mov
sbbl
xchg
and
in
sub
cs
mov
or
or
adc
aas
popf
jnp
iret
les
pop
jl
cltd
cmpsl
cwtl
popf
cmpsb
cmp
loopne
out
add
shl
out
in
popf
ret
pop
lock
stos
mov
and
pop
addb
fsubrl
das
lahf
adc
fwait
pop
xor
icebp
in
fists
js
and
add
mov
sarl
repz
idivb
movsb
lea
in
pop
xor
push
ds
and
popf
add
pop
repz
or
jb
mov
xor
dec
xchg
fdivr
xchg
movsb
shlb
jae
mov
xchg
mov
push
cmc
inc
sub
fstpl
test
das
add
sub
clc
lods
inc
sub
scas
mov
mov
pop
aam
inc
loop
dec
dec
dec
mov
loop
orb
push
xor
jnp
push
pop
mov
inc
xchg
jnp
adc
cmp
call
jae
push
jmp
fisttps
inc
dec
mov
jo
call
pop
xlat
in
jmp
cmc
test
arpl
add
sub
jg
cld
ret
jle
mov
nop
mov
bt
lods
sarl
imul
mov
rcl
sbb
iret
inc
popa
lds
out
aad
negb
and
in
movsb
mov
mov
push
popa
test
add
jns
inc
pop
sub
xor
xor
faddl
inc
arpl
lods
push
inc
into
xor
inc
inc
data16
lods
jmp
scas
pop
aaa
pop
add
test
and
push
cmpsl
shrl
clc
out
inc
cld
jbe
loopne
push
in
test
out
repnz
or
jge
pop
dec
pop
mov
add
sbb
lahf
ss
mov
mov
jbe
ljmp
shlb
mov
daa
cmp
push
sub
pushf
jb
into
pop
mov
push
jecxz
push
adc
cmp
insl
pop
mov
aas
cmp
mov
scas
mov
cmp
add
jo
in
fdivp
adc
jge
cmp
adc
push
imull
enter
mov
dec
inc
repz
or
mov
fisttpll
scas
push
movsl
adc
ljmp
insb
inc
or
xor
cmp
ljmp
adc
sbb
inc
add
rcrb
push
out
test
adc
je
inc
sahf
clc
into
data16
pop
ss
testb
cltd
add
mov
pop
or
pushf
add
scas
and
cmc
cltd
test
lret
xchg
jle
clc
out
xor
arpl
pop
orl
out
std
xlat
add
fadds
iret
mov
xchg
or
fnstenv
into
test
in
sbbb
mov
mov
stos
sub
sti
pop
int3
xor
pop
dec
xorl
js
jnp
jnp
inc
dec
cltd
xor
mov
add
popf
sub
add
lea
jbe
xlat
and
negb
push
mov
lahf
ss
das
mov
test
in
dec
cli
xchg
mov
ffree
xchg
add
shll
adc
loopne
push
scas
or
ljmp
outsb
loope
adc
sbb
pop
pop
push
ret
icebp
shlb
xor
pop
lock
mov
pop
adc
lea
xchg
cmp
ret
xchg
ret
cmp
lock
pop
out
adc
mov
sbb
dec
imul
or
daa
imulb
push
fdivr
aas
mull
out
gs
fisttpll
mov
cld
push
mov
cmp
inc
fistl
lahf
adc
or
sbb
push
lahf
stos
js
adc
ss
mov
ret
adc
in
test
subl
or
adc
mov
inc
sbb
pop
and
inc
ds
cmp
xor
les
mov
stos
imul
mov
dec
xchg
xor
sbb
scas
stc
cmp
or
mov
repz
loopne
outsb
sub
mov
pop
shrl
push
scas
jb
push
iret
lods
push
adc
fists
popf
sub
or
jp
shll
xchg
lret
add
cmp
jne
jae
xchg
mov
push
dec
sbbl
mov
mov
in
or
dec
sarb
les
sbb
xchg
fdivrs
push
outsl
out
xchg
mov
sub
push
jle
or
ja
lods
imul
mov
int3
and
movsb
aad
add
scas
cli
pop
out
sbb
dec
and
nop
xor
or
outsb
cld
call
jmp
out
insl
push
std
mov
adc
aad
ja
inc
cltd
inc
fwait
test
pop
jmp
mov
test
mov
in
sbb
movl
xchg
jge
js
aam
cld
imul
cmp
repz
std
lods
fsubrs
ja
mov
std
ljmp
cld
mov
pop
xchg
movsb
mov
fcoms
inc
in
pusha
pop
and
add
pop
lock
std
inc
inc
xchg
jmp
out
inc
mov
cmp
shrl
sbb
stos
adc
or
out
cmp
mov
push
add
mov
loope
and
jecxz
cld
inc
or
cmpsl
xchg
sbbb
jne
imul
mov
fidivl
fcoms
outsl
test
mov
adc
imul
and
cmp
push
scas
gs
scas
mov
ds
add
jnp
movsl
adc
inc
je
dec
icebp
icebp
nop
jbe
popa
xorl
lcall
cli
push
in
mov
mov
inc
fsubl
sub
adc
xchg
mov
popf
subl
adc
rorb
nop
mov
ret
pop
movsl
hlt
test
or
lret
int
and
xchg
scas
push
das
iret
pop
or
and
insl
push
testb
dec
sarl
cmpsl
repnz
int3
pop
sub
and
pusha
imul
lea
leave
fsubs
adc
sub
jge
lods
pop
ret
fxch
test
jb
mov
leave
into
and
cmp
adcb
cmp
pop
insb
paddd
add
rcl
sbb
pusha
mov
cmp
stos
dec
sbb
push
mov
jnp
dec
jb
jecxz
fcomps
or
out
dec
ljmp
arpl
enter
daa
dec
incl
jb
sarl
push
enter
jne
sbb
aad
xchg
xor
leave
add
lock
push
sbb
or
inc
ficomps
and
jle
xor
adc
inc
pop
cld
lcall
push
push
xor
enter
jne
cwtl
pop
filds
js
or
mov
addr16
pusha
add
mov
mov
sbb
test
adc
iret
mov
test
mov
mov
fcoms
jmp
add
add
loope
mov
pop
xlat
jne
sbb
lahf
jbe
testb
in
std
cwtl
lock
and
xor
cld
xchg
cmp
or
jle
jmp
inc
sub
cmp
std
xor
mov
cmp
pop
push
inc
mov
sub
pop
jns
mov
and
lods
dec
xlat
or
inc
fildll
cmp
ss
in
inc
dec
dec
xor
loopne
jl
jb
cwtl
inc
shrb
shrb
call
out
inc
mov
add
in
sub
cmp
aaa
scas
ret
out
cwtl
cmpsl
inc
fcoml
rol
pop
les
subl
enter
adc
cmp
stos
pop
fists
inc
mov
leave
push
mov
loopne
ret
push
sub
dec
dec
inc
hlt
sub
or
dec
push
mov
inc
in
or
adc
out
dec
rcll
jbe
jg
fnsave
fildll
hlt
js
dec
hlt
push
outsb
aam
ds
cmp
xchg
pop
push
in
loop
in
xor
je
xor
and
std
mov
out
sub
enter
lods
jge
push
pop
add
xchg
lahf
xor
sti
add
push
stos
inc
loope
xchg
mov
mov
ret
xchg
fdivrs
aam
pop
dec
push
add
pop
aad
xchg
std
cmp
daa
adc
stos
outsb
cwtl
mov
mov
outsb
mov
out
aad
add
hlt
mov
cmpsl
ljmp
jno
xchg
mov
jb
cmp
fldenv
push
sbb
push
or
mov
rclb
fs
ja
or
andl
popa
int3
mov
fld
sbb
ds
push
pop
ret
xor
xlat
sahf
xor
dec
cmp
xchg
cmp
jb
mulb
inc
and
cli
jne
lret
xor
mov
lock
test
pop
mov
je
mov
cmp
push
repnz
ret
jns
push
or
cmp
jno
push
mov
clc
push
jmp
sub
push
jmp
int3
or
cli
jb
shrl
sbb
fisubl
dec
add
or
sub
mov
jb
dec
std
cmp
push
sub
clc
sbb
mov
rol
adc
int3
jge
inc
inc
mov
jno
push
fsubr
or
out
xor
xchg
loopne
insl
pop
cmp
and
outsl
lea
jbe
jb
lds
add
mov
push
jmp
cmp
dec
emms
scas
rclb
call
or
mov
gs
xlat
xor
pop
jmp
lret
clc
fcmove
int
sbb
les
bound
iret
xchg
pusha
test
sub
hlt
pop
add
iret
repz
xor
push
icebp
jecxz
stos
cmp
mov
outsl
divb
fsts
cmpsb
xor
jge
jle
into
adc
divl
lcall
popa
xor
movsl
sbb
dec
loopne
inc
inc
push
out
fldenv
shr
inc
pop
push
lds
mov
mov
std
mov
mov
lret
mov
shlb
mov
lock
imul
mov
aad
pusha
jno
sbb
sahf
cmp
cmp
mov
loop
jo
test
inc
inc
xor
xchg
sbb
mov
aam
mov
gs
icebp
and
and
add
sub
stc
fstl
andb
jns
mov
jns
repnz
mov
xor
mov
fadd
lret
inc
in
out
daa
push
inc
dec
dec
and
lcall
push
lret
lahf
stos
clc
and
push
lret
and
cmpsb
loope
sahf
icebp
mov
ljmp
shr
in
test
insb
movsl
mov
mov
cmpsb
dec
xchg
add
xchg
dec
cs
mov
dec
jmp
dec
pop
xor
push
or
fisttpl
add
sub
xchg
push
xchg
div
lods
or
adc
ss
pop
pop
enter
mov
push
repnz
cwtl
sbb
arpl
mov
mov
add
xchg
dec
dec
mov
mov
sub
jl
xchg
dec
gs
rcr
jb
icebp
jae
and
adc
ss
loop,pt
push
adc
repnz
test
mulb
push
adc
dec
mov
loop
nop
pop
add
ja
push
sub
test
fbld
pop
insb
lea
cmp
cmpsb
pop
and
mov
push
mov
mov
fcomp
in
or
jmp
cmp
out
add
sub
and
lods
loopne
xchg
xor
xor
and
aam
leave
paddb
flds
push
lcall
cwtl
outsl
mov
div
adc
call
das
or
movsl
sub
cld
cmpsl
test
rcrb
icebp
pop
sub
andb
lret
int
out
mov
loop
push
sub
mov
subb
pusha
clc
fwait
les
xchg
jns
jmp
andb
in
add
fadds
icebp
mov
mov
jne
adcb
jle
into
sbb
jle
iret
lcall
ljmp
sbb
pop
dec
pop
mov
add
out
jne
mov
bound
int3
into
adc
pop
out
push
lods
pop
jnp
iret
sarl
cwtl
push
outsl
cmpl
pop
insb
shll
out
cmp
or
nop
adc
push
sub
push
add
jb
jbe
punpckhbw
xchg
pop
int
scas
xchg
cmp
adc
mov
mov
lret
push
or
test
dec
dec
cmpsb
mov
jnp
fcomps
add
sub
lret
push
adc
cwtl
cmp
jmp
shlb
test
mov
jbe
add
sub
add
aaa
mov
jae
lods
int3
adc
add
sub
pop
inc
fimuls
imul
dec
mov
mov
sub
popa
pop
add
shll
pop
movsl
test
fucom
mov
cwtl
movsb
push
push
jb
aas
daa
xchg
fstpl
cmp
jo
fwait
out
push
dec
pop
push
pop
insb
in
pop
icebp
sbb
cmp
mov
dec
and
andb
push
mov
push
int3
mov
xor
pop
cmc
xor
std
bound
clc
aas
sub
jnp
pop
inc
test
jmp
aam
cwtl
and
or
add
sub
cmp
aaa
mov
cmp
ja
adc
aas
adc
xor
in
pop
rolb
scas
bnd
fcmovnbe
adc
out
adc
mov
loopne
mov
or
ds
leave
sub
and
rolb
mov
ja
jb
push
fs
pop
or
into
cltd
movsb
loop
popa
mov
rorl
lods
test
pop
cmp
sub
mov
je
arpl
lret
add
repz
jmp
cld
dec
cmpsb
sub
add
lea
ret
adcb
xchg
bnd
adc
cmp
push
sti
leave
repz
enter
push
shrl
pop
or
pop
cmp
xchg
cmp
jecxz
push
out
or
mov
sub
inc
and
imul
adc
cmp
xlat
push
jecxz
icebp
cmp
fldcw
inc
rcll
cmp
or
mov
outsl
pop
fists
fistpl
lods
decl
sub
int3
inc
dec
pushf
ds
popa
ljmp
mov
pushl
gs
push
out
popf
jne
and
int
imul
insl
daa
cmpsl
ds
ret
rol
sub
js
or
sub
add
into
mov
fsts
mov
pop
sub
enter
xchg
testl
xchg
imul
pusha
mov
sbb
mov
arpl
xor
mov
mov
mov
enter
stc
insl
cli
mov
or
sarl
jae
out
loop
add
repz
lret
fsubrs
sub
jne
inc
and
aaa
sti
and
sbb
leave
mov
test
or
xor
ljmp
stos
cmpl
jmp
lret
mov
dec
pop
insb
negl
jbe
dec
mov
pop
or
xchg
pusha
cmpsl
ret
pop
xor
push
pusha
lret
in
jns
out
cmpsl
sbb
dec
lods
int
ficoms
xchg
das
sub
xorb
cmp
dec
pusha
in
pushf
ret
dec
jb
cmpb
stos
pop
mov
aas
int3
jmp
push
bound
shll
les
adcb
pop
xchg
inc
test
and
push
mov
in
clc
and
aaa
sarb
push
mov
jae
inc
pop
stos
xchg
fildl
test
mov
fs
jo
xchg
xor
andl
mov
fs
push
data16
jae
or
insl
aam
mov
sbb
cwtl
aas
mov
mov
add
jnp
and
test
dec
jb
stos
xchg
ds
xchg
in
icebp
pop
mov
mov
sbb
jne
aas
or
lock
ja
fstps
ds
pushw
repz
ds
out
or
shrl
sahf
inc
cmp
push
jae
repnz
out
add
sub
and
fsub
sub
divl
mov
jmp
mov
test
pop
enter
shll
rolb
push
imul
pusha
lock
int3
mov
cld
dec
adc
inc
dec
in
and
shrb
xchg
sbb
jns
ds
sub
mov
sub
jb
lods
mov
into
xor
mov
call
imul
mov
xchg
adc
adcb
pop
je
mov
cli
idiv
adc
mov
out
xchg
lahf
je
pop
push
mov
hlt
push
mov
dec
xchg
jno
xor
xchg
leave
adc
addr16
xchg
push
icebp
adc
imul
cmp
lret
jg
mov
pop
fsubrl
movsb
js
jp
in
dec
sti
inc
orb
mov
mov
shlb
ja
or
cs
movlps
icebp
or
daa
dec
sub
aaa
pop
data16
push
insb
push
lret
aam
std
sub
xor
push
out
mov
jecxz
rclb
cwtl
sbb
icebp
aas
stc
mov
sub
pop
or
pop
cmp
fucom
jecxz
mov
shll
es
hlt
xor
xor
xchg
mov
clc
enter
bound
sub
adc
shlb
fcoml
ljmp
out
pop
pop
addr16
adc
lcall
and
in
loop
std
popa
mov
mov
fidivrl
insl
or
dec
pop
lock
add
xor
addr16
mov
cmp
pusha
xor
fs
push
and
jb
cmp
or
pop
cmp
shlb
sub
loopne
rclb
push
mov
sbbb
cmp
pop
ret
xor
cwtl
add
outsb
in
sub
or
dec
xchg
popf
outsl
cli
ljmp
pop
int
add
mov
push
jo
aam
jnp
clc
sahf
fwait
movsl
pop
outsb
out
jno
push
in
loope
pop
fadd
andl
test
sahf
aaa
test
bound
das
es
push
out
movsl
pop
test
movsl
xchg
mov
shll
mov
clc
vpunpcklqdq
aam
mov
xor
lahf
idivl
fsubl
xlat
mov
and
or
xlat
icebp
bound
pushl
mov
push
jne
icebp
sbb
xchg
mov
ljmp
out
jno
jbe
enter
sub
pop
icebp
pop
int
pop
iret
jp
iret
cltd
pop
sarb
into
cmp
rcrl
sbb
xor
lahf
inc
dec
fdivl
stos
les
into
rorb
mov
mov
and
xchg
in
imul
mov
pop
pop
pop
xor
add
xchg
xorl
popf
xor
rcll
mov
cld
push
out
adc
icebp
adcl
leave
out
lds
dec
mov
movsl
push
fwait
jmp
clc
sub
adc
jg
pop
outsb
push
fidivs
arpl
cmp
insb
adcl
add
sbb
in
push
lods
pop
push
dec
mov
std
mov
pop
call
or
mov
xchg
int3
mov
mov
sub
pop
lret
sahf
jns
inc
pop
stos
pop
adc
mov
jle
or
jmp
test
inc
sbb
js
push
mov
popf
shll
mov
ror
mov
mov
sub
pop
fsts
aam
sti
mov
xor
outsl
in
std
insl
xor
xchg
pop
mov
sbb
pusha
pop
dec
fdivrs
cmp
arpl
jbe
orb
xchg
inc
and
xor
cmc
ret
lds
and
pop
bound
sbb
mov
dec
loope
mov
aas
push
cmp
sbb
das
xchg
cs
sub
mov
mov
fcmovnbe
les
stc
inc
bound
ret
mov
test
xlat
pop
xor
rol
pop
sahf
inc
loope
ljmp
pop
out
mov
les
sub
das
push
mov
cmp
inc
frstor
inc
xchg
dec
xchg
out
cmp
mov
movsb
mov
int3
in
jne
pop
shrb
jg
int3
adc
jmp
in
xor
gs
pushw
cmpsl
fucomp
shrl
mov
xor
sbb
mov
pop
es
xchg
popl
or
out
pusha
lahf
pop
inc
ljmp
xor
mov
push
mov
out
aad
pop
pop
jno
mov
xor
sub
mov
push
clc
cmpsb
test
popa
sbb
mov
imulb
loope
fs
push
fnsave
shl
test
loope
sbb
fldl
imul
cmc
idivb
add
cmpl
sbb
in
mov
sub
scas
push
inc
lods
bound
pop
data16
repnz
push
popf
mov
xchg
xchg
xchg
inc
fidivrs
fbld
xor
jnp
andb
or
pop
cmp
xchg
mov
pop
inc
gs
jle
push
sub
cld
pushf
fwait
cmpsb
fwait
cmpsl
ds
sub
gs
add
movb
stc
and
call
add
arpl
mov
ret
cmp
paddusb
test
cmc
pop
sar
xchg
mov
add
push
rcrl
mov
jb
ds
sarl
adc
mov
push
and
dec
ret
test
pusha
mov
xchg
adc
sbb
mov
jmp
inc
rorl
sbb
mov
xchg
jp
push
inc
mov
mov
int
js
sbbl
repz
imull
cmp
push
int3
pop
imul
xchg
jp
adc
xchg
arpl
mov
mov
or
ret
lret
outsl
jmp
mov
sti
adc
cmp
cli
pushf
ja
shlb
xor
rcll
or
arpl
push
lcall
lret
lea
pop
gs
test
add
ljmp
jp
imul
adc
int
leave
and
call
jecxz
jo
cs
mov
add
mov
cmp
and
out
out
out
shlb
inc
popa
add
int3
jg
fbstp
mov
jb
jno
jbe
ljmp
cmp
aas
mov
mov
cmp
bound
dec
fmuls
jle
das
testb
enter
xchg
fidivl
enter
pop
adc
jnp
sarb
add
aas
outsb
xor
ret
and
xor
sahf
gs
sbb
pop
inc
loop
mov
hlt
mov
je
movsl
push
ss
xchg
jo
stos
add
stc
mov
movsl
loop
dec
dec
jnp
aaa
lods
nop
ljmp
jno
or
push
jle
xor
xchg
in
dec
dec
mov
xor
xchg
call
lds
pop
jae
xchg
sti
add
push
xor
mov
pop
cwtl
in
arpl
jns
test
mov
into
mov
pop
in
dec
xor
adc
call
leave
adc
adcb
or
stos
sbbb
mov
mov
sbb
test
test
sbb
xchg
mov
repz
push
jmp
div
and
cmp
js
cmpsl
fdivs
mov
mov
into
adc
repz
adc
ret
push
fisttpll
and
addr16
jb
gs
adc
xchg
cmp
repz
add
rol
andb
pop
pop
inc
movsb
mov
jbe
adc
or
dec
lret
lahf
mov
add
arpl
sbb
jb
fs
jnp
int
les
lcall
push
fxch
stc
push
pop
popf
inc
rcrb
jo
inc
pop
or
jne
inc
stc
stc
push
jno
loope
adc
mov
ja
mov
push
sbb
mov
pop
mov
shrl
mov
js
xchg
or
mov
mov
bound
gs
call
lock
repz
aad
sub
js
mov
mov
jae
push
fisttps
jno
fistpl
jb
ljmp
icebp
jmp
sbb
das
jecxz
xor
jns
dec
aad
mov
jmp
or
xor
cld
jl
mov
fildll
adc
mov
jbe
push
jno
mov
push
mov
cmc
incl
gs
ss
aas
cmpsl
inc
mov
in
or
xchg
sub
lea
mov
fdivl
dec
add
in
into
fadd
push
aad
idivb
out
jle
xchg
push
dec
enter
inc
loopne
out
sbb
mov
mov
je
not
int3
adc
movsb
iret
xchg
fmuls
lcall
loopne
out
cmp
xor
pop
mov
ret
sbb
in
in
xor
mov
gs
dec
xchg
sbb
jle
jo
adc
and
xchg
loope
scas
jns
fcomps
popa
in
xchg
test
vcvtdq2ps
jmp
push
push
std
jo
xor
push
inc
call
fistps
or
xchg
sub
mov
fiadds
bound
mov
adc
popf
mov
ds
mov
push
xor
or
or
test
adc
pop
out
nop
and
and
inc
shr
xchg
outsb
mov
shl
dec
cmc
sbb
xchg
lcall
sub
loopne
mov
fiaddl
fucomi
mov
sbb
mov
je
adc
sub
pop
addr16
pop
pop
mov
rorl
jg
inc
cld
xlat
adc
cmp
test
push
sub
cmpsb
cmp
add
or
pop
push
sub
aas
jns
cmp
push
lahf
jecxz
cli
push
popf
adc
sahf
sbb
clc
jae
pop
sbb
inc
fidivrl
ljmp
or
jge
loope
into
mov
sbb
cli
xchg
outsb
sub
roll
mov
out
mov
pushf
push
jbe
jnp
and
xchg
lret
mov
mov
xor
aaa
orl
inc
push
adc
outsl
outsb
ljmp
push
inc
dec
push
xor
or
push
movsl
mov
inc
push
sub
aad
jb
pushf
xchg
inc
cmp
dec
mov
inc
sub
push
ret
xchg
call
ja
fs
jb
test
xchg
add
ret
mov
xchg
sbb
dec
mov
sbb
cmp
jmp
pushf
icebp
andb
stc
add
fcomps
xor
ja
ret
icebp
xor
adc
test
scas
fsub
push
imul
mov
cwtl
xchg
or
lods
in
int3
xor
jge
push
push
outsl
adc
add
push
xchg
mov
dec
in
icebp
cmp
inc
addr16
mov
test
mov
aam
sbb
das
pop
movsb
ret
std
mov
outsl
lret
mov
add
fsubrl
scas
pop
mov
and
cmp
mov
orb
sbbb
sahf
sbb
lcall
fsubs
adcb
movsl
cli
arpl
pop
mov
ret
sub
les
cmp
flds
or
ret
sub
add
xorl
je
pop
xchg
inc
test
xor
fldl
xchg
jl
iret
push
js
mov
jne
pop
and
inc
rcr
pop
ljmp
nop
stos
in
repnz
jl
dec
pop
subb
pop
dec
add
data16
xchg
push
mov
xchg
adc
adc
mov
or
daa
fmull
jecxz
xor
sbb
add
pop
fists
add
jnp
push
or
cmp
push
insl
out
daa
jp
subl
push
stc
xchg
ja
lods
mov
or
jb
jp
ret
cmpsl
out
stc
sbb
lock
sbbl
adc
rorb
out
dec
out
jg
in
xor
pop
aad
sbb
stos
push
lret
sub
das
jecxz
xchg
cmc
into
lea
test
subb
jbe
mov
adc
std
gs
ljmp
inc
int
loop
pushf
mov
in
mov
mov
cmp
jmp
mov
pop
aaa
sbb
pop
xor
cmp
adc
mov
aad
pop
jne
mov
scas
arpl
dec
test
sbb
push
les
cwtl
mov
out
fadds
or
insl
mov
lods
mov
add
pop
ret
imul
test
pop
sub
push
xor
dec
add
out
iret
mov
je
ss
out
inc
mov
add
ljmp
inc
jne
js
cld
subb
aam
inc
pop
cmpsl
mov
jmp
mov
mov
push
stos
mov
cltd
js
stos
jbe
xchg
cmc
xchg
and
add
cmp
movl
xchg
aas
pop
imul
add
mov
cmp
dec
sub
xor
movsb
repnz
inc
fucomi
mov
cmp
in
pop
mov
pop
mov
cmp
scas
dec
dec
lcall
cwtl
rcrl
pop
loopne
jecxz
addr16
pop
cmp
or
xchg
sub
sti
xchg
fdivl
lea
mov
repz
xchg
xchg
add
std
adc
mov
loop
xor
mov
xor
sub
sti
mov
roll
and
addr16
mov
and
and
insb
xchg
jb
popf
addr16
rcrb
adc
mov
out
inc
sbb
pop
in
out
jnp
sti
xor
dec
out
jnp
pop
cs
adc
xchg
outsb
inc
pop
add
aas
adc
not
mov
sub
int3
insb
aaa
mov
out
sbb
jne
ss
mov
in
adc
jp
sti
xchg
clc
cli
lods
inc
xchg
pop
sti
int
stc
insl
cmp
and
imul
mov
fsubs
push
aaa
stos
arpl
xchg
jmp
les
je
insb
ss
and
not
repz
xchg
das
cmp
stos
test
in
ret
sbb
sbb
and
aad
testb
loope
mov
push
loopne
fistl
shlb
push
xor
or
scas
fwait
data16
test
jae
sub
jnp
stc
and
jge
test
cmpl
xor
and
movsb
pop
mov
push
xchg
mov
das
stos
inc
sub
leave
xor
in
call
addr16
xchg
pop
xlat
adc
adc
ds
repnz
sub
add
inc
xor
dec
mov
into
mov
and
lea
xchg
stos
adc
xor
pop
repnz
je
inc
lods
mov
popa
add
test
inc
pusha
or
lahf
arpl
movsb
cmp
pop
cmp
jno
in
push
sbb
mov
mov
jl
stos
xchg
mov
mov
mov
test
add
shrb
imul
cmp
pop
dec
sahf
jb
jg
fbstp
andl
dec
pop
call
aad
js
test
mov
push
in
xchg
add
fwait
mov
jmp
pop
mov
je
push
mov
jmp
and
and
mov
push
sti
fisttpll
mov
jns
inc
jg,pt
test
pusha
lret
lcall
add
sbb
cmp
decb
arpl
push
mov
fcmovnb
inc
mov
push
int3
xchg
fbld
push
cmc
int3
lahf
mov
cmp
aas
loope
dec
insb
fisttps
adc
mov
and
mov
imul
mov
and
test
shll
mov
int3
arpl
out
adc
ljmp
sub
xchg
xchg
pusha
je
sbb
xchg
into
icebp
aaa
pop
pop
or
mov
fldcw
lods
lahf
mov
imull
and
inc
push
ds
xchg
lcall
mov
xor
mov
mov
pop
jge
push
dec
push
mov
jno
jns
mov
cltd
fnstenv
and
push
xor
jo
cltd
and
mov
iret
pushw
jge
add
sbb
sbb
loope
mov
test
std
xchg
je
jl
enter
push
pop
aad
push
sti
popa
ds
idivb
daa
data16
imul
sarl
xlat
add
in
arpl
jecxz
out
shrb
test
div
stos
pop
insb
fstl
jle
sbb
sub
lret
adc
adc
add
cmp
inc
int
in
jne
fucomip
pusha
mov
scas
jecxz
pop
bound
call
insl
push
and
stos
xor
addb
les
xor
mov
mov
sbb
jno
nop
fwait
sbb
xor
movsb
gs
xlat
sub
mov
rolb
pushf
in
pushf
scas
jb
les
pusha
addr16
or
or
push
pop
out
out
push
xchg
inc
inc
mov
or
cmp
add
or
dec
loop
push
cwtl
jnp
into
push
pushl
out
cmpsb
xchg
mov
pop
lret
jne
pushf
aam
dec
pushf
xor
mov
push
das
add
inc
xchg
sub
dec
lock
mov
mov
xchg
repz
mov
shlb
repnz
outsb
pop
jg
cmp
stc
pop
mov
in
loope
outsl
adcl
test
nop
mov
sbb
icebp
pop
aad
je
cmp
xchg
jb
pop
fldt
mov
iret
push
or
ret
mov
and
into
mov
sub
lds
mov
mov
xchg
outsb
sahf
jp
add
popf
xor
fistpl
inc
xor
push
incb
sahf
pusha
push
out
int
mov
xor
fildll
adcb
es
xchg
adc
jae
andb
adc
in
sti
or
fiaddl
scas
add
or
cmp
and
sub
mov
cli
pop
mov
in
xor
loope
push
es
cli
lea
pop
push
or
fdiv
in
jno
mov
sbb
mov
out
jmp
mov
fwait
jae
fs
jmp
out
insb
and
jecxz
adc
inc
pop
incb
mov
pop
out
call
daa
in
inc
movl
jae
mov
sbb
inc
lods
push
xor
lods
xchg
and
push
idiv
js
ret
pop
jne
xchg
test
imul
cs
jp
and
lret
and
xchg
addr16
xchg
push
icebp
sbb
mov
outsl
cmpl
imul
mov
ret
jo
ss
stos
sbb
es
cmp
add
shrd
jmp
test
mov
adc
dec
shl
dec
es
das
out
and
xchg
push
adc
cmpl
push
in
enter
jo
push
mov
clc
sbb
movsb
stos
inc
and
jg
xchg
or
mov
subl
mov
ret
add
pop
or
test
jle
repz
imul
js
ds
xchg
sub
inc
mov
mov
inc
inc
sbb
jns
mov
hlt
and
gs
and
push
dec
mov
shll
jb
daa
jle
xchg
fisubl
out
xchg
sub
scas
in
jmp
lret
xor
push
call
pop
ss
add
inc
mov
or
xor
add
push
sub
shrb
cmp
mov
xchg
std
cwtl
loope
mov
pusha
mov
mov
and
pop
sbb
data16
es
idivb
push
repnz
xor
ljmp
pop
out
xor
data16
mov
jle
or
pop
or
shr
lods
fmull
cmp
cmp
sahf
cmp
andl
pop
test
mov
mov
ja
mov
cmp
xchg
push
in
or
cmpsb
jb
bound
cli
clc
daa
or
lret
in
fwait
jle
shlb
mov
lcall
mov
fs
xchg
sub
sub
loop
ss
int
out
enter
xor
rol
pop
push
sbb
mov
dec
push
and
cmp
xchg
push
inc
pusha
shrl
pop
data16
mov
xor
mov
lock
cltd
xor
gs
xchg
dec
mov
add
sbb
movsw
sarl
repz
cld
pop
fs
push
or
shll
test
sti
mov
lret
jp
sbb
mov
xchg
fadd
xchg
insl
pop
lcall
cmp
sbb
add
sbbb
xchg
jp
mov
test
lcall
cmpsb
addr16
repnz
shll
inc
xchg
mov
dec
mov
leave
dec
xlat
sub
inc
xor
arpl
cmpsb
adc
mov
lret
sub
cli
popa
pop
dec
ret
xchg
push
jmp
xor
sti
push
mov
test
sub
call
or
ret
push
sub
lds
negb
mov
pusha
sahf
sbb
rolb
push
xor
xchg
sub
repnz
and
scas
xchg
ja
pop
jmp
or
cmp
mov
dec
leave
das
xchg
dec
add
sbb
sbb
or
stc
pop
rcrl
sbb
jle
ds
pop
mov
pushf
push
add
jmp
cmp
xchg
lods
scas
mov
sub
shlb
mov
mov
push
add
pop
mov
sub
ret
shrl
push
inc
ljmp
pushf
and
sarb
in
mov
ret
mov
clc
and
cltd
sarl
xchg
sub
pop
lock
ss
xor
jge
dec
pop
mov
sub
cmp
push
push
repz
jns
dec
rcl
sbb
data16
sbb
test
out
push
mov
or
adc
test
lods
push
push
and
xor
inc
jg
add
lods
ljmp
inc
arpl
pop
rol
shll
ret
xor
insl
data16
cmp
cmp
clc
mov
aad
xor
out
pop
repz
add
out
addr16
shl
lds
mov
jge
lahf
mov
mov
adc
das
loopne
xor
pop
mov
sub
mov
push
fcmovu
stos
lds
jne
mov
lods
jb
pop
aaa
jbe
push
mov
mov
cltd
gs
xchg
mov
or
sbb
push
cmpb
xchg
sbb
mov
leave
in
subb
mov
or
cmp
fmul
imul
mov
xchg
inc
adc
xor
in
sub
push
xor
out
dec
mov
cmp
jle
pop
pop
push
mov
iret
data16
es
add
cli
xchg
cs
inc
or
imul
imull
shll
sub
sub
adc
add
dec
mov
hlt
adc
shlb
inc
pop
and
pop
jbe
jns
popa
ror
adc
adc
movsb
enter
mov
gs
sbb
fisttpll
shrb
sub
in
aad
sub
fidivl
mov
subl
inc
add
jmp
or
add
mov
cmp
int3
xchg
mov
xor
in
lahf
sbb
stos
out
ja
popa
pusha
push
sbb
jl
in
out
and
jecxz
das
sbb
cmc
mov
sti
sti
xchg
or
xchg
pop
pushf
sub
cmp
in
xchg
sub
shll
or
dec
or
mov
insl
mov
ret
push
or
in
test
ja
sarb
pop
sbb
in
cmp
xor
and
loopne
pusha
subb
repnz
out
xor
and
nop
fistpll
inc
lods
decl
or
push
cmpsb
pop
jno
mov
and
mov
push
xchg
mov
dec
jbe
arpl
adc
jae
jno
mov
loopne
ds
mov
cs
add
test
mov
loopne
sahf
loope
in
enter
data16
pop
mov
iret
sahf
sbb
test
insl
push
mov
frstor
vxorps
cs
cmc
in
std
es
add
and
and
je
push
bound
cmp
cli
sub
aaa
mov
dec
sub
xlat
pop
repnz
mov
ret
xchg
repz
dec
mov
outsb
les
xchg
outsl
aas
jne
mov
jae
or
and
push
dec
in
xor
pop
outsb
lock
mov
add
dec
repz
mov
push
ljmp
mov
rcrb
daa
pop
lock
cmp
jo
add
es
pop
mov
adc
inc
and
inc
lret
inc
data16
jne
addr16
push
jp
iret
lock
int
xlat
imul
popf
repz
cs
pusha
push
imul
or
test
testl
push
das
jns
xchg
add
jbe
xchg
jge
push
push
sbbl
cmc
mov
or
cmpsl
xlat
jnp
dec
mov
sbb
mov
mov
sub
pop
je
daa
pop
mov
scas
inc
lods
out
lcall
repz
fisubs
sub
jmp
add
imul
mov
sub
fisubl
std
popf
scas
sbbl
or
adc
mov
rolb
orl
cmc
shlw
jecxz
rcll
jg
sarb
add
adc
stos
shlb
mov
push
or
fnstcw
pop
adc
adc
push
mov
add
stos
test
fwait
popa
dec
or
out
ljmp
push
leave
lods
dec
pop
pop
mov
mov
dec
stc
and
stc
dec
xor
push
std
lods
jmp
dec
pushf
xor
frstor
clc
pop
adc
push
xchg
mov
push
pop
lods
test
sub
in
jge
inc
xchg
cs
mov
stc
jbe
popa
cmp
pusha
mov
out
cli
sub
push
xchg
enter
add
sub
sbb
loope
dec
push
movsl
sub
inc
mov
mov
or
xchg
sub
add
mov
fsts
iret
mov
test
fisubrl
in
pushf
and
pop
lods
mov
and
stc
pop
sbb
mov
sub
xor
shll
sbb
mov
cwtl
inc
mov
push
jo
ss
inc
inc
dec
mov
or
add
mov
enter
fiadds
jne
cmp
fcoml
xor
sbb
sbb
dec
push
cmpsl
sub
movsl
inc
and
sub
lds
ret
mov
xlat
xor
loope
repnz
lret
ret
lret
iret
pop
adc
sahf
call
pop
mov
mov
lock
cmpsb
mov
daa
daa
inc
inc
dec
adc
fwait
xchg
dec
or
not
movaps
mov
insb
jle
arpl
into
rolb
dec
jl
shlb
xor
push
jo
push
xor
push
cmp
arpl
clc
or
aam
sbb
les
sbb
or
cmp
adc
adc
pop
mov
test
repnz
out
jne
or
sbb
mov
xor
mov
jmp
es
jp
shrl
dec
idivl
ret
inc
xchg
jns
pop
ljmp
push
add
cmp
leave
xlat
sbb
and
xchg
inc
mov
inc
jecxz
push
lahf
jp
clc
xchg
icebp
adc
scas
adc
adc
sbb
fucomip
jmp
sahf
repz
sarl
mov
in
mov
cmp
clc
push
movsb
pop
frstor
cmc
cs
mov
and
dec
sbb
push
cmp
cmp
mov
and
mov
daa
ds
sub
jp
rcrb
call
out
cmp
sub
pusha
xor
sub
xchg
dec
cmc
mov
push
mov
adc
cmp
call
inc
mov
jg
push
jnp
sbb
arpl
push
push
sbbb
or
sarb
and
dec
pop
pop
mov
frstor
cmpsb
dec
clc
inc
data16
lds
aas
dec
jecxz
mov
push
mov
and
dec
rcll
movsl
adc
addr16
int
sub
frstor
dec
push
fwait
sahf
loope
fists
shlb
mov
and
punpckldq
lods
cmp
mov
pop
loopne
mov
mov
inc
daa
shl
add
xlat
data16
pop
clc
sbb
sbb
insb
cmp
sahf
out
push
jmp
mov
inc
fsubl
iret
sub
hlt
stos
xchg
es
mov
fimuls
mov
sbb
lock
sbb
jo
and
pop
sub
cmp
pushf
mov
add
mov
push
adc
xor
xor
ljmp
jp
insl
dec
icebp
adc
std
icebp
scas
mov
stos
lret
sarl
pop
leave
and
jl
out
lods
sbb
loopne
rcrb
les
mov
and
lock
push
cmp
jb
repnz
sbb
cld
dec
das
nop
sub
mov
outsl
add
loop
mov
out
xor
repnz
inc
and
leave
lret
addl
rcrl
in
push
pop
cmp
data16
jge
loop
push
pusha
lds
idivl
mov
shlb
push
cli
xor
jo
adcb
aam
jmp
and
lret
sub
xchg
xor
clc
sub
push
xor
or
xlat
xchg
xor
and
rol
repz
imul
fists
add
lds
or
adc
add
pop
pop
pop
seta
cwtd
xor
ss
js
fidivrl
push
push
daa
sbb
ret
add
out
je
inc
pop
mov
movsl
stos
lahf
daa
hlt
sbb
jo
sub
pushf
insb
ja
push
insl
pop
push
icebp
push
dec
out
or
nop
pop
lock
mov
movsb
imul
push
jge
jmp
jle
push
ljmp
jno
push
sbbb
sar
push
mov
mov
pop
xchg
mov
out
mov
jbe
xchg
dec
push
test
std
xchg
jnp
pop
insl
jp
sbb
mulb
or
sbb
xchg
shrl
ret
mov
cld
rcr
jp
xchg
pop
lods
test
addr16
cmp
sub
mov
inc
out
cmp
and
xor
dec
adc
fcomi
xorb
insl
arpl
pop
push
or
adc
fbstp
cmp
inc
out
std
xchg
and
sbb
jl
aam
adc
add
out
sbb
pop
pop
nop
add
cmc
sbbl
scas
xchg
sub
jno
ljmp
popf
cmpsl
cmp
pop
jns
mov
or
cld
xchg
cs
popa
jbe
push
repnz
and
cmp
adc
movsb
repnz
add
push
ja
dec
fs
in
sub
mov
jmp
push
jg
jp
inc
inc
cmp
fnstenv
dec
test
dec
movsb
mov
mov
and
dec
cld
cmp
dec
outsb
loopne
jl
in
das
sahf
mov
sub
cmp
mov
fld
or
xchg
outsb
adc
mov
and
or
push
adc
mov
dec
loope
pop
cmpsl
cmc
add
shrl
lds
adc
dec
out
adc
xor
scas
inc
imul
push
data16
add
inc
fwait
in
test
rcll
or
add
test
jne
cmpsb
adc
aad
push
lods
stos
cmc
and
cmpsl
xchg
dec
stos
loope
outsb
shll
xor
push
cmp
iret
sbb
in
pusha
cmp
mov
sahf
pop
sbb
sub
mov
out
add
sti
icebp
mov
scas
mov
sti
cmp
sbb
adc
aad
dec
imul
mov
jmp
sub
pop
adc
inc
lods
cs
in
mov
ret
fsubrl
sub
fs
jbe
pop
mov
imul
imul
test
shll
daa
stc
pop
scas
mov
mov
mov
stos
sbb
push
mov
icebp
mov
jae
mov
jae
sub
push
call
xchg
mov
insb
add
pop
pop
imul
push
loopne
pop
push
jbe
inc
test
arpl
lahf
pop
adc
mov
sub
lds
pop
push
jne
and
movsb
out
fistpll
xchg
iret
int3
adc
mov
mov
or
cmp
inc
ret
mov
sahf
mov
imul
or
test
adcl
fnsave
push
xchg
ss
cli
inc
add
lret
xchg
sub
std
out
add
loop
fisubrs
incl
lahf
ss
pop
adc
inc
addl
mov
lods
sub
data16
lods
inc
jecxz
push
mov
push
repnz
fcomi
mov
test
jo
mov
pop
xchg
mov
sbb
negl
out
dec
xchg
push
leave
das
push
ss
mov
faddp
inc
in
jbe
cmp
push
xor
pop
cmp
jns
rcrb
nop
and
test
aad
lds
mov
arpl
rcl
out
insl
scas
xlat
xchg
mov
adc
mov
inc
daa
jmp
pop
sbb
or
pop
mov
sbb
in
xor
add
std
jo
push
pop
pushf
std
mov
mov
in
lods
xlat
aad
ljmp
xor
push
mov
push
push
or
or
insb
test
ja
test
mov
js
xchg
lahf
add
in
or
in
repz
notb
jp
inc
lods
mov
mov
fmull
mov
mov
cmp
jbe
sbb
pop
adc
sbb
ficomps
vpsubw
in
dec
mov
in
mov
dec
add
cmp
inc
push
lea
stc
bound
lock
or
cmpsl
shll
es
and
insb
dec
mov
lcall
in
js
mov
push
or
addr16
mov
iret
push
push
mov
cmp
lods
subl
lcall
mov
sub
cmp
pop
push
jae
fsubrl
mov
xchg
js
mov
call
sbb
xchg
imul
out
ds
in
add
xor
pop
popw
sub
mov
xchg
mov
aam
push
push
cmp
shl
sub
fstpl
jmp
test
jecxz
xor
mov
imul
jnp
xchg
stc
mov
dec
mov
iret
add
xchg
xlat
cld
rcl
push
insl
sbb
xor
shrl
insb
dec
adc
repz
jns
sbb
ffree
aaa
fimull
mov
fdivrs
dec
aad
into
pop
pop
xchg
push
ret
sti
out
xor
in
in
mov
sub
outsl
pusha
into
adc
mov
jmp
jo
icebp
push
cmp
fimuls
rorb
jne
push
lahf
mov
fsubl
inc
sub
test
xchg
stos
mov
in
inc
shl
adc
mov
and
arpl
and
xor
jbe
dec
das
fidivrs
out
sbb
push
adc
jp
mov
push
inc
dec
jo
and
push
dec
out
andl
hlt
jl
mov
mov
ret
or
sarl
inc
mov
xor
and
cmpl
aam
daa
mov
les
std
sbb
dec
std
cltd
aaa
out
scas
mov
xchg
mov
fadds
or
jl
adc
lahf
mov
in
mov
pop
mov
sub
adc
bound
jp
lahf
push
mov
outsl
scas
addr16
pop
jns
sub
nop
add
sub
jae
adc
and
test
sbb
cmp
ss
sbb
sti
push
adc
lea
push
inc
mov
shll
sub
addr16
lock
lcall
lret
cmp
popa
cmp
push
iret
cmpsb
xchg
inc
pop
data16
and
out
sbb
lds
jp
dec
mov
cmpsb
mov
cmpsb
cld
xor
aam
xchg
mov
in
mov
es
fildll
mov
lods
test
push
jle
ret
fistps
int
test
rorl
mov
fisttpl
movsl
and
xor
scas
dec
add
test
repnz
orb
xchg
mov
push
testb
jge
popf
mov
movsb
jp
int
fwait
test
pop
repnz
loopne
in
callw
fwait
pusha
sub
xchg
fmull
jne
aam
outsb
rorl
add
xor
lock
outsb
mov
inc
fcmovu
int3
es
inc
jo
cli
loop
fisubrl
loop
push
sbb
fadd
aad
loopne
test
dec
dec
cmp
lea
gs
jecxz
lods
inc
mov
je
dec
out
mov
lds
imul
pop
mov
inc
popa
push
and
cmpsb
inc
subb
mov
fcomps
sti
cwtl
pop
in
inc
test
loope
lock
or
add
fbld
and
ja
test
mov
inc
int3
mov
xor
out
mov
adc
ljmp
stos
and
fwait
cmp
ficompl
mov
adc
fisttpl
decl
pushf
imul
pop
fimull
jge
sti
scas
inc
push
lret
adc
rclb
xchg
pop
inc
cmc
mov
lcall
repz
push
sub
push
pop
popf
stc
rclb
jmp
inc
mov
xor
pusha
push
lea
inc
in
scas
aaa
or
aam
inc
aad
mov
shll
into
and
lods
test
dec
fs
push
clc
shll
repnz
and
inc
sub
adc
jl
sbb
sbb
mov
pusha
and
adc
cmp
in
jle
call
in
push
mov
add
mov
enter
outsl
testl
jp
adc
bound
lahf
loope
push
mov
jne
js
lahf
inc
inc
aad
in
xchg
mov
jecxz
dec
jns
cmp
cmp
jb
xor
sbb
int
imul
shlb
or
loop
push
pushl
aas
dec
out
xor
ljmp
jecxz
jp
sub
scas
pop
dec
js
cld
pop
movsb
test
push
fldl2t
mov
dec
inc
daa
sti
ja
mov
jl
es
lock
xchg
push
push
inc
out
xchg
dec
or
repz
push
cs
rol
ret
mov
adc
cmp
mov
pop
jmp
pop
jns
sub
imul
dec
subb
stos
scas
sub
test
fs
xchg
cld
inc
and
jne
mov
adc
loop
sub
dec
jno
xchg
in
aaa
push
and
pusha
xchg
in
adc
push
call
movsb
pop
jnp
mov
cld
inc
jg
notb
lock
sbb
sub
out
fwait
test
fcoml
test
push
jno
push
sub
dec
scas
cmp
xchg
or
enter
sbb
inc
add
mov
out
jae
sub
imul
jo
inc
mov
movsl
test
fabs
mov
mov
jns
dec
imul
mov
stc
xor
lret
rcr
push
stos
xchg
sbb
sbb
jbe
fwait
xor
loope
and
shl
mov
xor
or
or
sub
shl
add
and
dec
cmp
xchg
xchg
xchg
cmpsl
mov
aam
pop
pushf
xchg
insl
inc
ds
sti
test
xchg
push
sbb
xchg
movsl
vpslld
xor
popf
hlt
add
dec
hlt
mov
subb
jnp
cltd
shlb
inc
sarb
add
lods
add
sahf
call
bound
pop
jmp
sbb
pop
mov
out
xor
cmp
into
and
loopne
push
xchg
jbe
test
int
ljmp
cmp
das
and
clc
inc
mov
push
mov
mov
inc
push
inc
repz
and
add
ljmp
push
repnz
dec
rolb
lcall
fldlg2
icebp
pop
mov
push
testl
cmp
je
mov
vpsllw
dec
out
jbe
inc
cmpsb
aaa
es
inc
xor
bound
data16
in
movsl
inc
cmp
into
mov
sbb
rcrl
jle
orl
xor
jmp
cmp
cmp
lods
pop
aam
jbe
inc
jb
fdivrs
loop
cmp
or
push
orb
mov
lds
mov
sar
and
aam
xchg
sbb
js
js
iret
mov
mov
push
sub
xor
in
ljmp
sub
cld
xorl
sbb
push
fimull
dec
push
jbe
inc
call
dec
dec
cmpsl
pop
pop
rclb
cmp
jae
adc
inc
es
jae
push
ljmp
jno
sbb
xchg
sub
sub
xchg
xchg
lret
xlat
pushf
sbb
dec
dec
inc
push
int
pop
je
mov
test
add
out
in
inc
iret
gs
enter
adc
push
aad
fisttpl
ficoms
push
xor
aaa
lea
loopne
lret
push
mov
push
stos
pop
sbb
pop
dec
xchg
push
aaa
into
imul
popa
outsl
repz
fadd
adc
jle
pop
ja
stc
jp
stos
pop
scas
outsl
fldl
nop
cltd
ret
out
xchg
dec
loope
test
or
sub
mov
test
jl
push
and
cmc
dec
push
rorl
adc
dec
in
mov
jnp
movsl
mov
popf
inc
push
xchg
leave
in
aas
clc
or
or
sbb
and
xchg
sub
xchg
xor
xchg
leave
jp
mov
stos
and
push
jmp
jg
cltd
cmpb
popf
lds
mov
test
pop
idivl
decb
xor
arpl
ret
notb
jge
lods
cmp
mov
stc
jecxz
push
scas
ljmp
dec
xor
dec
mov
dec
xor
lods
es
mov
scas
push
mov
xlat
jmp
dec
jmp
push
das
ret
adc
jge
pushf
cmpsl
insl
xchg
push
les
shrl
cmpsl
sbb
cmp
mov
push
std
and
and
add
dec
ss
jmp
std
call
or
add
adc
jp
mov
inc
jno
shrl
jbe
inc
hlt
xchg
add
lods
sbb
xor
lret
push
xorb
jno
push
mov
iret
jl
out
mov
jns
mov
rorl
ret
dec
loopne
mov
aam
cmp
jbe
xchg
cmpsb
mov
fsts
loop
push
jge
pushf
imul
ds
and
repz
inc
or
test
xchg
loop
sbb
scas
mov
std
in
add
lock
popa
mov
jne
pop
mov
adc
dec
lods
cmp
lock
pop
xchg
inc
mov
xlat
adc
push
cmp
loop
test
mov
rcr
aas
ljmp
and
lea
lods
test
cmp
popf
push
sbb
push
dec
das
and
jno
fnstenv
jbe
shl
jb
jne
sub
ret
test
sbb
call
xor
cmpsl
mov
inc
rorb
icebp
gs
jo
xor
and
mov
in
mov
sbb
xchg
sub
mov
fucomip
cs
add
addr16
jmp
jle
loop
xchg
mov
sbb
outsl
lea
mov
jmp
cwtl
mov
add
xor
sub
sti
and
push
sub
call
out
adc
mov
popf
ret
repz
and
sub
xchg
lock
or
push
push
dec
stos
es
sub
mov
shrl
and
fs
xchg
int
aaa
dec
addr16
adc
sbb
pushf
push
out
mov
xor
outsb
ret
xchg
sub
cmc
xchg
adc
adc
mov
xchg
ss
sbb
pop
mov
dec
xlat
mov
pushf
lret
pop
cmp
mov
loope
clc
adc
mov
dec
xchg
adc
lds
ja
xchg
pop
icebp
add
mov
das
into
mov
repnz
mov
cmp
fadds
fs
lds
jb
pusha
ss
ja
sbb
shlb
int3
mov
inc
dec
pushf
ljmp
lods
cld
outsl
sbb
andl
pop
ljmp
push
cwtl
icebp
icebp
outsl
ret
inc
sbb
insl
loopne
add
incb
dec
out
sbb
cmpsl
lahf
push
or
outsl
int
push
cmc
gs
and
cmp
xchg
mov
or
jmp
sarl
push
filds
xlat
mov
rcrl
add
lods
rcrb
dec
in
dec
push
lret
hlt
jmp
mov
pushf
mov
clc
jae
shrb
pop
jge
popa
rcll
into
nop
loopne
mov
repnz
out
adc
xor
fdivl
xor
add
xchg
mov
mov
add
inc
aam
pop
pop
cmp
dec
push
cmp
push
add
dec
xor
cmpl
add
xor
jp
lock
outsb
xor
in
std
mov
mov
inc
mov
iret
cli
and
add
out
stos
mov
adc
jae
dec
movsb
push
xchg
inc
or
pushf
and
inc
or
jg
sub
adc
sbb
sub
imulb
fucomi
or
xchg
mov
mov
sbb
or
call
out
scas
mov
push
mulb
sub
mov
insl
stc
je
add
adc
lret
and
dec
inc
int
mov
test
enter
clc
scas
dec
dec
or
rorb
jns
and
leave
sub
jp
je
jb
fwait
jecxz
mov
mov
ret
jae
fsubrl
jl
test
cmpsb
jbe
mov
fbstp
fstps
aam
fdivrp
xchg
adc
pop
cmp
cwtl
jge
negb
or
fwait
pop
outsb
fisubrs
adc
je
testl
sbb
test
pop
in
imul
cmc
imul
jecxz
sub
stos
nop
rorb
inc
lret
cmpsl
insb
fistps
insb
xor
xchg
ja
lahf
mulb
adc
cmp
sbb
das
imul
fbstp
adc
iret
adc
aaa
xor
cmp
call
and
lret
jne
and
push
sub
mov
loopne
mov
jbe
insl
outsl
rorl
nop
inc
es
popa
sbb
movl
jne
dec
adcl
shlb
jp
xchg
and
cmpsl
or
pushw
push
lcall
jp
push
repz
fdivrl
mov
lods
add
push
sbbb
popf
loope
or
adc
xlat
or
movsl
sub
pop
out
mov
jne
loopne
push
xchg
or
add
ret
push
in
pop
dec
xchg
mov
rcr
test
adc
cmp
mov
loope
lea
mov
in
mov
frstor
and
or
lea
rorb
fcoms
cmp
and
mov
clc
push
push
test
sarb
xor
out
int3
lods
or
pop
in
jne
aaa
imul
mov
mov
lock
adc
in
mov
sbb
outsb
adc
mov
fwait
jno
sahf
mov
jge
jns
inc
xchg
sub
fcomps
ror
add
push
adc
nop
imul
nop
jae
in
xchg
xchg
leave
pop
xor
into
enter
std
sbb
mov
pop
loop
daa
lock
cmp
hlt
out
addr16
hlt
adc
out
mov
mov
push
mov
cmp
movsl
xor
into
cmp
nop
jp
push
mov
pushf
push
sbb
mov
lcall
jnp
jno
in
stos
ljmp
imul
push
stos
xchg
cwtl
mov
fisubl
ljmp
rclb
ss
scas
movsl
pop
cli
stos
cld
hlt
mov
pop
and
cmovo
dec
mov
mov
or
sbb
mov
jno
loope,pt
stos
jecxz
test
mov
loop
testb
mov
out
pop
mov
push
pushf
dec
cmp
movsl
sub
jae
stc
sarb
push
mov
push
push
repz
push
xor
fwait
int3
outsl
sbb
repz
je
inc
pushf
add
dec
mov
and
push
add
cmp
inc
mov
ja
ljmp
jno
je
jp
or
inc
xor
movsl
loope
mov
dec
inc
cld
mov
mov
cmp
sahf
push
lods
mov
mov
push
sub
outsb
loop
cmp
dec
dec
pop
mov
mov
stos
sbbl
jg
lcall
dec
xlat
fiadds
fstpt
xchg
bound
lahf
hlt
mov
xchg
jecxz
shrb
add
pop
addr16
xchg
dec
pop
imul
popl
fldl
out
out
sbb
xchg
cs
cmp
pop
xorb
xor
or
call
rcrb
mov
fldcw
lock
sbb
xlat
mov
mov
dec
imul
outsb
jmp
cmpsb
mov
xchg
lea
repz
pop
mov
pop
jns
iret
cmpb
push
cmpps
outsl
sub
pop
ss
pusha
rorb
ror
repnz
mov
pop
mov
xchg
mov
out
sbb
scas
pop
inc
divb
inc
or
mov
mov
and
sub
call
mov
push
xor
pop
pop
dec
lret
rcll
push
mov
stos
loop
dec
aaa
lcall
pusha
jl
frstor
push
and
mov
inc
jl
cltd
or
pop
jne
loopne
or
inc
int
pop
and
cmp
push
lods
ret
push
stc
xchg
adc
sbb
jbe
stos
and
leave
mov
mov
adc
loopne
into
adc
mov
vcvtpd2dqy
inc
aaa
push
hlt
adc
ss
fwait
and
outsb
or
imul
test
adcl
mov
sub
in
add
insl
dec
mov
xor
xor
inc
sub
inc
leave
movsb
sti
jge
sbb
pop
outsl
adc
adc
adc
ds
push
adc
and
call
sub
jle
inc
imul
inc
fbstp
inc
xchg
pop
jle
mov
js
in
inc
cltd
sahf
clc
xchg
ret
xchg
sbb
in
dec
fsubl
enter
push
sbb
or
pop
pop
cltd
scas
sub
sub
pop
rclb
mov
enter
push
mov
ret
pop
adc
push
and
xchg
stos
cli
add
xor
sbb
insb
filds
and
mov
jmp
jmp
je
or
call
or
inc
mov
or
shr
lods
fwait
enter
cld
repz
imul
mov
popa
jecxz
iret
test
mov
add
mov
popf
xor
and
sti
xlat
sub
jns
add
xchg
sub
fs
pop
xchg
dec
sbb
jb
js
cltd
mov
mov
mov
xor
mov
pop
mov
hlt
mov
insl
jge
fnstsw
pop
sbb
sbb
jb
jp
ficompl
xchg
xor
lcall
mov
mov
lret
xor
dec
xchg
mov
sbb
mov
mov
mov
xorl
pop
sbbl
ljmp
call
or
lods
sub
xor
sbb
fists
je
add
lahf
pushf
in
jp
xor
mov
aam
int3
add
xor
into
popa
ljmp
movntq
in
lods
add
fs
repnz
push
xlat
addl
adc
pop
fnstcw
movsl
mov
add
fstpl
jns
and
xchg
cs
jae
rclb
xchg
ja
lahf
lahf
xor
in
jp
cmc
rol
cmp
xchg
mov
or
jo
pop
rorb
outsl
testb
sbbl
and
add
mov
sub
xorl
add
xor
sub
loope
faddl
jg
dec
nop
repnz
xchg
dec
cmpsb
int
pop
inc
sti
icebp
movsl
xor
mov
cmpsb
xchg
adc
push
adc
add
cld
sarl
rolb
jo
push
and
mov
in
roll
mov
fstpl
jns
mov
popa
or
loope
mov
aam
mov
loopne
inc
push
popa
lret
in
adc
xor
xchg
scas
aaa
mov
rorl
mov
mov
aaa
or
cwtl
pop
adc
pop
rcl
out
mov
sbbl
fs
test
out
mov
repz
push
inc
add
je
mov
sbb
mov
lds
outsl
cs
dec
aas
lods
lds
pushfw
out
push
repz
pushf
xor
sbb
mov
mov
fnstenv
xor
mov
enter
or
push
xchg
test
push
jp
dec
or
jp
in
fmull
sahf
rorb
hlt
or
dec
lret
dec
dec
pop
jp
adc
mov
cwtl
push
inc
outsl
adc
lret
mov
jl
dec
fiadds
out
add
lcall
int3
xchg
dec
xlat
outsl
mov
bound
flds
shll
mov
sahf
scas
jns
inc
pop
cmc
stc
xchg
xchg
jecxz
and
mov
test
repnz
mov
aam
jae
stc
sbb
cmp
or
sub
pop
gs
jnp
pop
in
rcll
push
add
mov
negl
lcall
lcall
in
xchg
pop
adc
fst
cmp
mov
sbb
adc
aam
jb
pop
cmp
inc
fnstcw
sub
adc
idivl
imul
adc
mov
fs
mov
adc
xor
and
pop
cmpsl
ds
ds
cmc
addr16
xchg
lods
test
bound
adc
sub
push
mov
push
mov
push
movsl
xchg
cmpsb
cmpsl
xor
push
imul
mov
arpl
into
jmp
pop
shrb
or
mov
xor
addl
sub
jecxz
adc
cmpl
pop
icebp
xchg
push
add
jnp
pop
mov
dec
outsl
daa
mov
cmp
inc
sub
icebp
and
call
data16
mov
orl
lods
test
push
je
cmp
js
test
or
fsts
adc
push
test
dec
push
in
jne
adc
xchg
fmuls
rcl
je
dec
das
sub
ret
sbb
or
adc
inc
imul
adc
sbb
ret
movsl
mov
repz
fcmovnu
sub
xchg
sub
loop
fstps
inc
lret
mov
ds
es
js
into
mov
mov
clc
lret
xchg
jne
sbb
lret
jg
fsubr
aam
inc
xor
pop
rclb
stos
pop
fcmovu
inc
jo
pop
xchg
mov
sbb
in
outsb
daa
std
or
insb
pop
idiv
mov
or
pushf
cmp
push
pop
and
pushf
xchg
inc
fadd
mov
mov
in
xor
dec
iret
es
movsb
loopne
cmp
sbb
jnp
adc
mov
hlt
lds
add
mov
sub
hlt
mov
mov
in
movsb
mov
xor
sbb
rorb
cmp
rcrb
out
fisttps
sub
fs
mov
sbb
or
jae
fadd
test
sub
popa
adc
dec
inc
pop
pusha
mov
stos
pop
adc
int3
xchg
dec
stos
scas
xor
popf
stc
int3
xor
aad
daa
mov
arpl
pop
xor
cltd
arpl
shlb
stc
popf
mov
xchg
dec
int3
mov
lock
aad
xor
pop
mul
cmp
jbe
mov
aas
and
out
push
xchg
xor
jb
lea
in
adc
addr16
fcmovnb
push
cwtl
cmp
daa
mov
scas
mov
insb
push
mov
cs
pop
dec
mov
mov
shlb
mov
movsb
mov
fldenv
mov
lea
lock
lock
sub
sahf
xor
push
xchg
mov
mov
sbb
incb
pop
popf
adc
and
popf
mov
int3
mov
or
jp
xor
jo
sbb
dec
test
rcrb
enter
shl
dec
pop
mov
mov
and
xchg
xor
ds
adc
mov
mov
in
dec
loopne
mov
sbb
inc
fidivrl
adc
mov
push
jo
pushf
out
rcrl
stos
outsb
add
inc
jns
in
stos
push
in
lock
outsl
jge
pop
cmp
testl
pop
std
stos
inc
das
jg
adc
out
scas
fwait
xor
insb
fs
mov
xchg
addb
in
jno
inc
fisubl
gs
sub
cld
mov
sub
nop
or
xchg
cmp
mov
xor
add
jbe
test
adc
xor
xchg
pop
pop
cmp
inc
insb
sub
movsb
cmpsl
nop
cld
xchg
xor
test
cmc
jecxz
inc
lcall
push
mov
fyl2xp1
je
test
mov
scas
mov
cmp
loope
pop
sbb
scas
and
cld
mov
fiadds
sti
adc
or
mov
imul
mov
imul
lret
mov
xchg
and
adc
pusha
ss
inc
shlb
jmp
adc
jne
movsb
movsl
into
mov
adc
xor
fildl
outsl
push
pusha
pop
enter
mov
fistl
or
dec
jns
out
or
cmpsb
fadd
cmpsl
mov
sbbl
jl
mov
cmp
into
xchg
adc
jg
jle
insb
scas
and
cmc
cli
cmp
adcl
lcall
sbb
hlt
inc
aas
dec
fcoms
aaa
into
mov
jecxz
lcall
in
pop
mov
daa
xor
pop
lods
cmp
popf
push
stos
mov
imul
push
imul
es
xchg
popa
nop
movsb
cmp
andl
jmp
fdiv
mov
pop
add
movsl
dec
and
decb
or
and
jge
xchg
hlt
aas
hlt
in
and
imull
roll
cltd
add
mov
add
sbb
enter
fs
mov
fisttps
lahf
mov
inc
fildll
cmp
fldl
fistps
mov
bound
cli
jo
dec
mov
pop
cmp
mov
pusha
adcl
inc
in
dec
test
pop
xchg
les
and
hlt
sar
mov
or
push
or
fdivs
or
mov
shll
inc
fldpi
fsubp
dec
xchg
ficomps
mov
jl
roll
fcoms
jge
inc
mov
inc
push
stc
push
adc
nop
push
dec
xlat
imul
leave
fs
xchg
fscale
cltd
out
insl
loopne
cmp
inc
push
in
jge
or
bound
lods
stc
push
aad
jmp
xchg
das
les
xchg
icebp
mov
lahf
mov
outsb
push
adc
cmpsl
divl
mov
push
mov
ret
test
lret
stc
nop
std
sbb
inc
and
repnz
out
scas
lret
mov
jno
in
xchg
add
notb
outsb
or
add
cmp
jae
fisttpl
jne
add
enter
loop
pushf
test
inc
nop
xor
sbb
xchg
sbb
pop
xor
sbb
pop
pop
shll
jno
mov
loop
pop
add
mov
mov
add
add
popf
cmp
dec
adc
inc
fildll
outsl
jbe
sahf
lea
lods
mov
push
adc
filds
adc
pop
dec
mov
fistps
or
cwtl
mov
data16
outsb
push
in
lahf
loop
out
dec
cltd
std
jge
outsb
push
jbe
rcrb
cltd
pop
shll
or
push
inc
sbb
clc
or
insb
push
jno
in
fcomps
mov
dec
pop
or
lea
jb
sub
aad
fidivs
notb
pop
mov
clc
mov
outsl
call
cld
imulb
push
xchg
jge
add
clc
jae
stos
sahf
push
sbb
test
imul
addb
pop
rclb
xchg
cltd
sar
mov
scas
xor
nop
rcl
stc
pusha
fcomps
mov
pop
fs
mov
push
into
push
push
push
jae
add
lret
scas
movsb
in
xor
daa
mov
sbb
inc
in
fwait
ss
sbb
mov
je
mov
stc
xchg
mov
cmp
mov
aaa
mov
mov
mov
jae
imul
ja
arpl
cmp
or
sbb
je
adc
lcall
push
sub
mov
inc
inc
daa
sti
dec
dec
ss
adc
push
aam
pop
push
sub
popf
inc
outsl
xor
xchg
inc
repz
insl
and
mov
lods
out
das
lds
in
or
sub
pop
jecxz
cmp
sub
jns
adcl
xchg
stos
hlt
push
sbb
mov
or
addr16
mov
fldenv
mov
fistl
les
lahf
cmp
stc
rcl
repz
shl
mov
cmc
add
pop
std
pop
and
shld
inc
lods
pop
inc
notb
lret
adc
mov
es
push
lcall
fdivrs
arpl
jne
and
cmpsb
std
xorb
mov
ljmp
cmc
jmp
cmpsl
adc
shrl
scas
xchg
pop
dec
out
std
in
negb
lods
sar
rclb
imul
add
jne
or
sub
stos
cld
filds
cli
subb
sub
aas
rcr
repz
push
jl
lds
mov
dec
sub
pop
outsb
push
push
xlat
clc
adc
cmp
dec
gs
sbb
adc
inc
fdivs
rcrl
add
xor
fs
push
pop
jg
mov
pop
sbb
fisttps
jbe
lret
pop
lcall
and
nop
dec
stos
inc
and
je
sahf
or
adc
mov
outsb
aas
jmp
push
in
dec
iret
or
jbe
je
mov
into
xchg
add
nop
stc
adc
pop
cmp
outsb
out
mov
rolb
mov
enter
pop
ror
repz
sub
jmp
subb
insl
mov
or
jns
test
lods
push
scas
or
adc
add
jmp
enter
xor
or
cmpsl
out
fstps
jb
push
mov
pop
cmp
xor
ja
das
mov
fisubrl
adc
outsb
push
sahf
insb
sub
lds
xchg
lock
stos
jmp
adc
sti
inc
mov
mov
ds
lea
fcoms
or
cmp
fbld
xor
mov
into
lods
push
js
out
lods
mov
cmc
les
aas
sbb
mov
out
add
cld
test
jge
adc
out
loopne
lret
lret
ljmp
and
stos
and
dec
out
push
sti
movsl
inc
mov
and
fsub
sub
fldt
jns
rcrb
movsb
pusha
negl
js
inc
sub
dec
push
push
jns
outsl
dec
xchg
ret
pop
xchg
mov
loope
sub
pop
xchg
push
movsb
icebp
cmpsl
in
mov
clc
clc
notb
je
push
lods
pop
xchg
fxch
mov
adcl
jg
mov
pop
push
js
ja
mov
fistpl
pusha
mov
lret
bound
mov
sub
inc
jb
dec
pop
loope
xor
dec
add
sbb
addr16
sub
cmpsb
dec
mov
cltd
repz
xchg
rcrb
loop
lock
jle
fbstp
add
add
push
lock
mov
cld
outsl
jmp
sbb
js
push
aaa
into
stc
sub
rcrl
push
leave
and
jg
sub
les
lahf
cmp
mov
pop
sub
fidivl
sub
into
lret
jb
mov
pop
lret
push
xor
mov
mov
push
ficoml
loope
pop
addr16
add
fnstsw
cmpl
sub
push
xlat
cwtl
insl
add
cmp
xchg
jne
call
cmc
repnz
add
cmpsl
fistpl
jp
cmpsl
mov
mov
mov
outsl
daa
cs
cmp
mov
pop
ds
aas
push
jae
rorl
out
mov
mov
or
pop
cmp
xchg
scas
push
sahf
call
loop
adc
sub
mov
int
cmc
sbbb
repnz
adc
das
add
push
int
ret
shll
lea
in
out
mov
push
movsl
lret
jbe
cmpb
cmp
pusha
and
jae
orl
mov
test
test
es
orl
fistl
push
stc
pop
insl
sub
push
xor
loope
sbb
addr16
cmpsb
outsb
repnz
xlat
call
sub
cmp
stc
inc
or
addl
dec
stos
test
cs
js
in
gs
testl
xchg
xor
ja
mov
lahf
pushl
mov
dec
fcompl
adc
testb
jle
xchg
mov
lahf
imul
mov
or
fwait
mov
lret
test
repz
repnz
xor
pop
daa
insl
cwtl
lods
sahf
mov
inc
mov
int3
jo
cmp
test
lahf
scas
jbe
mov
jbe
into
pushf
aad
adc
iret
and
xchg
or
cli
mov
inc
push
pop
pop
lock
out
rcl
mov
fidivs
sbb
data16
push
jne
data16
mov
push
fidivrl
adc
xor
push
push
movsw
cmp
repnz
in
fidivs
and
xor
test
sahf
lods
inc
adc
inc
sbb
iret
mov
rorb
jbe
int
call
jne
into
gs
mov
mov
loope
add
push
cltd
push
and
inc
mov
and
mov
lret
bound
cmp
lock
sbbb
mov
lret
lods
inc
in
adc
inc
pop
jo
dec
rorl
shlb
les
lds
fwait
lds
pop
sahf
daa
std
mov
out
adc
les
xchg
shrl
mov
ss
in
dec
xor
call
inc
insl
ljmp
and
ss
pop
mov
jmp
dec
fnsave
stc
mov
fwait
or
out
sub
mov
xor
inc
mov
xchg
jo
mov
arpl
rol
jne
or
lcall
push
mov
lahf
fcoms
mov
cmp
icebp
and
pop
inc
adc
cmp
aas
cmpsb
shll
mov
ficoms
mov
jns
or
stos
fs
rcrl
int
adcl
repnz
adc
cmp
xor
ret
xchg
jno
pop
push
jp
inc
or
outsb
shll
lret
rcrl
sti
xchg
call
and
lds
mov
mov
ds
sub
jl
out
insl
mov
xchg
and
neg
outsl
jmp
cmp
lcall
dec
jecxz
or
jnp
mov
mov
es
ret
jmp
lock
sti
inc
pop
mov
xor
lret
imul
push
out
cli
test
sbb
lea
xchg
sub
jne
and
cmpl
inc
pminsw
sub
inc
mov
xor
out
adc
xchg
push
push
mov
adc
cmpsb
jno
in
dec
cmp
cmpb
lret
dec
in
fcoms
sahf
dec
sub
in
xor
ror
arpl
rcrb
ljmp
outsb
scas
and
clc
xor
xchg
dec
test
inc
mov
out
xchg
pop
fsubs
cmc
xor
mov
lret
repnz
or
cmp
cmpsb
mov
sbb
mov
sub
scas
popa
pop
leave
xor
push
inc
fs
xchg
push
mov
das
add
clc
aas
add
and
push
cmp
pop
shrl
icebp
cmp
ljmp
xlat
icebp
aas
mov
jg
xchg
mov
fnstenv
or
and
cmp
bound
sbb
sahf
inc
push
mov
xor
mov
pop
jae
xor
int3
arpl
or
scas
pusha
loope
ficoms
xorb
ret
mov
iret
or
fnstsw
push
outsl
push
enter
andb
out
imul
xchg
xor
and
rorb
addl
push
je
or
xor
cmp
ds
push
ja
daa
stos
pushf
pop
stos
rcrl
ja
outsl
ljmp
int3
mov
jo
dec
push
into
faddl
xlat
ljmp
push
or
mov
fwait
xor
xor
loopne
adc
dec
sub
adc
fisttps
cmp
sbb
xchg
rcr
pop
int
dec
std
xchg
xor
out
ficompl
mov
repz
iret
sub
les
mov
les
mov
or
mov
mov
add
xchg
jns
pop
stos
pusha
or
xor
inc
fcmovnbe
leave
popf
repz
bound
inc
mov
dec
push
lret
jae
insb
add
sbb
sbbl
pop
fnstsw
sahf
in
sbb
les
pop
scas
or
dec
mov
test
mov
fdivrl
pop
sahf
ljmp
cmp
leave
add
pop
ss
jecxz
loop
xchg
aaa
int
ja
mov
xor
xchg
out
mov
sub
repnz
mov
pop
mov
sub
popf
jecxz
subb
mov
loope,pt
sbb
dec
js
mov
popf
pop
and
insb
mov
cmp
enter
push
aaa
movsl
sahf
mov
test
cli
mov
mov
and
sbb
mov
insb
fistpll
pop
inc
iret
mov
les
adc
addl
lock
gs
push
mov
cltd
mov
bound
cld
add
sahf
jno
inc
les
push
out
push
hlt
repz
and
and
mov
ret
jmp
shlb
outsl
inc
fcom
push
insl
nop
pop
mov
daa
shl
not
sub
gs
daa
outsl
scas
mov
push
rclb
and
jnp
lahf
pusha
sub
push
pop
ss
xchg
fdivs
push
test
sbb
popa
push
stos
inc
cmp
ljmp
call
fbstp
stos
bound
mov
test
jl
xor
inc
or
rcrb
cmp
lcall
xor
mov
pop
push
stc
bound
push
leave
cmp
test
pop
jb
ljmp
stos
inc
addl
xor
enter
sti
stos
hlt
xor
cld
lock
xor
push
cmp
mov
inc
adc
nop
addb
out
repz
sbb
out
lds
xchg
adc
cmpl
sahf
mov
movsl
dec
or
dec
jnp
add
into
leave
pop
stos
rcll
stos
lahf
mov
sub
ds
nop
mov
sarb
rcrb
repz
jmp
and
push
dec
in
adc
test
jb
movsl
xchg
aad
mov
ljmp
add
xor
jp
add
inc
push
or
shll
adc
cwtl
rcl
shlb
mov
pop
repnz
add
adcb
mov
sub
cwtl
adc
orl
add
jge
mov
out
test
sti
jecxz
das
icebp
push
jge
js
decb
das
cmp
mov
js
aaa
ret
call
in
stos
adcb
mov
adc
jns
cmp
fistl
jo
dec
loope
xchg
inc
push
iret
mov
and
daa
lret
nop
imul
mov
mov
jmp
aas
jge
pop
add
test
stc
out
jmp
repnz
cmpsb
mov
fldcw
pop
cli
inc
cmp
daa
pop
loopne
dec
pop
jb
cmp
cmp
and
insl
rolb
mul
hlt
mov
cmp
dec
gs
test
aam
stos
inc
xor
or
fidivs
dec
push
cmp
sub
cmpsl
fnsetpm(287
stos
adc
dec
sub
pusha
imul
in
movsl
adc
hlt
add
add
cmp
movb
xchg
xchg
test
lods
jo
xchg
mov
pop
mov
pop
and
dec
loopne
mov
and
xchg
push
enter
mov
fs
and
xorl
data16
inc
adc
pop
jae
pop
adc
pop
cmp
dec
jecxz
cmp
dec
loopne
imul
fdivrl
push
sahf
scas
jb
pop
pop
ficoml
add
outsl
jns
imul
cmc
stc
nop
arpl
adc
sbb
fistl
jae
outsb
mov
add
imul
add
ficompl
addl
jge
xchg
xor
repz
popf
lods
lock
jo
pop
cli
in
inc
adc
mov
sbb
mov
dec
jae
push
out
test
sti
xrelease
jmp
cmpsb
gs
aam
mov
cmpsl
mov
lea
jo
clc
jne
leave
cmpsb
sbb
inc
jle
lods
out
jmp
arpl
pop
scas
popl
inc
mov
scas
mov
loope
xor
mov
cmp
outsl
sti
pop
cld
xor
inc
fcom
xor
pop
ja
pop
push
or
mov
ljmp
mov
das
int
fs
lret
bound
repz
shrl
mov
nop
pop
xor
nop
daa
into
pop
fidivl
jo
addr16
cmp
stc
nop
xchg
mov
pop
scas
push
out
sub
js
repnz
in
movsl
into
jp
mov
push
subl
jb
out
mov
xchg
rorb
sub
cmc
jp
mov
pop
testb
xchg
adc
daa
mov
sub
dec
jg
pushf
hlt
ja
dec
jmp
test
test
mov
gs
xor
clc
mov
gs
aad
xchg
jmp
push
aad
adc
roll
dec
aaa
dec
add
mov
jmp
aas
scas
test
bound
push
scas
pop
mov
insl
in
dec
lret
cld
rclb
rclb
inc
mov
jge
push
pop
int3
mov
cmp
inc
inc
sarl
sub
dec
dec
lret
ffreep
dec
dec
enter
or
cs
mov
xchg
inc
inc
into
gs
jl
jge
jecxz
hlt
push
es
movsl
test
int
cmp
and
and
and
fwait
lahf
and
movsb
mov
xor
mov
add
mov
shrl
inc
sub
int3
pop
mov
mov
aam
cmp
jl
and
mov
mov
nop
inc
xor
mov
add
and
inc
fnstsw
popf
fstl
pop
cwtl
xchg
mov
push
scas
push
sbb
sub
pop
popf
xchg
inc
icebp
jne
and
jb
scas
mov
mov
pop
and
test
mov
mov
and
loopne
jge
pop
or
ja
das
adc
mov
adc
or
mov
test
xchg
es
popf
aam
xor
mov
out
push
mov
add
push
mov
sbb
push
popa
movsb
dec
xchg
or
and
mov
ficompl
orl
mov
imul
sub
es
fisttpl
movsb
and
pop
std
cltd
sub
dec
xchg
scas
in
les
aad
imul
scas
nop
sti
adc
jp
xor
cmc
int3
cltd
mov
pop
divl
pop
dec
dec
dec
outsb
std
xor
bound
xor
jmp
ret
xor
mov
lds
mov
sub
int3
push
movsl
mov
xchg
cmpsl
cmp
sub
inc
add
add
popa
push
sub
ljmp
das
cmp
pop
leave
loope
jle
pusha
mov
fincstp
stc
nop
jmp
mov
pop
xor
dec
sti
xchg
jle
repz
lahf
ret
mov
xor
pop
mov
pop
lods
mov
arpl
jl
test
data16
out
test
imul
sbb
mov
mov
faddl
mov
add
out
fistl
mov
sub
or
or
cmpl
cmpsb
into
adcl
and
jne
add
cmp
xor
dec
add
out
test
mov
stos
out
add
ror
push
in
xor
mov
adc
xor
fs
sub
cmpsb
mov
loopne
adc
xchg
dec
add
mov
fs
loopne
and
nop
ljmp
inc
push
mov
fxch
fisttpl
sahf
xor
in
xchg
cltd
aas
add
fidivrs
dec
sbb
mov
dec
cli
dec
jnp
cmpsb
xor
nop
mov
bound
mov
pop
test
inc
fdivrs
add
xor
push
test
cmp
into
and
push
outsl
sbb
inc
out
int
mov
mov
push
mov
loop
ss
xchg
testl
inc
mov
xchg
je
pop
fdivrp
mov
testl
fs
jmp
adc
adc
shr
out
mov
in
cmc
mov
sub
int
int
add
cmpsb
in
jge
push
or
xor
fcomps
xor
sub
xchg
mov
sbb
fisttpll
push
int3
jg
fcmovbe
mov
lret
lock
das
shl
les
xchg
mov
dec
dec
mov
mov
and
iret
cmp
into
sub
js
fildl
mov
bound
sbb
frstor
jne
add
inc
out
inc
xor
push
push
inc
jmp
daa
and
pop
scas
ret
pop
adc
dec
in
mov
insb
ret
xor
dec
cmc
jge
mov
mov
adc
les
rorl
hlt
mov
es
sbb
gs
ret
sbb
or
test
js
imull
mov
add
ret
dec
jecxz
outsl
jo
les
movsb
cmp
sbb
in
xor
dec
mov
xchg
cli
ficoms
stos
in
jb
test
fisubrs
sbbb
inc
push
adc
ljmp
addl
or
sbb
xlat
repz
inc
pop
pop
xor
cltd
sbb
xor
in
movsl
popa
mov
sbb
sub
mov
push
mov
xor
scas
ret
inc
cmp
push
movsl
cmp
lahf
adc
cli
lret
adcl
sbb
fbstp
shll
outsl
push
leave
addb
ljmp
mov
dec
push
sbb
shrl
cwtl
cmp
gs
js
dec
scas
xchg
or
xchg
jle
and
loopne
addr16
dec
rcrb
pop
jb
cmp
arpl
dec
lahf
mov
push
cmpsl
sub
fldt
jns
xchg
inc
int
orl
pop
sbb
mov
sbb
push
in
les
cmc
aam
jmp
dec
sub
fstpt
nop
ja
movsl
ja
les
add
push
add
sbb
repnz
xchg
fnstenv
dec
jne
pop
xor
in
fsubrl
pop
xor
js
xchg
loope
ja
mov
push
rcll
das
shrl
adc
icebp
mov
shll
outsb
test
cmc
sub
es
sub
dec
mov
stc
sbb
push
rcr
jne
push
repz
xchg
out
xchg
lret
lcall
lcall
cmpsb
call
shl
jne
mov
push
aam
fistpl
shlb
inc
call
inc
ljmp
test
push
fistpl
aam
dec
nop
daa
jg
add
mov
out
pop
stc
mov
dec
dec
pop
mov
xchg
mov
xchg
inc
es
pop
dec
popa
jge
test
mov
xchg
les
das
push
fstps
dec
pop
xor
fwait
cmpsl
dec
jbe
subb
imul
inc
lods
mov
pusha
addr16
sbb
sbb
jae
mov
push
test
xchg
push
sub
pushf
inc
stos
subb
or
cld
mov
scas
inc
pop
fisubrs
imul
push
or
int3
mov
sti
xlat
adc
push
imul
in
shll
push
push
mov
jbe
jmp
and
dec
and
add
into
add
push
sub
in
mov
or
xor
fs
call
or
imul
sti
mulb
scas
pop
xchg
dec
mov
arpl
inc
psubb
out
push
leave
insb
jbe
mov
popf
or
notl
mov
and
jg
push
ja
mov
jp
jbe
pop
jb
fisubrs
ret
fildl
imul
mov
push
outsb
sbb
sub
pushf
ja
cld
adc
add
push
or
jecxz
mov
jae
dec
pop
xor
lods
test
xchg
mov
mov
aaa
mov
into
and
imul
fdivl
je
push
loope
push
cmp
push
cmp
add
gs
repz
fstps
arpl
pop
adc
pop
repnz
and
subb
mov
loop
jo
xor
fs
push
push
stos
and
ja
lock
push
fprem
fwait
lds
jmp
mov
adc
xchg
int3
fwait
adc
push
imul
aam
out
pop
cld
mov
sub
aas
clc
and
dec
neg
addr16
out
rcrl
arpl
out
jge
scas
scas
sarl
mov
sbb
pop
inc
data16
jg
mov
test
jbe
xchg
pop
and
and
adc
inc
std
stc
sub
or
dec
loopne
nop
adc
gs
push
adc
mov
repnz
arpl
or
add
loopne
ret
outsb
mov
out
lds
cmp
mov
cwtl
add
in
movsl
mov
pop
shll
rorb
mov
ljmp
pop
mov
mov
cmp
mov
dec
xor
pop
icebp
xorl
repnz
ret
loope
xchg
mov
shl
arpl
ret
iret
mov
dec
mov
lahf
push
push
or
scas
xor
push
jbe
sbb
cmp
loopne
xor
ficoms
mov
mov
or
pop
lods
out
adc
sub
inc
aaa
cmp
fs
lds
loop
cli
cltd
dec
adc
outsb
pop
and
fwait
xchg
jmp
out
jbe
cmc
ret
push
or
mov
push
aad
mov
xlat
and
push
add
push
clc
adc
shrb
imul
nop
out
lret
cmp
cmc
xchg
into
xor
ljmp
xchg
pop
lods
mov
je
sub
mov
cmpsb
fnstsw
mov
dec
pusha
daa
mov
xchg
ljmp
xchg
or
dec
fwait
es
xchg
sahf
sub
adc
jle
cwtl
aad
das
fadds
xor
mov
cltd
icebp
shrl
mov
dec
xor
movsb
xchg
mov
mov
in
pushf
cmpsl
push
subb
jno
fiadds
outsb
push
mov
jb
adc
unpckhpd
dec
xor
loopne
inc
add
jnp
mov
xor
push
outsb
pop
mov
aam
mov
sbb
andl
lret
cmp
lock
sbb
decb
imul
mov
dec
scas
or
and
lahf
std
aas
mov
lock
inc
mov
pop
cmp
mov
cs
mov
test
bound
inc
cltd
or
jnp
xor
mov
aam
xchg
arpl
push
loope
xlat
push
decl
shlb
rclb
nop
call
or
push
and
jmp
push
sbb
jno,pn
ss
mov
lea
add
dec
mov
xor
aam
or
adc
out
push
jmp
cli
ds
jle
lods
ret
xor
or
rcrl
insb
mov
dec
imul
les
push
sbb
jns
cmp
cld
pop
jge
stc
jae
aaa
movsl
add
adc
and
pop
aam
fstl
cltd
bound
test
shr
mov
in
mov
push
popf
mov
dec
je
enter
repnz
jnp
imul
loopne
sub
adc
sahf
xor
mov
jle
xchg
pop
fdivp
mov
imul
cmpsl
movsl
cmpsl
sub
enter
or
pop
scas
ljmp
ds
pop
mov
cld
pop
push
xchg
test
ljmp
lret
cld
jb
fwait
xor
push
cltd
test
and
xchg
push
cs
inc
jb
mov
cmp
jo
test
scas
scas
xlat
push
add
jne
xor
dec
jg
outsb
gs
xor
or
test
cmp
lret
pushf
xor
mov
sti
fldcw
fisttpll
pop
mov
cmc
pop
inc
add
outsl
lcall
mov
aaa
test
enter
enter
jne
pop
data16
push
jle
fimull
fwait
scas
fs
movb
inc
jo
lock
push
jno
jl
mov
jns
pop
hlt
jle
mov
loop
or
shr
dec
xchg
out
bound
movzwl
pop
sbb
in
lds
mov
imul
movsl
out
jne
cs
pop
ret
out
jno
push
mov
dec
xor
lock
xchg
sub
adc
add
fnsave
jle
stc
es
test
xchg
mov
andl
daa
jmp
test
push
mov
inc
mov
sti
jg
sub
mov
std
adc
mov
scas
aas
push
aad
mov
scas
push
out
popf
iret
adc
mov
cmc
rolb
shlb
repnz
dec
dec
cwtl
xchg
sbb
aad
sub
sub
lcall
mov
js
adc
lret
jl
lods
sub
jb
sti
push
lock
mov
pop
test
bound
imul
mov
pop
xchg
mov
test
inc
loope
testb
pop
pop
add
std
pushf
jg
out
inc
lret
lods
jns
or
mov
xor
jp
push
movsl
add
js
negb
mov
rcll
push
push
fs
or
xor
mov
xchg
aas
cmp
mov
lock
cmp
ss
dec
daa
jmp
pop
sbb
mov
xchg
sub
cmpsb
loopne
xchg
popa
lcall
or
daa
mov
jo
adc
ja
inc
push
inc
cwtl
loopne
mov
cmpsb
mov
leave
sbb
push
push
mov
fisubrs
cld
cmp
sub
mov
sub
icebp
adc
lods
js
sbb
repnz
sbb
cmp
jo
fbstp
fs
mov
dec
cld
insl
in
out
sub
insl
movb
dec
xchg
je
dec
repnz
push
sub
ret
sub
push
ljmp
jno
adc
hlt
cmp
adc
movsb
dec
cmp
dec
orb
adcb
insl
insb
gs
popf
mov
cpuid
push
popa
xor
xchg
xchg
cld
dec
xorl
jle
or
pop
jnp
mov
and
pop
fistps
cmp
out
aas
and
test
call
and
mov
jne
inc
sti
notb
movsb
stos
push
inc
stc
add
dec
sti
inc
repz
xlat
and
push
fwait
jmp
sbb
lods
jl
fimuls
ja
out
fbstp
jb
dec
filds
push
jb
fisubl
inc
addl
dec
in
push
inc
lcall
pop
lock
scas
inc
jecxz
lcall
xchg
inc
and
sub
nop
adcl
mov
std
cltd
addr16
dec
jmp
lcall
sbb
es
dec
sbb
je
inc
scas
jbe
mov
idiv
lods
push
std
xchg
jo
and
cmpsb
and
mov
std
mov
push
mov
cltd
jns
push
sahf
jae
int3
mov
int
arpl
sub
mov
out
testl
sub
hlt
mov
xchg
test
mov
push
pusha
sarl
mov
sbbb
push
lret
lods
pop
mov
pushf
or
rcrb
sub
mov
mov
divb
sub
mov
dec
mov
fwait
negl
test
leave
stos
setg
gs
loop
mov
push
jle
fnsave
xor
addb
xchg
mov
sahf
test
in
fistpl
mov
loopne
sub
mov
push
xchg
lahf
fisubs
outsl
out
jp
ss
icebp
loope
cmp
mov
scas
stc
and
cltd
push
jl
in
xchg
sbb
cs
push
mov
push
cmp
sbb
aad
cmpsl
and
ret
mov
pop
stos
xchg
into
mov
cmp
loope
mov
vphaddubw
aaa
loop
jns
jmp
jp
xor
xchg
ficoml
movb
add
insl
sub
sbb
xor
popf
push
lods
loopne
sub
sti
notb
scas
enter
adc
xor
push
sbb
push
fdivr
je
xor
dec
jmp
stos
mov
adc
imul
loop
dec
cmpsl
stos
es
leave
lcall
cmp
in
inc
mov
add
cmp
ficomps
daa
sti
repz
and
movsb
jg
adc
loop
daa
out
add
out
push
scas
dec
and
cs
jno
add
push
sbb
jnp
repnz
sbb
cwtl
movsb
repnz
out
push
lock
lock
mov
fwait
pop
sbb
sti
ds
data16
cmp
pop
data16
cmp
aas
adc
push
inc
xchg
call
dec
cwtl
jo
mov
sbb
data16
test
daa
xlat
jg
xchg
mov
js
adc
cmp
jl
lcall
cltd
in
dec
negb
scas
push
inc
push
aas
cmp
fsubrs
lret
jae
push
inc
mov
pop
inc
aas
ret
mov
aam
in
inc
jmp
push
in
or
or
dec
fadds
push
mov
roll
bound
or
dec
inc
sahf
jno
jns
ss
fsubl
movsl
test
push
push
fs
mov
pop
pop
cmc
call
or
pop
mulb
idivb
pop
movsb
and
out
arpl
cmp
mov
sti
fnsave
jae
scas
pop
aam
jne
xor
pop
lea
push
test
jae
xlat
cli
dec
cmp
mov
add
mov
fisubrl
xchg
add
mov
dec
lahf
cld
jg
ja
and
in
pop
hlt
jge
xchg
arpl
mov
push
jg
fistl
and
push
in
fdivr
sti
adcb
sub
stos
cmp
iret
cmp
test
adc
cs
sub
lock
push
lds
add
xchg
push
inc
cmp
js
push
pop
iret
xchg
icebp
jne
jecxz
jmp
lea
pop
cmp
pop
xor
faddp
cmp
lock
pop
dec
dec
fcomps
sbb
xor
stc
mov
sub
add
cmpsb
inc
push
push
xor
repz
test
and
lds
xchg
xchg
or
sbb
pop
rcr
and
or
fldl
mov
inc
jl
imul
pop
pop
mov
dec
pcmpgtw
add
stc
cld
dec
cmp
les
movsl
push
cmc
daa
call
lcall
jbe
das
xchg
ficompl
call
rol
lret
pop
inc
or
and
mov
mov
subl
repz
add
mov
mov
jge
push
fdivrs
push
mov
leave
xor
cld
dec
imul
popf
sub
jns
loope
pop
movsb
adc
ret
xor
stc
xor
aad
nop
out
sub
and
adc
mov
xor
and
xor
jg
mov
mov
inc
cmp
mov
xor
imul
xchg
dec
xor
repnz
or
inc
ja
xor
adcl
add
in
adc
or
stos
push
icebp
sbb
and
jbe
cltd
cwtl
adc
lcall
sbb
inc
in
dec
xchg
xchg
sbb
ret
mov
push
mov
insb
js
pop
scas
inc
cmp
fst
orl
ret
inc
je
jae
cmp
pop
mov
adcb
fmul
cmp
mov
insb
cmp
add
data16
sbb
inc
jle
sbb
dec
lahf
int3
das
in
daa
xrelease
jge
mov
js
jecxz
xor
pop
idivl
filds
xchg
push
pop
pop
into
and
mov
rcll
test
lods
arpl
lds
jecxz
rolb
fdivrl
lret
sti
shlb
push
cltd
add
xchg
in
in
cwtl
repz
xchg
sub
inc
cmp
sti
adc
sbb
nop
xchg
fimull
or
and
mov
add
mov
sub
ds
cli
imul
dec
xchg
mov
test
sarb
ja
mov
gs
inc
push
inc
inc
les
dec
pop
jl
mov
dec
jae
mov
cmp
imul
in
pop
divb
cmp
add
jae
mov
mov
loopne
jecxz
pop
adc
loop
mov
outsl
stos
int
nop
iret
ds
mov
in
jno
jo
es
mulb
inc
cmp
cltd
push
dec
rclb
sbbl
pushf
fldl
push
sub
int3
pop
dec
inc
xor
mov
mov
jle
push
push
cmp
sub
fs
pop
cli
push
pop
jo
jbe
sbb
call
mov
loopne
mov
add
int
into
and
sti
lods
repnz
jecxz
aad
sbb
pop
out
es
push
lods
inc
ja
call
add
outsl
popa
mov
pop
fs
out
xchg
int
jo
outsb
icebp
mov
imul
sub
dec
test
cmp
test
aam
mov
je
sub
jl
ficompl
add
mov
repz
sti
cli
pusha
aas
mov
nop
pop
dec
mov
and
and
arpl
push
shlb
jg
push
or
fistpll
rol
jmp
cmpsb
out
cmp
sbb
mov
insl
sbb
fmuls
arpl
pop
subb
leave
rep
pop
push
shrl
or
es
and
inc
addl
xlat
hlt
ror
xor
adc
outsl
scas
cli
inc
loope
xlat
or
xor
add
mov
sub
jb
loopne
sbb
mov
ljmp
xor
sbb
lcall
nop
add
es
or
nop
daa
jecxz
pop
loopne
dec
sub
mov
mov
insb
xchg
repz
cmc
jge
adc
adc
mov
loop
movsl
es
ja
mov
fidivs
pop
pushf
rcrl
mov
outsl
sar
insb
out
not
lock
cltd
in
pop
mov
pop
sub
clc
mov
rcr
jbe
arpl
xlat
pop
mov
or
nop
std
lods
shr
mov
or
mov
adcb
jno
aam
sbb
add
push
mov
cmp
aas
jno
test
add
mov
xorl
lods
pop
mov
fbld
pusha
xor
outsb
cmovo
sbbb
cltd
jnp
xor
mov
jnp
adc
or
cmp
repz
dec
push
in
sbb
mov
iret
outsl
iret
into
cmp
pop
and
cmp
dec
out
jae
call
ret
popa
repz
and
mov
add
mov
insl
rcrb
or
popa
and
mov
xor
cwtl
xor
pusha
in
mov
fisttps
and
out
mov
int
jl
xchg
sti
data16
xchg
fmull
repnz
cmp
xorl
push
inc
mov
xchg
inc
out
pop
pop
add
jne
or
cld
dec
ds
add
sub
mov
or
jp
stc
jae
add
dec
dec
mov
popf
stc
mov
addb
in
push
test
sahf
xchg
mov
ljmp
int
outsl
sub
inc
dec
mov
add
and
and
pop
iret
insl
sbb
mov
mov
aam
mov
sbb
sub
inc
xchg
sbb
adc
or
mov
xor
pop
jb
mov
cmp
cmpsb
aam
out
iret
push
dec
test
xchg
xchg
jmp
ja
mov
and
cli
inc
xchg
aaa
mov
orl
and
cld
mov
mov
lcall
orl
sub
mov
sbb
dec
jbe
mov
lahf
andl
push
loop
sub
lret
out
aam
jae
jl
xor
cli
jo
mov
xor
and
sti
cmp
in
mov
push
aaa
bound
adc
cmp
lds
into
xchg
add
aas
mov
add
mov
test
aam
or
fdivl
adc
ss
out
inc
sub
stc
ja
imul
jmp
and
ss
mov
mov
shufps
sbb
push
popa
movsb
sbb
mov
imul
icebp
push
iret
xlat
jp,pn
add
adc
xchg
add
lds
in
mov
insb
sbb
jle
push
pushf
and
clc
js
mov
nop
arpl
inc
cwtl
loope
cltd
js
sbb
xor
sar
xor
repnz
pop
sahf
nop
push
mov
cld
ss
inc
mov
fisttpll
xorl
mulb
cli
xchg
mov
dec
repz
test
add
push
js
pop
mov
fadds
mov
enter
aam
and
das
mov
jecxz
scas
stos
mov
jge
imull
adc
add
and
stos
inc
push
cmp
jmp
xchg
xchg
mov
or
leave
pop
jbe
push
inc
ret
xchg
push
inc
pop
pop
xchg
cmp
pop
xor
int
or
shl
push
sub
xchg
frstor
dec
mov
scas
cs
imul
pop
fs
fnstsw
icebp
out
test
cwtl
pop
int
or
stos
xor
inc
xlat
mov
pop
xor
jecxz
cmpl
js
and
ss
cmp
push
ljmp
adc
cs
fcmovnu
out
paddw
stos
push
dec
lcall
sahf
pop
icebp
mov
cmp
dec
sub
xchg
std
sti
pop
pop
sbb
add
jle
rorl
hlt
mov
and
leave
call
dec
rcll
jg
stos
push
int
xchg
sub
test
push
pop
jnp
ret
jmp
mov
cmpsl
fs
ljmp
out
mov
mov
xchg
mov
pop
adc
mov
scas
mov
stos
sbb
mov
stos
ret
mov
mov
test
scas
mov
jbe
jg
push
or
jne
mov
stc
push
pop
test
pop
mov
scas
aas
adc
clc
movsl
stc
imul
arpl
dec
pop
fiadds
and
fstps
or
cmp
cmp
inc
inc
dec
push
jns
mov
mov
mov
sub
sbb
test
push
and
cmp
cwtl
xchg
cltd
ja
repnz
jnp
jl
and
cmpsb
or
lock
ljmp
fidivrl
daa
int
je
cmp
xor
mov
movsb
pop
xchg
ja
ret
sub
stc
jg
aaa
repnz
dec
mov
or
push
dec
shll
or
sub
xor
imul
in
dec
sub
cmc
je
mov
pop
and
lods
arpl
popa
nop
imul
pop
dec
push
in
jge
jae
add
out
fucomp
test
mov
leave
xor
popf
or
aam
inc
adc
rclb
inc
jecxz
add
fs
adc
jecxz
cs
cmp
pop
in
sub
stc
inc
sub
rol
jb
call
sub
adc
or
mov
shlb
and
adc
jae
cmpsl
bound
xor
test
lea
pop
push
or
push
jae
aam
lods
cltd
outsb
and
adc
jle
mov
mov
xchg
push
lahf
ss
adc
fstpl
mov
push
js
js
jge
dec
scas
loope
xchg
int3
or
mov
leave
inc
add
jmp
add
jmp
jmp
xchg
add
loope
or
test
pushf
cmp
insb
push
test
loopne
inc
les
add
call
cmc
lret
insb
aad
sbb
or
outsb
sub
dec
cmc
mov
shr
push
cli
adc
popf
in
add
scas
xchg
orb
mov
adc
sub
add
es
push
add
mov
push
movsl
xchg
and
mov
cmp
test
mov
in
les
mov
cmc
cmp
addr16
cmp
xchg
outsl
add
xor
pop
or
sub
lods
nop
xor
pop
push
jecxz
mov
sbb
pop
int
bound
pop
jp
or
insb
xor
mov
cmpsl
add
or
fwait
pusha
std
call
xchg
ljmp
cmp
pop
cmp
daa
pop
rcr
lock
jp
repnz
lret
andl
lods
cli
lret
xor
push
in
mov
scas
test
aas
add
jno
xchg
xchg
add
jge
shlb
insl
int
dec
mov
in
in
jg
xor
push
jnp
fisubs
dec
loope
aas
test
insb
out
inc
addb
enter
or
sbb
sbb
cmp
mov
adc
pop
jp
mov
in
cld
arpl
pop
popf
loope
pop
xchg
test
sahf
xor
mov
jge
cmp
sbb
std
sbb
outsb
sbb
andb
out
xor
and
sub
insb
add
enter
lahf
cmpl
testl
add
aam
pop
dec
fmull
pop
imul
rcll
add
shll
or
fistpll
in
pop
aad
bound
push
sub
or
pop
pop
aam
or
mov
sbb
icebp
sbb
dec
lcall
fldt
andl
mov
cmpsl
xchg
and
rcll
push
ret
add
adc
in
xor
scas
sub
dec
and
jne
lock
gs
sub
add
push
rorl
loop
ja
shr
mov
pop
cmc
fstps
negl
mov
adc
push
les
sub
xlat
mov
inc
fldenv
push
in
sub
sbbb
sub
arpl
jge
scas
mov
loope
jl
sbb
push
xor
push
mov
jnp
xor
and
jne
add
sub
test
dec
fcom
std
jo
dec
movsb
icebp
xor
orb
xchg
sub
cwtl
mov
cs
mov
or
jae
pop
stos
and
or
lods
cli
daa
leave
pand
stos
xchg
rolb
sbb
jne
aaa
xor
addr16
pop
inc
push
lea
pop
fimull
int
push
push
jp
out
xor
test
jmp
or
pop
jecxz
jle
in
mov
arpl
xchg
xchg
cmpsb
mov
add
dec
push
pop
insl
mov
or
das
repnz
push
rcrb
mov
lea
bound
push
inc
xchg
mov
ret
and
mov
inc
in
push
jecxz
or
sbbl
fidivs
lods
push
push
pusha
pop
adc
in
mov
out
xchg
sbb
add
mov
sbb
ljmp
sub
add
mov
std
pop
rcll
jg,pt
test
and
inc
mov
cmpsb
cmp
pushf
pop
cmp
rcll
pop
pushf
test
xor
arpl
sbb
jbe
jns
mov
in
jns
xchg
lea
mov
adc
fsubr
das
punpcklwd
mov
insl
mov
dec
rorb
mov
imul
dec
fsubs
xor
cmp
imul
add
pop
mov
inc
mov
and
and
mov
jno
ljmp
icebp
sbbl
pop
sbb
lea
mov
dec
adc
pop
dec
dec
pop
dec
movsl
ds
lea
aam
xor
jmp
hlt
add
pop
pop
inc
imul
jo
push
popf
je
mov
insl
fisubs
cmp
mov
adc
fs
xor
call
xor
shrb
fmulp
ds
xor
ficompl
adc
mov
pop
shrb
push
pushf
repz
dec
adc
mov
lahf
addr16
sub
pop
scas
mov
test
cli
stos
adc
push
in
sti
jbe
std
jne
fisubl
mov
add
jmp
adc
std
add
mov
aad
jbe
andb
xor
iret
sti
mov
push
pop
jg
mov
jo
loope
mov
in
and
xchg
mov
das
cs
nop
out
dec
mov
std
int3
sbb
xor
cmp
sub
rcrl
sti
sbbl
idivl
dec
imul
inc
fnstenv
push
and
pop
call
lods
jge
xor
pusha
mov
mov
mov
jns
jle
ret
mov
sbbb
mov
std
and
loopne
aaa
js
push
xchg
jg
loope
push
and
shr
lcall
sbb
loopne
rorl
or
inc
mov
lret
repz
and
rcr
out
xor
and
mov
jnp
inc
xchg
mov
decb
fwait
pop
fnstsw
cmp
sub
xchg
rcrb
outsb
jmp
and
aad
aam
pop
jmp
scas
jg
pop
insl
inc
movsl
mov
mov
sub
jmp
push
leave
sahf
sbb
shrd
ds
mov
insb
xchg
out
inc
cmp
xor
push
mov
loopne
jnp
xor
push
imul
xor
test
cwtl
mov
sti
iret
cmp
push
or
es
arpl
les
xchg
insl
cltd
je
leave
cs
je
xlat
outsb
cltd
xchg
arpl
ja
add
dec
dec
cmp
mov
mov
mov
daa
subb
add
mov
inc
aas
into
test
jo
leave
push
mov
add
xor
stos
pop
jmp
mov
inc
sbb
test
js
xchg
test
inc
sarb
dec
cmp
mov
loope
push
fwait
les
sub
or
xor
mov
adc
call
lds
cmp
loopne
aam
stc
inc
daa
cwtl
das
pop
cmp
in
push
dec
mov
dec
and
fwait
gs
mov
or
cmp
lret
fnstenv
push
int3
pop
fidivl
or
jnp
jle
jmp
loop
push
repz
pop
jns
mov
mov
ljmp
xor
push
mov
pusha
lods
cmp
add
fildll
and
ret
push
insb
adc
xor
mov
sbb
inc
and
outsl
sub
or
decb
jo
loope
inc
jne
inc
cs
mov
mov
xchg
xor
pushf
test
fnstcw
push
mov
sbb
jbe
sbb
shrb
dec
push
mov
mov
push
aad
xor
shlb
push
mov
lods
pop
mov
outsb
sbb
arpl
cltd
aas
mov
repnz
mov
mov
popa
jmp
loop
jnp
imul
roll
add
mov
pop
mov
aas
or
xlat
repz
sahf
mov
adc
cmp
bound
pop
and
inc
fcoml
mov
mov
mov
inc
fs
in
in
and
iret
mov
decl
add
out
icebp
dec
xchg
push
adcl
in
pop
mov
je
jo
push
stos
ljmp
leave
cmpb
mov
mov
in
add
int
not
popa
add
outsl
mov
test
pop
lret
pop
adc
jg
outsb
out
cs
outsb
in
rorl
sbb
dec
mov
lock
sub
pop
pop
divl
stos
movsl
test
mov
aam
es
sub
mov
scas
inc
sub
xchg
add
dec
int3
and
out
stos
dec
pop
or
xor
adc
shr
in
pop
icebp
xor
jne
push
xchg
mov
scas
xchg
lods
mov
mov
adc
outsb
hlt
add
cmpsl
loopne
cmp
mov
sbbb
mov
lds
jae
out
aaa
jb
in
aaa
sbb
movsb
test
jbe
dec
or
iret
lret
mov
dec
sbb
pop
inc
in
nop
icebp
sub
lcall
adc
in
out
stos
mov
adc
mov
inc
jle
add
add
insl
adc
aaa
dec
int3
in
mov
addl
xor
insl
lea
divl
jbe
fs
loopne
xchg
dec
les
test
push
mov
loop
push
cwtl
fiadds
nop
jno
xor
xorl
jmp
mov
ss
popf
test
aas
lods
mov
sub
xchg
mov
and
inc
jb
movsb
push
inc
loopne
test
enter
aad
lcall
pop
cli
or
fnsave
add
scas
mov
bound
pushf
mov
pushf
data16
xchg
sub
push
test
push
or
pop
xor
loopne
xchg
gs
mov
repz
sbbl
push
xor
inc
adc
mov
lcall
cmpsl
inc
ds
pop
jmp
or
push
lahf
sbb
mov
rcr
jge
insl
add
popf
outsl
push
xchg
inc
fdivp
ljmp
pop
and
imull
unpcklps
sub
sbb
push
test
je
xlat
mov
ret
push
mov
inc
aad
enter
pop
shr
jp
mov
bound
inc
leave
pop
cli
xchg
dec
jmp
cmc
or
fbstp
fwait
sbb
insb
jno
mov
mov
push
pop
xchg
lock
loope
jnp
int3
add
stos
xor
popf
mov
adc
push
jae
mov
cmp
inc
xor
orb
pop
popf
pop
dec
shll
fst
and
jae
push
sub
xor
into
gs
data16
lahf
xor
inc
lret
sti
sub
push
addr16
cmpsl
mov
push
adc
test
dec
cmp
jg
popf
lods
lods
sub
pop
sbb
pop
mov
dec
jbe
test
int
jle
mov
mov
cmp
push
lret
adc
shlb
ja
icebp
lds
adc
mov
enter
lcall
mov
push
cmp
repz
addb
repnz
shlb
mov
sub
push
shlb
xchg
dec
and
sar
mov
mov
fwait
orl
fwait
adc
movsl
sub
pop
pusha
mov
shlb
xchg
and
xor
popa
ficomps
jmp
jbe
sahf
inc
sbb
mov
and
jg
jle
shlb
test
push
pop
scas
inc
jge
sbb
push
jns
mov
data16
mov
movsl
adcb
lock
in
shlb
sub
xlat
cld
out
mov
insb
arpl
lcall
mov
xchg
push
add
lea
sbb
jo
jb
xchg
jnp
pop
lods
xor
mov
cs
mov
inc
clc
sub
imul
loopne
mov
sub
pop
in
imul
mov
sub
scas
xor
cmpsl
in
sub
fnstcw
xchg
aam
dec
or
cwtl
and
mov
ljmp
xor
nop
jmp
pushf
pusha
or
mov
pop
adc
or
aas
dec
dec
sub
repz
inc
faddl
in
arpl
fs
aad
or
mov
fwait
inc
sub
xchg
jnp
out
stos
lret
inc
jmp
mov
fdivs
int
in
push
pop
sti
pop
subl
rcl
jne
dec
jmp
jle
jno
or
stos
lods
xchg
sub
int3
mov
les
xor
dec
loope
testl
mov
fbstp
in
pusha
pop
sti
push
movsb
hlt
add
and
orb
xor
pusha
fstpt
jbe
loop
jp
ds
add
inc
mov
jge
add
jp
dec
mov
arpl
cld
lret
mov
sbb
or
mov
pop
out
ljmp
adc
lret
cs
fstpt
into
push
jo
fdivrl
bound
push
sahf
and
shlb
xlat
mov
mov
test
lret
dec
cmpsb
jae
mov
push
and
lret
sahf
mov
adcb
xor
scas
ljmp
test
or
cwtl
bound
pop
outsl
jno
xchg
cmpl
inc
notb
call
xchg
loope
dec
dec
repnz
call
pop
dec
or
lods
sub
mov
pop
adc
mov
mov
xor
filds
jne
sub
out
push
ljmp
inc
bound
test
xchg
mov
or
jle
lods
adc
out
es
jle
or
mov
cmp
cmp
enter
xor
add
push
int3
and
fldenv
ds
dec
test
out
xlat
in
dec
pop
or
add
push
mov
ja
or
out
arpl
mov
clc
mov
sbb
jns
sbb
popf
push
mov
mov
push
xchg
adc
adc
pop
fdivs
add
nop
mov
inc
sahf
out
mov
jne
or
or
xchg
pop
jg
cmp
xchg
adc
aad
mov
call
mov
mov
push
dec
mov
jmp
push
out
mov
idivb
in
mov
cltd
pop
stc
sbb
mov
mov
and
push
add
pop
enter
pop
imul
mov
mov
sarb
xor
lcall
push
std
jne
data16
xchg
add
or
loop
rorb
sub
leave
lock
adc
cmc
bound
ss
movsb
jecxz
push
add
pop
jbe
ds
sbb
les
xlat
sub
dec
inc
arpl
std
test
mov
test
mov
test
inc
cmc
sar
or
addb
rcr
stos
or
stos
or
mov
dec
mov
je
test
xchg
and
leave
mov
int3
ja
sub
or
xchg
jbe
dec
add
jg
shlb
add
sub
testl
xlat
and
lcall
xor
or
in
aas
mov
mov
sbb
mov
scas
xor
push
ss
cmp
mov
mov
sbb
mov
cmp
stos
and
sub
push
and
fnsave
cmp
nop
pop
add
les
cmc
adc
sbb
and
and
sti
xor
shr
pop
fiaddl
push
pop
mov
push
push
shrl
sub
es
cmp
cmc
dec
std
xor
into
sbb
push
sub
mov
mov
leave
mov
pop
lahf
scas
xor
mov
test
aam
jl
lcall
repz
xchg
loopne
adc
add
ret
iret
or
mov
mov
aas
in
clc
mov
add
shlb
add
jmp
in
cltd
testl
aad
sbb
addr16
push
sahf
movb
idivl
in
dec
repnz
adc
stc
mov
aad
and
sbbb
shld
adc
imul
lcall
cmp
pop
jne
add
or
dec
push
loope
or
push
cmp
mov
pop
push
insl
pusha
push
xor
mov
dec
aad
jg
in
pushf
fnstsw
scas
mov
sahf
out
cmp
aaa
adc
rclb
mov
xlat
fsubrs
add
loope
scas
imul
xchg
jnp
inc
inc
xchg
adc
aam
adc
jecxz
movsb
movsb
xchg
inc
popa
xchg
or
add
std
xchg
rcpps
mov
fnsave
adc
cmp
sub
push
das
mov
jae
mov
xor
adc
popf
sbb
shlb
jno
lods
xchg
pop
repnz
into
jmp
test
dec
adc
lcall
std
call
loope
notl
in
adc
ja
xchg
xor
push
xor
stc
pop
inc
mov
loop
sar
popf
in
lret
xlat
and
or
dec
mov
cmp
pop
cmp
adc
repnz
testw
inc
enter
xchg
cwtl
push
fstps
sbb
out
jl
sub
mov
push
loop
pop
mov
jae
loopne
pusha
or
mov
jae
push
test
mov
stc
enter
mov
and
out
dec
shr
lods
pusha
aam
xor
shll
xor
data16
xor
test
pop
out
out
lods
cmp
mov
loopne
adc
test
cld
cmp
jns
xor
mov
loope
lret
inc
push
cmp
in
fstpt
ret
lret
push
fdivl
out
cmc
fsubr
es
outsb
add
jge
mov
add
or
aad
inc
jmp
push
sub
jge
or
sahf
inc
test
pushf
fwait
cld
mov
push
les
push
adc
cmp
jns
mov
shrb
push
nop
xor
ret
and
xlat
or
insl
add
xchg
es
cmp
mov
cld
or
imul
adc
mov
subl
bound
lret
bound
outsb
jl
stc
jmp
mov
popa
pop
sahf
into
pop
xchg
adc
and
pop
dec
add
xlat
mov
fstpl
out
cmp
mov
push
enter
rol
dec
xchg
pop
jbe
test
fxtract
stos
cld
pop
repnz
mov
in
lock
inc
push
jo
push
push
sub
std
or
dec
mov
nop
jg
jns
pop
sub
adc
push
mov
scas
cmpsb
jmp
ss
stc
push
mov
rorb
mov
daa
out
fidivs
adcl
xor
sub
sbb
mov
cmp
aad
mov
fcomi
mov
out
xchg
adc
jns
lret
mov
cwtl
aaa
pop
lcall
jge
aam
inc
sahf
pusha
ss
lcall
arpl
add
mov
mov
push
mov
outsl
xchg
push
jge
mov
pop
popa
faddp
xchg
shrl
mov
pop
ret
jbe
loope
dec
fisubl
fisubrs
push
mov
test
clc
sub
dec
cs
loop
sub
faddl
jbe
ljmp
mov
mov
jnp
data16
dec
or
cmp
push
xchg
sub
mov
fsubrl
les
aas
lcall
sub
fnstenv
rcrl
xor
lock
xor
add
mov
or
push
icebp
fidivrs
dec
aaa
sub
cli
aad
push
sti
sti
lcall
xchg
cs
test
or
stc
sarl
jae,pn
or
stc
pop
mov
into
rolb
lea
or
sub
pop
lods
push
out
mov
dec
testl
push
pop
xsaveopt
dec
icebp
mov
jbe
mov
push
mov
dec
mov
loope
inc
add
out
mov
lock
and
lock
in
notb
cmp
cld
cmp
fnsave
push
inc
ffreep
xor
cmp
dec
insl
fdivrs
test
ss
mov
fadds
sub
popa
bound
sub
aaa
push
js
and
push
pop
test
in
push
mov
daa
sti
pop
inc
mov
lcall
adc
add
insb
dec
cmp
stos
mov
jo
mov
aam
inc
and
movsb
sbb
test
inc
pop
lea
je
loop
add
adc
cmp
jecxz
and
bound
ret
xor
outsl
ljmp
add
jp
aam
adcb
aaa
subb
test
orb
sbb
mov
xor
sub
rclb
inc
lods
mov
cs
out
sub
cmp
mov
mov
jmp
adc
movb
cmp
lahf
insl
rcrl
loope
jno
fbstp
or
mov
mov
add
and
frstor
cmpsl
jl
std
and
mov
mov
adc
cmp
popf
stos
sub
out
or
jecxz
jmp
fdivl
pusha
add
out
mov
bound
xchg
mov
sub
push
es
xor
jo
jmp
push
inc
cli
xor
mov
clc
xchg
jbe
fists
dec
and
fs
push
add
jle
mov
inc
les
lds
push
popf
out
pop
lds
mov
testb
ret
dec
outsl
mov
inc
es
in
std
adcb
pop
orb
insl
xor
insl
jbe
add
pop
pop
adc
int
jmp
sbb
inc
fs
mov
push
lcall
fnstsw
rcrb
add
xor
mov
mov
aad
and
aas
sarb
sbb
lret
and
stc
sbb
xor
sbb
js
xlat
push
cmpsl
lret
jb
mov
cmpsb
lods
daa
fneni(8087
orb
mov
sbb
mov
stc
insl
inc
xlat
sahf
repnz
mov
add
pop
jne
mov
add
xor
sbb
rcl
sbb
shl
fs
enter
sbb
dec
aad
tzcnt
in
sub
enter
and
jno
xor
mov
popa
das
cmp
in
stos
mov
xorl
adc
jo
add
and
xchg
push
add
xor
outsb
cwtl
jbe
add
aaa
in
dec
xchg
jge
add
adc
ret
shll
es
insb
sub
push
lahf
lcall
jle
stos
push
mov
sti
lret
cld
sbb
repnz
fstpl
mov
andl
scas
lcall
xor
fbld
dec
cmp
leave
or
mov
hlt
pop
push
je
adc
xorl
adc
stc
dec
enter
jmp
in
and
fnstcw
adc
leave
popw
xor
pop
cs
inc
les
sub
and
adc
xor
push
adc
fldcw
jo
movsl
repnz
outsb
rol
imul
scas
cmp
hlt
cmp
pop
lods
mov
mov
imul
aaa
push
add
mov
pop
jge
clc
sub
mov
sbb
scas
sub
cmc
mov
out
out
dec
add
in
dec
pusha
cmp
aam
jae
lahf
movsb
and
insb
sub
pop
lods
and
shlb
dec
or
imul
out
jnp
adc
mov
dec
icebp
or
inc
xchg
shl
icebp
inc
cltd
pop
push
push
insb
add
loope
lock
mov
jb
or
movsl
ljmp
addl
ss
mov
push
sub
jne
jp
mov
xor
pop
xor
aad
dec
std
jecxz
test
mov
ret
cs
push
lods
push
inc
xchg
hlt
pop
dec
es
jl
push
sahf
scas
mov
dec
cmovbe
inc
jp
repz
mov
pop
adc
or
bound
sub
xor
mov
mov
iret
cmp
mov
push
mov
scas
addl
add
bound
add
xchg
int3
xor
mov
arpl
pop
popa
loop
aad
push
ds
dec
inc
mov
sbb
or
xchg
incl
jmp
xchg
lods
mov
add
mov
push
dec
pop
ret
xor
push
jle
push
jne
lahf
fdivl
add
in
je
out
negb
test
pushf
jns
fsubl
enter
sbb
cs
cmpl
cmp
inc
cmpsb
imul
popf
outsb
rorb
mov
and
adc
mov
ds
pop
lds
xor
push
cmpsb
loop
and
mov
rcrb
jp
dec
push
dec
jg
lret
fwait
and
xchg
fmul
popa
lods
dec
lahf
call
mov
adc
aas
sbb
addl
jp
cwtl
popa
dec
fidivl
mov
jb
jbe
mov
movsl
test
pop
lock
loopne
adc
xchg
inc
xchg
insl
stos
cltd
insb
add
fsubl
mov
lcall
fnclex
bnd
push
stos
inc
cmpb
cmp
dec
add
mov
xchg
xchg
mov
mov
xor
dec
jne
or
sub
das
decl
clc
fstl
loopne
mov
push
out
maxps
xor
scas
in
daa
jo
add
cmp
dec
rcrb
push
push
push
xlat
incb
daa
xlat
rolb
cld
push
push
and
loope
bound
xlat
dec
inc
cmpsl
jg
pushf
aam
jnp
testl
lds
mov
adc
pop
push
movsb
or
fildll
jo
pop
into
scas
sbb
addr16
mov
rorb
xor
imul
mov
incl
xchg
sbb
add
adc
cmp
dec
test
cs
test
mov
imul
inc
inc
add
hlt
pop
adc
inc
push
pushf
and
xor
push
cmpsb
adc
add
jno
dec
cmp
add
xchg
mov
dec
pop
adc
mov
test
inc
sahf
add
sub
cmp
test
out
bound
adc
or
adc
nop
sbb
cmc
imul
pop
popf
push
or
and
adc
cmp
repz
faddl
sti
jbe
add
out
loope
jge
inc
xchg
add
xor
push
mov
fistl
scas
in
sub
dec
leave
pusha
je
dec
popf
ficoml
inc
bound
test
hlt
int
mov
pop
outsl
jg
sbb
push
sbb
mov
add
mov
pop
cltd
arpl
mov
xchg
and
push
test
int3
popa
mov
nop
imul
sbb
pop
mov
outsl
cmp
imul
xchg
jno
out
mov
into
or
adcl
pop
add
fisttps
mov
data16
add
adc
pop
inc
fs
popa
dec
aaa
mov
mov
in
scas
lock
les
jg
push
cmp
push
sbb
dec
adc
or
jg
shrb
mov
add
pop
lret
jb
roll
jnp
pop
mov
loop
add
ja
ds
imull
test
push
lahf
mov
fiadds
adc
fistpll
fiaddl
jmp
cld
add
pop
xlat
mov
insb
sbb
bound
ret
inc
icebp
mov
mull
push
mov
push
cmpsb
sti
lds
jnp
mov
xchg
movsb
jne
pop
cltd
std
lock
addl
add
or
jge
into
pop
sbb
inc
leave
inc
jnp
xchg
ds
mov
cmp
bound
cld
icebp
sbb
test
imul
adc
stc
inc
jg
add
fstpl
jmp
xor
roll
and
add
dec
sub
ret
es
fnstsw
jg
xor
nopl
mov
pop
sti
adc
dec
xor
pop
repnz
mov
jno
xor
push
push
fs
xchg
js
in
pop
nop
sub
sahf
daa
mov
scas
xor
sbb
rcrb
fnstcw
lods
adc
mov
mov
mov
inc
shlb
pop
sbb
mov
sbb
inc
shrb
or
adc
lods
jae
push
sbb
jp
xchg
jns
movb
shlb
jo
push
xchg
sub
fdivs
fiadds
testb
xchg
in
clc
sbb
xchg
xor
sbb
mov
or
cmpsb
mov
fmuls
dec
cmp
test
mov
ljmp
call
popa
repz
xacquire
hlt
pushf
mov
adc
inc
cwtl
in
fsubr
xchg
adc
shl
xor
pop
mov
dec
xor
lahf
mov
es
xor
inc
xlat
orl
fwait
push
lods
inc
test
nop
insb
adc
arpl
mov
out
fstpt
push
jmp
out
jo
stc
or
pop
loopne
rclb
mov
int
xchg
pop
sahf
movsl
jae
mov
lcall
xchg
push
popf
xor
ret
xchg
xchg
push
mov
xchg
in
inc
icebp
cmpsl
ret
mov
inc
fdivl
and
push
xor
dec
inc
fidivs
cmp
push
adc
pusha
cltd
arpl
out
and
lds
aaa
int
sub
ret
pop
push
jecxz
mov
push
pop
ss
mov
push
lock
ds
adc
nop
in
lds
inc
decl
cmpsb
sub
sub
mov
sub
sub
je
push
dec
outsl
jnp
dec
jno
test
xchg
adc
pop
pop
in
mov
nop
nop
daa
ret
dec
aam
xor
sub
dec
roll
and
and
jns
jnp
aaa
jle
out
jnp
insl
and
stos
and
xchg
out
dec
sbb
repz
insl
out
inc
xlat
addl
jl
jbe
scas
dec
sub
mov
aad
push
call
jp
sub
vpsllw
xor
jne
test
push
mov
and
jl
popf
lods
add
jle
and
push
lds
dec
mov
sbb
movsl
lods
sbb
lret
imul
jg
pop
hlt
add
jno
rcrl
dec
loope
call
push
add
fwait
mov
test
sub
add
test
icebp
jl
movb
insl
mov
stos
insb
dec
fs
or
jle
call
push
ljmp
jge
out
int3
data16
mov
scas
push
ljmp
call
pop
scas
rcl
and
lods
xchg
ja
add
fucom
loope
sbb
je
insl
fdivrl
and
ficomps
sbbl
call
jo
push
jge
std
cmp
mov
mov
outsb
mov
ret
scas
push
mov
add
push
mov
ret
jmp
mov
mov
mov
dec
in
pop
sbbl
out
and
pusha
addr16
imul
stc
mov
repnz
das
cmp
dec
xor
lcall
jae
dec
loope
dec
pop
inc
mov
push
xchg
sahf
imul
push
mov
mov
in
sbb
dec
mov
push
sbb
mov
or
pusha
cmp
pushf
lods
negb
xchg
add
sbb
push
movsb
cs
add
cmp
or
push
in
jl
mov
fld
sarb
mov
lods
pop
add
xlat
push
and
cmpsb
inc
xor
lds
mov
js
and
outsl
fsubl
push
sbb
test
pop
aas
mov
mov
and
cli
adc
sbb
mov
push
inc
push
cmpsl
add
jecxz
mov
jmp
xor
aad
sub
jno
jae
aam
xlat
ret
cmc
jecxz
fcomps
mov
push
pop
scas
inc
fildl
cltd
insb
inc
int
mov
and
cmp
sti
dec
insl
ds
xor
adc
pop
inc
mov
cmp
pusha
pop
fstl
adc
loop
repnz
fadd
hlt
and
or
jno
jae
adc
fcoms
mov
mov
mov
inc
insl
hlt
aaa
int
mov
jne
xchg
pop
pcmpgtw
xchg
call
lods
adc
and
sub
ljmp
stc
icebp
sbb
repnz
inc
inc
mov
pop
call
or
push
pop
and
pcmpeqw
std
ficoml
xchg
popf
pop
mov
out
scas
cs
jbe
or
sbbb
shlb
or
dec
add
hlt
inc
mov
lds
test
cli
incl
inc
arpl
push
jnp
addr16
pop
mov
fisubrs
sub
push
fbstp
mov
sbb
std
jg
push
mov
add
push
fimull
push
bound
lret
dec
popa
add
fs
push
cltd
out
popf
lret
out
cs
fisttpll
std
xor
outsb
fst
addl
js
inc
testl
cmpsb
push
ss
scas
push
fstl
jge
inc
test
outsl
dec
sub
cmpl
cmc
push
adc
loope
push
add
mov
dec
add
mov
popa
adc
fisttpl
movsl
adc
mov
or
pop
push
fnstcw
jb
cmp
addr16
push
pop
mov
inc
ja
xchg
pusha
jns
ds
cwtl
cmpsl
fucomip
cmp
mov
mov
sub
and
or
movsl
jl
loop
cwtl
lods
mov
mov
das
jge
xchg
ss
dec
xchg
lock
leave
fcmove
adc
adc
or
ss
jo
xor
sbb
fistl
sbb
cli
sub
imul
decl
mov
xor
psllw
js
mov
jbe
mull
and
sahf
push
mov
add
bound
sbb
in
and
enter
push
imul
xor
ret
hlt
mov
iret
sbb
in
sbb
xchg
insb
mov
outsl
jae
mov
or
and
xor
inc
negb
xor
pop
imul
xor
fnstsw
test
jl
push
sub
aam
sub
sbb
fdivrs
jecxz
add
sub
out
negl
movsb
cwtl
lahf
ret
stc
into
enter
dec
pop
pop
insl
je
mov
pop
loop
lds
pop
lock
leave
test
in
ja
lret
or
adc
adc
pop
xor
leave
and
jo
aam
push
out
lret
and
sub
cmpsl
inc
fmuls
pop
mov
inc
cwtl
adc
shll
mov
push
inc
rorl
jmp
xor
inc
nop
pop
ret
dec
xor
inc
out
pop
add
adc
es
pusha
stos
xchg
dec
cmp
push
call
inc
push
movsl
shlb
add
mov
fwait
mov
sub
fsubl
dec
aaa
popa
out
cld
xchg
push
in
aas
enter
call
mov
ds
or
fstpt
scas
add
jae
sti
fst
repz
xchg
addr16
orb
mov
sbb
iret
sbb
jmp
js
mov
sahf
fs
lods
aad
in
mov
sub
pop
fdivl
xchg
push
cmp
adc
fisubrs
por
mov
dec
pop
fstl
push
mov
andb
nop
jns
cmp
imul
mov
ret
jnp
push
mov
xlat
push
das
mov
dec
mov
hlt
sub
outsl
jl
sbb
in
testb
xlat
inc
stos
in
call
xorl
adc
jbe
or
movsl
push
jle
mov
xchg
mov
shll
push
leave
jecxz
pop
push
iret
mov
mov
and
in
jl
sahf
dec
cmp
sbb
negb
fidivrl
inc
sbb
sbb
sub
es
sbb
lea
int
dec
or
notl
mov
sbb
clc
dec
cs
sbb
adc
adc
pop
fisubrs
lods
fdivrp
mov
push
rorb
mov
rcl
and
inc
ret
add
mov
and
cli
fsubs
addl
negl
sub
pusha
shrb
dec
sbb
xor
and
xchg
movsl
mov
dec
pop
lods
mov
es
or
jecxz
sub
ljmp
mov
adc
xor
cltd
lock
dec
in
and
ficoms
push
mov
sbb
mov
or
jae
jae
aaa
fisubrl
adc
push
mov
leave
sbb
mov
or
sbb
and
sub
xor
ret
mov
inc
xlat
call
pop
ret
fcmovne
lahf
fmull
mov
push
sti
dec
cmpsb
dec
lcall
enter
xor
jae
fidivrl
mov
push
jb
les
or
dec
loop
sub
je
cmp
jo
andb
ja
in
jo
xchg
out
mov
mov
sub
clc
pop
cmpsl
ds
inc
inc
fcomip
lds
fstpl
mov
xchg
loope
xor
mov
das
and
repnz
sbbl
sub
pop
pop
cmp
jmp
int3
pop
inc
jnp
bound
inc
lods
sbb
mov
loope
sbb
fcmovbe
divb
dec
ret
stc
lahf
cmp
mov
sbb
test
mov
inc
out
sub
push
movsb
dec
sbb
xchg
fnstenv
push
repnz
pop
aad
test
adc
sub
jg
fsubrl
adc
dec
pop
push
test
loope
mov
mov
mov
addr16
cwtl
xor
jne
push
into
movsl
cmp
icebp
mov
pop
sub
mov
test
rorl
push
and
or
dec
mov
arpl
inc
aam
jg
cmp
xor
inc
mov
lret
jle
cmc
mov
or
mov
xor
hlt
xchg
int
push
aas
aaa
jnp
jae
cwtl
stos
xchg
test
stc
or
ljmp
cmpb
pop
pop
inc
pop
adcb
xchg
pop
jae
cld
sub
pop
aaa
cmp
test
and
fisttpl
mov
std
inc
fstp
cltd
out
push
je
mov
xor
pop
sbb
adc
push
jge
cs
daa
popa
pushf
sub
std
enter
cli
mov
scas
jge
cmp
sub
popf
in
ficompl
xchg
rolb
xor
fcoms
lahf
dec
xor
mov
loopne
pop
notb
inc
push
pusha
testl
pusha
push
jae
ret
outsl
cmp
test
pushf
mov
std
test
leave
sbb
out
mov
push
or
xchg
fnsave
fcomp
xor
fwait
xor
push
aam
jno
call
jmp
and
xchg
jnp
enter
xchg
inc
pop
or
lods
test
lret
testl
addb
testb
aad
data16
adc
mov
aam
cmp
les
push
inc
cld
xchg
jbe
jne
ds
popf
or
inc
test
adc
les
sub
adc
in
sahf
mov
adc
dec
imul
clc
negl
lahf
hlt
cmp
inc
insb
cli
push
sub
jb
mov
test
xor
dec
fwait
hlt
test
scas
aaa
gs
inc
arpl
test
mov
notb
repnz
or
sub
addr16
cwtl
pop
dec
mov
daa
lret
gs
aaa
pop
pop
push
sar
repz
pusha
push
dec
fimuls
sbb
pop
or
jae
jge
clc
repnz
and
lea
jae
and
push
lret
xchg
mov
pop
push
leave
xor
and
mov
push
test
or
fsubrl
and
jl
pop
aad
cmp
ret
sbb
sahf
mov
and
cmp
lea
inc
fwait
xchg
int3
xchg
and
dec
mov
lret
jmp
or
push
pop
mov
lcall
push
fcomps
mov
xlat
gs
lcall
pop
mov
cltd
sbb
mov
mov
jno
out
and
jns
xor
cli
push
push
cmp
dec
xchg
pop
mov
roll
xchg
jb
lret
fucomp
daa
frstor
dec
bound
add
adc
fists
test
pop
aad
mov
sbb
xlat
movsl
xchg
ret
push
dec
xchg
scas
out
jbe
sub
pop
inc
pop
jl
lods
cmp
dec
hlt
bound
cmpsl
push
jmp
dec
and
jle
dec
sti
cltd
sub
inc
push
mov
lea
fsubrs
pop
outsb
cmpsb
imul
mov
inc
nop
jg
ja
cmp
pusha
mov
jmp
out
insb
xchg
push
sti
add
cmpsl
aas
push
subb
jno
ret
cs
outsb
in
arpl
or
jb
mov
and
rcrl
push
std
adc
scas
stos
jg
mov
mov
shlb
inc
dec
pop
dec
repz
mov
jle
out
jno
pop
jl
adc
scas
xchg
test
cs
icebp
enter
sbb
inc
sub
negb
inc
maxps
fs
imul
fdivl
rcrl
mov
jle
in
jle
pop
push
fwait
inc
icebp
adc
ja
mov
lock
xchg
sahf
gs
cmpsl
fistl
ffreep
insl
adc
aad
orb
pop
adc
mov
push
dec
adc
xor
push
dec
lods
inc
jp
or
fmull
add
jbe
push
test
add
cmpsb
cld
or
push
sub
and
mov
mov
mov
fmull
xchg
jno
leave
std
mov
out
xor
dec
insl
mov
rcl
jno
mov
mov
fbld
mov
popf
negl
xchg
aaa
lret
dec
fnstsw
jo
leave
out
fs
mov
ret
sti
aad
cmp
aam
in
fcoms
popa
fmul
loopne
mov
shll
lods
or
pop
xor
dec
gs
les
xor
push
leave
push
arpl
cltd
pop
int
fisubl
lods
mov
jno
jns
sbb
sbbl
pop
test
pop
cli
xchg
sub
inc
pop
xorl
das
push
inc
xor
popa
mov
lds
imul
pop
dec
pop
push
sbb
dec
or
shrl
enter
xor
scas
ret
imul
sarl
dec
fstps
sarb
orb
movsl
xor
bsf
xor
xchg
push
jmp
test
divl
adc
loopne
cld
push
push
jb
sahf
cmp
mov
and
lret
sti
cmpsb
cli
and
push
and
push
dec
jb
fwait
sbb
push
cs
orl
leave
dec
dec
push
jg
bound
lds
xchg
test
dec
push
mov
lahf
loop
push
repnz
cmp
sbb
arpl
adc
sbb
sub
xor
scas
and
push
push
adc
test
bound
test
scas
or
lods
xor
pop
mov
mov
bound
jo
imul
xchg
xor
mov
mov
push
scas
fiadds
bound
int
dec
push
push
and
fidivrl
or
subl
lea
loop
outsl
add
jb
cltd
or
aam
mov
scas
cs
mov
cmp
mov
push
fdiv
mov
sub
lock
jge
xor
divl
movsl
adc
mov
xchg
cmp
dec
mov
dec
pop
or
test
inc
push
xor
or
xor
push
push
fstpl
popf
inc
dec
dec
sub
out
cld
call
mov
push
or
call
or
cmp
cmp
scas
lock
push
test
scas
cltd
xor
mov
addr16
adc
into
into
xchg
les
sar
jno
jo
shrb
inc
lret
lods
pop
shr
pop
xchg
sub
rcr
adc
loopne
movsb
pop
out
xchg
ljmp
or
jecxz
fwait
push
lret
movsl
cmpsb
stc
mov
imul
inc
repz
xor
lret
push
sarb
pusha
xchg
xchg
mov
js
sub
loope
cmp
lods
sbb
das
rcll
xchg
or
adc
pop
pop
inc
mov
shll
icebp
mov
loopne
push
lahf
int3
cmp
push
test
in
std
fwait
rcrb
adc
inc
bound
xchg
sub
xor
pop
jo
jno
out
fistps
adc
aaa
cmp
sbb
js
cld
ret
popa
push
movsl
xchg
adc
out
jg
aad
dec
sti
pop
inc
jns
xchg
pop
arpl
add
sub
lods
pop
outsb
sbb
add
mov
inc
addb
clc
mov
mov
lahf
adc
push
adc
jo
jp
hlt
mov
jmp
fmul
inc
or
sub
dec
std
pop
xor
mov
or
push
mov
call
cmp
repnz
cs
fmul
jp
cli
std
in
das
or
mov
dec
jmp
inc
or
sarl
inc
mov
push
dec
cmp
test
lret
xor
xchg
lods
pop
adc
xchg
jbe
sbb
xlat
and
fldpi
in
inc
repz
jle
aas
pop
lea
mov
mov
jae
dec
push
pop
scas
pop
adc
test
pop
or
int3
arpl
xor
cltd
sbb
mov
pop
rclb
scas
add
pop
rol
mov
int3
loope
or
clc
jne
and
enter
dec
fsub
mov
fildll
push
dec
pop
icebp
das
mov
jp
push
js
xorb
mov
sti
xor
xlat
insl
jp
push
or
js
fwait
inc
or
call
add
outsb
shrl
stos
jl
push
inc
push
or
mov
push
sub
sahf
inc
or
aam
pop
scas
or
dec
jne
aas
outsl
jle
xchg
addr16
push
pop
imul
sub
mov
daa
add
or
mov
sti
jbe
mov
cmc
cmp
or
push
sti
shlb
icebp
mov
sub
dec
push
sub
xchg
cmpsl
jecxz
test
push
in
lock
cwtl
jbe
clc
iret
mov
inc
or
cmpl
xor
daa
dec
leave
int
dec
lcall
imulb
xchg
stos
cli
popa
sbb
jbe
ja
push
aas
pop
cli
fmulp
fstpt
shrb
loopne
mov
addl
jge
jp
int
pop
addr16
test
add
pop
mov
bound
movsb
xchg
movsl
ja
mov
mov
adc
roll
lods
aas
scas
jge
xchg
pop
inc
divb
and
or
scas
jle
push
out
in
call
inc
in
divl
push
fwait
mov
or
ret
cmp
dec
push
sub
nop
fbstp
or
dec
test
push
cmc
dec
loope
pop
inc
push
cmp
ljmp
pop
ss
mov
int3
arpl
mov
or
in
and
sub
xchg
dec
call
jge
pushf
pop
ret
int
add
inc
mov
jmp
adc
push
lods
jle
cmpsl
jmp
or
pop
mov
or
js
ret
sahf
gs
or
sub
push
mov
push
aad
inc
push
xor
jne
sbb
les
dec
dec
add
aam
lock
fdivrs
mov
pop
sbb
sub
jo
lret
shlb
mov
xor
pop
aas
push
fs
cwtl
xor
ss
daa
xor
inc
test
add
or
pop
jns
ds
ret
jb
clc
fldcw
or
ds
testb
pop
icebp
mov
hlt
js
pop
pop
add
in
pop
out
into
cmp
sbb
loopne
in
adc
and
mov
cmp
popf
clc
sbb
adc
mov
fs
lock
ficoms
imul
cmpsl
lahf
adc
fcomi
push
leave
test
fxch
aas
xor
jmp
mov
pop
mov
mov
xor
xchg
repz
xchg
inc
or
icebp
pop
clc
jns
add
sub
sahf
jbe
pop
pop
mov
lret
xor
mov
lods
or
rorl
and
adc
pop
sub
cmp
pusha
and
aad
or
add
aaa
pop
scas
sbb
sbb
mov
out
jbe,pt
lcall
fs
negl
add
cltd
std
or
mov
clc
mov
xor
loopne
dec
popa
add
divb
push
ss
in
je
es
scas
xorl
test
lods
sub
pushf
add
fldt
dec
adc
jp
jge
cmp
dec
popf
inc
das
mov
mov
inc
xor
lods
in
add
or
and
mov
sbb
call
push
lods
push
dec
jecxz
cli
xor
pop
pop
push
dec
imul
pushf
insl
ret
fistps
push
lcall
sub
sbb
in
fidivrs
sti
mov
sarb
jmp
test
mov
les
lds
imul
adc
iret
ret
test
mov
movsb
sub
out
xor
add
pushf
mov
add
cmc
mov
cmc
xorl
push
and
push
sahf
and
test
clc
pop
mov
cmpsb
movsl
cli
push
mov
mov
in
aam
push
cmp
push
xor
xchg
std
int3
jg
cmp
jns
cmpsb
sub
mov
out
push
sahf
and
push
dec
add
repz
or
cltd
mov
fstpl
jb
push
idivl
jge
adc
mov
frstor
sbb
iret
mov
rcrb
xor
sbb
sub
mov
jae
and
enter
pop
dec
popa
inc
mov
mov
jb
dec
fwait
iret
push
sub
push
push
push
in
ljmp
rcrb
sarl
push
dec
add
jl
mov
out
sbb
xchg
xchg
add
pusha
in
jbe
and
dec
popa
aam
ljmp
mov
aad
and
into
into
lea
lock
sbb
dec
out
add
pop
fs
adc
cmp
xlat
sub
xchg
les
and
pop
adc
fdivl
xor
pushf
pop
out
in
cmpl
or
loop
aad
fcmovb
dec
cmpsb
jg
lret
jne
insl
or
cmpsb
cmp
and
divb
fnstcw
cmp
add
ret
mov
pop
out
les
or
pop
mov
sub
and
adc
fdivs
mov
ret
lret
jnp
cltd
or
dec
or
mov
ja
subl
popf
mov
cmp
mov
xlat
cmpsl
jno
or
sarb
jb
pop
sub
inc
jns
mov
dec
push
pushf
ret
fistpll
int3
mov
insl
shl
pop
insl
out
sahf
repz
cmp
and
and
stos
scas
nop
fstl
cmp
dec
mov
push
in
push
inc
gs
sub
mov
dec
stos
inc
push
adc
add
dec
pop
jge
enter
gs
xchg
mov
sub
cmpb
jmp
sub
push
into
jmp
xchg
enter
adc
dec
sbb
scas
adc
xor
cmpsb
or
rorl
xor
inc
adc
inc
out
fwait
jmp
call
imull
and
test
cmpsb
faddl
hlt
cmp
xchg
mov
dec
and
mov
inc
mov
insl
cmpsl
mov
cmc
sbb
pop
mov
pop
pop
inc
and
test
inc
mov
xor
inc
fstl
lock
stos
aas
mov
cmp
ficoml
xlat
rorb
movsl
pop
movsl
out
sbb
xor
xchg
cmpsl
out
call
movsl
mov
mov
jno
int3
jno
adc
add
jnp
lcall
movsl
cmp
pop
mov
rcr
nop
out
xchg
lret
cmpsb
mulb
adcl
hlt
and
ss
inc
leave
pop
jle
test
fbstp
sbb
lret
loop
pop
pop
out
pop
inc
mov
call
cmpsl
xchg
ljmp
popa
call
jl
xor
ret
lret
jo
mov
fcoms
aad
cli
je
adcb
les
call
test
cmp
mov
pop
pop
stos
lret
adc
stos
pop
repnz
fs
mov
f2xm1
fmul
popf
inc
push
stc
mov
enter
xchg
mov
jle
in
mov
push
ljmp
or
fwait
adc
jp
or
xchg
mov
andb
repnz
xchg
test
lds
pop
loope
cs
adc
ds
ret
repnz
fisubrl
jns
sbb
add
jne
xor
aaa
nop
ds
repnz
pop
jmp
jo
mov
sti
push
aas
pop
xchg
pop
xchg
fldenv
mov
ret
test
data16
cmp
push
fimuls
and
jbe
pop
push
adc
aaa
and
fwait
lods
lods
es
fisubs
push
dec
jns
stos
repnz
lcall
loope
push
loop
das
adc
or
icebp
shlb
subb
pop
cmp
rep
jne
cmp
jmp
xor
push
orps
dec
out
test
hlt
cmp
insl
sub
fwait
xor
jecxz
pop
ss
repnz
sbb
shlb
cli
pop
lock
jle
and
add
fidivs
jp
call
aaa
or
adc
jg
add
xorb
stos
cmp
inc
mov
sbb
adc
cltd
inc
pop
hlt
rcll
jnp
cmp
push
clc
push
jg
xor
mov
push
std
mov
push
imul
xor
enter
sub
push
rcrb
mov
enter
je
in
testl
pavgw
mov
mov
daa
stos
outsb
sub
mov
mov
scas
push
xlat
cmp
movsl
adc
imul
xor
out
inc
jb
push
sahf
and
mov
add
cli
jp
cmp
adc
cmp
jp
lahf
sti
nop
rorl
lcall
jb
and
xor
out
cwtl
fidivrl
jecxz
scas
push
out
fwait
jg
lock
popa
arpl
sbb
mov
jmp
dec
lock
jecxz
int
mov
add
xor
lods
inc
mov
push
pop
dec
sub
rorl
loope
into
fdiv
sbb
lcall
gs
sbb
das
pop
fnsave
addr16
add
xchg
xor
jg
mov
mov
js
xor
mov
inc
fidivrs
push
mov
mov
lret
cmc
mov
xchg
add
mov
cltd
push
jb
inc
mov
fsubs
fcomps
push
add
stc
xchg
jae
sub
lds
fs
sbbl
xchg
push
add
shlb
sub
aad
out
je
shlb
mov
in
in
adc
push
sbb
mov
insl
inc
aaa
enter
inc
mov
inc
addr16
mov
push
aad
sbb
ja
fimuls
lock
mov
seto
xor
inc
lcall
sbb
jl
fwait
stc
inc
adc
loope
sahf
pop
fs
dec
fdivl
data16
dec
outsl
ret
out
push
popf
or
mov
push
aam
or
inc
ret
xor
dec
aas
sti
or
add
fdivl
popa
xchg
add
or
lods
pop
sub
movsl
int3
mov
sub
xchg
sbb
mov
xor
pop
pop
outsb
cmp
jo
cmp
jl
jecxz
out
mov
testb
or
pop
shr
jge
sbbb
mov
jb
ret
jecxz
shrl
xor
sbb
jle
outsb
jb
jnp
jl
repz
imul
add
jb
iret
and
in
hlt
stos
enter
fucomp
xorl
std
imul
dec
jp
imul
sbb
cwtl
sbb
xor
loop
jmp
icebp
dec
push
scas
cmpsl
sub
out
xchg
xchg
das
pop
loope
fcmovbe
repz
lods
roll
mov
dec
adcl
dec
movsl
jl
fsubs
lret
fwait
into
mov
arpl
ds
mov
mov
xchg
xchg
add
les
adc
lds
push
and
into
mov
std
loope
stos
not
xor
movsl
out
test
dec
push
lea
ret
into
push
test
lock
mov
int
outsb
push
mov
sti
pop
dec
sub
aaa
into
bound
cmc
mov
test
lea
ljmp
ficompl
sahf
sbb
cmp
sahf
lods
pushf
xor
int
mov
cmpsl
cli
sub
add
xchg
je
and
cmp
andl
sbb
fsubrs
nop
call
gs
pop
mov
cmp
push
js
xor
add
push
cmp
jns
push
mov
sbb
lods
jl
xor
rclb
mov
popf
stos
ret
das
and
xchg
pop
leave
fbld
xchg
xor
rcr
cmpl
pop
adc
stos
mov
lea
out
xchg
adc
mov
cmp
inc
fs
sub
or
sbb
or
dec
xor
dec
push
mov
addb
dec
ds
lea
orb
xchg
clc
xor
test
test
mov
sub
sbb
adc
incl
push
jle
mov
mov
es
or
push
cmpsb
ret
nop
in
xchg
and
cmpsb
cmp
fwait
call
cmpsb
popf
stos
jge
rolb
or
mov
aad
jg
push
dec
les
je
jo
xchg
daa
clc
out
psrlq
pusha
mov
inc
dec
mov
cltd
sbb
aad
sbb
sub
and
daa
mov
sarb
mov
out
int3
pusha
sub
shrb
inc
pop
adc
imul
xchg
pop
out
inc
jb
mov
ret
xchg
rorb
mov
or
jb
dec
jecxz
ret
adc
ss
dec
add
sbb
push
jno
sarb
rcrb
out
xchg
sub
jecxz
test
pop
sub
xlat
and
addr16
in
div
sbb
in
sub
pop
mov
add
jno
adc
xor
jb
dec
adc
mov
gs
mov
push
cltd
cmp
in
add
daa
leave
data16
mov
pop
xor
mov
pop
mov
es
add
out
test
dec
fdivl
mov
in
xor
testl
add
xchg
add
out
jae
loop
mov
mov
sbb
test
stos
neg
movsb
icebp
xchg
jb
mov
imul
outsb
xchg
lret
xor
push
adc
inc
inc
add
into
es
ret
outsl
enter
push
ja
in
aas
push
rorb
mov
out
je
push
and
leave
sbb
popa
mov
dec
test
bound
aaa
loope
aaa
int3
lods
xchg
mov
insl
jle
mov
imul
repz
jnp
les
xor
mov
xchg
and
mov
mov
or
mov
mov
sti
push
dec
loope
and
sbb
ja
je
shr
xchg
imul
call
jno
pop
adc
push
imul
repnz
dec
mov
xor
push
jge
stos
and
aas
push
jl
dec
jo
hlt
mov
insb
sbb
xor
stc
loopne
add
outsl
cli
es
out
push
cwtl
push
je
daa
jmp
test
pop
insb
shll
mov
lcall
pop
cmp
inc
cld
xchg
add
rcrl
mov
sub
stos
imul
mov
fidivrs
leave
shlb
rol
aas
cmpsl
mov
ret
mov
pop
add
out
shll
xor
nop
or
xchg
mov
push
cmp
mov
pusha
jne
add
inc
fidivrs
inc
hlt
mov
cmp
dec
outsl
arpl
out
andb
mov
add
mov
aad
fdivrs
fwait
outsb
mov
and
sbb
std
mov
mov
mov
notl
mov
cpuid
lds
or
pop
jns
dec
fld
test
jbe
fnsave
pop
xchg
pop
lcall
in
and
int3
jne
aam
fmulp
fisttpll
jmp
mov
jb
dec
pop
add
rcll
stos
and
cmpsb
xor
rcrl
and
aaa
pop
add
mov
inc
sbb
mov
mov
push
lret
stc
push
js
rcrl
pop
jns
pop
xor
leave
inc
hlt
pop
cmp
test
mov
dec
ret
xorl
out
jmp
cs
inc
insl
int
in
clc
shl
leave
int
push
mov
out
or
mov
out
fs
out
mov
iret
mov
cmp
cmpb
loopne
sub
jl
jno
and
cmp
sub
jnp
aas
fwait
ja
jmp
jno
xor
out
jg
push
xchg
mov
push
int3
push
cs
add
jp
push
jnp
out
xlat
in
fbstp
dec
adc
and
push
or
js
les
aas
lock
fwait
pop
hlt
int3
and
mov
adc
stos
add
out
pop
fxch
inc
jle
js
test
std
cltd
mov
sti
hlt
or
jbe
test
mov
imul
mov
mov
push
rcll
pop
xchg
das
fsubrs
test
sub
inc
jge
cmp
xchg
scas
out
std
or
and
scas
mov
xchg
imul
push
sbb
push
cmpl
stc
jo
movsl
mov
jg
addr16
cmpsl
sub
and
scas
xor
mov
sbb
adc
pop
icebp
lret
movsb
popl
addr16
cltd
orl
push
cmp
ret
imul
out
add
adc
and
jmp
faddl
mov
inc
xor
push
cmpsl
ds
cld
or
and
bound
icebp
jecxz
push
dec
adc
aad
jns
push
stos
test
mov
sub
mov
or
pop
ret
enter
shlb
jbe
jns
mov
sbb
mov
or
xchg
dec
sbb
aas
jmp
out
aaa
xchg
js
and
add
add
fwait
inc
cwtl
push
and
and
xchg
pushl
ljmp
jno
xorb
lahf
sub
jno,pn
data16
push
add
push
ljmp
cld
lcall
mov
daa
cmp
mov
subb
jne
sub
or
vmovsd
dec
ljmp
or
push
sarl
fidivrs
lods
iret
outsl
stos
jge
mov
dec
xor
xor
out
xchg
inc
and
mov
jo
int3
outsl
pushl
jo
cwtl
outsb
mov
and
xchg
ja
cmp
xorb
pop
repnz
leave
lock
push
hlt
cmp
dec
cmpsb
jle
test
cwtl
push
sub
pop
mov
lcall
pop
fsubrs
shll
repnz
outsb
and
leave
popf
std
dec
pop
lea
jecxz
insb
pop
ret
fwait
outsb
cmpb
push
add
fnsave
and
mov
lods
push
out
frstor
insb
dec
ljmpw
iret
cltd
popf
movsl
mov
jmp
incb
mov
dec
scas
push
inc
outsl
jns
xor
push
pusha
out
push
sbb
test
out
xor
out
test
sbb
dec
push
mov
jl
mov
jne
sbb
push
mov
mov
mov
mov
pop
leave
jg
push
inc
scas
cmp
aad
pop
fsts
pop
cld
cmp
das
rclb
sbb
orb
test
push
jg
mov
ljmp
call
adc
loopne
fsts
cmp
cli
out
jl
insl
shlb
add
dec
and
push
icebp
adc
add
cmp
jnp
push
push
aad
mov
inc
enter
das
loop
xchg
fwait
sub
in
pop
aaa
push
lcall
test
cmp
jne
subb
iret
push
js
lds
push
insb
loope
aas
idivl
call
dec
fmull
add
cmp
aam
or
pop
icebp
ljmp
mov
fldl
adc
or
cmpsl
je
cmp
fldcw
jne
mov
adc
in
and
jecxz
and
add
jge
push
or
ss
sbb
aad
and
xchg
cmc
mov
lcall
lcall
jle
pusha
imull
cmc
mov
lret
fcmovu
jo
adc
aaa
enter
sbb
sbb
les
aam
mov
mov
fcoml
push
testl
loope
lods
inc
mov
or
lods
lret
gs
push
mov
rorl
cmp
mov
and
movsb
push
mov
shl
leave
scas
push
arpl
out
mov
mov
fistps
mov
outsb
mov
repz
jbe
push
mov
insb
ret
cmc
mov
js
mov
sti
mov
mov
xchg
add
xchg
cmp
cmp
mov
sarl
mov
lds
sbb
rorl
seta
enter
enter
shlb
mov
cmc
test
pop
jnp
les
nop
sub
lock
and
jge
mov
in
lock
pop
mov
pushf
cli
fistpll
add
cmp
jb
mov
mov
jp
mov
aad
cli
pushf
scas
loopne
js
sbb
xor
lret
sbb
mov
ficoml
adc
clc
lods
cmc
add
es
jg
or
adcw
lea
sbb
add
mov
hlt
rcl
jl,pn
insb
adc
jo
pop
icebp
jle
mov
inc
aam
mov
movsl
inc
adc
mov
clc
inc
mov
icebp
negl
add
sahf
jne
adc
push
cld
aas
inc
add
lds
dec
push
or
bound
sarl
fdivrl
push
ret
jp
lcall
fistl
mov
or
sti
fwait
pop
lahf
out
pushl
or
cmp
in
xchg
scas
sub
call
pop
into
ljmp
or
mov
inc
jb
dec
cli
ss
into
imul
lcall
push
movsb
jne
sbb
mov
jae
adc
ja
cmpsb
mov
adc
out
sbb
test
and
cmpsb
pop
add
cmp
fcoml
sbb
hlt
lods
mov
js
out
les
jb
scas
jbe
push
xor
jge
ret
outsl
inc
mov
add
adc
inc
in
dec
lret
mov
testl
jbe
pop
push
data16
test
adc
adc
out
mov
mov
cmp
push
adc
movb
push
cmp
imul
cli
repz
jg
xor
cmp
mov
fcoml
sahf
scas
dec
in
mov
fisubs
mov
cmp
cli
xchg
pop
adc
andl
sbb
mov
pop
loop
sbb
inc
jle
in
push
lods
lret
idivl
pop
xchg
dec
adc
xchg
mov
out
sar
adc
sbb
lods
push
push
dec
mov
loop
imul
sbbl
cmp
xor
in
inc
push
push
out
in
test
dec
mov
sbb
cmpsb
xchg
sbb
dec
cmp
push
movsl
repnz
mov
out
test
repnz
iret
mov
mov
sbb
movsb
jmp
ss
enter
jae
push
cmp
inc
jne
jp
adc
pop
mov
mov
jo
or
adc
inc
xchg
enter
jp
xchg
daa
out
loope
or
test
lock
push
cmp
shll
pop
xor
fs
xor
cmp
sti
fwait
jo
ficoms
arpl
adc
cmp
jp
jb
adc
in
bndstx
movsl
out
fistpl
xchg
insl
enter
test
mov
and
out
dec
movsb
iret
data16
lcall
std
and
out
cmp
aas
loope
xor
cli
hlt
mov
dec
mov
pop
cmpsl
ss
bound
int
hlt
out
push
xchg
or
mov
scas
insb
push
sbb
in
xchg
pop
jae
push
adc
mov
je
add
gs
nop
and
test
lret
ret
adc
aad
pop
imul
inc
cltd
xor
popa
testl
mov
sahf
daa
aam
loopne
ret
in
mov
mov
call
std
xchg
inc
decl
inc
in
dec
fistps
outsl
data16
in
scas
and
rorl
lahf
ret
add
daa
mov
pop
sub
pop
xchg
pop
push
pusha
mov
mov
call
jmp
fs
movsb
pop
add
scas
in
out
in
jbe
dec
jecxz
andb
enter
jg
inc
push
sub
push
loopne
mov
inc
in
mov
jmp
outsl
xlat
das
clc
lea
addl
mov
sti
loop
mov
in
fwait
loope
adc
pop
cmp
out
sbb
lret
mov
fadds
test
in
sbb
in
cltd
outsl
xchg
ljmp
xor
scas
mov
rorl
popa
je
pop
scas
imul
gs
insb
dec
mov
shlb
push
dec
xor
repz
add
mov
fdivr
test
jb
cmp
aaa
xlat
cmc
ja
out
scas
inc
loope
mov
push
adc
or
push
xsha256
cmpsb
push
sub
pop
inc
sub
std
test
dec
loope
fstpl
cltd
fcompl
xor
add
enter
mov
push
cwtl
negl
js
sbb
jl
jne
dec
loop
loopne
mov
push
imul
mov
dec
js
cltd
test
outsl
add
jbe
add
mov
sbb
mov
lret
pop
test
inc
popa
push
nop
add
notb
loop
add
xchg
icebp
pop
cmc
mov
decl
jo
inc
push
aaa
pop
adc
xchg
inc
jge
subb
mov
out
negl
sub
shlb
rcll
subl
stc
out
mov
cmpsl
xlat
jmp
test
loopne
jecxz
jno
cmp
inc
pop
lcall
stc
adc
pushf
shl
mov
mov
in
cld
int3
popa
loopne
mov
jo
sub
mov
out
enter
data16
xlat
cmp
aaa
iret
cmp
inc
aad
pop
fwait
test
cmp
mov
fildl
push
jnp
lods
and
xchg
lods
jmp
loope
push
xor
xchg
pop
jnp
subl
movsl
jb
inc
stc
and
push
std
lods
mov
or
mov
gs
lret
mov
ljmp
ficoml
push
jl
out
jns
sbb
push
add
pushf
or
inc
mov
movsl
jns
cmp
adc
arpl
adc
and
cltd
pop
mov
mov
jo
mov
mov
push
test
jle
insb
adc
mov
out
mov
repnz
push
loopne
xor
cmp
and
pusha
sbbl
iret
movsl
push
xor
cmp
arpl
rcrl
jg
inc
mov
inc
addb
xor
fs
mov
add
jnp
push
or
lock
scas
faddp
xchg
adc
sbb
mov
cmp
xchg
xchg
lods
leave
out
push
sbb
mov
sbb
repz
push
ljmp
jae
dec
jnp
je
arpl
es
push
sti
movsl
shlb
jno
push
xor
lea
mov
dec
or
enter
dec
ret
sub
sbb
pop
js
sbb
fsubs
cmp
test
jo
stos
popa
lcall
loop
fxch
insb
psrad
inc
pop
dec
subl
sub
sbb
jecxz
sub
lods
jbe
test
rcl
lcall
add
jg
test
in
xlat
pop
push
mov
js
pop
cmc
stos
inc
lret
pusha
ljmp
adc
ss
imul
les
dec
lds
xchg
mov
fisttpll
adc
jno
add
xchg
xor
xor
mov
int3
out
pushf
jae
nop
push
rcrb
mov
pop
mov
and
inc
cwtl
push
cltd
lock
mov
xchg
cmp
inc
inc
test
sub
pop
push
pop
lods
xchg
stos
and
mov
mov
in
clc
xchg
loop
sbb
lahf
push
sub
mov
les
add
xchg
dec
add
test
mov
rcr
sub
adc
adc
nop
xchg
mov
sbb
mov
test
repnz
gs
adc
add
cmc
test
nop
jl
les
inc
jle
fisubrl
dec
dec
mov
jbe
pop
mov
aad
inc
xchg
cs
pop
xchg
xorl
lcall
dec
loopne
or
mov
setg
xor
sbb
sbb
stos
xor
and
inc
out
aaa
cmp
dec
add
aad
pop
push
out
adc
outsb
add
pop
adc
mov
pop
bnd
push
movsl
fildl
push
loopne
push
es
dec
cmpsl
and
and
push
js
xchg
pop
out
dec
push
xchg
mov
je
sub
dec
ret
cmp
repnz
iret
insb
sbb
push
test
lea
shll
mov
int
jae
and
int3
lock
mov
ds
cmpb
aaa
pop
mov
stc
push
mov
int3
or
push
testl
in
sbb
clflush
pop
stc
movsb
test
rcr
out
jb
in
sbb
mov
push
movsb
add
xor
pop
notb
fsub
xor
jge
bound
rol
addr16
or
pusha
imul
push
popf
sub
push
jecxz
and
xchg
test
inc
leave
pusha
jae
fbstp
mov
std
xchg
je
dec
cwtl
cli
lea
mov
das
cmp
test
jl
xor
shr
pop
jbe
mov
enter
sbb
loopne
shl
push
stos
dec
mov
xchg
cmp
or
incb
fwait
jg
shl
stc
outsb
dec
popf
fsubr
popl
out
jmp
or
cmp
pop
mov
add
lahf
pushf
mov
cmpsw
adc
dec
adc
push
lods
jmp
faddl
sub
fstpt
rclb
ss
adc
test
adc
adc
inc
pop
mov
sbb
xchg
lea
pop
data16
sbb
hlt
rcrb
mov
mov
adc
lret
cmpps
push
or
sarb
shrl
shrl
push
ffreep
mov
notl
push
insl
inc
aam
or
xor
jmp
jp
mov
cltd
jl
cmp
xchg
jno
clc
roll
mov
test
repz
cmpsb
pop
mov
daa
mov
cmp
push
sbb
pop
hlt
sub
sbb
sahf
add
je
xor
fdivl
inc
jle
je
mov
xor
mov
sub
mov
shlb
enter
mov
arpl
arpl
je
xor
call
lea
push
mov
sbb
sub
loopne
dec
cmp
jnp
jmp
mov
pop
pusha
add
popa
js
and
mov
shlb
mov
and
call
aas
cmpsl
pusha
jge
jae
test
testb
jge
fnstenv
dec
fildll
sbb
or
push
imul
fbstp
jecxz
cmp
ret
push
mov
out
add
sub
pop
notb
adc
mov
inc
sti
jge
cli
jg
mov
pop
leave
hlt
gs
mov
imul
out
dec
in
inc
ror
pop
pop
loop
testl
sub
addr16
dec
sbb
mov
lds
jg
xor
push
adc
lret
pusha
sbb
ds
out
xor
pop
andb
cwtl
lret
out
pop
xchg
out
jno
sahf
mov
cmpsl
jmp
add
jno
or
ret
inc
shll
imul
mov
cmc
fldcw
popf
stc
and
out
xor
scas
stos
stos
jp
popa
lret
ss
leave
push
out
xchg
push
jmp
int3
mov
mov
stc
adc
xchg
std
xchg
lds
jb
mov
inc
hlt
rolb
add
stc
popf
rorb
mov
pushf
das
inc
inc
arpl
lds
pop
jmp
into
inc
shl
jbe
xchg
scas
pushf
xchg
sbb
mov
sub
or
ljmp
sbb
mov
cmp
mov
lret
mov
sub
xor
sti
push
push
std
pushf
add
and
cmp
dec
bound
jno
add
sbb
sti
and
push
xchg
xchg
loopne
stos
xor
shlb
cmp
rorb
push
push
sub
scas
cmp
sbb
lds
cmp
push
xor
push
lock
icebp
popa
imull
fwait
iret
fildl
es
and
mov
and
and
jo
dec
cmp
jne
adc
test
jno
inc
xlat
jmp
sbb
mov
adc
mov
xor
xor
mov
xchg
xor
inc
push
and
pop
sub
xorb
insb
mov
sbb
cli
and
insb
and
mov
mov
dec
xchg
movsb
xchg
mov
dec
dec
cmp
cmp
adcl
cld
sahf
movl
int
shll
insb
mov
fs
mov
fbstp
sub
or
xchg
into
std
pop
pop
cli
or
test
shrb
mov
ret
std
std
jo
leave
into
rcrb
fbstp
shlb
xchg
and
jmp
xor
das
mov
mov
mov
enter
xor
inc
sub
dec
cltd
xlat
add
pop
ss
lods
mov
push
icebp
bnd
cmc
sbb
testb
leave
adc
sbb
sub
pop
jno
inc
mov
cmpl
mov
mov
nop
testl
aam
cmpsl
fdivl
es
lds
arpl
xor
and
rorl
xchg
popf
stc
inc
push
mov
or
cmp
dec
mov
cli
out
jbe
and
out
mov
aad
lock
repz
xlat
outsl
adc
jp
clc
fidivl
or
dec
dec
or
pop
push
xchg
pop
pop
push
je
lods
mov
arpl
dec
clc
xchg
fmul
add
cli
sbb
mov
sub
lea
dec
in
fcomps
or
xchg
sub
mov
lcall
int
outsl
inc
lods
outsl
aad
pop
inc
insl
scas
cmpl
repnz
icebp
cmp
rcr
cmpsl
jbe
jns
jecxz
jne
sbb
dec
inc
jge
std
cmpb
cli
jae
movsb
or
push
shll
lods
inc
int3
push
add
push
add
cmp
jo
ds
adc
and
ret
daa
mov
jecxz
xchg
stc
inc
dec
jge
sub
fdivp
sbb
ret
jp
pop
sub
xchg
enter
test
dec
fidivrs
call
imul
dec
dec
fnstsw
xor
and
loope
ret
and
pop
inc
mov
xchg
jge
mov
int3
and
out
add
hlt
push
xor
mov
xchg
push
xor
pop
mov
incb
or
push
aas
enter
jecxz
iret
mov
call
pop
xor
jg
gs
sbb
mov
cmp
cmp
pop
addr16
pusha
arpl
sub
mov
in
ja
pop
lahf
negb
sti
push
sbb
lret
aas
dec
pop
push
cwtl
movsb
xchg
mov
jmp
in
adc
cmp
pop
push
inc
xchg
sub
inc
bound
inc
inc
movsl
stc
jnp
imul
popa
xor
popa
dec
in
dec
das
out
sbb
mov
pop
jb
jo
pusha
je
sub
in
dec
sub
push
dec
mov
pop
cmp
add
js
and
adc
stc
lea
repz
add
mov
mov
mov
insl
mov
lods
test
aam
cmp
and
repnz
mov
jo
mov
adc
outsl
popf
arpl
inc
mov
pop
or
add
jle
test
shlb
sub
lods
inc
xlat
mov
jmp
jle
vpsrlw
ljmp
bound
rclb
mov
inc
fiadds
mov
aam
mov
mov
leave
int
insb
aam
adc
inc
pop
outsl
sub
pop
pop
nop
push
adc
bound
xlat
xor
in
adcl
or
sbbb
outsb
jl
movsb
fdivrs
popa
sub
mov
inc
sbb
test
push
lret
insb
sub
xchg
or
inc
fimull
sub
arpl
cmp
adc
pop
popf
cmpsl
mov
jp
arpl
movsl
mov
sub
insb
fiadds
mov
lret
nop
fucomp
xchg
sub
int
jbe
add
dec
mov
ss
xlat
push
lods
pop
cmc
sub
shlb
sahf
mov
enter
int3
push
pop
ret
jno
jno
push
sbb
push
out
mov
arpl
sahf
push
pop
lcall
inc
int3
adc
jae
fsubrs
imul
fwait
out
insl
aas
xor
sbb
mov
dec
cwtl
std
mov
loope
js
pop
and
xor
dec
pushf
push
mov
xor
and
dec
pop
imul
mov
nop
loop
popf
lcall
iret
jo
mov
into
es
in
push
xchg
dec
inc
fidivrs
movsl
lock
pusha
xor
popl
fnstenv
outsl
mov
cmpsb
imul
out
arpl
lahf
rcl
add
add
arpl
shlb
enter
enter
jns
push
js
xchg
stos
fcoml
das
in
adc
insl
push
ret
sbb
mov
add
lods
aad
adc
xor
bndldx
mov
jge
adc
jns
lea
push
nop
fldcw
sub
mov
sub
xchg
vcvtss2si
js
rolb
cld
cltd
xor
in
stos
ds
mov
leave
pop
insl
addb
enter
mov
mov
adc
jae
pop
xlat
dec
and
and
mov
cmc
mov
js
dec
inc
mov
dec
xchg
out
mov
shlb
dec
pop
inc
inc
iret
push
loope
and
inc
cltd
push
inc
mov
pushf
out
or
jo
scas
fnstenv
pop
scas
cli
jne
and
or
cmp
out
sub
stos
call
lds
outsb
hlt
and
xchg
add
out
insl
rorl
sub
call
pop
in
jle
pop
sub
mov
xchg
ss
fnstsw
neg
mov
xchg
push
shlb
shr
test
test
jns
or
sbb
jnp
icebp
jmp
ds
mov
fsubr
jb
dec
movsb
or
inc
mov
fld
pop
or
push
in
and
pop
mov
js
pop
lret
mov
jecxz
lret
jae
push
jp
sahf
add
repz
and
icebp
add
cmp
sub
aad
jne
jnp
rcrl
cmp
mov
lcall
adc
cmpsl
xor
fucomp
sbb
mov
pop
lods
sbb
jg
add
pop
clc
inc
cld
in
xchg
push
jne
outsl
mov
outsl
xor
bound
mov
int3
jne
inc
dec
lret
mov
cvtpi2ps
cmp
mov
dec
lahf
lock
leave
mov
add
cmp
cltd
sub
push
mov
sbb
xlat
rcr
insl
push
or
jbe
fwait
iret
add
in
dec
sbb
adc
fdivrl
jmp
insl
xor
xchg
pop
or
imul
loop
jl
mov
mov
pop
sarl
cmp
ret
pop
inc
add
inc
xchg
insl
push
jo
idivb
add
dec
cwtl
stos
fcoml
xrelease
test
sub
adc
sbb
out
pop
hlt
xchg
mov
fsub
clc
adc
aaa
std
cmp
hlt
push
push
es
ficoml
stos
inc
or
addr16
jg
push
movsl
out
xchg
xor
test
xlat
enter
mov
lret
cmp
stos
aaa
mov
stc
clc
or
outsb
cli
sahf
push
xchg
adc
xlat
lea
repz
sbb
nop
xchg
sbb
mov
loope
arpl
pop
mov
mov
jl
fdivs
or
pop
pop
add
notb
ucomiss
mov
int3
les
pop
sub
lds
fwait
cmp
pop
adc
inc
data16
popa
cli
xor
push
sbb
call
mov
inc
pop
scas
loop
aad
pop
add
lea
mov
push
call
and
cli
sahf
sbbb
inc
out
andl
imul
jo
pop
sahf
adc
loopne
sbb
or
aam
mov
dec
movsb
mov
pop
or
int3
mov
mov
je
jl
mov
fildll
xchg
fiadds
ret
sub
dec
mov
lcall
lret
pop
ljmp
push
push
std
pop
jge
lds
jl
xorl
sbbl
cmc
mov
inc
fmul
sbb
mov
rcr
outsl
jb
mov
sub
test
inc
xchg
scas
cld
fwait
lret
test
fsub
enter
xorl
test
xchg
ret
hlt
mov
pop
adc
xchg
pop
fadd
pop
push
jle
out
sbb
les
dec
adc
add
rcll
dec
mov
subl
dec
bndstx
inc
or
jns
jp
pop
jle
mov
pushf
arpl
fadds
sahf
lret
mov
popa
fstl
ret
sbb
pop
add
jae
inc
test
jns
inc
test
ljmp
jo
mov
leave
test
push
dec
dec
movsb
inc
xor
test
nop
inc
xor
xchg
push
cmpsb
dec
cmpl
adc
aaa
add
bound
sbb
inc
push
loop
aad
or
mov
js
hlt
lods
push
rcll
fistl
push
xor
dec
jg
and
mov
stos
cltd
cmp
mov
sbb
sub
cmpsl
cmp
sbb
mov
jbe
loopne
adc
popf
pop
inc
stc
addb
pop
repnz
movsl
sahf
push
pop
movsl
push
xchg
or
cs
xor
pop
mov
jae
adc
outsl
push
out
jne
arpl
or
rolb
sub
mov
dec
push
push
pop
test
sbb
dec
dec
add
add
xchg
jge
test
je
nop
call
inc
arpl
adc
sbb
pop
test
rcrl
pop
cmpsb
mov
fs
imul
in
adc
sub
lahf
std
pushl
test
jo
mov
cmc
add
or
stos
pop
out
xchg
push
push
jmp
sub
sbb
add
xor
jo
adc
add
lahf
nopl
lods
fsubr
mov
mov
data16
in
cmpsb
cmp
dec
shrl
les
pop
arpl
mov
pop
xor
pmuludq
lock
push
adc
pop
hlt
push
mov
incb
sbb
inc
dec
popf
mov
and
fcoml
pop
jle
inc
push
negl
aam
and
sub
push
inc
leave
adc
xor
mov
pushf
adc
test
bnd
xadd
mov
aad
clc
xor
movsb
cmc
or
push
mov
in
outsb
sarb
frndint
popf
xchg
hlt
fcompp
jl
sarb
mov
cmp
les
jle
rcrl
pop
cmp
mov
mov
sbb
lock
adc
aas
sub
cmp
cmpsb
and
fidivl
dec
or
dec
cmp
dec
add
inc
cmc
vsubsd
sbb
add
or
fs
mov
adc
push
push
inc
push
inc
xchg
inc
push
fcompl
pop
push
cmc
adc
daa
xor
add
and
push
push
aad
movsl
outsl
leave
sbb
sbb
dec
iret
mov
mov
xchg
popa
dec
xchg
das
mov
or
scas
cwtl
aam
mov
xchg
jne
rolb
push
xchg
iret
mov
jl
jecxz
in
popf
mov
xor
adc
mov
or
mov
dec
push
jne
xchg
aam
pop
mov
cmp
sbb
and
cli
sbb
mov
fstps
lret
pop
fsubs
or
dec
cmp
icebp
push
js
je
fstl
shrb
dec
jo
pop
mov
or
cmp
std
cwtl
pop
sub
int
pusha
or
inc
xchg
push
call
push
bnd
push
movsl
push
pop
lds
fildll
cmp
mov
mov
cmpsb
enter
mov
sbb
scas
ret
pop
shll
daa
hlt
sub
icebp
adc
and
popf
fldt
or
push
lret
and
jbe
mov
push
aas
data16
fucomip
mov
jb
mov
lods
xchg
je
adc
push
mov
dec
movsl
lds
dec
mov
xor
adc
cli
xor
sbbl
jbe
cmpsb
dec
jae
ljmp
addr16
lock
adcl
js
adc
sub
xchg
scas
lret
jns
cmovne
inc
add
cltd
or
jmp
pushf
jbe
je
push
push
popf
jae
aaa
add
popf
pop
les
add
in
cwtl
inc
pop
xor
inc
stos
mov
in
icebp
inc
out
mov
and
pop
lods
iret
mov
in
cmp
cmp
sub
dec
les
adc
xchg
data16
mov
stos
or
lods
repnz
push
call
xor
repnz
loope
dec
push
jmp
push
scas
lcall
leave
int
xor
mov
cs
mov
mov
push
paddb
or
leave
xchg
mov
mov
sbb
push
aas
dec
push
jns
pop
xchg
movsb
ja
cmp
jmp
xchg
fidivrl
jecxz
push
pop
inc
call
push
add
jnp
shld
xor
icebp
xor
pop
out
dec
ss
inc
sub
lods
test
scas
pop
dec
xchg
inc
and
mov
insb
mov
sbbl
in
stos
inc
xchg
push
mov
pop
clc
out
sbbb
cli
pop
repnz
int3
fldenv
test
scas
xchg
in
mov
cmpsb
and
stos
out
xchg
js
cs
divl
aad
loop
mov
fxam
pop
or
std
cmp
sub
sbb
pop
pop
xor
jb
popf
adc
aaa
dec
or
cmp
inc
test
cmp
cld
sahf
test
in
lods
call
or
mov
fwait
xchg
mov
mov
mov
das
ficoml
jmp
fsubrs
cmp
add
negl
push
sbb
scas
iret
inc
sbb
mov
out
je
push
mov
fdiv
adc
or
jmp
xor
pop
mov
pop
and
stc
inc
repnz
in
xor
mov
xchg
add
mov
mov
and
ss
inc
or
sub
std
lods
into
xor
in
fmul
push
dec
or
xor
sub
cmpsb
fnsave
pop
out
mov
add
or
lcall
popf
push
ficompl
adcl
addb
cmpsb
pop
ljmp
das
mov
rcll
call
sub
mov
pop
lret
mov
out
add
jmp
mov
pmulhuw
jb
or
mov
or
sbb
inc
mov
adc
push
loope
or
orb
std
adc
dec
pop
dec
xor
nop
es
nop
push
jae
mov
jg
xchg
xor
jle
jp
lcall
jnp
ja
popa
and
inc
call
pop
adc
adc
fnstenv
or
mov
sub
add
pop
outsb
xor
fxch
nop
aaa
test
call
je
hlt
mov
xchg
cltd
mov
ja
cltd
test
cmp
mov
sti
inc
cli
shll
sub
push
jne
fs
aas
inc
pop
rclb
dec
cld
cwtl
lock
jp
xchg
stos
push
mov
lret
mov
leave
inc
lods
push
cltd
loop
adc
rol
fwait
push
mov
jbe
test
push
cwtl
out
mov
daa
mov
or
adc
jecxz
add
cmp
hlt
pop
sub
mov
loope
cmp
add
leave
xor
movsb
rcrb
push
xchg
sbb
push
stos
jne
aaa
inc
dec
test
mov
ret
ljmp
xchg
popf
pop
push
test
test
cmp
out
in
xchg
iret
lds
push
out
addb
rcrb
xor
repnz
jnp
jb
mov
sahf
fdivrl
das
mov
push
test
dec
mov
fcoms
xor
dec
and
in
push
imul
cmc
dec
xor
push
in
inc
fcmovne
pop
or
je
jnp
dec
xor
mov
int
adc
cwtl
and
jae
jne
xchg
das
cs
xchg
pusha
int3
cmp
or
mov
xchg
jb
hlt
jmp
xlat
pop
pop
or
push
mov
stos
cli
adc
shll
sbb
stc
cmp
test
mov
sahf
inc
sarb
pusha
outsb
add
xchg
imul
and
scas
insl
inc
bound
inc
imul
or
xor
inc
adc
xor
fistpll
subb
cmpsb
out
ljmp
popf
xlat
sbb
or
ss
push
mov
xor
movsl
mov
into
mov
stos
and
and
inc
cmp
xchg
fiaddl
ret
jl
outsl
push
push
sbb
mov
pusha
imul
mov
xor
jns
sbb
enter
stos
inc
in
lret
pusha
test
jbe
xchg
js
inc
iret
sbb
dec
jecxz
out
lds
push
or
push
in
cmp
mov
jp
in
sbb
push
loopne
xchg
xor
mov
cwtl
jne
xlat
pop
push
movsb
int
enter
sahf
mov
jge
addr16
leave
sbb
jnp
xorb
daa
fs
push
idivb
xlat
lea
cmpsl
mov
push
jo
xor
push
cld
stos
jne
xchg
push
or
les
pusha
scas
or
scas
inc
imul
mov
push
popf
jo
hlt
in
gs
mov
and
dec
pop
lret
cld
aas
pop
jo
stc
add
in
adc
mov
jl
or
jno
notb
add
mov
fmull
lods
fistl
and
sbb
es
xor
pop
cmpsb
les
iret
pop
sbb
int
adc
adc
testb
xor
pusha
push
jl
xchg
fildll
jbe
dec
add
fdivrl
scas
rorl
or
or
lret
cli
xchg
shr
jb
mov
aad
mov
out
insb
mov
mov
sbb
icebp
pop
inc
dec
notb
mov
pop
iret
cli
pop
or
es
xor
fsubrl
leave
ds
clc
repz
and
jl
lcall
popa
int3
pop
inc
mov
dec
popa
outsl
push
xchg
xchg
subb
clc
adc
cmp
int
das
mov
mov
out
and
jle
insl
adc
push
adc
pop
jbe
lahf
fisttpl
stc
or
cld
outsl
mov
inc
push
mov
iret
pop
hlt
push
or
movsl
mov
testl
lahf
in
or
leave
push
lea
mov
repnz
stos
pusha
adc
adc
test
scas
adc
mov
sbb
popf
mov
fsts
lods
mov
pusha
decl
fcompl
cmp
add
inc
arpl
mov
and
sahf
inc
frstor
push
fdivl
test
xchg
pop
mov
jae
pusha
mov
add
into
mov
out
add
or
push
fdivr
inc
test
pop
cmp
mov
mov
ret
filds
fadd
sub
test
scas
shlb
push
repz
mov
lods
cwtl
dec
hlt
movsb
mov
push
mov
add
lock
ficoml
nop
inc
push
xchg
cs
inc
mov
sbb
pop
outsb
sub
lods
pop
repnz
test
je
sub
push
mov
xor
xor
leave
popa
or
mov
rcrb
mov
push
mov
rcl
dec
mov
push
xchg
or
cmc
pop
out
ficompl
popl
rep
fsubr
xor
rcll
xchg
push
cmpsb
mov
das
cli
xchg
adc
fcmovnb
dec
or
xchg
cmp
jae
sbb
nop
mov
inc
ja
addr16
je
or
loop
push
push
xor
inc
xchg
in
push
mov
xchg
jae
push
cmp
jae
aaa
repz
aaa
push
dec
insl
repz
leave
and
jnp
aam
in
pushf
push
xchg
sbb
cmp
push
repnz
mov
gs
xchg
inc
pop
jmp
push
jns
mov
mov
xchg
fbld
push
test
insl
add
inc
mov
jbe
bound
pop
test
add
inc
mov
mov
xor
rcrl
add
ret
dec
mov
clc
or
add
sbb
in
cmp
lods
mov
stos
repnz
sub
pop
aad
push
mov
lcall
fldcw
or
fiadds
scas
pop
mov
mov
push
and
into
outsl
jno
mov
pop
ret
jb
faddp
shrl
ret
cmpsb
cmp
jecxz
loop
outsb
cmp
jnp
out
rorb
push
fdivrs
push
imul
in
sub
sbb
mov
ret
popa
pxor
xchg
and
sbb
push
dec
xorb
js
rcl
push
imul
dec
cld
push
pushl
outsb
loope
loopne
xor
dec
fildll
or
ja
add
inc
gs
lods
imul
sqrtps
test
adc
and
jg
fs
push
jo
jmp
inc
mov
lret
mov
mov
xor
xchg
pop
ss
xorl
ret
popf
cwtl
mov
pusha
sahf
cli
int3
ss
push
mov
inc
jecxz
pop
or
fucomi
xor
scas
mov
aam
inc
pop
cmc
jb
fsubr
xchg
es
jbe
lahf
sub
xchg
and
ffree
out
push
sub
mov
int
mov
test
or
xchg
popf
adc
sub
cmp
adc
and
hlt
fistpll
dec
sahf
repnz
aad
out
sub
xchg
jns
sbb
stos
jl
insl
add
jne
jae
psraw
scas
pushf
push
fiadds
and
mov
pop
sub
cmp
dec
jae
and
dec
push
hlt
cli
sti
adc
sub
dec
push
icebp
xor
mov
dec
adc
rcll
or
dec
pop
aaa
mov
rorl
pop
in
add
add
aas
shll
adc
cltd
lahf
sbb
rorl
mov
cli
popa
fstpl
sahf
lods
repz
ficomps
out
outsl
pop
and
cld
push
pop
in
insb
testb
sbb
jmp
iret
push
mov
fbstp
clc
stos
xor
jge
push
jnp
push
subb
lahf
xchg
jne
mov
sbb
sarb
in
inc
ja
add
dec
pop
in
add
mov
cwtl
fistl
ja
test
xchg
push
mov
xor
and
imulb
pop
add
mov
cmpsb
in
fwait
jno
sbb
addr16
testb
ljmp
mov
loope
out
sub
cmp
shll
xchg
mov
push
xchg
adc
jb
or
icebp
mov
in
or
hlt
popa
push
add
xchg
mov
test
movsl
xor
jbe
cmp
inc
fisttpl
jecxz
and
or
push
stc
test
scas
xor
shlb
subb
mov
imul
mov
jb
aaa
xor
mov
rcll
inc
int3
sbb
pop
arpl
pop
mov
stc
cmp
jo
mov
sub
out
stos
aaa
push
imul
sub
push
cmpsl
ror
or
movsb
insl
jp
sbbl
cmp
sub
jl
sbb
mov
xlat
pop
sbb
data16
add
rclb
jecxz
inc
jno
sbb
ret
das
jge
test
inc
xchg
pop
ja
subb
bndstx
mov
or
inc
cwtl
stc
and
mov
sub
sbb
cmp
xchg
sbb
lea
push
mov
xlat
mov
into
lret
or
xchg
sbb
pop
sub
xchg
xchg
mov
and
shll
mov
pop
or
cwtl
mov
sbb
and
adc
movsl
in
mov
cli
rcr
ja
or
fwait
sbbb
mov
pop
aas
f2xm1
or
push
mov
adc
cmp
test
push
dec
mov
inc
sub
xchg
inc
loop
call
daa
xchg
sbb
mov
loopne
push
call
xor
mov
loope
out
fsts
or
arpl
ds
inc
push
inc
pop
int3
and
lret
inc
stos
ds
jb
push
jne
sub
mov
mov
mov
sub
pusha
fwait
sbb
jne
sub
test
arpl
fistpl
lret
std
mov
subb
push
sti
or
push
and
jmp
fmul
mov
cli
arpl
sub
add
stc
hlt
mov
adc
clc
xchg
sbb
ja
mov
or
sbb
mov
cmp
addb
stc
iret
cmpb
sbb
fstps
mov
sti
shlb
rcl
dec
arpl
push
mov
cwtl
insb
and
fs
cmp
push
jecxz
inc
push
sbb
pop
sub
sbb
psubusw
cmc
sbb
fadd
dec
pusha
mov
jmp
sahf
inc
arpl
mov
sti
pop
test
mov
mov
sbb
or
scas
mov
dec
pop
dec
test
sahf
lods
imul
ret
cld
lcall
repnz
push
in
dec
mov
je
je
xchg
push
bound
xor
fs
sti
mov
xor
cs
aam
in
lock
mull
in
xor
xchg
mov
outsl
fwait
icebp
cwtl
adcb
dec
outsl
jmp
in
mov
mov
lret
insb
mov
lock
mov
into
push
mov
add
cwtl
repz
inc
in
jo
xchg
je
repnz
pop
fwait
mov
xchg
lcall
sarl
mov
cs
lds
pusha
mov
mov
adc
jne
neg
popa
cmp
adc
jo
mov
sbb
ljmp
daa
fwait
and
gs
in
dec
mov
inc
sbb
fwait
cmpsl
xlat
xchg
xchg
pop
cmc
cmpsl
sarb
imul
lret
fwait
sti
fidivs
push
popf
mov
jnp
jecxz
adc
scas
call
mov
test
cmp
jo
loop
xlat
loop
repz
adc
cmp
inc
mull
mov
xor
movsb
xor
daa
mov
lds
stos
mov
iret
pop
shll
js
xchg
insb
add
popa
ss
adc
test
xor
mov
hlt
add
sahf
xor
sub
mov
orb
xor
sahf
pop
out
outsl
lds
xchg
jbe
dec
cmp
gs
jg
and
lds
leave
je
outsl
inc
stos
ret
mov
push
ja
iret
pop
add
pop
je
pusha
dec
int
adc
into
xchg
xor
sub
cltd
popf
or
xor
stos
lcall
iret
xchg
push
or
inc
stos
dec
lahf
add
mov
daa
fbld
mov
dec
movsb
call
in
cmp
and
cltd
push
xor
dec
loopne
sbb
scas
add
xor
or
inc
int
lods
jg
ficoms
push
xor
jle
or
fiadds
mov
jno
lods
mov
jle
enter
sub
mov
inc
out
test
out
inc
cs
or
je
mov
inc
sti
test
adc
aad
cmp
enter
ds
insl
repz
push
rolb
mov
pop
lods
scas
inc
clc
jns
lods
mov
scas
in
in
stos
pop
nop
xchg
movsl
inc
xchg
mov
jg
sub
and
xchg
xchg
jne
fldenv
mov
inc
in
xor
inc
push
jmp
scas
adc
add
lods
cmp
dec
rcrb
movsb
loop
popf
xor
inc
mov
sbb
shrb
mov
movsl
pop
and
fwait
and
mov
cmpb
sub
and
cmp
push
inc
addl
outsl
test
das
mov
and
adc
jge
fists
xchg
pop
mov
cmp
dec
jmp
mov
lret
or
jne
lahf
int3
fmul
cltd
or
and
out
push
xchg
push
xor
xchg
and
jo
inc
out
push
push
ljmp
jno
subl
shlb
shrb
cmc
shl
call
or
ss
sub
jecxz
sbb
mov
lret
lock
mov
movsb
arpl
sbb
push
inc
aaa
sbbb
cld
stos
movsb
daa
loopne
pop
and
mov
jl
rcrb
mov
sub
nop
pop
pop
mov
mov
lret
bound
pop
stos
mov
dec
mov
rclb
cli
xchg
lods
push
and
int
xor
ja
mov
ds
xor
clc
inc
ds
xchg
fcompl
pop
call
lret
bound
aam
dec
mov
mov
and
les
loop
sub
pop
adc
pop
mov
aaa
hlt
mov
rclb
outsl
loopne
cmp
pxor
pop
cltd
jmp
or
cmpl
xchg
xchg
sbb
jp
inc
and
jb
pop
add
xchg
push
adc
push
and
movsb
sarb
in
jp
fld
loope
mov
adc
orl
aaa
movsb
pop
mov
loop
shr
movsb
sti
xchg
rclb
das
jp
cwtl
bound
repnz
mov
stc
daa
adcl
scas
cmp
sbbl
or
lock
cmp
push
mov
mov
add
adc
xor
daa
jno
inc
jo
lret
cltd
gs
push
jne
nop
mov
ds
mov
clc
sbb
or
or
jl
adc
sbb
sub
mov
pop
test
or
jge
or
jl
sub
adc
pop
cwtl
ljmp
sbb
aas
pushf
rorl
jne
adc
inc
pushf
bound
mov
cmp
loopne
sub
rcl
test
and
cs
inc
in
mov
xor
or
mov
icebp
add
je
fwait
imul
adc
mov
cwtl
clc
or
int3
fs
std
mov
loope
sub
push
xchg
dec
pushf
dec
xchg
jb
stc
jns
add
or
out
push
inc
test
xchg
fldenv
shlb
movsb
sbb
movsb
pop
repnz
dec
mov
cmpsl
jbe,pt
ljmp
xor
add
test
stos
jp
stos
imul
mov
pushf
dec
xchg
sahf
push
in
je
shlb
mov
scas
fsubs
sbb
ss
in
push
push
dec
ja
sarb
cmp
mov
push
fxtract
or
push
pop
push
mov
pop
scas
xchg
mov
sub
lahf
fists
xlat
push
sti
or
out
xor
movsl
add
jns
lcall
shll
addr16
pushf
sarb
mov
test
lret
cmp
jns
ds
call
jnp
xchg
adc
rolb
shrl
sub
push
add
add
mov
inc
imul
popf
es
aaa
pop
or
xchg
cmp
ret
cs
idivl
lret
sub
push
nop
sub
mov
dec
loop
cmp
push
jmp
adc
jge
subl
cmp
sbb
sub
test
jp
fdivrl
adc
jo
scas
call
pop
and
push
leave
pop
repnz
addr16
cwtl
pop
mov
pop
push
negl
in
test
mov
stos
out
mov
aam
dec
xor
inc
lods
into
mov
frstor
ds
hlt
mov
push
fimull
aaa
cmp
out
out
mov
mov
ret
fdivrs
ficomps
push
std
cld
cmp
rcrl
mov
mov
sbb
sub
xor
dec
cmp
popf
aad
iret
sub
xor
inc
sbb
mov
mov
cmp
cmp
push
addr16
mov
mov
movsl
ret
add
dec
cmp
adc
bound
je
fbld
mov
mov
push
dec
pop
add
sub
das
mov
into
loope
dec
outsb
sarb
out
js
dec
sbbl
clc
scas
test
sbbb
rcrb
test
mov
fdivl
jl
push
in
sub
push
or
test
xor
gs
sub
ja
popa
scas
and
das
or
cmp
in
mov
ret
arpl
subb
cs
inc
pusha
push
call
popa
adc
adc
mov
cltd
jl
fisttps
pop
rcl
stos
cmc
pop
sub
jno
mov
mov
jge
ror
insl
adc
or
shll
mov
ja
arpl
dec
arpl
mov
scas
cmp
je
popa
xor
cmpsb
std
inc
fdivs
inc
fnstenv
lock
popa
fmull
addb
or
sub
adc
mov
sbb
out
mov
fstp
mov
repz
cmp
loope
pop
shrl
and
jle
mov
test
sub
enter
pop
jb
jnp
push
lds
pusha
pop
mov
push
cwtl
jmpw
or
jl
pusha
repnz
dec
rolb
mov
neg
and
lret
and
bound
xchg
jnp
xchg
add
dec
sti
jbe
cmp
inc
cwtl
sbb
or
mov
push
lods
aad
mov
inc
jmp
push
cmp
adc
aaa
pop
jg
xchg
mov
pop
andl
cmp
jbe
scas
and
adcl
xchg
push
hlt
add
loop
mov
aam
test
add
cmp
cld
xchg
dec
dec
cmc
inc
dec
lods
lahf
ss
lods
lahf
stos
sub
in
aas
neg
and
jecxz
xchg
ja
xchg
mov
sub
push
mov
mov
cmpsl
std
jo
mov
in
push
iret
cmpsl
popa
pop
mov
outsb
or
xor
mov
out
adc
xchg
js
sbb
pop
adc
bnd
dec
aas
and
icebp
shl
pop
jl
stc
cmp
cmp
push
sbb
outsb
pop
mov
mov
jl
dec
and
aas
mov
mov
inc
sbb
add
push
hlt
out
inc
dec
js
rsm
outsl
fstl
arpl
shr
lds
popa
pop
cwtl
cmpsl
pop
fnstcw
xchg
jle
sti
test
lret
jae
adc
pop
popa
inc
mov
pop
lret
out
jns
adc
jg
in
shrl
ljmp
call
adcb
push
jno
sub
mov
xchg
sub
imul
xor
inc
outsb
je
pop
sub
fadds
divl
push
and
sbb
jns
aad
push
mov
fisubs
sarb
lods
cli
mov
stos
daa
mov
stc
adc
mov
popl
sbbb
inc
int
out
sbb
flds
lods
out
mov
inc
clc
xor
add
push
push
jecxz
cli
shrb
push
mov
out
call
stos
daa
loopne
pop
push
mov
or
mov
adc
xor
xchg
jns
mov
hlt
mov
cli
pop
mov
mov
int3
shlb
pop
cs
dec
lret
xchg
out
and
and
pusha
stos
rolb
jae
mov
mov
dec
cmp
dec
clc
fsts
cli
pop
jbe
test
push
ret
pop
or
pop
out
pop
mov
movb
int
push
shl
push
shr
ret
pushf
and
dec
xchg
cmp
aaa
sahf
push
notl
pop
push
loopne
nop
sahf
mov
aad
lds
test
sub
stos
and
push
loop
fistpl
mov
or
insl
and
push
pop
mov
hlt
inc
loope
clc
xchg
sub
mov
jl
test
fucomi
cmc
jmp
jecxz
lods
outsl
lods
xchg
adc
fsubl
mov
mov
lods
ds
scas
xchg
fstps
dec
dec
mov
shlb
movsb
int3
ret
lds
jmp
mov
lock
int3
aam
cmc
adc
mov
jbe
cli
dec
xchg
outsb
test
rclb
enter
push
and
test
xchg
mov
jae
cld
sub
mov
mov
outsb
sbb
adc
xchg
xor
sbb
jb
add
sbb
imul
xchg
sbb
and
scas
sub
push
iret
rcl
jnp
loop
jne
outsl
mov
or
scas
out
xchg
or
xchg
adc
mov
push
xchg
ljmp
aad
add
not
mov
mov
sbbb
cmp
cltd
scas
mov
mov
adc
sub
lods
insl
sub
imull
xchg
hlt
cmp
cmpsb
jge
leave
add
adc
fwait
sti
dec
test
xchg
add
adc
adc
enter
mov
mov
js
adc
jbe
sti
loop
lea
add
cmp
pop
fwait
outsl
test
sbb
jp
jae
dec
sbb
dec
inc
std
cs
jecxz
mov
into
jle
sub
dec
pop
cmp
cmpl
movsl
pusha
cmp
lahf
and
and
je
adc
xchg
test
lret
sahf
out
adc
cmp
push
movsl
popf
pusha
test
sbb
sbb
push
mov
sub
sbb
mov
nop
mov
stc
push
lcall
into
fmuls
jo
adc
in
das
fadds
and
push
test
arpl
lret
sahf
xor
add
mov
nop
add
mov
inc
mov
jecxz
movsl
push
jmp
or
imul
dec
movsl
xor
das
adc
ss
pop
shl
xor
adc
stos
fisubrl
push
lock
inc
popa
inc
sbb
ret
and
inc
dec
loop
adc
lods
inc
jle
int3
sti
fdiv
mov
sbb
cltd
clc
cmp
lret
popa
stos
pop
xor
addr16
or
sub
cmp
xchg
jg
pop
out
mov
jmp
sub
push
andl
jle
mov
out
mov
dec
mov
jmp
add
ret
fmuls
jg
xchg
insl
or
push
push
and
sti
xchg
xorl
dec
rcrl
jge
mov
clc
in
add
ret
jnp
dec
sarb
aaa
add
and
pop
fnstsw
jno
scas
mov
adc
iret
js
pop
xor
popf
and
xchg
idivl
or
cmp
fisttpll
lods
addb
cltd
in
mov
add
lods
pop
adc
scas
mov
sub
mov
sbb
xor
lret
stc
or
movsb
and
loop
ds
or
mov
cmp
cmp
mov
mov
pushl
and
mov
std
jo
xchg
stc
xchg
inc
fdivl
push
popf
cld
push
arpl
fcompl
push
repz
imul
test
jno
jae
and
pop
cmp
dec
dec
ss
mov
andb
sbb
mov
repnz
sbb
adc
xchg
ja
out
pop
adc
stc
mov
out
pop
jg
mov
ror
xchg
dec
adc
sub
mov
cli
lret
dec
lock
add
sub
and
adcl
dec
pop
in
sbb
pop
push
mov
popf
xor
push
scas
arpl
stos
push
cmp
cmp
push
dec
test
repnz
fwait
jmp
mov
mov
push
add
dec
insb
adc
mov
into
cmpsl
jp
ret
inc
and
mov
push
mov
imul
push
cltd
mov
dec
mov
mov
xchg
mov
lret
insl
xchg
iret
aaa
std
aaa
fwait
mov
mulb
lret
mov
sar
leave
fstps
sbb
xor
scas
shl
mov
mov
xchg
and
dec
fidivs
test
lock
fdivrp
test
jae
mov
stos
and
pop
or
lret
lea
and
test
loope
xchg
out
mov
or
push
fbld
stos
jae
cmp
dec
incl
xchg
mov
cmp
and
cs
mov
fs
jbe
add
xor
pop
pop
cwtl
lcall
dec
xchg
mov
popf
jb
fists
add
loope
and
push
pop
js
aas
fisubl
lcall
inc
pop
dec
into
lahf
pusha
pop
pusha
pop
movsb
icebp
sub
add
adc
lock
adc
add
xor
bound
lahf
into
push
orl
int
inc
out
sbb
movsl
incb
mov
inc
fidivs
pop
cwtl
sub
cmpsb
and
mov
xchg
arpl
dec
dec
clc
insl
rorb
jl
pop
jg
fidivs
pushl
mov
scas
test
std
xor
lds
rorb
mov
ret
mov
mov
addr16
dec
xor
jle
arpl
pop
fcompl
imul
xor
xor
lds
mov
pushf
bound
pop
mov
mov
jg
sbb
push
mov
mov
and
push
out
mov
rolb
pushf
ds
adc
pop
cmpsl
cmp
sbb
and
andl
adc
rcl
jge
sub
push
dec
cmp
or
add
fildl
bound
out
orb
cltd
lods
cmp
push
loop
scas
loopne
jns
cmp
pop
push
adc
cmp
repz
out
add
sbb
add
dec
fwait
cmp
mov
imul
insb
imul
jae
push
dec
xchg
sub
adc
jo
pop
das
into
xchg
pop
mov
add
pop
inc
xchg
xchg
fdivs
out
sub
push
and
fcomps
out
dec
sbb
and
mov
or
loope
push
cmpsl
dec
xchg
jno
clc
and
jnp
and
outsl
jle
lret
cld
xchg
mov
push
jp
inc
ljmp
loopne
ret
loope
lahf
jno
imul
jmp
push
pop
fisttpl
lock
repz
mov
sbb
addl
dec
pop
cmpsb
stos
mov
or
cli
shrl
popa
out
inc
pop
loop
jno
cmc
mov
loop
out
mov
adc
ss
sub
mov
mov
mov
mov
dec
dec
and
cmovg
xor
aas
mov
add
push
ss
cld
test
push
out
cs
scas
ja
adc
notl
popa
mov
jle
dec
or
jno
iret
aaa
rclb
push
ret
ret
pop
imul
dec
mov
aad
in
clc
fnstcw
ret
xchg
cltd
mov
sub
js
dec
fldt
popl
sarb
stos
mov
mov
push
test
repz
push
std
lsl
add
pop
jle
push
dec
pop
repz
sbb
cmp
add
sub
fcomip
les
adc
subb
aaa
xlat
jecxz
adc
mov
icebp
call
stos
mov
xchg
dec
aaa
jmp
rcrb
xchg
jge
std
pop
mul
push
xor
or
movsl
push
mov
sbb
pop
push
imul
imul
dec
jle
int3
inc
dec
pop
int3
ret
xor
cmp
mov
loopne
mov
test
aam
adc
mov
pop
sub
jp
jmp
adc
je
add
jmp
ret
out
cmp
jmp
push
cmp
ret
out
jp
sahf
jmp
psrad
push
push
and
mov
pop
sub
iret
jb
loope
inc
sbb
ror
ljmp
xchg
and
clc
cmp
fwait
xor
cmpsl
mov
fiadds
out
iret
popf
hlt
jnp
inc
push
xchg
xchg
pop
fidivs
cmpsb
push
das
cmp
add
pop
repz
shrb
pop
loopne
add
cmc
or
pop
test
xor
outsb
jl
add
sub
lds
pop
cld
xchg
std
call
mov
jnp
mov
jg
aaa
es
mov
cltd
stc
cld
testl
mov
call
enter
lret
int3
pop
out
push
dec
popa
arpl
jne
pop
cmp
loopne
xchg
fiadds
sub
stos
fldt
jge
sbb
sub
sub
mov
loope
or
insb
cmp
jmp
cmp
imul
adc
sub
lret
dec
ficoms
cltd
pop
sub
std
aaa
stos
stos
fstpt
aad
shlb
add
inc
inc
hlt
je
cmpsl
movsl
adc
ljmp
push
fidivrl
sbb
mov
aam
push
out
or
pop
cmp
dec
pushf
test
insb
cwtl
jne
cli
xchg
sar
dec
loope
out
add
fdiv
adc
aaa
dec
loopne
jl
imul
jle
mov
jne
sbbl
mov
mov
mov
dec
xchg
out
xlat
loope
popf
fldcw
mov
stc
jae
sub
push
add
dec
outsl
jp
mov
push
test
lcall
mov
jl
inc
fisubl
inc
or
dec
mov
jmp
into
push
mov
jmp
test
ss
jae
in
push
sti
test
sub
add
dec
ja
in
scas
or
cmp
xor
sbb
mov
mov
loope
out
mov
cmpsl
add
fwait
popf
adc
cmp
mov
and
ljmp
jle
int
push
dec
mov
pop
lock
test
pop
lds
int3
cmp
cwtl
das
cltd
daa
frstor
add
xchg
sub
lods
nop
mov
lret
push
mov
inc
into
data16
cmp
xlat
xchg
sub
or
cs
insl
mov
jno
outsb
jp
cmp
fcomps
xchg
pop
psrad
test
sbb
stc
int3
arpl
pop
push
test
jmp
or
ret
inc
out
insb
outsl
sarb
mov
enter
mov
ret
test
mov
lods
cmp
sbb
jl
sbb
les
ja
insb
in
in
inc
lret
cmp
fwait
xchg
leave
in
sub
lods
mov
xor
je
push
xchg
lods
int3
add
xchg
push
aaa
jae
mov
mov
imul
fmull
sbb
pop
faddp
imul
xchg
roll
jo
mov
and
fwait
xor
push
xor
push
popa
cmp
fsts
stc
lea
test
scas
subb
pusha
es
jnp
mov
lret
push
scas
push
in
loopne
daa
mov
test
popa
insl
sub
shrl
inc
or
mov
jg
pop
aad
mov
xor
mov
push
sbb
arpl
adc
movsl
dec
dec
iret
inc
ja
pop
test
inc
out
in
js
shll
fbstp
sbb
fstl
fwait
ja
mov
out
push
out
xchg
sub
push
movsl
and
fnsave
shll
out
mov
jb
add
nop
ss
mov
stos
or
test
out
mov
mov
dec
dec
sub
pop
adc
sahf
sub
sbbl
xchg
out
test
mov
or
push
sub
push
mov
fs
in
scas
inc
pop
adc
lods
aad
les
das
rol
push
pop
push
mov
dec
loopne
stos
and
decl
stos
fistpl
repnz
xor
out
push
stos
inc
inc
and
out
mov
xchg
and
push
fidivs
sub
or
pop
out
pop
lahf
jge
shrl
repnz
popf
pop
add
mov
leave
lods
adcl
or
inc
sub
cmpsl
or
xchg
mov
into
fdivl
cmpsb
or
pop
xchg
mov
xchg
pop
das
sbb
imulb
pop
loopne
in
and
orl
pop
cmp
cmpsb
leave
psubusw
sti
popa
rorl
jnp
xchg
cs
nop
les
or
sub
mov
leave
mov
lret
jmp
or
cmp
push
cltd
mov
xchg
rorl
adc
push
and
testl
add
sub
stos
inc
sbb
and
std
sub
pop
jl
push
jbe
ja
dec
xchg
in
lcall
or
sbb
ret
xchg
in
rcr
in
repz
leave
int
xor
mov
hlt
aad
imul
fsubr
outsl
and
int3
ljmp
fstp
cwtl
push
xchg
addl
jo
ljmp
fnstenv
jmp
adc
lret
sub
std
cmpsb
int3
cmc
xlat
fisttpll
add
mov
inc
mov
incb
pop
xor
dec
xchg
adc
adc
or
push
ljmp
dec
lods
arpl
loopne
notb
shlb
jno
les
and
aam
mov
test
hlt
xchg
mov
fs
xor
ja
fsubs
jo
adc
fstpt
outsl
ss
stos
arpl
js
mov
cmpsl
out
in
test
xor
daa
push
pop
in
hlt
adc
jge
shl
xor
lods
outsl
cmc
aad
pop
jb
jmp
push
into
adc
sub
push
dec
jp
and
cmp
ss
mov
cmp
jecxz
popf
sbb
pop
in
cmp
jbe
inc
call
sub
jo
pop
in
sbb
or
movsl
lea
es
xor
arpl
inc
cmpsl
into
int
insl
jnp
push
repnz
jno
aaa
bound
mov
xlat
outsb
xor
jae
sbb
sub
in
ret
xor
jno
cmp
ficompl
enter
and
ljmp
add
notl
push
push
mov
lret
lods
inc
pop
inc
movsl
push
imul
test
fwait
cmp
das
mov
dec
pop
test
fwait
adc
push
mov
int3
fidivl
jmp
nop
jno
push
lcall
add
sub
dec
push
lcall
in
dec
in
sbb
and
insl
fs
xchg
hlt
dec
jae
outsl
push
inc
icebp
repz
pushf
adc
jl
jnp
shrl
sub
xlat
repnz
in
lret
dec
pop
xchg
ljmp
push
lods
rcl
loop
repnz
fcmovb
adcb
pop
jo
stos
fsubrs
adc
xchg
in
sbb
ret
add
push
insb
std
fstpl
mov
adc
data16
pop
fcomps
and
adc
push
inc
or
and
xlat
outsb
adc
scas
and
xor
inc
clc
fidivs
cli
lret
rcrl
imul
shl
sbb
fnsave
push
sub
nop
sub
dec
and
or
bound
adc
push
inc
cmp
lcall
jae
adc
sbb
xchg
sbb
pop
jbe
mov
or
sahf
stos
pop
daa
mov
rcll
dec
jae
fmulp
inc
pop
aam
fbld
xchg
fbld
inc
push
push
rcll
outsl
adc
push
adc
xor
or
adcl
fcomi
data16
outsb
sub
inc
lods
push
push
jecxz
test
cmpsl
lcall
sbb
outsb
jb
ret
sbb
or
orl
out
js
push
cmp
std
fistpl
outsl
pop
daa
or
int3
mov
inc
or
cmpsl
out
aad
enter
jmp
sub
mov
adc
push
movl
cmp
idivb
cmp
jecxz
push
and
push
inc
test
xchg
push
fnsave
dec
pop
scas
push
sahf
aam
sbb
cmpsb
dec
ds
jae
cmp
lods
dec
sbb
test
jp
in
mov
inc
in
rcll
enter
fucomp
adc
push
ljmp
imul
into
and
push
std
cwtl
shrb
enter
dec
cmp
rolb
pop
stos
fnstenv
mov
lcall
push
je
jle
jb
add
mov
cmp
mov
xchg
cld
lcall
sahf
sbb
cltd
sbbb
add
push
cmp
push
add
jmp
adc
test
ss
pop
fs
imul
out
pop
dec
dec
pop
shrb
or
pmaxub
enter
xor
movl
xor
femms
inc
pop
mov
adc
ret
cmp
fs
aas
int
popa
pop
scas
sbb
adc
lock
jne
aas
add
mov
cld
or
adc
add
xchg
sub
movsb
mov
mov
xchg
dec
add
js
jp
xor
pop
es
mov
push
sbb
fs
ss
in
bound
inc
scas
mov
out
into
mov
popa
add
mov
or
jne
inc
sti
pop
xchg
test
sub
hlt
lret
daa
setbe
call
add
imul
add
sub
pushf
mov
mov
sar
dec
inc
dec
std
clc
xor
stos
ret
fiadds
adc
xchg
fucomp
xchg
xor
insb
add
xlat
divb
out
cmp
inc
jg
lock
cmp
les
jnp
mov
adc
or
mov
imul
std
imul
mov
cld
das
outsl
push
popf
add
sbbl
test
sahf
pop
ret
cmp
icebp
cmp
les
imul
fisubs
lret
push
dec
add
popa
cld
pusha
sbb
fwait
xor
and
in
pop
fsubs
mov
mov
shlb
clc
popl
nop
push
insl
inc
ficompl
mov
jmp
xchg
sub
repz
ds
dec
jl
cli
ss
icebp
fcmovnb
dec
or
les
test
lods
out
cmp
jle
rclb
pop
in
adc
into
mov
lods
out
push
dec
js
pop
inc
outsl
pop
aam
out
ret
cmp
inc
int
loop
cmp
cld
add
dec
loop
xor
stos
jns
out
gs
push
pop
mov
loope
mov
pop
dec
push
sar
ret
loopne
loopne
popa
leave
xchg
in
mov
mov
cmovp
xlat
cmp
insb
mov
jecxz
cmp
and
xlat
jmp
int3
subb
push
cmc
push
outsb
sub
push
xchg
fs
cmc
mov
je
jne
orl
das
inc
add
ficompl
mov
hlt
gs
xor
fistpll
enter
in
xchg
adc
rcrb
roll
inc
pop
iret
ss
sbb
jle
data16
pop
push
dec
shrl
and
add
inc
loop
sbb
xchg
repz
add
pop
xchg
lock
mov
push
gs
pop
xor
mov
fists
ret
adc
popf
add
xorb
jbe
daa
sbb
das
mov
jne
inc
mov
sahf
repnz
cmp
mov
sti
stos
inc
pop
or
sbb
cwtl
cmp
xchg
mov
mov
aaa
inc
xor
jl
adc
fwait
push
icebp
es
das
fstpl
adc
stc
ja
cmp
and
loop
and
scas
inc
cmp
add
mov
fistpll
push
push
pop
pushf
xor
jne
or
mov
test
add
mov
adc
es
add
mov
loop
and
pop
movsl
aad
dec
pop
rcl
out
push
jmp
sbb
inc
jg
lea
into
mov
pop
pop
xor
mov
mov
pop
std
cld
stos
aad
loope
call
jl
es
xchg
push
int3
push
mov
jne
iret
xchg
ss
sub
push
in
push
push
jne
cmp
jecxz
sbb
inc
pop
push
pop
xchg
cmp
push
popa
nop
add
cmc
or
jbe
add
adc
addb
ret
in
add
hlt
cmp
cli
insl
adc
mov
pop
mov
out
add
jl
inc
int
fildll
adc
add
stos
mov
push
out
adcl
movsl
jne
sarl
jp
cmpsl
sbb
mov
shlb
mov
pop
cltd
mov
cmp
sub
jmp
out
inc
shr
stc
nop
push
cmovl
mull
popa
or
pop
iretw
xchg
je
mov
xchg
cltd
ror
inc
and
into
fstl
mov
push
mov
lret
pop
sti
fs
xchg
xor
and
sub
mov
mov
ret
pop
movsb
jns
cmp
adc
test
test
lea
ret
pop
cmp
dec
clc
pop
insb
sub
sub
lea
mov
in
and
pop
fwait
mov
xchg
add
pop
std
sahf
inc
or
loop
xor
popf
fimull
inc
sbb
inc
aad
clc
jge
in
sbb
adc
mov
xchg
sub
sub
mov
inc
mov
lods
movsb
loopne
mov
mov
jge
push
jne
movsl
pop
lcall
in
mov
xchg
dec
in
xchg
cmc
dec
out
jge
lods
inc
stos
mov
call
shll
fidivrl
push
inc
cmp
popa
mov
push
push
inc
rorl
dec
fists
ret
ds
lret
in
popa
pop
in
push
sub
and
dec
repnz
inc
jns
sbb
lret
aam
cmp
cmp
leave
pop
pop
in
cmpsb
pusha
idivl
icebp
sahf
push
dec
inc
lret
les
movsl
cwtl
das
adc
mov
fldenv
and
lea
aad
pop
scas
enter
cmpsb
ljmp
or
inc
mov
fwait
dec
inc
faddl
xor
jmp
adc
adc
jnp
pushf
lods
mov
stc
mov
stos
test
outsb
ret
clc
and
adc
mov
xchg
jg
in
cmpsl
std
pop
sbb
cmp
fwait
or
mov
xchg
add
or
push
xchg
lock
icebp
es
sarb
dec
jbe
cltd
bound
adc
or
jge
xchg
dec
xchg
xchg
inc
sub
cwtl
mov
divb
mov
jg
mov
inc
outsl
pushf
jne
in
xchg
xchg
xchg
add
call
cmpsb
clc
adc
cmc
inc
cmpsl
das
jne
mov
rcl
jno
mov
cmp
mov
cmp
push
add
andb
mov
lods
jmp
mov
sbbb
jl
js
or
ljmp
jb
shrb
cmp
into
cmc
repnz
repnz
cmpsb
stos
les
pop
cwtl
mov
loop
jge
int3
sahf
inc
movsb
aas
arpl
inc
in
sbb
cwtl
stos
and
lock
scas
and
sar
inc
mov
push
pushf
cli
fnsave
and
xor
nop
arpl
mov
lods
pop
push
hlt
jne
popf
xor
sbb
xchg
and
jo
mov
das
sub
daa
arpl
lock
lods
scas
add
outsl
insb
clc
sub
add
mov
out
inc
push
hlt
cmp
xor
sbb
popf
ret
or
sub
jl
mov
popl
xchg
xchg
roll
shr
repnz
adc
push
ja
inc
fcoml
loopne
std
aad
dec
inc
test
scas
mov
jg
cmc
das
addr16
add
jb
jnp
sbb
push
or
adc
jo
notl
bound
popf
stc
outsl
xor
dec
inc
aas
pushf
dec
jge
mov
int
into
xor
insl
inc
scas
insb
jb
fxch
mov
sarb
dec
add
rcrb
pop
out
and
adc
shr
popf
shrb
repnz
mov
mov
and
test
sub
inc
push
testb
sub
mov
sub
ja
imul
and
or
push
scas
loope
mov
js
sub
divl
jecxz
icebp
xlat
jnp
sub
jnp
les
ja
ss
loope
pop
sbb
or
jne
sub
cli
repnz
jle
inc
cltd
aaa
in
add
cmp
jecxz
out
ror
scas
mov
mov
or
int3
adc
xor
sub
mov
or
and
adc
push
fdivrs
cltd
push
shrl
mov
pop
mov
addl
loopne
jge
cmp
push
iret
cmpsb
dec
jb
outsl
add
pushf
and
shrl
outsb
pop
sub
jge
or
sbb
sub
mov
fnstcw
in
adc
cmp
aaa
push
fwait
jmp
xchg
int
movsb
shl
mov
mov
mov
mov
pop
sub
mov
imul
loope
fsubrp
jl
xchg
add
mov
mov
and
sub
xor
sbb
loopne
jmp
adc
xchg
mov
xor
cmp
jl
dec
mov
pop
das
mov
cmpsl
jns
sbb
mov
sub
jecxz
mov
outsl
jp
lret
xlat
outsb
mov
jle
dec
or
cmp
mov
mov
sbb
dec
insl
negb
push
outsb
pop
sti
mov
xchg
jbe
xchg
xor
xchg
in
add
and
mov
les
jle
fs
aas
pop
in
shl
test
mov
xchg
gs
dec
xchg
add
or
jb
lahf
cmpsl
push
mov
jl
ljmp
insb
lds
dec
dec
sub
mov
fs
xchg
rcrl
mov
and
mov
hlt
cmp
push
cmc
or
mov
push
dec
push
fnstcw
and
popa
mov
hlt
pop
dec
xorb
sub
add
dec
btr
leave
and
test
hlt
pop
xchg
ja
rcll
movb
lcall
outsl
push
jg
jle
mulb
neg
mov
pop
sbb
enter
sub
jbe
sbb
shll
add
outsb
mov
test
test
in
fnstsw
fmulp
int
ja
mov
inc
inc
cmpb
add
ss
push
sub
pop
sahf
movsb
clc
push
xchg
sbb
push
mov
pop
je
insb
sub
scas
rcrb
sub
pop
mov
lcall
or
and
es
ret
daa
cmp
clc
mov
xor
add
inc
inc
pop
and
addr16
loopne
jae
mov
int3
loopne
insl
sub
jge
sbb
xchg
into
or
call
or
mov
sub
jl
ret
pop
rcrl
push
in
push
mov
fchs
in
fwait
inc
cmp
aaa
push
fdivs
add
ss
mov
cmpsl
movsl
cmp
ffreep
loopne
xchg
sahf
xchg
stos
sbb
mov
lds
sub
clc
push
les
push
addr16
xchg
in
in
or
dec
das
cmp
jae
add
mov
or
add
xor
ds
adc
and
xchg
ljmp
cmc
mov
std
jl
mov
es
jl
pop
scas
and
mov
sbbb
sub
mov
gs
pusha
cmp
or
mov
jle
ja
ret
push
pusha
mov
and
shrb
cmpl
ret
inc
test
popa
jmp
dec
and
push
fdivl
sbb
std
inc
mov
cmp
xchg
pop
ja
mov
jns
shrl
jp
hlt
inc
mov
jbe
lahf
push
rcr
jbe
sbb
lods
jns
loop
sti
or
dec
popa
lret
mov
add
add
mov
mov
jl
jne
xor
imull
xor
mov
and
cmp
pop
sbb
leave
out
dec
mov
test
sub
mov
aaa
jmp
je
in
dec
cwtl
test
inc
and
push
sbb
or
mov
pop
rcr
pop
adc
gs
icebp
cwtl
xchg
push
sub
aam
sbb
dec
out
sbb
jmp
call
test
jns
inc
inc
xlat
jne
scas
push
inc
or
and
movsl
lea
xchg
cmp
fsubrs
movb
sub
and
std
dec
stos
fidivl
xor
out
rcl
sahf
aam
repnz
fidivs
cmc
and
rolb
in
fcoms
insb
xor
mov
jl
pop
sbb
mov
es
add
push
insl
sbb
mov
cltd
rcrl
adc
mov
lcall
nop
cmp
imul
sti
mov
fisubl
mov
dec
aas
push
xchg
xor
lods
pop
pop
into
or
cmp
mov
mov
add
lret
sub
lds
add
insl
push
test
sub
in
jle
sarb
pop
fidivl
pop
mov
add
cmp
fidivrs
aaa
cmc
pushf
mov
rolb
out
adc
lahf
pop
cs
into
or
and
adc
cmp
xor
test
mov
jp
fmull
adc
nop
mov
xchg
inc
xchg
and
aaa
xor
cli
les
jle
stos
xor
sbb
fcmovne
push
adc
mov
mov
jg
in
push
cltd
xor
lret
std
dec
lock
jb
jns
push
test
testb
mov
loop
js
cmp
in
icebp
cmc
inc
and
adc
lcall
in
cwtl
imulb
out
xchg
jge
sbb
inc
int3
mov
sbb
sbb
sub
mov
sbb
jg
xchg
mov
jns
push
xchg
mov
cmp
daa
push
push
repnz
jl
xchg
imul
addb
jae
sbb
dec
cmc
mov
out
add
mov
andb
and
sti
inc
pop
sub
dec
sub
and
cmp
ss
xor
xor
movsb
mov
jnp
mov
test
or
popa
mov
mov
test
inc
fwait
out
fsubl
adc
or
stos
inc
jmp
and
dec
std
clc
mov
cmp
mov
aad
bound
loop
jmp
and
sub
mov
mov
in
and
outsb
clc
sahf
ret
daa
fwait
and
movsl
mov
xchg
hlt
mov
sub
inc
in
mov
dec
lret
mov
sbb
push
leave
test
and
sbb
loopne
mov
outsl
mov
push
cmp
mov
js
inc
sub
push
cmp
sbb
rcll
ds
push
je
jg
daa
pop
xor
pop
mov
adc
pop
lock
adc
pop
sub
pop
xor
dec
push
add
mov
pop
icebp
push
into
lds
push
mov
dec
inc
jle
in
sub
cmp
xchg
imul
jecxz
repz
xchg
dec
mov
sbb
or
jno
notb
idivl
ja
hlt
int
mov
rcrb
push
inc
lcall
inc
outsl
sub
out
ljmp
mov
cmc
dec
push
out
xchg
pop
loop
rorl
mov
shll
loop
add
popf
adc
dec
mov
aas
out
je
mov
stc
ds
shl
dec
add
adc
mov
sbb
xchg
lock
cmp
pop
sub
in
repz
and
push
pop
fnstsw
cmp
sahf
xchg
sub
iret
pusha
mov
shrl
mov
inc
and
fstl
movsl
xchg
insb
test
mov
sbb
push
dec
pop
sub
push
mov
fidivs
mov
add
sub
dec
sarl
hlt
dec
add
inc
arpl
push
mov
test
bound
cmp
shlb
test
dec
mov
ja
stos
dec
ss
jle
bound
in
das
ss
sbb
ret
jno
lret
imul
xchg
xor
sbb
in
push
rcrb
outsl
mov
jo
mov
out
push
push
add
cmpsl
sbb
adc
aad
int3
or
cmp
mov
xor
cmp
enter
dec
insb
lcall
das
movsb
pop
inc
out
es
xorl
data16
and
insl
sub
lahf
mov
int
addl
jmp
pop
lock
dec
and
cmp
dec
cli
mov
lret
xchg
xor
cmovp
std
cmp
sub
dec
push
je
inc
jmp
cmc
scas
shlb
jg
mov
in
add
xchg
xchg
mov
pop
and
mov
adc
aas
sarl
jl
pop
shr
out
cmpsb
jle
xlat
push
sbb
jae
movsbl
fistps
dec
jae
sti
fcompl
or
stos
jno
test
sbb
pop
pop
jle
add
pop
repnz
or
popl
xchg
ror
and
mov
clc
int3
inc
ss
sub
add
cmpsl
fdivrl
aaa
push
adc
pop
loope
sbb
xchg
sub
xchg
jp
add
cmpsb
sbb
std
cmp
imul
jge
jae
and
sarb
shll
jns
in
sub
orl
shl
pushf
ja
pop
lock
xlat
sbb
fld
test
adc
dec
roll
and
mov
cmc
and
in
jnp
inc
inc
xor
je
xlat
mov
mov
repnz
in
test
adc
sahf
mov
mov
movsl
and
push
mov
ret
pop
cmpsl
xor
fisubrl
and
repz
jp
cmp
fldt
push
inc
loopne
notb
das
cmp
aam
sub
popf
xchg
and
xor
in
in
xchg
mov
dec
loop
mov
mov
mov
adc
aam
subl
aam
aam
lds
push
dec
inc
stc
pop
mov
iret
adc
cmc
ja
out
cltd
sbb
shlb
inc
popf
sbb
cmp
lock
das
fdivrl
push
xchg
pop
xchg
cmpsb
sbb
mov
and
mov
cs
sub
pop
xchg
fists
or
or
cs
mov
adcb
orl
sub
pop
or
sti
sti
cmp
stc
or
xor
or
dec
inc
shr
outsl
mov
sbb
mov
pop
ja
fcmovnbe
mov
jg
and
mov
loop
arpl
mov
mov
jno
pop
repnz
aas
jne
in
fistl
add
mov
fldl2t
pop
sbb
in
add
adc
xlat
mov
add
jge
inc
loop
push
cmpsl
mov
cwtl
cmpb
cld
jne
fucomi
sbb
cld
push
cmp
rcrl
movsl
dec
out
loope
cmp
sub
sti
loop
addr16
and
ljmp
xchg
fisubl
push
std
cmp
mov
sahf
add
out
js
es
sti
cld
mov
icebp
mov
sti
mov
cs
sbb
dec
inc
in
rcll
pop
push
cltd
pop
push
lret
aaa
cmc
mov
stos
dec
test
cmp
add
mov
xchg
xchg
mov
cli
imul
ret
or
jecxz
xchg
pop
aaa
xlat
or
popf
cs
sarl
dec
sub
or
pushf
dec
dec
fdivrl
icebp
xchg
int
repnz
adc
mov
dec
xor
xchg
rcr
jae
pop
or
push
dec
pop
pop
lea
lret
jmp
jg
jmp
push
xor
stc
cmp
lcall
jb
popa
adc
decb
inc
jp
pop
repnz
test
icebp
ja
mov
pop
mov
cmp
jno
in
les
inc
jmp
repz
or
sub
pop
cld
mov
add
ja
xlat
jl
jb
fmuls
test
jns
adc
and
cltd
mov
lcall
inc
sub
mov
sub
and
aaa
int
repnz
xchg
lds
push
pop
lock
ret
sub
xchg
xor
cs
jbe
adcb
or
dec
in
sahf
push
ljmp
inc
cmp
xchg
mov
jnp
lsl
adc
repnz
insb
push
add
or
lock
jg
out
mov
scas
inc
int3
lds
and
ret
ret
pop
sahf
cmp
push
or
leave
mov
repz
adc
inc
adc
iret
insb
push
movsb
fdivl
incb
shl
scas
test
sbb
rcl
shrl
mov
das
filds
in
in
xchg
adc
jle
mov
int
push
jmp
push
pop
inc
adc
fcmove
arpl
ret
pop
and
add
loopne
mov
add
test
cmp
fnstenv
pop
xor
aad
and
xchg
cmp
into
sarl
hlt
loope
repz
out
cmp
lods
movsl
in
xchg
fdivl
cld
sahf
and
faddl
cld
pop
dec
enter
stc
subb
inc
push
pop
pop
push
mov
mov
and
xchg
dec
cmp
lahf
pop
insb
sub
aam
sub
pop
inc
mov
rclb
aas
push
out
adcb
insl
xchg
xor
pop
call
push
popf
adc
js
xchg
push
cltd
pop
push
cmp
lock
xor
jmp
cmpsl
fmull
mov
iret
ss
push
jno
test
cmp
xlat
jmp
ret
icebp
cwtl
cld
in
in
push
lock
cmp
push
popa
mov
lea
stos
add
addr16
mov
mov
push
test
cltd
add
inc
insl
jge
pushf
xchg
xor
dec
jmp
pusha
lods
jne
ds
mov
push
aad
mov
mov
and
mov
sub
jb
je
imul
xchg
xor
xor
or
push
sub
xchg
test
ja
mov
fadds
icebp
fstpt
inc
lret
aam
sar
pop
jecxz
mov
mov
lock
fwait
and
xor
mov
inc
and
cmp
fisubrl
dec
insl
inc
lret
push
and
xchg
jmp
dec
mov
sbb
xchg
jp
mov
jl
inc
in
je
nop
pop
rclb
subb
dec
pusha
call
daa
mov
out
or
jo
insb
lcall
bound
subb
pushf
cli
movsl
add
inc
cmpsl
xchg
fdivl
inc
push
in
arpl
sub
lcall
inc
cmp
pop
inc
xchg
jmp
repnz
in
cmp
test
dec
out
bound
mov
test
and
pop
push
jle
xchg
andl
lcall
or
stos
push
inc
jnp
pusha
insl
jno
out
into
insb
leave
ret
ljmp
jno
push
cmp
xor
xchg
out
cmp
loopne
outsb
mov
out
lock
pushf
or
imul
leave
or
push
das
shrb
js
inc
sub
dec
int
stos
dec
fs
stc
lret
shrl
push
out
cli
jo
daa
outsb
add
outsl
pop
sbb
enter
sub
add
cltd
ret
jne
push
ljmp
das
pop
popa
pusha
or
insl
push
xor
push
shrl
sbb
dec
add
mov
pop
frstor
push
dec
fbstp
sub
insb
rorb
ljmp
adc
push
jecxz
nop
inc
xchg
add
mov
mov
lret
mov
int3
inc
stc
or
imul
jae
test
scas
bound
filds
dec
push
les
inc
notb
push
mov
icebp
push
mov
mov
xchg
sbb
add
sub
fcoms
jne
pop
xor
xchg
and
cmp
xchg
test
dec
mov
enter
daa
movl
dec
shlb
xchg
test
fbstp
lock
mull
mov
push
xchg
push
xchg
push
daa
lds
ficoms
dec
mov
mov
sbbb
in
mov
ds
add
sbb
scas
mov
jne
dec
out
push
test
push
insl
dec
pushf
xor
gs
add
xchg
ja
sbb
test
xchg
adc
jb
popa
sub
lock
push
aad
adc
inc
roll
inc
stos
jns
add
jge
and
nop
sbb
stc
and
repnz
out
fwait
mov
lret
loop
dec
repnz
sahf
adc
push
aad
and
lret
adc
mov
pushf
loope
xchg
sub
and
xor
test
lret
adc
mov
or
repnz
cmpsb
lea
cmp
cwtl
sbb
or
xor
mov
pop
adc
test
loop
cltd
pusha
jno
push
mov
enter
jge
xor
push
loop
adc
xchg
jg
ret
mov
jg
call
cwtl
mov
mov
push
pusha
add
mov
movsb
fcomps
push
mov
pop
sub
ss
addr16
lds
xchg
xchg
in
cmpsb
mov
sub
cli
sub
comiss
aaa
shrl
out
push
mov
mov
sbbl
dec
int3
repnz
repz
in
cld
mov
sbb
test
cmp
imul
rolb
dec
loope
lahf
inc
jmp
inc
cmp
orb
pop
push
sbb
cwtl
mov
lahf
inc
jge
sbb
not
pop
shl
pop
push
dec
add
mov
or
insl
jmp
cmp
cmp
insb
xor
add
mov
adc
jb
mov
jp
aaa
jo
mov
loop
mov
push
or
mov
mov
and
and
clc
inc
enter
ja
inc
mov
dec
adc
push
xor
cmp
jns
mov
pop
sbb
shl
icebp
jnp
xlat
push
out
gs
pop
jmp
outsl
xchg
subl
jmp
sbb
lock
jno
stc
out
pop
mov
push
add
xchg
jg
scas
lds
scas
xor
lods
inc
pop
gs
bound
lret
xchg
adc
xor
dec
pop
add
sub
arpl
imul
ror
iret
scas
jno
dec
mov
cmp
or
xor
callw
adc
mov
fwait
xor
pop
jle
loop
mov
add
into
push
push
test
sub
push
pop
xor
jmp
shlb
and
mov
mov
adc
cs
sbb
adc
mov
sbb
push
lock
push
sti
xor
xorb
outsb
inc
out
jnp
rsm
push
loop
popa
mov
test
bound
ljmp
insb
not
out
mov
fdivrs
shll
sub
jle
or
push
jnp
add
sbb
add
lea
aaa
movsb
addr16
push
lret
fnsave
add
xor
out
inc
call
stc
popf
mov
mov
out
mov
aad
xor
into
sub
aaa
iret
add
add
stc
movsb
lods
popf
or
lds
jnp
push
mov
pushf
stc
nop
dec
mov
add
jo
scas
dec
jge
icebp
out
push
enter
lcall
push
sub
and
pop
loope
mov
mov
sahf
sub
divb
imul
or
shlb
add
pushf
scas
insb
mov
pusha
into
jg
imul
sbb
daa
lcall
adc
pop
add
lahf
jbe
mov
and
mov
sub
xchg
mov
les
sub
pop
int3
arpl
jbe
jecxz
jo
dec
or
pop
filds
pop
fcmovnb
fsubrs
adc
mov
pop
stos
jo
pop
sub
inc
sbb
lret
out
jp
sub
sub
mov
dec
dec
out
leave
mov
cmc
hlt
je
outsb
out
mov
mov
cmpsl
ret
mov
lds
fs
mov
adc
and
inc
aam
fs
inc
dec
fldenv
jno
mov
fidivrs
or
mov
or
jne
mov
add
pop
lret
sub
mov
es
mov
sbb
outsl
shl
mov
movsl
lret
push
add
data16
pop
cmp
inc
repz
cli
jo
int
mov
jbe
les
jns
std
cltd
ficomps
out
test
loope
sbb
push
adc
xchg
data16
xchg
xor
idivl
push
push
xchg
jno
inc
test
sbb
bound
out
xchg
scas
and
adcb
xchg
push
push
mov
and
mov
stos
jmp
mov
add
in
push
pushf
in
or
sub
pop
adc
cmpb
enter
jle
push
jl
jne
pushf
es
add
lods
inc
and
add
sbb
js
xorl
sti
pop
sbb
fwait
push
pushl
jns
sbb
outsl
lcall
lcall
popf
xchg
lds
aaa
aaa
jmp
lret
lea
or
xor
scas
pop
lret
sbbl
pop
mov
pushf
or
stos
sbb
push
sarb
repz
pop
hlt
jno
mov
fidivrs
cmp
xor
subl
hlt
test
fidivrs
sbb
sbb
lods
test
or
fmuls
mov
push
stos
jl
xor
int3
xlat
mov
ret
mov
sbb
pop
jecxz
sub
leave
sub
out
sbb
adc
dec
jecxz
mov
fimull
push
data16
ja
jne
jg
mov
dec
in
ja
cmp
insb
adc
sbb
fnstsw
pop
sbb
push
push
in
push
sarl
pop
dec
hlt
stos
int
ret
mov
adc
pusha
mull
push
adc
mov
pop
fwait
sbb
mov
fsubl
pop
aam
inc
sbb
jae
or
xor
mov
pop
pushf
jle
mov
xchg
lahf
arpl
hlt
jb
push
ljmp
xor
test
loopne
xchg
je
in
push
mov
xor
cltd
dec
scas
outsb
sbb
pusha
pop
leave
test
mov
jle
mov
cmp
inc
stos
xor
push
xchg
pop
xchg
scas
pop
mov
mov
push
sti
fdivrl
or
in
push
addb
fisttpl
cmp
outsb
popa
enter
fcoms
lds
mov
cmpsl
fidivrs
sbb
daa
stos
push
pop
imul
push
out
cmp
nop
sbb
mov
push
pop
mov
jmp
mov
or
mov
xchg
test
pop
sub
jo
movsb
or
cmp
sbb
inc
fstpl
test
dec
push
and
or
shr
inc
dec
xchg
mov
mov
jae
sub
test
stc
aad
aam
inc
sub
push
xchg
push
sbb
mov
call
mov
add
mov
mov
jecxz
mov
xorb
out
out
jg
add
popa
stos
adc
aas
mov
xor
jns
cmp
xchg
movsb
call
jp
mov
push
rcll
cmp
jns
xor
rorb
lea
cli
or
mov
inc
xchg
cmp
xchg
int3
lret
push
add
mov
sub
and
pop
push
popa
pusha
adc
mov
cld
adc
cmp
cli
sti
icebp
sub
arpl
pushf
xor
inc
addr16
imul
jle
fmuls
dec
cmp
xchg
adc
push
mov
jae
xor
jbe
fisubs
xchg
mov
inc
mov
inc
call
jns
stos
clc
and
das
data16
mov
sub
dec
dec
loop
das
jbe
sbb
adc
outsl
lock
mov
lret
insb
adc
dec
xchg
push
jns
sbb
xlat
mov
loope
or
pop
cmp
imul
cmp
fsubrs
dec
adc
pop
jecxz
fwait
je
stc
push
fildll
lods
and
mov
sub
sub
hlt
sbb
dec
pusha
pop
test
sarb
add
cmp
lcall
push
mov
ret
jge
std
mov
sub
imul
aad
icebp
in
pop
mov
in
push
inc
xor
sbb
rcr
mov
jle
int
insb
inc
push
mov
or
lret
push
ss
and
inc
jg
ljmp
adc
ja
jg
pop
leave
jmp
ja
pop
jge
mov
mov
repnz
push
fistpl
jg
cld
mov
pop
daa
imul
mov
stos
sbb
xchg
in
scas
out
dec
xorb
jmp
push
popf
idivb
cmpsl
out
pop
pusha
jns
and
enter
dec
loope
lods
popa
mov
mov
enter
aam
dec
mov
pop
stos
inc
and
iret
push
sub
lea
sub
cmp
clc
cmpsl
sti
mov
mov
mov
cltd
pop
xor
add
fldt
enter
mov
inc
inc
mov
xchg
mov
cmpsb
mov
pop
imul
repz
sbb
push
xor
mov
mov
jnp
fldl
mov
push
ficompl
mov
fbstp
and
mov
push
and
insb
cwtl
mov
sub
mov
push
add
out
push
lods
and
sbb
cwtl
daa
inc
lret
cld
loopne
xchg
sub
in
aad
and
pop
push
lods
pop
dec
ret
das
les
xor
sub
lahf
mov
dec
sbb
cmp
inc
scas
sbb
int
mov
test
aas
mov
mov
fnstcw
and
cmp
stos
mov
mov
pusha
negl
ss
xchg
mov
pop
addr16
mov
fdivs
pop
jg
jl
arpl
stos
jnp
cmp
pop
arpl
aam
and
ja
jmp
mov
jno
xchg
clc
dec
adc
loopne
inc
sbb
and
inc
pop
popa
mov
mov
mov
xchg
xor
add
inc
loopne
stos
fisttpl
es
push
cwtl
in
inc
mov
jge
hlt
adcb
mov
add
pop
pop
push
push
or
and
jle
fsts
sbb
out
mov
insl
inc
icebp
adc
pop
pop
aad
and
mov
mov
or
icebp
lahf
cmp
shrl
sbb
push
lahf
or
dec
push
shrb
xchg
jb
repz
pop
add
fxch
mov
add
jg
mov
jmp
fdivl
mov
out
enter
dec
jmp
add
imul
insb
enter
fwait
jmp
pushf
or
lret
shrb
adc
jo
pop
je
scas
mov
inc
out
das
add
in
pop
inc
lds
cmp
fisttpll
cltd
mov
stos
inc
in
call
push
imul
das
ficoml
je
push
mov
sbb
jle
roll
lds
sbbl
int
addr16
mov
iret
dec
test
lods
sar
add
ds
test
or
xchg
in
xchg
sbb
dec
lea
mov
jge
pop
pop
lcall
fldt
push
lret
arpl
shrl
cmp
cmp
adc
pop
pop
add
inc
mov
xchg
sahf
push
sub
mov
ss
incb
mov
cmp
jne
in
daa
add
jnp
enter
xchg
fisubrs
xchg
mov
rcll
pushf
push
adc
aad
dec
xchg
fnsave
ljmp
scas
jl
cltd
mov
pop
cmp
pop
push
sbb
negl
fwait
inc
inc
inc
popa
mov
mov
arpl
shl
jge
inc
cmp
mov
mov
add
orb
scas
xchg
aad
adc
push
pop
mov
lret
add
mov
cmp
dec
insb
hlt
add
es
loope
jg
pop
xchg
cmp
icebp
xor
sbbb
dec
hlt
lret
outsb
insl
rcr
in
cmp
or
sbb
adc
jg
lahf
cmp
data16
xchg
mov
mov
xchg
and
push
mov
addl
push
pop
movsb
mov
push
fldt
xor
hlt
cld
ret
inc
lock
sbb
icebp
out
push
fs
lret
push
mov
adc
jnp
aam
add
xlat
cld
sub
in
jo
lcall
enter
es
mov
pusha
bound
rolb
shll
or
cmpsb
cmp
cmp
pop
jmp
mov
stc
insl
es
adc
push
stos
adc
push
popf
repnz
loope
leave
pop
xchg
stos
scas
inc
fstpl
inc
fldl
enter
push
out
add
movsl
sbb
test
or
test
into
fwait
xchg
cs
jne
addl
call
and
jo
mov
mov
mov
mov
scas
gs
lret
adc
add
inc
cli
push
adc
dec
fisubl
xor
inc
pop
fldenv
jmp
push
imul
fwait
mov
das
sar
xchg
hlt
sti
inc
fwait
mov
les
pop
outsb
cmp
mov
movsl
xchg
stos
push
outsb
add
divl
xchg
icebp
rcrb
repz
jne
test
pop
push
sti
fwait
loopne
xchg
out
lahf
adc
jae
psubsw
bound
stos
shlb
adc
negb
jle
xorb
sti
cli
cmpsl
pop
cld
and
scas
scas
fstps
cs
dec
stos
push
incb
out
scas
mov
fiadds
xchg
dec
dec
insl
sbb
sarb
sbb
add
test
mov
imulb
push
rep
dec
aaa
aam
test
add
cmp
xchg
mov
mov
jns
test
clc
adcl
xchg
subl
lods
push
aaa
jo
and
mov
jge
test
sbb
cmpsl
sbb
rcrl
mov
adc
bound
mov
cmpsl
out
or
dec
sub
ja
popf
sub
xchg
lea
xor
lahf
ljmp
push
mov
push
in
push
dec
gs
lret
lcall
inc
push
cmpsl
or
and
cmp
arpl
daa
push
mov
pop
ds
js
dec
xchg
shrb
jnp
ret
das
adc
sbb
add
xor
out
test
mov
fsubrl
daa
outsl
imul
fwait
pop
das
inc
mov
mov
cmp
adc
imul
add
sbbl
inc
fpatan
ljmp
jg
adc
test
nop
xor
dec
push
inc
sub
arpl
mov
mov
es
dec
sahf
lods
pushf
cli
mov
sub
in
sbb
test
sub
push
test
sub
pop
add
inc
push
jle
inc
jb
jnp
and
sub
inc
push
sub
mov
cld
imul
jb
fiadds
mov
cmp
shll
push
into
int3
int3
jo
out
aas
fsts
inc
ljmp
or
inc
add
mov
repnz
jl
das
and
xor
cmp
mov
pop
adc
nop
jle
fdivs
mov
adc
mov
jo
mov
leave
cmp
sarl
dec
stc
sbb
pop
fwait
scas
inc
movsl
add
lret
pop
popa
pop
push
fxch
and
cmp
dec
hlt
jnp
inc
cmc
xchg
lock
push
pop
cmovns
mov
dec
sub
lds
mov
mov
mov
iret
es
jmp
inc
add
and
lea
dec
test
cmp
scas
imul
mov
lds
pop
rclb
cmc
fsubrs
stos
out
xor
ljmp
into
cld
movsb
jmp
inc
push
les
mov
push
ret
xor
loope
aas
and
mov
test
fisubs
mov
jne
cltd
test
lcall
lock
sbb
inc
cltd
cmp
add
or
arpl
bound
ss
je
sbb
testl
push
fisubrs
mov
int3
es
add
mov
daa
and
arpl
mov
sub
scas
push
adc
fadd
add
dec
sarb
and
inc
jp
in
jmp
aaa
fstpl
xchg
push
in
sbb
sub
lahf
push
movsl
cmp
mov
mov
cmp
sbb
mov
xor
sbb
pop
cmpl
out
jp
lret
lahf
std
inc
cmp
lret
push
jle
push
nop
push
push
mov
das
outsb
and
dec
shll
add
mov
sbb
fwait
jmp
fsubrs
jne
repnz
and
call
fwait
mov
lret
mov
icebp
mov
aam
pop
inc
shl
mov
popa
lcall
cmpsl
and
inc
incb
xchg
aad
mov
and
fcomps
xchg
ljmp
lcall
push
mov
xchg
aad
out
xor
add
nop
lahf
repz
outsb
dec
enter
insl
lea
xchg
test
xor
cmp
mov
movsl
cmp
mov
aas
pop
ds
inc
fs
cmpsb
subl
adc
xchg
inc
andl
fists
mov
cmpsl
stc
nop
inc
sti
sub
fists
adc
and
test
insl
aam
lods
dec
add
inc
or
js
daa
lcall
xor
cltd
jne
push
add
stc
xchg
insb
incl
mov
daa
addr16
call
and
inc
fndisi(8087
lret
jnp
xlat
push
xchg
sub
fnstsw
xlat
icebp
cmc
inc
mov
lcall
push
mov
movsb
or
repnz
cmpsl
imul
in
push
dec
sarb
xorb
xor
daa
or
fmul
add
or
pusha
dec
fists
outsb
adc
or
call
mov
cmp
cmpsb
xchg
stc
lret
data16
push
add
dec
sbb
inc
jnp
cmp
and
pop
mov
jecxz
dec
pop
in
rol
pop
fimuls
mov
int3
sub
std
loope
ss
sbb
mov
or
out
mov
fisubrl
pop
cwtl
inc
push
cwtl
stc
test
pop
sub
arpl
add
mov
ret
mov
movsb
inc
sbb
sbb
add
jecxz
adc
in
les
cmp
xor
adc
ljmp
adc
insb
popa
aad
and
fsubrl
in
cmpsb
sti
push
test
xor
xchg
and
shrb
arpl
test
xchg
inc
dec
dec
or
sub
pop
dec
push
adc
jmp
jle
inc
or
stc
int3
insl
add
or
insb
mov
push
int
mov
mov
jecxz
xor
and
sbb
jge
aad
rcrl
addr16
push
mov
or
sbb
and
push
sbb
scas
jl
sub
out
daa
sbb
pop
dec
xchg
scas
mov
mov
pusha
pop
xor
sub
shrl
imul
or
cmp
mov
aad
shrl
movsl
sub
adc
jge
icebp
inc
negl
insl
jns
cmp
loop
cmc
mov
shr
push
test
push
das
inc
stc
jne
cmc
or
xlat
add
or
popf
xor
subb
adc
adc
jbe
jle
lea
add
push
sub
push
je
jmp
scas
sbb
pop
ss
xchg
inc
lds
jmp
mov
xor
mov
shlb
loope
dec
dec
popa
es
call
sub
push
jbe
movsb
mov
lds
pushf
mov
je
es
int
scas
cmp
dec
push
loope
in
sub
ds
xor
mov
push
int
mov
xchg
addr16
pop
scas
sub
aas
test
mov
fdivrl
dec
push
add
push
xchg
mov
mov
sub
insb
jl
cs
pop
pushf
dec
cmpsl
lds
push
xor
movb
iret
notl
ljmp
jo
pop
fisttpl
mov
imul
shlb
or
xchg
mov
or
sbbb
push
int
jg
mov
push
lret
and
pop
adc
iret
or
les
int
mov
je
ss
clc
jmp
mov
nop
mov
inc
xor
scas
stc
xor
aaa
scas
outsl
test
xor
int
and
jmp
pop
test
addb
jle
or
out
jge
aam
dec
data16
jns
lret
cmp
push
xchg
adc
nop
push
push
mov
scas
mov
pusha
shrb
into
sub
rcll
jnp
imull
ljmp
inc
inc
cli
ds
aad
testl
aaa
mov
mov
repnz
imul
iret
hlt
dec
xlat
fsubrp
lret
mov
cltd
enter
xor
fwait
pop
fcmovu
xchg
mov
fmuls
or
subb
fwait
sub
inc
inc
fisubrl
cmp
shrl
sub
repnz
pop
mov
dec
loop
scas
notl
mov
push
xchg
adc
fmul
xor
mov
dec
push
inc
dec
mov
fsubl
jp
loopne
fildll
dec
and
int3
mov
mov
mov
adc
dec
adc
aad
jmp
mov
idiv
fwait
rcrb
push
fimull
lock
lods
sub
jge
mov
fsubl
inc
arpl
mov
ljmp
out
push
lock
movsl
jb
loope
loop
fiaddl
xchg
adc
mov
dec
loopne
add
jle
ds
jb
pop
xor
xchg
push
jmp
add
movsl
mov
jb
mov
scas
dec
fwait
mov
adc
fisttpll
mov
and
fbstp
inc
dec
lcall
cli
sti
xchg
sub
out
bound
sub
xchg
movsb
mov
xchg
pop
add
es
in
inc
ficompl
push
loope
cmp
jmp
or
add
pop
pop
inc
cmpl
rolb
adc
jp
sbb
mov
icebp
jmp
sub
mov
push
inc
and
or
cs
or
inc
and
fisubrl
shlb
pop
cmp
jns
or
xchg
cmp
add
xor
push
addr16
push
imul
fmull
fiadds
aam
add
cmp
xchg
popf
js
aaa
mov
movsl
cmp
xor
and
ret
lret
and
adc
add
inc
clc
ret
cmp
push
rcrl
push
adc
xor
jns
in
cmp
push
jl
pop
scas
jne
cmp
clc
clc
cmp
imul
ja
repz
xor
and
cmp
jle
jae
popa
enter
fsubrp
cld
addr16
jne
pop
xor
jae
mov
inc
push
popf
jne
or
push
popf
sbb
or
pop
cmc
fnsave
fucomi
jecxz
mov
loop
xor
in
sbb
dec
movsl
sbb
ja
popf
or
push
mov
push
jo
sar
mov
mov
sub
ljmp
mov
cmp
lods
mov
cmp
xor
imul
pop
test
sbb
mulb
inc
fstl
jmp
xchg
and
inc
push
push
mov
dec
jno
jns
popa
imul
mov
xor
flds
pop
cmc
lock
in
or
jmp
xchg
mov
inc
fxch
sbb
movups
or
xchg
pop
mov
mov
inc
jg
jmp
mov
ret
movsl
lds
jbe
in
and
cmp
sahf
lret
adc
push
mov
cmp
xchg
shrl
shl
adc
pop
cmp
adc
movsl
aaa
aaa
mov
movsl
fildll
adc
or
divl
pop
and
lods
into
sbb
mov
imul
sub
out
mov
loop
loop
mov
adc
add
sbb
adc
mov
out
jle
pop
pop
dec
jecxz
jl
jp
pop
test
mov
push
push
or
mov
sbb
popf
in
insl
dec
push
jno
push
jo
adc
jnp
std
lods
jmp
or
mov
xor
cmpsl
xorl
jne
add
sub
lock
es
pop
jp
and
les
scas
adc
icebp
movsl
inc
and
cmp
xchg
loope
stc
je
iret
and
cld
mov
sub
out
jle
xchg
adc
xchg
push
sub
je
sub
dec
mov
sub
sub
fdivrs
mov
cmpsb
inc
ja
lock
xchg
xor
shl
push
push
sbb
leave
jb
mov
lret
cld
aaa
push
insl
jae
out
add
movsb
mov
cmp
lds
pop
imull
mov
add
ret
xchg
std
push
or
and
ljmp
loope
fidivl
inc
or
push
lea
xlat
sub
das
out
rcrb
movb
negb
dec
jl
dec
aaa
subb
imul
scas
push
ret
jbe
sbb
mov
sbb
jg
mov
je
push
xor
rolb
xchg
aad
jecxz
notb
fsubrp
les
mov
loope
cwtl
shrl
lock
jp
sarb
cmc
imul
inc
add
sti
dec
repnz
in
stos
rorl
daa
aam
and
stos
int
sarl
fs
sahf
cmp
iret
inc
adc
test
and
pop
mov
cmp
imul
and
test
clc
cmpsl
push
inc
cmp
lret
or
push
adc
sub
cli
adc
cs
outsb
push
sbb
fildll
push
orl
lret
mov
jno
enter
and
pop
pushf
jbe
sbb
rorl
jne
sbb
push
or
dec
repz
mov
lahf
leave
cmpsl
out
push
dec
and
lret
cs
cmpsb
sti
xchg
addr16
imull
sbb
sbbb
or
dec
out
lods
xchg
pop
insb
imul
push
push
mov
lods
sub
enter
idivb
xchg
data16
dec
mov
insl
inc
cwtl
subl
je
add
stos
fcomip
cltd
adcb
fidivl
popa
mov
add
mov
jb
loop
push
ret
sbb
enter
pop
xchg
push
fisubrl
jne
es
mov
ss
mov
and
mov
xchg
cli
jo
adc
cltd
push
icebp
int
call
xchg
out
add
bound
rcl
sbb
xchg
imul
ljmp
xor
jmp
adc
xor
and
xor
sub
int3
pop
xchg
movsb
cmp
xchg
sti
gs
iret
sbbl
je
in
mov
lock
jmp
daa
mov
shll
jno
pop
test
lods
inc
adc
out
je
mov
lods
sbb
fs
les
out
xchg
mov
jbe
xchg
dec
adc
stos
lea
mov
sbb
mov
sbb
fisubs
jne
outsb
cs
or
xchg
dec
hlt
mov
push
lock
xor
or
lcall
push
inc
pushf
aas
and
in
fwait
add
sub
test
or
shrb
in
scas
mov
outsb
dec
daa
mov
adc
in
iret
mov
add
jae
test
hlt
iret
xor
int
mov
andb
lahf
sbb
sbb
pop
cli
aaa
push
xor
rorb
popf
mov
jg
lods
pop
adc
aas
loop
rorb
pop
xchg
jb
add
es
mov
out
adc
cmp
push
add
insb
incb
ss
sti
add
push
bound
fs
push
addr16
test
and
sti
test
shll
xchg
cmp
es
movsb
test
int3
mov
out
xchg
bound
mov
jg
les
ds
xchg
outsl
mov
lock
nop
in
test
push
pop
imul
notb
icebp
fbld
jns
and
lret
jns
jno
xor
jecxz
jl
jp
stos
inc
jg
insl
iret
shlb
ret
out
jge
mov
jae
xchg
cmpsl
and
cmc
test
nop
out
jo
imul
ja
dec
cmp
mov
push
xor
fnsave
push
leave
fsubrl
cmpsb
pop
mov
push
mov
push
imul
sub
xor
sahf
les
leave
jmp
loopne
and
lods
fiaddl
test
lahf
cs
or
add
loope
xchg
stos
dec
xlat
pop
cmp
out
pop
xchg
pop
cmpsb
push
ja
fcmovbe
jge
sbb
lods
in
aaa
push
dec
pop
xor
imul
push
or
jo
mov
dec
jno
xlat
xor
scas
cmp
fwait
jmp
push
ja
outsb
pop
adc
jle
cwtl
xor
inc
pop
inc
add
dec
mov
or
int
outsb
pop
lcall
sbb
dec
mov
jb
dec
xchg
inc
call
pop
jge
subl
mov
pop
dec
pop
xlat
cmp
cmpsb
inc
mov
dec
pop
mov
jle
adc
int3
mov
insl
add
and
lds
push
loopne
mov
ja
inc
rcrb
adc
and
stc
in
adc
or
jbe
push
fs
xchg
mov
or
out
fisubrl
shll
or
out
sbb
sub
xor
add
ror
cmp
dec
movsb
addr16
mov
xchg
xor
popf
jns
fadd
mov
push
sub
cmp
pop
clc
mov
in
mulb
rol
pusha
div
repz
jno
rolb
xor
cwtl
pop
mov
inc
cmc
xchg
dec
pushf
adc
adc
dec
jmp
fildl
frstor
xor
mov
mov
ficompl
aam
mov
out
and
cs
lods
cmp
outsb
sbbb
mov
mov
mulb
cld
add
cmp
push
xchg
inc
icebp
push
aad
test
leave
pusha
inc
cmpsb
cwtl
daa
movsl
ficompl
fstps
popa
idiv
lods
std
and
cmp
push
inc
popa
xchg
call
jne
cwtl
das
aas
popf
aas
aad
divl
fwait
lahf
in
mov
xchg
in
fistpll
lret
jg
scas
popf
mov
and
ljmp
lds
in
jmp
and
inc
data16
pop
imul
fs
sbb
push
sbb
cli
out
add
adc
push
mov
mov
mov
jb
data16
push
or
test
mulb
leave
jb
pop
cmpl
push
ljmp
mov
push
rcll
or
iret
or
cmpl
clc
scas
testl
push
pop
xchg
add
clc
lahf
scas
inc
cmpsb
std
pop
push
orb
mov
ds
xchg
cmc
add
inc
cmc
orb
inc
or
enter
pop
jmp
inc
add
adc
mov
sub
xchg
outsb
push
xchg
test
jecxz
xor
adc
jmp
cmpsb
les
or
fiaddl
fistps
test
mov
mov
or
mov
mov
mov
cmp
notrack
cmp
lret
xor
icebp
ljmp
add
ficomps
je
hlt
imul
incb
push
and
xchg
inc
lret
stc
jmp
daa
fimuls
mov
push
call
jno
mov
sarb
sub
cld
push
sub
dec
mov
jmp
xchg
aaa
add
xchg
pop
xor
add
lds
jns
aaa
test
hlt
cmp
mov
mov
cmpsb
inc
or
int
mov
dec
out
inc
mov
cltd
sti
or
and
cmpsl
dec
andb
dec
add
and
sahf
mov
sti
pop
iret
and
sbb
pop
adc
mov
jnp
pop
movsb
mov
mov
push
js
js
mov
ljmp
inc
aas
incl
mov
dec
daa
lods
jg
in
pop
mov
or
xchg
xchg
adc
jno
cmp
ss
and
pop
setp
push
jp
call
mov
out
xor
fsubl
dec
mov
adc
out
xor
xor
sbb
xor
in
sahf
hlt
movsb
add
sbb
sub
sub
jne
mov
push
push
test
add
dec
scas
nop
sub
jmp
sbb
repnz
and
inc
push
adc
ja
fsubrs
cwtl
inc
fs
and
fnstenv
adc
outsl
cli
push
out
push
dec
popf
pop
mov
inc
cltd
pop
outsl
lret
push
cmp
sbbb
pop
cmp
loop
or
and
sbbb
lahf
ss
mov
inc
xchg
dec
dec
mov
stos
pusha
out
fcmovb
xchg
push
cmp
cld
insl
jae,pn
or
dec
mov
dec
cltd
fsubrl
lock
insb
cmp
xchg
outsl
inc
fbstp
cmpsl
rcl
sbb
jne
shl
and
sti
xchg
xor
sbb
add
aam
test
add
sbb
mov
cmp
shlb
sub
pop
nop
cmc
hlt
or
repnz
test
sbb
mov
xlat
adc
mov
sub
pop
test
cltd
jecxz
inc
inc
clc
pop
xor
aas
lret
mov
iret
mov
subl
out
cmc
lcall
pop
pop
sbb
and
ret
inc
outsb
sbb
cmc
add
mov
mov
shrl
cmc
mov
clc
out
mov
push
cld
aaa
divb
sbb
stos
dec
insb
xor
mov
xchg
int
leave
stc
mov
pop
add
mov
or
outsb
jl
lret
scas
pop
adc
inc
rcl
lea
mov
cmp
cmp
aad
dec
cmp
sub
ret
jp
add
jg
mov
shlb
push
add
dec
gs
pushf
imul
clc
mov
xor
pop
inc
xor
push
lods
jmp
pop
push
jne
loop
or
mov
movsl
js
outsb
and
aaa
jmp
idivl
pop
mov
rolb
stos
pop
push
jnp
mov
ss
stos
inc
sub
ficomps
sub
sahf
push
mov
sub
repz
adc
xchg
mov
cmpsb
jge
add
dec
aaa
jmp
push
insb
push
jae
or
test
andl
data16
mov
or
jge
ljmp
mov
shr
add
mull
and
cmpb
imul
pushf
loop
ja
cltd
push
jmp
in
lock
jp
lahf
sub
arpl
push
jo
jg
cs
mov
cli
sub
orb
jbe
adc
xchg
jp
leave
mov
lods
dec
cltd
push
scas
sti
adc
inc
cwtl
lcall
out
mov
inc
fstpt
in
xor
mov
cmp
outsl
push
mov
jle
adc
ret
sarl
lds
je
fsub
pop
mov
or
nop
cltd
incl
movsl
add
pusha
jne
add
inc
xchg
dec
sahf
push
jbe
sarl
inc
pop
cli
sub
stos
inc
mov
ror
clc
jg
inc
test
out
fucom
lret
inc
push
ljmp
call
out
in
adcl
xor
jns
call
push
addl
adc
jno
sbb
mov
jns
stos
enter
iret
out
sub
ret
mov
inc
add
or
adc
bound
imul
popf
sbb
pop
cmp
repnz
sahf
daa
and
push
sbbb
adc
in
nop
mov
fiadds
lret
mov
push
rcl
shl
push
cmp
and
movsl
and
adc
jb
push
jnp
notl
fcoml
fbstp
imul
cli
xor
ret
test
add
in
cmp
mov
xchg
aad
rorl
insl
inc
sub
mov
hlt
dec
rclb
lret
cli
adc
insl
cmp
and
xor
les
adc
pop
jmp
jne
push
inc
cmp
pop
dec
dec
into
orl
and
xorl
mov
sub
mov
arpl
std
or
xor
sub
xor
or
jg
out
push
jmp
ss
ret
gs
add
push
je
sbb
mov
dec
mov
aam
sub
dec
inc
or
ss
into
mov
pop
pusha
sti
iret
or
into
lret
xor
dec
jmp
dec
or
test
fwait
and
je
pop
imul
movsl
lds
dec
push
sub
mov
jge
mov
sbb
loope
fildll
rclb
dec
int
xor
pushf
sti
inc
pop
sbb
insl
inc
pop
and
movsl
outsb
das
lahf
leave
or
mov
sbb
and
clc
std
sahf
movsb
xor
popf
outsb
pushf
xor
int
mov
aas
loope
popa
xor
xchg
aas
push
jo
iret
mov
les
mov
dec
xchg
movsl
decl
lds
sahf
xorl
iret
sbb
cmpsl
mov
sub
outsl
scas
add
mov
sub
pusha
fdivs
jmp
dec
mov
jl
sbb
xchg
add
xchg
ja
and
add
inc
ret
and
stc
test
stos
inc
iret
fistpll
out
sub
jno
sbb
pop
ret
inc
mov
les
push
and
push
mov
outsb
decl
outsb
push
push
inc
cvtdq2ps
adc
push
sub
out
stc
inc
sbb
inc
arpl
iret
push
data16
adc
lcall
arpl
cmpsl
fs
dec
mov
pop
xor
addr16
test
or
mov
add
and
push
test
jecxz
xorl
cmp
lcall
rcrb
mov
cmpsb
in
and
rcl
rolb
movsl
cmp
fcompl
mov
repz
aas
pop
lahf
lcall
jae
or
add
xchg
ss
dec
repz
das
sub
outsb
pop
pop
pop
and
push
sbb
cmp
lcall
push
adc
push
pop
mov
xor
popf
ret
dec
popf
les
popa
ljmp
mov
cwtl
bnd
aad
mov
sub
fnstcw
mov
out
idivl
sub
pop
lcall
xor
out
sub
pop
cmpxchg
dec
lahf
lock
insl
insb
cli
adc
jle
movsl
aam
add
push
and
xchg
xchg
fnstenvs
movsb
cmp
outsl
iret
test
out
jl
mov
sbb
js
jno
mov
les
mov
stc
jecxz
jecxz
or
push
repz
out
insb
das
push
stos
jbe
sub
insl
cwtl
fwait
stc
pop
repnz
sub
cmpsb
sbb
lret
pop
push
stos
es
lds
aaa
imull
mov
mov
lock
sub
out
test
fwait
xchg
fcompp
pop
mov
cmp
je
arpl
push
mov
rol
mov
repnz
les
sahf
xchg
cld
arpl
mov
outsb
fld
pop
jg
jbe
xchg
dec
sbb
shll
imul
es
mov
lret
add
xchg
rep
das
lcall
xchg
xor
adc
lds
adcb
cmp
and
cld
push
addr16
xchg
xchg
jl
stos
jge
fcomip
or
mov
lea
imul
xlat
mov
push
addl
fisubrl
ret
pop
mov
popf
popa
aas
dec
ret
ja
shll
xchg
cmp
movsl
test
jbe
adc
out
pop
outsl
jl
xor
in
dec
testl
jp
je
in
push
jmp
or
lock
std
aas
fwait
pop
insl
lods
sub
jge
pop
shlb
into
aas
lret
rcrb
pop
scas
cmp
pop
loop
push
mov
xor
mov
les
std
mov
push
xchg
adc
sub
ja
js
or
out
insb
fidivrs
push
cwtl
les
fnstenv
cwtl
inc
inc
and
xor
xchg
mov
shlb
cld
mov
dec
mov
les
scas
outsl
ficoms
sub
cmc
push
cmp
or
enter
and
push
jo
mov
cmp
stos
or
add
stc
push
xchg
xchg
pop
inc
sub
or
dec
cmc
mov
or
cltd
insl
add
push
mov
cmp
mov
std
cmp
pop
rclb
cmp
sarl
cs
aas
mov
inc
pop
mov
mov
loop
fldcw
pop
pop
dec
insl
push
dec
test
cmp
frstor
js
icebp
fsubrl
xor
je
xchg
aaa
jae
imul
sub
insl
lretw
inc
lret
ret
outsb
inc
push
sub
imul
lods
call
xchg
sub
movhlps
add
cs
movsl
icebp
mov
dec
xchg
das
pop
les
popf
lods
xor
sub
inc
inc
xchg
ja
int3
cmpsl
movsl
push
mov
or
jl
stc
mov
aaa
pop
ds
andb
xor
xor
adc
jp
fldenv
enter
dec
mov
cmpsb
push
shll
ret
mov
std
mov
sub
out
mov
lds
cmp
pop
ret
imul
xor
dec
jne
fadds
ret
xor
sub
add
jnp
cmpsb
mov
xor
cltd
subb
xchg
movsl
call
xchg
push
idivb
pop
push
out
or
in
jl
cld
leave
loop
outsl
adc
and
push
cmpsb
mov
out
xchg
mov
sub
pop
mov
mov
pop
lea
lods
decb
inc
cmc
sbb
xor
aad
push
jne
adc
cmp
and
scas
xlat
subb
inc
push
dec
pop
sbb
lahf
stos
jmp
lods
test
inc
add
jne
fs
mov
sub
rcrl
aas
inc
shlb
in
cwtl
sub
and
sbb
aad
les
xor
fs
psadbw
add
mov
das
push
mov
aam
orb
sub
xchg
inc
xor
xchg
mov
jmp
xchg
inc
jp
fidivrs
inc
dec
fisttpl
sahf
jp
sarb
mov
inc
ret
shl
mov
or
sbb
xchg
mov
in
push
repz
mov
adc
mov
stc
and
js
lea
mov
lea
mov
mov
scas
es
xor
jle
jnp
mov
lods
pop
push
xchg
mov
shlb
mov
int3
bound
dec
sbb
stos
or
stc
arpl
fucomi
popf
dec
movsb
cmp
leave
mov
movsb
inc
in
push
add
add
dec
jmp
addr16
xor
and
sbb
or
movsb
sbb
pop
jle
scas
fcoml
jns
xor
icebp
lahf
test
int
movsb
fwait
out
inc
test
cmc
nop
sub
loopne
icebp
lret
mov
repz
jp
add
add
loop
movsb
pop
cmpl
mov
xchg
rolb
sub
mov
movsl
sbb
cwtl
ret
adc
mov
adc
mov
clc
jae
mov
sbb
mov
and
add
es
mov
clc
jo
and
pop
cmp
mov
mov
rcl
hlt
add
loope
sbb
cmp
imul
add
adc
fisttps
mov
aad
push
inc
popa
xlat
mov
mov
push
and
inc
pop
xchg
stc
je
sti
mov
sarl
xchg
add
push
movsl
mov
pushf
enter
cmp
inc
push
mov
lret
jl
cmpb
add
jmp
lret
adc
dec
cmp
mov
push
test
lods
ds
mov
dec
pop
jo
cwtl
je
lea
push
lret
sti
cmp
xor
pop
push
inc
or
push
rcrb
adc
sarl
sbb
mov
inc
or
or
and
aaa
sub
mov
aas
mov
cmp
shrb
int
push
jecxz
add
or
out
push
dec
ljmp
hlt
xchg
jl
push
je
in
movsl
jle
mov
test
jb
sub
cltd
mov
sbb
test
and
pop
popw
arpl
ljmp
or
sub
das
push
fisttpl
test
mov
ret
xor
fsubr
pop
add
push
xchg
xor
fwait
push
mov
push
push
subb
out
and
outsb
sbb
or
and
stos
pop
into
push
mov
jbe
pop
cli
push
dec
adc
cmp
mov
cmc
rclb
jl
in
sub
adc
test
jo
sar
iret
mov
push
and
xorl
inc
add
fs
xchg
das
push
push
ret
int
ficoml
cmpsb
imull
sub
cmp
add
fdivrl
lret
jg
add
test
fsubl
push
out
rorb
test
add
push
int
nop
js
sbbl
xchg
decl
ljmp
add
mov
in
fnsave
sahf
js
pop
mov
test
or
pop
repz
add
inc
repnz
jp
fwait
ret
pop
xor
out
jmp
adc
push
and
xchg
das
mov
mov
nop
cmp
push
pop
xor
int
fwait
fs
dec
adc
inc
cmc
and
daa
mov
push
test
pop
push
arpl
mov
push
insb
dec
imul
pushf
testl
mov
push
lahf
out
or
fmuls
test
pop
fwait
push
lods
pop
int3
fnsave
mov
aam
rorb
clc
arpl
stc
std
cltd
cmp
jae
jb
and
popa
pusha
push
sbb
pop
push
in
aad
sub
lahf
add
sub
push
fnstenv
inc
call
sbb
xor
int
lret
ds
mov
jg
cld
and
hlt
xor
rcll
inc
insl
push
inc
outsl
xor
cmp
in
test
sub
xor
testb
xchg
pushf
xchg
fs
icebp
mov
jne
rcll
inc
pop
adc
insl
and
cmp
stc
pusha
lret
in
or
pop
jnp
xchg
dec
call
pop
icebp
filds
in
add
push
mov
inc
fidivs
shll
mov
imul
sbb
rorb
cltd
xor
lock
das
xchg
mov
dec
inc
imul
lret
cs
lods
aas
add
rcll
and
insl
sbb
sbb
inc
mov
aaa
pop
stos
in
arpl
fisttpl
mov
flds
popf
lret
mov
xchg
sbb
dec
das
sub
add
out
insb
ss
filds
jmp
lods
mov
xor
addr16
xchg
mov
cltd
shlb
stos
lods
add
push
aad
pop
and
cli
pop
push
shl
fisttps
lea
hlt
ds
sub
repz
insb
dec
pshufw
shll
pusha
dec
sbb
inc
subl
jmp
pop
pop
insl
sub
mov
jno
into
enter
xchg
adc
adc
sub
jno
inc
es
mov
cli
inc
pushf
cmp
pop
pop
lret
xchg
cltd
and
inc
mov
dec
xor
gs
pusha
clc
fcmove
sub
and
mov
hlt
clc
scas
mov
and
push
jp
popa
mov
adc
lea
aaa
push
movsl
push
shlb
xchg
xor
add
mov
sarb
push
push
test
fcoml
xor
sbb
xor
add
pop
aaa
add
adc
movsl
addb
and
inc
xlat
inc
lods
jo
lock
mov
in
mov
aas
inc
sub
cmp
mov
loop
or
stos
sbb
cli
inc
mov
aaa
push
jle
jecxz
fs
arpl
cmc
fsubr
or
dec
shrl
add
clc
aas
adc
inc
inc
aad
jecxz
and
mov
in
testb
inc
adc
hlt
inc
out
repz
cmp
sahf
inc
lods
and
xchg
test
jns
stos
in
in
call
subb
lret
arpl
lret
sbb
into
jne
sub
xchg
shr
mov
cltd
lods
push
les
icebp
pxor
rorb
cmpsb
ret
rcrb
faddl
xchg
mov
sbb
cmp
adc
lock
fs
adc
aas
push
adc
push
adc
iret
mov
movsl
lods
stc
xchg
and
fiaddl
mov
or
lea
xor
cli
mov
xor
cmp
xor
xchg
pop
sbbb
cmp
aaa
into
lods
or
fbld
dec
and
cmp
pop
push
push
add
cmp
cmp
jnp
push
cltd
sub
dec
jecxz
gs
insl
in
jbe
aad
lods
subb
fwait
mov
jg
cmc
push
xor
ss
pop
jp
or
add
cmpsl
cmp
test
jns
scas
loope
sbb
outsb
call
add
mov
sbb
mov
pushf
ret
je
jae
push
shll
dec
in
jp
add
push
je
and
mov
testl
out
cli
xor
xchg
sti
popf
cli
adc
sti
jbe
in
cwtl
and
jo
test
pop
mov
mov
or
popa
jge
and
inc
mov
out
test
out
mov
test
adc
xchg
sbb
dec
xchg
push
inc
jl
mov
xchg
and
dec
pop
sbb
add
xchg
or
mov
or
cmpb
dec
push
dec
into
fdivrl
push
imul
and
adc
or
push
jb
dec
jge
aad
xor
int
jl
icebp
and
push
add
pop
ret
xchg
mov
xchg
fwait
les
push
inc
test
mov
test
icebp
add
pop
dec
into
or
scas
addr16
xor
andb
push
mov
fnsave
cmp
outsl
cli
xchg
xchg
or
push
mov
inc
fidivrs
jmp
fsts
not
mov
cmpsl
rol
mov
cli
loopne
sti
add
out
pop
mov
cmpsb
and
test
mov
leave
push
inc
leave
push
in
rorl
mov
divl
cmp
jb
fisubl
faddp
stc
ss
bound
iret
sub
sub
inc
popa
aas
loop
in
sti
sub
out
daa
adc
sar
xor
lahf
ss
lahf
xor
in
cmp
fs
jecxz
jb
xchg
pop
adc
sti
andl
in
subl
inc
push
popf
js
test
shlb
cld
xlat
dec
test
jo
jnp
stos
inc
push
sti
jae
sbb
lods
andb
xor
lcall
xchg
aam
fcomi
xchg
mov
sbb
cs
xchg
call
dec
enter
or
dec
dec
in
add
rclb
js
fidivs
outsb
loope
dec
je
sarb
xorl
into
lret
ret
mov
fbld
orb
ret
sub
mov
ds
out
rcll
and
jno
inc
xor
cmp
inc
fdivl
push
or
mov
xchg
and
in
mov
nop
cmp
push
adc
aaa
imul
lods
pusha
sahf
dec
and
cs
ds
mov
sbb
mov
loope
sti
xchg
push
cmp
lock
test
movsl
icebp
jg
repnz
push
je
mov
das
mov
push
jecxz
xor
aam
jecxz
sub
mov
or
adc
cmpsb
cmp
cld
les
or
jne
sbb
pop
nop
xor
jge
out
rorb
jne
popa
mov
xchg
mov
mov
out
sub
loope
push
imul
add
mov
movsl
in
ja
jno
xchg
data16
mov
xorl
xor
sub
sub
sub
stc
sti
daa
mov
xor
jg
sbb
inc
push
push
imul
andb
stc
lea
mov
mov
mov
mov
xchg
sub
mov
mov
jl
rcrb
jb
mov
push
mov
movsb
loopne
insl
adc
dec
hlt
xchg
xlat
push
push
or
je
push
jge
ljmp
into
pop
xchg
cs
push
ja
aaa
mov
fisttpll
push
pusha
lods
inc
in
lcall
lret
std
call
mov
xor
mov
jmp
or
fs
jbe
and
shll
iret
ret
lods
pop
lock
jg
pusha
int
mov
test
aam
std
xchg
popf
loop
stos
pop
jnp
inc
and
insb
add
mov
mov
sub
or
mov
fmull
xchg
sub
arpl
fisubrs
nop
arpl
jmp
cwtl
dec
loope
fimull
iret
decb
fstpt
jmp
movsb
mov
jl
lds
notb
push
jle
or
fnstsw
mov
mov
pop
fwait
int
inc
scas
test
enter
pop
inc
out
add
jge
fsubrs
mov
jae
dec
pusha
ss
pop
insl
lock
cwtl
jmp
sbb
mov
mov
inc
jne
pushl
jge
ret
cld
mov
mov
cmp
jo
rolb
xchg
pusha
mov
push
dec
add
ds
cltd
sub
jg
xor
mov
or
pusha
negl
pop
stos
clc
jle
sub
push
jmp
aas
pop
insb
mov
inc
jbe
out
xor
sub
out
mov
fistpl
jl
adcl
rcrb
add
addr16
adc
int
fistpll
xor
sbb
cwtl
mov
jp
outsb
cmpsl
mov
push
add
pusha
ss
push
mov
out
test
mov
jne
mov
jns
mov
test
or
cltd
std
mov
into
mov
insb
jns
or
pop
push
ror
add
xchg
pop
pusha
stos
mov
push
cmp
push
xor
fbld
xor
jg
xchg
adc
out
ljmp
sub
imul
xchg
mov
pop
ljmp
enter
push
and
fsubs
adcl
cmp
addl
pop
lahf
push
xor
or
xchg
mov
mov
sub
cmp
mov
fdiv
mov
insb
mov
lods
fwait
pop
fidivrs
daa
xor
pop
cmpsl
push
lods
pandn
xchg
pop
fwait
inc
adc
mov
mov
cltd
jno
cmpsl
js
cmp
popf
or
cs
sub
adc
cmp
js
subb
push
pop
xchg
ss
or
cmp
call
cmp
pop
test
icebp
mov
movsl
push
in
adc
stos
lods
jmp
and
pop
pop
daa
sahf
dec
nop
push
enter
insl
sbb
movsl
mov
les
test
int
fistps
out
push
in
dec
sub
or
icebp
xchg
sub
cmp
leave
jp
sub
jp
push
push
dec
fwait
pop
repz
xchg
ret
std
xchg
popa
push
xor
push
sbb
addr16
cmp
pop
push
mov
mov
out
jge
mov
inc
popa
imul
popa
test
jge
cmp
fwait
xchg
dec
mov
cmpsl
ret
out
pop
sbb
inc
mov
data16
inc
fsubl
adc
mov
popa
stos
cmp
cs
mov
movsb
inc
mov
inc
ret
lock
arpl
into
mov
loope
rcrl
and
mov
push
push
test
push
lock
ret
hlt
sub
xchg
mov
xor
jg
testl
cwtl
je
pop
loopne
movsb
jne
cli
ds
sbb
pusha
idiv
scas
test
ss
in
int
and
mov
in
cwtl
test
mov
lret
xor
cmpb
fldcw
sbb
pop
dec
fsubrs
hlt
mov
js
or
aas
add
pop
outsl
sbb
pop
or
loope
pop
sub
iret
andw
xchg
mov
mov
mov
imul
pushf
in
add
pusha
xor
fwait
push
jecxz
add
les
sub
sub
neg
jle
ret
mov
push
fisubrl
lea
cmp
ja
pop
stos
cmpl
or
inc
out
mov
sbb
and
add
addr16
test
mov
out
js
sbb
repz
and
cmp
cs
mov
iret
mov
pop
dec
jmp
cmp
jbe
dec
sub
decl
lret
cmp
push
ljmp
mov
or
push
and
sbb
cmp
push
fxtract
dec
push
and
add
flds
int
xchg
mov
enter
jbe
pop
and
cwtl
mov
adc
ljmp
mov
out
outsb
add
ja
adc
jo
xchg
push
outsl
mov
push
mov
insb
cs
aaa
shll
addr16
enter
cmp
ljmp
jge
outsl
sbb
push
ds
sbb
gs
fdivs
ja
je
fidivrs
je
mov
pop
outsb
imul
outsb
add
fwait
repnz
into
cld
aaa
test
daa
and
sahf
gs
hlt
int3
push
int3
jecxz
or
leave
dec
out
sti
jnp
inc
test
mov
sub
jecxz
push
mov
inc
xor
dec
std
loopne
aam
lcall
out
test
out
cmp
xchg
ljmp
inc
xchg
repz
lods
xchg
sub
push
mov
enter
push
push
sbb
or
stc
pop
jecxz
nop
xchg
subl
mov
rorl
in
xchg
pop
nop
pop
cmp
sti
sub
mov
pop
rcrl
sahf
bound
cli
jb
sti
ret
jp
inc
stc
adc
ss
inc
andl
inc
test
inc
loop
popf
push
push
sbb
lret
pop
mov
mov
fidivrs
int3
mov
push
ror
pop
scas
jae
xor
inc
xor
mov
in
lods
push
xchg
shrl
daa
fsubrl
lcall
xchg
jmp
daa
scas
xor
lcall
xor
jle
nop
outsb
pop
fdiv
test
in
jg
pop
xor
inc
mov
in
mov
lret
xchg
sub
sahf
pop
or
lret
cmp
pop
aam
xchg
xchg
je
cwtl
sbb
addl
or
xor
push
or
les
mov
sbbl
jno
mov
enter
jmp
sahf
or
lods
and
xchg
mov
sbb
jnp
movsb
std
xchg
sbb
push
inc
sbb
mov
stos
int3
out
test
and
adc
pop
out
sub
pop
push
mov
xor
fbstp
cmp
loop
repz
movsl
dec
scas
nop
mov
jle
push
jecxz
sub
cli
pop
dec
inc
dec
daa
mov
gs
insb
dec
sub
sbb
mov
call
cmpsl
mov
adc
roll
mov
fcmovb
xchg
xchg
jecxz
and
loope
dec
push
xchg
aaa
popf
imul
mov
and
fcmovnbe
mov
mulb
movsl
fcoms
xchg
lock
outsl
push
inc
sahf
out
pop
jecxz
mov
jmp
dec
dec
pop
add
outsb
xor
arpl
dec
pop
loop
in
les
popf
sub
enter
push
dec
push
and
cld
sbb
pop
mov
sbb
ret
rcll
shrb
pop
cmp
xor
ret
pop
cs
pop
or
testl
pop
xchg
cs
repnz
mov
fimull
pop
bsr
inc
jbe
fildll
stos
aas
cmp
jmp
in
shll
push
popf
shll
or
or
pop
mov
insl
sbb
adc
push
orl
mov
in
push
js
add
inc
insl
hlt
pop
and
dec
test
push
adcl
xor
ss
popa
or
mov
bound
jl
arpl
call
mov
xchg
scas
call
rcrl
mov
pop
mov
cli
inc
fdiv
jnp
mov
push
cltd
sti
leave
jno
mov
ret
ror
sbb
mov
inc
daa
jb
jns
stc
sahf
lods
sub
repnz
fld
sti
mov
enter
xchg
dec
push
inc
out
mov
cltd
mov
aam
es
or
push
sbb
in
stos
loop
xchg
inc
imul
push
lods
cmpsl
and
sbb
or
mov
iret
fstpt
imul
mov
les
fldcw
add
fsubr
sbb
and
xchg
pop
xor
mov
js
rol
jnp
jp
addb
test
mov
ret
fiadds
sub
xchg
popa
sbb
add
rcll
inc
fiadds
adc
and
int3
pop
mov
movsb
fs
popa
in
rcl
sti
xor
cltd
sarl
ret
negl
jb
ja
sub
cmp
dec
add
sub
jl
inc
dec
shl
mov
mov
xor
fucom
cmp
push
stc
mov
repnz
xor
into
aaa
or
mov
mov
rclb
fsubr
enter
jmp
adc
jle
jo
das
lea
loop
and
ret
js
xchg
push
xchg
adc
dec
outsb
scas
jno
insl
cwtl
sarb
dec
inc
pop
js
shll
push
enter
push
nop
mov
inc
push
pop
mov
jle
xchg
lock
stos
int3
lock
lea
cmp
mov
mov
or
rcrl
fdivs
cld
adc
cmpsl
cwtl
lcall
psllw
cmp
sahf
jle
xchg
mov
pop
lods
lock
dec
jmp
das
test
mov
push
inc
ss
cltd
divl
push
inc
cmpsb
leave
in
mov
fstpt
subb
mov
push
sbb
out
in
mov
lcall
push
jb
std
xor
sbb
xor
inc
sub
jo
cmpl
aad
ret
cmp
pop
in
mov
push
xchg
and
xchg
jmp
add
push
iret
or
pop
data16
enter
iret
test
faddl
ljmp
lods
adc
ror
out
faddp
lea
fs
mov
push
icebp
ss
outsb
add
sbb
popa
dec
xor
loopne
cmp
pop
dec
pop
out
inc
dec
inc
inc
incb
push
xchg
mov
jne
inc
ja
jge
push
fstl
push
into
sarb
sbb
pushf
sbb
xchg
bnd
sub
jnp
scas
loope
aad
jg
push
adc
xchg
sti
fwait
jno
rcll
pop
xor
sub
mov
push
lods
push
sub
cmovp
mov
repnz
mov
arpl
pop
mov
cld
jmp
push
cs
call
xorb
mov
loop
xor
in
sbb
movaps
pop
in
pop
ja
jge
int
push
push
or
pop
outsl
sbb
aad
nop
loopne
sub
xor
stos
orb
jmp
int3
jl
mov
jae
push
clc
jl
mov
push
cmp
icebp
loop
xchg
inc
fimuls
push
scas
in
pop
cmpsl
orb
mov
mov
cld
mov
test
ror
inc
push
push
les
in
std
or
add
jmp
jmp
bound
adcb
dec
dec
and
jne
adc
out
push
movsl
xor
mov
sub
stc
sbb
jns
jmp
or
sub
rcl
movsb
xchg
sub
andb
std
fbld
pusha
pop
repnz
mov
outsb
add
loop
pop
sahf
jge
fisubl
push
lcall
xor
jnp
adc
je
xchg
fcomps
cmp
in
inc
call
ja
aaa
add
xor
adc
inc
orl
fisubl
sbb
stc
scas
stos
push
lret
cli
inc
imul
mov
sahf
das
shr
stc
adc
xadd
inc
mov
nop
aas
adc
dec
mov
dec
mov
lods
pop
mov
daa
fisubrs
push
dec
and
xor
lahf
push
das
shll
lret
cld
rcrb
repnz
int3
out
loope
shl
or
push
cmp
lds
mov
pop
std
xchg
insb
mov
cmpsl
iret
cmp
int
rorb
ret
fistpll
pop
scas
fcoml
imul
gs
cli
jne
adc
jg
std
daa
mov
sysret
lahf
inc
cmp
push
mov
pop
xchg
insb
mov
ret
jg
pop
adc
adc
bound
insl
pop
push
inc
jmp
aad
cmpsb
push
jno
stos
pop
pop
pop
jmp
add
lahf
push
fidivs
jle
dec
jae
aas
or
mov
cmp
push
sub
push
cli
test
outsb
imul
sub
and
incb
aas
xchg
pop
xlat
jns
sahf
sub
and
repz
pushf
adc
adc
fs
xor
push
repnz
orl
cld
push
push
iret
bound
out
cmp
test
je
ret
addl
pavgw
iret
sahf
mov
xchg
mov
cld
btr
pop
aad
out
adc
and
or
pushw
xor
xchg
jmp
movsl
and
int3
rorl
push
hlt
fwait
dec
push
imul
lock
cmp
sbb
xor
icebp
jno
inc
xor
add
repz
sbb
and
into
pop
and
lods
lods
sbb
je
dec
and
int
mov
xchg
push
movsb
cld
jae
adc
ss
sub
scas
and
or
dec
inc
nop
mov
mov
jg
inc
fidivl
sbb
inc
mov
or
inc
mov
xor
je
or
jle
jmp
lea
push
add
lret
xor
lcall
mov
pop
addr16
outsb
add
mov
jge
xchg
push
jb
mov
mov
cmp
mov
inc
cmpsl
pop
lea
in
lea
adc
xor
fistpll
in
inc
dec
adc
lahf
movsb
dec
xor
daa
out
jnp
adc
xor
mov
leave
jo
sbb
outsl
cmp
subw
fdivs
push
outsb
mov
lock
mov
and
aas
pop
inc
sbb
and
and
fsubrs
fimull
pop
inc
pop
jp
xorl
jg
insl
cmp
jmp
aad
inc
in
or
xchg
mov
cltd
das
pushf
leave
faddl
in
test
jg
iret
in
or
xchg
push
and
mov
ret
leave
test
ds
mov
or
pop
aas
cli
xchg
mov
inc
or
pop
mov
inc
mov
push
lret
bound
mov
sbb
lock
push
shl
xchg
sub
or
rcll
es
pop
adcb
pop
scas
inc
xchg
and
mov
pop
repnz
jns
mov
inc
idivl
jle
nop
dec
inc
fildl
mov
stos
mov
mov
dec
push
push
mov
push
jmp
arpl
sbb
bound
and
push
adc
fxtract
scas
mov
xchg
int3
push
push
out
cmp
push
les
jle
outsb
and
pop
shr
mov
mov
pop
mov
jae
adc
daa
inc
es
mov
or
mov
sub
lea
or
xchg
in
adc
sub
add
negb
stos
mov
pop
mov
jecxz
int3
lahf
movsb
fldenv
cmc
push
stos
test
jae
test
ret
js
fwait
and
fistpl
xchg
cs
leave
pusha
cltd
fldl
inc
rorl
inc
pop
inc
repnz
xor
dec
xchg
out
jns
cmpsl
or
cmpsl
mov
fstps
adc
cld
je
aaa
xchg
pop
cli
mov
int3
pop
shrb
pop
ljmp
push
or
int3
mov
mulb
fstps
add
lret
pushf
aam
mov
mov
jmp
fsubr
jae
inc
cmp
cmp
sub
sbb
cmp
push
pop
cmp
out
sarl
push
jo
bnd
aam
inc
inc
xor
push
pop
mov
pop
imulb
out
test
xchg
xor
mov
push
and
faddp
cltd
sub
mov
xor
sub
pop
adc
test
cld
lcall
in
stos
push
pushf
popa
ja
and
ds
jmp
je
and
lret
ficompl
mov
dec
mov
mov
aam
rcr
popa
xor
pop
ret
lock
outsb
pop
cmp
mov
aad
subb
out
lock
lret
xchg
or
dec
shll
outsl
mov
ss
ljmp
sub
push
mov
mov
inc
faddp
lock
lret
cmpsb
pop
fsubr
roll
push
cmp
ret
cmpsl
ds
xlat
lds
add
mov
jne
movsb
push
push
sbb
fbld
add
pop
xchg
mov
cmp
cmpsl
out
fwait
adc
adc
lds
mov
sub
jns
dec
mov
lcall
jae
rcl
fwait
dec
pop
lea
loopne
push
lcall
mov
mov
inc
lods
push
test
lahf
or
inc
xor
int3
ljmp
push
fnstenv
les
adc
dec
push
mov
inc
xchg
push
in
sahf
into
shlb
fnstsw
add
cmp
sahf
lods
adc
push
stos
jno
push
inc
fildll
jmp
dec
mov
fs
iret
mov
ret
dec
sub
stos
xchg
add
push
jge
repnz
ljmp
pop
stos
inc
push
xchg
imul
test
cmp
les
sbb
mov
insb
cmpsb
in
pop
sub
stos
jnp
movsl
lods
fsubrs
repnz
bswap
in
cmc
cmp
pop
and
fscale
xchg
ret
ds
mov
flds
push
push
int3
cmp
outsl
sub
xchg
subl
lret
shrb
repnz
xor
pop
insl
iret
sbbl
scas
push
sbb
mov
adc
aaa
inc
pushf
test
pop
cmpsb
lock
mov
arpl
icebp
mov
gs
and
shr
cmp
subb
mov
mov
andb
adc
cmp
xor
adc
pushf
sub
xchg
jnp
xor
shrb
push
enter
jne
into
jbe
movsl
outsl
data16
jbe
mov
dec
and
out
lods
or
sub
jle
les
add
sbb
mov
jb
iret
data16
insl
mov
icebp
cltd
test
mov
cmpsl
shlb
push
or
es
pop
ljmp
call
push
jmp
and
jns
mov
lods
orl
inc
andnps
push
idivl
mov
lahf
dec
xchg
out
xor
xchg
rcrb
ja
pop
cs
out
enter
mov
shlb
cmp
ds
pop
push
push
shl
cmp
dec
call
je
dec
mov
clc
and
mov
jp
or
insb
xor
popf
or
js
sarb
cmc
fistpll
out
sub
leave
lods
or
mov
sahf
lods
mov
sbb
inc
rcll
cmpsl
cmp
pop
lock
mov
orl
fnstenv
enter
xor
sub
adc
mov
dec
jae
dec
jne
xchg
mov
aaa
pop
dec
push
or
mov
lcall
and
cmp
test
jecxz
jb
dec
add
int
cltd
loop
aas
jmp
cmp
test
js
xor
xor
jp
ret
pop
add
sbb
stos
jl
enter
mov
pop
jl
pop
xor
loope
and
shl
cmpsb
mov
add
xor
insb
jle
jno
or
jecxz
mov
sti
sbb
or
loopne
callw
mov
pop
and
xor
mov
adc
gs
insl
mov
push
in
addl
in
push
sbb
inc
push
or
sbb
daa
addl
xchg
aas
movsb
fmuls
insl
or
outsb
add
mov
push
inc
push
sub
jnp
push
lea
mov
aam
pop
push
add
es
and
xlat
movsb
js
add
jae
ja
pop
xchg
or
and
pop
lods
push
outsb
out
aam
iret
mov
loopne
in
mov
push
inc
fidivrs
mov
or
clc
out
xchg
sti
dec
shld
push
call
sub
ljmp
sbb
inc
fisttpll
das
addr16
out
or
mov
xchg
jo
movsb
jl
repnz
mov
mov
out
jbe
dec
mov
push
jbe
je
jle
in
adc
mov
or
call
enter
add
loop
inc
sahf
jae
push
cltd
cmpsl
xchg
dec
mov
adc
jmp
add
jmp
dec
roll
ljmp
mov
inc
xor
inc
cmc
cwtl
fistpl
mov
mov
dec
sub
mov
enter
pop
shlb
cmp
jg
fimull
lock
sarl
pushf
push
jecxz
jno
lods
jo
push
xlat
cwtl
scas
addb
aam
in
or
pop
ret
jae
fildll
std
xchg
lds
xchg
stos
jb
xor
and
aaa
add
mov
xchg
stos
out
ljmp
xor
pushw
mov
and
push
sbb
mov
call
sarb
inc
adc
push
xchg
out
jmp
fnstcw
mov
jmp
cmpb
pop
or
fldenv
inc
xchg
cli
jne
mov
fcom
xor
push
push
out
mov
roll
sub
mov
ret
push
aam
lret
xchg
icebp
inc
xor
adc
inc
idiv
push
lock
stos
cmp
or
xor
js
pop
lcall
and
mov
lods
inc
pop
sti
shr
cmp
lret
imul
push
cmp
xchg
sub
nop
xor
xchg
push
and
std
and
inc
jg
nop
leave
mov
fsub
ljmp
dec
daa
cmp
jne
sbb
xchg
dec
or
xchg
mov
push
inc
sbb
push
aaa
push
push
and
sub
lock
and
pushf
cmp
fistl
xor
fwait
daa
jg
pop
mov
sbb
in
cli
cmp
nop
mov
dec
xor
jbe
mov
loope
jo
sub
and
xchg
hlt
popa
cmp
jns
aas
and
pop
addr16
int
aad
rclb
lods
bound
addr16
or
dec
stos
xchg
push
in
push
dec
adc
test
xchg
inc
stc
popa
cmp
mov
mov
xorb
bound
imul
jg
xor
in
inc
cmp
mov
xchg
ds
jl
loope
mov
aam
add
jnp
fsubl
in
outsb
jnp
loopne
jl
pop
pop
mov
outsl
jge
daa
mov
push
mov
fsub
sti
scas
subl
sub
sbb
subb
jb
jg
xchg
rolb
mov
test
sbb
xchg
sub
mov
fldenv
fistl
fs
mov
std
pop
movsb
fs
inc
inc
mov
push
or
in
loop
add
lock
adc
bound
imul
jecxz
xor
sti
pop
jo
es
es
xchg
popf
jp
inc
in
and
xchg
xlat
in
cli
loop
jae
cltd
out
pushf
hlt
mov
or
bound
sbbb
pop
jno
dec
lock
loopne
rcll
dec
mov
push
pop
in
dec
sbb
rorl
sbb
sbb
in
cli
push
test
notl
in
icebp
xor
jecxz
xchg
fxch
mov
insb
sub
cmp
mov
scas
and
lock
xchg
jae
dec
inc
add
cmp
mov
add
inc
out
xchg
loopne
mov
inc
pop
popf
mov
and
in
iret
cmc
into
add
mov
shlb
in
in
jbe
sub
sarl
mov
mov
movsb
cld
or
test
mov
push
fists
data16
sub
cmpsb
pop
movsl
push
out
or
jne,pn
mov
icebp
jns
sbb
dec
push
shl
aas
ret
pop
jmp
or
sti
and
dec
ret
out
and
pop
pop
clc
inc
and
shrl
inc
dec
repnz
xor
scas
dec
out
xchg
inc
es
movb
outsb
pop
jo
xchg
mov
push
xor
sub
cwtl
dec
push
gs
or
sub
xchg
shrl
in
bswap
mov
mov
xchg
sub
or
sub
in
cld
add
sub
aad
fsubs
cmpsb
cmpsb
and
sbb
lret
js
out
mov
lret
add
pop
sbb
insb
popf
adc
pop
ljmp
jmp
outsl
and
aaa
fimull
lcall
push
xor
and
sub
push
cmp
inc
outsl
xchg
dec
sbb
shrb
mov
dec
cmpsl
ret
dec
lret
add
push
jge
mov
dec
jecxz
add
lea
int3
jno
movl
dec
jae
jle
push
push
xchg
push
iret
iret
push
and
fs
jmp
mov
cmp
lock
jp
push
in
flds
out
dec
movsb
xchg
xor
and
cmp
ds
pushf
sub
xchg
and
mov
dec
push
jge
sbb
out
xchg
pop
ret
ss
dec
movsb
xchg
fld1
nop
mov
jmp
push
add
mov
fs
and
push
push
lock
into
orl
jle,pn
mov
jns
dec
xor
ja
xchg
cmpsl
and
notl
rorl
push
dec
mov
jle
imul
incb
mov
sub
or
test
imul
cmp
push
inc
sar
js
cmpb
sub
or
and
pop
ret
stos
mov
scas
lahf
mov
lock
cwtl
dec
and
loopne
sbb
mov
or
xor
fdivs
jns
addr16
xor
mov
aam
pop
inc
test
inc
subb
fisubs
ss
fucomip
cld
insl
js
addr16
inc
push
cmp
mov
iret
and
pop
loope
mov
inc
movsb
lock
sbb
lret
cmpsl
jae
xor
push
mov
test
sub
mov
es
outsb
in
sub
nop
jo
push
mov
jno
je
sub
into
add
bound
mov
xor
scas
sbb
bound
fnstcw
sahf
add
loop
shrb
test
sub
int
xchg
stos
aas
inc
adc
lds
shlb
xchg
dec
fiaddl
mul
cmp
cld
movsb
push
jnp
ljmp
pop
nop
push
js
mov
out
popa
popa
pop
push
jnp
js
out
bnd
subl
fiadds
sahf
in
outsl
or
jecxz
jo
and
test
clc
jae
das
push
or
es
sbb
fs
jl
rorb
mov
or
test
cmpsb
mov
push
inc
mov
lock
and
push
pop
xor
push
aas
and
pop
xchg
cltd
xor
cli
pop
and
mov
jge
or
cmp
sahf
jne
rcrb
adc
iret
subb
dec
add
add
shll
pop
cwtl
stos
lea
mov
jg
cmp
lahf
repnz
jb
out
adc
cmp
xor
pop
mov
mov
ss
push
shrl
ss
push
sbb
testb
inc
adc
xchg
popf
stc
nop
iret
mov
enter
xchg
fnstsw
inc
repnz
fsubrl
pop
ret
call
add
mov
add
cmp
ljmp
xor
fldt
out
add
stos
inc
rorl
mov
out
and
rorb
dec
mov
movb
dec
addb
mov
imul
xchg
push
roll
dec
sbb
clc
ja
ret
movsl
mov
loop
ficoms
push
pusha
xor
xchg
gs
mov
lcall
sti
xor
sub
xchg
dec
adc
ret
mov
rcrb
and
cmp
jmp
xchg
loop
xor
movsb
mov
imul
xacquire
rorb
jp
or
jnp
jecxz
orb
jg
int
jns
lds
clc
xchg
stos
test
sub
mov
pop
jno
jnp
int
adc
inc
add
adcb
outsl
dec
mov
mov
mov
cmp
adc
icebp
mov
nop
xchg
jnp
cmpxchg
xor
aad
xor
xor
cli
and
out
fnstenv
lds
xchg
add
mov
push
xor
into
mov
sbb
pop
outsl
aam
pop
mov
inc
xlat
fcomps
mov
cmpsb
aas
rcrl
fisubs
pushf
shl
stos
inc
fsub
fwait
dec
ret
cltd
jecxz
inc
and
inc
and
hlt
xchg
jmp
fmul
daa
mov
and
inc
cmpsb
ret
xor
sti
cmp
mov
jbe
pop
popa
add
aad
or
or
xor
inc
pop
lods
sub
loope
and
testb
ja
cli
inc
or
les
rcrb
mov
inc
test
add
xlat
movsb
das
and
push
push
stos
or
lock
ja
adc
fwait
and
cld
fbstp
stc
popa
jle
gs
mov
sub
fs
xor
push
xchg
ss
pop
jmp
repnz
lods
sbb
stos
lea
inc
mov
stos
dec
test
mov
cld
cmpb
ss
jo
fists
push
mov
sub
xor
jle
jbe
push
into
mov
shrb
xor
cmp
xlat
mov
adc
jge
inc
or
push
cmpsl
jb
push
imul
int3
inc
cli
cmp
test
inc
and
mov
gs
cmp
xor
inc
into
sahf
push
inc
divl
and
clc
imul
sub
arpl
stos
pop
pop
dec
repz
mov
mov
mov
leave
out
arpl
mov
xchg
lods
push
fisubs
or
jg
push
jno
xor
les
mull
int3
jle
repnz
sbb
pusha
mov
cmp
fldenv
mov
aaa
pushf
pop
enter
dec
out
lret
push
pusha
out
or
adc
dec
dec
mov
call
or
adc
test
and
fstpt
cs
jmp
test
mov
mov
push
setl
stos
loopne
jne
sub
push
mov
int3
imul
push
les
xchg
jo
sbb
mov
add
cltd
push
imul
pop
ds
pop
mov
mov
in
pop
js
lods
add
xchg
js
mov
js
or
sbb
xchg
push
pop
repnz
mov
fcmove
cmp
push
cmp
ja
or
mov
and
ffree
cmpsb
jp
fsub
pusha
enter
in
inc
push
jmp
jp
jno
lret
push
inc
in
outsl
loop
in
insl
push
mov
les
xchg
fcmovne
mov
sbb
enter
outsb
pop
icebp
adc
fnsetpm(287
mov
call
loopne
sahf
or
pop
mov
jb
fs
fsubrs
data16
imul
dec
aam
jns
push
jmp
mov
fnsave
pop
inc
into
cmpsb
fs
inc
cmpsb
in
pop
cmpsb
pop
mov
lock
js
pop
add
xchg
insl
and
sar
movsb
les
or
jmp
adc
mov
or
dec
pusha
sub
scas
push
inc
push
inc
pop
js
dec
movsb
js
sbb
dec
addl
hlt
mov
addr16
js
cwtl
rorl
fsubs
cmp
cmpb
fs
xor
sub
sub
or
arpl
sbb
scas
push
ds
inc
adc
and
loope
push
dec
dec
fisubrs
push
ret
pop
jne
nop
push
push
lods
sub
lods
iret
clc
cmpsl
xor
push
mov
push
rcrb
arpl
rorb
push
fwait
xchg
mov
in
pop
sub
mov
test
call
xchg
sarb
or
inc
mov
jb
out
int3
xchg
push
sub
fldl
mov
int
int3
xchg
sbbl
mov
jg
mov
mov
movsb
das
repnz
out
int
inc
pop
push
lahf
testb
orb
leave
sub
into
jo
add
outsb
bound
data16
inc
dec
or
rcpps
das
test
jnp
scas
sub
pop
out
call
push
xchg
mov
mov
orb
xor
lock
icebp
sbb
sub
adc
adc
mov
std
sbb
test
in
sbb
xchg
out
inc
jecxz
mov
pop
cmp
out
adc
insb
test
pop
sbb
push
dec
aas
mov
sub
clc
xchg
sub
pop
dec
pop
or
mov
je
negb
inc
ss
outsl
pop
push
jge
rcl
push
test
sbb
jecxz
dec
jmp
add
sbb
push
aas
outsl
daa
les
inc
into
sti
popa
pop
xchg
shr
mov
loop
push
out
notl
lret
and
lret
test
std
ljmp
inc
xor
outsl
outsl
and
mov
js
push
outsb
ljmp
fwait
xor
out
mov
cmc
rclb
insl
sbb
mov
decb
push
lcall
je
sbb
mov
dec
test
int
cmc
notb
or
xorl
xchg
out
scas
cmp
rorb
push
or
xchg
mov
ljmp
lds
ds
dec
inc
int3
in
fs
pop
mov
mov
mov
fstps
inc
movsl
icebp
cwtl
stos
and
fdivp
pop
daa
jne
test
jb
data16
adc
lods
cmp
or
aas
sbb
sub
sub
orb
ja
push
movsl
sbb
lods
add
mov
test
add
aam
es
testb
add
inc
nop
je
and
cmp
insb
push
or
ljmp
pushf
outsl
mov
mov
shlb
data16
lret
rol
idivl
pop
outsl
adc
push
xchg
mov
addb
shll
jge
jno
lock
test
inc
mov
sbb
and
lret
inc
pop
mov
xchg
and
aad
scas
cli
add
nop
std
lcall
pop
cmp
loop
xor
orb
xor
jo
pop
sub
mov
out
test
xor
push
inc
lods
and
push
push
rcr
adc
repz
sub
movsl
js
js
xor
or
push
sub
jbe
int3
jge
or
gs
outsb
add
and
mov
int3
leave
push
aam
stos
and
fs
pushf
inc
pop
mov
push
xchg
cmp
jecxz
sbb
pop
mov
aaa
je
scas
clc
fcom
mov
mov
xchg
sub
out
add
stc
pushf
into
rol
popa
js
xchg
test
repnz
lret
das
and
loopne
add
inc
rorl
test
and
rsm
filds
adc
pop
lret
sbb
loope
jp
popf
add
mov
mov
adc
jo
push
inc
pop
mov
cmp
js
out
in
cwtl
xchg
cli
or
or
mov
sbb
add
dec
cmp
imul
dec
pushf
mov
dec
hlt
xor
pop
repnz
push
in
bound
aad
test
scas
adc
push
cmp
jb
jmp
insb
aas
jbe
ret
sub
hlt
std
test
pop
adc
mov
or
inc
xchg
add
inc
push
imul
sub
cmp
shrl
leave
ret
xor
pusha
icebp
ds
data16
push
test
jae
and
pop
int3
stos
push
repnz
fnstcw
mov
pusha
repnz
popf
nop
inc
in
test
clc
scas
add
push
and
arpl
inc
cltd
test
iret
pop
xor
inc
pop
hlt
adc
adc
pop
insl
loope
dec
imul
outsl
pop
lahf
imull
sarb
adc
push
adc
data16
sub
or
inc
pop
sahf
ja
out
jns
cld
stos
les
fdivr
pusha
js
mov
push
xor
lods
mov
fimuls
sbb
and
mov
pop
push
lret
cltd
and
jbe
xchg
xchg
jle
aaa
mov
add
add
cwtl
fldl
xor
loop
ljmp
xor
adc
fldenv
mov
outsb
das
inc
push
jp
out
xor
int3
mov
or
jmp
push
add
ret
dec
fisubrs
ret
data16
loopne
cwtl
xor
dec
jae
imul
add
inc
clc
imul
addr16
mov
mov
imul
jno
mov
test
ret
gs
dec
sbb
add
push
jg
jno
pop
push
pusha
lods
fnsave
fists
addb
daa
inc
aaa
jge
stc
sub
or
out
mov
push
mov
adc
mov
shlb
test
icebp
jle
pop
dec
mov
xor
dec
add
mov
mov
pop
popl
dec
mov
aaa
push
in
das
and
mov
les
imul
pop
mov
leave
ret
pop
add
inc
adc
xor
fwait
mov
imul
icebp
mov
xlat
jmp
out
sbb
sub
sahf
in
jb
xchg
mov
movsb
addr16
push
ja
xorl
dec
sub
fsubs
xchg
cwtl
gs
rorl
sbb
into
and
cmp
inc
push
repnz
pop
cmp
popa
jbe
int
dec
mov
idiv
jo
dec
or
dec
ds
int
jne
and
mov
out
mov
dec
or
jb
fldl
cmc
sti
es
sbb
jecxz
das
cmp
xor
xor
jle
inc
fs
mov
adc
inc
or
push
pop
stos
add
sub
imull
leave
push
push
je
lds
sub
mov
push
sbb
gs
cmp
stc
and
adc
sub
sub
lahf
or
fs
jae
pop
jb
outsb
movsb
loope,pt
dec
or
pop
in
in
imul
pop
rcr
addr16
mov
das
mov
into
and
sbb
dec
mov
sbb
int
test
and
es
ljmp
mov
clc
out
sub
lret
in
aad
in
jp
push
out
xor
cld
jnp
cltd
das
sub
incb
jae
or
adc
das
fnstsw
ret
movsb
and
in
dec
dec
es
dec
fisttpll
cmp
addl
adc
fisubrs
inc
or
mov
xchg
mov
xchg
outsb
fnsave
and
int3
mov
int
xor
or
mov
and
sti
jnp
sub
jp
mov
fisubl
or
hlt
lea
in
push
repnz
mov
sbb
les
cmp
jg
dec
pop
push
sub
dec
push
stc
xor
sarb
adc
repz
mov
lods
shll
in
mov
fwait
lcall
mov
jg
jmp
aaa
cltd
std
jle
clc
sahf
pop
dec
xor
xchg
cmp
xchg
sub
jno
jbe
add
stc
add
xor
outsb
lahf
insb
adc
xor
pop
mov
insl
pop
add
add
subb
jge
in
sub
dec
and
and
orb
sub
cltd
mov
or
add
push
out
jecxz
lahf
inc
cld
xor
out
in
and
or
leave
xor
movb
int3
stos
call
rorl
orb
jo
pop
mov
dec
pop
xor
sbb
dec
mov
outsb
ljmp
push
inc
pop
leave
into
mov
xorl
inc
fmulp
cwtl
sbbb
loope
leave
rorb
jbe
mov
shll
aam
and
stc
push
js
fisubs
call
jmp
std
sbb
mov
lds
call
ret
push
stos
pop
bnd
push
ficomps
cmpsl
and
ficoml
xchg
scas
sbb
mov
cmp
mov
inc
js
pop
and
fwait
daa
add
aam
shrb
jne
sub
icebp
mov
fisttps
ret
pop
rorb
into
andl
sbb
jl
in
xor
mov
fnstsw
fisubrl
sbb
mull
outsl
std
lock
push
push
cmp
lods
into
jns
andl
cld
mov
cs
fmuls
cmpsb
add
scas
jp
or
xlat
stos
leave
in
lods
xchg
inc
lods
lods
jmp
dec
mov
mov
xchg
pop
call
roll
pop
xor
jb
in
push
out
subb
cmp
mov
sbb
jnp
push
rclb
cmp
test
leave
add
repz
ljmp
fisubrl
pop
dec
xor
add
dec
or
and
mov
sbb
rorl
jmp
popa
out
fdivs
pop
outsl
cld
jmp
jno
jle
push
add
mov
mov
sub
int3
pusha
pop
and
js
ficompl
fimull
insb
jle
int3
xchg
pop
pop
rcll
movsb
aam
int3
loopne
mov
cwtl
les
scas
in
insb
stos
inc
jno
idivb
fcomps
iret
or
add
fdivrl
inc
dec
push
and
out
fdivrs
stc
or
add
inc
cs
into
out
lea
arpl
xor
int
jp
out
das
adc
arpl
cmpb
xchg
cltd
fmul
das
inc
aas
cmpsb
in
push
and
out
popa
or
lea
sub
adc
fs
xor
cmp
dec
ds
aaa
pop
shl
outsb
cwtl
push
pop
mov
jae
sub
das
notl
push
mov
rep
push
negl
cmp
pop
ljmp
sahf
push
sbb
push
outsb
sbb
push
pop
test
nop
insl
loopne
sbb
cmp
push
dec
cmp
fdivp
mov
add
mov
cld
and
rclb
cmp
inc
out
into
int3
jmp
pop
imul
aam
xchg
mov
in
jg
inc
adc
mov
xor
xor
jnp
insb
sub
cmp
mov
sub
leave
add
dec
xor
push
mov
mov
ds
inc
pusha
loop
dec
leave
inc
mov
scas
adc
push
shlb
jnp
rcrb
adc
and
pushl
incl
lods
xchg
test
jl
push
sbb
mov
jb
pop
jecxz
aas
sahf
roll
insb
mov
jo
and
xorb
push
hlt
rol
aaa
fistpl
js
jmp
andb
sub
and
cmp
jg
mov
xchg
push
jns
int3
mov
push
mov
add
or
clc
mov
mov
aad
push
and
aad
mov
imul
loope
xlat
xor
clc
js
rorl
mov
and
cltd
cltd
mov
aad
insl
in
jbe
pop
adc
mov
adc
mov
into
push
out
adc
jns
movsl
or
jne
in
mov
stos
add
es
xchg
or
popf
jno
insl
add
adc
dec
roll
xchg
imul
jnp
lock
mov
sbb
or
ret
adc
dec
mov
imul
orb
lds
dec
ror
sub
adc
xchg
sbbb
lock
inc
out
stc
xchg
dec
or
jle
mov
popf
mov
add
sub
jb
mov
dec
insl
mov
adc
jge
scas
mov
mov
ret
test
xor
adc
popa
mov
xchg
fsubs
hlt
andl
ret
mov
pop
fisubrs
int3
loopne
xchg
sub
inc
add
lods
lcall
lods
cs
stos
add
dec
xor
inc
shl
ljmp
jae
xchg
cwtl
jo
fdivl
mov
mov
out
je
adc
pop
push
pop
mov
leave
mov
xor
pop
outsb
repnz
xchg
imul
mov
iret
fnstsw
shlb
aas
mov
xchg
divb
aad
lret
int3
sbb
jl
cmp
dec
mov
push
lret
push
sub
iret
lret
lret
scas
insb
sbb
into
enter
push
fcoml
aam
jp
insl
adc
sub
jns
test
dec
mov
in
fwait
or
jmp
push
inc
outsl
jnp
lcall
sbb
and
mov
jo
add
mov
add
cwtl
pushf
adcl
int3
mov
xchg
cmp
arpl
enter
jmp
cltd
xor
cmp
sub
into
gs
sahf
into
popa
in
shll
flds
add
or
jbe
in
imul
inc
mov
repz
jmp
rcrl
sbb
push
stos
and
mov
sbb
loop
loopne
popa
adcl
push
imul
movsb
cmc
mov
mov
pop
imul
fcomps
xlat
je
xor
add
std
mov
in
push
test
pop
mov
jno
mov
mov
push
inc
int3
pop
aad
aam
mov
int
daa
cmpsb
out
lods
push
test
jmp
or
outsb
mov
nop
arpl
jb
inc
neg
jl
cs
cmp
lcall
push
fdivrl
sbb
sbb
and
push
dec
sbb
xchg
pop
data16
cmp
adc
roll
push
mov
in
jbe
mov
inc
lahf
jmp
ficoml
mov
adc
lahf
dec
mov
sub
je
sti
in
mov
popl
push
mov
je
ss
movsb
lcall
jbe
stos
insb
fidivrs
push
dec
addb
and
dec
xchg
cld
mov
mov
cli
in
sbb
in
push
sahf
inc
push
ss
lret
pushf
fbld
cmpsl
xor
loopne
mov
or
faddl
popf
sbb
adc
mov
cmp
inc
leave
out
inc
dec
jecxz
dec
out
popw
cmp
xchg
jne
movsb
jbe
lea
test
insb
xor
icebp
movsl
movsb
fistl
leave
loop
adc
mov
bound
mov
cmpb
mov
sarb
icebp
cmpl
pop
lcall
and
frndint
dec
xchg
inc
dec
ss
and
daa
push
popa
stos
dec
cmp
test
scas
in
xor
add
mov
push
xor
or
cs
repnz
stos
mov
out
xor
pop
xchg
daa
adcl
jne
testl
aad
stos
mov
rcll
xchg
movsl
popa
jnp
cmp
or
jo
dec
dec
jle
imul
inc
add
xchg
pushf
xor
repz
mov
or
lea
sbb
notl
shl
mov
mov
enter
in
scas
dec
in
or
stos
dec
cmc
mov
cmp
push
xor
inc
push
sbbl
mov
aad
sub
push
pop
and
das
cmpsb
cmp
push
jae
outsl
cli
sbb
xor
pop
andb
jo
xchg
cmp
adc
dec
pop
insl
dec
jg
lahf
cmp
fwait
je
push
jns
xor
jle
cmp
iret
push
pop
sbb
out
or
outsl
mov
jo
pop
pushf
push
sti
mov
sbbl
hlt
ret
out
mov
aam
into
sbb
je
mulb
movsb
xchg
lret
and
pop
sub
clc
cmc
fnstenv
mov
or
mov
inc
adc
push
sahf
cmp
divl
pushf
mov
into
push
pushf
inc
push
add
inc
mov
mov
mov
sbb
in
or
sarb
nop
pop
test
or
xor
shlb
cmp
jl
in
xchg
push
add
test
cld
and
in
stos
mov
ja
icebp
test
xorl
xor
xchg
cld
xor
push
addr16
cwtl
mov
fidivs
lds
push
addr16
push
inc
sbb
push
into
mov
sbbl
or
lahf
arpl
into
out
clc
xor
adc
dec
cmp
mov
dec
cmpsb
mov
mov
jae
mov
iret
and
xorl
adc
dec
loope
mov
mov
adc
testb
jmp
cmp
cmpsb
cmp
mov
mov
sbb
jae
std
or
cmp
pop
cmc
pop
iret
dec
pop
fldenv
add
xchg
imul
lock
movsb
and
bound
lock
sbb
leave
and
pop
cmp
xchg
pop
add
ljmp
xchg
dec
aad
mov
adc
push
insl
cmp
push
divb
dec
cmp
cltd
inc
push
pop
and
xchg
dec
pop
out
push
cmc
mov
jmp
push
inc
les
jo
xlat
or
xor
pop
jmp
push
sub
xor
stos
xchg
xchg
and
imul
cmpl
sti
xchg
enter
push
pop
mov
xor
scas
rcrb
xchg
ljmp
stos
mov
add
lock
xor
xor
mov
jecxz
nop
and
xchg
jg
insl
mov
sahf
dec
les
sbb
pop
in
rcrl
test
cmp
out
and
xchg
jne
js,pt
pop
movsl
and
jne
mov
push
stos
jmp
subl
daa
stos
mov
xor
xchg
push
mov
lock
xchg
lods
adc
jnp
dec
fldt
inc
add
in
mov
ret
add
in
and
pushf
outsl
lcall
popf
adc
das
rorb
pop
mov
lea
mov
into
xor
mov
xchg
aad
and
inc
xchg
insb
jne
ja
iret
pop
aad
or
fstps
ja
iret
mov
add
fisubs
xor
stos
inc
shl
jne
push
mov
aaa
jge
popa
xlat
inc
xchg
ds
ret
cmc
jbe
sbb
sub
add
movl
ret
inc
push
leave
fs
cltd
xor
iret
jbe
mov
xchg
mov
adc
adc
mov
cmp
shlb
xor
arpl
add
aam
cs
adc
xchg
or
pop
pop
test
and
inc
and
xchg
imul
pusha
icebp
sti
mov
and
fwait
add
stos
subl
adc
dec
dec
dec
mov
mov
mov
and
and
scas
jno
xor
popf
push
icebp
fsubrl
push
adc
xchg
xchg
shrb
push
mov
xchg
cmpsb
js
fstps
push
and
stos
xchg
daa
sahf
clc
pop
repz
das
mov
dec
pushf
loop
inc
pushf
cmp
fwait
test
mov
inc
fcoml
rclb
test
push
fnstcw
int
and
clc
stc
or
jno
mov
lret
push
insb
stc
push
inc
ds
loop
loope
push
aaa
out
jle
ljmp
mov
cmp
pop
lods
mov
pop
divb
mov
jge
setb
add
scas
xor
sahf
mov
mov
aaa
push
in
cmpsb
movsl
push
xor
or
cmp
cmpsl
arpl
arpl
loop
js
test
rolb
mov
fs
clc
or
pop
insb
ret
cmp
repz
sub
out
scas
push
imul
adc
jne
out
into
addl
jns
cwtl
mov
lods
inc
cmpsl
les
inc
jecxz
adc
push
jle
pop
inc
cmp
xchg
cmpsb
repz
mov
das
imul
pop
jp
pop
mov
cmpsb
out
xlat
scas
and
xor
in
mov
fnsetpm(287
int3
out
test
mov
jns
cmp
add
int
or
mov
mov
adc
jnp
and
stos
xchg
js
push
push
push
adc
add
or
cmpsl
out
lcall
mov
mov
in
gs
xor
sbb
std
movsl
inc
xchg
enter
popa
or
fwait
testl
loopne
mov
xchg
mov
leave
and
mov
loope,pt
sub
or
push
mov
clc
xlat
lret
cld
mov
outsb
add
cmp
rol
mov
push
sbb
fldcw
or
adc
lcall
mov
arpl
std
xchg
lret
int3
inc
jno
and
fistpll
add
and
dec
pushf
test
lret
outsl
into
or
mov
fists
aam
xor
movsl
test
mov
mov
add
xchg
scas
push
fs
inc
gs
fsubs
test
jecxz
cltd
lahf
out
mov
jle
test
pop
adc
outsl
mov
mov
and
imul
repz
sbb
popa
into
sub
cmp
dec
xor
or
es
loopne
inc
rclb
adc
scas
sub
and
sub
lods
mov
and
je
lods
cld
dec
push
jl
xchg
shll
into
daa
ss
outsb
test
rclb
lret
popf
lds
xchg
inc
pop
pushf
jns
repz
and
push
dec
dec
adc
sub
add
popf
mov
xlat
xchg
sub
xor
aam
in
inc
push
iret
xor
fildll
lahf
lock
push
xor
mov
je
movsl
loop
pushf
mov
loope
mov
ljmp
sub
cmpb
push
lcall
adc
jg
fdivl
jns
mov
mov
xchg
mov
loop
pop
enter
adc
jne
bound
into
adc
dec
xchg
adc
jne
xlat
mov
divb
int3
sub
dec
and
shlb
std
mov
mov
aas
aad
xor
test
rcl
add
sti
fwait
and
lock
sub
imul
in
ds
in
das
addr16
push
dec
jne
inc
out
mov
mov
mov
jne
add
testb
cld
aam
mov
pushw
mov
mov
leave
adc
popf
xchg
adc
rcl
movsl
pop
mov
xor
cmp
repnz
and
pusha
dec
push
or
out
lods
fistl
loop
or
gs
mov
popa
cmp
push
decb
fimull
lock
pop
cmpsl
jns
movsl
cmp
pusha
or
call
xor
adc
inc
insl
aaa
imull
push
cmp
and
dec
popf
pusha
push
dec
cmp
jecxz
lea
mov
out
outsl
mov
mov
sbb
xor
cmp
jecxz
out
mov
adc
mov
sbb
mov
sub
in
ds
xchg
sub
pushl
lods
mov
jae
or
mov
xchg
gs
and
pop
push
push
mov
leave
loopne
push
and
cmpsl
and
je
std
dec
dec
ljmp
dec
mov
insl
mov
fadd
loopne
out
dec
sbb
jnp
push
mov
mulb
dec
sbb
sbb
stos
dec
ss
repnz
add
lds
jne
dec
push
call
aam
repz
xor
pushf
mov
fstpt
push
pop
in
scas
data16
xchg
out
or
lret
shlb
mov
adc
push
arpl
sarl
push
orb
xor
dec
jnp
jecxz
fwait
xor
sbb
xor
ja
xor
loopne
mov
push
std
or
mov
fcmovne
fwait
andb
jecxz
mov
xchg
push
stos
dec
mov
jmp
and
mov
jp
cmp
jns
cmp
dec
jecxz
lock
in
aaa
push
mov
inc
lods
push
data16
idivl
in
in
insl
in
add
out
push
clc
and
mov
stos
push
enter
hlt
pop
pop
popf
xor
fnstenv
and
test
pop
pop
lods
inc
jecxz
fidivs
mov
cmp
movsb
cld
gs
mov
jp
pop
sub
inc
insl
js
fistl
fstl
cmp
js
fidivrl
cmpsb
push
mov
out
xchg
aaa
mov
add
sbbl
xor
dec
dec
sahf
out
lea
in
loop
in
push
push
das
jg
aad
mov
sub
dec
pop
jbe
add
bound
dec
out
inc
push
sub
out
sbb
lcall
rcll
mov
int
lods
arpl
loope
xchg
inc
and
popa
subl
cmc
or
ljmp
lret
in
das
arpl
pop
adc
mov
and
or
test
jnp
dec
pop
fildl
stos
add
scas
xchg
sbb
mov
ds
and
push
test
sbb
jae
out
cmpsl
and
out
push
popa
jae
js
mov
aas
push
xchg
nop
sbb
clc
loopne
push
add
ss
xorb
cmp
sbb
jp
cmpb
jecxz
fwait
xor
rcr
and
push
inc
into
cld
ret
scas
ljmp
mov
mov
push
dec
rcr
scas
xor
jb
adc
movsb
jg
dec
dec
mov
cmpl
push
ljmp
mov
sub
or
inc
jnp
mov
test
jmp
out
cld
repnz
scas
mov
int3
pop
jg
dec
push
cmp
sub
xor
scas
ud2
mov
jno
mov
pop
imul
pop
mov
push
mov
lods
insb
xor
imull
fidivl
mov
idivw
fsubs
stc
addr16
inc
inc
pop
dec
out
stos
push
jmp
arpl
pop
adc
cmp
pop
sub
sub
dec
pop
jmp
enter
dec
es
mov
ret
sbb
inc
cmp
lcall
imul
inc
insb
adc
adc
cmpsl
ja
cmpsl
mov
push
mov
jo
arpl
mov
pusha
testl
jb
and
inc
outsl
mov
movsb
push
jmp
cmp
arpl
and
and
cmpsl
pop
adc
fadds
mov
fidivs
mov
or
in
xchg
mov
int
in
jg
outsb
pusha
aaa
sub
mov
push
sarl
in
sub
push
in
jb
loopne
lret
scas
je
loopne
shll
jle
inc
pop
loopne
and
mov
push
jecxz
sbb
xchg
push
pop
xchg
mov
repz
push
test
pop
push
inc
push
adc
cli
lods
inc
mov
fnstcw
mov
mov
xchg
pop
push
xorb
sbb
xchg
icebp
mov
adc
out
jle
mull
les
fdivl
mov
jbe
xchg
cs
push
pop
jb
in
mov
add
imul
cmp
xlat
outsb
or
jge
popa
cmc
sbb
repnz
das
stos
js
mov
popf
mov
mov
add
in
push
sub
movsb
jecxz
aas
lea
repnz
dec
mov
mov
push
je
iret
or
ret
pop
mov
js
jg
pop
and
mov
out
pop
mov
and
sahf
int3
cmp
push
cmpsb
lcall
or
dec
mov
ficoml
movsb
test
cmpsb
sub
popa
outsl
int
lea
es
lds
or
mov
fidivl
inc
jge
mov
mov
xchg
sbb
andl
pop
in
adc
stc
jb
aas
mov
mov
test
or
movsb
push
sub
cmpsb
mov
pop
sub
out
cmp
sti
pop
mov
in
push
stc
test
aam
mov
push
add
das
mov
rcr
add
mov
mov
adc
lods
shrb
cmpsl
aas
aad
scas
call
insb
cmpsl
sahf
inc
push
pop
cmp
negl
in
mov
pop
mov
test
lret
adc
ljmp
adc
lret
mov
in
push
clc
inc
inc
add
stc
jbe
icebp
sub
or
adcb
xchg
mov
lret
mov
bound
cwtl
sarb
inc
insb
cmpb
stos
mov
add
jns
rolb
add
in
loop
sub
loopne
push
cltd
sub
test
shr
mov
ja
jl
lcall
nop
mov
mov
push
ja
add
lahf
xchg
mov
gs
mov
or
lods
jge
rcll
in
sbb
push
xor
fs
cmp
call
mov
ret
int3
xor
insl
loopne
or
sbb
xor
xchg
add
int
popa
jp
ja
cmp
in
pusha
leave
lds
or
into
lret
xlat
add
int
movsb
jae
jae
adc
cmp
in
xchg
push
ljmp
pinsrw
dec
dec
adc
stos
outsb
dec
mov
lret
xchg
jb
ja
adc
sub
lea
mov
daa
bound
sti
add
stc
js
dec
scas
lret
add
into
repz
sbb
pop
ret
aaa
loopne
stc
mov
punpcklwd
inc
data16
mov
fs
fmuls
stos
fisubl
xor
nop
adcb
fwait
and
add
xor
mov
cmp
mov
movsb
cmpsb
stc
pop
rolb
and
es
cmpl
xlat
xchg
sub
mov
xor
in
mov
mov
clc
or
mov
sub
pop
sub
lods
and
push
cmp
sbb
xor
mov
in
cmp
lcall
inc
cmp
jp
sbb
jo
pusha
pop
mov
jbe
dec
movsl
xor
lcall
push
in
xchg
add
cli
stos
inc
in
iret
arpl
int
insb
dec
or
and
and
cmc
mov
call
data16
xor
jge
fwait
mov
sub
jbe
int3
jmp
push
shl
insb
jge
xchg
mov
push
fwait
mov
cmp
adc
jmp
jb
pop
popf
mov
cmp
imul
jnp
movsb
mov
into
movsb
orb
sbb
mov
jo
cmc
shl
leave
pop
int3
sub
aad
sub
jmp
cmp
mov
dec
mov
dec
stos
scas
mov
mov
dec
ret
dec
xchg
mov
lds
pop
imull
jno
das
mov
pop
xor
aam
gs
ficoms
add
jo
or
xchg
pop
inc
pop
cli
inc
xlat
cs
sahf
pop
ret
cld
dec
call
push
xor
in
wbinvd
jb
cmp
mov
adc
push
xor
pop
int3
push
aas
cmp
clc
pop
shrl
or
add
push
js
gs
outsb
dec
mov
push
xlat
outsb
cltd
mov
mov
fs
xchg
dec
mov
insb
sub
insb
inc
orb
shrb
xor
lods
jmp
push
mov
add
push
insl
mov
lods
cmp
cwtl
aaa
pop
mov
addl
or
and
test
aas
push
je
add
xchg
mov
fdivl
push
mov
and
adcl
pusha
ss
pop
push
out
out
push
cmpsb
lahf
cmp
xchg
cmp
jmp
sbb
cmp
jecxz
sub
out
imul
mov
ficomps
mov
jecxz
mov
mov
pop
push
inc
test
cmp
dec
popf
notb
cmp
scas
rcl
dec
and
adc
xor
cs
aad
mov
xchg
xor
adc
mov
jb
fnstenv
mov
addr16
inc
xor
mov
fidivrl
inc
xlat
jno
push
je
mov
and
cmc
mov
fdivr
in
xor
dec
add
ljmp
in
inc
fsubs
or
pop
ret
pop
adcb
nop
mov
out
popa
jp
xchg
leave
icebp
movsl
mov
mov
push
and
in
pop
clc
mov
push
jno
stos
xor
adc
sub
jne
mov
pop
lock
loopne
nop
test
mov
arpl
sub
iret
rcl
sti
stc
daa
mov
jmp
ljmp
cmpsb
xchg
sbbl
or
dec
stc
mov
pop
je
ficoms
bswap
repz
mov
and
mov
adc
push
aad
movsl
scas
jne
pop
sub
insb
add
dec
dec
insb
push
mov
repz
xchg
sub
repnz
add
jb
push
les
mov
xor
push
daa
jg
dec
pop
adc
mov
out
pop
rolb
icebp
les
je
and
fiaddl
mov
repz
mov
mov
shlb
dec
push
adc
fisttpll
xor
mov
shr
push
mov
jno
cwtl
fcmovbe
ds
or
mov
push
jns
pop
jbe
dec
cltd
jns
and
pop
outsl
into
test
ja
push
out
es
ss
out
cld
imul
movsb
xor
and
insb
xchg
daa
scas
sbb
lods
add
adc
and
cmp
insl
roll
jae
inc
es
fldcw
popa
sahf
and
iret
movl
enter
cltd
jbe
cmpsl
mov
cmp
out
jge
pop
dec
repnz
xor
push
stc
jo
in
mov
les
sub
repnz
gs
ja
psllq
cld
dec
arpl
jge
xor
jg
and
dec
push
mov
jo
cmp
jp
js
inc
push
cwtl
cltd
pop
pmaxub
dec
stos
orb
pop
daa
call
testl
fmull
psllq
outsb
shr
or
imul
mov
cld
rorl
sub
adc
pop
es
xor
shll
movl
mov
pop
loop
sbbl
out
cmp
cltd
lods
inc
push
jo
test
shrb
pop
sub
pop
pusha
ret
add
sbb
push
insl
push
inc
outsl
aad
sahf
and
ljmp
movsb
pop
rcrl
scas
pop
fstpt
je
in
shrl
shll
ss
pushf
call
adc
dec
rolb
gs
das
xchg
call
lea
bound
jns
or
leave
xchg
pop
push
jle
or
dec
cld
dec
insb
fbstp
xlat
xchg
add
mov
shl
insl
and
xlat
mov
cli
fistl
add
mov
iret
and
xlat
pop
xor
mov
xchg
sbb
insb
ja
repnz
cmp
popf
xor
in
test
jbe
fs
jae
jns
lock
movsl
loopne
pusha
cmp
pusha
outsl
out
out
push
ret
or
shl
jns
push
out
cs
sarb
add
rcrl
pop
push
jno
and
add
add
ja
sahf
test
outsl
sub
dec
stos
scas
jle
jge
adc
ljmp
inc
bound
ja
rolb
mov
cmp
cmpsb
adc
sub
leave
fwait
push
sbb
dec
dec
arpl
repz
or
push
xor
ficoms
sub
fwait
pop
out
dec
sub
jb
test
mov
int3
xlat
sub
sbb
insb
xchg
mov
or
andl
loope
cmp
into
mov
sbb
imul
cmp
ljmp
pop
out
xchg
pop
testl
pop
mov
sbb
fsts
inc
xor
mov
cmp
stc
in
push
test
cs
sbb
shrb
jle
insl
test
inc
hlt
mov
jle
mov
addr16
cmp
loope
mov
adc
pop
pop
cld
loop
fsubr
pop
add
insb
cltd
sub
outsb
mov
test
iret
shll
inc
add
inc
mov
sub
ss
ja
add
fwait
js
jno
xor
xchg
test
sbb
jge
dec
lock
xor
insl
xor
orb
xor
push
inc
jae
add
xlat
cwtl
adc
jo
xor
sahf
filds
inc
cld
negb
mov
cld
jne
movsb
adc
lods
mov
out
sbb
jno
pop
sub
lret
or
xchg
adc
inc
pop
aas
xor
lcall
ret
hlt
mov
sub
call
and
jecxz
iret
sbb
push
adc
mov
adc
xchg
mov
adc
xlat
mov
dec
pop
ret
stos
dec
pop
faddl
mov
lods
mov
lods
cs
cmp
repnz
or
out
dec
cmpl
test
shlb
mov
adc
cld
mov
jae
test
cmp
enter
stc
popa
and
lock
sub
add
cmc
xor
fcomip
dec
adc
mov
jmp
dec
div
mov
aaa
mov
jae
add
mov
mov
add
mov
or
imul
xor
xor
sbb
add
push
xor
cmp
sbb
add
mov
cmp
lar
mov
dec
pop
sahf
mov
mov
inc
iret
add
sahf
icebp
cld
ret
mov
xor
jle
roll
jns
and
jbe
inc
mov
data16
xor
scas
lods
cmp
test
xchg
pop
or
decl
into
mov
pop
mov
jbe
inc
push
xor
movb
icebp
and
ja
adc
fdivrl
out
fdivs
lret
popa
cmp
cmpsb
shr
leave
sub
mov
popl
adc
cli
test
sub
mov
xor
mov
cmpsb
sbb
xchg
mov
adc
cmp
add
xchg
arpl
nop
pop
sub
push
dec
outsb
jge
dec
out
inc
inc
out
push
into
and
push
inc
daa
push
imul
mov
inc
fsubp
fnstenv
sti
cmpsb
dec
jecxz
mov
push
mov
xor
cmpsl
mov
lret
xlat
aad
les
pop
dec
or
test
rol
dec
jns
ds
bound
insl
shrl
mov
mov
push
decb
jmp
mov
repz
sub
sub
shrl
ljmp
repz
push
test
rep
xchg
xchg
sbb
aaa
fadds
jne
xchg
and
outsb
and
xchg
hlt
out
jg
das
or
jmp
mov
ja
cwtl
and
push
subl
push
nop
mov
inc
nop
mov
or
pop
sarl
or
std
or
or
into
jns
outsb
jmp
mov
inc
rcrl
in
dec
icebp
mov
stos
cmp
in
lea
out
stos
mov
aaa
push
sbbl
push
inc
arpl
sbb
shl
inc
or
adc
jns
stos
xchg
mov
adc
or
movsl
cmp
fbstp
lcall
xchg
iret
and
dec
push
push
sti
lods
xchg
cmp
stos
test
call
sub
jbe
push
push
xchg
popf
adc
and
js
xor
pop
fsubs
and
and
mov
in
dec
push
pop
pop
in
jae
ds
pop
hlt
addr16
stos
mov
in
pop
lds
fiaddl
sahf
adc
inc
mov
inc
fnsave
mov
mov
shrl
pusha
and
mov
and
mov
mov
cmp
int3
mov
xlat
sbb
call
jle
or
mov
add
flds
lret
jb
dec
out
push
inc
out
les
in
ffree
lcall
adc
lods
addb
and
sbb
push
inc
and
add
push
ja
mov
cli
leave
push
mov
and
jb
xchg
push
fwait
cmp
push
cmp
rol
push
sbb
push
pusha
lcall
xor
sbb
mov
nop
pop
mov
push
push
mov
fcmove
ficoml
push
jns
adc
hlt
xchg
dec
loop
idivl
jl
push
push
sub
mov
jo
mov
mov
cld
adc
sub
inc
fcmovnbe
testb
inc
mov
or
bound
sbb
daa
dec
pop
push
pop
push
xor
push
and
dec
fs
into
xlat
or
add
push
in
inc
mov
mov
jg
mov
in
jl
inc
cs
out
pushf
inc
std
sbb
cmp
movsl
nop
push
pop
mov
lcall
dec
outsl
movsl
mov
push
lock
aam
mov
inc
push
movsl
loope
call
mov
and
mov
mov
mov
movsl
jecxz
pusha
push
pop
sub
popf
stc
inc
mov
lock
or
popa
push
cli
xchg
xchg
push
lock
inc
push
mov
cltd
gs
xchg
xchg
or
out
popa
call
cmp
xchg
jle
jae
add
sbb
dec
jl
and
mov
xchg
jo
adc
cmp
xchg
out
jne
lret
push
mov
add
sbb
movsb
cmp
cmpsl
aad
mov
pop
adc
aad
cmpsb
or
push
stos
jp
adc
adc
ljmp
rorl
xchg
cmp
loop
ljmp
loopne
fsubr
mov
or
mov
jae
repz
js
mov
sbbb
push
imul
in
push
jne
or
adc
pop
push
test
xor
sahf
lahf
fbstp
ds
fwait
call
in
xchg
ds
cmpsb
sub
jge
pop
add
icebp
xchg
shrb
dec
dec
mov
ds
adc
xchg
pop
shl
pop
sahf
inc
jns
jne
jl
sub
pop
xor
stc
cmpb
fwait
pop
push
or
push
push
rcrb
pop
adc
pop
imul
xor
jnp
ret
pushf
xor
std
mov
pushf
repnz
xchg
sub
inc
jo
cs
mov
shll
add
enter
fstp
jecxz
push
inc
lea
mov
and
fstpt
pop
adc
icebp
xchg
or
movsl
adc
dec
inc
test
dec
adc
das
movsb
and
popa
cltd
fcomip
mov
lret
mov
test
in
adc
push
mov
movsl
jecxz
clc
lods
inc
sub
pop
stos
js
jp
mov
cmpsl
xchg
inc
add
jnp
push
hlt
adc
leave
mov
dec
sahf
pop
push
in
mov
sub
xchg
imul
pop
aam
sahf
push
js
arpl
sbb
push
sub
push
push
cmc
das
mov
shll
je
cmp
xor
mov
inc
out
loopne
stos
push
lds
subl
pop
push
jl
lods
mov
jmp
cmp
mov
cmpsb
push
orw
xchg
outsb
rclb
dec
dec
je
sarl
xor
mov
push
or
inc
sbb
mov
jg
add
imul
and
movsb
scas
jp
inc
pop
out
or
add
xchg
in
pusha
dec
insl
fsts
cmp
sahf
in
xor
in
sbb
xchg
pop
and
into
std
mov
push
push
pop
sub
movsl
lea
xchg
popa
aam
mov
jp
adc
cmp
fdivrs
call
mov
fisubl
call
test
test
mov
stos
mov
rcl
ret
hlt
negb
ja
repnz
adc
mov
push
mov
loopne
and
inc
pop
jo
nop
dec
popa
cmc
jb
addr16
push
push
xchg
fiadds
movsb
jecxz
jge
lcall
cltd
std
ret
repnz
xchg
loopne
push
popf
dec
jl
fdivs
push
mov
mov
insb
cmp
add
mov
or
lcall
hlt
arpl
jp
call
shlb
mov
dec
test
xchg
jecxz
iret
out
sbb
mov
bound
or
lcall
scas
pop
inc
push
add
jl
aaa
pop
insb
repnz
adc
stc
test
mov
mov
insl
dec
popa
mov
imul
mov
pop
fldcw
fsts
fwait
cmpsb
jge
jmp
mov
mov
jno
jp
or
mov
lahf
repz
stos
mov
fildll
xchg
cmpsb
repnz
sbb
inc
std
imul
insl
ldmxcsr
and
stos
pop
xchg
xor
sub
pop
dec
setbe
mov
push
mov
cld
push
sub
pusha
inc
jo
gs
xor
cmpb
shll
les
inc
pusha
call
int3
mov
jge
push
jp
xor
jo
lea
lret
dec
adcb
mov
mov
hlt
rcrl
fisubl
mov
cwtl
cld
dec
inc
rolb
imul
cltd
dec
movsl
gs
shr
sub
stos
xchg
outsb
pop
jmp
into
in
popf
shl
std
add
push
cli
inc
push
aaa
into
add
out
test
jl
jle
lods
jno
mov
mov
int
pop
pop
testb
lods
mov
push
jge
mov
in
push
or
pusha
cmp
sub
in
lret
xor
mov
pop
stc
push
inc
bound
xchg
repz
aaa
fidivrs
sub
push
cltd
and
and
jnp
jp
mov
sbb
fsubrl
outsb
test
lea
fcompl
xchg
loopne
pop
inc
pop
mov
lds
adcb
mov
inc
bound
fs
push
xor
push
push
mov
cmpsl
shlb
lods
mov
rcrl
stc
test
dec
cmp
icebp
cmp
gs
or
ljmp
scas
cmp
ds
adc
mov
cmp
jns
lea
les
pop
ss
cld
scas
leave
mov
sub
mov
call
mov
sub
cmc
push
mov
cmpsl
sbb
xchg
dec
dec
fsts
dec
arpl
imul
jns
xchg
xor
sub
xchg
add
fnstsw
mov
jecxz
addr16
mov
inc
popf
jmp
aam
popf
jnp
cmc
push
je
push
push
lods
cmp
fldcw
leave
pusha
xor
dec
lods
aaa
into
push
push
jbe
dec
jb
sarl
xor
mov
call
jnp
inc
into
movsb
mov
or
mov
inc
xor
jg
out
rol
inc
add
sbbl
aas
pop
cmp
fcmovbe
sarb
cmp
in
jnp
pop
mov
cmp
xchg
pop
in
sbb
out
decl
xor
cld
sbb
or
std
push
fwait
enter
dec
fs
push
out
sbb
mov
pop
arpl
gs
pop
inc
loope
lahf
xchg
inc
bound
fisttpll
daa
push
popf
xor
mov
adcb
pop
mov
xchg
fcoms
insl
aam
mov
out
sbb
pop
addr16
fcoms
pop
test
rorb
jp
addr16
cwtl
push
add
stos
sub
aas
jmp
mov
loope
jno
mov
and
jne
xchg
lods
and
test
enter
cmpl
push
movl
cmp
iret
add
xor
lahf
ss
ljmp
repnz
jne
cmpsl
xchg
sbb
iret
mov
movb
arpl
ficompl
dec
and
subl
fnstenv
icebp
pop
jb
lret
test
std
pop
push
xlat
pop
pop
mov
fiadds
cli
test
inc
or
jne
and
xchg
or
es
xchg
sub
add
pop
mov
jb
sbbl
fs
pop
jns
out
bnd
mov
fcmovu
inc
sti
push
inc
lock
jne
push
mov
xchg
dec
sbb
call
fbld
shlb
and
fisubrs
pop
adc
insb
faddl
xchg
push
lea
sti
not
xchg
lea
jne
cmp
mov
mov
jmp
loopne
sub
cmp
in
xor
fistps
popa
les
data16
sub
stos
lods
in
test
sub
xor
xor
int
ja
push
scas
adcl
icebp
fiadds
lcall
adc
and
psrad
ljmp
and
test
fldenv
pop
xchg
aas
push
cltd
and
sti
daa
mov
xor
xchg
ficoml
inc
pop
mov
cmpxchg
movsb
adc
mov
jl
adc
sub
in
jmp
cs
mov
fs
rol
push
push
add
pop
or
mov
push
cmp
js
leave
ljmp
jecxz
sbb
aas
xor
inc
nop
sub
repnz
inc
jmp
push
mov
movsl
cmp
scas
pop
fnstenv
ds
icebp
stos
cltd
test
push
cmpsb
jo
pop
ja
cli
jmp
frstor
jbe
je
push
mov
arpl
jne
int
enter
jbe
mov
mov
push
popf
pop
cmp
aaa
mov
pop
mov
push
lods
push
or
mov
int
mov
sub
cmp
sbb
scas
mov
ret
jno
and
sti
adc
lcall
jns
int
lret
adc
sar
nop
pop
loopne
addr16
adc
sti
sbb
inc
cli
cwtl
lods
sub
jo
sahf
xchg
xor
xchg
add
pusha
testl
pop
and
jmp
aaa
lds
cltd
js
repz
dec
pop
and
ljmp
adc
adc
sub
stc
pop
mov
pop
cmp
mov
dec
xor
insb
aas
in
repz
stos
cwtl
lahf
pop
fwait
insb
xchg
jp
dec
mov
stos
adc
rcrl
mov
and
xor
repnz
jecxz
sbb
imul
leave
mov
cmp
push
and
aaa
dec
cmp
push
fsubl
and
mov
shrb
push
fs
push
pusha
mov
int
add
cmp
and
inc
jg
lods
mov
aad
mov
jae
call
add
mov
and
dec
es
xchg
aad
mov
jne
jo
mov
mov
scas
insl
mov
adcb
mov
xor
sbb
push
push
cltd
xchg
ja
je
push
sub
dec
pop
cmp
cmpsb
stos
test
inc
dec
test
leave
pop
enter
jg
int3
ds
addl
or
xchg
insl
int
fdivrl
sub
or
or
mov
adc
subl
xor
shrl
cmc
pop
in
dec
arpl
loop
icebp
adc
nop
int
mov
push
int3
faddl
jp
push
xor
jecxz
out
or
fists
push
inc
mov
push
inc
sub
jl
pop
inc
mov
pop
or
mov
xor
outsb
sbb
dec
ret
mov
ds
mov
out
and
je
add
repz
fldl
leave
fisttpl
test
cli
mov
jl
sti
xchg
notb
or
sbb
das
push
aad
push
mov
dec
test
ret
shrl
in
cld
pusha
cmp
mov
pop
push
in
xor
aaa
out
dec
mov
in
test
movsb
inc
les
sahf
xor
lret
scas
mov
dec
jne
loope
ds
jg
rcll
les
jl
sbb
mov
xchg
ds
sahf
or
dec
mov
std
jg
lock
ja
fsub
in
lds
or
cld
and
daa
fwait
sbb
cmp
or
lret
and
aas
clc
movsb
data16
dec
sahf
mov
dec
push
dec
push
in
pop
movl
add
mov
sub
inc
mov
jbe
lahf
and
adc
jae
xor
push
cmp
fnstcw
rorb
bound
adc
mov
inc
cltd
pushf
push
insl
dec
xchg
ss
lahf
push
sub
push
pusha
mov
push
stc
inc
bound
xorl
in
cld
pop
movsl
jecxz
cmp
iret
push
out
hlt
xchg
adc
out
jo
mov
push
repz
sbb
inc
lds
lds
popf
push
xorb
cwtl
aam
pop
setns
mov
add
test
or
cld
xor
mov
into
dec
sub
out
shlb
out
clc
mov
stos
inc
pop
aas
movsb
out
mov
cmpb
sub
outsb
ss
mov
mov
ret
jge
and
adc
jg
push
aaa
push
push
rorb
add
lret
bound
jnp
xchg
jl
xor
xor
loop
imul
inc
lea
push
mov
sbbl
add
adcl
add
stc
jg
out
sub
xchg
sub
shrb
jmp
mov
jbe
xor
xchg
inc
xchg
mov
cli
push
bound
js
aaa
andb
loope
out
cmp
jmp
cmpsb
int
mov
push
stos
or
cs
add
outsl
cmp
pop
mov
jge
xchg
clc
pop
adc
int
ret
inc
icebp
in
inc
or
push
jmp
sar
mov
xor
popf
loop
xchg
cmc
cmpsb
inc
mov
mov
and
testb
nop
addr16
lods
xchg
or
xchg
mov
test
stos
sub
test
sbb
out
jp
inc
xlat
xor
fadds
or
jmp
scas
push
jbe
stc
sub
adc
mov
push
xchg
sub
pop
push
cmc
ss
aad
mov
std
cli
xchg
jge
cltd
sahf
std
sbb
or
cmc
test
xchg
loopne
lods
pop
sbb
aas
mov
dec
incl
add
and
cld
arpl
ret
fs
sub
fisubrs
ret
cltd
test
shll
sub
pop
daa
bound
add
or
es
pop
xchg
inc
mov
ret
lahf
les
add
pop
aad
add
sub
out
jmp
sahf
in
cltd
andb
les
or
test
shl
xchg
repz
sub
mov
fistps
and
jbe
pusha
xchg
cmp
scas
xlat
int3
xor
test
leave
ret
and
rclb
xorb
jmp
xchg
test
enter
rcrl
pop
addr16
pop
cmp
lea
push
pop
int
dec
mov
jno
cwtl
and
pop
and
imul
push
fwait
aad
shrb
arpl
sub
into
mov
jns
nop
mov
in
mov
testb
xchg
mov
sub
out
cmp
inc
clc
inc
mov
imul
push
in
pop
dec
pop
subb
push
and
push
in
addl
jmp
fadds
and
fildll
sbb
mov
cmpsb
psubw
mov
xorl
imul
add
add
xor
icebp
pop
sarl
lret
pop
lock
orb
mov
push
or
aam
mov
sahf
xlat
mov
aas
pop
icebp
jle
fistps
mov
fsubl
pusha
xor
cmpsl
cmp
xchg
inc
les
loop
cmp
addr16
add
mov
out
es
ja
sti
int3
mov
cmp
xor
iret
push
xchg
inc
jmp
out
cmpsl
push
rclb
bnd
call
rolb
or
jbe
sarb
mov
in
add
stos
add
shrl
stc
add
jg
hlt
mov
mov
lea
cwtl
sub
mov
fstps
adc
and
cmp
xlat
dec
adc
clc
aas
outsl
clc
xchg
sbb
orl
fcomps
loopne
sbb
cmpsl
jl
mov
push
lea
adc
mov
lods
lock
or
pop
pop
jnp
out
and
cmp
not
rorb
mov
cmp
add
ss
addr16
or
rol
pop
out
repz
insl
adc
and
xchg
and
cli
mov
sub
lods
stos
xorb
movsb
popa
mov
rcll
loope
mov
fnstenv
push
test
adc
loope
std
bnd
jle
test
pusha
testl
js
imul
adc
sarl
jp
mov
jo
cmp
in
fists
adc
fisubrl
int
xor
stos
jne
rcll
shll
call
mov
repz
mov
sbb
rcl
sub
sbb
push
or
ljmp
cs
mov
jp
nop
pusha
ret
dec
out
mov
cltd
outsb
mov
push
mov
adc
sbb
ds
mov
in
cli
add
cmp
add
jo
and
and
cli
cmpsl
ds
adc
es
fisubl
cmc
sahf
push
or
mov
jg
enter
sbb
jne
aaa
push
call
pusha
mov
and
inc
aad
lret
lea
int3
push
sbbb
pop
pop
mov
mov
loope
jp
roll
imul
ja
xadd
rclb
lods
je
and
loop
data16
inc
shll
je
popa
out
loopne
stos
jmp
mov
int
sub
inc
pop
push
lods
push
repnz
xor
leave
loop
add
mov
mov
xlat
pop
jecxz
push
test
sahf
out
push
and
xchg
push
test
es
push
mov
daa
test
or
lods
inc
out
lods
jae
dec
movsb
inc
imul
push
stc
je
scas
pop
xor
inc
loopne
push
loop
es
pushf
fidivs
and
ret
push
mov
dec
push
inc
out
xchg
sub
addb
lds
jns
xchg
repnz
xchg
add
rcrb
pusha
fwait
dec
nop
test
jae
mov
adc
bsr
lock
cmp
inc
xchg
ja
sub
leave
fucomi
hlt
arpl
cmp
notb
movsl
daa
aam
subb
jecxz
sub
hlt
fwait
popa
mov
ret
xchg
sahf
jg
cmc
mov
lahf
movsl
sarb
xchg
cmp
sub
push
in
or
mov
movsb
mov
and
loope
in
inc
xchg
jo
shr
xchg
outsb
xor
sbb
in
es
test
mov
adc
dec
je
jae
cli
and
mov
cmp
or
inc
push
lods
cmp
outsb
xor
dec
lock
fcomip
adc
icebp
pushl
stos
not
xchg
fildl
xor
jmp
jg
aas
mov
test
cmpsl
pop
mov
pop
nop
rcr
je
clc
and
or
cmp
cmpsb
je
jle
adc
pop
inc
inc
sbb
outsl
fsts
aam
cmp
push
dec
loop
push
cmp
push
jmp
xchg
shll
sub
pop
cwtl
in
and
aaa
sub
pop
jae
xchg
xor
push
arpl
mov
cs
add
sbb
add
cmc
pop
sar
add
and
cs
loop
or
mov
test
pusha
jmp
imul
xchg
movsb
in
scas
and
fisttpl
es
fidivrs
mov
sbb
push
cmp
rclb
mov
pop
sbb
imul
push
out
sbbl
rcrl
cli
lea
cmp
bound
cmp
add
lcall
pop
in
fs
inc
pop
subl
push
sbb
lods
outsl
call
mov
mov
pop
fsubrp
ret
and
in
push
push
inc
mov
jnp
jle
loop
mov
nop
push
test
mov
mov
subb
int3
mov
mov
iret
adc
add
fidivl
lods
jb
cli
add
shlb
jge
jo
in
xchg
ficoml
pop
mov
lods
cmp
pop
stos
dec
mov
adc
or
sub
sbb
sub
sbb
cmp
and
nop
fidivrs
ljmp
out
jb
mov
ret
and
xchg
lahf
das
mov
dec
and
leave
cmpsb
jo
fsubrs
and
stos
test
fsubrp
int3
test
outsl
sbb
pop
cmp
lcall
jl
sahf
jl
add
mov
into
push
imul
sbb
inc
xchg
clc
test
lret
add
or
cmp
outsl
loop
sbb
and
cmpsb
in
xchg
insb
jle
std
jg
pop
xor
sti
cs
negl
popa
add
fstpl
cmp
cli
mov
fdivrs
cmpsl
dec
jmp
in
leave
inc
add
push
add
scas
cmp
pop
xlat
adc
pushf
loope
orb
or
mov
adc
adc
stc
add
xor
mov
adc
inc
pushf
or
mov
xchg
les
lds
push
jno
insl
out
nop
cmp
inc
mov
fcmove
imul
pop
jge
and
aas
adc
data16
outsl
dec
aaa
adc
sbb
and
dec
jl
andl
cmp
rol
out
cmc
xchg
iret
push
sub
pop
andb
je
mov
fwait
jne
push
cmpsb
insb
cmpb
pushf
jg
sbbb
fsubr
xchg
xchg
out
push
mov
shrl
pop
jmp
mov
arpl
cmp
push
cli
inc
or
inc
loope
mov
nop
jl
sub
clc
adc
dec
aad
aaa
fnsave
push
imul
js
push
mov
inc
es
pop
js
insb
aas
mov
insl
jle
pushf
inc
inc
dec
push
mov
enter
dec
dec
and
loop
repz
pop
cmpsb
xchg
lods
ffree
aaa
sub
mov
push
daa
dec
imul
mov
test
movsl
cmp
repnz
mov
iret
test
pop
cmp
and
test
repnz
mov
adc
adc
push
in
adc
add
xor
add
xor
xor
mov
cmp
hlt
test
out
push
or
push
push
icebp
int3
mov
decb
and
out
clc
inc
data16
xchg
aad
xlat
and
add
movsl
mov
cmc
xchg
imul
mov
sbb
sbb
rcr
out
cmp
adc
xchg
add
test
pop
sub
repz
shll
dec
mov
dec
lds
repz
cmp
insb
cmc
jp
mov
jb
test
jecxz
xchg
cmc
pop
popl
and
and
xor
ljmp
lds
outsb
cwtl
jbe
push
loope
push
cwtl
xor
inc
pop
fcoms
and
enter
mov
cs
xor
jns
pop
adc
mov
inc
imul
jg
push
sbb
jns
mov
inc
out
fcompp
es
mov
sarb
pop
rcrb
mov
xchg
pop
add
repnz
push
cs
cmp
shrb
nop
aaa
imul
cmp
xor
stc
jmp
aad
push
inc
loop
int
xchg
cli
inc
inc
jbe
in
insb
out
lcall
pop
mov
fadds
or
push
inc
cli
sarb
es
inc
add
cmp
lret
xor
lea
sbb
sub
mov
adc
xchg
aaa
pusha
pop
dec
push
inc
jle
stc
pop
cmpsl
aas
xchg
icebp
stos
jl
jb
pop
and
cmc
adc
bound
sbbl
xchg
test
movsl
or
pop
clc
adc
popf
leave
sub
pop
xchg
arpl
jne
lret
mov
rclb
loope
push
lcall
icebp
lods
lret
xor
lret
or
sahf
sub
nop
shlb
xor
cmpsb
test
std
xor
loope,pn
or
mov
ret
push
mov
in
jne
fs
sbb
ret
lea
lret
or
push
roll
pop
xor
xchg
push
add
imul
xor
shl
out
cmp
sti
adc
push
fs
div
adc
ds
movl
rcrl
stc
andb
mov
cmp
sti
xchg
stos
xchg
add
inc
push
sahf
jae
dec
pop
sbb
jae
cltd
jecxz
sbb
aad
cmp
daa
cmp
cmp
into
pop
repnz
cmp
lea
ja
leave
xor
add
popa
subl
dec
push
mov
jne
lods
cmp
pop
mov
movsl
aaa
mov
push
inc
iret
mov
loopne
mov
mov
push
imul
push
xor
call
dec
mov
mov
cmp
ror
out
divl
movsb
and
cmp
mov
or
movsl
shlb
lahf
add
es
mov
mov
jecxz
hlt
repz
and
and
sbb
into
stc
add
ss
push
scas
nop
xchg
jae
iret
out
rclb
and
adc
pop
call
addr16
repz
adc
add
scas
cmp
jno
inc
lock
les
loopne
and
jno
inc
sbb
xchg
lret
rorl
jae
push
ljmp
pop
je
subl
lret
or
push
sub
aaa
stos
cmp
mov
xchg
sub
inc
xchg
daa
cmp
inc
sti
popa
pop
out
inc
xor
int3
fidivs
mov
dec
roll
mov
cmp
cmpsb
cmp
xlat
or
mov
in
fnsave
add
cmp
ret
mov
es
jge
jg
jbe
iret
jne
xchg
jo
xchg
cmp
inc
rcll
in
arpl
xor
mov
mov
sub
pop
fwait
xchg
pusha
fistl
into
andl
fs
dec
and
mov
popa
fidivl
push
jnp
dec
out
loopne
aad
mov
inc
fnstsw
imul
int
sub
mov
push
je
cltd
xor
adc
and
popl
test
outsl
notl
sub
popf
fbstp
add
ds
pop
inc
imul
outsb
sbb
sub
mov
daa
jbe
imul
js
sbb
or
cmc
cmp
adcb
mov
addb
movsl
add
pop
dec
jae
imul
lahf
test
add
ljmp
sbb
xchg
pop
loopne
mov
ds
mov
sub
shld
pop
out
sub
pop
lret
jbe
in
fsubl
mov
pop
stos
dec
orl
sbb
fldl
pop
mov
dec
int
xchg
mov
outsb
and
pushf
or
xchg
outsb
mov
movsb
mov
lret
inc
rorb
mov
enter
mov
sub
cmpsb
adc
cmp
xchg
int
cld
stos
fwait
bound
cmp
mov
sbb
or
xor
popf
imull
lret
dec
lds
sbbb
mov
insl
jge
fnstenv
leave
xor
inc
loopne
addr16
rorl
pop
and
or
loop
int
shrl
loop
loope
out
xorb
sbb
mov
mov
je
dec
push
sub
repz
ret
cli
shlb
pop
pop
sbb
and
jecxz
mul
testb
leave
pusha
mov
hlt
cmp
shl
adc
cltd
pop
loopne
jle
cmp
xor
das
mov
xchg
sbb
xor
repnz
mov
clc
js
loope
jbe
push
push
pop
xor
sbb
push
mov
mov
outsl
jnp
mov
sti
movsb
fimull
mov
push
scas
push
test
xor
mov
mov
xchg
aas
es
loop
in
cmp
xchg
push
push
mov
xchg
sub
fstps
imul
fwait
sbbb
push
out
inc
dec
xchg
jbe
sahf
mov
test
outsb
add
push
mov
dec
sbb
cmc
and
sbbb
sbb
ror
movsb
les
or
cmpsb
fiadds
movsl
xchg
sbb
xchg
sub
in
pop
jmp
out
mov
adc
lds
daa
cli
rcl
fs
and
lahf
push
js
sub
out
xchg
movsl
in
sbb
sub
jg
les
xlat
mov
ss
xor
cmp
sbb
or
stos
sbb
xor
fbld
out
lcall
jecxz
lods
sti
mov
adc
and
and
fcmovu
xlat
arpl
outsl
sbbl
mov
mov
ficoml
mov
inc
sbb
push
xchg
enter
mov
mov
adc
inc
cmp
xchg
std
xchg
loopne
test
inc
cwtl
and
sub
das
xchg
jmp
subl
lret
movsl
cmp
or
mov
les
jmp
insl
aad
xchg
sub
loop
adcb
adc
jmp
ficompl
or
outsb
sub
cmp
xlat
in
mov
ss
scas
cmpsl
mov
xor
arpl
pop
cmp
push
stos
jle
and
sbb
or
lods
repz
and
xsha1
cmpsb
dec
jnp
mov
shrl
cmp
xchg
stos
mov
adc
or
pop
dec
arpl
mov
imul
andl
push
out
xor
lock
fidivrl
cli
or
inc
push
xor
sub
push
aas
lods
pop
inc
gs
stos
rcrb
lock
test
in
movsl
insl
add
xor
ret
mov
pop
into
je
roll
xchg
xorb
out
pop
adc
cmpsb
in
pop
mov
adc
sbbl
test
das
lods
sub
imul
pushf
lock
mov
ja
inc
sub
sahf
fidivl
es
sbb
jp
in
mov
jge
adc
dec
sahf
inc
mov
test
je
leave
inc
mov
mov
and
insb
mov
cmpsb
in
es
add
sbb
xor
movups
push
inc
add
jnp
das
xlat
shll
je
sbb
scas
in
mov
fstl
sti
loop
aad
or
dec
cli
addb
test
in
fs
pop
pusha
cmp
xchg
popl
sti
cmp
inc
in
iret
fcmovnu
sbb
or
leave
mov
mov
mov
ljmp
jno
rcl
and
xlat
icebp
sbb
ret
ret
xor
push
push
fldt
add
pop
cmc
enter
stc
xchg
ret
pop
xor
es
jb
fstps
imul
pusha
dec
nop
arpl
ret
inc
mov
popa
or
shl
mov
cmpsl
inc
jl
lds
cmpsl
mov
fldcw
sbb
pop
xor
add
into
xchg
mov
push
fadd
dec
in
test
inc
loop
xor
sub
fucompp
push
into
mov
inc
ret
shll
daa
fsts
inc
ljmp
pop
stos
js
xchg
add
pop
scas
fsub
sbb
adc
ds
data16
test
aad
sub
adc
sub
stos
pop
jl
shll
imul
jnp
mov
xchg
or
fbstp
es
dec
push
adc
xchg
mov
add
sti
out
ss
push
xor
das
ss
mov
fistps
insb
sbbb
cmp
lahf
test
lds
outsl
lcall
mov
lcall
and
sub
stos
push
mov
sarl
aam
adc
enter
out
cld
lahf
sbb
jg
jecxz
cltd
addr16
popf
cwtl
scas
mov
sbb
and
adc
std
mov
fwait
sbb
and
stc
push
ficoml
push
out
notl
insl
inc
imul
ja
fisttpl
cmpsl
sub
or
cmp
lahf
pop
mov
mov
xchg
shrb
repnz
cmp
jecxz
and
mov
jl
sub
or
mov
jmp
mov
jns
inc
les
jnp
adc
ror
ret
nop
test
and
out
push
pop
scas
mov
or
jecxz
jb
inc
add
jg
gs
pop
xchg
inc
add
xchg
lock
jle
cmp
sbb
scas
jge
std
and
mov
jns
mov
pop
sbb
into
mov
in
adc
mov
push
dec
fists
in
test
push
out
inc
jecxz
aas
pop
jno
in
dec
pusha
imul
cmpsl
mov
add
fchs
pusha
ss
lahf
jbe
sub
inc
jl
movaps
push
jb
ret
cmpsb
in
ja
fnstcw
lcall
inc
out
cwtl
pop
and
loopne
sub
fisubrs
rol
outsb
data16
loope
mov
jp
in
insl
inc
dec
mov
rcr
mov
dec
out
cltd
mov
inc
rorl
mov
mov
mov
enter
repnz
test
stc
xchg
popf
adc
mov
push
ffreep
aam
or
mov
aaa
add
and
add
jne
cwtl
decb
pcmpgtd
add
dec
lea
and
sub
rorb
mov
fwait
aas
push
fs
sbb
dec
cmp
ss
sbb
in
mov
es
xchg
and
lods
pusha
add
mov
mov
jge
out
adc
jg
jns
and
jb
leave
cmp
rclb
lret
push
cltd
andl
push
fidivrl
xchg
scas
jecxz
adc
rcrb
jae
and
cli
push
iret
lods
inc
add
jne
ds
xchg
imul
mov
lea
mov
movsb
cmp
mov
shrl
add
dec
out
and
add
mov
ficoml
cld
ret
jle
mov
cmc
adc
mov
loopne
xor
pushf
or
adc
jecxz
incl
push
and
and
rcrb
xlat
pop
add
stos
mov
mov
lods
add
loop
imul
mov
cmp
cmpl
jne
mov
test
push
mov
xor
cmc
mov
jl
cltd
xchg
mov
scas
fdivs
lret
dec
imull
cwtl
inc
push
mov
and
movsb
lods
and
mov
out
mov
pop
push
mov
inc
shrl
mov
mov
roll
mov
outsl
lock
fwait
and
es
mov
adc
lret
pop
xchg
sbb
pop
dec
pop
loop
inc
mov
in
lods
xchg
shlb
mov
outsl
sub
mov
shr
push
inc
cmp
in
data16
pop
pop
mov
lret
imul
mov
push
out
lcall
push
push
es
dec
stos
sbb
mov
add
out
sbb
jno
or
movsb
inc
into
aad
ss
rcrl
int3
cmp
add
mov
and
enter
cmp
out
xchg
sub
fnstenv
pop
clc
xchg
pop
cwtl
jl
movsl
jge
xchg
push
xchg
and
and
lock
stos
pop
imul
xchg
sub
movsl
mov
inc
lds
negb
inc
ret
adc
in
push
inc
mov
mov
pop
int3
or
xchg
sbb
mov
test
imul
insl
cmp
cmp
dec
xchg
test
js
xor
stos
mov
jnp
loopne
pusha
push
add
pop
je
cmp
imul
mov
repnz
sbb
shll
sarl
push
js
mov
mov
mov
push
data16
xlat
sub
lods
adc
pop
mov
sahf
xor
xchg
ss
add
cli
sti
data16
mov
roll
pop
adc
push
lea
inc
push
sbb
aas
test
rcl
or
test
loope
xchg
or
out
enter
pop
inc
rorl
bound
sarb
inc
mov
ret
mov
test
sbb
data16
sub
jp
and
fadds
push
out
movsb
xlat
mov
subl
jge
sbb
cmp
imul
mov
mov
mov
cmp
mov
xchg
and
add
imull
adc
ljmp
in
xor
jo
cmp
movsb
jg
ucomiss
fadds
push
mov
inc
ret
mov
xor
mov
sbb
lds
dec
pop
cmp
cmp
sbb
inc
dec
sub
jp
adc
incb
mov
xor
mulb
mov
ja
loopne
xchg
xchg
cmpsb
fwait
mov
inc
in
push
stos
lock
fs
xor
jecxz
fsubrp
jnp
push
jmp
mov
sbb
mov
arpl
lret
inc
dec
hlt
mov
fisubrs
hlt
pop
in
test
hlt
mov
xor
lds
imul
or
mov
daa
movl
and
mov
or
aam
cmp
clc
mov
mov
or
adc
pop
stc
fdivrl
lds
xchg
mov
adc
or
cmp
stos
sbbb
hlt
in
es
and
pop
pop
repnz
xchg
in
sti
jns
inc
xchg
mov
ficoml
push
out
add
leave
sub
movsl
cmp
jmp
jb
pop
ret
pop
mov
jge
sbb
loope
mov
xchg
xor
push
mov
out
neg
jmp
popa
push
sbb
leave
popa
and
repz
ds
xor
mov
and
addr16
ss
mov
rcrb
imul
jnp
mov
jbe
jl
ljmp
outsl
dec
push
pop
adc
xchg
pushf
fcompp
repz
or
push
jp
and
add
mov
push
cltd
outsb
scas
inc
aam
outsb
roll
fistpll
addb
lods
pop
incb
pop
shlb
fbld
repnz
repnz
inc
sti
lret
sbb
jne
popl
lods
inc
ja
or
int3
cmp
in
pop
stos
in
cld
push
lret
rcrb
les
cld
fistpl
or
stc
fcoml
jecxz
daa
push
mov
divl
mov
scas
aaa
imul
fldcw
and
jle
xchg
xor
shrb
and
xchg
inc
pop
pop
mov
or
jge
xchg
sbb
add
xor
hlt
cmp
pop
dec
sbb
sub
adc
sub
jnp
insb
jg
push
pop
lea
movsb
lcall
arpl
mov
dec
push
xchg
scas
xchg
aas
icebp
sahf
addr16
cld
cmp
imul
ret
sub
cmc
dec
incb
push
test
movsb
push
inc
bound
lds
pop
imul
stc
or
cmp
int
pop
lods
jo
pushf
xor
js
fildll
sbb
sbb
push
mov
inc
lahf
push
ds
add
mov
popa
call
sub
adc
dec
pop
lds
int
enter
ss
bound
inc
mov
repz
add
scas
mov
ss
test
notb
je
inc
mov
xchg
sub
lock
and
fldl2t
cltd
cld
rorb
adc
mov
mov
sti
jns
dec
loopne
pushf
dec
scas
int
test
mov
xchg
xor
ror
fiadds
nop
xor
sub
xchg
imul
loop
stos
mov
adc
mov
and
mov
pop
repz
push
out
out
ret
pusha
xchg
mov
push
andl
pushf
jg
leave
mov
ret
bound
mov
dec
fnstenv
mov
pop
icebp
pop
aas
push
cmpsl
jecxz
sbbb
aam
test
stos
aad
fbld
stos
out
cmp
fdivrs
iret
add
data16
lods
and
and
mov
adc
jbe
mov
mov
mov
mov
ret
sbb
dec
push
and
outsb
cmp
insb
insl
rorb
lods
ljmp
and
sbb
jg
mov
pop
cmpsl
mov
pop
stos
cmp
sbb
std
movsb
and
arpl
gs
dec
pusha
mov
cmp
push
cmp
repnz
insl
ljmp
aas
enter
loope
mov
movsl
inc
popf
pop
test
fs
xor
ret
xchg
sbb
adc
mov
pushf
cmp
sbb
and
cli
jl
dec
xchg
ja
xor
xchg
sbb
loope
mov
inc
xchg
xchg
popf
inc
fxch
rcrl
sub
in
sbbl
fsubrl
je
pop
pop
ret
dec
xchg
add
subl
lods
je
xchg
mov
sbb
rcrl
jle
mov
or
dec
jnp
add
dec
iret
mov
jb
gs
mulb
dec
imul
fdivr
decb
and
shrl
loopne
adc
and
rolb
inc
ret
jnp
jno
dec
ficompl
push
mov
out
loop
pop
sub
xchg
xor
shrl
jl
in
into
sbb
or
vpcmpgtd
cmpsl
test
xchg
adc
jb
insl
cmp
xchg
addr16
add
das
jmp
cmpsl
fcompl
pop
cmp
push
dec
test
shlb
sbb
scas
pop
or
xchg
stos
jl
mov
push
inc
pop
or
nop
jb
cmp
out
inc
aad
or
push
mov
xlat
lock
fldcw
push
jmp
test
rorb
enter
aad
ja
sbbl
dec
fstpt
or
and
scas
cwtl
enter
push
je
lock
push
jne
outsl
cmpsl
jl
push
xchg
movsb
ret
xlat
mov
shl
mov
push
mov
lea
scas
shll
xor
in
mov
cmpsl
xchg
dec
jmp
mov
pop
outsl
sbb
lds
dec
pop
test
jp
cmpsb
dec
and
lods
insl
fsubr
outsb
jo
negb
xor
push
add
push
fldenv
or
sbb
or
insl
mov
dec
rcrl
pop
lret
ljmp
pop
push
jg
repnz
popf
popl
daa
mov
pop
push
out
mov
call
scas
ret
lods
ds
pop
rcrl
bnd
xchg
ja
xor
inc
movsl
cmp
movsl
icebp
mulb
popa
mov
je
inc
fisubs
fsubr
mov
shrb
add
push
adcb
xchg
int3
push
test
jb
imul
popa
hlt
and
imul
or
jb
repnz
lahf
push
loopne
cmp
adc
pop
jmp
dec
xchg
fsubrs
lods
inc
mov
js
inc
xchg
stc
aaa
mov
xor
xacquire
repnz
adc
in
dec
mov
je
sub
xor
in
push
dec
xchg
in
into
xor
jecxz
fwait
aam
jp
lods
icebp
js
daa
out
cmp
ret
insl
jmp
sbb
mov
xchg
push
sbb
int3
mov
sub
or
lods
push
mov
and
test
sti
xchg
xchg
sahf
and
ret
adc
sub
xchg
sub
jne
std
movsl
jbe
out
mov
mov
jns
jmp
and
inc
test
sahf
add
lea
dec
jg
sti
repnz
cmpxchg
xchg
fisubs
in
jae
inc
stos
inc
pop
sar
test
clc
int3
xchg
outsb
xchg
pushf
jae
xor
shrl
aam
andb
stos
xor
mov
fildl
lods
push
out
sbb
inc
mov
and
sub
or
stos
jmp
sub
cmpb
fidivrs
out
into
in
mov
sbb
dec
and
mov
mov
mov
and
in
xor
or
sbb
pop
push
out
es
mov
lea
sbbb
dec
notb
es
test
mov
xor
lea
jl
or
imul
sbbl
xor
test
jge
fs
inc
lods
sbbl
pop
jl
iret
cmp
mov
frstor
jmp
pusha
jns
mov
mov
cli
and
leave
push
xchg
pop
jb
repz
adc
clc
stc
push
inc
into
pop
mov
cmp
inc
cmp
mov
scas
shr
add
ss
add
loope
fwait
or
and
jecxz
shrb
fmuls
sub
out
pop
lahf
jns
mov
es
inc
xchg
int3
adcb
mov
sub
sti
jmp
jge
lret
ss
arpl
daa
cmpsb
adc
ss
ds
negl
or
dec
rclb
cmp
arpl
dec
pop
pop
mov
jnp
mov
jno
mov
add
mov
fmulp
subl
pop
dec
leave
adc
and
clc
scas
sub
pop
shr
ss
sub
imul
std
xchg
add
aaa
loope
and
scas
adc
jle
push
mov
ret
loope
ret
mov
mov
or
jmp
lret
pop
lret
xchg
push
scas
inc
push
outsb
ja
xchg
xchg
xor
xor
sarl
dec
cmp
or
sbb
filds
lcall
cwtl
test
sbb
cwtl
xchg
xor
iret
mov
xor
mov
int
dec
or
push
cmp
jge
lea
insl
pop
daa
cmpsb
stos
cmp
rorl
pop
or
adc
and
inc
jmp
xchg
xor
jmp
inc
cmp
mov
mov
aad
out
rorl
mov
xchg
das
xor
push
aad
ss
stc
push
add
mov
clc
fsubrl
push
xor
jno
scas
xor
or
mov
jecxz
fdivs
icebp
mov
mov
clc
test
sub
mov
mov
insl
jnp
int
pop
add
sbb
push
mov
and
ja
sti
es
xor
cmpsw
fisttpl
testb
aad
push
mov
iret
int
adc
sbb
lret
test
inc
sbb
movsl
clc
inc
sub
cwtl
pop
xor
dec
jne
push
je
fimull
cs
push
pop
pop
add
or
aaa
dec
xor
cltd
test
push
scas
insb
sbb
inc
cli
xchg
jne
push
xor
push
pushf
cs
pop
int
pusha
xor
or
mov
or
out
stos
cmp
in
test
sti
sbb
sbb
addr16
loope
insb
adc
mov
mov
sahf
ret
rol
jno
iret
xchg
push
and
fcmovu
jl
push
test
fsub
insl
lret
sbb
mov
add
xchg
pop
sbbl
sbb
shll
addr16
cmp
mov
xchg
xor
scas
popa
xchg
popa
add
mov
fisttpl
or
mov
sahf
test
sahf
aad
cmp
dec
ja
xchg
test
mov
jae
mov
mov
fimuls
hlt
mov
ror
jecxz
fbld
mov
jae
xor
adc
gs
pop
lret
adc
fiadds
and
jle
pop
mov
mov
mov
and
aaa
filds
int3
addr16
lcall
imul
nop
stos
mov
mov
lahf
mov
pushf
cli
inc
ret
dec
repz
pop
hlt
testb
inc
adc
loope
mov
pushf
sub
pop
rcl
sbb
mov
mov
or
adc
fmuls
or
out
xchg
testb
repnz
inc
push
jo
mov
push
loopne
push
jno
add
insl
js
add
add
out
inc
dec
push
movsb
aas
ret
jmp
inc
aaa
cmpb
push
in
ss
mulb
sahf
xor
mov
cld
push
dec
inc
vorps
popf
lea
popf
jg
call
scas
xchg
push
arpl
mov
int
pop
add
xchg
xorb
fisttps
lods
mov
jp
popa
imul
or
sbb
shll
adc
mov
mov
add
adc
fcmove
das
cmp
sbb
pop
outsb
stc
pop
les
dec
mov
inc
jecxz
cmpsb
pop
xor
sbb
pop
inc
paddb
jmp
dec
sbb
cmp
movsl
jmp
fstpl
xchg
aam
fwait
mov
hlt
fcomps
popl
mov
pop
cwtl
xlat
add
cmpsl
jg
jns
push
das
jbe
ljmp
sbb
sub
cli
sbb
gs
out
aas
and
push
popl
pushf
imul
scas
jle
push
cmpsb
test
xchg
adc
js
cwtl
add
cmp
adc
push
enter
pmuludq
imul
movl
mov
mov
pop
lods
xchg
nop
adc
daa
pop
mov
jbe
das
dec
mov
push
movsb
fmulp
fwait
cmpsb
data16
insb
cmp
popf
lcall
out
inc
sahf
clc
inc
adc
std
mov
test
xchg
sub
mov
out
fcmovnbe
lds
push
repnz
test
xchg
mov
cmp
push
shll
repnz
dec
fs
pop
inc
mov
inc
fldcw
add
xchg
stc
xchg
pop
ja
rcrl
test
rolb
repz
push
lret
fbstp
jns
ljmp
jne
xchg
and
jge
push
adc
cwtl
pop
and
and
mov
lods
push
pop
or
repz
popa
cli
xchg
lahf
xchg
cmp
repz
inc
and
jp
push
add
int
sbb
test
stc
js
xlat
test
inc
pop
in
dec
push
test
addl
cmp
outsb
lcall
scas
lret
sub
imul
clc
pop
cld
jbe
jo
push
lods
leave
ljmp
jnp
test
mov
cmp
imul
pop
or
jns
jne
push
cmpsl
faddl
and
mov
cld
adc
mov
cmpsl
insl
xchg
adc
enter
arpl
hlt
push
push
scas
lret
inc
js
cwtl
jmp
dec
test
jl
adc
adc
inc
mov
int
pop
push
imul
std
push
sub
test
inc
pop
imul
push
mov
fstpl
mov
add
dec
call
and
je
mov
out
jp
xor
xor
js
adc
xor
mov
jbe
mov
mov
shl
push
mov
and
icebp
pop
in
cs
xchg
jbe
mov
or
rclb
pop
cs
jle
in
fsts
aad
mov
fwait
pop
repnz
mov
mov
in
jno
idivl
hlt
mov
mov
jae
dec
jb
cmp
cwtl
bound
mov
outsl
pop
xor
nop
mov
inc
fs
fisubs
xlat
adc
sbb
mov
sti
outsb
inc
cwtl
cs
sub
insb
pop
lods
inc
adc
or
push
xchg
add
jg
dec
cltd
movsb
xchg
mov
inc
roll
xor
rorb
test
std
aas
icebp
pushf
sti
stos
dec
pusha
loop
jne
leave
sub
xchg
in
mov
jecxz,pn
clc
call
cmc
pop
xor
push
pop
ja
jg
xchg
jp
dec
adc
cmpsl
sbb
or
dec
jbe
mov
movsb
and
push
lods
lea
jbe
mov
add
adc
and
pop
test
scas
mov
mov
decl
push
or
fsts
mov
adcb
cli
and
add
in
repz
rorl
xchg
pop
in
rol
sbb
cmp
xlat
sub
aaa
into
and
xor
rolb
inc
mov
push
pop
mov
repz
add
dec
cld
adc
lret
mov
mov
iret
test
xchg
cwtl
test
es
mov
pushf
dec
inc
fcomps
xor
jae
xchg
in
mov
ds
lods
daa
jno
cmp
loop
push
dec
pop
mov
daa
mov
rorb
mov
loope
stos
popf
sub
icebp
rclb
adc
adc
andb
addr16
pop
xchg
jg
lret
adc
out
lods
out
xor
inc
push
cmpsl
jbe
push
adc
data16
stos
jbe
into
mov
xor
jmp
int3
fbstp
mov
jns
and
imul
xchg
jmp
loopne
cmp
ror
and
jg
nop
ljmp
scas
insl
pop
jno
jns
int
inc
adc
test
xchg
adc
mov
sarb
stos
iret
add
mov
pop
das
pop
lret
cmpsl
cmp
fsubr
arpl
or
jle,pn
add
fsts
mov
stos
out
jl
cmp
add
or
in
jnp
test
or
mov
repz
repz
test
nop
push
mov
dec
ret
lods
inc
loop
cmp
enter
xor
dec
out
mov
mov
ds
insl
pop
and
leave
or
cmp
arpl
xchg
mov
lds
dec
inc
repnz
mov
pop
cmp
cmp
mov
test
mov
sbb
jb
fimuls
mov
ffree
cmc
push
inc
cmp
in
push
out
push
lcall
in
fwait
movl
daa
mov
push
add
xchg
test
push
fiaddl
pop
popf
loope
fs
mov
adc
testl
cmc
xor
jb,pt
cmpb
pushf
ret
repz
and
icebp
shll
outsl
jg
add
jge
sbb
and
shll
sti
mov
stos
xchg
mov
push
jo
popa
fmuls
lcall
add
mov
mov
fmul
pop
jb
sar
test
pop
adc
sub
jnp
fistpll
xlat
jecxz
out
push
xlat
mov
xlat
dec
adc
lds
push
iret
gs
inc
push
mov
fadd
pop
dec
pop
push
test
mov
loop
mov
xor
dec
pusha
testl
dec
lods
xchg
jl
popf
popa
xchg
dec
sub
xchg
jno
inc
pop
out
xor
cld
pop
cmp
loope
clc
adc
add
mov
push
fisubrs
rolb
mov
push
cmp
jge
lahf
xor
sbb
inc
adc
imul
xchg
xchg
popa
and
cltd
pop
inc
push
in
mov
test
mov
jnp
aad
cmp
mov
test
xchg
popa
pop
cmp
sub
ret
in
imul
jl
or
je
xchg
sub
add
jle
vsubps
daa
addb
call
fisubrs
jmp
cmovp
shlb
out
or
jge
mov
and
lcall
sarl
xor
outsl
fisubrl
fbstp
sbb
and
stos
lods
mov
jno
jp
mov
lret
test
mov
jmp
mov
cmpsl
ljmp
xor
mov
push
adc
add
nop
clc
fdivs
fisttpl
test
push
inc
stos
push
cwtl
imul
outsb
lods
xor
xchg
sbb
dec
std
mov
push
adc
xor
sub
int
das
xchg
cs
hlt
pop
out
ret
out
push
jbe
movhps
jno
inc
je
cmc
in
mov
dec
inc
pushf
aam
test
fidivrs
subl
insl
sti
nop
ja
and
inc
cwtl
pop
fmul
push
or
push
and
mov
sbb
add
pop
mov
adc
jg
pop
mov
jge
xor
pop
and
pushf
out
out
xor
xchg
sbb
or
fnstcw
aas
shlb
inc
je
imul
jle
std
cmp
cmp
xlat
xor
out
in
ds
or
stos
nop
and
stc
or
adc
sahf
cmp
add
loopne
push
stos
rcrl
dec
push
mov
cwtl
test
fbstp
shlb
jns
jne
bound
into
jmp
call
aad
push
push
push
addl
gs
movsb
mov
jge
shrl
pop
lods
stc
sub
cmp
int3
stc
nop
and
mov
mov
test
mov
xor
insb
mov
int
mov
adc
int3
xchg
pop
sub
in
popf
xchg
jb
insl
sub
xchg
sbb
fiaddl
fbstp
sbb
mov
mov
test
arpl
cmpsl
cmp
repz
mov
imul
and
std
dec
dec
data16
gs
cmp
mov
out
int
adc
mov
aam
mov
pusha
ss
in
dec
dec
std
cmp
sbb
sub
mov
gs
aam
mov
enter
mov
outsl
and
add
loop
adc
push
sub
pop
dec
mov
sub
cli
fnstenv
jne
sub
xor
jl
gs
cmp
in
xchg
orb
adc
imul
iretw
xchg
ret
add
pop
sub
movsb
mov
mov
loop
pop
aaa
test
push
or
ffreep
xor
pop
je
add
pop
cmp
pop
or
add
xchg
jmp
jge
nop
scas
xor
in
dec
cmp
or
jge
nop
enter
test
aam
mov
loopne
out
push
dec
sub
push
mov
push
repnz
test
pop
aas
fisubl
cs
outsb
lock
xchg
fwait
pop
cmp
push
adc
frstor
andl
cmpsb
aad
inc
pop
enter
or
fnsave
sub
lods
pop
jnp
aam
int
push
icebp
xor
sti
push
imull
xor
adc
inc
xor
jmp
push
rcr
rclb
sub
imul
push
in
lea
enter
adcb
test
lds
add
xchg
push
adc
lock
shlb
xchg
mov
inc
xor
adc
insb
inc
leave
jns
sbb
outsb
sbb
int3
addl
or
sub
cmp
push
or
in
jns,pn
xlat
pop
mov
jmp
or
loope
fs
lret
jbe
lret
jl
shll
mov
mov
jbe
cmpsb
stos
in
mov
inc
sub
add
lret
adc
xchg
shrb
in
xor
mov
jp
xor
mov
dec
or
adc
ret
fs
fisttpll
mov
arpl
mov
cmp
sahf
mov
mov
mov
sbb
jae
add
lods
sub
fsub
int3
fld
pop
out
xor
outsl
movmskps
pop
push
and
psubd
ljmp
pop
and
movsl
mov
and
gs
repz
cmp
in
fisubs
pop
xlat
jbe
jno
add
mov
pop
mov
dec
xchg
sub
push
pop
mov
aad
repz
dec
fwait
data16
or
sub
int
into
gs
mov
iret
data16
sbb
adc
fsubr
aas
vmovaps
sub
sub
jecxz,pn
ftst
xchg
outsl
sahf
push
xchg
sub
scas
rclb
jne
mov
aam
inc
mov
lods
ljmp
shll
in
lods
push
ds
inc
lods
das
mov
jbe
fldl
sub
xor
imul
and
jo
ss
pusha
popf
dec
xchg
inc
sub
jns
notl
fwait
imul
xor
lahf
arpl
ljmp
inc
push
or
insl
popa
out
inc
sbb
lcall
push
xor
mov
test
push
ret
and
mov
in
dec
cmpsb
sti
push
mov
ror
fsubl
push
ja
sub
call
mov
int3
inc
popa
js
scas
out
add
fwait
or
sub
push
cmp
cmpsl
cs
rclb
fnstcw
jmp
mov
repz
sub
imul
sub
adc
in
add
les
inc
scas
cmp
stc
fld1
inc
inc
adcb
repz
jl
in
lods
xchg
sub
add
lret
scas
xorb
jb
jp
and
mov
push
jno
sarb
mov
inc
or
sbbb
mov
pop
addr16
out
dec
pop
stos
repz
pop
scas
xor
mov
xchg
negl
rorb
fimull
push
lock
sub
cmp
pop
dec
add
fxch
out
aaa
sbbb
lcall
adc
jb
shrb
aad
xchg
sub
mov
sbb
add
and
aad
xlat
push
out
xor
sub
pop
outsb
lods
inc
mov
aam
dec
idivb
int
bound
testb
jae,pn
push
xchg
xchg
cmc
xchg
lret
int
xor
jne
out
xor
xchg
stos
inc
pop
das
xchg
sub
add
cmpl
bound
xchg
rcrl
pop
sbb
bound
orb
add
push
mov
push
movsl
inc
ss
dec
ja
test
insb
add
dec
in
aaa
add
mov
push
xchg
sti
rorl
cmc
adcb
fwait
rclb
pop
sahf
and
dec
push
xchg
sbb
es
jmp
aas
out
div
fs
mov
fistpll
inc
rep
leave
xchg
scas
and
add
inc
lds
dec
cmpsl
clc
loop
cs
add
leave
cmc
or
shl
lahf
jbe
nop
xchg
xchg
add
mov
mov
shll
xchg
dec
movsl
dec
rclb
imul
mov
pop
scas
stos
stc
pop
popf
ds
inc
xchg
adc
jge
jle
push
pop
pop
mov
xor
cmp
adc
mov
jne
rcrl
adcl
repz
data16
xor
and
ret
popf
add
in
testl
push
push
pusha
add
pop
cmp
mov
inc
or
sbb
or
add
xor
mov
xor
dec
cwtl
pop
iret
jl
inc
mov
pop
call
mov
jmp
loope
es
push
pop
pop
jge
mov
fiaddl
imul
cmpl
cmc
adc
stc
mov
cmp
sbb
push
stc
xchg
sbb
mov
and
fdivs
mov
mov
sub
xchg
pop
mov
or
cmp
xor
and
pop
dec
jno
aad
out
add
adc
mov
sub
aam
arpl
test
adc
pop
popf
mov
out
mov
dec
in
jge
push
push
jne
cmp
inc
fnstcw
cltd
mov
adc
mov
test
js
lods
ret
or
pop
fld
popf
and
lds
test
jl
fsts
mov
pop
icebp
sub
mov
jg
mov
inc
js
push
movsl
or
inc
push
insl
out
adc
xchg
push
push
inc
insb
jge
outsb
dec
mov
fmul
insl
scas
out
int3
mov
clc
insl
push
test
xchg
mov
sbb
sbb
and
rcl
push
xor
ret
mov
sub
xchg
mov
push
pop
mov
adc
jno
stc
adc
xchg
sub
sub
arpl
into
cmc
or
add
jl
push
sub
das
pop
cltd
and
fistps
call
aad
xor
daa
mov
imul
outsb
loope
pop
mov
fsts
push
inc
cltd
lea
and
mov
rorl
push
adc
mov
roll
into
roll
addr16
pushf
and
js
and
xchg
cmp
mov
cmp
dec
dec
cmp
aas
mov
dec
aaa
mov
hlt
mov
cltd
loop
mov
mov
inc
push
scas
cmpsb
cmp
fcmovnbe
iret
pop
out
lock
popa
push
mov
sbb
loop
jae
xchg
cmc
movsb
cmp
mov
push
ret
jl
aad
fisubrl
movsb
sbbb
lock
loope
add
push
scas
test
push
sub
jo
loopne
xlat
cmp
xchg
out
inc
jae,pt
inc
gs
std
or
bound
jne
mov
js
stos
pushf
adc
inc
in
mov
in
or
xchg
xor
fidivrs
addr16
int
orl
out
ljmp
xorb
outsb
pop
addl
add
clc
pop
jnp
sahf
jbe
dec
mov
imull
mov
sub
pop
sbb
and
insl
aas
in
or
jnp
int3
lods
inc
mov
push
ret
ja
aam
push
stos
mov
add
jge
and
sahf
pop
test
and
pop
popf
icebp
push
dec
cmpsb
mov
jmp
into
mov
sub
insb
cli
xchg
icebp
push
sahf
xchg
push
xchg
jns
and
cmpsl
je
push
gs
jo
mov
iret
jns
into
pop
mov
gs
shl
mov
lcall
push
lds
adc
hlt
inc
iret
cmp
sbb
xchg
insb
cmp
sbbl
sbb
dec
push
lcall
xchg
pop
dec
shrl
aas
pushf
inc
push
jb
or
popf
sub
push
lds
aam
popf
fsubrs
sub
xchg
stos
xchg
xchg
xchg
in
in
mov
sub
xchg
rep
aas
inc
dec
jb
pop
addr16
data16
mov
push
scas
ja
or
xor
cwtl
arpl
cmp
mov
mov
xchg
pop
jb
dec
sbb
lea
jl
mov
push
sahf
lods
jmp
sub
repz
dec
test
cmc
ss
or
fs
and
sbbl
cmp
and
daa
in
cmpsb
inc
add
and
pop
xchg
xchg
push
pop
icebp
sbb
outsl
nop
cltd
shll
xor
sbb
into
adc
and
mov
adc
fldcw
lret
sub
push
add
mov
or
imul
ljmp
addr16
push
adc
dec
pop
movsb
sti
enter
fwait
jle
test
ficompl
in
scas
rclb
aad
xor
sub
loop
sahf
sub
jl
jno
dec
fcompl
insl
ret
xor
sti
push
cld
adc
xchg
ss
jp
pop
mov
out
fwait
push
sub
sub
aas
adc
and
adc
jo
repz
push
xchg
xor
cmp
ds
and
enter
outsb
imul
mov
shll
xchg
inc
jle
xchg
frstor
js
icebp
adc
dec
sti
mov
rclb
mov
je
dec
lods
shll
mov
sti
das
aas
or
lcall
pop
jmp
popf
andb
gs
sub
jp
jl
rcll
push
test
cwtl
sub
in
cmc
rcrb
or
je
mov
std
cmpsb
ds
jno
mov
sarb
push
lcall
push
xor
in
mov
data16
mov
rcr
jno
jne
mov
clc
aad
mov
ja
push
sbb
jno
cmp
or
in
jmp
sbb
or
pop
pop
cmp
test
aas
popa
lcall
test
push
jecxz
or
movsl
js
mov
sub
ret
popf
xchg
xchg
mov
mov
movsb
jns
ffree
test
decl
xchg
push
mov
mov
es
adc
dec
outsb
mov
cmp
or
xchg
sbb
in
jno
sbb
mov
in
pop
test
xor
out
cs
pop
jmp
mov
mov
pop
pop
aaa
or
cltd
mov
or
jns
stos
stos
shrb
xor
outsl
clc
aad
test
sbb
aas
dec
mov
inc
pop
adc
jecxz
outsb
fcomi
lahf
dec
push
jbe
xchg
sub
adc
dec
test
pop
push
push
jp
cmpsl
mov
jns
push
pop
aaa
add
jns
lds
adc
enter
insl
add
pop
cmp
mov
pop
adc
or
mov
int
xchg
outsb
mov
xor
out
stos
jbe
cmp
fnstsw
pop
out
xor
push
in
shlb
jle
pop
sub
imul
dec
outsb
in
pop
insb
out
sbb
aas
push
cmp
push
xor
xchg
xchg
xchg
fwait
and
jns
jge
into
sub
iret
add
into
mov
insl
daa
cmpsl
sbb
push
not
mov
mov
jno
and
mov
adc
inc
dec
mov
loop
mov
js
adc
fildl
cmp
inc
xchg
nop
add
rsm
aaa
es
cs
jmp
stos
iret
into
mov
lret
leave
cmp
lods
popa
xor
imul
sbb
xchg
cmp
filds
pop
inc
lret
ds
outsb
mov
das
xchg
movsb
sbb
jne
adc
add
cmc
ret
cltd
pop
icebp
popa
pop
imul
cld
mov
stos
repnz
mov
ljmp
sub
bnd
clc
pop
jge
int3
ret
pushf
std
rolb
andb
bound
divl
aad
cmp
inc
xchg
sbb
and
sbb
std
inc
fs
out
stos
add
int3
jmp
lret
pop
out
mov
shrl
sbb
mov
fwait
xor
call
push
lods
arpl
stos
xchg
int
int3
sbb
ja
repnz
xor
stos
push
das
jl
sbb
addr16
pop
jecxz
jl
cli
jo
sub
hlt
push
jl
jge
push
lea
aam
popf
jo
jle
loopne
cmp
icebp
xor
sahf
sub
insl
jo
js
int3
sti
movsb
xor
loop
sbb
inc
xchg
cmp
shrl
insl
sbb
or
mov
or
push
outsb
clc
add
push
mov
ljmp
dec
stc
ret
insl
cli
pop
mov
dec
dec
insb
and
adc
addr16
or
inc
adc
bound
cmpsl
inc
inc
addb
mov
adc
jle
lds
jno
inc
imul
dec
sarl
jno
in
es
or
popa
imul
inc
pop
xchg
decl
and
mov
add
push
jmp
sbb
mov
in
sub
cltd
jo
das
xchg
jb
pop
lcall
sbb
in
popf
incl
mov
push
out
shl
and
lock
rcll
xor
pop
cli
pushf
sarb
mov
mov
mov
push
inc
xchg
push
mov
fbstp
shrb
jbe
icebp
test
push
popa
xchg
test
fsqrt
dec
dec
aaa
dec
fldenv
pushf
dec
pop
ret
mov
int
xchg
add
jge
xchg
insb
or
stc
mov
adc
adcl
ret
outsb
fiaddl
adc
mov
sarb
sbb
fcomps
jle
and
xlat
icebp
into
insb
dec
mov
xchg
add
mov
stos
push
jge
inc
jns
mov
inc
cmpsb
into
mov
push
sub
sub
jle
cmp
loope
pop
cmp
ss
inc
cmp
loopne
add
aam
push
mov
cmc
movsl
mov
in
es
gs
xor
cmc
adc
das
shrl
mov
and
and
aas
add
xchg
inc
nop
lods
orl
mov
aam
mov
mov
add
gs
sahf
imul
aam
adc
pop
aas
aam
lret
dec
inc
sbb
cmp
xchg
imull
rclb
inc
cwtl
movsl
ljmp
xchg
inc
test
decl
or
lea
ret
sub
mov
fsubs
int3
pop
ret
jo
mov
push
mov
rolb
mov
jnp
xor
pop
ds
and
enter
scas
mov
in
mov
mov
cmp
sub
ss
xchg
repz
ret
sub
dec
loope
mov
sub
push
jae
mov
rolb
push
or
mov
mov
fistpll
xor
jl
sub
and
lods
jb
and
outsl
pushf
mov
in
cmp
xor
or
dec
dec
adc
push
lahf
mov
pop
jae
jbe
in
adc
push
enter
movsl
ret
ljmp
cmp
lods
in
and
mov
mov
mov
xor
sahf
push
xor
pop
or
jno
int3
push
mov
adc
jnp
cmp
clc
cmp
into
pop
repnz
cli
adc
mov
stos
out
jmp
xor
cmp
jbe
scas
xchg
mov
jo
mov
insl
xchg
push
fwait
mov
test
mov
lret
stc
inc
fst
jge
xchg
insl
inc
fs
sbbl
or
scas
stc
sub
mov
punpckldq
cmp
ljmp
loop
adc
jo
jg
orl
cmp
loop
icebp
xchg
dec
mov
jnp
bound
mov
adcl
mov
pop
and
ret
sbb
pusha
cmpsb
fwait
push
dec
stos
lret
aam
pop
or
cli
mov
lods
sahf
clc
mov
std
dec
mov
add
sti
jle
push
cmpb
cmc
pushf
mov
and
fsubr
popl
pop
out
jb
fcomip
inc
scas
pop
icebp
fbld
nop
roll
subb
fldcw
pop
out
test
mov
xchg
jg
fisubrs
in
xchg
imul
xor
fsubrl
outsl
push
test
xchg
cmp
rorl
push
inc
jae
fs
in
pop
icebp
jmp
dec
mov
loopne
pop
fmuls
mov
sbb
aad
aaa
iret
ljmp
xchg
lret
negl
out
pop
mov
xchg
lds
sahf
sub
mov
outsl
and
xchg
sub
and
lahf
lret
add
mov
cld
xchg
cmp
and
adc
iret
add
cmpsl
addr16
push
enter
fs
pop
jne
test
inc
add
stos
sahf
push
ljmp
pop
sbb
in
hlt
sbb
into
insb
xchg
pop
mov
shll
mov
cmp
cmp
stos
aam
pop
xchg
mov
mov
push
sbb
adc
or
mov
mov
test
mov
cld
or
mov
xchg
shrl
add
lock
sbb
dec
xor
xchg
scas
popf
push
out
leave
pop
lahf
mov
jp
inc
fwait
add
das
out
jmp
lds
roll
cwtl
scas
cmp
xchg
je
pop
arpl
iret
mov
outsb
sti
pushf
mov
cltd
and
mov
aaa
bound
xchg
cmpsb
sub
lock
mov
xchg
xchg
sub
fsub
mov
insl
mov
xchg
push
pop
loop
xor
loopne
push
dec
std
js
out
mov
mov
pop
push
shlb
outsl
repz
test
or
enter
sub
inc
push
fdivs
faddl
add
xchg
jle
out
and
sub
xor
cmp
and
lods
xor
pop
xor
outsb
jo
pop
adcl
jno
dec
xor
loopne
movsb
and
cmp
cld
mov
ficomps
or
push
pop
or
mov
out
adc
inc
bound
push
mov
pushf
rorb
int
sahf
outsl
mov
sub
xchg
in
cld
ret
xchg
ljmp
inc
fbstp
sbb
jl
add
or
dec
and
shll
xchg
ret
push
popf
mov
xchg
popf
or
sarb
dec
aaa
call
cltd
xor
mov
mov
sub
popa
pop
mov
and
and
lahf
fidivrs
sbb
sub
jno
and
and
es
sbb
sub
mov
mov
cld
xor
mov
popa
mov
or
add
jae
stc
nop
sub
call
pop
sub
inc
fsubrl
outsl
stos
inc
pop
rcrb
mov
xchg
sub
and
mov
shl
mov
jae
adc
sbb
fwait
enter
adcb
or
shrl
lock
jecxz
or
cmp
mov
jg
call
dec
rol
sbbl
xor
mov
test
imul
cltd
xor
pop
into
gs
inc
popa
clc
xor
sub
addl
fidivs
or
jo
js
je
inc
in
and
es
push
in
xor
add
mov
or
movsb
test
mov
mov
mov
fwait
hlt
xchg
pop
adc
aaa
leave
push
int3
mov
mov
xorl
lcall
popa
scas
jnp
mov
nop
insl
loopne
lret
nop
push
add
xchg
hlt
inc
fsts
or
cmpb
lahf
aaa
push
xchg
mov
call
jno
aaa
in
or
das
subl
lret
das
mov
aad
push
xchg
clc
bswap
adc
ficoms
mov
data16
addr16
mov
mov
movsb
lcall
sbb
adc
push
stc
adc
mov
pushf
ret
clc
jns
xor
push
inc
ss
jle
sub
xor
aam
gs
sbb
cmc
into
test
sbb
lret
repnz
inc
pop
inc
pop
mov
rorl
daa
ljmp
jbe
rcrb
xlat
add
inc
bound
pop
jge
ja
mov
mov
cmp
insl
popf
push
or
dec
bound
std
pop
cli
dec
jae
arpl
es
xchg
in
add
xor
out
les
sub
push
mov
push
pop
fwait
and
stos
xchg
jl
lea
or
int3
loopne
es
xchg
jle
cmp
sbbl
enter
mov
pop
sbb
add
divl
std
mov
pop
rorl
jle
es
xor
idivl
dec
sub
lods
inc
sbb
jo
fnstenv
pop
mov
nop
es
xchg
and
stos
fnstenv
loopne
adc
aaa
mov
sub
data16
outsl
mov
mov
push
inc
cmp
mov
rorl
sarb
ja
shll
dec
xor
xchg
cmp
cltd
sub
mov
mov
cmp
cmp
cmpsl
pop
sub
cs
test
cmp
xlat
mov
daa
cmpsb
add
sub
add
arpl
sahf
stc
mov
into
jge
insb
out
scas
mov
mov
iret
xor
fmul
roll
adc
das
or
imul
mov
xor
add
je
stc
push
pop
lock
ss
cmpsl
inc
or
mov
inc
inc
in
les
or
xor
enter
xchg
jmp
dec
cmpsb
mov
mov
dec
fdivrs
shll
sbbl
int3
andb
ds
int
pusha
das
push
and
shll
cmp
leave
mov
xorb
repnz
inc
cmpsl
sub
push
cs
jb
add
in
dec
out
push
sarb
test
lock
pop
das
subl
sub
add
inc
dec
scas
ljmp
out
push
and
insl
pop
adc
movsb
ds
mov
sub
rol
mov
pop
mov
xchg
int
add
scas
push
mov
popf
loop
ret
out
fnstsw
lahf
sarb
pop
cmp
jle
fnsave
cs
cmp
daa
adc
insl
jbe
pop
lods
mov
lret
and
fistl
mov
sbb
loope
jb
data16
sbb
xor
cmpsb
push
lahf
nop
xchg
mov
sub
jecxz
mov
sbb
imul
xchg
or
imul
sub
stos
lahf
jle
fmulp
dec
aaa
jbe
fdivrl
add
mov
and
sahf
jmp
lahf
rolb
or
subl
mov
sbb
add
insb
push
mov
out
hlt
popf
repz
iret
sub
fs
ret
clc
mov
jbe,pn
xorb
hlt
mov
icebp
inc
frstor
pop
xchg
cli
or
push
std
loop
and
mov
add
rcr
xchg
mov
rcr
lds
or
cld
dec
ja
pusha
lds
movl
xor
mov
arpl
lcall
add
jp
xor
fdivs
mov
push
sbbl
jne
xlat
insb
add
lret
and
pusha
jp
push
shrb
loope
imul
loop
adc
pop
lret
sarl
pop
adc
jmp
aaa
mov
jne
and
scas
pop
mov
insl
pop
loopne
mov
ja
enter
mov
push
adc
test
and
call
test
test
shlb
adc
pop
pop
call
loop
push
lahf
inc
std
inc
xlat
lret
stos
lahf
jmp
jb
subl
pop
xchg
mov
jge
sahf
sub
pop
call
jae
push
add
xchg
sbb
add
sub
mov
sub
sub
mov
scas
and
in
movsl
cmp
jecxz
push
mov
dec
pop
inc
call
loope
in
xchg
imul
cli
aam
mov
out
xor
rcll
imul
add
rorl
jbe
mov
push
stos
ljmp
jp
outsb
mov
sti
mov
outsl
je
insb
inc
push
lods
test
mov
lret
aam
movsl
inc
enter
add
push
adc
lahf
inc
jne
cld
mov
clc
ret
addl
inc
repz
mov
pusha
mulb
rcrl
fildll
shr
xor
jle
mov
sbb
cmp
bound
adc
sub
adc
dec
sbb
popf
pop
in
cld
inc
xchg
imul
insb
inc
pushf
push
imul
and
mov
dec
out
xchg
push
mov
add
aas
ret
cltd
dec
js
sbb
icebp
sub
and
cltd
mov
sbb
loope
incb
movsb
dec
pop
adc
push
inc
xchg
and
xor
rcrb
push
aaa
push
je
dec
shlb
dec
dec
dec
and
lods
int3
lds
push
pop
shll
push
test
xchg
mov
ljmp
inc
inc
outsb
push
cwtl
fnstsw
mov
out
inc
mov
jns
imul
sbb
mov
xor
jp
out
daa
or
mov
popa
lock
sbb
leave
hlt
mov
out
out
jbe
xchg
jmp
dec
jo
shll
xor
adc
cmpsl
add
mov
inc
ja
idivl
imul
testl
add
jns
enter
cwtl
push
pop
cmpsl
out
nop
mov
cli
push
fcmovnb
pop
mov
lods
movsb
mov
aam
lahf
in
jecxz
lahf
lock
ds
xor
push
dec
or
jg
arpl
fcomi
mov
fcoms
aaa
mov
in
call
or
mov
adc
pushf
enter
fucompp
sbb
xor
adc
xor
popf
jnp
test
pushf
fs
sub
stos
pop
mov
lea
test
pop
cltd
roll
and
fnsave
fdiv
neg
cmp
movsl
iret
and
rcrb
imul
jecxz
aaa
sbb
push
ret
push
dec
mov
imul
cli
out
ret
xchg
jp
jb
ret
push
pop
dec
adc
cltd
sub
js
mov
fcmovne
xor
shr
cmp
pop
cmp
adc
inc
sbb
xchg
pop
lock
lock
das
insb
rorb
call
jns
ja
xlat
mov
stos
jbe
lock
shl
imulb
sub
mov
scas
pop
ds
inc
sahf
ficoml
test
adc
push
fisubl
dec
push
mov
lods
add
jl
jb
stc
decb
rorl
pushf
mov
and
or
xor
jl
fcoml
mov
ds
outsb
mov
xchg
mov
add
movsl
jl
ret
sub
jns
xlat
mov
pop
mov
cmp
xchg
or
dec
dec
mov
mov
movdqu
nop
dec
pop
sub
jns
jmp
pop
sub
addr16
push
shr
lds
popa
hlt
jmp
hlt
jmp
adc
es
pop
movb
lods
jmp
sbb
mov
mov
mov
jnp
add
ja
test
pop
and
dec
adc
mov
je
mov
xor
clc
imul
arpl
mov
cmpsl
sub
stos
fstpt
sbb
pop
stc
cmp
sub
ret
enter
push
jo
outsl
shll
ffreep
pop
icebp
movsl
sub
frstor
fisttpl
jns
fs
push
fwait
sub
out
dec
inc
int3
jo
sbb
cltd
sbb
fcompl
popw
jno
imul
fcmovb
divl
or
xor
ret
ds
fisubrs
aaa
mov
sbbl
std
call
sbb
push
xor
inc
xchg
sbbb
xchg
jp
mov
lret
test
std
leave
fnop
test
adc
xchg
lret
inc
xlat
outsb
aas
sub
loop
mov
fmuls
sbb
scas
mov
jb
jo
push
fiaddl
into
shlb
jb
loop
xchg
or
mov
xchg
pop
push
and
mov
int3
ret
hlt
insl
mov
xlat
add
fcomps
outsb
inc
jl
nop
in
lock
popa
add
loop
cld
outsb
stc
inc
or
cmp
jge
shr
addb
sbb
je
or
xor
pop
stc
nop
xchg
sub
rclb
popa
rcl
fs
lret
data16
clc
push
mov
or
lret
int
xor
lock
ds
push
hlt
xchg
icebp
jle
mov
repz
js
and
iret
xchg
add
out
sahf
out
fadds
cmpsl
mov
hlt
scas
aam
imul
outsl
shrb
pop
mov
cmp
or
xchg
dec
pop
xchg
mov
push
mov
xchg
outsl
hlt
mov
jno
push
je
arpl
pop
in
jns
ss
push
and
jmp
sbb
mov
int
dec
call
mov
test
xor
xor
xor
cmc
loopne
shrb
aaa
bound
mov
out
push
jmp
mov
std
mov
or
sarl
jne
mov
aam
cmp
adc
xlat
xor
mov
mov
jns
mov
insl
scas
xor
jno
fidivs
aam
push
xor
jge
inc
push
xchg
cmp
aaa
and
xchg
orb
pop
in
test
adc
mov
xor
in
or
gs
pop
xor
inc
stc
cmp
lret
inc
scas
sub
xchg
cltd
div
adc
repnz
xor
lret
jne
out
push
mov
scas
add
cmpl
aad
pusha
aam
sbb
ss
inc
pcmpgtw
insl
lock
shrl
dec
popf
movsb
out
cli
or
xlat
and
jl
push
pop
test
in
xchg
cli
fistpl
repz
mov
push
aas
loop
push
cmc
push
push
mov
dec
xor
mov
cmp
es
mov
lret
xchg
xchg
and
vmovups
fldcw
std
pop
aas
arpl
jo
jo
imul
jp
mov
les
xchg
test
inc
fs
leave
sbb
data16
out
or
pop
cmp
out
sahf
clc
mov
pushf
xchg
stos
nop
shl
cmp
mov
push
mov
or
and
mov
leave
stc
aam
jns
xor
sbb
mov
fs
sbbb
cmc
push
gs
sti
xchg
add
sbb
mov
adc
ss
inc
and
and
lcall
add
pop
fidivs
lea
ret
cli
iret
cld
outsl
mov
in
jl
add
repz
sbb
out
pop
ret
int3
cmc
mov
mov
testl
and
insl
shrb
mov
aad
adc
jl
sbb
orb
loope
enter
out
stc
push
jmp
lods
sbb
jg
data16
xor
and
test
push
add
shl
jb
fwait
pop
ja
inc
mov
dec
enter
dec
mov
push
and
aad
add
insb
add
jne
roll
push
xor
inc
outsl
daa
out
pop
mov
stos
mov
aaa
loop
push
dec
mov
mov
aad
test
ret
orb
pop
mov
sub
mov
fucomp
lret
sbb
mov
je
mov
divl
dec
popa
or
pop
mov
cli
pushf
lret
mov
jo
iret
jno
ds
popa
xorl
push
cwtl
fucomi
jns
loopne
out
test
mov
call
push
cmpsb
jb
sub
or
push
cmc
mov
xor
mov
loopne
mov
aam
bound
lds
jae
mov
sbb
outsb
rclb
or
cmp
dec
leave
dec
mov
cmp
xchg
add
aaa
pop
mov
jns
jnp
lods
lods
lahf
jle
xchg
push
xchg
add
jmp
adc
and
mov
inc
aad
mov
mov
lea
addb
lea
lods
inc
into
xchg
repz
cmc
push
pushf
arpl
shll
shlb
mov
fwait
xchg
jae
mov
fcmove
outsb
pop
xor
aam
push
or
xchg
xchg
addr16
xor
cmp
sbb
sahf
xor
mov
dec
ds
jmp
fisubl
xchg
push
cld
adc
enter
js
xchg
pushf
aaa
test
jmp
test
mov
jle
cmpsb
mov
cld
lods
addl
cmp
int
pop
mov
and
push
cltd
inc
inc
je
cmpsl
mov
xor
fistps
mov
jno
pop
xor
cmpsb
ds
cmp
xlat
loop
lds
jp
lcall
xor
imul
jmp
lods
lahf
sahf
mov
fsubl
cli
in
call
mov
mov
add
aas
rcrl
jmp
xchg
mov
push
je
dec
insl
ja
jmp
test
rol
stc
and
inc
andl
mov
repnz
pop
bound
adc
lods
jmp
ljmp
aam
or
stos
lods
inc
fiaddl
lret
int
xchg
adc
movsl
rol
enter
cmpsl
sbb
movsb
mov
inc
sbb
insb
pop
aam
jmp
inc
mov
stos
mov
test
mov
ret
pop
sbb
mov
cli
pop
cmp
xchg
jl
lahf
es
pop
add
fidivrs
add
lahf
cmp
pop
mov
daa
mov
pop
mov
adc
xchg
pop
testb
les
movsl
ret
mov
mov
test
and
cmp
outsb
mov
mov
imul
mov
fisttps
add
push
andb
lods
mov
bnd
dec
push
dec
bound
sbb
rol
mov
sbb
into
xor
out
push
push
js
add
xorb
test
shld
mov
out
ds
mov
cwtl
insl
out
int3
shlb
mov
data16
inc
or
jmp
push
sbb
pop
and
add
mov
repz
cmpsb
sbb
sub
push
test
push
pushf
mov
sbb
das
cmp
sbbb
nop
xor
aad
lahf
testl
mov
clc
adc
and
xor
cwtl
into
xchg
nop
cmpsl
xor
jnp
xor
fldt
int3
mov
std
fs
cmpsl
xlat
xchg
mov
sbb
push
xchg
cmp
lret
push
nop
jne
jns
mov
lods
jecxz
adc
js
add
lcall
ds
jmp
sub
fnstsw
nop
jmp
sub
pop
cli
cmp
dec
iret
pop
out
add
data16
adcb
les
lcall
jp
adc
adc
stos
xchg
lods
jmp
cmpsb
jmp
andb
fists
adcl
orb
pop
mov
enter
add
xor
sub
and
push
shl
mulb
shll
in
shr
cltd
cwtl
sbb
rol
inc
inc
div
add
mov
sub
aam
out
aaa
mov
in
push
std
ja
aad
xor
dec
fwait
xchg
add
fs
add
pop
into
lea
mov
dec
pop
adc
lcall
jge
test
ljmp
xlat
lock
jmp
jno
mov
pushf
cmc
jle
daa
aaa
in
mov
xchg
stos
fcomps
lock
clc
xchg
popf
xchg
js
xor
xchg
mov
mov
cmp
adcb
sub
nop
mov
out
pushf
arpl
or
leave
outsl
loopne
cltd
push
or
mov
dec
sbbb
aam
jmp
movsb
pop
icebp
aad
push
mov
outsl
fldcw
dec
out
xor
adc
adc
sub
sub
xor
iret
mov
js
movsl
outsl
mov
sub
scas
and
dec
ss
xor
les
dec
push
cmp
or
loopne
fcoms
out
sbb
bound
out
cmpsl
arpl
or
or
ja
in
pop
ljmp
push
addr16
lock
repnz
mov
pop
repz
cmp
jno
jp
lea
inc
inc
jne
outsb
rcll
pushf
mov
dec
das
jl
ds
cmpb
insb
imulb
subb
jno
es
xchg
add
int3
fidivrl
cmp
addr16
sbb
jnp
insl
push
mov
into
mov
sbb
gs
pop
mov
xor
push
mov
push
lods
decl
xor
int3
and
or
xor
or
out
aaa
leave
enter
shrl
xor
mov
inc
adc
into
loopne
fldt
in
leave
test
popf
addb
push
pshufw
fs
cmpsb
xchg
push
sub
xchg
shlb
mov
add
test
imul
or
inc
mov
ret
pop
je
adc
arpl
cmpsl
jne,pt
jo
adc
mov
or
cmp
popa
int3
stos
ja
mov
mov
adc
mov
push
loopne
mov
ljmp
dec
stc
and
rclb
push
sbb
and
test
dec
js
lds
adc
adc
insb
in
adc
sbb
or
push
or
cwtl
rcll
inc
or
xchg
and
int3
dec
mov
movsb
repnz
pop
sbb
mov
lcall
aas
ds
push
out
pop
push
cmp
jb
in
xor
xchg
sub
test
mov
xchg
div
imul
xchg
push
xrelease
push
jmp
js
jo
shr
enter
std
out
out
or
popa
mov
pop
hlt
xlat
dec
lcall
inc
faddl
scas
add
rclb
push
loop
imul
push
imul
and
cmp
sarl
fistps
push
mov
mov
xlat
mov
stos
jmp
popf
mov
shll
push
lcall
pop
jmp
clc
jae
cltd
fs
inc
mov
fdivs
dec
dec
cmp
jae
scas
fisubl
fistpll
sub
je
mov
push
mov
jge
movsb
scas
mov
or
add
leave
pusha
dec
sub
aam
jb
push
imul
and
sub
mov
cmpsb
les
pop
and
fisubl
mov
jns
icebp
jne
xchg
and
xlat
mov
xchg
sbb
fxch
fwait
push
push
and
sbbb
or
sub
xchg
pop
imul
lret
jb
and
mov
jbe
pop
cmpsb
lret
cmp
push
sub
mov
pop
xor
nop
imul
adc
and
enter
xchg
and
subps
jl
cmp
jo
pop
mov
pop
sub
jb
dec
jecxz
and
addl
in
pushf
cmp
jle
into
mov
push
inc
cmpb
decl
movsl
add
iret
sub
xchg
insl
and
leave
cmp
test
or
cmpsb
pop
imul
mov
es
dec
dec
mov
cmpsl
push
outsl
cmp
cmpl
cmpsl
jp
shl
cmpsb
mov
out
cmp
aad
in
ds
xor
mov
ja
push
and
inc
fistl
pusha
clc
or
stos
mov
cmp
es
sub
cwtl
mov
fidivrl
jge
inc
mov
popf
or
call
adc
out
jb
inc
std
outsl
inc
lcall
mov
xchg
in
repnz
xor
sbb
cwtl
adc
scas
inc
mov
into
leave
in
cli
xchg
pop
push
sub
das
sbb
bound
pop
push
divb
and
leave
sub
pop
test
rcr
or
int
test
stc
mov
fst
outsl
push
sub
jl
adc
sbbl
fldcw
lods
data16
mov
push
test
into
shl
add
in
add
arpl
aad
lahf
ss
push
movsl
adc
in
pushf
popf
bound
sub
std
dec
push
cmc
mov
lcall
jl
mov
loope
sarb
pop
in
cmp
push
insb
dec
dec
sub
push
pop
push
imul
mov
lods
ljmp
stos
pusha
push
mov
sbbb
xor
push
xchg
fnstcw
ret
xchg
and
pop
aad
xchg
pop
sub
jg
outsl
das
addr16
pop
insb
shrd
add
fisttps
lods
or
push
or
jge
rol
sbb
add
or
and
aas
sub
cmpsb
lcall
mov
lods
inc
lcall
cmpsl
mov
in
pop
ljmp
cmp
loope
les
jp
inc
les
loop
negb
incb
mov
fnsave
dec
vmwrite
outsb
das
and
imul
rol
inc
mov
jmp
call
cmc
push
pop
repnz
sub
xchg
insb
int3
cltd
sbb
inc
mov
jp
jl
xlat
outsb
inc
cld
adc
jmp
test
mov
or
loop
pop
add
scas
mov
inc
pop
scas
push
ds
iret
mov
sbb
xor
das
cmp
adc
sbb
xchg
cwtl
mov
inc
call
inc
sti
pop
jne
fsubr
xor
lret
xor
xchg
pop
push
imul
mov
popf
lods
mov
fnstcw
test
push
insb
jb
mov
les
xchg
dec
pop
jae
push
adc
xchg
das
mov
add
mov
push
push
sti
xchg
fs
mov
stos
inc
out
sti
test
inc
enter
cmc
int3
scas
jno
subl
test
sbb
repz
or
jp
push
or
or
ret
adc
jl
jae
pop
dec
stos
sti
xor
mov
mov
add
test
imul
hlt
sub
mov
imul
shrb
pop
repnz
jne
mov
int
gs
pop
rolb
mov
test
lret
mov
push
rorl
lods
sbb
aad
mov
mov
adc
mov
cmp
xchg
out
imul
xchg
dec
ljmp
dec
pop
xor
icebp
movsb
cltd
lods
xchg
mov
cmp
and
mov
mov
mov
aas
cmpsb
icebp
jnp
add
into
xlat
cmp
jnp
and
push
pop
std
loope
or
xor
xchg
outsb
pop
ja
stc
pop
shll
enter
or
mov
mov
push
lea
mov
rorb
cltd
es
push
mov
mov
iretw
inc
jno
inc
mov
mov
push
inc
aad
jle
fbstp
mov
sbbb
lret
inc
push
push
js
lret
lret
and
out
stos
dec
sbb
xlat
or
push
add
push
adc
repz
clc
mov
popf
cmpsl
sbb
add
push
jne
sbb
jl
out
lods
inc
mov
cwtl
mov
ret
outsl
push
icebp
adc
mov
nop
pop
out
mov
mov
pop
and
inc
daa
aas
dec
or
pop
cmp
mov
mov
adc
and
movsb
out
ja
loopne
pop
jo
inc
in
negb
and
arpl
shll
imul
pop
push
js
push
pop
add
push
mov
imul
mov
xchg
testb
icebp
sub
std
cltd
imul
add
fimull
jmp
imul
inc
iret
in
jb
imul
inc
adc
xor
inc
fs
jb
or
icebp
movsl
jmp
or
loope
call
roll
mov
push
lods
rol
andl
mov
stos
mov
loopne
js
jmp
dec
jnp
fldl
push
and
in
mov
jge
sarb
xlat
loopne
ret
and
inc
push
outsl
fnstsw
bound
enter
inc
dec
or
mov
insl
jb
lahf
add
nop
push
xor
or
decl
fisubrs
mov
mov
mov
subl
jae
inc
mov
jae
fdivp
test
xchg
mov
mov
cmp
aad
mov
test
cli
out
popa
imul
or
aaa
int
test
ret
fmuls
cld
adc
imul
imul
decl
cmp
movl
pop
addr16
addl
or
adc
inc
movsb
xchg
imul
lock
and
ljmp
ss
hlt
in
xchg
push
push
pop
les
adc
pushf
xchg
and
divl
mov
and
jl
inc
push
stos
push
cmpsb
and
imul
mov
xor
push
push
or
jns
call
jns
testb
arpl
add
aaa
adc
mov
leave
fstps
aad
adc
pop
and
rcrb
and
orl
mov
clc
aas
and
in
xor
out
push
push
or
inc
cwtl
jo
rcrl
jno
fisubl
pushf
dec
clc
inc
jns
push
inc
fsubs
push
jne
push
mov
into
roll
popa
insw
pop
mov
adc
fcomps
jb
ret
stc
lahf
sbb
test
shr
inc
into
insb
mov
scas
stos
test
cmp
sbb
gs
leave
xchg
add
or
adc
lcall
xchg
repnz
into
jle
aas
in
dec
dec
rcl
cmp
std
arpl
jp
xor
and
ss
inc
clc
or
jle
test
mov
lret
std
cmp
in
out
push
imul
push
idivb
sbb
adcb
sub
add
mov
bound
test
lods
ret
loope
bound
lret
scas
xchg
enter
sub
add
or
adc
int
xor
cwtl
and
jg
pushf
pusha
sbb
mov
fiadds
push
add
push
jb
push
adcb
inc
inc
push
and
in
imul
and
jmp
cmpsb
pushf
aad
sub
mov
repnz
inc
lods
cmc
cmp
insl
cmp
imul
cli
lds
sbb
push
inc
mov
sub
dec
sti
inc
dec
divl
jnp
pop
sub
aas
loop
shll
cmp
rcrb
les
rep
out
lret
les
push
jno
mov
sub
inc
cs
in
pop
pop
int
aad
out
pushf
or
ret
popa
fistpll
popa
leave
pusha
insb
inc
sbbb
or
sub
mov
push
in
push
sarl
push
dec
cmp
pop
mov
lods
ds
dec
dec
xor
cmp
mov
xlat
data16
cmp
pop
test
mov
shr
and
movsb
xor
or
lahf
outsb
dec
decb
aam
push
jbe
mov
and
lret
mov
sbb
ds
add
rorb
pop
adcb
jecxz
inc
sbb
dec
bound
mov
mov
roll
inc
inc
push
test
mov
les
mov
pop
loopne
jmp
jle
mov
clc
jae
cmp
rcrb
call
aaa
sbb
xor
push
hlt
dec
mov
mov
cwtl
jge
inc
mov
lods
mov
outsb
mov
pop
mov
in
lods
sub
movsb
jnp
sub
icebp
cmc
out
push
inc
push
pop
insl
and
into
push
push
sbb
clc
add
xchg
mov
dec
or
push
ljmp
lret
and
push
xor
add
adc
int
inc
mov
frstor
enter
push
outsl
add
fwait
js
xlat
test
jg
xor
inc
pop
in
xor
fidivl
or
in
cld
add
movsb
sti
rolb
ret
push
xchg
bound
rcr
inc
leave
popf
stc
fbstp
lods
push
iret
xchg
push
gs
aam
into
testb
push
addr16
jb
hlt
push
push
hlt
jb
movsb
pop
popf
sbb
js
mov
mov
cmp
ds
loopne
iret
cmc
mov
lret
mov
push
js
pusha
and
push
xchg
insl
adc
add
push
fwait
or
arpl
fisubs
ss
imul
sub
lods
cmp
rcl
sti
dec
inc
hlt
out
jmp
xor
mov
cmc
xchg
xor
mov
jbe
jge
cmp
mov
jl
or
jbe
lahf
fidivs
dec
fimuls
int
pop
jecxz
sbb
vprotd
icebp
andl
lret
mov
nop
cmpsl
out
dec
sbb
in
cmp
inc
ja
mulb
in
aaa
xchg
cltd
movsb
scas
in
cmp
jno
sub
scas
cltd
cltd
dec
addr16
xchg
int
aad
push
aaa
mov
xchg
daa
out
je
dec
sbb
mov
pop
jp
push
add
repz
xchg
sbb
mov
shlb
xor
scas
js
and
xchg
xor
daa
sub
xor
stc
popf
data16
into
inc
jo
and
cmp
push
or
mov
cmp
mov
in
setae
lret
scas
add
add
mov
xlat
mov
je
sbb
enter
dec
ret
in
into
sub
mov
xor
pop
mov
mov
fdivs
lods
roll
inc
push
cli
scas
ds
leave
push
lods
cli
int3
mov
push
xchg
jp
jmp
ljmp
mov
adcb
cmp
mov
cmpsb
out
std
lods
inc
lods
outsl
les
jmp
mov
jmp
xchg
xchg
cmp
movsb
mov
in
call
shll
sbb
popf
cmp
mov
inc
movsl
aas
loop
std
out
shll
mov
clc
cmpsb
lret
popa
add
cmp
cs
and
ja
shll
mov
mov
pop
adc
sbb
outsl
cmp
jns
pop
repnz
popa
int
js
and
mov
jo
and
add
mov
je
sub
pushf
aad
int
out
fcompl
mov
add
cmp
in
inc
pop
sar
mulb
subl
mov
mov
lret
lock
in
sbb
inc
xchg
pop
js
in
std
push
test
dec
enter
jne
push
insl
and
cmp
xchg
arpl
mov
lret
bound
ss
movsl
inc
jmp
cmp
dec
push
in
push
icebp
cmp
inc
sub
pop
imul
pusha
hlt
xor
outsb
push
popa
clc
xor
push
jg
shrl
push
lcall
mov
push
sbb
call
xor
stos
and
jecxz
nop
mov
mov
push
pusha
lock
pop
mov
stos
fbld
mov
and
imull
xchg
sub
mov
pop
cmc
cs
fistpl
mov
mov
adc
ljmp
lods
jne
xchg
xchg
dec
clc
in
pop
xchg
dec
dec
xchg
pop
xor
pop
pop
ret
add
xchg
mov
cmpsl
aas
mov
cmp
push
lods
inc
mov
pop
pop
adc
pop
scas
cmp
sub
sbb
sti
xchg
into
and
sbb
std
push
cmpsb
imul
roll
push
xchg
in
xor
fwait
scas
rcrb
fs
repnz
mov
fsub
pop
xchg
mov
cwtl
jmp
fnstenv
and
cs
mov
fdivrl
sub
pop
jg
mov
inc
and
icebp
mov
jns
add
mov
push
jecxz
push
lock
lods
fnstenv
out
repnz
pop
mov
pop
pop
inc
cli
test
or
cmc
or
test
daa
jle
pushf
push
inc
xchg
ficoml
pop
and
adc
je
cwtl
das
push
jno
insl
push
jae
or
adc
mov
nop
das
lret
nop
psrlq
jnp
fs
es
add
or
and
js
push
jecxz
cmpsl
push
shrl
popf
and
push
xchg
leave
aad
and
adcb
out
cltd
popa
sbb
xchg
cmp
cltd
dec
addr16
inc
bnd
jne
clc
push
cs
cmp
push
clc
fidivs
hlt
std
shrl
mov
out
inc
or
cmpsl
mov
in
sub
cli
pop
mov
fsubrs
pop
clc
pop
pop
cld
ja
rcl
push
sbb
ficoms
and
mov
push
ss
dec
push
xchg
je
shll
add
xor
jno
inc
xchg
out
repz
and
lock
in
mov
mulb
arpl
out
subl
mov
pusha
std
adc
es
sub
inc
pop
add
sub
icebp
jno
shll
jg
and
xchg
cmpsl
iret
pop
jle
mov
out
test
mov
scas
cmp
js
notb
test
sbb
mov
sbb
mov
push
insb
mov
lahf
out
iret
adc
mov
in
or
cmove
fwait
notl
loope
ja
lcall
scas
scas
rcrl
dec
push
imul
xor
push
fwait
scas
mov
daa
inc
xchg
lret
es
insl
mov
test
add
rolb
pusha
dec
inc
fs
lcall
and
roll
sub
push
fisttps
inc
push
mov
xchg
out
adc
sub
add
push
xor
ret
std
popa
cmp
inc
inc
xor
addr16
aad
inc
push
dec
pop
push
es
xor
sbb
enter
stos
lret
lahf
xchg
sbb
iret
mov
cmpsl
adc
jecxz
gs
or
data16
sub
dec
push
arpl
int3
pop
into
cmp
scas
xor
xchg
cmp
daa
add
sub
adc
inc
in
push
sub
orl
jbe
out
popl
lret
repnz
adc
daa
lods
lret
lahf
and
out
jmp
aaa
test
inc
dec
aaa
push
jl
mov
jns
dec
aad
jl
scas
les
rol
test
aas
dec
add
mov
inc
push
inc
sub
pop
adc
sbb
ucomiss
or
cs
out
cmp
cld
xchg
adc
mov
push
add
das
jmp
push
call
nop
nop
in
test
aad
fnstsw
add
jnp
lods
scas
mov
mov
jno
outsb
xchg
sarb
xorb
addb
test
jp
mov
mov
ljmp
loop
push
adc
cmpb
push
inc
xlat
xchg
and
cmp
adc
roll
push
sbb
aaa
mov
push
popa
mov
iret
adc
push
and
scas
ja
inc
test
adc
and
mov
mov
sbb
outsl
pop
lods
adc
sbb
and
push
in
je
push
pop
imul
jo
in
rcll
push
loop
enter
lods
xor
pushf
ljmp
adc
dec
pop
jno
cmpsl
roll
movsl
adc
push
xor
lahf
neg
cmpl
and
push
out
out
cmp
sub
sbb
push
in
arpl
cmp
and
aam
int
lret
lds
adcl
pop
xor
push
mov
in
and
cltd
dec
cld
lcall
in
stos
fwait
mov
test
in
jae
decl
orl
add
xor
fs
out
cmp
adc
xor
dec
test
cli
xchg
and
and
inc
add
out
xchg
dec
mov
jnp
dec
hlt
lcall
inc
push
xor
push
mov
or
add
adc
xchg
fwait
xor
jo
loop
shlb
jp
nop
je
mov
jmp
loopne
xchg
fmuls
inc
inc
aaa
cmpsb
lahf
testl
dec
mov
ret
jle
imul
push
jmp
inc
xchg
cld
sti
add
mov
and
sub
movsl
add
mov
lcall
aad
pop
dec
and
pop
cmp
ljmp
cmp
pop
stc
push
jecxz
mov
fmuls
add
mov
xchg
sub
mov
xor
fsub
dec
add
lcall
jo
stos
push
or
xchg
push
lret
cld
pop
sbb
add
xchg
int
pop
scas
pop
pop
mov
test
mov
xchg
add
mov
sub
mov
lret
divl
xlat
lds
mov
repz
hlt
lcall
inc
sti
adc
shl
mov
lahf
jl
xchg
int3
sahf
sbb
std
jo
mov
sti
jbe
xchg
out
ja
jmp
push
cwtl
or
adc
or
stos
loopne
pop
lahf
into
or
fcomps
mov
rcl
inc
sub
outsb
subl
outsb
jo
incl
dec
jmp
jb
and
cwtl
fistps
clc
lcall
add
cmp
inc
adc
adc
and
fs
sbb
sti
xchg
inc
icebp
sbb
and
loop
negb
fildll
pop
sbb
pop
outsl
xchg
jo
mov
push
xchg
mov
sbb
outsl
cs
cmc
js
bound
push
mov
aas
jp
icebp
stos
pusha
fucomp
mov
rcr
ljmp
pop
cmc
pusha
and
jns
movl
add
push
jne
mov
dec
xchg
sub
and
or
pop
mov
push
hlt
xchg
xor
enter
imull
or
notb
jb
gs
adc
xor
pop
sbb
mov
outsb
mov
mov
stos
pusha
xchg
dec
in
push
sub
inc
xchg
lcall
repz
adc
mov
xor
mov
fstpt
rorb
push
fwait
pop
pop
int
mov
lea
cmp
popf
pop
mov
sti
push
sub
mov
cmp
xchg
clc
clc
sahf
cmp
hlt
inc
loopne
xor
int3
fsubl
push
pop
mov
stos
sub
sub
pop
roll
inc
inc
ret
loope
jmp
lret
xor
out
or
aas
jb
sbb
rcrl
pop
test
and
mov
push
jp
fs
adc
jbe
inc
fs
jae
mov
mov
jmp
repz
and
cltd
test
and
je
movsl
and
fists
lds
or
scas
jmp
test
mov
int
subb
jae
mov
add
push
test
dec
sbbb
dec
pop
xchg
inc
rcrb
lods
xorl
or
ffree
adc
xchg
xchg
add
mov
xor
repnz
popf
cltd
inc
pop
push
mov
aam
pop
bound
jecxz
inc
enter
fs
push
outsl
clc
cmp
mov
or
inc
push
inc
enter
sarl
movsb
sahf
int3
sbb
mov
icebp
jecxz
dec
leave
das
enter
into
movsl
clc
je
inc
js
pop
mov
mov
cmp
mov
add
cmp
push
aam
pop
cmp
fmuls
jecxz
int
test
xchg
xor
icebp
movsb
and
aad
xor
loopne
daa
push
es
iret
pop
testb
jge
rcrl
mov
push
loope
and
lds
add
mov
pop
movsl
cmp
mov
bound
push
popa
inc
mov
ret
sti
inc
imul
out
xchg
js,pn
and
sbb
sbb
inc
movsb
jne
mov
ret
outsl
adc
add
std
xchg
jne
dec
and
dec
dec
aad
mov
sub
mov
xor
in
and
mov
pusha
mov
insl
je
cli
call
cmp
movsl
cmp
xchg
movsb
call
std
push
pop
sub
je
aaa
and
incl
ficomps
stos
fcompl
xchg
adc
mov
sbb
lods
mov
fcmove
push
adc
xor
and
push
xchg
push
popa
push
cs
and
xchg
lea
pop
ret
mov
xchg
push
stos
mov
push
cs
sbb
aad
gs
mov
push
iret
add
and
inc
sahf
cmc
icebp
lods
adc
fmul
decl
xchg
in
push
test
push
out
ds
sub
iret
pop
adc
push
mov
lock
or
repnz
nop
add
push
cs
movsl
test
dec
xchg
test
dec
imul
cmp
jne
cltd
js
enter
clc
xchg
jne
out
enter
xchg
imul
sbb
sub
or
pusha
out
mov
testb
xlat
repz
push
outsl
cmp
test
mov
nop
add
out
sti
jmp
pop
out
std
adc
mov
push
fldl
rcll
pop
cltd
dec
not
jo
push
and
xchg
das
in
daa
js
lds
add
fidivs
xchg
xor
push
xchg
pop
movsl
test
cmp
fisubrs
aam
fisttpll
lcall
push
sub
or
push
adc
inc
hlt
mov
stos
push
ss
mov
call
pop
sbb
mov
arpl
pop
xchg
mov
pop
jmp
test
inc
mov
mov
xchg
xlat
mov
ja
std
test
adc
shlb
icebp
jbe
and
or
lea
repz
xor
repnz
xchg
sbb
dec
movsb
pop
ret
and
cwtl
cltd
cmc
in
fwait
les
ljmp
inc
and
jge
in
cmpsb
cmc
or
xor
sbb
mov
out
add
push
and
xchg
enter
push
mov
cmp
and
int
test
bnd
and
push
fwait
inc
iret
mov
in
dec
iret
jecxz
or
ret
popa
mov
xchg
mov
es
in
test
dec
dec
sti
imul
mov
repz
inc
jp
cld
fadds
or
mov
scas
imul
mov
push
or
add
push
mov
push
cmpsl
jp
sub
scas
inc
hlt
in
mov
xor
and
ficoms
fdivr
fldt
gs
fsubrp
mov
das
scas
push
sbb
imul
mov
mov
scas
or
push
outsl
dec
mov
jno
cld
mov
shrl
aas
daa
jg
ljmp
mov
cmp
mov
mov
inc
sbb
adc
idivb
in
inc
cwtl
cmp
cmpsl
xchg
jle
das
add
iret
lods
jno
push
push
iret
push
dec
cld
cmp
adc
push
dec
mov
imul
add
repnz
and
push
repz
stos
and
pop
mov
cwtl
out
cmpsl
call
mov
xor
test
sbb
cli
adc
sub
jp
cwtl
mov
xor
lcall
mov
mov
fwait
push
imul
and
push
popf
es
inc
pop
mov
lret
sub
out
js
ret
aas
push
iret
pop
ret
push
nop
in
mov
adc
adc
out
lods
pop
outsb
dec
pop
jmp
mov
mov
fcmovb
daa
mov
push
testl
cwtl
shlb
ds
adc
push
inc
and
jmp
nop
cmp
jge
jbe
or
mov
jmp
insl
xchg
mov
in
pop
jae
cwtl
movsb
push
test
stc
shrl
adc
imul
jp
ja
dec
push
mov
jg
xchg
and
out
add
rorb
cld
mov
movsb
mov
pop
mov
inc
xchg
test
leave
sub
mov
or
int3
mov
scas
pop
sbb
mov
lods
das
in
ret
jle
jb
loope
xor
clc
and
test
stos
add
push
push
aad
add
xchg
xor
icebp
mov
loope
mov
icebp
mov
adc
jbe
mov
jg
fldl2t
loopne
mov
neg
mov
adc
in
test
in
sbb
cmp
dec
inc
icebp
sub
hlt
arpl
subl
movsl
js
push
fisttpll
ret
push
jmp
push
in
or
inc
repz
data16
inc
int3
mov
dec
mov
rcl
add
jns
xchg
ret
sbb
xchg
lret
out
mov
adc
pop
iret
dec
imul
jmp
mov
shlb
push
pop
scas
cmp
cmc
sbb
xchg
xor
mov
rcrl
bswap
pop
pusha
negl
insb
xchg
cmp
nop
mov
sbbb
mov
mov
push
popf
int3
enter
xor
jns
jge
shrb
sub
scas
dec
inc
xor
mov
icebp
hlt
inc
push
sub
mov
sub
cwtl
mov
in
jbe
int3
or
push
pop
or
arpl
push
test
shrb
outsl
test
ret
fstpt
and
xchg
test
xor
inc
in
inc
sbb
mov
in
jae
push
mov
xor
and
flds
add
loop
test
or
mov
icebp
hlt
mov
pop
scas
les
aam
xchg
imul
adc
xchg
push
movsl
ret
addr16
aad
lret
xchg
xor
cmp
dec
sbb
adc
int
mov
cltd
sar
adc
mov
or
sbbl
sub
je
dec
arpl
cmpsl
in
cmpsb
jge
out
sbbb
mov
lahf
mov
cli
mov
lds
dec
arpl
jmp
loop
movsb
loopne
sti
shrb
hlt
les
ffree
dec
mov
lock
xchg
xchg
push
sbb
repnz
lahf
or
mov
aad
shrb
push
mov
repnz
sub
inc
sar
ds
lret
mov
hlt
ja
stos
sbb
sbb
jge
push
clc
sub
pop
shll
out
push
loop
in
adc
xchg
fimuls
loop
loop
sbb
andl
lret
xchg
xor
sub
pop
fidivrs
notb
pop
testb
into
popa
shrl
pop
jo
call
hlt
arpl
ljmp
mov
lods
lods
adc
popf
call
inc
jmp
ja
push
jnp
aam
sub
sbb
inc
dec
lds
clc
sbb
shrb
dec
mov
lahf
fsts
xchg
bound
xor
jg
pop
lret
pop
popf
sbb
jl
push
in
outsb
mov
mov
out
xor
xor
inc
jecxz
das
inc
pop
popf
shr
call
mov
test
push
pushf
shrb
cmp
jno
lea
jne
cmp
in
into
pop
adc
insb
scas
mov
mov
imul
inc
push
jo
pop
fimuls
enter
gs
push
fmuls
ds
mov
bound
mov
pminsw
inc
fldl
adc
mov
stos
notl
lods
fdivrl
ja
jl
jae
scas
movsb
pop
mov
dec
xor
xor
add
fbld
in
in
and
push
or
cmp
mov
test
aam
fildll
rol
loope
repnz
jmp
push
mov
add
pop
cmp
shll
mov
push
jno
lock
lods
in
cmp
insb
sbb
adc
dec
pop
push
aam
fidivl
xorl
mov
fcoms
in
cli
mov
or
imulb
insl
adc
das
rcrb
arpl
add
add
mov
ret
cmp
clc
adc
or
cmpsl
cmp
jmp
into
faddl
in
std
cli
xchg
in
lcall
shr
imul
ficoms
rolb
or
push
mov
divl
repz
cmc
pop
cmp
inc
mov
hlt
inc
out
jo
pop
inc
dec
and
sub
xor
sbb
test
xchg
loop
ja
fsubs
jo
mov
and
push
cs
pop
je
pop
std
je
sbb
xchg
adc
lahf
aas
imull
out
inc
push
jle
inc
cmpb
arpl
pop
sti
mov
xor
and
dec
pop
mov
movhps
ret
sbb
test
fwait
gs
adc
shll
jl
add
mov
lock
push
add
hlt
dec
and
jnp
inc
pop
ret
mov
xchg
mov
popl
cli
std
ds
pop
jecxz
lods
rorl
pop
insb
sub
pop
imul
adc
es
add
pop
loope
in
add
jg
add
in
add
mov
ljmp
call
loop
push
scas
pop
icebp
and
fucom
lahf
add
push
fsubrl
shrl
inc
rol
xor
rolb
testb
addr16
jne
incl
xchg
pop
scas
jecxz
push
inc
in
int
and
out
mov
mov
in
pop
mov
xchg
dec
call
xchg
out
mov
clc
or
jl
xchg
sub
inc
dec
mov
fldcw
stc
push
sub
fwait
push
fstl
fs
aaa
mov
jb
jne
lcall
or
icebp
pop
mov
mov
test
sub
adc
sbbb
inc
sti
lea
shlb
or
cli
imul
ror
cli
jb
out
sub
xchg
jge
dec
lea
mov
lret
or
das
push
mov
ror
or
sbb
dec
sub
inc
fidivrl
inc
cmp
pop
mov
pop
or
std
jo
jecxz
add
std
dec
push
repz
movsl
cld
nop
outsb
ds
inc
or
insl
sarl
sub
leave
mov
mov
lcall
mov
stos
ljmp
out
push
pop
or
push
jo
dec
int
pop
mov
jmp
sbbl
es
dec
cmp
lahf
scas
jmp
lock
ds
xchg
mov
sub
int3
in
hlt
xchg
mov
into
xorl
loopne
testb
push
pop
insb
adc
pop
insb
jae
testl
data16
cmp
pop
nop/reserved
in
cmp
cs
filds
and
test
pop
repz
movsb
sub
dec
add
sbb
xor
adc
adcl
cltd
shlb
xchg
add
mov
jmp
jne
mov
sub
das
inc
pop
jo
lds
cmpsl
shll
cwtl
subb
scas
mov
sti
xchg
push
add
insb
xor
pop
or
scas
push
daa
js
fwait
pop
adc
or
dec
cmp
icebp
fnstsw
inc
and
loop
ds
inc
arpl
dec
cmp
out
jno
aam
xchg
aam
inc
push
mov
adc
fsubrl
cmp
lret
inc
mov
mov
push
push
add
add
out
or
dec
dec
mov
cli
jns
fisubs
in
imul
jle
out
cmp
pop
mov
cltd
outsl
orl
movsb
out
sub
dec
fistpl
arpl
ret
mov
jb
rorl
xchg
pop
sub
ret
mov
int
jns
cwtl
sub
mov
movsb
push
mov
and
divb
push
sub
mov
testb
push
stos
daa
and
or
sbbb
in
mov
hlt
addr16
mov
jle
jns
sub
idivl
mov
xchg
or
adc
cmp
add
add
loope,pt
jge
sbb
imul
xchg
mov
xchg
sbb
in
mov
cs
pop
imul
push
lods
jmp
cmpsl
or
jnp
sbb
xor
mov
pop
cmpsb
pop
mov
jb
lahf
push
xor
popf
mov
pop
adcb
push
mov
insb
sbb
pop
ret
addl
ljmp
xchg
mov
mov
jbe
neg
aaa
mov
into
push
inc
popa
jb
rcrl
lea
xchg
divl
stos
notb
fnstenv
call
shr
jmp
mov
loope
mov
xor
dec
mov
dec
loop
xchg
dec
fs
mov
add
xchg
or
lcall
pop
jnp
imul
lock
insl
sbb
dec
sbb
cld
andl
rcrb
xchg
outsl
aad
pop
fsubr
mull
xchg
and
fsts
xchg
into
mov
adc
sbb
fisubrs
pop
inc
lods
subl
sbb
fidivrl
jns
jg
mov
adc
out
inc
fs
in
xor
stos
cmp
jp
cmp
push
popf
daa
shrb
sub
mov
lcall
pop
adc
mov
lds
lock
loopne
mov
xchg
outsb
stc
into
and
xor
out
inc
mov
daa
xchg
push
and
stc
inc
push
lods
mov
loope
insb
mov
jnp
mov
leave
daa
out
inc
push
dec
adc
lods
xchg
push
jb
adc
sub
inc
fdivr
sub
pop
dec
imul
pop
aaa
and
xor
out
mov
out
mov
lret
jmp
push
sahf
test
divl
into
xchg
test
mov
arpl
add
inc
jns
xchg
mov
cli
xor
dec
gs
or
pop
push
xor
push
add
sarb
pop
add
aad
sbb
mov
sbb
fisttpl
roll
and
pop
leave
adc
mov
cli
and
aad
and
cwtl
xchg
xor
js
cld
loopne
test
out
adc
xor
lds
mov
lret
mov
shll
in
mov
cmp
mov
adc
ljmp
xor
ficompl
mov
mov
sbb
push
rorl
xlat
lds
mov
dec
push
mov
inc
test
cmp
mov
mov
or
sbb
int
jge
ljmp
dec
pushf
outsl
adc
pop
cmp
repnz
cmp
jne
sub
and
mov
mov
sub
add
repz
jno
xchg
inc
mov
add
inc
fisttpl
pop
insl
fdivs
fldcw
jmp
mov
dec
sub
sub
mov
cmpsb
lods
mov
push
lret
push
sub
add
inc
movd
ja
repnz
lods
sti
rcr
sub
les
inc
lret
and
jge
lods
mov
adc
pop
repnz
pop
jb
outsb
into
push
loopne
in
test
xchg
xchg
stos
test
decb
and
movsl
mov
jle
ja
jne
dec
jns
and
dec
cwtl
stos
dec
cmp
int
lock
test
adc
roll
fcomps
xor
aaa
jno
xor
gs
mov
sub
mov
leave
fnstcw
mov
and
daa
in
subb
in
shll
sub
test
cs
sahf
imul
cmpsl
jecxz
and
dec
cmpsb
nop
push
push
outsl
mov
test
leave
or
cmp
xchg
repnz
xlat
mov
and
roll
int
xlat
add
or
fs
addr16
test
std
movsl
stos
in
int
adc
out
lcall
popa
xor
jecxz
add
mov
fwait
sti
xor
jecxz
cmp
scas
movsl
repz
addr16
pop
jb
jle
mov
in
inc
or
pop
cmp
int3
mov
mov
popf
push
fisubl
mov
ljmp
stos
add
fstps
mov
jle
bound
cmc
jb
pop
test
stos
and
aam
jns
or
push
or
and
fdivr
sub
imul
adc
jno
cmp
xchg
adc
dec
cmpsl
icebp
test
out
sub
dec
dec
mov
les
push
and
jno
xchg
mov
sarl
jbe
das
dec
inc
mov
or
sub
mov
mov
xchg
rorb
push
push
and
daa
loop
out
int
scas
jns
sbb
call
shll
pop
stos
cmp
ret
hlt
push
fistpll
jo
into
fmull
and
pop
cmp
pop
push
fcomps
dec
pop
dec
enter
rcrl
and
push
push
lret
ja
pop
sar
popf
aad
xor
js
xor
mov
ds
mov
movl
dec
ror
jg
mov
test
enter
sub
jle
mov
into
jne
jg
rol
movsl
sbb
ret
mov
inc
push
fsubrl
gs
push
xchg
call
pop
xlat
xchg
add
scas
shrb
sahf
pop
insb
sti
stos
lock
pop
xchg
sbb
lcall
gs
jo
decb
and
push
adc
jle
mov
leave
jb
sub
shrb
in
sub
lods
fdivr
ds
pop
xor
fildl
insb
add
imull
and
divl
mov
mov
or
scas
sub
out
rcl
xchg
cmp
fiaddl
add
imul
cmpsb
sub
loop
xchg
mov
mov
test
shrb
jge
or
pop
shr
lcall
loopne
rcl
rcr
inc
testb
jl
fldcw
mov
jo
fcoml
ja
fs
xchg
push
gs
jp
jl
das
jo
mov
sbbb
add
loope
arpl
mov
leave
bound
in
dec
pop
sbb
mov
into
mov
call
lods
inc
inc
sbb
pop
or
lret
xor
jge
jmp
popf
inc
scas
cmpsb
cmp
push
push
pop
mov
jp
lahf
push
inc
cwtl
lock
es
or
lods
in
movsb
aaa
jb
xor
cmpsl
popf
lret
dec
lods
inc
jg
jle
jne
push
mov
cmpl
mov
push
ret
inc
and
fmulp
add
fisttpll
jb
pop
lods
mov
sahf
and
out
sbb
idiv
inc
imul
mov
call
icebp
pmaxsw
fistps
aam
shll
out
in
inc
mov
in
mov
repz
in
negb
jbe
sbb
int
into
jl
iret
jle
xchg
pop
jb
cs
clc
ds
push
push
xchg
inc
lods
sbb
push
je
jecxz
mov
enter
call
push
iret
sbb
test
and
adc
stos
push
jg
test
jmp
push
dec
jg
pop
testl
lea
iret
sbb
xchg
stos
mov
jb
in
ret
lods
adc
mov
gs
imul
xchg
int3
cmp
sub
cmovs
insb
push
sbb
push
fisttpl
mov
xchg
js
outsl
add
push
loopne
fwait
imul
dec
mov
testl
je
mov
adc
hlt
mov
lea
add
gs
mov
test
mov
add
pop
lods
pop
adc
lods
mov
pop
push
sub
ficomps
dec
hlt
push
out
sbb
outsb
rol
lret
and
shlb
shrb
cmpsb
xorl
jmp
dec
gs
int3
repz
jae
sub
mov
outsl
inc
aam
mov
push
lahf
out
insb
adc
int3
inc
fnstcw
outsb
fld
sbb
jno
out
cmp
push
scas
cmp
andb
xchg
mov
xchg
ret
ret
fwait
and
sbb
mov
aam
mov
pop
cltd
sub
clc
std
int3
lahf
lods
into
mov
xlat
sarl
repnz
jo
rorb
hlt
mov
mov
sub
leave
lock
inc
loopne
popf
dec
dec
std
insb
mov
test
xlat
cltd
pop
mov
popf
data16
push
in
cld
dec
loopne
inc
cmp
mov
roll
pushf
push
pop
iret
jae
loop
popf
xchg
adc
pop
pop
pop
cmp
repnz
jne
rcrb
inc
push
scas
dec
daa
outsl
jbe
push
js
je
jns
mov
mov
inc
pop
fsts
adc
daa
inc
fldenv
popf
mov
stos
rol
dec
loop
icebp
mov
mov
mov
push
out
stos
popf
ficoms
cs
inc
dec
pusha
sti
inc
sub
popa
andb
outsb
push
or
sub
xchg
push
cmp
cld
add
xchg
sbb
aad
push
cmp
push
lret
ret
out
mov
pop
jno
add
je
gs
mov
inc
dec
dec
lods
orl
fnstsw
addr16
bound
xor
adc
xchg
sbb
movsl
or
push
cmp
inc
ds
add
leave
std
lret
adcl
jp
arpl
dec
and
jo
inc
xlat
or
or
arpl
cs
test
shll
sub
pop
ds
add
push
inc
xchg
mov
mov
popf
jno
rclb
in
mov
decl
jmp
mov
insb
push
cmpsl
sbb
pop
xor
stos
sti
push
push
push
cmc
dec
inc
mov
bound
mov
inc
push
cmpsb
nop
mov
je
and
cmp
pop
xchg
add
xor
inc
push
mov
pop
or
mov
fisubrs
sbb
pop
nop
ret
loope
ret
mov
jl
aaa
or
roll
lcall
stc
jecxz
cmp
inc
pusha
cltd
xchg
dec
push
push
test
pop
cmp
xchg
sbb
aaa
ds
popf
ja
rcrl
inc
adc
ljmp
xchg
daa
sbb
mov
iret
icebp
sbb
mov
cmp
movd
pop
adc
jp
loope
adc
enter
lcall
js
stc
mov
mov
test
sbb
in
mov
and
inc
xchg
mov
andl
sarb
adc
loope
andb
dec
and
sub
aam
in
xor
aad
pop
out
cmp
pop
fcomi
or
pop
dec
cs
and
in
adc
cmp
pop
mov
adc
mov
test
loopne
or
adc
in
xchg
nop
scas
mov
sub
add
inc
scas
or
inc
js
bts
mulb
mov
mov
mov
dec
pop
aaa
hlt
mov
mov
dec
or
cmp
lcall
xchg
out
lods
push
shr
push
ja
adc
pop
sbb
sbb
out
popf
lods
or
mov
push
lock
dec
and
fstpl
jae
add
scas
xchg
jp
shlb
movswl
push
pop
cmpl
or
arpl
jecxz
pushf
sbb
repz
and
mov
mov
xchg
loop
sbb
loop
mov
push
icebp
mov
and
and
or
ja
daa
mov
lret
mov
xlat
fistpl
in
sarl
jmp
rolb
mov
sbb
or
pop
cmp
cmp
int
mov
fistpl
test
mov
imul
mov
dec
addr16
xor
jbe
stos
inc
mov
orl
ret
fsubrs
orb
fisubrl
fdivp
shl
sbb
dec
push
xor
or
xchg
xchg
daa
xchg
and
mov
add
cmp
cmpsl
cmp
addr16
sub
pusha
pop
popa
out
or
add
adc
clc
jl
mov
push
mov
ja
push
sub
and
mov
mov
scas
xor
or
jne
outsb
add
faddl
sti
in
cmp
loop
stos
es
pop
mov
sbb
mov
xor
jle
jge
add
jle
dec
mov
xchg
mov
dec
xorb
pop
fdivr
xchg
loop
fs
int3
movsl
call
jmp
xor
or
sbb
push
inc
and
cmc
xor
mov
jo
jg
scas
jb
gs
push
int3
jg
xlat
and
xor
xchg
push
lods
mov
push
lret
lahf
out
push
jo
mov
je
jmp
int
orb
sbb
mov
xchg
jecxz
jbe
mov
out
out
sti
pop
add
cltd
test
pusha
push
jmp
xorb
insb
or
aaa
mov
xchg
test
inc
dec
xlat
hlt
mov
ret
dec
dec
inc
loop
xor
out
dec
xchg
aam
jecxz
mov
pop
mov
xchg
jmp
es
andb
sub
testb
sub
jmp
adc
mov
outsb
jbe
mov
inc
sub
push
xor
in
xchg
rcrl
sub
inc
or
imul
push
in
ret
out
imul
movsb
xor
or
lret
fdivrs
sbb
push
cmpsl
jecxz
orb
ret
cltd
test
es
fadds
sub
aad
sti
xchg
push
jge
repnz
ja
roll
dec
js
lds
in
dec
rorl
and
mov
leave
into
pop
or
divb
xlat
outsl
push
repz
add
mov
adc
fdiv
ds
or
mov
or
or
nop
dec
push
adc
movsb
xorl
push
bnd
mov
add
mov
fstpt
call
xchg
mov
es
add
xchg
xor
sbbb
xchg
jb
andb
out
ret
les
mov
xor
sti
push
mov
or
and
pop
push
in
adc
negl
mov
call
lcall
jno
push
jno
push
cld
call
es
push
push
orl
sub
scas
sbb
push
sbb
test
movsl
insb
push
jns
push
insb
outsb
jnp
punpckhwd
aas
add
out
insl
ret
sub
sbb
mov
cli
gs
cmc
cwtl
pop
dec
aas
adc
and
cli
repz
ds
mov
mov
sub
and
ja
pop
pop
jmp
adc
mov
jecxz
inc
lcall
scas
lret
mov
sbb
and
mov
jle
jle
cmpsl
xor
lahf
jg
adc
fists
push
jmp
cmp
cmp
push
je
shrb
adc
in
jp
cmpsl
or
cmp
add
push
push
outsb
add
cmpsb
sbb
adc
push
mov
jne
push
mov
test
pop
hlt
out
scas
mov
repnz
jo
add
jbe
jl
test
jmp
mov
cmpb
fwait
pushf
mov
jnp
gs
in
add
lock
dec
add
lcall
sub
ret
rcrb
xchg
mov
cmp
inc
sub
es
xor
inc
jae
outsb
insl
xchg
in
ja
or
aas
aaa
cmp
loopne
cwtl
hlt
mov
add
leave
mov
jp
push
int3
fisttpll
fiadds
adc
outsl
jns
mov
cmp
cmp
decl
hlt
jmp
xor
in
push
lock
xchg
push
loope
out
rcrl
test
jnp
jecxz
mov
jns
jp
enter
pop
insl
sub
sbb
push
in
pop
mov
inc
push
mov
fs
in
movsl
inc
jmp
mov
movsl
gs
test
xchg
push
mov
jno
bound
ja
loopne
daa
jge,pt
jecxz
shll
mov
inc
jg
push
lea
js
aas
ret
push
pop
mov
push
test
adc
ja
push
sbb
jg
sub
in
mov
jle
insb
das
es
push
iret
xchg
scas
dec
sub
out
sub
daa
sbb
jmp
out
mov
sbb
mov
add
inc
lods
shlb
rep
pop
test
in
jge
rcll
pop
pop
clc
dec
loopne
push
lds
mov
push
sbb
mov
adc
lds
enter
aad
jge
sahf
jno
jp
cltd
sub
fmull
xchg
push
arpl
enter
jbe
sub
jb
popf
aaa
cld
xor
dec
jecxz
test
mov
push
in
mov
shlb
clc
or
rcl
hlt
sysexit
std
cltd
cld
lods
mov
pushl
sbb
jnp
cli
inc
jle
out
mov
call
xchg
adc
sbb
test
inc
jecxz
lret
loopne
dec
push
aam
push
sub
push
cwtl
divl
xor
dec
push
out
pop
adc
daa
mov
and
fadds
cmpsb
pop
mov
cmpb
push
imul
ss
in
mov
loop
jmp
xchg
mov
sbb
xchg
adc
addr16
or
jbe
push
arpl
sbb
lea
aad
cmp
sbb
jle
push
sub
pusha
mov
sub
into
mov
arpl
bndldx
mov
data16
aam
nop
push
js
shrl
je
stc
inc
jle
cmp
out
jns
cmc
jb
add
or
dec
push
jg
mov
jg
lods
push
inc
lods
inc
jne
outsl
jnp
pop
popf
lods
dec
pop
mov
adc
lret
gs
out
inc
mov
add
lcall
rorb
lret
mov
or
pop
inc
lahf
movsl
sub
jecxz
ss
rcrl
mov
xor
loop
jle
push
cmpsb
cmp
pop
stc
popf
push
cmpsb
pop
out
sarl
inc
inc
sub
insb
fcomip
ror
xchg
mov
pop
lahf
jno
shlb
inc
sahf
and
js
mov
cld
out
push
xchg
call
ljmp
ds
ss
out
lock
movsl
mov
inc
lret
jae
jnp
fsubrl
icebp
insb
mov
push
add
lret
jp
lods
mov
dec
fnstcw
fdivr
adcb
cmp
push
jecxz
lods
xchg
fwait
or
mulb
daa
insb
xor
push
xchg
lea
jbe
pop
lods
push
scas
pop
test
add
sbb
ds
daa
movsb
add
fstp
jge
iret
push
xor
mov
jmp
push
cltd
orl
and
adc
mov
push
dec
add
xor
std
fstps
popf
scas
xor
push
loop
std
cltd
push
mov
cltd
test
fadd
out
les
ss
inc
and
imulb
pop
orb
in
lds
lahf
pop
xor
fisubs
shll
lds
orb
nop
imul
xchg
sub
jae
inc
in
fstpt
int
push
jne
repz
xchg
pop
mov
testb
cmp
loopne
xor
sti
movaps
test
or
scas
jg
sub
jge
xchg
pop
stos
cmp
popl
popf
mov
push
and
lods
jmp
adc
jl
dec
fbstp
xor
rol
dec
repz
xsha1
cmpsb
mov
loop
and
mov
push
scas
iret
push
mov
fcompl
mov
jae
fwait
sub
and
int
out
ja
cmpsl
dec
dec
mov
mov
pop
or
cmp
and
filds
daa
arpl
pushf
daa
cmpsl
insl
imul
mov
push
jge
arpl
sarb
cmpsb
scas
cld
jae
or
ljmp
lcall
jecxz
loopne
nop
xchg
mov
imul
jne
filds
hlt
adc
xchg
xchg
jo
adc
pusha
andb
pop
repz
push
cmp
add
test
dec
mov
fdivrs
ret
out
hlt
pop
sub
xor
aad
call
sub
pop
jle
cmp
hlt
adc
inc
sbb
jmp
mov
xchg
or
popa
mov
push
nop
roll
mov
ret
jns
pop
sub
push
incb
js
inc
xor
and
mov
sti
mov
mov
aaa
pusha
out
mov
addr16
xchg
push
push
hlt
jno
xor
adc
adc
mov
arpl
into
or
lods
sahf
push
ja
sbb
addr16
insl
mov
push
repz
rcl
xchg
mov
call
mov
mov
xchg
and
pop
sar
mov
cmp
mov
pushl
cwtl
jmp
pushf
mov
imul
loop
in
inc
je
aaa
jg
sub
pop
call
out
xchg
lock
xchg
out
adc
stos
test
dec
lret
in
lds
mov
sbb
test
iret
mov
rol
cmp
mov
cmovge
jle
pusha
xor
adc
push
push
add
clc
sahf
sbb
mov
in
jg
fnstsw
out
push
int
dec
mov
lret
sub
mov
loop
and
mov
sbb
pop
xor
mov
lds
pushf
adc
sub
js
fdivl
dec
roll
cmp
insl
or
shrb
fistpll
mov
bound
inc
aam
mov
ret
jge
push
adc
jl
rcrb
mov
scas
adc
push
mov
cmp
add
dec
mov
addr16
lcall
adc
ss
or
div
dec
lock
push
scas
inc
xchg
loop
iret
testl
cmp
jmp
mov
mov
pop
movsb
cmp
sbb
push
sub
mov
shll
fcmovne
add
jae
mov
iret
lods
sarl
insb
pop
outsl
cbtw
mov
arpl
pop
jbe
jb
xchg
data16
jns
je
xor
jmp
insl
and
std
repnz
adc
js
push
lock
movsl
xor
mov
dec
loopne
data16
loope
rolb
shll
pop
jmp
lahf
and
aad
jno
in
xchg
adc
jne
or
and
popa
addl
das
xor
fsubrs
dec
mov
mov
aas
sub
fsubs
pop
jbe
jno
in
jmp
rolb
lret
pushf
pop
cmp
cmp
adc
les
aad
inc
int
mov
inc
add
dec
pop
leave
js
xor
push
inc
adc
data16
mov
call
orb
jle,pt
pop
sbb
push
and
test
inc
sub
jmp
test
lret
scas
xchg
subl
push
int3
rcll
arpl
movsl
xchg
adc
inc
and
push
cld
dec
sbbl
inc
pop
mov
xor
mov
fstpl
inc
push
mov
xlat
sarl
popa
add
push
pusha
mov
dec
push
pop
lahf
in
mov
dec
lea
cmp
sbb
fldl
or
mov
mov
xchg
ficoml
dec
std
jecxz
inc
lcall
jbe
inc
jnp
mov
pushf
adc
ret
shlb
mov
nop
daa
pop
jno
xchg
scas
mov
pusha
cmp
movsb
jbe
out
setnp
adc
jae
jae
pushf
xchg
cmp
jmp
mov
lahf
pusha
and
in
insb
pop
pushf
jg
jno
dec
stos
mov
and
mov
test
push
out
je
dec
rcl
pop
and
mov
insb
push
in
into
cmp
add
add
arpl
pop
ljmp
rclb
int3
pop
out
mov
or
mov
aam
adc
inc
enter
jb
jge
fdivs
adc
lods
sbb
xchg
scas
fbstp
pop
mov
dec
jmp
popf
xor
or
js
add
aad
fdivrp
push
xchg
ljmp
cmc
push
push
mov
sbb
ja
adc
jb
mov
mov
jae
mov
jle
int
pop
adc
sub
scas
sbb
aam
cmc
jp
mov
sbb
aam
push
adc
xchg
cmp
inc
cmc
mov
cmp
or
dec
popa
mov
call
enter
xor
mov
out
cli
and
test
mov
push
sub
lods
popf
stc
lret
rclb
lea
and
mov
push
inc
fiaddl
out
cmp
imul
mov
and
sub
inc
jmp
inc
imul
push
or
cmp
xor
into
push
ret
hlt
xor
cwtl
lcall
dec
jle
xor
dec
pop
mov
push
inc
dec
mov
ret
sbb
orl
adc
rep
sbb
or
adc
xchg
fildl
mov
fildl
and
mov
mov
stos
sbb
sbb
and
js
ljmp
jnp
int
clc
jns
ja
xchg
inc
adc
fwait
pop
dec
aad
movsl
out
loope
pop
jae
ret
mov
cmp
dec
icebp
push
mov
mov
into
push
pop
xor
popa
push
add
aaa
cmpb
inc
pop
sbb
and
stc
add
jmp
cmpsb
jecxz
inc
xor
xchg
jmp
aaa
push
sahf
dec
hlt
insl
ss
cmp
pop
negb
roll
jnp
fs
stos
arpl
mov
cld
call
adc
iret
hlt
jo
mov
leave
je
mov
in
mov
popa
add
ret
pop
call
or
xchg
jbe
std
mov
call
gs
daa
cli
inc
imul
dec
repz
xchg
mov
lret
mov
push
icebp
rcrb
cmp
jno
iret
data16
xchg
aam
mov
ror
fadds
mov
add
movsb
cmp
or
push
repnz
pop
mov
cmp
lods
inc
xchg
jecxz
or
cli
js
movsl
imul
shl
test
pushf
jecxz
pop
lods
fdivrs
adc
out
push
sarl
sbb
pop
adc
mov
sbb
jne
popf
jge
shlb
xchg
dec
dec
cmpl
sub
sub
fcompl
clc
call
cld
icebp
or
pop
inc
adc
test
inc
rcr
repz
aam
push
scas
xor
add
mov
xor
sbb
out
incb
xchg
aas
rol
fldt
das
popf
std
xchg
popf
jb
sub
out
fs
dec
ret
jp
push
outsl
data16
sbbl
sbb
out
into
loop
and
pop
stc
dec
xchg
inc
lds
roll
pusha
fs
xor
mov
mov
insb
add
jno
test
push
mov
push
push
mov
mov
ljmp
sub
xadd
int
mov
in
adc
popl
dec
mov
xchg
sbbl
sbb
jle
es
xchg
add
sbb
mov
xchg
xor
gs
sub
or
addr16
mov
cld
inc
aad
xor
and
push
sahf
bound
mov
inc
mov
adcb
jns
or
rorl
shr
and
dec
inc
in
mov
xchg
mov
test
fidivrl
fstpl
adc
xchg
jnp
std
and
pop
mov
sbb
ljmp
jns
xchg
cmp
pop
out
dec
push
sbb
push
ror
out
and
sti
stos
fcomip
shr
cs
sbb
stos
dec
das
push
loopne
adc
cltd
jle
adc
or
lahf
mov
push
fsub
and
stc
mov
insl
adc
xchg
add
xchg
je
dec
pop
repz
mov
test
inc
imul
mov
push
mov
mov
fwait
sti
push
out
mov
pop
jne
into
iret
call
into
fiadds
cmp
cmpsb
insb
mov
imul
jmp
adcb
test
ret
icebp
les
lret
aad
sub
xchg
jge
pushf
jg
sbb
ret
out
lods
inc
adcb
mov
xor
bound
xlat
mov
in
sub
mov
out
jmp
lock
or
pop
cmp
adc
lock
mov
cmc
ret
pop
out
jnp
lods
dec
data16
aam
sub
jb
jecxz
cmc
out
and
pushf
test
mov
aaa
dec
and
xor
add
movsb
cmp
jmp
dec
aas
or
repnz
in
add
add
dec
sub
xchg
test
jns
add
push
test
push
xchg
sahf
cmpsl
mov
int3
int
or
or
dec
pop
dec
test
repz
jb
outsl
out
jmp
in
dec
adc
cmp
insb
clc
or
adc
mov
pop
out
cmp
repnz
sbb
rcrl
mov
jb
jmp
mov
mov
popf
out
cli
flds
sbb
xor
pop
rcll
dec
aad
mov
mov
jmp
jecxz
arpl
inc
fstps
xchg
pusha
icebp
dec
ret
mov
adc
and
or
in
lcall
mov
xor
add
push
push
std
sub
xlat
sub
mov
outsl
es
cwtl
test
fwait
xor
std
sub
ds
push
sub
loop
ds
cmp
out
sbb
lahf
outsl
fcomi
ret
fidivl
push
sub
inc
lcall
inc
inc
test
inc
rol
jne
or
cmp
xchg
sub
es
xor
adc
pop
xchg
mov
pop
cmp
ss
popa
shl
push
pop
mov
and
cmc
xchg
mov
sahf
xor
ja
mov
push
popa
jno
jno
pop
loope
mov
mov
jb
out
cld
mov
add
insl
push
ss
cmpsl
push
movsl
test
lret
sti
and
repnz
jnp
or
das
clc
inc
push
xor
inc
push
lock
adc
data16
aam
pushf
cmp
jg
into
rorl
fs
pop
hlt
jge,pn
cmc
mov
push
mov
out
inc
xor
lea
sarb
mov
pop
ret
cmp
push
icebp
repz
and
or
sub
icebp
std
adc
jbe
xchg
jl
insl
shll
aad
jmp
inc
ret
sbb
mov
add
mov
testb
ret
loope
fxch
pop
test
cmpsl
cmp
cmpsb
lock
add
xchg
add
cmp
fadds
ret
loop
imul
mov
mov
dec
dec
shll
jecxz
es
add
pop
push
and
aas
pop
lods
add
add
into
and
enter
addr16
lea
or
loope
sbb
dec
mov
divl
sub
addr16
sbb
cmpsl
mov
inc
sub
testb
push
rolb
movsl
std
in
sti
push
xchg
decb
mov
stc
adc
std
mov
jl
mov
inc
adc
cmp
xchg
dec
fadds
xchg
pusha
int3
fbld
ret
sbb
xor
jp
stc
mov
shll
sub
pop
or
dec
nop
xchg
push
push
aam
ficomps
les
rorb
cmpsl
sbb
fcoms
cmp
inc
xlat
dec
pop
lea
sbb
jle
ss
ja
gs
ljmp
insb
cmpsl
int
and
out
pop
sahf
and
imul
iret
sahf
rcll
mov
xchg
inc
int
enter
out
sbb
cli
mov
es
mov
push
pusha
pop
lret
movsl
push
xor
movsb
or
aam
popf
xor
bound
and
imul
stc
mov
stc
or
xchg
dec
loope
loope
cwtl
fwait
stos
push
pop
stc
mov
mov
inc
xlat
scas
out
fs
xor
sbb
out
xchg
cld
push
jmp
pop
pop
testb
jge
ljmp
lret
cmp
insl
or
add
cmpsl
cmpsb
sahf
sarl
add
jl
add
push
lds
adc
les
mov
pop
or
push
mov
jle
shll
pop
ret
int3
pop
ljmp
push
push
jp
nop
in
cmpsl
cmpsb
xor
pop
rcrl
scas
mov
orb
mov
inc
pop
add
stc
je
adc
add
iret
gs
push
mov
insl
stos
loopne
popf
or
aaa
aaa
vpsubw
xor
mov
adc
jno
jg
in
or
pop
inc
push
sbb
and
pop
lahf
outsb
insb
inc
into
adc
dec
loopne
mov
into
xor
jle
icebp
gs
cmp
xchg
fadd
dec
adc
add
or
push
call
cmc
mov
dec
js
out
enter
xor
cmpsb
push
int3
mov
push
out
popa
mov
push
cmp
clc
int
pop
imulb
sbb
add
out
pop
sbb
and
mov
cmpsl
mov
xor
sbb
inc
je
or
mov
jg
or
mov
or
iret
jb
in
mov
jmp
dec
xchg
xchg
shrb
adc
lock
clc
movsl
ljmp
loope
sti
fs
ds
add
test
cmp
push
addr16
inc
loope
cmpl
push
test
mov
out
or
push
mov
imul
push
mov
mov
lret
push
lods
cld
xor
sbb
fbld
rcrb
jl
sbb
add
mov
pop
repnz
adc
shrl
je
xor
add
cld
xchg
add
cmp
cli
cmp
mov
dec
jbe
mov
add
mov
adc
out
mov
push
cltd
add
cmpsb
in
movsb
ret
pop
dec
insl
xor
push
mov
cwtl
ja
fcmovu
cmp
add
pop
jmp
out
mov
mov
pop
mov
int
adc
jo
cmovs
jp
jo
dec
jg
sbb
ljmp
mov
push
movsb
sarl
test
daa
inc
mov
dec
adc
aaa
sti
xchg
imul
sbb
pop
pushf
mov
jo
fisubrs
aas
js
popaw
fcomps
push
sbb
mov
pop
ds
adc
daa
lcallw
xor
aam
sub
out
mov
sahf
mov
sub
mov
mov
outsb
test
sbb
jae
testb
mov
mov
dec
gs
out
sbb
in
fisubl
cmc
lods
addl
and
test
dec
xchg
or
or
scas
adc
xchg
mov
sti
or
jmp
dec
lahf
mov
ror
pushf
insb
adc
add
andl
arpl
nop
call
sbb
xor
fs
adc
leave
sbb
push
inc
aad
sarl
arpl
cwtl
call
sbb
sub
aas
in
jno
jne
mov
mov
xor
fnsave
mov
pop
jp
add
push
in
ficomps
mov
add
push
inc
lods
inc
jb
add
push
insl
imul
jns
xchg
push
jle
nop
add
call
call
movsl
divl
push
cld
test
hlt
or
loope
adc
mov
jno
cmpsl
sub
iret
push
out
adc
je
xchg
das
mov
and
sti
cmp
jno
scas
jnp
frstor
sbb
xorl
mov
sub
xor
lds
sbb
xor
mov
mov
fdivl
lods
mov
call
mov
lahf
decb
fstl
fistpl
jmp
test
scas
add
scas
mov
popa
and
xchg
xchg
dec
insl
jb
pop
and
shr
sub
mov
sub
or
das
jns
mov
mov
pushf
lods
outsl
inc
movsl
aaa
cli
pop
je
xor
fs
cwtl
ret
adc
dec
data16
pop
hlt
add
push
jmp
dec
sub
or
sbb
lea
je
ss
fcmove
pop
dec
stos
mov
dec
data16
mov
das
mov
fisttpl
xor
add
inc
mov
xchg
xor
out
xor
jmp
sbbl
adc
lcall
xor
nop
sub
ret
fucomp
and
cmp
pop
mov
push
mov
mov
dec
inc
mov
xchg
stc
ret
and
jno
mov
clc
jl
or
mov
xchg
cmp
iret
inc
int
xchg
jl
ret
popa
cmp
push
pop
or
pop
mov
andb
cmpsl
mov
movsl
clc
pop
insl
sub
aas
xlat
std
int3
add
in
rclb
dec
sbb
pop
sub
push
jge
push
movsb
movsl
sub
inc
adc
inc
enter
inc
int3
rcll
push
dec
int
outsl
loop
gs
mov
push
dec
pop
jns
jecxz
push
jg
cmp
movsb
ret
dec
arpl
inc
icebp
mov
movsb
fisttps
or
sahf
out
add
xchg
pop
int
arpl
jns
jge
sbb
xor
in
push
mov
xor
divl
mov
stos
inc
data16
mov
mov
push
pop
add
cs
and
leave
pop
in
mov
mov
mov
outsb
add
mov
push
clc
xor
dec
jmp
mull
stos
call
loop
mov
int
sub
test
mov
dec
and
xor
inc
adc
std
dec
fwait
dec
lcall
mov
leave
push
jge
int
xor
decb
xor
dec
pop
sarb
loopne
ret
or
add
lahf
mov
and
add
scas
inc
cmpsb
pop
lods
sbb
push
aas
xor
push
xchg
mov
push
mov
ret
ja
inc
test
jno
into
adc
orl
add
shl
arpl
push
movsl
rorb
adc
stc
rcll
inc
fisttpl
cmp
lcall
das
push
int3
mov
and
fs
mov
jbe
sub
pop
lahf
inc
cltd
jmp
jnp
adc
test
mov
rcr
in
or
xor
push
imul
jge
mov
mov
cmc
mov
out
and
push
push
or
ret
shll
push
repz
incl
inc
fisubl
fidivrs
shrd
roll
cmp
fs
outsl
jl
stos
loopne
xchg
inc
pop
fstl
leave
inc
in
ret
pop
or
arpl
pop
cmp
out
mov
or
jae
push
imul
cmp
push
dec
cltd
xlat
orb
stos
mov
fwait
sub
in
mov
das
pop
rorb
or
inc
int3
pop
cli
push
call
es
nop
lods
lahf
movsl
mov
ljmp
jns
icebp
inc
lock
sub
push
mov
insl
mov
push
inc
sub
stos
pop
mov
pop
xchg
icebp
icebp
dec
scas
in
shl
out
inc
hlt
sbbl
int
rorl
pushf
iret
push
jmp
sbb
add
mov
jae
dec
and
xchg
jnp
cmc
mov
mov
ss
lret
bound
mov
and
jbe
jmp
pop
mov
mov
xchg
test
std
dec
test
dec
mov
jecxz
adc
sarb
mov
push
cmp
clc
js
push
shl
stos
push
pop
cmp
int3
shrl
or
sbb
mov
mov
sti
aad
mov
lret
cmpl
clc
es
movsl
xchg
lods
into
mov
out
push
add
sub
cltd
leave
ss
dec
repnz
lret
das
push
and
cmc
jmp
or
out
mov
xchg
ja
dec
insl
jp
add
cmc
push
push
aad
sbb
mov
push
jo
add
dec
orb
xchg
gs
xchg
enter
fistpll
addr16
jbe
int3
test
in
sub
push
jmp
inc
arpl
jne
jb
xchg
stos
andl
pushl
arpl
add
mov
mov
dec
mov
ds
ret
hlt
insl
mov
std
gs
mov
test
int
adc
incl
mov
sbb
and
and
mov
dec
and
and
stos
inc
pushf
in
imul
aad
mov
notl
stos
inc
and
out
out
std
test
cmp
jae
bound
mov
and
add
fsubl
mov
push
ss
inc
mov
add
lods
dec
outsb
mov
aad
jns
push
sbb
or
fimuls
cmc
inc
xlat
es
xchg
jle
push
mov
mov
andb
insb
shll
cmpsb
push
pop
mov
pop
xor
imul
outsb
add
xchg
push
inc
pop
ja
adc
psrad
ja
pop
add
cmp
xchg
cwtl
xchg
ss
jbe
arpl
xor
in
xchg
mov
push
aas
cmpsl
out
mov
cmp
gs
dec
mov
sbb
mov
test
mov
mov
adc
lods
fs
cmp
sub
mov
nop
in
inc
and
cmp
add
int3
leave
lahf
pop
cmpsb
sbb
mov
jge
and
nop
xlat
lods
cmpsl
ds
adc
es
stos
sbb
bnd
and
sarb
push
push
aam
mov
sbb
pop
mov
pushf
or
cmp
jmp
dec
jmp
mov
xor
in
or
shl
pop
push
inc
mov
lock
dec
dec
jge
lea
in
pop
js
jns
jl
cmp
std
mov
insl
mov
shll
jle
lret
jae
lahf
xor
jle
adc
cs
and
xchg
xor
xor
xor
neg
imul
lret
hlt
push
fstpt
out
mov
sbb
sub
insb
fisubrs
lea
mov
jno
jecxz
add
loope
xchg
mov
aad
xor
lods
or
iret
mov
or
rcrb
arpl
pop
hlt
out
cmp
hlt
mov
rcll
sbb
dec
inc
ljmp
inc
sub
scas
dec
mov
xor
repz
montmul
cmpsb
inc
decl
mov
push
loopne
fistpl
sbb
pop
ja
add
add
imul
mov
push
jmp
cmpsb
sbb
mov
ss
xchg
adc
push
mov
hlt
mov
loope
mov
mov
mov
popf
xchg
inc
lcall
and
aas
cmp
mov
xlat
jp
inc
xor
pop
loopne
adc
sub
fwait
lods
test
dec
lcall
or
adc
xchg
or
inc
popf
push
xor
mov
mov
lea
clc
mov
pop
jle
cmp
in
test
repz
movaps
or
dec
adc
or
outsb
jp
inc
cmpsb
sub
imul
mov
jle
ja
cmp
xchg
jl
push
xchg
push
adc
lods
test
in
jecxz
dec
inc
dec
dec
test
icebp
popf
out
and
cld
sbb
jne
cwtl
push
push
mov
in
aaa
mov
insl
jb
arpl
scas
nop
sbb
popa
fdivrs
sbbl
adc
mov
inc
sbb
test
out
out
pop
das
add
in
dec
movsl
xchg
insl
cmc
cld
ss
and
hlt
inc
inc
adc
mov
mov
jae
pop
rorb
les
jbe
and
xchg
enter
xor
xor
inc
cltd
movsb
and
inc
pusha
mov
mov
shr
inc
pop
into
orl
imul
fwait
xor
out
int3
sbb
stos
xchg
push
pop
adc
push
in
das
repz
sub
cltd
lods
mov
fbld
test
js
mov
out
adc
lds
mov
outsl
ljmp
insb
or
push
mov
fdivrs
xor
enter
pop
je
pop
out
push
xor
mov
and
push
or
push
insl
mov
bound
clc
xchg
jnp
stos
sbb
dec
out
dec
out
jno
call
cmc
xchg
bound
or
rorb
jg
out
cld
bnd
ret
pop
cmp
mov
and
dec
fisttps
lds
push
mov
mov
mov
aaa
mov
inc
mov
xlat
mov
lods
ljmp
pushf
jns
sti
in
sarb
nop
lds
add
nop
mov
pop
and
jge
das
pop
jns
popa
inc
and
add
mov
sbbb
mov
pop
fbstp
or
jl
mov
loop
das
cmp
pop
adc
fmuls
cmc
and
in
ja
cmc
fs
je
out
jns
stc
mov
xlat
jno
jg
or
mov
push
xor
pop
imul
lcall
in
pop
outsb
push
imul
and
daa
insl
jne
or
xor
xor
lods
mov
add
imul
jmp
jle
pop
pusha
cld
mov
icebp
adc
dec
loopne
arpl
or
inc
sbb
mov
gs
clc
shll
mov
push
push
nop
sub
cmpsl
jge
pop
call
scas
inc
sahf
jge
mulb
addb
in
loop
cltd
pop
dec
adcl
mov
es
mov
push
out
cmc
psubw
cmp
pushl
leave
in
and
fidivrs
lcall
pop
iret
in
shlb
add
xlat
dec
loop
ficompl
jne
jb
add
daa
subl
lcall
test
or
sbb
cmp
mov
dec
sbb
lcall
and
dec
jnp
fists
sub
dec
cmpsl
mov
outsb
push
lds
jecxz
and
push
jmp
call
es
or
ret
mov
fs
sbb
mov
data16
imul
jae
adc
insl
xchg
cmp
mov
push
lods
and
push
mov
ja
mov
and
xchg
sub
es
sub
inc
call
dec
test
cmpsb
mov
xchg
in
add
icebp
cmp
arpl
into
mov
inc
loop
ret
mov
sbb
out
scas
add
xor
push
pop
lea
or
adc
subl
repnz
jns
cmc
insl
and
inc
in
xchg
dec
jge
pop
test
sbb
movsl
mov
xor
or
xchg
fs
jae
lcall
mov
push
pop
jne
push
loopne
mov
and
inc
aas
add
mov
add
lods
aaa
jl
stos
fildl
push
sub
aam
into
fnstenv
int
cld
out
inc
mov
adc
ret
sbb
jp
jecxz
outsb
jp
dec
sbb
movsl
mov
pop
dec
jo
gs
xchg
roll
mov
or
in
repz
cs
cmp
xchg
add
push
add
mov
pop
adc
push
sarl
scas
push
pop
pushf
jae
into
push
cwtl
dec
lock
inc
jl
and
inc
mov
pop
dec
rcll
into
mov
jo
mov
xchg
ret
fistl
lods
xor
pop
lea
jle
xor
fnstenv
pop
add
inc
xor
sahf
mov
sbb
cmp
in
pop
jne
xor
aaa
cmp
mov
imul
adc
pop
decl
xchg
xchg
in
outsb
mov
sbb
xlat
mov
push
or
cmp
push
lsl
dec
lods
mov
xchg
scas
outsb
test
push
jae
lods
xchg
loopne
mov
sub
adc
sti
test
std
sbb
inc
inc
pop
in
push
add
dec
mov
xchg
outsl
inc
ja
lcall
pop
ret
mov
mov
fisttps
fildl
mov
cmp
sbb
inc
int3
and
daa
stos
jecxz
inc
scas
out
psubsb
xlat
repz
pop
push
push
adc
ljmp
push
xchg
dec
loope
jns
push
jne
test
scas
ret
xor
adc
inc
test
push
and
leave
fisubl
gs
pop
pop
iret
xor
in
inc
mov
cmp
mov
imul
sub
ret
pop
les
jg
fisubl
and
fstp
xor
add
movsl
jo
jge
add
pop
xchg
cwtl
mov
mov
pop
jg
mov
xchg
xchg
fwait
or
mov
stos
adcb
push
movsl
vxorps
rorb
and
in
xchg
std
daa
inc
pusha
movsb
mov
fmull
scas
gs
sub
or
icebp
leave
int
and
pop
cltd
lret
push
inc
js
sub
lret
mov
repz
loop
lods
dec
call
call
mov
pop
cs
push
testl
arpl
adc
mov
inc
movsb
pop
mov
adc
cld
repz
and
fcmovne
int3
jnp
fs
xchg
lods
lds
cmpb
stos
outsl
push
mov
mov
js
sbb
or
sbb
insb
pop
cmp
ja
dec
push
loopne
ret
out
popf
sti
and
jae
xchg
cmp
loope
sub
pop
or
nop
xor
cmp
xchg
xor
lods
mov
sub
lret
outsb
andl
enter
mov
mov
adc
or
pop
mov
mov
sub
jb
mov
or
fistpl
adc
and
mov
insb
test
push
push
cmc
dec
std
mov
or
lcall
dec
jmp
and
cmp
mov
mov
shld
stos
push
cmp
pop
add
sbb
mov
or
mov
pop
push
dec
pusha
rolb
pop
ss
loopne
ret
fstps
jne
mov
loop
ja
outsl
pop
add
fdivrl
sub
sbb
mov
mov
addr16
daa
inc
shll
cmpsb
push
mov
cmp
cli
loopne
sub
push
or
adcl
mov
repz
loope
mov
push
mov
sub
add
sub
fimuls
mov
stc
loop
inc
adc
std
test
dec
dec
test
xchg
and
aad
stos
sahf
push
sbb
pop
or
adc
enter
dec
push
aam
mov
mov
cwtl
rep
lds
fcoms
or
push
mov
cmp
aad
icebp
xor
fsubs
and
in
xor
mov
out
and
mov
in
decl
lods
sahf
stos
push
mov
insl
sub
clc
or
mov
jmp
xchg
fstp
inc
dec
aaa
imull
jecxz
push
aas
add
movl
rcrl
and
or
sahf
aad
out
dec
dec
dec
arpl
insb
mov
dec
mov
xchg
xchg
addr16
inc
xchg
push
dec
sbb
fistpl
sahf
std
dec
stc
mov
adc
pop
cwtl
mov
inc
cs
dec
movsb
out
inc
std
rorl
xor
std
jo
das
and
in
stc
fsubr
aaa
lahf
xchg
das
fwait
shll
scas
sahf
stos
ret
jle
cmp
cwtl
sbb
cli
ror
add
rclb
or
jns
subl
sahf
loopne
sahf
lcall
pop
jb
add
and
dec
fucom
xor
jmp
loope
test
xchg
je
rcll
imul
lea
lods
test
cs
je
push
std
push
negl
popf
mov
sub
divl
add
dec
test
mov
jnp
aad
adc
sahf
and
inc
lods
inc
mov
pop
mov
fisubrl
ss
lock
cmp
cmp
in
push
cmp
mov
adc
js
push
dec
pushf
test
and
inc
iret
movl
popf
mov
xchg
lcall
test
into
xor
mov
and
mov
insb
imul
aam
bound
push
jg
push
and
fcomi
data16
or
pop
imul
jl
dec
pop
lahf
ss
daa
mov
xlat
inc
sbb
das
cmp
mov
jp
mov
pop
cmp
call
sub
mov
inc
mov
popf
push
jl
mov
stc
into
sbb
fnstcw
jmp
test
mov
jae
jp
movsl
push
pop
jge
addr16
dec
jl
pop
out
enter
dec
pop
xor
shl
lea
cmp
ret
pop
adc
in
jno
add
in
and
and
pop
cmp
inc
fsub
sbb
sub
push
test
cmpsb
inc
mov
pop
cmp
mov
xchg
adc
rol
or
push
and
pop
ret
lods
xor
xor
pop
icebp
xorl
aas
push
pop
je
sub
bound
and
xchg
scas
xchg
push
jns
adc
icebp
movsl
sub
orl
in
jb
inc
xchg
sub
iret
je
add
jbe
jb
jno,pt
adc
sbb
cmp
shrb
cmp
daa
sbb
inc
mov
xchg
je
cmc
mov
pop
mov
aas
mov
sub
subb
pop
mov
inc
pop
lret
xor
std
push
jnp
in
dec
aaa
call
cmp
frstor
ret
imul
xor
les
in
shrl
pop
sbbb
add
mov
ret
add
in
cwtl
scas
out
mov
lcall
xor
int
xchg
in
stos
cltd
je
cmp
xchg
fdivl
add
dec
dec
test
push
push
add
sahf
cmp
sbb
jns
ret
aad
adc
mov
icebp
inc
push
ds
in
enter
pop
lret
jno
ret
fidivrl
lea
sub
mov
xor
push
rclb
cmc
mov
cmp
repnz
fldcw
repnz
call
jge
push
insb
add
lahf
lea
mov
jl
je
enter
imul
popf
or
mov
insl
mov
mov
bound
adc
clc
lret
mov
popf
jne
xor
pusha
ss
jmp
mov
in
mov
inc
cmp
pop
lods
xchg
pop
aad
icebp
adcb
clc
jle
shrl
jg
inc
shl
dec
adc
dec
cmp
cmp
pop
hlt
dec
cmpsl
add
pop
jmp
cmpsl
fs
insl
test
inc
sub
in
or
push
fcom
cmp
enter
add
dec
push
insl
inc
pop
xor
ud0
xchg
mov
mov
out
test
rcr
cwtl
xchg
xchg
fmul
stos
insl
inc
je
or
test
mov
push
mov
loopne
mov
stc
nop
inc
sub
std
clc
gs
scas
xchg
push
lret
xchg
cmp
jg
repnz
add
lcall
mov
dec
dec
pop
je
imul
mov
mov
cmp
stos
in
into
pop
out
decl
inc
sub
mov
pop
sbb
insl
and
jp
stos
mov
int3
outsl
jg
mov
sub
and
pop
arpl
std
jae
adc
or
dec
jo
lcall
inc
adc
mov
ret
sti
in
sti
sub
inc
xlat
popa
inc
or
xchg
adc
gs
inc
mov
sub
test
test
jnp
fdivrl
fldl
int
xor
out
jge
in
cwtl
mov
outsb
mov
sbb
push
repz
rolb
icebp
jne
ljmp
or
leave
xor
inc
sbb
mov
clc
test
out
or
and
cld
xchg
cld
or
icebp
add
jne
cmp
dec
dec
popa
loope
out
dec
in
or
xchg
or
jnp
jle
cmp
or
mov
lret
cmp
insl
sub
pop
xor
ret
shll
pop
xchg
out
mov
mov
mov
or
hlt
mov
repnz
out
add
insb
imul
pop
adc
shl
imul
test
cmp
idivl
cs
mov
fbstp
pop
mov
enter
pop
fidivrl
pop
fcmove
mov
aam
jmp
loope
int3
dec
loope
aas
movsl
jns
subb
clc
fsubs
clc
into
insl
push
insb
jb
inc
cmp
inc
gs
mov
in
imul
imulb
call
clc
inc
xchg
cli
mov
pop
ljmp
or
pushl
je
mov
cmp
jle
ret
test
rcl
jo
addr16
cwtl
out
adc
and
pop
push
fs
dec
mov
jo
enter
dec
adc
xlat
data16
lret
mov
push
sub
notb
mov
stc
insl
add
mov
lock
xchg
pop
inc
insl
pop
icebp
pop
jne
adc
mov
push
xor
mov
bound
mov
inc
int3
addl
insb
and
andl
popaw
pop
sub
jbe
pop
fcom
pop
push
inc
xlat
divl
push
mov
lcall
jnp
nop
mov
lcall
sbbl
loop
dec
aam
jb
lock
lahf
in
push
fdivl
xchg
xchg
and
aaa
dec
mov
inc
mov
sbb
outsb
sarb
cmp
lahf
in
inc
xor
imul
pop
cltd
sar
leave
xor
ret
xchg
jp
stc
mov
ret
push
loop
inc
leave
push
sbb
outsb
push
data16
pop
and
pop
mov
push
dec
sub
dec
arpl
jbe
or
pop
xchg
leave
cmp
sub
pop
dec
int3
dec
xor
rolb
lods
lea
jecxz
cmp
pop
dec
repz
int
shll
sarb
aad
inc
mov
popf
xor
cs
adc
out
jle
imul
adcl
arpl
pop
mov
clc
jnp
mov
std
or
leave
es
mov
loopne
jmp
jg
loopne
and
push
inc
ret
xchg
insb
es
sbb
ds
adcb
pop
lret
add
aaa
icebp
in
mov
cmpsl
popf
ficompl
mov
mov
loopne
pusha
lret
ficomps
ret
xchg
push
pop
pop
shlb
aad
call
out
jp
pusha
out
or
insb
xor
sbb
std
outsl
das
sbbb
dec
shll
and
inc
aas
hlt
lods
mov
ror
cmp
sti
sbb
dec
ja
je
add
cmp
jne
lahf
mov
push
fdivrl
insl
lods
jno
sbbl
push
mov
jl
pop
and
add
xor
and
in
push
cs
jmp
cmpsl
pop
xor
repz
add
mov
jmp
adc
push
or
inc
push
daa
stos
fidivl
into
xor
adc
xor
jecxz
mov
pop
dec
sbb
cld
into
bound
sbb
jge
xchg
imul
mov
mov
mov
jl
mov
cmpsb
lret
int
sahf
and
js
xchg
cs
lahf
and
lret
outsb
dec
xchg
cmpsl
call
fstpt
sti
lret
mov
or
pop
mov
sub
in
cmpsb
xor
cld
adcl
mov
pushf
pop
add
shrb
scas
push
mov
and
out
das
adc
or
insl
mov
xchg
add
pop
jmp
movsl
pop
xchg
jmp
jge
mov
inc
ljmp
mov
adc
pop
dec
and
inc
adc
mov
dec
mov
pop
hlt
iret
pop
fiaddl
test
cli
push
arpl
fdiv
inc
dec
push
sbb
je
push
das
popa
jnp
movsb
mov
mov
stc
insb
out
cmpsl
mov
jne
jns
pop
in
orl
scas
lock
or
shll
pop
sbb
jne
adc
test
add
stos
jno
sbb
and
enter
cmpsb
cmpsb
mov
pop
addr16
pop
or
inc
and
jnp
daa
mov
je
xchg
sub
xchg
adc
aad
add
cmp
mov
int
mov
jae
daa
push
lea
aam
test
push
rorl
and
push
inc
sbb
inc
push
sub
sub
and
jns
add
dec
dec
push
jg
jnp
shr
popa
fwait
push
xchg
test
mov
jge
jne
repz
push
adc
sbb
cmovo
xor
add
ds
sub
mov
lret
lret
mov
fistpl
adc
pop
mov
int
adc
push
out
hlt
mov
pandn
adc
push
lods
xchg
lock
rcrl
in
xchg
neg
loop
aaa
xchg
jbe
and
dec
scas
cmpsb
mov
lods
mull
mov
mov
repz
push
push
cltd
and
inc
fs
add
fsts
bound
popf
xor
call
mov
pushf
adcb
shll
es
push
or
loop
ja
pop
repz
push
ds
jmp
icebp
fsubrl
fwait
push
sbb
xchg
jne
lret
shl
ja
mov
aad
mov
mov
rorb
mov
jg
mov
inc
push
mov
fidivrl
fcomps
int3
push
imul
sbb
out
or
xchg
fldcw
or
dec
sub
jp
jmp
pop
in
or
add
dec
sub
outsl
lock
or
mov
push
cltd
xor
inc
sbb
nop
push
fisttpll
mov
popa
inc
ficoms
jo
popf
mov
mov
sbbl
ret
outsb
pop
bound
jl
shrl
movsl
rolb
pop
add
das
push
xor
shll
fs
jp
addr16
outsb
add
cmp
or
xchg
pop
xchg
xchg
mov
sub
sti
pop
sbb
jb
push
movsb
lods
rolb
loopne
or
add
adc
mov
add
sbb
in
dec
flds
into
ja
mov
lock
xchg
add
pop
xchg
in
mov
scas
add
in
inc
xchg
mov
lcall
jne
mov
adc
leave
mov
data16
iret
sub
popa
mov
lea
cmp
inc
vhaddpd
rdpmc
dec
push
test
sbb
mov
je
inc
fcoms
sbbl
add
or
cmpb
xchg
sbb
aaa
pop
add
xor
scas
orl
or
sub
push
cwtl
gs
int3
jb
add
mov
std
cmpsw
push
cltd
push
mov
dec
cltd
jo
jo
aad
dec
imul
dec
dec
sbb
lahf
aam
lea
adc
pushf
jo
xor
sbbl
dec
xchg
pushl
xor
nop
dec
movsl
mov
pop
sub
add
mov
mov
cltd
sub
mov
popa
pop
hlt
mov
cmp
push
incb
sbb
rclb
jl
push
inc
dec
sbb
fwait
aas
sbb
xchg
ja
out
call
aam
dec
mov
sub
mov
or
add
shrl
push
push
fiaddl
cld
mov
lds
mov
xchg
adc
inc
inc
idivb
push
hlt
lahf
fidivs
push
or
std
lret
adc
ret
push
dec
loope
cmc
and
fsubs
adc
adc
std
mov
jbe
pushf
int3
cwtl
jae
jae,pt
mov
and
pop
cltd
fs
xchg
adc
pop
data16
xchg
push
and
je
std
lds
mov
cmp
inc
int3
call
mov
ljmp
mov
pop
mov
decb
and
pop
mov
adc
fs
jle
sbb
dec
dec
fnstenv
aaa
mov
dec
pop
out
xlat
and
es
insl
out
cmp
mov
mov
xchg
jle
cwtl
sub
add
orb
filds
mov
push
cmc
xchg
add
fadds
xchg
cmp
mov
xchg
xchg
shl
xlat
jne
hlt
add
xor
or
adc
mov
pusha
cmpsb
repz
pop
jnp
int
js
or
popa
inc
push
stos
xchg
cmpsl
not
add
ljmp
aam
in
jns
pusha
or
add
es
negb
xlat
push
push
popa
pushf
ja
loope
jecxz
pop
rcll
cmp
mov
test
inc
insl
add
adc
push
inc
cwtl
lea
loope
mov
inc
mov
pop
std
xchg
aas
push
sahf
xchg
adc
adc
rcl
in
jns
push
lds
cmp
aam
test
pop
mov
gs
sbb
cmp
inc
or
rclb
mov
sahf
add
jmp
jno
mov
inc
sbb
mov
out
scas
hlt
adc
xor
sub
push
je
fcmovnb
cltd
nop
dec
adc
mov
fsubp
jl
std
push
pop
scas
inc
ficomps
inc
push
in
cmp
shl
jp
add
mov
clc
mov
cltd
mov
xor
mov
inc
cs
frstor
mov
ja
int
movsl
mov
pop
in
inc
leave
pop
adc
loope
insb
dec
mov
dec
sbb
mov
or
inc
adc
xchg
sahf
sub
mov
mov
adc
imul
movsb
icebp
sub
ja
sbb
fcmove
andl
adc
insb
fists
push
mov
mov
and
cwtl
fs
xorb
mov
pop
repnz
jne
outsl
cld
sti
jbe
add
push
xor
inc
push
movsb
push
mov
sbbl
movsl
rcrl
icebp
fildl
out
adc
ror
mov
adc
nop
popf
in
dec
sbb
push
mov
popf
inc
test
xchg
inc
call
jnp
loope
sbb
push
mov
add
outsl
scas
lea
nop
jne
lret
inc
fists
adc
lods
dec
aam
cwtl
jb
filds
sarb
pop
int
add
push
push
test
mov
ret
ret
stos
cmp
mov
push
test
add
gs
js
xchg
ja
cltd
test
xchg
mov
push
and
bnd
cmp
out
inc
pop
sahf
xor
ja
xchg
xchg
mov
arpl
mov
cmpsl
fsubs
inc
jecxz
jl
mov
imul
fwait
push
jo
test
mov
mov
aad
push
inc
push
leave
inc
fdivp
mov
out
cmpsb
jecxz
jae
enter
sbb
pop
xchg
mov
mov
gs
pop
into
cwtl
xor
mov
arpl
pop
in
test
pop
or
mov
insl
jge
mov
cmp
addr16
insl
sub
ljmp
jmp
xchg
xor
faddp
lret
and
cld
mov
outsb
cmpsl
test
aas
nop
push
push
test
loop
push
fwait
sti
fnsave
out
popf
xchg
stos
mov
xchg
pop
lea
push
mov
fiaddl
inc
push
inc
nop
imull
andb
adc
xchg
lods
and
cwtl
cmp
addr16
leave
fsubrl
mov
jmp
int3
lahf
sbb
sbb
data16
insl
pop
fistpll
push
push
sub
add
sbb
dec
dec
jl
loopne
in
xor
push
mov
pusha
dec
hlt
lret
inc
cmpsb
push
and
inc
push
inc
cli
jne
jbe
ss
stos
cli
adc
mov
fsubp
stc
aaa
int
cmpsl
gs
imul
movsl
cs
push
jmp
jge
push
xchg
out
jecxz
adc
or
jae
push
jl
or
out
imul
or
mov
pop
testl
mov
sub
mov
filds
push
jge
jne
sbb
dec
mov
dec
add
shl
mov
dec
inc
and
mov
add
xchg
data16
out
das
inc
inc
jno
pop
stos
pop
or
rcrl
xchg
mov
push
fidivrl
cwtl
adc
test
xchg
add
dec
shrb
adc
add
cmpsb
aas
and
repnz
pushf
inc
out
xchg
sub
jmp
fisubl
ficompl
sbb
outsl
mov
and
mov
xor
adcl
lods
cltd
cmpsl
rcll
adc
insl
cwtl
imul
stc
xor
push
lahf
and
pop
push
rclb
ja
mov
cwtl
sub
jns
test
xchg
ds
out
jecxz
or
xor
insb
imul
fldl
testl
les
in
lret
mov
nop
cmp
imul
in
mov
or
add
sub
mov
mov
push
test
inc
stc
adc
jbe
jne
fsts
js,pn
jae
in
into
sbb
inc
cs
xchg
jns
xchg
jb
in
jmp
dec
in
sbb
inc
jno
insb
sti
gs
mov
cmp
cs
adc
xor
inc
lods
add
fiadds
inc
adc
insl
movsl
xchg
out
lods
sbb
push
inc
shlb
loopne
je
cmpsb
jo
testl
cltd
pop
mov
aam
fs
fwait
imul
jbe
leave
dec
test
nop
dec
subb
mov
and
out
xor
ljmp
negb
popa
gs
adc
pop
inc
xor
xchg
les
lcall
and
adc
aam
lea
stc
popf
or
xor
popa
cltd
and
call
nop
jae
push
xor
testb
cmp
popa
xchg
ss
add
movsb
dec
mov
ret
xchg
ficomps
mov
ret
xchg
push
add
cwtl
and
movsl
scas
outsl
mov
fucom
outsl
sub
test
dec
addl
iret
mov
pop
shl
mov
and
gs
push
and
dec
cmp
fs
repnz
mov
jl
daa
dec
sbb
or
adc
sub
hlt
mov
mov
adc
fsubs
std
clc
leave
or
daa
cmp
fwait
or
jle
in
clc
pusha
int
inc
mov
int3
mov
fwait
pushf
xor
loopne
add
aad
loopne
movsb
adc
ret
aaa
imulb
test
push
inc
jbe
pusha
inc
sbb
or
test
xchg
xchg
sbb
fwait
scas
popl
xor
jle
mov
inc
in
out
out
aas
xor
push
jge
cmp
xchg
push
pop
pop
xor
test
sub
push
pop
add
incl
xchg
add
pop
insb
jne
pop
pop
push
mov
sub
ds
mov
pop
fidivl
mov
pop
es
test
sbb
not
mov
roll
cltd
cmc
dec
scas
aas
push
mov
and
js
popf
fwait
in
mov
jb
or
call
add
dec
ss
dec
dec
xor
fucomip
mov
aas
divl
jg
pop
mov
ret
stc
xchg
jmp
sbb
sbbb
jl
cmp
push
aad
pop
testb
mov
cmpsb
mov
fstpt
push
or
cmp
ja
std
xchg
test
sbb
mov
or
scas
sbb
adc
daa
sbb
cs
or
fldenv
scas
xchg
dec
movsl
in
pop
mov
int3
pusha
mov
rcl
aad
fs
xchg
mov
cmpb
fs
pop
mov
cmp
cmc
fstpt
lods
mov
adc
in
lea
xlat
fcom
imul
lock
repz
mov
or
adc
inc
inc
pop
cmp
push
add
jbe
mov
adc
push
rcl
shlb
clc
imul
dec
push
in
iret
lds
je
xchg
dec
and
scas
stc
subl
in
mov
out
cld
lret
jge
mov
mov
add
rolb
push
loopne
clc
sahf
or
shlb
iret
data16
in
outsl
pop
lcall
sbb
cmpsl
cmp
pop
push
push
insb
addb
inc
or
dec
xchg
sub
ss
add
push
and
lds
xor
jns
mov
scas
rcl
test
mov
scas
inc
jg
cmp
shlb
sub
das
lret
popl
jg
loopne
lods
loopne
shll
ret
mov
xlat
xor
sub
shll
adc
jecxz
sub
icebp
sbb
and
lds
bound
out
sbb
dec
dec
int3
stos
cmp
in
es
and
inc
or
mov
aas
fdiv
mov
into
stc
pop
cmp
mov
mov
or
fs
and
in
orl
add
insl
lods
xor
and
enter
test
dec
lcall
xor
mov
jns
aad
pop
push
mov
add
mov
sbb
sub
lret
popl
add
dec
in
push
scas
pand
adc
fld
fsubrs
jp
cmp
jns
jns
xor
call
loop
push
push
cs
movsb
jnp
ret
rep
jbe
movsl
push
or
jnp
stc
mov
imul
shrl
cs
lods
fidivs
daa
jb
je
jnp
pop
test
mov
ret
push
sub
dec
test
xor
sbb
sbb
sub
hlt
insl
add
mov
dec
adc
cmc
mov
xor
std
in
out
and
mov
stos
mov
jmp
es
sarl
inc
cli
pop
sarl
scas
or
push
sbb
add
lea
das
jo
lahf
fcmovne
jns
xchg
repnz
mov
lret
leave
jecxz
inc
lock
adc
in
jle
pop
pop
dec
insb
ret
mov
mov
push
ljmp
xchg
ja
icebp
xchg
test
adc
jbe
fst
scas
call
xor
data16
jae
mov
mov
adc
adc
mov
mov
adcb
fldcw
mov
cmc
lret
out
xor
adc
das
fiaddl
out
rcrb
fwait
sahf
jns
xchg
mov
jb
ss
call
mov
loopne
mov
mov
jle
in
and
loope
add
pop
repnz
mov
enter
sbb
jae
push
jne
mov
mov
add
orb
inc
xchg
out
sbb
lcall
fsubrs
inc
mov
push
jmp
cli
ret
incl
mov
leave
xchg
mov
xchg
push
movsl
lods
sbb
mov
inc
xor
lods
and
adc
push
xor
adc
je
pop
push
jmp
sub
add
negl
in
fcompl
mov
in
adc
fbstp
int3
ret
jnp
jle
call
jp
sbb
inc
push
bnd
repz
imull
aad
push
xchg
call
cmp
loop
cli
xchg
mov
bound
cmp
cmp
dec
sbbb
push
jb
into
mov
arpl
leave
insb
pop
loope
out
push
mov
mov
push
xor
adc
fld
sbb
adc
fsubs
out
mov
cmpsb
subl
ret
out
js
xchg
dec
int
push
push
mov
les
add
jae
or
dec
lods
fsubrs
imulb
in
dec
fsubs
orl
xor
push
mov
aam
xlat
or
cmpl
scas
outsb
pop
out
jmp
addl
scas
xor
xchg
shl
add
sub
jp
cltd
xlat
push
mov
jb
mov
shll
jno
jmp
jg
fldenv
xor
sbb
sub
aaa
dec
rorb
rorb
adc
jge
inc
lret
fs
aad
pop
in
loope
test
lahf
sub
in
enter
cmpsl
xor
pop
mov
enter
scas
jmp
in
cmpsl
aam
jbe
inc
notl
pop
adc
inc
jp
mov
cmp
jb
sti
mov
scas
push
into
stc
pop
inc
loop
or
pop
xor
cmpsb
incb
mov
or
mov
xor
outsl
pop
mov
xor
bound
dec
xchg
mov
into
jp
fidivl
lock
xchg
int3
xorl
out
mov
das
in
cmp
push
rcrl
nop
lds
cmp
outsl
movb
cli
or
scas
pop
mov
inc
jbe
adc
cmp
pusha
and
cmp
ficoml
sub
icebp
cltd
dec
popa
or
fbstp
sbb
imul
imul
jle
jg
loop
jecxz
ret
mov
rorb
outsl
imull
ja
mov
dec
js
mov
filds
scas
push
jl
outsb
and
xchg
insb
add
loopne
push
push
or
add
ljmp
call
cmpsb
jno
into
lret
xchg
fwait
push
sti
es
jmp
sub
add
push
push
inc
les
or
jo
cld
shlb
inc
push
dec
push
out
lods
shrb
hlt
jge
mov
cmp
mov
mov
or
je
ljmp
mov
jo
pop
inc
and
std
push
push
gs
jnp
icebp
mov
aam
popa
mov
imul
jnp
jl
sub
or
jg
aaa
jae
ss
icebp
cltd
dec
fwait
inc
add
mov
jmp
ret
loope
and
pop
shll
mov
stos
jge
pusha
xor
xchg
mov
jle
or
div
aas
add
mov
lods
jge
test
inc
loop
add
jbe
xor
stos
enter
adc
cmpb
fucomip
addr16
inc
cmpsl
out
push
inc
push
push
or
cmp
xchg
mov
in
jne
sbb
sbb
xchg
pop
repz
aas
jmp
bnd
jb
test
dec
mov
lret
lret
push
xchg
sub
jne
push
pop
ficoml
add
jno
pop
stos
xor
pushf
jmp
mov
cmp
iret
mov
clc
jnp
bound
mov
ret
arpl
mov
loope
push
jae
out
pop
sbb
mov
out
xor
sub
dec
mov
sbb
push
push
pop
mov
rcrl
je
imull
stos
sub
pop
pop
mov
push
out
mov
sbb
dec
loop
inc
and
dec
pop
dec
sbb
movsb
std
adc
push
adc
or
push
jmp
subl
mov
addr16
inc
cli
xchg
dec
jmp
dec
rolb
scas
adcb
sbb
subb
into
iret
mov
add
sbb
xchg
jo
sti
xchg
stos
aad
test
add
mov
jae
sarb
imul
pop
mov
dec
cmp
push
lahf
add
inc
movsb
pop
mov
pop
add
and
and
mov
jg
xor
cmp
daa
cld
pop
pop
cmp
into
mov
repnz
push
cmp
mov
test
mov
add
shll
xchg
hlt
xchg
jmp
in
or
ficoms
lret
daa
stos
ret
sbb
xor
outsb
rep
sub
sbb
pop
adc
xor
andl
aas
test
and
cmp
outsl
sarb
incb
xchg
pop
sbb
or
push
adc
or
xor
jg
or
out
adc
dec
das
xor
mov
xor
enter
jl
xor
mov
fistl
inc
ja
or
push
iret
add
rolb
pop
adc
stos
outsl
daa
imul
shll
pop
lcall
loop
jo
cmp
ret
sbb
call
loopne
ds
add
sbb
pop
push
jno
cld
popa
inc
ljmp
mov
fdivs
pop
jp
ret
jnp
dec
mov
mov
adc
out
xchg
mov
mov
movsl
push
cmp
xor
mov
or
sarb
jle
pop
cmp
xor
inc
pop
loopne
shll
fmull
dec
lds
fmull
loop
and
stos
jbe
lds
ret
dec
push
mov
repz
cmpsl
xchg
jb
dec
fisubrl
push
or
pop
and
or
xor
push
outsl
lret
mov
mov
dec
lds
sub
gs
push
fildll
outsl
and
fdivr
inc
xor
lret
fsubr
mulb
sub
cli
insb
jle
jecxz
pop
fcomp
cmp
mov
les
cmp
cltd
movsb
out
std
ja
fidivl
ss
pop
out
lods
mov
inc
int3
andb
cmpsb
jbe
add
dec
divl
jmp
rcrl
loopne
cmc
nop
jmp
lods
js
out
aad
mov
dec
rcl
xor
call
test
dec
sbb
xlat
or
jle
xor
xor
fistpl
mov
stc
or
mov
and
and
into
fistpl
mov
mov
clc
enter
test
pop
inc
cmp
or
dec
jecxz
testb
add
adc
lret
popf
sbb
imul
cld
cmc
inc
ss
mov
ficoms
push
movsb
and
movsb
arpl
out
test
sbbb
popa
or
xchg
icebp
test
mov
lret
sahf
xchg
ret
imul
fcoms
icebp
aam
ss
or
sahf
pusha
cmp
xchg
jne
jb
cwtl
inc
jmp
and
pop
or
xor
or
mov
bound
test
sarb
push
arpl
gs
pop
comiss
adc
enter
imul
jle
in
xor
mov
cs
gs
mov
jns
sub
pop
mov
cmovne
inc
fcmovne
mov
out
daa
addr16
pop
or
mov
sub
nop
xchg
and
cltd
mov
add
lock
fs
inc
fldl
cwtl
jmp
lret
sub
fidivl
fnstsw
xor
push
icebp
in
cwtl
aad
iret
fstpt
mov
and
xlat
cmpb
xchg
outsl
subl
ja
and
imul
aas
sub
ret
cld
lcall
in
pushf
in
lret
bound
subb
pushf
dec
movsb
dec
add
cmp
jl
lcall
or
jae
in
jl
sub
js
fidivrl
push
xchg
push
push
ret
cld
xchg
std
dec
and
cli
fsubl
push
stc
sub
xor
icebp
das
outsl
dec
outsb
pop
cmp
in
dec
dec
cmp
test
mov
lcall
lods
ds
sti
add
or
or
dec
int
xor
sub
lods
cmp
jno
aam
arpl
push
mov
inc
push
pop
pop
mov
jp
aad
nop
dec
push
inc
jecxz
jae
cmp
aad
fwait
outsb
clc
mov
dec
orl
xchg
xor
sub
aad
icebp
cmp
cwtl
das
lods
dec
pop
out
push
mov
or
in
add
sbbl
jnp
xchg
and
lock
adc
jmp
lea
adcl
les
jno
xchg
in
into
gs
ds
cmp
xor
psraw
or
cmp
pop
add
or
and
and
sub
xor
pop
lock
mov
repz
add
add
xor
sub
fst
daa
xchg
cli
cmpl
cmpsl
cwtl
lcall
shr
sti
popa
xchg
lahf
cmp
imul
mov
test
xchg
add
es
pop
or
shlb
dec
fwait
push
and
mov
gs
mov
xor
adc
sub
jb
lds
fcoms
dec
mov
sbb
add
and
adc
or
adc
daa
push
test
cmp
jns
xor
sub
les
lret
idivb
pop
popf
push
inc
loopne
stc
pop
inc
ficoms
mov
xchg
icebp
je
adc
lcall
cs
lods
mov
pop
pushf
outsl
ljmp
js
lds
and
adc
dec
movsl
repz
pop
mov
outsb
add
xchg
lds
and
xor
fnstcw
mov
aad
pop
pop
mov
lcall
in
inc
adc
gs
repz
fbstp
push
shl
jne
dec
xor
mov
dec
sub
out
mov
int3
lret
push
fwait
hlt
into
xchg
mov
xchg
decl
in
cltd
push
stos
xchg
jge
sbb
push
test
adc
out
mov
js
out
add
fsts
pop
push
jno
push
jecxz
add
lea
dec
xor
jne
repz
rcl
dec
std
cwtl
xor
dec
rorb
es
cmp
mov
and
cmp
enter
jo
fildll
push
xlat
mov
jecxz
jns
int
push
mov
or
push
scas
mov
mov
rorb
inc
icebp
rcrb
dec
notl
mov
shlb
in
mov
dec
adc
xor
jb
stc
add
sbb
jecxz
jge
mov
mov
sbb
cwtl
jmp
fidivs
stc
jle
pusha
jp
push
xor
jbe
sbb
movsb
cmc
push
shl
mov
sub
int
push
jne
lods
mov
mov
dec
mov
push
gs
scas
ss
out
dec
rolb
fdivrs
lahf
jb
xor
icebp
lret
mov
jo
sbbl
pop
push
insl
aam
inc
mov
in
sbb
xchg
dec
push
xor
cmp
scas
push
add
and
loope
insb
rcrl
xchg
lcall
dec
inc
inc
jbe
and
imul
stc
push
add
loop
jp
arpl
jbe
dec
insl
movsl
cmp
out
sub
hlt
push
aas
loope
fstps
aaa
jo
sub
push
xor
xchg
cli
mov
jns
sub
fwait
fisubs
cmpsl
andl
xchg
test
pushf
leave
mov
xor
push
outsl
adc
cmp
inc
mov
sti
inc
jg
icebp
mov
outsl
add
jns
sub
gs
push
inc
movsb
mov
mov
pop
loopne
jp
or
scas
sub
loope
push
stc
into
or
scas
cltd
repz
xchg
mov
pop
stos
testl
mov
and
mov
adc
ret
mov
sub
inc
ret
ss
out
pop
xchg
sbb
mov
stos
and
cld
xchg
aad
iret
sahf
in
jge
sub
add
in
jno
inc
int3
pop
outsb
jnp
aam
adc
rcrb
movsl
jl
test
mov
xor
ret
jl
jb
sub
mov
dec
mov
enter
mov
rcll
dec
lahf
sub
cltd
mov
push
add
mov
sub
icebp
ret
out
sti
mov
pop
xchg
iret
enter
call
inc
mov
dec
gs
fsubrp
jnp
in
jbe
sub
sbb
adc
adc
lcall
sbb
data16
push
aaa
bound
cwtl
outsb
add
inc
clc
jnp
in
xor
iret
xchg
push
inc
pop
int
pop
arpl
sarl
and
test
inc
fwait
dec
lea
inc
outsl
and
loopne
mov
aam
jb
cmp
xchg
ret
mov
ss
and
pop
mov
mov
enter
sbb
cmp
add
mov
xchg
cmp
xor
fst
repnz
aaa
das
pop
std
mov
cwtl
xchg
jnp
movsl
shll
mov
bound
cmpsl
aas
sub
shlb
das
inc
push
pushf
xor
xor
loop
fstps
ss
ret
addr16
shll
or
push
cmp
scas
test
push
push
leave
jle
jl
inc
xchg
cmp
aas
jae
push
sbb
xchg
cli
dec
cmpsb
xlat
out
mov
and
ss
loope
jbe
and
leave
jle
cmp
or
and
pusha
jl
or
dec
es
arpl
je
xor
insb
rclb
shrb
fcomi
movsb
repnz
dec
xchg
cmpsl
jnp
clc
or
xor
loope
add
mov
sbb
push
xchg
ja
add
shlb
push
pop
stc
mov
jle
mov
enter
mov
jle
or
push
sbb
cwtl
push
xor
adc
push
jae
int3
scas
lods
adcb
xlat
movsb
cmp
jb
loopne
sbb
xchg
lods
scas
repnz
stos
and
xor
xchg
sbbb
cmc
in
scas
cmp
decb
loop
mov
fnstsw
adc
push
sbb
adc
jne
xor
rcll
mov
pop
cmp
pop
inc
cmc
add
mov
pop
lret
or
pop
ret
inc
daa
mov
bound
xchg
mov
adc
and
pop
int3
fwait
lret
or
and
add
mov
std
or
mov
cmp
and
rcl
mov
cmp
sub
cmp
movsb
sti
push
scas
dec
jmp
or
or
in
xchg
test
int
lock
aas
dec
shl
mov
inc
mov
mov
bound
popa
push
pop
fistpll
iret
loop
sbb
or
repnz
dec
shr
pop
jnp
es
jle
scas
insb
or
xchg
cwtl
pop
test
xor
dec
add
cmp
mov
ficomps
push
sbb
jg
repz
push
nop
inc
test
jbe
dec
cmp
sub
inc
aas
inc
fnsave
lods
add
movups
mov
mov
jecxz
aad
mov
jl
fidivrs
adc
loopne
cmpsb
push
into
xchg
cld
mov
in
push
loopne
into
xorl
mov
mull
fcmovbe
dec
pop
or
sahf
outsl
cmp
imul
jo
iret
mov
add
pop
adc
xor
jae
push
sub
xchg
call
dec
ss
push
push
lret
sub
dec
data16
cwtl
sbb
xchg
mov
out
scas
pop
cmpsl
fs
sahf
xor
dec
mov
ret
cmpsl
roll
dec
inc
mov
scas
inc
outsl
jbe
jbe
add
test
xchg
xor
imul
in
xor
ret
mov
in
sub
dec
scas
dec
sub
sbb
push
jmp
std
repnz
imull
ljmp
or
adc
inc
cmp
xor
loope
sub
insb
xchg
cld
or
cmpl
xor
in
decl
mov
pushf
testl
test
ret
cmp
sbb
sbbb
pop
in
or
pop
and
jp
test
scas
scas
call
mov
sahf
inc
test
xor
jecxz
push
insl
stos
cmp
xor
jle
icebp
aaa
and
mov
cmove
xor
push
jmp
or
ljmp
call
lcall
jbe
xor
insl
jge
cld
xchg
xchg
push
sbb
jb
mov
xchg
mov
xor
in
dec
into
jmp
mov
pop
test
hlt
aas
fdivl
ret
or
subl
popa
push
insl
cli
pushf
ret
enter
mov
add
popl
sbb
std
and
fildll
push
or
repnz
into
or
lcall
psllq
shl
and
cmp
dec
sub
add
lea
add
inc
out
insb
inc
mov
push
decl
jge
cmp
mov
negl
enter
cmp
jecxz
in
jmp
cmp
lret
pop
outsl
add
ss
dec
inc
push
in
jge
cmp
mov
jp
adc
jmp
insl
hlt
jmp
xor
ds
lret
popa
subl
loope
sti
sub
cmp
xchg
push
enter
adc
push
shlb
loope
add
jbe
lahf
lahf
add
fwait
test
xor
xor
out
mov
cwtl
hlt
cmp
aaa
lret
cs
scas
inc
lret
cwtl
lret
in
in
pop
mov
dec
in
inc
hlt
pushf
jp
add
pop
out
push
jl
insl
push
adc
mov
shrl
pop
mov
xor
daa
loop
lea
or
push
sbb
insb
lods
cmp
or
outsb
xor
sub
sub
pop
aam
xor
sahf
push
sub
mov
adc
cmp
mov
and
test
imul
jns
or
rcr
shr
jg
xchg
fldcw
scas
pushf
jp
pop
popf
or
int
jbe
jo
push
jmp
push
test
dec
xor
jg
push
pusha
lahf
loopne
push
lret
sar
xlat
sahf
xor
or
xchg
sub
pop
jb
pop
aaa
scas
inc
subl
outsb
jne
inc
sarb
fsubl
or
insb
cli
rcrl
enter
ret
dec
in
or
data16
cmc
and
cmc
aad
js
js
test
fcmovb
movsl
cmp
jge
fwait
scas
push
ret
sahf
or
or
and
fs
cli
test
xchg
mov
jno
sub
mov
sar
int
idivb
lcall
dec
out
mov
xchg
mov
inc
test
adc
test
lods
call
hlt
inc
fisubl
or
mov
test
mov
sub
repz
push
fdivrs
adc
es
insl
lret
mov
test
cltd
mov
push
jmp
adc
or
adc
xor
pusha
mov
xor
jle
xchg
sub
push
mov
ss
or
enter
mov
sbb
jmp
in
mov
je
insb
gs
jge
push
scas
ds
pushf
inc
fcompl
test
cmp
popa
lock
cltd
div
in
mov
push
push
repz
cmc
andl
jnp
mulb
inc
pusha
push
jno
cmp
lds
nopl
rorl
dec
jo
in
fstpl
push
sahf
mov
xchg
data16
push
imul
xchg
dec
pop
sbbb
stc
js
lock
cmp
adc
pop
jecxz
jecxz
pop
and
inc
call
rcll
aaa
gs
jo
push
pop
rcl
cmpsl
mov
loopne
push
lock
andl
into
cmp
hlt
lods
mov
int3
cmpsl
fildll
pop
jb
mov
dec
test
in
and
jle
xlat
and
push
xchg
aaa
push
or
mov
int
add
xchg
cltd
jp
xor
les
clc
dec
push
jns
or
adc
pop
pop
inc
mov
orb
scas
stos
push
sub
mov
in
cmpsl
mull
xchg
incl
mov
xor
inc
fdivl
xlat
arpl
les
call
repnz
dec
adc
ss
pushf
inc
outsl
cmp
xchg
jge
nop
nop
out
lods
cmp
cmp
cltd
gs
pop
ret
push
jne
mov
out
cli
popf
mov
imul
shrb
fsubr
add
popf
test
aad
movsb
mov
mov
popa
test
inc
mov
and
inc
mov
cli
ja
push
lahf
sbb
aaa
or
out
lahf
xchg
pop
jne
cmp
outsb
lcall
sub
and
cmpsb
sub
dec
sub
cli
jne
into
in
and
fcmovnu
mov
outsb
in
or
mov
pushf
lock
inc
test
mov
pop
push
pop
invd
mov
js
jl
xor
test
and
mov
adc
sbb
hlt
sbbl
add
fsubrs
data16
jae
fiaddl
pop
hlt
mov
mov
cwtl
cmpsl
repz
lock
out
mov
sahf
mov
rolb
scas
rcl
lret
ret
mov
test
in
mov
call
stos
and
lret
aad
shll
sub
pop
loope
mov
push
enter
icebp
pop
mov
lret
lcall
cwtl
lods
xlat
mov
pop
mov
and
mov
sub
fwait
add
loop
mov
imul
and
mov
push
push
adcb
or
repz
imul
into
enter
mov
data16
cmp
movsb
cmp
dec
loop
out
fstpt
notl
lock
xchg
mov
ds
cltd
std
push
mov
rorb
clc
notl
ficoml
mov
push
and
sbb
inc
push
nop
lock
int
push
lcall
cltd
add
sub
mov
mov
enter
dec
aaa
xor
das
jle
sub
push
repz
sub
lds
imul
push
sub
in
daa
push
mov
inc
push
notl
outsb
testb
or
cmp
ret
add
mov
out
xchg
and
mov
or
lret
xchg
cld
je
mov
jne
stos
test
xchg
hlt
push
xchg
pop
sahf
jb
dec
pusha
ss
mov
mov
in
sarl
xor
jl
out
add
jg
fcompl
and
imul
mov
pop
ss
aaa
pop
cli
sub
mov
movsb
popa
push
fucomp
xor
out
mov
pop
pop
adc
rol
cmc
pop
jns
adc
cmpsl
out
and
hlt
push
cmp
jecxz
push
pop
shlb
test
mov
orb
fs
cmpl
xchg
add
flds
cwtl
out
mov
in
mov
push
shlb
jbe
and
xor
and
fisubrl
jle
inc
test
fisubs
sbb
or
aaa
pop
push
sub
in
or
icebp
mov
ja
sbb
lret
hlt
imul
mov
pop
cmpsl
outsb
jmp
loopne
mov
ficompl
dec
testb
jmp
int
mov
mov
inc
push
pop
outsb
aad
dec
leave
hlt
sbb
orl
lahf
push
je
sbb
xor
jg
into
pop
cmp
and
nop
in
push
in
mov
out
outsl
lret
mov
dec
push
push
xchg
push
adc
cmp
mov
adc
or
push
mov
mov
ret
push
out
aad
inc
int
shll
std
xor
or
sbb
add
adc
xchg
xor
adc
fsubrs
or
scas
in
inc
notb
xor
adc
les
arpl
sbbl
fsub
movb
cltd
push
stos
xchg
hlt
xchg
mov
sub
popf
shlb
xchg
stc
add
dec
enter
ja
shld
mov
mov
jmp
cmp
in
adc
adc
cmp
cmpsl
inc
cs
ds
inc
test
inc
mov
flds
or
not
cmp
jae
push
adc
mov
mov
inc
jp
jbe
push
test
lret
jbe
mov
clc
adc
fs
inc
call
or
jno
fstl
mov
cmp
push
push
mov
testb
in
dec
sub
push
adcl
in
xor
aas
into
cmc
stc
bound
mov
sbb
mov
xor
fnstcw
outsl
jnp
inc
mov
pop
mov
jecxz
jne
fldpi
pop
stos
notb
sub
sub
mov
jno
js
mov
movsl
xchg
or
mov
jmp
insb
int3
arpl
jecxz
dec
mov
mov
sti
add
sti
inc
fsubrp
xchg
cltd
gs
cmpsl
gs
sar
and
test
fnstcw
inc
mov
subb
repz
add
testl
out
pop
mov
rcrl
in
cmp
call
inc
sub
inc
popa
js
loop
sub
sahf
xor
adc
mov
lock
and
mov
sub
sti
xchg
jo
sahf
xor
lds
push
mov
gs
shrb
push
and
mov
popa
inc
sbb
flds
cmc
mov
test
aam
sbb
ds
addb
decb
out
jl
xchg
sub
sub
int3
addr16
cltd
in
or
sidtl
xor
and
fisubrl
or
test
pop
xlat
xchg
cmp
mov
xor
sbb
ljmp
mov
xor
xor
or
in
pop
lods
push
sbb
rol
out
xchg
icebp
call
cmpsb
mov
jnp
jbe
sub
gs
xchg
iret
fimuls
mov
pushf
and
gs
inc
and
cmp
fidivl
insl
cmc
add
lds
cmc
or
daa
dec
push
jno
jge
cmc
and
int
cli
pop
inc
xlat
sub
cli
pusha
push
pop
daa
mov
test
push
mov
in
and
fs
sbb
pop
pusha
inc
ficoms
or
cmp
int3
sbb
xor
inc
dec
filds
test
sbb
adc
loop
jecxz
mov
mov
mov
push
xor
test
xchg
negb
lret
mov
movsb
scas
cmp
ljmp
ss
iret
dec
loop
mov
cmp
mov
push
pop
lret
sahf
xor
mov
dec
ss
outsl
jl
push
pushf
push
jmp
xor
or
sbbl
lods
adc
je
in
ds
push
mov
hlt
inc
sbb
imul
adc
repnz
stc
sbbb
dec
xchg
jnp
test
stos
cmp
fistps
mov
jb
mov
popa
push
orl
mov
mov
adc
mov
mov
stc
and
inc
inc
pop
jge
xchg
pop
sbb
xor
adc
test
test
out
cmp
mov
into
fmull
aas
push
jge
xor
jle
and
clc
push
jp
fnstsw
and
adc
cmp
push
add
int
xor
cmp
push
inc
sbb
int3
adc
mov
mov
xchg
outsl
ret
movsb
or
sub
cli
fwait
xchg
lahf
ljmp
lods
clc
fdivs
mov
movsb
pop
mov
push
add
aad
and
mov
iret
push
lcall
into
or
adc
sub
insl
adc
mov
mov
adc
push
jno
jbe
inc
pop
sub
js
stc
dec
sbb
cld
cmp
inc
or
fidivs
xchg
mov
push
scas
xor
jno
out
mov
aad
in
mov
xchg
pop
pop
das
adc
nop
lods
stc
mov
lods
repz
lock
xchg
shrl
mov
test
adc
loope
out
in
dec
jae
mov
xchg
scas
fbld
cwtl
addr16
leave
xchg
loope
je
jbe
cmc
gs
cmp
sti
sbb
adc
scas
fsts
inc
add
in
int3
xchg
push
loopne
out
xor
xchg
sub
adc
std
inc
xchg
dec
mov
mov
addr16
fcomip
stc
test
jno
daa
ret
mov
sub
pushf
jecxz
int3
pusha
orb
jle
xchg
xor
sbb
push
pop
mov
and
jb
adc
ret
call
pop
or
daa
test
add
or
lods
add
shlb
mov
pop
add
xor
call
dec
popa
inc
xlat
push
jnp
add
imul
and
iret
sub
cli
dec
addr16
jno
mov
push
jo
ficoml
cli
and
xlat
xor
fsub
jae
rcll
hlt
push
jb
cltd
cmp
jp
dec
sbb
xchg
jl
jmp
push
fdivrl
popa
and
lds
xchg
nop
pause
pop
jecxz
out
sub
flds
in
stc
adc
ds
xchg
sub
sbb
rorb
cmp
js
popf
popa
inc
daa
cmpsl
decb
xor
jecxz
cmp
cmp
mov
test
push
negl
outsb
insl
mov
sub
fsubrs
jb
xchg
into
adc
inc
cwtl
fnsetpm(287
scas
adc
popa
out
es
fists
and
push
imul
xchg
push
mull
jmp
sbb
out
inc
icebp
out
lods
jb
rcrb
cmpsl
cmp
jo
addr16
push
in
or
imulb
mov
sahf
addr16
push
sbb
sub
cltd
pusha
jecxz
cwtl
adc
dec
add
cli
or
jne
jne
xor
in
mov
push
icebp
add
fistpll
xchg
gs
inc
dec
lods
jno
cs
loop
push
imul
jge
imul
pop
push
inc
pusha
cmpsl
mov
pop
out
mov
pop
mov
xchg
stc
pop
push
ljmp
aas
mov
mov
jo
mov
dec
lods
imul
lock
inc
mov
imul
lods
mov
adc
xchg
pop
xor
mov
push
negl
and
inc
mov
mov
dec
shll
push
movsl
push
je
push
jo
xchg
popf
inc
add
sub
or
mov
push
jmp
xchg
js
push
ficomps
dec
loope
cli
jecxz
add
jge
sbb
sub
orl
arpl
sub
cmc
pcmpeqd
cs
in
lahf
outsb
push
xchg
rcll
js
mov
cmp
repz
push
sub
addr16
pop
push
rorl
loop
mov
pop
hlt
and
push
cmp
pop
mov
push
push
out
jb
mov
rorl
push
or
push
ljmp
xor
fildl
push
pop
cmp
mov
xor
mov
stos
mov
int
sbb
testb
xor
jle
jge
mov
and
addr16
cmp
enter
rol
lahf
sub
mov
jb
sub
cmp
push
ret
push
rcrb
call
daa
movsl
sub
mov
mov
mov
lahf
and
jge
cld
scas
rorb
dec
es
mov
and
dec
aam
sti
jmp
and
fbstp
push
repnz
in
shrb
mov
mov
xchg
je
stc
or
mov
ficomps
sub
dec
inc
pop
in
xor
aad
cltd
stos
sarb
xchg
sarb
xor
mov
xchg
sub
orl
mov
and
lods
dec
in
mov
imul
jg
repz
adc
inc
jp
mov
inc
and
pop
out
pop
inc
leave
push
cltd
pop
mov
adc
cmp
std
xor
aaa
jg
fbstp
ja
clc
and
xor
cld
incb
mul
xchg
cmc
adc
leave
add
cmpsl
lret
pop
shll
in
outsb
jnp
push
or
mov
mov
rorb
cmpsl
push
sbb
pop
outsb
pop
out
mov
sub
iret
sub
sbb
pandn
rcrb
dec
add
scas
mov
adc
xchg
or
inc
and
pop
dec
dec
nop
adc
addb
adc
pop
enter
pop
push
aas
cmp
mov
sub
mov
jo
mov
pusha
mov
jb
cmp
out
mov
test
seta
mov
mov
gs
hlt
or
fsubrl
mov
pop
in
sbbl
mov
shr
push
inc
push
push
push
dec
pop
lods
xchg
fcomps
push
loop
popa
lods
mov
sub
sub
jmp
movb
push
into
ds
in
bndstx
fdivs
push
leave
xchg
mov
jo
jns
es
lods
addb
test
icebp
test
test
loopne
mov
into
and
aad
les
jmp
loope
xchg
mov
add
inc
pop
mov
pushf
fidivs
in
repz
in
and
jne
mov
lock
pop
xor
inc
cs
add
mov
imul
iret
xchg
in
test
ljmp
jno
cs
xchg
sahf
jbe
jns
mov
adc
lds
push
cmp
in
insb
pop
push
sbb
es
adc
add
in
and
mov
adc
lret
aas
mov
lcall
fs
into
repz
popf
arpl
cltd
and
sbb
jl
lods
pop
bound
daa
lock
int3
adc
ljmp
loop
lcall
mov
pop
jnp
mov
pop
cwtl
in
aas
dec
or
lcall
push
mov
test
test
mov
or
dec
mov
fdivrp
lods
inc
js
adc
xchg
xor
or
repnz
lea
push
ret
xchg
mov
sbb
sbb
iret
jbe
mov
std
inc
popf
sahf
adc
or
mov
inc
stc
imul
imul
shr
add
ss
cli
loop
stos
add
cltd
pusha
test
push
decl
dec
test
insl
adc
sub
sbb
or
jns
or
frstor
dec
inc
pop
cmp
stos
loope
fcoml
into
inc
std
call
mov
addl
insb
popf
dec
and
jl
fsubrs
adc
pop
add
call
or
sub
cltd
test
mov
jle
daa
lock
mov
add
fcompl
mov
pop
outsl
sbb
cld
xchg
into
out
sub
add
testl
fnstenv
inc
mov
inc
push
clc
rol
fwait
imul
jo
dec
mov
pop
cmp
mov
inc
push
push
or
push
pop
add
lret
adc
fcomp
stos
aas
mov
xor
nop
daa
ljmp
mov
mov
in
and
xchg
jle
mov
lret
mov
mov
inc
roll
add
cld
xchg
adc
imul
cli
jge
enter
rcrl
mov
cltd
dec
jecxz
inc
push
cltd
lahf
inc
in
cmp
aaa
pusha
mov
adc
data16
sbb
dec
test
sbb
xchg
pusha
inc
pusha
orb
push
insb
cld
cld
es
sbb
adc
lods
fcoml
decb
fadds
data16
popa
aas
xchg
mov
aaa
fisubs
push
fdivl
or
cmpsl
fsubrs
mov
pusha
jmp
add
lock
stos
inc
pop
jo
xlat
xchg
push
fs
mov
mov
cli
fildl
jbe
test
xchg
add
mov
lahf
ss
or
jne
out
sbb
jbe
test
loop
add
add
rcll
or
inc
es
hlt
inc
iret
orw
in
imul
test
sbb
mov
int
lret
cwtl
leave
loopne
adc
sbb
addr16
mov
or
out
repnz
add
fidivrs
aad
and
inc
xchg
xor
shl
jge
in
lret
sbb
movsl
jne
pop
in
gs
mov
das
inc
loop
add
xchg
sti
out
jo
and
out
fdivl
and
ret
add
test
test
jmp
call
or
shlb
xchg
stos
push
mov
stos
pop
xchg
into
decl
negl
scas
dec
es
push
fisubrs
iret
gs
and
xor
rcl
icebp
mov
lock
pop
dec
in
les
cmpl
pop
pushf
and
fwait
ret
sbb
pusha
pop
mov
xor
mov
outsl
mov
lcall
or
insb
sbb
add
lock
jg
and
dec
xchg
adc
add
test
nop
ja
and
cwtl
or
in
push
xchg
xchg
scas
add
pop
test
pop
cmp
pop
and
push
nop
lock
xor
lret
std
into
popa
cli
test
inc
pop
dec
leave
sbbl
xchg
leave
mov
cld
andl
push
mov
jecxz
xor
fisubl
es
dec
inc
out
sti
inc
xchg
popa
shr
nop
ds
nop
jmp
and
fcmovu
lods
jl
xor
repz
aas
mov
fs
mov
jmp
pop
sub
sub
nop
cmp
hlt
jp
dec
stc
cmp
mov
sahf
rolb
jo
sub
inc
or
test
in
xor
add
push
dec
sbb
and
scas
pop
pop
pop
sub
hlt
jmp
mov
adc
lods
les
sbb
jecxz
aaa
gs
sub
push
aad
mov
loope
dec
hlt
outsl
call
push
mov
pop
idivl
sarl
add
mov
pop
data16
adc
jle
mov
aad
sbb
mov
dec
pslld
sub
lret
inc
dec
fs
cmpl
push
fildll
push
out
icebp
lock
pop
rorl
inc
jmp
mov
jg
aad
es
mov
lret
jno
int
into
mov
iret
mov
ljmp
mov
or
ss
sub
xchg
push
sahf
inc
push
dec
push
inc
adc
mov
adc
aaa
and
jg
push
data16
bnd
movsl
cmp
shrb
js
nop
sub
daa
jno
testl
and
pop
inc
xor
or
mov
mov
pop
hlt
into
sub
xchg
push
sub
sbb
inc
test
xor
xor
inc
jno
ret
jle
push
mov
cmp
push
mov
cmc
popf
adcl
xchg
mov
repnz
pop
mov
outsl
lahf
fs
xchg
adcl
dec
mov
aam
xlat
xchg
inc
push
out
cmp
mov
sub
and
or
sarb
adc
iret
push
out
sti
xor
inc
sbb
into
mov
lret
add
mov
mov
out
xor
mov
cmp
in
adc
cwtl
push
jmp
jp
pushf
push
stos
dec
pop
xchg
arpl
imul
stos
cmp
pop
xor
loop
inc
dec
sahf
xchg
sub
push
cltd
popa
mov
sarb
xor
or
jmp
je
jle
adc
testl
cmpsb
inc
push
orl
test
adc
inc
sarl
xchg
pop
jl
adc
push
push
mov
fucomp
popf
dec
xor
sub
sub
cld
call
roll
mov
add
jg
mov
adc
movsl
lea
mov
mov
repnz
pop
call
iret
pop
mov
inc
mov
aas
fcmovnb
push
mov
mov
pop
loope
inc
jbe
cld
or
cmp
mov
xor
cmpsb
xorb
pop
push
into
mov
jo
outsl
jnp
cmp
mov
push
adc
pop
outsb
xor
xor
cmp
jecxz
lds
add
push
in
inc
sbb
ds
out
xchg
in
dec
inc
test
jns
xlat
xchg
add
lcall
test
xchg
sub
fwait
push
sub
jns
mov
xchg
inc
bound
outsb
movhps
mov
push
roll
dec
lcall
insl
add
adc
cli
sti
fs
sahf
xor
xchg
mov
or
iret
dec
mov
xchg
xchg
pop
pusha
cmpsl
notb
cmpsb
mov
xchg
mov
in
movsl
sbb
xchg
mov
xchg
scas
adc
push
dec
push
out
lods
test
xchg
jb
inc
fs
xchg
push
add
mov
subl
sbb
test
add
stos
leave
sub
nop
sub
les
xor
call
or
sub
sti
pop
dec
jmp
adc
movsl
loopne
add
jecxz
pop
mov
rcr
adc
lret
in
sbb
sets
add
mov
xor
cld
xchg
fsts
and
ss
push
sbb
cmp
add
and
inc
lods
pop
lock
loope
push
xor
cwtl
mov
jo
mov
hlt
imulb
jbe
cmp
adc
mov
pop
ss
mov
add
out
sbb
mov
ja
fsubs
dec
bound
fidivl
dec
in
jg
std
and
inc
dec
pop
ljmp
xor
sub
imul
and
jno
or
xchg
sbb
sub
cli
popa
or
push
stc
jnp
mov
pop
popf
in
pop
fistpll
and
cli
and
mov
jecxz
fwait
dec
jl
cld
xchg
inc
jmp
push
push
cltd
pop
lcall
and
addb
mov
cmpsl
dec
lahf
xlat
fcmovb
pop
loope
sub
addl
xchg
xchg
or
inc
andl
sub
mov
adc
lcall
sub
sub
push
cmp
or
lret
out
int3
sbb
jne
push
mov
xchg
sub
loope
sub
cmp
inc
sub
icebp
mov
mov
adcl
scas
mov
in
fs
jae
test
mov
outsl
mov
lea
push
stos
adc
jmp
lods
xor
or
outsb
scas
pusha
lds
movsb
xor
push
sub
xlat
lods
lods
arpl
loope
xor
mov
mov
push
mov
iret
jns
push
pop
imul
in
mov
stos
push
push
ret
cmp
hlt
data16
xchg
sub
pop
dec
mov
aaa
ret
loopne
fnsave
inc
adc
push
and
push
xor
sahf
cmpsb
ja
mov
iret
movsb
gs
hlt
mov
sub
shl
jae
movsb
xchg
lods
lret
mov
out
mov
aam
mov
or
je
filds
fucomi
loopne
lea
das
mov
adc
or
mov
mov
call
cmp
pop
cltd
mov
pop
adc
pop
mov
xor
pusha
mov
lock
push
xchg
cmp
or
cmp
pop
xor
xchg
jg
jle
cmp
push
sbb
xchg
aam
ret
xor
sbb
pop
cli
pusha
mov
cs
sub
lret
cmp
enter
sbb
inc
rclb
fdivl
add
pop
xchg
mov
adcb
jge
pop
jae,pn
and
cmp
fnstsw
cmp
xor
xor
xlat
popa
stos
mov
push
sbb
cli
xor
ds
push
out
pusha
push
pop
mov
fsub
inc
imul
mov
inc
les
jns
stos
popa
pop
jl
mov
jo
add
inc
stos
divb
enter
mov
mov
shrb
xchg
mov
shl
add
pop
jle
sbb
pop
cs
pusha
sbb
mov
lock
loope
add
jnp
xor
add
jae
and
ljmp
mov
xchg
mov
xor
mov
adc
or
add
mov
push
fsubrp
repnz
xchg
add
cmpsl
loope
xorb
pop
scas
and
jge
xchg
subl
cli
pop
jbe
movsb
sbb
pop
jl
hlt
mov
ds
inc
and
test
jg
push
inc
daa
ret
lea
add
and
cmc
push
lock
xchg
lock
push
jmp
xchg
push
jno
lahf
jl
cli
xor
orb
push
jg
pop
lock
arpl
inc
dec
add
icebp
and
pop
cmc
aas
in
jmp
rcrb
and
icebp
cmp
rcll
cmp
loopne
lods
cs
pop
iret
cmpsb
inc
in
outsl
push
or
push
xor
jae
push
ljmp
lods
clc
pop
mov
mov
out
repnz
pop
call
ret
xchg
imul
cmp
xor
add
xor
out
test
outsb
repnz
test
adc
insl
leave
sbb
cmc
cmp
adc
insb
dec
test
jns
call
lret
mov
sub
shlb
jg
mov
mov
pop
jne
adc
andb
push
rolb
mov
pusha
and
mov
loope
jbe
push
int
xor
std
xchg
out
ljmp
or
pusha
in
loope
fmull
xchg
mov
mov
add
lcall
mov
mov
inc
popa
outsb
std
pusha
in
test
xchg
loopne
push
jns
add
mov
out
mov
sbb
rcll
dec
xor
dec
and
dec
in
nop
lods
orl
sbb
sub
scas
mov
dec
js
and
shll
fldl
test
addr16
in
jne
sub
xor
out
push
sub
sub
dec
dec
add
cmpsl
push
mov
out
mov
fadds
mov
ja
cmc
adc
addl
rorb
adc
fidivrl
xchg
inc
mov
or
out
pop
push
dec
cmp
mov
mov
adc
loope
push
xchg
icebp
decl
push
mov
lret
loope
bound
dec
lcall
sbb
mov
push
test
pusha
test
arpl
inc
fimuls
sub
jg
in
cli
out
inc
rcll
push
mov
fcompl
or
in
loope
cmp
stos
pop
fdivp
adc
sub
sbb
jb
xor
ds
mov
jp
arpl
lret
ljmp
xchg
or
idivb
insl
inc
push
jle
adc
insl
pusha
xor
mov
imul
push
xor
xlat
pop
lret
cmp
push
fldl
les
lret
jne
repz
imul
test
push
xor
addr16
xor
mov
dec
ret
adc
cld
sub
sub
mov
add
jge
sbb
and
jb
push
inc
push
stos
ja
push
push
fwait
cwtl
xor
leave
mov
lret
xlat
adc
outsb
push
sbb
fbstp
xor
insl
testw
dec
int
adc
jecxz
mov
cmc
mov
sub
gs
adcb
frstor
das
push
lock
jle
js
jge
call
mov
pop
outsb
xchg
stos
pushf
mov
mov
movsl
push
das
jg
pop
sbb
sbb
cmp
decb
jb
xchg
mov
js
jp
push
test
add
pop
cs
or
xor
ljmp
xor
xchg
adc
push
push
ljmp
insb
jl
popa
in
inc
mov
ljmp
outsl
mov
movsb
bound
xchg
test
push
pushf
cmp
push
jmp
and
pushf
lods
ret
xchg
es
adc
sbb
sub
push
popf
sub
insl
sahf
pop
sbb
push
and
push
push
mov
dec
or
jae
push
xchg
out
js
sub
pop
jo
mov
pop
shlb
xabort
mov
sub
jnp
ret
and
pandn
jbe,pt
dec
push
adc
les
scas
dec
loop
inc
sbb
repnz
imul
test
ret
aas
es
int
dec
into
pop
std
or
orb
inc
pop
pop
dec
rorl
rclb
into
jno
add
pop
das
pusha
jl
pushf
lds
es
inc
sbb
aad
cli
pop
loopne
inc
popf
jo
into
lods
cld
push
mov
fidivrs
jae
sub
shll
xor
dec
and
notl
scas
daa
dec
xor
mov
aas
test
push
cmp
xchg
cs
sbb
inc
xchg
xchg
mov
cmpl
jne
sbb
and
pop
or
addl
cmc
insb
mov
aam
rol
xchg
lods
or
cmp
inc
pop
shll
bound
mov
insb
mov
dec
nop
mov
js
rcll
dec
pushf
jge
shrl
xchg
imul
test
scas
decl
out
lret
xchg
cmpsl
int3
dec
sub
lcall
and
adc
dec
outsl
jp
fiadds
dec
cmp
fidivrl
sbb
js
loopne
shrl
push
cwtl
jge
inc
out
dec
addr16
add
pop
inc
dec
shlb
xchg
dec
and
mov
scas
sahf
xor
addl
in
lahf
or
sbb
in
sbb
mov
in
sub
loope
es
inc
enter
xchg
mov
and
jb
daa
int3
push
shr
aas
in
mov
xor
popa
dec
loop
bound
dec
cmp
cli
xchg
cld
cmpsb
mov
ret
insl
sub
aam
add
pop
dec
push
jl
fsubl
cld
out
test
mov
cmpsb
cmp
mov
cmp
xchg
sub
sub
rorl
push
and
dec
mov
push
ret
pushf
jb
sbb
sub
dec
call
repnz
mov
jae
jae
loop
xchg
test
pop
mov
or
imul
out
loopne
fdivrl
lret
mov
loopne
sti
pushf
mov
insb
pop
sahf
popf
jbe
rol
cmp
pop
out
adc
jbe
jmp
bound
cli
sub
xor
or
aad
push
cltd
cmp
les
dec
jecxz
mov
push
push
into
outsb
sub
js
sub
push
mov
add
ljmp
inc
ficompl
and
cli
popa
clc
sub
daa
mov
out
je
rolb
adc
jno
outsb
test
std
mov
es
das
dec
inc
fxch
ja
int3
pusha
mov
fwait
xor
je
sub
pop
insl
sub
stos
arpl
push
inc
cltd
pop
jno
inc
clc
push
cltd
cmpsb
and
movsb
jns
scas
je
aam
jb
ss
sub
aas
dec
or
dec
pop
jecxz
xchg
sub
test
sub
arpl
push
jnp
cmc
outsb
loop
jg
mov
mov
mov
jb
popa
aas
stc
sbb
mov
adc
or
sbb
pop
roll
mov
fistpll
in
xchg
inc
pop
leave
push
push
test
loop
and
cmp
jge
aam
repz
cmp
jecxz
mov
cmp
xchg
enter
stos
dec
fcoml
and
add
outsl
mov
push
jns
imul
push
int3
shr
test
cmc
movsl
in
sbb
cmp
jne
and
leave
add
cmp
sub
dec
jecxz
rcrl
sbb
lods
ss
lock
rorb
mov
enter
cli
sbb
mov
cld
pop
pop
mov
inc
pop
mov
xor
sub
aas
clc
xor
icebp
cli
sbb
shlb
shufps
add
sbb
test
add
leave
into
fistpll
outsl
mov
mov
ds
outsl
mov
pop
fsts
mov
xchg
sbb
sbb
and
adc
xchg
inc
mov
jmp
or
ret
mov
bound
xor
test
pop
jge
sub
in
ljmp
cmp
push
mov
inc
dec
pushf
add
hlt
fistpl
call
pop
out
cmp
rcll
or
repz
js
cs
leave
sub
lret
cmp
outsl
loop
in
dec
or
imul
add
jle
fsubrs
testl
inc
shlb
xchg
and
or
mov
adc
jmp
push
nop
test
lcall
cmp
and
push
mov
push
mov
lock
mov
int3
mov
shl
push
and
arpl
iret
aaa
into
decl
push
insb
push
jecxz
movsb
mov
testl
and
stos
inc
push
add
pop
repz
ret
jl
movsbl
icebp
mov
call
xchg
ljmp
or
and
fisubl
es
xchg
movsl
icebp
div
push
rorb
adc
repnz
enter
push
cltd
xor
xchg
sub
cmp
imul
insl
cmpsl
rclb
push
push
out
xor
cmp
mov
test
enter
stos
dec
arpl
mov
call
out
test
js
xchg
dec
les
sbb
fldl
js
insl
in
sbb
call
jecxz
loop
mov
dec
ja
mul
lds
je
or
push
ja
mov
jnp
test
mov
or
testb
adc
sub
push
je
mov
pop
cmp
xchg
add
in
scas
mov
orl
or
clc
je
popl
imul
fsubs
dec
adc
pop
or
insb
pop
add
ret
loope
mov
pop
cmpsb
inc
icebp
jne
sub
into
arpl
subb
mov
ds
cmp
pop
cmpsb
cmp
decb
shlb
aaa
fsubrp
adc
rcll
repz
stos
and
or
mov
dec
adc
and
sub
dec
inc
pop
mov
js
adc
stos
shlb
fwait
scas
lods
int3
inc
insl
sub
push
fidivl
sar
leave
dec
and
mov
mov
pop
xlat
pop
fwait
loopne
mov
out
aaa
push
clc
out
scas
lahf
cmc
mov
fstpl
jl
sub
hlt
insl
cmp
xor
hlt
or
and
xor
mov
xor
add
fiadds
inc
or
popa
pop
xor
pop
pop
jbe
push
push
jmp
ret
or
fdivrs
or
push
ja
je
shlb
push
xor
and
ja
fbstp
xor
movsb
adc
repz
sahf
cmp
mov
stos
iret
inc
jecxz
inc
cmp
cltd
xlat
icebp
movsl
pop
xchg
rcll
inc
push
push
int3
mov
inc
je
imul
lods
fsubl
fstpt
jns
lcall
pop
hlt
add
dec
dec
in
fbld
out
mov
jno
fidivrs
add
dec
sarl
mov
or
mov
insl
pop
or
cmp
data16
cli
mov
pop
stos
and
movsb
push
mov
jecxz
cmp
push
mov
js
out
int
or
rol
jbe
inc
ss
iret
iret
and
leave
test
push
nop
fcoms
ficompl
add
loop
sub
stc
ds
dec
add
inc
jne
sbb
jns
paddsw
pop
cli
inc
xchg
xor
or
jp
sbb
jle
sub
ja
inc
test
xchg
fwait
and
mov
sub
ss
int
and
push
rol
lret
jmp
sbb
loope
in
jb
out
xor
pop
scas
jg
scas
enter
ret
fiadds
pop
mov
and
nop
jns
or
or
xchg
sub
fwait
add
shrb
xchg
mov
push
int
clc
fsubrp
and
xor
xchg
pop
cmp
sbb
cmp
aaa
jecxz
data16
frstor
out
pop
rcrb
cltd
cmp
mov
dec
dec
mov
mov
or
or
push
dec
int
add
inc
lahf
mov
pop
mov
pop
ljmp
cmp
xchg
adc
push
mov
sbb
imul
fwait
outsl
or
loopne
insl
inc
es
inc
mov
mov
mov
ret
das
aas
jecxz
sbb
cmc
cmp
push
lods
cmpl
sub
int3
fld
in
ret
jae
andl
sbb
fs
cmp
bound
mov
inc
test
clc
cmp
push
pop
in
popf
mov
push
idivl
pop
sti
push
lock
ja
mov
loop
aas
pop
xchg
outsl
push
push
xchg
sbb
scas
push
hlt
fldt
cs
movsl
push
ficompl
repnz
clc
xchg
scas
cmc
lcall
popf
out
mov
push
mov
lcall
in
cmc
pop
icebp
enter
fisttpll
sub
sub
insb
pop
mov
mov
push
in
jnp
data16
mov
sti
mov
pusha
jp
test
mov
dec
nop
iret
lret
inc
cwtl
pop
out
leave
ljmp
jnp
pop
mov
add
cmp
jnp
pop
jb
aas
cld
push
cs
mov
repz
push
ret
mov
mov
imul
jp
subb
fisubl
and
xor
adc
xchg
adc
inc
mov
fisubl
dec
pop
das
jle
addr16
int
jmp
pusha
xchg
jp
pushf
mov
add
aam
xchg
pop
push
dec
push
ljmp
ljmp
pop
mov
pop
sbb
mov
jae
jp
jne
pop
popa
pop
xchg
add
lcall
mov
sub
aas
mov
rol
lds
fwait
xor
in
xchg
aaa
cmp
lock
inc
or
test
out
stos
scas
add
test
adcb
loopne
cmp
push
in
sub
and
inc
loope
repz
sub
fcompl
add
outsl
ror
pop
add
gs
jl
or
aaa
push
mov
add
imul
scas
push
fldenv
lds
cli
loopne
sbb
lret
or
and
push
xchg
pusha
mov
incl
aad
loopne
int
test
ja
nop
popf
stos
ret
add
push
sub
xchg
xchg
mov
and
sub
imul
cwtl
pop
sbb
hlt
ret
add
jns
xchg
cld
mov
lods
inc
repz
ret
adc
dec
test
push
pop
cmc
cmp
sub
xchg
pop
jg
push
jecxz
lock
ret
leave
dec
dec
dec
cli
xor
jmp
stos
lock
pusha
pop
xor
or
mov
lret
mov
into
pop
mov
jno
mov
jbe
mov
mov
cwtl
jle
cmp
xchg
mov
xadd
out
jle
ret
lret
and
sti
adc
xor
xlat
lcall
movsl
pop
stos
mov
inc
addr16
scas
roll
jmp
sub
aad
aam
sub
aam
xor
dec
cmc
inc
std
jmp
mov
mov
outsl
push
and
mov
dec
jp
mov
adc
fnstcw
cld
xchg
sub
adc
or
pop
mov
stos
xchg
xor
stc
stos
rorb
mov
inc
fmull
and
bound
rolb
cmp
jno
cli
mov
jg
mov
mov
sbbb
in
push
and
call
and
loopne
cmc
mov
push
and
testb
scas
xor
sbb
xor
es
and
inc
pop
bnd
stos
repz
xchg
jns
les
movsl
in
xor
dec
pop
mov
addr16
jg
xor
std
and
pop
and
aaa
into
mov
fcoml
inc
sbb
pop
xchg
or
inc
adc
pop
scas
loop
cltd
jo
ljmp
insl
loope
xor
enter
mov
lret
mov
decb
xorb
lods
sarl
jp
ljmp
push
xchg
jae
les
lds
mov
dec
adc
test
dec
stos
xchg
outsb
jae
cmp
pop
test
jae
pusha
movsl
in
xchg
pop
scas
aas
repnz
movsl
imul
fldcw
push
xlat
outsb
mov
jo
mov
xor
sti
fnstenv
jl
mov
dec
inc
arpl
mov
sbb
testb
mov
imul
sbb
ss
aaa
push
cmp
iret
hlt
popf
je
push
gs
roll
or
or
xchg
aas
movsl
xchg
xor
and
aas
pop
aad
pop
cmpsb
cmp
jnp
mov
fs
inc
push
repz
aaa
hlt
cmpsl
jnp
ds
call
mov
outsb
xchg
clc
inc
pop
or
insb
inc
daa
mov
mov
repnz
fsubs
out
lods
inc
sbb
pusha
cmp
leave
jo
dec
lock
testl
xchg
xor
dec
enter
lods
lahf
enter
notb
cwtl
insl
fbstp
inc
pop
dec
xor
out
in
xchg
int
cmp
or
pop
push
jle
out
divl
mov
fmuls
and
nop
int3
movsl
dec
mov
loopne
xor
int3
aaa
dec
mov
lods
outsl
and
imul
pushf
mov
or
adc
aas
sar
popf
mov
pop
sbb
ss
lods
add
arpl
data16
imul
shlb
xchg
inc
mov
imul
and
fwait
cmp
pop
and
lods
push
and
push
in
fucomp
xor
inc
jg
xor
fildl
add
into
icebp
dec
ja
mov
jl
cmp
mov
fidivrs
ljmp
dec
sub
negb
hlt
jge
jge
mov
xor
push
jbe
xchg
mov
push
xchg
movsl
mov
cli
outsl
jns
cmp
xchg
dec
dec
fistpll
negl
xchg
xor
mov
int3
ds
inc
outsl
mov
dec
xchg
mov
movsl
adc
out
iret
data16
push
jno
push
in
jl
push
cmp
pop
xchg
cmp
dec
mov
lea
addr16
incl
lods
pop
neg
sbb
inc
lret
stc
jge
sub
iret
popw
inc
mov
popa
inc
xchg
xor
mov
movsl
jns
fsubrl
iret
dec
call
fwait
in
or
and
add
rcrl
int3
pop
inc
cmc
lods
mov
ljmp
leave
imul
push
push
pop
loopne
pop
loopne
pop
lahf
jle
test
rcrb
test
ret
movsl
xlat
ret
nop
pop
push
shrb
or
gs
insl
add
jne
aam
sarb
adc
daa
lret
adc
xchg
sbb
and
or
out
dec
loopne
ds
cli
out
xor
sbb
sbb
mov
push
clc
or
cmp
mov
and
sahf
push
dec
jmp
mov
xchg
sbb
sahf
dec
test
xor
and
add
mov
dec
and
mov
push
out
lods
inc
xor
leave
jne
dec
jecxz
mov
lock
nop
enter
rcll
push
lahf
inc
and
pop
sub
mov
test
ficoms
lock
stos
in
mov
stos
push
jecxz
xchg
jnp
sub
in
das
dec
ret
cli
insl
shll
sahf
mov
or
push
lea
cmp
and
repnz
out
stos
jns
pcmpeqw
sub
mov
cwtl
testl
mov
pop
or
lret
xor
in
fs
jno
rcll
test
cmp
sbb
and
inc
into
jg
xchg
jnp
and
adc
lret
mov
ficoms
arpl
sub
mov
outsl
test
leave
outsl
shll
and
push
adc
loop
jne
cmp
test
lahf
je
sbb
jbe
or
mov
cmp
dec
popa
mov
rclb
lods
add
pop
rol
lods
xor
and
fcompl
and
fnsave
cltd
fld
pop
or
in
pop
adc
negb
sar
push
xor
dec
xchg
pop
rol
rol
fldenv
insl
adc
aaa
jmp
cli
dec
repz
xchg
dec
and
js
mov
cltd
roll
push
xor
xchg
not
dec
and
xlat
ds
sbb
or
in
test
jl
fsubl
ret
adc
xor
rcrb
jae
inc
arpl
mov
leave
xor
fdivrs
add
cli
xchg
xchg
pop
xor
cld
mov
jb
pushf
xchg
mov
push
stc
aas
xor
js
std
push
jg
jno
xchg
pop
mov
sarl
ret
pop
mov
andl
pop
cli
xchg
dec
cmp
mov
aaa
std
xchg
sbbl
les
cmpsb
jne
add
hlt
push
add
and
dec
aam
scas
ret
cmp
sbb
inc
insb
rcl
xor
out
in
push
mov
xor
into
push
inc
dec
cwtl
or
push
push
iret
sub
ja
push
out
fisttpll
call
out
lea
hlt
or
and
movsb
test
roll
call
js
pop
stc
sub
ljmp
adcb
loope
lods
jg
push
rcrb
mov
jne
cltd
mov
pop
sbb
les
outsb
sub
push
mov
or
xor
inc
repnz
mov
and
pop
pusha
fnstenv
mov
sbb
sahf
push
pop
dec
incb
add
sbb
inc
push
push
sub
jmp
movsl
mov
sub
mov
cmp
xor
fsubp
cmp
mov
mov
or
add
and
jnp
or
test
push
sbb
push
fcomip
ret
push
aam
repnz
pusha
dec
dec
roll
jns
mov
jmp
pop
add
pop
lds
scas
test
int3
mov
pop
fsubp
jno
pop
jle
xor
mov
mov
and
sub
push
movsb
xchg
sub
xor
outsl
xor
push
jge
dec
pop
in
mov
push
sub
lret
je
jmp
call
mov
pop
jg
xchg
scas
sub
jb
xor
push
fnstenv
mov
clc
loope
mov
xor
dec
push
imul
sub
xor
imul
inc
add
add
fdivrl
cmp
mov
stos
cltd
cmp
shll
std
and
mov
dec
test
dec
cmp
push
lret
sub
iret
iret
loope
cmpsl
adc
push
test
jb
je
ret
sbb
das
push
jbe
push
aas
mov
mov
adc
cmpsl
ficoms
in
fwait
imul
mov
mov
loopne
mov
lock
mov
or
mov
loopne
and
decl
push
push
and
cld
fcoms
or
scas
mov
inc
lahf
addb
jmp
adc
cmp
inc
sub
sbb
sarl
cmp
mov
mov
adc
es
fsubr
mov
push
sbbl
sub
fnstenv
cmp
mov
rorb
jp
addl
dec
in
and
fistps
repz
jne
pop
jae
xor
push
lret
push
inc
mov
stos
mov
xor
jl
sbb
mov
sahf
xchg
sub
scas
scas
outsl
jno
mov
mov
imul
sti
and
mov
inc
pusha
addr16
imul
mov
outsl
jnp
out
sbb
jmp
mov
mov
xor
or
pop
jecxz
test
mov
jmp
pop
lods
sbb
and
shl
add
ret
stc
cmp
sub
in
aad
stc
pop
inc
out
les
xor
sbb
xchg
es
arpl
jecxz
or
lods
xor
test
xchg
xchg
ljmp
out
out
test
pushf
xor
sbb
mov
push
lock
sti
pop
add
xchg
rcrb
clc
popl
push
sub
push
mov
dec
icebp
mov
and
pop
ss
inc
inc
sbbl
xlat
jbe
pusha
xor
rcrl
add
push
push
aaa
mov
mov
fnsave
ror
push
pop
shlb
rcll
js
cmp
sbb
jbe
dec
cmp
aam
mov
jle
cmpsb
lock
int
mov
xchg
inc
shl
inc
andb
int
adc
mov
cmp
sahf
push
push
fsubrs
jbe
push
xor
xor
scas
push
bnd
js
ljmp
push
ds
pop
and
inc
loope
mov
mov
and
fadds
pop
xor
push
movsb
push
loop
dec
jl
aam
mov
sbb
rol
mov
push
outsb
cmp
mov
push
mov
cmc
lds
mov
filds
mov
stos
jg
ret
xor
dec
pop
adc
loopne
mov
fdivr
shll
rcl
jge
loopne
dec
pop
add
dec
sub
rorl
xchg
sub
add
test
jg
mov
jnp
or
sbbb
lock
mov
clc
or
push
or
cld
or
push
push
jnp
dec
test
into
std
push
add
xchg
mov
rcll
mov
add
in
add
dec
pop
pop
imul
std
mov
or
cmp
int3
iret
inc
xlat
cmc
pop
xchg
mov
lahf
popf
xor
jns
xor
frstor
sbb
jge
iret
cmp
enter
pop
or
jmp
insb
popa
clc
mov
inc
je
sbb
or
and
xor
aas
push
or
es
aaa
xor
fldt
sub
sub
inc
pop
mov
loop
sbb
xchg
jne
cwtl
jg
jp
int
jbe
scas
xor
cwtl
inc
cs
push
pusha
bound
cltd
mov
sub
sub
cmp
into
pop
out
lods
gs
iret
repz
add
aaa
mov
stc
mov
sarb
cmc
xchg
sbb
cmp
pop
lods
aad
pop
jnp
mov
aas
clc
adcb
fstl
sub
lods
and
push
xor
lahf
push
mov
stos
and
cmpsb
mov
cmpsl
ds
inc
pop
cs
fisttps
sti
pop
mov
in
jp
and
push
add
testb
cmp
jnp
or
mov
jb
dec
jae
and
sbb
lahf
cmp
mov
mov
es
cmpsl
jg
xor
icebp
lods
xor
nop
testl
fildll
dec
sub
rcr
fidivl
ret
pop
fdivs
dec
pop
repz
adc
cmp
mov
adc
and
fs
lds
push
stos
aam
std
ret
out
sub
cwtl
xchg
movsl
ja
jno
xchg
jo
movsb
fs
mov
xor
add
jbe
jbe
leave
rcll
pop
or
dec
mov
addl
cs
jnp
inc
jbe
test
mov
fnstenv
push
adc
test
push
xor
sahf
push
popa
movsb
scas
mov
mov
fcoml
push
xacquire
pop
shrl
aas
inc
mov
icebp
mov
pop
repz
lret
jp
sbb
hlt
sbb
and
and
les
mov
hlt
mov
xchg
jns
push
lcall
popf
xchg
sbb
dec
out
addr16
xor
shrl
dec
cwtl
daa
xor
out
std
cmp
inc
call
rolb
jo
sbb
fsubrs
push
push
xchg
xchg
imul
sbb
push
lcall
call
cwtl
mov
mov
mov
cli
mov
jbe
icebp
push
push
pop
xor
mov
mov
fadds
in
iret
jecxz
sub
pop
das
and
xor
mov
fnstenv
rol
fmulp
xchg
xchg
ds
xchg
xor
lock
and
hlt
pop
pop
cmp
aad
or
pop
cmp
fcomip
sbbb
jb
rol
in
inc
mov
fadd
xchg
mov
mov
shlb
and
mov
xchg
mov
push
clc
aas
push
rolb
sub
push
jno
aam
push
dec
arpl
mov
int
shrb
and
or
inc
add
mov
adc
fs
push
inc
push
sbb
or
cmp
shl
jecxz
or
jo
xchg
mov
sbb
sarl
inc
push
rorl
jbe
fisubrl
dec
pushl
iret
or
mov
xor
dec
mov
inc
imul
fnstcw
je
xchg
ds
mov
shll
add
mov
in
cltd
adc
sbb
pop
pop
add
ljmp
out
arpl
mov
stos
jo
mov
and
out
mov
aaa
test
gs
jecxz
sarl
rcrb
test
cmp
cmp
cli
mov
xchg
mov
and
pop
push
fwait
pop
jne
ja
mov
js
or
jmp
jl
add
mov
aam
es
clc
cmp
pop
add
pop
xor
inc
sbb
mov
add
xor
jle
dec
fistps
inc
push
or
test
ret
mov
stc
mov
sub
mov
cs
pop
aaa
jno
cmpsb
out
ja
pop
std
xchg
dec
imul
xor
in
mov
push
pop
pop
lcall
nop
leave
aaa
into
mov
cmp
scas
stos
or
insb
subl
mov
decb
jo
sub
jno
test
lock
fmul
int
add
std
test
shrl
rorb
shl
arpl
std
imul
pop
jae
mov
xchg
mov
fiadds
push
cmp
test
lret
dec
add
outsl
cli
mov
rcr
push
insb
jle
loopne
or
ret
push
or
xor
fists
mov
or
dec
call
fstps
hlt
mov
aam
sbb
ds
pop
and
ljmp
pushf
out
mov
pop
scas
dec
mov
mov
sbb
cmpb
arpl
xchg
dec
hlt
adc
insl
jge
bound
and
les
push
ficompl
dec
andl
sub
pop
xchg
mov
fnsave
pushf
movsl
add
outsl
push
outsl
mov
lods
adcl
je
mov
cltd
sbb
idivb
adc
bound
in
jo
adc
call
add
jo
test
dec
aam
lea
or
sbb
and
stc
or
shl
push
rol
xor
daa
into
push
fcomps
insl
stos
stos
test
xchg
xchg
jnp
jl
int3
rcll
gs
ljmp
jmp
fsubrl
popf
push
mov
inc
pop
xchg
mov
clc
and
jmp
cmp
and
leave
pushf
dec
adc
rcll
out
mov
inc
lock
xchg
add
outsl
jmp
pop
jecxz
mov
inc
cli
inc
movsl
xorb
lods
add
sbb
adc
cld
aam
test
pcmpeqd
lret
or
ds
out
fnstenv
sub
testl
aad
pop
lds
leave
test
mov
icebp
fistl
loop
scas
xor
add
out
cmpsl
lea
or
cld
fistl
xchg
push
dec
pop
inc
push
or
rcrl
xchg
xchg
cs
mov
xor
sbb
sbbl
scas
lea
mov
cmpb
sarl
scas
pop
inc
mov
dec
hlt
out
and
cs
xor
sub
inc
jbe
fwait
scas
inc
or
notb
arpl
xchg
in
call
jne
enter
cmpl
push
xchg
pushf
iret
loope
aas
or
adcb
popf
dec
adc
ret
movsb
jae
fisubrs
xchg
cmp
in
push
xchg
in
flds
jl
sub
out
pusha
dec
fnstsw
jecxz
es
jecxz
cld
mov
hlt
test
jnp
inc
outsb
and
pop
imul
xchg
fbld
xorl
or
jnp
fldl2e
mov
lcall
and
xchg
cmpsb
bound
cltd
imul
inc
and
mov
mov
xor
popa
xchg
sub
xchg
xor
adc
loop
xor
testb
icebp
mov
push
mov
dec
mov
repnz
sahf
scas
xchg
test
test
lea
popf
pop
inc
dec
daa
add
outsb
out
jne
adc
mov
daa
or
lret
js
and
xchg
mov
inc
movsl
pop
and
cmp
inc
fdivp
jle
inc
mov
popa
clc
jg
mov
rdseed
hlt
pop
jno
dec
not
insb
cmp
adc
mov
push
rol
and
mov
insb
std
into
cmpsb
pop
or
test
pusha
xor
js
test
cltd
sbb
push
and
sub
in
jl
mov
adc
push
outsl
popf
cwtl
outsl
out
push
sub
mulb
xor
inc
jg
sbb
shll
dec
lret
aam
and
mov
push
inc
fldl
adc
ss
aaa
jle
cmp
repnz
add
mov
lods
dec
and
push
add
push
loope
je
jg
push
mov
adc
loopne
scas
movsl
mov
xor
ss
bound
pop
add
jmp
rorb
sub
outsb
push
mov
or
push
adc
ret
add
call
test
in
cld
and
push
andb
pop
test
xor
es
mov
mov
imul
mov
add
xor
mov
frstor
mov
inc
lret
xchg
imul
fs
mov
adc
in
aam
mov
mulb
ret
fiadds
jp
and
sarb
cli
in
sbbb
leave
jb
dec
push
mov
cwtl
cmp
call
cmpb
sbb
sub
mov
icebp
leave
aas
ret
inc
icebp
fld
fsubl
mov
mov
ret
sub
inc
xchg
into
adc
or
jge
mov
out
pop
filds
adc
mov
cmp
faddl
xchg
jae
lods
out
push
jmp
js
mov
cmp
sbb
rorl
repnz
sub
fwait
or
cld
push
sbb
ss
sbb
xchg
repnz
pop
sub
out
add
xchg
xor
jge
lds
ret
scas
mov
dec
test
inc
iret
cs
jne
inc
and
leave
cwtl
call
lahf
in
jo
ja
mov
in
cld
shrl
loopne
aas
dec
xor
addr16
xor
inc
fdivr
or
xchg
lods
in
sub
cmp
dec
or
and
mov
mov
lret
add
sbb
daa
and
add
jl
subb
cld
xchg
cmp
inc
faddl
and
data16
sahf
out
dec
push
in
cmp
or
lahf
or
dec
jno
inc
or
jmp
pop
xchg
mov
stos
sarl
filds
inc
movsl
push
add
in
fiadds
push
rcrl
pop
repz
dec
shlb
loopne
and
mov
mov
ds
jmp
push
jecxz
adcb
dec
dec
loope
cmp
orb
dec
pop
mov
jns
std
stos
inc
and
adc
inc
mov
xor
sahf
push
add
dec
sub
pop
imul
repz
frstor
pop
lods
push
out
in
pop
hlt
push
push
pop
lods
jae
loope
mov
add
add
rcrb
data16
xor
in
pop
dec
mov
xor
pusha
dec
xchg
mov
dec
xor
outsb
mov
loop
inc
add
ljmp
mov
push
idivl
jnp
dec
jne
repnz
push
ja
adc
xor
lret
cli
mov
out
into
popf
iret
and
dec
loope
pop
pushf
gs
ficoml
movsb
stc
popf
jecxz
cld
sbb
cmp
jle
jae
push
mov
je
or
jno
jge
shr
repz
into
jo
movsl
add
push
fsubl
xor
std
push
mov
mov
mov
cmp
shlb
je
pusha
scas
sahf
aas
iret
iret
jno
loopne
jns
and
push
cltd
mov
fnsave
dec
loopne
push
cld
xchg
movsb
mov
mov
cld
and
cli
sub
mov
out
pop
mov
into
pop
cs
push
adc
dec
loop
insl
push
sbb
dec
call
mov
push
fwait
pushf
xor
xchg
pop
ds
stc
pop
shlb
pop
mov
dec
pop
icebp
iret
mov
hlt
enter
sahf
push
repz
jb
mov
push
nop
ljmp
es
out
sub
outsb
xor
je
pop
adc
fimuls
call
das
add
stc
add
add
push
mov
pop
repz
add
sbb
insb
out
jmp
test
fldcw
cmpsb
xchg
mov
sub
pop
stc
or
shll
imul
inc
sbb
test
xchg
jp
push
mov
or
cwtl
mov
out
xchg
mov
out
add
ja
sahf
repz
mov
in
clc
cmp
lret
not
push
lods
or
push
jp
loopne
rclb
mov
mov
mov
xor
fsub
out
xchg
ret
jnp
or
pop
loope
fdivl
jp
sbb
xchg
dec
or
dec
mov
push
sti
sbb
jb
dec
sub
xchg
daa
jnp
lahf
lods
dec
or
push
sub
andb
sbb
vmwrite
dec
ret
jmp
push
sbb
adc
mov
cmp
or
cmp
or
fs
sahf
mov
inc
lock
inc
dec
ss
mov
es
push
call
push
mov
pop
push
mov
xor
pop
aas
pop
mov
pop
mov
push
sub
mov
sub
inc
into
fidivs
stos
adc
and
mov
mov
lods
cmp
inc
pop
add
pop
or
lea
pop
mov
lret
leave
xchg
scas
testl
mov
in
push
sub
mov
fucompp
repnz
out
js
lea
mov
and
cmp
inc
addr16
mov
imul
mov
sub
mov
scas
jmp
ret
mov
outsb
add
test
shlb
pop
mov
adcb
subb
pop
jl
repnz
movsl
sahf
xor
mov
xchg
rcr
insb
jl
sti
push
sbb
fnstenv
jnp
cmpsl
dec
repnz
inc
stc
inc
add
pop
and
fucomi
fiadds
daa
add
jne
fisubl
dec
pop
push
adcl
les
xor
jle
dec
xchg
jecxz
stos
fs
jno
lret
push
inc
stos
scas
add
ret
fbstp
and
dec
jbe
adc
sbb
das
mov
shll
aad
or
mov
pop
testb
hlt
jne
adc
jnp
imul
sub
loop
fcmovu
push
mov
arpl
lret
ljmp
popf
xchg
dec
push
fildl
inc
data16
xlat
outsb
test
jge
xchg
inc
cmc
adc
call
test
das
ret
xor
sahf
push
sub
pop
sub
call
or
pop
sti
cmp
sub
jecxz
lret
dec
push
xchg
add
sub
cmpsl
fwait
dec
jmp
add
push
cmp
xor
testb
mov
mov
fs
jl
pop
scas
push
loop
or
es
ds
xor
leave
push
stc
xchg
mov
push
stos
cmp
pop
out
pop
insb
aaa
loope
cmp
mov
cmp
jge
sbb
outsl
cmpsb
pop
arpl
jbe
repnz
xchg
xchg
enter
dec
movsl
sbb
ret
lods
jge
scas
int
inc
js
mov
pushf
popl
dec
call
xor
adc
or
cltd
sub
fs
push
fstp
aad
cltd
mov
xor
stc
sub
subb
icebp
mov
in
pusha
cmpb
sbbl
ljmp
out
daa
and
cld
data16
jnp
or
in
ret
inc
in
mov
shl
mov
sub
xor
mov
adc
pop
inc
mov
popa
clc
aad
in
ret
jle
mov
dec
dec
lret
and
dec
sbb
pop
in
orl
fdivs
xchg
inc
pusha
xlat
ficomps
lods
in
ljmp
stos
test
mov
addr16
xchg
xor
pop
cli
adcl
inc
jmp
fstps
jge
cli
loop
sub
mov
adc
enter
cltd
ret
mov
add
rorb
mov
push
jo
inc
ret
and
js
insl
decb
lcall
inc
push
and
mov
mov
sahf
jg
stc
mov
sbb
pop
out
mov
push
lret
lea
out
nop
loopne
dec
mov
add
aaa
mov
sub
mov
iret
lds
mov
add
shrb
testb
lcall
xchg
adc
call
pushf
xchg
and
leave
or
jg
imul
imul
dec
inc
jg
dec
lahf
scas
dec
push
push
testb
jp
iret
mov
scas
in
pushl
adc
and
mov
lods
inc
enter
mov
pop
dec
lahf
rcr
cmp
or
out
out
sub
icebp
xor
xchg
mov
push
xor
pop
sub
xchg
jl
add
aad
insl
xchg
push
mov
pop
and
xor
addb
and
mov
push
push
sbb
mov
fs
sub
mov
sbb
int3
pop
jecxz
ret
add
push
in
and
fimull
cmp
push
insb
xchg
or
in
and
pushf
pop
sahf
add
test
lahf
dec
loope
fsts
imul
add
xlat
pop
and
les
xchg
push
sub
out
scas
mov
xchg
xor
sbb
mov
fsubr
xchg
sti
mov
out
cmp
lea
dec
mov
cmc
test
push
in
xchg
leave
jl
enter
aas
jg
sbb
popa
mov
popa
into
xchg
mov
inc
pusha
lea
mov
lds
add
lahf
aaa
mov
cltd
mov
sbb
xor
pop
mov
mov
xchg
enter
adc
ss
out
cmpsb
jmp
leave
pop
cmp
push
sbb
add
rcl
cmp
out
decl
xor
jle
push
mov
adc
ja,pt
mov
rorl
jae
icebp
jge
dec
scas
adc
les
ss
es
cmp
es
bound
or
insb
adc
sub
mov
cmpsl
stos
sahf
fldz
ret
clc
or
idivl
mov
incl
movsl
mov
jmp
or
or
sub
sysret
lods
mov
xor
push
mov
jl
and
test
jp
pop
jle
inc
sbb
and
push
icebp
jbe
pop
test
sub
fnstenv
arpl
out
shll
push
ja
fdiv
sub
push
dec
push
pop
repnz
sub
lcall
icebp
inc
mov
pop
cmp
aam
not
loop
or
jno
xchg
push
or
mov
dec
loopne
mov
ljmp
cltd
stos
idiv
in
and
add
pop
push
xor
pop
xor
aam
inc
std
lret
movsb
inc
adc
mov
and
lods
lods
loop
aam
into
xor
sbb
pop
xchg
and
movsb
lds
jne
mov
mov
cmp
out
pop
hlt
sub
cmp
les
std
inc
stc
jne
sbb
jecxz
adc
dec
lret
inc
fwait
pushw
push
cmp
lock
lret
flds
add
fwait
mov
or
xor
lods
xor
sbb
ds
push
out
mov
mov
dec
inc
cltd
out
adc
fldenv
mov
mov
mov
subl
insb
adc
roll
jbe
and
push
sbb
add
or
sub
xchg
push
rcrb
inc
rcrb
push
in
inc
dec
loopne
mov
fwait
rcrl
push
out
adc
rcr
mov
xchg
push
mov
mov
xor
les
dec
push
fnstcw
stc
pop
jl
mov
insl
loop
icebp
cmp
lods
push
cmp
into
pop
mov
stc
int3
jge
cmc
sub
sahf
ds
xor
sarl
adc
jl
and
cld
scas
sti
add
insb
popf
add
pop
hlt
adc
subl
sbb
jae
lods
cmp
sbb
aam
dec
fsubrs
adc
insl
mov
dec
jmp
xchg
ret
push
into
xchg
cmp
xor
dec
mov
xor
arpl
and
mov
dec
mov
and
jmp
inc
mov
pushl
inc
jnp
filds
push
pop
repz
shlb
add
lods
and
rclb
pop
dec
push
inc
xchg
repz
adc
pop
iret
sbbl
add
sbb
cmpsb
imul
movsb
and
dec
xor
mov
fildll
inc
enter
dec
jg
loope
add
dec
mov
add
push
adc
and
test
jp
mov
jmp
push
xorl
push
movsl
push
cltd
shrb
rolb
xchg
imul
repnz
movsb
push
in
aad
jle
adc
lods
jle
xor
jg
cmp
pushf
sub
jno
pop
and
sub
or
imul
xor
or
inc
inc
shlb
xchg
mov
das
out
pusha
jns
sahf
inc
hlt
sub
les
aam
sub
inc
cmpsl
data16
arpl
lahf
or
cmp
into
arpl
mov
sbb
mov
or
fs
in
xchg
repnz
lcall
dec
sbb
repnz
or
hlt
sub
mov
in
daa
aad
jmp
icebp
sbb
lahf
je
push
out
in
mov
adc
sahf
ret
mov
sub
sbbl
test
dec
cltd
fnstcw
lret
cli
pusha
imull
adc
test
sbb
or
dec
repz
fucomip
in
dec
fst
test
pcmpgtd
inc
jecxz
xchg
inc
jae
aam
rcrb
cmp
pop
mov
push
adc
dec
dec
jo
pop
cwtl
adc
loop
mov
shll
sub
lret
int3
jecxz
pop
xchg
xchg
xor
pop
cmp
imul
sarb
sti
xchg
push
shrl
stos
dec
pop
mov
xor
xlat
add
hlt
inc
aam
fwait
out
xchg
push
push
das
sarb
std
jecxz
push
and
faddp
jge
sbb
adc
mov
jmp
ds
lret
mov
add
push
xor
pushf
sbb
inc
pop
out
jmp
idivb
ljmp
adc
int3
inc
data16
jb
xlat
mov
ret
mov
leave
lcall
dec
lods
out
dec
or
shrb
sbb
cltd
in
mov
xchg
cmpsl
ret
cmc
pop
test
decl
dec
mov
jecxz
loope
fsts
xchg
cmc
out
rcrb
xlat
repz
mov
hlt
pop
jo
test
nop
out
out
sbb
inc
jmp
add
scas
dec
inc
fwait
and
repnz
outsb
stos
dec
stos
cmp
add
jns
pop
jnp
adc
inc
xchg
hlt
mov
lret
movsb
cmp
enter
cmp
out
sbbb
into
outsl
jne
mov
loope
and
xchg
push
push
ja
das
dec
shlb
stc
sahf
add
push
sahf
jmp
push
gs
mov
cmpl
insb
iret
push
sbb
popf
lods
xlat
mov
iret
jo
insb
mov
mov
je
fwait
add
mov
mov
mov
and
or
cmp
push
xor
les
cmp
fisubl
aas
fcoms
xor
aad
cltd
js
dec
into
mov
in
inc
push
rorb
clc
addr16
fbld
adc
cwtl
cmp
sbb
adc
sub
sub
mov
repz
movsl
and
push
nop
lahf
idivl
int
int
jnp
and
js
mov
push
or
inc
mov
fidivs
xlat
jecxz
cli
test
enter
dec
cmc
mov
repnz
pop
or
push
lock
mov
sub
das
inc
pushf
dec
in
test
jecxz
into
adc
mov
push
test
pop
repz
dec
fidivrl
and
mov
popa
jp
fsts
or
shll
test
clc
or
aam
pop
hlt
cmpsl
or
jecxz
rolb
inc
sub
leave
ret
or
cltd
jbe
ljmp
ljmp
clc
jmp
xor
sub
mov
xor
cmp
dec
rolb
call
ljmp
shll
add
ja
mov
cwtl
jge
notl
lea
mov
xchg
bound
sbb
push
mov
mov
mov
sub
rcll
ss
aaa
imull
in
fisttps
or
ficoms
sahf
xchg
xor
mov
jo
inc
inc
cs
bound
test
lret
add
sar
mov
lds
jb
imul
jno
pop
and
inc
fisttpll
fdivp
xor
cli
pop
push
xchg
push
icebp
inc
push
arpl
pop
mov
or
aad
cmp
repnz
push
cli
lret
sub
rcrb
xchg
adc
mov
cmc
ss
mov
xchg
xchg
lods
inc
pop
sahf
jns
xor
and
jb
das
je
jnp
push
lods
jecxz
adcb
insb
mov
push
lea
data16
aam
clc
sbb
push
xchg
add
jp
dec
and
int
loope
dec
adc
push
xlat
mov
fcompl
or
pushf
cld
movsb
jl
aad
pop
mov
push
lahf
sub
dec
mov
bnd
andb
test
jecxz
pushf
scas
inc
into
mov
push
pusha
sbb
bound
and
inc
xor
orl
mov
sub
pop
fdivs
clc
adc
cmpsl
sbb
push
sub
mov
test
dec
pop
or
mov
js
mov
add
push
leave
pop
cmpb
xchg
call
or
dec
lock
movsl
dec
adc
inc
idivb
das
inc
sbbl
xchg
jb
enter
repnz
cli
inc
jl
out
test
fdivrl
adc
int
inc
es
movsb
out
ja
lds
test
mov
scas
out
fsubrl
sahf
xor
mov
cltd
sbbl
roll
fstps
sub
int
lds
jnp
ljmp
fldt
xlat
mov
es
xchg
xchg
mov
shl
sub
in
add
cli
ds
decl
andl
andb
iret
sahf
mov
adc
mov
jecxz
es
aaa
loopne
mov
jb
inc
cmpsb
dec
cmpsb
adc
xchg
sub
cmp
dec
add
or
dec
mov
je
inc
fmul
adc
add
test
mov
loope
cltd
push
push
add
movsl
ss
out
roll
jb
hlt
jbe
jmp
or
mov
cltd
pop
int3
jmp
jmp
arpl
xchg
enter
out
popa
clc
lock
out
iret
jg
xor
sbb
sbb
pop
out
inc
loopne
je
loope
outsb
scas
jnp
sub
add
pop
jns
mov
pop
inc
out
loopne
sbb
jbe
inc
ret
out
xchg
xor
cli
sub
je
or
xchg
pop
fisttps
movd
and
push
in
jno
xlat
dec
enter
sub
push
test
lret
jne
pop
mul
test
and
das
addr16
jl
pop
ljmp
leave
pop
incb
cmp
pushf
push
rol
call
sbb
push
shrb
int
ss
mov
nop
in
hlt
hlt
push
dec
daa
jno
lods
arpl
mov
in
and
adc
mov
je
inc
icebp
mov
push
dec
movsl
mov
fsubrl
xchg
xchg
xlat
lds
pop
out
sub
lock
fbld
nop
cmp
mov
loopne
sub
insl
pop
lods
mov
in
jb
fisttpll
cmpsb
cmp
out
mov
sub
cmpsl
jo
pushf
mov
jecxz
jge
xchg
ret
add
adc
pop
mulb
push
outsb
jno
pushf
xchg
add
xor
iret
mov
mov
sti
test
lcall
cltd
and
imul
and
xchg
sbb
mov
fmull
mov
mov
mov
fstpt
pop
lahf
mov
and
sbb
jl
inc
and
cmp
jg
pop
cmc
jp
scas
jge
cmp
xchg
hlt
lcall
insb
xchg
not
sub
daa
add
mov
mov
mov
fldcw
nop
pop
pushf
mov
cmpsb
cli
and
sub
jle
sub
sub
and
cmp
in
gs
mov
mov
scas
fsts
jae
jo
lock
gs
push
into
jecxz
jecxz
cmp
cld
out
neg
repnz
mov
fcmovne
loope
std
push
adc
and
cli
mov
adc
daa
and
call
leave
xor
jo
dec
jecxz
pusha
dec
fsubrs
bound
aas
mov
jge
mov
or
xchg
fwait
xor
sbb
daa
and
and
ja
xor
mov
js
pop
sbb
leave
ret
je
xor
test
ret
pop
xlat
loopne
jo
ja
xor
out
imul
aam
jbe
dec
pop
mov
fstps
cmc
shlb
cmp
or
icebp
jle
lods
nop
mov
inc
add
bound
insl
cmp
lods
int3
fidivs
push
xlat
sbb
ds
or
push
add
add
lods
dec
fdivrs
aad
mov
aam
mov
pop
cmp
cmp
push
icebp
in
add
xor
jns
sub
iret
pop
insb
fneni(8087
in
cmpsb
fiadds
sti
dec
mov
and
inc
rclb
inc
in
sub
mov
or
aad
jno
push
mov
scas
push
lahf
cltd
mov
dec
mov
mov
xlat
add
mov
and
call
stos
fs
pop
mov
int3
cmp
add
rcll
add
sahf
xor
pop
add
movsb
div
mov
aaa
pusha
sbb
cwtl
sub
repz
mov
mov
pop
shrb
sub
jmp
ds
ret
ffreep
push
inc
popa
xor
or
sbb
ds
or
dec
push
iret
in
push
lcall
and
xchg
jns
mov
cltd
scas
mov
outsl
popf
jnp
out
ljmp
mov
fld
rcr
orb
or
mov
mov
scas
lcall
sbb
lock
mov
mov
cmc
cwtl
sbb
je
mov
mov
int3
inc
data16
fdivrp
xchg
jo
sub
fs
fcoml
adc
mov
and
pop
xor
mov
outsb
in
jo
xchg
push
jno
xor
lock
nop
daa
out
into
fs
scas
nop
idiv
xor
out
pop
mov
repz
cli
jne
xor
pop
dec
in
jae
or
std
mov
ss
push
movsb
aam
fsubs
aaa
xchg
test
sarb
or
xor
je
pop
mov
incl
or
pop
pop
dec
in
jg
int
cld
mov
aaa
sbb
fstpl
movsb
sar
inc
stos
jp
cmc
lea
lcall
inc
cmpsb
adcb
push
fs
push
jo
aad
add
sub
es
inc
pop
jns
mov
ja
bound
lahf
adc
jp
push
or
jno
daa
push
push
and
pop
bound
subl
dec
or
daa
shll
push
sbb
mov
adc
mov
xor
bound
fcoml
fcompl
mov
xchg
sub
gs
add
daa
sahf
pop
ret
add
sub
fbld
xchg
inc
out
cmpsb
scas
nop
inc
add
cmpsl
sub
and
out
and
int3
sub
push
nop
inc
xor
jmp
fbld
xor
xchg
sub
and
add
inc
aas
daa
add
mov
lods
add
fdivrs
cltd
std
fldenv
call
add
icebp
repnz
movsl
mov
test
je
push
adc
push
mov
pushf
mov
mov
in
int3
or
lcall
adc
sbb
add
lock
outsb
adc
xor
mov
and
inc
mov
fs
xor
xor
fcompl
push
push
pop
fnstcw
push
pop
scas
xchg
jae
adc
cmp
dec
aaa
xchg
mov
jl
loop
dec
pop
pop
das
int3
fimuls
xchg
mov
lea
sbb
lret
jge
std
pop
sbb
popa
insb
test
movsb
fiadds
stos
push
outsb
push
mov
test
test
adc
fs
fidivrl
adc
gs
xor
clc
or
sbb
cmp
psllw
jne
cwtl
adc
leave
lods
jae
fldl
nop
adc
sub
sub
es
mov
jp
mov
xor
jge
ss
mov
sahf
jge
or
xor
adc
mov
addr16
mov
les
leave
adc
add
ljmp
xor
int
mov
mov
shr
data16
or
enter
lods
fdivl
cli
in
stc
sti
xchg
sub
add
sub
sahf
cmp
in
mov
cmpsb
mov
push
fnstenv
xchg
aas
lods
gs
sahf
jp
pop
push
lret
jae
cmc
leave
scas
je
imul
mov
aad
adc
ret
push
or
or
and
sahf
test
aas
addb
dec
jne
repnz
inc
shlb
pop
test
and
dec
imul
cltd
je
mov
jg
hlt
js
fdivl
jge
push
scas
sar
inc
mov
cmpsl
xchg
mov
ret
dec
int3
mov
shr
test
jbe
fadd
pop
loope
xchg
fisubrl
jp
js
mov
cli
add
mov
and
pop
lahf
aaa
into
shrb
test
icebp
pop
out
and
scas
inc
pop
scas
je
inc
faddl
xchg
fsubrs
and
inc
push
out
pop
scas
and
fsubrl
stos
inc
out
sbb
insb
loope
outsb
adc
stos
inc
in
sbb
push
in
insl
add
sbb
mov
cmp
insb
es
inc
add
sbb
in
fidivrl
xchg
andl
add
mov
inc
xchg
int3
addr16
in
mov
sbb
xchg
cmp
in
cmc
cmp
jmp
mov
push
jmp
and
xchg
push
in
mov
push
jmp
sbb
push
scas
outsb
push
lods
adcb
adc
and
xlat
jb
cmpsl
add
fdiv
push
pushf
in
je
inc
outsb
cs
outsb
enter
pushf
jmp
sbb
rolb
insb
push
jae
pop
xlat
sub
stos
jle
push
xchg
pop
or
push
add
cmp
in
jge
sbb
out
aam
call
push
fidivl
leave
mov
jnp
mov
xor
mov
idivl
ret
add
mov
inc
jo
pushf
repz
cmpl
clc
enter
add
pop
jmp
es
or
mov
push
cltd
mov
pop
inc
fldt
push
int
inc
rorl
dec
inc
add
ret
cmp
inc
inc
fcoms
popa
jo
dec
movsb
cmp
clc
cmpsl
test
dec
fidivrl
dec
out
stos
push
mov
adc
cltd
jae
lret
bound
outsl
jmp
cltd
lret
daa
mov
js
or
mov
cltd
adc
shl
mov
and
out
fcomp
int3
cmp
push
in
sbb
lods
push
sbb
inc
cmp
leave
movsb
pop
ret
xchg
sub
sub
lods
sub
loopne
sbb
mov
fwait
xchg
je
lahf
fiadds
sub
or
scas
test
xlat
mov
pop
insl
test
loope
inc
inc
movl
shr
pop
filds
inc
jnp
jno
in
rcrl
sub
les
insb
loope
jp
imul
jg
mov
sahf
out
push
or
in
shr
adc
aad
in
inc
cmp
enter
fildll
fldenv
cwtl
addr16
sub
cmp
fwait
jg
stos
mov
scas
adc
mov
jbe
rorl
or
cmpl
lock
jns
cmpsl
testl
test
ja
pusha
xchg
pusha
lods
lds
cltd
insl
fsubrl
insl
sbb
push
lret
or
bound
fs
add
dec
pop
inc
pop
push
popf
lea
outsl
xchg
lods
lods
jnp
push
fildll
ljmp
fisttpl
or
push
push
mov
imulb
lcall
mov
cwtl
pop
mov
divl
sub
loope
dec
xlat
inc
cld
mov
mov
in
in
test
push
shl
idiv
and
push
cmp
enter
es
dec
btc
std
or
pop
jecxz
cmp
cmc
push
mov
test
lret
cli
or
xor
dec
mov
aad
pop
lea
add
pop
dec
mov
cmp
repz
cwtl
mov
push
dec
mov
enter
sub
enter
fstl
xchg
sub
aad
in
sbb
pop
arpl
lods
lahf
je
shll
movsl
push
and
jo
ficomps
outsl
xchg
add
pop
jne
repnz
mov
seta
mov
adc
push
fistps
push
mov
loop
out
leave
jmp
or
push
and
adc
pop
nop
stc
push
shrl
dec
mov
div
jge
fptan
adc
jae
lods
lret
pop
push
cld
mov
cmp
push
mov
jno
stc
test
shll
push
xchg
test
out
cmpsl
add
mov
fsubs
into
mov
clc
outsl
and
rcl
jmp
pop
add
sub
xchg
outsl
notl
mov
adc
enter
push
xor
outsl
or
mov
sar
sahf
pop
add
push
sbb
push
ret
rep
cmpps
pop
mov
jne
cli
lret
mov
mov
popf
in
std
xchg
ss
xlat
addr16
shlb
movsb
sbb
adc
shr
pop
fs
dec
jle
xor
inc
push
aas
daa
jmp
fiadds
jge
inc
xor
cmp
imul
dec
and
xchg
insl
enter
xor
adc
stos
cmpb
fldcw
sub
mov
mov
lds
jmp
xor
xor
pop
roll
xchg
add
adc
int3
ljmp
loopne
mov
push
nop
test
and
pop
inc
call
jle
adc
xchg
cmp
sub
aas
scas
in
add
dec
hlt
cs
fdivrs
xor
divb
or
test
add
out
cmp
mov
lea
ljmp
neg
jp
ret
sbb
xor
or
fisubl
stos
daa
mov
jmp
mov
shll
mov
mov
inc
add
pop
push
mov
xchg
jle
adc
and
fs
mov
push
xchg
movsb
and
or
test
rclb
hlt
mov
popa
inc
nop
xchg
xor
andl
cld
jo
out
lret
pop
jl
cmp
in
inc
lea
jmp
mov
mov
push
pop
test
fstps
dec
aad
jp
inc
pop
insb
mov
mov
mov
hlt
and
mov
outsb
mov
xor
xor
bound
decl
pop
fiadds
and
or
sub
jbe
in
xchg
test
cmp
es
lahf
ds
push
sub
imul
int
jne
xchg
add
int
xor
or
outsb
sbb
jecxz
mov
insb
pusha
negl
out
mov
jmp
jmp
sub
pop
loope
sbb
cmp
pop
bound
clc
xor
clc
sub
outsl
inc
jmp
sub
in
sub
lahf
jns
fadds
cld
xchg
xlat
and
les
xchg
and
push
pop
jmp
push
lahf
repz
test
xchg
inc
xor
xchg
pop
cld
fdivl
mov
fiadds
xchg
xchg
fdivl
push
jmp
cmpsb
aaa
or
scas
push
ficoml
jge
dec
lea
test
fdivl
mov
mov
xor
fsubrl
aad
and
pop
icebp
mov
fidivs
mov
mov
mov
xchg
inc
test
sbb
dec
push
dec
dec
rdmsr
andl
jp
jo
loop
lahf
jmp
lcall
lahf
imul
pop
movsb
imul
ficoml
fistps
icebp
or
xlat
repz
dec
adc
popf
outsl
dec
dec
pop
lock
jno
sub
and
loop
xchg
daa
mov
je
adc
cli
xor
mov
lahf
js
test
push
jne
fldenv
fiadds
push
cwtl
mov
mov
sbb
leave
pop
cmc
lock
lea
sbb
imul
in
fiaddl
xor
test
mov
aaa
push
sub
andl
testb
lods
test
xor
or
icebp
popf
push
mov
add
aas
push
bound
push
dec
mov
inc
imul
leave
and
and
xchg
xchg
fcmovnb
insb
jno
fucomi
and
out
xchg
and
int
out
push
frstor
push
sub
or
bound
pop
sub
pop
imulb
sub
jp
jle
mov
stc
outsl
push
lea
mov
jae
xchg
pop
xchg
cltd
andl
dec
test
andb
or
lret
lods
mov
dec
in
xchg
mov
mov
fidivs
sbb
dec
dec
sub
mov
fildll
inc
push
cmc
jae
frstor
sbb
imul
ss
outsl
adc
jnp
xchg
sub
sbb
and
xor
nopl
shll
and
add
pushf
xchg
cs
add
xchg
or
mov
adc
into
sub
push
or
cmp
jp
push
xchg
sub
push
push
lea
push
in
test
daa
or
mov
adc
shl
dec
ficompl
pop
or
mov
iret
push
jae
xchg
stos
inc
push
sub
repnz
ds
xlat
mov
test
dec
dec
test
sub
jne
jle
test
inc
adc
in
pushf
jle
sbb
cmp
adc
mov
sti
dec
in
pop
jmp
shrb
cld
ret
ljmp
insb
test
inc
mov
and
dec
aam
fdivrs
xchg
fistps
in
stos
mov
xchg
or
mov
inc
jmp
aaa
int
mov
jl
pop
inc
xlat
cmp
out
or
ljmp
sbb
outsb
cmc
nop
sbb
pop
sub
mov
pop
outsb
in
lock
cmc
lea
mov
lea
mov
push
test
pusha
lds
rcrl
bound
xchg
orl
push
daa
xor
in
pop
sub
cmpsb
cmp
mov
cmpsl
ret
mov
rorl
insl
rol
adc
push
push
out
mov
cwtl
pop
cmp
stc
or
es
xchg
cli
xchg
xor
mov
mov
lcall
jl
mov
xor
jg
dec
iret
loope
cs
sahf
aad
dec
pop
sbb
ljmp
pushf
cli
pop
or
or
insb
cld
lret
and
sub
mov
inc
jo
scas
out
shrl
popl
div
xchg
insl
xor
mov
push
insb
xorl
arpl
pusha
mov
push
push
lock
icebp
cmpsb
cli
lea
inc
jmp
test
sbb
hlt
inc
and
xlat
or
movsl
out
jecxz
dec
lcall
push
popf
pop
shrl
test
sub
jnp
cmc
call
push
push
in
movsb
sbb
dec
lds
sub
sbb
test
push
xchg
dec
pop
push
iret
call
sub
jns
dec
xor
sub
xchg
idiv
lea
call
sub
sti
or
addr16
nop
adc
push
mov
in
cwtl
stos
inc
je
dec
mov
imull
pop
testb
out
outsl
dec
pop
notl
lds
addb
adc
inc
shll
cmp
xchg
icebp
hlt
sbb
dec
std
push
imul
in
pop
ret
pop
gs
cmp
mov
aaa
xchg
and
jns
mov
sbb
inc
add
dec
aam
add
jmp
mov
push
sbbb
ljmp
movsb
enter
outsb
inc
cmc
ffree
push
syscall
enter
fbstp
jge
psubb
enter
pop
ficoml
jmp
xor
cld
sub
mov
lahf
out
popf
rcrb
rcl
push
mov
iret
lods
dec
lods
ljmp
outsl
add
arpl
xchg
mov
leave
jns
es
xchg
mov
fldt
repz
and
jmp
adc
fwait
call
push
xchg
stos
loopne
sbb
bound
notl
inc
andl
in
dec
jbe
out
mov
decb
mov
and
push
push
push
ret
and
adc
and
ds
mov
es
mov
pusha
cmpsl
mov
add
mov
jmp
dec
pop
push
inc
sub
push
ficomps
movsb
xchg
mov
outsl
xor
push
insb
jno
adc
shll
adc
das
push
cmp
pop
xchg
xchg
pop
sbbl
pusha
push
mov
sub
mov
push
mov
mov
dec
in
test
pop
inc
pop
pop
cmp
in
ljmp
shll
cli
mov
js
fldenv
adc
xchg
pop
dec
out
cmpsl
loop
inc
inc
aad
fbstp
cld
cmp
and
fwait
cmpsl
jmp
jmp
shlb
enter
pop
pop
in
test
jmp
adc
outsl
jnp
adc
mov
sub
pop
rclb
movsb
loop
xlat
scas
js
call
xor
aas
pop
push
clc
inc
dec
add
adc
jecxz
or
xchg
add
movsl
or
pop
pop
test
sarb
mov
mov
sahf
mov
dec
cs
ljmp
push
cmp
jb
aaa
push
test
mov
adc
mov
jg
push
test
aam
out
xor
test
push
sbb
sub
hlt
mov
mov
jle
jae
iret
dec
mov
jo
andb
ret
push
push
jmp
jnp
cli
subb
ja
insb
ja
jge
xchg
xor
push
movsb
push
push
movsl
rorl
jle
mov
sub
movsl
mov
push
ljmp
cmp
or
lock
js
int
pop
mov
sub
xchg
call
pusha
lds
dec
loop
dec
loope
repz
sahf
mov
mov
adc
and
add
sub
mov
insb
or
mov
push
and
dec
das
aaa
or
ds
fists
pop
sbbl
fs
jg
push
pop
insl
inc
dec
add
aad
scas
jg
jle
push
xlat
lret
imul
or
fsubs
in
fwait
mov
jecxz
mov
mov
pop
dec
mov
fstl
mov
push
mov
scas
divl
pop
dec
cs
xchg
data16
xchg
fdivl
insl
ret
lods
cli
pop
stos
lods
xor
push
push
jge
cmp
xor
ret
jmp
in
or
test
in
jl
cltd
xor
sbb
mov
cltd
fs
leave
in
adc
adc
orl
mov
jle
dec
mov
fcomip
out
pop
sbb
fnstsw
addr16
cwtl
xchg
pop
mov
mov
inc
arpl
sbb
lods
cmp
insl
addr16
and
or
pop
shrb
push
xor
push
scas
outsl
mov
cmp
and
mov
cltd
mov
pushf
lcall
test
push
and
inc
sbb
mov
cmc
mov
push
fdivs
adc
aas
mov
jmp
in
iret
and
fwait
pop
and
xchg
xchg
add
jg
gs
mov
adc
arpl
pop
sbb
jne
fidivl
sbb
mov
xor
pop
lcall
dec
pop
jle
jbe
push
xchg
mov
outsl
push
cltd
test
jg
and
mov
lds
cli
jmp
outsl
std
jns
es
inc
fistpl
mov
mov
orl
js
nop
or
gs
shlb
dec
pop
imul
mov
into
or
pop
pop
pop
insb
mov
inc
xor
mov
aad
montmul
cmpsb
inc
imulb
pop
xor
mov
pop
push
push
mov
jno
inc
sbb
push
jne
cmpsb
sbb
mov
or
into
mov
mov
mov
adc
or
mov
and
mov
bound
data16
push
lock
out
out
fisubrs
femms
fucomip
mov
dec
pop
pop
lret
in
or
lcall
jb
cmpsb
cwtl
inc
sbb
lret
rcrl
sbb
mov
dec
cmp
neg
cld
cmp
push
cmpb
lcall
dec
mov
mov
stc
mov
dec
pop
int3
fdivrs
test
stc
mov
out
mov
adc
or
or
daa
adc
mov
cmp
fs
xchg
das
cmp
adc
cli
sub
clc
inc
lret
mov
sbb
fsts
sbb
dec
push
out
dec
inc
xor
arpl
mov
iret
or
mov
inc
push
push
fbstp
xchg
mov
scas
movsb
aas
dec
andl
xlat
xor
fnstenv
inc
fxch
inc
lock
ds
and
push
iret
outsb
dec
jge
addr16
outsb
movsl
mov
dec
add
es
hlt
scas
push
imul
ret
pop
jp
mov
cmpsb
adc
cmpsb
dec
outsl
aaa
or
aad
mov
sti
jge
mov
push
jo
adc
scas
sbb
das
jmp
mov
popf
cld
jge
movntps
imul
ret
bound
add
ret
xor
push
test
dec
je
sti
xchg
jmp
and
mov
pop
ret
jb
push
mov
arpl
rcrl
repz
xor
pop
int3
mov
lds
or
jge
and
cmp
div
arpl
or
mov
aam
cmp
push
sub
push
dec
dec
sbb
shlb
xchg
inc
mov
pop
stos
hlt
or
mov
sub
stc
int
jl
nop
js
test
xchg
dec
fisttpl
cwtl
cs
mov
jg
or
add
mov
stos
idivl
insl
sub
aas
cmpsb
lock
push
pop
pandn
xchg
sub
or
cs
inc
scas
les
mov
mov
das
adc
mov
cld
push
add
imul
pop
inc
jb
je
jp
jno
ret
clc
jae
xchg
pusha
lods
xchg
repnz
loope
cmp
mov
sub
inc
and
les
add
test
mov
pop
pop
inc
or
test
in
dec
push
movsl
inc
mov
out
and
fwait
ds
xchg
inc
add
fidivl
adc
jae
xor
notb
scas
sub
inc
test
addr16
fld
mov
pop
jmp
popf
in
rol
bound
adc
mov
push
dec
xacquire
cmp
inc
xchg
and
nop
fnsave
xchg
dec
cmp
movsb
loop
pop
lock
pop
rcrb
clc
sbb
pop
rorb
inc
pusha
icebp
cmpsb
jns
stos
in
pop
xchg
add
jge
js
fstpl
pop
mov
fldenv
mov
loopne
ja
pusha
pop
mov
add
dec
cmp
or
aaa
and
sbb
cmpl
mov
lcall
cmpsl
rcrb
pushl
sub
or
cmp
mov
lret
pop
outsb
add
push
out
adc
jg
pop
addr16
pop
imul
sti
je
mov
mov
sub
movb
test
jno
in
adc
mov
fldt
addr16
fcoms
aas
mov
je
lret
popa
and
jne
je
pop
fmulp
or
sbb
jmp
cltd
test
jbe
and
movsb
and
out
cld
shrb
repnz
daa
inc
sub
mov
and
mov
and
adc
push
lea
xlat
mov
jne
sub
pop
and
add
cwtl
push
inc
add
or
fsubrl
add
in
mov
cli
lret
push
aaa
jae
dec
push
cmp
test
dec
jge
mov
push
aam
xor
cwtl
jbe
pop
fs
pop
outsb
jae
cli
sub
cwtl
mov
sti
movsl
stos
mov
les
sub
rcll
iret
jae,pn
adc
jle
mov
dec
out
inc
pop
inc
fsts
mov
or
mov
dec
or
ret
lock
aad
push
cmp
call
testl
xchg
or
hlt
iret
jnp
pop
xor
lret
pop
adc
addr16
addr16
mov
mov
scas
pop
addb
es
cmp
pop
xchg
dec
lret
ljmp
shlb
addr16
pop
pop
rclb
mov
jle
mov
enter
or
xchg
sub
jecxz
mov
or
xor
outsb
ja
dec
or
stos
xor
icebp
mov
xor
scas
jbe
and
sbbl
adc
cli
fnstcw
xor
and
add
and
xchg
andb
call
mov
jae
scas
addr16
into
mov
popf
test
into
movsb
rcrb
fsubl
pop
pop
cmpsl
lds
out
jge
ljmp
data16
fxch
stc
push
mov
inc
lret
inc
out
leave
test
adc
jns
cmp
lods
ljmp
adc
xchg
pushf
and
in
fcomi
popf
xor
pop
sub
mov
and
xor
in
loope
cltd
pop
sahf
stc
cmpl
mov
mov
scas
xchg
mov
push
lds
jb
lods
jecxz
and
and
loope
dec
mov
mov
movsl
ret
lds
xor
inc
or
fwait
mov
insb
es
cs
fcompl
into
inc
cli
bound
and
pop
ret
aas
xor
add
cmp
add
rcl
gs
hlt
pop
filds
cmc
sub
add
in
push
pop
lds
movsl
mov
out
or
jne
loope
jle
ret
pop
mov
loopne
add
mov
nop
gs
xchg
lds
add
aad
nop
imul
xor
mov
fcompl
test
cwtl
loop
jp
inc
and
push
fdivs
adc
xchg
hlt
inc
ljmp
cs
push
xlat
test
add
cmpsb
lods
cmp
xchg
enter
mov
push
cwtl
movsl
sub
lock
xchg
rorb
sub
push
add
stos
pop
clc
je
inc
insb
sub
inc
sti
mov
cwtl
mov
jle
scas
inc
mov
mov
add
fisubrs
fnstcw
in
stos
testl
sbb
jmp
testb
cmp
cmp
and
es
cld
mov
out
xchg
mov
pop
push
mov
push
sub
les
sarl
rol
cmp
hlt
dec
in
int
sbb
sti
mov
xchg
es
mov
xor
fdivl
push
adc
fsubp
adc
cld
xchg
shll
lds
das
mov
and
pop
jecxz
gs
dec
in
cmpl
lahf
insb
sub
dec
and
cmp
push
in
dec
test
push
mov
iret
sbb
int3
pop
into
adc
inc
loope
push
loopne
jp
push
cli
xchg
jns
jmp
jle
addr16
popf
push
inc
sub
pusha
ss
dec
dec
es
stos
xor
mov
fs
sbbl
pop
ss
idiv
add
je
hlt
mov
push
lock
adc
add
shlb
ss
xchg
push
aas
popf
mov
push
daa
outsb
into
gs
pop
mov
dec
jg
stos
mov
cmp
test
out
mov
and
or
inc
jmp
in
jo
pcmpgtw
or
stos
out
jnp
lods
testl
es
xchg
inc
arpl
jne
adc
int3
mov
jmp
scas
aam
ljmp
mov
dec
xor
pop
cmc
jp
jl
data16
rorb
xchg
xchg
xor
movsb
cmp
push
mov
cmpl
gs
mov
addr16
or
xchg
lret
bound
push
in
mov
and
lcall
std
in
sbbl
dec
sub
push
jge
jge
mov
lret
out
std
push
popa
fwait
sub
jg
jge
jb
or
cmp
movsl
cmp
imul
test
xor
pop
bound
mov
mov
insb
outsl
push
sahf
out
sahf
pop
rorb
jno
sub
lock
inc
fldl
stos
dec
ja
jnp
push
jle
add
cltd
clc
mov
xor
popf
push
fcoms
or
mov
pusha
pushf
sbbb
xchg
shrl
pop
pushf
xor
mov
push
out
xchg
sub
jmp
push
fldcw
sahf
lcall
push
in
inc
fidivs
shrl
xchg
gs
lds
mov
and
cmp
and
inc
pop
lock
jg
jae
std
xchg
movb
mov
fldt
shrb
int
pusha
mov
mov
fistl
stos
adc
in
test
xor
sbb
shlb
test
stos
or
test
sub
movsb
stos
jle
mov
leave
pop
hlt
dec
jne
add
cmp
dec
and
sbb
ret
clc
int3
adc
enter
inc
dec
outsl
sub
cmp
mov
adc
inc
popa
fdivl
bound
mov
in
mov
in
cmp
cmp
cmp
popf
xor
pop
or
mov
shl
arpl
and
dec
out
dec
fwait
xor
mov
lahf
xchg
and
in
ljmp
cmp
jp
pusha
adc
mov
lret
call
adc
pop
push
sbb
es
jmp
inc
sbb
push
sbbb
fimuls
lahf
push
icebp
dec
in
sbb
xchg
dec
cld
sahf
xor
push
ljmp
push
add
lcall
inc
ficomps
and
out
xor
xchg
sub
in
push
in
and
or
sub
xor
and
lcall
mov
enter
jp
arpl
mov
xor
data16
and
int3
arpl
mov
adc
and
mov
sub
testb
add
xor
testb
xor
sub
les
mov
lahf
loope
push
ja
pop
popf
xor
stos
adc
sbb
lods
jne
clc
ss
test
fucomi
pop
out
sbb
lea
test
mov
mov
and
adc
cs
inc
fisubrs
inc
cmpsb
cmp
daa
mov
xor
sti
cmpsl
sub
add
imul
outsb
add
and
xor
jo
cmp
cmp
sub
hlt
iret
sub
xlat
outsb
sub
hlt
rcrl
data16
aad
mov
sub
hlt
imul
aad
push
ljmp
out
sub
cltd
xor
add
xor
cmp
jecxz
or
lcall
xchg
push
mov
xchg
idivb
add
jmp
pop
sti
cmp
out
xchg
mov
mov
dec
fsubrs
cmp
jb
lods
ds
mov
push
popf
jp
sti
xchg
imul
push
out
aaa
fidivs
cmp
jl
mov
push
in
ret
pop
out
xor
popa
cmp
push
call
ds
mov
fldl2t
mov
cli
xchg
jo
dec
out
cmpsb
sahf
xor
jmp
testb
test
fstp
mov
data16
jp
dec
loop
scas
cmpsb
cmp
stc
testb
inc
push
jbe
xchg
dec
mov
ret
clc
testb
adc
xor
push
mov
arpl
push
into
mov
ja
out
and
pop
sahf
cmp
emms
pusha
jge
xchg
xchg
loop
leave
mov
mov
ljmp
ss
and
mov
sbb
sbb
stc
nop
aaa
inc
lret
push
adc
enter
shr
ss
stc
sbb
pcmpeqd
movsb
adcb
mov
sbb
sub
sub
dec
out
jge
inc
lahf
adc
push
sbb
sti
xchg
daa
cmp
mov
jb
xchg
sub
enter
adc
xchg
sbb
cmp
push
inc
fnstcw
mov
repnz
xchg
mov
mov
fdivr
xchg
or
sahf
xor
inc
sub
rclb
xchg
repz
or
or
adc
inc
test
pop
filds
adc
repnz
jl
or
fidivs
sub
lock
mov
insb
rcll
testb
xor
dec
fisttps
addl
pop
loopne
fcoml
cmp
and
mov
ficomps
insl
xchg
cmp
fisubrs
add
out
pop
jno
pop
mov
mov
daa
sbb
pop
mov
fxam
jb
xor
rorb
pop
cltd
mov
es
push
test
lcall
push
xor
jge
lods
ret
dec
sahf
add
shrb
jne
icebp
movsb
mov
lock
xor
js
stc
dec
mov
cmp
idivb
and
xorb
mov
leave
popa
pop
je
ljmp
jecxz
sub
insl
or
mov
xchg
mov
xor
and
in
adc
aas
pop
rep
or
pusha
cmp
mov
fildl
lds
fbstp
mov
shl
imul
imul
xor
cwtl
aaa
into
int
mov
inc
in
and
xchg
inc
aaa
into
jne
xor
in
sub
iret
cmp
iret
pushw
pusha
adc
mov
out
ss
or
aas
lods
mov
and
mov
aad
in
pop
aad
add
cs
out
pop
lods
stos
and
int
jle
loopnew
push
shll
in
shl
ret
or
clc
mov
rcll
fisubrs
divb
loop
fistpll
aas
repz
int
out
push
mov
adc
xor
imul
mov
divb
fwait
call
or
add
popf
in
icebp
ss
hlt
fnstenv
in
xchg
mov
std
test
in
movsl
outsb
mov
sti
je
loope
sbb
xchg
cltd
dec
sub
mov
outsb
mov
out
sub
sbb
sbb
imull
cs
enter
ficoml
pop
xchg
dec
jecxz
xchg
mov
addl
lods
addr16
fdivl
cmp
fistps
inc
xchg
cmc
mov
cmpsb
jns
xlat
push
cltd
jecxz
lahf
bound
ja
testl
out
add
xchg
or
sbb
loop
cmp
jle
push
setnp
pop
lock
or
cmp
sub
push
clc
and
jno
dec
popa
and
xor
jmp
xchg
cld
cmc
scas
les
or
xchg
testl
loopne
mov
jns
mov
shrb
sti
or
sub
mov
inc
cltd
sbb
lcall
ljmp
stos
ss
stos
aam
cmc
fsubp
and
ret
repz
pop
mov
lahf
jne
std
sub
in
shlb
bound
aas
cmp
push
mov
out
lahf
std
out
xor
mov
pop
add
and
push
jns
pop
notb
cmpsl
insb
movsb
jb
jg
out
xchg
mov
stc
imul
adc
adc
mov
mov
adc
mov
or
xchg
pop
mov
pop
xor
xchg
lea
push
imul
jg
pop
popa
stos
dec
pushf
cld
xor
dec
push
rcll
jmp
sub
inc
lds
mov
insl
sub
sahf
sub
xor
insl
cwtl
mov
roll
mov
outsl
adc
mov
popfw
je
js
jg
xor
pop
divb
xor
bound
cmp
jbe
add
xchg
and
fdivl
stc
xchg
sahf
xchg
arpl
pop
xchg
addl
cmp
jns
scas
xor
ds
shll
sahf
xchg
cwtl
dec
ret
sub
pop
mov
dec
add
inc
outsl
jne
dec
push
and
pop
inc
test
xor
loope
jne
inc
cmp
or
test
jo
div
xor
push
mov
inc
jmp
je
dec
jmp
jno
lea
xchg
jb
scas
dec
sbb
js
outsl
ss
dec
jg
sbb
push
pop
cli
outsl
push
cli
xchg
push
nop
addl
and
cmp
push
mov
sub
cmp
and
xchg
push
push
xchg
cmp
push
adc
mov
gs
imul
stos
js
fnstsw
loopne
nop
dec
les
test
lods
xor
sub
ja
sbbb
or
dec
sub
xchg
xchg
cmpl
lea
adc
fsubrs
fst
xor
add
fs
leave
sub
or
das
mov
pop
lret
mov
testl
fsubr
push
faddl
mov
mov
rcll
xlat
cwtl
shlb
aas
ljmp
or
mov
lahf
xchg
icebp
or
setnp
testb
cmpsl
dec
sar
repz
mov
xlat
idiv
and
int
sbb
lret
jle
aad
sbb
rol
sahf
aam
add
out
adc
into
out
nopl
lea
dec
xchg
jmp
mov
mov
in
nop
xchg
mov
lret
push
xlat
jg
aam
mov
ret
out
daa
hlt
sbb
pop
jae,pt
lods
pop
fisubl
jecxz
sbb
stos
and
dec
jl
cwtl
das
mov
fdiv
xor
push
lahf
xchg
fwait
mov
push
adc
jle
xchg
mov
inc
mov
std
lods
jbe
fadds
pop
enter
mov
sti
push
rorb
imul
out
lods
pop
notb
gs
push
cmp
insb
add
ds
jo
rolb
add
xor
mov
cli
popa
fadds
push
adc
lret
ljmp
loopne
repz
icebp
lds
lret
les
les
lock
push
mov
pop
push
test
inc
bound
gs
push
lret
out
sbb
repz
and
jp
aaa
push
push
lods
pop
dec
rcrb
les
rcll
inc
loop
push
dec
push
adc
hlt
xchg
cmpb
pop
mov
pop
add
shlb
stos
jbe
clc
and
xor
xchg
into
iret
aas
rclb
shrl
movb
and
bound
nop
adc
ds
xor
call
addb
out
sahf
pop
leave
aaa
movsl
and
mov
ljmp
dec
aam
lods
inc
mov
mov
mov
in
cmpsb
cmp
xchg
push
int
jecxz
jge
movsl
or
mov
xor
into
adc
sbb
adc
clc
push
mov
imul
lea
out
xchg
jns
mov
cmp
mulb
aaa
lea
out
mov
clc
lret
bound
jno
adc
sarl
push
testl
add
mov
stos
sbb
imul
or
inc
xor
outsl
lods
aaa
mov
int3
add
popf
mov
aas
jmp
cmp
bound
cmp
mov
fcoms
dec
mov
cltd
mov
lods
shlb
dec
loope
xor
sbb
addr16
push
mov
pop
dec
push
sarl
jp
adc
jns
insb
cmp
xchg
pop
arpl
andb
jnp
sub
xchg
jl
add
mov
cs
int3
inc
lds
push
add
int
lds
int
shlb
outsb
inc
xlat
rorb
xchg
pop
test
cmpsl
cmp
cmpsb
jecxz
add
add
rorb
adc
jge
nop
mov
jno
dec
jecxz
xor
repz
in
lret
int3
xor
jbe
xor
cmp
movsb
testl
mov
and
and
imul
fwait
dec
jg
jns
add
stc
cmp
or
paddb
shr
lods
jbe
movl
mov
lahf
shrb
sbb
xchg
arpl
or
lret
shr
and
lret
shrb
clc
iret
jmp
mov
int
xchg
mov
jo
mov
add
out
stc
daa
lods
mov
shrb
cmp
dec
jne
inc
enter
jge
sub
ret
mov
sub
stos
jge
mov
sbb
pop
out
xor
jno
fnsave
mov
cmp
inc
dec
pop
rclb
or
pop
scas
bound
repz
sub
loope
mov
in
inc
lods
push
leave
and
push
jge
mov
nop
decl
jl
or
xchg
js
test
adc
sub
outsl
push
pushf
jg
cmp
das
loopne
and
push
pinsrw
stos
in
jge
out
push
aam
sti
ret
push
ds
fisubl
rcrb
loop
movsb
popf
movlps
jecxz
mov
jo
sbb
dec
shl
cmp
xor
mov
and
sub
pop
adc
addb
gs
mov
and
cmp
in
sarb
mov
cld
cmc
mov
sbb
scas
cmp
xor
or
sub
adc
outsb
xchg
fdivs
out
mov
js
ljmp
push
lret
cmp
mov
fistl
lfs
mov
pushf
xchg
mov
out
test
dec
rorl
dec
in
sbb
cmp
loop
shll
add
test
mov
pushf
in
movsl
mov
popl
int
je
jg
inc
mov
fisttpll
mov
stos
fists
loop
mov
movl
fstl
inc
lods
sarw
xlat
es
mov
push
xchg
sub
popa
sub
adc
cmpsl
xor
fmull
sbb
in
fildl
outsl
shrb
es
and
pop
int3
mov
sub
pushf
push
lret
ljmp
xchg
push
jo
subl
mov
test
test
mov
sbb
mov
cmc
adcb
enter
inc
movb
mov
push
mov
inc
pop
cmp
jle
xchg
mov
sbb
mov
push
jo
popl
sbb
jl
fmuls
push
mov
xlat
int
into
ljmp
lods
test
cld
pusha
test
cmp
dec
in
xchg
mov
adc
mov
lock
mov
ljmp
mov
push
cmp
ja
dec
xchg
nop
inc
mov
push
adc
imul
add
sarb
mov
sbb
inc
mov
and
fs
aad
xchg
cwtl
xchg
or
sarb
test
adc
push
filds
push
pop
ds
negb
in
xchg
jle
enter
or
lahf
loope,pt
mov
das
fsubrl
dec
jg
or
xlat
xor
xor
test
inc
inc
lcall
je
mov
sbb
mov
dec
sub
scas
push
push
repz
gs
or
xor
cld
jmp
iret
push
pushl
mov
add
cmp
cmp
nop
and
dec
test
and
cmp
fidivrl
ljmp
aam
mov
pop
je
rorb
adc
mov
fs
xchg
outsb
cmp
mov
insl
je
mov
sub
mov
imul
pop
jns
loop
dec
dec
out
pop
and
cmp
cmp
mov
fistps
ljmp
push
xor
das
adc
or
dec
cltd
xlat
mov
iret
mov
xchg
js
fstl
mov
sub
cmp
push
mov
ljmp
ror
cmp
in
mov
sub
jmp
dec
rol
in
sbb
loopne
inc
adc
fimuls
imul
cmp
cmp
enter
push
out
xor
xchg
xlat
push
push
mov
test
pop
pushf
fcoml
cmp
push
mov
pop
or
inc
je
xchg
sub
icebp
sbb
push
cld
inc
fistpl
mov
adc
movsl
outsb
xchg
xor
sbb
or
scas
sbb
je
cs
shlb
fistps
cmp
xlat
or
loop
xlat
outsb
repnz
and
fisubs
mov
jno
adc
mov
cmpb
xor
in
sub
fdivs
subb
js
inc
je
jae
movsb
insl
or
push
scas
adc
push
into
stc
xchg
jb
aas
out
and
cmp
iret
and
inc
fidivs
cmp
ds
push
test
sub
lea
dec
mov
icebp
les
sub
out
mov
jle
push
adc
test
sahf
orl
jb
jb
or
aam
loope
aam
jge
in
inc
aad
fndisi(8087
aaa
adc
mov
fldl
in
or
mov
inc
test
sti
out
and
push
fadds
xchg
das
imulb
int3
test
lock
or
xchg
jne
les
push
or
mov
hlt
or
mov
cmp
aaa
add
pop
xchg
test
push
subl
inc
adc
adc
out
subl
xorl
ret
addb
in
xchg
ljmp
or
adc
xor
sti
xor
push
in
or
xor
push
lahf
dec
sub
xor
orb
ret
je
cmp
adc
stos
pop
inc
in
das
pop
xchg
jo
push
inc
shrl
aaa
inc
int3
jg
mov
fmuls
icebp
outsb
ficoml
rolb
test
cltd
test
mov
call
inc
addb
inc
jp
push
mov
lret
push
ja
mov
push
and
push
inc
dec
aad
push
sub
int3
add
and
mov
dec
loope
data16
xor
in
sub
pop
es
pushf
xchg
testl
push
mov
mov
arpl
out
mov
cmpsl
mov
lods
add
jecxz
mov
xchg
clc
ficoml
ret
add
jecxz
adc
in
adc
popf
imul
ss
sub
cmp
in
jb
loope
push
fidivl
push
push
into
or
fldt
in
mov
xor
in
das
fiaddl
or
adc
into
and
bts
sahf
cld
xchg
mov
stos
push
aam
xchg
fwait
xor
sahf
aaa
or
ret
aam
pop
ljmp
data16
data16
loop
pop
les
pop
xor
add
pop
into
inc
lods
adc
adc
ror
cmp
out
add
repnz
and
ret
clc
pop
ror
push
mov
xor
mov
lods
inc
dec
sbb
add
add
popa
push
testl
cli
sub
xchg
sbb
inc
lods
xchg
mov
aaa
or
dec
jecxz
push
in
xor
adc
mov
leave
pusha
repz
jp
sarl
mov
pop
icebp
mov
cld
pop
lea
hlt
mov
adc
data16
adc
pop
divb
icebp
sub
out
lods
leave
ss
jmp
adc
sarb
mov
les
mov
popf
test
jae
cmp
xchg
call
loop
xchg
leave
or
dec
movsl
cmpsb
cmp
and
mov
fildl
fdivrl
aam
pop
fdivs
add
int
pop
cmp
fwait
and
adc
push
js
pop
cmc
shrl
fmuls
out
mov
or
or
int3
xchg
js
xchg
xchg
shrl
movsb
dec
icebp
in
mov
push
into
pop
dec
lods
jg
adc
mov
lret
inc
dec
add
sub
dec
test
jb
jne
mov
mov
shrb
mov
mov
int3
jae
pushf
dec
rclb
in
jae
fs
loope
movsl
repnz
and
xchg
jae
inc
mov
pop
pop
dec
out
cmp
fwait
mov
aam
adc
aaa
in
push
clc
inc
fsub
xchg
and
add
and
sbb
shll
leave
out
in
mov
push
in
cmp
jmp
flds
ljmp
xor
hlt
cmp
mov
and
stos
adc
cmc
test
and
mov
insb
mov
lret
std
dec
cltd
fucomip
pop
add
mov
cmpsb
add
mov
fwait
xchg
push
add
xchg
jns
sub
int3
sarb
and
call
mov
in
addl
adc
adc
mov
sbb
jecxz
pop
mov
repnz
icebp
push
mov
mov
cmpsl
cmc
out
out
pop
mov
leave
add
fldcw
in
sbb
nop
inc
mov
fs
aad
aam
je
jne
jmp
subb
mov
mov
ret
mov
ljmp
mov
sahf
jle
sti
es
ja
test
and
seto
rclb
aam
xchg
xchg
adc
je
lret
lock
xor
xor
inc
cwtl
int
push
mov
pop
push
adc
sbb
mov
pop
cmp
movsb
insl
ds
mov
mov
js
les
cltd
aas
icebp
push
dec
scas
popa
insl
mov
fdivp
and
mov
aas
movsb
mov
mov
enter
push
push
cmp
xchg
ficoml
hlt
mov
inc
xor
jne
lock
dec
jg
push
pop
sbb
dec
push
pop
hlt
int
jns
xor
jecxz,pn
push
mov
daa
pop
inc
mov
pop
and
jae
dec
loopne
xchg
inc
mov
subb
mov
das
add
repz
xor
flds
aas
pop
lret
imul
mov
lds
mov
mov
in
in
sbbl
xor
add
sub
jg
gs
xor
imul
xchg
dec
fs
push
inc
sarb
popa
push
fists
xor
das
jae
xchg
pop
sub
xor
add
nop
jge
mov
gs
dec
in
daa
movsl
push
jb
cli
xor
lea
gs
scas
xchg
std
adc
rorl
cs
mov
repz
int
outsb
mov
into
lret
pop
mov
mov
sti
and
flds
and
shll
divb
cmpl
gs
jno
inc
sub
inc
shll
popf
cmc
lock
out
andl
loope
xchg
mov
jge
cld
push
in
xchg
ror
inc
aam
loopne
je
mov
xchg
test
mov
lret
test
or
out
aam
lea
push
imul
jg
add
test
out
out
out
and
lret
mov
and
fnstenv
ret
cmpsl
pop
loope
or
imul
mov
sbb
decl
cli
cmp
repnz
lock
test
fnsave
bnd
mov
pushl
cmpsl
cmpl
in
movsl
cltd
mov
movsb
lods
jo
mov
adc
sub
add
cwtl
and
or
jmp
pop
cltd
xor
and
es
sti
xor
lret
jnp
loop
or
test
sbb
orb
ljmp
add
ja
and
mov
aam
mov
inc
mov
jle
gs
sbb
orl
pop
repz
add
out
jnp
adc
dec
jmp
pop
mov
int3
arpl
xchg
aam
mov
xchg
dec
mov
and
pusha
movsl
outsb
push
clc
pop
xor
mov
and
iret
fisubs
inc
iret
cwtl
lds
and
push
dec
push
loope
jge
push
les
xor
jb
ja
les
mov
cld
jo
loopne
inc
into
rcrb
out
mov
lds
pop
adc
xchg
sbb
call
pushf
add
int3
cli
icebp
imul
push
stos
out
cli
xchg
add
xor
scas
xchg
pusha
leave
and
es
jae
lret
xor
movb
jecxz
inc
enter
in
mull
xsha1
cmpsb
dec
and
inc
jbe
push
or
mov
sarl
mov
movl
or
sbb
ds
xchg
pop
or
fcomps
or
loope
out
pop
mov
mov
jo
int3
mov
sbb
mov
or
imul
icebp
addr16
inc
mov
into
sub
arpl
loope
test
push
inc
sbb
pop
mov
sti
xchg
jg
cwtl
xchg
add
addr16
pop
imul
lahf
jns
enter
adc
in
xor
adc
jb
mov
or
sbb
ljmp
inc
xchg
lcall
jl
jp
and
mov
int3
loop
mov
mov
and
xor
pop
push
in
sbb
dec
mov
cmp
sti
sub
xchg
cs
aaa
fisubl
xchg
inc
ljmp
stc
lock
jb
lea
pop
into
mov
fistl
out
sti
xchg
push
rolb
add
sbb
cmc
push
mov
xor
push
xchg
add
pop
in
pop
imul
xchg
stc
jno
mov
mov
arpl
pop
arpl
hlt
mov
add
mov
repz
clc
xchg
sarl
pushl
daa
push
incl
sbb
scas
dec
inc
sbb
insw
or
xor
sti
pop
nop
push
add
pop
adc
xor
pop
cmpsl
cmp
lret
mov
sbb
iret
jb
stc
adc
xchg
mov
cmp
mov
repnz
inc
fadd
add
aam
mov
add
sbbb
iret
push
cli
or
mov
dec
xchg
or
and
sbb
dec
pushf
push
mov
jae
jecxz
xchg
mov
fstps
xor
jecxz
fcoms
cmp
pop
loop
push
movsl
inc
test
imul
test
xor
jae
sbb
mov
inc
sbb
push
dec
call
fidivs
cmp
subb
xchg
repnz
sahf
mov
loopne
mov
xchg
xor
arpl
popa
clc
mov
jbe
cmp
jg
or
sub
mov
dec
jecxz
mov
push
add
xchg
stos
or
lods
cmpsb
std
sub
cs
dec
dec
loopne
sbb
dec
mov
jo
sahf
repz
inc
mov
inc
inc
cltd
rcrl
lret
bound
mov
std
xchg
jno
or
ret
pop
es
adc
ss
out
addr16
cli
xor
push
sbbl
or
cs
pusha
std
mov
data16
aad
test
movsb
stc
nop
sub
mov
sub
shrb
fdivrp
fwait
push
ljmp
jno
pop
jb
sbb
mov
inc
lds
rcrl
lret
bound
insb
fbstp
cmp
subb
xchg
icebp
mov
sahf
mov
fisubs
rcll
mov
out
call
or
cmp
jg
push
pop
xchg
sub
daa
popf
xor
mov
dec
loop
mov
imul
and
push
test
push
lods
movsb
sti
sub
sub
xor
testl
ljmp
jno
pushf
icebp
xchg
lock
movsb
cmp
scas
inc
inc
xchg
ret
fs
arpl
mov
xchg
outsl
or
mov
rcrl
mov
cmp
adc
pop
out
add
xchg
mov
sbb
sub
sub
pop
mov
dec
loop
pusha
imull
push
call
mov
out
test
repz
fldenv
or
lock
xchg
ficompl
mov
fs
jecxz
sub
rcrb
imul
push
pop
testb
pop
hlt
fdivrs
sbb
int
cmp
push
cltd
std
loopne
mov
out
ja
jnp
push
lds
int3
lret
stos
inc
push
lods
pop
lock
addr16
lret
lahf
ss
push
jne
sbbb
xchg
dec
inc
xchg
sub
sbb
mov
mov
sarl
fcompl
add
es
popa
dec
mov
sbb
xor
arpl
scas
test
or
xchg
or
jg
repz
mov
xor
mov
jle
mov
aam
xchg
add
pop
ss
loop
call
sbb
fs
cmpsl
jg
pop
adc
or
out
adc
mov
fsubrs
ljmp
imul
test
push
aaa
push
divps
xor
ljmp
push
subl
mov
iret
test
sub
push
in
lret
sbb
nop
xor
add
sbbl
xor
out
std
mov
imul
aam
into
sbb
and
adc
dec
scas
cmpsb
adc
movsl
jp
adc
ss
and
jnp
adc
movsb
cmp
adc
roll
shlb
push
andb
pop
insb
xchg
cltd
push
leave
fbstp
mov
xchg
adc
cmp
cmp
lock
les
jnp
adc
jmp
inc
arpl
std
in
adc
or
adc
xchg
jne
enter
xchg
mov
pop
pop
or
cmpsb
in
xor
cmpsb
xor
pop
or
scas
ljmp
push
fisubs
mov
sbb
cmp
scas
xchg
xor
sarl
lcall
xor
lds
loope
inc
fcompl
and
xchg
and
sbb
inc
jp
jmp
test
shr
js
js
test
nop
push
andl
out
cld
and
push
das
cmp
shlb
clc
test
out
adc
jecxz
test
loope
scas
imul
jbe
and
scas
movsb
xor
adc
mov
lock
sub
sbb
mov
and
pop
sub
cmpsl
repnz
mov
jne
andl
or
adc
sahf
test
fiadds
iret
cmpsb
add
inc
pop
iret
stc
js
jge
jg
outsb
mov
pop
sub
pop
inc
stos
dec
sarb
mov
cmpsl
mov
aam
rclb
sub
shlb
add
cmp
pop
push
cmc
rorl
cmp
lret
in
ds
push
xchg
push
bound
je
rcr
dec
and
das
mov
mov
nop
fmul
xchg
sub
push
push
push
popf
ja
mov
cmp
and
xchg
push
testl
mov
mov
sbb
ss
cmc
cmpsl
popf
out
xchg
dec
pushf
xor
mov
dec
loope
mov
jo
pop
and
cmp
pop
pop
mov
mov
test
xchg
ljmp
mov
pop
es
std
xchg
push
mov
outsl
lahf
ss
jns
inc
imul
roll
in
cmpsb
loope,pt
mov
data16
dec
inc
push
out
jb
test
fwait
xchg
jne
lds
inc
lods
pop
xor
stos
std
out
dec
mov
xchg
adcl
xor
clc
in
pushf
cmpsb
out
and
mov
aas
cltd
aaa
xchg
je
push
sub
nop
cmp
xor
jb
js
sarl
insb
cmp
adcb
arpl
lock
cwtl
cmp
xchg
push
cmp
stos
cmp
adc
int3
push
add
jecxz
sbb
xlat
xchg
inc
mov
add
int3
mov
pop
xchg
cmpsb
fnstcw
int
test
in
cwtl
ds
popf
xchg
into
rolb
mov
pop
xchg
and
push
add
out
cwtl
das
and
push
cmpsl
xchg
mov
ret
vsubpd
adc
js
in
iret
xchg
repnz
push
jecxz
mov
lcall
into
jmp
push
aad
sbb
mov
leave
nop
jmp
faddl
bound
insl
hlt
shlb
lret
push
aas
sbb
imul
and
jl
and
mov
in
shl
enter
and
mov
mov
in
dec
mov
mov
ja
sahf
inc
push
orl
cmp
outsb
adc
mov
jae
push
ret
pusha
bound
ret
push
arpl
lret
mov
push
xchg
mov
ljmp
mov
rorb
inc
adc
addb
aaa
fwait
jg
lret
insl
push
mov
ja
psrlq
call
adc
mov
inc
daa
stos
ljmp
and
in
mov
or
jg
mov
cmp
or
arpl
aas
inc
sahf
inc
subb
popa
aad
jg
ja
add
sarb
push
xchg
push
jge
fbstp
outsb
negb
sub
insl
out
push
negl
hlt
push
sti
jns
lret
outsb
mov
scas
enter
hlt
push
aas
popa
out
jb
sub
xchg
in
outsl
sbb
mov
dec
loop
xor
loop
daa
rorl
imul
out
add
divb
fiaddl
cmp
addr16
add
stos
inc
mov
mov
in
and
jne
dec
leave
arpl
dec
pop
stos
xor
mov
inc
pop
icebp
jae
and
out
pushf
push
out
and
insb
test
ja
jl
popa
mov
scas
and
jmp
inc
adc
hlt
movsl
icebp
jecxz
xchg
fldl2e
and
xchg
clc
jp
mov
cmpsb
sub
arpl
lds
mov
push
mov
mov
add
mov
fwait
cmp
mov
and
push
mov
nop
push
mov
and
divb
lock
mov
test
xchg
inc
mov
push
add
nop
cmp
cmpsl
lea
push
pop
aad
enter
xor
pop
dec
or
mov
sub
movsb
xor
push
dec
lock
jno
mov
insb
movsb
xor
mov
movsb
sub
stos
int3
jmp
pop
mov
loope
orl
lods
scas
push
add
mov
push
cmpsl
movsb
ss
aas
icebp
popa
jge
fwait
aaa
cmp
sub
mov
cmpsb
inc
sete
dec
or
jno
jae
imul
imul
mov
dec
or
into
mov
xor
pop
js
insb
out
lods
daa
and
adc
xchg
cmp
mov
pop
cmp
je
mov
mov
and
cmp
xchg
aas
push
push
add
sub
jg
repz
mov
mov
mov
sti
xchg
sub
aas
mull
ja
fisubl
pop
cli
leave
cmp
sbb
lea
and
cmpsb
aam
adc
mov
push
iret
stos
loope
mov
mov
mov
mov
aas
sahf
scas
inc
shlb
and
push
ror
arpl
je
inc
dec
pop
mov
xchg
mov
decl
push
imul
cmp
lret
push
lret
xchg
int3
adc
ds
or
insb
and
jp
insb
xchg
cmp
dec
in
xlat
lret
xchg
dec
adc
js
xchg
mov
cmpsb
arpl
dec
js
xlat
in
mov
dec
push
faddl
mov
ja
popa
mov
ja
mov
cmpb
and
iret
bound
jg
jp
sbbb
jb
mov
sub
xor
pop
xchg
sub
jmp
jecxz
jmp
ret
stc
jmp
fwait
mov
mov
mov
push
sbb
pop
jecxz
jle
cmpb
inc
lea
arpl
pop
stc
ret
fnstsw
shlb
mov
mov
mov
sbb
mov
xchg
inc
pushf
aad
sub
idivl
out
sub
push
mov
mov
lret
dec
or
movsl
test
in
mov
mov
sahf
aaa
xor
inc
adc
sub
pop
test
mov
test
jmp
dec
or
outsb
out
addb
sub
or
aaa
push
cld
pop
xchg
in
push
sub
pop
cmp
inc
adc
and
xor
cld
lret
mov
mov
jg
push
xchg
in
push
stos
sbb
repz
ja
cmp
into
mov
mov
jae
xor
xsha1
cmpsb
dec
stos
xchg
scas
push
mov
mov
sti
lods
or
sub
movsl
sub
cmp
mov
pop
rorl
ja
mov
push
orl
icebp
pop
mov
lods
or
mov
mov
imul
push
sbb
lods
test
mov
mov
dec
packsswb
sbb
lcall
jge
ds
das
aam
insb
icebp
mov
pop
mov
dec
testl
rcr
loopne
jle
adc
rorl
pop
add
pusha
rorb
mov
mov
movhps
jae
mov
test
mov
pop
in
cmp
pop
nop
or
loope
lods
sub
cmp
stos
sub
xor
push
push
stc
push
add
pop
inc
adc
and
push
or
or
rcr
sub
loop
cmp
stos
jecxz
cmp
mov
aaa
sub
shll
xor
rcrl
ret
cs
push
fnstcw
mov
clc
pop
mov
pop
fisubrs
int3
mov
lds
xchg
sub
ficoms
int
mov
popa
push
add
lods
jno
mov
mov
pop
mov
movsl
out
repz
inc
stos
lock
out
mov
notb
lret
loope
addr16
dec
or
mov
jns
sti
dec
pop
adc
dec
mov
frstor
mov
xchg
inc
movsl
aaa
daa
mov
mov
insb
call
pop
push
adc
cmpsl
test
pop
jl
sub
jo
jge
bnd
or
cmp
and
outsb
add
jno
mov
sub
gs
loop
mov
test
mov
idivb
fildl
add
mov
add
loope
repnz
lods
das
lret
pop
lods
xor
pop
push
add
or
in
les
ss
movsl
cmp
adc
sub
inc
lock
icebp
fst
jns
in
cmovns
out
ss
ja
out
xchg
into
add
cmpsl
das
sbb
mov
les
inc
xchg
fwait
leave
jne
cmp
rolb
xchg
cmp
cwtl
push
rcrb
add
mov
mov
pop
shr
ret
cmc
scas
sub
test
jae
xchg
stos
mov
fld
mov
scas
sbb
cs
cmp
movb
pop
xchg
aad
inc
adc
push
scas
pop
push
mov
cmp
push
clc
fldcw
aaa
push
adc
push
or
push
sub
into
lock
sub
stc
push
mov
movsl
or
testb
sbb
lahf
ja
mov
mov
lahf
cmp
into
lds
add
in
decb
stos
jge
gs
mov
scas
mov
test
sub
inc
and
aas
xor
scas
and
adc
xchg
ficoms
jp
mov
data16
jge
cmp
cmp
mov
scas
das
scas
mov
mov
sbb
xor
les
or
addb
popf
or
pop
pop
clc
add
pusha
icebp
and
jg
cmp
popa
sbb
xchg
inc
les
inc
push
cmpsl
sbb
mov
mov
push
jmp
sub
jp
decb
mov
es
sub
sbb
sbb
adc
xor
aas
xor
jo
mov
scas
popa
push
cli
imul
mov
and
adc
push
sahf
xchg
cmp
mov
rol
push
ret
jae
call
xchg
fwait
xchg
hlt
mov
mov
xlat
test
movsb
aam
mov
scas
sub
roll
sbb
jl
aas
inc
adc
pop
and
mov
scas
jp
mov
push
pushf
xor
sub
insb
repz
arpl
in
or
decb
pop
add
cltd
cltd
inc
xchg
jnp
das
lds
aas
insb
hlt
pusha
out
mov
addr16
test
iret
xchg
inc
push
clc
pop
xchg
inc
or
inc
push
stc
cmp
mov
or
fsubr
jne
mov
mov
repz
push
popa
int
or
and
movsl
sub
faddl
or
sbb
sub
lea
movsl
sub
sarb
push
outsb
idivb
lods
mov
ja
add
cwtl
orb
mov
mov
mov
scas
xor
push
outsb
jb
mov
jle
adc
push
sahf
inc
adc
dec
jle
mov
test
paddq
mov
sahf
inc
pop
sarb
movsb
pop
movsb
rorb
mov
test
mov
cmp
daa
stos
or
sbb
dec
pusha
push
aam
sahf
jge
sbb
lret
mov
xchg
scas
sub
inc
add
in
sbb
std
jge
cmpsb
push
in
mov
nop
scas
daa
jne
negl
imul
ja
out
push
shlb
ss
jnp
test
mov
pop
mov
xor
jle
add
push
int
lcall
popa
outsl
psrlw
push
push
fdivr
pusha
or
std
sti
pop
xchg
ds
mov
sbb
bound
sbb
inc
shll
cmpsl
cmc
or
loop
out
call
es
jno
adc
mov
hlt
cmp
sub
test
stos
cmp
jp
and
ja
bswap
test
mov
lock
pop
sub
jae
xor
pop
scas
and
sbb
and
sti
pop
cmpsb
pop
pop
cli
je
aam
into
imul
adc
lahf
sbb
pop
test
sbb
jo
sbb
fmuls
int3
mov
test
inc
push
pop
adcb
shlb
lods
xchg
adc
inc
mov
pop
add
test
jae
sarl
xor
xchg
push
int
jl
outsl
out
out
imul
xor
xchg
inc
subb
add
pop
sarl
ret
pop
popa
sbb
dec
or
sbb
movsb
cmp
dec
mov
jg
jecxz
std
outsl
inc
or
pop
xchg
cmp
loopne
pop
jecxz
dec
adc
lret
cmp
ficompl
push
aad
into
mov
cmpl
jne
adcl
repnz
sti
and
sarl
ja
addr16
mov
out
test
sub
test
test
stc
inc
or
mov
movhps
ror
inc
and
inc
jl
or
je
push
cld
dec
bound
cwtl
les
and
mov
jno
test
adc
sbb
jo
test
push
mov
dec
xchg
rcll
rorl
outsl
mov
test
shlb
filds
insl
repz
aam
inc
je
dec
xor
mov
lea
fs
mov
mov
imul
sbbl
xchg
ja
fucomip
insb
fistpl
cltd
cmp
orl
movsl
in
repnz
inc
adc
into
add
stc
sbb
sub
xor
mov
inc
xchg
adc
xchg
inc
xor
das
xor
loope
push
mov
hlt
popa
adc
gs
and
dec
test
sbb
mov
jne
sub
cld
imul
push
pop
fidivl
aaa
dec
push
xor
pop
add
jae
mov
stos
leave
xchg
dec
adc
and
fiadds
jo
ret
xchg
repz
push
enter
jnp
pop
cld
jg
mov
mov
lahf
and
fistpll
sbb
jl
arpl
jg
and
rcrb
rcll
loop
pusha
sub
adcb
fidivrs
or
pop
aas
test
xchg
fisubl
push
cmp
ljmp
cli
pusha
inc
adcb
xor
mov
bound
scas
cwtl
inc
dec
cli
or
and
cmp
jnp
sti
arpl
jecxz
push
push
fwait
inc
pop
push
movsl
xor
mov
jg
fwait
lret
mov
int
iret
pop
rcll
les
pop
adcb
adc
gs
inc
push
int
pushf
cmp
adc
pop
sbb
sbb
in
gs
lods
lret
imul
inc
ret
xor
and
filds
imul
rolb
aaa
cwtl
and
mov
cmp
es
xchg
inc
dec
xchg
cmp
inc
ficoml
popf
xor
jb
test
iret
mov
je
iret
xchg
add
daa
aad
dec
or
aad
and
xchg
pop
cmp
mull
or
dec
fwait
adc
inc
cwtl
cmp
mov
pusha
testl
and
outsb
push
insl
out
mov
out
fisubs
enter
repz
test
dec
adc
push
inc
push
dec
fs
xor
inc
cmc
rorl
ljmp
into
xor
das
mov
sub
aam
insb
imul
fcmovnu
test
in
std
xchg
ja
jmp
dec
push
mov
mov
gs
pop
lcall
shlb
aam
sbb
mov
jp
out
imul
ja
nop
xor
xchg
inc
xchg
test
mov
repz
je
popa
cmpsb
lahf
popf
xor
aaa
call
xchg
sbb
int3
pop
dec
cmp
add
inc
pop
mov
ja
and
inc
cmp
inc
pop
test
mov
adc
loop
mov
stc
mov
roll
and
hlt
pop
adc
pop
inc
dec
aaa
cmpsb
cld
sahf
sub
xorb
mov
pop
jns
mov
mov
and
testb
gs
dec
or
lret
cltd
xchg
pushf
cmp
mov
adc
loope
adc
sub
std
pop
xchg
mov
mov
mov
sbb
dec
jle
in
xchg
cmc
lods
push
mov
mov
aad
xor
sbb
mov
pop
stc
jl
push
sarl
mull
jp
in
push
add
loopne
dec
or
inc
xlat
je
push
fwait
movsb
xor
nop
lods
sub
pop
mov
nop
push
and
movaps
cmc
pop
mov
pop
stc
jl
jne
cmpsb
cmc
pop
repz
jg
lea
cmc
pop
inc
jle
and
lcall
push
push
xchg
stos
xor
mov
mov
clc
pop
aas
lret
arpl
inc
adc
mov
sbb
fildll
cltd
mov
es
pop
mov
stc
add
mov
mov
or
jo
cmp
inc
negb
push
pushf
inc
cvtps2pi
scas
cmp
inc
jp
jno
mov
mov
and
imul
cmc
out
adc
push
add
dec
jg
insl
pushf
arpl
in
fisttpl
sar
or
inc
or
imul
clc
or
movl
mull
insl
jmp
out
ret
mul
jbe
mov
rolb
push
aas
lock
jne
out
lcall
sti
lcall
movsb
das
test
inc
repnz
imul
cmp
negb
daa
pop
notl
jno
test
pop
js
sahf
cmp
ret
test
or
cmp
fnstenv
pop
mov
pop
stc
pusha
lahf
aam
jge
shrb
pop
popf
movsb
repnz
jno
and
insb
fildll
xor
mov
daa
test
in
jbe
cwtl
xchg
cmp
lret
ljmp
inc
or
popa
int
sub
cmp
mov
shlb
lret
pop
insl
out
cmc
scas
xchg
inc
cmp
clc
pop
xchg
daa
jo
int
je
pop
sbb
xchg
sbb
dec
cmc
mov
stc
pop
mov
pop
clc
and
cmp
push
clc
cmp
add
jo
dec
inc
adc
or
adc
xor
ja
call
ljmp
addr16
xor
sti
out
and
sahf
inc
inc
lret
call
sbb
and
sti
mov
xchg
mov
cmp
mov
dec
adc
rclb
pop
arpl
push
out
lret
ret
lea
stos
pop
add
mov
jnp
fcmovbe
mov
adc
fisubl
mov
jge
inc
cwtl
add
lahf
mov
mov
inc
add
dec
pop
std
pop
xor
stos
sub
inc
add
adc
ds
push
dec
hlt
fs
mov
shlb
mov
sub
mov
jg
dec
lods
out
imul
xchg
or
lcall
mov
cmp
popa
push
mov
sub
jne
adcl
and
mov
outsb
call
adc
iret
add
inc
jo
jmp
aas
sub
ret
cmc
inc
adc
cmpsb
push
insl
in
in
xor
mov
scas
aam
sub
nop
cmp
in
lods
cmp
inc
mov
mov
dec
or
fldenv
pusha
or
pop
mov
bound
lret
in
mov
jle
lcall
cmp
pop
insl
mov
stos
sub
call
inc
mov
pop
add
jle
fisubrs
push
pop
or
pop
mov
pop
add
mov
arpl
arpl
push
add
fcoms
ret
test
bswap
pop
mov
aas
mov
lods
jmp
pop
mov
imul
inc
int3
lea
xchg
out
das
dec
sahf
inc
pop
test
mov
out
addr16
lea
les
leave
inc
or
xchg
lods
sub
rolb
jl
ficomps
scas
testb
xlat
xchg
mov
jl
sbb
mov
xlat
inc
shrb
cltd
push
clc
jecxz
xchg
mov
decb
push
into
loopne
mov
mov
mov
xor
scas
sub
imul
jae
dec
outsb
jno
cli
and
cmp
ds
out
add
xchg
push
or
mov
cmpsb
pop
lock
in
div
pop
jb
popa
out
arpl
movsb
cwtl
jne
mov
adc
and
mov
leave
stos
mov
bound
lret
and
into
xchg
fstpt
cmpsl
sub
mov
mov
movsl
daa
sbb
pop
add
lret
test
hlt
cmp
aaa
shrl
stos
xor
lods
xor
mov
repz
add
jmp
xor
xchg
jne
pushf
cmp
outsb
mov
cmp
fadds
add
and
xchg
inc
or
pop
out
cmpl
xor
cmpsb
or
lds
or
push
add
push
pop
cld
pop
sbb
cmpl
and
push
daa
jecxz
mov
mov
shrl
int3
mov
rolb
into
xchg
mov
sub
jecxz
mov
into
mov
mov
and
pop
add
mov
ret
scas
adc
pop
mov
lcall
orw
add
xchg
cwtl
fnstcw
sar
sbb
mov
test
xchg
aas
jecxz
adcl
push
add
ja
xchg
test
mov
xchg
mov
mov
or
dec
jo
rcrb
arpl
mov
jb
jo
pop
cmp
xor
negb
test
rclb
sbb
ror
je
ja
jge
or
movsb
daa
mov
rorl
stc
arpl
test
cmp
scas
pop
shr
rorb
sti
enter
or
add
mov
cmp
xchg
inc
add
inc
movaps
push
add
mov
stc
addb
loopne
fcompl
mov
mov
cmp
cltd
dec
es
pop
fsubl
mov
push
or
rorb
inc
and
pop
push
aas
fbstp
mov
mov
fcompl
mov
shll
ficoms
adc
push
sbb
outsb
jns
insl
lods
jge
inc
add
js
aam
push
lahf
jmp
push
int
sti
hlt
test
shl
repnz
scas
add
inc
or
xor
mov
aaa
dec
movsb
or
inc
lahf
and
mov
jmp
cmp
and
add
dec
aaa
jle
jae
jns
shlb
ja
push
lock
jg
dec
add
enter
jge
nop
jge
mov
lret
movsb
sub
xchg
add
sbb
cld
cmp
orb
bswap
aas
inc
mov
sub
nop
jp
nop
inc
jo
lret
imul
cld
bound
in
pop
stc
adc
jno
pop
dec
addr16
dec
pop
sub
addr16
xchg
jnp
xchg
inc
stos
addr16
mov
jae
dec
pop
jne
hlt
cvtdq2ps
scas
mov
mov
repz
jle
ljmp
imul
sub
lret
lods
xor
enter
mov
pop
or
je
pop
mov
sahf
mov
out
fsubl
sar
jg
and
xor
lret
fisttpll
iret
popf
cmp
jne
pop
clc
or
mov
fldenv
mov
add
pop
in
jmp
cmc
fnstcw
jge
mov
xchg
scas
sbb
lea
sbb
xchg
lret
cli
and
mov
fildll
je
mov
xor
into
scas
xchg
fnstsw
or
fldl2e
and
fwait
jne
pushf
mov
and
mov
lods
mov
ret
insl
sbb
push
movsb
mov
sti
mov
cmp
out
xor
bound
nop
or
pop
mov
test
mov
inc
adc
pop
dec
movsl
xor
test
popf
push
jae
push
inc
push
sub
pushf
repz
mov
xchg
aas
adc
dec
xchg
inc
dec
out
and
mov
ljmp
std
or
jb
mov
js
lds
addr16
jp
jecxz
sbb
xor
xchg
movsl
sub
cmp
push
mov
lods
mov
sahf
dec
adc
shrb
flds
fildl
scas
cmpsb
daa
cmp
outsl
lock
sub
divb
inc
pop
cld
cmp
cmp
mov
out
jle
push
rclb
mov
mov
fistps
ret
hlt
pop
cmp
push
clc
jmp
sti
sti
pop
xchg
add
adc
mov
push
push
sti
dec
outsb
xorb
js
jo
jecxz
int
mov
mov
scas
sbb
mov
mov
cmovae
add
xchg
push
iret
xor
sbb
cld
and
jg
jmp
je
mov
pushl
and
adc
pop
add
inc
into
pop
pop
add
push
filds
push
out
jo
jge
push
mov
bswap
and
xor
pop
or
ret
inc
dec
fstl
out
outsl
jno
dec
adc
fiadds
fiaddl
or
fiadds
jmp
outsl
out
inc
std
mov
cwtl
push
rorb
add
inc
lea
fsts
pop
lds
mov
insb
or
insl
sti
xchg
inc
jne
scas
shl
int
sbb
inc
adc
stos
adc
pop
and
xchg
xchg
mov
add
xor
arpl
mov
and
or
ret
xor
cmp
scas
movsl
test
adc
inc
or
je
std
jmp
std
push
ljmp
mov
push
jno
inc
sub
aad
jb
je
ret
inc
xchg
pop
xchg
inc
adc
cmc
bound
int
movsl
decb
mov
ret
jo
mov
popa
ss
aaa
int3
nop
cmp
movsb
cs
fdivrl
pop
sub
and
pop
mov
push
js
jne
xchg
mov
jns
cmp
mov
add
xchg
call
lds
outsl
adc
cmp
mov
jae
lock
adc
scas
mov
scas
jmp
mov
cli
es
pop
cli
pop
add
decl
and
gs
iret
nop
cltd
push
negb
shr
insl
in
mov
sbb
outsb
out
out
inc
dec
or
inc
or
dec
pop
sbbl
mov
and
dec
pop
out
jl
adc
xor
jno
scas
xchg
fadds
mov
mov
lret
nop
or
or
xchg
aam
or
aam
pop
push
faddl
pop
mov
mov
js
sub
dec
or
sub
mov
cld
sbb
out
mov
fnstsw
scas
jno
sub
fnstsw
xor
push
bound
test
pop
cli
xchg
pushf
mov
adc
inc
and
call
testl
mov
adc
jno
sbb
sub
dec
adc
cmpsl
pop
jp
jl
add
jo
and
dec
div
pop
cmp
mov
mov
test
mov
fnstenv
into
mov
stos
adc
pushf
enter
into
out
or
and
jecxz
orl
out
jns
test
imul
pop
insl
insb
out
popa
push
sbb
or
lods
or
pop
jecxz
fwait
rorl
nop
mov
cmpsb
in
pop
sbb
cltd
cltd
inc
popf
cmp
jb
notl
push
mov
add
sbb
dec
adc
dec
mov
clc
xchg
or
outsb
fs
dec
jge
mov
inc
pop
xchg
cmp
xchg
test
scas
mov
outsl
sbb
dec
insl
mull
dec
cltd
mov
cmp
xchg
inc
loope
dec
push
adc
rorl
imul
dec
push
sbbb
subl
cmp
lods
xor
loope
imul
xchg
cmp
ret
leave
les
cmpsb
lds
dec
adc
xor
in
sbb
je
outsb
and
mov
js
test
stos
and
enter
in
fstpt
decb
and
inc
scas
sub
mov
sub
cltd
cmc
cli
pop
daa
lds
sarb
inc
shrd
pop
negl
xchg
inc
cmc
push
mov
mov
mov
rorb
insl
sub
ljmp
xchg
les
insl
test
lea
pop
jbe
fcomps
in
cli
les
adc
test
dec
lcall
scas
jnp
rcrb
pop
and
mov
sub
pop
jno
fbld
mov
xorl
aaa
repnz
dec
cs
sub
dec
add
ss
dec
mov
loope
mov
lods
aam
pop
sbb
mov
lds
jno
jne
push
adc
inc
jg
lahf
int
fs
sub
mov
mov
xchg
cmp
in
jo
inc
jmp
out
aaa
push
std
inc
mov
pop
add
cmp
mov
or
insb
movsb
notl
jl
in
imul
daa
cmpsl
dec
or
push
sti
adc
inc
push
enter
aad
xor
ds
xchg
inc
adc
rcll
cmp
lcall
pop
cli
aas
cli
pop
ljmp
cli
jae
icebp
pusha
stos
insb
aam
jmp
bnd
jns
cmp
call
jno
test
rorl
ja
ljmp
orb
cmp
pop
push
mov
lea
scas
push
push
mov
inc
adc
lods
or
test
jno
inc
and
mov
iret
inc
sbb
xor
inc
clc
jmp
fstpt
dec
pop
lret
stos
inc
adc
mov
pop
mov
mov
cld
sahf
pop
pop
stc
cmpsb
cmp
insb
xlat
and
shrl
syscall
aad
xor
mov
cmpsb
fstpt
cmpb
mov
sarb
jmp
cmc
and
adc
dec
pop
lea
pushf
inc
fisubrs
inc
and
inc
cwtl
mov
and
cmp
push
insb
sti
mov
sub
fbstp
dec
out
jb
xchg
jp
jbe
xchg
push
ss
ds
lods
sub
pop
hlt
push
sbbl
inc
aam
popf
enter
rcrl
jle
sbb
es
cmc
pop
icebp
daa
add
pop
sbb
pusha
out
dec
xchg
adc
jp
addb
dec
adc
and
pusha
out
xor
iret
push
movsl
xlat
and
je
or
jg
pop
pmullw
pusha
call
out
jnp
stos
fists
ds
lods
outsl
fdivs
and
sbb
sbb
mov
sub
inc
pop
scas
inc
xchg
aaa
sarb
fmuls
jbe
sub
and
scas
nop
push
cli
push
mov
sbb
rcrl
sbbb
hlt
sti
popa
fildl
cmp
lock
mov
scas
orb
or
xchg
push
add
imul
or
lods
cmp
int
int
lods
test
out
rorb
jl
cmp
push
xchg
hlt
sbb
mov
adc
stos
daa
mov
jp
inc
fmull
fidivrl
neg
add
or
lea
lcall
fucomi
je
or
or
ljmp
mov
xchg
cmp
jl
and
sbb
test
push
repnz
and
push
xchg
jnp
nop
cld
pop
xchg
mov
mov
into
loopne
adc
inc
adc
dec
lret
sbb
out
jb
movsl
xor
es
mov
mov
pop
fwait
mov
and
mov
lods
sub
push
mov
ret
mov
dec
dec
sbb
add
jne
mov
dec
aam
int
rcl
repz
xchg
push
in
pop
mov
rolb
inc
sti
pop
push
push
adc
and
call
ljmp
adc
or
mov
mov
pop
xor
daa
jae
sbb
imul
dec
lcall
push
sbb
das
mov
jg
cmp
sbb
push
adc
push
jno
push
out
cwtl
xchg
mov
les
cmpsb
cmp
aas
cmp
pop
push
mov
xchg
mov
jns
mov
addr16
add
cmp
push
mov
pop
or
shll
aam
icebp
add
daa
js
pop
push
incb
sub
aad
mov
push
mov
push
dec
rcrl
icebp
mov
clc
out
std
xchg
and
lds
sbb
popf
xchg
cmp
lds
push
out
pop
adc
or
cmpsl
ds
mov
pop
ljmp
jnp
xor
data16
cltd
nop
test
test
xlat
or
xor
push
pop
hlt
xchg
fisubrs
gs
sti
cltd
xor
dec
mov
xorb
movsl
mov
rclb
repz
sbb
jbe
inc
adc
lahf
cltd
das
lret
mov
jmp
in
adc
roll
add
pop
out
xchg
nop
mov
ret
or
adc
lds
mov
nop
mov
jp
mov
push
or
cs
mov
pop
push
movsl
mov
sub
fcmovnbe
pop
repnz
dec
loope
and
push
cs
mov
mov
std
hlt
movsb
cmp
pop
aam
push
inc
ret
jb
mov
adc
pop
sbb
dec
inc
sbb
jno
dec
in
xchg
cmp
ret
mov
pop
out
adc
ss
push
mov
call
or
jl
das
shlb
pop
add
mov
and
push
add
xor
sub
pop
push
pop
cmc
test
fildll
lret
data16
cld
stc
lcall
dec
mov
cmp
repnz
mov
loopne
dec
inc
adc
popf
xchg
xor
enter
out
jmp
cmp
inc
cmp
arpl
xchg
mov
push
out
test
adc
xchg
sub
pop
mov
mov
shrb
fiaddl
cltd
or
icebp
mov
push
montmul
cmpsb
xchg
aad
test
fnop
pop
repz
dec
loop
and
push
dec
imul
test
xchg
ror
mov
sti
rep
cmp
sbb
ret
pop
js
repz
ret
adc
push
push
xor
inc
aas
sbb
in
xchg
cmp
ret
add
jecxz
lock
mov
inc
xor
test
sub
mov
pop
out
mov
or
shrl
pop
add
mov
and
add
es
push
push
pop
testb
jge
lret
sti
negl
sbb
jl
movsb
cmp
ret
ret
lock
mov
pop
loope
dec
inc
adc
pushf
xchg
xor
mov
dec
out
adc
inc
cmp
imul
xchg
mov
fildll
cmp
pop
fs
mov
lea
shrl
fadds
lcall
and
xchg
lods
cmpsl
cs
pop
hlt
stc
dec
jecxz
and
dec
push
jge
lcall
mov
cmp
dec
inc
les
outsb
cmc
mov
rcll
repnz
inc
cmp
mov
push
out
mov
mov
loopne
icebp
adc
pcmpgtb
inc
xchg
test
pusha
in
mov
or
call
imul
lock
rorl
movsl
add
inc
fldcw
and
ret
push
push
pusha
testl
enter
cmc
pushf
xor
sbb
push
jp
movsl
cmp
fsubrs
rol
repz
testb
inc
adc
jb
add
les
push
out
or
outsb
add
nop
mov
jecxz
stos
inc
syscall
cwtl
das
aaa
xor
pop
bound
dec
mov
aam
fst
add
pop
push
mov
sub
mov
cmpl
lods
movsb
cs
pop
cmc
testb
jge
push
dec
push
jp
fwait
xor
mov
cmp
dec
inc
les
insl
testb
rclb
out
xchg
sbb
xor
inc
cmp
mov
gs
call
mov
fstpl
push
or
punpcklwd
inc
nop
adcb
jecxz
mov
pop
add
shrb
pop
pop
sahf
mov
xchg
into
push
movsl
cld
inc
fisubrl
dec
popa
clc
jg
dec
loop
mov
imul
and
inc
mov
cmp
lret
mov
testl
jo
add
ret
mov
jecxz
call
cmp
outsl
push
addr16
pop
repz
jp
loope
stos
inc
or
cs
pusha
pusha
push
mov
mov
aad
fcmovnbe
add
mov
daa
and
cmpl
ror
pop
idiv
hlt
dec
in
push
jle
push
inc
imul
jno
xor
les
ds
sbb
jo
aas
lds
testl
out
in
cwtl
push
adc
inc
aaa
pop
mov
arpl
xchg
mov
pop
out
pop
repnz
cmp
lods
inc
mov
lret
shll
xorl
jns
mov
int3
std
cli
inc
fldt
pop
lds
stc
jge
dec
jecxz
sahf
adcb
ret
push
cmc
icebp
sahf
xor
dec
inc
mov
ds
xchg
fidivl
mov
clc
sbb
in
inc
cmp
add
shlb
jmp
cmp
jo
gs
pop
hlt
mov
jnp
lods
inc
or
lcall
push
mov
jg
cmpsl
insl
push
popf
add
hlt
mov
dec
adc
test
xor
ror
pusha
idiv
repnz
in
sbb
push
dec
inc
insb
add
popf
xor
xchg
mov
leave
ret
hlt
ljmp
dec
cmp
clc
fwait
nop
in
ret
lods
in
jecxz
cltd
adc
xor
mov
popa
push
ljmp
jno
in
pop
repz
nop
daa
cmp
jp
pop
pop
scas
inc
mov
das
mov
int3
arpl
shll
xorb
aam
push
push
or
test
lret
sti
clc
inc
fsubrl
sbb
arpl
jnp
dec
in
pushf
sbbl
repz
lahf
and
mov
aas
lcall
pop
in
call
in
inc
cmp
scas
insb
bound
lcall
and
adc
inc
xlat
cmp
jno
arpl
cmc
mov
adc
xlat
lods
inc
or
lcall
push
mov
xorb
pop
sahf
add
hlt
mov
and
mov
jge
inc
fisubl
enter
lock
in
sbb
add
xor
mov
test
sbb
pop
insl
push
in
sarb
cltd
adc
ss
xor
mov
pusha
push
jmp
test
aad
mov
or
xlat
pop
repz
xchg
sub
sub
pop
pop
scas
inc
mov
scas
lods
int
fmulp
mov
add
in
xorl
aam
push
push
or
cmpsl
movsl
sub
stc
testl
dec
dec
fs
jp
dec
in
fwait
sbbb
mov
mov
and
mov
aas
cwtl
xchg
fdivl
mov
cli
xchg
sbb
sbb
xchg
mov
int
mov
mov
syscall
inc
xlat
xor
bound
cmc
mov
jl
fcmovnbe
scas
inc
or
lcall
push
mov
subl
div
mov
and
mov
jnp
inc
stc
clc
out
dec
in
sbb
add
lahf
ss
xchg
mov
push
repnz
aas
sbb
jae
cmp
pop
imul
cltd
mov
jnp
mov
add
xor
mov
pop
push
in
nop
cmpl
mov
jae
jecxz
pop
repz
add
jp
pop
pop
mov
mov
das
lods
stos
into
gs
mov
in
xorl
aad
push
push
or
cmpsb
mov
adc
sbb
dec
inc
fs
js
dec
in
cltd
sbbb
mov
mov
and
push
jno
test
jae
mov
cli
xchg
pop
or
jge
cmp
scas
imul
int
mov
mov
or
jb,pn
pusha
push
pop
testb
jge
fcmovbe
scas
inc
push
cld
fwait
xor
sub
arpl
mov
subl
cmc
cmc
mov
and
mov
jns
inc
fsubl
arpl
imul
dec
out
sbb
add
imul
ret
mov
test
je
aaa
pop
imul
jl
mov
add
cmp
and
mov
je
loope
pop
hlt
add
xchg
sub
push
mov
mov
xor
lret
mov
std
cld
in
test
pop
insl
push
dec
or
movsb
mov
adc
and
xor
dec
inc
gs
jbe
dec
out
xchg
sbbl
mov
mov
and
mov
inc
xchg
nop
fnsave
enter
sti
xchg
adc
sbb
mov
and
or
inc
fnstenv
sub
or
pusha
testl
shrb
xor
int
pop
dec
mov
subb
or
and
inc
adc
ja
inc
frstor
ret
fs
hlt
ljmp
dec
cmp
add
fwait
mov
sarl
adc
fidivs
xor
cld
xchg
xchg
mov
jge
mov
mov
fildl
or
cmp
cmp
push
out
mov
xlat
mov
jne
pop
cmc
add
xchg
sub
and
push
mov
xchg
xor
leave
mov
test
or
jle
cmc
mov
ret
adc
and
xor
inc
inc
data16
je
push
out
xchg
test
mov
mov
and
cmp
push
insl
popa
stos
inc
xchg
mov
jne
mov
pusha
out
cld
xchg
adc
call
mov
pop
push
popf
mov
and
push
in
or
inc
fidivl
sub
push
popa
clc
cmpl
scas
movsb
jg
shlb
xor
and
gs
dec
mov
subl
or
and
adc
fisubs
shll
call
test
inc
cmp
insb
addr16
lea
push
in
loopne
inc
adc
fbstp
xor
pusha
gs
std
xchg
xchg
xchg
jle
mov
mov
flds
sarl
sub
mov
mov
fsubrs
iret
pop
testb
xchg
sub
and
push
push
mov
test
xor
enter
clc
out
test
sbb
outsl
dec
dec
or
jl
testb
ret
repz
dec
fbld
adc
data16
jb
push
call
lds
mov
and
imul
xchg
mov
jne
mov
popa
in
cld
xchg
adc
jmp
mov
pop
pop
sahf
mov
mov
pop
incl
xor
je
pop
push
popa
clc
cmpb
mov
mov
add
popf
xor
and
gs
dec
mov
subl
or
and
rorb
lods
je
inc
ficomps
shlb
out
call
inc
cmp
imul
cwtl
mov
push
jmp
stos
inc
adc
leave
pusha
fs
std
xchg
xchg
test
jle
mov
mov
fadds
shll
sub
mov
mov
lods
stos
jbe
fmul
pop
idiv
std
xchg
sub
and
push
push
mov
xorb
mov
mov
test
sbb
jo
dec
or
jp
testl
repnz
dec
fistps
adc
lret
inc
aas
data16
jo
push
jmp
ret
mov
mov
es
rclb
lods
inc
xchg
mov
jne
mov
in
cld
xchg
clts
ljmp
pop
or
mov
es
add
daa
je
pop
push
stc
cmpl
pop
aam
mov
push
sahf
xor
push
dec
mov
test
or
and
sub
dec
inc
push
lods
jb
dec
fistps
mov
push
jmp
inc
aaa
jo
imul
mov
cmp
pop
xchg
nop
sub
mov
sbb
loop
push
popf
pop
add
shlb
push
pop
lock
fldcw
int3
pusha
idiv
sti
xchg
sub
pop
jg
push
dec
mov
xorb
movsb
mov
mov
xchg
sbb
jno
inc
or
sahf
cltd
sub
lret
lods
lock
loopne
adc
outsb
fs
ljmp
jno
call
or
pop
addr16
scas
inc
mov
xchg
or
sbb
mov
daa
mov
add
inc
fsubrl
dec
arpl
jg
xchg
sub
lret
mov
std
repz
ss
inc
mov
test
or
imul
stc
nop
push
sbb
ret
pop
scas
jo
dec
loopne
xchg
xor
in
jecxz
ljmp
jno
bound
mov
pop
out
lods
inc
or
cs
bound
call
mov
sbb
sahf
add
es
icebp
test
fisubrl
lret
sti
stc
xchg
sub
dec
dec
mov
jle
sahf
xor
rol
mov
xchg
inc
push
movsl
jbe
stc
nop
pushf
xchg
sub
enter
out
jmp
ss
cmp
insb
bound
lea
or
loopne
cmp
or
pop
gs
scas
inc
lea
int
loopne
xchg
or
in
xorl
mov
push
or
scas
cmpsl
sub
add
inc
and
push
dec
fs
jge
xchg
sub
leave
mov
sti
icebp
mov
push
jbe
out
xchg
ret
or
xchg
sbb
sub
inc
cmp
dec
loope
ss
mov
push
jmp
or
jb
gs
movsl
cmp
xchg
pop
in
scas
inc
or
loop
cmp
arpl
add
mov
push
mov
rorb
lahf
add
cmp
xor
pop
icebp
xorb
test
js
aad
stc
cli
notb
sbb
mov
jnp
lahf
mov
ret
hlt
out
lock
push
fdivl
inc
push
movsl
jae
cli
xchg
fwait
xchg
sub
lds
loope
getsec
into
inc
cmp
imul
sbb
in
movsb
cmp
pop
xchg
sub
xor
pop
bound
inc
mov
into
gs
xchg
or
in
test
sub
pop
push
or
lods
cmpsb
sub
xlat
int
out
clc
inc
fisubrs
and
push
dec
gs
jnp
xchg
sub
pushf
sbbl
mov
clc
out
mov
imul
xchg
rorb
icebp
call
sub
mov
gs
loop
lea
into
mov
fists
adc
mov
cmp
pop
cmpsb
cmp
mov
les
xlat
scas
inc
or
int
pop
pop
add
scas
stos
pop
mov
rorb
mov
and
mov
xorb
cmpsb
mov
arpl
clc
hlt
xchg
cs
dec
jns
mov
push
sarb
pop
adc
je
inc
jno
sti
xchg
cltd
xchg
sub
mov
in
loop
or
imul
nop
mov
or
fsubl
sub
das
ret
pop
popa
pop
mov
mov
iret
data16
call
xor
sbb
mov
lods
movsb
sub
aad
pop
lock
testb
and
push
dec
gs
jns
xchg
sub
int3
mov
clc
in
mov
push
inc
mov
mov
rorb
icebp
out
xchg
sbb
lds
mov
gs
jecxz
mov
into
mov
fstl
push
or
or
cmpsl
ds
adcb
jecxz
scas
inc
pop
add
int
pop
pop
add
lods
stos
and
cld
ds
and
mov
jg
inc
frstor
fs
div
cwtl
das
and
inc
mov
js
mov
imul
mov
mov
adc
jne
aas
adc
xchg
xchg
cs
sbb
adc
cmp
cmp
push
addr16
push
out
mov
jne
loope
cmpsb
cmp
xor
push
mov
mov
shlb
aam
xchg
add
daa
push
mov
push
or
cmpl
rcl
pop
icebp
cld
hlt
dec
fbld
inc
data16
ja
xchg
mov
les
cmp
rclb
repnz
mov
cld
xchg
push
adc
movb
mov
arpl
xchg
mov
iret
mov
fistl
or
mov
cmp
test
mov
pop
loope
mov
add
es
gs
push
add
stos
test
mov
std
cli
aas
sub
sub
push
dec
pop
hlt
jge
inc
fisubs
ret
gs
hlt
icebp
cltd
xor
push
test
dec
inc
mov
jbe
mov
insb
leave
mov
repz
fbstp
cmp
std
xchg
xchg
das
mov
sbb
adc
cmp
cmp
imul
pop
pop
out
mov
jbe
cmpsl
or
xchg
sub
sub
pop
pop
push
mov
xchg
jp
cmpsl
shrl
rolb
cwtl
add
out
xchg
dec
or
aam
mov
pop
repnz
repnz
loopne
sbb
adc
addr16
jne
cwtl
das
mov
ret
hlt
jmp
aad
dec
cmp
pop
outsb
imul
jbe
mov
std
xchg
adc
xor
inc
xor
lock
mov
jmp
repnz
cmc
or
shrl
pop
cmpsl
mov
jmp
mov
in
and
mov
loope
in
sarl
mov
xor
sbb
pop
jmp
dec
adc
or
es
jbe
insl
icebp
stos
aad
mov
and
jae
mov
or
mov
jb
hlt
push
xchg
ja
gs
shrl
xor
aaa
in
sub
and
push
ds
xchg
fwait
mov
mov
inc
cwtl
jns
in
gs
repz
dec
xor
lods
scas
ret
in
pop
or
inc
test
pusha
movsl
scas
rcl
std
ret
addr16
mov
and
cmp
js
lods
adc
cmp
jg
frstor
bound
pop
sub
pop
test
mov
jge
lods
jbe
lods
xchg
test
and
push
js,pn
push
popf
lcall
xchg
out
mov
ljmp
jle
lea
cltd
jmp
jbe
sti
dec
nop
jo
mov
jle
or
insb
je
push
add
xlat
in
xor
and
jne
cmpsb
loopne
popa
sub
lcall
std
test
adc
rcrb
fwait
sub
inc
xor
mov
push
adc
push
push
in
je
xchg
push
shrl
push
outsl
icebp
das
sbbb
xchg
clc
loope
adc
push
or
mov
xchg
pop
add
mov
add
popf
fwait
fs
push
nop
mov
out
es
xor
dec
xchg
push
jno
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
add
xchg
stc
movsl
outsb
fiaddl
inc
pop
cs
lods
negl
jb
testb
stos
stos
gs
lea
out
jns
repnz
out
adc
lods
xor
fs
jmp
xor
mov
cltd
dec
cmp
cmpl
jo
mov
inc
movsl
mov
mov
xchg
jl
jne
dec
subl
jnp
ss
pop
cmpsb
inc
lret
xor
add
movsb
cli
enter
mov
jmp
repz
cli
pop
jg
lods
pop
push
test
outsb
ljmp
jg
or
add
jmp
in
sbb
sub
dec
sbb
xchg
inc
sub
lock
popa
xor
and
int
inc
xor
xchg
push
mov
cmp
jmp
shlb
inc
add
xchg
sahf
std
adc
xchg
cmp
mov
jno
sbb
jne
sbb
lock
scas
push
test
xor
outsb
test
mov
lds
adc
add
aas
pop
xchg
sub
or
xchg
dec
xor
loop
and
xor
daa
push
lret
or
mov
xor
push
mov
pushf
aad
je
fsubs
jae
daa
cs
addb
cmp
mov
leave
dec
imul
mov
adc
outsl
lds
fs
mov
js,pt
lea
aaa
fildll
cltd
fsubrl
out
addl
mov
inc
nop
leave
and
fldcw
call
pop
inc
mov
bound
shrb
sub
dec
adc
mov
out
lret
pop
test
rclb
outsl
jl
pop
sbb
hlt
scas
mov
in
mov
loop
xchg
daa
pop
test
in
mov
pop
imul
cltd
movsb
pop
mov
inc
mov
in
xchg
movsl
subb
out
or
sarb
adc
outsb
daa
add
std
mov
xchg
cmpsb
bound
lds
test
inc
pop
xlat
xchg
addr16
add
stc
fldcw
fwait
sbb
stos
in
add
shlb
aas
ret
fwait
imul
or
xchg
addr16
pop
xchg
sbb
fwait
mov
mov
inc
adc
sahf
sbb
mov
cmp
jae
adc
dec
inc
push
pop
in
fs
push
ret
push
icebp
sbb
mov
cmp
sbb
push
xchg
icebp
outsb
dec
bound
xchg
push
jae
dec
inc
add
dec
jle
mov
aam
insb
mov
push
inc
in
fdivl
jae
cltd
cwtl
adc
mov
outsl
pusha
rolb
sub
push
loop
sbb
push
jl
sbb
mov
lock
adc
inc
incb
je
es
popl
cld
sub
into
push
pop
stos
adc
cmpsl
pop
int
fsts
ret
mul
cmp
mov
cmp
fidivl
mov
pop
inc
cli
not
push
les
out
add
mov
lea
loopne,pn
in
outsb
andl
sub
adc
arpl
push
lods
data16
inc
ror
mov
inc
sub
inc
sub
lods
test
sub
cmp
lret
xor
push
mov
push
pop
xor
mov
pushf
rcrl
dec
arpl
cmp
orb
shlb
mov
jg
add
xlat
xchg
jge
push
repnz
clc
pop
push
shrb
outsl
out
cs
sbb
jmp
inc
jecxz
rorl
mov
frstor
and
cmpsl
pop
cmp
int
cltd
push
inc
adc
mov
inc
mov
fldcw
sarl
sub
dec
push
push
loopne
clc
or
lock
pop
sti
push
movsl
inc
mov
adc
in
out
loope
int3
cmp
xor
data16
test
jp
cmp
mov
inc
cmp
dec
push
mov
push
lock
int
push
pop
movsb
lods
cmp
mov
aaa
mov
sbb
push
mov
mov
maxps
out
push
mov
dec
pushf
add
or
push
xor
xor
lret
cltd
fnsave
shll
data16
lds
xchg
push
inc
adc
mov
decb
push
add
jb
mov
lea
lret
shl
jmp
push
push
lahf
bound
push
shlb
sbb
push
pushf
cmp
xchg
pushf
mov
repz
mov
add
inc
cld
mov
insl
aam
loop
mov
sbb
sub
xor
ret
lds
lds
lret
xchg
out
mov
ret
mov
mov
cmp
cld
insl
stos
xorl
sbb
lret
xor
int
lret
cli
dec
popa
add
adc
aas
push
fdivrs
sti
and
into
and
test
pop
xor
rcll
faddl
pop
push
orl
out
mov
repz
add
in
jecxz
fstpl
rol
adc
push
out
and
lcall
scas
xor
add
adcl
sbb
hlt
loop
imul
lcall
gs
in
repnz
add
mov
ljmp
cmc
jmp
cmc
and
fwait
ss
aam
mov
gs
jecxz
mov
fmull
movsl
and
pop
adc
loope
adc
pop
add
ss
cmp
sub
cltd
fcompl
loop
leave
or
adc
mov
lods
inc
cwtl
les
divb
dec
data16
mov
aaa
sub
iret
pop
shrb
sub
or
ret
push
sbb
scas
push
pusha
adc
mov
pop
shrl
lods
test
push
sbb
fnstcw
int
icebp
lcall
pop
xor
movsl
fmull
cmp
fcmovb
sub
mov
les
leave
cmp
dec
mov
add
sbb
push
out
pop
insl
loope
shll
call
clc
ljmp
sbbb
adc
sbbl
adc
clc
adc
or
sbb
pop
pusha
jl
vpmadcsswd
sbb
popa
fucomi
jl
xchg
adcl
fucomp
jl
cltd
adcl
fucomip
jl
fwait
adcl
loope
jl
popf
adcl
inc
jge
lahf
ret
dec
inc
cmp
fstpt
mov
jge
cmp
jle
loope
xchg
push
xchg
sbb
test
sbb
xchg
cs
sbb
lahf
ret
ss
sbb
cmp
stos
inc
fldt
inc
pop
pop
push
pop
mov
fisttps
sti
adc
in
adc
jb
ds
sar
xchg
dec
jns
test
aaa
mulb
iret
scas
sub
test
insl
sub
fistpll
xor
stc
mov
repz
xchg
shlb
adc
xchg
imul
dec
outsb
icebp
sbb
arpl
cs
into
insb
inc
mov
insl
xor
js
loopne
jno
adc
mov
push
xchg
mov
sbbb
mov
pop
push
mov
.byte
