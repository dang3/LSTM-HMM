push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
push
call
add
pop
mov
mov
lea
add
call
add
xor
mov
mov
pusha
call
add
pop
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
mov
lea
add
call
add
add
in
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
inc
xor
mov
sub
mov
mov
shl
xor
sub
mov
mov
movl
mov
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
push
pop
jbe
popf
push
pushl
decl
ret
or
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
push
push
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
add
lea
sub
sub
mov
pop
mov
mov
mov
mov
push
mov
xorl
pop
sub
or
mov
cmp
je
add
mov
push
push
push
pop
push
pop
stos
pop
pop
subl
neg
clc
sbb
pushl
lea
lea
pop
repz
jmp
mov
pop
lea
add
call
add
in
sub
push
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
and
add
add
and
add
and
add
and
add
and
add
add
xor
add
jp
add
loop
add
inc
and
add
and
add
and
add
and
add
add
mov
add
data16
add
and
add
add
add
add
cmpsb
and
add
and
add
and
add
add
add
add
xchg
add
xchg
and
add
and
add
and
add
and
add
add
add
add
cmp
add
add
sub
add
sbb
add
add
add
pusha
and
add
add
add
and
add
and
add
and
add
add
adc
add
add
mov
add
add
add
add
add
nop
and
add
add
add
add
jo
add
movsb
and
add
and
add
add
and
add
and
add
and
add
and
add
add
xor
add
jp
add
loop
add
inc
and
add
and
add
and
add
and
add
add
mov
add
data16
add
and
add
add
add
add
cmpsb
and
add
and
add
and
add
add
add
add
xchg
add
xchg
and
add
and
add
and
add
and
add
add
add
add
cmp
add
add
sub
add
sbb
add
add
add
pusha
and
add
add
add
insb
outsl
jae
dec
popa
outsb
fs
add
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
imul
outsb
je
outsl
insb
add
inc
gs
je
imul
inc
add
and
gs
outsl
insl
insl
inc
jb
popa
imul
aad
inc
imul
gs
add
popa
jo
jb
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
ret
gs
jne
jb
outsb
je
jb
arpl
jae
movsl
add
je
gs
imul
repnz
imul
jb
je
arpl
add
je
push
gs
popa
jae
inc
jb
outsl
jb
add
add
outsl
bound
dec
outsl
arpl
add
inc
jne
jb
outsb
je
push
add
dec
add
popa
insb
inc
insb
popa
addr16
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
addl
jb
popa
je
inc
imul
jns
add
call
inc
imul
bound
gs
add
cmp
push
jb
jbe
je
push
jb
imul
inc
add
add
je
imul
bound
gs
add
add
gs
outsl
jbe
inc
imul
jns
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
xchg
push
push
gs
jae
addr16
add
pop
or
jae
dec
gs
popa
addr16
add
jnp
inc
gs
imul
outsb
addr16
add
sbb
ja
jo
imul
pop
dec
jae
outsl
outsl
insl
gs
mov
dec
jae
imul
jae
popa
addr16
add
rolb
jae
imul
cltd
push
inc
gs
insb
addr16
jb
arpl
int
dec
outsl
popa
fs
jne
jae
jb
add
push
gs
jne
jae
jb
outsl
jae
add
jo
je
push
popa
addr16
add
xchg
inc
gs
imul
js
push
add
jnp
push
gs
outsl
arpl
add
push
push
inc
push
xor
cs
insb
add
or
push
push
dec
inc
imul
arpl
add
dec
inc
outsl
outsb
outsb
arpl
or
push
push
dec
inc
jb
outsl
jb
add
inc
popa
outsb
arpl
add
dec
push
inc
dec
xor
cs
insb
add
or
dec
jae
popa
je
push
push
inc
add
push
dec
push
push
dec
cs
insb
add
inc
or
frstor
mov
imull
testl
cmpl
xchg
scas
mov
pop
cmpsl
xlat
outsb
orb
fdivs
add
inc
and
xchg
popa
sbb
outsb
push
popa
adc
adc
sub
sbb
sbb
adc
inc
dec
out
push
rolb
xor
out
jge
and
mov
mov
lcall
push
movsb
orl
stos
cmp
arpl
dec
mov
lret
pop
insl
pop
push
jp
ret
in
jb
loope
cmp
mov
std
sub
lea
in
daa
jl
lcall
mov
mul
js
mov
cli
mov
jge
leave
cli
adc
ret
pop
aaa
lahf
sub
ret
negb
jo
jl
lods
lods
and
jmp
jno
pop
incb
jl
mov
and
cmpsl
in
mov
sbb
test
fldl
push
xor
mov
aad
inc
dec
test
aas
mov
in
mov
adc
push
rcll
sbb
in
mov
inc
add
sub
inc
loop
adc
in
push
push
les
push
fldenv
xchg
jb
jne
sbb
jae
ja
cli
add
out
mov
sahf
cmpb
rcrl
loop
push
or
pusha
cmp
adc
cwtl
xchg
cltd
mov
test
fs
xlat
aas
xchg
ror
ror
sub
adc
push
in
pop
inc
cld
jb
mov
imull
dec
mov
jno
xor
std
mov
loop
mov
gs
popf
pop
outsb
sbb
es
mov
cli
mov
jge
xor
push
mov
sbb
sbb
jle
sti
add
rorl
adc
xchg
or
repz
add
add
add
add
xor
add
add
add
jo
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
or
add
adc
add
or
add
and
add
or
add
add
add
add
add
add
add
add
push
popa
add
test
add
clc
xchg
add
add
add
add
add
or
add
mov
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
imul
xchg
xchg
xchg
add
scas
lods
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
mov
mov
cltd
pop
xchg
xchg
xchg
or
jle
jp
jp
lods
lods
stos
add
test
mov
mov
mov
lret
int3
int
rcl
in
rcl
shl
ror
shl
int
into
hlt
leave
leave
enter
leave
out
mov
mov
mov
lods
stos
lea
cltd
lcall
add
add
add
push
add
add
add
add
add
add
add
add
mov
lahf
add
mov
jae
mov
out
lret
lret
rcl
cld
fcom
fdivr
fcom
xlat
xlat
fcom
aad
aam
ror
iret
dec
int3
into
aad
ror
iret
inc
ret
std
mov
mov
lods
iret
movsl
mov
mov
xor
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
scas
scas
sbb
mov
jnp
mov
sar
lret
call
iret
sar
aad
fcom
fdivr
fcom
call
aam
dec
int3
into
dec
int3
int3
call
aam
dec
int
inc
mov
mov
ljmp
cmpsb
cmpsb
ljmp
push
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
push
pop
pop
add
inc
add
pop
add
push
or
inc
or
sbb
add
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
inc
leave
dec
into
int3
call
rcl
call
xlat
fcom
fdivr
aam
dec
int3
int3
dec
leave
lret
dec
int
inc
mov
mov
mov
test
cmpsb
jmp
cltd
fwait
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
imul
bound
pop
fs
sbb
push
movntps
push
sbb
aaa
cmp
and
adc
pop
push
pop
add
add
add
add
gs
mov
pop
mov
mov
mov
mov
mov
mov
inc
enter
rcl
call
aad
aad
aam
iret
iret
iret
inc
mov
inc
mov
mov
scas
scas
scas
jmp
sahf
sahf
cwtl
cwtl
xchg
lcall
addb
add
inc
add
add
add
add
add
add
add
add
add
adc
add
or
add
push
add
jo
jle
jle
jg
jg
jno
jb
bound
mov
cmp
cmp
mov
outsb
outsl
outsb
nop
arpl
pusha
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
enter
leave
lret
dec
leave
lret
leave
enter
ret
mov
mov
scas
scas
scas
jmp
cltd
lcall
xchg
xchg
xchg
cwtl
cwtl
fwait
fwait
fwait
in
addb
push
push
or
add
add
add
add
add
add
add
add
add
add
add
outsb
jo
add
pop
or
jnp
nop
lea
incb
jl
idivb
jp
outsb
jo
out
addr16
push
ret
jle
jp
jp
arpl
fs
inc
inc
cmp
sbb
sbb
movups
lods
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
cmpsl
cmpsl
lcall
nop
incl
addb
xchg
xchg
mov
mov
xchg
mov
jns
jp
das
xor
add
add
add
add
add
add
add
add
add
add
mov
push
push
cmpl
mov
mov
mov
addl
std
mov
jge
jb
jno
je
jne
jge
jge
test
xchg
push
cmp
ss
jge
cmp
movsl
mov
test
lods
lods
stos
sti
lods
lods
stos
lods
lods
stos
test
movsb
movsb
std
fwait
fwait
lcall
xchg
jp
js
jp
jns
xchg
xchg
movsb
movsb
mov
sti
mov
mov
mov
mov
mov
scas
lods
stos
xchg
sbb
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
xchg
xchg
incl
xchg
mov
std
xchg
cwtl
xchg
stc
xchg
xchg
xchg
in
mov
or
mov
mov
pop
pop
push
push
push
push
xor
inc
dec
imul
xchg
leave
fwait
cltd
lcall
lcall
mov
decl
mov
cltd
cltd
lcall
scas
scas
mov
mov
mov
mov
mov
std
mov
mov
movsl
movsb
mov
or
add
add
pop
pop
adc
test
call
lcall
incl
mov
xchg
xchg
xchg
sahf
popf
popf
std
movsl
movsl
movsl
stc
mov
xchg
xchg
in
xchg
nop
xchg
in
xchg
jne
or
add
or
inc
sub
sub
dec
dec
data16
jb
mov
xchg
rclb
xchg
std
lea
call
mov
cmpsl
ljmp
lods
pushl
lahf
mov
mov
xchg
mov
mov
ljmp
sahf
adc
add
add
pop
pop
adc
scas
mov
ret
lcall
mov
decl
xchg
xchg
decl
xchg
xchg
sahf
pushf
pushf
mov
stos
test
notl
jnp
movsl
push
push
push
outsl
dec
dec
dec
pushaw
pusha
popa
jne
je
mov
jge
orl
int
nop
xchg
in
xchg
xchg
testl
lea
jmp
mov
mov
pop
mov
mov
aaa
jge
mov
ja
mov
cmpsb
mov
mov
mov
stos
lods
lods
mov
movsl
movsl
add
pop
pop
adc
mov
ljmp
sahf
decl
call
xchg
xchg
call
cwtl
xchg
lcall
mov
movsl
movsl
std
movsb
mov
fwait
out
xchg
xchg
nop
xchg
xchg
les
xchg
cltd
in
xchg
cwtl
out
mov
stc
xchg
test
std
xchg
je
fwait
imul
ljmp
aaa
jnp
mov
jb
mov
outsl
ljmp
pcmpgtw
lods
or
lods
or
mov
jg
mov
mov
stos
pushf
mov
mov
add
shll
adc
mov
ljmp
sahf
call
xchg
xchg
lcall
pushf
popf
lcall
sahf
popf
call
xchg
xchg
call
xchg
xchg
call
cwtl
fwait
cld
cwtl
cwtl
sahf
stc
sahf
lcall
sahf
mov
xchg
imul
xchg
dec
jp
cltd
jne,pt
fwait
sub
and
mov
adc
ljmp
adc
lods
adc
lods
adc
scas
adc
mov
push
mov
imul
adc
mov
cltd
scas
mov
scas
scas
scas
movsl
mov
movsl
add
add
add
add
add
pop
pop
adc
mov
ljmp
popf
call
popf
popf
lcall
movsb
mov
jmp
xchg
cwtl
decl
mov
decl
ja
cltd
jb
cltd
bound
call
sub
pusha
call
or
add
call
add
mov
adc
lods
sbb
mov
insl
pushl
outsb
mov
and
mov
pop
jne
sarb
inc
xchg
scas
mov
lods
lods
mov
lahf
lahf
mov
add
pop
pop
adc
lods
mov
shlb
popf
sahf
pushf
jmp
cmpsb
jmp
test
test
fwait
lcall
mov
mov
decl
popa
decl
adc
pop
incl
add
add
lea
push
decl
add
lcall
ljmp
and
mov
ja
mov
sub
inc
sub
ret
inc
sub
inc
xor
jg,pn
movl
sarb
lret
movsb
dec
mov
movsl
movsb
add
push
push
adc
test
mov
jmp
test
lods
ljmp
mov
scas
scas
scas
jmp
jno
incl
or
push
incl
add
test
push
incl
add
mov
push
decl
add
xchg
add
fwait
add
lahf
add
movsl
add
ljmp
sub
cmp
aaa
cmp
cmp
dec
cmp
call
cmp
call
cmp
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
movsb
cmpsl
ljmp
sahf
jmp
scas
scas
pushl
mov
pushl
mov
ljmp
js
decl
or
mov
pop
decl
or
xchg
push
incl
add
mov
push
decl
add
pushf
add
mov
add
lods
add
mov
jb
les
test
lret
inc
mov
int3
inc
mov
roll
call
dec
call
dec
xchg
call
dec
xchg
fisttpl
fmull
fistl
call
xchg
std
mov
mov
movsb
movsb
mov
or
add
add
add
add
dec
inc
adc
jp
movsl
popf
mov
lcall
test
pushl
mov
pushl
mov
mov
mov
jmp
insl
decl
sbb
nop
sbb
lea
pop
decl
add
add
xchg
add
sahf
add
mov
add
test
popa
pushl
es
into
inc
nop
call
push
cltd
fcoms
fistl
fstpl
fistps
ficomps
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
jne
sahf
lahf
or
cwtl
xchg
xchg
add
inc
adc
jns
sahf
fwait
lahf
jmp
sahf
cltd
sahf
ljmp
mov
pushl
mov
mov
pushl
mov
decl
and
callw
sbb
xchg
or
decl
add
fwait
add
mov
add
lods
add
mov
fs
mov
xor
fstps
fbld
fbld
jmp
data16
in
test
out
test
ljmp
ljmp
dec
mov
mov
mov
sahf
lahf
add
inc
inc
adc
jp
xchg
cwtl
call
lahf
fwait
popf
ljmp
mov
pushl
mov
mov
mov
mov
jg
xchg
sub
lcall
call
sbb
pop
call
add
mov
add
stos
add
mov
pushl
adc
roll
frstor
jmp
outsb
stos
jmp
outsl
lods
jmp
jb
call
je
in
je
out
jbe
out
jne
out
jae
jmp
mov
mov
cmpsb
cmpsl
lcall
mov
add
add
add
jg
cmp
imul
lea
lcall
mov
mov
mov
mov
mov
mov
mov
movsl
scas
lcall
outsb
lcall
cmp
lahf
xor
fwait
push
call
call
add
movsl
add
test
add
mov
data16
mov
sbb
ficoml
jmp
jbe
call
jle
in
jg
out
cmpb
lock
push
cmpl
mov
inc
mov
stos
cmpsl
sahf
sahf
popf
daa
lahf
lahf
mov
add
add
add
add
aaa
cmp
pop
pop
push
jne
jge
out
test
xchg
xchg
xchg
pushl
mov
mov
mov
ret
mov
mov
mov
cmp
inc
jle
movsl
inc
jge
mov
pop
call
pop
jmp
add
scas
add
mov
data16
mov
add
shll
cmp
ljmp
out
sar
sar
pop
push
nop
sar
xchg
push
xchg
ret
stc
xchg
stc
ret
in
nop
sar
mov
inc
ret
ret
clc
stos
lods
test
xor
pushf
sahf
add
add
add
cmp
push
inc
dec
inc
jb
pop
dec
in
push
call
mov
mov
mov
sar
mov
mov
jle
lcall
cmp
mov
maxps
cltd
add
mov
add
stos
add
mov
mov
add
leave
add
fdivs
jmp
jns
in
xchg
ret
push
lcall
repz
push
pushf
enter
leave
clc
sahf
lret
sti
popf
int3
cld
popf
int
sti
lcall
fistpll
cli
mov
mov
mov
xchg
add
add
add
xor
or
cmp
outsb
dec
dec
dec
jecxz
pop
pusha
call
mov
mov
mov
sar
ret
ret
inc
mov
mov
inc
mov
mov
ljmp
dec
xchg
movsb
sub
cltd
push
pop
lcall
add
lods
add
mov
mov
add
enter
rorl
jne
loopne
xchg
out
mov
push
cmpsb
into
push
cmpsb
into
push
cmpsb
into
sti
test
iret
cld
test
iret
std
stos
sar
std
test
jmp
mov
dec
lret
mov
mov
lahf
mov
xchg
add
cltd
fwait
add
add
add
xor
add
sub
or
bound
pop
xlat
jne
jb
mov
rol
ret
mov
inc
mov
enter
ret
rol
mov
test
mov
push
mov
scas
dec
test
sahf
sbb
pushf
add
mov
add
mov
arpl
mov
add
int3
add
fadds
jae
fists
in
pop
cmpsl
push
popf
leave
cld
lods
aam
sti
scas
aad
cld
mov
sti
mov
mov
cld
mov
std
mov
cld
mov
std
mov
cld
mov
push
movsb
mov
call
lret
mov
mov
sahf
sahf
lahf
pusha
xchg
xchg
xchg
or
add
add
xor
add
push
sbb
outsb
outsb
outsl
mov
xlat
xlat
jmp
xlat
xlat
not
rcl
std
lret
dec
lret
lret
lret
lret
lret
enter
mov
mov
scas
push
mov
lods
cmp
arpl
mov
add
mov
fs
mov
add
roll
outsl
call
add
add
push
mov
cmc
jb
sti
lods
sar
mov
fcos
std
mov
fcos
std
mov
cld
mov
xlat
inc
std
mov
int3
call
leave
int
mov
lahf
mov
or
add
add
xor
xor
add
add
pop
pop
pop
or
movb
loop
out
out
in
out
loope
loope
fsub
fsubp
fcomp
fdivr
xlat
fdivr
int
iret
mov
push
test
stos
sub
mov
add
mov
popa
mov
add
leave
add
aam
jb
fildl
ja
in
jbe
in
xor
cld
mov
loope
inc
std
inc
loopne
std
loopne
inc
fdivrp
dec
std
enter
enter
lret
cli
mov
enter
sar
mov
mov
xchg
adc
add
add
incl
std
incl
std
incl
repnz
or
out
in
pop
in
out
out
sub
out
in
dec
jmp
call
out
in
out
fcmovu
fsubr
ret
stc
lods
jno
cmpsl
cmp
movsb
adc
pop
ljmp
add
mov
add
into
add
xlat
add
add
ljmp
cld
mov
in
dec
loop
dec
in
dec
in
std
int3
loop
dec
jecxz
dec
loope
std
shl
std
iret
loop
shl
std
shl
cld
out
mov
inc
out
cmpsl
cmpsl
cmpsl
mov
cwtl
xchg
add
add
add
std
std
add
std
incl
idiv
testl
lock
out
lock
pop
out
lock
out
out
pop
loope
lds
sti
lahf
and
pop
jmp
pop
pushl
add
leave
add
add
fildl
jbe
in
jp
in
push
jl
negl
cli
mov
std
shl
cld
shl
shr
std
shr
call
in
aam
call
out
std
fsub
fucomi
std
fucomi
shl
push
jmp
aam
dec
lret
test
xchg
xchg
and
xchg
cwtl
add
cli
add
testl
hlt
div
or
aad
xor
jb
negb
add
add
scas
add
mov
add
lret
add
rolb
jno
faddl
jbe
out
ja
in
sbb
push
jne
cld
ret
fdivrp
fsubr
std
fldpi
fucomi
fucompp
fucomp
std
fucomi
fucomp
fucomip
jmp
jmp
fucomip
cld
aam
push
ret
aad
call
iret
iret
clc
lods
lods
lods
lods
xchg
xchg
xchg
jo,pn
outsl
add
add
add
loopne
add
mov
cltd
repnz
and
mov
add
mov
popa
mov
add
int
outsl
call
add
fiadds
jae
jmp
sub
aam
fucomip
fucomi
std
fucomi
fucomi
call
call
std
shl
cld
iret
loopne
cli
iret
loop
stc
iret
clc
int
push
ret
out
mov
xlat
sti
mov
mov
lcall
add
add
add
aad
mov
mov
mov
lcall
add
mov
arpl
mov
add
roll
outsb
call
add
loopne
js
jmp
xor
cli
leave
loopne
cld
lret
sti
fdivrp
clc
rcr
idivl
sar
lock
into
in
mov
lret
jmp
rcl
jmp
ljmp
in
mov
mov
xchg
add
add
add
lret
add
shrb
loopne
xor
pusha
ljmp
add
mov
add
int3
or
rorl
jne
ficoml
js
loope
cmp
inc
xchg
call
scas
lret
jmp
scas
leave
std
loope
cld
fildll
neg
mov
lret
vpmulhw
enter
into
xlat
shl
fadd
out
loope
jmp
call
popf
jmp
leave
leave
push
lods
stos
stos
adc
cmpsl
cmpsb
cmpsb
add
ret
ret
ret
ret
ret
ret
pop
mov
stos
aam
dec
cmp
test
push
scas
and
mov
ja
mov
dec
xchg
ret
push
stc
lret
fs
test
mov
shll
rcl
ror
aad
int
ror
lret
mov
into
shlb
fcom
aam
fcmovnu
fidivl
fnstsw
gs
in
out
jmp
xor
div
mulb
lock
icebp
sbb
fcmovnu
or
mov
into
add
add
add
mov
mov
les
insb
mov
test
sbbb
xchg
cmpsb
sarb
mov
ret
cmpsl
enter
leave
ret
mov
enter
int3
into
addr16
iret
push
iret
rcl
dec
aad
xlat
inc
aam
aam
aad
xlat
daa
xlat
sbb
loopne
adc
jecxz
push
loopne
jecxz
call
repnz
add
sti
testl
std
incl
incb
mov
mov
mov
mov
stos
mov
mov
mov
mov
mov
ret
push
ret
inc
ror
xor
int3
lret
daa
lret
ror
and
aad
sbb
aam
rcl
aam
aam
push
rcr
xlat
add
fstp
add
add
jecxz
add
in
jmp
add
std
incb
mov
mov
add
ret
ret
vmovaps
mov
mov
push
ret
or
enter
leave
movl
lret
aad
add
xlat
aad
aam
add
xlat
aam
aad
fadds
fcmovnu
loope
aad
add
loop
add
add
in
add
repnz
incl
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarl
ret
mov
mov
mov
mov
test
test
cmpsl
test
xchg
pop
add
add
add
add
add
add
mov
scas
adc
sarb
ror
iret
jmp
aad
cmc
rcl
sar
iret
into
into
cli
int
lret
stc
lret
int3
int3
hlt
mov
mov
stos
fwait
xchg
xchg
xchg
dec
aas
ds
and
add
sbb
add
adc
add
push
add
add
cmpl
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
sarb
into
into
iret
xlat
aad
call
call
rcl
dec
iret
iret
dec
int3
int3
inc
sarb
stos
stos
lods
icebp
cltd
xchg
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
jne
je
je
je
fs
dec
inc
dec
cmp
sub
sub
ss
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
inc
ret
int3
lret
rcl
sar
aam
aam
lret
inc
mov
pushl
test
popf
popf
sahf
cwtl
xchg
cwtl
jmp
jno
xchg
adc
add
xor
add
add
add
add
jg
addl
test
jnp
imul
pop
pop
pop
movsb
push
push
push
stos
imul
push
pop
pop
cmp
aaa
aaa
pop
jo
outsl
adc
mov
mov
sar
mov
mov
mov
ljmp
lcall
xchg
xchg
xchg
lcall
xchg
dec
dec
dec
dec
adc
adc
add
add
add
add
add
pop
lcall
pop
popf
cwtl
cwtl
fcoml
addl
jmp
jp
sarb
jns
jnp
jns
jb
jb
push
push
push
cmp
aaa
sahf
pushf
pushf
mov
scas
scas
repz
lods
scas
sti
scas
scas
lods
std
test
pushf
popf
call
test
call
mov
lods
jmp
scas
scas
leave
movsl
movsl
movsl
cltd
jae
jae
adc
adc
add
add
add
add
outsb
insl
outsb
pop
mov
loop
lcall
mov
sti
xchg
xchg
xchg
lock
nop
fimuls
mov
jp
pop
and
inc
inc
dec
outsb
outsb
outsb
orl
cltd
lcall
mov
xchg
xchg
xchg
lcall
movsb
cmpsl
mov
scas
std
mov
mov
stc
mov
mov
cmpsl
movsb
cmpsl
pop
jg
addl
add
add
pop
pusha
pusha
or
lods
mov
movsl
mov
mov
mov
call
lahf
mov
negl
jle
stos
push
push
push
jo
pop
pop
outsl
imul
jge
subb
nop
xchg
lock
lcall
mov
pushl
pop
mov
jge
mov
scas
stos
insl
stos
test
add
add
add
popa
pusha
popa
or
mov
in
movsb
test
call
xchg
call
cwtl
lcall
popf
sahf
cli
xchg
xchg
cwtl
jmp
xchg
xchg
aam
mov
out
nop
jne
notb
cmp
dec
jl
mov
xor
jae
mov
insl
pushl
sbb
mov
mov
scas
scas
jle
mov
add
add
add
pop
pusha
pop
or
mov
in
mov
cltd
lcall
mov
mov
decl
addl
cld
xchg
popa
test
xchg
dec
jp
cmp
xchg
daa
push
lcall
punpcklwd
test
sbb
mov
insb
pushl
pop
jb
mov
pop
nop
mov
scas
scas
xchg
lahf
sahf
sahf
adc
add
add
popa
pop
popa
or
lods
mov
stos
movsb
test
mov
cmpsl
test
stos
test
cmpsl
lcall
pop
jns
mov
imul
sub
decl
adc
or
mov
push
decl
add
pushf
add
cmpsl
or
pushl
sub
jge
lds
jle
xor
leave
xor
shrl
movsb
cmpsl
test
add
add
add
pop
popa
pusha
or
movsl
test
cmpsl
mov
cmpsl
ljmp
mov
pushl
cwtl
lahf
decl
adc
mov
push
incl
add
decl
add
xchg
add
mov
add
mov
insl
inc
ss
inc
mov
into
inc
mov
aam
nop
call
inc
xchg
call
popa
lahf
inc
cmpsl
mov
mov
mov
movsb
movsb
movsl
daa
incb
add
add
pusha
pop
pop
or
mov
ljmp
mov
pushl
mov
stos
lcall
push
popa
call
pop
pop
decl
add
xchg
add
mov
add
scas
add
mov
dec
xchg
call
pop
lcall
pop
lahf
jmp
pop
mov
jmp
outsb
cmpsl
dec
cmpsl
mov
ret
cmpsl
xor
add
add
dec
pop
jge
jp
popf
xchg
cltd
jecxz
sahf
mov
pushl
mov
mov
lcall
sub
lcall
and
call
add
sahf
add
cmpsb
add
scas
add
mov
imul
fsubl
jmp
insl
stos
jmp
outsb
lods
jmp
jb
in
jno
jmp
jns
call
test
mov
cmpsl
test
inc
jg
addb
add
dec
dec
dec
pop
insl
outsb
insb
bound
cwtl
xchg
pushl
mov
mov
mov
jbe
lcall
cmp
pushf
sub
xchg
or
lcall
add
lods
add
mov
inc
or
call
inc
xchg
jmp
js
ljmp
push
xchg
push
xchg
fldcw
mov
push
lcall
add
sub
push
push
push
dec
pop
imul
xchg
mov
mov
mov
mov
ret
mov
popf
jmp
inc
cmp
fwait
or
mov
add
mov
gs
mov
push
jne
fistps
in
xchg
sar
xchg
ret
push
cltd
xchg
enter
lret
fwait
lret
push
xchg
lods
mov
stos
popa
mov
add
add
xor
inc
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
rol
ret
pushl
push
mov
stos
dec
test
mov
add
ljmp
add
add
lret
fisubl
cmp
jl
push
movsb
int3
push
test
stc
stos
sar
cli
test
sar
cld
lods
sar
stc
cmpsb
lret
jmp
mov
inc
mov
stos
jne
sahf
pushf
or
add
add
dec
dec
dec
aaa
jb
je
stos
test
int3
out
into
int3
cmc
leave
int3
int3
sti
leave
leave
leave
std
mov
mov
stos
bound
jmp
add
mov
gs
add
into
add
flds
jmp
xchg
std
mov
mov
mov
std
mov
xlat
cld
mov
jmp
leave
dec
rol
scas
lods
scas
mov
add
add
add
add
pop
or
rcl
dec
loopne
loop
loopne
loope
fstp
fcmovnb
fcmovu
fcmovnu
aam
xlat
out
mov
mov
cmpsl
sub
jmp
add
mov
add
aad
jae
in
jp
icebp
dec
mov
std
inc
loope
std
std
leave
loopne
std
leave
std
lret
sti
out
mov
lret
mov
xchg
popf
pushf
popf
sbb
add
add
incb
incl
jmp
or
in
in
sbb
in
in
xor
loope
jecxz
mov
mov
mov
add
pushl
push
faddl
jne
jmp
insb
mov
std
ret
sti
iret
out
shl
call
in
aam
call
out
fsub
cld
aam
push
xlat
fcmovne
sar
mov
mov
and
add
add
std
std
add
incl
cld
cld
incb
aam
push
mov
pop
xchg
sahf
or
ljmp
add
add
rolb
jno
loopne
jne
in
and
std
shl
std
fldpi
std
fldl2t
cld
fldl2t
sti
fld1
fsubr
cld
aam
push
enter
iret
aad
mov
popf
sahf
das
add
add
int3
into
into
or
arpl
ljmp
add
movl
jno
loopne
js
out
xor
sti
int
clc
lret
test
repnz
repz
lock
sar
out
aad
out
aad
jmp
shl
jecxz
fsubr
enter
stos
stos
test
add
add
add
aam
mov
jb
or
mov
insl
inc
sbb
int3
and
xlat
sub
sti
loopne
fwait
clc
in
mov
out
loop
lret
jmp
fnstsw
lret
iret
mov
in
fcompl
out
jmp
rorl
mov
add
stos
stos
stos
add
xchg
mov
ljmp
nop
fidivrl
jg
rol
lods
mov
mov
ret
mov
lret
insl
aam
into
pop
aam
iret
dec
fcomp
fdivrs
loopne
loopne
jecxz
fisubs
jecxz
lock
jmp
or
std
std
add
add
add
incb
mov
mov
outsb
scas
mov
lods
mov
push
mov
mov
ret
mov
pop
sarl
or
loopne
or
int
add
incl
incb
lcall
shufps
or
int3
int3
int3
add
std
incl
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
fwait
lcall
rol
mov
xchg
enter
enter
ret
mov
scas
scas
insb
stos
stos
stos
xor
je
add
add
add
add
add
add
add
add
add
add
add
add
stos
lods
stos
add
mov
enter
sar
aam
aam
rcl
sar
iret
into
int
mov
mov
roll
sbb
add
add
add
add
add
add
add
add
jb
jb
data16
dec
inc
das
das
cs
and
add
add
mov
mov
cmpl
dec
int3
int
aad
aam
into
iret
iret
inc
mov
ljmp
lahf
sahf
sti
mov
xor
add
xor
add
sbb
jne
jae
xchg
adc
outsb
outsb
ret
bound
insl
insl
outsb
jb
bound
pop
pop
pusha
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
xchg
lcall
xchg
cwtl
lds
jae
daa
and
add
add
add
jae
jae
popf
xchg
pushf
mov
xchg
clc
xchg
test
test
imul
mov
into
movsb
mov
mov
decb
lea
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorb
stos
mov
test
mov
xchg
xchg
xchg
cld
pushf
popf
pushf
cmc
cltd
cltd
cltd
in
test
push
imul
jle
lea
testl
mov
mov
jno
mov
scas
scas
push
stos
stos
stos
add
add
add
scas
test
xchg
xchg
xchg
lcall
fwait
fwait
lcall
cltd
lcall
mov
loope
jne
out
xchg
fs
pushf
inc
ja
movsl
cmp
lods
sub
outsl
pushl
aaa
jnp
mov
mov
imul
int
add
add
xchg
pop
scas
movsl
stos
test
lahf
sahf
popf
jmp
movsl
call
push
decl
je
lea
push
lea
arpl
xchg
adc
xchg
or
or
scas
sbb
je
mov
sub
lds
mov
mov
subl
jae
push
mov
mov
test
scas
scas
scas
pushl
xchg
decl
or
xchg
push
decl
pop
jmp
adc
shlb
call
inc
mov
aad
call
push
xchg
dec
cltd
mov
mov
mov
movsb
movsl
mov
add
push
test
mov
lods
pushl
mov
movsb
call
sbb
pop
decl
add
mov
add
mov
push
xchg
fstpl
fistps
jmp
pop
movsl
jmp
movsw
call
lcall
test
test
add
add
arpl
adc
popf
pushf
fwait
cld
mov
mov
mov
mov
scas
lcall
xor
cltd
and
xchg
pop
pop
lcall
add
mov
push
jmp
outsb
stos
jmp
js
in
jnp
push
jle
out
jle
ficompl
mov
and
add
add
dec
adc
addr16
mov
mov
mov
mov
ret
ret
mov
jmp
jle
lahf
and
pop
ljmp
add
les
insl
fmull
out
mov
notb
enter
jmp
cmpsl
mov
cmpsb
movsl
sub
aas
aas
inc
adc
push
xchg
mov
mov
inc
sarl
ljmp
sbb
movsb
add
mov
gs
add
adc
in
outsb
scas
clc
test
cli
stos
sar
cli
lods
sar
sti
lods
sar
scas
sar
jmp
leave
inc
mov
cmpsb
ds
std
incl
xor
outsl
inc
scas
mov
mov
aam
mov
aam
rcl
shr
lret
enter
mov
jmp
add
add
aad
jae
call
pop
mov
fdivr
inc
std
ret
inc
icebp
mov
ret
in
test
dec
addl
stos
add
in
in
or
jmp
in
outsb
mov
add
mov
add
add
lock
cld
into
in
call
in
std
shl
shl
shl
push
enter
into
in
lods
scas
scas
popa
addb
add
incl
incb
lret
int3
shrb
lahf
sbb
lods
add
mov
add
loope
js
repz
movsl
dec
loop
cld
jmp
cld
shl
sti
aad
stc
shl
push
xlat
fcmove
shl
mov
mov
xchg
xchg
xchg
pop
mov
mov
cld
scas
add
mov
push
jae
fstpl
jg
in
insb
lods
cld
out
mov
shl
ljmp
jmp
in
aad
call
fcmovnu
scas
lds
lcall
rol
or
pushf
stos
xchg
and
push
mov
shll
lret
mov
mov
lret
adc
int
xlat
lret
iret
pop
dec
in
loopne
out
out
in
out
out
sbb
sarl
cmp
movsb
lods
arpl
lods
mov
ret
mov
lds
int
fimuls
int3
int3
into
or
aam
push
incb
addl
add
stos
incb
mov
incl
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
std
adc
xchg
sub
arpl
dec
mov
rcl
repz
rclb
icebp
mov
fidivs
push
cld
xchg
scas
mov
sbb
and
iret
push
pop
push
xchg
jae
cmc
movsb
mov
pop
in
jl
testl
lds
mov
jp
mov
add
inc
push
pop
mov
gs
xchg
mov
xor
call
or
cmp
adc
outsl
push
mov
lea
in
mov
push
add
jno
lret
xchg
icebp
mov
test
xsha256
cmpsb
push
std
push
popf
cmp
mov
mov
fsubrl
push
hlt
pusha
mull
inc
jle
js
movsl
cmp
cltd
pushf
xor
ret
pop
or
mov
js
inc
fsubrs
jge
xchg
scas
xchg
testb
out
stos
sbb
cmp
push
cmp
leave
push
pop
lock
mov
mov
bndstx
and
add
pop
test
ds
and
outsl
and
push
nop
inc
fcmove
jae
out
mov
sbb
dec
lods
jg
fists
mov
es
fldcw
mov
test
jmp
adc
aas
pushf
xor
push
lods
js
mov
lret
into
gs
xchg
out
push
out
mov
outsb
add
cmp
pop
mov
nop
pop
mov
push
mov
lahf
fnstsw
mov
int3
std
push
push
lds
stc
nop
shlb
dec
jecxz
adc
iret
inc
subb
fs
in
xchg
aad
pop
pop
mov
or
sub
sub
les
pop
mov
pop
dec
loope
mov
es
push
inc
xor
push
push
jmp
inc
movsb
cmp
jb
xchg
ret
notl
ja
dec
scas
insl
pusha
mov
ja
andl
push
clc
lahf
xchg
sub
sbb
mov
and
sti
xchg
mov
les
in
xor
mov
or
sub
jae
pop
sub
mov
dec
ffreep
or
mov
jecxz
std
adc
aaa
mov
add
mov
xor
xchg
sub
jbe
mov
mov
adc
in
inc
add
arpl
fsubr
orl
sub
lahf
pop
sti
jmp
sub
dec
or
add
stc
push
repz
fsubl
arpl
jbe
sahf
xor
leave
sbb
ss
cmp
stc
nop
hlt
nop
adc
stc
nop
adc
ss
scas
addr16
xor
or
ficoml
or
sub
mov
inc
in
es
into
gs
lods
inc
add
in
orl
mov
stos
ljmp
mov
std
push
inc
fldl
mov
inc
ret
stc
hlt
dec
mov
sbb
mov
ss
push
out
inc
cli
xchg
jae
fdivl
xchg
sbb
xchg
out
int
mov
scas
out
push
jmp
or
into
cmp
push
in
mov
nop
daa
shrd
fbstp
scas
inc
bound
xchg
sub
or
mov
mov
test
ljmp
sub
lahf
pop
cli
in
subl
mov
jle
inc
lahf
sub
push
icebp
inc
frstor
jae
sbb
lahf
ss
xchg
sbbb
sbb
aaa
sbb
jae
cmp
xchg
repnz
jae
adc
mov
loope
xchg
adc
into
xchg
xor
scas
push
mov
cmp
pop
inc
fimull
xchg
xor
sarl
mov
sub
rol
jns
pop
add
pop
xchg
insl
add
ret
hlt
mov
pop
jecxz
mov
push
jmp
xchg
shrl
ret
repz
repz
nop
sarl
xchg
das
js
pop
popl
lcall
jne
popf
cs
in
pop
mov
jbe
lds
int
push
pop
icebp
pop
mov
xchg
fbstp
and
push
call
scas
rcr
je
iret
in
std
sub
xor
int
push
jns
xor
iret
dec
in
ret
jecxz
cmc
sbb
push
inc
insb
push
lods
cltd
gs
xchg
mov
sbbb
adc
lret
rcrl
ja
cwtl
popa
fbstp
mov
std
xchg
in
ds
outsb
inc
mov
jne
cmc
mov
test
mov
and
stos
pop
push
daa
mov
add
je
dec
pop
push
in
mov
adc
lret
and
lods
inc
mov
jne
or
jo
dec
pop
shrl
cwtl
rcrl
mov
dec
dec
xor
test
sbb
or
jge
and
fisubl
es
dec
sub
jge
jns
rep
scas
inc
xchg
cs
dec
iret
data16
xchg
sub
lods
sub
scas
inc
push
mov
pop
scas
popa
cmp
push
rcrl
push
out
hlt
cmp
popf
xor
mov
cltd
xor
cmp
add
lds
clc
inc
mov
je
pop
mov
fwait
xor
dec
movsl
cmp
sbb
dec
stos
dec
in
fsubrl
push
inc
fiadds
and
adc
add
add
add
and
xchg
sub
sbb
sub
sti
test
sub
cmpsb
scas
rep
cmp
jns
mov
sub
out
cld
mov
fsubrl
jg
push
scas
or
mov
mov
leave
pusha
add
notb
mov
fs
outsb
jno
lahf
push
es
popl
cwtl
mov
outsb
dec
out
sbb
jl
fucomp
jg
push
out
xchg
xchg
sti
xchg
leave
jecxz
data16
jbe
add
xor
hlt
mov
pop
stc
nop
mov
push
cmp
iret
sbb
xchg
or
jne
sbb
mov
add
scas
push
call
xchg
icebp
pop
and
xor
into
in
jne
and
je
out
pop
sahf
sbb
adc
inc
and
mov
enter
push
ljmp
jp
xor
or
pushf
xor
push
aam
addb
push
xor
cld
sub
xor
xchg
mov
ss
dec
or
inc
fwait
aaa
into
shlb
add
icebp
push
in
es
xchg
sub
push
inc
xchg
scas
mov
fdiv
xchg
out
bound
mov
cltd
in
repnz
mov
loop
add
lahf
outsl
cmp
mov
loop
pop
fistpll
fsubrs
mov
push
jecxz
insl
and
mov
xor
in
popa
clc
and
popf
jnp
jecxz
cs
xchg
fdiv
shrl
inc
insl
jb
xor
sub
repz
icebp
jns
and
or
imul
jnp
aad
and
pop
cs
adc
es
sub
testl
dec
das
jl
fdivl
cmpsb
inc
xchg
sahf
xor
test
daa
mov
cmp
enter
lea
iret
adcl
out
pop
call
adcl
rcrb
scas
lea
cltd
jnp
add
gs
out
mov
and
sbb
jns
aaa
into
mov
fistpll
rorb
fsubrs
xor
dec
js
mov
fidivl
shrl
rolb
or
push
fidivs
ja
stos
movsb
jbe
rol
dec
mul
cmpsb
mov
dec
xor
lahf
gs
or
ret
xchg
lods
hlt
fnstenv
dec
dec
sub
xchg
xchg
cs
fisubrl
lds
bswap
gs
pop
testl
fcmovbe
les
std
inc
sub
jno
dec
stos
inc
addl
lock
or
adc
sub
mov
jge
ds
sahf
fsubr
iret
lret
sub
std
lock
and
fsubr
push
inc
push
and
mov
les
push
push
adc
testl
les
inc
ficoml
add
cmc
mov
data16
lea
scas
inc
loopne
inc
fmuls
push
xor
aaa
das
pop
negb
gs
sub
push
in
pop
out
aam
and
push
pop
push
xchg
stos
rorb
mov
cmpsl
sbb
dec
push
jns
nop
lods
iret
mov
je
push
push
lret
sti
leave
stc
nop
sti
sbb
jle
xor
lock
les
sbb
repnz
inc
lock
sub
cli
jl
insl
testl
xor
jle
or
mov
sti
push
sbb
mov
or
test
or
xchg
inc
mov
gs
movsl
jbe
mov
jbe
shrb
mov
stc
js
mov
dec
bound
add
repz
or
ds
and
jmp
xor
and
add
pop
xor
xchg
jne
leave
repz
mov
negb
mov
sbb
xchg
mov
gs
lahf
test
push
and
xchg
ret
int
cmpsl
mov
std
repnz
cltd
aam
js
xor
dec
cmp
fsubr
cmc
jbe
and
shll
lds
cld
push
mov
or
test
imul
scas
add
pushf
insb
dec
pop
mov
in
cmp
loop
xor
mov
jae
movsl
in
fstl
jg
dec
lahf
adc
push
mov
into
adcl
xchg
or
inc
je
sti
jle
lock
xor
jle
call
lahf
insl
adc
xor
imul
arpl
insl
inc
adc
loop
mov
mov
push
xchg
loope
ficoms
lea
in
sbb
rcl
push
mov
jbe
push
addr16
iret
sub
fisttpl
mov
mov
cmpsb
sbb
sub
int
cmp
popa
dec
sti
sar
jns
pop
movsl
int
push
jmp
push
inc
stos
and
stos
xor
xchg
dec
icebp
movsl
loope
mov
jbe
push
jne
loopne
lcall
sbb
or
nop
ds
sbb
mov
pop
push
test
pop
lods
cmpsl
push
mov
mov
or
cmp
stos
call
cmp
icebp
inc
sbb
jae
fnstcw
add
jb
push
popf
and
push
cmpsb
std
outsl
push
jne
lods
xchg
add
lcall
pop
jecxz
mov
adc
movsb
pop
popf
xor
push
arpl
xor
mov
xchg
rcrl
add
fidivrs
incl
mov
xchg
lcall
aas
cmp
scas
push
adc
jge
jmp
xor
repnz
adcl
cmp
in
data16
idiv
jb
pop
enter
and
xchg
fisubrl
cs
fwait
and
xor
push
dec
cmc
push
scas
loopne
mov
cmpsb
gs
or
xor
jno
ss
in
xlat
cli
data16
dec
jns
addb
mov
sbb
pop
xor
inc
fldcw
mov
sti
leave
int
add
adc
xor
adc
mov
rol
mov
call
jo
mov
push
out
or
xchg
add
push
mov
or
enter
inc
jmp
movsb
cmp
push
scas
or
mov
jo
sbbb
and
in
lods
inc
and
insl
add
dec
fidivs
ret
in
cld
xchg
ret
or
sbb
lods
cmp
iret
dec
xchg
push
in
xchg
rolb
jno
je
mov
and
sub
xor
and
push
call
out
mov
sbb
or
test
mov
mov
push
out
sar
lret
bound
sbb
inc
sub
adc
data16
push
std
pop
sahf
jnp,pt
sbb
fisubl
lret
mov
xor
popa
clc
stos
pop
shrl
ret
jg
cmp
pop
mov
outsb
lcall
mov
dec
loope
push
call
call
testl
imul
pop
lea
and
jp
pop
hlt
les
add
fdivrp
xchg
and
mov
sahf
dec
sbb
jae
test
roll
xchg
pop
mov
pop
out
pop
xlat
aad
mov
jbe
cwtl
loopne
mov
lahf
les
mov
aad
sub
jb
dec
dec
loop
jge
nop
xchg
ja
add
xchg
fiadds
ss
mull
jmp
arpl
or
nop
daa
aas
add
xchg
jns
mov
xor
sar
addl
or
gs
mov
lods
lea
int3
mov
stc
cmc
in
outsb
pop
pop
inc
fcomps
add
js
pop
divb
and
enter
std
loope
xor
push
dec
in
adc
add
fsubrs
fisttpll
lea
aad
stos
cld
xlat
outsb
in
push
xor
cmpsb
or
cltd
mov
int
mov
dec
outsl
push
mov
ret
cmp
dec
loope
fldcw
call
add
jle
dec
add
popf
inc
bound
mov
mov
leave
sub
in
inc
dec
loop
cmpsl
jnp
clc
xchg
imul
in
mov
inc
push
mov
cmp
cmp
pop
mov
int3
loop
pop
push
and
inc
pop
xor
lahf
outsb
push
mov
mov
cmp
in
jle
push
push
pop
repnz
das
pushf
xor
jb
adc
xchg
sarl
pop
test
shrl
inc
and
jne
add
pop
cmpsl
pop
mov
inc
push
jmp
jmp
aam
fiadds
repnz
push
mov
adc
idivl
das
xchg
int
jae
mov
ljmp
jge
lahf
sbb
mov
adc
jp
xor
mov
repz
fisttpll
and
jnp
fimull
add
cltd
xor
fidivl
ds
jbe
jl
js
pop
popf
addb
je
shlb
xchg
adc
hlt
xor
lds
pop
or
repnz
sub
jle
jns
pop
cwtl
dec
loopne
jbe
cs
out
push
mov
call
adc
jnp
push
movsb
cmp
add
add
stos
push
sub
ja
jge
leave
fsubrl
mov
stc
enter
and
adcb
dec
cmp
js
sahf
xor
or
jbe
pop
ror
popa
mov
shr
jg
mov
mov
fcoml
cmpsl
sbb
adc
push
inc
xlat
add
cmc
mov
push
sub
jl
cltd
inc
mov
xor
pop
cmpsb
cmp
daa
mov
pop
loope
pop
add
jecxz
fwait
sub
mov
mov
pop
mov
lret
pop
ds
cmp
jb
pop
repz
fdivrs
leave
outsb
js
ret
das
adc
testb
add
ja
movb
mov
xchg
mov
fs
add
sbb
add
cs
aas
xchg
nop
daa
gs
pop
out
mov
jbe
adc
arpl
xchg
mov
mov
ret
scas
sub
or
add
out
test
popa
clc
sub
mov
push
shrl
sbb
dec
fildll
lods
inc
xor
pop
lret
pop
test
outsb
mov
scas
jle
mov
and
aam
mov
stc
mov
repnz
fsubrs
out
and
cmpsl
aaa
pop
mov
mov
lods
inc
mov
fxch
bound
push
data16
nop
or
mov
mov
fsubs
fldcw
ret
dec
ss
push
insb
insb
add
jl
xchg
sbbl
mov
cmp
cmp
pop
daa
xchg
pop
repnz
inc
out
jns
das
outsl
repz
dec
mov
popf
sbb
mov
mov
aas
test
enter
dec
in
ss
inc
or
add
mov
int3
and
pop
xlat
inc
xlat
add
outsb
push
sub
popa
jg
mov
jl
sti
cmp
mov
adc
xor
cmp
push
lret
ret
ftst
xlat
outsb
add
imul
sub
mov
mov
dec
jnp
stos
bound
lds
dec
out
dec
out
adc
imul
lds
call
jno
sbb
add
icebp
sub
enter
stc
loope
loope
adc
incl
lds
xchg
mov
aam
cwtl
sti
fdivl
mov
xchg
in
sbb
aaa
add
jnp
adc
in
lods
xor
inc
push
cltd
xor
push
in
push
mov
dec
ds
add
data16
cwtl
adc
xorb
rcrb
es
dec
ds
fildl
push
out
xlat
push
stc
xchg
icebp
test
mov
mov
xor
inc
aas
mov
jbe
fcmovu
jno
in
test
daa
clc
jo
or
int3
lcall
sti
xor
repz
push
in
insl
sbb
cmp
jno
scas
cmp
es
scas
inc
xchg
int3
arpl
sahf
in
cmp
ljmp
sbb
dec
outsl
ss
popa
push
out
xchg
pmulhuw
push
stos
ret
jge
inc
push
loopne
xchg
test
arpl
fsubr
xor
pop
or
mov
daa
mov
cmp
inc
fcoml
popa
push
cli
inc
push
xchg
scas
cmp
mov
ret
pop
sbb
cmp
push
pop
lret
cmp
test
cmpsb
or
js
shl
lock
sub
dec
fildll
les
xchg
mov
test
jo
test
cltd
mov
cmp
fdivs
pop
sub
into
gs
fbstp
sahf
clc
pop
push
std
xchg
lcall
mov
lock
icebp
cmp
or
fs
andb
out
pop
stos
sbbb
jb
or
jnp
aaa
mov
fisubrl
dec
clc
fmul
arpl
adc
mov
movsb
adc
arpl
mov
ljmp
sbb
mov
test
mov
jae
inc
fsubl
iret
arpl
add
lret
bound
xchg
aam
lahf
ss
sbb
pop
jbe
mov
dec
arpl
or
es
fidivrl
sbbl
je
and
mov
mov
add
or
jo
sub
in
inc
nop
mov
fisubrl
adc
add
mov
fistl
test
fisubrs
pop
repz
sti
xchg
cs
addr16
xor
dec
adc
adc
mov
xchg
push
mov
test
cmp
cmp
jmp
push
in
fsubrl
xor
sbb
xchg
sub
ds
imulb
test
mov
mov
xor
add
jle
xor
testl
shrb
pop
pop
pop
and
mov
ds
or
mov
sti
cmp
lret
add
mov
dec
scas
sub
mov
push
iret
dec
jmp
jcxz
add
ds
cmp
pop
arpl
gs
lea
rcll
int3
xchg
mov
fistpl
mov
xchg
sbb
dec
les
dec
inc
test
cmp
sarb
sub
jnp
scas
movsb
or
xchg
popa
or
dec
aas
pop
and
or
aad
mov
pop
mov
inc
gs
addl
dec
mov
pusha
or
mov
sub
jbe
dec
imul
loopne
mov
jle
mov
inc
xor
aad
push
sub
adc
shlb
sbb
icebp
fisubs
aad
sti
testl
aaa
insb
mov
paddq
xchg
fcmovne
jmp
push
bound
xchg
mov
or
fs
pushf
je
arpl
push
mov
aad
sbb
test
mov
jl
dec
out
dec
push
mov
dec
inc
idivb
test
xorl
dec
stos
push
cs
inc
push
inc
xchg
sti
mov
sahf
aad
cmp
hlt
cmpsb
dec
xor
push
sub
loop
in
dec
test
and
fdivrl
out
outsl
push
mov
adc
lret
cmp
xchg
movsl
js
dec
jl
add
push
mov
mov
push
cmc
sahf
mov
stos
stc
fwait
xor
ficoml
mov
sub
test
sbb
addr16
jmp
bound
sub
stos
mov
repz
jl
out
or
nop
mov
push
xor
xor
ret
pusha
jecxz
out
not
int3
movb
rclb
xchg
pusha
mov
and
cmp
adc
add
cmp
lock
pushf
add
test
divb
push
sarb
shrl
inc
mov
ljmp
mov
repz
aaa
out
jg
mov
ret
pop
xchg
add
jnp
mov
stos
or
push
xor
mov
ja
mov
mov
shl
loop
lcall
xor
xchg
in
lods
mov
and
je
adc
test
insl
enter
pop
jle
negb
aam
dec
mov
and
xchg
mov
jp
mov
clc
xor
sbb
stos
mov
stc
ljmp
aad
ss
and
jns
jns
test
imull
clc
sub
xor
aaa
cli
pop
bound
popf
sbb
adc
bound
ljmp
outsb
test
sub
mov
pop
stc
jmp
cmp
idiv
adc
js
test
aaa
call
jmp
fld
out
mov
add
mov
cmc
sbb
aad
mov
xor
pop
jecxz
adc
mov
sarb
mov
mov
mov
pop
ss
in
jge
movsb
fdivrl
mov
adc
xor
into
cmpsl
aad
movsl
jns
cmp
shlb
push
mov
cwtl
push
stos
mov
push
inc
xchg
out
ljmp
sti
stc
cmp
loop
aam
cs
mov
in
out
mov
pop
xor
mov
jmp
sub
cmp
inc
add
ljmp
mull
xchg
jno
sbb
addr16
imul
cs
xchg
iret
imul
mov
or
out
fidivl
imul
ljmp
outsb
xchg
push
fs
les
fisubrl
stos
std
jl
push
dec
imul
xchg
pop
mov
dec
iret
or
fs
movsl
lret
sub
int3
scas
or
cmp
lea
data16
jbe
cmp
jnp
cmp
cwtl
fsts
mov
sub
sti
push
mov
out
pop
out
arpl
shll
dec
sub
mov
cmpsb
mov
leave
xor
sarb
aas
bound
aas
imul
cmpsb
data16
and
lds
push
mov
mov
push
mov
imul
cmpsb
or
ss
cmp
pop
jno
loopne
jns
dec
dec
push
push
and
mov
cmp
sub
adc
mov
shlb
sbb
xchg
std
inc
xor
dec
or
jecxz
and
jge
stos
test
mov
jmp
and
ret
or
sbb
mov
sub
xchg
or
ftst
xor
mov
lahf
cmp
xchg
les
push
ljmp
fmull
scas
dec
icebp
xchg
adc
mov
into
add
push
loop
jns
in
add
in
dec
aad
xor
loope
in
sarb
or
in
xchg
and
add
mov
jnp
push
lret
push
mov
xchg
push
sub
xor
push
or
divb
xchg
decl
jg
sub
gs
xor
lret
and
adc
je
push
aad
insb
lods
jo
mov
mov
test
mov
xchg
inc
mov
jl
cmp
and
cmp
mov
sub
cwtl
mov
sub
enter
mov
sub
pop
cld
bound
pop
sbb
fwait
adc
shll
inc
sbb
push
jnp
lds
out
je
ret
sbb
lcall
int3
andb
cmp
test
push
add
add
cmc
cs
dec
inc
fwait
sbb
mov
mov
sbb
xor
mov
sub
test
push
fs
and
pop
jno
insb
test
test
adc
aad
into
jns
adc
inc
jmp
test
and
inc
cmpsb
push
mov
pop
push
arpl
mov
mov
hlt
stos
pop
push
inc
add
shl
adc
jbe
mov
or
mov
add
mov
shrb
mov
xchg
jne
dec
jg
push
and
rorl
sub
data16
fsubs
mov
jne
outsb
mov
movaps
add
jbe
pop
or
mov
aaa
pop
cmpsb
sub
lods
jns
inc
xor
rol
mov
ret
sbb
mov
dec
pop
std
pop
jle
loope
push
imul
test
and
mov
pop
mov
cmp
dec
mov
jle
dec
and
dec
or
repz
andl
dec
sahf
aas
out
fstpt
inc
inc
movsl
jle
sub
jecxz
ret
fmuls
mov
jg
xor
inc
push
push
mov
push
ds
pop
cmp
inc
dec
mov
fbstp
sub
jnp
iret
add
sub
je
mov
andb
inc
push
lock
dec
fisubrs
pop
adc
repnz
daa
ret
dec
rsm
and
cmp
fidivl
lret
inc
call
out
mov
mov
shlb
pop
fwait
and
rcrl
sbb
es
push
mov
sub
bound
out
aaa
cmpsb
shr
jae
xchg
and
pop
sbb
mulb
add
out
jno
out
test
insl
call
adc
and
icebp
inc
pop
dec
push
rorb
in
cmp
push
jmp
sarb
sbb
mov
fisubl
fnsave
push
xor
mov
add
jg
adc
test
and
cmp
jne
les
fisubs
aam
xor
adc
jp
adc
call
fidivrs
insb
xchg
test
sbb
movsb
mov
sub
push
pop
rolb
mov
and
xorb
mov
mov
movsb
jae
into
stos
push
pop
push
sbb
sbb
jnp
pushl
mov
in
pop
into
fsubrs
pop
int
stos
push
rorl
pop
popa
cltd
stos
lahf
adc
out
xchg
dec
loop
and
jmp
mov
fcoms
enter
jp
dec
mov
fisttps
daa
add
out
cmp
hlt
push
mov
inc
dec
lahf
jbe
fbstp
push
pop
lock
or
pusha
xchg
insl
mov
push
or
test
sti
inc
sbb
out
test
jmp
pop
jae
rol
out
push
xor
cmp
sub
outsl
lret
inc
lock
xor
lret
mov
push
sahf
pop
lods
pop
jns
push
push
jb
dec
pop
insl
es
dec
inc
or
testl
les
cmp
loope
dec
cmp
mov
loop
mov
dec
stc
test
outsb
fwait
std
scas
sub
popf
rcl
jp,pn
lods
pop
push
xchg
jbe
mov
aaa
sub
sub
insb
jg
sahf
mov
in
cmpsl
jecxz,pt
jmp
push
aaa
das
fiadds
or
jne
add
adc
pop
sbb
sbb
push
jnp
push
ja
sub
test
mov
int3
test
cltd
in
nop
fdivp
or
mov
mov
add
pop
or
mov
lret
pusha
frstor
inc
lods
cmp
pop
imul
lcall
je
pop
dec
and
mov
adc
lods
xchg
sub
clc
cmp
sub
test
repz
sbb
lods
aam
add
or
sti
lods
aad
pop
fucom
sub
rcr
mov
mov
cmp
sbb
into
out
aad
rcrl
movsl
clc
cld
nop
mov
clc
outsb
and
mov
xchg
rcrb
mov
je
cs
cmpsb
mov
cld
stos
dec
in
add
mov
sbb
dec
es
aad
xchg
jmp
imul
lods
fstl
xchg
xchg
rcrb
lods
fwait
sub
stos
popf
jb
out
xor
inc
xchg
sbb
inc
adcb
rcrb
push
xchg
jns
pop
mov
push
sbb
mov
mov
cmp
mov
rorl
ja
cmp
mov
pop
adcb
mov
xchg
nop
cmp
pop
cmp
jns
ret
aam
push
mov
mov
xchg
add
add
sbb
clc
jae
or
jecxz
negb
inc
and
and
rcll
mov
ss
mov
lock
xchg
shlb
or
int
jb
dec
ss
mov
cmp
lods
aam
add
xor
pop
jns
inc
push
push
xchg
mov
ss
lods
in
lret
test
shr
xor
rol
mov
mov
lahf
mov
jl
xor
cmp
mov
mov
lcall
fstl
mov
arpl
pop
fwait
dec
xor
in
hlt
in
inc
gs
rcrl
lds
xchg
push
jl
xchg
fucompp
lcall
add
or
and
dec
and
fistl
loope
js
sbbl
cltd
rcrb
pop
xor
fadds
inc
pop
cmp
dec
imul
or
cwtl
push
mov
mov
sbb
subl
pop
fbstp
sbb
call
mov
xor
mov
mov
mov
sub
xlat
mov
loopne
push
flds
inc
xchg
dec
test
xchg
or
adc
push
icebp
inc
das
jnp
int3
pop
ljmp
popl
aad
lods
popf
push
fdivrp
inc
decb
inc
or
jae
sub
fs
xor
outsb
js
xor
push
lcall
or
scas
lock
mov
scas
push
push
das
pusha
push
andb
xchg
cmpl
ja
sub
das
sbb
sbbb
and
in
xchg
insb
cmpsb
mov
pop
add
xor
test
lahf
stos
inc
rcll
sub
push
xchg
int
mov
jne
cmp
ds
ljmp
push
lahf
push
out
icebp
inc
jbe
mov
pusha
ljmp
pop
movsb
adc
jbe
mov
movsb
pop
mov
push
fsubrl
ss
mov
dec
leave
movsl
int3
leave
shll
mov
jns
ret
daa
loop
cmp
imul
fcmovnu
clc
int3
jp
outsb
push
sub
stos
xor
lods
mov
xor
add
jg
cmpsb
push
mov
push
std
mov
mov
xchg
dec
faddl
in
pusha
aad
call
pop
shlb
shr
les
jmp
and
jnp
cmp
popf
lods
push
jle
add
stos
pop
jmp
cwtl
mov
sbb
adc
cmp
xchg
pop
popa
and
sbb
push
addr16
enter
ret
lcall
fstpt
inc
add
lds
mov
lock
cmpsb
adc
xchg
cmp
pop
aad
inc
in
xchg
jnp
call
inc
loope
cmp
aad
lahf
ret
insb
jnp
sahf
mov
ret
xor
push
jne
cmp
dec
or
or
adc
imul
jbe
pop
rcll
sub
outsl
dec
mov
mov
mov
outsl
and
mov
push
lahf
int
push
add
cmc
inc
jbe
stc
xchg
sub
cmpsl
mov
dec
int3
jg
jno
adc
jnp
lcall
mov
and
jl
sbb
jae
test
inc
sbb
mov
idivb
jo
fiaddl
add
push
xlat
orb
lods
in
in
mov
xchg
pop
adc
mov
sahf
fistl
test
xor
sbb
and
and
int
cmp
cmp
scas
sbbl
add
addr16
mov
mov
xor
mov
in
inc
not
lahf
and
outsl
push
xchg
inc
es
cmpsl
mov
imul
xor
int3
das
jns
sbb
lods
mov
arpl
or
sub
js
push
mov
or
out
pop
cli
inc
add
or
push
cwtl
mov
scas
push
pop
popl
push
jmp
mov
jl
rcll
vandpd
lds
mov
mov
adc
mov
and
sti
sbb
movsl
loopne
cmpsl
sbb
sub
jl
sahf
dec
adc
dec
icebp
roll
adc
sti
cmp
pushf
mov
push
test
and
inc
sub
vxorpd
jmp
imul
pop
insl
cwtl
repnz
mov
adc
ds
arpl
dec
nop
fldl
popa
popf
loope
xor
imul
cmp
aaa
fnstenv
call
addr16
jmp
or
cmp
jge
and
push
sub
pop
push
nop
inc
stos
pop
xor
dec
xchg
mov
adc
sub
mov
and
cmpsb
sahf
inc
movsb
xchg
jnp
mov
ret
mov
push
pop
cmp
test
xchg
xchg
or
mov
adc
lcall
or
out
jp
pop
and
sub
mov
mov
fdivl
sti
xlat
sub
data16
and
xor
movsb
sbb
out
iret
cwtl
adc
pop
mov
mov
mov
sub
xor
mov
test
adc
testl
add
addr16
xchg
sub
pop
mov
nop
shll
and
pop
sahf
pop
fadds
les
inc
je
fs
rclb
neg
call
int3
fwait
insl
or
xchg
push
imul
outsb
test
daa
pop
imull
jbe
inc
loopne
loop
mov
mov
xlat
paddq
xchg
test
xor
in
lahf
sub
jb
push
xchg
xchg
cmp
lcall
mov
fstpt
mov
cmp
inc
dec
pop
popa
xorl
aas
mov
das
jl
dec
push
push
mov
out
jp
jnp
push
inc
and
movsb
bound
sbb
sub
jae
nop
shrb
js
lret
sbb
in
ret
sbb
jne
lods
pop
xchg
loope
wbinvd
dec
mov
outsl
mov
frstor
mov
fstpt
inc
dec
movzwl
in
dec
adc
mov
or
mov
shlb
sub
mov
lods
mov
inc
movsl
into
dec
inc
jle
pop
sbb
push
sbb
jp
insl
mov
cmc
cwtl
test
mov
lret
out
fstpt
jmp
add
std
pop
outsl
and
jnp
mov
adc
xor
ret
add
push
add
mov
pop
mov
aam
stc
insb
adcl
fs
mov
cmp
cmp
sahf
jb
push
hlt
mov
xor
in
test
inc
cmp
shr
fstpl
dec
sbb
fistpl
sub
add
repnz
test
xchg
mov
orb
pop
fbld
add
mov
or
jnp
rep
lret
out
and
mov
pusha
call
repz
jbe
dec
mov
cmp
fnstsw
xor
add
and
pop
jo
cld
dec
cmp
push
push
push
mov
adc
sbb
loop
out
add
divl
es
xchg
rcrb
add
jge
and
adcl
fstpt
push
mov
or
push
or
enter
push
scas
cmp
cmp
movsl
inc
dec
sub
lcall
push
loop
add
ror
fldcw
in
testb
jecxz
dec
cmp
fisttps
repz
dec
xor
mov
movsb
adc
push
jno
cvttps2pi
xorl
sub
arpl
mov
jge
xor
aad
sub
mov
xchg
push
movsl
lcall
stc
je
orb
fs
xor
movsb
cmc
jnp
push
jae
movsl
mov
jo
or
mov
sub
mov
clc
movsl
jmp
mov
ret
xchg
pop
ss
icebp
pop
pushf
dec
movsl
test
adc
or
adcb
stc
push
and
mov
or
std
insl
les
or
dec
jne
ret
and
mov
push
shr
iret
hlt
xchg
add
hlt
test
je
sbbb
xchg
insb
mov
dec
imul
ret
aam
pushf
xchg
scas
adc
sahf
aaa
cmp
push
shll
or
lock
int3
adc
pop
lcall
sbb
push
mov
xlat
and
sub
stos
jecxz
scas
sbb
addr16
je
clc
mov
pop
lret
addl
jns
jno
jae
shll
jne
mov
cld
sahf
jecxz
subl
ja
add
fistps
fsubrs
mov
xchg
sbb
or
dec
stos
lock
sub
nop
sub
xor
sbb
xor
call
xchg
adc
in
dec
dec
jp
xchg
mov
mov
cltd
imul
adc
stos
dec
or
mov
sub
test
jle
es
mov
xor
fidivrl
cmp
push
imul
cltd
mov
scas
outsl
mov
cltd
sbb
stc
cmp
sub
add
mov
add
in
dec
insb
dec
and
outsb
insb
fldenv
pop
das
adc
dec
jo
pop
and
lret
mov
pop
fs
push
sbb
dec
cmp
jae
ljmp
jle
inc
push
push
aas
test
insb
rol
mov
aas
rep
inc
pop
adc
rolb
add
mov
scas
popf
push
or
int
or
gs
pop
cltd
mov
cmp
sub
xor
push
inc
pop
nop
clc
jnp
in
jne
jb
mov
mov
in
test
jmp
sar
and
fwait
jne
fwait
fwait
mov
js
jns
stos
fsubrs
ljmp
test
lods
notl
and
xor
push
pop
aaa
xchg
xchg
hlt
rolb
insl
add
call
daa
jecxz
inc
dec
and
jge
xor
fs
cmc
test
jmp
mov
sub
cmp
sub
sub
or
cmc
mov
pushf
negl
cmc
out
call
mov
cmp
test
out
daa
add
xor
lods
ret
mov
stos
add
iret
push
sbb
imul
pop
popa
lret
jns
cmpl
pop
adc
sub
loope
or
test
pusha
ljmp
push
cmpb
outsl
xchg
dec
and
xchg
pop
add
mov
leave
setbe
fsubs
cld
jecxz
out
outsl
inc
inc
test
xchg
scas
or
mov
repz
adc
jae
fldln2
mov
dec
addr16
jmp
push
mov
mov
fdivrl
push
loop
filds
mov
fs
pop
test
xor
lea
frstor
mov
inc
popa
cli
cld
icebp
or
lahf
push
div
sub
sarl
sub
repnz
pop
jnp
sbb
es
lret
push
add
mov
cs
xlat
lahf
xchg
xor
sub
cmp
mov
imul
icebp
test
and
jecxz
imulb
mov
xorl
arpl
xor
flds
enter
subb
daa
cmpsb
mov
es
ja
mov
test
inc
push
inc
cmp
xor
shll
cli
lock
dec
push
lock
adc
shrd
insl
aas
test
dec
pop
inc
push
cmpb
dec
add
mov
xchg
xorb
push
imul
stos
loop
push
and
rcrl
xlat
in
dec
jbe
ljmp
punpckhbw
xchg
adc
mov
loope
icebp
ds
lcall
and
pop
mov
cmp
and
push
adc
fbld
fwait
imul
ficoml
xor
fwait
jo
adcl
adc
xchg
insb
lods
adc
in
push
pop
jle
cmp
sti
cmc
in
push
arpl
cmp
ja
hlt
push
lock
adc
adc
xchg
xchg
cmp
subl
out
mov
and
dec
cmp
mov
fcoml
mov
pop
arpl
jle
mov
lods
ror
cmp
adc
and
or
jle
repz
fdivrl
adcb
jmp
in
int3
cs
into
adc
push
push
xor
cmpsb
stos
cmpsl
push
mov
and
dec
cli
fs
mov
jbe
cmpsb
jno
add
sarl
mov
push
div
subb
scas
mov
inc
cwtl
lea
inc
dec
je
xor
mov
mov
into
dec
icebp
lret
lock
mov
add
or
orb
pop
fisubrl
mov
push
fucomi
call
or
sbb
mov
ja
push
lods
or
popf
mov
jno
call
mov
cmp
shll
mov
inc
mov
fptan
fisubl
mov
dec
inc
js
sbb
cs
cmpsl
jnp
imul
sahf
repz
fnstenv
out
shll
test
and
inc
lcall
xchg
push
loope
shlb
sub
sarl
mov
mov
jle
nop
aam
cwtl
clc
leave
ss
mov
jle
cmp
inc
shl
inc
push
jmp
cltd
jmp
vpsllq
push
mov
test
bound
push
aam
sti
adc
icebp
pusha
insb
add
and
lods
mov
inc
cmp
push
push
lods
adc
scas
sub
iretw
pop
inc
lahf
xor
add
pop
pusha
clc
clc
fs
jge
lds
inc
and
mov
jp
or
add
pop
faddl
fadds
push
mov
sub
lea
stos
icebp
cltd
sbb
mov
or
cltd
loopne
mov
rcr
test
shlb
mov
insl
inc
dec
jle
inc
cmpsl
push
push
sub
and
mov
inc
es
rcr
sub
jne
sub
jmp
dec
xchg
fsubr
mov
hlt
lcall
cld
mov
punpckhdq
imul
lods
sub
adc
leave
fdivl
pop
ds
scas
roll
pop
push
bound
inc
insb
into
lret
jecxz
shrb
and
jbe
and
cwtl
jb
call
inc
into
scas
add
lcall
test
push
mov
xor
push
fistps
hlt
daa
movd
in
test
jp
mov
addr16
imul
xlat
out
movsl
arpl
xchg
or
sbb
icebp
dec
and
xchg
in
adc
sbb
xlat
dec
push
jecxz
fsubrl
mov
lret
cmpsb
out
cmpb
in
jno
sbb
lcall
ss
scas
nop
in
call
jecxz
loop
xor
mov
lcall
mov
or
movsl
inc
mov
inc
js
cmp
and
jno
add
call
fildl
div
jle
addb
xchg
xorl
and
syscall
add
imul
ss
dec
iret
sbb
divl
mov
xchg
insl
stos
hlt
sbb
pop
dec
andl
mov
popa
ljmp
jo
and
fdivrs
add
jb
sub
cmp
sti
popa
cltd
xchg
and
mov
cmpsb
lahf
int
add
jle
jmp
out
xchg
xchg
scas
mov
inc
adcb
lock
jl
mov
cmp
js
cwtl
fs
inc
jb
cli
xchg
push
outsl
aam
in
jp
shll
sbb
test
xor
decl
filds
cmp
cmp
test
mov
out
or
outsb
stc
out
sbb
inc
jg
add
push
out
sarl
loopne
clc
bound
inc
sub
out
sbb
iret
pop
push
adc
sub
mov
lods
cmp
cli
mov
std
movsb
insb
xchg
xchg
or
add
psubw
dec
mov
inc
add
or
test
lahf
bound
js
mov
xchg
push
jp
inc
js
push
push
and
jne
out
jmp
pop
mov
pusha
jb
and
cmp
mov
cmpl
jmp
xchg
mov
mov
pop
or
dec
lahf
push
cmp
xchg
jecxz
mov
adc
aad
or
xchg
out
push
fdivrl
mov
pop
sub
xor
pop
pushf
dec
push
or
insl
fcomps
cmp
leave
out
sbb
adc
pop
out
sub
xor
mov
push
out
mov
pop
dec
ds
add
stos
loopne
adc
pop
inc
xor
and
inc
pusha
lea
add
hlt
aam
mov
cmpsb
lea
add
data16
jno
stos
push
mov
imul
sub
pop
das
enter
stos
in
mov
adc
es
popf
pushf
dec
jl
aaa
mov
sar
aaa
sub
lods
mov
adc
lahf
dec
clc
cs
mov
push
dec
ret
js
enter
cmc
push
sbb
inc
and
push
cmpsb
pop
clc
xchg
dec
fsubr
jecxz
jmp
icebp
pop
push
out
push
jb
or
call
insl
push
xchg
pop
or
je
insb
daa
cmp
mov
and
adc
in
pop
mov
inc
lock
xor
inc
lds
sti
aas
movsl
jle
aad
lods
inc
imulb
popa
loope
lret
bound
jmp
or
pop
sahf
xchg
pop
sahf
and
es
sub
clc
jge
pop
notb
lahf
sbbl
push
mov
das
mov
fbstp
js
xor
insb
fs
add
mov
mov
ret
ret
pop
lock
dec
loopne
es
pusha
mov
jns
mov
frstor
dec
xchg
xor
pop
bound
jbe
pop
lock
xchg
or
mov
pop
lods
daa
mov
lods
incl
xor
push
out
call
sti
andb
or
test
aad
xchg
sub
mov
stc
dec
mov
bound
ja
insl
repnz
rorl
repnz
pop
scas
jb
xor
inc
xchg
sub
les
jecxz
in
jmp
mov
jb
imul
nop
daa
mov
addr16
int3
arpl
out
xchg
sub
mov
or
lahf
pop
stos
sub
fsubrl
es
jnp,pn
fldt
pusha
idiv
mov
js
push
hlt
mov
and
into
hlt
mov
cltd
cmpsb
cmp
inc
in
scas
sbb
ds
mov
test
mov
ss
aam
in
push
js
lea
loopne
pop
scas
cli
xchg
fdivrs
test
and
mov
incb
adc
adc
enter
xchg
jmp
dec
loop
xor
popa
outsb
psubb
mov
addl
jp
pop
add
cmp
xchg
add
es
fstps
es
mov
ficoml
add
cmp
pop
add
cmp
or
leave
cli
xchg
repz
pop
scas
loopne
pop
mov
add
push
cwtl
pop
or
jecxz
rclb
test
add
sarb
pop
mov
mov
test
cmp
fcomip
mov
test
push
enter
cli
xchg
xchg
cmpsb
cmp
xor
jnp
cmp
pop
inc
fiaddl
test
push
shl
enter
push
ljmp
mov
aas
fcomps
enter
jnp
pop
inc
in
jg
sbb
ficompl
add
and
pop
addb
jp
lea
fwait
loop
xchg
es
and
shlb
xchg
jnp
cmp
lret
pushf
jmp
in
dec
in
call
xor
jo
addr16
insb
xchg
imul
mov
lock
fldenv
mov
popa
and
add
rcrl
xchg
sub
push
adc
repz
jae
pop
lods
outsb
std
xchg
cwtl
into
movsb
cmp
mov
cmpsb
cmp
cmp
pop
xchg
sub
test
pop
repz
es
dec
sbb
fcomps
sub
and
jbe
push
inc
adc
jge
inc
fisubrs
or
xchg
mov
push
out
aad
lcall
mov
mov
fxam
jl
xor
jmp
pop
pop
and
test
pop
movsb
leave
inc
xlat
icebp
push
jmp
adc
dec
and
pop
insb
testl
loop
xchg
cs
xchg
and
adc
cmpsl
push
cmp
add
pop
mov
mov
jb
sti
lods
cmpsl
test
loopne
aaa
into
clc
add
cmp
lea
gs
sub
faddp
or
sub
sbb
dec
fbstp
mov
sahf
xchg
dec
loop
sarb
adc
ss
ljmp
mov
sub
jmp
xchg
adc
lahf
ss
xor
adc
xchg
pop
pop
mov
fldcw
mov
aaa
and
pop
push
mov
outsl
cmpsb
mov
hlt
in
scas
inc
add
cmp
aaa
and
lahf
pop
push
pushf
xor
mov
xor
decb
jo
dec
push
pop
icebp
lea
xchg
lods
popf
xor
mov
pop
in
clc
stos
inc
and
sbb
jnp
jg
sbbl
jecxz
xor
add
cmp
mov
imul
mov
inc
xlat
dec
loope
add
xor
pop
mov
test
scas
movsl
dec
iret
pop
hlt
idiv
pop
scas
sub
inc
fiaddl
call
xor
mov
dec
fists
ss
into
jo
stc
mov
popf
xor
jmp
ds
mov
xor
sub
mov
xor
fsubr
test
adc
aaa
xchg
jo
xchg
sub
mov
inc
ficoms
push
jmp
jno
popf
xor
xchg
pop
xchg
sti
xchg
fwait
and
jns
adc
test
xchg
and
mov
inc
fstl
aam
and
shrl
xchg
xchg
sub
je
dec
movsl
call
mov
dec
ja
cwtl
das
inc
cwtl
hlt
mov
shrb
repnz
in
adc
inc
xchg
sub
lret
popa
push
jmp
in
or
out
inc
fisubrl
insl
add
nop
inc
xlat
leave
bound
cltd
ljmp
lock
test
jbe
mov
inc
xchg
cmpsb
cmp
xchg
in
dec
adc
aam
push
mov
jg
push
sbb
or
and
and
stos
inc
jge
jns
fs
lcall
xchg
sub
cs
dec
enter
mov
cld
mov
enter
clc
xor
fwait
push
pop
mov
mov
ds
rcll
adc
xor
mov
cmpl
push
idivb
pushl
daa
push
andl
dec
movsl
inc
ja
mov
fistpl
loop
sub
add
mov
aaa
xor
insb
xchg
inc
in
andl
sbb
sbb
cmp
sub
mov
test
pushf
sub
and
push
je
dec
stos
jge
fwait
movsb
int
cli
lret
sbb
notb
das
mov
pushf
addr16
movsl
out
mov
fsubr
add
aam
add
outsl
popa
push
xchg
push
insb
stc
nop
mov
jle
jecxz
sahf
daa
xor
pop
scas
aaa
xchg
test
icebp
xchg
aad
iret
push
sub
and
and
fbld
dec
push
cmc
je
out
ja
pushf
andl
adc
cmp
test
pop
cmpsl
mov
fisubrl
aam
cli
or
pop
adc
sub
outsb
inc
imul
mov
leave
outsl
push
add
mov
cs
jecxz
xorl
mov
in
jmp
in
aas
pop
outsl
or
inc
push
mov
lret
mov
mov
sbb
jb
and
mov
push
je
test
mov
rcr
or
mov
add
aas
mov
jp
outsb
lods
inc
movsb
mov
loop
testl
adc
xchg
test
sub
add
loop
fisubrs
inc
movsl
push
lea
jns
shll
xchg
int3
sbb
movsl
dec
push
push
das
leave
jge
fstps
sbbl
mov
ret
add
jno
xor
sbb
arpl
lret
scas
add
pushl
cmp
fisubrs
mov
mov
jge
sub
jne
mov
decl
cmp
push
mov
dec
adc
push
mov
dec
cmc
test
adc
cli
inc
adc
push
mov
xchg
aam
lods
push
mov
fxch
jne
push
daa
leave
jb
call
or
lcall
shr
sub
mov
dec
icebp
push
mov
or
and
pop
gs
mov
and
adc
les
sub
push
fs
data16
pop
popf
scas
rolb
mov
xlat
or
dec
pop
cmp
xchg
ja
enter
sub
cmpsb
pop
sbb
jmp
test
testl
aaa
aam
pop
jecxz
push
sub
mov
push
aad
jnp
xor
std
addl
rcrb
xchg
sub
cmp
fisubrs
mov
cld
mov
mov
loopne
sbb
jno
andb
push
movsl
cmc
xchg
into
inc
fxch
pusha
or
ficomps
mov
sbb
adc
rcrl
mov
popa
ret
and
mov
out
addr16
cmpsb
pop
mov
cmp
and
pop
mov
les
lods
sbbl
insb
and
xor
mov
testb
push
fsubs
adc
popf
xor
dec
cli
xchg
jle
les
lahf
and
rcrb
mov
sub
and
js
jne
scas
inc
xor
push
dec
in
jmp
imul
cmp
insl
stc
mov
sub
cmpsl
ds
inc
pop
lods
lds
int3
arpl
jecxz
and
add
dec
xor
mov
dec
daa
mov
mov
inc
fld
rcrb
or
push
out
sbb
adcb
cmp
mov
les
mov
mov
adc
jecxz
jae
mov
sbb
adc
cld
lea
stos
inc
aas
out
pop
repz
jo
push
push
jb
call
cs
fld
pop
cld
lea
mov
sbb
sub
adc
ss
repz
lcall
cmpsl
mov
xchg
hlt
mov
and
inc
mov
xchg
xorb
add
lea
fstps
scas
inc
dec
cld
test
push
mov
rcr
test
or
xchg
iret
mov
adc
fbstp
cli
inc
ficomps
ja
adcb
sbb
sbb
hlt
sub
adc
xchg
sub
pop
mulb
mov
xchg
xorl
loopne
popf
xor
add
lea
xor
dec
add
adc
ss
or
das
lods
fmul
inc
out
jmp
pop
ret
das
add
arpl
loope
jnp
shll
fwait
xor
pushf
jmp
push
cmpb
out
jo
fdiv
push
adc
ret
hlt
cld
adc
cmc
mov
push
iret
cmp
cmp
xchg
lcall
clc
in
cmpsb
xor
mov
lahf
lret
out
js
jb
mov
in
mov
fiadds
sub
jp
inc
xlat
pop
fwait
jle
or
mov
in
test
dec
into
jmp
jge
jp
cmp
int3
pop
sbb
fisttps
cmp
fs
jmp
jge
xchg
in
add
add
and
lahf
adc
and
shrl
xchg
mov
fstps
xchg
int3
sub
das
pop
in
fbstp
jae
in
movsb
inc
fidivl
lds
scas
iret
sbb
andb
inc
xlat
fwait
inc
sub
je
mov
popa
leave
setp
inc
ljmp
xchg
cmp
pop
outsb
mov
cmp
mov
mov
insb
push
and
divb
mov
aad
push
cwtl
ficoml
enter
adc
dec
xchg
rol
xchg
push
lods
and
jp
sub
bts
ficompl
loopne
imul
aas
call
sub
loopne
cld
push
xorl
mov
pop
repz
mov
dec
cli
loope
adc
mov
inc
push
imul
add
stc
xlat
inc
mov
ret
push
aad
out
fdivrl
push
pop
fidivs
popf
je
dec
sbb
lret
int
fwait
push
xorb
push
icebp
rcll
aaa
orb
jns
enter
loope
mov
bound
shl
mov
sbb
mov
out
inc
loop
cltd
je
adc
push
xchg
cld
jle
add
mov
insb
pop
sbb
sarb
cmpl
arpl
scas
mov
jne
cmpsl
pop
xchg
test
xchg
out
lcall
dec
pop
popf
shll
mov
popf
xchg
mov
mov
xor
dec
sub
pop
cltd
loopne
cmp
mov
mul
adc
pop
test
clc
cmp
mov
pushf
dec
mov
psrad
adc
jns
mov
hlt
outsb
mov
test
pop
cld
shlb
jno
das
bound
divl
stos
inc
push
lahf
testl
sub
call
out
dec
clc
cmp
out
ret
sahf
mov
mov
pop
scas
push
inc
fildl
mov
mov
push
out
filds
paddb
out
daa
loopne
pop
out
lea
jb
push
movsl
in
dec
xlat
int
cmpsl
std
push
loope
mov
testb
mov
fsubrs
inc
xor
xor
pop
lock
inc
pop
lock
insb
mov
int3
pop
lock
dec
pushf
xor
pop
insl
dec
push
mov
inc
arpl
xchg
jae
jo
rcl
repz
or
lret
or
lods
xchg
dec
jno
cmp
inc
mov
xor
push
in
dec
xor
mov
aad
lret
lds
or
push
jb
inc
sbb
aad
mov
repnz
das
sub
lahf
add
or
pop
xor
nop
adc
inc
xchg
lock
mov
adc
add
fnsave
in
ss
icebp
mov
mov
push
arpl
xor
cmp
push
push
push
aad
sbbl
or
dec
cmp
cmp
adc
add
jae
mov
adc
cmp
xor
adc
fidivrl
xchg
insb
dec
push
inc
mov
pop
xchg
jmp
leave
bound
inc
fisubrl
fsubrl
iret
fdivs
pop
jae
jle
push
sub
hlt
xorb
mov
dec
loope
insb
movntq
mov
pop
push
test
mov
lods
movsb
int3
fbstp
into
mov
add
push
in
pop
xor
test
ret
cmc
pop
pop
repnz
sbb
inc
fdivr
gs
xchg
lcall
scas
out
shlb
out
insb
add
sbb
data16
arpl
dec
mov
mov
mov
mov
xchg
sub
mov
lret
cmp
adc
pop
pop
sahf
dec
push
jb
xchg
adc
xlat
out
or
dec
aas
in
or
xchg
jl
xchg
scas
repz
ror
arpl
or
push
jnp
xor
test
sub
aad
fidivs
mov
jb
sub
repnz
inc
adc
movl
and
pop
aaa
imul
aas
repnz
jecxz
sbb
xchg
sub
pop
lods
inc
push
out
leave
sbb
insb
fs
cmpsl
cmp
jecxz
scas
jmp
mov
dec
gs
jno
lea
mov
aad
mov
or
jae
xor
xor
xor
mov
rcl
insb
add
cwtl
das
pop
jb,pn
popa
fwait
int3
arpl
adc
es
mov
or
in
push
testb
in
aam
ffreep
xchg
sub
push
mov
xchg
pop
xor
dec
ret
fidivl
addr16
cwtl
test
push
sbb
repz
push
push
scas
inc
sub
inc
popf
loopne
adc
adc
or
in
cmpl
jnp
sub
pop
icebp
mov
lea
cmpl
lea
and
xchg
clc
repz
jl
lea
mov
stos
and
aaa
repz
pop
and
jae
test
popa
clc
mov
push
popf
jmp
add
jecxz
imul
test
loop
or
sbb
test
cwtl
and
or
pop
push
in
pop
daa
mov
cli
dec
stc
nop
lock
nop
jecxz
add
aaa
call
incl
cmp
xlat
outsb
in
js
jns
cli
imul
stc
adc
jmp
std
lods
inc
out
imul
ljmp
add
dec
and
cmp
inc
fdiv
pop
shrl
sbb
jp
jnp
sbb
test
xchg
outsl
adc
repnz
mov
pop
dec
push
pop
testb
stc
lcall
pushf
out
pushf
xor
adc
aad
inc
fistpl
mov
jp
lret
mov
rcrb
mov
and
and
pusha
notl
aam
jne
pop
add
mov
pop
repz
mov
outsl
insb
sti
inc
fldt
jo
ljmp
aad
gs
test
push
and
pop
inc
mov
arpl
inc
fcoml
pop
sub
stc
jne
rclb
add
sbb
in
cmp
and
add
iret
push
rcrl
test
sbb
adc
fs
sub
pop
mov
pop
shll
cli
sbb
test
fwait
push
andb
jmp
inc
fisttpl
and
stos
inc
nop
addb
mov
out
mov
pop
pop
sti
xchg
mov
mov
iret
into
lds
test
sub
pop
ret
daa
mov
mov
lret
std
sub
mov
inc
js
or
jns
xchg
outsl
add
mov
pusha
pop
lds
push
popf
push
cmpsb
cli
fadds
add
and
cmp
rorl
cmp
test
jns
jecxz
and
notb
sbb
pop
or
push
mov
out
les
cmp
cli
jp
xlat
outsb
sbb
pusha
sub
push
lock
sub
jle
imul
lret
out
cmp
dec
loop
cmp
pop
lods
ds
xorl
lods
pop
lcall
push
in
ret
adc
ds
bound
cmp
cmp
mov
push
mov
adc
inc
lods
inc
jb
dec
out
pushf
dec
loop
xlat
pop
enter
sbb
cmpsb
jle
mov
fs
fwait
insl
mov
shlb
arpl
lret
bound
xor
es
dec
adcb
jmp
jle
lods
xor
loop
scas
jnp
and
ja
xchg
in
mov
pop
fdivs
aaa
sub
or
jge
lret
rolb
add
xor
jno
fmuls
push
loop
lret
popf
xor
and
adcl
cld
das
orb
mov
movsl
pusha
notl
pop
mov
add
fimull
mov
jae
lods
inc
pop
adcl
je
sbb
iret
and
ficoml
lds
cwtl
das
mov
stc
xchg
leave
stc
mov
mov
mov
cli
mov
mov
jecxz
in
pop
icebp
inc
push
test
xchg
mov
out
mov
pop
loop
mov
fimuls
cli
ds
add
mov
xchg
xlat
mov
inc
fdivl
pusha
test
pop
jmp
cmp
mov
scas
dec
sbb
ja
mov
mov
rclb
rcrb
testb
inc
sub
pop
lock
pushf
mov
push
jmp
or
insl
pop
mov
xchg
lea
mov
fnsave
test
sub
or
mov
pop
scas
lods
sub
mov
add
xor
lods
inc
push
push
imul
test
leave
jmp
cmp
inc
les
outsl
sub
pushf
popf
fidivl
mov
clc
xchg
es
add
inc
push
mov
pop
mov
lea
mov
in
sbb
rcrl
or
loopne
adcl
xchg
jecxz
inc
adc
aaa
into
imul
cmpl
mov
and
sub
je
inc
fnsave
aam
sti
add
dec
sbbb
xor
cmp
xchg
ret
push
sbb
xchg
cs
pop
fsubrs
cmp
imul
adc
vmread
lret
testl
movsl
dec
push
ds
mov
scas
adc
mov
push
jno
std
mov
leave
add
adc
ds
in
add
mov
leave
xlat
outsb
sti
adc
faddl
lds
mov
pop
lcall
mul
sub
loopne,pt
pop
rcrl
mov
aam
test
pushf
sar
push
das
repnz
js
inc
fimuls
lret
dec
in
in
mov
push
mov
pop
mov
das
mov
mov
mov
dec
out
pop
lds
call
pop
adc
push
cmpsl
and
pop
xchg
iret
sbb
sbb
scas
inc
pop
pop
add
fildll
ret
cmc
add
adc
ret
push
add
pop
mov
push
jecxz
inc
faddl
or
idivb
pop
adc
enter
rorb
std
xchg
jl
push
ljmp
hlt
mov
js
loop
xchg
sub
loope
inc
shr
xor
pop
adc
lea
shll
mov
mov
pop
scas
loope
clc
or
or
pop
pop
scas
mov
sub
sub
mov
lods
fwait
adc
and
xchg
lahf
movups
jmp
add
xor
movsb
pop
pop
xor
mov
mov
movsb
aam
xlat
lcall
xor
mov
mov
or
dec
aam
es
xor
or
mov
sub
mov
xchg
sub
movl
inc
mov
into
mov
rcll
jl
loop
aaa
adc
pop
xchg
aaa
into
outsl
mov
shlb
pop
call
add
sub
ds
jns
cs
aas
sbb
hlt
fistpll
rcrb
enter
out
aad
pop
imulb
ret
clc
cmc
call
nop
daa
dec
jmp
mov
addr16
mov
loopne
rclb
aaa
into
test
pop
out
aas
mov
lahf
sub
xchg
movsb
mov
jle
fidivl
and
hlt
pop
mov
mov
jge
jns
push
out
mov
pop
cli
out
xor
adcb
nop
add
fdivs
jmp
repnz
and
cmp
leave
dec
inc
fidivrs
jmp
sbb
adc
adc
push
test
fwait
push
filds
adc
push
cmp
outsb
insb
push
jo
mov
rolb
sahf
add
xlat
popa
sub
rcll
aaa
into
test
aaa
into
add
xor
movsl
cmp
aad
lret
lds
fs
cmc
xor
in
pop
mov
adc
cmp
push
shrl
rol
fidivs
test
sbb
jge
clc
pop
xor
dec
adc
mov
fwait
sub
mov
leave
pop
icebp
cli
mov
inc
sti
pop
bnd
cltd
xor
int3
ds
lret
push
ljmp
and
les
push
jmp
xor
and
jge
push
jmp
cwtl
fs
mov
aam
imul
push
popa
clc
aas
daa
es
js
dec
jecxz
xchg
pop
hlt
mov
and
add
loope
sub
lock
push
mov
lret
loop
loop
or
dec
es
nop
ds
loope
mov
and
push
sub
ret
pop
movsl
inc
pop
hlt
jbe
arpl
jbe
cli
xchg
shlb
xchg
data16
popf
xor
ja
xor
cmp
ja
ds
lahf
fdivl
lcall
sub
outsl
push
inc
inc
sbb
js
or
xor
sbb
xor
fsubrs
nop
pushf
xor
int3
imul
jmp
rcrb
mov
fdivl
cs
mov
movsb
cmp
push
jmp
mov
push
pop
dec
xor
in
imul
sti
xchg
or
nop
daa
lods
and
int
cmp
scas
std
int
out
enter
and
xchg
adc
adc
or
mov
and
push
cmpsb
push
out
sbb
sub
adcb
mov
repnz
inc
fstp
sbb
ret
dec
out
enter
lret
bound
mov
push
popf
sub
or
dec
pop
mov
dec
arpl
sahf
or
pop
dec
pop
lods
and
pushf
xchg
sbbl
dec
stos
lods
inc
fnstsw
xchg
insb
cmc
dec
loop
lahf
mov
addl
mov
frstor
sub
daa
pop
call
andl
jle
xchg
testb
daa
cmpsl
inc
fcoml
push
lods
inc
andb
mov
stos
stos
inc
sbb
jbe,pn
mov
shrl
rol
sub
iret
add
ja
lret
bound
ja
pop
push
imul
mov
mov
lods
inc
or
xchg
dec
loop
cmpl
scas
imull
call
jmp
rcr
adc
inc
inc
psllw
mov
leave
in
test
sbb
mov
inc
fdivl
int
insl
sub
sahf
sbb
nop
mov
mov
int3
add
add
sbb
lea
mov
leave
mov
xchg
sub
jo
shll
adcl
subl
lahf
loope
int3
arpl
scas
imul
add
push
mov
inc
push
lods
inc
mov
push
xchg
mov
dec
in
cld
in
xchg
cs
mov
cmp
and
or
aam
dec
out
xchg
in
fisubl
cmp
imul
sbbl
sub
fsubrl
push
loope
dec
loope
in
in
jg
test
fimull
mov
push
mov
lret
das
pop
mov
rorl
cmpsb
ret
daa
inc
fcomps
clc
in
out
movsl
out
jne
int
sbb
sbb
mov
daa
mov
mov
sarb
mov
push
in
and
icebp
mov
daa
mov
sub
lret
scas
xor
loopne
clc
jge
xlat
cs
xor
repz
test
repz
ret
add
out
xchg
sub
ja
sbb
test
leave
out
mov
mov
mov
mov
mov
into
gs
xlat
outsb
cmp
imul
lahf
lcall
mov
movsl
mov
incb
stos
add
xor
xchg
cs
dec
xor
jle
adc
lret
ja
loope
inc
adc
movsb
cmp
sbbl
dec
fnsave
out
mov
push
movsl
fisttps
outsl
inc
cmp
push
and
mov
aad
clc
or
and
push
mov
add
mov
lds
imul
inc
fstl
pop
scas
ss
js
dec
fnstenv
movb
cmp
and
lods
outsb
lds
adc
loope
enter
add
fbld
mov
mov
mov
xchg
sbb
jg
adc
xchg
and
sub
outsw
mov
pop
cmpb
or
sub
shl
imul
aas
mov
out
stos
test
iret
inc
or
jg
mov
mov
mov
jg
std
xchg
mov
sbb
pop
sarl
das
filds
ds
inc
dec
ds
jno
pop
jmp
adc
ds
or
lock
adc
les
xor
adc
inc
push
mov
test
mov
mov
cli
xor
movl
add
add
out
test
push
pop
jns
clc
icebp
leave
imul
iret
xchg
divb
das
pop
sub
sbb
sub
testb
pop
fstpt
jo
clc
mov
xchg
mov
cwtl
scas
int3
mov
lahf
mov
popf
stc
jle
ljmp
ret
stc
repnz
sub
push
and
xor
inc
pop
fmuls
dec
inc
add
pop
pop
add
cld
push
outsb
jp
lea
loop
push
jae
jnp
dec
push
enter
cmp
pop
xor
push
or
xchg
ret
adc
dec
mov
push
lcall
in
mov
mov
mov
cwtl
sbb
int3
mov
push
mov
mov
inc
add
xor
flds
insl
xchg
or
test
jl
loop
icebp
jmp
cmc
aam
scas
jge
push
and
popa
insl
xchg
popf
les
pop
dec
pop
jp
push
xor
cmc
push
shrl
lds
ljmp
sbb
push
stos
mov
push
jmp
and
mov
dec
sbb
cmp
ss
sbb
push
pop
out
mov
mov
or
mov
xchg
sub
lods
fnsave
mov
addl
shlb
push
outsl
push
test
mov
and
dec
mov
inc
sub
leave
popa
in
cli
xchg
and
jmp
scas
je
pop
sahf
mov
and
jmp
incl
xor
jb
div
stos
inc
and
xchg
sub
leave
pusha
jne
mov
sahf
xchg
out
enter
icebp
jmp
out
xchg
and
or
cs
clc
lcall
adc
pop
jne
stos
je
xchg
adc
ficoml
xor
inc
sti
scas
inc
sub
dec
int
loop
lahf
mull
jns
es
adc
js
int3
lods
inc
call
int3
arpl
sbb
jae
test
adc
fistl
xor
inc
cld
scas
inc
arpl
xchg
dec
int3
movl
fidivs
adc
push
ljmp
jno
js
mov
stos
test
adc
sti
pushf
mov
and
sarl
test
out
rol
pop
clc
icebp
testb
inc
adc
je
add
mov
push
out
adc
inc
cmp
imul
or
jl
pop
ret
inc
icebp
adc
or
mov
adc
and
or
and
cld
test
shll
push
xor
ss
mov
test
shll
stc
fildl
jb
sub
push
push
pop
insb
add
mov
and
mov
inc
xor
push
pop
mov
loop
bound
add
cs
push
mov
push
and
pop
mov
pop
icebp
stos
hlt
pop
hlt
and
inc
jnp
js
xchg
cs
cltd
cltd
xor
jae
dec
movsl
in
mov
push
shrl
aas
aad
jno
repnz
mov
insl
adc
push
shrb
icebp
aaa
das
push
mov
mov
inc
stos
mov
mov
lods
outsl
lds
cmc
popf
fdivl
data16
mov
and
nop
sbb
outsl
int
addr16
cmpsl
ret
int
js
sbb
clc
sbb
or
fwait
mov
dec
stos
sub
inc
cmc
popf
jae
icebp
lret
adcb
mov
loope
inc
into
jnp,pn
movsb
xchg
cmp
and
inc
fldl
inc
mov
aad
jno
fst
and
jp
mov
sbb
call
aas
jge
cmp
scas
sub
add
in
cmc
inc
cld
mov
pop
mov
sbb
pop
sbb
dec
jge
cli
lods
insb
popa
negl
sarb
and
xor
push
mov
rcr
divl
popl
repnz
adc
cwtl
adc
ljmp
in
aas
add
xor
jae
scas
push
insl
add
mov
nop
sub
icebp
test
es
dec
mov
enter
aam
add
lea
or
test
sub
jo
xor
add
mov
pop
in
sub
dec
in
dec
fcomip
mov
or
cmpl
push
mov
dec
jae
jae
mov
rolb
movsb
shr
pop
mov
outsb
aaa
pushl
sbb
loop
fnsave
dec
add
lcall
out
sub
xchg
xor
adc
adc
mov
mov
icebp
or
dec
jno
cmp
data16
sbb
cli
popa
pop
or
jge
or
dec
inc
mov
es
xchg
sub
lock
arpl
push
jne
inc
mov
call
sti
adc
test
aaa
or
mov
xorl
jmp
push
mov
cmp
xchg
in
sbb
sub
aam
cmpsb
dec
in
cmp
mov
jge
xor
into
cmc
out
sub
out
mov
ljmp
stos
pop
int3
loope
cld
adcl
push
adc
mov
lea
out
adc
testl
iret
and
or
test
mov
or
lcall
push
aam
scas
fidivs
xchg
inc
iret
popa
std
push
loope
mov
pop
ret
stc
cld
lcall
scas
push
popl
push
popa
pop
into
imul
sar
inc
lcall
enter
sub
jb
imul
enter
and
mov
push
jbe
orb
add
xor
aas
rolb
stc
lods
adc
xor
xchg
cmp
icebp
or
sub
xor
rorb
loope
pop
pop
adc
adc
jne
cmp
les
lret
jo
push
jge
adc
mov
add
pop
push
ret
dec
adc
push
popf
aas
lock
adc
sub
test
sbb
arpl
or
adc
push
es
sti
fs
push
iret
out
repz
enter
std
subb
aad
dec
jns
ret
arpl
xchg
sub
rcrb
sub
push
int
sbbb
pop
pop
in
shll
scas
shrb
cltd
mov
or
cmp
sbb
mov
mov
inc
adc
or
jno
inc
push
sbb
fmuls
ljmp
jl
test
pop
inc
cwtl
cmp
xchg
pusha
lock
cmp
iret
outsl
mov
insb
lahf
inc
push
add
pop
push
push
sub
mov
cmp
push
xor
xor
mov
int
dec
sub
and
cmp
movsb
lea
pop
mov
lods
xor
aad
mov
hlt
in
mov
sub
adcb
lea
mov
arpl
xchg
daa
mov
xor
ret
sbb
cmp
repz
out
into
mov
std
jp
push
mov
aaa
leave
pop
dec
loope
or
pop
xchg
inc
inc
sub
lds
out
mov
pop
mull
adc
mov
inc
push
jne
and
cwtl
mov
xchg
xchg
xor
sub
jl
subb
lcall
lea
in
pop
in
push
repnz
mov
call
or
lcall
pop
push
xor
xor
pop
sub
cmp
jmp
addb
mov
push
test
fildl
jns
lods
hlt
push
jae
aaa
cltd
jne,pt
mov
cmc
insb
leave
mov
in
sbb
mov
sahf
test
jnp
popa
cmpsl
pop
sub
fcomi
xor
fidivrs
dec
out
subb
adc
inc
lcall
rol
jae
mov
not
push
pop
mov
les
scas
cmp
ror
mov
xlat
jg
lds
arpl
or
rclb
ret
fdivrs
cmp
jg
sbb
repnz
xchg
fmuls
test
mov
lock
push
cli
in
dec
or
out
rorl
mov
cmpsl
cmp
aas
and
or
mov
xchg
inc
adc
gs
pop
je
inc
int
sbb
dec
int
or
stos
jecxz
outsl
pop
mov
adc
mov
rcll
mov
repz
sub
nop
inc
dec
aaa
and
lea
outsb
fstpl
cmp
inc
mov
xchg
pop
mov
cmpsb
lret
cmp
movsb
push
int
ficompl
movsl
cmp
mov
xchg
lret
cmp
inc
xchg
sub
sub
jno
fdivrs
arpl
test
dec
loope
pushf
mov
aas
movsl
lods
lods
xor
adc
stc
pop
inc
sbb
jo
adc
xor
xchg
xor
scas
xor
rclb
or
insb
je
out
cli
mov
loop
add
sbb
cmp
fisubl
xchg
leave
ds
mov
out
xlat
push
ljmp
mov
test
inc
or
mov
lods
std
xlat
sbb
xor
sbb
jb
jecxz
mov
addr16
repnz
push
lahf
mov
jmp
aad
lret
notb
test
sahf
or
mov
call
not
addr16
aaa
sbb
jecxz
mov
mov
out
out
add
xchg
fcomps
dec
xor
sub
mov
lods
into
gs
or
cli
das
pusha
push
xor
outsb
add
aad
cli
xchg
lret
inc
mov
repz
jge
iret
fwait
push
lods
or
scas
ret
sbbl
js
fidivl
lds
push
sahf
lahf
out
dec
sub
popf
mov
push
icebp
loope
imul
mov
inc
and
push
lods
push
data16
mov
xor
ficoml
pop
in
fisttps
xchg
cmp
int
push
pushf
push
out
sbb
cmp
mov
inc
add
xor
data16
push
mov
mov
or
lret
add
jp
jp
in
aas
mov
mov
add
pop
ss
xchg
or
iret
push
mov
or
mov
xchg
jbe
int3
test
movsl
cmp
leave
push
ljmp
jae
inc
push
shrl
bound
xchg
mov
pop
out
or
jp
dec
sub
jg
add
shrl
push
jmp
mov
fnstenv
fdivs
mov
or
mov
sarb
nop
je
sub
fisttpll
addr16
test
iret
push
fs
pop
xlat
mov
js
cld
mov
pop
sub
mov
pusha
dec
lret
mov
xor
popf
xor
jae
insb
movsl
sbb
push
dec
repz
outsl
fidivl
sbb
test
hlt
imul
pushf
adc
dec
in
addr16
add
mov
mov
xchg
or
cmp
pop
nop
daa
nop
or
pop
cmp
out
lea
fists
orb
or
cmp
mov
dec
inc
fdivrl
jge
sub
fwait
xor
sbb
sti
outsb
sub
mov
cmp
cltd
std
mov
dec
dec
pop
outsb
mov
imul
push
in
push
js
cmp
push
decl
mov
jg
mull
int3
adcl
jbe
fidivrs
xchg
enter
hlt
ret
mov
push
inc
push
scas
out
fbstp
push
push
mov
ss
notb
out
pop
lea
adc
inc
scas
stos
inc
loope
lea
mov
inc
call
or
popa
cmp
call
mov
loope
inc
fnstcw
and
test
lock
and
pushf
xor
jg
sub
popf
xor
ljmp
sarb
fnstenv
xchg
adc
ret
mov
xor
adc
adc
out
in
xor
sbb
add
shrb
repz
and
inc
shrb
sub
lock
andb
test
dec
xor
jl
lds
das
movb
stos
loope
int3
sbb
add
jmp
push
popf
iret
nop
xor
mov
mov
loop
shrl
add
adc
sub
shrl
std
test
dec
rcrl
mov
push
xlat
outsb
inc
mov
je
arpl
xchg
or
addr16
sub
mov
pop
repnz
sbb
cmc
cmp
ficoml
inc
cmc
mov
lods
xor
ficoml
inc
adcb
addr16
add
imul
xorl
mov
push
jnp
inc
push
out
test
mov
lods
and
sub
sbb
inc
daa
mov
pop
adc
popf
inc
jp
cli
imul
jae
lea
shr
pop
xchg
lea
and
data16
lods
inc
push
lods
ss
mov
jns
test
and
fistpl
mov
push
jge
pop
outsl
mov
ds
cwtl
dec
loopne
and
xchg
mov
shlb
xor
mov
inc
in
cmp
je
inc
pop
dec
jecxz
call
shrb
int
sbb
andb
adc
dec
cwtl
cmpsb
jl
sbb
icebp
jns
loope
stos
and
jo
int3
sbb
cmp
stc
nop
rcr
pop
or
sbb
out
add
xorb
xchg
mov
cmc
mov
push
in
orl
push
popf
push
mov
sbb
inc
fdivrs
roll
gs
push
movsl
adcb
js
jmp
imul
mov
ret
repz
stos
fnsave
ss
jne
repnz
push
int
dec
xor
jl
imul
mov
mov
sub
call
xchg
and
xor
pop
daa
pushl
mov
or
dec
movsb
cmp
call
andl
cli
pushf
adc
or
sbb
mov
inc
cmp
pop
lods
in
stc
sub
jbe
rol
imul
fsubrs
lods
cs
inc
xlat
out
lods
inc
les
imul
test
inc
push
out
cs
add
shll
mov
cmp
dec
sarl
shlb
out
fmul
sub
sub
lcall
or
icebp
mov
mov
mov
stos
xor
mov
js
mov
mov
lock
fadds
leave
fcomp
jno
jmp
xor
loopne
in
xor
out
mov
repz
movsb
cld
xchg
push
adc
mov
test
lret
adc
jmp
shrl
xorb
lock
lret
bound
and
stc
pop
clc
es
ror
pusha
or
rorl
aad
jp
je
popa
lret
bound
jnp
ja
cmpsb
cmp
cmp
rclb
nop
daa
mov
pop
pop
subl
inc
xor
xor
inc
aaa
jo
cmp
int
push
xlat
jbe
add
sub
rorl
cli
xchg
mov
movsl
cmp
pop
js
mov
out
test
cmp
xor
jl
xor
test
fistpl
mov
imul
sbb
push
in
lods
cli
xchg
add
lea
or
xchg
daa
mov
dec
mov
cmc
and
inc
push
add
pop
adc
shrb
pop
insl
sahf
xor
outsb
cmp
add
out
dec
and
xchg
xchg
out
js
mov
stos
and
inc
mov
or
pop
enter
and
dec
insb
inc
fstpl
mov
jno
je
jmp
xchg
shlb
das
je
out
xchg
sbb
pop
dec
dec
cmp
cmp
pop
or
mov
inc
cltd
xor
nop
daa
repz
scas
inc
adc
mov
test
lods
sbb
sbb
lods
mov
imul
mov
loopne
aam
outsb
cmpsb
cmp
in
push
out
add
cmpsb
cmp
or
mov
ljmp
add
mov
sub
inc
sbb
lock
loop
pushf
and
jae
into
jnp
cli
mov
mov
sbb
es
sub
and
ss
inc
les
xchg
stc
push
cmp
inc
cwtl
lret
data16
pop
push
nop
daa
imul
mov
std
and
jg
push
jno
nop
xlat
shrb
mov
adc
mov
loopne
js
pop
scas
push
dec
in
inc
mov
subb
pop
xor
pop
push
jnp
call
and
sbb
repnz
lret
test
mov
push
or
xor
push
mov
and
daa
mov
or
jmp
mov
call
inc
lds
lret
jbe
xor
icebp
mov
mov
in
push
adc
push
dec
movsb
cmc
mov
outsb
xchg
sub
xchg
sub
sub
rclb
incb
cmpsl
dec
loop
movsb
push
in
sarl
adc
xchg
lret
insb
add
faddp
pop
rclb
shlb
icebp
stos
inc
jecxz
xor
sbb
add
rclb
pop
mov
into
gs
cmp
push
mov
data16
sbb
lahf
inc
stos
sbb
push
cmpsl
data16
mov
push
in
addr16
les
mov
jae
sub
pop
sbb
pop
out
push
out
scas
sbb
cld
inc
lds
mov
ret
push
das
movb
sub
pop
push
int3
arpl
push
jb
mov
cld
pop
inc
fadds
jnp
icebp
inc
fisubrs
gs
and
test
inc
jl
ss
or
inc
ret
imul
lods
jnp
pushf
insb
pusha
pop
lock
lea
lcall
mov
inc
mov
or
inc
gs
cmp
lcall
sarb
outsb
jp
pusha
mov
std
jmp
fwait
pushf
xor
push
jmp
pop
cmp
cmp
cwtl
test
lret
or
mov
fstl
stos
into
xchg
jns
out
jno
loope
test
popl
mov
jne
xchg
data16
push
sbb
stos
cwtl
imull
ret
fdivl
fucom
js
dec
call
cli
out
popa
sbbl
fwait
shrl
je
xor
arpl
nop
xchg
mov
and
sahf
xor
add
dec
in
mov
cmp
dec
xlat
jle
or
in
fwait
sub
or
jmp
mov
xchg
inc
int3
and
jne
int3
jno
lret
mov
ret
insb
add
fisttpl
cmpsb
or
mov
jbe
jl
stos
xchg
jmp
or
lret
bound
fcmovnb
pop
ljmp
dec
xchg
sub
nop
mov
dec
adc
cmpsl
mov
sub
mov
addr16
sbb
ds
fstpt
stos
inc
sub
dec
mov
fsubs
lds
aad
xor
orb
insl
add
loopne
mov
fstpt
shrb
mov
sub
test
lret
mov
adc
in
push
in
insl
push
mov
mov
shll
or
fidivrs
jo
mov
scas
je
sbb
enter
and
sbb
sbb
cmpsb
cmp
repz
pop
mov
in
scas
addl
dec
test
xor
jns
or
pop
icebp
lahf
int
mov
sub
lds
cs
pop
mov
mov
popa
std
xchg
xor
call
jae
rolb
mov
shrl
int3
cmp
fiadds
insl
pop
jmp
mov
dec
pop
sbb
lahf
lds
int
rolb
repnz
into
hlt
dec
jecxz
out
call
lods
mov
fnsave
jmp
or
sarb
test
push
ficompl
mov
in
sub
xor
rclb
cmp
iret
insb
flds
aad
sahf
cmpsl
mov
sbb
cmp
repnz
das
cmp
cmp
xchg
bound
xor
xor
adc
lret
push
insl
push
xchg
sub
ret
int
es
addr16
mov
xchg
lcall
push
lcall
cwtl
in
jmp
lahf
sahf
insl
xor
outsb
xor
mov
in
xchg
push
mov
mov
push
mov
fidivs
push
or
sti
jbe
dec
rolb
jnp
dec
mov
inc
pop
outsl
mov
sub
rcrb
fidivrl
mov
ljmp
pop
xchg
mov
dec
mov
ja
pop
ret
arpl
push
dec
loopne
mov
idiv
push
inc
lods
int
push
cwtl
mov
pop
push
into
cmpsl
mov
outsb
add
xor
mov
repz
mov
jmp
orb
dec
adc
add
inc
mov
dec
fistps
mov
in
jl
lret
inc
push
mov
outsb
bound
cmp
add
jae
addr16
movsl
or
cmp
or
dec
cmc
dec
in
push
xchg
dec
stc
jl
into
dec
push
push
pop
ficompl
int3
pop
leave
cmp
loop
inc
fdivrs
gs
jae
sbb
movsb
arpl
sbb
je
dec
test
pushw
push
cmpb
xchg
sub
inc
sahf
lock
aam
xchg
icebp
xor
loop
loop
sahf
stc
stc
jmp
icebp
mov
jecxz
add
in
es
jmp
push
mov
or
popa
xchg
sub
fdivl
mov
addr16
ss
sub
stos
insl
xor
in
sbbl
je
or
outsl
dec
sub
popf
jbe
xchg
mov
ret
loop
push
out
test
lret
xlat
cwtl
enter
dec
loopne
and
dec
stos
icebp
push
lods
repnz
icebp
mov
adc
mov
scas
jne
stos
adc
pusha
idiv
and
mov
jg
adc
rclb
enter
inc
and
inc
cmc
mov
xchg
aam
push
adc
xor
insl
ss
dec
pop
scas
cmp
mov
divb
and
addr16
loop
mov
out
test
pop
lock
cmp
inc
pushf
or
in
fwait
gs
cli
xor
adc
mov
mov
call
add
mov
push
and
repnz
addr16
jae
lds
mov
mov
push
jmp
add
mov
mov
leave
mov
fnstenv
icebp
icebp
mov
xchg
pop
stc
jb
stos
fs
lahf
ss
notb
pusha
jns
lock
xchg
add
jno
xchg
cs
in
sub
sub
cmp
add
call
frstor
jge
test
inc
adc
iret
pop
sbbl
aaa
push
popf
pushf
outsl
cmpsl
mov
ret
loope
in
dec
out
push
pushf
xor
es
into
inc
pop
divb
aad
push
pop
dec
arpl
jge
repnz
xlat
call
andb
xchg
xchg
xor
add
adc
and
xchg
jo
bound
cmp
cs
pop
mov
or
ret
sbb
sbb
jp
push
imul
push
cwtl
outsl
jecxz
xor
pop
push
std
mov
lds
inc
fildll
push
dec
negb
fwait
sub
icebp
fcmovb
pop
or
pop
mov
add
xchg
jne
adc
pop
test
dec
push
lcall
sub
jns
incl
lcall
loop
pop
push
push
call
mov
sbb
arpl
inc
push
dec
sbb
movsb
fwait
out
or
pop
scas
jb
lds
js
inc
out
mov
cs
sahf
mov
aam
pushf
fwait
in
test
clc
adcb
bound
clc
inc
mov
push
or
out
les
pop
stc
push
pushl
frstor
inc
cmp
xchg
mov
adc
nop
cltd
xor
cld
xchg
jb
pop
js
insl
add
cltd
in
sub
in
test
xlat
outsl
push
in
in
cmpsl
add
mov
pop
or
fdivl
sub
xchg
aam
stos
inc
inc
cmc
jns
int3
popa
mov
lcall
jg
xchg
and
add
and
jbe
rolb
imul
test
sub
dec
fnsave
add
and
ja
mov
fidivl
mov
pop
pop
cmp
cmpsb
pop
pop
lds
pop
icebp
dec
xchg
mov
js
popa
clc
stc
cltd
ret
sbb
stos
mov
les
lcall
roll
pop
loop
jecxz
jns
pop
dec
jecxz
test
cmp
push
movsl
mov
mov
sub
lock
dec
add
es
inc
mov
cwtl
das
aas
xor
xchg
popa
pusha
mov
inc
andb
push
push
out
andl
xchg
movsb
jne
or
cmpl
jnp
mull
repnz
or
scas
imul
shll
fwait
inc
hlt
or
xchg
jecxz
mov
repnz
sub
dec
adc
mov
fidivrs
iret
sbb
sbbl
stos
bound
jmp
pop
loop
pop
cld
pop
mov
andb
mov
leave
pusha
push
cmp
and
or
xchg
push
pop
test
push
in
testl
jbe
dec
pop
lahf
mov
xor
mov
mov
pushf
push
jnp
stos
mov
in
test
lock
ret
clc
jae
int
aam
mov
testb
add
aaa
int3
xbegin
arpl
fcoms
pop
mov
loope
in
mov
loop
movsb
cmp
rcrl
aam
jp
std
xchg
mov
repnz
jg
out
test
clc
mov
mov
push
xchg
call
and
daa
mov
out
stos
inc
imul
xor
sti
xchg
mov
pusha
negl
dec
repnz
stos
sbb
inc
mov
icebp
scas
inc
and
stc
scas
jb
dec
movsb
jmp
stos
into
out
mov
and
dec
loop
xor
test
jb
jne
cmpsl
inc
mov
cmp
sarb
out
cmpsl
iret
data16
push
add
push
or
jge
and
decb
sarb
cltd
adc
xor
xor
xchg
adc
cmp
pushf
xor
mov
and
pop
popf
xor
mov
xchg
jg
cmp
and
or
adc
or
enter
lcall
mov
inc
xchg
pusha
testl
addr16
push
xchg
data16
or
aas
jne
mov
in
andl
lea
scas
dec
fists
xchg
mov
stos
scas
xor
adc
pop
xchg
sub
inc
in
jns
mov
dec
call
push
in
test
push
mov
insb
inc
fcomps
test
cmpb
inc
mov
arpl
aaa
sub
js
adc
pop
cltd
jecxz
and
loopne
inc
lcall
js
jb
mov
enter
xchg
std
pop
dec
loop
push
and
dec
mov
and
adc
shlb
mov
pop
icebp
jnp
and
js
inc
mov
jbe
testb
dec
dec
out
cmp
test
outsb
cli
xchg
pop
mov
sub
fndisi(8087
pop
out
aam
or
inc
divb
int
ret
mov
jp
cltd
adc
or
in
and
push
push
insb
add
pop
loop
push
mov
rcrl
pop
fadds
add
fistpl
sbb
lock
jb
cmpl
icebp
and
xchg
cmp
aam
mov
adcb
fsubrs
and
stos
dec
jecxz
inc
repz
sahf
add
add
and
imul
cmpsl
pusha
xor
push
or
in
insl
cmc
iret
and
inc
mov
xchg
addr16
data16
jmp
add
js
test
pop
and
pop
imul
outsb
push
out
sbb
add
push
xor
inc
ret
enter
pop
jmp
jo
pop
push
cli
sub
adc
insl
inc
pop
std
sbb
push
movsb
bound
in
es
sub
jo
cltd
sbb
sub
ljmp
jno
push
inc
cmp
pusha
mov
pusha
pop
pmullw
pop
xchg
sub
adc
loopne
lods
xchg
mov
fwait
xor
repnz
shrb
mov
in
sub
push
or
sub
xchg
jg
xor
in
push
test
mov
cmp
mov
jge
je
bound
push
jp
lods
das
add
jnp
push
jae
movhps
add
and
add
imul
cmp
cmp
pop
insb
dec
rorl
mov
mov
jne
popf
sub
pop
iret
xchg
sbb
dec
mov
mov
jo
cmpl
outsl
lds
or
cmp
cmp
test
pop
pop
ja
jns
sub
idivl
xchg
sub
nop
and
sub
enter
or
adc
and
sbbb
inc
mov
andl
inc
inc
rorb
mov
pop
ret
xchg
out
jecxz
dec
adc
ss
mov
dec
loope
addr16
cwtl
cmc
sbb
ret
add
jmp
mov
dec
mov
mov
imulb
mov
in
fiaddl
jl
les
and
movsl
cmp
popa
imul
xchg
pop
in
andl
cmp
fucomip
lret
bound
add
mov
and
fdivrs
sub
hlt
jb
pop
int3
pop
cmp
dec
dec
inc
std
sahf
pop
mov
mov
jbe
stc
xchg
xchg
mov
mov
pop
les
pushl
test
dec
push
dec
loopne
sbb
push
in
stos
shlb
aam
dec
out
cmc
pop
repz
push
sub
mov
rcr
data16
sbb
in
gs
repz
dec
lret
pop
adc
push
add
pusha
es
push
mov
imul
fidivrl
jns
aad
in
cs
add
dec
mov
sub
fwait
subb
cmp
xor
popa
test
or
daa
mov
out
iret
aaa
mov
mov
sub
add
mov
or
or
xchg
lea
test
push
mull
add
movsl
into
jnp
add
test
in
in
or
rcrb
sbb
repz
rcrl
rcrl
cmp
pop
hlt
stc
nop
out
aad
and
adc
mov
push
ret
sarb
rcll
dec
cmpsl
sub
stos
pusha
cltd
cltd
push
hlt
in
mov
rcr
jae
or
or
in
les
push
ds
inc
js
pop
js
lds
mov
scas
ret
lret
jle
or
int3
mov
mov
out
enter
dec
aam
mov
mov
adc
inc
lods
mov
icebp
jmp
mov
pop
icebp
jne
cmc
xchg
scas
xor
stc
fwait
dec
clc
out
xchg
push
add
out
pop
cmp
jb
orb
jbe
das
and
lret
pop
icebp
test
fs
fisttpll
mov
aas
mov
adc
test
ja
or
xchg
cltd
mov
lods
pushf
in
cld
xchg
push
mov
dec
or
test
jmp
sub
ret
mov
loope
int3
inc
jge
pop
aad
xor
sub
push
daa
mov
xor
xchg
ljmp
shll
xchg
ret
mov
insl
loope
enter
test
xor
mov
mov
xor
mov
popa
lds
cmp
movsb
jmp
push
sbb
add
push
ds
adc
cs
sub
loope
fistl
cltd
js
xchg
pop
or
push
daa
stc
and
fwait
sbb
inc
mov
cli
mov
or
fs
dec
loopne
adc
int3
fsubr
xor
or
std
insb
mov
sahf
cmc
and
pop
adcl
mov
lcall
popf
add
mov
sarl
jb
xor
jle
pop
cmp
lea
pop
adc
or
lret
lahf
shr
pop
and
adc
dec
pop
inc
ficoms
cmp
or
inc
sbb
xchg
insb
daa
xor
stos
adc
xor
pop
lea
scas
jg
inc
mov
xchg
mov
push
es
das
mov
pushf
jmp
cmp
adc
jmp
pop
cmc
cld
lcall
loope
inc
scas
push
popa
clc
adc
data16
push
xchg
sub
lret
bound
xor
add
ret
mov
cld
ljmp
fimull
sahf
test
mov
icebp
bound
fucomip
or
loope
rcl
mov
pop
inc
mov
das
and
cltd
pop
rcrl
sbb
ret
jo
sbbl
shl
pop
notb
int3
fucomi
nop
call
add
pop
mov
out
sbb
leave
cmp
insb
incl
xchg
in
and
cmp
inc
gs
dec
mov
out
jp
fnsave
jmp
jmp
sub
mov
jnp
lods
lods
ret
mov
adc
mov
and
sub
mov
push
xchg
std
dec
push
aaa
aad
fsubl
sbb
push
insl
imul
and
or
push
sub
xchg
out
or
nop
jle
gs
int
sbb
aam
js
hlt
std
mov
ffree
leave
jno
test
inc
shrb
adc
stos
inc
test
scas
rolb
shl
rcl
mov
jbe
sub
loopne
sbb
mov
stos
inc
sub
adc
mov
xor
popf
in
rcll
repnz
and
pushf
std
outsl
xor
stos
inc
inc
fdecstp
test
add
mov
sub
inc
arpl
adcb
inc
or
push
dec
mov
jle
cmpl
pop
push
xchg
shlb
sbb
pop
dec
inc
push
dec
in
sbb
pop
xor
or
or
stos
or
aas
scas
cwtl
pop
std
pusha
popa
shlb
sahf
sbb
pop
lret
or
jo
test
outsl
push
push
je
jmp
and
aaa
insl
imul
pushf
jo
xchg
arpl
inc
mov
cmp
mov
nop
mov
mov
mov
aam
sub
jb
mov
cmpsb
or
xchg
leave
lock
ss
loope
xchg
scas
std
gs
mov
sbb
jg
push
pop
fisubl
cmpsl
sbbl
dec
fwait
or
jmp
xchg
imul
cld
push
push
mov
lahf
cmp
enter
repnz
lret
jmp
inc
lods
mov
testb
pop
xchg
jns
push
mov
out
adc
lret
jmp
ljmp
sub
lds
sbb
add
mov
push
shlb
popl
mov
pop
out
call
inc
push
xor
mov
mov
fpatan
cmpsl
and
std
movsb
xor
aad
jns
sbb
mov
pop
pop
cmc
cmp
fbld
loopne
mov
fmull
shll
and
jo
cmp
and
dec
in
dec
xor
imul
add
mov
xor
incb
pop
pop
mov
popf
push
xorl
pushf
jecxz
insb
inc
xchg
inc
fadd
data16
arpl
pop
xchg
fistps
lds
pop
repz
imul
into
or
sbb
add
fnsave
mov
mov
cmp
into
gs
sub
jg
scas
push
jge
std
mov
das
mov
add
xor
test
cmp
pop
pop
mov
sub
jle
inc
dec
dec
out
aas
inc
fdivrp
mov
scas
pop
in
mov
sbb
mov
int
push
and
jge
push
sbb
das
dec
cmp
daa
in
push
add
pushl
sub
mov
fidivl
ss
jmp
jl
addr16
inc
ds
loopne
xor
in
imul
stc
arpl
push
test
imul
cld
lods
inc
xor
jae
pop
adc
push
jmp
push
push
mov
jb
xchg
fisttps
insb
lret
or
push
adc
and
cli
scas
in
and
dec
sbb
mov
movsl
dec
and
jb
sbb
push
push
fisttps
int
rcl
mov
cs
or
aas
cmp
push
scas
sbb
jecxz
xorb
adc
lea
mov
push
movsl
cmpsb
mov
xchg
std
push
mov
mov
sub
aas
inc
fs
inc
inc
push
xchg
inc
dec
and
mov
popa
lods
push
xlat
loop
subb
dec
lcall
imul
and
sub
dec
loop
dec
jo
imul
adc
call
and
insl
sbb
int3
mov
sahf
jnp
inc
fstpl
popf
sub
xchg
cmp
dec
pop
loope
nop
insb
iret
cbtw
mov
xor
add
mov
sub
subl
movsl
and
xor
aaa
mov
mov
fucomip
stos
push
in
fildll
jmp
push
xchg
mov
out
push
or
or
and
movsl
and
clc
and
push
sbb
mov
push
mov
subb
inc
mov
rcrl
lret
push
jns
sahf
pop
push
sub
jmp
dec
push
jno
push
inc
adc
cmpsl
int3
xchg
inc
mov
addl
add
sub
sub
xchg
jg
leave
cmc
fistpl
gs
sbb
pop
mov
lds
jmp
sarb
test
mov
repnz
jns
xchg
out
pop
test
xchg
xchg
push
jmp
cmpsl
sbb
fisubl
and
push
and
insb
mov
xor
cmp
sti
lea
or
jmp
mov
inc
imul
in
add
sbbb
test
or
sti
mov
sub
or
mov
xor
sub
aas
ss
inc
popf
scas
adc
push
xor
in
adc
rclb
jbe
sub
lcall
sbb
cmp
lret
imul
fmul
hlt
sbb
scas
mov
inc
jnp
cltd
cli
movsb
mov
ret
fwait
jae
sub
push
or
push
sbb
jbe
arpl
push
xchg
mov
push
data16
jl
ja
sbbb
ss
lret
and
inc
inc
out
mov
popf
and
subb
insb
mov
pop
push
mov
dec
outsb
fwait
inc
cmpsl
clc
xor
clc
xchg
sub
push
mov
leave
add
dec
loopne
jg
fisttpll
sbb
outsl
in
pop
mov
ret
pop
mov
js
pop
xor
xor
jg
lret
scas
test
adcl
or
lcall
push
cwtl
adc
icebp
push
sarb
push
test
sbbb
shr
or
xchg
aaa
dec
cmp
fwait
jo
mov
mov
push
out
movsl
fcmovne
mov
cmpsb
dec
clc
mov
xor
movsl
mov
jecxz
cmpsb
pop
mov
xchg
sub
arpl
jle,pt
mov
push
xor
xchg
xchg
bound
cmpsb
popf
push
ret
mov
int3
mov
addl
lods
imul
je
and
xchg
je
mov
leave
push
dec
pop
int3
and
pop
sbb
push
daa
xchg
or
pop
lock
add
stc
nop
jbe
cmpb
movsb
mov
insb
inc
or
xchg
dec
mov
push
or
cli
jo
mov
jno
pop
cld
mov
xchg
jp
hlt
cmp
inc
mov
ja
mov
mov
dec
push
pop
adc
pop
mulb
mov
movsb
sbb
lods
rorb
fmuls
nop
in
das
mov
int
jp
cmc
mov
sbb
inc
mov
icebp
or
mov
cmpsb
mov
push
xor
insl
jo
jp
xchg
sub
inc
aas
sbb
ljmp
ds
int
aad
inc
jp
out
fldenv
dec
in
arpl
sub
mov
cld
jb
push
push
fsubs
loopne
pop
cmpsl
adcl
out
loopne
js
movsb
cmpsb
adc
stos
xlat
insl
gs
sahf
clc
xor
xor
lahf
pop
repz
add
mov
mov
or
cmpsb
cmp
cmp
push
loopne
push
testb
pop
mov
popa
lret
sbb
adc
inc
cld
repz
loopne
fidivl
add
movsb
cmp
into
mov
inc
inc
fisttpl
lods
dec
pop
xchg
pop
cwtl
inc
push
aaa
dec
mov
notl
ja
andl
fistl
mov
mov
lock
pop
sbb
cmp
subl
ja
mov
mov
test
xchg
das
pop
add
les
mov
test
inc
and
ret
pusha
loope
cli
mov
out
mov
xor
add
in
stc
push
sub
xor
lret
xchg
sub
mov
les
cmpsb
js
fsub
int
push
mov
jae
movsb
xchg
nop
idivl
xor
test
sar
push
pop
cmp
outsl
mov
repnz
or
push
push
dec
out
clc
fadd
aaa
into
repz
jg
pop
add
xor
xchg
push
inc
xorb
mov
jmp
iret
sbb
fbstp
sbbb
shrl
std
aas
pop
jno
xchg
insl
mov
xchg
fs
shll
or
pop
add
lods
push
cs
sbb
push
pushf
xchg
pop
les
add
les
andb
popl
stc
push
mov
pushf
and
hlt
mov
or
adc
clc
dec
add
test
pushf
pop
pop
aas
pop
mov
mov
stos
orb
and
add
fadd
sub
fs
jmp
repz
divb
out
xchg
push
dec
jb
je
fdivl
jl
pop
cmp
mov
cmp
fiaddl
es
and
out
test
sbb
ss
lods
add
sub
pop
jmp
sahf
push
fsubrp
mov
lcall
dec
mov
jmp
jns
xorb
jmp
fs
pushf
mov
jbe
testb
orb
or
mov
jp
pop
sbb
repnz
sub
adc
out
cmp
aaa
push
leave
sti
clc
or
or
push
dec
mov
xor
sub
push
cmp
or
dec
add
lret
lret
inc
loope
xchg
pop
test
seto
push
xchg
imul
mov
outsl
testb
xlat
sub
pop
ljmp
push
jle
cmpsb
loope
decb
xchg
mov
popf
jo
xchg
jmp
push
iret
ja
cmpsl
xchg
cmp
and
shl
push
mov
outsl
js
daa
dec
xchg
call
mov
in
xorl
shll
hlt
mov
clc
pop
cmp
mov
pop
movdq2q
stos
icebp
pop
push
lahf
fwait
mov
addr16
iret
adc
or
mov
sub
rcrb
add
mov
dec
and
push
adc
outsb
addr16
int3
jns
cmp
xchg
push
aas
xor
mov
jb
outsl
jecxz
stc
mov
sub
out
sar
sbb
xchg
or
ds
push
sub
add
xor
pop
sbb
shlb
pop
adc
notl
and
das
sbb
sbb
insl
xor
mov
push
mov
add
sbb
leave
cmp
mov
and
add
lds
sub
fimuls
xor
les
lock
or
adc
outsb
pop
fsubs
test
cs
icebp
shrb
inc
pop
xor
movsl
mov
repz
ss
and
dec
out
aaa
rcl
xchg
sub
repz
xchg
xchg
inc
movsl
cmp
pusha
stos
call
aas
pop
xchg
sub
stc
adc
fmuls
fidivrl
jecxz
xor
testl
in
cmp
push
jle
sub
jno
imul
xchg
inc
pushf
inc
sbb
lea
xchg
dec
stc
sub
mov
dec
ds
rcl
cmp
cmp
add
mov
or
xor
cmp
dec
jecxz
stos
mov
mov
scas
pop
cmpsb
hlt
cli
pop
inc
mov
ja
adc
jno
arpl
lds
out
jle
pop
dec
out
xchg
clc
jl
mov
fstps
call
lds
mov
stos
subb
lock
popa
out
jo
je,pt
dec
cli
jno
test
mov
lock
gs
mov
fsubl
inc
ficoms
cwtl
scas
jne
rcrb
roll
ss
push
push
fistpl
aas
xchg
jno,pn
out
cmc
decb
push
mov
ret
iret
mov
lea
filds
sahf
adc
icebp
xor
into
cmp
cmp
insl
loope
out
cs
es
or
add
je
push
cmp
or
idivb
cmp
sub
bound
sub
imul
pop
mov
and
mov
stc
clc
cmc
shrl
fdivl
push
icebp
ljmp
mov
jg
aaa
jb
sti
lret
out
dec
push
mov
lret
loop
outsb
out
les
pop
int
push
popf
jmp
iret
cmp
jns
lock
cmp
in
sbb
jg
push
ljmp
xor
jp
popf
xor
fwait
inc
lcall
test
sub
loop
pushf
dec
into
ds
push
ljmp
add
movsl
push
insl
test
inc
fldz
mov
pop
sti
and
les
fisttps
adc
jle
adc
imul
test
push
mov
movsl
cmp
outsl
or
pop
pop
sub
lea
loope
mov
adc
mov
call
add
sbb
out
push
outsb
add
in
ljmp
dec
or
mov
mov
inc
xchg
dec
loope
mov
stos
mov
xor
sub
pop
mov
ljmp
mov
xchg
mov
movsl
xchg
stos
sarb
stos
ljmp
adc
pop
xchg
sub
xor
cli
dec
mov
xlat
push
lea
xor
stc
and
lods
lds
fisttpll
dec
mov
enter
shld
dec
aaa
lods
cmp
lods
cmp
in
lea
pusha
ss
or
jne
push
daa
cmp
push
ljmp
mov
addb
scas
fbstp
rcr
jno
and
ret
stos
lds
dec
inc
arpl
cli
jmp
sbb
jp
addl
pop
outsb
outsb
push
cmc
push
das
mov
xchg
mov
or
mov
add
outsl
adcb
inc
xor
shr
xchg
xor
pop
push
popa
push
cmp
sub
mov
mov
cmp
fildl
ja
push
int3
fiadds
lods
pop
stc
sahf
or
pusha
sti
stos
sahf
kxorb
std
pop
test
movsb
mov
lea
sub
xchg
andb
and
es
dec
int3
jne
pushf
scas
aam
dec
hlt
loopne
outsl
jnp
cmc
xchg
xor
or
cli
or
stos
int
fdivrl
add
jno
or
sub
scas
imul
call
in
sbb
mov
pop
in
pop
out
lret
out
add
lods
push
inc
out
push
jbe
xor
jmp
push
daa
jno
dec
pop
rcrl
aaa
ljmp
xor
ja
inc
pop
cli
and
repnz
or
add
push
call
sbb
dec
push
insl
mov
inc
mov
xchg
jae
lods
push
daa
xchg
and
int
xor
xor
hlt
jo
fldcw
insb
add
mov
in
adc
scas
inc
pop
inc
popa
fucomip
jg
xor
mov
sub
dec
xor
jl
imul
les
cli
push
mov
aaa
dec
pop
shll
push
mov
loop
inc
sbb
inc
cmp
stc
out
jle
xchg
push
rcrb
add
fwait
xor
in
cmp
add
dec
inc
dec
dec
leave
aam
adcl
push
shl
jg
cmpsb
lahf
push
in
enter
in
jmp
xor
cmp
decl
pop
xor
in
jg
daa
mov
scas
inc
in
push
fwait
fs
xchg
dec
adc
out
nop
aad
ret
pop
push
flds
dec
cs
insl
test
jb
hlt
outsl
xor
test
inc
lcall
and
jmp
or
jecxz
rclb
int
add
in
lret
scas
jmp
loopne
or
push
out
cmp
dec
popf
xor
and
je
mov
mov
es
xor
mov
leave
fildll
mov
in
or
enter
inc
bound
push
xchg
push
cltd
test
das
out
inc
mov
sub
push
jmp
fcmovne
add
adc
shll
xchg
es
test
bound
sbb
repnz
xchg
insl
push
popl
aaa
pop
test
push
cld
push
jbe
pop
movsl
mov
mov
ja
fwait
sub
test
xchg
push
pop
js
imul
and
jo
mov
sbb
mov
mov
sub
ds
pop
cmp
sbb
loopne
lock
pop
fisubs
lret
testl
or
dec
in
in
in
dec
imul
out
or
jecxz
rcll
pop
in
lcall
jo
leave
xor
mov
xlat
mov
xchg
mov
xchg
aam
xor
push
sbb
rorb
xor
inc
inc
jmp
lret
call
mov
fimull
mov
jae
fucompp
add
loop
pop
and
mov
inc
loope
test
rol
jge
cld
outsl
leave
adc
fisubrs
push
scas
in
dec
pop
mov
lea
ret
fnstenv
popf
add
inc
idivl
negl
dec
inc
test
jne
out
jo
lcall
fildll
outsl
push
mov
adc
mov
mov
popa
icebp
mov
jbe
dec
and
sbb
lods
jmp
dec
dec
xor
jp
pop
ss
cmp
lds
sbb
ret
cmp
aad
push
jns
lds
aam
mov
cmp
repz
jecxz
aas
shrl
lret
cld
push
push
xchg
stc
into
jge
mov
scas
sub
jg
repz
mov
push
loopne
ret
push
loope
lods
sbb
dec
pop
cmpsl
cmp
into
orl
xor
adc
xchg
fstpl
sub
sbb
mov
int3
sub
repnz
pop
into
sbb
pop
push
inc
push
popa
pushf
gs
adc
sub
inc
lock
push
scas
aaa
lret
fstpl
fstpl
scas
adc
fwait
jl
mov
mov
fstps
fists
pop
adc
mov
xlat
adc
mov
sub
aaa
cli
mov
stos
jbe
cmpsl
gs
push
push
inc
push
mov
ja
cmp
inc
push
call
add
fcmovne
icebp
xchg
stos
in
cli
std
dec
lock
mov
fnstsw
testb
or
mov
das
jo
data16
and
jmp
add
in
xor
bound
and
shl
pop
mov
test
jne
fisubrs
adc
xor
xchg
adc
dec
and
fs
push
iret
jno
cltd
sub
mov
xchg
xor
dec
dec
cli
ja
sahf
insb
sub
push
push
in
aaa
js
dec
mov
mov
push
cltd
cmpsb
addr16
push
jo
mov
lahf
mov
and
or
pavgb
adc
and
jp
sub
adc
pusha
cmp
enter
incl
push
repz
popf
stos
sarl
sub
xor
sub
or
cmpsb
cmp
ss
lahf
ss
pop
lods
and
ja
and
and
push
xor
cmp
sub
orl
mov
fisubs
pushf
lret
mov
lods
insl
in
mov
shlb
les
pop
push
push
movb
cmp
lret
push
push
fucomip
inc
push
fsqrt
std
fstpt
fcoml
push
daa
jmp
fisubrl
fsubrs
cmp
sbb
or
adc
test
xchg
push
mov
ret
js
shl
xchg
xchg
sub
jmp
ss
mov
or
mov
fwait
add
lret
sub
mov
adc
out
popf
push
mov
dec
lret
xchg
mov
push
mov
mov
pop
out
lods
xchg
adc
sub
aas
mov
enter
cmpsl
shrl
lret
push
push
jmp
popa
xor
fs
call
js
std
mov
stos
xor
xor
and
jp
or
adc
js
push
xchg
mov
outsl
push
jbe
mov
inc
sub
and
fdivp
sub
jle
xchg
mov
mov
mov
fdivl
xchg
lods
adc
scas
sub
jp
xor
ret
mov
adc
cmpsb
mov
mov
and
dec
mov
sbb
adc
in
mov
dec
nop
adc
xchg
loop
adc
movsb
xchg
mov
xor
sbb
insl
sub
imul
xor
mov
or
imul
scas
lea
fdiv
aas
scas
xor
outsl
data16
jns
mov
sbb
cmp
fdivrs
shlb
rorb
jle
dec
pop
push
notl
fldenv
lds
and
fisubrs
push
xor
lea
xlat
push
mov
pop
in
scas
shl
xchg
out
cmp
cmp
jno
cmp
or
fdiv
fnsave
and
xchg
adc
cmc
push
mov
test
fcoml
pop
inc
mov
push
das
jbe
clc
mov
test
sub
shrl
push
mov
inc
jne
test
push
lds
pop
ljmp
cli
iret
cmp
jecxz
hlt
adc
mov
aad
mov
mov
jne
icebp
and
pop
outsb
mov
fdivl
sub
out
dec
pop
lods
inc
push
push
cmpsb
leave
daa
xor
in
jle
ss
mov
ljmp
mov
stos
lea
pop
das
sbb
inc
cmp
inc
imul
dec
xor
call
pop
add
jmp
add
mov
movsb
mov
rclb
add
mov
test
mov
sbb
jg
cmp
inc
outsb
and
inc
sbb
sub
lods
adc
stos
fwait
in
test
dec
and
push
push
or
mov
push
add
cld
mov
pop
out
dec
lahf
fsubr
idivb
add
out
lea
push
scas
inc
pop
adc
gs
int3
cmp
cmp
dec
dec
rcll
adc
insb
fidivs
into
add
push
in
repnz
sub
or
out
adc
mov
insl
add
jecxz
test
inc
into
das
movb
mov
fadd
aaa
into
icebp
imul
int3
dec
repnz
shrb
fstpt
iret
fistps
push
call
hlt
fucomip
clc
adc
pop
hlt
or
sub
jnp
inc
lret
sti
fs
jge
sbb
cld
adc
adc
ss
mov
xor
pop
movsl
xchg
jmp
push
mov
mov
fsubrl
mov
mov
sub
xor
nop
pushf
jge
or
pop
pushf
jb
or
inc
xchg
arpl
les
in
xor
mov
ds
fcmovb
pop
or
ret
pop
inc
in
sbb
xchg
mov
mov
imull
add
mov
loope
imul
and
test
test
adc
ds
pop
aas
xchg
scas
jo
pop
insl
les
push
lods
pop
adc
sub
fidivrl
pop
and
and
push
mov
push
jmp
mov
popf
push
pushf
into
adc
push
dec
xor
mov
mov
mov
movb
sarb
scas
jb
and
rcrb
push
xchg
pop
movsb
add
xchg
xchg
pop
sub
test
mov
cmovp
add
jg
in
pop
or
cmp
lahf
incb
mov
inc
push
xor
int
cmp
int3
and
arpl
fldenv
push
fldcw
pop
testb
and
cmp
hlt
mov
shrb
push
xchg
ret
pusha
xchg
sbb
addr16
jne
pop
add
ja
inc
xchg
divl
sub
xlat
es
lods
jb
fwait
scas
xchg
dec
adc
jne
sbb
push
cmp
mov
shll
ljmp
test
jo
mov
filds
push
jbe
out
movsl
cmp
jg,pn
push
int3
ret
pop
out
cmp
push
filds
mov
pop
mov
xchg
loop
repnz
pop
pusha
test
bswap
and
jle
push
fdivrs
cmp
mov
push
loop
mov
mov
adc
mov
pushf
cs
flds
pop
cmp
psubsb
icebp
out
out
jae
adc
decb
fstl
int3
hlt
adc
sub
inc
addr16
repz
adc
iret
cmp
xchg
pushf
shlb
push
cmp
ds
inc
cli
jo
xchg
popa
xchg
cmp
addr16
popa
dec
mov
scas
loop
std
xlat
inc
iret
push
mov
push
sti
xchg
inc
outsb
jl
xor
lret
mov
jne
lahf
daa
ljmp
cmp
cli
xchg
bound
mov
push
std
lods
jb
stc
cs
xor
add
pop
xor
xchg
pusha
push
lret
pop
lds
fsubrl
push
sbb
push
xor
jecxz
stc
adc
dec
mov
lret
cltd
fwait
insb
daa
adc
add
dec
cmpsb
lock
add
popa
movsl
icebp
xchg
push
pop
fidivrs
imul
insb
gs
dec
imul
push
arpl
sbb
lea
add
sbbl
cwtl
inc
sbbl
mov
mov
mov
pop
movsb
inc
iret
icebp
push
jb
pop
lea
stos
push
inc
bound
jl
pusha
aas
sub
jno
adc
adc
test
mov
sub
into
xor
inc
in
mul
popa
push
sbb
add
fisubs
jo
mov
mov
aas
push
xor
or
mov
nop
push
fcomps
sbb
js
xchg
and
push
test
sti
push
xor
sbb
pushf
push
sbb
imul
mov
cmp
lcall
and
flds
mov
fnstenv
jmp
repz
mov
stos
and
mov
adc
mov
repz
pop
or
pop
psrld
sahf
lods
enter
stc
inc
jmp
sbb
or
mov
push
pop
mov
ja
cld
dec
pop
cmp
pop
in
pop
xchg
sbb
icebp
mov
mov
mov
fwait
or
mov
jns
inc
int3
lods
ret
fxch
call
dec
cmp
aaa
into
sbb
andl
lea
push
sbb
adc
inc
add
leave
cmp
loopne
mov
jg
rcrl
sbb
jge
fucomip
loop
inc
ret
mov
cmp
mov
mov
push
mov
dec
inc
push
sbb
shll
adc
jbe
subb
dec
out
ja
push
sbb
cwtl
out
xor
dec
add
rcr
cwtl
xchg
adc
sub
iret
sti
je
inc
and
rclb
add
mov
adc
sbb
gs
aad
push
bound
adc
dec
xchg
outsl
jnp
pop
cmc
aaa
adc
add
pop
jl
mov
jmp
add
pop
xorb
aas
outsb
mov
push
dec
pop
mov
adc
jmp
sbb
cmp
and
jns
adc
lcall
ja
push
push
add
loopne
je
push
ss
testb
scas
jno
jl
cmp
cltd
cmpsb
lods
or
jns
push
loop
mov
mov
rdtsc
incb
in
lcall
dec
outsl
js
xchg
daa
jno
mov
dec
arpl
jp
xchg
add
pusha
das
add
jecxz
clc
jae
sti
pop
insl
xor
clc
inc
sti
sub
pop
lods
xor
jge
cmc
scas
xchg
sbb
lret
out
sub
in
pop
dec
ss
cmc
mov
push
push
pop
dec
aam
add
dec
out
mov
fsubrs
rcr
dec
pop
test
jg
mov
push
xor
int
jnp
fnstcw
push
push
enter
rcrl
clc
or
mov
cwtl
inc
push
call
mov
or
pop
cli
out
jle,pt
pop
mov
and
or
mov
setle
push
nop
pop
inc
dec
sbb
dec
aaa
xchg
sub
cwtl
shrl
fs
adc
imull
cmp
cmpsb
sbb
or
and
fidivs
jnp
rorl
or
inc
fisttpl
shlb
pop
or
adcb
cmp
stos
ja
and
push
les
aad
xchg
adc
mov
fldl
cs
jb
dec
xor
psubw
fldl
pop
xor
inc
sub
icebp
inc
cmp
stc
adc
xchg
or
ret
in
je
or
je
sti
inc
cmp
sub
or
dec
decb
insl
inc
addb
push
push
xchg
mov
shrb
adc
or
dec
fldt
cli
aam
lea
stc
icebp
jo
xchg
push
aaa
movsb
mov
ret
movsbl
es
outsl
in
pusha
mov
xlat
mov
mov
and
xchg
jo
mov
test
sar
dec
mov
pop
loop
sarl
push
jno
pop
icebp
pop
sarl
lcall
arpl
nop
xor
mov
mov
mov
inc
stc
insl
pop
xor
lea
lret
mov
call
lcall
into
cmp
sti
xchg
jno
jne
push
jmp
insb
add
or
jne
lock
adcl
xchg
cld
sbb
mov
ds
mov
fdivl
arpl
mov
sar
xor
loop
int
jnp
push
and
lods
inc
add
jmp
or
cmpb
or
or
pop
je
sahf
mov
pop
inc
inc
nop
feni(8087
daa
add
scas
lods
lds
sti
aaa
jle
call
inc
mov
jg
mov
out
pop
insl
push
xchg
xchg
jmp
xor
xor
push
sbb
mov
std
fldenv
mov
fisubrl
push
pop
outsl
fsubr
xor
sbb
ss
and
mov
xlat
mov
pop
addr16
mov
sub
pop
int3
repz
lcall
and
push
in
pop
inc
sbb
pmaxub
repz
out
testl
sub
pusha
add
ds
add
out
rorl
or
mov
pop
in
test
xor
fwait
xor
mov
pop
repnz
push
dec
mov
sub
and
neg
pop
repz
or
into
dec
jns
jecxz
add
adc
insl
xchg
faddl
mov
jno
pop
insl
fsubr
push
pop
pop
in
ja
ja
cld
mov
and
rol
pop
fdivrs
push
xchg
mov
ljmp
fmull
ljmp
inc
sbb
xchg
jmp
xchg
mov
mov
test
mov
loopne
adc
inc
xorb
ret
stc
insl
pop
xchg
cmp
cmp
ret
sub
push
insw
sub
push
pop
cmp
rclb
jo
push
jb
inc
add
xchg
in
xor
pop
ds
dec
cmp
pop
rorl
std
jae
or
fisubrl
inc
loopne
mov
imul
lret
cmpsl
out
dec
orl
inc
push
shrb
popa
popa
cli
adc
or
jle
sbbl
jns
iret
data16
mov
cltd
out
jmp
or
repnz
cmp
lods
dec
in
insl
imulb
cmp
add
adcb
xor
cmp
sub
dec
pop
ljmp
pusha
bound
stos
push
enter
hlt
cmp
ljmp
pop
fsubs
pop
or
setnp
pop
aam
pop
jecxz
test
icebp
mov
pop
addps
dec
fucomip
jb
xor
mov
gs
insl
xchg
out
das
push
add
ret
movsl
mov
sub
sub
xchg
jge
jl
xorl
mov
lahf
fisubrs
xchg
loop
adc
push
shr
pop
mov
movsb
mov
fdivrs
pop
cltd
test
xchg
ja
icebp
dec
pushf
dec
sbb
mov
push
cmp
jle
or
lahf
or
adc
pop
out
cld
xor
daa
adc
jb
out
int3
inc
and
in
out
les
jmp
cs
jne
or
and
jmp
push
dec
push
sub
stc
cmc
hlt
cmp
aam
xor
add
es
xor
lea
cli
xchg
cmp
mov
sbb
jmp
sbbl
jg
mov
jge
sbb
loopne
lods
insb
popf
cmpsl
insl
test
push
jg
xchg
stos
fsubs
mov
dec
xchg
fwait
in
arpl
jl
or
test
loopne
in
cmc
mov
cli
cld
ja
test
jo
cmp
andb
fildll
scas
dec
or
rclb
xchg
inc
icebp
lret
inc
jecxz
sbb
loop
scas
sbb
sti
pop
out
cltd
dec
lods
out
popf
imulb
sub
rcr
into
jp
jb
lret
test
pop
ret
out
xchg
in
or
bswap
and
insb
andb
push
xor
stos
cmpsl
lock
jo
or
dec
push
and
and
xor
xor
xchg
push
jae
daa
add
sysenter
inc
fdivrs
popa
push
mov
mov
dec
ret
sub
mov
int
movsl
aam
jecxz
pop
adc
push
mov
cmp
dec
test
sbbl
lea
push
icebp
xor
rcrb
imul
xchg
aaa
loopne
lds
cmc
imul
popa
mov
or
addb
dec
bound
push
jno
jno
jbe
lahf
mov
insl
mov
sub
sub
xchg
jo
sbb
imulb
jp
push
inc
fnstcw
mov
out
adc
in
mov
cmp
adc
xor
leave
test
je
mov
or
in
insb
ret
xor
mov
add
ja
inc
add
adc
and
xor
xchg
mov
jp
cmpb
push
add
fwait
jbe
scas
jg
mov
das
shl
cli
mov
xchg
sar
lret
mov
mov
inc
push
push
icebp
sbb
sbb
ret
pop
mov
inc
loopne
fs
sub
arpl
jl
in
mov
mov
mov
inc
cld
ljmp
and
ss
cli
jnp
out
dec
cltd
mov
mov
les
or
cmpsl
cmc
pop
mov
push
rcrl
jge
jbe
movsb
outsl
and
adc
scas
cltd
test
dec
adc
in
test
lret
mov
jle
pushf
nop
ss
rolb
dec
leave
mov
adc
push
mov
cmp
jnp
mov
xor
push
call
and
out
jnp
xor
lret
xchg
movsb
rorl
addr16
xor
aam
cmpsb
popa
je
jbe
push
lret
and
js
mov
repnz
jecxz
push
pop
scas
sti
addr16
dec
gs
xor
push
mov
mov
in
cmpsl
es
jb
pop
stc
decb
lahf
sub
jb
cmp
mul
mov
xor
push
scas
mov
jo
fildll
jbe
aam
in
pop
fldl2t
lea
sub
stc
lret
pop
xlat
iret
fs
mov
and
int3
sub
pop
cld
push
jl
inc
test
push
mov
pop
cmp
loope
and
push
test
cmp
in
mov
mov
push
outsl
cmp
xchg
xor
cmp
mov
inc
inc
push
pop
enter
cltd
loop
mov
je
and
mov
jns
sbb
push
cmp
cli
lods
jl
mov
std
mov
test
gs
and
adc
cmp
xchg
sub
jae
es
in
shlb
out
mov
sbb
fs
mov
outsl
je
jo
cmp
iret
int3
outsl
jnp
mov
dec
fdivl
push
inc
add
inc
push
pop
sbb
js
out
sbb
addr16
pop
out
pushf
lea
sahf
lock
mov
add
aas
dec
mov
lcall
imul
mulb
data16
dec
loope
outsb
gs
xchg
sti
jmp
sbb
inc
inc
movb
push
sahf
lock
ds
sub
or
shrb
push
add
adc
sarl
shl
add
cltd
mov
arpl
sbb
movsl
int3
mov
loope
pop
dec
dec
iret
stos
inc
decl
rcll
xor
in
fs
mov
xchg
inc
mov
cmp
mulb
lcall
push
rcrb
and
sti
je
xor
clc
gs
cltd
or
clc
or
xchg
xchg
ja
jno
aaa
push
cmp
jno
std
stos
in
xor
ficomps
cmp
lods
insl
push
insb
sti
test
push
pop
pop
clc
in
sub
jp
lret
fwait
mov
mov
push
dec
and
xchg
mov
xchg
pop
in
cmpsl
mov
sub
sahf
test
adc
xchg
lea
xchg
pop
int3
rorl
subb
leave
leave
jecxz
stos
cmpsl
fs
stos
mov
sbb
pop
pop
mov
cmp
stc
jo
mov
lods
or
stos
mov
push
fildll
or
int3
shlb
sub
ss
mov
adc
adc
or
addb
xlat
fsubs
int3
cld
cmp
insb
mov
test
mov
add
nop
mov
fnstsw
inc
push
das
pop
adc
inc
mov
pop
mov
stos
inc
addb
incl
pushf
stc
mov
daa
inc
js
enter
outsl
stos
inc
dec
sahf
fidivl
or
mov
popa
popa
lods
push
xchg
call
and
pop
mov
jo
fistpl
fldcw
out
mov
pusha
stc
insb
pushf
nop
imul
repnz
mov
xchg
out
and
cmp
in
sbb
mov
mov
xchg
and
push
loope
scas
jno
negl
imul
dec
inc
dec
pop
jb
dec
dec
leave
stos
fs
repnz
mov
mov
or
jecxz
sti
adc
xchg
jo
pusha
mov
cwtl
cmpsb
cltd
daa
bound
jbe
popf
imul
mov
ret
xchg
data16
pop
mov
shrb
pushf
pop
imul
int
sub
lret
or
aas
sub
lods
pop
adc
out
ds
dec
adc
rcl
inc
push
lar
js
push
jp
sub
cltd
std
lea
lea
push
bsr
mov
adc
or
or
sub
movsl
flds
mov
mov
xor
out
leave
inc
add
sub
in
arpl
sbb
mov
mov
push
stos
inc
mov
shrl
in
push
mov
pop
push
jnp
aas
aas
fs
aam
pop
mov
jb
xor
shll
inc
sti
pop
ja
cmp
adc
cmp
fnstsw
test
xor
fisttps
push
test
pushf
cltd
jnp
dec
hlt
sub
and
xchg
shrb
adc
fdivl
test
sub
mov
inc
mull
mov
in
adc
add
and
jb
scas
arpl
stos
in
mov
subb
mov
lods
rclb
mov
mov
dec
int
mov
gs
loopne
in
xchg
fists
pop
inc
iret
add
xor
movsb
jns
fildll
out
fisubl
xor
shr
insb
xchg
mov
or
add
icebp
fistps
push
sub
sub
cwtl
cmp
xorb
adc
inc
pop
xorb
pusha
cmp
jmp
ret
cmp
scas
adc
cwtl
jb
mov
and
mov
sbb
je
les
notl
pop
cmp
or
sub
or
push
movsb
sbb
mov
mov
add
gs
jle
sbb
fidivl
fcoms
bound
rcrb
push
jle
repz
mov
lahf
std
out
cmpsl
sar
ds
lods
cmp
fcoml
scas
or
test
int3
fidivrl
iret
insw
test
jl
dec
jb
jp
mov
push
fwait
mov
mov
popa
outsl
jno
addr16
cmp
inc
dec
or
lcall
dec
push
out
add
leave
pusha
in
add
adc
jp
shll
mov
fwait
jmp
aas
movl
outsl
xchg
out
pushf
orb
in
cli
mov
fucom
hlt
push
jmp
je
cmp
xor
xor
xor
push
or
and
add
lds
jnp
in
mov
into
mov
incl
mov
push
xchg
lds
jae
roll
mov
sub
ss
in
sti
xchg
pop
push
sub
test
xchg
loope
scas
out
cmp
xchg
xor
das
les
sub
mov
push
fdivrs
add
sub
push
pop
inc
out
cmpsl
test
ret
and
mov
jmp
dec
call
push
mov
or
push
xor
shl
mov
movsl
xor
loope
xor
in
sbb
mov
pop
xchg
pop
inc
dec
lea
in
mov
int3
in
and
inc
push
adc
add
mov
fdivrs
repz
adc
in
pop
adc
outsb
subl
xchg
insb
mov
mov
shr
gs
mov
add
daa
add
xchg
in
imul
cmp
fldl
fs
dec
jno
mov
lock
jge
outsl
cmpsb
les
addl
iret
cltd
mov
xor
sbb
enter
test
xchg
mov
ret
pop
call
jl
clc
pop
jg
mov
popa
clc
es
push
cwtl
hlt
inc
pushl
mov
cmpsl
in
pop
cmp
fs
in
push
ds
ds
inc
mov
xchg
lahf
inc
push
sar
jle
sbb
outsb
rorl
xor
push
movsb
dec
cld
mov
cmpsl
xor
pop
pop
sarl
gs
mov
in
shlb
cmp
in
cmp
sti
test
sbb
mov
mov
pop
mov
mov
aam
xchg
bound
mov
jmp
and
mov
dec
xchg
mov
add
ret
xchg
leave
outsb
push
je
sbb
pusha
xchg
or
jnp
insb
sub
cmpsl
out
fistps
push
adc
sub
mov
out
outsb
rcl
test
lods
add
aam
dec
insb
pop
and
inc
cltd
xor
rolb
lcall
and
lret
pop
insb
cmp
jg
stc
popf
sub
popf
xchg
rcl
xorl
cmp
sub
std
mov
xchg
ljmp
cmp
daa
imul
inc
rcrb
ljmp
imul
scas
xchg
pop
xchg
xor
push
enter
ss
inc
mov
mov
add
scas
sub
cmp
xor
mov
sbb
in
loopne
repz
cmpsl
lods
mov
or
jne
cmc
imul
lcall
or
push
xor
cmpsl
loope
addr16
pop
dec
pop
pop
insl
jge
jg
jns
ss
stc
mov
pop
adc
cmp
out
mov
adc
sbb
cmp
xchg
xrelease
insb
jae
sbb
outsl
sbb
and
stc
inc
je
in
push
sar
inc
mov
lcall
and
mov
add
shrl
lods
divl
adc
push
pop
out
les
cmp
clc
sub
pop
adc
push
test
imul
enter
mov
xor
aaa
into
ja
and
lret
nop
lret
cwtl
mov
fbld
mov
inc
popf
inc
xlat
into
std
xchg
addr16
dec
mov
data16
xchg
dec
mov
xor
pop
fimuls
lea
leave
mov
xor
outsb
add
sub
jo
mov
ss
aad
int3
push
rclb
push
pop
dec
fistl
or
hlt
dec
imul
lds
mov
in
aam
mov
sub
mov
les
and
push
cld
jmp
cmpsl
test
adc
push
loop
pop
add
sarl
pop
sub
mov
mul
jns
insb
lret
push
fidivrs
lahf
dec
jle
mov
adc
in
inc
xchg
xchg
jbe
inc
pop
jae
psrad
xchg
xor
sbb
push
adc
xchg
jno
scas
push
rclb
clc
cmp
xchg
rorb
insb
jle
imul
bound
sbb
xchg
dec
push
movsl
inc
mov
add
mov
mov
pusha
cltd
movsl
cmp
xorl
scas
cmp
add
or
push
data16
mov
subb
add
fildll
lds
and
icebp
inc
ret
mov
pop
loop
enter
adc
push
add
mov
fiaddl
mov
jnp
test
mov
popf
dec
test
ljmp
int
pop
adc
cld
push
lcall
push
ljmp
sub
pushf
in
mov
sbb
add
sahf
dec
jecxz
stc
xorb
loop
push
inc
sbb
add
mov
inc
fst
aam
daa
inc
add
push
mov
add
sbb
and
iret
jbe
add
jge
popa
pop
repnz
or
fidivl
imul
fs
push
xlat
bound
add
sub
cmp
or
in
pop
or
xor
test
add
add
push
mov
xor
sub
pop
inc
into
mov
cmpsb
popf
mov
adc
push
bound
jle
fidivl
xor
pop
sub
mov
fnstcw
dec
or
mov
shll
jge
lret
repz
fsubrp
sub
cmpsb
or
movsl
and
jbe
daa
jb
mov
jl
test
popfw
pop
inc
mov
push
jb
push
xchg
xchg
sti
xchg
sahf
sbb
sbb
popf
push
aas
or
xchg
or
mov
pop
outsb
add
in
push
clc
bound
dec
js
in
sub
cmp
addb
pop
imul
mov
pop
fbld
pop
mov
sbb
cmp
insl
outsb
xor
jo
jo
add
jle
outsl
addl
fidivrl
jp
arpl
sbb
sti
jecxz
sbb
int3
adc
lock
les
fwait
mov
mov
dec
cmc
jmp
daa
daa
adc
cmp
push
jmp
cmp
gs
arpl
mov
mov
sub
mov
or
dec
int3
mov
jo
fwait
mov
andb
xor
jle
cmp
mov
xchg
add
mov
cltd
and
sbb
or
mov
scas
xchg
and
sbb
add
loop
clc
int3
mov
xchg
dec
pop
and
in
sbb
sub
dec
ja
mov
shrb
push
push
fiaddl
cmpsl
and
sub
cmp
adc
in
sub
adc
xchg
xchg
jecxz
mov
pop
je
jl
sbb
and
xor
cmp
out
xchg
and
rcrl
stc
out
jmp
pop
push
pop
mov
and
fwait
js
or
in
sbbl
outsb
lods
jne
jo
jmp
and
pop
mov
fwait
mov
push
jmp
popf
ret
jo
cmc
mov
cmovb
jbe
pop
xchg
xchg
sbb
sbb
incb
in
push
dec
mov
lods
aad
adc
mov
push
arpl
out
es
pop
pop
minps
popf
cmpsb
cmp
jge
mov
cmpsl
pop
and
xchg
mov
adc
and
icebp
push
jb
push
pop
lock
insl
js
bnd
sub
jecxz
fwait
in
push
inc
mov
inc
out
sbb
dec
push
jmp
mov
sarb
pusha
xor
cmp
sub
shlb
data16
adc
in
cld
sbb
test
pop
aas
cmp
shrl
or
dec
mov
mov
iret
push
mov
aam
jl
push
sub
insb
fcmovu
nop
stos
pop
mov
popf
stos
repnz
sar
jmp
xchg
test
loop
sarb
push
pop
xor
in
scas
push
lods
push
stos
out
pop
inc
std
test
push
push
xchg
sbb
mov
lret
jnp
sub
in
mov
push
mov
lods
cld
rclb
in
enter
ljmp
mov
adc
mov
sub
cs
xchg
fs
scas
cmp
adc
jbe
cmpb
pushf
mov
retw
xor
dec
in
and
rcr
cwtl
stos
mov
and
inc
add
sahf
popa
aam
lret
xchg
mov
int
inc
pop
mov
mov
cmp
sub
pop
sub
icebp
dec
push
sbb
pop
pop
and
pushf
in
push
sbb
sub
hlt
adc
out
stc
pop
shl
mov
mov
sub
mov
out
mov
int
and
daa
pop
mov
insb
ljmp
cmpsb
pop
scas
in
xchg
xor
sub
xor
fldl
push
fstpl
rorl
loope
sub
enter
pop
inc
dec
xchg
ret
cmpsl
sub
xchg
sbb
push
jmp
jle
btrl
push
test
push
fbstp
jo
xchg
shll
arpl
sbb
adc
jge
cs
add
jge
and
sbb
gs
sub
aaa
test
push
mov
jle
mov
mov
mov
ja
dec
jl
inc
sbb
popf
enter
aas
pop
xor
leave
pop
cmp
inc
mov
jmp
fstps
mov
inc
add
movsb
cmp
in
xor
xor
es
pop
cmp
cmp
mov
pop
lcall
push
insl
adc
dec
cmp
stc
push
pop
sub
in
out
clc
sahf
inc
push
ds
xchg
pushf
mov
mov
jp
lahf
popf
cmc
cmp
in
jp
xchg
hlt
adc
imul
bound
adcl
sub
xchg
std
lcall
out
out
dec
sbb
adc
imul
inc
in
movsl
xchg
jb
in
dec
dec
cmp
xor
cwtl
shrl
lret
pop
enter
fwait
jne
mov
rcll
les
jae
pop
out
mov
out
cmp
shll
adc
movsb
imul
pop
inc
test
in
mov
mov
je
daa
orb
dec
aas
pop
cli
jo
cmp
loop
xor
inc
stos
fidivl
xlat
repnz
cli
mov
int3
movsl
mov
dec
add
cmp
lock
mov
outsl
pop
pop
test
or
scas
incb
das
mov
insl
movsb
stc
in
lds
inc
rol
cmc
inc
and
cwtl
mov
jnp
adc
adc
daa
in
add
and
xchg
mov
fsubrs
sbb
popa
mov
xchg
ja
std
fisttpll
or
inc
insb
mov
sbb
and
sbb
loopne
cmp
jge
pushf
pop
imul
push
pop
jnp
mov
ljmp
xchg
mov
and
add
inc
mov
xchg
xor
lahf
dec
loopne
imul
fisttps
and
pop
dec
mov
cmp
adc
xchg
movb
jb
stos
mov
inc
cmpsl
out
cmc
aas
mov
mov
sub
aas
push
xchg
mov
decb
mov
sub
int
inc
mov
pop
in
jecxz
inc
cmp
ret
pop
xor
push
push
push
dec
pushf
das
mov
scas
xor
int
inc
xlat
xor
decl
rorb
pusha
aas
adc
mov
fbstp
cmp
inc
lret
addr16
xchg
dec
loop
lods
daa
inc
jbe
lock
xchg
sub
xchg
xor
lock
jno
pushf
repnz
mov
xchg
cwtl
insl
movsl
jecxz
out
inc
ret
cmp
int
insl
add
add
xor
iret
or
fwait
mov
popf
scas
fisubl
cmpsl
mov
not
out
daa
cmc
aaa
into
push
and
and
sahf
ds
mov
mov
inc
mov
sbb
fistps
dec
popl
jmp
lret
pop
push
lcall
inc
dec
leave
mov
mov
push
jno
fndisi(8087
adc
push
inc
push
arpl
push
sub
mov
add
sahf
sbb
cs
and
fptan
adc
xchg
data16
pop
lock
cltd
cltd
dec
out
adc
pop
lds
aad
cmp
fnstcw
sarl
jg
insb
aad
adc
ja
rcll
jmp
loopne
stos
xor
jne
push
iret
xorb
fdivrl
cs
xor
repnz
lods
adc
lds
push
ljmp
xor
add
xor
popa
push
clc
sysret
adc
and
push
mov
and
push
lds
mov
sbb
out
inc
mov
leave
push
lret
jne
xor
fdivrl
pop
push
push
inc
fadd
mov
clc
imul
les
test
in
pop
ja
les
pop
mov
insb
fsubs
lock
push
adc
addr16
jmp
lret
cld
loopne
loope
cli
fnstsw
xchg
inc
into
dec
stc
incl
in
xor
cmc
adc
pop
pop
mov
rorl
gs
cmpsb
inc
lea
xor
arpl
out
outsl
jns
push
mov
xor
cmpsl
push
scas
pop
xchg
clc
push
dec
lcall
int
adc
add
js
leave
pushf
mov
clc
mov
dec
dec
jg
and
sbb
andl
loope
sahf
add
jge
pop
dec
pop
popf
lahf
ss
js
data16
bound
fs
in
sub
dec
mov
cmp
dec
test
jo
cmp
xchg
xchg
pop
pop
pop
cmp
enter
adc
xchg
xchg
push
js
or
dec
adc
into
jnp
xor
pushf
dec
pop
std
in
dec
mov
adcb
or
pop
pop
je
gs
outsb
dec
mov
jno
inc
fxch
scas
pop
loopne
push
inc
fisubrs
mov
cmp
fisubl
aad
dec
repnz
testb
mov
xchg
mov
mov
mov
jno
das
and
inc
push
in
cld
mov
test
lret
in
ja
cmc
add
push
lock
fs
lahf
imul
int
pushf
in
push
aas
int
or
or
or
or
jae
test
inc
sti
jle
mov
fs
cld
add
inc
cmp
jecxz
lea
sbb
dec
xchg
rep
addr16
push
scas
enter
mov
xor
mov
fucomp
inc
xlat
sbb
inc
dec
enter
adc
mov
mov
cmp
add
ljmp
orb
rcrl
outsb
jecxz
int
cmp
dec
xlat
jnp
call
aad
inc
dec
in
js
jo
cmc
sub
xchg
adc
mov
ljmp
inc
test
cwtl
mov
inc
js
in
mov
scas
cwtl
push
lcall
mov
add
xchg
scas
sbb
sub
pop
jle
aaa
xchg
mov
movsl
sbbl
jle
adc
fdivrl
sbb
popa
loop
psllw
test
sarl
std
aam
pop
pop
lock
mov
inc
mov
ja
insl
and
shr
cwtl
inc
and
jg
fcoml
in
repnz
jae
lock
lock
ja
xor
mov
rcll
and
xchg
xchg
movsb
adc
shlb
mov
pop
scas
jns
xor
rcrl
popa
jns
mov
int
movsb
shll
add
xor
inc
xchg
adc
adc
push
mov
in
xchg
dec
nop
mov
sahf
leave
jne
enter
cmpsl
sub
enter
pop
rclb
xchg
jp
push
in
out
lret
subl
mov
je
div
cmp
sub
jno
sbb
xchg
push
mov
imul
xlat
sbb
mov
sbb
xchg
mov
cmp
fnstcw
mov
lds
xchg
or
cli
andl
in
popf
dec
cltd
pop
mov
fisubl
testb
cs
insb
inc
cmp
notb
mov
neg
inc
cli
cltd
sub
sbb
jb
push
or
xchg
inc
cwtl
ja
xchg
mov
pop
lcall
mov
or
addl
inc
mov
cld
inc
les
repnz
jno
push
mov
stc
fdivrs
sbb
les
mov
je
pop
and
cmp
arpl
ss
adc
popf
hlt
and
push
frstor
push
xchg
and
insl
jl
jecxz
sbb
sub
stc
mov
stos
mov
cmp
mov
mov
jmp
sti
orb
sbb
mov
out
je
in
or
push
pop
adc
mov
jge
pusha
pop
sbb
cmp
scas
jmp
shlb
cmp
mov
cmpsl
add
adc
push
xor
nop
adc
or
xchg
cmc
repnz
mov
int
dec
adc
push
push
dec
in
jl
out
imul
add
mov
push
cli
fstpt
add
mov
in
inc
mov
sbb
adc
xchg
loope
pushf
stos
add
push
push
mov
out
aas
shll
gs
mov
sbb
cmpsl
adc
adc
mov
testb
pop
or
sub
loopne
dec
into
stos
ret
lock
lret
and
lret
andb
sbbb
pop
ds
sarl
aad
jmp
mov
mov
jo
xchg
push
add
xor
insl
jge
xchg
sub
push
sub
out
push
or
arpl
push
sbb
push
cmp
push
xor
xchg
or
add
mov
loopne
adc
ret
adc
dec
loope
rol
loopne
sub
cmc
inc
addr16
pop
imul
push
call
sar
pop
icebp
mov
roll
fidivl
inc
xchg
popa
or
inc
mov
cmp
pop
scas
sub
and
arpl
repnz
dec
pop
into
gs
cs
mov
sub
shr
cli
add
cli
xchg
and
sub
lds
cmp
cmp
xchg
push
sub
lea
sbb
jle
sti
cmp
lods
mov
jmp
pop
lock
or
nop
adc
add
testl
inc
or
add
adcl
cmp
push
fildl
lock
movsb
movsb
or
daa
mov
into
dec
scas
call
add
pop
lods
movb
lcall
mov
test
cmp
clc
xor
test
xchg
xchg
or
cmpsl
xor
mov
sbb
ja
cwtl
jge
bound
inc
mov
or
cmp
popf
das
push
xchg
rorl
icebp
mov
sub
mov
aas
inc
pusha
sahf
in
subl
lds
xor
insb
jns
rcrl
fistpl
mov
dec
jmp
andl
fucomp
push
daa
push
ja
xor
fwait
sti
out
mov
test
push
pusha
lahf
stos
ror
add
fidivl
pop
cs
das
in
mov
subb
js
mov
xor
xor
movsb
or
in
mov
push
fisubrl
adc
mov
lret
lret
mov
dec
and
and
pop
mov
mov
nop
repz
lock
mov
dec
out
out
xor
in
or
fiadds
mov
imul
pusha
pop
sub
mov
in
repz
repz
xchg
lret
lret
jbe
jo
pop
dec
mov
popl
mov
fisubrl
add
sbb
scas
mov
pop
imul
jo
xor
xlat
sub
les
inc
or
sub
ljmp
cmp
imul
cmp
shlb
in
insl
mov
insb
add
mov
adc
outsl
push
test
dec
nop
lea
or
sahf
scas
mov
in
int3
mov
cmp
outsb
insl
cmc
fwait
xchg
ret
xchg
mov
rcrb
lods
mov
js
mov
adc
ss
cmp
xchg
cwtl
xchg
into
das
mov
iret
sarb
fildll
pop
mov
or
cli
push
mov
jl
sbb
out
cmp
add
cmp
and
stc
xchg
sbb
dec
mov
into
addr16
mov
or
aam
xor
iret
popa
cmp
mov
cli
push
sahf
fisubl
mov
jns
addb
aam
loope
mov
fdivrs
fwait
xor
insl
stos
xchg
fcomi
mov
and
or
dec
iret
xlat
sbb
or
sbbl
cld
stos
add
leave
jbe
jne
inc
not
sub
adc
dec
pop
mov
sahf
push
jle
loope
mov
or
cmpsb
sub
push
sarl
call
mov
or
xor
or
sub
lret
mov
sbb
mov
dec
in
mov
add
xor
push
push
fwait
mov
movl
xor
mov
cmp
shl
aas
jae
fimuls
push
push
jb
or
fcoms
test
dec
fcoml
cmc
or
mov
dec
xchg
ret
sbb
fiadds
sbb
and
and
pusha
mov
cmp
xchg
jnp
sbb
pop
push
test
lods
lea
sbb
leave
ja
inc
out
xlat
or
dec
fsubs
sub
sahf
cmp
sub
ljmp
mov
out
pop
xchg
arpl
popf
jecxz
gs
add
ss
pop
add
aaa
sbb
cmp
sbb
jp
idivb
add
loop
pop
xlat
outsb
mull
insl
ja
adc
je
push
iret
ss
cwtl
push
xor
je
jp
cmp
sub
push
adc
and
leave
mov
rcl
jo
int3
cmp
mov
push
push
and
les
ljmp
or
mov
imul
mov
jno
das
and
cwtl
das
push
pop
cmp
or
inc
cmp
cvtdq2ps
and
mov
sbb
jg
jbe
cli
lret
out
hlt
cwtl
push
movsl
cmp
mov
testb
mov
xchg
popf
movsl
hlt
dec
push
cmp
inc
xchg
sbb
xchg
jae
fildll
stos
int
and
dec
dec
push
mov
popa
xor
adc
mov
jb
dec
add
mov
push
dec
fsubs
jle
jp
out
sub
or
add
jnp
lahf
jb
or
jb
pop
stc
pop
mov
jle
lods
loopne
and
inc
decl
js
enter
dec
mov
cmp
mov
rcrb
fbstp
add
sarb
xlat
rolb
mov
in
cmp
adc
or
cmc
push
in
mov
les
icebp
lds
popa
inc
aad
jecxz
mov
cmc
insl
mov
imul
xchg
or
sub
lahf
mov
mov
pop
xchg
xchg
mov
cmp
adc
push
popf
pop
jg
nop
dec
jnp
outsl
cmp
pop
scas
push
and
adcl
or
push
and
inc
repz
jge
icebp
adc
and
cmp
rclb
xor
sub
cmp
adc
inc
xor
xchg
xchg
jns
mov
pop
hlt
dec
test
ds
inc
pop
xchg
stos
jbe
aaa
rcl
addr16
lods
push
push
test
mov
sti
sub
add
sbbb
push
mov
mov
dec
sub
mov
push
inc
fadds
das
pop
test
leave
add
mov
ja
cltd
test
cltd
sbb
or
fisubrs
or
inc
xchg
repnz
cmp
inc
lea
mov
insb
xchg
and
sarb
nop
add
mov
ret
hlt
cmp
add
and
aad
out
loope
mov
jecxz
pop
adc
inc
mov
dec
dec
mov
sti
insb
push
xor
cmpsb
test
sahf
and
push
mov
xchg
mov
popa
hlt
inc
stos
stc
dec
test
mov
mov
xchg
xchg
rclb
out
xor
push
pop
sahf
push
cmp
out
sbb
outsb
jp
mov
and
push
dec
jne
hlt
aas
dec
icebp
cmc
jae
cmp
jp
es
or
xor
scas
add
pusha
jp
xchg
xchg
rolb
xchg
das
mov
repnz
and
stc
push
shr
call
icebp
das
mov
mov
lods
inc
mov
fmul
sar
sub
pop
fcompl
cmp
cmp
mov
or
and
mov
stos
mov
fisubs
sbbl
stos
jge
inc
jns
xor
mov
mov
inc
popa
aad
xor
push
cmp
push
ss
mov
mov
test
bound
sbb
xchg
lock
inc
fisubrl
lahf
push
xchg
push
stc
cmp
call
int3
sbb
mov
test
ret
ret
int3
arpl
xchg
dec
or
nop
rdmsr
push
in
addl
cs
pop
popa
clc
mov
leave
jae
lcall
popa
adc
ds
out
ret
xchg
scas
std
push
arpl
sbbl
mov
mov
add
mov
add
mov
bound
rclb
inc
scas
mov
cwtl
inc
sub
stos
fldpi
dec
mov
jp
mov
test
das
pop
mov
jle
push
out
cli
lea
adc
mov
fdivs
mov
insl
ja
nop
inc
cltd
jl
dec
stos
bswap
pop
push
test
or
clc
pop
fadd
add
adcb
loope
aaa
jne
jb
or
aas
scas
push
mov
mov
sbb
aam
xchg
and
daa
jge
stc
popf
and
dec
jb
out
mov
xor
out
inc
ljmp
sbb
pop
lods
sbb
or
lea
movsb
fldcw
sti
int
dec
outsl
xchg
bound
push
dec
sbbl
inc
enter
or
popf
lods
push
out
loopne
fucom
out
inc
hlt
xor
in
adc
movsb
add
cmc
insb
and
cltd
or
mov
ret
bswap
sub
cmp
push
inc
jge
sub
push
clc
mov
mov
lods
negl
inc
fnstcw
lods
pusha
subb
push
call
lods
mov
lcall
mov
mov
clc
mov
sbb
add
aam
mov
shrl
mov
mov
in
sbbl
pop
sub
inc
push
es
cmp
mov
push
cmp
add
push
punpckhbw
mov
adc
xchg
mov
js
push
mov
jne
cmp
into
jl
push
mov
cmp
add
scas
jle
sti
xor
and
dec
in
daa
ljmp
xchg
push
xrelease
test
fwait
mov
add
pop
scas
mov
insb
cmp
add
nop
int
jnp
in
xor
sbb
mov
bound
mov
bound
or
stos
inc
mov
sub
cmpsb
test
inc
gs
xchg
or
call
out
jecxz
pop
mov
mov
idivl
clc
fs
aas
sbb
push
mov
inc
fsubrs
push
fucomi
stc
adc
cmp
sub
movsb
jmp
add
add
mov
test
and
mov
xchg
mov
sbb
ror
mov
jmp
xor
push
jmp
push
jecxz
sbb
sahf
pop
mov
dec
enter
xor
aam
add
cmp
js
fcoms
mov
cmpsl
stc
je
aam
or
or
fdivrs
mov
or
mov
fdivrs
leave
out
xor
or
dec
xchg
lods
jg
pop
cld
pop
sub
mov
cwtl
leave
sub
and
mov
push
xchg
insb
jle
inc
test
sub
js
outsb
rcr
jp
push
sbb
sahf
shrl
sbbb
cli
lds
mov
mov
iret
and
daa
cmp
into
out
andb
jno
push
pop
iret
cmp
mov
cmpsb
dec
insl
repz
mov
ret
fists
loope
test
sbb
pusha
xor
shl
xor
lcall
cwtl
stos
frstor
popf
andb
xlat
ljmp
mov
mov
mov
call
cwtl
mov
adc
push
outsb
add
xchg
outsl
aad
das
test
ret
in
add
cmp
ja
call
shrb
loope
sbb
mulb
mov
jmp
loop
sbb
loop
pushf
in
push
outsb
cmp
not
ret
loope
leave
dec
adc
fstpt
add
pop
fwait
push
and
iret
loopne
fbld
test
test
movsl
das
xchg
enter
push
fs
mov
loopne
aas
ror
mov
add
mov
enter
test
push
sub
in
cmp
add
push
loop
aaa
test
mov
add
add
push
insb
jle
gs
push
or
jmp
pop
in
adc
pop
lret
pop
push
mov
shrb
lock
js
test
add
pop
mov
xchg
mov
dec
js
pop
aas
ss
clc
cmp
sbb
fdivp
ss
fistpll
cmp
outsl
andb
inc
fisttpl
and
mov
lods
call
jge
lahf
idivl
in
stos
cmc
xchg
or
mov
inc
pop
jl
addr16
mov
adc
add
xor
negl
mov
jb
enter
pop
adcb
mov
push
es
xchg
cmp
sub
push
jno
mov
cmpsb
jne
outsb
mov
data16
adc
xor
cmp
xor
aad
cwtl
testb
movsb
out
test
ljmp
sbb
mov
sub
adc
push
xor
daa
xchg
cltd
xchg
dec
pop
outsb
mov
ret
push
add
stc
and
arpl
out
lahf
sub
and
jnp
lock
mov
sbb
add
xorl
inc
xlat
or
mov
lret
call
push
mov
cmc
adc
adc
mov
pushf
scas
adc
icebp
push
les
ret
pop
jno
into
leave
xchg
sbb
jl
hlt
xchg
sbb
lahf
hlt
sbb
bound
out
push
mov
mov
mov
pushf
rol
mov
es
inc
and
cltd
pop
jmp
jae
jmp
xor
mov
andl
dec
push
mov
push
js
cltd
adcl
xchg
push
sbb
ret
scas
jo
adc
inc
popf
xrelease
sarb
cmpsb
push
mov
scas
jb
fcoms
bound
sbb
arpl
popf
dec
mov
cmpsb
sbb
dec
dec
pause
pop
mov
clc
or
mov
fnsave
xchg
test
aas
test
outsl
mov
mov
rcll
pop
xor
cmpsb
in
xchg
mov
mov
in
test
pop
fdivs
in
sahf
in
dec
daa
inc
call
cmp
sub
pop
and
dec
adcl
inc
mov
sub
ja
outsb
test
sbb
push
jg
xchg
dec
inc
loope
sub
sub
outsb
ret
mov
shl
add
dec
aad
jecxz
push
shlb
data16
pop
fcmovnu
test
imul
test
inc
pop
mov
testb
scas
pusha
das
lds
dec
dec
add
xor
iret
push
inc
repz
dec
iret
inc
sbb
bound
fistpll
pushf
adc
and
stos
xor
enter
jl
test
shll
mov
pop
sub
sarb
mov
lock
sarb
and
pop
pop
icebp
dec
jo,pt
jl
loopne
and
cmpsb
lods
inc
push
xor
cs
mov
push
add
or
ljmp
movsl
cmp
mov
call
lds
in
pop
xchg
pop
lea
add
fcmovne
add
adc
aas
movsb
push
add
mov
mov
out
aam
ficompl
lea
leave
xlat
mov
xor
or
aad
stos
out
aaa
xchg
cmpsl
shlb
mov
test
fs
inc
fsubr
in
ficompl
sub
jmp
pop
mov
cwtl
lret
pop
fiadds
in
mov
bound
xchg
add
xor
fwait
test
cmp
jl
pop
ljmp
push
mov
xor
jp
and
es
sub
inc
mov
ss
ds
lret
push
pop
mov
aam
xor
popl
lcall
and
mov
and
pop
vpsrld
mov
cmp
and
popl
mov
faddl
mov
sti
daa
fsubs
xlat
fisubs
xchg
les
out
sbb
aad
mov
mov
popa
push
cwtl
xchg
aas
mov
stc
negl
cmc
sbb
jl
cmp
push
loope
mov
icebp
adc
mov
arpl
pop
movl
ficoml
or
dec
es
loopne
pop
pushf
adcb
outsb
je
sbb
mov
test
out
sub
mov
aaa
xor
adc
adc
jae
jle
stc
popf
pop
insb
mov
in
inc
fstps
mov
mov
lods
data16
lea
mov
sti
mov
adc
xchg
in
pushl
fmuls
lock
sbb
jle
pop
add
iret
jecxz
lret
inc
pop
cmp
pop
dec
icebp
push
lcall
sbb
loope
call
mov
jno
fidivrs
dec
mov
std
jmpw
insl
lods
pushf
adc
cld
mov
scas
rorb
rcl
jecxz
das
sbb
jl
cmp
push
fwait
pop
adc
adc
and
dec
push
mov
inc
dec
push
adc
cmc
jecxz
mov
imul
jno
ja
sbb
pop
jle
pop
das
clc
cmp
test
dec
pop
sbb
inc
pop
cmp
ret
xlat
mov
pop
push
mov
popa
cs
roll
rclb
stc
lretw
ss
scas
xchg
xchg
out
sbb
orb
adc
add
aam
lcall
pop
jne
push
and
or
pop
scas
sub
aaa
cmp
pop
andl
sub
hlt
int
and
dec
cmpsl
sarl
std
inc
jp
mov
lods
dec
fs
mov
push
add
jne
push
js
lahf
cmp
inc
pushf
inc
push
das
fidivl
addr16
cs
and
imul
orb
cmpb
test
xlat
adc
imul
lds
adc
inc
jg
int
push
jne
mov
or
lock
push
movsl
out
clc
pushf
cltd
pop
leave
shll
into
gs
dec
sbb
sub
cmp
outsl
push
fldcw
sub
push
jge
ret
dec
loop
dec
push
fistps
mov
stos
pop
std
lock
inc
lods
inc
imul
xchg
cs
daa
xchg
sub
sarl
xor
sub
pop
pop
cmp
cmpsb
negl
cmp
add
bound
jg
in
mov
sub
mov
mov
inc
pop
repz
add
sub
pop
movsl
sub
cmp
add
std
xchg
arpl
adc
dec
xor
popa
cli
pop
inc
daa
arpl
call
dec
dec
rolb
sbb
fcompl
outsl
xchg
stc
mov
xchg
adc
rcrl
fsubs
xchg
add
jecxz
nop
jae
sub
cmpsl
sar
clc
mov
out
jo
push
enter
repz
shr
cmpsl
adc
mov
orl
popf
outsb
andl
xor
xchg
inc
cmpl
in
aas
xchg
popf
pop
test
cmp
add
mov
cwtl
mov
sti
aad
xchg
es
adc
inc
test
and
inc
insb
jle
jnp
jno
jmp
cld
lcall
in
cmp
loopne
push
in
pop
jae
add
divl
xchg
push
inc
adc
imul
outsb
aam
pushf
incl
jno
dec
or
and
pop
pop
xchg
add
stc
mov
stc
sbbb
inc
pop
mov
xor
imul
lahf
sub
mov
outsl
ds
jo
push
jle
iret
xorb
adc
mov
sub
mov
fstpl
mov
jbe
inc
pop
dec
pop
push
daa
es
jbe
fsubrs
lods
inc
es
fwait
lods
int3
dec
das
jcxz
add
xchg
fsts
in
ljmp
mov
jp
sub
push
les
and
mov
jnp
jl
std
lar
jno
rcl
fwait
jecxz
dec
push
pop
dec
hlt
outsl
mov
mov
test
ret
jmp
fbld
movsb
cmp
adcb
sbb
xchg
les
ret
xchg
mov
cmpsl
dec
dec
mov
int
stos
sti
mov
add
ret
fistps
out
cmpsl
pop
xor
xor
je
push
out
rcrl
lret
mov
ljmp
mov
sub
lea
dec
dec
push
lret
lahf
push
xor
cmp
mov
mov
jp
orl
rolb
subb
dec
sub
fstpt
mov
loopne
pop
ljmp
icebp
or
push
rclb
adc
xchg
mov
inc
aaa
movsb
inc
adc
add
add
or
cltd
lock
jge
mov
xor
cld
xchg
dec
repnz
push
out
mov
mov
cmp
jp
xchg
add
rolb
inc
lret
xchg
mov
or
pusha
jecxz
cltd
clc
push
jmp
xchg
sbb
or
or
pop
cmp
mov
push
cli
xchg
cmpsl
pop
xchg
adc
bound
insb
mov
jge
idivb
add
loope
popa
jmp
imul
mov
inc
jnp
lret
jbe
pusha
push
out
pop
jmp
cwtl
loopne
jne
fst
xor
ja
pop
gs
pop
mov
out
sbb
mov
pop
push
or
into
movsb
pop
sbb
jnp
xchg
mov
cltd
xor
mov
shlb
das
xchg
xorb
movsl
leave
sub
sarl
mov
sbb
cmp
js
mov
push
jno
movsl
mov
jmp
mov
out
jecxz
nop
out
xchg
test
fistpl
icebp
or
and
jo
mov
cwtl
xchg
pop
stos
push
dec
jmp
test
mov
inc
push
negb
xor
out
cmp
lcall
inc
mov
inc
std
xchg
jecxz
sar
loop
mov
sub
out
pop
mov
cmp
sub
cli
sbb
movsb
test
jae
sub
mov
lea
sbb
or
push
fistl
push
cmpsb
sub
add
mov
xchg
stc
sub
inc
pushf
dec
add
shll
push
aad
stos
test
mov
sub
mov
fimuls
jge
into
adcb
jge
in
xor
xor
stos
jns
lods
push
out
les
cwtl
pop
dec
test
into
test
mov
jno
fwait
shl
push
je
in
fistps
inc
jecxz
fldl
lcall
test
aas
es
jecxz
repnz
decb
scas
pop
das
pop
sbb
dec
in
gs
call
inc
sub
setle
push
push
jnp
or
mov
sub
inc
cmpsb
mov
iret
lods
arpl
loop
adc
aad
and
rclb
jecxz
xor
pop
push
enter
dec
xor
pop
mov
inc
jg
movsl
mov
addr16
and
dec
lock
push
mov
out
addl
xorb
push
repnz
xchg
dec
repnz
cmp
push
jno
pop
or
inc
in
clc
fidivrl
xchg
lock
imul
out
mov
xorl
add
mov
and
xchg
repz
mov
jecxz
out
lea
push
jmp
pop
and
loopne
outsb
lods
adc
test
add
addr16
push
mov
pop
mov
nop
jnp
out
xor
dec
cmp
mov
leave
les
jmp
repz
cmp
push
sahf
sub
mov
inc
sbb
imull
dec
jmp
cs
fbstp
lret
push
adc
in
mov
xchg
cmp
add
sub
adc
adc
sbb
xchg
cmp
xorb
jmp
or
cmp
fdivrl
dec
jb
dec
fsub
xor
sub
mov
xchg
inc
mov
jg
bound
mov
rcl
sbb
shr
shlb
sub
mov
and
add
or
cli
test
nop
mov
lcall
popa
adc
sbb
mov
or
cltd
icebp
xchg
mov
or
cmp
aad
in
arpl
ss
lahf
lahf
sti
jo
inc
push
outsb
mov
aad
enter
jmp
stos
fdiv
lods
das
scas
inc
fsubl
dec
icebp
mov
mov
aaa
ljmp
in
loope
adcb
outsl
addr16
nop
in
cmp
das
aam
sbb
sbb
pop
icebp
adc
and
inc
cmc
sbb
fcmovne
push
xor
xchg
jmp
lds
adc
xor
test
mov
cmp
sbb
cmp
iret
or
cs
lock
fdivl
clc
sti
pop
inc
jl
adc
xor
adc
xchg
sbb
incb
or
xchg
cmpsl
test
mov
mov
or
lret
paddsw
enter
testl
mov
xchg
inc
stos
lea
adc
ss
in
jmp
sub
and
sub
jbe
and
push
stos
push
sub
mov
mov
mov
bound
je
dec
sbb
lods
push
in
xchg
ja
cmp
je
push
jae
push
mov
mov
lret
mov
les
out
out
sub
mov
sbb
or
dec
lock
or
add
fwait
sub
xchg
push
sbbb
push
popf
frstor
mov
pop
nop
movsb
fistpll
xchg
jecxz
cmp
push
push
call
inc
jo
mov
cmp
lods
in
mov
sub
mov
clc
lret
fs
popf
pop
loopne
enter
andps
scas
jb
sbb
xchg
mov
leave
jecxz
dec
cltd
xor
pushf
mov
aas
xchg
mov
push
outsl
inc
movsl
sbb
push
sub
out
add
fdivl
push
movsl
push
add
stos
dec
pop
sub
enter
notl
and
push
hlt
daa
push
xlat
push
scas
mov
ret
dec
xor
sub
vcvtdq2ps
add
iret
xchg
daa
lahf
mov
cmp
dec
dec
mov
ss
jl
cli
mov
inc
inc
daa
stos
test
sub
cmp
out
adc
adc
mov
xor
push
dec
dec
adcb
xchg
xor
pop
add
sbb
jecxz
fistpll
mov
sbb
inc
jnp
add
lahf
and
push
rcr
jo
dec
adc
xlat
pop
push
in
adc
add
sti
push
push
lcall
dec
mov
xor
lcall
cmp
out
cmpsb
push
mov
shlb
cs
clc
pop
and
mov
insb
cmp
stos
push
dec
inc
lock
xchg
xchg
sbb
mov
push
cli
pushf
fimuls
xor
or
ds
mov
lea
imul
lea
pop
mov
sahf
mov
jmp
pop
xchg
xchg
or
pop
ds
sbb
test
cmp
divb
pop
mov
nop
lods
xlat
dec
jmp
repz
mov
clc
aam
loope
std
add
or
stos
and
jb
push
xor
fsubrs
push
ja
mov
push
cmp
xchg
push
das
loopne
pusha
aas
and
scas
iret
ret
dec
inc
dec
das
mov
pop
sub
fwait
cmp
popf
mov
mov
push
add
aam
cmpxchg
push
jecxz
push
xchg
mov
ret
out
jne
icebp
and
mov
popf
jle
iret
clc
lret
arpl
arpl
mov
and
fadd
mov
pop
mov
add
adc
pop
cld
mov
or
fisubs
inc
xlat
das
push
or
adc
and
loopne
cwtl
dec
lock
cli
mov
enter
adc
jmp
sti
es
fistl
jle
or
add
or
mov
out
fcoml
arpl
outsb
cmpl
sub
mov
in
shll
push
sahf
shll
daa
cmp
lahf
push
pop
movsl
aaa
in
or
sbb
adc
test
pop
repnz
and
push
shl
pop
xchg
std
outsl
push
das
mov
pop
int3
movsb
jne
xchg
push
push
fwait
and
mov
jmp
fisubrl
or
add
xor
and
dec
dec
repz
das
cmpsl
cmp
adc
add
or
gs
loopne
mov
loope
add
mov
test
mov
inc
pop
lret
aam
gs
fbld
inc
push
test
cmpsl
xor
stos
push
popa
lods
fsub
stc
sbbb
add
lret
and
pusha
jle
mov
insl
dec
mov
mov
push
adc
pop
mov
es
lods
jecxz
loope
mov
loope
pop
ljmp
and
lock
xchg
stos
in
in
lds
pop
mov
or
in
add
push
jg
aas
popf
pop
sti
mov
out
add
arpl
imulb
cmp
lahf
fnstenv
xor
sarb
jnp
lock
loop
dec
add
das
cmp
fstpt
or
dec
mov
loop
in
xor
aam
je
shll
mov
mov
jp
mov
sub
pusha
sub
dec
hlt
popf
daa
sahf
xor
xlat
xchg
clc
mov
or
xor
mov
mov
inc
mov
loopne
leave
add
mov
sub
fmulp
mov
pushf
add
xchg
ljmp
adc
lret
push
fsubr
mov
pop
push
xchg
jl
jae
xchg
mov
addb
lock
int3
jae
shr
pop
hlt
cmp
faddl
fistpll
mov
pop
jnp
add
mov
imul
pop
nop
imul
insb
in
mov
jbe
sbb
sbb
cwtl
shl
xor
jns
ss
mov
push
dec
push
push
jns
aad
in
dec
out
out
movsb
cmp
jno
inc
scas
insl
add
rcl
into
aad
or
fwait
dec
cltd
test
enter
lret
fimuls
jno
test
lock
and
jae
xchg
xor
mov
mov
sbb
cltd
xchg
or
stc
mov
lods
jl
jo
cmp
xchg
mov
shr
repz
push
mov
fstp
test
cld
lcall
out
pop
sahf
outsb
pop
repz
jge
mov
bound
pop
mov
dec
pusha
and
push
mov
push
or
test
xor
inc
gs
push
sahf
jp
jmp
or
in
cmpsl
inc
lds
inc
sahf
outsl
cmp
dec
mov
jnp
pop
pop
aaa
loope
stos
icebp
fbstp
mov
roll
jbe
mov
and
lahf
push
aaa
and
add
mov
lahf
jecxz
shll
push
lret
rcr
jmp
ds
jae
sub
jnp
push
popf
adc
enter
dec
sbb
mov
insl
dec
loop
fninit
mov
sub
xor
xchg
push
in
add
out
scas
popf
ss
cmp
jo
mov
loope
and
mov
mov
sub
fldt
insb
mov
pushf
xor
pop
xchg
inc
adc
rcr
sub
mov
fs
adc
cmp
xlat
xor
imul
into
sti
xchg
jno
adc
lods
jb
xor
rcrb
imul
inc
cmp
std
cltd
loop
into
and
frstor
pop
stos
lret
sti
mov
push
fldenv
into
xor
inc
adc
cmpb
xor
xor
cmc
push
and
dec
pop
and
outsl
jnp
adc
adc
ds
mov
pop
pop
xchg
adc
addl
mov
or
mov
ret
push
push
mov
mov
loopne
push
mov
mov
addr16
fnstenv
xor
arpl
mov
or
mov
and
addr16
outsb
sti
pop
sub
inc
and
jo
sarb
push
fwait
push
shll
shrl
imul
shl
xchg
cwtl
mov
into
roll
adc
repnz
cmp
pop
lret
out
leave
shld
ljmp
lcall
popf
bound
inc
adc
push
push
add
imul
xlat
dec
sbb
dec
stos
mov
mov
movsl
dec
dec
pusha
push
add
pop
daa
jge
jg
test
rcll
dec
and
daa
and
sbb
aas
ret
dec
into
and
push
sbb
xor
out
ljmp
jno
sbb
sub
xor
dec
rcll
ds
dec
hlt
push
imul
repnz
fists
sti
xor
and
adc
arpl
sti
adc
test
jno
cmp
dec
lods
insb
inc
mov
sbb
fcomp
jbe
sub
add
xchg
lock
ret
enter
push
in
mov
sahf
out
push
push
sbb
js
push
mov
in
setge
into
mull
sub
fs
sahf
push
add
dec
add
test
mov
ljmp
inc
out
jecxz
fcompl
aas
rol
xor
or
call
or
je
test
jnp
sti
stos
jmp
std
sti
es
pushf
xor
imul
sbbl
mov
pop
out
lcall
lahf
push
jns
mov
adc
repz
fidivrs
stos
inc
pusha
fcmovnbe
dec
mov
and
mull
xchg
data16
dec
shrl
push
ljmp
xchg
pop
stos
xor
inc
call
jnp
and
pop
negb
lret
lods
outsb
loope
push
pusha
lret
js
sbb
mov
push
shr
cltd
or
test
sub
cltd
adc
push
adc
outsb
dec
sbb
mov
lahf
inc
loop
jecxz
lods
inc
insl
cwtl
xchg
jg
fdivs
pop
xor
push
repz
sub
outsl
js
sbb
or
cli
jge
xchg
insl
jle
lret
mov
mov
or
xchg
sbb
mov
mov
ljmp
pop
js
mov
push
ja
int3
test
mov
cli
push
push
cmpl
and
xor
xchg
mov
lahf
lcall
mov
scas
das
jg
push
mov
inc
fcomps
mov
add
and
xchg
pop
cmp
clc
inc
lea
shlb
or
xor
push
in
pop
mov
loope
js
jmp
xchg
nop
push
test
testb
dec
inc
gs
sbb
in
adc
cmp
dec
mov
jmp
cmp
push
mov
mov
push
xchg
pop
mov
xlat
movsl
cmp
js
jne
repnz
inc
movsb
pop
cmc
lret
sti
sbb
frstor
icebp
jl
lret
lock
andb
mov
adc
cs
xlat
mov
lds
mov
arpl
fstl
clc
sbb
pop
cmpsl
dec
cmpsl
lds
or
mov
and
jae
out
call
xor
and
adc
cmp
pop
xor
fwait
gs
jns
bound
xchg
mov
lea
pop
imul
repnz
mov
inc
pusha
fistl
inc
cmc
sub
clc
rcr
mov
aad
ret
jp
pop
shufps
mov
in
pop
mov
cmpl
push
sbb
jnp
adc
stc
add
sub
mov
in
push
cltd
dec
cmc
mov
xor
pop
arpl
pop
push
sub
je
call
dec
gs
and
push
dec
adc
dec
and
pop
adc
movsl
fiadds
fs
lock
inc
aad
sub
lahf
loopne
js
xor
push
cwtl
add
pop
loop
and
jb
mov
rcrb
stc
mov
in
fdivrp
out
push
cmpsb
out
xchg
adc
dec
add
jmp
out
jle
sbb
notl
mov
dec
mov
add
ret
pop
insl
outsb
testl
inc
aas
sbb
iret
sub
pop
test
mov
lcall
cwtl
das
jmp
sahf
xchg
mov
dec
fildl
pop
mov
std
cmpb
mov
test
in
jg
push
dec
sbb
js
xchg
nop
and
in
shrb
xchg
aaa
testb
pop
adc
jle
cli
push
add
mov
mov
out
adc
push
jmp
pop
shll
add
adc
sub
shrb
mov
sahf
nop
cmp
and
push
push
adc
scas
jae
mov
inc
lahf
cmp
mov
jmp
fcoms
push
cmpsl
jmp
jecxz
mov
fwait
icebp
test
sub
cmpsl
in
iret
sub
add
jp
pop
inc
add
jmp
mov
lods
shlb
cli
stos
sbb
mov
fstpl
push
mov
add
mov
dec
adc
arpl
or
icebp
adc
xor
data16
lret
mov
or
jp
cmp
shrb
lahf
shrb
inc
push
xchg
xchg
xor
sbb
push
ljmp
or
int3
cmp
iret
jae
jb
mov
ret
jo
loopne
ss
cltd
inc
mov
daa
mov
pop
xchg
inc
gs
mov
movsl
aad
fcomp
outsl
add
or
mov
pop
lcall
jns
xchg
scas
adc
inc
testb
scas
je
jne
fistpll
ror
scas
pop
cmpsb
or
mov
test
sar
inc
testb
sub
and
pop
pop
mov
icebp
test
cld
les
clc
cmp
out
popf
pop
aam
xor
je
ret
mov
lods
adc
fmuls
call
call
xchg
loop
mov
nop
mov
jns
pop
dec
mov
pop
repnz
mov
or
pop
out
dec
jb
ja
out
cmpsb
dec
out
rdmsr
mov
js
or
mov
and
and
ja
leave
xchg
cmp
ret
sbb
fisttpl
cwtl
ret
or
lods
jb
outsb
shrb
xor
dec
out
dec
data16
or
lahf
sub
xchg
mov
inc
fs
sbb
push
push
xor
test
test
mov
mov
mov
out
fsubl
ret
ret
fcomip
inc
arpl
fisubs
in
ficomps
cld
push
xchg
jl
fsubrs
inc
dec
cmpsl
mov
aaa
cmp
inc
andb
mov
or
cmp
mull
mov
push
js
in
je
push
push
xorb
cmp
mov
sarb
fstpl
fstl
mov
sti
out
jno
mov
stc
xchg
dec
out
mov
sahf
ljmp
test
mov
jae
jp
mov
add
inc
fisttpll
jb
jbe
repnz
jge
xchg
out
in
sahf
pop
std
dec
xor
sbbl
push
adc
mov
xlat
or
std
jge
inc
out
adc
push
test
or
std
int
cli
jl
out
lods
outsl
je
lcall
ret
aam
test
lret
and
cmc
mov
mov
mov
pop
pop
cmovbe
fisubrl
mov
mov
aaa
sbb
mov
push
jmp
pop
sbb
pop
lret
lods
sbb
xchg
push
jle
xlat
sub
pop
testb
fwait
test
or
in
cmp
pop
xor
out
adc
lods
les
in
mov
sahf
xor
std
pop
mov
mov
mov
push
leave
jb
std
imul
pop
sbb
jns
cld
xlat
in
add
xor
movsl
jge
jnp
push
push
pop
and
cmp
cs
lods
insl
inc
lods
in
jae
sbb
pop
fstps
xor
nop
lret
sub
rcrl
mov
mov
dec
sbb
cmp
scas
insl
and
ljmp
sub
sub
jno
push
movsl
or
xchg
mov
aam
add
lea
mov
std
sbb
clc
xor
sub
or
mov
jo
dec
test
std
cltd
or
adc
or
nop
ss
scas
xor
loopne
cmp
or
lods
mov
jle
cwtl
mov
fistl
mov
inc
into
movsl
shll
insb
repz
mov
lahf
les
ret
and
jecxz
add
pop
mov
jb
jp
mov
pop
outsb
inc
test
test
in
or
out
inc
xchg
xor
mov
lock
sub
cmc
inc
popa
or
lock
pop
xchg
in
test
in
dec
es
push
or
or
mov
sbb
pop
test
cld
sbb
jp
xor
lahf
mov
enter
jmp
dec
jno
repz
sub
jno
or
inc
popl
fwait
or
dec
out
lods
pushf
mov
jp
add
xor
pop
add
adc
pusha
ret
cmpsl
xor
outsb
mov
ja
jg
mov
cmp
dec
xchg
mov
and
xchg
fld
inc
xchg
adc
and
cmpsb
jp
cvtps2pi
jle
shll
int
dec
iret
dec
pop
mov
xchg
lret
inc
xor
fsts
pop
sahf
js
je
mov
add
idivl
les
rol
pop
add
jp
mov
jl
jg
inc
leave
push
add
test
notl
and
cli
inc
add
xchg
inc
test
jb
stos
jmp
jae
jmp
fwait
mov
push
shlb
pushl
dec
data16
std
xchg
scas
shrb
sbb
mov
pop
jmp
test
jle
int
outsl
jns
xor
inc
pop
mov
mov
inc
mov
lret
push
or
pop
and
cs
in
add
out
lret
xchg
adc
out
rol
inc
push
fsub
push
push
pop
mov
sti
in
test
mov
testl
jns
mov
int
std
ja
leave
pop
dec
test
lea
push
adc
add
rclb
inc
jle
jns
mov
test
cmpsl
sahf
sti
and
ljmp
mov
loope
jge
xchg
cmp
rol
pop
add
es
or
pop
mov
jge
fsubl
icebp
out
aas
pushl
lret
popf
clc
push
sbb
imul
or
scas
repnz
sub
sbbl
je
aad
repnz
or
outsl
pop
mov
push
cltd
xor
sub
push
inc
daa
outsl
arpl
into
dec
cmp
pop
sub
or
and
cltd
lret
mov
push
mov
jb
lret
sti
addr16
mov
popf
inc
and
fwait
jne
pop
jb
mov
sub
mov
mov
jae
mov
test
push
sbb
dec
sub
ja
lods
js
fistpll
ds
stos
sbb
inc
shlb
pop
jmp
lds
mov
jg
inc
pop
xchg
mov
arpl
imul
movsb
cmp
test
shl
pop
adc
mov
je
lahf
inc
sub
lahf
pop
mov
dec
iret
lahf
js
cld
bound
cs
pop
cmp
arpl
outsb
test
jl
imul
and
ja
cli
mov
int
adc
sbb
dec
mov
rcr
scas
cmp
mov
gs
mov
clc
test
mov
mov
xchg
les
cmp
sbb
xchg
call
jo
sbb
xchg
jne
stc
das
iret
cmpb
rolb
add
loop
push
imul
aaa
dec
addr16
imull
ja
lods
and
movsl
xchg
mov
mov
xor
mov
add
sub
sub
lcall
cwtl
and
fstpt
das
jbe
das
xlat
pusha
sti
xchg
xchg
div
js
clc
mov
push
daa
jnp
cmpsl
into
sbb
xchg
mov
pop
mov
popf
cmp
push
cmp
dec
das
inc
je
inc
xlat
call
jecxz
mov
fidivs
sub
shll
insb
inc
push
dec
mov
and
jp
dec
push
mov
ljmp
xor
cmp
in
ret
out
mov
repz
xchg
cmpb
sub
cs
or
add
data16
jb
cmpsb
les
xor
movsl
lahf
sbb
call
and
jge
out
sahf
leave
push
cld
adc
cltd
push
aas
rcr
addr16
stos
jnp
mov
fstl
mov
mov
inc
aas
mov
mulb
jmp
call
dec
loope
pop
imull
xlat
sub
lds
js
xor
loope
mov
sti
jmp
adc
lds
mov
push
lds
ss
mov
dec
xchg
fwait
push
in
lock
inc
test
push
lcall
in
push
imul
jg
test
repnz
mov
add
test
movsl
ret
xor
into
cmc
or
xor
mov
inc
clc
xor
shll
icebp
arpl
cltd
push
dec
lods
rcl
fnstcw
cld
jae
mov
les
xor
jb
xor
adc
fisubl
test
lret
and
add
inc
and
or
inc
imul
mov
aas
push
push
fisubl
int
les
xchg
push
data16
loop
je
rcl
iret
sbb
call
push
shr
mov
jl
aaa
enter
xchg
mov
sbbl
pusha
jl
cli
lea
aam
lods
fstp
xor
xchg
inc
fcmove
je
pop
out
sbb
mov
pop
mov
or
pop
xor
push
sub
leave
in
je
mov
fistps
push
lcall
in
movb
mov
scas
fnsave
loop
xchg
call
rcr
stos
leave
pusha
fdivrl
pop
jbe
push
adc
xor
int
lock
dec
push
sbbl
or
pop
dec
adc
mov
xorl
lods
sbbb
loopne
cmp
negl
xor
jp
leave
xor
subb
mov
je
lret
mov
roll
or
lret
mov
ret
out
cli
add
mov
push
pop
testb
clc
add
jge
icebp
lcall
sbb
mov
rcrl
xchg
cmc
cmp
cmp
sbb
fsts
mov
stc
std
bndstx
push
je
shl
jl
nop
pop
loopne
dec
pop
ja
outsl
pop
inc
loop
or
data16
adc
push
xlat
add
inc
call
in
jp
xchg
shrl
add
mulb
push
inc
notb
addr16
mov
dec
aad
nop
outsl
aad
ja
mov
mov
aad
scas
shlb
xchg
sbb
rcll
in
stos
shr
outsb
xor
and
push
xchg
pusha
cld
sbb
pop
sahf
aas
loope
jbe
pusha
and
mov
cmpsb
les
ret
cmp
movsl
cmp
aaa
fcmovb
shl
dec
xor
cmp
jmp
repnz
mov
mov
xchg
ja
cld
repz
pusha
sub
jmp
xchg
in
inc
call
scas
sbb
adc
test
adc
adc
pop
pop
into
std
shl
dec
and
lret
dec
cmp
pushf
cmc
adc
sub
loope
lret
lods
shlb
aad
add
xor
dec
popf
mov
jbe
pop
insb
xchg
rolb
sbb
push
movsl
mov
mov
jecxz
and
iret
pop
add
jbe
pop
push
cltd
add
dec
in
sbb
xor
les
in
fisubs
pop
sub
shll
loop
mov
xchg
inc
popf
mov
daa
test
ficoml
jno
aas
add
mov
shl
mov
outsl
scas
adcb
cli
cmp
xor
enter
cmp
mov
dec
fsubr
xlat
ss
hlt
push
add
lcall
push
cmpsb
xchg
out
es
pop
popa
outsl
sub
pop
fsubr
movb
and
gs
add
int3
hlt
jae
push
or
cmp
mov
mov
xor
cmc
out
sub
sbb
mov
pop
out
inc
jle
inc
push
cmp
negl
or
mov
ret
pop
add
mov
scas
sahf
outsl
loop
pop
pop
xchg
add
push
pop
in
inc
sub
nop
xor
jo
adcl
pop
imul
mov
mov
fisubrl
or
xor
push
aas
loopne
in
sbb
es
cld
inc
jae
aas
outsb
mov
mov
popf
scas
fistpl
xchg
loope
or
pop
cmpsb
cwtl
es
mov
rclb
testb
inc
fsubp
xchg
in
lds
cmpsb
cmp
es
cltd
fucom
mov
fcmovnu
add
pusha
jge
jmp
in
imulb
xor
xor
jl
mov
mov
lods
inc
into
fists
adc
inc
call
jae
lods
xchg
jb
sbb
bound
mov
cld
hlt
fldenv
ret
sbb
arpl
cmp
pop
mov
insb
and
imul
or
ja
push
inc
psrad
int
in
or
pop
mov
push
leave
mov
jmp
cmp
and
sbb
mov
sbb
or
adc
xor
xlat
jl
fs
scas
das
subl
sub
or
daa
mov
dec
clc
nop
daa
ljmp
fsubrs
jmp
mov
sbb
adc
jge
faddl
addr16
fists
sbb
fnstenv
jno
jnp
mov
inc
xchg
outsl
cld
cltd
jg
inc
or
jge
call
dec
mov
sub
aas
mov
push
ljmp
xchg
xor
mov
or
out
in
jne
adc
das
into
outsb
inc
inc
sbb
xor
pop
in
mov
mov
imul
lds
jg
lods
mov
outsb
fnsave
daa
incb
cmpsl
inc
cpuid
xchg
add
inc
aaa
lea
jmp
cmp
mov
cmpsl
inc
push
adc
inc
lahf
in
arpl
lcall
push
ljmp
daa
push
in
daa
lock
ja
cli
jbe
mov
push
pushf
cmp
loop
pop
hlt
or
loopne
pop
jmp
mov
ret
lea
sbb
jg
aaa
jbe
mov
adc
testl
iret
rcrl
imul
sti
xchg
cmp
sti
in
pop
pop
pop
in
rcrl
insb
jge
cmp
cmpsb
das
sbb
or
lods
cmp
push
sarl
mov
xchg
pop
xor
cmp
sub
mov
enterw
arpl
fdivl
sahf
mov
add
daa
push
push
mov
js
xchg
in
xchg
mov
call
or
dec
je
scas
ja
sub
adc
and
cmp
cmp
inc
mov
push
lods
movsb
pop
loop
lea
lods
jmp
aaa
fidivl
adc
das
sbb
inc
es
add
mov
pop
cmpsb
std
mov
mov
adc
push
sub
adc
add
pop
sub
out
sahf
xchg
fnstcw
inc
lcall
rcll
les
and
sbb
sub
pop
or
lcall
mov
mov
xchg
rcrl
dec
iret
dec
fdivl
add
clc
mov
add
jl
test
fwait
lods
push
pop
cmpsb
push
je
pop
xchg
sub
clc
dec
pop
ja
repnz
dec
adc
in
and
sti
cmp
lcall
or
inc
pop
and
or
out
push
jb
seta
pop
xchg
sub
mov
xchg
ljmp
push
xor
cmc
data16
daa
lret
jns
scas
rcrb
mov
cmp
data16
adc
xchg
adc
mov
dec
in
dec
xchg
aaa
outsl
mov
roll
ds
mov
dec
dec
movsl
push
fnstenv
sub
dec
insl
int
mov
push
cmp
cwtl
in
mov
cmp
xchg
cmc
sbb
test
jbe
movsb
inc
lea
push
and
sbb
int
icebp
push
insl
ss
xchg
inc
xchg
outsl
mov
sub
and
dec
cld
inc
daa
arpl
and
aad
test
inc
mov
in
inc
push
push
mov
xor
mov
mov
push
stc
push
in
cmp
mov
jge
nop
mov
out
pop
pusha
and
aaa
mov
cli
mov
add
in
xchg
sahf
ret
xchg
icebp
jno
xor
adc
lcall
in
stos
cwtl
add
enter
pop
lahf
lea
push
mov
call
ds
jae
nop
movsl
mov
mov
sbb
mov
or
rcl
in
fwait
add
incb
and
nop
cs
xchg
movsl
in
clc
repnz
pop
orb
test
jecxz
das
pop
gs
repnz
push
add
repnz
movsl
les
and
lods
xchg
pop
call
sbb
lret
pushf
pushf
std
into
mov
enter
andl
hlt
hlt
pop
scas
sub
outsb
adc
mov
adc
pop
or
jmp
sbb
cs
jae
xlat
mov
sbb
jge
pop
das
js
add
int
mov
in
in
xchg
mov
les
xchg
stc
or
pop
sbbb
sub
mov
dec
push
aad
mov
add
lods
dec
and
inc
mov
and
xchg
in
std
ja
xchg
sti
fisttps
or
mov
into
ja
nop
xor
popf
ss
aad
push
push
mov
mov
std
and
jl
xor
xchg
test
das
sbb
sub
int
cmp
clc
scas
fimuls
pop
addr16
sbb
mov
xor
test
push
ja
fs
mov
mov
popf
or
std
xchg
je
rcrl
test
pop
mov
idivb
adc
and
jp
jmp
add
imul
rcrl
jg
jae
push
sbb
sbb
cmp
jp
aam
stos
push
pop
movsl
insb
add
push
cmp
inc
mov
xlat
lock
or
xor
sbb
mov
ds
push
je
movsl
mov
push
loop
pop
jnp
sub
cmp
mov
adc
fwait
xchg
mov
jmp
mov
mov
mov
jmp
loope
push
roll
sbb
aam
pop
mov
pusha
mov
xchg
mov
jae
fwait
pop
repnz
lahf
jg
cld
out
mov
push
fiaddl
or
div
addr16
and
cli
movsl
gs
xor
xchg
int3
in
push
mov
mov
xor
push
bswap
int
jb
pop
cltd
iret
pop
ljmp
jmp
mov
std
or
jg
mov
repz
in
mov
inc
mov
and
xor
jb
dec
sub
sub
xchg
mov
or
dec
cmp
lret
xlat
cli
out
lods
daa
ficoml
stos
adc
nop
daa
sub
sbb
in
fidivl
aas
stc
stos
sbb
test
sbb
filds
lea
xchg
sarl
mov
gs
aas
cwtl
and
pop
jmp
dec
xor
test
xchg
arpl
cs
movsl
lahf
sbb
xchg
push
or
mov
fldcw
loopne
test
cld
jle
ja
and
xor
fmulp
lahf
lods
sahf
int3
int
ja
pop
addb
aad
xchg
jle
jno
lods
enter
adc
aaa
or
out
mov
push
mov
ret
xchg
aas
mov
xchg
sbb
out
push
ja
ficoml
enter
in
out
jle
and
and
pop
in
lahf
cmp
push
rcl
lahf
jno
inc
cli
sahf
es
xor
fildll
push
sahf
cld
mov
mov
adc
fs
push
sbb
or
or
cmp
in
ljmp
jle
cmpsl
cmpsb
sub
cmp
add
notb
inc
lods
shl
pop
inc
stos
faddl
mov
lret
push
fwait
dec
sbb
sti
push
jb
xor
mov
addr16
data16
xor
rorl
push
sub
pop
jbe
stos
cmp
in
insl
popa
dec
pop
ja
pop
xchg
leave
or
test
jge
pop
stc
xchg
pop
jb
push
mov
movsb
aaa
in
popf
push
pusha
fistpl
pop
cmp
jg
and
adc
lret
into
mov
xor
das
repnz
mov
ret
cmp
adc
adc
sbbl
daa
outsl
xchg
scas
loope
and
xchg
js
enter
leave
jecxz
stc
shrb
int
lods
cmp
push
cmp
xchg
xor
test
aaa
fisubrs
in
dec
js
jge
pop
scas
repz
int3
lret
jmp
das
xor
push
jo
push
jo
mov
xchg
inc
and
movsl
ds
movsb
shl
idivb
daa
add
mov
add
add
jnp
xor
loope
das
popf
int3
xor
push
inc
mov
dec
push
pop
dec
or
or
into
cmpsb
das
or
add
sub
sarl
jnp
in
or
mov
add
ljmp
imul
hlt
cld
dec
or
lahf
push
jmp
scas
jno
shlb
cmp
mov
loope
mov
cs
dec
xchg
jle
sbb
inc
aad
add
mov
pop
xor
mov
in
scas
jle
arpl
and
push
mov
xchg
call
repnz
push
pop
scas
sbb
xor
fistl
pop
fcoms
sbbl
ss
decl
mov
adc
dec
or
imul
in
in
shr
cmp
shlb
jl
sahf
test
lea
cwtl
mov
ficomps
loope
xchg
shrb
fcomip
js
out
ret
xchg
and
mov
decl
imul
insb
add
add
jge
scas
jg
loopne
adc
pop
insb
clc
sbb
out
test
or
out
aam
jle
cmpsb
cs
sbb
aaa
maxps
arpl
lds
jnp
loop
nopl
lea
push
in
xorl
insb
not
or
and
fldcw
mov
sysenter
xchg
xchg
add
jne
xchg
inc
pop
and
push
ljmp
aam
dec
es
jno
arpl
mov
mov
cmp
pop
and
push
xor
js
dec
mov
jb
mov
pop
loop
adc
or
and
imul
nop
addr16
data16
aas
inc
inc
xchg
inc
sub
test
mov
xchg
mov
lcall
mov
pop
xchg
sub
scas
jae
lret
jg
stc
pop
in
add
xor
pusha
and
mov
mov
stos
lds
fwait
call
ds
jbe
stos
xchg
fcmovb
xlat
or
inc
xchg
mov
les
cmpsl
fwait
push
mov
xchg
aas
das
test
mov
and
or
xor
outsl
mov
inc
xchg
xor
push
xor
mov
cli
fidivrl
jno
aas
cmp
mov
cmp
or
jns
push
ret
lock
and
data16
sahf
pusha
adc
jns
gs
scas
xchg
xor
pop
cld
xor
and
pop
test
aad
sbb
into
and
add
test
das
add
sub
flds
pusha
adc
mov
sub
ja
add
cld
mov
push
jecxz
pop
sarl
xor
xchg
shrl
add
clc
pop
cmp
test
jb
dec
add
imul
ret
sub
add
ret
enter
nop
imul
mov
push
dec
push
mov
dec
outsb
inc
fimull
bound
lds
cmc
jg
adc
ret
add
test
cmp
lea
fsubrs
cmp
cmp
scas
stos
stos
inc
and
lds
inc
xor
xor
jp
outsb
fimull
add
aaa
call
push
push
js
push
mov
xchg
dec
aas
cmp
jmp
loop
sti
fwait
ja
int
inc
cwtl
and
iret
cmpsb
mov
sub
xchg
pop
lock
jmp
fists
sarl
jbe
movb
cmp
sbb
aas
out
push
sbb
shll
dec
nop
stc
push
dec
cmp
pop
popf
inc
xor
test
iret
into
shlb
xchg
cmpsb
int3
arpl
jns
add
dec
push
add
fwait
or
cmpsb
cmp
pushf
pop
lock
js
out
aas
rcll
icebp
ret
arpl
subb
dec
sub
outsl
sti
and
std
xchg
std
or
pop
sbb
mov
fwait
xor
sbb
dec
ja
fists
and
cmpsb
adc
inc
sbb
gs
sub
sbb
dec
pop
and
fidivl
iret
lret
xor
push
out
pop
pop
add
add
jne
push
movsl
popa
daa
pusha
fiaddl
iret
push
fdivrs
sbb
mov
dec
into
xlat
insl
hlt
ret
mov
sti
scas
push
adc
sbb
pop
jnp
shll
lea
or
xor
cld
out
test
sbb
xchg
rorl
leave
es
xlat
psubq
std
mov
inc
xor
sahf
and
lods
mov
push
pop
ss
gs
xor
stos
adc
nop
lret
test
les
jmp
in
gs
xor
jg
cld
into
loop
addr16
sbb
or
xchg
lds
imul
mov
mov
cmp
jle
pop
pop
mov
into
addr16
shlb
lods
hlt
fnop
inc
add
inc
sub
xor
mov
mov
cmpb
cmp
xchg
add
dec
pop
outsl
jbe
lahf
idivl
stos
and
je
sub
push
xchg
adcb
add
inc
mov
jae
push
fists
mov
in
inc
push
jle
loope
fistps
mov
pop
sub
pop
jns
lahf
push
jg
aam
inc
out
sti
adc
add
mov
sbb
sbb
xchg
sbb
cmpsb
jbe
cmp
add
andl
arpl
inc
mov
popf
cmpsb
mov
dec
fildl
and
xor
divb
sub
data16
mov
dec
out
ds
cli
pop
xor
in
jp
notl
dec
sarl
outsl
jnp
ja
rcrl
push
pop
ret
xor
call
xchg
add
mov
loop
pop
push
ljmp
addb
pop
addl
aaa
mov
pusha
cmc
sbb
test
fsubrl
leave
shlb
iret
arpl
addr16
push
idivb
lods
and
jge
jg
fstpl
pushf
lods
lods
pop
lods
fsubl
ja
ficompl
adc
pop
mov
push
adc
inc
xor
jmp
std
xlat
fmulp
xchg
mov
mov
pop
inc
insb
fistps
mov
push
fimuls
mov
shrb
push
sub
add
and
jae
shlb
fisttpll
lahf
push
in
call
cmpb
sbb
push
or
mov
mov
push
rcrb
jae
jl
stc
xchg
adc
sub
jns
jae
push
adc
fistpl
dec
dec
outsl
ficompl
sbb
stos
xchg
push
adc
loop
testb
lods
imul
xchg
or
scas
dec
pushf
inc
sbb
outsl
xor
movsl
xchg
loopne
sti
adc
inc
push
loope
adc
shr
push
jo
adc
scas
es
fs
sub
leave
cmp
push
pop
test
xchg
or
jmp
add
dec
fldcw
or
enter
mov
sti
out
push
pushl
test
cs
fiadds
xor
std
xor
leave
mov
adc
or
adc
cmp
arpl
jno
fstpt
leave
fnstcw
je
mov
mov
jno
mov
icebp
mov
sbb
xor
xor
pop
xchg
jmp
int
insb
cs
pop
push
jb
jo
loopne
dec
iret
add
ja
in
packssdw
pop
xchg
sub
mov
scas
ret
mov
insl
jns
adc
jae
jge
loope
lds
ret
out
add
dec
push
mov
jne
xor
mov
out
in
jge
pop
ja
in
sbb
pop
pop
nopl
cmp
mov
xor
sub
int
loopne
popw
or
lea
fnstcw
bound
cmpsl
jo
cmc
and
mov
jb
or
xor
xchg
adc
sbb
jp
movsl
jg
xchg
movl
jo
test
xlat
test
dec
push
out
inc
out
pop
cmp
outsl
mov
xchg
and
push
lea
mov
xor
pop
and
mov
leave
xlat
ret
add
aam
push
les
in
mov
aad
rolb
cli
enter
jg
sub
sbb
ret
shl
enter
cmp
aaa
mov
cmp
push
sub
cmpsb
mov
jmp
and
sahf
push
cwtl
test
inc
out
xchg
push
insb
xchg
std
into
imull
lret
jle
push
daa
push
insl
aad
imul
jb
mov
sbb
fucomip
lcall
aam
test
cmc
test
out
daa
fdivrs
decl
sub
test
mov
inc
imul
cmpsb
pusha
bswap
pop
adc
jl
icebp
outsb
lahf
ds
jle
insb
lock
pop
out
xchg
xlat
add
pusha
icebp
mov
or
loopne
sub
stos
mov
dec
lods
aaa
repnz
xabort
insl
inc
xchg
sbb
adc
mov
bound
outsl
push
xor
ds
jne
mov
adc
ds
ret
enter
les
stos
xor
dec
mov
int3
inc
inc
adc
mov
repnz
or
ret
mov
test
dec
and
inc
cs
mov
in
arpl
sbb
jecxz
mov
mov
in
push
push
out
into
add
inc
and
xchg
es
lods
fsub
sbb
lds
cmpsb
repnz
and
cmp
inc
notb
enter
nop
sbb
ss
test
jecxz
mov
rorb
rcrl
sub
flds
rcl
sub
outsl
cmp
pop
lods
lea
push
mov
sbb
icebp
pop
jmp
push
fxch
rcll
and
jg
push
rcr
iret
sbb
jl
mov
xchg
aas
cld
enter
sbb
push
je
mov
test
cmpsb
add
nop
or
aaa
nop
outsl
push
ret
aad
addr16
cwtl
into
pop
out
add
jbe
loopne
stos
xchg
jl
in
add
push
push
mov
push
andl
mov
bnd
or
xchg
cltd
xor
sbb
into
push
dec
pushf
in
aad
shrd
lods
jg
clc
loope
push
lcall
xchg
and
dec
loopne
inc
xchg
jecxz
in
mov
or
shr
jne
orl
ds
jp
cmp
dec
ja
sub
jo
jno
inc
mov
js
cmp
into
dec
loopne
pop
pop
ljmp
fwait
clc
jb
bound
adc
push
sub
cmpsl
mov
ret
jne
test
dec
mov
js
push
imul
shll
hlt
aaa
or
xchg
enter
pop
loop
movsl
gs
inc
dec
in
pop
aam
mov
lock
push
xor
ds
mov
cltd
aas
xchg
loope
into
ss
dec
insb
test
mov
push
jnp
test
sbb
mov
push
cmpsb
cmp
pop
outsl
stos
mull
mov
cmpsb
fcomps
rclb
cmp
pop
mov
pop
je
imul
out
mov
push
adc
fidivl
xchg
dec
gs
out
sub
aas
out
sbbl
mov
or
push
cmpb
movsl
mov
xor
pop
xorl
daa
rorl
in
xor
sub
iret
pop
shlb
adcb
notl
pop
jae
je
jecxz
ds
xor
inc
cltd
mov
outsl
push
out
xor
loope
jg
idivl
addb
pusha
adc
xchg
sbb
cmpsl
out
iret
add
jne
mov
js
inc
pop
dec
inc
jb
out
sub
sbb
pop
into
fs
pushl
jb
push
jo
lock
mov
xor
dec
xor
gs
sub
jae
cmp
inc
push
mov
dec
mov
es
sub
cmp
cmp
sub
dec
jae
add
mov
xchg
mov
jl
je
fwait
jns
clc
mov
pop
xchg
daa
xchg
xor
sbb
fimuls
cmc
repz
xchg
pop
enter
mov
clc
jae
nop
movsb
cmc
pop
mov
jnp
fstl
ret
test
mov
or
int3
femms
test
add
xor
add
pop
sub
int
pop
sbb
sbb
pop
cmp
and
jae
add
int
sbb
push
sbb
or
movb
dec
add
fmuls
cld
cmc
ds
add
fdiv
xor
jp
pop
out
daa
sti
movhlps
daa
lcall
sti
gs
lock
lret
and
filds
out
aad
aaa
rorl
xor
sahf
inc
mov
lea
outsl
push
icebp
jo
xor
or
out
mov
outsb
jp
pop
or
cmpsb
add
sub
dec
les
shll
xor
pop
inc
push
insl
adc
pop
pop
out
jle
int3
scas
pusha
jns
gs
xchg
push
and
insb
cmp
aam
inc
shl
xor
pop
out
mov
or
adc
aam
leave
jecxz
mov
jmp
push
mov
inc
cwtl
mov
pusha
xchg
cmp
fsubrl
iret
cmp
cli
push
fimull
clc
bound
into
mov
shll
xchg
and
dec
jp
inc
mov
icebp
inc
test
adc
cmp
imul
push
and
in
or
push
mov
xchg
daa
or
push
in
test
adc
inc
lods
in
or
xchg
in
push
filds
enter
popa
push
push
out
lcall
lret
icebp
jmp
inc
jmp
aas
pop
add
icebp
xor
test
sub
jb
les
mov
data16
xchg
shll
jge
push
mov
into
aam
add
mov
sti
mov
sbb
faddl
mov
mov
cmp
mov
sub
enter
pop
push
in
cld
rclb
leave
add
push
pop
or
and
pushf
adc
stos
xor
dec
adc
push
outsb
in
aas
jnp
mov
sbb
dec
mov
gs
aas
fsts
out
imul
rcll
and
in
dec
repz
jmp
cmp
aas
xchg
ljmp
ljmp
mov
iret
imul
push
mov
outsl
mov
fwait
cmpsl
or
aaa
int
lods
in
js
pop
movsb
ja
mov
decb
pop
cmp
pop
jle
mov
movsb
and
arpl
lcall
and
jp
enter
and
stc
mov
repnz
les
jmp
mov
ja
mov
imul
inc
lock
mov
fsubrs
out
sub
fstpl
pop
imul
pop
push
dec
inc
lods
mov
fsubs
dec
inc
cmp
xor
xchg
roll
mov
pop
cmp
jg
add
inc
dec
mov
xlat
mov
push
sahf
sub
adc
ficomps
lds
and
movsl
push
les
or
mov
scas
jmp
or
test
or
out
outsb
ja
shrb
std
push
mov
aad
mov
lock
ljmp
xor
hlt
xor
fimull
lcall
xchg
sti
or
outsb
jp
xchg
std
add
xor
aas
repnz
in
mov
sub
shl
ss
gs
dec
outsb
and
mov
loop
jl
xchg
sub
es
xor
jb
aam
orb
loop
add
inc
fucomp
cwtl
inc
loopne
idivl
out
sub
xchg
mov
jne
leave
or
cs
add
mov
rorb
xchg
aad
push
push
movlps
jae
jo
pop
sahf
cmpb
sbb
pop
lret
ret
in
insb
out
dec
fs
sbb
and
das
jno
mov
pop
sub
mov
popf
mov
xchg
mov
inc
data16
test
test
lret
push
stos
bound
cwtl
sbb
or
inc
inc
xchg
arpl
into
mov
adc
cli
push
add
inc
ret
push
xchg
dec
sbb
sub
pop
lcall
sbb
mov
in
mov
adc
popa
call
dec
aam
push
hlt
mov
mov
pusha
and
jbe
iret
cld
xlat
std
in
xor
mov
enter
push
stos
cmp
push
dec
fldcw
lods
cmp
test
lcall
jne
ret
jge
xlat
cld
xchg
or
jl
scas
ret
xchg
dec
mov
push
cmc
adc
pushf
ds
sbb
xor
imul
les
and
scas
and
mov
cmp
jne
pop
inc
mov
lcall
and
in
mov
lret
cmpsb
push
mov
scas
inc
fstpl
jo
mov
imul
xor
cli
fbld
push
in
cs
aaa
xor
out
push
test
and
inc
fildl
inc
and
mov
jecxz
dec
ljmp
mov
ja
add
aaa
pop
test
inc
daa
xor
paddsw
sbb
push
xchg
and
pop
pop
add
mov
mov
insb
dec
rol
aas
cmp
pop
pop
popa
jns
cmp
mov
push
icebp
xor
jb
fistl
icebp
jmp
fcoms
in
or
out
xorb
test
cwtl
fstpl
inc
push
sti
shrb
shl
sub
cmp
cmp
push
outsl
jns
sbb
mov
mov
mov
adc
mov
ds
mov
sub
cld
xchg
xchg
pop
jno
ljmp
fdivs
push
fdivr
pop
lea
addr16
fpatan
shl
xchg
mov
mov
xor
out
and
or
and
out
ja
mov
jns
nop
jo
mov
jp
xor
pushf
or
lret
add
call
mov
add
xchg
add
ret
das
sbbb
dec
or
mov
popf
xor
fstpl
ffree
mov
in
in
ja
stos
sahf
pusha
sub
mov
jecxz
jbe
adc
jae
push
imul
mov
mov
lds
inc
push
and
mov
or
xor
fs
mov
add
lret
mov
cltd
stc
or
mov
sbb
dec
jb
cmp
mov
cmpl
sbbb
mov
es
push
into
or
push
mov
lcall
push
jmp
xchg
push
inc
les
mov
sub
mov
jnp
mov
xor
mov
mov
fwait
pop
and
cltd
lods
js,pt
scas
fcom
add
cltd
movsb
arpl
ja
loopne
lret
icebp
ja
test
sti
gs
inc
mov
add
mov
lds
fnstenv
xchg
mov
outsb
shll
arpl
es
insb
add
clc
into
gs
test
jns
test
sbb
decb
cmp
push
or
fistpll
and
ljmp
loop
mov
imul
aas
sti
adc
inc
nop
outsb
add
xlat
enter
mov
pop
subl
movsb
ret
out
cmc
mov
push
jge
jmp
int
cmpsb
inc
dec
xchg
mov
xchg
insb
int3
push
jle
xor
sbb
cmp
in
inc
mov
fcomi
enter
dec
inc
jno
popa
pop
iret
callw
js
or
cli
mov
test
aam
stos
jmp
test
jne
jns
push
adc
push
int3
and
insl
jb
xlat
push
stc
insb
clc
dec
fstp
mov
loop
dec
fstpl
ret
and
data16
and
imul
add
in
mov
dec
add
xor
dec
fnstcw
cs
and
inc
ret
pop
pop
cmp
push
mov
mov
test
shr
and
sti
xchg
and
xchg
sbb
addb
mov
push
es
out
mov
aam
inc
icebp
and
mov
cmpsl
out
or
leave
arpl
cmc
and
mov
out
mov
rclb
jl
enter
adcl
mov
inc
and
lea
inc
cltd
std
imul
lea
aas
out
pop
fsincos
xchg
fdivl
mov
xchg
add
lret
xlat
pop
jb
jnp
jns
jbe
inc
out
out
insb
mov
aam
and
loop
inc
imul
in
das
scas
cmpsb
and
mov
xchg
jecxz
movsl
xor
into
mov
push
sub
xchg
dec
js
test
gs
xchg
mull
fwait
sbb
fbstp
icebp
dec
jbe
cmc
ret
jecxz
lods
add
add
sbb
out
notl
mov
lock
sub
pop
aam
sub
xchg
sub
sarb
lock
call
xchg
into
std
add
mov
push
out
pop
shll
mov
add
cli
mov
add
mov
push
les
jle
dec
xchg
insb
out
stos
push
sarl
push
inc
stos
cmc
ds
lock
fmuls
cmp
inc
push
jmp
test
inc
leave
mov
repz
mov
and
outsb
xchg
jp
fidivs
xchg
cmp
ret
popf
das
sub
or
fnstenv
pop
fucomi
and
xchg
sbb
push
vzeroupper
imull
sub
pushf
adcl
jbe
sahf
pop
loop
addb
inc
sbb
dec
leave
mov
inc
fwait
dec
in
sahf
cmpsl
mov
lds
fistpll
inc
scas
jmp
or
popf
xor
adcl
mov
adc
or
adc
aam
movsb
cmp
mull
or
js
pop
pop
inc
pop
sahf
je
push
in
push
and
or
push
in
jns
xchg
aas
fcomps
inc
sahf
pop
lea
movsb
xor
mov
cmp
lcall
jno
popa
jns
jle
mov
mov
sub
adc
in
out
lret
sub
mov
icebp
cmp
dec
pop
xchg
cmp
stos
mov
mov
insb
add
inc
fidivs
inc
mov
mov
leave
stos
sbb
mov
jo
movsb
cmp
jmp
movsb
cltd
je
jmp
cltd
cmp
sbb
into
test
enter
stc
adc
movsl
mov
xor
andb
fmul
push
xchg
stc
popf
scas
aaa
push
add
adc
jg
jno
aaa
mov
repnz
jle
and
sahf
mov
out
dec
cmp
pop
insl
xor
ret
shl
imul
inc
outsb
sar
sub
push
pop
mov
fwait
bound
xor
js
icebp
cmp
mov
adc
shrb
push
sbb
dec
cwtl
outsl
xchg
ret
data16
mov
test
ds
jne
sbb
scas
test
xor
mov
push
cltd
mov
sbb
add
sub
nop
or
push
xor
mov
mov
call
ftst
das
sub
sahf
xor
xchg
jp
or
add
shrb
ljmp
push
jge
sbbl
cmc
int
and
mov
pop
sarb
ss
cmp
mov
add
rcr
ret
mov
stc
pop
popf
fsubs
push
jo
popf
cmpsl
cmp
leave
fisttps
push
jmp
outsl
add
cs
dec
adc
mov
jl
lods
stos
mov
jo
inc
shll
sub
xchg
pop
mov
xchg
mov
xchg
sub
sub
pop
out
xor
cld
lock
adc
inc
cmp
ja
fadd
sbb
mov
xor
pushf
lahf
jns
cmp
lahf
jp
inc
fs
push
mov
pushf
xchg
outsb
mov
pop
cmc
mov
sub
fldcw
inc
testl
jp
push
jo
mov
inc
push
push
mov
inc
lods
jg
fldl2t
xlat
xorb
mov
push
lock
jcxz
ret
pop
outsb
lods
adc
loopne
fcompl
mov
stc
jl
cmpsl
lods
sbb
adc
xlat
jb
jae
xchg
sub
cmp
enter
sub
push
mov
stc
push
adc
mov
xor
das
es
xchg
mov
or
dec
xchg
cmp
aaa
mov
enter
addb
mov
xor
xchg
sub
loope
insb
pop
mov
mov
into
and
cmpl
sbb
xchg
jl
xchg
and
cmp
and
xchg
mov
rclb
cmp
add
push
push
stos
mov
xchg
nop
lock
xor
pop
dec
in
xchg
sub
cmp
popa
mov
mov
inc
adc
dec
inc
mov
sbbl
fs
leave
fisubs
int
scas
std
jo
enter
outsb
mov
andb
push
repz
dec
inc
mov
jb
push
loope
inc
lea
jbe
daa
cli
lea
gs
ret
std
xchg
in
aaa
out
add
xchg
dec
idivb
dec
arpl
xor
sahf
pop
cwtl
fimull
test
mov
insb
xor
inc
and
push
loopne
mov
cltd
sub
shll
pop
jmp
push
push
lods
pop
xchg
inc
dec
add
loope
incl
out
and
jae
jl
mov
xlat
scas
outsl
mov
popa
enter
nop
ds
jmp
dec
iret
jmp
adc
jae
push
inc
sub
and
pop
pop
cmp
jae
fcoms
xchg
xchg
push
inc
fsub
mov
data16
aaa
or
xor
mov
loopne
jnp
insb
in
enter
pusha
adc
adc
icebp
js
mov
mov
adc
dec
cmpsl
xchg
jmp
dec
jp
arpl
or
in
ja
mov
mov
fistpl
cli
mov
movsl
mov
push
ja
xchg
xchg
pop
add
pop
cmp
loope
inc
loop
aam
or
fcoml
mov
stos
jb
pop
cmp
mov
lahf
jns
mov
add
jno
std
jg
xchg
iret
data16
pop
aas
adc
sbb
fidivs
aam
and
dec
cld
test
cmp
cmp
dec
sbb
sbb
xor
lea
pop
push
mov
cmpsb
hlt
pop
xor
xchg
adc
and
daa
mov
fcomp
jmp
push
lods
xor
mov
and
push
arpl
sahf
or
jb
shrb
xchg
jmp
ret
out
in
mov
ds
int
cmp
outsl
aas
aad
sub
outsl
fld
jecxz
jnp
or
sub
fiaddl
loop
andb
push
lea
das
xorl
enter
inc
iret
shrl
lock
cmpsb
sub
mov
int3
inc
sahf
jmp
cmp
pop
jecxz
lods
jbe
stc
mov
xchg
stc
inc
les
xor
push
push
incl
subb
sub
cltd
repnz
popa
ret
dec
cmpsb
divl
mov
xchg
sbb
lahf
inc
int3
cmpsb
lcall
or
test
xchg
adc
daa
push
xor
cmp
test
adc
jp
sbb
mov
les
mov
jecxz
test
or
lods
inc
sub
push
enter
sbb
xor
lock
xor
ja
cltd
insb
cmp
push
adc
jae
jbe
daa
push
negb
out
jge
dec
in
pop
dec
pop
out
mov
enter
xor
pop
ja
popf
xor
mov
mov
add
repnz
lret
sub
dec
mov
call
push
iret
outsl
sub
insl
push
test
into
cmpsb
arpl
jg
dec
popf
dec
je
xor
mov
lock
inc
and
add
mov
int3
and
iret
insl
fmul
gs
cltd
sbb
outsl
out
or
push
mov
sbb
xor
fincstp
adc
jp
mov
push
mov
xchg
and
sbbb
icebp
shrl
pop
aas
mov
sbb
or
push
cmp
inc
sahf
mov
scas
iret
mov
ss
addr16
je
int
xchg
lret
pop
adc
data16
jp
pop
pop
sbb
jae
into
mov
add
jae
cmp
arpl
loope
jnp
jp
adc
mov
popa
cmp
cmpsb
mov
push
add
jge
inc
xor
pop
and
pop
repz
xchg
data16
sub
mov
imul
jb
movsl
insl
leave
imul
cmp
into
fsubl
movsb
das
mov
sahf
repz
jecxz
xor
sub
stos
ret
mov
subb
sub
pop
fwait
leave
mov
inc
push
mov
sbbl
adc
xor
pop
pop
mov
out
out
call
test
rolb
mov
clc
cmc
xor
rclb
and
add
out
push
and
push
into
stc
stc
xor
pop
movb
sbbb
scas
insl
sbb
push
insl
pushf
mov
fdivr
jge
push
in
adc
pop
movsl
daa
scas
fistpl
int3
pusha
idiv
mulb
mov
push
stc
jl
jmp
das
dec
sbb
js
adc
daa
popa
xor
je
popa
sub
mov
mov
dec
test
addr16
jns
testb
ret
and
or
dec
inc
lods
mov
repz
sub
mov
enterw
mov
fmul
fmuls
inc
adc
insl
mov
test
sbb
scas
push
stos
push
cmp
je
enter
lcall
adc
imull
sub
lret
bound
dec
jmp
sbb
imull
xchg
negb
xchg
dec
xorl
data16
mov
cmp
sub
dec
add
push
xchg
jnp
popa
mov
mov
jnp
mov
dec
shlb
stc
xor
cmp
ja
dec
bound
mov
insl
jge
dec
pop
ljmp
jb
jbe
mov
loope
mov
fmulp
dec
dec
jb
fnstenv
xchg
dec
iret
xlat
sbb
jle
jbe
xor
cmp
jmp
sahf
movsl
shr
jmp
jns
sti
mov
out
into
xchg
jmp
lret
pop
icebp
shll
push
stos
push
xor
es
sub
mov
jnp
popf
stc
lea
push
xor
lea
or
lret
sti
sbb
mov
jge
inc
je
mov
test
and
mov
fsubs
mov
jmp
lock
jmp
movsb
insl
pop
adc
cmc
pop
push
mov
xchg
add
xor
adc
scas
imulb
add
pop
imul
insl
mov
iret
bound
mov
mov
mov
jae
xchg
mov
dec
mov
sbb
stc
push
cmp
sbb
pop
icebp
mov
and
pop
stos
pop
ret
pop
scas
dec
mov
dec
in
clc
push
fadds
ret
lock
faddl
fs
push
inc
js
and
gs
and
xchg
pop
imull
addr16
lods
fwait
mov
aas
xchg
stos
or
mov
imul
lods
outsb
push
or
mov
xchg
imul
mov
xchg
ret
insb
push
sub
push
push
or
push
lods
adcb
mov
and
es
adc
imul
aad
jnp
xor
pop
imul
faddl
cmp
and
mov
lahf
popa
xchg
sbb
insb
shlb
mov
mov
mov
bound
or
jae
pushf
cli
out
outsb
add
push
fnstsw
or
les
sbb
nop
mov
out
mov
xlat
and
pop
fdivr
xchg
push
mov
int
jecxz
jle
inc
stos
xchg
or
subb
addr16
push
mov
inc
mov
mov
addb
flds
inc
inc
dec
push
xchg
sbbl
loope
pop
pusha
loope
mov
or
out
rep
stc
mov
cmpsb
lret
shlb
bound
bound
jle
and
imul
idivl
cltd
mov
out
sbb
push
pop
adc
and
inc
cmp
mov
andb
push
xor
mov
cld
sub
push
adc
push
push
fnsave
jne
push
loope
xchg
loope
clc
push
dec
dec
lea
push
cmpsb
lahf
xchg
cmp
inc
in
sbb
mov
shr
cmp
mov
fcoms
xsave
jmp
inc
mov
sahf
pop
xchg
enter
xchg
lods
lret
cmp
jp
pop
push
cltd
ds
add
lret
adc
cmp
xchg
pop
push
sbb
jae
sahf
pop
lret
cli
and
pop
jg
push
lcall
push
imul
fisubrs
cmc
fistps
xchg
call
es
mov
push
sub
jo
movsb
out
aad
in
test
mov
leave
in
not
mov
xchg
rcll
aam
sub
test
and
repnz
push
push
or
xchg
sbb
aaa
jecxz
test
popl
mov
mov
cmp
pop
jne
mov
cmp
mov
push
test
fdivrl
mov
sbb
popf
jno
cmp
xor
push
into
xchg
lds
sub
sahf
xor
testb
jb
lds
ret
jecxz
jmp
dec
push
sub
inc
jns
rolb
sar
xchg
clc
mov
test
cmp
pop
cmp
idivl
sbb
jg
or
jb
outsl
mov
sarb
shrl
push
xchg
sub
sub
push
jae
sahf
sbbl
stos
std
insl
icebp
ss
pusha
mov
sti
xchg
aam
cmc
adc
pop
or
jbe
xchg
clc
jmp
ss
mov
or
rclb
shlb
test
cmpsb
cmp
gs
rcll
or
imul
bound
jle
ret
jnp
loop
movsb
mov
xchg
fiaddl
mov
js
idivb
into
jno
hlt
pop
sahf
lods
lods
shrb
jmp
jg
cmp
das
xor
fcom
cmp
test
ds
cltd
ljmp
mov
push
mov
movsl
inc
rep
and
cld
addr16
ficomps
mov
mov
mov
add
adc
out
inc
loopne
pop
lock
in
fstps
xchg
cmp
cwtl
xchg
mov
cmp
divb
inc
jmp
mov
xor
push
xchg
jmp
dec
pop
js
cmp
mov
fmull
jnp
xor
int3
push
notb
mov
inc
call
test
adc
ja
fldenv
jae
rol
add
inc
sub
mov
mov
fsubrs
test
jno
dec
iret
test
xor
mov
jne
out
sarl
lods
xor
gs
jne
into
aad
xchg
pop
xlat
bound
push
push
out
jp
inc
sub
sbb
sub
cltd
imul
jle
jne
sbb
mov
or
xchg
into
inc
xchg
adc
loopne
rol
add
mov
int3
ss
lods
push
sarl
icebp
dec
repnz
test
mov
aaa
es
rcrl
out
or
aad
sarb
lock
idivb
stos
outsb
out
push
and
mov
add
fidivrl
fiaddl
aas
dec
pusha
gs
jo
mov
push
push
adc
inc
jae
jbe
jae
inc
mov
mov
repnz
fdivrl
bound
or
lcall
loopne
mov
std
leave
xchg
jl
pop
mov
mov
pop
movsb
ja
mov
rcrb
pop
dec
jmp
cld
popa
mov
imul
fwait
arpl
int3
jo
lret
mov
ret
and
mov
daa
xchg
or
xchg
push
dec
dec
ss
and
cltd
jecxz
call
in
mov
push
dec
repnz
loope
and
mov
enter
jno
and
inc
push
std
dec
fs
aam
cltd
jecxz
daa
push
cmpsb
fmuls
ds
in
test
inc
inc
mov
add
or
int3
imul
mov
mov
cmpb
or
hlt
pop
es
data16
in
inc
push
nop
ljmp
repnz
mov
sub
mov
mov
out
mov
sahf
push
loop
jmp
xor
adc
repnz
inc
pusha
jno
imul
jmp
xchg
mov
movsb
xchg
insl
in
cmc
sub
add
shlb
push
fisubl
andb
aam
gs
sub
ficomps
cmp
jle
jo
mov
lods
push
or
aad
jmp
jl
imul
pop
add
scas
shll
jns
lret
daa
jmp
push
jmp
push
sub
and
lret
repz
adcb
sub
shrb
adc
leave
pop
loopne
jg
push
inc
xchg
mov
xor
aad
adc
out
sti
sub
ret
iret
push
lret
xor
jmp
idiv
in
jge
pop
stos
cmc
jle
mov
xchg
pop
push
jae
lea
and
test
idivb
ljmp
out
jae
ljmp
sub
stc
mov
lahf
add
mov
xchg
mov
xor
call
xchg
je
jl
cmp
mov
or
daa
inc
xchg
mov
movsl
push
xchg
mov
dec
iret
jno
fucom
jle
adc
aaa
sbb
mov
xor
lock
dec
std
cmp
test
loopne
aam
insl
scas
pushf
dec
xchg
mov
cli
mov
aaa
mov
lret
or
insb
cvtpi2ps
aas
shl
dec
rcrl
test
mov
test
jl
sbb
mov
shll
jmp
xchg
clc
pop
dec
mov
out
dec
jmp
dec
pop
in
mov
std
xor
xchg
dec
fidivs
or
test
lds
mov
mov
out
scas
call
push
cmpsb
cmp
jg
call
push
stos
xor
jmp
cld
aas
dec
pop
cmpsl
out
xchg
cs
pop
xlat
movsb
outsl
nop
jle
mov
push
and
lods
push
loop,pt
cmpsl
adc
xor
cmp
aam
rorb
stos
iret
xor
js
inc
jmp
insb
and
mov
sbb
sub
repnz
or
stc
inc
mov
xchg
jle
mov
call
pushf
mov
pop
sahf
mov
dec
xchg
enter
iret
mov
scas
and
sbbl
pop
hlt
lahf
push
fidivrl
jmp
lcall
clc
pop
jp
into
sbb
pop
lret
imul
mov
pop
lds
arpl
push
xchg
push
aam
xchg
pushf
xor
push
jno
in
jmp
sbb
xor
xchg
xor
repz
mov
mov
std
nop
cmpb
test
ljmp
sub
mov
pop
outsb
lcall
jg
dec
loopne
mov
sub
sub
or
push
cmpsb
shlb
or
stc
int
cltd
bound
in
add
sub
push
outsb
or
xchg
cmp
arpl
jg
movsl
mov
sub
or
cmpsl
jge
pop
stc
pop
test
pop
in
and
les
in
nop
repnz
ret
adc
ja
or
sarl
divl
mov
pop
aad
cmpsb
mov
or
cmp
push
cmp
dec
and
sub
lret
lock
lret
jne
mov
pop
sub
fisubrs
imul
add
or
daa
push
xorb
sub
xchg
outsb
lahf
clc
dec
push
xor
cltd
imul
mov
dec
lods
push
out
loopne
lock
adc
ret
faddl
xor
sarl
mov
mov
push
add
aam
sbb
xchg
jle
insl
cmc
imul
fidivl
leave
shrl
jbe
mov
cmp
jb
fwait
arpl
lahf
clc
cmp
jno
fidivrs
sbb
jno
and
xchg
ljmp
jge
in
cmc
xchg
jmp
imul
mov
test
sub
mov
mov
stc
xchg
pop
fnstsw
mov
stc
sti
pop
sub
sub
test
mov
loopne
mov
imul
add
mov
cwtl
pop
pop
and
mov
sbb
aas
shlb
std
xchg
cmpsl
pop
pop
dec
push
cmp
dec
nop
adc
les
jle
test
jae
mov
sbb
outsb
mov
repz
arpl
ja
hlt
pop
cmc
lods
adcl
push
fsubrs
test
jecxz
jl
test
stos
inc
scas
das
lds
adc
dec
ljmp
ja
popa
repz
rolb
pop
mov
out
jp
push
sti
or
inc
dec
mov
add
loopne
xor
ud2
lods
divl
imul
inc
hlt
lea
xchg
int
out
jns
push
movsb
in
xchg
push
cmp
js
mov
mov
and
cwtl
std
mov
push
jp
lds
pop
gs
popa
add
test
mov
fnstenv
les
dec
imull
mov
mov
xchg
sbb
mov
xor
dec
popa
jecxz
repz
push
js
subl
mov
push
roll
cld
psadbw
add
arpl
int
sarl
add
nop
sub
jl
mov
mov
int
adc
cmp
test
inc
scas
lret
cld
lcall
leave
dec
mov
stos
in
dec
mov
jne
mov
ret
cmp
scas
inc
jp
into
adc
fdivr
or
dec
lcall
xor
fstpl
mov
xor
jecxz
pop
fadds
push
lock
sbb
push
loopne
outsl
mov
jns
nop
lods
icebp
aad
pop
push
dec
aaa
imull
pusha
dec
dec
add
pop
push
jbe
push
mov
lret
outsl
sahf
jp
push
sub
xchg
fmuls
test
mull
adc
push
clc
cmp
sbb
add
adc
andb
lcall
sub
outsb
addb
sub
xchg
stos
inc
mov
ret
outsb
push
js
nop
xchg
scas
lcall
mov
cmp
jae
std
sub
cmp
push
out
in
out
push
mov
jg
cmp
inc
dec
pop
lods
sub
addl
push
adc
loopne
out
cmp
decb
and
shll
jno
cmp
pop
push
fldcw
mov
push
es
adc
push
hlt
mov
shlb
repnz
mov
lcall
mov
push
push
and
xlat
test
in
stos
popf
std
pop
or
test
aas
mov
lahf
jg
dec
es
push
mov
or
les
ja
insb
add
xchg
rcrb
sbb
leave
pop
test
shl
jecxz
lds
sbb
xchg
lcall
insl
fdivrp
push
fmul
nop
je
in
mov
testl
out
call
pop
add
cmpsl
xor
xlat
sub
ret
mov
and
repz
cmp
mov
mov
xor
add
int3
mov
adc
ss
cmpsl
or
adc
mov
dec
dec
lods
inc
jno
sub
test
daa
jb
push
lcall
cwtl
stos
cmc
jno
popf
fiaddl
jb
add
or
mov
iret
mov
push
int3
jb
bound
sub
in
aad
or
pushl
scas
in
cmp
add
cwtl
pop
add
jp
jmp
inc
jne
push
or
adc
mov
cmp
sbb
lahf
add
das
popa
fwait
sti
xchg
adcb
or
xor
cltd
pop
int3
andl
movsb
mov
lret
xchg
add
ja
arpl
mov
ds
or
aaa
mov
push
xchg
cmp
mov
mov
js
pop
mov
mov
scas
xchg
cwtl
jb
ret
mov
sub
and
cmp
std
add
movsl
pop
jnp
add
inc
pop
cli
adc
movb
push
rcrb
aas
pop
repnz
into
cltd
outsl
jns
mov
dec
xchg
fbstp
das
add
add
pushf
jmp
inc
sbb
ds
and
lods
inc
push
popa
in
lcall
sarl
push
cmp
shrl
stc
or
xchg
sub
sub
jl
or
popf
stos
inc
insb
aaa
xlat
xor
enter
sahf
lods
dec
mov
fistl
cwtl
bound
jbe
inc
je
cli
lods
test
mov
fldl
and
mov
std
cli
inc
addl
or
dec
xchg
fldenv
imulb
shl
ljmp
pop
mov
outsb
mov
loopne
mov
in
dec
fcomps
mov
mov
addr16
mov
cmp
fstpt
sbb
lahf
leave
mov
jl
je
icebp
cmpsb
mov
mov
push
fiadds
sub
lea
jo
mov
orb
xchg
pop
mov
inc
gs
jp
mov
cmp
outsl
scas
rclb
jmp
mov
dec
int3
and
ja
adc
es
sarl
bound
sub
icebp
rcll
xchg
test
adc
push
sbb
cwtl
dec
ret
pop
xor
imul
cmp
adc
jae
push
cltd
sbb
lret
jno
gs
adc
mov
xchg
inc
ss
sarb
sahf
sbb
scas
ret
dec
jns
adc
fwait
jo
push
dec
jae
xorb
sbb
cmp
xchg
cmp
pop
dec
scas
add
sti
push
or
cs
test
outsb
cmp
outsl
in
adc
dec
ja
fstpl
inc
fs
jno
in
xchg
int
adcl
fcompl
imul
sbb
push
shll
jnp
mov
cmp
adc
jns
or
out
push
mov
out
sub
incl
dec
out
test
push
lea
cwtl
in
lret
or
pop
inc
cltd
mov
fisubl
imul
or
xchg
daa
hlt
mov
add
fsubr
or
adc
lock
mov
shl
inc
jae
hlt
shl
and
and
aas
movsb
or
loope
stos
mov
push
dec
addr16
jle
ficoml
inc
mov
bound
shlb
mov
jg
stos
fisubs
xor
test
inc
call
xchg
fsubr
clc
or
pop
mov
cltd
loop
shrb
inc
dec
pop
fildll
ret
and
adc
and
fmull
imul
lods
adc
push
add
mov
pusha
lods
jbe
jg
or
mov
push
or
adc
lea
cld
addr16
shlb
sub
popf
add
mov
outsl
sub
push
adc
mov
enterw
outsl
mov
clc
jle
in
mov
test
dec
adc
cmp
out
sub
test
lret
and
js
ja,pn
icebp
adc
lods
fbld
xlat
scas
or
sub
rcrb
mov
adc
jno,pn
andl
jle
repnz
sub
into
xchg
sub
icebp
aas
shlb
dec
dec
outsb
cmc
xchg
push
out
pop
sub
movsb
out
cmc
stos
jle
push
mov
push
jns
jno
js
imul
mov
mov
or
rol
and
test
xchg
push
enter
dec
ffree
incb
les
cmc
pop
int
xor
xchg
or
push
je
pop
test
clc
add
mov
notl
shl
out
movsl
adc
sbb
push
lock
jo
aam
pop
daa
je
fstps
sbb
xchg
xchg
xchg
hlt
mov
mov
mov
jae
int3
repz
fidivs
adc
lea
xchg
sti
push
movsl
out
daa
cwtl
mov
stos
sub
jmp
mov
pop
ja
js
cmp
sub
call
orb
in
ss
xchg
cmp
or
jmp
enter
xchg
in
ja
adc
and
das
lea
sbb
push
std
insl
in
lret
lds
push
scas
inc
xchg
test
or
or
sbbl
and
cmc
xor
sub
lahf
test
loop
jne
mov
fcmove
and
mov
inc
mov
mov
gs
rorb
fcmovnb
jnp
adc
jns
in
mov
addb
dec
cli
jno
push
jmp
xlat
mov
jge
adc
inc
adc
in
dec
xor
lahf
xor
adc
mov
jo
fwait
ss
movsb
xor
call
iret
std
outsl
repnz
les
movsl
cmp
loop
sbb
lds
das
dec
shlb
loope
aad
ja
mov
ret
outsl
pop
in
or
mov
das
jle
xchg
sub
mov
xchg
sub
movsb
sbb
mov
cmp
dec
pop
xchg
push
aaa
xchg
repz
mov
andl
sub
clc
xchg
call
cmp
push
and
and
repz
lods
and
inc
mov
push
mov
fisttps
ds
pop
jecxz
shl
test
ret
push
xchg
lods
jbe
aad
push
inc
cmpsl
mov
sbb
mov
ja
dec
xor
or
mov
bound
aas
xchg
sub
sbb
movsl
loop
scas
mov
inc
push
orb
or
cmp
jecxz
incb
into
shrl
dec
icebp
xor
jle
dec
mov
ljmp
inc
xlat
mov
cmc
adc
add
mov
mov
pop
inc
mull
push
jg
push
cmc
xchg
sbbl
mov
xchg
xchg
mov
xor
es
leave
mov
loop
mov
rep
mov
pop
lds
jo
aam
insb
adc
dec
xor
add
out
je
fistpll
int3
cmpsl
out
js
or
loope
sbb
mov
mov
adc
xchg
daa
test
mov
and
push
jno
and
pop
out
xchg
mov
push
mov
add
inc
mov
outsb
lret
es
push
xchg
cltd
not
aad
sbb
mov
rcl
mov
clc
icebp
xor
cmpsb
jmp
ficompl
jnp
mov
mov
push
idivb
call
push
inc
or
jge
sub
inc
push
mov
test
inc
sahf
insb
or
lods
xchg
jno
sbb
ret
repz
lock
xchg
and
sbb
adc
dec
jl
sbb
pop
outsl
sti
push
rorl
xor
popf
fstpl
bound
mov
insb
icebp
and
addr16
xchg
je
cmp
in
sti
jg
adc
add
xor
sahf
out
jnp
mov
mov
xor
jae
sbb
or
pop
int3
push
fsubrl
adc
es
cld
fidivrl
mov
mov
fbstp
orb
xchg
xor
xchg
jne
adc
xor
pop
aaa
xor
test
movsb
mov
cs
loopne
jl
add
adc
jbe
nop
pop
and
xor
cltd
stos
nop
inc
inc
pop
stc
pop
inc
outsl
cmp
sub
scas
xor
inc
push
arpl
pop
add
cmpsl
loop
cwtl
mov
loope
push
lock
pop
sahf
test
mov
pop
loope
add
lahf
xchg
and
and
xor
mov
xor
test
dec
inc
pop
out
rol
inc
xor
leave
cwtl
dec
ds
lds
mov
inc
jle
adc
lock
dec
add
mov
insl
scas
sbb
inc
push
inc
call
adc
lods
add
jb
mov
in
stc
xchg
mov
add
xlat
test
icebp
test
pop
jg
dec
cmp
and
in
adcl
mov
dec
fistpl
inc
stos
mov
dec
repz
dec
outsl
sub
mov
jmp
or
and
add
or
push
mov
mov
inc
dec
imul
sub
stos
sub
dec
jecxz
repz
por
iret
sub
mov
aad
mov
cmc
xchg
adc
lret
push
mov
pop
js
and
outsb
push
add
mov
and
push
xor
pop
scas
std
jns
pop
inc
rol
ljmp
repz
xchg
cmpb
ds
add
inc
je
xor
push
cltd
cmpsl
pop
push
xchg
out
jo
jnp
xor
cmpsl
push
out
lcall
test
jb
jg
dec
pop
lods
and
mov
add
fisubrl
repnz
push
fwait
mov
movsl
imul
add
hlt
lret
pusha
repz
sub
imul
call
xor
fnstsw
notl
repnz
sahf
pusha
mov
and
mov
mov
rol
movsb
mov
add
adc
and
ja
out
mov
pop
mov
jle
xchg
cmp
adc
inc
cwtl
in
scas
inc
cmpb
push
insl
ss
dec
rcr
push
out
lahf
pop
sub
jl,pt
fisttpl
sarb
jae
fnsave
cmp
fs
iret
ret
inc
inc
ds
sub
out
pop
hlt
mov
sbb
push
or
popf
or
shrl
ja
mov
nop
adc
movl
xor
je
pop
repz
add
xor
js
mov
or
popa
xlat
int3
xor
fucomi
mov
shrb
xchg
cwtl
jnp
outsl
add
fld1
cltd
xor
jp
pushf
push
loope
lods
push
pop
pop
or
jne
xchg
sbb
lds
mov
std
outsb
cmp
cmpsl
cli
in
xchg
push
pop
out
mov
xchg
out
aaa
push
cmp
jno
pop
lods
lds
les
rolb
jno
sub
adc
jne
lock
js
sbb
jle
adc
pop
xchg
ds
sub
gs
enter
pop
stos
pop
or
jne
into
dec
add
or
push
pop
pop
cld
outsl
push
repz
fdivr
rorb
mov
sub
and
ds
pop
shrl
cmp
insl
sbb
pop
rorb
mov
sbb
hlt
sbb
ret
pop
ljmp
stos
lods
pop
in
mov
mov
int
or
shrl
push
data16
stos
sysret
jb
cmpsl
sbb
xor
xchg
add
jne
mov
mov
xlat
pop
or
aaa
scas
mov
mov
jno
jge
jae
xor
xchg
sbb
mov
jnp
push
cmp
dec
adc
pop
popf
lret
lea
push
cli
call
in
sarb
arpl
aas
cmpsb
mov
cmovo
call
adc
jle
cmpl
clc
outsl
cmp
mov
push
cmp
sbb
xchg
adc
jg
ss
movsl
test
sub
pop
mov
or
sub
aad
ret
push
jmp
mov
fwait
jb
or
cli
push
cmp
xor
push
sub
scas
push
addr16
scas
push
es
mov
cltd
std
push
out
and
roll
add
jecxz
adc
jge
jl
fwait
sti
jbe
inc
shrl
sbb
dec
js
ljmp
out
lret
sub
ds
das
mov
mov
jp
adc
mov
inc
hlt
mov
fidivrs
add
into
sub
jnp
pusha
popf
xorb
xlat
bnd
addr16
lret
xchg
mov
dec
test
lock
iret
loope
cmpsl
ret
jb
insb
lret
dec
xchg
fsubrs
out
mov
sbb
rcrb
scas
inc
stos
clc
arpl
out
xor
mov
fnstsw
ficompl
outsb
mov
je
les
inc
pop
xor
sbb
and
fmul
pop
out
repz
inc
in
shlb
sub
call
pop
mov
lahf
xchg
jl
out
and
pop
pop
enter
add
fiadds
dec
test
or
out
inc
mov
addb
imul
pop
and
lret
jp
jp
mov
ds
fdivrs
aad
lock
sub
push
dec
mov
insl
push
inc
insl
ss
mov
fdivr
aas
mov
push
xorb
sub
mov
inc
pop
popf
add
into
mov
jle
mov
xchg
push
in
mov
scas
jmp
mov
adc
sub
aam
push
outsb
sub
std
pop
mov
jmp
pop
pop
imul
mov
lods
out
add
jns
push
es
xchg
add
xchg
es
mov
aad
fdivl
mov
mov
in
sbb
test
loop
fldt
jbe
repnz
jl
mov
cli
cmpsb
imul
outsl
inc
add
movsl
mov
sbb
lcall
jb
mov
dec
mov
mov
fcomps
lret
lahf
fcmovb
arpl
lods
push
push
pop
mov
inc
push
shr
cld
cli
push
xchg
add
push
fwait
mov
mov
add
jno
nop
mov
cmp
cs
hlt
cmpsl
cmp
popa
or
dec
sti
push
out
bound
push
lods
mov
fdivl
cltd
addr16
mov
movsb
or
in
lods
fists
cmc
int
inc
inc
imul
iret
das
pop
pop
mov
pop
mov
dec
jge
jp
sbb
mov
sbb
xor
cmc
pop
addr16
sub
push
fildl
cmpsl
and
mov
jl
hlt
push
mov
ret
hlt
adc
addl
in
lcall
mov
and
test
jmp
lods
pushf
push
mov
dec
add
es
loope,pn
push
push
test
outsl
cmp
push
fwait
lods
pusha
dec
jb
add
sub
pop
and
xchg
mov
pop
insl
insb
and
push
xorl
mov
jbe
aas
push
mov
jle
stos
outsb
mov
jl
out
jbe
fistpl
jp
push
adc
mov
cwtl
test
lods
ss
push
test
mov
cmpsl
ds
les
mov
test
jecxz
sub
and
pop
push
add
mov
imul
push
jno
mov
inc
ljmp
xchg
cmp
pop
or
mov
repnz
enter
inc
std
cmpsb
imul
stc
fsubrp
adc
mov
xchg
mov
nop
and
aas
std
lock
fisubrs
cmp
sbb
cmpsl
xchg
jbe
fidivrl
dec
mov
mov
das
mov
mov
xor
dec
and
je
mov
mull
mov
push
adcb
mov
int
in
test
xlat
push
sbb
cmp
sub
mov
in
jo
pop
cld
int
cltd
mov
out
jge
xor
or
dec
inc
xchg
mov
aas
nopl
add
cmpsb
jnp
xchg
lret
addr16
fwait
add
iret
mov
jo
outsl
test
lret
aas
clc
add
lcall
cmp
es
rcr
jle
and
rolb
loop
mov
jg
cmp
arpl
negl
dec
jae
mov
loop
cmp
jne
cs
and
xchg
adc
push
pop
xor
jp
inc
lcall
push
inc
shll
push
pop
jns
pusha
call
adc
mov
xor
xor
test
add
push
push
faddl
pop
call
mov
ljmp
lea
xchg
outsb
cmp
cwtl
push
sbb
pop
xchg
insb
js
cs
jo
ret
jb
push
adc
inc
pop
ret
jge
inc
ljmp
pop
movb
adc
ljmp
mov
int3
fucomip
sti
sub
aas
loop
or
daa
jno
jae
mov
repnz
mov
xlat
aad
ds
sub
out
mov
fdivrl
das
ss
outsb
in
cmp
ljmp
mov
add
and
mov
ret
and
jge
or
adc
out
cmp
test
test
jae
repnz
das
adc
push
xor
dec
mov
xor
push
pop
insl
mov
pop
in
dec
out
jge
mov
scas
push
test
cmp
js
fmull
clc
or
pop
fs
or
loop
fdivrl
or
xchg
inc
test
push
add
data16
cmp
jg
inc
mov
fnsave
xchg
jne
stos
std
jnp
js
push
std
inc
pop
jo
out
xor
in
mov
and
mov
je
shl
jo
int3
test
mov
push
cmp
sub
push
xlat
cmpb
frstor
outsb
mov
subb
sub
cmp
jl
out
add
mov
dec
xchg
cmp
sbb
jmp
add
jno
mov
adc
clc
sahf
lret
out
call
outsb
int3
popl
sbb
fdivs
push
lods
fnstcw
outsl
jg
fdivl
push
pop
jmp
add
popl
cmpsb
nop
daa
mov
mov
stos
scas
call
sbb
outsb
add
mov
in
sbb
push
jmp
push
inc
idivb
push
jnp
les
mov
fmul
outsl
mov
jp
or
mov
add
inc
ds
aaa
into
jns
lahf
in
int3
imul
push
push
je
mov
and
mov
inc
out
aad
aaa
mov
adc
dec
mov
sub
insl
int3
mov
jecxz
leave
movsb
sbb
das
push
cmp
pop
dec
lret
jp,pt
mov
lods
inc
arpl
loopne
daa
dec
add
mov
mov
inc
frstor
out
dec
mov
test
pushl
jb
jge
cmc
cltd
sub
pushl
lods
sub
ret
out
js
adcl
fsubrs
mov
aad
lahf
cmpsb
sub
push
jmp
dec
and
andb
jns
push
cmpsb
sbb
lods
and
pop
mov
xchg
mov
add
mov
mov
popf
add
hlt
ret
daa
add
and
mov
pop
out
popa
pop
pop
lods
into
clc
clc
xchg
bound
imulb
or
gs
push
std
sub
loope
xchg
adc
mov
push
dec
in
addr16
and
pop
in
out
cmc
jl
test
push
data16
mov
jae
push
lahf
lahf
repz
repnz
adc
ss
gs
xchg
aad
sahf
cmpsl
outsb
add
inc
repz
cli
lods
mov
push
clc
xchg
in
jne
fnsave
popf
lods
cld
into
dec
movsb
aad
push
pop
cmp
jecxz
mov
test
or
imul
fdivrs
lret
mov
jno
sbb
add
xor
push
dec
or
test
push
mov
or
ds
iret
push
xchg
fdivl
and
sahf
cmp
int
adc
test
shrb
testb
pushf
xchg
xchg
mov
frstor
dec
test
lahf
jp
xchg
mov
dec
aad
scas
testl
jge
lret
out
icebp
into
scas
and
arpl
daa
mov
mulb
jno
mov
popf
loop
insb
adc
outsb
lds
add
xor
dec
repz
test
jp
mov
ret
mov
mov
push
push
cltd
xor
inc
or
fldenv
into
mov
sahf
mov
cmpl
mov
pushf
jae
enter
sahf
cli
pusha
stos
jnp
loope
push
sub
xor
aaa
movsl
xchg
pop
mov
daa
daa
ss
jmp
jb
push
add
fidivs
rorl
mov
gs
push
fcom
je
lret
adc
adc
pusha
xor
rep
outsb
ds
inc
sbb
and
xor
in
mov
and
or
popa
sub
divb
jp
pop
xlat
cmc
push
sbb
sbb
push
push
outsl
push
fwait
aaa
push
lret
fnsave
lret
cld
mov
jge
pop
fmull
cs
pop
mov
dec
mov
jae
in
pop
pop
movsb
clc
dec
out
aad
callw
cmp
inc
popa
or
stos
mov
mov
mov
fdiv
cmpsb
push
mov
dec
xor
loopne
mov
test
test
stc
mov
sbb
inc
pusha
and
mov
inc
push
inc
andb
mov
mov
ja
jae
sbbl
dec
and
xchg
test
shrb
call
sbb
xor
test
mov
xchg
jno
and
push
mov
or
icebp
rcl
std
sbb
loopne
ficoml
pop
xlat
in
orl
jns
pop
ss
in
sub
iret
test
iret
aas
pushl
xor
and
xchg
push
push
mov
jb
jnp
mov
loope
cs
pop
fs
fistpll
xchg
cmp
daa
cmp
xchg
pop
and
pop
jg
xchg
sub
cmp
int3
bound
mov
jo
test
addr16
shl
pop
fisubrs
in
jge
cli
xor
popa
sbb
sub
xchg
cmp
hlt
std
xchg
mov
adc
jae,pn
shrl
js
mov
gs
out
repz
mov
in
cld
jecxz
out
push
push
and
js
mov
das
addr16
rolb
pop
scas
insb
fs
test
divb
or
xchg
repnz
iret
movsl
inc
inc
push
sub
jne
lcall
sub
lock
cmp
call
idivl
out
cmpsl
jno
push
mov
jge
mov
jno
iret
xlat
sub
inc
jge
jnp
and
je
jno
adc
insb
mov
inc
test
mov
inc
ljmp
stos
lods
out
mov
test
ljmp
repnz
mov
adc
leave
sub
push
jns
xchg
mov
xor
ret
cld
cld
xchg
ljmp
sbb
lret
cmp
sub
enter
push
push
dec
div
fistps
and
jle
pop
test
sub
sbb
sub
stos
dec
cld
xor
nop
mov
cs
lret
push
adc
enter
and
adc
or
jp
inc
cltd
sub
pusha
jns
adc
popf
cltd
outsl
push
repnz
dec
imul
xchg
fadds
sub
icebp
imul
icebp
xchg
cmp
and
jbe
inc
std
mov
mov
xchg
sbb
ja
aaa
cli
rorl
gs
mov
sub
jge
insl
sarl
test
shll
je
adc
mov
js
xor
sbb
mov
sub
push
push
loopne
mov
jle
mov
jmp
push
jmp
xor
leave
flds
adc
sub
mov
lea
in
nop
add
hlt
push
inc
cli
pop
sahf
push
jle
push
sbb
in
sbb
cmp
push
not
sub
decl
cltd
fsubrp
sbbb
loopne
jmp
push
sub
test
popa
xchg
jno
call
fdivl
fbld
mov
test
jb
out
das
xorl
in
xor
cmc
push
pop
scas
aas
shr
xchg
sub
jo
inc
xchg
xchg
addr16
adc
aaa
dec
or
cmp
dec
inc
cwtl
clc
xlat
std
or
push
aas
rcrb
call
mov
fnsave
push
cwtl
mov
int3
pop
xor
shrl
or
leave
jae
dec
mov
inc
adc
jo
mov
push
test
and
test
xchg
and
mov
aam
sbb
daa
outsl
mov
out
xchg
push
pop
xchg
iret
inc
mov
jae
mov
sbb
push
mov
mov
subl
adc
sub
inc
sahf
arpl
mov
test
out
movsb
cmpsl
dec
pinsrw
mov
jl
addr16
push
out
idivl
in
data16
xchg
je
cmp
fsubp
lock
xchg
xchg
fwait
mov
and
mov
add
es
mov
pusha
test
sbb
push
xchg
loope
scas
mov
mov
mov
insb
imul
inc
fmuls
testb
shll
sbb
fdivp
lods
and
js
xor
ret
jle
sbb
addb
clc
push
and
scas
arpl
mov
int
insl
push
jno
ficoml
and
add
daa
sbb
mov
movsl
test
jbe
dec
loop
repnz
lcall
outsb
xchg
push
inc
pusha
add
arpl
mov
ljmp
gs
xor
mov
push
or
and
pop
int3
es
cmp
and
cwtl
mov
xlat
fsubr
sub
addr16
inc
cmpsl
pusha
ret
sbb
fbstp
pusha
pop
adc
std
aaa
cmpsb
sub
or
outsb
add
and
and
es
addr16
xchg
sbb
lahf
nop
sub
lcall
xorb
loopne
mov
push
adcb
adc
push
les
mov
in
popf
arpl
rorl
ret
pushf
mov
jne
insl
xor
inc
out
or
das
xchg
pop
lahf
jecxz
xchg
aas
xor
jae
repnz
mov
adc
push
or
xchg
loope
mov
out
fidivl
push
add
pop
js
mov
push
into
fidivs
hlt
mov
xchg
inc
shll
shrb
into
je
aas
dec
dec
mov
sbb
rclb
dec
cwtl
fs
aaa
mov
mov
rol
mov
xchg
mov
popa
cmc
dec
sbb
jl
inc
sub
push
push
mov
and
and
mov
adc
out
push
pop
cld
out
dec
lahf
stos
pop
mov
mov
cwtl
lahf
push
fisubrs
lret
icebp
and
dec
leave
in
sub
adc
and
into
roll
cmp
xor
mov
push
or
sbb
mov
jb
add
test
nop
fidivrs
fcomi
sub
inc
into
dec
push
xchg
mov
inc
pop
insl
inc
cmpl
mov
es
xchg
push
xchg
add
scas
push
loopne
in
inc
out
cs
inc
incb
cmpsb
inc
in
js
inc
scas
inc
rcrl
lods
jo
aad
outsb
icebp
out
loop
push
mov
dec
icebp
xchg
jns
int3
xor
xlat
xchg
cmc
push
dec
call
xlat
out
test
inc
popa
subb
jmp
adc
shlb
mov
or
dec
loope
hlt
out
xchg
add
sub
out
in
mov
sub
in
mov
ret
cmp
negl
fmulp
cmc
push
das
aas
lods
insb
xor
aam
lods
outsl
int3
fisubrs
xchg
insl
inc
mov
sbb
cmp
aam
jle
mov
xor
cmpsl
cmp
adc
inc
lods
ss
inc
sbb
push
cltd
test
iret
pushf
push
scas
pop
dec
inc
add
or
sti
pop
shlb
aam
lods
rorl
jno
pop
mov
lea
ja
add
or
and
popf
adc
out
es
popa
sbb
hlt
mov
es
jo
pop
into
repnz
xchg
and
xchg
sbb
fcomps
pop
ja
adc
or
imul
add
lock
and
into
add
lea
sahf
adc
setno
push
ljmp
jno
in
das
mov
cli
fdivrs
mov
outsb
fucomp
andl
lret
inc
or
xlat
sub
movsl
jno
mov
sbb
dec
repz
pop
cs
pop
scas
fists
pop
paddb
mov
adc
sbb
cmp
mov
mov
adcl
dec
cmp
not
sbb
ret
fwait
sbb
inc
outsl
out
popf
rcr
aam
xchg
jno
or
push
icebp
fisttpll
push
adc
fsts
std
fldpi
cs
repz
in
aad
fnsave
int
pop
scas
test
les
mov
es
repz
or
mov
mov
xchg
ljmp
ret
adc
ret
mov
pop
out
xchg
push
sbb
or
mov
mov
xchg
cmc
cmp
mov
sbb
outsl
mov
test
or
xorb
aas
pop
mov
adc
mov
mov
dec
xchg
mov
mov
push
pop
movsl
push
xchg
imul
bound
cmpsl
pop
mov
mov
mov
aad
iret
data16
mov
cmpb
ja
sbb
dec
mov
sub
sbb
nop
sbb
jno
jb
lods
sub
jecxz
repz
xchg
sahf
adcb
mov
cmc
stc
cld
jbe
or
add
jo
mov
mov
push
enter
idivb
mov
inc
inc
aaa
into
pop
push
lret
mov
sub
call
gs
int
sbb
mov
pushf
int3
push
notl
jb
adc
or
push
inc
push
incb
loop
outsl
adc
js
pop
push
stos
inc
andl
scas
lods
fs
xchg
fcoms
shlb
fsubs
push
daa
jae
mov
dec
popf
stc
call
or
xchg
lret
gs
sbb
js
sub
cltd
mov
xchg
sub
call
filds
cld
ret
pop
cmp
xchg
mov
jno
aad
or
xor
sbbl
mov
sbb
shrb
pop
nop
enterw
pop
fs
cmp
inc
push
popf
xor
mov
adc
pop
xchg
sbb
mov
mov
xor
dec
jecxz
mov
push
push
sbb
xor
xor
popa
dec
inc
test
scas
rcrl
shlb
rcl
js
push
outsb
jg
sbbl
add
leave
xorl
je
in
adc
fldl
scas
xchg
sub
outsl
xor
inc
or
pop
pushf
dec
jge
fdivs
push
cmpsl
sbb
jae
mov
push
cmc
xchg
hlt
clc
mov
iret
adc
mov
fsubrl
nop
pushf
test
jecxz
lods
jecxz
push
out
fists
les
mov
aad
xchg
sahf
mov
xchg
pushf
scas
enter
adc
jbe
in
fsubs
stc
test
ljmp
mov
jg
and
sub
fcoml
test
popl
mov
dec
mov
js
sub
dec
stos
aas
sub
add
dec
mov
sbb
and
jnp
enter
movsl
pop
pop
mov
je
cld
cwtl
mov
rolb
loope
or
scas
cmp
cmp
mov
push
out
cmp
mov
push
push
push
int3
sbb
addb
pop
fisttpl
icebp
dec
jge
xor
mov
scas
ljmp
dec
ss
ljmp
fcomps
xor
aam
and
xor
popf
push
pop
in
jp
clc
pop
inc
addr16
jae
mov
and
repnz
xchg
and
inc
in
sub
add
ja
imul
jl
dec
dec
dec
lahf
sbbl
std
mov
das
dec
pushf
xor
fnstcw
mov
out
and
push
hlt
mov
daa
xor
mul
or
or
enter
call
xchg
sub
push
push
xor
pop
inc
inc
sbb
fsubrl
js
and
ss
ror
repnz
and
jne
in
lret
cs
in
out
xchg
ret
or
jno
xchg
sbbl
fildll
jg
adc
xchg
pop
hlt
adc
pop
pop
aam
outsl
adc
xor
sahf
cmp
xchg
jns
ljmp
inc
sbb
lret
testb
in
mov
stos
pop
in
sbb
cmp
jle
jae
popa
sti
mov
fcomi
ficoms
inc
fmuls
leave
pop
subl
jae
aam
addb
sti
xchg
jg
icebp
xchg
lock
test
push
xchg
mov
adc
mov
xchg
inc
pmullw
scas
add
addr16
js
aad
gs
sahf
movsb
cs
notl
das
mov
sub
jg
pop
div
shr
jg
sub
imul
xchg
mov
lods
out
loope
repnz
mov
inc
pop
icebp
scas
int3
cwtl
adc
lock
inc
scas
cmp
push
xor
in
gs
das
add
push
adc
cmp
dec
sbb
fwait
out
mov
add
mov
xor
cmpb
adc
ss
adc
add
xchg
int
add
aam
sbb
and
mov
jmp
ficoms
shll
xchg
xlat
insl
mov
les
push
cmp
xchg
scas
push
jecxz
in
dec
into
add
cwtl
lock
scas
out
lea
inc
jb
lret
push
dec
or
test
outsb
mov
repz
sarb
fbstp
leave
push
hlt
ds
gs
xchg
aad
adc
lret
cmp
sbb
decb
pop
add
add
and
mov
ret
sbb
hlt
mov
repnz
leave
dec
pop
xor
shl
cmp
jecxz
jb
push
mov
cwtl
push
mov
xor
pusha
out
xchg
jb
push
rclb
test
test
or
sub
scas
sbb
cltd
in
fnsave
mov
sub
aam
cwtl
mov
icebp
dec
fs
adc
jne
sbb
ret
xchg
aas
lcall
mov
daa
sahf
push
adc
adc
mov
or
pop
out
mov
das
add
pop
fs
and
jnp
mov
hlt
aam
scas
ret
lret
mov
stc
out
inc
fdivrl
add
cmp
fs
int
or
out
hlt
mov
mov
mov
add
icebp
or
sbb
xchg
sbb
push
pop
lcall
push
fnstcw
jmp
or
or
in
xor
out
out
dec
clc
movl
sbb
mov
scas
pop
in
fsubrs
mov
add
mov
xchg
xchg
xlat
ret
test
test
shrb
scas
dec
cmp
jl
lock
gs
pop
or
cmp
jecxz
sarl
mov
sub
hlt
mov
lods
lock
mov
rcrb
repnz
aad
or
pop
dec
cmp
shrl
mov
lahf
das
xor
in
fwait
jecxz
es
mov
or
and
pop
popa
cltd
jmp
testl
pop
js
lret
cmp
pop
push
movl
out
in
mov
add
push
push
je
inc
mov
lods
mov
data16
jns
fldcw
stos
or
testl
push
mov
les
pop
incb
sub
pop
mov
out
ret
loopne
lcall
add
or
out
push
outsl
mov
sub
push
xor
jb
pop
mov
rcr
gs
lods
xor
cmc
mov
mov
mov
mov
dec
pusha
and
push
cwtl
cmp
clc
je
adc
lret
mov
aam
or
sub
inc
jg
dec
xchg
cltd
cwtl
mov
leave
jl
lret
fists
cmc
dec
dec
insl
outsl
icebp
hlt
jb
mov
and
ret
pop
outsl
cmpsl
ljmp
and
movsb
fnstsw
jb
cmp
sub
mov
data16
test
test
ret
leave
testb
insl
adc
in
and
push
fincstp
mov
cmp
pop
lock
ds
call
and
mov
fsub
rcrl
inc
daa
fsubp
and
cwtl
and
sub
pop
add
or
pop
adcl
movb
sbb
xor
std
inc
mov
pop
roll
in
cmp
xchg
repz
pop
movsb
lds
jno
mov
test
sbb
out
push
lods
inc
pop
or
push
in
fs
ja
mov
add
cltd
icebp
test
lea
cli
cltd
jb
mov
rcll
lock
or
lcall
out
mov
mov
push
mov
push
sub
dec
xchg
xor
inc
sbb
in
jmp
mov
mov
incb
xchg
xor
icebp
insb
aam
mov
jmp
call
or
movsb
addr16
es
or
lret
cmp
dec
idivb
imul
jae
jne
insb
lods
mov
mov
sub
int3
arpl
dec
mov
shll
fimuls
or
ja
sub
mov
mov
sbb
jl
leave
aad
outsb
fstps
mov
mov
dec
pop
lret
mov
pcmpgtd
stos
add
pusha
cs
addb
in
and
cs
sbb
dec
sub
sbb
xor
xchg
lock
scas
jp
inc
enter
ja
bnd
or
cwtl
jno
lahf
push
pusha
sbb
shll
leave
add
sub
dec
cltd
mov
lret
pop
sub
movsl
add
mov
js
push
rclb
xchg
and
dec
pop
cltd
popf
in
mov
fisttps
mov
xor
clc
mov
push
xor
xchg
enter
xor
and
int
scas
mov
push
xchg
out
movsb
les
sbb
rorl
push
fwait
int
ljmp
sbb
xor
divl
faddl
xchg
mov
cltd
stos
mov
sub
add
dec
pop
mov
add
mov
and
jg
add
ja
xor
and
loope,pn
mov
test
mov
adc
jle
adc
or
xor
scas
mov
dec
mov
lret
icebp
push
push
pop
adc
ja
icebp
dec
data16
jnp
xor
push
sub
or
mov
cld
adc
or
xor
xchg
sub
mov
rcll
mov
pop
xor
mov
in
add
ja
lcall
xor
jl
lods
in
stc
insl
shl
lods
pop
in
or
sbb
jne
cmp
in
mov
cmpsb
rolb
cmp
pop
jbe
lods
fcompl
or
lods
mov
cs
test
iret
mov
js
scas
insl
loopne
repz
test
sub
lcall
sub
mov
fcomip
wrmsr
sub
pop
out
pop
mov
clc
mov
sub
push
jmp
mov
xor
stc
or
jno
bound
outsb
ror
movsl
adcb
mov
in
mov
sbb
jb
insl
fs
in
test
dec
jmp
imul
shl
add
jno
je
add
dec
push
out
xlat
repz
or
jnp
in
push
popf
mov
fldenv
outsl
rep
or
mov
sub
push
shr
subl
dec
push
xsha1
cmpsb
mov
ja
sti
loope
push
adc
stos
inc
pop
fwait
js
fs
mov
mov
lcall
jecxz
pop
scas
dec
gs
lods
inc
adc
adc
push
push
je
jne
adc
mov
fiadds
lfs
push
ret
icebp
aad
fimull
inc
push
adc
hlt
and
mov
pop
shrb
sbb
test
cmp
sbbb
jp
aaa
nop
sub
jo
cmc
inc
scas
es
ds
int
rcrb
dec
push
daa
scas
loope
pop
lcall
xor
ret
inc
popa
std
jae
add
stos
jge
fst
push
push
daa
sbb
dec
dec
sbb
xor
mov
xchg
xchg
in
stos
adc
or
pop
or
mov
cmpsb
rol
xor
shl
dec
sub
cld
outsl
cmpsb
movsb
cmp
jp
mov
repnz
dec
add
lock
mov
mov
in
pop
sahf
inc
sub
pop
loope
and
add
popa
rol
pop
mov
cmp
ret
into
push
or
jns
pop
adc
cmpsl
enter
xchg
ljmp
lds
jne
add
xchg
int3
fs
sbb
imul
ret
les
das
and
pop
lcall
stos
adc
push
mov
lret
cmpsb
cmp
sti
inc
xlat
sub
jno
sarl
out
sbb
sbb
sub
mov
push
jne
flds
inc
jo
pop
and
mov
lahf
inc
in
jne
insl
loopne
and
push
es
mov
mov
mov
push
jle
test
je
and
and
inc
add
jns
cltd
es
pop
fidivrl
xor
add
hlt
aad
xchg
mov
jg
mov
nop
out
fnstenv
rorb
popa
cld
nop
lahf
cmc
mov
adc
into
testb
loopne
adc
scas
mov
shl
daa
cltd
sbb
push
lock
fsubr
cs
fnstenv
iret
push
sub
pop
clc
nop
in
dec
pop
inc
fcoml
mov
insb
pop
push
dec
mov
mov
mov
gs
test
popf
sbbb
int
mov
addr16
sub
cmpsb
cmp
jne
idivb
pushf
lea
mov
bound
gs
or
fsubl
cmp
adc
mov
jae
ret
fistl
pop
mov
push
out
or
insb
scas
lahf
jo
in
jb
add
stos
cld
xor
cmp
out
mov
push
jle
subl
inc
in
repnz
xor
inc
jae
lret
pop
cmpsb
aaa
xchg
push
jg
sbb
push
and
lcall
pop
lds
xor
inc
aad
pusha
sbb
and
mov
js
and
inc
sbb
jge
lret
fisubs
in
in
popa
adc
jecxz
in
int3
pop
es
and
mov
pop
or
and
aaa
pushf
or
jle
push
nop
add
pop
or
in
roll
or
in
or
adc
or
scas
aad
push
stos
shrl
add
sub
mov
cli
lahf
cli
mov
int3
std
cmc
push
or
lock
jo
jo
or
jo
test
scas
imul
push
lea
loope
cmp
cltd
adc
adc
and
or
adc
sti
rcrl
push
dec
xchg
ror
stos
vandnps
xor
xchg
pop
mov
pop
fiaddl
std
out
cmp
mov
in
fsubs
daa
in
push
inc
sbb
stos
jmp
pop
mov
ret
in
rclb
and
sub
sbb
push
dec
mov
mov
pusha
test
cltd
xor
cmp
arpl
xchg
jge
push
icebp
aad
and
jl
js
movsb
push
add
lahf
fcomps
mov
adc
inc
sbb
pop
xchg
sub
ror
enter
loope
mov
adc
fwait
adc
adc
cld
ja
rorb
jecxz
repz
cmp
dec
int
pextrw
mov
pop
bnd
and
pop
cli
push
xorb
cmp
aad
sbb
je
mov
roll
jno
inc
mov
push
divl
mov
out
test
mov
cwtl
cmp
leave
inc
xor
inc
push
sub
pmaxub
jge
sti
mov
xchg
cs
inc
inc
iret
dec
pop
jno
popf
imul
iret
dec
xchg
sbb
or
push
out
jne
shlb
aam
ret
insb
jle
ja
dec
fimuls
popf
xor
lahf
dec
ds
sbb
lret
ljmp
jo
mov
out
inc
arpl
mov
test
add
xrelease
and
jmp
fsubrs
dec
mov
xor
out
scas
and
cmp
lods
mov
mov
dec
mov
or
xlat
insl
ja
mov
jns
or
sarl
or
in
or
xchg
mov
mov
cmpsb
push
push
adc
popa
in
xchg
das
jne
in
push
pop
dec
ja
fwait
sti
enter
cmpsb
std
xchg
cwtl
mov
mov
sub
add
test
test
std
mov
loop
iret
fdivrs
int3
arpl
mov
mov
adc
sbb
add
fwait
andb
xchg
or
cltd
pop
mov
pusha
mov
sbb
pop
ss
pop
loope
movsl
fmull
lret
jmp
jmp
mov
add
pusha
nop
inc
incb
fidivs
add
xor
movsb
test
jp
loope
xchg
cli
xchg
add
sbbb
mov
or
jmp
xchg
out
outsl
xchg
sbb
ss
inc
addr16
mov
lds
loopne
mov
rorb
xchg
mov
cmc
pop
push
cmc
int3
xchg
mov
je
pop
movsl
cmp
orl
xor
test
nop
push
fdivp
push
mov
test
test
mov
mov
mov
mov
xor
add
into
mov
movsl
or
pop
imul
push
mov
jbe
shrb
push
jg
out
lret
mov
andl
aas
xchg
pop
mov
inc
pop
movsl
jbe
push
inc
jge
cmp
lcall
adcl
notb
shll
stos
mov
inc
lcall
and
cmp
fisubl
nop
lock
mov
inc
xchg
mov
push
sahf
add
xchg
icebp
lods
push
test
bound
jge
xchg
pop
or
movsl
rorl
je
sub
sub
scas
xchg
jae
mov
push
dec
in
xorl
push
adc
mov
sbb
pusha
in
mov
fldz
decb
mov
sbb
mov
mov
fldt
pop
push
xor
dec
jle
jecxz
filds
mov
inc
add
stc
inc
xchg
dec
cmp
imul
rcrl
in
scas
shll
cmp
pop
inc
enter
push
and
or
jp
lods
out
lods
sub
xor
adc
enter
sub
cmp
pop
dec
adc
xchg
mov
arpl
and
mov
int
out
cmp
jns
and
xchg
sub
dec
pop
mov
pop
pop
sbb
aaa
imul
push
test
jecxz
sbb
icebp
add
mov
clc
push
and
icebp
pop
and
mov
and
lret
test
push
or
pushf
arpl
xchg
cmpsl
adc
inc
enter
xor
movsb
lcall
or
mov
mov
iret
fisttpll
jmp
sbb
jp
pop
mov
aaa
in
pop
in
xor
iret
popa
adc
aaa
adc
xor
jno
or
sbb
cmp
xlat
cmpsl
pop
jg
sbb
scas
mov
cmp
popa
insl
add
sub
test
fwait
push
daa
stos
stos
repnz
aas
fdivrl
rorb
add
push
subb
xchg
xor
and
cmp
andb
arpl
data16
arpl
cmp
subl
lock
aad
lods
inc
cmp
cltd
push
lret
stos
arpl
pusha
cmpsb
mov
sbb
dec
cmpsb
les
xchg
test
dec
xchg
insl
adc
push
sbb
jge
jbe
adcl
test
ljmp
ja
cmpl
inc
mov
leave
in
subl
or
and
or
jnp
subl
aaa
popf
sbb
int
jl
pop
push
stos
fwait
mov
enter
shrb
mov
sbb
movsl
mov
cs
lret
fadds
bound
jb
shrl
nop
jl
adc
push
dec
cli
pop
lods
xchg
sarl
push
cmp
push
adc
xchg
out
or
mov
push
bound
mov
fimuls
in
push
fsts
in
and
xchg
popf
push
add
scas
rorl
out
and
dec
mov
mov
xor
dec
cmp
pushf
jne
daa
mov
inc
pop
inc
push
or
dec
pop
pop
stos
push
in
cmc
punpckldq
push
out
mov
loopne
in
test
dec
push
inc
dec
push
jmp
add
sub
push
xchg
dec
dec
mov
inc
lods
sar
popa
ret
jb
push
stc
std
outsl
and
ror
lods
mov
fxch
or
jmp
fisubl
lock
in
in
mov
pop
cmp
add
divb
adc
push
out
add
fxtract
sahf
adc
cmpxchg
mov
cmp
xor
es
adc
push
popf
cltd
inc
mov
mov
jecxz
mov
push
clc
xchg
xchg
stc
push
iret
fdivl
dec
add
dec
sbb
rcrl
or
sub
mov
or
imul
mov
js
or
or
mov
jbe
inc
test
pop
in
xchg
jne
and
call
push
xchg
in
int3
xchg
xchg
imul
sbb
push
pop
ss
mov
dec
xchg
inc
enter
fldt
fdivrl
fwait
add
scas
fisubs
xor
mov
shr
mov
enter
lock
ljmp
jbe
insl
sbb
xchg
or
sbb
or
dec
daa
xor
jg
pop
repz
std
movsb
jb
and
mov
push
mov
dec
or
cwtl
stos
out
test
insb
lcall
add
push
pop
or
lahf
repz
xor
fistps
out
hlt
xchg
dec
shrb
mov
xor
jmp
or
sysret
jle
jbe
pushf
mov
xlat
adc
dec
cmp
push
or
cs
call
xchg
jns
cmp
cmp
imul
mov
and
fs
cmpsl
shll
andl
push
push
push
mov
mov
std
pop
xor
and
insb
negl
push
xchg
addr16
imul
inc
jae
call
mov
mov
leave
pop
xchg
rcl
jl
pop
popa
and
loopne
scas
xchg
push
jl
mov
xchg
cmp
lds
pop
mov
out
inc
adc
mov
movsb
xchg
imull
aad
and
adc
out
xor
int3
add
mov
push
loope
xchg
adc
sbb
js
daa
ds
idivb
pop
add
xlat
sub
add
jno
cli
inc
loopne
fdivrl
push
pop
call
xor
lret
and
pop
xlat
outsl
mov
ja
jmp
adcl
push
sub
loopne
addb
xchg
mov
test
fsubl
push
daa
push
dec
gs
cmp
imul
inc
ret
jns
cli
aam
xchg
clc
xchg
adc
sub
outsl
push
mov
cmp
scas
clc
push
jo
std
xchg
stos
push
pop
mov
or
pusha
cli
cltd
dec
scas
xor
sub
pop
adc
cs
sbb
pop
fmuls
fldenv
mov
jb
dec
inc
inc
pushf
subb
imul
jne
sbb
cwtl
pop
sub
ret
or
pop
int3
xchg
add
cmp
cmp
lods
sahf
lock
sbb
mov
jno
cmc
pop
movsb
xchg
incl
or
dec
aad
stos
popa
mov
gs
and
cmp
jae
insb
cld
loopne
mov
xor
push
cs
mov
mov
cmovbe
inc
dec
loop
fiadds
xchg
iret
loop
mov
cltd
sub
out
ljmp
mov
aad
mov
inc
out
or
adc
cli
das
repnz
negb
je
shll
jp
into
push
nop
and
fsub
sbb
stos
popf
scas
aad
push
jne
sti
xor
movsb
jmp
pop
fists
push
loop
push
mov
cmp
cmp
jmp
xorl
xor
cmp
shrb
test
pop
cltd
dec
pop
fsts
lret
mov
cmpsb
xlat
add
jecxz
adc
lret
add
mov
and
or
jae
aas
jg
cmpsb
fnstcw
outsl
mov
imul
addr16
adc
jae
sahf
out
inc
pushf
pop
add
and
jl
je
jb
push
sub
popa
xor
icebp
movsb
out
pop
outsb
inc
push
push
xor
sub
test
scas
and
add
xchg
clc
push
jne
jl
push
pop
mov
fistpll
mov
push
fldt
or
push
mov
popa
das
test
add
aam
aam
mov
mov
lret
add
push
mov
mov
inc
cmp
dec
or
or
stc
call
leave
adc
mov
rclb
xor
jle
inc
insb
jmp
xor
sbb
inc
cwtl
jge
cltd
mov
xor
jne
mov
movsb
imul
subb
push
daa
xchg
into
sub
inc
fiadds
enter
xor
pop
mov
mov
pop
loopne
dec
mov
mov
out
mov
sti
movsb
and
xchg
ret
xor
test
stc
in
adc
xchg
xor
pop
insl
stc
fdivrs
sbb
imul
mov
popf
fcoml
inc
js
jmp
or
frstor
idiv
mov
push
sbb
sbbl
sahf
les
push
cmc
mov
aas
mov
fwait
jecxz
movsb
lret
addr16
jbe
add
rolb
dec
mov
lcall
out
imul
dec
mov
dec
pop
mov
or
and
dec
cmp
arpl
loop
cmp
sub
cmp
mov
cmp
pop
xor
jecxz
push
xor
cmp
push
mov
lcall
mov
sbbl
stos
inc
pop
inc
add
ror
mov
cld
loopne
jmp
stos
loopne
mov
pop
icebp
aas
insl
lods
sub
pop
and
int
nop
dec
jmp
dec
jmp
xchg
aaa
enter
add
scas
mov
outsb
mov
mov
insb
push
pop
pop
fs
rclb
sahf
out
cmpsb
and
push
enter
ret
add
jl
lock
movsb
popf
push
adc
dec
add
inc
fstl
or
popf
xchg
adc
xorl
rolb
xchg
lock
cmp
mov
dec
lahf
mov
mov
shr
jecxz
fwait
xor
jmp
into
incl
lods
popa
add
push
add
dec
js
inc
test
cmpsb
repz
mov
mov
lods
pop
repnz
sub
js
xor
gs
mov
ret
iret
mov
repz
stos
jge
std
pop
mov
mov
sbb
cmc
es
dec
or
jg
jle
push
push
add
sbb
shlb
movsb
sbb
sub
or
pop
in
jl
jl
out
xor
shlb
aad
add
jp
aad
lock
out
mov
cmp
pop
and
mov
cmpl
mov
pop
jnp
stos
cmpsb
inc
lods
sub
test
or
into
shrl
lds
sub
xor
cld
fwait
adc
sub
mov
shl
cmp
mov
int
in
mov
mov
pop
cmp
test
or
sbb
or
daa
mov
mov
sbb
xor
mov
xchg
cmp
out
mov
and
cld
call
fldl2t
call
in
inc
fnstsw
cltd
mov
movsb
rorb
adc
pop
lahf
or
addr16
jne
mov
mov
cwtd
pop
add
mov
popf
jo
sub
fcmovne
aad
in
fistps
xchg
jl
dec
out
and
out
clc
sar
sub
adc
std
xchg
scas
mov
int3
aad
add
jae
sub
imul
out
jb
loopne
jnp
xor
fistps
cmp
rcl
out
mov
cmpsb
cmp
cmpb
das
adc
sub
out
add
stos
cmpsb
dec
cmp
clc
xor
cmp
adc
cwtl
pop
xchg
out
mov
cmpsl
mov
push
inc
add
lock
and
adc
jae
and
pop
inc
pop
test
xchg
xchg
mov
mov
shrb
sbb
sub
int
imul
dec
inc
jg
jle
mov
lds
pop
stc
insl
fidivrs
adc
movups
and
fmuls
pushf
push
dec
int
mov
mov
jl
pop
aam
mov
xchg
add
mov
pop
mov
or
dec
ja
push
stos
pusha
xchg
loope
inc
pop
icebp
mov
lods
jne
mov
lods
jnp
dec
loop
adc
lea
movsb
jnp
outsb
icebp
mov
cmp
outsl
push
popf
dec
jmp
push
insb
jo
movsl
sub
repnz
and
push
lock
mov
jle
fcmovnb
int
mov
push
jmp
xchg
adc
mov
jb
jo
je
mov
inc
jecxz
push
xchg
sub
das
mov
jnp
inc
push
inc
sahf
jmp
shlb
sbb
adc
mov
js
mov
adc
dec
push
cmpsb
call
pop
scas
dec
pop
icebp
loop
out
enter
ja
jle
ss
fdivrl
leave
les
outsb
andl
cmc
pop
int3
outsb
add
std
jo
jle
or
test
movsb
in
xor
mov
addb
scas
dec
fiaddl
bound
jg
int3
cmc
mov
mov
inc
stos
mov
orb
dec
sub
mov
mov
fs
adc
mov
jae
inc
mov
das
dec
arpl
jnp
enter
xor
push
or
sub
push
rclb
dec
dec
repnz
push
fistpll
stos
mov
sbb
cmp
cmpsl
hlt
negb
mov
xchg
xor
mov
stos
adc
jb
insl
shll
add
scas
dec
sahf
xor
xor
inc
inc
mov
in
xchg
inc
in
lock
pop
gs
xchg
lods
xchg
dec
sbb
std
shrb
test
lret
int3
xchg
dec
mov
movsb
out
xchg
stos
mov
nop
or
add
pop
imul
push
mov
sbb
mov
push
add
sub
sbb
ja,pn
loope
lods
fbstp
aad
dec
dec
fisubs
xchg
sub
shrl
inc
xchg
cli
movsl
mov
and
dec
jle
dec
testb
cmp
sbbl
or
les
xor
mov
xchg
sub
pusha
inc
rol
test
shlb
cmpsl
cmp
sub
hlt
and
xor
popa
inc
jmp
aad
pop
mov
xchg
push
in
mov
pop
out
scas
mov
cmpsl
out
sub
or
dec
test
push
sbb
lahf
sub
leave
inc
or
movsb
pop
ret
sub
scas
dec
in
pop
pop
in
and
inc
sbb
push
int3
pop
ret
xor
stos
jge
repnz
jg
and
bound
mov
std
push
inc
popa
mov
loopne
or
inc
das
lods
inc
popa
popa
popa
jl
incb
das
movsl
add
pop
jae
mov
orl
in
jns
imul
out
and
mov
and
xorl
mov
cmp
xor
testb
cltd
xchg
adc
repnz
data16
pop
cmp
xchg
daa
cmp
sub
adc
sarb
loopne
ljmp
sbb
test
shll
mov
sbb
das
dec
add
addr16
ret
xchg
rorl
in
mov
or
add
adc
fnstsw
mov
add
mov
fiadds
cwtl
pop
mov
or
arpl
ret
in
push
push
in
mov
push
jno
pop
dec
cld
push
cmpl
dec
pusha
push
cmpsb
call
aad
sahf
or
popa
ret
loope
test
arpl
popa
jns
xor
fwait
cmp
adc
lahf
xor
std
push
popf
push
jno
mov
sub
js
inc
fwait
scas
jp
stos
xchg
pop
or
in
ret
int3
mov
js
scas
cmpsb
inc
lods
sbb
fstpl
dec
sbb
or
sarb
mov
jmp
mov
into
inc
jne
arpl
sbb
pop
inc
arpl
lahf
mov
xchg
mov
fstpl
and
ds
lahf
int3
pushf
testb
rclb
lods
ret
push
pop
jo
pop
pop
das
loopne
adc
daa
leave
cmp
cmp
pop
dec
adc
loop
fimull
inc
mov
ja
push
mov
std
subb
cmp
mov
fsubr
pop
or
stos
push
stc
popf
fdivrl
pop
sarb
pop
pusha
sub
movsl
or
jnp
pop
dec
pop
mov
mov
jge
shll
sbb
cmp
xor
adc
cwtl
xchg
push
imul
or
jo
mov
fidivrl
movsl
arpl
fwait
xchg
jne
mov
iret
loop
push
je
mov
testl
pushf
das
push
inc
xchg
xchg
enter
inc
xlat
outsl
clc
sti
leave
aam
mov
std
xchg
pop
loopne
push
push
jo
fwait
mov
sti
sbb
mov
mov
adc
jg
mov
dec
loopne
hlt
addr16
mov
mov
dec
xlat
lret
movsb
adc
lea
add
out
inc
hlt
cmpsb
stos
pop
loope
or
movsl
adc
icebp
adc
mov
push
outsb
out
test
lret
rol
and
stc
hlt
sub
pop
mov
sbb
leave
push
imull
push
fwait
push
dec
stc
aad
mov
and
or
xchg
mov
and
adcb
and
pop
jmp
mov
mov
inc
lahf
ss
jne
ficomps
sbb
jp
cltd
bound
mov
mov
fldt
pusha
fs
sbb
testb
adc
mov
imul
push
dec
or
daa
das
add
mov
sub
mov
ljmp
xor
test
mov
xlat
push
xchg
pop
lock
js
cmp
add
sub
or
aas
sub
ja
adc
shrl
sahf
xchg
fldl
lret
or
hlt
pop
gs
outsb
add
pop
dec
jne
out
ja
leave
test
seta
sbb
stos
inc
shll
xchg
xchg
sub
pop
lahf
fmuls
xlat
in
mov
rorl
movsl
pushf
xlat
insb
sub
imul
and
mov
test
imul
add
or
push
and
call
jecxz
adc
filds
subb
andl
mov
std
push
dec
ret
sti
cmp
ret
fadd
and
iret
movsl
cmpsl
arpl
dec
xor
into
xchg
sbb
lods
cmp
or
stc
popf
js
mov
aaa
outsb
jle
pop
test
popf
les
in
push
sti
cwtl
mov
push
je
inc
sti
setnp
loopne,pn
leave
xchg
mov
outsl
jnp
sbb
sub
ljmp
cmp
fwait
xor
pop
jnp
test
adc
insb
jge
push
fldl
ljmp
and
mov
lcall
out
mov
data16
sti
lahf
jbe
mov
outsb
sahf
push
pushf
inc
sub
add
dec
jnp
xchg
subb
push
pop
lock
sub
pop
pop
fstpl
jnp
sbb
int3
jo
icebp
mov
jecxz
pop
pop
cmp
fldl
mov
mov
add
mov
jg
decl
mov
mov
ror
flds
or
cwtl
inc
bound
aam
cmpsl
lcall
sahf
add
xchg
jnp
movsb
out
fwait
jno
adc
pop
ret
xchg
arpl
adc
push
or
lea
cmp
push
icebp
cmpsl
mov
dec
dec
push
fsts
mov
mov
mov
ret
cli
sbb
mov
or
jge
mov
lret
sahf
sub
mov
sub
mov
arpl
repz
mov
mov
clc
hlt
cld
js
sbb
add
sub
lcall
call
or
mov
push
xor
pop
pop
repnz
push
add
lcall
or
lods
push
mov
lcall
mov
or
je
inc
xor
ja
mov
rcl
push
push
jge
out
lcall
iret
push
lret
mov
lods
xchg
mov
push
jg
xor
in
inc
es
mov
and
xor
xor
mov
out
mov
push
cs
dec
adc
xlat
outsb
inc
cmp
enter
or
or
mov
in
add
out
inc
movsl
mov
dec
mov
dec
pop
jnp
lahf
xor
pop
lock
pop
push
mov
leave
arpl
in
aas
push
and
fwait
mov
pop
lcall
lahf
pop
mov
sbb
cmp
jnp
scas
out
push
mov
or
fwait
lods
fidivs
add
xchg
hlt
jl
es
jbe
push
les
add
out
nop
sbb
aad
aaa
ljmp
mov
test
mov
cmp
stos
pop
sarl
testl
stos
pop
mov
nop
int3
mov
lods
xchg
mov
aas
lret
and
xchg
into
gs
dec
lds
push
fisubl
jo
mov
js
outsb
dec
scas
sub
pop
cmc
cld
add
jnp
lea
fnsave
dec
add
sti
xchg
movsb
dec
loope
cmp
mov
icebp
and
add
into
js
clc
mov
fildll
test
fldpi
push
cmp
fxam
movsb
cli
push
fisttpll
test
scas
inc
pop
ja
test
inc
inc
fdivl
dec
add
xchg
fsubl
dec
or
or
push
lods
xor
jnp
dec
push
in
dec
addl
inc
cltd
inc
lcall
inc
fdiv
fdivp
cmpsb
les
add
arpl
sub
mov
lcall
and
pop
loopne
xor
lds
jecxz
fwait
negb
test
mov
push
rcrl
cld
out
addr16
pop
mov
inc
mov
dec
dec
mov
add
gs
jb
mov
test
loopne
pop
dec
sub
loop
or
cli
sub
shlb
mov
cld
fbld
mov
fstl
sub
jge
lret
rorb
mov
xchg
pop
dec
fsubrs
rcr
lock
js
mov
fcomps
into
and
imul
out
out
cmpsl
inc
cmp
inc
stos
es
xchg
inc
mov
icebp
leave
pop
lret
cwtl
popa
xor
cs
cmpsl
mov
jne
int
sub
xchg
mov
sub
imull
jns
iret
dec
add
xor
inc
xchg
xor
mov
dec
dec
test
jb
dec
push
pop
push
in
pop
loopne
rcrb
inc
mov
pop
mov
in
loope
push
add
fadds
xchg
test
shrb
add
scas
cmp
sahf
push
in
rcr
pop
mov
jnp
std
ds
icebp
ja
pop
cwtl
ret
outsb
out
xchg
and
push
or
insb
scas
sti
stos
inc
xor
push
enter
mov
or
inc
lret
dec
jecxz
aad
in
ljmp
dec
jg
stos
das
insl
mov
pushf
mov
push
push
lods
and
adc
jge
test
lods
insb
add
mov
scas
cli
push
test
inc
int3
shlb
data16
pop
cmp
mov
lret
pop
pop
imul
add
aam
stc
dec
xlat
dec
mov
out
enter
iret
add
fdivrl
popa
test
fidivrl
arpl
cmp
lods
xchg
popf
in
inc
lock
adc
movsb
xchg
xchg
add
repz
cmp
iret
aas
dec
int3
push
js
in
outsb
cs
or
or
mov
in
insl
sub
stc
imul
sbb
cmp
and
scas
sarl
imul
xor
int
dec
mov
cld
cmpsb
xchg
add
bound
daa
jb
js
adc
lret
xchg
push
push
js
bound
rorb
adc
fbstp
lock
daa
clc
inc
fiadds
xor
test
sbb
popf
pop
sbb
xchg
cmp
xor
sbb
inc
js
jecxz
dec
pop
lcall
mov
scas
mov
xchg
ret
sub
out
sub
xchg
or
jecxz
in
test
sti
lea
scas
push
or
ja
pop
popa
xor
xchg
cmp
divb
and
lahf
dec
addb
push
insl
add
int
push
ljmp
dec
jmp
inc
jge
in
mov
and
imul
xor
test
imul
rolb
sbb
sbb
shll
fcomps
mov
cmpsb
lock
mov
xchg
cmp
sbb
and
cld
sbb
in
in
push
popa
loopne
loop
push
mov
dec
andw
testb
sub
aam
in
push
pop
dec
mov
add
mov
bound
inc
arpl
insb
fbstp
push
dec
add
stos
popf
inc
sub
inc
mov
lea
adc
mov
push
add
push
and
frstor
addl
xor
dec
mov
int
push
cmp
push
lods
cmp
subb
mov
inc
inc
sbbl
in
mov
cld
fildll
gs
inc
dec
pop
mov
xchg
mov
and
int
add
push
xor
mov
pop
pusha
sbb
rorl
inc
xor
ljmp
stos
or
sbb
inc
lds
mov
cli
inc
leave
mov
inc
sbb
fldcw
into
mov
jae
call
rcr
xchg
cmpsb
mov
push
fadds
and
pop
hlt
mov
cmpsb
aas
push
mov
shll
fs
fldl
mov
je
cltd
mov
das
xorb
push
push
inc
adc
vmread
decl
mov
fs
jmp
cmp
cmp
out
push
mov
outsb
into
out
popa
les
icebp
lahf
pop
dec
add
enter
mov
add
or
sbb
mov
jnp
mov
sub
push
ss
jne
xor
sahf
xor
xor
arpl
and
xor
inc
sti
ja
pop
push
mov
sbb
push
or
inc
pop
fsubp
push
sbb
add
sti
xor
sub
js
dec
les
cmp
push
add
pop
pop
mov
xchg
mov
mov
test
in
jp
xor
mov
notl
add
mov
push
add
jg
jecxz
cmp
mov
mov
push
add
rcr
adc
jmp
jno
xor
test
popl
lock
cli
inc
and
sub
movsb
fdivp
xchg
xchg
push
cs
dec
in
bound
rcrl
push
jmp
jb
pop
mov
imul
jne
jl
mov
lods
mov
push
xor
xor
jo
mov
shr
adc
dec
scas
xor
ljmp
enter
mov
add
xchg
dec
cmp
xlat
jmp
das
int
xchg
sub
cmp
inc
jecxz
and
sbb
mov
dec
shrl
jae
cld
xor
lods
adc
sub
dec
shl
push
xchg
leave
in
or
nop
and
dec
xlat
push
jge
mov
jns
enter
movsb
jnp
mov
subl
je
mov
and
jno
adc
and
inc
cwtl
pop
insb
loop
lret
sub
sbb
movb
aad
enter
push
pop
in
mov
filds
and
push
sbb
in
loop
xor
ds
push
adc
xor
stos
push
notb
mov
add
mov
shll
sahf
fdivr
stos
adc
lock
out
pop
lret
add
mov
ret
shlb
pushl
insb
out
bound
fsts
cmp
dec
fldcw
mov
rep
sbb
dec
cmp
rcll
and
pop
lds
and
ljmp
and
shll
jno
mov
xchg
cwtl
pop
loopne
loope
nop
shrl
lcall
es
aas
mov
inc
cmp
mov
jno
mov
mov
xchg
sbb
enter
imul
int
repnz
insl
cwtl
add
in
clc
in
jle
dec
enter
and
inc
inc
mov
test
add
mov
mov
subb
data16
pop
jae
aad
jne
int
cmp
pop
lcall
cmp
stc
aas
dec
cmp
fs
sub
dec
loopne
or
mov
mov
cltd
add
hlt
xchg
push
mov
or
ret
data16
sub
sub
loopne
jg
ret
test
mov
inc
sarb
cmp
insl
jge
out
fdivrs
fbld
mov
push
pushf
mov
sbb
sahf
pushf
test
sbb
xchg
sarl
mov
pop
push
ljmp
or
cs
or
scas
mov
push
xor
push
out
in
or
sbb
xor
sub
outsb
adc
mov
test
inc
out
xchg
mov
movsb
fwait
int
repz
mov
jo
mov
in
inc
fdivs
push
movntq
out
jg
aad
repz
xorl
push
push
inc
push
popf
jno
lods
jmp
leave
pop
and
cmp
movsl
outsl
fistpll
fsubr
inc
mov
test
sbb
insl
into
sub
les
loopne
dec
mov
ret
xchg
pop
std
adc
inc
mov
pop
adc
jp
jmp
mov
dec
loope
mov
cli
cmc
mov
clc
lahf
insl
scas
cmc
lret
sarb
cmp
sbb
lret
mov
push
mov
lret
pop
pushf
movl
mov
inc
dec
adc
dec
aad
orb
arpl
mov
and
repz
sbb
push
add
stos
inc
adc
push
inc
or
inc
aam
xchg
adc
cli
into
jns
add
cwtl
xlat
mov
sbb
adc
xor
mov
testl
mov
pop
jbe
push
mov
insb
pusha
mov
in
int
fstl
push
mov
xlat
out
fwait
movsb
cmp
mov
adc
bound
mov
or
and
cli
pop
aaa
aaa
fwait
push
aaa
push
call
lret
pop
jmp
push
mov
adc
mov
in
in
push
out
inc
dec
arpl
imull
jo
inc
pop
add
inc
dec
leave
dec
mov
push
xchg
add
es
or
sub
dec
stc
loopne
stos
mov
movsb
mov
or
leave
mov
add
jae
dec
add
call
xchg
inc
pop
xchg
arpl
aad
push
ljmp
jno
push
popf
adc
test
or
outsl
roll
hlt
inc
adc
adc
inc
cld
pop
jbe
repz
ds
mov
lahf
repnz
and
push
cmp
in
mov
pop
in
ja
stos
jbe
adc
or
out
jns
sub
adcb
xor
in
or
inc
sbb
scas
inc
inc
jns
mov
lret
lods
stos
mov
jno
jg
and
std
xor
or
repnz
test
pop
adc
add
push
adc
pop
lea
push
cmpsb
sub
xor
out
pop
jae
add
out
or
push
xchg
sub
inc
push
inc
hlt
scas
dec
add
orb
fisubrs
xchg
icebp
loopne
fsubr
imul
sub
daa
mov
popa
sbb
and
jae
pop
aas
movsb
jb
fiadds
cmp
xchg
mov
and
xor
mov
shlb
mov
push
push
mov
into
push
inc
and
jmp
fildll
sbb
mov
dec
gs
repnz
dec
loope
fisttpll
int
fs
rclb
mov
daa
into
inc
fidivrs
inc
xor
in
pop
data16
inc
mov
lret
fst
fstps
xchg
hlt
jecxz
mov
push
mov
fsubrl
or
and
jb
inc
aas
pop
mov
rcrl
pop
adc
pop
sub
inc
int
popf
call
setge
subb
dec
lock
mov
jnp
lods
push
pop
popa
fdivs
insl
mov
cmpsb
or
mov
loopne
pop
sbb
mov
loopne
lret
jno
mov
mov
jnp
xchg
add
stos
add
psubusw
push
inc
or
mov
sbbl
or
xchg
loope
or
insl
sub
ret
bound
insl
mov
mov
pushf
or
jne
pop
add
repz
popl
inc
jp
fnsave
adcl
jb
repnz
xchg
jge
mov
ds
push
rolb
push
out
sbb
mov
rcrl
mov
mov
stos
stc
gs
or
sub
leave
mov
pop
nop
ljmp
mov
add
add
in
aad
jne
neg
sarb
pop
movsbl
dec
xlat
inc
pop
lcall
sub
cmp
imul
ret
test
xchg
pop
or
adc
lret
arpl
cmp
shl
outsb
pusha
mov
mov
stc
inc
sbb
ret
pop
sahf
hlt
pop
dec
fs
adc
dec
jbe
nopl
push
xchg
in
stos
sub
std
pop
lret
jae
add
xchg
adcb
clc
jno
outsb
sahf
xor
in
add
repz
rcr
mov
mov
or
jmp
scas
sbb
test
lods
aam
mov
lds
cli
push
cmp
dec
clc
or
pop
xor
sub
enter
mov
mov
push
xor
fists
mov
scas
lock
in
xlat
iret
insl
les
sbb
lods
es
popf
mov
js
notl
insl
outsb
gs
ret
mov
mov
xor
mov
mov
xchg
mov
ret
sub
repz
dec
dec
cwtl
lahf
or
fs
test
adc
out
or
sub
jecxz
test
add
ret
add
rorb
aas
outsb
cwtl
es
leave
sahf
pop
pop
jmp
mov
jnp
cli
jns
scas
lods
mov
and
inc
lret
call
mov
ljmp
inc
push
sbb
cwtl
xor
cmp
push
xchg
inc
mov
out
xlat
stos
push
lds
mov
rcr
shl
mov
adc
out
dec
inc
divl
mov
pop
pop
icebp
mov
test
mov
repz
push
insl
mov
cmp
or
mov
aaa
or
leave
jl
push
add
shll
ljmp
xchg
mov
xor
cmp
fsubrs
cmp
lea
jecxz
ljmp
pop
shll
and
sbb
xchg
sub
les
shlb
dec
pop
call
in
cltd
sub
inc
mov
pushf
popfw
sub
adc
popf
lods
adc
xlat
jae
in
jle
push
push
popf
and
aam
inc
mov
jmp
mov
cmpsb
mov
cmc
mov
lret
adc
or
outsb
pop
and
push
cmpl
das
pop
cmp
mov
es
hlt
adc
fsubl
mov
push
loopne
mov
mov
dec
stos
xchg
neg
mov
inc
jno
repnz
jo
lahf
inc
jns
dec
fcompl
mov
jmp
movsb
cmp
mov
jnp
sbb
aam
loop
aad
mov
lret
mov
call
cli
cwtl
out
lret
scas
insl
push
or
mov
mov
in
add
mov
xor
mov
clc
jg
testb
xchg
jae
leave
cmp
adc
sub
or
adc
sbb
cmpsb
lahf
lds
test
ja
xchg
ficompl
insb
xchg
sub
or
lahf
and
mov
add
xchg
xor
mov
movsl
mov
sub
or
fists
ds
ds
jae
push
int
in
in
stos
jae
add
in
sbb
push
dec
faddl
mov
cmp
pop
add
sbb
lods
add
xchg
fidivl
add
test
sbbb
enter
aam
mov
lods
sbb
pop
dec
int
les
push
xchg
add
sti
enter
or
xchg
or
pop
nop
jl
add
in
sbb
xor
xor
fnstcw
dec
or
sti
xchg
sub
mov
cmp
add
aaa
loopne
pop
roll
push
lahf
aaa
pusha
push
mov
jb
mov
cld
xor
fsubr
and
jge
das
mov
or
jae
adc
pop
rolb
cwtl
lods
push
in
push
xlat
loope
pop
movsb
je
test
cmp
push
push
ja
push
cmp
cmp
mov
ret
ffreep
lahf
popa
jns
pop
and
nop
inc
aas
repnz
mov
repnz
lds
in
xor
mov
out
xor
push
in
fwait
scas
inc
stc
std
xchg
jmp
push
fstpl
in
add
scas
hlt
loope
lods
dec
sub
lea
scas
xor
lea
adc
adc
das
mov
pop
dec
in
jg
outsl
cmp
sub
lock
ror
repnz
jo
adc
adc
push
mov
arpl
pop
and
pushf
roll
insb
inc
xchg
hlt
jo
shl
mov
sbb
repnz
cld
scas
mov
pop
mov
jno
stos
sub
hlt
mov
stos
test
cmpsb
or
mov
or
jl
adc
inc
cmp
movsl
sbb
and
push
lods
roll
lock
adc
mov
and
inc
xchg
sub
ret
hlt
call
cld
stos
stos
lds
xchg
sub
mov
jbe
dec
cmp
lret
or
pop
pop
jmp
pop
adc
stc
test
out
fwait
cmp
mov
pop
das
mov
jecxz
xchg
pop
xor
cmc
mov
dec
jbe
bound
stos
mov
mov
mov
popf
xlat
test
enter
into
fsubr
bound
adc
lds
lds
xlat
popf
pusha
shr
xchg
rclb
repnz
jne
cmp
jbe
test
iret
cmc
jecxz
cmp
push
sub
std
or
aam
pop
or
imulb
pop
xorb
lret
mov
jmp
pop
sub
adc
add
rcll
xor
jecxz
insb
rol
push
mov
inc
push
inc
jmp
sbb
cmp
in
scas
or
pop
out
xor
data16
mov
popa
sbb
pop
test
fldcw
jns
jmp
jnp
je
das
push
sbb
das
sub
sub
jge
push
lret
sbb
add
and
pop
movsb
pop
jecxz
jo
jmp
sub
mov
adc
or
sbb
sub
and
dec
into
cmc
cmp
aad
sub
mov
cwtl
hlt
jnp
mov
leave
das
jo
fisubrs
hlt
adc
dec
fsubr
pop
ljmp
xor
mov
mov
jnp
fs
je
popa
std
dec
pop
int
pop
push
xchg
mov
das
add
inc
pop
mov
negl
loopne
les
out
push
test
push
xor
sub
ret
adc
mov
fistpll
stos
inc
icebp
dec
or
jl
push
call
mov
jo
cld
in
stos
leave
mov
push
sbb
adc
iret
xchg
sbb
jne
and
push
and
mov
ss
cld
pop
mov
push
add
out
sbbb
mov
cmp
shrb
addb
aam
pop
sub
movl
xchg
add
lds
lds
cmp
daa
inc
popf
sbb
lret
mov
sbb
push
mov
sbb
iret
ret
and
scas
inc
jl
hlt
push
iret
sbb
mov
jbe
jo
ret
stos
nop
sub
movsl
insb
stos
push
sti
jecxz
mov
fisubrs
adc
adc
mov
mov
and
sahf
sbb
out
mov
daa
or
and
testb
shlb
push
dec
mov
jp
rorb
jecxz
test
add
mov
mov
pushl
jmp
push
outsb
sbb
push
pushf
adc
js
lret
cltd
cmp
lods
mov
test
jl
cmp
leave
dec
movsb
sbb
repnz
mov
lea
cmc
pop
movsb
xor
iret
inc
mov
jb
mov
lcall
push
int
mov
int3
ret
outsb
sbb
mov
test
sbb
mov
dec
cli
push
xchg
lahf
cmp
add
or
push
sahf
imull
inc
push
sbb
rcl
shrb
xor
js
aad
adc
ficoms
add
xor
popa
xchg
out
out
dec
cmp
ficoms
fimull
inc
mov
mov
inc
and
fcmovnu
shlb
test
dec
scas
fcmove
mov
pop
adc
iret
mov
pop
xor
dec
lods
lret
xor
pop
xchg
cwtl
lods
leave
pop
imul
ljmp
pushf
mov
xor
jecxz
and
or
cmp
decl
mov
shl
bswap
pop
insl
add
imul
mov
push
pushf
out
jbe
ss
std
mov
jnp
test
xchg
mov
add
pop
ja
sub
scas
sbb
dec
dec
rol
pusha
jns
inc
es
inc
fcmovb
xchg
out
repz
aam
cmp
pop
jge
leave
mov
fistps
fldenv
subl
mov
lcall
add
psrad
mov
and
cwtl
inc
je
fisubrl
jo
fmuls
bound
lret
cltd
add
and
mov
xchg
jg
sbb
outsl
xchg
or
or
lcall
lahf
push
push
lods
jno
imul
push
lea
add
cmp
stc
leave
xchg
int3
jno
mov
arpl
jg
adc
push
sub
inc
xchg
scas
xchg
into
ret
jb
sarb
push
in
inc
xlat
movsl
std
gs
jecxz
pop
cmp
das
fwait
sbb
dec
shll
lods
loopne
insl
jnp
add
dec
outsb
lea
std
xchg
cmp
xchg
cmp
cmp
in
or
lods
xchg
leave
cmc
ja
out
push
fstps
sbb
rcll
test
jge
rclb
imul
fcmovb
incl
imul
mov
shll
movsl
sbb
lret
int3
loop
inc
hlt
stos
jne
popa
int3
fsubs
iret
es
test
push
lods
lock
mov
jno
xor
cmp
mov
lods
sbb
push
fidivl
pop
icebp
insb
or
ficoms
or
rolb
sub
sbb
enter
fmulp
popa
mov
mov
xor
xchg
mov
mov
cmp
dec
mov
sti
int3
mov
mov
sarl
lea
mov
mov
loopne
jl
enter
sbb
mov
sbb
fdivl
mov
les
and
lds
add
inc
xlat
jae
add
test
loope
mov
adc
push
pop
xchg
sub
insb
hlt
pop
repz
aas
mov
sarb
shll
adc
pushf
jns
fstpl
push
add
mov
xor
jecxz
addr16
imul
mov
sahf
movsb
loopne
loopne
inc
and
adcl
mov
fldl
inc
xlat
mov
sbb
movb
ss
scas
push
out
pushf
pop
repnz
test
xlat
mov
jae
sti
mov
mov
and
hlt
xchg
mov
sub
aas
push
insb
enter
int
jne
jl
data16
cmp
xchg
pop
stos
test
mov
xchg
mov
sub
lds
cltd
jl
cmp
push
lods
daa
mov
inc
ficompl
ss
dec
sti
leave
fsts
mov
ss
testl
jecxz,pt
lods
in
inc
adc
cmpsb
lret
xchg
inc
push
mov
cmp
into
xchg
xor
dec
or
mov
add
cs
sub
jb
ds
leave
in
fnstenv
mov
push
xchg
dec
shlb
push
ljmp
sti
ljmp
in
xchg
scas
mov
jns
lret
pop
cmp
das
std
dec
or
or
push
cmp
repz
aas
mov
shrb
or
ret
imul
scas
dec
jg
hlt
rcrb
out
or
cmpsb
jns
jns
or
repnz
fidivrs
mov
pop
repnz
loopne
ret
push
hlt
pushl
bound
or
inc
fcmovnbe
fcomip
jp
cmpsl
movsl
cmp
arpl
fcompl
xchg
addr16
das
jg
add
addr16
ficompl
cmp
jb
call
pop
lahf
repz
mov
push
inc
xchg
es
sbb
inc
fsubl
cmpb
fs
call
sbb
mov
cs
sbbb
std
jne
xor
scas
cmp
sbbl
std
popf
scas
mov
jnp
mov
xlat
hlt
xor
inc
int
adc
out
int
add
inc
dec
idiv
sbb
stos
sbb
sahf
sub
mov
sbbb
stos
shl
aam
mov
into
lahf
mov
stos
sbb
lods
mov
and
call
dec
jb
stos
outsb
pop
roll
sub
push
cwtl
leave
fs
sub
fucomi
stos
push
adc
sub
lods
dec
cmp
lods
sbb
jno
and
xor
roll
mov
adc
inc
dec
cmp
xorb
pop
sub
int
test
lea
data16
enter
push
rorb
bound
dec
jecxz
inc
inc
fwait
sub
lock
loop
cmp
mov
cmp
test
in
xlat
or
insb
cs
adc
jge
shll
cmpsl
les
cwtl
ret
andl
sub
or
mov
int3
or
pushf
push
in
int
rol
and
rclb
repnz
dec
mov
cmp
add
mov
jb
push
outsl
xchg
mov
cmc
mov
push
pop
fcmovb
aaa
add
dec
mov
and
ror
push
orl
lods
ja
test
inc
addr16
sbb
sub
pop
pushf
cmc
fldcw
scas
mov
mov
mov
and
ss
dec
pop
adc
ret
and
push
mov
insl
jg
les
push
pop
sbb
ficoml
leave
jbe
mov
pop
int
push
sbbb
push
mov
push
and
push
mov
in
xchg
pop
mov
mov
inc
out
adc
xchg
outsb
sbb
xor
ds
xchg
sub
cs
dec
incb
shr
sub
cmp
push
mov
mov
je
push
mov
adc
jl
sbb
sbb
leave
fnstcw
jno
sub
dec
jecxz
inc
int3
arpl
in
ss
ljmp
out
bound
test
nop
aaa
movsl
jbe
push
ss
and
jl
faddp
mov
ficompl
xchg
inc
rcll
out
sbb
inc
cmpsl
xchg
aam
enter
fldl2t
inc
sbb
or
lahf
adc
sti
sub
pop
push
pop
pop
inc
mov
jae
mov
inc
popf
gs
imull
pop
sahf
fs
aad
sarl
cld
lds
dec
mov
out
mov
mov
mov
clc
lea
push
rorb
scas
jne
addr16
out
test
mov
push
fcmovne
rcr
jb
and
sub
xor
pop
loopne
push
dec
stos
enter
dec
sub
stc
out
fsubp
push
add
jb
je
lcall
dec
je
and
popa
fiadds
mov
out
insl
jle
addr16
inc
lret
mov
inc
jecxz
mov
xchg
bound
sbb
into
and
rclb
mov
and
sub
mov
aam
or
mov
jne
mov
xchg
andl
sub
loopne
jo
icebp
add
mov
lock
pop
push
xchg
push
mov
lods
rcrb
xchg
mov
and
xor
push
push
in
mov
fldl
clc
rolb
sbbl
call
fisttpll
lahf
jbe
pop
push
into
xor
test
inc
in
jne
inc
push
and
sti
xor
ds
test
pop
push
fidivrl
add
mov
mov
iret
add
test
lds
lret
push
pusha
mov
cmpsb
nop
call
out
and
mov
incl
je
test
xchg
xchg
add
loop
adc
adcb
sti
and
je
mov
test
scas
pop
lret
sarb
lods
repz
mov
iret
jne
jle
xchg
addr16
sub
stc
adc
xorb
sub
jnp
inc
cmp
add
rcll
jg
inc
xor
and
sub
mov
mov
xor
xchg
lahf
orb
fnstenv
sub
lahf
dec
fimuls
jp
sarb
add
mov
jae
mov
mov
lea
pop
mov
inc
sub
out
das
mov
fildl
sti
out
int
add
mov
xchg
and
and
xchg
push
fdivs
adc
push
sbb
aas
cmp
cmp
movsl
cmp
fwait
push
or
and
loop
mov
mov
test
leave
je
cltd
scas
frstor
incl
pop
cmc
aaa
cmp
sub
call
sbb
adc
xor
lret
out
push
aaa
fisubrl
lock
mov
in
popf
pop
mov
shl
sub
pop
sub
lods
test
and
or
dec
sti
ljmp
enter
stc
adc
je
jl
mov
inc
cmp
movsl
dec
mov
jecxz
pop
out
mov
aad
or
js
sarb
arpl
pop
orb
push
inc
pop
in
arpl
sbb
divb
pop
daa
mov
push
ret
xor
cmp
loopnew
insl
lahf
rclb
ljmp
or
or
push
das
addr16
xor
fdivl
in
push
in
mov
pop
shr
pop
je
or
and
pop
sub
pop
dec
xorl
ljmp
repz
jle
adc
mov
xor
inc
or
and
in
xor
and
adc
mov
outsl
mov
adc
movlps
stc
testb
inc
xchg
sub
jp
mov
clc
aam
sub
ret
loop
mov
cmc
addr16
push
and
jne
imul
pop
nop
mov
sub
fidivs
hlt
jg
inc
fcmove
cmp
int3
popa
fadds
imul
inc
mov
es
daa
stos
mov
jg
add
insb
mov
cmp
pop
fiadds
xchg
pop
pop
loop
add
xchg
pop
adc
cwtl
xchg
and
mov
les
dec
xchg
and
sbb
adcl
xchg
dec
and
test
stos
popf
cmpsl
das
push
cli
inc
jg
push
imul
fwait
or
jg
mov
pop
and
cmp
add
push
cs
int
xchg
add
addr16
filds
ljmp
cmp
push
mov
popa
clc
test
dec
and
imul
fistps
jmp
inc
and
dec
xor
in
loope
mov
sbb
xchg
adc
push
sub
and
lea
int
je
repnz
sbb
xchg
cmp
xchg
je
push
cmpsb
mov
sti
jecxz
inc
jg
xlat
sbbb
mov
mov
popf
stos
fs
stos
dec
cli
and
cmp
imul
mov
jg
shll
push
mov
fildl
sub
push
xor
pop
jb
cmp
fists
xor
sti
xchg
lods
jmp
push
aad
out
push
mov
push
stos
int3
sub
mov
push
lahf
pop
push
mov
inc
and
bound
add
or
mov
iret
in
cld
push
mov
sub
cmp
arpl
shlb
jb
lds
inc
sub
fiadds
inc
fsubl
test
out
pusha
std
xchg
cmp
xlat
call
mov
mov
in
jg
call
and
out
jmp
sbb
mov
add
sbb
and
or
mov
mov
cmpsb
inc
aad
ds
dec
movsl
sbb
jns
nop
stos
repz
insl
or
hlt
sarb
add
or
sbb
cmp
nop
jae
in
fnstsw
fisubs
mov
sub
mov
iret
xor
clc
push
mov
sbb
xchg
mov
jo
mov
rol
add
les
shl
push
out
push
mov
iret
inc
outsb
adc
test
call
lods
fdivs
or
dec
pop
lcall
xchg
sub
insb
mov
jbe
imul
jbe
xor
mov
dec
push
sbb
pop
sub
iret
and
add
in
xchg
lcall
mov
aam
test
ret
enter
int3
dec
jecxz
adc
inc
xchg
dec
pusha
and
popa
cmp
cmp
or
insb
sub
repz
jecxz
add
lret
xchg
test
popa
jmp
jnp
xchg
sbb
xlat
dec
dec
mov
scas
ror
lds
xchg
sbbb
mov
dec
jmp
dec
add
jno
scas
stos
orl
je
daa
scas
bound
xor
dec
inc
xchg
je
cmp
popf
pop
ret
or
cmpb
outsl
in
push
push
dec
aam
mov
push
inc
push
inc
rol
aam
mov
movsb
sbb
add
popf
mov
loopne
mov
je
jle
push
enter
pusha
ljmp
mov
fisttps
sbb
mov
shll
mov
mov
int
mov
into
xchg
mov
inc
xchg
xchg
repnz
idivb
in
mov
jnp
lea
adc
or
cmc
into
leave
loope
sub
sbb
test
pop
mov
mov
jg
jecxz
jecxz
shl
push
cld
xlat
push
mov
add
inc
mov
xor
xor
in
ret
pop
clc
addl
cmp
fnstenv
scas
pusha
test
add
sahf
push
dec
incl
das
rol
popa
push
ja
loop
shrb
push
shl
rclb
sti
cmp
push
cmc
fsubr
adcl
dec
or
dec
nop
call
cmp
shrb
es
xor
push
mov
mov
dec
movsl
shrb
je
cmp
mov
or
sahf
sbb
sbb
dec
jbe
dec
ret
mov
inc
xor
jl
scas
test
popa
add
call
or
stos
push
jbe
iret
loope
fwait
testl
adc
lahf
ss
push
push
ljmp
mov
or
sub
sbb
test
and
pop
out
push
movsb
add
jno
adcl
adc
push
jno
xchg
movsl
xor
mov
mov
pop
sub
popf
add
iret
add
enter
nop
mov
enter
insb
xchg
ret
jo
hlt
aaa
orb
int
xlat
xor
fsts
xor
icebp
cmp
xchg
stos
scas
fidivrl
mov
mov
fbstp
sbb
sbb
xchg
nop
xor
scas
adc
jle
and
cmp
push
test
and
je
mov
xchg
ja
adc
loop
sub
mov
shll
jne
aaa
xor
jge
dec
mov
int3
fbld
repz
add
add
lods
filds
scas
inc
jnp
sub
adc
data16
push
out
ret
or
adc
mov
or
xor
ss
xor
jge
mov
sbb
pusha
mov
out
cmp
cltd
inc
dec
nop
dec
push
push
aaa
movb
pop
mov
add
pop
jp
inc
mov
push
pop
icebp
or
xchg
outsb
sub
cmp
imul
add
out
jp
mov
test
mov
pop
adc
pop
fcoms
sarl
ffree
mov
dec
mov
sub
cltd
popf
imul
shlb
das
adc
rcrl
xor
mov
ret
and
cmpl
push
rorb
jp
in
sub
sbb
or
imul
imul
mov
loopne
jge
out
les
jg
cmp
pop
inc
nop
call
or
daa
add
jb
pop
popl
cmc
jl
xor
insb
popw
jecxz
adc
ss
cmpsb
push
xor
cs
cmp
sub
pop
int3
lret
lahf
jbe
sbb
pop
lock
xchg
loop
jo
push
in
push
cmp
mov
scas
add
xchg
dec
inc
add
outsb
call
mov
push
xor
lret
pop
arpl
arpl
push
sahf
lods
adc
push
mov
mov
jp
loop
jbe
cmpsl
ds
out
inc
fstps
fstpt
xor
hlt
stos
sbb
xor
bound
xchg
cmp
sub
ja
cs
push
jg
sbb
xor
lods
jo
std
xor
sub
mov
inc
iret
jmp
cmp
movsl
pop
xchg
xchg
cmpb
lods
loope
popf
dec
dec
mov
jl
mov
rorb
sub
push
pop
ja
dec
push
test
mov
shl
test
ds
rolb
add
clc
fwait
sti
cld
fadds
hlt
sub
xor
lret
jns
fisttpll
sbb
fbld
into
gs
jb
xchg
mov
mull
sbb
adc
xchg
std
mov
movsl
dec
mov
push
mov
dec
fsubrs
cltd
xorb
mov
rcr
in
dec
lea
jl
nop
sub
out
mov
aad
rcrl
es
push
mov
pop
divb
add
leave
jmp
xor
insb
ret
and
dec
dec
push
inc
incb
cmp
xor
movsb
pop
lods
rolb
sarb
mov
sbb
data16
bound
xchg
out
inc
inc
sahf
jae
and
inc
inc
cld
xor
sti
push
sti
imul
cmpsb
adc
pop
cwtl
popf
dec
jno
out
ljmp
inc
push
pop
scas
movsb
out
jbe
inc
ss
add
sti
popa
push
push
sbb
rorb
inc
push
xchg
jns
lcall
add
scas
inc
and
out
jmp
int
xlat
xchg
push
push
push
sbb
cwtl
mov
jmp
dec
push
lods
inc
fcmovu
or
fisubl
mov
xchg
sub
push
cld
inc
adc
dec
pop
cltd
es
cmp
fwait
add
sbb
cmp
in
negb
push
mov
aas
movsl
or
sbb
sub
jg
xor
lock
sub
jl
lds
mov
cmp
fs
fs
and
add
cmp
daa
xchg
adc
mov
aaa
pusha
ds
iret
leave
andl
lahf
decl
mov
cmpsl
xor
int
in
push
stos
xchg
sbb
mov
repz
notrack
repz
jl
mov
test
pop
mov
data16
mov
adc
dec
icebp
fwait
cmp
and
lds
std
movsb
cmpsb
mov
cmpsl
adc
lds
daa
inc
imul
pop
xor
into
lods
jle
fistps
mov
std
sarl
xchg
iret
loope
fcomi
lahf
pop
fisubrs
or
push
cmpsl
jle
adc
and
fcomip
mov
sbb
mov
adc
jo
mov
cmp
mov
lock
fstpl
xor
data16
and
add
jne
movsb
sbb
repz
inc
push
int
mov
or
pop
aad
je
mov
and
add
adc
outsl
mov
int3
sahf
hlt
push
and
push
push
cmp
sbb
jge
xchg
sbb
sub
sbb
xchg
hlt
lea
cli
mov
ljmp
xor
sbb
inc
sub
mov
or
fwait
push
sbb
aam
xor
in
mov
andl
cmp
in
subl
or
cmp
insb
test
mov
sbb
into
gs
xchg
sub
adc
iret
mov
or
aam
insl
mov
fidivrs
sbb
cmp
mov
aas
jmp
mov
insl
insl
add
inc
or
push
jp
fisubrl
push
mov
cmc
or
jbe
cmp
pop
xor
js
mov
sub
cmp
mov
ljmp
in
cmpsl
call
sbb
pop
outsb
cld
rcrb
cmp
sub
cwtl
orb
inc
jmp
dec
xor
pop
iret
mov
mov
lret
fs
mov
fistps
push
pop
nop
add
cmp
and
scas
push
test
scas
xor
daa
cli
lea
dec
daa
lret
gs
cmp
xor
jle
subb
sahf
mov
jnp
rclb
out
xor
xchg
adc
mov
mov
pop
lcall
xchg
fsubl
andl
clc
iret
inc
and
inc
scas
add
inc
push
mov
push
loopne
mov
dec
aam
xor
repnz
lret
loope
inc
aam
fisubrl
ljmp
mov
out
add
sbb
sarl
test
mov
shr
jmp
adc
ficoml
mov
shrb
lods
data16
lret
enter
adc
and
inc
ljmp
mov
out
and
outsl
or
mov
or
cs
mov
sub
or
mov
sub
jecxz
jle
lds
sbb
lock
jecxz
dec
shlb
mov
in
mov
lea
mov
fidivrs
cmp
loope
dec
dec
cmc
xchg
outsb
aad
cmc
fptan
insl
fbstp
jp
dec
outsl
daa
jbe
sbb
adc
lods
sbb
popf
mov
adc
jae
push
and
test
xor
cmpsb
test
sti
das
adc
push
jge
decl
inc
enter
pop
push
clc
inc
out
negl
lahf
mov
push
les
sub
fwait
push
ljmp
or
add
hlt
sub
and
push
jl
cld
enter
adc
jns
nop
arpl
adc
or
mov
xchg
jge
or
sub
packssdw
scas
int
jns
cmpsl
mov
mov
fisubs
pop
js
aam
fwait
loop
call
out
inc
add
mov
pop
fcompl
sbb
jb
cmp
and
and
outsb
outsb
ja
and
pop
les
jne
cwtl
xor
sahf
stos
je
xchg
jns
adc
outsl
xor
mov
push
cmc
and
push
dec
mov
cmp
and
ds
or
cmp
mov
data16
sub
std
jo
add
ds
popf
cmpb
outsl
mov
cmpsl
leave
pop
xlat
mov
in
pop
jb
cmp
test
test
inc
mov
outsl
lods
mov
arpl
stc
dec
dec
and
adc
push
sarl
add
jg
mov
and
stos
or
out
loopne
add
testl
or
xchg
rsqrtps
sub
mov
fldenv
js
jno
scas
add
sbb
movsl
mov
adc
cmp
test
mov
push
sub
jns
push
repnz
sub
lahf
pop
jp
pop
jo
xor
dec
sahf
in
repz
stc
push
cmpsl
cltd
test
ret
daa
inc
cmc
out
lret
dec
xchg
inc
inc
xchg
loop
ficoms
andb
hlt
fdivrl
push
movsb
mov
fdivl
xchg
or
xchg
push
sahf
xor
xlat
test
stos
xchg
jb
push
xchg
sbb
andl
or
push
std
sbb
jno
jge
dec
lods
jmp
add
and
and
pop
cwtl
add
cmpsl
jne
iret
ffree
push
mov
xchg
loop
lods
das
shl
pusha
into
out
imul
jmp
adc
jmp
sbb
ja
lock
jb
or
mov
push
jne
cmp
fdivrs
cmp
add
mov
xchg
xlat
fistps
dec
xchg
or
mov
adcb
fldcw
mov
fadd
jnp
inc
cltd
outsb
fsubl
lret
push
xchg
push
jecxz
cs
inc
and
jb
mov
mov
repnz
lret
scas
ret
mov
stos
insb
mov
daa
test
pop
test
loope
icebp
mov
addr16
or
or
push
pop
adc
int3
roll
fnsave
sbb
dec
push
and
icebp
xor
aas
popf
mov
inc
push
jg
jbe
push
sbb
stos
mov
xor
sub
enter
test
mov
jge
fisubs
cmp
loop
or
sarl
dec
sub
pushf
xor
pop
lahf
adc
aaa
cli
push
lcall
test
je
stos
imul
mov
pop
fcomps
mov
aas
or
xor
sarb
loope
push
call
cs
xchg
xor
push
vmread
fmuls
mov
cltd
or
icebp
cmpb
cltd
pop
lret
stos
adc
aad
in
xor
movsb
xlat
pusha
cld
fwait
sti
in
xor
mov
or
jecxz
push
adc
dec
adc
stc
fwait
lret
sbb
and
inc
pop
paddw
pushf
call
or
scas
mov
ds
imul
mov
push
leave
push
imul
or
pusha
shlb
fistl
xor
mov
mov
nop
xchg
stos
xchg
mov
cmp
jl
xor
mov
shlb
loop
push
push
dec
loopne
push
and
hlt
addr16
in
push
jge
push
out
pop
xlat
loopne
mov
in
fwait
mov
dec
jg
aad
inc
adc
dec
add
add
lea
jmp
jecxz
dec
push
mov
xor
imul
cmpsb
cmp
dec
mov
hlt
addr16
lock
idivb
push
xchg
loop
int
jae
clc
xor
leave
mov
pop
mov
or
insl
mov
mov
push
cmpsl
mov
test
push
imul
push
jmp
es
pmullw
pop
push
fmul
out
mov
sub
mov
and
xor
jns
jmp
shrl
sbb
push
dec
lock
int3
outsb
fiadds
inc
hlt
mov
xchg
jnp
leave
lock
cmp
orl
lds
pusha
subb
nop
mov
xor
dec
sub
subl
push
cld
mov
mov
faddp
dec
push
or
sbb
add
jge
mov
xchg
out
popa
lret
jmp
bound
sbb
into
bound
add
in
rolb
aad
sbb
mov
loope
popf
stos
cmpsb
add
xor
pop
xor
and
pop
and
jne
lock
jge
push
pop
arpl
dec
pop
mul
pop
add
jmp
movsb
imul
out
psrlw
sub
xchg
jae
sbb
mov
push
mov
insl
in
adc
push
mov
dec
mov
dec
in
fimuls
mov
scas
adc
cltd
add
aaa
add
and
lods
inc
pop
push
mov
jbe
inc
add
add
test
outsl
xor
xchg
mov
or
ds
dec
mov
cmp
movsl
and
sti
jl
sub
inc
fstps
xor
jg
adc
out
xor
jo
cmp
in
and
mov
mov
sbb
int3
push
mov
mov
cmpsb
arpl
push
sbb
nop
dec
es
cli
ret
inc
outsl
in
mov
push
and
pusha
xchg
insl
cmp
add
jp
sbb
cmp
push
mov
or
dec
loop
cltd
push
out
cmpsb
dec
imul
pop
and
cmp
mov
cmp
inc
push
add
mov
jae
lea
push
xchg
scas
aad
xlat
icebp
out
lret
or
rcll
jno
inc
adc
es
aam
push
stos
inc
loope
iret
fdivs
lods
mov
or
out
mov
ret
sub
fsincos
push
pop
lods
mov
fdivl
jl
pop
insb
outsl
popf
push
repz
jns
pop
fmul
xor
sub
mov
push
push
ljmp
jno
aas
std
mov
test
sbb
scas
inc
dec
add
jne
inc
das
sti
mov
mov
xchg
pushl
pushf
daa
lcall
inc
inc
loop
mov
inc
xor
popa
fldenv
out
inc
add
in
test
repnz
lret
stos
or
es
push
lahf
daa
mov
or
nop
daa
jecxz
test
add
sub
prefetch
or
cmp
mov
and
pop
cltd
cltd
adc
mov
lret
sti
fwait
and
shrb
cmp
aaa
fs
jg
test
cltd
cmp
neg
popf
lods
out
hlt
xchg
int
mov
repz
pop
mov
xchg
mov
inc
popa
and
out
xor
inc
jnp
mov
gs
xchg
ja
jg
mov
mov
mov
push
test
cmc
lock
dec
mov
lods
mov
push
adc
imul
cmp
cli
inc
adcb
lock
mov
popl
rorb
sub
je
xlat
popf
inc
mov
jmp
cli
int3
mov
dec
notb
int3
sahf
icebp
movsl
xchg
push
xlat
test
push
lock
cmp
sub
pop
sti
jmp
pop
ja
scas
test
jne
mov
fisttpll
ja
mov
and
adcb
rclb
pushf
adc
js
lret
lcall
jne
out
test
inc
lea
inc
xchg
jmp
xor
lock
pop
ljmp
iret
adc
imull
mov
movsb
cmc
mov
loope
mov
fildl
cld
scas
dec
je
lds
int
out
in
repnz
movsb
xchg
pusha
jb
rorl
sub
aas
loope
mov
mov
lods
mov
or
cmp
cmp
sub
pop
in
add
movsl
push
sbb
shr
aas
push
xor
inc
cmp
icebp
out
inc
lret
out
test
roll
jns
bswap
pop
xchg
xor
sub
divl
je
stos
cmpsb
sbb
jae
jge
iret
xchg
pop
in
sbb
in
mov
pop
ret
popl
mov
cmp
cmp
pop
push
or
cmpsb
in
and
movsb
mov
push
dec
push
jbe
jb
mov
jmp
inc
flds
mov
xlat
rcrl
dec
aaa
mov
xchg
int3
popa
lods
xor
mov
aaa
hlt
cmc
insl
push
or
addr16
sti
sub
ret
or
push
lret
inc
test
fldl2t
cmp
cmp
clc
mov
add
inc
fisttpl
loope
mov
xor
fisubrs
imul
insb
jmp
stc
nop
ret
repz
loop
mov
adc
xchg
jne
mov
cmp
scas
imul
fldenv
jge
stc
xchg
xchg
mov
data16
inc
rcrl
mov
jnp
lcall
and
pop
lock
inc
sub
sub
or
cvtps2pd
stos
es
ret
pop
faddl
or
xchg
mov
jb
jl
mov
mov
pop
or
fcmovne
bnd
mov
stos
int3
stos
inc
fmul
jae
mov
js
jmp
and
hlt
inc
stos
outsl
dec
add
lods
cmp
pop
inc
aaa
or
inc
fdivs
ficoml
jne
jae
mov
ret
cmp
jecxz
call
int3
and
pop
out
pop
rorl
es
add
dec
add
fsts
mov
xchg
add
sub
pop
pop
dec
daa
mov
scas
rorl
add
mov
xchg
mov
mov
sub
add
or
imul
lcall
and
ficoms
scas
xchg
jo
enter
cmp
in
pop
sbb
sbb
loope
ss
add
xor
and
xchg
mov
xchg
inc
mov
push
push
out
repz
jbe
inc
das
test
fld
sub
fwait
test
push
push
mov
out
mov
pop
mov
dec
dec
push
cmpb
in
lret
pop
xor
jb
add
add
cmp
xor
inc
data16
enter
sub
dec
mov
test
mov
cmp
mov
lcall
repz
inc
push
mov
sbb
bound
nop
out
sbb
mov
fwait
or
adc
xchg
dec
mov
aaa
pop
out
adc
movsb
call
jo
popf
cmp
loopne
stos
pop
jb
add
mov
jno
jb
jno
sub
push
mov
adc
push
push
ret
sbb
cmp
in
mov
mov
insb
fsubrl
repnz
sub
mov
mov
pop
push
and
cld
enter
test
sahf
inc
or
in
icebp
mov
xchg
sbb
xchg
jno
dec
fildll
push
out
negb
mov
mov
stos
clc
adc
lods
and
test
jecxz
sub
lods
divl
inc
push
mov
gs
addr16
repnz
inc
shl
cs
cld
pop
aad
inc
mov
push
sbb
fcmovne
outsb
fbld
mov
dec
sbb
lds
cmp
mov
xchg
sub
js
or
stos
bound
cmp
pop
es
cmp
cmp
mov
mov
pop
dec
cmp
test
mov
mov
pop
cmpsl
out
mov
push
fdivrs
sub
cli
push
fistps
cmp
adcl
pop
aaa
fadds
inc
gs
xor
add
loopne
mov
add
lea
aam
inc
in
jb
iret
lret
mov
mov
adc
xchg
mov
loopne
ret
int3
leave
das
cmc
mov
jle
mov
jecxz
jg
sub
inc
stc
mov
sbb
fstl
jns
inc
les
loope
sbb
lcall
xchg
lea
mov
fimuls
repz
sub
or
nop
imul
xchg
dec
xchg
scas
repnz
int
fsts
gs
or
add
imul
mov
push
loop
loopne
mov
and
mov
and
int3
and
popa
dec
dec
or
mov
rcr
lahf
cmc
push
pop
insb
dec
repnz
add
xchg
mov
mov
xor
pop
xchg
xchg
call
cmp
or
repz
xor
inc
push
push
mov
adc
ror
xor
ds
pop
sbb
loop
xchg
insl
add
xadd
jae
xor
cld
and
fnstsw
pop
or
aad
xchg
in
out
fwait
into
gs
push
jmp
xor
mov
dec
std
xchg
cmpsl
imul
sarb
fimuls
mov
loopne
adc
adc
or
movsl
or
inc
and
inc
dec
addr16
iret
pop
test
and
clc
inc
scas
push
mov
pop
insb
js
cs
lret
lock
nop
sahf
movb
in
movsb
int
enter
push
ss
cwtl
orl
jg
push
cmp
jl
sub
mov
sub
movsb
inc
loopne
jecxz
xor
push
sub
pop
cmp
scas
pop
loop
in
loopne
std
sub
das
add
not
pushf
icebp
inc
push
jo
xor
imul
lcall
dec
cmc
mov
in
ljmp
je
mov
fwait
inc
mov
movsb
aas
and
jecxz
aad
stos
or
inc
push
mov
aas
outsl
clc
pop
hlt
sub
xchg
and
dec
ret
pop
lods
sar
rcrb
negb
jae
sti
leave
cmpsl
mov
sub
push
jno
dec
xchg
mov
call
or
nop
imul
int3
fwait
sti
mov
fcmovnb
pop
cmpb
repz
in
mov
leave
dec
inc
loope
mov
repz
xchg
nop
cmp
push
push
mov
mov
push
mov
adcl
add
mov
push
push
sub
lea
push
pop
lret
xchg
es
test
mov
ss
out
pop
scas
xor
xchg
lods
jmp
inc
jmp
xor
test
inc
mov
arpl
mov
pop
xchg
ljmp
dec
sbb
and
jb
fsin
stc
sub
mov
push
in
icebp
dec
xor
add
add
mov
lods
pusha
neg
push
mov
adc
fidivl
aad
pop
repnz
idiv
xchg
icebp
lea
cs
cmpsb
les
rcll
fs
mov
std
dec
adc
in
pop
push
int3
pop
sub
lods
fldcw
sbb
ret
pusha
loope
mov
flds
or
fnstenv
pop
ds
cmp
dec
scas
sti
inc
loopne
int
mov
push
mov
fwait
jle
sbb
popf
dec
test
js
hlt
lahf
push
loop
decl
stc
push
lcall
and
push
inc
stos
jle
jne
arpl
loope
addr16
add
mov
or
daa
xchg
inc
cmc
pop
mov
push
cmc
mov
fisttpl
cmp
xor
jmp
pushf
mov
sub
lods
aad
loope
test
icebp
adc
and
xlat
pop
stc
popl
add
in
pop
push
push
mov
pop
push
sub
mov
ret
jnp
adc
addr16
push
xor
int
out
xchg
adc
xchg
sub
add
mov
dec
out
cld
or
stos
in
xor
jmp
das
mov
test
jb
xchg
sti
rclb
add
fdivrl
adc
sub
pusha
add
scas
xchg
ds
cmpsb
dec
or
sti
scas
sahf
movsb
pop
dec
jns
sbb
lea
cwtl
adc
shrb
pop
pop
lods
test
lods
and
into
xchg
fnstenv
sarb
ffreep
imul
mov
pop
int3
jno
mov
dec
mov
mov
test
mov
xlat
xchg
and
add
mov
lret
ret
cmpb
inc
mov
fwait
and
and
mov
cmp
cwtl
decb
movsl
js
cmp
dec
pminub
or
push
or
mov
mov
out
lcall
sbb
pop
in
loop
iret
es
mov
loope
sbb
push
sub
xor
push
jge
mov
in
sbb
and
imul
dec
cmp
and
sarb
push
in
xchg
cmp
int
leave
pop
dec
cmp
pop
ds
jno
mov
leave
aam
add
pop
cmpsb
mov
jg
cs
and
aad
mov
ret
adc
mov
loopne
jnp
aad
ja
push
jp
push
nop
adcl
ds
sub
iret
jae
ljmp
test
xchg
xchg
xor
das
pop
cmp
xchg
daa
dec
dec
push
in
addl
sub
iret
or
sub
imulb
into
jge
je
scas
inc
pushf
mov
add
fbld
mov
lods
inc
inc
ret
mov
fmuls
into
lcall
sbb
and
movsl
dec
sbb
out
shll
and
pop
add
or
xchg
fdivrl
and
sahf
cmp
roll
jb
rclb
lds
add
fldlg2
push
or
aas
mov
icebp
ljmp
adc
cmp
xchg
pop
sub
mov
leave
mov
in
cmp
ret
jp
in
xor
sbb
in
cmp
pop
cmpsl
cmp
in
mov
cmc
les
dec
mov
mov
sbb
add
in
mov
inc
addl
dec
int
sub
xorb
mov
sub
insl
pop
scas
sahf
test
aas
sbb
stos
lret
arpl
mov
push
cs
push
mov
jbe
or
call
dec
jle
mull
cmp
push
pushf
pop
pop
cmc
mov
inc
and
jl
mov
jo
mov
loopne
dec
pop
imul
pop
add
mov
xchg
mov
cmpb
add
jnp
stc
xchg
sbbb
and
test
jnp
cmp
inc
sbb
push
cmp
add
call
inc
mov
movsl
mov
mov
test
mov
mov
daa
xchg
sarb
jo
stos
xorl
aam
hlt
xor
xor
mov
add
bound
data16
clc
ss
xor
xor
ss
lds
dec
rclb
fucompp
xchg
lds
or
cmp
add
and
cli
mov
ljmp
jne
sahf
ret
pop
push
or
pusha
stc
out
dec
mov
fldcw
mov
sbb
mov
idivb
sbb
ds
xchg
xchg
out
fiaddl
shl
popa
add
mov
cli
gs
test
or
dec
fwait
aam
adc
stos
push
xor
mov
mov
rcrl
push
dec
and
push
dec
pushf
cmc
rorb
movsb
mov
add
ret
rclb
sub
cwtl
cmp
mov
pop
cltd
xor
daa
mov
fisttpl
or
cmp
sub
cmpsb
int
fidivrl
mov
and
ja
jns
sahf
inc
enter
pop
and
or
call
inc
call
int
xlat
arpl
fidivrl
out
pop
sbb
ret
mov
int
inc
imul
jg
imul
mov
cltd
out
lahf
call
xor
iret
data16
sbb
xlat
rorl
push
sub
adcl
ljmp
mov
pop
mov
xchg
dec
pop
testl
aaa
push
jecxz
sbb
insb
jmp
cmp
and
outsl
aad
inc
pop
cwtl
xchg
mov
cwtl
inc
or
cmp
icebp
sub
pushf
jg
scas
lds
loop
cmp
out
push
pushf
xchg
dec
xor
jae
jb
mov
xchg
push
loopne
nop
xchg
arpl
lret
pop
mov
dec
jbe
jno
or
cmpsb
mov
js
fst
sub
cmpsl
add
je
repz
ror
mov
arpl
das
adc
xchg
ljmp
xchg
sbb
or
ffree
rorb
mov
cmp
push
mov
adc
and
addr16
jg
mov
and
fcmovnu
ret
sbbl
jns
jae
xchg
pop
mov
sbb
lea
adc
cmpsb
xor
inc
xchg
xchg
cmp
mov
and
inc
xadd
repz
repnz
test
insb
enter
ss
aad
loopne
xchg
test
add
ja
and
push
pop
push
into
sub
sbb
dec
dec
cmp
pop
mov
gs
or
cltd
cmp
jecxz
out
and
adcl
adc
pop
ja
fsubs
outsl
mov
sub
shll
mov
mov
icebp
push
outsl
push
xchg
adc
fwait
scas
xor
sub
mov
cmp
jle
pop
mov
test
or
lret
cmpsb
add
in
js
pop
lds
je
xchg
pop
repnz
sti
and
data16
mov
testl
xor
rorb
stc
jle
mov
cmp
mov
rcl
andb
jno
sbbl
jne
jmp
std
in
xchg
dec
pop
mov
repz
sbb
pop
mov
ja
cmp
out
fcomp
pop
ss
loop
adc
jno
test
clc
lahf
sar
xchg
add
sbb
mov
push
pop
jb
cmpsb
push
jmp
mov
lcall
and
fistpl
scas
inc
out
mov
and
mov
jb
sbb
push
jnp
enter
xor
sti
fbstp
xlat
mov
cmp
xor
push
and
sbb
push
xchg
in
dec
js
aaa
push
sbbb
jno
adc
cmp
and
push
cvtdq2ps
cs
xchg
icebp
mov
mov
popw
stc
imul
inc
nop
dec
xor
bound
enter
cli
lods
and
jmp
lret
shll
mov
fidivs
and
icebp
aas
push
jno
mov
inc
mov
cmp
mov
inc
inc
loope
into
cmp
sbb
sbb
mov
scas
and
sbb
jb
clc
cmpsl
rcr
mov
scas
aaa
jnp
pop
sub
movb
daa
inc
jle
movsb
xchg
or
xor
pop
xor
cmp
or
dec
clc
jns
sub
das
stos
test
sub
dec
pop
lea
mov
hlt
mov
es
rcr
mov
fdivs
movsl
cmp
adc
cmpsb
xorl
vfmadd132ps
ljmp
ss
adc
pop
dec
aam
xchg
ret
add
pop
dec
or
movsb
jg
add
pop
cmp
dec
andb
aad
xor
std
adc
or
out
cmp
and
sbbb
mov
jns
ss
jle
add
sar
lock
inc
jmp
lahf
pusha
in
shr
jl
fmul
rorl
out
dec
dec
inc
popf
je
lahf
fildll
sub
xchg
inc
sub
pop
bound
fidivs
jecxz
cli
aam
push
sbb
inc
stos
sbbl
sbb
out
fdivrl
push
or
enter
pushf
pop
iret
mov
imul
out
orl
jecxz
in
adc
mov
adc
lea
fcoml
inc
mov
into
jno
mov
mov
test
lods
sub
jbe
fcmove
nop
stos
jecxz
xorl
mov
add
mov
xchg
int3
fs
jecxz
ss
jmp
sbb
xchg
sub
cmp
lahf
imul
xlat
test
test
loopne
add
jg
mov
xchg
xor
mov
jno
push
and
pop
repnz
jno
cmp
pop
cmp
cmp
lock
dec
dec
add
adc
lcall
insb
push
add
or
xor
es
push
pusha
fildl
loopne
dec
cmp
cmpsb
in
out
bound
mov
mov
ss
push
or
cmpl
sar
cmp
into
sbb
and
test
fisubrl
popa
popa
fcmovne
or
scas
in
stos
push
cli
add
imul
fs
add
sarl
jge
jl
and
pusha
push
stos
jg
xchg
call
inc
loop
dec
pop
cmpl
div
and
mov
jo
mov
arpl
push
ljmp
adc
pushf
test
ljmp
cltd
and
nop
mov
je
ja
addr16
test
xchg
ljmp
out
jae
daa
data16
fsubrs
daa
std
pop
pop
jbe
ds
mov
pop
mov
push
inc
sub
cmc
leave
int
js
lcall
xchg
add
insb
addl
fiadds
mov
es
xchg
aam
pop
mov
sbb
xor
cltd
push
dec
mov
and
std
addr16
pushf
imul
outsb
aad
push
xchg
cwtl
jb
xor
fbld
pop
mov
mov
mov
aas
dec
dec
ljmp
sbb
insb
and
mov
out
inc
push
cmp
sub
sbb
in
dec
sbb
sti
pop
cmp
ds
mov
insl
sahf
sbb
out
jae
and
pusha
xchg
xchg
push
outsb
ret
mov
insl
push
cmpl
mov
pusha
and
dec
sub
add
scas
jg
adcb
fldt
add
movsb
mov
outsb
cmp
out
std
stos
lods
int3
fsubp
scas
inc
sbb
shll
pusha
bound
and
push
fisttpll
shrb
xor
mov
adc
pop
icebp
aaa
iret
and
iret
fldt
int
lock
push
loope
pop
sub
pop
add
xchg
es
mov
cmp
movsb
mov
fcomps
pop
inc
imul
cmp
jo
mov
inc
ds
dec
sub
lcall
inc
or
xchg
repz
jg
into
mov
icebp
outsl
es
sarb
push
fs
mov
in
sbb
cmp
aad
insb
jg
stos
cwtl
lcall
insb
vpcmov
dec
xlat
jg
aad
bound
xor
mov
cmp
out
xchg
mov
mov
sbb
sbb
lods
xor
cmpsb
add
xlat
sbb
inc
movlps
std
dec
jg
xor
mov
mov
das
aaa
mov
or
pop
fld
leave
push
inc
imul
scas
dec
push
inc
inc
mov
inc
std
fldt
fs
movsl
ss
or
ja
cmp
out
push
push
fstpl
or
inc
push
loope
sbbb
outsb
test
loopne
fidivrs
stos
inc
arpl
les
xor
loop
and
push
xor
fdivl
mov
jns
call
shll
gs
out
adc
push
or
inc
cmp
lret
xchg
gs
test
jne
jo
shlb
mov
data16
fistps
xchg
mov
adc
in
or
flds
adc
jo
fisttpll
sbb
mov
addr16
pop
lret
je
add
add
test
add
push
stos
popa
mov
add
push
xchg
jne
lock
mov
pop
push
push
in
mov
aaa
daa
lods
data16
push
ud0
lods
sti
sahf
clc
bound
dec
xlat
mov
cli
sbb
movsl
pop
dec
jle
cmc
vpaddusb
fnstcw
int
jge
lods
sub
ror
in
test
mov
fnsave
shrl
insl
jmp
out
cmpl
or
adc
dec
xchg
xchg
and
or
push
faddl
out
bound
adc
xor
lahf
ja
in
dec
mov
sub
out
push
xchg
xor
or
loop
mov
popf
ret
lret
and
mov
das
leave
sbb
mov
push
ret
sub
fcompl
out
inc
jmp
push
jbe
shrl
adc
movsb
ror
fsubrl
scas
add
xlat
cwtl
dec
mov
cs
pop
mov
ja
and
push
stos
xchg
sub
sbbb
mov
mov
popf
cmpsl
lea
or
dec
mov
xchg
xlat
xchg
adc
mov
push
jno
inc
mov
fdivrs
lods
and
rolb
add
sti
xchg
jle
in
ret
iret
or
or
aam
sub
adc
movsl
gs
ljmp
xor
movsl
cmp
fs
jmp
cwtl
out
arpl
cmp
stc
fldenv
lret
lcall
cmp
sub
sbb
out
orb
jecxz
clc
adc
sub
lret
cmpl
or
test
out
push
adc
daa
mov
fsubrl
imul
aam
pop
push
push
pushf
iret
cld
xor
mov
mov
cltd
dec
cwtl
push
xlat
cwtl
movsl
cltd
pop
sub
imul
mov
lret
dec
loope
jg
push
out
adc
clc
pop
mov
sbb
jo
outsb
or
mov
push
fsub
push
mov
leave
mov
dec
jl
outsl
not
pop
int3
movsb
cmpsb
xor
or
push
dec
stos
dec
pop
imul
testl
xor
adc
popa
inc
dec
and
test
jl
fisttpll
add
andb
mov
scas
push
movsl
pop
in
push
jno
cmp
xor
pop
push
lods
fldcw
and
xchg
mov
or
andb
mov
inc
pop
ljmp
je
mov
pop
sub
lcall
inc
clc
mov
push
add
loop
std
add
das
push
lcall
int3
out
xor
jmp
adc
movsl
repnz
xlat
xchg
mov
in
pop
les
dec
mov
or
imul
hlt
int
add
mov
and
push
fwait
insb
js
popf
add
jns,pt
xchg
lahf
lcall
push
push
out
xor
arpl
push
jbe
jmp
ret
rolb
cmpsb
pop
pop
mov
jbe
add
push
mov
cli
mov
and
cmp
jl
sbb
in
clc
cmp
push
imul
add
push
jne
or
enter
xlat
in
adc
imul
popa
mov
adc
aaa
dec
lods
xchg
jo
imul
in
push
sbb
je
iret
jp
pop
jmp
sarb
in
gs
cmpsb
clc
mov
jae
mov
int3
pop
or
lock
push
ljmp
mov
arpl
stc
aad
pop
testb
cwtl
xor
movsb
jge
pop
adc
shrb
imul
cld
mov
lcall
loopne
sbb
xchg
mov
lret
dec
cmp
mov
insb
fcom
jbe
push
je
xchg
xor
in
pop
in
test
clc
ljmp
insl
jmp
and
mov
xchg
outsb
std
pop
stos
or
mov
arpl
int
push
jbe
addr16
test
scas
jae
pop
loop
mov
fs
adc
inc
jecxz
mov
lock
addr16
inc
roll
xchg
and
arpl
shlb
and
cltd
jbe
xchg
insb
xor
cmp
pop
repnz
in
adc
aaa
xor
sbb
add
inc
jle
dec
out
cmp
aad
add
outsb
aam
sub
jl
and
out
orl
ja
clc
aaa
push
lea
clc
data16
addl
sbb
xchg
cmp
cltd
dec
jmp
repnz
ljmp
bsf
shlb
inc
xchg
dec
jge
mov
shrb
mov
push
or
sub
push
xchg
jo
and
sbb
rolb
jmp
and
mov
paddusb
addr16
and
cld
ret
rorl
inc
in
inc
push
pop
xor
mov
push
iret
inc
cmp
subl
insl
or
mov
cmp
insl
or
mov
jge
cwtl
lret
xlat
cwtl
das
jmp
jo
das
cmp
xor
sub
aad
clc
sbb
adcb
cs
sub
and
lahf
cwtl
jbe
int
stos
cmp
xchg
push
sar
push
xor
inc
scas
sbb
mov
mov
addr16
sbb
addl
popa
and
sub
mov
test
mov
fdivs
shlb
in
fistpl
jo
ret
push
ljmp
fstl
inc
inc
das
std
xchg
cmp
adc
out
mov
pop
ret
repnz
js
ficoml
pop
dec
ljmp
cmpsb
adc
fs
fisttpll
dec
xor
push
cltd
pop
push
mov
and
xchg
repnz
stos
adc
inc
sbb
pop
imulb
int
ss
sbb
add
pop
xchg
xchg
and
aaa
fs
shl
or
mov
pop
call
jmp
movsl
std
out
sbb
movsb
dec
push
movsb
jge
sbb
dec
filds
out
mov
pushf
fldcw
dec
dec
shl
dec
sbb
ljmp
mov
xor
testl
adc
jp
in
out
adc
ret
push
jle
jecxz
or
mov
add
sub
rcl
dec
das
jnp
lea
in
cmpsl
or
add
or
cmc
je
sbb
daa
sbb
mov
pop
push
jae
iret
fcmovne
sbb
repz
mov
lahf
pop
jmp
ds
jl
repz
out
pop
insl
inc
pop
in
push
mov
arpl
mov
imul
repnz
sbb
lods
inc
xor
icebp
into
stc
nop
ljmp
push
xchg
adc
or
mov
sub
lahf
daa
leave
int
rorl
pop
add
or
scas
out
popf
lret
and
or
and
mov
loopne
stos
cmp
lcall
data16
into
clc
add
jb
inc
aas
shlb
xchg
inc
frstor
add
xlat
in
push
mov
rolb
add
add
mov
cmp
call
lahf
mov
test
aas
int3
inc
mov
adc
sub
js
or
mov
mov
dec
aam
dec
test
adc
imul
inc
adc
xchg
add
adc
movsb
ss
inc
stc
push
mov
jb
push
xlat
inc
pop
or
in
sbb
cmp
aas
fisubl
dec
cmp
ss
sub
scas
sahf
call
adc
cmp
pop
fisttpll
loop
and
xor
in
xor
inc
cmp
cs
inc
call
push
cmp
jns
jno
repnz
les
push
or
out
push
mov
cmc
out
jb
and
sub
or
bound
lods
lock
dec
mov
pop
adc
mov
jl
lcall
mov
cmp
inc
ret
cmp
and
sbb
add
arpl
gs
iret
xor
aam
push
fsubs
popf
dec
cmp
fldenv
dec
and
jo
inc
test
mov
push
cmovb
outsb
add
xor
sub
test
ret
leave
xor
leave
and
fisubs
fiadds
dec
cmpsb
pop
cli
dec
in
addl
pop
insl
cmp
fstpt
rol
movsb
addr16
jbe
and
aad
scas
add
das
mov
and
movsb
repnz
test
adc
jmp
push
loope
test
or
enter
fidivs
insb
repz
fsubr
mov
jb
xchg
inc
sbb
and
mov
jecxz
xor
and
test
jbe
inc
dec
dec
lock
ds
jmp
or
test
mov
sbb
int
popf
fs
push
fstl
mov
jns
xor
jbe
jp
push
xchg
xchg
das
and
or
popf
mov
hlt
stos
loop
das
daa
fs
out
dec
mov
mulb
cli
inc
jle
cltd
or
xchg
jmp
pop
outsl
sbb
icebp
or
cmp
xor
xchg
data16
scas
push
inc
sbb
int3
xchg
xchg
or
pop
repz
les
xlat
pop
mov
aas
jnp
loope
imul
dec
int3
adcl
pop
fidivl
jnp
lea
and
mov
aad
push
dec
rol
push
pop
fstps
cmp
push
push
fcoml
push
popf
inc
adc
clc
xor
push
flds
or
cmpb
pop
mov
dec
cmp
icebp
lcall
fimull
mov
divl
inc
fsubrl
xchg
push
sub
fldcw
testl
cli
movsb
loop
push
xchg
insb
and
decl
sbb
popf
cmpsl
pop
fidivl
fs
pop
aas
clc
ret
mov
adc
gs
mov
sub
cmp
jo
jmp
mov
ss
jle
pop
sub
insl
add
mov
in
repz
pop
xchg
shr
lret
in
cwtl
lahf
lds
sub
push
mov
je
dec
lock
xchg
or
cmpsl
sbb
pop
ret
jl
test
lcall
sub
fcomps
inc
jbe
jg
adc
cmpl
dec
daa
inc
push
test
mov
jg
xchg
aad
popf
mov
pop
test
fnstenv
int
movb
rclb
fadds
mov
mov
push
cltd
inc
fidivl
adc
inc
subb
mov
mov
xchg
ljmp
dec
add
loopne
sbb
xchg
and
cmp
rcr
jg
sarl
movsl
jge
jo
popa
mov
ja
jo
push
aaa
test
dec
pop
sub
dec
mov
ljmp
je
jnp
inc
pop
lret
pushf
xchg
push
hlt
fidivrs
and
sub
lret
push
cmpsb
cmp
imul
cmpsl
sbb
rol
int3
inc
mov
xchg
rcr
scas
rcrb
sub
jns
push
out
add
mov
fwait
rorb
pop
jmp
insb
xchg
sbb
scas
jmp
and
mov
cwtl
clc
stos
call
jg
and
dec
jnp
sbbb
fimull
std
insb
add
mov
mov
jnp
mov
pop
ljmp
pop
adc
sub
in
adc
cld
pop
mov
aaa
xor
imul
lods
aaa
ja
xchg
push
popf
in
add
test
stc
cmp
inc
jg
cltd
mov
push
in
mov
ret
rcrb
xor
call
sbb
xor
or
or
ret
or
xor
sub
sbb
ds
sbbl
and
dec
stos
adc
fwait
ljmp
cmpsb
sahf
mov
inc
pop
dec
cmc
xor
push
out
lock
das
mov
xchg
add
lcall
jae
das
mov
ret
sarl
mov
psadbw
mov
idivb
and
sub
jnp
sti
sahf
jne
shll
ja
sbb
mov
and
imul
inc
pop
insb
add
mov
int
test
cmp
jo
inc
pop
lods
inc
mov
sbb
pop
xchg
push
dec
mov
ret
push
xchg
popf
outsl
in
je
pop
hlt
cld
faddl
lods
mov
jne
lea
icebp
cs
jns
repz
rorb
scas
pop
xor
add
inc
push
add
xor
push
adc
inc
jmp
fiadds
loopne
inc
pop
and
push
pop
out
inc
jns
cwtl
cmpsl
lret
data16
rol
fstpl
cltd
sub
incl
mov
xchg
dec
sbb
fcompl
add
lcall
lahf
mov
and
jle
dec
mov
or
cli
shll
ret
push
mov
or
dec
jecxz
sbb
jge
push
push
iret
orb
inc
dec
dec
jg
fcmovb
pop
rcrb
rclb
push
mov
or
pop
push
add
inc
xchg
int
mov
push
push
pusha
mov
inc
push
mov
rolb
xchg
jb
and
enter
fndisi(8087
gs
push
lods
adcb
or
xor
mov
popf
aad
push
dec
insl
sbbl
mov
ficomps
mov
movsl
cmp
mov
imul
movsl
pusha
notl
pop
lods
loopne
push
sbb
icebp
cmp
sarl
fwait
addr16
fstpt
dec
shlb
out
clc
fs
mov
xchg
dec
inc
cmpsb
clc
loope
xchg
push
icebp
or
js
mov
in
cmp
inc
add
ja
loopne
imul
jp
push
push
jg
add
popa
adc
jg
mov
push
lods
daa
lcall
andb
test
enter
int
push
push
sbb
stc
nop
xchg
cmp
inc
gs
mov
sbb
xchg
mov
hlt
rorb
insl
imul
aam
cmp
hlt
cmpsb
add
xchg
inc
jnp
cmpsb
mov
push
leave
pop
stos
xor
and
sahf
xchg
pushf
insl
loopne
cmp
cltd
pop
inc
jle
add
cmp
add
cmp
inc
cmpsb
cmp
jbe
inc
sbb
fwait
mov
stc
mov
push
aas
mov
cmp
lcall
push
fildl
mov
pop
stc
jo
mov
scas
sahf
sbbl
jb
fwait
xchg
popf
scas
lea
mov
sub
dec
out
ds
jmp
cmp
xor
fidivs
pop
lock
push
bound
add
or
movsb
sahf
jl
add
xchg
jns
jp
jns
and
xchg
mov
rcrl
pop
ja
xchg
push
pop
ja
mov
or
dec
adcl
leave
cmp
mov
mov
leave
pop
xlat
in
mov
jo
xor
inc
sub
push
adc
cmp
test
mov
fldcw
movsl
mov
in
mov
mov
addl
cwtl
into
xor
pop
jmp
push
mov
sar
sbb
scas
insl
andl
fmuls
mov
mov
xorl
xlat
mov
fldt
fldcw
xchg
dec
add
sbb
mov
sub
stos
pop
pop
adc
mov
scas
sub
cwtl
xchg
lcall
into
movsb
xchg
inc
dec
pop
inc
popa
lds
sbbb
xor
add
mov
mov
add
xchg
mov
xchg
pop
fcmovnbe
repz
lods
mov
xchg
rorl
mov
imul
sub
cmpb
push
and
mov
adc
cmc
push
pop
rolb
mov
or
movsb
dec
xchg
jmp
fwait
jmp
or
icebp
add
inc
xor
xchg
ret
pop
into
xchg
dec
push
dec
loope
movsb
add
iret
xchg
sub
leave
mov
push
stos
sbb
pop
adcb
mov
popa
mov
inc
fldt
cmp
sbb
std
test
les
out
sub
xor
sarl
popa
packsswb
mov
adc
pop
add
mov
shl
dec
push
push
ds
das
sub
xor
incb
add
cltd
stos
mov
cmpsl
jbe
lock
mov
inc
loope
and
stos
repnz
arpl
xor
pop
sub
ds
inc
jecxz
or
out
mov
and
inc
fistl
add
outsb
mov
xor
mov
hlt
daa
bswap
xchg
mov
xor
popf
mov
popf
cwtl
aas
jmp
adc
adc
cmp
mov
or
lds
scas
rcll
push
cmp
sub
imulb
push
pushf
push
and
mov
mov
ljmp
jnp
sub
cli
mov
pop
enter
push
aas
pop
push
push
pusha
loope
inc
fisttps
push
pop
std
aam
dec
repnz
out
daa
cmp
lret
and
call
bound
mov
jnp
mov
or
iret
adc
push
sbb
arpl
and
ds
in
inc
shlb
imul
push
inc
mov
xchg
jnp
sahf
lahf
pop
jl
sarb
and
jl
push
inc
imul
es
pop
mov
pop
rcll
aas
sbbb
xlat
xchg
and
jmp
jno
xor
imul
int
hlt
cmp
cmp
xchg
stos
mov
push
sub
adc
adc
xor
pop
das
adc
xor
pop
mov
mov
test
lret
outsl
pop
ret
test
loop
insb
mov
push
xor
mov
sbb
push
rorl
test
nop
push
call
ret
aas
xchg
pop
add
nop
repz
jmp
pop
push
jmp
mov
pop
sti
inc
jb
cmp
or
push
dec
sub
divb
cli
sti
repz
sbb
sub
dec
sub
mov
dec
or
pushl
fidivl
xchg
push
add
xchg
adc
jg
xor
xchg
jns
push
or
xorl
scas
insb
loopne
mov
inc
bound
sub
or
or
pop
xor
imulb
inc
cmpsl
or
sub
leave
ja
or
or
mov
sti
sbb
adc
xor
jp
das
inc
stos
mov
popa
jl
jmp
ss
mov
popf
addr16
adc
xchg
repnz
test
and
sub
mov
mov
add
mov
repnz
mov
iret
lea
mov
shll
jbe
mov
imul
xor
xchg
sub
mov
push
pop
iret
orb
lock
lds
test
xchg
addr16
jns
aad
push
mov
add
mov
aaa
out
jge
inc
dec
cmp
push
xlat
outsb
or
push
je
sub
mov
add
push
ss
dec
pop
clc
pop
pop
repnz
sbb
and
xchg
push
das
lret
aad
add
bound
dec
push
pop
insl
or
adc
loopne
pushf
iret
orb
addr16
scas
sub
hlt
addr16
cwtl
pop
jl
push
idivl
ficomps
aaa
fisttps
xchg
cmp
testl
adc
adcl
ret
fists
enter
scas
and
pop
clc
jae
popl
pop
repz
stos
cmp
xlat
sbbb
pop
in
mov
fldl
mov
cmpsl
jg
push
jmp
adc
pop
cmpsl
out
sbb
cwtl
pop
adc
fistpl
cwtl
sub
dec
testb
cmp
jecxz
jp
mov
or
pop
enter
jge
and
mov
sbbl
xor
sub
scas
jne
in
xchg
sbb
sub
les
cmp
add
sbb
inc
popf
xor
loopne
test
daa
inc
enter
pop
rol
inc
sbb
das
lret
imul
jne
mov
fdivrs
dec
mov
or
pop
mov
push
push
jne
push
inc
xchg
insl
fidivl
jnp
incb
aas
mov
dec
add
lret
cld
jp
mov
hlt
adc
mov
mov
jo
push
sbb
sahf
fimuls
in
sbb
ljmp
pushf
and
iret
adc
cmpsb
in
push
mov
sub
in
gs
cli
pushf
cs
adc
sub
leave
scas
addr16
push
ljmp
and
xchg
and
mov
out
lret
imul
imulb
push
jg
add
in
stos
add
push
stos
lret
sub
xor
dec
jne
mov
stos
lahf
data16
xor
fimuls
mov
and
jno
push
xchg
clc
pop
mov
dec
sahf
nop
in
jb
aaa
stc
inc
popa
cmp
mov
lods
push
call
xlat
filds
xor
lret
pop
dec
loopne
testl
inc
in
pop
jnp
std
mov
movsl
add
mov
push
stc
fwait
sbb
shll
js
pushf
cmpsb
rcll
stos
add
cmp
inc
add
xchg
pop
cmpsl
mov
loopne
mov
les
icebp
or
fsubs
cmpsb
js
fcoms
add
cmp
jecxz
je
sub
add
xor
hlt
cmp
insl
paddusw
in
out
mov
dec
fpatan
pop
subb
pop
mov
push
xor
dec
xor
loope
pop
mov
js
in
or
sbb
sub
repz
daa
jae
stos
mov
aaa
pop
cmp
mov
cld
or
jbe
jecxz
lea
stos
decl
call
mov
sub
dec
icebp
mov
iret
cld
push
ds
lods
nop
xchg
push
andl
xor
and
ds
pop
jl
cltd
cmpb
mov
sbbb
leave
dec
and
mov
dec
inc
daa
inc
ficomps
lret
lret
or
rcrb
dec
nop
sti
leave
cwtl
mov
xchg
sbb
loop
cmpl
sbb
mov
sbb
sarb
sbb
dec
aad
andl
stos
adcb
out
andb
dec
cmpl
cmpsb
ja
push
lods
mov
push
xor
ficomps
jp
adc
cmp
in
inc
mov
ss
mov
jno
clc
jge
adc
or
shlb
dec
imul
ja
gs
jbe
cmp
sbb
jecxz
mov
and
ja
icebp
inc
fldcw
push
sbb
fisttpl
in
push
jae
andb
loope
xchg
rorb
daa
jp
add
cmp
and
out
adc
aas
out
sub
pop
out
jno
mull
adc
xchg
loopne
stos
jmp
fsubrl
push
fimull
ds
movsl
add
pop
add
jecxz
push
faddl
xor
js
mov
push
test
push
jmp
negb
cmp
data16
in
test
rol
pop
xchg
shll
mov
mov
jbe
roll
test
dec
out
arpl
sbb
insl
add
cmpsb
jle
add
ret
inc
add
not
xor
shlb
jle
pop
daa
push
out
test
push
adc
ret
and
jae
stc
hlt
sub
inc
push
lcall
test
cwtl
mov
inc
xor
lds
hlt
pusha
lcall
or
jp
pop
ret
or
out
jae
mov
jg
cld
add
cmp
ficoms
mov
ja
pop
push
xchg
cmp
add
dec
fs
enter
pop
mov
mov
js
or
cltd
adc
jno
xor
or
mov
push
jo
loop
aas
and
ret
jle
inc
add
orb
stos
imul
scas
push
les
dec
lea
adc
inc
out
push
out
sub
pop
sbbb
push
push
movsl
inc
dec
sarl
daa
fstl
pop
loop
sub
imul
dec
sub
or
loop
pusha
adc
ds
shll
jb
mov
and
ret
cld
jp
fwait
into
jns
aad
ret
push
scas
adc
fildll
test
cld
divl
shlb
jecxz
xchg
dec
arpl
jns
lret
pop
push
or
pop
insl
pop
and
cmpsb
loope
push
and
and
adcb
sarl
dec
movsb
inc
mov
roll
movsl
aam
mov
pop
dec
xlat
aas
push
inc
repnz
push
inc
push
fsub
cmp
jb
lock
ret
or
dec
scas
int
dec
pop
jo
jg
in
adc
ss
aam
sbb
mov
push
or
scas
iret
ss
iret
icebp
imul
loop
xor
sub
push
and
push
sub
in
push
lea
mov
sbb
mov
pop
pop
xchg
inc
adc
dec
mov
hlt
out
cmpsl
sahf
mov
add
frstor
sbb
invd
cmp
sub
jp
sbb
and
je
test
repz
sub
mov
mov
and
mov
std
aad
roll
inc
jmp
dec
xor
sbbl
or
into
mov
enter
jecxz
dec
dec
gs
int3
inc
lret
bound
lcall
hlt
inc
jmp
lea
mov
movsb
jne
lcall
loopne
popf
fcmovnu
jo
mov
lcall
xchg
pusha
mov
stos
jbe
stc
lahf
cwtl
inc
out
test
movsb
cmp
pop
repnz
into
jecxz
outsb
sbb
in
xchg
sub
inc
push
jecxz
call
mov
movhps
cmpsb
dec
sub
cltd
imul
iret
xchg
push
or
in
xchg
sub
pop
and
jl
sub
mov
sub
pop
sbb
mov
cld
data16
setp
je
cmp
sahf
lock
fnsave
cmp
mov
fcmovnb
add
pop
mov
adc
mov
insb
lods
fldcw
push
popl
add
pop
aam
push
mov
pop
mov
or
cmp
imull
sbb
in
and
xor
jge
pop
pushf
into
dec
sub
lods
loop
fsubp
inc
rcrl
cwtl
shl
pop
sbb
cmp
mov
pop
cwtl
xchg
clc
adc
mov
pop
and
mov
pusha
stos
jmp
inc
cmpsl
mov
rorl
inc
dec
lods
pop
push
push
in
popf
icebp
jnp
shrl
pop
jo
cmp
pusha
mov
fmuls
inc
mov
ja
popa
clc
cmp
pop
imul
lret
lods
inc
inc
pop
or
das
adc
lea
in
inc
fsubl
call
shll
addl
in
jge
and
jnp
ss
dec
fwait
cli
xchg
mov
sbb
sub
or
xchg
leave
push
or
mov
in
iret
cmp
call
and
pop
adc
lock
push
inc
inc
ja
je
mov
ret
xchg
inc
inc
inc
jb
aas
daa
lcall
xor
incb
or
test
mov
lahf
addr16
mov
les
leave
int
mov
xchg
test
mov
mov
fiadds
xor
or
mov
aam
cli
pop
push
push
push
ljmp
mov
or
rorl
add
es
insb
inc
roll
sarl
insb
adc
fsubr
sbb
and
cmp
xor
out
insb
repz
ss
jne
dec
in
pop
btr
fnstsw
mov
loope
cmp
int3
fadd
cli
addl
das
add
lods
mov
jge
pop
ss
push
or
cld
and
pop
mov
cmp
mov
mov
int
sbb
popa
test
mov
lret
fsubl
sub
xchg
hlt
cmp
pushf
out
cltd
lock
or
push
add
add
inc
xchg
inc
fnop
mov
clc
xor
adc
aad
mov
sahf
lods
mov
sahf
das
ficompl
lret
jbe
pop
xor
cld
mov
pop
push
jae
nopl
cmp
idivb
xchg
fcomi
and
mov
add
adc
out
mov
pop
stos
flds
mov
xlat
repz
outsl
dec
lret
ret
inc
inc
add
adc
popa
jo,pt
call
and
movsb
js
adc
sbb
dec
xor
xchg
bound
push
add
in
insl
mov
dec
dec
call
mov
shrl
ss
sti
push
or
cmp
insb
mov
ss
pop
pop
mov
push
in
icebp
sub
int3
es
and
cwtl
hlt
fmul
fiadds
dec
ss
and
outsl
jnp
push
scas
inc
js
adc
sahf
cltd
int
lret
ds
fidivs
aam
pop
mov
fucom
add
mov
into
sahf
xchg
fdivr
xchg
test
dec
in
sahf
sbb
mov
inc
adc
imull
out
push
idivb
lea
or
imul
clc
mov
pop
leave
out
pop
les
push
lahf
sub
push
push
repnz
pop
cmp
popa
xchg
cmp
sahf
push
in
nop
das
inc
jno
mov
or
adc
mov
aam
imul
addr16
adc
daa
test
out
mov
pop
inc
bound
mov
imul
xchg
dec
push
inc
mov
arpl
int3
into
xor
fs
out
mov
mov
mov
xlat
dec
and
xor
fwait
pop
pop
mov
test
cli
cmp
scas
jns
pop
xchg
mov
inc
jl
jnp
push
or
sub
les
pop
mov
xor
inc
push
dec
jle
push
out
inc
pusha
outsl
lea
dec
iret
insb
mov
test
or
push
or
call
lea
mov
xlat
jle
pop
incl
mov
xchg
adc
testl
cmp
cmpsb
xor
and
inc
jle
shrl
frstor
sbb
inc
pop
movsb
addr16
jno
xchg
dec
ljmp
mov
les
mov
into
dec
cmp
jne
sub
arpl
or
xchg
ret
shlb
sti
mov
rclb
icebp
adc
xchg
mov
dec
test
xlat
or
xor
pop
rcll
xchg
cmpsl
jns
jnp
faddl
scas
fisubrl
mov
movl
mov
inc
sub
mov
pushf
enter
lock
fiaddl
xchg
xchg
ljmp
mov
sbb
mov
push
mov
push
sbb
jecxz
fldt
and
enter
mov
inc
mov
xchg
in
mov
lods
sub
test
add
in
fwait
sbb
ljmp
rolb
inc
mov
fwait
jp
xor
daa
push
addr16
push
jno
inc
daa
loopne
mov
imul
xor
push
lds
mov
int3
out
ret
pop
daa
in
hlt
in
mov
pop
scas
jnp
loope
out
mov
and
sbb
dec
cmp
mov
js
cmp
repnz
sbb
mov
mov
xchg
ret
mov
push
jmp
dec
js
int3
imul
sbb
adcb
jbe
or
aas
and
and
jecxz
les
jg
or
cmpsb
xlat
and
jle
dec
jo
in
imul
adc
mov
aas
sahf
and
lret
out
mov
pop
stos
inc
pop
test
pop
jne
xchg
jno
sbb
inc
leave
pop
sub
flds
pop
cmp
jle
and
pushf
cli
nop
or
mov
push
lods
cs
scas
out
insl
xchg
cmpsl
ret
jge
mov
sub
mov
sub
xchg
hlt
inc
fisubl
xor
int
adc
and
mov
into
or
push
or
arpl
sub
sbb
pop
mov
movsl
or
insl
add
adc
mov
cltd
aam
mov
in
pop
lods
jg
mov
fistl
mov
bound
jne
fidivrs
repnz
sti
adc
pusha
fmull
or
inc
dec
sbb
inc
faddl
cwtl
inc
jne
das
rorb
inc
xor
mov
roll
insb
int
mov
in
ljmp
inc
ret
adc
pop
jmp
in
mov
loope
in
popa
out
dec
jecxz
add
xchg
stc
sbb
sbb
inc
or
ficomps
cld
pop
lea
and
push
pushf
repz
cmp
xor
push
mov
data16
aad
pop
xchg
cmc
popa
into
es
sub
xor
loop
jo
sub
lock
imul
cmp
push
test
into
inc
xor
mov
xor
js
inc
fldcw
inc
push
cmp
pop
mov
ret
cltd
stc
test
mov
push
sub
aad
icebp
mov
dec
inc
fwait
rcll
fimuls
and
stos
aam
xlat
jmp
pusha
xor
add
iret
in
xor
bound
fwait
int
es
aam
mov
or
ret
decb
pop
cmc
inc
scas
add
push
adc
mov
dec
inc
hlt
inc
lods
and
jmp
xchg
out
sahf
fucomp
push
sub
aaa
mov
or
push
xor
jnp
notl
aad
jmp
add
or
icebp
dec
and
iret
bound
fldenv
and
sbb
lods
aas
scas
stc
ret
inc
inc
xchg
sub
jnp
fisttps
push
lds
out
orl
clc
and
in
cli
pop
mov
scas
adc
xchg
orl
out
dec
mov
popa
sbb
les
in
insb
insb
shl
pop
lock
shl
mov
sbb
inc
cli
shr
sub
cmpsb
inc
mov
pop
mov
xchg
decl
rcrl
cmpsb
hlt
mov
pop
je
sbb
push
movsl
jp
aaa
mov
fldenv
xor
add
jecxz
das
icebp
xor
out
fwait
inc
mov
adc
xor
rclb
add
jge
and
loope
push
insl
mov
mov
test
ret
sub
ret
stos
adc
std
inc
sub
adc
pop
std
gs
movsb
pop
add
mov
popl
inc
mov
jno
pushf
sahf
scas
int
jmp
stc
cmp
adc
add
pushf
xor
out
bound
add
jb
pop
cmpl
pop
sbb
pop
add
bound
es
pop
dec
mov
shrb
lret
ror
xor
sub
add
dec
stc
mov
add
mov
dec
xchg
shr
add
jae
and
leave
jo
push
pop
inc
pop
mov
daa
pop
and
xor
mov
inc
fs
leave
mov
fstpl
or
es
enter
mov
push
inc
icebp
xlat
dec
mov
inc
in
or
ds
cmp
push
sbb
push
leave
xchg
add
aas
ss
xor
inc
daa
fisubs
pop
sbb
clc
pop
dec
iret
fs
jge
adc
mov
pushf
jae
sbb
pop
jo
andl
ds
jp
push
out
mov
push
xchg
inc
jno
xchg
mov
subb
ret
or
and
aas
scas
int3
xchg
adc
test
ret
stos
scas
jb
push
mov
mov
and
nop
mov
or
or
pop
ficompl
mov
mov
lret
arpl
dec
inc
adc
add
aad
xlat
cmp
pusha
pop
inc
adc
mov
enter
mov
push
sahf
push
pop
std
mov
das
cld
imul
jb
add
sti
frstor
enter
data16
sub
repnz
icebp
mov
xchg
push
daa
aad
sbb
mov
sub
pop
xchg
jo
movsl
mov
jb
inc
mov
cmpsb
adc
and
int
add
sub
push
lods
lock
lock
outsl
add
imul
push
out
mov
inc
inc
fs
and
push
push
dec
in
dec
lret
lcall
mov
fwait
je
push
mov
loopne
adc
insb
ret
mov
int
into
jle
data16
lock
xlat
insl
sahf
mov
push
pop
adc
jbe
stos
ds
pop
add
xor
stos
mov
jnp
std
mov
mov
mov
sbb
mov
idivl
ja
sarb
jae
shlb
pushf
push
mov
fnsave
adc
mov
or
mov
inc
adc
cmc
cmpxchg
leave
jecxz
mov
stos
fimull
sbb
add
and
pop
in
xor
and
and
test
inc
jmp
stc
test
cmpsl
mov
repnz
xlat
cs
push
pushf
sbb
mov
andl
stos
xor
pop
pop
andb
xor
cmpsl
movsl
and
cmc
xchg
cs
mov
imull
stos
dec
imul
jns
mov
lea
jle
push
fisubrs
cli
test
ret
pop
or
cmp
cwtl
negl
push
jle
inc
mov
mov
mov
mov
or
jmp
stos
fsubs
mov
lret
xor
aam
int
mov
and
cltd
sub
adc
fists
popf
adc
cli
out
adc
lock
jge
in
int
mov
lcall
adc
subl
dec
add
jmp
int3
cmp
push
dec
movsl
test
cmp
jle
cltd
scas
push
movb
or
mov
mov
and
adcb
daa
std
lea
pushl
mov
popa
repnz
or
pusha
sub
adc
fsubl
xor
and
sub
pop
sbb
sub
sahf
mov
gs
cmp
add
out
in
cld
sarb
insb
outsl
movsl
cmp
outsl
jle
je
pop
aas
xchg
mov
fldl
cmpl
test
pop
and
cld
stc
mov
dec
mov
inc
fisubs
mov
shld
aam
mov
fsub
sti
xor
push
inc
xchg
out
jp
cmp
add
pop
and
in
movsb
xor
lods
mov
pusha
mov
daa
xchg
cwtl
mov
je
aam
mov
pop
outsb
mov
push
shlb
pusha
pop
repnz
cmp
testl
push
leave
enter
aaa
ljmp
xadd
leave
adc
xor
fs
push
or
adc
out
or
fsts
pop
out
push
outsl
jecxz
das
jbe
push
shrl
mov
push
insb
fistpll
lods
js
mov
push
stc
bound
xor
jno
sbbb
and
stos
sbb
mov
stos
pop
ss
insb
fdivl
sub
scas
lahf
mov
xor
arpl
int
dec
fidivl
outsl
lret
fiaddl
clc
movb
fcmovnb
jecxz
lcall
sbb
xor
mov
xor
test
mov
rorb
cwtl
inc
adc
mov
test
outsb
cmp
lret
enter
xchg
lcall
clc
and
dec
lcall
and
push
pop
mov
jmp
or
test
int3
or
mov
hlt
xor
inc
out
mov
and
mov
pop
or
stos
cmp
shrl
mov
cmp
add
mov
scas
out
inc
enter
xor
xchg
cld
popa
clc
cs
fstl
into
jg
dec
fs
sbb
push
lea
sub
cmp
lret
sbb
pop
pushf
mov
jl
mov
addr16
push
out
test
cli
dec
dec
fiadds
mov
in
scas
mov
rcll
inc
mov
jbe
sbb
gs
cmp
mov
inc
cld
shl
inc
sbb
jae
jle
cmp
add
shlb
sbb
inc
push
testl
xor
xchg
cwtl
shl
rcrb
mov
lods
push
andb
push
mov
mov
hlt
and
xchg
xor
mov
aas
insl
leave
gs
sub
cld
and
mov
out
pop
adc
pusha
daa
lcall
inc
clc
int3
popf
jp
sbb
ficoms
divb
jge
mov
fdivl
push
sbb
lods
js
adc
jecxz
push
sbb
pop
mov
cli
xchg
std
xchg
sub
inc
xor
mov
test
sbb
mov
flds
out
pop
test
pop
ja
mov
aam
and
fcmovu
je
or
push
xchg
push
and
inc
scas
mov
push
sahf
push
test
push
fnsave
imulb
imul
push
xchg
inc
sarl
vfnmsubps
and
jns
push
sbb
addl
push
push
popf
push
inc
pushl
sarb
call
pop
ja
xor
andb
xchg
hlt
xlat
fcoml
sub
iret
xorb
sub
add
dec
popf
repz
lods
test
dec
shrl
jmp
dec
pusha
push
in
movsl
clc
xchg
mov
pop
fs
movsl
arpl
ret
or
dec
scas
dec
fistpll
fisubl
mov
fdiv
jp
xchg
stos
pop
adc
push
mov
push
rclb
pop
cli
int
and
add
cmp
hlt
int3
pusha
cltd
cmp
push
das
sub
adc
cltd
fidivrs
jmp
mov
dec
andl
jmp
dec
push
lret
data16
mov
inc
mov
aas
out
repz
sbb
bnd
leave
test
sbb
mov
sub
ljmp
ljmp
push
fwait
cltd
sub
cmp
addb
jae
lret
mov
mov
and
cmpsl
sub
cmp
push
or
sbb
jecxz
cmpsl
add
cmp
push
ss
lods
stc
push
add
pop
pop
jp
test
lods
dec
mov
fs
xlat
xchg
aaa
aam
fadds
aam
pcmpgtw
fimuls
jnp
cmpsl
xchg
pushf
sub
jbe
or
clc
pop
mov
pop
or
push
dec
xor
stos
mov
mov
jg
mov
fsubrl
add
pushf
arpl
adc
movsb
add
inc
lds
idivb
mov
insb
dec
xor
lea
lret
mov
or
cld
ret
mov
push
shrl
pop
adc
cmpsl
add
jecxz
cmp
lods
call
lcall
sbb
mov
popa
mov
jecxz
test
lods
mov
sbb
mov
xorl
xchg
adc
inc
inc
xlat
jb
xchg
sub
mov
inc
orl
iret
pop
iret
data16
jp
jbe
and
push
inc
imul
xchg
stos
data16
rclb
pushf
sub
into
push
stc
je
mov
cmpsl
jp
int3
pushf
lods
icebp
incl
rclb
inc
xor
dec
pop
mov
cmpsl
arpl
adc
sub
sub
push
icebp
outsb
leave
push
movsb
inc
cltd
aad
dec
repnz
xchg
call
push
rcrb
adc
inc
mov
imul
mov
push
popl
fldl
cwtl
cmp
mov
adc
in
loop
pop
out
xchg
mov
repz
xchg
mov
push
in
adc
mov
stos
leave
imul
and
adc
dec
mov
in
test
dec
or
or
xlat
outsb
lret
xchg
cmc
pop
hlt
cmp
call
hlt
bound
lret
mov
xlat
psraw
je
sbb
cmc
and
or
inc
mov
loopne
sub
jns
cmp
push
push
shrl
push
ja
add
hlt
xlat
insl
fcmovbe
pop
mov
xor
mov
jo
dec
fbstp
xchg
xor
fstl
xchg
add
fidivrl
jle
adc
out
jmp
or
xor
ret
cmp
jae
mov
adc
hlt
in
pop
aaa
inc
sub
cmp
mov
ret
je
xor
stos
inc
push
xor
testb
xor
xchg
fdivrl
dec
jg
cmp
popa
mov
inc
ljmp
cld
lcall
pop
pop
dec
add
cld
rcrl
pop
pop
jge
sub
out
push
or
jbe
jmp
add
xor
xor
xor
jo
cltd
int3
mov
xor
bound
scas
shll
inc
test
inc
in
push
leave
pusha
divb
call
add
aaa
into
shlb
push
insb
push
fs
aaa
push
and
rolb
cmpsb
pop
out
pop
mov
jbe
dec
insl
mov
xchg
inc
push
dec
jnp
adc
fimuls
inc
xor
jmp
lock
shl
sahf
pop
lods
pop
sbb
xor
push
imul
dec
test
rorl
mov
pop
sbb
les
out
jne
mov
fsub
xchg
data16
pusha
test
out
adc
test
popf
sub
dec
pop
cmc
lcall
xchg
call
pand
and
ljmp
fstpl
test
jnp
xchg
xor
sbb
mov
cmp
stos
into
fwait
int3
push
in
pop
imul
pop
mov
mov
mov
mov
mov
or
movsl
sub
sbb
dec
loope
jnp
mov
pusha
push
mov
xchg
jg
jp
popa
mov
sahf
repz
and
scas
rol
test
sbb
jb
jno
pop
test
cwtl
or
call
xchg
sub
into
cmp
popf
lods
dec
int
mov
and
jnp
adc
das
jle
push
sbb
sti
add
shll
popl
stos
es
aad
mov
mov
lret
imull
ja
ss
test
pushf
sbb
loop
dec
repz
sub
xchg
subl
ss
cmp
mulss
pop
pop
sahf
adc
adc
dec
pop
xor
pop
jbe
into
enter
js
sbb
push
pop
add
lds
push
mov
mov
cmp
call
test
xchg
push
sub
icebp
subb
or
scas
inc
mov
test
mov
adc
sahf
dec
jo
das
ljmp
cmp
nop
and
jb
add
adcb
cwtl
jge
ljmp
or
pop
pop
leave
ss
sti
jnp
cmp
pop
outsb
cmpl
push
sub
cmp
adc
dec
mov
mov
xchg
insb
push
xchg
fstpt
xlat
xor
or
or
lods
push
push
testb
aam
outsl
popf
sahf
pop
jmp
shrb
inc
pusha
enter
xchg
or
sub
rcrl
adc
shrb
ja
rol
cmpsl
xchg
cmpsl
ds
test
or
sbb
sahf
fidivs
rorb
pop
pop
enter
xchg
push
loopne
icebp
scas
mov
xor
mov
sub
repz
and
jbe
mov
ss
xor
data16
mov
in
adc
lea
or
mul
sbb
jbe
mov
or
call
outsl
into
outsb
xlat
push
adc
dec
cmpsl
popa
xor
xor
insb
imul
addr16
out
add
inc
push
sti
js
psrld
mov
outsb
imul
or
cmc
dec
cmp
cltd
in
dec
repz
cs
aad
jns
aaa
mov
xor
sahf
or
adc
jnp
loope
sbbl
mov
fisubl
push
sar
gs
jns
jp
sub
jp
imul
or
and
pop
repnz
fs
in
inc
cwtl
jb
add
mov
int
cmp
jno
xchg
test
addr16
jmp
pushf
push
popf
je
movsl
mov
cld
xchg
jmp
mov
fldenv
mov
imul
out
mov
xor
push
push
dec
lods
pop
dec
std
ss
in
xchg
dec
ficompl
rclb
jne
cmpsl
xor
mov
inc
pop
repnz
std
adc
pop
cmp
push
add
pop
sarl
daa
xchg
dec
inc
std
sti
jbe,pt
jo
sub
xchg
adc
mov
aas
push
mov
out
push
in
mov
jp
leave
xchg
into
inc
aad
adcl
ljmp
leave
and
leave
pop
shrl
addr16
filds
sahf
mov
fldenv
leave
lods
les
pop
fidivs
and
lods
outsb
cltd
aas
ljmp
hlt
outsb
insl
stc
or
cmp
xor
jns
mov
xchg
int3
fmulp
pop
das
xchg
or
adc
xor
notb
sti
and
fldl
mov
int
jae
fsubl
mov
fcmovbe
repz
sub
into
inc
repnz
fisubrs
xor
bound
fsubrl
mov
xchg
fbstp
mov
pop
adc
sahf
mov
shl
aad
pop
jmp
add
adc
jl
shl
cmpsl
mov
rcrl
cltd
mov
test
shll
aad
cli
ljmp
pshufw
push
lcall
and
call
js
loopne
fsubrl
inc
mov
sub
and
scas
sub
jbe
lock
ss
add
push
mov
popf
sti
orl
dec
pop
or
pop
aas
sti
push
test
cli
das
lock
push
xor
xor
out
ljmp
push
dec
push
xor
imulb
lahf
int
ret
outsl
cmp
mov
mov
cs
push
shrl
cs
mov
mov
clc
insl
add
pop
mov
lret
cmpsl
cs
cmp
bound
lods
call
out
popf
mov
lods
mov
fistps
loopne
std
push
aad
je
mov
fnsave
jmp
mov
add
pop
fdivp
aaa
hlt
imul
test
xchg
dec
mov
push
dec
jmp
js
dec
push
and
arpl
push
xchg
insb
mov
and
mov
fisttpl
or
xchg
jne
xor
mov
mov
push
mov
in
dec
cmpsb
jo
and
fisttpll
icebp
dec
je
cmp
add
jle
icebp
fistl
adc
sbb
jmp
ss
xorl
or
stc
push
xor
cmpsb
push
lods
xlat
mov
repz
lods
mov
xorb
jne
inc
sahf
loopne
mov
mov
mov
int3
outsl
xchg
cmc
enter
fldcw
ljmp
movb
loope
mov
das
in
jb
adc
fnclex
dec
sub
inc
fimull
call
and
jae
je
bound
cli
push
rcll
stos
cmp
lcall
lret
clc
imul
mov
jo
add
adc
out
add
daa
mov
iret
jnp
repnz
adc
shrb
rcrb
mov
mov
popa
or
inc
out
xor
lock
fmuls
cwtl
es
jae
cmp
mov
cli
aad
or
sbb
gs
leave
push
adc
jo
nop
loop
mov
inc
pop
add
movsl
enter
mov
mov
jecxz
in
pop
data16
push
aad
mov
push
js
andl
sbb
int3
lret
xchg
jnp
lret
scas
lods
pop
push
lret
and
test
mov
xchg
scas
mov
es
fdivl
jl
lahf
call
xchg
jnp
sbb
out
push
jno
jno
lret
mov
inc
scas
mov
mov
push
fwait
ret
pop
pop
xor
dec
cmp
pop
loop
pop
inc
mov
pop
xchg
pop
mov
sub
pushf
cmp
bound
push
iret
pop
jno
push
push
mov
orl
sbb
out
and
add
pop
ljmp
hlt
sub
xchg
and
lock
rorl
daa
push
fimuls
pop
call
dec
or
inc
faddl
aas
push
jge
fwait
sti
dec
movsb
aas
sbb
sbb
loop
test
xlat
mov
mov
inc
push
xchg
fidivl
or
shlb
sub
add
ret
pop
packsswb
cmpsb
mov
hlt
gs
cld
xchg
stos
and
and
mov
test
jmp
loopne
jno
cwtl
push
jmp
shrb
jp
and
nop
daa
or
mov
mov
test
cmp
xor
push
scas
inc
das
mov
pop
push
and
verw
or
dec
fucom
and
jae
jg
ja
push
adc
xor
cwtl
xchg
and
mov
aas
je
sbb
sahf
xchg
jge
mov
mov
lods
jmp
cwtl
icebp
pop
imul
jp
inc
ss
inc
frstor
lds
add
aad
push
mov
jne
notb
fldl
in
aam
and
hlt
jmp
or
jnp
rcrb
movsb
pop
inc
cli
pushf
in
mov
add
cmc
cmpsl
ds
push
dec
dec
loope
pop
leave
cmpsl
sti
cmp
dec
xchg
jl
sub
pusha
sbb
js
add
enter
mov
sbb
or
mov
jp
inc
adcb
or
jmp
or
shll
mov
xchg
repz
clc
and
in
ficompl
xchg
je
jg
popa
sub
int3
arpl
sbb
rcll
xchg
mov
inc
push
pop
and
add
repnz
fisubrl
cmpsl
cli
sbb
unpckhps
cmp
mov
sbb
pop
add
dec
iret
fisubl
lcall
mov
idiv
xchg
sbb
subb
shrb
nop
sub
push
jmp
mov
loopne
test
outsl
rorl
sub
xchg
inc
cmp
xor
mov
cmp
jl
cltd
imul
add
dec
lret
xor
xor
pop
cld
cmp
mov
jle
jg
repnz
lods
mov
push
mov
and
lods
ljmp
pusha
repnz
push
js
mov
push
mov
inc
fisubs
inc
push
sbb
jp
cmc
xor
fildll
hlt
pop
sub
adc
dec
es
mov
scas
cmpsl
inc
cmp
inc
sub
notl
sbb
loop
and
mov
aam
sbb
int3
jge
pop
push
or
xor
and
inc
mov
adc
fdivs
mov
testl
sbb
mov
cltd
imul
addl
insb
and
xchg
adc
xchg
ss
hlt
and
stos
fcomps
inc
or
push
add
xchg
push
sub
movsb
cs
pop
insb
filds
push
cmpsl
divb
das
sub
dec
push
mov
cmc
xchg
out
mov
push
mov
scas
xchg
cmpsb
popa
test
xlat
int3
pop
nop
aas
sbb
fld
aam
adc
push
popf
mov
jno
add
jg
aaa
mov
insl
movsl
gs
mov
mov
gs
nop
enter
jbe,pt
aas
fwait
adc
idiv
ja
je
cli
test
ds
pushf
pop
xchg
rorl
adc
adc
mov
pushf
jmp
mov
je
sub
fmull
adc
cmp
mov
or
pandn
stos
cmp
jno
pop
fwait
push
xchg
mov
scas
jecxz
jns
arpl
cmpsl
pop
and
js
sbb
dec
faddl
dec
test
aaa
adc
cmp
in
pusha
or
xor
mov
cwtl
jg
adc
adc
push
mov
sub
lods
out
sbb
pop
imul
adc
imul
popa
jmp
scas
pushf
ret
adc
cmp
ds
movsl
gs
xor
iret
fcomp
pop
ret
sbb
jg
loope
push
and
add
sub
and
ja
push
add
out
je
mov
and
mov
daa
pop
icebp
pop
aad
ds
stos
sti
mov
orb
notl
in
push
in
loope
cmp
add
inc
push
movsl
ret
addb
cwtl
or
jb
inc
push
mov
sbb
subl
mov
or
xor
mov
popf
cmp
add
jmp
cmc
ficoml
adc
jg
mov
jecxz
push
xchg
pusha
hlt
cmpsb
add
pusha
aad
test
xchg
pop
dec
daa
and
mov
sub
or
cmp
xlat
sub
mov
frstor
data16
leave
pop
icebp
loop
das
mov
leave
mov
arpl
je
and
add
mov
push
popa
sbb
push
cli
iret
cmpb
xor
loop
aad
mov
jl
sub
std
cmp
pop
orl
in
adc
cmp
in
in
pop
jmp
jg
lock
jl
cmc
sub
roll
and
pop
mov
or
mov
mov
xchg
insl
stos
cmp
scas
cmp
push
push
and
into
inc
mov
mov
pop
mov
mov
lods
jecxz
and
jae
jno
mov
mov
mov
jmp
or
movsb
daa
pop
lea
loop
inc
mov
out
lods
in
repnz
arpl
cli
dec
mov
sub
cmpb
stos
movsb
faddl
jge
pusha
sbb
mov
insb
rorb
sbb
pop
adc
pop
stc
in
lcall
pop
repnz
enter
pushf
mov
aaa
jp
repz
fwait
mov
mov
andl
sbb
push
cmp
orb
mov
popa
pop
ror
and
push
aad
xchg
mov
not
imul
lock
cld
lea
push
call
sub
xlat
sbb
xor
imul
adc
jle
adc
out
sbb
call
ret
cmpb
xchg
add
in
repz
flds
stos
fldl
pop
hlt
mov
fwait
stos
not
jnp
aam
sbb
inc
xor
negb
jecxz
add
sub
dec
stos
sbbl
push
mov
imul
ljmp
push
jbe
pop
out
push
push
leave
arpl
iret
push
insb
xchg
lret
push
insl
mov
daa
sti
test
push
rcl
push
or
dec
jo
push
jl
adc
ss
push
cwtl
adc
mov
sub
sub
pop
fcomps
or
fucomip
sub
or
add
mov
push
xor
test
xchg
add
pop
rolb
cmc
stos
pop
push
les
or
dec
shrl
mov
xchg
sub
into
mov
in
pusha
out
jl
adc
shrb
repnz
and
imull
stos
test
fwait
call
inc
xchg
outsb
jle
daa
jge
xor
fidivrs
push
int
mov
cmp
movsb
js
out
lods
inc
jbe
xchg
test
leave
sbb
pop
mov
xor
add
mov
lcall
xchg
add
dec
adc
stc
pop
daa
hlt
fbld
push
push
jmp
add
push
popf
adc
xlat
sbb
mov
pop
cmpsl
inc
pop
ficompl
popa
in
mov
pop
and
std
mov
mov
inc
add
cwtl
mov
and
adcl
xchg
repnz
push
test
lods
out
push
popa
mov
inc
out
popf
js
push
jg
cmp
testb
adc
nop
or
movl
ret
movsl
popf
in
adc
cli
mov
adc
mov
cld
insb
pop
push
jae
lea
add
mov
dec
push
or
fisubrs
cli
loope
push
call
push
jo
push
mov
jge
and
in
pop
dec
pop
inc
cld
lcall
cmpsb
cmp
aas
adc
dec
inc
pusha
push
in
test
pop
js
test
out
data16
push
cwtl
jmp
mov
aas
push
mov
sahf
call
xor
mov
cmpsl
in
outsb
push
push
jle
dec
dec
push
mov
add
sbb
andb
push
aam
xchg
or
mov
outsl
ss
adcb
inc
mov
inc
roll
sub
cltd
mov
cli
pop
push
insb
inc
movaps
jb
push
fwait
xor
add
nop
daa
imul
and
sahf
neg
mov
pop
shr
mov
xor
pop
jecxz
dec
sub
xor
imul
lds
repnz
pop
adc
subb
leave
cmp
test
xchg
add
fwait
testb
push
popa
clc
test
mov
push
mov
sbb
in
and
cwtl
call
jmp
int
cld
mov
loopne
dec
fisttpll
mov
fwait
es
adc
add
xchg
mov
aad
repz
mov
mov
fcomps
fcompl
mov
jmp
xchg
xor
int3
pop
push
in
lock
pop
and
cmpsl
push
mov
test
in
sub
daa
inc
dec
pop
inc
loopne
outsb
int
mov
leave
lret
lods
fwait
jbe
sbb
mov
sbb
subb
dec
ret
xor
and
test
inc
fidivrl
mov
and
xchg
xor
cmc
push
outsl
cmove
pushf
mov
mov
jbe
pop
lods
and
movsb
xchg
adc
dec
mov
pop
push
and
jno
leave
fsub
test
fdivl
out
stc
xchg
rolb
icebp
clc
sbb
sub
in
mov
movsl
xor
pushf
jmp
stos
mov
mov
mov
and
out
add
add
mov
cmp
imul
mov
pop
and
fidivrl
aad
lock
sub
sbb
xchg
push
pop
imul
push
nop
jae
sub
xchg
imul
push
mov
rolb
aam
mov
fists
jbe
inc
jle
fs
std
sub
dec
inc
fidivs
call
leave
mov
out
sbb
mov
insl
loopne
and
xchg
ja
shlb
xor
ja
enter
mov
fs
fsubrl
jo
mov
adc
aas
fsubl
or
push
lds
mov
daa
lods
daa
jbe
pop
cmc
pop
mov
add
imul
outsl
mov
add
mov
jecxz
int3
sub
mov
imul
call
xchg
sub
pop
divb
mov
sbb
jno
mov
push
test
rcrl
adc
and
data16
push
testb
daa
adc
retw
inc
jnp
sti
push
sub
bound
aaa
fwait
xor
xor
and
inc
test
push
popf
cmpsb
fmull
push
popf
ss
scas
aas
test
out
adc
dec
mov
frstor
mov
cmp
in
sti
insl
inc
mov
inc
in
sbb
dec
or
xchg
jmp
xchg
or
push
int3
mov
inc
mov
mov
sub
mov
icebp
pop
sub
loop
jle
loop
sbb
add
imul
mov
negl
fwait
dec
cmpsb
inc
add
mov
or
imul
or
test
lret
mov
cmc
jbe
clc
add
adc
mulps
xor
daa
push
jmp
test
xor
xor
push
jmp
mov
adc
mov
std
iret
push
pop
adc
inc
bound
cmp
push
jg
pusha
jmp
adc
das
inc
sbb
xor
inc
add
jne
mov
pop
outsl
je
jl
inc
pop
sbb
fisubrs
pop
loope
mov
mov
rcrb
inc
adc
mov
icebp
pop
sbbb
jno
aad
sub
sbb
and
push
jmp
or
jmp
mov
xchg
cmpb
popf
inc
lret
dec
fisubrl
or
cmpsl
push
test
call
mov
or
mov
sbb
dec
std
inc
pop
out
test
mov
pusha
xor
pop
sahf
mov
jns
pop
fimull
fisubl
nop
jo
sarl
xor
or
std
jns
mov
cmp
in
xor
inc
mov
jmp
divl
leave
sub
popl
inc
jne
mov
xchg
inc
cmp
stos
cmpsb
adc
jle
jb
add
inc
pop
std
pushf
jp
mov
adc
roll
pop
sti
adc
movsb
dec
push
stos
incb
popa
dec
or
inc
xchg
mov
test
jmp
jmp
xor
and
dec
ficoms
add
push
pop
cli
lea
ja
cmc
test
cmp
mov
pop
cmp
and
or
cs
movsb
push
pop
into
xchg
mov
dec
dec
ds
rcrl
jne
icebp
mov
out
mov
ds
cmp
add
mov
lahf
adc
nop
mov
mov
inc
cmp
aad
inc
mov
jne
inc
lock
test
andl
mov
out
into
in
add
es
lods
cmp
jo
mov
into
xor
push
sbb
push
out
inc
test
ljmp
push
or
xchg
sub
xchg
fcmovne
mov
xchg
jl
data16
jp
sub
sbb
test
and
mov
or
popa
pop
ret
xchg
sub
xlat
mov
rcrb
ss
mov
jg
cmp
cwtl
adc
push
cmp
ja
adc
xchg
pop
movsb
lods
mulb
test
adc
or
rcrl
outsb
repz
mov
sbb
cmp
pusha
inc
andl
and
repnz
xor
dec
aam
call
jns
jbe
fsubrl
and
psubusw
push
lods
ds
pusha
fs
mov
ret
std
add
inc
jb
imul
add
or
pop
and
cmp
rcl
out
add
andl
aas
adcl
popa
and
jb
pop
jg
lret
pushf
pop
pop
sbb
cltd
pop
and
push
jp
in
es
or
jo
dec
flds
fidivrl
xor
or
dec
cmp
lds
or
jp
clc
mov
fs
fcoms
pop
repz
push
and
icebp
sub
lea
sbb
repz
xchg
cmp
negl
dec
dec
and
sti
cmp
mov
insl
out
jo
and
inc
mov
ss
fdivr
pop
or
push
movsl
les
adc
jo
push
movsl
dec
cltd
sbb
xor
ret
jle
push
inc
gs
ds
cmpsb
out
hlt
add
inc
jae
xchg
out
add
lea
jbe
mov
stc
call
pop
test
and
sbbb
adc
add
jmp
sahf
xor
loopne
push
jns
dec
mov
das
enter
xchg
cmpsl
sbb
jmp
aaa
outsb
fidivs
aam
lcall
sbb
sbb
jae
cmpsl
mov
inc
das
add
push
mov
mov
sahf
lret
test
aaa
adc
call
aas
push
add
mov
push
add
mov
add
lds
std
loop
fadd
mov
pop
jno
aaa
testb
loope
jle
sarl
push
mov
mov
jle
into
push
xor
stc
jo
in
jg
gs
pop
pushf
xchg
add
cmp
lcall
mov
movsb
repnz
sarb
lock
dec
cwtl
and
adc
xchg
cltd
lock
adc
jns
lods
inc
push
repz
ret
nop
sbbl
and
outsb
pop
pop
popa
js
jg
lock
inc
mov
mov
mov
lahf
mov
fmuls
sbb
xlat
push
ljmp
jno
adc
test
fldt
int
and
lahf
fimuls
and
add
movsb
push
mov
and
icebp
and
popa
daa
sti
xchg
pop
or
mul
ja
sub
or
and
std
cmp
mov
mov
test
fwait
dec
leave
fbstp
xor
hlt
xor
aam
sub
roll
test
cmp
push
sahf
icebp
les
xor
lret
rol
loop
inc
out
push
je
adc
jmp
clc
xchg
les
and
cmovo
dec
xchg
lcall
inc
mov
aas
inc
loope
flds
or
xorb
stos
ret
negl
xor
cmp
test
jmp
inc
cmpsb
dec
xchg
stc
popf
xchg
cld
pop
icebp
rcl
mov
psllq
pop
xchg
inc
push
pop
push
in
mov
hlt
dec
jg
or
mov
test
subl
dec
or
repz
and
cli
pop
andl
in
jne
push
pop
cwtl
ss
movl
push
popa
shlb
mov
sub
push
das
cmp
dec
clc
cmp
movsb
mov
pop
cmpsl
cmp
or
aam
scas
fidivrs
pop
fiadds
xor
fmull
rorb
in
arpl
fcmovne
pop
sub
out
add
and
pop
dec
add
subb
xchg
cs
stos
in
lods
ret
inc
xlat
shrb
pop
cltd
push
or
mov
lods
ds
lret
cmp
arpl
cltd
xor
pusha
lret
aas
in
and
adc
pusha
popf
mov
test
mov
mov
cmp
testb
clc
jae
and
mov
xchg
imulb
lock
mov
test
fwait
insl
xor
andb
aaa
xchg
and
dec
out
repz
rcrl
ret
cmp
inc
stos
les
aad
stc
adc
mov
jge
enter
and
lcall
mov
or
and
sbb
pop
sahf
test
push
adc
mov
sub
enter
mov
enter
push
sub
lret
clc
dec
loopne
adc
jp
mov
pop
xlat
sub
lds
jb
dec
cmp
mov
add
sub
fdivs
cwtl
icebp
xchg
pusha
clc
cld
not
cld
cmp
pop
sbb
sahf
cmc
jae
push
jno
or
sub
sub
les
movsb
notl
in
adc
jl
pusha
fdiv
sarb
cmp
adc
push
icebp
bt
sub
dec
pop
es
xchg
subl
cmp
sbb
jnp
pop
dec
lods
dec
xchg
ret
sub
jb
cmp
or
sahf
push
andb
lds
jl
mov
cmp
in
mov
push
pop
in
out
in
dec
loope
lods
push
pushf
cwtl
mov
lret
ret
dec
ljmp
jnp
ret
outsl
push
cmp
testl
lds
push
mov
xor
imul
xor
mov
loopne
shlb
enter
rcrl
mov
mov
mov
cld
mov
decb
jns
daa
adc
xor
jns
xor
xchg
pusha
or
lahf
xchg
ljmp
call
xchg
sti
jno
outsl
movsb
xor
imul
je
test
leave
inc
jmp
xor
enter
jbe
jle
stos
mov
scas
lods
xor
dec
cli
sarb
lahf
ss
rclb
add
ja
mov
adc
jp
punpckldq
and
dec
xchg
mov
ljmp
cmpsl
ret
movl
pop
stos
mov
xor
out
sti
daa
js
dec
outsb
iret
inc
std
mov
loope
mov
ja
fwait
mov
movsl
mov
add
out
mov
fbstp
jecxz
lahf
mov
rorb
mov
fs
imulb
inc
push
sub
addr16
and
in
cmpl
fiaddl
push
movsl
xor
sub
push
data16
je
ret
ret
or
jl
popl
mov
xor
scas
pop
dec
inc
cs
icebp
pop
data16
dec
inc
stc
xchg
and
movsb
adc
inc
sbb
push
cmpsl
mov
cld
cltd
jp
pop
iret
in
pushf
dec
fwait
gs
xchg
mov
inc
adc
fidivrl
xor
scas
test
xchg
in
js
jle
mov
outsl
lahf
les
js
test
and
in
push
dec
ss
inc
xchg
out
std
add
lods
scas
inc
xor
jmp
test
dec
fadd
sarb
out
cmp
cmp
mov
push
ret
aas
addr16
jo
test
push
pop
jle
lods
push
push
inc
push
out
je
dec
mov
ljmp
xchg
in
addr16
mov
and
scas
mov
lock
sbb
inc
ret
sbb
inc
std
fiaddl
xchg
sarl
shrl
outsb
sub
bound
fwait
lds
rol
das
imul
leave
fmuls
and
leave
lret
cld
dec
in
pop
call
out
insb
cmpb
dec
shrl
les
add
rorb
and
inc
fisttpll
cmc
insl
sub
fwait
cmpsl
inc
pop
push
pop
mov
cmp
outsb
inc
inc
clc
xchg
dec
arpl
fs
xchg
icebp
test
js
mov
data16
lret
push
mov
push
aas
pop
sbb
outsl
aam
dec
push
xchg
pop
repz
int
pop
jnp
push
shlb
or
cltd
lock
adc
or
or
and
inc
sti
lods
pop
jmp
repz
and
stc
imul
shrb
push
leave
adc
lds
fists
pop
push
and
or
cmp
adc
sub
sahf
push
popf
iret
dec
dec
xchg
jmp
cmp
dec
or
dec
jg
xchg
push
mov
xor
sbb
push
cmpsb
sahf
mov
jmp
sub
adc
cmp
fidivs
xchg
push
mov
shl
adc
mov
mov
jp
pop
aas
push
dec
or
int
fdivrs
sub
testb
js
cmp
adcl
jmp
mov
bound
popf
int
pop
pand
pop
inc
pushl
inc
cmp
lods
mov
sbb
mov
mov
je
gs
sbb
jnp
push
or
mov
sbb
int
jecxz
out
push
rcll
add
sti
mov
mov
ret
rcll
loopne
rorl
jns
mov
adc
xchg
stos
insl
lret
mov
jnp
outsl
inc
shll
cltd
xor
push
add
push
and
add
xchg
insl
push
and
or
push
and
xlat
cmpsl
sub
dec
sub
subb
lret
sub
loopne
cmp
iret
push
aas
fsubp
lahf
punpcklwd
jecxz
shl
jns
jne
mov
inc
stc
adc
lods
lds
outsl
push
lahf
popf
sarb
ret
and
shll
push
jo
arpl
inc
sub
lahf
lock
out
and
mov
mov
lods
adcb
jle
cmp
cltd
outsb
push
xchg
jne
lahf
pop
sub
repz
cli
or
jnp
and
popl
test
xor
lods
outsl
add
adc
ret
hlt
mov
lock
shrb
inc
pop
push
daa
sub
xchg
and
or
jg
mov
ljmp
mulb
pop
mov
jge
or
sub
ljmp
cltd
cmp
xchg
mov
mov
idivb
cld
stos
xchg
int
or
aas
mov
icebp
decl
lods
pop
loope
mov
push
gs
sar
jge
fldcw
pop
xchg
cmpsb
jns
mov
jge
dec
pop
sub
cmp
cmp
ret
lcall
negb
and
scas
out
jmp
inc
sbb
dec
sbb
pop
test
add
mov
xchg
cmp
insl
push
stos
or
in
insl
popa
outsl
ret
pop
das
and
add
inc
xor
inc
push
xchg
daa
inc
pop
dec
fstl
insl
test
pushf
adcb
cmp
sbb
out
mov
mov
jno
jbe
int3
jno
ror
into
cmc
insl
push
jae
or
sub
stos
xchg
jno
add
or
call
xor
aam
pop
pusha
daa
inc
into
or
jb
jbe
dec
loope
cwtl
xor
xor
push
dec
dec
rcl
mov
cmpb
stos
movsb
cld
dec
mov
in
jno
aad
xchg
lahf
repz
out
subl
gs
stos
pop
jmp
sbb
cmp
imul
xlat
clc
hlt
or
cmp
jbe
decl
cmpsb
xchg
jo
mov
mov
cmp
cmp
cmpsl
push
and
mov
fbld
rcrl
lock
inc
sar
jg
js
stos
push
push
in
test
imul
insb
cmc
mov
es
sbb
and
mov
add
inc
aas
xorl
sub
inc
addr16
cmp
ja
insl
ss
mov
idivb
hlt
adc
add
cmc
inc
ficomps
mov
stc
nop
xchg
aas
jno
cmpsl
pop
xor
iret
ds
das
xchg
andl
and
cmp
stc
inc
cmp
pop
loop
mov
enter
cmpsl
jae
and
dec
aas
daa
push
inc
or
push
ja
mov
push
push
loop
sub
jae
sub
pusha
subb
pushf
xor
das
lea
mov
mov
ret
hlt
inc
mov
push
icebp
stos
mov
jae
jge
cmp
fwait
or
add
shr
test
inc
repz
and
insb
cld
xchg
pop
cmp
loope
fwait
push
pop
dec
dec
adc
movsl
lock
into
cmp
pop
ret
xchg
mov
jns
adc
mov
das
jns
popa
imul
pushf
add
shlb
and
xchg
sti
in
dec
xchg
adc
dec
cwtl
push
sub
jns
stos
dec
xchg
add
lcall
pop
mov
in
ret
mov
js
sub
add
mov
fidivrs
sub
pop
pop
data16
shlb
and
inc
push
or
push
out
inc
fnsave
outsl
lret
adc
fs
int3
loopne
lods
adc
xor
dec
dec
iret
jle
mov
addr16
or
adc
dec
and
sub
sub
mov
cltd
xor
arpl
jae
cwtl
cmp
fldcw
aas
lods
cmp
jmp
scas
cmp
mov
or
xorb
mov
xchg
cmove
push
subl
rolb
shr
ret
movsb
push
cmpsl
push
in
mov
inc
into
fnstenv
mov
int3
xchg
cmp
jecxz
xor
sub
jns
or
addr16
jae
and
sub
or
sbb
sub
pop
nopl
fidivrl
fimuls
add
das
jge
movb
sbb
ja
dec
sbb
shlb
adc
adc
mov
push
mov
dec
bound
sarb
jnp
dec
sti
jmp
loope
sbb
jae
push
fdivp
pop
mov
daa
sub
repz
add
sub
fstpt
add
je
dec
push
mov
or
lret
repnz
es
mov
dec
lock
cmc
int3
aaa
push
dec
xor
jecxz
dec
call
or
mov
ficoml
or
push
xchg
popf
inc
movsb
or
and
inc
cwtl
adc
mov
mov
cmp
idiv
mov
push
out
ljmp
xchg
inc
cwtl
dec
iret
dec
dec
jle
inc
gs
jne
arpl
sbb
cld
jae
jns
ss
push
add
push
xchg
mov
test
pop
mov
testl
push
dec
filds
das
data16
inc
push
insl
insb
loopne
sbb
fistpl
fdivl
incl
out
xchg
pop
in
adc
fstps
test
add
shrb
setne
outsb
sbb
ds
inc
dec
pop
andb
cwtl
repnz
sub
push
shr
cmp
adc
mov
test
push
inc
xor
cld
decb
test
pop
ja
fdivs
in
mov
clc
push
mov
lods
adc
lods
jae
fidivrl
ret
xor
mov
sub
sbb
jmp
or
xor
loope
insb
xchg
cld
lods
mov
fdivrl
jl
mov
jae
fistl
push
fmull
lret
push
xor
cmp
adc
mov
mov
or
stos
nop
loop
loop
fmull
cmpsb
jns
cmp
sbb
add
mov
inc
cmpsb
mov
adc
mov
add
daa
outsl
daa
push
sbbl
sbb
ds
mov
movsb
cmp
mov
jl
rcrb
cmp
and
stc
sbb
sbb
pop
mov
scas
stos
push
add
je
or
pusha
mov
sub
inc
cltd
and
out
inc
sub
and
add
lret
data16
cmpsb
jnp
sbb
add
addr16
sbb
pop
pusha
mov
outsl
stos
inc
cltd
rol
add
add
add
mov
sub
adc
pushf
lcall
push
testb
sbb
hlt
mov
ja
push
lahf
scas
xorl
fists
mov
mov
push
inc
cwtl
cmp
in
inc
js
pop
hlt
lods
int3
and
inc
adc
lods
aam
or
or
test
sahf
dec
cmpsb
ret
ljmp
stos
mov
sub
xchg
xor
adc
popf
outsb
int
js
jne
ss
lods
xchg
cmpsl
push
scas
fstps
push
jecxz
cmp
mov
add
fwait
jg
cmc
dec
and
aad
mov
mov
sub
pop
scas
sub
mov
jne
loope
dec
frstor
or
call
rorl
jb
stc
sahf
sbb
pop
lock
inc
popa
lea
pop
js
inc
cld
idivl
roll
outsl
ficoml
xchg
push
scas
out
pop
jle
inc
lds
sub
rorl
dec
push
rcrb
stos
sub
dec
or
lcall
xor
lea
add
mov
mov
lods
xchg
or
rcrl
insl
movsl
fstps
sub
adc
push
cwtl
jno
das
lea
mov
in
inc
or
xor
out
mov
xchg
sbb
cltd
fisttpl
shrl
xchg
shll
mov
imul
jae
sub
jb
add
push
dec
sbb
inc
outsb
mov
xor
test
sbb
mov
mov
repnz
idiv
push
or
fdivl
cli
jo
xchg
jb
cmp
mov
outsl
bound
jle
dec
andl
cmp
iret
and
mov
adc
sub
popf
dec
lods
inc
cmp
pop
lret
out
pop
rcl
xor
cmp
dec
pop
jne
repz
lock
shl
data16
arpl
fstpl
add
es
stos
daa
adc
xorb
mov
sbb
jecxz
inc
mov
inc
xor
in
movsl
jne
xor
mov
pop
out
int3
cmp
mov
push
or
out
xchg
sub
or
dec
cmp
sub
stc
xchg
mov
mov
arpl
mov
das
into
flds
push
cmpsl
out
sbb
mov
mov
call
adc
inc
push
dec
inc
and
adc
sbb
sbb
mov
aaa
sbb
xlat
push
xor
mov
jg
cmovae
mov
dec
mov
mov
in
mov
js
add
sti
mov
cmc
mov
pop
je
rcrl
das
or
xchg
jno
mov
rcrb
xchg
inc
push
kandnb
testb
les
popf
mov
pop
mov
sbb
icebp
test
xchg
sbb
xor
std
cmc
ret
pop
out
mov
xor
xlat
loope
dec
in
add
ficoms
notb
fdivrl
std
fstps
sbb
sub
dec
mov
mov
shl
bound
enter
fstpl
dec
adc
mov
andb
or
push
aam
or
cli
or
aaa
into
hlt
mov
loop
adc
int
dec
loopne
jp
aam
shll
stc
mov
mov
and
pop
ret
js
push
sub
lcall
iret
outsb
inc
ficompl
jle
call
das
lock
lods
jge
nop
dec
adc
repnz
jb
daa
movsb
mov
push
ja
and
testb
lret
jle
pop
fcoms
insb
repnz
push
repz
mov
mov
xor
inc
fsubrs
jge
movsb
enter
sub
lods
pop
hlt
inc
add
jnp
mull
int
sbb
push
cmp
imul
shll
addr16
push
clc
aaa
push
in
test
push
or
push
jb
lea
xlat
push
and
xchg
scas
mov
fwait
xor
sarl
lcall
and
pushf
mov
jb
adc
mov
push
repnz
lds
xor
bound
inc
push
lahf
subl
shlb
aam
lods
inc
xor
xchg
daa
mov
inc
mov
pop
push
or
jnp
mov
lahf
loope
or
pop
ljmp
outsl
sbb
sbb
mov
pusha
jo
ds
xchg
es
movsb
xor
sbb
dec
add
test
scas
push
or
cmp
in
std
jle
mov
mov
mov
std
in
leave
inc
jl
std
sti
mov
int3
shl
rcrb
hlt
xchg
sbb
insl
add
repz
stos
mov
shll
fs
sbb
sbbb
lret
cmc
fbstp
movsb
dec
test
lret
xchg
pop
and
das
cmp
pusha
mov
out
ficomps
pop
adc
pop
or
mov
dec
xchg
int3
xor
sbb
jmp
cli
jne
orl
dec
jl
repnz
insl
add
adc
cmp
scas
cmp
inc
mov
push
sbb
add
shlb
mov
push
out
or
test
mov
cmpsl
scas
in
cmpsl
aaa
pop
sahf
mov
fsubl
fucomp
dec
nop
jmp
aad
cmpsl
imul
inc
mov
fcmovb
cmp
push
into
fcoms
loopne,pt
dec
sbbl
mov
mov
cltd
loopne
sahf
testl
jne
jb
xchg
cmpb
daa
bnd
pop
test
jo
rclb
lcall
repz
shll
shrb
sub
sub
pop
insb
mov
ret
daa
push
jns
cld
or
mov
adc
loope
cmp
icebp
add
adc
xor
call
daa
imul
add
cmp
sub
rorb
insb
mov
pop
mov
arpl
dec
pop
pushf
mov
aas
pop
fimull
jno
mov
clc
sbb
xchg
cs
jmp
xchg
inc
outsb
das
inc
outsl
push
in
test
dec
cmpsl
fs
add
and
mov
inc
sbb
sar
out
xchg
mov
fucom
or
xchg
or
pushf
icebp
insb
or
pop
lea
insl
out
loopne
sub
dec
in
bound
xor
jmp
xchg
lcall
inc
loope
mov
jmp
inc
adcl
out
je
arpl
enter
in
bound
je
addr16
push
inc
and
das
aam
stos
add
pop
jae
iret
push
adc
arpl
ret
idivb
jmpw
in
xor
add
lcall
sub
mov
nop
cltd
pop
or
les
fisttpll
xchg
not
leave
pusha
xchg
hlt
mov
mov
pop
vpaddusb
mov
adc
adc
loope
mov
add
insb
fnstcw
cmp
mov
fcompl
adc
jle
out
pushf
in
push
testl
psadbw
inc
call
sahf
addb
xchg
inc
cs
mov
mov
pop
mov
pop
dec
lret
push
jge
jns
outsb
pop
fcmovnb
push
test
addr16
je
or
sbb
scas
imul
or
inc
dec
xchg
inc
push
jmp
mov
pop
hlt
mov
ja
outsl
cmp
adc
adc
pop
testl
inc
std
and
adc
mov
jb
push
push
mov
mov
loopne
sbb
lds
jae
in
jno
fbstp
sbb
inc
push
cmp
enter
sarl
int3
dec
scas
inc
sarb
mov
dec
inc
fildl
mov
imul
adc
jp
or
dec
inc
loop
int3
mov
in
add
int3
mov
movsb
repz
inc
movsl
je
mov
mov
xor
jg
gs
xchg
leave
push
push
sbb
out
cmpsl
pop
and
fdivs
cmc
cmpsl
stc
mov
fstl
repnz
jmp
mov
push
movsb
repnz
movq
and
and
pop
loopne
mov
mov
mov
frstor
cmp
imulb
xorb
pop
in
jne
dec
movsl
add
je
pop
and
jo
xchg
mov
cmpsl
inc
clc
add
daa
lcall
jns
mov
xor
push
aaa
dec
nop
iret
insl
add
mov
dec
leave
jle
cmp
sarb
popf
dec
sarl
adc
ds
and
cmp
push
adc
fsts
into
push
idivb
push
imul
xor
bound
scas
je
adc
scas
xchg
ss
jb
inc
int3
adc
mov
mulb
enter
lret
arpl
add
inc
pop
pop
cwtl
mov
mov
mov
xchg
roll
mov
dec
xor
sar
lahf
push
xchg
xchg
xor
sub
movsb
notl
std
and
test
push
das
inc
daa
arpl
push
inc
aas
pop
or
inc
mov
and
pop
les
adc
lcall
call
scas
jno
pushf
push
imul
mov
mov
jbe
mov
push
cwtl
xchg
jo
arpl
stos
sbb
aam
cmp
mov
mov
fwait
in
sbb
pop
mov
inc
or
jbe
clc
dec
mov
push
pop
xchg
push
ss
xor
xchg
lcall
mov
inc
outsl
ds
mov
imul
lcall
jle
sub
icebp
xchg
mov
cmp
push
movsl
xor
xchg
cmp
pop
fwait
loope
shr
sbb
sti
clc
or
add
loope
mov
pop
cmp
xor
loop
lods
imul
movsb
leave
ds
xchg
nop
adc
jbe
mov
cmp
bound
mov
push
mov
stos
loope
fiaddl
arpl
push
ja
lds
rorl
push
mov
fstl
add
shrl
jno
outsb
jecxz
stos
jmp
mov
cwtl
rcrb
aas
popf
xor
jno
addb
rolb
fsts
andb
cmp
adc
sub
mov
sbb
js
pop
pop
ljmp
push
scas
lds
repnz
and
vmovaps
pusha
xor
rcrb
imul
pop
ja
pop
cmp
inc
in
jbe
ds
inc
adc
push
lcall
sahf
lods
stos
jecxz
add
arpl
mov
cmp
testb
add
pop
push
popf
ja
sbb
cmpsb
or
adc
sub
mov
jnp
outsl
ret
lods
or
jae
clc
iret
mov
cmp
jne
pop
cmpsl
outsl
push
xor
dec
jae,pn
mov
iret
imul
adcb
push
mov
pop
push
in
fwait
dec
and
rorl
xchg
sbb
jecxz
cmp
push
hlt
cmp
fstl
mov
fidivs
mov
lret
jne
iret
and
jae
lea
lods
andl
or
inc
pop
dec
pop
scas
iret
push
fwait
jae
popf
xor
inc
flds
out
xchg
fwait
pop
scas
lock
push
sub
sbb
pop
or
lods
or
dec
jecxz
jo
incl
enter
xorb
and
jg
sub
push
repnz
sbb
fldt
fwait
inc
mov
int
outsl
xor
sbb
add
jbe
arpl
or
pop
pop
out
pop
in
fwait
lds
xchg
jns
lahf
ss
cwtl
lahf
data16
mov
pop
pop
aas
adc
jne
loop
mov
sbb
aaa
mov
lret
mov
push
out
in
push
sub
loopne
loop
or
xchg
mov
test
jge
ljmp
imul
addr16
lahf
sbb
punpckhbw
ja
cmp
push
std
scas
icebp
pop
ret
mov
into
fldcw
aas
sub
adc
cmpsl
lcall
xor
call
cmp
loope
test
mov
xlat
fwait
or
psubsw
push
fisubs
mov
lcall
sti
bswap
cmp
and
cwtl
and
add
xor
cs
xor
loope
mov
loopne
loopne
cli
decl
inc
lahf
cmp
sti
jbe
pop
test
andb
mov
and
ret
xchg
mov
call
cmc
mov
sbb
scas
cmp
sahf
inc
fimuls
stos
jo
test
divl
xchg
xchg
sub
or
or
fadds
mov
pavgw
xchg
ljmp
in
aam
addl
lock
jmp
or
cli
xchg
aam
dec
rorb
in
les
movsl
repnz
loope
cmp
clc
inc
pop
out
sbb
cmp
lret
cmp
adc
fdivs
push
in
xchg
inc
pop
scas
cmp
inc
push
and
inc
sarb
outsb
mov
jecxz
pop
imul
push
cmc
movsl
push
push
push
add
push
dec
push
mov
testl
sub
iret
xor
mov
fs
fiadds
add
jg
shrb
push
push
pop
cmpsb
lock
pop
inc
mov
push
subb
adc
inc
mov
in
jg
xchg
xor
push
out
inc
adc
fmul
cmp
popa
cmp
xlat
addl
stos
mov
dec
movsl
scas
mov
sub
aaa
stos
mov
sbb
int
mov
and
xor
xchg
pusha
test
outsl
sub
pop
mov
pusha
lcall
add
sahf
das
mov
popl
or
outsb
mov
add
dec
das
mov
mov
push
mov
test
call
das
pop
lcall
pop
lret
imull
stos
jle
popf
rorb
xchg
dec
test
mov
mov
dec
add
or
xor
pusha
test
push
jl
daa
mov
gs
gs
pop
cmp
mov
shrl
mov
sub
mov
mov
bound
dec
lahf
pusha
sub
sarb
mov
pop
push
inc
dec
shrl
cmc
push
push
mov
jne
pop
daa
mov
mov
push
pop
mov
in
aas
repz
pushf
popa
adc
pop
jbe
lahf
jnp
xchg
in
mov
ret
jo
lret
push
call
sbb
mov
xor
in
inc
lock
stos
cmp
bound
sub
pop
movsl
jmp
jecxz
pop
lahf
loop
push
jge
les
insb
or
push
dec
loopne
push
adc
adc
push
decl
pop
cs
pop
push
call
push
push
aad
xchg
xchg
dec
jecxz
sahf
int
adc
xchg
lds
les
jle
rcll
xorl
sub
push
push
lods
dec
arpl
xor
xchg
push
sbb
mov
ljmp
adcb
cmpsl
and
push
mov
aas
cs
bound
push
outsl
loope
es
imul
inc
iret
icebp
mov
sub
dec
pop
mov
mov
aam
sub
dec
es
fisubrs
dec
sub
and
dec
jmp
lds
cmpsb
push
or
adc
xchg
and
dec
test
or
and
mov
dec
jle
inc
icebp
mov
jmp
fildl
ret
dec
mov
movl
push
ljmp
hlt
xchg
inc
or
and
les
sub
xor
push
pushf
outsl
fisubl
lods
add
adc
mov
nop
dec
lea
cs
or
cltd
cmp
mov
ret
push
popf
call
ds
test
stos
movsb
jo
dec
pop
cmp
stos
mov
ret
sub
and
pop
cmp
loope
shrb
add
mov
movb
movaps
frstor
cmc
js
mov
mov
cmp
andl
cmp
mov
mov
or
xor
stc
rcrl
shlb
add
andl
pop
jo
adc
test
movsl
rcr
mov
movsb
test
cmpsl
sahf
jbe
test
xor
ret
cli
cld
fldcw
xor
cli
fwait
push
fnsave
out
mov
insb
psllw
in
inc
mov
fucomip
xchg
stc
mov
mov
pop
mov
sub
push
push
dec
jb
inc
mov
adcb
lret
addr16
sarl
push
jmp
and
jb
pop
mov
cmpsl
xchg
push
mov
fs
mov
addr16
jp
push
push
add
xchg
jae
jmp
xchg
mov
sahf
jl
mov
cmpsb
dec
pop
ljmp
mov
das
jg
fs
xchg
fwait
cs
mov
push
lcall
in
mov
adc
sbb
mov
sub
test
xchg
push
test
and
dec
jno
das
and
sti
push
clc
sar
fcomps
add
jo
mov
int3
jmp
push
jle
mov
or
ret
test
enter
or
jb
mov
leave
subb
mov
arpl
fcmovnbe
mov
insl
ljmp
push
xchg
and
popf
jne
add
cmc
ret
lds
or
shll
push
pop
inc
pop
lea
add
push
mov
jmp
loope
sbb
les
testb
adc
rol
popl
daa
gs
aaa
into
fistpl
pop
mov
cmc
adc
aam
dec
and
lahf
shr
jle
push
in
mov
gs
jl
pop
and
add
fstl
lcall
xchg
jo
mov
or
sarl
sbbl
inc
outsb
test
mov
and
xor
cmp
xchg
gs
sbbb
mov
lds
inc
push
push
insb
and
push
mov
out
push
lods
test
lods
ror
push
jmp
push
imul
out
hlt
mov
rcll
jl
xchg
mov
stc
fildl
aam
sbb
inc
dec
test
jnp
ret
outsl
add
fbld
jno
xor
xor
ret
mov
jmp
cmc
cmp
ret
pop
lea
push
add
in
add
lods
rolb
mov
ds
roll
insl
jg
sbb
sub
xor
fs
push
and
imul
or
popa
cmp
psadbw
pop
jmp
jle
daa
cmp
pusha
mov
fisttpll
add
divl
jb
sbb
inc
aaa
push
into
mov
aad
xchg
shl
iret
aas
incl
lods
xchg
sbb
inc
or
cmp
nop
xor
loop
mov
push
repnz
aad
and
es
mov
in
push
mov
adc
push
test
xchg
pop
std
leave
push
outsl
sti
movsl
xchg
insl
jge
xor
pop
dec
repz
sar
cmpsb
ret
pop
cmp
dec
clc
jmp
mov
and
iret
enter
xchg
mov
scas
frndint
fstpl
sub
jge
aad
push
fwait
imul
sbb
popf
stc
iret
mov
lods
divb
add
push
dec
lods
ljmp
pushf
arpl
push
jbe
and
imulb
insl
mov
push
lahf
call
sbb
je
inc
mov
orl
dec
aad
pop
divb
out
mov
cwtl
lret
inc
sbb
mov
sbb
or
and
adc
jbe
push
movsl
or
std
or
stos
mov
js
fsubrl
cmp
pop
insl
jecxz
ds
pop
push
push
mov
pop
imul
lds
mov
sbb
mov
or
daa
pushf
sbbb
cmp
mov
push
sub
test
add
repnz
test
mov
shl
mov
adc
int3
jo
adc
push
sbb
dec
in
and
xchg
dec
add
mov
xchg
out
dec
jp
lahf
je
push
mov
jb
xor
add
testb
loope
pop
insl
push
add
out
repnz
movsb
pop
mov
push
sarl
xchg
in
sbb
pushf
cmp
jmp
leave
and
call
adc
in
inc
shlb
lods
mov
pop
mov
mov
cmp
cmp
sub
xor
sub
cmp
rorb
movsl
scas
rorb
fcompl
enter
xchg
pop
mov
popf
stos
cmp
push
adc
xor
aaa
xchg
sub
ds
or
sbb
push
mov
inc
fs
mov
lea
mov
push
insb
pop
daa
lcall
inc
outsl
mov
mov
inc
jmp
jb
insl
mov
test
in
mov
inc
add
addb
aaa
mov
iret
lcall
pop
dec
fstpl
mov
jne
jb
testb
cmpsl
repz
and
fnstsw
rcr
rcr
inc
int
sub
or
out
and
pop
fmuls
aaa
jle
call
pop
jp
arpl
mov
jecxz
cli
xchg
jmp
or
pop
cltd
fidivl
adcl
in
pop
or
outsb
jb
ret
seta
loopne
cmpsb
in
icebp
adc
mov
popa
fcoms
fnsave
and
push
push
sar
add
pop
js
fldt
daa
xlat
stos
dec
sub
gs
dec
fs
xchg
mov
pushf
sub
push
and
sbb
xchg
mov
adc
jo
jp
mov
cmp
inc
dec
cmpsl
cli
xor
or
push
call
bound
or
xchg
xchg
js
decl
xor
test
pop
addr16
stos
and
cmp
shrl
shl
add
int
or
pop
fildll
les
mov
jmp
or
jb
stc
or
xlat
xchg
sub
out
iret
cmp
push
not
les
ret
js
repnz
jle
inc
jbe
jnp
or
pop
jns
mov
or
outsb
add
cmp
aam
sub
jno
mov
and
ret
ficoms
das
rolb
lds
xrelease
xor
addr16
loop
test
add
movsb
sbb
ret
mov
sub
xchg
sbb
or
arpl
mov
es
sub
aaa
jmp
sbb
xchg
lcall
rcrl
bound
fadds
out
push
push
sahf
mov
or
movsl
in
fnstcw
fstpl
out
and
enter
and
push
cmp
xor
and
aad
fcompl
cmpsb
jl
mov
jle
mov
adc
or
ds
sub
mov
inc
xor
pushf
jae
dec
fisubrl
add
int3
mov
push
arpl
roll
nop
daa
mov
shlb
scas
jg
fisubrl
or
add
dec
movsl
push
lods
pop
jle
push
pusha
xor
mov
sub
ret
rorl
mov
sbb
insb
mov
push
jmp
sub
jle
mov
scas
sahf
cli
inc
mov
sbb
or
repz
sub
pop
loop
mov
xchg
xor
inc
or
mov
out
xor
cmp
xor
out
push
mov
jp
hlt
mov
fwait
sub
movsb
xchg
mov
es
lock
movsl
sub
test
imul
mov
or
jo
jmp
cmpsb
add
xchg
xlat
scas
dec
imulb
add
fsubrs
ljmp
scas
xchg
aas
shll
ds
add
sbb
sti
adc
add
mov
fsubrp
aaa
int
scas
push
jp
cmp
mov
jmp
pop
adcl
mov
dec
pop
xchg
and
xlat
rorb
andl
mov
data16
push
fildll
sub
pop
in
adc
fyl2x
dec
mov
stos
push
iret
sub
push
sub
push
pop
sub
lret
xlat
pushf
and
xor
xchg
cmp
ffreep
sbb
negb
sti
or
fidivs
stos
jnp
pop
or
mov
test
scas
ja
fiadds
add
testb
bound
jne
or
loop
cmp
fidivl
xchg
cmpsb
or
insb
jno
leave
mov
repz
loopne
sbb
add
cmpsb
fildl
imul
scas
push
lds
push
je
inc
jnp
fimull
sub
adc
movsb
sub
sub
out
jo
sbb
cli
mov
rclb
mov
in
mov
cmp
cmpsb
pop
dec
xchg
or
in
mov
clc
sti
test
and
ljmp
jae
push
or
lcall
cmp
pop
adc
mov
fs
jo
xor
push
popf
mov
xchg
xor
in
iret
xchg
test
inc
push
mov
out
mov
lcall
sub
sbbl
addr16
lahf
cmp
cwtl
ljmp
jmp
jg
hlt
sbbl
jle
rorl
dec
clc
sbbl
xchg
lods
and
pop
lock
add
mov
mov
arpl
lret
bound
mov
dec
in
jnp
shr
and
jg
cmove
or
jge
push
mov
mov
dec
mov
jle
xchg
push
mov
adc
stos
lods
addr16
xor
aas
add
jae
notl
push
inc
sub
jne
icebp
adc
add
mov
test
lcall
xor
adc
push
lea
mov
mov
or
push
js
and
insb
dec
repnz
xchg
inc
mull
repnz
xchg
add
xor
cltd
stos
jle
aam
adc
jbe
mov
imul
in
in
cmpps
daa
jmp
dec
adc
adc
jno
test
data16
mov
push
int3
cmp
pop
xor
dec
addr16
shrl
dec
in
inc
or
pop
lock
and
in
ret
cli
test
jnp
and
push
xlat
shr
or
nop
pop
js
push
out
sti
push
lcall
push
mov
sahf
aas
inc
fdivs
mov
sbb
pop
xor
or
leave
and
scas
lret
pushf
subb
int
push
xor
mov
add
jnp
inc
mov
add
aam
and
mov
into
cmp
fistpl
out
adc
xor
in
enter
jne
dec
xor
cmp
add
cld
pushf
and
inc
mov
popf
pop
dec
sub
cmp
arpl
or
push
out
jns
pop
mov
data16
cwtl
xlat
cmc
lcall
pop
xor
rolb
pop
cli
jae
sub
imul
cltd
or
out
or
pop
mov
pop
leave
inc
cld
data16
pop
adc
inc
xchg
dec
xor
inc
ret
push
sahf
add
sbb
clc
push
sub
bound
push
sbb
loope
cmp
dec
clc
sub
or
dec
jl
out
scas
cmp
cmpsl
gs
mov
push
dec
dec
jg
push
ljmp
cmp
data16
xchg
mov
inc
enter
ja
je
addr16
inc
xchg
inc
mov
jge
cmpl
int
mov
cs
outsl
sub
inc
mov
loop
sbb
mov
sbb
lahf
out
repz
mov
add
jns
jnp
push
dec
add
loop
push
mov
lahf
sub
test
cltd
stos
lcall
cli
push
es
sbbl
inc
pop
in
fdivrs
push
sub
js
jp
mov
sub
pop
cs
mov
clc
sub
xlat
imul
mov
jno
xlat
test
data16
js
dec
lods
aaa
in
test
xchg
mov
data16
lock
pop
rcl
cli
inc
in
fldl
imul
pop
fsubl
xor
sbb
outsb
push
push
or
mov
sub
pop
push
out
mov
jo
push
push
inc
inc
xchg
pushf
stc
loop
jne
xor
aas
lcall
xor
and
inc
push
or
mov
pop
xor
dec
dec
shll
mov
pushf
jae
aad
jno
dec
cli
out
sar
andl
push
outsb
ss
fldcw
sub
jmp
add
ljmp
test
push
mov
add
loopne
int
dec
add
jb
inc
pop
repnz
sbbb
jns
scas
jg
xchg
js
into
movsl
adc
hlt
aaa
push
cltd
pop
stos
inc
pop
lcall
add
cltd
push
pop
fwait
mov
stos
add
fsubr
outsl
sbb
shrl
popf
mov
imul
pop
repnz
cli
repnz
pop
dec
das
sbb
jns
xchg
and
test
inc
adc
dec
xchg
sahf
and
push
inc
insb
mov
out
mov
add
cmpsb
sub
fnstcw
dec
fsubrl
enter
sub
loope
jmp
dec
sbb
pop
dec
imul
movsb
sbb
stos
inc
and
sub
scas
inc
enter
sbb
push
sbb
mov
bound
mov
add
rcr
jbe
int3
arpl
bound
filds
jbe
hlt
cltd
inc
clc
push
gs
leave
pop
addr16
rol
push
sub
call
shrl
push
jnp
or
mov
xchg
jns
out
fisttpl
or
sbbb
sub
adc
mov
xor
add
pushf
xor
dec
fs
inc
mov
in
cmp
push
sub
xorl
mov
test
add
dec
push
insl
xchg
fbstp
push
cmpsb
imul
cmp
xlat
sbb
dec
xchg
lret
loop
jae
add
xor
test
call
mov
pop
sub
aas
jl
push
push
pop
fsubrs
mov
push
sub
mov
test
lret
jae
dec
cmc
lods
xchg
dec
ds
sar
inc
icebp
insb
cmp
call
mov
rcll
inc
cmp
testb
stos
xor
sahf
mov
leave
stos
mov
xchg
sub
push
jnp
sahf
adc
std
xchg
arpl
inc
xchg
mov
in
mov
jno
jle
jne
and
xchg
es
into
repnz
jae
into
xlat
or
insl
add
sub
mov
adc
lea
and
fildll
cmp
hlt
and
imul
mov
pop
inc
xchg
movsl
ds
scas
xchg
ljmp
inc
lret
dec
loop
mov
pushf
mov
imul
shrb
or
pop
ret
test
mov
outsl
subl
enter
xchg
adc
xchg
add
test
or
adc
push
shl
js
dec
cmp
cltd
push
dec
cli
int3
call
addr16
add
jns
mov
in
mov
jb
sub
popf
xor
out
roll
cmpsb
js
pop
sub
xchg
cmp
pop
xorb
pop
adc
xor
mov
inc
pop
jae
jg
mov
ja
push
inc
mov
subl
cli
push
jmp
int3
add
pop
arpl
andl
and
dec
jle
jp
sbb
mov
or
shlb
jo
js
int
lahf
clc
cmpsl
iret
cmp
push
enter
punpckldq
or
push
ja
lcall
addl
outsb
inc
mov
jecxz
faddp
fisttpll
mov
mov
mov
nop
and
movsl
nop
cmpsb
or
xlat
cmp
xchg
test
arpl
adc
pop
or
cmp
loope
pop
lods
xchg
in
sbb
dec
movsl
stos
dec
out
dec
shl
xchg
jp
push
sub
inc
lods
daa
ljmp
aad
jecxz
xchg
call
jl
mov
sbb
enter
push
sbb
xchg
jne
stc
mov
insl
daa
mov
sbb
stos
inc
cmp
pop
mov
jns
loop
arpl
es
push
in
dec
subl
leave
ret
cmc
arpl
xor
pop
dec
fdivl
std
scas
inc
leave
add
cmp
mov
sbbl
xchg
int3
shrb
pop
add
sbb
lea
jecxz
mov
push
popl
leave
movsl
inc
out
jg
cmp
dec
das
mov
divps
inc
scas
gs
pop
filds
int
or
cli
lds
in
jae
mov
mull
cmp
je
outsb
pop
scas
lahf
mov
int
xorb
xlat
push
icebp
data16
dec
sbb
mov
sub
mov
loop
mov
dec
inc
test
mov
mov
in
push
cli
dec
rcrl
mov
sub
adc
aas
mov
lahf
pop
mov
fadd
dec
test
push
in
mov
int3
cwtl
inc
jecxz
test
out
sti
and
and
int
mov
ficomps
rcrl
pop
test
jnp
cmp
fisubl
pop
outsb
addb
cld
sbbl
es
jmp
jle
hlt
sbb
addl
rorb
bound
push
in
cmp
mov
mov
cwtl
sub
in
mov
rcl
jmp
mov
ret
shrl
popf
inc
mov
and
ret
mov
testb
addb
scas
mov
mov
add
push
loopne
loopne
mulb
jp
testl
xor
dec
sti
push
adc
decl
pop
push
xchg
mov
mov
adcl
nop
frstor
dec
popf
loop
xor
xor
mov
jo
mov
add
popf
insl
ret
outsl
mov
notl
mov
mov
leave
cli
xor
imul
je
hlt
and
outsl
xchg
lea
test
hlt
or
jp
pop
and
sub
in
testb
mov
std
xor
jecxz
dec
fidivrs
dec
ljmp
enter
mov
push
nop
std
jo
mov
stos
adc
test
pop
mov
hlt
call
cmp
xchg
int
mov
lret
jp
iret
mov
cmc
ss
insb
sub
pop
jecxz
into
into
jne
sti
cmc
sbb
jo
fcmovnbe
ficomps
out
mov
push
push
pushf
call
jg
data16
sbb
lea
outsl
sbb
jle
and
jns
add
and
enter
push
cmp
js
pop
call
in
lock
sub
scas
jno
das
add
cmp
adc
push
ret
clc
and
jle
scas
pop
mov
inc
push
jle
mov
mov
or
sar
shrl
dec
loopne
int
movsl
push
xchg
call
jno
in
pop
div
jl
and
cmpsl
jae
sbb
jg
xchg
lods
mov
xor
dec
loope
push
cmp
jnp
sbb
cs
mov
push
in
fucom
sbbb
cmc
dec
lcall
lods
or
lcall
push
repz
dec
outsl
cmp
test
aam
or
or
lock
cs
gs
in
or
sbb
add
mov
mov
pop
add
into
stos
sub
pop
adc
or
mov
outsl
mov
dec
pop
test
fucomp
cs
mov
pop
inc
mov
je
mov
cli
les
scas
iret
cmpsl
inc
inc
in
stos
lods
jo
cmc
movsb
inc
int3
pop
mov
jp
dec
xor
mov
fisubl
dec
popa
add
subl
mov
sub
jge
fidivs
adc
orl
xchg
mov
jbe
and
mov
ret
or
cwtl
mov
insl
pop
lret
std
inc
imul
rcrl
push
jno
enter
push
adc
mov
or
testw
ja
les
aad
dec
jne
pop
out
repz
xlat
lds
fwait
rorl
int3
sub
jecxz
mov
shrb
cmp
push
inc
test
shll
jmp
insb
mov
pop
roll
mov
xor
sub
aam
and
aas
stos
in
dec
xchg
push
jmp
or
test
mov
nop
pusha
add
inc
addb
mov
or
xchg
cli
inc
nop
inc
jmp
cmpsl
push
mov
notb
rclb
mov
xchg
sbb
dec
movsb
shrl
dec
dec
testb
xchg
repnz
clc
je
and
and
jns
mov
fisubrs
inc
xlat
adc
pop
insb
xchg
clc
push
repz
xor
mov
sbb
mov
cmp
sub
shl
pop
pop
push
or
inc
inc
lret
jno
pushf
stc
cmpsb
dec
pop
sbbl
movsb
dec
lahf
jne
lds
cmp
test
cmp
xchg
pop
cmp
mov
cs
outsb
lcall
pop
lahf
sbbl
lret
aas
xor
lods
or
int
out
pop
fisttpl
jmp
push
jno
fs
test
popa
add
bound
xor
clc
aas
popf
inc
inc
stos
loope
cmp
push
push
fsubrl
sub
or
dec
imul
or
lds
rcl
out
cmp
jmp
mov
sbb
inc
mov
cmp
leave
inc
sub
dec
add
cmp
jge
pop
out
mov
jmp
loop
js
inc
sbb
nop
loop
xor
in
clc
or
fdivrs
sbb
sbb
pop
aaa
gs
ds
ja
pushf
dec
pusha
xchg
xor
movl
lret
pop
mov
jg
push
iret
mov
adc
cld
push
and
fisubl
in
ss
xchg
icebp
cmp
clc
jecxz
out
lcall
shll
insb
jle
leave
ds
push
lods
rcll
xorb
sub
scas
dec
aaa
mov
mull
test
mov
mov
push
in
cmpsl
aam
inc
or
loop
bound
push
mov
mov
leave
loop
lcall
outsb
sbb
shrb
pop
test
xor
outsl
leave
mov
cld
sar
xchg
testb
test
repnz
leave
sub
or
xor
jl
or
sbb
xlat
adc
mov
cltd
ss
je
aam
ja
push
mov
test
and
adc
cmpsl
test
lods
jno
push
shlb
sub
sub
jbe
pop
mov
stos
push
xchg
push
fnstsw
inc
and
adcl
mov
mov
stos
jmp
cmp
mov
xor
adc
sbb
in
xor
addb
dec
pop
fistl
testl
xchg
addr16
fwait
cwtl
icebp
cmp
bound
aam
jno
rolb
cmp
pop
idivb
mov
mov
popf
mov
pop
sbb
adcb
scas
orb
or
data16
in
or
lods
or
mov
mov
inc
daa
outsl
clc
daa
mov
sbb
pop
mov
pop
and
shlb
outsb
add
fdivrp
mov
shlb
pop
movmskps
stc
mov
outsb
fdivs
xchg
sbb
imul
add
add
mov
movsl
sti
inc
icebp
sub
or
inc
fisubl
popa
jmp
sti
jp
icebp
cmc
adc
dec
jne
push
cli
mov
fwait
push
insb
dec
pop
in
lret
and
sarb
adc
loop
leave
mov
add
cmpsl
push
mov
mov
icebp
repz
fs
das
jmp
add
cmp
mov
daa
aaa
mov
jns
lock
inc
mov
sbb
adc
jmp
push
or
mov
inc
push
call
or
sbbb
mov
icebp
or
mov
inc
movl
add
mov
sub
or
mov
pop
inc
rorl
mov
repz
lahf
nop
daa
daa
andl
mov
sub
add
es
fs
inc
mov
add
faddl
int3
dec
hlt
jp
and
call
xor
mov
cli
cmp
lods
and
and
sub
pop
js
add
mov
sti
mov
bound
dec
cwtl
cli
stos
stc
es
loope
repz
push
gs
loopne
sbb
and
insl
insl
stc
and
in
or
cmp
les
dec
lock
mov
dec
sub
call
sub
clc
cmp
sbb
call
lock
out
rclb
jae
sbb
popf
jae
into
add
mov
sbb
add
mov
popa
aas
mov
or
mov
loopne
pop
scas
fildl
dec
stos
push
sbb
scas
repnz
xor
mov
jne
aas
push
and
hlt
idivb
add
mov
xorl
pop
pop
cmp
inc
popf
mov
lock
lret
rcr
mov
or
or
test
adc
and
mov
xor
subl
es
cmp
lea
mov
pop
inc
dec
sti
mov
push
mov
test
sarl
sahf
fnstenv
addr16
insb
imul
mov
ret
jns
adc
pop
fbstp
add
fcoml
into
and
mov
in
js
sub
jb
mov
icebp
decb
push
imul
in
push
pusha
pop
push
fisttpll
scas
and
sahf
rcr
leave
out
ds
sbb
sub
lods
dec
mov
push
fsts
out
das
das
adc
cmp
das
lock
lret
sbb
mov
or
sbb
lahf
nop
sub
mov
ds
inc
push
loop
adc
std
jg
movlps
dec
divb
pop
sahf
outsl
pop
pop
inc
and
mov
inc
lcall
and
push
xchg
sub
xlat
cmp
lea
mov
mov
jnp
pop
push
mov
test
pop
dec
das
mov
loopne
movsb
and
pandn
dec
sub
xor
data16
xchg
in
cmpl
pop
lret
mov
inc
fnstsw
aas
dec
out
push
js
in
nop
xchg
mov
inc
sti
mov
inc
jmp
or
lds
ljmp
movsl
pop
xchg
xor
aaa
pop
mov
push
insl
dec
rcrl
pop
fdivl
sbb
daa
stos
push
test
inc
fidivs
test
lcall
and
je
dec
mov
mov
xor
or
test
lret
data16
xchg
pop
fimuls
cli
dec
cmpsb
and
das
outsl
outsl
repz
xchg
mov
mov
aam
push
xchg
cmp
arpl
push
mov
sahf
cli
bound
aaa
out
cmp
loopne
insl
bound
imul
imul
jbe
shlb
pop
sti
addr16
jp
jmp
dec
pusha
adc
pop
scas
insb
mov
sub
xchg
mov
out
inc
cmc
or
test
ds
dec
mov
and
cmp
and
leave
das
or
inc
sti
cmp
xchg
std
xchg
mov
or
sbbl
repnz
adc
xchg
dec
imul
jmp
subl
pop
mov
sub
ds
pop
test
jnp
sbbl
and
dec
call
lahf
inc
neg
outsb
add
adc
jno
dec
loopne
cld
lcall
push
imul
shr
nop
pop
jp
sub
push
push
dec
jb
adc
xchg
mov
enter
add
and
adc
ret
cltd
pop
into
mov
mov
push
mov
mov
fstpt
enter
insl
sub
lret
hlt
sbb
stc
mov
or
rcl
mov
js
fistpl
xor
lds
jne
movsb
bnd
pushf
adc
lods
clc
repnz
cmp
in
iret
sbb
mov
mov
cs
out
sbb
cltd
pop
mov
or
sahf
rcrb
add
add
arpl
in
mov
out
adc
mov
pop
mov
inc
push
mov
xor
test
js
enter
add
pop
rol
aam
jno
mov
imul
and
cmp
ret
or
fisttps
push
adc
test
mov
inc
imul
popa
stc
mov
and
int3
xchg
jne
xchg
stos
push
mov
frstor
xlat
and
rcll
adc
fdivs
ja
add
dec
out
push
or
inc
push
stc
jb
lods
mov
stos
push
sub
loopne
adc
or
andb
mov
cltd
mov
xor
int
jns
call
sbb
in
xor
pop
jns
lcall
and
cmp
push
imul
or
sub
pop
pop
or
inc
jno
test
push
cmp
cltd
jo
cmpsb
lods
int3
dec
loopne
mov
mov
decb
inc
jb
pushf
test
ret
hlt
stos
dec
xlat
push
cltd
popl
rcrb
mov
dec
jg
jl
fcmove
add
es
xor
popa
mov
test
dec
jecxz
mov
cmp
lods
cltd
inc
popf
sbb
sbb
adc
fsubrs
pop
jne
inc
nop
sbb
inc
fs
filds
jnp
lret
bound
test
or
dec
repnz
jg
int
dec
lcall
jbe
or
fsubrs
sub
imul
sbb
lock
mov
in
xlat
push
sub
push
and
dec
out
xchg
jge
in
pusha
fnstsw
and
scas
and
and
jne
xchg
imull
mov
fistps
xchg
lods
and
mov
jle
mov
lds
xchg
mov
cmc
les
pop
lods
out
pop
enter
adc
cmp
adc
scas
jge
cmp
adc
jns
daa
mov
popa
jb
sub
push
in
inc
ret
or
xchg
push
out
out
ret
ja
ss
lret
or
mov
push
cmovs
jp
cld
lcall
jbe
outsb
mov
mov
mov
cmp
pop
out
fmuls
fs
out
scas
mov
mov
push
mov
mov
inc
push
push
cli
mov
mov
lahf
mov
cltd
je
mov
push
jno
fbld
push
push
jge
and
mov
xor
lcall
pop
sbb
inc
push
pushf
cmc
adc
insl
push
test
pop
or
xchg
sub
and
adc
push
inc
mov
lret
xchg
jg
cmp
sub
xchg
cli
test
in
lea
xor
cmp
push
push
inc
sbb
test
pop
arpl
xchg
popa
clc
int
sbb
out
sbb
inc
cmpsl
jp
sahf
imul
out
sub
push
ror
daa
aas
adc
or
fsubrs
fbstp
je
dec
mov
test
cwtl
shr
shlb
xchg
sub
aaa
int
mov
and
lret
mov
dec
in
dec
lods
mov
dec
jl
lahf
scas
pop
jne
rolb
shll
data16
dec
pusha
popf
icebp
in
xor
sub
scas
mov
mov
int
shl
and
push
cwtl
inc
daa
adc
icebp
clc
xor
push
cmpsb
or
xlat
aam
add
scas
in
fisttpl
adc
jg
push
clc
and
in
push
dec
mov
mov
push
rcll
int
add
jge
repz
cld
sti
or
mov
ret
in
mov
je
cmpsl
js
push
cltd
or
in
ja
fwait
or
and
inc
push
mov
push
mov
xchg
subb
aad
movsb
sbb
pop
daa
in
lods
shrl
mov
sub
test
sbb
fwait
lcall
xchg
sub
pop
sbb
imul
push
mov
adc
call
in
imul
push
xor
cmp
cmpsl
push
and
push
addb
mov
mov
int3
fsubl
or
xchg
inc
jae
jge
jb
mov
cmp
cmpsb
nop
inc
mov
sbb
lret
jae
out
test
mov
jnp
out
test
js
rcl
punpckldq
and
ror
mov
js
les
dec
icebp
xchg
and
cs
adc
push
xchg
mov
sub
sahf
test
pop
outsb
loope
xor
push
loopne
pop
popf
and
pop
stc
pop
leave
xor
imul
fistl
adc
push
jne
popa
xchg
ss
cmp
or
aaa
jnp
push
movsl
xchg
clc
sahf
test
jg
sbb
add
add
dec
in
inc
in
push
or
mov
or
popl
shll
pop
mov
ss
bound
mov
xchg
and
and
fadd
adc
lea
cmp
adc
pop
imul
out
notb
mov
outsl
cs
ljmp
dec
addr16
jg
call
jns
notb
stos
mov
and
aad
test
mov
mov
jle
loopne
pop
daa
adc
rolb
shlb
sub
pop
fldcw
and
inc
dec
fbstp
cmc
and
cmp
or
ja
xor
loop
jne
pop
movsb
mov
cmp
lds
insb
xchg
cmp
push
cs
mov
lock
mov
dec
aad
out
test
and
or
and
mov
push
mov
loope
in
dec
repnz
xchg
sub
rorl
mov
pop
adc
ret
orl
in
jnp
or
in
arpl
dec
pusha
or
ss
push
aas
xchg
icebp
mov
adc
pusha
sti
aaa
pslld
inc
cwtl
jne
cwtl
loope
test
add
ds
dec
dec
pusha
xor
xchg
adc
mov
shll
dec
mov
fs
out
push
push
fbstp
lret
pop
popf
pusha
add
lret
fsts
adc
inc
js
push
jo
xor
or
push
rclb
jnp
rcrb
iret
shlb
lock
movb
in
jp
int3
int3
push
dec
inc
popa
jecxz
shrl
or
mov
daa
out
or
mov
movsb
icebp
jg
adc
xor
add
pop
add
add
add
cmp
mov
mov
xchg
add
rcrl
mov
loopne
rcrl
jb
out
pop
and
cli
xchg
and
repz
and
test
xchg
push
loope
lahf
mov
iret
and
lock
xor
dec
ljmp
lds
je
cmp
cmpsb
out
mov
cwtl
iret
js
pusha
shrb
mov
jge
push
inc
movsb
adc
add
mov
daa
testl
inc
cmpsl
mov
dec
cli
jbe
jmp
repnz
jl
sbb
iret
xchg
pop
imul
aam
inc
rolb
xchg
add
enter
add
jno
push
cmp
inc
xchg
les
jecxz
lock
pop
gs
push
aas
mov
loopne
push
mov
lods
mov
push
in
push
xchg
in
cld
je
adc
clc
cs
shl
inc
add
addr16
mov
push
push
pop
into
mov
insb
loop
fucomip
dec
xor
adc
into
dec
inc
xchg
sub
adc
mov
lods
in
clc
cwtl
int
sbb
daa
inc
fistpll
ss
mov
addr16
pop
cmp
xchg
test
push
loope
aas
rcrb
mov
add
dec
fdivp
jmp
sbb
lock
cmp
xchg
cmp
and
loopne
or
dec
sub
jmp
iret
fld
stc
push
in
aad
mov
imul
ficoml
out
jb
test
dec
mov
jge
fldl
sbb
and
pop
sub
adc
inc
push
sahf
push
or
out
fimull
push
rcr
or
cmpb
imul
sbb
dec
jae
repz
fidivrs
inc
call
cwtl
xchg
sub
or
and
xor
test
push
std
xor
shll
into
xchg
outsb
jne
mov
fdivrs
sbb
jae
cmp
outsb
pop
pushf
repnz
push
sub
pop
or
std
cli
xchg
or
xchg
sahf
xorb
out
xlat
outsb
faddl
bound
and
jl
sub
push
in
adcb
pop
cmpsb
xchg
int
xchg
in
sub
lcall
jbe
cmp
xchg
xor
insl
out
insb
ror
add
and
test
out
xlat
sbb
sbb
inc
push
sbb
dec
test
icebp
mov
movsb
dec
fistpll
mov
mov
outsb
sub
xor
test
jo
loope
or
in
test
pop
jae
inc
cmp
pop
dec
ds
scas
pop
cmp
lods
xorl
sbb
xchg
cmc
mov
dec
cmc
jmp
or
call
addr16
cmp
cmp
daa
mov
clc
divl
mov
addb
pop
fwait
mov
ret
les
enter
or
gs
adc
mov
pop
les
pop
out
xchg
addr16
cmc
arpl
push
rcrb
hlt
dec
and
add
fnsave
cmpb
fnstenv
and
adcl
pop
jae
mov
aad
add
lock
jge
adc
and
arpl
repnz
adc
fld
xchg
add
adc
push
bound
std
xchg
xor
pop
adc
in
sbb
pop
or
adc
push
jge
ss
push
iret
or
mov
out
mov
orb
or
jno
cli
scas
and
jno
push
popa
loopne
pop
adc
add
data16
mov
fmuls
cmp
fcomps
out
fdivrl
mov
and
or
xchg
adc
xchg
pop
popf
fildl
xor
das
push
movsb
xchg
push
xor
push
adc
daa
mov
push
cwtl
xor
and
mov
push
sbb
xor
pop
sub
xor
icebp
sbb
lods
lds
adc
inc
push
add
in
enter
das
or
push
mov
nop
arpl
xor
pushf
notl
dec
cli
mov
xor
mov
mov
pop
mov
push
out
cmpb
xchg
or
cmp
sahf
lret
sub
pop
jo
mov
or
add
mov
lret
inc
inc
mov
adc
jge
jb
out
sahf
push
js
push
fistl
movsb
clc
and
cmp
ret
inc
lods
inc
mov
lret
in
jmp
inc
sub
cmc
mov
fdivrp
movl
lcall
rorb
xchg
popa
pushf
scas
xchg
imul
roll
arpl
and
rolb
stos
adc
and
icebp
test
int
pop
mov
and
mov
mov
repz
jnp
unpckhps
mov
or
mov
mov
fisubrs
xor
in
cli
push
inc
cli
xchg
sub
xor
les
int
jg
xchg
imul
arpl
jae
adc
call
pop
xor
xchg
loope
stos
mov
jg
jl
pop
pop
xlat
push
in
cmp
sahf
fisubl
xlat
aam
leave
cmpsl
int
outsl
adc
inc
sub
jp
mov
addr16
xlat
mov
in
ds
cmp
aaa
push
inc
push
clts
mov
leave
inc
push
out
adc
jae
rclb
add
xchg
inc
mov
rcrb
cmp
dec
scas
push
nop
jne
sub
cmpsl
pushf
inc
pop
icebp
jno
cmp
icebp
loopne
dec
adc
fnsave
lcall
xor
adc
scas
and
fisubrs
add
cmp
jecxz
mov
gs
cs
pop
fisubs
cmpsl
mov
add
mov
inc
jb
dec
mov
add
and
bound
sbb
mov
mov
sbb
loop
sbb
jg
or
push
cltd
faddl
cltd
xor
ret
mov
insl
mov
and
dec
xor
fldenv
shll
mov
jle
cwtl
lret
incl
sbb
inc
es
clc
mov
fs
hlt
sti
lret
fnstcw
push
test
jno
in
lcall
jle
lret
mov
adc
or
or
and
fdivrs
sahf
and
mov
add
adc
loopne
loop
fists
test
jne
push
js
icebp
lods
or
dec
stos
cmp
fldt
sahf
xor
dec
cmp
push
push
inc
fsubl
add
dec
jmp
repz
les
cmpsb
in
js
pop
fisubs
pushf
inc
cli
test
mov
ljmp
shl
ja
add
or
jno
out
aas
imul
mov
inc
out
aas
xchg
sub
aam
sbb
push
in
popa
add
js
or
add
loope
and
cmpsl
push
shrl
mov
pop
sahf
sbb
mov
add
lock
mov
arpl
lock
add
push
out
mov
adc
js
imul
xchg
xchg
das
aas
mov
scas
sbb
pop
and
sbb
sub
fcomps
test
rcll
test
loop
mov
repnz
mov
sarl
add
jl
test
out
aas
and
xchg
scas
push
or
jg
scas
in
push
add
fwait
int
int3
jae
and
popf
mov
std
xor
lds
xor
out
cmp
fcoml
mov
sbb
jge
icebp
ror
pop
mov
fistps
mov
ret
cmp
test
shlb
rcrl
mov
xor
mov
xchg
xchg
shrl
xor
cmp
jae
xchg
sub
adc
pop
sub
jnp
cmp
shlb
pop
pop
outsl
or
into
in
sub
or
stc
mov
push
xchg
sub
inc
mov
imul
imul
dec
lock
repnz
outsl
jns
push
add
addr16
lods
mov
adc
aam
std
pop
mov
aad
cli
mov
icebp
pop
pop
movsb
inc
enter
jbe
mov
outsb
fs
shrl
dec
fs
lods
push
lds
mov
clc
adc
bnd
fstpl
aas
mov
cmp
push
xor
aaa
loope
push
cmpsl
fstpt
leave
and
mov
fnsave
mov
dec
or
pop
mov
loopne
iret
mov
xor
adc
pop
adc
gs
lcall
xchg
nop
aam
cmp
push
out
cmpsb
fistl
pop
adc
xchg
inc
popf
push
xchg
xor
and
fsubrs
mov
cmp
aaa
jbe
imul
pop
outsb
int
or
fisttps
mov
es
es
dec
add
jecxz
fnstsw
jno
fildl
repnz
lds
cmp
mov
sahf
mov
inc
imul
pop
and
jmp
into
stos
repz
mov
jbe
mov
dec
lods
insb
sub
ss
sbb
jo
pop
cld
jns
insl
test
pop
stc
inc
push
push
or
ja
popf
lods
add
pop
jg
mov
mov
cmpsb
cmp
mov
mov
push
insb
cltd
cs
pop
sub
nop
js
rol
mov
xchg
imul
push
mov
mov
pop
sbb
les
cmp
jecxz
sbb
add
and
call
push
cmpsl
cmp
xlat
cs
ret
iret
and
pop
stos
mov
xchg
popa
pop
jne
les
mov
clc
rcr
aaa
sub
or
mov
and
repz
mov
xchg
out
or
in
push
ret
lret
and
mov
push
shll
adc
push
cld
fistps
aam
xor
imul
cmp
movb
clc
repz
sub
pop
repnz
lea
add
fisubs
adc
sub
sbb
into
ss
aad
stc
and
cltd
popa
out
das
xchg
sbb
adc
adc
test
aam
scas
mov
dec
add
je
cmp
movsb
xlat
icebp
aad
sbb
lds
xchg
xor
das
pop
aaa
mov
rclb
test
dec
dec
add
jae
dec
scas
cwtl
mov
inc
jecxz
ss
sub
ljmp
std
aam
cmp
mov
pop
xlat
cmc
insl
fisttps
mov
add
sub
and
outsl
xchg
aas
mov
pop
and
inc
xchg
in
test
and
mov
mov
adc
jp
out
fwait
mov
xchg
pop
out
jne
les
sbb
adc
inc
push
popf
jae
cwtl
push
cld
or
mov
shr
shlb
arpl
pop
mov
enter
xchg
mov
sbb
test
mov
sarb
or
mov
ret
test
push
jb
push
call
jmp
ja
pop
shll
add
sbb
jo
add
jb
lods
jno
push
cld
pop
out
and
jg
adc
jge
ret
movsb
stos
xchg
or
mov
out
je
jbe
faddl
dec
jecxz
dec
lahf
push
imul
sbb
xor
mov
aam
mov
scas
test
fnsave
mov
std
mov
data16
xchg
push
cmc
clc
es
or
in
xchg
shll
adc
or
imul
jno
or
ret
hlt
fcomi
ds
sbb
in
loopne
pop
aas
mov
faddp
dec
xor
fldenv
mov
stos
fsub
inc
int3
mov
mov
ret
ds
lds
iret
fcmovnu
fadd
les
xchg
sub
xchg
mov
stos
shlb
dec
pop
push
scas
inc
mov
xchg
je
push
cld
mov
xchg
sbb
xchg
pop
fnstsw
out
adc
lret
xlat
pop
jae
sahf
int3
cmp
xor
push
adc
or
xor
inc
and
insl
pop
sub
or
movsb
jmp
inc
dec
jae
and
scas
ds
xchg
scas
leave
test
scas
mov
pop
ss
stc
loope
inc
repz
sub
aas
jge
xacquire
mov
mov
xor
jo
or
cltd
xor
xchg
imul
xchg
xchg
fidivs
test
es
jge
aaa
into
jecxz
or
imul
int
cmp
ret
lret
orb
pop
lcall
mov
or
and
pop
into
adc
pop
fcmovu
jno
cld
sbb
test
popa
mov
mov
push
inc
fnstsw
adc
dec
add
push
inc
jnp
andb
pop
cltd
test
sbb
out
test
adc
mov
push
insl
cmp
sub
push
cltd
xchg
adc
stos
push
push
cmp
rorl
add
push
sbb
mov
pop
add
add
hlt
mov
ljmp
fsubrs
pusha
mov
loop
lds
negb
aas
nop
daa
jo
pop
jl
std
lcall
call
in
push
xlat
pop
adc
push
pop
mov
mov
les
hlt
in
popa
add
xchg
sub
mov
pop
out
das
int
push
mov
pop
mov
dec
nop
lods
cmp
mov
popf
stos
insb
inc
mov
rcll
les
aaa
xor
dec
and
dec
in
inc
daa
mov
xor
rclb
sbb
pop
insl
sbb
scas
mov
jecxz
jl
incb
fdiv
out
lcall
xlat
mov
dec
and
cmpps
bound
add
test
jl
mov
jmp
inc
shrl
pop
shl
add
lcall
es
mov
xchg
fs
stos
sub
cbtw
fmull
out
mov
testl
xchg
pop
int
popa
subb
push
adc
mov
test
js
jmp
add
mov
xor
add
sarb
movsl
adc
mov
xor
imul
addl
jmp
inc
jle
pop
mov
sar
xchg
imul
fnstenv
stc
push
push
xchg
mov
arpl
test
cmpsb
nop
jmp
hlt
or
sbb
outsl
pop
add
mov
arpl
inc
cltd
in
jp
pop
cmp
xchg
pop
pop
mov
stos
dec
xchg
xchg
inc
or
test
stc
in
arpl
mov
shrb
mov
in
push
mov
mov
and
in
mov
out
lds
or
or
out
hlt
add
pop
dec
dec
insl
add
in
ficompl
dec
mov
leave
call
lea
cmp
xchg
mov
pop
mov
insl
jns
mov
cmp
cmp
mov
fwait
daa
lret
mov
mov
xor
imul
dec
pushf
jmp
scas
add
sub
xor
je
rcrl
push
call
cmpsl
add
xor
mull
and
fcompl
push
mov
jmp
pop
repz
dec
add
lods
push
dec
jb
jp
pop
icebp
out
sbb
add
jge
es
es
xchg
outsb
jl
inc
lods
jns
icebp
mov
ds
cld
cwtl
dec
inc
test
xchg
pop
adc
xchg
addl
test
shlb
stos
jne
xchg
mov
add
iret
push
es
hlt
in
xchg
add
add
movsl
cmp
lret
sub
pop
icebp
mov
jnp
out
je
ret
test
movsb
ss
inc
sbb
test
fsubl
daa
sub
xor
mov
ret
loop
cld
push
dec
add
jo,pt
and
lcall
test
loope
sub
lret
jge
das
sahf
sahf
mov
dec
mov
dec
in
jl
popf
adc
mov
jle
mov
insl
add
xchg
push
sbb
jmp
xor
aaa
push
mov
cltd
xor
mov
adc
mov
mov
loope
inc
out
inc
pop
lock
lcall
jmp
mov
sbb
jge
stc
adc
adc
inc
xor
add
fpatan
mov
inc
mov
pop
lock
repz
pushf
push
push
repz
out
stc
jl
mov
dec
pop
fldl2e
dec
outsl
mov
pushf
dec
sti
and
jno
inc
adc
pusha
inc
sub
xchg
or
scas
mov
xlat
xlat
add
pop
sub
pop
cmp
cmp
cmp
dec
cltd
inc
fsubs
faddp
inc
xor
dec
gs
push
inc
mov
test
jno
bnd
stos
ljmp
push
popf
test
cmpsb
movl
or
mov
or
sub
add
and
ret
pop
cltd
and
jl
push
sub
orl
fdivs
pop
iret
data16
add
push
pop
bound
mov
mov
xchg
or
xorl
dec
test
sub
fisubs
rorb
and
stos
or
mov
push
cmp
xlat
lods
cld
xchg
clc
dec
adc
inc
xor
push
mov
in
inc
dec
push
outsb
sbb
iret
aaa
stos
ljmp
call
es
gs
mov
ret
push
jecxz
imul
or
mov
cltd
lock
push
jmp
mov
fidivs
out
ja
popa
cld
cli
adc
dec
mov
pusha
cwtl
ds
lret
inc
ret
fistps
xor
jmp
fsubrs
ja
mov
mov
push
xor
mov
shrl
mov
pop
in
mov
imul
stc
push
cmpsb
jp
add
adc
dec
adc
jne
negb
cmc
loope
lcall
and
daa
movzbl
leave
push
sub
test
cmp
insl
out
in
dec
pop
xor
mov
pop
cmpsb
fmulp
jne
add
mov
xchg
rcrl
jmp
ror
sub
mov
pop
test
and
push
pop
inc
rorl
cmp
insl
sub
add
push
mov
fwait
test
cmpsl
mov
cmp
lahf
fistpl
mov
out
push
in
add
cmpsb
jp
aam
adc
out
lock
pop
fdivrp
ds
andb
dec
xor
das
xchg
cmp
dec
add
dec
imul
insl
jae
ja
fsubs
stc
or
pusha
inc
push
cmc
inc
outsb
dec
pusha
pop
insb
leave
push
dec
sahf
and
out
pop
inc
es
outsb
into
aad
int3
and
leave
jmp
arpl
scas
mov
cmpsl
xchg
into
add
fs
mov
ret
in
inc
addr16
daa
xor
sub
fldl
and
push
sub
mov
aad
or
das
xchg
shrl
sub
and
pop
push
dec
mov
and
jbe
addl
jmp
push
ja
popf
pop
cwtl
fs
in
pusha
sub
cs
daa
mov
dec
pusha
dec
xchg
sub
push
mov
dec
xchg
pop
jl
ret
out
fsubr
and
mov
outsb
inc
mov
subb
dec
pop
push
push
aam
or
pop
xorb
sahf
shrl
ds
sbbl
sarl
mov
mov
or
mov
cs
scas
mov
mov
shll
mov
inc
sar
add
mov
gs
enter
lds
inc
fidivrs
lret
cld
out
sbb
cmp
sub
enter
mov
aaa
sbb
xor
adc
pop
movsl
add
cmpsb
cwtl
mov
dec
lret
cld
outsb
popa
aas
sbb
mov
shll
or
cmp
adc
imul
stos
mov
adc
inc
push
clc
mov
sub
pop
mov
fbstp
adc
incl
cmp
mov
mov
cltd
pop
in
or
xor
je
insb
scas
push
andb
idiv
pop
out
and
mov
mov
jnp
sbb
pop
cli
dec
and
gs
aas
ss
gs
push
and
xor
xor
out
imul
pop
scas
imulb
pusha
push
stos
popf
cs
popa
rclb
fnstenv
enter
mov
xchg
call
push
sub
adc
jbe
inc
shlb
shrb
aad
jno
mov
lods
mov
inc
lret
mov
or
cmp
add
push
test
push
fidivl
adc
xchg
adc
add
cmpsb
imul
aad
and
xor
mov
adc
shlb
test
fwait
cmpsl
aaa
leave
ja
das
xor
jbe
xchg
shlb
xchg
fsubr
and
mov
js
rcrl
push
sub
ss
sub
push
jg
add
mov
insl
stos
and
lcall
inc
in
sub
xchg
inc
pop
and
cwtl
das
push
mov
ret
js
mov
or
daa
lods
pop
loop
sub
in
cmp
notb
test
int3
loopne
ret
js
cmpsl
ret
rcrl
xchg
jo
fisubrl
mov
mov
mov
iret
data16
jg
ret
dec
adc
lods
adc
paddb
push
jle
fwait
out
movsl
lret
iret
rorl
in
push
mov
out
pusha
push
movsb
mov
push
mov
or
dec
sub
lods
inc
push
dec
inc
or
cmp
jg
adc
adc
inc
clc
lret
gs
das
sete
loope
sub
mov
sbb
inc
cli
xchg
add
imul
inc
dec
cmp
adc
jb
jge
mov
ja
or
lds
jno
addl
faddl
push
push
mov
jnp
adc
jno
mov
jge
movsl
clc
cwtl
add
lcall
mov
add
js
decb
xor
fsubrs
aaa
and
mov
and
or
and
ljmp
pop
imul
cmovae
xchg
pop
imul
pushf
adc
inc
mov
sbbb
or
cmp
or
cmp
ret
loope
xchg
ret
sub
aad
rol
cwtl
testb
out
mov
popa
adc
push
add
pop
scas
clts
insl
test
pop
inc
or
daa
sahf
sub
pop
pop
mov
outsl
mulb
pushf
jmp
out
pop
cmp
pop
sub
imul
test
jge
jno
outsb
test
outsb
jl
mov
cmp
ret
fildl
mov
lcall
cmp
test
cli
mov
mov
mov
lds
or
leave
jbe
ret
xchg
dec
leave
fsts
xchg
stos
sub
xchg
imul
data16
pushf
imul
ljmp
call
dec
mov
imul
xorl
pop
xchg
fldl
sub
outsb
cltd
popl
xchg
lods
orb
push
adc
jo
mov
inc
insb
fisttps
xchg
xchg
inc
cmp
lahf
mov
push
roll
sbb
and
adcl
or
stos
or
scas
and
stos
les
jne
int3
movsb
pop
jge
shl
lret
sahf
movsl
cmp
adc
sbb
sbb
dec
ss
xchg
fisubs
mov
rclb
sti
sbb
cmpsl
mov
movb
leave
test
and
jnp
sub
cltd
pop
cmp
sbb
ror
popf
mov
hlt
xor
push
leave
in
daa
int3
nop
xor
pop
jbe
nop
ja
ret
jg
adc
lods
lcall
orl
cmp
inc
jecxz
std
lods
ja
out
lods
loopne
int
fsubrl
push
testl
adcb
cmp
fwait
jecxz
and
cmp
sub
sbbb
aaa
stos
stos
dec
inc
inc
mov
pop
icebp
sbb
rcr
subb
push
icebp
xor
orb
icebp
movsl
mov
xlat
lcall
dec
sub
xchg
and
lea
jl
clc
test
aad
cmp
push
dec
out
imul
cltd
jo
sbb
mov
pop
add
incl
xchg
cmpl
pop
icebp
loop
cmp
mov
loopne
imul
jbe
inc
dec
push
enter
xchg
inc
scas
lcall
jl
sub
xor
push
mov
pop
out
mov
out
xor
adc
xor
loopne
mov
out
mov
out
sbb
push
inc
sub
rcrl
pusha
or
jno
jo
push
testl
add
rclb
cmp
or
push
dec
jecxz
jle
sub
jle
xor
mov
xchg
arpl
loope
push
pop
out
stos
lcall
das
sub
mov
and
clc
fcmovne
lods
inc
sti
jl
mov
paddq
int3
shll
fistl
cmp
dec
mov
loop
in
cld
je
stos
and
xor
adcl
sub
sti
push
xchg
outsl
test
cltd
leave
rcrl
cmp
fistps
and
adc
iret
stos
jp
xor
sub
out
dec
dec
lahf
push
cmpsb
cmc
inc
mov
sahf
pusha
add
mov
sarl
inc
mov
xor
test
or
jno
in
mov
or
adc
in
out
loope
aam
inc
mov
add
pop
xor
pop
xor
mov
fistl
pop
pop
negl
or
ret
sahf
and
iret
sbb
jae
je
insl
sbb
shl
sub
loopne
sub
cltd
scas
add
subl
mov
mov
inc
fcomp
xchg
add
or
incb
mov
dec
push
call
pusha
push
fdivrl
push
in
cli
sub
andl
das
or
sub
sub
test
jg
push
and
jnp
icebp
adc
pop
cwtl
fwait
imulb
xor
test
loop
mull
xor
mov
inc
sub
out
add
mov
adc
shll
push
sbb
sbb
inc
jecxz
xor
mulb
cmc
mov
or
ret
and
xchg
ds
add
adc
xchg
jb
pusha
pusha
shr
lods
mov
jbe
clc
lods
cmp
adc
outsb
inc
inc
inc
popa
mov
mov
jmp
xchg
inc
cmpps
xor
arpl
xchg
lods
push
mov
hlt
push
scas
mov
adc
dec
adc
hlt
push
sub
dec
mov
fwait
lret
adc
insl
xchg
or
mov
mov
sbb
mov
dec
mov
cmp
lock
ret
adc
fidivl
clc
int3
int
add
lea
jnp
jge
outsb
mov
rorl
in
push
pop
fdivrl
adc
cmpsb
xor
dec
sbb
pushf
rclb
mov
lcall
inc
or
jg,pn
mov
sub
or
nop
pop
test
xchg
mov
pop
dec
dec
mov
cmp
movsb
mov
loope
ret
ret
and
or
xchg
mov
cld
mov
pop
lods
or
mov
inc
fsubrs
fsubrl
mov
stos
xchg
pop
pushf
jo
inc
cmpsb
ucomiss
xchg
or
xchg
mov
lret
fistps
pop
or
ljmp
dec
fisubrs
pop
mov
fmuls
push
inc
je
icebp
xor
cli
and
mov
call
mov
shll
bndstx
inc
jp
mov
addr16
call
mov
sahf
mov
aad
mov
jbe
and
rcrl
mov
dec
ljmp
arpl
jg
xor
sub
fnstsw
push
mov
stc
je
lds
mov
add
iret
cmpsb
insb
xor
and
push
push
add
pop
mov
fwait
ret
push
and
cmp
mov
jb
ret
flds
cmpsl
pusha
js
stos
andb
call
cmp
into
pop
mov
mov
add
cmp
cmp
hlt
mov
mov
fnstcw
hlt
push
leave
pop
push
sub
jo
mov
testb
dec
xchg
ja
add
pop
std
mov
xchg
test
xchg
int3
sbb
sub
jmp
jge
fcompl
push
scas
fsubl
and
lods
xor
or
pushf
mov
adc
xor
imul
insl
fwait
xor
push
mov
outsb
jo
cwtl
sub
enter
cwtl
mov
testl
ja
cmpsl
sbb
repnz
pushf
adc
arpl
xor
fs
add
push
mov
test
mov
mov
jns
cwtl
lods
cmp
pop
mov
fdivl
int3
sahf
addl
rclb
inc
scas
dec
sbbl
xchg
in
mov
pop
cmp
dec
fwait
jns
in
loope,pn
shl
dec
jae
xor
pop
jge
std
and
movsl
mov
pusha
cmp
div
fwait
sub
pop
ljmp
cmc
dec
cmp
rep
test
bound
add
push
fbstp
xchg
adc
push
xchg
xor
pop
bound
xchg
imul
pop
aad
xchg
jmp
xchg
orb
jmp
adc
dec
call
aad
adc
cwtl
mov
aad
shrl
arpl
pop
cltd
dec
add
repz
dec
lcall
mov
in
sbb
in
cmp
lcall
and
xchg
adc
fdivs
loope
int3
lcall
and
push
ret
pop
das
scas
stos
lea
fiaddl
stos
inc
inc
test
test
leave
pusha
push
testb
or
lea
inc
and
jle
inc
add
out
sub
dec
repnz
scas
jmp
push
or
jg
cvttps2pi
in
or
rorl
lods
jbe
fisubrs
push
pushf
push
xchg
adc
mov
push
mov
add
pop
push
fcmovb
in
je
push
lods
add
in
into
xchg
dec
in
call
repz
jle
in
mov
divb
jns
icebp
lock
mov
inc
xlat
gs
or
jno
call
push
leave
movsb
into
jmp
xor
and
lods
mov
daa
hlt
aad
dec
cmp
lret
jl
lods
pop
clc
call
and
insb
fidivs
pop
push
popf
hlt
mov
pushf
mov
faddl
sahf
or
cmpsb
and
add
and
cmp
loope
xchg
mov
cmc
push
cmp
and
xor
push
cli
pushf
fnstcw
pushf
mov
in
popa
xorl
les
icebp
int3
adc
fs
cltd
xor
gs
mov
movsb
sbb
mov
xchg
data16
ja
jge
mov
inc
lahf
cmpsb
xchg
jmp
addl
and
inc
mov
and
cmpsb
dec
sbb
pushf
repz
or
jmp
or
adc
in
push
mov
arpl
into
and
aaa
pop
popa
and
jp
nop
push
xchg
sti
add
adc
mov
adc
inc
push
rcr
lods
jecxz
or
lods
mov
inc
cld
daa
mov
pop
jo
loopne
add
and
add
std
xchg
lods
sahf
push
adc
je
ds
arpl
ss
push
and
dec
dec
imul
imul
push
pop
jns
test
inc
fisubl
cmp
div
jno
fstps
mov
cmp
xlat
push
cwtl
pop
push
add
push
xor
ret
sbb
int
xchg
sbb
mov
mov
mov
dec
inc
or
cmp
inc
incb
pop
je
out
test
xlat
popa
fadd
lods
or
lds
lods
add
xor
or
xchg
mov
inc
sbb
cmpsl
inc
fnsave
js
and
push
int
mov
jmp
fmuls
xchg
aad
aad
add
rcrl
test
cmp
xchg
cmp
dec
jae
in
jecxz
in
out
xchg
sub
test
xor
mov
scas
push
jno
sub
sbb
xchg
and
fcoms
iret
add
pop
add
inc
rcrb
in
loopne
arpl
fs
adc
lods
push
lcall
fildll
out
jl
into
mov
cmpsb
arpl
ret
dec
xor
xor
ja
shrb
adc
cmpsb
jno
sarl
or
xor
dec
movsl
cmp
and
mov
cmp
pop
mov
inc
xchg
rcr
jne
or
rorb
es
flds
les
sbb
or
jl
jp
adc
push
or
add
movsb
jns
nop
shl
sub
cld
mov
sub
icebp
pop
out
jb
xor
js
shlb
pushf
xchg
cmpsb
xchg
mov
icebp
loope
push
push
pusha
mov
lea
adc
push
xchg
ja
mov
lcall
fdivl
sbb
mov
sbb
ficoml
dec
insl
fcomps
push
lea
and
ret
push
mov
jg
xor
call
cmp
addr16
test
xchg
dec
leave
push
xlat
jno
mov
add
push
jno
cld
adcb
cs
movsb
xchg
leave
mov
add
push
add
lret
lods
cmp
lock
fnstcw
fidivrs
lods
lret
imul
push
call
aas
cmp
push
pop
cwtl
push
mov
cmp
jbe
push
and
sbb
and
lods
jo
cmp
icebp
or
sti
and
push
lcall
or
into
inc
stos
loop
fists
int
push
inc
cmp
pop
dec
movsl
xchg
cmp
push
dec
dec
sub
add
insb
add
fistps
sub
aad
inc
sar
jo
inc
inc
push
jo
fistpl
sub
bound
sbb
inc
aam
fmull
jbe
dec
das
push
sub
inc
dec
dec
in
cmp
enter
test
aad
xor
push
jmp
fcomi
jns
test
lret
jecxz
jp
test
movsb
es
ljmp
insl
jnp
out
adc
call
mov
out
notl
xchg
out
repnz
in
fildll
mov
jp
inc
sub
aad
hlt
sub
xor
xchg
repz
stc
inc
pop
je
andb
xchg
cld
mov
aas
xor
pop
push
and
adc
leave
sbb
xchg
movsl
pusha
jae
fstl
mov
mov
sbb
fmul
or
mov
ret
lcall
jbe
push
mov
sub
sbb
popa
fs
call
lahf
popf
add
repz
out
and
xchg
xlat
xor
dec
in
out
outsl
dec
xchg
push
rep
in
push
das
sahf
addl
fimuls
and
addl
lea
xlat
push
sbb
jo
test
pop
loope
or
rcrb
adc
adc
loop
mov
jge
test
cmp
pop
pop
sbb
sub
xchg
xor
adc
pop
sub
jns
std
or
shll
mov
xchg
sub
insl
je
jecxz
add
insl
or
lea
mov
push
mov
cmp
add
je
pop
ljmp
movsl
dec
fimuls
push
lret
jb
bound
fdivrs
xor
sbbl
pop
flds
xchg
xchg
pop
scas
sbb
mov
sarb
pop
add
fcmovb
movsl
fmul
adc
movsl
adc
leave
movsl
mov
ja
fs
xor
xchg
dec
sti
dec
cmc
mov
mov
jae
aam
sub
out
pop
mov
cmp
cmp
sbb
dec
fnsave
and
mov
sub
mov
sbb
cmp
push
faddl
repz
dec
movsb
pop
mov
dec
jg
mov
push
test
add
ret
es
lcall
cmp
push
into
mov
mov
and
in
push
out
iret
cmpsb
add
inc
int
hlt
ja
cmp
mov
add
aas
popf
sbb
loop
inc
push
lock
adc
movsl
loopne
out
jecxz
mov
sub
out
sub
fbstp
incl
fisubl
dec
and
jns
insb
scas
sbbl
mov
xor
sub
pop
fldenv
mov
jno
hlt
mov
sahf
inc
add
mov
bsf
addr16
mov
sub
adc
ds
cmp
lahf
subb
pop
data16
jbe
or
ja
testl
inc
ljmp
or
push
adc
add
inc
mov
mov
aad
filds
mov
out
cmp
lret
stc
push
mov
ljmp
in
dec
iret
cmp
mov
sub
fdivrs
loopne
lahf
je
repz
outsb
fwait
test
cmpsl
or
fldenv
jle
push
push
lret
pop
lahf
jle
push
test
pop
xor
rorl
add
pop
inc
fdivr
shll
js
cmpsl
lods
ret
clc
dec
cmp
rcrb
mov
cmp
popa
add
or
and
bound
lds
jb
pushl
insl
adc
push
dec
dec
and
imull
arpl
nop
pop
lret
xchg
xchg
pop
jnp
pop
sbb
nop
add
mull
mov
or
fcomps
loope
sti
cmp
jns
add
lcall
sub
dec
adc
mov
negb
in
jns
xchg
insl
outsl
mov
add
nop
repz
cmp
lods
mov
ljmp
icebp
clc
and
or
test
mov
aaa
negl
mov
int3
dec
inc
les
dec
outsb
mov
fs
cmp
xchg
fs
flds
dec
pop
les
jge
test
int3
dec
mov
sub
push
push
outsl
roll
cli
ss
fwait
movsb
inc
lahf
sarb
inc
sarl
xor
sbbl
mov
xlat
outsl
push
mov
mov
and
mov
aam
shlb
jno
nop
lret
xlat
mov
inc
scas
cmp
sarb
jno
pusha
and
inc
nop
adc
loopne
daa
lahf
pop
dec
and
adc
cmp
pop
sub
nop
lds
sbb
mov
dec
push
fiadds
shr
call
shl
add
adc
filds
sbb
enter
mov
cmpsb
pop
inc
adc
andl
out
add
pop
jecxz
inc
popa
clc
ss
or
push
pop
add
test
imulb
scas
and
jp
push
jbe
lods
scas
inc
test
inc
sub
mov
loop
pushf
in
and
xchg
rorl
and
mov
or
mov
roll
js
fs
inc
cmp
or
in
scas
jns
ret
dec
xorl
xchg
push
rcrl
adc
fbld
lret
mov
std
sbb
jl
into
mov
aam
aas
and
mov
ss
movsl
scas
leave
pop
nop
cmpsl
mov
xor
mov
push
mov
hlt
in
mov
xlat
call
xchg
sub
mov
fstp
cmp
imul
testb
aam
ljmp
out
add
xchg
in
cmp
mov
insl
cwtl
lods
cmpsb
push
shrl
arpl
daa
sahf
addb
cmp
ljmp
shlb
xor
cmp
pop
sub
dec
or
mov
add
sahf
and
test
pop
mov
popf
add
push
sarl
push
sbb
inc
js
cmpb
xchg
js
nop
and
jbe
ljmp
popf
pop
test
push
leave
jmp
fwait
mov
dec
aaa
cmpsb
int3
les
mov
pop
in
sub
mov
ja
and
sbbb
call
jo
dec
dec
notb
mov
mov
push
pop
lods
and
jne
add
dec
and
or
dec
or
inc
mov
cmp
jno
inc
xlat
popa
xchg
or
cmpsl
xchg
and
stos
in
and
mov
xor
cmc
dec
push
mov
iret
jno
dec
lock
fs
push
arpl
popa
xor
add
std
cmp
mov
adc
inc
loopne
jle
outsb
mov
call
leave
jo
addr16
mov
add
movsl
push
in
repz
and
enter
adc
mov
fidivrl
mov
data16
ds
sbbl
loope
lahf
and
adc
jmp
repz
xchg
jo
mov
mov
ret
popf
sub
adc
adc
loop
lret
xor
addr16
inc
repnz
dec
mov
pop
sbb
add
xor
add
test
cmc
adc
icebp
ja
cmp
adc
add
in
xchg
lea
or
jnp
subl
push
or
pop
out
outsl
mov
xor
or
push
pop
out
pop
vpand
ret
out
mov
cmp
push
cmpb
addr16
popf
mov
lcall
mov
loopne
js
and
scas
cmpsb
out
jnp
daa
mov
mov
mov
mov
ss
or
cmp
clc
sahf
and
and
mov
ret
mov
pop
sahf
das
pop
xchg
sub
pop
dec
add
das
mov
jmp
pop
mov
ss
movsl
enter
call
fldcw
mov
sub
add
in
mov
jnp
pop
je
jle
push
jae
stos
loope
les
cmp
lods
ja
psubsw
sbb
scas
out
push
fwait
and
xchg
in
sbb
lret
cwtl
xchg
aad
aam
mov
sub
xchg
mov
lret
sub
inc
jecxz
jns
jne
dec
test
sub
or
jge
stc
dec
movsb
dec
out
testl
sub
out
orb
jnp
mov
xchg
cli
dec
popa
xor
pop
les
cwtl
cld
lcall
push
stc
mov
test
xor
sub
fwait
loopne
test
repnz
lock
add
or
jmp
lret
jo
ret
mov
mov
jae
in
mov
cmp
jp
leave
std
aad
icebp
push
cmp
inc
sbb
push
pop
imul
cmp
xchg
fs
lods
xchg
cmpl
imul
ret
pop
mov
imul
test
movsb
cmp
jns
jbe
lahf
jae
adc
push
repz
repnz
jg
cmp
pushf
enter
mov
sub
clc
cld
push
push
sub
adc
push
and
lods
or
das
pusha
cmp
add
mov
pop
dec
push
add
js
push
push
dec
les
addl
xrelease
cmp
out
fstpl
mul
jg
loop
sbb
xor
sbb
sahf
mov
call
int3
out
push
imulb
stc
nop
addr16
push
out
mov
or
mov
mov
jno
and
div
cmp
push
bound
dec
jae
iret
test
push
adcl
push
pop
cmp
adc
scas
dec
pop
or
imul
popf
shl
stos
adc
outsb
xchg
jae
pushf
in
cmp
dec
mov
inc
iret
and
mov
pop
cld
lahf
fstpt
xchg
xchg
mov
mov
cs
and
inc
jbe
leave
out
push
inc
fstps
imul
std
mov
daa
mov
incb
jle
dec
loopne
mov
mov
cmp
pop
jmp
dec
jbe
in
jne
rclb
dec
or
enter
xor
movb
fs
push
pop
insl
inc
gs
dec
inc
insl
enter
mov
add
jbe
sbb
dec
mov
lds
adc
fisttpll
in
mov
lock
rcrb
dec
pop
fsubl
icebp
pop
xlat
cs
mov
mov
ss
mov
push
add
ja
adc
add
call
pop
cmp
cmc
cmp
push
imul
jbe
fistpl
xor
cmpsb
jbe
fwait
ss
stos
cmp
sub
test
popf
dec
cmc
in
cmp
std
xchg
fs
adc
int3
cmpsb
lock
sub
mov
dec
xor
sbb
mov
and
mov
test
shrl
int3
push
test
mov
sbb
push
arpl
icebp
enter
das
dec
pop
jnp
leave
fsts
sbb
and
lds
dec
cltd
std
in
mov
cld
mov
aas
sub
mov
test
mov
push
push
fcmove
fmul
sbb
bound
into
fs
mov
adc
inc
and
cltd
xchg
jmp
adc
jne
sub
dec
jp
mov
cmc
adc
adc
cmp
mov
shlb
cmpsb
pusha
divl
call
xchg
sbb
ja
jnp
adc
daa
cwtl
or
test
movsl
ret
js
addr16
inc
pop
inc
mov
inc
jb
stc
mov
mov
std
mov
push
inc
mov
aam
push
repz
pop
xchg
notb
cmp
int3
sub
test
dec
push
inc
and
arpl
add
and
jb
popa
out
daa
jp
or
mov
jne
pop
enter
mov
jmp
and
pop
frstor
and
jle
and
push
or
ljmp
xchg
js
cmc
mov
popa
add
adc
sbb
pop
jge
mov
leave
jae
scas
out
xchg
inc
jle
jae
lret
xor
es
sub
dec
cld
nop
mov
fdivrl
scas
mov
ds
aam
push
pop
mov
into
and
mov
test
jecxz
sbb
adc
sub
lea
sub
xchg
xorl
icebp
dec
inc
int
xchg
fwait
push
add
dec
inc
int
xchg
cs
jnp
cmp
ja
add
repz
fiadds
xor
out
mov
jnp
jnp
pop
mov
jge
dec
add
nop
inc
add
jb
or
adc
pop
dec
mov
scas
inc
dec
sbb
jp
dec
pop
or
insb
mov
popa
mov
fs
ja
or
and
scas
sbb
rorl
cmp
fs
mov
mov
sahf
adc
jecxz
xchg
jle
adc
mov
loope
cs
pop
out
std
pop
mov
sbb
push
lcall
push
sub
rcr
subl
jl
movsb
sti
xchg
mov
mov
cwtl
loope
sub
fstpl
fiaddl
sub
js
lahf
inc
mov
test
mov
sub
mov
inc
xchg
push
push
xor
enter
jo
jecxz
ret
ret
mov
pop
insl
shrl
lret
pop
ret
clc
xchg
imul
and
jb
repz
inc
scas
inc
movsb
fidivrs
adc
popa
jbe
fnsave
dec
lahf
out
xchg
dec
call
repz
sbb
sbbl
sub
loop,pt
xchg
in
iret
or
push
add
popf
push
out
cmpsl
enter
hlt
mov
push
inc
pop
loope
adc
cmc
xchg
cmpsl
in
mov
jmp
push
inc
fldl
faddp
ds
mov
mov
jbe
and
aam
pop
fs
fcomi
add
loop
test
mov
adc
inc
lcall
jmp
mov
cmp
movsb
lods
std
dec
push
xchg
and
into
xor
lods
dec
cmpsl
push
call
pop
test
jnp
test
js
je
movsl
inc
jle
push
mov
stos
mov
mov
or
loope
ljmp
xorb
imul
or
mov
js
push
ljmp
pushf
repz
data16
mov
fisttpll
repnz
add
mov
mov
scas
push
adc
fisttps
scas
cmp
idivl
aad
lods
aaa
or
orb
sub
mov
shrl
mov
ljmp
mov
sahf
lods
inc
rorb
cmpsb
jmp
pop
sbb
dec
fsubrl
push
lcall
mov
sbb
rol
test
jmp
incb
mov
fsubrs
push
jo
insb
cs
ljmp
clc
faddl
pop
mov
xchg
std
mov
sub
aas
fildll
enter
pop
call
sbb
lods
fidivrs
std
jae
jl
faddp
aad
inc
or
ja
shrl
pop
cld
or
js
add
jno
sub
xor
clc
pop
pop
inc
add
pop
lret
push
inc
inc
push
mov
cwtl
jne
push
or
imul
sbb
rclb
jmp
addl
outsl
loop
jge
xchg
sub
adc
dec
shr
mov
popa
clc
mov
fstpt
scas
cmp
repnz
in
cmpb
pop
hlt
movsb
jecxz
nop
pop
cmp
out
fists
mov
or
inc
movsl
fdivs
or
sbb
in
divl
cs
movsl
test
jae
adc
sbb
jnp
xchg
ljmp
push
out
push
cmove
popf
loopne
std
sete
jg
xor
addl
shlb
and
pop
mov
shll
sub
bound
test
mov
daa
stos
inc
pop
fidivrl
add
data16
loope
stc
lcall
mov
push
test
xchg
push
pushf
repz
imul
push
jnp
jmp
xor
push
aaa
dec
mov
imul
xor
sbb
and
lret
xchg
xchg
ret
mov
sbb
pop
shll
dec
sub
dec
jno
add
sub
mov
push
cmp
xchg
out
dec
pop
mov
shll
xor
inc
sbb
push
out
imul
xchg
sub
add
fs
push
xchg
sub
into
in
insl
lahf
xor
nop
aaa
lods
xchg
xchg
in
dec
and
pop
or
cmp
mov
add
inc
in
bound
mull
stc
cmp
cs
adc
shrl
dec
imul
leave
pop
inc
jns
push
stos
outsl
mov
call
dec
out
loope
enter
fwait
dec
pusha
mov
mov
or
pop
fdivrs
or
mov
aad
dec
cld
inc
pop
cli
movsb
xor
mov
es
and
es
repnz
dec
jae
shrb
cmp
mov
fwait
mov
mov
ret
mov
rcrl
dec
mov
xchg
out
shrb
andl
cmp
mov
std
add
cmp
push
lds
ficoml
rorb
add
jns
enter
adc
xchg
sub
test
in
adc
add
push
out
jne
fs
and
dec
sub
add
enter
inc
out
adc
nop
int3
pminub
xlat
sbb
imul
aas
ret
call
pop
int
or
and
xor
mov
sbb
xchg
mov
push
test
sbb
daa
push
call
fldenv
pop
cmp
jae
mov
sub
orb
jbe
xor
jle
adc
inc
mov
iret
das
cltd
daa
push
cmpsb
outsb
mov
inc
std
cmp
jl
and
push
inc
lock
rclb
adc
pop
insb
fiadds
dec
push
or
call
outsl
jp
adc
xchg
ja
sahf
and
xor
aaa
and
xchg
jb
stc
aas
mov
je
lods
mov
andb
push
rol
jae
add
lds
fnsave
mov
mov
or
lods
andl
push
ret
push
cmpl
rolb
outsl
and
stos
inc
jmp
or
mov
inc
fcom
popa
sub
dec
adc
jnp
ret
das
icebp
xor
psrlw
xchg
inc
jl
push
sub
sbb
cld
out
pop
mov
stc
fs
sub
xor
mov
shlb
mov
pop
nop
daa
push
mov
xor
ret
adc
or
aaa
push
push
sbb
mov
push
outsb
jno
sub
add
and
dec
loope
mov
xlat
and
hlt
adc
bound
sub
ficomps
jecxz
sahf
cld
xchg
in
jbe
mov
jnp
fbld
dec
data16
push
xadd
cmp
jne
leave
xchg
idivb
sbb
sub
inc
and
test
or
into
fisubrs
push
jmp
ss
or
aam
mov
ljmp
lods
cmc
cmp
mov
test
in
add
sbb
mov
lods
inc
aad
xchg
pop
and
int
hlt
lret
cld
rcrl
jl
mov
mov
pop
or
lods
out
mov
cld
cmp
pop
cmp
add
pop
loope
xchg
mulb
xchg
rcrl
cmpsb
bt
dec
add
lds
mov
jecxz
sbb
mov
jle
arpl
push
mov
cmpsl
stc
sub
sbb
dec
aaa
jmp
and
pop
ljmp
jo
cmpsb
ret
js
mov
lret
inc
fsubrl
push
ret
jb
clc
push
push
orb
mov
pop
in
cmc
mov
jg
dec
rep
test
loop
arpl
pop
dec
int3
mov
mov
jo
mov
dec
add
pop
pop
or
pop
mov
mov
mov
sbb
out
or
jl
inc
mov
es
mov
xchg
loopne
and
mov
sbb
arpl
pop
ja
jl
in
adcl
cld
mov
mov
je
and
mov
in
sbb
dec
int
cmp
pop
and
dec
subb
aaa
mov
mov
mov
lret
adc
mov
sbb
cwtl
pop
lret
push
sarb
sbb
ds
xchg
call
pop
std
cmp
andl
and
sub
xor
cld
movsb
outsl
mov
or
xor
jmp
es
xchg
jmp
nop
js
adc
or
pcmpgtw
lods
push
fbstp
cmpsl
inc
loopne
idivl
or
mov
add
in
pusha
out
xchg
leave
jl
mov
push
insb
add
out
adc
inc
xor
int3
jno
mov
call
test
popf
dec
fbstp
insb
cmp
jae
or
loopne
cmp
lcall
and
xor
cmp
scas
aad
pop
sbb
mov
xor
mov
je
cmp
cmp
or
call
inc
clc
test
lret
gs
mov
sarl
add
xor
cmpl
jno
stc
inc
out
cmp
dec
or
dec
mov
ret
and
and
inc
jmp
lahf
aaa
sbb
adc
pop
pop
sahf
mov
and
repz
and
and
hlt
out
leave
test
and
cmpsl
std
pop
sbb
mov
and
jle
out
xor
xlat
xchg
push
jp
pop
mov
fcmovu
mov
pop
gs
test
mov
lods
mov
icebp
aad
aas
pop
roll
insb
and
out
lea
sarb
add
stc
nop
xchg
in
stos
mov
xor
out
xchg
daa
sbbb
cmpsb
sbb
jbe
dec
xor
nop
push
and
jno
pop
push
or
mov
pop
dec
shrl
add
mov
mov
lret
cmp
inc
shlb
inc
lods
les
int3
outsb
stos
sub
and
aam
lcall
mov
lock
fmulp
inc
fsubrp
inc
pop
repz
imul
dec
jle
mov
jae
cmpsb
xor
lds
xor
or
rcl
inc
mov
jg
sub
jae
cmpsl
add
ret
pop
push
lods
pop
mov
mov
and
scas
test
inc
stos
cmp
jne
lea
or
push
or
and
push
stc
sub
cmp
clc
lahf
hlt
xlat
push
push
sub
clc
ja
out
fs
add
push
adc
idivb
xor
mov
repz
mov
cmpsb
fidivs
push
or
dec
pop
and
inc
mov
outsb
jo
pop
mov
push
nop
mov
jmp
jns
arpl
add
out
cmp
outsl
jl
cmp
xchg
hlt
push
adc
push
push
and
popf
pop
test
orl
call
sub
mov
xor
es
lret
aad
pop
pop
stos
and
jns
out
sti
sbb
stc
and
not
inc
mov
mov
daa
mov
sbb
bound
adc
mov
cmp
cmp
cmp
out
xchg
cltd
xchg
repz
or
and
adc
add
je
frstor
cld
lea
xlat
stos
push
add
push
sub
cltd
das
test
push
cltd
xchg
pop
cmp
std
mov
das
and
addr16
pop
xchg
notl
std
push
sbb
sti
or
test
shll
lds
loopne
mov
mov
imul
inc
adc
mov
ret
sbb
iret
mov
stc
mov
cmp
pop
ljmp
cmpsl
fdivs
lods
sub
pop
cmp
xchg
fistpl
test
dec
lds
sbb
push
stos
outsb
or
nop
mov
mov
aad
jo
xchg
cmp
ret
mov
adc
cmp
xor
xchg
cmc
psllq
sbb
jmp
inc
pusha
ds
xchg
dec
and
dec
sbb
cmp
mov
pop
mov
int3
es
jae
fidivrl
out
cmp
inc
pop
aaa
cmp
outsl
push
setns
xchg
lret
pop
jne
mov
cmp
and
inc
lea
mov
push
inc
jmp
push
mov
pop
out
pop
push
push
xor
pop
rcr
xor
repz
arpl
subl
add
test
push
in
cli
cltd
call
icebp
movsl
ja
or
mov
lods
mov
fcomi
shlb
sub
addr16
pop
xchg
jle
insl
sub
adc
int
jecxz
loope
hlt
mov
adc
lcall
lahf
cmp
out
inc
lea
cmp
xor
push
je
push
or
pop
sbb
test
insb
out
cs
sti
and
popf
xchg
cmp
fldl
std
xchg
mov
shll
jl
aas
push
les
add
sub
jne
lahf
pop
mov
pop
repnz
ret
xchg
loop
sti
stc
ja
insl
ret
xchg
pop
popa
setle
push
sarl
pusha
xor
in
xor
push
mov
imul
adc
test
jcxz
fldz
xor
idivl
mov
stos
aad
dec
add
inc
aas
mov
int3
dec
rcl
sub
sub
or
loop
rolb
add
pop
dec
pop
push
dec
popf
inc
adcl
dec
sub
push
dec
pop
cli
sbb
jbe
fistpll
in
lods
sub
sub
mov
and
repnz
push
out
cwtl
inc
into
leave
and
push
les
cmp
or
and
scas
inc
pusha
mov
cltd
fs
in
lock
icebp
lcall
fisttpll
xchg
dec
sbb
hlt
mov
andl
and
call
aad
jecxz
mov
add
insl
out
pop
dec
cltd
inc
les
or
sbb
movsl
sarl
out
insb
sbbl
outsl
orb
and
fldcw
out
pop
jl
movsl
dec
cld
adc
jno
repz
imul
add
xchg
sub
lret
out
mov
xor
xlat
repz
cld
push
movsb
shll
out
test
cli
loope
in
push
je
inc
lret
lea
fisttpl
pop
xchg
mov
adc
decl
sbb
lds
test
fwait
dec
dec
stos
jo
sti
rolb
xor
inc
out
mov
and
xlat
outsb
in
ja
sbb
mov
int3
outsl
push
ds
dec
in
xchg
push
das
cmc
inc
aam
pop
repz
movsl
fisubs
cmp
push
jo
inc
iret
testb
mov
adc
push
aaa
jnp
out
je
int3
inc
test
push
popf
pop
loopne
jbe
or
inc
push
pop
into
xor
int
cld
lcall
jbe
cmpsb
mov
dec
out
adc
and
push
lods
hlt
jno
imul
mov
loop
cs
ja
and
test
push
in
cs
cltd
pop
pop
cmp
test
or
stos
fbstp
adc
daa
lret
aaa
push
in
push
cld
push
loope
pop
popf
insb
xor
nop
fiadds
int
xchg
add
inc
lcall
imul
test
scas
xchg
cs
lock
fistl
cmp
xchg
push
mov
jne
sub
insb
and
sarl
neg
sbb
and
sub
xchg
scas
sbb
jbe
xor
mov
mov
shl
fucomp
xor
inc
mov
test
in
lock
mov
jns
push
mov
lock
lock
fs
dec
fistl
pop
in
daa
cmp
cwtl
nop
inc
stos
divl
mov
jae
fnstcw
dec
inc
push
dec
mov
xor
inc
sbb
push
repnz
shll
xchg
repnz
ljmp
cs
lods
lcall
pop
mov
xor
repnz
dec
std
jns
test
push
xor
jnp
jb
popa
mov
inc
xchg
sub
pusha
or
push
pop
sbb
jmp
out
add
pop
fdivrs
dec
mov
fucom
xor
xor
inc
loopne
cld
xchg
in
cmc
or
xor
scas
push
sub
scas
imul
xor
xchg
movsb
es
mov
mov
imul
out
xor
cmp
jp
push
in
int3
jge
std
pop
sbb
mov
fstl
popf
dec
aaa
fdivrl
sub
std
arpl
daa
aad
in
add
pushf
repnz
add
mov
bound
or
js
cmp
sbb
into
lds
mov
mov
adc
push
push
xchg
fmulp
xor
adc
push
lods
inc
test
pop
mov
lea
jp
cmc
das
adc
adc
or
pop
stos
faddp
and
adcl
add
lock
jno
nop
jecxz
ja
lret
jae
loope
jp
xor
xchg
scas
or
jmp
or
mov
pop
xchg
fidivrl
mov
push
jb
mov
push
jo
pop
aaa
fistpl
lea
mov
pop
or
insl
and
mov
cmp
dec
dec
push
out
mov
cltd
lea
jge
mov
sub
xlat
cmpsb
sub
aam
movsl
mov
and
je
hlt
ja
cmp
pop
movsl
lds
iret
adc
sbb
ds
shrl
add
aad
sub
lcall
int
pop
icebp
or
sbb
sub
loopne
xchg
repnz
jp
cmp
aas
push
cmc
adc
push
and
ficoml
inc
dec
lea
test
lret
push
hlt
call
fmuls
out
jnp
popf
sub
jge
jnp
sub
cmc
iret
xchg
and
fstpt
pop
out
lret
aam
dec
mov
or
mov
push
aaa
dec
xlat
insb
jno
xchg
outsl
lret
in
test
testl
dec
nop
xchg
es
mov
jle
jo
and
add
mov
sti
cmp
into
cmp
or
xchg
test
push
std
adc
sbb
dec
int3
int
push
insl
push
cld
pop
mov
ja
xchg
xorl
sub
pop
rorb
push
sbb
popa
outsl
les
jae
call
arpl
sub
ljmp
adc
lods
jle
rcl
rorl
jb
stos
test
lods
das
lods
dec
lcall
jmp
pop
adc
cmp
into
and
inc
push
ja
inc
jne,pn
out
arpl
shl
or
xor
adc
sub
xchg
mov
dec
js
cltd
aaa
xchg
bound
jns
sbb
lret
je
lods
aam
nop
adc
pop
mov
outsb
fmull
pusha
mov
nop
je
lods
xchg
adc
xchg
mov
adc
or
int
pushf
mov
and
push
mov
push
cmp
cmp
or
pusha
inc
ret
mov
test
aaa
push
iret
fwait
fs
or
int3
jle
mov
rcl
test
dec
pop
shl
inc
cmp
xor
mov
mov
je
inc
push
arpl
lret
push
and
psrlq
pop
jmp
xchg
mov
mull
mov
lret
mov
xor
push
adc
cmp
jl
mov
xchg
shrb
jo
in
mov
mov
dec
xlat
imul
out
adc
pop
sub
jns
add
in
aas
mov
jge
shrl
pushf
jnp
inc
mov
jle
icebp
pop
jbe
and
mov
jno
aaa
push
orl
dec
mov
popa
int
fsub
mov
test
xor
andl
xchg
push
ret
in
dec
pop
dec
insl
cmp
jg
xor
movsb
xchg
xchg
and
lcall
jg
xor
out
dec
aas
sbb
add
adc
inc
inc
fldt
loop
icebp
mov
das
dec
mov
repz
cmp
mov
add
inc
nop
add
pop
mov
cmc
out
stc
or
rol
adc
push
ret
push
mov
xor
push
jae
sbb
mov
pop
and
std
es
and
jle
adc
pop
or
or
push
sub
nop
push
lods
test
mov
mov
ret
xor
cmp
into
sub
repnz
or
mov
adcb
ss
iret
mov
pusha
dec
pop
movsb
outsl
shrl
lret
xor
cld
sub
sub
jno
jnp
dec
cwtl
xchg
fistpll
aam
and
mov
jecxz
jge
movsl
cltd
imul
popf
cli
adc
sbb
mov
rorb
push
push
shl
mov
xchg
in
je
mov
imul
adc
fsubrs
cmp
and
xor
add
hlt
adc
ss
mov
imul
out
out
mov
adc
movsb
fdivrl
fcoml
scas
add
lock
arpl
mov
shll
cmpsl
sbb
je
xorb
pop
lods
mov
sbb
xor
movsb
jno
and
nop
out
push
sbb
out
les
clc
xchg
mov
clc
outsl
add
les
out
cmpsb
mov
int
jnp
xor
ret
mov
lcall
cmp
mov
js
in
ljmp
xor
call
rcrl
inc
xchg
jl
fs
cmp
push
nop
ds
mov
mul
or
hlt
mov
sub
je
pop
xchg
inc
stos
out
push
pop
push
dec
cmpl
ret
mov
dec
sbb
out
cmp
jb
ror
movsl
sub
xchg
jo
xchg
push
jge
xchg
push
inc
fwait
xorb
cmpsb
mov
mov
and
in
mov
adc
outsb
jecxz
and
shr
imul
add
mov
stos
jmp
push
jmp
movl
hlt
xchg
dec
xchg
xchg
lcall
ljmp
push
je
sbb
mov
xchg
hlt
fisttpl
icebp
dec
popa
and
shll
pop
xchg
push
fstps
pop
mov
mov
jle
dec
daa
es
or
outsb
mov
rcll
movsl
cmpsb
repnz
outsb
jmp
and
dec
fiaddl
lret
repz
lret
cmp
and
ds
clc
dec
lahf
gs
push
xchg
adc
or
push
cmp
pop
pop
out
jno
pop
repnz
mov
ftst
outsb
rcr
cmp
lea
mov
fucom
imul
out
loop
cltd
dec
ret
fidivrs
mov
ret
dec
inc
out
inc
lods
inc
int
mov
data16
inc
test
and
lcall
inc
xor
repz
sbb
int
adc
or
xor
rcll
or
and
inc
stos
mov
into
mov
call
ljmp
call
mov
test
jge
adc
fmuls
daa
cmp
mov
mov
fimull
call
mov
test
sti
mov
lret
sub
faddl
push
mov
or
adc
fldl
cmp
call
cmp
sahf
shlb
jbe
cwtl
pop
or
mov
push
ss
add
push
cmpsl
jne
ret
xchg
sub
in
jnp
jbe
or
and
leave
pop
push
in
psubw
sarb
sub
mov
mov
cmpl
pop
pop
inc
adc
test
sub
movl
test
mov
cwtl
lret
mov
or
imul
push
mov
push
xor
jo
push
inc
push
fistl
add
mov
movsb
mov
pop
mov
mov
in
cmp
dec
scas
mov
fistl
push
cmp
test
cld
and
jne
cmpsl
lret
and
sub
fs
mov
test
cmpsl
pop
cltd
ljmp
jns
loope
imul
lea
ds
lret
outsb
sahf
jne
inc
mov
repz
into
and
sar
pusha
jno
aad
mov
dec
add
sub
cmpsb
cmp
stos
jbe
jmp
jmp
push
fisubrl
xchg
pop
dec
data16
insl
cwtl
push
sub
xor
mov
xlat
adc
cmpsb
inc
push
pop
dec
aaa
mov
pop
xor
adc
ss
sahf
aaa
pushf
sub
movsb
clc
pusha
xchg
mov
mov
scas
mov
and
lcall
lret
or
popa
dec
cmpsl
or
rolb
lds
jns
popf
clc
sahf
adc
mov
rclb
dec
stos
add
sahf
mov
lods
jmp
and
hlt
mov
je
inc
mov
divb
jno
adcl
lds
mov
test
sbb
dec
mov
xor
insl
jge
lock
add
mov
dec
sub
fwait
ja
pushf
pop
add
dec
add
insb
mov
ret
or
hlt
insb
rcr
adc
or
or
outsb
sub
fdivr
loopne
jb
cmpsl
scas
mov
jge
jl
repz
mov
mov
mov
push
popa
or
test
lcall
cmp
xor
push
pop
popa
lgs
shrl
in
aas
dec
and
mov
inc
fldt
movsl
fxch
aad
mov
aam
mov
mov
fidivrl
aas
out
mov
cs
mov
aam
and
in
xchg
jge
cld
test
push
pop
jge
lods
add
pop
pop
dec
cmpb
adc
jne
mov
jb
xchg
mov
test
jp
sbb
sub
xchg
jmp
sub
mov
sub
cwtl
push
fucompp
cmpsb
jb
pop
or
fists
xchg
fnsaves
push
push
inc
movl
adc
pop
aam
jl
add
push
lcall
mov
mov
dec
scas
mov
add
hlt
or
sbb
dec
inc
mov
loop
xchg
clc
xor
or
imul
popf
inc
ljmp
xchg
inc
lcall
sbb
mov
pop
imul
mov
adc
inc
and
xor
movsl
xor
cld
cmc
pop
push
std
inc
popf
push
scas
add
int3
jnp
test
andb
and
pop
push
out
outsl
aas
clc
dec
pop
jo
in
add
push
ds
lock
dec
push
fsubl
and
inc
dec
ljmp
aaa
pop
je
xchg
sub
in
cmp
push
xor
cmpsb
scas
scas
jno
inc
mov
test
flds
imull
loop
fadds
pop
clc
sbbb
mov
movsb
sahf
scas
sbb
movsl
adc
nop
dec
pop
lahf
out
jmp
fstl
cmp
fdivrl
xor
ljmp
testb
rolb
sub
scas
mov
xchg
jns
into
gs
xchg
mov
jo
jge
ljmp
inc
push
cmpsl
sub
pop
dec
pop
dec
clc
jae
inc
outsb
cltd
mov
arpl
push
xchg
mov
out
xchg
daa
xlat
fisttpll
lret
xchg
mov
dec
sub
scas
clc
jp
rol
add
lods
ret
pop
ss
outsl
push
out
adc
xlat
mov
dec
push
mov
dec
es
insl
insl
mov
pop
push
fldcw
test
add
jg
cmp
seta
ficomps
mov
or
loope
dec
sub
outsb
push
jo
add
jnp
cmp
lock
out
jne
adc
mov
xchg
leave
bound
imulb
loop
pop
cs
imul
stos
fdivs
xor
jo
in
mov
cwtl
jbe
pop
pusha
mov
pop
jg
or
test
xchg
rcll
or
xchg
push
in
jo
xchg
adc
pop
js
test
mov
push
mov
jne
popa
fdivl
pop
push
aas
mov
or
imul
in
sbbb
mov
enter
cmp
jle
mov
push
add
mov
mov
hlt
insl
add
outsl
sahf
mov
in
subl
or
into
xor
fwait
sub
hlt
push
ss
lock
addr16
insb
add
xor
ds
mov
mov
jge
push
lods
test
mov
ret
outsb
fs
push
stos
pop
scas
push
mov
sarb
pop
sub
mov
push
mov
fdivrs
mov
repnz
rcll
movsl
subb
daa
arpl
adc
scas
movl
jge
out
pop
in
dec
add
dec
aas
sub
stos
fiaddl
inc
aam
sbb
dec
mov
mov
pop
or
test
lods
andb
adc
mov
scas
scas
cmp
out
push
cmpsl
int3
cmp
stc
push
cmp
push
cld
in
lahf
adcb
sbb
data16
inc
xchg
xchg
push
fisttpl
mov
and
shll
testl
lret
push
int3
dec
and
repz
xor
add
in
outsb
xor
sub
fxch
push
mov
mov
add
push
pop
ret
mov
pusha
nop
mov
jmp
mov
ss
and
mov
sub
fadds
adcb
sbbl
add
ljmp
push
daa
aam
add
addr16
out
repnz
bound
cwtl
out
insb
cmpl
cmp
jmp
jg
mov
test
xor
mov
call
lcall
inc
mov
orb
mov
shll
sti
dec
loopne
adcb
out
roll
into
or
add
mov
cmp
pop
loop
cli
and
ljmp
mov
out
loopne
pop
mov
pusha
cmp
jnp
clc
int3
das
cmpsl
stos
pop
outsl
push
lods
xchg
add
and
adc
mov
add
addr16
sbb
fbld
and
rorb
loope
sub
sbb
and
xchg
sub
sar
out
rorl
mov
arpl
lret
mov
loopne
and
pop
lods
ljmp
popf
push
pop
and
push
or
xchg
dec
sub
sub
mov
test
cmp
repnz
mov
add
out
sbb
imul
mov
out
ds
pushf
andb
lds
cld
fst
insl
nopl
lock
jb
add
jae
jg
xlat
dec
adc
sbb
into
in
jl
outsb
xor
ret
ss
adc
shl
mov
xlat
out
int
repz
imul
or
dec
lahf
sbb
les
or
xor
hlt
jg
dec
imul
ret
push
sbb
dec
mov
repz
call
push
out
inc
lea
iret
aaa
cwtl
mov
ret
push
jmp
xor
sub
fwait
push
lods
lock
cmp
xrelease
dec
dec
aas
sbb
cmp
jecxz
rcl
and
mov
ret
test
jmp
imul
shl
lcall
out
pusha
jecxz
loop
or
jb
loopne
sbb
fldz
adc
testl
add
jp
std
inc
adc
push
mov
and
jmp
push
loop
ret
add
dec
cs
mov
mov
jne
fsubp
mov
sub
adc
ljmp
push
cli
call
mov
sarl
inc
inc
xor
ret
mov
and
xchg
pop
aas
dec
jbe
pop
cmp
inc
push
and
xor
sub
inc
sbb
adcb
push
mov
jl
repz
sbb
ds
stc
jne
imul
sbb
inc
dec
inc
cmp
aaa
xor
and
xor
cmp
rcll
mov
add
pop
mov
loope
and
pop
out
into
dec
cmpsl
jle
movsl
les
jl
dec
mov
cmpsb
mov
push
cld
cltd
sub
cltd
movsl
das
rcrb
ret
test
lea
data16
adc
sub
push
sbb
cwtl
outsl
dec
fmull
clc
mov
fadd
dec
imul
mov
repz
hlt
dec
cltd
inc
cltd
inc
and
loopne
or
lods
imul
sarl
fmuls
add
sub
pusha
test
cmp
push
pop
loopne
xchg
pop
cmp
pop
mov
cli
out
int
and
pop
mov
iret
sub
rcr
push
mov
cmpl
scas
mov
mov
arpl
cmp
adc
gs
nop
cwtl
out
cwtl
sub
dec
es
pop
xor
outsl
mov
push
and
cmp
sahf
pop
cs
in
andl
or
lods
test
and
jo
sbb
pop
pop
mov
pusha
in
fs
iret
jl
or
sbbb
or
lock
dec
popf
sbb
iret
imul
mov
fdivrl
decl
mov
ret
shrl
push
loopne
in
test
sub
push
dec
les
lahf
mov
add
fnsetpm(287
pop
into
les
sahf
jl
aam
mov
test
mov
dec
rorl
push
push
mov
fiaddl
push
xor
jge
cmp
rolb
cli
dec
cmpsb
mov
aad
loope
addl
je
jo
pusha
test
jne
mov
add
and
pop
lcall
test
iret
and
repnz
jne
cli
or
cmpsb
jmp
mov
mov
iret
jle
dec
loop
cmp
and
dec
jecxz
popf
adc
jle
cmp
ficoms
mov
icebp
dec
cmpsl
add
sub
out
xor
int3
pushf
xor
inc
mov
fildll
arpl
cltd
in
pushf
mov
jmp
xlat
popa
sbbl
or
xchg
inc
in
pusha
inc
cmp
cmpsl
and
rol
jnp
leave
sub
pop
ds
outsl
cmp
cld
mov
mov
xchg
jmp
cs
fstpt
push
xchg
push
and
mov
loope
int3
gs
cwtl
xor
mov
out
adc
mov
or
and
inc
shlb
add
push
rcrl
sbb
mov
dec
pop
push
adc
mov
fstpl
inc
fildl
fbstp
dec
fbld
jge
testb
inc
mov
jle
mov
call
xchg
xor
xchg
xor
fldenv
mov
jmp
sbb
int
dec
push
mov
shrl
jns
lds
xchg
push
push
sub
mov
inc
inc
pop
outsl
jg
icebp
mov
mov
cmp
out
cltd
or
cltd
test
mov
jno
adc
and
add
cwtl
push
adc
orl
inc
std
pusha
in
rolb
test
xlat
and
test
pop
aaa
push
sub
mov
jge
inc
and
push
mov
imul
mov
sti
fdivrs
popa
sbb
in
mov
jno
jl
stc
scas
rorb
adc
cld
pop
mov
dec
ret
movsb
repnz
inc
pop
adcl
mov
stc
aad
jecxz
ds
inc
pop
dec
mov
lds
out
pop
sub
icebp
mov
or
inc
mov
mov
dec
adc
inc
test
add
pushf
push
dec
js
jb
and
and
jp
jno
inc
leave
jno
pusha
fildl
data16
cwtl
outsb
jmp
pushf
jle
sti
leave
adc
bound
aaa
inc
jecxz
cmp
xor
cmp
int3
aaa
adc
pop
cmp
push
lcall
cmp
push
sub
mov
mov
stos
insb
jle
push
xor
adc
or
mov
jo
lds
mov
push
in
xor
adcl
pop
call
pop
and
mov
and
arpl
sbb
or
scas
test
fucomp
fsubrl
jg
mov
hlt
cld
cmp
adc
push
and
ret
sub
adc
rcl
lock
add
fisubrl
jnp
cmp
mov
push
inc
in
loopne
inc
mov
push
das
cmovl
dec
pop
jno
incb
fwait
mov
sbb
fs
cmp
pop
lcall
jne
insb
push
jae
mov
dec
rorl
cmpsl
ds
jg
in
jg
cmp
imul
in
arpl
pusha
push
out
push
pop
mov
cwtl
sub
fldl
xor
stos
mov
pusha
fstpt
int3
mov
gs
in
aam
in
push
add
or
pop
daa
into
arpl
out
test
inc
add
ja
cmpsl
and
mov
mov
mov
sbb
clc
mov
xor
cmp
orb
mov
pop
xorb
or
loop
es
xchg
xor
mov
shl
cltd
movb
dec
inc
std
popf
lods
and
mov
cli
lcall
test
iret
xchg
loop
xchg
shrb
xor
pushf
mov
and
inc
test
cld
xor
push
cmp
fdivs
fs
es
mov
incl
les
daa
aaa
xchg
or
movsl
lea
mov
push
aam
bound
mov
push
push
inc
inc
mov
hlt
sub
cld
ja
roll
and
cs
xchg
pusha
movsb
xor
adc
sbb
mov
lock
sbb
push
or
in
call
fwait
jbe
iret
mov
nop
jle
push
mov
mov
pop
incb
mov
dec
dec
or
int
ds
out
and
inc
xor
pop
xchg
rolb
mov
mov
xchg
sub
cmp
jns
mov
jnp
cmp
divb
xchg
repnz
in
popf
pop
loop
cmp
mov
push
jmp
insb
shlb
pop
jmp
punpckldq
pop
fisttps
push
xchg
sub
dec
pop
sub
dec
push
xchg
and
outsb
dec
xchg
clc
push
imull
pop
out
or
aaa
je
mov
xor
aaa
dec
addb
shll
enter
cmp
sete
xchg
add
loop
mov
stos
shrb
repnz
stc
popl
and
clc
arpl
stos
xor
add
leave
mov
mov
fnsave
imul
xchg
push
mov
jb
sbb
cs
les
repnz
cmp
mulb
adc
daa
outsl
scas
jge
fnstcw
and
aaa
add
cmpsl
xchg
xor
std
shrl
lds
or
movsl
es
insl
scas
add
or
xchg
mov
pop
xchg
inc
xor
loope
fsubr
inc
fcoml
mov
adc
fistps
andl
hlt
pop
int3
arpl
xchg
lds
ljmp
lds
lahf
notb
es
insl
fwait
inc
stos
int3
mov
jmp
lahf
cmpps
jbe
icebp
lock
and
in
in
pop
outsb
jp
aad
rcrl
int
cmp
xchg
mov
mov
lock
bound
or
fdivrs
xor
fidivs
mov
add
ss
xor
mov
cmp
es
cmp
cmc
ljmp
jb
cmpsl
rclb
bswap
sahf
sub
lods
in
adcl
dec
mov
mov
inc
jp
aas
in
in
rcll
lcall
ret
ret
fsubs
mov
pusha
cmpl
mov
data16
xlat
out
nop
cmp
pop
outsb
movlps
shll
mov
adc
inc
icebp
sub
adc
ja
test
pop
scas
outsl
dec
fnsave
adc
adc
sbb
mov
xlat
aas
sub
imul
aam
shll
shrl
xchg
fwait
decb
jge
es
xor
jo
scas
mov
push
sub
xchg
sbb
or
inc
fdivrs
fs
pusha
test
negb
insl
dec
xchg
repz
pop
jne
fsub
test
jbe
je
xorb
aam
fcomps
mov
daa
jge
in
stos
xchg
stc
jecxz
jl
sub
aam
rol
aaa
orb
jns
lcall
nop
mov
push
xchg
add
lds
fwait
shll
dec
daa
fwait
jns
jo
xchg
mov
push
push
inc
inc
cmp
pop
test
pusha
dec
and
dec
xchg
and
rcl
push
in
ret
in
push
int3
and
cmpsb
push
mov
fsubl
pop
push
xchg
aas
out
jle
inc
or
push
dec
jns
inc
outsl
in
mov
cmp
cltd
cwtl
pop
mov
xor
push
mov
shl
pop
lock
push
js
int
mov
hlt
sbb
adc
push
inc
jmp
hlt
and
inc
xor
clc
jbe
mov
xor
xrelease
cmp
xchg
ds
sub
jl
aad
adc
lods
pop
cmp
mov
push
jmp
cltd
cmp
notl
notl
call
insl
clc
cmp
lds
cmpsb
xchg
xchg
int3
xor
or
add
or
dec
jmp
pop
pop
ljmp
mov
int3
in
sti
movlps
pushf
cmp
sub
int3
jg
inc
xchg
push
loopne
pop
jecxz
xchg
imul
lock
push
pop
mov
fnsave
fcomps
sti
pop
add
mov
sti
ss
push
and
add
popa
and
popf
mov
int3
outsl
shll
inc
mov
movsb
xchg
jo
add
in
scas
xchg
jge
int3
insb
add
inc
fidivs
xchg
pushf
iret
daa
mov
xor
push
push
lcall
adc
pusha
dec
mov
ja
lahf
shll
repnz
mov
mov
mov
or
xor
mov
in
daa
jns
sbb
mull
adc
pop
push
adcb
les
addl
jl
lcall
in
jnp
jne
rcll
mov
xor
aas
lock
or
fs
ds
sbb
popl
xchg
aaa
test
and
jg
cmp
lahf
and
sbbl
int
xchg
adc
bound
bound
test
data16
out
idivb
add
mov
jl
push
push
xor
lret
int3
fimuls
nop
xor
cmp
adc
push
xlat
mov
ret
inc
inc
cmp
xchg
add
mov
push
mov
in
xor
mov
jns
lods
mov
sub
mov
push
cmovae
clc
das
test
icebp
dec
jo
push
stos
mov
faddl
mov
iret
ljmp
pushf
cli
mov
mov
sub
ss
cmp
xor
mov
movsb
cmp
pop
mov
adc
in
push
int
fimull
out
fs
mov
mov
cs
rclb
sub
fsubrs
addr16
ret
add
fwait
or
or
mov
cmp
lods
nop
dec
or
cmp
jecxz
xchg
shll
xchg
lds
or
dec
ds
or
add
addr16
fisubrl
and
sub
rcrl
jnp
jg
shl
jl
iret
loope
movsb
xchg
and
movsl
mov
sti
cmp
decb
mov
cmp
addr16
out
clc
and
enter
add
loop
xchg
fnstenv
sbb
fs
rcl
xchg
enter
jnp
call
add
pop
shrb
add
mov
es
push
sbb
and
mov
clc
cld
enter
aad
out
jge
les
aam
inc
ljmp
xor
fnsave
repnz
mov
cs
clc
or
sub
adc
pop
pop
jg
std
sbb
mov
jb
fucompp
idivb
or
sub
hlt
push
in
iret
inc
fistpll
dec
cmp
fwait
add
ja
lss
and
mov
xchg
cmp
push
outsb
out
sti
push
push
int
push
adc
mov
mov
inc
push
sub
mov
subb
sahf
lahf
xchg
adc
dec
aad
jle
cmc
je
les
andb
repz
movb
cmpsb
cld
xchg
fstps
jge
lods
mov
frstor
in
call
cltd
aaa
test
test
xor
subb
clc
sahf
adcl
dec
fst
repz
ja
or
xor
shl
or
arpl
scas
sub
sbb
push
aam
lods
push
dec
cmp
dec
not
add
pop
xchg
sub
sub
xor
push
mov
xor
cmpsb
in
mov
jne
xchg
or
imulb
pop
add
call
jno
xor
test
push
add
repz
call
rcll
push
lds
mov
pusha
cmp
pop
lods
clc
mov
mov
cmp
ja
test
sahf
cmc
nop
sbb
mov
push
jne
fidivrs
dec
or
jge
popa
stc
xchg
mov
pop
jne
add
pop
sahf
xor
sub
hlt
mov
pop
adc
inc
sarb
stos
mov
pop
daa
jne
cmp
dec
imul
sbb
ss
mov
orb
int
or
test
mov
sbb
iret
gs
sub
es
mov
add
lock
push
sub
es
inc
test
shrb
loope
pop
fdivs
push
sub
mov
mov
jnp
sbb
cmpsl
out
mov
push
xchg
incl
std
inc
jp
xchg
andl
loopne
cltd
cld
or
int3
shrl
xchg
fnstsw
jne
je
lock
fsts
scas
ficoms
std
cltd
mov
mov
inc
fisttpll
scas
fs
fbstp
jnp
xor
and
or
das
mov
in
dec
cmc
jbe
in
push
rcll
aaa
pop
mov
lcall
ror
arpl
pusha
aas
dec
bound
into
sbb
pop
imul
mov
jne
jge
loope
mov
cmp
jp
fisttpll
mov
cmpsb
cmpsb
cmp
testl
and
inc
ret
out
sahf
hlt
bound
iret
or
inc
fldenv
and
add
in
xchg
fistps
cs
sub
gs
pop
es
mov
test
sbb
mov
jne
and
int
and
jecxz
sub
fwait
xor
and
fdivl
mov
mov
fdivrl
popa
jl
jbe
arpl
sbb
test
in
cmp
nop
movsl
cmpl
mov
sub
xchg
fstl
inc
neg
in
xchg
jecxz
icebp
adc
mov
cmp
icebp
and
push
in
fs
inc
ss
in
cmpsl
ss
lcall
sbb
add
insb
lahf
mov
jbe
pusha
idiv
cmpsl
daa
inc
inc
push
in
jg
cmpsb
cmp
adc
push
mov
add
test
push
insb
imul
mov
and
out
xchg
xchg
mov
pop
add
test
cmp
stc
insl
and
dec
pop
cmp
sbb
sub
ljmp
or
stos
popa
in
jmp
xchg
arpl
and
push
sbb
shrb
mov
xchg
sub
cld
push
movsl
jmp
loopne
sbbl
xor
lea
out
aaa
int3
mov
mov
fucomip
fcomps
aaa
into
gs
lcall
push
iret
mov
stc
cltd
shl
add
fdivrl
lea
dec
xor
adc
js
pop
in
lea
aam
fs
lods
int3
inc
hlt
mov
popf
aad
fs
sti
inc
lret
sahf
sub
hlt
jo
adc
mov
lcall
and
mov
dec
int
out
lods
inc
insl
ficompl
push
pop
push
xchg
call
repz
popa
cltd
out
fisttps
add
cmpsb
movsb
push
shl
popf
pop
loopne
test
xchg
sbb
movsl
mov
call
sbbb
sbbl
leave
mov
pop
insl
aas
out
lret
sub
xor
push
push
sub
lret
jns
xor
sbb
mov
adc
mov
cmpl
mov
iret
mov
push
call
iret
and
lods
mov
mov
inc
mov
mov
mov
sub
mov
bound
push
cmp
aam
outsb
push
subl
fcmovb
push
pop
js
dec
fdiv
mov
push
pusha
stos
or
ds
lods
imul
andl
sarb
dec
push
daa
ljmp
push
mov
jl
xor
push
mov
xchg
mov
pushf
movsb
cs
fidivl
adc
mov
xchg
jb
jno
cmp
dec
or
mov
mov
dec
pop
jnp
aaa
xor
roll
xchg
xor
jnp
leave
lods
lea
sub
dec
and
push
test
inc
test
push
adc
xchg
lea
mov
push
les
mov
mov
test
iret
lahf
sarl
mov
test
popf
jg
jle
aaa
and
cmp
add
subl
sbb
pop
adcl
sub
push
call
jns
outsl
test
out
lret
subb
rolb
inc
xchg
or
push
fwait
insl
pop
dec
outsl
mov
xchg
ds
dec
pop
rdmsr
data16
sbb
pushf
push
test
nop
xchg
add
sub
loope
mov
mov
std
cltd
xor
imul
hlt
xor
xchg
jp
cmp
aam
in
dec
and
jge
mov
ficomps
imul
out
fistps
addl
or
jbe,pn
and
fcoml
pop
jge
ficoml
imul
mov
mov
xor
xchg
clc
push
push
cli
adc
sarl
ret
data16
lret
mov
sub
dec
mov
bound
ret
cli
sbb
fldenv
push
popf
stos
mov
jb
add
mov
mov
bound
test
fcmovne
lock
jge,pn
sub
mov
adc
xor
test
lahf
stc
test
inc
add
insl
lret
sti
cmp
pop
xorb
rcrb
stos
mov
inc
cmp
loop
ret
cs
mov
push
xor
mov
mov
fildl
mov
push
popa
aad
iret
jecxz
ret
adc
das
jp
lret
push
int3
fs
stos
mov
insl
loopne
pop
add
xchg
adc
mov
sub
mov
add
jp
out
and
outsb
xor
adc
dec
loope
insb
fsubrp
cvtdq2ps
sub
test
in
mov
loopne
jne
idivl
lods
shll
rol
repnz
push
push
mov
mov
adc
jp
and
loop
ret
or
add
inc
test
xchg
insb
stos
and
sub
dec
mov
addr16
lock
test
mov
sub
and
subb
inc
or
das
cmp
sub
jae
push
std
mov
and
mov
ret
mov
sbb
jne
mov
mov
dec
jne,pn
flds
adc
dec
test
rol
and
ret
and
xchg
dec
rcrb
sbb
mov
sti
push
ss
inc
push
cmc
pop
int3
fmuls
rcrb
jnp
stos
pop
sbb
roll
lods
dec
mov
aas
inc
lahf
push
nop
xchg
sahf
test
js
test
mov
cmpsb
ja
int3
scas
popf
stc
sub
ret
outsb
and
add
popf
xor
in
es
ret
shrl
gs
push
incb
adc
in
cld
cs
cmp
pop
inc
rcl
push
sbb
ret
jle
mov
fidivrl
movsl
xor
lret
adc
cwtl
jne
cmp
adc
icebp
mov
lea
mov
mov
pop
jmp
mov
sub
add
add
loope
pop
sbb
out
add
pop
rol
adcb
into
cmpsl
mov
addr16
adc
lcall
movsl
dec
cmc
mov
daa
mov
pop
mov
xchg
pop
jecxz
pop
add
add
bound
insl
add
pop
aas
out
es
out
in
shl
mov
fisttps
std
or
test
rclb
shll
fbld
jecxz
push
lcall
movsb
pop
pop
scas
nop
aas
es
fdivr
dec
mulb
xchg
cmpsl
fisubrs
sbb
cmp
mov
mov
ljmp
aaa
xchg
dec
movsl
jbe
lods
imul
jno
inc
push
sbb
aaa
lods
scas
sub
int3
cmp
fadds
xchg
mov
aam
inc
add
xor
lahf
sarl
ss
jo
imul
bnd
cmpsb
adc
jle
cld
inc
leave
insb
dec
and
or
and
adc
icebp
xchg
cwtl
or
mov
in
adc
lret
push
inc
adc
cmp
mov
inc
mov
adc
pop
inc
sbb
jo
pop
insb
imul
cld
nop
les
iret
pushf
xor
scas
fwait
xor
or
jno
push
inc
push
call
es
movsl
cmpsb
cmp
hlt
mov
sbb
mov
dec
ja
leave
daa
pop
lods
movsb
mov
mov
sub
dec
imul
jo
mov
push
ret
add
arpl
jns
push
pushf
fisttpl
icebp
in
imull
mov
adcl
cmpsb
ljmp
loope
into
xchg
rcl
sbb
pop
push
movsl
push
fistps
mov
aas
in
push
inc
loope
sub
sub
add
dec
inc
jl
popf
mov
cmpsb
push
xchg
lahf
arpl
iret
add
mov
dec
mov
std
insb
cmp
rdpmc
das
std
xchg
xor
rcrb
jnp
cs
xchg
cli
mov
test
out
push
outsl
dec
iret
inc
push
mov
je
inc
inc
out
test
mov
lahf
pushf
add
outsb
insb
lcall
xor
cld
imul
xor
das
cmp
ja
dec
push
mov
push
fs
cmp
cmpsb
cmp
mov
pusha
dec
fcomps
fisttps
sub
lods
rclb
mov
sub
mov
int3
sub
das
ljmp
inc
jno,pt
xor
lock
scas
imul
pop
push
imul
fsubr
lea
fwait
xor
cmc
stos
cmp
sbb
aas
int3
xor
rorb
test
sub
lods
enter
mov
pop
rep
inc
and
cld
clc
xchg
mov
push
outsl
xor
and
push
cmc
mov
mov
jge
sbb
pusha
shll
adc
lcall
dec
xor
mov
neg
add
movsl
inc
fstpl
add
or
mov
dec
mov
cwtl
out
mov
movsb
out
fdivl
je
pop
push
incb
and
and
jle
ss
insb
mov
xchg
jmp
cmp
aam
cmpsb
fstpt
imul
xchg
lods
xchg
add
mov
ja
and
sbb
loope
aas
shrl
mov
jbe
scas
jb
test
decb
std
or
fwait
sub
and
arpl
xor
push
sub
lret
dec
pop
rclb
adcb
push
xor
jno
mov
fiaddl
and
push
inc
jb
mov
mov
jmp
xor
sti
add
mov
sub
pop
es
hlt
push
jl
loope
jo
rol
movsl
push
add
or
addr16
aaa
adc
inc
dec
das
imul
pop
ss
xchg
iret
loope
pop
push
jmp
jmp
lahf
inc
out
mov
and
scas
mov
mov
cld
mov
jl
fidivs
xchg
jecxz
enter
test
ret
iret
repz
fstp
test
lds
add
int3
call
add
sbb
inc
scas
jl
fbld
std
imul
in
int
jle
jno
mov
adc
sub
cltd
xor
ja
pop
cmpsb
dec
mov
push
xchg
xor
adc
mov
add
adc
or
mov
mov
xor
sbb
dec
and
xchg
or
iret
add
insb
js
scas
inc
cmp
add
out
jne
mov
cltd
mov
test
mov
adc
or
outsl
push
test
and
sahf
pop
pop
jb
xor
sbb
inc
lock
testb
push
xorl
jp
icebp
push
je
in
xor
adc
je
jge
imulb
push
mov
cmp
inc
lods
in
not
inc
loope
fs
sar
lret
pop
lret
xchg
scas
xchg
shlb
push
push
and
xor
into
jnp
mov
fiaddl
or
cmp
fists
cmp
cmp
push
out
mov
xlat
inc
pushf
lea
popa
cltd
aas
mov
xor
pop
push
sbb
xchg
xor
sbb
and
xchg
pop
add
ja
pop
xor
push
ljmp
insb
jno
into
cs
mov
mov
cmpsb
sub
lods
les
and
pop
lcall
sti
mov
dec
jecxz
push
adcb
push
jl
imull
in
lds
scas
push
jg
fdivr
dec
push
push
stos
inc
dec
es
xchg
pop
aam
loopne
pop
pushf
xor
loop
jle
mov
or
hlt
add
add
stos
inc
gs
cmp
pop
gs
scas
ret
jl
fwait
mov
setnp
jg
and
and
repz
clc
jne
out
popf
hlt
or
jno
sbb
cmp
xchg
and
dec
rcll
test
mov
test
std
inc
call
ds
gs
fs
cmp
sbb
mov
mov
movsl
cmp
loopne
sbb
ret
dec
stos
xchg
ds
jnp
inc
or
or
cli
leave
pop
mov
push
mov
insl
or
inc
loop
lahf
addr16
inc
out
add
ja
adc
cld
add
push
push
add
xor
idivl
gs
popf
dec
pop
call
int
mov
in
jne
or
pop
inc
frstor
test
pop
rcr
jmp
push
rorl
push
imul
inc
or
cld
xor
gs
mov
sahf
mov
push
adc
adc
adc
dec
ljmp
jno
xchg
push
sbb
fisttpll
lret
ss
sub
cltd
sbb
mov
push
jne
sbb
xor
push
scas
dec
jp
mov
xchg
setae
mov
cmp
mov
shll
add
and
push
sbb
adc
daa
add
adc
ljmp
stc
adcl
jl
pop
adc
pop
outsb
cmp
push
daa
dec
cmpsl
sbb
pop
nop
mov
test
in
leave
insl
fcompl
mov
das
cmp
xor
adc
enter
je
mov
dec
mov
enter
ret
andb
pop
mov
and
daa
dec
pusha
push
loop
and
lock
sbb
fnstsw
push
popf
fdivrl
shrl
adc
add
push
mov
mov
daa
cmp
adc
push
mov
fs
negb
xlat
scas
pop
sbb
or
push
push
sbb
dec
mov
cltd
pop
dec
dec
pop
jp
mov
mov
ljmp
sub
xchg
push
cmp
jge
push
test
iret
xor
xor
sub
dec
jle
ss
jb
testl
lds
mov
out
sub
scas
cmp
jecxz
jg
adc
movsl
dec
jno
add
sbb
or
inc
nop
daa
jnp
lahf
push
mov
scas
aaa
cld
push
stc
push
nop
pop
adc
xor
adc
test
ficompl
xor
ret
out
fs
or
mov
jmp
push
inc
or
or
adc
pushf
add
mov
and
repnz
sub
xchg
push
daa
xchg
adc
pop
cmp
fidivrl
or
stc
xor
leave
xor
imul
jno
cmpb
jge
dec
push
nop
jmp
mov
push
pop
fistps
out
jmp
dec
adc
xchg
add
bound
mov
outsb
cli
jb
xor
movsl
xchg
addl
xchg
fstpt
sub
lret
mov
lret
lcall
sbb
adc
jo
jl
shrb
mov
sar
aas
dec
and
adc
sbb
scas
jns
xor
in
dec
adc
ds
insb
jle
insb
les
xchg
add
add
rorb
add
push
jmp
lds
adc
call
leave
scas
mov
test
push
xchg
fcmovnb
lds
mov
push
insl
test
out
mov
clc
test
pop
insb
add
stos
mov
jecxz
jge
adc
cmc
inc
fucom
pop
mov
inc
das
insl
idivl
lock
and
gs
xchg
aad
das
xlat
hlt
pop
adc
in
fdivs
adc
fidivl
mov
mov
sub
cmp
pop
pop
ret
cli
pushf
outsl
cmp
pop
es
inc
mov
xor
std
mov
cmpsl
xor
daa
lret
xchg
fimuls
jp
push
sub
shlb
andb
jnp
mov
imul
sub
ljmp
jno
push
xlat
sbb
and
ret
mov
fs
pushf
ljmp
aad
pushf
loop
xchg
cmp
inc
pop
jg
gs
mov
push
mov
and
fcompl
push
mov
stos
jne
popa
in
addr16
xorl
call
lods
enter
xchg
jl
mov
or
jae
xchg
dec
adc
out
adc
ds
incl
and
add
int
lds
and
addl
mov
ret
insb
add
sbb
movsb
mov
sub
cmc
ljmp
ret
scas
fdivrp
scas
fnstsw
inc
lcall
js
fmulp
cld
pop
fdivrs
and
sarb
call
out
dec
mov
div
lods
inc
in
and
subb
pop
push
bnd
dec
or
pop
outsl
push
jbe
call
int
cs
call
or
adc
int3
jle
lods
jp
cmp
pusha
scas
xor
cmp
or
rorl
negl
xor
xchg
outsb
nop
xchg
fists
lret
movsl
sub
xchg
mov
mov
dec
mov
dec
aaa
mov
sub
mov
aas
mov
in
fdiv
inc
add
es
push
mov
dec
data16
fs
fbstp
or
push
gs
pop
sub
dec
push
loope
mov
push
fwait
sub
repnz
mov
sbb
and
mov
std
pop
jp
fdiv
pusha
xlat
cmp
push
sbb
mov
sahf
pop
jmp
dec
into
imul
imul
cmp
xchg
loop
int
mov
push
mov
lret
fsubrs
out
dec
push
xor
xor
jnp
pushl
mov
sar
aas
loope
in
adc
mov
daa
outsb
out
mov
fldcw
in
hlt
xor
pushf
jnp
cwtl
and
stc
pop
scas
dec
movsl
cltd
sub
mov
mov
pop
enter
mov
sub
popa
or
jmp
out
mov
or
icebp
inc
sbb
js
in
movsb
dec
xchg
or
inc
imul
xor
push
shlb
gs
mov
inc
xchg
aas
gs
push
sbb
jne
mov
or
mov
and
test
and
lcall
aas
sub
lret
test
ja
shrb
push
fs
ret
mov
in
testl
adc
ljmp
sbb
dec
mov
cmc
push
loope,pt
loope,pt
jl
pop
fsubl
sahf
insl
jne
sbb
ret
cmp
es
out
sbb
push
and
ror
dec
pop
popf
and
dec
and
fsubrl
sahf
cs
lret
stc
pushf
scas
daa
cld
iret
cs
sub
cmp
xchg
imul
xchg
lock
stos
popa
mov
or
rorl
test
jo
repz
adc
adc
pop
roll
sar
daa
enter
call
lods
mov
mov
lahf
rol
mov
cmpsl
sbb
sbb
jae
cmpsb
cmp
lea
in
out
sub
pop
cmc
mov
pop
cmp
push
test
nop
enter
test
mov
popa
inc
roll
sbb
and
inc
icebp
or
mov
lret
pop
repz
aam
and
add
xor
add
inc
lret
fs
shrl
push
pop
ljmp
jno
fwait
mov
sarb
cmp
pusha
xor
aaa
inc
fs
xor
sbb
fsubrs
popa
ds
into
mov
sti
cwtl
call
pushf
sub
es
inc
fwait
rcrl
jno
dec
mov
mov
insb
mov
sbb
fwait
jb
xchg
jg
xlat
xor
call
ja
add
cmpsb
sub
leave
xor
loope
pop
xchg
xchg
repz
mov
std
jmp
bswap
pop
dec
int
aad
scas
sub
cmp
pushf
popf
movsb
xchg
test
gs
incl
fwait
sbb
insb
fbld
sbbb
jge
inc
dec
popf
xlat
mov
mov
frndint
lcall
xchg
adc
cmp
mov
dec
push
into
int3
push
ret
pop
xchg
jae
lcall
add
ljmp
mov
sbb
lea
gs
hlt
jb
fiadds
stc
add
inc
arpl
dec
dec
int
push
lods
cmp
bound
imul
in
sub
cmc
into
adc
iret
and
push
and
imul
add
xor
test
pop
outsb
stc
xchg
lret
fbstp
inc
push
ja
cmp
xchg
es
jae
mov
cs
ret
pusha
scas
fnsave
fs
cmpsl
cmp
shlb
imul
sbb
ret
dec
push
push
in
jb
sub
enter
in
push
mov
and
jns
mov
push
and
add
lahf
insl
clc
sub
mov
xchg
in
mov
push
push
pop
cmp
leave
pop
cld
aaa
mov
jmp
mov
mov
push
inc
add
or
push
dec
loop
int
and
fwait
dec
dec
dec
and
fsubs
int
mov
lahf
in
pop
popl
cmp
loope
mov
dec
xrelease
shlb
add
and
dec
push
push
fisttpl
or
mov
arpl
dec
dec
push
mov
pop
out
push
push
inc
pop
cli
arpl
cmp
inc
push
shl
push
push
xchg
jmp
add
mov
sub
and
mov
mov
negl
xchg
push
dec
mov
mov
dec
divb
stos
cmp
xchg
insl
pop
mov
xchg
fsubl
push
xor
ds
or
popf
cli
pop
sub
fildl
cli
nop
add
add
test
mov
jae
mov
lcall
out
cmp
cmpsb
lock
addr16
stos
push
fistl
pop
and
mov
aaa
fstpt
adc
out
pushf
lods
mov
outsb
fwait
pop
leave
push
movsb
xor
xor
sbbb
aam
nop
insl
movsb
dec
sub
dec
dec
cmc
xchg
xchg
ror
int
aam
notb
cmp
insl
adcl
scas
mov
xchg
mov
push
mov
js
imul
aam
popf
push
lea
movsb
jmp
xchg
out
dec
ds
cli
repnz
lea
or
push
cwtl
sbb
imull
sub
mov
das
lock
or
sub
xchg
fldt
jo
incl
rcr
mov
pop
cmp
loop
ds
enter
sahf
jbe
dec
cltd
aam
call
imul
icebp
inc
mov
add
jl,pn
mov
in
outsl
jl
ret
jp
jne
mov
jl
xchg
das
xchg
movsb
sbb
shlb
mov
jb
ret
inc
mov
or
pop
adc
dec
inc
addr16
lods
lds
stos
cltd
sub
leave
aam
leave
ret
xor
dec
push
inc
std
mov
call
mov
lock
mulb
xchg
outsb
loopne
out
ficompl
and
out
dec
push
cli
inc
mov
dec
enter
xor
pushf
jle
inc
stc
xchg
sbb
fs
mov
mull
mov
push
jmp
pop
mov
gs
lret
dec
push
fldt
in
dec
sahf
cwtl
in
inc
push
flds
mov
xchg
rcrb
out
pop
icebp
pop
sub
add
cmp
cmp
dec
fsubrs
aam
sbb
jecxz
or
insl
stc
insb
scas
int
pop
int3
inc
cltd
cmp
fs
cmp
jnp
imul
pop
fld
std
push
rcrb
xchg
icebp
movsl
xchg
sub
xchg
movsb
inc
loope
data16
jae
test
shlb
xor
in
imul
add
pushf
imul
inc
xor
lcall
and
inc
cmpsb
ljmp
arpl
mov
mov
in
in
iret
push
cld
mov
repnz
cld
cwtl
push
hlt
add
rol
push
jmp
rcl
enter
add
jb
inc
repz
cmc
dec
xchg
xor
dec
aas
mov
adc
push
in
bound
dec
mov
imul
or
jge
sub
mov
adc
pop
xor
ficoms
mov
js
insb
cli
nop
movsb
xsha256
cmpsb
xlat
push
push
xlat
adc
sub
jecxz
jne
clc
jl
xor
ja
test
mov
mov
push
js
addr16
xchg
mov
cmpsb
mov
mov
push
mov
clc
xchg
lret
dec
cmp
cmp
xor
cs
add
lret
add
daa
mov
test
ret
xchg
or
minps
xchg
dec
ljmp
jg
insb
incb
xor
jo
push
scas
fldt
jb
mov
push
push
mov
movsl
cmp
repnz
xor
pop
inc
ret
ret
iret
out
jne
mov
aaa
xchg
inc
xlat
mov
and
iret
lods
repnz
or
int3
pop
ss
pop
adc
jo
js
movsb
xchg
xor
jo
movsl
popa
popf
outsl
add
and
pop
outsl
aas
adc
mov
xor
pusha
pusha
arpl
stc
in
inc
ds
leave
pop
inc
loop
dec
lcall
cwtl
popf
pop
mov
push
scas
psllw
mov
scas
ret
filds
stos
sbb
out
lcall
mov
stos
sub
mov
push
fs
dec
mov
xchg
mov
ret
sub
and
cmp
sub
or
vpackuswb
mov
inc
mov
pop
outsl
xorb
mov
or
xor
mov
pop
add
mov
sbb
pop
sbb
mov
test
test
or
lods
sahf
rcl
insl
aam
popa
cld
idivl
jns
lods
pushf
outsl
aad
subl
pop
or
addr16
xchg
insl
pushf
sub
inc
jp
mov
in
jge
in
comiss
mov
mov
insl
sbbb
dec
cmpsb
lock
cld
jae
cmp
mov
or
rcl
rclb
adc
lea
adc
popa
jno
lods
stc
add
xor
sbb
je
mov
cmc
ljmp
out
cmp
inc
sub
lahf
lds
pop
or
dec
inc
xor
clc
xchg
and
jle
mov
or
cli
mov
ja
xchg
cmpsl
dec
iret
mov
jno
xchg
icebp
push
clc
arpl
push
into
test
in
xchg
outsl
mov
add
mov
sbb
mov
cmpsb
adc
dec
mov
repnz
inc
mov
sub
sub
sahf
dec
repz
pop
daa
push
add
mov
mov
ds
xchg
jmp
and
pop
ja
dec
cmpsb
xlat
loopne
mov
adc
sarb
mov
lods
adc
sbbl
mov
popf
mov
mov
int
push
pop
movsl
pop
adc
aas
bound
mov
dec
fmuls
ja
hlt
inc
in
adc
addr16
ret
lods
ret
pop
push
out
dec
dec
mov
lds
scas
mov
ja
jbe
sub
repnz
test
aas
add
dec
mov
lds
fs
sti
mov
aas
and
add
bound
scas
inc
mov
je
pushw
loop
stos
inc
xor
leave
pusha
mov
jno
add
out
cmp
jb
loopne
cmpsl
ds
and
movsl
jne
dec
imul
pop
cs
jo
cld
jmp
lock
pop
out
and
mov
stos
out
xchg
xorl
xchg
outsl
push
xchg
nop
jae
add
js
cld
adc
dec
mov
dec
loop
and
repz
in
sub
lcall
and
loop
jmp
push
stos
jb
imul
bound
test
cld
out
scas
inc
mov
jmp
je
fsubl
outsb
add
and
jmp
enter
push
mov
jbe
mov
ds
data16
hlt
jae
call
enter
out
sub
push
sahf
xchg
mov
scas
sti
movsb
xchg
dec
add
adc
push
out
int3
mov
incl
arpl
movsl
addr16
inc
ffreep
fsin
adc
mov
sbb
mov
or
mov
pop
pushf
inc
cli
pop
push
mov
xchg
popa
mov
rorl
mov
das
in
sub
sbb
cmp
push
and
cmp
cmp
int
push
ret
sbb
bswap
pop
daa
sbbl
add
icebp
daa
clc
inc
dec
into
scas
sbb
aas
push
sbb
inc
xor
cltd
inc
ljmp
mov
or
cmc
es
or
push
sub
xchg
pop
pop
add
dec
iret
es
pop
mov
jns
push
imul
push
mov
add
pop
clc
sahf
push
mov
sub
aam
add
pop
pop
out
insb
dec
or
cmp
daa
adc
fimull
movsb
loope
out
ret
roll
mov
push
les
xchg
incl
sbb
hlt
xchg
adc
sti
insl
mov
loope
hlt
pushf
jbe
in
fnstsw
adc
jb
cmp
lret
cli
and
outsb
fisttps
xchg
shrl
sbb
cli
adc
fs
inc
lret
jb
sub
enter
daa
jl
jo
mov
jp
sub
dec
dec
dec
xchg
in
pop
cli
sbbl
jb
jl
jmp
das
xchg
cli
rolb
inc
jae
cmp
push
aad
shrl
dec
xchg
sub
loope
in
aam
shlb
dec
mov
iret
aas
in
ja
loop
scas
call
test
lods
outsb
mov
mov
mov
movsbl
stos
cmp
movl
mov
sarb
adc
repz
xchg
add
in
ds
cmp
daa
mov
pop
pushf
call
movsb
cwtl
jmp
enter
push
cmovp
cli
cmp
pushf
popa
dec
or
jecxz
push
insb
dec
mov
movsb
cld
push
cmp
ds
pop
inc
pop
test
and
clc
cli
addb
loope
jae
cmp
inc
mov
adc
ljmp
or
sbb
pushf
sub
add
test
aad
mov
cmp
and
and
int3
pop
xor
mov
lcall
mov
ret
clc
sbb
dec
mov
xor
add
mov
ret
add
xchg
mov
pop
mov
xlat
dec
repz
in
callw
add
jmp
inc
test
add
js
add
mov
jmp
or
xchg
sbb
jbe
ret
lods
push
call
jmp
pop
xlat
jmp
pop
xchg
pusha
xchg
push
fwait
xchg
push
movsb
sbb
fcmovb
add
fs
mov
fbld
jecxz
dec
inc
repz
test
or
jge
push
addr16
jb
pop
pop
in
dec
negb
rcrb
mov
fmul
push
insb
pusha
fs
mov
pushf
pop
hlt
adc
xor
inc
inc
aad
jnp
fs
mov
in
ja
fcmovb
and
dec
andl
dec
es
out
gs
sbb
push
out
out
push
sub
xchg
adc
mov
push
xchg
inc
lcall
pop
jg
popa
sub
xchg
jle
fsubrs
push
lods
mov
cmp
pop
repnz
jbe
xor
inc
push
pop
mov
adc
or
stos
jae
setle
call
mov
jl
ret
ret
xchg
add
xchg
clc
aas
or
sub
mov
dec
mov
mov
sbb
pusha
lret
jbe
ljmp
add
jb
xchg
cmp
adc
cld
cmpsl
test
pop
cmc
sahf
lods
xchg
gs
mov
cmc
xor
fildl
jl
xchg
mov
push
jno
lret
xchg
lea
mov
adc
inc
cwtl
cmp
addr16
mov
and
inc
dec
mov
fsubr
sub
sbb
cmpsl
mov
dec
popf
ja
inc
pushw
out
and
ret
jb
dec
aas
mov
dec
xor
sbb
xor
cmp
adc
sub
aad
sub
lods
jl
test
shll
loope
cmp
mov
sbb
xchg
push
mov
or
mov
fidivrl
imul
mov
cmp
aam
or
movsl
cmp
std
xchg
cwtl
sub
push
mov
ret
inc
xchg
sub
mov
scas
popa
jmp
sbb
icebp
xchg
xchg
pop
jmp
insl
adc
mov
add
outsb
clc
movsb
call
hlt
adc
je
pop
pusha
mov
fbstp
stc
ss
in
cmp
mov
pop
ds
fwait
push
mov
lods
leave
lahf
stos
bswap
lea
jbe
mov
mov
and
push
xchg
inc
xlat
les
pop
fs
mov
sub
pop
sub
pop
jle
or
outsb
test
pop
sbb
test
ja
bound
pushf
sbb
inc
inc
int
mov
rorl
jge
xor
sub
mov
pusha
movb
int
xchg
inc
pop
jp
aaa
lods
jg
mov
mov
and
add
arpl
pcmpgtb
rcrb
out
ja
jge
sub
pop
jb
push
mov
and
inc
pop
mov
fstps
gs
xchg
cmpsl
repz
pusha
mov
lock
add
mov
fucomp
orb
sbb
je
push
movsl
mov
fcmovne
push
in
js
js
lcall
cltd
push
lods
aas
inc
xor
loopne
push
pop
jmp
cmp
push
jmp
sbb
adc
std
pushf
cli
sti
jns
sub
xor
pop
not
inc
or
jnp
cld
xchg
jns
sbb
xchg
dec
test
push
cmp
jl
dec
cmp
adc
pop
inc
lea
jle
cmpsb
in
outsb
and
mov
pop
sub
lret
xchg
fldt
jecxz
test
cli
cmp
xor
cmp
mov
out
pop
dec
push
pop
cmp
aad
mov
mov
xor
xchg
in
push
xchg
insb
mov
loope
iret
xchg
mov
je
jno
or
test
pop
cmp
sub
add
mov
xchg
popf
inc
mov
repnz
mov
mov
push
lcall
ficomps
push
sbb
pop
leave
sahf
inc
push
ret
ljmp
cmp
inc
sahf
xor
mov
xor
clc
mov
adc
or
sub
mov
or
fucomip
ds
xor
loop
xchg
out
sub
imul
dec
ret
xor
into
cli
adc
scas
es
mov
sub
mov
sbb
mov
mov
inc
mov
ret
outsb
stc
inc
leave
mov
mov
clc
mov
stos
gs
adc
mov
and
inc
iret
outsb
xchg
sbb
jo
icebp
outsb
or
dec
xorb
fs
push
aaa
ljmp
pop
fidivl
jg
insl
loope
pushf
pop
outsw
push
cwtl
aas
cmp
dec
std
pop
adc
ss
push
push
test
hlt
call
outsb
cli
ds
in
pop
rcrb
add
into
mov
movsl
ljmp
pop
pushf
ja
inc
xor
jge
popa
mov
inc
call
daa
inc
out
adc
jb
xchg
mov
or
sub
push
pop
scas
dec
stc
iret
xchg
popa
lods
add
loope
scas
adc
nop
daa
sti
push
pop
lock
ja
inc
push
stos
push
mov
ja
inc
push
and
push
aas
dec
inc
adc
cmp
imul
jbe
das
fmull
and
mov
mov
dec
adc
and
dec
imul
insl
jg
loope
adc
lea
in
adc
std
mov
jo
cmp
iret
sub
loop
cld
fiadds
shl
pop
pop
fidivs
or
lds
or
mov
subb
xor
push
jmp
mov
data16
je
mov
mov
add
iret
pop
in
test
cmp
mov
jb
sub
sbb
ret
nop
shll
inc
or
addr16
and
mov
dec
push
test
fs
pop
adc
aad
mov
inc
mov
data16
dec
lret
loopne
popf
mov
iret
xchg
mov
jmp
dec
ficoml
mov
sbb
decb
cmp
pop
mov
sub
xchg
cmp
push
jcxz
jno
mov
into
mov
jmp
loopne
push
in
jg,pt
and
dec
push
xchg
test
inc
dec
je
fnstcw
dec
faddl
mov
hlt
test
cmpsl
hlt
adc
fildl
inc
test
jg
xor
dec
mov
sub
rcrl
or
test
rcrl
in
mov
xor
fstl
xlat
fisttps
jns
mov
cld
scas
pop
aam
stc
int3
cmc
sub
das
push
cwtl
sub
dec
add
sbb
inc
test
pop
repz
xlat
and
and
test
ljmp
hlt
mov
in
push
mov
mov
dec
into
cmc
les
aam
sub
sbb
std
into
loope
push
cld
ljmp
jb
mov
lock
sti
mov
xchg
insl
xlat
xchg
data16
shrb
neg
inc
or
cmpsb
xchg
push
xlat
inc
iret
sub
aad
inc
sbb
fsubp
cmpl
js
and
push
push
mov
or
inc
jns
push
cwtl
mov
insl
movsl
cmpsb
jae
and
lods
inc
dec
mov
jae
cli
adc
into
fistpl
mov
ret
insl
lret
popa
jae
clc
push
rcll
jge
in
iret
cwtl
jo
xchg
sub
cmp
xchg
cmp
fisubl
std
adcl
or
xchg
mov
test
mov
cltd
xlat
fldl
or
test
or
cs
aad
xchg
mov
ljmp
push
test
jbe
out
fst
push
cmp
adc
out
stc
mov
adc
fbstp
dec
push
xchg
push
dec
jle
sub
rcr
shlb
pop
pop
inc
cmp
rorb
arpl
mov
sub
jmp
cmp
sbb
sarb
and
inc
push
leave
sub
adc
in
jl
addr16
sbb
ds
dec
adc
jl
insb
pop
cmp
cmp
jno
cltd
dec
jnp
cmp
ss
cmp
test
jae
enter
repnz
dec
sbb
aam
popa
addl
pushf
arpl
inc
dec
pop
jnp
and
andl
sub
inc
add
pop
push
lret
aad
sub
lcall
lock
cmp
stos
jno
mov
dec
mov
dec
addb
sub
sub
aad
int
dec
cmp
into
setb
xor
dec
jae
mov
mov
ret
dec
in
shlb
rcrb
xor
sbb
fstpt
adc
scas
mov
xchg
inc
jnp
inc
enter
loope
dec
adc
pop
repnz
test
jns
inc
and
js
psubd
cwtl
test
and
int3
jg
mov
rcr
jns
jae
mov
add
imul
xchg
ja,pn
mov
cli
pushf
sbb
jg
xor
mov
adc
pop
loopne
mov
in
lea
loopne
lret
cmp
jbe
adc
sar
xchg
hlt
filds
fisttpll
inc
xlat
jge
fs
mov
sub
pop
jo
fildl
stc
inc
mov
mov
fnstenv
jecxz
xor
xor
adc
lods
inc
in
xchg
and
lods
lea
mov
mov
xor
in
les
xor
or
and
call
in
pop
repnz
push
inc
xchg
jns
jecxz
mov
cld
pop
sbb
push
sti
xchg
push
dec
lds
jb
cld
sub
sti
push
xchg
cmp
out
into
rcll
shl
push
fisubs
xchg
dec
das
mov
cli
xor
subb
je
fldenv
adc
addb
bound
sub
jb
stc
sti
xor
mov
stos
jnp
pop
lods
int3
call
arpl
sbb
ret
les
dec
into
mov
out
pop
mul
imull
mov
cli
insl
xchg
adc
scas
xor
xchg
inc
popa
lock
stos
adc
repnz
fimuls
sbb
pop
test
sbbl
mov
gs
dec
outsl
in
mov
inc
jl
inc
iret
ret
sbb
mov
dec
and
lock
out
pop
jecxz
rorb
jnp
sub
mov
shll
xchg
add
shrb
lret
adc
fidivs
jae
subl
xchg
insb
mov
rorl
adc
add
sbbl
push
jecxz
hlt
add
cmp
jecxz
or
les
jg
inc
pushf
dec
xchg
pop
jp
fsubl
nop
cs
mov
add
inc
pop
or
pop
jp
pop
lcall
icebp
inc
fisttpl
push
mov
nop
loope
cmpsb
mov
negl
cmpb
aaa
int3
dec
push
outsb
cmpsb
les
loope
popa
push
aas
xchg
pop
jno
sub
push
mov
lret
pop
jge
iret
xchg
loope
xchg
and
in
add
mov
mov
cmp
mov
popf
lods
xor
xor
arpl
andb
mov
pop
outsb
aam
sbbl
mov
negb
cmc
adc
imul
mov
sbb
mov
sbbl
mov
jecxz
and
push
jae
out
into
in
mov
aam
xchg
mov
sbbl
sarb
sbb
dec
adc
xchg
xor
aad
mov
out
aaa
dec
mov
lock
push
inc
cmp
lods
jecxz
lcall
pop
mov
jp
xor
pop
int
xor
jae
nop
mov
scas
cs
mov
jb
vmovhpd
hlt
ret
jp
popf
pop
xor
cs
inc
mov
arpl
lcall
mov
xor
sub
xchg
add
dec
push
test
ss
subl
das
adc
icebp
and
mov
rcll
pop
sahf
mov
pop
out
mov
aaa
sub
and
test
lds
pop
mov
sahf
into
jp
out
cwtl
fimull
cmp
mov
mov
cmpsl
aas
pop
add
popf
stos
cmp
in
inc
cld
jno
xor
jp
shl
pusha
cmp
aam
aaa
push
sub
dec
dec
adc
mov
mov
rcr
adc
mov
pop
adcb
jnp
popa
bound
pop
mov
aam
popa
ret
or
jnp
repnz
mov
in
cli
adc
push
pushf
xor
mov
sub
test
jmp
aaa
aad
push
push
mov
mov
cli
clc
push
das
pop
daa
in
add
les
dec
inc
fidivrs
jno
aad
loope
daa
adc
dec
pop
sbb
lahf
mov
sbb
jne
sahf
clc
adc
xchg
test
cmp
dec
xchg
adc
sub
daa
mov
push
or
lods
pop
mov
cmc
shll
sub
gs
dec
mov
push
mov
or
dec
add
xor
or
fnsave
push
lcall
push
popf
or
xchg
dec
mov
or
repz
cmp
mov
adc
mov
jb
movsb
stc
add
sbb
pop
insl
les
jbe
jae
dec
dec
jmp
andl
cmpsb
adc
lret
mov
in
lea
jno
in
fisubl
inc
adc
in
mov
mov
ljmp
adc
aas
cmpsb
mov
sbb
es
adc
shll
adc
in
and
dec
inc
aaa
jbe
in
fstpt
dec
mov
mov
cmp
mov
outsb
sub
xor
fcomps
test
jbe
lds
push
and
test
inc
or
cmc
jecxz
cmpsb
sub
add
repz
ficoml
mov
lahf
xchg
inc
and
loopne
es
dec
cmovne
aas
icebp
aaa
push
rcrb
xor
pop
or
mov
scas
popf
mov
sub
out
stc
dec
sub
xlat
mov
ljmp
push
xor
xchg
insl
jae
jb
dec
out
pop
mov
into
in
inc
jae
jae
push
in
ds
pushf
scas
loope
pop
mov
xchg
lahf
adc
xchg
xor
stc
es
push
dec
stc
out
xchg
cmp
adc
outsb
mov
inc
or
mov
cmp
insl
test
or
mov
xchg
and
ret
jge
adc
or
fwait
addr16
inc
push
in
lahf
stos
ret
outsb
mov
nop
cmp
adc
sub
jae
clc
inc
lods
inc
or
xchg
shrb
jnp
push
mov
in
mov
data16
cwtl
bound
xor
mov
push
cmp
inc
das
cmp
inc
push
cmp
inc
fstl
mov
mov
dec
add
add
fucomip
int3
cmc
int3
jns
addr16
lock
aas
xchg
ficoms
xor
out
add
mov
push
es
out
fcomp
idivl
pop
push
in
inc
push
je
insb
push
ljmp
lock
add
mov
icebp
mov
aaa
sti
or
cmpsb
nop
iret
ss
popa
outsb
aaa
gs
mov
and
push
lods
xor
xor
sbbb
xor
and
push
and
and
mov
pop
add
arpl
je
fidivrl
push
sbbl
add
xor
push
xor
pop
mov
fcomps
fs
stc
push
inc
cmp
arpl
sbb
insl
stos
inc
pop
repnz
in
and
mov
insb
sub
inc
add
xor
outsl
outsl
lods
test
sti
pusha
or
xor
cmp
es
imul
js
stos
jmp
test
in
push
cmp
pop
insb
vpackuswb
pop
xchg
push
adc
testl
sub
xchg
or
call
mov
in
sub
mov
mov
ret
inc
cmp
imul
js
push
out
add
imul
dec
rcrl
pop
icebp
gs
bound
inc
imul
xchg
call
fsubrs
inc
lods
xchg
ljmp
mov
out
aaa
push
sub
setbe
mov
add
bound
mov
pop
mov
mov
in
testl
and
jp
mov
cmp
lods
leave
lret
icebp
movsl
xlat
enter
push
out
sub
cmp
lea
lods
push
shrb
pop
mov
xlat
or
sub
xlat
mov
cmp
icebp
pop
outsl
daa
xchg
mov
cltd
adc
adc
xor
into
sbb
jle
sbb
mov
jmp
negl
stos
lods
and
adc
jne
sbb
xchg
scas
stos
loope
push
mov
test
push
ljmp
mov
out
dec
mov
cmpsb
xor
inc
gs
xor
xor
mov
xchg
popf
sub
push
call
bound
test
or
cmpl
add
and
add
pop
out
push
ds
or
nop
scas
addb
push
dec
cmpsb
cmp
enter
sub
xchg
lds
push
outsl
sub
jno
dec
leave
mov
inc
and
fnsave
mov
jbe
xchg
subl
push
hlt
cmp
dec
xchg
int3
push
jae
mov
mov
ja
test
ja
add
pop
cmp
dec
sbb
test
pop
jno
popf
js
mov
jecxz
jmp
mov
les
fdivl
clc
stc
xor
loop
jnp
in
pop
jne
dec
shlb
gs
shl
scas
mov
out
sub
xchg
xor
ja
mov
jp
cmp
out
fwait
push
mov
cmp
je
mov
cmp
mov
icebp
cmp
inc
dec
xchg
cmpsb
cmp
sub
mov
xchg
and
fstpt
sar
test
stc
add
inc
and
dec
pop
inc
add
out
mov
sar
push
rcl
lret
lcall
popf
je
xchg
cmc
cmpsb
aam
in
movsl
movsl
sub
push
fwait
gs
cmp
mul
lret
aam
mov
sbb
cmp
xchg
stos
pop
les
int
sahf
ljmp
pop
mov
arpl
out
shll
pusha
stc
nop
pop
cmpsl
cmp
mov
cmp
lret
jbe
mov
jmp
mov
bound
xchg
mov
xchg
fcompl
bound
inc
adc
cmp
and
and
dec
ss
test
mov
xlat
xchg
push
ljmp
aam
dec
pop
push
xchg
sub
jnp
and
push
add
lods
dec
lret
addr16
mov
xchg
ror
addr16
leave
jne
cmp
std
ss
sahf
movsb
xchg
push
mov
jge
inc
cmpsl
adc
adc
js
sub
inc
dec
jecxz
mov
pop
pop
je
inc
xchg
jg
push
and
inc
cli
pop
adc
loope
gs
outsb
sub
pop
mov
mov
bound
inc
int
jle
add
fnstsw
mov
mov
inc
pop
out
mov
add
test
shr
pop
fnstcw
mov
jne
jle
pop
push
mov
dec
fnstenv
pop
mov
adc
cmp
add
popf
push
jecxz
pusha
cmp
xchg
sub
ficomps
negl
dec
pop
aaa
adc
cmp
mov
jnp
mov
vandnps
test
cmp
mov
cld
loope
mov
stc
aas
mov
ds
xor
push
fisttps
andb
loopne
test
mov
sub
sbb
push
sbb
fs
clc
ljmp
test
xor
jl
insb
add
call
repz
add
mov
add
sbb
xor
adcb
scas
rcl
and
jne
std
shrl
cmp
sbb
dec
push
jg
xchg
arpl
mov
loope
ja
stc
xor
daa
cmp
cwtl
cltd
mov
jmp
push
jmp
push
insl
mov
into
enter
sub
roll
in
pop
fistpll
mov
pop
jbe
lods
cmpsl
nop
cld
or
dec
xor
shll
push
andb
jge
shlb
popa
adc
inc
jl
xchg
add
adcl
xor
test
jmp
mov
nop
sub
sbb
pusha
into
dec
push
int3
enter
sbb
mov
cmp
cmp
out
mov
leave
loope
adc
pusha
xchg
and
mov
mov
out
and
pop
idivl
mov
mov
and
adc
in
add
ja
rcrl
jbe
movsb
addr16
cmc
out
inc
stos
icebp
or
js
jno
sub
lret
shrb
ret
fisubrs
jp
sbb
repz
cmp
in
dec
sbb
fdivs
scas
or
pop
lds
jns
arpl
dec
les
mov
push
dec
and
pop
jecxz
sbb
sub
fcmovnb
pop
in
jns
pusha
mov
in
sbb
add
mov
pop
mov
ret
pop
dec
xor
nop
out
xchg
imul
lods
inc
mov
lock
stos
mov
pop
add
mov
inc
mov
jle
gs
ret
ror
push
push
sbb
test
add
mov
test
xor
push
push
fldt
fildl
js
repnz
cmpsl
push
cwtl
push
cmp
daa
jmp
test
mov
pop
in
mov
push
pop
cmp
outsb
dec
dec
or
in
notl
mov
cmpsb
iret
stos
into
and
pop
loope
ffree
pop
dec
movsb
pop
pop
jmp
ret
sbb
cli
std
jmp
mov
aam
repz
dec
add
jnp
data16
int3
js
pushf
sahf
push
xor
out
adc
sbb
sub
and
jbe
cmp
mov
pop
dec
popf
fwait
inc
test
mov
sub
ret
mov
insb
imul
pop
and
das
mov
adc
sbb
cwtl
shrb
xchg
sub
push
std
pop
icebp
mov
mov
loopne
xchg
inc
mov
push
fstl
int3
arpl
loopne
lahf
fisubrl
lcall
pop
call
sbb
jle
fbstp
lock
pop
repnz
call
mov
hlt
cmpsb
in
cmp
or
jns
stos
icebp
scas
cmpsl
xchg
mov
xchg
pop
mov
sub
fiadds
jno
mov
addr16
sbbl
inc
push
jns
cmp
bound
add
xchg
push
cwtl
push
fdivl
lods
fstps
sub
xor
dec
xchg
push
jae
iret
push
sti
add
xchg
mov
mov
push
mov
clc
adc
testl
insb
cwtl
cmpsl
mov
cmp
mov
mov
ja
cmp
cmpsl
dec
pop
cwtl
data16
ret
out
test
and
xchg
and
adc
sahf
mov
mov
mov
andb
ljmp
jns
pop
dec
add
pop
jo
movsl
sub
jne
push
inc
aam
jbe
and
fdivl
repnz
loopne
cli
ja
cli
lock
adc
jle
pop
pop
push
adcl
xor
test
jne
fisttpl
bound
bound
repnz
cwtl
bound
pop
in
inc
in
mov
sbb
lods
imul
push
sbb
roll
lea
jl
and
mov
filds
mov
ja
fwait
adc
into
lahf
push
or
mov
push
push
test
ret
das
cmc
mov
mov
stos
in
pop
mov
sub
cli
fadds
xor
push
imul
xchg
popa
clc
cs
or
in
movsl
push
fcoml
sub
fistpll
or
adc
or
outsb
push
bound
inc
xor
imul
jae
and
adc
jno
std
mov
xorb
jno
pop
xchg
add
scas
les
mov
ret
fwait
js
cwtl
js
and
sar
xor
ja
rol
imul
jbe
xor
add
pop
jmp
stc
dec
jmp
pop
dec
xchg
nop
sahf
xchg
and
pop
mov
jbe
jmp
scas
cmp
lcall
scas
out
aaa
inc
pop
imul
and
test
mov
pmaddwd
adc
addr16
mov
cli
outsl
cmp
xchg
jmp
add
mov
mov
cmp
popa
aad
mov
out
xor
out
jno
nop
shlb
or
xchg
ja
rcrl
xor
aas
js
xor
xchg
cmpsl
ret
jns
push
mov
leave
in
or
shld
push
aas
movsl
adc
cli
cmp
ss
insl
lods
xor
xor
mov
arpl
cmc
pop
outsl
rorb
fwait
loop
or
sub
inc
jp
popf
and
dec
loop
rclb
idivb
dec
lods
xlat
push
mov
in
std
ds
mov
js
jno
mov
mov
or
inc
cmpsl
adc
sbb
lods
data16
mov
xor
cs
dec
imul
pop
movsl
icebp
cmp
loop
mov
hlt
bound
test
pop
nop
daa
nop
orb
jae
test
cli
inc
lahf
sbbl
orw
mov
lret
mov
push
dec
and
mov
cs
xchg
int
aaa
add
adcb
ret
push
mov
xor
daa
jo
push
lods
mov
ret
jp
rcrl
mov
stc
outsb
sbbb
leave
sti
popf
mov
ja
and
movsl
inc
mov
in
popf
stos
int3
fs
addr16
and
xor
cltd
aaa
add
out
fldenv
cmp
dec
mov
jecxz
push
adc
mov
ret
jnp
add
push
jecxz
push
adc
je
add
inc
jno
out
dec
jecxz
sbbl
adc
sbb
dec
cld
ds
movsl
or
pop
push
jbe
lea
pop
pop
aad
inc
and
pop
cmpsb
mov
mov
cmp
stos
mov
lret
mov
sbb
lcall
sbb
lret
int
fwait
mov
mov
mov
sbb
adc
sbb
ret
loop
lret
divl
xor
leave
sbbl
pusha
fsubrp
pop
shlb
add
jo
imul
or
xchg
cmp
mov
xchg
jns
stos
mov
adc
imul
push
fldenv
cmp
mov
outsl
push
pop
dec
jecxz
sar
sub
das
jecxz
popa
cmp
popa
js
enter
imul
mov
jl,pt
outsb
stc
cmp
push
repz
xor
adc
popa
negl
repz
jle
scas
sahf
decb
inc
test
or
insl
fisubrs
cli
imul
sahf
mov
or
inc
xchg
and
test
repz
scas
and
ficoms
xchg
xor
cli
and
sub
lds
test
sahf
and
aam
mov
pop
icebp
sub
test
jg
stc
and
mov
fcompl
mov
mov
lcall
lds
fstpt
outsb
jbe
popa
or
sub
push
xchg
scas
jo
into
sbbl
sub
inc
xor
jae
or
dec
jb
mov
in
notl
mov
mov
adc
mov
push
lret
xchg
imul
mov
in
push
fmulp
mov
xchg
and
lret
filds
test
int3
jmp
movb
xchg
mov
pop
shr
xchg
lods
inc
inc
push
lret
and
mov
hlt
jg
iret
outsb
sbb
jne
push
pop
movsb
xlat
xor
dec
call
cmp
aad
fists
test
pop
push
adc
pop
sahf
sbb
popf
lods
jnp
pop
add
sbb
fnstcw
fldenv
push
inc
data16
jno
push
pop
lods
add
jp
mov
jne
pop
jbe
mov
inc
imul
cmp
dec
data16
pop
stos
xor
or
push
or
out
outsb
in
mov
sub
test
rcrl
orl
add
repnz
push
fwait
leave
int
fwait
push
call
loop
outsl
dec
inc
add
pop
aam
mov
mov
out
mov
call
shll
add
mov
add
das
addl
orb
pop
sub
mov
push
mov
negb
xor
push
fucomp
push
inc
push
xchg
mov
cmpsl
sub
sub
add
sub
xchg
jg
aad
shll
negb
xor
rcll
push
andl
nop
inc
add
xchg
movsb
gs
pop
push
sub
mov
lock
fsubl
std
xor
out
ja
sbb
mov
jo
pop
xor
mov
jmp
jge
xlat
popf
xor
and
fistpll
andl
xchg
dec
cmp
cmp
bound
int3
adc
cmp
js
pop
and
cwtl
ds
jb
or
mov
bound
mov
jmp
dec
pop
dec
xchg
cmpsl
pop
push
pop
pushf
adc
test
jno
sbb
mov
imul
push
jnp
dec
xor
popf
loop
xor
adc
out
std
xchg
scas
aas
xchg
xor
sub
out
mov
and
sub
outsl
cmp
sub
sub
pop
dec
cmp
iret
dec
sahf
shlb
pop
das
pop
xor
subl
fs
mov
imul
int
inc
pusha
clc
out
jo
aaa
leave
mov
addr16
jg
add
cmp
push
pop
loopne
mov
outsl
cmpsb
push
jmp
nop
icebp
mov
lea
addr16
cmp
lds
out
add
out
fs
fdivrs
arpl
xlat
adc
push
and
sub
movsl
icebp
clc
dec
lret
dec
loopne
leave
push
mov
and
cmpsb
sbb
daa
cmp
xchg
inc
mov
ss
fistl
jmp
mov
inc
and
sub
scas
hlt
add
mov
lea
and
jae
jle
std
cs
xor
ret
pop
cmp
mov
cltd
mov
dec
adc
jne
and
stos
cmp
pop
cli
jo
test
push
ret
popa
mov
test
subl
cmpsb
in
sbb
je
shll
mov
jae
mov
mov
cmp
cmp
mov
cmp
dec
push
adc
inc
push
add
sbb
add
xor
fists
push
ficoml
test
jb
fnstenv
lods
push
adcb
or
popa
icebp
adc
aaa
leave
daa
jecxz
mov
dec
push
pop
cmc
aad
jl
pop
push
pop
fwait
testb
sahf
rep
inc
xchg
inc
fwait
hlt
je
leave
jo
xlat
push
outsb
nop
dec
loop
xorb
push
or
clc
pop
in
jmp
or
mov
shl
test
mov
lahf
or
adc
dec
stos
mov
mov
cli
xchg
cmc
aam
sti
jo
xchg
mov
fbld
imul
aam
mov
pop
fwait
pop
stos
insl
mov
dec
fisubl
cmp
jg
jecxz
mov
cmpsb
cmp
out
fnstcw
sbbb
cltd
shl
inc
mov
call
fnstcw
push
pusha
repnz
xchg
negb
push
or
mov
or
repz
mov
sti
push
int
mov
dec
or
rcll
into
mov
test
sub
inc
inc
push
lock
sbb
pushf
xor
les
arpl
movsb
jb
push
andb
push
aaa
dec
xchg
lcall
paddw
jle
das
pop
test
imul
loop
loope
cmpsb
lock
cmp
mov
add
addl
cmpxchg
iret
nop
rcll
add
xchg
sbb
pop
sub
mov
lock
mov
pusha
loop
xchg
or
aaa
lret
inc
imul
mov
push
aad
push
in
shl
push
inc
cmp
jbe
mov
or
cmpsl
and
call
adc
inc
lods
icebp
insb
and
pop
rolb
pop
lods
xchg
stos
je
xchg
stos
repz
fmull
mov
dec
mov
ret
inc
fisttpll
stos
fs
js
add
je
mov
inc
rcl
pop
add
out
push
iret
outsb
cmp
lahf
add
loope
mov
sti
int3
stos
sub
in
xor
std
mov
ss
fildl
sbb
inc
cmc
adc
out
inc
push
lret
addr16
push
hlt
xchg
or
shll
in
cs
repnz
outsb
add
mov
fildll
addr16
imul
pusha
pusha
rclb
adc
cld
popf
fdivp
into
sbb
cmpsl
add
mov
pop
ds
popa
adc
xchg
cmp
pop
sbb
push
sbb
dec
sti
scas
mov
aas
inc
jns
dec
stos
add
xor
mov
outsb
add
fwait
or
or
push
xchg
stc
mov
push
jne
lret
pop
sbbl
lds
jecxz
inc
out
add
iret
mov
jae
sahf
jg
mov
mov
lock
scas
inc
test
xlat
mov
std
inc
lret
xor
or
xor
xchg
std
dec
adcl
pop
jne
mov
pusha
jae
ds
jne
jnp
shll
rcrb
xor
add
inc
fsts
mov
aad
test
repz
push
lds
sbb
add
jmp
xor
mov
outsb
loopne
mov
aad
and
aas
in
or
sub
sbb
pushf
jge
std
out
cmp
iret
dec
mov
in
cmpsl
aad
xor
rcrb
inc
sub
data16
or
pop
sub
popf
cmp
mov
mov
stc
jns
shlb
jne
xorb
add
mov
in
xchg
repnz
mov
add
fbstp
cmp
idivb
cmpsl
ja
lret
fisttpl
jo
or
xchg
subb
xchg
lods
or
push
sub
xchg
add
xor
xor
lock
adc
addl
dec
enter
pop
arpl
repnz
inc
mov
push
adc
pop
inc
jnp
pop
sbb
pop
outsb
stos
cmp
in
test
cmp
mov
fnsave
aas
or
fwait
int3
arpl
xchg
jb
xchg
adc
jo
movsb
out
mov
push
pusha
movsl
fsubr
and
fisubl
std
sbb
and
sbbl
out
and
or
aam
xchg
ss
mov
inc
dec
into
movsb
inc
bound
psubsb
xchg
mov
movsb
call
cmp
inc
cmpsb
movsl
subb
stos
mov
fabs
cmc
mov
jae
dec
movsl
addl
cmp
sbb
adc
out
jmp
inc
fcomps
add
dec
pusha
lods
jg
in
and
mov
data16
or
mov
shl
jno
inc
fcoms
stos
xor
push
fs
addr16
cltd
into
dec
cwtl
inc
test
mov
push
enter
divl
in
pop
cmpsb
push
or
mov
jmp
adc
ds
and
mov
ret
fisubs
roll
gs
cmpsb
sbb
test
imul
mov
jecxz
mov
dec
cmpsb
test
adc
adc
inc
cmp
dec
fwait
nop
fnstenv
dec
pop
mov
cld
push
and
jns
adc
jne
xlat
cmpsb
out
repz
lock
pushf
sbb
fcmovb
lods
dec
adc
mov
mov
lods
es
sar
je
xor
rcrb
je
lea
sbb
mov
add
cmp
cmp
mov
ret
hlt
pusha
es
adcb
mov
cmp
mov
pop
xchg
sub
mov
inc
jecxz
shrb
inc
lahf
arpl
mov
pop
fldenv
mov
mov
rcr
adc
or
inc
rorl
cmpsb
add
popf
sbb
test
xor
fs
and
xchg
or
sub
in
andl
push
adc
sub
sub
pop
std
imul
mov
xchg
inc
in
xchg
sbb
pop
clc
mov
pop
xchg
dec
inc
push
cld
mov
xchg
inc
mov
std
pop
sbb
outsb
mov
inc
xor
inc
push
dec
jns
mov
mov
aas
xchg
cmp
or
das
push
lcall
push
imul
mov
jne
jl
mov
fs
mov
sbb
imul
ret
lcall
sbb
mov
clc
rclb
iret
xchg
js
xor
xor
call
or
scas
jae
movsl
lds
adc
loop
or
dec
pop
int
jb
jns
fdivl
push
add
sbb
daa
cmp
ja
int
sub
movsl
sti
sub
cmpl
movsl
dec
lea
or
inc
cli
dec
out
cvttps2pi
je
inc
mov
mov
jl
adc
or
or
mov
out
out
in
std
psrld
xchg
adc
jmp
xor
and
mov
pop
jne
into
mov
add
clc
adc
mov
in
sub
rcrl
mov
stos
sbbb
push
fidivrs
xchg
into
sbb
sti
mov
ret
cmp
js
jnp
ret
mov
jecxz
imul
inc
and
repz
sbb
out
lahf
push
jecxz
push
loopne
and
jbe
jbe
ret
cmp
fstl
mov
lea
cmp
cmp
rorl
into
jo
sarb
sub
cmp
leave
das
xor
inc
sahf
push
js
cmp
or
bound
pushf
das
repz
aas
push
pop
xor
cmp
mov
out
or
adc
push
xchg
xchg
or
lret
push
out
faddl
gs
insb
mov
xchg
test
repz
mov
out
mov
add
and
jne
mov
sbbl
mov
sarl
dec
fbld
insl
inc
roll
jg
je
sub
add
mov
adc
dec
icebp
int
aas
aam
clc
mov
jnp
int
das
lds
inc
cmpsb
mov
dec
pop
xchg
imul
test
sbb
and
xchg
cli
cmp
lea
mov
pop
imul
sub
sub
call
pop
xor
dec
addr16
xlat
adc
inc
or
jge
dec
and
inc
faddl
and
mov
or
inc
push
fidivl
mov
jp
fmul
mov
jecxz
dec
hlt
adc
push
push
jmp
jmp
mov
nop
inc
out
mov
outsl
push
inc
or
mov
xchg
pop
sbbl
inc
push
fmul
lds
dec
and
mov
sbb
fxch
imul
lret
imul
and
in
jnp
adc
cwtl
clc
stos
dec
push
out
leave
lock
hlt
push
popf
ret
pop
add
cmp
and
mov
fildl
bound
notl
cvtpi2ps
test
in
pop
sbb
jge
sahf
lret
sarb
cmp
xor
sti
test
jge
test
push
sub
xchg
sub
sbbb
jnp
push
cmpsl
das
repnz
fldcw
int
dec
stc
lea
iret
cwtl
xchg
loopne
or
or
jge
lret
add
inc
lods
mov
sub
xlat
aad
hlt
mov
movsl
push
subl
cld
jmp
fdivrl
loopne
pop
popf
jnp
aad
cmpsl
push
enter
add
lahf
lret
lds
cmp
cli
lds
test
mov
lahf
lahf
mov
test
adc
imul
movb
clc
aas
cmpsb
jno
dec
mov
pop
jns
push
mov
mov
xor
lea
mov
mov
mov
mov
aaa
scas
inc
sbb
inc
scas
arpl
and
pop
pop
scas
cmp
cli
push
pop
cltd
xchg
dec
data16
les
repnz
rclb
jle
sti
sbb
je
fildl
xchg
mov
sbb
lods
pop
mov
adcb
arpl
stos
orb
aaa
arpl
cmpsl
jns
xor
addr16
fucomi
xor
ljmp
imul
cltd
movsl
stc
sti
jle
dec
pop
mov
in
sahf
jl
out
outsl
inc
scas
jo
sub
xchg
int
pushf
aad
jge
or
outsl
jl
mov
dec
dec
push
xor
jp
or
add
nop
mov
push
stos
in
mov
ljmp
loopne
gs
xchg
and
xor
add
mov
fists
shrb
pop
in
test
stc
mov
mov
iret
int
add
sbb
lods
lret
aam
or
bnd
cmc
xchg
sbb
ds
push
ljmp
xchg
orps
cltd
xchg
and
xchg
lcall
or
ret
adc
bound
test
jl
decb
dec
out
cli
cmp
andb
repz
shll
mov
rcrl
hlt
lret
fistpll
mov
insl
cmp
mov
mov
lahf
jae
nop
fwait
shlb
lret
and
inc
leave
mov
shlb
lods
add
mulb
out
stos
mov
mov
jnp
mov
add
aaa
xchg
add
pop
scas
mov
mov
je
add
lahf
and
or
in
push
stc
test
mov
push
leave
fimull
into
pop
lret
adc
inc
adc
adc
popa
imul
loope
mov
cmp
push
test
into
popf
scas
mov
sub
pop
dec
sub
scas
call
in
mov
pushf
sbb
arpl
push
sbb
inc
leave
iret
outsb
sub
xor
dec
mov
in
mov
int3
push
adc
push
push
or
or
xor
sub
sti
rorl
inc
arpl
sbbb
inc
cltd
test
inc
dec
das
movb
dec
mov
mov
lods
imul
push
mov
icebp
or
xorb
push
mov
inc
lock
xchg
gs
test
jnp
int
in
xchg
jno
and
lret
cmp
ja
xchg
test
into
jg
sbb
jp
xor
mov
cwtl
jbe
fucomip
aam
xlat
pop
loopne
or
inc
dec
mov
cmove
pop
push
sarl
aad
mov
mov
rcrb
in
fxch
out
push
rcr
mov
loope
cmc
hlt
imul
xchg
leave
cmp
cmc
leave
int
sbb
push
inc
cmc
pop
adc
jmp
ljmp
xor
loope
push
out
fs
jno
inc
pop
repz
jle
sarl
push
imul
add
aaa
mov
or
aam
out
orb
or
mov
sbb
jg
cmp
ret
pop
adc
loope
lds
imul
sbb
pop
or
jae
push
fnstenv
ja
mov
repz
imul
xor
pushf
and
ds
mov
mov
sahf
adc
push
and
mov
lcall
int
mov
ret
jecxz
in
clc
test
mov
push
mov
jbe
sub
stos
addr16
sbb
mov
scas
jl
in
xor
enter
scas
inc
clc
mov
cli
xchg
int
fwait
lret
xor
mov
cltd
iret
orb
arpl
clc
roll
xlat
stos
lcall
cs
call
jbe
sbb
lahf
nop
pop
loopne
mov
sub
xchg
pop
pop
aam
mov
xchg
shlb
nop
movsb
nop
dec
jmp
pop
scas
scas
jl
loopne
adc
jl
stos
xchg
pop
xchg
cld
jg
into
lahf
add
int
sahf
testb
call
jb
and
sti
cmp
shlb
add
bound
add
push
xor
bound
into
xor
rolb
sub
mov
dec
pop
jae
and
mov
sub
inc
loope
bound
push
inc
call
hlt
add
push
das
sub
push
or
sub
test
mov
scas
inc
sbbb
in
iret
mov
pop
push
cmp
push
popa
pop
fsubl
fadds
ret
sub
pop
xor
mov
outsl
add
dec
add
push
or
pop
es
scas
inc
jne
sbb
les
dec
aad
mov
shlb
fidivs
insl
adc
push
sub
fdiv
lods
add
mov
sub
sbb
add
rcrb
xor
pop
or
mov
jo
pop
sub
hlt
or
aam
hlt
or
clc
dec
testb
add
dec
dec
nop
push
mov
jp
stc
inc
arpl
sbb
push
fwait
faddl
test
jg
pop
icebp
jnp
cmp
cmpsl
lods
and
pop
scas
mov
leave
out
mov
pop
and
mov
pop
sbb
iret
ret
cmp
xor
out
adc
scas
mov
iret
add
mov
xchg
jecxz
push
push
xor
in
rcr
jge
pop
scas
jle
lods
push
mov
addr16
cmp
scas
dec
mov
loop
adc
arpl
insb
xor
fmulp
xor
test
mov
loopne
mov
dec
xchg
in
cs
pop
and
icebp
and
scas
sbb
imul
arpl
fnstcw
or
je
jnp
popf
add
cli
or
aam
insl
fwait
inc
notl
or
pop
icebp
mov
cmp
push
cmp
cs
loop
in
dec
in
mov
fidivrs
movl
cmp
jmp
lret
rcr
jecxz,pt
adc
ja
into
jne
inc
arpl
test
dec
mov
mov
aam
and
aas
mov
sbb
leave
dec
fstl
dec
nop
outsb
push
out
mov
xchg
dec
inc
outsb
daa
jb
sbb
inc
push
xor
repnz
jge
adc
sbb
das
pop
repnz
adc
add
or
adc
insl
add
mov
jne
xchg
testl
shlb
scas
aaa
xor
pop
jmp
loopne
insb
scas
mov
out
inc
pop
cmp
int3
xor
in
push
ret
push
add
cmp
fdivrs
mov
test
inc
es
mov
in
and
sbb
ljmp
adc
inc
stc
sub
mov
dec
xchg
push
in
dec
jecxz
notb
mov
push
lret
roll
dec
pushf
insb
inc
arpl
mov
xchg
data16
push
jns
xor
int
dec
std
into
jnp
push
push
jge,pn
jbe
shll
and
xor
and
push
bound
sbb
ret
test
cmp
push
adc
pop
fucomp
loope
mov
sbb
cmp
fisubrs
sub
cmp
cld
clc
lret
stos
cwtl
adc
je
movsb
add
inc
ret
sub
cmp
lock
test
aad
test
lds
stos
adc
inc
pop
cmp
lcall
cmp
xchg
jmp
push
dec
jb
cwtl
ficompl
bound
nop
mov
jmp
and
xor
push
cmp
mov
sahf
pop
push
sarl
mov
sub
cmpsb
ds
xor
icebp
fs
in
push
daa
mov
cmc
mov
scas
enter
mov
sub
mov
popa
or
mov
push
mov
addb
mov
mov
shrb
jecxz
and
fmull
and
inc
or
pop
fimuls
das
mov
pop
addr16
sahf
adc
mov
push
enter
lea
inc
add
repnz
in
xchg
mov
mov
test
jg
arpl
ds
cmp
jbe
xchg
leave
pop
fisubl
mov
testb
pushf
dec
cmp
call
cmp
push
jo
cltd
sub
sub
repz
jae
jns
addr16
mov
leave
mov
and
inc
outsl
loop
aaa
inc
fwait
out
je
fmull
inc
add
jns
fsubl
and
lods
and
xor
xchg
xor
push
imul
or
scas
xor
adc
test
sti
rcr
jbe
sub
mov
cmpl
cmp
pop
loop
cmp
scas
push
inc
gs
jmp
xchg
lds
or
in
test
xor
enter
inc
cmp
loop
shll
dec
mov
pop
insl
pop
jecxz
gs
mov
add
dec
or
decl
popf
addb
add
pop
movsl
and
mov
out
aam
mov
push
sub
inc
loope
in
movsl
mov
mov
inc
cwtl
rorb
mov
adc
and
test
hlt
push
insl
aaa
push
cmpsl
xchg
fmul
cmc
outsb
add
add
das
pusha
cld
imul
je
in
xchg
aas
nop
dec
dec
notb
daa
outsl
shr
push
mov
sub
mov
and
add
imulb
aad
je
loope
js
and
jmp
pop
xor
aas
out
inc
mov
pusha
filds
call
jmp
mov
mov
scas
xor
mov
iret
mov
lea
fistl
sub
push
push
xor
repnz
inc
jno
mov
rcl
pop
bound
or
imul
pop
mov
loope
jmp
dec
mov
fimuls
inc
enter
xor
sub
pushf
xchg
jmp
dec
xor
push
fucomip
addb
mov
push
cmc
mov
jne
and
sub
fsubs
cmp
lods
out
stos
xchg
movsl
in
stos
dec
adc
mov
scas
push
aaa
push
loope
pop
ret
fildl
push
rol
mov
add
call
lahf
out
ss
inc
cmc
enter
mov
inc
shll
movsbl
fidivl
mov
sbb
xchg
test
enter
lds
aas
dec
sbb
fnstcw
fdivs
repz
stos
bndstx
and
adc
xor
fwait
mov
add
decl
ja
pop
mov
cmp
scas
cmp
mov
sbb
jg
mov
cld
and
pop
ret
je
pop
and
adc
ret
inc
push
xchg
stos
mov
pusha
popa
inc
ss
sbb
push
or
fsubl
in
sbbl
dec
cmpsl
xor
or
dec
pop
outsb
adc
sbb
jno
fildll
test
mov
in
idiv
cwtl
cmp
out
daa
mov
imulb
in
xchg
pop
ljmp
nop
sbb
mov
loop
push
jp
or
imul
sub
arpl
dec
bound
inc
in
dec
in
cli
sub
adc
push
mov
imul
xchg
call
loopne
and
cmc
add
jbe
mov
loop
mov
repz
mov
dec
adc
jmp
es
push
inc
fsubr
cltd
popa
fistpl
int3
mov
rcl
xchg
adcl
xor
push
jo
push
aam
in
and
jnp
cmp
mov
js
or
movsb
lcall
shrl
dec
dec
sti
inc
pushf
mov
xchg
cmp
jne
out
dec
xchg
hlt
mov
pop
mov
enter
shrb
aam
pop
xchg
lock
sub
fcomps
add
ds
mov
dec
scas
test
std
dec
loop
sbb
imul
cmp
dec
ficompl
sbb
inc
adc
xchg
popa
sbb
xchg
es
popa
negl
fiaddl
push
mov
jns
xor
adc
push
add
jo
iret
sub
in
lcall
mov
cmp
xchg
call
push
pop
and
xor
adcl
inc
jb
scas
inc
and
push
inc
out
xor
or
jne
repz
jmp
int
xchg
incl
jecxz
mov
push
shr
js
xlat
repz
jmp
push
sbb
ret
int3
in
int3
stos
aad
mov
pop
pop
mov
push
test
add
add
clc
push
mov
cmpsl
int
cmpsl
sbb
mov
inc
sbb
sti
fwait
in
fists
jg
ja
fnstsw
movsb
jg
xlat
repz
jl
xchg
mov
ds
adc
push
add
cmp
int3
orl
or
sbb
and
jb
ja
out
out
mov
aas
or
inc
leave
sahf
call
mov
push
lods
adc
insl
subb
rcr
in
mov
sbb
xchg
sub
jbe
test
rcrb
mov
or
inc
out
in
cmp
popa
inc
je
xchg
jmp
xor
xorl
sub
pop
mov
pusha
inc
inc
in
shll
adc
mov
fbstp
shl
test
test
xorb
inc
pop
xchg
js
cli
in
mov
hlt
sbb
push
jnp
pop
rcrb
enter
loope
dec
push
add
mov
or
xlat
mov
add
in
das
cmp
sub
add
jne
cmp
jb
inc
cmpb
rcrl
int3
fldt
les
in
sbb
notl
insb
cs
mov
adc
stos
push
push
jp
mov
jp
stc
int
add
pushf
dec
clc
mov
in
jb
xchg
dec
bndstx
adc
and
out
pop
pop
xchg
es
sub
pop
lods
or
push
scas
or
lods
mov
jecxz
push
add
xor
add
loope
sbb
jmp
lcall
bound
adc
pop
ret
pop
or
cs
in
add
cs
cld
cmp
jp
stc
stos
cmp
pushf
mov
xchg
xorb
or
subl
outsl
mov
mov
sbb
sub
pop
fcomps
into
sahf
dec
out
outsl
jb
repnz
insl
dec
pushf
cs
bound
xchg
inc
out
xor
mov
push
out
bound
or
fldl
xchg
fildll
cmc
push
loop
jno
mov
xchg
inc
loop
fsubl
or
cmpsl
es
adc
sub
sbb
inc
jns
add
sbb
cmp
pop
lar
add
adc
mov
call
test
stc
nop
rclb
call
aaa
mov
inc
in
mov
jb
call
stos
mov
pop
pop
into
lods
fwait
rcl
aaa
popa
mov
lcall
lods
sub
test
frstor
notl
inc
mov
push
js
shlb
inc
movsb
cmp
cmp
mov
andw
pop
mov
inc
mov
xchg
mov
adcb
xchg
stos
push
adc
inc
push
rolb
je
sbb
jge
call
xchg
lahf
jnp
pop
movsb
or
jno
repz
mov
bound
xor
pusha
aaa
leave
xchg
dec
xlat
pop
xchg
mov
xor
xor
bound
mov
pop
rcrl
inc
sti
call
bound
sarb
cmpsb
mov
das
mov
pop
movlps
pop
fidivs
sub
jle
ja
out
aaa
stos
lret
in
cmp
ret
and
insl
addr16
pop
outsb
sub
mov
or
dec
inc
leave
scas
inc
adc
xchg
or
mov
dec
andl
sbb
ret
inc
es
mov
lcall
dec
and
add
inc
faddl
push
int3
jae
xor
mov
out
cltd
push
inc
add
dec
and
enter
mov
and
mov
scas
and
dec
adc
fdivrs
bswap
lret
sbb
pop
fsubrl
testb
inc
testl
fldenv
shll
aaa
jbe
push
daa
outsl
sbb
jne
das
sti
mov
mov
mov
jge
lock
js
mov
or
pop
sbb
jle
jg
pop
nop
xchg
imul
incl
mov
sub
mov
fmull
push
mov
push
test
mov
push
jl
or
mov
out
in
sub
mov
mov
push
dec
jno
pop
mov
dec
pop
push
adc
jne
sti
sbb
loopne
jmp
mov
int3
jg
or
imulb
popa
jmp
out
mov
es
out
test
bound
movsb
push
add
mov
bswap
in
daa
and
cld
ret
hlt
sbb
scas
call
inc
daa
and
add
imul
fldenv
inc
jns
jo
pop
jle
and
jmp
shlb
pop
and
aas
pushf
stos
subl
push
mov
loop
or
clc
rclb
cmc
jae
push
movsb
xchg
cmpb
test
loop
andl
sbb
jp
add
fidivrs
mov
jge
adc
repz
add
jb
inc
sbb
insb
cmp
adc
dec
mov
pop
xchg
jne
mov
mov
mov
mov
outsl
lret
int3
jae
cmp
adc
repnz
aam
aaa
int
movsl
inc
pusha
xchg
mov
or
shll
gs
movaps
sbb
movsl
jne
lret
xchg
and
loop
mov
sub
andb
sbb
cli
jne
les
out
cmpsl
sub
push
sbb
ror
aas
fcomps
and
fsubs
mov
xor
cli
sub
imul
jno
sti
push
or
es
sbb
mov
sbb
mov
inc
in
cmp
mov
xchg
int3
pop
ret
movb
aad
int3
push
xor
mov
add
repz
push
in
xor
add
sti
inc
add
ret
inc
jl
xchg
adc
cmpsb
sub
cltd
mov
out
call
lret
push
loop
cmpsb
std
dec
pop
inc
xor
rol
xchg
jmp
int
or
clc
sbb
inc
jb
sahf
fwait
pop
mov
mov
or
int
lsl
push
mov
push
movsl
icebp
fstpl
and
movsb
lods
loopne
test
and
push
mov
js
adc
inc
and
imul
adc
outsb
cmc
mov
gs
outsl
lock
movsb
movsb
sbb
xchg
and
cmp
adc
repnz
addr16
sbb
push
pop
push
adc
jle
mov
and
xchg
xor
push
cmp
mov
out
lret
loop
ret
into
lcall
or
cmp
jp
sbb
push
cli
pop
lea
shlb
cs
sub
int
jg
adc
mov
ret
movsl
fs
outsb
xchg
lock
adc
mov
and
movsl
pushf
imul
mov
sub
jg
in
cltd
pop
sbb
shll
sti
or
mov
test
mov
adcl
call
cld
fldcw
lock
push
scas
fdivl
dec
pop
push
hlt
push
xchg
xchg
jge
lcall
inc
ja
jp
mov
cld
inc
push
in
fidivrl
imul
imul
push
mov
xor
inc
push
sub
inc
sbb
mov
fwait
jae
jb
hlt
push
mov
outsl
adc
sarl
adc
addr16
add
adc
jmp
cld
pop
ret
and
jno
out
push
jbe
pop
and
mov
loop
pop
jns
push
das
leave
fwait
xchg
cmpsl
push
inc
sub
out
addr16
lret
mov
mov
call
dec
push
outsl
enter
loope
sub
fidivrl
jae
sti
mov
stc
inc
lods
outsl
ljmp
mov
lods
mov
out
daa
mov
push
cmp
push
jmp
pop
inc
sbb
jle
pop
mov
inc
inc
add
sub
ficomps
push
sti
cmpsb
pop
insl
dec
cltd
mov
lret
jo
sbb
je
sub
xlat
outsb
pop
notl
sarb
mov
imul
fdivl
insb
sbb
psubq
lahf
push
jmp
data16
and
push
and
int
xor
inc
leave
mov
sub
mov
in
fincstp
pop
dec
insb
jae
push
mov
outsl
pop
xchg
rcll
push
lcall
add
adc
xor
lods
outsb
adc
cmc
jnp
add
pop
adc
idivl
ljmp
fsubrl
sub
xor
dec
dec
imul
mov
xor
xlat
mov
loopne
cmp
mov
jge
xchg
pop
sbb
and
clc
cmpsb
inc
xchg
scas
jl
adc
inc
hlt
sbb
mov
xor
pop
push
push
out
inc
inc
cmp
xchg
xor
xor
or
out
jecxz
nop
push
sar
leave
test
inc
sub
push
xlat
adc
and
adc
mov
mov
js
inc
pop
mov
jns
xchg
jo
cmpsl
ja
pop
pop
mov
popf
clc
sub
push
popf
or
or
popa
xor
iret
lret
add
and
push
movsl
test
sub
mov
mov
lods
add
mov
add
mov
mov
mov
push
cmp
and
pop
push
nop
into
sub
jbe
inc
dec
dec
push
andb
push
repnz
push
cmc
mov
mov
inc
ret
mov
subl
cwtl
mov
sar
jge
push
imul
sbb
push
jle
xor
cmpb
scas
add
pop
mov
lahf
insl
inc
shrb
aaa
pop
ficoml
sub
rcr
je
popa
jbe
jo
or
and
sub
nop
dec
inc
sti
imul
test
mov
test
mov
xchg
sar
clc
fidivs
mov
hlt
out
popf
dec
inc
cmpsl
out
out
aam
add
cmpsb
jecxz
xor
repz
or
fistl
arpl
adc
push
push
daa
fiadds
fwait
jmp
sbb
outsl
stos
jno
sub
sub
outsl
mov
cmc
pop
fucomp
mov
pop
xor
rorb
fsubrp
xor
in
xchg
sbb
sti
fwait
pop
test
sarb
mov
jmp
in
dec
or
int3
jo
mov
nop
and
push
inc
xchg
push
mov
mov
bound
repz
sub
scas
std
out
inc
test
or
dec
mov
add
fwait
lods
dec
mov
adc
aaa
or
dec
inc
mov
mov
lods
repz
insb
mov
lock
push
pusha
ss
jmp
xlat
movsb
fnstcw
outsb
adc
push
pop
fcomip
mov
pop
imul
repz
pop
jp
js
shlb
jp
jns
sbbl
xor
jo
pop
pop
push
inc
push
cmp
rcrl
add
xchg
inc
fiadds
loop
test
xchg
test
pushf
pop
add
incl
push
adcl
outsb
xor
fstp
jae
xchg
cmp
adc
cmpsb
les
pushf
fnsave
cmpl
ret
cmp
mov
lods
xchg
jmp
in
repz
leave
mov
cmp
shl
repz
lods
pop
inc
sub
aas
imul
out
arpl
cmp
jns
lahf
neg
fisubs
repz
sbb
decl
in
mov
movsb
dec
inc
inc
sub
mov
filds
mov
push
or
push
clc
jl
cmpsb
fsub
xchg
and
or
lcall
add
cmp
cmp
lea
xchg
jnp
lods
out
and
sbb
and
insl
enter
mov
push
xchg
cmpsl
fstpt
fstpl
int3
mov
lods
call
push
jne
xor
cmp
cmc
std
push
push
ficompl
popa
adc
lcall
shr
sbb
pop
lahf
mov
add
or
xor
sub
push
add
mov
adc
cmp
nop
mov
in
mov
js
sbb
jb
lret
mov
sahf
clc
dec
jl
icebp
push
mov
dec
pop
sub
add
fstpl
clc
fadds
xchg
dec
jbe
cmp
rcll
xor
cwtl
dec
in
cmp
cmp
pop
cmp
mov
outsl
jb
or
push
mov
fsts
xor
or
pop
cli
stos
adc
andb
test
xchg
dec
imul
push
icebp
leave
mov
jo
mov
pop
mov
and
dec
ja
xor
addr16
mov
loopne
jl
sub
inc
sbb
mov
sub
add
xchg
xor
add
jmp
adcb
mov
pop
fs
mov
mov
inc
aas
sbb
push
stos
xchg
sub
shr
sub
xchg
fildll
mov
push
push
scas
and
and
scas
inc
jb
and
pop
stos
test
jne
jno
or
xchg
sti
sub
pop
sar
stos
dec
cmc
fbstp
pusha
in
ret
int3
lcall
cmpsb
sub
or
negl
sbb
add
data16
mov
inc
aas
push
out
mov
sbb
xor
arpl
push
push
nop
ja
je
inc
mov
rorl
and
mov
dec
cmpsb
push
pushl
dec
je
cmpb
fildl
mov
xchg
xor
inc
pushf
adc
outsl
fistl
pop
cmp
cmc
ss
daa
jmp
daa
xor
and
push
inc
pop
fisttpll
lods
add
pop
xor
and
loope
mov
fcomps
mov
out
or
jne,pn
aam
mov
jl
cmp
fdivp
jne
adc
pop
push
sbbb
push
dec
sbb
movsl
mov
add
jecxz
xchg
inc
cmp
test
fnstenv
mov
fnsave
xchg
jb
aas
and
or
test
push
add
sub
in
dec
cmp
inc
xorb
shr
movsl
out
adc
stc
icebp
mov
scas
push
dec
pushf
in
push
pop
clts
addr16
adc
icebp
cmp
movsl
and
adc
adcb
sahf
and
into
insb
and
data16
js
aam
mov
jbe
add
shlb
lret
std
pop
sbb
enter
dec
pop
inc
popf
mov
fmul
push
les
ds
test
ror
and
sub
bound
mov
jo
lods
push
hlt
push
gs
aaa
ret
sub
rcrl
cli
xchg
and
sbb
outsb
sbb
push
adcb
cmp
mov
insb
jle
movsl
scas
lea
mov
dec
imul
aam
cmpsl
jne
xchg
pop
lods
xchg
cs
das
and
ret
dec
movsb
mov
pop
gs
sub
xchg
in
incl
std
cmpsl
gs
lret
adc
fbld
jae
xor
pop
lods
pop
pop
call
sub
or
mov
pusha
outsl
and
mov
cmp
or
mov
jge
call
add
xchg
roll
enter
lret
mov
dec
dec
jl
push
push
pop
popa
aas
push
rol
jbe
out
pop
push
cwtl
push
inc
push
dec
jecxz
das
push
in
xor
arpl
test
icebp
aas
test
mov
test
in
cmp
imul
dec
shll
xchg
sub
add
sub
mov
sbb
jle
mov
aam
and
cwtl
pop
mov
je
insb
cmpsl
dec
aad
or
jle
ja
movsl
adc
and
sub
outsb
push
mov
bound
and
xchg
les
and
ds
mov
adc
dec
cmp
fwait
insl
sbb
mov
sub
mov
icebp
mov
lret
hlt
cmp
outsl
loop
shrb
cmp
test
jmp
fiadds
cmc
mov
jns
push
xchg
and
rol
imul
push
mov
inc
imul
xor
inc
in
jl
adc
mov
bound
and
push
adc
xchg
push
mov
mov
sbb
push
bound
push
and
aaa
cmp
xorl
mov
pop
stos
push
scas
or
int3
lret
es
inc
dec
xchg
push
out
push
in
int3
fcomps
xor
dec
in
xor
cmpsb
or
repz
inc
mov
jb
mov
push
inc
add
subl
lock
fs
xchg
fstpt
inc
and
push
mov
xchg
imul
mov
mov
int
clc
mov
mov
mov
adc
rep
mov
fimull
pusha
xchg
out
addl
pop
call
in
ds
sbb
test
dec
es
fbstp
jmp
je
push
jb
and
nop
daa
je
call
inc
inc
cmpsl
fstl
mov
jecxz
pushf
out
dec
std
push
mov
js
mov
inc
mov
adc
fs
repz
adc
je
push
jnp
cmp
xor
push
push
rcll
mov
xor
jnp
bnd
lret
sub
lcall
pop
or
ss
inc
add
bnd
cltd
adc
dec
add
roll
aam
adc
int
icebp
or
pop
cmp
xchg
adc
loopne
and
mov
xor
lds
xchg
inc
outsl
push
mov
out
scas
sbb
add
cmp
int
xor
cmp
loop
mov
pop
xor
cmp
mov
movsl
lret
call
mov
jecxz
aas
andb
sbb
cmp
mov
popa
mov
pop
call
dec
cli
cmp
cltd
repnz
hlt
fsubr
add
push
or
push
fwait
push
jmp
iret
out
in
adc
popf
push
add
jno
mov
jmp
and
and
sbb
push
mov
add
into
lcall
subl
iret
adc
add
gs
lret
fxch
jno
mov
sbb
and
in
int
sub
mov
push
pop
loope
and
shl
mov
sarb
push
pop
lods
or
fisubl
jle
fs
stc
or
shll
in
add
scas
ljmp
bound
sbb
or
loope
pop
movsb
mov
fisubrl
or
cmpsl
xor
loopne
dec
mov
mov
cmp
insl
mov
inc
xchg
es
pop
cld
pop
inc
add
mov
mov
out
xchg
inc
jecxz
or
xlat
lret
ficomps
or
decl
cmp
aam
pop
outsb
mov
fs
sub
dec
data16
scas
out
and
jns
xchg
add
jns
stos
inc
sbb
mov
mov
cmp
scas
imul
or
arpl
pusha
cmp
mov
repnz
stos
mov
ljmp
call
dec
movsl
push
mov
ret
jnp
or
arpl
test
cmp
testl
lds
jns
sub
fs
repz
mov
bound
sub
jmp
loopne
je
int
jge
mov
loopne
pushf
lods
xchg
dec
ja
sbb
test
lods
aaa
sbb
pop
pop
mov
pop
cmp
mov
pushf
add
aas
push
or
stos
in
jae
push
je
jns
mov
jnp
shlb
fwait
mov
shrb
mov
mov
insl
lock
les
dec
out
or
jo
in
stos
dec
inc
test
inc
out
jns
mov
mov
movsb
cmp
leave
les
mov
sbb
ret
jmp
test
cltd
push
xor
and
jecxz
push
fnstsw
pop
aas
mov
mov
sbb
fistps
cmp
clc
xchg
iret
xchg
scas
rorb
jae
outsl
test
jno
xchg
insb
leave
push
xchg
fsubrl
outsb
pop
jb
adc
int
pushf
jno
cmpsb
in
in
aas
sub
fisubl
mov
cmp
aad
mul
mov
js
int3
leave
fwait
cld
sbb
subl
dec
scas
or
adcb
scas
push
adc
enter
mov
rorl
cld
xchg
mov
dec
xor
subb
or
or
aam
pop
ljmp
xchg
jbe
sub
mov
push
mov
dec
outsb
sub
cmp
fadds
fdivp
add
cmp
out
sbb
mov
push
movsl
dec
pusha
xlat
jge
or
in
push
int3
out
cmpsl
xor
xchg
shrl
xor
jl
xchg
inc
pushf
and
sbb
lods
pause
jmp
mov
inc
adc
xor
pop
icebp
hlt
insb
jp
sbb
or
xchg
mov
ss
add
add
xchg
push
out
mov
fbld
fcmovnbe
je
and
das
cmp
inc
inc
ret
insl
mov
jns
cmp
ret
loope
hlt
xlat
mov
js
inc
fdivrp
das
std
fisubrl
ss
les
push
mov
dec
flds
aas
xchg
mov
cmp
rcr
push
push
jb
aaa
dec
stos
jg
outsl
xchg
mov
ficompl
loopne
clc
or
inc
fsts
fidivs
loope
ficomps
xchg
je
mov
dec
incl
xchg
lds
popf
scas
popa
cmpsb
ficoml
inc
notb
lods
ljmp
mov
push
cmpsb
loopne
mov
or
jp
js
and
jne
sub
cmpsb
xchg
sub
dec
shlb
mov
sarb
mov
loopne
xchg
addb
stc
clc
add
repnz
jl
clc
push
jle
dec
sbb
cwtl
mov
sbb
mov
fisttpll
popa
jl
xor
stos
fwait
jae
or
add
stos
leave
push
out
mov
or
mov
scas
ds
pop
out
les
push
outsb
les
mov
push
add
mov
sub
das
mov
in
nop
add
stc
mov
mov
or
or
dec
xor
data16
jp
sbb
lret
fldl
cld
jmp
or
or
sbb
sub
push
jnp
xchg
in
subb
or
shrb
sub
and
stos
xchg
or
outsb
push
rcrl
xchg
lcall
shr
mov
mov
insl
fst
lods
mov
pop
aaa
test
and
scas
clc
dec
out
lret
xchg
pop
cmc
nop
hlt
mov
sahf
pop
mov
notl
xor
inc
xlat
roll
pop
adc
adc
mov
call
fistpl
lods
inc
mov
and
and
mov
lods
lret
add
xchg
pop
insb
sbb
out
lods
mov
add
insl
jge
imul
subl
pop
mov
dec
dec
mov
loopne
adc
pop
cmp
stos
insl
xchg
pop
xchg
push
aad
push
mov
mov
jmp
sub
addr16
movsl
pop
and
inc
push
adc
rorb
push
sarl
lcall
sbb
and
push
inc
fidivl
aas
inc
les
sbb
sbb
call
push
xchg
mov
lret
cmp
pop
xchg
add
mov
jb
mov
sbb
jno
inc
mov
out
push
rorl
out
pop
inc
xchg
ss
xchg
sub
xor
repnz
divl
pop
pop
mov
stos
inc
or
mov
pop
rcl
pop
cwtl
inc
loop
sub
mov
cmc
push
pop
test
mov
das
daa
enter
in
add
push
jne
mov
in
shl
and
das
addr16
and
jae
dec
adc
jl
push
scas
inc
mov
shrl
movsl
lds
pop
ror
sub
jnp
mov
cli
push
or
pop
cmp
scas
aam
loope
scas
inc
iret
rcrl
testb
jge
dec
jge
dec
adc
sbb
frstor
notl
mov
aaa
mov
fmul
int3
xchg
fidivs
jno
cmp
inc
bound
or
dec
sub
fs
fisubrs
addr16
adc
xlat
sbb
mov
push
aas
test
dec
aad
and
cwtl
xchg
push
inc
pushf
testb
fimuls
or
sbb
sbb
sub
cmpsl
or
jg
xor
and
push
push
dec
jmp
jmp
inc
leave
cmp
repnz
and
lock
ret
push
popf
mov
jecxz
adc
iret
lret
out
lds
mov
addr16
xchg
add
sarb
mov
aaa
xchg
js
mov
mov
aad
in
lea
pushf
ja
sbb
xor
mov
cld
push
mov
or
aaa
bound
arpl
fwait
adc
stc
mov
lods
addr16
fwait
shl
insb
sub
repnz
ljmp
lock
add
mov
adc
lcall
cwtl
test
cmp
unpcklps
je
add
mov
adc
jns
addr16
loope
ss
out
fiadds
pop
lea
in
out
mov
push
insb
sub
push
out
sub
jecxz
push
pop
xchg
and
push
xchg
inc
repnz
cltd
repz
inc
or
movsl
cmc
pop
xchg
movsl
mov
insl
push
iret
push
xorl
mov
ss
xor
xchg
lea
cltd
xchg
xchg
xchg
in
fistpll
jge
je
and
push
push
bound
lahf
sub
inc
subb
call
or
mov
jge
xchg
sbb
out
adc
sbbl
inc
push
out
js
sub
out
mov
call
sbbb
mov
in
xchg
adcl
sub
sahf
jno
sbb
arpl
lea
nop
cmp
or
es
repnz
cmp
pusha
sti
and
and
ficompl
adc
lods
lods
notl
cmp
cmp
mov
and
cmp
stos
add
or
cmp
sub
pop
push
mov
sbb
sub
in
jo
dec
cmpsb
dec
xlat
mov
sub
fwait
out
sbbb
jmp
loopne
mov
inc
and
dec
rclb
ret
fsubrp
xchg
out
jecxz
mov
in
xor
scas
pop
dec
dec
mov
call
adc
mov
cmp
jb
mov
movsl
push
stos
adc
mov
push
mov
jbe
mov
std
aaa
out
add
dec
mov
push
mov
scas
fdivrl
inc
and
mov
bound
adc
sbb
sbb
mov
ss
adc
out
addb
jg
mov
jae
loope
pop
loopne
cmp
shrb
fmul
pop
cli
xor
inc
mov
xchg
inc
sbb
fdivl
dec
imul
jne
jecxz
push
pushf
repz
das
lahf
in
loopne
loop
mov
addr16
rcrb
cltd
mov
stc
inc
mov
in
adc
cwtl
add
or
and
fdivrl
cmp
int3
out
call
stos
push
jecxz
stos
push
lea
daa
sub
or
and
test
lcall
push
addr16
inc
shrl
leave
or
xchg
les
cmp
mov
or
dec
cmp
mov
hlt
push
jns
dec
dec
ret
adc
jmp
add
mov
out
mov
test
fstpt
repz
or
add
or
pushf
and
mov
fucomp
adc
mov
mov
repz
popf
dec
cld
shr
xor
out
nop
push
mov
fdivp
aam
sbb
in
add
loopne
decb
inc
testl
out
jmp
jle
push
mov
pushf
sub
xchg
sub
bound
dec
stos
push
push
shll
lock
pop
mov
movsl
mov
fsubrl
mov
les
jl
fisubrl
outsl
ret
ret
insb
mov
add
arpl
push
push
mov
pop
push
cmpsl
adc
sub
pop
mulb
add
cmp
fdivrs
mov
xchg
xor
movl
jne
jne
push
std
dec
push
mov
roll
xchg
mov
scas
mov
push
call
sub
cmp
cmpsb
addr16
mov
or
out
ror
xor
mov
and
push
jecxz
push
push
mov
sub
cld
aad
in
ss
idiv
adc
mov
sbb
mov
sbb
pushf
mov
into
jecxz
arpl
mov
mov
push
push
lret
and
add
arpl
out
shr
mov
ss
jb
xor
sub
movsl
xchg
adc
sbb
xchg
adc
jg
sti
mov
loopne
jnp
fldcw
pop
scas
dec
push
bound
stos
mov
or
bnd
and
pusha
add
sbb
hlt
cld
outsb
push
scas
pop
decb
ds
mov
mov
shlb
movsl
pop
push
or
mov
fdivs
in
jecxz
adc
ret
cmp
mov
iret
or
loop
xchg
xor
cwtl
sub
xor
adc
dec
rcl
mov
mov
mov
aad
or
mov
sbb
mov
sub
repz
or
adc
popf
rcr
into
cltd
lock
movsb
insl
shll
xchg
stos
xor
jg
dec
scas
dec
and
sbb
xor
jle
push
push
jb
inc
xlat
pop
pusha
out
add
repz
adc
int3
shrb
and
cmc
arpl
outsb
fsts
insb
and
pushf
sub
es
fdivrl
addb
ret
cld
dec
push
int3
pop
jmp
mov
mov
push
add
jnp
ja
rorb
push
mov
in
sub
inc
inc
aas
jae
in
mov
add
mov
push
mov
clc
insb
add
clc
xchg
sub
into
mov
out
mov
in
or
dec
mov
sbb
or
icebp
cwtl
ljmp
add
outsb
jl
xor
nop
loop
jns
xlat
inc
pushf
cld
repz
cmpsl
xor
sbbb
push
pop
dec
mov
cmpsb
les
iret
sbb
or
cmpsl
xor
mov
sbb
ret
fisttps
mov
fnstenv
or
mov
ret
outsb
jl
daa
sahf
lret
cmpsb
ret
insb
inc
mov
mov
arpl
dec
dec
push
push
cmpsb
lea
mov
jne
dec
mov
push
or
cmp
cmpsb
and
dec
sbb
stos
jbe
and
lods
ljmp
pushf
cmp
sbb
clc
sahf
aam
in
std
add
pushf
lret
push
xor
cmp
adc
xchg
cli
adc
mov
cmp
mov
dec
mov
das
cmp
stos
imul
dec
in
or
leave
xchg
or
jg
movsb
fidivrs
mov
xor
mov
push
outsl
test
das
add
int
imul
jecxz
insb
dec
lea
out
outsb
jno
jecxz
repnz
inc
mov
pop
pop
lea
aaa
jno
outsb
aad
push
inc
adc
in
or
scas
aad
rcl
hlt
mov
fiadds
in
jno
lea
mov
fsubrl
les
lock
sahf
adc
mov
sub
adc
jnp
ret
sbb
enter
sub
in
test
pusha
cmp
cmp
shl
popa
das
push
cwtl
mov
shlb
rcl
ja
and
or
dec
hlt
mov
imul
cli
inc
iret
adc
push
fstpl
sahf
es
loop
insb
sarl
cld
or
push
jbe
or
outsl
fcmovnb
shll
jg
inc
xchg
cwtl
jns
dec
or
or
in
shll
fidivrl
hlt
sub
jp
inc
xchg
and
in
mov
push
out
sbb
std
aaa
dec
sub
xor
xor
mov
sti
out
mov
sub
mov
sahf
scas
sub
stc
inc
push
fwait
inc
scas
cmp
addr16
add
xor
push
xorl
jns
sub
xchg
push
add
inc
lock
stos
push
mov
sub
fst
cmp
inc
jns
jl
loope
popf
in
push
out
xchg
out
mov
xor
leave
das
inc
call
push
xchg
or
ret
mov
repz
mov
mov
add
and
pop
rcr
insb
js
mov
jg
pop
pop
insb
rcl
sar
fdivrl
jp
rcr
das
pop
mov
rcrl
fcomps
test
jmp
pop
call
stos
leave
jge
inc
inc
sub
and
repz
xchg
jle,pn
jb
repz
fmul
leave
mov
mov
lcall
xor
mov
dec
sahf
sbb
sub
inc
test
xor
cmp
mov
push
out
lds
xchg
test
xor
pop
je
shl
push
call
call
ficoms
neg
cmp
jp
push
ds
pop
xor
cmc
mov
pop
cmp
push
mov
push
cs
add
inc
in
add
cmpb
jge
lret
pop
js
adc
shl
xor
stos
clc
pop
xchg
repnz
mov
enter
scas
jg
or
push
jl
fisubrs
repz
mov
test
dec
add
aad
insl
sarl
pop
mov
shll
jle
or
xchg
out
push
icebp
enter
cmpsl
shr
or
insb
fbld
push
data16
ss
clc
mov
outsl
addr16
mov
mov
movsl
enter
jnp
dec
xor
iret
dec
xchg
mov
pop
int
add
push
aas
mov
jp
mov
mov
and
out
lea
les
clc
fwait
lods
or
mov
negl
bound
xor
or
mov
jle
loope
dec
das
add
mov
mov
sbb
add
jle
jle
cld
and
and
xor
inc
fsubp
jmp
mov
cmp
xchg
jg
shl
ja
cmpsb
arpl
scas
imul
push
push
pop
mov
xchg
sbb
add
ss
cld
xor
sub
movl
mov
test
ficompl
xor
fptan
push
sub
inc
lcall
test
jg
mov
fldl2t
add
out
adc
andl
pop
lods
out
xor
and
movsb
cmp
jne
idivb
sub
or
shlb
ret
push
jle
add
out
push
je,pt
xchg
cmp
sbb
push
cwtl
xorb
cmp
int
xlat
push
out
int
ret
and
and
jno
cmc
inc
pop
and
and
sti
fnstsw
arpl
xchg
lea
push
mov
lret
fdivs
loop
lea
pop
ss
fs
adc
sub
into
add
mov
mov
fwait
mov
jbe
scas
es
sbb
dec
mov
std
push
jno
mov
jb
or
cmp
pop
ds
mov
cmp
in
les
sub
adc
xchg
jae
ljmp
lock
or
adc
or
iret
cmp
dec
jecxz
xchg
in
add
loopne
shl
dec
xchg
add
pop
and
enter
das
push
in
insb
test
push
mov
jg
mov
repz
inc
sub
add
sahf
add
mov
pop
jp
ja
cmp
imul
dec
stos
cmp
insb
xor
insl
jo
jno
and
jne
and
and
xchg
inc
xchg
scas
xchg
std
sbb
cmpsl
movb
je
jae
mov
mov
in
aaa
dec
shll
jp
push
cmp
sbb
or
and
and
out
push
sub
sub
mov
daa
push
xchg
lods
iret
ds
and
data16
xor
cmovns
out
inc
icebp
dec
lea
icebp
loope
into
in
cmp
seto
ret
jae
insb
insl
mov
fistl
fs
popa
cmp
inc
or
dec
ss
push
jae
fs
mov
jae
into
movsb
nop
incb
std
paddb
dec
ret
andl
out
outsb
add
mov
inc
jle
sti
or
dec
in
cmc
int3
and
add
cld
popf
mov
mov
mov
jb
aad
imul
pop
call
pop
pushf
adc
mov
popl
mov
add
cmp
ret
aaa
mov
outsb
mov
sub
cmp
and
das
aaa
lret
add
int
push
add
addr16
lret
lahf
test
adc
cld
mov
or
leave
push
lods
dec
push
xchg
xor
mov
mov
paddusb
xchg
or
das
push
sub
sarl
repnz
das
mov
ja
insb
push
dec
loopne
pop
adc
cmp
ljmp
lahf
mov
jns
lock
lcall
add
vpackssdw
adc
sub
notl
cmp
jno
add
mov
xor
push
xchg
xor
fsubs
dec
adc
repnz
inc
loopne
xchg
test
leave
xchg
xor
jecxz
xchg
mov
cmp
movsb
fmuls
mov
add
ja
cmp
inc
mov
js
ljmp
test
xor
shll
fcomps
xlat
scas
js
ja
in
imulb
ret
jns
sub
dec
loop
dec
jbe
je
push
int3
into
push
inc
mov
push
pushf
aam
mov
dec
jle
lods
add
fwait
adc
dec
add
adc
dec
pop
pop
jcxz
fdivp
mov
mov
pop
or
mov
aad
mov
mov
aas
sahf
call
xor
sahf
lods
push
and
jae
ds
sbbb
sub
adc
sub
fwait
fadd
repnz
mov
xor
jno
push
dec
and
mov
fiadds
sub
imul
sti
outsl
mov
clc
iret
pop
xchg
insb
cmp
inc
pop
insb
leave
dec
pop
push
cmp
push
xor
xchg
sub
dec
and
jo
icebp
cmpsb
ret
mov
insl
jp
push
mov
pop
gs
movlps
xchg
add
and
jbe
lea
movsb
sub
add
adc
out
mov
test
adc
mov
adc
roll
cltd
loope
pop
jg
xor
cmp
adcl
dec
fcomip
jecxz
in
arpl
xchg
and
fldcw
adc
sahf
xor
aas
daa
pop
pop
pusha
popa
cmp
je
movsl
mov
jle
in
xor
aaa
pop
cld
xchg
cmpsl
xchg
dec
and
les
icebp
lock
cltd
xchg
jp
fdivl
xor
and
xchg
mov
test
in
mov
xchg
testb
addr16
cwtl
add
sub
mov
aad
xchg
dec
sub
sbbb
jecxz
outsb
or
mov
fildll
stc
rcr
xor
and
push
test
shlb
shlb
mov
iret
cltd
cmpsl
dec
cmp
xchg
xor
jns
pop
imul
and
xchg
adc
inc
dec
fs
mov
arpl
cltd
outsl
outsb
inc
out
mov
and
mov
outsl
inc
int
pop
sub
out
iret
lods
add
xor
in
out
ret
sbb
enter
iret
sub
aas
ret
dec
jno
mov
jno
je
int3
xchg
push
clc
popl
sbb
scas
dec
dec
push
cltd
cmp
xor
xor
add
je
pushf
cli
sbbl
aas
into
adc
hlt
mov
addr16
outsl
arpl
ja
jae,pt
rclb
push
loop
lods
push
sub
int3
je
sub
ljmp
adc
repnz
aaa
lcall
test
das
int3
jae
dec
in
aam
lcall
jp
fidivl
addl
jae
adc
es
mov
xlat
std
gs
in
push
adc
push
clc
jae
sub
jbe
sbb
xor
movsb
gs
or
add
jge
add
les
lahf
ret
leave
mov
repnz
mov
cmc
test
mov
dec
loope
fcoms
dec
sti
push
int
rolb
inc
gs
out
movsl
dec
mov
hlt
mov
cmp
xchg
jo
repz
push
faddl
dec
std
xchg
test
leave
insb
adc
adc
xor
mov
je
jmp
inc
pop
jp
out
mov
and
jl
mov
and
push
jnp
mov
xchg
jge
data16
lock
mov
jl
test
pop
fdivl
mov
cli
xchg
add
adc
xchg
jnp
pop
xor
shlb
repz
fsubrl
mov
pop
test
pop
insl
fistpl
lea
sbb
sub
ret
pop
test
pop
mov
incl
pop
cmp
and
in
ss
push
sbb
cmp
cmp
mov
push
lcall
scas
push
fiaddl
pop
jle
jp
bound
adc
xor
adc
dec
lahf
insl
adc
mov
sbb
dec
jno
out
jp
dec
xor
dec
push
add
aas
fmuls
push
subl
sub
lahf
cs
int
pop
xor
jp
aas
stc
cwtl
add
pop
movsl
jbe
push
mov
cmp
pop
push
lds
and
ljmp
cmc
add
inc
es
push
mov
dec
mov
lods
dec
push
fwait
pusha
jbe
ret
xchg
xchg
sub
loop
mov
push
out
dec
cmp
jne
cmp
and
xchg
push
add
xor
pop
loopne
push
imul
repnz
scas
or
std
mov
jns
je
push
pop
jns
dec
addr16
mov
shll
imul
int3
xchg
and
pushf
push
test
or
jmp
cmpsb
jnp
rcrl
dec
pop
mov
mov
addr16
mov
sbb
insl
and
lahf
or
cmp
cltd
push
hlt
cmp
xchg
and
lods
mov
or
cs
dec
xchg
jne
lds
les
mov
mov
enter
sub
popa
jae
xchg
mov
jno
into
in
or
xchg
jg
mov
mov
les
imul
inc
pop
fldcw
mov
xlat
cmpl
pushf
dec
pop
add
pop
dec
sub
repz
fs
mov
or
sub
ret
sarl
jecxz
jecxz
lods
jnp
jae
xchg
sub
xchg
mov
cmp
movsb
inc
dec
sbb
lahf
pop
mov
jmp
jecxz
mov
sub
lea
cmp
or
jbe
adc
loopne
daa
xchg
lret
js
sarb
adc
insb
cli
push
lds
je
push
or
aaa
fs
out
or
test
clc
and
jmp
xor
dec
add
sbb
pop
push
les
bnd
test
dec
push
cmp
cmp
pop
cmp
or
cmpsb
adc
mov
shrl
and
xor
sub
xchg
jae
sbb
jmp
sbb
cwtl
pop
sti
ret
wbinvd
mov
and
sbbb
out
jnp
inc
cltd
dec
insb
or
imul
mov
orb
sub
push
stos
into
pop
jg
scas
pop
inc
push
invd
ja
int
push
fs
inc
pop
sbb
mov
xor
in
mov
gs
xchg
jl
mov
mov
xchg
aas
sbbl
mov
jo
into
xor
in
test
mov
jae
xchg
mov
and
sbb
sbb
lea
ret
scas
out
jne
les
sbb
imul
outsl
daa
mov
pop
pop
inc
pop
mov
inc
push
sbb
pop
jb
cmpsl
sub
pop
lods
sub
lcall
je
out
add
lods
jno
pop
out
and
aas
arpl
aad
dec
inc
add
mov
inc
sbb
movsl
cld
pop
xchg
cmpsb
lock
add
sub
sub
fsubs
sbb
roll
lods
orl
fidivrs
lcall
sahf
push
mov
hlt
bound
and
stc
cs
push
or
loope
cbtw
scas
call
cmpsb
out
sahf
clc
inc
jp
aad
xor
cltd
cmc
pop
fistpll
push
cmp
dec
sbb
or
nop
jp
shll
push
fucomip
or
movsl
icebp
mov
jge
add
jo
xchg
cli
mov
shlb
mov
call
jmp
movsb
jge
ret
and
sti
ss
test
jo
sarb
push
sub
jno
notl
lcall
cwtl
mov
test
dec
fwait
call
cmp
jecxz
sbb
dec
cmpsb
push
xchg
push
hlt
add
andl
or
ss
std
adc
xor
jo
andl
sbb
adc
movsl
cmp
stc
fldl
lea
aas
out
xlat
sbb
movsl
ret
fidivl
inc
roll
cmp
enter
aad
dec
xor
inc
mov
shlb
xchg
add
sbbl
pop
into
jb
fs
gs
jle
cmp
hlt
and
add
mov
outsb
push
cmc
adc
or
hlt
iret
push
shrb
push
mov
repnz
daa
repnz
pop
mov
and
push
sbb
fwait
sub
pop
icebp
mov
fnstcw
fldcw
cltd
sbb
jle
gs
fdivs
and
lods
je
loope
xor
push
jmp
test
pop
mov
loopne
sub
pop
sbb
mov
mov
mov
dec
dec
scas
ret
jnp
inc
fistpl
bound
xor
ljmp
in
xchg
lock
fcoms
inc
or
jge
out
adcl
pminub
rcrl
mov
test
test
in
ret
mov
mov
addr16
xor
jecxz
data16
mov
out
cltd
pop
movsb
xchg
loope
outsl
mov
or
sbb
push
sbb
loop
mov
or
mov
mov
lret
scas
addr16
bound
pop
xlat
outsb
adcb
testb
pop
xchg
pop
out
xor
xchg
scas
mov
pusha
push
inc
jns
cmp
ret
sub
scas
pop
lods
push
lods
ret
shrb
jmp
add
and
cmp
xlat
pop
sbb
pusha
iret
pop
lods
dec
push
incl
cmc
mov
lds
dec
clc
test
icebp
cmpsl
ds
jg
adc
push
bswap
insb
jle
adc
lds
mov
fwait
sub
lods
jg
jp
inc
call
gs
mov
jl
cwtl
das
repz
push
out
inc
xchg
sub
addr16
shl
lcall
and
mov
rcll
jle
adc
and
pop
jbe
inc
shrb
mov
ja
sub
shll
data16
daa
int3
jl
ja
test
jp
mov
scas
mov
xor
orl
or
push
xchg
in
and
push
add
xor
add
xchg
popf
push
xor
lods
jg
inc
ljmp
lods
cmp
lods
jge
not
fists
mov
push
in
bound
in
adc
aam
dec
pop
out
or
add
add
jle
cld
mov
mov
sbb
mov
jle
pop
push
jbe
cmpsb
xchg
dec
xchg
xlat
outsb
movsl
adc
cmpsl
jle
je
xchg
orl
jp
or
mov
outsl
bound
add
jns
loop
jg
iret
pusha
mov
cmp
cmp
gs
mov
mov
inc
cmpsb
mov
ret
outsl
mov
ret
pop
and
inc
push
dec
jg
mov
push
outsb
cmp
push
inc
fmuls
mov
adc
or
mov
sub
xchg
jne
pop
sahf
dec
xchg
adcb
push
sub
loop
push
pusha
icebp
stos
std
outsb
int
or
xor
lods
stc
in
sub
in
jbe
add
inc
sahf
and
outsl
stos
inc
sbb
mov
cmpsl
out
mov
lds
fstl
test
mov
jecxz
insb
xor
sahf
or
in
data16
cltd
dec
cmp
mov
ficomps
xchg
mov
fsubrs
bound
jnp
subb
fs
jne
lret
fidivrl
xchg
test
popa
pop
ret
sbb
lods
je
mov
aas
std
je
icebp
adc
lcall
mov
imul
pushf
addb
push
cmpsl
xchg
adc
sbb
inc
and
out
out
cld
xor
clc
stos
ss
xor
inc
add
cwtl
je
adc
decb
xchg
push
jbe
cs
dec
mov
dec
fstps
rorl
lock
pop
pop
inc
inc
repnz
in
sahf
data16
lods
scas
push
outsb
sbb
jo
popf
stc
mov
pop
mov
or
loop
out
pop
test
les
mov
and
adc
jp
adc
mov
fs
je
fimull
mov
jmp
mov
or
lret
xor
mov
mov
lahf
dec
lret
std
or
inc
mov
cvtps2pd
xor
lock
lea
cmp
loop
out
sti
push
cltd
inc
add
sbb
stc
inc
call
je
sub
pop
outsb
adc
and
xorl
fs
and
andl
das
jp
push
xlat
jmp
jb
aam
cmp
push
popf
jp
outsb
in
xor
cmp
fiadds
sub
sub
push
call
out
inc
push
sbb
cwtl
mov
cld
cmpsb
sbb
xor
imul
or
icebp
dec
mov
ret
jecxz
jp
clc
fwait
xchg
adc
lret
jmp
push
pop
sub
mov
lods
sti
not
push
add
sarl
or
lret
hlt
fisttpl
das
ficompl
xor
and
popa
fs
inc
or
xorb
mov
adc
adc
rorl
insl
fs
stos
lds
mov
xchg
xchg
sar
mov
rcrb
push
int
sbb
mov
lcall
dec
lret
clc
ret
sub
pop
dec
ficoml
add
inc
mov
push
xor
lret
into
jb
sbb
pop
outsl
test
push
pop
scas
xor
test
inc
jle
scas
jno
sbb
stc
int3
lods
outsl
adc
xchg
jg
aas
mov
aad
aad
les
xor
pop
scas
icebp
popa
les
shl
into
add
xchg
ja
sub
in
sbb
mov
push
out
inc
push
lods
xor
xchg
icebp
int
mov
adc
lret
add
js
or
xor
pop
dec
and
mov
sti
scas
pushf
mov
mov
push
mov
out
pop
insb
int3
lods
bound
leave
icebp
mov
jno
scas
cmp
or
mov
cmp
das
push
adc
inc
or
jo
gs
push
inc
mov
cmp
lock
add
fs
push
add
pop
mov
in
and
cmp
cmp
mov
dec
test
sbb
mov
iret
repz
pop
cld
outsl
subl
lahf
pop
push
dec
into
sub
repnz
jmp
jb
xchg
pop
push
pop
sub
add
cmp
lods
sub
cvtpi2ps
inc
das
pop
outsb
insl
push
inc
loop
fwait
lds
sub
mov
cmp
cmp
cltd
icebp
pop
mov
lds
pop
and
out
test
xchg
imul
add
xchg
xlat
outsb
ret
fdivl
add
negb
or
cmpsl
je
xchg
push
jg
stos
inc
mov
movsb
sub
imul
push
out
mov
das
xchg
jbe
int3
jnp
movsb
xor
add
pop
push
sub
int3
scas
adc
sub
cwtl
sahf
push
aad
lods
or
mov
or
jl
adc
addr16
std
mov
fisttps
xor
callw
rclb
test
movsb
sti
mov
iret
push
out
daa
push
jbe
inc
push
je
out
jl
xchg
mov
sbb
mov
add
mov
fsubrs
lret
and
into
xor
negl
cmp
cmc
and
and
pop
std
sub
in
out
outsb
push
int3
jmp
mov
fcoms
lods
inc
inc
mov
imul
xchg
daa
shlb
jns
mov
pop
xchg
cs
lcall
cwtl
clc
jle
out
lods
adc
or
or
arpl
sbb
dec
pop
pop
sti
pop
mov
sub
sub
jbe
ss
xchg
push
push
jle
push
call
test
jo
lods
cs
mov
sub
insb
push
stos
fnstenv
pusha
loope
xchg
sub
rorb
pop
mov
fwait
adc
int3
cwtl
jmp
inc
and
push
scas
mov
popa
push
jl
ret
xchg
loop
push
scas
mov
in
popf
leave
xor
aas
add
mov
lea
stos
or
pop
xor
jg
pop
scas
and
adc
shl
mov
repnz
rcll
out
sub
xchg
outsb
clc
mov
jbe
test
dec
sub
inc
push
mov
lret
inc
movsl
push
fiaddl
leave
push
popf
arpl
pop
xor
cwtl
mov
call
pusha
enter
xchg
pop
xchg
and
mov
dec
outsb
pop
es
adc
dec
mov
cmp
mov
pop
int3
sbbl
call
rclb
int
pop
mov
cmpsl
inc
mov
adc
cmp
push
adc
jmp
fdivrl
xor
movsb
sarb
scas
sarl
data16
xor
mov
and
jp
jl
inc
push
ds
adc
or
mov
push
sbb
adc
pop
sysexit
lock
cmpsl
lock
sub
mov
inc
loopne
jmp
shll
in
int3
push
push
dec
dec
or
pop
imul
daa
inc
ss
xor
lahf
mov
mov
loope
xchg
insl
xor
inc
aaa
fld
daa
dec
pop
fmul
xor
je
sahf
jno
pushf
mov
cli
mov
sbb
dec
jp
inc
xchg
outsl
rcrl
xchg
bound
push
xchg
fwait
out
les
sub
pop
push
xchg
stc
jbe
out
mov
stos
push
and
mov
pop
repnz
jno
adc
xor
push
or
dec
jbe
pop
test
lcall
add
ret
xchg
ds
das
lds
out
lret
dec
jecxz
loope
push
fcoms
imul
aas
pusha
fadds
pop
dec
daa
ljmp
pop
or
call
dec
pop
xor
rcrb
mov
jmp
jle
jmp
xchg
jnp
pop
mov
loopne
xor
mov
xchg
add
xor
fildll
fildl
or
insb
inc
in
adc
push
xor
and
jle
pop
sbb
mov
pop
mov
sarb
inc
sbb
sbb
inc
fdivrs
cld
out
mov
xchg
dec
push
in
jp
ret
sbb
add
lock
sti
leave
fsubl
add
std
cmp
roll
out
push
adcb
out
testl
andb
push
je
adc
sub
xchg
ds
xor
leave
mov
mov
sti
mov
push
sub
adc
jne,pn
lret
mov
mov
jns
daa
add
xchg
jb
push
sub
pop
cmp
mov
arpl
jbe
ret
xor
add
and
test
aas
adc
int
movsb
ret
inc
pop
fcomi
int3
or
scas
pop
jb
repnz
aaa
jp
aas
les
std
pop
mov
test
lahf
aas
stos
mov
andl
in
xorl
cmc
cs
push
jb
xor
shlb
adc
jne
negb
shlb
nop
pop
push
stos
dec
in
jb
out
shrb
mov
inc
or
fidivrs
or
into
pop
repnz
cmp
pop
sbb
cmp
jmp
repnz
lods
xchg
xor
inc
fimuls
mov
gs
mov
cmc
subb
mov
push
mov
add
xchg
xor
addr16
cwtl
pop
fdivl
icebp
mov
arpl
cli
xchg
pop
inc
pop
imul
std
sbb
cmpsl
mov
inc
push
imul
daa
jmp
fwait
xor
leave
sbb
sbb
mov
mov
adc
cmp
xlat
add
add
insb
and
jne
aam
stos
pop
inc
mov
mov
sarb
fstpl
xlat
outsb
dec
mov
cmc
mov
ljmp
sbb
std
sbb
add
fisubl
ss
stos
mov
add
pusha
sub
lods
mov
mov
lret
jg
popf
ret
and
jne
test
or
stos
xchg
adc
cmc
sub
dec
loop
or
test
pushf
das
in
fldcw
cmp
fsubrs
pop
jge
xchg
inc
neg
jnp
fisubs
add
jecxz
and
test
gs
xchg
mov
xchg
push
pop
test
lods
pop
sbb
jae
icebp
shr
stc
mov
xchg
fisubrs
pop
jb
push
insl
mov
add
nop
sub
mov
les
mov
or
mov
push
sbb
inc
fiaddl
fwait
ss
out
jg
popf
and
insb
mov
or
stos
jp
push
or
cmp
add
pop
imul
test
addr16
inc
arpl
out
dec
inc
outsb
mov
inc
ret
jecxz
jecxz
and
xchg
jo
pop
mov
mov
into
cmp
and
dec
fstp
insb
add
in
jb
jp
ja
fsts
adc
sub
pushf
xor
jnp
jl
inc
fnstcw
shll
sbbl
sub
test
ret
dec
stc
xor
sub
adc
aas
mov
pop
popl
sub
loopne
cli
pop
fs
adc
sbbl
je
mov
inc
aas
nop
pop
mov
out
cmp
fimull
fdivr
add
dec
inc
xchg
fwait
pop
je
cmp
imul
add
sbb
nop
jns
test
add
fdivl
sti
ret
in
mov
xor
push
cwtl
out
xlat
inc
jle
imulb
mov
out
inc
lods
cmp
shrb
mov
mov
into
pop
mov
add
dec
int
mov
and
shl
push
and
sbb
ss
add
dec
stos
mov
ret
xorl
mov
add
sub
cmp
jle
cmc
sub
movsl
fldt
push
in
addb
icebp
add
dec
mul
shrb
pop
pop
leave
xchg
divb
cld
push
in
fisubrs
mov
sbb
push
insl
jp
xor
lret
popf
sbb
jmp
dec
dec
mov
addr16
iret
cmpb
mov
pop
jmp
push
shll
add
sub
xchg
pop
ljmp
xor
dec
add
push
jns
xor
and
in
mov
xlat
rol
mov
stos
rorb
jb
mov
inc
pcmpgtw
mov
lods
push
dec
pop
call
dec
les
dec
pop
mov
lcall
push
je
mov
scas
adcl
add
jne
lods
jns
cmp
fdivl
cmp
ljmp
popa
clc
mov
test
xchg
cmp
sbb
dec
idivb
mov
xor
mov
mov
les
mov
pop
in
inc
clc
fdivl
dec
imulb
mov
test
leave
std
mov
es
push
das
push
lods
push
push
cmc
pushf
or
fwait
cs
imul
sub
add
xor
pop
out
nop
int
push
add
jbe
add
jo
fstps
pop
or
ds
fists
stos
lret
mov
popa
push
mov
push
mov
es
inc
and
pop
lods
mov
xor
divb
push
cmpsb
test
cmp
add
sbb
or
int
mov
mov
pop
dec
jecxz
fwait
mov
popa
out
aam
xchg
push
adc
add
pop
or
dec
aad
mov
frstor
call
xchg
push
pushf
cwtl
or
inc
ret
stos
mov
add
int3
add
into
test
push
mov
sub
sahf
mov
push
fcomip
and
fdivl
xlat
ss
fldenv
fcmovne
fildl
jmp
jo
in
add
je
adc
iret
sbb
jne
jg
bound
shr
addb
pop
and
xor
pop
jecxz
cld
dec
and
divl
mov
mov
adcb
dec
or
mov
lea
adc
jmp
add
adc
pop
push
jecxz
jb
dec
loopne
pushl
in
push
or
add
rcl
jnp
pusha
mull
add
push
jl
sti
jno
jnp
xchg
or
or
ljmp
leave
dec
sbb
addr16
pop
sub
dec
in
dec
push
pop
or
loop,pn
push
sbb
cmpsb
ffreep
in
cmc
push
outsb
mov
popf
or
sub
or
je
aaa
xor
in
add
xchg
push
ds
out
ja
loop
arpl
xor
sbb
aad
jns
or
fidivrl
sub
sbb
dec
mov
xor
cltd
xor
and
or
cmp
mov
mov
inc
insl
mov
lods
add
or
inc
iret
fidivrs
mov
clc
mov
sub
sbb
decb
lahf
fwait
movsl
roll
mov
mov
movsl
add
loop
clc
insl
add
push
addr16
mov
scas
std
sub
pop
push
aaa
dec
je
pop
outsb
das
and
cmp
loop
aaa
fnstsw
dec
rdpmc
mov
ljmp
sbb
mov
outsl
in
mov
leave
ss
int
pop
add
push
inc
mov
fisubl
xchg
or
push
aad
mov
pop
hlt
adc
int3
fs
and
push
addb
std
sbb
movsl
pop
and
outsb
xor
push
jb
mov
nop
fdivrl
xchg
test
fbstp
or
xor
sub
sbb
pushf
pop
lahf
mov
cmp
call
or
or
sarl
sub
test
icebp
loop
sbb
cmp
sbb
cltd
sub
shrb
mov
cwtl
push
stos
fsubrs
push
xor
imul
scas
sub
leave
pop
iret
jb
jl
push
lods
negb
into
das
les
xor
stos
dec
shr
les
fldcw
repnz
test
xor
scas
leave
pop
or
jg
add
jb
jg
fisubrl
push
call
cmp
jnp
add
jae
cli
xchg
inc
in
movsl
mov
mov
imul
inc
outsb
pop
ret
inc
mov
cli
fs
repz
cmp
bound
mov
movsb
mov
add
push
lock
or
mov
sarl
lods
aad
fsubrs
shll
icebp
sub
stos
xor
outsb
jb
push
movsb
pop
cmp
sbb
ds
mov
in
in
pop
cmc
sub
add
xchg
jae
sbb
int
mov
pop
jns
add
mov
fisubrs
or
outsb
loop
sbb
es
dec
pop
iret
aas
cmc
lods
push
clc
adc
mov
orb
xor
mov
mov
push
push
icebp
rorb
xchg
jae
jnp
outsl
test
mov
int3
xchg
rorl
and
in
and
out
jecxz
insb
jnp
add
mov
testl
xchg
les
sbb
stos
jl
inc
sbb
dec
push
cmp
pusha
outsb
xor
xor
rcrb
shll
sub
mov
mov
mov
jmp
sbb
cmp
sub
mov
fs
sub
or
jns
cmp
pop
sbb
mov
cmc
xchg
inc
or
dec
pop
cwtl
std
ljmp
fstl
scas
push
movsb
jmp
xchg
arpl
and
sub
dec
xacquire
insl
out
sub
scas
shrl
mov
rcll
and
out
jne
js
ret
into
pop
addr16
stc
call
out
add
loope
cmpsl
sub
inc
inc
frstor
or
adc
push
xchg
xchg
mov
stc
or
fsubl
rclb
push
test
cmpsb
das
stos
or
lock
xor
cltd
cmp
out
das
pushf
lret
inc
jbe
out
inc
mov
dec
shlb
nop
lahf
add
movsb
cmp
mov
sti
hlt
mov
lods
das
sarb
orl
std
lods
ret
push
mov
shrl
jg
cwtl
mov
pop
fsubr
xlat
or
mov
pop
ds
or
sti
cmp
hlt
xchg
stc
jnp
or
jo
mov
nop
push
inc
fsubs
movsl
cmp
adc
sub
ret
dec
push
or
jbe
mov
push
xchg
cltd
cltd
adcl
mov
shrb
or
pop
jns
cmp
jns
push
insb
aam
push
fnstcw
cli
or
mov
dec
adc
hlt
mov
cmp
out
pusha
not
mov
jg
jbe
out
dec
nop
out
subl
jbe
sbb
mov
cmp
mov
sbb
cld
push
mov
bound
rcrl
xchg
push
jl
jno
and
in
andb
xor
ljmp
stos
inc
test
filds
or
fyl2xp1
mov
sub
sbb
das
repnz
and
jnp
mov
test
add
andl
pop
lock
out
fwait
cmpsl
mov
add
inc
jbe
out
mov
aad
push
or
jmp
addl
mulb
shrb
adc
lahf
ljmp
shl
imul
addr16
inc
jle
dec
push
cmpsl
sub
aam
sahf
jmp
test
sbb
sub
leave
outsl
add
xchg
mov
mov
inc
mov
xor
fstl
push
jl
inc
mov
inc
rolb
or
in
test
movsb
aaa
js
or
jae,pt
inc
scas
pop
fsubrs
lret
or
lret
sub
cmp
push
mov
dec
and
outsb
iret
sbb
mov
inc
jo
jle
xor
mov
fimull
pop
in
push
push
daa
dec
loope
xor
push
sub
iret
xchg
xlat
scas
int
mov
push
jmp
jae
testb
sbb
mov
data16
mov
rcl
sub
ret
pop
push
out
andl
dec
fisttpl
fucomp
mov
ret
sti
scas
jle
loopne
subb
mov
xorl
push
filds
xor
push
cmp
in
xor
in
outsb
sub
inc
mov
mov
xchg
cmp
lret
fmuls
sub
aas
imul
push
cmp
pop
mov
fidivrs
xchg
jl
and
int3
xchg
inc
xlat
dec
in
xchg
jo
pop
xchg
int3
xchg
cs
lcall
pop
insl
mov
dec
mov
dec
mov
mov
int
or
fs
sahf
xchg
fistps
je
pop
xlat
in
int
dec
call
cmp
mov
icebp
enter
dec
cmp
lock
ror
fincstp
ljmp
in
pop
out
xchg
mov
mov
divb
out
enter
add
xchg
jg
cmp
mov
je
pushf
shrb
cmp
sti
or
adc
xor
pop
and
hlt
or
ljmp
repz
fcompl
sbb
loope
mov
dec
mov
pop
adc
pop
push
ja
scas
jne
lods
inc
mov
lret
xlat
ret
pop
nop
jmp
mov
mov
lock
mov
int3
jmp
or
mov
dec
out
ds
les
jbe
lea
pusha
clc
push
sub
fcomps
push
pop
sbb
mov
adc
aad
pop
jnp
bound
rolb
js
jae
loopne
inc
pop
rorb
jns
shufps
dec
lahf
hlt
js
lea
lret
lahf
mov
sub
mov
mov
shl
ficoml
std
sbb
sbb
adc
cmp
mov
mov
insl
adc
jb
pop
xor
stc
xchg
loope
add
dec
cltd
sub
data16
movsb
call
jp
aas
adc
pop
imul
or
nop
mov
mov
cmpsl
dec
fs
adc
sub
fcmovb
cmp
imul
jmp
loopne
in
pop
xchg
ljmp
push
mov
out
sub
repz
push
test
pop
xchg
pop
lds
icebp
inc
ljmp
push
inc
enter
arpl
push
decb
and
cs
pop
dec
sub
add
add
push
jne
xor
test
scas
test
add
cli
ja
daa
imul
inc
lods
inc
sbb
sub
pusha
xlat
jmp
loopne
jno
or
daa
mov
ret
dec
popa
xor
or
mov
test
pop
xor
adc
inc
add
jmp
mov
fadds
sub
push
je
gs
xor
fistpll
inc
push
sbbl
lods
ret
xlat
loope
pop
out
sbbb
int
cs
jl
in
push
and
jg
lods
push
fstpt
negb
xor
das
xchg
mov
or
lds
inc
and
cli
xchg
repz
pcmpeqd
scas
sarb
aad
aam
andb
repnz
in
pop
lods
xchg
out
xor
sub
mov
adc
mov
int
inc
decl
scas
mov
xchg
roll
fwait
enter
jb
cs
inc
xchg
sub
xchg
in
aad
sub
shll
add
pop
cmp
andb
mov
mov
cld
xchg
jne
nop
adc
inc
lahf
ss
cltd
cwtl
cmp
aad
pop
sti
nop
push
adc
clc
cmc
sbb
aaa
xchg
xchg
mov
mov
cld
jnp
das
cmp
cmpsl
dec
add
out
insl
push
and
out
xor
imulb
loop
test
sub
xchg
loopne
out
sub
mov
push
das
push
sahf
outsl
mov
fimuls
jnp
adc
nop
aad
dec
aam
lea
shrl
xchg
movsb
cmp
and
cmc
inc
movsl
cmp
push
mov
and
out
pop
sub
xor
mov
push
sbb
test
ja
jne
lahf
and
pop
push
lcall
xchg
sbb
cwtl
daa
sub
lcall
jb
leave
xchg
xchg
lret
enter
dec
xchg
sbb
stos
push
decb
xchg
push
lods
cmp
outsb
xor
out
inc
push
fldt
pop
repz
pop
scas
xor
mov
in
push
aam
scas
sbb
xor
bound
cwtl
cwtl
cmp
xchg
outsl
mov
lea
hlt
xchg
scas
push
xor
mov
push
into
xor
sub
ret
out
gs
xchg
out
call
movsl
xchg
cmp
fstps
push
pop
sub
add
call
jmp
ret
arpl
mov
mov
and
push
in
jnp
cmc
mov
in
pop
outsl
xchg
xor
sub
mov
lret
cwtl
push
orb
mulb
mov
push
enter
daa
outsb
add
in
repz
punpcklwd
cmp
sub
hlt
outsb
push
fwait
dec
sbb
xchg
pop
cltd
cli
xchg
mov
add
sub
and
out
hlt
fildll
lods
mov
push
jne
jmp
jbe
add
ljmp
mov
stos
popa
cli
test
ds
xchg
jl
int3
test
std
fldln2
fwait
scas
cltd
test
mov
fiaddl
or
jmp
int
cmp
dec
fbstp
cmp
mov
shlb
add
push
or
fcoms
lods
cwtl
std
pop
sbb
jp
inc
sub
inc
scas
out
shlb
inc
int
mov
out
test
jmp
cmp
nop
insl
cmp
pop
icebp
pop
and
div
mov
mov
ficoms
or
dec
jge
inc
icebp
xor
sbb
int
sbb
rol
icebp
push
jae
fcom
hlt
add
cmp
roll
mull
in
sub
push
push
inc
pushf
mov
push
xor
ja
xchg
movsb
test
out
inc
mov
mov
in
sbbb
pop
lds
andb
loope
in
rorl
xchg
mov
jp
jae
ss
test
jle,pn
bound
pop
lret
repz
mov
mov
outsl
stc
pusha
push
fbstp
scas
in
push
pop
setle
mov
sub
ret
pushf
jno
lret
sbb
mov
in
test
ret
stos
push
pop
jmp
ljmp
call
xlat
push
push
inc
pop
lods
lcall
sbb
and
shl
les
loope
cmp
pop
xchg
les
sbb
nop
push
sbb
in
xor
mov
inc
and
lods
scas
nop
outsb
xor
sub
fistl
mov
shr
into
mov
js
push
pushf
xor
lahf
inc
xchg
sahf
stc
or
adc
pop
push
sbb
cmpsb
mov
cmpsl
loope
push
add
jg
xchg
mov
mov
push
stos
out
in
repnz
push
mov
movsb
adc
dec
jg
push
shrl
dec
and
out
cld
mov
shll
jb
arpl
pop
cmpsb
xchg
sti
xchg
imul
sbb
xchg
ja
and
jmp
leave
shrl
mov
cs
or
in
cmp
sbb
insl
pop
jae
mov
sbb
sarb
mov
popa
push
je
cltd
inc
jnp
repnz
cmpsb
push
push
add
and
pop
mov
inc
dec
adc
sub
mov
jg
les
cmp
dec
and
push
insb
mov
sbb
xchg
inc
mov
and
mov
push
dec
xchg
push
adc
jg
dec
or
testl
std
mov
nop
daa
push
push
dec
pop
cmp
das
mov
stos
lds
push
push
cmp
push
call
push
xor
cmp
inc
in
add
jae
ljmp
hlt
inc
add
hlt
jecxz
push
fcoml
xchg
push
fucomi
inc
dec
dec
loopne
data16
xchg
inc
addr16
jae
movsl
cmp
aam
iret
add
scas
push
je
sub
subl
dec
outsb
pop
mov
xor
cmpsl
test
aas
lds
push
cmp
cmpsb
lock
fwait
xchg
pop
ret
dec
xor
sub
data16
add
add
stos
les
rclb
fimuls
dec
loopne
cs
fcmovnb
lock
jns
cmp
sub
mov
dec
repnz
dec
lahf
xor
and
cmp
lcall
mov
jge
push
sub
push
call
es
lret
subb
insl
cmp
or
testl
adc
bound
and
jmp
fsubrs
ficomps
iret
push
add
xor
inc
lcall
out
xchg
xor
lea
mov
pop
pusha
mov
pop
pop
mov
jnp
andb
mov
andb
xchg
je
inc
mov
sarl
pop
out
push
jbe
repz
fwait
inc
xchg
int
and
add
mov
push
xor
pop
shlb
nop
fldenv
js
fistpll
popf
rclb
mov
das
push
push
es
movsb
lods
push
sub
and
mov
cmp
popa
insb
add
push
and
mov
mov
lret
mov
enter
movsl
rorb
inc
fdivs
inc
jmp
push
iret
dec
jb
mov
aam
shlb
popa
dec
movsb
popf
stc
mov
lds
sub
out
inc
mov
mov
loope
sbb
and
dec
in
outsl
cmp
pop
test
xor
arpl
and
mov
and
add
add
dec
nop
add
sahf
ret
mov
out
ljmp
cmp
mov
lock
ds
lock
xor
jnp
xor
gs
cmp
fimull
lcall
push
in
cld
sub
mov
adc
loope
xlat
or
stos
rolb
gs
lcall
lret
bound
scas
mov
stos
test
lcall
mov
dec
es
sbbl
ret
ljmp
push
adc
jae
into
adc
ficoms
and
mov
out
xchg
popa
mov
pushf
jmp
into
fdivrl
scas
std
push
xor
mov
dec
insl
add
repz
xchg
cmp
xlat
inc
nop
sub
sbb
repnz
jbe
je
dec
popa
popf
lods
jae
push
mov
lock
sbb
pushf
div
lret
xchg
push
dec
pop
js
push
sahf
stc
jge
fldt
dec
shl
in
stos
addr16
fidivrs
insl
adc
sub
jns
fstpl
add
pop
adc
loop
cmp
adc
subl
decb
cld
or
sub
rolb
mov
sub
pop
add
dec
mov
sbbl
popf
stos
loopne
xchg
je
dec
stos
cmpsb
cmpsb
and
rorb
pop
sbb
push
push
js
dec
push
mov
dec
repz
js
cwtl
dec
movsl
and
in
jbe
mov
out
xchg
enter
into
shl
push
imul
sub
pop
mov
lret
jno
in
sbb
ss
scas
and
push
dec
mov
jns
xor
or
clc
add
sub
mov
inc
sub
sbb
jns
cmc
into
adc
test
insl
adc
out
addr16
imul
dec
mov
mov
subb
xchg
mov
cmp
fldt
cmp
stos
inc
enter
cld
or
sarl
iret
adc
sbb
shl
add
xchg
push
mov
loope
das
and
inc
scas
lret
cmp
sti
rcrl
push
inc
pop
cmp
dec
outsb
repnz
lret
push
inc
jmp
xor
cld
inc
cmc
in
enter
adc
push
test
ja
add
mov
test
jg
add
shr
push
daa
add
out
call
adc
and
lds
mov
icebp
test
dec
hlt
int3
mov
daa
jge
sub
sarl
pushf
lret
dec
cmp
shr
mov
data16
pop
fdivrs
out
mov
push
les
repnz
xor
cmp
lods
loope
xlat
cltd
mov
jp
pusha
or
and
mov
sub
dec
popf
dec
and
jecxz
pop
std
ja
es
pop
add
repnz
arpl
xchg
pop
cmpsb
cli
pop
jge
cmp
enter
pop
mov
mov
push
xlat
pop
jp
scas
sub
pop
je
jp
loope
rclb
test
scas
mov
shl
cld
or
ss
pushw
loope
dec
mov
jnp
sbb
jb
lods
loop
orb
mov
out
push
cmp
mov
fucomp
enter
clc
fnsave
fwait
mov
sbb
cld
icebp
dec
fisttpl
test
add
scas
incl
outsb
sets
fdivrl
and
jbe
sahf
xor
stos
popa
mov
into
cmp
int3
xor
push
push
icebp
mov
stos
jle
stos
into
mov
jecxz
xchg
cmc
fstpt
lock
movsb
or
daa
lods
mov
jno
and
push
lods
imul
out
jge
xor
inc
fdivrp
outsl
loop
mov
fisubl
lcall
mov
cmp
popa
sub
outsb
rorb
sub
shll
push
pop
shlb
push
inc
adc
fsubrs
in
sbb
pop
and
add
mov
repnz
cmpsl
dec
and
into
arpl
outsl
into
push
xchg
jb
lock
mov
insl
clc
inc
cmp
cmpsb
pop
and
sub
add
sbb
fbld
popa
mov
add
sbbl
daa
stos
jp
test
push
mov
adc
push
fldl
pusha
jp
iret
enter
mov
sbb
dec
mov
out
or
cmp
imul
sub
mov
or
and
or
into
jno
daa
mov
fidivrl
movsb
jb
pop
xor
xor
and
push
mov
cmp
mov
mov
test
inc
sub
dec
mov
insl
loop
xlat
mov
add
mov
cmp
xsha1
cmpsb
mov
mov
stos
sub
sti
sbb
test
gs
mov
add
mov
pusha
adc
in
xchg
mov
mov
adc
ret
lea
inc
pop
out
inc
stos
adc
xorb
inc
fwait
cmp
xchg
dec
sbb
ret
insl
sbb
mov
add
mov
cmpsb
daa
adc
fdivl
pop
arpl
inc
call
test
jg
les
jle
rclb
push
mov
lret
sti
out
add
pop
fnstsw
rorb
and
lods
push
aad
mov
sbbl
xor
movsb
mov
inc
ret
jae
inc
insb
outsl
or
out
jns,pt
push
leave
mov
mov
and
daa
xor
dec
in
mov
rorl
dec
out
xchg
mov
xchg
lahf
subb
adc
jmp
aas
int3
arpl
int
into
xchg
shlb
add
sbb
fbstp
xchg
mov
add
pop
mov
mov
adc
push
mov
push
loopne
xor
mov
xchg
push
scas
addl
sarl
movsb
jne
aad
pop
inc
push
notb
cmpsb
pushf
dec
sahf
xor
jae
cmp
mov
or
fdivl
lret
and
xor
push
jne
icebp
lock
lods
pushf
mov
add
jl
in
std
pop
fimuls
or
popf
scas
hlt
pusha
or
cmpsb
pop
aaa
dec
xor
mov
sub
mov
sbb
mov
dec
dec
cltd
es
in
outsl
decl
dec
pusha
inc
fs
push
xor
mov
push
dec
iret
pop
and
shll
adc
lahf
sub
fwait
repz
sarb
cmp
jne
popa
pop
arpl
jp
orb
sbb
cmp
loopne
xchg
adc
rcrl
xchg
xor
fdivrp
adc
test
push
jmp
inc
fldl
and
out
push
fs
shl
popa
push
testl
xor
xchg
push
fmull
shrl
ret
sbb
lds
lods
dec
mov
or
mov
stos
cmpsl
das
cmp
sti
loop
lcall
cli
jno
loop
scas
xchg
xrelease
inc
xchg
jb
push
pop
sub
in
and
adc
cwtl
dec
mov
or
pop
mov
mov
adcb
dec
test
outsb
lcall
loope
out
or
add
jmp
mov
cmp
loope
xchg
add
sbb
aas
in
xorl
mov
lods
cmpsb
push
jno
int
sbb
stos
xor
and
xlat
add
sti
mov
test
mov
addr16
sub
movsl
or
in
int3
stos
repnz
in
jno
in
xchg
in
adc
xchg
addr16
cmp
popa
cmp
addr16
ret
in
mov
mov
setne
ja
out
mov
mov
repnz
xchg
or
sahf
xchg
or
insb
addr16
pop
mov
fisubl
arpl
test
mov
cmp
repnz
in
out
ret
mov
push
adc
movsl
ds
mov
ret
in
inc
je
cmp
fs
rolb
sahf
sub
and
xchg
mov
push
cltd
in
fwait
lret
es
pop
loop
jmp
mov
push
js
jae
push
sbb
rcl
cwtl
and
leave
icebp
mov
and
inc
dec
sbb
mov
pop
sahf
in
add
cmp
fsubs
adc
imul
cmp
lahf
xchg
xchg
out
pop
mov
ljmp
pop
andb
add
outsl
jnp
mov
ret
arpl
cli
sbb
loop
ss
cltd
imul
enter
es
dec
push
or
js
leave
flds
dec
cmp
cmpsb
xor
adcl
inc
mov
int3
and
cs
push
decb
and
jne
aas
test
mov
lcall
inc
gs
lock
pop
addr16
jp
int3
mov
mov
push
call
popa
rcrl
aad
outsl
clc
mov
std
sub
in
add
stos
ljmp
inc
rcr
lods
jecxz
cmp
or
push
pop
lods
aaa
dec
ficoml
sub
and
int
fadd
insl
pop
jecxz
sbb
mov
cld
test
lret
pop
int3
fimuls
add
mov
es
push
loop
shl
bound
add
xor
add
imul
add
jecxz
pop
jge
adc
push
scas
mov
and
nop
fisttpll
cmp
pop
lcall
sub
test
sub
push
adc
mov
add
push
mov
insb
add
repz
jle
pop
push
push
xchg
stos
das
addr16
pop
outsl
jno
aam
ja
aad
mov
insb
jl
mov
add
aas
fildl
mov
adc
fcomps
imul
outsb
jbe
mov
jns
daa
outsb
xor
sub
add
shlb
sub
out
outsb
cmp
imul
dec
inc
xchg
dec
loope
gs
xor
inc
mov
pop
cmp
data16
pop
push
daa
xchg
sbb
leave
into
fdiv
repnz
dec
lret
fildll
xchg
mov
pop
arpl
pop
sbb
fs
jne
push
cmp
fnstsw
enter
and
push
gs
xor
stc
dec
mov
xchg
call
mov
cmp
out
jbe
decb
and
cmp
repz
push
mov
xor
pusha
ljmp
fisttpll
push
and
jns
stos
not
pop
add
arpl
rcl
xor
mov
lcall
lods
es
jne
dec
pop
jb
sti
ja
sub
mov
push
sub
leave
bound
mov
pop
jb
adc
shrl
jl
adc
or
subl
lret
bound
scas
aas
pop
add
fidivrl
shll
pop
push
imul
fs
jle
inc
ficoml
adc
fisubl
jg
shrb
push
aad
and
pop
enter
gs
lods
pop
inc
dec
xchg
dec
fcomp
cld
mov
rclb
dec
xor
mov
pop
ljmp
jo
push
adc
xchg
lds
outsb
sbb
add
jns
xor
out
or
xchg
std
sahf
mov
jg
push
iret
fwait
iret
push
gs
adc
mov
adc
insb
add
push
mov
mov
dec
rcl
ror
fsub
les
ja
lret
and
jns
mov
or
add
mov
mov
test
std
adc
mov
mov
inc
sub
sub
or
pop
mov
sub
sub
xor
and
inc
xor
shrb
loopne
pushf
repnz
roll
cwtl
add
and
mov
xchg
sub
rorl
xchg
mov
sbb
cmp
adc
cmp
testl
ficoms
jo
or
jge
testl
gs
pop
xchg
in
das
call
mov
out
jne
out
add
enter
shrb
dec
data16
mov
fidivs
push
mov
add
xchg
sbb
and
ret
inc
xchg
push
jnp
cld
push
out
cmpsb
cmpl
or
add
pop
rcrl
pop
in
mov
fucomip
jns
out
dec
mov
push
notl
in
pushf
stos
inc
push
mov
cwtl
xchg
jne
cmp
ja
cmpsb
sbbl
jbe
push
and
cmc
gs
in
mov
roll
nop
ret
sub
hlt
mov
movsb
cmpsl
xor
out
jns
mov
mov
loop
decb
pop
jbe
ljmp
and
push
push
and
mov
xchg
mov
popf
sahf
xor
dec
out
mov
jg
dec
and
jnp
inc
inc
sub
cmp
in
mov
push
mov
and
lock
and
inc
mov
sbb
ret
push
mov
fsubr
cmp
fdivl
xor
mov
mov
shll
mov
test
stos
ljmp
fmulp
pop
jne
mov
inc
adc
jecxz
sbb
or
jns
scas
push
ficompl
mov
jbe
stc
mov
pusha
jge
mov
dec
out
aaa
xchg
lret
and
arpl
ja
add
xor
push
nop
stos
jecxz
cmp
into
pusha
testl
inc
xchg
enter
sub
mov
movl
mov
aad
fnsave
scas
adc
shrb
nop
inc
outsl
fisttpll
pushf
pusha
add
insb
jnp
stos
aas
int
out
add
es
pop
push
jmp
jb
mov
stc
mov
imul
fxam
test
aaa
mov
das
mov
or
lds
fstpt
les
inc
adc
out
mov
mov
mov
loope
cltd
rorl
and
imul
fmuls
push
fisttpll
rorl
and
inc
push
push
inc
mov
sbb
xchg
ljmp
and
test
jns
push
stos
pop
js
pop
adc
xchg
jmp
das
enter
out
sarl
stos
lock
je
and
cmpsl
add
xchg
lock
aas
bound
rol
mov
aam
insl
repnz
sub
xor
pop
cwtl
push
push
je
clc
pop
push
loop
test
into
mov
daa
shlb
cltd
test
add
mov
mov
fdivrl
addr16
leave
pop
lds
sub
out
mov
sub
push
jecxz
mov
adc
fldt
sbb
add
jbe
mov
add
negl
xchg
ljmp
pop
out
pusha
pop
pushf
ss
add
mov
mov
fsubrs
inc
xchg
jge
hlt
in
insl
jb
ret
mov
test
ret
adc
dec
js
js
push
lea
out
and
mov
jle
pushf
mov
mov
xor
xor
andb
xor
test
jge
jmp
adc
sub
loop
or
push
xchg
test
mov
lods
inc
adc
data16
and
fnstenv
inc
xchg
push
xor
sbb
lcall
js
cmc
cwtl
cmp
leave
push
imul
mov
movsl
bound
adc
fldcw
push
sbb
cmp
mov
rcr
repnz
push
push
cli
pop
sub
pop
imul
adc
adc
cs
aad
mov
loope
push
test
cli
stos
pop
testl
cwtl
mov
lret
loope
xchg
and
test
sbb
xchg
pop
or
pusha
loop
aas
or
mov
jae
in
je
lcall
sti
inc
adc
push
xor
push
push
jae
inc
jl
sahf
cltd
sti
inc
cltd
mov
dec
int3
mov
ret
stc
mov
xor
out
lds
xor
retw
add
and
add
push
inc
lcall
stc
pop
fistps
pusha
dec
push
mov
imul
mov
shlb
mov
mov
or
pusha
pop
sub
pop
pop
cmp
ds
loope
push
mov
loopne
jns
test
xchg
aam
cltd
shlb
xor
xchg
inc
clc
pop
xor
inc
xchg
cld
xchg
lcall
sub
pop
adc
in
sahf
cmpsl
xchg
xor
out
mov
xchg
pushf
jo
mov
push
and
pusha
mov
call
dec
ss
shll
mov
lds
rorl
push
cltd
rorl
mov
mov
or
sub
mov
mov
sbb
lock
popl
cmpsb
dec
loope
mov
sarb
adc
lahf
push
mulb
addr16
mov
arpl
repz
xor
xchg
shrl
push
pop
mov
mov
cmp
add
stos
out
and
pop
rolb
xor
repz
and
ret
outsb
adc
mov
jmp
call
xor
jo
popa
shl
dec
or
and
lods
add
inc
lcall
imul
stos
push
imul
loop
jle
push
push
mov
rorl
mov
jge
subl
arpl
les
xor
out
mov
or
mov
data16
or
push
pop
rclb
sbb
subb
faddl
push
sti
or
cmc
orb
ljmp
ss
outsl
xchg
pushf
xchg
mov
mov
icebp
xor
mov
xchg
adc
push
jne
jp
je
inc
lods
mov
dec
jecxz
insl
xchg
cmp
dec
cwtl
mov
add
int3
dec
ja
push
mov
enter
inc
in
lods
mov
add
jns
and
pusha
data16
inc
xlat
lcall
pop
cmp
cwtl
pop
cli
add
es
leave
pop
adc
xor
es
js
mov
sub
push
add
dec
jmp
xchg
mov
mov
insl
mov
stc
push
jecxz
pop
cmpsb
or
push
jle
pop
adc
adc
or
jae
cmp
cli
nop
mov
out
test
xchg
test
mov
push
xchg
lods
xchg
adc
repnz
cmc
cli
mov
xchg
sbb
inc
lea
inc
fistps
in
mov
mov
pusha
pop
sti
push
jmp
dec
lds
aaa
leave
hlt
push
and
fidivrs
lods
subb
xchg
test
jae
call
sub
jb
dec
jp
mov
cmpb
daa
add
cmpb
out
ja
add
mov
inc
fidivs
cmp
inc
faddp
dec
xchg
sub
jg
pop
outsb
ret
mov
in
addl
and
xor
push
popf
mov
inc
or
xor
int3
pop
test
lret
bound
cmp
popa
mov
cld
xchg
data16
sti
test
in
shrb
push
out
sahf
xchg
test
or
pop
dec
rorb
mov
orb
cmp
ja
std
gs
pop
and
enter
sbb
movsl
push
lods
xlat
mov
add
xor
cwtl
dec
pop
xlat
pop
aas
xchg
or
movsl
sbbb
sub
mov
or
jbe
push
add
les
jg
xchg
xchg
in
push
out
mov
jp
mov
subl
mov
sub
out
sahf
jmp
pop
mov
andb
movsl
insb
push
add
out
ja
inc
push
fildll
cmc
xor
subb
ret
outsb
xchg
dec
ds
dec
aam
cmc
aas
into
xor
das
and
out
add
mov
dec
xchg
add
dec
fs
aad
push
fucomip
jg
lds
aad
and
xchg
sbb
jae
sub
loope
cmp
inc
jae
stc
enter
leave
test
mov
aas
and
and
xchg
push
lods
mov
lcall
shl
fucom
lds
movsb
pushl
pop
xor
or
ja
lods
out
dec
fmulp
pop
fstpt
lcall
aad
mov
mov
and
jno
cmp
es
out
mov
stc
push
std
mov
xchg
jb
jae
cmp
pushf
insl
sub
and
lods
je
mov
roll
xchg
sbbl
lock
imul
jl
fnsave
lahf
cmc
xchg
xchg
sti
fwait
dec
mov
or
das
cmp
xchg
push
mov
rorl
push
or
cmp
mov
lds
and
pop
das
lea
pop
ror
daa
sbbb
mov
dec
cli
sbb
cmpsb
xchg
cmp
sub
sub
pop
xchg
sub
xchg
shll
mov
pop
pop
fdivl
mov
hlt
fsqrt
xchg
lret
in
popf
jo
mov
mov
lret
inc
sbb
ficomps
shl
jbe
push
and
leave
sub
stos
fbstp
shll
repz
sbb
in
pop
and
mov
pop
sbb
cmp
push
lret
bound
and
sti
rolb
shl
fldcw
jb
mov
mov
jge
in
rcrl
gs
clc
lcall
jmp
mov
push
inc
loope
adc
cltd
adc
je
mov
lret
in
int
cwtl
es
push
xchg
cld
mov
imul
xchg
xor
mov
clc
jnp
dec
xchg
xor
fwait
lds
jecxz
cmp
pop
cmp
mov
push
add
test
sub
sub
sbb
fwait
into
ret
mov
mov
clc
lock
jo
push
lods
aad
cmp
xor
push
jb
out
test
mov
mov
icebp
xor
xor
xchg
push
sahf
xchg
mov
push
in
jnp
mov
les
mov
aas
push
popf
push
sub
push
cmp
mov
jno
std
lcall
es
dec
adc
popa
lods
pop
repz
xchg
adc
mov
data16
cmp
push
push
add
out
mov
mov
lods
inc
jp
cld
clc
fwait
push
bound
lret
inc
cmpsl
jo
aad
pop
icebp
add
lods
inc
sbb
clc
xchg
arpl
and
lea
add
jmp
cmp
out
mov
test
jns
addr16
mov
mov
cmp
in
sbb
pinsrw
add
or
lahf
int3
shrb
cmp
and
aad
sub
lcall
push
add
es
inc
rcr
mov
pop
add
pop
cmp
jmp
ret
xor
movsl
inc
adc
mov
sub
sub
push
jo
and
les
sub
dec
pop
xor
sbb
test
mov
rsm
stc
fnsave
or
repz
ss
mov
test
jne
loope
and
outsl
pop
sbb
xorb
negl
lcall
stos
outsb
adc
push
inc
vprotb
int
jb
mov
jno
js
pop
mov
loopne
push
xchg
fnstsw
aam
cmpsl
imul
xchg
jl
inc
imul
cmpsl
pop
mov
rcrb
sbb
ds
out
out
jl
adc
cmp
fistpll
mov
ljmp
insb
or
cltd
test
sbb
cmp
shlb
inc
fucomi
mov
inc
dec
xchg
mov
mov
jns
aaa
sub
adc
cmpl
bound
push
pop
pop
adc
mov
jge
jp
shlb
adc
sub
xlat
idivl
out
flds
add
aam
adc
cmp
add
mov
mov
mov
popf
std
push
jmp
movsl
int
xchg
inc
ret
loope
sbb
sbb
adc
dec
xchg
lods
mov
dec
inc
jle
clc
inc
mov
mov
dec
in
mov
pop
daa
ss
mov
stos
jl
aaa
loop
mov
ja
and
fsubl
inc
cltd
mov
cmpsb
ljmp
push
loope
sbb
in
sti
adc
dec
add
jmp
mov
movsl
mov
js
loope
stos
or
xchg
cmp
imul
shrl
rorl
or
mov
imul
insb
add
cs
aad
movsl
mov
adc
ret
add
scas
iret
repnz
roll
push
pop
and
popa
xchg
mov
adc
aaa
mov
popa
leave
pusha
xchg
pop
movsl
cmp
aas
idiv
jecxz
ret
loopne
mov
pop
cld
mov
test
cmp
cmpsl
ret
pop
xchg
jl
push
jb
test
inc
push
in
insb
mov
push
mov
push
movsb
jp
push
sub
call
lea
ret
gs
push
dec
inc
pop
and
sub
dec
sbb
test
cmpsl
dec
call
sarb
sbb
mov
xor
outsb
push
lods
jmp
sbb
mov
add
jnp
out
fdivp
inc
xor
pop
dec
add
xor
push
out
cli
pop
cmp
lret
cld
add
mov
dec
sub
hlt
fwait
int3
mov
fisttpl
roll
call
cmp
test
out
ret
imul
cmp
adc
call
sbb
add
push
mov
outsl
or
imul
out
aaa
mov
sub
inc
pop
sub
in
jg
and
pop
pop
aaa
into
sbb
jecxz
sbb
dec
dec
stos
shrl
jge
sub
das
mov
sahf
das
xabort
in
mov
cmc
and
fisttps
sbb
xor
bound
faddl
xchg
cmc
scas
mov
jae
dec
mov
test
les
filds
dec
dec
scas
fisubl
sti
test
shrl
xchg
scas
pop
cmp
icebp
gs
cmc
mov
add
mov
pusha
imul
gs
dec
movsl
into
in
cmpsl
in
xchg
scas
jbe
mov
arpl
std
loope
pop
and
xchg
sbb
imul
cmp
sub
dec
lock
test
insl
out
and
jne
inc
fmul
mov
mov
out
ret
pop
fildll
mov
push
imull
mov
pop
out
bound
scas
jo
movzwl
sarl
cmp
xlat
mov
outsb
sbb
pop
dec
mov
imul
outsl
mov
sub
jmp
andl
aam
testl
add
outsb
jo
pop
cmp
or
shlw
aad
pop
repz
pop
mov
ficoms
push
rolb
fisubs
xor
jmp
bound
xor
jle
sbb
pushf
sub
dec
pop
shl
and
push
lods
mov
mov
dec
loope
mov
enter
cltd
mov
xlat
data16
push
repz
mulb
sbb
test
int3
add
cmpsl
cli
or
sub
xor
xor
lock
in
repnz
adc
add
cmp
pop
cmpsb
sbb
inc
jb
or
or
sbb
adc
cli
or
pop
mov
jae
mov
es
push
or
add
imul
jbe
pop
or
outsl
dec
and
add
outsl
cwtl
xchg
pop
adc
cmpsb
add
and
loope
ficomps
sbb
sahf
scas
out
dec
push
mov
test
fildll
int3
pop
pusha
add
popa
aas
add
mov
sbb
adc
mov
xchg
loop
fisubrl
fistpll
inc
mov
and
mov
cmp
pop
in
test
or
fsubl
lret
cmp
fldt
jbe
fisubrs
pop
out
cld
test
mov
mov
es
hlt
arpl
ds
adc
sbb
gs
int3
pop
pop
adc
sub
pop
fdivr
xchg
cld
rclb
clc
mov
fstpt
xorb
outsb
push
orb
or
mov
xchg
cs
cmp
jl
out
sub
bound
fbstp
adc
lret
mov
xor
stos
jle
imul
jge
dec
sub
xor
lods
ret
loope
cmc
into
nop
insb
ja
mov
xchg
bndstx
jno
hlt
jno
sub
mov
sti
add
lahf
lds
cmpl
sub
scas
pop
lods
mov
out
jb
rolb
xor
xchg
movsl
or
jle
jno
xchg
mov
sub
inc
in
stc
mov
lret
outsb
cs
cmp
popf
xchg
cmpsl
or
sahf
dec
fiadds
mov
mov
push
sub
or
out
loopne
lea
jecxz
mov
add
mov
les
fsubl
cmp
jb
insb
je
dec
pop
iret
mov
in
mov
outsl
xchg
inc
daa
enter
aam
dec
dec
sarb
out
sahf
mov
add
dec
scas
mov
xchg
shlb
ret
loop
sbb
lods
push
push
cmc
aas
into
and
cmp
pop
dec
pop
pop
mov
rclb
ret
mov
dec
push
outsl
and
xlat
push
call
push
movsl
insb
cmpsb
sahf
lods
call
sub
push
sub
inc
in
les
and
lret
ret
loop
xor
dec
dec
fisubl
nop
sub
inc
lea
dec
bnd
push
dec
push
out
in
push
mov
loope
push
jno
jmp
or
push
lods
sub
sbb
daa
push
rorb
mov
jmp
inc
mov
cli
inc
sbb
mov
movsl
inc
sti
and
mov
in
adc
flds
testl
stos
lret
jb
mov
dec
sarb
and
in
and
push
in
jg
lcall
xchg
fsubrl
dec
mov
dec
push
inc
lret
or
push
mov
rcrb
je
lahf
scas
sahf
mov
rcr
scas
fimuls
xor
sub
aad
imul
divl
mov
vpaddw
and
inc
mov
fwait
mov
sbb
mov
ret
jg
pop
sbb
pop
aas
cs
imul
int3
dec
arpl
xchg
popf
or
mov
movsb
inc
fadds
adc
je
imul
dec
jmp
in
inc
and
inc
add
inc
xlat
xchg
fstps
mov
pop
loope
mov
repnz
adc
mov
jns
dec
in
out
pushf
and
imul
pop
stos
mov
scas
mov
mov
or
xchg
adc
and
iret
inc
mov
xor
push
mov
lods
sub
in
xchg
xor
adc
mov
cmc
add
mov
insl
popa
sbb
pop
rclb
mov
jp
in
stos
push
and
adc
push
lret
adc
jo
lea
test
push
repnz
stos
and
dec
jl
insl
jg
sub
push
push
cmp
cmp
loope
or
jecxz
dec
inc
dec
popf
xor
push
lret
and
aad
fs
pop
fnstenv
js
xchg
mov
ds
daa
aam
int3
add
cwtl
mov
or
jge
out
sti
aad
test
add
cmp
jle
xor
out
das
mov
and
pusha
add
adc
push
add
loopne
pop
es
jnp
stos
sti
mov
lds
ss
imul
adc
lods
faddl
jp
mov
push
push
xor
jp
test
and
pushf
lds
mov
sbb
dec
pop
mov
mov
addl
or
sub
push
test
jmp
sbb
cmp
imul
sub
lahf
adcl
jb
inc
in
dec
fstpt
aam
movsl
cwtl
jl
push
inc
sbbb
jae
xor
xchg
sbb
ljmp
aam
dec
push
clc
mov
pop
imul
bound
imul
mov
ja
sahf
add
sti
test
shl
jge
pop
or
loopne
dec
mov
rolb
add
stos
and
sahf
mov
std
inc
jmp
aam
pop
subl
out
jno
cltd
test
dec
xor
inc
mov
mov
sub
movsb
in
jp
out
testl
xor
test
jae
call
lret
xchg
sub
ds
rorl
test
subl
icebp
push
pop
inc
push
push
pop
out
pop
cmp
add
sub
dec
enter
imul
in
sub
lods
xchg
xchg
mov
int
out
or
mov
repnz
and
cmovg
push
add
sbb
sbb
push
subb
and
or
cmp
test
pop
int3
mov
fldcw
lods
sub
inc
sbbb
xor
cmc
aad
push
popf
add
adc
movsb
mov
pop
xchg
mov
dec
repnz
add
insl
cmp
inc
inc
xchg
push
out
push
scas
xchg
int3
jbe
jae
das
xor
cmc
sbb
outsb
xor
leave
mov
sub
test
xchg
out
mov
sub
push
mov
int3
sbb
pop
mov
cmpsl
mov
pop
das
mov
xor
testl
cltd
enter
mov
out
sti
dec
adc
sahf
jle
lods
rorb
mov
jle
mov
pop
add
pop
xchg
jmp
repnz
mov
mov
loop
jae
imul
push
clc
xchg
mov
jb
sub
imul
hlt
rorl
or
xchg
adc
in
lcall
xchg
in
mov
test
fstsw
push
mov
lcall
inc
sub
mov
dec
pop
out
xor
insl
fs
in
pop
jmp
and
pushf
adc
loop
inc
ljmp
sbb
sbb
in
cmp
cli
mov
or
dec
xchg
cmpsl
lcall
inc
push
inc
outsb
repz
ret
pop
movb
jge
xchg
fsubr
ret
test
jne
cmp
subb
inc
mov
std
mov
sbbl
or
imul
push
addl
test
and
lret
mov
sub
fnsave
mov
mov
mov
test
les
jae
adc
mov
sub
sub
mov
dec
pushf
shll
ret
mov
sbb
and
data16
inc
cltd
ret
mov
hlt
subl
movsl
jle
jmp
iret
adc
inc
and
and
push
and
push
rcrl
xor
movsb
xchg
lds
cld
icebp
pushf
add
mov
mov
pop
and
push
insl
sbb
mov
arpl
sub
test
aad
mov
sahf
repnz
int3
jle
adc
out
or
mov
popf
xor
mov
xor
sbb
shrl
xor
sbb
ljmp
je
jp
cmc
inc
lahf
cld
lcall
bound
mov
inc
sub
cmp
adc
mov
fwait
inc
mov
and
jbe
out
cmp
pop
call
aam
andl
inc
fdivrs
dec
stos
lods
mov
gs
push
daa
loop
pop
cmp
mov
push
fisubs
push
lret
inc
in
mov
cs
seta
cmc
cmc
sub
cmpsl
or
push
jo
cmc
rcrb
add
rcrl
mov
out
push
add
in
je
sahf
xchg
testl
pop
in
dec
and
sti
shlb
xchg
repnz
mov
inc
popa
xor
xchg
js
lods
mov
leave
jbe
cs
dec
mull
dec
test
imul
into
mov
mov
sbb
imul
add
in
xchg
dec
push
push
mov
ret
jb
lcall
pusha
cmp
nop
cmc
xchg
and
sub
mov
out
movsb
mov
jg
scas
xchg
adc
dec
out
mull
cmp
mov
enter
dec
fcoml
add
lret
jae
stc
leave
mov
add
lahf
xchg
mov
xor
inc
out
nop
ds
dec
inc
add
jns
sbb
int
push
mov
jmp
call
mov
lret
pop
das
sbb
pusha
jp
dec
pop
cmpsb
jecxz
fwait
mov
pop
lods
js
hlt
in
push
js
mov
adc
inc
inc
xor
jb
adc
push
xor
inc
sub
mov
dec
arpl
cmp
out
into
out
jmp
dec
ret
sbbb
mov
adc
jle
pushf
and
and
lods
jle
lcall
loop
mov
lods
popa
clc
fsubp
jge
pop
jg,pt
and
or
and
add
sar
cmp
inc
ss
daa
cmp
and
sub
pushf
xchg
test
add
neg
xor
mov
cwtl
jg
mov
inc
loopne
pop
subb
cmp
sub
add
xlat
iret
shlb
std
push
cmp
dec
mov
adc
and
insb
rorb
sub
stos
out
pusha
push
out
sbb
ja
repz
cmp
loopne
and
fistpll
outsb
incb
push
rcll
shrl
and
mov
mov
fnstcw
loope
rcll
insl
mov
sbb
jle
mov
mov
aas
jnp
mov
and
xor
test
sahf
cs
dec
fdivrs
jecxz
popa
sbb
jge
cli
adc
jmp
fsubl
insl
sbb
add
scas
or
test
push
inc
shlb
mov
push
xor
push
push
aas
xchg
and
jnp
sub
mov
cmp
xor
sti
sbb
ret
test
inc
sub
jmp
sub
cltd
or
push
mov
xchg
cmc
data16
hlt
fcoms
push
jae
cwtl
das
add
sub
push
fildl
cmpb
fwait
mov
xor
aaa
cmpsb
jnp
pushf
adc
mov
adc
stos
cmp
and
cmp
loope
push
adc
stos
aaa
or
mov
outsb
shrb
aad
ljmp
mov
sbb
lock
inc
cli
les
push
sbb
fsubrl
xor
clc
out
repz
and
or
testb
jnp
lahf
popa
cmp
push
outsb
inc
cmp
insb
arpl
out
fwait
cmpsl
aas
ficoml
sub
jle
xlat
mov
xchg
lea
dec
pop
cmp
jno
or
mov
subl
bound
mov
mov
inc
dec
adcb
fildl
adc
dec
inc
repnz
mov
jmp
sbb
in
jg
push
xchg
adc
stc
popf
pop
jmp
xor
icebp
sahf
ret
cs
js
stos
adc
dec
fists
pushaw
in
dec
jecxz
std
adc
adc
jno
jo
jno
ret
jmp
cwtl
push
int
push
mov
push
sbb
mov
sbb
xchg
add
inc
sub
add
mov
mov
jle
push
ret
pushf
xor
js
or
movsb
mov
sub
aad
adc
imul
imul
rcrl
arpl
mov
add
jne
xor
call
or
jbe
repnz
inc
popa
jle
popa
fbstp
ss
and
adc
lods
out
iret
ljmp
fsubrl
sahf
adc
lock
xor
pop
mov
mov
cs
aad
lods
mov
out
adc
aas
sbb
pop
sub
cmp
das
sti
iret
dec
mov
mov
ret
ret
or
mov
sub
xchg
dec
inc
fs
cwtl
das
aam
jno
std
jle
dec
mov
push
insb
xor
push
xchg
mov
push
repz
xor
mov
xchg
inc
mov
clc
mov
stos
cmp
call
adc
mov
jge
jmp
xor
sub
rclb
out
and
stos
inc
add
gs
test
aas
mov
xchg
stos
retw
lret
or
mov
gs
xchg
xchg
cmove
mov
lahf
mov
filds
dec
pop
cmp
adc
sub
inc
cmp
fbstp
dec
pop
jne
mov
xor
jmp
inc
inc
aas
jno
and
or
cmp
push
sub
xchg
pop
repz
xor
jle
ret
scas
cltd
ret
shrl
inc
mov
jne
rcrl
jecxz
sub
xchg
sbbb
cmp
add
bound
fstl
sub
fdivrs
cmp
cmpsb
and
adc
xchg
jg
rorl
popf
lods
mov
in
sub
shrl
jmp
ds
lods
out
push
ret
mov
stos
loop
xchg
mov
je
mov
mov
mov
outsb
les
call
xchg
mov
dec
lea
push
ljmp
jmp
jae
bound
loopne
int3
pop
fistl
xor
and
scas
cmp
mov
or
push
outsl
popf
lods
push
jmp
push
jle
mov
jb
popw
and
xlat
cmp
mov
daa
das
lods
cmp
pop
in
or
cmp
into
xchg
lret
fdivrs
std
push
sbb
mov
or
movl
dec
xchg
and
in
test
mov
mov
sub
mov
push
jno
xchg
and
add
jle
sub
sub
sahf
xor
gs
push
pop
scas
nop
jmp
ret
xor
push
sbb
loopne
push
clc
and
repz
mov
push
mov
test
push
mov
xchg
pop
imul
in
lea
push
js
notl
jmp
mov
aaa
mov
clc
push
sti
add
andb
sarl
sbb
inc
mov
icebp
jmp
stos
sarb
dec
in
nop
cmc
cmp
clc
mov
sub
sbb
jecxz
and
and
aam
out
cli
clc
sbbb
push
lret
ret
sbb
push
sti
xor
adc
push
mov
or
lahf
jg
inc
inc
nop
das
inc
out
pop
out
das
jg
das
mov
cmp
shll
sarb
dec
jnp
ficompl
mov
adc
inc
adc
and
jbe
lcall
sbb
das
xchg
add
std
repz
sub
or
iret
stos
cmp
test
sub
xlat
addl
cmpl
cld
mov
idivl
pusha
ss
arpl
and
fs
sub
pop
sbb
push
pop
icebp
jnp
and
add
xchg
in
testl
ja
add
dec
inc
cmp
out
xchg
movsb
xchg
aam
sub
loopne
into
push
inc
or
adc
jmp
jno
mov
cmc
mov
mov
mov
test
sbb
jns
into
jae
mov
lods
stc
or
in
inc
in
cld
in
aam
mov
clc
mov
adc
xchg
cmp
dec
imul
or
jnp
addr16
push
mov
iret
mov
adcl
or
fistpll
lea
sbb
int
add
or
aam
dec
push
enter
xor
fdivl
ret
pop
and
call
or
lock
lock
lcall
inc
cmp
cwtl
fs
push
ja
cmp
xchg
sbb
mov
hlt
push
rorl
fstp
adc
shlb
adc
pusha
push
xchg
mov
andl
cltd
rolb
sub
and
das
cld
mov
in
cwtl
dec
pop
lret
aad
add
insb
add
test
rcrl
adc
and
xor
cwtl
std
add
sub
outsb
test
jno
push
js
inc
lret
subl
int
into
aas
decb
aaa
mov
push
push
testl
lahf
pushl
mov
push
pop
rcrb
mov
jmp
mov
out
daa
mov
jbe
mov
arpl
mov
sub
and
add
xlat
ret
int
dec
jecxz
mov
mov
les
lds
adc
sbb
or
mov
or
add
dec
sahf
rol
fs
loopne
inc
fimuls
jg
pop
gs
sarl
sbbl
mov
mov
leave
mov
mov
or
and
xor
lret
and
jmp
int
lods
inc
jp
mov
lret
mov
mov
idivb
mov
fcomi
adcb
mov
loop
shrb
xchg
pop
dec
es
and
ret
ljmp
ficomps
lret
jb
inc
loop
mov
mov
mov
push
push
je
cmpsb
out
aas
call
sti
mov
or
cli
jp
sub
int3
arpl
add
mov
das
insb
dec
in
dec
std
inc
sub
dec
sub
insl
or
jnp
in
testb
int
lds
imul
inc
rcll
xchg
insl
lea
xor
jbe
inc
push
xchg
push
push
insb
dec
in
ss
mov
mov
inc
rol
sub
mov
xchg
xor
testb
int
les
xchg
pop
mov
ss
inc
rcl
sbb
mov
mov
out
adc
mov
popf
jg
sbb
clc
call
mov
mov
jmp
aad
push
mov
inc
xchg
and
pop
repnz
pop
pop
cwtl
fcomps
inc
jmp
jle
fs
je
mov
adc
add
hlt
lahf
mov
imul
jp
sub
sub
stc
out
dec
ret
sub
add
ja
inc
or
out
cmp
inc
rolb
mov
inc
lret
pop
in
cmpsl
mov
mov
bound
repz
daa
subb
fidivs
jmp
fucomp
cmpsb
jecxz
inc
add
xor
arpl
das
pop
inc
sbbb
and
pop
repnz
and
push
out
mov
je
add
mov
jecxz
cli
roll
dec
dec
inc
mov
push
ljmp
test
xchg
out
and
testl
pop
mov
xorb
enter
inc
in
mov
orb
xchg
mov
bound
lcall
ret
lds
fsub
cmp
iret
mov
sti
pop
fs
je
lea
sbb
push
les
pop
cmp
cmp
cli
int
ds
and
jb
xchg
sbb
jecxz
js
cld
call
dec
outsb
mov
les
xorb
cmp
pop
mov
mov
fmulp
pop
jb
sbb
dec
xchg
imul
imul
sub
clc
sub
scas
dec
pop
loope
enter
scas
les
movsb
ja
lea
jb
xor
repnz
stos
repnz
xchg
mov
shll
ljmp
imul
xor
sbb
and
shl
pushf
push
stc
out
loopne
lcall
movsl
dec
out
inc
and
xchg
insl
add
pop
ljmp
push
or
sbb
jg
aas
nop
xchg
xor
outsl
jecxz
adc
int
sbb
jns
push
xchg
dec
ds
dec
repnz
out
outsb
push
cmpsb
pushl
sbb
lea
int
sbb
xchg
stos
jne
and
imul
mov
mov
sbb
leave
test
mov
sbbl
fimull
std
xchg
push
jmp
clc
sbb
xchg
sbbb
fistpl
shrb
rorb
sbb
mov
into
push
scas
and
xchg
orl
xor
add
xchg
dec
lret
sbb
stos
jg
lcall
dec
hlt
in
jns
repnz
sar
insl
push
jae
mov
mov
cmpsl
in
lods
dec
jns
ss
sbbb
js
pop
stos
fistps
pop
mov
ffreep
push
cmp
fyl2x
dec
rcr
sbb
or
cwtl
cmc
xlat
popa
clc
iret
cltd
pop
mov
fs
pop
lods
cmp
xor
aaa
pop
repnz
mov
mov
faddl
mov
xor
adc
inc
fidivs
test
or
jnp
push
daa
inc
ficomps
je
pop
mov
adc
inc
ficomps
mov
adc
fidivs
je
int
test
add
fstpl
dec
loopne
inc
je
in
push
cmpsl
aaa
and
push
std
std
dec
out
and
or
adc
repz
pusha
imulb
pop
jmp
push
out
mov
cmpsb
and
push
scas
in
rcrl
or
adc
inc
shll
lock
loopne
mov
sbb
jnp
int
or
movsl
daa
cwtl
mov
mov
or
lret
pop
xchg
jo
xchg
xchg
pop
icebp
sub
enter
sbb
das
jmp
shl
pop
enter
in
fs
xchg
inc
sahf
jnp
fldcw
jo
lods
sub
ja
xor
lret
xchg
cmp
leave
je
cwtl
mov
xchg
or
loope
cs
aas
mov
sub
rclb
cmp
sbb
jnp
sahf
out
in
test
jo
mov
xlat
test
std
mov
popf
aaa
xor
enter
push
stc
mov
xchg
pop
jnp
pop
lock
xchg
dec
outsb
sbb
sarb
adc
pop
mov
in
push
inc
pop
lcall
inc
pop
mov
inc
nop
lods
xchg
call
inc
mov
pushf
jecxz
cli
push
xchg
arpl
je
xor
jmp
dec
stc
and
sbb
dec
in
cmp
testb
jbe
dec
lods
orb
sti
mov
mov
mov
adc
dec
inc
fwait
movsl
push
cltd
pop
xchg
rorl
dec
or
in
fwait
addr16
sti
jns
enter
cmpsb
aas
mov
and
inc
inc
push
arpl
push
mov
inc
and
leave
inc
pop
clc
pop
adc
inc
lea
jecxz
sub
stos
push
pop
push
stos
fimull
push
es
xchg
cmp
fldenv
call
and
push
ffree
pop
dec
cld
pop
or
stos
leave
dec
fstpl
or
insl
pusha
inc
and
mov
sbb
in
test
mov
enter
ret
cwtl
xchg
test
leave
ret
imulb
out
sbb
rcl
xor
mov
or
lgs
xor
in
mov
ret
cmc
push
clc
and
shrl
and
mov
jb
les
ljmp
jmp
add
inc
dec
cmp
xorl
mov
jmp
mov
rorl
jmp
pop
dec
xchg
mov
test
sub
test
push
in
out
les
dec
pusha
lcall
mov
repz
mov
jbe
popa
stos
jo
jnp
xchg
in
add
jae
divb
fwait
and
cld
or
test
sub
lret
addr16
lcall
mov
mov
push
jmp
jecxz
outsl
flds
jmp
mov
mov
adc
outsb
into
fwait
pop
outsb
dec
add
cmp
xchg
mov
inc
pop
mov
xchg
push
call
out
stc
pop
adc
inc
addb
jp
lahf
arpl
mov
dec
mov
mov
mov
mov
int3
dec
sbb
mov
and
fiadds
push
stc
icebp
leave
or
sub
push
dec
jle,pn
push
or
int3
stc
push
outsb
mov
mov
inc
pop
les
dec
ret
in
lcall
pop
dec
inc
push
jbe
pop
fmull
jbe
loopne
pop
fwait
mov
xor
push
daa
test
test
and
and
ss
add
fbld
js
bound
cli
and
ret
dec
dec
int
sbbb
mov
pop
xor
jmp
xchg
pop
enter
das
call
jno
or
xor
push
insl
xchg
xchg
cmc
xchg
jno
std
mov
add
jl
jo
push
ljmp
lock
cmp
jp
cmp
or
push
push
dec
mov
jge
test
dec
sub
jb
inc
dec
rcll
dec
mov
test
outsb
jp
mov
les
mov
imul
add
sub
aas
stos
inc
jge
mov
test
test
cwtl
test
imul
push
ja
or
xor
add
mov
push
sub
lcall
sbb
vunpcklps
add
xor
push
hlt
inc
cmc
pop
sub
scas
ret
pop
hlt
movsb
ss
pop
jne
xchg
add
stos
outsl
adc
divl
dec
outsl
or
and
pop
pop
or
inc
jmp
and
fistpl
push
and
adc
add
xor
ret
hlt
add
mov
loop
xchg
movsl
or
cmp
aaa
test
insl
fnstsw
jno
mov
jae
jecxz
shrb
mov
les
loopne
mov
cwtl
dec
fcomi
ret
dec
and
enter
test
in
std
push
aaa
and
push
mov
mov
mov
cmp
and
dec
add
rcrb
sarb
jne
nop
pushf
sahf
mov
adc
sub
adc
ss
jmp
lods
scas
int
mov
adc
sub
fimull
or
or
xlat
push
cld
int3
mov
push
mov
fdivrs
mov
sbb
mov
push
jl
lea
jb
pusha
adc
mov
dec
lret
pop
icebp
pop
stos
dec
int
mov
dec
stos
mov
fists
cltd
fistpl
cmp
sahf
inc
fcompl
std
mov
xchg
lahf
cmpsb
dec
in
jmp
cld
cmp
adcl
dec
out
fs
sub
addb
mov
pop
jecxz
or
in
stos
jmp
dec
loopne
ss
in
mov
ss
adc
xlat
jp
or
pop
dec
xchg
jg
mov
xor
movsl
clc
or
std
aaa
jg
aas
mov
mov
cwtl
jno
cmpsb
mov
shr
outsl
pop
adc
gs
jmp
dec
sub
mov
rcrb
add
sbb
das
cmp
jnp
decl
xchg
seta
in
sub
jne
ljmp
in
and
xchg
aam
rorl
jp,pt
mov
fsts
dec
sar
push
call
sub
and
pop
cmp
test
mov
sahf
call
sbb
ret
icebp
and
sub
dec
mov
mov
fnstenv
inc
push
xor
pop
lret
aaa
pop
out
push
je
mov
xchg
lods
xor
repnz
or
fcoms
jl
add
cmpsb
in
cmpsl
and
sbb
push
sbb
lds
imul
ret
popa
jns
out
dec
pop
jecxz
cmp
xchg
jmp
daa
mov
cmp
cmp
and
inc
xor
mov
push
push
lcall
aaa
outsb
inc
sub
lea
sbb
test
push
xchg
xchg
dec
cmp
push
xchg
jg
cltd
jo
push
lret
mov
push
rcl
add
fstpl
aam
mov
fcomi
dec
leave
jbe
dec
insl
popa
aam
or
lcall
pop
ds
stc
push
lods
ljmp
cmpl
in
mov
adc
subl
gs
and
out
scas
mov
and
sbb
or
xchg
xchg
add
adc
sub
inc
adc
sub
bound
push
xorb
aaa
fadd
popa
push
pop
shrl
add
mov
icebp
mov
decl
mov
lods
mov
mov
lds
fsubrs
xor
popa
add
dec
cmc
subb
lock
movsl
inc
insl
in
out
mov
add
push
jle
or
iret
pop
inc
mov
mov
scas
mov
xlat
push
and
xor
jecxz
push
repz
dec
push
clc
pop
and
inc
dec
cmp
push
jne
fwait
cmp
int3
out
push
out
pop
push
out
pushf
xor
or
push
inc
lahf
lea
movsb
dec
cli
xchg
jg
pop
loope
ror
xor
mov
ja
adc
rcrl
xlat
add
js
pusha
dec
scas
out
dec
or
push
and
stos
in
lock
ss
arpl
je
out
adc
shll
push
mov
jge
fiaddl
sbb
inc
pop
sbb
lret
lret
push
push
mov
inc
dec
add
and
pop
adc
nop
and
fistl
lods
out
and
mov
scas
shl
cwtl
sub
movsb
fdivs
jns
jmp
jb
stos
mov
arpl
and
movsb
fwait
mov
push
xor
cwtl
adc
in
cmp
dec
sub
test
daa
jne
pusha
cld
push
mov
clc
sti
mov
or
flds
mull
shll
orb
jb
lods
inc
dec
inc
loop
pop
pusha
lret
icebp
pop
call
popf
inc
call
subb
push
dec
mull
cwtl
shld
mov
stos
data16
ljmp
inc
inc
jbe
out
imul
sub
pop
imul
ljmp
push
adc
or
fs
scas
xchg
jno
fbstp
xchg
pop
xlat
sbb
dec
js
and
scas
jbe
aad
inc
outsb
sbb
ja
jl
sbb
lods
cmp
das
xor
and
cmova
int
inc
imul
pop
dec
fs
fldcw
insb
pop
add
lock
push
insl
js
daa
xchg
add
je
xor
add
dec
std
xor
andl
pusha
adc
adc
mov
dec
js
adc
push
das
rclb
stos
test
lods
js
test
rolb
pushf
movsb
xchg
and
mov
mov
andb
jg
dec
push
movsb
mov
lea
fcmove
cld
pop
stc
popf
inc
ss
leave
cli
fucomip
adc
gs
push
aas
shll
pop
or
test
aas
lahf
je
shll
lret
gs
push
jmp
and
lret
lret
fstl
enter
ds
fs
sub
loopne
dec
pop
sbb
or
lock
push
cltd
cs
sbb
stc
je
sbb
push
test
jl
sbb
sbb
jle
push
inc
dec
add
add
movsl
xor
mov
mov
lods
cmp
xor
cmpl
xor
nop
data16
scas
push
decl
cmp
aam
aad
fwait
sti
cltd
xchg
mov
mov
loopne
mov
icebp
xchg
push
xor
push
mov
aaa
test
inc
push
and
call
adc
jmp
pop
pop
cmpsb
jnp
pushf
mov
sub
out
subb
xor
rsm
sbb
ret
imul
arpl
pop
pop
movsl
jl
sub
pop
pop
xor
add
mov
popa
mov
push
sahf
stos
movsl
clc
pop
xorb
or
jae
adc
cmpl
mov
adc
xor
enter
decl
dec
ds
xchg
enter
shrb
or
mov
dec
adc
fs
fidivl
test
hlt
stos
dec
jg
divb
cmpsl
movsb
pop
add
test
jp
dec
and
hlt
outsl
xchg
pop
push
mov
into
cmpsb
add
in
cs
adc
nop
sbb
mov
dec
sahf
in
scas
cmp
xchg
mov
push
inc
fs
mov
lea
and
mov
adc
test
pop
xor
lcall
fdivrl
dec
inc
mov
adc
nop/reserved
push
xchg
sarb
sahf
sbb
sub
inc
movsb
jnp
iret
pop
fstpl
add
jg
mov
jecxz
inc
vpmaddwd
push
xor
xor
jmp
inc
sbb
push
movsl
repnz
push
mov
xor
inc
jmp
xor
sbb
add
dec
icebp
popf
jp
cmpsl
sbb
pop
out
inc
sahf
sahf
lea
lods
push
push
lcall
sbb
add
push
gs
orb
hlt
mov
movsl
pop
in
sbb
sahf
test
imul
xor
ret
inc
jno
or
insb
fcomip
xchg
idivb
pushf
push
push
mov
mov
jno
sub
push
lods
mov
cmp
rcrb
pop
sbb
add
cs
subb
xor
shrb
or
shl
sbb
sahf
fdiv
dec
rorl
mov
add
adc
and
dec
sahf
std
addr16
mov
sub
es
adc
insl
xor
cmc
add
or
decl
mov
push
call
imul
xchg
lods
pop
xor
inc
fs
adc
out
cmp
lret
in
imul
or
jge
push
cltd
clc
shufps
and
aam
sbb
or
cli
call
cmpsb
lret
sub
pop
loopne
xchg
sbb
sbb
dec
inc
iret
out
shr
jo
sub
pop
xchg
jae
inc
xor
mov
loope
std
cltd
lods
inc
adc
jns
iret
mov
stc
sbb
imul
mov
mov
sub
stos
add
or
int
fidivs
outsl
push
imul
adc
decl
pushf
or
and
jecxz
xchg
pop
jg
idivl
rcrb
pop
xchg
sti
pop
add
sbb
pop
aas
xor
add
jmp
mov
int
ret
das
cs
add
or
setp
pop
stc
push
bound
dec
adc
dec
pop
mov
rcl
lods
ljmp
inc
or
and
testb
roll
sub
dec
fsubrl
dec
adc
rolb
je
or
sub
mov
cmpsl
scas
pusha
aam
push
push
xorb
std
sar
nop
jge
idivl
inc
sahf
pop
mov
jmp
lret
ret
xchg
les
xchg
ret
xor
xchg
or
mov
xchg
arpl
mov
into
mov
lret
dec
pop
inc
pop
lret
jmp
mov
mov
enter
sbb
mov
adc
mov
insb
xchg
jnp
das
add
xchg
xor
arpl
lret
add
cmp
xchg
enter
repz
test
or
cmp
mov
adc
adc
push
mov
shlb
lods
stc
xor
fstpt
sub
sti
bound
jo
int
roll
test
aas
inc
sub
insb
nop
fsubrl
and
and
push
add
int3
std
out
hlt
loop
es
push
call
xchg
sub
sbb
mov
ss
imul
sti
loop
icebp
mov
pmaxsw
imull
add
int
arpl
iret
ss
sbbb
aas
lods
mov
push
sub
dec
ljmp
sbb
sbb
mov
push
push
test
xorl
pop
dec
fmull
call
iret
in
mov
pop
icebp
adc
add
pop
sbbb
adc
inc
ret
xor
hlt
gs
and
inc
movsl
xchg
dec
movsl
in
shll
insb
cs
xlat
inc
addr16
mov
jle
xor
pop
iret
or
jne
pop
cmc
sub
aam
dec
pushf
jl
mov
sub
cs
enter
mov
push
ljmp
inc
xor
or
repz
sbb
and
das
cmp
adc
cltd
push
lcall
outsb
out
jae
push
xlat
lret
lret
adc
adc
xorb
or
outsl
ret
jp
loop
icebp
dec
dec
lods
jge
jno
addl
rep
das
addl
mov
mov
xchg
cmc
xchg
add
mov
ljmp
test
bound
or
pop
mov
cmpsb
cmp
adc
andb
dec
xchg
daa
jg
sahf
dec
inc
fadds
xor
cmc
cltd
sub
imul
mov
mov
mov
push
data16
mov
xchg
mov
mov
xor
ret
jns
or
mov
push
pop
add
stc
or
mov
scas
aad
insl
imul
lock
imul
into
enter
stc
jno
mov
gs
lock
jne
mov
push
ret
movsb
lahf
ficoms
jbe
movsl
lds
mov
push
lea
test
jg
andb
pop
call
cs
adc
aaa
dec
and
cwtl
jnp
xchg
sub
subl
or
sbbb
dec
lahf
addr16
stc
push
rcrb
xor
test
lret
or
popa
imul
add
dec
cmp
mov
rclb
nop
pop
leave
pop
les
hlt
xlat
rcrb
mov
pop
repnz
cmpsl
fwait
xchg
and
inc
cltd
pop
mov
fstpl
sub
aad
cmpsb
pop
sub
sbb
fsubs
out
je
fs
test
and
cltd
mov
ret
xorl
lahf
rcrb
cwtl
and
sti
out
test
cmpsb
or
push
loopne
loopne
and
jb
mov
xchg
jno
in
int3
inc
cmpb
xor
add
mov
push
cs
test
test
mov
add
loope
imull
mov
iret
popf
pusha
test
jmp
out
test
pop
add
push
sbb
mov
push
int
loopne
or
test
adc
mov
out
mov
repnz
pop
xchg
mov
mov
loop
insb
stos
dec
rclb
int3
sarl
or
ljmp
or
dec
adc
mov
aam
fisubrl
scas
pop
scas
sbb
scas
dec
fsubs
inc
call
cli
jo
lret
ds
cmp
das
shrl
in
mull
sbb
lret
stos
jno
pop
into
jbe
mov
push
repnz
iret
cmp
mov
pop
and
inc
jg
cmp
int
push
cmp
dec
adc
xor
loopne
jg
mul
cmp
xor
pop
stos
out
mov
rol
cwtl
or
outsb
add
push
decl
xor
imul
cwtl
out
test
jae
fucomp
loopne
push
mov
mov
ss
jl
xor
mov
addr16
jbe
push
mov
push
insl
mov
sarb
mov
jmp
cmp
clc
stos
sub
mov
jnp
andb
push
ljmp
pop
jns
or
pop
or
jp
adc
push
sub
orl
iret
sbb
pop
xor
sub
inc
push
add
mov
icebp
hlt
sbb
jg
cmpsl
test
or
cld
add
pop
arpl
xor
or
cmp
sub
out
je
push
imulb
adc
mov
sarl
and
or
sub
fwait
xchg
sbb
loope
sub
and
mov
sub
subl
js
lea
cmp
add
call
nop
mov
push
pop
sbb
imul
add
sbb
pop
ret
pop
xor
aaa
xchg
shr
scas
push
repnz
pop
mov
jb
or
sub
inc
adc
pop
cmp
xlat
aaa
lret
sbb
push
ficoms
xor
push
stc
xchg
add
mov
xchg
ret
lea
push
adc
mov
adc
jmp
dec
inc
xchg
push
sub
sub
sub
clc
mov
or
mov
daa
mov
add
jge
jbe
adc
pushf
sbb
lds
xor
fnsave
roll
push
cwtl
movups
lahf
cli
lret
add
push
mov
cmp
xchg
outsb
movsl
adc
popf
jle
outsl
mov
dec
pop
mov
out
add
push
dec
sbb
mov
fmull
es
mov
xor
stos
daa
aas
int
mov
adc
adc
sti
push
in
in
cmp
dec
push
cli
mov
aad
mov
cmp
loope
testl
rclb
or
adc
ret
push
lahf
push
out
std
mov
outsl
daa
jle
adc
shll
sti
ja
mov
mov
xor
out
mov
and
add
adc
push
and
mov
and
mov
insl
or
lret
pop
aad
addr16
pop
push
inc
imul
daa
lahf
testl
scas
popl
cmp
pushf
xor
rorb
add
data16
adc
mov
sbb
idivl
add
mov
rol
adc
and
pushf
popa
mov
pop
mov
popf
push
enter
rcrb
mov
shlb
test
adc
mov
jge
push
mov
sbb
repnz
adc
cli
xchg
stos
add
shll
and
push
fcoml
stc
mov
xchg
hlt
mov
mov
adc
cmp
dec
push
cld
xchg
fstpl
dec
push
test
jae
cmpsb
mov
jmp
cmp
dec
xchg
xor
adc
mov
ja
in
xchg
dec
cmpsl
addl
and
test
mov
lods
cmp
and
scas
and
inc
jb
lock
inc
repz
cmpsb
leave
xor
in
or
pusha
mov
push
insb
sbb
not
insb
adc
js
push
psubusb
lret
dec
cld
push
jnp
mov
push
call
std
push
popf
xor
aas
lds
into
dec
dec
arpl
sahf
xor
inc
out
insb
add
push
test
jae
or
mov
fsubrl
insb
push
mov
fnsave
scas
inc
sahf
data16
fwait
lret
xlat
hlt
insb
enter
nop
daa
enter
mov
pop
testb
pop
inc
jmp
sbbb
add
lods
pop
adc
xor
mov
mov
int
movsb
cmp
sub
leave
add
hlt
jle
sub
or
sahf
outsb
out
popa
and
xchg
pop
in
adcl
add
add
js
insl
je
jbe
cwtl
lods
sbb
lcall
xor
push
in
cmp
shrl
nop
sub
call
push
ret
outsl
int
scas
mov
inc
jge
jae
rol
mov
outsb
add
int3
mov
gs
inc
fidivrs
push
sarl
subl
cmp
pop
repz
xchg
sub
pop
out
pop
lods
cmpsl
fisubrs
jbe
or
fbstp
or
lods
jg
cmc
mov
call
jbe
push
mov
mov
test
je
and
cmp
jbe
fisubl
xlat
mov
cmp
daa
xlat
outsb
pop
repz
gs
repz
ds
cmp
mov
pop
repz
adc
xor
mov
out
loop
push
jmp
xor
fidivl
inc
fnsave
sub
xchg
lds
loop
pop
sbb
out
subl
inc
aam
and
loopne
fistl
cmp
push
jno
mov
and
jo
je
in
push
pop
aad
xor
and
push
pop
jae
push
test
fidivl
or
xor
mov
push
mov
sbb
scas
stos
imul
popf
lret
ss
shll
xor
jae
inc
dec
jecxz
test
xchg
mov
push
enter
pop
dec
pop
das
push
sbb
jge
pusha
cmp
xchg
mov
insl
add
pop
in
mov
mov
sub
pop
hlt
jl
inc
fistpl
mov
mov
cmp
insb
or
aad
mov
mov
js
fldt
lret
push
mov
call
pop
popa
outsl
push
xchg
cmp
insl
mov
js
lret
or
push
pop
ret
aas
mov
jno
loopne
jecxz
push
movsl
fiadds
loope
inc
rclb
ljmp
inc
stc
jae
mov
jb
pop
icebp
in
mov
fiadds
and
jle
ja
inc
fstp
lods
repnz
inc
cmp
jne
pop
out
jo
sbb
leave
jne
adcb
mov
push
in
push
out
inc
and
push
mov
pop
in
cmp
ja
cli
xchg
outsb
scas
ds
mov
jecxz
inc
push
mov
ds
out
outsb
scas
xor
fidivs
mov
sti
bound
into
gs
clc
es
inc
push
dec
jecxz
and
fnsave
jge
ss
pop
ds
inc
fimuls
stos
int
loopne
js
faddl
mov
popf
sub
jne
dec
push
jmp
mov
jae
mov
sti
xchg
xor
push
sbb
xor
xchg
sub
xchg
add
sub
addr16
xor
xchg
js
lock
divl
shlb
addr16
es
not
imul
pop
hlt
mov
testb
ss
mov
cmpsl
sub
sub
nop
sti
push
popf
sub
lock
mov
cld
es
mov
inc
fistl
lahf
push
ljmp
pop
testb
xor
aam
popf
xor
inc
inc
fdivl
sub
cwtl
hlt
xlat
outsb
sub
jp
std
cmp
das
scas
or
sub
movsb
jg
dec
in
stos
jne
inc
fisubrl
dec
jmp
jg
xor
das
stos
mov
fnsave
pop
scas
jle
aaa
into
cs
shrl
stc
mov
jle
cld
std
xchg
xor
push
out
adc
add
iret
xor
ds
dec
pop
hlt
jg
lret
bound
test
popa
clc
push
dec
inc
fdivrs
mov
xor
enter
icebp
mov
in
subl
push
in
jecxz
js
sub
cmc
mov
fidivs
mov
ljmp
test
sti
sbb
sub
jg
cmp
mov
cs
jmp
xor
in
push
sbb
mov
stc
or
jge
sub
sbbb
sbb
or
dec
loop
shrl
add
mov
out
adc
lret
fisubl
mov
sbb
dec
sbb
dec
fsubrp
orb
cmp
or
dec
jecxz
sbb
dec
les
clc
fcoml
aaa
insb
pop
dec
loop
movsb
pop
repz
mov
push
lea
imul
mov
adc
lods
pop
dec
in
arpl
xchg
cmpl
jno
jge
sbb
orb
lock
out
aas
cld
xchg
outsb
jg
js
mov
jnp
xchg
pop
lods
inc
xchg
mov
dec
call
push
test
cmp
lds
movsb
cmp
jo
out
and
aaa
incb
xor
jle
push
loope
subb
aad
fwait
xor
dec
pop
repz
jnp
and
mov
aad
cltd
xor
push
in
jnp
push
call
fdiv
insl
add
dec
push
mov
stc
stos
inc
sub
add
and
add
sbb
shl
sti
xchg
and
jne
sub
movsl
xor
xlat
hlt
mov
sub
xor
mov
into
sti
popa
clc
sub
push
mov
xchg
sub
xchg
mov
test
pop
xchg
sub
nop
call
mulb
out
popf
adc
or
mov
and
jno
adc
jns
or
aam
sbbb
dec
push
ljmp
dec
in
out
lock
push
push
lods
ds
xchg
sub
call
mov
lea
dec
loopne
loope
ficoms
pusha
iret
xchg
or
addl
out
or
pop
repnz
xor
addr16
xchg
mov
jg
mov
fcomip
mov
das
gs
pop
jl
inc
stos
adcb
lret
add
jno
push
and
cmpsl
push
sub
testb
rcrl
add
popf
xor
add
cltd
jp
ret
mov
decb
dec
ds
ljmp
jno
inc
mov
ret
pop
cmc
clc
cld
mov
sub
and
scas
jge
xor
cmpsb
popf
jb
iret
movl
sbb
dec
in
ds
jmp
mov
cmp
loop
jle
or
cs
cs
push
daa
mov
sbb
fcmovnu
scas
lds
std
mov
je
dec
arpl
jle
adc
shl
jle
cmc
cmp
and
jg
pop
inc
lds
mov
xchg
insl
aad
ds
jp
adc
sbb
ret
insl
jnp
sub
jns
add
push
out
and
add
or
hlt
mov
cli
out
sub
sub
jg
test
and
sti
cmp
sub
daa
jg
cmp
and
sti
les
cmc
movsb
cmp
lock
and
dec
ss
mov
je
imul
mov
push
jae
xchg
sahf
add
sbb
popf
aaa
into
into
in
inc
fucomi
cs
mov
stc
cmp
into
mov
aas
out
or
lock
shlb
inc
mov
in
push
daa
shll
je
filds
xchg
lret
jl
aam
inc
ljmp
pop
xchg
dec
push
data16
xor
test
xchg
jns
add
popf
stc
xchg
mov
mov
outsl
popf
clc
xchg
dec
sbb
test
rcll
nop
push
test
and
lahf
arpl
popa
sub
and
dec
cmp
aas
and
and
inc
adc
add
loope
outsb
rcrl
in
mov
mov
pop
ror
adc
add
cmp
rcrb
pop
or
push
movsb
mov
rcll
pop
outsb
fwait
imul
ja
es
orl
push
stc
jbe
add
inc
xor
call
inc
ljmp
xchg
sbb
dec
das
jp
add
aaa
xchg
out
adc
js
xor
pop
lea
inc
cmp
les
jne
je
aam
inc
ljmp
pop
shrl
cmp
test
das
adc
enter
int
push
sti
lds
aaa
lods
test
mov
scas
cmpsb
sub
push
lods
in
call
into
aaa
out
mov
cmp
in
repnz
out
dec
mov
add
ret
inc
int3
rorb
lahf
add
mov
sub
mov
lds
jmp
aad
cmc
fsubrs
dec
rcl
insb
imulb
xlat
dec
cmpsb
xchg
js
pop
ret
aas
decl
stos
xchg
adc
pop
lret
das
pop
in
call
inc
fs
cmp
inc
rcr
xor
inc
mov
into
jae,pt
mov
rclb
imul
fstpt
lock
cli
jg
je
movsb
sub
push
sub
in
sub
mov
xchg
repnz
jnp
std
xchg
xor
mov
sub
pushf
hlt
adc
shlb
add
jbe
xchg
push
cmp
mov
xchg
xchg
sub
jne
xor
push
inc
pop
pop
push
adc
sub
out
outsl
jl
dec
pushf
sbb
dec
lock
add
repz
xor
aas
push
push
fstl
stos
xchg
add
hlt
push
mov
and
fdivs
inc
rclb
xor
sbb
fs
and
jmp
jecxz
fstps
push
fldt
inc
pop
loopne
daa
les
outsb
gs
lock
mov
insl
cmp
mov
inc
xchg
add
dec
cmp
mov
mov
insb
add
fimuls
xchg
inc
lds
scas
mov
add
mov
cli
and
jae
jmp
pop
cmp
mov
xor
ret
pushf
fdivl
enter
jmp
push
mov
or
push
jl
ret
cmp
pop
jg
mov
xchg
push
mov
dec
movsl
push
scas
inc
leave
repnz
pop
div
adc
scas
mov
push
scas
mov
inc
mov
mov
jge
cmp
adc
add
enter
inc
int3
push
mov
xor
sysexit
sub
loop
cmp
lahf
lea
clc
push
lods
adc
add
stos
jae
adc
jbe
cmp
inc
nop
je
pop
xor
ds
pushf
mov
and
clc
stos
push
and
mov
sti
xor
xchg
mov
ja
movsb
lea
sti
loop
cltd
pop
loope
sbb
push
mov
adc
lds
cli
push
call
adc
dec
sub
push
cli
lea
xchg
adc
test
out
fisubs
cmp
test
xlat
outsb
and
popa
fwait
jecxz
dec
mov
aam
stos
shll
dec
lds
sbbl
enter
mov
fimull
fldl
movsl
xchg
xchg
sbb
insl
add
xor
je
pop
lret
clc
xchg
repnz
ss
and
and
sarl
pop
mov
bound
loop
adcl
sbb
sub
rcrl
cmp
lock
adc
int3
jecxz
pop
rcr
clc
fxch
xchg
sub
fisubs
fmul
sbb
movsl
stos
das
loope
repnz
aam
bound
mov
mov
hlt
and
and
push
xchg
pop
loopne
test
pop
test
sbb
push
insb
xchg
sbb
sub
cwtl
cmp
and
arpl
fidivs
and
or
pop
cli
ss
dec
jnp
leave
and
mov
xorl
pushf
mov
data16
sub
adc
pop
lea
icebp
mov
jge
hlt
mov
int
mov
rcr
xchg
xchg
enter
mov
cld
xchg
nop
lds
cmpsb
xlat
scas
cmpl
sbb
pop
fwait
ljmp
mov
repnz
cli
and
enter
xchg
lret
xlat
push
sub
xor
idiv
cmp
loope
loopne
push
mov
fsubr
push
lret
int3
aad
inc
into
leave
xor
push
out
into
inc
mov
cli
mov
mov
cmpsl
cltd
cmp
mov
adc
subl
and
mov
pop
sahf
arpl
xchg
jge
xchg
inc
adc
fwait
xor
cltd
mov
adc
idivl
mulb
cs
sub
mov
pop
std
mov
xor
mov
in
add
xchg
stos
xchg
stos
int3
scas
xchg
ljmp
sbb
mov
lds
push
adc
in
cmp
or
std
sub
repz
ret
sub
sub
shll
lods
mov
and
xchg
jge
jg
sub
lea
fsts
cmp
xor
and
sub
repz
int3
mov
mov
mov
fs
adc
sub
mov
in
out
rcll
and
cmpsb
test
in
cli
pop
sbb
mov
push
cld
sbb
sub
add
lea
mov
mov
clc
testl
imul
pusha
cltd
sub
lea
ds
nop
lea
mov
hlt
out
adc
mov
clc
cs
mov
out
xor
push
and
push
jl
cmp
test
aad
mov
cmp
jb
int
jmp
sti
lods
xchg
shrl
xchg
loop
adc
std
jmp
push
dec
movq
shlb
jmp
jecxz
jg
lret
gs
mov
mov
add
test
push
sub
je
outsb
stos
gs
outsb
aam
dec
inc
cwtl
js
dec
test
xorl
xorl
mov
or
int
mov
jmp
sub
insl
sbb
lds
imul
ds
xor
or
dec
and
adcb
inc
ret
mov
stc
add
xchg
pop
mov
pop
inc
mov
ret
cmp
and
cmc
sbb
inc
mov
aaa
frstor
push
sbb
jno
jae
repz
lock
dec
into
mov
shrb
and
jge
jmp
xchg
push
rclb
and
mov
adc
and
popf
adc
dec
mov
lds
dec
insl
fsubs
pop
pop
repz
push
cltd
xchg
push
sarl
add
jb
mov
call
mov
xchg
xlat
cmp
shll
not
mov
mov
mov
mov
pop
leave
cwtl
imul
les
fildl
int
cli
mov
pushf
jne
out
mov
xor
xor
cld
cwtl
arpl
mov
xchg
mov
bound
jle
popfw
addb
push
test
add
lods
sbb
cmp
call
sub
pop
aad
lods
fnstcw
pop
jmp
popf
mov
cmpsl
add
lods
aaa
test
pop
hlt
hlt
sbb
testb
mov
lea
hlt
dec
or
popf
lods
pop
and
pushf
push
ja
jno
pop
jne
cmp
arpl
xor
and
subb
add
jns
xchg
push
pop
repz
push
int
test
loop
cs
jae
sub
push
xchg
pop
es
maskmovq
imull
inc
fsubrl
sbb
sbb
sbb
adc
sahf
sbbl
cwtl
jp
add
xlat
adcb
aad
cmp
jle
or
cwtl
mov
mov
mov
jmp
adc
adc
add
int
repz
ret
mov
arpl
test
lret
push
add
mov
xchg
mov
loopne
mov
xor
hlt
xor
loope
lods
fisubrl
ss
fists
outsl
push
shrb
jecxz
pop
movsb
test
lgdtl
xor
xrelease
gs
int
mov
or
subb
and
iret
push
inc
movsl
push
pop
pop
adc
push
mov
filds
daa
xchg
xchg
orb
xchg
fisttpl
inc
frstor
ret
loopne
and
cmp
adc
inc
xchg
inc
stos
and
pop
outsl
dec
fwait
outsb
inc
jne
movsb
inc
mov
push
andb
sbb
iret
inc
xor
mov
xorl
lods
mov
mov
adcb
inc
push
inc
dec
fs
inc
dec
mov
sarl
adc
cmpsl
cli
cmpl
fstl
lods
cmc
mov
xor
adc
negb
cmc
out
sbb
push
inc
xlat
xchg
jb
sub
push
or
fnstenv
bound
dec
jae
in
nop
xor
outsl
pop
lcall
pop
cmc
sbb
xchg
mov
call
test
cltd
jmp
add
xlat
push
or
lods
pop
add
ds
mov
ret
mov
or
cmpsl
pop
loopne
jns
adc
push
mov
cltd
sub
sahf
sbbl
aas
jbe
jle
push
iret
mov
and
pop
shrb
xor
fcomip
popf
xor
fdivrl
test
xchg
sub
ficoml
jle
dec
dec
jg
ljmp
or
aaa
mov
ja
cmp
xor
pop
cli
xchg
jp
scas
xchg
in
dec
dec
xchg
ljmp
lds
sbb
fadds
pop
pop
negl
jmp
mov
push
flds
repnz
push
cmpsb
test
dec
mov
and
popf
mov
inc
fistl
mov
mov
mov
mov
out
out
sub
cwtl
rolb
in
fsin
pop
lods
lahf
cli
jae
into
sbb
rcr
push
addr16
mov
rorl
mov
dec
leave
ljmp
stc
popf
shrl
icebp
in
and
movsb
aam
mov
loop
jmp
xlat
ret
iret
adc
fdivl
lret
inc
xor
test
pop
loop
test
aaa
mov
out
pusha
jae
andl
mov
mov
adc
shrl
add
cmp
and
dec
cltd
push
arpl
push
or
out
pop
out
jle
pop
pop
sahf
cmp
xchg
js
pop
shrb
in
test
xor
test
add
dec
cwtl
adcl
jge
test
mov
jmp
test
ja
adc
inc
lret
shlb
dec
mov
out
dec
sahf
rclb
pop
cmp
xlat
xchg
push
daa
fisttpll
or
int
add
xchg
imul
movsl
xchg
xchg
sbb
sbbb
out
flds
loopne
mov
rol
cmp
lret
mov
out
sub
cmp
repnz
leave
inc
ljmp
jl
aas
cmp
ret
push
in
in
cmp
pop
lcall
das
je
mov
out
ret
dec
pop
int
fcmovnbe
pop
lods
pop
cmp
sub
cmp
loop
aad
jnp
or
sbb
jp
test
iret
and
xchg
cmp
adc
xor
jnp
js
mov
xchg
xchg
std
and
jns
test
loopne
xchg
sbb
fwait
pop
fisttpl
jmp
rorl
pop
les
add
rclb
sbb
add
out
loop
or
push
mov
repnz
xor
stos
adc
les
mov
int
jecxz
lods
test
dec
lds
xor
loopne
mov
movsl
mov
ret
nop
or
and
insb
adc
lock
mov
cmc
dec
mov
adc
inc
scas
enter
test
sub
cmpsl
inc
xlat
fcom
das
not
sti
inc
loopne
sbb
inc
enter
and
popf
fsubrl
sbb
lock
cs
push
daa
and
xor
aas
sub
inc
mov
gs
cli
mov
mov
sbb
jge
mov
pusha
mov
pop
shr
sti
je
mov
clc
dec
mov
push
repz
ljmp
xor
and
or
bound
ret
push
sahf
xchg
adc
cs
push
mov
pop
push
in
insb
lahf
fs
xlat
dec
hlt
cs
pushf
je
mov
adc
pop
mov
adcb
mov
clc
mov
cmp
cmpsl
cmp
push
jl
push
fs
test
stc
test
sub
fs
bound
ja
sbb
dec
ret
insb
lcall
jnp
adc
sahf
dec
xor
movsb
pop
mov
xor
add
inc
or
pop
lods
xchg
push
fwait
mov
int
mov
rclb
out
lret
mov
fstl
jecxz
mov
dec
repnz
aam
cmpsb
enter
call
or
xchg
mov
sarb
fistl
in
std
xchg
push
push
je
movsl
mov
div
sub
pop
sbb
scas
decb
sbb
idivl
stc
nop
ficompl
mov
fidivl
rcll
cltd
xor
inc
inc
mov
in
push
push
mov
mov
pop
movsl
push
mov
das
xchg
je
or
add
mov
sub
mov
sbb
mov
sub
mov
sahf
fdivl
fldenv
pop
repnz
jl
fmull
test
add
and
lock
add
or
and
sbb
jno
stos
fildl
outsb
dec
dec
lcall
fwait
out
test
mov
test
mov
add
xor
mov
ja
sbb
fs
sti
dec
dec
test
push
inc
lea
cld
cmp
xchg
bound
stc
push
inc
push
or
xor
xchg
adc
jns
sub
pop
movd
add
dec
filds
jmp
mov
add
sahf
inc
in
aam
sub
std
das
push
cltd
mov
inc
in
outsl
fwait
jne
mov
cli
iret
inc
fldt
push
iret
test
pop
popa
jmp
push
push
xorl
adc
sub
mov
jg
mov
xchg
add
es
test
jne
xchg
jns
repnz
shrl
dec
les
test
adc
adc
adc
shrl
mov
pusha
mov
mov
cmpsl
sahf
xchg
ja
jmp
insl
mov
fdiv
xor
neg
dec
int3
jp
data16
lret
mov
imulb
mov
jmp
stos
pop
sub
pushf
mov
jns
adc
mov
fimuls
xchg
test
push
insl
mov
cmp
movsb
pop
outsb
push
mov
pop
jg
cmpsb
js
xor
xor
xchg
cmp
xor
arpl
mov
mov
pop
or
imulb
xchg
add
xor
neg
dec
out
int
shrl
mov
std
lods
outsl
into
loopne
mov
push
push
enter
cwtl
scas
cmp
in
in
pop
cmc
push
adc
ja
gs
imulb
lahf
sub
pop
or
cmp
add
jle
and
add
hlt
mov
xchg
aad
pop
ret
inc
or
stc
inc
enter
in
test
shrl
or
scas
sbb
pop
out
test
add
xor
xor
jne
mov
fldenv
fsubr
pop
lods
bound
xor
insb
sub
outsl
xor
testb
je
into
push
mov
outsl
fldl
insl
gs
dec
loop
mov
add
push
fistpll
lea
imul
lods
pusha
pushf
pop
jg
inc
jl
popf
dec
stos
add
adc
arpl
mov
sub
lret
mov
xchg
in
sub
fildll
pop
mov
icebp
shrl
push
dec
mov
clc
mov
enter
cmp
in
fimull
inc
mov
in
stos
in
in
fnstcw
push
cmp
xchg
rcll
out
xor
xor
push
pusha
fwait
fs
lcall
push
leave
inc
in
jo
or
push
jl
push
cmp
mov
xor
cwtl
push
inc
in
push
inc
fs
inc
je
test
addl
stos
or
clc
es
sbb
push
pop
pusha
outsb
add
xchg
rolb
or
inc
scas
icebp
push
mov
mov
pop
mov
in
sarb
imulb
iret
mov
push
imul
loope
or
mov
notb
lret
idivb
loopne
and
movsl
sarl
ljmp
mov
ja
jns
enter
test
dec
shr
or
out
sub
push
and
adc
ds
inc
stos
jle
mov
or
ret
mov
lahf
mov
mov
lods
pop
push
push
sbb
pop
mov
cmc
stc
xor
loop
push
in
jmp
mov
xchg
imul
mov
shrl
and
mov
ret
call
cmpsl
mov
test
call
or
lods
out
lock
jns
mov
sbb
adc
inc
fistpl
jb
ss
cmp
in
cmp
adc
jbe
mov
stos
push
loopne
std
lds
mov
shll
in
lock
or
int3
popl
add
lret
push
adc
cmc
add
dec
xchg
inc
xchg
xchg
addr16
dec
xorb
jne
push
rolb
add
loop
cmp
testl
lret
cmp
pop
divl
pop
push
inc
imul
insb
inc
mov
je
jle
adc
or
mov
sbb
cmpsb
cltd
pop
ret
or
lods
ljmp
mov
neg
and
rcl
pop
leave
hlt
pop
shr
mov
xor
mov
test
aam
inc
out
push
test
cmp
je
jge
and
out
push
mov
add
sahf
push
shrl
inc
cmp
dec
pushf
hlt
daa
in
and
sbb
aam
shrl
dec
cmp
mov
popa
and
and
and
faddl
and
cli
jbe
mov
sub
repz
xor
lahf
and
subb
fs
pop
int3
pop
mov
push
test
icebp
jle
lods
movsb
ret
cmp
dec
pushf
aad
pop
insb
pop
mov
insb
je
imul
dec
cwtl
jp
sub
sti
jg
cmpsb
pop
sub
maskmovq
testl
out
jmp
and
sar
popl
imul
cli
jle
mov
fists
cltd
lea
sbb
mov
jae
daa
insb
adc
cmpsb
arpl
mov
jnp
out
pop
cmc
push
stos
push
xbegin
mov
std
xor
xor
push
mov
imul
fists
jo
pop
mov
ret
fcoms
inc
enter
cmp
inc
ret
inc
cmp
sti
inc
imul
jmp
ds
pop
fwait
push
pusha
mov
loop
push
mov
loop
jp
jne
add
add
lea
pop
ret
jle
cmc
push
fwait
xchg
adc
lods
test
adc
dec
ret
out
xchg
fdivp
outsb
mov
lret
pop
lcall
pop
shl
sbb
loop
cmp
pushl
adc
icebp
add
repnz
lret
and
incb
add
repnz
in
jns
sbb
adc
in
fdivl
fstpl
pop
xchg
rorb
orl
data16
mov
jb
push
lret
dec
cmp
push
jle
xor
and
mov
mov
sub
test
enter
inc
fdivrp
sub
jge
sbb
std
dec
jle
fwait
scas
outsb
test
mov
ret
hlt
and
push
adc
pop
cmc
movsl
push
jl
clc
mov
fwait
xor
sbb
aas
insb
mov
rcll
mov
out
jecxz
testb
gs
xchg
push
xchg
sub
cmc
loop
out
adc
cmp
lods
pop
pop
mov
or
sarl
pop
popf
dec
jnp
shrb
fidivrs
loopne
cld
adc
push
popf
or
sbbb
sub
pop
xchg
iret
xchg
setb
inc
mov
out
gs
daa
xchg
jns
add
mov
mov
decb
int
and
inc
push
inc
sbbl
ja
push
lret
push
mov
call
mov
sub
test
lret
cld
adc
test
shrb
jb
mov
test
gs
inc
sahf
pop
inc
in
xorl
mov
int3
out
sbb
out
push
js
std
ss
mov
xchg
mov
jo
shlb
ret
add
es
pop
or
ret
mov
mov
ret
cmp
paddsb
ret
scas
movsl
or
fists
xchg
jo
in
adc
lahf
sahf
lock
jp
pop
sub
inc
popf
cmp
xchg
movsb
jmp
out
ds
test
xor
fwait
js
jns
inc
data16
negl
push
out
cli
ljmp
pop
stos
sbb
loopne
jns
cmc
cs
inc
pop
pop
fildl
stos
loopne
movl
mov
mov
mov
cmp
imul
paddusb
in
and
push
xchg
sub
push
dec
dec
in
push
int3
jno
popf
mov
pop
pop
cmpsb
lcall
imul
mov
inc
add
dec
sbb
icebp
loopne
mov
lea
inc
out
fstps
std
shl
dec
and
or
shrl
mov
insl
sbb
add
test
fstl
lock
cmpsb
or
repnz
addb
loop
pop
or
push
dec
out
cmp
aas
decl
loopne
pop
adc
mov
adc
cmp
outsl
int
or
out
test
cmc
cs
out
sub
dec
insl
mov
or
nop
pop
dec
push
add
xchg
sbb
sub
mov
in
sbb
fcmovnbe
int3
mov
repz
pop
mov
xor
movsl
add
sub
and
movsb
cmpsb
rol
xchg
jle
push
outsl
leave
fdivrs
jmp
mov
aas
xor
lea
dec
popa
test
xor
rcll
adc
movsb
lock
jb
lcall
inc
jecxz
jno
ljmp
mov
rcrl
push
repnz
dec
xor
sbb
scas
cmp
push
mov
and
aam
jnp
sbb
push
rcrb
es
xchg
cmovb
imul
fstpt
or
push
lock
std
rclb
mov
xor
xchg
mov
mov
lret
add
mov
mov
stos
pusha
loop
out
sbb
cld
xchg
in
pop
scas
mov
addr16
icebp
push
push
in
inc
stos
cmc
mov
xchg
lock
stos
jle
ja
pop
and
mov
movsb
push
mov
jb
in
mov
leave
ja
mov
xchg
pop
or
jne
std
jge
out
sbb
outsl
push
add
das
mov
inc
popa
clc
ss
dec
out
jne
sbb
aad
dec
cmp
stos
fisubl
mov
call
mov
mov
lret
fs
test
lret
sub
sbbb
jecxz
jg
mov
sub
imul
lods
outsl
out
jno
xchg
sub
test
add
xor
xchg
sub
mov
mov
mov
stos
sbb
push
jge
lds
arpl
add
sbb
push
pushf
push
add
inc
sahf
sbb
pop
jge
inc
jecxz
arpl
mov
sbb
pop
sahf
shrl
sub
scas
sub
inc
or
sub
pop
cltd
ret
mov
lea
add
in
push
or
pusha
ja
sub
sarb
flds
mov
mov
sbb
loope
addb
cwtl
inc
xor
xchg
pushf
and
addl
cmp
adc
negb
leave
sbb
xor
ret
es
cmp
adc
xchg
mov
out
jne
lds
shrl
mov
ret
adc
setb
in
jbe
shl
out
or
call
ret
mov
fidivrl
movsb
sub
fdivrs
outsl
cmp
pusha
mov
add
cmp
inc
xchg
sbb
ja
lcall
hlt
mov
cmp
mov
ret
aaa
mov
fs
fldcw
in
xchg
cmp
mov
cwtl
les
mov
sub
mov
outsb
icebp
jecxz
pop
lret
or
movsl
add
jns
mov
insl
push
sbb
call
jp
mov
or
mov
pop
jp
sbb
repz
sahf
pop
push
in
pop
add
repnz
xchg
out
bound
popf
aas
pop
add
insl
lret
sahf
push
and
int
mov
jge
mov
imul
push
movsb
xchg
cmp
mov
insb
or
sarb
xchg
lea
in
out
outsl
mov
jo
push
movsl
mov
insl
push
mov
push
mov
cmpl
xorb
xlat
pop
insl
or
xor
mov
iret
lret
sarb
adc
fidivl
mov
int3
dec
stos
cld
pop
popa
cwtl
aaa
cmpsb
cmp
daa
rcll
push
mov
cld
pop
inc
adc
test
popf
xor
test
outsl
int3
sbb
and
stos
sub
int3
mov
lahf
jbe,pt
push
add
mov
pop
adcb
jle
hlt
push
and
and
mov
cmp
jl
xchg
inc
btr
jp
lcall
or
adc
int
xor
inc
lcall
roll
xchg
mov
lods
dec
mov
rclb
mov
mov
xchg
icebp
ds
push
iret
push
sub
aaa
mov
popf
cwtl
jbe
sub
aaa
bswap
in
arpl
xchg
add
mov
sar
pop
xchg
push
scas
sub
into
imul
call
ret
daa
xchg
int
or
add
popf
jecxz
in
ret
icebp
rcll
adcb
insb
out
pop
addr16
add
test
in
outsl
arpl
inc
push
ret
adc
enter
xchg
loope
call
mul
jb
lret
lock
lds
stos
push
imul
mov
jmp
xor
sub
pop
outsl
imul
inc
fs
mov
xor
lock
les
jnp
inc
adc
addr16
clc
fs
in
pop
jnp
lods
inc
andb
daa
inc
adc
lods
inc
adc
fs
push
cmp
mov
mov
daa
movsl
lds
lods
inc
adc
and
test
in
push
mov
movsb
xor
jecxz
push
test
mov
mov
lods
inc
adc
gs
push
and
mov
add
pop
xor
dec
jle
in
push
loopne
jne
iret
mov
data16
repz
push
clc
and
mov
movsl
dec
or
test
xchg
push
outsl
push
shll
pop
jns
cmpsl
ss
pop
cmp
stos
sub
div
adc
xor
jne
pop
das
rclb
jae
lds
push
add
push
aad
jbe
xchg
inc
cmp
loop
sub
xchg
out
inc
cmc
popa
pop
repnz
inc
js
push
add
mov
adc
aaa
imul
or
sub
jp
shll
mov
mov
lea
jo
fsubrp
jo
je
inc
cmp
mov
sub
jmp
cli
aaa
sahf
ja
daa
scas
nop
push
add
pop
notl
mov
mov
inc
or
lods
mov
lods
pop
lds
outsl
loope
gs
sbb
pop
jne
push
cmp
pop
add
popf
mov
mov
jae
mov
out
lock
inc
clc
inc
or
xchg
xor
imul
mov
js
adc
imul
mov
xchg
xor
out
sahf
xchg
cmp
jae
adc
lock
pop
inc
jecxz
or
xor
rcll
push
mov
jno
psrlq
arpl
pop
jno
push
aam
arpl
mov
daa
stos
push
adcl
andl
jo
mov
pop
ljmp
or
mov
cmp
sub
mov
or
inc
ja
mov
inc
mov
xchg
sarl
mov
push
jecxz
sub
fdivr
dec
adc
shrl
mov
clc
orl
das
mov
rolb
leave
or
pop
fs
clc
mov
in
sub
sarl
cmp
cmpsb
sub
stos
xor
loopne
jle
es
mov
test
rcr
pop
jnp
aas
lods
mov
pop
mov
ret
mov
sbb
arpl
in
sbb
addb
stc
xor
and
add
scas
lds
inc
dec
sbb
xchg
aas
sbb
aaa
inc
inc
into
mov
mov
lea
mov
cwtl
cmc
sub
mov
ficomps
jbe
js
ds
stos
arpl
sbb
repnz
sub
cmp
and
mov
adc
adc
flds
jecxz
sub
bswap
bound
arpl
outsl
jp
or
mov
mov
inc
push
add
scas
sub
test
imul
jecxz
popa
xor
and
in
stos
daa
sbb
mov
fcom
push
dec
or
or
xchg
sub
insb
out
xor
jmp
cmp
sub
ret
and
pop
push
shll
popl
fldl
test
jae
lods
sub
outsb
ljmp
pop
push
jmp
lods
mov
or
push
loop
test
movsb
fsubrl
cld
add
pop
pop
mov
pop
mov
ss
jo
sub
xchg
sbb
add
inc
fidivl
mov
xchg
adc
insb
sub
in
lahf
std
fs
pop
mov
cmp
imul
movsb
push
das
mov
mov
aam
push
jl
pop
push
cmpsb
lea
loop
and
test
adc
lret
and
jo
pop
adc
es
lret
xor
test
cld
or
push
dec
xlat
lcall
xchg
pop
stc
cmpsb
cmpsl
dec
or
mov
xchg
inc
pop
sub
sahf
xor
fcompl
push
mov
in
jae
mov
mov
or
enter
or
jg
push
or
inc
jo
sbb
mov
xchg
mov
scas
pop
ds
mov
and
repz
push
cmp
push
loope
jmp
sub
cmp
xchg
jns,pt
mov
dec
jg
lods
ss
outsb
push
cli
jmp
ret
pop
jmp
mov
inc
mov
mov
and
fbld
mov
pop
lock
insb
jp
sbb
inc
outsl
inc
pop
jbe
mov
xchg
inc
jmp
addr16
inc
nop
mov
std
les
jne
fs
lahf
inc
ljmp
cmp
aad
rcrl
notl
mov
sti
inc
repz
dec
in
xor
fwait
mov
push
jg
or
jnp
test
mulb
addr16
inc
fcompl
test
pop
and
pushf
mov
mov
idivb
xlat
test
sbb
nop
adc
sub
inc
adc
inc
adc
jne
xor
int
sub
pop
pop
jl
idivl
jmp
bound
les
xchg
int3
mov
mov
lcall
cmp
xor
mov
outsl
out
addr16
mov
pop
cli
mov
fidivrs
jl
call
ljmp
icebp
dec
mov
cmp
or
ljmp
mov
and
in
adc
jbe
mov
scas
xchg
mov
je
lret
inc
mov
mov
lahf
mov
stos
pop
push
cltd
sti
movsl
sub
shll
sbb
xchg
dec
std
popa
mov
scas
xor
inc
or
fdivrl
out
insb
fs
sub
cmp
pop
pop
pushf
inc
punpckhwd
inc
adc
loopne
dec
or
pop
sub
fstpt
lods
rolb
mov
mov
and
push
or
cmp
sub
scas
cmp
cs
cmp
in
mov
push
add
loopne
mov
insb
sub
test
jmp
popl
lret
push
cli
roll
pushf
dec
mov
movl
inc
pop
mov
sbb
dec
mov
cmpsl
cmpsb
xor
daa
xchg
aas
sbbl
cmc
fiaddl
sub
or
xchg
xor
rcrl
lret
ret
add
sbb
jp
cmpsb
dec
mov
orl
repz
adc
mov
jmp
stc
dec
adc
int3
sub
cmpsl
sub
cmp
cmp
mov
sbb
mov
dec
xor
jno
lea
and
in
in
in
jo
lcall
push
dec
or
adc
dec
roll
mov
xchg
inc
pop
push
xchg
sub
mov
addb
fmul
fisubrs
lods
movsl
push
add
aas
mov
pop
mov
aas
jo
insl
hlt
jle
sbb
lea
sub
and
mov
fildll
sbb
or
ds
out
aad
adcl
adc
xchg
push
pop
imul
mov
xorl
fs
cmp
adc
fildll
adc
repz
and
es
cwtl
inc
and
lock
cmp
xchg
lods
sub
loopne
test
cmp
xchg
data16
mov
mov
pushf
aaa
lea
push
negl
lahf
cmp
fnsave
pop
add
outsb
mov
test
inc
sub
lds
ljmp
in
mov
xor
mov
mov
pop
rcr
pop
rclb
jecxz
lods
or
or
jle
hlt
popa
scas
daa
xchg
outsl
out
ficompl
cmpsb
test
xchg
sub
adc
sbb
inc
push
clc
dec
mov
inc
cmpsl
ret
repz
sbb
push
nop
cmp
pop
pop
add
dec
fstps
xchg
fcmove
push
mov
rcrb
mov
push
pop
or
cmp
jbe
aad
dec
popa
xor
loopne
dec
or
cli
or
jae
cli
pop
cmp
dec
pop
mov
movsb
jae
fistps
push
jp
jns
push
popa
iret
mov
jge
or
dec
pop
xor
mov
mov
movsl
add
pusha
mov
stos
daa
mov
mov
lods
roll
mov
or
mov
in
mov
push
lahf
cmp
add
pop
dec
mov
jae
xchg
dec
or
lds
jne
mov
insb
and
adc
or
cmpsl
dec
pop
mov
mov
xchg
inc
out
and
sbb
call
inc
jge
add
xchg
jecxz
daa
adc
push
inc
pop
stc
arpl
xor
in
test
inc
or
lods
mov
ret
mov
adc
test
cltd
mov
pusha
push
je
loope
test
dec
int3
xchg
pop
or
in
lea
mov
test
pop
add
adc
mov
clc
bound
fistpll
shr
imul
jb
cli
in
jo
pop
push
inc
sub
add
sub
jbe
mov
bound
inc
std
mov
dec
fcmovnbe
sarb
mov
or
dec
sub
jl
jp
int
fwait
arpl
les
jg
pop
test
inc
adc
adc
sti
xchg
inc
je
mov
gs
not
mov
sub
scas
xor
dec
adc
pop
or
imul
mov
mov
jle
pop
sub
mov
cmpsl
loope
aaa
fildll
test
sub
loop
subl
mov
insb
ljmp
jno
sbb
inc
or
dec
xchg
cmp
add
into
imul
and
dec
pusha
lcall
aam
push
inc
shll
pop
cwtl
cld
push
inc
jg
jne
adc
ja
sub
mov
or
stos
push
scas
add
or
inc
andl
xlat
ljmp
mov
adc
fwait
push
mov
les
mov
lods
xlat
ja
ss
in
pop
or
lret
xchg
mov
movsl
push
rolb
pop
mov
jl
xchg
pop
pop
pop
adc
roll
das
lods
scas
cmp
pop
cmpsb
xor
mov
pop
sahf
xchg
aas
jmp
cmpsb
call
cmc
jmp
std
gs
stc
pop
add
rorb
out
loop
insb
test
sub
fdivrs
cmpsb
cmp
aaa
cltd
wrmsr
mov
fs
add
and
nop
cmp
push
adc
jl
in
mov
xor
or
sub
xor
fwait
cmp
xlat
mov
mov
inc
adc
mov
add
in
adc
sbb
add
mov
or
aad
inc
je
fidivrs
insb
insl
jmp
lcall
add
dec
xchg
adc
daa
icebp
arpl
idivb
add
pop
call
jle
xchg
add
insl
cmc
test
out
jno
mov
add
imul
cmpsb
daa
cwtl
inc
mov
cld
pop
sbb
cld
inc
inc
les
lahf
push
hlt
popa
addr16
push
jp
mov
mov
pop
loopne
xchg
lret
xchg
dec
ret
sbb
adc
or
loop
scas
sub
inc
sbb
faddl
jae
adc
test
shlb
gs
and
mov
test
mov
xchg
daa
dec
or
sub
push
add
mov
add
leave
call
pop
sub
push
add
push
xchg
push
add
pop
bswap
sbb
nop
inc
outsl
or
cltd
mov
or
movsb
xor
pop
or
imul
in
je
jge
sbb
rorb
mov
stos
call
mov
add
icebp
pusha
pop
mov
push
add
repz
insl
lret
adcb
mov
add
das
test
and
cmp
mov
mov
xchg
repnz
sub
push
mov
mov
addl
push
or
dec
test
inc
push
fwait
jne
mov
scas
jp
push
and
push
add
fsts
sahf
cmp
mov
mov
sub
aad
inc
adc
cli
inc
sbb
cmpsl
loope
cld
and
insl
out
inc
lods
jecxz
xor
mov
pushf
xor
mov
shll
aad
xor
int3
insb
jns
lahf
popf
pop
test
jmp
jecxz
inc
or
cmc
push
clc
cwtl
xor
enter
jb
adc
sub
sahf
sbb
in
into
fldl
push
sub
scas
xor
inc
add
push
pop
add
frstor
inc
in
or
jg
rol
mov
loopne
pusha
push
push
mulb
outsb
inc
loop
outsl
adc
ss
add
das
mov
push
pop
mov
cmovbe
lret
cltd
pop
jmp
shl
and
cltd
jle
outsb
out
in
mov
mov
scas
orl
nop
fs
jo
loopne
cmpsb
xor
je
out
pushf
outsb
inc
adc
mov
in
insl
inc
test
mov
or
mov
sarl
mov
cs
inc
roll
mov
mov
xor
or
add
cs
pop
popa
in
dec
and
movsb
sub
cmp
xor
cs
pop
xlat
fistpll
jle
fstl
jecxz
or
mov
mov
cmpsl
std
xchg
or
mov
repnz
fstpt
xchg
inc
or
mov
fidivrs
les
or
dec
adc
leave
push
xor
std
in
mov
aam
enter
jns
adcl
movsl
mov
cltd
cmp
mov
or
jmp
data16
jle
push
popf
aaa
add
fistpll
pop
xor
insl
lcall
add
mov
push
jl
mov
mov
ss
popa
fmuls
jle
in
xchg
xor
pop
xlat
iret
xchg
data16
mov
mov
fiadds
in
unpckhps
pop
jae
les
push
clc
xor
mull
insb
sub
mov
mov
cs
add
xor
push
in
xchg
out
fiaddl
mov
mov
pop
stos
loop
mov
test
sarb
shl
or
pop
mov
add
popf
cmpsb
popa
sbb
jle
mov
mov
dec
movsb
cmp
sbb
push
sti
xchg
push
mov
inc
pop
stc
fs
inc
or
mov
hlt
jbe
test
cmp
les
and
mov
sub
mov
mov
xchg
dec
out
add
xor
cmpb
test
fidivrs
rorl
call
ljmp
mov
mov
xor
test
sahf
cmp
jl
jne
adc
loopne
or
pop
xor
inc
pop
addb
inc
ljmp
sbb
mov
insb
push
in
push
cmpsl
or
mov
mov
daa
mov
xor
test
mov
xor
bound
or
mov
push
mov
rcll
das
addb
push
pop
roll
adc
inc
and
xor
cmp
sbb
adc
and
hlt
pop
xor
mov
out
inc
out
jno
mov
and
and
xchg
aas
mov
mov
mov
iret
lret
mov
jae
sbb
movsl
xchg
add
or
push
mov
sub
push
jns
pop
add
ja
movsl
imul
ljmp
stos
das
movsb
jne
xchg
in
in
mov
dec
adc
enter
adc
pop
add
fadds
dec
dec
cmp
scas
lock
test
jo
mov
mov
and
lods
xor
pop
add
iret
mov
mov
int3
xchg
fwait
std
orl
mov
pushf
sub
lcall
rcl
mov
or
lret
mov
cmp
lret
add
mov
lcall
js
xchg
or
dec
adc
push
loopne
lahf
mov
sarl
push
scas
lahf
jg
ja
or
dec
xor
mov
and
fnstsw
cmpsl
ss
filds
adc
popa
lock
mov
jnp
js
gs
add
in
pop
push
cmp
sbb
inc
pop
clc
fcom
dec
or
movsl
xor
je
in
mov
cmpsl
xchg
inc
loopne
xchg
inc
cltd
cli
iret
lea
dec
pop
scas
jle
test
pop
xor
rcrl
out
jae
rcr
test
and
test
and
xlat
loop
inc
lahf
and
xor
out
sub
je
mov
std
fs
mov
jmp
in
shrb
mov
movsl
xchg
inc
cmp
push
sub
xor
xor
outsb
push
inc
adc
les
repnz
movsb
pop
clc
aaa
push
ljmp
test
jecxz
test
inc
fldl
cmpsl
mov
mov
pop
pop
fisttpl
scas
outsl
and
call
decb
xchg
push
js
inc
rcrl
stos
mov
mov
jns
jl
and
mov
sbb
inc
movsb
dec
push
das
stos
jnp
lcall
call
ss
dec
aas
clc
popa
les
popa
ljmp
mov
mov
xchg
enter
fwait
sbb
mov
rcll
outsb
ret
add
add
inc
pop
repnz
or
in
loop
jmp
add
xchg
push
fwait
sahf
and
inc
jb
pop
scas
aam
pusha
mov
sahf
dec
jne
jecxz
mov
fiaddl
js
fiadds
pop
adc
pop
fs
std
pop
add
into
loope
jo
mov
mov
movsb
lods
xor
movsl
call
cwtl
scas
cld
sarl
mov
rcll
mov
addb
into
sub
add
std
fsubrs
test
jp
push
add
popa
das
lods
fildll
pop
shll
shlb
das
jle
out
inc
movsb
testb
rclb
mov
push
enter
mov
xor
data16
cwtl
mov
in
jae
add
xchg
push
mov
popf
call
mulb
stos
das
imul
loop
insl
gs
sub
aas
add
and
mov
ja
cs
fs
js
outsb
hlt
pop
cltd
lahf
add
fmul
repnz
lret
mov
mov
lods
cmp
adc
stc
pop
dec
ljmp
js
jae
cmpsl
sbb
xor
popf
das
xor
enter
push
clc
pop
lds
sub
stos
sbb
push
dec
mov
push
out
fidivs
or
sbb
out
dec
sarl
and
movsb
test
inc
mov
sbb
add
test
push
push
inc
pop
das
lea
jno
fidivrs
pusha
ds
icebp
pop
pop
sub
push
loopne
cmpsl
sub
push
negl
and
jle
dec
pop
add
and
cmp
dec
rcll
xchg
jo
aaa
or
subb
jne
ficoms
mov
jno
into
mov
outsl
cmp
sub
and
jmp
mov
fiaddl
mov
mov
add
pop
inc
or
pop
push
into
sbb
xor
sub
xchg
lds
cmp
subb
orb
popf
aas
movsl
mov
push
cmp
xor
and
out
xchg
adc
leave
xchg
lret
dec
into
pop
sub
jb
and
cmp
or
ret
jns
xchg
mov
cmpsl
sbb
cmp
int3
mov
fdivr
pop
jns
xchg
inc
cmp
mov
sub
arpl
arpl
outsl
add
pop
lods
jno
cltd
adc
dec
xorl
mov
jae
mov
lret
stos
xor
das
mov
stc
fstpt
scas
xchg
fistpll
mov
dec
push
imul
fwait
popf
inc
xchg
jne
outsl
sti
movl
push
stc
pop
sub
outsl
in
jne
sbb
xchg
dec
cs
stc
xor
data16
out
push
call
mov
mov
int3
adc
add
and
pop
cmp
cmp
dec
push
inc
or
jnp
stc
xchg
xchg
jne
lcall
sbb
jo
addr16
push
mov
jns
sbbb
in
cs
cmp
push
loope
mov
divb
adcl
jmp
mov
imul
roll
sbb
test
xor
xor
es
xchg
jl
ret
or
add
mov
fwait
loopne
sbb
rcrb
or
pusha
in
dec
pop
mov
clc
mov
inc
pop
test
dec
adc
dec
lea
das
jo
lahf
sub
cmp
adc
dec
cmp
scas
or
cmp
mov
or
loop
das
stos
lods
pushl
mov
sub
sarl
loopne
andb
test
mov
mov
dec
or
bound
mov
stc
dec
or
cli
loope
jl
or
out
les
cmc
mov
jge
gs
cmp
lcall
cmp
xor
mov
push
inc
or
pop
mov
adc
aam
popl
enter
mov
fcos
push
add
scas
or
push
mov
loopne
sub
jl
aaa
test
negl
fiaddl
sub
fildl
pop
leave
and
pop
aas
pop
sti
jl
or
push
or
sbb
dec
xchg
push
sub
cmp
push
xchg
inc
and
and
and
aas
fidivrl
ret
aas
aaa
aaa
mov
sub
add
out
pusha
repnz
pop
mov
daa
push
push
or
test
mov
and
xchg
ja
mov
jbe
aam
roll
rcrb
jno
out
inc
sbb
popf
jae
bnd
fimull
or
pushf
adc
aas
lcall
sbb
daa
mov
scas
mov
push
add
lods
and
xchg
mov
fld
mov
xor
jg
and
aad
jl
mov
loopne
dec
ficomps
fwait
aam
ret
xchg
ja
rolb
ror
lea
or
jno
popf
repz
dec
in
cmpsb
xor
jg
jb
or
xchg
imul
push
shll
or
or
lds
stos
or
fildl
and
lods
repnz
pop
jl
mov
test
pop
mov
cmpsl
loop
outsb
mov
jo
imul
outsb
ljmp
fidivrs
test
mov
add
cwtl
repnz
enter
outsb
in
lahf
mov
adc
inc
adc
inc
ss
cmpsl
add
bound
mov
fiadds
adc
inc
cmp
stos
hlt
xor
sbb
pop
add
lret
and
cmp
test
mov
sbb
ja
mov
outsl
adc
scas
ljmp
jne
adc
arpl
movsb
sub
or
pop
insl
xchg
mov
adc
call
rcrb
rcrb
lds
movsl
xor
loopne
imul
into
outsb
ds
pop
sbb
mov
xchg
inc
lods
in
inc
aaa
jle
sbb
mov
mov
out
pop
lods
mov
test
lahf
or
ret
cmp
daa
jle
in
lret
xchg
mov
insb
mov
shrl
add
jge
push
xchg
aaa
jno
xor
rorb
push
xor
popl
pop
cli
fstpl
inc
push
movsb
xor
faddp
or
pop
add
inc
jbe
outsl
out
push
mov
ret
outsb
add
pop
out
fmull
mov
xor
leave
xor
mov
lret
ljmp
loop
popf
inc
mov
mov
cwtl
inc
dec
xchg
pop
lcall
sarb
jns
psadbw
mov
outsl
mov
and
jns
add
stos
xor
jp
addr16
xor
les
dec
push
lahf
std
mov
mov
inc
jne
push
xlat
xchg
xlat
xchg
add
fdivp
inc
push
sub
add
inc
xor
sahf
lea
daa
mov
fmul
mov
xor
mov
mov
push
add
pop
rcrl
jle
fnstenv
sub
pop
popa
inc
xor
jno
arpl
bound
cltd
jnp
roll
repnz
adc
mov
inc
or
adc
jne
inc
sahf
inc
sub
cmp
jp
fmuls
andl
cmp
cwtl
ss
aas
daa
rorb
fists
fwait
or
mov
mov
push
fisttps
rcl
xorl
fistpll
sub
arpl
add
loopne
push
pop
lock
shlb
frstor
ret
insl
add
jp
mov
stos
xor
pop
repnz
cmp
ret
and
adc
mov
inc
push
dec
fildl
ds
cmc
add
jge
sub
incl
inc
adc
inc
xchg
js,pn
loop
out
push
call
in
mov
std
add
mov
pop
mov
lods
push
notl
inc
sbb
mov
mov
mov
jb
shll
xor
ret
ret
arpl
daa
mov
mov
mov
xchg
push
jmp
sahf
cmp
fistpll
mov
mov
mov
xchg
das
inc
adc
xchg
mov
int
mulb
sbb
leave
inc
frstor
mov
mov
xchg
inc
mov
subb
cmp
test
dec
or
fsts
mov
jl
in
imul
push
fs
cmovno
inc
adc
jns
adcl
arpl
test
mov
test
mov
push
jmp
leave
aad
clc
and
mov
sbb
push
clc
push
push
lahf
jb,pt
pop
cld
stos
imul
out
stos
inc
jecxz
orl
loope
add
pop
xor
sbb
dec
bndstx
jns
push
lret
inc
aad
arpl
pusha
hlt
mov
mov
scas
inc
test
sub
xchg
push
adc
jbe
dec
adc
pmullw
or
mov
data16
jmp
xchg
mov
inc
or
pop
add
test
jg
movsl
mov
push
std
mov
lods
inc
or
das
inc
pop
mov
lahf
inc
lods
cmpsl
cmp
jnp
sarl
jo
xchg
lds
scas
es
jle
xor
xchg
xor
es
and
xor
push
xchg
jns
cmpsl
ret
and
movsb
mov
inc
xchg
mov
cmpsb
test
and
add
push
clc
movsw
shll
not
in
test
sbb
dec
pop
or
jb
popf
inc
stc
arpl
sub
cmpsl
int
adc
cmc
pop
mov
fisubs
jg
fldl
dec
mov
pop
nop
enter
les
xor
daa
mov
lds
test
pushf
mov
lcall
cmc
mov
or
inc
adc
mov
test
loope
dec
out
add
pop
xor
push
in
mov
add
adc
aaa
pop
imul
jl
mov
add
and
inc
cltd
xor
aas
mov
mov
lret
aam
hlt
add
daa
jnp
pop
inc
repz
cltd
xor
mov
jmp
das
push
and
insl
push
aaa
dec
in
je
mov
adc
push
sbb
enter
ds
insb
dec
out
add
mov
insl
add
aad
jp
adc
pop
gs
inc
xchg
jp
mov
mov
cmp
jle
push
pop
repz
pop
add
adc
ret
cwtl
das
cmc
add
xor
mov
dec
push
pusha
testl
mov
pushf
xor
adc
test
jle
xor
xchg
lahf
fsubrs
mov
in
repnz
inc
adc
jbe
mov
mov
test
out
add
pop
xor
outsb
add
xchg
add
fsub
stos
inc
adc
and
addr16
inc
xlat
jge
out
mov
fildl
or
jl
and
and
jbe
inc
xlat
mov
mov
cmc
add
insl
sbb
ds
mov
lcall
lret
mov
adc
xlat
outsb
push
xor
cmc
mov
adc
or
xor
dec
sub
push
out
add
mov
outsb
add
add
add
xchg
js
mov
mov
pusha
call
or
jg
sbb
hlt
dec
pop
push
popf
lea
adc
rcrl
xor
dec
inc
push
popa
clc
andl
cltd
movsb
jg
mov
popf
xor
push
adc
jl
xor
xchg
popf
fnstenv
mov
out
lock
je
mov
mov
stos
inc
fucom
push
call
xor
outsl
push
insb
push
out
test
add
loopne
inc
adc
and
dec
inc
xlat
jnp
out
mov
fiaddl
adc
sub
lcall
xchg
mov
testb
insl
sbb
mov
fwait
xor
lret
cld
loope
adc
fsubrs
xor
fs
lea
les
cmc
fmuls
lret
test
pop
imul
mov
outsl
push
in
shl
jnp
jle
cltd
push
bound
cmpsl
mov
popa
out
ds
or
cmpb
pop
hlt
dec
pop
pop
sahf
mov
sahf
lods
and
xor
incl
xor
mov
clc
andb
cwtl
mov
hlt
mov
negb
stos
ds
mov
enter
jo
mov
out
out
testl
jae
mov
mov
inc
fsub
push
call
xor
outsl
push
imul
orl
aad
stos
inc
adc
and
gs
inc
xlat
jp
out
mov
flds
adc
sub
mov
jae
inc
fsubrs
rcrb
add
insl
sbb
jge
push
cmp
mov
fwait
xor
leave
mov
adc
dec
in
jo
lea
ret
adc
hlt
xlat
mov
or
xor
inc
sub
call
scas
mov
in
add
mov
push
popa
lods
inc
xchg
jne
mov
mov
popa
out
ds
pop
jmp
hlt
dec
pop
pop
sahf
mov
adc
mov
inc
fisubrl
adc
clc
andl
push
aam
hlt
mov
cmc
popf
xor
or
stos
cmp
pop
xor
fstenv
mov
out
out
testl
jb
mov
mov
stos
inc
frstpm(287
push
call
das
cmp
push
out
orb
fwait
aam
stos
inc
adc
and
fs
inc
xlat
jns
out
mov
pop
cmc
lret
fadds
adc
sub
mov
jb
inc
fsubrs
iret
pop
testb
insl
sbb
jge
push
cmp
mov
xor
enter
fbstp
adc
outsl
dec
xor
bound
lea
ret
repz
mov
or
test
pop
addr16
call
scas
mov
in
add
add
xchg
je
mov
mov
popa
in
ds
push
jmp
hlt
dec
pop
pop
sahf
mov
adc
cltd
xor
std
inc
fisubrl
adc
clc
andb
mov
hlt
mov
hlt
popf
xor
or
stos
cmp
mov
enter
jo
scas
dec
out
in
testl
jno
mov
xchg
stos
inc
push
call
cs
outsl
push
imul
and
mov
stos
inc
pmaddwd
mov
arpl
xlat
js
out
mov
pop
cmc
lret
pushf
or
jl
push
sub
mov
jno
inc
fsubrs
into
pop
idiv
in
insl
pop
and
push
cmp
mov
pushf
xor
mov
push
sbb
jo
das
dec
in
outsb
testl
repnz
and
adc
lret
inc
daa
test
pop
push
jmp
lods
mov
in
decl
es
pop
lods
inc
nop
jb
mov
jecxz
aas
cmc
add
xorl
push
or
lcall
xor
sti
inc
fldt
mov
stc
jle
xlat
outsb
xchg
lahf
adcb
mov
mov
repnz
xor
cmp
push
ja
xor
mov
push
out
jmp
sbb
ds
lods
outsl
push
lea
cmpsb
stos
inc
fsub
push
jmp
sub
jo
addr16
out
jg
mov
rcr
lods
inc
or
das
lret
inc
inc
fdivs
call
test
push
popf
push
ljmp
pop
cmp
inc
fldcw
int3
pusha
idiv
jecxz
outsb
adc
ss
mov
popf
xor
mov
stos
mov
enter
jno
sub
clc
sahf
jg
add
mov
mov
add
xor
inc
push
fs
ljmp
jno
call
or
fwait
dec
pop
scas
inc
mov
mov
loope
inc
xlat
repz
xorb
testb
mov
cwtl
cmpsl
daa
mov
jmp
inc
fsubrl
or
arpl
jl
fsubrs
popf
sbbl
in
lahf
and
adc
push
jne
xor
mov
push
call
sbb
outsl
push
xor
lea
xor
inc
loope
ljmp
jno
dec
out
jge
es
fisubrl
mov
pusha
inc
inc
fdivs
xorb
pop
sahf
add
daa
and
xor
inc
fisubrl
lret
popa
clc
cld
loope
outsb
adc
adcb
xor
mov
sahf
xor
mov
fnstenv
enter
jb
sub
pop
imul
popf
jge
add
mov
mov
add
ss
and
jmp
jbe
pop
test
jb
out
in
sti
or
fwait
dec
pop
scas
inc
lea
mov
loopne
inc
xlat
icebp
add
xorl
pop
testb
mov
xchg
cmpsb
sub
jmp
or
sti
jnp
fsubrs
pushf
sbbb
mov
jecxz
mov
lods
ss
mov
lret
fdivl
test
cli
xchg
sbb
outsl
push
cs
scas
insl
dec
lea
mov
int
mov
push
jmp
test
sub
jb
gs
out
jnp
nop
daa
mov
fldcw
mov
pop
inc
inc
fdivs
ljmp
rorl
lahf
add
jge
sbb
es
imul
test
lret
sti
outsb
adc
cmc
mov
mov
ret
mov
enter
jae
sub
pop
push
xchg
pushf
jnp
add
mov
mov
add
aaa
into
inc
and
in
xchg
je
pop
cmpsb
mov
or
in
stc
pop
xchg
sub
sbb
dec
pop
mov
mov
popf
lods
into
fistpll
in
test
adc
inc
push
or
xchg
movsl
sub
mov
xor
testl
cmp
cld
jp
fsubrs
fwait
sbbl
scas
testb
add
push
jae
xor
xchg
call
sbb
outsl
push
sub
sbb
jg
aaa
into
mov
fists
adc
leave
pusha
xor
fs
out
jns
xchg
sub
fsubrs
mov
pop
aas
inc
fdivs
jmp
mov
pop
test
or
push
and
fwait
xor
inc
fsubrl
leave
arpl
cli
fst
outsb
nopl
mov
mov
stos
mov
mov
enter
je
daa
dec
out
imul
add
mov
mov
decb
cmp
aas
pop
stos
inc
push
pusha
push
in
xchg
jb
pop
movsb
mov
or
testl
mov
mov
mov
fnstsw
test
punpcklbw
inc
push
or
xchg
mov
pushf
xor
cmc
inc
fisubs
or
cld
js
fnstenv
cltd
sbbl
scas
testl
xor
mov
lret
test
push
jmp
pop
stc
jo
sub
sbb
jle
aaa
into
mov
fstl
push
repz
xor
bound
jg
adcl
lret
inc
or
and
sbb
ds
fldcw
jmp
scas
nop
pusha
test
jecxz
adc
push
ss
xor
inc
fsubl
arpl
clc
outsl
push
sbb
lea
mov
stos
mov
mov
leave
add
es
out
addr16
xchg
cltd
js
add
jmp
mov
std
or
iret
cmp
pop
push
in
jno
pusha
mov
out
testb
sub
push
mov
mov
mov
fstpt
in
test
push
popa
clc
aas
dec
or
xchg
mov
popf
xor
repz
fisubs
mov
cld
jbe
fidivl
xchg
sbbl
lods
clc
fucomip
mov
scas
xor
xor
je
movsl
push
ljmp
jno
sub
sbb
jge
aaa
into
mov
fistl
or
lret
bound
jae
pusha
inc
jmp
sub
aam
inc
push
jmp
mov
pop
cmp
jmp
lods
popa
clc
ror
mov
adc
sub
data16
frstor
fs
neg
fnstenv
sbb
mov
mov
lods
mov
mov
lret
fidivs
and
call
xchg
jbe
push
test
sbb
sti
or
sarb
sbb
inc
dec
pop
push
out
lea
popa
mov
ret
hlt
add
inc
push
mov
xchg
mov
fnstcw
out
test
stc
cmp
pop
adcb
lahf
sub
shlb
dec
fbld
add
data16
je
xchg
test
stos
stc
nop
fucomp
mov
scas
xor
push
outsb
push
xor
jne
mov
cld
xchg
adc
jno
sub
sbb
jnp
cmp
mov
ficoml
or
lret
bound
sub
jmp
sub
shll
mov
pop
cmp
insb
jp
subl
mov
adc
sub
push
xor
fisubs
les
cmc
fcomp
jo
pop
test
dec
sub
mov
mov
lods
scas
mov
xor
add
fbstp
and
push
fs
xchg
xchg
je
push
cmpsb
mov
mov
lea
or
sarl
sbb
mov
popa
lahf
lods
jbe
ffreep
call
sub
adc
sahf
inc
push
mov
test
mov
fdivs
out
xchg
or
cmp
jge
adcb
sahf
sub
iret
scas
sahf
xor
and
mov
jae
xchg
test
test
mov
scas
cs
pop
insl
dec
xor
jbe
mov
std
xchg
adc
jno
es
es
cmp
mov
fsts
or
lret
bound
sub
or
inc
jmp
sub
shlb
mov
pop
cmp
push
in
test
int3
or
nopl
rcll
xor
jno
fbld
ret
data16
hlt
fnstenv
push
test
sub
mov
mov
lods
lods
mov
xor
decl
loopne
inc
and
push
xchg
xchg
jb
pop
movsb
mov
mov
lds
sarb
sbb
lock
bound
mov
xchg
sub
adc
lahf
inc
push
mov
andl
movsb
shrl
mov
imul
xchg
or
cmp
movsb
jnp
sbbl
int
lahf
ss
dec
loopne
add
jno
fdivl
xchg
test
test
xchg
mov
scas
sub
dec
ss
mov
jbe
mov
std
xchg
adc
jb
and
inc
nop
daa
js
cmp
mov
scas
inc
lret
xlat
push
out
or
int3
arpl
sub
pop
inc
ljmp
xchg
or
add
es
push
cmp
ja
test
lret
sti
faddl
rorl
xor
mov
shll
aad
jno
adc
sbb
sub
pop
addr16
jnp
lods
lods
mov
xor
decb
push
ljmp
jno
mov
les
shlb
pop
scas
inc
dec
push
pop
lock
arpl
ljmp
adc
mov
andl
push
out
out
xchg
or
dec
or
sbb
mov
loopne
add
outsl
push
fnsave
test
cmpsl
sti
xchg
mov
mov
aaa
rcrl
aaa
into
jle
fbstp
lahf
push
in
rcr
std
xchg
pslld
and
sbb
ja
cmp
mov
scas
inc
lret
out
push
in
int
push
sub
pop
aas
jmp
jno
xchg
sub
into
mov
add
daa
mov
push
aaa
inc
fsubrl
in
test
enter
fildl
rorl
pusha
insl
dec
fistps
mov
adc
nop
pop
mov
scas
stos
mov
xor
ja
push
push
jmp
pop
xchg
nop
jo
or
ret
nop
daa
cmc
add
shlb
scas
inc
dec
push
pop
lock
fs
cmpsl
ja
fnstcw
sub
adc
mov
jg
sub
shlb
xchg
inc
or
sbb
lods
mov
loopne
add
push
xor
insl
push
fidivs
mov
xchg
fsub
mov
mov
xor
cmp
jge
fbstp
sahf
push
in
iret
xchg
or
das
sbb
jbe
cmp
mov
mov
leave
rcll
add
into
gs
ds
xorl
sub
int3
mov
jecxz
mov
push
xor
out
test
or
neg
sbbb
sbb
ret
mov
loopne
jg
push
mov
addr16
out
rcr
jae
adc
xchg
push
arpl
test
lret
sti
or
js
sbb
in
dec
pop
call
mov
rcll
xor
inc
inc
push
pop
icebp
test
gs
movsl
js
xlat
mov
xchg
sub
aas
dec
mov
jge
sub
xchg
sahf
shrb
mov
fsubp
icebp
lock
add
push
movsl
jne
test
mov
mov
loope
inc
push
xor
push
jne
lea
xchg
loopne
cmp
clc
sbb
dec
cmp
jnp
loopne
mov
xchg
or
je
and
sbb
pop
inc
xchg
sub
shll
rcrb
add
into
sbb
in
subl
sub
lret
mov
std
loope
mov
push
xor
fs
xchg
or
sbb
sbb
dec
sub
loope
jge
push
scas
mov
fdivl
ja
xchg
push
bound
scas
cmpsl
mov
pop
out
ss
or
jns
sbb
dec
pop
add
sahf
lods
push
mov
mov
cmp
xor
mov
inc
push
pop
icebp
andb
cwtl
mov
in
sub
xchg
sub
ds
mov
jnp
sub
nop
pushf
shrb
mov
fsubp
out
lock
add
std
xor
in
cli
sbb
out
jne
int
pop
mov
dec
push
bound
mov
mov
and
movsb
fmull
cmp
xchg
sub
mov
mov
aam
aam
cmp
push
in
repnz
and
ljmp
jns
out
sub
ret
cmp
or
push
push
popa
cltd
or
mov
pusha
and
xchg
dec
ds
repz
das
stos
cmp
movsb
sub
cmp
sbb
lcall
jo
push
mov
lea
push
dec
pop
les
testl
sti
pop
mov
std
jno
and
imul
xor
inc
roll
push
scas
xor
mov
cmpsl
pop
fidivrs
push
mov
ja
mov
in
xchg
sbb
cltd
scas
nop
in
sub
outsl
fcmovnb
fwait
push
mull
or
fisubrs
mov
pop
xor
sbb
cmc
pop
mov
sahf
dec
mov
sub
push
arpl
dec
push
lret
push
cmpsl
insl
sahf
pop
nop
addr16
dec
xlat
pusha
inc
sbb
jne
and
repnz
and
or
hlt
and
inc
sbb
divl
mov
sub
int3
mov
into
add
add
fisubs
shll
and
push
popa
push
dec
adc
shrb
rorb
lods
int
inc
stos
jecxz
enter
sub
push
mov
xlat
out
out
inc
movsb
xchg
mulb
mov
jns
cmp
in
lock
ret
and
mov
sbb
adc
inc
xchg
xchg
add
notl
loopne
insl
in
and
movsb
adc
push
bound
aaa
pushf
jmp
movsl
jp
sub
nop
gs
call
stc
aas
movsl
int
or
sub
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
testb
dec
jnp,pn
mov
dec
loop
mov
add
scas
sti
pop
aam
std
int
push
xchg
jp
fldcw
loope
push
orb
mov
loope
rcll
adc
aad
adc
outsl
xchg
rorb
insl
inc
insl
xchg
mov
inc
imul
cmp
sbb
or
cmpsb
mov
jnp
loopne
stos
xchg
jns
int3
cmpsl
pop
mov
psubb
push
cmp
or
cld
cmp
dec
ljmp
or
push
adc
addr16
sti
push
ss
andb
sbb
outsl
xor
aam
loopne
push
insb
xchg
push
test
xchg
insb
push
dec
or
loope
enter
jp
cmpb
jge
adc
cmp
mov
ljmp
je
or
mov
push
in
dec
sub
mov
sub
or
xor
lock
cli
inc
loope
pop
into
mov
add
push
sbb
dec
iret
mov
or
mov
stc
outsb
outsl
iret
xor
test
push
adc
add
mov
pop
pop
inc
inc
xor
stc
psadbw
lret
mov
divb
pusha
nop
lret
sub
jns
cmp
into
and
repz
clc
and
pop
mov
es
push
gs
sub
out
sahf
aaa
scas
pop
lds
dec
dec
add
lcall
jmp
dec
int3
pop
popa
push
outsb
push
mov
test
cmpsl
mov
test
scas
xor
pop
cmp
loope
xchg
test
cmc
lods
adc
add
xor
mov
mov
fbstp
mov
push
cmpsl
xor
and
pop
scas
enter
xchg
add
and
sub
insl
clc
add
ds
hlt
lcall
inc
pop
jp
imull
out
jl
adc
fstpt
jno
daa
push
out
leave
mov
sub
inc
into
cltd
mov
mov
shll
xlat
mov
stos
dec
in
dec
xchg
insl
push
aaa
add
lret
stc
xchg
int3
iret
mov
cwtl
dec
xchg
mov
xor
ret
mov
lret
hlt
or
aaa
out
mov
ss
lret
cmp
std
les
lret
ja
jmp
cltd
push
fldenv
out
adc
add
lds
lea
insl
sbb
std
jp
jmp
or
cmpsb
lock
stos
pop
lods
xchg
jo
notl
adc
stos
lea
jae
insb
shll
pop
incl
adc
in
out
mov
loopne
pop
and
push
icebp
xor
xor
aad
imulb
shrb
mov
ljmp
test
add
cmp
in
sbb
loop
push
mov
jmp
cmpsl
in
mov
call
nop
jno
mov
mov
dec
mov
dec
mov
mov
cmp
shll
aaa
orb
fbld
pop
les
inc
mov
mov
mov
sti
into
xor
std
icebp
jbe
xchg
cmp
je
cmp
fnstenv
adc
out
fidivs
test
cs
scas
mov
sub
mov
ljmp
daa
mov
cmp
daa
mov
push
cmpsl
xor
mov
movsl
cld
mov
ja
pop
mov
pop
mov
cli
out
cli
lock
mov
das
add
aam
das
pop
pusha
fcoms
sahf
bound
cmp
xchg
cli
and
fldl
dec
mov
cmp
mov
stos
xchg
dec
cmp
push
jo
jmp
cmp
pop
lods
lods
das
je
aad
rcrl
sub
daa
mov
xor
cmpsl
std
jl
add
mov
cmpb
mov
outsl
js
adc
test
pop
in
inc
ret
and
mov
sub
cmpsl
pop
icebp
int3
daa
lea
xor
cmp
inc
add
mov
mov
mov
jp
sub
xlat
cmpsl
xor
sahf
pop
mov
add
icebp
test
inc
push
js
adc
jo
jno
pop
or
iret
mov
push
mov
xlat
dec
scas
push
mov
lods
repz
inc
std
and
add
or
dec
sub
sbb
rorb
mov
pop
bound
cli
repz
xchg
add
cwtl
into
clc
jg
insb
sarb
sub
xor
dec
push
inc
mov
push
push
inc
repnz
pop
arpl
adc
psrld
xor
jns
mov
pop
insb
xchg
mov
out
shlb
jno
and
fdivl
lods
add
adc
iret
mov
jbe
mov
fst
in
lahf
daa
cmpsb
mov
pop
dec
fs
sub
mov
pusha
pop
and
sub
push
std
pop
xchg
sub
scas
lods
add
jno
gs
out
jne
arpl
xor
add
xchg
add
mov
mov
cmpsl
add
add
fs
mov
sti
lock
cmpsl
pop
fmulp
jns
test
testl
sub
inc
cld
insl
pop
movsl
bound
scas
xor
pop
mov
mov
push
mov
cli
int3
lods
mov
out
aam
lret
cli
jno
push
je
mov
xchg
fiadds
inc
or
mov
sub
sarl
pop
notb
pop
inc
sbb
lea
in
mov
sbb
xchg
mov
sub
inc
add
in
lahf
sbb
incl
cmp
enter
std
mov
lods
xchg
aad
les
inc
sti
pop
mov
mov
dec
push
or
mov
idivl
ret
lret
and
fnstcw
mov
out
out
rol
dec
es
sbb
dec
cmp
and
xor
xchg
mov
mov
push
fwait
inc
dec
popa
adc
out
sahf
push
inc
popa
addr16
ficomps
mov
pop
mov
jnp
negb
mov
mov
dec
cltd
jno
adc
mov
ljmp
int3
dec
call
movsb
sahf
pop
ljmp
jbe
push
mov
daa
fildll
xor
imul
stc
add
fcomp
cwtl
mov
push
std
and
into
cmpsl
lods
outsb
fnstcw
dec
int
cltd
xchg
xchg
addr16
pop
loope
xlat
sarb
jns
jge
popfw
outsb
ret
dec
add
dec
add
lahf
dec
add
mov
mov
lret
stos
add
stos
lret
stos
sub
push
or
clc
sbb
push
xchg
cmp
or
xlat
jne
and
xchg
dec
push
es
rorb
