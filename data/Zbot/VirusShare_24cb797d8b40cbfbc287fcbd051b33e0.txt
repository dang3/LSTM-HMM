mov
push
dec
lret
mov
and
jns
popf
mov
inc
outsl
loope
fcoms
inc
test
sub
andb
cld
mov
sbb
push
shlb
out
mov
sub
mov
sub
daa
mov
or
jbe
std
mov
add
imul
dec
int
xorb
jne
dec
push
scas
add
mov
adcl
mov
test
mov
xchg
and
pushf
cs
jnp
adc
cli
lahf
xor
das
enter
xor
ret
dec
adc
ss
lds
pop
ss
xchg
fsubl
push
enter
decb
icebp
xor
mov
mov
dec
mov
jne
mov
mov
cmc
orl
js
outsl
pop
jbe
sti
jbe
cwtl
mov
cmc
mov
mov
je
dec
and
inc
dec
and
mov
add
jae
adc
cmc
inc
pop
data16
or
jnp
xchg
xchg
clc
cmp
scas
mov
adc
and
dec
pop
imul
push
aaa
gs
push
pop
pop
add
inc
and
add
je
dec
subl
or
adc
int3
sti
cmp
fisubl
cmc
decb
jno
adc
fiaddl
push
cmp
inc
inc
jns
jmp
mov
push
rcr
testb
cs
pop
jns
sarb
lret
push
or
fadds
dec
fcomi
movsb
push
adc
and
jae
movsl
cld
add
gs
inc
addl
movsl
cmp
inc
jns
shlb
add
jo
stc
xor
cmpsl
je
mov
pop
orb
push
and
mov
js
and
ret
or
xchg
xchg
aas
out
add
inc
jne
pop
outsl
hlt
stos
inc
in
orb
add
and
add
pop
orb
incb
hlt
add
pop
orb
jl
mov
cmp
jbe
mov
stos
aam
in
adcb
cmp
pop
in
js
and
adc
cmp
mov
imul
int3
repz
pop
ja
push
xchg
loope
dec
ds
mov
xchg
inc
insl
add
aam
xchg
js
pop
imulb
sub
lret
jbe
fstps
popf
jp
pop
js
mulb
jmp
mov
je
scas
test
imul
mov
clc
pop
jns
adc
mov
test
imul
and
jne
test
add
pop
addl
mov
adc
ficoml
jle
dec
sbb
bound
xchg
pop
mov
jne
mov
in
jne
ret
or
scas
pop
mov
imul
vmovupd
and
dec
pop
cmc
mov
mov
adc
xor
dec
sarl
xor
sub
enter
xchg
data16
push
inc
imul
adc
orb
jnp
gs
loop
fsts
bound
inc
out
cli
and
push
popa
aam
or
scas
push
jne
adc
and
ret
jns
into
aas
jbe
fstpt
jno
cmc
cwtl
dec
adc
movsb
push
mov
sbbb
sub
in
xorb
orb
movsl
inc
mov
adc
add
push
jne
outsb
mov
lcall
xchg
outsb
mov
dec
out
movsl
dec
inc
jne
pop
pop
cmp
mov
inc
cwtl
cmp
mov
add
test
iret
mov
pop
push
rep
ret
orb
lcall
iret
or
cmc
pushf
pop
aad
mov
loopne
mov
and
orl
testb
adc
xchg
orl
in
add
and
scas
ret
orb
sahf
pop
push
testb
out
or
out
push
adc
cmc
fisubrs
add
mov
mov
xchg
and
xorb
sbb
inc
jne
cmc
cmpsb
insb
shl
andl
mov
add
mov
mov
cli
inc
int
or
das
rcl
ja
xchg
out
test
enter
sar
lcall
pop
test
and
rorb
or
pop
test
add
xor
out
add
std
push
xchg
cmpsl
cmp
lea
jns
rorb
cld
and
out
push
popf
pop
insl
xor
pop
cmc
divb
mov
xor
orb
mov
pushf
scas
or
das
rcr
repnz
inc
es
orb
mov
sub
and
dec
fistl
mov
mov
mov
jge
movsl
dec
add
fildl
scas
sbb
cmp
inc
sahf
xchg
hlt
stos
ja
jne
or
and
dec
getsec
pop
les
cmp
mov
and
aam
mov
and
mov
dec
sarb
shlb
jne
dec
mov
ja
xchg
movsl
pop
inc
ret
mov
ja
ja
flds
cmp
xlat
dec
and
loope
jg
into
sbb
movsl
shlb
jne
dec
jae
add
out
mov
dec
and
hlt
rcrb
repz
roll
into
and
dec
cmpsl
cmp
outsb
cwtd
mov
adc
das
lahf
jbe
adc
xchg
pop
out
cmpsb
sbb
inc
jns
shrb
adc
adc
xchg
addb
scas
lea
std
add
dec
xor
out
and
dec
xor
mov
test
push
mov
jne
dec
into
dec
test
lret
cmp
movsb
push
clc
jg
ds
jmp
lock
ds
add
sbb
push
xor
fldl2t
add
xchg
daa
fsubl
shll
or
adc
inc
lock
movsl
push
int
inc
mov
lds
orl
daa
jecxz
xor
mov
clc
stos
into
mov
rclb
mov
pop
scas
xor
add
cmc
xchg
int3
and
int
pop
mov
pop
mov
mov
push
stos
imul
test
lret
push
repz
push
mov
adc
aam
sub
mov
jns
leave
lods
mov
lahf
pop
pop
mov
push
cmp
jg
mulb
jns
fwait
sub
aad
and
aad
jl
mov
lods
sub
and
add
dec
xorl
mov
inc
jp
out
cmp
and
cmp
adc
dec
insb
dec
pop
adc
out
je
call
hlt
aaa
mov
rcrb
loope
add
pop
imul
xchg
mov
addb
dec
movsl
add
cmpsb
jne
push
lea
sbbb
dec
repz
fistl
push
push
mov
sub
or
mov
cmp
in
into
js
push
andl
cmc
hlt
shl
cmc
lret
pop
mov
mov
ficoms
inc
add
and
jnp
add
vcmpss
sbbb
aam
jmp
jmp
into
jnp
sbb
test
loop
jne
mov
arpl
pop
shlb
mov
scas
xchg
test
mov
mov
sbb
mov
xchg
lcall
in
inc
mov
mov
into
add
xchg
sub
stc
add
xchg
jne
aad
pop
in
daa
cs
sub
icebp
jmp
or
xchg
dec
rorb
stc
sub
das
mov
push
imul
aad
lea
or
mov
sbb
inc
rorb
into
lret
xchg
and
pop
je
andb
clc
fdivrs
xchg
scas
aaa
jle
mov
into
pop
cmp
scas
imul
cltd
xchg
jo
add
jg
lret
loop
icebp
add
mov
dec
pop
or
daa
and
pop
mov
sbbb
mov
movsb
inc
jmp
outsl
nop
insl
cld
jmp
cmp
iret
lods
xchg
sbbb
lret
sub
and
xchg
dec
fcmove
scas
add
mov
mov
dec
xchg
dec
pop
inc
popf
outsl
in
dec
in
mov
ds
and
sub
sahf
aas
lods
mull
dec
aaa
xor
stos
inc
sub
popa
imul
xchg
cmp
xchg
add
lea
mov
add
and
xchg
xchg
mov
pop
orb
fisubrl
or
jb
dec
adc
mov
dec
std
mov
shlb
daa
mull
jo
into
fnstsw
stc
jnp
sub
xor
push
mov
add
sbb
xchg
sbb
xor
scas
mov
lret
adc
lock
hlt
stos
sbbb
cmp
dec
xor
push
inc
mov
sub
add
addb
xor
and
jne
mov
xor
ss
dec
jle
sbb
push
mov
pop
sub
push
adc
inc
cld
inc
lods
dec
paddsw
cltd
jne
jne
mov
add
popf
addr16
addb
repnz
hlt
call
jge
fcom
push
mov
test
pusha
fs
sbb
and
cmpsb
push
pop
cmp
gs
jl
inc
cmpl
add
push
movsl
add
adc
test
shlb
mov
fidivl
sub
xchg
mov
mov
xchg
jae
sbbl
into
dec
nop
add
mov
stc
andb
stos
pop
out
test
lret
iret
jb
subl
pop
dec
push
xchg
cmc
pop
push
in
xchg
dec
fildl
xchg
mov
clc
aas
inc
jmp
loope
leave
inc
mov
adc
pop
cwtl
ljmp
add
lahf
fdivp
pop
and
mov
dec
sub
or
into
dec
sub
sbb
lds
mov
cmp
cmp
mov
jle
scas
jl
push
push
and
and
mov
or
cmc
jnp
jmp
jbe
xchg
insb
popl
xchg
dec
cmp
add
mov
mov
dec
dec
insb
mov
xchg
mov
sbbb
inc
nop
into
and
out
cmpsl
jmp
or
inc
jbe
jb
mov
data16
fs
inc
inc
rcrl
movsb
and
cmc
in
arpl
lea
push
push
cmc
arpl
mov
or
hlt
popa
fsubp
mov
mov
push
adc
pop
pusha
bound
js
outsb
adc
ret
sub
shr
stos
test
mov
into
sub
ljmp
and
setns
aas
mov
jne
cmpsl
std
flds
enter
dec
jns
jne
cmp
mov
jns
dec
mov
pop
les
scas
xchg
cltd
xchg
jne
mulb
cmp
jp
lods
enter
pusha
test
movsl
sub
sbb
mov
dec
jne
cltd
stos
test
mov
xor
adc
shlb
into
mov
test
and
push
ret
sahf
fwait
push
add
cmc
fnstcw
sarl
fstpl
mov
dec
movsb
es
aaa
ljmp
dec
test
andl
jne
adc
lret
mov
jmp
clc
adc
dec
ss
lahf
cmpw
inc
sbb
add
stc
fbstp
test
mov
sub
loop
fildl
push
iret
pushf
sbb
stos
mov
xor
sub
mov
mov
dec
cmpsb
or
in
into
sub
fisttpll
xchg
mov
cmp
orb
cwtl
adc
sbb
sbb
and
aam
shr
jae
xchg
sbb
sbb
in
and
dec
out
cmp
in
fs
pushf
adc
lahf
mov
lret
dec
aad
cmc
adc
ret
arpl
adc
lods
fcmove
xchg
add
loope
mov
lods
sbb
test
and
scas
cmpsl
sbb
mov
pop
and
xor
ljmp
jae
pushl
or
insb
cmp
and
scas
or
xchg
rep
pop
and
call
test
aad
mov
xor
lds
idivl
popa
iret
imul
cmp
adc
jno
cli
adc
adc
add
adc
jno
jge,pn
movsl
rorl
das
dec
mov
push
neg
ds
into
jns
nop
lock
rcrl
hlt
mov
into
mov
nop
add
xlat
aam
push
out
insb
out
jl
dec
mov
adc
mov
mov
cmc
shl
xchg
dec
jp
or
add
arpl
movsb
fsub
sarb
enter
arpl
test
pusha
jne
int
stc
inc
push
loop
arpl
repz
pop
hlt
jne
adc
mov
lahf
push
outsb
insb
repz
ljmp
push
in
or
out
push
lea
adc
jmp
mov
push
cmc
xchg
shr
sbb
push
xchg
fwait
cld
add
aad
clc
ret
jae
out
jns
mov
lods
pop
int3
push
fcom
mov
xor
jge
in
dec
lods
dec
cmpsb
fidivrs
data16
mov
fwait
add
push
inc
into
out
mov
dec
mov
negl
jae,pn
jne
shl
mov
pop
inc
push
mov
pushf
mov
sbb
sub
std
xlat
dec
scas
cltd
loope
mov
or
pop
cmc
imul
ljmp
in
repz
adc
into
lret
and
xchg
repz
sbb
cmp
mov
lret
test
pop
loopne
or
pop
das
push
pop
lret
in
xchg
jl
lds
xchg
add
sub
es
cmp
into
push
and
aam
push
shr
sub
cmp
pmulhw
stc
test
mov
add
out
mov
dec
cwtl
test
rorb
add
ror
jp
cmp
fdivl
idivl
xchg
cmp
lods
into
add
popa
mov
jle
jecxz
hlt
dec
outsl
mov
adc
mov
xor
rcrl
inc
ljmp
mov
incl
mov
sbb
rorl
mov
sub
push
xor
popf
nop
lret
inc
xor
js
jae
ror
ficoml
inc
es
pushf
sbb
testl
mov
bnd
mov
popf
fisttpll
adc
jg
bound
pop
lahf
mov
aam
mov
mov
shlb
vcvttss2si
mov
xor
or
dec
ja
push
sahf
mov
push
stos
jo
sub
lds
pop
jb
rclb
rclb
adc
in
faddl
repz
or
pop
pop
xor
icebp
push
and
ret
add
mov
decb
cmp
das
push
pop
mov
jne
inc
mov
pushf
and
lea
add
test
lock
jns
mov
imul
cmp
iret
addl
adcb
out
ljmp
and
out
xchg
mov
cmpb
into
dec
ret
cmp
mov
popa
ds
cmc
popf
add
pop
filds
push
mov
nop
js
enter
iret
in
xchg
testl
push
addl
push
sbb
fisttpll
and
mov
je
fcoml
add
imul
xchg
mov
jb
outsl
add
xor
cmc
adc
shrb
xchg
xorl
dec
inc
xchg
leave
sar
xor
popl
icebp
jbe
push
ljmp
outsl
sub
push
add
mov
ret
add
pop
out
movsb
repz
jbe
scas
shrb
sub
je
cmp
dec
mov
push
mov
pop
xchg
cmc
fs
fwait
imul
sbb
cmc
hlt
lret
cmp
push
fnstsw
jae
and
loope
mov
addr16
sbb
mov
jbe
sbb
clc
xor
scas
mov
pop
sbb
mov
xchg
push
sbb
repz
mov
dec
into
dec
sbb
dec
in
jns
push
stos
xorl
negl
js
scas
out
mov
or
sti
iret
sbb
cs
insl
ljmp
decb
push
xor
arpl
adc
pushf
push
xchg
mov
inc
jmp
xor
xchg
or
pop
mov
addr16
sub
mov
inc
test
and
int3
aas
jp
adcl
jg
test
test
xchg
insl
orb
mov
loope
js
mov
movb
fwait
jne
mov
nop
cmp
subb
dec
inc
xchg
or
xor
ds
in
jo
dec
shll
mov
jge
mov
mov
sti
sahf
add
sarb
inc
cmp
dec
or
pushf
mov
test
cmp
inc
lock
add
jno
pop
xchg
mov
dec
jne
rcrl
sub
mov
mov
xchg
mov
xor
aad
sbb
push
mov
cmp
outsb
movsb
adc
xor
jge
outsb
and
mov
sub
mov
mov
xor
xorb
cld
lea
stc
lods
xor
and
das
les
push
in
lahf
or
int3
mov
sub
fs
loop
jp
push
xor
scas
arpl
jp
and
outsl
pusha
mov
popf
cld
adc
jmp
mov
cmc
sahf
not
cmp
jmp
pop
jne
xchg
dec
and
stos
cwtl
jne
inc
jg
cld
cmp
jo
and
pop
pop
jg
fwait
jne
xchg
push
ljmp
ljmp
movsl
push
mov
dec
xor
and
jecxz
fdivp
nop
xor
dec
lods
ret
stos
cmc
scas
into
push
xchg
pop
and
xchg
pop
ror
imul
pushf
xchg
out
xorl
addb
add
repnz
decb
mov
xorb
fists
jle
pop
out
fidivs
mov
sti
pushf
inc
inc
jg
xor
scas
mov
repz
leavew
shll
add
nop
mov
ja
jne
cltd
cs
js
movsl
lahf
insl
jle
jp
jge
inc
fildll
push
ss
jge
dec
xchg
or
add
mov
lcall
bound
rcrb
movsl
adc
add
and
mov
dec
jmp
and
scas
in
pop
mov
nop
or
call
rorb
fdiv
movsl
mov
ss
inc
jne
cmpsl
fucomip
lcall
inc
jle
test
loop
inc
mov
mov
mov
inc
shlb
or
or
add
xor
rcll
jne
cmp
jle
pusha
stos
aaa
xor
cmp
or
jno
into
imulb
mov
mov
es
inc
js
scas
scas
fstps
or
cmp
push
or
or
inc
cmc
jo
pop
fmulp
idivl
repz
mov
sub
lods
pop
jmp
jae
fucomp
adcb
sbbl
push
decb
out
push
js
cmc
aad
andb
jo
sub
xchg
insb
loopne
lret
adc
repz
fildll
and
cmp
xor
addl
jle
mov
push
inc
lret
test
scas
mov
jecxz
push
test
xor
sub
mov
cwtl
loop
sub
add
cmp
stos
cmpsl
mov
add
cmc
sub
push
cbtw
popa
ljmp
push
mov
or
loopne
test
rolb
out
lret
shlb
punpcklbw
insb
adc
mov
add
xor
decb
xchg
sbb
fistps
ret
jb
out
add
adc
stos
inc
lods
ret
dec
imul
out
inc
mov
addr16
lods
cmp
ds
les
pop
pop
cmp
add
mov
fcomi
jb
jne
inc
sbb
adc
push
xor
bound
popf
mov
in
and
cmpsl
cmp
mov
fstps
add
add
ficoml
lods
into
mov
mov
push
imul
cmpsl
or
push
ret
pop
mov
repz
mov
hlt
xchg
icebp
fnstsw
lea
ja
add
movsb
mov
notb
xor
and
arpl
cmp
or
and
cld
rorl
inc
leave
aaa
jecxz
cmp
fidivs
dec
add
inc
pop
or
sahf
mov
mov
cltd
mov
mov
push
jp
hlt
shr
pop
int3
dec
add
test
jnp
sbb
dec
xor
movsb
or
loopne
push
mov
daa
stos
out
cmc
sbb
or
xchg
and
cmc
movsb
lret
mov
mov
or
inc
fisttpl
and
cmc
xor
loope
cld
adc
in
cmp
ss
push
and
and
lahf
xor
fisttps
cwtl
xlat
push
and
cld
jnp
push
cmp
into
aad
shrl
pop
lcall
jne
push
add
push
test
or
xchg
lret
xchg
or
jbe
sbb
fs
adc
jbe
out
scas
imul
scas
adc
add
or
in
test
nop
scas
and
and
cs
test
mov
jo
jno
jnp
push
loop
in
mov
xor
cmpsl
stc
dec
push
add
mov
cmpl
es
push
mov
and
mov
into
mov
mov
call
popa
jle
orl
adc
adc
dec
pusha
dec
push
cmp
mov
adc
in
test
mov
or
pushl
jb
mov
cmc
adc
xchg
int
sbb
mov
mov
shll
adc
into
inc
in
push
insb
and
xor
divb
lods
sub
jg
pop
cmp
and
pop
and
js
xor
in
loope
cwtl
addr16
ds
in
cmpsl
add
insl
call
adc
mov
dec
lock
jmp
fldenv
rcl
sahf
mov
xchg
push
dec
pushf
repz
sbb
push
xchg
in
sbbb
and
lret
and
push
shll
stc
mov
mov
insb
rolb
and
cmpsb
into
dec
divl
enter
push
mov
insb
jg
cmp
into
and
inc
inc
incb
mov
rorb
jg
mov
loopne
add
cmpb
mov
jp
jo
cltd
add
mov
ja
aas
and
fimull
dec
int3
adc
inc
bswap
iret
mov
push
dec
mov
testb
in
movsb
pop
subl
lods
imul
cmp
ret
ds
xorl
push
sbb
xchg
jp
std
js
add
lods
xchg
xor
push
into
inc
mov
adc
imulb
add
mov
or
inc
es
sarb
loop
jg
std
jbe
jg
push
scas
in
adc
jae
xchg
movsb
sbb
xor
std
mov
mov
mov
shll
imul
in
clc
js
inc
xchg
add
and
roll
fnsave
jl
sbb
xor
push
lret
adc
jns
push
xchg
jne
aaa
loopne
aad
arpl
sbb
mov
or
cmp
or
dec
ds
push
mov
or
mov
inc
test
mov
hlt
cmpb
div
xchg
xor
iret
arpl
pop
push
dec
mov
pushf
cmpsb
mov
inc
push
pop
inc
xchg
mov
push
ficompl
les
and
movsb
incl
push
cmc
cmpsb
outsb
int
xchg
test
incl
mov
neg
lods
aam
dec
mov
push
cmp
repz
mov
xchg
repnz
mov
add
add
bound
cmp
fs
cmp
addb
push
ficompl
out
jb
daa
cmp
inc
pop
xchg
out
shlb
dec
gs
in
loopne
inc
xchg
push
mov
or
enter
jbe
fisubrl
xchg
jnp
fcmovne
sub
lods
mov
cltd
xchg
jnp
ja
je
dec
aam
sbb
pop
es
popl
nop
adc
jl
add
xchg
sbb
fidivrl
cmc
js
mov
pop
mov
mov
cmp
std
outsb
mov
std
insl
push
jp
jle
mov
dec
dec
mov
pusha
push
roll
sahf
bound
mov
std
mov
xor
icebp
mov
xchg
shr
or
dec
push
mov
inc
cmpsb
or
call
sub
jp
jmp
adc
pop
ja
add
in
add
mov
cpuid
fnstenv
push
imul
push
xchg
jecxz
ret
push
rol
cli
mov
test
movsb
dec
out
les
and
inc
sbbb
gs
pop
dec
sbbb
and
ret
iret
or
or
add
pop
je
jmp
and
popa
jo
inc
test
pop
test
pop
pop
xor
pop
cmp
add
dec
das
pop
mov
lods
and
mov
add
jp
mov
xor
pushf
into
idiv
jp
jb
pop
rolb
cmp
ret
push
jp
into
setno
in
xchg
les
pop
mov
mov
add
fisubl
push
jne
and
mov
inc
mov
push
mov
sub
add
xchg
push
call
rcrb
xor
ret
inc
mov
dec
int
into
jge
pop
mov
mov
ljmp
mov
xor
ss
shld
and
and
data16
mov
sub
in
jp
subb
jns
jns
mov
into
in
pop
push
inc
mov
xchg
jne
mov
mov
cmpsb
sti
mov
ljmp
jno
xorb
add
ret
addb
movsl
nop
push
sub
fisubrs
jb
lret
pop
sahf
cmc
into
fldl
lahf
pusha
lret
dec
out
mov
jno
adc
or
outsb
popf
rclb
in
dec
jl
dec
mov
flds
jno
mov
into
push
lods
rcr
mov
or
xchg
or
lcall
xchg
xchg
jecxz
insl
sbb
add
mov
sbb
mov
sub
jl
mov
and
out
jae
adc
mov
mov
adc
sahf
jnp
mov
repnz
push
pop
lret
add
out
movsl
jecxz
sarb
xchg
insl
or
jle
xchg
inc
pop
xchg
add
and
lods
mov
sbb
test
sub
daa
fisttpl
mov
dec
adc
daa
inc
int3
mov
pop
jb
pop
push
daa
push
lret
sahf
and
ret
sbb
push
fistps
popf
jg
into
nop
push
jnp
adc
sbb
aam
add
ss
test
push
mov
jbe
mov
jnp
add
jbe
pop
hlt
fdivl
sub
std
out
cmp
sahf
loopne
adc
cmpsb
jmp
xor
jle
and
nop
sbb
fmuls
sub
lods
sbb
or
dec
sarl
pop
insb
mov
mov
popf
add
lea
hlt
aaa
push
repz
inc
adc
shll
mov
fwait
mov
add
xor
add
ror
decb
jl
mov
les
jl
dec
cs
pop
pop
sbb
inc
mov
mov
xchg
xchg
xor
outsl
and
ret
cmp
mov
in
add
dec
jge
adc
dec
fisubrs
pop
add
sti
inc
mov
and
in
mov
dec
cmp
aam
aaa
imul
cmp
lock
cltd
negl
xor
jnp
fs
mov
mull
sbb
sub
sbb
lds
ficomps
mov
fstpl
jae
inc
sti
jg
std
xor
mov
lods
lcall
add
cmp
test
lock
into
js
or
lret
mov
cmc
pop
and
lods
push
out
dec
shrl
fimull
insl
xchg
sbb
outsl
jns
icebp
xchg
nop
add
in
mov
cmp
cmp
enter
pop
xchg
jne
and
lahf
ja
sahf
and
out
adc
shll
loope
fcmove
inc
add
and
xor
ljmp
or
jle
insl
js
insb
add
jne
loop
rcrl
jno
jl
push
sbb
cmp
pop
test
ja
dec
fwait
cs
jp
aam
mov
rcll
mov
inc
test
push
cwtl
les
add
je
icebp
imul
gs
daa
or
or
xchg
mov
cld
and
lahf
or
jnp
push
fsubr
bound
ret
mov
xchg
nop
scas
repnz
lahf
test
fstps
outsl
sub
lcall
inc
jne
and
cs
fdivs
cltd
lods
inc
cmpsl
sbbb
sar
xlat
dec
mov
push
xchg
mov
lahf
cmc
gs
push
popf
test
shrd
popf
push
stos
adcb
cwtl
add
dec
insb
mov
andb
test
xchg
add
daa
pop
rol
repnz
push
jns
aam
popa
push
ret
mov
stos
or
push
scas
movsl
cmp
pop
jmp
add
outsl
dec
movl
shrl
jbe
pop
mov
pop
xchg
hlt
ss
ficoml
sub
int
sbb
scas
pop
das
or
into
xchg
xor
xchg
outsl
movsb
dec
push
xor
shl
movl
sbbb
fnsave
stos
cli
popf
dec
stc
test
or
jnp
outsb
out
movsb
sub
push
ja
adc
cmpsb
scas
sub
and
jo
out
xor
add
cmp
popa
mov
mov
xor
mov
push
aas
arpl
dec
inc
out
dec
dec
loopne
push
push
push
movsl
cmpl
and
and
mov
mov
sti
rolb
stos
xchg
pop
in
push
popf
mov
subb
or
fadds
sbbl
cmpsb
sub
dec
or
fwait
xchg
jmp
and
negl
sub
and
fmull
mov
out
mov
ret
notb
inc
jecxz
push
and
mov
aas
push
mov
outsb
out
in
add
push
jo
cmpsb
push
movsl
dec
popf
addr16
mov
mov
xchg
xchg
int3
cmp
add
fidivrs
mov
decb
jle
aad
inc
stos
cmp
xchg
test
std
inc
xchg
cmpl
dec
xchg
and
icebp
add
push
cmp
cmp
mov
iret
leave
push
clc
cmp
fistps
in
xcrypt-ecb
cmpsl
mov
jb
fwait
fwait
cli
int
and
stos
mul
mov
xchg
or
dec
mov
jmp
mov
xor
ret
enter
cmp
jl
shrb
mov
into
mov
pop
jbe
xor
jo
push
in
inc
mov
popa
jbe
mov
mov
mov
mov
cli
scas
in
sarb
sbbl
scas
cld
loope
add
or
fs
scas
js
cmp
jg
subb
sbb
xor
ja
pop
mov
addb
sub
dec
arpl
leave
movsb
scas
outsl
jle
loope
jmp
jmp
sbb
or
in
xchg
cmp
or
out
xchg
mov
or
dec
add
and
das
adc
mov
or
lcall
sahf
jae
imul
andb
sti
mov
icebp
js
pop
mov
inc
mov
mov
mov
cltd
out
imul
mov
mov
jnp
insl
sarb
and
or
ljmp
mov
jecxz
dec
icebp
mov
sub
inc
cmp
ret
add
stc
imul
in
push
push
and
fnstcw
xchg
mov
int3
xchg
popf
sub
cmp
xor
sti
mov
fstl
xor
not
sub
fwait
jmp
fs
into
out
adc
rclb
daa
add
or
lcall
and
pop
pusha
xchg
adc
jae
dec
push
ja
fucom
add
jmp
enter
mov
jne
mov
dec
test
xorl
rcrb
dec
ja
out
fisttpll
enter
adc
cmc
pop
mov
xorb
and
push
cmpsl
std
push
sti
cmc
mov
and
test
stc
mov
inc
jmp
lds
test
push
xor
adc
push
xchg
js
inc
mov
gs
pop
push
jl
xor
xchg
nop
fsubp
ret
xor
mov
outsl
xchg
adc
sar
jle
adc
ret
pop
mov
or
push
jp
sarl
clc
stos
pop
testb
adc
in
adc
push
cmc
jae
pop
mov
in
addb
mov
lods
shll
push
pop
lahf
fs
pushf
in
jmp
fwait
pushf
xchg
dec
or
test
jne
shr
test
cltd
and
test
daa
adc
cs
pop
gs
test
ret
add
in
cltd
addl
or
call
jecxz
lods
sub
inc
dec
pop
jb
push
sti
and
dec
mov
loopne
out
or
arpl
adc
ret
mov
adc
loope
fldcw
add
adc
loop
xchg
repz
mov
push
adc
ror
sub
int
cmp
subb
addr16
jnp
mov
aas
and
sub
mov
push
int3
mov
ret
dec
stos
mov
enter
sub
sbb
hlt
cwtl
dec
call
call
sahf
and
pop
aas
xchg
cmp
lcall
movsl
xchg
sbbb
adc
xchg
mov
mov
jnp
stos
adc
push
insb
add
xor
mov
sub
push
pop
xlat
loop
out
out
mov
std
inc
scas
push
mov
call
fldl
movsl
mov
mov
frstor
adc
scas
dec
in
dec
and
jmp
enter
push
sti
jl
loop
or
stos
add
inc
imulb
cmp
mov
int3
lods
xor
popa
movsb
adc
bound
and
inc
and
jp
frstor
xchg
ja
js
scas
std
femms
xchg
xor
pop
std
out
mov
mov
cld
es
jp
pop
stc
shll
sub
adc
xchg
loope
arpl
in
xorl
mov
sub
in
sbbb
pop
push
in
je
push
add
mov
sbb
loopne
mov
rolb
jecxz
sub
rdpmc
into
sbb
pop
mov
sub
adc
mov
push
test
pusha
dec
pop
flds
rcrl
adc
xchg
inc
mov
xchg
ds
in
jne
cmp
fs
inc
and
jae
inc
cwtl
xor
jmp
orl
sub
test
pop
lcall
out
inc
in
mov
inc
jo
sub
shrb
xchg
push
andb
lcall
jmp
add
repz
push
out
mov
or
ret
jne
repz
jno
sub
aas
std
lds
cmp
push
dec
sub
mov
dec
push
push
dec
lea
ds
dec
aad
xor
repnz
es
into
mov
adc
push
arpl
xchg
pop
stos
into
dec
pop
jae
push
mov
inc
icebp
lea
pop
iret
sub
dec
dec
sbb
inc
adc
out
and
xlat
mov
ds
ljmp
or
es
jge
mov
cld
pusha
gs
cld
sub
btr
lret
cli
ret
cmp
push
out
push
movb
out
sbbb
adc
xchg
cmpl
push
sub
test
jmp
add
or
add
insl
push
inc
jno
mov
mov
pop
mov
xchg
cmc
or
push
test
cwtl
and
nop
dec
cmpsb
test
jo
jne
mov
test
and
mov
sub
jmp
jmp
jmp
push
pop
mov
popa
xchg
xor
mov
and
cmpsb
stos
std
popf
fisubs
sbb
push
iret
addb
jl
in
sub
loopne
mov
fistpll
cwtl
cmc
xchg
mov
mov
divb
dec
add
insl
or
mov
shlb
pop
xchg
fisubs
add
pop
fmuls
jg
dec
into
ret
jl
and
mov
mov
jp
adc
mov
xchg
out
sbbb
mov
and
mov
xor
push
mov
and
add
clc
mov
mov
dec
xchg
stos
jne
insb
jns
pop
sti
shrl
aas
aaa
dec
xchg
into
clc
shlb
and
fcoml
jb
cmc
aas
xchg
push
test
sbb
adc
rcrb
fadd
dec
fldl
adc
mov
add
mov
lret
cmp
inc
and
data16
cmp
in
scas
popf
stc
pop
jl
adc
jl
or
xchg
ja
in
fldl
fdivp
mov
icebp
icebp
mov
xor
rcl
int
ds
movsb
push
test
cmp
or
push
ds
mov
outsl
mov
into
stos
into
andb
mov
mov
loopne
jge
sahf
leave
in
push
push
in
adc
sbb
cld
rcrl
test
insb
push
fs
test
insl
cltd
cs
add
stos
in
dec
iret
jmp
jl
and
add
pop
xor
shrl
pop
dec
repz
mov
jb
bound
bound
dec
cs
aad
jecxz,pt
iret
dec
xchg
sahf
stos
das
test
dec
jne
xchg
stc
imul
jge
jno
pop
sbb
testb
jmp
dec
repnz
leave
or
cmp
sbb
lret
and
call
int3
test
in
pop
idivl
test
repz
mov
cmc
mov
push
sbb
aas
push
aam
and
or
cltd
mov
pusha
lea
xchg
add
jae
inc
and
add
in
xchg
sub
sbb
jmp
jb
jb
and
sub
pop
cmc
scas
mov
push
rclb
fidivs
sbb
sahf
sti
loope
out
lds
nop
leave
cld
jmp
push
inc
push
inc
and
xchg
movsl
jecxz
cmc
outsl
pusha
mov
in
push
add
lds
adc
dec
fldcw
dec
fwait
outsb
adc
rolb
push
inc
and
gs
mov
lahf
mov
add
std
dec
cmp
mov
xlat
cwtl
push
dec
sub
in
mov
cmc
add
cmp
cmp
inc
pop
ds
aam
scas
js
jo
adc
cmpsb
mov
jnp
mov
mov
roll
scas
into
fwait
test
sub
imul
pop
cmp
test
adc
les
into
mov
and
or
push
dec
sub
test
es
jecxz
and
repnz
hlt
stos
push
jle
loopne
pushf
adc
insl
in
and
fistl
shlb
into
das
xor
and
mov
sub
mov
jmp
icebp
scas
jns
in
sub
stos
add
dec
mov
ror
loopne
shl
mov
sbb
xor
sub
ror
mov
sbb
mov
adc
popa
mov
adc
sbb
dec
add
xchg
jl
push
fidivl
cli
push
bound
cmp
xchg
idiv
add
jmp
xchg
xchg
lea
mov
xchg
inc
sub
dec
sahf
jae
adcl
add
test
mov
jecxz
mov
ja
push
clc
jl
popa
shll
push
mov
and
fdivrl
push
jne
dec
mov
inc
mulb
push
push
adc
negl
mov
mov
cld
in
into
sub
or
mov
out
xor
inc
shll
cld
push
and
movsb
int3
xchg
jnp
push
push
push
pop
or
and
and
mov
mov
and
cmc
test
mov
repz
mov
test
cmp
jge
pop
pop
scas
add
add
push
mov
into
cmp
cwtl
and
dec
cmp
xchg
sub
sbb
lods
icebp
mov
lret
test
jno
cmc
lods
adc
push
ret
cmp
jl
pop
cmpl
mov
jns
ja
into
aad
pop
jmp
pop
and
aaa
cmp
cltd
sahf
negl
mov
xor
cmpsl
xorb
jnp
into
pop
imul
test
test
or
int3
push
repz
adc
fsubrs
sbb
xchg
mov
andl
push
fdivrs
adc
ljmp
push
and
push
dec
mov
adc
pop
add
mov
clc
clc
inc
int3
jne
rcl
imul
scas
addb
stos
testl
outsb
insl
fnstcw
push
movsl
into
shlb
mov
bnd
xchg
push
mov
cld
mov
imul
push
inc
dec
repz
and
cmp
clc
popa
in
leave
ja
stos
sti
pushf
movsl
xor
jmp
xor
sub
push
ret
or
mov
mov
mov
and
mov
inc
pop
fcompl
adc
cmp
sarl
mov
dec
aad
mov
stos
push
inc
inc
cvtps2pd
dec
jl
xchg
mov
js
aas
pop
xchg
cmc
or
aad
insl
push
outsb
cwtl
out
cmc
and
mov
hlt
adc
jns
add
sub
loop
testb
ss
aas
iret
add
add
pop
jge
popf
add
nop
sub
fnstenv
repz
mov
cmp
sub
jae
test
push
pop
lea
pop
rcrl
sahf
xorl
add
pop
loopne
imul
sub
test
jne
sub
nop
inc
inc
or
cltd
jmp
xor
jb
cmc
pushf
or
into
mov
lea
sub
movb
push
mov
dec
and
sbb
or
and
pushf
fidivrl
push
je
lock
xor
pop
nop
inc
popa
in
stc
js
xchg
push
cmc
ja
cmp
push
mov
add
push
mov
or
inc
mov
pop
pop
cmpsl
xchg
adc
dec
clc
outsl
xlat
mov
pop
out
sub
dec
mov
out
sahf
fcoms
push
xor
push
cmc
mov
bound
gs
and
pop
pusha
dec
ja
push
adc
push
out
popf
or
mov
notb
jne,pn
scas
mov
imul
out
add
xorb
xor
mov
xchg
add
fwait
dec
jne
scas
in
add
push
pmaddwd
xlat
add
mov
enter
std
das
adc
das
mov
sbb
push
mov
outsb
lret
popf
inc
popa
negb
add
mov
bound
jmp
mov
popa
mov
ljmp
cmp
mov
in
and
pop
push
test
jne
cmpl
jnp
and
cmp
js
orb
mov
inc
cmc
mov
and
push
jbe
mov
dec
loop
adc
pop
in
xchg
xchg
or
das
cmc
cmp
mov
int3
lods
jg
xchg
subb
push
jmp
adc
dec
mov
mov
mov
push
icebp
aad
inc
lea
mov
cltd
std
aam
je
mov
pop
mov
shr
aas
cmpsb
jmp
fstpl
jmp
fnstcw
enter
repz
and
mov
mov
push
in
push
cmc
test
jbe
mov
ficompl
xchg
jo
jmp
aas
mov
jno
adc
pop
pop
out
stos
xorl
cmp
or
in
jae
ficomps
jb
cwtl
lods
imul
jmp
jbe
dec
out
dec
mov
in
fwait
dec
lahf
xchg
add
cmp
pop
push
fstp
sbb
mov
jg
mov
pop
adc
mov
test
into
cmp
add
push
repz
jle
repnz
test
cmc
testb
sub
jl
faddl
jae
sub
into
pop
adc
add
fwait
outsb
xchg
mov
mov
mulb
mov
test
mov
stos
mov
xorl
scas
jge
jns
and
movsl
and
sub
push
push
jae
mov
push
scas
pop
rorl
pop
bound
lret
add
pop
aas
inc
and
sub
and
inc
dec
sbb
mov
push
lods
and
inc
mov
cmc
movsb
popa
jecxz
adc
mov
cli
pop
inc
icebp
xchg
jne
aaa
add
daa
or
rolb
addl
shll
outsl
dec
mov
imul
inc
dec
cmp
subb
xchg
lods
dec
popa
repz
scas
jg
and
xlat
lret
jnp
or
push
mov
lret
fs
scas
sbb
movsl
into
in
dec
insl
pop
mov
test
sbb
fcoml
test
out
arpl
lret
in
cmc
xchg
mov
loopne
divb
fsubr
ficoml
inc
dec
push
mov
pop
cmp
and
mov
pop
jecxz
ficoms
xchg
lret
stos
sub
jl
arpl
sbb
test
mov
add
jne
stos
lock
mov
leave
movl
inc
cld
push
lds
mov
fs
into
mov
ds
jmp
sarb
add
lods
xchg
and
stos
jmp
dec
jne,pn
es
mov
aas
mov
and
xchg
pop
inc
push
je
popa
iret
sub
push
add
push
fbld
dec
ret
cltd
dec
lcall
scas
aam
add
adc
xchg
loope
push
ret
out
cld
cmp
fldl
data16
mov
sarb
push
push
add
das
cmp
fwait
fcmove
test
cmpb
fcompl
mov
popf
mov
aas
push
hlt
stos
fsub
mov
popf
mov
ljmp
loope
adc
loopne
cmpsb
xchg
add
xor
mov
mov
popa
xor
dec
cmc
adcb
inc
test
adc
jle
nop
repz
jnp
add
test
ss
or
xchg
jl
add
cmc
cmpsl
mov
dec
and
add
mov
dec
loopne
pop
ret
mov
pop
roll
loop
ret
jne
jns
outsl
hlt
cltd
fcompl
in
pushf
out
add
add
jle
xor
test
and
add
mov
xchg
or
xchg
into
pop
fcoms
test
lock
aam
aad
mov
dec
push
dec
out
jo
add
movsl
push
jne
dec
mov
jbe
ret
inc
jmp
dec
xor
fidivrl
cmp
repnz
jno
sbb
push
mov
dec
add
movsb
nop
and
je
adc
xor
jne
cs
pop
xchg
cmp
imul
out
loopne
test
add
xor
push
inc
mov
jno
xor
mov
mov
sub
xor
mov
int3
cmc
aad
ret
fadds
imul
pop
xor
ja
or
jne
lcall
lods
mov
pushf
aas
mov
mov
adc
test
jbe
push
adc
in
and
out
xchg
and
in
jb
inc
or
and
dec
movsl
negl
insl
test
repnz
adc
mov
jle
or
sub
ja
lret
pop
aad
pushf
push
xor
subb
jno
in
into
stos
ljmp
fisttps
or
jp
push
and
sbb
fcoms
xchg
pusha
inc
filds
imul
mov
lret
adc
or
xchg
fisttpll
jle
imul
pop
stos
dec
xorl
and
mov
push
mov
xor
sub
or
shlb
shlb
cmp
mov
add
push
mov
fldln2
test
push
jae
add
in
in
dec
jne
xchg
int3
insb
push
ss
add
push
mov
addr16
inc
inc
add
push
ss
adc
inc
xlat
or
shrl
repz
jne
xchg
std
jp
addl
pushl
add
mov
mov
inc
mov
mov
cmp
fwait
adc
add
jl
mov
cs
sbb
andl
or
pop
in
cld
pop
cmp
add
adc
int
adcl
fildll
xchg
pop
fildl
push
call
lock
inc
shrb
aad
test
push
cmp
xchg
ret
or
in
sub
jns
popa
std
adc
cmp
enter
xchg
sbb
push
sub
xor
xlat
xor
mov
shrb
jae
add
sub
and
mov
jne
cld
scas
dec
cmpsl
or
sub
dec
xor
cmp
pop
fiadds
and
push
and
icebp
xchg
cmpsl
add
lods
js
mov
add
mov
ret
dec
sbb
add
adc
into
push
push
push
xchg
pop
dec
popf
dec
dec
fs
add
in
or
ficoms
and
lods
pop
inc
adc
sarb
testb
jae
lods
push
push
xor
mov
cmpsl
into
repz
adc
mov
adc
ss
push
push
stos
jle
xchg
outsl
aas
popa
out
daa
xchg
mov
outsb
mov
jge
stos
ljmp
jmp
add
outsb
out
dec
push
mov
xor
test
jb
mov
lods
add
cltd
inc
test
das
leave
adc
ljmp
aas
test
daa
push
call
add
adc
mov
fucomi
add
test
icebp
xchg
fsubrs
mov
adc
mov
xchg
xchg
jmp
pop
subb
and
jg
mov
and
pop
pop
sahf
call
inc
jmp
jno
cmc
add
adcl
ret
jne
cmpsb
sbb
add
insl
mov
sti
and
sbbl
lods
test
jle
push
add
mov
ljmp
pop
loop
push
rcrb
xor
jg
jle
mov
clc
push
fimull
xchg
mov
int
sbbl
lods
fldl
insl
scas
mov
adc
enter
cmpsb
into
iret
hlt
dec
sub
into
outsb
lea
cmc
jnp
dec
es
popf
outsl
ret
popa
inc
arpl
out
dec
add
cmc
les
inc
call
mov
mov
pusha
add
add
or
clc
mov
adc
popf
mov
pop
adc
test
mov
cmp
mov
xor
xor
daa
js
fldenv
jns
push
sub
aam
test
jne
pop
sub
mov
mov
cwtl
andb
and
roll
icebp
jb
and
mov
push
push
mov
adc
aam
xchg
lahf
ljmp
pop
xlat
loop
xchg
inc
adc
jno
xchg
add
and
push
push
mov
mov
test
loop
mov
xchg
fcoml
push
testl
lret
popf
add
mov
cmp
xor
mov
add
dec
sarl
jne
enter
and
mov
cs
push
sub
or
xorb
adc
xchg
roll
cmpb
scas
cmp
in
lock
push
mov
cmp
and
ret
dec
imulb
cmp
adc
orl
add
or
xlat
ja
sbbb
or
pop
mov
imul
add
cld
jb
in
dec
pushf
or
jo
push
sbbb
mov
fildl
data16
cld
into
sub
add
dec
decl
std
adc
pop
and
inc
mov
aaa
pop
rcll
jae
mov
push
jae
cli
sti
enter
out
cmc
icebp
popf
fnstcw
pop
pop
dec
inc
mov
aam
jns
jbe
adc
adc
push
adc
inc
sbb
add
inc
jnp
add
into
bound
arpl
lret
pop
cli
inc
xchg
sub
ljmp
cmp
sahf
add
lods
add
push
popa
movd
mov
jg
push
xchg
jne
inc
mov
push
repz
fidivrl
and
mov
inc
add
into
test
andb
fprem1
xchg
jle
sub
xor
fldcw
mov
push
imul
aaa
pop
movsb
add
add
xor
loopne
pop
sub
cmp
fldcw
push
bnd
repnz
jmp
rol
sbb
and
es
mov
inc
pushf
pop
adc
sub
lods
add
out
cmpb
cmp
adc
pop
push
outsb
lds
xor
sbb
iret
push
xchg
inc
in
into
xchg
cmp
mov
lret
mov
aaa
pushf
jne
add
sub
mov
push
mov
cmc
inc
icebp
js
and
xchg
cmpsb
pusha
pop
dec
cmp
lods
mov
es
idivl
popf
out
out
popa
enter
mov
out
mov
xchg
push
ljmp
rcl
jmp
ja
arpl
lcall
pop
cmp
xor
dec
pop
cltd
and
and
bnd
add
xorl
pusha
jecxz
jae
jmp
ret
sub
dec
push
and
mov
into
push
mov
addb
fadd
test
pop
pop
jle
fwait
mov
jmp
popf
fs
push
fs
fldenv
lcall
hlt
dec
dec
and
and
jb
push
push
fwait
sub
lea
mov
subl
cltd
int3
mov
arpl
ret
jno
out
sbb
and
jbe
ficoml
jb
xchg
ret
cmp
rcl
data16
sahf
movsb
mov
xchg
cli
in
fldt
adc
cld
sbb
mov
inc
mov
je
sbb
pop
roll
sti
iret
outsb
dec
loop
pop
cmc
cmp
jnp
pop
in
mov
push
cld
lret
orb
jne
loopne
pop
stc
jo
mov
movsl
fsubs
jg
inc
faddl
xchg
xchg
mov
sub
xchg
pop
ficoml
mov
out
pusha
leave
shll
xor
imull
inc
movsl
jge
in
fwait
mov
adcb
mov
xchg
jne
int3
adc
ja
jae
cld
mov
sub
adc
daa
aam
sti
jnp
mov
ss
mov
add
mov
xor
cli
std
loope
sahf
xor
lods
and
pcmpgtw
xchg
mov
xchg
mov
xchg
inc
add
movsl
gs
ret
sub
leave
mov
movsl
ret
lret
mov
and
xchg
shlb
repz
inc
cmc
and
ret
add
cmovbe
mov
into
nop
int
or
fwait
rorb
xor
xchg
lahf
and
rcrb
jne
xor
pop
in
jle
push
stos
push
mov
add
jne
loop
add
scas
pop
nop
sbb
jp
stc
popf
adc
lahf
idiv
pop
cmc
icebp
mov
and
adc
roll
push
push
hlt
xor
pop
stc
push
push
into
jp
xor
shl
movsl
mov
pusha
lods
cmp
loopne
jp
fwait
jp
outsl
cltd
sahf
dec
push
jge
xchg
insl
xchg
mov
jnp
int
push
fmul
and
jae
xchg
jle
cmc
push
dec
add
push
push
movb
adc
jae
and
push
cmp
mov
push
adc
lret
popa
icebp
jbe
into
inc
gs
mov
loopne
fmuls
js
inc
aad
jno
ret
test
sbb
or
incl
lock
or
push
imul
fsts
movsl
dec
jne
cmpsl
mov
in
fldcw
test
les
inc
xor
mov
and
or
ds
test
and
bound
scas
xor
jb
test
adc
adc
inc
jmp
push
je
repnz
cwtl
jo
lock
lods
andb
arpl
xchg
andl
dec
into
mov
xor
push
pop
subb
loopne
mov
inc
lock
mov
pop
dec
add
jne
cld
push
and
lret
in
test
push
cmpsb
repz
cmp
sbb
and
jne
mov
xchg
mov
in
cmc
outsl
add
inc
shlb
into
xor
mov
mov
mov
pop
loop
and
rorl
in
incl
mov
xchg
movl
cmpsl
cmp
sub
xlat
cmp
cwtl
iret
outsl
adc
add
or
jge
add
xor
jmp
addr16
xor
and
mov
decl
xor
xchg
repz
iret
pop
out
ret
fisubs
cmp
iret
mov
insb
mov
not
aas
ss
inc
sbb
jl
xchg
lods
sbbb
lret
jne
pop
movsl
push
mov
dec
scas
roll
jns
jno
jg
cwtl
xor
pusha
adc
into
push
adc
push
int
push
or
shll
and
mov
stos
shll
sahf
les
jne
mov
or
roll
div
mov
xor
adc
lock
add
mov
loop
jbe
jb
push
lods
adcb
adc
xchg
and
les
mov
push
add
add
mov
ljmp
pop
sti
jns
int3
orl
sub
cmp
xchg
push
push
cmc
push
xor
adc
push
out
mov
int
ret
sbb
stos
xor
into
push
jge
sub
push
xchg
jp
jge
dec
shll
test
mov
aaa
cmpsl
icebp
out
lret
fcompl
scas
in
jb
shll
in
rcr
subb
cmp
into
mov
sbb
mov
mov
jecxz
lcall
mov
loopne
aas
sbb
add
dec
jne
mov
cmp
mov
rclb
mov
lahf
mov
aad
jb
push
std
adc
jae
sbb
xchg
cmp
xchg
inc
xor
push
jno
dec
lahf
cmpsb
int
cmp
push
add
xchg
sahf
xchg
mov
mov
lods
push
insb
popf
inc
dec
cld
lock
sbb
jo
and
pusha
sub
mov
add
ja
ret
add
xchg
jne
pop
mov
jecxz
add
ja
mov
dec
mov
je
mov
lret
mov
mov
loop
jmp
add
rcrl
pop
mov
dec
mov
mov
adc
mov
adc
mov
sub
xchg
dec
sbb
stos
fsubl
lea
jge
push
ret
data16
push
jb
push
pop
stc
scas
mov
dec
js
fnsave
test
adc
inc
push
inc
adc
pop
jne
cmp
sbb
into
inc
and
ret
sbbb
xchg
push
add
cs
enter
jl
xor
sbb
push
decl
es
dec
nop
cltd
jo
pop
xor
cs
pop
cmc
loop
xchg
pop
jmp
push
out
jnp
ficompl
int
lcall
pop
mov
xchg
int3
test
inc
add
in
pop
ffree
jmp
bound
iret
push
insb
jmp
in
inc
inc
inc
les
aad
mov
aas
repz
scas
es
repnz
movsb
mov
icebp
xor
in
and
enter
ljmp
stc
sub
push
scas
cmc
jle
iret
push
pop
push
inc
movsb
mov
jne
xchg
push
cmp
dec
testl
or
adc
fsubrs
daa
mov
inc
mov
mov
and
xchg
pusha
and
popf
popa
jmp
mov
lahf
int3
mov
pop
cmp
movsb
scas
insl
and
fucomi
imul
loopne
xchg
jo
fistpll
jno
pop
in
xchg
dec
xor
inc
mov
sub
jne
add
sti
sub
addr16
repnz
and
add
sbb
mov
mov
push
dec
jge
cmc
mov
jle
mov
add
movsl
int
repz
fcmove
mov
test
ss
test
jo
es
imul
mov
cli
rcr
sbb
xchg
call
add
insb
int
jbe
mov
fiaddl
sbb
outsb
sbb
ds
movsb
clc
ret
inc
and
fwait
ret
cmp
test
fisubrs
lock
push
jnp
dec
xchg
xchg
hlt
ficompl
push
cwtl
adc
add
push
push
movsb
mov
es
adc
xchg
fldl
aam
neg
ret
loope
std
jmp
or
xor
lea
leave
addb
jecxz
call
xchg
int3
test
xchg
aam
push
iret
inc
fcomps
mov
sub
hlt
bound
imul
lcall
orb
adc
lods
mov
adc
jp
pop
dec
movb
mov
das
cltd
loopne
loop
cmp
into
push
outsl
mov
out
cwtl
sub
test
fstpl
mov
jp
xor
jno
cli
into
rcr
pop
mov
mov
adc
mov
inc
aas
and
cmp
das
out
mov
sbbl
mov
enter
add
jae
mov
sub
adc
sub
jno
stos
dec
jns
add
sub
movsl
jae
mov
lods
mov
lea
cmp
clc
std
jbe
lods
dec
and
and
mov
pop
in
jp
inc
and
fldenv
cltd
cmc
dec
arpl
je
sub
loope
inc
in
popf
add
xor
into
fimuls
jo
mov
lret
pop
arpl
rorl
in
lcall
dec
push
push
cmc
inc
cmp
xchg
fwait
jle
hlt
adc
xorb
sub
sbb
pop
fisttpll
push
jo
push
and
add
popa
inc
test
cmp
gs
sub
into
jg
sub
pusha
test
adc
cwtl
test
repnz
jecxz
mov
add
mov
sub
stos
pop
adc
andb
popa
es
inc
nop
in
mov
dec
pop
fs
notb
cmc
cli
adc
mov
sti
test
add
and
or
push
pop
inc
jl
cs
ss
lcall
out
sbb
xorb
and
dec
mov
adc
and
jns
sbb
dec
jno
or
dec
cmp
cmpsb
movsl
push
outsl
xor
test
leave
and
popa
xor
int
cmp
outsl
hlt
sbb
std
cld
and
xchg
mov
dec
sahf
and
in
into
dec
cld
cmp
and
stos
mov
cmc
mov
pop
dec
push
outsb
pop
add
lea
add
loopne
pop
mov
mov
aas
mull
or
es
jne
repz
aaa
iret
lods
mov
jno
xchg
jb
js
les
movsl
mov
add
jmp
leave
jae
xchg
mov
and
cmovae
aaa
and
sbb
test
inc
inc
cmc
and
cli
cmpsb
insb
xchg
jecxz
add
outsb
insb
data16
xchg
addr16
push
add
jecxz
and
jo
and
jge
xchg
cld
xlat
sbbb
mov
dec
andb
sbb
leave
push
jne
sbb
shrb
mov
sbb
inc
stos
nop
jne
and
out
inc
sub
imul
inc
mov
adc
xchg
sbb
push
cld
lret
pop
xchg
aam
jae
loop
sarb
xor
cmc
sub
js
movsl
adc
fdivrp
fwait
sub
add
jecxz
mov
into
mov
mov
mov
fcompl
jl
les
xor
jecxz
pusha
rcr
jp
cmpsb
add
inc
rcl
loope
add
bound
scas
and
mov
sbb
mov
movsb
jne
je
movsb
push
cmpsb
dec
or
adc
add
sahf
dec
mov
repnz
lods
jmp
jle
jo
test
push
mov
outsb
ret
add
sub
cmpb
stos
push
add
lret
fwait
sbb
and
mov
inc
int
test
mov
xor
es
pop
in
mov
sbb
xchg
adc
es
stos
lods
mov
add
fmull
mov
lcall
inc
xchg
lds
mov
xor
fwait
mov
mov
fsubrs
mov
repz
inc
xor
pop
jbe
ja
mov
xchg
mov
dec
mov
xor
or
lahf
cmp
sub
enter
lods
lcall
xchg
leave
sub
lret
cmp
lea
fnsave
mov
dec
stos
sub
jbe
xlat
xlat
jle
mov
jne
fs
sbb
daa
scas
cmp
addb
lahf
shlb
cmp
mov
mov
lods
jle
push
popf
call
pop
stos
push
pushf
cmc
mov
shrb
scas
mov
cld
jmp
out
jns
jae
jns
test
pop
mov
lcall
mov
sarl
xor
ljmp
add
push
or
cmp
jl,pn
into
test
aad
mov
cmc
push
popf
outsb
aad
cmp
cmpsl
loope
out
ja
gs
inc
mov
sub
je
mov
xabort
popa
dec
or
push
hlt
dec
lahf
leave
cld
pop
and
add
aad
jnp
add
lcall
pop
in
gs
mov
xor
pushf
in
add
xlat
adcb
adcl
nop
icebp
daa
test
jl
push
xor
pop
out
xor
xchg
mov
xor
into
jg
mov
mov
inc
clc
mov
lcall
addr16
xor
cmpb
or
push
jns
out
push
ja
dec
lds
js
mov
pop
repz
or
cmpsb
add
xchg
sbbl
jbe
mov
and
out
cmpl
cmp
icebp
std
inc
orl
stos
adc
pushf
xchg
fsubl
mov
cmc
mov
push
jns
pop
cmp
xor
es
js
rorl
clc
lret
and
jb
and
dec
ljmp
mov
adc
sub
cmp
push
ljmp
pop
icebp
or
xor
mov
popf
mov
int3
daa
sub
loope
xor
mov
pop
pusha
orb
stc
iret
bound
cmpsb
cmp
mov
repnz
xor
push
push
add
cmp
pushf
push
cmp
cmp
dec
imul
or
xor
insb
jne
testl
lcall
ret
daa
aas
imulb
into
jo
ret
or
loope
mov
aas
xor
dec
dec
xchg
adc
mov
outsl
cld
dec
mov
lret
mov
ret
mov
inc
out
hlt
mov
push
or
ja
mov
lods
sbb
pop
push
lret
xlat
cmc
mov
cmp
addr16
jmp
jae
push
std
mov
mov
nop
and
outsb
sti
cmc
and
gs
xchg
xchg
sub
sbb
out
fistps
lcall
xchg
xor
ret
lcall
and
out
movsl
cmp
cmp
xor
sarb
jne
dec
xchg
popf
arpl
bound
add
xor
pop
test
imul
test
in
adc
imul
out
clc
inc
sbb
and
dec
mov
push
push
push
bound
iret
or
or
jae
imul
dec
push
mov
pop
das
test
dec
aam
call
test
andl
cwtl
popf
addb
leave
ja
dec
jl
and
xchg
incb
out
add
shrl
fstpl
sub
in
mov
jmp
fistpll
lret
inc
xor
in
icebp
imul
push
sub
xchg
jnp
cmc
jns
pop
in
call
push
add
push
scas
adc
xor
mov
lods
xor
jne
ja
test
cmp
push
pop
mov
xchg
mov
lahf
cmp
xchg
sbb
scas
bnd
lcall
jno
addr16
dec
add
sar
pop
jl
xchg
in
pop
ret
repz
cmc
mov
clc
fwait
and
enter
clc
xchg
adc
lds
loope
jle
ret
out
push
mov
aam
ja
jo
dec
cmc
sahf
xchg
rorl
shll
call
dec
loope
movsb
push
divl
adc
insl
and
cld
jno
cmc
mov
mov
mov
xchg
jo
aad
les
jl
sbb
push
add
jno
dec
sbb
add
adc
shrb
inc
push
xor
cmc
dec
andl
addl
jg
fwait
sbb
lea
andb
mov
ret
dec
lret
or
daa
cmc
pop
and
shll
sbb
pop
mov
xor
dec
cmp
je
testl
insl
push
push
push
cmc
into
push
xchg
daa
cmp
insb
push
test
mov
mov
fwait
adc
stos
cltd
cwtl
sbb
jns
jno
dec
jbe
add
jns
out
into
push
fisttps
mov
in
inc
adc
inc
dec
xor
int3
dec
std
lock
xor
add
test
add
insb
aas
mov
xchg
sbb
insb
jno
stos
std
xchg
into
cs
cmp
test
lods
icebp
push
cmp
dec
roll
lahf
jmp
mov
mov
into
mov
cli
lock
enter
orl
xor
gs
sbb
push
adc
push
lahf
cmp
movsb
pop
jbe
loopne
xorl
mov
icebp
outsb
sub
cmp
shr
push
xor
popf
jbe
lcall
ret
add
into
pop
outsb
iret
inc
mov
fld
aad
jl
and
nop
js
fmul
bound
adc
xor
inc
je
outsl
pop
inc
xchg
outsb
mov
mov
xor
jle
mov
in
push
outsb
pop
out
into
test
and
xlat
test
fdivrl
mov
into
rcrb
and
dec
or
aas
std
cli
fistps
cmpsb
sbb
ja
insb
rcrb
xchg
ret
shlb
cmc
out
pop
lock
ljmp
iret
add
cmpsb
shlb
aas
sub
into
or
xchg
push
mov
mov
push
dec
add
inc
nop
ja
std
mov
mov
test
xchg
and
dec
aam
in
mov
mov
dec
movsb
pop
jno
lret
mov
addl
sbbl
sbb
leave
jne
adc
dec
push
test
jbe
xchg
jmp
into
mov
sbb
xchg
cmpsb
imul
pop
aas
xchg
ret
into
cli
aaa
test
js
jle
jbe
stc
push
clc
adc
ficoms
ret
lds
sub
insb
xchg
repnz
sub
mov
test
pop
jno
in
pop
mov
or
js
xchg
shlb
scas
imul
into
sub
sbb
inc
aam
adcl
jne
stos
mov
loope
xchg
mov
dec
xchg
push
jne
jmp
inc
xchg
movsl
aas
mov
jae
add
test
xchg
js
mov
xor
lret
icebp
shrb
add
cltd
and
or
shl
mov
mov
jmp
test
shll
adc
xchg
mov
test
movsb
fsubs
xchg
imul
xchg
shld
xchg
xchg
mov
nop
test
cmp
cli
xor
mov
add
call
cltd
mov
test
push
lea
xor
sub
shl
aas
sbb
inc
cld
mov
andb
xorl
in
movsb
aaa
push
or
mov
jp
fcompl
add
gs
rclb
cmc
pop
imul
sub
std
sub
push
cmc
mov
or
push
loopne
loopne
mov
jl
xor
mov
out
imul
push
roll
mov
loopne
sub
dec
adc
xchg
test
fiaddl
cs
insl
mov
rol
push
dec
and
rcr
xchg
pmulhuw
push
add
mov
and
test
xor
pop
shr
mov
fstl
movsl
jecxz
pop
out
dec
push
push
orl
or
mov
add
push
dec
mov
mov
out
scas
inc
cmc
mov
pusha
mov
not
mov
add
stc
dec
inc
fwait
test
dec
xchg
xor
cmp
and
mov
and
sbb
orb
mov
cmc
adc
mov
inc
pop
lods
cmpb
cwtl
pop
jp
dec
js
fisubrs
in
push
icebp
sbbb
aam
dec
xchg
int3
cmp
mov
fdivrs
rorb
sbb
mov
push
in
into
push
push
cltd
sbb
add
mov
fsts
divl
jbe
nop
scas
leave
xor
xchg
xchg
gs
addb
out
jo
xor
jns
push
inc
inc
rclb
xorl
pop
dec
test
in
add
dec
loope
jnp
sub
test
sub
xlat
out
mov
fmull
xchg
sub
int3
cwtl
add
push
push
cltd
aas
and
mov
lods
pushw
ljmp
or
dec
mov
in
jl
adc
rorb
dec
stos
mov
add
sub
cmc
hlt
inc
mov
lock
rcrb
cli
sub
in
outsb
xor
mov
cwtl
repnz
dec
scas
pop
and
sti
mov
xchg
push
jp
mov
nop
cmc
jge
scas
insl
lret
push
jmp
jno
ss
xor
mov
out
mov
pop
aad
adc
jae
push
std
sub
out
lret
loop
add
sahf
pop
cwtl
test
push
sub
push
idivl
nop
js
cmc
in
lds
popa
cmp
repz
sub
int3
scas
lock
and
jns
mov
pop
movsb
dec
cmc
push
jns
aas
into
sub
dec
lret
scas
xchg
inc
xor
cmpl
es
outsb
fcmove
mov
cli
fistpll
popa
pop
cltd
sahf
stc
xchg
ja
and
adc
cmp
jg
insb
sbb
sbb
dec
cmc
iret
xor
adc
xor
jo
xor
insb
dec
xor
push
insl
sbb
inc
orl
pop
aam
lret
sbb
inc
push
and
mov
bound
adcb
dec
inc
sarl
dec
stos
aas
lods
xchg
lcall
jae
fadd
outsb
sub
inc
mov
sti
in
bound
jbe
popf
inc
mov
test
mov
xchg
fisttps
iret
xchg
ds
dec
jne
fs
cmp
adc
cs
mov
push
fnsave
sub
fstp
fists
into
inc
sbb
dec
rorb
stc
inc
jne
dec
jnp
scas
mov
popa
cli
mov
bound
adc
jl
frstor
push
sub
cmpb
testb
icebp
push
popf
sahf
test
icebp
aaa
movsl
cmpsb
aam
jno
shlb
sub
das
xor
cwtl
out
mov
or
dec
es
and
sub
jecxz
into
sahf
push
cmc
je
sub
pop
mov
outsb
push
mov
and
cli
dec
xchg
pop
cmc
into
in
scas
fidivrl
mov
mov
add
adc
mov
add
mov
xlat
jp
ret
adc
pop
dec
pop
jnp
mov
addr16
jl
jo
jmp
daa
jmp
jne
mov
mov
sbb
push
inc
push
pop
cmc
pop
xor
and
mov
xchg
stos
jp
pop
out
hlt
sbb
scas
add
mov
sti
stc
into
pop
addl
shlb
cmc
test
mov
inc
xchg
pop
icebp
add
mov
xor
inc
and
pop
jb
rcrb
jmp
pop
out
inc
sub
pop
arpl
add
in
fiaddl
fstl
mov
dec
movsb
lds
add
in
cmp
imul
xchg
outsl
or
std
or
mov
dec
or
into
fcmovnbe
mov
popa
mov
adc
lret
fists
in
jg
mov
lcall
adc
jge
in
dec
roll
dec
ret
frstor
mov
xchg
movsl
xchg
data16
inc
stos
rorl
xor
sbb
mov
je
fwait
outsb
dec
lcall
inc
out
sahf
js
outsl
fldl
imul
mov
cmp
inc
ss
push
insl
leave
sub
lahf
or
xor
pop
and
cmp
pop
cmc
pop
ret
lret
jl
test
pop
int
aad
pop
pop
mov
dec
icebp
int
shlb
or
pushf
push
cmc
popf
sbb
cmp
and
jle
add
or
cmp
dec
and
lds
and
mov
mov
mov
push
fsubrs
push
jg
add
pop
adc
pop
pop
insb
mov
sub
movsb
shlb
push
in
int
aam
mov
lock
mov
outsb
xchg
push
jb
inc
inc
mov
xchg
adcl
dec
insb
cmpsb
test
xchg
inc
cld
iret
mov
xchg
fildl
ret
cli
push
test
gs
repz
stc
scas
xor
or
jmp
out
push
sbb
mov
push
inc
int3
nop
cmc
rol
cmp
cltd
sbb
fcoms
mov
pop
mov
dec
sbb
mov
jl
mov
js
loopne
xchg
inc
jge
jle
jo
iret
xor
mov
imul
jne
jne
stc
in
out
jae
mov
in
fisubrs
or
neg
shll
test
mov
stc
dec
cmc
scas
mov
fs
enter
mov
xor
mov
push
loopne
mov
fucomi
mov
data16
movsl
ret
inc
and
mull
mov
jo
rcr
dec
mov
pop
shr
inc
ficompl
pop
test
fldenv
jge
dec
and
shld
inc
adc
pop
sti
add
xchg
push
pop
or
icebp
jl
in
xchg
mov
dec
xor
loopne
mov
dec
mov
sub
cltd
add
push
mov
jnp
in
push
rolb
push
test
ds
add
imulb
mull
outsb
pop
bound
sti
push
adc
pushf
jns
dec
insb
fsubrs
mov
cmp
adc
jbe
pushf
inc
jecxz
ja
jg
jb
mov
stos
les
aam
scas
loop
ret
insl
filds
xorb
xchg
and
mov
cltd
mov
mov
and
std
jno
and
xor
mov
push
lods
icebp
sbb
push
jmp
pop
sarb
push
push
stos
aad
mov
push
ds
je
cmpsb
jae
inc
mov
leave
mov
cmc
add
es
xor
mov
dec
shlb
je
adc
popa
pop
mov
push
mov
stos
aas
imulb
pop
fistl
dec
push
cmp
testl
mov
mov
sbb
and
mov
xchg
jbe
sub
push
addr16
cmpsb
jne
mov
mov
jb
jnp
int3
sub
aam
addl
push
stc
aaa
stc
aad
xor
mov
push
push
aaa
jne
arpl
cmpsl
ror
arpl
fucomip
mov
adc
lds
test
mov
jnp
loop
jne
shlb
jecxz
add
and
pusha
stos
xchg
shrb
mov
add
push
cld
ret
dec
and
pusha
jp
xor
jmp
dec
mov
xchg
test
and
mov
enter
pushf
lret
rcr
xor
lret
mov
dec
jp
aad
dec
inc
jmp
add
mov
insl
out
insl
ljmp
xor
jge
xchg
in
in
lods
into
inc
test
adc
outsl
add
rcll
insl
xchg
pop
xchg
xor
aad
add
mov
popa
sub
mov
shlb
inc
or
cli
cmp
xchg
push
add
mov
into
into
xchg
adc
jo
cli
hlt
push
mov
jb
jns
testb
int
pop
repz
mov
es
int
hlt
int
pusha
inc
cmp
cmc
popa
or
insl
mov
scas
incl
push
nop
fcmovne
cmpsl
jne
xor
dec
pop
ror
imul
pop
sub
out
clc
xorb
mov
or
mov
jne
dec
xor
cmpsb
xchg
aas
out
and
xchg
aam
inc
cmpsb
push
sbb
mov
add
sbbl
jp
cmc
leave
push
out
push
leave
cmp
ds
scas
out
iret
das
es
jne
pavgb
pop
or
les
pusha
xchg
add
lcall
dec
and
sti
or
shll
xchg
movsl
div
add
or
mov
mov
adc
nop
ljmp
sbb
mov
mov
jp
insl
bound
leave
iret
shl
popa
stc
add
cmc
inc
test
push
xor
clc
sti
and
adc
inc
into
rcl
popf
mov
pop
scas
push
pop
pop
jmp
mov
cwtl
scas
insb
mov
cmc
sti
xchg
insl
mov
jle
mov
imul
scas
ret
leave
test
ret
sub
xchg
out
ret
xor
dec
in
cltd
repnz
xlat
dec
pop
jg
lahf
and
jp
btr
addr16
jp
bound
cmc
cmp
cwtl
test
pushf
pop
divb
mov
clc
imull
jmp
loope
test
icebp
mov
cltd
pop
cmc
mov
sub
fdivr
les
in
add
arpl
pop
jmp
daa
dec
xchg
mov
mov
jbe
jl
and
xor
lcall
mov
ss
or
inc
mov
insb
sbb
xor
push
mov
fldl
adc
dec
je
jns
sub
sbb
add
daa
push
fstps
cmp
push
cmp
repz
stos
add
jl
inc
in
pop
push
filds
xrelease
cmp
lods
cmp
inc
cltd
lea
test
pop
mov
and
into
push
cld
xchg
inc
and
clc
dec
daa
jne
ret
push
sbb
xchg
add
int
rolb
insb
push
mov
sbb
add
add
pop
scas
loop
or
or
push
cld
shll
xchg
arpl
shr
push
pop
rclb
jae
andb
or
into
cmp
pop
xchg
pop
push
dec
mov
push
sub
shlb
jne
jg
add
adc
add
jne
push
das
std
stos
aam
repz
rolb
jge
push
jns
sub
lea
jge
jg
test
or
test
and
ss
push
mov
add
mov
popf
dec
inc
dec
imul
jns
in
cltd
xor
lock
loope
rorl
jmp
jbe
stc
xor
scas
cmpsb
test
das
std
divb
fnstenv
lahf
cmc
sbb
hlt
and
lods
or
fildl
jnp
int3
cmpsl
dec
pop
mov
mull
mov
pusha
or
fidivrl
scas
sbb
xchg
fstp
push
xchg
addr16
lcall
ret
cmp
jbe
jecxz
cmc
popa
stos
fsts
cmp
nop
cmp
lret
loopne
imul
test
cltd
jo
inc
sbb
xchg
jnp
pop
mov
daa
jne
sbb
nop
das
push
repz
sbb
cld
clc
scas
push
xchg
mov
fcmovu
scas
enter
outsb
mov
dec
mov
scas
mulb
lcall
push
stc
push
aas
add
lahf
data16
dec
lcall
rorl
aas
ljmp
mov
pop
jmp
dec
popf
jne
mov
cwtl
test
xchg
jae
dec
jbe
lret
pop
daa
adc
mov
lds
and
mov
mov
aam
jne
ljmp
or
mov
pop
push
fucomip
push
jno
lcall
repz
mull
test
movb
mov
sarb
push
adc
orb
or
cld
xor
sbb
repz
mov
sbb
sbb
ds
mov
inc
orl
or
or
test
addr16
push
ret
std
lret
mov
cmp
scas
sbb
jne
adc
xchg
cmp
outsl
jne
xchg
mov
and
stos
test
cmp
add
mov
popa
xor
lcall
mov
in
inc
movsb
xorl
and
lret
xchg
mov
xchg
or
pop
add
cmp
aam
jp
ja,pt
mov
shll
repz
jle
pop
dec
call
and
cs
ror
lret
nop
xchg
mov
push
cmp
mov
dec
mov
add
dec
push
push
fidivrl
push
jecxz
pop
imul
xorl
mov
lock
daa
cltd
fstp
xchg
xor
add
mov
dec
jle
arpl
or
push
xchg
cli
lahf
cmp
or
int
xchg
dec
sub
mull
ds
dec
jno
add
mov
dec
push
xor
sub
fistpl
stos
xor
test
adc
cltd
mov
or
mov
xchg
sbb
pop
in
repnz
addb
sti
mov
into
mov
ljmp
sub
push
xchg
inc
jmp
push
cmpsl
push
mov
pop
mov
pop
hlt
sub
outsb
lods
aad
dec
sti
jno
xchg
push
sub
mov
pusha
adc
push
imul
loope
in
pushf
int3
mov
xor
xchg
cmc
and
jbe
je
movsl
int3
xchg
sbb
fdiv
jl
push
into
subl
mov
sbb
pop
mov
cmp
and
jge
mov
out
mov
inc
sbb
inc
xchg
adc
jae
cltd
lcall
les
jne
out
rcrl
lret
loope
push
popf
and
adc
call
lea
popa
daa
mov
fimull
sbb
pop
cltd
jg
iret
dec
std
fmuls
push
imul
jbe
loop
jno
dec
add
push
andb
shrl
sub
incb
fwait
int
mov
rorl
sub
jb
repnz
xorl
jmp
inc
adc
lods
dec
lods
xchg
fldcw
and
pop
vpshufd
lods
pop
mov
jbe
negb
icebp
popa
inc
fnstsw
pop
sub
mov
add
rclb
and
dec
xchg
fcmovnbe
ds
decb
cs
mov
ds
sbb
cs
in
outsb
jle
cmc
cmp
mov
push
dec
notl
test
or
adc
jbe
cmp
out
pop
jmp
adc
mov
arpl
or
out
cs
jecxz
loopne
les
jae
or
and
push
cmp
pop
stos
add
ja
ljmp
lcall
and
pushf
push
aas
jecxz
addr16
jl
inc
sbb
outsb
sbb
in
mov
xchg
adc
movsb
push
out
add
les
adc
jecxz
and
jae
sahf
ja
sub
jo
push
mov
adc
mov
cmp
shr
adc
mov
mov
xor
fmull
sub
mov
das
sbb
push
dec
cmc
dec
xor
pop
movaps
fisttpll
mov
into
mov
cmc
lock
aad
push
mov
ror
popa
sahf
test
mov
jle
ds
sub
inc
or
mov
and
mov
and
mov
ret
lahf
dec
shlb
test
mov
xchg
xor
rcl
hlt
leave
test
negb
push
mov
movsl
loope
adc
sbb
ret
mov
scas
push
mov
je
jne
dec
mov
daa
aam
mov
jnp
lds
into
mov
aad
mov
sub
jl
inc
es
push
adcl
xchg
sarb
leave
js
cmp
adc
inc
sub
std
in
jle
sbb
mov
and
mov
mov
pop
lea
pop
mov
insl
jp
and
and
loope
aad
pop
mov
adc
jne
setae
mov
jne
mov
adc
cmc
cmp
jno
adc
cmp
repnz
cwtl
xchg
popa
xor
dec
xlat
mov
cmc
and
pop
mov
jp
shll
push
fisubs
dec
xchg
cmpb
mov
mov
cmp
pop
mov
or
shl
shrb
scas
ret
mov
add
mov
lahf
jne
xchg
ret
fwait
jg
fwait
mov
and
inc
lods
movsl
or
imul
xor
ret
pushf
sbbb
int3
adcb
push
xchg
insl
cmp
mov
jge
dec
test
jbe
mov
xor
shrb
mov
mov
push
out
fstl
fucom
and
jecxz
sbb
into
sbb
xchg
cmpsl
xbegin
fiaddl
or
dec
cmp
fmull
pop
cli
jecxz
xor
js
lods
dec
xchg
xor
pop
cmp
cmpsb
pop
mov
insl
sub
repnz
jne
xchg
jl
lret
cwtl
loop
jb
cmc
enter
repz
cmpsb
ror
int
rcll
xor
int
push
inc
sbb
arpl
sbb
lds
inc
dec
js
and
jge
mov
push
inc
or
mov
mov
punpckldq
mov
cli
stc
outsl
lcall
loop
cltd
pop
scas
les
notb
push
sbb
insl
ss
add
fsubl
inc
pop
fbstp
loopne
in
cmpsl
pop
jle
add
popa
jp
push
pop
stos
and
adc
mull
test
movsb
sbb
mov
js
jb
movsb
nop
call
xor
sub
sbb
mov
xor
in
xchg
mov
cmp
inc
repz
pushf
pushf
in
into
push
sbb
shlb
stc
das
mov
xor
fprem
cwtl
ret
rol
test
insb
inc
cmp
lcall
jo
call
push
xor
les
lods
and
lahf
js
add
cmc
jl
jp
data16
sarl
add
mov
jne
sub
dec
mov
push
int3
dec
add
insl
lock
push
bound
and
subl
aaa
scas
fcmove
inc
aaa
inc
cmp
pop
jae
add
insl
loope
xor
sarb
scas
clc
cmpl
arpl
cmp
xor
jle
adc
jmp
push
lahf
int
mov
cmp
ljmp
call
mov
imul
add
xor
test
push
rorb
jg
int
gs
lock
sub
mov
mov
cwtl
pop
jb
and
out
sub
into
ja
sub
loop
test
jns
adc
cmc
enter
add
jne
repz
lods
add
jp
push
imulb
cmp
inc
lock
mov
xor
into
scas
sub
add
mov
inc
add
pop
add
or
jbe
add
cwtl
pop
dec
push
mov
push
test
inc
addl
adc
add
xchg
add
sub
adc
add
cmp
xchg
mov
and
test
and
cwtl
adc
and
add
or
add
mov
adc
add
add
inc
and
and
add
inc
cmp
nop
ret
add
and
je
and
dec
movsb
add
mov
add
addb
and
xchg
dec
inc
xchg
inc
pusha
add
inc
add
add
xorb
dec
sub
mov
add
and
adc
add
add
sbbb
dec
and
loopne
and
inc
pusha
lds
andb
or
sbb
and
add
and
dec
and
and
inc
push
push
movsb
nop
adc
inc
jo
or
addb
xor
inc
add
or
and
sub
inc
add
xorb
or
mov
or
xor
popf
xor
inc
and
add
add
mov
dec
push
sbb
nop
adc
inc
pop
adc
mov
add
push
orb
add
and
add
inc
add
add
xor
shlb
adc
adc
or
inc
inc
add
adc
test
inc
inc
and
addb
or
add
add
adcl
inc
pop
and
add
add
add
add
add
push
and
add
dec
dec
popa
mov
add
push
or
inc
push
orb
mov
addb
adc
inc
adc
cwtl
add
add
add
pop
dec
inc
sbb
inc
or
loopne
movsb
add
adc
sbb
add
add
add
inc
add
and
cmp
adc
add
add
add
mov
and
mov
inc
or
add
movsb
add
add
add
imul
or
call
adc
adc
dec
stos
adc
or
or
and
cmpb
or
add
pop
dec
gs
inc
xchg
adc
or
add
adc
daa
and
adc
add
and
or
mov
loopne
and
pushf
push
add
scas
add
inc
and
cs
out
sarb
push
or
add
test
and
add
rolb
and
sub
inc
xor
dec
dec
enter
and
adc
add
adc
and
mov
add
sbb
inc
inc
and
add
add
lds
inc
and
xor
inc
pushf
add
rolb
add
sbb
xor
and
push
or
add
aam
mov
sub
push
loop
add
add
push
add
add
mov
and
mov
inc
and
inc
lret
mov
add
mov
pop
or
and
sub
add
add
dec
stos
xor
adc
add
or
mov
add
cs
add
pusha
dec
add
jmp
add
inc
orb
add
xchg
or
adc
mov
andb
dec
push
xchg
inc
or
or
in
push
cmp
xor
jge
test
add
sbb
add
nop
add
stos
out
xchg
mov
or
inc
add
add
add
rorl
dec
add
add
adc
pop
and
inc
dec
add
inc
xchg
inc
nop
and
add
add
add
mov
sbbb
push
test
inc
push
add
popa
cmp
sbb
and
and
add
stos
add
or
add
add
xchg
inc
xor
and
inc
inc
mov
inc
roll
dec
sub
dec
test
and
adc
inc
fwait
add
add
orb
and
add
sub
and
add
add
sbb
add
sbb
or
xor
or
pusha
and
add
add
sbb
add
das
add
and
mov
and
inc
dec
loopne
add
mov
adc
adc
ret
add
xor
jbe
pusha
add
pusha
add
xchg
adc
popa
leave
push
or
xchg
cltd
inc
sub
add
nop
dec
fldl
adc
inc
hlt
fs
sub
ret
jo
and
mov
inc
add
and
pusha
test
add
sub
or
addb
mov
push
add
adc
inc
test
shlb
loopne
xchg
add
xchg
enter
mov
or
adc
adcb
or
adc
out
cwtl
add
adcl
and
add
add
addl
enter
pusha
pushf
and
add
inc
sbb
popa
add
sub
add
inc
mov
data16
or
add
add
adc
addb
inc
inc
and
mov
insb
adcl
sbb
add
add
and
adc
inc
push
or
bound
adc
ret
lds
movsb
dec
add
rorl
dec
add
fs
inc
xor
and
add
addb
lock
and
and
inc
cs
push
add
add
or
adc
mov
add
add
add
push
add
mov
mov
inc
sub
add
add
add
add
cmp
add
xor
pop
jmp
inc
adc
add
or
inc
add
lods
cwtl
hlt
add
inc
xchg
inc
test
sbb
adc
inc
inc
das
ds
adc
enter
mov
add
adc
and
movsb
addl
inc
sbb
push
test
data16
add
add
sub
popa
mov
push
adc
test
xor
adc
xor
xchg
cwtl
sub
sbb
xor
add
pusha
add
enter
push
and
add
inc
and
addb
cmp
pushf
shrl
or
popa
dec
sbb
add
add
add
pop
add
mov
sub
popa
or
and
add
lock
add
add
or
jo
inc
sbb
orb
cmp
cmpsb
xor
pop
add
inc
add
or
ret
or
sbb
or
add
cmpb
or
push
and
add
push
add
add
add
or
dec
add
add
push
sub
adc
add
mov
add
add
adc
ret
lds
xor
orb
add
and
add
xor
add
add
add
inc
xchg
mov
add
add
nop
push
cmp
add
sbb
add
sbbb
add
add
test
cmp
add
add
jbe
add
les
adc
mov
push
inc
or
and
add
addb
or
call
in
sub
adc
mov
adcb
inc
add
add
pop
or
dec
push
pusha
add
push
add
adc
or
les
and
xor
add
inc
or
and
add
add
pop
addb
test
xchg
add
adc
les
imul
xor
adc
and
add
xor
rolb
add
cmpsb
add
or
addb
or
inc
or
es
add
push
test
add
data16
cmpsb
add
add
adc
add
pop
addb
inc
inc
and
addb
push
dec
dec
add
pop
add
adcl
test
subl
mov
dec
dec
imul
pusha
pusha
mov
or
inc
sbbl
adc
push
add
addb
and
cwtl
or
add
adcb
add
rolb
nop
sub
and
test
pusha
add
inc
add
push
adc
test
add
inc
and
inc
dec
or
inc
sub
add
add
add
sbb
add
adc
jnp
xchg
sub
add
fs
addb
add
orb
add
add
inc
push
inc
or
inc
dec
push
push
push
add
adc
xor
or
adc
xorb
rol
or
add
mov
add
add
add
xor
adc
jo
or
add
sbb
nop
inc
or
sbb
adc
add
add
pusha
add
add
pusha
or
xchg
add
inc
add
adc
add
mov
mov
or
adc
adc
and
rcrl
and
push
adc
addl
xor
int3
and
add
or
or
xchg
mov
and
rclb
addb
sub
sub
inc
mov
mov
add
add
inc
sarb
nop
add
adc
and
inc
and
xor
and
mov
adc
mov
inc
and
add
xor
adc
inc
pusha
mov
add
adc
inc
addl
add
and
mov
and
mov
test
inc
mov
push
inc
rcrb
and
dec
nop
mov
sub
jb
add
andl
add
add
add
push
add
and
push
add
inc
subb
and
or
add
or
and
add
add
and
addr16
lods
or
adc
add
add
add
mov
mov
adc
add
add
add
add
test
andb
movsb
inc
adcb
inc
les
or
add
add
shlb
lock
movsb
inc
push
les
add
mov
sbb
or
push
inc
adc
cmpl
int3
sub
add
xor
pop
dec
andb
add
sbb
test
adc
add
add
add
or
add
addl
add
add
xchg
and
or
xchg
shlb
xor
adcb
add
add
or
subl
add
cs
adc
add
mov
add
add
and
add
add
add
add
cltd
and
and
push
add
add
nop
sub
adc
out
test
adc
add
andl
movsl
dec
add
jo
sbb
add
and
and
adc
add
push
add
and
add
and
and
add
xchg
xor
sub
inc
test
mov
sbb
add
xor
mov
push
xor
adc
adc
es
dec
sub
movsb
sub
add
add
add
enter
add
add
imul
dec
cwtl
add
adc
orl
cwtl
xorb
add
inc
push
add
add
xor
inc
sub
add
inc
xchg
add
push
orb
or
inc
add
pusha
or
add
add
adc
sub
adc
add
adc
adc
mov
mov
cmp
in
shll
or
test
nop
sub
add
or
adc
mov
adc
add
xor
add
add
addb
inc
add
into
shlb
add
add
push
rclb
or
and
or
add
add
inc
or
or
push
xor
mov
mov
add
enter
add
inc
pop
add
mov
and
add
add
add
mov
push
nop
mov
or
add
add
mov
addb
add
adc
push
or
and
loopne
mov
mov
dec
add
sbb
orl
addb
or
add
movsl
xor
add
sub
inc
add
and
add
and
add
sub
add
and
or
and
add
add
ja
add
addb
cmp
or
rcrl
add
xor
and
mov
addb
adc
add
and
jb
xchg
int3
int
add
and
or
mov
add
adc
or
inc
pop
fiadds
add
mov
push
add
add
inc
add
inc
push
test
and
cwtl
or
push
add
inc
cwtl
pop
inc
sbb
sbb
popa
addb
int3
dec
cs
sbb
adc
adc
fwait
mov
dec
add
mov
and
sub
add
addl
roll
int3
dec
add
add
xor
or
adc
roll
inc
mov
adc
add
addb
add
lret
subl
add
inc
push
add
and
add
sub
mov
sub
in
dec
sub
add
adc
add
mov
add
test
data16
sbb
mov
add
xchg
and
inc
sbb
and
shlb
movsb
addb
or
add
fwait
or
and
add
add
adc
sub
add
adc
aaa
addl
and
sub
add
test
push
rolb
mov
and
nop
lods
inc
push
dec
adc
or
or
xchg
push
add
pop
and
xchg
adc
lret
add
addb
add
addb
and
add
adcb
add
jo
and
mov
bound
nop
add
inc
mov
call
add
mov
add
pop
sbb
adc
jb
add
or
inc
cmp
enter
add
xor
or
add
nop
add
xchg
test
add
cs
sub
add
or
add
pop
add
add
pusha
addb
add
ret
dec
fadds
adc
add
add
adc
or
mov
pop
addb
add
or
add
nop
push
mov
add
xor
inc
add
push
inc
push
or
xor
adc
dec
and
pop
roll
xor
sub
and
nop
sbb
add
adc
nop
push
pop
and
ret
inc
stos
add
or
add
sbb
jns
sbb
loopne
inc
and
add
mov
push
sub
loope
and
sub
sbb
or
mov
or
push
add
add
add
or
mov
add
add
les
cwtl
push
and
jno
adc
popf
dec
andl
inc
andl
shlb
inc
add
add
push
xchg
test
add
adcl
add
addb
push
add
add
inc
and
and
add
call
add
rclb
inc
add
or
cmpsb
add
mov
rolb
add
mov
add
add
add
add
dec
or
andb
dec
je
xor
and
pop
adcb
or
test
or
pusha
xor
adc
inc
mov
mov
adcb
inc
jb
push
shlb
xor
or
add
and
addl
and
test
add
add
and
add
push
xor
adc
mov
cwtl
sbb
sahf
inc
add
add
pop
or
or
add
nop
addl
inc
in
inc
mov
cmp
or
add
cwtl
inc
add
or
adc
sbb
add
addb
les
flds
add
loop
lea
xchg
enter
cs
add
mov
add
test
add
or
add
sub
in
sub
add
add
add
add
cmpsb
sub
inc
sbb
fisubl
or
add
xchg
ret
inc
add
adc
dec
add
push
les
inc
push
add
or
test
mov
pusha
shlb
and
add
adc
push
mov
andl
or
dec
es
aad
mov
add
sub
inc
sub
inc
lods
mov
test
adc
inc
addb
inc
xor
xor
push
mov
addb
add
pop
adc
add
add
adc
lds
add
mov
dec
or
sub
adc
and
or
add
rorl
ret
and
dec
and
adc
push
xchg
rolb
dec
inc
inc
adc
subb
add
andb
ret
mov
sbb
add
xchg
add
dec
adc
xor
push
push
add
addb
adc
pushf
add
bound
inc
sub
add
sbbl
fcoms
inc
add
addl
sbb
add
or
pusha
addl
ret
test
adc
adc
mov
xor
pusha
test
push
int3
adc
or
popa
addl
add
cwtl
and
add
add
push
and
add
pop
and
pop
adc
adc
add
nop
addl
adc
add
add
inc
add
add
add
or
or
inc
adc
add
loope
pop
add
inc
xorb
or
add
add
sbb
rcrl
push
inc
or
add
adc
cwtl
add
or
inc
jb
call
add
addl
adc
add
shrl
xor
sub
mov
roll
add
add
and
mov
or
adc
add
add
dec
add
sbb
cmp
add
lock
sub
inc
inc
mov
add
mov
adc
add
or
inc
cwtl
lds
inc
and
and
add
xor
inc
adc
and
add
rcll
adcl
or
cwtl
dec
and
and
add
inc
orb
sbb
subl
addl
or
or
and
add
add
addb
sub
push
mov
or
or
xor
add
inc
add
jp
xchg
add
adc
adc
mov
adc
jmp
pusha
sbb
or
and
sub
adcb
or
inc
or
xor
andb
pusha
push
fs
and
pop
add
add
add
inc
js
adc
cwtl
adc
adc
add
add
add
sbb
and
mov
add
push
xor
or
and
inc
sub
mov
nop
and
inc
and
or
test
les
adc
add
add
add
lods
or
add
add
pop
add
adc
adc
and
ret
or
movsb
jno
and
add
cmpl
inc
push
adc
rorb
push
cmpb
sub
pop
inc
or
lcall
inc
sub
add
nop
or
scas
add
add
roll
and
and
push
addb
cmp
adc
add
mov
pusha
test
add
push
adc
push
mov
sub
or
add
and
push
sahf
and
adc
sub
sbb
add
adc
inc
and
add
add
test
or
pusha
add
sub
inc
mov
adc
add
cmp
dec
cwtl
add
add
adc
add
inc
add
or
andb
mov
inc
jb
sub
nop
sub
sub
add
addb
pop
test
add
sbb
addl
mov
push
push
andb
addl
add
sbb
push
push
add
pop
adc
inc
adc
xchg
and
add
add
roll
sbb
add
push
inc
push
adcb
xchg
dec
xor
or
bound
adc
addb
sub
inc
or
xor
dec
adc
xchg
leave
pop
add
int3
test
loopne
adcl
sub
add
sub
or
or
and
mov
and
mov
push
add
and
mov
add
or
sub
pop
adc
inc
pushf
cmp
mov
andb
sbb
dec
mov
add
or
add
arpl
adc
or
adcl
or
xor
cwtl
andb
movsb
xchg
or
and
test
and
add
sbb
sbb
orb
mov
sbb
pusha
add
lods
adc
xchg
adc
addl
rolb
and
add
test
and
add
add
add
adcb
les
mov
sub
addb
xorb
or
mov
xor
add
addb
pop
mov
addl
add
and
inc
add
push
orl
mov
add
and
sub
add
sub
add
add
add
and
add
add
add
popa
andb
inc
mov
add
add
cmove
add
add
add
push
and
and
or
mov
inc
push
add
add
sbb
adc
pusha
addb
and
push
add
add
mov
add
or
add
add
adc
nop
xchg
push
xor
mov
or
add
inc
add
add
add
add
adc
sbb
and
and
int3
add
sbb
adcl
add
pusha
inc
inc
dec
sbb
add
enter
lcall
add
adcb
mov
sub
add
xor
and
andb
adc
add
and
and
or
adc
pop
rorl
lock
add
es
add
nop
mov
dec
push
and
add
or
popl
or
orl
cmpsb
inc
cwtl
or
add
mov
xor
add
push
add
or
inc
add
xchg
mov
dec
push
nop
sub
push
add
inc
sbb
add
and
or
dec
bound
adc
sbb
sub
xchg
xchg
add
add
jl
jb
add
inc
loopne
add
es
add
or
adc
or
adc
or
sbb
and
add
and
adc
and
add
xor
add
roll
add
insl
or
or
or
mov
inc
add
inc
add
nop
push
test
pop
xchg
or
or
or
and
cmp
add
inc
adc
and
nop
add
xchg
add
add
push
add
adc
adc
and
adc
push
addl
dec
mov
or
inc
andb
jo
add
test
or
inc
and
push
dec
add
add
add
push
or
adc
adc
add
xchg
jb
add
and
or
add
add
or
or
add
add
add
xchg
push
movsb
or
push
andb
mov
andl
adc
push
add
add
adc
add
and
mov
or
add
add
add
xchg
add
js
daa
pop
popa
push
test
add
adc
rorb
pusha
lds
add
add
pop
sbb
or
and
and
push
add
push
and
add
add
orb
or
jb
inc
adc
adc
or
aam
add
inc
call
or
add
adc
xchg
add
add
adc
enter
adc
adc
xchg
inc
adc
inc
push
add
add
and
and
add
and
mov
addb
dec
add
inc
or
add
push
lods
inc
or
push
adc
and
xor
add
add
push
es
sub
test
or
add
ror
pusha
or
inc
adc
pusha
push
inc
add
or
push
adc
add
inc
mov
adc
add
or
sub
adc
data16
mov
add
xchg
imul
adc
add
adcb
adc
and
sbb
or
addb
add
sbb
xchg
add
add
add
pop
cmp
jno
arpl
inc
dec
or
add
and
inc
inc
adc
dec
dec
adc
add
cwtl
add
xchg
jo
mov
add
add
xor
add
inc
sub
ss
add
xor
faddl
xor
inc
and
rorl
inc
dec
mov
rol
inc
adc
add
add
add
or
adc
inc
add
push
popa
les
int3
xchg
add
xchg
adc
add
sub
test
mov
add
add
add
adc
loope
mov
sbb
je
add
adc
xchg
andb
test
dec
inc
push
sub
add
adc
inc
sbb
adc
push
or
add
add
add
roll
lea
inc
add
dec
int3
add
add
mov
jo
inc
sub
add
and
add
add
dec
test
mov
inc
sub
push
add
sbb
or
mov
addb
add
sbbl
inc
inc
xor
lods
add
add
ret
and
add
adc
push
adc
and
leave
and
adcb
sub
xor
add
adc
add
mov
adc
adc
and
pop
add
inc
add
add
add
xor
mov
andl
or
mov
add
sbb
or
add
pusha
adc
add
or
add
addb
inc
add
and
inc
add
mov
mov
and
inc
xor
adc
addl
stos
or
adc
adc
xor
add
add
sub
sbb
add
adc
or
or
adc
pop
add
add
pop
andb
test
inc
dec
xor
inc
push
and
xor
add
xchg
adc
addb
xlat
inc
fs
inc
inc
push
popa
or
add
adc
add
add
add
add
dec
addb
add
xchg
or
push
add
inc
adc
add
push
add
xor
inc
and
mov
xor
and
add
sub
add
lds
add
dec
nop
das
inc
xor
pop
add
adc
rolb
andb
int3
jae
add
and
mov
rolb
and
pop
add
or
test
pusha
pop
and
and
or
and
add
movsb
add
add
pop
inc
xor
add
inc
mov
sbb
int3
sub
or
imul
adc
push
add
adc
add
or
rolb
mov
add
add
inc
add
sbb
add
mov
call
inc
add
xor
test
or
or
add
or
adcb
adc
stos
addl
add
add
push
or
loope
and
add
add
and
ss
inc
adc
or
inc
add
add
and
add
dec
fdiv
addb
add
inc
add
add
xor
test
push
inc
add
or
enter
add
addb
bound
addb
adc
aas
add
adc
dec
adc
inc
inc
sbb
and
push
in
sbb
add
push
push
and
andl
xor
pusha
mov
andb
or
test
and
or
push
rorl
add
or
add
mov
loopne
xor
push
adc
add
adc
xchg
rolb
add
or
dec
dec
adc
add
inc
adc
cmp
inc
mov
push
add
and
or
ret
or
add
and
and
add
and
addl
es
add
push
and
orb
nop
sub
rolb
or
arpl
je
push
inc
jecxz
add
inc
add
or
nop
add
jge
add
add
and
add
sbb
add
inc
dec
adc
add
push
add
add
test
adc
or
je
push
adc
add
adc
and
or
inc
add
add
and
inc
or
adc
mov
adc
fs
xchg
push
add
inc
dec
inc
dec
movsb
add
add
inc
add
inc
and
add
adc
or
and
andl
xchg
mov
mov
bound
rclb
adc
adc
adcb
add
or
inc
adc
subl
add
out
mov
or
and
add
add
inc
add
add
add
subb
add
add
sub
inc
lahf
inc
inc
mov
ret
add
sub
fs
mov
andl
dec
les
pushf
and
add
and
xchg
inc
adc
or
add
pop
add
adc
fs
or
addl
adc
adc
pop
sbb
xchg
and
adc
nop
test
bound
add
and
into
sbb
ljmp
andb
add
or
push
addb
add
adc
add
ljmp
inc
cmp
or
add
pop
or
and
imul
subb
inc
sbb
add
pusha
test
adc
push
dec
inc
xor
push
or
jno
add
add
add
add
push
add
add
add
dec
sbb
push
push
inc
and
and
add
adc
pop
add
inc
add
adc
cmp
or
inc
movsb
sbb
mov
cltd
sahf
addl
and
push
dec
push
add
add
test
add
add
add
pop
bound
add
xor
adc
push
and
add
add
test
inc
add
mov
pop
adc
pop
add
and
dec
dec
and
add
and
inc
sub
add
dec
or
inc
add
and
dec
adc
push
xchg
add
ret
add
adc
inc
and
and
or
inc
cmp
and
or
pushf
and
add
das
inc
adc
adc
adc
pop
inc
enter
loopne
or
sbb
add
add
push
add
xor
xchg
adc
add
push
or
test
or
mov
add
and
sbb
add
inc
inc
push
or
or
and
adc
add
sbb
loopne
add
or
leave
nop
add
sbb
add
and
sub
or
sub
sbb
and
add
sub
xchg
inc
add
add
add
leave
test
push
enter
adc
mov
roll
add
inc
test
push
inc
adc
add
add
add
inc
mov
and
insl
pop
pop
addb
mov
push
add
mov
add
add
inc
adc
or
add
jecxz
add
add
xchg
inc
add
add
mov
inc
call
pop
add
add
addb
adc
add
or
xchg
adc
add
push
add
cmp
and
and
sub
add
inc
cmp
test
add
push
add
add
adc
inc
add
jb
add
rorb
add
and
and
add
cmp
push
xor
xchg
or
xor
mov
add
add
inc
addb
addb
dec
adc
xchg
push
inc
sbb
add
xchg
dec
add
jo
xchg
add
sub
cmpsb
push
or
lock
adc
inc
inc
inc
push
or
sbb
arpl
ret
dec
push
add
add
or
push
dec
and
push
and
add
push
and
add
add
inc
adc
mov
or
inc
add
adcb
push
push
push
add
dec
add
inc
and
and
cmp
mov
or
addb
xchg
test
cwtl
adcb
add
or
and
fs
inc
inc
add
push
add
sub
xchg
add
and
adc
mov
nop
and
adc
popa
xchg
pusha
inc
and
add
mov
ret
inc
adc
inc
addb
dec
add
sarl
inc
nop
mov
cmp
add
addb
xorb
or
add
pop
and
inc
add
inc
out
dec
sub
andb
clc
ljmp
bound
add
inc
adc
mov
or
les
dec
inc
adc
adc
sbbb
adc
add
leave
popa
jno
dec
andb
or
and
xor
bound
inc
leave
xchg
dec
add
mov
add
push
or
andb
mov
mov
xor
adc
mov
add
add
adc
add
add
adc
xchg
add
add
and
bound
add
add
add
or
pusha
enter
add
sbb
inc
loop
add
add
add
push
mov
add
mov
mov
adc
or
push
add
add
add
add
ret
je
push
add
and
in
dec
mov
adc
mov
add
addl
adc
adc
push
adc
dec
mov
mov
inc
addb
lods
inc
test
movb
dec
and
cwtl
adc
loop
push
and
adc
and
add
roll
pusha
xor
sub
add
xor
adc
xor
add
sbb
sbb
mov
adc
xor
adc
sbb
or
pusha
and
xchg
movsl
pop
inc
dec
or
and
add
in
pusha
sub
mov
sub
push
or
or
dec
cmpsb
inc
loope
add
dec
xchg
mov
and
push
adc
add
dec
mov
adc
add
inc
ret
adcb
add
add
push
pop
add
nop
push
add
andb
cmp
or
shlb
and
push
add
mov
data16
adc
inc
pop
and
xchg
or
add
add
insl
cwtl
sbb
add
or
add
enter
lret
cmp
add
addb
push
or
and
popa
dec
add
push
addb
test
or
addl
mov
inc
and
or
add
adc
or
push
adc
inc
push
lods
je
or
addb
and
push
and
addb
and
inc
sub
jo
int3
add
push
or
add
inc
arpl
and
xchg
or
add
add
push
icebp
add
and
or
inc
sbb
and
test
push
adc
adcb
and
add
adc
add
jae
lds
push
adc
pusha
lret
dec
add
add
or
adc
or
xchg
dec
pop
add
adc
mov
and
add
add
test
test
inc
sbb
and
add
add
inc
add
add
inc
les
and
pop
add
popa
addb
push
adc
sub
push
push
push
fiaddl
mov
pusha
or
and
or
and
add
adc
sbb
pop
and
push
dec
add
leave
dec
and
add
add
ret
add
add
lods
mov
adc
add
test
push
xchg
add
addb
rolb
cmpsb
push
addl
add
xor
add
xchg
dec
sbb
add
and
inc
adc
add
inc
and
addl
addb
push
test
inc
and
stos
or
and
and
sbbl
push
xor
add
and
or
add
push
add
inc
push
or
or
sbb
addb
add
or
and
and
xor
add
mov
add
rorl
add
ret
adc
add
add
adc
push
adc
push
sbb
and
inc
add
mov
or
ret
and
adc
adc
push
adc
xor
adc
add
sbb
and
add
addl
add
add
add
add
push
add
orb
or
enter
les
mov
push
add
adc
mov
cmp
xchg
or
orb
enter
adc
orb
sbb
add
add
cld
rol
xchg
inc
adcb
or
xchg
add
add
and
test
ret
fadd
mov
inc
push
sub
adc
push
mov
popa
add
lret
inc
addl
or
add
test
add
add
jno
cwtl
adc
or
add
add
add
or
adc
adc
xor
andl
or
add
sbb
or
les
adc
sub
and
and
inc
adc
and
rorb
addl
add
add
xchg
add
dec
rorb
cmp
or
add
mov
aad
mov
dec
add
xchg
add
sub
or
roll
xchg
add
and
add
push
sub
inc
add
inc
and
xchg
or
adc
or
add
push
test
add
jo
xorl
mov
ret
add
add
dec
orb
insb
enter
pusha
inc
enter
or
inc
or
xor
aam
mov
or
inc
jo
adc
add
add
adc
into
xor
add
jae
adc
adcl
push
sub
sarb
add
push
add
add
dec
pusha
dec
or
and
adc
add
xchg
inc
push
or
add
and
addb
push
add
orb
add
mov
or
add
or
and
add
push
inc
or
rcrb
inc
sub
adc
add
adc
xchg
or
cwtl
add
add
nop
adc
add
and
or
add
add
lods
adc
or
gs
add
add
push
and
roll
or
and
or
adc
add
push
push
add
dec
inc
add
sub
mov
add
add
dec
add
test
and
or
mov
or
adc
les
pusha
pusha
or
mov
or
add
bound
test
mov
xor
or
and
ret
adc
and
and
inc
dec
or
nop
push
or
add
xor
inc
and
or
inc
add
or
inc
or
add
and
xchg
add
rorb
adc
or
sub
test
sbb
test
add
add
add
cmpsl
add
mov
and
add
and
add
add
or
pop
aam
and
and
or
cmpl
add
adc
movsb
adcb
add
and
inc
adc
adc
or
adc
adc
orb
or
andb
adc
adc
or
and
add
lea
mov
add
rclb
add
push
sub
add
nop
add
ret
dec
add
mov
movsb
and
rclb
loope
adc
nop
movups
addb
add
pop
add
inc
dec
adc
or
xchg
andb
addb
andb
pusha
push
mov
add
adc
loopne
add
add
mov
add
and
inc
andb
add
or
sub
add
movsb
addb
add
adc
or
and
or
xor
les
and
add
xor
add
or
inc
add
pop
xor
or
add
inc
or
adc
inc
or
aam
add
add
pusha
adcb
add
mov
sbb
push
popf
and
popa
cs
sub
pop
nop
push
adc
add
xor
sbb
inc
add
test
xchg
add
add
dec
adc
jo
add
adc
nop
add
add
add
bound
and
inc
adc
add
xor
or
dec
push
adc
inc
inc
add
inc
orb
and
push
xchg
aas
inc
mov
or
adc
or
and
jl
or
or
dec
dec
add
inc
add
inc
add
mov
adc
add
test
push
or
test
and
and
sbb
or
inc
enter
or
push
push
xchg
add
add
cmp
in
add
or
mov
adc
xor
inc
adc
ret
sub
sub
mov
shrb
or
mov
adc
adc
sub
cwtl
inc
add
mov
add
push
and
or
mov
adc
addb
aaa
add
clc
and
sbb
loop
mov
addl
mov
or
andb
inc
xor
icebp
and
add
popa
shlb
push
add
pop
xor
lds
shrb
fs
cmpsb
adc
inc
adc
or
push
xor
add
sub
xchg
xor
add
pop
adc
nop
add
or
and
dec
push
add
pop
add
add
add
orb
adcb
jo
mov
xchg
add
shl
and
sub
add
mov
or
adc
adc
inc
adc
add
addb
add
nop
add
and
dec
or
or
sub
inc
and
adc
dec
inc
inc
add
add
add
adc
inc
and
repnz
xchg
add
add
or
inc
push
loop
sbb
add
add
pop
mov
or
and
sub
adc
addl
inc
xchg
add
add
and
inc
mov
and
add
aaa
pusha
roll
inc
addb
sub
mov
or
inc
push
adc
and
adc
nop
icebp
add
pop
add
cltd
and
inc
push
adc
and
add
push
or
push
test
add
and
test
add
and
and
rclb
xchg
add
push
inc
add
add
and
rcl
dec
xchg
inc
push
dec
add
add
movsb
sub
stos
data16
and
mov
push
arpl
sbb
insb
jo
mov
adc
or
add
and
add
add
test
or
xor
pop
xchg
add
mov
adc
sub
inc
or
or
inc
inc
add
and
and
and
sub
inc
add
sub
xchg
xchg
or
inc
push
adc
xor
sbb
adc
and
rclb
push
orb
and
inc
push
or
xchg
nop
adc
add
add
adc
mov
inc
xchg
inc
add
and
inc
or
or
or
or
push
push
inc
adc
xor
or
inc
inc
push
add
subb
adc
or
sbb
inc
and
mov
sbb
add
xor
inc
add
addb
adc
or
inc
and
adc
add
adc
test
add
add
pop
or
add
adc
xchg
add
mov
push
adc
add
xchg
and
or
xchg
movsb
sbbb
inc
bound
xor
sub
xor
add
and
push
test
and
and
mov
add
add
enter
add
adc
mov
sub
xor
inc
inc
les
shlb
rolb
or
or
and
and
je
orl
and
and
add
inc
add
adc
arpl
sbb
or
adc
add
or
add
addb
or
mov
and
cmp
add
push
adc
rolb
adc
adc
inc
or
incb
or
mov
inc
add
push
or
pop
jl
mov
popa
or
les
sbb
adc
add
and
mov
adc
push
push
adc
add
or
test
dec
inc
add
subl
or
inc
or
pop
cmp
adc
add
or
inc
sbb
xchg
push
add
rolb
adc
push
add
or
push
sbbb
in
inc
adc
cmpb
xchg
subb
mov
enter
add
andb
inc
add
inc
jno
adc
adcb
nop
xor
and
sbb
mov
push
mov
add
and
inc
lea
add
sbb
or
adc
add
sbb
xchg
addl
sbb
xchg
push
nop
or
mov
and
and
addb
push
add
push
mov
dec
add
add
adc
jecxz
adc
push
sbb
cmpl
or
add
orb
adc
and
push
sub
add
sub
adc
dec
add
add
movb
push
rolb
dec
inc
loop
and
adc
inc
or
sub
pop
add
or
test
inc
dec
sbb
add
rolb
test
or
andb
sub
and
sub
mov
cmp
add
and
jo
inc
orb
test
jg
add
adc
xchg
adc
or
adc
sub
pusha
daa
add
sbb
andb
je
and
add
adc
push
pop
pusha
xchg
addb
ret
or
inc
or
or
inc
add
adc
adcb
push
adc
xorb
add
inc
and
pop
add
inc
push
mov
adc
add
and
inc
mov
add
nop
push
add
adcl
ss
add
rorb
sub
inc
and
add
adc
mov
dec
mov
or
add
adc
push
test
add
iret
add
adc
push
rolb
add
or
inc
add
sbb
inc
and
and
add
and
sbb
add
adc
or
addb
sbb
inc
loope
add
inc
sbb
adc
or
or
adc
or
adc
add
add
adc
and
add
in
nop
adc
inc
bound
inc
xchg
or
imul
sbb
test
sbb
inc
jp
add
add
rclb
and
adcl
add
add
push
mov
pushf
inc
addb
add
dec
push
sbb
rolb
andb
mov
addb
adc
add
add
orb
and
or
adc
add
adc
es
adc
and
test
inc
adc
inc
mov
inc
add
or
inc
add
adc
add
add
mov
sbb
and
add
or
and
and
add
add
inc
sbb
loop
inc
add
add
dec
or
push
adc
adc
add
add
inc
add
inc
inc
adc
cwtl
inc
add
xor
add
add
or
or
insl
add
nop
xor
add
int3
xor
dec
xor
add
dec
add
xchg
xchg
add
sub
movsl
pop
movsb
adc
inc
add
add
movsb
or
sbb
pusha
and
add
push
pusha
inc
xor
ror
or
adc
cs
add
jae
and
bound
add
lea
inc
or
ret
adc
loop
xor
or
mov
xorb
cli
inc
test
enter
and
inc
jo
add
and
adcb
or
inc
pop
pusha
sub
xor
adc
add
rcrb
or
adc
mov
dec
or
adc
add
test
leave
adc
sbb
add
mov
roll
lcall
test
pop
add
pusha
or
add
add
sub
test
add
outsb
adc
test
push
add
inc
sub
add
sbb
roll
orl
push
adcb
bound
add
iret
popa
or
sbb
add
add
loopne
xor
enter
add
add
add
or
or
xchg
add
add
add
and
add
nop
adc
andb
inc
or
add
add
inc
add
add
inc
add
push
mov
sbb
push
push
or
or
sub
adc
and
add
add
or
push
test
mov
mov
ret
and
flds
inc
sub
add
popa
or
mov
add
orb
push
sub
xor
mov
adc
and
mov
andb
add
mov
jl
push
adc
push
xchg
insb
and
add
loope
sub
or
add
mov
and
add
xchg
insb
addb
sub
xchg
dec
and
stos
shlb
pusha
dec
inc
sbb
and
adc
adc
mov
add
adc
or
or
add
les
and
xorl
enter
or
and
xchg
push
test
and
adc
add
adc
push
outsb
push
add
adc
stos
pusha
aam
nop
rclb
loopne
inc
adc
adc
inc
and
push
orb
dec
or
add
inc
push
sub
dec
or
enter
movl
mov
test
inc
and
add
adcb
sbb
add
and
and
add
add
adc
inc
dec
addb
sbb
inc
mov
inc
and
and
mov
mov
test
in
fwait
mov
inc
sub
mov
rclb
pushf
popa
add
add
xor
adc
add
and
cmp
adc
xchg
sbb
add
inc
add
subb
and
xchg
add
or
nop
add
sbb
test
inc
or
adc
addb
add
pop
fs
and
add
mov
orb
add
or
and
and
inc
pop
inc
or
inc
mov
inc
or
or
dec
push
test
sbb
add
or
add
jo
add
adc
lret
or
sbb
xor
adc
push
inc
add
add
mov
mov
test
xchg
add
and
inc
push
add
inc
icebp
shll
add
add
xchg
sbb
or
js
jbe
dec
cmp
loopne
add
or
add
bound
adc
add
and
and
inc
add
add
add
inc
add
add
subl
or
and
push
sbb
add
and
push
das
popa
test
sub
sbbb
add
add
and
add
add
or
add
mov
movsb
add
adc
and
inc
add
loopne
mov
andb
mov
add
inc
and
or
and
cltd
or
out
dec
adc
rolb
add
or
rorb
sub
sbb
sub
inc
jne
mov
and
adc
rolb
or
add
add
dec
inc
add
add
or
xchg
add
roll
pop
mov
sub
or
push
adc
dec
or
xor
xor
int
subb
pop
sbb
adc
mov
add
addb
push
and
inc
push
mov
and
add
mov
add
and
push
adc
add
mov
nop
and
add
inc
sbb
and
add
add
or
and
or
mov
or
orb
inc
sub
xorb
push
push
add
orb
orb
cmp
mov
add
les
sbb
mov
and
or
push
sub
and
inc
inc
or
add
add
or
and
dec
or
mov
adc
pusha
push
inc
add
mov
pusha
fs
mov
test
mov
shlb
pop
nop
mov
adc
dec
mov
dec
mov
add
cmp
inc
or
or
add
pusha
add
and
push
les
subl
orb
push
adcb
mov
adc
pop
jo
adc
sbb
leave
and
add
rolb
add
and
mov
add
roll
dec
add
sub
inc
dec
jb
inc
or
push
add
and
push
inc
add
add
addb
add
add
inc
inc
nop
and
add
dec
add
and
add
dec
sbb
and
adc
or
push
and
sub
push
add
inc
add
or
inc
jo
andl
test
add
add
add
call
and
adc
add
subb
add
or
adc
or
sub
add
or
push
sbb
and
mov
pop
xchg
rolb
adcb
dec
pop
and
add
add
adc
xchg
inc
add
and
add
movsl
xor
and
pop
add
dec
or
shlb
sub
add
push
add
cltd
add
mov
pusha
sub
or
sub
test
mov
dec
push
or
add
adc
mov
or
add
cltd
les
or
adc
movsb
adc
sub
dec
add
add
add
xchg
add
push
adc
push
rolb
enter
adc
or
or
or
shll
adc
rolb
popa
add
mov
cmp
adc
xor
add
addb
or
and
test
nop
dec
pop
add
addb
mov
inc
inc
bound
adc
pop
les
add
sbbb
xchg
addb
or
inc
add
add
mov
or
sahf
or
inc
and
add
add
and
lcall
add
add
and
rolb
ficoml
xor
push
adc
add
xor
add
or
add
mov
xchg
nop
and
xchg
adc
push
sbb
mov
mov
add
test
add
mov
rclb
xor
addl
adc
pusha
adc
add
xor
add
or
or
add
add
adcl
push
and
mov
inc
add
add
push
and
mov
inc
add
add
add
add
and
inc
and
pop
add
or
dec
xchg
mov
xor
push
insb
inc
add
nop
dec
or
inc
mov
push
lds
adcb
addb
addb
push
and
sbbb
addl
rorb
adc
add
add
add
adc
pop
inc
or
or
dec
addb
sub
andb
and
add
inc
inc
add
imul
add
xor
cwtl
rolb
inc
add
adc
or
xchg
inc
loope
add
sbb
sbb
add
and
xor
inc
adc
sub
and
adc
add
mov
leave
sbb
sbb
add
pop
addl
add
push
add
dec
mov
adcb
push
adc
add
add
add
popa
sbb
test
adc
xor
and
dec
adc
push
xchg
adc
nop
add
push
xchg
and
adc
mov
addb
subb
inc
inc
cmp
movsb
or
adc
mov
add
mov
and
or
inc
or
adc
sub
add
add
push
mov
inc
test
sbb
inc
push
test
or
sub
add
and
mov
ret
adc
and
adc
xchg
mov
mov
mov
loopne
add
add
add
push
and
add
xor
roll
add
add
add
adc
or
add
addb
movsb
add
inc
push
test
xchg
mov
dec
xchg
andl
add
adc
adc
addl
loop
and
or
or
add
or
adcb
mov
roll
mov
and
dec
cmpsb
lds
rcll
dec
movsl
inc
leave
sbb
sub
add
add
inc
mov
or
nop
adc
mov
add
pop
cwtl
or
and
mov
inc
add
orl
add
add
adc
and
adc
loop
aam
dec
inc
inc
mov
jns
or
xchg
add
adc
or
sub
add
or
mov
loope
or
add
adc
test
or
adc
and
addb
mov
lds
andl
inc
xor
inc
sbb
or
or
adc
add
addb
sbb
and
les
in
add
inc
bound
add
and
adc
adc
and
nop
addb
xor
pop
repnz
inc
orb
dec
add
xchg
sub
push
add
je
add
add
add
add
pop
xor
adc
add
add
dec
adc
and
xor
test
sbb
add
inc
andb
fmuls
or
xorb
and
add
gs
add
inc
add
sub
test
inc
add
mov
add
or
add
or
xchg
and
xchg
cwtl
mov
or
insb
adc
mov
dec
add
add
sub
adcb
dec
in
adcl
and
add
shlb
sbb
add
sbb
or
adc
ret
and
cmpsb
add
rclb
or
or
xchg
and
inc
orb
xor
sbb
and
add
xchg
mov
add
sub
add
and
mov
add
pusha
add
bound
add
and
and
and
and
test
push
add
adc
add
inc
xchg
add
nop
add
shll
add
adc
enter
or
pusha
inc
add
add
push
orb
cmp
adc
mov
xor
push
ret
sbb
add
and
xchg
add
or
ret
add
add
inc
push
push
add
popl
or
xor
push
popa
and
mov
add
pusha
add
inc
movsb
adc
test
test
sub
add
or
adc
inc
add
xor
mov
adc
test
roll
mov
subb
adc
add
cmp
add
nop
add
or
cmp
add
mov
add
pusha
inc
mov
mov
xor
push
add
cmpsb
or
or
add
dec
push
pop
or
roll
ret
daa
or
add
addb
nop
inc
inc
add
add
and
lods
addl
les
adcl
adc
nop
subb
mov
add
inc
addl
addl
push
pusha
adc
add
push
lock
inc
add
add
add
movsb
mov
and
mov
xchg
pusha
adc
and
and
xchg
add
adc
lea
and
addb
and
add
adc
jno
and
jb
or
add
add
imul
psubusb
or
add
xor
nop
dec
xchg
or
inc
sbb
mov
xor
adc
xlat
or
test
dec
adc
inc
andb
add
and
inc
and
add
add
push
or
leave
add
rolb
inc
and
orl
andb
mov
adcl
add
push
add
andb
inc
or
or
xor
adc
add
add
add
andl
adc
sub
rorb
dec
adc
js
add
inc
sub
and
addl
add
addl
inc
xorl
add
and
push
add
addb
pop
movsl
add
push
add
push
push
mov
sub
mov
xor
mov
push
mov
mov
push
mov
sub
mov
mov
mov
push
mov
test
je
mov
add
mov
cmp
je
mov
add
mov
cmp
jne
mov
mov
xor
cmp
je
mov
cmp
jne
mov
sub
mov
mov
add
cmp
je
mov
push
call
mov
cmp
jne
mov
sub
cmp
jne
or
mov
test
je
mov
cmp
je
mov
mov
and
cmp
jne
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
call
cmp
je
cmp
je
mov
mov
push
call
mov
push
call
mov
test
jne
mov
mov
mov
xor
mov
mov
sub
test
je
cmp
jne
mov
mov
mov
xor
cmp
jne
add
mov
add
mov
cmp
jne
xor
mov
cmp
jne
test
jne
and
mov
or
mov
cmp
je
test
jne
and
mov
mov
mov
sub
mov
cmp
je
add
mov
cmp
jne
cmp
je
cmp
je
cmp
jne
cmp
je
mov
mov
mov
add
test
je
cmp
je
add
mov
mov
mov
xor
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
cmp
jne
xor
mov
cmp
je
mov
sub
mov
cmp
je
mov
mov
add
mov
mov
cmp
je
mov
cmp
je
mov
mov
add
cmp
jne
mov
xor
test
jne
mov
add
cmp
je
xor
test
je
sub
mov
mov
mov
add
mov
test
jne
test
jne
mov
mov
cmp
jne
mov
add
mov
mov
cmp
jne
cmp
je
xor
mov
mov
mov
mov
sub
cmp
je
cmp
jne
sub
mov
add
cmp
jne
mov
mov
sub
test
je
and
cmp
je
add
mov
mov
cmp
je
add
mov
mov
mov
mov
mov
xor
cmp
je
xor
mov
cmp
jne
mov
mov
or
test
jne
mov
mov
cmp
je
xor
mov
cmp
jne
mov
cmp
je
cmp
je
xor
mov
mov
mov
mov
mov
mov
cmp
je
mov
cmp
jne
cmp
jne
cmp
jne
mov
mov
mov
mov
mov
cmp
je
mov
test
je
mov
mov
cmp
je
sub
cmp
jne
add
mov
mov
cmp
jne
xor
mov
cmp
jne
mov
mov
sub
cmp
jne
mov
add
test
jne
or
cmp
jne
mov
xor
mov
cmp
je
xor
mov
cmp
jne
cmp
je
xor
mov
cmp
je
mov
add
mov
cmp
je
cmp
jne
sub
mov
cmp
je
add
mov
mov
cmp
je
mov
mov
and
cmp
je
mov
add
cmp
jne
mov
mov
mov
cmp
jne
cmp
jne
mov
mov
mov
test
je
xor
mov
cmp
jne
xor
mov
mov
test
je
xor
mov
mov
sub
mov
test
jne
mov
mov
mov
mov
mov
mov
mov
sub
cmp
jne
mov
mov
lea
mov
mov
push
mov
or
mov
push
mov
mov
mov
mov
add
mov
call
xor
mov
cmp
jne
and
mov
mov
mov
cmp
jne
mov
mov
mov
mov
cmp
je
mov
shr
mov
xor
test
jne
mov
cmp
jne
and
cmp
je
add
mov
mov
cmp
je
mov
push
push
push
call
mov
mov
mov
sub
mov
mov
mov
sub
mov
mov
sub
mov
pushl
push
pushl
call
mov
addl
mov
xor
cmp
je
mov
mov
add
mov
cmp
jne
mov
mov
mov
xor
cmp
jne
mov
xor
mov
mov
mov
cmp
je
add
mov
mov
mov
mov
call
cmp
jne
sub
cmp
je
cmp
jne
cmp
je
add
cmp
jne
cmp
jne
mov
cmp
je
or
cmp
je
add
mov
mov
cmp
je
mov
xor
mov
mov
mov
mov
sub
cmp
jne
mov
xor
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
cmp
je
mov
add
mov
xor
mov
mov
mov
sub
mov
mov
cmp
je
cmp
je
cmp
jne
test
jne
mov
mov
mov
pop
mov
mov
sub
cmp
jne
xor
mov
mov
cmp
jne
xor
mov
pop
test
je
mov
cmp
je
mov
mov
mov
pop
mov
leave
ret
mov
test
je
mov
add
test
jne
add
cmp
je
xor
mov
mov
cmp
jne
mov
sub
mov
mov
call
test
je
mov
cmp
je
sub
mov
mov
mov
call
mov
mov
push
call
mov
sub
mov
push
call
mov
mov
push
push
push
push
push
push
call
xor
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
cmp
je
mov
mov
mov
mov
call
xor
mov
cmp
je
mov
mov
mov
mov
push
push
call
mov
xor
cmp
jne
xor
cmp
je
and
mov
call
sub
mov
cmp
je
mov
sub
mov
cmp
je
add
mov
mov
cmp
je
mov
cmp
jne
add
cmp
jne
cmp
jne
mov
add
test
jne
mov
cmp
jne
mov
add
mov
cmp
jne
or
mov
mov
push
push
call
sub
mov
mov
mov
push
push
push
push
push
call
xor
mov
mov
push
push
push
push
push
push
call
mov
push
call
mov
test
je
xor
cmp
je
mov
add
mov
cmp
je
mov
push
push
push
call
sub
mov
mov
pop
test
jne
xor
cmp
je
cmp
jne
sub
cmp
jne
mov
cmp
jne
cmp
je
add
mov
mov
test
je
sub
cmp
je
mov
cmp
jne
mov
mov
sub
cmp
je
mov
mov
mov
cmp
je
mov
sub
mov
mov
mov
cmp
jne
mov
xor
mov
cmp
jne
or
mov
mov
mov
mov
pop
mov
pop
or
mov
cmp
je
mov
mov
test
jne
cmp
je
mov
mov
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
xor
mov
push
mov
cmp
jne
xor
test
jne
mov
push
mov
sub
cmp
jne
xor
cmp
je
mov
xor
cmp
je
mov
add
mov
cmp
jne
mov
sub
mov
mov
mov
mov
cmp
je
xor
mov
mov
cmp
jne
xor
mov
cmp
je
add
mov
mov
cmp
je
test
jne
mov
cmp
je
mov
mov
mov
cmp
jne
cmp
je
cmp
jne
mov
cmp
jne
mov
mov
mov
and
cmp
jne
mov
xor
cmp
je
cmp
jne
sub
cmp
je
mov
cmp
jne
mov
test
jne
mov
add
test
jne
mov
add
cmp
je
cmp
jne
mov
test
je
add
mov
mov
cmp
je
mov
mov
cmp
je
mov
mov
mov
mov
xor
mov
mov
push
mov
mov
mov
add
mov
movl
mov
mov
call
sub
cmp
jne
xor
mov
cmp
je
mov
mov
mov
mov
cmp
je
sub
mov
call
sub
test
je
sub
mov
cmp
je
mov
test
je
mov
add
mov
mov
mov
mov
cmp
je
add
mov
mov
cmp
jne
mov
mov
cmp
je
add
cmp
je
test
je
mov
add
cmp
je
test
jne
xor
mov
cmp
jne
mov
xor
cmp
jne
mov
mov
sub
cmp
je
mov
mov
mov
cmp
jne
mov
and
mov
mov
mov
test
jne
cmp
jne
mov
mov
or
cmp
jne
cmp
je
cmp
jne
xor
mov
call
mov
cmp
je
cmp
jne
mov
xor
mov
mov
mov
mov
add
or
mov
mov
test
jne
cmp
jne
mov
mov
mov
mov
mov
mov
mov
push
call
and
mov
mov
mov
or
je
mov
xor
mov
addl
mov
mov
lea
mov
inc
mov
mov
cmp
je
mov
cmp
jne
cmp
je
mov
mov
sub
mov
cmp
jne
mov
mov
cmp
je
mov
mov
add
mov
sub
cmp
je
mov
add
mov
cmp
je
mov
mov
mov
cmp
jne
add
cmp
jne
mov
mov
cmp
je
xor
mov
mov
mov
add
mov
cmp
jne
mov
sub
cmp
jne
sub
cmp
je
cmp
jne
add
mov
mov
mov
mov
mov
xor
cmp
je
and
mov
test
je
mov
add
mov
mov
mov
mov
cmp
je
mov
add
mov
mov
pop
cmp
jne
xor
mov
cmp
je
mov
mov
xor
cmp
je
add
mov
cmp
jne
or
mov
pop
mov
cmp
je
sub
cmp
je
mov
mov
and
cmp
jne
cmp
je
xor
test
jne
mov
cmp
je
mov
cmp
je
cmp
je
mov
mov
mov
cmp
jne
cmp
jne
cmp
je
cmp
jne
mov
xor
cmp
je
sub
mov
test
jne
mov
mov
sub
mov
pop
sub
cmp
jne
mov
add
mov
test
je
cmp
je
cmp
jne
cmp
je
cmp
jne
test
jne
cmp
jne
mov
mov
sub
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
mov
push
mov
mov
add
cmp
jne
add
mov
mov
mov
push
mov
and
mov
cmp
je
mov
mov
mov
add
cmp
je
xor
mov
mov
cmp
je
xor
cmp
jne
add
cmp
jne
cmp
je
mov
mov
mov
rdtsc
cmp
je
sub
mov
mov
mov
mov
mov
mov
mov
add
mov
cmp
je
mov
cmp
je
sub
mov
mov
cmp
jne
mov
sub
mov
mov
mov
test
je
mov
mov
mov
test
jne
mov
mov
xor
cmp
je
sub
mov
cmp
je
mov
add
mov
cmp
je
mov
sub
cmp
jne
mov
add
mov
test
jne
sub
mov
mov
mov
cmp
je
mov
cmp
jne
mov
mov
add
cmp
je
or
mov
mov
cmp
jne
test
jne
mov
sub
cmp
je
mov
sub
mov
test
je
mov
mov
cmp
jne
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
sub
mov
mov
mov
mov
rdtsc
mov
mov
mov
mov
sub
mov
xor
mov
mov
mov
sub
mov
pop
and
mov
pop
xor
mov
mov
mov
test
je
cmp
jne
cmp
je
mov
mov
xor
mov
mov
pop
mov
cmp
jne
sub
mov
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
push
mov
mov
push
sub
mov
mov
mov
push
sub
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
je
mov
add
mov
decl
mov
and
cmp
jne
mov
sub
mov
sub
mov
xor
cmp
jne
mov
mov
sub
cmp
je
mov
cmp
je
mov
mov
mov
mov
cmp
jne
sub
mov
mov
cmp
je
mov
mov
mov
mov
mov
rorl
cmp
je
sub
cmp
jne
xor
mov
add
cmp
jne
mov
mov
sub
sub
mov
mov
mov
mov
jmp
mov
mov
mov
sub
mov
mov
mov
mov
pop
and
mov
cmp
je
mov
add
mov
mov
mov
cmp
jne
mov
add
mov
test
je
cmp
jne
xor
mov
cmp
jne
and
cmp
je
mov
sub
mov
mov
mov
cmp
jne
cmp
je
mov
pop
mov
add
cmp
jne
add
cmp
je
cmp
je
sub
mov
cmp
jne
sub
mov
mov
cmp
je
or
mov
mov
cmp
je
mov
cmp
jne
xor
mov
cmp
jne
mov
mov
pop
and
mov
cmp
je
mov
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
mov
mov
mov
cmpl
je
mov
mov
add
mov
mov
add
mov
jmp
mov
push
lea
push
call
lea
push
call
mov
mov
push
lea
push
call
lea
push
mov
push
call
mov
movl
mov
sub
mov
movl
mov
add
mov
movl
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
mov
cmpl
je
movl
cmpl
jge
cmpl
jle
jmp
jmp
mov
mov
mov
movl
jmp
mov
add
mov
mov
mov
cmp
jae
mov
add
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
cmpl
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
je
mov
movzwl
mov
movzwl
cmp
jle
mov
mov
mov
cmpl
je
mov
test
je
mov
mov
mov
movsbl
cmp
jl
movsbl
cmp
jg
movsbl
add
mov
mov
mov
mov
movsbl
cmp
jl
movsbl
cmp
jg
movsbl
add
mov
movsbl
movsbl
cmp
je
jmp
movsbl
test
jne
mov
mov
jmp
mov
add
mov
mov
add
mov
jmp
mov
mov
mov
mov
cmp
jne
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
cmpl
je
cmpl
je
cmpl
jbe
mov
movsbl
test
je
mov
mov
mov
mov
add
mov
mov
cmpl
je
mov
cmpl
je
mov
mov
mov
cmp
jae
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
cmpl
ja
mov
mov
cmp
jb
mov
mov
mov
add
cmp
jae
mov
mov
sub
mov
mov
add
mov
jmp
jmp
movl
jmp
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
add
mov
mov
movsbl
mov
movsbl
cmp
jne
mov
movsbl
test
jne
mov
mov
movzwl
mov
mov
add
mov
jmp
mov
add
mov
mov
add
mov
jmp
jmp
xor
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
cmpl
je
cmpl
je
mov
mov
mov
mov
mov
test
je
mov
movsbl
mov
movsbl
xor
mov
mov
mov
movsbl
sub
mov
mov
mov
movsbl
mov
movsbl
lea
mov
mov
mov
movsbl
test
jne
jmp
mov
add
mov
mov
add
mov
jmp
mov
sub
jmp
xor
mov
pop
ret
add
lods
into
insb
scas
jno
and
shlb
imul
mov
jb
imul
ret
jmp
or
jg
ret
fistpll
outsl
and
leave
in
inc
outsb
rorl
outsb
mov
mov
mov
xchg
xchg
cmpsb
mov
addl
push
and
push
repz
xor
stos
fsts
fildl
sbb
pop
rorb
inc
or
mov
sub
mov
mov
and
adc
dec
test
cli
dec
cmp
addr16
add
pop
inc
jne
jbe
jle
call
add
cmp
pop
mov
push
dec
mov
pushf
arpl
xor
jle
leave
ja
adc
mov
nop
lret
adc
xchg
dec
jns
push
imul
bound
test
ror
xor
das
cwtl
sub
push
xchg
aam
cld
mov
movsl
scas
xchg
mov
jle
cmc
jp
mov
sub
ljmp
cmovo
into
adc
les
and
dec
jge
jp
aad
scas
sbb
ljmp
adc
pusha
pusha
xchg
andb
dec
mov
xchg
inc
jns
scas
loopne
stc
and
mov
push
xchg
mov
inc
lds
popf
or
add
push
jne
sbb
xor
add
push
push
adc
aad
jne
jl
adc
sahf
mov
insl
movsb
fcmovbe
rcrb
cmc
cmp
dec
and
lea
push
ror
filds
jne
inc
xchg
jns
loop
addr16
jecxz
lods
sti
rorb
pop
pop
jno
sahf
cltd
push
aaa
push
sub
and
sbb
push
jnp
jmp
pop
jmp
or
test
in
dec
xchg
push
out
pop
mov
movsl
leave
sub
or
push
daa
jb
xlat
push
jle
test
jns
ror
repnz
int
ror
rclb
repnz
shlb
je
jo
cmpsl
gs
push
mov
mov
xchg
dec
addr16
bound
push
xor
jns
xchg
test
addb
xorb
push
or
sbb
jb
pop
in
jp
pop
mov
dec
xchg
dec
nop
jmp
dec
xor
fs
or
pop
out
shrb
xlat
and
jp
add
mov
hlt
push
inc
fwait
sub
lahf
xchg
add
pop
mov
mov
lahf
push
lret
jp
mov
enter
jne
push
daa
popf
or
or
mov
cmc
jge
shl
into
sbb
adc
and
mov
cmpsl
ljmp
orl
xchg
add
repz
sbb
into
and
and
test
mov
and
and
sahf
jo
aam
and
in
mov
fldt
dec
dec
xor
push
or
cmp
or
inc
hlt
adc
cmc
rcrb
dec
mov
lcall
stos
inc
xchg
or
mov
js
mov
ficoml
cld
mov
xlat
xor
add
push
lock
into
xlat
sahf
sub
push
clc
pop
les
lahf
mov
hlt
xor
mov
test
inc
and
ljmp
icebp
inc
xchg
addl
sub
and
add
mov
fisubrs
out
add
add
in
data16
pop
adc
jne
mov
sub
mov
dec
inc
iret
icebp
and
fldenv
icebp
or
popa
inc
loope
push
in
sbb
fwait
out
and
sub
jns
mov
int3
hlt
mov
clc
push
lds
dec
aas
xchg
mov
out
jne
pop
cmp
or
test
scas
xor
incl
lock
cli
outsb
or
and
add
inc
jne
mov
stos
add
add
cmpsl
pop
je
test
sbb
jecxz
cli
cmc
xlat
xor
jne
movsb
out
and
addr16
jae
and
jl
das
inc
scas
adc
cmp
jb
mov
insl
lods
into
jp
shl
push
push
cmp
test
inc
jne
in
repz
test
pop
loopne
int
aaa
jmp
inc
movsl
into
rcl
fcoml
add
out
inc
jl
gs
js
xchg
mov
inc
fidivl
jmp
insb
test
xorb
jb
sti
xchg
and
rorb
mov
bound
push
xor
into
mov
mov
inc
icebp
cwtl
or
inc
jae
add
sbb
adc
pop
aad
cmpsl
jl
push
jmp
jb
out
adc
dec
jne
cwtl
inc
mul
pop
subb
jno
xchg
adcb
pop
jge
push
sbb
mov
jo
cmp
icebp
addb
js
or
jns
or
popf
sahf
mov
xchg
cmp
lahf
jne
pop
pushf
mov
into
push
loopne
arpl
aad
mov
xor
xchg
lcall
inc
scas
test
jp
adc
hlt
inc
ss
sbb
mov
sub
adc
pop
cltd
mov
add
jne
mov
shlb
xchg
sbb
jl
mov
mov
subl
cmpsl
adc
iret
xchg
ss
jge
cmpsb
leave
rcrl
call
jno
cmp
inc
mov
out
push
dec
pusha
jbe
sahf
es
jg
dec
test
pop
stos
stos
xor
in
cmc
jg
pop
fisubrl
mov
outsl
jo
jne
sub
push
or
lods
fcom
inc
xchg
or
sti
int3
xchg
jne
dec
add
or
inc
and
lahf
mov
hlt
dec
incl
mov
addr16
pop
adc
insb
loop
lahf
adc
add
sbb
or
jbe
xor
inc
jno
test
mov
push
xchg
cmp
out
jmpw
push
ss
mov
out
jne
mov
or
test
gs
or
sbb
adc
cltd
wbinvd
mov
aaa
mov
les
enter
pushf
push
into
aaa
pop
cmp
fcoml
add
xchg
in
je
outsb
jge
iret
mov
js
mov
push
cld
int3
lret
push
stos
add
inc
ss
mov
add
popf
nop
add
push
sti
lods
and
into
jecxz
xor
xchg
mov
dec
test
dec
ds
add
pushf
xlat
xchg
push
iret
dec
cltd
add
icebp
pop
jge
pop
add
jns
movsl
fnsetpm(287
mov
out
stos
iret
add
xchg
test
out
pushf
xchg
push
lret
bound
icebp
vaddpd
outsb
lock
scas
push
rolb
lahf
mov
cmc
xchg
push
xlat
push
jmp
xor
add
jp
pop
or
pop
fdivrp
hlt
mov
sub
rorb
cmp
jo
mov
mov
std
ja
in
xchg
aam
lret
pop
mov
mov
and
aad
jns
xor
push
dec
dec
add
stos
xchg
push
movsb
and
jae
sub
fimuls
pusha
jb
push
mov
cmpsb
jns
jl
push
decl
subb
ret
enter
jecxz
leave
pop
mov
out
imul
imul
andb
dec
loope
fcmovbe
xor
sbbb
outsl
mov
push
mov
inc
imul
in
insl
and
jne
mov
push
mov
loope
xchg
mov
pop
data16
ljmp
and
inc
imulb
cltd
in
mov
outsb
outsl
ja
pusha
mov
mov
pop
out
adcb
cld
xor
iret
mov
imul
pop
add
xchg
sbb
scas
xor
mov
dec
push
ret
xchg
insb
adc
cmp
test
sbb
enter
sti
dec
outsl
dec
cmp
cmpsb
into
fnstsw
jno
mov
cs
inc
xchg
scas
dec
stos
mov
testl
adc
add
sbb
sti
mov
mov
jle
divb
sahf
pop
or
andb
call
pop
xchg
cmc
jns
xchg
orb
push
cld
pop
imul
xchg
and
xor
lock
into
mov
dec
add
sbb
es
lahf
push
sbb
cltd
into
lods
pop
xchg
andb
mov
jns
js
add
add
or
jne
je
in
push
pop
mov
jns
push
out
add
cmp
outsb
inc
scas
into
leave
xchg
daa
adc
mov
fdivrs
test
mov
push
imul
fnstsw
pop
je
push
pop
and
daa
push
or
mov
jne
pop
test
push
js
xor
repnz
mov
rol
jg
dec
rcrb
popf
pop
sarb
jne
push
aas
sarb
das
sti
out
nop
xchg
cmp
add
cmc
cmc
push
insb
cmpsl
fiadds
stos
test
lcall
dec
sbb
inc
cmpsb
dec
adc
dec
ret
mov
scas
fisubrs
cmc
lea
mov
mov
lahf
lahf
add
push
or
ljmp
pop
push
adc
add
adc
sub
outsl
dec
shlb
rorb
push
add
dec
jp
xchg
push
mov
dec
mov
xchg
dec
iret
in
rcrb
popa
jp
push
call
dec
test
sub
mov
cmpsb
into
ljmp
cmp
in
cmpsl
or
pop
jo
inc
call
push
cmp
jmp
data16
scas
sbb
jle
enter
mov
adc
push
imul
jp
pop
jne
xor
into
fwait
std
jp
and
fisubs
mov
xor
shrl
or
and
stos
bound
rol
cmp
sti
sub
and
aad
cmc
das
sarl
add
jne
popa
mov
jne
sub
pushf
lds
add
mov
lcall
dec
push
movsb
and
sbb
or
xlat
ret
ret
and
and
cmp
push
sar
popa
je
rcll
andl
add
daa
cmpb
and
nop
push
or
xchg
dec
mov
lea
lods
jecxz
and
pop
cmpsl
mov
arpl
pop
roll
int3
ret
roll
fsubrs
outsb
js
inc
fs
movq
jne
xchg
pop
cmp
or
shlb
nop
mov
mov
ja
push
and
sbb
fildl
out
outsb
addb
addr16
cltd
xchg
add
out
aaa
repnz
mov
mov
fs
pop
es
jge
loopne
loop
cld
fwait
test
or
out
mov
pand
adc
lcall
xchg
insl
xchg
push
add
dec
repnz
imull
sub
addl
notb
sbb
test
mov
int
js
pop
adc
imul
fisttps
adc
lret
cmp
cwtl
stos
dec
test
dec
aaa
negb
mov
into
pop
inc
push
and
mov
jno
mov
sub
push
ror
xorl
mov
leave
cltd
mov
xor
sub
mov
mov
lods
hlt
cmc
and
and
ss
imul
fsts
xchg
scas
shlb
xchg
das
cld
jmp
dec
or
shll
dec
in
fwait
mov
jbe
popf
andb
mov
pusha
add
aas
sub
inc
push
add
xor
aas
outsl
into
jns
sbb
pop
and
xor
movsl
xchg
cmp
add
ror
pop
mov
je
sub
pop
push
aad
dec
and
mov
outsb
inc
xchg
mov
outsb
dec
xchg
ret
fstpl
aas
jne
xchg
sarl
or
mov
and
jno
dec
mov
hlt
scas
ja
scas
cmpsl
dec
and
adc
dec
popa
and
insl
cmp
add
andl
cltd
popf
cmp
push
cmc
stos
jae,pn
incb
imul
into
push
insb
mov
or
cmp
pop
clc
icebp
dec
gs
add
inc
in
lods
cwtl
jne
jo
ja
shr
cli
sub
adc
sub
addr16
adc
lcall
gs
sbb
xchg
ret
jmp
shll
sub
push
jns
jge
push
xchg
add
movsl
inc
out
jge
mov
call
inc
mov
push
xor
fwait
or
negb
std
lea
or
int
jecxz
xchg
pusha
lods
and
in
inc
and
jle
pushf
aaa
fidivrs
jne
imul
jae
bound
test
cwtl
dec
jb
pop
jns
int
push
std
dec
sub
xchg
out
sub
mov
stos
mov
jnp
xchg
and
sub
gs
fmulp
pop
sbb
sub
adc
lock
call
xchg
int3
mov
mov
fsubrp
mov
js
aad
cmc
out
pop
loop
mov
clc
pop
mov
mov
dec
add
into
add
cmpsb
xor
fst
pop
cwtl
dec
jns
nop
ror
mov
call
outsl
xchg
add
lcall
sbbb
ds
xchg
mov
movsb
mov
flds
icebp
mov
mov
into
pop
push
jge
mov
mov
sbb
xchg
mov
jne
jno
push
outsl
stc
rcl
pushf
push
outsb
jmp
add
outsb
jne
sub
jbe
jbe
in
imul
mov
xor
push
mov
ljmp
push
hlt
sahf
mov
repz
outsb
mov
cmpsl
add
add
fldenv
and
lods
js
fiadds
mov
sub
xchg
lret
into
rcr
repnz
aad
pop
aad
seto
jns
sub
imul
and
aaa
sub
xchg
cmp
cld
mov
inc
xor
jp
mov
pop
or
test
leave
push
ljmp
sbb
or
scas
push
xchg
nop
inc
stos
into
clc
ss
in
subb
sub
or
andl
add
dec
adc
in
add
sbb
xor
and
and
stos
mov
or
sbbl
push
int
pop
shufps
push
push
scas
clc
bound
xor
lcall
adc
mov
into
aas
and
in
inc
test
xchg
into
imul
dec
cmp
repz
sbb
stc
jnp
nop
sub
jg
push
sub
into
shll
sarb
das
aaa
pop
add
mov
push
mov
sub
repz
xor
pop
ljmp
push
sbb
adc
leave
inc
dec
fldcw
xchg
std
sbb
imull
mov
and
xchg
push
divl
arpl
ret
popa
mov
es
and
in
mov
push
xor
addl
mov
cmpsb
cmovge
stc
xchg
xchg
jmp
test
addb
loopne
mov
out
add
and
mov
pushf
cmp
push
add
in
add
movsl
push
sti
rol
push
xchg
imul
add
mov
ss
pop
repnz
xchg
cltd
xchg
mov
mov
push
dec
xchg
fists
jl
bound
orb
roll
popf
mov
push
xchg
popa
jmp
lcall
fiaddl
loope
sahf
adc
dec
pop
adc
mov
jle
sub
movsl
mov
mov
adc
inc
div
pop
mov
mov
not
lahf
rcll
leave
or
fmuls
mov
inc
ljmp
cld
mov
sti
push
add
rcrl
hlt
dec
jg
push
push
test
and
cmpb
mov
fsubl
jmp
mov
pop
mov
lea
and
sub
subb
push
cmp
rolb
mov
dec
xchg
xlat
inc
adc
pop
movsl
adc
lahf
dec
fmulp
mov
loopne
push
popa
pop
aad
jne
jecxz
mov
add
sarl
push
jge
mov
int
jge
inc
xor
arpl
shlb
inc
lods
or
push
push
jl
jne
gs
xchg
push
es
adc
mov
add
sbbb
cli
dec
mov
pushf
rcr
cli
rcrl
jg
data16
cmp
addb
gs
sti
fcompl
cmp
sub
cmp
or
addr16
inc
or
mov
je
adc
sahf
add
mov
xchg
in
mov
pop
mov
push
push
movsl
fnsave
insb
xchg
dec
mov
sbbb
subb
jne
mov
add
sub
icebp
mov
sub
clc
and
rcrb
adc
or
rorl
push
cmpsb
loope
and
mov
jl
dec
icebp
push
mov
icebp
or
loop
xchg
mov
push
cwtl
xor
mov
addb
push
push
iret
adc
jo
into
pop
xchg
push
popa
rolb
mov
sarb
xchg
sahf
aas
cltd
mov
shl
cmp
ret
add
mov
push
cld
adc
xor
or
or
jae
add
arpl
lahf
sbb
loope
es
loopne
cmp
sti
in
push
xor
mov
ret
xor
dec
std
jbe
les
xchg
leave
pop
idivb
push
loopne
mov
sbb
inc
cmp
push
in
jne
xlat
out
mov
xchg
fidivrs
imul
sbb
in
ss
data16
aad
js
or
jno
fldt
aad
xchg
dec
clc
push
neg
dec
arpl
mov
jne
sahf
sub
mov
addr16
ljmp
sub
movsb
xor
in
sub
add
push
cltd
mov
hlt
sbb
loope
adc
js
or
rcrb
outsl
aad
imul
arpl
lods
push
dec
lods
jb
sub
imul
es
loopne
dec
por
pop
and
stos
and
cli
aad
or
inc
xchg
add
lret
daa
in
lahf
out
jecxz
cmc
and
mov
jne
aad
cld
imul
sbb
jcxz
add
xchg
jbe
test
adc
push
mov
mov
inc
outsb
jne
popa
mov
scas
xor
out
add
lahf
or
push
push
xchg
adc
adc
inc
jno
imul
inc
mov
jmp
inc
mov
pop
xchg
bound
cmc
out
push
xchg
sbb
mov
cmp
or
and
cmpsb
inc
loopne
into
mov
sbb
jbe
cli
or
loope
mov
pop
mov
xchg
lock
inc
cmc
out
push
mov
jbe
xor
jge
and
repz
push
pop
and
jmp
repnz
adc
adcl
jnp
notl
sti
imul
jmpw
lock
test
inc
dec
cld
and
int3
roll
std
mov
add
jne
loop
lcall
mov
fs
dec
adc
dec
arpl
push
and
push
adc
mov
lcall
in
xchg
mov
dec
into
xor
bnd
and
xchg
add
scas
data16
xchg
pop
mov
cwtl
cmc
je
jl
mov
cmpsl
sub
adc
jp
les
out
dec
mov
andb
jge
pushf
lret
lea
adc
int3
mov
lods
xor
subb
subb
dec
xchg
push
jecxz
dec
cwtl
mov
mov
add
ja
loop
jbe
push
icebp
pusha
jmp
pop
and
imul
push
and
dec
or
imul
or
jne
dec
push
sbb
mov
add
fstl
cmc
add
in
jl
jg
stos
sub
ja
je
scas
testb
rorl
ljmp
mov
cltd
jg
sbbb
lret
movsl
stos
pop
aaa
rolb
cmpsl
and
insb
dec
icebp
cwtl
mov
sub
fstl
inc
loop
sar
cmp
and
imul
aam
mov
add
in
adc
stos
aaa
xor
jne
fdivs
pop
cmc
sub
data16
xchg
sbb
cmpsb
cmp
out
xchg
test
pop
fs
mov
and
fadds
arpl
inc
push
dec
ret
jb
mov
bound
xchg
xchg
or
popf
fdivl
push
jbe
lahf
cmp
dec
aad
fsubrs
outsl
xchg
test
and
ljmp
jmp
icebp
jecxz,pn
push
in
add
mov
negb
jl
cmp
rcrb
push
popf
xor
add
push
dec
iret
inc
xchg
mov
out
dec
lret
xor
mov
pop
or
ds
sti
outsb
xchg
adc
and
sub
dec
xchg
xor
popa
cmc
adc
adc
cmp
scas
and
imul
dec
test
andb
push
fists
or
dec
ja
pop
push
fwait
pop
test
mov
mov
push
into
inc
arpl
push
mov
add
stos
sbb
dec
test
jb
add
and
lods
inc
sub
das
dec
test
movsb
in
and
xchg
push
imull
stos
jle
test
xchg
xor
test
sahf
fidivrs
push
add
and
sub
jbe
arpl
mov
xchg
jae
inc
lock
add
sub
push
aaa
cmpsb
into
dec
push
test
andl
testl
aam
les
lcall
fs
hlt
int
xlat
repnz
divl
sub
aam
stc
pshufw
ret
xlat
test
addr16
add
sbb
popa
pop
push
mov
mov
cmp
cmc
xchg
or
std
mov
or
stc
out
mov
add
xchg
jle
mov
push
loopne
push
popl
pop
pop
test
dec
xor
scas
mov
jbe
mov
andb
lods
loop
fiaddl
pop
xchg
xchg
cmp
clc
or
imul
dec
push
mov
imul
cmp
lock
xchg
or
daa
movsl
sbb
jmp
shrl
add
loop
sub
push
in
xchg
loope
mov
jo
xor
mov
mov
jns
xchg
lret
dec
jne
sbb
xor
xor
mov
cmc
cli
push
mov
lret
sub
dec
sarl
jne
lret
fdivr
push
mov
lods
ja
stos
jnp
add
push
mov
and
xor
cmp
js
inc
cmc
cmp
mov
dec
cmpsb
into
lock
shll
inc
subl
xchg
fsubr
xchg
movsb
aaa
inc
mov
push
leave
out
add
fs
into
shlb
xchg
lods
into
in
imul
lret
lods
xor
cmp
rep
jecxz
scas
add
adc
iret
xor
imul
aas
xchg
dec
mov
cltd
addb
cmp
icebp
pop
sub
mov
mov
xor
xlat
arpl
push
std
pushf
rorl
and
jne
or
mov
mov
add
push
in
cli
je
sub
jmp
xor
es
push
shlb
mov
mov
jbe
and
xchg
jo
jno
fdivl
inc
arpl
fwait
cwtl
mov
push
push
sti
add
loope
cwtl
or
mov
insl
out
pop
mov
loopne
add
rclb
scas
test
sbb
es
jno
je,pn
popa
xchg
lods
adc
push
arpl
jle
aas
fsubrl
push
shlb
lock
fidivs
lods
ror
dec
add
imul
mov
push
mov
lods
enter
mov
mov
dec
mov
add
dec
and
stos
es
push
dec
and
cmp
xchg
loop
dec
aam
test
sub
cli
xchg
gs
add
xchg
and
dec
outsl
in
mov
inc
das
imul
cmp
and
pop
cmp
jae,pt
jbe
sbb
insl
test
xchg
ss
nop
add
and
ja
scas
fimull
or
imul
mov
js
jns
jbe
dec
jae
scas
and
inc
fwait
movsb
mov
jge
sbb
sub
xor
call
rol
xchg
xorb
xor
inc
add
loope
ds
aad
out
jo
stos
les
sti
sahf
push
jne
pop
jmp
mov
mov
out
dec
shlb
into
sbb
insl
gs
es
ja
pop
mov
adc
cmp
and
aad
dec
outsl
and
xchg
rcrb
lcall
mov
clc
sbbb
mov
sahf
dec
cs
ret
sbb
mov
xchg
push
mulb
js
cpuid
out
mov
add
adc
mov
jb
lea
insl
jo
gs
add
lahf
dec
cld
xchg
jmp
inc
lret
out
ds
stc
sub
dec
mov
xchg
into
jno
cwtl
inc
and
mov
jmp
jo
xchg
pop
sub
dec
adc
push
mov
cmc
addr16
shlb
cmpsl
jg,pt
inc
push
inc
or
jns
cltd
ret
scas
out
adc
repnz
das
jno
sbb
jno
jo
add
xchg
arpl
lcall
popa
mov
inc
mov
insl
ret
lock
scas
arpl
pop
mov
pop
adc
mov
addr16
scas
loope
mov
mov
clc
add
xchg
sbbb
dec
imul
xchg
sbbb
add
jb
add
shl
push
imulb
addb
mov
add
jecxz
out
jae
js
add
das
lods
lret
addl
pop
aas
xor
cli
idiv
dec
sbb
inc
adc
scas
orl
cltd
das
xor
jne
xchg
cmp
mulb
jb
sbb
call
mull
adc
xor
sbb
push
mov
jne
les
cltd
mov
test
outsl
xchg
inc
jecxz
stos
loopne
int3
fs
dec
out
cmpsb
sar
xor
mov
mov
orl
aas
scas
push
xchg
cmc
dec
dec
mov
add
sbbb
inc
and
jno
ret
in
sbb
int3
outsb
cltd
cld
fwait
adc
sub
cltd
add
mov
movsl
cmp
and
mov
int3
dec
inc
aaa
out
and
das
fists
push
dec
into
push
subb
mov
ss
adc
xchg
imul
xchg
dec
fldln2
hlt
push
in
cwtl
ljmp
or
and
imulb
and
jge
lods
xchg
and
lret
push
mov
jge
fmull
fs
pop
jge
push
mov
add
scas
mov
jl
sub
inc
in
adc
movsb
jmp
movsl
scas
outsl
mov
dec
inc
cmp
mov
stos
addr16
cltd
jne
sub
mov
jno
ret
aad
push
push
cmp
sbb
sub
and
aas
cmc
xor
imul
jg
sbb
jle
sbb
cld
adc
cwtl
into
mov
mov
movsb
imul
je
iret
fs
enter
push
aad
mov
ljmp
add
cmp
push
cli
add
add
mov
mov
dec
fdivrl
sar
pop
push
push
or
mov
into
ds
jne
and
xorb
into
ret
enter
mul
cmp
jo
jne
push
sbb
sbb
jb
mov
clc
jo
mov
addr16
and
xchg
sahf
xorb
dec
sub
ds
outsl
mov
mov
repnz
pop
iret
into
xchg
aam
xchg
in
cmp
daa
xor
insl
popf
shrb
lret
enter
rcrl
and
icebp
es
js
push
das
mov
cld
push
mov
adc
sbb
popa
dec
xchg
pop
push
mov
cmc
mov
adc
shrl
ret
fldl
les
adc
dec
add
sbb
mov
sti
mov
in
mov
push
repnz
fdivp
cmc
arpl
xchg
sbb
jb
lods
xor
mov
mov
dec
mov
push
test
dec
insb
cmpsb
mov
in
subl
push
jge
rorl
and
insl
dec
sub
mov
adc
insl
mov
dec
das
je
pop
jne
jecxz
mov
lea
jns
xor
jne
mov
xchg
in
inc
xchg
les
fnstcw
shll
dec
mov
insb
movsb
orb
cmp
adcb
in
sbbb
repz
adc
xchg
sbb
mov
mov
cmp
mov
jbe
jl
cwtl
out
push
push
cld
adc
inc
mov
gs
push
push
jbe
inc
repz
in
xchg
add
arpl
dec
rol
mov
add
fcoms
mov
shll
sbb
divl
lods
push
dec
jmp
test
imul
ret
cmpsb
in
dec
jo
and
inc
xchg
out
lock
mov
pop
adc
hlt
or
into
push
xchg
clc
or
ret
inc
push
push
add
loope
popa
sbb
adc
cli
into
enter
lret
mov
adc
add
cmpb
xchg
into
adc
mov
mov
sub
repz
repz
or
call
or
pop
lcall
mov
test
or
cmpsb
jle
in
xchg
push
js
ja
call
dec
or
pop
test
and
xchg
mov
lahf
cmc
xor
fwait
std
out
mov
add
jecxz
loope
ffreep
xor
xor
cmp
notb
iret
es
pop
popa
sti
add
xchg
scas
testb
mov
sahf
jge
call
movsl
add
lret
js
lcall
fildl
loopne
mov
pop
popl
inc
mov
or
outsb
xchg
dec
ds
aaa
jne
mov
rcrl
sbb
hlt
inc
xchg
fs
rcll
xchg
insb
xor
mov
push
jne
sbb
jp
mov
int3
orb
xchg
mov
mov
mov
mov
pusha
scas
scas
push
shrl
xchg
daa
cmp
ja
adc
lock
jnp
cltd
dec
jae
fdiv
je
sub
loope
scas
vpcmpgtw
and
or
adc
gs
call
xor
or
inc
pop
mov
cmp
in
mov
mov
aaa
push
mov
adc
imul
jl
jp
xchg
cmpb
sbb
mov
les
and
adc
fwait
bnd
sbb
test
and
pop
dec
and
fwait
jne
fadd
clc
mov
cmp
fcompl
sbb
mov
mov
cmc
nop
dec
pop
xchg
lods
mov
call
xor
xchg
repnz
jae
cmp
outsb
add
cmp
sub
jno
mov
int
repnz
jne
les
sbb
mov
or
cmpsb
imul
addr16
mov
dec
out
int
mov
and
movsl
jne
xor
jmp
sti
pop
pop
inc
insl
lcall
mov
insl
adc
push
mov
mov
xchg
das
sbb
fistpll
mov
cmp
iret
mov
shlb
sbb
xchg
lahf
int
arpl
dec
cmp
mov
xor
or
ds
xchg
mov
mov
push
in
and
pop
cmpsb
loop
xor
jl
push
jo
xchg
mov
mov
out
sub
fcmovnu
sbb
ljmp
xchg
add
fnop
ja
xchg
sbb
jecxz
xchg
stc
repz
xor
and
loope
push
in
xchg
lock
sub
into
mov
imul
or
stos
mov
cmc
inc
fucomp
rcrb
mov
std
movsb
hlt
cwtl
stos
roll
jae
es
jmp
test
push
les
scas
scas
and
fwait
add
mov
mov
cmp
sub
mov
xor
pop
popl
add
subb
aam
sbb
xor
js
jp
movsl
std
enter
pusha
dec
movsb
add
mull
sub
sarl
sbb
roll
lahf
imul
lret
jp
fwait
jecxz
ficompl
sahf
push
jge
mull
cld
ljmp
adc
mov
mov
adc
adc
adc
fldenv
adc
ret
xorb
mov
jae
mov
xorb
fcompl
fucomip
into
aaa
pusha
leave
cmp
jns
addr16
test
add
dec
jecxz
cltd
outsl
mov
add
add
jmp
jg
and
sbb
faddp
outsl
test
pop
inc
sub
jle
sbb
sbbb
mov
rorl
sbb
xor
mov
popa
mov
adcl
push
scas
dec
cli
lret
jg
push
push
cmp
aas
repnz
dec
ss
push
xlat
repz
scas
push
ret
sub
jo,pt
xor
mov
cmc
stos
xor
mov
pusha
dec
sub
xorb
add
push
pop
xchg
dec
mov
lret
cs
jnp
movsb
sub
mov
mov
pop
jecxz
dec
jne
sarl
lods
loopne
cmovp
xchg
mov
adc
jnp
out
mov
mov
pop
pop
cmc
push
ja
cmpb
fisubs
shrl
xchg
movsl
cmp
jno
inc
mov
roll
insb
test
sbbl
mov
fsubr
add
fimuls
and
cmp
sarl
aad
fcompl
dec
stos
jle
pop
cmpsb
mov
jb
in
add
test
inc
sub
jg
cs
lea
pop
jnp
sbb
mov
adc
or
mov
xchg
imul
mov
and
jnp
gs
into
frstor
cmc
mov
dec
dec
jecxz
xor
lret
and
cltd
ljmp
mov
pop
cmp
pop
mov
adc
clc
inc
jne
jns
mov
adc
movsl
jge
cltd
imulb
cs
hlt
enter
outsb
mov
mov
cmp
es
jp
sbb
add
push
dec
mov
jl
and
add
xchg
xor
dec
dec
out
mov
inc
and
and
xchg
mov
mov
cli
mov
mov
into
rcrl
mov
and
leave
ss
sahf
test
test
sbb
movl
sahf
cmp
sarb
sarb
mov
mov
daa
mov
scas
loop
xor
dec
cmp
ficoml
push
negl
mov
sarl
imul
jae
or
into
sbb
loop
jge
rcll
dec
dec
orl
jb
and
in
addb
pop
mov
jmp
push
inc
sub
movsb
mov
jnp
mov
mov
out
sbb
jge
mull
lds
push
sbb
sub
fistps
xor
in
push
push
add
xlat
fwait
dec
add
addb
and
mov
mov
lcall
sbb
and
xchg
std
pop
hlt
xor
jne
or
gs
adc
adc
pop
xor
dec
dec
jle
and
mov
adc
jne
bound
add
cmp
cwtl
and
push
push
cmp
inc
or
or
mov
popa
jecxz
sub
shrb
aaa
iret
outsl
stos
dec
aad
dec
enter
push
jle
repnz
add
add
lods
fnstenv
ret
mov
add
inc
mov
pop
sub
add
mov
jl
into
ljmp
inc
and
pusha
int3
nop
data16
jl
incl
sbb
jge
loope
adc
xchg
pop
mov
mov
in
xchg
nop
insb
cwtl
mov
ljmp
fdivrs
es
inc
jne
cmc
mov
dec
clc
push
jo
ret
or
sub
cmp
adc
inc
adc
mov
mov
mov
sub
and
lcall
cmc
push
cmc
sbb
fldcw
sub
inc
sbb
rorb
xchg
test
subb
fwait
xor
xchg
dec
jae
inc
and
push
pop
popf
out
jge
mov
outsb
jp
push
xor
or
pop
pop
mov
jns
lods
pop
and
xor
jno
push
arpl
movsl
fimull
cmc
pop
hlt
and
mov
mov
sub
add
mov
sbb
dec
insl
fstps
ret
ljmp
cwtl
in
pop
mov
push
faddl
jmp
ljmp
mov
nop
clc
pusha
push
idivb
popa
imul
push
addr16
das
jnp
mov
mov
adc
sbb
mov
lret
int3
insb
pop
jb
inc
sbb
int3
mov
mov
jne
popf
push
or
mov
scas
add
andl
lahf
mov
cmp
jne
data16
cmp
sahf
je
shl
in
push
mov
cmp
sbb
fsubrl
lea
int
dec
sub
addr16
dec
xchg
push
pop
faddl
push
stos
mov
xchg
std
aaa
mov
repnz
fiadds
jno
sbb
ss
pusha
jne
add
add
add
hlt
test
in
xchg
and
push
fisttpl
nop
into
lods
and
xchg
push
ds
inc
mov
push
dec
sarb
cli
popa
enter
mov
jae
rcll
das
bnd
mov
popa
push
and
xchg
sub
fnsave
ret
test
call
out
sub
inc
movsb
sbb
push
adcw
sbb
rcrl
cmp
cld
or
clc
mov
out
push
cmc
scas
xchg
adc
pop
push
jo
cmp
in
js
pop
mov
enter
and
out
add
xor
cmc
movsb
mov
and
mov
leave
imul
cmp
pop
xor
out
test
jge
fstpl
popf
add
divl
inc
gs
inc
jae
inc
je
mull
insl
push
sub
or
pop
iret
nop
dec
mov
jge
out
into
jb
xchg
jb
mov
jbe
shrb
ljmp
dec
xchg
inc
dec
stc
pop
jle
fsubl
aaa
pop
iret
loope
lahf
repz
sub
sbb
lds
adc
outsl
or
sarl
lahf
inc
dec
fistpll
fimuls
or
adc
popa
adc
mov
push
loop
add
sbbl
add
mov
add
das
iret
aam
xchg
into
roll
and
test
cmp
lahf
inc
dec
into
shr
jmp
in
fsubrl
lock
add
adc
mov
pop
inc
pop
xor
push
rolb
scas
mov
insl
xchg
dec
add
cmp
es
or
sti
pop
inc
arpl
pop
mov
ja
and
mov
jmp
mov
hlt
std
inc
arpl
pop
sub
mov
mov
lcall
mov
dec
dec
push
imul
cvttps2pi
mov
pop
xor
hlt
mov
push
jle
push
scas
jne
mov
mov
test
and
fldl
iret
loop
mov
push
push
sub
pusha
decl
inc
daa
and
xor
test
sub
aad
push
add
stos
loope
in
imul
inc
and
testl
outsl
lahf
pop
push
pushf
nop
lods
fstps
xchg
xlat
stos
test
dec
dec
push
sbb
push
dec
movsl
or
sti
outsl
mov
test
xor
push
iret
dec
jmp
and
pop
idiv
faddl
push
xor
hlt
dec
cmp
aad
adc
xchg
jne
in
cs
mov
out
add
mov
ja
fisttpl
push
or
adc
and
sub
fstpt
into
scas
sub
xchg
and
test
imul
test
jge
stc
lock
add
lock
add
ss
out
inc
flds
shrl
bound
cmc
repnz
stos
mov
cmp
popa
xchg
push
repz
add
mov
int3
mov
cmpsb
ror
sbb
cmp
stos
loopne
lcall
addb
test
daa
add
ret
mov
push
and
adc
jne
push
mov
ret
and
data16
mov
pop
pop
add
clc
sbb
jge
mov
ss
add
fs
rcll
jae
or
push
pop
pop
shlb
sub
or
dec
test
dec
gs
popf
in
sub
jle
jne
xlat
sahf
int3
rcl
std
sqrtps
out
cmp
xor
inc
inc
or
rcr
in
scas
or
sub
pop
sti
xor
in
jne
insb
add
push
out
clc
or
daa
sub
icebp
mov
test
ret
das
mov
ss
mov
xchg
in
lret
cmp
push
das
mov
adcl
pop
inc
inc
adc
cmc
xbegin
cwtl
adcl
je
push
fsubrl
jbe
into
insb
mov
xor
xchg
cs
out
push
push
cmc
clc
xchg
mov
add
loop
movl
cmp
lods
dec
cmp
cmpsb
mov
jge
adc
popa
sub
mov
ljmp
out
les
lds
pop
stos
inc
ss
xchg
iret
sbb
mov
inc
or
into
arpl
mov
mov
ret
and
xchg
push
lds
mov
or
insb
cmc
sbb
imul
ljmp
push
cmp
pop
shl
out
adc
adc
or
mov
addl
and
and
dec
fld
adc
jmp
jp
rolb
xchg
test
cli
cli
mov
outsl
outsl
or
lahf
cmp
xchg
test
rorb
rol
in
out
jp
cltd
cmp
cmc
xchg
insl
jae
stos
les
add
insb
xlat
es
cmp
filds
xor
mov
mov
mov
push
lret
repz
mov
mov
xor
addr16
xchg
cwtl
sub
jb
das
repnz
pop
test
cli
cmp
xor
scas
lret
adc
adc
mov
pop
jl
pop
sbb
lahf
jmp
imul
cmpb
sahf
add
stos
int3
inc
push
std
mov
fs
mov
dec
imul
adc
aam
test
lea
mov
cwtl
hlt
sbbl
inc
mov
adc
and
mov
push
int
add
xor
scas
add
test
sub
jbe
jl
jl
inc
mov
add
cmpsb
stos
mov
flds
and
sub
cltd
jns
enter
repz
fs
mov
dec
lahf
mov
imul
outsb
jne
out
mov
lock
fstps
push
jbe
add
jmp
clc
inc
push
test
push
popa
pop
ljmp
push
xchg
jge
test
mov
pop
add
or
cmp
cmp
lds
aad
pusha
inc
push
sbbb
mov
adc
jmp
flds
or
mov
add
dec
fdivrs
outsb
cmp
pop
jle
inc
xchg
insl
xchg
adc
fnstsw
jb
push
outsl
jne
fwait
push
lret
sub
dec
lcall
xchg
clc
into
pop
cmp
push
cwtl
jecxz
mov
cmp
daa
jp
loop
rcll
sbbb
ljmp
mov
loop
cmpxchg
arpl
ja
into
mov
inc
fwait
add
push
cltd
inc
mov
into
sub
adc
and
cmp
and
in
xchg
mov
jg
and
ja
cwtl
pop
pop
out
cmp
lahf
dec
lods
cmp
ret
adc
sbbb
rclb
push
cmpsb
lcall
aaa
cmp
sbb
inc
fidivrs
ds
inc
sahf
mov
in
adc
out
or
sub
mov
outsl
lret
in
xchg
mov
mov
lods
out
fs
loope
or
fildll
dec
mov
cmp
gs
jne
mov
adc
dec
dec
lods
cmp
push
and
inc
arpl
mov
jg
push
mov
cmpsl
test
xchg
cwtl
leave
shrl
cmovle
test
sti
jecxz
push
fs
scas
add
mov
adc
iret
mov
dec
int
or
mov
movsl
or
dec
xor
push
cmp
xor
sbb
push
scas
sub
ret
mov
fcmovb
dec
add
int
popaw
loop
outsl
push
pop
sub
mov
inc
xor
sbb
js
mov
insl
scas
pop
clc
add
sbb
lods
out
aaa
pushf
arpl
jl
and
cmc
sbbb
jno
dec
mov
push
cmp
jnp
or
mov
rolb
ja
xor
push
mov
xor
scas
and
ret
adcl
sbb
ret
das
xor
mov
jae
and
mov
insb
dec
dec
repz
fmuls
sti
inc
sahf
mov
jecxz
lods
je
mov
pop
icebp
add
aam
ja
out
insb
insb
sbb
inc
and
aam
addr16
jnp
push
sub
push
xlat
jge
inc
pusha
or
adc
or
adc
icebp
addr16
into
in
mov
shrl
pop
repz
inc
stos
mov
mov
das
aam
inc
test
popf
leave
pop
mov
repnz
xchg
dec
mov
add
sbb
sub
int3
ret
cmp
xchg
mov
scas
ret
cmc
mov
aaa
sbbb
cmc
fiadds
cld
rcr
push
jbe
mov
inc
mov
and
jne
jb
in
test
jne
mov
and
ja
xchg
inc
pop
stos
or
out
popf
clc
sti
dec
ret
pop
lahf
xchg
mov
adc
adc
inc
sti
imul
jle
jmp
loop
mov
and
mov
mov
jg
mov
hlt
or
push
add
popf
xchg
push
sub
mov
insb
inc
mov
in
mov
xor
jno
sbb
data16
pop
mov
aas
pushf
sub
sub
push
lock
push
push
leave
fwait
push
orl
movsl
out
xlat
pop
push
add
dec
and
cltd
loope
mov
inc
je
dec
inc
aam
and
mov
push
lcall
ds
add
dec
movsl
out
mov
hlt
and
stc
mov
rcrl
shrb
ss
std
cltd
push
mov
adc
sti
or
idivb
push
xchg
xchg
cmc
insl
jge
scas
inc
add
xchg
js
es
sub
push
addr16
mov
ja
mov
or
add
pop
mov
pop
push
inc
and
popf
ja
ss
pop
jp
jbe
push
stos
pushf
imul
dec
popf
fbld
pop
jne
add
xchg
add
push
mov
in
pop
sbb
rol
nop
fists
cltd
mov
fbld
push
jae
cmp
inc
push
cmc
add
jle
sti
jl
mov
mov
push
test
shll
test
aad
or
les
mov
lods
xchg
mov
or
mov
add
mov
mov
push
pushf
adc
push
outsl
mov
lahf
jg
inc
dec
jge
and
xor
push
and
cmp
pushf
dec
sbb
xchg
in
ret
add
fsubrs
dec
jmp
pop
fcompl
add
mov
or
jl
in
add
xlat
loope
dec
test
sbb
mov
xchg
mov
std
and
jecxz
sub
jne
inc
int
push
mov
adc
mov
bound
js
push
mov
fldcw
mov
cwtl
push
mov
xchg
movsl
fsubs
imul
pop
fcmovu
cli
lea
mov
leave
jl
aad
int
jne
mov
mov
or
mov
mov
mov
xlat
xchg
jne
ss
add
lcall
orb
inc
mov
rorb
arpl
data16
in
cmp
xchg
push
jo
ret
jne
and
fisubl
add
add
aaa
pop
cmpl
jp
jl
dec
aam
testl
or
xor
fnstenv
add
xor
rclb
pop
pushf
cmpsb
in
jle
mov
push
out
and
dec
push
and
arpl
lcall
sbb
lcall
mov
push
int
or
cmp
ror
call
out
adc
mov
cwtl
lods
pop
xchg
repz
adc
xchg
pop
push
mov
add
xchg
adc
mov
inc
jp
adc
xchg
mov
dec
enter
xor
jmp
or
xchg
push
mov
divl
scas
lret
pop
xchg
iret
in
orb
sub
jg
jnp
xchg
jg
xor
lahf
int3
mov
ret
cmp
and
into
sbb
adc
int
jmp
push
cwtl
cmc
add
sbbb
mov
xor
cmp
sbb
or
add
aad
xor
notl
inc
fsubrs
dec
sahf
dec
pop
dec
inc
dec
xchg
adc
gs
cmp
stos
add
imul
in
pop
inc
insl
jge
cli
jp
pop
or
mov
lret
dec
mov
mov
ja
jne
inc
pop
divb
jl
push
push
stc
mov
pop
ja
jbe
lret
adc
outsb
pop
dec
adc
clc
dec
cmp
jmp
stos
iret
pop
push
push
icebp
lret
sub
into
push
cmp
test
fmulp
push
stc
sub
sbb
cmp
push
cld
imul
shl
lret
into
cmpsb
pusha
jne
outsb
dec
sub
xor
xchg
add
add
mov
adc
xchg
rcrl
inc
jne
add
add
cs
aad
jne
jle
ds
movsb
mov
push
cmp
inc
jne
movl
push
cmp
out
add
mov
scas
mov
ret
out
into
adc
sub
adc
shll
stos
push
test
mov
and
popf
enter
sbb
stos
notb
sbb
push
pop
sbb
sarl
out
pop
repnz
pusha
xor
dec
dec
mov
enter
sbb
js
mov
cmpsl
fmuls
stc
inc
push
loope
jl
fistpl
movsb
sti
je
adc
cmpsl
dec
jp
xor
dec
add
out
lods
sarl
in
insl
outsb
lods
imul
ja
shll
dec
aaa
jne
ja
pmuludq
mov
filds
mov
and
into
cmp
stos
and
jp
or
fdivs
orl
fs
mov
out
sub
repnz
jo
xchg
push
and
movsb
cmp
lds
adc
jne
stos
ljmp
push
imul
and
aas
pop
inc
push
es
scas
push
daa
add
sarb
gs
push
jmp
lods
int
sahf
and
mov
lret
push
mov
in
faddl
push
mov
flds
xor
fwait
add
stos
js
stos
lret
mov
insb
cmc
xchg
xor
add
adc
cmpsl
add
add
and
icebp
pop
popa
daa
pop
lods
insl
and
jae
ret
or
sbb
mov
imul
aad
dec
mov
inc
cld
js
cmp
mov
push
mov
popf
out
dec
pop
push
xor
mov
jno
and
jp
jo
sub
test
pusha
subb
and
xchg
pop
in
mov
sbb
andl
stos
mov
jns
mov
push
adc
cltd
sbb
dec
int3
lea
sub
mov
jbe
gs
dec
push
lods
or
push
dec
dec
fisttpl
lods
mov
or
movsb
in
fcom
pop
lods
xchg
dec
xchg
ljmp
cmc
mov
lret
adc
ret
mov
insb
jno
pop
xchg
or
and
iret
ss
add
std
daa
add
inc
lock
push
data16
xchg
sub
jbe
cmpb
adc
inc
mov
into
punpcklwd
negl
adc
push
dec
imul
jbe
mov
pop
and
dec
ljmp
and
mov
and
pop
ret
xorl
and
xchg
cmpsb
inc
lret
cmp
lahf
jo
into
js
pusha
sub
mov
add
xor
and
sahf
aaa
dec
jne
mov
int3
cli
int3
out
sahf
add
mov
ja
mov
test
sbb
add
sbb
mov
mov
push
jne
inc
jne,pn
mov
gs
sub
push
mov
jge
pop
mov
mov
jae
and
pop
mov
cld
xor
cmp
and
and
popl
jmp
rolb
in
sti
mov
xchg
push
pop
std
into
dec
cmc
push
dec
push
jecxz
ss
jg
andl
mov
insl
mov
test
mov
and
adc
test
aas
sti
pushf
inc
cmpsl
sbb
scas
cli
xchg
repnz
dec
mov
sbb
jne
push
ja
and
pop
xor
loop
sbb
decb
jecxz
add
outsb
pop
outsl
out
mov
or
push
and
and
dec
mov
out
ljmp
mov
jo
inc
and
xor
cmc
pop
and
sbb
ja
shl
mov
test
cmc
dec
jle
xor
aaa
out
jnp
push
repnz
push
loopne
outsb
popa
into
adc
push
sbb
mov
test
ja
ja
stos
mov
sub
daa
jno
xchg
or
sub
lea
pop
mov
pop
shll
and
push
loopne
daa
inc
arpl
arpl
out
adc
sbbb
movsl
sbb
dec
sbb
push
in
dec
int3
mov
sub
mov
dec
popa
mov
enter
loopne
out
jne
mov
push
lret
mov
sbb
nop
and
stos
inc
shl
jl
mov
lods
test
test
mov
jecxz
dec
pop
mov
enter
ret
and
aas
test
popa
les
dec
cmc
mov
mov
add
pop
fwait
and
insl
mov
dec
mov
cmp
enter
std
mov
sahf
pop
cli
stos
call
mov
mov
aad
rorl
gs
pop
xchg
push
fwait
repnz
jne
sbbl
test
cmpb
lahf
movzwl
mov
lds
out
jne
sti
push
inc
dec
xlat
cwtl
jo
mov
cwtl
flds
cmp
mov
sahf
in
mov
sbb
subb
pusha
dec
xchg
mov
fldcw
mov
imul
mov
icebp
test
imul
inc
or
xchg
sbbl
inc
jb
movsb
lahf
adc
rcr
inc
fiaddl
mov
into
into
xchg
stos
xchg
push
mov
jo
cli
push
adc
rcrl
scas
test
mov
imul
inc
clc
scas
push
pop
lea
popf
add
and
dec
push
fadds
cmp
cmp
add
sbb
push
push
sbb
bsf
cmc
xchg
inc
adc
xor
pushf
pop
pop
push
cmc
mov
adc
add
mov
sahf
addr16
into
rcrl
aaa
sub
mov
inc
pop
add
sbb
or
or
sbb
shr
push
pop
insb
jne
jns
enter
ja
push
cld
push
mov
scas
and
pop
pusha
ret
arpl
repz
pop
push
popf
scas
mov
and
or
mov
cmp
dec
or
or
pop
in
mov
sbb
cmc
cmc
inc
adc
imul
lds
stos
outsl
jne
call
jae
pop
addb
std
inc
cmc
xchg
aam
jae
xor
inc
xor
push
jl
mov
lds
dec
xlat
in
add
xlat
fstl
sub
dec
lods
fs
or
jb
and
imul
lods
mov
add
xchg
xchg
ss
fldenv
adc
int
push
subl
aas
mov
add
and
pop
sbb
cmc
push
cmpsb
mov
js
jecxz
mov
icebp
in
out
mov
into
in
mov
loopne
mov
xor
push
data16
test
cmp
leave
mov
ljmp
xor
arpl
jg
xchg
inc
inc
icebp
xorb
dec
add
iret
inc
scas
dec
test
xchg
add
faddl
shll
test
cmc
mov
shufps
pop
push
add
aam
jnp
js
popf
jbe
imul
mov
jo
jb
mov
dec
sub
clc
mov
insl
push
jmp
movsb
lea
cmpsb
mov
fisubrl
cmp
or
fldt
test
call
adcb
or
add
xchg
fdivrl
cmp
cwtl
fadd
test
into
popa
jg
push
and
jle
ss
sbb
lcall
in
pop
addb
outsl
mov
mov
mov
xchg
mov
mov
push
sbbl
pop
js
mov
fldl
lods
jne,pt
or
adc
xor
daa
addl
jl
xchg
mov
xchg
and
shll
sbb
sbbl
jae
loop
in
and
sbb
outsb
movsl
cmp
shr
dec
shlb
push
notl
xchg
mov
push
adc
ror
pushf
dec
inc
pop
inc
xchg
mov
in
adc
and
test
mov
call
leave
jno
leave
jbe
push
add
sbb
or
idivl
in
xchg
jl
jne
xchg
ffreep
add
lods
mov
xchg
cmpb
add
fcoml
xchg
adc
cmpsb
andl
cmp
mov
or
insb
mov
je
aas
dec
adc
popa
divb
jnp
pop
into
mov
cmp
ljmp
int3
or
and
test
add
xchg
std
stos
or
je
mov
sahf
or
add
test
cmc
cld
sbb
inc
cmc
outsl
insb
adc
push
mov
andb
add
or
shrb
cmp
out
ja
pop
les
add
mov
and
inc
jecxz
sarl
add
pop
push
pop
gs
xchg
jge
mov
mov
jmp
cmpb
in
popf
dec
and
mov
pop
inc
loop
jo
and
outsb
call
out
adc
scas
orb
cmp
daa
xchg
ret
decb
mov
adc
ret
push
daa
rolb
addr16
sbb
jl
lea
movsl
test
icebp
insb
pusha
pushf
ret
add
orb
sub
mov
iret
mov
xchg
jne
cs
test
sub
movsb
mov
inc
in
nop
xorb
mov
sub
rorb
and
into
hlt
cmpb
jge
mov
dec
scas
and
and
mov
mov
mov
push
hlt
dec
mov
cwtl
and
jl
popf
xor
int3
lea
push
jge
pop
dec
icebp
scas
in
and
mov
fdivs
sbb
adc
mov
add
ret
dec
test
cld
fstl
jnp
jmp
inc
shlb
pop
faddp
orb
sbb
adc
mov
sahf
xor
aaa
iret
inc
scas
push
cltd
lods
add
mov
fstps
push
pop
pop
aas
cld
int
outsb
daa
lahf
dec
or
leave
mov
arpl
jge
leave
divb
sbb
faddl
jmp
lods
xchg
pop
sub
test
add
sub
imul
in
mov
adc
lds
into
lcall
dec
and
dec
and
lea
ds
data16
out
in
inc
inc
andb
cmp
and
jne
xchg
jb
sbb
es
sbb
xor
iret
pop
das
pop
mov
push
mov
mov
jl
add
xlat
xchg
in
std
sbb
mov
sbb
das
mov
nop
sub
jne
cltd
loope
fsubl
bound
shl
xchg
and
dec
insl
orl
stc
jb
into
pop
sbb
iret
fcomps
sub
popf
dec
cmp
sbb
pop
test
loope
mov
sbb
inc
test
dec
xlat
mov
push
sbb
data16
cmc
mov
das
jno
test
jg
sets
add
sarb
fidivs
cmc
pop
sbb
pop
lahf
imul
lock
inc
call
xor
xchg
scas
fwait
dec
or
xlat
push
and
mov
pop
xchg
loopne
push
in
and
test
xchg
push
iretw
pop
shrl
or
movsb
jle
mov
imulw
ss
or
into
mov
insl
repnz
es
aaa
dec
inc
jne
subl
out
sahf
inc
cmc
and
aas
xor
in
ret
leave
test
xchg
into
adcb
push
mov
sub
mov
cmp
cmp
iret
jnp
push
push
sahf
mov
and
dec
daa
adc
sub
sub
dec
dec
aas
dec
or
rcrb
lret
rcrl
inc
inc
jno
insb
mov
repz
mov
jle,pt
call
int3
mov
jo
sti
mov
xchg
fnsave
sbb
addr16
jle
adc
push
in
pop
xchg
pop
shrb
sub
popf
loope
rorl
stos
enter
lods
adc
cmp
fsin
xor
cmpsl
test
cmpsb
das
adc
shll
adc
in
and
lret
inc
jbe
mov
xor
mov
cwtl
into
add
jae
sub
cmp
inc
loopne
dec
and
dec
ljmp
mov
lods
mov
xchg
in
icebp
repnz
or
sbb
shrl
into
mov
adc
dec
in
cmp
pop
cmpsb
gs
jno
js
in
lret
ds
inc
cmc
pop
int3
mull
xchg
xor
add
xchg
push
ret
mov
popl
imul
pop
mov
lcall
pop
fwait
jge
in
out
dec
jp
ljmp
cli
add
bound
aad
cld
not
cmp
data16
leave
mov
shr
outsb
cmpb
sub
mov
adc
repnz
aam
rcrb
push
es
iret
jl
mov
repnz
fs
mov
mov
adc
or
testb
cmp
out
das
inc
repz
xor
and
outsb
lock
out
nop
dec
loope
ret
cwtl
or
sub
stc
push
test
mov
add
xchg
pop
scas
dec
stos
sub
loop
addr16
jo
in
mov
pop
dec
dec
hlt
inc
outsl
jge
jne
mov
ret
fmulp
filds
pop
jmp
pop
shrb
out
outsb
std
stc
add
pop
mov
test
call
mov
add
int
mov
cmpsb
mov
mov
frstor
icebp
into
in
xor
das
inc
push
cwtl
lods
jl
xchg
cmc
scas
aad
mov
in
inc
cltd
add
dec
in
jmp
xlat
ret
jmp
lahf
hlt
movb
dec
std
test
xor
cmp
ret
mov
mov
ja
lret
sub
push
add
sar
mov
cmpb
lret
movsb
stos
popa
adc
mov
pop
dec
xor
loop
pusha
ds
dec
clc
mov
call
mov
rcrl
dec
jne
xchg
dec
aad
mov
pushf
jne
and
mov
fmulp
jl
push
or
test
mov
or
cmpsl
mov
sub
subl
repz
push
adc
and
cmp
andl
into
sub
xchg
sbb
stos
and
and
xchg
mov
enter
test
push
lret
repnz
int3
idivl
xor
pop
inc
dec
dec
sub
mov
xchg
cli
xchg
mov
std
mov
sub
pop
xchg
popf
faddl
add
cmp
xchg
xorb
enter
ret
popa
fsubrs
popf
push
pop
xlat
cmp
mov
notb
pop
loope
lods
xlat
push
xchg
xchg
addr16
clc
push
push
mov
xor
jnp
js
clc
movsl
lods
sub
cld
into
push
lea
jle
cmp
hlt
and
mov
push
cmp
add
js
nop
and
sub
out
inc
jg
leave
push
stos
adc
cmp
imul
sub
jne
mov
out
pop
insl
mov
push
lods
push
pop
cld
into
ss
mov
push
test
fwait
cld
scas
rolb
inc
pop
pushf
mov
pop
jns
cmpsb
pushf
lsl
and
mov
in
fnstcw
xchg
popa
push
add
jl
mov
xor
pop
repz
sbbl
call
lcall
das
and
js
lahf
in
ds
push
add
scas
or
sub
mov
cwtl
orb
sbb
mov
xchg
sahf
xchg
cmpb
sbb
into
mov
jmp
lret
sub
fs
lcall
push
jno
je
pop
repnz
mov
pop
dec
push
mov
stc
mov
movsl
insb
add
out
sbb
inc
ror
test
mov
lods
xorl
or
push
aad
sbb
data16
rolb
cmpsb
addl
popf
push
ror
pusha
cmp
lods
and
es
pushw
insl
cli
dec
jne
fnstcw
mov
mov
lock
fst
sbb
jl
or
push
dec
test
mov
sbb
or
jne
test
fmuls
and
mov
shlb
xor
sub
jle
inc
inc
test
testb
lock
pop
shll
cmp
dec
clc
jns
fcoms
sbb
jle
fadd
aam
cs
dec
sub
pop
push
sub
mov
mov
mov
lock
jl
cmc
test
mov
arpl
and
in
addr16
push
mov
push
add
xchg
fildll
cwtl
and
mov
xor
sti
dec
lahf
repnz
adc
jae
mov
lret
dec
push
fnsave
jecxz
in
test
dec
cmc
or
dec
into
stos
inc
adcb
inc
add
cli
ja
ss
jmp
subl
xchg
adc
jp
xchg
lcall
in
xchg
push
pop
test
icebp
adc
dec
iret
inc
or
hlt
loopne
xchg
sub
pop
adc
dec
mov
pushf
mov
mov
stos
xchg
cltd
push
mov
cld
aas
jne
mov
mov
pop
pop
ss
dec
aad
insb
jns
adc
sbb
sahf
jb
pop
mov
imull
cmp
pop
std
add
xor
mov
xchg
dec
clc
dec
and
sub
in
fsub
add
jmp
ret
mull
mov
test
cmc
sub
mov
mov
test
add
add
add
mov
rcrb
and
mov
fildl
xchg
dec
stos
pop
dec
in
fs
inc
fldl
repz
adc
dec
in
shrl
and
test
mov
jge
into
ret
ficomps
and
pushf
inc
mov
inc
adc
mov
mov
fldenv
fninit
mov
jne
mov
cwtl
add
bound
mov
cmpsb
inc
jne
push
xchg
cmpsl
push
loope
push
add
push
clc
sbb
in
jecxz
push
jno
or
or
add
in
iret
shrd
fwait
ficoml
movzwl
daa
or
mov
add
decl
cmp
sbb
mov
mov
test
and
mov
mov
xchg
inc
mov
push
mov
add
outsb
test
push
stos
popf
hlt
mov
or
jle
cmc
mov
stc
push
jle
ljmp
adc
xor
iret
add
mov
mov
or
fsub
sub
dec
xchg
sbbb
div
fcoml
daa
cmp
add
inc
out
dec
jl
out
and
jp
ffree
sti
pop
fisubrs
loope
add
xlat
dec
test
dec
ja
dec
cmc
mov
out
cmc
adc
inc
lret
jmp
mov
and
xchg
into
dec
cmc
pop
dec
or
jns
cmp
pop
roll
add
aaa
xchg
fnstsw
loope
sub
mov
ja
push
and
movsb
mov
adc
filds
std
cltd
popa
test
addr16
stc
dec
cld
pop
xor
cmovl
or
lahf
out
les
adc
or
push
dec
test
in
roll
inc
pop
jl
mov
testl
mov
jne
mov
cmp
mov
es
test
cmpsl
sahf
push
mov
lock
sbb
adc
xor
adc
mov
insb
in
inc
cmc
mov
ret
push
in
fsts
sub
or
stos
dec
imul
leave
movb
cmc
leave
lret
cwtl
mov
xor
xchg
aam
xchg
into
add
sarl
xorl
xor
clc
cmpsb
dec
and
test
add
out
push
xchg
dec
and
sbb
xor
loope
aad
vcomiss
iret
mov
clc
repz
in
jmp
add
jl
pop
push
scas
and
aas
dec
idivb
dec
mull
insb
mov
mov
inc
cmpsl
mov
adc
pop
mov
int
insl
and
cmp
cmp
jmp
push
arpl
adc
bswap
add
jnp
adc
jmp
fildll
push
xrstors
test
adc
cmpsl
mov
mov
imull
dec
xlat
mov
les
mov
add
lcall
leave
fstps
inc
in
ljmp
sbb
aam
out
or
lea
mov
repnz
or
push
sub
lret
or
loop
cmp
jo
adc
mov
int3
xor
mov
mov
and
xor
pushf
fimull
adc
pop
and
mov
out
and
fmuls
and
in
test
and
int3
addb
add
add
cltd
adcb
dec
orl
inc
cmpsb
mov
ficomps
mov
inc
stos
aam
lahf
into
and
adc
and
and
xor
push
loope
sbb
das
sbb
add
jae
or
repnz
int3
fwait
jmp
xor
movb
cwtl
push
outsl
and
dec
push
and
pop
iret
ja
fwait
pcmpeqd
xchg
in
inc
mov
and
xor
lea
sub
pop
lds
out
ss
push
outsl
xchg
mov
and
in
add
repz
xchg
insl
je
and
add
cmc
mov
sahf
add
cmc
das
movsl
sahf
movl
popa
sbb
cld
sub
fldl
dec
xchg
pop
aas
in
fnstsw
bound
cmpsl
sub
call
xchg
imul
push
call
jne
adc
mov
sbbb
sub
cs
aad
xor
adc
and
add
sub
mov
adc
inc
leave
pop
inc
mov
cli
das
mov
jmp
js
add
dec
xchg
aas
gs
pop
sub
pop
mov
shlb
cmp
cwtl
push
mov
into
mov
loop
push
jne
or
test
inc
mov
adc
scas
pop
pushf
jne
outsl
mov
adc
in
cmpb
gs
rclb
repz
dec
or
jmp
hlt
cltd
push
mov
xor
xchg
std
popf
sub
gs
cmp
pop
in
add
in
jns
dec
imul
loop
jbe
mov
enter
cwtl
push
sub
pop
push
repnz
outsb
stos
in
mov
lods
adc
jns
dec
iret
cmp
sbb
mov
inc
subl
imul
popa
inc
or
and
and
inc
push
dec
xchg
call
lods
xor
pop
mov
add
adc
push
xchg
aam
mov
mov
movl
and
in
jnp
mov
and
push
decl
push
lahf
out
out
in
sahf
xor
cmp
inc
ja
imul
or
xchg
jo
movsb
scas
jns
pushf
xor
adc
cmc
adc
repnz
push
add
mov
popf
cltd
mov
and
jnp
popf
in
into
into
rcrl
mov
or
or
pop
jne
add
fwait
mov
xchg
jnp
mov
jg
inc
mov
xchg
lret
sbb
and
mov
call
rol
inc
push
or
fnstenv
xchg
and
jne
ficompl
cmp
test
fwait
ljmp
hlt
sub
xchg
add
adc
icebp
add
movsb
push
jne
sar
dec
nop
mov
pop
adc
sub
inc
test
addr16
int
xchg
lret
dec
xor
and
jl
xchg
add
xorb
cwtl
shr
sbb
cs
pop
stos
in
sbbb
xor
jne
add
push
and
inc
sbb
dec
cmp
sahf
jl
popf
mov
lods
outsl
in
push
aas
cmp
sti
sbbl
jne
repnz
cmp
int
push
xor
xor
push
insl
push
push
mov
pop
push
xchg
jne
cmpsb
adc
adc
imul
int
xor
push
pop
fs
and
cli
fnstcw
sub
pop
andb
adc
pop
lret
into
ds
xlat
push
and
notb
mov
in
jmp
jo
dec
xor
and
fs
shrb
dec
idivb
and
xor
mov
mov
mov
pop
roll
jle
push
pushf
ja
adc
xchg
call
xchg
xchg
cmp
mov
aaa
push
add
inc
jne
inc
jb
pop
cmpsb
mov
ds
aam
jb
sahf
stc
mov
es
les
orb
rclb
push
fs
into
dec
mov
fcmove
jle
push
in
lcall
mov
and
jo
lds
movsb
mov
fisubrl
pushf
mov
add
movsl
dec
in
fildl
stos
jnp
xlat
movhps
lret
lods
into
mov
cmc
mov
aaa
sub
add
mov
lret
and
mov
dec
js
xor
out
ja
lret
gs
xchg
mov
inc
stc
jns
sub
jmp
mov
pop
and
jae
aas
fisubrl
popf
mov
ds
cmpsb
mov
stc
movsb
add
enter
shll
add
int
mov
xor
xchg
stc
nop
gs
push
rolb
lahf
out
addb
mov
mov
mov
sbb
jne
nop
mov
push
push
mov
mov
and
sahf
mov
push
nop
filds
or
fcmovb
jb
cld
std
push
ret
adc
pushf
sub
xchg
lea
and
xor
orb
jecxz
ret
out
dec
xor
xchg
fldenv
add
pop
push
fwait
add
xlat
dec
movsl
xchg
mov
orb
test
mov
mov
incl
dec
inc
xchg
pop
sbb
enter
test
jg
add
sbbb
leave
mov
sahf
fdivs
mov
mov
cltd
fdivrl
repz
aad
sub
pop
aaa
and
mov
cmpsl
mov
std
adcb
xchg
mov
and
mov
in
dec
imul
les
sbb
and
dec
lea
leave
mov
stc
std
sahf
push
jne
fdivrl
addr16
dec
xchg
add
xchg
cli
out
and
lods
ljmp
mov
mov
jnp
and
gs
int
and
enter
xchg
or
sti
loopne
out
ja
clc
aad
fwait
pop
adc
out
movsl
hlt
ret
aaa
aam
push
stos
adcb
dec
xlat
lret
scas
cld
pop
dec
clc
sarb
into
mov
dec
cmc
and
cli
lcall
cli
jne
shrd
pop
repnz
mov
scas
aad
mov
test
push
pusha
js
or
and
aad
or
sub
push
inc
test
fcmovnb
mov
xor
xor
xchg
cs
mov
stos
cs
push
xor
and
mov
jle
ret
repnz
fcompl
leave
xlat
int
leave
mov
add
push
or
xor
mov
inc
or
rcll
mov
stc
js
fsub
subl
shl
mov
dec
mov
les
lahf
les
inc
sbb
xor
xchg
jp
movsl
das
int
mov
mulb
je
ljmp
mov
js
pop
test
inc
cli
xchg
sahf
popf
sbb
push
and
fucomip
dec
xchg
bnd
push
inc
cmpsl
sbb
adc
mov
imul
test
inc
cmp
add
xor
or
inc
adc
push
loopne,pt
in
jne
mov
sbb
fs
dec
cli
mov
std
mov
jne
push
out
cmp
dec
pop
in
and
xor
inc
decb
mov
sbb
xchg
and
fiadds
sbb
inc
mov
jecxz
decl
ja
mov
mov
mov
xchg
sbb
or
jmp
std
fnsave
stos
into
jno
out
push
test
nop
xlat
dec
xchg
and
add
bound
popa
stc
dec
push
mov
dec
add
scas
xor
loope
insl
outsl
scas
and
shlb
and
jne
imul
cmp
inc
shlb
pop
outsl
in
pop
and
sbb
cltd
jle
mov
adc
mov
xchg
and
ja
cmp
push
pop
mov
cli
out
xor
cmp
shlb
push
nop
push
repnz
xor
in
loope
loop
and
lods
into
add
jae
cs
adc
aad
mov
fldenv
mov
rcll
push
push
out
add
dec
movsl
out
or
and
mov
pop
out
push
pop
sti
push
xchg
into
add
and
jne
jbe
xor
inc
aas
mov
test
adc
mov
and
mov
add
mov
adc
xlat
pop
mov
enter
into
or
js
sti
movl
jp
jnp
repnz
jne
mov
out
cmp
mov
in
pop
das
mov
fsubs
cmc
sbb
xchg
lods
shrl
jbe
into
xchg
dec
pop
and
idivl
out
push
in
add
push
mov
and
les
clc
test
or
mov
inc
pop
roll
xchg
shl
sub
mov
cmc
mov
mov
lods
mov
jle
je
testb
lcall
ljmp
lcall
int
push
outsb
push
push
inc
cmp
xor
adcb
icebp
pushf
ja
lock
jo
sbb
je
outsl
or
testl
test
lret
lods
dec
xor
shr
sub
movsb
inc
jne
fdiv
hlt
testb
mov
cmp
push
dec
iret
dec
aas
scas
mov
push
jns
xchg
jne
pusha
jp
cmp
into
push
ljmp
add
lods
cmp
push
lods
pop
pop
push
test
fldl
cmp
xchg
insl
mul
lock
scas
pop
cltd
dec
rorl
add
fsubrl
mov
adc
dec
sbb
insb
scas
add
ja
push
lahf
sahf
scas
mov
out
xchg
dec
sub
dec
test
push
hlt
je
inc
imul
hlt
rorl
and
push
dec
call
aam
popa
les
push
imul
dec
xchg
jnp
insb
or
dec
shlb
and
enter
jmp
nop
mov
loop
in
addr16
inc
mov
imulb
sub
ljmp
call
sbb
mov
mov
popf
and
mov
dec
lret
and
jbe
dec
lret
sbb
hlt
insb
pop
inc
fidivrl
mov
imul
lds
in
inc
out
mov
and
je
jle
cmp
jnp
cmpsb
cmpsl
jbe
nop
xchg
mov
addb
jnp
xor
jb
pop
xchg
push
shlb
or
pop
out
jne
sti
or
adc
das
aas
sub
add
call
idivb
cmp
into
enter
mov
lds
bound
push
inc
xchg
inc
mov
test
loop
jmp
and
sub
mov
lods
or
xchg
icebp
mov
shlb
sbb
outsl
out
mov
mov
insb
xchg
lds
dec
lret
out
andb
xor
pop
push
leave
pop
add
fwait
outsb
repnz
shll
jle
test
jne
pop
je
rclb
je
mov
or
sbb
push
icebp
mov
popa
push
das
es
pop
jne
icebp
add
jae
push
xchg
sub
sub
mov
roll
daa
aad
adc
cmp
xor
xchg
mov
dec
push
arpl
pop
lods
addb
jae
mov
jbe
xchg
xor
push
inc
imull
sbb
push
mov
jne
bound
mov
mov
jmp
fwait
or
lods
sub
cmp
call
cmp
and
mov
mov
test
mov
faddp
dec
xor
cmp
fwait
inc
jl
sub
fdivrs
stos
mov
sbb
subl
add
stos
aam
mov
mov
jle
cld
subb
mov
nop
lret
push
cwtl
xchg
rcr
gs
lret
scas
mov
add
and
mov
xor
movsb
sbb
jbe
and
push
cmpl
lock
dec
sub
dec
mov
add
cs
mov
inc
in
push
pop
xor
xor
cmp
sub
inc
data16
pusha
les
pop
repnz
mov
jmp
into
add
and
inc
add
add
addl
or
adc
and
push
bound
add
add
adc
or
add
andb
add
add
inc
add
add
add
inc
add
rclb
or
or
pop
inc
and
add
and
adc
mov
adc
add
sub
add
push
inc
add
add
add
inc
adc
cmp
mov
sub
adc
or
add
andb
push
or
or
add
jb
add
pusha
inc
adc
adc
addb
add
adcb
and
inc
adc
addb
and
jo
inc
add
add
mov
inc
adcl
and
inc
add
add
add
rolb
adc
add
addb
push
add
inc
add
add
ret
xchg
xchg
dec
or
inc
inc
adc
add
add
add
add
add
push
add
addb
sub
or
pop
rolb
adc
add
add
add
push
add
addl
inc
add
inc
add
add
add
adc
adc
push
arpl
test
addb
addb
add
add
addb
add
lret
add
inc
adc
mov
add
add
pusha
or
mov
add
add
add
xor
add
or
add
add
push
add
rcrb
adc
or
add
subb
orb
xchg
add
inc
inc
push
inc
add
inc
and
roll
xor
add
or
adc
add
sub
add
or
pop
sub
nop
inc
or
add
add
inc
or
xor
add
and
or
or
add
add
add
or
add
adcb
add
push
dec
add
addb
mov
inc
or
inc
roll
inc
pusha
addb
xor
sbb
mov
add
inc
xchg
add
add
and
push
add
cmp
add
add
and
add
add
add
mov
add
inc
and
inc
xchg
cwtl
adc
shlb
adcb
cmp
enter
add
add
rolb
add
add
dec
add
or
add
inc
adc
andb
add
add
inc
or
or
orb
add
add
add
push
adcb
or
add
add
add
or
or
add
adc
add
xor
or
inc
leave
add
add
and
or
push
adc
mov
add
add
mov
adc
test
adcb
jo
bound
add
and
add
sbb
add
add
inc
inc
add
sub
inc
inc
sbb
mov
and
or
inc
or
test
add
add
mov
add
add
mov
and
sbb
nop
bound
add
add
adc
add
rcrb
and
orb
mov
adc
and
add
adc
enter
and
enter
mov
add
inc
add
adc
add
inc
add
add
add
inc
adc
add
inc
sbb
and
inc
and
add
rorb
mov
push
add
adc
or
test
adc
addb
adc
push
movsb
add
add
add
add
adc
mov
adc
inc
adc
cwtl
add
add
add
push
orl
inc
add
sub
test
and
add
sub
add
add
add
and
or
mov
add
add
lods
add
rclb
add
mov
add
xor
sub
add
jo
add
push
rorb
inc
pusha
add
add
orb
inc
add
sub
adc
add
test
and
stos
add
or
jo
xchg
add
or
daa
add
add
inc
add
inc
les
inc
or
lock
addb
andb
sub
and
add
ss
fbld
add
add
or
and
push
add
or
inc
add
xchg
and
and
add
add
add
or
adc
and
inc
adc
inc
test
add
add
dec
mov
and
and
pusha
addb
or
adc
push
add
dec
add
inc
and
inc
cmp
and
inc
add
inc
add
addb
dec
add
add
and
add
add
add
rorb
nop
or
ret
add
test
adcb
sbbb
add
adc
inc
cmp
ret
rolb
add
add
inc
and
push
add
add
nop
dec
add
add
adc
push
add
add
add
jp
add
adc
add
add
inc
mov
and
enter
add
add
sbb
shll
inc
add
lahf
test
inc
addb
adc
rolb
add
sub
add
and
add
or
adcb
push
add
add
inc
and
add
add
orb
add
add
or
add
sbb
sub
and
add
adcb
inc
and
mov
add
add
adcb
and
addb
add
and
addb
add
mov
adc
in
and
add
and
and
inc
adc
adc
inc
test
sbb
add
add
add
adc
and
add
add
add
dec
add
test
add
add
adc
adc
or
and
add
mov
addb
push
add
add
xor
add
or
add
add
adc
add
add
add
add
pushf
add
or
inc
call
inc
add
jo
add
test
sub
add
add
or
push
mov
add
xchg
addb
cmp
addb
xor
push
rorb
add
and
rolb
or
add
add
add
add
and
and
les
sbb
push
andb
or
add
add
and
adcl
add
push
add
push
inc
add
add
sbb
sub
addb
inc
add
add
or
orb
add
inc
add
add
or
add
xchg
or
inc
dec
inc
add
xor
daa
add
dec
add
or
or
add
inc
mov
inc
add
inc
or
inc
add
push
add
dec
aad
add
and
dec
or
add
add
movsl
add
adcb
add
adc
cmp
add
add
add
pop
add
add
inc
add
inc
add
add
ljmp
add
test
mov
add
push
add
pop
add
mov
or
add
adc
xchg
ret
movsb
and
loopne
inc
add
adc
adc
sub
add
or
and
addb
mov
xchg
inc
add
repnz
pusha
add
dec
and
adc
rolb
and
addb
add
add
add
push
mov
and
xor
nop
dec
add
and
add
adc
or
and
addb
addb
xor
push
rcll
inc
add
mov
jo
add
addb
add
mov
add
and
or
test
and
adc
push
add
and
pop
add
and
test
add
add
or
add
sub
add
adc
add
test
sbb
and
add
add
add
add
add
add
bound
add
add
add
push
inc
or
adc
xchg
adc
lock
add
add
push
add
adc
mov
rolb
inc
inc
test
addb
add
adc
add
push
orb
xchg
adc
addb
add
add
adc
jo
inc
test
nop
mov
push
or
add
add
ret
pusha
add
add
xor
adcb
add
add
and
mov
dec
mov
adc
daa
add
or
add
addl
inc
popf
pop
adc
add
mov
adc
add
add
add
test
and
add
pusha
add
enter
add
pop
cwtl
hlt
add
addb
rorb
add
dec
push
add
inc
addb
add
inc
add
add
or
cmpsb
test
add
add
add
and
add
call
or
sbb
add
mov
rolb
scas
add
addb
bound
add
add
call
add
pusha
add
sub
add
add
inc
nop
sbb
clc
nop
adc
adc
add
and
inc
and
inc
roll
les
add
mov
shlb
xor
add
mov
add
add
adc
adc
add
add
add
xchg
and
xor
add
pop
or
repnz
add
add
shlb
inc
add
or
add
xor
xor
inc
movsb
add
xor
inc
add
inc
adc
add
mov
adc
fiaddl
inc
adc
add
add
push
add
inc
inc
xchg
mov
lcall
sub
push
mov
inc
or
add
sbb
add
mov
nop
sbb
inc
inc
pusha
add
sbb
or
add
add
adc
add
and
adc
adc
inc
add
inc
xchg
adc
add
addb
push
push
inc
add
add
sub
mov
dec
or
add
add
inc
inc
sub
add
mov
sub
adc
add
movsl
add
add
adc
inc
add
sbb
add
addb
or
test
or
push
addl
add
add
add
add
add
dec
adc
or
enter
add
add
add
or
add
push
or
adc
add
add
and
inc
and
xor
roll
mov
adc
inc
sbb
or
roll
or
bound
and
add
add
adc
add
add
inc
out
add
add
or
add
adc
add
pop
adc
inc
add
and
adc
add
adc
add
add
add
adc
add
addb
roll
bound
add
push
pusha
add
adc
inc
and
push
inc
inc
add
add
inc
add
adc
add
and
adcb
add
andb
or
add
inc
mov
add
or
push
add
add
add
or
addb
add
orl
inc
inc
add
enter
push
add
add
add
rorb
add
inc
add
or
adc
xor
add
inc
push
movsb
les
add
add
xchg
inc
or
add
inc
add
dec
loope
add
nop
add
add
add
add
xor
add
inc
inc
or
add
add
ds
or
adc
mov
adc
add
or
or
add
or
add
or
push
inc
add
add
add
add
add
dec
inc
add
add
and
adc
and
or
add
add
rorb
push
add
adc
and
add
loopne
pusha
push
fstps
adc
addb
inc
inc
or
or
adc
cmpsb
mov
adc
add
xor
add
add
push
addb
loopne
sbb
inc
addb
sub
mov
add
add
adc
adc
and
add
adc
add
addb
add
add
lods
or
mov
mov
sub
xor
pushf
nop
test
add
add
sub
mov
movsb
add
sbb
add
pusha
add
add
add
addb
lret
add
rolb
inc
mov
rclb
or
sub
mov
mov
andb
add
adc
push
ss
rolb
call
add
and
and
or
add
add
and
inc
inc
add
add
mov
add
inc
adc
add
mov
outsb
inc
inc
add
add
or
add
or
add
add
add
add
dec
xchg
or
rolb
mov
test
xor
add
add
inc
push
add
adc
addl
jno
add
or
adc
inc
addb
addl
xchg
jno
add
sbb
andb
and
add
xor
add
lds
or
inc
push
dec
dec
add
xor
dec
imul
add
ss
add
add
inc
bound
add
sbbl
test
push
add
sub
inc
push
inc
adc
and
xchg
inc
adc
add
add
inc
add
add
add
andb
add
add
or
inc
and
les
add
add
add
cmp
pusha
add
adc
adc
add
add
or
add
add
sbb
inc
inc
add
or
add
adc
adc
nop
add
and
add
and
rcl
addb
flds
push
adc
mov
xchg
push
add
test
add
xchg
add
sub
sbb
inc
add
pop
add
add
and
adc
add
orb
mov
add
add
cwtl
add
adc
add
addb
sbb
xchg
imul
add
mov
adc
add
add
add
add
add
add
add
push
add
rolb
adc
inc
inc
or
inc
and
addb
or
adc
xchg
add
adc
add
add
add
inc
add
movsb
add
and
adc
add
outsb
adc
push
addb
addb
add
test
mov
add
add
addl
add
push
add
or
addb
add
inc
push
inc
inc
les
add
inc
inc
adc
add
add
add
adc
add
in
add
mov
add
adc
adc
inc
add
add
add
add
xchg
mov
add
add
add
add
add
cwtl
add
dec
add
adc
jp
addb
and
add
or
add
push
mov
add
push
xchg
sbbb
and
add
xor
pusha
mov
push
dec
jp
das
jne
and
fmull
dec
mov
lea
sbb
add
mov
cmpl
fldl
movsl
stc
mov
jp
das
jge
fwait
les
cwtl
sub
movsb
adc
andb
rcrl
mov
stos
mov
cltd
push
das
xor
lock
pushf
sub
dec
lahf
add
sti
mov
or
call
fidivs
and
ret
es
sub
lcall
movsb
sub
and
mov
ja
mov
insl
shll
sub
stos
out
into
icebp
xor
push
push
aam
or
and
mulb
pop
pop
cld
sbb
adc
xchg
xor
mov
sbb
shll
cmp
aas
mov
aaa
push
das
rorl
cmc
mov
cld
fucomp
pop
mov
jnp,pn
iret
jbe
out
rcll
jg
ljmp
pop
or
loop
jle
dec
lcall
cs
scas
dec
jnp
jmp
push
pop
mov
mov
repz
scas
int
mov
push
popl
clc
mov
add
or
mov
fs
dec
loopne
cmp
push
lahf
sub
or
mov
cwtl
cmc
insb
dec
scas
cmp
mov
mov
hlt
sahf
xlat
ljmp
mov
mov
adc
pop
test
jo
lods
add
or
jne
pop
out
and
into
jmp
imul
push
int3
std
sub
das
jno
mov
iret
push
arpl
ljmp
paddd
xlat
aad
xchg
add
and
lret
mov
addr16
mov
xchg
mov
dec
es
hlt
mov
cmp
cmova
mov
ja
jns
xor
cmp
fsubrs
and
cmp
sbb
mov
add
jnp
lahf
arpl
ss
push
nop
adc
and
outsb
out
rorl
mov
in
shlb
dec
fisubs
icebp
jbe
andl
lret
dec
xchg
lahf
and
pop
inc
xor
mov
fimuls
cmpsb
mov
adc
cmp
cmp
lcall
mov
adc
inc
js
add
push
jmp
out
bound
xchg
pop
push
lds
cmc
mov
adc
loopne
and
xor
pop
mov
mov
mov
mov
fisubrl
sbb
xor
xor
insb
iret
sbb
lcall
mov
mov
pop
lcall
sbb
sahf
in
lfs
jns
push
test
push
or
iret
jae
add
addl
push
dec
xchg
or
dec
fdivp
scas
add
outsb
xor
jmp
loop
and
xor
pop
test
mov
adc
jae
add
sub
pop
ficoms
add
sbbl
mov
jecxz
jge
pop
frstor
cmp
mov
cmp
add
pusha
std
lret
mov
scas
sub
mov
bound
jb
mov
seto
jne
adc
imull
outsb
xor
adc
mov
mov
dec
inc
mov
in
mov
mov
pop
sub
sti
sbb
xchg
mov
mov
hlt
adc
mov
pop
cmpl
inc
or
pop
or
dec
mov
xor
push
push
ret
jno
sbb
mov
mulb
cltd
ljmp
sub
loope
mov
scas
and
cmp
inc
fldt
jge
mov
gs
cmp
mov
loope
decb
mov
xchg
lods
mov
inc
outsl
jmp
sub
fcmovbe
sahf
scas
scas
pop
and
fidivl
xchg
cmc
imul
mov
leave
add
xor
lret
ret
dec
or
hlt
nop
cmpsl
out
xchg
ret
xchg
and
bound
mov
dec
push
ret
fcompl
popa
ja
iret
push
cmp
pop
in
pop
popa
stc
xor
adcb
lods
push
jo
in
into
fs
mov
mov
mov
in
lret
xchg
xor
dec
jne
add
repnz
dec
mov
mov
inc
movsb
scas
es
sub
jmp
mov
xchg
fmul
das
and
outsl
and
cmc
int
cltd
fnstsw
mov
loopne
fldcw
sub
cmc
js
movsl
int3
ret
pop
jge
xchg
push
cmp
xchg
lcall
or
daa
sub
add
loop
inc
outsb
ljmp
fadds
mov
icebp
cmp
mov
xchg
rolb
sub
pushf
pop
in
mov
mov
daa
sub
js
lock
and
xor
ret
jno
mov
mov
jmp
push
and
mov
xor
fists
dec
pop
and
or
inc
cmp
popf
movsb
into
insl
mov
popf
lock
mov
ja
sbb
div
sbb
sbb
mov
inc
jmp
insl
inc
mov
adc
lahf
pop
jle
mov
add
inc
mov
ljmp
adc
out
jle
mov
xchg
ret
or
int3
and
pop
outsl
sarb
lret
cld
mov
xchg
stc
insl
mov
aam
sbb
adcb
hlt
add
mov
rorl
xchg
mov
mov
js
sub
and
sar
lods
sbb
pop
mov
movsb
inc
xchg
dec
jne
sub
cli
mov
xor
add
call
add
mov
das
sbb
cmpsb
add
lods
mov
and
cmp
dec
fs
call
add
enter
jmp
pop
mov
mulb
int
cmc
nop
fidivl
test
lcall
fcompl
icebp
and
in
test
scas
cltd
sbb
imul
notb
lret
inc
jnp
loope
lods
scas
cli
into
add
int
into
push
add
xor
jo
pusha
ficoml
andb
into
jle
lds
outsb
jecxz
jmp
jecxz
lds
xchg
mov
add
dec
mov
stc
into
jle
rcl
and
pop
mov
js
imul
insl
jb
sbb
pop
imul
cmc
fiaddl
mov
add
jge
ret
sub
inc
xor
cwtl
xchg
xor
arpl
sbb
pop
shl
or
sub
cmp
hlt
mov
jo
sbb
dec
lock
aas
pop
sub
xor
or
inc
push
inc
inc
mov
movsl
enter
lock
cld
push
iret
mov
in
mov
xchg
sub
cld
sbb
dec
push
or
mov
aas
jp
stos
adc
into
mov
pop
pop
mov
mov
mov
jg
and
shll
inc
gs
xlat
adc
xor
mov
adc
mov
daa
xlat
jne
jp
clc
stos
lcall
cmpsb
call
xchg
inc
mov
mov
and
or
push
in
push
popf
decb
push
data16
dec
dec
cmp
test
jmp
sub
sub
mov
lret
dec
cmc
push
jnp
icebp
xchg
inc
dec
inc
xchg
lret
or
add
fidivrs
call
idivb
dec
inc
gs
adc
ds
scas
pushf
rcrl
scas
pop
xchg
dec
cmpl
mov
lret
mov
jne
fwait
mov
icebp
jg
inc
cmpsw
gs
dec
push
mov
cmc
rorb
or
lahf
mov
sub
push
jp
dec
lods
and
push
and
clc
mov
jo
xchg
cmpsl
mov
into
in
dec
dec
aas
mov
mov
push
fnstenv
adc
mov
into
andb
mov
popa
int3
imul
inc
dec
andb
stc
xchg
and
push
aad
push
popf
push
xchg
mov
test
inc
dec
sbb
lahf
dec
idivb
fwait
cmc
mov
je
enter
mov
mov
mov
data16
cmc
bound
shl
lods
jmpw
xor
lods
push
push
aaa
mov
push
fildll
shr
xchg
pop
hlt
mov
cs
pushl
jmp
sarb
and
popf
mov
in
leave
sub
jmp
in
pop
and
inc
rol
mov
test
fs
inc
movsb
fsubs
test
adc
xchg
pop
mov
xor
dec
jg
mov
push
or
mov
or
fildl
leave
fwait
jne
dec
popf
sbb
sbb
or
int3
push
jnp
cs
push
rcrb
shl
sbb
push
aad
cli
mov
testb
jno
test
negl
insb
sbb
lcall
jle
pop
jp
add
jae
xor
inc
mov
mov
adc
int
jl
cmp
jg
insl
mull
dec
addl
pop
xor
fsubl
jns
pop
popl
iret
cltd
lcall
insl
out
mov
add
and
push
push
cs
pop
je
pop
iret
imul
mov
and
call
movsl
mov
sahf
popa
in
xchg
push
je
int
loope
test
mov
cmp
pop
int
push
cmp
lret
addb
sbb
es
sub
push
mov
mov
add
imul
or
sarl
repz
jl
pop
leave
lcall
jno
inc
add
push
xchg
clc
push
pop
loop
dec
in
push
mov
orl
inc
ja
movsl
insb
inc
cmp
fcoms
mov
movsl
loop
inc
aas
lcall
inc
std
gs
add
add
mov
cmp
and
js
imul
mov
and
mov
sub
imul
lea
repz
sahf
icebp
sub
add
add
jne
rorb
es
fcmove
and
mov
mov
fisttps
inc
sub
pop
xchg
adc
add
push
cmc
mov
mov
dec
into
xor
mov
add
stos
dec
cmp
jecxz
pop
icebp
sti
sbb
fs
push
out
loope
jg
mov
stos
or
dec
das
sarb
inc
test
cwtl
scas
xchg
fnstcw
pop
sarb
jmp
pop
mov
xchg
mov
dec
lods
dec
push
nop
cli
push
ja
dec
sbb
pop
mov
dec
mov
mov
push
mov
lret
clc
xchg
mov
jne
add
js
add
scas
arpl
es
icebp
in
xor
mov
lret
out
pop
inc
data16
xor
popf
daa
mov
mov
test
pop
insl
lahf
js
jne
daa
sub
idiv
hlt
xchg
imul
sub
mov
rclb
mov
loop
cmpsl
cmpsb
and
inc
movsb
jecxz
in
dec
hlt
mov
add
imul
fwait
ss
sbb
andl
cmc
aaa
fnsave
jo
xchg
mov
leave
andb
adc
sub
ret
repnz
xor
pop
pop
imul
orb
jl
lock
xchg
insl
adc
jae
adc
ret
cwtl
dec
xchg
fdivrp
mov
mov
jecxz
sub
shlb
xchg
ret
dec
cmc
cmp
mov
pop
orl
dec
jne
push
jne
cmp
jl
push
pop
jp
or
cmpb
test
lods
sbb
mov
cmpsl
add
inc
xor
addb
push
push
push
and
push
xchg
pop
push
sbb
jo
pop
sub
daa
rcrb
sub
xchg
clc
jo
test
sti
pusha
sub
push
push
jne
add
cmp
in
push
jp
scas
cltd
into
ficoms
aas
ficoms
lahf
pop
bnd
mov
push
fcmovnb
xchg
subb
test
push
push
mov
mov
in
clc
cmpb
mov
add
xchg
fwait
cmpsb
ret
sub
jle
cmc
or
mov
adc
push
mov
inc
leave
filds
cmp
add
repnz
pushf
dec
gs
in
mov
pop
pop
sbb
sub
in
lods
addb
add
ret
xorb
je
mov
xchg
fucomp
pop
mov
hlt
mov
jmp
inc
mov
inc
movsb
adcb
addb
jmp
outsl
mov
mov
in
cmpsl
add
jne
cmp
xchg
loop
inc
push
push
insl
pop
test
sub
mov
jns
pop
mov
imul
mov
popa
jge
inc
mov
das
test
fs
pop
lret
sub
push
shll
es
aam
mov
faddl
outsl
daa
push
cmp
mov
insb
subb
mov
int3
rorb
push
add
stos
into
push
pop
jbe
jns
push
pushl
aam
popaw
out
mov
mov
mov
insl
mov
cmpsl
jne
int3
mov
aad
cmp
sbb
jno
add
das
or
dec
jb
push
push
das
fsubl
addb
adc
cmc
ds
or
rolb
mov
mov
xchg
sti
lcall
mov
cld
jecxz
fnstenv
rorb
dec
push
movsl
out
lahf
cmp
xchg
jne
xor
and
jl
xorl
shlb
fwait
push
lods
jmp
daa
add
mov
lods
dec
shll
dec
add
push
gs
mov
loope
mov
sbb
sbb
icebp
inc
xchg
pop
push
and
adc
das
and
test
adcb
mov
jne
cmpsl
in
cli
add
data16
dec
inc
ja
imul
jbe
push
pop
add
add
enter
sbb
rolb
mov
les
hlt
lcall
xor
dec
leave
cmp
popf
and
and
movsl
cmp
dec
pop
idivb
lds
push
fisubs
push
mov
adc
fstps
sbbb
adcb
mov
test
icebp
out
adc
xchg
dec
es
or
and
sub
jo
fs
icebp
sbb
sarl
jns
sti
inc
xchg
xchg
out
mov
imul
sbb
arpl
adc
dec
fwait
add
jns
mov
sti
xchg
fcos
dec
and
sub
or
ret
outsl
dec
sahf
pop
std
push
xchg
cmp
addl
cmpsb
ret
or
rorl
imul
mov
push
or
adc
aad
push
das
imul
hlt
jne
std
xor
cmp
or
sub
mov
fcompl
jne
sbb
and
dec
adcb
pop
call
push
mov
cltd
pop
mov
ss
sub
xchg
movsb
sbb
inc
pop
fimull
mov
jnp
imul
cmp
mov
push
mov
iret
and
lahf
cmc
fiadds
jb
push
pop
xchg
jne
mov
cmpb
pop
rcll
dec
incb
mov
pop
cmc
imul
pop
and
xchg
mov
pop
and
ret
into
aaa
clc
inc
sahf
mov
jb
int3
xor
mov
in
test
cld
roll
and
cmp
add
inc
cmp
fs
adc
push
cmpl
scas
repnz
into
push
lods
xor
add
stc
lock
jg
xor
mov
sbb
mov
stc
loop
cld
xchg
subb
sub
loope
mov
adc
cmp
xor
jge
les
push
xor
inc
mov
mov
or
mov
in
mov
cmp
addr16
jmp
shrl
je
and
nop
popf
inc
test
inc
es
adc
call
xor
outsl
sub
pop
lcall
lret
push
push
or
fs
ljmp
mov
lret
push
sarb
jne
lock
sahf
ds
adc
xchg
ds
in
sbb
jb
test
aad
inc
fnstenv
mov
xor
jne
adc
dec
ret
stos
rolb
cltd
add
imul
push
xor
sub
push
mov
and
xchg
out
ja
test
add
inc
mov
pop
std
clc
adc
call
cmp
xchg
out
imul
dec
xor
lods
jle
jbe
and
shl
cmc
xchg
fiadds
ds
pop
insl
dec
fs
loopne
popa
nop
sarb
test
add
lods
cld
sub
dec
add
dec
out
jp
arpl
xchg
mov
cmc
gs
jbe
add
or
jbe
cld
mov
rorb
dec
push
pushf
inc
lock
sub
sbb
cwtl
iret
ret
in
cmp
orl
outsb
and
sbb
into
mov
mov
adc
icebp
dec
sub
jne
arpl
mov
sar
inc
aam
and
pop
cltd
add
and
or
jg
mov
dec
adc
add
sti
cld
scas
lods
adc
jmp
cmpb
mov
sub
pop
mov
out
int3
insb
mov
mov
jg
lods
push
cmpsb
in
add
jns
mov
jmp
iret
sbb
stos
dec
mov
into
dec
mov
adc
adc
and
jne
mov
fs
cmp
lret
push
cmp
push
iret
add
out
dec
dec
jmp
shl
xorb
daa
mov
int
push
push
fistpll
aas
aas
stos
pushf
sahf
jbe
inc
les
cmp
push
cs
out
jge
mov
mov
xlat
push
inc
scas
sub
adcb
push
mov
ret
cmp
and
sti
jnp
mov
divl
mov
pop
lret
loop
push
in
add
jmp
scas
dec
and
into
popa
lahf
mov
or
pop
push
and
push
jecxz
mov
insl
ficomps
call
insl
cmc
xlat
cmp
push
inc
jecxz
mov
out
das
mov
stos
pop
adc
into
cmp
in
jecxz
cmp
fildll
lcall
mov
push
pop
inc
lea
or
jb
lret
or
pop
inc
mov
popf
sarb
push
loop
jb
sar
xor
push
cmc
int
iretw
jns
xlat
jno
cmp
bound
addl
mov
push
jne,pt
sub
jo
ja
lea
add
loopne
inc
mov
xor
cmpb
xor
cmpb
mov
dec
test
push
xor
push
xchg
xchg
cmp
icebp
mov
out
mov
fmul
inc
lcall
ret
mov
inc
cmc
nop
subb
sbb
pop
xor
sbb
scas
push
lds
fcoml
push
aam
xchg
mov
push
and
lea
or
cwtl
mov
imul
dec
mov
jns
and
jle
xor
or
mov
dec
test
xorb
mov
cld
fmuls
fldt
ja
pop
loopne
jp
nop
hlt
adc
arpl
pop
mov
out
fisubl
jge
pop
out
jle
mov
dec
adc
and
lea
dec
xchg
jecxz
lods
bound
jne
andl
mov
dec
adc
aad
inc
lods
popa
jp
push
mov
je,pn
inc
inc
xor
movsl
mov
cli
les
fcom
loopne
test
sbb
xchg
ds
addl
aaa
mov
add
push
out
add
test
dec
repz
out
into
adc
aam
mov
sub
jmp
jne
repnz
push
ret
sarb
call
into
inc
xor
stos
sbb
addb
aam
dec
sbb
out
mov
mov
in
data16
and
std
mov
outsb
dec
adc
je
jmp
mov
xchg
into
test
xchg
mov
data16
jg
push
xchg
push
mov
jne
jns
pop
pushf
outsl
aam
mulb
xchg
jge
lds
adcl
inc
fsubl
outsb
xchg
nop
or
add
clc
pop
jno
aas
jne
int
loopne
cmc
outsl
pop
mov
test
pop
es
cmc
sbb
xor
add
pop
lock
out
cmpb
mov
pop
mov
or
pop
pop
xchg
push
cmc
out
int
out
popa
dec
and
jge
sbb
je
add
xchg
popa
mov
notb
jp
dec
mov
xchg
hlt
cmp
mov
or
mov
xor
xchg
jg
gs
jbe
mov
pop
mull
test
arpl
mov
lods
insb
stc
mov
loopne
mov
filds
addb
out
jo
mov
jne
fwait
jge
cmpb
push
or
pop
push
addb
push
cmp
cli
sti
out
test
fisubs
xor
rclb
std
iret
and
jb
cmp
pushf
into
clc
ret
mov
popf
and
cmc
lock
and
insl
sub
nop
hlt
adcb
ds
mov
adc
jb
sub
mov
push
cli
int
out
add
cmc
jb
scas
mov
mov
jnp
int3
insb
jne
mov
adc
pop
lods
add
ret
lods
imul
adc
sub
cmp
adc
dec
dec
sbb
push
cmp
scas
cltd
mov
in
pop
inc
cmc
mov
test
xor
jae
add
xor
aaa
mov
push
xchg
aas
push
mov
add
mov
sub
insb
aad
jmp
adcb
mov
iret
add
and
mov
popa
sahf
out
into
xchg
jne
pop
in
loop
es
int
add
jno
xchg
mov
repz
bound
mov
rclb
in
sbb
ret
cmp
cmp
push
jmp
adc
iret
mov
cmc
mov
xor
lret
mov
aam
out
dec
sub
stc
push
pop
dec
aaa
call
mov
fbstp
jnp
cltd
std
mov
push
lea
sbb
out
aad
cmp
dec
xor
movsl
clc
scas
loopne
mov
clc
aam
repnz
pop
cmc
je
push
mov
mov
or
add
jp
jmp
cmp
shrl
into
inc
inc
sti
sbb
and
jecxz
test
jecxz
mov
pop
sub
push
sub
mov
pop
clc
shlb
jns
movsb
jge
mov
in
fcmove
and
pop
notb
aam
mov
sar
pop
pop
adcb
adc
lcall
dec
push
cmp
int
jo
jo
adc
xor
xor
lods
divb
enter
push
daa
jne
outsb
addb
lea
enter
xchg
mov
mov
aaa
lods
repz
mov
push
stos
movb
jp
xchg
popf
or
int3
lret
push
and
lods
loop
fs
jl
jmp
ds
jbe
ljmp
xchg
dec
aaa
ja
xchg
ds
jg
and
test
pop
imul
repz
cmp
clc
xchg
pop
ds
add
fadd
fwait
sahf
mov
addr16
jns
imul
and
mov
mov
js
addr16
testb
lea
lcall
xchg
test
loope
cwtl
outsb
jb
shl
and
xchg
test
inc
mov
fsubl
sub
push
mov
pop
mov
mov
dec
lahf
xlat
ret
jne
enter
and
add
out
push
stc
mov
jmp
call
stos
lret
and
lods
push
jne
mov
inc
movsl
pop
mov
cmp
xchg
and
mov
insb
jmp
aad
xor
sub
and
out
js
imulb
scas
mov
push
inc
and
mov
jne
sbb
js
sub
mov
loopne
xor
adc
push
inc
jo
mov
xchg
and
mov
jb
addb
xchg
xlat
test
xor
sbb
int3
mov
xchg
xlat
mov
fidivs
insl
rcrb
imul
pop
aam
ja
jnp
or
jb
mov
sbb
fildll
imul
fdiv
xorl
or
xchg
mov
sbb
jmp
in
pop
hlt
into
mov
mov
mov
cmpsl
lcall
pop
out
pop
xor
outsb
loope
inc
icebp
iret
orl
test
mov
push
imulb
jne
out
fcomp
insb
negl
push
shlb
mov
add
pop
pusha
lahf
in
push
xchg
test
jns
repnz
pop
out
into
nop
leave
psrad
jge
xchg
pop
in
push
sbb
jmp
mov
outsb
cmpsl
int3
test
out
dec
cmc
test
add
pop
aam
lahf
lea
jp
xchg
mov
push
xor
inc
stc
insb
gs
movb
or
out
ret
pop
push
mov
jg
dec
sahf
pusha
add
test
sar
push
aam
mov
imul
push
and
mov
divl
xor
xchg
add
push
cmc
out
shr
into
adc
mov
pop
jmp
imul
andb
xor
xor
inc
je
lods
push
or
push
add
es
into
sub
shl
dec
mov
dec
xor
lahf
fldt
movsb
and
mov
or
jno
xor
jne
mov
jl
sub
aad
in
jle
sub
addr16
std
cmp
cmc
mov
add
sbb
fisttpll
push
testl
adcb
daa
add
sub
cmp
aad
sbb
cmpsl
iret
sbb
inc
inc
ja
in
inc
cmp
cmp
dec
push
mov
jno
mov
jne
lea
xchg
mov
jae
cmp
das
mov
insb
pop
and
sub
bound
sti
popf
mov
jle
out
aad
fldcw
repz
enter
jle
test
or
ljmp
and
movsl
dec
or
push
andb
mov
movsb
icebp
fistpll
fnstcw
rclb
push
dec
mov
and
sbb
insl
aaa
xor
or
rorb
ss
sub
dec
filds
dec
repnz
test
cs
scas
lock
fidivrl
iret
xchg
mov
sbb
inc
mov
daa
pop
into
add
xlat
into
xchg
jne
sarl
outsl
mov
sbb
mov
idivb
in
mov
das
inc
mov
lret
sub
pop
cmc
sub
sbb
push
sub
pop
leave
add
scas
inc
loope
add
sub
dec
mov
adc
and
sbbb
jne
and
insl
jnp
mov
pop
and
ficomps
mov
pop
inc
insb
push
xorb
inc
bound
jb
fisubl
add
sub
jne
cmp
adc
xchg
sbb
test
into
sbb
push
push
jbe
rol
pop
aas
mov
adc
xlat
mov
push
mov
mov
cs
xchg
sar
xor
ret
movsb
outsl
push
cmc
inc
or
test
add
movsb
data16
adc
lcall
shll
fisubl
testb
das
adc
and
xchg
loope
push
push
cmc
aaa
pop
push
rcrb
icebp
cmp
sub
out
dec
jle
lock
cmc
ja
daa
add
ja
ret
mov
jne
int3
jne
sbb
movsl
mov
aas
mov
shlb
ss
iret
les
mov
arpl
jecxz
arpl
out
icebp
test
xchg
xchg
into
fs
scas
lahf
mov
push
mov
stos
push
add
iret
jno
or
test
fucomi
push
mov
ret
sbb
mov
lret
js
push
lods
ficomps
pop
mov
jbe
push
daa
lods
js
and
adcl
test
daa
lcall
call
clc
into
stos
in
or
loope
mov
gs
cmpl
enter
hlt
jl
add
jmp
mov
leave
mov
ud0
aaa
cmc
out
inc
inc
xor
incl
xchg
jge
xor
mov
mov
aam
xchg
xchg
mov
mov
cli
xchg
stos
cli
pop
xor
or
shll
movsb
inc
mov
jne
aad
lods
mov
mov
je
aas
mov
add
rclb
sbb
std
mov
repnz
jbe
xor
lret
aad
aas
out
mov
add
movsl
in
mov
mov
mov
mov
popa
in
push
daa
lods
mov
pushf
into
pand
push
xchg
pop
lret
in
mov
dec
scas
jo
xor
imul
add
sub
mov
arpl
jg
xor
add
mov
dec
cli
mov
jnp
stc
and
ret
adc
adc
std
jecxz
das
jo
inc
repz
mov
ljmp
sarb
stos
cmpb
adc
out
xor
pop
add
rclb
divb
xchg
xchg
adc
add
lods
addb
or
into
das
outsb
or
das
adc
mov
mov
pop
into
out
jle
mov
rolb
in
icebp
cmpsb
ret
jne
rclb
add
pushf
movl
nop
pop
ja
into
cld
aam
mov
lahf
cmpsb
cltd
inc
jno
stc
into
lds
ja
js
jg
or
into
inc
cmpsl
mov
jbe
add
mov
adc
mov
lret
into
mov
xchg
gs
jle
and
lock
sbb
push
jmp
cmp
mov
pop
ss
mov
clc
xorl
es
sbb
cmp
jnp
pop
push
dec
xor
jp
hlt
imul
dec
stos
mov
ja
imulb
cmpsb
test
lock
ds
movsb
stos
in
xorb
mov
mov
mov
sbb
jno
add
and
lods
mov
popf
into
int3
push
mov
shlb
stc
xor
xor
push
xor
scas
repnz
dec
addr16
ds
or
aad
mov
inc
xchg
ss
jmp
jnp
int3
or
into
jp
mov
cmp
aad
cmp
aad
test
dec
add
lret
cmp
push
inc
push
pop
xlat
pop
or
cmpb
xor
pop
jnp
inc
dec
add
cli
dec
cmc
xchg
xchg
arpl
and
fwait
mov
jnp
in
mov
flds
add
scas
gs
movsb
push
jg
push
test
int3
cmpsl
jle
dec
mov
fwait
cmpsb
testb
xorb
sub
mov
or
add
pop
dec
inc
int3
mov
dec
int3
jge
jmp
mov
jne
addl
stc
push
push
sbb
add
pusha
pop
mov
and
lea
fsub
xchg
xchg
jmp
cs
and
cmp
ds
jl
cmpsl
sub
and
or
cmc
or
in
fsubl
push
test
pusha
mov
push
mov
mov
rolb
or
pop
in
mov
jnp
mov
xor
adcb
mov
dec
inc
push
sbb
mov
mov
ret
rclb
insl
inc
mov
bound
loope
aas
test
pop
adc
shr
data16
add
lret
add
mov
mov
mov
pop
cmpsl
loopne
push
orl
mov
cltd
xchg
daa
dec
fsubl
outsl
mov
or
insl
mov
jne
fcmove
sbb
insl
cmp
mov
stc
stc
pop
std
and
divb
mov
cli
xchg
je
popf
dec
xor
xchg
xchg
mov
leave
inc
sub
xchg
inc
icebp
incb
stc
orl
push
in
inc
ss
mov
dec
push
js
out
xor
dec
insl
dec
pop
flds
push
xlat
cmp
mov
xchg
xorb
or
adc
add
leave
push
inc
ss
push
mov
adcb
fwait
sarb
xchg
dec
jno
cwtl
sbb
jbe
mov
push
out
rcrb
add
jecxz
insb
pop
stc
gs
sbb
sarb
bound
in
jo
push
aad
das
push
in
rcrl
in
ficompl
leave
les
adcb
pop
cmpl
xor
adc
jle
mov
mov
sub
cmp
shlb
pop
xchg
fsubr
inc
lods
test
aam
jl
gs
icebp
mov
scas
fwait
mov
int
mov
adc
fcompl
jl
int3
and
jne
xchg
pop
cmpsl
movl
cld
or
call
jne
lahf
adcb
cmp
cmp
jecxz
adc
rolb
and
mov
and
and
mov
jge
dec
xchg
sahf
fisubrl
jbe
inc
mov
rclb
bound
add
ds
sbb
pop
shlb
stos
les
insl
inc
cli
rcrl
mov
mov
and
push
rol
xchg
xchg
xor
mov
cmc
xor
cmp
sub
pop
rcrb
in
mov
insb
jno
les
orb
jne
pop
dec
xchg
mov
cld
and
cwtl
xor
sbb
xor
or
enter
imul
sbb
test
jno
cmp
lock
dec
adc
and
mov
pop
xlat
and
adc
loope
in
inc
out
push
fnstenv
push
cmp
mov
jnp
and
push
es
xchg
xchg
jge
mov
adc
xchg
nop
or
hlt
pushf
push
filds
add
cmpsb
dec
out
and
jnp
jecxz
lea
bound
mov
dec
ljmp
mov
jmp
aad
into
testb
iret
out
xchg
into
xchg
fs
xchg
loop
cmp
cmc
pop
in
push
fildl
jb
ds
aad
mov
mov
in
xchg
inc
jo
push
pop
cmc
pop
push
bound
pop
dec
jl
je
xor
in
stos
lcall
jmp
ja
jp
add
push
or
push
xchg
inc
pop
nop
push
mov
dec
rcl
test
popf
dec
adc
popa
fldt
das
xor
je
out
add
sbbl
cmpw
fdivs
xlat
out
sarb
and
lods
ret
jmp
sub
fcomi
stc
pop
xchg
add
scas
pop
adc
test
inc
mov
repnz
and
jmp
jge
jne
xor
bound
mov
out
ret
or
push
mov
cmp
mov
scas
add
mov
ds
dec
adc
nop
rcl
daa
ret
xchg
mov
sub
xchg
lahf
xchg
push
adc
das
mov
in
xchg
movsl
mov
pop
mov
pop
inc
sbb
and
fcoms
ror
sub
jns
inc
sbb
jmp
sbb
movsb
pop
dec
scas
inc
sub
into
cltd
xchg
and
add
pop
mov
jmp
mov
fsubl
sub
jecxz
aaa
add
pop
ds
sbb
push
cltd
in
das
mov
nop
jnp
pop
xor
aam
mov
ret
es
mov
insb
insl
cmc
roll
test
mov
xchg
add
subb
dec
in
cmp
aaa
sbb
jp
push
int3
inc
cmpl
loope
lret
rcl
sbb
push
mov
xor
dec
sarl
iret
push
js
mov
shll
das
out
fwait
pushf
mov
inc
int
scas
mov
pop
xchg
subl
orl
xchg
fwait
loop
mov
pop
mov
ja
ss
push
sub
lret
add
loopne
dec
mov
pop
jge
movsb
dec
and
nop
out
enter
clc
xchg
cmpsb
push
loope
inc
xchg
inc
fwait
mulb
sbb
pop
and
xchg
cltd
cmpsl
adc
mov
dec
lds
mulb
push
jo
or
loop
cltd
js
fldt
test
adc
xor
jns
idivl
push
mov
push
xchg
push
jb
addr16
sbb
scas
adc
sub
cmc
jecxz
sbb
je
mov
sbb
scas
sub
daa
movsb
sbb
xor
ljmp
fisttps
int3
mov
fisttps
fldenv
jmp
dec
cmc
addr16
lret
test
dec
mov
clc
cs
lock
add
into
mov
pop
aas
ja
xchg
fwait
enter
leave
hlt
loope
dec
jo
mov
insb
gs
imul
dec
cmpsb
mov
cmp
push
test
cltd
sbbl
adc
lret
sub
test
mov
or
call
add
test
xchg
mov
fwait
xchg
ret
xchg
sahf
lds
popf
cmc
add
and
test
call
mov
movb
orl
loope
fisubs
xchg
xor
add
es
adc
decb
jbe
popf
and
sub
stos
daa
cmc
adc
adc
xor
fildl
pusha
mov
adc
push
cwtl
dec
fmull
ds
add
add
xchg
mov
lock
clc
jne
push
inc
cli
dec
test
fstpl
push
jge
sub
call
clc
mov
clc
jge
clc
hlt
xchg
lock
sbb
lcall
jns
mov
xchg
out
andl
lcall
or
dec
js
adc
xchg
mov
or
mov
xor
rolb
cmp
aam
dec
mov
push
loop
inc
ds
call
cs
lret
cmp
jmp
out
jo
push
aas
loope
sub
cwtl
pop
push
xor
jmp
sbb
lret
xchg
outsl
popa
stc
push
add
inc
pop
outsb
iret
xor
imul
add
push
mov
jp
call
cs
add
ret
dec
js
xchg
add
lahf
xchg
or
mov
iret
shlb
cmc
mov
dec
lret
fisttpl
ljmp
test
imull
add
mov
dec
aaa
int
in
dec
out
mov
pop
and
ret
cltd
lcall
iret
ds
cld
ljmp
lds
out
push
jne
or
scas
fnstsw
xor
adc
test
jle
ss
lcall
orl
hlt
jnp
sbbl
xchg
lret
push
inc
into
js
cltd
mov
mov
outsb
pop
enter
pop
adc
dec
loope
out
ja
mov
xor
insb
js
mov
arpl
dec
negl
hlt
stos
fnstenv
mov
das
imul
ret
dec
add
outsb
gs
or
dec
cmc
xchg
rcrb
dec
shlb
andb
in
lahf
and
mov
mov
mov
mov
adc
or
mov
sbb
add
das
enter
add
sahf
and
xchg
mov
cmp
les
nop
aas
lret
mov
pop
xchg
outsb
divl
inc
arpl
ret
add
add
stos
xor
xchg
int3
inc
sti
dec
out
inc
scas
mov
xchg
pop
mov
push
scas
loop
insl
mov
xchg
pop
add
xor
mov
and
in
cmc
push
dec
faddl
iret
mov
outsb
push
and
ret
rolb
in
dec
cmp
cmc
js
cwtl
or
popf
sbb
mov
add
pop
jne
loop
je
lahf
or
dec
pop
cs
popa
add
fisttps
mov
ret
sub
sarb
dec
call
cmp
dec
or
add
in
mov
jne
or
push
fnsave
push
inc
aad
movsl
mov
sub
dec
push
jb
push
jno
shr
fdivrl
cmp
mov
jmp
adcl
cmc
testb
daa
and
fmuls
cld
out
add
jno
mov
push
pop
and
daa
nop
ljmp
cwtl
push
dec
outsl
dec
jo
jo
scas
xchg
mov
pop
mov
push
dec
adc
out
mov
test
sbbb
loop
mov
push
dec
mov
push
js
mov
xlat
jne
or
sbb
xorb
test
dec
mov
and
cwtl
rcl
mov
sbb
cmpsl
pop
aas
popa
xchg
stos
shrl
cwtl
jnp
pusha
and
jbe
cmc
or
cmpsb
sbb
outsl
outsb
xchg
icebp
andb
push
cmpsb
enter
arpl
sbb
cld
roll
add
jne
addr16
movsb
pop
mov
jp
mov
add
xor
fucom
loopne
push
out
nop
inc
neg
add
filds
dec
and
add
and
fidivrs
xorl
mov
xchg
subl
jbe
iret
pop
scas
leave
fwait
and
and
pop
jg
xor
aaa
push
push
push
cltd
and
push
fildl
cmpsb
fidivrl
sbb
fs
mov
jmp
sbb
fidivl
jne
or
outsl
pushf
xchg
jg
add
xchg
loope
sub
jno
dec
int
pop
xchg
mov
int3
rcrl
jl
testl
fcoml
lret
pop
cmp
jne
ja
pop
pusha
shll
imul
scas
js
dec
je
mov
adc
add
mov
add
fs
add
cli
nop
add
jbe
add
in
xchg
add
pop
nop
add
adc
add
pop
xchg
add
xchg
xchg
add
and
add
hlt
popl
add
add
mov
nop
add
xchg
popl
add
xchg
add
adc
add
xchg
add
cmp
add
inc
xchg
add
push
nop
add
mov
xchg
add
lods
popl
add
add
push
xchg
add
enter
sub
add
rorb
add
jp
add
cld
xchg
add
cmp
add
in
add
sahf
nop
add
sahf
xchg
add
in
add
add
add
ficoms
add
adc
add
out
xchg
add
add
add
scas
xchg
add
into
xchg
add
add
add
movsb
xchg
add
les
add
jbe
add
fcoml
add
pop
xchg
add
adcb
add
add
add
xchg
add
pop
xchg
add
adc
add
xchg
add
and
add
add
add
add
xchg
add
cmp
add
sahf
xchg
add
cmpsb
xchg
add
cs
add
notb
add
jl
add
xchg
xchg
add
jp
add
insb
xchg
add
fcoms
add
xchg
add
lods
xchg
add
adc
add
or
add
out
add
mov
add
mov
xchg
add
lret
add
add
add
add
add
add
je
add
add
add
add
inc
add
add
xor
inc
add
push
inc
add
add
mov
add
add
mov
add
lods
test
add
or
or
pop
push
ss
push
push
dec
jbe
push
inc
addr16
outsb
outsl
dec
jno
outsl
jne
xor
imul
inc
dec
ja
push
xor
popa
xor
dec
inc
gs
dec
inc
bound
push
inc
dec
push
dec
imul
dec
aaa
jo
push
ja
bound
dec
dec
xor
js
dec
push
insb
dec
jp
insb
xor
push
inc
push
add
add
fs
dec
imul
jbe
fs
ja
push
xor
xor
cmp
xor
inc
xor
jne
dec
inc
bound
bound
inc
inc
popa
pop
outsb
dec
inc
arpl
arpl
dec
dec
push
pop
outsl
js
push
dec
jae
pop
inc
dec
insl
push
push
push
popa
dec
js
xor
push
push
push
dec
js
jp
popa
cmp
pop
dec
push
push
outsb
imul
dec
js
push
imul
cmp
imul
je
inc
bound
push
push
xor
insl
outsl
jp
aaa
cmp
pop
dec
inc
push
insb
push
push
xor
aaa
pop
dec
dec
inc
cmp
jae
jbe
pop
jb
inc
ja
xor
push
inc
xor
dec
xor
js
pop
dec
fs
push
push
dec
dec
pop
fs
ss
je
push
xor
jo
push
push
xor
push
inc
outsl
xor
jo
insb
inc
dec
push
arpl
dec
bound
dec
fs
dec
push
inc
inc
insl
inc
imul
push
add
inc
outsb
pop
imul
aaa
push
dec
dec
push
ss
push
push
jno
popa
xor
arpl
xor
jo
xor
push
inc
pop
inc
jp
ss
inc
xor
dec
xor
dec
jp
imul
push
inc
push
insl
dec
jns
aaa
pop
addr16
push
jbe
arpl
dec
insb
cmp
dec
push
xor
xor
dec
insb
dec
pop
pop
dec
inc
cmp
push
jo
inc
add
add
inc
add
dec
add
inc
add
je
add
add
add
jne
push
addr16
xor
dec
cmp
push
jns
popa
jno
jae
push
imul
js
imul
jne
jns
push
addr16
pop
imul
push
push
inc
jp
bound
push
inc
ja
dec
push
arpl
push
xor
dec
pop
pop
jbe
outsb
jno
push
push
js
dec
push
jns
dec
inc
ss
inc
insb
jno
insb
jns
jp
jbe
popa
outsl
inc
jb
jp
inc
dec
addr16
push
je
imul
bound
jb
inc
xor
js
push
push
dec
inc
dec
dec
dec
push
push
pop
push
imul
add
add
imul
inc
je
inc
push
jp
jbe
jae
inc
inc
push
jae
cmp
dec
xor
pop
inc
push
push
inc
push
inc
push
inc
dec
dec
jne
push
arpl
arpl
inc
outsb
inc
xor
push
inc
push
push
xor
imul
dec
push
inc
push
xor
insl
inc
jns
push
pop
push
xor
jno
aaa
inc
arpl
xor
xor
outsb
pop
jp
jns
imul
pop
pop
cmp
cmp
add
add
and
je
arpl
jne
fs
arpl
jp
pop
inc
bound
jo
inc
dec
xor
inc
jp
gs
aaa
outsb
jp
inc
inc
xor
dec
xor
push
xor
push
xor
jne
push
push
cmp
add
xor
insb
jae
outsl
je
arpl
dec
cmp
xor
pop
inc
cmp
xor
push
push
addr16
inc
xor
push
bound
gs
jne
dec
insl
dec
dec
xor
jo
aaa
jae
xor
pop
push
inc
push
inc
outsl
bound
push
inc
inc
push
push
push
jns
dec
xor
jns
pop
pop
aaa
push
inc
dec
jp
dec
inc
addr16
ja
xor
push
xor
jno
dec
jns
push
pop
bound
js
bound
pop
jae
ss
dec
push
dec
xor
dec
jo
ja
dec
arpl
insl
jo
push
xor
gs
dec
push
xor
push
inc
outsl
dec
inc
jns
xor
xor
push
aaa
jp
je
xor
inc
imul
add
add
ja
xor
jae
inc
push
cmp
jbe
jns
add
xor
dec
xor
jp
jno
pop
add
add
cmp
add
cmp
xor
xor
xor
add
xor
jbe
js
imul
cmp
add
push
jne
insl
pop
inc
cmp
xor
dec
push
push
fs
pop
dec
dec
jb
dec
push
outsb
xor
js
jb
push
cmp
jo
arpl
dec
inc
push
outsb
dec
push
gs
cmp
arpl
js
inc
push
xor
dec
inc
xor
pop
push
dec
xor
add
add
xor
jne
inc
push
push
push
gs
inc
aaa
inc
jbe
push
inc
insb
push
inc
pop
jp
dec
inc
arpl
push
xor
inc
jns
pop
inc
add
jp
fs
outsb
xor
inc
push
jp
jo
inc
jo
je
cmp
jne
dec
je
push
outsb
push
dec
push
outsb
js
imul
pop
bound
push
inc
push
jns
jo
push
jo
pop
xor
push
cmp
push
dec
jbe
popa
fs
pop
inc
inc
js
push
js
push
inc
push
xor
inc
inc
push
dec
push
inc
aaa
js
bound
gs
addr16
xor
jno
jp
jno
gs
cmp
jbe
jb
outsl
jp
inc
pop
inc
push
jo
cmp
jns
fs
arpl
push
addr16
jo
addr16
addr16
push
dec
outsb
pop
xor
dec
gs
xor
aaa
push
pop
push
push
imul
dec
dec
dec
inc
insb
push
ja
dec
jb
insb
dec
jae
ja
insl
ja
xor
jp
dec
jns
push
push
bound
inc
je
fs
xor
je
ss
push
inc
bound
xor
xor
add
inc
bound
jne
inc
jns
push
jbe
cmp
inc
push
jb
push
jne
imul
add
add
popf
lea
fidivrl
mov
inc
push
add
pop
dec
push
data16
inc
popa
pop
dec
inc
popa
inc
jne
jbe
add
or
popa
xor
jae
dec
gs
jae
inc
pop
arpl
xor
inc
push
inc
outsl
push
jb
popa
jo
dec
imul
inc
pop
inc
imul
popa
push
dec
push
outsl
imul
push
ja
push
jb
insl
dec
jp
dec
arpl
dec
outsl
cmp
cmp
ss
cmp
fs
imul
push
jae
xor
dec
pop
insb
inc
inc
jbe
push
dec
jne
aaa
push
je
jae
xor
inc
outsl
popa
xor
push
push
pop
dec
push
xor
push
push
inc
pop
je
jbe
imul
inc
imul
push
xor
push
jno
je
xor
push
outsb
bound
xor
xor
imul
xor
insb
push
xor
push
xor
push
fs
push
dec
add
add
test
adcb
dec
jge
dec
loope
dec
ja
outsl
js
dec
dec
pop
jne
inc
imul
inc
bound
dec
dec
xor
jbe
jbe
jo
jp
ss
push
js
jb
dec
inc
xor
js
cmp
ss
pop
outsl
push
outsl
inc
bound
inc
jne
dec
jae
js
imul
dec
fs
cmp
jno
imul
push
push
push
dec
insl
dec
dec
jne
jbe
je
jne
push
cmp
inc
inc
inc
pop
popa
push
insl
imul
dec
cmp
push
dec
dec
js
inc
insb
jne
dec
jp
inc
je
push
aaa
addr16
pop
push
imul
inc
xor
push
outsb
pop
jo
dec
xor
gs
outsl
jbe
jae
xor
jo
inc
aaa
dec
data16
dec
ss
aaa
inc
push
aaa
je
pop
dec
fs
xor
push
inc
add
add
ss
jo
inc
jbe
xor
jne
xor
pop
inc
xor
jno
inc
xor
dec
pop
dec
push
push
dec
xor
jae
insb
cmp
addr16
dec
addr16
inc
imul
push
dec
imul
imul
inc
gs
xor
jae
bound
cmp
xor
js
add
add
andl
mov
test
mov
ret
gs
mov
stos
dec
inc
fiaddl
scas
and
jl
loope
je
cmp
fwait
jbe
xchg
push
adcb
movsb
movsl
inc
add
push
imul
call
lds
sbb
sahf
and
out
dec
mov
pop
and
les
rcr
popf
inc
fdivrl
mov
aaa
or
push
out
sbb
cmpsl
pop
pop
mov
dec
push
and
and
push
lahf
loop
add
dec
out
jecxz
and
pushf
jo
fimuls
or
repz
cwtl
mov
and
xchg
sub
les
push
pop
loope
or
and
lock
out
inc
loop
mov
movsl
insl
lods
cmp
aad
push
mov
rcr
lea
fbld
mov
lahf
dec
insb
cltd
arpl
push
xor
notb
cmp
popf
in
test
adc
call
add
fs
xchg
int3
out
ret
inc
pop
jle
cmp
pusha
das
pop
add
lods
mov
ret
and
sarb
jb
sub
lahf
aad
jo
mulb
dec
popa
aaa
push
ljmp
add
fcmovne
xor
dec
fwait
mov
cmpsl
mov
inc
jne
sbbb
stos
and
outsl
mov
addr16
aaa
aas
jmp
mov
hlt
test
in
ljmp
pop
das
in
in
test
ret
inc
enter
subb
leave
add
test
push
dec
sbbl
repnz
cmp
dec
xchg
push
pand
mov
leave
dec
fimull
movl
jo
inc
popa
xor
mov
dec
cmc
push
mov
xor
fidivrl
mov
xor
push
or
sub
dec
dec
jae
aam
jp
movsb
notl
add
mov
mov
lock
vminps
push
mov
jl
lcall
mov
repnz
nop
call
xchg
dec
adc
loope
sbb
or
jnp
or
movl
cmp
mov
jecxz
adc
std
cmc
push
stos
mov
ficompl
sbb
fisttpll
mov
and
sahf
pop
adc
aad
xorl
sub
idivb
mov
pop
pop
pusha
xor
mov
add
xor
cmp
mov
mov
ljmp
xchg
mov
popa
data16
xchg
jp
mov
pop
es
xor
ja,pt
iret
inc
xor
sbb
bound
mov
mov
jns
add
nop
in
sub
xchg
dec
sub
dec
mov
std
jae
fwait
shrl
js
cwtl
mov
pusha
mov
sbb
jno
or
xor
pushf
int
test
mov
add
cli
test
push
repz
add
lret
mov
scas
mov
testb
mov
push
mov
pop
dec
rolb
enter
aas
or
test
push
rolb
popa
cmc
call
push
xor
mov
lret
jne
fdiv
es
fsubrs
dec
imul
cmp
ja
in
bound
jns
iret
stos
xor
xor
add
push
ja
or
inc
dec
icebp
mov
xchg
lods
movsb
sub
mov
mov
into
ret
jmp
or
cmp
xor
mov
roll
inc
lahf
sarl
loop
test
mov
imul
xchg
cli
les
stos
mov
add
xchg
xlat
pop
stos
xchg
mov
pop
xor
mov
ss
add
scas
in
mov
fcomip
jp
mov
insl
xchg
lods
into
int
jne
mov
dec
and
push
and
outsb
mov
jbe
out
cmp
add
xchg
aam
lret
scas
lret
gs
or
loope
sub
inc
add
ds
loopne
push
push
mov
mov
das
inc
insl
inc
jne
mov
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
jb
popa
je
push
push
add
add
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
add
inc
imul
je
imul
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
gs
je
dec
jne
gs
add
add
dec
outsl
popa
fs
imul
js
add
add
inc
gs
imul
imul
jns
add
add
dec
jne
je
inc
jns
gs
outsl
push
imul
add
inc
outsl
jb
popa
je
gs
popa
addr16
add
add
inc
jb
popa
je
inc
imul
jns
add
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
inc
insb
jne
push
jb
arpl
outsb
inc
popa
arpl
add
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
add
jb
jo
outsb
push
add
add
outsl
bound
inc
gs
gs
inc
je
insl
add
add
push
gs
outsl
jbe
inc
imul
jns
add
add
inc
gs
imul
popa
je
add
add
inc
gs
jns
je
insl
inc
imul
jns
add
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
jb
outsb
inc
add
add
dec
gs
jo
imul
inc
gs
gs
imul
add
dec
outsl
popa
fs
imul
add
add
push
jb
je
inc
imul
je
inc
dec
inc
push
add
add
dec
jae
popa
insb
imul
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
add
inc
imul
outsl
push
jns
je
insl
push
imul
inc
imul
je
imul
inc
insb
outsl
bound
push
gs
insb
insb
outsl
arpl
add
push
gs
outsl
jbe
inc
imul
jns
add
add
inc
insb
outsl
bound
dec
popa
outsb
fs
add
add
push
gs
push
push
jb
outsl
jb
je
add
add
jae
je
jbe
outsb
je
add
add
outsl
bound
inc
jb
add
add
insb
jae
jb
outsb
push
add
add
push
insb
jae
insb
insb
outsl
arpl
add
add
je
gs
jo
imul
add
add
inc
insb
outsl
jae
dec
popa
outsb
fs
add
add
je
outsl
insl
jo
je
jb
popa
insl
gs
add
add
inc
gs
jns
je
insl
inc
gs
jne
je
inc
dec
inc
add
add
inc
gs
gs
inc
imul
inc
push
dec
xor
cs
insb
add
add
dec
outsb
imul
push
arpl
imul
imul
add
push
gs
outsb
jne
push
popa
insb
jne
inc
add
add
addr16
jo
outsb
dec
gs
js
add
add
outsl
jae
push
gs
imul
insb
add
add
dec
jae
popa
insb
imul
add
push
jae
push
outsl
imul
jb
jbe
insb
gs
add
inc
jb
jo
inc
arpl
imul
gs
push
add
add
dec
jo
outsb
push
gs
imul
inc
dec
xor
cs
insb
add
add
gs
je
inc
outsl
insl
jo
je
bound
imul
add
arpl
add
add
push
gs
jb
jae
dec
jb
inc
js
add
push
gs
imul
inc
js
inc
js
add
add
je
imul
addr16
js
add
add
je
popa
jo
outsl
fs
add
inc
imul
add
je
insb
imul
add
dec
outsl
jbe
push
outsl
inc
js
add
add
arpl
jae
bound
dec
push
push
inc
push
push
cs
insb
add
add
pop
pop
addr16
popa
imul
add
pop
pop
jo
pop
insw
outsl
fs
add
gs
je
add
add
jae
outsl
jne
add
add
jae
je
popa
jo
pop
je
jo
add
add
pop
pop
jo
pop
arpl
insl
outsl
fs
add
pop
outsl
outsb
gs
je
add
pop
pop
ja
gs
popa
imul
add
inc
push
xor
cs
insb
add
add
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
add
push
imul
outsl
arpl
add
add
je
imul
outsb
add
add
push
outsb
jb
imul
popa
jae
inc
add
add
dec
gs
popa
addr16
gs
add
push
gs
outsl
jbe
dec
outsb
jne
add
add
outsb
inc
insb
imul
add
add
arpl
popa
imul
outsb
add
add
inc
jb
popa
je
push
imul
inc
add
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
add
outsl
ja
imul
add
push
imul
outsb
outsl
ja
gs
popa
addr16
add
add
inc
outsb
jne
push
imul
add
inc
gs
inc
add
add
ja
arpl
inc
js
add
add
je
insb
addr16
je
insl
push
gs
push
add
add
arpl
insb
addr16
jne
je
outsb
add
add
dec
gs
popa
addr16
outsl
js
add
add
je
imul
add
imul
add
add
je
imul
js
push
add
add
inc
gs
jne
dec
outsb
jne
add
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
je
imul
jb
popa
fs
jb
arpl
jae
add
add
push
gs
imul
popa
arpl
outsb
je
add
add
imul
jae
addr16
add
add
push
gs
jne
jae
jb
push
inc
push
push
dec
dec
dec
cs
insb
add
add
je
imul
outsl
outsb
dec
outsb
outsw
push
imul
inc
xor
cs
insb
add
add
dec
outsb
imul
inc
js
add
add
xchg
add
js
add
pusha
addb
fcoms
add
add
add
mov
addl
add
add
xor
add
sub
add
add
add
notb
add
dec
cwtl
add
jo
add
test
add
inc
xchg
add
hlt
addl
add
add
cld
addl
add
xchg
add
fs
add
cli
nop
add
jbe
add
in
xchg
add
pop
nop
add
adc
add
pop
xchg
add
xchg
xchg
add
and
add
hlt
popl
add
add
mov
nop
add
xchg
popl
add
xchg
add
adc
add
xchg
add
cmp
add
inc
xchg
add
push
nop
add
mov
xchg
add
lods
popl
add
add
push
xchg
add
enter
sub
add
rorb
add
jp
add
cld
xchg
add
cmp
add
in
add
sahf
nop
add
sahf
xchg
add
in
add
add
add
ficoms
add
adc
add
out
xchg
add
add
add
scas
xchg
add
into
xchg
add
add
add
movsb
xchg
add
les
add
jbe
add
fcoml
add
pop
xchg
add
adcb
add
add
add
xchg
add
pop
xchg
add
adc
add
xchg
add
and
add
add
add
add
xchg
add
cmp
add
sahf
xchg
add
cmpsb
xchg
add
cs
add
notb
add
jl
add
xchg
xchg
add
jp
add
insb
xchg
add
fcoms
add
xchg
add
lods
xchg
add
adc
add
or
add
out
add
mov
add
mov
xchg
add
lret
add
add
add
add
add
add
je
add
add
cltd
stos
sub
mov
dec
push
dec
xor
je
data16
adc
sub
lret
mov
rorl
dec
test
mov
subb
fsubl
add
jnp
inc
inc
inc
push
jge
ret
xor
in
scas
mov
lods
mov
sbb
mov
jno
fldt
jae
insl
push
adc
sbb
fisttpll
mov
sti
lcall
inc
aas
sti
mov
cmp
mov
jmp
scas
outsl
and
or
loopne
push
jmp
inc
lock
mov
pop
sti
push
adc
pop
clc
mov
cmc
and
ret
adcl
ljmp
lds
rep
add
mov
out
pushf
out
dec
sahf
stos
jg
mov
sub
push
popa
loopne
inc
bswap
shrl
sahf
sbb
and
jmp
into
mov
icebp
dec
jp
aam
and
outsl
fs
adc
lahf
test
xchg
rol
add
cmpsl
jmp
mov
jecxz
sbb
mov
rcr
mov
push
xchg
mov
cmp
test
cmc
into
fldl
cmp
pop
lahf
cld
into
lret
movsl
es
js
xchg
loop
popa
jmp
add
inc
mov
clc
lcall
pop
jae
lret
in
mov
jne
lea
or
mov
out
add
mov
lret
into
add
mov
mov
mov
mov
cltd
jne
ljmp
pop
nop
xchg
std
in
cmc
cltd
ljmp
dec
xchg
or
add
outsl
insl
std
jne
aaa
paddd
sub
xchg
clc
and
and
sbb
mov
test
loope
out
jno
xchg
les
mov
xchg
sub
movsb
rcll
and
ljmp
add
xchg
insl
cmc
in
jne
das
cmp
xchg
adc
sub
mov
mov
xchg
std
mov
xor
imul
cmp
sub
mov
shll
or
hlt
inc
sahf
andb
call
mov
jns
fwait
aas
int3
mov
jb
pop
mov
dec
push
xchg
cli
xorl
pushf
xor
loope,pn
lcall
aas
mov
mov
rcrl
jne
mov
jbe
mov
xor
mov
dec
mov
aam
mov
into
into
mov
out
pop
inc
fimull
rcl
shll
into
inc
cld
adc
inc
jns
ret
xchg
outsb
ret
out
cmp
sbb
aam
fadds
sbb
repnz
dec
imul
sub
cmc
inc
or
or
mov
xchg
inc
pushf
fwait
test
mov
jle,pt
lea
jbe
inc
dec
mov
sub
add
leave
fcmovb
popl
inc
pop
jns
stos
mov
pusha
dec
sub
fucomip
sbb
stos
in
xchg
jne
outsl
inc
push
or
mov
jbe
inc
add
xchg
inc
push
xchg
ljmp
shrl
pusha
das
cmp
xor
add
scas
mov
jmp
enter
aad
adc
movsb
inc
adc
cmp
fisubrs
or
fnstenv
add
lret
jne
cmp
loopne
push
inc
fsubl
cmc
and
xchg
stc
test
jecxz
std
cmc
xchg
mov
xorb
push
lret
cmpsb
out
mov
daa
iret
push
inc
cmp
sbbl
into
or
add
fisubl
cmp
mov
xor
push
negb
adc
out
imul
add
pop
mov
jnp
sub
push
subl
xchg
adc
jecxz
push
stc
lds
xor
jbe
push
stos
cmp
outsl
cmp
xor
mov
lret
add
cld
adc
xchg
add
and
mov
xchg
xorl
into
fst
fdivrs
outsb
mov
imul
push
jle
mov
mov
xchg
in
jg
movsb
imul
cmpb
jns
jnp
push
and
sub
into
mov
mov
fisttpll
jp
sbb
jle
add
dec
push
scas
movsb
sbb
cs
nop
xchg
lods
fdivs
push
iret
fstpl
imulb
out
into
imul
testl
push
or
jne
in
out
jne
ds
push
mov
xchg
adc
sbb
sub
inc
out
jmp
into
fcmovnu
mov
mov
pop
pop
imul
ret
mov
aam
inc
dec
cmp
leave
repnz
inc
lcall
popl
into
mov
push
addl
cmp
and
xchg
jecxz
sarl
push
enter
decl
stos
jbe
in
dec
mov
dec
lcall
mov
sub
rorb
sub
xchg
jns
or
cli
mov
add
jl
int3
xchg
rep
es
leave
pop
xor
mov
inc
popf
cmpsl
inc
jle
iret
es
imul
into
ja
pushf
push
cli
dec
pusha
imul
test
popf
cmc
or
adc
lods
mov
movsb
push
push
and
iret
into
shll
lcall
arpl
adc
cmp
add
pop
fxch
into
sub
or
and
into
sub
inc
dec
dec
sub
pop
xchg
and
mov
fbstp
cmp
dec
daa
aam
insl
jmp
les
mov
mov
dec
pop
jo
shll
bound
sarl
ret
adcb
test
xchg
rcr
sub
cmc
xchg
push
cwtl
aad
insl
or
inc
dec
out
inc
jl
fcoml
push
and
cwtl
inc
call
hlt
ja
and
mov
cmc
cmp
and
out
xchg
movb
fstpt
jecxz
mov
cltd
xchg
ret
aaa
sub
test
aad
insl
les
dec
aas
mov
stc
push
mov
lods
dec
cmp
xchg
mov
dec
iret
jb
leave
fcmovne
mov
bound
shlb
inc
jae
push
loop
iret
dec
and
out
and
mov
push
pop
cld
push
xchg
mov
xchg
xacquire
mov
lret
sti
into
test
leave
lret
pop
or
cmc
push
mov
loopne
dec
aad
lcall
loopne
adc
imull
xchg
xor
mov
aas
mov
call
loope
idiv
mov
cmc
popa
inc
bound
out
inc
xchg
adcb
push
pop
push
pop
pop
inc
cmp
popa
out
and
in
xor
mov
ljmp
clc
push
xlat
mov
cmpsb
es
clc
mov
je
inc
gs
mov
cwtl
loop
lcall
pop
or
js
add
call
and
divb
dec
iret
and
aad
fs
mov
loopne
outsb
not
push
je
mov
dec
or
jmp
sub
push
es
xchg
loop
sub
adc
fldt
mov
xchg
subb
loopne
lahf
mov
lds
into
inc
and
subl
cmc
mov
add
jg
add
xor
xor
shll
cld
into
lret
ret
jge
mov
jge
push
jl
in
je
in
xor
jbe
mov
and
fbld
pop
iret
sbb
lahf
into
and
into
inc
inc
cmp
hlt
leave
dec
lret
aaa
push
fnsave
int
xor
test
cltd
adc
mov
or
pop
mov
mov
ss
into
pusha
inc
jle
das
insb
fsub
mov
push
cs
xchg
iret
and
sub
jo
jb
and
subl
fildl
dec
popf
mov
stc
mov
ss
nop
jnp
rolb
inc
cmc
mov
sub
stos
loop
stc
pop
dec
ja
sub
push
xor
jg
rolb
mov
cltd
mov
adcb
xor
repz
push
aad
pop
mov
sbb
xlat
and
pop
pop
jne
aad
jg
jne
test
push
das
popl
scas
imul
jle
jno
add
and
into
sbb
xchg
jbe
or
jnp
insl
sti
mov
mov
jp
and
loopne
inc
loop
jne
pop
sbb
sti
enter
lds
jns
mov
mov
sub
fnstcw
cmp
into
xor
insb
push
jecxz
mov
adc
popa
jge
mov
lock
cmp
test
push
or
nop
sub
push
mov
stc
popf
sbb
push
cmp
mov
out
add
lods
xchg
and
cmpsl
pop
sti
clc
cmp
shl
jno
cmc
rolb
gs
add
push
xor
nop
or
sar
mov
push
dec
add
mov
and
cli
xor
sbb
push
mov
popa
cltd
test
mov
xor
stos
js
rorb
aad
mov
dec
fwait
scas
mov
movsl
das
imul
xor
aaa
mov
mov
add
add
das
ljmp
or
xor
fisubrs
popa
add
mov
mov
aaa
aad
push
mov
pop
or
sbb
aaa
mov
mov
repnz
pusha
push
push
icebp
into
and
in
mov
sub
xchg
jne
nop
lea
insb
mov
mov
push
xchg
inc
fisttpll
in
rorl
and
nop
jo
into
loop
je
das
hlt
xchg
std
into
push
jns
popa
inc
pop
push
mov
dec
xchg
jle
jne
pop
xchg
test
sub
fldt
rcll
fs
add
and
iret
add
adc
dec
pushf
into
test
lds
xor
add
cmp
and
adc
mov
testb
jae
add
inc
and
test
or
sbb
ret
into
and
pop
jns
std
inc
insl
adc
mov
aam
fidivrl
cmp
ret
adc
adc
insb
call
mov
xchg
in
inc
adc
lock
push
or
xor
ja
mov
xchg
movsb
add
sub
jecxz
and
and
outsb
xchg
cltd
int3
inc
xchg
jne
cmp
mov
add
ret
push
xchg
bound
jnp
and
pop
sub
jne
enter
je
pop
je
jo
adcb
sbb
aad
push
out
test
fcompl
jmp
jne
mov
mov
into
sbb
adc
fmulp
insb
es
repz
pop
pop
fwait
cmp
sbb
adc
cmpb
out
dec
mov
cmp
jl
test
or
hlt
jle
mov
lds
popa
filds
dec
add
push
xchg
es
mov
movsl
and
aaa
rorb
int
scas
cmp
xor
pop
and
je
daa
pop
cmpsl
dec
mov
mov
out
jg
adc
sbb
dec
inc
lds
loope
mov
lds
cs
adc
or
cmp
push
ja
dec
rcll
pop
adc
and
xchg
dec
lret
or
fildll
jns
rcrl
push
cmp
in
push
bound
fisubs
iret
out
add
and
loop
mov
into
into
xchg
mov
test
sbb
xchg
cmp
lds
mov
out
outsb
and
jle
cmp
mov
dec
jns
out
and
outsb
rolb
pop
xchg
and
push
lea
lret
lahf
mov
inc
or
jne
push
popl
icebp
loope
jg
push
gs
fwait
into
adc
shll
lahf
jno
mov
mov
and
jg
and
jbe
adc
pop
inc
ja
xchg
cmc
xchg
insb
dec
popa
sub
mov
addb
mov
and
add
jbe
leave
adc
mov
xchg
push
mov
je
inc
mov
xchg
cmc
out
sbb
les
push
aad
add
mov
adcl
or
or
in
push
jne
xchg
push
das
ja
pop
iret
fimuls
sarb
pop
es
dec
je
imul
insl
aaa
xchg
pop
sbb
mov
sub
in
fldl
mov
fbld
pusha
sti
xchg
lahf
imul
jle
and
or
daa
push
sahf
popf
mul
pop
push
mov
pop
clc
xchg
push
orl
or
push
sbb
repnz
clc
cld
lea
mov
xchg
out
idivl
out
add
ret
push
pushf
jl
and
cmp
cs
mov
sbb
mov
or
rolb
pop
repz
mov
mul
lret
es
adc
push
xchg
pop
xlat
cltd
loop
dec
outsl
cltd
ret
adc
push
mov
stos
xchg
sbbb
ror
fistps
xlat
xor
popa
pop
repz
and
mov
xchg
jne
outsl
shl
xchg
int
movb
decb
xchg
cmp
sub
mov
sarb
sbb
push
ss
aad
imul
jnp
leave
aad
pop
shrl
pop
jne
enter
cmc
pusha
sub
pop
pop
adc
test
push
fiadds
fidivrl
jecxz
xchg
and
add
inc
adc
fs
jae
imul
lret
iret
loope
jmp
into
fstl
pop
addl
into
es
pop
jge
mov
lahf
out
pop
jecxz
add
jp
in
mov
cs
out
out
jmp
inc
shll
popl
push
repnz
aam
dec
fstpl
cmp
xor
fistps
xchg
sarl
mov
pop
jg
sub
xor
cmp
shlb
jne
sbb
adc
add
cmpsl
and
sub
movsb
andl
fsts
push
ds
xlat
adcb
mov
mov
add
jb
into
inc
mov
mov
mov
mov
pusha
or
ljmp
mov
leave
subb
sub
into
jmp
out
sub
flds
or
test
mov
and
rcrl
andl
mov
push
jge
cmpsb
imul
inc
scas
mov
arpl
ja
mov
daa
xor
repnz
out
fimuls
lcall
int
mov
roll
mov
shll
arpl
inc
cltd
push
addb
test
mov
mov
jmp
popa
mov
push
jnp
dec
push
fbld
popa
xchg
mov
lcall
push
into
sbb
pop
sti
and
test
jne
fwait
and
out
addr16
mov
cmc
mov
cwtl
xchg
mov
ret
mov
cmp
cmp
out
sub
into
and
lods
clc
pop
mov
dec
and
push
adc
jne
jne
mov
adc
push
cmc
icebp
cmp
rolb
sbb
dec
cld
into
lods
xchg
mov
aas
icebp
enter
outsl
std
add
xchg
adc
test
pop
stos
push
jo
mov
mov
inc
std
xchg
add
xchg
fsubs
pushf
xor
lea
ds
mov
push
inc
jne
in
sub
mov
sarl
jne
fisttpl
xchg
stos
fstps
dec
push
and
pop
sub
xchg
lret
adc
inc
sub
lea
jp
fisttps
xchg
hlt
popa
fistl
out
jnp
sbbb
in
dec
mulb
sub
clc
jno
ja
rol
xor
scas
shrl
add
mov
dec
pushf
sub
and
and
out
daa
lods
mov
lcall
mov
push
std
mov
ljmp
leave
inc
mov
movsb
mov
ret
pop
mov
mov
jbe
adc
adc
nop
scas
and
std
mov
push
xchg
sub
pop
in
or
xor
mov
xorb
and
dec
shlb
orb
inc
cmpsb
addr16
int
dec
sti
loopne,pn
mov
push
sub
cmc
orb
dec
rolb
pop
inc
jne
mov
or
adc
cld
ljmp
mov
xchg
into
sub
adc
lret
popa
xchg
aam
pop
mov
jp
btcl
jo
dec
add
lods
cmc
dec
adc
xchg
mov
int3
inc
mov
div
push
aad
insl
gs
mov
sub
div
xchg
sub
sbb
xchg
cs
or
lcall
and
fimull
fcoml
jge
jmp
jle
add
mov
cmpsb
dec
imul
jmp
push
xchg
jns
imul
out
mov
loop
jne,pn
mov
ljmp
sbb
mov
pop
jecxz
dec
inc
pop
imul
jle
stc
mov
icebp
xchg
pop
lods
push
call
popa
lahf
movsb
mov
jne
add
insl
dec
iret
adc
adc
aad
stos
inc
shlb
push
cld
testl
sbb
fdivr
mov
pop
and
xchg
aad
push
pop
jo
or
add
mov
outsb
cmp
adc
and
sbb
pop
mov
cld
and
nop
gs
test
xor
jle
icebp
daa
popf
mov
mov
pusha
adc
mov
jne
push
mov
je
cmp
add
es
test
dec
push
push
loope
and
or
test
jecxz
jge
sub
mov
sarl
xchg
lcall
ds
arpl
out
xchg
xchg
jbe
call
ljmp
cmc
bound
add
jge
add
sub
mov
add
adc
cmc
jge
lds
push
outsl
dec
cmc
fwait
stos
push
loop
paddsw
pop
imulb
nop
cmc
daa
xchg
xorb
jge
dec
iret
ja
int
xor
adc
add
and
dec
mov
or
xor
mov
repz
into
fidivrs
pop
push
lods
push
pop
pop
xchg
and
xor
jo
xor
inc
sub
sti
mov
out
or
cltd
and
xchg
or
pop
rol
inc
pushf
jo
sti
sti
aaa
xor
shrl
iret
xchg
mov
jnp
push
push
orb
mov
and
fs
idivb
jne
lods
cmovo
adc
jmp
adc
or
stos
pushf
outsb
push
add
nop
pusha
mov
imul
orl
ds
or
popf
mov
fs
int
pop
lret
or
cmc
adc
adc
jmp
and
rorl
cmpsl
mov
or
insb
lods
sub
xchg
dec
cmpsl
pusha
pop
sub
add
jb
cmp
sbb
aaa
inc
lock
aad
out
cltd
add
dec
xor
inc
fstpl
nop
xchg
sbb
sub
cli
mov
pop
fchs
xor
mov
mov
arpl
int
cmp
shll
cmp
outsb
mov
dec
fidivs
js
inc
push
dec
adc
inc
add
jo
and
mov
sub
mov
dec
pop
inc
cli
sub
test
cli
xor
add
ja
fildl
or
dec
into
push
pop
cli
xor
mov
sub
mov
and
mov
mov
jbe
inc
inc
lahf
div
jns
xor
and
sub
scas
adc
insb
mov
jno
testb
add
xchg
push
mov
ficoms
sahf
pop
iret
inc
aam
sti
shl
add
xchg
in
push
adc
repz
sahf
call
dec
lea
stc
iret
add
pop
mov
sahf
dec
nop
cs
stos
and
sbb
arpl
out
lret
loop
popa
xor
in
cmp
inc
inc
add
in
mov
ret
movsb
cs
ljmp
pop
ljmp
neg
xor
stos
mov
cltd
xchg
and
cli
sub
into
jg
gs
mov
inc
pop
sub
sub
ret
fiadds
inc
adc
push
leave
ds
mov
mov
xor
xchg
pop
sbb
inc
xor
mov
inc
dec
xorl
aam
jo
jbe
lock
mov
test
pusha
mov
or
out
fwait
cmc
xchg
orb
mov
in
pop
out
ret
lahf
inc
pusha
fisttpl
inc
cmp
mov
sub
cmp
mov
push
rcll
cli
lods
mov
dec
sub
inc
and
jae
sub
mov
shl
sbb
arpl
add
pop
push
pusha
xchg
jne
insl
subl
add
roll
in
pop
or
or
push
and
mov
cli
test
xchg
push
shl
out
xor
adc
push
or
pop
add
dec
cmc
xchg
cmpsl
sub
fmul
mov
cmp
or
pop
stos
aam
sarb
and
add
js
jns
fidivrs
pop
orb
or
pop
mov
test
test
xchg
je
lock
daa
sub
lahf
imul
idiv
mov
jmp
pusha
add
sbb
xor
cmc
lods
pop
push
jb
push
cmp
mov
rorb
mov
jmp
mov
mov
xor
mov
pop
cmp
sbb
les
imul
or
mov
dec
incb
rolb
push
lret
add
aad
push
mov
pop
popa
push
xor
sbb
pop
aas
inc
repz
adc
test
loop
jecxz
mov
fdiv
cmp
adc
daa
adc
pop
sub
cmp
mov
xor
xchg
mov
gs
ds
mov
jb
push
or
mov
pop
adc
cwtl
sbb
cwtl
repnz
push
cltd
into
pmullw
aaa
lret
movl
jb
jnp
mov
and
insl
mov
ud0
pushf
popf
add
out
push
adc
xor
cmp
movsb
cmp
push
mov
mov
fs
jne
in
ljmp
ja
ljmp
xor
mov
push
ja
movsl
xchg
jae
cld
xor
inc
mov
and
sbb
pop
ret
sub
dec
dec
and
mov
push
dec
pop
lea
dec
sub
fidivl
cltd
mov
push
pop
add
jne
leave
adc
dec
fisubrl
jecxz
test
push
insb
aam
ss
clc
stos
and
ds
mov
nop
hlt
sub
push
cmc
xor
sbb
mov
ja
jno
mov
pop
pop
mov
je
je
enter
dec
fisubl
mov
adc
dec
cmp
sub
dec
jne
xor
sub
mov
fadds
adc
insl
gs
fwait
mov
std
test
mov
lahf
mov
inc
repnz
jae
cmc
dec
mov
test
aaa
popf
mov
es
jne
sub
mov
mov
mov
cltd
cwtl
pop
dec
cmpsb
subb
dec
xor
cmpsl
int
loope
aaa
les
notb
adc
jne
mov
je
rorl
addb
neg
push
dec
out
or
inc
int
mov
pop
imul
jns
mov
sar
cmpsl
or
mov
jne
cmc
mov
mov
xchg
sub
mov
out
mov
adc
mov
in
cmp
xlat
dec
or
mov
mov
mov
dec
shrb
in
push
pop
mov
out
mov
in
pop
mov
push
nop
lahf
jno
mov
dec
inc
inc
stos
and
sbb
cmc
hlt
fsubrl
mulb
dec
dec
mov
aam
mov
sub
and
inc
pop
push
xchg
icebp
dec
inc
rorb
into
scas
das
add
addl
daa
fwait
lods
add
aam
xchg
mov
cmc
int
add
xor
sub
or
popf
cmc
sub
mov
pop
test
mov
cmp
xchg
inc
insb
jmp
sbbl
aas
popa
jmp
xor
dec
sub
insl
push
loope
cltd
dec
cltd
pop
mov
add
gs
ljmp
lea
rol
dec
stc
jb
jp
lods
mov
loop
jmp
icebp
mov
inc
in
mov
in
cmp
push
jecxz
enter
ja
push
xor
movsb
je
test
push
outsl
cmp
add
jp
imul
dec
hlt
cltd
cltd
fwait
insb
adc
fstpl
out
shl
sbb
pop
movb
ret
cmc
mov
fucom
imul
js
push
shll
mov
xchg
cmp
rcrl
push
rep
mov
ss
jg
jle
inc
outsb
cmc
cmp
sub
ret
cmp
daa
pop
push
fsubl
mov
sub
in
into
add
dec
out
adc
adc
mov
nop
or
and
mov
jno
push
jbe
int
dec
dec
in
lcall
jne
push
push
add
xchg
sbb
dec
fsubl
pop
jbe
sbb
and
mov
dec
pop
cmpsb
push
jl
loop
imul
rorb
push
mov
push
int
les
out
les
inc
lret
pop
xchg
pop
clc
push
cld
xor
outsl
out
insb
std
stos
in
dec
mov
sbb
js
insl
jns
dec
mov
movsb
mov
push
fnsave
call
cmp
cmc
xchg
and
jle
inc
fs
cwtl
ja
mov
aaa
test
adc
dec
push
test
scas
aam
scas
popa
xchg
jne
jb
lock
sbb
cmp
popa
xchg
lret
sub
in
and
lds
push
stos
shlb
inc
fidivl
addl
add
insb
stos
pop
sub
mov
and
push
push
sbbb
mov
xlat
into
sbb
movsb
repnz
in
pusha
push
adc
cmp
push
shlb
mov
mov
push
lcall
gs
jo
mov
pop
clc
shll
out
xchg
jne
shll
shll
neg
mov
xor
into
cli
shrb
xchg
sub
icebp
jb
jne
and
sub
inc
jmp
dec
movsl
mov
ficomps
call
andl
mov
pushf
or
adc
lock
or
push
mov
test
jne
mov
ljmp
xor
add
inc
lods
out
mov
fcmovu
xchg
mov
aaa
push
and
leave
mov
jbe
negl
adc
mov
insb
test
mov
stos
popa
arpl
push
test
jb
mov
lock
clc
inc
mov
mov
cli
push
xchg
bound
xorb
jl
inc
pop
lds
popa
lods
fbld
test
pop
inc
cmc
xlat
aas
jl
je
das
jecxz
cltd
add
pop
push
adc
or
xchg
xchg
in
aaa
ficompl
sub
pop
lahf
into
pop
shrl
and
xor
jne
sbb
test
add
aam
fdivl
sub
test
xor
leave
popf
out
add
shlb
inc
mov
clc
bnd
into
jp
mov
or
push
adc
jbe
adc
dec
push
adc
dec
jne
fcoml
adc
bound
cmc
repz
cwtl
add
mov
stos
movl
push
aaa
int
jnp
setg
xchg
xchg
ret
mov
imul
mov
sbb
sarb
fsubrs
stc
fucomp
sub
add
jno
lret
cmpb
and
jno
enter
ficomps
scas
dec
bswap
popa
xchg
mov
pop
in
test
in
inc
xchg
mov
cli
inc
test
imul
jns
outsb
xchg
mov
mov
pop
cmp
xor
push
jne
mov
push
sub
mov
jl
mov
cmpsl
testb
lods
shrb
mov
iret
mov
aam
dec
pop
jecxz
ret
aaa
or
sub
insl
jne
popf
cmp
loop
jp
mov
pop
out
jge
sub
dec
cmp
sbb
pop
gs
imul
fs
push
fistl
mov
clc
sub
push
out
icebp
jmp
sahf
add
lcall
push
enter
arpl
in
sbb
mov
jno
and
jb
and
test
movsb
cmpsl
jbe
mov
pop
bound
mov
inc
arpl
add
pop
ljmp
push
adc
jle
add
dec
sub
int
dec
sarb
push
fcoms
mov
lret
cwtl
mov
fwait
jg
aam
popa
and
loope
sbbb
xchg
pop
cld
rclb
add
ret
fldl
mov
add
shll
cld
ret
xchg
adc
or
mov
jns
jo
jmp
loopne
jbe
popa
mov
adc
es
mov
dec
mov
mov
add
xchg
xchg
into
mov
push
pop
mov
pop
cld
mov
addr16
add
push
fdivs
imul
aam
dec
cmc
into
xchg
or
fs
lods
sbb
lds
out
jle
pop
in
dec
add
gs
cmpsb
stos
mov
xchg
insb
ror
clc
cmpb
inc
dec
icebp
flds
insb
mov
xchg
imul
mov
jl
lds
or
adc
mulb
lods
push
into
dec
inc
adc
out
insb
mov
cmp
jbe
sbb
stos
fistps
xor
xor
cmc
jb
repnz
xor
dec
idivl
lea
in
xchg
push
cmc
pop
push
mov
daa
popa
aaa
mov
lahf
jl
scas
fcomps
cmc
lret
lret
pop
in
loopne
nop
je
repz
mov
and
scas
pop
xor
jle
xchg
sub
mov
pop
fisttpll
push
mov
test
inc
enter
sbb
mov
jg
add
mov
std
cmp
push
mov
xchg
pop
adc
add
or
adc
stos
aam
es
loopne
call
sbb
mov
sahf
call
adc
inc
dec
adc
aaa
mov
jle
icebp
aaa
jne
or
pusha
mov
jo
inc
jne
push
sbb
sbb
je
pop
sbb
cli
cmpsb
xor
popf
out
pop
addb
roll
sub
push
mov
ds
les
ror
ffreep
data16
push
test
bound
insb
add
mov
or
adc
cmc
inc
divb
imul
out
aaa
jnp
add
rcrb
dec
mov
mov
nopl
mov
lcall
das
sbb
mov
cmpb
xchg
sub
dec
mov
lret
fcompl
push
add
sarl
das
mov
pop
mov
outsl
loop
and
xlat
sub
push
pop
and
je
mov
mov
pusha
mov
fistpl
clc
sahf
ljmp
hlt
into
loopne
cmp
sub
shrl
pop
aaa
cld
popf
mov
mov
mov
or
lahf
mov
adc
mov
jns
stc
into
call
inc
fldl
jne,pt
movsl
adc
cmpl
add
add
repnz
xchg
inc
fmul
mov
sbb
and
jns
pop
or
jb
mov
jp
pusha
xor
imul
ret
jno
divl
outsl
pop
push
daa
fmull
in
push
pop
push
stc
cmc
ret
cs
inc
jl
out
add
pop
mov
into
addb
cmp
add
cmp
sbb
or
mov
loop
mov
fs
mov
dec
std
add
popa
mov
es
mov
push
imul
ljmp
adc
xor
push
jo
add
lahf
mov
lds
flds
data16
adc
push
inc
in
dec
lret
jmp
cmpsb
ss
push
cmp
int
inc
adc
aad
subb
push
out
idivl
into
fs
mov
xchg
push
lds
fwait
xorb
mov
shl
or
das
mov
mov
inc
cmp
jl
push
jae
fwait
mov
dec
sub
ret
jecxz
jo
mov
scas
imul
jbe
jmp
and
adc
ss
jo
xlat
adc
add
scas
adc
in
mov
pop
popa
sub
mov
ljmp
push
pop
mov
cmpsb
shrl
xchg
inc
sbb
dec
xchg
in
xor
cwtl
pop
mov
lahf
mov
gs
push
lods
movsb
jp
xchg
push
aaa
push
xor
std
sti
xor
rclb
sbb
cmc
lret
out
add
or
dec
mov
arpl
xor
and
mov
and
notl
iret
pop
mov
hlt
outsb
imul
mov
push
testl
pop
popa
fsubrl
mov
int3
push
mov
out
mov
jmp
leave
repz
pop
repz
and
add
aam
ljmp
ret
aad
mov
lahf
jne
pop
lret
xor
sbb
rorl
andl
jo
rolb
push
mov
repnz
xchg
scas
mov
mov
adc
cmc
or
dec
out
jmp
sub
jb
xor
add
xor
loop
sub
mov
push
movsb
push
fstpl
sbb
adc
gs
jl
mov
enter
cmc
mov
out
shlb
jns
mov
popf
icebp
stos
adc
sub
push
push
pop
pop
mov
and
js
inc
push
dec
cmpsb
dec
cmp
add
dec
mov
mov
movsb
or
push
jecxz
jae
andb
insb
add
out
and
mov
das
outsb
iret
sbb
stos
cs
mov
adc
pushf
cmc
mov
xchg
cmpsl
adc
outsl
out
ljmp
sub
call
or
cmp
mov
lret
fiadds
dec
or
lods
in
add
js
add
push
mov
mov
jbe
xchg
cltd
lods
push
pop
mov
in
testb
mov
pop
mov
pop
add
loope
stc
pop
ljmp
stos
push
xor
add
test
jmp
loopne
in
add
push
mov
out
pushf
iret
repz
push
lahf
sub
lods
daa
ror
and
sbb
js
ss
xchg
xorb
fdivrp
dec
sub
es
and
adc
icebp
xchg
cld
test
in
lret
inc
adc
mov
jle
add
push
arpl
sbb
aas
popf
into
scas
and
and
imul
sbb
push
sub
mov
data16
mov
mov
fs
jg
push
mov
lcall
outsb
pusha
mov
test
pusha
pop
mov
test
sub
inc
iret
dec
and
lret
fidivrl
push
data16
inc
inc
add
test
adc
mov
and
mov
das
mov
fcoml
jmp
sub
and
adc
vpsrlw
scas
iret
pop
pop
and
nop
adc
test
pusha
jo
mov
cmp
lods
outsb
push
jmp
adc
test
int
repz
xchg
pop
loopne
pushf
xchg
push
arpl
add
aam
int
inc
sub
pusha
xchg
adcl
or
ljmp
lcall
pop
push
add
into
rcl
cs
and
xor
mov
jp
sahf
mov
jo
cmp
subl
mov
mov
mov
nop
cmp
into
ss
inc
ss
into
mov
dec
and
insb
cmpsl
test
outsb
outsb
out
push
adc
pop
cmc
into
xor
pop
inc
and
xchg
jnp
sti
cmovnp
lret
fldl
mov
and
xor
sbbb
push
adc
shlb
and
mov
jecxz
test
jbe
mov
data16
test
sbb
xchg
mov
nop
in
daa
mov
test
repz
lock
repnz
out
test
pushf
stos
insb
cltd
pop
gs
pop
dec
aad
int
imul
iret
add
movsl
xchg
cmpsb
sbb
push
fisubrs
dec
mov
add
xchg
in
pop
lcall
xor
and
lds
loopne
cmp
add
in
loope
lods
sbb
dec
data16
mov
divl
dec
sbb
xchg
jmp
jecxz
fnstsw
cltd
dec
sbb
sub
mov
adc
lret
cmp
into
inc
pop
cmp
mov
cmp
add
insl
shll
jp
sub
ret
cld
sbb
dec
cs
ja
and
push
push
push
push
and
xchg
and
adc
gs
rcrb
out
divb
lock
movl
test
test
dec
fscale
into
xchg
pushf
shll
sbb
mov
sub
jl
in
add
cltd
pusha
jmp
iret
out
repz
pop
cmc
mov
movsb
mov
fcoms
and
pop
pop
inc
call
xor
or
adc
dec
lret
add
pop
roll
adc
fisubrl
or
sbb
push
jnp
dec
cmc
inc
inc
xchg
mov
dec
push
jae
pop
addl
sbb
dec
push
dec
ja
insl
out
imul
or
mov
xchg
mov
mov
add
jnp
and
pop
push
lcall
mov
inc
pop
negb
add
bt
shll
in
mov
int
jne
mov
clc
add
dec
cmp
rorl
dec
sahf
or
notl
dec
pop
cmp
inc
xchg
jns
lods
sub
jb
rcll
rcrl
scas
and
sbb
xchg
scas
xor
dec
xchg
jno
loop
cld
and
push
sub
or
inc
sbb
testl
lods
or
out
ja
into
xorb
mov
icebp
jmp
mov
outsl
movb
das
xchg
je
mov
mov
rcrl
movsl
dec
test
mov
sub
jne
mov
push
addb
adc
push
pop
loopne
adc
jo
es
pop
mov
hlt
out
fwait
add
push
mov
xchg
cmpl
inc
iret
add
push
std
inc
xchg
cmp
jmp
jae
adc
cmp
cmp
fwait
cmpsl
cs
scas
jp
pop
or
xor
leave
xchg
mov
xchg
dec
push
in
jl
dec
mov
inc
sti
xor
fs
pushf
stos
popf
pop
fwait
xchg
dec
xchg
dec
sub
repnz
imul
aam
out
incb
in
jo
aas
test
mov
aad
in
inc
jbe
lret
jmp
push
arpl
jne
fsts
cwtl
xchg
enter
add
imull
sbb
mov
das
cmp
and
mov
out
jne
jae
sub
dec
andb
dec
inc
pushf
mov
je
fmull
or
add
pop
lahf
mov
mov
test
push
in
xchg
loop
iret
pop
data16
add
jmp
push
mov
orb
xor
hlt
inc
data16
sarl
jno
in
out
add
gs
mov
movsl
dec
xor
jge
out
mov
jae
int
adc
jns
icebp
cmpsb
mov
mov
mov
int3
mov
mov
pop
jns
mov
shll
mov
psllw
cmp
scas
push
cmp
add
cmp
jp
fistl
test
push
mov
sbb
ret
jb
lahf
fsubs
inc
std
dec
dec
adc
sarl
add
outsb
jmp
xchg
adc
das
lds
and
fists
mov
inc
push
mov
sub
xlat
call
inc
inc
ljmp
push
sub
int3
imul
js
jb
idivl
xchg
mov
cli
mov
in
fdivl
and
inc
aad
inc
mov
add
sahf
fwait
dec
fisttpl
pop
mov
imul
cli
cmpsb
mov
pop
mov
inc
data16
mov
pop
daa
addl
push
loope
inc
mov
jne
cmp
int
push
jnp
andb
movsl
lea
sti
dec
push
fisubrl
stos
cmpsb
and
mov
movsl
inc
cmc
mov
in
and
and
aas
adcb
lock
lods
jne
jmp
xchg
lahf
xlat
push
ja
pop
and
ja
pusha
cld
repz
std
iret
jmp
jnp
jge
daa
cmc
loope
sub
mov
inc
xchg
aaa
sub
push
mov
pop
fcompl
push
push
cli
out
mov
push
and
test
lahf
xlat
xchg
fildl
cmp
shlb
dec
sub
addr16
sub
or
mov
sub
out
into
stos
arpl
inc
mov
push
sbb
sub
imull
mov
lds
xchg
mov
das
adc
arpl
mov
enter
push
cmp
into
cmpsb
xor
lahf
mov
outsl
xchg
movsl
cmp
call
pop
and
push
sti
fdivs
mov
frstor
xchg
int
bound
xadd
shlb
mov
cmp
xchg
xor
mov
and
fistpl
jbe
in
add
out
sub
stos
into
out
cltd
mov
iret
mov
jg
xchg
incb
sub
test
shll
rcr
lds
mov
sub
add
push
roll
mov
cmpsl
mov
inc
dec
das
jmp
out
xchg
cmpsb
lock
fsubrs
imull
add
adcl
and
mov
repz
repnz
mov
call
enter
add
xchg
add
adc
mov
imul
sub
das
or
fadd
lret
repz
xchg
scas
dec
dec
and
xchg
fcmovnb
pop
add
lret
loope
mov
and
sub
je
pop
push
imul
imulb
mov
cmpsb
lods
leave
mov
mov
daa
cmp
popf
xchg
shlb
sbb
jecxz
mov
loopne
adc
inc
mov
mov
mov
adc
popf
andb
int
into
repnz
jmp
movsb
push
lcall
shlb
mov
shll
addb
lods
sub
cltd
inc
fwait
imul
xlat
sarb
aad
mov
lds
mov
ret
xchg
cmp
jl
lretw
imul
insl
cmc
rolb
popa
adc
and
mov
push
push
andb
add
add
fisttpl
mov
jnp
jmp
jge
nop
adc
add
lods
pop
out
hlt
or
outsb
jns
je
pop
jne
xchg
in
scas
aad
stos
popa
sbb
mov
out
push
xchg
ret
xchg
into
mov
and
mov
ret
sbb
cmc
std
sbb
xor
add
outsl
js
push
push
jae
xor
inc
aam
jp
lret
popa
daa
leave
dec
inc
xor
pop
cmp
pop
sub
xorl
or
mov
icebp
jp
add
jp
shl
out
jb
ficompl
jne
cwtl
pop
jg
aad
js
outsl
popf
push
into
in
cmp
popf
les
test
dec
mov
mov
cli
pop
dec
into
stos
inc
shlb
sarl
add
push
lea
mov
jns
and
dec
xchg
jne
flds
and
inc
sub
stos
mov
test
repnz
ss
dec
lea
mov
rcl
cmc
push
inc
call
sbbb
mov
xchg
pop
dec
jmp
xchg
mov
sahf
daa
hlt
xchg
or
std
shll
pusha
test
xor
mov
push
mov
aaa
insl
sub
mov
cmp
dec
dec
fsubrs
inc
push
data16
xor
mov
pop
das
and
dec
sub
add
icebp
lods
aam
test
cmpsl
xchg
sbb
cld
pop
mov
push
adc
cmc
xchg
jecxz
repnz
cmp
push
lret
xchg
pop
cld
add
insl
out
test
lret
test
icebp
mov
push
insl
pop
mov
enter
pop
sbb
daa
jns
dec
mov
sbbb
int
dec
fsubrs
stos
xchg
pop
push
lret
lcall
dec
push
test
jae
jns
push
cmp
test
mov
dec
jmp
loop
and
lret
adc
mov
mov
adc
xchg
les
and
das
cmc
and
lods
movhps
inc
sbb
xchg
xchg
mov
adc
xchg
mov
pop
aam
push
int3
sub
lahf
lret
mov
test
push
xchg
sbbb
mov
adc
out
dec
push
cmp
daa
pop
into
lea
and
xchg
cmc
call
icebp
inc
aam
mov
fnsave
roll
loop,pt
into
ljmp
push
sbb
jle
push
pop
aad
push
jnp
mov
mov
lea
or
or
out
or
jbe
ret
into
popf
imul
xchg
sub
andb
fcomi
movsb
int
fmulp
stos
out
xchg
inc
pop
les
mov
outsb
mov
cmc
out
or
jns
popf
push
rcl
inc
in
pop
and
fcmove
cld
jne
mulb
jbe
mov
subb
sahf
addr16
mov
push
sbb
cmp
jle
lahf
in
pusha
daa
out
out
cltd
pop
ja
outsl
rcr
dec
mov
enter
and
sbb
jne
xchg
repnz
and
scas
xchg
mov
xchg
into
inc
cwtl
loop
adc
xchg
cmp
xchg
xchg
xor
inc
lahf
mov
cmp
jne
shrl
mov
shlb
add
jg
cs
mov
push
mov
jmp
ds
and
ds
or
and
mov
fisubl
push
mov
or
dec
push
enter
cmc
mov
pop
icebp
sbb
pop
addl
push
xchg
ret
add
jp
ret
pop
or
test
jns
mov
push
jmp
cmc
xchg
jmp
xchg
out
int
cwtl
roll
repz
add
insb
add
or
push
in
in
inc
pop
jnp
inc
out
hlt
dec
dec
and
cmp
pop
push
icebp
sti
mov
into
hlt
call
out
pop
fdivs
popf
mov
fdivr
jns
andl
sbbb
sub
add
sbb
mov
xor
jns
aam
cltd
lock
addl
and
loope
sub
stos
cmpsl
mov
mov
pusha
xor
aas
cmpsb
test
sub
roll
jp,pn
push
mov
scas
jmp
sti
inc
dec
mov
jmp
dec
cwtl
pusha
cmc
test
fidivrs
mov
andb
push
filds
add
adc
cltd
dec
sub
aaa
jno
adc
leave
xchg
add
cmp
orb
fadds
inc
push
stos
pop
outsb
jne
stos
or
mov
jne
sbb
dec
js
jno
sub
add
pusha
cmc
jecxz
fs
fistps
stos
cmp
in
mov
push
cmp
mov
shll
call
xor
push
popa
push
loopne
xchg
addb
mov
inc
mov
in
jb
fs
scas
xorl
mov
cmc
mov
js
addl
hlt
aaa
cmc
popa
xchg
and
push
pop
call
add
sti
mov
inc
and
and
mov
jle
push
test
cmp
clc
mov
or
xchg
addr16
mov
shrl
xor
test
jo
insb
dec
fwait
test
and
pop
cmp
lea
pop
adc
jb
mov
aad
loope
and
ret
push
repz
lcall
lea
lret
mov
lds
movb
jmp
test
jl
je
push
lea
daa
andb
mov
movsl
dec
jne
in
lods
xor
cld
leave
popa
cmc
repz
push
mov
xlat
mov
nop
outsl
cltd
jg
pop
inc
iret
xchg
and
clc
sub
mov
mov
xchg
cld
or
sub
cmpsb
sub
sbb
push
rcr
out
dec
mov
add
iret
pop
push
lds
out
aam
jbe
pop
inc
push
dec
loope
out
and
push
out
and
loop
or
std
mov
insl
lea
jns
aad
cltd
dec
es
cmp
mov
into
in
loopne
iret
sbb
call
sarl
sbb
cltd
int
into
push
xchg
mov
add
lds
and
popf
arpl
cmc
ljmp
in
and
push
jp
outsb
push
shrl
adc
loopne
sbb
xchg
js
ja
inc
mov
sbb
lret
mov
adc
add
adc
into
pop
repnz
and
pop
cmp
jne
pusha
xchg
imul
ss
int3
inc
iret
cmp
sub
shl
das
sahf
ret
and
push
push
xchg
aam
in
add
cmc
out
pusha
sbb
jp
jmp
iret
push
inc
into
dec
lds
jns
dec
mov
add
ds
cmpsb
enter
xchg
xchg
sti
lock
mov
scas
pop
pushf
cmc
mov
daa
jnp
repnz
or
in
pop
jne
aas
jge
int3
addr16
test
add
sbb
cld
push
aas
push
aad
inc
stc
mov
fwait
mov
jo
leave
mov
dec
mov
xchg
pop
xor
add
mov
clc
out
add
pop
insl
push
call
aad
add
insb
loope
fcoms
mov
push
movsb
dec
loope,pt
push
jb
xchg
in
loope
inc
insb
add
push
ret
mov
sbb
fcompl
push
in
xor
push
test
pop
sahf
add
stos
pushf
xchg
cwtl
test
ljmp
mov
pop
mov
cmp
sbb
mov
loopne
loope
mov
jecxz
sbb
ja
mov
and
scas
and
pop
sarl
xor
jge
inc
mov
and
sbb
rol
cmp
mov
xchg
adc
and
lds
fildll
pop
xor
add
enter
repnz
push
sbb
fisubrs
sti
push
add
ds
cmp
mov
jecxz
mov
adc
out
inc
fstenv
outsl
and
lock
or
aad
lret
notb
push
mov
les
add
adc
dec
leave
xchg
add
xchg
xchg
xchg
pusha
push
push
mov
pop
and
inc
mov
adc
scas
int
xor
jp
mov
data16
inc
insl
sub
mov
lods
inc
into
ds
ret
hlt
inc
fucomip
xor
fcomi
jle
add
push
ret
daa
pandn
dec
cmp
adc
repz
sarl
out
or
cmc
mov
roll
enter
jp
add
stc
sub
push
mov
mov
cmc
pop
pop
xchg
dec
pop
in
ljmp
stos
fisttps
dec
push
jns
repz
ffreep
or
push
inc
idivl
sub
leave
nop
scas
sub
xchg
outsl
xor
lea
mov
stos
jg
pop
jns
hlt
mov
arpl
jne
mov
in
ss
xor
add
push
popl
jno
into
stos
xor
fisubs
cli
sarb
xor
inc
notb
push
ss
outsb
imul
jl
sbb
fwait
lret
aad
std
in
ljmp
add
mov
xchg
sub
jg
in
scas
mov
jnp
inc
mov
in
dec
add
dec
cmc
sub
xchg
cmp
add
lods
xchg
call
add
loope
inc
cmp
mov
inc
js
aaa
rcrl
push
cs
fmul
test
cmpsl
pushl
jne
popa
add
mov
jae
mov
or
jmp
and
dec
push
jno
or
dec
push
mov
jnp
adc
getsec
insb
cmp
shlb
jae
andb
push
mov
mov
pop
jno
int
js
fs
xchg
xor
lds
fcomps
pop
or
mov
mov
cmp
cmp
adc
aaa
xlat
test
aam
cmpsl
fstpl
mov
add
push
push
ret
cmc
xor
mov
mov
negb
mov
mov
in
sub
mov
cltd
xorl
arpl
aaa
das
arpl
sbbl
cmpsl
pop
push
add
xor
sbb
mov
lahf
adc
popa
iret
adc
leave
pusha
lods
shl
push
scas
add
std
out
jbe
push
push
std
mov
push
push
in
push
rcrb
xor
fimuls
push
sub
negb
inc
xchg
nop
int3
mov
into
or
pop
data16
ja
pop
fbld
jae
xchg
jecxz
cmc
mov
push
outsb
repz
into
insb
clc
mov
mov
xor
pushf
cmc
movsl
pushf
fisubs
or
out
push
mov
dec
pushf
out
bound
imul
mov
loop
outsl
inc
popa
inc
clc
mov
or
loop
jne
insl
mov
sbb
pop
lods
or
aaa
and
pop
mov
cmp
cltd
add
in
in
mov
mov
ds
xchg
fwait
into
mov
push
mov
jge
js
sub
or
cmpsb
fstpt
mov
adc
xor
loop
shlb
push
out
fidivrl
mov
fwait
push
or
decl
je
sahf
pop
sarl
xchg
mov
dec
jae
xor
cmp
xor
fs
lock
or
sub
push
push
pop
fwait
fwait
pop
js
cmc
jmp
aam
cli
push
adc
test
mov
jecxz
xchg
sbb
insb
jle
jle
adc
push
data16
jnp
jbe
subb
addr16
push
pop
sarl
mov
fisubl
stos
mov
test
insl
mov
or
clc
into
ret
sbb
mov
pop
mov
jmp
cmc
stos
ss
fdivl
jmp
arpl
sbb
xchg
mov
popa
sti
push
test
jge
and
daa
jns
fdivs
ds
iret
stc
xchg
fldenv
jnp
testl
add
mov
or
ds
cld
push
xor
aad
or
psadbw
lea
or
lods
sbb
cli
and
popf
and
and
xchg
mov
lcall
and
lods
jp
insb
pusha
addb
pop
loope
jp
test
add
lcall
fstl
movsb
inc
push
and
aam
enter
aaa
cmc
test
hlt
ret
mov
push
sub
dec
push
push
mov
mov
push
dec
lcall
inc
roll
jnp
data16
xchg
orb
xor
sub
jle
gs
ljmp
inc
cmp
mov
xor
outsb
push
jp
mov
mov
int3
into
dec
adc
sub
enter
clc
pop
jns
jp
mov
rcrl
mov
test
pop
shll
std
ficompl
push
cmp
int
or
pushf
popa
inc
out
ret
mov
cmp
and
outsl
xor
xor
or
jbe
femms
test
pop
shlb
and
in
adcb
adc
xchg
cmp
adc
pop
repnz
xchg
mov
rol
test
push
test
add
lds
mov
scas
imul
movb
fnsave
ja
mov
push
test
and
jne
insl
aaa
movsb
and
aad
xchg
xorb
xor
orb
jecxz
daa
cmp
out
cwtl
or
mov
and
pop
test
dec
mov
jp
ljmp
xchg
cwtl
and
sub
cmpsl
sti
ljmp
std
rclb
sbb
mov
jbe
dec
mov
pop
je
ss
pushf
sar
int
push
xchg
shr
fcomps
syscall
iret
sub
aam
add
loopne
in
and
cmpsl
push
fnsave
lcall
iret
cmp
mov
pop
mov
dec
out
repz
sarb
mov
cmc
mov
add
fs
mov
adc
js
dec
shll
out
int
add
jnp
jo
mov
sbb
loop
iret
jbe
jne
cmp
and
std
fs
push
out
leave
testb
add
sahf
je
nop
and
into
add
fwait
movsl
clc
stc
sbb
js
testl
mov
push
inc
xor
lods
fadd
push
jne
adc
sahf
test
in
stos
inc
or
sbb
cmp
xor
cmp
sbb
fs
sub
xor
sbbb
xorl
and
idivb
rclb
pushf
inc
je
inc
jae
sub
add
cwtl
pop
filds
inc
mov
es
jno
fisubrs
es
jl
add
xchg
cwtl
fstp
sub
xor
jne
pop
push
loop
jno
lret
fs
xor
sbb
jo
mov
add
add
popa
and
sbb
in
lds
jmp
test
mov
es
fdivrl
cmp
add
jl
ret
lds
mov
pop
lret
mov
out
mov
dec
adc
add
and
adc
test
mov
shlb
mov
out
dec
or
pushf
andb
jo
movsb
pop
add
repnz
orb
fnstcw
into
inc
ja,pt
sti
es
or
sbb
pop
dec
lds
mov
aad
sbb
add
mov
shl
adc
and
into
aad
sahf
adcb
xlat
frstor
pop
pop
jmp
cld
xchg
dec
add
lea
jbe
insb
inc
sarl
jns
push
xchg
sbb
call
jge
xchg
push
clc
jb
or
loop
je
ret
cmp
dec
and
jbe
repnz
jg
mov
mov
rcrb
cli
ss
repnz
in
into
jmp
hlt
add
cmpsl
cld
sbb
jb
dec
shrb
popf
sbbl
loope
sub
xor
pop
shlb
stos
push
sbb
push
jmp
ja
inc
push
andl
inc
jae
iret
es
fidivl
inc
idiv
scas
dec
sub
lret
cmp
xor
popf
in
lods
mov
mov
cmp
jb
sar
into
xchg
dec
pop
mov
xor
sbb
jns
push
jle
jbe
cmp
jns
aad
cli
push
push
loop
lret
fcmovnu
mov
loop
insl
push
test
push
cltd
pop
xchg
loop
mov
mov
rcrl
sbb
jb
sbb
fld
pop
call
test
push
add
and
add
mov
mov
sub
lock
push
scas
mov
or
pop
cltd
je
shr
fs
and
mov
jae
neg
iret
in
mov
push
mov
or
imul
mov
hlt
push
dec
mov
mov
mov
xchg
andb
dec
xchg
std
mull
push
ss
fistps
roll
adc
mov
xlat
repnz
mov
addl
jae
outsl
xchg
inc
rclb
aaa
test
mov
bound
into
mov
mov
popf
sbbb
or
idivb
int3
lods
ret
pusha
pop
andb
insb
mov
orb
sub
jl
movsb
pop
jbe
inc
popa
lds
adc
fsubrl
mov
xchg
push
mov
pushf
fdivrs
or
lds
movsb
movsb
and
pop
negb
sub
lret
loope
imul
add
stos
cltd
das
add
add
ficompl
into
cmc
cmpsb
inc
or
push
mov
add
dec
dec
in
mov
mov
sti
mov
lods
xor
inc
lahf
popl
inc
xor
clc
mov
out
repnz
sub
mov
jae
adc
adc
popa
ss
call
push
shlb
mov
inc
dec
fwait
push
movsb
insb
scas
into
sbb
imul
leave
inc
aas
jne
or
push
dec
daa
push
idivb
incb
mov
repz
pop
push
sub
roll
rorb
jb
jp
rcl
mov
add
hlt
inc
xchg
adc
stc
test
jbe
inc
hlt
or
sbb
push
mov
sbb
pop
fldcw
movsl
outsb
rcrl
test
and
xor
push
scas
sub
add
mov
lods
dec
aas
fildl
int3
jl
dec
mov
pop
push
in
repnz
das
xchg
cmpb
push
shlb
into
and
push
cli
jbe
dec
or
inc
int3
rcll
aad
jne
add
or
xchg
pop
mov
jmp
lods
dec
mov
dec
jge
mov
pop
jne
aas
addr16
loope
fdivrs
ja
mov
arpl
push
aad
in
fstl
or
test
arpl
mov
into
cmp
mov
jle
xchg
andb
cmc
push
mov
iret
or
inc
mov
and
mov
shll
xor
pop
jge
xchg
mov
lret
insl
sbb
dec
pop
scas
repnz
and
call
add
and
push
xchg
leave
es
xchg
inc
movsl
push
arpl
outsl
jnp
add
and
mov
xchg
in
mov
mov
loop
and
daa
daa
cli
scas
jecxz
add
push
fdivrs
pop
adc
push
mov
mov
shrb
dec
lahf
and
test
out
lods
push
vpavgb
lock
lcall
add
sub
loop
and
cmpsl
adc
xchg
fistl
je
mov
sub
pushf
stos
adc
mov
call
sbb
shll
adc
and
stos
add
in
jo
orb
loopne
std
inc
repz
cmc
loop
jg
insb
in
insb
sbb
ja
mov
xor
cmp
shrl
sbb
in
mov
int
jno
cmc
jg
ret
andb
add
ret
xchg
sbb
movsl
out
cmp
jo
and
sahf
insb
imul
jp
mov
arpl
test
out
jmp
inc
call
xchg
and
sbb
ret
xchg
xchg
dec
xorb
xorl
mov
jns
cmpsb
xor
sbbb
sbb
xor
cli
or
popf
rep
mov
jmp
test
mov
xchg
pop
mov
lahf
dec
addr16
hlt
and
mov
add
add
addr16
movsl
mov
lcall
adc
roll
lcall
sub
aad
cmc
and
sub
ret
xchg
lds
imul
jg
xor
push
testb
adc
push
rolb
jl
lahf
sbb
aad
jmp
push
imul
and
adc
aaa
jnp
mov
cmc
dec
push
sbb
add
mov
bound
loop
cmc
inc
mov
and
pushf
imull
shl
push
push
out
lret
mov
aas
pop
pop
cltd
cmc
sahf
xchg
cmpsl
cmpsl
les
cmpb
add
add
cli
stc
mov
mov
xchg
test
and
mov
test
xor
insb
fldenv
sbb
scas
mov
mov
mulb
push
mov
lahf
and
xchg
cs
aam
jne
out
ss
mov
xchg
es
dec
cmc
sbb
mov
lods
sbb
sub
jns
jns
dec
jmp
popf
mull
jne
xchg
mov
arpl
inc
and
aad
push
mov
xchg
scas
dec
rolb
and
cs
jne
xchg
lea
lods
rorl
lret
adc
clc
dec
or
or
fucomip
outsl
xchg
inc
add
out
mov
lret
scas
into
lods
in
lods
movsb
xor
inc
lock
sub
loopne
xor
imul
or
mov
jne
cmp
mov
leave
movb
or
into
test
mov
test
adc
inc
push
and
mov
lods
or
add
pop
jne
jo
pop
loopne
cmc
cltd
push
arpl
pushf
movsb
jbe
jle
das
xchg
div
adc
push
sbb
xor
cmp
sbb
xor
cld
flds
mov
jp
daa
cmp
cmpsl
dec
jge
call
mov
and
sahf
mov
mov
in
mov
xlat
int
add
jnp
in
lods
xor
dec
pusha
lock
or
xchg
add
sbb
xchg
jae
dec
insl
lea
add
fucom
and
enter
sub
dec
and
jp
inc
cmpsl
ja
cmc
lret
arpl
mov
cld
fmull
out
pop
cmpsb
andb
loopne
jp
icebp
fwait
push
mov
psadbw
xchg
mov
adcb
xor
data16
dec
mov
imul
cmp
xchg
sahf
cmp
jp
dec
mov
lods
cmpl
jne
out
fcmovnu
int3
jae
leave
cltd
fiaddl
adc
jge
or
stc
jnp
add
insb
jno
sub
movsb
les
rorl
pop
push
jbe
jnp
into
jnp
mov
ficoms
pop
sub
mov
sub
mov
or
mov
jne
dec
subl
xchg
and
mov
data16
iret
xchg
insl
jb
cmp
sub
sbb
mov
outsb
inc
dec
dec
aas
rorb
cmpl
xor
stc
xor
cmp
movsb
and
mov
xorl
mov
inc
jno
in
movsb
imul
aam
les
mov
rorb
pop
lret
or
icebp
sbb
mov
scas
xchg
sahf
es
divl
mov
adc
xlat
adcb
aam
push
enter
inc
cmc
and
in
jne
lret
int3
add
pushf
inc
push
jl
enter
or
add
cmp
inc
xor
lods
pusha
mov
leave
add
ljmp
dec
insb
xor
cwtl
xchg
sub
xchg
or
movsl
call
mov
dec
cli
mov
xor
icebp
sti
ljmp
lahf
ja
sub
mov
jecxz
mov
outsb
lods
or
ss
shrl
test
mov
insb
sub
jle
xchg
pop
jno
inc
dec
pop
mov
fildll
movsl
push
push
or
ret
add
stos
cwtl
dec
pop
push
jne
xchg
cmpsb
dec
xor
inc
mov
inc
in
push
stos
jg
sbbb
and
dec
adc
inc
sti
inc
cs
xor
data16
sub
shll
mov
bnd
les
das
push
cmp
movsl
andl
cld
dec
xchg
rolb
into
inc
mov
or
pop
lods
in
and
loope
scas
mov
inc
or
test
jb
imul
push
in
dec
push
les
or
loope
mov
movsl
mov
dec
sarb
dec
jl
fnstsw
outsl
xchg
fdivrs
or
and
push
out
arpl
ss
pusha
cs
fdivr
mov
xor
or
inc
sahf
jne
insb
cmp
cltd
mov
pop
xchg
daa
jecxz
loope
dec
imul
adc
cmc
je
nop
mov
in
push
daa
outsl
xchg
es
out
jle
out
push
sti
into
outsb
xor
jge
scas
add
inc
jg
lahf
push
mov
das
and
mov
add
mov
ljmp
sbb
call
lahf
jne
sbb
into
enter
xchg
lret
hlt
and
inc
in
xor
and
xor
xchg
aaa
pop
or
xchg
les
in
mov
cmpsl
insb
mov
mov
mov
ret
jb
lret
in
fs
mov
add
sti
test
imul
dec
das
or
and
cmp
mov
pop
ficomps
decl
push
jecxz
jle
fiaddl
inc
mov
mov
aad
jle
dec
mov
popf
xchg
pop
mov
adc
xchg
mov
idivb
stc
xchg
movsb
add
pop
add
jo
inc
shrb
cmp
pop
inc
and
pop
imul
dec
jne
cmp
mov
push
pop
or
iret
iret
inc
test
inc
aad
dec
ss
sub
sbb
sbb
xchg
subb
cmp
jp
fwait
mov
mov
fsubp
cld
mov
lds
or
daa
add
sbb
subb
xlat
scas
xchg
and
mulb
out
jno
mov
add
ja
push
xchg
mov
cmpsl
pop
imul
xor
push
cmp
stc
adc
inc
and
arpl
cltd
loop
pushf
mov
cmp
jne
mov
ret
sarb
data16
adc
hlt
jnp
into
negl
mov
sbb
push
cmc
fldenv
or
xchg
cmp
jp
sbb
and
addr16
jne
push
xor
add
cmp
xchg
jmp
push
ret
mov
pop
iret
and
scas
fwait
mov
jb
into
lret
pop
lods
mov
mov
xchg
push
push
xchg
pushf
in
loope
aad
in
push
cmp
and
cmp
and
bound
cmp
cli
add
push
add
jp
mov
inc
push
adc
push
bound
pop
inc
sbb
inc
mov
xchg
icebp
adc
dec
cmpsl
mov
dec
and
jge
mov
sbbb
js
cmpsb
pop
push
pop
dec
test
mov
mov
add
dec
divb
arpl
cmp
push
and
and
jbe
mov
jmp
push
loop
mov
sub
lea
fwait
mov
xchg
or
faddl
push
mov
notb
mov
jne
adc
ret
xchg
lcall
into
xchg
mov
sbb
xor
nop
xchg
mov
jmp
jmp
and
pop
push
push
ret
sahf
cmc
mov
mov
dec
faddl
cld
jnp
cmc
mov
out
jns
mov
inc
sub
pop
filds
lret
pusha
xchg
gs
movsb
rclb
lcall
dec
push
inc
and
pop
add
ss
in
repz
inc
in
popa
into
or
and
mov
pop
mov
mov
xchg
icebp
push
mov
rolb
lds
popf
cmp
mov
add
mov
mov
push
jge
push
xchg
cmc
and
jbe
sbb
dec
lcall
cmp
enter
js
xchg
dec
adc
mov
das
xchg
jno
inc
mov
in
bnd
shlb
call
and
out
shrb
lret
aaa
orb
or
jne
dec
push
push
lock
jbe
xchg
mov
fwait
pop
mov
pop
mov
and
addr16
cmp
sbb
push
xor
cs
inc
push
jmp
cmpb
stos
inc
nop
lret
fiadds
add
push
std
cld
jne
push
pop
pop
das
cltd
sti
mov
adc
cmp
movsb
dec
inc
mov
inc
mov
incl
fisttps
mov
into
push
out
daa
and
mov
movsl
mov
push
scas
clc
fisttpl
lret
iret
rcrb
dec
hlt
push
mov
lret
lcall
imul
rcl
es
mov
out
ret
jne
sub
punpcklbw
aaa
cmpsb
xchg
test
push
ja
scas
mov
xchg
fnsave
cmpsb
into
hlt
popfw
or
sahf
mov
mov
sbbl
push
jns
pop
jns
loop
sarb
add
pop
jb
lods
iret
into
inc
fldt
fsubrl
in
xchg
pop
stos
in
movsb
sbb
loop
rcr
cmp
pop
xor
sbb
inc
inc
int3
mov
jns
mov
inc
and
test
jo
dec
and
sbb
les
xchg
andb
cs
mov
test
mov
into
daa
and
inc
lahf
jae
mov
push
mov
and
rorb
add
push
cmc
and
jne
movsl
rclb
dec
addr16
fadd
lock
xor
mov
in
xor
mov
cmpsl
sub
mov
xor
cmc
dec
sub
push
out
ret
inc
ret
pause
fildl
cmc
in
aad
dec
mov
or
ja
das
inc
pop
mov
xchg
cmp
popl
xchg
sub
cmp
xor
mov
popf
loop
les
dec
push
and
xchg
sti
xor
pop
xchg
add
xchg
rorb
ja
jo
add
jbe
xchg
mov
adc
mov
icebp
rclb
push
lods
inc
sbb
add
push
jne
push
repz
orl
cmpsb
outsl
rolb
xabort
dec
inc
sbb
clc
dec
adcl
out
scas
cmc
or
cmp
lods
mov
dec
or
in
arpl
sbb
rcl
xchg
lcall
ret
insb
out
not
add
dec
adc
clc
insb
mov
jns
mov
mov
push
pop
stos
push
add
adc
je
jp
cmpsb
cmp
pop
jae
loopne
scas
cmc
push
mov
sub
push
inc
cli
loop
sub
sub
andb
enter
popl
cmp
fstps
ret
cmpb
daa
mov
or
pushf
lock
sub
cmc
dec
xchg
push
cwtl
add
dec
or
outsl
push
out
pushl
mov
xor
fcoms
test
aad
int
ja
jge
addl
addr16
mov
pop
xlat
sbb
mov
lods
pop
push
repnz
xchg
gs
push
movsl
rcrb
push
inc
inc
into
pop
adc
test
fldl
xchg
fisubrs
mov
or
mov
jno
inc
sti
clc
gs
cmp
xor
scas
add
add
cld
cmp
jge
into
ret
xor
lock
mov
sti
xchg
out
in
push
cmp
jge
mov
fiadds
cmp
mov
mov
and
xchg
mov
je
fcmovb
add
inc
jg
push
jp
orb
jno
in
or
sub
test
ret
add
aam
jmp
xadd
out
test
outsl
pop
repnz
inc
mov
test
ss
shll
dec
jecxz
mov
inc
dec
ja
test
repnz
fwait
jno
add
fisubrl
hlt
cmpsb
into
repz
out
sbb
cmp
cs
cmc
push
iret
lret
ja
jge
adc
inc
push
rolb
pop
outsl
out
std
or
jecxz
out
mov
jno
lea
xor
in
cltd
ror
aas
inc
push
push
mov
test
pop
pop
hlt
mov
es
and
xchg
sbbl
dec
adc
inc
int3
xchg
aam
into
jae
jns
mov
xorl
adc
hlt
icebp
test
aad
rcrl
repnz
and
fnstcw
lret
mov
shrl
and
iret
lock
adc
pop
fiadds
lret
into
dec
ret
mov
lods
mov
out
ljmp
ljmp
rcrl
push
and
fldl
sub
mov
inc
dec
jmp
inc
movsb
xchg
into
pop
dec
ljmp
test
xchg
adc
add
and
xchg
jne
fldcw
mov
dec
orb
movsl
mov
mov
fbstp
dec
cmp
and
scas
fstsw
dec
xchg
sub
push
sti
pop
mov
mov
movsl
push
xchg
scas
pop
lods
dec
cmp
pusha
and
test
clc
ret
leave
mov
cmp
popa
mov
lea
push
push
or
mov
cld
movsbl
shlb
inc
xchg
lds
stos
mov
clc
push
inc
das
arpl
idiv
adc
or
cld
test
sbbl
or
jo
add
pop
int3
cltd
pop
mov
add
insl
jbe
inc
adc
add
mov
daa
lret
hlt
outsl
in
in
mov
dec
imul
and
push
mov
cmpl
shrl
mov
cmp
or
mov
out
and
fdivrl
dec
insl
popa
out
lahf
mov
mov
cmc
xor
shlb
and
pushf
ljmp
inc
sbb
jnp
xor
rorl
sahf
jle
pop
arpl
pusha
jne
cld
lret
add
roll
lret
xchg
push
push
fwait
mov
jo
xchg
rorb
or
pop
xor
bound
clc
pop
cs
and
mov
jne
push
lret
pop
xor
aas
loopne
rcrb
andl
inc
test
mov
dec
shlb
inc
cmc
mov
imul
add
jnp
xorl
mov
mov
pop
and
mov
xchg
ficomps
mov
mov
xchg
mov
in
add
sarl
and
inc
ficoms
es
lods
cmpsb
rcl
cmp
push
xchg
fcmovnb
int
cli
xchg
sub
sbb
and
adc
rcrb
dec
cmc
xorl
ss
lea
addr16
add
jle
cltd
aaa
jne
xchg
mov
adc
jns
incb
cltd
jne
iret
adc
lcall
push
fisttpl
and
and
leave
cmp
push
xor
and
je
pop
dec
test
mov
inc
test
lea
and
in
xchg
adc
negl
push
leave
add
nop
cmc
xor
xor
repz
cmpsb
les
xor
clc
add
mov
mov
clc
dec
cmp
lock
mov
pushf
fwait
in
stc
cmc
pop
imull
lods
imul
fstl
inc
lret
mov
xor
cli
inc
or
and
push
lods
out
lret
andl
sbb
mov
mov
loope
jb
cmp
in
rcrb
test
dec
mov
xor
js
pusha
mov
clc
repz
dec
cmpsb
leave
inc
fldenv
cmp
addl
sbb
inc
imul
fwait
dec
scas
inc
daa
add
sub
dec
test
or
and
repz
rorl
shll
jno
in
fdivl
out
fstl
into
jmp
leave
adc
xor
cltd
inc
sub
jne
stos
and
xor
movsl
mov
fisttpll
sbb
pop
mov
fwait
cmc
cwtl
jp
scas
mov
mov
int
add
or
push
leave
mov
rcrl
shrl
add
mov
js
sub
xor
fcmovnbe
imul
pushf
jne
push
shl
pop
mov
jno
fisttpl
mov
leave
xchg
lods
loop
xchg
dec
movsl
clc
loop
fisubrl
scas
adc
movsb
sbb
pop
rolb
sub
into
pop
arpl
xchg
or
cli
jecxz
lods
mov
xchg
mov
jo
pop
dec
lahf
mov
sbb
scas
mov
out
jns
shlb
pop
cltd
insb
and
int
insb
dec
inc
sub
fidivl
dec
mov
sub
and
loopne
negl
into
scas
inc
dec
jne
push
test
or
pop
dec
subl
xor
pop
pushf
add
fs
icebp
popf
add
cmp
stc
dec
leave
push
mov
add
push
test
add
mov
mov
push
mov
dec
cld
xor
cld
xchg
push
popa
dec
sbb
jp
lea
movsl
ss
loope,pn
pop
jae
mov
lahf
sbb
xor
jge
outsb
test
pop
dec
aas
ffree
fcmovnb
out
or
add
mov
scas
dec
push
or
int3
stc
pop
sahf
loope
lods
push
cmc
rcl
xlat
jno
add
push
dec
cmpsl
into
add
push
fs
les
imul
daa
xchg
cwtl
sub
js
and
cltd
xorb
out
roll
push
mov
bound
ss
add
add
icebp
cmpsb
push
add
dec
push
int
mov
frstor
stos
mov
cmc
lds
sub
ffreep
nop
add
add
mov
add
popa
inc
pop
mov
xor
pop
jb
out
and
ffree
dec
mov
test
and
sub
int
into
cmp
je
mov
fwait
sbb
popa
inc
sbb
mov
roll
lds
je
dec
bound
popl
in
mov
addb
mov
movsb
into
cmp
jae
js
arpl
mov
xor
mov
in
popa
push
jne
out
addl
push
shl
jne
cmp
pop
adc
add
xor
dec
pop
push
fs
jmp
jle
fldpi
negb
jnp
in
rcl
adc
cmp
dec
mov
aad
shr
mov
xchg
mov
mov
sbb
mov
inc
mov
lods
pop
mov
movsb
xchg
stc
mov
cld
sahf
adc
fs
fnstcw
and
mov
sub
daa
arpl
lods
stos
aaa
dec
mov
rcr
scas
mov
jne
inc
cmc
subb
xchg
aas
inc
mov
ss
push
mov
and
push
adc
push
jmp
out
sub
jnp
jecxz
sbb
cmc
jl
mov
idiv
test
addr16
ljmp
out
test
lods
mov
sbb
jne
pop
mov
rorl
sub
mov
scas
cmpsl
sahf
cmc
xchg
mov
xchg
cli
mov
inc
outsl
adc
test
loop
push
bound
xor
cmp
hlt
xchg
jne
cmp
test
xor
or
dec
mov
ja
gs
push
gs
add
sub
and
loop
dec
jne
hlt
test
push
mov
mov
bound
mulb
in
pop
or
cmpsb
fld
push
sbb
pusha
and
sbb
mov
cmpsl
cmpsb
pop
push
lods
mov
add
xor
lcall
push
ja
jns
jge
fisttpl
clc
lea
adc
sbb
mov
dec
test
or
inc
dec
sbb
loope
push
imul
mov
or
pusha
mov
negl
stc
sbb
jne
loope
xchg
daa
aam
cmpsl
cld
je
lret
adc
stc
into
in
push
cmpsb
sub
aaa
mov
xchg
repz
push
leave
push
bound
add
ljmp
jbe
inc
scas
mov
ja
xlat
lret
push
and
cmpsb
dec
xor
jne
cmpsl
xchg
cs
lahf
ret
aam
or
inc
ficoms
lcall
and
aam
jns
lods
into
xchg
in
ret
loope
jg
int3
jns
xchg
cmp
cmpsb
pop
gs
test
out
xchg
lret
add
cmc
dec
mov
mov
mov
mov
xor
xor
mov
jns
mov
pop
es
cwtl
pop
jl
dec
mov
mov
inc
mov
push
js
in
adc
jb
loop
loop
xor
xorl
dec
or
adc
xchg
and
or
jecxz
fsubrl
loopne
rolb
xchg
sbb
mov
testl
pushf
dec
add
int3
cli
cwtl
jp
cmp
subb
daa
sbbl
bound
xor
insl
cwtl
sub
pop
sahf
xchg
gs
xchg
add
call
pop
aad
push
sti
fstl
mov
fsubs
dec
or
mov
mov
dec
dec
roll
ret
mov
fs
pop
jns
mov
xchg
push
xchg
mov
xlat
inc
xchg
mov
xchg
inc
pop
ret
mov
inc
aad
jle
xchg
xor
or
cmp
outsb
jmp
push
lods
push
popf
add
lock
ret
jg
xchg
push
std
jp
jne
ds
jno
out
cltd
xlat
adc
in
mov
xor
aaa
lea
aad
push
movb
movl
mov
sbb
in
sti
popl
es
pop
js
mov
test
sbb
pop
push
notb
mov
stc
dec
push
loopne
in
and
es
push
or
jns
mov
dec
shrl
rorl
adc
dec
negl
hlt
cld
xor
lret
filds
loop
mov
add
out
mov
gs
xchg
mov
cmc
sbb
leave
ret
mov
sbb
mov
jmp
insb
jnp
fcompl
das
mov
fidivrl
mov
pop
push
jne
and
out
dec
iret
push
rolb
shr
xchg
jg,pn
xorl
mov
outsb
sbb
enter
loop
mov
dec
cmp
jb
and
sahf
fcomi
pop
lods
inc
adc
fs
cmc
pop
in
dec
arpl
adc
aam
stc
mov
fs
cmpl
scas
sbb
outsb
std
and
es
mov
mov
js
or
push
push
mov
lds
cmp
dec
xor
stos
fcmovnb
popf
and
sub
mov
aas
push
push
cmpsb
and
mov
ss
jne
mov
iret
xor
jge
add
mov
loope
or
ror
andl
adc
enter
jecxz
std
dec
xchg
jae
movsb
sbb
fistpl
jbe
sub
push
push
jo
popa
sahf
jne
inc
mov
push
mov
in
dec
push
jbe
dec
mov
pop
sub
popa
test
add
mov
lock
pop
jno
pop
adc
xchg
cmp
add
es
pop
jne
or
mov
cltd
in
jp
add
add
mov
arpl
jbe
mov
cmp
out
aaa
cwtl
aad
adc
stos
pop
iret
in
mov
add
int3
adcb
fwait
mov
push
and
subl
popf
jns
adc
repnz
sub
insb
push
stc
ljmp
nop
dec
mov
dec
push
insb
push
movsb
test
xchg
sbb
aas
cmp
inc
jnp
sbb
test
andb
lock
xchg
ja,pt
scas
dec
adc
int
fsubl
xchg
nop
lret
add
or
xor
arpl
js
or
dec
fisttps
std
or
push
xor
cmp
pop
add
lcall
ret
push
sbb
xchg
push
dec
cmc
cltd
lea
dec
into
sub
or
pop
or
sti
cmp
fnsave
jmp
mov
insl
rorb
and
repz
pop
movb
ret
mov
insl
jmp
test
xchg
das
push
pop
pop
add
aam
mov
mov
loop
inc
mov
rorl
mov
jl
cmp
std
mov
addr16
pop
adcb
faddl
pop
push
or
test
jb
imul
outsb
cmc
push
gs
shll
inc
inc
mov
subb
mov
or
xchg
aaa
lods
mov
imul
fwait
cmpsl
cmp
sar
adc
push
dec
stos
mov
jl
mov
jne
mov
dec
add
shrb
mov
xchg
sub
cmc
jge
add
nop
add
repnz
loop
into
jmp
enter
adc
pop
jp
es
cmp
adc
mov
mov
in
mov
scas
out
dec
cwtl
test
ret
sti
in
pushf
push
outsl
ret
mov
jo
out
pushf
and
mov
ljmp
addr16
lds
cmp
gs
jne
ja
pop
ljmp
mov
mov
cli
fwait
cmpl
into
jns
ret
push
xchg
repnz
fidivs
mov
xor
notb
add
out
daa
dec
pushf
lods
mov
inc
clc
ret
dec
dec
fnstcw
push
pop
call
push
hlt
outsl
out
mov
or
jae
jnp
test
dec
lahf
and
into
shlb
lret
sbb
add
outsb
jne
je
les
cltd
and
stc
insl
xor
cs
jns
inc
movsb
cmp
mov
add
jnp
into
iret
gs
mov
mov
jb
in
mul
jne
int3
mov
stc
in
scas
push
mov
mov
mov
xor
inc
ret
pop
xchg
fsubp
nop
mov
push
dec
jecxz
div
es
and
sar
push
scas
inc
ja
push
inc
fmul
es
sub
cld
jne
mov
adc
xor
mov
pop
jb
sub
or
inc
ds
mov
je
add
test
in
scas
pop
pop
ljmp
and
stc
cwtl
push
cs
pop
mov
fldenv
mov
jne
push
lea
sbb
or
stos
mov
mov
push
fwait
imul
das
adc
and
inc
mov
adc
pop
lock
hlt
mov
cmpb
cmp
pop
xchg
outsb
xchg
in
jae
test
mov
pop
cmc
cmpsb
inc
in
ja
xchg
mov
xchg
xor
test
and
ja
mov
jno
arpl
jne
mov
gs
mov
cs
hlt
xchg
ss
hlt
inc
jo
pushl
fwait
into
cltd
mov
inc
outsb
fwait
lret
dec
push
vmwrite
ljmp
jle
jnp
mov
sbb
scas
ljmp
mov
pop
mov
test
mov
dec
outsl
and
in
and
adc
push
sbb
adc
push
xchg
mov
inc
and
dec
adc
sbb
xchg
mov
pop
scas
adc
roll
sahf
in
xchg
jge
mov
lea
loope
jmp
push
shlb
xchg
adc
mov
push
dec
shll
dec
orb
add
ss
out
and
add
mov
into
ljmp
mov
ds
adc
jmp
pop
mov
or
out
mov
cld
shll
inc
sbb
jbe
xlat
adc
mov
sbb
cmc
lcall
dec
scas
popa
inc
cmpsb
addb
rcrl
push
neg
dec
data16
cli
and
xchg
aas
mov
add
cmp
neg
int
jg
faddl
lahf
xchg
inc
push
stos
sti
push
in
iret
jl
aas
mov
addl
rclb
inc
push
inc
fmull
or
sub
insl
mov
fidivrl
add
lret
dec
adc
insl
pop
in
adc
jne
fs
sub
ss
jl
pop
push
add
jne
jb
inc
decl
cmc
mov
ss
std
push
cmp
iret
and
cmc
jo
aas
mov
das
jne
jge
shll
in
add
ss
iret
scas
repnz
std
mov
sbb
gs
xchg
ljmp
pop
imul
loope
dec
imul
test
push
je
mov
pop
stos
xchg
and
xchg
mov
sbb
cmpb
cltd
sbb
out
mov
popf
lds
xchg
or
xchg
cmp
pop
pop
push
cmc
iret
int3
fisubrs
mov
add
iret
pushw
into
lret
dec
gs
xorb
out
jmp
int
jne
in
push
iret
pop
push
lret
fiaddl
loopne
inc
mov
xor
and
ret
mov
adc
popa
inc
push
pop
cmc
ljmp
add
cmc
out
cmc
sbb
cmp
loope
cld
push
inc
sub
movsb
ret
clc
cmp
stos
fnstsw
cmp
stos
sub
adc
push
movsl
add
les
pop
jge
into
xorl
out
mov
leave
push
mov
test
push
pushf
aaa
jle
lret
sbbb
loope
xor
jmp
push
xchg
arpl
push
inc
cmc
js
fs
in
jmp
fxch
nop
insb
mov
or
into
sbb
sbb
cs
cwtl
aad
adc
jo,pt
pop
pop
ja
aad
sub
add
leave
iret
inc
xor
into
pop
mov
jns
cmp
cmp
inc
lods
sbbl
mov
fists
add
dec
pop
mov
sub
jp
mov
or
jmp
cltd
adc
adc
js
int3
sbb
add
mov
outsl
pop
and
push
dec
adc
mov
jg
int3
jp
push
inc
pop
pusha
jp
push
in
rclb
mul
add
cs
cmp
xor
push
loope
leave
lock
pop
mov
sbb
or
fsubl
fs
mov
inc
outsb
aad
aam
jge
lahf
cmc
sbb
mov
xor
xor
into
sbb
lret
dec
dec
mov
lret
pop
mov
add
inc
cmc
mov
leave
pop
or
jnp
test
ja
jmp
add
xchg
jno
cltd
sbb
jmp
outsb
dec
xor
or
jbe
inc
mov
lcall
fidivl
dec
mov
mov
cmc
and
xchg
jb
shr
push
clc
pop
mov
add
outsl
sbb
lods
sar
rolb
mov
dec
add
dec
adc
pop
insb
and
and
dec
or
lods
popa
ds
popf
sub
and
cwtl
cmc
lret
loop
outsb
sbb
int
out
mov
mov
add
outsb
mov
adc
and
sbb
xchg
inc
fsub
clc
or
push
arpl
in
dec
pop
xchg
dec
dec
pop
jge
mov
cs
stc
push
jle
sub
mov
mov
add
into
and
add
fistl
mov
pop
insl
mov
mov
in
out
ror
lock
loopne
mov
and
test
pop
sub
xchg
push
jne
popa
cmc
lcall
das
cmp
cmc
les
js
sub
fucomp
cmp
mov
jp
mov
rcrb
xchg
shl
mov
mov
scas
inc
test
or
outsl
push
mov
add
jne
into
mov
in
sub
shll
jl
mov
jb
jnp
outsl
shlb
scas
xchg
push
cmpsl
mov
add
lea
ret
into
mov
dec
push
mov
cmc
xchg
out
adc
and
cmpsl
mov
int
icebp
jmp
nop
movl
call
push
jp
mov
lcall
stos
inc
lock
adc
adc
test
pop
inc
add
xor
add
mov
iret
pop
cmp
popa
ffree
and
das
inc
mov
xchg
addr16
in
cmpsb
sbb
xchg
cld
imul
and
mov
daa
sub
shll
mov
or
cmp
shlb
subl
jne
leave
repnz
lock
orb
lods
add
addb
dec
xchg
das
ljmp
cmp
push
jne
test
lret
punpcklwd
lcall
mov
cld
in
push
adc
jo
incl
test
shll
pushf
mov
repz
add
dec
xchg
dec
mov
lahf
dec
out
add
mov
dec
cmp
je
mov
inc
gs
and
cmp
or
fistl
pushl
popf
jle
jle
rorb
out
repz
push
and
xchg
dec
loope
stos
jne
inc
xor
scas
push
sbb
lods
sbb
xchg
push
mov
ds
into
cwtl
mov
outsb
mov
pop
loop
and
mov
mov
dec
xlat
xchg
in
add
adc
aad
cwtl
add
mulb
in
adc
imul
les
outsl
adc
push
in
in
popa
xchg
sbb
push
adc
int
lret
js
lea
mov
test
pop
ss
cltd
mov
sub
imul
sub
les
sbb
fstl
sub
jmp
iret
or
mov
loopne
cld
pusha
pusha
mov
mov
add
dec
adc
mov
js
fistl
cmpb
xor
lods
and
xor
lret
cmc
imul
and
lahf
inc
in
add
and
push
sti
mov
outsl
adc
rorl
pop
lcall
scas
inc
fdivr
ret
pop
stos
add
outsb
nop
imul
test
xor
cmp
iret
cmpsb
xorl
sbb
mov
inc
jmp
mov
stos
pop
in
jne
adc
shl
pop
xchg
mov
jp
test
leave
pop
mulb
sub
loop
cmpsb
mov
jae
add
leave
mov
bound
inc
ret
jle
loope
mov
fwait
sub
ss
sbb
sahf
add
xchg
cltd
loopne
jae
insl
outsl
cmc
or
out
addr16
shlb
push
cmp
dec
arpl
ret
pop
jne
rcr
mov
rorl
mov
mov
stos
pop
es
bound
push
xchg
bound
iret
scas
ret
in
lret
sbb
in
cwtl
gs
rclb
xchg
push
out
mulb
movsb
add
or
mov
jne
and
sub
aam
add
std
pop
dec
xchg
mov
dec
add
sbb
stc
jae
lret
mov
aad
sbb
int3
cmpsl
mov
loope
test
ja
push
outsl
mov
movsw
mov
clc
push
ret
mov
push
pop
into
call
jecxz
xchg
cwtl
xor
or
cmc
fildll
test
pop
mov
stos
xchg
mov
testl
outsl
and
adc
mov
rolb
or
mov
cmp
push
and
fisttpl
leave
outsb
sbb
dec
icebp
popf
xchg
rol
test
insl
and
mov
fadd
cmp
aam
into
jg
das
cwtl
and
pusha
pop
push
inc
dec
mov
mov
jmp
inc
cmc
xor
fwait
add
cltd
jl
inc
push
scas
xorb
jne
push
mov
scas
loope
xlat
andb
cwtl
aad
jnp
mov
inc
inc
xor
xor
jb
adc
int
xchg
movsl
dec
adc
inc
jne
adc
adc
push
jbe
sbb
sub
stos
add
jne
xor
sub
cmp
mov
lods
repz
fwait
push
mov
aas
fmull
ret
adc
movsb
mov
in
fistps
or
pop
addr16
adc
pusha
jne
push
ja
loope
in
add
or
outsl
ds
aaa
outsl
inc
dec
std
jle
pushw
lods
add
sub
mov
into
ficompl
popa
mov
jno
in
jge
stos
jno
xchg
scas
aas
leave
ret
or
imul
mov
movsl
test
imul
mov
inc
int
jge
sbb
test
cmp
jb
dec
sub
mov
leave
popf
popf
inc
jo
mov
not
push
ret
mov
push
pop
addl
mov
das
push
jmp
leave
add
fsubs
test
popa
jle
push
test
into
divb
les
arpl
xchg
cmp
mov
dec
lock
dec
pop
mov
subl
mov
lods
mov
jecxz
fstpl
frstor
pushf
cmc
jae
cld
pop
negl
aad
fiaddl
outsl
out
xchg
xchg
je
addr16
gs
and
loopne
mov
fwait
sbb
xchg
jl
mov
into
add
testb
or
out
scas
push
add
out
add
bnd
push
mov
rcl
xlat
mov
pushf
popa
push
int3
add
lods
outsb
aad
shll
ljmp
xchg
push
mov
jo
push
mov
popa
imul
push
jb
fadds
rcr
jecxz
into
adc
lahf
inc
xchg
or
xor
sbb
fcoml
cmp
add
adc
loope
out
clc
addr16
movsl
dec
lock
xadd
stos
mov
movsl
fildl
xor
mov
cmp
xchg
mov
sub
adc
pop
popa
xchg
and
das
push
inc
xchg
dec
jl
jg
pusha
cmp
jg
xchg
jp
popf
mov
hlt
icebp
add
pop
ret
jbe
ljmp
cmp
dec
sub
fsubl
sbb
dec
cmc
sbb
into
xchg
call
or
nop
jne
inc
mov
mov
jne
or
jp
call
push
adc
jo
jecxz
iret
daa
popa
rcrl
sti
ffree
mov
in
mov
jle
sbbb
into
mov
xor
js
mov
or
jns
lods
xchg
cmp
aas
fcmovb
mov
mov
fcmovnbe
cld
fdivrl
xlat
sub
jnp
into
pusha
mulb
jae
iret
sbb
inc
mov
pop
mov
xchg
xor
fisubrl
in
je
sbb
jnp
inc
mov
cs
mov
jno
jno
mov
xchg
xchg
adc
mov
cmp
push
or
mov
xchg
fstps
cwtl
dec
int
in
xchg
into
repnz
jg
fisubs
adc
mov
dec
and
adc
adc
pop
sbb
int3
imul
popa
cmp
dec
imul
jmp
sbb
into
fnstcw
shll
xchg
lahf
dec
and
adc
test
cmc
inc
shrb
adc
inc
jp
add
add
ret
dec
mov
mov
int
adc
cmp
jne
cmpsb
cs
jl
jg
xchg
pop
pop
fmull
or
into
mov
jp
mov
add
inc
inc
or
sar
fstps
mov
push
mulb
iret
and
test
les
sub
or
sbb
mov
dec
push
ljmp
stos
adc
sarl
addr16
push
and
push
xor
cmp
leave
into
popa
cmpsl
push
mov
mov
scas
addr16
push
pop
jg
lock
dec
add
mov
aam
into
imull
pop
iret
add
xchg
arpl
jmp
xchg
mov
mov
pop
push
cmc
adcl
subl
or
lea
mov
and
fs
push
inc
or
addb
fmuls
jle,pt
movsb
add
inc
repz
mov
stc
xchg
into
push
imul
jnp
push
in
mov
cmc
mov
std
push
lret
add
leave
imul
into
sbb
imul
inc
cltd
dec
cmp
movsl
jge
xor
jns
stos
xor
or
jo
movsl
push
add
sub
xor
outsb
std
jns
dec
xor
aad
xor
sbb
jle
sub
test
jne
test
pop
mov
and
pop
scas
cmpsb
cmpsl
lret
cs
adc
dec
punpcklbw
ja
mov
lea
cld
cmp
sub
imul
jle
jmp
fwait
xor
mov
into
push
xor
es
mov
lds
xor
mov
fcoms
jne
aam
inc
aaa
push
dec
mov
test
inc
cmc
test
jnp
aad
mov
movsl
pusha
dec
scas
orb
test
shr
add
push
inc
movsb
and
test
mov
es
negl
fldcw
xor
adc
lahf
mov
push
fs
mov
rolb
mov
mov
roll
ret
es
adc
cld
nop
dec
sbb
imul
mov
mov
xchg
adc
in
mov
loope
mov
jne
xchg
jno
clc
sbbb
andb
outsb
mov
aad
or
rorl
stos
and
or
mov
push
jns
cmpsl
int
fiaddl
mov
mov
xlat
ficoms
adc
pop
push
mov
call
jno
push
sub
scas
dec
and
arpl
xor
pop
mov
xor
mov
adc
add
outsl
ror
and
ds
jne
add
les
clc
sub
subb
shlb
mov
cltd
xchg
nop
cmc
daa
in
add
cmp
cmpb
inc
mov
sub
mov
mov
add
pusha
gs
dec
pop
outsl
jecxz
jbe
jp
mov
mov
pop
sub
dec
cwtl
push
stos
pusha
and
jp
inc
inc
insl
xor
les
fwait
jmp
in
clc
das
movl
pop
mov
test
jge
or
inc
in
xchg
sbbb
dec
sub
bound
daa
pop
or
je
rcll
mov
scas
sub
stc
movl
push
fwait
pusha
dec
out
dec
sub
pushf
stc
iret
repnz
test
test
cwtl
jno
mov
lods
push
mov
mov
pushf
inc
lds
and
fcmovnb
dec
adc
or
cmc
pop
loopne
jne
or
aad
and
stos
cmp
sbbb
outsl
testl
fs
mov
aad
jnp
sub
and
clc
mov
adcb
mov
mov
popf
pop
cld
inc
hlt
jne
push
imul
std
mov
inc
and
sub
add
push
cmp
add
notb
dec
dec
jecxz
add
pop
mov
xlat
jle
cmc
inc
scas
ljmp
xchg
sub
jno
scas
lock
inc
jp
rcl
push
dec
pop
xor
push
xchg
pop
repz
sbb
imul
loop
jl
mov
insl
scas
push
cld
dec
rcll
nop
mov
orb
enter
mov
into
cmp
fiaddl
andl
pop
in
jnp
testl
sub
pop
jle
dec
lods
test
add
jo
jp
mov
mov
jne
pop
outsb
sbb
fsubrs
movsb
add
xchg
lret
push
xor
loope
leave
and
xor
sbb
pop
xor
mov
sbb
cmpsl
push
pushf
in
stc
addr16
or
imul
sahf
inc
adc
jecxz
lret
mov
addb
jl
addr16
sub
cmpl
xchg
cmc
mov
xchg
sub
mov
jecxz
push
imul
into
mov
gs
mov
ja
mov
divl
push
xchg
jne
inc
jmp
inc
or
or
dec
popf
lds
xor
pop
xchg
addb
pop
cld
pop
and
addr16
push
out
pop
dec
imul
enter
iret
rorb
sti
jmp
mov
mov
mov
and
imul
fs
imull
xchg
mov
lock
cmpsl
fwait
pop
jg
rcll
jnp
rdpmc
and
lahf
xchg
jns
add
loop
or
imul
dec
push
mov
sub
and
cmp
and
out
mov
popa
adc
jnp
xchg
sbb
and
sub
cli
push
push
movsb
loop
test
and
mov
fcmovu
jne
or
movsb
into
mov
js
stos
cmp
cmc
stc
loope
or
mov
movb
stos
inc
mov
or
adc
aad
jne
andl
sub
std
jb
andb
scas
inc
mov
lea
mov
mov
rorl
shr
and
dec
iret
sti
sub
cmp
js
dec
popf
mov
repz
or
adc
leave
xlat
lods
dec
mov
lret
sub
arpl
ss
pop
adc
repnz
movsl
icebp
sub
add
mov
add
pop
fwait
mov
xchg
lea
mov
add
xlat
jno
outsl
add
jge
pop
lahf
outsl
lds
sub
xchg
adc
and
push
lods
sbbb
mov
cmpsb
call
arpl
xor
and
dec
cmp
aam
cmc
push
pop
push
xchg
xorb
loopne
mov
data16
jmp
into
shlb
cmp
xchg
cltd
cmc
adc
or
mov
push
mov
int
sti
lret
and
cwtl
cld
mov
xor
pop
push
push
out
into
into
fists
cmp
or
push
enter
push
fnsave
mov
rclb
add
cmp
scas
iret
jb
outsl
stc
mov
add
jmp
in
jg
ficompl
pop
popf
push
icebp
sbb
and
inc
xchg
mov
sbbb
mov
jne
roll
add
and
add
mov
jne
sti
inc
mov
push
or
push
dec
ljmp
cmp
aas
lcall
or
nop
lods
lock
idiv
xlat
into
add
mov
push
loopne
rcll
repnz
and
jp
lds
test
test
push
xchg
cltd
adc
mov
dec
inc
out
and
je
test
xchg
sbb
cli
mov
scas
test
lods
jecxz
xorl
xchg
pop
add
jne
or
out
test
push
sbb
ror
mov
lahf
leave
xchg
cmc
add
daa
js
mov
add
mov
hlt
cmpsl
addr16
cli
sahf
pusha
push
jge
movl
xchg
ss
movsl
into
sbb
pop
add
adcl
push
sub
add
jecxz
pop
push
stos
out
mov
addb
inc
xor
or
andl
jmp
jbe
bound
pop
jne
out
adc
push
test
inc
jp
outsl
scas
int3
ficoms
xor
mov
sbb
fidivrl
push
pop
filds
add
jnp
inc
ja
dec
out
out
int
pop
sub
les
jne
pop
insb
out
dec
mov
aas
popf
test
ljmp
test
rorb
fidivl
cmp
push
dec
jo
fldt
mov
stos
and
cmc
cld
test
sbb
lret
lahf
mov
mov
cmp
orb
add
int
fwait
cli
mov
in
dec
and
gs
testl
js
mov
dec
cmc
inc
sbb
insb
outsl
aad
dec
sbb
push
faddl
and
sub
xchg
into
or
jne
and
sub
mov
add
jl
pop
jl
fisubl
jae
sub
addr16
js
out
loope
pop
loopne
xchg
ret
and
lret
and
fwait
xchg
mov
shll
mov
test
push
jp
and
xor
mov
loop
idivl
stos
cld
dec
lahf
fbld
add
in
out
mov
jne
dec
std
popf
fdivrs
andl
loop
clc
xor
cmp
mov
ds
mov
pop
repz
or
mov
xor
xchg
punpcklbw
out
xor
movsb
xor
fcomip
loope
int
int3
inc
jnp
jo
mov
push
rcll
aaa
mov
mov
jno
ficompl
sbb
push
cmpsb
cmp
and
jle
cli
aad
mov
mov
cltd
xchg
and
mov
shrl
lock
mov
test
andl
popf
inc
outsb
mov
mov
cmp
xorl
or
adc
lahf
dec
call
cmpsb
mov
testl
and
bound
subb
dec
or
mov
xchg
subb
pop
mov
xchg
cmp
lcall
fstpt
xchg
int3
mov
insb
pop
out
inc
mov
mov
in
adc
mov
cmc
loopne
test
xor
sbbb
pushf
adc
mov
int3
pop
ja
mov
stc
jmp
iret
and
push
xchg
jl
mov
repz
xor
xor
jns
sub
mov
clc
ljmp
xchg
xchg
popf
xchg
xchg
xchg
mov
cmpsl
cmovge
inc
mov
fidivl
lods
daa
mov
ret
jne
mov
jno
dec
push
cmp
test
pop
inc
mov
inc
in
js
sbb
test
mov
cmp
lea
data16
das
xor
nop
or
cmp
lods
cs
ds
mov
mov
int
in
pop
push
mov
and
mov
into
cmp
aam
jle
in
jno
mov
into
in
push
jae
mov
mov
push
xor
add
cmc
ljmp
int
push
jmp
jl
outsl
mov
pop
add
add
xchg
mov
adc
pop
mov
lods
pop
mov
aad
dec
push
das
icebp
or
jge
mov
sti
mov
add
jb
add
jp
jo
pop
mull
lock
jmp
mov
dec
dec
jae
stos
jo
xorb
mov
cld
je
cs
scas
jle
and
lcall
lahf
push
or
imul
hlt
jge
cmp
loopne
adc
pop
pop
aam
jne
sbb
push
or
push
mov
xorl
mov
cmpsl
pop
fwait
orb
or
popa
enter
ret
ljmp
dec
jbe
and
rcrl
mov
mov
cmc
push
xlat
push
test
xchg
sbbb
sbbl
and
sarb
pop
movsl
stos
insb
xlat
into
into
stc
mov
xor
cmp
lds
inc
int3
aad
mov
pop
xchg
hlt
loope
jne
add
xchg
mov
stos
test
mov
hlt
lahf
lahf
add
xor
into
and
sub
and
adc
mov
mov
mov
lcall
adc
dec
popf
pop
xor
and
jo
mov
je
mov
mov
push
rorl
push
mov
cmpsl
pop
adc
mov
mov
mov
popf
cli
adc
movsb
clc
scas
or
dec
ficompl
push
lea
jp
pusha
enter
lods
sahf
cmpb
xchg
lahf
sub
stc
push
es
cmp
popf
and
push
aam
jne
test
mov
adc
lahf
sahf
add
movsb
clc
jbe
test
xor
mov
inc
das
cmc
je
cltd
jnp
fs
pop
inc
addl
inc
arpl
test
add
shrb
add
orb
sub
inc
push
fstl
mov
push
push
int
sahf
mov
pushf
sbb
call
mov
cmc
imul
das
add
sbb
inc
stos
into
jecxz
inc
inc
and
test
cmc
mov
and
pop
outsb
stc
fnstenv
and
mov
push
push
imul
cmc
push
in
mov
jg
test
or
push
dec
fisubs
push
xor
mov
mov
and
mov
inc
pop
push
jnp
mov
es
mov
orb
jno
dec
jne
mov
out
ss
gs
push
loope
xor
xchg
jne
fistl
inc
out
and
add
repnz
in
mov
sub
or
js
add
jns
stos
into
dec
es
lahf
and
mov
enter
adc
jl
movsl
push
adc
mov
imul
das
mov
xchg
icebp
xchg
sti
js
adc
cwtl
cltd
pop
mov
int3
push
mov
cwtl
shll
or
movsb
push
sub
lcall
inc
inc
mov
es
pushf
mov
inc
add
addr16
push
out
repnz
push
clc
into
mov
in
mov
data16
pop
das
cli
enter
mov
mov
mov
fcmove
test
into
sub
mov
xor
daa
and
pop
insl
stos
test
outsl
loope
std
ss
push
lock
push
lea
mov
clc
lock
mov
dec
imul
test
fdivrl
pop
push
hlt
stos
dec
jl
sbb
mov
sub
shlb
dec
and
cmpsb
push
nop
stc
sbb
clc
fadds
rcr
mulb
lret
cmp
push
and
fsubrl
into
lock
adc
sbb
std
pop
dec
jne
stos
jae
add
or
or
sub
xchg
aad
jecxz
and
roll
xchg
enter
lret
sub
dec
push
mov
and
lcall
mov
adcb
pop
inc
int3
scas
mov
pop
xlat
mov
pop
in
xchg
mov
out
mov
mov
or
test
jo
int3
std
icebp
dec
fimuls
mov
add
stc
scas
out
jo
test
xor
dec
dec
icebp
mov
iret
inc
int3
jo
cmc
add
repnz
jne
aad
mov
adc
xchg
pop
fs
adc
inc
jbe
xor
sub
into
shl
push
mov
xchg
call
inc
pop
jne
push
sbb
scas
cmp
xchg
sahf
inc
rcl
add
out
dec
sbb
loop
xchg
into
push
icebp
call
sarl
pop
jne
enter
add
mov
add
mov
cmp
bound
shr
push
adc
sbb
jne
jp
lock
ljmp
push
dec
bound
mov
pop
out
outsl
jne
mov
jbe
xor
out
cwtl
mov
sbbb
adc
test
mov
call
cs
and
sub
pop
pusha
cmp
jg
cmc
pop
xorb
mov
icebp
mov
int3
xchg
push
sub
imul
inc
add
ss
push
and
jecxz
in
bound
lret
pop
inc
mov
mov
add
add
insl
mov
data16
into
nop
ljmp
push
gs
sub
mov
sub
fimuls
cli
pop
mov
jmp
jbe
out
adc
outsb
jns
divb
push
jns
mov
adc
mov
jns
cmp
dec
inc
sub
out
mov
enter
das
je
and
testb
xchg
fwait
and
jp
sub
in
sub
lret
jb
dec
cmpsl
sub
add
ds
ljmp
jb
xor
sub
insl
sbb
jl
sub
sbb
testb
bnd
mov
mov
jo
cmp
add
sub
gs
dec
sti
pop
mov
shr
jmp
repnz
adc
and
mov
dec
sbb
loop
mov
mov
add
cmc
dec
cmpl
xchg
imul
test
mov
mov
lea
iret
lods
add
cmp
mov
jb
adcl
xchg
mov
xchg
jbe
andb
mov
movsl
inc
jne
push
aam
cmp
int
outsl
testl
lahf
out
data16
sbb
mov
in
loop
scas
cmc
inc
jl
xchg
mov
bound
popf
mov
jne
add
adc
data16
mov
xor
andb
cmc
jae
xor
dec
sarl
lret
and
ret
sub
xchg
les
popa
push
sbb
xor
dec
inc
cmp
into
test
and
xchg
nop
sub
ljmp
xchg
and
stos
int3
popf
cli
mov
out
jmp
mov
sbb
psubusw
decl
outsl
or
xchg
cmpsl
cld
addr16
icebp
push
and
jl
adc
cli
data16
lret
sub
push
mov
das
hlt
mov
cmc
stc
inc
ficomps
mov
add
aam
lcall
cli
push
mov
inc
inc
lock
and
jne
sbb
mov
jle
dec
lock
ds
movsb
push
nop
aam
pop
pop
mov
jnp
aad
cmp
pop
xchg
cmp
inc
loope
out
sbb
add
dec
inc
call
ret
jne
ficompl
out
jg
xchg
mov
ljmp
enter
mov
mov
mov
dec
mov
lods
add
scas
fcmovu
popa
push
call
mov
cmp
mov
into
pop
sub
pushf
imul
mov
sub
lods
aad
faddl
insb
mov
repz
hlt
shll
mov
sbb
or
push
aam
movsl
jno
jmp
xor
fs
arpl
xchg
jnp
repnz
sub
add
and
push
mov
arpl
into
mov
in
js
or
xchg
pop
test
outsl
inc
out
sarl
sub
xchg
mov
fucomi
push
into
fnstcw
xchg
iret
mov
push
cli
inc
scas
pop
add
test
cmpsl
je
xor
jecxz
add
jne
rcrl
xor
rorb
setnp
in
rcll
push
imul
lods
mov
xchg
js
jge
hlt
notl
int3
mov
sub
dec
dec
adc
push
and
dec
jo
or
mov
dec
mov
inc
jne
mov
decb
mov
ret
jne
fs
lods
loope
lods
sarl
cmc
xor
sub
mov
rorb
add
adc
enter
xchg
push
outsb
push
xor
and
and
xchg
insl
add
aas
jnp
cli
fcmove
jmp
lahf
jp
push
jl
inc
xchg
test
repnz
mov
scas
das
in
and
pop
gs
or
jb
aam
icebp
lods
std
std
out
mov
xor
dec
cmp
xor
xor
stos
push
or
sbb
call
je
fwait
xorb
insl
push
jle
into
mov
int
and
addl
or
ds
movsb
pushf
in
loope
add
nop
xor
aas
mov
inc
xor
or
andb
int
pop
inc
jne
or
loope
jne
addb
jmp
adc
fisttpl
lods
out
add
xchg
leave
pop
cmc
push
jl
xor
mov
adc
sahf
std
mov
pop
push
addl
or
mov
shll
outsl
test
xor
iret
loopne
rorl
push
mov
push
mov
push
lret
mov
xchg
popa
rorl
lret
add
inc
push
xor
push
jb
dec
xlat
pop
jne
imull
icebp
pop
inc
aas
mov
sti
inc
push
lret
test
aas
sti
mov
pop
hlt
aas
out
push
aam
fstpt
jge
incb
inc
jae
cmp
push
popf
andl
xchg
andb
adc
lea
mov
push
add
rorb
mov
sarb
subb
fdivrl
out
sbbb
or
pop
sbbl
mov
mov
lret
nop
xchg
xchg
outsl
cwtl
daa
test
xor
xchg
lds
imulb
xchg
sbb
adc
popa
and
sub
lahf
stos
repz
push
fidivl
jo
test
ja
je
pushf
inc
push
lock
popa
repz
jne
jge
shlb
mov
jo
jne
add
stos
jns
stos
js
aas
mov
xchg
sbb
cmc
test
push
dec
hlt
ss
xchg
mov
inc
cmp
aam
dec
cmc
imul
inc
jae
sub
sahf
xor
call
jp
repz
fcomip
jmp
es
rorl
mov
push
xchg
lea
jb
std
jns
inc
xor
lds
pop
test
cmp
push
ret
out
push
xchg
add
sub
js
cltd
jmp
add
or
mov
cmpsb
jns
or
cli
mov
and
aas
dec
mov
stos
jp
pop
cmp
loope
or
sub
loop
mov
and
ss
push
cmpsl
mov
out
mov
jge
add
mov
push
push
sbb
add
xchg
or
outsl
movsb
xlat
aam
mov
mov
jmp
xchg
fucomp
in
in
and
inc
int
jmp
shlb
cmp
popa
test
xchg
lret
enter
jo
cld
into
inc
dec
xchg
jp
test
mov
push
imul
xor
sub
or
add
sub
xor
test
push
and
cmpsb
outsb
or
cmp
pop
roll
mov
or
add
addr16
loop
mov
movsl
add
out
inc
popa
mov
xor
add
cmp
sub
adc
mov
insl
cwtl
ja
dec
ss
pop
mov
pop
or
pop
icebp
sbb
in
push
test
clc
lods
fidivs
leave
mov
or
loop
arpl
xor
nop
ds
cli
lret
push
lcall
aad
adc
jns
xchg
dec
and
mov
popf
dec
adc
mov
into
sahf
lds
test
push
fsubl
fldt
mov
in
xor
and
lock
or
cld
test
inc
sbb
push
fnstenv
xchg
mov
repnz
xchg
lea
scas
int3
test
and
sub
insl
xor
aad
out
gs
icebp
jg
or
sub
lret
ljmp
jnp
mov
adc
dec
cli
aaa
std
push
daa
shl
pop
dec
adc
mov
pop
iret
xor
loope
dec
lods
icebp
cmp
sti
imul
lds
pop
cmpsl
mov
adc
js
mov
out
movsb
dec
mov
mov
push
inc
stos
add
jo
aad
std
mov
stos
outsl
mov
cli
js
daa
outsl
idivb
cmp
lods
dec
xchg
lahf
ret
shlb
jo
mov
nop
in
sahf
mov
lret
inc
cmc
lret
mov
mov
adc
cmc
lods
out
lods
pop
sbb
dec
push
pop
xlat
addl
or
icebp
test
jno
mov
out
push
xchg
mov
into
mov
arpl
fstl
in
bnd
and
xor
outsl
iret
adc
out
out
jne
or
shlb
mov
es
mov
out
fs
and
xchg
adc
jl
mov
pop
xchg
push
push
std
jecxz
cmp
pop
movsb
aad
xchg
jle
mov
pop
stos
popa
lret
fiadds
rclb
jmp
and
movsb
push
pop
or
repnz
ja
cli
decb
cs
and
gs
js
cwtl
stc
mov
aaa
xchg
fcoml
std
sbb
and
add
idivl
in
jecxz
mov
xchg
cmp
xchg
into
stc
push
jmp
mov
push
mov
adc
xchg
in
mov
inc
sub
jp
push
sarl
jl
stos
das
xlat
add
flds
mov
lcall
or
cltd
insl
leave
adc
arpl
add
jne
sub
movsl
loop
mov
dec
pop
testl
sarb
nop
lret
cmc
stc
aas
sbb
int
loop
xchg
dec
jne
sbb
jl
mov
mov
fcomip
mov
xchg
test
dec
rolb
mov
xor
adc
into
adc
fs
addl
mov
pop
jno
cmp
sbb
inc
mov
mov
pop
pop
std
or
daa
lock
jns
jg
sub
add
mov
div
dec
jb
dec
mov
jl
cmp
cli
subb
jne
fwait
pop
fidivl
jb
xchg
push
cmp
adc
addr16
repnz
mov
hlt
sbb
loope
sbb
dec
lcall
xchg
push
insb
aam
out
imul
imul
add
es
cld
add
mov
in
mov
lods
mov
mov
popa
test
cmpb
test
cmp
in
aaa
orl
fisttpll
sub
into
sub
cltd
jbe
outsl
sbb
repz
pop
in
fistl
mov
hlt
ds
pop
jns
sbb
inc
add
stos
xor
push
stos
jnp
into
pop
int
push
cmp
mov
add
mov
loopne
dec
js
inc
add
out
mov
dec
mov
xchg
pop
or
fldenv
notb
std
clc
ds
cmc
shrb
decb
mov
imul
fisttpll
lcall
shrb
pop
xchg
cmc
aaa
js
imul
push
xor
test
jne,pn
hlt
addl
into
or
push
or
jg
hlt
dec
mov
mov
mov
mov
mov
mov
sub
push
iret
lods
test
scas
pusha
dec
fldt
dec
jl
rclb
jge
rorb
sbb
into
push
scas
jl
sub
popf
in
es
rorl
add
out
jecxz
mov
nop
inc
add
imull
adc
orl
in
stc
fwait
call
stos
dec
mov
pop
in
and
loope
mov
jnp
pop
jne
xchg
xor
add
push
dec
imul
dec
xchg
lret
mov
lret
and
push
push
or
adc
arpl
stos
mov
insl
jne
add
rolb
inc
lea
pop
or
lea
jmp
mov
int3
orb
ficoms
add
loop
cmp
inc
mov
and
subb
loopne
cmc
add
mov
jmp
in
repz
add
inc
daa
les
test
into
stos
mov
test
in
xchg
add
xchg
sti
mov
jg
lock
cltd
or
dec
mov
push
loope
sbb
jle
lods
add
das
lahf
mov
icebp
xor
cmp
cmp
cmc
enter
dec
imul
rolb
push
movsb
xchg
xchg
cmp
iret
cltd
jae
sub
lock
cmp
lahf
add
mov
loopne
adc
shrl
in
xchg
adc
popf
jne
xchg
stos
xchg
mov
xlat
inc
cmpsl
leave
jl
add
jbe
mov
push
xchg
jne
popa
addb
imul
dec
xor
fldenv
addl
lock
mov
js
jbe
pop
cltd
sbb
and
sbb
cld
inc
imul
jne
test
scas
jmp
jns
arpl
and
into
subb
push
xchg
repnz
shlb
out
jbe
cmp
inc
mov
pushf
mov
xorl
xor
orl
xchg
or
and
sbb
in
cmp
jbe
mov
sti
jae
push
mov
pop
pop
scas
cmp
adcl
mov
jmp
add
add
shll
fidivl
rcrl
xchg
movsl
mov
ss
in
stc
jne
adcb
add
cltd
les
in
jns
inc
imul
mov
adcl
add
test
push
test
xor
loope
inc
fwait
and
add
pop
adcl
pop
add
add
mov
xchg
cmp
pop
popf
mov
jg
and
sahf
loop
aad
add
lahf
push
fs
cmp
and
rcll
mov
aaa
ljmp
into
mov
push
cmpl
mov
push
cs
cmpsb
jl
icebp
pop
pop
xchg
aas
fucom
push
rcrl
sbb
sub
das
jmp
cmc
fisttps
jg
dec
sub
lock
scas
cli
mov
movsl
jmp
cmp
dec
xor
fdivrs
ja
and
hlt
ljmp
sbb
push
mov
test
js
push
fimull
mov
sub
push
stc
jmp
xchg
mov
jecxz
mov
out
add
rol
dec
out
push
outsb
aam
adc
stos
cmc
inc
xchg
imul
out
dec
repz
xchg
das
push
xchg
cmpsl
and
sbbl
sbb
mov
sbb
out
lea
xor
pop
adc
fnsave
test
sbbb
roll
pop
jmp
sub
xor
aad
sub
jb
das
xor
stc
jne
add
push
jl
xchg
jbe
scas
popf
jb
pusha
mov
pop
cwtl
cmc
sahf
mov
sub
pop
ljmp
les
nop
push
mov
jl
adc
xor
outsb
jg
add
dec
xchg
hlt
xlat
sub
fisttpl
jno
mov
cmp
dec
insl
ror
inc
xor
sub
push
jg
dec
roll
xchg
shl
addl
stc
not
add
lahf
sbb
into
rclb
cli
nop
mov
xchg
adc
outsl
or
pop
cmc
mov
mov
mov
lock
xchg
sbb
lock
aad
int3
mov
leave
std
js
add
jecxz
test
jae
add
popf
mov
inc
cmc
xrelease
pop
dec
dec
loopne
dec
andb
cli
or
fcmovnbe
pop
and
sbb
cs
out
aad
jl
jnp
stc
fiaddl
in
cmpb
das
xor
rorb
xor
sbb
pop
stc
pcmpgtd
mov
inc
mov
in
into
into
call
sti
mov
in
jl
into
jmp
xlat
jno
sub
ja
add
xlat
mov
push
mov
add
lcall
outsl
adc
mov
addb
in
xor
ss
inc
jne
jg
and
adc
inc
add
inc
ss
or
mov
cmc
ljmp
push
lea
dec
jne
pop
lds
fwait
cmpsb
ds
pop
mov
push
arpl
mov
scas
js
inc
test
lea
dec
lret
xor
mov
fstl
mov
lods
push
movsb
inc
cmc
push
bound
sbb
pop
jg
xchg
ss
jmp
sahf
sub
popf
into
mov
xor
adc
arpl
cmc
mov
pop
mov
ds
pop
mov
push
aas
test
dec
mov
and
jne
mov
pop
jne
lret
rolb
sub
addb
mov
inc
rclb
mov
pop
push
xor
or
xor
outsl
sub
addl
xchg
popa
add
mov
test
cmp
xchg
loop
adc
mov
jmp
xlat
adc
mov
mov
pop
int3
dec
pop
hlt
dec
test
dec
insl
daa
push
loopne
int
ljmp
scas
mov
pushf
lds
push
dec
subb
addb
push
adc
adc
mov
pop
xor
pop
jns
insl
add
orb
outsb
add
push
lahf
into
jae
push
ds
jmp
ss
ja
jo
mov
arpl
fidivs
xchg
jge
test
pop
rcrb
mov
dec
ret
shlb
jg
push
jmp
iret
jno
lahf
sub
jl
cmpsb
mov
faddl
mov
dec
mov
popa
adc
inc
lcall
test
jnp
js
push
mov
inc
xor
mov
mov
cmp
cmp
leave
rorl
jae
add
hlt
mov
mov
dec
add
pop
les
lcall
push
std
into
incb
dec
mov
repz
and
pop
mov
push
lea
test
mov
xlat
dec
cmp
and
add
popa
lock
adc
das
lret
fwait
push
sub
dec
lods
mov
int
inc
push
mov
test
jae
jno
add
pop
into
fstpl
scas
and
ljmp
adc
or
out
add
dec
pop
lock
bound
or
cmc
fwait
xchg
cmp
inc
and
mov
cmc
push
loopne
arpl
dec
lods
jo
aas
or
cli
insb
or
and
into
ds
cmp
mov
repnz
xor
andl
cmpsl
xor
icebp
xor
push
pop
and
mov
dec
arpl
xor
mov
inc
mov
cmp
test
adc
sbb
inc
or
jg
lret
mov
int
lea
testb
mov
leave
sbb
scas
mov
andb
stc
xor
jecxz
xchg
into
jl
repnz
adc
subb
out
mov
mov
loope
fcompl
push
add
push
adc
lock
mov
aaa
cli
mov
jp
and
scas
jle
mov
push
or
ss
sub
into
mov
and
adc
clc
lret
inc
sbb
dec
mov
call
mov
push
insb
xlat
inc
or
push
pop
fcmovu
fs
jae
adcl
sbb
sarb
push
lods
mov
fists
inc
sub
sub
push
fnstenv
mov
push
mov
add
dec
imul
xlat
fimuls
push
mov
imul
int
xchg
sub
xchg
push
fisttps
push
in
dec
aas
add
mov
popf
pop
add
popa
pop
xor
and
cld
pop
mov
dec
insl
cwtl
mov
test
jo
scas
jmp
insb
out
push
inc
or
xlat
gs
dec
dec
stos
sbb
jnp
cwtl
jnp
int3
or
subl
and
rcrb
into
xchg
sbb
mov
cmp
add
or
inc
mov
cltd
and
orb
test
push
jne
lea
push
adc
lahf
or
adc
xor
sarb
data16
out
out
je
stos
popa
cmpb
pop
gs
jns
push
ja
mov
call
scas
inc
aad
sub
sub
add
inc
pop
pop
mov
shlb
aam
sub
dec
nop
cmc
xchg
inc
out
cld
addr16
xor
or
adc
popa
jne
pop
sbb
dec
adc
sub
sti
inc
mov
fisttpl
push
clc
jbe
or
pop
cmc
mov
jns
sbb
rorl
or
icebp
inc
shrb
adc
xchg
mov
and
jg
adc
xor
scas
stc
jb
cld
sbb
pop
or
loop
repz
stc
lods
jbe
push
aam
push
movsb
mov
mov
pop
dec
mov
mov
orb
test
jae
stos
mov
daa
cmpb
jne
push
xor
or
ret
addb
cmp
mov
lock
imulb
dec
cmc
fstl
mov
and
ss
push
add
and
mov
pushf
jne
push
insl
sub
or
add
mov
add
in
and
jo
mov
mov
movsl
in
or
mov
pushf
inc
movl
push
xor
adc
xchg
ja
push
mov
dec
lea
push
mov
mov
mov
das
sbb
and
inc
jmp
dec
scas
jb
into
mov
cmp
and
cmpl
inc
or
mov
daa
outsl
into
popa
push
push
cmc
cmp
pusha
jge
shr
jg
fildll
sbb
out
xor
mov
jnp
repz
mov
mov
mov
out
sub
dec
push
outsb
out
cli
jmp
int3
mov
lret
sbb
or
sub
mov
ror
or
fistpl
inc
andl
jne
push
add
fildll
cs
dec
loope
mov
out
lret
popa
divb
jno
cld
mov
icebp
sub
pop
int3
inc
and
cmc
or
jae
push
add
iret
inc
sti
mov
mov
pop
or
pushf
xchg
pop
add
andb
push
mov
dec
decb
push
rorb
hlt
add
jno
dec
ficompl
fdivrl
das
lds
scas
xchg
dec
sbb
out
mov
mov
mov
cmp
fstps
in
dec
jg
cltd
sub
mov
imul
and
mov
jb
xorl
in
iret
push
cmp
mov
inc
sub
dec
push
mov
sub
jb
cmp
out
cmp
roll
popl
pop
test
dec
dec
sub
pushf
pop
imul
pop
dec
cmc
mov
mov
movsb
add
mov
fisubs
fnstsw
neg
and
fistps
mov
or
lods
pop
and
mov
mov
xchg
int3
add
push
out
repnz
repnz
enter
pop
push
fsubrs
mov
negb
ljmp
nop
mov
sub
jg
mov
frstor
repnz
add
scas
push
xor
jp
cli
mov
ret
lahf
and
jne
lahf
aas
jae
mov
fcmove
cltd
fwait
rcrl
sub
bound
sahf
or
and
and
stos
jno
int3
mov
outsl
aaa
inc
jl
sahf
mov
pop
jne
repz
imul
loop
fdivrl
rcll
fdivrl
andl
push
jnp
jge
xchg
dec
daa
ret
rcr
add
xor
pop
sbb
jne
mov
sarb
fwait
jns
add
ja
add
sbb
push
in
inc
or
mov
xor
pop
sbb
mov
cmp
faddl
mov
dec
cmovg
in
arpl
cmpsb
pop
xchg
and
inc
or
add
loope
gs
mov
mov
imulb
and
das
shlb
sarb
shll
xor
jmp
inc
mov
push
pop
hlt
xlat
mov
out
ljmp
adc
xchg
cld
pop
or
js
cmp
jg
push
mov
push
test
push
dec
pop
jno
add
gs
jbe
sub
ror
bound
repz
decb
aaa
fistpll
adc
mov
stos
dec
loop
dec
std
mov
adc
test
mov
dec
lcall
push
inc
push
mov
xchg
jecxz
add
jno
leave
mov
filds
add
push
mov
xchg
out
mov
ja
fsubr
divl
and
scas
mov
shlb
ljmp
jle
daa
cmc
outsb
ret
ret
lcall
mov
ret
sub
sbb
jbe
add
mov
sbbb
daa
dec
add
cmc
ret
scas
dec
adc
pop
out
sbb
add
das
mov
or
pop
mov
fbstp
jno
lahf
and
sar
repz
and
mov
pop
rcrb
sti
fucomp
jae
jne
cwtl
mov
sti
dec
inc
cmp
sbb
sbb
test
shlb
sahf
cmp
xor
dec
bound
push
xor
fsubl
scas
lods
fucomip
push
push
xchg
scas
pop
addl
inc
roll
adc
xchg
lods
rorb
or
int3
adc
mov
int
pop
dec
hlt
into
addr16
andl
clc
mov
xor
dec
ds
rorl
je
sbbb
xchg
mov
cmp
lret
xchg
scas
push
sbb
rol
and
mov
mov
js
sbb
and
adc
nop
cmp
test
call
out
jae
test
xor
push
push
cs
inc
sub
subl
xor
mov
cmp
mov
dec
pop
mov
loop
xlat
mov
aad
xchg
xchg
jne
in
insb
xchg
dec
add
in
lahf
add
sub
insl
sarl
lret
into
jl
and
and
push
sub
fs
push
mov
mov
lds
andb
sub
lods
loopne
addr16
arpl
int3
fmull
test
stos
push
stos
fdivl
gs
sbbl
imul
js
mov
adc
mov
data16
xlat
and
into
mov
hlt
lea
ret
add
lret
pop
mov
in
test
xor
sbb
test
js
mov
test
mov
sbb
aaa
jne
pop
mov
jmp
shr
jbe
sub
pop
mov
lock
cwtl
rorl
cmc
outsl
jne
cltd
aaa
stc
ds
mov
das
pop
jmp
nop
dec
dec
leave
loop
in
lret
or
mov
xchg
hlt
dec
jo
push
sahf
movsb
inc
add
jge
bound
mov
pop
jb
mov
popa
test
nop
lcall
sbb
xor
adc
adc
mov
and
in
xorb
jl
jne
movsl
clc
cmp
mov
push
fsubs
jmp
cmc
or
pop
into
stc
sub
nop
jnp
push
xchg
xor
ljmp
daa
testb
insl
xchg
loop
dec
fcoms
sub
dec
jl
jge
mov
and
clc
and
in
and
pop
fs
sbb
push
sub
imul
xchg
inc
dec
mov
xchg
mov
mov
xchg
iret
insb
pop
xchg
cmc
mov
jo
mov
xor
jge
push
mov
pop
or
js
fs
les
notl
jnp
pop
push
jecxz
mov
xchg
addr16
dec
cld
das
push
and
pop
sub
adc
test
xor
push
inc
lret
jl
push
pop
fmuls
mov
fcom
inc
push
sbb
xchg
jne
int
fsubs
xchg
jecxz
add
dec
roll
jnp
mov
cli
clc
mov
jae
fsubs
jne
loop
xchg
lcall
push
mov
gs
arpl
xchg
std
cmp
adc
pop
push
stos
sub
mov
sbb
repnz
sbbb
add
or
ss
push
negl
lahf
and
mov
ja
js
in
lcall
adc
push
in
dec
fldenv
jge
sti
dec
std
into
and
sbb
dec
add
add
cmp
cltd
dec
xchg
fwait
sti
adc
jge
dec
adc
jmp
jae
adc
adc
cmp
dec
add
inc
ret
divl
add
int
jecxz
inc
sbb
gs
lods
adc
sub
dec
inc
sbb
cmpsb
mov
loope
repz
sti
gs
je
into
into
lods
bound
arpl
pop
jae
outsb
jne
out
in
cmc
fistps
xchg
xchg
push
mov
and
add
aad
popf
dec
orb
popa
leave
in
mov
mov
xor
iret
lds
add
cld
jmp
cmc
fadd
sbb
frstor
mov
add
inc
sbb
adc
pop
mov
pop
cmpsl
int3
add
cmp
outsb
push
arpl
xchg
adc
jp
popf
jae
jmp
daa
mov
in
les
add
and
mov
mov
or
cwtl
xchg
stos
dec
ss
mov
cmp
cmp
cld
jns
addb
out
in
and
or
xchg
dec
xlat
jmp
inc
pop
icebp
test
xchg
cwtl
fs
das
push
sub
pop
pop
inc
pop
xchg
cmp
fldl
and
jbe
push
jno
mov
loope
adc
sub
in
ljmp
cmp
jbe
out
dec
sti
mov
jnp
cmc
ficoml
lods
sar
stos
add
and
sub
popl
daa
fwait
outsl
ror
imulb
push
jg
mov
ds
adc
into
imul
into
sbb
ss
xor
aam
dec
jge
scas
out
push
or
fwait
xorb
dec
shrl
mov
pop
test
add
in
lds
stos
dec
fwait
lock
les
subl
push
xor
dec
sahf
in
mov
sbb
pop
jo
jge
sub
or
jl
inc
scas
test
cwtl
movl
mov
dec
xor
das
mov
enter
mov
xchg
pusha
subb
add
dec
xor
push
fdiv
cltd
push
cmp
mov
int
mov
jne
adc
lock
nop
lock
stos
pop
andb
gs
cmc
xchg
jmp
arpl
icebp
stc
jl
sub
negb
mov
lret
subb
mov
movsl
clc
sahf
add
in
xor
testb
movsl
ret
push
iret
inc
and
mov
stos
icebp
mov
scas
mov
push
xchg
out
test
jbe
pop
push
pop
scas
xchg
or
xor
data16
add
sub
dec
xchg
dec
jp
das
xlat
inc
scas
and
pop
popa
pop
and
jne
cmc
xchg
sbb
adc
aaa
cmpsl
adcb
sub
xor
dec
push
icebp
cmc
jge
fists
movsb
dec
push
gs
js
push
in
fnstcw
dec
and
aam
call
jno
sbb
test
std
push
adc
add
xchg
movsb
sti
rcl
pop
inc
fmuls
xor
mov
push
js
xchg
mov
mov
push
cmc
pop
imul
rclb
popf
cmc
int
mov
ds
pop
lds
mov
ret
aam
push
loope
mov
add
mov
add
jnp
in
pop
jns
rorb
mov
pop
mov
cld
jo
and
mov
cmp
subl
pushf
jbe
xor
jg
inc
adc
js
dec
and
jmp
dec
sahf
mov
cmp
mov
jle
test
mov
lret
lods
dec
movsl
pop
xchg
scas
and
jp
push
mov
mov
js
cmp
jle
into
es
inc
adc
mov
in
insl
mov
scas
cli
xor
lods
stos
jg
mov
nop
test
dec
jnp
sub
mov
movl
aas
aad
testl
repnz
mov
iret
insl
adc
mov
sahf
in
pop
push
mov
pop
call
mov
pop
add
adc
jae
cmp
cmp
scas
mov
add
mov
cmc
in
dec
call
cmpsb
ficompl
test
data16
daa
in
xor
xor
stos
xchg
cmp
cmpb
jp
aas
movsb
jb
mov
sbb
lods
adc
pop
pushf
andb
jg
lock
pop
dec
fucomi
jl
cmpsl
jecxz
adc
and
outsb
cli
mov
jne
adc
add
dec
cmp
in
push
pop
stos
pop
test
daa
sbb
js
dec
jno
and
xchg
dec
test
lahf
xor
orl
in
sbb
cmp
inc
popl
or
add
loop
and
mov
xchg
pusha
js
out
shrb
cltd
mov
andl
push
mov
xchg
mov
lret
mov
jbe
xchg
lock
or
in
faddp
bnd
in
pop
mov
mov
aaa
xchg
pop
jne
push
les
repnz
inc
pop
int
cmpb
imul
call
pop
int3
and
mov
aaa
arpl
push
test
xor
cmc
repnz
xor
dec
dec
addr16
mov
ret
inc
jne
inc
push
pinsrw
les
scas
dec
mov
jno
mov
scas
cmc
mov
pop
lcall
cmpsl
and
lcall
inc
dec
sbb
adc
cld
mov
xchg
stc
xor
inc
or
shll
scas
das
pop
popf
lock
mov
xor
push
scas
dec
mov
sub
cmp
push
push
sub
nop
sub
arpl
and
or
xor
mov
cmc
andb
sbb
sbb
mov
mov
insb
dec
dec
mov
push
mov
ret
push
add
rorb
mov
pop
insl
push
sbb
lds
lds
xchg
xchg
test
cmc
cmp
dec
pop
push
in
cmp
or
dec
stos
or
dec
andb
and
add
movsb
adc
lock
inc
icebp
sub
push
and
jb
push
cwtl
cmp
ror
mov
fimuls
stos
push
jg
test
movb
jne
pop
mov
mov
in
xchg
pushf
stc
jp
mov
test
add
jne
and
mov
mov
sub
inc
addr16
outsl
pusha
mov
aam
sar
adc
sbb
adc
lea
dec
inc
mov
mov
sahf
mov
sbb
or
mov
mov
aad
mov
repnz
add
call
cmp
movsl
fisttpl
or
and
incl
inc
sbb
inc
sbb
stos
push
je
jg
or
subl
jne
movsl
ret
pop
cmpsb
test
dec
inc
mov
add
int
les
add
fisubrs
jne
add
jecxz
test
testl
inc
xor
imul
push
out
jge
arpl
adc
xchg
push
js
inc
push
mov
inc
mov
ret
andb
test
mov
sub
add
rolb
and
popa
pop
data16
mov
call
xchg
inc
xor
sub
fsubrs
dec
stc
shr
and
cmpsb
jbe
ret
xlat
mov
pop
mov
into
nop
into
movsl
pop
insl
push
mov
shll
push
mov
fwait
cmpsb
aad
adcb
mov
inc
or
jne
add
inc
mov
push
mov
add
daa
lret
ficoml
push
dec
hlt
xchg
adc
push
idiv
stos
into
add
jne
decl
adc
shlb
mov
loopne
cli
cmp
aam
or
mov
sbb
cmp
mov
je
cld
shll
lea
cltd
jne
ja
or
inc
or
lods
add
cmp
push
rclb
data16
or
subb
outsl
aaa
push
cmp
xchg
push
xor
xchg
sub
inc
dec
pop
js
stc
loope
fists
aas
cld
into
loopne
and
xchg
mov
ljmp
scas
inc
xchg
fcmovne
xor
add
mov
test
stos
inc
jne
jns
fildll
call
push
js
pop
stos
and
inc
mov
cli
ss
mov
into
mov
repnz
lahf
inc
clc
out
jne
cmp
sub
xchg
int
add
push
mov
pop
jne
in
loop
mov
dec
scas
mov
sub
jo
int
and
mov
dec
push
and
adcb
mov
dec
xor
adc
mov
std
or
aaa
jne
cmp
or
out
jl
add
into
xchg
xchg
dec
fwait
es
sahf
sub
pop
inc
push
aas
inc
pop
xchg
cli
pop
mov
cli
in
inc
xor
frstor
cltd
fcom
bound
cmp
into
inc
jo
enter
movsl
orb
fwait
sbb
and
sahf
xchg
lcall
test
dec
push
or
leave
jne
sub
mov
lds
adc
mov
jne
aad
cmp
test
adcl
push
iret
mov
mov
int3
and
mov
es
add
aam
scas
in
mov
mov
test
data16
and
cli
push
and
addr16
popa
dec
xchg
pop
fwait
or
shlb
cmp
dec
iret
or
fistpl
xchg
stc
mov
mov
pop
shrl
jle
pusha
mov
xor
mov
lea
daa
js
mov
mov
and
dec
or
and
dec
fdivs
mov
and
mov
cmpl
call
ret
in
jo
movsb
and
loope
shrb
fldt
test
xchg
lret
lds
push
pop
adc
lahf
add
mov
stc
add
test
clc
xchg
push
lret
mov
movsl
xchg
into
sub
inc
loopne
jp
lahf
jae
lret
jmp
addr16
ja
inc
pop
daa
cld
and
pop
xor
scas
mov
mov
ss
movsb
sub
xlat
ljmp
inc
jmp
andb
lret
or
and
bound
xor
sub
mov
add
insl
xor
and
movsl
lret
sub
inc
sub
and
sbb
ret
popw
push
xchg
xchg
je
jnp
pushf
pop
cmc
out
sbb
jb
xchg
adc
je
test
xorl
mov
popa
or
js
sub
lea
push
stos
into
mov
inc
loop
or
inc
and
hlt
cltd
scas
ja
mov
pop
push
in
pop
inc
sahf
mov
mov
mov
test
cmp
sub
sbb
add
fildl
mov
mov
pop
outsl
orb
in
pop
mov
insb
sub
dec
xchg
xor
addr16
cld
or
movsb
dec
lods
nop
and
jno
lret
push
jae
sarb
pop
pop
test
xlat
xorb
mov
stos
outsl
sti
inc
xchg
dec
call
iret
cmc
addl
sbb
insb
pushf
aad
dec
cwtl
dec
fistl
push
push
mov
fisttpll
xchg
sbb
cmp
imul
aam
or
out
loope
and
in
scas
dec
push
push
bound
jae
outsb
or
pmaddwd
lcall
mov
shlb
xchg
inc
jle
mov
ja
pop
int
scas
mov
loopne
negb
xchg
mov
mov
mov
sub
jns
mov
add
push
fidivrs
mov
pop
fwait
jae
mov
inc
pop
loope
cld
jae
call
lret
ret
inc
repz
mov
popl
lcall
test
cmp
aad
pop
clc
jns
dec
and
lock
movsb
xor
pop
jecxz
add
popa
sub
xor
add
mov
loop
pop
jmp
out
dec
mov
add
cmp
test
loope
mov
cmc
mov
stos
in
pop
call
loop
addl
mov
ljmp
push
jns
stos
into
es
test
addr16
andl
pop
insb
fs
add
adc
add
pushf
andl
jne
lret
mov
add
mov
adc
subb
out
iret
scas
push
cmp
xchg
mov
lods
stos
gs
xor
call
out
adcl
push
push
jge
mov
aam
xchg
mov
dec
imul
cmc
popf
roll
std
in
push
pop
popf
or
xor
stc
pop
fcomip
dec
adc
add
scas
jne
sub
fdivs
cmp
out
out
inc
xchg
cmc
add
dec
inc
cmp
hlt
rorl
je
jmp
cmpsl
int
mov
xchg
mov
xchg
and
sub
andl
insl
aad
mulb
sub
push
mov
push
and
mov
mov
cmp
insb
je
or
sahf
xchg
and
mov
xor
loope
push
cmpb
out
push
incb
and
adc
pop
sbb
ret
popf
push
loopne
push
repnz
les
inc
pop
mov
bound
adc
push
push
push
mov
cltd
adc
cmp
xor
push
pop
sub
lods
push
jl
add
out
ljmp
loope
cs
mov
adc
push
xchg
xor
mov
cmp
pop
insb
add
jns
sub
xor
inc
ja
mov
inc
or
add
lock
jg
clc
dec
lock
js
out
cmp
cmc
ds
jns
aad
je
mov
inc
aas
inc
xchg
lahf
jbe
mov
in
rcrl
sub
out
cmp
movsb
pop
inc
jne
pop
mov
mov
xchg
mov
rorl
es
xchg
cld
xor
push
fwait
aaa
mov
and
push
cld
jg
sub
dec
or
popa
dec
jne
out
scas
iret
mov
arpl
dec
clc
mov
mov
mov
ret
push
decb
sbb
xor
popa
jne
ror
ljmp
lret
pop
test
sub
mov
sti
shll
jmp
xchg
or
mov
ja
mov
iret
insb
popa
or
imul
jb
aaa
push
fisubl
xchg
or
mov
pop
jecxz
mov
pushf
xor
and
xor
xchg
jecxz
stc
push
test
xchg
iret
movsl
and
stos
jo
std
aas
jb
mov
mov
sbb
clc
fildll
adc
dec
jl
lds
shll
mov
mov
jg
xchg
mov
ret
push
and
fisubs
xchg
sub
inc
pop
aam
and
or
jg
jg
mov
mov
xor
sahf
add
jle
cld
add
jnp
jg
push
lock
icebp
jmp
or
dec
xor
shlb
sbb
jns
pop
add
aaa
jno
lret
sbb
pop
dec
ret
add
push
mov
adcb
rcr
lret
outsb
call
or
xchg
adc
mov
shll
jo
xchg
cmp
aam
in
jmp
sub
cwtl
int
loopne
bound
mov
cwtl
and
clc
inc
mov
fmul
push
and
inc
mov
pop
jne
sub
cmc
cwtl
daa
rcr
jo
notl
cmp
int3
stc
iret
dec
adc
dec
and
pop
ds
xchg
arpl
adc
into
pushf
cmpsl
repnz
and
jnp
xlat
add
adc
out
arpl
dec
lds
add
pop
nop
add
es
mov
ja
adc
push
shll
test
mov
cli
xor
sbb
pop
and
gs
test
jne
pop
fdivrs
call
pop
addb
out
mov
cmpb
orb
pusha
test
mov
movsl
inc
and
ret
jbe
mov
jne
fwait
aam
jp
jae
cmpsl
add
sbb
mov
into
mov
cmp
lret
fiaddl
jl
or
in
adc
popa
sub
stc
jecxz
mov
into
out
and
test
mov
inc
dec
and
sub
adc
xchg
mov
ss
inc
mov
inc
in
sahf
mov
enter
mov
insl
mov
pop
jne
xchg
mov
xlat
or
into
add
ret
sub
into
loope
adc
sbb
cmc
test
mov
loop
out
add
cmp
add
pop
mov
mov
xchg
outsb
push
cmc
movsb
xor
pop
dec
dec
inc
push
roll
aaa
sbb
sbb
dec
int3
dec
lock
aaa
cmpsl
in
adc
push
hlt
xchg
inc
mov
add
jno
cmpsb
into
into
sbb
mov
push
jge
jle
jnp
mov
sbb
ret
inc
cmpsl
add
fldl
testb
xchg
leave
sbb
iret
bound
das
sub
popf
jne
mov
cli
test
and
je
push
shlb
and
icebp
add
xchg
push
test
insb
push
xor
into
push
adc
lret
adc
out
lods
loop
dec
sub
mov
pop
out
add
orl
into
jbe
cmpl
int
rorl
jp
outsl
jne
cmpsb
cld
jae
and
int3
popa
xchg
and
cltd
cmc
push
inc
mov
add
in
ja
pop
sub
repz
movsl
mov
or
sahf
mov
cmp
aaa
pop
inc
loope
sub
mov
push
mov
inc
cmc
sahf
jae
in
cs
fwait
push
dec
jecxz
add
pusha
sbb
mov
mov
jl
std
lods
mov
sti
sti
aaa
rolb
inc
sub
xor
daa
or
dec
jecxz
mov
xchg
arpl
jne
mov
inc
js
rorl
andb
in
movsb
adc
int
mov
sbb
mov
pop
jbe
cmpl
xchg
in
cmc
in
mov
sbb
or
popa
xchg
jnp
sub
jl
push
mov
add
adc
icebp
push
mov
outsb
jne
sbb
cmp
lahf
inc
sub
shll
and
and
adc
data16
sbb
loop
je
and
pushf
adc
pop
aas
call
mov
inc
cmc
dec
push
dec
jns
mov
mov
lahf
xor
add
out
mov
xchg
test
into
pop
iret
mov
test
mov
js
les
push
adc
fiadds
lret
cs
mov
movsl
push
push
push
and
neg
iret
out
add
xchg
xor
push
jecxz
negb
fnsave
cltd
iret
jmp
mov
pop
jmp
nop
lods
adc
scas
sub
add
jl
inc
push
jbe
mov
mov
and
imul
out
ds
push
adc
sub
sbb
rcrl
inc
and
ds
or
insb
out
mov
out
fldenv
rcr
xor
and
lods
or
mov
lea
mov
cmpsl
xor
pop
call
mov
or
sarl
mov
push
into
push
mov
pop
cmp
cmp
push
lea
or
adc
int3
mov
mov
loope
ret
mov
pop
scas
in
out
fstpt
icebp
out
mov
addr16
insb
inc
fsubrs
dec
pop
call
pop
cmp
cli
mov
and
add
js
and
pusha
repz
add
pushf
fsts
or
repz
mov
or
and
in
shrl
mov
test
pushf
mov
outsl
cmp
inc
stc
jle
test
das
fdivrs
stos
sbb
test
or
flds
adc
cmp
cmpsb
jge
inc
mov
cmpsb
lods
fs
test
test
jnp
dec
repnz
push
fdivrl
ret
adc
inc
test
ja
and
sbb
fnsave
xlat
mov
scas
fadds
cltd
mov
jno
jns
jae
add
adc
leave
jl
test
inc
jmp
mov
mov
jecxz
mov
hlt
xchg
fsin
sbb
insb
enter
adc
add
sub
inc
test
fs
mov
push
test
pusha
xchg
pop
mov
adcb
xor
popa
lods
mov
cmp
gs
jae
je
mov
jbe
or
cmp
jbe
pop
jbe
jae
ljmp
mov
mov
cmp
push
adc
and
adcl
in
shlb
xchg
mov
sahf
adc
mov
repnz
jl
inc
mov
inc
mov
dec
and
sbb
repnz
jge
pop
xchg
fnsave
xchg
out
adc
mov
jae
xchg
sub
cld
mov
xor
inc
xor
adc
push
mov
or
sub
inc
mov
call
ljmp
xchg
ficoms
jae
ja
mov
xchg
push
xor
mov
adc
fsts
jno
mov
insl
adc
mov
mov
aam
gs
pop
xchg
mov
arpl
push
insb
in
pop
push
inc
cmp
xchg
cwtl
out
mov
push
xchg
ljmp
xchg
in
pop
in
or
mov
pop
out
jns
daa
jae
dec
scas
sbb
jg
mov
add
push
mov
mov
sub
fidivrs
push
xchg
sbb
sub
push
push
cli
mov
mov
nop
and
xor
push
sahf
fs
pop
jbe
fdiv
fs
scas
cmpb
mov
jb
inc
insl
push
or
cmp
sub
fdivr
add
sti
enter
xchg
xchg
xor
fidivrl
std
notb
xlat
push
xchg
insl
xchg
repz
mov
cld
cmp
dec
cmpsb
loopne
dec
or
lods
fs
fdivl
xor
outsl
xchg
cmp
xor
xor
cmp
cmp
test
mov
inc
xchg
cwtl
and
aam
in
lds
mov
pop
jo
dec
das
jl
dec
add
cmpsb
push
ud2
mov
sbb
add
jmp
adc
mov
cmp
pop
scas
push
mov
aas
test
dec
cwtl
lcall
pushf
aaa
or
xlat
cmp
push
inc
leave
flds
in
test
filds
pop
in
imulb
lods
push
jb
divb
call
jno
lahf
inc
xor
pmullw
add
ret
nop
aad
in
inc
xlat
fimuls
flds
jecxz
mov
mov
pusha
or
jne
pop
mov
lods
in
mov
loopne
mov
cltd
push
dec
addr16
dec
pop
decl
lock
adc
mov
dec
lea
movsb
jg
xchg
xlat
sarl
fbstp
test
inc
inc
ljmp
dec
cltd
int
das
xchg
push
mov
inc
outsl
inc
mov
lret
enter
xlat
lret
repnz
pop
mov
add
iret
es
inc
nop
adc
decb
aad
xchg
loopne
xor
sub
popf
lds
lret
cmpsl
sbb
and
push
pop
test
repnz
xchg
mov
dec
imul
xchg
jle
cltd
xchg
inc
xchg
inc
fs
lock
mov
adc
or
fbld
dec
ss
mov
xchg
cmpsb
inc
ret
out
stos
mov
cltd
loop
jg
pop
xchg
mov
das
inc
scas
xor
movsb
pop
inc
pop
mov
repnz
pop
lcall
out
or
cwtl
cmpsb
call
pop
adc
shlb
push
imul
lret
sub
nop
vunpcklps
xor
insb
scas
mov
mov
jb
iret
adc
imul
adc
jns
jae
pusha
pushw
push
pop
ret
lock
inc
stos
inc
ficoms
movsb
mov
xchg
xlat
adc
cwtl
mov
xor
cmpsb
loopne
popf
adc
xor
jo
cmp
xchg
outsl
xor
mov
jb
mov
sbb
xchg
ljmp
jle
ljmp
pop
xchg
je
loopne
xchg
mov
lret
jo
xor
lds
lret
and
test
fwait
push
add
fcmovu
gs
xor
xchg
mov
ret
mov
mov
jnp
sbbl
loopne
xchg
pop
ss
lock
dec
inc
mov
mov
lret
popl
cmp
cli
int3
in
pop
xor
mov
repz
inc
cltd
popf
loopne
push
jle
repz
lock
sub
xchg
mov
mov
and
sub
mov
iret
fbld
mov
mov
or
jmp
mov
push
scas
sbbb
pop
xchg
jno
scas
jo
pusha
inc
insb
lds
dec
ror
movsb
adc
pop
stc
pop
in
andb
fimull
mov
mov
push
push
xchg
xlat
lock
push
inc
jne
xchg
adc
xor
dec
lret
leave
mov
mov
repnz
pop
aam
in
lret
out
mov
shlb
adc
push
jl
cmpsl
call
les
adc
xor
pop
loopne
and
push
pop
mov
repnz
pop
mov
divb
mov
push
inc
in
xchg
jno
jle
xchg
push
cltd
icebp
pusha
mov
or
cmp
push
inc
xchg
idivl
mov
adc
int
adc
mov
int
fbld
adc
dec
jle
xchg
xchg
cltd
cld
pusha
pop
push
xor
jo
pop
mov
xchg
xor
mov
pop
pop
icebp
push
cmp
loope
gs
movl
jmp
jl
leave
cmp
xor
jge
scas
loopne
xchg
lock
jo
inc
lret
adc
xor
mov
xchg
jb
pop
lods
pop
in
repnz
jnp
xchg
imul
xchg
outsl
insl
and
sub
loopne
shl
jo
es
pop
lds
dec
mov
mov
in
aam
xor
pop
cwtl
pop
xor
xor
xor
cmp
cltd
sbb
xchg
js
shl
sub
mov
mov
dec
int
mov
mov
jb
pop
aad
gs
jnp
mov
or
fsubs
pusha
insb
jle
xchg
outsb
sbb
xchg
adc
ret
dec
inc
lds
mov
or
sahf
pop
movsl
pop
into
mov
rcrb
dec
mov
arpl
es
fstl
clc
int
mov
inc
repz
pop
dec
pop
adc
movsb
mov
cmp
and
je
fstl
xor
mov
and
cmp
test
repnz
lcall
adc
divb
leave
or
ret
mov
dec
adc
loop
jo
std
inc
pop
vunpcklps
mov
lret
mov
mov
clc
xlat
ret
cmp
mov
adc
or
jmp
mov
jle
sub
xchg
cwtl
shll
pop
lds
jge
gs
mov
inc
xchg
jb
xchg
mov
gs
and
mov
cmpsb
inc
inc
fsts
inc
push
cltd
jmp
mov
dec
pop
jne
test
jns
cmpsl
xchg
ret
xor
mov
mov
jb
xchg
aad
in
in
mov
mov
inc
mov
cmp
and
std
jo
and
inc
mov
dec
scas
adc
push
aad
mov
push
test
jmp
cmpsb
xor
jno
dec
adc
sbb
loopne
push
bound
stos
or
push
adc
mov
dec
xor
dec
dec
add
add
push
mov
pop
and
pop
adc
sahf
and
movsb
adc
hlt
xor
and
in
mov
into
mov
xor
jae
mov
xor
fdivr
jns
lret
add
popa
inc
ljmp
adc
loop
mov
jle
in
inc
leave
icebp
popf
cmc
aaa
cmp
movsb
shrb
jbe
add
sbb
aas
les
mov
cmp
aad
cmpb
xchg
dec
mov
cmp
enter
fwait
mov
add
cmp
lods
flds
and
shll
lea
ror
inc
sbb
sahf
cmpb
inc
icebp
adc
dec
arpl
and
ret
sahf
ss
call
aad
mov
push
nop
sub
ja
scas
jle
pop
cmc
imul
test
dec
sub
push
and
pop
les
xor
mov
push
movb
mov
dec
dec
mov
ljmp
cmc
jnp
push
out
cmc
mov
andl
xor
lods
aad
outsl
sbb
dec
inc
or
push
test
xchg
jne
dec
bound
aam
insb
lahf
outsb
shrb
rcl
dec
xchg
mov
jo
adc
mov
fwait
adc
cwtl
jne
out
lret
clc
dec
jb
xor
test
mov
pop
or
add
cmc
jbe
pop
test
out
sbb
cmp
fildl
cli
outsl
lahf
ret
mov
aaa
add
mov
cmp
dec
mov
out
lods
cmpsb
dec
push
mov
mov
iret
int3
adc
push
test
mov
cmpsl
xchg
enter
pop
adc
adc
pusha
daa
jp
imul
daa
sub
inc
or
add
popf
ret
add
sar
and
mov
adc
fists
xchg
shl
inc
repz
ds
adc
jp
popa
add
jnp
jl
cltd
dec
mov
fistps
in
data16
das
movups
inc
dec
cmp
mov
add
shll
dec
sahf
xor
cld
mov
pop
xchg
or
mov
shl
je
xchg
fwait
les
jge
xchg
xor
les
inc
xchg
aaa
shl
movsl
add
fwait
push
das
inc
push
add
sbb
and
lds
pop
ds
sub
pop
test
sarl
mov
jmp
mov
add
dec
mov
shl
in
add
pop
inc
jae
pop
out
dec
xchg
xchg
and
add
jae
inc
ss
adc
xchg
add
and
pop
mov
mov
and
js
mov
mov
push
ss
lret
add
popa
push
push
jge
aas
mov
or
mov
lret
or
je
push
or
movsb
mov
sub
stc
call
jnp
sarb
enter
imul
inc
fdivl
xor
orb
jne
int
sbb
mov
imul
dec
sbb
push
jae
fidivs
cmp
and
pushf
mov
cmp
loopne
je
ret
mov
int
mov
add
insl
cmc
cli
push
xchg
loop
outsl
xchg
adc
fwait
jge
out
in
aad
pop
cli
es
out
xchg
mov
out
aaa
gs
xorl
fdivp
outsl
movsb
add
and
popf
into
fidivl
or
or
outsl
das
and
jne
mov
or
sbb
out
loopne
pop
mov
mov
pop
gs
in
xor
add
add
addr16
les
or
fisubs
sti
lods
add
pop
mov
xor
and
mov
and
int
cmc
jno
ret
loop
mov
out
lds
jge
add
cmp
pushf
dec
push
add
out
and
adc
inc
jne
in
cmpsl
aas
dec
dec
cmc
cmc
and
cmc
and
push
jne
pushf
jmp
pop
call
addr16
scas
addb
mov
in
dec
xor
mov
inc
lock
decb
cmp
ret
inc
inc
addb
mov
adc
movsb
xor
mov
in
fbld
movsb
add
andb
bound
xchg
inc
cltd
mov
arpl
nop
jo
cmp
lds
lret
mov
outsb
pop
test
ds
jle
fistpl
mov
mov
jmp
mov
push
xchg
pop
cltd
fwait
loopne
push
pop
xchg
leave
icebp
test
sub
jno
mov
add
ds
jb
cmp
push
jmp
adc
inc
sbb
pusha
dec
xchg
dec
je
jno
cmpsl
adc
mov
dec
pop
stc
mov
mov
mov
rcr
in
shll
lret
es
fsts
stos
inc
incb
sbb
loopne
push
push
xchg
cmp
in
sub
mov
xor
movsb
fsubrp
mov
mov
inc
mov
mov
adcb
sbbl
adcl
vunpcklps
push
lret
jg
mov
std
push
cmc
mov
in
add
imul
adc
mov
outsl
xchg
or
in
jo
or
lret
scas
stc
mov
lea
cmp
lcall
andb
ret
mov
stos
dec
jle
adc
sbb
sub
pushf
lock
mov
adc
mov
dec
imul
mov
pop
xor
mov
imul
xchg
inc
sbb
loopne
push
cmp
sub
movl
mov
movsl
push
rclb
add
xor
mov
cmp
xchg
jo
jle
adc
push
cmp
lock
pushf
lds
dec
pop
in
movsb
xor
mov
bnd
fstps
lea
push
ret
mov
adc
push
insb
xchg
sub
dec
leave
lds
lret
push
push
pop
cli
push
scas
mov
fcompl
aam
dec
xor
mov
lahf
es
ret
ljmp
sub
shlb
js
lods
lds
enter
dec
jge
mov
not
ret
jb
pop
enter
stc
sarl
jmp
xchg
pop
jle
xchg
cmp
push
insl
pop
je
out
jo
sub
gs
rclb
push
dec
xchg
mov
push
adc
mov
in
out
mov
or
movsl
es
pusha
pop
xchg
test
xchg
pusha
sbb
inc
xchg
inc
xchg
xor
dec
insl
mov
xchg
jb
pop
fistps
xchg
mov
xor
cmpsb
cmc
ret
jp
lahf
nop
incb
sbbb
xchg
les
jo
jo
stos
inc
mov
cmpsb
mov
dec
cwtl
in
mov
rcl
push
loopne
mov
xchg
jle
pop
xchg
sbb
pusha
cmp
push
xchg
pop
dec
xchg
aas
inc
pusha
inc
rcll
in
mov
out
push
or
std
jb
ja
or
mov
es
xchg
ret
inc
jle
adc
xchg
jo
or
insb
vunpcklps
or
sahf
xlat
fdivrs
lock
in
mov
or
ret
into
adc
jle
adc
pusha
dec
xchg
pop
roll
bound
adc
xor
movsb
mov
mov
mov
gs
filds
fwait
or
fisubs
xchg
dec
cmp
test
arpl
vunpcklpd
adc
xlat
sarl
mov
repnz
mov
ret
lahf
adc
ja
mov
ja
lock
pop
pop
lds
mov
bound
mov
xchg
push
jb
cld
jge
movsl
jge
xor
fists
lods
pusha
dec
xchg
lock
mov
fistpll
mov
pop
and
xlat
mov
mov
mov
xchg
stc
xor
out
insb
inc
jp
aad
pushf
mov
lret
mov
xor
nop
bnd
enter
adc
mov
fwait
imul
and
xchg
sbb
pusha
ret
inc
sbb
icebp
adc
xor
in
movsb
cmpsl
jp
jecxz
jmp
mov
pop
in
jp
xor
cmpsb
xor
adc
ja
pop
adc
lahf
pusha
pusha
push
xor
stos
and
mov
dec
dec
popa
out
mov
in
jb
pop
scas
pop
in
sub
mov
mov
int
sahf
inc
jle
adc
aad
bound
lret
pop
mov
xor
or
mov
sarb
enter
or
xor
mov
lds
cmp
sbb
loopne
xchg
pop
lcall
mov
xchg
adc
mov
lret
jo
mov
aam
mov
jae
pop
xor
es
rcll
fwait
and
push
xchg
inc
mov
jo
adc
aas
xchg
pop
xor
xchg
sar
sbb
push
add
popf
bound
or
add
scas
jne
lahf
sub
xchg
xchg
and
pop
adc
and
and
gs
cmp
pop
arpl
mov
ja
in
add
scas
mov
push
popf
xor
sbb
ds
les
jge
scas
pop
pop
xchg
pop
inc
popf
sub
jge
inc
movsl
pop
int3
mov
sub
add
je
and
sti
mov
inc
jns
sti
imul
xor
sahf
out
jg
xchg
jo
test
jp
in
mov
mov
mov
or
aaa
call
mov
cmp
or
cmp
into
dec
push
or
or
jb
jge
dec
sub
rol
hlt
std
xor
cmp
and
add
or
push
push
xchg
stos
mov
mov
mov
mov
pop
mov
ja
push
add
add
pop
addr16
mov
ljmp
push
jo
xlat
pop
mov
lea
xchg
push
aas
adc
in
mov
scas
push
and
adc
js
in
add
cmp
xchg
sub
push
data16
les
mov
jge
push
dec
aad
shll
outsb
mov
nop
sub
and
call
jno
push
dec
xchg
outsb
xchg
jns
xchg
mov
and
ds
jge
scas
mov
jmp
dec
dec
scas
mov
mov
imul
ja
xchg
inc
add
outsb
popf
or
pminub
rcll
mov
js
decl
push
xchg
mov
inc
and
cmpsb
sub
mov
jle
xor
ss
sbb
hlt
out
adc
adc
call
aam
cs
fwait
xor
jle
inc
in
lcall
orb
mov
jno
xor
xchg
pop
jo
fnsave
cli
mov
movsl
mov
out
push
ljmp
aad
jne
loope
sti
ss
sahf
mov
mov
clc
mov
stc
or
mov
test
sbb
stos
inc
mov
das
es
jg
mov
es
mov
jns
jle
xchg
xchg
popa
jmp
fsts
in
jp
bound
call
leave
inc
mov
mov
sbb
inc
std
dec
and
mov
in
xor
xchg
cmc
mov
test
aam
mov
mov
xchg
mov
sub
outsb
imul
adc
out
pushf
or
jns
bnd
lret
sub
cmpsl
adc
jbe
xor
pop
adc
xchg
or
lock
pop
dec
sub
aaa
shlb
stos
test
mov
nop
out
xchg
mov
test
jno
adc
cwtl
adc
scas
inc
mov
cmpsb
pop
lea
mov
mov
stos
push
pop
mov
pop
imull
into
fmul
fisttps
mov
mov
cmpl
jle
push
movsl
insb
cmp
xchg
pusha
outsb
rol
xchg
sahf
je
mov
cli
add
push
popf
sbb
rorl
or
cld
loope
jbe
pop
xor
je
pusha
adc
mov
or
cmc
cmpsb
lret
ret
insl
int3
js
icebp
addr16
in
xchg
sbbb
xchg
stos
mov
jl
mov
cmp
and
out
adc
testb
js
sti
xor
ret
int3
popf
inc
test
cld
lret
or
add
sub
and
xor
lods
and
or
cmp
arpl
adc
xchg
lods
pinsrw
and
mov
inc
jle
pop
jp
dec
sbb
sub
repnz
add
push
mov
repz
decb
sbb
inc
mov
jmp
arpl
insl
sub
lret
das
mov
orl
pop
test
inc
sub
cmp
arpl
aam
and
orl
leave
jl
stos
push
push
mov
loop
adc
xchg
cltd
icebp
xchg
xchg
stos
add
mov
push
dec
pop
jae,pn
cmp
or
imul
lret
xchg
inc
dec
int
orb
cmp
out
jle
jge
in
leave
cmp
mov
arpl
push
insb
stos
out
xchg
pushf
and
mov
rcrl
mov
xor
popa
roll
aas
cmp
push
jmp
arpl
pop
mov
arpl
mov
push
decb
dec
add
das
shlb
cld
mov
lcall
mov
mov
pop
mov
mov
mov
insb
sbb
stos
mov
out
add
and
in
ljmp
outsl
mov
pop
xchg
mov
loop
cmpsb
fsubs
inc
inc
out
lret
stos
mov
push
mov
sbb
mov
push
mov
ds
jo
cmpsl
je
loope
push
or
sub
jmp
scas
mov
pop
mov
sbb
in
test
xor
popa
cmp
pop
loop
inc
notl
ds
js
mov
add
test
scas
stos
xchg
cwtl
pop
inc
push
stos
ljmp
inc
or
sub
in
xchg
mov
xchg
pop
add
adc
cmpsl
fldenv
sbb
test
dec
jns
test
push
mov
mov
mov
mov
push
jmp
mov
jae
into
loop
cmp
scas
leave
mov
mov
cmp
push
ja
or
mov
xor
stos
pop
jmp
dec
inc
or
dec
cltd
scas
xchg
icebp
data16
call
dec
pop
pop
xchg
movsb
push
subl
inc
mov
loope
push
popa
js
add
iret
mov
pop
rorb
movsl
jg
cmpsl
mov
pop
mov
xchg
push
fildll
mov
inc
lods
and
std
inc
xor
xchg
and
leave
and
lcall
or
call
stos
inc
mov
and
jl
or
popf
mov
imul
mov
push
ret
jns
mov
fistl
cld
add
xchg
sub
dec
aam
fisttpll
inc
andb
xchg
ror
xor
lret
bound
fimull
rorb
push
xor
je
dec
jno
in
or
movsl
xor
sub
iret
leave
or
shll
push
shll
repz
and
jbe
sbb
aaa
sbbl
sahf
mov
lods
xchg
push
inc
mov
jecxz
movsl
mov
or
and
test
mov
push
adc
rcl
xlat
cmp
leave
inc
push
lahf
xchg
andb
push
rcr
jnp
out
outsl
adc
and
sbb
mov
cmpsb
ficomps
imul
iret
dec
add
push
imul
add
inc
jl
insl
andb
push
and
test
pop
cmp
inc
cli
arpl
mov
scas
add
xor
andl
xchg
fadds
out
ds
jge
lret
movsl
cmp
imul
mov
jmp
push
mov
xchg
sarb
add
out
loop
mov
or
xor
das
sub
popa
aaa
xchg
mov
ffree
push
in
ja
aam
aas
lcall
ljmp
test
mov
xchg
movsl
add
mov
jbe
xchg
sbb
xorb
out
test
rclb
xor
in
scas
mov
pop
add
push
hlt
mov
jns
push
out
jmp
mov
mull
adc
jl
pop
or
mov
push
jecxz
loope
jbe
adc
xchg
mov
imul
addb
das
mov
movsl
repnz
arpl
jnp
xlat
mov
dec
les
add
lods
mov
scas
pop
cmp
mov
xchg
lods
imul
rolb
das
dec
aam
mov
stos
xchg
mov
inc
mov
dec
pushf
iret
xchg
xchg
jns
xlat
jnp
mov
outsl
test
ret
jmp
mov
nop
lahf
mov
sub
dec
mov
fistpll
cs
mov
outsb
xchg
jg
xchg
sub
mov
nop
inc
js
sbb
mov
jle
loop
jbe
mov
sub
mov
gs
aas
fs
fnstcw
or
push
xor
and
push
shrl
in
dec
clc
mov
shll
ret
decb
lock
test
sahf
pushf
out
push
imul
mov
inc
jbe
iret
hlt
popf
notb
repz
and
rclb
push
fsubrs
in
aaa
jg
xchg
lods
mov
lea
fyl2x
mov
pop
cmpsl
pop
scas
adcb
xor
mov
mov
sub
push
out
ds
lret
mov
jb
daa
xchg
add
add
scas
insl
add
daa
in
mov
nop
ja
sahf
arpl
lds
daa
push
lahf
push
cmpsb
cli
xchg
mov
scas
mov
out
mov
bound
jmp
and
iret
js
adc
fidivl
insb
xchg
mov
mov
sub
push
adc
pop
mov
jbe
push
sub
jge
cmp
xchg
mov
imul
popa
dec
sub
lods
or
mov
jns
adcb
mul
int
fadds
jnp
dec
call
and
aas
test
imul
pop
cmp
sbb
and
xchg
cmpsb
mov
adc
lahf
sub
shlb
pop
or
sub
in
popa
aas
rclb
fdivs
adc
mov
addr16
leave
std
cmp
xor
cmp
adc
insl
stos
xor
xchg
dec
jb
add
sub
arpl
add
scas
mov
inc
ja
pop
adc
push
pop
lea
sbb
rol
push
mov
and
inc
mov
movsb
rolb
ror
aas
add
hlt
addr16
push
or
jne
jge
test
das
insl
mov
xor
xchg
outsb
rcll
xchg
jecxz
mov
push
in
jnp
loope
stos
jl
rorl
ss
mov
insl
push
jno
add
and
xchg
enter
push
ret
mov
iret
into
addr16
pushf
inc
adc
dec
inc
mov
dec
shll
add
test
gs
out
cmp
add
ljmp
push
ljmp
mov
jne
and
push
mov
repnz
test
lahf
jg
outsb
popf
push
sbb
pop
adc
push
and
in
jb
in
dec
ja
xchg
inc
divl
add
xchg
nop
gs
stos
fidivrs
and
jmp
aas
mov
push
mov
pop
pmaxsw
popf
out
aad
rcrl
cli
mov
bound
dec
mov
testb
pop
ja
lcall
lds
mov
std
jg
int
loope
adc
sub
lds
jae
inc
add
xor
mov
push
jns
leave
and
mov
mov
cmp
ficompl
pusha
movsl
sahf
xchg
pop
xor
jbe
push
push
lods
add
push
outsl
stos
pop
cmp
inc
scas
or
jno
jg
stos
add
pop
repnz
rcrl
add
cmpsb
mov
xchg
testl
jg
notb
scas
cs
jo
pushfw
xchg
add
sahf
sti
orb
nop
mov
mov
out
xor
sbb
lods
cmp
add
js
xchg
mov
cli
add
pop
pop
sarb
fdivl
in
adc
mov
or
sbb
add
mov
push
mov
push
test
cli
push
test
mov
sahf
pop
xor
push
jbe
rclb
in
cmp
cltd
push
mov
push
mov
mov
clc
outsl
inc
rcrl
xchg
xor
cld
mov
out
popa
test
jbe
stos
sahf
cmp
adc
xchg
sbb
xorl
sub
or
ss
inc
je
ss
cmp
xchg
cmpsb
hlt
lret
repz
imul
insl
push
test
mov
inc
pop
sub
fsubrs
hlt
xchg
daa
repz
mov
mov
and
cltd
push
enter
jge
jg
jg
mov
imul
in
xor
fisttpll
adc
xchg
mov
addr16
call
xor
movsb
pop
ret
pop
aaa
xchg
lods
icebp
pop
scas
xchg
loope
push
mov
adcl
es
dec
push
test
add
or
test
xor
jmp
jmp
das
add
inc
mov
addr16
test
add
push
mov
test
pop
inc
fistl
mov
lods
sti
adc
loope
mov
mov
push
jl
add
pcmpeqw
mov
negb
jl
add
xchg
cmp
mov
jns
push
inc
inc
pop
or
fcompp
add
fstpt
jmp
sub
repnz
sub
pop
mov
es
call
xchg
pop
lahf
add
mov
imul
sbb
arpl
repnz
dec
fmuls
xor
cwtl
mov
jno
sub
pop
ds
or
mov
int
pop
or
inc
mov
out
sbb
movsb
loop
mov
pop
adc
pop
or
xchg
cmp
or
insb
dec
mov
hlt
loope
jns
fisubrs
push
aaa
popf
push
sub
adcb
xor
sub
cld
xchg
lds
scas
pop
xlat
mov
nop
mov
pop
ja
popf
dec
aaa
scas
mov
push
add
out
repz
mov
push
addr16
mov
jne
rol
push
cmp
adc
jmp
adc
push
dec
mov
push
lods
mov
adc
leave
lock
pop
iret
mov
add
add
call
add
adcb
add
inc
add
sbbb
add
pop
add
addb
add
add
add
jo
add
add
add
add
add
mov
add
add
add
add
add
mov
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
nop
add
cmp
add
xor
add
test
add
pop
add
add
inc
add
add
dec
push
inc
push
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
imul
add
lcall
add
add
add
add
add
add
add
add
add
add
add
add
add
add
decl
add
add
add
add
decl
add
add
add
sbb
add
decl
add
add
add
add
add
decl
add
add
add
addb
add
decl
add
add
add
decl
add
add
add
decl
add
add
add
decl
add
add
add
addb
add
decl
add
add
push
add
adc
add
decl
add
add
incl
add
add
decl
add
add
pop
add
push
add
add
decl
add
add
add
add
decl
add
add
incl
add
add
decl
add
add
incl
add
add
decl
add
add
pop
add
add
add
pusha
add
add
add
add
add
add
add
and
add
incl
add
add
add
pushl
add
addb
add
add
add
add
add
add
add
adc
add
add
add
add
xor
add
incl
add
add
add
add
add
add
pop
add
add
add
call
add
add
js
add
decl
add
sbb
add
pushl
add
add
negb
pop
sub
and
xchg
outsb
add
inc
jmp
ja
jl
rcll
mov
ja
jmp
jmp
ja
jl
rcll
mov
ja
jmp
jmp
fidivrs
adc
ja
jmp
jns
pop
pop
mov
test
xor
add
add
pushl
add
add
add
add
add
add
add
inc
add
add
incl
add
add
add
add
add
add
add
inc
add
add
decl
push
push
push
dec
clc
dec
cmpsb
mov
xchg
popa
pushf
push
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
outsl
insb
xor
je
bound
push
call
decl
add
pushl
add
dec
add
add
jmp
add
incl
add
add
mov
lcall
add
jl
add
jmp
call
add
dec
dec
popa
jbe
outsl
insb
insb
arpl
outsb
dec
imul
decl
cmp
push
inc
outsl
insb
insb
arpl
outsb
push
push
add
add
decl
cmp
insb
insb
arpl
outsb
push
add
add
incl
add
dec
je
insl
push
call
add
jae
inc
imul
outsb
imul
decl
add
inc
gs
outsl
jne
je
incl
add
xchg
jo
inc
outsl
jne
je
add
add
incl
add
les
je
je
insl
push
incl
dec
je
insl
push
push
push
call
add
imul
gs
fs
imul
dec
popa
jbe
outsl
insb
insb
arpl
outsb
and
xor
push
jns
and
jb
jb
adc
inc
outsl
insb
insb
arpl
outsb
and
popa
jae
push
push
adc
insb
insb
arpl
outsb
and
je
jb
popa
arpl
push
add
je
outsl
and
fs
je
insl
verw
je
outsl
and
je
outsl
jne
je
push
push
push
add
je
outsl
and
je
je
insl
sbb
add
add
sbbb
or
add
orb
add
add
gs
je
and
and
inc
dec
and
jb
imul
xor
xor
je
inc
jb
and
and
aaa
and
xor
xor
cmp
xor
adc
mov
push
adc
sub
add
push
push
sbb
add
add
add
pushl
add
add
add
add
add
add
dec
add
add
add
nop
add
add
add
sbb
sbb
sbb
inc
add
add
add
add
add
add
add
add
add
andb
add
add
add
add
sbb
sbb
and
dec
add
inc
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
addb
add
and
pop
add
inc
add
add
add
add
add
jo
add
add
add
add
add
or
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
pop
add
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
push
add
arpl
mov
add
mov
add
add
add
add
add
add
mov
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
nop
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
je
inc
add
data16
outsb
add
add
and
push
add
add
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
dec
add
add
add
jb
xor
add
add
inc
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
inc
add
cmp
push
add
inc
add
add
insl
add
push
add
add
add
add
add
add
insb
add
outsl
add
jns
jb
imul
je
add
xor
je
imul
add
inc
add
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
add
add
pop
add
push
pop
add
push
add
pop
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
aas
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
gs
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
