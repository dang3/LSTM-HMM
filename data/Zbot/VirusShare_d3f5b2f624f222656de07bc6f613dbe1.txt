sub
mov
push
mov
mov
push
xor
mov
add
xor
push
add
push
mov
mov
mov
xor
and
or
mov
jmp
mov
mov
sub
test
mov
mov
jne
movzbl
add
mov
mov
mov
shr
and
add
test
je
and
mov
mov
sub
test
mov
jne
movzbl
add
mov
mov
mov
shr
and
add
test
mov
je
mov
mov
sub
test
mov
jne
movzbl
add
mov
mov
mov
shr
and
add
test
je
xor
lea
mov
mov
sub
test
mov
jne
movzbl
add
movl
mov
shr
and
add
sub
lea
jne
test
mov
je
mov
sub
mov
mov
add
mov
xor
jmp
movb
add
mov
xor
jmp
movzbl
mov
and
add
add
shr
mov
je
test
je
jmp
lea
mov
sub
mov
mov
add
sub
jne
mov
mov
jmp
movl
mov
jmp
lea
call
mov
test
jne
cmp
jne
call
test
mov
je
jmp
lea
mov
sub
add
sub
mov
mov
jne
mov
jmp
sub
jmp
sub
mov
movzbl
shl
add
add
lea
mov
mov
call
cmp
jb
add
cmp
jb
add
cmp
jae
add
test
mov
je
mov
sub
mov
mov
add
sub
jne
mov
mov
add
mov
mov
mov
xor
xor
jmp
mov
mov
add
add
mov
mov
xor
cmpl
je
mov
mov
shr
mov
xor
sub
jne
pop
pop
mov
sub
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
mov
push
lea
mov
shr
mov
shl
xor
mov
shr
and
add
mov
xor
add
sub
mov
shr
mov
shl
xor
add
mov
and
add
mov
xor
add
sub
test
jne
pop
mov
mov
pop
ret
int3
int3
int3
int3
sub
push
sub
mov
push
push
push
lea
push
call
test
je
push
mov
push
mov
push
nop
sub
sub
sub
sub
lea
push
call
sub
mov
sub
sub
lea
push
call
push
push
push
lea
push
call
test
jne
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
push
mov
je
jmp
lea
cmp
jb
movq
movq
add
add
sub
jmp
test
je
lea
mov
sub
mov
add
add
test
jne
sub
test
jne
emms
pop
pop
ret
int3
int3
int3
sub
push
push
push
movl
sub
mov
xor
mov
mov
movq
movl
mov
movq
movq
psrlq
psllq
movq
movq
sub
sub
mov
mov
movl
mov
sub
sub
movq
psrld
pslld
pcmpeqd
movq
mov
and
cmp
jne
mov
mov
emms
cmp
je
sub
mov
mov
sub
sub
sub
mov
add
add
mov
sub
cmp
je
push
call
mov
sub
sub
push
push
call
mov
lea
push
mov
push
push
push
call
mov
push
push
push
push
call
mov
test
mov
je
mov
mov
add
mov
mov
push
mov
call
mov
mov
sub
add
add
mov
je
sub
sub
sub
sub
cmpl
je
jmp
lea
mov
sub
shr
mov
mov
sub
lea
mov
add
sub
sub
test
jbe
sub
add
mov
mov
movzwl
mov
and
cmp
jne
mov
and
add
add
mov
add
sub
add
sub
sub
mov
addl
sub
jne
sub
sub
mov
add
add
sub
sub
sub
add
cmpl
jne
pop
pop
pop
add
ret
int3
int3
int3
push
mov
push
push
push
call
cmpl
mov
je
call
jmp
call
call
mov
pop
mov
pop
add
add
add
xor
push
jmp
int3
int3
int3
int3
int3
int3
mov
mov
mov
push
lea
mov
sub
test
jne
mov
movzbl
add
mov
lea
mov
shr
and
lea
mov
add
sub
test
jne
mov
movzbl
add
mov
lea
mov
shr
and
add
test
jne
mov
mov
pop
ret
int3
mov
test
lea
mov
jne
mov
movzbl
add
mov
mov
movl
mov
mov
shr
add
and
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
call
mov
mov
push
push
call
push
push
push
push
push
push
call
cmp
je
call
push
push
call
push
push
call
cmp
je
jmp
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
push
mov
mov
cmpl
jne
cmp
je
add
jmp
movl
movl
movl
movl
mov
mov
jmp
lea
lea
call
add
sub
jne
mov
sub
add
add
mov
add
sub
movzwl
mov
sub
add
mov
push
push
push
push
mov
call
mov
push
push
call
mov
add
xor
testl
mov
jbe
movl
mov
add
shr
add
cmp
jb
mov
movzwl
add
xor
cmp
lea
jbe
nop
test
jne
mov
push
mov
call
mov
add
lea
lea
mov
add
push
mov
mov
add
call
movzwl
add
add
cmp
mov
jb
mov
mov
add
mov
mov
sub
mov
mov
mov
mov
sub
cmpl
je
sub
sub
add
mov
mov
mov
add
sub
mov
sub
mov
add
cmpl
je
mov
sub
shr
sub
mov
lea
sub
test
jle
mov
lea
add
mov
mov
and
cmp
jne
sub
mov
sub
movzwl
mov
and
add
add
mov
add
mov
sub
mov
sub
add
mov
mov
mov
subl
jne
add
mov
mov
add
mov
sub
sub
cmpl
jne
mov
sub
sub
mov
mov
add
mov
mov
sub
add
sub
sub
mov
mov
add
cmpl
je
sub
mov
add
mov
add
cmpl
mov
je
sub
sub
sub
mov
add
push
call
mov
test
mov
je
mov
test
jne
mov
mov
add
add
mov
mov
mov
add
cmpl
je
jmp
jmp
lea
mov
mov
mov
mov
mov
mov
test
jns
add
movzwl
push
push
call
jmp
mov
lea
sub
sub
add
add
push
push
call
sub
sub
mov
sub
mov
add
sub
mov
add
cmpl
jne
mov
mov
add
cmpl
mov
jne
sub
sub
sub
mov
add
movl
mov
mov
mov
mov
mov
sub
sub
add
sub
mov
lea
add
mov
mov
cmp
jne
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
clc
inc
clc
fs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fisubl
add
ljmp
add
add
add
and
add
and
add
and
add
add
add
jb
gs
xor
cs
insb
add
add
push
imul
jb
je
arpl
outsl
insb
xor
cs
insb
add
add
addr16
jo
outsb
push
je
jb
add
push
jb
je
inc
insb
popa
jae
push
je
add
add
add
add
add
add
and
add
and
add
add
add
add
add
and
add
and
add
and
add
and
add
and
add
add
add
and
add
and
add
and
add
add
add
push
jb
arpl
fs
jae
add
addl
jne
insb
inc
insb
insb
outsl
arpl
add
dec
outsl
popa
fs
imul
add
dec
inc
push
dec
inc
dec
xor
add
add
add
cmp
inc
gs
gs
popa
addr16
add
outsb
jae
popa
je
dec
gs
popa
add
mov
jo
je
push
popa
addr16
add
push
push
inc
push
xor
cs
insb
add
add
sbb
cmpb
add
push
add
addb
add
lock
sbbb
add
or
add
add
add
es
andb
add
add
push
add
add
add
add
addb
add
push
add
addb
add
push
add
add
add
add
add
add
add
add
add
enter
jne
add
loopne
add
clc
add
cmpb
add
add
cmpb
add
add
orb
add
pop
add
adc
add
jo
add
mov
add
mov
add
add
add
mov
add
add
add
add
add
adc
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
js
add
add
push
inc
add
test
add
clc
dec
add
enter
rclb
push
add
add
add
add
pop
add
test
add
shrb
add
add
add
add
add
add
push
add
add
add
add
add
add
mov
add
dec
rolb
dec
add
add
roll
inc
add
add
add
bound
add
test
add
bound
add
adc
add
push
add
add
add
bound
add
rol
add
dec
add
add
ja
add
add
and
add
push
add
add
add
add
add
dec
add
inc
add
pop
add
add
add
dec
add
add
add
add
inc
add
dec
add
inc
add
push
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
push
lldt
or
add
add
add
add
add
or
add
adc
add
sbb
add
sbb
add
and
add
or
add
push
sub
sub
sub
sub
add
or
add
adc
add
adc
add
push
add
add
add
push
xor
or
add
add
add
or
add
sbb
add
sbb
add
adc
add
adc
xor
and
and
and
and
add
and
add
sub
add
xor
add
and
add
es
cmp
cmp
cmp
cmp
xor
cmp
add
inc
cmp
inc
push
inc
add
dec
add
dec
add
pop
add
pop
add
pop
add
pop
add
pop
add
inc
add
dec
add
dec
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
bound
arpl
arpl
fs
arpl
arpl
add
add
popa
add
popa
add
add
arpl
xor
xor
add
arpl
arpl
add
add
add
add
jb
jae
jae
je
je
jge
jge
inc
inc
inc
add
inc
add
dec
add
push
add
push
add
push
add
push
add
pop
add
pop
add
pop
add
pop
add
push
add
pop
add
pop
add
arpl
fs
add
add
arpl
arpl
add
add
add
bound
arpl
add
add
arpl
outsb
inc
jo
outsb
dec
jo
outsb
dec
jo
jo
jno
ja
ja
jns
jp
outsb
push
jo
outsb
pop
jo
addr16
push
add
jnp
jl
jl
jo
jo
je
je
jge
addl
imul
add
pop
addl
xchg
pop
xchg
add
imul
cmpl
add
insl
popf
add
jg
add
jbe
add
jne
add
jge
add
test
add
sbbb
popf
lea
add
cwtl
popf
add
add
add
incl
add
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jl
addb
sub
push
push
push
push
push
push
push
push
and
push
push
push
push
push
and
and
push
push
push
push
push
and
add
bound
push
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
sbb
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
adc
add
add
adc
add
add
sbb
add
add
sbb
add
add
sbb
add
add
sbb
xor
adc
adc
adc
adc
pop
pop
pop
pop
pop
pop
adc
adc
push
and
and
sbb
bound
add
xor
ss
inc
inc
inc
inc
inc
inc
inc
inc
dec
inc
cmp
xor
bound
add
inc
dec
dec
push
push
push
imul
imul
imul
push
push
dec
inc
inc
inc
insb
add
orb
push
push
imul
jb
jb
jb
insb
insb
insb
imul
dec
dec
dec
addb
add
insb
imul
jb
jb
insb
jb
insb
jb
insb
insb
imul
addb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
or
push
push
push
add
add
add
add
add
add
add
or
push
add
adc
add
adc
add
sbb
add
sbb
add
sbb
es
add
pop
sub
and
and
and
and
and
and
sub
sub
cmp
cmp
cmp
xor
add
cmp
inc
add
xor
push
inc
add
inc
add
dec
add
dec
add
dec
add
dec
add
push
add
push
add
push
add
push
add
inc
add
inc
add
add
inc
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
push
add
push
add
push
add
pop
add
add
pop
add
pop
add
bound
pop
ss
add
pusha
add
arpl
arpl
arpl
arpl
bound
inc
inc
inc
add
inc
add
inc
add
dec
add
dec
add
dec
add
pop
add
pop
add
pop
add
pop
add
push
add
add
push
add
pop
add
pop
add
pop
add
pop
add
pop
add
pusha
add
popa
add
arpl
arpl
add
arpl
arpl
add
bound
gs
add
jne
je
je
jp
jp
gs
jg
jnp
jnp
jns
jg
jnp
addb
jno
add
test
mov
add
data16
mov
add
outsb
xchg
add
jno
add
jo
add
js
add
sbbl
mov
add
add
incl
add
sbb
sbb
sbb
sbb
add
das
adc
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
adc
add
sbb
add
add
add
sbb
add
add
add
sbb
add
add
add
sbb
add
add
add
sbb
add
add
add
sbb
add
add
add
sbb
add
add
add
sbb
add
add
add
sbb
add
add
add
sbb
add
add
add
sbb
add
add
add
sbb
add
add
add
sbb
add
add
add
sub
add
add
add
sub
add
add
add
das
adc
or
or
or
or
or
or
or
das
add
ss
xor
xor
das
xor
xor
xor
xor
es
cmp
push
push
pop
pop
pop
push
pop
push
push
push
inc
aas
cmp
popa
push
cmp
dec
dec
dec
push
pop
push
pop
pop
push
push
pop
dec
dec
dec
dec
cmp
add
incl
incl
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
sub
add
adc
add
and
add
add
or
add
add
add
add
add
add
add
add
add
add
or
or
add
push
push
add
or
adc
adc
or
sbb
adc
adc
adc
adc
sbb
sbb
daa
or
add
or
add
and
add
and
add
sub
sub
add
xor
add
xor
add
cmp
add
cmp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
push
add
push
add
inc
add
inc
add
add
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
pop
add
pop
add
bound
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
je
je
inc
inc
inc
add
dec
add
dec
add
dec
add
dec
add
push
add
push
add
add
pop
add
arpl
fs
add
arpl
arpl
add
imul
jns
addl
jge
test
mov
add
jne
add
jb
add
jns
add
test
add
iret
int3
add
rcl
add
aam
add
incl
add
xor
xor
xor
xor
xor
xor
cmp
push
or
add
add
add
add
add
add
add
add
push
push
add
add
add
add
add
push
push
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
or
add
add
push
push
push
pop
sbb
sbb
and
and
sbb
sbb
push
add
inc
inc
inc
inc
inc
aas
xor
sub
add
incl
add
add
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
and
add
xor
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popl
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
sbb
adc
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
jecxz
add
flds
add
mov
add
add
add
mov
add
cli
push
add
sti
adc
push
sti
adc
push
sti
adc
push
sti
adc
push
sti
adc
push
sti
adc
push
sti
adc
push
sti
adc
push
sti
adc
push
sti
adc
push
sti
adc
push
sti
adc
push
sti
adc
push
sti
adc
push
sti
adc
push
sti
adc
push
sti
adc
push
sti
adc
push
sti
adc
push
sti
adc
push
sti
adc
push
sti
adc
push
sti
push
add
sti
add
cli
cmp
add
mov
add
inc
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
hlt
adc
add
inc
add
add
add
mov
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
hlt
adc
adc
add
add
add
mov
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
add
add
add
mov
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
mov
add
inc
add
add
add
mov
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
mov
add
inc
add
add
add
mov
add
incb
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
adc
add
mov
add
inc
add
add
add
mov
add
incb
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
adc
add
mov
add
inc
add
add
add
mov
add
incb
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
adc
add
mov
add
inc
add
add
add
mov
add
incb
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
adc
add
mov
add
inc
add
add
add
mov
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
hlt
adc
adc
add
add
add
mov
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
hlt
adc
adc
add
add
add
mov
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
hlt
adc
adc
add
add
add
mov
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
hlt
adc
adc
add
add
add
mov
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
hlt
adc
adc
add
add
add
mov
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
sbb
adc
adc
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
and
adc
add
inc
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
mov
add
inc
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
es
push
add
mov
add
inc
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
push
add
mov
add
inc
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
push
add
mov
add
inc
add
add
add
mov
add
incb
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
xor
xor
sbb
push
mov
add
inc
add
add
add
mov
add
xor
push
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sbb
ljmp
adc
sub
ljmp
adc
ljmp
adc
ljmp
adc
ljmp
adc
ljmp
or
cmp
cmp
dec
add
sbb
sbb
add
add
add
hlt
pop
or
pop
adc
pop
sbb
pop
sbb
pop
push
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
pop
add
sbb
add
inc
add
add
add
scas
push
add
cld
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
std
arpl
std
arpl
std
arpl
std
arpl
std
arpl
std
arpl
std
arpl
std
arpl
std
arpl
std
arpl
std
arpl
std
arpl
std
arpl
std
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
bound
cld
push
push
push
out
sbb
sbb
add
add
add
add
push
adc
pop
sbb
pop
and
pop
sub
pop
lock
aas
pop
lock
inc
pop
lock
dec
pop
lock
dec
pop
lock
dec
pop
lock
dec
pop
lock
dec
pop
lock
push
pop
lock
push
pop
lock
dec
pop
lock
dec
pop
lock
dec
pop
lock
dec
pop
lock
dec
pop
lock
inc
pop
lock
inc
pop
lock
cmp
pop
xor
pop
es
lock
push
pop
lock
adc
inc
add
add
add
add
add
add
add
sbb
sbb
sbb
add
mov
add
mov
push
sbb
mov
or
mov
adc
mov
push
sbb
mov
or
mov
push
sbb
mov
add
mov
add
mov
add
scas
sbb
sbb
add
add
add
adc
add
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
add
add
add
sub
add
sbb
add
xor
add
add
and
add
add
pusha
or
add
sbb
pop
sub
and
sbb
xor
sub
and
sub
and
sub
and
sub
and
daa
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
xor
sbb
sub
sbb
adc
nop
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
sbb
adc
adc
shlb
sbb
jmp
adc
lcall
mov
push
mov
push
adc
lcall
adc
lcall
adc
lcall
adc
lcall
adc
lcall
adc
lcall
adc
lcall
adc
lcall
adc
lcall
adc
lcall
adc
lcall
adc
lcall
adc
lcall
adc
lcall
mov
push
mov
and
sub
daa
sbb
ljmp
cs
xor
add
call
add
decl
add
decl
add
decl
add
decl
add
decl
add
decl
add
decl
add
decl
add
decl
add
decl
add
decl
add
decl
add
decl
add
decl
add
decl
add
decl
add
call
add
jmp
push
ss
cmp
cmp
aas
cs
or
decl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
add
ljmp
or
aas
cs
out
or
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
or
ds
cmp
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
cs
out
or
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
and
ds
out
or
push
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
and
ds
out
or
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
sub
cmp
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
cs
ds
and
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
cs
out
or
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
cs
out
or
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
cs
out
or
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
or
aas
das
ds
das
aas
out
or
decl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
add
ljmp
or
incl
aas
out
das
aas
out
or
decl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
add
ljmp
or
incl
inc
out
das
aas
out
or
decl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
add
ljmp
or
incl
inc
out
das
inc
out
or
decl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
add
pushl
or
incl
inc
out
xor
cmp
and
adc
push
adc
call
pop
adc
call
or
call
or
call
or
call
or
call
or
call
or
call
or
call
or
call
or
call
push
pop
jmp
or
inc
out
cs
in
push
inc
call
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
call
push
call
push
call
push
call
push
call
push
call
push
call
incl
inc
incl
inc
in
sub
lcall
pop
jmp
popa
jmp
popa
jmp
popa
jmp
popa
jmp
popa
jmp
popa
jmp
popa
jmp
popa
jmp
popa
jmp
popa
jmp
popa
jmp
popa
jmp
popa
jmp
popa
jmp
popa
jmp
popa
jmp
popa
jmp
popa
lcall
pop
incl
inc
sub
mov
inc
std
dec
sbb
dec
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
dec
decl
dec
incl
inc
std
sub
sub
and
mov
sub
enter
sarb
sub
sarl
sub
sarl
sub
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
das
and
mov
inc
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
sbb
sbb
push
dec
sbb
sbb
push
sbb
sbb
push
pop
adc
pop
adc
pop
adc
pop
adc
pop
adc
sbb
sbb
push
sbb
push
push
sbb
pop
dec
sbb
sbb
out
adc
lcall
adc
lcall
adc
lcall
adc
lcall
adc
lcall
adc
ljmp
and
stc
and
and
decl
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
and
sub
stc
sub
stc
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
sub
stc
sub
stc
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
sub
stc
sub
stc
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
sub
stc
sub
stc
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
cmp
sub
stc
or
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
sub
stc
sub
stc
or
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
sub
stc
sub
stc
push
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
decl
add
sub
stc
aas
sub
stc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
aas
sub
stc
inc
sub
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
stc
inc
sub
push
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
lcall
add
incl
inc
stc
inc
sub
add
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
incl
incl
inc
incl
inc
incl
inc
incl
inc
decl
dec
incl
clc
inc
das
inc
out
pop
adc
pusha
and
pusha
xor
pusha
inc
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
lcall
pop
incl
inc
out
sub
push
dec
xor
inc
repnz
xor
inc
xor
inc
repnz
cmp
inc
cmp
repnz
cmp
repnz
cmp
inc
cmp
inc
ss
repnz
xor
repnz
xor
dec
ss
in
cmp
push
add
add
push
add
and
add
add
add
add
sbb
add
add
add
push
add
add
adc
add
add
or
push
add
and
add
add
add
add
sbb
add
add
add
add
adc
add
add
add
add
push
add
add
add
add
jae
outsb
in
inc
pop
xor
inc
push
sahf
xor
xor
ret
cli
mov
mov
jg
adc
jmp
add
xchg
popl
addr16
arpl
jg
aas
popf
loop
push
int3
ret
cmp
jle
lea
jo
mov
stos
mov
neg
in
add
rcll
test
das
or
lds
test
mov
pop
mov
les
mov
dec
test
gs
fmull
dec
pop
jl
mov
lcall
lret
mov
popl
sahf
pop
pop
rcrb
inc
push
xchg
dec
lods
xchg
decl
enter
arpl
lret
mov
shlb
adc
shl
xor
xor
iret
mov
repz
fs
popf
push
xchg
ljmp
leave
sbb
shl
push
ljmp
xor
loope
jmp
sbb
push
leave
mov
gs
cmp
shlb
sub
popf
stos
push
jle
sbb
imul
jge
sbb
and
rclb
inc
lods
daa
adc
inc
jp
dec
insb
sub
dec
add
jns
mov
out
push
push
and
and
fstp
insb
jne
push
xor
jmp
cmpsl
out
addl
inc
mov
into
mov
inc
xor
arpl
xor
inc
in
mov
xchg
call
inc
xchg
arpl
mov
or
arpl
leave
or
insl
or
enter
adc
xor
jno
or
cmp
call
out
out
std
gs
lods
add
fnsetpm(287
and
adc
lahf
fadd
inc
ret
jno
inc
mov
cmpsl
ljmp
in
enter
fimull
cmp
lcall
pop
mov
push
cmp
dec
cmp
sub
fs
mov
mov
xchg
out
ljmp
push
std
push
fmul
add
into
js
rclb
test
clc
aaa
repz
aam
adc
sub
push
jecxz
aaa
cmpsb
push
add
data16
pop
outsl
je
xchg
lock
je
hlt
out
jmp
cmp
pop
cmp
and
jecxz
pop
push
outsb
sub
mov
in
daa
cmp
sbb
sub
xlat
dec
cmp
mov
or
mov
out
arpl
adc
cmpsl
jp
adc
jg
fdivrs
sbb
pop
insl
fdivl
sbb
stos
xlat
pusha
xchg
mov
xor
push
in
ret
xor
mov
aam
pop
cwtl
jg
lock
dec
lret
popa
or
jns
jnp
andl
pop
stos
push
and
xchg
cli
clc
mov
and
pop
iret
mov
dec
adc
xor
or
jl
enter
stc
test
stos
dec
cmp
cmpsl
push
ret
loop
jb
sub
pop
cmp
xchg
pop
sbb
cwtl
int
jle
mov
inc
test
imul
xor
imulb
mov
pop
adc
fdivl
add
mov
out
pusha
or
bound
mov
jbe
adc
pop
sbb
int3
arpl
sub
loop
stos
nop
fisubrs
xchg
and
mov
ret
mov
cmc
adc
push
or
inc
cmp
and
add
repz
dec
cmpsl
in
lea
mov
push
into
std
sbb
call
cmc
lods
stc
xchg
dec
cmp
stos
xor
inc
add
xchg
test
jne
imul
fcomi
xchg
pop
mov
push
pop
jecxz
sbb
mov
push
adc
or
lods
mov
mov
je
loopne
iret
das
add
cwtl
mov
in
add
dec
jg
cmp
daa
fst
out
sub
je
sub
jge
hlt
ljmp
fisubs
cmp
mov
cmp
xchg
call
lret
jp
aam
ja
sbb
sub
in
mov
mov
out
push
dec
push
in
jbe
ss
data16
jg
xchg
dec
stc
mov
mov
and
outsl
inc
jle
dec
stos
xchg
jg
pop
xchg
sub
mov
cwtl
enter
dec
pusha
in
bound
aas
leave
xchg
cmp
mov
adc
addr16
push
loop
mov
mov
pop
fdivs
inc
loope
cmc
mov
adc
adc
xchg
sbb
xor
push
push
in
in
xchg
sti
jle
mov
pop
lds
cmp
mov
xor
mov
mov
std
xchg
xchg
mov
dec
fdivrs
out
jnp
scas
hlt
cmp
sarl
ja
adc
daa
and
xchg
sub
lock
fdiv
cmp
mov
or
push
nop
stos
xor
mov
adc
fcoms
lea
lret
stos
cs
cs
rcrb
das
sub
lret
gs
ss
inc
call
add
jns
fcompl
or
test
mov
push
in
pop
movsb
adc
ljmp
in
notl
push
lods
ffreep
add
adc
outsl
shrb
add
cmovl
jmp
nop
pop
dec
int3
pop
mov
mov
add
jbe
fadd
cmp
lahf
fstenv
mov
cmp
mov
push
xchg
inc
sub
mov
inc
sub
das
mov
sbb
outsb
adc
add
adc
xor
ret
jno
jns
pop
pop
or
push
dec
ds
test
movsb
push
nop
push
rclb
data16
dec
jbe
movsl
imulb
mov
xchg
sub
push
inc
mov
cmp
jae
jnp
push
int3
mov
and
mov
dec
mov
sbb
pop
dec
out
imul
inc
testb
mov
in
movsbl
in
pop
cmp
lods
push
das
mov
mov
mov
mov
pop
mov
movsl
dec
mov
lret
lods
xchg
jo
pop
std
push
enter
pop
stc
adc
xor
sub
loop
aas
or
syscall
imul
cmp
or
cmpsl
divl
lds
dec
fisubrs
or
adc
xor
cs
xor
outsl
sub
cmpl
lods
lds
leave
lods
in
cmp
lods
cmp
jle
jne
sub
pop
xchg
ficomps
mov
dec
cmp
sbb
decb
pop
mov
cli
push
jb
sub
sahf
and
push
pop
loopne
pop
cs
dec
inc
imul
lret
add
xchg
add
mov
xlat
insl
sub
mov
pushl
shl
cs
inc
add
insl
mov
sbb
xor
jl
in
lcall
rorl
mov
mov
test
mov
bswap
pop
ljmp
ret
insb
mov
or
xor
adc
or
xor
pop
pop
repz
test
or
xchg
pop
mov
stos
dec
ds
adc
jle
es
push
fld
sbb
fwait
push
inc
sbb
sub
andl
sbb
push
scas
dec
xchg
out
and
add
jge
in
push
mov
loope
mov
pop
aam
or
jg
push
cli
int3
add
adcb
sub
test
notl
aas
or
push
aam
lods
sahf
jmp
out
adc
lahf
or
cld
aad
or
fsubrs
std
fsubp
stc
lods
ss
ror
dec
sahf
fwait
sahf
int
inc
jge
add
clc
sbb
mov
cmp
jne
nop
daa
jb
fstpl
or
mov
insl
into
mov
aaa
fmuls
ret
mov
arpl
pop
outsl
nop
movsb
mov
mov
scas
xor
add
add
fldcw
rol
andl
shlb
mov
mov
hlt
inc
xor
rclb
push
adc
push
addr16
shl
sub
rcr
sub
pop
loop
out
scas
loope
push
add
int
push
in
xor
pop
cltd
mov
fimull
lcall
mov
fs
jne
mov
sbb
pop
mov
pop
mov
mov
or
adc
or
mov
pop
inc
fs
in
and
jmp
push
sub
mov
mov
jecxz
and
loopne
movsl
cmpsl
xchg
dec
inc
addr16
out
mov
or
ja
xchg
mov
inc
fimull
add
xlat
sub
movsl
sub
sbb
cmp
xchg
mov
mov
int3
data16
cmc
xor
mov
iret
not
mov
mov
outsl
pushf
dec
jns
add
dec
xchg
xchg
cli
sub
les
dec
sub
adc
pop
fldcw
push
je
notl
push
push
push
mov
lret
jmp
jl
xor
xor
sub
xchg
subps
lods
test
xor
arpl
jecxz
insl
pop
lds
stc
push
rolb
and
add
mov
mov
xchg
cltd
ja
push
push
cmc
out
nop
aam
jmp
sbb
cwtl
xchg
cmpsl
iret
pop
sahf
jg
jecxz
or
push
fwait
jb
xor
adc
pop
pop
sahf
cs
insb
ss
out
mov
push
lods
mov
sbb
cmpsb
lods
sub
mov
adc
ss
push
sub
xor
in
aam
mov
xlat
xor
or
pop
mov
jmp
push
mov
gs
in
movsl
loop
dec
inc
mov
test
inc
and
test
inc
popa
xorb
sub
int
mov
movsb
xchg
mov
xor
mov
mov
jecxz
push
push
loope
mov
xchg
mov
dec
ljmp
cmpsb
dec
sub
pop
cltd
mov
ficompl
push
mov
push
stos
ja
jno
les
push
jns
mov
jne
imul
dec
bound
in
insl
push
add
mov
lahf
sub
jl
aad
sub
xlat
ss
leave
dec
popf
xor
imul
mov
dec
mov
pop
sub
dec
pop
cmpsb
pop
jns
push
cmc
xor
cmpsl
and
stos
push
aam
or
test
and
repnz
cmp
xor
outsb
and
aas
dec
and
sub
ror
and
mov
test
inc
outsl
jbe
aas
pop
inc
int
sub
divb
mov
jne
or
lcall
int3
pop
jle
aaa
stos
pop
fiaddl
xor
or
scas
jp
sti
add
mov
insb
or
sub
or
psubb
sbbl
bound
jbe
icebp
rolb
inc
imul
sbb
pop
sub
pop
jg
les
out
std
iret
insb
test
fldl
jmp
aam
lock
cli
bound
fs
sub
ja
pop
incl
js
xor
mov
test
andl
stos
fs
loope
mov
cmp
bound
pop
inc
and
into
xchg
arpl
xor
fldcw
push
pop
mov
xor
fs
jbe
cmp
inc
roll
inc
mov
hlt
push
out
jmp
inc
pusha
xor
mov
popf
mov
mov
dec
fstps
mov
mov
ret
xor
jne
into
andb
cmp
adc
inc
add
sbb
fmull
lods
xor
cmpsb
idiv
xchg
and
mov
mov
xor
dec
mov
js
fs
adc
mov
cmp
add
and
cmp
cmp
push
xor
and
mov
lret
add
and
sbb
call
jns
cwtl
icebp
jmp
add
in
cmc
popa
push
das
ljmp
ret
movsl
fidivrs
aas
mov
cmp
adcb
adc
sbb
cmp
outsl
outsl
cmp
iret
negb
clc
scas
pushl
mov
push
dec
mov
cmp
inc
xchg
ds
pop
popf
xorps
dec
mov
adc
and
mov
and
mov
add
inc
lods
repz
es
das
fsub
add
movsb
imul
and
mov
movsl
push
add
xchg
das
shll
dec
aas
mov
cmp
mov
xor
inc
sbb
lods
movl
push
int3
or
sbb
sub
fldenv
loopne
and
pop
push
adc
or
call
arpl
push
pusha
jecxz
ljmp
lahf
mov
das
cltd
sub
xor
mov
std
jne
pushf
jp
iret
cs
and
push
sub
clc
xchg
je
std
mov
sbb
or
mov
dec
jns
add
cmpsb
jge
or
addl
outsl
in
xchg
jle
adc
inc
icebp
xlat
inc
mov
or
adc
pop
mov
sbb
pop
insl
test
push
hlt
jne
aad
cmp
xchg
daa
lcall
mov
xchg
das
test
cmp
orb
jo
xchg
insl
loopne
jbe
fldt
fildll
mov
out
pushf
add
dec
mov
sarb
clc
rcr
not
push
shrb
test
cmp
fcoml
jns
das
nop
rclb
jle
push
pop
dec
fsubrp
shl
data16
sub
mov
out
dec
jno
dec
outsl
ljmp
bound
xor
in
cmpb
imul
xor
leave
jbe
fwait
mov
inc
cs
xchg
lock
andb
sub
add
add
mov
pop
pusha
outsb
push
adc
sub
xor
fwait
out
xor
mov
ljmp
outsb
lods
mov
jle
jg
mov
adc
inc
out
out
inc
lcall
leave
adc
mov
mov
outsb
enter
mov
scas
lods
in
add
mov
ja
dec
xor
dec
ret
cwtl
add
mov
cltd
and
add
insb
lahf
test
dec
scas
push
xchg
lds
outsl
repz
push
iret
into
sbb
aaa
lock
rclb
add
in
jge
test
or
pop
gs
jecxz
jp
cli
mov
pop
shrl
pop
cmpsl
pusha
xlat
addps
test
jle
inc
jl
xor
push
clc
pushf
shl
cmpsl
xor
push
cli
ja
cwtl
popf
mov
call
push
popa
mov
or
or
insl
fwait
jmp
pop
jmp
popa
icebp
or
push
cwtl
imul
test
fcomps
in
adc
sbb
push
jnp
inc
jp
ss
mov
xchg
mov
stc
sbb
nop
xchg
cmp
sbb
and
stos
in
movsb
cmp
idiv
sbb
cltd
mov
ds
enter
dec
cmpsl
mov
out
out
mov
pop
arpl
rcrl
out
scas
inc
pop
mov
mov
add
pop
mov
sbb
int
jecxz
cmp
jl
mov
sub
mov
push
mov
pop
jle
repz
lock
dec
ds
mov
inc
mov
xlat
ret
xchg
test
into
xor
cmp
aas
scas
jae
mov
inc
leave
mov
push
pop
ljmp
ror
sbb
jns
fcoms
dec
inc
jns
bound
jmp
test
cmp
lahf
mov
test
or
das
in
adc
scas
add
push
push
and
adc
out
sbb
sti
sub
pop
mov
enter
pop
or
jle
cli
sub
jb
fisttpl
cwtl
xor
sub
movsl
pop
mov
push
hlt
popf
scas
cld
imul
or
push
jbe
jne
mov
mov
dec
es
jle
add
mov
cmpsb
push
pop
or
js
aam
pop
xorl
mov
mov
sarl
jmp
test
mov
fiadds
call
out
aam
inc
xchg
mov
cmp
aam
call
call
xor
iret
in
rcll
dec
lds
stos
imul
andb
fcmovne
xor
inc
push
rorl
mov
test
mov
inc
lahf
lods
test
outsl
hlt
addr16
mov
loop
pop
adc
xchg
lods
sbb
and
push
mov
sarl
cwtl
loop
mov
and
lcall
jb
add
cli
js
out
outsl
mov
and
jmp
push
mov
shrb
cltd
push
dec
cld
push
add
ss
cmp
xor
mov
cmp
mov
sbb
stc
mov
mov
mov
aam
sti
and
pusha
cli
lods
das
adc
xlat
jmp
jne
leave
sbb
or
xchg
sahf
sbb
or
push
mov
fisttps
add
jo
repz
cld
dec
mov
cmp
and
notb
inc
imul
mov
jo
cmpsl
jnp
jmp
out
mov
ss
andl
and
sbb
push
lods
les
inc
std
sti
nop
jae
cmpsl
dec
adc
pop
push
xor
outsl
aas
mov
es
cmp
in
stc
fwait
push
repz
es
and
pop
test
mov
push
rcll
fstpt
ja
sub
addr16
int
cmpsb
arpl
testl
push
add
das
sbb
xor
xchg
into
xchg
and
mov
cld
and
mov
imul
cmp
scas
mov
xchg
pushf
add
int
jge
mov
lock
jmp
cmp
inc
sub
inc
sub
rcrl
clc
xor
or
add
dec
mov
jge
out
mov
xor
or
emms
mov
jns
je
ffree
cmpsl
mov
and
neg
xor
pop
clc
sti
lcall
stos
xchg
mov
push
loope
pop
inc
xor
sub
mov
negl
in
imul
mov
out
fcomi
in
inc
out
repz
push
jp
adcl
pop
xchg
xchg
repz
cmc
fildll
inc
push
inc
push
stos
cmp
lods
pop
pushf
ret
pushf
pop
xor
jns
outsl
and
daa
aas
cld
sbb
lods
pop
repz
lcall
lret
movsl
adc
inc
ret
pop
int
inc
jle
xor
push
lds
sub
dec
clts
fwait
sub
adcl
testb
fists
xlat
leave
lret
fcmovnbe
sahf
out
int3
mov
mov
add
stc
in
mov
add
mov
push
dec
dec
mov
xor
jb
outsl
ret
decl
xlat
fucomp
lcall
ret
and
pop
fcomps
push
dec
or
cmp
test
das
pop
movsb
sbb
jp
mov
sbb
or
inc
pusha
mov
adcb
cmp
aas
ret
dec
imulb
lahf
xor
out
pop
jo
cmp
lret
and
ret
ficoms
movsl
dec
cltd
repz
cs
or
fwait
mov
xchg
pop
dec
xchg
cs
insl
in
loopne
call
leave
inc
inc
mov
dec
sbb
jmp
je
pop
and
std
jno
mov
bndstx
dec
fs
mov
out
into
mov
or
jl
out
lds
test
push
shrl
sub
aas
imul
arpl
sbb
fdivp
sbb
and
ss
push
jno
xchg
cmp
pop
ds
movsb
std
sarl
mov
gs
rcll
mov
orl
gs
lahf
andb
pop
mov
aam
imul
jge
lret
pop
and
pop
mov
imul
pop
mov
xchg
incl
inc
clc
test
aas
stos
pop
lea
cmp
or
shlb
mov
jmp
inc
sarl
jne
in
cwtl
add
xchg
shrl
xlat
mov
mov
dec
and
jnp
and
dec
cli
call
mov
insl
aad
test
xor
lahf
jle
pop
arpl
and
xchg
ja
mov
cmp
outsb
jl
mov
sbb
dec
bound
and
pop
int3
ret
icebp
xchg
mov
mov
pushf
inc
xchg
popa
sub
push
dec
adc
mov
mov
or
in
mov
pop
test
add
leavew
adc
xchg
push
popf
mov
iret
pop
adc
lock
lahf
test
xchg
mov
cltd
aaa
adc
cmp
mov
inc
cs
mov
in
sarb
pushl
or
incb
xchg
lret
pop
add
sahf
dec
cmp
sahf
fcomi
test
subb
movsl
jl
loopne
loope
sbbb
in
ret
sti
pop
sub
sub
adc
pop
scas
icebp
jnp
inc
push
xor
and
mov
fisubl
xor
imul
mov
sub
roll
in
loop
iret
test
js
clc
nop
jg
pop
or
mov
xor
lock
bnd
add
and
in
cltd
shrb
roll
or
lock
add
fs
sbb
xor
ds
adc
xorl
push
xchg
inc
leave
cmp
mov
loope
out
dec
outsl
mov
pusha
jb
push
cmp
pop
jmp
push
fxch
cmp
inc
nop
ret
inc
loope
mov
gs
sub
sti
adcb
loop
sbbb
jp
pushf
shl
in
adc
outsb
mov
xchg
lods
lods
xchg
pusha
cmp
dec
faddp
iret
xchg
fcmovnu
cs
repz
dec
cld
jecxz
sub
hlt
leave
rol
pusha
movsb
pop
test
push
jno
mov
loop
sbb
ljmp
iret
pusha
dec
cmp
jne
pop
int
cs
shll
iret
mov
jmp
int3
xchg
xchg
sub
pusha
jl
mov
and
or
int
fisttpll
outsl
and
sub
and
mov
dec
xor
fxch
cmpsb
in
fisttpl
jns
fwait
adcl
pop
jp
xor
sti
xchg
shl
push
ret
jl
jno
pop
insb
push
sbb
pop
ficomps
cwtl
fistpll
lods
popa
push
das
movsl
cld
sbb
lret
jmp
push
cmp
jmp
out
mov
jns
push
sub
scas
adc
fdivs
es
mov
mov
mov
sbb
cld
je
lret
out
sbb
imul
inc
inc
int3
mov
dec
dec
aad
jge
loope
fmull
sbb
xchg
jns
xchg
add
inc
outsl
push
rcll
fldcw
test
pop
pop
sbb
dec
les
fnstsw
inc
icebp
push
push
jg
xchg
xchg
ljmp
mov
pushf
call
int
mov
jp
jns
mov
ret
int
in
and
lock
adc
lret
int3
push
mov
pop
in
rorl
shll
adc
pushf
push
add
or
xor
sub
call
test
outsl
xlat
sbb
dec
outsl
fsubs
jno
pop
pop
lahf
cmp
pop
icebp
cmp
std
xchg
add
call
gs
out
dec
sbb
mov
or
leave
mov
dec
cs
fisttps
xchg
xchg
add
icebp
popa
sysenter
mov
mov
xor
test
inc
rcrl
push
push
call
and
push
repz
aam
push
fnstsw
fidivl
pop
xchg
rcrb
ret
adc
jo
add
push
cmpsb
insl
sub
mov
xchg
jnp
mov
xchg
jns
cmp
lods
cmp
data16
xchg
mov
add
pop
sbb
fs
xchg
fidivrs
jp
lcall
sub
xor
scas
push
or
dec
mov
and
fbstp
imul
xchg
inc
xchg
imul
cwtl
divl
icebp
xor
movb
dec
pop
pusha
mov
jb
mov
xchg
dec
js
aam
shlb
push
scas
jg
clc
stc
push
dec
mov
mov
and
mov
fstps
mov
inc
fwait
pop
dec
pop
cli
repz
and
shlb
leave
xor
scas
or
into
mov
push
cmp
das
leave
shl
fisttpl
dec
insb
pop
mov
mov
mov
mov
fstl
or
icebp
and
sbb
stos
leave
cmp
jl
setno
jnp
mov
cmp
sbb
dec
nop
fidivl
jne
mov
mov
adc
adc
fwait
pop
orl
dec
and
shlb
jns
mov
gs
xlat
or
daa
sub
jg
cmp
sub
fwait
pop
mov
or
movsl
es
cmp
aas
popa
push
dec
int3
inc
adcb
bound
outsb
sbb
or
ret
je
out
popa
or
loop
mov
push
shlb
int
fisttpl
psrlw
js
dec
dec
mov
decb
add
mov
idivl
jne
cli
pop
lods
mov
sbb
inc
andb
shll
icebp
mov
push
in
add
scas
mov
add
and
adc
add
loopne
lea
mov
or
sub
xor
xchg
sbb
xchg
push
add
dec
out
xchg
inc
mov
pop
pop
stc
mov
cwtl
pop
inc
xor
in
lock
aaa
inc
icebp
sbb
pop
aad
pusha
jno
push
arpl
cmp
mov
xor
push
push
sbb
sarb
out
cmp
jmp
popf
xor
stos
test
cltd
mov
jne
dec
jns
arpl
add
lods
ja
notb
mov
cmpsl
jp
leave
gs
mov
addr16
sub
out
test
cmp
mov
sub
push
jne
std
pusha
fs
addr16
mov
and
jl
add
mov
push
repnz
sbb
or
push
inc
stos
testl
sarl
sti
push
clc
cmp
xor
lahf
pop
and
xchg
mov
ds
jae
pop
movsl
into
mov
cld
xlat
movl
cmpsb
jge
add
add
fcmovnb
andb
and
dec
sbb
mov
popf
jno
shll
push
stos
mov
xor
ljmp
ret
sub
out
xor
xor
repnz
inc
dec
inc
enter
mov
adc
cmp
sub
push
add
js
lret
xchg
insb
adc
sub
fs
scas
movlps
inc
lds
and
cli
cli
push
push
addb
sbb
mov
dec
push
subl
pop
inc
mov
push
cmpsl
push
add
or
fisttps
int
cmpsb
dec
subl
test
addl
xor
bound
jl
push
cmp
hlt
ret
cmc
pusha
lea
sbb
fsts
data16
jae
or
arpl
imul
icebp
or
and
mov
mov
sbb
into
nop
sub
popf
inc
mov
sub
sbb
dec
inc
lahf
cmpsl
repz
les
mov
insl
sbb
daa
dec
lea
xchg
push
mov
and
inc
cmp
sbb
or
cli
pop
ds
cli
xchg
sbbb
iret
fcmovu
pusha
js
aas
push
sub
jmp
arpl
cltd
cmp
pop
fimuls
mov
mov
inc
pop
sarb
xor
push
popa
push
sub
mov
aaa
cmp
push
and
cmp
rcrl
push
sbb
sbb
es
inc
jns
jne
push
xor
repz
fwait
pop
xchg
addb
push
and
fsubs
push
mov
add
loop
hlt
cli
jg
jo
in
shlb
jo
je
sub
pusha
in
aas
pop
cmpsb
xchg
mov
dec
cmp
ds
imul
adc
and
mov
test
lcall
movsl
aas
cmp
inc
xlat
adc
dec
xor
mov
cld
sub
fidivrl
push
clc
lods
mov
push
push
xchg
lods
adc
pusha
les
pop
enter
pop
mov
icebp
hlt
xchg
outsl
push
nop
dec
add
inc
add
negb
cs
enter
scas
or
cmp
test
test
xchg
in
lret
cmp
sub
xchg
dec
notb
cmp
fistpl
rorl
xchg
xchg
jmp
mov
int
iret
mov
pushl
pop
jl
push
out
lret
bound
cmp
sahf
cld
in
fmulp
cmp
test
mov
fdivr
stos
insl
jle
xor
mov
and
and
or
sub
lret
dec
xor
stos
lds
movsl
gs
xchg
xchg
mov
dec
mov
mov
aas
stos
mov
fiadds
push
mov
inc
popa
idivl
scas
dec
lret
pop
sbb
rclb
add
icebp
lods
mov
iret
in
outsb
enter
dec
cmp
rcr
xchg
jmp
add
add
inc
loopne
dec
cmovae
int
jnp
sub
or
ds
mov
add
sbb
mov
adc
and
popa
lcall
cld
lahf
inc
addb
add
pop
sub
hlt
xchg
push
fs
jnp
pushf
push
push
inc
inc
inc
in
mov
loop
jo
mov
add
push
lahf
or
test
push
cs
push
cwtl
das
mov
movsl
call
ja
add
mov
ljmp
sub
pop
in
out
stos
lahf
mov
aam
push
daa
xchg
mov
inc
sub
pop
aad
push
pop
fwait
aaa
cmp
in
lret
ljmp
and
mov
lock
popa
ret
cmp
xchg
cltd
sahf
push
mov
jne
shl
cmp
mov
cmp
pop
cmpsl
mov
push
icebp
lds
inc
adc
ret
pop
cltd
fildll
xor
mov
xlat
xchg
inc
fbstp
adc
cmp
xor
sahf
nop
shll
jne
xor
xchg
shrb
pop
in
jmp
adc
and
push
test
mov
add
ror
je
popf
shrb
dec
fs
cwtl
bound
mov
jne
sbb
daa
shlb
icebp
jle
mov
mov
mov
mov
inc
cmc
cmpsb
add
push
pushf
jns
imul
inc
test
dec
dec
jmp
imul
sbb
lahf
dec
cmp
add
xchg
addr16
jmp
flds
cltd
push
pop
dec
pushf
add
jns
stos
shl
jle
cmp
cmp
lds
imull
cmp
sub
enter
dec
push
add
clc
lcall
sbb
test
mov
pushf
notb
scas
or
sub
sbb
xor
outsb
cmp
mov
push
repnz
add
or
push
pusha
iret
scas
aaa
push
or
nop
lret
dec
sub
jnp
mov
pusha
dec
lods
filds
and
dec
xlat
rolb
push
mov
hlt
pushf
ljmp
inc
mov
inc
mov
and
mov
test
mov
fldcw
dec
rolb
mov
pop
and
mov
pushf
dec
pop
adc
mov
pop
mov
arpl
div
mov
mov
or
jmp
cmp
aaa
into
lret
push
sti
in
mov
jo
inc
xchg
or
push
inc
xor
daa
sbb
iret
aam
xchg
fistl
das
xchg
das
pop
jp
imul
scas
fisttps
and
mov
lods
aas
negb
fidivrl
pop
cmp
sti
shlb
in
and
aaa
sub
dec
les
sbb
stos
mov
inc
mov
pop
lahf
mov
jb
add
test
jge
xlat
xor
inc
cmp
popf
pop
xchg
aam
sar
xor
ljmp
push
lret
stos
fmull
fisttps
dec
push
mov
js
sub
addl
push
ret
adc
sahf
lcall
inc
out
mov
pushf
push
mov
ret
pop
cmpsb
rcll
gs
mov
sbb
sub
hlt
sahf
add
mov
cmp
rolb
loope
xor
sbb
fdivs
and
jge
mov
sbb
inc
xchg
mov
int
inc
inc
xchg
idivb
imull
dec
dec
into
mov
adc
shlb
orl
and
cmp
xor
jmp
sub
push
es
add
sub
sbb
adc
sbb
push
addr16
and
repz
add
mov
push
mov
add
test
cltd
mov
sub
mov
movsl
outsb
add
xor
pop
insb
test
out
popa
dec
aam
pop
dec
pop
add
test
dec
test
jbe
fs
ljmp
les
hlt
scas
add
ret
and
test
mov
mov
mov
xchg
cs
xchg
repnz
mov
adc
mov
mov
push
in
lea
mov
push
mov
add
or
clc
inc
push
movsb
movsl
cmc
mov
and
xorb
xor
and
jbe
sbb
les
jb
push
std
adc
mov
xor
ret
mov
xchg
push
push
fucomi
or
dec
rolb
out
push
rolb
xchg
shl
push
call
add
jmp
mov
fldenv
inc
lock
mov
xchg
xor
inc
ret
add
jl
jecxz
xor
out
pop
inc
cmpb
inc
loope
push
mov
cmp
jecxz
and
sub
stos
sbb
mov
ljmp
xor
pop
mov
pop
mov
ret
lret
js
dec
mov
bswap
sahf
in
incl
and
aaa
subb
stc
and
aaa
mov
and
shl
xchg
dec
ret
sub
js
jno
cld
sbb
pop
mov
jecxz
outsl
aas
jmp
pop
fadd
fiaddl
out
dec
dec
rcrb
sbb
lret
sub
push
in
in
push
dec
es
jno
push
push
gs
lods
repnz
arpl
in
movsb
ret
inc
mov
xor
xor
fwait
dec
cwtl
push
push
jmp
fisttpl
xor
repz
sub
out
push
mov
data16
or
cltd
mov
aaa
mov
sbb
outsl
ljmp
xchg
dec
dec
scas
adc
mov
rclb
cmp
or
dec
loope
push
cmp
imul
sub
bound
add
mov
mov
scas
xor
leave
fcoml
hlt
and
popf
repnz
out
mov
pop
or
xchg
add
stos
imul
leave
loope
jmp
stc
inc
sahf
in
insb
in
sbb
fnstsw
xor
jmp
inc
mov
xchg
fs
ljmp
outsl
xor
push
mov
jge
movl
lock
cmpsb
test
add
push
xrelease
mov
adc
push
add
cmp
test
mov
cld
pop
jecxz
ja
mov
adc
ficomps
ret
pushf
loop
outsl
repnz
cmpsb
rorb
inc
mov
aas
mov
adc
adc
je
cwtl
adc
xlat
out
nop
imul
std
or
outsl
arpl
xchg
mov
add
adc
out
in
mov
and
cmp
test
mov
and
push
pop
sbb
mov
ret
iret
xchg
popf
jns
jo
aam
cmp
es
jmp
cmp
fdivr
loopne
ficomps
jne
or
popf
inc
mov
push
cmp
stc
ret
aas
fdivrp
shl
sbb
adc
jg
mov
insb
push
sbb
add
xorb
adc
pusha
cld
int
lret
lcall
mov
int3
jno
scas
inc
dec
pop
pop
xchg
and
pop
and
push
ret
fimuls
scas
mov
cmpsb
into
jo
leave
es
dec
imul
inc
and
fcomps
push
inc
mov
mov
pushf
push
test
cmp
sbb
adc
adc
inc
mov
mov
or
mov
lahf
add
sub
fwait
cmpsb
leave
mov
out
mov
jns
add
mov
lcall
test
sub
loop
dec
mulb
jbe
xchg
pop
cmp
inc
adc
rcll
cmc
movsb
cld
pusha
enter
addl
xchg
cmp
sub
clc
sbb
int
cmp
or
lods
mov
fistpll
cmp
cld
ljmp
sbb
mov
fwait
test
test
cwtl
sarb
lds
adc
jg
rcrb
movsl
push
lahf
push
js
daa
cmc
inc
sub
ror
sbb
push
fildll
cwtl
aaa
outsl
jp
jmp
cmp
jmp
lcall
movsb
sbb
dec
xor
subb
insb
mov
mov
jb
sub
seta
pop
sub
push
sub
test
cmpsl
int
mov
sub
lds
icebp
adc
popa
inc
int
inc
mov
sti
jns
cmp
jecxz
or
inc
add
xchg
pop
mov
adc
push
imul
jge
ss
xchg
scas
inc
arpl
movsl
mov
popa
and
push
in
fmuls
test
scas
xchg
mov
or
mov
mov
fldenv
enter
add
inc
shl
jp
and
inc
push
data16
pop
mov
ja
xor
cmpl
sub
mov
mov
mov
in
xchg
add
pop
mov
lahf
imul
jo
dec
and
and
clc
xchg
pop
xor
mov
mov
andb
ficoms
pushf
push
insb
inc
out
pop
dec
mov
ds
sbb
push
jae
mov
cmpsl
mov
sahf
xor
sarl
push
movsb
adc
pop
insl
adc
inc
ficoml
xchg
adc
lea
inc
jle
lahf
jb
xor
std
jle
dec
ja
rcr
dec
prefetcht1
jp
dec
pop
pop
mov
xchg
int3
icebp
rorb
cmp
mov
call
stos
push
loopne
divb
or
aam
fisubrl
fs
data16
and
and
cmp
mov
add
mov
xchg
sbb
pusha
mov
in
ficomps
fimull
mov
fdivr
in
dec
rep
lahf
cwtl
iret
out
adc
loop
pop
xchg
sub
je
fisttpll
mov
sub
insb
mov
mov
sar
adc
cmpsb
mov
push
xor
inc
loop
mov
aad
es
or
xor
xor
xchg
sbb
pop
inc
sbb
aaa
gs
pop
push
mov
cltd
dec
lea
sub
pushf
sar
lods
sahf
test
cltd
pop
jnp
mov
pop
push
mov
sbb
lret
add
mov
sub
lret
lret
xchg
xor
addr16
xor
adc
andb
jp
push
or
gs
add
cmp
adc
jmp
cld
mov
mov
insl
jne
sbb
adc
lahf
push
fistpl
roll
je
inc
jle
les
and
cmc
insb
cmp
mov
mov
jns,pn
jno
push
inc
xor
pop
mov
hlt
sub
ja
mov
jo
loop
xchg
cld
enter
gs
mov
cmp
add
adcl
nop
dec
xor
cmp
dec
lds
hlt
fimuls
fildll
test
adc
sbb
popa
punpckhdq
add
mov
add
pop
inc
dec
psllq
push
imul
sbb
sub
jge
fdiv
push
adc
cmp
stos
divl
mov
add
lret
repz
push
dec
pop
repz
fimuls
add
sub
or
dec
mov
mov
push
les
out
fucompp
pop
jl
jno
test
xchg
lods
jl
xchg
jl
sarl
xor
lea
lcall
xchg
data16
pop
mov
out
mulb
inc
pop
sbb
stos
call
push
testl
icebp
inc
mov
cltd
sub
int3
push
xor
xor
popf
das
lds
jb
mov
jno
xlat
pop
mov
push
fnsave
daa
enter
subb
sub
dec
flds
lcall
sub
mov
test
mov
mov
and
jnp
ljmp
jmp
mov
push
loopne
cmpl
leave
push
lahf
mov
mov
adc
mov
cmp
lahf
mov
mov
sub
rcl
adc
push
mov
jl
pop
mov
or
call
mov
and
sbb
lds
pop
push
push
imul
repnz
sub
cwtl
aaa
ljmp
cmpsl
cli
pop
pushf
dec
call
inc
push
push
popa
iret
fistpl
fdivs
pop
or
dec
in
or
xchg
push
je
int
out
cli
call
std
in
fxtract
dec
sub
ja
push
xor
add
sti
xor
lock
lods
cmpsb
imul
mov
ljmp
lods
cmp
cmp
dec
push
cmp
addl
mov
inc
xchg
imul
xchg
jo
out
cmp
push
mov
push
int3
lcall
dec
fiadds
out
pushf
notl
test
arpl
cmp
xchg
hlt
cmpsb
imul
je
dec
xor
test
inc
lock
lcall
lods
push
aad
pop
fsubl
lret
in
ljmp
popa
insl
jae
xlat
push
shl
inc
and
cwtl
push
out
jae
out
add
mov
rolb
mov
jbe
dec
pop
cltd
mov
mov
adc
xchg
lahf
movsl
xor
movsl
imul
xchg
sbb
add
cmp
adcb
icebp
fs
lds
lret
sub
inc
in
push
xor
insb
mov
adcl
icebp
add
ret
mov
mov
test
cwtl
pop
js
lahf
pop
cmc
hlt
sub
pop
push
daa
std
mov
loope
dec
hlt
push
jge
and
push
or
aad
aad
jmp
rolb
arpl
push
jl
data16
mov
loope
lret
aam
ret
pusha
inc
jmp
mov
cld
lds
jp
mov
inc
mov
mov
mov
imul
xor
inc
sub
jae
dec
or
xchg
movsb
popa
ljmp
push
and
addl
xchg
cmp
nop
test
test
xor
add
loopne
adcl
lods
add
sub
inc
imul
imul
pusha
mull
mov
mov
das
and
xor
adc
mov
jb
mov
xchg
jb
xchg
and
jne
dec
addr16
xchg
xor
add
sbb
push
xchg
mov
fs
mov
adc
inc
lods
dec
ljmp
sbb
and
mov
repz
mov
pop
aad
movsb
andb
imul
jmp
dec
adc
push
call
imul
mov
popa
xor
mov
push
mov
mov
push
rcr
xor
mov
movsb
pop
push
por
adcl
or
and
daa
imul
sub
or
mov
std
push
movsb
dec
cmpsl
out
xchg
repz
in
loop
cmp
bound
adc
push
mov
ret
aaa
repnz
fucomip
xchg
in
mov
pop
lret
mov
mov
jge
insl
xlat
insl
loop
jg
sbb
xchg
push
movsl
cld
ret
push
dec
pop
ret
or
or
iret
hlt
fcmovb
xor
ret
jo
dec
xor
mov
jns
jle
lock
loope
dec
rcrl
movsl
cmp
imul
je
hlt
sbbl
cltd
movsl
push
push
iret
daa
iret
push
psraw
loope
cmp
jb
push
push
cmp
dec
lret
push
adc
jge
in
xor
pop
iret
or
mov
movsb
sbb
mov
lea
or
xor
popa
add
dec
or
mov
xorl
cmpsl
idivb
sub
aam
jne
pop
int3
add
fsubs
mov
loopne
push
xchg
inc
stc
imul
push
outsl
sarb
add
mov
rorl
lcall
mov
into
push
inc
pushf
pop
xlat
and
ljmp
loop
mov
outsl
jl
push
or
xor
jle
shlb
cmp
adcl
jb
inc
loop
in
jg
xchg
das
inc
jbe
lock
mov
xor
push
clc
and
subb
imul
ret
pop
cmp
pop
cmp
sub
pop
sub
jmp
cmp
cwtl
sub
js
or
jns
mov
rcll
es
inc
addr16
popf
mov
mov
jne
sbb
mov
mov
shl
dec
out
shlb
xchg
sub
sbb
push
jbe
push
inc
add
jo
lock
jl
pop
shll
push
popw
sub
add
nopl
aaa
sbb
push
xchg
xor
in
scas
add
pop
lret
mov
adc
pop
not
das
outsl
lcall
and
inc
pop
fnsave
sub
inc
jecxz
jbe
xchg
inc
cmp
pop
fimull
testb
fcmovb
or
pushf
mov
test
mov
mov
push
mov
es
sbb
xchg
cmpsb
mov
xchg
repnz
and
out
and
push
sahf
fildl
into
inc
xchg
repz
push
sarb
loopew
adc
or
mov
xchg
fildll
push
xor
cmpsb
in
ret
jl
push
xchg
xchg
loope
adc
xchg
arpl
mov
mov
pop
pop
inc
mov
inc
aaa
call
fimuls
hlt
minps
data16
pop
sub
iret
sub
popa
ss
push
pop
jecxz
in
mov
mov
es
adc
cmpsl
pop
push
in
sbb
xchg
push
leave
push
jecxz
insb
cmpsb
out
int
sbb
push
test
imul
mov
lods
insl
ret
and
aad
repnz
out
addr16
adc
push
sbbb
mov
pop
cmc
dec
inc
out
pop
icebp
or
cmp
push
mov
xor
loopne
jne
push
mov
cli
sbb
xor
xor
jg
xor
inc
sub
sbb
mov
ret
repz
sub
movsb
or
mov
lahf
fmull
xor
lret
fwait
add
loop
mov
mov
mov
and
inc
sahf
mov
mov
cwtl
inc
pusha
popl
jne
das
xchg
outsl
cmp
mov
popa
test
in
dec
inc
mov
xlat
cmp
mov
jnp
cmpsl
ljmp
lcall
mov
popl
repz
bound
enter
and
jp
jns
adc
mov
pop
jnp
push
aam
mov
sahf
and
fbstp
add
xchg
imul
arpl
mov
mov
adc
xchg
mov
bound
push
fwait
sub
push
repz
data16
fcmovbe
test
ret
pop
jbe
fistpl
and
inc
add
addr16
sbb
std
test
fstl
xor
cmpl
lods
cwtl
mov
inc
in
rclb
adc
pop
dec
int
scas
andb
scas
add
jns
cmp
mov
jecxz
pushf
in
mov
cli
jecxz
int
lods
in
push
fmull
imul
jmp
imul
sbb
enter
clc
mov
adc
loope
gs
xchg
ljmp
outsl
fisttpll
nop
inc
dec
jg
inc
mov
scas
and
sub
std
outsl
adc
dec
jle
mov
xchg
mov
nop
mov
pusha
insb
fisttps
idiv
sub
mov
out
notb
jns
shrl
mov
adc
cs
iret
fistps
inc
pop
mov
flds
outsb
mov
sub
test
cmp
sbb
addr16
sbb
popa
in
add
cmp
addr16
fdivrs
insb
ret
mov
in
xlat
dec
pandn
dec
aad
add
pop
mov
push
neg
data16
sbb
pop
ljmp
repnz
push
push
adc
bound
push
imul
fnsave
fs
sbb
fbstp
jb
push
aaa
jae
pop
cltd
ja
dec
mov
das
shll
addr16
lret
popf
sarb
lcall
pop
loopne
mov
inc
mov
mov
or
arpl
loope
xor
in
inc
aam
inc
sub
hlt
inc
mov
cwtl
xor
mov
and
shrb
inc
adc
add
adc
push
rolb
mov
pop
xchg
mov
int3
xchg
cli
jno
dec
cmpsl
sbb
dec
repz
push
popf
pop
push
in
mov
mov
fucomp
xrelease
fdivrl
jmp
push
loopne
mov
cli
hlt
pop
push
inc
jnp
push
mov
mov
loop
and
xor
cld
xchg
inc
lret
add
les
ficompl
sub
mov
dec
int
fwait
call
adc
loopne
push
sub
and
pop
mov
dec
cmp
out
lcall
aad
xor
and
sbb
in
imul
push
flds
into
jmp
cmp
xor
or
xchg
jge
sub
pusha
adc
pop
jle
scas
lret
fucomi
out
push
dec
fwait
out
dec
aaa
mov
xor
push
mov
pop
adcl
mov
xchg
mov
jo
xlat
push
push
adcl
mov
pop
cmp
pop
pop
in
lahf
loope
dec
cmp
std
fistl
int3
andps
sub
push
or
out
in
mov
iret
mov
pop
mov
les
jbe
out
mov
pop
inc
xor
mov
add
shrl
xor
jb
hlt
lds
mov
lcall
imul
fnstenv
mov
jle
icebp
in
jno
lods
mull
pop
or
adc
mov
mov
pop
out
mov
or
mov
notl
jne
or
ljmp
ret
popf
dec
pop
xor
mov
pop
dec
push
dec
mov
je
adc
add
test
popa
insb
mulb
negl
repz
loop
lods
fs
outsb
push
fwait
clc
xchg
or
insb
adc
test
test
sub
ficoms
adc
pop
shll
pop
ss
fimull
popf
gs
dec
or
mov
push
mov
fdivr
cld
jno
mov
dec
mov
jp
int
sahf
push
insb
sub
aaa
orl
leave
rclb
pop
adc
mov
mov
cmp
pop
or
adc
popf
sbb
lods
mov
pop
push
loope
mov
add
outsl
jae
divl
loop
xchg
mov
cmp
pop
nop
xor
mov
lock
sbb
in
sbb
inc
test
push
cmc
pushf
sub
lahf
mov
cmp
pop
pop
dec
cli
cmpsl
ss
adc
push
popa
push
and
fstpl
ja
jmp
xor
imul
or
pop
dec
aaa
cmp
mov
xchg
mov
loop
or
push
xorl
mov
and
adc
sub
xchg
sub
stc
cmp
pop
jb
jge
leave
lds
lret
pushf
repnz
movsb
jmp
jns
aas
lods
lret
movsb
cli
inc
and
jo
aad
popa
and
or
lret
aam
scas
outsb
adc
add
push
call
jns
leave
push
xchg
hlt
sub
add
push
pop
icebp
shll
outsb
xchg
jp
pop
movsl
pushf
push
js
out
pusha
js
cwtl
lock
jp
leave
out
aas
lea
mov
andl
cmp
cli
aad
xor
jp
sub
xor
cmp
imul
inc
mov
fsubrl
xor
sub
push
jnp
mov
sahf
cmpl
loopne
andl
or
pop
push
insb
mov
adc
adc
sbb
push
pop
out
pushf
push
mov
and
js
mov
aas
push
mov
sbb
push
lahf
or
arpl
pop
rorl
shll
jno
aas
sbb
jne
loope
push
cwtl
and
sbb
rolb
lret
ficoml
xchg
pop
gs
jns
push
inc
ffreep
mov
jae
jbe
test
xlat
cmp
sub
dec
mov
inc
mov
push
inc
js
cmp
loope
repz
xchg
cmc
xchg
or
inc
push
adc
cltd
xchg
imul
hlt
into
sub
ret
loope
push
imul
xor
lea
push
pop
adc
pop
movsl
and
pop
fs
push
clc
xchg
mov
mov
fsts
and
or
lret
adc
cld
notl
cmp
das
lds
mov
mov
fisttpl
cmovns
movsl
adc
and
xchg
push
pop
mov
jmp
pop
out
add
xchg
jg
or
sbb
jno
jg
dec
aad
stos
and
mov
hlt
sbb
mov
cmpb
shrb
and
xchg
sub
or
adc
or
dec
es
fistl
iret
out
push
pop
repnz
xchg
cmp
lock
arpl
or
lahf
test
fsts
push
movsl
mull
add
jne
or
pusha
mov
mov
rorb
test
ljmp
push
mov
mov
sbb
in
cmp
sub
mov
sahf
sarl
sub
pop
testb
shlb
push
or
and
mov
adc
mov
dec
hlt
mov
shrl
pop
jge
sti
ja
or
xor
dec
aad
and
cltd
cmp
mov
sbb
jmp
mov
jge
xor
add
cmp
fildll
cmp
sbb
jb
lahf
jecxz
out
inc
test
pusha
cld
ljmp
cmp
sbb
xor
pop
dec
push
cmpsl
mov
loopne
cmp
xchg
stos
pop
mov
loope
into
sub
in
inc
add
sbb
add
andl
ja
push
test
cmp
and
aas
mov
out
jns
stc
test
and
push
scas
pop
cmp
mov
jb
dec
sub
movsb
adc
mov
test
ljmp
or
fisubrs
cltd
and
loope
jo,pn
jg
add
fiadds
xor
daa
push
or
cld
push
and
fsubr
andb
mov
sbb
sarl
or
or
sbb
hlt
iret
mov
mov
es
xchg
mov
lock
jge
push
xchg
xchg
cwtl
xchg
ss
lea
cmp
cs
add
sub
add
lcall
adc
fists
add
inc
sti
xchg
sbb
mov
addl
cmp
dec
xchg
push
call
adc
imul
sub
int3
aas
push
add
mov
pop
ret
push
pop
or
xchg
lock
mov
pop
push
rolb
add
sub
imul
sub
loop
and
or
jle
xlat
call
add
cmp
popf
mov
ljmp
in
xor
fdivl
or
mov
and
ja
or
mov
lds
adc
jg
outsb
xchg
lods
test
push
stc
xor
lahf
push
mov
lcall
fcomps
mov
repnz
movsb
adc
xchg
xor
pop
mov
sar
xchg
mov
push
out
repz
ds
inc
xor
cmp
pop
and
cmp
mov
add
iret
adc
or
mov
sbb
aaa
movsb
jnp
pop
push
rcl
add
adc
data16
nop
xchg
push
jge
add
pop
insb
add
insl
pop
mov
aam
adc
loopne
aad
js
cmp
sahf
inc
pop
shr
test
scas
push
push
mov
shrb
jne
jbe
lods
dec
std
mov
int
rolb
inc
dec
enter
pop
out
in
sarl
iret
mov
imul
xor
and
out
out
in
mov
xor
pop
lret
test
pop
lea
or
add
in
stos
or
mov
mov
shlb
add
mov
rcrb
jl
push
std
fs
and
movsl
ds
call
sub
insl
mov
jae
xor
mov
pcmpgtd
les
jge
leave
mov
outsb
mov
pop
pusha
cmp
pop
jbe
sub
jb
dec
push
daa
adc
push
and
lds
sbb
jb
jno
push
lock
fnstsw
and
mov
sbb
in
aad
push
frstor
std
pop
lods
add
fistl
nop
cmp
scas
movsl
ret
pop
pop
inc
out
inc
fcmovne
iret
mulb
sti
jg
sarl
fcoms
pop
dec
and
mov
arpl
loopne
jbe
ja
inc
xor
jmp
xchg
arpl
pop
outsl
aaa
dec
inc
push
jbe
ficoml
push
lahf
push
cli
leave
jp
fstpl
cmp
stos
pop
lea
xchg
repnz
stos
nop
filds
pop
sbb
sbb
mov
out
cltd
fdivrl
lcall
sbb
popa
or
lret
scas
lods
out
and
mov
or
sbb
test
sub
dec
pushf
js
cwtl
mov
arpl
mov
or
lret
std
stc
sub
xchg
ss
mov
fistl
pop
adc
rorb
sbb
ficompl
xchg
push
pop
lods
inc
and
push
loopne
or
pop
push
hlt
xlat
mov
pusha
xor
cwtl
pop
sbb
les
add
dec
fs
iret
cmp
mov
mov
stos
les
push
cmp
mov
inc
sub
and
dec
xchg
adc
scas
mov
outsb
and
stos
mov
pushf
push
in
addr16
sbbb
mov
lahf
js
fwait
xor
das
push
arpl
jae
fwait
add
add
rcll
idivb
mov
cwtl
imul
cmp
mov
test
dec
imul
mov
pop
in
aaa
xchg
mov
xchg
adc
lock
xor
jge
lret
leave
lcall
xchg
cmp
xor
pushf
scas
cmpsb
sbb
push
and
xor
pop
rol
push
sbb
ljmp
mov
pop
dec
mov
sti
aas
sbb
mov
sub
cmp
ljmp
jnp
pop
mov
sbb
push
push
sbb
jo
jecxz
test
aad
adc
lods
and
imul
or
outsb
adcb
cmp
stos
cmp
inc
std
lahf
ret
pop
adc
xchg
inc
add
mov
or
shl
dec
icebp
pop
imul
cmpsl
xchg
mov
or
adc
dec
mov
out
jno
dec
scas
add
jo
faddl
mov
in
inc
sbb
mov
push
inc
xor
pop
adc
dec
push
leave
js
sbbl
dec
jae
push
xchg
adcb
loopne
fbld
popf
lahf
out
lock
mov
movsl
inc
shl
push
and
loope
jle
mov
out
test
push
mov
stos
fldl
mov
fldl
mov
out
test
push
mov
push
sub
arpl
adc
pop
test
arpl
es
roll
cmp
clc
fisubl
mov
fcomip
out
cmpsl
movsb
outsl
out
negl
mov
cmc
cli
movsb
lock
jl
add
fbld
cmpsb
and
push
xor
pop
mov
or
jne
lea
out
loop
jo
mov
enter
cmp
xchg
cmp
mov
loop
in
lret
pop
pop
ret
data16
push
and
pop
call
fnstenv
call
outsb
jl
xchg
or
lock
sub
cltd
push
es
xor
pop
fbld
adc
adc
mov
bound
dec
and
jo
mov
in
int3
xchg
xchg
into
jecxz
or
adc
and
xor
in
ret
jp
cmp
push
and
dec
sub
loop
mov
lret
sub
mov
or
enter
inc
stos
and
lahf
in
js
cmp
dec
jno
stc
enter
push
mov
xchg
pop
aad
mov
adc
jb
lock
inc
mov
mov
out
stos
fisubrl
inc
inc
sbb
jno
mov
mov
outsb
int
mov
and
in
jg
xor
je
fldl
enter
out
sbbb
push
lret
in
push
out
sub
add
dec
pop
gs
fmuls
dec
mov
pop
xor
cmc
mov
in
xchg
js
gs
xor
sub
aas
adc
inc
mov
ror
das
jns
jmp
xchg
mov
adc
rclb
sbb
nop
bound
add
in
ds
sbb
adc
xchg
push
jns
pop
dec
add
aam
test
inc
in
or
mov
leave
addb
mov
cmp
stos
test
add
pop
pop
pop
imull
inc
pop
push
pop
inc
into
add
mov
dec
sar
cs
xor
sbb
cmovge
push
fcoms
sti
loop
fcomps
outsb
mov
xchg
cmp
clc
paddsb
or
or
in
int3
outsb
out
fists
xchg
mov
cmp
pop
xor
sub
iret
dec
mov
inc
push
enter
and
daa
fcomps
sub
mov
jge
add
dec
mov
out
mov
xor
push
mov
mov
arpl
bound
out
pop
dec
ja
test
xlat
mov
out
mov
aam
sub
daa
jb
sbb
sarl
bound
aad
data16
and
ffreep
data16
imul
ds
or
or
icebp
dec
enter
fwait
mov
cli
mov
xor
lods
mov
push
xor
in
lahf
jmp
faddl
insl
xor
push
insb
sub
push
jnp
out
and
push
dec
pop
inc
repz
adcb
inc
imul
aam
movsb
test
loope
mov
xchg
lret
jae
cwtl
sbb
mov
xchg
insb
mov
cmp
imull
adc
cli
mull
mov
xor
dec
push
out
data16
push
push
push
daa
push
mov
pop
rorb
sbb
fucomp
pop
inc
shll
xorl
fisubs
dec
ss
flds
call
mov
es
pop
lods
fs
jno
sbb
pop
shlb
inc
sub
clc
fldt
mov
jns
jbe
shl
fimuls
jmp
add
sub
loopne
jp
cmp
mov
dec
enter
dec
call
mov
scas
aam
cmp
xor
insl
sbb
mov
arpl
ret
popf
mov
icebp
pop
daa
adc
pop
dec
or
pop
xor
mov
lock
adc
adc
add
xchg
daa
mov
push
dec
mov
cmc
mov
sbb
rcll
in
lock
jne
add
in
adc
movl
stos
je
sti
pop
sbbb
add
ljmp
inc
hlt
jecxz
mov
mov
roll
int3
inc
rcrl
mov
sub
cld
jo
popa
lods
inc
xchg
adc
and
jno
adc
xor
sbb
pop
jbe
pop
enter
jmp
ret
in
push
pop
xor
sbb
sub
sti
push
add
add
imulb
ja
or
mov
lea
cmp
outsl
sbb
sar
jno
xor
sbb
mov
mov
push
jle
add
pop
inc
mov
loop
int3
adc
sbb
ss
aam
pinsrw
mov
push
int
imul
adc
jle
adc
nop
lock
popl
or
rclb
jmp
inc
jge
cwtl
mov
aam
jb
push
cmp
addb
push
out
dec
cmpsl
fcmovu
cmp
adc
sub
orl
into
out
pop
sbb
jmp
dec
in
sub
fwait
inc
pusha
and
aad
push
or
stos
add
repz
jnp
fldpi
and
popa
or
cmp
rolb
jnp
jo
dec
int
xlat
outsl
gs
push
xor
imul
frstor
loop
jg
jg
mov
insl
std
sbb
sti
cwtl
ja
test
sub
cmp
rclb
and
and
mov
mov
sbbl
cwtl
cmc
loopne
add
cli
stc
shll
mov
push
insl
cmp
cltd
or
stos
cld
dec
cmp
cmp
mov
dec
push
and
push
sahf
xlat
lds
fcompl
pop
pop
pop
js
je
mov
cmp
pop
cmp
adc
out
mov
fs
and
sub
sbb
mov
or
aaa
ret
pop
ficompl
out
loope
inc
repnz
mov
loope
inc
push
mov
das
xchg
pop
mov
xchg
xor
adc
mov
jae
out
cmpsb
push
jge
add
pop
lock
xchg
test
xor
sbb
sub
pop
or
fcmovbe
add
fistpl
mov
arpl
xor
rdpmc
sub
fcomip
jne
dec
es
inc
xchg
lds
daa
xchg
xorb
in
fwait
cmp
fdivrl
scas
cli
mov
and
xchg
movsb
pushf
and
dec
addr16
jae
icebp
sti
jecxz
and
stc
sub
and
push
les
pop
sbb
ja
es
fcoms
jle
mov
dec
ret
push
cmp
ret
lcall
pop
mov
sub
shll
ja
mov
int3
in
aam
dec
xor
fimull
mov
mov
mov
add
fcmovb
xchg
fistpll
ljmp
dec
pop
ret
jmp
test
push
rorb
je
pop
aad
int3
adc
stos
xchg
pop
rcll
fcomps
sbb
dec
dec
adc
leave
loope
jg
fsubr
roll
icebp
stos
popf
fcomps
inc
jb
add
rclb
jl
pop
xchg
iret
mov
out
lds
mov
test
aas
fistps
ret
adc
adc
iret
mov
pop
cs
xor
gs
push
pop
cmp
cmp
cmp
insl
add
mov
dec
mov
jecxz
jb
adc
cmpsl
add
aaa
mov
mov
ror
leave
push
pop
insb
push
jmp
pop
mov
cmp
andb
cltd
popa
aam
pop
mov
call
lahf
fcomi
or
repnz
pop
ds
out
add
add
test
sbb
mov
adc
or
dec
pushf
negl
xor
sub
xchg
mov
pop
sahf
cld
push
push
out
push
mov
inc
sbb
or
xor
mov
mov
mov
mov
std
and
jmp
or
mov
popl
dec
in
movzwl
add
scas
xchg
fistps
inc
adcb
rorl
mov
and
mov
int3
loopne
test
std
int3
lahf
and
adc
mov
mov
iret
xchg
dec
and
loopne
or
roll
popf
stos
std
xchg
or
lods
ja
fnsave
scas
je
pop
cmpsl
xchg
xor
push
outsb
in
mov
cmp
ja
sub
shlb
inc
mov
or
adc
mov
add
clc
mov
push
pusha
std
shrl
repz
xchg
hlt
xor
add
fnstenv
xor
xor
repnz
mov
xchg
xchg
popa
push
mov
loope
adc
cmp
cmp
fwait
test
mov
push
pop
dec
sub
and
mov
jns
mov
pop
enter
adcl
pop
scas
pop
sub
out
mov
cmp
stos
fcompl
ja
mov
out
out
outsl
sub
jns
jmp
stc
rcrb
and
loopne
dec
lret
lds
jb
sub
jg
movsb
mov
insl
stos
les
pop
mov
dec
lock
jge
mov
lds
add
jae
cmp
nop
ss
xchg
int3
cwtl
jne
push
stc
idivb
sbb
xchg
jo
daa
inc
xor
out
aas
and
or
callw
dec
adc
std
mov
mov
scas
shlb
mov
bound
jp
or
in
lcall
inc
lcall
mul
dec
sub
mov
inc
xor
adc
stc
xor
pop
sahf
fndisi(8087
clc
cmp
hlt
mov
adc
nop
je
rcrb
movsl
rcll
fimull
divb
cwtl
lea
jns,pn
mov
in
dec
ret
mov
movsl
mov
and
sbb
fadds
ret
sbb
push
dec
sub
pop
outsb
shl
push
inc
cmc
movsl
inc
cmp
pop
cvtps2pi
loopne
sbb
ss
jle
cmpsb
or
icebp
xchg
inc
add
shrb
sbb
push
mov
jl
push
in
sbb
inc
push
pop
fnstsw
test
jmp
cmp
lea
or
add
xchg
jne
cmp
mov
ss
push
push
dec
outsl
xor
out
hlt
push
arpl
mov
mov
pop
int3
xor
dec
inc
pusha
je
lcall
gs
jp
call
aas
jecxz
add
pushf
gs
movsl
int
scas
xchg
cmp
mov
mov
or
push
sub
jmp
xor
out
jmp
mov
andps
xor
fs
mov
rorl
inc
cmpsl
rorb
data16
ffree
sbb
rorb
push
gs
mov
lcall
sbb
mov
pusha
out
fwait
testl
adc
xchg
lock
shrl
cli
xchg
cmpsl
pusha
nopl
mov
jge
push
gs
and
mov
adc
test
cltd
js
or
sbb
adc
mov
imul
cmp
mov
and
mov
pop
dec
push
mov
mov
dec
data16
cmp
out
pop
and
dec
dec
push
adcl
int3
aas
and
push
mov
dec
cld
cld
loopne
jmp
jl
xor
test
repnz
mov
stos
sahf
aas
cld
xchg
imul
push
repnz
push
aaa
je
and
lret
push
test
or
cmp
movsl
or
std
mov
pop
cmp
filds
into
clc
movsb
inc
popf
in
hlt
sbb
xchg
imul
xlat
inc
mov
lret
or
cli
decl
in
lock
out
mov
push
js
sub
sbb
inc
push
cmp
xor
push
xchg
lahf
bound
sub
in
popa
andl
jmp
lahf
flds
out
or
fstl
cli
aad
scas
repz
in
mov
loop
xor
mov
mov
lods
outsb
adc
sbb
inc
dec
lods
out
das
sbb
push
lds
test
xchg
loope
pushf
adc
addr16
jo
xchg
imul
cmp
mov
mov
dec
sbb
and
int
push
call
mov
out
shlb
sbb
neg
fisubs
dec
enter
lock
mov
push
adc
pop
notb
mov
cmp
xor
or
cltd
cs
lea
sbb
push
idivl
jnp
imul
dec
data16
xchg
dec
movsb
movsb
xchg
sub
dec
imulb
push
pop
cmpb
out
xor
enter
std
fsubrs
pop
jb
clc
adc
jnp
std
fisubs
imul
in
aad
mov
test
mov
jns
jns
rep
add
je
mov
enter
xchg
mov
ror
inc
inc
mov
jl
ret
pop
in
pop
fcomps
enter
dec
jo
ds
sbb
repz
dec
sub
popa
roll
mov
rolb
or
jecxz
dec
jo
jns
mov
lods
adc
mov
stos
pop
or
jg
pop
nop
in
pop
packuswb
rolb
mov
das
outsl
inc
shll
push
fs
lods
sbb
lods
mov
pop
pop
test
nop
mov
xor
xlat
cmc
pushf
cmpb
inc
jmp
test
and
add
mov
cltd
xor
mov
fdiv
sbb
cmp
sbb
and
arpl
cmpsl
xchg
sub
add
jmp
aam
mov
pop
mov
sahf
xchg
test
fistpll
jmp
jp
jge
loopne
rcrl
xchg
cmpsb
jns
xlat
xchg
negb
jg
push
sub
or
and
or
inc
xor
and
movsb
xor
hlt
jno
clc
xchg
push
aad
roll
pop
lahf
rorl
cmp
sbb
scas
or
inc
sbb
jne
test
xchg
or
ret
lds
push
insb
xchg
adc
repnz
xor
cli
lret
add
outsb
adc
sub
fwait
stc
rcll
lret
sahf
sahf
ret
lahf
loopne
add
dec
xchg
mov
and
das
push
inc
in
subl
stos
dec
sbb
push
adc
mov
repz
and
mov
and
jecxz
add
pop
lds
cmpsb
add
sahf
xlat
call
pop
ss
loope
sub
fmull
inc
sub
jp
int
xor
jne
adc
pushf
jnp
jo
stos
jae
mov
jbe
fs
inc
bound
sbb
push
popa
fwait
and
test
mov
cmovne
in
cmp
sbb
push
adc
pushf
or
adc
test
jmp
mov
add
jecxz
stc
fbld
dec
xor
xchg
cmp
not
sbb
cmpsb
inc
cli
jge
ret
adc
negl
icebp
addb
sbb
inc
jo
inc
scas
lock
mov
andl
push
test
decb
negl
push
or
and
fstpl
loope
push
sub
xor
push
jl
out
in
test
mov
jbe
movsl
lahf
loope
test
dec
inc
inc
fistpll
test
pushf
loopne
fdivrl
in
mov
mov
mov
jno
jmp
adc
icebp
es
aam
pop
and
dec
cs
mov
jne
jecxz
imul
jecxz
cmp
lods
mov
sub
and
loopne
jp
insb
lret
jns
out
ror
and
out
fs
es
add
lea
cld
mov
scas
les
cmc
call
stc
sti
mov
sbb
xor
mov
cs
pop
mov
xchg
jl
cmpsl
sbb
or
mov
cmp
nop
popf
cs
test
dec
push
rcrb
int
pop
scas
popf
addb
ret
cmpb
push
cs
mov
jg
xor
push
movb
adc
fnstcw
out
aad
pop
mov
lret
fstpl
push
inc
mov
call
mov
addr16
jge
aas
mov
loopne
into
adc
push
add
mov
scas
sbb
fsubrs
call
fsts
mov
lret
sarb
add
aam
jne
xchg
cmp
cli
test
or
movsl
jle
int3
pop
ss
mov
mov
mov
pop
inc
mov
jp
movsl
push
adc
mov
lret
notl
imulb
cmp
out
jae
ret
das
mov
cmp
aam
sub
aam
push
add
pusha
mov
pop
or
ret
lahf
mov
pop
push
inc
lret
ficomps
int
dec
cmp
xlat
scas
std
sbb
pushf
or
pop
std
xor
add
pmulhuw
aas
test
inc
outsl
fildl
push
fcomps
cmp
fisttpll
cmpsb
cmp
fstpl
xchg
out
idivb
les
lods
inc
out
inc
clc
add
test
movsl
mov
ds
xchg
adc
loop
in
es
mov
sub
comiss
insb
xchg
jp
cmp
scas
scas
mov
sahf
ret
decl
mov
incb
fdivs
test
out
dec
pop
xchg
mov
inc
sbb
mov
shr
push
fldt
xchg
push
out
jae
lods
cmpsb
jge
adc
flds
xchg
lods
icebp
mull
add
jg
pop
push
and
out
popa
loope
add
push
dec
cmp
xor
push
and
adc
incb
iret
int
push
jbe
out
add
mov
rcll
push
insb
ds
fcoml
adc
cmp
xchg
js
jne
adc
testl
lock
push
sbb
add
pop
into
xor
add
rcrb
in
xchg
scas
sbb
mov
test
out
mov
sub
addb
xchg
arpl
in
xor
cwtl
inc
mov
mov
xchg
xchg
lahf
jb
pop
mov
xchg
push
mov
ss
or
cmp
movsb
in
mov
test
sub
push
insb
imul
mov
inc
cmpsl
add
je
out
sbb
xor
test
xchg
inc
mov
js
cmpsl
inc
sbb
jae
sbb
daa
movsb
pop
xor
aas
mov
jmp
sbb
add
cmpb
call
leave
push
sti
sbb
cmp
aas
inc
dec
imul
in
outsb
mov
lret
xlat
inc
sbbl
test
jl
sub
push
repz
xchg
xchg
addb
sbb
pop
dec
mov
rcr
sarb
pop
scas
adc
testb
mov
out
adc
mov
sub
repnz
pop
out
adc
lock
xor
enter
bound
mov
sbb
insb
scas
imul
mov
or
cmpsl
mov
stc
sub
sbb
inc
and
pop
xor
ljmp
xchg
inc
xchg
lret
pusha
mov
or
cmp
push
push
push
insb
js
sahf
jmp
test
add
adc
lcall
das
push
ret
cli
leave
pop
flds
mov
mov
sbb
lret
test
sub
add
cltd
sbb
adc
pop
inc
mov
push
fs
out
mov
inc
pushf
dec
xor
imul
adc
lds
mov
pusha
jne
movsb
mov
pop
ret
mov
jmp
ret
lret
sub
sti
dec
cmc
cmp
and
xor
lret
sahf
xchg
pop
jg
jno
dec
pop
mov
pushf
repnz
mov
pop
adc
push
sar
insb
out
mov
pop
lcall
mov
bound
out
push
pushf
cltd
out
out
lahf
jge
fldt
xchg
mov
loope
add
dec
cld
cmp
jb
xor
sbb
push
adc
call
addr16
test
aas
aam
retw
ret
insb
adc
clc
leave
repnz
and
outsl
lock
jg
cmc
mov
cmp
stc
mov
add
xchg
cli
pop
xchg
jo
jno
in
mov
nop
loop
sbb
clc
inc
jne
pop
add
inc
jmp
dec
test
or
cwtl
in
pop
xchg
sbb
add
fstpt
lcall
mov
cmp
or
xor
mov
jno
cltd
dec
addr16
inc
xor
xlat
dec
inc
arpl
and
inc
sbb
lods
ds
add
pusha
lea
scas
or
dec
lds
pop
push
leave
inc
push
jl
mov
fbld
rcrl
mov
mov
jge
mov
or
and
mov
loopne
call
dec
imul
sbb
inc
fiadds
nop
mov
daa
bound
test
mov
cmpsb
or
pop
cmp
fldt
movsl
fidivrs
fsubrl
xchg
ja
cld
xor
pop
lods
lea
into
and
fwait
push
or
push
sub
dec
push
mov
ret
or
lea
popf
fwait
pushf
inc
adc
xor
jns
sbb
nop
dec
std
ficoms
push
mov
jbe
repnz
ds
loopne
loop
mov
or
xchg
test
adc
test
cld
fdivrl
rcr
in
fcomi
push
jnp
test
dec
hlt
xor
je
fwait
adc
addb
push
jb
mov
call
mov
fs
dec
add
sbb
imul
cld
imul
rclb
inc
out
imul
lods
jo
xlat
js
ret
sti
cli
ds
js,pt
mov
ret
push
xchg
push
sbb
lret
adc
and
lret
or
pop
and
loope
divb
mov
mov
ds
addr16
repz
and
in
nop
jne
dec
sub
fdivl
jno
xchg
xor
xchg
jmp
adc
adc
pop
mov
aaa
pop
mov
ja
aam
out
scas
aaa
test
jb
cld
jp
push
stos
mov
push
adc
andb
scas
loopne
xchg
adc
repnz
jmp
xor
loopne
sbb
pop
les
or
xor
mov
xor
lret
xor
dec
aas
and
mov
rcrl
add
in
push
mov
mov
and
jmp
push
mov
sti
jp
pop
push
dec
or
dec
nop
sti
xchg
xchg
addb
movsb
xor
pop
movsl
sbbb
nop
lock
icebp
mov
call
add
shrb
adc
aad
or
xor
not
mov
test
sbb
ja
xor
mov
lahf
and
pop
sub
inc
inc
in
push
roll
cmp
stos
fdivs
int3
inc
pop
and
jne
or
scas
incl
mov
aaa
mov
mov
jmp
into
iret
outsl
xor
and
sub
jg
lock
mov
icebp
jb
jle
stc
fstps
push
es
xor
or
in
out
loope
cmc
sub
rcr
decb
filds
mov
xchg
fdivrs
arpl
jae
push
sti
add
lea
mov
stc
mov
push
and
arpl
outsw
mov
cmp
lcall
pop
outsb
arpl
push
xor
cmp
jmp
mov
dec
xchg
mov
pushf
pop
aad
push
leave
jecxz
dec
push
es
xor
jmp
sbb
push
mov
cmp
aam
and
out
in
mov
mov
push
iret
mov
mov
in
inc
or
cmp
xor
push
pusha
in
xor
or
shl
ja
insl
sbb
imul
outsl
flds
inc
subb
inc
push
lret
iret
inc
cld
dec
cwtl
or
mov
pop
pop
xor
and
imul
popa
movsb
je
aad
mov
dec
dec
bound
rcll
ds
jge
in
add
add
sub
ja
lds
pushf
adc
fcmove
out
push
xor
push
in
imul
sbb
call
rclb
dec
stc
fstpt
pop
lahf
stos
repz
mov
jle
pop
mov
add
pop
jae
add
fwait
jae
into
popf
pushl
or
and
mov
iret
fcmovnu
cld
inc
icebp
inc
rolb
inc
xchg
rorb
push
sbb
jle
fwait
hlt
adc
and
sbb
sbb
cmc
ja
ret
add
shrl
fcmovne
loope
mov
ss
jl
add
adc
lds
pop
loopne
mov
jl
inc
cmp
out
or
push
in
inc
ss
mov
push
xchg
add
cld
sahf
mov
inc
orl
outsb
fmul
xor
mov
xchg
add
or
xor
mov
inc
hlt
scas
push
xor
aas
cmp
lds
or
xchg
pop
jp
std
into
sbb
in
pop
jle
addl
leave
sbb
mov
or
or
ss
rorb
mov
ljmp
mov
lock
add
cmpsl
sbb
enter
mov
dec
adc
dec
jmp
out
out
stc
pusha
lea
mov
ret
arpl
shr
and
imulb
pop
in
sub
xchg
sbb
mov
hlt
dec
orl
adc
mov
dec
xor
pop
fdivrs
mov
cmp
scas
lods
das
dec
pop
xchg
outsb
mov
dec
jns
lods
push
push
mov
or
sbb
cmp
outsb
mov
cmp
das
jno
dec
xchg
push
or
fadds
movl
jbe
das
aad
in
push
inc
dec
or
cmpsb
jne
mov
movsl
outsb
cs
pop
mov
lods
repnz
pop
mov
scas
mov
ljmp
lds
frstor
push
cld
push
or
test
dec
jb
xlat
lods
mov
inc
mov
daa
dec
push
orl
push
jne
sub
insl
outsl
lret
int
mov
mov
test
push
xor
jp
insl
pop
ja
pop
in
stos
pop
hlt
pop
xchg
push
arpl
lock
mov
rclb
xchg
loope
cmpb
pushf
push
xchg
add
xchg
push
inc
xlat
test
test
mov
cld
in
add
xor
push
ljmp
fs
jnp
xchg
imul
cmp
adc
jnp
ss
inc
int
sub
shl
lret
fldt
pop
rorb
sub
add
enter
imul
cltd
pop
jbe
and
sub
cltd
xor
xor
pmovmskb
push
pop
inc
dec
and
popa
pop
push
mov
or
push
ss
ss
dec
push
lret
xchg
cmp
repz
push
out
popa
or
ljmp
mov
jb
in
das
mov
lret
sub
les
shlb
addr16
ds
lret
fdivrs
dec
aad
pop
rclb
add
das
ja
lcall
test
inc
dec
xchg
cli
inc
pop
andl
xor
repz
shlb
out
ja
push
push
mov
mov
hlt
imul
orl
mov
mov
xor
fdivr
std
pop
mov
iret
dec
jbe
or
or
test
xor
lret
gs
es
imul
inc
mov
lea
lcall
ljmp
xchg
push
cmp
ss
test
jecxz
dec
jge
inc
or
hlt
push
pop
xchg
fsub
xchg
xor
cltd
jp
addl
call
or
into
loope
aaa
insl
jecxz
sti
cmc
mov
mov
dec
popf
or
orl
lock
pop
mov
sbb
fs
test
sbb
aam
sbb
cmpsb
out
lahf
adcb
push
push
and
test
jecxz
jl
movsl
das
add
and
fwait
xor
lods
int
cltd
cwtl
adc
dec
dec
dec
xchg
cwtl
mov
mov
stos
sbb
iret
mov
push
xchg
into
dec
mov
xor
push
cmpsl
mov
aad
mov
pop
shll
or
jns
and
std
call
sub
jb
jae
xor
pop
jl
sbb
fcoml
pop
lret
rorb
mov
add
mov
imul
mov
imul
lods
sti
sub
sahf
add
jl
add
xchg
outsb
add
or
sbb
xor
aad
cmp
les
sahf
cs
mov
outsl
jnp
lock
pop
repnz
sti
loop
xchg
cmp
jg
shlb
and
stos
add
cwtl
pop
jl
mov
imul
fwait
xchg
lods
aam
jns
gs
push
movsb
fdivs
mov
fstps
outsb
shrb
inc
xchg
out
xchg
test
dec
xchg
loope
inc
pop
inc
aad
into
cmpsb
dec
dec
inc
and
js
pop
or
mov
into
call
xchg
mov
push
mov
inc
xchg
cwtl
jo
or
mov
fisubs
sbb
jle
cmp
jge
cmp
push
mov
cmp
cmovnp
dec
push
notb
push
mov
cmp
mov
fs
sub
nop
repnz
cmp
push
ss
aad
mov
sbb
sbb
ror
pusha
or
inc
xchg
lods
jo
sahf
pop
xor
int3
push
jg
cmp
add
lds
enter
shrb
xchg
xchg
xchg
jnp
sub
out
xor
xchg
cld
clc
stc
pusha
add
mov
aad
pop
scas
xchg
in
insl
pusha
ret
icebp
jecxz
pop
xchg
mov
loopne
ja
addr16
out
mov
js
repnz
sub
pop
dec
sub
stos
jb
push
jbe
xchg
cmpsl
out
les
arpl
dec
push
loopne
push
outsl
or
xchg
test
push
mov
sbb
jg
fidivs
mov
push
jle
fsubs
and
in
jp
jnp
jge
cmp
push
sbb
aaa
pop
insb
mov
cmpsl
pop
loop
add
into
sbb
sub
xchg
cli
xlat
shl
divb
jae
jle
sub
sbb
int
sub
insl
cmpl
or
data16
out
mov
data16
mov
fldt
xor
les
cmp
mov
dec
fucomp
insl
mov
test
enter
cltd
and
sbb
cmpb
inc
jge
cmp
shlb
xchg
inc
jns
xor
pop
pop
leave
jns
mov
cld
sbb
fwait
jmp
test
push
fwait
sbb
out
jle
js
ljmp
mov
loop
sub
push
push
cld
push
add
out
into
or
fidivl
pop
sub
stc
sub
cwtl
jns
pusha
mov
mov
add
ss
or
insl
lret
xlat
mov
icebp
test
idiv
cli
cmp
stc
loopne
inc
ret
xchg
ss
pop
add
jns
lods
mov
mov
sti
fidivl
scas
out
prefetchwt1
xlat
sbb
push
loope
test
pop
xchg
loop
mov
fdivrs
jo
sbb
test
mov
adc
pop
aas
pop
test
push
jmp
icebp
ret
js
mov
push
xor
mov
stc
adc
xchg
in
ljmp
jmp
add
or
cmc
mov
add
inc
adc
push
lcall
dec
and
xor
xchg
or
jecxz
arpl
sbb
inc
rcrb
outsb
mov
add
mov
addr16
out
inc
addr16
ret
push
out
xchg
sub
push
loop
inc
cmpsl
seta
pop
sbbl
js
in
adc
lret
add
cli
push
sbb
scas
aaa
inc
test
pusha
or
xor
adc
imul
inc
fistpll
leave
xor
fcom
cmp
cmpsl
jmp
jns
fdivl
je
sub
jle
xchg
loopne
cmc
xor
mull
mov
push
ret
adc
aaa
das
add
das
loopne
arpl
sub
dec
repz
imul
inc
pusha
shr
xor
fwait
mov
xchg
push
push
test
nopl
cs
mov
lret
pop
jo
std
pop
ror
inc
mov
sbb
mov
loopne
int
loopne
mov
jl
into
aam
mov
inc
insl
cld
aas
adcl
mov
cmp
int
mov
jno
fwait
lahf
sub
test
push
test
cmpsb
cli
jmp
pushf
add
fs
inc
and
sbb
out
ror
sbb
inc
aas
sub
lcall
dec
sbb
movl
ds
icebp
test
jp
jnp
jno
inc
pusha
out
jle
fsubrl
mulb
cmc
test
mov
mov
xor
or
jl
add
mov
xor
push
in
mov
adcb
mov
mov
mov
fistpll
ret
push
push
loopne
pop
mov
ljmp
adc
pusha
jne
and
xlat
push
jbe
pop
or
inc
xchg
adc
sbb
pop
jnp
inc
mov
bound
jns
shr
jl
mov
ret
xchg
cli
jae
les
lret
mov
mov
xor
add
xor
xchg
push
push
repnz
icebp
dec
push
dec
into
cmp
je
mov
pop
dec
lods
shl
sahf
ficoms
jl
sarw
rolb
clc
pop
insl
fildll
and
pop
lahf
xlat
xlat
sub
test
dec
bound
int3
cmp
cmp
push
adc
sub
test
je
lret
inc
lock
sbb
movb
mov
enter
stos
push
negb
cvtps2pi
repz
xor
test
mov
aas
movsb
push
xor
push
in
sub
jno
mov
cmp
out
sub
mov
inc
cmp
icebp
loop
mov
out
mov
inc
mov
test
ror
lret
mov
add
sbb
xchg
shll
pop
mov
inc
cli
or
mov
cld
mov
xchg
mov
into
xchg
pop
sbb
stc
pop
stos
je
add
and
jo
jmp
fwait
xchg
sti
jg
rcrl
xchg
test
dec
shll
push
xlat
insl
sbb
mov
xor
mov
push
push
fdivrl
pop
fsub
push
shrd
out
loopne
mov
fcomps
pushf
dec
jno
jb
sbb
push
mov
ja
dec
cmp
sub
pop
sbb
sbb
out
pop
cwtl
add
lods
addr16
mov
movsb
sbb
mov
sub
mov
jg
pop
lcall
jg,pn
mov
or
inc
dec
int3
adc
push
mov
pop
inc
sub
cmp
lods
cmp
pop
out
jns
mov
in
jg
xchg
gs
mov
sub
cmp
je
xchg
dec
mov
cld
nop
and
add
xorl
repz
mov
adc
pop
mov
pop
lahf
cmp
int3
add
lret
ljmp
mov
mov
insl
mov
mov
into
add
scas
sbb
cmp
cmpsl
mov
cmp
inc
shr
add
pop
icebp
sub
rcl
xchg
test
out
dec
ret
add
rorb
out
add
arpl
jns
push
dec
stc
repz
sti
mov
cs
icebp
and
sbb
insb
test
and
mov
fdivrs
push
pop
adc
call
fs
aas
cmp
push
cmp
xchg
lea
test
push
test
scas
cmp
cs
fwait
jmp
push
loope
xor
stos
mov
xor
pop
add
sarb
inc
clc
jmp
outsl
sti
mov
std
mov
xor
push
push
sbb
movsb
test
int3
jl
push
dec
dec
xor
and
mov
inc
mov
test
add
fcoms
jnp
mov
dec
adc
ja
imulb
sub
ficoml
pop
addr16
sub
shl
mov
ficoml
and
adc
push
jno
js
stos
test
dec
out
sti
xchg
in
scas
pop
sub
or
jle
sub
loope
mov
xchg
push
and
incb
imul
mov
jns
pop
sub
xchg
jg
stos
jae
inc
jp
mov
mov
movsb
jmp
movq
cld
xchg
add
insb
lock
insb
lods
push
shl
nop
add
addr16
pop
sub
rorb
cwtl
adc
lds
out
mov
mov
mov
push
out
inc
and
je
pop
jns
clc
test
inc
loop
das
inc
das
in
mov
pop
dec
lahf
mov
push
test
dec
pop
stos
push
lcall
jl
cmp
or
xchg
outsl
in
xor
push
xchg
push
cmc
push
mov
mov
loop
mov
ss
test
int
test
adc
pop
xor
ss
dec
fisttps
sub
imul
inc
and
dec
call
loopne
pop
cmpsl
test
mov
jecxz
sarb
or
push
mov
adc
dec
lret
jbe
stos
push
push
ret
xlat
out
das
pop
mov
icebp
pop
xchg
cmp
out
test
sbb
sbb
std
push
push
imul
mov
outsb
and
inc
idivl
xor
jl
sub
jl
mov
in
pop
dec
rcll
lods
fnstenv
xchg
or
sub
or
mov
rorb
jp
shrb
dec
adc
test
xchg
ljmp
stc
outsb
imul
mov
popa
out
mov
inc
adc
dec
daa
xchg
sti
inc
sbb
out
mov
cmc
dec
fsubs
out
ret
test
call
mov
lods
jge
sbb
adc
sub
out
xor
sti
in
movl
mov
andb
cld
add
sbb
outsb
data16
dec
imul
pusha
les
popa
std
add
aas
mov
mov
aam
push
inc
pop
stc
and
das
clc
cli
int
es
push
xor
and
in
iret
xchg
or
es
adc
sub
jp
jno
sti
outsb
mov
sub
cs
mov
into
or
xor
push
andl
fs
js
imul
mov
cmp
xchg
adc
js
lods
jge
jl
aam
mov
jb
mov
sbb
call
jnp
dec
push
jae
insb
adc
movsl
add
adc
stc
or
sbb
cwtl
xadd
sbb
adc
gs
add
and
pushf
iret
pop
add
mov
push
clc
into
sahf
or
loopne
stos
cli
mov
pop
sub
push
ds
add
mov
out
cmp
popf
mov
les
sub
scas
or
shlb
fnstsw
iret
pop
or
icebp
out
ds
js
adc
lods
test
sbb
push
fwait
pop
incb
or
cmp
push
or
sbb
into
sbb
clc
lcall
hlt
lods
push
aam
fs
xlat
iret
movsb
add
rorb
mov
dec
in
enter
iret
imulb
mov
scas
push
push
cmpl
pop
sub
movsl
rcrb
lcall
mov
push
aaa
jg
orl
test
add
fisubl
sub
enter
push
lds
negb
scas
adc
cwtl
inc
push
arpl
mov
add
dec
sub
sbb
xor
rclb
cli
mov
aad
mov
pop
mov
cli
scas
insb
mov
xchg
rcll
mov
cmp
pop
sbb
xchg
in
and
frstor
cld
outsl
pop
fs
adc
and
mov
pop
mov
sbbl
jo
xor
mov
cmp
mov
mov
cmp
sbb
dec
mov
add
flds
push
movsb
shll
mov
lds
gs
jne
cmp
cltd
sub
fdivr
pop
push
xlat
ljmp
jae
mov
jp
inc
scas
movsb
out
sub
xchg
mov
cmc
jns
movsb
or
aas
mov
add
fadds
xchg
jo
icebp
ds
sub
loope
in
xchg
clc
lock
jmp
jle
fistpl
rcll
fistl
in
and
lcall
xchg
inc
in
loopne
cli
xchg
lock
cmp
pop
sub
cs
mov
mov
lahf
xchg
stos
pop
ljmp
popa
sar
insb
mov
imul
or
jb
stos
inc
lahf
test
xchg
mov
imul
xchg
sub
pop
sahf
ret
mov
dec
jmp
push
stos
jp
insl
mov
imul
push
fwait
jns
repz
mov
xchg
mov
mov
cs
pop
cld
push
ja
mov
outsl
daa
or
imul
sbb
mov
ror
xchg
cwtl
sub
and
aad
jle
ss
xchg
call
mov
mov
les
aas
xor
dec
pop
es
sti
push
xchg
jo
ss
mov
lcall
stos
cmpsb
pop
cmp
scas
adc
mov
jno
loop
push
bound
lret
xchg
and
xor
xchg
das
negl
and
or
push
loope
fisubrs
mov
int
scas
pop
scas
jmp
sub
mov
std
and
cmp
adc
cmp
jmp
das
push
xchg
lea
jg
dec
pop
push
scas
cmp
fsts
sbb
ret
adc
add
out
mov
dec
fistpll
jbe
xchg
push
outsb
rorl
call
std
cld
sbb
cli
xor
inc
popf
xchg
pusha
icebp
push
add
out
xchg
mov
push
fildll
push
xchg
fimull
dec
testb
imul
inc
aas
int
xor
cwtl
sub
out
jb
inc
or
dec
bound
pop
sysret
in
cmp
and
add
imul
sub
dec
sbb
sbb
les
sub
je
mov
sbb
jecxz
adc
fs
in
push
or
mov
bound
shll
std
mov
pop
and
cli
mov
sahf
rorl
and
test
mov
and
cld
pop
dec
fidivrs
repz
push
xor
or
gs
into
in
addr16
lret
push
fldt
pop
sbb
mov
pop
ds
dec
movsl
fs
aas
mov
call
aaa
sarb
movsl
adc
mov
rorl
jnp
dec
and
adc
inc
push
dec
adc
dec
jl
xor
xchg
sub
inc
push
sti
jmp
cmpsb
add
mov
cmpsb
dec
cmp
loopne
mov
xor
and
inc
add
add
jnp
and
hlt
jae
adc
outsb
fmul
inc
xorl
fisttps
pop
mov
pop
mov
add
xlat
pop
cld
divl
sub
mov
in
xor
leave
test
jno
mov
stc
stos
sub
mov
add
jg
stos
xor
jne
xchg
xor
aaa
add
fcomip
mov
sbb
ficomps
mov
cmc
dec
xchg
mov
xor
adc
pop
xchg
ljmp
out
popa
out
pushf
jno
adc
adc
pop
mov
outsl
inc
adc
mov
jg
jae
dec
or
pop
and
lods
sub
inc
divl
movsl
mov
mov
pop
push
sub
nop
push
jne
xchg
xchg
jb
sub
test
adc
mov
xor
push
pop
fwait
dec
movsb
icebp
cs
into
jle
mov
outsl
cs
cwtl
movsl
mov
insl
pop
ja
mov
add
pop
push
sahf
dec
jl
dec
sub
mov
dec
push
xor
out
cwtl
mov
cmp
push
rolb
inc
mov
mov
rclb
and
jns
iret
add
mov
mov
popa
pop
in
lcall
fdivrs
mov
fs
dec
sub
out
mov
mov
jle
ret
or
or
or
add
push
jp
xchg
fdivrs
push
xlat
mov
ljmp
call
rclb
jg
xor
pop
movsb
nop
mov
mov
enter
xor
xchg
jecxz,pt
push
and
push
push
inc
push
adc
pop
jecxz
pop
or
jnp
sbb
test
shlb
loop
and
mov
jmp
dec
cmp
jle
cltd
in
cld
ret
jns
xacquire
mov
xor
push
mov
test
inc
add
sub
inc
xchg
cmp
fisubs
xor
jo
loope
or
lret
scas
mov
adc
xor
hlt
mov
adc
fs
aaa
pop
dec
out
jle
xchg
push
jnp
mov
adc
int3
add
enter
outsb
jge
lret
mov
pusha
out
xor
push
sbb
lea
or
push
cli
lock
xchg
sbb
lcall
ffree
and
jne
jne
xlat
cmp
sbb
push
jg
jmp
adc
dec
mov
mov
and
dec
popf
jecxz
js
lcall
xchg
lret
shlb
fisttpl
add
inc
adc
addr16
scas
pop
jne
insl
pop
mov
fstl
aam
mov
push
add
shlb
push
xchg
orl
imul
loope
or
add
aad
pop
mov
push
mov
mov
cli
sbb
mov
adc
cltd
in
jb
pusha
jl
push
sti
pop
mov
sbb
add
mov
push
test
sub
push
lret
fldt
outsb
shll
pop
es
adc
sub
xchg
loopne
cwtl
and
dec
enter
aam
add
xchg
inc
jp
mov
mov
aas
cmp
push
and
mov
shlb
mov
mov
or
cwtl
add
lcall
sub
pop
adc
imul
out
jp
inc
lock
lahf
sbb
mov
andl
shl
out
jne
out
xlat
out
jl
into
stc
jo
jmp
jb
push
repz
decl
dec
jge
xchg
gs
sub
fcmovnbe
subl
pop
gs
es
adcb
xchg
aas
shr
or
leave
dec
dec
ja
ss
lahf
pop
popf
xchg
or
or
pushf
adc
aam
xchg
jmp
xor
inc
cmpsl
shll
mov
sub
push
leave
dec
mov
pop
cli
call
jbe
ja
fs
mov
clc
test
jle
adc
iret
mov
mov
mov
xor
dec
xchg
jne
test
xchg
rcrb
pop
mov
lods
lcall
fisttpll
inc
xchg
nop
sbb
jp
out
arpl
jmp
add
mov
in
and
mov
push
leave
sub
and
fidivs
fidivrs
and
mov
or
clc
mov
lods
loope
rorb
mov
inc
pushf
bound
lods
in
mov
mov
mov
rorb
outsb
jl
sub
pop
mov
dec
mov
push
int3
jo
cld
loop
scas
mov
push
mov
into
fnstsw
mov
jns
cmp
xchg
sub
addr16
jge
or
ljmp
adc
aas
xlat
or
or
rclb
mov
rclb
std
xor
mov
incl
lret
stos
pop
imul
mov
xor
xchg
bound
data16
mov
mov
cs
push
jns
dec
das
inc
cmp
jnp
add
adc
sarb
flds
adc
or
sub
aas
daa
lock
mov
pop
and
adc
mov
mov
push
mov
cs
adc
leave
cmp
sub
xchg
test
lret
dec
push
movsb
cs
sahf
loope
inc
loopne
mov
lods
pop
adcb
xchg
jnp
sbb
outsb
ljmp
cmp
add
jecxz
jbe
pop
shll
mov
jp
cmc
js
pop
xchg
add
jne
jno
out
jns
lods
ret
hlt
rolb
add
stc
mov
imul
aad
sti
imul
in
in
mov
rcl
mov
aam
sbb
xor
aas
fldcw
fidivs
stos
orl
lret
lea
loopne
lahf
lahf
dec
inc
adc
xor
or
jnp
jp
int3
sbb
in
std
bound
clc
test
mov
aaa
dec
int3
sub
shll
sbb
lock
xor
xchg
ss
pop
cmp
sbb
push
pop
call
mov
lock
inc
sti
mov
or
pop
or
mov
mov
push
cmp
lods
fs
pop
in
jle
or
xchg
jecxz
mov
movsl
and
push
mov
or
pop
icebp
jne
in
popf
test
mov
movsb
enter
sarb
push
or
or
mov
xor
shrb
pop
mov
gs
stos
add
dec
repz
inc
dec
arpl
repnz
test
inc
mov
cmp
movsb
sbb
dec
cmp
cli
roll
sub
xchg
arpl
mov
adc
inc
jo
dec
add
call
aas
push
add
call
shrb
iret
test
cmc
daa
test
dec
dec
repnz
divl
out
adc
popf
add
add
scas
add
mov
cmp
ds
pop
adc
adc
leave
sub
jmp
iret
fistl
orb
sbb
filds
loop
add
jno
or
sbb
mov
cmp
pusha
popf
addr16
imul
popa
dec
idivb
lock
xor
rcll
lods
jns
adc
movsb
jbe
es
mov
test
add
imul
mov
roll
arpl
xchg
mov
mov
mov
mov
pusha
dec
jbe
sub
add
cmp
cmp
loop
fwait
or
inc
mov
xor
mov
adc
inc
popa
lea
stos
je
sub
cltd
lret
movsb
push
and
or
rcll
cltd
pusha
fmull
cmp
inc
lea
nop
mov
fs
mov
xor
adc
subl
inc
fidivs
mov
je
fmulp
sub
es
and
test
repnz
add
jb
shlb
jmp
dec
lods
adc
inc
lds
dec
xor
pop
mov
mov
mov
jecxz
adc
ret
aam
bound
stos
xchg
jbe
fsubrl
inc
dec
inc
cmpsb
sbb
mov
repnz
dec
jl
cmp
mov
inc
popf
cmp
loopne
ret
jp
sbb
xchg
inc
add
mov
adcl
lds
mov
adc
dec
mov
addr16
imul
jno
in
clc
mov
repz
bound
jmp
jo
lcall
fisttps
push
mov
sti
mov
inc
xor
popa
arpl
iret
outsl
int3
andb
xchg
xchg
xchg
arpl
jl
inc
rcrb
mov
sbb
mov
lea
outsb
or
mov
les
cwtl
push
xchg
xlat
andb
cmp
fwait
rolb
enter
int3
pop
mov
mov
cmp
ljmp
jo
lock
aad
jle
mov
test
jle
jecxz
sub
mov
sbb
dec
mov
mov
insl
pop
mov
jno
jg
push
sbb
fsts
xor
mov
es
jno
imul
jge
loop
insl
dec
jns
inc
or
popl
push
jb
add
out
ret
sub
clc
and
cmpsb
and
sbb
and
or
xor
flds
insl
mov
ljmp
mov
rclb
mov
or
push
mov
pop
ret
sbb
push
push
adc
scas
dec
sub
pop
jno
and
cmpsb
arpl
jo
lea
pusha
rorb
adc
cmc
nop
mov
inc
cmpb
out
rorb
and
dec
xchg
pop
push
cmc
fidivl
loop
sub
push
inc
int
dec
loope
push
add
lock
imul
adc
jb
push
cmp
lret
mov
ror
lds
pop
das
push
xorb
fsubrs
jae
push
incl
test
cwtl
outsl
xchg
jge
pushl
xor
in
xor
out
pop
fnstsw
push
push
jmp
xchg
pop
sbb
sub
ds
mov
ja
cs
dec
add
rcl
clc
addl
sbb
jb
sbb
or
jmp
or
xor
icebp
cwtl
jno
ja
scas
lahf
cmpsl
lcall
cltd
pop
lret
insl
cmp
mov
cld
cmp
outsl
fidivrs
fidivrl
hlt
adc
addb
dec
xchg
push
or
adc
xor
je
in
outsb
cmp
pop
in
mov
lds
sbb
lods
fidivrs
pop
sbb
inc
lods
adc
xchg
mov
push
cmp
adc
cld
xchg
mov
inc
scas
sbb
jp
mov
call
dec
dec
add
loopne
insl
jnp
jecxz
clc
mov
jp
cmp
mov
xor
into
aas
xchg
add
loope
lret
mov
fists
lods
mov
xchg
ja
int
nop
dec
push
lods
lock
dec
xchg
mov
push
mov
out
dec
or
js
cmp
lcall
fldz
push
jecxz
or
lods
push
testb
pop
bound
and
dec
push
stc
xchg
sti
xchg
add
cli
dec
or
xchg
iret
sub
mov
jnp
into
pushw
push
shlb
cmp
mov
push
xchg
xchg
data16
faddl
add
sub
jl
es
mov
aam
stc
xor
movswl
test
fisubs
cmp
pop
in
fstpl
fdivl
stos
and
dec
push
sbb
sub
mov
mov
pop
inc
dec
push
imul
stc
xlat
aas
dec
inc
rcll
mov
dec
and
clc
test
ja
scas
pop
cwtl
add
sub
pop
scas
out
cli
popf
push
pusha
int
loopne
fisttps
xchg
in
je
inc
cmp
outsb
sahf
jmp
leave
sahf
rcr
fbstp
xlat
xchg
cmp
mov
fs
and
or
push
pop
fsubs
adc
stos
push
dec
int
popf
std
and
gs
adc
int3
mov
lods
mov
jecxz
add
dec
repnz
stos
cltd
out
xchg
xor
pop
loop
repz
sarl
test
xor
push
sub
rorb
cmpsl
fwait
jo
pop
les
sahf
add
mov
clc
push
pop
scas
sbb
jecxz
lods
ret
pop
cmpsb
insb
enter
mov
popf
fiaddl
or
inc
aad
mov
push
xchg
jl
jbe
out
pop
cmp
pop
out
lcall
inc
int
pop
and
or
mov
cwtl
mov
mov
xchg
dec
sbb
mov
and
es
fmull
pop
push
xchg
das
mov
lods
shll
test
mov
xchg
jg
xlat
pop
es
sbb
aas
cmc
test
jp,pt
jae
or
xor
xor
lock
cmpl
out
movsl
lds
lcall
pushf
mov
sahf
cli
xor
add
popf
dec
je
xchg
push
dec
pop
fadds
push
dec
repz
addb
out
cld
xchg
jae
jmp
push
mov
pop
xchg
mov
test
repnz
inc
pop
leave
loop
mov
mov
dec
mov
pop
cs
lahf
nop
pop
add
iret
sti
lock
jae
xchg
push
xchg
sub
jmp
add
mov
xchg
hlt
adc
je
fbld
sbb
aam
dec
mov
xchg
insb
xchg
jp
xor
mov
jmp
in
dec
bound
jl
fdivs
rorl
pop
repz
sub
jne,pn
ret
sbb
arpl
or
dec
sub
and
mov
mov
xor
or
push
xor
das
clc
sarb
mov
inc
push
fistl
scas
jmp
add
sbb
push
jp
push
gs
add
sbb
roll
out
sub
dec
push
push
and
adcb
in
mov
inc
add
inc
test
add
fcoml
xor
mov
inc
xchg
mov
ja
adc
aad
inc
out
inc
subb
add
inc
jae
pop
aam
int
mov
call
out
dec
pop
xor
jg
dec
testb
push
lods
lock
scas
test
push
mov
sbb
xchg
fldcw
cmp
cli
fistpl
leave
subb
jb
dec
pop
rcr
outsl
jmp
push
repz
xchg
jle
adc
mov
sbb
dec
jecxz
jnp
mov
mov
or
pop
add
mov
mov
cmp
ss
fisttpll
insl
mov
jecxz
lcall
push
enter
add
pop
das
xchg
cltd
leave
insb
mov
stos
sbb
jge
pop
lock
scas
aaa
push
out
jp
icebp
sub
lods
and
cld
rol
inc
xor
xchg
mov
fldt
cmp
imul
cmp
cmp
sbb
aas
and
or
insl
mov
imulb
pop
stos
push
mov
jb
nop
push
clc
out
add
jae
jns
sbb
movsl
inc
inc
jns
sub
or
test
outsl
sbb
inc
nop
insl
fwait
add
lahf
add
xchg
mov
test
or
jb
das
or
or
or
mov
aas
repnz
mov
ds
aam
cmp
jle
jae
mov
les
popf
cs
add
mov
push
sbbb
adc
repz
orl
dec
in
mov
mov
mov
movsl
dec
rorb
subl
call
dec
in
xchg
out
mov
mov
das
mov
xchg
xchg
test
icebp
push
clc
or
insl
lds
inc
push
sahf
inc
in
popa
in
xchg
and
xchg
or
pop
call
jae
xchg
hlt
lods
xor
outsb
mov
xchg
ds
imul
stos
test
cld
jne
gs
push
mov
imul
js
and
sbb
scas
inc
adc
pop
or
jg
and
xor
dec
jne
xchg
xchg
in
stos
xor
stos
cltd
mov
in
jp
arpl
sbb
sbb
ret
adc
fsubrs
and
lods
dec
movsb
mov
mov
xor
jmp
or
sarl
inc
jb
mov
clc
mov
pushf
pop
adc
in
popf
lret
pop
mov
cli
cmp
popa
sbb
ds
popf
push
push
sbb
jmp
cmpl
jmp
xchg
sbb
imul
les
ja
xchg
inc
les
data16
fisttps
lods
jl
call
shlb
mov
mov
dec
adc
adcl
mov
cltd
outsl
fildl
add
jbe
addr16
imul
daa
arpl
sbbb
insl
movb
jecxz
jmp
xchg
das
cmpsb
aas
jbe
ffree
sub
pop
cmove
add
pop
cmpsl
andl
sub
mov
test
and
sbb
push
ds
push
xor
lea
mov
cmp
roll
divb
sub
inc
aad
out
int3
adc
push
mov
cmp
adc
cmp
lret
pop
pop
push
pop
popa
mov
call
enter
addr16
pop
xor
std
scas
iret
ss
aas
sub
jae
sub
pop
push
insb
in
idivb
hlt
jecxz
movsb
cmc
jmp
clc
xor
dec
mov
das
inc
mov
pusha
dec
xchg
shrb
outsb
add
shrl
test
or
jmp
sbb
sarb
pop
test
inc
pop
repnz
push
push
inc
or
cmpsl
outsl
sub
mov
pop
call
repz
insb
sub
cltd
imul
icebp
adc
pop
mov
mov
inc
cmp
mov
pusha
sub
testb
push
scas
push
xlat
cmp
hlt
loopne
adc
xor
sub
or
shl
stos
mov
int
mov
fsubrs
mov
jns
mov
and
push
push
mov
loop
fnstenv
pop
sub
lock
icebp
addb
rorl
int3
pop
movsb
or
xchg
cmp
mov
inc
lods
dec
aaa
mov
dec
notl
scas
adc
orl
test
pop
inc
in
cmp
xchg
aam
imul
popf
add
aaa
or
das
push
out
test
pop
or
jb
dec
xchg
mov
jp
repz
sbb
pop
repnz
jp
hlt
add
pop
aaa
cld
iret
add
xchg
jge
lret
adcb
popf
scas
and
rcrl
and
inc
mov
inc
push
stc
mov
dec
stos
add
enter
in
int3
repz
stos
pop
xchg
cmp
es
pop
push
mov
sbb
lea
aaa
xchg
int3
jne
fs
pop
inc
call
sti
sbbl
xor
mov
mov
test
aad
mov
xchg
popf
jnp
sbb
jge
fwait
repnz
push
cld
mov
lret
imul
fs
outsb
jno
popf
and
mov
loopne
pop
push
lock
fwait
popf
dec
lcall
test
add
dec
rcrb
sti
sti
rorl
fwait
lods
sub
mov
dec
cli
jnp
lret
and
lock
das
dec
loop
mov
mov
push
xchg
and
pop
fs
dec
jb
fwait
mov
sbb
lcall
add
jl
fistpl
mov
and
mov
jge
mov
ja
jg
dec
inc
fdivs
popa
or
or
sbb
andb
sbb
mov
in
popf
shlb
inc
int3
addb
cmpsb
ja
add
stc
sub
jge
mov
outsb
aad
xor
mov
sbb
dec
ret
and
jno
lcall
gs
ljmp
into
dec
dec
rol
jge,pn
pop
dec
mov
push
cmp
clc
xor
lahf
pop
dec
addb
mov
jns
idiv
sub
pop
mov
mov
add
frstor
pusha
test
jmp
sahf
rcrb
lret
in
pop
iret
push
jbe
mov
jo
lret
adc
cmpsb
and
inc
adc
push
adc
jge
popf
test
cmpsl
cld
inc
inc
ficoml
cmpsl
fs
cli
add
mov
sub
cmp
sub
jno
enter
in
es
shrl
lcall
cmpsb
sub
pop
insb
dec
stos
cmp
inc
popf
mov
in
mov
insl
cmp
and
sbb
inc
movsb
jnp
jno
sti
lcall
cwtl
movsb
movsl
lods
pushf
fbstp
xchg
xchg
js
dec
das
jnp
in
sbb
int3
mov
out
and
hlt
xchg
pop
loope
mov
notl
popf
adc
inc
outsb
jns
add
je
sub
jmp
pop
lahf
mov
push
xlat
bound
mov
add
cltd
adc
dec
jo
jp
lret
test
std
xchg
ret
and
adc
clc
lock
cmp
mov
sahf
pop
out
into
sbb
pop
insl
push
inc
hlt
xor
inc
test
sub
shlb
mov
mov
mov
aas
clc
mov
test
out
jnp
out
jb
xchg
aam
dec
xchg
mov
dec
fbld
dec
sub
pop
adc
in
lcall
out
xchg
js
lods
sbb
xchg
fs
ja
xor
dec
inc
cmp
ljmp
dec
push
js
mov
dec
shrl
femms
mov
roll
das
push
dec
jne
jno
into
ffree
stc
xlat
jae
push
mov
inc
mov
xchg
shrl
add
aas
cmpsl
mov
pop
xchg
mov
mov
gs
jb
cs
stos
call
test
push
movsb
outsw
les
add
roll
out
xor
in
xor
testl
mov
add
mov
sbb
js
push
add
fs
jg
adc
insb
jg
inc
sbb
and
pop
mov
add
mov
mov
lods
pop
enter
jne
mov
mov
adc
push
adc
mov
rorb
mov
push
lods
push
imul
pushl
cmp
cli
mov
ficomps
pop
lods
push
inc
mov
cmp
jle
hlt
fiaddl
push
loopne
sbb
int
in
loop
outsl
data16
popa
mov
mov
std
xchg
push
movsl
mov
loopne
rclb
mov
pop
fbstp
fidivl
pop
add
ja
pop
xchg
inc
das
jns
pop
fucomip
fidivl
mov
jno
fnstsw
jmp
mov
sbb
adc
push
xor
shrl
xchg
mulb
add
and
rorl
lret
inc
ficomps
jl
xor
pushf
imul
mov
inc
xchg
je
ret
xor
or
fwait
imul
out
xor
push
xchg
xchg
dec
xchg
mov
push
or
and
orl
cmp
aam
inc
or
push
repnz
mov
mov
cwtl
outsb
xor
sbb
insl
sub
sahf
push
mov
std
add
ljmp
int3
fadds
andb
xor
jl
ds
add
sbb
xchg
inc
movsb
xorl
or
in
cmp
inc
ss
gs
pushf
add
add
jno
stc
cmp
xor
xlat
mov
shrl
inc
call
ret
add
lods
mov
add
clc
mov
fbld
pop
push
loope
add
fnstcw
movb
push
lds
cmp
jg
outsl
mov
mov
lds
mov
sub
push
jl
jb
add
out
movsb
adc
leave
adc
mov
andl
mov
lock
and
jbe
ds
rorb
shlb
lea
lock
dec
push
dec
sbb
push
rol
movsl
jmp
repz
cmp
fisubrl
shll
iret
hlt
jnp
or
test
pop
stc
pop
fsubs
fdivs
pop
lods
std
dec
xchg
lods
mov
push
add
mov
mov
ss
aad
fwait
int
push
aad
xchg
fidivrs
cmp
xchg
es
sub
decb
loopne
bound
and
mov
push
aam
or
aad
mov
dec
dec
fdivl
test
and
aam
xor
sub
or
out
push
and
add
pop
jo
pop
sbb
inc
ret
out
pop
loopne
push
fwait
dec
pop
aas
insb
orl
jo
dec
xlat
sbb
cmc
push
mov
jns
xchg
xor
sub
loope
scas
mov
push
insl
cld
cli
mov
loope
imul
dec
fst
icebp
push
mov
mov
push
int3
cmp
mov
push
jo
mov
in
movd
and
pop
mov
push
adc
and
sub
inc
sub
mov
mov
cmovl
jb
push
test
out
in
jmp
push
lods
stos
mov
xchg
jl
les
inc
push
and
jecxz
or
and
cmp
jecxz
cs
enter
ss
pushf
stos
dec
push
sbb
in
mov
mov
ljmp
insb
mov
mov
mov
cmovle
std
sub
aam
in
enter
sbb
stos
cld
mov
inc
sub
and
pop
push
xchg
jge
cmp
psubusw
int3
sub
lods
adc
add
sbb
lahf
jg
inc
nop
ficoml
pusha
ds
cmpsl
and
push
xor
cwtl
imul
mov
mov
callw
and
lods
testl
inc
mov
cmp
pop
mov
int3
test
adc
fimuls
scas
popa
cmpsl
out
stc
inc
push
push
push
ret
test
mov
test
xchg
cmpsb
sub
mov
addr16
scas
jl
popa
out
xchg
jmp
push
push
or
jae
aas
lock
nop
or
adc
stos
mov
pop
orl
and
les
mov
jp
jmp
insb
mov
arpl
mov
mov
push
ret
les
clc
push
push
mov
mov
jmp
inc
dec
lods
test
pop
or
movsb
adcb
adc
jg
pushf
clc
push
mov
mov
mov
loopne
jmp
jnp
outsl
mov
divb
jnp
pop
inc
jnp
sub
js
xchg
cmp
popa
pop
xor
stos
mov
adc
xchg
stos
nop
movsb
ljmp
adc
mov
fs
test
das
xchg
xchg
test
inc
loop
jmp
jns
das
push
pusha
fsubrs
lret
fiaddl
mov
enter
jp
dec
sbbb
movsl
inc
mov
loopne
fcoml
mov
ds
negl
push
pop
jle
test
addr16
mov
fsubrs
fwait
ds
loop
xor
out
jb
push
mov
fwait
cmp
and
outsb
outsb
sti
sbb
pop
and
push
pop
je
mov
cmp
das
popf
imulb
pop
sbb
inc
and
mov
xchg
or
inc
push
movsb
fadd
insb
gs
dec
xor
mov
mov
mov
pushf
mov
adc
mov
and
push
cmp
sbb
fisttpll
iret
out
sbb
iret
stos
mov
pushf
sub
mov
retw
push
mov
pop
insl
notb
push
jg
into
ds
sarb
jbe
push
sti
xchg
cmpsl
int3
in
add
mov
loope
lret
fst
mov
roll
lods
sarl
daa
or
outsl
stc
mov
js
mul
push
mov
movsl
fistpl
stc
add
or
arpl
pop
arpl
mov
cmc
out
sub
jne
daa
pop
mov
js
xor
aaa
mov
int3
push
mov
xor
push
lahf
jge
mov
jmp
fld
cmp
repnz
dec
pop
jno
jne
xor
push
push
or
stos
push
push
shlb
xchg
in
xchg
push
out
test
je
test
jb
pushf
add
lds
ds
sbb
les
sub
leave
sub
and
push
mov
lret
mov
mov
push
hlt
sub
sbb
pop
inc
push
or
adc
xchg
imul
out
mov
int3
or
sub
xchg
out
insb
ljmp
pop
inc
inc
mov
and
push
mov
xor
outsb
inc
nop
mov
inc
mov
push
sti
aas
lcall
xchg
push
dec
movsb
es
mov
out
sub
or
pop
xchg
test
loop
push
movsb
fmuls
pop
push
popl
mov
mov
mov
xlat
daa
jae
mov
mov
jns
pusha
and
mov
pushf
mov
cltd
or
jecxz
inc
shlb
loop
push
clc
adc
add
cmpsl
icebp
sbb
sbb
mov
mov
imul
lods
push
add
mov
xorl
xchg
xchg
xchg
and
dec
inc
jnp
test
jb
adc
out
jmp
mov
jle
sbb
shlb
sub
dec
dec
inc
out
dec
outsb
nop
or
inc
loopw
xlat
iret
lea
outsb
mull
or
inc
inc
or
aam
fmuls
mov
pop
mov
xor
arpl
push
mov
es
sti
addl
testl
test
enter
pop
popf
and
aas
add
lods
and
add
loopne
jns
add
imul
popf
adc
negl
lods
fsubrs
lock
mov
mov
mov
mov
and
lock
dec
pop
call
sub
pop
imul
pop
popf
lock
popa
out
add
mov
xor
hlt
insl
mov
into
cmp
cmpsb
int3
cltd
sbbl
xor
dec
pop
ret
shrb
hlt
rolb
lods
cmp
push
adc
lret
shll
cmp
mov
push
ds
movsb
mov
out
inc
inc
and
fdivl
cmc
inc
fmuls
xchg
cmp
rclb
notl
ja
out
sub
test
fsubl
or
mov
jmp
fnstsw
fs
cltd
ret
in
and
aad
jp
and
push
jb
mov
cwtl
push
sbb
pusha
jbe
mov
ljmp
mov
std
push
cmp
ss
ds
xchg
dec
adc
and
jge
popf
sbb
sub
rcll
scas
adc
add
xchg
xor
push
and
aam
lods
int3
mov
jb
dec
lods
xor
mov
and
mov
loopne
lahf
repz
or
sahf
pop
daa
inc
movsb
xor
jno
out
sub
mov
cmc
aas
fidivrl
adc
jae
addr16
daa
mov
sbb
sub
pusha
les
arpl
pop
icebp
xchg
in
ficomps
leave
ljmp
or
stos
sarb
scas
ljmp
in
scas
in
mov
mov
sbb
fwait
mov
out
std
cld
cld
stos
lahf
inc
add
mov
jle
inc
and
insl
mov
jne
out
fcoml
jae
sub
enter
dec
cli
rcll
dec
push
pop
test
or
push
mov
ss
int
push
mov
cmp
stos
sbb
jmp
push
orb
xchg
sub
xchg
mov
sub
push
adc
cmp
adc
leave
in
addb
loopne
sub
cmpsl
test
cltd
dec
push
xlat
jns
test
xchg
push
mov
icebp
inc
ret
push
mov
cmp
xor
dec
int3
mov
push
sub
dec
pop
xor
test
dec
and
leave
jle
cmp
lods
add
pop
jne
jb
jp
sub
pop
push
xor
lahf
xor
shr
mov
js
mov
push
cwtl
xchg
mov
mulb
stc
inc
mov
pop
dec
daa
jmp
mov
xor
cli
xchg
jns
pushf
or
mov
mov
xchg
cmpsl
loopne
pop
dec
jl
fcomip
mov
sub
aad
or
stc
das
sbb
adc
jne
sub
jg
flds
lods
ror
add
leave
fimull
push
das
jae
add
pop
fwait
push
arpl
push
repz
test
cli
fildll
les
inc
icebp
cmp
sub
rorl
xchg
inc
imul
in
or
inc
ja
xchg
adc
or
mov
shlb
xchg
cmp
ljmp
xor
mov
cwtl
pop
in
jl
dec
adc
mov
mov
pop
int
call
and
repz
into
add
pop
ret
andnps
push
out
loopne
cwtl
scas
pushf
daa
xchg
cmpsb
leave
sub
jbe
and
sbb
inc
testb
dec
sub
mov
mov
shrb
sbb
movsl
add
push
je
mov
lea
fdivl
mov
lock
popa
notl
pop
repz
jp
mov
movsb
adc
inc
repz
in
xor
add
push
cmp
popf
ljmp
imul
xor
add
xchg
je
sbbl
popa
jb
sbb
aaa
mov
and
push
inc
out
pop
and
mov
add
aam
int3
fnstsw
xchg
ljmp
or
and
cwtl
sbb
push
rcl
jns
mulb
lea
sub
lods
mov
lahf
test
pop
aad
lods
mov
mov
pop
pop
lods
or
nop
or
stos
outsb
inc
call
rolb
repz
mov
xchg
adc
push
shll
adc
pop
xor
ljmp
sbb
data16
lret
jmp
cmc
lock
shrl
jne
gs
div
out
sub
testb
pop
pop
xchg
push
pop
dec
sub
and
scas
imul
sbb
inc
out
clc
pop
cltd
push
add
scas
mov
and
pop
rorl
adc
cli
test
dec
lods
sahf
jmp
pop
imul
adc
xor
nop
jo
mov
add
xchg
sti
jmp
fsts
ret
jae
mov
fbld
leave
mov
or
mov
pop
notb
scas
xchg
lea
xchg
or
and
lods
ficoml
inc
sbb
jb
jg
push
mov
loop
jo
jbe
sub
mov
jne
arpl
cltd
ljmp
dec
sbb
pop
nop
and
sub
fcompl
push
out
xchg
iret
lahf
xchg
xor
xchg
jbe
pushl
inc
je
cmpl
mov
adc
rcrb
xchg
dec
jne
mov
push
insl
stos
adc
xchg
arpl
pushl
and
bound
sub
mov
lods
jb
mov
cmp
sub
mov
mov
mov
movups
xor
ljmp
pop
lock
lahf
dec
adc
mov
in
add
sbb
dec
sub
aas
and
hlt
ss
xor
rcl
lods
add
nop
les
add
mov
mov
stc
leave
and
mov
int
imul
and
fucom
pop
and
inc
ja
addr16
cld
enter
push
fxch
xchg
mov
cwtl
test
xchg
lods
push
cli
imul
mov
lods
mov
push
jge
xchg
add
xlat
mov
sub
add
push
mov
scas
out
clc
inc
jns
sahf
shll
mov
cwtl
add
into
dec
out
rol
jb
mov
mov
dec
adc
dec
into
sub
addr16
cmpsb
test
xorl
add
inc
shlb
rcr
hlt
andl
jne
or
sbb
ds
mov
aam
andl
mov
in
cld
dec
sbb
out
xorb
add
pop
test
jns
mov
jp
jl,pn
or
xchg
jmp
cmp
popf
dec
jns
ret
outsb
leave
xchg
iret
int
xor
inc
cmp
pop
mov
movsl
dec
adc
shr
insl
lods
xor
stos
pusha
je
cmp
ljmp
data16
adc
leave
lock
mov
insl
cmp
lret
pop
dec
cmc
icebp
insb
mov
gs
daa
std
xor
shll
and
cmp
cmp
adcl
popa
imul
cmc
imul
and
jp
jne
mov
lock
add
and
test
xchg
jo
mov
lods
jno
je
fwait
ret
std
out
add
sub
and
cmp
lods
js
push
pop
ss
jns
imulb
mov
lods
xchg
mov
push
add
add
and
pop
sbb
jge
mov
sbb
or
idivb
aad
pop
mov
mov
fwait
xchg
jmp
mov
or
imull
push
outsb
pop
shrb
movsb
sbb
sub
push
repz
xor
and
les
add
mov
xchg
cmpsb
cmpsl
int
push
add
out
and
loope
pop
jnp
pop
bound
mov
insl
push
fistpll
imul
inc
cmp
add
xor
mov
and
fs
out
cmc
test
fcomp
stc
adc
xchg
fldl
dec
sbb
xchg
jne
jo
xchg
repz
or
lahf
mov
insb
ret
aam
cmp
cs
push
xorb
inc
aaa
test
xchg
out
hlt
push
test
addr16
sub
cmp
push
clc
dec
mov
out
pop
sti
dec
out
lods
push
jge
in
aam
andb
test
jmp
push
out
into
call
xchg
sub
push
popa
jp
out
cvtdq2ps
inc
xor
jne
notb
test
mulb
sub
jmp
test
test
push
dec
shl
in
mov
push
push
xor
scas
sub
xchg
cwtl
adc
adc
jl
sbb
xchg
dec
jno
imul
xor
xlat
pusha
scas
je
push
lods
imul
push
push
xchg
dec
or
adc
jmp
jge
loope
cli
xor
jne
inc
mov
jns
gs
or
dec
inc
jp
cmp
test
push
outsl
aaa
and
cltd
sbb
pusha
lock
dec
sbb
xor
jg
and
fisubl
push
int3
push
or
xchg
sub
repnz
jbe
sbb
or
out
mov
push
fists
cltd
out
push
shrl
push
jmp
jne
cmp
fisttps
daa
aas
cmpsl
sbb
jecxz
pushl
add
mov
enter
mov
idiv
and
jno
dec
inc
test
adc
add
xchg
mov
shll
lods
inc
fsubr
insl
dec
fbld
jae
jae
add
cli
andl
mov
cltd
xor
lock
push
xorb
mov
xchg
mov
pop
push
adc
add
mov
or
gs
cs
ds
jne
xorb
stos
test
out
xor
rcrl
notb
lds
mov
ret
es
xlat
xchg
sub
mov
xlat
ljmp
mov
lods
fs
push
mov
cmc
sarl
je
pop
adc
cmpsl
dec
insl
mov
push
cmpsb
mov
das
into
add
cmpl
and
cli
pop
cmpl
addr16
mov
mov
dec
cmpsb
add
and
jg
push
mov
jmp
out
mov
sub
adc
push
cmp
mov
stos
call
outsl
adc
cli
aad
jp
jo
into
mov
sub
in
sub
lcall
xchg
loope
mov
and
jmp
and
in
data16
fidivrs
decb
ficoml
mov
mov
xor
js
aas
loope
push
nop
push
dec
test
pop
sbb
imul
sub
push
push
push
or
adc
inc
jp
xchg
in
and
or
sub
rorb
lods
pusha
push
pushf
xchg
outsl
test
or
js
iret
pop
sbb
icebp
mov
imul
fsubs
test
cmp
inc
mov
push
test
cmp
bound
scas
xchg
cwtl
insb
test
rcrl
mov
gs
xchg
push
cmp
or
cmp
push
push
inc
out
sub
push
pop
mov
mov
or
mov
or
in
std
inc
pop
mov
jb
loope
xchg
gs
push
test
fildll
sarl
mov
jnp
and
jns
cmp
movb
cmp
push
cmp
fmull
mov
pop
ja
ret
adc
hlt
lods
sub
movl
cmp
jo
dec
loop
xchg
in
or
out
mov
pop
call
cmpsl
jp
lock
mov
and
pop
int3
mov
xchg
sahf
or
ss
icebp
aad
cmp
pop
ret
mulb
imul
add
ror
les
mov
stos
std
jl
sub
fisubrl
cld
inc
jo
pop
clc
jp
ret
and
stc
and
jmp
pop
pop
inc
push
or
shl
cwtl
arpl
fstpt
lock
in
push
inc
test
adc
out
aad
mov
bound
push
adc
jno
mov
mov
inc
insb
push
adc
sahf
push
std
push
fcomp
stos
or
dec
fisttpl
cmp
movsb
js
xor
cs
mov
jae
retw
aam
lahf
out
xor
loope
int
adc
sub
leave
jbe
sarl
test
loop
std
xor
in
xchg
pop
lcall
xchg
sbb
lock
mov
push
inc
fsubs
mov
das
mov
pop
or
xchg
fisubl
ljmp
mov
lret
lds
or
sarl
nop
jl
xchg
inc
pop
daa
mov
pop
cli
jae
xchg
push
fimull
add
jge
stos
andb
mov
cmp
iret
fisttps
mov
inc
inc
int
sbb
pop
mov
cld
inc
outsb
ja
cmp
scas
cmp
scas
or
mov
push
mov
pushf
lods
xor
call
fwait
inc
lds
js
pop
shll
xor
mov
adc
hlt
leave
incb
and
mov
xchg
push
mov
popf
jmp
fwait
sbb
repnz
add
xor
cld
cwtl
push
fwait
pop
cmpsb
rolb
in
pop
leave
cmpsb
mov
lea
dec
je
int
in
stc
mov
ret
int
popa
sbb
in
inc
popa
in
mov
xchg
jnp
sti
jns
aaa
scas
subb
mov
mov
push
xchg
adcl
add
test
jne
mov
push
mov
sti
push
aaa
jne
inc
aad
push
dec
cmp
pop
sahf
loopne
lret
int
and
jne
jne
or
cmpsb
cs
or
or
outsl
mov
fisubs
pop
ret
sub
add
ficoml
iret
mov
xchg
scas
popa
scas
cmp
pop
mov
cwtl
mov
imul
cmp
or
mov
imul
jmp
mov
js
mov
outsb
sub
test
jo
cmp
xchg
pusha
dec
test
or
jl
adc
jp
xorl
adc
xchg
arpl
cwtl
sub
arpl
and
sbb
test
ret
repz
xor
jle
fwait
aam
pop
leave
test
and
mov
dec
popa
test
xchg
cmc
xchg
jmp
jne
cwtl
adc
scas
xchg
popl
push
sbb
xor
xchg
sub
pop
repnz
jl
sbb
aas
notb
push
je
stc
nop
rol
int3
xor
sahf
push
or
fadds
cs
pusha
push
mov
inc
mov
mov
enter
jp
jns
lahf
xchg
cwtl
fisttps
lret
dec
stos
jnp,pn
xchg
or
mov
jbe
outsb
pop
push
negl
mov
cmp
sub
addl
lock
test
sbb
cli
adc
ret
icebp
cmp
push
fcmovb
lock
pop
cmp
push
and
int3
js
dec
push
jge
and
mov
mov
sub
fdiv
cmp
outsl
out
pop
xchg
inc
cmp
xor
out
cmc
pushw
test
outsb
cmp
mov
repz
pop
dec
push
push
mov
xchg
sbb
dec
sbb
xchg
inc
outsl
sbb
mov
adc
shr
das
popf
push
xchg
decb
ss
outsl
fs
mov
in
inc
cmp
aam
push
loope
shll
push
fildl
ljmp
dec
mov
pop
jle
ds
addl
xor
jge
push
cmp
pop
jge
inc
adc
sub
xchg
inc
gs
jle
push
rol
movsl
mov
sub
push
aaa
movsb
sub
push
test
addr16
inc
leave
int3
cmp
lcall
pop
dec
mov
popa
dec
mov
fsubrs
inc
push
and
cmp
push
insl
mov
push
adc
push
aam
sub
inc
lcall
movsl
fidivrl
jmp
jno
aas
test
sub
cmp
sbb
in
rcr
out
push
jns
and
sbb
add
imul
stc
and
jecxz
cli
or
adc
mov
xor
popa
imulb
push
test
cmc
sub
test
shl
ss
movsl
dec
mov
dec
add
ret
dec
xchg
push
pop
data16
jle
lahf
out
sub
and
lret
pop
lock
and
and
xchg
in
lret
inc
sub
mov
addb
dec
jecxz
fwait
call
mov
or
int
ljmp
cmpsl
push
push
cld
adc
mov
push
xchg
pusha
movsl
aaa
aam
in
repnz
imulb
push
mov
push
jl
arpl
das
cmpsb
push
fs
lcall
mov
push
mov
xor
dec
sbb
shrl
nop
lea
jnp
dec
jecxz
daa
andb
lods
and
leave
movsb
mov
aam
mov
clc
jnp
jb
xor
in
mov
stc
mov
adc
popa
pop
dec
es
jp
es
sub
aam
xor
jo
push
cmp
xlat
shrb
scas
xor
or
aaa
inc
nop
xlat
cmp
jp
popf
mov
mov
mov
test
mov
or
out
dec
sbb
into
jb
mov
stos
mov
dec
pop
add
arpl
repnz
push
stc
out
ffree
loop
jnp
subl
cmp
adc
and
sti
jns
aaa
pushf
mov
pop
push
lods
adc
cmc
pop
mov
fdivs
sbb
dec
inc
mov
jb
mov
aas
mov
mov
ljmp
sbb
inc
pop
fldln2
push
rcrl
inc
jo
shl
push
jg
loop
sub
adc
jno
sbb
fs
adc
adc
out
and
pusha
jne
repz
stos
dec
push
cmpsl
fistps
push
add
pushf
lret
test
leave
or
pop
imul
jns
outsb
mov
daa
popa
xchg
ds
stos
inc
stos
scas
rcll
out
add
icebp
sub
scas
mov
data16
in
xchg
repnz
pop
movsl
insb
add
test
lret
rcll
std
test
fists
or
add
test
push
and
std
nop
adc
cmpl
push
ss
cmp
inc
rcl
pushf
ret
cmpl
addl
pop
ret
push
addr16
lds
pop
incb
enter
js
adc
nop
dec
jbe
aas
les
jmp
lds
xor
lods
aas
testb
sbb
ret
xlat
and
fldenv
icebp
pop
ret
negb
pop
sub
push
push
xlat
cwtl
mov
xor
push
and
inc
cmpsl
aam
sub
inc
and
sub
jge
rcl
adc
sub
dec
lahf
test
adc
in
inc
mov
lods
repnz
sub
fsubrl
pop
xchg
sar
int
notb
push
outsb
outsl
leave
cld
sub
mov
into
sbb
pop
jecxz
inc
push
dec
leave
test
xor
add
inc
pop
jmp
dec
mov
mov
xor
inc
dec
test
fnsave
or
mov
ds
bound
push
xor
cmp
sbb
std
bound
fldcw
mov
mov
sahf
fnstsw
pop
mov
int
mov
mov
mov
in
sti
fcmovu
and
pop
push
and
xlat
test
dec
mov
jge
jae
outsb
stc
js
rorb
ss
test
pop
or
cmpb
dec
outsb
in
ret
clc
enter
test
jae
fiaddl
subb
in
jo
popa
cmpl
out
lret
out
ss
pop
in
pop
jo
ss
addl
pop
scas
leave
popa
rolb
lahf
inc
add
or
popa
cmp
aam
outsb
test
packuswb
mov
das
imul
data16
sahf
xlat
stos
ss
shll
es
decl
out
aad
stos
in
push
inc
cmp
or
shl
adc
and
es
ja
movb
jae
dec
mov
rol
pop
dec
sbb
and
fistpll
mov
test
inc
and
mov
sbb
jne
test
jbe
pop
insl
sbb
loope
or
ror
lods
dec
or
clc
add
mov
mov
adc
out
sub
std
xchg
mov
insl
push
int
frstor
lods
cmc
pusha
cmp
stc
les
or
dec
stos
loop
cmpb
jmp
add
adc
mov
cmp
ret
aaa
adc
dec
imul
inc
mov
cltd
add
mov
sub
and
push
shlb
imul
out
ds
inc
mov
cltd
cmp
ret
push
cmpsb
sub
cmpsl
and
rcll
sarl
pop
int3
adc
enter
jge
xor
sbb
pop
pop
mov
ss
cmp
rcl
xchg
jb
cmpsb
movsl
orb
jp
divl
pushf
sti
sti
cmp
fnstenv
push
push
mov
in
fadds
pop
stos
mov
loope
cs
lods
leave
out
ret
rcr
jl
enter
out
sbb
pusha
test
out
jp
cmp
mov
insb
int
mov
push
cmp
cmp
sbbl
jmp
es
or
gs
pusha
stc
hlt
and
pop
cmp
and
xor
fisubs
mov
push
mov
sahf
or
mov
rcrb
lods
clc
sub
pop
sahf
cmpl
dec
stos
enter
cmpb
and
mov
pop
idiv
aam
push
dec
push
or
js
ret
mov
xchg
dec
xchg
lock
frstor
sbbl
daa
pop
div
divl
test
ljmp
pop
loopne
cmpsb
and
fldl
ds
mov
fdivp
leave
jp
daa
jo
sbb
mov
iret
mov
sbb
cltd
aam
outsl
scas
pop
push
or
lret
enter
rcll
jl
mov
in
aad
mov
into
lret
jnp
stos
push
mov
and
or
mov
clc
and
jg
pop
dec
inc
fisttpl
ds
mov
inc
dec
xchg
xchg
out
xlat
div
sub
push
jb
iret
push
cli
loope
push
pop
js
negl
scas
inc
cld
mov
pop
cmp
sbb
mov
pop
inc
lret
mov
lock
incl
lret
add
and
mov
adc
mov
jmp
insl
add
ss
arpl
cmc
adc
in
xchg
dec
xlat
xor
sti
test
fadds
or
push
add
popf
pop
mov
xor
dec
inc
xlat
mov
mov
jge
jg
mov
and
mov
dec
aas
into
fildll
js
and
ret
and
stc
pop
sti
into
mov
mov
in
cltd
dec
push
fcoml
mov
das
mov
fstl
push
push
mov
fldl
jp
test
adc
stos
adc
sbb
mov
loope
jne
inc
aaa
xchg
jo
add
pusha
cmp
stos
scas
inc
cmpsb
cwtl
dec
pop
xor
repnz
sub
inc
mov
nop
push
mov
mov
jns
insl
inc
and
mov
pop
in
out
ds
mov
push
loope
int3
cmp
jns
push
test
out
jne
and
mov
pop
movsl
mov
mov
int3
stc
cmp
jl
movsb
dec
sti
mov
sub
loop
arpl
mov
pop
adc
adc
arpl
mov
or
add
sbb
push
icebp
or
jnp
jno
xchg
shl
popf
bound
or
mov
outsl
and
push
sub
mov
fcom
divb
sbb
xchg
sbb
insb
add
int3
jecxz
mov
js
nop
pop
mov
fmulp
aam
jae
daa
jp
mov
adc
jecxz
lret
and
out
ret
cwtl
stc
ljmp
cmp
mov
xlat
jb
xor
lods
ljmp
cmp
ds
out
hlt
fs
cmpsl
sbb
push
mov
mov
xor
push
mov
das
sbb
and
sbb
mov
outsb
out
rcll
mov
inc
rolb
nop
icebp
in
jo
clc
xor
pop
stos
xor
hlt
je
fildl
out
or
xorl
dec
in
or
ror
lea
test
add
dec
mov
cwtl
mov
fidivrs
rcr
push
fnsave
mov
pop
push
hlt
dec
stc
cmovp
xchg
rclb
sub
add
push
dec
shr
dec
xchg
fisubrs
dec
xor
mov
incb
lods
test
lfs
in
mov
add
loope
adcb
insb
or
xchg
rcrb
psubd
fsubrs
cld
insl
dec
adc
add
sahf
test
pop
sbb
mov
jbe
and
jp
rcl
cmp
cmp
out
gs
mov
pop
jle
cld
push
and
in
mov
mov
mov
std
mov
les
pop
cmpsb
testl
jb
and
das
push
lret
mov
scas
sub
xor
pop
iret
das
outsb
mov
push
repnz
jbe
mov
nop
mov
and
in
sub
inc
mov
push
jne
fcoml
xchg
cmp
scas
jp
pop
add
pop
jp
add
adcb
mov
pop
je
inc
lods
inc
xorb
stos
xchg
pop
and
adc
das
fs
fisubs
enter
test
out
fs
lods
dec
and
pop
xlat
and
cltd
mov
adc
bound
out
sbb
outsb
fs
mov
pushf
jle
outsl
iret
fildll
test
push
rorb
mov
notl
fcomps
cltd
xchg
add
sub
imulb
and
mov
mov
mov
xor
pop
sub
cmpsb
mov
cmp
loop
out
sahf
and
inc
cmp
xor
cbtw
test
or
lcall
push
int3
add
repz
xor
fisttpll
sti
icebp
loope
dec
push
dec
rolb
xchg
loopne
lcall
push
in
call
data16
mov
pushf
vmovaps
lods
add
jbe
rcrb
fcmovnu
std
daa
cmp
in
jns
roll
hlt
ljmp
inc
neg
or
rclb
ss
push
mov
lock
lods
xor
mov
jl
loope
cmc
inc
inc
movsb
imul
or
popa
push
mov
mov
adc
outsl
push
add
iret
push
je
scas
pop
jne
stc
aad
and
adc
sub
jle
mov
mov
sbb
and
fnstcw
into
inc
pop
clc
in
idivl
loope
xchg
mov
mov
pop
movsb
mov
or
lret
adc
mov
icebp
das
loope
aas
mov
cmp
and
xorl
inc
and
pop
sbb
icebp
add
dec
cltd
divl
fisttps
lahf
loopne
pop
sahf
dec
pop
dec
pusha
mov
or
out
es
add
xor
int
clc
rcll
shrl
notl
icebp
jno
orl
scas
xor
dec
xchg
lret
fdivrs
add
pusha
aam
add
imul
inc
bound
and
pop
push
loopne
fldt
sub
sub
jecxz
imul
add
push
mov
je
icebp
dec
sbb
je
push
push
ja
mov
and
sub
je
hlt
mov
mov
loop
int3
dec
jmp
pop
dec
jbe
and
sbb
dec
xchg
inc
cli
add
mov
push
add
js
nop
or
jae
inc
push
fidivs
test
pop
push
outsb
std
jmp
in
daa
cmp
jae
xor
icebp
sar
addr16
push
jp
js
or
mov
ss
add
out
lret
and
cld
pop
inc
mov
push
rorl
in
pop
lahf
cmp
out
mov
mov
mov
sbbb
andb
cmp
sbb
ret
adc
daa
mov
mov
lods
test
rcr
test
test
push
adc
mov
mov
stos
scas
bnd
jge
aam
shll
mov
lods
pop
sbb
stc
mov
scas
scas
push
out
ffree
aam
subb
fadd
mov
push
xchg
shlb
inc
or
and
mov
pop
push
dec
xor
pop
cltd
aaa
out
scas
adc
bound
cmc
sahf
hlt
int3
inc
adc
mov
out
fisttps
mov
mov
inc
and
xchg
cltd
loopne
invd
out
adc
mov
sbb
imulb
inc
negb
lds
sbb
lret
pop
cli
dec
scas
jmp
mov
inc
loop
sub
out
mov
aaa
test
inc
sahf
xor
add
xchg
push
arpl
lock
aad
in
inc
and
pusha
sarb
and
mov
sbb
push
push
call
xchg
mov
aad
jbe
pop
push
cmp
lret
add
xorl
inc
sub
xorb
push
sub
mov
repz
pushf
pop
push
iret
leave
pop
sahf
sbb
nop
repz
addl
sbb
and
sbb
enter
lret
leave
insb
nop
cltd
daa
sarb
out
xchg
imul
mov
into
movsb
xor
and
mov
in
je
rcll
cmpsb
dec
sub
lods
xor
xchg
das
movsl
cmp
adc
cmpsl
add
nop
int3
cli
cltd
shll
arpl
and
stc
cmp
fstps
or
pop
pusha
stc
sub
and
push
lahf
xchg
dec
adcb
xor
pop
fistps
in
add
leave
mov
insl
movsl
int
push
scas
enter
negl
ret
in
mov
add
pop
pop
lea
mov
dec
pop
sbb
push
pop
xor
cmc
or
or
jle
cmp
and
lds
or
push
ret
cmpsb
sarb
jp
pop
packuswb
mov
repnz
jbe
pop
data16
es
and
push
dec
lock
push
push
test
sub
jecxz
gs
jns
and
enter
push
sahf
xchg
call
mov
mov
dec
gs
addb
mov
and
fistps
xor
movsl
out
sarl
repnz
jmp
jl
push
cmp
add
scas
push
add
hlt
add
sbb
sub
mov
cld
xchg
andl
iret
adc
xchg
push
xchg
pusha
and
fbstp
inc
cmpsl
xor
jne
fsubr
enter
cmc
pop
mov
push
push
roll
leave
jne
and
incb
mov
mov
dec
pushf
push
outsb
int
test
call
xlat
movsb
cmp
cmc
jg
jne
outsl
cli
mov
and
xlat
aad
and
sbb
push
es
ljmp
push
loope
gs
push
jnp
dec
inc
add
pop
insb
insl
ja
or
movsb
cli
add
arpl
xchg
std
and
insb
js
inc
or
pop
arpl
sbb
sti
lods
add
setge
lds
mov
push
adc
popa
jnp
cmpl
push
dec
jmp
add
and
push
in
jl
sahf
repz
and
adc
or
fdivp
pop
sahf
sbb
inc
pop
rolb
dec
and
sub
add
sbb
sub
iret
es
lret
in
or
push
adcb
adc
cltd
sarl
fsubrp
cld
call
addr16
fdivl
inc
mov
cmp
pop
dec
cmp
cmp
mov
out
fistps
jno
dec
jle
or
sub
ret
dec
fdivs
mov
push
lret
test
js
lods
movsb
in
pop
dec
sub
stos
scas
jmp
cmpsl
into
push
jle
mov
shrb
lock
pop
push
popf
jle
sub
cli
pushf
push
sub
adc
mov
das
push
push
in
mov
pop
imul
mov
rcl
fnstsw
and
xor
cwtl
pop
cmpsl
xchg
dec
xor
cld
pushf
stc
movsb
ljmp
movsb
mov
ss
cmc
call
mov
test
clc
outsl
pop
dec
in
jl
sbb
sar
dec
es
leave
sub
inc
aad
pop
xlat
and
repnz
mov
pop
sti
mov
cmp
orl
cmp
mov
xchg
inc
xor
test
mov
in
xor
inc
xor
mov
fbld
ljmp
pop
mov
lock
mov
and
cmc
push
adc
adc
cmpsb
sub
or
add
dec
hlt
scas
pop
call
mov
mov
fsubr
push
jbe
mov
fsubr
cmp
lods
pop
je
xchg
lret
jmp
cmp
lahf
into
ret
aam
push
jl
inc
insb
pop
ficoml
fildll
fisttpl
ljmp
mov
xor
icebp
add
setae
movsb
popa
adc
ds
mov
lods
dec
sbb
push
data16
cmp
clc
mov
fs
dec
scas
dec
lret
cwtl
xor
rolb
stos
hlt
sbb
xchg
add
push
xchg
subl
das
sarb
out
outsb
push
push
xor
shrb
sar
scas
repnz
call
push
jb
xlat
inc
scas
ret
lods
xor
cmp
int
cs
cmp
pop
mov
rolb
add
iret
cmp
testl
outsl
out
aam
mov
fisttps
jne
inc
fiaddl
scas
or
lods
push
sbb
lods
lods
fldcw
inc
mov
jae
inc
inc
sbb
repnz
jae
pop
xchg
push
dec
adc
and
les
dec
mov
inc
jnp
stc
rorb
jmp
fs
sub
in
dec
push
inc
pop
and
mov
inc
push
rol
mov
pop
sbb
adc
xchg
mov
xlat
repz
popf
jg
inc
into
pop
sub
insl
fidivrs
call
insb
xor
mov
adc
inc
inc
aas
test
push
cmp
insb
sbb
sub
int3
cmpl
call
push
mov
por
cmpl
fs
test
pop
pop
pop
sub
xchg
stos
jns
inc
popa
rorl
or
clc
loope
adc
roll
push
xor
inc
sbb
lahf
add
jmp
aaa
add
xchg
lock
aam
fmul
hlt
sti
sbb
add
xchg
or
dec
mov
mov
cmp
xchg
xchg
mov
fistpll
push
incl
cs
jae
adc
call
outsb
cmp
xchg
pop
mov
lret
or
sbb
and
mov
adc
xchg
stos
shll
pop
jbe
xor
xor
ror
pop
fmull
pusha
aas
sub
xchg
pop
xor
out
pop
scas
orb
inc
mov
fsubr
sub
in
enter
pushf
mov
test
jmp
adc
in
ds
stc
out
je
pop
jb
adc
push
and
add
mov
nop
into
pop
aam
js
sub
mov
repnz
lcall
outsb
fwait
pop
mov
sbb
mov
sti
jo
bnd
cmc
ljmp
mov
adc
xor
js
mov
adc
mov
or
in
push
stos
aad
scas
mov
inc
mov
shlb
test
dec
fcoml
inc
push
imull
pusha
mov
out
insb
scas
push
rol
sub
push
rcl
clc
aaa
je
adc
mov
mov
mov
pop
addl
pop
and
adc
and
pop
and
xchg
jns
xchg
test
xor
mov
aam
aaa
or
adc
jbe
pop
cmc
inc
lcall
lret
rcll
mov
cli
fsub
and
in
pop
dec
nop
push
repnz
mov
cmp
mov
js
inc
push
pop
mov
mov
push
inc
fistpll
xor
mov
inc
out
mov
add
pop
or
je
iret
imul
xchg
jo
mov
cmpsl
and
fstps
adc
push
push
insb
stc
mov
ja
loop
mov
fistpll
or
loopne
repz
ret
cmp
das
or
add
push
push
cmp
test
mov
ret
pop
inc
or
nop
sub
das
push
dec
push
mov
mov
fiadds
leave
push
push
out
adc
ljmp
jbe
js
sbb
imul
xchg
out
fs
pop
mov
shrl
jg
test
inc
pop
iret
add
cmp
inc
mov
lahf
inc
addb
cli
aad
in
mov
cmpl
adc
add
sub
nop
mov
fnstsw
push
add
dec
xchg
inc
cmp
imul
xor
adc
addr16
daa
scas
mov
cmp
lea
push
mov
mov
jge
sbb
sub
out
cmpsb
fs
xchg
pop
cmc
jmp
movsb
jbe
push
fisttpll
test
inc
mov
fidivrs
mov
test
xchg
loopne
mov
lods
push
mov
cmp
jno
inc
push
mov
cltd
adc
js
mov
pushf
popf
arpl
dec
ja
insl
fbld
inc
pop
lahf
movsl
cld
adc
movsl
rorl
pop
testb
or
or
jp
xor
mov
and
mov
jge
ret
xor
js
scas
lods
aam
sub
sbb
mov
leave
jae
lock
ja
insl
cltd
xchg
jb
jbe
test
pop
jns
add
test
lea
outsb
ja
inc
hlt
and
mov
test
fwait
or
scas
sbb
cmp
xchg
mov
cmp
out
mov
mov
inc
sbb
rcl
sbb
add
inc
inc
cmc
je
and
jl
clc
sub
jge
icebp
out
testl
push
mov
sbb
lcall
scas
enter
dec
ret
stos
movsb
inc
sbb
add
pop
daa
stos
push
jbe
sub
std
imul
cmp
lret
int
jno
dec
mov
inc
xchg
mov
or
enter
or
cmp
cmp
inc
push
test
cmpl
pop
mov
fld
das
test
push
pop
sub
fnstcw
xor
adc
push
in
pop
add
adc
xor
pop
inc
add
mov
jecxz
movsb
jne
in
mov
ret
jg
int
jle
or
iret
imul
outsl
fs
push
mov
or
cmp
enter
add
or
jb
pop
mov
adc
dec
dec
fidivl
mov
pop
movq
addr16
inc
shrb
xchg
xchg
push
lock
addb
lea
jp
out
rclb
sbb
jns
xchg
fs
out
ds
mov
test
inc
pop
data16
nop
test
add
rolb
push
sti
mov
and
jle
adc
and
fistl
inc
lods
out
pop
mov
or
adc
xchg
int3
push
rcrb
jle
lock
add
das
mov
fdivrs
or
out
sbb
rcrb
jg
fdivp
pop
xor
aam
das
or
sahf
flds
pop
data16
call
cmp
jbe
das
jno
loope
mov
aam
sbbb
sbb
dec
je
mov
mov
pop
stc
dec
cmp
xchg
out
leave
xchg
dec
adc
insb
mov
ret
inc
cmp
lahf
dec
push
mov
roll
pop
aas
imul
xchg
mov
dec
push
add
xchg
xchg
stos
dec
cs
and
inc
push
jnp
mov
loop
jnp
aad
mov
loop
jae
xchg
pushf
xchg
push
ja
xor
mov
sbb
out
leave
cmp
sti
dec
sub
adc
jp
test
mov
cli
mov
imul
xor
fmuls
xchg
into
or
fwait
ja
push
psubd
icebp
jl
or
outsl
cmc
inc
jmp
cltd
cld
pop
adc
add
push
cmc
mov
push
and
mov
mulb
js
out
jbe
cmp
hlt
pop
inc
mov
cmp
dec
sub
mov
leave
dec
and
int3
scas
fwait
lcall
cmpsl
jbe
lret
cwtl
sub
ja
cmc
sti
stc
cs
and
popf
mov
xchg
push
jmp
sub
jb
int
add
sub
int3
xchg
push
xlat
fisubrs
imul
push
pop
cmc
lcall
lods
dec
lea
out
repnz
hlt
imul
pop
pop
movsb
cld
clc
rorb
dec
mov
push
lods
fnstenv
pop
sub
adc
dec
pop
sub
push
and
movsb
nop
stos
fidivrs
mov
push
mov
shll
mov
pop
sbb
add
fcoms
fcmovnbe
frstor
in
mov
mov
out
mov
shlb
gs
xchg
or
ficomps
inc
in
xchg
call
pop
loop
in
adc
adcb
add
lret
inc
pop
adc
cmpl
addr16
dec
push
negb
loopne
cmp
push
jecxz
rcll
rorl
inc
xchg
jne
xor
negl
pop
mov
pop
ficompl
cld
or
jbe
sbb
cmp
fisttpll
iret
push
scas
adc
lahf
shl
mov
adc
repz
mov
rclb
movl
pop
or
push
sbb
cld
xchg
pop
mov
loope
or
sbb
fdivrp
out
scas
xlat
xchg
icebp
jp
and
cmc
loop
into
jbe
imul
push
call
nop
mov
es
out
xchg
test
fsub
addr16
cmp
out
fisubrl
faddl
mov
int
mov
xchg
fbstp
ss
stos
inc
les
repz
mov
icebp
movsl
jnp
push
pop
adc
add
fsub
mov
imul
in
adc
sbb
jne
jbe
gs
imul
stos
xor
test
adc
jae
nop
mov
fstl
jp
ljmp
cmp
les
cmova
jbe
mov
stos
movsb
cmpl
ss
test
sub
lea
lahf
mov
add
pop
xor
jo
fidivs
jnp
xor
stc
iret
test
pop
sahf
ss
addr16
and
js
push
push
jns
out
push
sub
int3
pop
in
sub
je
enter
movsl
fidivs
mov
push
insl
jp
xor
fcomip
pop
xor
cmp
xchg
pusha
push
les
call
std
xor
sub
lret
inc
das
movsl
cmp
xchg
daa
pop
lea
rcrb
minps
lds
adc
leave
mov
lds
push
sub
and
cmc
or
imul
mov
push
sti
jns
cmpl
mov
dec
mov
stos
mov
push
push
push
add
sub
inc
mov
rcll
cwtl
mov
movsl
mov
push
repz
mov
shl
movsb
nop
push
push
subb
jl
inc
repz
fsubr
xor
or
addl
ret
in
jl
out
sti
inc
xchg
or
add
jmp
test
ret
mov
enter
in
subb
mov
lods
add
dec
out
cmp
std
cmpsl
aam
mov
xor
in
xor
jbe
push
cld
jae
mov
adc
and
and
push
push
pop
adc
inc
mov
ret
xchg
or
in
xchg
lods
sti
addr16
push
ret
ret
ja
in
repnz
and
jge
imul
xor
mov
iret
cmpsl
mov
call
shlb
rcrb
xlat
movsl
push
out
lahf
sbb
test
pop
cs
pop
ss
int3
lcall
mov
xor
pop
ds
push
hlt
insb
int3
outsl
icebp
sbb
nop
jo
fcoml
and
flds
mov
outsb
mov
pushf
dec
or
mov
js
fbstp
aas
mov
pop
mov
or
sarl
cmc
sbb
rcrb
xor
cmc
orb
mov
mov
stos
out
iret
fs
mov
jge
mov
ljmp
bound
add
push
sti
mov
shlb
pushf
push
sbb
push
nop
or
inc
hlt
jb
pushf
addr16
int
rcrl
jns
mov
int
cli
mov
xorl
jp
xor
insl
loopne
ss
leave
mov
xorb
sbb
ret
adc
xor
stos
or
outsb
clc
fisttpl
ds
in
inc
mov
ja
add
jge
push
lods
jg
cld
int
push
inc
popa
pusha
inc
push
scas
and
sbb
out
out
add
adc
mov
push
pushf
pop
testl
lods
iret
and
dec
lds
leave
pusha
bound
sbb
out
das
jo
in
movsl
ss
in
xchg
or
mov
adc
mov
mov
dec
dec
jmp
xor
stos
subl
daa
xorl
stos
adc
lea
cltd
adc
or
fs
adc
add
test
dec
sbb
pop
mov
in
mov
mov
xchg
jmp
fs
mov
push
gs
inc
jmp
push
add
cltd
orl
push
inc
ret
jmp
je
movl
cmp
push
ds
xchg
or
or
fwait
idivb
sub
mov
std
xor
out
je
push
iret
or
fsubp
loop
dec
bnd
sub
xor
cld
xor
xlat
push
cmovg
fs
test
inc
out
jecxz
mov
push
nop
mov
bound
and
daa
dec
in
xor
mov
arpl
int
dec
into
lahf
stos
sbb
fs
pushf
loopne
xor
in
ljmp
jl
adc
out
loope
sbb
pop
jle
movsl
cwtl
fsub
ficompl
cmpsl
adcb
push
sbb
test
xor
cmp
jecxz
mov
test
ds
daa
popa
add
in
aas
mov
dec
sbb
fidivs
push
pop
jecxz
es
pop
cmpsl
stc
cs
lea
xor
das
mov
xchg
in
movsb
or
bound
add
bound
cmpsl
ret
pusha
cwtl
dec
inc
and
and
add
movsb
push
adc
rorb
stos
push
scas
in
pushf
cmp
xchg
pop
inc
xchg
sbb
pop
sti
and
xchg
mov
enter
addr16
mov
fisttps
nop
sub
lcall
jb
lock
add
push
adc
out
push
sbb
insl
dec
add
faddl
push
adc
jb
mov
test
ret
lods
jg
out
sub
addr16
repnz
jmp
cwtl
orl
add
decl
loope
gs
arpl
xchg
shl
sbb
adc
or
cmc
sbb
je
stc
sub
aad
push
data16
pushf
xlat
pushf
sub
mov
adcb
arpl
test
or
fisubrl
pop
cmp
push
sbb
and
push
push
mov
clc
loope
sub
or
inc
repz
testb
add
sbb
andb
dec
push
pop
dec
sbb
icebp
inc
adc
scas
cld
js
jo
sbb
ljmp
jae
stos
xchg
xor
es
shld
aas
into
mov
add
cwtl
adc
mov
out
sub
aaa
cmp
or
sahf
mov
mov
cli
xor
mov
movsb
fidivrl
jl
sbb
hlt
mov
les
ja
and
push
fldenv
cld
data16
filds
mov
lods
dec
sbb
pop
mov
mov
xor
std
das
inc
gs
and
imull
cs
hlt
or
fiaddl
add
mov
jg
sbb
push
add
sti
mov
iret
ss
icebp
insl
test
xchg
stos
aaa
nop
call
or
notb
pushf
push
lods
rcr
jle
pushf
mov
outsl
xchg
orl
fwait
cmp
je
pop
sbb
fidivrs
adcl
loopne
rolb
jmp
call
test
mov
mov
jmp
adc
inc
iret
jge
sbb
mov
sarb
loop
daa
test
idiv
repnz
xor
imul
add
xor
mov
push
lahf
lds
add
cli
in
outsl
rcll
lahf
gs
adc
int
mov
rcl
adc
push
fiaddl
out
out
mov
sbb
adc
mov
movsl
hlt
loope
push
adc
lea
loop
lods
xorb
in
pop
dec
mov
or
jb
mov
mov
je
lods
ror
dec
ret
insb
xchg
rcr
pop
test
out
lret
mov
inc
pop
sub
in
sbb
inc
sbb
jne
xchg
mov
cmp
jno
cld
aaa
test
jb
sti
jbe
cmpsb
dec
push
cmp
sbb
inc
xor
mov
push
cmp
jnp
or
das
xor
sbb
shlb
iret
daa
jecxz
sub
push
push
into
jbe
dec
cmc
mov
aas
pop
dec
pop
or
mov
mov
lock
and
adc
dec
inc
sti
dec
ds
cld
insb
dec
out
fsubs
clc
push
push
test
int3
fnstcw
out
push
movsl
jg
sbb
lds
std
mov
push
jl
outsb
pop
push
lods
sbb
adc
lods
pop
outsb
cmp
jbe
fmuls
xchg
push
aaa
jbe
add
jbe
and
mov
xlat
xchg
push
fdivrl
jb
sbb
mov
fcmovnu
add
xor
jge
arpl
pop
push
cmp
sbb
cmp
call
call
jecxz
fsubrl
popl
sahf
fisubl
cli
outsl
adc
shlb
popf
dec
shrb
add
outsb
add
or
test
aad
sub
pop
and
dec
inc
loope
dec
sub
push
jmp
pop
dec
cmc
into
gs
mov
add
lods
fimull
mov
push
inc
and
sub
jl
daa
test
mov
scas
cmovp
stos
cld
jae
leave
push
sub
call
cmp
out
or
cli
push
mov
lea
sbb
push
push
popf
inc
out
cmp
pop
mov
nop
jne
test
loop
mov
sti
xlat
mov
jb
add
loop
pop
jmp
int3
loop
call
lret
push
bound
dec
lea
cs
sub
shlb
insb
mov
adc
je
xlat
fucomip
xorl
mov
xor
inc
adc
cli
mov
sti
loop
adc
es
dec
movl
push
clc
out
scas
inc
test
iret
cli
fsts
sbb
push
push
sti
dec
jae
fwait
dec
mov
aam
dec
or
movsb
mov
in
pusha
inc
add
jle
lcall
std
inc
lods
sbb
sub
xor
xor
jecxz
mov
pop
jle
ja
hlt
nop
add
push
sub
dec
inc
js
aam
add
adc
mov
pop
inc
insb
insb
ds
inc
push
pusha
inc
pop
add
ja
xchg
xchg
popf
scas
lret
fsubrs
loopne
cmp
subl
lds
xor
mull
int3
mov
lock
fldl
es
push
xchg
cmp
daa
mov
je
mov
insl
out
test
mov
cmp
in
icebp
nop
cs
cmpsb
nop
dec
aam
test
xchg
sbb
daa
repz
rcrl
jl
mov
add
inc
jne
mov
imul
adc
cmp
inc
movsl
xor
jbe
pusha
xlat
jp
rorl
lcall
mov
mov
and
out
jecxz
lahf
mov
imul
push
push
leave
fistpl
sbb
stos
fwait
xor
out
and
mov
xchg
pop
das
cmp
push
arpl
daa
je
sti
clc
cli
jle
sub
sbbb
xchg
mov
sbb
and
mov
jl
jno
outsb
enter
xchg
pop
jns
or
mov
mov
es
sti
lcall
add
sahf
dec
jmp
orl
jmp
jno
ficoml
xchg
ror
ja
mov
add
fs
push
sub
test
clc
outsl
dec
pop
out
cli
iret
out
lds
daa
adc
das
or
push
or
aad
sub
and
pop
jae
pop
dec
out
sarb
or
mov
dec
clc
cld
lods
int
xchg
movsl
inc
sub
jmp
xor
jl
lret
dec
jecxz
add
mov
jmp
dec
mov
aaa
jo
cmp
sbbl
push
xor
orl
pop
push
cwtl
and
sbb
jns
mov
xorb
shll
mov
xchg
fldt
stos
mov
sub
cmpsb
je
jmp
add
sbb
sbb
sub
clc
and
out
std
ret
movsl
mov
cmpsb
sub
dec
sbb
lods
cmp
push
inc
std
scas
mov
pop
movsl
dec
daa
int3
push
mov
mov
cmp
or
mov
mov
xlat
sbbb
stc
pop
jnp
xor
sub
jno
mov
cmp
adc
pop
ljmp
sahf
jnp
in
sbb
fxtract
ret
call
stos
mov
cmpsb
imul
and
fwait
shrl
fcmovu
mov
inc
sbb
jns
adc
push
xchg
cmp
pop
sbb
inc
adc
je
movsl
xchg
clc
sbb
fisttpl
dec
mov
jae
pushf
testb
fiadds
sub
loope
or
push
or
push
mov
daa
scas
xor
pop
sbb
xor
sarb
dec
xorl
js
pop
out
sbb
dec
jno
cmp
cmp
int3
sub
mov
js
xlat
stos
leave
fmull
inc
cmp
push
adc
jle
push
and
inc
int
jl
inc
add
pushl
add
fildll
push
lahf
mov
outsl
pusha
popa
bound
es
dec
jg
jge
pop
imul
lds
xor
setle
stos
frstor
das
clc
idivb
push
scas
xchg
push
jbe
jp
hlt
mov
ljmp
in
xchg
das
sbb
filds
mov
or
aam
add
decb
mov
movsb
push
adc
cmc
pop
mov
hlt
jmp
out
push
xor
jne
pop
push
imul
hlt
sbb
mov
stos
jne
stos
lcall
sbb
test
inc
xor
sbb
sub
loop
sahf
ret
jg
or
lret
xchg
xorb
pop
sub
inc
sub
sbb
cmp
mov
sbb
or
xor
push
shl
leave
mov
scas
push
mov
fiaddl
mov
or
inc
jb
ror
add
stos
gs
out
pushf
add
fiaddl
test
jmp
mov
jle
out
xchg
rcrl
mov
fdivs
fldt
imul
mov
andb
pop
cmc
mov
push
xor
gs
orl
sub
push
and
movsb
mov
cmp
mov
mov
das
push
lods
aam
mov
jae
dec
sahf
enter
push
insl
int3
mov
add
jo
fdivl
mov
cmp
lods
inc
mov
pop
sahf
jle
cmp
pop
popa
or
lret
jp
fucomi
dec
or
cli
jo
in
pop
in
mov
mov
xor
notl
icebp
xchg
imul
stos
pop
stos
call
push
inc
or
addr16
int3
fistps
cmpsb
sbb
jl
xor
hlt
in
pusha
call
ret
shrb
loope
mov
mov
sub
ja
test
push
enter
sbb
mov
inc
adcb
std
stos
jne
jnp
out
add
cmpsb
and
jns
push
inc
and
xorl
push
hlt
movsb
xchg
and
push
mov
rcll
cmp
inc
mov
fs
xorb
enter
jle
out
scas
inc
xorb
je
inc
call
sub
ret
daa
inc
pop
or
sub
in
push
cmp
hlt
add
mov
xchg
jmp
ror
jp
push
dec
addr16
jge
mov
mov
movsl
sub
hlt
push
in
insb
nop
gs
and
testl
lret
mov
lcall
popf
fnstcw
cmp
adc
in
sbbb
addr16
mov
outsl
fimuls
ds
imul
pushf
cmp
mov
fidivrl
and
xlat
add
aaa
negb
and
rcrb
aas
sahf
aas
shll
pushf
mov
push
pop
inc
cmp
push
ret
lcall
iret
mov
adc
andl
fcomps
loope
iret
add
sub
mov
out
pop
lcall
gs
push
out
add
adc
arpl
mov
out
imul
stos
add
pop
jnp
adc
lds
pop
push
mov
push
add
and
pop
inc
push
xchg
push
int3
adc
pop
adc
sarl
cmp
xchg
fldenv
adc
add
ss
fldenv
fs
push
mov
inc
mov
mov
push
xor
lods
push
cld
sti
lock
mov
mov
les
xchg
mov
adcl
mov
addr16
loop
mov
call
push
sbb
ljmp
pop
pushf
inc
lea
push
lret
or
pop
xor
je
sbb
push
stos
scas
xchg
jbe
outsb
mov
ror
mov
mov
jnp
pop
arpl
mov
xor
mov
mov
fidivs
jno
test
pop
xor
in
adc
popa
jle
aaa
sbb
lods
jecxz
add
mov
mov
mov
push
fs
cmp
inc
fsubrl
fcompl
divl
ljmp
ss
xchg
pop
ret
xchg
lock
out
nop
mov
or
insb
aad
imul
rcrb
mov
shrb
jecxz
call
pop
fwait
aam
insb
adcb
xor
adc
cmp
sbb
repz
inc
ret
sub
loopne
xchg
add
xor
leave
lds
jno
xor
movsl
push
mov
pop
js
sub
aas
cli
icebp
fwait
out
add
mov
mov
cmp
stos
xlat
sub
leave
addb
in
fs
lret
or
cwtl
add
push
push
cmp
fwait
ja
mov
push
sbb
nop
fimuls
adc
shl
ljmp
xchg
adc
imull
mov
sub
arpl
je,pn
lret
insb
faddl
addr16
int3
repz
std
jns
mov
rcrl
or
push
test
mov
test
lret
push
xor
jg
aam
ljmp
test
fistps
mov
mov
xorb
mov
sub
repnz
dec
or
jbe
andb
xor
adc
aam
aad
dec
fwait
pushf
sti
sub
mov
xchg
and
shll
dec
and
sahf
pop
pop
cmp
mov
or
cmp
mov
dec
in
fwait
scas
outsl
stos
cmp
gs
ret
int3
push
inc
shl
xchg
dec
stc
jmp
inc
mov
cwtl
dec
inc
pop
es
pop
push
lods
mov
pop
mov
dec
addr16
and
out
out
mov
sbb
mov
mov
out
and
aas
aad
dec
cmpsl
adc
in
test
xchg
sub
lds
mov
xor
jp
jae
xchg
stos
sub
hlt
insl
lret
ret
sub
dec
stos
ss
fs
out
dec
mov
push
adcl
add
mov
fwait
jne
push
add
lcall
subb
lods
es
pushf
rep
pop
cmc
cltd
jns
subl
push
xchg
or
outsb
cmpb
sbb
daa
test
push
dec
pop
jg
sub
sbbl
dec
add
ss
mov
mov
xchg
dec
testb
cwtl
dec
sahf
inc
cmpsb
xchg
adc
push
bound
repnz
loope
not
aas
add
and
mov
rcr
add
add
cwtl
les
leave
loope
sbb
mov
push
adc
sbb
xor
shl
in
and
mov
inc
lods
das
jp
adc
jb
stos
sti
nop
jo
imul
das
les
popa
jmp
insb
jle
mov
jbe
inc
test
inc
adc
sub
or
out
jne
sbb
pop
jge
jge
dec
out
sub
adc
aaa
mov
imulb
sub
pop
adc
xor
ljmp
mov
sub
adc
pop
ds
out
in
push
add
test
jg
cmp
ret
jle
inc
or
adc
and
cmp
mov
fistpl
cli
aas
mov
mov
cmp
int3
pop
inc
fcom
popa
push
inc
mov
jle
push
sbb
push
scas
outsb
fcmovne
adcl
inc
xchg
and
fldt
insl
aad
fdivl
repz
or
push
dec
jge
clc
and
jmp
ljmp
inc
outsl
arpl
mov
cld
jno
inc
daa
arpl
in
push
cmp
push
loop
mov
cmp
int3
mov
lret
mov
pop
inc
xor
insl
pop
sub
or
in
xchg
xor
pop
jns
jp
cli
and
pop
loop
xchg
mov
mov
mov
jb
ljmp
ret
add
or
out
fsub
sub
lret
loopne
aaa
cwtl
mov
and
cmp
cli
and
add
fsubrs
aam
pop
inc
or
jl
iret
xor
movsb
mov
sahf
lret
jnp
add
dec
jno
lods
fmuls
ss
jmp
loope
push
dec
cmpsb
gs
ret
out
mov
lret
decb
outsb
jl
iret
inc
in
push
mov
stc
jo
sbb
ja
scas
sub
pop
loope
sbb
test
cmp
stc
scas
jl
pop
pushf
xor
clc
add
sub
leave
cmpsl
and
xchg
ret
mov
mov
mov
jb
stos
es
sub
pop
cmc
mov
push
or
pusha
cli
test
mov
inc
daa
mov
jae
dec
inc
jg
cmp
jo
stos
sbb
stos
testb
sti
push
test
and
sub
pop
sbb
lcall
mov
jae
jp
std
xor
daa
sbb
push
mov
xchg
mov
in
js
test
inc
sub
push
mov
jmp
sub
in
jns
push
outsb
xor
dec
sahf
xchg
xor
xor
mov
lret
jns
cmp
mov
adc
cmp
sbb
out
aad
js
dec
iret
mov
and
shl
jno
jnp
ror
jmp
sbb
adc
xor
outsb
cmp
popa
std
aam
xchg
mov
popa
xor
clc
cmp
rcll
je
add
nop
and
rclw
or
jecxz
add
add
lea
push
xor
out
and
pop
dec
fdivrs
cmpsl
outsb
add
cmp
xchg
stc
inc
jne
xor
je
dec
inc
mov
movzbl
test
fildl
sbb
sbb
add
add
jl
jno
push
lods
inc
push
push
add
mov
adc
mov
loopne
das
outsb
mov
test
fnstenv
shlb
out
mov
repnz
jno
es
sub
mov
nop
push
adc
lds
inc
jae,pt
add
xchg
or
movsb
call
fbld
xor
call
mov
test
pop
dec
or
in
mov
xchg
push
or
fldcw
and
loopne
je
into
push
lret
jecxz
lcall
loopne
int3
es
inc
test
and
fnstsw
popf
mov
adc
adc
sub
xor
inc
aas
lahf
jo
xor
jg
pushl
xchg
push
frstor
imul
inc
les
movsw
inc
jb
inc
jns
pop
push
jmp
cs
xchg
jmp
jae
mov
xor
add
jo
fsubrl
ja
aam
ljmp
das
inc
xchg
inc
add
insb
out
shl
mov
es
adc
loope
push
xor
dec
arpl
test
mov
xacquire
fbstp
add
repnz
inc
dec
ja
test
xchg
call
xchg
mov
or
inc
sub
shl
lret
fdivs
loopne
xchg
mov
cmp
xlat
mov
sub
out
jecxz
add
aaa
inc
test
mov
cld
out
cmp
ja
adc
lods
mov
aam
stos
jns
sbb
push
addb
scas
xchg
xor
adc
sbb
xchg
inc
fucomi
test
repz
mov
inc
mov
pop
xchg
or
inc
mov
adc
inc
fmull
pop
xchg
outsb
jne
pop
xchg
in
cmp
aaa
out
sub
popf
mov
pushw
cmc
xchg
inc
xchg
cld
xor
cmp
push
push
loopne
xchg
ss
sbb
mov
fbstp
push
repz
ja
hlt
int
jmp
lods
pop
jge
cmp
data16
movsb
cmpl
adc
in
mov
jb
xchg
je
pop
mov
xor
push
mov
mov
jle
cmp
mov
mov
clc
call
and
aaa
ret
xor
insb
addl
adc
in
out
cmpsl
jno
loop
cli
push
sahf
punpckldq
push
fildll
into
rcll
data16
pop
push
cmp
add
sbb
shll
lock
lahf
cmp
mov
jge
sbb
lcall
xchg
pop
push
das
or
scas
rol
mov
icebp
mov
add
cmp
sub
mov
movsl
lret
and
arpl
repz
sbb
mov
repnz
subl
xchg
mov
test
stos
xchg
loopne
adc
add
mov
mov
xchg
mov
and
fiaddl
mov
jo
add
jb
mov
incl
xor
imul
xor
shll
ss
stc
in
xor
jne
adc
cmp
ja
cli
out
ss
xor
pushf
or
add
pushf
sbb
jge
and
mov
cmp
sbb
mov
and
sbb
jo
test
iret
mov
mov
popf
popa
xchg
adc
xchg
jb
movsb
xchg
popa
sti
dec
jb
addr16
sbb
jp
fidivs
jae
ret
xor
lods
add
cmp
das
into
lea
addr16
loop
push
jg
push
pop
cltd
in
jae
loop
int
je
or
sbb
sbb
fcoms
pop
and
mov
and
mov
cmp
stos
mov
out
mov
faddl
mov
outsl
jo
mov
imul
mov
loop
and
or
push
push
dec
push
out
and
pushf
ljmp
add
aas
lahf
cmc
call
cmp
mov
mov
jg
ds
jns
cld
dec
adc
inc
xor
je
and
or
lods
mov
sub
push
sub
in
cs
test
push
xor
jle
xlat
adc
mov
pop
fistpl
xchg
pop
int3
pop
mov
dec
fcoms
flds
scas
test
pop
mov
lds
and
test
lcall
push
jle
mov
jo
lds
and
add
les
mov
push
push
xor
les
movl
xchg
pop
mov
subl
mov
je
insl
pop
in
mov
xchg
bound
rcrb
jmp
fwait
aam
xchg
cmp
les
push
mov
adc
inc
mov
mov
lds
dec
ret
pop
pop
repnz
fiadds
adc
jle
addr16
pop
fbld
jecxz
out
jne
mov
stos
mov
dec
and
push
cltd
push
sahf
dec
scas
jle
mov
lret
ret
movsb
or
or
jbe
lahf
or
cmp
jne
shl
dec
jo
fstps
push
daa
repnz
mov
shll
hlt
cwtl
mov
fldenv
sbb
jmp
fdivl
push
add
sti
adc
scas
mov
ret
lret
add
and
jle
sbb
loop
mov
pop
ja
sub
loop
daa
mov
pop
fnstcw
dec
adc
pop
xchg
inc
sbb
cmp
push
sbb
inc
lods
mov
push
and
lcall
mov
fidivs
mov
xor
xchg
inc
jp
leave
orl
sarb
mov
lods
hlt
addb
ja
or
imul
pusha
lds
cmpsb
cwtl
mov
das
bnd
jle
lods
push
rcrb
shlb
repz
sub
cltd
test
shll
ds
or
sahf
mov
sarl
xor
cmc
fsubrp
pop
cmp
ror
lret
pop
adc
push
jmp
fs
int
sbb
imul
or
adc
fucom
inc
mov
lea
add
push
cmc
jb
add
gs
into
iret
lods
mov
int
scas
pop
nop
adcl
in
jp
pop
xor
push
rolb
pushf
in
loopne
jg
sti
fstp
or
mull
hlt
sarl
mov
push
xor
sahf
fdivrl
fldenv
mov
lcall
pusha
push
cld
popf
std
les
je
insb
dec
cmp
mov
pop
insl
icebp
pop
xchg
adc
mov
fsts
adc
dec
mov
pop
fs
adc
cltd
jb
lods
sbb
jg
push
dec
fnstsw
jnp
jmp
movsb
adc
movsl
sarl
imul
mov
fstpt
or
pop
iret
pop
imul
imul
adc
add
xor
lods
cli
xchg
jge
push
fs
xor
or
ficoms
ss
cltd
loopne
cmp
push
add
stos
orl
push
loope
xchg
jno
movsb
sbb
adc
xchg
xchg
roll
and
mov
pop
ror
call
sbb
std
movsl
ljmp
and
add
outsb
xchg
and
jg
push
addr16
dec
int
mov
push
aad
sbb
stc
sbb
xor
and
xchg
test
adc
pop
fmul
les
fwait
jle
add
add
mov
mov
pop
and
push
imul
shrl
int3
sbb
mov
and
inc
add
sbb
pop
mov
scas
insb
xor
xchg
pushf
dec
fistps
repz
inc
pop
paddq
sbb
and
adc
mov
add
xlat
and
dec
lods
sbb
mov
sbb
fldcw
or
add
and
mov
push
xor
sbbl
and
push
xchg
sbb
jmp
push
mov
aaa
stc
add
fistpl
daa
sub
rcl
sub
sahf
adc
sti
or
nop
mov
sbb
sarb
or
jae
nop
dec
stc
les
adc
cld
fwait
lcall
frstor
mov
test
filds
mov
cmp
repnz
push
xchg
sub
jne
andps
out
pop
lahf
popf
inc
mov
push
inc
out
fwait
mov
ljmp
adc
sub
popa
cs
and
call
cmp
push
pop
xor
sub
and
fmulp
shrb
nop
cmp
mov
mov
mov
push
xor
adc
nop
arpl
push
stc
pop
cmp
sub
and
jle
inc
push
push
sarl
mov
jno
adc
dec
mov
pushf
mov
jae
sbb
mov
cmpsl
or
jne
mov
ret
gs
addr16
fdivrs
sub
inc
lret
addr16
jo
ficompl
dec
or
cmp
xor
add
or
fs
jle
iret
mov
outsl
jns
dec
mov
bound
add
sub
sahf
fwait
iret
add
popa
pop
mov
out
stos
int3
daa
mov
or
and
ficomps
int3
inc
mov
mov
jg
or
jp
ret
add
jo
in
loope
jne
inc
mov
cli
sbb
mov
lret
adc
sbb
push
push
push
out
mov
pop
dec
lds
lods
push
or
loopne
mov
fs
shlb
cmp
adc
mov
and
loopne
and
mov
mov
pushf
pop
fldenv
and
jg
dec
scas
jmp
cltd
loopne
pushf
xorl
adc
jmp
testb
jp
inc
mov
add
xor
sbb
xlat
jns
leave
xchg
adc
outsl
and
jae
insb
test
dec
mov
dec
xor
xchg
ljmp
fisubl
ljmp
std
rcrb
imul
mov
inc
jb
jae,pt
adc
push
movsb
cltd
ss
mov
outsl
jnp
iret
mov
arpl
daa
inc
flds
mov
arpl
pop
and
insb
pop
fldl
pop
or
dec
fimull
xor
mov
or
sbb
and
xor
and
clc
nop
rcrl
push
cmp
mov
sbb
not
pop
and
rcl
sub
mov
das
mov
and
and
mov
cltd
stos
inc
bnd
jg
arpl
imul
mov
pop
lret
sar
and
daa
pop
cmpsl
mov
mov
or
pop
or
pop
sub
cmp
std
clc
xlat
stos
vmptrst
roll
fsubr
jecxz
or
push
roll
into
push
sub
mov
das
sub
jg
movb
push
mov
mov
hlt
jl
unpcklps
std
cmp
adc
jo
clc
and
push
movsl
xchg
sub
mov
icebp
or
outsb
xor
imul
adc
dec
push
mov
and
cmp
subl
shrb
bound
cmpb
vpaddb
mov
pop
js
mov
in
dec
or
or
mov
out
test
js
push
dec
test
cltd
or
mov
pop
jge
jle
arpl
mov
loope
sbb
dec
sub
fistpll
mov
or
mov
jecxz
popa
loope
sub
ss
pop
add
cmpsl
jg
sub
xor
pop
cmpl
nop
jno
arpl
popf
xchg
gs
sbb
pop
int3
test
sub
add
cltd
loopne
and
cmp
ljmp
inc
jl
mov
mov
sbb
dec
and
jnp
or
shlb
mov
inc
inc
popf
outsl
pop
jno
mov
sub
pop
mov
int3
pop
mov
adc
sbb
cmp
in
stos
clc
jbe
cmp
xor
sbb
mov
sub
fcmovnbe
cwtl
dec
add
push
daa
ret
xor
sbb
mov
sbb
fwait
int
cmp
testl
adc
xor
shrb
push
mov
pop
mov
ds
mov
enter
jo
in
xlat
imul
test
fcom
shlb
mov
repz
movsl
insl
cld
imull
shll
ja
fists
das
mov
daa
sbb
push
aaa
or
shr
dec
push
mov
jne
jns
sbb
push
mov
stos
iret
xor
push
idivb
push
mov
andl
and
jne
adc
push
es
xchg
add
pusha
fisubrl
xor
ficoml
pop
add
xor
cmp
adc
sub
jmp
pop
imul
arpl
jb
sub
push
adc
hlt
sbb
xchg
dec
test
loopne
or
daa
mov
mov
sub
push
cmp
mov
xor
lret
push
insb
ss
pop
gs
stc
sub
outsl
test
rorb
ja
and
test
leave
add
mov
icebp
in
add
push
cmpsb
add
push
inc
add
adcb
xlat
outsl
packssdw
cwtl
mov
jns
mov
loope
lcall
xor
jp
int3
jl
pop
xorb
cmp
int
pop
pop
cmp
xchg
aam
cmp
adc
sar
cwtl
loop
adc
mov
mov
int3
add
pop
inc
int
lea
dec
in
dec
ss
addb
ljmp
outsl
mov
or
imul
cltd
sub
adc
xor
push
lret
inc
inc
aas
pop
ljmp
and
call
mov
arpl
dec
clc
jge
lahf
sbb
adc
push
jge
mov
jmp
push
fstpl
outsb
mov
cwtl
aad
push
lahf
xchg
fcomi
dec
jg
addl
inc
sahf
mov
pop
out
mov
mov
fisubl
lret
lret
push
out
cld
test
sti
and
or
in
xchg
mov
data16
iret
cltd
ja
data16
inc
pop
xchg
aad
xor
cltd
xor
insb
arpl
inc
dec
push
divb
or
test
add
and
xor
mov
push
dec
mov
cmpsl
cmovo
repnz
jae
mov
cmp
nop
push
rcl
fs
inc
rcrl
add
lret
fsubr
add
pop
dec
insl
pusha
mov
adc
add
cltd
aam
jno
nop
into
or
mov
adc
fcoml
test
add
scas
mov
pop
push
jno
adc
popf
stc
call
bound
and
jns
or
xlat
popf
mov
bound
push
dec
pop
sbb
push
push
xchg
lock
arpl
cmp
dec
and
in
pop
cs
jg
das
sub
jmp
inc
fistps
xor
jnp
repnz
mov
pop
adcb
push
addb
pop
test
out
in
mov
idivl
inc
mov
dec
xchg
mov
xor
test
lods
lds
int
pop
xchg
je
jnp
mov
cli
and
stos
sub
outsb
jge
mov
test
cmp
jnp
std
mov
and
pusha
stc
inc
pop
mov
jnp
or
ljmp
sub
sbb
or
dec
inc
lret
out
push
ss
mov
addr16
or
xor
int3
and
imul
pop
jb
stos
mov
adcl
xchg
fdivrl
rcrb
push
add
data16
xchg
mov
pop
lock
pop
mov
xor
inc
and
rol
xor
jnp
add
jo
add
pusha
ret
inc
subb
fisubrl
mov
adc
pop
lods
out
sarl
jecxz
mov
inc
lea
jo
cmp
jmp
fs
in
adc
scas
js
addl
bound
je
cmp
je
ret
xchg
sub
cmp
push
aas
decl
lret
mov
add
stos
push
push
cs
movsl
in
mov
aas
and
inc
inc
lea
adc
push
mov
push
mov
out
mov
in
insb
loopne
stos
push
lcall
or
pop
loope
nop
push
scas
mov
push
jmp
inc
sahf
push
lea
sbb
sbb
pop
mov
sbb
dec
lahf
out
aad
mov
fnstcw
stos
jmp
fs
adc
or
cmc
lcall
xor
mov
stos
sbb
popf
mov
dec
and
cli
or
inc
ret
inc
test
cmp
mov
push
mov
sbb
ja
xchg
ss
cwtl
mov
push
add
cmp
xchg
adc
lods
imul
sub
lds
daa
ret
mov
xchg
sub
mov
mov
mov
fistl
sbb
and
inc
xor
xchg
mov
pop
sbb
call
dec
test
push
mov
push
pop
in
bound
ficoml
pop
rorb
pop
push
jno
mov
hlt
sub
inc
push
leave
sbb
sub
popa
mov
lret
js
jg
push
lcall
dec
sub
xchg
mov
sahf
cltd
out
jae
nop
push
incl
push
fisubrs
ss
sub
mov
orb
cmp
mov
adc
pop
sarl
push
pusha
outsw
loop
cltd
ret
icebp
inc
mov
mov
sbb
in
stc
imul
cwtl
adc
sbb
movl
ret
int
ljmpw
cltd
lods
aaa
xchg
xchg
jg
push
rol
imul
pop
scas
inc
xor
adc
shrb
subb
in
das
flds
loope
mov
dec
lcall
jecxz
inc
andb
imul
mov
mov
adc
aaa
imul
pop
pusha
imul
and
xor
adc
push
pop
mov
jb
mov
stos
sti
imul
xor
mov
or
repz
scas
push
arpl
or
cmpsl
pop
cld
pushf
test
lret
data16
shll
inc
out
int
xor
xor
shrl
fst
dec
jmp
sub
loop
stos
sub
decb
mov
cltd
outsb
jmp
sub
push
sub
jmp
addr16
lahf
loop
leave
jns
mov
add
call
popf
mov
sbb
rolb
sub
lds
jnp
inc
dec
dec
cld
mov
inc
add
inc
pop
pusha
jbe
mov
cmc
pop
sub
xchg
sbb
mov
rcrl
jae
aas
cmp
out
std
jb
adc
ja
adc
xorl
sar
mov
fidivrs
movsl
mov
inc
in
pop
mov
movsl
xchg
in
fistl
jae
scas
imul
inc
xlat
clc
sbb
mov
or
loop
loopne
fdivrl
jns
test
sbb
jae
test
jecxz
mov
popa
mov
cld
mov
daa
faddp
cmp
xchg
call
xor
add
adc
mov
test
dec
sub
fucomp
push
cwtl
jae
xchg
push
jge
pop
pop
cmp
jne
jo
fnstsw
gs
mov
or
xor
cli
mov
fnstsw
or
movsb
jge
cmp
or
ja
xchg
mov
frstor
pop
xor
sbb
mov
ljmp
bound
outsl
call
test
dec
jnp
xor
xlat
arpl
loop
and
js
gs
and
das
pop
add
and
mov
push
fisubs
jbe
dec
or
jnp
loop
cmp
ret
int3
outsl
push
insb
pop
test
dec
or
dec
sbb
jno
cmp
sub
inc
xchg
jl
push
sbb
cmp
repz
xchg
xchg
xchg
push
mov
cld
push
xchg
shll
aaa
cmpsb
icebp
fdivl
cmpsb
imulb
outsb
inc
jnp
jp
cld
push
rclb
and
cmp
mov
icebp
adc
jb
push
ret
outsb
and
fcoml
lods
mov
orl
inc
dec
pop
xor
imul
xlat
xchg
sub
in
cli
add
adc
sub
sbb
popa
fs
mov
pusha
mov
jo
or
mov
or
enter
or
into
pop
or
cmp
mov
notl
xor
inc
add
jmp
pop
lods
popf
jo
xchg
and
push
aam
sbb
es
insl
inc
in
mov
hlt
outsl
inc
cmc
aam
aas
mov
loop
push
ret
rorl
xchg
iret
sub
dec
lock
dec
aad
push
inc
push
jbe
loope
cmpsb
push
cli
repz
fildl
push
pop
out
jmp
jns
push
movsb
bound
cs
clc
dec
fs
inc
jg
add
incl
xor
out
outsb
testl
rcrl
ja
iret
out
jns
aad
and
ret
xchg
inc
push
pop
iret
mov
das
frstor
loopne
imul
or
movsl
jns
sub
fidivs
rorb
inc
cs
xchg
jb
lock
mov
out
popf
in
cld
or
lods
pop
insl
cltd
add
popf
xor
cmpl
cmp
jp
in
xor
into
jmp
or
mov
inc
outsl
sub
hlt
mov
rclb
in
fstp
or
jg
add
stos
mov
lods
jns
mov
jae
clc
stos
adc
jmp
mov
pusha
xchg
mov
jge
shll
sahf
pop
scas
iret
mov
mov
inc
jns
mov
loopne
mov
inc
jl
outsb
es
ret
andb
mov
pop
clc
mov
sbb
adc
nop
gs
mull
jge
mov
xchg
int
sbb
or
cmc
pop
adc
sarb
push
out
mov
popa
sub
cmp
insl
jl
and
sbb
add
mov
pop
mov
sub
or
fwait
call
jno
sub
sbb
mov
or
std
cmp
pop
and
jg
std
push
mov
adc
sub
pop
sub
inc
mov
stc
mov
xor
pop
xchg
ror
scas
int
inc
or
sar
push
xor
sahf
out
das
lcall
inc
fsubrs
pop
lds
inc
mov
add
push
mov
pop
lret
push
cmpsl
je
xlat
jle
mov
popf
hlt
jbe
xchg
mov
repz
xchg
in
ss
xor
inc
add
sbb
cmp
scas
stos
cmp
jae
std
aam
add
jns
cmc
fstps
les
mov
jmp
cmp
xor
xchg
pop
daa
add
inc
aam
dec
bound
pop
or
xchg
push
lahf
mov
out
dec
mov
jnp
dec
pop
add
mov
xchg
fbld
es
dec
sarl
dec
cmpsb
inc
xchg
mov
shlb
in
pushf
dec
push
in
mov
add
in
inc
cltd
das
inc
mov
mov
dec
ffreep
xchg
pop
dec
jmp
cmp
push
mov
pop
cld
jnp
mov
lods
sbb
enter
dec
or
push
xchg
xor
ljmp
add
fidivl
xor
inc
mov
mov
cmc
hlt
insb
xor
inc
loope
sub
cmpsl
sub
in
je
nop
fprem
jns
sub
std
lcall
xor
stos
cmp
daa
imul
xchg
nop
or
push
lret
aaa
and
xchg
xchg
iret
je
jg
fistps
pop
pop
jns
adc
cltd
mov
mov
inc
repz
and
out
inc
clc
lock
fisubs
addb
sbb
imul
mov
popa
call
xchg
and
and
mov
dec
pop
das
pop
push
arpl
out
ficompl
push
scas
lea
xor
icebp
scas
xchg
mov
lahf
inc
ficompl
mov
stos
fistl
mov
or
mov
ds
clc
int
inc
fimuls
xor
icebp
push
add
cmp
dec
in
fmull
sbb
scas
jg
fidivrs
inc
mov
call
adcl
jle
cld
cpuid
sub
and
push
mov
adc
imul
sar
lahf
sbb
pusha
inc
outsl
leave
add
cwtl
xlat
pop
cmc
insl
mov
out
dec
dec
ljmp
push
dec
enter
adc
mov
lret
aaa
cmp
push
stos
clc
mov
popf
pusha
mov
push
pusha
and
data16
out
inc
popf
test
push
mov
push
mov
mov
inc
sub
fs
and
xchg
jmp
les
and
mov
es
jg
movsl
or
dec
and
f2xm1
mov
inc
pop
out
dec
inc
xchg
ljmp
adc
out
rol
mov
jl
ljmp
xor
pusha
xchg
mov
es
jl
jl
inc
fnstenvs
mov
xchg
testl
xor
fcmovnb
outsb
and
sub
pop
mov
std
pop
xor
aam
ds
arpl
in
jecxz
cmp
mov
aad
pop
scas
mov
mov
cwtl
mov
jge
call
shl
aaa
insl
jg
rorb
inc
mov
inc
pushf
inc
cltd
xor
or
enter
cmp
dec
das
mov
cmc
mov
mov
bound
adc
and
add
inc
movsb
add
stc
sub
or
popf
xorl
pop
mov
cmp
test
subl
popa
xlat
ss
imul
xor
cltd
pop
xchg
xor
jnp
out
vcvtsi2ssl
dec
mov
scas
inc
ds
inc
test
push
push
imul
and
and
out
out
enter
adc
hlt
gs
cli
inc
dec
sbb
sub
out
stos
mov
shll
sti
pop
push
push
mov
je
test
les
and
push
adc
mov
xchg
nop
das
pushl
outsb
xorl
xchg
or
test
xchg
xlat
add
mov
out
fnsave
dec
ds
add
xor
cli
pop
popf
pop
dec
pop
test
sti
fistpll
inc
das
lea
sti
cmp
xlat
lock
adc
lds
ljmp
pop
cmpsb
mov
pop
sbb
ficoms
sti
inc
dec
xchg
mov
cli
iret
in
cmc
aam
rorl
ret
mov
fwait
push
push
pop
stos
pop
pop
cmp
jle
test
adc
mov
mov
jecxz
jl
or
adc
leave
fistps
ftst
or
insb
cmp
or
jmp
push
mov
pop
mov
sub
inc
push
jbe
cmp
jne
mov
iret
jge
divb
mov
shrb
push
pop
sbb
inc
cmp
mov
xorb
test
outsl
add
sbb
xlat
bound
pop
xlat
idivb
cmp
adc
mov
xchg
decb
loopne
mov
pop
movsl
rcrl
std
popa
addr16
jb
xlat
lods
call
fisubrs
push
jno
mov
push
fstps
dec
arpl
das
ret
das
pop
outsl
out
inc
mov
adc
cli
push
dec
adc
xchg
testl
pop
fwait
jnp
inc
adc
pop
mov
jle
cmpl
ss
mov
push
adc
pop
fst
cmp
mov
data16
ljmp
jmp
xor
imul
jl
jg
mov
shl
fwait
mov
gs
or
je
push
jp
lret
bound
nop
repnz
dec
dec
jl
aaa
loop
js
ret
cmp
xchg
ficompl
fidivl
adc
jl
sar
add
cmpsl
push
lods
push
pop
sbb
fwait
jmp
shr
cmp
lahf
jl
fidivl
mov
sub
pushf
ret
js
pop
lret
movsl
das
xchg
lret
dec
testb
dec
mov
mov
testb
push
jl
xchg
addl
fxam
insl
mov
loop
fdivp
pop
outsl
addr16
scas
pop
fisttpl
and
sub
fidivrl
in
ret
mov
bound
repz
pushf
mov
sahf
out
pop
push
mov
fldcw
addr16
orb
aad
mov
arpl
cmp
mov
pop
jae
scas
pop
jl
fdivrl
leave
mov
scas
cmpsb
and
sbbb
cmp
scas
imul
mov
sbb
fwait
rorb
mov
adc
mov
out
ja
jp
mov
cmp
adc
cmpsb
and
fnsave
js
in
cmp
adc
je
ficompl
dec
sub
outsb
addl
aas
rcrb
jnp
and
push
lahf
and
and
fnstcw
ret
stc
loope
sub
push
mov
cmp
lds
aam
icebp
rcrb
dec
stos
cmp
xor
pop
dec
mov
add
mov
sbb
mov
enter
int
aam
push
pop
imul
in
add
xor
and
adc
enter
or
mov
into
and
lahf
add
std
scas
and
push
mov
lret
sbb
jp
rolb
xchg
mov
inc
clc
pop
rclb
push
repz
lods
jmp
add
add
cmp
fcomps
pop
inc
hlt
cmp
dec
mov
rolb
dec
cmp
dec
sbb
hlt
gs
jg
clc
mov
test
xchg
cmp
mov
xchg
outsb
int
jmp
fistpl
rolb
mov
add
sbb
dec
xchg
ret
jns
mulb
fstps
adc
loope
pop
pop
mov
rorb
push
push
sub
mov
mov
jecxz
push
psubusb
xchg
fiadds
inc
pop
mov
or
add
jge
data16
sarl
sbb
movsb
push
sti
jg
fdiv
push
mov
in
mov
mov
stc
out
sub
push
cmp
cmp
push
mov
and
std
inc
jae
and
outsb
and
ret
or
xchg
adc
outsl
and
push
pop
cmpsb
and
and
shll
loop
mov
mov
dec
xchg
fstpt
clc
or
stos
in
ret
frstor
mov
push
inc
push
outsb
jge
sub
insb
lahf
out
out
dec
xchg
jge
push
rorb
jle
fbstp
cmpsb
mulb
mov
cmpsb
pop
xchg
sub
lea
adc
cli
push
mov
push
jge
mov
dec
pop
xor
adc
jp
imul
add
xchg
sbb
ljmp
adcb
je
ss
pop
jnp
xor
jbe
out
sub
jae
ja
cwtl
hlt
mov
lret
lods
dec
and
jb
push
outsl
hlt
testl
xchg
mov
adc
jns
inc
and
clc
and
xchg
outsl
cmpsl
in
xchg
mov
mov
shlb
iret
dec
pop
loope
cwtl
fisttpll
mov
mov
in
sub
add
cmp
dec
out
mov
mov
adc
jae
mov
cli
jb
mov
stc
cmp
jge
cmc
loope
lds
push
or
scas
push
cmp
pop
and
inc
scas
push
scas
cmc
cmp
sub
mov
xor
xchg
xorl
push
xchg
dec
pop
lock
adc
mov
mov
adc
loope
repz
add
rcl
outsl
jno
ss
adc
push
mov
xor
loope
or
roll
fidivl
jns
jle
adc
dec
call
scas
fldcw
test
inc
dec
xchg
into
jb
test
inc
pusha
mov
sbb
movsb
in
ret
push
inc
inc
sub
dec
das
push
iret
fbstp
and
mov
insb
fiadds
or
scas
rol
xchg
push
aam
xor
aaa
or
cmp
orl
adc
je
addr16
or
in
mov
imul
push
cmpsl
adc
aas
sahf
jmp
xlat
arpl
scas
out
stos
push
or
mov
pop
inc
cld
in
cmp
jne
cmp
sub
call
jle
inc
outsb
outsb
cld
sub
arpl
bound
stos
fmul
cmpsb
bound
pop
inc
lock
sbb
cmp
xchg
inc
push
movsb
lahf
pop
icebp
and
xchg
add
mov
push
imul
pop
lea
subl
push
and
scas
and
jmp
xor
loop
add
or
jae
inc
pop
xchg
and
fildl
test
call
test
popf
and
andb
mov
add
sub
shll
mov
fisubrs
lock
adc
stos
mov
dec
out
pop
stos
shl
xchg
mov
lret
ret
jg
aad
lret
mov
sub
cltd
jns
sbb
mov
lods
cmp
jbe
cmp
sar
xor
fisubrl
add
xchg
rolb
testb
and
sbb
lods
pop
aas
in
jg
mov
jb
mov
mov
mov
outsb
in
addr16
cmc
sbb
mov
sub
xchg
cmpsb
mov
dec
and
inc
inc
pop
xor
and
mov
adc
jmp
popf
lret
dec
int3
cs
ficompl
cwtl
out
jecxz
mov
cmpl
leave
pop
or
add
xlat
and
rclb
inc
inc
push
test
stc
fldl
add
fcmovb
adc
mov
cmpsl
subl
mov
lea
mov
and
addb
outsb
jb
pushf
mov
jl
insb
insb
mov
repz
jge
sbb
std
gs
int
jne
ret
cmp
or
adc
ja
inc
cli
inc
inc
ljmp
and
es
push
ljmp
jnp
or
sbb
clc
pop
stos
icebp
adc
mov
lds
push
sarb
dec
adc
push
mov
stc
repnz
ja
ficompl
fimuls
mov
mov
adc
mov
or
push
test
jnp
adc
inc
push
adc
aad
jb
andl
int3
push
jnp
je
cmp
adc
rorb
cmpsl
outsb
pop
jl
inc
pop
mov
lret
out
add
add
xchg
push
mov
xchg
xor
mov
mov
mov
dec
cmp
jno
push
movsb
cmpsb
das
inc
mov
dec
xchg
xlat
dec
mov
int3
outsb
adc
mov
add
inc
sub
jb
ljmp
cmp
xor
icebp
and
xchg
cmp
loope
adc
pop
hlt
bnd
xchg
dec
sbbb
scas
jne
dec
test
mov
jl
lahf
mov
fisttps
testb
jno
lods
in
or
sub
sbb
and
xlat
out
daa
ficomps
cmp
mov
mov
shrl
xchg
push
mov
mov
add
movsb
push
pop
pop
add
stos
mov
add
ds
clc
ret
mov
push
enter
fs
icebp
inc
mov
sti
and
pop
jne
mov
dec
les
sbb
rorl
fsubs
push
mov
and
andb
xchg
clc
sti
pop
jns
cmp
das
dec
call
insl
pop
loope
xlat
loopne
jae
mov
jns
mov
lock
mov
pop
in
pop
dec
lds
xchg
js
and
push
adc
sbb
dec
pop
pushf
inc
ljmp
repz
xor
mov
call
mov
push
fdivrs
scas
or
addl
dec
xor
jecxz
lods
shll
aam
cmp
stos
cmp
xor
sbb
fnstenv
add
push
or
sub
out
aad
dec
sub
xchg
mov
jmp
mov
mov
sub
push
addl
sub
sub
mov
add
jecxz
std
sbb
lock
lds
jp
fldl
sub
xlat
ret
repnz
pusha
leave
pop
mov
jmp
mov
rclb
lret
pushf
xchg
lret
testl
std
adcl
lahf
cmp
int3
push
jae
sbb
pop
outsb
inc
aad
mov
aam
sbb
stc
mov
enter
fwait
nop
or
jle
rcll
std
sbb
cld
addr16
xchg
sub
jg
aaa
sahf
dec
cmp
xor
mov
jae
mov
and
cmp
ja
dec
aaa
into
cmpsl
cmp
push
or
inc
fistl
or
adc
pop
scas
xchg
lea
cltd
or
cwtl
lea
aam
adc
repz
push
dec
inc
dec
nop
cmp
cwtl
and
outsb
shlb
push
inc
sub
jle
lcall
mov
mov
sbb
sub
rcll
mov
bound
adc
insl
lahf
adc
cmpsb
mov
mov
pop
fcom
rclb
sbb
rclb
pop
xor
pusha
dec
sbb
dec
or
movsb
and
sbb
out
push
scas
lock
mov
bound
test
mov
subb
jge
dec
clc
inc
jge
pop
xor
shr
insl
jle
scas
xchg
jecxz
mov
inc
and
cmp
imul
push
and
add
lret
das
enter
out
mov
test
scas
aam
in
adc
rcll
cld
gs
int
mov
data16
test
push
mov
mov
shll
aaa
outsb
mov
push
jmp
jne
and
iret
cwtl
lock
add
dec
mov
cs
pop
iret
movsl
fistpl
push
lea
in
mov
mov
int3
push
test
cltd
popa
mov
mov
imul
orl
clc
cli
pushf
out
mov
cltd
inc
push
lods
mov
add
pusha
sar
icebp
outsb
push
dec
cmp
lds
xor
int3
in
test
adc
mov
stos
pop
xlat
jb
mov
fwait
pop
cmpsb
pushf
cli
xor
rcll
outsb
mov
push
in
jp
andl
cmp
mov
aas
iret
pop
testb
lock
add
jle
pop
fs
cmp
outsl
push
jbe
add
xor
seta
jno
sbb
add
dec
push
xchg
inc
inc
jmp
int
in
add
and
adc
leave
es
mov
jge
stc
and
dec
or
or
pop
mov
lret
adc
sti
mov
andnps
ss
mov
pop
and
daa
dec
iret
sub
int
in
fcomps
fidivrs
loop
std
insl
sub
out
fidivrl
enter
push
mov
movsb
int3
int
sti
push
pop
or
xor
loopne
insb
push
adcl
int3
sub
cs
testl
mov
loopne
sarl
out
jbe
mov
mov
in
sbb
cmp
mov
add
jg
and
leave
mov
int3
lods
sbb
jp
inc
call
adc
mov
push
sub
lods
insl
mov
lahf
inc
jge
mov
push
push
mov
es
lret
mov
leave
xchg
mov
dec
push
jae
add
icebp
or
js
test
mov
mov
cmpb
aad
cmp
out
mov
jns
mov
jbe
ret
sbb
out
push
mov
or
repnz
bound
pop
arpl
mov
arpl
lds
sbbl
xchg
shl
dec
stos
cmp
jns
rcr
pop
and
or
push
jmp
subb
mov
test
jbe
add
jmp
sahf
and
jp
test
test
pop
and
xor
ss
out
cmpsb
jne
movsl
mov
nop
jg
mov
push
icebp
pop
xor
sub
lock
into
in
push
ljmp
movsb
jne
mov
mov
loop
mov
adc
cwtl
jae
mov
mov
pop
nop
mov
insb
xchg
mov
xchg
mov
jle
iret
xchg
fldl
call
jmp
xchg
imul
pop
sbb
mov
mov
inc
idivb
aaa
arpl
jmp
mov
inc
and
xchg
mov
or
mov
sbb
push
test
inc
pop
ret
movsl
mov
addr16
dec
out
stos
add
pop
add
insl
rolb
xor
mov
sub
or
mov
call
daa
popa
and
jno
sub
xchg
and
add
int3
out
xor
xchg
imul
je
mov
das
enter
add
pushf
out
mov
lcall
lock
push
test
cmp
pop
inc
push
aas
insb
lret
sub
in
aam
dec
aad
inc
jne
fidivl
fs
in
cmp
add
cli
fstpl
pop
std
leave
je
pop
mov
push
and
mov
add
loope
stc
inc
cwtl
mov
adc
dec
mov
ss
sbb
add
add
imul
cmp
push
mov
aaa
cmp
pop
jne
sub
add
adc
or
inc
int3
into
inc
jns
fdivl
les
ret
pop
mov
dec
out
pusha
test
lds
mov
cmp
mov
inc
and
clc
mov
jecxz
lock
les
imul
sub
dec
cltd
pop
sbb
int3
dec
fimull
xor
jl
pop
adc
ret
xor
push
jl
xor
xchg
jl
call
adc
pop
mov
sub
stc
scas
arpl
pop
xchg
lock
jle
mov
jl
and
cld
ret
ss
xchg
and
shrb
into
arpl
pop
sarb
mov
mov
xchg
hlt
xchg
xchg
inc
cmp
insl
fisubs
test
jmp
ljmp
in
je
xorl
sub
ja
lock
mov
pop
jl
addl
movsb
cmp
loopne
shlb
pop
adc
sbb
mov
sub
scas
lods
rorb
mov
dec
mov
inc
jae
xchg
or
jp
dec
scas
scas
sub
pop
imul
js
adc
mov
cld
push
xor
mov
jns
ror
dec
xor
cmp
and
and
cmpsl
into
xchg
xchg
cmp
sub
call
and
cmp
xchg
sbb
add
jno
push
add
call
pop
mov
lock
repnz
into
movsl
xchg
cs
aas
sub
mov
xor
inc
outsl
inc
or
sbb
fwait
stos
fwait
les
orl
cmp
loop
stos
mov
minps
mov
xchg
pushf
xor
mov
cmp
es
ss
sti
and
movsb
xchg
lods
idiv
or
inc
lahf
shlb
pop
stc
mov
xor
xor
adc
gs
roll
mov
cli
stc
fdivr
dec
pop
stc
mov
mov
test
scas
mov
movsb
lcall
cmp
dec
arpl
inc
inc
add
js
loope
pop
add
mov
cmp
sub
lock
xor
pop
nop
lcall
stos
popa
out
push
imul
dec
repz
test
test
outsb
mov
shlb
cmp
xchg
dec
mov
cmp
push
jg
stos
mov
je
pushf
xor
leave
movsl
xor
mov
jl
fisubrl
repz
mov
sub
push
push
addr16
icebp
xchg
dec
data16
outsl
add
jnp
shrb
pushf
cmpsb
pop
movsl
cmpb
xchg
cmp
lret
ret
lods
and
mov
fldl
cmp
sub
loopne
and
jbe
out
dec
rolb
repnz
adc
lret
insl
jl
icebp
sub
and
mov
neg
and
or
inc
test
adc
push
test
mov
popa
psrld
push
je
push
xchg
gs
xchg
push
sahf
adc
das
stc
mov
xor
dec
fistpl
mov
fcmovnu
jbe
test
mov
jo
mov
inc
or
int
push
sbb
pop
data16
jae
gs
inc
mov
scas
in
or
arpl
sbb
sbb
inc
jae
inc
testl
add
outsl
inc
inc
loopne
and
rorl
pop
ja
lock
cmp
pop
mov
xchg
ret
test
and
insb
jnp
push
push
stos
dec
mov
repz
sub
pushf
icebp
idivl
test
jns
out
dec
jle
or
ficoms
je
es
sahf
jbe
cltd
negb
mov
jl
mov
dec
loope
jnp
sbbl
bound
lret
fdiv
add
pop
push
mov
pop
and
dec
mov
ret
daa
sub
cmc
aam
xlat
outsb
out
dec
rorb
subl
nop
imul
scas
mov
push
jae
popf
inc
das
cmc
loope,pn
dec
insb
scas
pusha
lret
xchg
push
js
mov
push
arpl
ja
imul
cli
shll
push
popf
shrb
xor
or
mov
xchg
xor
imul
adc
fucom
lds
mov
sti
jge
xor
mov
xchg
test
insb
and
movsb
push
pop
mov
cmc
lret
testl
xlat
sbb
adc
xchg
repz
or
test
insb
inc
jbe
adc
fists
xchg
dec
add
in
adc
inc
lods
sbb
inc
fisubl
pop
sbb
ja
xchg
mov
subl
cltd
or
ss
xchg
cmp
sahf
cmpsb
push
jmp
adcb
out
loop
scas
xor
outsb
mov
cwtl
sbb
loop
add
mov
dec
sub
loop
push
sbb
xor
adcb
cmp
push
push
popa
dec
xchg
stos
cltd
add
aam
mov
outsb
in
xchg
and
or
leave
iret
hlt
popa
sbb
adc
adc
fnstsw
mov
dec
enter
pop
scas
pusha
pop
and
outsl
jae
cld
pop
inc
ds
ficomps
cmpb
sbbl
pushf
xchg
sbbl
push
fdiv
or
shrl
xchg
adc
mov
stos
mov
test
push
mov
rcrb
fs
pushf
push
sub
sbb
xchg
cmp
fistps
inc
subl
fwait
shlb
fsubl
mov
xchg
mov
pop
ljmp
sbb
sbb
clc
sub
fcompl
daa
dec
sub
ret
sub
adc
scas
movq
rep
fisttpl
lahf
jle
ret
filds
cmp
pusha
adc
fnstsw
jne
push
or
adc
or
mov
mov
and
je
hlt
loop,pn
icebp
ror
leave
mov
movsb
movsb
repz
sbb
popa
mull
in
into
and
mov
adc
stos
movsl
imul
scas
outsl
mov
push
or
jno
pop
xchg
icebp
jl
pop
fmulp
push
sub
daa
fs
pusha
mov
cwtl
mov
dec
shll
imul
inc
dec
xchg
dec
subl
das
xchg
and
mul
mov
mov
scas
loope
mov
pop
cld
jnp
movsb
or
cmpsl
inc
enter
bound
inc
inc
rcl
sbb
sbb
out
sbb
fwait
loopne
jne
int
pop
mov
add
popf
dec
cmpsl
sbb
out
aam
adc
shlb
adcl
mov
jp
lods
lahf
lods
jb
pop
hlt
cmp
adc
pushf
addr16
movsl
test
ljmp
mov
aaa
jnp
xlat
mov
xor
xchg
mov
xchg
daa
push
idivl
mov
mov
inc
push
jne
lds
or
arpl
std
xor
jae
aad
jns
inc
fbld
sbb
dec
loopne
rcll
aad
mov
mov
and
jb
adc
push
sub
arpl
mov
push
adc
sbb
xchg
dec
fisttpll
add
fnstsw
ret
in
in
and
mov
cwtl
sub
jo
adc
mov
sub
and
outsb
lea
jb
mov
jge
or
sbb
lock
hlt
out
mov
mov
inc
neg
loopne
pop
popf
mov
iret
jp
pop
or
testb
movsb
mov
in
jb
imul
and
sahf
or
cmc
mov
push
lods
adc
stc
adc
cld
jmp
cmp
push
mov
sbb
xor
add
push
cmp
push
pop
call
jle
and
add
push
jne
mov
jae
loopne
mov
xchg
xor
jo
mov
push
aam
mov
mov
gs
ror
outsl
mov
jb
push
fnstenv
xor
mov
repnz
xchg
dec
cld
int3
sbb
add
test
decb
rcrl
sbb
bound
add
std
fsubs
jle
out
xchg
cli
push
out
jns
ljmp
js
add
lods
pusha
cli
pop
aas
cmp
out
insl
add
insb
shll
data16
mov
mov
pop
fwait
lcall
dec
and
cmp
out
mov
gs
out
push
pusha
in
pop
data16
lock
sahf
xlat
dec
pop
jno
sarb
int3
aam
or
pop
dec
jg
xor
in
gs
cli
fisttpl
add
outsb
in
ljmp
inc
jle
int
dec
popa
jnp
push
add
inc
cmpsl
pusha
sti
fdivrl
mov
iret
jle
add
jno
ds
sahf
out
xchg
cmpsl
jmp
jg
subb
int
sti
jb
sub
xor
cmpsl
jl
in
mov
int3
addb
mov
inc
lock
repz
mov
cmpsb
dec
add
push
iret
xor
pop
push
pop
push
mov
sbb
cmc
lods
int
sbb
ss
dec
pop
pop
sbb
jns
dec
add
test
jo
add
mov
mov
inc
mov
mov
push
in
adc
adc
lock
and
cwtl
popa
scas
mov
jg
pop
dec
or
inc
ret
data16
mov
mov
ljmp
pop
xor
jmp
jg
in
add
push
or
sbbl
daa
out
stc
jns
and
xlat
outsl
out
test
jl
out
inc
das
test
ja
jge
out
dec
and
push
test
insb
or
pop
xchg
jns
call
lcall
cmp
sub
loopne
movsl
sub
or
imul
imull
movsb
aam
ret
movsl
std
inc
sti
das
push
imul
xchg
mov
test
inc
and
orl
jns
cmp
lea
sub
cmpb
rorb
push
es
cld
sarb
add
xor
mov
lret
xor
mov
push
xchg
imulb
cs
stos
gs
cmc
icebp
dec
sub
rcl
mov
adc
fistpl
or
nop
and
xchg
idiv
and
imul
and
xchg
mov
jns
sbb
jnp
into
mov
jg
popf
mov
ja
test
cltd
outsb
or
jns
mov
stc
jb
insb
sbb
adc
loope
pop
jo
scas
inc
pop
ds
sub
enter
or
mov
outsl
fwait
xor
inc
pop
cmc
outsb
adc
lds
rolb
mov
repz
out
int3
mov
adc
insl
faddl
sub
cmp
jl
stos
adc
subl
fs
ret
jp
cli
dec
mov
lods
leave
aas
int3
ret
fstpl
lods
xor
call
and
cmc
nop
and
mov
in
xchg
loopne
xor
testl
int3
mov
sahf
fs
negw
or
test
int
jnp
xor
mov
mov
jmp
add
leave
pop
or
fwait
add
mov
mov
xor
or
js
xor
outsb
mov
cld
pop
cmp
dec
adc
and
sbb
daa
cmpsl
pop
jp
dec
outsl
sub
js
mov
jp
push
push
mov
jns
test
aad
xor
cmp
mov
in
imull
movsb
aam
ret
movsl
std
inc
sti
das
push
imul
xchg
mov
test
inc
and
scas
idivb
dec
movsb
adc
stc
cmp
and
xchg
push
add
mov
lahf
repnz
fs
push
pusha
cmp
mov
sahf
xchg
jg
dec
cmp
push
xchg
sbbl
xchg
outsl
outsl
inc
xor
bound
stos
mov
adc
pop
dec
pop
into
pop
call
aam
test
repnz
and
and
add
push
adcl
pop
mov
adc
xchg
and
jmp
lock
push
iret
mov
mov
outsb
mov
sub
lret
imul
mov
mov
mov
push
into
jecxz
and
daa
stos
out
push
adc
pop
sahf
cmp
and
mov
inc
test
lret
or
adc
lcall
sub
inc
cmp
lds
mov
xor
xor
into
xchg
xchg
mov
mov
pop
pop
cmpsb
mov
inc
dec
rol
push
mov
ret
or
xchg
pop
jnp
or
push
cwtl
cmp
xor
test
push
lds
cmp
jo
xchg
fisubrs
pop
pop
or
dec
mov
and
into
xor
cmp
pop
xchg
add
mov
xchg
hlt
pop
test
in
inc
pop
sbb
push
in
imull
mov
rcll
das
stc
imulb
push
mov
test
mulps
idivb
xlat
ss
pushf
shll
mov
jbe
jno
and
data16
ljmp
les
mov
inc
dec
movsb
sbb
popl
ljmp
sbb
jae
in
fmul
leave
sbb
push
data16
rcl
mov
jb
and
loope
pop
lods
sbb
out
lds
jno
jo
mov
and
push
dec
mov
xor
ljmp
cli
inc
or
lret
xorb
inc
cmp
xor
mov
dec
push
xchg
pop
or
insb
loopne
dec
aam
mov
scas
mov
dec
jno
in
loopne
and
add
mov
test
neg
subl
arpl
call
mov
bound
mov
out
mov
in
fldcw
xchg
jns
adc
cli
adc
add
mov
sbb
lcall
add
inc
jl
lret
pop
mov
cmp
inc
lock
add
sub
push
test
pop
mov
adc
dec
lods
mov
imul
fmulp
pop
xchg
mov
and
lahf
mov
mov
push
add
fdivrp
out
mov
out
mov
insl
and
insl
xchg
aad
dec
popf
push
stos
scas
xor
movsb
push
adc
push
jmp
hlt
clc
jmp
lock
inc
pop
sub
lea
fisubl
jnp
or
inc
xchg
iret
icebp
inc
mov
mov
sahf
iret
cmc
nop
push
mov
inc
xor
stc
data16
leave
rorl
jp
xchg
fcoms
fdivs
push
xchg
xor
pop
aam
shll
add
mov
pop
int
jno
scas
mov
sbb
iret
inc
jle
or
and
jecxz
and
insb
cs
lcall
enter
clc
mov
xor
sbb
stos
mov
rclb
movsb
shlb
pop
addb
ret
push
cmpsb
scas
pop
sub
cltd
push
jecxz
pop
test
insb
adc
movsl
jecxz
mov
pop
mov
daa
inc
out
push
sub
test
adc
sbb
aas
add
iret
out
ret
jb
xor
lods
adc
nop
orl
cmpsb
lea
add
push
and
mov
mov
adc
or
push
int3
icebp
and
test
push
mov
push
mov
insl
aad
imul
sbb
mov
mov
xchg
loop
scas
rclb
sbb
iret
imul
das
nop
aam
lds
ds
int
dec
popa
gs
sub
imul
fildll
xchg
fstpl
jg
lret
leave
mov
cld
push
cmpsl
xlat
cmp
inc
jae
nop
and
dec
negb
cs
in
jno
lcall
jg
jg
cwtl
mov
xor
insb
adc
in
inc
xchg
outsl
insl
cli
push
popa
or
popf
and
pushf
add
add
nop
jle
mov
cmpsb
jl
aad
dec
cmp
sbb
mov
es
xor
xlat
xchg
push
aas
mov
xchg
lods
jge
inc
xor
mov
adc
push
sub
push
lea
jno
scas
and
js
push
imul
outsl
sub
scas
dec
pop
ja
ds
out
add
or
sbb
and
pusha
or
jmp
dec
in
push
push
pop
inc
cmpsl
xor
add
fcoml
mov
loopne
sbb
pushf
ret
in
sbb
xchg
in
rol
fimuls
push
mov
mov
popl
stos
aas
std
inc
pop
or
test
loope
ljmp
adc
flds
ss
mov
out
mov
mov
test
lock
ja
cmp
outsb
pop
xor
testl
pop
std
notb
push
aad
fdivrl
dec
leave
pop
je
push
pop
or
push
orl
ret
cmc
and
mov
jmp
sbbl
icebp
jmp
movsl
adcb
sti
mov
jbe
xchg
pop
xor
jno
icebp
dec
mov
add
int3
sub
mov
cs
dec
and
jl
push
cld
pop
mov
add
mov
popa
lcall
fiaddl
xchg
cmp
shlb
std
jmp
pusha
mov
xor
inc
pop
js
es
insb
fsubrl
sub
int
inc
push
insl
sbb
sub
xchg
cmp
insl
mov
xchg
jl
adc
aaa
jle
dec
xor
inc
cmc
movsb
lea
fildl
adc
ljmp
and
add
aam
jne
and
roll
pop
adc
cmp
sbb
test
sub
push
gs
in
xor
out
xchg
jecxz
out
xor
dec
push
in
filds
pop
xor
xchg
pop
cltd
push
inc
test
cs
push
cmp
mov
cmpl
push
loopne
mov
cld
lock
into
bound
or
mov
bound
inc
xchg
adc
xchg
push
dec
clc
or
idiv
jge
sbb
fcoml
call
leave
xchg
arpl
adcl
and
cmp
testl
and
and
jo
xlat
push
inc
inc
and
test
xchg
cmp
imul
lcall
int
push
push
cli
cmp
dec
mov
cmp
jne
jp
movsl
inc
outsb
fisubl
lret
adc
or
pop
mov
xchg
test
aas
mull
rdtsc
and
call
sub
es
sub
loope
pop
or
inc
xor
sub
and
in
jge
mul
xor
add
mov
fbld
divb
and
mov
xor
mov
cld
jae
lods
cli
daa
fsts
aad
in
mov
fucomi
ss
movsb
out
repz
ja
xlat
mov
mov
out
test
pop
pop
bound
rcr
mov
fstpl
out
test
mov
outsb
cli
repnz
stos
das
jl
lahf
jmp
adc
add
add
jb
hlt
lcall
out
adc
call
bound
sub
adc
adc
rolb
sbb
mov
xchg
outsl
pop
push
jp
push
inc
add
cwtl
cmc
mov
add
xor
jle
mov
jecxz
out
push
lock
add
push
nop
ret
pushf
je
and
mov
push
test
xlat
repnz
or
test
cwtl
ljmp
mov
sahf
and
test
sub
add
test
jge
mov
inc
mov
and
xor
cmp
out
xor
cli
push
rol
mov
fisubrs
rcll
scas
mov
mov
sub
stc
cmp
pop
cmpsb
and
bound
adc
push
jae
jne
ja
aaa
mov
cmc
mov
call
leave
sarb
ficomps
dec
ds
test
pusha
lea
icebp
mov
inc
sub
inc
mov
cli
jmp
fnsave
sub
out
lock
jmp
add
jns
or
cmpsl
and
pusha
sarb
rorb
fnstenv
fsub
jp
cwtl
movsl
push
movsl
dec
pop
jmp
mov
in
sbb
lods
cmp
lret
cs
dec
pushf
ljmp
cmp
pop
inc
mov
pop
les
inc
cmp
aam
lods
shr
pop
cmp
fs
fbstp
outsl
jmp
lea
addb
ror
adc
or
cmp
xchg
insb
cmc
xor
or
jb
stc
insb
cli
mov
ds
push
cmp
pop
mov
and
out
jns
outsb
xlat
or
push
je
cli
movsl
mov
test
rcr
incb
jae
jb
sub
inc
fcomps
and
scas
xchg
arpl
sbb
dec
push
pushf
pop
cmp
in
add
test
mov
mov
imul
pop
xchg
xor
scas
mov
mov
sbb
xor
inc
or
push
ds
add
xchg
pop
loopne
cmp
call
lahf
leave
adc
movsw
loopne
in
addl
fadd
jmp
inc
or
push
nop
sub
add
jbe
mov
dec
adc
into
push
repz
mov
xlat
sub
and
pop
test
cltd
sub
je
sub
inc
sbb
fs
ret
lock
and
jnp
mov
dec
push
pushf
adc
dec
adc
add
fisubrl
push
fstpt
into
jae
and
fimull
imul
out
jns
push
and
idivb
and
sub
frstor
push
mov
cmp
or
cmp
xchg
jno
xor
mov
xchg
les
psubsb
das
pushf
mov
and
testb
push
stc
mov
mov
pop
mov
bound
and
pop
scas
lret
rcr
mov
outsb
daa
sbb
pop
jmp
test
jp
sti
add
jb
scas
in
jo
insb
loop
and
pop
push
es
xchg
dec
mov
cmovl
icebp
nop
outsb
mov
imul
sbb
inc
sbb
inc
cmp
les
test
adc
int3
xor
mov
or
jbe
inc
sub
add
xchg
sarb
sub
xsaveopt
mov
mov
add
xchg
mov
cmpl
adc
add
sub
cwtl
adc
inc
push
lret
packuswb
cmp
cmp
xchg
aaa
sub
inc
jb
xchg
fistpl
xchg
mov
jg
aaa
imul
mov
adc
xchg
pop
sbb
inc
jo
stc
in
sarl
or
ss
sub
subb
mov
xor
pop
imul
inc
jmp
adc
inc
or
push
sbb
inc
sub
push
shr
stc
ret
scas
aas
fnsave
popa
in
shll
pop
cmpl
cmc
pop
aaa
addb
rolb
xchg
xor
add
testb
mov
pop
insb
cmp
in
das
mov
or
sub
push
les
hlt
gs
fsubrl
aas
mov
rcll
call
mov
scas
cmp
adc
daa
push
pop
mov
or
movl
adc
pop
hlt
push
xor
adc
out
lods
inc
das
je
push
das
out
std
ret
add
inc
ljmp
mov
icebp
enter
jb
imul
lahf
push
cmp
lret
inc
lcall
jns
cmp
clc
dec
movsl
in
mov
xchg
rcrl
and
and
dec
jg
pop
jo
xor
add
lods
push
cmp
enter
dec
push
ss
sbb
pop
sub
and
dec
xor
insl
inc
addr16
insb
xor
mov
addr16
pop
mov
mov
icebp
pop
ficomps
inc
mov
pop
mov
push
adc
inc
xchg
insb
cmc
ret
sbb
jle
pop
sub
and
xchg
rcr
lahf
dec
xchg
xor
jl
stc
jnp
sahf
mov
cmpsl
or
push
adc
add
jecxz
sub
pop
testb
mov
pop
push
dec
sarb
stc
outsb
and
loop
fmuls
sub
inc
lods
jge
push
and
add
xor
cwtl
jecxz
adc
lcall
mov
test
test
cmp
xchg
sub
fisubs
loope
aad
scas
xor
jb
adc
imul
loope
les
dec
loope
call
xchg
cltd
cmp
stc
push
dec
pop
dec
pop
xchg
sbb
dec
lock
lahf
mov
inc
lds
jmp
mov
mov
dec
aas
jae
cmovne
or
mov
insb
xor
adc
rcrb
lcall
cmp
fs
jbe
ret
ljmp
dec
addr16
jae
in
dec
xlat
mov
or
fdiv
cli
pop
mov
jp
lret
adc
xchg
lcall
aad
fildl
lock
mov
fnstcw
mov
mov
sarb
xchg
int3
fwait
pop
adc
in
mov
mulb
stc
adc
xlat
sbb
dec
aam
mov
or
or
bound
mov
jg
arpl
lds
idivl
mov
push
or
aad
popa
pop
pop
ds
leave
mov
mov
ljmp
cmp
fists
adc
jmp
lds
nop
push
dec
jl
add
faddl
add
notb
das
loopne
addr16
mov
in
push
mov
rorb
mov
xchg
iret
leave
lret
movl
fwait
dec
mov
xchg
imul
xor
or
lahf
xor
push
pop
fsubl
adc
sbb
adc
dec
jl
push
leave
jne
sub
cmp
xchg
sub
int
bound
pusha
and
outsb
cli
jmp
hlt
popa
xor
mov
cmp
xchg
xchg
jmp
jp
jmp
mov
xchg
pop
push
sti
sbb
push
shl
sub
adc
mov
sbb
loopne
xchg
xor
test
sbb
andb
xchg
pop
int
gs
cmp
divl
icebp
or
fwait
test
push
inc
pop
xor
mov
xchg
mov
mov
inc
cmc
addr16
sub
icebp
orl
mov
sub
movsb
push
sbb
xor
cmp
sbb
inc
pop
call
cmp
lods
test
jnp
cld
sbb
push
xor
dec
stos
push
scas
dec
xor
mov
insb
sbb
and
adc
leave
ja
icebp
inc
in
mov
jno
roll
and
cmp
in
or
stos
or
pop
je
or
inc
xorb
lods
push
in
mov
mov
jg
test
push
iret
rcll
sarl
or
jp
jl
and
add
rcrl
mov
mov
jnp
cwtl
mov
xchg
insl
mov
bound
cmp
mov
pop
and
xor
jecxz
cli
add
push
insb
sub
je
dec
or
pop
sub
mov
mov
les
push
aas
push
dec
into
out
js
test
daa
or
add
sbb
mov
scas
js
movsl
xor
add
xchg
cltd
cs
or
cli
and
push
ret
jno
mov
add
push
jae
cmp
sub
add
les
std
push
xchg
and
inc
pop
pop
xchg
mov
mov
mov
pop
pop
dec
or
movsb
dec
insb
test
mov
jo
sarl
jae
int
ds
or
jle
push
dec
cmp
push
clc
arpl
outsb
xchg
addr16
cs
shll
mov
mov
test
inc
jp
mov
adc
mov
push
inc
mov
test
jno
icebp
inc
stc
inc
fiaddl
push
bound
pop
and
inc
pushf
xchg
test
cmc
call
jbe
mov
add
push
into
jnp
add
xlat
loope
cmp
adc
ja
mov
mov
in
jl
les
sbb
leave
sbb
ljmp
sbb
fwait
dec
add
lods
inc
in
or
and
push
xchg
jb
jp
dec
inc
rcrb
or
mov
fsts
jns
jle
mov
mov
sbb
rolb
mov
movsl
push
and
loop
mov
and
inc
test
sbb
sbb
cmp
sub
lret
popa
cmpl
cmp
movsb
mov
jmp
xor
outsb
jle
push
mov
aad
popa
sbb
popf
jo
or
fdivr
inc
repz
lret
loop
arpl
loopne
cmpsb
lcall
pop
sbbb
sub
add
icebp
stos
int
mov
add
fwait
psrlq
and
movsl
stc
hlt
cmc
imul
and
xor
pop
fstl
inc
ss
es
movsl
int3
clc
and
push
xor
pusha
out
popa
das
sub
pop
add
subl
cld
rclb
shrl
push
jecxz
enter
cmp
mov
in
jge
movsl
sub
mov
sarb
loope
pop
mov
adc
rorl
push
xchg
mov
mov
cmp
push
jle
in
std
ja
inc
inc
nop
lahf
inc
push
or
push
mov
mov
aas
test
xorl
sub
dec
ja
push
pop
les
shlb
push
les
insl
add
mov
push
fimull
jno
popa
test
ljmp
jne
push
cwtl
jmp
out
hlt
stos
into
cld
cmp
je
ret
repnz
or
movsb
std
jnp
push
and
cmc
xchg
cmp
xor
xlat
mov
cmp
inc
lahf
out
sub
rclb
in
popa
jge
jmp
and
loop
jnp
mov
adc
sbb
cmp
sbb
jo
xchg
add
xor
add
cmp
les
rol
jge
xor
sbb
cmpsl
jns
rcrb
sti
pop
dec
fisttpll
push
pop
mov
lret
pop
imul
mov
add
jge
fldcw
mov
xchg
mov
sti
push
or
lret
jb
push
xlat
insl
pop
stc
movsb
fnstenv
jno
aad
sub
mov
cwtl
loopne
jmp
sub
sub
push
mov
lods
mov
adc
dec
popf
rcrb
jno
cltd
lods
fsts
out
adc
xlat
sbb
addr16
mov
loope
dec
icebp
subl
movsb
or
ja
call
lahf
out
mov
lar
mov
jbe
lock
mov
sbbl
pop
loope
test
imul
mov
push
pop
mov
xchg
sub
dec
mov
pop
sub
xor
lock
adc
aas
cmc
add
pop
pusha
popf
mov
sbb
sbb
xor
or
mov
mov
dec
js
mov
push
jb
and
int
lds
test
push
and
ret
xor
mov
mov
movsb
push
xchg
pop
push
std
jg
jecxz
and
repnz
jno
imulb
inc
in
push
dec
push
jo
adc
push
dec
or
jno
mov
cli
das
lods
aas
xchg
mulb
adc
rcrb
insl
mov
or
inc
mov
lods
inc
add
popf
pushf
jmp
ficompl
test
cld
jno
ret
icebp
pushf
cmp
xchg
test
sbb
leave
insb
sub
inc
sbb
mov
js
aam
push
xchg
jge
scas
push
in
pop
jmp
popa
leave
pop
or
mov
push
xlat
adc
jl
lods
sbb
or
mov
aad
jmp
dec
xchg
notl
add
xchg
dec
mov
shrl
subl
dec
incb
scas
push
dec
mov
cmp
test
mov
fistpl
jge
loop
or
jecxz
into
test
hlt
fs
xchg
enter
lods
pop
or
fnstenv
insl
mov
scas
push
cwtl
mov
loopne
repnz
sbb
push
enter
ljmp
adc
shrl
add
jle
dec
lods
cmp
loopne
js
sbb
insl
scas
jbe
shrl
into
mov
jnp
fistl
xor
imul
cmp
mov
cld
pusha
test
xor
cmpb
fisubrs
and
outsl
mov
scas
mov
ret
push
xchg
aam
sbb
fadds
addl
jecxz
pop
pop
jmp
sahf
and
xchg
outsl
or
mov
fidivs
pop
inc
lea
lret
pop
push
jae
lds
or
cmp
xor
mov
fisttps
jecxz
mov
pop
dec
xor
mov
or
or
dec
xchg
test
sbb
cmp
jl
test
add
inc
mov
divps
stos
dec
sbb
push
into
scas
pop
push
mov
lret
add
loopne
or
add
sbb
jmp
dec
mov
lods
movsb
mov
fdiv
dec
rcrl
add
xchg
call
sarl
dec
cmp
test
dec
sub
mov
cmpsl
in
jp
shr
mov
and
es
xor
into
add
push
nop
mov
xlat
mov
loop
or
lods
push
mov
adc
mov
mov
mov
or
rol
mov
dec
lock
sub
fsubrs
jae
fstl
aam
inc
push
mov
lcall
sarb
in
leave
cmp
push
add
push
jnp
out
mov
das
jecxz
cmp
lods
fadds
addl
sbb
jecxz
dec
leave
scas
dec
lock
aaa
push
insl
repnz
bnd
hlt
mov
movups
lods
jbe
sahf
xor
xchg
and
cmpsb
je
pop
jno
cld
push
pop
cltd
or
outsb
add
inc
mov
sbb
pop
and
jecxz
push
aaa
mov
aad
jb
ret
repnz
movsb
cmp
and
or
out
aad
adc
scas
repnz
mov
shlb
jns
pop
adc
jbe
xor
decb
mov
mov
and
pop
sbb
pop
test
sub
fdivrp
insl
gs
pop
sub
mov
mov
out
and
lods
insb
adc
aaa
lods
jns
cltd
or
adc
lret
jno
jl
mov
mov
mov
subb
stc
ret
xor
sbb
cmp
or
pop
push
fimuls
pop
sbb
inc
pop
scas
fnstenv
dec
or
insb
dec
xor
notb
push
repz
add
in
sub
dec
outsb
sub
ljmp
or
cmp
inc
in
repnz
int3
stos
mov
es
xor
xor
fdivrl
fsubrl
cs
ja
mov
icebp
addb
mov
xchg
lcall
push
cmp
mov
mov
or
push
mov
cmpsb
xor
pop
ds
fstl
push
dec
sahf
xor
fdiv
aaa
or
in
sub
inc
jbe
pop
pop
gs
mov
mov
inc
cmp
adc
sbb
iret
or
xchg
mov
stc
push
xlat
pop
ret
push
aad
clc
sbb
push
sbb
mov
roll
sbb
lock
adcb
test
orb
loope
push
pminsw
jne
jne
les
mov
test
ds
cmpsb
outsb
xchg
iret
pop
jns
outsb
and
out
dec
pop
cmp
jne
scas
sbb
jmp
pop
fsub
outsb
mov
dec
sahf
adc
sbbb
addl
in
jmp
sbb
inc
inc
sbbb
icebp
scas
jmp
imul
jl
xchg
cmc
imul
lret
iret
icebp
jp
dec
jbe
sub
mov
test
andl
dec
inc
maxps
fs
and
lock
pop
loopne
push
inc
xor
outsb
repnz
mov
sbb
add
mov
test
lea
mov
push
aaa
div
pop
ss
scas
pop
jno
loope
sahf
jge
mov
cmp
mov
jp
sbb
cli
lret
cmp
xchg
icebp
and
pop
pop
scas
jno
icebp
cwtl
loope
adc
add
fadd
push
xor
cmp
pop
repz
add
sub
clc
int3
sbbb
enter
xor
or
sub
mov
mov
pop
cmp
add
xchg
into
ss
cmc
dec
xchg
daa
fimull
rolb
xbegin
mov
leave
in
mov
mov
sbb
jo
imul
dec
sbb
lahf
rcrb
jne
mov
test
push
cmp
incb
rolb
ljmp
sbb
bound
rclb
fstpl
pop
sbb
movsb
add
pop
adc
jmp
gs
sbb
pusha
int3
jecxz
adc
jle
jnp
add
pop
mov
dec
and
lock
mov
aas
jae
pusha
fstp
and
sbb
js
mov
sbb
mov
fcoml
mov
dec
mov
xor
ret
xchg
cmp
ja
pusha
je
cld
xchg
fbld
add
jl
adc
imul
cmc
imul
xor
movsb
jecxz
jge
push
inc
lods
and
dec
pop
jne
jle
jl
les
or
daa
lret
mov
mov
pop
das
mov
cld
push
and
sbb
sbb
dec
out
mov
aad
ret
imul
lods
jl
xor
jle
sub
pop
jnp
js
addr16
sub
pop
push
mov
insl
test
bound
pusha
inc
data16
sub
and
mov
sub
sbb
push
inc
push
std
adc
xorl
mov
jo
mov
imul
jns
adc
dec
fs
lea
sub
scas
fcmovbe
jmp
in
cmpsb
imul
stc
pop
fstpl
adc
mov
lds
mov
call
lahf
frstor
pmaddwd
mov
inc
sti
jb
jb
ljmp
lret
xor
jmp
dec
or
shll
das
call
popf
insb
cli
mov
pop
inc
pop
lods
movsb
outsb
in
push
xor
jne
xchg
or
add
cmc
stos
mov
imul
adc
pop
sub
jecxz
imul
lret
rcrb
mov
mov
in
sti
std
or
fwait
rclb
pop
and
jle
xor
pop
outsb
cmc
jns
or
pop
push
dec
scas
out
cmpsl
push
fsubrl
int
int
imul
inc
js
lret
or
inc
in
loopne
pop
stos
inc
out
scas
push
dec
push
mov
aas
add
imul
jns
hlt
push
pop
dec
and
adc
and
jp
cmp
lahf
push
pop
out
outsb
xor
mov
and
jns
mov
xor
or
out
mov
sarl
ud2
add
pop
bound
pusha
inc
mov
lods
test
sbb
cmc
jno
inc
and
mov
in
int
pop
fnstcw
sti
sub
push
push
inc
xchg
les
nop
mov
out
and
jmp
cli
push
shrb
jae
mov
add
aaa
or
loopne
stos
fstps
fmulp
xchg
add
into
push
in
test
adc
jbe
jge
outsl
loope
and
repnz
cmp
mov
out
inc
sub
push
mov
repz
ficoml
mov
adc
shrb
leave
mov
push
lds
dec
test
stc
into
adc
pop
xorb
adc
pusha
loopne
in
jge
jmp
add
and
jbe
int3
out
mov
fadds
add
adcb
stos
jg
mov
xlat
fadds
in
loop
pop
xchg
add
das
lods
es
xlat
jmp
lods
test
mov
or
pop
scas
and
enter
and
inc
xor
lret
push
sbb
jne
inc
je
js
xor
mov
ret
movsb
movl
sub
in
add
pop
pushl
adc
push
scas
mov
hlt
and
fimull
push
in
fisttpll
mov
mov
mov
in
and
cmp
mov
jns
aad
inc
adc
fwait
or
mov
out
inc
jbe
imul
mov
mov
loopne
sti
lahf
or
jle
ret
pop
mov
not
call
mov
scas
mov
adc
mov
and
into
push
mov
fcoml
rcl
lods
cmp
jle
adc
xlat
ja
cmp
push
sub
jge
jnp
xor
sub
adc
enter
lret
adc
loop
inc
mov
add
cmp
je
dec
xor
xor
andl
dec
push
popf
ret
cmp
and
lods
cmpb
jecxz
jecxz
xor
cli
jmp
cmp
sub
sbbl
aam
mov
mov
rclb
into
jge
movsb
test
jo
pusha
lds
addr16
testb
lcall
mov
dec
shrl
jmp
es
and
dec
jle
fldl
call
add
lcall
in
es
jbe
fs
inc
jns
jle
sub
pusha
les
sub
push
adc
xlat
sub
je
mov
lods
lea
jecxz
call
rorb
and
mov
js
test
fst
fldenv
addb
lock
mov
lds
aas
dec
xchg
cli
mov
scas
bnd
add
std
sbbl
stos
sti
outsl
mov
xor
push
add
push
addr16
xchg
out
and
mov
sbbb
addr16
call
daa
lahf
shl
inc
sub
cmp
int3
gs
aas
mov
push
shrb
or
fucomi
adc
inc
xchg
test
mov
ja
mov
sub
repnz
jo
sub
push
roll
xor
out
mov
sbb
or
aas
mov
pop
dec
movsl
mov
jbe
jmp
xchg
sbb
pop
aaa
jmp
jnp
mov
mov
and
lret
and
inc
push
jns
daa
inc
push
mov
repnz
pop
jbe
sbbl
dec
pop
rolb
push
pushf
shll
shr
mov
sar
add
pusha
ds
inc
inc
outsb
clc
cmp
dec
push
arpl
fisubs
inc
mov
or
push
in
in
pusha
cmp
pop
ret
out
leave
daa
mov
jne
dec
adc
adc
hlt
mov
stos
jl
dec
mov
pop
rclb
xor
jl
push
xor
jl
jl
push
pop
test
xor
dec
in
or
and
mov
sbb
jae
dec
sub
ds
pop
in
ret
xorb
test
sub
adc
fwait
cmpsb
add
fsub
dec
push
sahf
fidivrl
mov
sbb
or
sbb
dec
movl
lcall
dec
pop
mov
sahf
fcmovne
push
popa
outsb
scas
adc
jle
clc
je
sub
mov
push
add
mov
ljmp
cmp
sub
es
cmpsb
cmp
mov
push
push
insb
sub
adc
aam
add
ljmp
push
addb
jecxz
inc
mov
push
and
hlt
cs
pop
lahf
push
cmpsl
pop
das
sub
push
stos
jle
in
add
pushf
fwait
outsb
dec
add
push
push
fnsave
pop
test
pop
push
xor
xor
js
shl
xor
hlt
aam
pop
test
xor
pop
mov
ret
jge
mov
and
adc
xor
push
pop
movsl
inc
outsl
leave
or
call
xor
pop
push
dec
jbe
loope
test
add
cmp
adc
idiv
stos
push
and
dec
cmp
cli
js
movsl
in
repz
fldt
ret
jbe
fwait
je
mov
fdivp
cmp
and
mov
pushf
lods
cmp
cmp
ds
ljmp
xchg
inc
repz
mov
and
in
aaa
sti
out
sbb
cld
xchg
or
incb
frstor
xchg
fidivrl
rolb
inc
push
jnp
add
dec
call
aaa
movsl
test
popa
mov
jno
int
jmp
popf
or
ds
xor
lods
fistl
sub
jecxz
pop
das
into
sti
rcr
sub
sbb
inc
mov
mov
nop
and
sbbl
and
push
and
xchg
jge
mov
jbe
inc
clts
shll
mov
repnz
insl
pop
mov
aad
inc
sti
inc
cmpsl
jo
dec
loop
in
pop
pop
fadd
push
repnz
cmpsl
cli
jg
push
out
push
data16
ror
cli
std
jge
sbb
and
loop
hlt
adc
test
lret
jge
xchg
push
in
xor
pop
cmp
add
incl
add
add
or
nop
add
add
add
cwtl
add
add
add
add
add
or
add
jns
jae
dec
add
jae
je
push
add
add
xor
xor
add
dec
add
jae
je
xor
add
add
incl
add
add
or
nop
add
add
add
mov
xor
add
add
add
add
add
incl
add
add
add
add
add
incl
add
add
or
nop
add
add
add
fadds
xchg
add
push
ltr
add
add
add
incl
add
add
add
add
add
incl
add
add
or
nop
add
add
add
jl
mov
add
add
add
add
cmp
push
add
add
jns
jae
dec
add
jae
je
push
add
add
xor
xor
add
dec
add
jae
je
xor
add
add
incl
add
add
or
nop
add
add
add
push
add
add
add
push
add
add
ret
add
add
incl
add
add
incl
add
add
or
nop
add
add
add
and
pushf
add
add
add
add
add
add
jns
jae
push
add
add
push
add
add
xor
xor
add
push
add
add
xor
add
add
incl
add
add
or
nop
add
add
add
nop
add
add
add
add
or
add
add
add
add
jns
jae
dec
add
jae
je
push
add
add
xor
xor
add
dec
add
jae
je
xor
add
add
incl
add
add
add
add
add
add
add
jg
add
add
add
add
xor
push
add
incl
add
add
jb
and
insb
add
jae
je
add
add
add
add
incl
add
add
or
nop
add
add
add
adc
add
add
add
add
add
add
add
add
jns
jae
dec
add
jae
je
push
add
add
xor
xor
add
dec
add
jae
je
xor
add
add
incl
add
add
or
nop
add
add
add
nop
add
add
add
mov
add
add
mov
xchg
add
add
inc
add
inc
add
add
add
add
add
add
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
insl
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
je
jne
je
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
mov
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
ds
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
jae
gs
bound
add
add
je
add
sbb
xor
cmp
call
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
ss
adc
inc
ss
pushl
push
aaa
and
aaa
lock
pushl
push
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
push
cmp
cmp
outsb
cmp
add
adc
inc
popf
ret
xchg
pusha
jecxz
popf
stos
adc
