sbb
add
inc
scas
jne
fs
arpl
sbb
mov
les
xor
or
shlb
pusha
lds
mov
xor
mov
mov
sbb
push
mov
mov
test
jns
insb
aad
xor
add
lods
int
mov
jo
pushf
shr
jmp
stc
int3
inc
scas
pop
mov
push
ficoml
mov
data16
xchg
testl
call
lahf
or
pop
pop
test
lods
out
movsl
inc
rcrl
pop
pop
into
and
ja
inc
add
push
test
sbb
imul
aad
test
fildl
jne
outsl
xor
mov
sahf
ret
das
jmp
mov
or
push
sbbl
je
outsl
stc
ss
aaa
sti
clc
inc
fistl
subl
mov
cltd
lret
scas
les
and
xchg
jnp
fnstcw
add
outsb
xchg
aam
insb
push
mov
lods
mov
mov
cld
adc
inc
insl
insb
out
xor
dec
or
mov
mov
enter
das
cs
sbb
cmp
gs
pop
mov
sbb
addr16
xchg
movb
lods
stos
lea
repnz
pusha
sbb
mov
popa
je
inc
push
arpl
ret
popa
daa
pop
pop
dec
into
sbb
data16
dec
icebp
pop
add
shrl
fisttpll
jg
xchg
ljmp
mov
sarl
aas
clc
cmpsb
je
shrl
cmpl
lea
lods
ds
or
mov
in
pusha
or
mov
call
or
inc
ss
data16
xchg
or
dec
mov
lods
cmc
mov
lcall
or
sbb
push
popa
xchg
test
fisubrs
cmp
sahf
mov
xor
and
add
mov
cmc
mov
jle
push
cmp
sub
cmp
pop
pop
les
pop
test
jp
sbb
adc
or
stos
or
ret
inc
loopne
cli
xchg
pop
add
inc
sub
pushf
das
and
jmp
or
stos
pop
ret
xchg
mov
dec
inc
cmpsl
movsl
sbb
dec
pusha
jnp
push
sbb
xchg
lock
adc
xchg
js
cmc
sbb
jl
inc
sti
and
sub
inc
dec
or
xor
mov
scas
gs
popl
mov
aad
shrl
outsl
inc
or
jle
jp
test
std
push
xor
lahf
ja
scas
stos
daa
nop
jecxz
sub
pop
mov
repnz
inc
addr16
adc
add
adc
dec
aaa
lods
sbb
xchg
out
push
enter
lds
shlb
pusha
jecxz
xor
mov
cmpsl
mov
lds
or
xchg
jo
orl
pop
shr
clc
int
mov
sahf
rcl
adc
mov
push
pusha
in
test
dec
and
mov
insl
test
enter
filds
rorb
lahf
push
into
or
xchg
pop
push
data16
rcr
dec
add
stc
add
cmp
adc
out
fs
ret
out
mov
cwtl
mov
add
fisubl
sbb
mov
out
movaps
mov
cmp
gs
rorb
inc
imulb
and
push
arpl
test
push
mov
shlb
push
dec
inc
sarb
incb
pushf
addr16
sub
xor
xor
ret
adc
pop
mov
pop
xchg
mov
stos
sbb
dec
mov
sbb
lahf
mov
mov
push
push
mov
aam
mov
sub
lock
pop
mov
aaa
or
pushf
jecxz
cmp
sub
adc
scas
divl
sahf
and
mov
mov
clc
mov
insl
xchg
push
jl
insl
inc
daa
jecxz
cmp
and
leave
inc
mov
mov
push
mov
xchg
jecxz
xchg
out
inc
fmull
repz
aaa
std
shlb
aam
push
aaa
imul
mov
lcall
xor
out
cmp
lret
mov
stc
pop
jns
push
or
cmp
subl
fbstp
in
push
push
jnp
in
xchg
lds
les
pop
roll
pop
ja
out
cmc
sub
aam
sub
xchg
cmp
repz
dec
cmc
jecxz
lcall
aas
lods
roll
popa
pop
push
sti
insb
ss
push
cld
das
pop
pop
lods
adc
mov
insl
ljmp
in
pop
push
mov
addl
mov
jb
mov
addb
jg
sbb
xchg
imul
and
jo
pusha
insl
or
fisubs
inc
push
popa
insl
dec
adc
mov
je
jge
nop
fs
cmp
nop
in
loop
fidivs
repz
pop
adc
adc
fidivl
lcall
cmovp
mov
xor
insb
jo
out
inc
add
pop
sbb
sbb
sub
rorl
mov
xchg
repnz
xchg
push
push
mov
jle
cmpsb
add
xchg
inc
xchg
mov
xor
in
inc
in
sarb
fldl
clc
in
cmpsl
stos
sub
repnz
inc
aas
pop
dec
pop
jo
jp
mov
imul
cltd
xchg
add
inc
jmp
arpl
cmp
mov
cmpsb
iret
jno
cmp
xchg
fiaddl
push
jmp
lods
xchg
and
cwtl
push
test
loopne
and
loopne
test
addr16
lock
push
in
jo
pusha
cmp
mov
xchg
dec
dec
repz
out
repnz
dec
sbb
sbb
xor
imul
sti
xor
ds
fisttpl
jne
ljmp
fsubrl
sub
bound
pop
daa
fbstp
in
dec
inc
movsb
loopne
mov
in
jns
xor
inc
mov
inc
sbb
sub
mov
cwtl
pop
jecxz
adc
in
and
xor
outsl
or
jae
stos
aaa
or
xor
sbb
mov
mov
test
movsb
movb
pop
test
rcrb
es
jb
movsl
shll
mov
inc
xor
popf
sub
dec
cmovnp
in
or
dec
push
rclb
dec
imul
test
push
mov
pop
andb
cmp
push
clc
lock
aas
loope
mov
mov
xor
mov
rolb
pop
in
mov
push
inc
pop
mov
addr16
xor
loope
jle
fbld
sub
shrb
cmc
mov
xchg
clc
imul
or
mov
add
adc
dec
out
mov
sub
rcrb
xchg
ja
and
test
cli
enter
imul
pop
nop
or
stos
out
dec
xor
ljmp
mov
aas
inc
pushf
shrl
xlat
jbe
ljmp
mov
enter
xor
sub
mov
mov
pop
dec
dec
inc
pop
xchg
xchg
popa
stos
push
outsb
loop
in
shrl
dec
mov
in
cmp
dec
pop
loop
mov
push
and
jb
add
and
int
orl
lret
lret
inc
rol
cli
mov
push
sbb
xchg
clc
cmp
inc
mov
or
xor
fucomip
pop
push
sbb
mov
test
punpcklbw
add
mov
mov
dec
cmpsb
daa
and
add
in
ret
aas
out
mov
mov
testb
xchg
mov
cmp
pop
pop
ds
mov
sub
loop
nop
push
test
adc
pop
lea
in
push
or
fcoml
lods
pop
adc
rcr
fistps
aas
jge
fstpt
jmp
arpl
mov
push
push
sub
imul
lods
sub
mov
enter
fsubp
xor
dec
cli
mov
popa
les
push
sub
jle
das
enter
into
cmp
xchg
loope
test
xchg
and
and
mov
add
adc
idivl
push
jo
push
test
dec
mov
adc
es
repnz
jae
sub
neg
dec
inc
pop
fsubl
mov
outsl
mov
cwtl
dec
cwtl
aam
mov
add
mov
inc
int3
aaa
idiv
scas
inc
in
sarb
xlat
je
sahf
roll
cmpl
mov
in
mov
js
clc
sub
mov
shlb
mov
mov
push
ljmp
testb
adc
dec
mov
push
xchg
hlt
sbb
inc
xorl
jno
cld
cmp
clc
leave
icebp
mov
mov
pop
mov
fsubl
push
mov
mov
push
push
ss
jne
nop
cmpsb
test
sub
into
or
push
pop
or
stos
and
je
scas
mov
lea
cmc
jne
cltd
repz
jle
xor
add
mov
mov
mov
mov
lcall
pusha
pushf
xchg
cld
pushf
nop
mov
pop
addr16
cli
sub
adcb
inc
out
xlat
and
jnp
in
inc
loopne
dec
shlb
ljmp
sbb
or
js
jnp
clc
std
test
or
mov
cmp
push
adc
clc
pop
repnz
jns
pop
adc
mov
in
pop
icebp
add
loope
or
cmpsl
stc
int3
pop
insl
test
mov
cmp
fcmovnb
xchg
and
clc
push
lods
test
rcl
sub
shlb
adc
clc
or
subl
sub
mov
lock
fisubs
mov
mov
pop
mov
movsb
jmp
cld
cs
sbb
into
dec
push
enter
pop
sbb
in
js
mov
test
xchg
ss
inc
imulb
imul
lcall
xchg
mov
into
pop
add
aam
xor
mov
bswap
mov
lods
repz
jbe
mov
mov
ss
dec
pop
out
mov
and
scas
ss
ret
lds
lret
je
push
adc
sbb
adc
xlat
scas
sub
mov
sbb
in
bound
pushf
stc
and
out
popl
cmpsb
insb
or
inc
mov
jb
mov
mov
cwtl
incb
cltd
imul
xor
cmp
lds
dec
ss
xor
pop
test
dec
pop
inc
dec
stos
xor
add
stc
stos
pop
popf
movsl
mov
scas
insb
mov
icebp
xchg
fdivl
jno
or
pop
xchg
pop
push
into
rcl
aam
and
gs
scas
test
or
jmp
and
sarb
push
jns
repnz
aas
es
sti
ficompl
adc
shlb
decl
mov
mov
sub
cmp
mov
dec
adc
add
mov
lcall
das
fildl
adc
lock
sahf
pusha
imull
lea
nop
imul
xor
loopne
ss
in
out
dec
rclb
adc
sahf
in
cwtl
lods
push
movsb
push
mov
xchg
or
adc
shlb
repnz
loop
xor
cmp
fstl
pushl
divl
mov
icebp
lea
cld
bound
ret
jge
pop
scas
or
add
divl
dec
dec
xchg
andb
rcrl
push
push
mov
inc
cli
lock
popf
js
mov
mov
jo
test
mov
cmp
mov
jp
inc
xor
cmp
mov
dec
ds
sbb
mov
das
cli
inc
mov
jge
inc
sbb
aam
dec
call
dec
lods
iret
mov
repz
xlat
push
push
xor
maxps
outsl
xchg
jge
jg
lret
jb
cltd
mov
imulb
jo
shrl
adc
push
movsb
ljmp
push
in
dec
repnz
arpl
insl
aaa
sbb
div
cs
dec
test
bound
sbb
mov
dec
xor
jge
dec
call
jb
inc
cmp
inc
or
inc
cltd
scas
mov
in
das
loopne
ret
enter
push
mov
dec
pop
ja
lret
pop
nop
lods
gs
inc
dec
jg
loop
les
je
dec
lcall
outsb
cmpsb
dec
and
movsb
lret
lahf
test
jmp
fbld
xchg
jne
mov
pop
and
mov
jecxz
test
ds
loopne
nop
addr16
iret
adc
adc
popf
movsb
adc
mov
sub
outsb
pop
repnz
mov
fisttpll
pusha
test
mov
or
dec
je
pop
pop
jp,pn
xor
sahf
and
scas
push
icebp
sub
out
loop
insb
or
out
shr
in
mov
bound
or
test
adc
jne
jp
sbb
es
test
outsl
aam
mov
mov
es
pop
out
dec
adc
mov
add
test
xor
cld
inc
cmp
inc
mov
mov
adc
mov
popf
pop
jp
sub
fwait
adc
xor
lcall
push
shll
lds
add
test
cmp
leave
cmpsl
sub
mov
or
leave
arpl
loopne
aam
ror
mov
testb
and
pushf
or
aaa
mov
sub
jmp
cli
dec
mov
mov
add
xor
push
icebp
xor
sbb
leave
xchg
test
gs
mov
cmp
out
dec
push
daa
xor
mov
mov
ja
ret
ljmp
mov
mov
and
pop
xor
sub
push
cmpsl
insb
rorb
dec
xor
arpl
cmp
jge
fidivs
push
xchg
mov
out
mov
das
aaa
daa
loope
cmp
and
and
in
mov
fcoms
repz
out
imul
adc
scas
sub
sbb
cmpsb
mov
fdivr
cmp
lods
inc
pop
lds
lds
sbb
sbbb
test
push
jle
jb
adc
or
movsb
ds
sahf
push
xor
std
mov
es
sbb
pop
and
mov
popa
xchg
mov
mov
dec
in
xchg
push
xchg
lret
xor
dec
pop
test
sub
test
xlat
mov
arpl
out
and
mov
cmp
pop
or
jbe
jmp
shr
pop
movsb
dec
aad
inc
les
xor
inc
js
sti
adc
sub
loop
or
mov
jg
sub
cs
pop
in
inc
test
leave
in
lret
popa
flds
push
mov
pop
retw
pop
je
fsubrs
jg
jge
idivl
pop
ss
sbb
xlat
insl
push
jl
jbe
jb
and
jmp
js
xor
inc
dec
std
arpl
add
adc
inc
bound
in
pop
xchg
or
mov
mov
mov
scas
test
dec
jmp
mov
sti
inc
push
xchg
pushf
fwait
pusha
push
cltd
iret
and
dec
test
repnz
adc
popf
dec
movsl
dec
inc
push
in
lock
inc
add
xor
mov
lret
in
mul
flds
adc
out
aas
cmp
xchg
scas
out
stos
sahf
pop
hlt
lahf
fnstenv
in
push
outsb
push
cmpl
ss
outsb
gs
or
push
jmp
push
mov
ficomps
aaa
push
fs
adc
cwtl
jb
and
sbb
loop
add
sbb
in
sti
imul
aam
sub
push
jnp
aaa
jecxz
int3
loope
sbb
out
mov
xlat
push
inc
pop
add
fistpll
je
arpl
aas
lock
in
or
xchg
sarl
repnz
sub
pop
sub
cmc
xor
or
pop
push
lcall
enter
nop
pop
jno
out
jl
xchg
das
out
jno
and
push
jo
andl
or
push
sub
inc
lods
pushf
mov
fistpll
or
cmp
iret
push
test
mov
or
imulb
inc
lcall
lock
movsl
outsl
leave
das
dec
movsl
fisttps
rcll
sub
jl
sbb
mov
insl
data16
test
inc
jnp
lret
mov
es
mov
jno
pop
adc
divl
xchg
add
cwtl
inc
negb
loopne
loop
scas
inc
sahf
xor
mov
ret
xchg
in
mov
and
fildll
cmp
fldl
xchg
jmp
loopne
mov
scas
popf
scas
ds
sub
arpl
orl
mov
pop
mov
jbe
sub
xor
sbb
stos
cmp
dec
arpl
mov
ret
mov
inc
push
push
ret
or
popf
call
insl
push
aaa
addb
int3
pop
rcrl
pop
inc
lods
adc
std
outsl
adc
in
inc
xor
cld
adc
leave
mov
mov
in
push
ror
sbb
ret
ds
pop
cltd
sbb
xchg
jp
js
sbb
adcb
mov
mov
push
lretw
aad
fs
adc
xor
xchg
insl
pop
push
cwtl
lret
int3
pop
lock
aas
xor
int3
mov
xor
cmp
sub
sti
seta
scas
mov
stc
clc
jg
jecxz
pop
cwtl
adc
mov
scas
cmpsb
mov
lds
div
push
mov
xchg
out
adc
jo
xchg
adc
sub
fcoms
mov
jno
jae
cmc
cmp
lahf
push
jge
add
pop
xchg
loop
jmp
dec
inc
data16
mov
add
sub
loope
mov
insl
out
adc
push
dec
stos
fisubs
popf
sbb
jecxz
adc
lock
int3
jae
cmp
test
xchg
jmp
adcl
mov
mov
insb
pop
mov
push
fsubrs
xchg
sahf
add
sub
sub
and
mov
push
imul
jge
cmp
jp
add
add
in
aas
and
dec
sahf
push
fucomi
out
push
and
int3
or
inc
mov
dec
adc
ror
imul
mov
xchg
shrb
cmc
inc
int
mov
test
jecxz
andb
xor
fnstsw
pop
imul
mov
shr
neg
mov
xchg
jne
out
mov
lret
lea
mov
call
adc
leave
add
rcr
scas
add
movb
cmp
push
and
sbb
mov
in
jl
lcall
ror
gs
push
push
mov
cmp
push
pop
nop
ljmp
or
and
cmp
xchg
popl
sub
xor
xchg
cmpsb
sbb
add
mov
inc
push
mov
popa
mov
xor
push
xchg
sub
mov
aaa
add
movhps
ds
out
sub
xlat
adc
mov
xlat
pop
notb
dec
cld
cld
jge
sub
and
aad
into
jp
push
mov
insb
xor
dec
push
cmp
mov
sub
adc
scas
jo
icebp
pop
mov
insb
jmp
movsb
rclb
icebp
imul
sbb
xchg
xchg
ret
sbb
sti
adc
push
mov
cmp
cmpb
int3
pop
sbb
lock
push
sub
loope
ficoml
jle
in
inc
inc
xchg
mov
and
sbb
xchg
jg
inc
mov
ss
pushf
loope
xchg
in
subb
and
mov
cmpsl
ficoms
mov
xor
inc
fisubl
push
out
mov
add
call
pusha
mov
xor
jnp
xchg
cmp
inc
hlt
xor
xor
push
or
and
sbb
cwtl
xor
sti
rolb
sub
dec
out
jae
push
xor
mov
xorw
mov
dec
sti
lds
nop
add
ret
aad
sub
or
iret
inc
pop
dec
shrl
pop
inc
das
inc
cmp
xlat
loope
adc
inc
mov
jle
sub
and
dec
inc
mov
shrl
adc
mov
dec
fistpll
std
fcompl
lret
les
cmp
and
sbb
dec
stos
dec
sub
xor
mov
mov
not
sub
push
pop
and
mov
add
or
pusha
cld
bound
nop
jle
add
lcall
outsb
jecxz
rclb
jmp
loop
lock
movsb
icebp
stc
pop
imul
mov
fwait
xchg
sbb
movsl
push
jecxz
fwait
and
mov
repnz
dec
push
scas
in
and
lea
mov
cmp
in
out
fiaddl
pop
mov
pop
push
sub
scas
add
rcll
add
xor
fmull
jns
sub
sti
xchg
and
add
xchg
ffree
ja,pt
mov
or
inc
imul
inc
scas
std
cmp
sbb
add
xchg
pop
add
sahf
xlat
xchg
dec
xor
inc
pop
cltd
repz
shlb
movsl
jmp
call
lea
pop
repz
jg
and
push
and
push
or
rclb
push
jne
addr16
push
pop
aad
sahf
mov
ret
xor
xchg
cmpsl
mov
scas
dec
pop
add
jmp
lock
sub
out
test
cmc
cs
mov
and
loop
aaa
or
dec
aas
movl
shl
cmpsb
dec
pop
aam
js
push
shrb
enter
pop
fst
pop
in
cmp
push
adc
decb
pop
cltd
dec
ja
fiadds
xchg
test
cwtl
das
enter
out
pop
cwtl
ds
in
sub
inc
add
add
dec
jmp
ret
and
es
adc
and
aam
in
add
test
push
das
or
mov
int
add
jo
aam
pusha
push
jg
in
mov
xor
jns
xchg
mov
add
adc
adc
push
lret
call
outsl
int
scas
fisubrl
mov
imul
cwtl
cmpsl
pusha
pop
jge
aam
test
mov
or
mov
insb
mov
stc
mov
xor
pop
lods
fistpl
push
push
arpl
sbb
arpl
aaa
test
push
fidivl
xor
cmp
outsl
test
lods
mov
or
lcall
fmul
xchg
sbb
xchg
mov
into
mov
push
pop
cmp
mov
add
add
enter
das
add
fdivl
add
push
pusha
xchg
lds
inc
push
stos
fwait
enter
sub
and
push
xor
daa
mov
loope
mov
cmp
rcrb
cmpsb
in
stos
in
or
push
in
fcoms
movsl
sbb
into
outsb
or
adc
adc
stc
jb
roll
xchg
mov
mov
fs
sub
and
pop
pop
sbb
or
push
addr16
scas
jae
pop
sbb
fistps
fsubl
test
cmp
xchg
sbb
or
push
fsubrl
fdivr
lahf
pop
ja
repz
mov
jl
flds
dec
rolb
sub
std
jg
cmpsb
or
xor
daa
mov
pop
sbb
inc
mov
mov
in
loop
rol
icebp
sub
xchg
cmc
insl
mov
stos
inc
pop
pop
pop
cmp
mov
jne
mov
mov
mov
std
xchg
xchg
mov
mov
iret
lcall
pushf
inc
inc
mul
inc
je
movsb
xchg
jb
sbb
mov
xchg
sahf
xorl
cwtl
mov
in
add
bnd
adc
sbb
test
jp
jge
movntq
push
mov
decl
xchg
imul
inc
lea
or
int
bound
xor
dec
sbb
outsl
test
pop
arpl
das
movl
in
stc
mov
mov
jne
push
add
xor
fidivl
fucomi
cs
push
out
iret
outsl
push
cmpsb
mov
xchg
adc
adc
fisubrs
nop
insl
cmp
scas
xor
aaa
daa
sbb
jnp
mov
dec
pusha
xorl
xor
pushf
inc
jge
dec
xchg
orl
jge
xor
stos
pop
dec
sub
xchg
into
aas
imulb
mov
pop
mov
and
push
mov
adc
pop
adc
and
stos
push
pop
lods
mov
aaa
cli
in
int
jg
stos
jns
pop
icebp
btr
add
jo
mov
lret
andl
mov
repnz
push
or
jecxz
lldt
dec
sti
mov
ss
ret
hlt
xchg
push
imul
push
add
insb
fadds
clc
or
les
cmpsl
or
int3
ret
adc
lock
or
mov
movsl
adc
mov
mov
adc
lods
das
aad
popa
xor
xchg
js
addb
fucompp
movsb
mov
xor
rol
push
lret
ds
fwait
add
push
ficomps
test
movsb
cmp
int
mov
mov
push
les
movsb
hlt
data16
in
cmp
jno
call
adc
push
and
jb
xor
jno
mov
imul
out
mov
dec
in
shlb
ret
movsl
popa
bound
dec
nop
mov
loop
or
fdivrs
sar
push
bound
dec
aas
xchg
jl
and
inc
inc
imul
sub
jb
jae
xchg
mov
jnp
push
add
mov
movsl
or
sbb
hlt
lcall
into
pop
mov
mov
jl,pn
inc
leave
xchg
xchg
dec
movsb
aad
mov
jl
je
push
or
mov
jns
out
mov
daa
jecxz
jg
rcr
stos
sahf
dec
push
jecxz
mov
popf
xor
jecxz
ret
and
iret
mov
test
jg
sub
imul
mov
or
rclb
mul
push
daa
in
aas
pop
push
mov
mov
dec
mov
dec
inc
sti
jne
sub
cmp
je
or
or
sub
adc
leave
inc
jb
rorb
add
rorl
jg
mov
sbb
mov
out
add
lret
jb
lret
mov
fldt
inc
lret
movsl
mov
mov
adc
pop
xchg
mov
inc
adc
fcompl
shr
int3
mov
iret
xorl
hlt
xchg
and
mov
movsl
outsb
pop
insl
xchg
sti
jge
xlat
jb
push
movsb
scas
adc
mov
aaa
or
adc
in
mov
std
jmp
cmp
lret
cmp
pop
gs
sub
sbb
add
int3
mov
rcl
leave
and
fnstcw
mov
ja
push
dec
divb
mov
and
push
xchg
xor
push
xchg
sub
jmp
sbb
jg
outsl
xlat
les
mov
mov
sbb
fisubrl
jo
lods
fwait
call
insl
filds
fwait
aaa
rclb
mov
dec
xchg
pop
ds
xor
inc
jl
filds
out
js
ja
inc
mov
mov
add
das
xchg
mov
dec
xchg
sub
push
lret
adc
add
les
lret
push
iret
inc
lahf
lret
dec
jmp
pop
mov
lods
xchg
mov
loop
inc
mov
shll
out
lcall
mov
add
mov
decl
fcomi
cmp
and
ret
addb
test
mov
or
jnp
pop
test
lods
fs
shll
push
cld
mov
sub
mov
pop
adc
es
icebp
jl
aam
cld
ret
dec
dec
jno
or
subl
fsubrs
sbb
js
cmpsl
shr
lock
rcll
test
mull
pop
loopne
ljmp
js
mov
inc
cmp
pop
lret
lods
nop
sbb
push
and
sub
loope
nop
or
nop
jg
xor
and
addr16
shrb
aas
mov
xor
adc
dec
pop
sbbl
mov
sbb
out
in
mov
push
fdivl
fsubrl
push
iret
stc
or
dec
inc
mov
js
pop
ret
je
gs
jmp
cmp
jg
fbld
xchg
pop
aas
xor
or
dec
mov
jno
xor
arpl
iret
iret
push
popa
movsb
inc
sub
dec
ret
stos
xchg
add
push
es
cmp
inc
scas
push
outsb
lds
leave
cmpsb
xchg
xchg
out
pop
shrl
clc
ljmp
cmp
loopne
or
es
aas
sbb
mov
xlat
cmpl
push
mov
push
mov
movb
mov
out
scas
mov
data16
je
ja
push
and
mov
pop
mov
mov
mov
jle
sub
cld
sti
fsub
addr16
loope
jmp
rorl
jo
sti
psubq
sub
push
mov
rcrb
iret
fnstsw
stc
popa
inc
mov
ja
push
mov
mov
jecxz
sub
mov
xchg
push
and
lea
stos
lds
cmp
xchg
fistps
popf
push
xchg
mov
sub
mov
sahf
xor
cmp
push
test
or
dec
cmp
jns,pt
xsha1
cmpsb
cvtpi2ps
push
fsubr
adc
add
adc
push
orl
xchg
sbbb
cmc
jmp
lea
dec
push
xor
pusha
xchg
push
jbe
dec
push
outsl
pop
mov
adc
fcmovnbe
pop
negl
loopne
pop
outsl
fstpt
inc
mov
mov
sub
xor
push
dec
dec
lret
gs
ljmp
sub
movsl
nop
sbb
inc
inc
cmp
in
les
mov
cmc
xchg
daa
inc
mov
cmp
cmp
movsl
push
mov
aad
test
xchg
movsl
adc
sub
addr16
pop
cmp
pop
mov
mov
cmp
loop
sbb
popf
fucomp
and
clc
out
mov
mov
xor
xchg
and
push
push
insb
aas
test
dec
cmc
loopne
or
sti
xchg
popf
dec
ds
mov
pop
nop
jl
inc
in
out
call
mov
pushf
adc
ret
adc
pop
fxch
add
std
jae
imul
fidivrl
add
in
arpl
inc
push
notb
mov
imul
fwait
outsl
add
mov
mov
xchg
inc
xor
or
mov
or
or
push
std
cmpl
cmp
ljmp
sbb
jno
fisttps
sub
mov
mov
and
fwait
std
xor
cli
leave
mov
fdivl
stos
or
cli
test
imul
mov
inc
add
das
ja
mov
test
cmpsb
bound
cmpsb
pop
push
lods
daa
cs
int
pop
inc
pop
aaa
inc
dec
cmpsl
cmpsl
or
add
or
outsl
fs
or
mov
xlat
dec
lcall
addr16
imul
in
and
pop
xchg
fcompl
pop
popf
into
push
fdivr
push
jge
jns
outsl
cmpl
incl
mov
je
and
in
mov
xor
inc
mov
enter
addr16
popf
je
jb
push
and
mov
add
fadds
lea
ja
or
mov
jne
push
into
stos
and
insb
and
sub
loop
cltd
shrl
push
mov
clc
xchg
mov
movsl
repz
nop
stc
lret
cmc
or
cmp
leave
lods
icebp
add
cmpsb
and
test
scas
stos
push
mov
sbb
jae
inc
out
pusha
mov
das
cmp
rcrl
sarb
test
pop
xor
sub
xchg
pusha
out
aam
xchg
push
les
fdivrs
add
mov
and
inc
adc
jo
arpl
int3
pushf
or
test
xor
xor
fldenv
push
scas
inc
sub
movsb
stc
mov
fisttps
dec
mov
xor
push
loopne
mov
push
int
movsl
nop
and
cmpl
out
mov
cwtl
xor
insl
insl
adc
stos
fs
mov
cmpsl
mov
mov
inc
sub
inc
insb
lret
adc
inc
cld
dec
bound
xor
mov
cltd
lcall
inc
loopne
inc
and
movsl
js
inc
mov
and
rclb
outsb
xor
inc
arpl
fwait
jg
xchg
xor
push
repnz
imul
std
in
out
shll
or
in
mov
sub
scas
mov
xor
xchg
push
sbb
sub
fbld
pop
addr16
cmp
rorb
icebp
dec
push
mov
sbb
push
cmpsl
fdivs
repz
jb
and
clc
mov
icebp
mov
sbb
push
aam
ret
adc
repz
fincstp
or
mov
in
fsub
cmpl
je
das
lcall
rcll
lods
loope
dec
cmp
mov
mov
mov
cld
movsl
xor
mov
sub
enter
adcb
push
xor
pop
xchg
aad
xor
fidivrl
movsl
addl
inc
lret
adcl
hlt
inc
xlat
icebp
stos
push
cmp
iret
xchg
mov
not
push
pop
xchg
insl
or
insl
xor
jnp
sub
mov
fucomip
push
mov
out
xchg
je
xchg
jl
inc
jecxz
adc
in
dec
imul
add
ja
test
jae
outsl
mov
les
sbb
dec
out
loop,pt
or
pop
sub
xchg
stc
fsubr
imul
scas
push
rclb
xlat
cmp
and
test
nop
push
int
insl
out
cwtl
sub
pop
lahf
lcall
dec
scas
jge
pop
call
xchg
test
fcmovnb
xchg
xchg
es
aam
xchg
jecxz
pop
jns
in
mov
pop
xor
das
in
cmpsb
mov
add
push
mov
inc
cmpsb
pop
hlt
mov
and
xor
mov
mov
idivb
push
xchg
fstpl
inc
or
lret
cwtl
stos
mov
pop
dec
fsubrl
out
push
mov
jne
vcvttps2dq
or
filds
sub
leave
lret
mul
cld
mov
dec
fisubrl
clc
fildl
sub
mov
dec
stc
inc
call
fstl
dec
loopne
ret
ss
outsb
adc
loope
inc
lock
jae
loop
pop
xchg
insl
test
sarb
sbb
inc
scas
sti
mov
lahf
pop
and
mov
scas
movsb
loop
ljmp
mov
lock
in
mov
gs
call
shrb
or
jp
mulb
fcomi
pop
and
inc
fcom
ds
daa
ret
jnp
mov
or
sbb
inc
outsb
sub
dec
push
jae
adc
data16
je
mov
or
cmc
adc
fsubp
or
fildll
int3
sahf
and
outsb
loope
push
xor
rcl
dec
add
mov
mov
push
cmpsl
lods
outsl
daa
je
push
outsb
in
push
mov
push
mov
orl
sub
push
pop
test
daa
xchg
jmp
or
imul
repnz
adc
mov
add
or
mov
or
adcl
jae
dec
ret
aas
sub
xor
cld
gs
mov
xchg
sarl
jp
xor
lock
dec
outsb
dec
add
pop
aam
push
pop
pop
and
into
rorb
neg
stc
sub
mov
addb
sbb
imul
or
xchg
addr16
dec
flds
test
adc
dec
ret
xor
fdivr
mov
out
or
or
and
femms
dec
cmp
mov
adc
push
movsb
and
hlt
ds
movsb
aam
fistl
inc
jmp
inc
lret
xchg
sbb
jae
sbb
lock
movsl
xchg
lock
fmull
aad
popa
mov
push
or
dec
push
sahf
push
pop
rorb
lahf
fwait
add
ljmp
pop
loop
arpl
aam
out
mov
sbb
pop
mov
push
rcll
mov
mulb
fists
or
xlat
xchg
in
pop
or
cmp
or
mov
call
cld
ret
fimull
jne
xchg
mov
in
push
pop
daa
push
sti
popa
pop
push
mov
pop
shrb
outsl
pop
sbb
xchg
lock
push
data16
and
in
sbb
fdivr
dec
xchg
sub
rcr
push
flds
or
lahf
jns
and
xor
popf
call
test
mov
jo
inc
or
sbb
lock
sarb
enter
fidivrs
out
outsb
cmp
mov
add
jae
outsl
xchg
jb
cltd
imul
icebp
ss
pop
sbb
daa
shll
shr
inc
jge
fstp
fidivs
mov
int3
add
or
aas
add
js
push
out
add
add
nop
movsb
jge
stos
sbb
mov
cld
mov
cmp
pop
mov
mov
loope
pushf
sbb
in
dec
in
lods
sti
push
sbb
lea
data16
pop
push
je
xchg
inc
imul
iret
xor
add
ss
cs
mov
js
push
jb
insl
jecxz
cltd
jmp
jmp
adc
sbb
pop
dec
adc
in
pop
mov
int3
std
adc
frstor
inc
loop
jle
loopne
leave
pop
mov
lret
aam
xor
lahf
cmp
cmp
filds
aad
sbb
lret
add
pop
mov
sub
adc
ret
sub
jle
add
frstor
adc
repnz
bswap
mov
das
xchg
daa
add
fabs
sub
enter
outsl
push
xlat
cltd
test
scas
push
lock
cs
in
push
or
imul
mov
adc
or
jg
nop
out
mov
fidivl
mov
ret
rclb
movsb
jb
scas
rolb
outsl
addr16
dec
or
mov
je
push
xchg
popa
mov
cmp
sbb
add
std
insl
rclb
es
clc
lret
xor
and
push
xchg
or
and
in
sub
mov
loopne
out
lods
xchg
sbb
arpl
xchg
and
add
arpl
xor
push
push
sbb
shlb
jg
mov
lea
mov
xorl
int
mov
fildll
fwait
lea
mov
xchg
or
imul
pop
out
mov
movsb
dec
or
jmp
les
dec
adc
jmp
cmp
xchg
push
push
filds
pushf
sub
negb
and
ret
test
iret
mov
inc
sahf
jnp
icebp
sub
jbe
xchg
inc
pusha
add
mov
xor
lock
fdivr
mov
ror
sbb
push
addb
mov
mov
sbb
or
ss
adc
sbb
cld
inc
jecxz
add
fcomip
into
inc
cmpsl
or
jo
jo
hlt
xchg
mov
mov
outsl
push
or
sub
dec
fisubrl
mov
lea
push
lods
jae
xchg
lds
lcall
pop
inc
addr16
das
sbb
fs
mov
jne
js
pop
and
adc
test
mov
fsubl
dec
daa
and
inc
ss
leave
test
or
aam
mov
cmp
cmpl
sub
and
and
xchg
into
adc
push
xor
rol
inc
jo
inc
lods
inc
xlat
mov
mov
std
fildll
dec
pop
xchg
jle
pushf
inc
pop
mov
mov
adc
xchg
and
xorl
out
cmpsl
int
popf
std
movb
or
sbb
sbb
mov
pop
fistl
leave
push
aad
mov
repnz
jno
into
cmc
insl
and
sub
xchg
fimuls
pop
jae
cltd
lcall
aas
dec
imul
push
mov
cs
sar
push
or
cld
daa
xlat
out
iret
call
rclb
mov
jge
pop
push
mull
std
fistpl
mov
notb
cld
or
enter
jb
stos
or
cmp
add
pop
dec
pop
mov
mov
cld
ljmp
or
add
test
sbb
inc
movsl
jnp
push
repz
pop
movsb
out
icebp
test
repz
mov
stos
xor
jns
dec
mov
loop
mov
cmp
movb
jmp
pop
mov
xchg
xor
repz
rolb
shll
or
inc
mov
lret
dec
mov
mov
cmpsb
mov
sbb
fmulp
test
mov
mov
fs
outsb
and
pop
shr
imulb
sahf
sub
mov
pusha
pop
push
mov
pop
out
push
jno
outsb
fldenv
and
lods
mov
jno
and
mov
and
test
fs
sub
jecxz
cmp
inc
jo
mov
test
test
mov
sbb
in
sarl
shll
sub
dec
xchg
mov
fs
in
jne
lds
daa
ljmp
scas
add
fidivrl
mov
cmp
in
sub
mov
xor
gs
add
out
lret
lea
adc
out
ret
int
or
fldenv
jg
loopne
int
fisubs
fisubrs
scas
test
out
jle
daa
or
in
test
sub
add
leave
sysexit
out
xchg
mov
dec
pop
fldt
fsubrp
jg
inc
shll
out
fldenv
cmpsl
fildl
ja
gs
mov
mov
cltd
jg
jg
orb
adcl
loop
xor
add
pop
add
jp
sbb
xor
call
push
mov
in
ret
fnstenv
push
fsubs
xchg
movsl
imul
mov
mov
pop
jns
lds
pop
sbb
aas
pop
test
pop
push
sub
jle
adcb
fiadds
cmovle
ror
daa
pop
jl
xchg
pop
idivb
jne
packuswb
rcrb
jo
mull
pop
fimuls
js
mov
in
mov
stc
and
mov
stos
jno
adc
mov
ja
leave
xor
mov
aaa
push
inc
pop
add
imul
js
loop
sti
repz
cld
xchg
out
xor
jmp
dec
inc
cs
push
call
push
inc
call
cmp
out
pop
inc
mov
dec
int
pop
fsubl
pop
sar
mov
sub
adc
adc
inc
outsb
jmp
data16
adc
mov
cmp
out
adc
je
aas
mov
mov
inc
and
in
push
scas
or
push
jbe
xchg
cli
cmp
fldt
cs
shrl
dec
xor
arpl
mov
outsl
mov
cli
lods
sti
daa
dec
faddp
jp
imul
add
loope
cmpsl
xchg
imul
test
pop
in
pop
imul
pop
pop
pop
aad
fadd
and
pop
rcll
insb
lds
pushf
push
mov
lods
imull
sbb
aaa
or
wrmsr
jb
pop
test
push
cwtl
fisubs
push
xlat
inc
inc
xchg
jmp
push
lsl
pusha
addr16
mov
lock
ds
pop
sbb
pop
test
or
dec
mov
std
mov
std
in
mov
and
and
xchg
xor
sub
imul
dec
xor
xchg
xorl
dec
dec
mov
mov
add
stos
int3
inc
aaa
adc
call
movhps
scas
mov
sahf
jno
cld
push
cltd
cld
inc
jge
sub
mov
in
dec
add
rolb
xchg
cmp
sbb
inc
cmpsl
xchg
sti
dec
cmpsb
outsl
shld
xchg
inc
movsl
jecxz
pop
pop
mov
dec
sbb
mov
loope
push
movsl
clc
in
push
stos
test
movsl
sbb
lods
js
or
ljmp
ss
aad
jnp
pop
cmc
jmp
in
rolb
clc
cli
sti
jno
xlat
fldt
xor
lahf
mov
pusha
lahf
mov
mov
lret
mov
lret
fcomi
or
fimuls
sub
or
popa
push
rolb
cmp
pop
addr16
gs
jl
lahf
inc
or
pusha
pusha
jmp
fistps
leave
insl
sbb
pop
cwtl
pusha
mov
jecxz
mov
adc
xchg
jmp
pop
xor
cli
pop
mov
call
stos
das
push
in
push
loop
hlt
xor
inc
fidivs
pop
imul
xor
in
sbb
xchg
mov
and
psubd
and
clc
xchg
xor
mov
xchg
fnstsw
jmp
fldl
sub
cli
negb
inc
lock
mov
icebp
icebp
imul
jno
test
cmp
and
loopne
test
push
sbb
cmp
mov
movsl
pushf
sahf
fs
outsl
data16
into
pop
out
call
mov
pop
xor
insb
stc
xchg
arpl
out
call
inc
xor
mov
es
in
push
push
addb
sbb
js
adc
enter
and
sbb
cmpsl
xchg
arpl
push
jno
dec
gs
inc
push
ficoml
push
icebp
xchg
mov
pop
aam
stos
std
aas
das
arpl
roll
xchg
test
ficompl
fcompl
orl
ss
and
xor
das
shrl
and
aad
mov
push
test
mov
mov
cltd
xor
push
cld
mov
inc
inc
loope
das
in
push
cmp
jle
sub
test
lods
lea
pop
cmpsl
xor
cmp
sbb
loop
pop
lds
adc
xchg
adc
push
mov
jp
cwtl
cld
pop
dec
pop
lcallw
lret
dec
cmp
pop
sub
cwtl
mov
out
pop
pop
sbb
jmp
xchg
insb
in
add
cmp
sbb
testl
dec
rorl
ja
push
loop
mov
pushf
cmp
fs
mov
cmpsb
inc
cmpsl
jbe
shll
xlat
push
xor
xchg
pop
inc
cmp
scas
dec
lock
pop
sbb
add
cmp
ret
mov
rclb
lock
dec
mov
xchg
jecxz
sub
lods
aad
sub
push
cmp
and
push
mov
iret
xchg
mov
rorb
out
cmpsb
xlat
jo
addr16
imul
movsl
lret
test
or
add
arpl
stos
int
sahf
cmp
ret
icebp
jno
sub
dec
insl
push
mov
sbb
loope
or
sbbl
arpl
mov
imul
mov
push
les
pop
mov
pop
lods
dec
adc
pop
mov
pop
or
dec
insl
jle
xchg
in
cs
push
or
mov
fidivrl
leave
push
xchg
mov
outsl
les
nop
popf
shlb
xchg
xchg
inc
mov
pop
dec
out
or
stos
sub
aad
aad
stos
jmp
imul
insb
imul
xchg
mov
test
jno
mov
xor
lods
cltd
xlat
push
fldl
clc
fistps
xor
push
mov
aas
rcr
mov
push
scas
xchg
orl
sub
xor
lahf
insl
or
ss
aas
sahf
popa
mov
fbstp
mov
add
jnp
xchg
shr
fnsave
mov
xchg
add
cld
pushf
test
rcr
mov
xchg
mov
jb
mov
jno
fcmovne
stc
push
mov
mov
jmp
ficomps
cli
mov
lret
shr
xchg
xchg
cwtl
jp
jmp
inc
lock
jns
lds
js
adc
fidivs
push
and
gs
jg
xchg
mov
pop
jae
adc
lcall
cltd
xchg
adc
negl
adc
lcall
pop
adc
sub
push
insb
pop
outsb
add
sbb
outsb
xchg
loope
mov
cmpb
test
repnz
call
xchg
push
int3
add
lds
sbbb
movsb
sbb
or
int
in
jo
icebp
pmaxub
sbb
push
ficompl
mov
inc
or
push
lds
dec
fxam
incl
push
daa
outsl
push
cmp
test
cwtl
sub
sub
dec
jle
mov
sub
lds
icebp
and
in
test
push
test
lods
stos
push
in
je
fucom
dec
in
cwtl
or
mov
add
nop
lret
dec
push
arpl
rcl
push
out
dec
pop
jmp
in
mov
add
xchg
daa
jnp
aaa
add
aam
or
xchg
cwtl
scas
into
push
out
iret
lds
push
rorl
push
jge
or
sub
mov
test
sbb
in
jne
fdivs
std
ja
insl
out
pop
imul
dec
mov
mov
or
cmpsl
ret
pop
fs
stc
xchg
inc
fmuls
or
iret
mull
xor
xchg
stos
fstl
aas
cmp
xor
imul
xlat
stc
fstps
xchg
out
mov
pop
sti
jl
roll
lahf
jle
in
xorb
sarl
mov
dec
fistpl
sbb
inc
arpl
lods
negl
adc
lret
jne
lea
int3
cmc
out
adc
outsl
and
pop
xchg
dec
hlt
fdivrl
xchg
adc
icebp
mov
sub
dec
fldl
xor
scas
lock
cwtl
mov
leave
es
js
stc
loop
in
cmp
je
in
mov
pushf
and
out
push
test
jecxz
pusha
or
cwtl
loope
jl
push
aaa
scas
add
enter
mov
lods
dec
xchg
sbb
popa
addr16
push
lret
in
push
loope
xchg
es
add
xchg
lods
repz
push
jbe
dec
sbb
add
loopne
xor
sarl
xor
or
pop
ljmp
enter
add
iret
js
cmp
bound
into
dec
lret
add
fstl
adc
sub
repz
push
inc
nop
pusha
push
out
addl
cs
data16
mov
pop
fwait
enter
stos
loope
jmp
punpcklwd
mov
lret
sbb
jg
das
sbbl
cmpsl
sbb
lahf
add
js
mov
fsubrl
add
testl
pop
push
add
int
mov
push
sub
pop
cmp
sub
mov
stos
and
pop
mov
outsl
addl
sbb
lea
inc
dec
mov
pop
inc
xor
dec
cmp
add
iret
jle
jnp
push
test
ds
pop
imul
mov
pusha
movsl
jecxz
fimull
decl
clc
repz
xchg
mov
sbb
cld
cmpsb
gs
ss
pop
xor
mov
pop
or
clc
xchg
popa
cmp
es
sbb
fmull
push
pop
adc
xor
jg
shlb
push
push
add
mov
sbb
jae
cs
call
dec
les
fmuls
pop
mov
jp
ljmp
movsb
xchg
sub
add
cs
mov
ljmp
cmc
jmp
pop
sub
sbb
pop
and
ret
jnp
das
sar
dec
ja
int
jo
cmp
lcall
push
mov
pop
and
sarb
ret
fdiv
subl
cld
inc
leave
mov
mov
or
push
sub
fwait
sarl
fwait
mov
je
rclb
fsubrs
adc
adc
jb
addr16
pop
aas
and
xchg
mov
js
lock
xor
test
in
out
pop
dec
in
sub
pop
lds
int
sbb
in
movsb
ja
inc
movsb
pop
test
adc
mov
mov
mov
cmp
push
in
neg
jns
mov
call
mov
nop
pop
jo
push
push
enter
je
sbb
push
push
mov
rclb
aas
je
lahf
pop
pushf
adcb
mov
test
xor
xor
xchg
lahf
mulb
dec
jns
popa
xorl
insl
imul
sbb
stos
cmpsb
push
popf
mov
jnp
cmp
adc
cmp
or
sub
jge
sub
fs
popf
mov
ret
mov
in
test
lcall
jae
and
in
popf
mov
xor
push
sub
pop
xchg
add
sbb
xchg
mov
aam
out
sub
gs
add
test
cs
movsl
jo
and
call
sub
xor
jmp
inc
jmp
fwait
not
dec
pop
lock
enter
xchg
mov
or
push
fbld
out
aaa
es
sbb
mov
pop
cmp
pop
pop
jmp
loopne
push
sub
push
sbb
dec
out
xchg
mov
inc
dec
mov
add
mov
inc
or
push
rcrl
aaa
dec
pushl
sub
enter
sub
inc
fcoms
pop
or
cs
mov
imulb
xor
mov
mov
aad
push
and
adcl
imul
daa
dec
ret
adc
sub
inc
fdivs
or
inc
mov
jo
mov
pop
pop
mov
push
sub
xchg
pop
adc
ret
insl
outsl
sub
pop
lock
cmp
mov
shrb
mov
push
loopne
pop
jg
mov
push
aam
decl
rcrl
cmc
xor
fdivrs
or
in
mov
mov
mov
cs
shlb
push
lahf
clc
imul
add
int
sbb
call
add
mov
jmp
jge
add
push
fisubl
shrb
dec
inc
rolb
nop
dec
jb
pop
push
pop
xchg
pushf
jge
stos
pop
sbb
lods
loope
clc
orb
mov
movsl
enter
jbe
jmp
subl
icebp
adc
mov
in
dec
xlat
imul
dec
fimuls
or
imul
cs
mov
sbb
aaa
lret
mov
or
dec
and
jmp
adc
adc
rorb
sbb
insb
push
arpl
stos
aam
mov
mov
rcrb
mov
sub
add
sarb
push
dec
pop
jns
mov
add
mov
orl
push
push
mov
sbb
mov
xchg
lods
aaa
pop
stc
xor
sbb
addr16
movsb
inc
cmp
or
mov
insl
mov
mov
int
jmp
push
push
in
push
push
sti
int
mov
fldl
mov
push
lret
mov
mov
mov
mov
xchg
xlat
insb
popa
cmpsb
jbe
mov
shrl
push
xchg
sarb
xor
insb
dec
push
pop
cmp
mov
sbb
jl
fcomp
arpl
xchg
sbb
jnp
mov
cmp
and
jle
cmp
jno
or
test
xchg
int3
lods
lcall
pop
ljmp
xor
cmp
mov
xor
aas
and
mov
enter
sub
ja
push
sbb
mov
pop
xchg
sahf
and
xchg
sarl
pusha
xor
imul
add
dec
cli
mov
push
popf
iret
loope
xor
mov
push
mov
loop
ret
sub
shll
leave
mov
mov
movsb
xchg
inc
mov
jle
movl
push
adc
js
fdivrs
ret
pop
stos
stos
outsb
jbe
negb
dec
or
in
lahf
inc
push
push
mov
aaa
stos
jb
into
jecxz
adc
jp
pop
add
dec
sti
cltd
out
sub
dec
xlat
mov
add
scas
push
xchg
ret
cmp
inc
in
sbb
sarb
ret
aaa
shlb
sbb
or
scas
pop
dec
add
repnz
test
popa
and
mov
pop
cmpb
cmp
mov
adc
lds
or
repz
mov
sub
inc
xchg
cmp
mov
adc
faddl
mov
dec
fiaddl
cld
cld
pop
stos
push
inc
jae
and
daa
sub
dec
test
enter
xchg
roll
fstl
rcrl
adc
mov
out
shlb
push
cwtl
adc
fwait
cli
lock
jmp
fwait
decl
xlat
mov
mov
js
adc
cld
mov
mov
adc
dec
test
test
mov
fisttpll
cmp
jmp
clc
xchg
stos
add
sbb
pop
cmp
adc
jmp
push
mov
push
int
flds
or
xchg
fwait
das
jecxz
loopne
xor
mov
sub
inc
or
push
inc
xor
sti
pop
lret
fadds
loope
test
xchg
int
fidivl
add
mov
xchg
clc
incl
fistl
or
lahf
cmc
in
xchg
pop
cmp
mov
stos
repz
adc
lahf
lds
inc
mov
add
loope
jp
xorl
push
sub
in
iret
jmp
test
lods
jecxz
jge
mov
and
and
dec
cmp
mov
mov
hlt
mov
arpl
fldt
jl
jbe
inc
loop
clc
in
inc
pop
ja
inc
ljmp
xor
mov
dec
xchg
lea
or
push
pop
inc
ret
sub
arpl
gs
dec
jns
ljmp
f2xm1
and
dec
hlt
aas
rcl
ret
out
adc
stc
and
rclb
mov
cmpsl
hlt
mov
je
inc
rcr
push
mov
adcl
push
out
incl
idivb
cmpsb
jecxz
mov
sbb
insb
ljmp
dec
adc
call
jne
pop
shl
icebp
test
cmc
jmp
stos
loopne
jg
movsl
push
pop
lods
add
ds
rclb
fimuls
lcall
in
aas
adc
mov
and
xchg
test
adcl
sub
fists
add
sub
inc
in
decl
in
mov
push
and
ret
gs
sub
mov
dec
xchg
js
and
mov
jnp
movsb
adc
mov
inc
dec
inc
mov
lock
loope
lcall
test
ret
or
add
shl
out
clc
cld
es
shll
xor
stos
jnp
sub
pushf
sub
add
js
rcll
nop
xchg
lahf
ficomps
jp
sbb
adc
clc
mov
jno
add
decl
mulb
xchg
dec
mov
subl
cmp
sub
fsubrl
aad
jg
imul
xchg
icebp
roll
mov
test
movsb
fwait
mov
add
or
insb
push
mov
mov
repz
inc
sbb
fwait
mov
xor
jns
sub
jo
sub
mov
out
add
jbe
xor
gs
or
adc
xchg
fs
nop
inc
test
push
test
cmp
and
xor
jp
loopne
inc
shrb
add
pop
lcall
cmp
dec
mov
jge
ret
lcall
lret
cmp
jl
stos
adc
lahf
out
fwait
sahf
andb
mov
aam
popf
or
mov
jp
imul
or
pusha
scas
pop
and
jnp
cltd
mov
sub
les
mov
dec
stc
add
test
xlat
or
add
push
lea
inc
jbe
or
xor
aaa
pop
lea
mov
lret
xchg
ds
dec
xor
push
jae
mov
mov
test
shll
aaa
mov
adc
insl
sbb
iret
std
or
mov
xor
add
dec
pushf
js
cmp
push
cmp
push
fnstcw
xchg
nop
repnz
lret
xchg
inc
pop
sub
lds
out
or
mov
into
insb
mov
mov
out
add
add
cld
daa
aam
jo
jecxz
fisttps
sbb
xchg
das
xchg
stc
cwtl
cmpsb
or
inc
xchg
xor
repnz
sub
lahf
fnstcw
jo
mov
mov
adcl
into
xlat
cmpsl
ficoms
roll
xchg
lea
mov
call
cltd
pop
mov
lods
or
dec
mov
loopne
insl
mov
dec
mov
pop
rolb
pushf
xlat
dec
mov
mov
cmc
xor
add
push
enter
repz
inc
pop
int3
adc
scas
lock
repnz
xchg
fndisi(8087
xchg
lock
addr16
bound
or
arpl
pop
mov
ljmp
mov
xchg
add
lods
mov
or
mov
movsl
push
jb
adcb
xor
push
xor
in
sub
lock
pop
add
mov
mov
mov
shlb
adc
inc
call
ss
sub
dec
out
enter
sbb
mov
push
jmp
scas
pop
loope
or
jmp
mov
xchg
cmp
arpl
or
notl
popl
fimuls
jo
jg
lahf
dec
enter
push
scas
adc
dec
out
pop
pop
inc
loopne
mov
xor
pop
and
add
outsb
jbe
mov
iret
mov
xchg
mov
xchg
sbb
mov
dec
pop
cmp
or
movsb
pop
xchg
xor
movsb
xor
mov
ret
iret
ret
cmpsb
fcomip
xchg
inc
pop
idivb
loop
cmp
adc
and
xchg
push
push
dec
mov
add
push
sti
add
adc
inc
sub
mov
xchg
or
mov
mov
adc
sbb
adcl
sbb
jb
mov
int3
inc
icebp
mov
mov
or
sub
ja
add
push
jno
mov
sbb
es
push
out
fnstcw
fld
or
or
cs
out
jmp
dec
ficoml
mov
mov
lahf
sub
andl
mov
sti
push
or
pop
or
mov
outsb
cmp
ret
stos
imulb
loop
arpl
pusha
sbb
jns
loop
mov
jge
jnp
lods
aaa
pop
adc
es
mov
jns
inc
jmp
insb
cmc
cli
pushf
dec
jg
mov
cwtl
jb
dec
fld
adc
inc
xchg
pop
jae
fnstenv
mov
jecxz
mov
shlb
int
dec
adcb
scas
dec
mov
lods
xor
pop
cmc
or
fsubrl
jbe
loop
pop
clc
inc
add
add
cli
add
pop
sti
adc
es
mov
xor
mov
mov
movsb
loope
rclb
in
and
jecxz
and
or
xor
mov
stos
loopne
loopne
dec
xor
std
cltd
xlat
xchg
mov
cwtl
aam
xor
addb
mov
cmp
pushf
aas
ljmp
lea
pusha
aam
pop
cmpsb
and
inc
dec
mov
data16
testl
sbb
push
adc
out
ret
xchg
push
stos
dec
fdivp
pusha
arpl
ds
testb
add
mov
inc
and
jb
loopne
push
lock
cmpsl
jp
out
jp
es
ds
repz
xchg
mov
jecxz
in
xchg
cmc
pop
dec
mov
loop
jo
pusha
pinsrw
cmpsl
xor
pop
sub
inc
add
mov
loopne
fwait
or
or
adc
add
mov
hlt
mov
sub
cmc
and
mov
imul
sub
fs
mov
pop
or
and
pop
adc
ds
mov
inc
push
aaa
inc
pop
test
mov
xor
daa
push
inc
addb
adc
aam
cltd
dec
cltd
cli
jle
pop
cmp
mov
pop
add
mov
jns
inc
xchg
sub
pop
popa
loopne
in
dec
and
or
test
test
outsl
jb
je
push
int3
inc
je
or
sub
es
bound
into
ficomps
iret
sbb
add
ds
dec
pop
pusha
mov
lret
fcomps
sub
fwait
idiv
test
jecxz
lret
in
rcr
mov
jns
or
cmp
dec
in
mov
in
or
adc
inc
icebp
imul
push
mov
clc
cld
add
cltd
jmp
cmpb
jno
mov
inc
push
dec
jle
or
dec
mov
pop
fdivrs
mov
dec
movsb
xchg
jge
fsubrl
or
das
sbb
shll
movsb
add
inc
fcompl
mov
adc
clc
cld
rcrb
xchg
adc
mov
sub
insl
movsl
dec
lock
rcrb
test
es
andl
negl
fisubrs
iret
push
cs
es
mov
fsubrs
flds
and
push
pop
jecxz
push
add
iret
imul
testb
in
sarb
and
push
cmpsb
jae
adc
add
in
ret
jno
pop
inc
sbb
shlb
mov
adc
mov
add
sbb
div
ss
cmp
xor
xchg
jmp
rcr
cmpl
xlat
mov
movsl
cmpsl
jp
and
mov
jnp,pt
cmp
add
mov
sbb
push
repz
dec
fcmovbe
adc
pop
sbb
je
cmovno
fwait
cmp
mov
pop
jno
mov
sub
lahf
popf
movsb
jno
icebp
cmp
push
andl
fldcw
in
test
sbb
cmp
mov
movsb
std
pop
bound
out
scas
repz
dec
pop
stc
pop
xor
les
mov
cli
or
loopne
call
jae
stc
test
out
inc
cmpsb
mov
lret
mov
in
dec
mov
push
lods
fcmovb
dec
and
xor
sbb
xlat
addb
push
sub
xchg
cld
sarb
jns
out
cmp
dec
jae
or
call
jecxz
repnz
cmp
jns
aam
insb
enter
ds
inc
dec
jle
or
xchg
addb
in
lock
mov
cwtl
cli
fisttps
fcomi
cs
leave
fldt
loope
push
call
stos
shrl
xor
sub
inc
jbe
addr16
cld
mov
pop
sbb
fldt
nop
pop
xlat
fiadds
mov
cmp
adc
lods
mov
in
mov
xchg
pop
pop
mov
ds
in
sub
dec
cmp
push
pop
testb
addr16
dec
push
std
xchg
adc
sbb
mov
xchg
std
das
cmp
push
arpl
inc
xchg
out
cmp
jp
in
xchg
add
xchg
es
scas
ror
dec
push
and
inc
cmp
gs
inc
jo
sub
fnstcw
jne
ret
fcoms
mov
xor
mov
sti
xor
mov
aaa
pop
in
mov
sub
fsubrl
add
imul
mov
fpatan
aaa
or
push
adc
int
cwtl
mov
je
cwtl
sarl
aam
jae
push
cmp
sbb
dec
in
aad
rsqrtps
arpl
cmp
sti
ss
out
cmp
pop
or
int
into
popf
mov
push
cmc
shr
js
or
imul
lahf
add
pop
aam
inc
fistpll
jg
movsl
inc
ficompl
sbb
cmp
cld
out
out
pop
fcmovbe
je
xchg
ljmp
fcomp
sbb
imul
dec
add
cmc
sub
inc
mov
add
mov
jge
mov
cmp
xchg
jo
daa
cmpl
push
cmp
scas
inc
stc
subb
xchg
jno
mov
scas
shlb
cmp
cwtl
fs
and
push
push
call
in
cmc
stc
mov
in
cmp
imul
mov
aam
stos
outsb
mov
fbld
jecxz
xorb
sub
or
sbbb
adcl
call
scas
movsb
inc
and
jne
mov
ficomps
popa
add
and
and
es
lret
adc
push
fmull
xchg
popf
inc
add
scas
adc
add
dec
xchg
sub
ss
mov
and
add
mov
cld
xorb
or
repnz
inc
sbb
ljmp
imull
pop
pop
add
jno
cmpsb
mov
daa
rcrb
in
and
pop
or
fstps
xor
enter
fdivl
mov
adc
stc
xchg
pushl
test
pop
mov
shlb
test
mov
repnz
call
dec
push
inc
ret
lea
xor
xor
and
xchg
cmp
int3
inc
daa
pop
icebp
les
int
int
cmpsl
push
push
repz
push
xchg
push
cs
in
into
mov
cmp
jge
sbb
jb
jle
subl
pop
dec
add
lcall
sbb
inc
or
ret
cld
popa
jb
or
fucomip
repnz
xor
xor
jmp
add
inc
lret
lds
xor
add
push
pop
icebp
mov
sub
fcmove
test
iret
xor
repz
inc
sub
mov
sbb
add
fdiv
push
aam
jecxz
mov
push
mov
aam
arpl
cli
jnp
xor
mov
jge
jp
icebp
push
add
aaa
dec
mov
and
repnz
ret
fildll
cltd
in
ja
xor
mov
sub
jg
mov
mov
pop
loopne
mov
lahf
xchg
add
mov
insl
adc
cwtl
lret
std
push
cmp
or
pop
sub
shll
stc
popf
jae
jmp
pop
test
xorb
xchg
mov
subl
stc
xchg
lock
mov
lods
aaa
fistpll
inc
mov
sbbb
xchg
out
call
and
fdivs
add
fwait
gs
lahf
loopne
pusha
shl
pop
xchg
pop
lahf
ljmp
xchg
dec
in
inc
mov
loopne
pop
jge
mov
ss
xchg
sbb
dec
pop
sub
aad
fldl
mov
stos
aad
push
mov
cmp
jo
sbb
hlt
jg
jo
jmp
add
push
pop
cmp
xor
jo
fsts
xchg
xlat
fwait
aad
std
divps
mov
jnp
push
mov
mov
test
mov
xor
pop
adc
xchg
in
frstor
jbe
test
inc
mov
jbe
filds
xor
into
and
test
inc
xor
std
mov
aam
sbb
in
xchg
lock
icebp
mov
cli
fistps
xor
or
or
or
repz
cmpsb
mov
pop
cmp
mov
or
pop
pop
ss
cwtl
push
pop
icebp
xchg
or
std
adc
mov
popa
mov
test
mov
dec
mov
mov
add
sub
inc
mov
lret
sub
push
add
rcl
repnz
out
insb
mov
lea
jecxz
mov
xchg
aad
fdivrs
inc
pushf
or
dec
ret
loopw
push
nop
scas
xlat
mov
arpl
divl
lret
mov
sti
adc
dec
sbb
lods
bound
sub
cwtl
fs
addr16
jns
sbbb
fwait
mov
cmp
fsts
xchg
or
push
cmp
push
and
and
pop
mov
leave
pop
jbe
sbb
pop
out
orb
push
cmc
push
mov
sbb
fcomp
mov
cmp
cmp
jne
leave
nopl
and
shr
cmpl
insl
mov
and
sbb
xor
int3
jp
mov
lods
push
cli
addr16
mov
pop
mov
cmp
mov
mov
test
das
rorl
les
sbb
aam
fisttps
loopne
sbb
mov
mov
dec
and
mov
call
xchg
fdivrs
add
ds
sub
add
pop
xor
cld
rol
pop
mov
out
xchg
cmp
dec
mov
popa
and
mov
bound
push
mov
inc
ja
jle
and
jno
jo
cli
lcall
push
xorl
pop
push
in
cmpsb
pop
fidivrs
mov
enter
jecxz
das
out
fcompl
push
push
fcmovbe
mov
test
dec
cmpsl
iret
sbb
push
ds
fwait
add
inc
jb
lcall
dec
out
sbb
add
xor
cmpsl
jg
clc
xor
mov
mov
mov
pop
nop
pop
sub
mov
jns
push
xchg
movsl
xchg
mov
dec
insb
push
enter
pushf
ret
cltd
xor
shrl
les
jg
pop
mov
and
cltd
aam
lds
cmpsl
or
xchg
mov
sbb
jmp
jp
mull
pusha
clc
out
or
ret
mov
dec
cs
xchg
fcmovnbe
sub
cmp
dec
jl
das
ljmp
fldl
xor
cwtl
les
cmp
fcoml
loopne
imul
or
pop
inc
test
int3
out
jns
or
dec
mov
push
sbb
pop
jo
cmpsl
fdivrs
pop
es
inc
orl
jl
test
lcall
dec
dec
notl
ja
dec
and
fistpll
sbb
inc
pop
xchg
sub
dec
dec
sub
lods
cmp
xchg
mov
sahf
xor
clc
xchg
call
cli
push
ficompl
cmp
dec
cmp
stc
jp
pop
ljmp
mov
xor
mov
mov
stos
insl
rorl
xchg
mov
mov
mov
dec
fidivl
mov
int
cmp
cmp
adc
jecxz
ret
adc
aam
enter
push
out
testb
test
js
push
or
inc
sbb
cltd
jae
and
dec
mov
sub
into
mov
inc
xor
popf
int
int3
iret
sti
test
mov
mov
ja
sbb
jnp
fidivs
insb
addr16
fs
mov
lcall
stc
ret
or
neg
xchg
lea
dec
and
or
lods
sbb
lret
fwait
pop
inc
aas
imul
scas
pop
add
sysenter
or
xchg
mov
lret
jns
inc
fbld
inc
stos
dec
xchg
push
inc
jg
hlt
mov
cmp
push
sbb
out
das
stos
mov
sbb
aaa
or
out
jecxz
sahf
xor
es
push
jmp
test
popa
jbe
jmp
test
aaa
mov
and
mov
add
mov
push
and
sub
je
or
dec
incl
push
or
test
mov
xchg
add
mov
punpckhwd
mov
call
inc
mov
subb
mov
ret
movsl
enter
pop
dec
out
hlt
inc
shrl
mov
adc
or
jo
data16
daa
ljmp
pop
loop
add
mov
data16
imul
mov
aas
fwait
dec
xchg
cmp
test
orl
fisttpl
and
cwtl
cmp
dec
jb
test
jmp
sbb
dec
push
jg
dec
fst
sti
cmc
add
push
jmp
mov
imul
add
shll
shlb
mov
sub
xchg
scas
into
ficoms
repz
data16
fwait
loopne
add
clc
adc
jmp
cwtl
adc
out
pop
and
cld
out
leave
imulw
fisubrl
movaps
mov
popl
dec
push
hlt
cmp
fdivl
aad
je
mov
movd
int
xor
cld
jae
les
ljmp
inc
or
mov
rcrl
and
or
loope
fiaddl
sbb
jg
lods
inc
lods
and
mov
outsb
movsb
subb
les
push
or
pop
shll
imul
xor
sbb
cmp
fisttps
pop
inc
icebp
push
mov
cmp
sub
push
push
int
push
mov
or
js
andb
jecxz
push
rorl
orl
add
push
jno
or
pop
push
push
sahf
bound
fdivr
test
dec
sub
hlt
lds
jl
push
int
and
imul
push
ss
xor
bound
mov
out
adcb
outsl
adcl
sbb
shll
fs
mov
fldenv
xlat
dec
xchg
inc
fisubrl
inc
ja
pop
cld
insl
add
fildl
int3
int3
push
into
fidivl
test
in
mov
lods
insl
inc
xchg
out
jno
or
jmp
mov
out
enter
insb
xor
xchg
mov
inc
xchg
cmp
jno
in
pop
cmpsb
or
aam
cld
lret
push
jmp
xor
xchg
into
push
jle
push
jl
shl
push
and
jmp
or
xchg
sahf
pop
imul
dec
scas
jae
fildl
imul
xchg
dec
sbb
fwait
push
inc
inc
aam
lds
movsb
lods
fcoms
into
and
adc
sbb
add
dec
mov
push
sbb
lahf
enter
fimuls
mov
xchg
jb
loope
xchg
out
rorb
xor
lret
in
int3
imul
test
push
outsb
xchg
leave
fiadds
enter
sbb
or
sub
mov
out
mov
sub
nop
addr16
in
test
cmp
rcl
imul
ficoml
insb
or
aaa
hlt
ss
test
bound
hlt
dec
cli
lods
mov
pop
jp
ret
cmp
xor
lock
mov
adc
pop
push
inc
popf
jnp
loope
pop
mov
pop
pop
sub
mov
lret
shrb
and
bound
lret
or
ret
cmp
data16
ret
and
mov
scas
mov
xlat
testb
into
jl
xchg
add
and
inc
inc
dec
andb
add
sahf
adc
xor
mov
mov
cs
sub
xor
clc
mov
adc
in
test
fldenv
sub
pop
adc
jae
fiaddl
lods
sbb
push
add
and
xchg
mov
adc
out
and
xlat
out
push
fwait
mov
repz
or
lea
jne
dec
inc
scas
inc
adc
mov
and
lret
mov
mov
dec
inc
les
repnz
lods
mov
in
movsl
repnz
jl
dec
shr
out
stc
je
inc
jno
mov
testl
loop
cmp
and
and
xchg
jecxz
imul
cmp
xlat
in
ret
adc
rolb
xor
clc
dec
push
xor
sub
jmp
mov
and
cmp
sbb
lahf
xchg
int
stos
dec
jle
pand
in
imul
xchg
fsts
stos
adc
or
lods
jmp
and
sahf
and
imul
or
push
dec
mov
fwait
imul
pop
xchg
inc
and
xchg
je
adc
sbb
cmpsb
xor
xor
dec
lahf
pop
mov
dec
repnz
xor
mov
inc
sub
ret
jg
cmpsb
jle
loop
dec
cmp
push
repz
in
pop
call
mov
negb
and
test
aad
sbb
pop
test
mov
dec
dec
pop
shl
clc
inc
pop
data16
roll
jecxz
je
xor
mov
xor
cli
xor
inc
pusha
xor
mov
adc
cmp
cs
imul
dec
inc
xchg
subb
sahf
cmpsl
cs
outsl
jne
sub
inc
and
dec
lret
das
xchg
aaa
popa
aas
mov
inc
sub
pop
xchg
sti
sbb
sbb
xlat
pop
and
jl
mov
add
fnstsw
pop
inc
out
insb
imul
cli
push
int3
rorb
xor
lods
es
insl
out
xorl
test
jmp
cmp
repz
lahf
loopne
or
leave
pop
inc
pushf
and
dec
push
or
or
out
das
es
je
fmuls
scas
out
xrelease
sub
stos
jecxz
dec
lret
ja
roll
negb
clc
add
mov
mov
push
imul
fadds
into
addr16
and
mov
in
inc
or
int3
push
pop
push
dec
mov
ret
xchg
jge
mov
pop
dec
jmp
lcall
cmp
xchg
mov
lods
lcall
test
ficompl
xor
cmpsl
lds
shrb
push
pop
dec
sub
push
pop
lods
lock
mov
out
adc
and
pop
push
sbb
push
ljmp
adc
dec
dec
fdivr
mov
inc
andl
and
ret
lret
adc
sub
lock
neg
push
test
push
popa
inc
and
mov
jb
mov
clc
outsb
sbb
adc
cmp
aad
pop
pop
push
repnz
aam
mov
in
xor
loop
mov
xor
inc
pop
dec
inc
mov
jno
gs
sar
add
lahf
pop
cltd
mov
mov
add
into
lea
and
mov
jecxz
sbb
stos
lret
mov
xor
jle
loopne
test
or
gs
mov
adc
iret
movsb
test
jg
dec
shl
jmp
dec
movsb
in
shlb
mov
je
push
ljmp
popf
mov
roll
insb
xchg
adc
xor
xchg
mov
sub
mov
sub
movsl
sbb
push
lds
push
mov
jno
mov
dec
pop
lods
mov
mov
nop
dec
or
out
jmp
or
std
mov
adc
mov
xlat
out
data16
rclb
scas
rclb
lds
cmp
mov
loopne
xchg
pop
lcall
fmull
pop
std
repz
pusha
or
cmp
sarl
pushf
pop
rcrl
jns
or
cwtl
loope
inc
into
mov
lods
gs
push
movsl
out
mov
inc
pop
outsl
mov
les
inc
cmpl
cmp
push
xor
sub
xlat
fwait
pop
cld
mov
inc
cmpsl
mov
es
xchg
push
stos
divb
cmc
je
or
sub
xchg
test
and
lock
sbb
lahf
xor
adc
push
nop
enter
fdiv
mov
mov
xchg
jns
repz
jge
inc
ret
in
lahf
pop
ds
nop
js
bound
or
ret
ret
hlt
jns
in
xor
fstl
not
cmp
into
cmp
mov
dec
daa
mov
lret
cltd
jmp
xchg
lock
sub
sbb
jp
pusha
adc
or
dec
adc
push
jae
push
sarl
sti
idivb
sub
dec
dec
popf
add
in
and
adc
out
pusha
and
out
adc
jo
sbb
inc
xor
sbb
pop
jbe
fiadds
jl
sbb
shl
add
jecxz
add
mov
jmp
dec
in
mov
test
jp
xchg
mov
pop
and
cmc
mov
jno
xor
adc
jnp
int3
lods
sti
iret
push
sub
dec
mov
enter
push
ret
jb
mov
rcrb
fs
jmp
xor
pusha
inc
pop
imul
ja
inc
jmp
fsubl
dec
add
xchg
pop
scas
xchg
xlat
repnz
cwtl
sbb
mov
pop
in
je
push
leave
jno
push
enter
xchg
pop
sub
jae
movsb
add
push
mov
test
ret
aas
std
flds
cli
cmp
rorl
data16
cmpsb
or
lea
call
xchg
pop
negl
push
push
dec
int
xchg
jecxz
jnp
ljmp
adc
mov
cmp
xor
test
fwait
popf
xchg
push
enter
stos
adc
pushf
rcr
inc
adc
inc
fistl
mov
pop
adc
ljmp
das
dec
cmc
aas
lods
mov
jbe
les
xchg
pop
mov
ret
cmpsb
pop
lds
pop
add
mov
out
push
cmc
jno
push
pop
sbb
cmpsb
insl
stos
and
pop
out
lret
dec
jge
fsubrp
arpl
in
roll
mov
inc
mov
das
and
adc
dec
sahf
cmpsl
push
loope
dec
cmc
push
dec
pop
or
mov
add
sti
xor
js
mov
movsl
cs
pushf
mov
adc
out
mov
fldcw
incb
sub
imul
jmp
mov
jnp
incl
push
in
out
fimuls
sub
icebp
dec
jmp
or
lods
push
jp
dec
inc
popl
sub
in
shll
std
insl
or
aad
addr16
mov
cmc
loop
xor
es
jo
out
pop
int3
inc
xlat
test
pop
ds
mov
inc
adc
mov
push
mov
xor
insl
stos
ja
push
pop
mov
jbe
pop
jb
or
sti
notb
fstl
movsb
xor
pushf
and
sub
js
jmp
mov
or
dec
ret
lret
rcr
test
mov
adc
jge
fmul
inc
jp
iret
xchg
movsb
mov
inc
add
or
xchg
fldl
lods
dec
out
fstps
jno
mov
mov
lret
rcrb
mov
push
icebp
jp
adc
in
mov
inc
sarb
sbb
or
add
mov
and
or
mov
lret
mov
arpl
cmpsl
lods
xor
jmp
inc
mov
test
pusha
mov
xor
add
xchg
and
inc
leave
jg
sbb
dec
insb
popa
jns
lcall
mov
int
and
stos
shrl
push
cmp
push
in
dec
mov
mov
adc
mov
and
pop
pop
adc
sahf
cwtl
stos
pop
bound
mov
cmpsb
sbb
inc
and
xor
ja
cmpsb
mov
dec
pop
adc
testl
pop
dec
rcrl
xor
gs
cli
lods
mov
into
pop
scas
lds
add
and
inc
push
adc
movl
cmpb
addr16
xorl
mov
push
mov
sbb
dec
inc
vphaddbq
imul
xor
push
ds
dec
aas
or
pop
inc
sar
mov
mov
mov
sbb
loope
ss
mov
ficoml
or
adc
adc
pushf
fwait
xlat
imul
sub
push
add
aas
loope
scas
xchg
push
imul
movsl
popa
pop
in
pop
movsl
push
add
mov
and
cmp
or
pop
add
jbe
js
xchg
scas
pusha
enter
lods
clc
mov
xchg
popf
mov
bound
xor
xchg
and
repnz
dec
pop
jnp
fiaddl
mov
mov
mov
push
inc
lahf
dec
dec
loop
imul
mov
push
rorb
adc
mov
push
imul
add
mov
stos
rcrl
into
daa
mov
into
pop
pop
jl
pop
int3
mov
outsb
cmp
ja
add
xchg
sbbl
outsl
adc
ljmp
sub
lret
lret
mov
dec
mov
aas
mov
jecxz
or
ljmp
loopne
lea
stos
dec
add
mov
sub
pop
hlt
pop
jg
fwait
inc
cmc
fisubrs
ss
mov
xchg
in
dec
pop
cmp
mov
push
mov
jp
rcrb
leave
aad
fiadds
addr16
popl
jo
cwtl
push
push
jmp
loope
jno
out
das
orb
inc
or
jb
jb
rcll
mov
mov
pop
adc
int
pop
or
sub
imul
mov
adc
insb
shrl
cmp
test
xchg
out
repz
adc
aaa
push
test
xchg
pop
sub
rol
cmp
and
jns
add
and
pop
adc
popa
push
push
lcall
insl
mov
fisubrs
mov
dec
pop
jp,pn
js
sub
pop
test
je
ret
adc
daa
mov
arpl
call
sbb
push
mov
cmpsl
cmpsl
pop
bound
xor
sub
sub
mov
mov
data16
and
mov
insl
mov
xor
inc
mov
xchg
cmc
mov
subl
cltd
adc
cs
ficoms
mov
leave
fcom
in
jl
jg
jb
addb
cmp
lahf
test
inc
ljmp
xchg
fcomip
sub
fisubs
jmp
jcxz
ljmp
in
mov
dec
out
ficompl
sbb
jecxz
mov
out
cld
scas
mov
mov
mov
aam
ficompl
sub
push
test
cmp
push
cwtl
unpckhps
xchg
rcrl
lea
xchg
fs
out
mov
jmp
mov
cmp
pop
int3
test
xchg
dec
pop
mov
aad
insl
ljmp
sbb
adc
lea
jo
sub
mov
cmp
jp
adc
pusha
jne
sbb
lds
mov
lods
pop
sahf
int
stc
xlat
ss
xchg
jbe
shlb
test
push
shrb
pop
pop
mov
or
mov
in
movb
das
adc
sti
rolb
ss
jo
iret
mulb
sub
roll
push
stc
lods
fists
push
jle
in
jnp
xchg
sbb
aaa
xchg
jne
or
adc
inc
jno,pn
or
jno
jecxz
jb
dec
mov
pop
frstor
gs
jecxz
stos
pop
movsb
pop
adc
scas
push
jge
repnz
push
mov
sub
aas
aaa
mov
imul
scas
push
cmpsb
xor
mov
xor
fimuls
push
cmpsl
fistpl
and
inc
xchg
ja
or
ljmp
stos
cs
loopne
mov
jbe
outsl
jp
fnstsw
ror
hlt
lods
adc
xor
pop
ja
mov
jl
xor
cwtl
cmpsb
pop
popa
xchg
inc
mov
mov
iret
loope
std
ljmp
jno
jo
mov
xor
xchg
jb
shrl
popa
or
xchg
xchg
xor
pop
frstor
jo
xor
sub
lea
into
pop
dec
pop
sarb
sub
stos
pop
fucom
orb
mov
sbb
outsb
jg
cltd
pause
dec
add
mov
stc
jae
out
outsb
cld
adc
push
mov
test
movsl
xlat
mov
cld
mov
jae
add
or
cmp
xchg
call
mov
xchg
nop
ljmp
daa
sub
jns
bound
dec
adc
and
xchg
rclb
mov
fbld
int
xlat
xor
inc
cwtl
jbe
mov
mov
xor
cwtl
dec
mov
inc
xchg
movsb
push
sub
and
adc
jmp
in
lret
push
mov
out
dec
sbb
rcrl
out
fisubl
mov
add
jecxz
lcall
xor
fldt
loope
sbbl
pop
cld
imul
jle
mov
cld
fwait
pop
outsb
scas
jno
clc
in
ret
pusha
dec
sbb
pop
push
xor
jnp
out
subb
popf
jno
add
stos
pop
arpl
inc
iret
in
cmpsb
shr
fs
loop
lret
mov
add
lods
push
data16
mov
adc
xor
mov
sbb
leave
gs
nop
mov
in
je
jne
adc
popa
push
sbb
outsb
in
stos
fadds
xor
and
icebp
inc
mov
adc
mov
mov
sbb
out
and
enter
negl
adc
push
rcll
jmp
repnz
imul
cli
into
mov
stos
mov
in
arpl
push
ffreep
loope
dec
push
sbb
fstpt
in
fcmove
insl
gs
and
adc
btr
sahf
scas
out
ljmp
sub
xchg
mov
mov
notl
out
and
cld
je
xor
data16
sahf
movsb
hlt
or
int3
lret
fwait
mov
pop
adc
enter
inc
stc
imul
sbb
lock
jns
sub
jle
add
int3
push
insl
push
push
mov
dec
push
push
mov
lea
imul
mov
jg
out
gs
mov
cmpsb
adc
cli
leave
mov
fimull
mov
xchg
xor
mov
imul
rcrl
in
push
or
arpl
lds
leave
divps
rcrb
fmuls
ss
push
ret
adc
lods
aad
inc
jp
bound
jp
shlb
ja
mov
dec
mov
pop
cld
and
cmp
sub
sub
mov
lahf
xchg
lcall
hlt
cs
add
imul
loop
add
or
or
adc
or
cli
or
ss
das
into
mov
and
cmp
and
jne
cmpsb
popf
loope
mov
sbb
jmpw
sbb
mov
mov
sbb
pushf
out
add
sbb
cld
mov
scas
and
in
add
imul
repnz
cmpsl
ss
or
push
push
pop
out
cld
movq
pop
dec
popa
fwait
mov
enter
std
mov
and
je
mov
or
push
jg
jo
aad
mov
push
jmp
add
cmp
dec
mov
jmp
and
lret
mov
mov
cmp
fdivrl
xor
and
movsb
xchg
mov
outsl
frstor
adc
jne
xchg
jmp
data16
dec
push
inc
je
push
add
dec
int
out
xor
adc
dec
paddd
out
sbb
xchg
ss
popa
jp
js
stc
mov
popf
int
out
lods
xor
lcall
add
sub
movsb
adc
jp
arpl
pop
push
cmp
and
mov
shll
cltd
push
stos
mov
data16
arpl
add
mov
xor
sbb
xchg
not
xchg
int3
sub
clc
jmp
jg
fildl
jle
dec
dec
ficompl
lods
je
inc
and
push
mov
mov
cltd
stc
inc
xchg
sbb
push
negl
sbb
in
popf
loope,pn
lahf
sbb
lods
add
xchg
ret
aad
shl
pop
and
inc
mov
cmpsl
fbstp
insl
xor
jo
mov
cmp
ljmp
dec
push
sti
imul
loop
adc
xchg
insb
je
add
jmp
adc
mov
pop
lret
movsb
xchg
inc
pop
push
int3
test
xchg
aaa
dec
ja
cmp
shll
dec
pop
dec
inc
pop
jle
adc
xchg
mov
lds
or
fistps
push
adc
sub
xchg
jge
ljmp
and
sub
or
and
xor
ljmp
icebp
mov
das
dec
sub
sbb
insb
push
mov
dec
dec
mov
sub
adc
xchg
pop
push
jno
and
stc
pop
inc
stos
xor
mov
push
orb
sbb
in
ja
cmp
ss
js
je
or
ret
shrl
int
pop
sbb
pop
mov
int3
sub
subl
adc
mov
pop
and
mov
mov
pop
lcall
aas
cli
pop
pop
pop
xchg
loope
sub
cmp
fs
cmp
push
adc
repz
or
jb
dec
nop
jo
lea
push
aas
js
mov
fldcw
int
adc
mov
aam
loopne
subb
inc
movsl
xchg
mov
andl
cmp
jge
fnsave
jns
popf
lods
jl
mov
sbb
xchg
aaa
imul
rorl
sbb
test
hlt
mov
xlat
and
pextrw
inc
or
mov
dec
mov
push
sub
lcall
mov
jmp
fisubs
js
pop
ret
inc
dec
add
jg
inc
inc
pop
sbb
ss
lea
repz
in
push
in
rcl
les
pop
mov
aad
jns
mov
mov
mov
imul
dec
cli
insb
cmp
lods
pop
fstps
add
pop
mov
inc
mov
clc
in
mov
stos
fcmove
out
fcoms
ret
inc
inc
jmp
and
and
dec
mov
lea
pop
mov
cmp
lock
lcall
int3
stos
call
xchg
aad
movsb
pushf
dec
add
and
push
sbb
or
xchg
adc
xchg
inc
push
or
loop
adc
push
mov
sub
xchg
mov
pop
add
inc
aaa
inc
cmpsb
out
sahf
jo
push
ss
imulb
mov
ret
mov
mov
ljmp
mov
movzwl
jmp
shlb
pop
aas
leave
jbe
cld
and
push
shll
mov
stos
fisubs
loope
inc
pop
das
roll
cmpsl
xchg
sti
sub
add
loopne
sub
in
std
xor
or
cmp
xchg
xchg
or
aas
sbb
test
cli
push
add
or
lods
adc
cmp
out
test
int
addr16
nop
add
imul
xor
fmuls
shlb
pop
fisubs
jae
in
aam
or
pop
lret
lds
ficomps
je
ret
pop
jge
cmpb
cmpl
jae
cmp
insb
es
add
sub
scas
shrb
fisttpll
movsb
push
dec
lret
fs
hlt
in
dec
pop
in
pop
test
dec
je
popf
aam
push
iret
lret
out
inc
cmp
and
and
xlat
adcl
ret
js
stos
sub
rcll
pop
pop
in
shll
xchg
into
cmpsl
mov
repz
mov
loop
adc
mov
mov
push
jne
xchg
mov
mov
and
jp
fisubrs
jmp
aas
adc
les
test
inc
imul
fisubs
addl
imul
adc
add
fidivs
cmc
loop
push
xchg
call
daa
aad
xchg
cld
sarl
cltd
sbb
dec
aas
loope
hlt
stc
mov
push
insb
js
mov
fildll
notl
repnz
fwait
push
pop
jo
fwait
gs
jle
popa
cmp
lds
out
adc
lds
fisttpll
sub
sub
ja
out
jp
je
and
sbb
ret
add
push
and
lea
je
push
fdivl
jne
test
dec
call
stos
mov
cmp
aam
cmp
in
or
sub
pop
movsl
xchg
lret
xchg
xor
cltd
xor
and
inc
cmp
sub
lahf
sarl
adc
jb
stc
jg
jge
dec
and
jl
add
push
sbb
in
mov
cltd
daa
adc
gs
sub
addr16
push
sub
pop
cli
mov
xchg
cmpl
gs
xor
jle
out
insb
fildl
push
nop
data16
fsubr
xchg
pop
adc
mov
ret
insl
cmp
pushf
faddl
mov
repz
je
pop
daa
pop
les
jmp
std
mov
xchg
enter
xchg
shlb
or
mov
ret
cmp
add
int3
cmp
movsl
in
and
dec
loopne
lock
xor
jp
dec
lret
sbb
ss
shrb
inc
jnp
lcall
lahf
jbe
out
in
dec
xchg
scas
jns
xor
sbb
push
rcl
rolb
or
fbstp
mov
stos
stos
hlt
idiv
outsb
sub
push
icebp
test
cmp
js
out
push
jbe
add
data16
lahf
pop
and
dec
push
outsl
jecxz
into
jle
sub
cmp
push
lea
sub
and
inc
push
lock
lcall
xor
lret
sahf
insb
or
jmp
popf
dec
imul
mov
in
cmp
mov
mov
rorb
sbb
cmp
or
stc
out
jnp
pop
je
xchg
jae
and
ret
pop
jp
mov
or
and
adc
fildl
mov
test
adc
jmp
mov
lock
cmp
xor
sbb
or
push
lcall
mov
std
mov
daa
cmpsb
cmp
push
clc
ret
dec
push
repz
push
inc
les
adc
insl
cmpsb
xor
xchg
sub
jg
jnp
pop
sub
clc
pop
and
jmp
clc
test
out
scas
test
sarb
ljmp
cs
pop
adc
sbb
std
cmpsl
mov
movsl
push
mov
mov
mov
test
mov
in
jbe
mov
imul
pop
add
mov
pop
les
add
shll
pop
ret
mov
fcomps
div
das
adc
or
insl
sub
mov
pop
popa
movsb
imul
push
std
sub
and
pop
mov
enter
jecxz
mov
sbb
and
fnstcw
mov
cmc
stc
je
cmp
stc
sbb
lahf
add
cld
adc
and
mov
and
shr
ret
jg
jne
stos
pop
jno
lock
lcall
push
pop
int
shr
repz
xchg
inc
mov
xor
call
add
loopne
rcrl
xchg
fdivrl
push
jp
and
lods
dec
cmp
push
or
dec
cmp
and
outsb
push
xchg
rcrl
std
push
filds
repz
sahf
loopne
jnp
or
std
leave
push
xchg
aas
dec
push
push
leave
hlt
sbb
nop
in
adc
add
cmpsb
or
mov
mov
cltd
popf
loop
lock
push
add
and
insb
sbb
xchg
xchg
or
lods
xchg
and
xchg
inc
push
xor
mov
test
push
mov
add
pop
xchg
dec
push
je
and
mov
ljmp
cmp
insb
xor
inc
cmp
out
push
mov
mov
arpl
hlt
xchg
xchg
or
shlb
jns
subl
or
dec
in
ret
push
pushf
sub
mov
push
jmp
out
nop
ss
xchg
popf
pop
mov
aaa
xchg
xor
cmc
jns
xchg
pop
aaa
mov
int
dec
das
hlt
stc
or
push
div
push
addr16
mov
or
ror
add
clc
insb
adc
pop
mulb
orl
loop
cli
mov
push
maxps
xchg
andb
outsb
jnp
adc
or
jg
roll
pusha
push
les
jno
stos
arpl
cmp
idivl
popa
mov
les
cld
popa
andl
dec
jbe
add
data16
sbb
xchg
jno
jo
or
pop
scas
or
negl
push
ljmp
stos
dec
dec
pop
push
cmp
sub
jno
cmpsb
cwtl
popf
ret
aas
testb
inc
mov
pop
movsb
cltd
out
ljmp
dec
xchg
adc
inc
cmpl
popf
daa
push
fsubrs
outsb
call
das
pop
xchg
push
push
pop
sbb
cmp
bound
outsl
mov
insl
popf
jg
jp
test
dec
pop
xrelease
cmc
xlat
clc
pop
pushl
mov
lret
ret
aaa
outsl
std
jl
xchg
lret
arpl
xchg
fimuls
sub
inc
mov
xchg
add
aam
sahf
sahf
inc
dec
sarb
mov
sub
inc
dec
rorl
cmp
pushf
mov
mov
je
and
add
dec
insl
mov
repz
ja
fldt
leave
xchg
pop
push
roll
mov
je
je
adc
sub
inc
scas
test
aad
mul
popf
jl
push
dec
fbld
insb
enter
jno
jmp
iret
pop
out
aam
xchg
dec
inc
es
push
xchg
movsb
mov
outsb
mov
pop
movsb
fbstp
lcall
rcl
gs
or
xchg
repz
mov
and
cmpsl
cmc
das
pop
stos
cmp
pushf
daa
mov
loope
in
in
mov
or
es
enter
push
movsl
iret
sbb
aad
call
addr16
hlt
aam
sti
xor
nop
je
rol
or
pop
fisubrl
fdivr
outsb
cmp
mov
push
incl
cltd
mov
hlt
push
cli
pushf
mov
pop
jnp
fnstcw
mov
pop
ret
in
cmp
xchg
cmp
and
sbb
popf
xor
pop
shll
push
pushf
dec
mov
div
fadds
sbb
loopne
and
pop
imul
loope
xor
pop
or
xchg
sbb
leave
cmp
lds
jmp
stos
push
lods
pushl
fcoml
jne
mov
mov
push
push
mov
lods
dec
xchg
dec
or
cmp
adc
movsl
outsb
jne
shrb
fcmovnb
mov
lret
or
repnz
call
dec
add
es
inc
add
divl
jns
in
dec
mov
xchg
cmp
idivb
rorb
jmp
ljmp
in
gs
ret
mov
leave
test
add
cltd
xor
xor
lds
rol
fcmovne
sub
mull
cmp
cmp
lods
push
jle
pop
in
mov
cwtl
push
pop
js
mov
lcall
and
daa
jl
test
jae
js
jae
repnz
fiadds
shl
xchg
adc
mov
pop
and
cwtl
push
fisubrs
outsb
mov
pop
dec
jle
leave
es
stos
imul
push
ret
xchg
and
stos
cmp
or
icebp
xor
mov
in
js
jmp
popf
mov
and
jl
stc
xor
out
xor
jbe
push
adc
mov
cmp
stos
adc
mov
rorb
imulb
lahf
ret
dec
pushf
incl
cmp
in
sub
xlat
gs
sti
mov
test
repnz
scas
sbb
out
xor
mov
mov
push
pop
inc
fcmove
stos
les
and
mov
insb
and
mov
icebp
push
push
lahf
lds
jp,pt
pop
adc
into
gs
and
pop
and
outsb
and
test
xchg
cmp
scas
es
movsb
cmp
icebp
inc
pop
mov
dec
std
dec
adc
insb
adc
cmp
mov
cmc
pop
lock
scas
mov
adc
jbe
pop
aam
jl
hlt
and
iret
clc
idiv
pop
mov
add
popf
cmp
scas
loop
inc
pop
or
sub
jl
fdivrp
jecxz
dec
ret
inc
icebp
add
aaa
xor
pop
mov
in
loop
rcll
sub
sti
adc
fcoml
lcall
mov
cmpsb
cmp
pop
xorb
cmp
push
in
jb
jle
inc
lret
inc
jg
inc
mov
in
pop
sbb
sbb
cwtl
mov
ffree
dec
sti
decl
shlb
add
scas
pop
mov
and
mov
fs
std
mov
pop
out
popa
adc
test
pop
sub
cmp
fldcw
std
xchg
jle
mov
mov
cmp
xor
or
lret
mov
xor
xchg
or
xchg
add
mov
mov
fwait
scas
xchg
pusha
and
fwait
sub
push
ret
xor
push
mov
and
int
arpl
xor
jl
jae
ja
lea
and
mov
jb
mov
bound
pusha
pop
inc
pushw
mov
jnp
bound
inc
ret
sbb
or
mov
ljmp
lret
pop
pop
push
mov
cmp
mov
icebp
lret
dec
xor
lods
lock
rorb
push
dec
jmp
pop
mov
push
clc
imul
pop
imul
jge
sbb
or
pushf
pop
dec
mov
fsubr
xor
cmp
xor
lret
sub
mov
clc
pop
xchg
bnd
dec
mov
cltd
mov
inc
int3
nop
jns
pop
sbbl
stc
out
add
jp
jns
add
push
fsubrp
bound
add
nop
aas
mov
sahf
mov
andl
mov
dec
imul
push
inc
xchg
cmpl
popf
jb
push
and
add
mov
cmc
add
ds
out
fwait
dec
mov
jnp
std
add
mull
dec
lock
cli
inc
cmp
out
pop
pop
cmc
adc
aad
cmp
cmp
mov
or
sub
push
jecxz
pop
imul
std
cmc
mov
xchg
fld1
bound
icebp
jo
inc
and
stos
push
push
imul
jbe
adc
adc
fstl
nop
movsl
loopne
push
out
divl
negb
jge
ffreep
pop
cmpl
jg
rorl
lods
negb
dec
cs
repnz
sbb
sub
outsb
pop
movsb
sbb
mov
mov
or
cwtl
test
movsb
lock
sbb
mov
mov
dec
cli
add
int3
jge
xor
cmp
cmp
test
mov
mov
adc
mov
aam
in
dec
pop
in
push
icebp
sub
mov
mov
int3
fstl
fidivrl
cmpsl
into
mov
xlat
mov
pop
mov
jb
inc
inc
mov
and
push
pop
in
push
or
mov
mov
add
daa
inc
mov
jmp
jecxz
ja
je
mov
jbe
or
inc
jecxz
das
fucomi
jl
sbb
jmp
adc
sub
jmp
roll
pop
mov
pop
adc
sbb
push
movsb
lds
mov
and
mov
sub
outsb
jmp
test
sbb
imul
mov
adc
pop
mov
ret
pop
pop
mov
pop
out
adc
pop
add
fmuls
push
sub
mov
out
and
dec
jmp
push
mov
sub
pop
ds
fstps
xor
shrl
lods
xchg
cmp
dec
les
push
jp
fwait
sub
jecxz
clc
test
sarb
jns
sbb
or
xchg
test
sub
mov
fs
fs
jb
insb
test
data16
jge
jge
mov
xor
lret
sub
dec
adc
cmp
sub
addr16
notb
in
out
into
js
ja
inc
in
xchg
pop
cs
jnp
icebp
int3
fcmovne
mov
inc
jmp
push
adc
rcrb
fwait
add
pop
jge
std
jl
mov
jecxz
ds
mov
testl
icebp
push
fs
decb
mov
cwtl
loope
sbb
das
mov
jecxz
clc
xchg
add
adc
int
aad
xlat
inc
fildll
aaa
cltd
jbe
movsb
mov
aas
repz
jno
bswap
and
mov
ror
lahf
ret
in
jmp
dec
clc
pushf
je
jmp
popa
mov
push
jmp
jp
iret
fwait
ret
fwait
sub
out
cmp
xchg
mov
jg
and
push
mov
sahf
sbb
lods
sub
sbb
xlat
cmpsb
xor
cmp
xchg
ljmp
mov
pushf
adc
cmc
cld
fnsave
jns
mov
test
adc
mov
and
stos
repz
movswl
jmp
loope
jmp
incl
mov
mov
mov
popf
and
push
pop
push
xor
and
sub
arpl
dec
loope
pop
mov
xor
push
mov
test
in
mov
push
mov
cmp
or
js
mov
rol
jmp
mov
inc
or
fsubrl
mov
mov
ret
pushf
enter
push
into
mov
mov
sbb
inc
ss
clc
inc
jns
pop
loope
xor
mov
mov
sbb
es
mov
sahf
aad
xor
stos
leave
pop
daa
pop
nop
sub
hlt
cs
fucomi
cld
sbb
xor
loopne
and
push
dec
movsl
shll
jae
inc
fbstp
mov
fnstsw
test
and
fwait
push
mov
gs
xor
jae
outsl
ljmp
cmpsb
cmp
mov
pop
mov
enter
jo
dec
mov
lea
dec
sub
jge
add
int3
lods
inc
xor
mov
enter
adc
lahf
lahf
stc
mov
adcb
xchg
int3
sbb
ficoms
jnp
mov
mov
movsl
int
loop
adc
insl
test
imul
mov
lds
repz
scas
fsts
loope
fnstcw
outsw
pop
xchg
pushf
sub
out
loopne
popa
loopne
mov
or
mov
push
mov
pop
or
cli
lods
fistpl
mov
dec
push
out
out
aaa
sbb
insb
push
or
mov
std
sahf
fiadds
xchg
jp
fistl
shrl
push
add
arpl
jns
pop
mov
inc
cli
rclb
and
lds
jne
lcall
jb
pusha
jmp
mov
push
aad
lock
ss
fwait
aam
and
adc
in
into
mov
sub
pop
xor
dec
fimuls
stos
or
push
cmpsb
mov
push
sbb
and
xor
stos
mov
or
dec
xor
push
dec
arpl
adc
xor
or
adc
es
insl
xchg
xlat
jo
mov
push
scas
or
adcb
into
pop
fisttps
cmp
stos
aam
xchg
test
add
dec
repnz
repz
dec
imul
aam
mov
mov
inc
inc
mov
clc
outsw
fldl
mov
jmp
shl
loope
xchg
aas
out
cmp
or
xchg
or
cmpb
add
pop
mov
sbb
pop
scas
rolb
movsb
inc
mov
lods
mov
pushf
xor
imul
lock
add
gs
es
inc
pushf
or
mov
push
sarb
adc
or
or
lahf
ss
sbb
repnz
push
cmp
mov
sub
inc
mov
push
imul
mov
es
inc
ja
adc
orb
pop
int3
sub
sbb
cwtl
rolb
inc
mov
xchg
int3
fs
outsb
mov
sbb
dec
push
mov
pop
test
sub
dec
and
cmp
js
jecxz
pop
dec
sti
orb
addr16
cmpsl
stos
sahf
xor
nop
xchg
pop
mov
dec
int
inc
xchg
push
mov
je
pop
or
xor
pop
loope
push
pop
call
sbb
out
jle,pn
mov
loope
xchg
push
add
xor
adc
mov
test
cld
dec
jne
and
scas
jl
insb
ljmp
dec
jne
sbb
adc
cmpl
ss
sbb
inc
cmp
fisttps
popa
js
jno
adcl
lret
arpl
lret
jns
out
in
sub
addr16
lcall
jge
or
in
das
cmc
fidivrs
or
xchg
pop
rcll
cmp
insl
dec
aam
mov
or
nop
push
sbb
sub
jecxz
fnstsw
or
les
and
or
mov
imul
outsb
mov
loope
call
mov
dec
pop
cmp
inc
icebp
pop
push
mov
in
xor
int
fs
mov
push
sti
out
int
push
and
dec
loope
sub
shll
lods
pusha
adc
outsb
mov
inc
and
dec
icebp
js
sbb
out
mov
dec
jecxz
xchg
mov
pop
mov
add
xchg
inc
mov
inc
movsb
jle
roll
stos
pop
icebp
mov
addr16
sti
insb
mov
je
jl
sub
mov
in
fs
sub
in
in
cmp
imul
add
jno
cmp
outsl
ret
ja
mov
sub
xchg
push
loop
lock
repnz
push
jle
dec
ja
jmp
jle
xchg
mov
in
mov
mov
push
int3
add
jge
sub
add
jl
loopne
movsl
sbb
jle
push
movsl
sbbl
sbb
test
leave
mov
nop
jg
ret
sub
sar
adc
std
js
sbb
js
pop
xchg
add
adc
cmp
xchg
pop
pop
out
adc
sahf
cs
subl
add
xor
jmp
pop
stos
or
outsl
jbe
dec
cmp
jg
test
repnz
fimuls
addr16
xchg
mov
push
mov
sub
dec
jb
mov
mov
ret
int
in
cmc
or
dec
jne
xor
shrl
mov
nop
testl
dec
pop
cwtl
xchg
test
iret
rorl
jno
popa
push
dec
cmpl
aam
sbb
xchg
adc
push
push
shl
and
sbb
xchg
or
add
mov
pop
rep
mov
cmpsl
sub
mov
test
jae
shll
aam
dec
scas
imul
and
mov
ret
and
cltd
inc
dec
cmp
fs
jne
iret
inc
add
sbb
pop
mov
sub
mov
stos
subb
jno
hlt
pop
jbe
out
inc
cmpb
das
mov
std
pushw
mov
in
jle
mul
sub
ret
into
jb
sbb
mov
adc
mul
mov
or
test
mov
xchg
negb
xor
adcb
dec
shll
xchg
sbb
or
pop
rcrb
xchg
jg
in
add
jae
jno
lret
in
lret
enter
scas
test
mov
or
call
sbb
cmp
jae
ficompl
and
cmpsb
mov
xchg
insb
fcom
push
std
rcll
pop
cli
xor
lock
or
dec
dec
int3
push
fldcw
mov
and
jae
vcvtsi2ssl
gs
lods
test
js
pop
sub
jp
adc
xor
loope
push
call
out
bound
inc
cmc
mov
in
mov
mov
enter
dec
lcall
sub
in
clc
xlat
jmp
fisttpl
imul
mov
in
pop
scas
cmp
and
inc
pop
and
lret
and
mov
adc
into
cli
daa
jne
arpl
and
gs
int3
xchg
or
fstps
lock
lods
imul
mov
xchg
fld
and
xchg
stc
pop
scas
leave
cmp
xchg
les
mov
daa
fsubl
pop
xor
lods
cmp
nop
sub
adc
cwtl
pop
mov
cmp
or
cmp
aad
push
inc
sub
dec
push
add
pop
jbe
ret
les
lods
imul
xchg
xchg
pop
inc
cmpl
mov
mov
xchg
xchg
adc
popf
ds
sbb
rcll
popa
mov
mov
popf
pop
inc
adc
pop
mov
lret
cltd
les
pop
lock
cmp
popf
jnp
cmp
push
ret
and
push
pusha
cmp
xlat
inc
sbb
xchg
add
dec
icebp
fisttps
cmpsl
rorl
fs
sti
clc
xchg
ss
test
imul
sahf
sbb
sbb
adc
lcall
aad
nop
aam
ja
sbb
push
mov
or
push
andl
cld
in
lret
enter
and
enter
out
cld
leave
and
push
jge
pop
int3
mov
into
je
mov
add
ret
lock
cmp
scas
jns
ss
sub
je
dec
push
ficoms
sbb
xchg
mov
and
push
movsl
mov
insb
imul
inc
xor
cmp
repz
pop
mov
mov
daa
adc
mov
mov
jno
out
mov
jnp
sbbb
jne
test
ficoml
xor
inc
xchg
nop
cmp
mov
pop
mov
outsb
adcb
inc
call
push
aaa
mov
ror
popf
jb
jg
sub
and
or
std
lcall
sbb
sbb
orl
xchg
or
mov
pushf
or
cmp
cmp
ret
jmp
sbb
adcb
xlat
sub
or
inc
sbb
cld
dec
scas
lock
mov
fldcw
aaa
loop
lret
fisttpll
clc
in
cmp
das
hlt
jp
jnp
out
adc
shlb
flds
push
pop
sbb
adc
shll
sbb
pop
call
jle
xchg
pop
add
pop
pop
xchg
mov
jae
push
or
and
lcall
lds
xor
pushf
push
xor
and
pop
out
jl
bound
pusha
je
xor
dec
dec
mov
adc
clc
imul
adc
adc
in
dec
inc
icebp
mov
sbb
jbe
xchg
hlt
xlat
stos
jno
movsb
adc
jp
scas
insl
or
dec
add
xchg
mov
stos
in
outsl
mov
outsb
aas
out
cmp
xchg
das
movsl
cmpsl
fsubr
xor
ret
popf
push
sbb
leave
inc
test
out
in
lcall
mov
or
adcb
sbb
xor
cmp
or
sub
cmp
es
bnd
sub
cmp
adc
fcompl
dec
pop
test
push
in
loopne
mov
mov
enter
mov
shll
sbb
test
fidivs
dec
es
inc
cmp
mov
test
fmuls
les
sti
xor
xor
test
sub
xor
xchg
cmp
cmp
or
popa
mov
pop
scas
test
lahf
lret
or
or
xchg
sbb
lret
push
adc
mov
mov
cmp
push
cmp
cs
data16
xor
mov
fistpll
push
jae
aad
xchg
pop
jmp
or
push
sbb
xchg
in
push
lock
xor
sbb
inc
test
in
lds
inc
adc
imul
scas
int
call
hlt
mov
rcrl
pop
or
cs
test
jns
adc
jns
push
dec
jge
xchg
ss
inc
mov
pop
repz
cmp
andl
popa
adc
movsl
add
popa
rcrb
aaa
test
stos
jmp
and
add
cltd
nop
outsl
int
xlat
inc
cmpsl
sbb
mov
mov
in
pop
adc
rolb
nop
mov
aaa
int3
or
pop
jbe
cmp
dec
push
pop
inc
mov
mov
jbe
xchg
and
pop
sub
out
add
ja
inc
inc
and
fmuls
xchg
repnz
inc
subl
or
pop
hlt
daa
xchg
fisubrl
lds
in
push
adc
mov
test
js
stc
push
inc
mov
inc
icebp
subb
aas
jl
mov
xor
pop
std
jb
cmp
jecxz
add
mov
push
sbb
sbb
gs
xchg
sbb
push
outsl
add
sbbb
stos
xor
jno
add
and
cmp
pop
mov
push
ds
mov
mov
in
outsb
rcl
mov
pusha
in
jae
cld
add
mov
es
push
add
outsl
imul
xchg
push
adc
xchg
rol
outsl
test
xor
mov
aas
and
pop
cmp
mov
in
mov
sahf
shr
xchg
fistpl
mov
or
daa
aad
adc
jl
dec
dec
rcrb
test
sahf
stos
mov
nop
and
aaa
inc
xor
push
mov
pop
jg
enter
jbe
test
inc
popl
pop
and
add
les
fmull
adc
jmp
fwait
pop
in
adc
loop
xchg
dec
xchg
cmpsb
in
in
mov
xor
mov
getsec
mov
push
pop
push
add
add
adc
dec
cmpsl
inc
in
loopne
mov
xor
fisubl
rcrl
icebp
xchg
add
ja
xchg
jnp
ret
cmp
push
sbb
xchg
push
repz
je
and
cmp
xchg
in
fstl
xchg
clc
push
ljmp
cmpsb
inc
mov
xchg
mov
jae
or
in
mov
sbb
cltd
mov
sbb
jae
mov
rolb
jl
push
das
add
pop
xor
fcoml
addb
jl
lods
pop
shrd
rolb
push
shlb
scas
and
sub
jns
in
add
pop
test
inc
jmp
stc
mov
loope
xchg
lcall
jbe
mov
add
push
sti
sbb
nop
xchg
xchg
dec
jae
out
and
mov
pop
popa
push
popf
mov
or
adc
mov
mov
cmp
xor
mov
adc
jb
xchg
bound
test
sbb
ds
fwait
dec
mov
adc
int3
in
mov
xor
push
fucomi
cmp
aam
xchg
sub
add
dec
or
shl
loopne
fidivrl
sub
mov
xorb
jp
inc
or
mov
imul
sub
or
dec
notl
movsl
aaa
ret
sbb
mov
mov
test
lods
mov
push
das
cmp
fs
imul
jb
sub
ret
push
iret
lret
xor
xchg
jae
sub
xor
fucomip
push
std
sbb
sub
push
mov
outsb
inc
shlb
jno
push
mov
cmp
or
and
inc
hlt
jl
push
insl
fwait
mov
pop
add
fisubs
cmc
stos
or
push
fmuls
leave
mov
loop
popa
loop
cmc
in
pop
mov
dec
pop
inc
sbbl
xor
insl
pop
add
or
ja
xchg
addr16
sub
fdivr
xchg
push
push
daa
pop
xor
cli
sbb
xchg
aam
sbb
mov
jmp
xchg
adc
neg
sub
loop
xor
sbb
xor
pop
mov
mov
sub
mov
loopne
cmp
push
mov
pop
jg
mov
repnz
divl
jecxz
test
aam
lcall
mulps
and
mov
js,pt
loop
cmpsl
scas
fisubs
loope
adc
jmp
les
es
lcall
sub
ficoms
insl
inc
fdivrs
aaa
cmpsl
inc
movsb
in
cmpsl
add
fisttpll
push
cwtl
mov
movsw
sub
sub
inc
cmp
lds
mov
fstl
scas
sub
cs
lock
mov
or
pop
inc
fimuls
fisttps
jae
sbb
les
sbb
ljmp
jo
sahf
stc
pop
gs
test
jno
lods
movsl
lret
push
mov
sub
ret
push
enter
ss
inc
stos
push
mov
daa
cmpsb
inc
lcall
pop
ljmp
dec
fwait
les
lods
sub
mov
mov
mov
jecxz
lods
sub
xchg
cmpsb
imul
mov
cmp
das
jmp
es
mov
mov
sbb
xor
xor
xchg
pop
mov
add
popa
cmp
aad
add
insb
mov
jae
pusha
mov
pop
mov
or
dec
sub
xor
or
pop
push
packuswb
pop
dec
sbb
pushf
mov
inc
inc
adc
add
sti
mov
into
jae
fmul
push
sbb
out
fisubl
add
adc
rorb
loopne
push
pop
popa
pop
push
ret
aad
fwait
and
xlat
aam
adc
or
fmul
lds
incl
aaa
push
pop
sti
fisttpl
pop
pop
cwtl
pop
adc
push
scas
lcall
ss
cli
sahf
jno
aam
xorl
js
leave
sbb
data16
dec
aad
mov
out
or
int3
pop
fcmovnbe
adc
imul
cmp
cmp
lock
sbb
js
nop
fistpl
push
enter
xchg
jno
bound
and
jg
jno
cmp
pop
cmp
cs
popf
cs
push
xchg
imul
pop
sti
jno
jp
push
pop
pop
out
jb
sar
mov
stc
out
leave
incl
pop
cs
jp
dec
xchg
int3
adc
xor
daa
pop
xchg
jno
and
push
int
mov
jno
push
adc
aaa
into
aaa
aad
ljmp
mov
jnp
aad
enter
outsl
imul
adcl
push
add
or
push
push
out
outsb
into
and
mov
xchg
push
inc
inc
cmp
push
les
scas
inc
mov
mov
push
sbb
clc
movsl
jno
pop
push
adc
insb
add
adc
inc
xchg
ja
mov
into
shll
dec
ss
ljmp
inc
test
mov
mov
xor
iret
movsb
xlat
imul
add
or
ja
adc
adc
shll
out
shl
sub
fsubl
xchg
jno
loope
jmp
xchg
jge
ss
xchg
movsb
pusha
sub
popf
mov
pop
ljmp
jg
mov
aas
adc
ficompl
mov
stc
cmp
or
mov
mov
imul
push
mov
frstor
es
femms
jo
lahf
lret
mov
push
jb
mov
sbbb
mov
push
loope
and
cwtl
subl
mov
pop
mov
sub
xchg
out
test
mov
out
rorl
xchg
in
or
push
pop
mov
add
push
xchg
fdivrs
cmp
je
sub
adc
cwtl
and
mov
mov
lret
jbe
cs
pop
and
fwait
inc
xor
jbe
xchg
sbb
cld
loop
outsb
dec
add
bound
out
xchg
mov
jle
pop
pop
sahf
inc
pushaw
call
imul
xor
les
test
das
adc
sub
imulb
and
inc
mov
push
push
test
not
rolb
pop
stc
sahf
dec
repnz
mov
inc
push
lods
cmp
out
mov
aad
mov
dec
setae
mov
jno
or
push
pop
push
jle
cmp
jno
mov
cmp
sti
insl
xchg
cmp
push
cmp
dec
push
sbb
pop
dec
mov
stos
mov
nop
add
mov
test
mov
insl
sbb
movsl
inc
in
adc
sbb
xchg
sub
jecxz
adc
cmpsl
push
inc
and
arpl
xchg
or
sbb
mov
mov
mov
mov
call
sub
cwtl
rorl
addb
add
sahf
enter
aad
loop
xchg
lock
daa
shrl
iret
adc
inc
call
stos
mov
xchg
push
jns
fcomp
jns
push
fmull
cmp
pop
cltd
mov
mov
lods
popf
nop
xor
push
aad
add
cmpsl
into
dec
and
dec
mov
push
xchg
xchg
dec
mov
mov
loope
inc
adc
cmpl
push
pusha
imul
rcrl
loopne
jle
dec
mov
movsl
repnz
repnz
inc
sub
repz
mov
sub
jmp
xchg
addl
jge
mov
sub
popf
test
insb
icebp
or
std
lods
jbe
insl
xor
xchg
movsb
cmp
mov
testl
movsl
adcl
adc
xor
mov
fxch
adc
je
push
fdecstp
cmp
js
js,pn
js,pt
imul
stc
xlat
out
dec
mov
iret
mov
add
pop
jmp
cmp
push
inc
rorb
cmpsb
aam
out
rclb
add
jnp
out
jae
ljmp
or
cltd
js
aad
adc
cld
data16
sbb
les
mov
push
lods
cmp
mov
cmp
cltd
into
fistpll
movntps
pop
dec
insl
imul
mov
mov
cmp
xor
dec
sti
add
sahf
jp
repz
mov
lret
icebp
cmpsl
or
cwtl
mov
jecxz
lds
dec
test
ja
jne
sub
pop
mov
into
jno
adc
lods
loop
cmp
or
push
mov
xchg
cmp
sbb
push
jo
lahf
clc
fs
dec
adc
mov
pop
out
mov
shl
fnstsw
inc
lea
sub
aam
rcl
in
sti
popa
fstpl
cltd
flds
inc
xlat
push
stc
xchg
sub
dec
outsb
dec
mov
sbbb
negb
add
hlt
push
test
clc
sahf
ror
inc
push
nop
ljmp
push
pop
push
lret
push
fildll
out
jmp
cmc
cmpsb
pop
mov
sti
jge
sub
test
fs
arpl
movb
out
rolb
inc
sbb
or
test
xchg
das
in
aas
jp
out
neg
movsb
ja
jle
lock
popa
movsl
mov
mov
adc
ret
das
nop
dec
aam
call
mov
jne
pusha
pop
inc
pop
push
sbbb
xor
test
mov
push
push
push
ds
or
popf
xchg
xchg
js
cmp
sbb
jb
xchg
jge
inc
sbb
out
data16
fmuls
add
mov
inc
or
lret
pop
sbb
mov
aaa
cmp
lret
jge
jno
mov
jl
daa
push
imul
mov
les
sub
dec
cmpsl
lods
lea
mov
xchg
push
nop
addr16
test
leave
push
test
mov
rcrl
push
int
inc
setae
fiaddl
pop
cs
add
es
outsl
inc
adc
push
xchg
xor
mov
in
ljmp
lret
xchg
push
push
in
add
adc
cmc
idivl
mov
mov
mov
xlat
or
sub
cmp
sub
push
shl
in
mov
mov
jae
sbbl
fistps
es
mov
dec
add
test
aaa
data16
out
divl
lret
arpl
das
lds
mov
cmp
push
scas
cmp
jb
xlat
sbb
lods
cwtl
bound
repnz
or
jno
mov
enter
cmp
dec
pop
repnz
jno
jmpw
faddp
lock
int3
sbb
in
jo
adc
ds
nop
dec
and
xor
sbb
imul
in
inc
outsl
loope
mov
cltd
lods
jg
sub
lcall
aas
je
or
add
or
sub
mov
mov
movsl
or
out
adcb
pop
outsl
insb
aad
xor
in
clc
cs
repz
sbb
aaa
test
or
aas
and
cmp
ret
cwtl
mov
je
add
ret
cwtl
mov
loop
push
dec
and
jae
loope
jnp
jecxz
icebp
dec
cmp
mov
lcall
fadd
out
ljmp
jb
shrb
mov
fimull
mov
icebp
movsl
or
fwait
in
pop
dec
push
sbb
pop
jne
leave
mov
sbb
sbb
jbe
repnz
cmp
push
and
hlt
stos
mov
cwtl
je
dec
push
fs
mov
fsubr
fldenv
push
inc
mov
imul
push
jg
shll
int
inc
subl
gs
nop
insb
iret
adc
test
jmp
cli
fistpl
pop
xchg
mov
int3
aaa
push
addl
scas
insl
inc
push
jmp
mov
mov
mov
in
lcall
inc
inc
insb
lods
jnp
xchg
mov
aas
xor
mov
outsb
jns
rcrb
xchg
mov
out
insb
xor
cmc
xor
daa
pop
sub
jns
icebp
imul
xchg
lds
cmp
or
cmc
xchg
jno
andb
outsl
pop
add
and
and
lret
lods
sti
pop
or
gs
inc
adc
scas
rcr
out
loopne
fsubp
pop
mov
outsb
mov
adc
jno
pop
mov
jg
mov
mov
cmpsl
ret
nop
push
push
aad
stc
out
mov
mov
or
push
xor
adc
ljmp
arpl
in
data16
fsubl
call
pop
add
fcomp
in
push
jns
jge
or
int
cs
dec
mov
push
fldt
cmpsl
loop
mov
jae
aaa
outsb
pop
and
shl
imul
in
cmp
in
cmp
insl
mov
lea
adc
jle
push
dec
xor
mov
sbb
cmpsb
call
cmp
out
test
ret
xchg
js
add
jecxz
hlt
ds
mov
jnp
pop
xlat
inc
mov
xchg
xchg
pop
mov
sub
jae
jl
add
cwtl
mov
fwait
jnp
cmp
mov
xor
xor
pop
cli
and
push
fdivr
inc
es
sbb
mov
js
ds
mov
jmp
out
flds
sbb
jb
sub
in
mov
outsl
mov
add
xor
negl
mov
mov
shl
sahf
rcrl
test
fcmovnb
push
adc
mov
mov
mov
pop
mov
sub
jge
mov
lea
and
adc
ret
adc
lcall
dec
jbe
imul
stc
and
cmp
ja
stc
cmp
andl
lods
pop
inc
push
adc
repnz
stos
hlt
hlt
xchg
out
imull
mov
fnstenv
lret
adc
xor
add
xor
add
jae
orl
xor
ror
sbb
mov
add
jp
sar
inc
ret
clc
mov
inc
popf
ret
data16
xor
pop
ret
clc
sub
sub
mov
mov
push
pusha
mov
in
ds
jnp
imulb
add
test
ja
push
xor
bound
push
out
pop
or
jecxz
stos
sbb
lret
mov
inc
mov
or
sub
add
add
adc
leave
sti
xchg
into
and
sub
fnstcw
dec
dec
loop
sub
mov
push
and
sub
and
jl
adc
mov
loop
add
pushl
push
xor
mov
negb
call
daa
in
push
int3
aam
inc
sub
test
jo
mov
movsl
push
fs
sbb
iret
movsb
cld
xlat
push
mov
mov
xchg
les
add
lods
popa
in
or
movsl
lahf
push
inc
pop
sbb
mov
sub
jb
or
adc
pop
arpl
imul
jle
push
outsl
dec
outsb
popa
jno
mov
jg
sbb
mov
jge
fiadds
sahf
push
dec
xchg
jg
mov
test
inc
stos
push
jae
addr16
rcl
cmpsb
call
adc
sbb
bound
mov
add
dec
nop
or
xor
cmp
inc
sbb
and
jge
xchg
pop
outsb
out
cmc
xchg
sahf
jne
loop
ss
mov
cmc
dec
popa
mov
gs
mov
test
test
mov
xchg
iret
fwait
mov
out
push
icebp
jge
int
push
jl
mov
push
aaa
mov
fcmovbe
insb
dec
and
sahf
std
jb
test
or
xchg
pop
mov
mov
cmpsl
cmovno
repnz
push
jo
dec
mov
add
xor
xlat
lret
loope
xor
xlat
outsb
cmpsb
jl
jle
mov
cltd
mov
mov
pop
mov
in
sahf
daa
xchg
inc
paddsw
cld
aas
popa
mov
add
sbb
sbb
jo
outsl
push
out
loopne
inc
loopne
mov
cmp
out
pop
faddl
mov
cmp
or
jle
cmc
push
mov
inc
push
dec
jp
shlb
xchg
jnp
and
push
out
inc
push
cwtl
mov
lret
outsl
sbb
aad
mov
dec
or
xchg
add
mov
pop
inc
dec
sub
mov
push
cmpsl
mov
add
mov
es
test
rcrb
sbb
pop
mov
insl
add
xor
bound
cmpsl
inc
or
aad
xor
addb
in
test
dec
mov
das
js
pusha
mov
fwait
inc
enter
pop
repz
jmp
lahf
repz
sbb
sbb
iret
shl
adc
mov
ds
sub
mov
ds
bound
push
or
add
in
mov
xchg
jecxz
inc
into
lret
sbb
jb,pt
repnz
mov
inc
hlt
popf
and
lods
das
movsl
xchg
xlat
pop
and
lahf
addb
mov
cmpb
js
das
sbb
aam
mov
inc
dec
inc
ret
mov
sub
test
lea
adc
bound
mov
mov
fcmovne
pop
loope
lods
xchg
add
test
push
scas
test
iret
xor
rolb
icebp
jbe
mov
pop
loope
sub
inc
add
lds
or
iret
mov
xchg
mov
arpl
test
lods
in
add
xor
sbb
fs
mov
scas
cmp
mov
jnp
sub
xchg
cltd
and
js
test
hlt
jo
ja
rorl
addl
mov
sbb
push
mov
mov
jl
out
nop
mov
lahf
int
clc
xchg
mov
push
repnz
cltd
adc
movsb
push
adc
cmp
push
ret
loope
pop
ja
je
inc
insb
mov
repz
and
jns
addr16
fdivs
push
loop
mov
jle
std
lock
push
xor
ja
hlt
or
mov
add
mov
test
inc
xchg
scas
ja
push
mov
push
out
pop
pop
inc
call
xchg
daa
cmpl
inc
or
mov
inc
dec
dec
sub
sbb
mov
int3
xor
xor
cmp
cmpsw
mov
std
and
jecxz
out
in
mov
cmp
cmp
mov
xchg
jle
mov
inc
ret
ret
inc
data16
sbb
mov
adc
aaa
mov
mov
or
movd
mov
outsl
adc
adc
imul
or
and
stc
dec
or
adc
mov
xchg
out
stc
je
mov
daa
aam
subl
mov
inc
inc
pushf
enter
inc
fmulp
lret
mov
shl
push
or
jae
ret
cmp
ret
movsb
push
iret
mov
add
arpl
mov
add
fldcw
iret
lret
sub
aaa
gs
xchg
jge
sbb
int3
lods
mov
inc
add
idivl
mov
add
cmp
shlb
addr16
add
and
shl
movsl
iret
jg
arpl
fwait
mov
xlat
insl
cmp
nop
fcomip
in
sub
popf
jns
xor
dec
push
testl
adc
sub
stos
popa
out
cmc
bound
out
sbb
dec
lahf
pop
pop
lea
cmc
ss
mov
nop
inc
aad
mov
cltd
pop
adc
mov
dec
add
push
test
enter
hlt
jne
adc
ror
in
outsb
int3
cmp
nop
pusha
jo
sarb
cwtl
cwtl
cmp
fistpll
and
stos
add
imul
sti
fildl
rclb
add
ja
movsl
aam
sbb
pop
cs
andb
cs
xor
or
lahf
or
xchg
xchg
mov
cltd
push
mov
ret
les
jmp
aad
mov
stos
jle
sub
add
jo
les
cmp
jmp
jns
enter
psubsb
addl
ja
sub
pop
push
stos
mov
loopne
fnstenv
gs
adc
sbb
jmp
cmpl
cmpsb
xlat
pop
mov
pop
pop
mov
sub
cmp
push
incb
xchg
shll
dec
cmpb
mov
jae
sbb
xchg
xchg
sbb
mov
sub
sbb
cmp
xchg
or
mov
clc
aam
sti
jno
fidivrl
cmp
mov
fimull
xacquire
jl
mov
sbb
stos
outsl
sbb
aas
cltd
fisubrs
cmp
ficomps
movsl
xor
pop
sahf
pop
je
xchg
out
pushf
dec
sub
nop
out
dec
call
mov
adc
out
rcrl
xchg
xor
fwait
add
xchg
out
jbe
dec
push
popf
dec
in
addr16
mov
lods
push
lock
mov
roll
xor
inc
test
jno
dec
clc
fistpl
filds
fs
fst
mov
mov
cmp
pop
push
addl
mov
cld
cli
dec
jmp
int
les
or
loope
cmp
or
lods
imul
jnp
push
and
add
rol
hlt
inc
xchg
test
jle
incl
push
inc
insb
push
fists
adc
pop
in
mov
xor
xchg
gs
cmp
pop
and
xor
gs
xchg
test
inc
jno
nop
cmp
sbb
push
mov
mov
stos
mov
ficoml
cmpsb
cmp
cld
xchg
mov
addr16
sahf
lcall
xchg
fsubrp
in
pushl
int
es
jl
ficomps
mov
sub
lea
popf
or
mov
loope
dec
adc
std
in
push
add
xchg
jo
cli
stos
sbb
jns
sbb
mov
pop
xchg
call
in
inc
mov
rcrl
loop
loope
adc
add
cmc
xchg
popf
xchg
pop
movsl
xchg
jp
pop
daa
xor
daa
cmp
test
jl
cli
arpl
test
dec
icebp
add
or
outsl
pop
mov
andb
aaa
bound
fcompl
pop
ret
or
fdivs
adc
or
testb
pop
loopne
push
xchg
rorb
mov
sbb
jno
fnstsw
mov
pop
jo
in
scas
and
mov
add
add
in
leave
aas
call
push
outsl
rorb
sbb
sbb
cli
hlt
lea
mov
sub
aaa
jb
xchg
and
inc
mov
adc
aas
sbb
or
inc
sarb
pop
out
mov
negl
pop
mov
sbb
pop
popf
bound
icebp
push
mov
mov
push
aas
ret
mov
xchg
inc
pop
je
orl
add
xchg
xchg
into
test
push
iret
cwtl
int3
sbb
pop
ret
out
mov
dec
rcll
in
push
add
sbb
insb
daa
sub
dec
inc
dec
imul
or
lock
ljmp
sub
mov
sbb
sbb
mov
pop
mov
mov
adc
les
mov
imul
mov
loope
cmpsb
and
pushf
fdivrl
add
aam
cmp
add
and
add
and
push
mov
scas
test
inc
scas
inc
jle
mov
adc
lods
pop
lods
pop
inc
sub
cmc
test
mov
leave
repnz
stos
pop
add
pop
pop
je
dec
repnz
fiaddl
inc
lret
dec
jae
lds
and
insl
jne
pusha
jge
pop
es
dec
push
mov
scas
pop
xchg
popa
inc
sarl
jo
stos
xchg
les
jmp
rorb
push
fsts
xor
push
xorb
dec
inc
and
push
aam
push
mov
orb
rcll
aad
sub
xor
sbb
arpl
mov
out
idivb
insl
xor
int
inc
mov
xchg
mov
cmpsl
add
cmp
push
cs
xchg
pop
xchg
sub
addr16
addr16
pop
mov
lahf
arpl
ss
es
test
sub
rcr
push
mov
jne
mov
sbb
in
and
shr
add
jl
push
lock
pop
movsb
sub
add
xchg
sub
mov
jmp
pop
pop
push
push
imul
ljmp
dec
or
xchg
cld
xchg
incb
or
lret
dec
loop
leave
lods
ret
and
leave
xor
test
aad
mov
xchg
inc
pusha
jae
shlb
aam
lock
ds
fidivrl
add
pop
popa
xor
inc
lea
arpl
jo
ss
pusha
sub
mov
into
insb
and
push
outsb
xchg
popf
int
dec
mov
inc
push
sbb
jmp
fwait
testl
adc
pop
lea
cmp
mov
pushf
insb
adc
enter
test
xor
xor
adcl
xchg
ja
pop
int
ds
test
sbb
das
or
jp
and
mov
mov
iret
or
mov
and
jmp
notl
ds
lahf
in
inc
mov
jge
cmpsl
repnz
jmp
mov
andb
mov
leave
mov
call
xchg
cmp
jns
inc
stc
stos
inc
orb
mov
jle
lods
sbb
icebp
aaa
jae
cmpsl
and
pop
pop
sub
scas
push
mov
cmpb
sbb
out
inc
loop
xor
repz
sbb
jne
int3
pop
and
es
idivb
push
loop
fmul
mov
mov
add
es
jnp
xchg
mov
imul
lds
imul
pop
cmp
jnp
xor
mov
notb
inc
xchg
xchg
shlb
les
xchg
int
mov
xchg
mov
movsl
in
and
ds
orb
add
inc
aam
add
fstpt
push
aad
shlb
lds
inc
divb
lods
push
enter
and
jle
xor
ss
fcomps
in
int
xor
repnz
adc
or
add
sub
fsubrs
jl
imul
outsl
mov
mov
outsl
pop
cmp
test
cmp
or
xchg
xor
mov
sub
loop
arpl
push
push
lea
shl
add
xlat
stos
inc
bnd
imul
icebp
jns
dec
sub
push
mov
dec
sbbb
and
mov
sub
mov
pop
mov
fwait
jl
jns
mov
call
jmp
jo
add
mov
sbb
mov
sbb
mov
ror
push
dec
mov
ret
mov
xchg
fs
pop
fildll
or
adc
mov
or
mov
insb
inc
in
mov
ds
mov
dec
cmp
mov
pushf
ret
add
mov
xor
inc
cs
out
mov
inc
mov
lret
cmp
imulb
inc
sub
dec
dec
dec
stos
mov
dec
and
mov
popf
push
jecxz
int
push
mov
mov
int3
or
jno
loopne
inc
xchg
and
mov
push
mov
clc
adc
dec
mov
sub
dec
aad
inc
sbb
lret
lret
cli
mov
hlt
aaa
pop
sub
push
fildll
pop
scas
dec
sbb
and
int
mov
sbb
sar
gs
insb
ja
aad
jae
cli
pop
xor
inc
negb
js
in
push
push
pop
sbb
push
jmp
inc
jge
rcl
cli
cmp
movsl
rorb
ret
daa
cmp
mov
ret
loop
pop
sbb
inc
mov
fs
xchg
sbb
sbb
sbb
mov
cmp
xchg
sub
arpl
enter
xchg
and
or
aas
imul
insl
out
pop
icebp
mov
insb
jbe
lret
test
xchg
mov
mov
test
jg
push
push
push
ja
jns
mov
ja
lcall
pushf
push
out
xchg
mov
sbb
loopne
leave
in
xbegin
pushl
movl
xor
int3
mov
push
dec
cmp
std
insl
mov
je
cmpsl
test
cmp
xchg
sub
sub
das
mov
push
arpl
aad
xchg
int
out
mov
clc
xor
popa
mov
int
xchg
in
aad
ret
out
aas
push
inc
mov
shl
mov
jne
repnz
fs
addr16
or
push
mov
xor
enter
or
sbb
insl
rclb
mov
xlat
jo
fstpt
push
cmp
and
mov
pop
scas
cwtl
mov
pop
sub
push
out
lahf
adc
je
leave
pop
xchg
fdivr
jo
pop
jmp
or
push
lcall
ja
mov
sub
mov
stos
xchg
outsb
pop
or
xor
scas
cwtl
orb
arpl
xchg
pushf
lcall
mov
lcall
mov
mov
ljmp
or
xchg
aaa
test
hlt
sub
adc
jo
pop
inc
jo
pushf
or
ljmp
mov
jno
push
loopne
mov
inc
adc
cltd
loop
inc
jae
sbb
mov
cmp
mov
sub
xchg
leave
xchg
xchg
jno
mov
cld
aad
jno
shrb
pop
cld
sub
mov
adc
ljmp
je
mov
pushf
addr16
ret
or
mov
addb
push
push
shll
lea
inc
out
mov
or
xor
pop
out
jge
or
ret
repz
std
sbb
inc
gs
or
call
or
or
cli
orb
xchg
and
fsts
ds
add
out
pop
mov
xor
sub
movsl
or
dec
mov
cmp
sub
dec
aam
lock
inc
fsubr
and
xor
setne
pop
roll
or
xchg
out
das
add
imul
lds
inc
inc
mov
fdivs
les
jmp
in
js
xchg
jns
fistpll
jne
mov
sub
mov
xor
orb
pushf
ljmp
pop
test
addr16
sub
lds
mov
cmp
fcmovnb
mov
outsl
outsb
push
fmuls
push
call
add
das
stos
test
fs
ss
inc
mul
insl
push
lods
ss
insl
and
add
mov
lods
xchg
jb
mov
popf
ret
add
int
popa
adc
jg
xchg
jmp
mov
mov
mov
lret
cmc
gs
sbbl
xor
scas
shrb
add
fisubl
mov
mov
mov
xlat
pop
leave
fiadds
and
in
in
xchg
std
cwtl
add
inc
add
push
lea
lret
sub
sbb
xor
fstpl
mov
pop
lcall
xchg
inc
push
or
in
or
cmc
jno
and
ds
ret
cli
dec
and
nop
jmp
in
call
add
jle
popa
mov
mov
mov
dec
gs
pop
gs
fldcw
dec
mov
push
fdivr
and
addb
dec
mov
fldl
shll
mov
jo
dec
jl
mov
ret
pop
lahf
dec
cmpl
xor
movsl
ja
lahf
adc
ljmp
out
stc
rcr
sbb
xchg
xor
pop
pop
imul
and
push
adc
inc
and
mov
movsb
out
jnp
leave
cmp
outsb
repnz
ret
test
push
hlt
int3
mov
repnz
mov
cltd
add
sbb
dec
jle
test
ret
imul
inc
data16
adc
shrl
xlat
push
fstpl
push
stos
iret
sbb
fiaddl
lahf
and
pop
or
push
push
pusha
stos
out
mov
and
mov
cli
test
xchg
imul
enter
mov
adc
mov
nop
test
dec
xchg
xlat
outsl
xchg
pop
inc
fidivrs
sti
cmp
cmp
xor
jl
add
scas
sbb
je
push
cmc
mov
les
mov
iret
cmpsl
repz
mov
jae
dec
xchg
lods
xchg
sbb
pop
ret
jno
hlt
push
dec
xchg
sarb
lahf
sub
daa
dec
dec
imul
cmpsb
mov
sub
mov
cmpsb
mov
add
xchg
fidivrl
xorb
adc
mov
inc
outsl
inc
out
jmp
jmp
int
inc
int3
pop
gs
bound
or
inc
push
xchg
repnz
pushf
sub
jg
adc
aaa
jo
push
outsl
mov
jbe
xchg
mov
xlat
inc
adc
xchg
jnp
xchg
dec
rcll
daa
int3
insb
ja
fisubl
ret
mov
jl,pn
pop
popa
movsl
pusha
and
jmp
or
mov
fiadds
testl
and
mov
clc
mov
pop
push
test
lods
dec
add
sete
or
stos
mov
push
dec
xchg
adc
sub
pop
inc
xor
adc
and
add
jle
inc
xor
stos
fs
mov
ror
xchg
rcrl
shlb
inc
xchg
lock
aaa
xchg
add
stos
pop
xor
iret
lock
inc
push
mov
outsb
push
lods
rcrb
mov
lock
test
lods
cmp
push
outsb
cmp
ja
fimuls
popa
sub
stos
aas
cli
popa
push
in
inc
popa
fwait
pop
popf
sbb
or
addr16
pop
inc
pop
fsubl
add
frstor
dec
loopne
add
out
sbb
ljmp
test
ds
movntq
ret
mov
pop
pop
jb
jno
and
shll
outsl
or
jge
and
pop
inc
push
sarb
dec
xchg
push
mov
or
jge
sub
in
rorl
repz
jno,pn
cmp
test
aas
cmp
xchg
cmp
mov
das
fisttpll
push
popf
add
int3
push
aad
mov
adc
pop
aas
rclb
ljmp
xor
xor
xor
mov
jl
mov
adc
cmp
inc
insl
push
jae
xor
pop
fimull
stos
jmp
mov
xchg
sti
insb
cmp
cmp
int3
into
mov
inc
sbb
and
or
jae
mov
in
inc
aam
xchg
push
andl
out
movl
pop
mov
inc
mov
mov
test
sub
test
sub
fadd
andb
cltd
and
popf
mov
rorl
jmp
hlt
adc
and
pop
adc
mov
jae
add
int3
mov
xlat
jb
negl
xchg
or
fadd
les
mov
xchg
cmp
nop
cltd
int3
push
pop
push
jbe
xor
sti
in
flds
gs
adc
sbb
push
adc
mov
xor
cmc
inc
popf
sbb
pop
push
fs
or
jle
fadds
sbb
add
mov
adc
jae
and
shlb
adc
das
and
repz
or
sub
insb
mov
xor
out
lods
test
xchg
xor
sbb
mov
imul
loope
push
aad
mov
sub
popf
sarl
jecxz
sbb
and
dec
add
aam
int
jno
js
inc
out
cmp
mov
sbb
les
and
das
test
test
jle
sub
fdivl
and
inc
push
nop
cmpsb
sbb
loop
sarl
mov
cmp
and
out
mov
and
push
cli
insb
xchg
xor
sub
cmp
mov
pop
push
mov
outsb
leave
data16
adc
call
cmp
mov
dec
std
hlt
sub
ret
push
shlb
stos
enter
push
and
or
mov
clc
pop
lock
pop
or
cmp
inc
stc
fisubl
push
xchg
ds
push
adc
dec
xchg
std
outsb
adc
adc
in
push
leave
mov
xchg
ret
add
pop
adc
clc
xor
pop
xchg
clc
mov
pop
xor
xchg
xchg
mov
xchg
scas
inc
cmpsb
loope
jo
or
aad
aaa
xor
inc
xor
jnp
daa
add
lret
into
jb
add
icebp
addb
ss
fadds
xchg
xchg
mov
cltd
add
xchg
mov
fs
pop
fstpt
imul
sbb
lock
cs
pushf
mov
mov
dec
aaa
and
shrb
in
xchg
jno
shlb
cmpsb
jg
ss
sar
pop
mov
lahf
mov
js
mov
and
ss
icebp
adc
aam
fimull
sbb
dec
pop
push
xor
add
xlat
std
jg
pushf
mov
loop
xchg
push
mov
ror
jmp
inc
repnz
jno
leave
xchg
cltd
test
sbb
push
jl
imul
loopne
bound
push
dec
in
ret
jg
inc
pop
and
shrl
pop
ret
ja
and
mov
aaa
mov
outsl
xchg
insl
orl
pusha
dec
andl
cmp
pushf
sti
dec
mov
aam
jns
mov
sub
lcall
mov
and
lcall
in
lock
aaa
inc
push
daa
push
andl
movsb
jl
les
into
xorl
or
in
sahf
stos
dec
cltd
mov
lret
xchg
add
dec
mov
inc
mov
hlt
jns
movsb
leave
lods
pusha
inc
jb
shlb
jge
adc
popaw
adc
fstps
js
push
test
sub
fsubrs
popa
xchg
dec
les
cmp
rolb
das
xchg
fistpl
jb
pop
mov
pop
stos
adc
addr16
lahf
int3
dec
ffreep
enter
enter
imul
mov
and
pop
data16
fisubs
ret
mov
imul
mov
das
mov
insl
adc
jg
jle
sbb
std
push
arpl
dec
shl
sahf
dec
cmpsl
mov
scas
fisttpl
scas
mov
push
je
fstl
inc
and
insb
cld
rclb
pop
xor
push
adc
pusha
outsl
outsb
in
jp
inc
ds
shlb
push
orl
out
adc
das
into
jno
jo
ret
push
test
retw
fisubs
subl
test
xlat
insb
outsl
xor
xchg
push
cmp
lret
xchg
lds
jb
cli
ds
or
push
cmp
and
pop
inc
jno
or
xor
stos
nop
test
repz
rclb
jle
jns
aad
pop
test
adc
xor
cwtl
and
mov
inc
mov
xlat
dec
outsb
stos
xchg
sbb
mov
jp
jno
mov
or
pusha
std
push
in
xchg
xor
ret
fcmovnu
and
scas
inc
xor
dec
jg
call
cbtw
xor
push
insb
pop
pop
das
in
insb
xor
repnz
push
int3
xlat
aaa
mov
or
adc
dec
call
in
mov
adc
xchg
mov
call
cld
dec
jnp
dec
fwait
cmp
adc
add
rclb
jp
mov
in
xor
out
push
mulps
mulb
adc
lock
mov
out
pop
xchg
rcl
std
cmp
pop
imul
inc
int
push
mov
cmp
scas
cltd
push
mov
push
mov
pop
push
push
jb
lret
stc
pop
test
ds
je
lcall
mov
arpl
je
push
mov
sbb
and
popf
movsl
xlat
cmp
int
loopne
hlt
push
xchg
xchg
test
aam
arpl
xor
stos
sub
dec
dec
bound
lds
movsb
and
dec
out
std
cmp
test
xchg
js
shl
leave
std
rcll
lahf
pop
aad
ds
movsl
pushf
insl
pop
push
xor
fs
movsl
stos
fisubs
popa
and
pushf
popf
cmc
add
popa
pop
call
lods
add
das
adc
fists
repz
fiaddl
loope
ret
loop
sub
inc
add
jnp
aam
mov
loope
jae
pushf
inc
mov
mov
sbb
xor
fldcw
insb
ss
mov
addr16
ss
call
xchg
mov
xchg
jno
loope
lock
jbe
and
inc
or
imul
mov
frstor
push
mov
into
or
push
movsb
daa
dec
or
stos
loop
test
mov
int
adc
add
outsb
push
adc
inc
out
inc
cmp
mov
fstps
inc
xchg
xchg
scas
jno
xchg
jb
bnd
je
dec
insb
add
shrb
and
in
push
push
or
mov
xchg
add
xor
adc
lock
fsubrs
std
adc
xlat
and
int3
jge
jbe
or
insl
or
mov
mov
outsl
pop
dec
push
stos
in
sub
lock
test
mov
or
imul
sahf
and
nop
lret
jns
jle
aas
into
fadds
xor
outsb
add
sub
jl
jno
jns
push
cmp
mov
or
mov
fmull
movsl
icebp
add
ds
xor
push
jns
xchg
or
dec
cld
lcall
mov
sub
ds
dec
xchg
jne
pop
jb
popa
xor
into
es
pop
adc
lea
and
cltd
movsl
pop
cld
or
xchg
dec
aaa
mov
xchg
cmpl
orb
not
popa
mov
jo
pop
inc
dec
xlat
mov
mov
cmp
xchg
adc
fcmovu
std
and
fdivrl
outsb
sbbl
xor
stc
jns
jmp
cltd
je
push
or
insb
pop
in
loop
mov
mov
ret
or
push
mov
or
mov
fs
mov
xchg
dec
fwait
insb
mov
cmc
and
pop
cmp
repz
aas
push
xor
inc
arpl
xchg
xor
adc
fmull
mov
jno
cmpsb
mov
sbb
pop
test
dec
in
mov
cmp
pop
fs
xchg
xchg
add
inc
cmp
testl
xor
and
pop
adc
push
jb
leave
sub
adc
lea
xchg
push
aaa
jns
add
dec
sbb
cmp
addl
sub
mov
xchg
repz
int
ss
imul
fbstp
js
movsl
in
adc
fiaddl
stos
call
lds
js
test
sub
and
movsl
fidivl
push
insl
push
inc
mov
mov
test
sub
mov
pop
adc
mov
inc
repnz
lcall
and
subl
ret
repnz
xor
shll
push
dec
fwait
cmp
mov
out
aaa
lods
lret
sub
add
lret
sti
fiadds
clc
stos
cwtl
lods
int3
add
inc
inc
sub
pop
lds
xor
into
jmp
scas
mov
sbb
sbb
xor
jb
mov
faddp
cmpsb
rolb
push
jae
test
ss
sub
clc
push
lret
scas
fmuls
into
adc
lcall
jb
insb
sbb
je
lds
cmp
or
mov
in
aas
dec
jae
adc
hlt
mov
push
lods
sub
lods
or
adc
shll
sub
movsl
inc
cmp
aad
outsl
popl
jo
xlat
add
in
cmp
pop
arpl
jecxz
cmp
mov
int
sub
je
dec
mov
add
add
pop
in
sbb
outsb
out
sbb
pop
inc
sub
in
cmp
mov
ds
mov
push
addr16
mov
fildll
or
subl
out
cwtl
lods
mov
xor
ret
sbbl
adc
adc
mov
lcall
cmp
push
pop
mov
pop
sbb
in
ljmp
dec
leave
add
dec
xorb
daa
mov
or
xchg
xchg
push
fdivr
or
jno
cmp
jg
push
push
mov
mov
clc
popf
jno
xchg
sub
sbb
adc
lcall
inc
jo
int3
enter
sbb
bound
sbb
inc
mov
jle
test
arpl
xchg
inc
jecxz
sub
add
xchg
jno
fsts
lea
test
push
aad
sub
je
xor
adc
xor
mov
test
xor
push
in
mov
mov
test
in
in
lret
mov
adc
dec
jne
sub
dec
movsl
lock
or
aam
xor
sbb
movsl
sub
mov
pushf
push
ljmp
aam
mov
bound
loopne
mov
push
ja
mov
push
pop
push
or
negb
fbld
cmp
jge
pushf
imul
cs
push
mov
cs
cltd
daa
push
jge
fsubl
jp
int3
xlat
jns
and
arpl
jb
inc
sub
leave
popa
in
xchg
cwtl
mov
lcall
rolb
jecxz
std
inc
ja
fdivr
mov
adc
int3
jmp
subb
cli
sub
inc
pop
movmskps
mov
fisttps
repz
mov
add
pop
or
add
mov
mov
pextrw
cmp
mov
loope
xchg
stos
sbb
sti
inc
sub
adc
jne
xchg
mov
sahf
iret
xor
mov
mul
sbb
mov
xchg
arpl
fwait
cmp
rol
shll
xor
mov
leave
add
add
xchg
inc
pop
lea
jnp
pushf
mov
pushl
test
testl
adc
sarb
stc
fcoms
adc
cs
jo
mov
in
jnp
or
fwait
fwait
jno
jmp
cmp
in
js
faddp
or
insb
sbb
and
sbb
call
jnp
in
inc
je
and
dec
cmpsl
pop
adc
mov
movsb
pop
rclb
cmp
lcall
xchg
sbb
cmpsb
lock
in
imul
cmp
sti
inc
and
xor
mov
ljmp
aad
mov
popf
adc
push
mov
pushf
repnz
aam
adc
mov
dec
adc
das
sbb
test
cmp
icebp
repz
imul
stos
mov
outsb
mov
mov
push
ja
cs
push
sarl
std
aam
sahf
imul
mov
repz
aad
popf
in
inc
push
xor
aas
std
stc
mov
cmp
int3
sub
clc
movsb
callw
push
aam
jle
sbb
mov
ret
or
roll
add
inc
fdivrs
xor
pushf
out
or
inc
cmp
push
mov
pop
rcrl
jge
ficoml
jns
xchg
jle
das
and
sub
andl
iret
bound
outsb
test
xor
pop
sbb
rorl
fs
pushf
outsb
or
cmc
test
push
in
gs
mov
sarb
or
add
lds
icebp
sti
adc
dec
xchg
test
mov
cmpsl
fists
out
adc
daa
repnz
xlat
fsubrl
add
and
popl
movsl
nop
gs
xor
push
push
push
stc
adc
push
xor
mov
arpl
push
shrl
sbb
sub
mov
add
out
add
mov
popf
jno
cmp
or
scas
rcrb
pop
mov
jmp
push
push
inc
in
outsb
inc
in
loope
lds
testb
push
dec
cltd
mov
addl
ret
sbbb
dec
inc
lret
or
mov
fcompp
lock
pop
cmp
icebp
adc
mov
push
outsl
inc
lods
out
pop
dec
ds
and
dec
out
out
dec
cmp
in
inc
ret
rol
xor
fcoms
addr16
jmp
cmp
loope
mov
adc
dec
loope,pn
ljmp
mov
mov
lock
lods
fnsave
mov
mov
fildl
push
pop
mov
mov
fs
ds
xor
cmpsl
shl
out
inc
mov
mov
movsl
push
jno
ficompl
inc
adcb
mov
jecxz
xor
pop
or
jbe
test
js
sub
and
jge
subb
cmpsb
or
shlb
xor
jbe
cmp
sti
mov
adc
add
or
daa
or
js
adc
movb
pop
out
orb
mov
addr16
stc
call
or
mov
inc
mov
loop
outsl
cmpsl
das
push
lock
out
test
imul
cmp
shlb
lret
fdivrl
out
push
mov
hlt
insb
pop
fdiv
sarl
scas
hlt
jmp
and
inc
daa
sbb
mov
and
fdivrl
mov
test
in
sub
lret
aad
inc
inc
scas
push
lcall
test
xchg
ficoml
sbb
mov
rcrl
xchg
dec
adc
sbb
pop
cmp
push
xchg
mov
push
jb
leave
mov
dec
dec
inc
outsb
addr16
push
jl
iret
inc
aad
hlt
cs
pop
adc
mov
lcall
imul
arpl
push
sbb
sbb
inc
out
in
stos
es
pop
addb
adc
dec
and
data16
fcoml
addr16
mov
adc
das
fistps
incl
lret
sbb
lahf
xchg
pop
push
adc
jl
xchg
pop
rcll
js
out
pusha
pop
push
aam
cs
and
and
fsubr
mov
mov
sub
ret
jne
mov
lods
and
int3
mov
mov
les
mov
mov
cli
cli
push
jle
cs
pop
dec
out
cli
ja
mov
push
sbb
in
xchg
hlt
or
pushf
add
test
jnp
loop
jae
out
inc
push
adc
xchg
sub
cwtl
cmovbe
bound
push
dec
jge
mov
dec
mov
adc
xor
mov
xchg
xchg
loopne
sbb
fwait
push
scas
jno
jnp
js
cmp
inc
mov
mov
mov
xor
addr16
dec
pop
je
faddl
movsb
out
xlat
pop
lret
movsb
adc
loope
lcall
inc
movsl
into
sub
pop
les
lahf
icebp
mov
fnclex
push
cltd
in
xchg
idivl
or
das
sub
daa
popa
popf
aas
mov
es
std
inc
ljmp
xchg
popf
cli
std
jns
xchg
xor
push
mov
mov
inc
es
inc
loope
in
jae
in
push
sarl
dec
or
dec
insl
sub
push
mov
mov
ljmp
aad
xor
bound
jno
leave
and
mov
jbe
xorb
lret
fldt
adc
imul
mov
jle
sbb
adc
xchg
or
jecxz
mov
cmpsl
pop
dec
mov
jne
sub
dec
mov
xchg
cmp
ds
sub
movsl
addb
mov
cmp
pop
cmpsl
xchg
push
repz
outsb
ja
jp
inc
enter
add
pop
sub
cmc
aad
sarl
add
pop
fwait
jp
mov
adc
aaa
clc
ljmp
jo
fs
mov
jge
xor
popa
test
xor
std
dec
push
and
pop
jae
test
sidtl
sub
scas
cmp
jno
mov
mov
lock
imul
call
dec
rcl
push
pop
out
xlat
pop
inc
rcrb
jmp
xchg
push
cmp
insb
xor
pop
mov
les
dec
jg
stos
std
cwtl
or
xchg
lahf
outsl
mov
es
out
jo
ja
call
cld
popf
aam
push
lret
jp
movsb
or
dec
sub
roll
sahf
inc
xor
shl
inc
negb
adc
mov
sbb
add
lret
push
dec
xor
scas
mov
mov
push
dec
bound
ds
bound
jns
dec
pop
movl
ljmp
mov
dec
adc
divb
jbe
loopne
in
or
pop
outsb
mov
and
sarb
cmpsb
addr16
daa
rorl
std
rorb
pop
inc
cmpb
insl
add
sub
push
mov
ljmp
push
lods
xchg
lds
filds
sub
jnp
add
sbb
in
cmc
stos
cmp
push
lret
andl
or
mov
ficoms
mov
cld
cmpsl
ds
push
insl
hlt
jns
inc
fwait
mov
jbe
sub
mov
add
outsl
in
dec
cmpsb
sbb
add
jmp
ret
lock
xchg
pushf
add
xchg
in
addl
pushf
xchg
outsb
lret
push
jno
xlat
lret
lret
test
daa
pushf
ficompl
xchg
dec
push
outsl
jae
popa
cmp
push
or
mov
jnp
enter
fwait
xchg
xchg
popa
and
mov
fldenv
insl
mov
loope
push
jae
lds
fld1
or
inc
daa
sub
fldenv
sbb
cmp
enter
and
cwtl
repnz
xor
notl
hlt
sbb
push
adc
sahf
scas
dec
sti
test
cld
mov
scas
in
xchg
subl
sub
add
jmp
imul
pop
mov
inc
jbe
and
and
adc
mov
push
sub
sub
add
int3
adc
jo
aam
and
cltd
jecxz
cmc
inc
mov
shl
in
jbe
lcall
fnsave
les
mov
test
imul
xchg
negl
lret
es
cmp
xor
jp
and
pop
inc
js
rcl
push
pop
add
adc
insb
jns
test
and
xor
int
ficompl
mov
add
pop
mov
xchg
adc
repnz
mov
add
dec
out
jle
adc
or
mov
stos
push
fucom
mov
push
out
adc
mov
xchg
test
mov
dec
stc
ret
and
stos
jp
int
cmp
adc
in
and
jmp
xor
or
cltd
mov
movsb
pop
adc
push
decb
sbb
pop
mov
inc
mov
cmp
faddl
jno
cmpsb
pop
in
and
aad
ja
rcrb
xchg
push
imul
mov
in
pop
call
xchg
jmp
aam
jp
insb
je
add
cmpsl
adc
or
and
pop
cmp
movsb
inc
notb
ljmp
mov
mov
jbe
fadds
aam
les
inc
insl
stc
nop
mov
inc
out
in
mov
fidivrs
and
xchg
lods
and
adc
push
cmp
fucomp
xor
cmpsl
enter
lahf
in
sbb
aad
fcoml
sub
mov
ss
mov
xchg
insl
ret
outsb
inc
repz
rorb
mov
int3
xchg
push
loopne
sbb
out
sub
cmp
adc
in
testl
fidivs
lahf
notl
sub
xchg
mov
dec
mov
dec
in
cwtl
repz
sub
push
mov
push
xchg
rcrb
push
jno
js
stos
xchg
mov
les
orb
sbb
push
sbb
pop
or
lahf
mov
adc
leave
and
mov
and
popa
jle
dec
jns
pop
das
mov
and
mov
test
pushf
jbe
rorb
out
xchg
aad
xchg
jp
dec
mov
ret
mov
cld
and
and
cmp
seto
or
repnz
push
sub
adc
ja
stc
xchg
out
test
inc
dec
aas
inc
repz
cmp
aad
add
stos
mov
data16
lods
push
ret
sub
mov
jg
cmp
int
jge
out
scas
xchg
pusha
stc
push
pop
pop
nop
xor
sarl
sub
adc
je
test
ret
ret
hlt
std
mov
xchg
xchg
ds
out
adc
sbb
pop
xchg
jnp
stc
je
sbb
mov
inc
jb
ljmp
pop
mov
xor
and
clc
cmp
inc
fisubs
ss
push
sti
mov
sbb
icebp
jbe
and
dec
shrb
xor
jge
jno
jmp
popa
sbb
imul
jb
push
and
xchg
out
icebp
into
bound
inc
cltd
popa
jne
cmp
mov
cmp
insl
test
loope
clc
popf
outsl
daa
inc
adc
jge
cld
das
repz
fidivs
sub
xlat
in
and
dec
or
jae
iret
mov
pop
jns
pop
std
ret
fstpt
sub
pop
cmp
mov
rcrl
mov
ret
dec
fiaddl
and
or
les
xor
ss
ds
test
shll
test
je,pn
cmp
mov
repnz
lcall
mov
adc
mov
and
push
dec
cmovns
aas
fstl
jae
sub
mov
mov
in
mov
xorl
push
arpl
das
cld
stos
mov
push
push
push
andl
cmp
fidivs
or
xor
push
xchg
outsl
frstor
xchg
iret
rclb
and
ljmp
cld
mov
test
pop
dec
fidivl
xor
dec
loopne
push
mov
fidivrl
mov
out
mov
sbb
push
cmpsl
xchg
mov
adc
mov
and
nop
dec
xor
js
aaa
movsb
dec
cmp
mov
xor
mov
pop
adc
push
pushf
xlat
xchg
push
adc
sub
lret
add
les
das
aaa
lods
cmp
dec
out
pop
xchg
jb
adc
add
ja
xchg
test
and
mov
push
push
adc
cmpsl
mov
sbb
lods
js
cmp
negl
lods
ror
jo
mov
icebp
add
lods
pop
fwait
pop
test
ja
xor
dec
add
out
xlat
ljmp
inc
dec
mov
jle
dec
outsl
and
pop
cmp
xchg
push
xor
xor
xlat
or
loop
hlt
vmovq
roll
mov
lods
mov
inc
mov
xchg
or
mov
imul
fstl
rcr
xchg
mov
mov
jp
fwait
xchg
xchg
lcall
call
mov
mov
add
fld
in
aaa
pop
xorb
roll
mov
leave
popf
or
push
insl
adc
out
andl
push
sarb
sbb
rcll
sub
roll
adc
sub
xchg
insl
out
sbb
dec
inc
cwtl
idiv
add
push
push
fwait
je
xchg
mov
in
dec
push
jp
lock
aad
sti
jb
fwait
and
pusha
cmpsb
mul
push
aam
ja
out
test
int
adc
dec
cwtl
mov
cmp
and
jb
adc
inc
sbb
std
movsb
das
sub
mov
mov
mov
dec
push
push
mov
adc
js
out
loopne
outsl
adc
mov
adc
fcmovu
das
xchg
mov
cmpb
and
mov
stos
outsb
mov
cmpsl
inc
pushf
in
jne
sub
out
xor
scas
pushf
or
inc
push
mov
in
inc
les
jmp
lahf
stc
mov
pop
clc
xor
das
iret
xchg
shrl
mov
jb
fcomps
ffree
dec
sub
xchg
jge
inc
add
pop
push
adc
sbb
cwtl
lea
jecxz
shl
bswap
sub
filds
mov
mov
mov
xor
ljmp
and
aad
loopne
negb
push
hlt
sub
mov
dec
stos
xor
inc
sub
inc
fisttps
pop
fistps
mov
pop
fisttpll
fwait
inc
lret
popf
pop
inc
mov
scas
mov
pop
incl
xchg
and
add
push
imul
mov
cltd
xchg
fs
in
push
lcall
jmp
aaa
mov
sbb
push
mov
pop
or
adc
pop
call
push
xlat
cmp
jle
xlat
lock
pop
imul
push
and
sub
pop
out
sbb
push
ja
adc
dec
push
adc
xchg
inc
add
mov
fstpt
arpl
sub
hlt
clc
aas
orb
ret
ret
xor
xchg
mov
repz
ds
rolb
xor
in
inc
repnz
cld
mov
in
xchg
sbb
push
inc
inc
mov
mov
movsl
pop
pop
jb
pop
push
insb
push
int3
ret
out
std
stos
pop
orl
pop
je
mov
cmp
clc
mov
push
lea
xor
push
cwtl
xor
jmp
and
sarb
xchg
sbb
inc
mov
in
iret
pop
mov
cld
pop
inc
dec
pop
inc
sbb
popf
fiadds
sub
cmpsl
stos
int3
loop
imul
stc
sbb
lret
inc
inc
cmpsl
movsl
pop
in
fmul
push
mov
movsb
lock
jbe
mov
into
add
push
js
stc
and
roll
dec
imul
mov
cmc
sti
or
in
in
lret
adc
stos
sti
icebp
arpl
lret
maskmovq
negl
fldcw
out
xor
ja
fbstp
dec
ficoml
fs
shrb
inc
dec
xchg
mov
insb
or
es
loope
mov
test
sub
add
mov
aaa
push
ljmp
lock
sahf
lret
inc
push
xchg
mov
insb
sahf
stc
mov
and
xor
aam
xchg
or
xor
movsb
pop
ss
test
push
jo
xchg
inc
dec
adc
dec
inc
pop
or
pcmpeqd
mov
mov
mov
rol
iret
xchg
cmp
add
pusha
rclb
popa
mov
cmp
outsl
push
jmp
xor
jle
bound
icebp
inc
adc
fsubrl
scas
inc
fbld
sbb
dec
int
cld
test
bound
add
mov
jne
lds
in
fcmovu
cs
pop
or
inc
jns
sub
shl
ret
inc
leave
mov
and
jne
add
je
scas
mulb
push
js
push
testb
cmpsl
dec
mov
iret
icebp
popf
sbb
mov
push
inc
inc
mov
test
std
nop
mov
popf
fldcw
pop
stc
push
lods
sub
cmp
mov
fs
xor
add
pusha
mov
mov
outsl
mov
dec
sbb
jb
add
push
pop
xor
test
add
mov
fsts
jo
in
pushf
mov
testb
mov
mov
lahf
adc
ret
add
out
mov
push
in
out
cmp
sahf
cli
pushf
and
rclb
push
add
jg
jnp
pop
mov
xchg
add
xchg
mov
in
jg
xchg
xor
icebp
cwtl
xchg
inc
imul
push
mov
push
jg
sbb
mov
lret
je
jg
fsubrp
dec
lcall
aaa
out
fs
aad
or
lcall
vmovupd
and
dec
jnp
call
ds
rcrb
cmp
test
fmuls
mov
dec
pop
in
ds
push
mov
rclb
int3
sbb
xchg
mov
push
inc
das
sub
push
jb
xor
mov
push
jle
psrlq
inc
repnz
inc
sub
inc
in
jbe
xchg
pop
push
shll
lods
fcomi
push
inc
xchg
mov
sbb
jmp
mov
sahf
inc
add
or
test
je
xchg
ret
dec
into
cld
pop
cli
sahf
idivl
and
loope
leave
notl
lds
lods
data16
negb
sbb
std
daa
subl
add
inc
inc
mov
add
add
lahf
ja
dec
inc
loopne
push
adc
sub
pop
or
pop
insb
sti
and
stos
mov
adc
fdivrs
jl
cmp
test
jns
sarb
das
push
sahf
xchg
mov
adcb
lds
out
lahf
arpl
mov
adc
push
aad
pop
test
mov
lret
ret
xchg
loop
out
mov
mov
insb
loop
fisttps
clc
sbb
dec
in
inc
gs
imul
mov
xor
daa
test
mov
into
push
loop
packsswb
jle
add
xchg
pop
dec
movsb
mov
fcmovb
push
aaa
clc
xchg
push
shrb
mov
lcall
pop
cmp
jl
cmp
pop
lahf
in
add
pop
pop
xchg
mov
cmp
fwait
insb
mov
inc
adc
into
sbb
out
jmp
lods
push
xchg
sarl
rorl
jl
adc
sahf
mov
js
pop
imul
aas
sub
iret
pop
pop
push
andb
jmp
add
add
mov
jbe
sbb
mov
mov
fwait
mov
fisubrl
cmp
xlat
mov
js
pushf
inc
arpl
sbb
cltd
push
imul
cmovg
nop
push
in
dec
pop
jecxz
fisubrs
les
inc
cmp
inc
mov
cmpsl
mov
xor
inc
push
icebp
xchg
sub
sub
add
aas
xchg
push
movsl
cmpsb
test
xchg
mov
idivl
scas
outsl
stos
adc
pop
jnp
xor
outsl
aas
pop
pop
lcall
add
dec
mov
scas
mov
pop
fisttps
or
orl
add
xor
test
and
fistpl
mov
aaa
hlt
mov
push
jp
outsb
dec
jge
xchg
insb
mov
pop
arpl
inc
jbe
inc
fdecstp
je
pop
ficompl
xor
add
push
int3
cmovl
jecxz
pusha
xchg
and
push
add
std
sub
dec
dec
dec
lret
inc
stos
dec
jge
ret
cmp
data16
pushf
outsl
or
test
pop
out
daa
or
std
ss
push
mov
xchg
xor
xchg
dec
nop
cltd
sub
add
and
je
sub
call
xorb
add
test
cltd
cs
jg
inc
fmuls
sbb
sbb
fcoms
adc
jae
icebp
sbb
pop
mov
lods
xor
add
mov
adc
pop
pop
stos
adc
mov
cmc
daa
pop
iret
jecxz
in
cld
mov
mov
sbb
shll
jg
les
pop
mov
push
imul
sbb
bound
in
adc
test
add
fxtract
inc
imul
fs
adc
movsb
adc
push
ds
les
xor
mov
cmovne
fiaddl
inc
pop
in
sbb
add
hlt
out
push
addl
lahf
shll
iret
adc
and
test
js
test
scas
das
mov
inc
cmpb
std
cld
je,pn
pop
decb
fdivs
inc
jns
pusha
fstl
ret
mov
cmc
leave
sbb
sub
jecxz
adc
xchg
mov
jmp
pop
test
sbb
test
ja
mov
push
je
lcall
popa
push
dec
cmp
sub
fidivl
jecxz
jbe
xlat
imul
popa
popa
push
sbb
outsl
xor
inc
stos
test
push
bound
sbb
mov
movsb
push
movsb
xchg
das
pop
aad
jg
xchg
cmovle
xchg
movsl
or
push
xor
das
fisubrl
xor
in
sbb
jecxz
pushf
out
mov
push
ret
push
xlat
lret
les
imul
addr16
jne
dec
ljmp
ret
xchg
pop
test
fucom
mov
js
or
mov
hlt
mov
mov
aad
lret
and
mov
push
cmp
xlat
push
jne
pop
mov
sub
repz
xchg
sbb
fldl
cmp
adc
popa
lods
mov
mov
insb
sbb
push
mov
add
push
pop
sbb
xchg
insl
sub
mov
cmp
or
enter
mov
ficoml
sahf
inc
sti
xor
lods
adc
sub
lcall
cmc
or
xor
add
fsubr
mov
dec
pop
inc
mov
sub
fs
scas
in
xlat
sti
lock
aad
pop
adc
ds
adc
jns
push
cli
or
inc
dec
int3
adc
icebp
je
adc
cwtl
mov
push
sbb
scas
mov
stc
and
push
or
leave
mov
popf
fdivs
scas
mov
data16
cmp
sti
push
call
mov
inc
push
dec
in
mov
xorl
inc
roll
fwait
cwtl
sub
loope
test
push
inc
mov
mov
aas
push
subb
scas
and
adc
cmpsb
xchg
mov
cltd
je
xor
push
insb
iret
movsb
lret
fiaddl
lds
fiadds
dec
movsb
xchg
and
inc
idivb
mov
mov
fcoms
and
stos
outsb
inc
cmp
mov
cmp
or
shll
test
add
jmp
jg
roll
xchg
sbb
inc
loopne
fs
mov
lahf
dec
push
jns
mov
aam
test
add
lcall
or
and
movsl
xchg
cmc
dec
mov
imul
sbb
mov
push
popa
mov
mov
pusha
xor
xor
addl
push
loop
lcall
test
cmpsl
mov
fisttpll
addr16
mov
push
cwtl
rcll
clc
imul
add
jo
jb
cmc
imul
rcll
cwtl
cmpsl
clc
push
std
cwtl
mov
push
pop
xchg
int
out
and
xchg
es
sbb
mov
add
push
int
stc
out
inc
jns
fwait
xchg
shr
jo
inc
inc
in
push
sub
sub
call
cmp
insl
dec
inc
push
ret
adc
lret
dec
pop
inc
mov
lcall
dec
cmpsb
sub
in
push
push
pop
or
in
push
jmp
cmc
mov
imull
shr
mov
mov
lahf
mov
mov
fildl
adcl
jmp
ljmp
sub
push
push
lds
int
mov
or
les
jno
sbb
push
fldcw
push
hlt
clc
jl
xor
mov
jle
cld
dec
cld
inc
push
jle
movsb
mov
icebp
rorl
xor
push
das
ja
mov
int
jae
loop
orb
inc
fcompl
cmp
popa
loopne
aam
jns
push
inc
ja
dec
xchg
gs
imul
jo
pop
lret
cmp
int
test
mov
sub
add
jae
into
fs
lcall
xchg
pusha
mov
leave
pop
mov
ret
mov
rorb
cs
stos
jg
adc
dec
ds
ficoml
push
sub
in
push
pop
out
sbb
out
rorl
icebp
mov
nop
cltd
adc
xor
imul
sbb
mov
call
mul
or
cmp
jns
add
pop
inc
push
pop
mov
mov
and
add
nop
jb
aam
inc
push
mov
iret
sub
and
dec
icebp
push
push
and
xor
fs
or
xor
jnp
mov
push
pop
scas
loope
push
sub
xor
sub
outsb
rolb
lret
test
push
repnz
dec
icebp
push
pushf
in
shll
negl
ret
mov
push
jge
lcall
lret
cmpsl
mov
mov
icebp
xor
stos
sahf
bound
scas
sub
mov
add
pop
lods
inc
xchg
mov
adc
xchg
adc
fcomip
mov
scas
jo,pt
dec
mov
dec
push
sub
pop
sub
adc
adc
push
push
shr
adc
pop
dec
lea
push
subb
loope
push
push
into
or
jae
add
sbb
dec
push
fnsave
adc
cmp
test
ret
inc
jg
icebp
shr
cmp
jge
outsb
ficompl
jne
ret
leave
push
push
pop
in
push
pusha
mov
call
push
nop
shlb
movsb
lret
xchg
mov
shlb
lahf
xchg
push
mov
pop
out
cmp
out
jg
pop
push
push
jl
loopne
pusha
mov
pop
inc
mov
or
mov
dec
inc
aam
pop
inc
dec
jmp
and
add
or
and
cmpsb
data16
je
ficoms
mov
pop
mov
or
mov
cmp
mov
ljmp
push
cld
mov
stos
cmpsl
pop
inc
cmpsl
pop
pop
shl
shrl
cwtl
outsl
std
jnp
xor
mov
dec
xchg
sub
adc
add
ja
pop
mov
adc
add
ret
aaa
arpl
movsb
fwait
ljmp
push
in
xor
xchg
xor
insb
cmpsb
cmc
ljmp
int3
cmp
nop
mov
xor
and
in
add
mov
imul
mov
or
ret
mov
mov
adc
adc
push
xor
imul
jne
cld
add
inc
xchg
stc
ret
lods
scas
fwait
mov
insb
adc
mov
les
xor
in
mov
fldcw
in
sub
in
jl
movsb
dec
rorl
out
xchg
add
cltd
add
xor
mov
cld
leave
dec
sbb
xchg
cli
stc
jecxz
popf
pop
jl
mov
xor
sub
jmp
lock
call
sbb
pushf
pop
pusha
ds
aad
push
xchg
insb
imul
bound
or
call
inc
scas
jle
incl
lcall
xchg
mov
push
mov
sub
inc
rcrl
or
outsl
mov
pushf
imul
cli
push
pushf
in
mov
mulb
in
or
sub
fistps
mov
das
stos
mov
xchg
and
enter
test
scas
push
ret
adc
dec
mov
imul
sbb
push
inc
push
xor
lods
cmp
push
dec
mov
mov
ficomps
push
rorl
xchg
aas
daa
aad
divb
mov
dec
jle
pop
testl
repz
push
mov
pusha
aaa
mov
jg
mov
sti
push
pop
std
adc
xchg
mov
ds
es
pop
mov
sahf
ja
loope
ret
mov
sbb
sub
mov
or
mov
outsl
or
cmpsl
shlb
test
lcall
push
cli
addr16
fmuls
shrl
ret
inc
sbb
fisttpll
incb
or
adc
in
into
test
push
sbb
mov
add
lods
loopne
shlb
loopne
out
outsl
out
pop
sbb
or
addr16
pop
mov
bt
hlt
dec
sbbb
jmp
cmp
sarb
enter
nop
aaa
push
or
std
sbb
sub
push
outsb
inc
push
inc
dec
sbb
push
add
mov
mov
mov
mov
mov
add
scas
cmp
iret
mov
mov
jns
aaa
push
mov
jnp
out
imul
les
lret
push
inc
and
lahf
jmp
cmp
add
scas
push
cltd
ljmp
pop
xor
mov
ret
jne
add
addr16
ja
mov
daa
jecxz
mov
nop
mov
adc
sahf
pop
push
js
lds
cmp
sub
in
jns
int3
xor
add
popf
xchg
jmp
mov
jae
mov
mov
jl
scas
clc
sbb
xor
cmp
cmp
xchg
enter
jp
mov
fwait
jle
mov
push
xor
mov
mov
movsl
and
call
and
cltd
pop
inc
xchg
stos
inc
xchg
cli
adc
mov
hlt
inc
andb
fsubrp
incb
and
int3
aas
jmp
movsl
and
push
mov
mov
push
notb
inc
inc
adc
popf
enter
clc
stos
mov
out
hlt
rcr
fdivl
out
adc
mov
xchg
mov
pop
mov
dec
push
test
stos
ret
push
jp
add
int3
xchg
xor
popf
adc
pop
jge
das
mov
xchg
fwait
jecxz
jmp
stc
cmp
cs
out
mov
mov
adc
mov
out
sti
inc
sub
test
xchg
sbb
lock
sbb
das
push
js
mov
addb
jle
fdivs
add
aaa
dec
xor
xor
cmpsb
or
scas
push
sbb
loope
out
dec
test
sbb
sbb
es
sbb
fs
xor
pusha
test
ret
pushf
xor
ret
ret
enter
xchg
adcb
and
dec
xchg
mov
adc
mov
pop
inc
xor
adc
ror
call
inc
iret
sub
out
push
imul
shrl
xor
mov
push
pushf
imul
lock
pop
and
push
out
or
mov
mov
sub
xchg
sahf
lds
daa
dec
xchg
lock
into
ret
bound
sub
fnstsw
xchg
sbb
leave
int3
es
jno
pop
sub
punpckhbw
loop
dec
pop
sbbl
test
xchg
cmp
fimuls
movsl
addb
and
sti
outsl
js
sarl
and
sbb
sahf
and
mov
or
dec
cmp
ret
dec
cld
add
push
push
lahf
and
clc
nop
cmp
add
adc
das
clc
mov
movsb
or
scas
in
pop
lret
call
jmp
stos
inc
mov
push
or
adc
xchg
int3
add
out
out
and
or
pop
test
add
xchg
fst
pushf
fimuls
pop
xchg
ficoms
or
cmpsl
bound
addr16
mov
mulb
mov
loopne
popa
adc
cmpsl
jge
int3
icebp
xor
orl
pop
imul
xlat
mov
popa
lock
repnz
xor
xor
sti
mov
hlt
insl
pop
hlt
mov
stos
out
sbb
bound
js
fsub
sub
das
mov
fsubrl
call
cmp
ret
sub
scas
mov
pop
cmp
movsb
loope
pop
mov
inc
lahf
inc
nop
stc
cltd
cmp
shrl
and
adc
sub
call
mov
or
sbb
push
scas
lret
ret
add
sbb
nop
cmp
insb
int
add
in
or
jo
icebp
push
jmp
imul
mov
in
push
adc
les
mov
mov
sbb
imul
pop
and
sbb
jbe
adc
mov
jns
call
mov
and
out
ds
pop
lcall
push
xor
xchg
clc
std
xlat
jle
xchg
push
sbb
inc
es
xor
and
mov
cld
fwait
incl
sub
addr16
repz
mov
mov
add
sub
test
adc
in
cmp
and
mov
mov
mov
cmpsl
inc
sub
cmp
in
iret
pop
scas
rcrb
mov
sbb
add
push
xorb
popa
sbb
repnz
pop
pop
leave
sub
inc
in
mov
inc
inc
push
inc
test
stos
push
mov
jno
fs
mov
rolb
cmp
jo
push
sbb
and
iret
test
sub
xchg
lea
push
loopne
das
mov
rcll
adc
and
movsb
loope
in
inc
or
or
sahf
sarl
xchg
dec
cli
pop
sbb
lret
cmp
cltd
in
js
jg
mov
sbb
add
mov
dec
rcl
cmp
pusha
xchg
jl
sbb
sub
and
fistpll
mov
xchg
xor
sub
lods
mov
dec
inc
mov
lods
jmp
add
pop
andb
mov
inc
push
inc
pop
repnz
stc
mov
inc
pop
xchg
rorl
call
jp
push
es
xchg
int
lret
lods
xchg
insl
push
aam
rclb
test
cmp
ja
sub
out
push
pop
inc
jnp
cmp
das
lahf
js
cli
add
loop
aas
and
int3
mov
adc
and
pmaxub
aaa
cli
jp
clc
push
or
mulb
fmuls
xchg
jae
test
inc
lret
inc
clc
fst
stos
ja
xchg
pop
mov
repnz
pusha
push
les
xor
js
clc
push
push
cmc
js
jle
cs
fstl
fxsave
inc
ljmp
mov
pusha
aas
mov
mov
mov
and
add
xchg
xrelease
lea
int
fidivl
cmc
dec
and
inc
xchg
xchg
pushf
into
mov
shlb
and
outsb
cwtl
add
andb
add
imul
pop
ljmp
pop
sub
out
push
andl
icebp
idiv
cwtl
mov
imulb
ret
jecxz
jo
popa
and
js
mov
pushf
ljmp
pop
push
sub
enter
mov
pushf
sub
pop
dec
push
or
nop
mov
imul
inc
lret
lods
push
lret
jae
mov
leave
in
movsb
push
pop
push
pop
cltd
adc
jo
push
pop
pusha
xchg
ja
cmpb
cmp
jae
loop
shrb
lock
rcrb
je
incb
in
mov
rorl
iret
bnd
aas
mov
xchg
testb
cmp
mov
mov
jbe
orl
repz
fdivrl
push
pushf
rdmsr
les
pop
pusha
fcmovb
or
xchg
subb
rcll
pop
jae
aaa
sbb
notl
cmp
ret
push
loopne
cmc
inc
sub
les
in
dec
pusha
xchg
test
dec
test
int
mov
dec
inc
cld
xor
sbb
xor
leave
mov
adc
icebp
jb
jo
je
pusha
shll
mov
push
repnz
dec
lods
mov
mov
pop
movsl
jmp
data16
icebp
mov
pop
and
sbb
jbe
push
pop
sub
inc
mov
jl
add
push
adc
dec
xor
mov
loope
inc
pop
scas
hlt
jae
sub
outsb
xchg
popf
xor
ror
add
imul
mov
jmp
mov
test
popa
divl
lock
sahf
sbb
addr16
stos
fsubr
mov
pop
jno
jmp
dec
sub
lock
arpl
out
mov
add
scas
cmp
pop
lcall
ja
add
sub
inc
repnz
lret
xor
lea
xchg
shrb
lods
add
lahf
sti
std
ret
in
push
and
enter
repnz
sbb
dec
cs
mov
aad
sti
push
andl
jmp
push
xchg
push
js
scas
sahf
les
clc
adc
mov
jno
push
xorb
push
loope
mov
pop
sub
or
addb
pusha
sub
lea
or
sub
sti
ds
lock
cmp
cmp
inc
mov
out
daa
fs
adc
mov
rorb
insl
cmc
fsubs
pop
pushf
daa
and
inc
loope
arpl
pop
test
dec
iret
subb
out
adc
dec
cwtl
ficoms
lret
xchg
icebp
sbb
mov
push
jle
scas
sbb
imul
sbb
aam
mov
sbb
sbb
in
in
imul
sbb
push
cld
mov
dec
sub
loopew
dec
cmp
sbb
mov
pop
and
jne
imul
mov
icebp
clc
std
repz
and
or
pop
fistpll
ret
stc
sbb
mov
fwait
repz
ret
xchg
out
int3
sbb
pop
xor
shll
daa
mov
jbe
push
xor
or
fsub
cmc
neg
in
mov
sti
jg
ffree
rorb
frstor
das
mov
out
loop
nop
sbb
in
jne
jns
sub
dec
jb
xchg
outsl
lods
inc
push
jns
dec
lret
pop
popa
and
aam
xchg
xchg
mov
jge
jge
xchg
dec
test
popf
inc
jg
mov
add
icebp
dec
jmp
jo
fimull
sarb
xchg
arpl
mov
adc
sbb
lock
xchg
icebp
xor
push
jl
jge
and
repnz
scas
icebp
push
dec
pop
mov
sti
arpl
jg
lds
les
pop
lods
punpckhdq
les
fs
xor
cld
mul
mov
and
or
daa
mov
inc
in
bound
icebp
idivb
cli
jbe
mov
fnstenv
mov
ret
mov
xor
cmpsb
mov
xchg
mov
cmpl
mov
sbb
mov
push
or
cmp
mov
mov
rclb
dec
notl
ja
cld
rolb
pop
jnp
jle
loopne
xor
pop
inc
push
rcll
in
imul
cmpsl
lods
jmp
cvtps2pi
sbb
adc
repz
jo
hlt
insl
xor
push
xchg
mov
mov
inc
imul
or
int3
dec
jno
add
and
add
sub
ss
inc
xchg
psubusw
and
pop
aaa
fcmovbe
jnp
push
imul
out
sbb
iret
fistl
mov
daa
cmp
insl
mov
data16
out
mov
push
loope
push
mov
add
out
icebp
jno
sbb
pop
loop
mov
fistl
das
sub
jae
fs
adc
mov
ja
cwtl
sti
mov
jns
rorl
cld
sub
inc
and
in
jg
fs
cmp
in
cmc
in
jae
fisttpll
and
scas
test
add
out
cmp
push
jb
inc
or
ds
pop
popf
dec
cli
pop
add
push
xlat
mov
fldt
jle
pushf
push
jno
loope
je
call
inc
add
xchg
xchg
mov
popa
enter
into
jg
pop
and
push
push
fimull
pop
call
cmp
mov
mov
leave
xor
loop
jp
mov
fs
in
data16
adc
repz
push
lret
add
cmp
sbb
rclb
inc
idivb
in
je
sbb
insl
stos
jo
cmp
xchg
or
stos
xchg
or
mov
xchg
mov
mov
scas
sbb
mov
rorl
je
mov
dec
sbb
mov
mov
inc
repz
mov
out
sahf
jmp
sti
mov
shlb
leave
sarb
int3
filds
test
xchg
and
cs
sbb
test
outsl
daa
andl
inc
and
insl
mov
sbb
inc
test
out
imul
jns
lret
repz
xchg
or
push
mov
outsb
xlat
mov
mov
adc
fimuls
or
repnz
aaa
and
push
cld
pop
adcl
in
jle
nop
aad
stos
imul
shl
mov
ljmp
addb
push
dec
and
pop
ret
or
in
dec
sub
pop
mov
ja
dec
cs
aas
jg
scas
fbld
lods
xor
sbb
jge
ret
div
jb
mov
adc
xchg
adc
sahf
mov
js
pop
pop
mov
loope
ljmp
or
sbb
in
inc
lds
adc
jmp
lahf
add
inc
mov
mov
jmp
dec
jne
push
loopne
and
sbb
addr16
push
add
add
xchg
pusha
mov
out
push
out
sub
or
lods
je
sbb
loope
inc
cmpsb
dec
push
or
pop
js
icebp
or
mov
mov
add
mov
push
imul
and
int
adc
in
nop
inc
fimuls
pushf
mov
fs
dec
out
jbe
inc
pusha
mov
fistpll
fabs
imul
idiv
movsl
outsl
jp
push
xlat
dec
sarb
cmpsl
sub
loope
mov
mov
out
stos
out
mov
fbstp
and
mov
mov
mov
pushf
cwtl
pop
sub
cltd
jecxz
ja
scas
add
jp
jl
xchg
adc
lods
insb
adc
mov
dec
mov
sti
in
push
imul
mov
push
push
lcall
mov
push
loope
pop
adc
mov
push
stos
imul
jg
sbb
int3
push
xlat
das
fstpt
pop
stc
adc
cmp
fnstcw
mov
jp
daa
incl
sbb
jnp
xor
data16
mov
in
movsl
movsb
insl
rol
sub
dec
and
ret
out
mov
dec
out
mov
cmp
in
aaa
fisttps
mov
mov
mov
sar
or
sub
mov
or
jmp
mov
aas
iret
dec
push
movsl
sbbb
mov
sbb
mov
lock
cmp
jmp
or
push
call
add
enter
call
int3
dec
lea
aam
insl
roll
jg
mov
or
fsubrs
daa
pop
enter
cmp
scas
xlat
icebp
lcall
push
outsb
inc
sub
popa
jae
daa
lock
sub
fxch
sbb
dec
subl
scas
pop
fisubrs
push
loopne
mov
roll
xor
dec
fucomip
or
out
ss
in
jae
fidivs
mov
movsl
in
iret
or
shrb
or
push
das
mov
mov
and
int
push
enter
lds
inc
mov
lods
mov
xor
subb
aad
out
and
fimull
stc
xchg
add
xchg
and
and
cmp
clc
push
sub
mov
shl
add
mov
sbb
jle
sarb
fwait
cmp
aaa
jmp
add
cli
mov
aad
xchg
sub
cld
dec
fwait
into
ljmp
pop
sub
xor
inc
popa
subb
in
pop
lods
add
lret
in
in
icebp
daa
push
cld
adc
clc
arpl
and
push
test
fidivl
addr16
pushf
enter
out
ret
mov
push
cmp
dec
stos
cmpsl
imul
sti
stc
dec
lahf
ret
xchg
mov
sbb
adc
outsl
cmp
fld
lock
hlt
xchg
xchg
sahf
ficomps
adc
jns
sub
pop
lahf
movsl
pusha
push
mov
out
push
or
fwait
jae
andl
cmp
out
daa
mov
jle
jg
lds
jle
sub
es
xor
xor
or
shll
push
mov
loop
adc
xchg
adc
arpl
ret
or
in
jecxz
clc
mov
mov
arpl
adc
xor
adc
cs
popf
cmpsl
cmp
push
in
xlat
sub
in
icebp
fildl
sbb
sub
loop
cld
dec
sub
test
clc
mov
or
xchg
pusha
imul
jp
sbb
or
sub
dec
aam
inc
js
movsl
outsb
aas
test
fcompl
lahf
mov
fldt
fiaddl
ret
fadds
mov
outsl
fwait
inc
lock
mov
add
sbb
fs
xor
xchg
or
mov
inc
cld
sbb
stos
cmpsb
scas
dec
mov
xchg
pop
int3
xchg
adc
dec
cmp
push
mov
xchg
mov
hlt
mov
push
imulb
xlat
fldenv
imulb
loope
dec
mov
mov
add
adc
mov
inc
rorl
cmc
or
in
dec
int
arpl
test
fisubrs
xlat
jae
pop
nop
sar
cs
jp
jle
call
decb
xor
inc
out
and
pushf
pop
ds
movsb
les
or
js
jno
fidivrl
sub
fisttpl
sub
repnz
xor
pop
inc
xchg
daa
cli
mov
jg
jp
or
and
je
cmp
addr16
lea
inc
jnp
sbb
aaa
fisttps
jne
aas
movsl
pusha
dec
and
sub
dec
pop
lret
push
loopne
clc
cmp
mov
ss
mov
fnstenv
rorb
jp
sub
into
mov
out
mov
add
jno
and
icebp
inc
int3
push
mov
mov
ljmp
sbb
or
mov
scas
test
or
sub
movsl
jo
dec
and
push
int
cmpsl
nop
mov
clc
loop
xor
jno
push
push
mov
fistpll
enter
jl
lods
add
adc
test
pop
movl
aaa
pop
dec
pop
xor
dec
xor
repnz
sub
fs
lods
cltd
outsb
add
xchg
mov
push
loop
insl
xchg
aas
cmpsb
jl
adc
xor
mov
ficoml
jne
bound
fisubs
mov
add
push
aad
adc
test
pop
test
out
and
lds
mov
dec
sub
xor
pop
jbe
in
push
roll
ficompl
ret
sub
and
enter
add
dec
rcll
fnsave
cmpsl
mov
fidivrs
pop
in
xchg
lods
sub
in
xchg
cmc
ficomps
movsl
dec
dec
addl
lret
pop
mov
cmpb
mov
fisttps
out
xchg
adc
jo
cmp
sbb
repnz
in
test
shr
inc
jmp
pop
push
addr16
in
mov
inc
aas
outsl
or
repz
movsl
pop
fwait
int3
mov
mov
jb
or
and
fstpl
nop
push
fwait
xchg
loopne
out
pop
push
loop
adc
jmp
loopne
aaa
xor
inc
adcl
inc
fdivr
outsb
mov
xchg
insb
ret
dec
cmp
mov
cmc
in
pop
inc
mov
mov
jg
in
dec
dec
mov
sbb
subb
jle
xchg
sub
and
xchg
xchg
dec
dec
jb
dec
jmp
fld
cmp
dec
roll
popf
call
shl
fdivr
andl
and
fistpl
jmp
xor
in
mov
fwait
outsl
xchg
lret
popa
sti
mov
sbb
es
jg
dec
int
aaa
pop
enter
adc
inc
inc
scas
push
rcll
add
mov
jmp
jnp
scas
dec
xlat
jmp
push
adc
aas
jl
xor
lea
movsl
cli
adc
gs
xor
test
inc
cli
dec
mov
pop
js
test
inc
repnz
adc
mov
pop
clc
rcr
add
push
mov
les
xchg
push
push
pop
cld
adc
mov
cmp
fs
insl
cmp
cli
pop
jne
and
sub
std
sbb
adc
fdivrs
push
clc
jnp
in
fnstenv
call
jb,pn
mov
scas
mov
mov
outsb
or
int
loopne
jge
sahf
dec
cmpsb
nop
repnz
fisubl
dec
xchg
push
sbb
cltd
test
mov
cmpsb
lock
or
por
mov
jmp
mov
add
stc
sarl
add
call
sbb
icebp
clc
pop
shr
pop
ret
sub
popf
sub
lret
es
add
mov
xchg
xchg
xor
cmpsl
into
push
cmpsl
in
mov
pop
imul
push
push
pusha
mov
jg,pt
loope
jecxz
lock
push
push
icebp
bnd
ficomps
push
in
clc
cli
aam
pop
aaa
rcll
mov
test
mov
or
mov
lds
inc
mov
mov
xchg
add
pop
mov
icebp
adc
add
xor
ds
stos
outsb
mov
inc
ljmp
es
insl
js
add
movsl
rorl
pand
mov
fnstcw
jg
push
push
outsl
pop
fisttps
dec
sub
loop
adc
dec
and
jne
xchg
rcll
xchg
cmpsl
loop
cwtl
fistps
fisubl
jae
xchg
mov
jl
and
xor
xorl
lea
xchg
jp
mov
sub
leave
jne
insb
into
jns
lods
movsb
sbbl
mov
iret
cmp
nop
popa
mov
seta
lret
loopne
test
or
dec
pop
int
sub
mov
push
mov
sbb
and
push
insb
je
cld
jmp
out
test
inc
inc
mov
incl
outsl
hlt
dec
das
ja
add
mov
dec
ljmp
das
cmpb
xor
sahf
ret
rorl
dec
das
mov
mov
push
sub
sbb
test
cmpsb
dec
sub
out
adc
jae
lahf
sub
push
pop
insb
bound
and
pop
xchg
lods
adc
sub
fwait
daa
xor
jmp
xorb
hlt
sbb
hlt
cmc
cmp
sub
xchg
dec
pop
pop
lock
lret
mov
jns
out
es
or
jl
ret
cmp
inc
test
sbb
andl
iret
fs
add
jae
movsb
pop
data16
insb
or
in
shl
mov
sub
inc
adc
aas
cmp
xor
ss
cmp
fcoms
sub
notl
cmpsl
or
jmp
add
inc
adc
cld
loop
jp
push
or
shrl
pop
xor
in
push
call
xor
popf
jns
iret
cmp
addb
shll
push
fmull
iret
jo
js
and
or
add
cmp
xlat
js
push
in
repnz
sub
sbb
mov
or
aaa
scas
ljmp
mov
adc
aaa
jbe
mov
out
mov
jl
scas
clc
sub
pop
fwait
cmp
pop
std
push
push
lods
mov
into
xchg
das
aam
jmp
sbb
divl
mov
shll
ja
mov
shl
aas
jno
sbb
imul
adc
sbb
outsl
ret
in
mov
sub
and
outsl
jl
push
imul
dec
leave
inc
in
jnp
lcall
fwait
lret
adc
movsb
mov
sti
popa
add
xchg
fisttps
mov
adc
or
daa
jge
popf
jne
aaa
xorl
dec
sbb
aas
out
int3
push
call
lahf
pop
dec
xor
rcrl
cli
mov
cmpsl
imul
lcall
mov
xor
pop
leave
in
fsubrl
cmc
mov
dec
xchg
inc
mov
sbb
mov
cltd
adc
dec
adc
push
cmp
push
inc
lds
xor
push
pop
inc
inc
cli
mov
jg
mov
xchg
rorb
inc
scas
repnz
in
mov
stc
mov
mov
loop
ficompl
stc
cli
popf
bsr
loope
xchg
xor
sbb
cld
rolb
mov
out
jnp
loope
mov
or
aas
pop
sti
arpl
outsl
mov
movl
addr16
mov
xor
pop
mov
pop
push
fadds
jbe
mov
outsb
mov
cmp
or
or
imul
mov
dec
mov
xchg
imul
inc
int3
lret
es
ja
jmp
ret
lods
lock
movsb
sub
or
test
cmpsb
sarl
fcmovu
xchg
bound
lock
cmp
fdivr
xchg
ljmp
repnz
ror
jp
xchg
test
push
js
add
adc
mov
mov
addr16
adc
test
push
mov
ljmp
push
pop
loopne
mov
xor
lahf
fstl
push
mov
sbb
loop
pop
movsb
pop
leave
jle
or
shlb
xchg
stc
fcomps
je
test
xchg
fwait
imul
inc
mov
subl
jae,pn
out
shlb
mov
lods
std
lods
pop
push
and
cmp
shr
dec
xchg
jo
jle
mov
aaa
jge
adc
ljmp
mov
jge
xchg
xor
sbb
pop
mov
xchg
arpl
es
cltd
sahf
jmp
cmp
into
pop
push
adc
shlb
cs
or
lea
aas
loopne
jmp
rcrb
cmp
xor
add
jae
lcall
sub
rorb
inc
popa
das
ror
in
xlat
call
icebp
cltd
sub
adc
imul
mov
jl
das
inc
pushaw
es
lret
push
inc
pop
movsl
loope
divl
mov
loop
and
sahf
or
cmpl
fistpl
out
aas
sub
roll
iret
jo
mov
cli
lods
or
in
out
lods
in
jnp
daa
mov
lcall
sbb
inc
iret
jo
cmp
imul
sbb
shll
or
pop
insl
mov
sbb
pop
sbb
dec
andb
lock
lahf
repnz
adc
pop
and
out
jbe
stc
mov
sbbl
dec
and
sub
icebp
fs
push
push
mov
and
imul
jo
in
push
xor
xchg
and
sub
xchg
mov
dec
inc
sub
lcall
test
pop
xor
popf
pushf
xchg
sbb
or
inc
sub
add
mov
cmpsb
bound
out
or
xchg
or
rcr
xor
aad
repnz
call
bound
pushl
repz
sub
test
and
jbe
adc
and
pop
insb
xchg
outsb
pop
out
enter
repnz
and
call
xor
cmpb
sbb
xchg
pop
cmp
outsb
mov
pop
nop
ret
addr16
and
scas
push
xchg
fdivrl
jge
mov
sahf
sarl
aas
xchg
inc
push
dec
mov
cmc
and
push
fstpt
jl
push
adc
mov
pop
inc
lret
mov
cmp
popf
mov
xchg
xchg
or
dec
adc
dec
data16
xorb
pop
mov
jle
or
cmp
rolb
orb
push
xor
lods
daa
gs
ficoml
mov
insb
push
and
cmpsl
jne
xchg
outsb
push
popf
inc
mov
fildll
cs
iret
dec
cmc
sahf
pop
shrb
xchg
sahf
cs
cmpsl
jnp
stos
rolb
outsl
arpl
test
cli
mov
clc
xchg
xchg
push
mov
repz
imul
cmp
ss
mov
sbb
inc
sbb
fmuls
push
add
in
clts
or
lock
lods
mov
mov
and
push
or
sarl
or
pop
js
pusha
push
repz
aaa
push
jb
dec
fldt
fildl
dec
pop
insb
ret
xchg
adcl
mov
sarl
lret
jmp
jle
cmp
leave
jl
mov
sub
ja
push
pop
loop
inc
filds
pop
sbb
push
stos
sbb
push
pop
add
xor
pop
jne
mov
sti
or
push
push
cmp
nop
mov
mov
adc
sub
mov
fldt
jbe
int3
outsb
lret
add
push
mov
cltd
js
lret
mov
inc
in
inc
mov
ss
in
dec
popa
insl
jno
and
inc
and
or
xchg
notl
ljmp
test
es
push
movsb
inc
sub
fld
out
jg
cmp
mov
inc
mov
mov
test
push
cmc
push
js
fdivrl
mov
inc
jae
and
std
test
lods
xor
loope
cmc
das
xchg
pop
leave
sbb
push
xchg
sub
cmp
mov
dec
add
pop
sbb
cmp
inc
popa
mov
out
sub
rorl
mov
je
inc
dec
inc
in
pop
and
sub
stos
add
test
mov
add
inc
lahf
shll
inc
jae
and
enter
pop
pop
dec
mov
push
cs
hlt
divl
cwtl
and
push
sub
xchg
dec
jecxz
xchg
ret
xchg
fsubl
test
ret
pop
push
mov
insl
push
lea
ffree
add
push
push
cmpsl
cmp
mov
out
or
test
and
dec
out
dec
xchg
mov
dec
addr16
mov
push
mov
hlt
push
out
mov
cs
mov
push
pop
pop
insb
inc
cs
jo
mov
and
rcrl
push
cltd
cmp
xor
mov
xchg
sbb
mov
test
pop
mov
lods
mov
dec
mov
pop
jbe
add
xor
cwtl
push
xchg
jecxz
mov
jge
rcll
jb
xchg
dec
jmp
push
out
lret
pop
jno
stc
sbb
icebp
call
mov
sbb
cld
js
or
mov
cli
ret
outsl
xchg
adc
daa
in
pop
mov
shlb
jg
xor
jecxz
repnz
cmp
inc
les
push
test
adc
stos
test
rorl
cmpsb
xchg
push
jl
add
mov
xorb
cltd
lock
sbb
add
fists
jg
mov
cmp
inc
inc
out
or
add
cmp
bound
or
outsb
scas
nop
sbb
adc
adc
and
jcxz
cmpsl
cmp
cmp
inc
cmp
sub
leave
mov
js
add
dec
or
jl
sbb
shr
mov
out
stos
dec
jg
mov
jbe
fsubrs
pop
sbb
ficoms
aam
pop
jmp
jns
push
das
and
xor
mov
and
shll
sbb
inc
sub
and
sub
int3
fsubrs
repz
and
sbb
sub
test
decl
scas
loopne
jmp
fwait
cmp
bsr
cmpsb
and
dec
or
shrl
ss
ficoms
mov
jo
adc
adc
mov
mov
mov
lret
adc
fsubs
or
aam
addb
cs
shrb
inc
add
or
popf
dec
shrb
or
fs
mov
xchg
cmp
int
ficompl
cwtl
adc
and
cmp
jmp
mov
xor
fs
lods
inc
loopne
mull
arpl
mov
mov
gs
adc
xchg
lret
div
ljmp
xor
xchg
mov
jg
test
jb
cmp
xor
xlat
sub
popf
movsl
xor
imul
insl
mov
inc
pusha
popa
or
mov
sub
in
movsb
lret
test
cltd
mov
call
or
in
cmp
flds
fmuls
mulb
out
pop
push
inc
outsl
cmp
sbb
and
dec
loope
push
call
sbb
inc
xchg
cmp
roll
loop
into
push
adc
cwtl
and
testb
dec
in
cmp
or
inc
lods
push
inc
push
bound
and
mov
mov
mov
pop
dec
lds
sub
pop
sbb
rolb
adc
js
and
add
push
push
mov
mov
sbb
sbb
or
jb
mov
leave
lea
scas
in
jmp
lds
xchg
mov
stos
mov
test
test
lds
jns
fisubs
loopne
cmpsl
pop
hlt
rorl
jo
cli
jmp
xchg
ret
mov
sahf
add
fidivrl
lods
jl
outsb
shll
dec
inc
fsub
fsubs
xor
pop
xor
push
out
stos
in
mov
lods
pop
push
push
cmp
fisubs
call
fsubl
lret
sbb
mov
pop
push
pop
call
and
movsb
jg
jb
inc
loope
xor
jg
xorl
outsl
lahf
jnp
or
mov
lret
mov
ds
mov
mov
pop
lret
outsb
sbb
jne
mov
or
movsb
xor
push
mov
lret
pusha
xor
clc
xchg
dec
lea
push
pop
fildl
orl
imul
ja
lret
adc
and
mov
imulb
ljmp
neg
leave
and
popa
jmp
inc
in
dec
inc
inc
push
xor
aad
add
dec
xorl
jecxz
out
jl
lahf
shl
push
sub
or
or
cwtl
sub
cld
lret
jg
int3
frndint
mov
sahf
movsl
inc
xor
jbe
iret
xor
xchg
jmp
mov
mov
lret
lahf
lcall
sti
xchg
bound
jnp
cmp
add
jno
and
mov
push
in
mov
popa
clc
sbb
aaa
inc
ret
sbbl
mov
inc
sbb
in
xchg
daa
mov
divb
jb
aas
push
addr16
jmp
xor
xchg
sti
inc
cmc
ja
or
xor
xor
popf
gs
out
and
mov
insl
insb
inc
jle,pn
sub
cmpsl
fidivs
cmp
cmp
pop
push
enter
jnp
iret
fsubrl
mov
jp
jo
adc
mov
sub
ret
pop
icebp
mov
or
rcl
sarb
andl
xchg
jmp
or
xor
decb
in
out
cltd
push
add
mov
sbb
imul
mov
and
push
jmp
data16
fildll
scas
mov
jecxz
jo
pop
jns
imul
inc
into
mov
andl
icebp
ret
adc
sub
outsb
mov
and
push
push
mov
xor
test
jp
nop
push
pop
imul
test
xor
sbb
mov
out
push
push
inc
int
cld
stc
xchg
lcall
mov
mov
cmp
sbbl
fistl
rcll
adcb
out
aas
pop
push
into
push
push
mov
scas
add
cmpsb
sar
push
push
scas
test
cs
add
xchg
mov
jnp
cmp
int3
mov
mov
cmp
push
inc
xor
out
repz
movsl
adc
mov
in
xchg
jle
dec
jp
in
push
fimuls
rcll
icebp
aad
sarl
into
inc
popa
addr16
jl
ss
cld
test
ret
inc
and
push
mov
mov
jns
mov
jbe
cwtl
lods
or
cmp
xor
dec
adc
ja
subb
inc
inc
pop
imul
xor
add
xchg
setns
cmpsl
cmc
pushf
sub
lcall
jl
test
or
sub
sbb
mov
incb
movsb
mov
into
out
sub
jmp
xchg
xor
ja
fcmovnb
inc
js
xchg
lahf
xchg
push
sahf
pop
sbb
mov
pusha
mov
inc
out
daa
jae
pop
sbb
xor
or
mov
aas
dec
jmp
jg
push
push
adc
or
push
leave
jle
push
adc
jecxz
sbb
pop
aaa
out
jl
rolb
out
inc
call
sbb
and
xor
fcmovu
sahf
cld
mov
sbb
lret
loope
paddw
int
jne
pop
pop
push
and
inc
sub
push
rorb
jo
adc
popw
fildll
lahf
add
jg
popa
mov
mov
cmp
sub
nop
ss
mov
aaa
mov
lcall
add
pop
das
jns
dec
ret
pop
add
pop
xor
rorl
jbe
xchg
adc
aaa
dec
xchg
hlt
pushaw
cmpsl
std
jns
xor
cmpsl
xchg
inc
dec
jecxz
int3
bswap
popa
mov
in
bound
cli
push
jecxz
pop
ret
insb
icebp
loop
xchg
sahf
jb
frstor
fbstp
popf
sahf
mov
in
or
push
add
insb
mov
add
leave
mov
jp
shl
cmpsb
repnz
stos
sub
push
out
push
hlt
ja
int
fldcw
daa
jns
aaa
and
clc
pushf
je
push
pop
jnp
jo
enter
inc
daa
mov
mov
push
in
jne
into
sub
iret
mov
ret
dec
push
mov
sub
add
push
imul
cld
inc
xor
fidivrs
int
stos
dec
jns
xlat
arpl
or
xadd
pop
or
inc
hlt
fidivrs
lret
add
pushf
movsl
jmp
dec
imul
push
test
imul
shlb
imul
fsubrl
lock
mov
xchg
or
jle
pop
stos
add
movsl
sbb
imul
adc
aas
mov
out
test
cmpsb
fadds
lret
mov
int
push
rcll
shll
clc
ljmp
int
pop
sub
iret
pushl
or
add
inc
inc
aaa
popl
mov
imul
push
insl
out
mov
or
out
cmp
pop
jle
aas
jecxz
dec
test
jecxz
sub
gs
and
out
pop
mov
out
push
and
sti
movsl
jns
std
mov
cmp
fldenv
jno
es
jmp
push
dec
pop
inc
sub
pop
into
push
push
test
les
ficoms
xchg
xlat
in
mov
cmc
push
xor
and
scas
dec
lret
scas
pop
mov
icebp
movsl
sub
sahf
xchg
test
or
jg
push
arpl
xchg
xor
rolb
mov
sti
inc
mov
adc
jmp
or
fisttps
dec
mov
cmp
inc
mov
mov
sti
repnz
jp
call
out
cmp
out
adcl
jae
std
outsb
fildl
sarb
adcl
jle
ror
outsb
push
xor
fdivl
insl
and
push
mov
inc
ss
xchg
add
test
bound
add
subb
leave
subb
mov
push
pop
or
push
daa
mov
mov
pop
in
out
popa
jge
lods
pop
es
cwtl
stc
cmp
mov
push
ss
pop
cs
xchg
hlt
jne
add
or
mov
cmp
mul
cmp
and
movsl
inc
shll
pop
imul
enter
das
add
pop
leave
fsub
mov
xor
cmp
mov
jno
xchg
pop
enter
mov
xchg
push
adc
cmp
cmp
pop
fistpll
icebp
or
or
sbb
dec
pop
xorb
jno
popa
jecxz
xor
adc
cmpb
pop
out
rcll
test
loopne
dec
dec
popf
mov
cmp
and
ficompl
xchg
fistpll
pop
imul
push
ja
outsb
out
xchg
pop
add
push
inc
or
mov
imulb
inc
ljmp
jge
jnp
daa
popf
loop
cmp
xchg
pop
cs
fwait
popa
repz
cmovb
int
xchg
fdivrl
aaa
test
inc
jo
test
outsb
dec
pop
insb
jae
out
out
int
scas
add
jl
ret
and
or
cwtl
clc
sub
fsubl
dec
jle
add
xchg
subl
or
mov
xchg
jo
jno
dec
stc
inc
int3
pop
pop
addr16
mov
or
xorl
scas
fucomp
ss
iret
movsl
add
loope
rcrb
mov
inc
jecxz
cmp
jbe
sub
sti
aas
and
jo
and
lock
mov
add
push
add
adc
cmpl
pusha
xchg
mov
sbb
xchg
ret
repnz
mov
add
sub
mov
out
call
xchg
adc
addb
jno
pop
inc
mov
push
mov
sbb
test
std
pop
or
dec
in
xchg
pushf
fists
inc
inc
dec
pop
pushf
stc
andl
add
adc
sbb
sub
add
or
aam
xor
popf
add
mov
jecxz
pop
mov
sub
xchg
push
xchg
and
cmp
pop
cltd
sbb
jne
sub
fstps
pop
cmp
out
jl
push
mov
pop
bound
adc
call
out
mov
jecxz,pn
lret
push
std
imul
sub
in
cs
or
mov
mov
mov
scas
pushf
jmp
jbe
mov
fdivrs
fwait
lret
push
dec
dec
test
ret
inc
in
out
and
pop
imul
push
sub
jns
add
dec
push
and
dec
jae
and
and
mov
mov
cmp
mov
movsb
jbe
ja
cltd
lock
inc
mov
mov
jae
scas
xchg
mov
addr16
call
call
fdivr
mov
es
sbb
push
loopne
ss
repz
or
lahf
pop
jg
push
shll
add
mov
movsl
push
and
xor
inc
jae
xor
mov
std
loope
sahf
mov
lcall
sahf
dec
pop
and
sbb
in
lock
mov
mov
sub
pushf
test
jp
int
pop
jne
int3
fwait
pushf
stos
xchg
pop
dec
inc
sbb
mov
out
aam
ror
lret
pusha
jp
mov
sub
loope
movsb
and
pop
inc
rclb
cld
sub
and
repnz
into
adc
ljmpw
xchg
and
xlat
in
jle
or
enter
jge
cmp
mov
inc
sbb
mov
or
pop
xchg
arpl
xlat
sar
mov
mov
add
push
aas
inc
ja
pop
cmp
in
add
xchg
lret
sub
adc
mov
push
and
cwtl
scas
rcll
dec
test
xor
out
insb
outsb
icebp
cmp
push
push
cmp
pop
test
outsb
mov
jp
sub
sbb
lock
add
or
dec
test
or
xor
add
xor
call
cs
fstpt
sbb
dec
clc
iret
sbb
ror
and
lret
out
sub
cli
and
cli
popf
xchg
fcoms
dec
lods
inc
dec
ss
sub
inc
ds
cmp
pushf
inc
adc
popa
loop
push
sahf
add
mov
mov
sub
jne
cld
and
and
arpl
inc
inc
lods
push
test
scas
mov
popf
imul
pop
sbb
adc
dec
or
dec
xor
fs
jle
mov
jecxz
cmp
xchg
rcrb
jle
inc
mov
mov
pop
add
and
cwtl
sbb
sbb
jo
cld
cmp
ret
cmp
pop
imul
jno
jbe
add
fdiv
xor
jp
mov
xor
shl
fisttpl
roll
sub
ret
aas
jp
jo
cmpb
call
push
dec
idivb
scas
sbb
shll
xor
cltd
ljmp
xchg
mov
and
xchg
sbb
fsubrp
js
push
cmp
cmpsl
ds
movsb
dec
pop
cmp
xor
mov
mov
scas
sbb
mov
fnstsw
mov
cmp
sbb
push
or
pushf
add
rol
loop
dec
mov
dec
pushf
addr16
addr16
dec
in
inc
hlt
pop
mov
mov
das
pop
sahf
hlt
xchg
test
je
aad
jg
scas
fists
push
mov
mov
fidivs
cmp
xor
scas
xor
mov
mov
int
mov
in
mov
xchg
mov
adc
in
cmpsb
repnz
and
cmp
je
ss
mov
test
pop
rorl
dec
dec
sbb
addr16
jecxz
out
int3
into
roll
imul
push
sub
out
andb
addl
mov
ret
lods
sbb
repnz
mov
dec
push
mov
mov
sahf
jg
fstpt
rorb
repz
sbb
pop
dec
std
leave
loop
imul
mov
xchg
inc
stos
sub
push
adc
dec
setne
in
inc
jg
pop
pop
and
popf
and
scas
filds
mov
test
lret
ret
pop
and
adc
ja
aad
leave
xchg
xchg
jnp
leave
jb
adc
repz
jmp
lods
mov
adc
inc
movsb
int
mov
stc
mov
js
cwtl
cmp
xlat
test
fldt
jp
lods
lds
fwait
and
sbb
divl
xchg
cmpsb
mov
and
gs
push
out
roll
sbb
inc
sub
hlt
movsl
push
sbb
rclb
dec
pop
pop
inc
push
mov
dec
ficompl
jnp
das
jge
hlt
xchg
push
cld
fs
sub
dec
shl
ret
add
int
sub
inc
mov
stos
call
mov
in
jmp
fistpll
xor
leave
lods
push
mov
mov
fcompl
jbe
fcoms
mov
fstpt
clc
and
in
clc
hlt
leave
pusha
mov
hlt
xchg
cmc
add
and
dec
fdivp
hlt
dec
jecxz
sbb
inc
movsl
add
jns
andl
inc
les
popf
popf
add
add
lret
loop
das
mov
sub
enter
push
adc
movsb
movsb
in
stc
pop
lods
or
shll
mov
xchg
mov
cmp
rcrb
outsl
aam
es
push
insl
ret
pop
insb
lcall
pop
xchg
dec
mov
rcll
cmp
xchg
mov
or
mov
xor
pusha
out
jnp
int
sub
jmp
cmpsl
mov
inc
jecxz
insl
and
daa
sub
wrmsr
arpl
add
or
cmp
popf
mov
dec
pop
pop
pop
ds
push
std
lret
idivb
xchg
cltd
jle
out
mov
mov
jle
dec
push
mov
scas
push
dec
flds
jno
enter
pop
loopne
and
aad
jg
and
mov
leave
ja
test
je
mov
mov
mov
movaps
int3
mov
mulb
jecxz
sub
add
xor
sbb
int
stc
cmpsl
mov
push
setb
mov
jb
sub
ret
pop
jl
mov
pop
negb
mov
mov
lahf
lcall
cmp
dec
xchg
int3
push
mov
imul
notb
inc
fisttps
jbe
lahf
cmpsb
cmc
sub
jne
repnz
jo
mov
rorl
pminub
das
bound
outsb
scas
popf
pop
or
sti
repnz
std
pop
js
imul
push
stos
cmc
mov
stos
mov
test
xchg
sbb
scas
popa
add
in
mov
scas
or
sbb
inc
in
cmp
sub
mov
mov
add
or
dec
and
aaa
add
das
push
mov
dec
pop
jecxz
pop
xor
add
ja
pop
fcomp
mov
add
sbb
ret
nop
sbb
sahf
jg
sbb
mov
negl
mov
jbe
ljmp
lsl
sbb
or
xchg
adc
ja
inc
jne
lea
outsl
jp
frstor
cld
xchg
addb
cltd
cld
js
movsb
adc
cmp
dec
dec
mov
mov
pop
repz
pop
push
adc
movsb
movsl
sub
sub
lods
xchg
subl
mov
jns
out
jne
jmp
leave
and
cmp
mov
fnsave
and
or
xlat
inc
fisubrl
sbb
loope
jno
mov
dec
mov
sub
or
cs
mov
pop
push
stos
sub
adc
jo
mov
dec
mov
push
mov
mov
mov
lea
insb
mov
jo
mov
fwait
push
or
dec
inc
shlb
cmp
adc
inc
int
mov
xchg
imul
js
lret
sub
mov
clc
out
mov
int3
gs
mov
fnstsw
jb
push
mov
addr16
cmp
das
xchg
mov
mov
dec
fwait
add
out
xlat
repnz
sbb
in
jne
hlt
cwtl
adc
xor
lea
xchg
inc
sub
lds
sarl
rol
popa
cld
push
and
in
imul
push
cmc
xchg
sub
sub
insl
das
dec
jp
add
stos
or
ret
jnp
xchg
mov
push
in
xchg
ds
jp
mov
pusha
sub
jmp
je
and
out
xchg
test
pop
in
rcl
test
xchg
movsl
faddp
push
scas
adc
inc
dec
inc
roll
clc
cmp
pop
icebp
adc
xchg
fnstsw
and
test
pop
fisubl
ret
or
or
sbb
mov
movsb
ds
add
hlt
std
jecxz
mov
jle
cmpsb
mov
pop
in
mov
mov
adc
mov
xor
sub
push
jmp
arpl
mov
mov
xchg
adc
loop
das
sub
ret
jle
xchg
flds
mov
cmp
enter
ljmp
lahf
inc
pop
mov
stos
adc
mov
pop
mov
call
pop
outsb
cmpsl
out
lods
jo
jb
cmpsl
int3
fwait
js
out
cmp
incl
gs
out
or
mov
inc
loope
movsl
aad
insl
in
cld
out
scas
arpl
ljmp
adc
mov
and
inc
push
xlat
repz
cmp
xor
shll
adc
inc
std
xchg
fdiv
out
fistpll
roll
shlb
lea
ret
jns
pusha
jle
movsb
loop
leave
add
mov
jo
and
and
mov
adc
scas
cmp
xchg
test
jns
jge
inc
out
xor
and
or
out
xchg
add
pop
inc
push
mov
or
rorb
mov
scas
imul
subb
xchg
sbb
pusha
ljmp
in
pop
stos
inc
adc
sbb
loopne
rclb
add
mov
jo
and
add
xchg
shrl
movsb
add
xchg
pop
rclb
mov
adc
sbb
mov
cmpsb
out
xchg
cmp
push
lcall
sbb
pop
cmc
add
dec
outsb
daa
incl
aas
fs
rclb
jnp
pop
xorb
outsb
adc
dec
pop
jg
mov
loopne
fimull
mov
fsubp
into
outsl
add
inc
into
adc
inc
dec
xchg
outsl
lret
jmp
cmc
inc
nop
lds
ret
push
dec
and
je
stos
fsubrs
insl
mull
sbb
in
std
dec
imul
lods
adc
inc
and
xor
push
xchg
mov
repnz
imul
sub
lods
and
or
icebp
call
sbb
lcall
pop
das
lahf
imul
jb
xor
mov
dec
xor
scas
jbe
mov
std
insb
pop
test
jns
dec
sub
sbbb
in
imul
push
gs
cmp
test
js
repnz
xor
imul
push
add
push
arpl
scas
aas
mov
inc
jne
mov
ror
cltd
sbb
in
jle
jge
sarb
push
repz
ret
mov
pop
sbb
xchg
push
fdivs
sub
enter
popf
xorl
lea
in
addl
js
and
adc
mov
imul
or
mov
stos
push
lds
incb
fistps
jmp
icebp
mov
test
cmc
jb
ret
stos
movsb
jl
dec
in
push
outsb
data16
sbb
out
lods
pop
sbb
push
or
xchg
sti
add
add
mov
scas
cli
mov
rcrb
fmul
sub
xchg
jns
in
cmp
xchg
orb
repz
or
hlt
jl
dec
sbb
add
and
sahf
mov
es
imul
pop
jae
and
jo
lock
push
or
sub
lds
sub
push
arpl
jb
scas
imul
leave
insb
iret
fwait
out
mov
xor
adc
push
or
std
push
lds
push
nop
dec
test
add
addr16
pop
imul
pop
adc
and
mov
dec
daa
aad
aad
fimull
bound
dec
sub
push
iret
icebp
int3
fwait
sti
ret
mov
lea
std
loopne
fwait
mov
lods
repz
xor
push
ficoms
es
addb
pop
shr
outsl
dec
lds
jne
add
in
hlt
push
jb
inc
lock
out
sbb
and
ja
mov
mov
pusha
cmp
mov
sub
xlat
push
sbb
mov
dec
sub
mov
divb
es
and
jmp
dec
fwait
lahf
sbb
push
repnz
inc
test
test
daa
adc
and
and
inc
lds
int
dec
repz
movl
mov
pusha
aam
push
and
adc
push
pusha
loope
ja
sbb
sub
shr
cmp
pop
xchg
fldt
adc
adc
dec
adcb
int
mov
inc
pop
sbb
sub
jns
xor
notb
in
dec
int3
jecxz
jns
cmpsb
push
push
mov
push
mulb
jp
out
fwait
popa
pop
pop
mov
mov
negl
aam
adc
in
dec
push
xchg
clc
movsb
leave
push
scas
xchg
cmpsl
pop
fstpl
stos
movups
stos
psubsb
cs
roll
shll
in
dec
sub
lret
jo
leave
or
jecxz
and
cmp
sbb
adc
fisttpl
cmpsb
push
je
les
out
iret
inc
mov
dec
xchg
arpl
mov
xchg
fsubs
adc
sbb
mov
pop
imul
incb
push
xor
push
sarb
out
addr16
sub
pop
pop
in
pop
aad
push
out
rcr
or
lock
xchg
ja
jl
add
mov
pop
pop
or
scas
jg
push
in
push
lds
pop
insl
sbb
and
mov
ret
push
scas
mov
stos
dec
imul
cmp
sub
scas
fisttpl
cld
adc
mov
stos
pop
int3
add
test
rcll
push
jae
mov
mov
xchg
adc
mov
mov
fsubl
cld
dec
inc
outsl
cmp
cmpsl
cmpsb
and
cmp
sub
popf
adc
cmc
rolb
cmp
ficoms
lock
or
repnz
insl
cmpsb
cli
cmpsl
test
mov
sarl
cmp
cli
mov
fadd
mov
dec
add
mov
xchg
test
rcr
adc
cmp
iret
mov
sbb
cwtl
adc
xor
aam
adc
mov
mov
dec
stos
repnz
xor
sbb
mov
rol
push
inc
fstpt
push
je
jmp
pop
in
ljmp
jb
or
and
jo
push
mov
mov
and
sahf
shl
dec
pop
ljmp
xchg
aam
das
xchg
ss
pop
cli
adc
add
jge
push
bound
xchg
inc
jecxz
sub
sbb
mov
loop
or
xchg
in
and
adc
jno
jns
xor
dec
adc
or
jae
aad
ja
icebp
cmp
xchg
xchg
sub
insl
cmp
or
mov
into
ds
test
sub
adc
incl
xchg
mov
scas
sbb
adc
aam
iret
mov
jge
pop
mov
pop
cmp
daa
xlat
imul
cs
sbb
cli
out
mov
cmc
shll
pop
push
adc
push
xchg
shrb
repnz
gs
aaa
imul
and
push
cmp
scas
leave
dec
pop
pop
ds
push
pop
imul
lahf
fsubrl
out
je
push
outsl
cmp
sti
xchg
jb
mulb
sbb
sub
sbb
je
lret
sbb
pop
xchg
imull
pop
adc
stos
popf
cmp
cmp
in
xor
jbe
loope
push
cmpsl
jne
sbb
addr16
add
mov
out
xchg
and
leave
mov
jge
inc
int3
mov
test
cmp
push
mov
mov
nop
negb
mov
adc
fistpll
or
movsb
or
dec
push
hlt
sub
jbe
out
inc
pop
mov
mov
movsl
dec
xor
xor
and
mov
dec
pop
arpl
sub
xor
subb
mov
sbb
jecxz
out
sbb
fs
sub
adc
cld
in
lds
cmp
sbb
daa
or
pop
les
mov
je
jnp
dec
stc
or
dec
daa
outsb
push
lods
sbb
jle
or
mov
test
inc
rol
sub
fdivs
stos
test
arpl
fimuls
jbe
mov
int
movsb
push
sub
call
ljmp
adcb
cmp
sub
mov
ffree
xlat
insb
cwtl
sub
enter
xor
shrl
in
and
fidivrs
mov
shlb
sbb
sub
push
int
mov
jae
fbld
fisubrs
add
pop
jle
push
mov
pop
or
cmpsl
mov
aad
add
stos
cmpsb
add
cld
gs
in
or
cs
mov
add
fadd
add
xchg
sbb
cmp
pop
fsubrl
in
cmp
sbb
sub
in
test
call
and
stc
scas
ja
mov
cmp
aaa
inc
jno
push
adc
jg
sub
aaa
pop
in
or
push
rcr
and
in
jo
sub
lods
fwait
lods
in
cmpsb
inc
fwait
scas
jb
xor
xchg
pop
push
subb
dec
lds
push
ds
sbb
push
mov
xor
aas
dec
push
push
jg
fwait
push
jnp
aad
mov
adc
and
or
faddp
nop
ror
sbb
dec
insb
ljmp
cwtl
xchg
ret
movsb
mov
sub
aad
loopne
arpl
enter
outsb
sub
ficoms
lods
pop
sbbl
lea
gs
orl
in
dec
jno
ds
cmp
std
sbb
je
ds
and
aad
stos
add
sbb
sbbb
loope
outsb
xorb
push
sbb
sbb
cmp
pop
sub
shl
mov
cmp
sub
jmp
mov
inc
inc
iret
xchg
pop
mov
cmp
sub
jl
mov
xchg
test
jnp
divb
jne
out
and
shrl
std
mov
in
cmc
sbb
mov
cmc
cmp
test
sbb
icebp
sahf
jl
std
movsb
std
cmp
repnz
call
jae
jns
pop
add
int3
inc
add
sahf
sub
out
sbb
cmp
int3
rcrb
push
sbb
inc
lahf
jb
clc
pusha
push
aaa
idivb
fs
and
dec
mov
hlt
inc
ss
stos
inc
bound
test
xlat
xchg
jp
jne
xor
dec
in
jecxz
in
mov
xor
fsubl
jno
out
mov
adc
movb
push
sbb
aam
stos
sub
or
stos
addr16
fstl
jb
jo
mov
lea
dec
inc
js
cmp
xchg
pop
leave
fstpt
pop
adc
inc
add
pushf
cwtl
mov
jnp
leave
dec
in
adc
into
ss
in
bound
mov
fildll
pop
fs
inc
int
pop
xchg
xorps
adc
gs
sbb
jle
sbb
jbe
cmp
stos
rcll
adc
xor
jnp
push
mov
cmc
lcall
or
call
fstpt
add
sbb
sub
stos
add
loopne
fwait
or
bound
sahf
insb
add
aad
add
jp
sub
cmp
add
hlt
dec
clc
ds
in
or
ds
arpl
pop
sbb
and
call
jecxz
fidivrs
idivb
arpl
cmp
and
pushf
enter
je
dec
xor
inc
jno
imul
ss
sub
dec
push
aam
lcall
pop
sub
loope
push
inc
push
mov
and
adc
mov
mov
rcll
dec
sub
mov
jb
xchg
mov
test
xchg
jle
dec
mov
xchg
std
xor
xor
repnz
fdivr
lret
mov
pop
mull
pop
mov
push
mov
testl
xchg
icebp
mov
cwtl
dec
test
shl
xrelease
jl
push
mov
out
fistl
fdivrp
icebp
icebp
shll
push
jle
out
lods
stos
jl
lahf
cmp
vphaddubw
sahf
jmp
xor
dec
adc
mov
push
mov
push
fwait
xor
movsl
sub
subl
pop
outsb
out
mov
test
xlat
or
xlat
jle
pop
inc
fst
fadds
aam
push
push
xchg
mov
pop
add
lcall
fsubl
xchg
mov
inc
outsb
out
inc
xor
adc
je
pop
add
or
dec
cs
lods
push
fld
fldenv
and
cmpsl
pusha
outsl
and
int3
sahf
sub
dec
mov
fistpl
mov
cs
add
xchg
movsl
fnstcw
pextrw
mov
push
popf
sub
daa
aaa
aaa
fwait
aad
sub
shll
jmp
mov
push
add
outsb
lret
pop
push
pop
xchg
jbe
jnp
cmp
jnp
loopne
insb
push
inc
mov
mov
and
ja
jg
test
outsb
loopne
mov
xor
lahf
jae
shll
push
test
mov
sbb
in
js
or
test
push
es
mov
aam
mov
subb
out
stc
push
clc
dec
sub
cli
repz
movsl
dec
add
mov
sub
adc
insb
adc
iret
push
sbb
jecxz
push
jmp
inc
pop
mov
in
mov
or
inc
xchg
cmc
cmc
jne
jg
test
sahf
or
int
mov
out
das
dec
gs
sub
lods
addr16
and
add
rorb
bound
rorl
xchg
or
xchg
xchg
push
cmc
sbb
test
add
xor
addr16
ja
arpl
in
ds
inc
sbb
jl
push
popa
mov
mov
pop
add
sbb
push
dec
mov
add
jb
mov
or
ds
or
test
nop
pushf
inc
cmp
ja
rcl
inc
sub
das
cmp
xchg
fildl
insl
mov
test
mov
popa
mov
movsb
lea
jns
roll
js
das
jo
addr16
xlat
js
in
es
outsb
mov
fcomi
lds
imul
lret
mov
adc
add
pop
sbb
repnz
mov
adc
int
lds
mov
mov
cmp
idivb
insb
in
mov
aam
fisubrl
ss
call
xchg
cmp
dec
jae
sbb
mov
mov
cwtl
test
nop
jge
cmp
pop
bound
cmp
addl
jge
mov
xchg
mov
adc
adc
add
rorl
xor
pushf
or
or
mov
add
sub
sbb
in
pop
popf
test
dec
in
sbb
xchg
push
xor
int3
sti
mov
sub
pop
dec
jb
lock
cmp
stc
cmp
jecxz
imul
fdivr
loope
call
push
negl
call
cmp
sub
je
cmp
pusha
insl
sbb
js
mov
imul
or
jge
xlat
andl
dec
fwait
movsb
out
mov
xor
aaa
loope
stos
iret
imulb
mov
cmp
mov
lea
mull
jno
sahf
in
lods
xchg
cwtl
cmpsl
filds
imul
mov
subb
out
inc
les
aas
adc
xlat
mov
bound
pop
andl
inc
jo
ret
fs
incl
jp
aaa
ficompl
or
jno
lahf
std
fildl
pusha
push
arpl
xchg
or
iret
jp
fsubp
movsl
adc
mov
rorb
cltd
aas
or
cli
das
push
and
jecxz
push
and
insb
test
xchg
repz
sub
addr16
inc
data16
sub
notb
inc
push
pop
leave
out
lret
fcoml
pop
leave
les
and
xor
daa
push
lret
stos
icebp
jmp
andb
or
into
lcall
pop
jno
cmp
xchg
dec
push
in
mov
and
out
sub
sbb
out
adc
xchg
mov
mov
das
in
aaa
daa
das
push
push
gs
in
sbb
cs
sbb
pop
add
shrl
mov
or
xor
mov
movsl
adc
dec
fs
in
in
push
out
insb
dec
pop
std
xor
mov
aaa
inc
xor
ret
sbb
sub
add
leave
je
mov
cmp
pusha
xlat
jg
jp
inc
sub
fdivs
pop
stc
jmp
popa
or
push
pop
aas
jle
leave
lock
inc
mov
mov
xor
mov
mov
mov
pop
jbe
xor
push
adc
lea
in
aad
scas
movsl
xchg
test
mov
jl
mov
push
mov
cmp
or
fldenv
iretw
and
lods
or
xor
les
int3
inc
add
lret
fcmovne
lret
dec
lret
nop
iret
mov
andl
popf
push
xor
test
loop
and
dec
cmpsl
dec
inc
insb
mov
mov
cmpsb
push
jb
pop
ss
and
mov
or
repnz
pop
push
mov
lds
popa
dec
push
lds
cmpsb
icebp
push
je
mov
mov
push
add
imul
pxor
mov
jecxz
or
fsubl
inc
dec
adc
push
pop
adc
scas
test
pop
adc
pop
push
or
in
pop
call
mov
or
lret
jb
out
icebp
arpl
into
enter
adcl
push
pavgw
jo
cwtl
stc
ret
loope
xchg
add
push
jno
lret
lret
fldenv
pop
xchg
mov
xchg
rorb
xor
inc
jmp
lock
inc
lcall
or
push
cmp
xchg
into
adc
mov
jo
and
int3
push
pop
ja
inc
add
mov
sub
rcrl
fisttps
sbb
out
cmc
aaa
and
lret
ds
xor
daa
decb
inc
add
xor
loop
inc
xor
divl
push
enter
inc
aaa
push
out
cmpsl
inc
xchg
mov
jecxz
xor
mov
mov
xor
ss
or
daa
mov
xchg
adc
dec
or
xchg
mov
push
call
add
bound
xchg
lret
xchg
call
mov
pop
inc
pushf
in
dec
aad
inc
mov
xor
mov
mov
cltd
loope
outsl
mov
ds
mov
adc
pop
arpl
aam
adc
js
hlt
inc
jbe,pn
xor
xor
mov
jg
int
push
lock
mov
adc
js
scas
mov
pop
out
dec
pop
sub
mov
lcall
inc
adc
arpl
pop
mov
xchg
pop
js
bound
test
mov
and
scas
sbb
dec
pop
mov
ret
xorb
out
ret
push
gs
movsb
xchg
xchg
dec
dec
loopne
add
mov
cmp
dec
out
jl
idivb
aad
mov
lcall
or
sub
cmp
scas
into
js
popa
mov
mov
mov
decb
xor
xchg
bound
cmp
mov
pop
and
fnstcw
ja
fdivr
mov
mov
leave
fisttpll
icebp
iret
xor
fwait
sbb
push
shufps
xor
enter
testb
mov
push
xchg
inc
loopne
cld
or
divb
jno
sbb
hlt
sbb
pop
jle
xor
jp
sbb
dec
add
popf
icebp
leave
aaa
lods
mov
gs
sub
fidivrl
addr16
aam
mov
cltd
add
adc
inc
jle
decl
and
dec
mov
ljmp
jbe
mov
xorl
idivb
mov
scas
test
xchg
scas
mov
imul
add
daa
push
jbe
dec
sbb
popf
and
test
cmp
and
mov
fsubs
fxch
dec
or
push
mov
dec
dec
test
add
or
sti
cmpsl
mov
cmp
jge
adc
and
mov
lock
movb
inc
push
add
add
xor
jle
xor
pop
aas
push
mov
fnstcw
loop
push
xchg
xchg
sbb
jne
xchg
xlat
cmp
push
ret
aas
mov
cmp
add
add
pop
cmp
add
and
inc
xchg
mov
in
mov
xor
pop
outsl
mov
ss
clc
imul
xchg
arpl
subl
adc
xor
daa
or
xchg
fnstenv
and
pop
adc
add
or
pop
xchg
sbb
add
ficompl
adc
fnstcw
sbb
dec
ret
or
push
inc
test
cmp
mov
cmp
add
in
dec
mov
les
psubq
clc
jge
cmp
push
xchg
jbe
mov
xorb
bound
mov
sub
dec
mov
and
sahf
mov
aad
pop
xor
shlb
xchg
xor
or
sar
fs
pop
push
adc
cmc
lds
mov
push
cmp
add
repz
push
lock
and
bound
pop
push
out
sbb
jmp
mov
adc
xchg
dec
out
mov
jb
inc
sarl
adc
cmp
adc
lods
xchg
and
and
psubq
das
push
jbe
pop
and
lock
xchg
and
cmpsb
lret
out
sub
jp
inc
outsl
outsb
xor
xchg
xor
sarl
jmp
out
jne
mov
faddl
ds
mov
dec
or
repz
mov
mov
xchg
xchg
sub
arpl
aam
xor
mov
push
jnp
and
pop
fdivrl
aad
fsubs
jge
sbb
movsb
push
sbb
outsl
int
cmpsb
cmp
jle
inc
loop
lock
mov
in
fldenv
push
and
popl
and
push
flds
adcb
hlt
sbb
or
push
and
loopne
or
imul
add
fcoms
and
fistl
jb
push
xchg
xchg
dec
xor
mov
pop
xchg
jle
cmp
sub
inc
jl
add
add
sbb
xchg
mov
in
xchg
mov
mov
shlb
inc
mov
inc
js
xor
pushl
test
iret
aad
and
cmpsb
addl
sbb
jle
lods
fstps
into
std
push
push
aad
inc
add
jle
repnz
adc
dec
mov
push
pushf
dec
mov
aad
push
and
adc
je
or
imull
push
sbb
add
or
mov
scas
int
xchg
push
inc
mov
or
orl
fmuls
in
cmp
xchg
inc
dec
into
es
pop
out
sbb
aas
fcomp
out
jns
jl
mov
pop
mov
les
pop
cmp
adc
shl
test
daa
jb
sbb
mov
imull
int3
mov
ds
test
xchg
mov
loopne
pusha
out
hlt
cmpsl
jle
xchg
mov
cli
repnz
pusha
cli
mov
test
imul
rcl
pusha
and
testl
xchg
mov
sarl
in
enter
dec
pop
arpl
add
dec
ret
iret
push
scas
std
arpl
lods
pop
pop
fiaddl
js
or
or
xor
cmpsb
sub
jo
dec
mov
push
scas
xor
cmc
add
movl
call
xor
mov
lret
es
mov
adc
clc
xchg
outsl
mov
dec
sbb
and
push
and
mov
in
xchg
mov
add
or
jo
and
stos
cli
clc
fs
out
mov
jb
dec
sbb
jae
cs
and
fldenv
or
mov
lods
xor
cmp
dec
les
jecxz
adc
dec
movsb
mov
push
inc
add
movsl
popf
cmc
mov
xchg
pop
sub
pop
popa
mov
push
push
adc
or
jl
ljmp
jge
loopne
cmp
aam
into
shll
or
pop
mov
je
in
je
push
jl
out
mov
arpl
or
roll
push
cld
push
sbb
jnp
and
neg
sub
add
cmpsb
aam
lods
divb
push
leave
push
dec
data16
das
lds
push
inc
jecxz
loope
cltd
adc
mov
sbb
scas
dec
dec
mov
mov
pop
sub
mov
mov
jns
sub
sbb
push
jbe
adc
xor
mov
mov
mov
pop
jl
dec
mov
cmpsl
das
inc
outsl
test
in
pop
or
jne
lahf
cmp
out
mov
dec
mov
in
mov
data16
repz
and
cmp
out
in
sub
push
int3
jl
cmp
aaa
push
in
cmpsl
or
jbe
dec
sub
mov
push
pop
mov
xor
imul
loopne
test
daa
inc
leave
mov
mov
mov
push
test
lret
insb
popl
xchg
test
in
mov
jl
sub
push
test
in
pop
js
hlt
pop
mov
pop
cmpsb
shrb
movsb
jae
push
and
pop
mov
lahf
pop
jmp
ret
pop
xchg
mov
icebp
xor
jecxz
imul
mov
orb
push
pop
push
mov
in
and
xlat
inc
sbb
ss
xchg
mov
jo
xchg
ss
pop
xlat
sti
outsl
mov
inc
test
sub
xlat
xor
jg
xlat
ss
push
sub
pop
push
mov
jecxz
enterw
xlat
jle
lods
push
lret
xchg
test
cmp
outsb
mov
popa
lock
pop
aam
lea
sbb
lahf
cs
adc
adc
and
mov
sub
fucomi
add
sbb
call
loopne
daa
dec
jmp
cltd
sti
cmpb
pop
inc
pop
push
lcall
lock
jl
cmpsb
or
xchg
push
aaa
push
mov
adc
push
adc
jns
or
xor
sub
clc
sbb
sbb
jns
xchg
and
push
jo
pop
dec
inc
and
cmp
sub
jge
adc
out
mov
xchg
roll
sbbb
movd
jne
xchg
or
scas
jp
jmp
sti
pop
xor
pop
dec
mov
mov
aad
inc
and
or
dec
scas
out
pop
cmc
mov
icebp
dec
and
pop
shlb
mov
stos
mov
dec
in
pop
mov
add
xlat
int3
fdivs
mov
cmp
jmp
mov
xor
fcoms
ljmp
inc
imul
cmp
sub
into
push
cmp
inc
icebp
pop
add
in
jmp
ret
ss
addb
push
out
adc
adc
jle
in
mov
xchg
pop
aad
pop
mov
inc
or
inc
jne
mov
mov
sti
loope
cmpsl
push
jns
enter
test
cmpsb
xor
push
scas
int
out
ss
fcomps
notb
or
test
push
and
fisubl
arpl
andb
cmpsl
shl
inc
mov
repnz
mov
js
inc
sbb
jge
in
add
or
test
mov
lods
inc
fmulp
cli
cld
pop
les
leave
and
loope
or
inc
arpl
ljmp
push
cld
push
dec
leave
or
stos
push
add
cs
leave
dec
xlat
sub
xchg
fsubrs
popa
out
jecxz
inc
hlt
js
dec
add
idivb
dec
pop
sbb
into
es
xlat
nop
dec
ds
movsl
mov
add
out
leave
das
adc
in
bound
repnz
xlat
pop
cmpsl
xchg
dec
rorl
xor
sahf
xchg
cmp
xchg
out
mov
push
into
or
pop
push
addr16
out
cmp
cmc
ret
idivl
adc
loop
cmp
mov
pop
add
or
insl
jbe
loopne
xchg
movsb
mov
rolb
fldl
imul
stc
and
decl
mov
ljmp
ret
sbb
sub
in
sub
cmp
sbb
scas
lahf
int3
lds
mov
adc
inc
xchg
cmpsl
pop
sub
pop
inc
lods
lea
dec
cmpxchg
inc
mov
add
and
cld
imul
sbb
stos
dec
xor
jns
lock
sti
mov
std
stos
mov
xchg
movsl
xchg
sti
add
xor
mov
inc
insb
movsl
xchg
pop
inc
cmpsl
inc
push
aas
sub
pop
push
inc
mov
sub
adc
add
sbb
sti
sub
xchg
adc
lods
add
fistpl
int
jb
push
sbb
fildl
push
ds
inc
mov
std
pusha
push
cmpsl
aam
mov
insl
out
neg
pop
inc
movsl
push
push
lret
inc
fs
and
xor
jbe
sub
jbe
mov
aad
in
into
sub
idiv
js
out
sbb
mov
or
cli
cmp
out
les
fst
push
out
cwtl
pop
subb
ds
dec
stos
sbb
insb
iret
clc
arpl
ret
add
add
insb
ficomps
xor
jno
gs
fdivr
add
dec
push
outsl
cmp
or
sbb
sub
jo
rclb
sbbb
mov
jp
pop
rcl
pop
mov
fidivrs
jge
cmpsl
sahf
mov
mov
lret
sbb
add
adc
adc
loope
fsubl
mov
rcll
cmp
in
aam
mov
aad
jns
mov
jno
adc
jb
popf
push
int
sbb
shll
xchg
cs
cltd
mov
stos
ret
xchg
pop
jne
sub
dec
test
push
cmovb
adc
test
push
xchg
cld
lret
jp
loope
sub
repnz
push
arpl
leave
outsl
adc
mov
jne
popf
insl
imul
adc
sbb
push
sahf
push
outsb
add
sahf
dec
mov
mov
loop
jge
stc
cmpsl
sahf
pop
xchg
pushf
jp
inc
cmpsb
bound
fisubrl
push
jge
jge
sub
jmp
fwait
decb
pop
shll
push
pushf
ljmp
cli
lret
shlb
in
rcr
push
adc
pop
mov
xor
mov
lret
sub
push
stc
fisubl
mov
loopne
das
cmp
aam
fdivrs
mov
xchg
in
add
shlb
mov
jb
mov
cld
sub
leave
rcrl
cmpsb
in
dec
sarb
dec
cmp
add
xlat
ds
mov
sub
lret
and
shll
out
andl
call
cwtl
jl
je
cmp
js
push
lods
shlb
fs
ljmp
sbb
test
cmp
fwait
mov
ja
into
dec
pop
in
adc
and
test
add
or
cwtl
pushf
cld
scas
stc
test
sub
adc
mov
cmpsl
shlb
mov
sub
movd
dec
xchg
into
dec
or
inc
xor
aad
pushf
das
hlt
shlb
lahf
xor
iret
repnz
shrl
imul
jmp
fistl
sti
xchg
add
push
mov
enter
test
ljmp
mov
push
and
stos
out
les
mov
dec
ljmp
leave
cmp
gs
test
adc
xchg
mov
aaa
jecxz
outsl
adc
loope
stos
nop
stc
cs
adcb
mov
pop
inc
scas
clc
pushl
rol
sub
xor
or
xor
pushf
add
mov
dec
dec
fcoml
mov
cmp
pop
pop
imul
in
ret
mov
mulb
dec
test
mov
jecxz
nop
hlt
scas
push
adc
jbe
mov
data16
pop
test
sbb
aas
cmpl
out
dec
ds
xchg
std
in
mov
sahf
xor
or
jns
je
push
rcll
dec
call
sti
mov
dec
cmp
inc
addr16
outsl
push
mov
rolb
sub
fisttpll
inc
mov
sbb
lcall
mov
mov
insb
sti
push
inc
negl
jle
push
stc
push
cld
fwait
mov
jo
or
daa
and
cltd
push
js
and
pop
leave
or
in
push
mov
enter
push
and
add
or
jae
out
xor
rcr
sub
cmp
incb
lock
jmp
or
in
lret
push
cmpsb
cmp
push
mov
mov
int
filds
clc
cwtl
sub
push
out
xor
push
xchg
fsubrl
std
out
addl
aaa
inc
push
mov
icebp
in
mov
push
aaa
jbe
hlt
xchg
dec
shrb
in
out
dec
pop
nop
mov
lret
sub
adc
fnsave
jnp
xor
in
orl
pop
mov
sti
jmp
sahf
in
in
sbb
xor
mov
jecxz
leave
sarb
and
or
and
adc
mov
icebp
rclb
outsl
inc
rcrb
add
mov
icebp
in
dec
sbb
into
adc
mov
adc
loopne
daa
arpl
adc
cmp
sub
leave
lret
les
bound
dec
xchg
loope
hlt
loopne
arpl
ja
popa
jmp
xor
dec
jmp
gs
or
dec
cmc
hlt
jmp
inc
mov
cmp
pop
fistl
aad
pop
dec
insl
nop
push
xchg
js,pt
in
xchg
mov
and
adc
les
and
jmp
popf
pop
test
sub
scas
repnz
push
in
inc
mov
jo
stos
shr
jne
inc
sahf
jle
adcb
inc
aam
lea
sbb
xor
xchg
fdivp
push
mov
movsb
sub
jge
or
cwtl
sbb
sub
or
mov
fistpll
insl
mov
push
sbb
out
ror
ds
enter
ret
fcmovb
cmp
push
arpl
and
ret
xor
sbb
aam
pop
cmp
sbb
not
adc
jl
mov
add
packsswb
inc
mov
jns
js
imulb
xchg
outsb
lods
xor
aaa
rcl
jge
test
mov
dec
push
push
sbb
iret
lret
setae
mov
mov
mov
mov
adc
jmp
inc
mov
in
fwait
mov
cltd
lods
add
call
lock
adc
sarb
xchg
dec
fwait
xchg
xchg
xchg
in
loop
aaa
cmp
pop
xchg
lock
sub
sbbb
mov
jge
mov
jo
or
enter
lds
scas
mov
xchg
incl
xor
push
pop
push
out
call
add
fwait
imul
repnz
inc
call
push
fildll
leave
ja
clc
mov
xchg
and
je
sub
push
fiadds
repnz
lods
aam
pop
out
lea
fsts
lock
dec
jnp
inc
sub
or
fdivrl
xor
adc
sub
std
pushf
and
jmp
popa
push
jmp
and
lods
repz
mov
adc
ljmp
sbb
lret
loope
repz
sub
fcoml
std
flds
pushf
cmpsb
sub
call
rclb
inc
aam
add
jge
adc
jge
push
inc
xchg
ret
cmpsb
lods
dec
inc
stos
cmc
movsl
sub
push
inc
xor
push
push
or
cwtl
test
bound
ficoms
and
sbb
les
aam
repz
mov
pusha
aas
mov
popa
fisubrs
pop
test
aam
mov
bound
xor
fwait
or
sub
inc
fs
adc
sbb
mov
jnp
aam
out
mov
shrb
pop
xchg
stos
stc
sarl
ret
inc
imul
xor
and
pop
cmp
and
mov
nop
xchg
adc
aas
fadds
ret
sbb
clc
push
mov
cmpsb
cmp
cmpsl
push
pop
or
dec
sbb
dec
push
push
cld
and
shl
dec
jecxz
dec
and
xchg
xor
dec
scas
gs
mov
sbb
push
mov
mov
push
inc
cwtl
mov
xchg
pusha
fs
sbb
das
add
popa
pop
add
iret
in
in
insb
or
push
pop
jmp
pop
or
cmp
sti
xchg
in
sub
jbe
scas
call
les
xlat
mov
xchg
lahf
adc
bnd
scas
and
pop
in
testb
mov
jmp
in
shr
inc
xchg
jge
xchg
bound
dec
stos
push
repz
adc
inc
repz
mov
add
fcmovbe
aad
adc
fnsave
xchg
int3
and
je
daa
mov
ds
add
push
and
or
jb
inc
das
ja
mov
mov
jmp
out
outsl
lret
adc
gs
cmpsl
ret
cmp
aaa
cs
lret
dec
loop
cs
popf
loop
push
jecxz
pushf
or
or
sbb
repz
xor
push
das
mov
jns
or
or
into
bound
ss
adc
push
leave
sbb
stos
mov
push
fwait
mov
or
sub
ja
inc
xor
enter
test
nop
mov
xor
nop
pop
inc
fcmovnu
int3
fdivl
iret
cltd
out
mov
dec
push
mov
xchg
sbb
add
sbb
jle
sbb
inc
mov
xchg
loop
movb
adcb
or
lret
mov
ja
sub
mov
dec
or
push
negb
cmp
lcall
fcoml
not
stos
int3
mov
push
cmp
jnp
dec
cmpsl
jmp
jmp
xor
pusha
pushf
push
aaa
push
clc
enter
mov
pop
push
dec
rcl
enter
and
out
imul
je
jnp
imul
xchg
mov
fstl
adc
aad
inc
insl
dec
jmp
mov
cmp
add
pop
mov
mov
push
xlat
sub
ds
bound
add
pop
mov
mov
push
out
add
fs
mov
stos
xchg
sarl
cmp
inc
mov
xor
jno
sbb
pop
das
scas
addl
aas
sub
adc
out
mov
or
lret
cmpsb
aad
push
insl
mov
out
sbb
es
insb
push
enter
bound
pop
mov
test
loopne
pop
sub
mov
add
sub
test
inc
dec
mov
insl
insl
sbb
pusha
mov
cmovs
out
out
pushf
dec
fistpll
das
frstor
rolw
test
cmp
pop
sahf
out
xchg
and
xchg
inc
jo
stc
and
push
ficoms
mov
sub
cmc
mov
test
cmp
xchg
push
outsb
xchg
leave
jbe
les
idiv
dec
daa
lock
mov
and
jmp
sub
cmp
bound
scas
add
fidivs
mov
push
xor
mov
inc
sub
add
in
push
orb
dec
data16
dec
jae
imul
lods
std
jo
test
adc
dec
push
pop
test
sbb
stos
mov
xchg
filds
xchg
jmp
roll
fbld
push
push
out
xchg
rcr
or
aas
insl
and
movsl
jbe
imul
int
das
xchg
pusha
movsb
adc
xor
outsl
lret
fs
movsb
out
mov
or
inc
dec
leave
jno
mov
push
jo
mov
jbe
sbb
in
mov
xor
xchg
sbb
lods
sahf
mov
jmp
cmp
mov
jmp
in
pop
bound
lret
jnp
mov
in
push
mov
mov
jno
dec
test
add
inc
es
push
imul
lods
cmp
cmp
test
in
xchg
and
jl
es
cmp
inc
jns
or
xchg
sbb
js
push
iret
xchg
adc
dec
test
push
jp
mov
lods
imul
sbb
aaa
jge
scas
add
aam
xor
adc
pusha
push
cli
test
mov
lock
addr16
movsl
cltd
ja
stos
out
xchg
shll
ret
sahf
add
push
or
push
orl
lea
bound
dec
in
dec
sbb
and
mov
hlt
or
movsl
fcoms
cmp
mov
or
xchg
stc
mov
xlat
mov
or
and
gs
add
rcll
sub
ss
sti
enter
dec
mov
arpl
mov
or
pop
shrl
mov
and
mov
pop
not
adc
push
sbbl
or
ja
cmp
sbb
cmp
jle
add
lcall
arpl
stos
int
fstl
fwait
push
or
jg
mov
ja
cmp
mov
dec
loope
rcr
ljmp
pop
push
pop
xor
dec
pop
ja
addb
pop
test
jge
jno
popf
sbb
repz
das
insb
cmp
mov
in
add
out
bound
push
repnz
adc
pusha
not
push
mov
popf
or
inc
mov
cmp
jmp
add
fildl
pop
mov
std
gs
adc
mov
jnp
pop
push
pushf
push
insb
mov
or
mov
pop
push
xor
jg
ret
nop
ret
adc
push
sub
push
sub
pushf
int
ds
xchg
adc
aam
pop
jl
aaa
push
push
imul
xchg
sub
lret
lds
or
sub
pop
scas
pop
mov
mov
xchg
movsb
mov
mov
xor
call
aad
in
mov
pop
lcall
cmp
je
in
push
add
dec
in
push
mov
pop
iret
push
movsl
pop
cmp
dec
mov
lcall
mov
incb
push
nop
es
arpl
aam
popa
sub
gs
scas
inc
mov
xorb
jno
mov
jnp
or
fnsave
push
xor
or
jns
adc
xor
push
mov
fldt
jae
out
nop
or
fwait
mov
pop
push
sbb
cmp
mov
loope
and
inc
subl
push
mov
fwait
es
sbbl
push
daa
sub
ficoms
jae
fcoms
dec
xchg
xlat
dec
enter
jg
dec
mov
cwtl
ret
shrb
jge
mov
jbe
mul
lods
loopne
scas
imull
xchg
cmpsb
aam
int3
stc
movsb
mov
test
xor
sbb
mov
jl
cmp
or
or
shrl
jp
or
fwait
inc
add
lcall
lock
pusha
fcoml
les
test
scas
leave
sbb
add
xor
ror
inc
lea
stos
mov
addr16
mov
jbe
jle
push
pop
mov
scas
and
add
std
inc
cwtl
insl
lret
cld
mov
lcall
lcall
mov
and
push
pop
xlat
inc
pop
adc
push
aas
xor
push
xchg
pop
lock
out
inc
pop
out
into
fidivl
push
ss
test
ret
fistps
pop
dec
dec
jne
and
repnz
and
lods
test
mov
lret
and
test
scas
into
daa
or
mov
test
out
pop
and
dec
jmp
pop
in
dec
sbb
repnz
jns
fwait
sti
cmp
nop
xchg
loop
mov
mov
lea
jl
dec
mov
pop
add
std
sbb
jmp
mov
aaa
adc
sub
in
jp
lahf
mov
mov
in
cmp
in
inc
mov
addl
into
mov
jne
fs
xchg
es
xor
or
cmp
and
mov
and
mov
lret
xor
clc
dec
dec
in
cmp
mov
jl
mov
mov
pop
sub
xor
aad
mov
or
adc
imul
sbb
jnp
outsl
jae
pop
std
adc
push
mov
test
and
xchg
outsb
fnsave
mov
fwait
bound
sub
xlat
xor
lea
in
pop
pusha
push
jmp
jbe
mov
mov
mov
sahf
cmp
mov
call
xor
or
xchg
push
xor
adc
xchg
shlb
imul
aam
rcrl
in
iret
inc
pushf
pop
movsb
scas
shlb
xor
int
popa
lcall
js
jb
dec
hlt
test
cmc
xor
js
shrl
sarb
ret
and
cmp
insl
scas
jmp
jno
fimuls
fisttps
in
sbb
call
cwtl
sub
fidivs
ret
sub
aad
xor
xchg
push
cwtl
rolb
outsl
imul
ret
and
and
mov
inc
push
xor
pop
cwtl
sbbl
push
push
sub
pop
stos
jb
cmp
out
xlat
int3
push
and
movl
andl
mov
call
hlt
add
das
jno
sbb
push
daa
test
mov
xchg
je
mov
cmp
pop
test
clc
rep
xchg
pop
rolb
loopne
dec
mov
or
clc
sub
mov
mov
test
movsl
xchg
bnd
inc
inc
leave
adc
cli
dec
adc
ja
dec
xchg
gs
xchg
mov
inc
mov
jmp
adc
mov
mov
pop
rorl
lods
and
mov
fldt
mov
xlat
jle
fdivrl
dec
jge
and
sarb
adc
clc
inc
aaa
xchg
mov
mov
test
xor
je
mov
ljmp
mov
mov
arpl
xor
adc
cmp
xor
mov
push
cmpsb
repz
aas
push
arpl
or
cmpsb
or
xor
inc
cmp
inc
lret
mov
lret
xor
shl
add
data16
enter
or
mov
cmpsl
movsb
adc
jp
ret
inc
mov
aas
and
xlat
scas
push
jno
mov
or
or
dec
stos
movsb
cmp
mov
jl
shlb
mov
push
lcall
icebp
dec
jecxz
cmp
jp
dec
sub
xchg
lahf
icebp
lret
jae
add
fstps
add
loope
pop
add
or
sub
cltd
push
or
pushf
adc
das
sti
mov
dec
pushf
mov
cld
dec
jmp
lret
shll
fcomps
mulb
adc
loop
dec
adcl
adc
enter
inc
mov
mov
sbb
nop
ds
mov
scas
sbb
dec
mov
movsb
fs
xorl
xchg
stc
aad
dec
jbe
dec
xorb
mov
pop
hlt
das
out
pop
mov
cltd
adc
mov
jge
sbb
jp
mov
repnz
jge
mov
out
mov
and
fnstsw
shll
push
lahf
inc
pop
mov
repz
call
in
lea
push
mov
leave
nop
in
and
fsubrs
sarl
ss
xchg
sbb
gs
insb
int3
popf
xor
mov
repnz
adc
cli
sbb
jns
loope
mov
xchg
dec
sahf
xchg
push
jl
jl
repz
mov
cmpsl
and
lret
inc
divl
sbb
jnp
insb
inc
jge
or
ret
gs
inc
mov
test
push
lret
scas
mov
jno
cmp
ret
enter
mov
insl
push
inc
jnp
outsl
pop
add
dec
inc
adc
pop
frstor
cs
nop
enter
fistpl
push
stos
jmp
sti
mov
jl
hlt
and
int3
mov
add
sub
push
sub
xchg
test
fsubl
cmp
sbbb
xor
popa
test
push
inc
test
xchg
mov
test
xchg
dec
inc
xor
jmp
repnz
xcrypt-ctr
cmpsl
cltd
push
pop
dec
xor
pusha
inc
add
dec
arpl
mov
push
sbb
mov
mov
pop
jmp
mov
roll
pop
sub
pusha
fimuls
mov
pop
mov
sbb
lods
jne
lods
popa
jecxz
adc
xchg
dec
xchg
loope
les
fldl
mov
sbb
push
cmp
add
add
aas
fisttpl
jecxz
ds
shlb
sbb
jl
add
mov
mov
add
adc
jecxz
mov
sbb
movsl
lods
or
xor
ret
das
fs
or
xchg
outsb
or
jge
mov
adc
xor
mov
sbb
sbb
mov
sbb
es
mulb
insb
test
std
ret
enter
icebp
jbe
fdivr
mov
adc
push
cmpsl
push
inc
push
jmp
cmp
cmc
fadds
les
jle
pop
xor
insl
stc
in
pop
push
inc
call
xor
mov
test
mov
lret
sbb
dec
fst
xor
loopne
pop
sub
or
movsl
mov
push
arpl
or
ficompl
pop
loop
jmp
xchg
insb
push
test
es
xchg
inc
pushf
mov
adc
pop
mov
jne
dec
sub
shrl
or
imul
pop
mov
es
dec
in
add
mov
jae
loop
xor
mov
cmpsb
mov
test
lods
mov
and
or
sub
out
pop
mov
jbe
mov
cmpsl
dec
int3
je
aaa
inc
aam
testl
pop
dec
ss
push
cmp
push
imul
mov
pop
outsb
push
dec
sub
outsl
inc
add
inc
or
adc
and
adc
mov
pop
adc
sbb
ss
cmp
ficoms
mov
imul
adc
xor
xor
add
lret
arpl
imul
sub
pop
xor
lret
out
cli
sbb
push
mov
lods
mov
iret
test
shrb
xchg
repnz
cmp
out
add
cmc
ja
cwtl
insl
mov
mov
and
repz
mov
or
xor
jno
cmp
dec
sub
pop
in
sbb
in
xor
adc
stc
imul
lods
mov
sahf
sbb
dec
inc
ljmp
repnz
mov
std
leave
ss
and
mov
shll
int3
in
out
or
fwait
fs
mov
mov
ret
dec
inc
mov
icebp
aaa
cld
out
mov
xchg
xlat
popf
cs
or
xor
lea
cmp
icebp
jge
mov
or
mov
das
cmp
sbb
cmp
cmp
adc
or
mov
adc
enter
movsl
mov
or
dec
pop
mov
in
pop
scas
rcl
mov
ja
cmp
or
dec
imul
push
sub
jno
fdivrs
push
or
aad
jne
pop
push
aas
add
mov
xchg
pop
test
mov
jns
cmp
nop
mov
xlat
popf
push
negl
pop
add
pop
pop
stc
or
shr
out
in
mov
mov
mov
push
xchg
xchg
add
cmp
sbb
into
push
pop
lea
sub
add
lea
inc
imul
sbb
loopne
jns
jg
mov
dec
add
fs
jl
jle
jae
fs
aam
or
xor
cli
xlat
adc
div
les
les
mov
cmp
mov
xor
xchg
sarb
jo
xlat
in
repnz
orb
dec
fldl
sub
ja
mov
cmp
jno
ret
leave
xchg
adc
and
inc
outsb
es
jns
pop
aaa
mov
jle
add
or
hlt
push
mov
ret
outsb
jecxz
ret
lcall
leave
and
push
cld
addr16
in
faddl
cmp
lock
jp
xchg
and
addr16
xchg
movsl
je
xor
inc
outsb
mov
popa
sahf
int
in
or
sbb
sub
push
pop
mov
lahf
mov
mov
mov
cmp
popf
ss
pop
xchg
xchg
inc
clc
sub
xchg
out
push
push
sub
cmpsb
mov
inc
pop
lret
cmpsl
xor
adc
sti
and
jno
cmp
adc
dec
push
rcrb
inc
dec
sub
cmp
fwait
inc
shll
in
sub
stos
fstpl
or
jo
sbb
mov
push
or
outsl
jno
or
cwtl
out
rcl
scas
in
fisubrl
rcrl
inc
pop
enter
xchg
add
ds
in
int3
in
xchg
and
jmp
push
or
pop
mov
mov
cwtl
lahf
inc
mov
ds
adc
and
in
lcall
mov
repz
sub
inc
inc
outsb
and
lods
pop
xchg
sub
lret
cmp
lahf
cmc
jl
std
xchg
jno
jo
testl
dec
adc
mov
out
mov
pusha
adc
mov
mov
sub
and
popaw
sbb
inc
in
movsb
xchg
or
ljmp
sbb
dec
or
lret
sbb
jbe
sbb
je
jno
and
sbb
pop
push
leave
jle
adc
cli
test
lcall
mov
sub
cli
pop
cld
sbb
lds
xlat
mov
jnp
pop
sub
pop
leave
cmp
cmp
ss
inc
dec
mov
ds
inc
xor
ret
hlt
add
cltd
mov
sub
dec
push
sahf
push
and
imul
lahf
adc
roll
or
cli
loope
xchg
sub
and
adc
lcall
mov
test
xor
popa
lret
aas
test
xchg
pop
test
loop
pop
adc
inc
out
gs
fwait
outsl
sub
jo
call
jge
lods
push
mov
movsl
fstpl
push
push
xchg
loop
or
dec
jns
lahf
sbb
xchg
stos
pop
addr16
bswap
ret
inc
adc
stc
jp
sub
add
dec
cmp
dec
fldcw
sub
stos
movsb
ret
data16
inc
and
in
mov
xorb
xchg
rcrb
cli
aaa
incb
int3
sbb
aad
push
insb
cmpsb
dec
dec
adc
sbbl
mov
sub
bound
mov
sub
xlat
fidivs
mov
stos
jns
nop
push
pop
jns
repz
pop
sbb
jnp
into
adc
int
inc
cmp
cmp
jbe
out
cmp
fildll
loopne
iret
inc
pop
cld
mov
dec
clc
sbb
jb
lods
pop
call
fdivs
ret
sub
mov
outsl
insl
cli
dec
jo
mov
and
inc
imul
add
jecxz
shlb
adc
ret
xor
or
movsl
adc
xchg
lods
subb
mov
pop
inc
xor
inc
cmc
out
inc
pop
sub
mov
xor
xchg
ficoms
adc
pop
push
mov
sub
pop
mov
fdivrl
pop
mov
push
stos
repz
mov
enter
cltd
add
mov
inc
out
cmp
testb
fwait
pushf
imul
in
sarb
mov
pop
ret
sahf
xchg
test
dec
mov
mov
jecxz
xor
jns
xchg
pop
test
xor
rol
add
fnstenv
push
call
rolb
add
push
ljmp
jp
es
pop
aas
or
or
cmp
add
inc
xchg
or
cmp
lock
dec
xchg
jae
in
ss
lock
mov
shll
cmp
loopne
xchg
call
cld
repnz
jne
push
jbe
push
in
rolb
pop
stos
lret
push
negl
pop
mov
jb
or
in
sbb
aas
sub
jl
cmp
sub
in
mov
mov
fwait
mov
jmp
popf
or
in
cmc
jnp
popf
xchg
push
push
inc
decl
jp
ret
pop
hlt
xor
dec
imul
jl
les
scas
or
hlt
notb
xchg
sbb
xor
popl
sbb
je
cmp
push
pop
pop
jae
insb
pop
pop
jge
movsb
jp
test
xor
or
out
jne
mov
push
je
push
cmp
add
in
pop
xor
dec
ret
sbb
sub
mov
or
test
and
push
mov
xor
dec
shlb
int
add
dec
sub
mov
dec
push
cmpl
mov
sti
xchg
xor
lea
es
pop
out
mov
adc
pop
xor
arpl
xor
sbb
inc
inc
push
push
movsb
mov
ret
cmc
arpl
popa
sbb
jge
push
dec
pop
inc
mov
addl
mov
test
iret
sub
movsb
add
inc
cli
call
or
shrl
pop
push
stos
sti
and
push
mov
rorb
dec
test
fcoms
sbb
and
lahf
xor
mov
aaa
sbb
dec
dec
sbb
pop
mov
cmp
mov
icebp
xor
idivb
push
dec
ret
mov
jns
mov
cmpl
inc
sub
pop
cs
iret
dec
in
movsb
or
insl
pop
imul
sub
jg
je
push
or
push
mov
pop
sar
dec
es
std
dec
loop
xlat
aas
cld
mov
mov
xchg
fsubp
pushf
jecxz
pop
icebp
stc
mov
inc
mov
pop
push
xchg
cwtl
jno
xchg
mov
sbb
mov
pop
or
les
push
mov
aas
mov
movsl
xchg
and
loope
pop
adc
pop
pop
mov
je
cmp
movsb
cmp
in
test
jbe
jge
dec
xchg
sti
sbb
sub
pusha
fistl
cli
mov
jno
mov
push
adc
dec
mov
push
pusha
popa
loop
sub
push
std
cltd
jp
xchg
push
and
or
out
inc
jp
lds
pop
lahf
pop
jmp
leave
js
pop
mov
mov
sahf
inc
adc
das
clc
add
in
mov
push
ficoms
jae
aaa
push
ljmp
cmp
cmpl
push
in
xchg
dec
mov
push
pop
lea
idiv
sbb
aad
jmp
test
lcall
jne
jp
cltd
cmc
and
pop
lds
das
clc
inc
push
cmpsb
subb
sbb
push
jp
and
movsl
adc
sub
pushf
clc
cwtl
sub
dec
mov
and
scas
es
dec
mov
xor
pop
gs
jecxz
dec
mov
enter
sub
sub
inc
dec
aam
fsubl
mov
mov
or
mov
out
push
iret
mov
lcall
push
lds
mov
imul
mov
mov
arpl
xor
into
outsb
divl
into
mov
mov
push
sahf
ds
cmp
push
add
mov
cmp
dec
aad
icebp
mov
dec
or
ficomps
jg
in
insb
int
mov
pop
in
sbb
xchg
cs
inc
lcall
adc
sbb
mov
xor
mov
cmpsb
fsubrs
add
jecxz
mov
lea
aad
insb
jmp
shrb
ljmp
inc
insb
fists
cmp
pop
enter
orb
ret
jg
aaa
sub
mov
int
pop
jns
mov
ljmp
jns
es
jb
add
cmp
sbb
push
push
xchg
xchg
fisttpll
mov
xchg
loop
popf
sbb
pop
lods
lds
les
cli
shll
jmp
repz
jno
inc
xchg
loopne
call
sub
es
fildll
push
sub
jno
mov
add
mov
inc
clc
addr16
into
pop
and
mov
xor
push
pop
inc
jge
xor
pushf
cwtl
dec
repz
mov
fisubrs
in
inc
jbe
test
inc
imul
ret
mov
inc
enter
add
js
ds
push
push
xor
stc
add
lret
mov
js
and
cld
and
mov
and
fsincos
ficoms
mov
xor
or
inc
lock
insb
jp
popf
xchg
inc
enter
test
dec
cmovne
push
in
insl
int3
dec
or
test
pop
fdivl
jmp
jmp
js
mov
dec
loope
lret
lods
ja
xor
sub
and
imul
mov
pop
stos
jg
mov
icebp
int
push
cltd
rcll
mov
bound
call
outsb
pop
xor
and
aas
adc
jbe
movsl
dec
or
test
lcall
nop
dec
mov
int3
push
call
outsb
xor
push
xchg
mov
sub
ret
loope
xor
sbb
adc
daa
je
daa
or
cmp
mov
mov
and
ss
stos
mov
cmp
test
add
test
jnp
pusha
push
jne
xor
int
test
das
sahf
enter
daa
adc
sub
pop
xchg
push
cs
ljmp
sbb
movsl
cwtl
lcall
lods
mov
xor
inc
incl
cmc
adc
xchg
sub
std
xor
mov
negb
daa
je
ficomps
aam
sub
inc
out
jp
or
lret
adc
pop
out
and
dec
xlat
repz
mov
insb
fmull
mov
and
lret
insl
and
loope
es
or
sbb
cmp
test
mov
and
add
cmpsb
in
sbb
sbb
lret
fwait
adc
pushf
lock
sti
jp
or
aam
stos
xchg
jnp
xchg
add
dec
mov
push
or
sub
mov
hlt
fildll
outsb
out
jo
mov
pop
xorb
arpl
aaa
ss
call
and
mov
and
xchg
bound
aas
js
je
push
mov
sub
sahf
ss
push
and
outsb
stc
jbe
jle
test
hlt
popl
test
loope
push
cs
mov
push
outsb
icebp
jmp
negb
mov
adc
daa
xchg
jge
lahf
imul
fcomip
jns
inc
mull
orb
add
xor
xchg
or
jecxz
jbe
jmp
and
jmp
int
jb
rcr
xor
js
int3
mov
subl
dec
out
fstpl
ret
shlb
or
push
jmp
mov
adc
gs
dec
shl
mov
cmpsl
dec
flds
dec
mov
inc
or
mov
xor
rcl
dec
pop
addb
push
and
add
cltd
push
add
iret
rolb
jl
lea
repnz
popa
mov
sti
fistps
fwait
mov
xlat
rcll
or
sbb
mov
add
jbe
mov
sbbb
adcb
add
xor
add
cmp
push
lock
sbb
ret
jns
xchg
and
loope
pop
jp
and
cmp
dec
jb
movl
daa
mov
sub
mov
lds
lea
imul
stc
cmc
adc
addr16
aam
das
sub
in
lea
sub
jl
mov
imul
hlt
adc
ds
dec
xlat
pushf
adcl
scas
push
mov
in
jo
inc
pop
jmp
mov
bound
popf
or
test
rcll
mov
mov
jmp
cwtl
dec
push
cwtl
lea
jno
pop
rcrl
aas
addl
sbb
sub
jecxz
in
pop
movsl
push
stos
cmpsb
push
lods
movsl
mov
dec
aaa
xorb
add
popa
sub
jns
addr16
aaa
jle
cs
or
rol
pop
out
test
aam
mov
clc
arpl
mov
xorb
push
pop
mov
push
pop
and
and
rcrb
into
inc
shl
and
out
add
movswl
notb
frstor
jne
jecxz
push
adc
lds
sbb
fnstcw
les
jns
jl
sub
insl
out
push
mov
sarb
mov
mov
sub
push
in
add
dec
mov
stc
stos
pop
out
xor
xchg
lods
or
xor
cmpsl
in
mov
je
jb
fstpt
mov
sub
and
xor
movsb
je
mov
lret
mov
es
test
cltd
loop
mov
mov
dec
shrl
out
pop
pushf
sub
xchg
mov
decl
ss
fs
cli
mov
cld
inc
dec
mov
mov
insb
lret
mov
push
ja
mov
repnz
lahf
movsb
lock
aam
jg
xor
aam
push
testb
pushw
std
mov
mov
lea
shrb
rolb
mov
mov
movsb
popf
inc
aam
mov
xor
adc
loop
lds
je
add
add
push
sub
jb
sahf
shrb
jmp
adc
es
mov
xchg
sarl
cmp
xchg
rorb
xor
cmp
out
adcb
cmpsl
pushf
sbb
out
sbb
rorl
mov
popa
mov
mov
movsl
lds
add
fldl2t
or
adc
adc
je
lcall
mov
je
mov
push
sbb
in
xorb
enter
cmp
loop
mov
shrl
lea
pop
js
outsl
hlt
and
add
dec
popa
movsl
lret
jo
mov
bound
add
in
inc
ffree
push
mov
repz
xor
xchg
cli
pop
or
cli
inc
repnz
gs
sbb
imul
adc
inc
xchg
pop
popf
jno
pop
mov
leave
or
imul
and
dec
scas
les
add
shlb
rorl
sbb
and
sub
cmp
and
pop
push
mov
push
test
out
jmp
subl
push
mov
jmp
push
adc
cmp
or
mov
cltd
test
repz
add
pop
nop
stos
repz
fs
ret
push
inc
sub
push
xor
and
jo
xor
sbb
je
jns
push
pop
mov
decb
mov
rcr
mov
pop
int
cli
jno
sub
pop
je
xchg
adc
adc
inc
mov
push
test
sbb
xchg
std
mov
out
pushl
xchg
lret
sbb
jae
mov
sub
push
jg
insb
and
and
fildll
mov
sbb
gs
sbb
test
mov
rcrb
jnp
test
pop
dec
or
push
xchg
mov
imul
mov
jb
and
cli
mov
mov
xlat
jbe
mov
stos
sub
das
leave
in
xchg
lret
push
movsl
rcr
mov
adc
loop
xor
lcall
sub
int
outsb
inc
outsl
pop
sub
je
dec
and
fsubrl
jae
push
push
jb
stos
ljmp
pop
push
in
aam
jno
iret
cwtl
cmpsl
jle
pop
add
test
add
mov
arpl
pmaxub
lahf
orb
out
jmp
scas
jge
dec
cmp
or
movsb
hlt
push
jge
sbb
lods
lods
sbb
push
loope
add
jecxz
in
inc
cmp
xor
dec
cmpsl
daa
imul
hlt
enter
xor
add
dec
mov
mov
repnz
hlt
and
aad
xchg
wrmsr
inc
aaa
das
inc
mov
iret
pop
in
fstps
jnp
rolb
scas
pop
pop
das
mov
mov
call
sub
inc
lock
enter
push
jg
pusha
add
aam
sbb
inc
push
rcrb
hlt
jo
mov
xor
insb
inc
sbb
test
jge
in
mov
cmp
in
jle
adc
sbb
push
lret
aas
ficoml
mov
dec
xchg
jnp
or
lret
sub
adc
pop
jp
in
jo
dec
inc
js
inc
sahf
data16
cltd
rolb
xchg
push
outsb
in
cmpsb
aas
aaa
jns
pop
das
bound
xor
mov
data16
lcall
subl
add
jbe
insl
xchg
fsub
cmp
lods
mov
mov
ja
in
loope
loop
mov
cli
inc
rol
pop
xlat
loop
push
pop
or
or
pop
stos
add
cmc
pop
xchg
lahf
xor
mull
daa
loopnew
scas
jge
rol
lds
ja
into
es
dec
rolb
lods
repz
mov
in
jp
cmp
mov
loope
mov
repz
xchg
aaa
ss
into
push
test
repz
jge
nop
in
fwait
add
rolb
dec
lea
jl
mov
pop
and
push
stos
ljmp
add
out
aam
cwtl
xchg
xchg
sub
icebp
or
imul
and
and
jp
jno
pop
mov
in
sahf
shll
jb
inc
ret
repz
dec
das
movsb
push
mov
and
pop
or
xchg
pusha
adc
xchg
in
ret
adc
lds
jecxz
loop
mov
adc
adc
pop
sub
sub
pop
mov
pop
push
inc
fmuls
scas
mov
mov
call
mov
pusha
adc
xchg
xchg
adc
inc
push
jb
cmc
andb
loope
jns
xchg
push
bound
lods
inc
mov
add
jle
imul
rolb
hlt
fisubl
mov
push
int
arpl
test
pop
sbb
mov
jle
push
ljmp
adc
ficomps
shrb
dec
jle
rcl
add
mov
jecxz
sbb
push
sbb
push
jmp
add
les
pop
dec
std
fdivr
jb
sub
bound
sbb
cmpsb
add
xchg
mov
pusha
mov
adc
loope
mov
xor
pop
cmpsb
dec
fst
jmp
xchg
xchg
insb
cmp
lcall
loope
mov
loope
imul
cmpsl
shufps
cmp
xor
test
movsb
gs
cmp
mov
sub
sub
cld
xor
mov
jl
xchg
add
mov
nop
repz
pop
add
or
sahf
inc
sbb
shr
sub
fidivrs
dec
xor
cmp
pop
sub
clc
push
sarl
enter
vmread
loope
jne
dec
pushf
adc
mov
pop
push
adc
aam
mov
gs
xor
popf
jp
inc
mov
sbb
or
shr
xor
cli
inc
into
imul
out
iret
out
push
stos
mov
pop
std
pop
and
ficompl
cmp
and
icebp
dec
js
lock
cwtl
ljmp
cmpsb
cmp
sti
pushf
xchg
jp
push
leave
jg
fnsave
out
inc
mov
inc
loopne
sbb
clc
sti
mov
stos
inc
addr16
cmp
xor
in
dec
hlt
les
lock
sbb
cmp
rolb
cmp
xchg
inc
data16
aad
cmp
aad
out
iret
pop
or
and
cmp
inc
int3
fists
mov
ss
nopl
or
icebp
or
jl
dec
les
test
xchg
imul
addr16
imul
dec
and
xor
pop
pop
fcmove
jp
push
bnd
fldt
pop
mov
sbb
dec
push
dec
int3
loop
xchg
push
or
loopne
xchg
push
dec
pushf
das
cltd
ret
adc
adc
js
shl
mov
cmp
jns
sbb
lods
adcb
pop
fdivrl
loop
sub
cmp
loop
roll
adc
sbb
add
movl
movsb
pop
stc
jmp
mov
loop
pop
adc
nop
cmp
dec
xor
test
jo
fdiv
jl
lods
out
stos
leave
mov
fwait
pusha
stc
xchg
cmp
mov
lret
jmp
daa
jge
inc
dec
sub
cltd
dec
mov
mov
and
sub
mov
mov
rorl
out
inc
xchg
dec
mov
xchg
pop
push
add
mov
in
add
lcall
cmp
lret
jp
shl
add
mov
jbe
test
fldcw
xchg
or
pop
mov
iret
mov
add
lods
notb
mov
mov
cmc
adc
hlt
sbb
mov
jle
in
cld
and
pushf
push
jge
fsubr
jbe
jge
mov
add
mov
add
inc
pop
out
pop
loop
sub
adc
mov
sub
xor
ds
xchg
cmp
div
insl
movsb
jne
out
daa
mov
les
jp
lods
int
ja
shrb
sti
jl
xor
insb
stos
inc
adcb
push
aam
jnp
mov
cmp
scas
mov
push
repz
jns
push
pop
mov
mov
inc
add
lods
mov
mov
add
int3
jmp
testb
or
inc
adc
add
call
nop
xor
mov
sbb
cmp
mov
int
cmp
leave
roll
mov
test
or
enter
aam
add
sub
cmp
add
cli
insb
cmp
iret
jl
inc
sub
push
in
movsb
adc
scas
cwtl
arpl
fdivrl
add
pop
xor
add
popf
and
dec
in
adc
jle
xorb
jo
mov
mov
cmp
incb
or
incb
ret
xchg
lcall
and
dec
shl
rcrl
loope
rolb
xchg
shll
xchg
int3
jbe
hlt
int
negl
pop
loope
push
jle
std
mov
out
pop
out
jecxz
jmp
test
test
push
sub
xchg
in
repnz
outsl
mov
xor
jb
and
mov
lcall
add
jmp
int
mov
jbe
mov
and
test
aas
out
inc
inc
mov
pop
ss
pop
add
int3
test
sub
xlat
add
pcmpgtb
inc
lods
and
imul
inc
int3
sbb
mov
sbb
push
inc
or
movsl
mov
test
rcr
lea
imul
inc
fildll
lret
pop
lods
sub
sahf
sbb
push
fistpll
mov
add
cltd
jl
sbbl
mov
fisttps
jns
test
lret
mov
pop
jg
adc
sarb
loopne
and
ljmp
or
xchg
lods
mov
inc
adc
push
inc
mov
clc
xlat
xchg
mov
hlt
movsb
loop
scas
aam
leave
sar
mov
pusha
notb
std
dec
pop
stc
lret
lahf
push
inc
xchg
push
cmpl
ss
add
cmp
xor
pushf
cmp
lahf
outsl
pop
repnz
mov
jns
mov
fisubrs
pop
test
mov
dec
cmpl
xor
sub
xor
mov
int3
sub
lcall
or
dec
inc
adc
jecxz
shlb
xor
repnz
pop
xchg
mov
popa
jae
pop
pusha
test
or
push
push
jl
dec
ljmp
push
jecxz
out
xor
loopne
imul
push
push
pop
pusha
or
push
scas
dec
jg
sahf
imul
scas
mov
mov
rcr
scas
lock
out
test
inc
jno
sub
jp
add
out
cwtl
ret
sub
sbb
push
jp
call
nop
adc
sbb
xchg
cwtl
mov
push
lea
mov
pop
xchg
mov
cwtl
inc
js
cmp
push
xchg
addb
test
xchg
loop
xlat
mov
int3
cwtl
jb
scas
push
lods
scas
inc
inc
sbb
incl
jae
xchg
jl
xchg
dec
pop
add
mov
repz
fidivl
test
clc
in
jb
fsubl
divb
mul
add
fs
test
xchg
ret
je
cmp
daa
cwtl
cwtl
push
outsl
nop
test
dec
andl
jmp
in
pop
popf
push
fadd
arpl
jl
gs
cmp
outsl
rclb
xchg
neg
or
inc
add
push
or
jae
pop
out
movsb
inc
xor
jecxz
divl
jle
jp
addl
add
dec
ja
in
popa
cltd
pop
inc
inc
sbb
popl
jle
cmp
inc
sbb
mov
daa
inc
ret
pop
test
out
decb
inc
mov
js
mov
add
dec
pop
sub
push
adc
push
nop
xchg
mov
add
je
ret
loopne
lods
notl
lods
fcos
icebp
sub
cmc
gs
aam
mov
ljmp
fadds
pop
mov
lods
and
sbb
sar
daa
andl
cmc
lds
xchg
or
outsl
fistpl
insl
shl
sbb
inc
mov
add
lret
adc
push
andb
icebp
lret
inc
test
adc
outsb
int
cmpsb
mov
rcrl
or
jp
lcall
sarb
mov
rcll
decb
sbb
stos
pusha
sbb
mov
mov
push
lcall
les
sub
jmp
inc
test
loop
push
add
bound
and
aaa
lods
jo
mov
scas
jg
fldenv
cld
mov
aas
push
std
in
xor
xor
cmp
cmc
sbb
or
insb
int3
daa
or
mov
xchg
lahf
aas
pop
dec
xchg
adc
xor
data16
push
or
rolb
sbb
dec
pop
in
popa
movsl
jbe
out
xor
mov
fldt
push
jmp
jno
into
enter
enter
ljmp
mov
mov
or
dec
cmp
lcall
cli
loope
dec
mov
mov
xor
stos
jge
pop
loopne
push
popa
addr16
mov
inc
imul
mov
repnz
js
mov
mov
jecxz
test
jle
pop
jns
cmp
mov
imul
lret
inc
xchg
pop
sub
cmp
mov
aas
sbb
and
push
addr16
and
xor
pop
adc
rorb
add
inc
jns
lret
xchg
mov
pop
lock
adc
in
inc
stc
icebp
mov
adc
dec
dec
pop
aam
mov
inc
pop
std
xor
push
ret
popf
test
add
jp
imul
or
jb
mov
or
mov
out
mov
or
in
sahf
loope,pt
outsl
cmp
int3
sub
mov
outsb
fsubrl
jecxz
pop
pop
add
add
pop
test
push
or
add
into
lock
movb
mov
inc
cmpsl
push
pop
repz
subl
sbb
dec
push
insb
mov
mov
mov
pop
sub
fdecstp
inc
push
leave
sub
xchg
push
lods
shl
arpl
jle
sbb
mov
pop
aam
in
and
xchg
inc
sub
test
dec
roll
add
pop
sbb
pop
push
sbb
xchg
adc
ljmp
xchg
adc
cmp
sbb
sub
cmp
test
ret
out
cmc
ss
das
cmp
or
mov
inc
std
aaa
cwtl
sbb
popf
lods
sbb
stc
incl
imul
fisubl
lods
adcl
nop
mov
or
xchg
adc
in
sub
pop
dec
je
orb
cs
je
movsb
xchg
mov
cltd
xchg
push
cmp
jnp
dec
pop
lret
mov
incb
xchg
sbb
flds
std
rorb
sarl
insl
loop
ret
pop
out
dec
addl
and
inc
mov
lahf
cltd
sbb
jmp
add
or
addr16
push
iret
sub
jmp
dec
lds
std
lods
movsl
add
das
cld
test
filds
sbb
loopne
in
or
and
or
lods
pop
push
jecxz
pop
cmp
push
pop
cmp
push
js
xor
or
push
xchg
dec
cmp
pop
aam
cmc
mov
test
push
mov
mov
cltd
or
dec
jg
fistl
inc
dec
stos
icebp
cld
lods
xchg
data16
mov
cmp
xchg
ficompl
or
mov
cmp
inc
cmpsl
push
jge
out
lret
ds
out
ja
insb
jae
jns
xor
gs
js
push
xchg
loope
call
sarb
push
mov
fildll
sbb
pop
add
sti
lods
xchg
mov
mov
stos
in
fisubrs
lods
push
repz
push
sub
xchg
jge
push
lret
jns
add
loopne
xor
cld
push
cmc
xchg
cmp
insl
loope
push
rclb
daa
test
mov
bound
xchg
jo
mov
fisttps
dec
xor
leave
push
inc
fidivrs
adc
cmp
ljmp
inc
lea
shlb
mov
je
divl
daa
dec
loop
adc
mov
mov
mov
jne
mov
and
subl
outsb
daa
lret
sbb
js
inc
and
test
subb
in
xor
or
movsb
mov
sbb
mov
mov
loop
std
cmp
and
pop
dec
das
pop
push
or
test
adc
ret
sahf
add
inc
sub
insb
ljmp
testb
shlb
cmpsl
sub
clc
sbb
xchg
out
data16
cltd
loop
jl
add
clc
pop
pop
cmpsb
pop
shrl
mov
rcrb
dec
xchg
sbb
and
fwait
mov
cltd
das
out
jmp
jecxz
sub
hlt
pusha
sbb
mov
lahf
jge
ds
cmp
inc
xchg
test
mov
out
ja
add
faddl
push
call
push
fildll
or
push
xchg
clc
in
call
loopne
movsl
and
incb
pop
push
sbb
jno
xor
fcompl
mov
inc
mov
jae
pop
dec
or
andl
das
mov
add
cmc
les
adc
xchg
push
pop
arpl
sub
pop
sbb
fcoml
mov
adc
mov
mov
sbb
sub
adc
test
pop
and
mov
out
ret
cmp
enter
mov
subb
lds
xchg
push
adc
aaa
xchg
cmp
int3
adc
xchg
xor
call
das
xchg
jl
mov
jne
xchg
cmp
movsb
stos
jmp
sbb
jmp
add
pop
test
push
xchg
mov
sub
jle
cld
cmp
mov
jge
orb
xor
or
xor
inc
or
jl
or
pop
repz
imul
scas
out
pop
iret
mov
xchg
mov
scas
inc
xchg
cmp
mov
and
movsl
fdivrl
pop
push
enter
ds
adc
sahf
sub
rcpps
adc
mov
push
and
mov
aas
inc
test
push
jne
test
or
push
das
stc
in
loopne
cwtl
out
push
cwtl
pop
jno
pop
lcall
lea
inc
and
pop
lret
das
adc
stos
roll
xor
lret
inc
scas
or
mov
xchg
mov
cwtl
mov
jns
ja
mov
cmpsl
dec
push
loop
aam
out
mov
dec
pop
inc
or
jno
dec
pop
loop
ljmp
cmp
or
inc
fidivs
push
lods
fsubr
ret
lock
sub
jg
addr16
repz
loope
jo
dec
add
mov
lret
shrl
add
hlt
push
lea
cmp
jmp
push
inc
or
push
xchg
jge
and
mov
fnstcw
and
xchg
popf
cmc
fldcw
lods
fmulp
jbe
push
pushaw
call
stos
gs
cs
xchg
jbe
dec
jb
pop
cs
lds
rcll
mov
adc
sbb
inc
sti
sub
xchg
adc
mov
aad
push
jge
push
minps
push
clc
stos
movsb
aad
sbbl
mov
repnz
insb
dec
add
pop
fisubs
dec
pop
dec
sub
mov
movsb
cmp
in
xchg
xchg
xor
xchg
or
cmp
out
or
mov
push
mov
inc
fmuls
and
cli
repnz
out
cmp
int
mov
sbb
cmp
cs
xor
sbb
dec
movsb
push
mov
in
jb
mov
sub
or
sbb
fs
adc
bound
sub
repnz
roll
xchg
cs
in
cmp
outsl
into
bndldx
cmp
dec
adc
out
inc
mov
iret
test
outsb
lds
cmp
pop
adc
inc
jecxz
cmp
adc
sbb
cs
mov
sahf
sub
pop
push
out
add
fninit
inc
mov
adc
imul
aam
test
inc
in
ds
divl
push
rorl
push
push
push
and
jp
or
xor
nop
out
jge
inc
push
cmp
pop
orb
sahf
sub
pminub
mov
xor
fs
cmp
aam
xchg
lds
push
or
sbb
mov
and
inc
psubq
mov
xchg
clc
mov
cmpsl
dec
and
lods
add
scas
subb
cmp
in
add
or
add
aam
pop
and
daa
call
inc
pop
mov
out
xor
jle
sbb
rolb
lahf
dec
icebp
fdivrp
push
cs
pop
out
cmp
fildl
add
movsb
xchg
icebp
add
aam
scas
es
dec
inc
ja
pushf
add
pop
daa
mov
push
push
pop
fldenv
ja
inc
mov
cmp
sbb
mov
cmc
xchg
scas
jle
adc
dec
enter
mov
and
js
leave
repnz
push
pop
mov
pop
mov
push
pop
mov
mov
jne
insb
aas
pop
out
sub
cmp
mov
mov
mov
sub
cltd
mov
out
mov
dec
pop
ja
movsl
add
xor
push
push
dec
and
dec
mov
xor
std
mov
inc
pop
mov
add
cmp
mov
mov
and
std
stos
jl
pop
sbb
andb
sbb
xor
aad
xchg
sbb
inc
add
sub
ljmp
xor
into
xlat
int3
adc
pop
xchg
or
dec
cltd
sub
inc
outsl
jnp
repz
dec
subb
dec
and
fisubrl
or
int
sub
lods
and
jmp
adc
ret
leave
outsl
add
arpl
and
ja
mov
aaa
and
adc
mov
in
sbb
sbb
mov
push
fstps
sbb
into
xor
mov
adc
add
mov
sti
stc
clc
mov
or
fcomps
leavew
push
out
xchg
icebp
inc
ret
nop
test
dec
aam
and
xor
add
cmp
add
sbb
aas
mov
daa
std
push
out
sahf
gs
and
sbb
dec
cmp
mov
xchg
mov
mov
inc
arpl
andl
dec
mov
pop
das
jmp
push
mov
mov
jge
popa
jb
ss
cs
push
and
pop
add
mov
jl
loope
push
cmp
repnz
push
iret
mov
add
incl
jno
jo
sub
cmp
and
mov
outsb
addl
fsubrp
mov
shld
sbb
sub
jns
push
mov
les
stos
and
sub
mov
loope
cmp
jae
fnsave
outsb
push
rorl
lods
aad
jecxz
notl
repnz
leave
scas
cmpsl
cld
ds
std
call
rol
cmc
inc
mov
xor
push
inc
leave
es
sub
or
cmp
dec
jb
fbld
jg
ds
outsb
repz
dec
mov
daa
or
popl
loope
int
push
add
imul
loope
lret
cmpsb
aas
rcrb
cmpsl
mov
lock
push
insb
cmpsb
pop
cmp
dec
mov
jnp
push
test
hlt
dec
clc
fistpl
negl
mov
mov
mov
fwait
addb
loop
pusha
je
sbb
pop
and
push
aaa
scas
mov
add
pop
or
scas
movsl
notb
jno
jge
ret
or
push
mov
sub
dec
lret
jmp
and
push
roll
mov
and
mov
inc
sbb
pop
enter
hlt
mov
insl
leave
sub
inc
popa
and
mov
push
stos
insb
hlt
jns
jae
sbb
adcb
loop
add
popa
pop
jno
mov
jb
push
loop
mov
inc
scas
lahf
and
xchg
cs
mov
pop
pop
ss
add
cmc
sbb
cmc
jl
mov
add
mov
pop
rcrb
xor
jecxz
scas
mov
ret
push
aaa
dec
ficoms
jg
jo
enter
fldcw
nop
scas
in
mov
ret
inc
repz
cmp
push
xor
and
in
mov
mov
sbb
cltd
sub
cmc
lods
xchg
aas
or
push
sub
jle
inc
cli
int
jp
int
xchg
popa
stc
pop
lcall
pop
cmp
aaa
xor
in
mov
and
or
mov
std
jne
xor
mov
xchg
xchg
fnsave
insb
mov
js
lods
fwait
test
movsl
jne
and
aaa
rcrb
das
js
or
adc
lods
scas
ja
add
xchg
incb
jmp
rcrb
xor
imul
int
fsubrl
mov
add
mov
jle
push
inc
push
sub
push
lods
mov
stos
ficomps
xchg
mov
xchg
jne
mov
sub
or
call
loopw
or
push
pop
gs
ss
cmp
mov
adc
pop
mov
stos
adc
loopne
xchg
mov
jne
and
push
movsb
roll
xchg
push
and
lcall
mov
mov
sub
pop
mov
xchg
push
and
imul
leave
dec
out
repz
xchg
andb
and
addr16
rorl
int3
dec
sub
stos
mov
and
in
push
xchg
ret
inc
inc
lods
clc
push
add
cli
dec
out
aad
sahf
jae
roll
xorps
cmc
in
dec
in
test
cmp
ja
fdivr
and
inc
arpl
inc
out
jo
psubsb
repz
mov
rcr
lahf
bound
push
dec
es
sbb
in
sub
lcall
sti
psrlq
jmp
add
cmp
jns
jnp
push
pop
loopne
push
jnp
ret
push
mov
mov
jecxz
adc
roll
mov
adc
aas
dec
mov
xchg
push
dec
pop
sbb
ds
shrl
inc
enter
xor
jno
jno
std
int
mov
xchg
sub
adc
and
mov
outsl
nop
mov
inc
or
add
xlat
push
stc
fadd
lret
mov
scas
insb
insl
sbb
loope
das
xchg
mov
push
push
adc
push
in
rcll
mov
std
jbe
mov
dec
jp
mov
inc
iret
xchg
fwait
outsl
jne
lret
sub
or
testb
stc
lahf
dec
sub
push
add
leave
fs
adc
dec
sub
leave
arpl
cmp
test
test
frstor
mov
cld
jb
push
push
and
mov
sub
cli
mov
cwtl
xchg
sti
pushf
lods
xlat
cmp
mov
inc
rolb
push
cmp
push
pushf
xor
ret
jmp
test
xchg
ss
out
xor
repz
out
mov
cltd
cmp
outsb
pop
or
sub
popa
mov
bswap
adc
ds
add
push
dec
push
rorl
mov
aas
ret
cmp
dec
xor
sbb
adc
push
movsb
xchg
pop
fwait
mov
sti
xchg
inc
mov
pop
aad
fsubl
out
mov
adc
push
mov
mov
and
push
mov
imul
mov
je
inc
cmpb
and
leave
mov
lods
jl
stc
sub
hlt
stos
int3
bound
xchg
scas
ds
dec
hlt
sbb
sbb
pop
xchg
inc
ljmp
xchg
jl
mov
repz
lods
fsubl
push
xor
pop
xor
dec
fistps
dec
push
js
xor
lods
inc
mov
xchg
mov
lret
dec
pop
pop
pop
inc
xor
leave
pop
imul
in
fwait
rclb
xor
rol
aaa
xlat
imul
and
orl
cmp
hlt
add
push
mov
loope
or
mov
dec
das
pop
notl
add
mov
into
inc
in
mov
scas
push
xlat
ss
stos
jnp
sbb
repz
movsl
test
int
xchg
addr16
push
sbb
mov
xor
in
cmp
sti
out
push
push
outsb
pop
mov
sqrtps
pop
push
cmp
jbe
sub
push
imul
in
imulb
stc
jbe
dec
xor
stos
shl
dec
xchg
xchg
and
cwtl
sbb
dec
pop
jp
inc
clc
in
and
mov
fildl
xor
js
rcrb
push
jae
sub
stos
test
jne
popa
push
rclb
push
lock
out
inc
push
and
cmpsl
pop
jg
mov
pop
rcll
pop
adc
daa
xchg
pop
int
mov
xchg
cmp
scas
mov
enter
repnz
jbe
.byte
inc
dec
sbb
add
inc
scas
jne
fs
arpl
sbb
mov
les
xor
or
shlb
pusha
lds
mov
xor
mov
mov
sbb
push
mov
mov
test
jns
insb
aad
xor
add
lods
int
mov
jo
pushf
shr
jmp
stc
int3
inc
scas
pop
mov
push
ficoml
mov
data16
xchg
testl
call
lahf
or
pop
pop
test
lods
out
movsl
inc
rcrl
pop
pop
into
and
ja
inc
add
push
test
sbb
imul
aad
test
fildl
jne
outsl
xor
mov
sahf
ret
das
jmp
mov
or
push
sbbl
je
outsl
stc
ss
aaa
sti
clc
inc
fistl
subl
mov
cltd
lret
scas
les
and
xchg
jnp
fnstcw
add
outsb
xchg
aam
insb
push
mov
lods
mov
mov
cld
adc
inc
insl
insb
out
xor
dec
or
mov
mov
enter
das
cs
sbb
cmp
gs
pop
mov
sbb
addr16
xchg
movb
lods
stos
lea
repnz
pusha
sbb
mov
popa
je
inc
push
arpl
ret
popa
daa
pop
pop
dec
into
sbb
data16
dec
icebp
pop
add
shrl
fisttpll
jg
xchg
ljmp
mov
sarl
aas
clc
cmpsb
je
shrl
cmpl
lea
lods
ds
or
mov
in
pusha
or
mov
call
or
inc
ss
data16
xchg
or
dec
mov
lods
cmc
mov
lcall
or
sbb
push
popa
xchg
test
fisubrs
cmp
sahf
mov
xor
and
add
mov
cmc
mov
jle
push
cmp
sub
cmp
pop
pop
les
pop
test
jp
sbb
adc
or
stos
or
ret
inc
loopne
cli
xchg
pop
add
inc
sub
pushf
das
and
jmp
or
stos
pop
ret
xchg
mov
dec
inc
cmpsl
movsl
sbb
dec
pusha
jnp
push
sbb
xchg
lock
adc
xchg
js
cmc
sbb
jl
inc
sti
and
sub
inc
dec
or
xor
mov
scas
gs
popl
mov
aad
shrl
outsl
inc
or
jle
jp
test
std
push
xor
lahf
ja
scas
stos
daa
nop
jecxz
sub
pop
mov
repnz
inc
addr16
adc
add
adc
dec
aaa
lods
sbb
xchg
out
push
enter
lds
shlb
pusha
jecxz
xor
mov
cmpsl
mov
lds
or
xchg
jo
orl
pop
shr
clc
int
mov
sahf
rcl
adc
mov
push
pusha
in
test
dec
and
mov
insl
test
enter
filds
rorb
lahf
push
into
or
xchg
pop
push
data16
rcr
dec
add
stc
add
cmp
adc
out
fs
ret
out
mov
cwtl
mov
add
fisubl
sbb
mov
out
movaps
mov
cmp
gs
rorb
inc
imulb
and
push
arpl
test
push
mov
shlb
push
dec
inc
sarb
incb
pushf
addr16
sub
xor
xor
ret
adc
pop
mov
pop
xchg
mov
stos
sbb
dec
mov
sbb
lahf
mov
mov
push
push
mov
aam
mov
sub
lock
pop
mov
aaa
or
pushf
jecxz
cmp
sub
adc
scas
divl
sahf
and
mov
mov
clc
mov
insl
xchg
push
jl
insl
inc
daa
jecxz
cmp
and
leave
inc
mov
mov
push
mov
xchg
jecxz
xchg
out
inc
fmull
repz
aaa
std
shlb
aam
push
aaa
imul
mov
lcall
xor
out
cmp
lret
mov
stc
pop
jns
push
or
cmp
subl
fbstp
in
push
push
jnp
in
xchg
lds
les
pop
roll
pop
ja
out
cmc
sub
aam
sub
xchg
cmp
repz
dec
cmc
jecxz
lcall
aas
lods
roll
popa
pop
push
sti
insb
ss
push
cld
das
pop
pop
lods
adc
mov
insl
ljmp
in
pop
push
mov
addl
mov
jb
mov
addb
jg
sbb
xchg
imul
and
jo
pusha
insl
or
fisubs
inc
push
popa
insl
dec
adc
mov
je
jge
nop
fs
cmp
nop
in
loop
fidivs
repz
pop
adc
adc
fidivl
lcall
cmovp
mov
xor
insb
jo
out
inc
add
pop
sbb
sbb
sub
rorl
mov
xchg
repnz
xchg
push
push
mov
jle
cmpsb
add
xchg
inc
xchg
mov
xor
in
inc
in
sarb
fldl
clc
in
cmpsl
stos
sub
repnz
inc
aas
pop
dec
pop
jo
jp
mov
imul
cltd
xchg
add
inc
jmp
arpl
cmp
mov
cmpsb
iret
jno
cmp
xchg
fiaddl
push
jmp
lods
xchg
and
cwtl
push
test
loopne
and
loopne
test
addr16
lock
push
in
jo
pusha
cmp
mov
xchg
dec
dec
repz
out
repnz
dec
sbb
sbb
xor
imul
sti
xor
ds
fisttpl
jne
ljmp
fsubrl
sub
bound
pop
daa
fbstp
in
dec
inc
movsb
loopne
mov
in
jns
xor
inc
mov
inc
sbb
sub
mov
cwtl
pop
jecxz
adc
in
and
xor
outsl
or
jae
stos
aaa
or
xor
sbb
mov
mov
test
movsb
movb
pop
test
rcrb
es
jb
movsl
shll
mov
inc
xor
popf
sub
dec
cmovnp
in
or
dec
push
rclb
dec
imul
test
push
mov
pop
andb
cmp
push
clc
lock
aas
loope
mov
mov
xor
mov
rolb
pop
in
mov
push
inc
pop
mov
addr16
xor
loope
jle
fbld
sub
shrb
cmc
mov
xchg
clc
imul
or
mov
add
adc
dec
out
mov
sub
rcrb
xchg
ja
and
test
cli
enter
imul
pop
nop
or
stos
out
dec
xor
ljmp
mov
aas
inc
pushf
shrl
xlat
jbe
ljmp
mov
enter
xor
sub
mov
mov
pop
dec
dec
inc
pop
xchg
xchg
popa
stos
push
outsb
loop
in
shrl
dec
mov
in
cmp
dec
pop
loop
mov
push
and
jb
add
and
int
orl
lret
lret
inc
rol
cli
mov
push
sbb
xchg
clc
cmp
inc
mov
or
xor
fucomip
pop
push
sbb
mov
test
punpcklbw
add
mov
mov
dec
cmpsb
daa
and
add
in
ret
aas
out
mov
mov
testb
xchg
mov
cmp
pop
pop
ds
mov
sub
loop
nop
push
test
adc
pop
lea
in
push
or
fcoml
lods
pop
adc
rcr
fistps
aas
jge
fstpt
jmp
arpl
mov
push
push
sub
imul
lods
sub
mov
enter
fsubp
xor
dec
cli
mov
popa
les
push
sub
jle
das
enter
into
cmp
xchg
loope
test
xchg
and
and
mov
add
adc
idivl
push
jo
push
test
dec
mov
adc
es
repnz
jae
sub
neg
dec
inc
pop
fsubl
mov
outsl
mov
cwtl
dec
cwtl
aam
mov
add
mov
inc
int3
aaa
idiv
scas
inc
in
sarb
xlat
je
sahf
roll
cmpl
mov
in
mov
js
clc
sub
mov
shlb
mov
mov
push
ljmp
testb
adc
dec
mov
push
xchg
hlt
sbb
inc
xorl
jno
cld
cmp
clc
leave
icebp
mov
mov
pop
mov
fsubl
push
mov
mov
push
push
ss
jne
nop
cmpsb
test
sub
into
or
push
pop
or
stos
and
je
scas
mov
lea
cmc
jne
cltd
repz
jle
xor
add
mov
mov
mov
mov
lcall
pusha
pushf
xchg
cld
pushf
nop
mov
pop
addr16
cli
sub
adcb
inc
out
xlat
and
jnp
in
inc
loopne
dec
shlb
ljmp
sbb
or
js
jnp
clc
std
test
or
mov
cmp
push
adc
clc
pop
repnz
jns
pop
adc
mov
in
pop
icebp
add
loope
or
cmpsl
stc
int3
pop
insl
test
mov
cmp
fcmovnb
xchg
and
clc
push
lods
test
rcl
sub
shlb
adc
clc
or
subl
sub
mov
lock
fisubs
mov
mov
pop
mov
movsb
jmp
cld
cs
sbb
into
dec
push
enter
pop
sbb
in
js
mov
test
xchg
ss
inc
imulb
imul
lcall
xchg
mov
into
pop
add
aam
xor
mov
bswap
mov
lods
repz
jbe
mov
mov
ss
dec
pop
out
mov
and
scas
ss
ret
lds
lret
je
push
adc
sbb
adc
xlat
scas
sub
mov
sbb
in
bound
pushf
stc
and
out
popl
cmpsb
insb
or
inc
mov
jb
mov
mov
cwtl
incb
cltd
imul
xor
cmp
lds
dec
ss
xor
pop
test
dec
pop
inc
dec
stos
xor
add
stc
stos
pop
popf
movsl
mov
scas
insb
mov
icebp
xchg
fdivl
jno
or
pop
xchg
pop
push
into
rcl
aam
and
gs
scas
test
or
jmp
and
sarb
push
jns
repnz
aas
es
sti
ficompl
adc
shlb
decl
mov
mov
sub
cmp
mov
dec
adc
add
mov
lcall
das
fildl
adc
lock
sahf
pusha
imull
lea
nop
imul
xor
loopne
ss
in
out
dec
rclb
adc
sahf
in
cwtl
lods
push
movsb
push
mov
xchg
or
adc
shlb
repnz
loop
xor
cmp
fstl
pushl
divl
mov
icebp
lea
cld
bound
ret
jge
pop
scas
or
add
divl
dec
dec
xchg
andb
rcrl
push
push
mov
inc
cli
lock
popf
js
mov
mov
jo
test
mov
cmp
mov
jp
inc
xor
cmp
mov
dec
ds
sbb
mov
das
cli
inc
mov
jge
inc
sbb
aam
dec
call
dec
lods
iret
mov
repz
xlat
push
push
xor
maxps
outsl
xchg
jge
jg
lret
jb
cltd
mov
imulb
jo
shrl
adc
push
movsb
ljmp
push
in
dec
repnz
arpl
insl
aaa
sbb
div
cs
dec
test
bound
sbb
mov
dec
xor
jge
dec
call
jb
inc
cmp
inc
or
inc
cltd
scas
mov
in
das
loopne
ret
enter
push
mov
dec
pop
ja
lret
pop
nop
lods
gs
inc
dec
jg
loop
les
je
dec
lcall
outsb
cmpsb
dec
and
movsb
lret
lahf
test
jmp
fbld
xchg
jne
mov
pop
and
mov
jecxz
test
ds
loopne
nop
addr16
iret
adc
adc
popf
movsb
adc
mov
sub
outsb
pop
repnz
mov
fisttpll
pusha
test
mov
or
dec
je
pop
pop
jp,pn
xor
sahf
and
scas
push
icebp
sub
out
loop
insb
or
out
shr
in
mov
bound
or
test
adc
jne
jp
sbb
es
test
outsl
aam
mov
mov
es
pop
out
dec
adc
mov
add
test
xor
cld
inc
cmp
inc
mov
mov
adc
mov
popf
pop
jp
sub
fwait
adc
xor
lcall
push
shll
lds
add
test
cmp
leave
cmpsl
sub
mov
or
leave
arpl
loopne
aam
ror
mov
testb
and
pushf
or
aaa
mov
sub
jmp
cli
dec
mov
mov
add
xor
push
icebp
xor
sbb
leave
xchg
test
gs
mov
cmp
out
dec
push
daa
xor
mov
mov
ja
ret
ljmp
mov
mov
and
pop
xor
sub
push
cmpsl
insb
rorb
dec
xor
arpl
cmp
jge
fidivs
push
xchg
mov
out
mov
das
aaa
daa
loope
cmp
and
and
in
mov
fcoms
repz
out
imul
adc
scas
sub
sbb
cmpsb
mov
fdivr
cmp
lods
inc
pop
lds
lds
sbb
sbbb
test
push
jle
jb
adc
or
movsb
ds
sahf
push
xor
std
mov
es
sbb
pop
and
mov
popa
xchg
mov
mov
dec
in
xchg
push
xchg
lret
xor
dec
pop
test
sub
test
xlat
mov
arpl
out
and
mov
cmp
pop
or
jbe
jmp
shr
pop
movsb
dec
aad
inc
les
xor
inc
js
sti
adc
sub
loop
or
mov
jg
sub
cs
pop
in
inc
test
leave
in
lret
popa
flds
push
mov
pop
retw
pop
je
fsubrs
jg
jge
idivl
pop
ss
sbb
xlat
insl
push
jl
jbe
jb
and
jmp
js
xor
inc
dec
std
arpl
add
adc
inc
bound
in
pop
xchg
or
mov
mov
mov
scas
test
dec
jmp
mov
sti
inc
push
xchg
pushf
fwait
pusha
push
cltd
iret
and
dec
test
repnz
adc
popf
dec
movsl
dec
inc
push
in
lock
inc
add
xor
mov
lret
in
mul
flds
adc
out
aas
cmp
xchg
scas
out
stos
sahf
pop
hlt
lahf
fnstenv
in
push
outsb
push
cmpl
ss
outsb
gs
or
push
jmp
push
mov
ficomps
aaa
push
fs
adc
cwtl
jb
and
sbb
loop
add
sbb
in
sti
imul
aam
sub
push
jnp
aaa
jecxz
int3
loope
sbb
out
mov
xlat
push
inc
pop
add
fistpll
je
arpl
aas
lock
in
or
xchg
sarl
repnz
sub
pop
sub
cmc
xor
or
pop
push
lcall
enter
nop
pop
jno
out
jl
xchg
das
out
jno
and
push
jo
andl
or
push
sub
inc
lods
pushf
mov
fistpll
or
cmp
iret
push
test
mov
or
imulb
inc
lcall
lock
movsl
outsl
leave
das
dec
movsl
fisttps
rcll
sub
jl
sbb
mov
insl
data16
test
inc
jnp
lret
mov
es
mov
jno
pop
adc
divl
xchg
add
cwtl
inc
negb
loopne
loop
scas
inc
sahf
xor
mov
ret
xchg
in
mov
and
fildll
cmp
fldl
xchg
jmp
loopne
mov
scas
popf
scas
ds
sub
arpl
orl
mov
pop
mov
jbe
sub
xor
sbb
stos
cmp
dec
arpl
mov
ret
mov
inc
push
push
ret
or
popf
call
insl
push
aaa
addb
int3
pop
rcrl
pop
inc
lods
adc
std
outsl
adc
in
inc
xor
cld
adc
leave
mov
mov
in
push
ror
sbb
ret
ds
pop
cltd
sbb
xchg
jp
js
sbb
adcb
mov
mov
push
lretw
aad
fs
adc
xor
xchg
insl
pop
push
cwtl
lret
int3
pop
lock
aas
xor
int3
mov
xor
cmp
sub
sti
seta
scas
mov
stc
clc
jg
jecxz
pop
cwtl
adc
mov
scas
cmpsb
mov
lds
div
push
mov
xchg
out
adc
jo
xchg
adc
sub
fcoms
mov
jno
jae
cmc
cmp
lahf
push
jge
add
pop
xchg
loop
jmp
dec
inc
data16
mov
add
sub
loope
mov
insl
out
adc
push
dec
stos
fisubs
popf
sbb
jecxz
adc
lock
int3
jae
cmp
test
xchg
jmp
adcl
mov
mov
insb
pop
mov
push
fsubrs
xchg
sahf
add
sub
sub
and
mov
push
imul
jge
cmp
jp
add
add
in
aas
and
dec
sahf
push
fucomi
out
push
and
int3
or
inc
mov
dec
adc
ror
imul
mov
xchg
shrb
cmc
inc
int
mov
test
jecxz
andb
xor
fnstsw
pop
imul
mov
shr
neg
mov
xchg
jne
out
mov
lret
lea
mov
call
adc
leave
add
rcr
scas
add
movb
cmp
push
and
sbb
mov
in
jl
lcall
ror
gs
push
push
mov
cmp
push
pop
nop
ljmp
or
and
cmp
xchg
popl
sub
xor
xchg
cmpsb
sbb
add
mov
inc
push
mov
popa
mov
xor
push
xchg
sub
mov
aaa
add
movhps
ds
out
sub
xlat
adc
mov
xlat
pop
notb
dec
cld
cld
jge
sub
and
aad
into
jp
push
mov
insb
xor
dec
push
cmp
mov
sub
adc
scas
jo
icebp
pop
mov
insb
jmp
movsb
rclb
icebp
imul
sbb
xchg
xchg
ret
sbb
sti
adc
push
mov
cmp
cmpb
int3
pop
sbb
lock
push
sub
loope
ficoml
jle
in
inc
inc
xchg
mov
and
sbb
xchg
jg
inc
mov
ss
pushf
loope
xchg
in
subb
and
mov
cmpsl
ficoms
mov
xor
inc
fisubl
push
out
mov
add
call
pusha
mov
xor
jnp
xchg
cmp
inc
hlt
xor
xor
push
or
and
sbb
cwtl
xor
sti
rolb
sub
dec
out
jae
push
xor
mov
xorw
mov
dec
sti
lds
nop
add
ret
aad
sub
or
iret
inc
pop
dec
shrl
pop
inc
das
inc
cmp
xlat
loope
adc
inc
mov
jle
sub
and
dec
inc
mov
shrl
adc
mov
dec
fistpll
std
fcompl
lret
les
cmp
and
sbb
dec
stos
dec
sub
xor
mov
mov
not
sub
push
pop
and
mov
add
or
pusha
cld
bound
nop
jle
add
lcall
outsb
jecxz
rclb
jmp
loop
lock
movsb
icebp
stc
pop
imul
mov
fwait
xchg
sbb
movsl
push
jecxz
fwait
and
mov
repnz
dec
push
scas
in
and
lea
mov
cmp
in
out
fiaddl
pop
mov
pop
push
sub
scas
add
rcll
add
xor
fmull
jns
sub
sti
xchg
and
add
xchg
ffree
ja,pt
mov
or
inc
imul
inc
scas
std
cmp
sbb
add
xchg
pop
add
sahf
xlat
xchg
dec
xor
inc
pop
cltd
repz
shlb
movsl
jmp
call
lea
pop
repz
jg
and
push
and
push
or
rclb
push
jne
addr16
push
pop
aad
sahf
mov
ret
xor
xchg
cmpsl
mov
scas
dec
pop
add
jmp
lock
sub
out
test
cmc
cs
mov
and
loop
aaa
or
dec
aas
movl
shl
cmpsb
dec
pop
aam
js
push
shrb
enter
pop
fst
pop
in
cmp
push
adc
decb
pop
cltd
dec
ja
fiadds
xchg
test
cwtl
das
enter
out
pop
cwtl
ds
in
sub
inc
add
add
dec
jmp
ret
and
es
adc
and
aam
in
add
test
push
das
or
mov
int
add
jo
aam
pusha
push
jg
in
mov
xor
jns
xchg
mov
add
adc
adc
push
lret
call
outsl
int
scas
fisubrl
mov
imul
cwtl
cmpsl
pusha
pop
jge
aam
test
mov
or
mov
insb
mov
stc
mov
xor
pop
lods
fistpl
push
push
arpl
sbb
arpl
aaa
test
push
fidivl
xor
cmp
outsl
test
lods
mov
or
lcall
fmul
xchg
sbb
xchg
mov
into
mov
push
pop
cmp
mov
add
add
enter
das
add
fdivl
add
push
pusha
xchg
lds
inc
push
stos
fwait
enter
sub
and
push
xor
daa
mov
loope
mov
cmp
rcrb
cmpsb
in
stos
in
or
push
in
fcoms
movsl
sbb
into
outsb
or
adc
adc
stc
jb
roll
xchg
mov
mov
fs
sub
and
pop
pop
sbb
or
push
addr16
scas
jae
pop
sbb
fistps
fsubl
test
cmp
xchg
sbb
or
push
fsubrl
fdivr
lahf
pop
ja
repz
mov
jl
flds
dec
rolb
sub
std
jg
cmpsb
or
xor
daa
mov
pop
sbb
inc
mov
mov
in
loop
rol
icebp
sub
xchg
cmc
insl
mov
stos
inc
pop
pop
pop
cmp
mov
jne
mov
mov
mov
std
xchg
xchg
mov
mov
iret
lcall
pushf
inc
inc
mul
inc
je
movsb
xchg
jb
sbb
mov
xchg
sahf
xorl
cwtl
mov
in
add
bnd
adc
sbb
test
jp
jge
movntq
push
mov
decl
xchg
imul
inc
lea
or
int
bound
xor
dec
sbb
outsl
test
pop
arpl
das
movl
in
stc
mov
mov
jne
push
add
xor
fidivl
fucomi
cs
push
out
iret
outsl
push
cmpsb
mov
xchg
adc
adc
fisubrs
nop
insl
cmp
scas
xor
aaa
daa
sbb
jnp
mov
dec
pusha
xorl
xor
pushf
inc
jge
dec
xchg
orl
jge
xor
stos
pop
dec
sub
xchg
into
aas
imulb
mov
pop
mov
and
push
mov
adc
pop
adc
and
stos
push
pop
lods
mov
aaa
cli
in
int
jg
stos
jns
pop
icebp
btr
add
jo
mov
lret
andl
mov
repnz
push
or
jecxz
lldt
dec
sti
mov
ss
ret
hlt
xchg
push
imul
push
add
insb
fadds
clc
or
les
cmpsl
or
int3
ret
adc
lock
or
mov
movsl
adc
mov
mov
adc
lods
das
aad
popa
xor
xchg
js
addb
fucompp
movsb
mov
xor
rol
push
lret
ds
fwait
add
push
ficomps
test
movsb
cmp
int
mov
mov
push
les
movsb
hlt
data16
in
cmp
jno
call
adc
push
and
jb
xor
jno
mov
imul
out
mov
dec
in
shlb
ret
movsl
popa
bound
dec
nop
mov
loop
or
fdivrs
sar
push
bound
dec
aas
xchg
jl
and
inc
inc
imul
sub
jb
jae
xchg
mov
jnp
push
add
mov
movsl
or
sbb
hlt
lcall
into
pop
mov
mov
jl,pn
inc
leave
xchg
xchg
dec
movsb
aad
mov
jl
je
push
or
mov
jns
out
mov
daa
jecxz
jg
rcr
stos
sahf
dec
push
jecxz
mov
popf
xor
jecxz
ret
and
iret
mov
test
jg
sub
imul
mov
or
rclb
mul
push
daa
in
aas
pop
push
mov
mov
dec
mov
dec
inc
sti
jne
sub
cmp
je
or
or
sub
adc
leave
inc
jb
rorb
add
rorl
jg
mov
sbb
mov
out
add
lret
jb
lret
mov
fldt
inc
lret
movsl
mov
mov
adc
pop
xchg
mov
inc
adc
fcompl
shr
int3
mov
iret
xorl
hlt
xchg
and
mov
movsl
outsb
pop
insl
xchg
sti
jge
xlat
jb
push
movsb
scas
adc
mov
aaa
or
adc
in
mov
std
jmp
cmp
lret
cmp
pop
gs
sub
sbb
add
int3
mov
rcl
leave
and
fnstcw
mov
ja
push
dec
divb
mov
and
push
xchg
xor
push
xchg
sub
jmp
sbb
jg
outsl
xlat
les
mov
mov
sbb
fisubrl
jo
lods
fwait
call
insl
filds
fwait
aaa
rclb
mov
dec
xchg
pop
ds
xor
inc
jl
filds
out
js
ja
inc
mov
mov
add
das
xchg
mov
dec
xchg
sub
push
lret
adc
add
les
lret
push
iret
inc
lahf
lret
dec
jmp
pop
mov
lods
xchg
mov
loop
inc
mov
shll
out
lcall
mov
add
mov
decl
fcomi
cmp
and
ret
addb
test
mov
or
jnp
pop
test
lods
fs
shll
push
cld
mov
sub
mov
pop
adc
es
icebp
jl
aam
cld
ret
dec
dec
jno
or
subl
fsubrs
sbb
js
cmpsl
shr
lock
rcll
test
mull
pop
loopne
ljmp
js
mov
inc
cmp
pop
lret
lods
nop
sbb
push
and
sub
loope
nop
or
nop
jg
xor
and
addr16
shrb
aas
mov
xor
adc
dec
pop
sbbl
mov
sbb
out
in
mov
push
fdivl
fsubrl
push
iret
stc
or
dec
inc
mov
js
pop
ret
je
gs
jmp
cmp
jg
fbld
xchg
pop
aas
xor
or
dec
mov
jno
xor
arpl
iret
iret
push
popa
movsb
inc
sub
dec
ret
stos
xchg
add
push
es
cmp
inc
scas
push
outsb
lds
leave
cmpsb
xchg
xchg
out
pop
shrl
clc
ljmp
cmp
loopne
or
es
aas
sbb
mov
xlat
cmpl
push
mov
push
mov
movb
mov
out
scas
mov
data16
je
ja
push
and
mov
pop
mov
mov
mov
jle
sub
cld
sti
fsub
addr16
loope
jmp
rorl
jo
sti
psubq
sub
push
mov
rcrb
iret
fnstsw
stc
popa
inc
mov
ja
push
mov
mov
jecxz
sub
mov
xchg
push
and
lea
stos
lds
cmp
xchg
fistps
popf
push
xchg
mov
sub
mov
sahf
xor
cmp
push
test
or
dec
cmp
jns,pt
xsha1
cmpsb
cvtpi2ps
push
fsubr
adc
add
adc
push
orl
xchg
sbbb
cmc
jmp
lea
dec
push
xor
pusha
xchg
push
jbe
dec
push
outsl
pop
mov
adc
fcmovnbe
pop
negl
loopne
pop
outsl
fstpt
inc
mov
mov
sub
xor
push
dec
dec
lret
gs
ljmp
sub
movsl
nop
sbb
inc
inc
cmp
in
les
mov
cmc
xchg
daa
inc
mov
cmp
cmp
movsl
push
mov
aad
test
xchg
movsl
adc
sub
addr16
pop
cmp
pop
mov
mov
cmp
loop
sbb
popf
fucomp
and
clc
out
mov
mov
xor
xchg
and
push
push
insb
aas
test
dec
cmc
loopne
or
sti
xchg
popf
dec
ds
mov
pop
nop
jl
inc
in
out
call
mov
pushf
adc
ret
adc
pop
fxch
add
std
jae
imul
fidivrl
add
in
arpl
inc
push
notb
mov
imul
fwait
outsl
add
mov
mov
xchg
inc
xor
or
mov
or
or
push
std
cmpl
cmp
ljmp
sbb
jno
fisttps
sub
mov
mov
and
fwait
std
xor
cli
leave
mov
fdivl
stos
or
cli
test
imul
mov
inc
add
das
ja
mov
test
cmpsb
bound
cmpsb
pop
push
lods
daa
cs
int
pop
inc
pop
aaa
inc
dec
cmpsl
cmpsl
or
add
or
outsl
fs
or
mov
xlat
dec
lcall
addr16
imul
in
and
pop
xchg
fcompl
pop
popf
into
push
fdivr
push
jge
jns
outsl
cmpl
incl
mov
je
and
in
mov
xor
inc
mov
enter
addr16
popf
je
jb
push
and
mov
add
fadds
lea
ja
or
mov
jne
push
into
stos
and
insb
and
sub
loop
cltd
shrl
push
mov
clc
xchg
mov
movsl
repz
nop
stc
lret
cmc
or
cmp
leave
lods
icebp
add
cmpsb
and
test
scas
stos
push
mov
sbb
jae
inc
out
pusha
mov
das
cmp
rcrl
sarb
test
pop
xor
sub
xchg
pusha
out
aam
xchg
push
les
fdivrs
add
mov
and
inc
adc
jo
arpl
int3
pushf
or
test
xor
xor
fldenv
push
scas
inc
sub
movsb
stc
mov
fisttps
dec
mov
xor
push
loopne
mov
push
int
movsl
nop
and
cmpl
out
mov
cwtl
xor
insl
insl
adc
stos
fs
mov
cmpsl
mov
mov
inc
sub
inc
insb
lret
adc
inc
cld
dec
bound
xor
mov
cltd
lcall
inc
loopne
inc
and
movsl
js
inc
mov
and
rclb
outsb
xor
inc
arpl
fwait
jg
xchg
xor
push
repnz
imul
std
in
out
shll
or
in
mov
sub
scas
mov
xor
xchg
push
sbb
sub
fbld
pop
addr16
cmp
rorb
icebp
dec
push
mov
sbb
push
cmpsl
fdivs
repz
jb
and
clc
mov
icebp
mov
sbb
push
aam
ret
adc
repz
fincstp
or
mov
in
fsub
cmpl
je
das
lcall
rcll
lods
loope
dec
cmp
mov
mov
mov
cld
movsl
xor
mov
sub
enter
adcb
push
xor
pop
xchg
aad
xor
fidivrl
movsl
addl
inc
lret
adcl
hlt
inc
xlat
icebp
stos
push
cmp
iret
xchg
mov
not
push
pop
xchg
insl
or
insl
xor
jnp
sub
mov
fucomip
push
mov
out
xchg
je
xchg
jl
inc
jecxz
adc
in
dec
imul
add
ja
test
jae
outsl
mov
les
sbb
dec
out
loop,pt
or
pop
sub
xchg
stc
fsubr
imul
scas
push
rclb
xlat
cmp
and
test
nop
push
int
insl
out
cwtl
sub
pop
lahf
lcall
dec
scas
jge
pop
call
xchg
test
fcmovnb
xchg
xchg
es
aam
xchg
jecxz
pop
jns
in
mov
pop
xor
das
in
cmpsb
mov
add
push
mov
inc
cmpsb
pop
hlt
mov
and
xor
mov
mov
idivb
push
xchg
fstpl
inc
or
lret
cwtl
stos
mov
pop
dec
fsubrl
out
push
mov
jne
vcvttps2dq
or
filds
sub
leave
lret
mul
cld
mov
dec
fisubrl
clc
fildl
sub
mov
dec
stc
inc
call
fstl
dec
loopne
ret
ss
outsb
adc
loope
inc
lock
jae
loop
pop
xchg
insl
test
sarb
sbb
inc
scas
sti
mov
lahf
pop
and
mov
scas
movsb
loop
ljmp
mov
lock
in
mov
gs
call
shrb
or
jp
mulb
fcomi
pop
and
inc
fcom
ds
daa
ret
jnp
mov
or
sbb
inc
outsb
sub
dec
push
jae
adc
data16
je
mov
or
cmc
adc
fsubp
or
fildll
int3
sahf
and
outsb
loope
push
xor
rcl
dec
add
mov
mov
push
cmpsl
lods
outsl
daa
je
push
outsb
in
push
mov
push
mov
orl
sub
push
pop
test
daa
xchg
jmp
or
imul
repnz
adc
mov
add
or
mov
or
adcl
jae
dec
ret
aas
sub
xor
cld
gs
mov
xchg
sarl
jp
xor
lock
dec
outsb
dec
add
pop
aam
push
pop
pop
and
into
rorb
neg
stc
sub
mov
addb
sbb
imul
or
xchg
addr16
dec
flds
test
adc
dec
ret
xor
fdivr
mov
out
or
or
and
femms
dec
cmp
mov
adc
push
movsb
and
hlt
ds
movsb
aam
fistl
inc
jmp
inc
lret
xchg
sbb
jae
sbb
lock
movsl
xchg
lock
fmull
aad
popa
mov
push
or
dec
push
sahf
push
pop
rorb
lahf
fwait
add
ljmp
pop
loop
arpl
aam
out
mov
sbb
pop
mov
push
rcll
mov
mulb
fists
or
xlat
xchg
in
pop
or
cmp
or
mov
call
cld
ret
fimull
jne
xchg
mov
in
push
pop
daa
push
sti
popa
pop
push
mov
pop
shrb
outsl
pop
sbb
xchg
lock
push
data16
and
in
sbb
fdivr
dec
xchg
sub
rcr
push
flds
or
lahf
jns
and
xor
popf
call
test
mov
jo
inc
or
sbb
lock
sarb
enter
fidivrs
out
outsb
cmp
mov
add
jae
outsl
xchg
jb
cltd
imul
icebp
ss
pop
sbb
daa
shll
shr
inc
jge
fstp
fidivs
mov
int3
add
or
aas
add
js
push
out
add
add
nop
movsb
jge
stos
sbb
mov
cld
mov
cmp
pop
mov
mov
loope
pushf
sbb
in
dec
in
lods
sti
push
sbb
lea
data16
pop
push
je
xchg
inc
imul
iret
xor
add
ss
cs
mov
js
push
jb
insl
jecxz
cltd
jmp
jmp
adc
sbb
pop
dec
adc
in
pop
mov
int3
std
adc
frstor
inc
loop
jle
loopne
leave
pop
mov
lret
aam
xor
lahf
cmp
cmp
filds
aad
sbb
lret
add
pop
mov
sub
adc
ret
sub
jle
add
frstor
adc
repnz
bswap
mov
das
xchg
daa
add
fabs
sub
enter
outsl
push
xlat
cltd
test
scas
push
lock
cs
in
push
or
imul
mov
adc
or
jg
nop
out
mov
fidivl
mov
ret
rclb
movsb
jb
scas
rolb
outsl
addr16
dec
or
mov
je
push
xchg
popa
mov
cmp
sbb
add
std
insl
rclb
es
clc
lret
xor
and
push
xchg
or
and
in
sub
mov
loopne
out
lods
xchg
sbb
arpl
xchg
and
add
arpl
xor
push
push
sbb
shlb
jg
mov
lea
mov
xorl
int
mov
fildll
fwait
lea
mov
xchg
or
imul
pop
out
mov
movsb
dec
or
jmp
les
dec
adc
jmp
cmp
xchg
push
push
filds
pushf
sub
negb
and
ret
test
iret
mov
inc
sahf
jnp
icebp
sub
jbe
xchg
inc
pusha
add
mov
xor
lock
fdivr
mov
ror
sbb
push
addb
mov
mov
sbb
or
ss
adc
sbb
cld
inc
jecxz
add
fcomip
into
inc
cmpsl
or
jo
jo
hlt
xchg
mov
mov
outsl
push
or
sub
dec
fisubrl
mov
lea
push
lods
jae
xchg
lds
lcall
pop
inc
addr16
das
sbb
fs
mov
jne
js
pop
and
adc
test
mov
fsubl
dec
daa
and
inc
ss
leave
test
or
aam
mov
cmp
cmpl
sub
and
and
xchg
into
adc
push
xor
rol
inc
jo
inc
lods
inc
xlat
mov
mov
std
fildll
dec
pop
xchg
jle
pushf
inc
pop
mov
mov
adc
xchg
and
xorl
out
cmpsl
int
popf
std
movb
or
sbb
sbb
mov
pop
fistl
leave
push
aad
mov
repnz
jno
into
cmc
insl
and
sub
xchg
fimuls
pop
jae
cltd
lcall
aas
dec
imul
push
mov
cs
sar
push
or
cld
daa
xlat
out
iret
call
rclb
mov
jge
pop
push
mull
std
fistpl
mov
notb
cld
or
enter
jb
stos
or
cmp
add
pop
dec
pop
mov
mov
cld
ljmp
or
add
test
sbb
inc
movsl
jnp
push
repz
pop
movsb
out
icebp
test
repz
mov
stos
xor
jns
dec
mov
loop
mov
cmp
movb
jmp
pop
mov
xchg
xor
repz
rolb
shll
or
inc
mov
lret
dec
mov
mov
cmpsb
mov
sbb
fmulp
test
mov
mov
fs
outsb
and
pop
shr
imulb
sahf
sub
mov
pusha
pop
push
mov
pop
out
push
jno
outsb
fldenv
and
lods
mov
jno
and
mov
and
test
fs
sub
jecxz
cmp
inc
jo
mov
test
test
mov
sbb
in
sarl
shll
sub
dec
xchg
mov
fs
in
jne
lds
daa
ljmp
scas
add
fidivrl
mov
cmp
in
sub
mov
xor
gs
add
out
lret
lea
adc
out
ret
int
or
fldenv
jg
loopne
int
fisubs
fisubrs
scas
test
out
jle
daa
or
in
test
sub
add
leave
sysexit
out
xchg
mov
dec
pop
fldt
fsubrp
jg
inc
shll
out
fldenv
cmpsl
fildl
ja
gs
mov
mov
cltd
jg
jg
orb
adcl
loop
xor
add
pop
add
jp
sbb
xor
call
push
mov
in
ret
fnstenv
push
fsubs
xchg
movsl
imul
mov
mov
pop
jns
lds
pop
sbb
aas
pop
test
pop
push
sub
jle
adcb
fiadds
cmovle
ror
daa
pop
jl
xchg
pop
idivb
jne
packuswb
rcrb
jo
mull
pop
fimuls
js
mov
in
mov
stc
and
mov
stos
jno
adc
mov
ja
leave
xor
mov
aaa
push
inc
pop
add
imul
js
loop
sti
repz
cld
xchg
out
xor
jmp
dec
inc
cs
push
call
push
inc
call
cmp
out
pop
inc
mov
dec
int
pop
fsubl
pop
sar
mov
sub
adc
adc
inc
outsb
jmp
data16
adc
mov
cmp
out
adc
je
aas
mov
mov
inc
and
in
push
scas
or
push
jbe
xchg
cli
cmp
fldt
cs
shrl
dec
xor
arpl
mov
outsl
mov
cli
lods
sti
daa
dec
faddp
jp
imul
add
loope
cmpsl
xchg
imul
test
pop
in
pop
imul
pop
pop
pop
aad
fadd
and
pop
rcll
insb
lds
pushf
push
mov
lods
imull
sbb
aaa
or
wrmsr
jb
pop
test
push
cwtl
fisubs
push
xlat
inc
inc
xchg
jmp
push
lsl
pusha
addr16
mov
lock
ds
pop
sbb
pop
test
or
dec
mov
std
mov
std
in
mov
and
and
xchg
xor
sub
imul
dec
xor
xchg
xorl
dec
dec
mov
mov
add
stos
int3
inc
aaa
adc
call
movhps
scas
mov
sahf
jno
cld
push
cltd
cld
inc
jge
sub
mov
in
dec
add
rolb
xchg
cmp
sbb
inc
cmpsl
xchg
sti
dec
cmpsb
outsl
shld
xchg
inc
movsl
jecxz
pop
pop
mov
dec
sbb
mov
loope
push
movsl
clc
in
push
stos
test
movsl
sbb
lods
js
or
ljmp
ss
aad
jnp
pop
cmc
jmp
in
rolb
clc
cli
sti
jno
xlat
fldt
xor
lahf
mov
pusha
lahf
mov
mov
lret
mov
lret
fcomi
or
fimuls
sub
or
popa
push
rolb
cmp
pop
addr16
gs
jl
lahf
inc
or
pusha
pusha
jmp
fistps
leave
insl
sbb
pop
cwtl
pusha
mov
jecxz
mov
adc
xchg
jmp
pop
xor
cli
pop
mov
call
stos
das
push
in
push
loop
hlt
xor
inc
fidivs
pop
imul
xor
in
sbb
xchg
mov
and
psubd
and
clc
xchg
xor
mov
xchg
fnstsw
jmp
fldl
sub
cli
negb
inc
lock
mov
icebp
icebp
imul
jno
test
cmp
and
loopne
test
push
sbb
cmp
mov
movsl
pushf
sahf
fs
outsl
data16
into
pop
out
call
mov
pop
xor
insb
stc
xchg
arpl
out
call
inc
xor
mov
es
in
push
push
addb
sbb
js
adc
enter
and
sbb
cmpsl
xchg
arpl
push
jno
dec
gs
inc
push
ficoml
push
icebp
xchg
mov
pop
aam
stos
std
aas
das
arpl
roll
xchg
test
ficompl
fcompl
orl
ss
and
xor
das
shrl
and
aad
mov
push
test
mov
mov
cltd
xor
push
cld
mov
inc
inc
loope
das
in
push
cmp
jle
sub
test
lods
lea
pop
cmpsl
xor
cmp
sbb
loop
pop
lds
adc
xchg
adc
push
mov
jp
cwtl
cld
pop
dec
pop
lcallw
lret
dec
cmp
pop
sub
cwtl
mov
out
pop
pop
sbb
jmp
xchg
insb
in
add
cmp
sbb
testl
dec
rorl
ja
push
loop
mov
pushf
cmp
fs
mov
cmpsb
inc
cmpsl
jbe
shll
xlat
push
xor
xchg
pop
inc
cmp
scas
dec
lock
pop
sbb
add
cmp
ret
mov
rclb
lock
dec
mov
xchg
jecxz
sub
lods
aad
sub
push
cmp
and
push
mov
iret
xchg
mov
rorb
out
cmpsb
xlat
jo
addr16
imul
movsl
lret
test
or
add
arpl
stos
int
sahf
cmp
ret
icebp
jno
sub
dec
insl
push
mov
sbb
loope
or
sbbl
arpl
mov
imul
mov
push
les
pop
mov
pop
lods
dec
adc
pop
mov
pop
or
dec
insl
jle
xchg
in
cs
push
or
mov
fidivrl
leave
push
xchg
mov
outsl
les
nop
popf
shlb
xchg
xchg
inc
mov
pop
dec
out
or
stos
sub
aad
aad
stos
jmp
imul
insb
imul
xchg
mov
test
jno
mov
xor
lods
cltd
xlat
push
fldl
clc
fistps
xor
push
mov
aas
rcr
mov
push
scas
xchg
orl
sub
xor
lahf
insl
or
ss
aas
sahf
popa
mov
fbstp
mov
add
jnp
xchg
shr
fnsave
mov
xchg
add
cld
pushf
test
rcr
mov
xchg
mov
jb
mov
jno
fcmovne
stc
push
mov
mov
jmp
ficomps
cli
mov
lret
shr
xchg
xchg
cwtl
jp
jmp
inc
lock
jns
lds
js
adc
fidivs
push
and
gs
jg
xchg
mov
pop
jae
adc
lcall
cltd
xchg
adc
negl
adc
lcall
pop
adc
sub
push
insb
pop
outsb
add
sbb
outsb
xchg
loope
mov
cmpb
test
repnz
call
xchg
push
int3
add
lds
sbbb
movsb
sbb
or
int
in
jo
icebp
pmaxub
sbb
push
ficompl
mov
inc
or
push
lds
dec
fxam
incl
push
daa
outsl
push
cmp
test
cwtl
sub
sub
dec
jle
mov
sub
lds
icebp
and
in
test
push
test
lods
stos
push
in
je
fucom
dec
in
cwtl
or
mov
add
nop
lret
dec
push
arpl
rcl
push
out
dec
pop
jmp
in
mov
add
xchg
daa
jnp
aaa
add
aam
or
xchg
cwtl
scas
into
push
out
iret
lds
push
rorl
push
jge
or
sub
mov
test
sbb
in
jne
fdivs
std
ja
insl
out
pop
imul
dec
mov
mov
or
cmpsl
ret
pop
fs
stc
xchg
inc
fmuls
or
iret
mull
xor
xchg
stos
fstl
aas
cmp
xor
imul
xlat
stc
fstps
xchg
out
mov
pop
sti
jl
roll
lahf
jle
in
xorb
sarl
mov
dec
fistpl
sbb
inc
arpl
lods
negl
adc
lret
jne
lea
int3
cmc
out
adc
outsl
and
pop
xchg
dec
hlt
fdivrl
xchg
adc
icebp
mov
sub
dec
fldl
xor
scas
lock
cwtl
mov
leave
es
js
stc
loop
in
cmp
je
in
mov
pushf
and
out
push
test
jecxz
pusha
or
cwtl
loope
jl
push
aaa
scas
add
enter
mov
lods
dec
xchg
sbb
popa
addr16
push
lret
in
push
loope
xchg
es
add
xchg
lods
repz
push
jbe
dec
sbb
add
loopne
xor
sarl
xor
or
pop
ljmp
enter
add
iret
js
cmp
bound
into
dec
lret
add
fstl
adc
sub
repz
push
inc
nop
pusha
push
out
addl
cs
data16
mov
pop
fwait
enter
stos
loope
jmp
punpcklwd
mov
lret
sbb
jg
das
sbbl
cmpsl
sbb
lahf
add
js
mov
fsubrl
add
testl
pop
push
add
int
mov
push
sub
pop
cmp
sub
mov
stos
and
pop
mov
outsl
addl
sbb
lea
inc
dec
mov
pop
inc
xor
dec
cmp
add
iret
jle
jnp
push
test
ds
pop
imul
mov
pusha
movsl
jecxz
fimull
decl
clc
repz
xchg
mov
sbb
cld
cmpsb
gs
ss
pop
xor
mov
pop
or
clc
xchg
popa
cmp
es
sbb
fmull
push
pop
adc
xor
jg
shlb
push
push
add
mov
sbb
jae
cs
call
dec
les
fmuls
pop
mov
jp
ljmp
movsb
xchg
sub
add
cs
mov
ljmp
cmc
jmp
pop
sub
sbb
pop
and
ret
jnp
das
sar
dec
ja
int
jo
cmp
lcall
push
mov
pop
and
sarb
ret
fdiv
subl
cld
inc
leave
mov
mov
or
push
sub
fwait
sarl
fwait
mov
je
rclb
fsubrs
adc
adc
jb
addr16
pop
aas
and
xchg
mov
js
lock
xor
test
in
out
pop
dec
in
sub
pop
lds
int
sbb
in
movsb
ja
inc
movsb
pop
test
adc
mov
mov
mov
cmp
push
in
neg
jns
mov
call
mov
nop
pop
jo
push
push
enter
je
sbb
push
push
mov
rclb
aas
je
lahf
pop
pushf
adcb
mov
test
xor
xor
xchg
lahf
mulb
dec
jns
popa
xorl
insl
imul
sbb
stos
cmpsb
push
popf
mov
jnp
cmp
adc
cmp
or
sub
jge
sub
fs
popf
mov
ret
mov
in
test
lcall
jae
and
in
popf
mov
xor
push
sub
pop
xchg
add
sbb
xchg
mov
aam
out
sub
gs
add
test
cs
movsl
jo
and
call
sub
xor
jmp
inc
jmp
fwait
not
dec
pop
lock
enter
xchg
mov
or
push
fbld
out
aaa
es
sbb
mov
pop
cmp
pop
pop
jmp
loopne
push
sub
push
sbb
dec
out
xchg
mov
inc
dec
mov
add
mov
inc
or
push
rcrl
aaa
dec
pushl
sub
enter
sub
inc
fcoms
pop
or
cs
mov
imulb
xor
mov
mov
aad
push
and
adcl
imul
daa
dec
ret
adc
sub
inc
fdivs
or
inc
mov
jo
mov
pop
pop
mov
push
sub
xchg
pop
adc
ret
insl
outsl
sub
pop
lock
cmp
mov
shrb
mov
push
loopne
pop
jg
mov
push
aam
decl
rcrl
cmc
xor
fdivrs
or
in
mov
mov
mov
cs
shlb
push
lahf
clc
imul
add
int
sbb
call
add
mov
jmp
jge
add
push
fisubl
shrb
dec
inc
rolb
nop
dec
jb
pop
push
pop
xchg
pushf
jge
stos
pop
sbb
lods
loope
clc
orb
mov
movsl
enter
jbe
jmp
subl
icebp
adc
mov
in
dec
xlat
imul
dec
fimuls
or
imul
cs
mov
sbb
aaa
lret
mov
or
dec
and
jmp
adc
adc
rorb
sbb
insb
push
arpl
stos
aam
mov
mov
rcrb
mov
sub
add
sarb
push
dec
pop
jns
mov
add
mov
orl
push
push
mov
sbb
mov
xchg
lods
aaa
pop
stc
xor
sbb
addr16
movsb
inc
cmp
or
mov
insl
mov
mov
int
jmp
push
push
in
push
push
sti
int
mov
fldl
mov
push
lret
mov
mov
mov
mov
xchg
xlat
insb
popa
cmpsb
jbe
mov
shrl
push
xchg
sarb
xor
insb
dec
push
pop
cmp
mov
sbb
jl
fcomp
arpl
xchg
sbb
jnp
mov
cmp
and
jle
cmp
jno
or
test
xchg
int3
lods
lcall
pop
ljmp
xor
cmp
mov
xor
aas
and
mov
enter
sub
ja
push
sbb
mov
pop
xchg
sahf
and
xchg
sarl
pusha
xor
imul
add
dec
cli
mov
push
popf
iret
loope
xor
mov
push
mov
loop
ret
sub
shll
leave
mov
mov
movsb
xchg
inc
mov
jle
movl
push
adc
js
fdivrs
ret
pop
stos
stos
outsb
jbe
negb
dec
or
in
lahf
inc
push
push
mov
aaa
stos
jb
into
jecxz
adc
jp
pop
add
dec
sti
cltd
out
sub
dec
xlat
mov
add
scas
push
xchg
ret
cmp
inc
in
sbb
sarb
ret
aaa
shlb
sbb
or
scas
pop
dec
add
repnz
test
popa
and
mov
pop
cmpb
cmp
mov
adc
lds
or
repz
mov
sub
inc
xchg
cmp
mov
adc
faddl
mov
dec
fiaddl
cld
cld
pop
stos
push
inc
jae
and
daa
sub
dec
test
enter
xchg
roll
fstl
rcrl
adc
mov
out
shlb
push
cwtl
adc
fwait
cli
lock
jmp
fwait
decl
xlat
mov
mov
js
adc
cld
mov
mov
adc
dec
test
test
mov
fisttpll
cmp
jmp
clc
xchg
stos
add
sbb
pop
cmp
adc
jmp
push
mov
push
int
flds
or
xchg
fwait
das
jecxz
loopne
xor
mov
sub
inc
or
push
inc
xor
sti
pop
lret
fadds
loope
test
xchg
int
fidivl
add
mov
xchg
clc
incl
fistl
or
lahf
cmc
in
xchg
pop
cmp
mov
stos
repz
adc
lahf
lds
inc
mov
add
loope
jp
xorl
push
sub
in
iret
jmp
test
lods
jecxz
jge
mov
and
and
dec
cmp
mov
mov
hlt
mov
arpl
fldt
jl
jbe
inc
loop
clc
in
inc
pop
ja
inc
ljmp
xor
mov
dec
xchg
lea
or
push
pop
inc
ret
sub
arpl
gs
dec
jns
ljmp
f2xm1
and
dec
hlt
aas
rcl
ret
out
adc
stc
and
rclb
mov
cmpsl
hlt
mov
je
inc
rcr
push
mov
adcl
push
out
incl
idivb
cmpsb
jecxz
mov
sbb
insb
ljmp
dec
adc
call
jne
pop
shl
icebp
test
cmc
jmp
stos
loopne
jg
movsl
push
pop
lods
add
ds
rclb
fimuls
lcall
in
aas
adc
mov
and
xchg
test
adcl
sub
fists
add
sub
inc
in
decl
in
mov
push
and
ret
gs
sub
mov
dec
xchg
js
and
mov
jnp
movsb
adc
mov
inc
dec
inc
mov
lock
loope
lcall
test
ret
or
add
shl
out
clc
cld
es
shll
xor
stos
jnp
sub
pushf
sub
add
js
rcll
nop
xchg
lahf
ficomps
jp
sbb
adc
clc
mov
jno
add
decl
mulb
xchg
dec
mov
subl
cmp
sub
fsubrl
aad
jg
imul
xchg
icebp
roll
mov
test
movsb
fwait
mov
add
or
insb
push
mov
mov
repz
inc
sbb
fwait
mov
xor
jns
sub
jo
sub
mov
out
add
jbe
xor
gs
or
adc
xchg
fs
nop
inc
test
push
test
cmp
and
xor
jp
loopne
inc
shrb
add
pop
lcall
cmp
dec
mov
jge
ret
lcall
lret
cmp
jl
stos
adc
lahf
out
fwait
sahf
andb
mov
aam
popf
or
mov
jp
imul
or
pusha
scas
pop
and
jnp
cltd
mov
sub
les
mov
dec
stc
add
test
xlat
or
add
push
lea
inc
jbe
or
xor
aaa
pop
lea
mov
lret
xchg
ds
dec
xor
push
jae
mov
mov
test
shll
aaa
mov
adc
insl
sbb
iret
std
or
mov
xor
add
dec
pushf
js
cmp
push
cmp
push
fnstcw
xchg
nop
repnz
lret
xchg
inc
pop
sub
lds
out
or
mov
into
insb
mov
mov
out
add
add
cld
daa
aam
jo
jecxz
fisttps
sbb
xchg
das
xchg
stc
cwtl
cmpsb
or
inc
xchg
xor
repnz
sub
lahf
fnstcw
jo
mov
mov
adcl
into
xlat
cmpsl
ficoms
roll
xchg
lea
mov
call
cltd
pop
mov
lods
or
dec
mov
loopne
insl
mov
dec
mov
pop
rolb
pushf
xlat
dec
mov
mov
cmc
xor
add
push
enter
repz
inc
pop
int3
adc
scas
lock
repnz
xchg
fndisi(8087
xchg
lock
addr16
bound
or
arpl
pop
mov
ljmp
mov
xchg
add
lods
mov
or
mov
movsl
push
jb
adcb
xor
push
xor
in
sub
lock
pop
add
mov
mov
mov
shlb
adc
inc
call
ss
sub
dec
out
enter
sbb
mov
push
jmp
scas
pop
loope
or
jmp
mov
xchg
cmp
arpl
or
notl
popl
fimuls
jo
jg
lahf
dec
enter
push
scas
adc
dec
out
pop
pop
inc
loopne
mov
xor
pop
and
add
outsb
jbe
mov
iret
mov
xchg
mov
xchg
sbb
mov
dec
pop
cmp
or
movsb
pop
xchg
xor
movsb
xor
mov
ret
iret
ret
cmpsb
fcomip
xchg
inc
pop
idivb
loop
cmp
adc
and
xchg
push
push
dec
mov
add
push
sti
add
adc
inc
sub
mov
xchg
or
mov
mov
adc
sbb
adcl
sbb
jb
mov
int3
inc
icebp
mov
mov
or
sub
ja
add
push
jno
mov
sbb
es
push
out
fnstcw
fld
or
or
cs
out
jmp
dec
ficoml
mov
mov
lahf
sub
andl
mov
sti
push
or
pop
or
mov
outsb
cmp
ret
stos
imulb
loop
arpl
pusha
sbb
jns
loop
mov
jge
jnp
lods
aaa
pop
adc
es
mov
jns
inc
jmp
insb
cmc
cli
pushf
dec
jg
mov
cwtl
jb
dec
fld
adc
inc
xchg
pop
jae
fnstenv
mov
jecxz
mov
shlb
int
dec
adcb
scas
dec
mov
lods
xor
pop
cmc
or
fsubrl
jbe
loop
pop
clc
inc
add
add
cli
add
pop
sti
adc
es
mov
xor
mov
mov
movsb
loope
rclb
in
and
jecxz
and
or
xor
mov
stos
loopne
loopne
dec
xor
std
cltd
xlat
xchg
mov
cwtl
aam
xor
addb
mov
cmp
pushf
aas
ljmp
lea
pusha
aam
pop
cmpsb
and
inc
dec
mov
data16
testl
sbb
push
adc
out
ret
xchg
push
stos
dec
fdivp
pusha
arpl
ds
testb
add
mov
inc
and
jb
loopne
push
lock
cmpsl
jp
out
jp
es
ds
repz
xchg
mov
jecxz
in
xchg
cmc
pop
dec
mov
loop
jo
pusha
pinsrw
cmpsl
xor
pop
sub
inc
add
mov
loopne
fwait
or
or
adc
add
mov
hlt
mov
sub
cmc
and
mov
imul
sub
fs
mov
pop
or
and
pop
adc
ds
mov
inc
push
aaa
inc
pop
test
mov
xor
daa
push
inc
addb
adc
aam
cltd
dec
cltd
cli
jle
pop
cmp
mov
pop
add
mov
jns
inc
xchg
sub
pop
popa
loopne
in
dec
and
or
test
test
outsl
jb
je
push
int3
inc
je
or
sub
es
bound
into
ficomps
iret
sbb
add
ds
dec
pop
pusha
mov
lret
fcomps
sub
fwait
idiv
test
jecxz
lret
in
rcr
mov
jns
or
cmp
dec
in
mov
in
or
adc
inc
icebp
imul
push
mov
clc
cld
add
cltd
jmp
cmpb
jno
mov
inc
push
dec
jle
or
dec
mov
pop
fdivrs
mov
dec
movsb
xchg
jge
fsubrl
or
das
sbb
shll
movsb
add
inc
fcompl
mov
adc
clc
cld
rcrb
xchg
adc
mov
sub
insl
movsl
dec
lock
rcrb
test
es
andl
negl
fisubrs
iret
push
cs
es
mov
fsubrs
flds
and
push
pop
jecxz
push
add
iret
imul
testb
in
sarb
and
push
cmpsb
jae
adc
add
in
ret
jno
pop
inc
sbb
shlb
mov
adc
mov
add
sbb
div
ss
cmp
xor
xchg
jmp
rcr
cmpl
xlat
mov
movsl
cmpsl
jp
and
mov
jnp,pt
cmp
add
mov
sbb
push
repz
dec
fcmovbe
adc
pop
sbb
je
cmovno
fwait
cmp
mov
pop
jno
mov
sub
lahf
popf
movsb
jno
icebp
cmp
push
andl
fldcw
in
test
sbb
cmp
mov
movsb
std
pop
bound
out
scas
repz
dec
pop
stc
pop
xor
les
mov
cli
or
loopne
call
jae
stc
test
out
inc
cmpsb
mov
lret
mov
in
dec
mov
push
lods
fcmovb
dec
and
xor
sbb
xlat
addb
push
sub
xchg
cld
sarb
jns
out
cmp
dec
jae
or
call
jecxz
repnz
cmp
jns
aam
insb
enter
ds
inc
dec
jle
or
xchg
addb
in
lock
mov
cwtl
cli
fisttps
fcomi
cs
leave
fldt
loope
push
call
stos
shrl
xor
sub
inc
jbe
addr16
cld
mov
pop
sbb
fldt
nop
pop
xlat
fiadds
mov
cmp
adc
lods
mov
in
mov
xchg
pop
pop
mov
ds
in
sub
dec
cmp
push
pop
testb
addr16
dec
push
std
xchg
adc
sbb
mov
xchg
std
das
cmp
push
arpl
inc
xchg
out
cmp
jp
in
xchg
add
xchg
es
scas
ror
dec
push
and
inc
cmp
gs
inc
jo
sub
fnstcw
jne
ret
fcoms
mov
xor
mov
sti
xor
mov
aaa
pop
in
mov
sub
fsubrl
add
imul
mov
fpatan
aaa
or
push
adc
int
cwtl
mov
je
cwtl
sarl
aam
jae
push
cmp
sbb
dec
in
aad
rsqrtps
arpl
cmp
sti
ss
out
cmp
pop
or
int
into
popf
mov
push
cmc
shr
js
or
imul
lahf
add
pop
aam
inc
fistpll
jg
movsl
inc
ficompl
sbb
cmp
cld
out
out
pop
fcmovbe
je
xchg
ljmp
fcomp
sbb
imul
dec
add
cmc
sub
inc
mov
add
mov
jge
mov
cmp
xchg
jo
daa
cmpl
push
cmp
scas
inc
stc
subb
xchg
jno
mov
scas
shlb
cmp
cwtl
fs
and
push
push
call
in
cmc
stc
mov
in
cmp
imul
mov
aam
stos
outsb
mov
fbld
jecxz
xorb
sub
or
sbbb
adcl
call
scas
movsb
inc
and
jne
mov
ficomps
popa
add
and
and
es
lret
adc
push
fmull
xchg
popf
inc
add
scas
adc
add
dec
xchg
sub
ss
mov
and
add
mov
cld
xorb
or
repnz
inc
sbb
ljmp
imull
pop
pop
add
jno
cmpsb
mov
daa
rcrb
in
and
pop
or
fstps
xor
enter
fdivl
mov
adc
stc
xchg
pushl
test
pop
mov
shlb
test
mov
repnz
call
dec
push
inc
ret
lea
xor
xor
and
xchg
cmp
int3
inc
daa
pop
icebp
les
int
int
cmpsl
push
push
repz
push
xchg
push
cs
in
into
mov
cmp
jge
sbb
jb
jle
subl
pop
dec
add
lcall
sbb
inc
or
ret
cld
popa
jb
or
fucomip
repnz
xor
xor
jmp
add
inc
lret
lds
xor
add
push
pop
icebp
mov
sub
fcmove
test
iret
xor
repz
inc
sub
mov
sbb
add
fdiv
push
aam
jecxz
mov
push
mov
aam
arpl
cli
jnp
xor
mov
jge
jp
icebp
push
add
aaa
dec
mov
and
repnz
ret
fildll
cltd
in
ja
xor
mov
sub
jg
mov
mov
pop
loopne
mov
lahf
xchg
add
mov
insl
adc
cwtl
lret
std
push
cmp
or
pop
sub
shll
stc
popf
jae
jmp
pop
test
xorb
xchg
mov
subl
stc
xchg
lock
mov
lods
aaa
fistpll
inc
mov
sbbb
xchg
out
call
and
fdivs
add
fwait
gs
lahf
loopne
pusha
shl
pop
xchg
pop
lahf
ljmp
xchg
dec
in
inc
mov
loopne
pop
jge
mov
ss
xchg
sbb
dec
pop
sub
aad
fldl
mov
stos
aad
push
mov
cmp
jo
sbb
hlt
jg
jo
jmp
add
push
pop
cmp
xor
jo
fsts
xchg
xlat
fwait
aad
std
divps
mov
jnp
push
mov
mov
test
mov
xor
pop
adc
xchg
in
frstor
jbe
test
inc
mov
jbe
filds
xor
into
and
test
inc
xor
std
mov
aam
sbb
in
xchg
lock
icebp
mov
cli
fistps
xor
or
or
or
repz
cmpsb
mov
pop
cmp
mov
or
pop
pop
ss
cwtl
push
pop
icebp
xchg
or
std
adc
mov
popa
mov
test
mov
dec
mov
mov
add
sub
inc
mov
lret
sub
push
add
rcl
repnz
out
insb
mov
lea
jecxz
mov
xchg
aad
fdivrs
inc
pushf
or
dec
ret
loopw
push
nop
scas
xlat
mov
arpl
divl
lret
mov
sti
adc
dec
sbb
lods
bound
sub
cwtl
fs
addr16
jns
sbbb
fwait
mov
cmp
fsts
xchg
or
push
cmp
push
and
and
pop
mov
leave
pop
jbe
sbb
pop
out
orb
push
cmc
push
mov
sbb
fcomp
mov
cmp
cmp
jne
leave
nopl
and
shr
cmpl
insl
mov
and
sbb
xor
int3
jp
mov
lods
push
cli
addr16
mov
pop
mov
cmp
mov
mov
test
das
rorl
les
sbb
aam
fisttps
loopne
sbb
mov
mov
dec
and
mov
call
xchg
fdivrs
add
ds
sub
add
pop
xor
cld
rol
pop
mov
out
xchg
cmp
dec
mov
popa
and
mov
bound
push
mov
inc
ja
jle
and
jno
jo
cli
lcall
push
xorl
pop
push
in
cmpsb
pop
fidivrs
mov
enter
jecxz
das
out
fcompl
push
push
fcmovbe
mov
test
dec
cmpsl
iret
sbb
push
ds
fwait
add
inc
jb
lcall
dec
out
sbb
add
xor
cmpsl
jg
clc
xor
mov
mov
mov
pop
nop
pop
sub
mov
jns
push
xchg
movsl
xchg
mov
dec
insb
push
enter
pushf
ret
cltd
xor
shrl
les
jg
pop
mov
and
cltd
aam
lds
cmpsl
or
xchg
mov
sbb
jmp
jp
mull
pusha
clc
out
or
ret
mov
dec
cs
xchg
fcmovnbe
sub
cmp
dec
jl
das
ljmp
fldl
xor
cwtl
les
cmp
fcoml
loopne
imul
or
pop
inc
test
int3
out
jns
or
dec
mov
push
sbb
pop
jo
cmpsl
fdivrs
pop
es
inc
orl
jl
test
lcall
dec
dec
notl
ja
dec
and
fistpll
sbb
inc
pop
xchg
sub
dec
dec
sub
lods
cmp
xchg
mov
sahf
xor
clc
xchg
call
cli
push
ficompl
cmp
dec
cmp
stc
jp
pop
ljmp
mov
xor
mov
mov
stos
insl
rorl
xchg
mov
mov
mov
dec
fidivl
mov
int
cmp
cmp
adc
jecxz
ret
adc
aam
enter
push
out
testb
test
js
push
or
inc
sbb
cltd
jae
and
dec
mov
sub
into
mov
inc
xor
popf
int
int3
iret
sti
test
mov
mov
ja
sbb
jnp
fidivs
insb
addr16
fs
mov
lcall
stc
ret
or
neg
xchg
lea
dec
and
or
lods
sbb
lret
fwait
pop
inc
aas
imul
scas
pop
add
sysenter
or
xchg
mov
lret
jns
inc
fbld
inc
stos
dec
xchg
push
inc
jg
hlt
mov
cmp
push
sbb
out
das
stos
mov
sbb
aaa
or
out
jecxz
sahf
xor
es
push
jmp
test
popa
jbe
jmp
test
aaa
mov
and
mov
add
mov
push
and
sub
je
or
dec
incl
push
or
test
mov
xchg
add
mov
punpckhwd
mov
call
inc
mov
subb
mov
ret
movsl
enter
pop
dec
out
hlt
inc
shrl
mov
adc
or
jo
data16
daa
ljmp
pop
loop
add
mov
data16
imul
mov
aas
fwait
dec
xchg
cmp
test
orl
fisttpl
and
cwtl
cmp
dec
jb
test
jmp
sbb
dec
push
jg
dec
fst
sti
cmc
add
push
jmp
mov
imul
add
shll
shlb
mov
sub
xchg
scas
into
ficoms
repz
data16
fwait
loopne
add
clc
adc
jmp
cwtl
adc
out
pop
and
cld
out
leave
imulw
fisubrl
movaps
mov
popl
dec
push
hlt
cmp
fdivl
aad
je
mov
movd
int
xor
cld
jae
les
ljmp
inc
or
mov
rcrl
and
or
loope
fiaddl
sbb
jg
lods
inc
lods
and
mov
outsb
movsb
subb
les
push
or
pop
shll
imul
xor
sbb
cmp
fisttps
pop
inc
icebp
push
mov
cmp
sub
push
push
int
push
mov
or
js
andb
jecxz
push
rorl
orl
add
push
jno
or
pop
push
push
sahf
bound
fdivr
test
dec
sub
hlt
lds
jl
push
int
and
imul
push
ss
xor
bound
mov
out
adcb
outsl
adcl
sbb
shll
fs
mov
fldenv
xlat
dec
xchg
inc
fisubrl
inc
ja
pop
cld
insl
add
fildl
int3
int3
push
into
fidivl
test
in
mov
lods
insl
inc
xchg
out
jno
or
jmp
mov
out
enter
insb
xor
xchg
mov
inc
xchg
cmp
jno
in
pop
cmpsb
or
aam
cld
lret
push
jmp
xor
xchg
into
push
jle
push
jl
shl
push
and
jmp
or
xchg
sahf
pop
imul
dec
scas
jae
fildl
imul
xchg
dec
sbb
fwait
push
inc
inc
aam
lds
movsb
lods
fcoms
into
and
adc
sbb
add
dec
mov
push
sbb
lahf
enter
fimuls
mov
xchg
jb
loope
xchg
out
rorb
xor
lret
in
int3
imul
test
push
outsb
xchg
leave
fiadds
enter
sbb
or
sub
mov
out
mov
sub
nop
addr16
in
test
cmp
rcl
imul
ficoml
insb
or
aaa
hlt
ss
test
bound
hlt
dec
cli
lods
mov
pop
jp
ret
cmp
xor
lock
mov
adc
pop
push
inc
popf
jnp
loope
pop
mov
pop
pop
sub
mov
lret
shrb
and
bound
lret
or
ret
cmp
data16
ret
and
mov
scas
mov
xlat
testb
into
jl
xchg
add
and
inc
inc
dec
andb
add
sahf
adc
xor
mov
mov
cs
sub
xor
clc
mov
adc
in
test
fldenv
sub
pop
adc
jae
fiaddl
lods
sbb
push
add
and
xchg
mov
adc
out
and
xlat
out
push
fwait
mov
repz
or
lea
jne
dec
inc
scas
inc
adc
mov
and
lret
mov
mov
dec
inc
les
repnz
lods
mov
in
movsl
repnz
jl
dec
shr
out
stc
je
inc
jno
mov
testl
loop
cmp
and
and
xchg
jecxz
imul
cmp
xlat
in
ret
adc
rolb
xor
clc
dec
push
xor
sub
jmp
mov
and
cmp
sbb
lahf
xchg
int
stos
dec
jle
pand
in
imul
xchg
fsts
stos
adc
or
lods
jmp
and
sahf
and
imul
or
push
dec
mov
fwait
imul
pop
xchg
inc
and
xchg
je
adc
sbb
cmpsb
xor
xor
dec
lahf
pop
mov
dec
repnz
xor
mov
inc
sub
ret
jg
cmpsb
jle
loop
dec
cmp
push
repz
in
pop
call
mov
negb
and
test
aad
sbb
pop
test
mov
dec
dec
pop
shl
clc
inc
pop
data16
roll
jecxz
je
xor
mov
xor
cli
xor
inc
pusha
xor
mov
adc
cmp
cs
imul
dec
inc
xchg
subb
sahf
cmpsl
cs
outsl
jne
sub
inc
and
dec
lret
das
xchg
aaa
popa
aas
mov
inc
sub
pop
xchg
sti
sbb
sbb
xlat
pop
and
jl
mov
add
fnstsw
pop
inc
out
insb
imul
cli
push
int3
rorb
xor
lods
es
insl
out
xorl
test
jmp
cmp
repz
lahf
loopne
or
leave
pop
inc
pushf
and
dec
push
or
or
out
das
es
je
fmuls
scas
out
xrelease
sub
stos
jecxz
dec
lret
ja
roll
negb
clc
add
mov
mov
push
imul
fadds
into
addr16
and
mov
in
inc
or
int3
push
pop
push
dec
mov
ret
xchg
jge
mov
pop
dec
jmp
lcall
cmp
xchg
mov
lods
lcall
test
ficompl
xor
cmpsl
lds
shrb
push
pop
dec
sub
push
pop
lods
lock
mov
out
adc
and
pop
push
sbb
push
ljmp
adc
dec
dec
fdivr
mov
inc
andl
and
ret
lret
adc
sub
lock
neg
push
test
push
popa
inc
and
mov
jb
mov
clc
outsb
sbb
adc
cmp
aad
pop
pop
push
repnz
aam
mov
in
xor
loop
mov
xor
inc
pop
dec
inc
mov
jno
gs
sar
add
lahf
pop
cltd
mov
mov
add
into
lea
and
mov
jecxz
sbb
stos
lret
mov
xor
jle
loopne
test
or
gs
mov
adc
iret
movsb
test
jg
dec
shl
jmp
dec
movsb
in
shlb
mov
je
push
ljmp
popf
mov
roll
insb
xchg
adc
xor
xchg
mov
sub
mov
sub
movsl
sbb
push
lds
push
mov
jno
mov
dec
pop
lods
mov
mov
nop
dec
or
out
jmp
or
std
mov
adc
mov
xlat
out
data16
rclb
scas
rclb
lds
cmp
mov
loopne
xchg
pop
lcall
fmull
pop
std
repz
pusha
or
cmp
sarl
pushf
pop
rcrl
jns
or
cwtl
loope
inc
into
mov
lods
gs
push
movsl
out
mov
inc
pop
outsl
mov
les
inc
cmpl
cmp
push
xor
sub
xlat
fwait
pop
cld
mov
inc
cmpsl
mov
es
xchg
push
stos
divb
cmc
je
or
sub
xchg
test
and
lock
sbb
lahf
xor
adc
push
nop
enter
fdiv
mov
mov
xchg
jns
repz
jge
inc
ret
in
lahf
pop
ds
nop
js
bound
or
ret
ret
hlt
jns
in
xor
fstl
not
cmp
into
cmp
mov
dec
daa
mov
lret
cltd
jmp
xchg
lock
sub
sbb
jp
pusha
adc
or
dec
adc
push
jae
push
sarl
sti
idivb
sub
dec
dec
popf
add
in
and
adc
out
pusha
and
out
adc
jo
sbb
inc
xor
sbb
pop
jbe
fiadds
jl
sbb
shl
add
jecxz
add
mov
jmp
dec
in
mov
test
jp
xchg
mov
pop
and
cmc
mov
jno
xor
adc
jnp
int3
lods
sti
iret
push
sub
dec
mov
enter
push
ret
jb
mov
rcrb
fs
jmp
xor
pusha
inc
pop
imul
ja
inc
jmp
fsubl
dec
add
xchg
pop
scas
xchg
xlat
repnz
cwtl
sbb
mov
pop
in
je
push
leave
jno
push
enter
xchg
pop
sub
jae
movsb
add
push
mov
test
ret
aas
std
flds
cli
cmp
rorl
data16
cmpsb
or
lea
call
xchg
pop
negl
push
push
dec
int
xchg
jecxz
jnp
ljmp
adc
mov
cmp
xor
test
fwait
popf
xchg
push
enter
stos
adc
pushf
rcr
inc
adc
inc
fistl
mov
pop
adc
ljmp
das
dec
cmc
aas
lods
mov
jbe
les
xchg
pop
mov
ret
cmpsb
pop
lds
pop
add
mov
out
push
cmc
jno
push
pop
sbb
cmpsb
insl
stos
and
pop
out
lret
dec
jge
fsubrp
arpl
in
roll
mov
inc
mov
das
and
adc
dec
sahf
cmpsl
push
loope
dec
cmc
push
dec
pop
or
mov
add
sti
xor
js
mov
movsl
cs
pushf
mov
adc
out
mov
fldcw
incb
sub
imul
jmp
mov
jnp
incl
push
in
out
fimuls
sub
icebp
dec
jmp
or
lods
push
jp
dec
inc
popl
sub
in
shll
std
insl
or
aad
addr16
mov
cmc
loop
xor
es
jo
out
pop
int3
inc
xlat
test
pop
ds
mov
inc
adc
mov
push
mov
xor
insl
stos
ja
push
pop
mov
jbe
pop
jb
or
sti
notb
fstl
movsb
xor
pushf
and
sub
js
jmp
mov
or
dec
ret
lret
rcr
test
mov
adc
jge
fmul
inc
jp
iret
xchg
movsb
mov
inc
add
or
xchg
fldl
lods
dec
out
fstps
jno
mov
mov
lret
rcrb
mov
push
icebp
jp
adc
in
mov
inc
sarb
sbb
or
add
mov
and
or
mov
lret
mov
arpl
cmpsl
lods
xor
jmp
inc
mov
test
pusha
mov
xor
add
xchg
and
inc
leave
jg
sbb
dec
insb
popa
jns
lcall
mov
int
and
stos
shrl
push
cmp
push
in
dec
mov
mov
adc
mov
and
pop
pop
adc
sahf
cwtl
stos
pop
bound
mov
cmpsb
sbb
inc
and
xor
ja
cmpsb
mov
dec
pop
adc
testl
pop
dec
rcrl
xor
gs
cli
lods
mov
into
pop
scas
lds
add
and
inc
push
adc
movl
cmpb
addr16
xorl
mov
push
mov
sbb
dec
inc
vphaddbq
imul
xor
push
ds
dec
aas
or
pop
inc
sar
mov
mov
mov
sbb
loope
ss
mov
ficoml
or
adc
adc
pushf
fwait
xlat
imul
sub
push
add
aas
loope
scas
xchg
push
imul
movsl
popa
pop
in
pop
movsl
push
add
mov
and
cmp
or
pop
add
jbe
js
xchg
scas
pusha
enter
lods
clc
mov
xchg
popf
mov
bound
xor
xchg
and
repnz
dec
pop
jnp
fiaddl
mov
mov
mov
push
inc
lahf
dec
dec
loop
imul
mov
push
rorb
adc
mov
push
imul
add
mov
stos
rcrl
into
daa
mov
into
pop
pop
jl
pop
int3
mov
outsb
cmp
ja
add
xchg
sbbl
outsl
adc
ljmp
sub
lret
lret
mov
dec
mov
aas
mov
jecxz
or
ljmp
loopne
lea
stos
dec
add
mov
sub
pop
hlt
pop
jg
fwait
inc
cmc
fisubrs
ss
mov
xchg
in
dec
pop
cmp
mov
push
mov
jp
rcrb
leave
aad
fiadds
addr16
popl
jo
cwtl
push
push
jmp
loope
jno
out
das
orb
inc
or
jb
jb
rcll
mov
mov
pop
adc
int
pop
or
sub
imul
mov
adc
insb
shrl
cmp
test
xchg
out
repz
adc
aaa
push
test
xchg
pop
sub
rol
cmp
and
jns
add
and
pop
adc
popa
push
push
lcall
insl
mov
fisubrs
mov
dec
pop
jp,pn
js
sub
pop
test
je
ret
adc
daa
mov
arpl
call
sbb
push
mov
cmpsl
cmpsl
pop
bound
xor
sub
sub
mov
mov
data16
and
mov
insl
mov
xor
inc
mov
xchg
cmc
mov
subl
cltd
adc
cs
ficoms
mov
leave
fcom
in
jl
jg
jb
addb
cmp
lahf
test
inc
ljmp
xchg
fcomip
sub
fisubs
jmp
jcxz
ljmp
in
mov
dec
out
ficompl
sbb
jecxz
mov
out
cld
scas
mov
mov
mov
aam
ficompl
sub
push
test
cmp
push
cwtl
unpckhps
xchg
rcrl
lea
xchg
fs
out
mov
jmp
mov
cmp
pop
int3
test
xchg
dec
pop
mov
aad
insl
ljmp
sbb
adc
lea
jo
sub
mov
cmp
jp
adc
pusha
jne
sbb
lds
mov
lods
pop
sahf
int
stc
xlat
ss
xchg
jbe
shlb
test
push
shrb
pop
pop
mov
or
mov
in
movb
das
adc
sti
rolb
ss
jo
iret
mulb
sub
roll
push
stc
lods
fists
push
jle
in
jnp
xchg
sbb
aaa
xchg
jne
or
adc
inc
jno,pn
or
jno
jecxz
jb
dec
mov
pop
frstor
gs
jecxz
stos
pop
movsb
pop
adc
scas
push
jge
repnz
push
mov
sub
aas
aaa
mov
imul
scas
push
cmpsb
xor
mov
xor
fimuls
push
cmpsl
fistpl
and
inc
xchg
ja
or
ljmp
stos
cs
loopne
mov
jbe
outsl
jp
fnstsw
ror
hlt
lods
adc
xor
pop
ja
mov
jl
xor
cwtl
cmpsb
pop
popa
xchg
inc
mov
mov
iret
loope
std
ljmp
jno
jo
mov
xor
xchg
jb
shrl
popa
or
xchg
xchg
xor
pop
frstor
jo
xor
sub
lea
into
pop
dec
pop
sarb
sub
stos
pop
fucom
orb
mov
sbb
outsb
jg
cltd
pause
dec
add
mov
stc
jae
out
outsb
cld
adc
push
mov
test
movsl
xlat
mov
cld
mov
jae
add
or
cmp
xchg
call
mov
xchg
nop
ljmp
daa
sub
jns
bound
dec
adc
and
xchg
rclb
mov
fbld
int
xlat
xor
inc
cwtl
jbe
mov
mov
xor
cwtl
dec
mov
inc
xchg
movsb
push
sub
and
adc
jmp
in
lret
push
mov
out
dec
sbb
rcrl
out
fisubl
mov
add
jecxz
lcall
xor
fldt
loope
sbbl
pop
cld
imul
jle
mov
cld
fwait
pop
outsb
scas
jno
clc
in
ret
pusha
dec
sbb
pop
push
xor
jnp
out
subb
popf
jno
add
stos
pop
arpl
inc
iret
in
cmpsb
shr
fs
loop
lret
mov
add
lods
push
data16
mov
adc
xor
mov
sbb
leave
gs
nop
mov
in
je
jne
adc
popa
push
sbb
outsb
in
stos
fadds
xor
and
icebp
inc
mov
adc
mov
mov
sbb
out
and
enter
negl
adc
push
rcll
jmp
repnz
imul
cli
into
mov
stos
mov
in
arpl
push
ffreep
loope
dec
push
sbb
fstpt
in
fcmove
insl
gs
and
adc
btr
sahf
scas
out
ljmp
sub
xchg
mov
mov
notl
out
and
cld
je
xor
data16
sahf
movsb
hlt
or
int3
lret
fwait
mov
pop
adc
enter
inc
stc
imul
sbb
lock
jns
sub
jle
add
int3
push
insl
push
push
mov
dec
push
push
mov
lea
imul
mov
jg
out
gs
mov
cmpsb
adc
cli
leave
mov
fimull
mov
xchg
xor
mov
imul
rcrl
in
push
or
arpl
lds
leave
divps
rcrb
fmuls
ss
push
ret
adc
lods
aad
inc
jp
bound
jp
shlb
ja
mov
dec
mov
pop
cld
and
cmp
sub
sub
mov
lahf
xchg
lcall
hlt
cs
add
imul
loop
add
or
or
adc
or
cli
or
ss
das
into
mov
and
cmp
and
jne
cmpsb
popf
loope
mov
sbb
jmpw
sbb
mov
mov
sbb
pushf
out
add
sbb
cld
mov
scas
and
in
add
imul
repnz
cmpsl
ss
or
push
push
pop
out
cld
movq
pop
dec
popa
fwait
mov
enter
std
mov
and
je
mov
or
push
jg
jo
aad
mov
push
jmp
add
cmp
dec
mov
jmp
and
lret
mov
mov
cmp
fdivrl
xor
and
movsb
xchg
mov
outsl
frstor
adc
jne
xchg
jmp
data16
dec
push
inc
je
push
add
dec
int
out
xor
adc
dec
paddd
out
sbb
xchg
ss
popa
jp
js
stc
mov
popf
int
out
lods
xor
lcall
add
sub
movsb
adc
jp
arpl
pop
push
cmp
and
mov
shll
cltd
push
stos
mov
data16
arpl
add
mov
xor
sbb
xchg
not
xchg
int3
sub
clc
jmp
jg
fildl
jle
dec
dec
ficompl
lods
je
inc
and
push
mov
mov
cltd
stc
inc
xchg
sbb
push
negl
sbb
in
popf
loope,pn
lahf
sbb
lods
add
xchg
ret
aad
shl
pop
and
inc
mov
cmpsl
fbstp
insl
xor
jo
mov
cmp
ljmp
dec
push
sti
imul
loop
adc
xchg
insb
je
add
jmp
adc
mov
pop
lret
movsb
xchg
inc
pop
push
int3
test
xchg
aaa
dec
ja
cmp
shll
dec
pop
dec
inc
pop
jle
adc
xchg
mov
lds
or
fistps
push
adc
sub
xchg
jge
ljmp
and
sub
or
and
xor
ljmp
icebp
mov
das
dec
sub
sbb
insb
push
mov
dec
dec
mov
sub
adc
xchg
pop
push
jno
and
stc
pop
inc
stos
xor
mov
push
orb
sbb
in
ja
cmp
ss
js
je
or
ret
shrl
int
pop
sbb
pop
mov
int3
sub
subl
adc
mov
pop
and
mov
mov
pop
lcall
aas
cli
pop
pop
pop
xchg
loope
sub
cmp
fs
cmp
push
adc
repz
or
jb
dec
nop
jo
lea
push
aas
js
mov
fldcw
int
adc
mov
aam
loopne
subb
inc
movsl
xchg
mov
andl
cmp
jge
fnsave
jns
popf
lods
jl
mov
sbb
xchg
aaa
imul
rorl
sbb
test
hlt
mov
xlat
and
pextrw
inc
or
mov
dec
mov
push
sub
lcall
mov
jmp
fisubs
js
pop
ret
inc
dec
add
jg
inc
inc
pop
sbb
ss
lea
repz
in
push
in
rcl
les
pop
mov
aad
jns
mov
mov
mov
imul
dec
cli
insb
cmp
lods
pop
fstps
add
pop
mov
inc
mov
clc
in
mov
stos
fcmove
out
fcoms
ret
inc
inc
jmp
and
and
dec
mov
lea
pop
mov
cmp
lock
lcall
int3
stos
call
xchg
aad
movsb
pushf
dec
add
and
push
sbb
or
xchg
adc
xchg
inc
push
or
loop
adc
push
mov
sub
xchg
mov
pop
add
inc
aaa
inc
cmpsb
out
sahf
jo
push
ss
imulb
mov
ret
mov
mov
ljmp
mov
movzwl
jmp
shlb
pop
aas
leave
jbe
cld
and
push
shll
mov
stos
fisubs
loope
inc
pop
das
roll
cmpsl
xchg
sti
sub
add
loopne
sub
in
std
xor
or
cmp
xchg
xchg
or
aas
sbb
test
cli
push
add
or
lods
adc
cmp
out
test
int
addr16
nop
add
imul
xor
fmuls
shlb
pop
fisubs
jae
in
aam
or
pop
lret
lds
ficomps
je
ret
pop
jge
cmpb
cmpl
jae
cmp
insb
es
add
sub
scas
shrb
fisttpll
movsb
push
dec
lret
fs
hlt
in
dec
pop
in
pop
test
dec
je
popf
aam
push
iret
lret
out
inc
cmp
and
and
xlat
adcl
ret
js
stos
sub
rcll
pop
pop
in
shll
xchg
into
cmpsl
mov
repz
mov
loop
adc
mov
mov
push
jne
xchg
mov
mov
and
jp
fisubrs
jmp
aas
adc
les
test
inc
imul
fisubs
addl
imul
adc
add
fidivs
cmc
loop
push
xchg
call
daa
aad
xchg
cld
sarl
cltd
sbb
dec
aas
loope
hlt
stc
mov
push
insb
js
mov
fildll
notl
repnz
fwait
push
pop
jo
fwait
gs
jle
popa
cmp
lds
out
adc
lds
fisttpll
sub
sub
ja
out
jp
je
and
sbb
ret
add
push
and
lea
je
push
fdivl
jne
test
dec
call
stos
mov
cmp
aam
cmp
in
or
sub
pop
movsl
xchg
lret
xchg
xor
cltd
xor
and
inc
cmp
sub
lahf
sarl
adc
jb
stc
jg
jge
dec
and
jl
add
push
sbb
in
mov
cltd
daa
adc
gs
sub
addr16
push
sub
pop
cli
mov
xchg
cmpl
gs
xor
jle
out
insb
fildl
push
nop
data16
fsubr
xchg
pop
adc
mov
ret
insl
cmp
pushf
faddl
mov
repz
je
pop
daa
pop
les
jmp
std
mov
xchg
enter
xchg
shlb
or
mov
ret
cmp
add
int3
cmp
movsl
in
and
dec
loopne
lock
xor
jp
dec
lret
sbb
ss
shrb
inc
jnp
lcall
lahf
jbe
out
in
dec
xchg
scas
jns
xor
sbb
push
rcl
rolb
or
fbstp
mov
stos
stos
hlt
idiv
outsb
sub
push
icebp
test
cmp
js
out
push
jbe
add
data16
lahf
pop
and
dec
push
outsl
jecxz
into
jle
sub
cmp
push
lea
sub
and
inc
push
lock
lcall
xor
lret
sahf
insb
or
jmp
popf
dec
imul
mov
in
cmp
mov
mov
rorb
sbb
cmp
or
stc
out
jnp
pop
je
xchg
jae
and
ret
pop
jp
mov
or
and
adc
fildl
mov
test
adc
jmp
mov
lock
cmp
xor
sbb
or
push
lcall
mov
std
mov
daa
cmpsb
cmp
push
clc
ret
dec
push
repz
push
inc
les
adc
insl
cmpsb
xor
xchg
sub
jg
jnp
pop
sub
clc
pop
and
jmp
clc
test
out
scas
test
sarb
ljmp
cs
pop
adc
sbb
std
cmpsl
mov
movsl
push
mov
mov
mov
test
mov
in
jbe
mov
imul
pop
add
mov
pop
les
add
shll
pop
ret
mov
fcomps
div
das
adc
or
insl
sub
mov
pop
popa
movsb
imul
push
std
sub
and
pop
mov
enter
jecxz
mov
sbb
and
fnstcw
mov
cmc
stc
je
cmp
stc
sbb
lahf
add
cld
adc
and
mov
and
shr
ret
jg
jne
stos
pop
jno
lock
lcall
push
pop
int
shr
repz
xchg
inc
mov
xor
call
add
loopne
rcrl
xchg
fdivrl
push
jp
and
lods
dec
cmp
push
or
dec
cmp
and
outsb
push
xchg
rcrl
std
push
filds
repz
sahf
loopne
jnp
or
std
leave
push
xchg
aas
dec
push
push
leave
hlt
sbb
nop
in
adc
add
cmpsb
or
mov
mov
cltd
popf
loop
lock
push
add
and
insb
sbb
xchg
xchg
or
lods
xchg
and
xchg
inc
push
xor
mov
test
push
mov
add
pop
xchg
dec
push
je
and
mov
ljmp
cmp
insb
xor
inc
cmp
out
push
mov
mov
arpl
hlt
xchg
xchg
or
shlb
jns
subl
or
dec
in
ret
push
pushf
sub
mov
push
jmp
out
nop
ss
xchg
popf
pop
mov
aaa
xchg
xor
cmc
jns
xchg
pop
aaa
mov
int
dec
das
hlt
stc
or
push
div
push
addr16
mov
or
ror
add
clc
insb
adc
pop
mulb
orl
loop
cli
mov
push
maxps
xchg
andb
outsb
jnp
adc
or
jg
roll
pusha
push
les
jno
stos
arpl
cmp
idivl
popa
mov
les
cld
popa
andl
dec
jbe
add
data16
sbb
xchg
jno
jo
or
pop
scas
or
negl
push
ljmp
stos
dec
dec
pop
push
cmp
sub
jno
cmpsb
cwtl
popf
ret
aas
testb
inc
mov
pop
movsb
cltd
out
ljmp
dec
xchg
adc
inc
cmpl
popf
daa
push
fsubrs
outsb
call
das
pop
xchg
push
push
pop
sbb
cmp
bound
outsl
mov
insl
popf
jg
jp
test
dec
pop
xrelease
cmc
xlat
clc
pop
pushl
mov
lret
ret
aaa
outsl
std
jl
xchg
lret
arpl
xchg
fimuls
sub
inc
mov
xchg
add
aam
sahf
sahf
inc
dec
sarb
mov
sub
inc
dec
rorl
cmp
pushf
mov
mov
je
and
add
dec
insl
mov
repz
ja
fldt
leave
xchg
pop
push
roll
mov
je
je
adc
sub
inc
scas
test
aad
mul
popf
jl
push
dec
fbld
insb
enter
jno
jmp
iret
pop
out
aam
xchg
dec
inc
es
push
xchg
movsb
mov
outsb
mov
pop
movsb
fbstp
lcall
rcl
gs
or
xchg
repz
mov
and
cmpsl
cmc
das
pop
stos
cmp
pushf
daa
mov
loope
in
in
mov
or
es
enter
push
movsl
iret
sbb
aad
call
addr16
hlt
aam
sti
xor
nop
je
rol
or
pop
fisubrl
fdivr
outsb
cmp
mov
push
incl
cltd
mov
hlt
push
cli
pushf
mov
pop
jnp
fnstcw
mov
pop
ret
in
cmp
xchg
cmp
and
sbb
popf
xor
pop
shll
push
pushf
dec
mov
div
fadds
sbb
loopne
and
pop
imul
loope
xor
pop
or
xchg
sbb
leave
cmp
lds
jmp
stos
push
lods
pushl
fcoml
jne
mov
mov
push
push
mov
lods
dec
xchg
dec
or
cmp
adc
movsl
outsb
jne
shrb
fcmovnb
mov
lret
or
repnz
call
dec
add
es
inc
add
divl
jns
in
dec
mov
xchg
cmp
idivb
rorb
jmp
ljmp
in
gs
ret
mov
leave
test
add
cltd
xor
xor
lds
rol
fcmovne
sub
mull
cmp
cmp
lods
push
jle
pop
in
mov
cwtl
push
pop
js
mov
lcall
and
daa
jl
test
jae
js
jae
repnz
fiadds
shl
xchg
adc
mov
pop
and
cwtl
push
fisubrs
outsb
mov
pop
dec
jle
leave
es
stos
imul
push
ret
xchg
and
stos
cmp
or
icebp
xor
mov
in
js
jmp
popf
mov
and
jl
stc
xor
out
xor
jbe
push
adc
mov
cmp
stos
adc
mov
rorb
imulb
lahf
ret
dec
pushf
incl
cmp
in
sub
xlat
gs
sti
mov
test
repnz
scas
sbb
out
xor
mov
mov
push
pop
inc
fcmove
stos
les
and
mov
insb
and
mov
icebp
push
push
lahf
lds
jp,pt
pop
adc
into
gs
and
pop
and
outsb
and
test
xchg
cmp
scas
es
movsb
cmp
icebp
inc
pop
mov
dec
std
dec
adc
insb
adc
cmp
mov
cmc
pop
lock
scas
mov
adc
jbe
pop
aam
jl
hlt
and
iret
clc
idiv
pop
mov
add
popf
cmp
scas
loop
inc
pop
or
sub
jl
fdivrp
jecxz
dec
ret
inc
icebp
add
aaa
xor
pop
mov
in
loop
rcll
sub
sti
adc
fcoml
lcall
mov
cmpsb
cmp
pop
xorb
cmp
push
in
jb
jle
inc
lret
inc
jg
inc
mov
in
pop
sbb
sbb
cwtl
mov
ffree
dec
sti
decl
shlb
add
scas
pop
mov
and
mov
fs
std
mov
pop
out
popa
adc
test
pop
sub
cmp
fldcw
std
xchg
jle
mov
mov
cmp
xor
or
lret
mov
xor
xchg
or
xchg
add
mov
mov
fwait
scas
xchg
pusha
and
fwait
sub
push
ret
xor
push
mov
and
int
arpl
xor
jl
jae
ja
lea
and
mov
jb
mov
bound
pusha
pop
inc
pushw
mov
jnp
bound
inc
ret
sbb
or
mov
ljmp
lret
pop
pop
push
mov
cmp
mov
icebp
lret
dec
xor
lods
lock
rorb
push
dec
jmp
pop
mov
push
clc
imul
pop
imul
jge
sbb
or
pushf
pop
dec
mov
fsubr
xor
cmp
xor
lret
sub
mov
clc
pop
xchg
bnd
dec
mov
cltd
mov
inc
int3
nop
jns
pop
sbbl
stc
out
add
jp
jns
add
push
fsubrp
bound
add
nop
aas
mov
sahf
mov
andl
mov
dec
imul
push
inc
xchg
cmpl
popf
jb
push
and
add
mov
cmc
add
ds
out
fwait
dec
mov
jnp
std
add
mull
dec
lock
cli
inc
cmp
out
pop
pop
cmc
adc
aad
cmp
cmp
mov
or
sub
push
jecxz
pop
imul
std
cmc
mov
xchg
fld1
bound
icebp
jo
inc
and
stos
push
push
imul
jbe
adc
adc
fstl
nop
movsl
loopne
push
out
divl
negb
jge
ffreep
pop
cmpl
jg
rorl
lods
negb
dec
cs
repnz
sbb
sub
outsb
pop
movsb
sbb
mov
mov
or
cwtl
test
movsb
lock
sbb
mov
mov
dec
cli
add
int3
jge
xor
cmp
cmp
test
mov
mov
adc
mov
aam
in
dec
pop
in
push
icebp
sub
mov
mov
int3
fstl
fidivrl
cmpsl
into
mov
xlat
mov
pop
mov
jb
inc
inc
mov
and
push
pop
in
push
or
mov
mov
add
daa
inc
mov
jmp
jecxz
ja
je
mov
jbe
or
inc
jecxz
das
fucomi
jl
sbb
jmp
adc
sub
jmp
roll
pop
mov
pop
adc
sbb
push
movsb
lds
mov
and
mov
sub
outsb
jmp
test
sbb
imul
mov
adc
pop
mov
ret
pop
pop
mov
pop
out
adc
pop
add
fmuls
push
sub
mov
out
and
dec
jmp
push
mov
sub
pop
ds
fstps
xor
shrl
lods
xchg
cmp
dec
les
push
jp
fwait
sub
jecxz
clc
test
sarb
jns
sbb
or
xchg
test
sub
mov
fs
fs
jb
insb
test
data16
jge
jge
mov
xor
lret
sub
dec
adc
cmp
sub
addr16
notb
in
out
into
js
ja
inc
in
xchg
pop
cs
jnp
icebp
int3
fcmovne
mov
inc
jmp
push
adc
rcrb
fwait
add
pop
jge
std
jl
mov
jecxz
ds
mov
testl
icebp
push
fs
decb
mov
cwtl
loope
sbb
das
mov
jecxz
clc
xchg
add
adc
int
aad
xlat
inc
fildll
aaa
cltd
jbe
movsb
mov
aas
repz
jno
bswap
and
mov
ror
lahf
ret
in
jmp
dec
clc
pushf
je
jmp
popa
mov
push
jmp
jp
iret
fwait
ret
fwait
sub
out
cmp
xchg
mov
jg
and
push
mov
sahf
sbb
lods
sub
sbb
xlat
cmpsb
xor
cmp
xchg
ljmp
mov
pushf
adc
cmc
cld
fnsave
jns
mov
test
adc
mov
and
stos
repz
movswl
jmp
loope
jmp
incl
mov
mov
mov
popf
and
push
pop
push
xor
and
sub
arpl
dec
loope
pop
mov
xor
push
mov
test
in
mov
push
mov
cmp
or
js
mov
rol
jmp
mov
inc
or
fsubrl
mov
mov
ret
pushf
enter
push
into
mov
mov
sbb
inc
ss
clc
inc
jns
pop
loope
xor
mov
mov
sbb
es
mov
sahf
aad
xor
stos
leave
pop
daa
pop
nop
sub
hlt
cs
fucomi
cld
sbb
xor
loopne
and
push
dec
movsl
shll
jae
inc
fbstp
mov
fnstsw
test
and
fwait
push
mov
gs
xor
jae
outsl
ljmp
cmpsb
cmp
mov
pop
mov
enter
jo
dec
mov
lea
dec
sub
jge
add
int3
lods
inc
xor
mov
enter
adc
lahf
lahf
stc
mov
adcb
xchg
int3
sbb
ficoms
jnp
mov
mov
movsl
int
loop
adc
insl
test
imul
mov
lds
repz
scas
fsts
loope
fnstcw
outsw
pop
xchg
pushf
sub
out
loopne
popa
loopne
mov
or
mov
push
mov
pop
or
cli
lods
fistpl
mov
dec
push
out
out
aaa
sbb
insb
push
or
mov
std
sahf
fiadds
xchg
jp
fistl
shrl
push
add
arpl
jns
pop
mov
inc
cli
rclb
and
lds
jne
lcall
jb
pusha
jmp
mov
push
aad
lock
ss
fwait
aam
and
adc
in
into
mov
sub
pop
xor
dec
fimuls
stos
or
push
cmpsb
mov
push
sbb
and
xor
stos
mov
or
dec
xor
push
dec
arpl
adc
xor
or
adc
es
insl
xchg
xlat
jo
mov
push
scas
or
adcb
into
pop
fisttps
cmp
stos
aam
xchg
test
add
dec
repnz
repz
dec
imul
aam
mov
mov
inc
inc
mov
clc
outsw
fldl
mov
jmp
shl
loope
xchg
aas
out
cmp
or
xchg
or
cmpb
add
pop
mov
sbb
pop
scas
rolb
movsb
inc
mov
lods
mov
pushf
xor
imul
lock
add
gs
es
inc
pushf
or
mov
push
sarb
adc
or
or
lahf
ss
sbb
repnz
push
cmp
mov
sub
inc
mov
push
imul
mov
es
inc
ja
adc
orb
pop
int3
sub
sbb
cwtl
rolb
inc
mov
xchg
int3
fs
outsb
mov
sbb
dec
push
mov
pop
test
sub
dec
and
cmp
js
jecxz
pop
dec
sti
orb
addr16
cmpsl
stos
sahf
xor
nop
xchg
pop
mov
dec
int
inc
xchg
push
mov
je
pop
or
xor
pop
loope
push
pop
call
sbb
out
jle,pn
mov
loope
xchg
push
add
xor
adc
mov
test
cld
dec
jne
and
scas
jl
insb
ljmp
dec
jne
sbb
adc
cmpl
ss
sbb
inc
cmp
fisttps
popa
js
jno
adcl
lret
arpl
lret
jns
out
in
sub
addr16
lcall
jge
or
in
das
cmc
fidivrs
or
xchg
pop
rcll
cmp
insl
dec
aam
mov
or
nop
push
sbb
sub
jecxz
fnstsw
or
les
and
or
mov
imul
outsb
mov
loope
call
mov
dec
pop
cmp
inc
icebp
pop
push
mov
in
xor
int
fs
mov
push
sti
out
int
push
and
dec
loope
sub
shll
lods
pusha
adc
outsb
mov
inc
and
dec
icebp
js
sbb
out
mov
dec
jecxz
xchg
mov
pop
mov
add
xchg
inc
mov
inc
movsb
jle
roll
stos
pop
icebp
mov
addr16
sti
insb
mov
je
jl
sub
mov
in
fs
sub
in
in
cmp
imul
add
jno
cmp
outsl
ret
ja
mov
sub
xchg
push
loop
lock
repnz
push
jle
dec
ja
jmp
jle
xchg
mov
in
mov
mov
push
int3
add
jge
sub
add
jl
loopne
movsl
sbb
jle
push
movsl
sbbl
sbb
test
leave
mov
nop
jg
ret
sub
sar
adc
std
js
sbb
js
pop
xchg
add
adc
cmp
xchg
pop
pop
out
adc
sahf
cs
subl
add
xor
jmp
pop
stos
or
outsl
jbe
dec
cmp
jg
test
repnz
fimuls
addr16
xchg
mov
push
mov
sub
dec
jb
mov
mov
ret
int
in
cmc
or
dec
jne
xor
shrl
mov
nop
testl
dec
pop
cwtl
xchg
test
iret
rorl
jno
popa
push
dec
cmpl
aam
sbb
xchg
adc
push
push
shl
and
sbb
xchg
or
add
mov
pop
rep
mov
cmpsl
sub
mov
test
jae
shll
aam
dec
scas
imul
and
mov
ret
and
cltd
inc
dec
cmp
fs
jne
iret
inc
add
sbb
pop
mov
sub
mov
stos
subb
jno
hlt
pop
jbe
out
inc
cmpb
das
mov
std
pushw
mov
in
jle
mul
sub
ret
into
jb
sbb
mov
adc
mul
mov
or
test
mov
xchg
negb
xor
adcb
dec
shll
xchg
sbb
or
pop
rcrb
xchg
jg
in
add
jae
jno
lret
in
lret
enter
scas
test
mov
or
call
sbb
cmp
jae
ficompl
and
cmpsb
mov
xchg
insb
fcom
push
std
rcll
pop
cli
xor
lock
or
dec
dec
int3
push
fldcw
mov
and
jae
vcvtsi2ssl
gs
lods
test
js
pop
sub
jp
adc
xor
loope
push
call
out
bound
inc
cmc
mov
in
mov
mov
enter
dec
lcall
sub
in
clc
xlat
jmp
fisttpl
imul
mov
in
pop
scas
cmp
and
inc
pop
and
lret
and
mov
adc
into
cli
daa
jne
arpl
and
gs
int3
xchg
or
fstps
lock
lods
imul
mov
xchg
fld
and
xchg
stc
pop
scas
leave
cmp
xchg
les
mov
daa
fsubl
pop
xor
lods
cmp
nop
sub
adc
cwtl
pop
mov
cmp
or
cmp
aad
push
inc
sub
dec
push
add
pop
jbe
ret
les
lods
imul
xchg
xchg
pop
inc
cmpl
mov
mov
xchg
xchg
adc
popf
ds
sbb
rcll
popa
mov
mov
popf
pop
inc
adc
pop
mov
lret
cltd
les
pop
lock
cmp
popf
jnp
cmp
push
ret
and
push
pusha
cmp
xlat
inc
sbb
xchg
add
dec
icebp
fisttps
cmpsl
rorl
fs
sti
clc
xchg
ss
test
imul
sahf
sbb
sbb
adc
lcall
aad
nop
aam
ja
sbb
push
mov
or
push
andl
cld
in
lret
enter
and
enter
out
cld
leave
and
push
jge
pop
int3
mov
into
je
mov
add
ret
lock
cmp
scas
jns
ss
sub
je
dec
push
ficoms
sbb
xchg
mov
and
push
movsl
mov
insb
imul
inc
xor
cmp
repz
pop
mov
mov
daa
adc
mov
mov
jno
out
mov
jnp
sbbb
jne
test
ficoml
xor
inc
xchg
nop
cmp
mov
pop
mov
outsb
adcb
inc
call
push
aaa
mov
ror
popf
jb
jg
sub
and
or
std
lcall
sbb
sbb
orl
xchg
or
mov
pushf
or
cmp
cmp
ret
jmp
sbb
adcb
xlat
sub
or
inc
sbb
cld
dec
scas
lock
mov
fldcw
aaa
loop
lret
fisttpll
clc
in
cmp
das
hlt
jp
jnp
out
adc
shlb
flds
push
pop
sbb
adc
shll
sbb
pop
call
jle
xchg
pop
add
pop
pop
xchg
mov
jae
push
or
and
lcall
lds
xor
pushf
push
xor
and
pop
out
jl
bound
pusha
je
xor
dec
dec
mov
adc
clc
imul
adc
adc
in
dec
inc
icebp
mov
sbb
jbe
xchg
hlt
xlat
stos
jno
movsb
adc
jp
scas
insl
or
dec
add
xchg
mov
stos
in
outsl
mov
outsb
aas
out
cmp
xchg
das
movsl
cmpsl
fsubr
xor
ret
popf
push
sbb
leave
inc
test
out
in
lcall
mov
or
adcb
sbb
xor
cmp
or
sub
cmp
es
bnd
sub
cmp
adc
fcompl
dec
pop
test
push
in
loopne
mov
mov
enter
mov
shll
sbb
test
fidivs
dec
es
inc
cmp
mov
test
fmuls
les
sti
xor
xor
test
sub
xor
xchg
cmp
cmp
or
popa
mov
pop
scas
test
lahf
lret
or
or
xchg
sbb
lret
push
adc
mov
mov
cmp
push
cmp
cs
data16
xor
mov
fistpll
push
jae
aad
xchg
pop
jmp
or
push
sbb
xchg
in
push
lock
xor
sbb
inc
test
in
lds
inc
adc
imul
scas
int
call
hlt
mov
rcrl
pop
or
cs
test
jns
adc
jns
push
dec
jge
xchg
ss
inc
mov
pop
repz
cmp
andl
popa
adc
movsl
add
popa
rcrb
aaa
test
stos
jmp
and
add
cltd
nop
outsl
int
xlat
inc
cmpsl
sbb
mov
mov
in
pop
adc
rolb
nop
mov
aaa
int3
or
pop
jbe
cmp
dec
push
pop
inc
mov
mov
jbe
xchg
and
pop
sub
out
add
ja
inc
inc
and
fmuls
xchg
repnz
inc
subl
or
pop
hlt
daa
xchg
fisubrl
lds
in
push
adc
mov
test
js
stc
push
inc
mov
inc
icebp
subb
aas
jl
mov
xor
pop
std
jb
cmp
jecxz
add
mov
push
sbb
sbb
gs
xchg
sbb
push
outsl
add
sbbb
stos
xor
jno
add
and
cmp
pop
mov
push
ds
mov
mov
in
outsb
rcl
mov
pusha
in
jae
cld
add
mov
es
push
add
outsl
imul
xchg
push
adc
xchg
rol
outsl
test
xor
mov
aas
and
pop
cmp
mov
in
mov
sahf
shr
xchg
fistpl
mov
or
daa
aad
adc
jl
dec
dec
rcrb
test
sahf
stos
mov
nop
and
aaa
inc
xor
push
mov
pop
jg
enter
jbe
test
inc
popl
pop
and
add
les
fmull
adc
jmp
fwait
pop
in
adc
loop
xchg
dec
xchg
cmpsb
in
in
mov
xor
mov
getsec
mov
push
pop
push
add
add
adc
dec
cmpsl
inc
in
loopne
mov
xor
fisubl
rcrl
icebp
xchg
add
ja
xchg
jnp
ret
cmp
push
sbb
xchg
push
repz
je
and
cmp
xchg
in
fstl
xchg
clc
push
ljmp
cmpsb
inc
mov
xchg
mov
jae
or
in
mov
sbb
cltd
mov
sbb
jae
mov
rolb
jl
push
das
add
pop
xor
fcoml
addb
jl
lods
pop
shrd
rolb
push
shlb
scas
and
sub
jns
in
add
pop
test
inc
jmp
stc
mov
loope
xchg
lcall
jbe
mov
add
push
sti
sbb
nop
xchg
xchg
dec
jae
out
and
mov
pop
popa
push
popf
mov
or
adc
mov
mov
cmp
xor
mov
adc
jb
xchg
bound
test
sbb
ds
fwait
dec
mov
adc
int3
in
mov
xor
push
fucomi
cmp
aam
xchg
sub
add
dec
or
shl
loopne
fidivrl
sub
mov
xorb
jp
inc
or
mov
imul
sub
or
dec
notl
movsl
aaa
ret
sbb
mov
mov
test
lods
mov
push
das
cmp
fs
imul
jb
sub
ret
push
iret
lret
xor
xchg
jae
sub
xor
fucomip
push
std
sbb
sub
push
mov
outsb
inc
shlb
jno
push
mov
cmp
or
and
inc
hlt
jl
push
insl
fwait
mov
pop
add
fisubs
cmc
stos
or
push
fmuls
leave
mov
loop
popa
loop
cmc
in
pop
mov
dec
pop
inc
sbbl
xor
insl
pop
add
or
ja
xchg
addr16
sub
fdivr
xchg
push
push
daa
pop
xor
cli
sbb
xchg
aam
sbb
mov
jmp
xchg
adc
neg
sub
loop
xor
sbb
xor
pop
mov
mov
sub
mov
loopne
cmp
push
mov
pop
jg
mov
repnz
divl
jecxz
test
aam
lcall
mulps
and
mov
js,pt
loop
cmpsl
scas
fisubs
loope
adc
jmp
les
es
lcall
sub
ficoms
insl
inc
fdivrs
aaa
cmpsl
inc
movsb
in
cmpsl
add
fisttpll
push
cwtl
mov
movsw
sub
sub
inc
cmp
lds
mov
fstl
scas
sub
cs
lock
mov
or
pop
inc
fimuls
fisttps
jae
sbb
les
sbb
ljmp
jo
sahf
stc
pop
gs
test
jno
lods
movsl
lret
push
mov
sub
ret
push
enter
ss
inc
stos
push
mov
daa
cmpsb
inc
lcall
pop
ljmp
dec
fwait
les
lods
sub
mov
mov
mov
jecxz
lods
sub
xchg
cmpsb
imul
mov
cmp
das
jmp
es
mov
mov
sbb
xor
xor
xchg
pop
mov
add
popa
cmp
aad
add
insb
mov
jae
pusha
mov
pop
mov
or
dec
sub
xor
or
pop
push
packuswb
pop
dec
sbb
pushf
mov
inc
inc
adc
add
sti
mov
into
jae
fmul
push
sbb
out
fisubl
add
adc
rorb
loopne
push
pop
popa
pop
push
ret
aad
fwait
and
xlat
aam
adc
or
fmul
lds
incl
aaa
push
pop
sti
fisttpl
pop
pop
cwtl
pop
adc
push
scas
lcall
ss
cli
sahf
jno
aam
xorl
js
leave
sbb
data16
dec
aad
mov
out
or
int3
pop
fcmovnbe
adc
imul
cmp
cmp
lock
sbb
js
nop
fistpl
push
enter
xchg
jno
bound
and
jg
jno
cmp
pop
cmp
cs
popf
cs
push
xchg
imul
pop
sti
jno
jp
push
pop
pop
out
jb
sar
mov
stc
out
leave
incl
pop
cs
jp
dec
xchg
int3
adc
xor
daa
pop
xchg
jno
and
push
int
mov
jno
push
adc
aaa
into
aaa
aad
ljmp
mov
jnp
aad
enter
outsl
imul
adcl
push
add
or
push
push
out
outsb
into
and
mov
xchg
push
inc
inc
cmp
push
les
scas
inc
mov
mov
push
sbb
clc
movsl
jno
pop
push
adc
insb
add
adc
inc
xchg
ja
mov
into
shll
dec
ss
ljmp
inc
test
mov
mov
xor
iret
movsb
xlat
imul
add
or
ja
adc
adc
shll
out
shl
sub
fsubl
xchg
jno
loope
jmp
xchg
jge
ss
xchg
movsb
pusha
sub
popf
mov
pop
ljmp
jg
mov
aas
adc
ficompl
mov
stc
cmp
or
mov
mov
imul
push
mov
frstor
es
femms
jo
lahf
lret
mov
push
jb
mov
sbbb
mov
push
loope
and
cwtl
subl
mov
pop
mov
sub
xchg
out
test
mov
out
rorl
xchg
in
or
push
pop
mov
add
push
xchg
fdivrs
cmp
je
sub
adc
cwtl
and
mov
mov
lret
jbe
cs
pop
and
fwait
inc
xor
jbe
xchg
sbb
cld
loop
outsb
dec
add
bound
out
xchg
mov
jle
pop
pop
sahf
inc
pushaw
call
imul
xor
les
test
das
adc
sub
imulb
and
inc
mov
push
push
test
not
rolb
pop
stc
sahf
dec
repnz
mov
inc
push
lods
cmp
out
mov
aad
mov
dec
setae
mov
jno
or
push
pop
push
jle
cmp
jno
mov
cmp
sti
insl
xchg
cmp
push
cmp
dec
push
sbb
pop
dec
mov
stos
mov
nop
add
mov
test
mov
insl
sbb
movsl
inc
in
adc
sbb
xchg
sub
jecxz
adc
cmpsl
push
inc
and
arpl
xchg
or
sbb
mov
mov
mov
mov
call
sub
cwtl
rorl
addb
add
sahf
enter
aad
loop
xchg
lock
daa
shrl
iret
adc
inc
call
stos
mov
xchg
push
jns
fcomp
jns
push
fmull
cmp
pop
cltd
mov
mov
lods
popf
nop
xor
push
aad
add
cmpsl
into
dec
and
dec
mov
push
xchg
xchg
dec
mov
mov
loope
inc
adc
cmpl
push
pusha
imul
rcrl
loopne
jle
dec
mov
movsl
repnz
repnz
inc
sub
repz
mov
sub
jmp
xchg
addl
jge
mov
sub
popf
test
insb
icebp
or
std
lods
jbe
insl
xor
xchg
movsb
cmp
mov
testl
movsl
adcl
adc
xor
mov
fxch
adc
je
push
fdecstp
cmp
js
js,pn
js,pt
imul
stc
xlat
out
dec
mov
iret
mov
add
pop
jmp
cmp
push
inc
rorb
cmpsb
aam
out
rclb
add
jnp
out
jae
ljmp
or
cltd
js
aad
adc
cld
data16
sbb
les
mov
push
lods
cmp
mov
cmp
cltd
into
fistpll
movntps
pop
dec
insl
imul
mov
mov
cmp
xor
dec
sti
add
sahf
jp
repz
mov
lret
icebp
cmpsl
or
cwtl
mov
jecxz
lds
dec
test
ja
jne
sub
pop
mov
into
jno
adc
lods
loop
cmp
or
push
mov
xchg
cmp
sbb
push
jo
lahf
clc
fs
dec
adc
mov
pop
out
mov
shl
fnstsw
inc
lea
sub
aam
rcl
in
sti
popa
fstpl
cltd
flds
inc
xlat
push
stc
xchg
sub
dec
outsb
dec
mov
sbbb
negb
add
hlt
push
test
clc
sahf
ror
inc
push
nop
ljmp
push
pop
push
lret
push
fildll
out
jmp
cmc
cmpsb
pop
mov
sti
jge
sub
test
fs
arpl
movb
out
rolb
inc
sbb
or
test
xchg
das
in
aas
jp
out
neg
movsb
ja
jle
lock
popa
movsl
mov
mov
adc
ret
das
nop
dec
aam
call
mov
jne
pusha
pop
inc
pop
push
sbbb
xor
test
mov
push
push
push
ds
or
popf
xchg
xchg
js
cmp
sbb
jb
xchg
jge
inc
sbb
out
data16
fmuls
add
mov
inc
or
lret
pop
sbb
mov
aaa
cmp
lret
jge
jno
mov
jl
daa
push
imul
mov
les
sub
dec
cmpsl
lods
lea
mov
xchg
push
nop
addr16
test
leave
push
test
mov
rcrl
push
int
inc
setae
fiaddl
pop
cs
add
es
outsl
inc
adc
push
xchg
xor
mov
in
ljmp
lret
xchg
push
push
in
add
adc
cmc
idivl
mov
mov
mov
xlat
or
sub
cmp
sub
push
shl
in
mov
mov
jae
sbbl
fistps
es
mov
dec
add
test
aaa
data16
out
divl
lret
arpl
das
lds
mov
cmp
push
scas
cmp
jb
xlat
sbb
lods
cwtl
bound
repnz
or
jno
mov
enter
cmp
dec
pop
repnz
jno
jmpw
faddp
lock
int3
sbb
in
jo
adc
ds
nop
dec
and
xor
sbb
imul
in
inc
outsl
loope
mov
cltd
lods
jg
sub
lcall
aas
je
or
add
or
sub
mov
mov
movsl
or
out
adcb
pop
outsl
insb
aad
xor
in
clc
cs
repz
sbb
aaa
test
or
aas
and
cmp
ret
cwtl
mov
je
add
ret
cwtl
mov
loop
push
dec
and
jae
loope
jnp
jecxz
icebp
dec
cmp
mov
lcall
fadd
out
ljmp
jb
shrb
mov
fimull
mov
icebp
movsl
or
fwait
in
pop
dec
push
sbb
pop
jne
leave
mov
sbb
sbb
jbe
repnz
cmp
push
and
hlt
stos
mov
cwtl
je
dec
push
fs
mov
fsubr
fldenv
push
inc
mov
imul
push
jg
shll
int
inc
subl
gs
nop
insb
iret
adc
test
jmp
cli
fistpl
pop
xchg
mov
int3
aaa
push
addl
scas
insl
inc
push
jmp
mov
mov
mov
in
lcall
inc
inc
insb
lods
jnp
xchg
mov
aas
xor
mov
outsb
jns
rcrb
xchg
mov
out
insb
xor
cmc
xor
daa
pop
sub
jns
icebp
imul
xchg
lds
cmp
or
cmc
xchg
jno
andb
outsl
pop
add
and
and
lret
lods
sti
pop
or
gs
inc
adc
scas
rcr
out
loopne
fsubp
pop
mov
outsb
mov
adc
jno
pop
mov
jg
mov
mov
cmpsl
ret
nop
push
push
aad
stc
out
mov
mov
or
push
xor
adc
ljmp
arpl
in
data16
fsubl
call
pop
add
fcomp
in
push
jns
jge
or
int
cs
dec
mov
push
fldt
cmpsl
loop
mov
jae
aaa
outsb
pop
and
shl
imul
in
cmp
in
cmp
insl
mov
lea
adc
jle
push
dec
xor
mov
sbb
cmpsb
call
cmp
out
test
ret
xchg
js
add
jecxz
hlt
ds
mov
jnp
pop
xlat
inc
mov
xchg
xchg
pop
mov
sub
jae
jl
add
cwtl
mov
fwait
jnp
cmp
mov
xor
xor
pop
cli
and
push
fdivr
inc
es
sbb
mov
js
ds
mov
jmp
out
flds
sbb
jb
sub
in
mov
outsl
mov
add
xor
negl
mov
mov
shl
sahf
rcrl
test
fcmovnb
push
adc
mov
mov
mov
pop
mov
sub
jge
mov
lea
and
adc
ret
adc
lcall
dec
jbe
imul
stc
and
cmp
ja
stc
cmp
andl
lods
pop
inc
push
adc
repnz
stos
hlt
hlt
xchg
out
imull
mov
fnstenv
lret
adc
xor
add
xor
add
jae
orl
xor
ror
sbb
mov
add
jp
sar
inc
ret
clc
mov
inc
popf
ret
data16
xor
pop
ret
clc
sub
sub
mov
mov
push
pusha
mov
in
ds
jnp
imulb
add
test
ja
push
xor
bound
push
out
pop
or
jecxz
stos
sbb
lret
mov
inc
mov
or
sub
add
add
adc
leave
sti
xchg
into
and
sub
fnstcw
dec
dec
loop
sub
mov
push
and
sub
and
jl
adc
mov
loop
add
pushl
push
xor
mov
negb
call
daa
in
push
int3
aam
inc
sub
test
jo
mov
movsl
push
fs
sbb
iret
movsb
cld
xlat
push
mov
mov
xchg
les
add
lods
popa
in
or
movsl
lahf
push
inc
pop
sbb
mov
sub
jb
or
adc
pop
arpl
imul
jle
push
outsl
dec
outsb
popa
jno
mov
jg
sbb
mov
jge
fiadds
sahf
push
dec
xchg
jg
mov
test
inc
stos
push
jae
addr16
rcl
cmpsb
call
adc
sbb
bound
mov
add
dec
nop
or
xor
cmp
inc
sbb
and
jge
xchg
pop
outsb
out
cmc
xchg
sahf
jne
loop
ss
mov
cmc
dec
popa
mov
gs
mov
test
test
mov
xchg
iret
fwait
mov
out
push
icebp
jge
int
push
jl
mov
push
aaa
mov
fcmovbe
insb
dec
and
sahf
std
jb
test
or
xchg
pop
mov
mov
cmpsl
cmovno
repnz
push
jo
dec
mov
add
xor
xlat
lret
loope
xor
xlat
outsb
cmpsb
jl
jle
mov
cltd
mov
mov
pop
mov
in
sahf
daa
xchg
inc
paddsw
cld
aas
popa
mov
add
sbb
sbb
jo
outsl
push
out
loopne
inc
loopne
mov
cmp
out
pop
faddl
mov
cmp
or
jle
cmc
push
mov
inc
push
dec
jp
shlb
xchg
jnp
and
push
out
inc
push
cwtl
mov
lret
outsl
sbb
aad
mov
dec
or
xchg
add
mov
pop
inc
dec
sub
mov
push
cmpsl
mov
add
mov
es
test
rcrb
sbb
pop
mov
insl
add
xor
bound
cmpsl
inc
or
aad
xor
addb
in
test
dec
mov
das
js
pusha
mov
fwait
inc
enter
pop
repz
jmp
lahf
repz
sbb
sbb
iret
shl
adc
mov
ds
sub
mov
ds
bound
push
or
add
in
mov
xchg
jecxz
inc
into
lret
sbb
jb,pt
repnz
mov
inc
hlt
popf
and
lods
das
movsl
xchg
xlat
pop
and
lahf
addb
mov
cmpb
js
das
sbb
aam
mov
inc
dec
inc
ret
mov
sub
test
lea
adc
bound
mov
mov
fcmovne
pop
loope
lods
xchg
add
test
push
scas
test
iret
xor
rolb
icebp
jbe
mov
pop
loope
sub
inc
add
lds
or
iret
mov
xchg
mov
arpl
test
lods
in
add
xor
sbb
fs
mov
scas
cmp
mov
jnp
sub
xchg
cltd
and
js
test
hlt
jo
ja
rorl
addl
mov
sbb
push
mov
mov
jl
out
nop
mov
lahf
int
clc
xchg
mov
push
repnz
cltd
adc
movsb
push
adc
cmp
push
ret
loope
pop
ja
je
inc
insb
mov
repz
and
jns
addr16
fdivs
push
loop
mov
jle
std
lock
push
xor
ja
hlt
or
mov
add
mov
test
inc
xchg
scas
ja
push
mov
push
out
pop
pop
inc
call
xchg
daa
cmpl
inc
or
mov
inc
dec
dec
sub
sbb
mov
int3
xor
xor
cmp
cmpsw
mov
std
and
jecxz
out
in
mov
cmp
cmp
mov
xchg
jle
mov
inc
ret
ret
inc
data16
sbb
mov
adc
aaa
mov
mov
or
movd
mov
outsl
adc
adc
imul
or
and
stc
dec
or
adc
mov
xchg
out
stc
je
mov
daa
aam
subl
mov
inc
inc
pushf
enter
inc
fmulp
lret
mov
shl
push
or
jae
ret
cmp
ret
movsb
push
iret
mov
add
arpl
mov
add
fldcw
iret
lret
sub
aaa
gs
xchg
jge
sbb
int3
lods
mov
inc
add
idivl
mov
add
cmp
shlb
addr16
add
and
shl
movsl
iret
jg
arpl
fwait
mov
xlat
insl
cmp
nop
fcomip
in
sub
popf
jns
xor
dec
push
testl
adc
sub
stos
popa
out
cmc
bound
out
sbb
dec
lahf
pop
pop
lea
cmc
ss
mov
nop
inc
aad
mov
cltd
pop
adc
mov
dec
add
push
test
enter
hlt
jne
adc
ror
in
outsb
int3
cmp
nop
pusha
jo
sarb
cwtl
cwtl
cmp
fistpll
and
stos
add
imul
sti
fildl
rclb
add
ja
movsl
aam
sbb
pop
cs
andb
cs
xor
or
lahf
or
xchg
xchg
mov
cltd
push
mov
ret
les
jmp
aad
mov
stos
jle
sub
add
jo
les
cmp
jmp
jns
enter
psubsb
addl
ja
sub
pop
push
stos
mov
loopne
fnstenv
gs
adc
sbb
jmp
cmpl
cmpsb
xlat
pop
mov
pop
pop
mov
sub
cmp
push
incb
xchg
shll
dec
cmpb
mov
jae
sbb
xchg
xchg
sbb
mov
sub
sbb
cmp
xchg
or
mov
clc
aam
sti
jno
fidivrl
cmp
mov
fimull
xacquire
jl
mov
sbb
stos
outsl
sbb
aas
cltd
fisubrs
cmp
ficomps
movsl
xor
pop
sahf
pop
je
xchg
out
pushf
dec
sub
nop
out
dec
call
mov
adc
out
rcrl
xchg
xor
fwait
add
xchg
out
jbe
dec
push
popf
dec
in
addr16
mov
lods
push
lock
mov
roll
xor
inc
test
jno
dec
clc
fistpl
filds
fs
fst
mov
mov
cmp
pop
push
addl
mov
cld
cli
dec
jmp
int
les
or
loope
cmp
or
lods
imul
jnp
push
and
add
rol
hlt
inc
xchg
test
jle
incl
push
inc
insb
push
fists
adc
pop
in
mov
xor
xchg
gs
cmp
pop
and
xor
gs
xchg
test
inc
jno
nop
cmp
sbb
push
mov
mov
stos
mov
ficoml
cmpsb
cmp
cld
xchg
mov
addr16
sahf
lcall
xchg
fsubrp
in
pushl
int
es
jl
ficomps
mov
sub
lea
popf
or
mov
loope
dec
adc
std
in
push
add
xchg
jo
cli
stos
sbb
jns
sbb
mov
pop
xchg
call
in
inc
mov
rcrl
loop
loope
adc
add
cmc
xchg
popf
xchg
pop
movsl
xchg
jp
pop
daa
xor
daa
cmp
test
jl
cli
arpl
test
dec
icebp
add
or
outsl
pop
mov
andb
aaa
bound
fcompl
pop
ret
or
fdivs
adc
or
testb
pop
loopne
push
xchg
rorb
mov
sbb
jno
fnstsw
mov
pop
jo
in
scas
and
mov
add
add
in
leave
aas
call
push
outsl
rorb
sbb
sbb
cli
hlt
lea
mov
sub
aaa
jb
xchg
and
inc
mov
adc
aas
sbb
or
inc
sarb
pop
out
mov
negl
pop
mov
sbb
pop
popf
bound
icebp
push
mov
mov
push
aas
ret
mov
xchg
inc
pop
je
orl
add
xchg
xchg
into
test
push
iret
cwtl
int3
sbb
pop
ret
out
mov
dec
rcll
in
push
add
sbb
insb
daa
sub
dec
inc
dec
imul
or
lock
ljmp
sub
mov
sbb
sbb
mov
pop
mov
mov
adc
les
mov
imul
mov
loope
cmpsb
and
pushf
fdivrl
add
aam
cmp
add
and
add
and
push
mov
scas
test
inc
scas
inc
jle
mov
adc
lods
pop
lods
pop
inc
sub
cmc
test
mov
leave
repnz
stos
pop
add
pop
pop
je
dec
repnz
fiaddl
inc
lret
dec
jae
lds
and
insl
jne
pusha
jge
pop
es
dec
push
mov
scas
pop
xchg
popa
inc
sarl
jo
stos
xchg
les
jmp
rorb
push
fsts
xor
push
xorb
dec
inc
and
push
aam
push
mov
orb
rcll
aad
sub
xor
sbb
arpl
mov
out
idivb
insl
xor
int
inc
mov
xchg
mov
cmpsl
add
cmp
push
cs
xchg
pop
xchg
sub
addr16
addr16
pop
mov
lahf
arpl
ss
es
test
sub
rcr
push
mov
jne
mov
sbb
in
and
shr
add
jl
push
lock
pop
movsb
sub
add
xchg
sub
mov
jmp
pop
pop
push
push
imul
ljmp
dec
or
xchg
cld
xchg
incb
or
lret
dec
loop
leave
lods
ret
and
leave
xor
test
aad
mov
xchg
inc
pusha
jae
shlb
aam
lock
ds
fidivrl
add
pop
popa
xor
inc
lea
arpl
jo
ss
pusha
sub
mov
into
insb
and
push
outsb
xchg
popf
int
dec
mov
inc
push
sbb
jmp
fwait
testl
adc
pop
lea
cmp
mov
pushf
insb
adc
enter
test
xor
xor
adcl
xchg
ja
pop
int
ds
test
sbb
das
or
jp
and
mov
mov
iret
or
mov
and
jmp
notl
ds
lahf
in
inc
mov
jge
cmpsl
repnz
jmp
mov
andb
mov
leave
mov
call
xchg
cmp
jns
inc
stc
stos
inc
orb
mov
jle
lods
sbb
icebp
aaa
jae
cmpsl
and
pop
pop
sub
scas
push
mov
cmpb
sbb
out
inc
loop
xor
repz
sbb
jne
int3
pop
and
es
idivb
push
loop
fmul
mov
mov
add
es
jnp
xchg
mov
imul
lds
imul
pop
cmp
jnp
xor
mov
notb
inc
xchg
xchg
shlb
les
xchg
int
mov
xchg
mov
movsl
in
and
ds
orb
add
inc
aam
add
fstpt
push
aad
shlb
lds
inc
divb
lods
push
enter
and
jle
xor
ss
fcomps
in
int
xor
repnz
adc
or
add
sub
fsubrs
jl
imul
outsl
mov
mov
outsl
pop
cmp
test
cmp
or
xchg
xor
mov
sub
loop
arpl
push
push
lea
shl
add
xlat
stos
inc
bnd
imul
icebp
jns
dec
sub
push
mov
dec
sbbb
and
mov
sub
mov
pop
mov
fwait
jl
jns
mov
call
jmp
jo
add
mov
sbb
mov
sbb
mov
ror
push
dec
mov
ret
mov
xchg
fs
pop
fildll
or
adc
mov
or
mov
insb
inc
in
mov
ds
mov
dec
cmp
mov
pushf
ret
add
mov
xor
inc
cs
out
mov
inc
mov
lret
cmp
imulb
inc
sub
dec
dec
dec
stos
mov
dec
and
mov
popf
push
jecxz
int
push
mov
mov
int3
or
jno
loopne
inc
xchg
and
mov
push
mov
clc
adc
dec
mov
sub
dec
aad
inc
sbb
lret
lret
cli
mov
hlt
aaa
pop
sub
push
fildll
pop
scas
dec
sbb
and
int
mov
sbb
sar
gs
insb
ja
aad
jae
cli
pop
xor
inc
negb
js
in
push
push
pop
sbb
push
jmp
inc
jge
rcl
cli
cmp
movsl
rorb
ret
daa
cmp
mov
ret
loop
pop
sbb
inc
mov
fs
xchg
sbb
sbb
sbb
mov
cmp
xchg
sub
arpl
enter
xchg
and
or
aas
imul
insl
out
pop
icebp
mov
insb
jbe
lret
test
xchg
mov
mov
test
jg
push
push
push
ja
jns
mov
ja
lcall
pushf
push
out
xchg
mov
sbb
loopne
leave
in
xbegin
pushl
movl
xor
int3
mov
push
dec
cmp
std
insl
mov
je
cmpsl
test
cmp
xchg
sub
sub
das
mov
push
arpl
aad
xchg
int
out
mov
clc
xor
popa
mov
int
xchg
in
aad
ret
out
aas
push
inc
mov
shl
mov
jne
repnz
fs
addr16
or
push
mov
xor
enter
or
sbb
insl
rclb
mov
xlat
jo
fstpt
push
cmp
and
mov
pop
scas
cwtl
mov
pop
sub
push
out
lahf
adc
je
leave
pop
xchg
fdivr
jo
pop
jmp
or
push
lcall
ja
mov
sub
mov
stos
xchg
outsb
pop
or
xor
scas
cwtl
orb
arpl
xchg
pushf
lcall
mov
lcall
mov
mov
ljmp
or
xchg
aaa
test
hlt
sub
adc
jo
pop
inc
jo
pushf
or
ljmp
mov
jno
push
loopne
mov
inc
adc
cltd
loop
inc
jae
sbb
mov
cmp
mov
sub
xchg
leave
xchg
xchg
jno
mov
cld
aad
jno
shrb
pop
cld
sub
mov
adc
ljmp
je
mov
pushf
addr16
ret
or
mov
addb
push
push
shll
lea
inc
out
mov
or
xor
pop
out
jge
or
ret
repz
std
sbb
inc
gs
or
call
or
or
cli
orb
xchg
and
fsts
ds
add
out
pop
mov
xor
sub
movsl
or
dec
mov
cmp
sub
dec
aam
lock
inc
fsubr
and
xor
setne
pop
roll
or
xchg
out
das
add
imul
lds
inc
inc
mov
fdivs
les
jmp
in
js
xchg
jns
fistpll
jne
mov
sub
mov
xor
orb
pushf
ljmp
pop
test
addr16
sub
lds
mov
cmp
fcmovnb
mov
outsl
outsb
push
fmuls
push
call
add
das
stos
test
fs
ss
inc
mul
insl
push
lods
ss
insl
and
add
mov
lods
xchg
jb
mov
popf
ret
add
int
popa
adc
jg
xchg
jmp
mov
mov
mov
lret
cmc
gs
sbbl
xor
scas
shrb
add
fisubl
mov
mov
mov
xlat
pop
leave
fiadds
and
in
in
xchg
std
cwtl
add
inc
add
push
lea
lret
sub
sbb
xor
fstpl
mov
pop
lcall
xchg
inc
push
or
in
or
cmc
jno
and
ds
ret
cli
dec
and
nop
jmp
in
call
add
jle
popa
mov
mov
mov
dec
gs
pop
gs
fldcw
dec
mov
push
fdivr
and
addb
dec
mov
fldl
shll
mov
jo
dec
jl
mov
ret
pop
lahf
dec
cmpl
xor
movsl
ja
lahf
adc
ljmp
out
stc
rcr
sbb
xchg
xor
pop
pop
imul
and
push
adc
inc
and
mov
movsb
out
jnp
leave
cmp
outsb
repnz
ret
test
push
hlt
int3
mov
repnz
mov
cltd
add
sbb
dec
jle
test
ret
imul
inc
data16
adc
shrl
xlat
push
fstpl
push
stos
iret
sbb
fiaddl
lahf
and
pop
or
push
push
pusha
stos
out
mov
and
mov
cli
test
xchg
imul
enter
mov
adc
mov
nop
test
dec
xchg
xlat
outsl
xchg
pop
inc
fidivrs
sti
cmp
cmp
xor
jl
add
scas
sbb
je
push
cmc
mov
les
mov
iret
cmpsl
repz
mov
jae
dec
xchg
lods
xchg
sbb
pop
ret
jno
hlt
push
dec
xchg
sarb
lahf
sub
daa
dec
dec
imul
cmpsb
mov
sub
mov
cmpsb
mov
add
xchg
fidivrl
xorb
adc
mov
inc
outsl
inc
out
jmp
jmp
int
inc
int3
pop
gs
bound
or
inc
push
xchg
repnz
pushf
sub
jg
adc
aaa
jo
push
outsl
mov
jbe
xchg
mov
xlat
inc
adc
xchg
jnp
xchg
dec
rcll
daa
int3
insb
ja
fisubl
ret
mov
jl,pn
pop
popa
movsl
pusha
and
jmp
or
mov
fiadds
testl
and
mov
clc
mov
pop
push
test
lods
dec
add
sete
or
stos
mov
push
dec
xchg
adc
sub
pop
inc
xor
adc
and
add
jle
inc
xor
stos
fs
mov
ror
xchg
rcrl
shlb
inc
xchg
lock
aaa
xchg
add
stos
pop
xor
iret
lock
inc
push
mov
outsb
push
lods
rcrb
mov
lock
test
lods
cmp
push
outsb
cmp
ja
fimuls
popa
sub
stos
aas
cli
popa
push
in
inc
popa
fwait
pop
popf
sbb
or
addr16
pop
inc
pop
fsubl
add
frstor
dec
loopne
add
out
sbb
ljmp
test
ds
movntq
ret
mov
pop
pop
jb
jno
and
shll
outsl
or
jge
and
pop
inc
push
sarb
dec
xchg
push
mov
or
jge
sub
in
rorl
repz
jno,pn
cmp
test
aas
cmp
xchg
cmp
mov
das
fisttpll
push
popf
add
int3
push
aad
mov
adc
pop
aas
rclb
ljmp
xor
xor
xor
mov
jl
mov
adc
cmp
inc
insl
push
jae
xor
pop
fimull
stos
jmp
mov
xchg
sti
insb
cmp
cmp
int3
into
mov
inc
sbb
and
or
jae
mov
in
inc
aam
xchg
push
andl
out
movl
pop
mov
inc
mov
mov
test
sub
test
sub
fadd
andb
cltd
and
popf
mov
rorl
jmp
hlt
adc
and
pop
adc
mov
jae
add
int3
mov
xlat
jb
negl
xchg
or
fadd
les
mov
xchg
cmp
nop
cltd
int3
push
pop
push
jbe
xor
sti
in
flds
gs
adc
sbb
push
adc
mov
xor
cmc
inc
popf
sbb
pop
push
fs
or
jle
fadds
sbb
add
mov
adc
jae
and
shlb
adc
das
and
repz
or
sub
insb
mov
xor
out
lods
test
xchg
xor
sbb
mov
imul
loope
push
aad
mov
sub
popf
sarl
jecxz
sbb
and
dec
add
aam
int
jno
js
inc
out
cmp
mov
sbb
les
and
das
test
test
jle
sub
fdivl
and
inc
push
nop
cmpsb
sbb
loop
sarl
mov
cmp
and
out
mov
and
push
cli
insb
xchg
xor
sub
cmp
mov
pop
push
mov
outsb
leave
data16
adc
call
cmp
mov
dec
std
hlt
sub
ret
push
shlb
stos
enter
push
and
or
mov
clc
pop
lock
pop
or
cmp
inc
stc
fisubl
push
xchg
ds
push
adc
dec
xchg
std
outsb
adc
adc
in
push
leave
mov
xchg
ret
add
pop
adc
clc
xor
pop
xchg
clc
mov
pop
xor
xchg
xchg
mov
xchg
scas
inc
cmpsb
loope
jo
or
aad
aaa
xor
inc
xor
jnp
daa
add
lret
into
jb
add
icebp
addb
ss
fadds
xchg
xchg
mov
cltd
add
xchg
mov
fs
pop
fstpt
imul
sbb
lock
cs
pushf
mov
mov
dec
aaa
and
shrb
in
xchg
jno
shlb
cmpsb
jg
ss
sar
pop
mov
lahf
mov
js
mov
and
ss
icebp
adc
aam
fimull
sbb
dec
pop
push
xor
add
xlat
std
jg
pushf
mov
loop
xchg
push
mov
ror
jmp
inc
repnz
jno
leave
xchg
cltd
test
sbb
push
jl
imul
loopne
bound
push
dec
in
ret
jg
inc
pop
and
shrl
pop
ret
ja
and
mov
aaa
mov
outsl
xchg
insl
orl
pusha
dec
andl
cmp
pushf
sti
dec
mov
aam
jns
mov
sub
lcall
mov
and
lcall
in
lock
aaa
inc
push
daa
push
andl
movsb
jl
les
into
xorl
or
in
sahf
stos
dec
cltd
mov
lret
xchg
add
dec
mov
inc
mov
hlt
jns
movsb
leave
lods
pusha
inc
jb
shlb
jge
adc
popaw
adc
fstps
js
push
test
sub
fsubrs
popa
xchg
dec
les
cmp
rolb
das
xchg
fistpl
jb
pop
mov
pop
stos
adc
addr16
lahf
int3
dec
ffreep
enter
enter
imul
mov
and
pop
data16
fisubs
ret
mov
imul
mov
das
mov
insl
adc
jg
jle
sbb
std
push
arpl
dec
shl
sahf
dec
cmpsl
mov
scas
fisttpl
scas
mov
push
je
fstl
inc
and
insb
cld
rclb
pop
xor
push
adc
pusha
outsl
outsb
in
jp
inc
ds
shlb
push
orl
out
adc
das
into
jno
jo
ret
push
test
retw
fisubs
subl
test
xlat
insb
outsl
xor
xchg
push
cmp
lret
xchg
lds
jb
cli
ds
or
push
cmp
and
pop
inc
jno
or
xor
stos
nop
test
repz
rclb
jle
jns
aad
pop
test
adc
xor
cwtl
and
mov
inc
mov
xlat
dec
outsb
stos
xchg
sbb
mov
jp
jno
mov
or
pusha
std
push
in
xchg
xor
ret
fcmovnu
and
scas
inc
xor
dec
jg
call
cbtw
xor
push
insb
pop
pop
das
in
insb
xor
repnz
push
int3
xlat
aaa
mov
or
adc
dec
call
in
mov
adc
xchg
mov
call
cld
dec
jnp
dec
fwait
cmp
adc
add
rclb
jp
mov
in
xor
out
push
mulps
mulb
adc
lock
mov
out
pop
xchg
rcl
std
cmp
pop
imul
inc
int
push
mov
cmp
scas
cltd
push
mov
push
mov
pop
push
push
jb
lret
stc
pop
test
ds
je
lcall
mov
arpl
je
push
mov
sbb
and
popf
movsl
xlat
cmp
int
loopne
hlt
push
xchg
xchg
test
aam
arpl
xor
stos
sub
dec
dec
bound
lds
movsb
and
dec
out
std
cmp
test
xchg
js
shl
leave
std
rcll
lahf
pop
aad
ds
movsl
pushf
insl
pop
push
xor
fs
movsl
stos
fisubs
popa
and
pushf
popf
cmc
add
popa
pop
call
lods
add
das
adc
fists
repz
fiaddl
loope
ret
loop
sub
inc
add
jnp
aam
mov
loope
jae
pushf
inc
mov
mov
sbb
xor
fldcw
insb
ss
mov
addr16
ss
call
xchg
mov
xchg
jno
loope
lock
jbe
and
inc
or
imul
mov
frstor
push
mov
into
or
push
movsb
daa
dec
or
stos
loop
test
mov
int
adc
add
outsb
push
adc
inc
out
inc
cmp
mov
fstps
inc
xchg
xchg
scas
jno
xchg
jb
bnd
je
dec
insb
add
shrb
and
in
push
push
or
mov
xchg
add
xor
adc
lock
fsubrs
std
adc
xlat
and
int3
jge
jbe
or
insl
or
mov
mov
outsl
pop
dec
push
stos
in
sub
lock
test
mov
or
imul
sahf
and
nop
lret
jns
jle
aas
into
fadds
xor
outsb
add
sub
jl
jno
jns
push
cmp
mov
or
mov
fmull
movsl
icebp
add
ds
xor
push
jns
xchg
or
dec
cld
lcall
mov
sub
ds
dec
xchg
jne
pop
jb
popa
xor
into
es
pop
adc
lea
and
cltd
movsl
pop
cld
or
xchg
dec
aaa
mov
xchg
cmpl
orb
not
popa
mov
jo
pop
inc
dec
xlat
mov
mov
cmp
xchg
adc
fcmovu
std
and
fdivrl
outsb
sbbl
xor
stc
jns
jmp
cltd
je
push
or
insb
pop
in
loop
mov
mov
ret
or
push
mov
or
mov
fs
mov
xchg
dec
fwait
insb
mov
cmc
and
pop
cmp
repz
aas
push
xor
inc
arpl
xchg
xor
adc
fmull
mov
jno
cmpsb
mov
sbb
pop
test
dec
in
mov
cmp
pop
fs
xchg
xchg
add
inc
cmp
testl
xor
and
pop
adc
push
jb
leave
sub
adc
lea
xchg
push
aaa
jns
add
dec
sbb
cmp
addl
sub
mov
xchg
repz
int
ss
imul
fbstp
js
movsl
in
adc
fiaddl
stos
call
lds
js
test
sub
and
movsl
fidivl
push
insl
push
inc
mov
mov
test
sub
mov
pop
adc
mov
inc
repnz
lcall
and
subl
ret
repnz
xor
shll
push
dec
fwait
cmp
mov
out
aaa
lods
lret
sub
add
lret
sti
fiadds
clc
stos
cwtl
lods
int3
add
inc
inc
sub
pop
lds
xor
into
jmp
scas
mov
sbb
sbb
xor
jb
mov
faddp
cmpsb
rolb
push
jae
test
ss
sub
clc
push
lret
scas
fmuls
into
adc
lcall
jb
insb
sbb
je
lds
cmp
or
mov
in
aas
dec
jae
adc
hlt
mov
push
lods
sub
lods
or
adc
shll
sub
movsl
inc
cmp
aad
outsl
popl
jo
xlat
add
in
cmp
pop
arpl
jecxz
cmp
mov
int
sub
je
dec
mov
add
add
pop
in
sbb
outsb
out
sbb
pop
inc
sub
in
cmp
mov
ds
mov
push
addr16
mov
fildll
or
subl
out
cwtl
lods
mov
xor
ret
sbbl
adc
adc
mov
lcall
cmp
push
pop
mov
pop
sbb
in
ljmp
dec
leave
add
dec
xorb
daa
mov
or
xchg
xchg
push
fdivr
or
jno
cmp
jg
push
push
mov
mov
clc
popf
jno
xchg
sub
sbb
adc
lcall
inc
jo
int3
enter
sbb
bound
sbb
inc
mov
jle
test
arpl
xchg
inc
jecxz
sub
add
xchg
jno
fsts
lea
test
push
aad
sub
je
xor
adc
xor
mov
test
xor
push
in
mov
mov
test
in
in
lret
mov
adc
dec
jne
sub
dec
movsl
lock
or
aam
xor
sbb
movsl
sub
mov
pushf
push
ljmp
aam
mov
bound
loopne
mov
push
ja
mov
push
pop
push
or
negb
fbld
cmp
jge
pushf
imul
cs
push
mov
cs
cltd
daa
push
jge
fsubl
jp
int3
xlat
jns
and
arpl
jb
inc
sub
leave
popa
in
xchg
cwtl
mov
lcall
rolb
jecxz
std
inc
ja
fdivr
mov
adc
int3
jmp
subb
cli
sub
inc
pop
movmskps
mov
fisttps
repz
mov
add
pop
or
add
mov
mov
pextrw
cmp
mov
loope
xchg
stos
sbb
sti
inc
sub
adc
jne
xchg
mov
sahf
iret
xor
mov
mul
sbb
mov
xchg
arpl
fwait
cmp
rol
shll
xor
mov
leave
add
add
xchg
inc
pop
lea
jnp
pushf
mov
pushl
test
testl
adc
sarb
stc
fcoms
adc
cs
jo
mov
in
jnp
or
fwait
fwait
jno
jmp
cmp
in
js
faddp
or
insb
sbb
and
sbb
call
jnp
in
inc
je
and
dec
cmpsl
pop
adc
mov
movsb
pop
rclb
cmp
lcall
xchg
sbb
cmpsb
lock
in
imul
cmp
sti
inc
and
xor
mov
ljmp
aad
mov
popf
adc
push
mov
pushf
repnz
aam
adc
mov
dec
adc
das
sbb
test
cmp
icebp
repz
imul
stos
mov
outsb
mov
mov
push
ja
cs
push
sarl
std
aam
sahf
imul
mov
repz
aad
popf
in
inc
push
xor
aas
std
stc
mov
cmp
int3
sub
clc
movsb
callw
push
aam
jle
sbb
mov
ret
or
roll
add
inc
fdivrs
xor
pushf
out
or
inc
cmp
push
mov
pop
rcrl
jge
ficoml
jns
xchg
jle
das
and
sub
andl
iret
bound
outsb
test
xor
pop
sbb
rorl
fs
pushf
outsb
or
cmc
test
push
in
gs
mov
sarb
or
add
lds
icebp
sti
adc
dec
xchg
test
mov
cmpsl
fists
out
adc
daa
repnz
xlat
fsubrl
add
and
popl
movsl
nop
gs
xor
push
push
push
stc
adc
push
xor
mov
arpl
push
shrl
sbb
sub
mov
add
out
add
mov
popf
jno
cmp
or
scas
rcrb
pop
mov
jmp
push
push
inc
in
outsb
inc
in
loope
lds
testb
push
dec
cltd
mov
addl
ret
sbbb
dec
inc
lret
or
mov
fcompp
lock
pop
cmp
icebp
adc
mov
push
outsl
inc
lods
out
pop
dec
ds
and
dec
out
out
dec
cmp
in
inc
ret
rol
xor
fcoms
addr16
jmp
cmp
loope
mov
adc
dec
loope,pn
ljmp
mov
mov
lock
lods
fnsave
mov
mov
fildl
push
pop
mov
mov
fs
ds
xor
cmpsl
shl
out
inc
mov
mov
movsl
push
jno
ficompl
inc
adcb
mov
jecxz
xor
pop
or
jbe
test
js
sub
and
jge
subb
cmpsb
or
shlb
xor
jbe
cmp
sti
mov
adc
add
or
daa
or
js
adc
movb
pop
out
orb
mov
addr16
stc
call
or
mov
inc
mov
loop
outsl
cmpsl
das
push
lock
out
test
imul
cmp
shlb
lret
fdivrl
out
push
mov
hlt
insb
pop
fdiv
sarl
scas
hlt
jmp
and
inc
daa
sbb
mov
and
fdivrl
mov
test
in
sub
lret
aad
inc
inc
scas
push
lcall
test
xchg
ficoml
sbb
mov
rcrl
xchg
dec
adc
sbb
pop
cmp
push
xchg
mov
push
jb
leave
mov
dec
dec
inc
outsb
addr16
push
jl
iret
inc
aad
hlt
cs
pop
adc
mov
lcall
imul
arpl
push
sbb
sbb
inc
out
in
stos
es
pop
addb
adc
dec
and
data16
fcoml
addr16
mov
adc
das
fistps
incl
lret
sbb
lahf
xchg
pop
push
adc
jl
xchg
pop
rcll
js
out
pusha
pop
push
aam
cs
and
and
fsubr
mov
mov
sub
ret
jne
mov
lods
and
int3
mov
mov
les
mov
mov
cli
cli
push
jle
cs
pop
dec
out
cli
ja
mov
push
sbb
in
xchg
hlt
or
pushf
add
test
jnp
loop
jae
out
inc
push
adc
xchg
sub
cwtl
cmovbe
bound
push
dec
jge
mov
dec
mov
adc
xor
mov
xchg
xchg
loopne
sbb
fwait
push
scas
jno
jnp
js
cmp
inc
mov
mov
mov
xor
addr16
dec
pop
je
faddl
movsb
out
xlat
pop
lret
movsb
adc
loope
lcall
inc
movsl
into
sub
pop
les
lahf
icebp
mov
fnclex
push
cltd
in
xchg
idivl
or
das
sub
daa
popa
popf
aas
mov
es
std
inc
ljmp
xchg
popf
cli
std
jns
xchg
xor
push
mov
mov
inc
es
inc
loope
in
jae
in
push
sarl
dec
or
dec
insl
sub
push
mov
mov
ljmp
aad
xor
bound
jno
leave
and
mov
jbe
xorb
lret
fldt
adc
imul
mov
jle
sbb
adc
xchg
or
jecxz
mov
cmpsl
pop
dec
mov
jne
sub
dec
mov
xchg
cmp
ds
sub
movsl
addb
mov
cmp
pop
cmpsl
xchg
push
repz
outsb
ja
jp
inc
enter
add
pop
sub
cmc
aad
sarl
add
pop
fwait
jp
mov
adc
aaa
clc
ljmp
jo
fs
mov
jge
xor
popa
test
xor
std
dec
push
and
pop
jae
test
sidtl
sub
scas
cmp
jno
mov
mov
lock
imul
call
dec
rcl
push
pop
out
xlat
pop
inc
rcrb
jmp
xchg
push
cmp
insb
xor
pop
mov
les
dec
jg
stos
std
cwtl
or
xchg
lahf
outsl
mov
es
out
jo
ja
call
cld
popf
aam
push
lret
jp
movsb
or
dec
sub
roll
sahf
inc
xor
shl
inc
negb
adc
mov
sbb
add
lret
push
dec
xor
scas
mov
mov
push
dec
bound
ds
bound
jns
dec
pop
movl
ljmp
mov
dec
adc
divb
jbe
loopne
in
or
pop
outsb
mov
and
sarb
cmpsb
addr16
daa
rorl
std
rorb
pop
inc
cmpb
insl
add
sub
push
mov
ljmp
push
lods
xchg
lds
filds
sub
jnp
add
sbb
in
cmc
stos
cmp
push
lret
andl
or
mov
ficoms
mov
cld
cmpsl
ds
push
insl
hlt
jns
inc
fwait
mov
jbe
sub
mov
add
outsl
in
dec
cmpsb
sbb
add
jmp
ret
lock
xchg
pushf
add
xchg
in
addl
pushf
xchg
outsb
lret
push
jno
xlat
lret
lret
test
daa
pushf
ficompl
xchg
dec
push
outsl
jae
popa
cmp
push
or
mov
jnp
enter
fwait
xchg
xchg
popa
and
mov
fldenv
insl
mov
loope
push
jae
lds
fld1
or
inc
daa
sub
fldenv
sbb
cmp
enter
and
cwtl
repnz
xor
notl
hlt
sbb
push
adc
sahf
scas
dec
sti
test
cld
mov
scas
in
xchg
subl
sub
add
jmp
imul
pop
mov
inc
jbe
and
and
adc
mov
push
sub
sub
add
int3
adc
jo
aam
and
cltd
jecxz
cmc
inc
mov
shl
in
jbe
lcall
fnsave
les
mov
test
imul
xchg
negl
lret
es
cmp
xor
jp
and
pop
inc
js
rcl
push
pop
add
adc
insb
jns
test
and
xor
int
ficompl
mov
add
pop
mov
xchg
adc
repnz
mov
add
dec
out
jle
adc
or
mov
stos
push
fucom
mov
push
out
adc
mov
xchg
test
mov
dec
stc
ret
and
stos
jp
int
cmp
adc
in
and
jmp
xor
or
cltd
mov
movsb
pop
adc
push
decb
sbb
pop
mov
inc
mov
cmp
faddl
jno
cmpsb
pop
in
and
aad
ja
rcrb
xchg
push
imul
mov
in
pop
call
xchg
jmp
aam
jp
insb
je
add
cmpsl
adc
or
and
pop
cmp
movsb
inc
notb
ljmp
mov
mov
jbe
fadds
aam
les
inc
insl
stc
nop
mov
inc
out
in
mov
fidivrs
and
xchg
lods
and
adc
push
cmp
fucomp
xor
cmpsl
enter
lahf
in
sbb
aad
fcoml
sub
mov
ss
mov
xchg
insl
ret
outsb
inc
repz
rorb
mov
int3
xchg
push
loopne
sbb
out
sub
cmp
adc
in
testl
fidivs
lahf
notl
sub
xchg
mov
dec
mov
dec
in
cwtl
repz
sub
push
mov
push
xchg
rcrb
push
jno
js
stos
xchg
mov
les
orb
sbb
push
sbb
pop
or
lahf
mov
adc
leave
and
mov
and
popa
jle
dec
jns
pop
das
mov
and
mov
test
pushf
jbe
rorb
out
xchg
aad
xchg
jp
dec
mov
ret
mov
cld
and
and
cmp
seto
or
repnz
push
sub
adc
ja
stc
xchg
out
test
inc
dec
aas
inc
repz
cmp
aad
add
stos
mov
data16
lods
push
ret
sub
mov
jg
cmp
int
jge
out
scas
xchg
pusha
stc
push
pop
pop
nop
xor
sarl
sub
adc
je
test
ret
ret
hlt
std
mov
xchg
xchg
ds
out
adc
sbb
pop
xchg
jnp
stc
je
sbb
mov
inc
jb
ljmp
pop
mov
xor
and
clc
cmp
inc
fisubs
ss
push
sti
mov
sbb
icebp
jbe
and
dec
shrb
xor
jge
jno
jmp
popa
sbb
imul
jb
push
and
xchg
out
icebp
into
bound
inc
cltd
popa
jne
cmp
mov
cmp
insl
test
loope
clc
popf
outsl
daa
inc
adc
jge
cld
das
repz
fidivs
sub
xlat
in
and
dec
or
jae
iret
mov
pop
jns
pop
std
ret
fstpt
sub
pop
cmp
mov
rcrl
mov
ret
dec
fiaddl
and
or
les
xor
ss
ds
test
shll
test
je,pn
cmp
mov
repnz
lcall
mov
adc
mov
and
push
dec
cmovns
aas
fstl
jae
sub
mov
mov
in
mov
xorl
push
arpl
das
cld
stos
mov
push
push
push
andl
cmp
fidivs
or
xor
push
xchg
outsl
frstor
xchg
iret
rclb
and
ljmp
cld
mov
test
pop
dec
fidivl
xor
dec
loopne
push
mov
fidivrl
mov
out
mov
sbb
push
cmpsl
xchg
mov
adc
mov
and
nop
dec
xor
js
aaa
movsb
dec
cmp
mov
xor
mov
pop
adc
push
pushf
xlat
xchg
push
adc
sub
lret
add
les
das
aaa
lods
cmp
dec
out
pop
xchg
jb
adc
add
ja
xchg
test
and
mov
push
push
adc
cmpsl
mov
sbb
lods
js
cmp
negl
lods
ror
jo
mov
icebp
add
lods
pop
fwait
pop
test
ja
xor
dec
add
out
xlat
ljmp
inc
dec
mov
jle
dec
outsl
and
pop
cmp
xchg
push
xor
xor
xlat
or
loop
hlt
vmovq
roll
mov
lods
mov
inc
mov
xchg
or
mov
imul
fstl
rcr
xchg
mov
mov
jp
fwait
xchg
xchg
lcall
call
mov
mov
add
fld
in
aaa
pop
xorb
roll
mov
leave
popf
or
push
insl
adc
out
andl
push
sarb
sbb
rcll
sub
roll
adc
sub
xchg
insl
out
sbb
dec
inc
cwtl
idiv
add
push
push
fwait
je
xchg
mov
in
dec
push
jp
lock
aad
sti
jb
fwait
and
pusha
cmpsb
mul
push
aam
ja
out
test
int
adc
dec
cwtl
mov
cmp
and
jb
adc
inc
sbb
std
movsb
das
sub
mov
mov
mov
dec
push
push
mov
adc
js
out
loopne
outsl
adc
mov
adc
fcmovu
das
xchg
mov
cmpb
and
mov
stos
outsb
mov
cmpsl
inc
pushf
in
jne
sub
out
xor
scas
pushf
or
inc
push
mov
in
inc
les
jmp
lahf
stc
mov
pop
clc
xor
das
iret
xchg
shrl
mov
jb
fcomps
ffree
dec
sub
xchg
jge
inc
add
pop
push
adc
sbb
cwtl
lea
jecxz
shl
bswap
sub
filds
mov
mov
mov
xor
ljmp
and
aad
loopne
negb
push
hlt
sub
mov
dec
stos
xor
inc
sub
inc
fisttps
pop
fistps
mov
pop
fisttpll
fwait
inc
lret
popf
pop
inc
mov
scas
mov
pop
incl
xchg
and
add
push
imul
mov
cltd
xchg
fs
in
push
lcall
jmp
aaa
mov
sbb
push
mov
pop
or
adc
pop
call
push
xlat
cmp
jle
xlat
lock
pop
imul
push
and
sub
pop
out
sbb
push
ja
adc
dec
push
adc
xchg
inc
add
mov
fstpt
arpl
sub
hlt
clc
aas
orb
ret
ret
xor
xchg
mov
repz
ds
rolb
xor
in
inc
repnz
cld
mov
in
xchg
sbb
push
inc
inc
mov
mov
movsl
pop
pop
jb
pop
push
insb
push
int3
ret
out
std
stos
pop
orl
pop
je
mov
cmp
clc
mov
push
lea
xor
push
cwtl
xor
jmp
and
sarb
xchg
sbb
inc
mov
in
iret
pop
mov
cld
pop
inc
dec
pop
inc
sbb
popf
fiadds
sub
cmpsl
stos
int3
loop
imul
stc
sbb
lret
inc
inc
cmpsl
movsl
pop
in
fmul
push
mov
movsb
lock
jbe
mov
into
add
push
js
stc
and
roll
dec
imul
mov
cmc
sti
or
in
in
lret
adc
stos
sti
icebp
arpl
lret
maskmovq
negl
fldcw
out
xor
ja
fbstp
dec
ficoml
fs
shrb
inc
dec
xchg
mov
insb
or
es
loope
mov
test
sub
add
mov
aaa
push
ljmp
lock
sahf
lret
inc
push
xchg
mov
insb
sahf
stc
mov
and
xor
aam
xchg
or
xor
movsb
pop
ss
test
push
jo
xchg
inc
dec
adc
dec
inc
pop
or
pcmpeqd
mov
mov
mov
rol
iret
xchg
cmp
add
pusha
rclb
popa
mov
cmp
outsl
push
jmp
xor
jle
bound
icebp
inc
adc
fsubrl
scas
inc
fbld
sbb
dec
int
cld
test
bound
add
mov
jne
lds
in
fcmovu
cs
pop
or
inc
jns
sub
shl
ret
inc
leave
mov
and
jne
add
je
scas
mulb
push
js
push
testb
cmpsl
dec
mov
iret
icebp
popf
sbb
mov
push
inc
inc
mov
test
std
nop
mov
popf
fldcw
pop
stc
push
lods
sub
cmp
mov
fs
xor
add
pusha
mov
mov
outsl
mov
dec
sbb
jb
add
push
pop
xor
test
add
mov
fsts
jo
in
pushf
mov
testb
mov
mov
lahf
adc
ret
add
out
mov
push
in
out
cmp
sahf
cli
pushf
and
rclb
push
add
jg
jnp
pop
mov
xchg
add
xchg
mov
in
jg
xchg
xor
icebp
cwtl
xchg
inc
imul
push
mov
push
jg
sbb
mov
lret
je
jg
fsubrp
dec
lcall
aaa
out
fs
aad
or
lcall
vmovupd
and
dec
jnp
call
ds
rcrb
cmp
test
fmuls
mov
dec
pop
in
ds
push
mov
rclb
int3
sbb
xchg
mov
push
inc
das
sub
push
jb
xor
mov
push
jle
psrlq
inc
repnz
inc
sub
inc
in
jbe
xchg
pop
push
shll
lods
fcomi
push
inc
xchg
mov
sbb
jmp
mov
sahf
inc
add
or
test
je
xchg
ret
dec
into
cld
pop
cli
sahf
idivl
and
loope
leave
notl
lds
lods
data16
negb
sbb
std
daa
subl
add
inc
inc
mov
add
add
lahf
ja
dec
inc
loopne
push
adc
sub
pop
or
pop
insb
sti
and
stos
mov
adc
fdivrs
jl
cmp
test
jns
sarb
das
push
sahf
xchg
mov
adcb
lds
out
lahf
arpl
mov
adc
push
aad
pop
test
mov
lret
ret
xchg
loop
out
mov
mov
insb
loop
fisttps
clc
sbb
dec
in
inc
gs
imul
mov
xor
daa
test
mov
into
push
loop
packsswb
jle
add
xchg
pop
dec
movsb
mov
fcmovb
push
aaa
clc
xchg
push
shrb
mov
lcall
pop
cmp
jl
cmp
pop
lahf
in
add
pop
pop
xchg
mov
cmp
fwait
insb
mov
inc
adc
into
sbb
out
jmp
lods
push
xchg
sarl
rorl
jl
adc
sahf
mov
js
pop
imul
aas
sub
iret
pop
pop
push
andb
jmp
add
add
mov
jbe
sbb
mov
mov
fwait
mov
fisubrl
cmp
xlat
mov
js
pushf
inc
arpl
sbb
cltd
push
imul
cmovg
nop
push
in
dec
pop
jecxz
fisubrs
les
inc
cmp
inc
mov
cmpsl
mov
xor
inc
push
icebp
xchg
sub
sub
add
aas
xchg
push
movsl
cmpsb
test
xchg
mov
idivl
scas
outsl
stos
adc
pop
jnp
xor
outsl
aas
pop
pop
lcall
add
dec
mov
scas
mov
pop
fisttps
or
orl
add
xor
test
and
fistpl
mov
aaa
hlt
mov
push
jp
outsb
dec
jge
xchg
insb
mov
pop
arpl
inc
jbe
inc
fdecstp
je
pop
ficompl
xor
add
push
int3
cmovl
jecxz
pusha
xchg
and
push
add
std
sub
dec
dec
dec
lret
inc
stos
dec
jge
ret
cmp
data16
pushf
outsl
or
test
pop
out
daa
or
std
ss
push
mov
xchg
xor
xchg
dec
nop
cltd
sub
add
and
je
sub
call
xorb
add
test
cltd
cs
jg
inc
fmuls
sbb
sbb
fcoms
adc
jae
icebp
sbb
pop
mov
lods
xor
add
mov
adc
pop
pop
stos
adc
mov
cmc
daa
pop
iret
jecxz
in
cld
mov
mov
sbb
shll
jg
les
pop
mov
push
imul
sbb
bound
in
adc
test
add
fxtract
inc
imul
fs
adc
movsb
adc
push
ds
les
xor
mov
cmovne
fiaddl
inc
pop
in
sbb
add
hlt
out
push
addl
lahf
shll
iret
adc
and
test
js
test
scas
das
mov
inc
cmpb
std
cld
je,pn
pop
decb
fdivs
inc
jns
pusha
fstl
ret
mov
cmc
leave
sbb
sub
jecxz
adc
xchg
mov
jmp
pop
test
sbb
test
ja
mov
push
je
lcall
popa
push
dec
cmp
sub
fidivl
jecxz
jbe
xlat
imul
popa
popa
push
sbb
outsl
xor
inc
stos
test
push
bound
sbb
mov
movsb
push
movsb
xchg
das
pop
aad
jg
xchg
cmovle
xchg
movsl
or
push
xor
das
fisubrl
xor
in
sbb
jecxz
pushf
out
mov
push
ret
push
xlat
lret
les
imul
addr16
jne
dec
ljmp
ret
xchg
pop
test
fucom
mov
js
or
mov
hlt
mov
mov
aad
lret
and
mov
push
cmp
xlat
push
jne
pop
mov
sub
repz
xchg
sbb
fldl
cmp
adc
popa
lods
mov
mov
insb
sbb
push
mov
add
push
pop
sbb
xchg
insl
sub
mov
cmp
or
enter
mov
ficoml
sahf
inc
sti
xor
lods
adc
sub
lcall
cmc
or
xor
add
fsubr
mov
dec
pop
inc
mov
sub
fs
scas
in
xlat
sti
lock
aad
pop
adc
ds
adc
jns
push
cli
or
inc
dec
int3
adc
icebp
je
adc
cwtl
mov
push
sbb
scas
mov
stc
and
push
or
leave
mov
popf
fdivs
scas
mov
data16
cmp
sti
push
call
mov
inc
push
dec
in
mov
xorl
inc
roll
fwait
cwtl
sub
loope
test
push
inc
mov
mov
aas
push
subb
scas
and
adc
cmpsb
xchg
mov
cltd
je
xor
push
insb
iret
movsb
lret
fiaddl
lds
fiadds
dec
movsb
xchg
and
inc
idivb
mov
mov
fcoms
and
stos
outsb
inc
cmp
mov
cmp
or
shll
test
add
jmp
jg
roll
xchg
sbb
inc
loopne
fs
mov
lahf
dec
push
jns
mov
aam
test
add
lcall
or
and
movsl
xchg
cmc
dec
mov
imul
sbb
mov
push
popa
mov
mov
pusha
xor
xor
addl
push
loop
lcall
test
cmpsl
mov
fisttpll
addr16
mov
push
cwtl
rcll
clc
imul
add
jo
jb
cmc
imul
rcll
cwtl
cmpsl
clc
push
std
cwtl
mov
push
pop
xchg
int
out
and
xchg
es
sbb
mov
add
push
int
stc
out
inc
jns
fwait
xchg
shr
jo
inc
inc
in
push
sub
sub
call
cmp
insl
dec
inc
push
ret
adc
lret
dec
pop
inc
mov
lcall
dec
cmpsb
sub
in
push
push
pop
or
in
push
jmp
cmc
mov
imull
shr
mov
mov
lahf
mov
mov
fildl
adcl
jmp
ljmp
sub
push
push
lds
int
mov
or
les
jno
sbb
push
fldcw
push
hlt
clc
jl
xor
mov
jle
cld
dec
cld
inc
push
jle
movsb
mov
icebp
rorl
xor
push
das
ja
mov
int
jae
loop
orb
inc
fcompl
cmp
popa
loopne
aam
jns
push
inc
ja
dec
xchg
gs
imul
jo
pop
lret
cmp
int
test
mov
sub
add
jae
into
fs
lcall
xchg
pusha
mov
leave
pop
mov
ret
mov
rorb
cs
stos
jg
adc
dec
ds
ficoml
push
sub
in
push
pop
out
sbb
out
rorl
icebp
mov
nop
cltd
adc
xor
imul
sbb
mov
call
mul
or
cmp
jns
add
pop
inc
push
pop
mov
mov
and
add
nop
jb
aam
inc
push
mov
iret
sub
and
dec
icebp
push
push
and
xor
fs
or
xor
jnp
mov
push
pop
scas
loope
push
sub
xor
sub
outsb
rolb
lret
test
push
repnz
dec
icebp
push
pushf
in
shll
negl
ret
mov
push
jge
lcall
lret
cmpsl
mov
mov
icebp
xor
stos
sahf
bound
scas
sub
mov
add
pop
lods
inc
xchg
mov
adc
xchg
adc
fcomip
mov
scas
jo,pt
dec
mov
dec
push
sub
pop
sub
adc
adc
push
push
shr
adc
pop
dec
lea
push
subb
loope
push
push
into
or
jae
add
sbb
dec
push
fnsave
adc
cmp
test
ret
inc
jg
icebp
shr
cmp
jge
outsb
ficompl
jne
ret
leave
push
push
pop
in
push
pusha
mov
call
push
nop
shlb
movsb
lret
xchg
mov
shlb
lahf
xchg
push
mov
pop
out
cmp
out
jg
pop
push
push
jl
loopne
pusha
mov
pop
inc
mov
or
mov
dec
inc
aam
pop
inc
dec
jmp
and
add
or
and
cmpsb
data16
je
ficoms
mov
pop
mov
or
mov
cmp
mov
ljmp
push
cld
mov
stos
cmpsl
pop
inc
cmpsl
pop
pop
shl
shrl
cwtl
outsl
std
jnp
xor
mov
dec
xchg
sub
adc
add
ja
pop
mov
adc
add
ret
aaa
arpl
movsb
fwait
ljmp
push
in
xor
xchg
xor
insb
cmpsb
cmc
ljmp
int3
cmp
nop
mov
xor
and
in
add
mov
imul
mov
or
ret
mov
mov
adc
adc
push
xor
imul
jne
cld
add
inc
xchg
stc
ret
lods
scas
fwait
mov
insb
adc
mov
les
xor
in
mov
fldcw
in
sub
in
jl
movsb
dec
rorl
out
xchg
add
cltd
add
xor
mov
cld
leave
dec
sbb
xchg
cli
stc
jecxz
popf
pop
jl
mov
xor
sub
jmp
lock
call
sbb
pushf
pop
pusha
ds
aad
push
xchg
insb
imul
bound
or
call
inc
scas
jle
incl
lcall
xchg
mov
push
mov
sub
inc
rcrl
or
outsl
mov
pushf
imul
cli
push
pushf
in
mov
mulb
in
or
sub
fistps
mov
das
stos
mov
xchg
and
enter
test
scas
push
ret
adc
dec
mov
imul
sbb
push
inc
push
xor
lods
cmp
push
dec
mov
mov
ficomps
push
rorl
xchg
aas
daa
aad
divb
mov
dec
jle
pop
testl
repz
push
mov
pusha
aaa
mov
jg
mov
sti
push
pop
std
adc
xchg
mov
ds
es
pop
mov
sahf
ja
loope
ret
mov
sbb
sub
mov
or
mov
outsl
or
cmpsl
shlb
test
lcall
push
cli
addr16
fmuls
shrl
ret
inc
sbb
fisttpll
incb
or
adc
in
into
test
push
sbb
mov
add
lods
loopne
shlb
loopne
out
outsl
out
pop
sbb
or
addr16
pop
mov
bt
hlt
dec
sbbb
jmp
cmp
sarb
enter
nop
aaa
push
or
std
sbb
sub
push
outsb
inc
push
inc
dec
sbb
push
add
mov
mov
mov
mov
mov
add
scas
cmp
iret
mov
mov
jns
aaa
push
mov
jnp
out
imul
les
lret
push
inc
and
lahf
jmp
cmp
add
scas
push
cltd
ljmp
pop
xor
mov
ret
jne
add
addr16
ja
mov
daa
jecxz
mov
nop
mov
adc
sahf
pop
push
js
lds
cmp
sub
in
jns
int3
xor
add
popf
xchg
jmp
mov
jae
mov
mov
jl
scas
clc
sbb
xor
cmp
cmp
xchg
enter
jp
mov
fwait
jle
mov
push
xor
mov
mov
movsl
and
call
and
cltd
pop
inc
xchg
stos
inc
xchg
cli
adc
mov
hlt
inc
andb
fsubrp
incb
and
int3
aas
jmp
movsl
and
push
mov
mov
push
notb
inc
inc
adc
popf
enter
clc
stos
mov
out
hlt
rcr
fdivl
out
adc
mov
xchg
mov
pop
mov
dec
push
test
stos
ret
push
jp
add
int3
xchg
xor
popf
adc
pop
jge
das
mov
xchg
fwait
jecxz
jmp
stc
cmp
cs
out
mov
mov
adc
mov
out
sti
inc
sub
test
xchg
sbb
lock
sbb
das
push
js
mov
addb
jle
fdivs
add
aaa
dec
xor
xor
cmpsb
or
scas
push
sbb
loope
out
dec
test
sbb
sbb
es
sbb
fs
xor
pusha
test
ret
pushf
xor
ret
ret
enter
xchg
adcb
and
dec
xchg
mov
adc
mov
pop
inc
xor
adc
ror
call
inc
iret
sub
out
push
imul
shrl
xor
mov
push
pushf
imul
lock
pop
and
push
out
or
mov
mov
sub
xchg
sahf
lds
daa
dec
xchg
lock
into
ret
bound
sub
fnstsw
xchg
sbb
leave
int3
es
jno
pop
sub
punpckhbw
loop
dec
pop
sbbl
test
xchg
cmp
fimuls
movsl
addb
and
sti
outsl
js
sarl
and
sbb
sahf
and
mov
or
dec
cmp
ret
dec
cld
add
push
push
lahf
and
clc
nop
cmp
add
adc
das
clc
mov
movsb
or
scas
in
pop
lret
call
jmp
stos
inc
mov
push
or
adc
xchg
int3
add
out
out
and
or
pop
test
add
xchg
fst
pushf
fimuls
pop
xchg
ficoms
or
cmpsl
bound
addr16
mov
mulb
mov
loopne
popa
adc
cmpsl
jge
int3
icebp
xor
orl
pop
imul
xlat
mov
popa
lock
repnz
xor
xor
sti
mov
hlt
insl
pop
hlt
mov
stos
out
sbb
bound
js
fsub
sub
das
mov
fsubrl
call
cmp
ret
sub
scas
mov
pop
cmp
movsb
loope
pop
mov
inc
lahf
inc
nop
stc
cltd
cmp
shrl
and
adc
sub
call
mov
or
sbb
push
scas
lret
ret
add
sbb
nop
cmp
insb
int
add
in
or
jo
icebp
push
jmp
imul
mov
in
push
adc
les
mov
mov
sbb
imul
pop
and
sbb
jbe
adc
mov
jns
call
mov
and
out
ds
pop
lcall
push
xor
xchg
clc
std
xlat
jle
xchg
push
sbb
inc
es
xor
and
mov
cld
fwait
incl
sub
addr16
repz
mov
mov
add
sub
test
adc
in
cmp
and
mov
mov
mov
cmpsl
inc
sub
cmp
in
iret
pop
scas
rcrb
mov
sbb
add
push
xorb
popa
sbb
repnz
pop
pop
leave
sub
inc
in
mov
inc
inc
push
inc
test
stos
push
mov
jno
fs
mov
rolb
cmp
jo
push
sbb
and
iret
test
sub
xchg
lea
push
loopne
das
mov
rcll
adc
and
movsb
loope
in
inc
or
or
sahf
sarl
xchg
dec
cli
pop
sbb
lret
cmp
cltd
in
js
jg
mov
sbb
add
mov
dec
rcl
cmp
pusha
xchg
jl
sbb
sub
and
fistpll
mov
xchg
xor
sub
lods
mov
dec
inc
mov
lods
jmp
add
pop
andb
mov
inc
push
inc
pop
repnz
stc
mov
inc
pop
xchg
rorl
call
jp
push
es
xchg
int
lret
lods
xchg
insl
push
aam
rclb
test
cmp
ja
sub
out
push
pop
inc
jnp
cmp
das
lahf
js
cli
add
loop
aas
and
int3
mov
adc
and
pmaxub
aaa
cli
jp
clc
push
or
mulb
fmuls
xchg
jae
test
inc
lret
inc
clc
fst
stos
ja
xchg
pop
mov
repnz
pusha
push
les
xor
js
clc
push
push
cmc
js
jle
cs
fstl
fxsave
inc
ljmp
mov
pusha
aas
mov
mov
mov
and
add
xchg
xrelease
lea
int
fidivl
cmc
dec
and
inc
xchg
xchg
pushf
into
mov
shlb
and
outsb
cwtl
add
andb
add
imul
pop
ljmp
pop
sub
out
push
andl
icebp
idiv
cwtl
mov
imulb
ret
jecxz
jo
popa
and
js
mov
pushf
ljmp
pop
push
sub
enter
mov
pushf
sub
pop
dec
push
or
nop
mov
imul
inc
lret
lods
push
lret
jae
mov
leave
in
movsb
push
pop
push
pop
cltd
adc
jo
push
pop
pusha
xchg
ja
cmpb
cmp
jae
loop
shrb
lock
rcrb
je
incb
in
mov
rorl
iret
bnd
aas
mov
xchg
testb
cmp
mov
mov
jbe
orl
repz
fdivrl
push
pushf
rdmsr
les
pop
pusha
fcmovb
or
xchg
subb
rcll
pop
jae
aaa
sbb
notl
cmp
ret
push
loopne
cmc
inc
sub
les
in
dec
pusha
xchg
test
dec
test
int
mov
dec
inc
cld
xor
sbb
xor
leave
mov
adc
icebp
jb
jo
je
pusha
shll
mov
push
repnz
dec
lods
mov
mov
pop
movsl
jmp
data16
icebp
mov
pop
and
sbb
jbe
push
pop
sub
inc
mov
jl
add
push
adc
dec
xor
mov
loope
inc
pop
scas
hlt
jae
sub
outsb
xchg
popf
xor
ror
add
imul
mov
jmp
mov
test
popa
divl
lock
sahf
sbb
addr16
stos
fsubr
mov
pop
jno
jmp
dec
sub
lock
arpl
out
mov
add
scas
cmp
pop
lcall
ja
add
sub
inc
repnz
lret
xor
lea
xchg
shrb
lods
add
lahf
sti
std
ret
in
push
and
enter
repnz
sbb
dec
cs
mov
aad
sti
push
andl
jmp
push
xchg
push
js
scas
sahf
les
clc
adc
mov
jno
push
xorb
push
loope
mov
pop
sub
or
addb
pusha
sub
lea
or
sub
sti
ds
lock
cmp
cmp
inc
mov
out
daa
fs
adc
mov
rorb
insl
cmc
fsubs
pop
pushf
daa
and
inc
loope
arpl
pop
test
dec
iret
subb
out
adc
dec
cwtl
ficoms
lret
xchg
icebp
sbb
mov
push
jle
scas
sbb
imul
sbb
aam
mov
sbb
sbb
in
in
imul
sbb
push
cld
mov
dec
sub
loopew
dec
cmp
sbb
mov
pop
and
jne
imul
mov
icebp
clc
std
repz
and
or
pop
fistpll
ret
stc
sbb
mov
fwait
repz
ret
xchg
out
int3
sbb
pop
xor
shll
daa
mov
jbe
push
xor
or
fsub
cmc
neg
in
mov
sti
jg
ffree
rorb
frstor
das
mov
out
loop
nop
sbb
in
jne
jns
sub
dec
jb
xchg
outsl
lods
inc
push
jns
dec
lret
pop
popa
and
aam
xchg
xchg
mov
jge
jge
xchg
dec
test
popf
inc
jg
mov
add
icebp
dec
jmp
jo
fimull
sarb
xchg
arpl
mov
adc
sbb
lock
xchg
icebp
xor
push
jl
jge
and
repnz
scas
icebp
push
dec
pop
mov
sti
arpl
jg
lds
les
pop
lods
punpckhdq
les
fs
xor
cld
mul
mov
and
or
daa
mov
inc
in
bound
icebp
idivb
cli
jbe
mov
fnstenv
mov
ret
mov
xor
cmpsb
mov
xchg
mov
cmpl
mov
sbb
mov
push
or
cmp
mov
mov
rclb
dec
notl
ja
cld
rolb
pop
jnp
jle
loopne
xor
pop
inc
push
rcll
in
imul
cmpsl
lods
jmp
cvtps2pi
sbb
adc
repz
jo
hlt
insl
xor
push
xchg
mov
mov
inc
imul
or
int3
dec
jno
add
and
add
sub
ss
inc
xchg
psubusw
and
pop
aaa
fcmovbe
jnp
push
imul
out
sbb
iret
fistl
mov
daa
cmp
insl
mov
data16
out
mov
push
loope
push
mov
add
out
icebp
jno
sbb
pop
loop
mov
fistl
das
sub
jae
fs
adc
mov
ja
cwtl
sti
mov
jns
rorl
cld
sub
inc
and
in
jg
fs
cmp
in
cmc
in
jae
fisttpll
and
scas
test
add
out
cmp
push
jb
inc
or
ds
pop
popf
dec
cli
pop
add
push
xlat
mov
fldt
jle
pushf
push
jno
loope
je
call
inc
add
xchg
xchg
mov
popa
enter
into
jg
pop
and
push
push
fimull
pop
call
cmp
mov
mov
leave
xor
loop
jp
mov
fs
in
data16
adc
repz
push
lret
add
cmp
sbb
rclb
inc
idivb
in
je
sbb
insl
stos
jo
cmp
xchg
or
stos
xchg
or
mov
xchg
mov
mov
scas
sbb
mov
rorl
je
mov
dec
sbb
mov
mov
inc
repz
mov
out
sahf
jmp
sti
mov
shlb
leave
sarb
int3
filds
test
xchg
and
cs
sbb
test
outsl
daa
andl
inc
and
insl
mov
sbb
inc
test
out
imul
jns
lret
repz
xchg
or
push
mov
outsb
xlat
mov
mov
adc
fimuls
or
repnz
aaa
and
push
cld
pop
adcl
in
jle
nop
aad
stos
imul
shl
mov
ljmp
addb
push
dec
and
pop
ret
or
in
dec
sub
pop
mov
ja
dec
cs
aas
jg
scas
fbld
lods
xor
sbb
jge
ret
div
jb
mov
adc
xchg
adc
sahf
mov
js
pop
pop
mov
loope
ljmp
or
sbb
in
inc
lds
adc
jmp
lahf
add
inc
mov
mov
jmp
dec
jne
push
loopne
and
sbb
addr16
push
add
add
xchg
pusha
mov
out
push
out
sub
or
lods
je
sbb
loope
inc
cmpsb
dec
push
or
pop
js
icebp
or
mov
mov
add
mov
push
imul
and
int
adc
in
nop
inc
fimuls
pushf
mov
fs
dec
out
jbe
inc
pusha
mov
fistpll
fabs
imul
idiv
movsl
outsl
jp
push
xlat
dec
sarb
cmpsl
sub
loope
mov
mov
out
stos
out
mov
fbstp
and
mov
mov
mov
pushf
cwtl
pop
sub
cltd
jecxz
ja
scas
add
jp
jl
xchg
adc
lods
insb
adc
mov
dec
mov
sti
in
push
imul
mov
push
push
lcall
mov
push
loope
pop
adc
mov
push
stos
imul
jg
sbb
int3
push
xlat
das
fstpt
pop
stc
adc
cmp
fnstcw
mov
jp
daa
incl
sbb
jnp
xor
data16
mov
in
movsl
movsb
insl
rol
sub
dec
and
ret
out
mov
dec
out
mov
cmp
in
aaa
fisttps
mov
mov
mov
sar
or
sub
mov
or
jmp
mov
aas
iret
dec
push
movsl
sbbb
mov
sbb
mov
lock
cmp
jmp
or
push
call
add
enter
call
int3
dec
lea
aam
insl
roll
jg
mov
or
fsubrs
daa
pop
enter
cmp
scas
xlat
icebp
lcall
push
outsb
inc
sub
popa
jae
daa
lock
sub
fxch
sbb
dec
subl
scas
pop
fisubrs
push
loopne
mov
roll
xor
dec
fucomip
or
out
ss
in
jae
fidivs
mov
movsl
in
iret
or
shrb
or
push
das
mov
mov
and
int
push
enter
lds
inc
mov
lods
mov
xor
subb
aad
out
and
fimull
stc
xchg
add
xchg
and
and
cmp
clc
push
sub
mov
shl
add
mov
sbb
jle
sarb
fwait
cmp
aaa
jmp
add
cli
mov
aad
xchg
sub
cld
dec
fwait
into
ljmp
pop
sub
xor
inc
popa
subb
in
pop
lods
add
lret
in
in
icebp
daa
push
cld
adc
clc
arpl
and
push
test
fidivl
addr16
pushf
enter
out
ret
mov
push
cmp
dec
stos
cmpsl
imul
sti
stc
dec
lahf
ret
xchg
mov
sbb
adc
outsl
cmp
fld
lock
hlt
xchg
xchg
sahf
ficomps
adc
jns
sub
pop
lahf
movsl
pusha
push
mov
out
push
or
fwait
jae
andl
cmp
out
daa
mov
jle
jg
lds
jle
sub
es
xor
xor
or
shll
push
mov
loop
adc
xchg
adc
arpl
ret
or
in
jecxz
clc
mov
mov
arpl
adc
xor
adc
cs
popf
cmpsl
cmp
push
in
xlat
sub
in
icebp
fildl
sbb
sub
loop
cld
dec
sub
test
clc
mov
or
xchg
pusha
imul
jp
sbb
or
sub
dec
aam
inc
js
movsl
outsb
aas
test
fcompl
lahf
mov
fldt
fiaddl
ret
fadds
mov
outsl
fwait
inc
lock
mov
add
sbb
fs
xor
xchg
or
mov
inc
cld
sbb
stos
cmpsb
scas
dec
mov
xchg
pop
int3
xchg
adc
dec
cmp
push
mov
xchg
mov
hlt
mov
push
imulb
xlat
fldenv
imulb
loope
dec
mov
mov
add
adc
mov
inc
rorl
cmc
or
in
dec
int
arpl
test
fisubrs
xlat
jae
pop
nop
sar
cs
jp
jle
call
decb
xor
inc
out
and
pushf
pop
ds
movsb
les
or
js
jno
fidivrl
sub
fisttpl
sub
repnz
xor
pop
inc
xchg
daa
cli
mov
jg
jp
or
and
je
cmp
addr16
lea
inc
jnp
sbb
aaa
fisttps
jne
aas
movsl
pusha
dec
and
sub
dec
pop
lret
push
loopne
clc
cmp
mov
ss
mov
fnstenv
rorb
jp
sub
into
mov
out
mov
add
jno
and
icebp
inc
int3
push
mov
mov
ljmp
sbb
or
mov
scas
test
or
sub
movsl
jo
dec
and
push
int
cmpsl
nop
mov
clc
loop
xor
jno
push
push
mov
fistpll
enter
jl
lods
add
adc
test
pop
movl
aaa
pop
dec
pop
xor
dec
xor
repnz
sub
fs
lods
cltd
outsb
add
xchg
mov
push
loop
insl
xchg
aas
cmpsb
jl
adc
xor
mov
ficoml
jne
bound
fisubs
mov
add
push
aad
adc
test
pop
test
out
and
lds
mov
dec
sub
xor
pop
jbe
in
push
roll
ficompl
ret
sub
and
enter
add
dec
rcll
fnsave
cmpsl
mov
fidivrs
pop
in
xchg
lods
sub
in
xchg
cmc
ficomps
movsl
dec
dec
addl
lret
pop
mov
cmpb
mov
fisttps
out
xchg
adc
jo
cmp
sbb
repnz
in
test
shr
inc
jmp
pop
push
addr16
in
mov
inc
aas
outsl
or
repz
movsl
pop
fwait
int3
mov
mov
jb
or
and
fstpl
nop
push
fwait
xchg
loopne
out
pop
push
loop
adc
jmp
loopne
aaa
xor
inc
adcl
inc
fdivr
outsb
mov
xchg
insb
ret
dec
cmp
mov
cmc
in
pop
inc
mov
mov
jg
in
dec
dec
mov
sbb
subb
jle
xchg
sub
and
xchg
xchg
dec
dec
jb
dec
jmp
fld
cmp
dec
roll
popf
call
shl
fdivr
andl
and
fistpl
jmp
xor
in
mov
fwait
outsl
xchg
lret
popa
sti
mov
sbb
es
jg
dec
int
aaa
pop
enter
adc
inc
inc
scas
push
rcll
add
mov
jmp
jnp
scas
dec
xlat
jmp
push
adc
aas
jl
xor
lea
movsl
cli
adc
gs
xor
test
inc
cli
dec
mov
pop
js
test
inc
repnz
adc
mov
pop
clc
rcr
add
push
mov
les
xchg
push
push
pop
cld
adc
mov
cmp
fs
insl
cmp
cli
pop
jne
and
sub
std
sbb
adc
fdivrs
push
clc
jnp
in
fnstenv
call
jb,pn
mov
scas
mov
mov
outsb
or
int
loopne
jge
sahf
dec
cmpsb
nop
repnz
fisubl
dec
xchg
push
sbb
cltd
test
mov
cmpsb
lock
or
por
mov
jmp
mov
add
stc
sarl
add
call
sbb
icebp
clc
pop
shr
pop
ret
sub
popf
sub
lret
es
add
mov
xchg
xchg
xor
cmpsl
into
push
cmpsl
in
mov
pop
imul
push
push
pusha
mov
jg,pt
loope
jecxz
lock
push
push
icebp
bnd
ficomps
push
in
clc
cli
aam
pop
aaa
rcll
mov
test
mov
or
mov
lds
inc
mov
mov
xchg
add
pop
mov
icebp
adc
add
xor
ds
stos
outsb
mov
inc
ljmp
es
insl
js
add
movsl
rorl
pand
mov
fnstcw
jg
push
push
outsl
pop
fisttps
dec
sub
loop
adc
dec
and
jne
xchg
rcll
xchg
cmpsl
loop
cwtl
fistps
fisubl
jae
xchg
mov
jl
and
xor
xorl
lea
xchg
jp
mov
sub
leave
jne
insb
into
jns
lods
movsb
sbbl
mov
iret
cmp
nop
popa
mov
seta
lret
loopne
test
or
dec
pop
int
sub
mov
push
mov
sbb
and
push
insb
je
cld
jmp
out
test
inc
inc
mov
incl
outsl
hlt
dec
das
ja
add
mov
dec
ljmp
das
cmpb
xor
sahf
ret
rorl
dec
das
mov
mov
push
sub
sbb
test
cmpsb
dec
sub
out
adc
jae
lahf
sub
push
pop
insb
bound
and
pop
xchg
lods
adc
sub
fwait
daa
xor
jmp
xorb
hlt
sbb
hlt
cmc
cmp
sub
xchg
dec
pop
pop
lock
lret
mov
jns
out
es
or
jl
ret
cmp
inc
test
sbb
andl
iret
fs
add
jae
movsb
pop
data16
insb
or
in
shl
mov
sub
inc
adc
aas
cmp
xor
ss
cmp
fcoms
sub
notl
cmpsl
or
jmp
add
inc
adc
cld
loop
jp
push
or
shrl
pop
xor
in
push
call
xor
popf
jns
iret
cmp
addb
shll
push
fmull
iret
jo
js
and
or
add
cmp
xlat
js
push
in
repnz
sub
sbb
mov
or
aaa
scas
ljmp
mov
adc
aaa
jbe
mov
out
mov
jl
scas
clc
sub
pop
fwait
cmp
pop
std
push
push
lods
mov
into
xchg
das
aam
jmp
sbb
divl
mov
shll
ja
mov
shl
aas
jno
sbb
imul
adc
sbb
outsl
ret
in
mov
sub
and
outsl
jl
push
imul
dec
leave
inc
in
jnp
lcall
fwait
lret
adc
movsb
mov
sti
popa
add
xchg
fisttps
mov
adc
or
daa
jge
popf
jne
aaa
xorl
dec
sbb
aas
out
int3
push
call
lahf
pop
dec
xor
rcrl
cli
mov
cmpsl
imul
lcall
mov
xor
pop
leave
in
fsubrl
cmc
mov
dec
xchg
inc
mov
sbb
mov
cltd
adc
dec
adc
push
cmp
push
inc
lds
xor
push
pop
inc
inc
cli
mov
jg
mov
xchg
rorb
inc
scas
repnz
in
mov
stc
mov
mov
loop
ficompl
stc
cli
popf
bsr
loope
xchg
xor
sbb
cld
rolb
mov
out
jnp
loope
mov
or
aas
pop
sti
arpl
outsl
mov
movl
addr16
mov
xor
pop
mov
pop
push
fadds
jbe
mov
outsb
mov
cmp
or
or
imul
mov
dec
mov
xchg
imul
inc
int3
lret
es
ja
jmp
ret
lods
lock
movsb
sub
or
test
cmpsb
sarl
fcmovu
xchg
bound
lock
cmp
fdivr
xchg
ljmp
repnz
ror
jp
xchg
test
push
js
add
adc
mov
mov
addr16
adc
test
push
mov
ljmp
push
pop
loopne
mov
xor
lahf
fstl
push
mov
sbb
loop
pop
movsb
pop
leave
jle
or
shlb
xchg
stc
fcomps
je
test
xchg
fwait
imul
inc
mov
subl
jae,pn
out
shlb
mov
lods
std
lods
pop
push
and
cmp
shr
dec
xchg
jo
jle
mov
aaa
jge
adc
ljmp
mov
jge
xchg
xor
sbb
pop
mov
xchg
arpl
es
cltd
sahf
jmp
cmp
into
pop
push
adc
shlb
cs
or
lea
aas
loopne
jmp
rcrb
cmp
xor
add
jae
lcall
sub
rorb
inc
popa
das
ror
in
xlat
call
icebp
cltd
sub
adc
imul
mov
jl
das
inc
pushaw
es
lret
push
inc
pop
movsl
loope
divl
mov
loop
and
sahf
or
cmpl
fistpl
out
aas
sub
roll
iret
jo
mov
cli
lods
or
in
out
lods
in
jnp
daa
mov
lcall
sbb
inc
iret
jo
cmp
imul
sbb
shll
or
pop
insl
mov
sbb
pop
sbb
dec
andb
lock
lahf
repnz
adc
pop
and
out
jbe
stc
mov
sbbl
dec
and
sub
icebp
fs
push
push
mov
and
imul
jo
in
push
xor
xchg
and
sub
xchg
mov
dec
inc
sub
lcall
test
pop
xor
popf
pushf
xchg
sbb
or
inc
sub
add
mov
cmpsb
bound
out
or
xchg
or
rcr
xor
aad
repnz
call
bound
pushl
repz
sub
test
and
jbe
adc
and
pop
insb
xchg
outsb
pop
out
enter
repnz
and
call
xor
cmpb
sbb
xchg
pop
cmp
outsb
mov
pop
nop
ret
addr16
and
scas
push
xchg
fdivrl
jge
mov
sahf
sarl
aas
xchg
inc
push
dec
mov
cmc
and
push
fstpt
jl
push
adc
mov
pop
inc
lret
mov
cmp
popf
mov
xchg
xchg
or
dec
adc
dec
data16
xorb
pop
mov
jle
or
cmp
rolb
orb
push
xor
lods
daa
gs
ficoml
mov
insb
push
and
cmpsl
jne
xchg
outsb
push
popf
inc
mov
fildll
cs
iret
dec
cmc
sahf
pop
shrb
xchg
sahf
cs
cmpsl
jnp
stos
rolb
outsl
arpl
test
cli
mov
clc
xchg
xchg
push
mov
repz
imul
cmp
ss
mov
sbb
inc
sbb
fmuls
push
add
in
clts
or
lock
lods
mov
mov
and
push
or
sarl
or
pop
js
pusha
push
repz
aaa
push
jb
dec
fldt
fildl
dec
pop
insb
ret
xchg
adcl
mov
sarl
lret
jmp
jle
cmp
leave
jl
mov
sub
ja
push
pop
loop
inc
filds
pop
sbb
push
stos
sbb
push
pop
add
xor
pop
jne
mov
sti
or
push
push
cmp
nop
mov
mov
adc
sub
mov
fldt
jbe
int3
outsb
lret
add
push
mov
cltd
js
lret
mov
inc
in
inc
mov
ss
in
dec
popa
insl
jno
and
inc
and
or
xchg
notl
ljmp
test
es
push
movsb
inc
sub
fld
out
jg
cmp
mov
inc
mov
mov
test
push
cmc
push
js
fdivrl
mov
inc
jae
and
std
test
lods
xor
loope
cmc
das
xchg
pop
leave
sbb
push
xchg
sub
cmp
mov
dec
add
pop
sbb
cmp
inc
popa
mov
out
sub
rorl
mov
je
inc
dec
inc
in
pop
and
sub
stos
add
test
mov
add
inc
lahf
shll
inc
jae
and
enter
pop
pop
dec
mov
push
cs
hlt
divl
cwtl
and
push
sub
xchg
dec
jecxz
xchg
ret
xchg
fsubl
test
ret
pop
push
mov
insl
push
lea
ffree
add
push
push
cmpsl
cmp
mov
out
or
test
and
dec
out
dec
xchg
mov
dec
addr16
mov
push
mov
hlt
push
out
mov
cs
mov
push
pop
pop
insb
inc
cs
jo
mov
and
rcrl
push
cltd
cmp
xor
mov
xchg
sbb
mov
test
pop
mov
lods
mov
dec
mov
pop
jbe
add
xor
cwtl
push
xchg
jecxz
mov
jge
rcll
jb
xchg
dec
jmp
push
out
lret
pop
jno
stc
sbb
icebp
call
mov
sbb
cld
js
or
mov
cli
ret
outsl
xchg
adc
daa
in
pop
mov
shlb
jg
xor
jecxz
repnz
cmp
inc
les
push
test
adc
stos
test
rorl
cmpsb
xchg
push
jl
add
mov
xorb
cltd
lock
sbb
add
fists
jg
mov
cmp
inc
inc
out
or
add
cmp
bound
or
outsb
scas
nop
sbb
adc
adc
and
jcxz
cmpsl
cmp
cmp
inc
cmp
sub
leave
mov
js
add
dec
or
jl
sbb
shr
mov
out
stos
dec
jg
mov
jbe
fsubrs
pop
sbb
ficoms
aam
pop
jmp
jns
push
das
and
xor
mov
and
shll
sbb
inc
sub
and
sub
int3
fsubrs
repz
and
sbb
sub
test
decl
scas
loopne
jmp
fwait
cmp
bsr
cmpsb
and
dec
or
shrl
ss
ficoms
mov
jo
adc
adc
mov
mov
mov
lret
adc
fsubs
or
aam
addb
cs
shrb
inc
add
or
popf
dec
shrb
or
fs
mov
xchg
cmp
int
ficompl
cwtl
adc
and
cmp
jmp
mov
xor
fs
lods
inc
loopne
mull
arpl
mov
mov
gs
adc
xchg
lret
div
ljmp
xor
xchg
mov
jg
test
jb
cmp
xor
xlat
sub
popf
movsl
xor
imul
insl
mov
inc
pusha
popa
or
mov
sub
in
movsb
lret
test
cltd
mov
call
or
in
cmp
flds
fmuls
mulb
out
pop
push
inc
outsl
cmp
sbb
and
dec
loope
push
call
sbb
inc
xchg
cmp
roll
loop
into
push
adc
cwtl
and
testb
dec
in
cmp
or
inc
lods
push
inc
push
bound
and
mov
mov
mov
pop
dec
lds
sub
pop
sbb
rolb
adc
js
and
add
push
push
mov
mov
sbb
sbb
or
jb
mov
leave
lea
scas
in
jmp
lds
xchg
mov
stos
mov
test
test
lds
jns
fisubs
loopne
cmpsl
pop
hlt
rorl
jo
cli
jmp
xchg
ret
mov
sahf
add
fidivrl
lods
jl
outsb
shll
dec
inc
fsub
fsubs
xor
pop
xor
push
out
stos
in
mov
lods
pop
push
push
cmp
fisubs
call
fsubl
lret
sbb
mov
pop
push
pop
call
and
movsb
jg
jb
inc
loope
xor
jg
xorl
outsl
lahf
jnp
or
mov
lret
mov
ds
mov
mov
pop
lret
outsb
sbb
jne
mov
or
movsb
xor
push
mov
lret
pusha
xor
clc
xchg
dec
lea
push
pop
fildl
orl
imul
ja
lret
adc
and
mov
imulb
ljmp
neg
leave
and
popa
jmp
inc
in
dec
inc
inc
push
xor
aad
add
dec
xorl
jecxz
out
jl
lahf
shl
push
sub
or
or
cwtl
sub
cld
lret
jg
int3
frndint
mov
sahf
movsl
inc
xor
jbe
iret
xor
xchg
jmp
mov
mov
lret
lahf
lcall
sti
xchg
bound
jnp
cmp
add
jno
and
mov
push
in
mov
popa
clc
sbb
aaa
inc
ret
sbbl
mov
inc
sbb
in
xchg
daa
mov
divb
jb
aas
push
addr16
jmp
xor
xchg
sti
inc
cmc
ja
or
xor
xor
popf
gs
out
and
mov
insl
insb
inc
jle,pn
sub
cmpsl
fidivs
cmp
cmp
pop
push
enter
jnp
iret
fsubrl
mov
jp
jo
adc
mov
sub
ret
pop
icebp
mov
or
rcl
sarb
andl
xchg
jmp
or
xor
decb
in
out
cltd
push
add
mov
sbb
imul
mov
and
push
jmp
data16
fildll
scas
mov
jecxz
jo
pop
jns
imul
inc
into
mov
andl
icebp
ret
adc
sub
outsb
mov
and
push
push
mov
xor
test
jp
nop
push
pop
imul
test
xor
sbb
mov
out
push
push
inc
int
cld
stc
xchg
lcall
mov
mov
cmp
sbbl
fistl
rcll
adcb
out
aas
pop
push
into
push
push
mov
scas
add
cmpsb
sar
push
push
scas
test
cs
add
xchg
mov
jnp
cmp
int3
mov
mov
cmp
push
inc
xor
out
repz
movsl
adc
mov
in
xchg
jle
dec
jp
in
push
fimuls
rcll
icebp
aad
sarl
into
inc
popa
addr16
jl
ss
cld
test
ret
inc
and
push
mov
mov
jns
mov
jbe
cwtl
lods
or
cmp
xor
dec
adc
ja
subb
inc
inc
pop
imul
xor
add
xchg
setns
cmpsl
cmc
pushf
sub
lcall
jl
test
or
sub
sbb
mov
incb
movsb
mov
into
out
sub
jmp
xchg
xor
ja
fcmovnb
inc
js
xchg
lahf
xchg
push
sahf
pop
sbb
mov
pusha
mov
inc
out
daa
jae
pop
sbb
xor
or
mov
aas
dec
jmp
jg
push
push
adc
or
push
leave
jle
push
adc
jecxz
sbb
pop
aaa
out
jl
rolb
out
inc
call
sbb
and
xor
fcmovu
sahf
cld
mov
sbb
lret
loope
paddw
int
jne
pop
pop
push
and
inc
sub
push
rorb
jo
adc
popw
fildll
lahf
add
jg
popa
mov
mov
cmp
sub
nop
ss
mov
aaa
mov
lcall
add
pop
das
jns
dec
ret
pop
add
pop
xor
rorl
jbe
xchg
adc
aaa
dec
xchg
hlt
pushaw
cmpsl
std
jns
xor
cmpsl
xchg
inc
dec
jecxz
int3
bswap
popa
mov
in
bound
cli
push
jecxz
pop
ret
insb
icebp
loop
xchg
sahf
jb
frstor
fbstp
popf
sahf
mov
in
or
push
add
insb
mov
add
leave
mov
jp
shl
cmpsb
repnz
stos
sub
push
out
push
hlt
ja
int
fldcw
daa
jns
aaa
and
clc
pushf
je
push
pop
jnp
jo
enter
inc
daa
mov
mov
push
in
jne
into
sub
iret
mov
ret
dec
push
mov
sub
add
push
imul
cld
inc
xor
fidivrs
int
stos
dec
jns
xlat
arpl
or
xadd
pop
or
inc
hlt
fidivrs
lret
add
pushf
movsl
jmp
dec
imul
push
test
imul
shlb
imul
fsubrl
lock
mov
xchg
or
jle
pop
stos
add
movsl
sbb
imul
adc
aas
mov
out
test
cmpsb
fadds
lret
mov
int
push
rcll
shll
clc
ljmp
int
pop
sub
iret
pushl
or
add
inc
inc
aaa
popl
mov
imul
push
insl
out
mov
or
out
cmp
pop
jle
aas
jecxz
dec
test
jecxz
sub
gs
and
out
pop
mov
out
push
and
sti
movsl
jns
std
mov
cmp
fldenv
jno
es
jmp
push
dec
pop
inc
sub
pop
into
push
push
test
les
ficoms
xchg
xlat
in
mov
cmc
push
xor
and
scas
dec
lret
scas
pop
mov
icebp
movsl
sub
sahf
xchg
test
or
jg
push
arpl
xchg
xor
rolb
mov
sti
inc
mov
adc
jmp
or
fisttps
dec
mov
cmp
inc
mov
mov
sti
repnz
jp
call
out
cmp
out
adcl
jae
std
outsb
fildl
sarb
adcl
jle
ror
outsb
push
xor
fdivl
insl
and
push
mov
inc
ss
xchg
add
test
bound
add
subb
leave
subb
mov
push
pop
or
push
daa
mov
mov
pop
in
out
popa
jge
lods
pop
es
cwtl
stc
cmp
mov
push
ss
pop
cs
xchg
hlt
jne
add
or
mov
cmp
mul
cmp
and
movsl
inc
shll
pop
imul
enter
das
add
pop
leave
fsub
mov
xor
cmp
mov
jno
xchg
pop
enter
mov
xchg
push
adc
cmp
cmp
pop
fistpll
icebp
or
or
sbb
dec
pop
xorb
jno
popa
jecxz
xor
adc
cmpb
pop
out
rcll
test
loopne
dec
dec
popf
mov
cmp
and
ficompl
xchg
fistpll
pop
imul
push
ja
outsb
out
xchg
pop
add
push
inc
or
mov
imulb
inc
ljmp
jge
jnp
daa
popf
loop
cmp
xchg
pop
cs
fwait
popa
repz
cmovb
int
xchg
fdivrl
aaa
test
inc
jo
test
outsb
dec
pop
insb
jae
out
out
int
scas
add
jl
ret
and
or
cwtl
clc
sub
fsubl
dec
jle
add
xchg
subl
or
mov
xchg
jo
jno
dec
stc
inc
int3
pop
pop
addr16
mov
or
xorl
scas
fucomp
ss
iret
movsl
add
loope
rcrb
mov
inc
jecxz
cmp
jbe
sub
sti
aas
and
jo
and
lock
mov
add
push
add
adc
cmpl
pusha
xchg
mov
sbb
xchg
ret
repnz
mov
add
sub
mov
out
call
xchg
adc
addb
jno
pop
inc
mov
push
mov
sbb
test
std
pop
or
dec
in
xchg
pushf
fists
inc
inc
dec
pop
pushf
stc
andl
add
adc
sbb
sub
add
or
aam
xor
popf
add
mov
jecxz
pop
mov
sub
xchg
push
xchg
and
cmp
pop
cltd
sbb
jne
sub
fstps
pop
cmp
out
jl
push
mov
pop
bound
adc
call
out
mov
jecxz,pn
lret
push
std
imul
sub
in
cs
or
mov
mov
mov
scas
pushf
jmp
jbe
mov
fdivrs
fwait
lret
push
dec
dec
test
ret
inc
in
out
and
pop
imul
push
sub
jns
add
dec
push
and
dec
jae
and
and
mov
mov
cmp
mov
movsb
jbe
ja
cltd
lock
inc
mov
mov
jae
scas
xchg
mov
addr16
call
call
fdivr
mov
es
sbb
push
loopne
ss
repz
or
lahf
pop
jg
push
shll
add
mov
movsl
push
and
xor
inc
jae
xor
mov
std
loope
sahf
mov
lcall
sahf
dec
pop
and
sbb
in
lock
mov
mov
sub
pushf
test
jp
int
pop
jne
int3
fwait
pushf
stos
xchg
pop
dec
inc
sbb
mov
out
aam
ror
lret
pusha
jp
mov
sub
loope
movsb
and
pop
inc
rclb
cld
sub
and
repnz
into
adc
ljmpw
xchg
and
xlat
in
jle
or
enter
jge
cmp
mov
inc
sbb
mov
or
pop
xchg
arpl
xlat
sar
mov
mov
add
push
aas
inc
ja
pop
cmp
in
add
xchg
lret
sub
adc
mov
push
and
cwtl
scas
rcll
dec
test
xor
out
insb
outsb
icebp
cmp
push
push
cmp
pop
test
outsb
mov
jp
sub
sbb
lock
add
or
dec
test
or
xor
add
xor
call
cs
fstpt
sbb
dec
clc
iret
sbb
ror
and
lret
out
sub
cli
and
cli
popf
xchg
fcoms
dec
lods
inc
dec
ss
sub
inc
ds
cmp
pushf
inc
adc
popa
loop
push
sahf
add
mov
mov
sub
jne
cld
and
and
arpl
inc
inc
lods
push
test
scas
mov
popf
imul
pop
sbb
adc
dec
or
dec
xor
fs
jle
mov
jecxz
cmp
xchg
rcrb
jle
inc
mov
mov
pop
add
and
cwtl
sbb
sbb
jo
cld
cmp
ret
cmp
pop
imul
jno
jbe
add
fdiv
xor
jp
mov
xor
shl
fisttpl
roll
sub
ret
aas
jp
jo
cmpb
call
push
dec
idivb
scas
sbb
shll
xor
cltd
ljmp
xchg
mov
and
xchg
sbb
fsubrp
js
push
cmp
cmpsl
ds
movsb
dec
pop
cmp
xor
mov
mov
scas
sbb
mov
fnstsw
mov
cmp
sbb
push
or
pushf
add
rol
loop
dec
mov
dec
pushf
addr16
addr16
dec
in
inc
hlt
pop
mov
mov
das
pop
sahf
hlt
xchg
test
je
aad
jg
scas
fists
push
mov
mov
fidivs
cmp
xor
scas
xor
mov
mov
int
mov
in
mov
xchg
mov
adc
in
cmpsb
repnz
and
cmp
je
ss
mov
test
pop
rorl
dec
dec
sbb
addr16
jecxz
out
int3
into
roll
imul
push
sub
out
andb
addl
mov
ret
lods
sbb
repnz
mov
dec
push
mov
mov
sahf
jg
fstpt
rorb
repz
sbb
pop
dec
std
leave
loop
imul
mov
xchg
inc
stos
sub
push
adc
dec
setne
in
inc
jg
pop
pop
and
popf
and
scas
filds
mov
test
lret
ret
pop
and
adc
ja
aad
leave
xchg
xchg
jnp
leave
jb
adc
repz
jmp
lods
mov
adc
inc
movsb
int
mov
stc
mov
js
cwtl
cmp
xlat
test
fldt
jp
lods
lds
fwait
and
sbb
divl
xchg
cmpsb
mov
and
gs
push
out
roll
sbb
inc
sub
hlt
movsl
push
sbb
rclb
dec
pop
pop
inc
push
mov
dec
ficompl
jnp
das
jge
hlt
xchg
push
cld
fs
sub
dec
shl
ret
add
int
sub
inc
mov
stos
call
mov
in
jmp
fistpll
xor
leave
lods
push
mov
mov
fcompl
jbe
fcoms
mov
fstpt
clc
and
in
clc
hlt
leave
pusha
mov
hlt
xchg
cmc
add
and
dec
fdivp
hlt
dec
jecxz
sbb
inc
movsl
add
jns
andl
inc
les
popf
popf
add
add
lret
loop
das
mov
sub
enter
push
adc
movsb
movsb
in
stc
pop
lods
or
shll
mov
xchg
mov
cmp
rcrb
outsl
aam
es
push
insl
ret
pop
insb
lcall
pop
xchg
dec
mov
rcll
cmp
xchg
mov
or
mov
xor
pusha
out
jnp
int
sub
jmp
cmpsl
mov
inc
jecxz
insl
and
daa
sub
wrmsr
arpl
add
or
cmp
popf
mov
dec
pop
pop
pop
ds
push
std
lret
idivb
xchg
cltd
jle
out
mov
mov
jle
dec
push
mov
scas
push
dec
flds
jno
enter
pop
loopne
and
aad
jg
and
mov
leave
ja
test
je
mov
mov
mov
movaps
int3
mov
mulb
jecxz
sub
add
xor
sbb
int
stc
cmpsl
mov
push
setb
mov
jb
sub
ret
pop
jl
mov
pop
negb
mov
mov
lahf
lcall
cmp
dec
xchg
int3
push
mov
imul
notb
inc
fisttps
jbe
lahf
cmpsb
cmc
sub
jne
repnz
jo
mov
rorl
pminub
das
bound
outsb
scas
popf
pop
or
sti
repnz
std
pop
js
imul
push
stos
cmc
mov
stos
mov
test
xchg
sbb
scas
popa
add
in
mov
scas
or
sbb
inc
in
cmp
sub
mov
mov
add
or
dec
and
aaa
add
das
push
mov
dec
pop
jecxz
pop
xor
add
ja
pop
fcomp
mov
add
sbb
ret
nop
sbb
sahf
jg
sbb
mov
negl
mov
jbe
ljmp
lsl
sbb
or
xchg
adc
ja
inc
jne
lea
outsl
jp
frstor
cld
xchg
addb
cltd
cld
js
movsb
adc
cmp
dec
dec
mov
mov
pop
repz
pop
push
adc
movsb
movsl
sub
sub
lods
xchg
subl
mov
jns
out
jne
jmp
leave
and
cmp
mov
fnsave
and
or
xlat
inc
fisubrl
sbb
loope
jno
mov
dec
mov
sub
or
cs
mov
pop
push
stos
sub
adc
jo
mov
dec
mov
push
mov
mov
mov
lea
insb
mov
jo
mov
fwait
push
or
dec
inc
shlb
cmp
adc
inc
int
mov
xchg
imul
js
lret
sub
mov
clc
out
mov
int3
gs
mov
fnstsw
jb
push
mov
addr16
cmp
das
xchg
mov
mov
dec
fwait
add
out
xlat
repnz
sbb
in
jne
hlt
cwtl
adc
xor
lea
xchg
inc
sub
lds
sarl
rol
popa
cld
push
and
in
imul
push
cmc
xchg
sub
sub
insl
das
dec
jp
add
stos
or
ret
jnp
xchg
mov
push
in
xchg
ds
jp
mov
pusha
sub
jmp
je
and
out
xchg
test
pop
in
rcl
test
xchg
movsl
faddp
push
scas
adc
inc
dec
inc
roll
clc
cmp
pop
icebp
adc
xchg
fnstsw
and
test
pop
fisubl
ret
or
or
sbb
mov
movsb
ds
add
hlt
std
jecxz
mov
jle
cmpsb
mov
pop
in
mov
mov
adc
mov
xor
sub
push
jmp
arpl
mov
mov
xchg
adc
loop
das
sub
ret
jle
xchg
flds
mov
cmp
enter
ljmp
lahf
inc
pop
mov
stos
adc
mov
pop
mov
call
pop
outsb
cmpsl
out
lods
jo
jb
cmpsl
int3
fwait
js
out
cmp
incl
gs
out
or
mov
inc
loope
movsl
aad
insl
in
cld
out
scas
arpl
ljmp
adc
mov
and
inc
push
xlat
repz
cmp
xor
shll
adc
inc
std
xchg
fdiv
out
fistpll
roll
shlb
lea
ret
jns
pusha
jle
movsb
loop
leave
add
mov
jo
and
and
mov
adc
scas
cmp
xchg
test
jns
jge
inc
out
xor
and
or
out
xchg
add
pop
inc
push
mov
or
rorb
mov
scas
imul
subb
xchg
sbb
pusha
ljmp
in
pop
stos
inc
adc
sbb
loopne
rclb
add
mov
jo
and
add
xchg
shrl
movsb
add
xchg
pop
rclb
mov
adc
sbb
mov
cmpsb
out
xchg
cmp
push
lcall
sbb
pop
cmc
add
dec
outsb
daa
incl
aas
fs
rclb
jnp
pop
xorb
outsb
adc
dec
pop
jg
mov
loopne
fimull
mov
fsubp
into
outsl
add
inc
into
adc
inc
dec
xchg
outsl
lret
jmp
cmc
inc
nop
lds
ret
push
dec
and
je
stos
fsubrs
insl
mull
sbb
in
std
dec
imul
lods
adc
inc
and
xor
push
xchg
mov
repnz
imul
sub
lods
and
or
icebp
call
sbb
lcall
pop
das
lahf
imul
jb
xor
mov
dec
xor
scas
jbe
mov
std
insb
pop
test
jns
dec
sub
sbbb
in
imul
push
gs
cmp
test
js
repnz
xor
imul
push
add
push
arpl
scas
aas
mov
inc
jne
mov
ror
cltd
sbb
in
jle
jge
sarb
push
repz
ret
mov
pop
sbb
xchg
push
fdivs
sub
enter
popf
xorl
lea
in
addl
js
and
adc
mov
imul
or
mov
stos
push
lds
incb
fistps
jmp
icebp
mov
test
cmc
jb
ret
stos
movsb
jl
dec
in
push
outsb
data16
sbb
out
lods
pop
sbb
push
or
xchg
sti
add
add
mov
scas
cli
mov
rcrb
fmul
sub
xchg
jns
in
cmp
xchg
orb
repz
or
hlt
jl
dec
sbb
add
and
sahf
mov
es
imul
pop
jae
and
jo
lock
push
or
sub
lds
sub
push
arpl
jb
scas
imul
leave
insb
iret
fwait
out
mov
xor
adc
push
or
std
push
lds
push
nop
dec
test
add
addr16
pop
imul
pop
adc
and
mov
dec
daa
aad
aad
fimull
bound
dec
sub
push
iret
icebp
int3
fwait
sti
ret
mov
lea
std
loopne
fwait
mov
lods
repz
xor
push
ficoms
es
addb
pop
shr
outsl
dec
lds
jne
add
in
hlt
push
jb
inc
lock
out
sbb
and
ja
mov
mov
pusha
cmp
mov
sub
xlat
push
sbb
mov
dec
sub
mov
divb
es
and
jmp
dec
fwait
lahf
sbb
push
repnz
inc
test
test
daa
adc
and
and
inc
lds
int
dec
repz
movl
mov
pusha
aam
push
and
adc
push
pusha
loope
ja
sbb
sub
shr
cmp
pop
xchg
fldt
adc
adc
dec
adcb
int
mov
inc
pop
sbb
sub
jns
xor
notb
in
dec
int3
jecxz
jns
cmpsb
push
push
mov
push
mulb
jp
out
fwait
popa
pop
pop
mov
mov
negl
aam
adc
in
dec
push
xchg
clc
movsb
leave
push
scas
xchg
cmpsl
pop
fstpl
stos
movups
stos
psubsb
cs
roll
shll
in
dec
sub
lret
jo
leave
or
jecxz
and
cmp
sbb
adc
fisttpl
cmpsb
push
je
les
out
iret
inc
mov
dec
xchg
arpl
mov
xchg
fsubs
adc
sbb
mov
pop
imul
incb
push
xor
push
sarb
out
addr16
sub
pop
pop
in
pop
aad
push
out
rcr
or
lock
xchg
ja
jl
add
mov
pop
pop
or
scas
jg
push
in
push
lds
pop
insl
sbb
and
mov
ret
push
scas
mov
stos
dec
imul
cmp
sub
scas
fisttpl
cld
adc
mov
stos
pop
int3
add
test
rcll
push
jae
mov
mov
xchg
adc
mov
mov
fsubl
cld
dec
inc
outsl
cmp
cmpsl
cmpsb
and
cmp
sub
popf
adc
cmc
rolb
cmp
ficoms
lock
or
repnz
insl
cmpsb
cli
cmpsl
test
mov
sarl
cmp
cli
mov
fadd
mov
dec
add
mov
xchg
test
rcr
adc
cmp
iret
mov
sbb
cwtl
adc
xor
aam
adc
mov
mov
dec
stos
repnz
xor
sbb
mov
rol
push
inc
fstpt
push
je
jmp
pop
in
ljmp
jb
or
and
jo
push
mov
mov
and
sahf
shl
dec
pop
ljmp
xchg
aam
das
xchg
ss
pop
cli
adc
add
jge
push
bound
xchg
inc
jecxz
sub
sbb
mov
loop
or
xchg
in
and
adc
jno
jns
xor
dec
adc
or
jae
aad
ja
icebp
cmp
xchg
xchg
sub
insl
cmp
or
mov
into
ds
test
sub
adc
incl
xchg
mov
scas
sbb
adc
aam
iret
mov
jge
pop
mov
pop
cmp
daa
xlat
imul
cs
sbb
cli
out
mov
cmc
shll
pop
push
adc
push
xchg
shrb
repnz
gs
aaa
imul
and
push
cmp
scas
leave
dec
pop
pop
ds
push
pop
imul
lahf
fsubrl
out
je
push
outsl
cmp
sti
xchg
jb
mulb
sbb
sub
sbb
je
lret
sbb
pop
xchg
imull
pop
adc
stos
popf
cmp
cmp
in
xor
jbe
loope
push
cmpsl
jne
sbb
addr16
add
mov
out
xchg
and
leave
mov
jge
inc
int3
mov
test
cmp
push
mov
mov
nop
negb
mov
adc
fistpll
or
movsb
or
dec
push
hlt
sub
jbe
out
inc
pop
mov
mov
movsl
dec
xor
xor
and
mov
dec
pop
arpl
sub
xor
subb
mov
sbb
jecxz
out
sbb
fs
sub
adc
cld
in
lds
cmp
sbb
daa
or
pop
les
mov
je
jnp
dec
stc
or
dec
daa
outsb
push
lods
sbb
jle
or
mov
test
inc
rol
sub
fdivs
stos
test
arpl
fimuls
jbe
mov
int
movsb
push
sub
call
ljmp
adcb
cmp
sub
mov
ffree
xlat
insb
cwtl
sub
enter
xor
shrl
in
and
fidivrs
mov
shlb
sbb
sub
push
int
mov
jae
fbld
fisubrs
add
pop
jle
push
mov
pop
or
cmpsl
mov
aad
add
stos
cmpsb
add
cld
gs
in
or
cs
mov
add
fadd
add
xchg
sbb
cmp
pop
fsubrl
in
cmp
sbb
sub
in
test
call
and
stc
scas
ja
mov
cmp
aaa
inc
jno
push
adc
jg
sub
aaa
pop
in
or
push
rcr
and
in
jo
sub
lods
fwait
lods
in
cmpsb
inc
fwait
scas
jb
xor
xchg
pop
push
subb
dec
lds
push
ds
sbb
push
mov
xor
aas
dec
push
push
jg
fwait
push
jnp
aad
mov
adc
and
or
faddp
nop
ror
sbb
dec
insb
ljmp
cwtl
xchg
ret
movsb
mov
sub
aad
loopne
arpl
enter
outsb
sub
ficoms
lods
pop
sbbl
lea
gs
orl
in
dec
jno
ds
cmp
std
sbb
je
ds
and
aad
stos
add
sbb
sbbb
loope
outsb
xorb
push
sbb
sbb
cmp
pop
sub
shl
mov
cmp
sub
jmp
mov
inc
inc
iret
xchg
pop
mov
cmp
sub
jl
mov
xchg
test
jnp
divb
jne
out
and
shrl
std
mov
in
cmc
sbb
mov
cmc
cmp
test
sbb
icebp
sahf
jl
std
movsb
std
cmp
repnz
call
jae
jns
pop
add
int3
inc
add
sahf
sub
out
sbb
cmp
int3
rcrb
push
sbb
inc
lahf
jb
clc
pusha
push
aaa
idivb
fs
and
dec
mov
hlt
inc
ss
stos
inc
bound
test
xlat
xchg
jp
jne
xor
dec
in
jecxz
in
mov
xor
fsubl
jno
out
mov
adc
movb
push
sbb
aam
stos
sub
or
stos
addr16
fstl
jb
jo
mov
lea
dec
inc
js
cmp
xchg
pop
leave
fstpt
pop
adc
inc
add
pushf
cwtl
mov
jnp
leave
dec
in
adc
into
ss
in
bound
mov
fildll
pop
fs
inc
int
pop
xchg
xorps
adc
gs
sbb
jle
sbb
jbe
cmp
stos
rcll
adc
xor
jnp
push
mov
cmc
lcall
or
call
fstpt
add
sbb
sub
stos
add
loopne
fwait
or
bound
sahf
insb
add
aad
add
jp
sub
cmp
add
hlt
dec
clc
ds
in
or
ds
arpl
pop
sbb
and
call
jecxz
fidivrs
idivb
arpl
cmp
and
pushf
enter
je
dec
xor
inc
jno
imul
ss
sub
dec
push
aam
lcall
pop
sub
loope
push
inc
push
mov
and
adc
mov
mov
rcll
dec
sub
mov
jb
xchg
mov
test
xchg
jle
dec
mov
xchg
std
xor
xor
repnz
fdivr
lret
mov
pop
mull
pop
mov
push
mov
testl
xchg
icebp
mov
cwtl
dec
test
shl
xrelease
jl
push
mov
out
fistl
fdivrp
icebp
icebp
shll
push
jle
out
lods
stos
jl
lahf
cmp
vphaddubw
sahf
jmp
xor
dec
adc
mov
push
mov
push
fwait
xor
movsl
sub
subl
pop
outsb
out
mov
test
xlat
or
xlat
jle
pop
inc
fst
fadds
aam
push
push
xchg
mov
pop
add
lcall
fsubl
xchg
mov
inc
outsb
out
inc
xor
adc
je
pop
add
or
dec
cs
lods
push
fld
fldenv
and
cmpsl
pusha
outsl
and
int3
sahf
sub
dec
mov
fistpl
mov
cs
add
xchg
movsl
fnstcw
pextrw
mov
push
popf
sub
daa
aaa
aaa
fwait
aad
sub
shll
jmp
mov
push
add
outsb
lret
pop
push
pop
xchg
jbe
jnp
cmp
jnp
loopne
insb
push
inc
mov
mov
and
ja
jg
test
outsb
loopne
mov
xor
lahf
jae
shll
push
test
mov
sbb
in
js
or
test
push
es
mov
aam
mov
subb
out
stc
push
clc
dec
sub
cli
repz
movsl
dec
add
mov
sub
adc
insb
adc
iret
push
sbb
jecxz
push
jmp
inc
pop
mov
in
mov
or
inc
xchg
cmc
cmc
jne
jg
test
sahf
or
int
mov
out
das
dec
gs
sub
lods
addr16
and
add
rorb
bound
rorl
xchg
or
xchg
xchg
push
cmc
sbb
test
add
xor
addr16
ja
arpl
in
ds
inc
sbb
jl
push
popa
mov
mov
pop
add
sbb
push
dec
mov
add
jb
mov
or
ds
or
test
nop
pushf
inc
cmp
ja
rcl
inc
sub
das
cmp
xchg
fildl
insl
mov
test
mov
popa
mov
movsb
lea
jns
roll
js
das
jo
addr16
xlat
js
in
es
outsb
mov
fcomi
lds
imul
lret
mov
adc
add
pop
sbb
repnz
mov
adc
int
lds
mov
mov
cmp
idivb
insb
in
mov
aam
fisubrl
ss
call
xchg
cmp
dec
jae
sbb
mov
mov
cwtl
test
nop
jge
cmp
pop
bound
cmp
addl
jge
mov
xchg
mov
adc
adc
add
rorl
xor
pushf
or
or
mov
add
sub
sbb
in
pop
popf
test
dec
in
sbb
xchg
push
xor
int3
sti
mov
sub
pop
dec
jb
lock
cmp
stc
cmp
jecxz
imul
fdivr
loope
call
push
negl
call
cmp
sub
je
cmp
pusha
insl
sbb
js
mov
imul
or
jge
xlat
andl
dec
fwait
movsb
out
mov
xor
aaa
loope
stos
iret
imulb
mov
cmp
mov
lea
mull
jno
sahf
in
lods
xchg
cwtl
cmpsl
filds
imul
mov
subb
out
inc
les
aas
adc
xlat
mov
bound
pop
andl
inc
jo
ret
fs
incl
jp
aaa
ficompl
or
jno
lahf
std
fildl
pusha
push
arpl
xchg
or
iret
jp
fsubp
movsl
adc
mov
rorb
cltd
aas
or
cli
das
push
and
jecxz
push
and
insb
test
xchg
repz
sub
addr16
inc
data16
sub
notb
inc
push
pop
leave
out
lret
fcoml
pop
leave
les
and
xor
daa
push
lret
stos
icebp
jmp
andb
or
into
lcall
pop
jno
cmp
xchg
dec
push
in
mov
and
out
sub
sbb
out
adc
xchg
mov
mov
das
in
aaa
daa
das
push
push
gs
in
sbb
cs
sbb
pop
add
shrl
mov
or
xor
mov
movsl
adc
dec
fs
in
in
push
out
insb
dec
pop
std
xor
mov
aaa
inc
xor
ret
sbb
sub
add
leave
je
mov
cmp
pusha
xlat
jg
jp
inc
sub
fdivs
pop
stc
jmp
popa
or
push
pop
aas
jle
leave
lock
inc
mov
mov
xor
mov
mov
mov
pop
jbe
xor
push
adc
lea
in
aad
scas
movsl
xchg
test
mov
jl
mov
push
mov
cmp
or
fldenv
iretw
and
lods
or
xor
les
int3
inc
add
lret
fcmovne
lret
dec
lret
nop
iret
mov
andl
popf
push
xor
test
loop
and
dec
cmpsl
dec
inc
insb
mov
mov
cmpsb
push
jb
pop
ss
and
mov
or
repnz
pop
push
mov
lds
popa
dec
push
lds
cmpsb
icebp
push
je
mov
mov
push
add
imul
pxor
mov
jecxz
or
fsubl
inc
dec
adc
push
pop
adc
scas
test
pop
adc
pop
push
or
in
pop
call
mov
or
lret
jb
out
icebp
arpl
into
enter
adcl
push
pavgw
jo
cwtl
stc
ret
loope
xchg
add
push
jno
lret
lret
fldenv
pop
xchg
mov
xchg
rorb
xor
inc
jmp
lock
inc
lcall
or
push
cmp
xchg
into
adc
mov
jo
and
int3
push
pop
ja
inc
add
mov
sub
rcrl
fisttps
sbb
out
cmc
aaa
and
lret
ds
xor
daa
decb
inc
add
xor
loop
inc
xor
divl
push
enter
inc
aaa
push
out
cmpsl
inc
xchg
mov
jecxz
xor
mov
mov
xor
ss
or
daa
mov
xchg
adc
dec
or
xchg
mov
push
call
add
bound
xchg
lret
xchg
call
mov
pop
inc
pushf
in
dec
aad
inc
mov
xor
mov
mov
cltd
loope
outsl
mov
ds
mov
adc
pop
arpl
aam
adc
js
hlt
inc
jbe,pn
xor
xor
mov
jg
int
push
lock
mov
adc
js
scas
mov
pop
out
dec
pop
sub
mov
lcall
inc
adc
arpl
pop
mov
xchg
pop
js
bound
test
mov
and
scas
sbb
dec
pop
mov
ret
xorb
out
ret
push
gs
movsb
xchg
xchg
dec
dec
loopne
add
mov
cmp
dec
out
jl
idivb
aad
mov
lcall
or
sub
cmp
scas
into
js
popa
mov
mov
mov
decb
xor
xchg
bound
cmp
mov
pop
and
fnstcw
ja
fdivr
mov
mov
leave
fisttpll
icebp
iret
xor
fwait
sbb
push
shufps
xor
enter
testb
mov
push
xchg
inc
loopne
cld
or
divb
jno
sbb
hlt
sbb
pop
jle
xor
jp
sbb
dec
add
popf
icebp
leave
aaa
lods
mov
gs
sub
fidivrl
addr16
aam
mov
cltd
add
adc
inc
jle
decl
and
dec
mov
ljmp
jbe
mov
xorl
idivb
mov
scas
test
xchg
scas
mov
imul
add
daa
push
jbe
dec
sbb
popf
and
test
cmp
and
mov
fsubs
fxch
dec
or
push
mov
dec
dec
test
add
or
sti
cmpsl
mov
cmp
jge
adc
and
mov
lock
movb
inc
push
add
add
xor
jle
xor
pop
aas
push
mov
fnstcw
loop
push
xchg
xchg
sbb
jne
xchg
xlat
cmp
push
ret
aas
mov
cmp
add
add
pop
cmp
add
and
inc
xchg
mov
in
mov
xor
pop
outsl
mov
ss
clc
imul
xchg
arpl
subl
adc
xor
daa
or
xchg
fnstenv
and
pop
adc
add
or
pop
xchg
sbb
add
ficompl
adc
fnstcw
sbb
dec
ret
or
push
inc
test
cmp
mov
cmp
add
in
dec
mov
les
psubq
clc
jge
cmp
push
xchg
jbe
mov
xorb
bound
mov
sub
dec
mov
and
sahf
mov
aad
pop
xor
shlb
xchg
xor
or
sar
fs
pop
push
adc
cmc
lds
mov
push
cmp
add
repz
push
lock
and
bound
pop
push
out
sbb
jmp
mov
adc
xchg
dec
out
mov
jb
inc
sarl
adc
cmp
adc
lods
xchg
and
and
psubq
das
push
jbe
pop
and
lock
xchg
and
cmpsb
lret
out
sub
jp
inc
outsl
outsb
xor
xchg
xor
sarl
jmp
out
jne
mov
faddl
ds
mov
dec
or
repz
mov
mov
xchg
xchg
sub
arpl
aam
xor
mov
push
jnp
and
pop
fdivrl
aad
fsubs
jge
sbb
movsb
push
sbb
outsl
int
cmpsb
cmp
jle
inc
loop
lock
mov
in
fldenv
push
and
popl
and
push
flds
adcb
hlt
sbb
or
push
and
loopne
or
imul
add
fcoms
and
fistl
jb
push
xchg
xchg
dec
xor
mov
pop
xchg
jle
cmp
sub
inc
jl
add
add
sbb
xchg
mov
in
xchg
mov
mov
shlb
inc
mov
inc
js
xor
pushl
test
iret
aad
and
cmpsb
addl
sbb
jle
lods
fstps
into
std
push
push
aad
inc
add
jle
repnz
adc
dec
mov
push
pushf
dec
mov
aad
push
and
adc
je
or
imull
push
sbb
add
or
mov
scas
int
xchg
push
inc
mov
or
orl
fmuls
in
cmp
xchg
inc
dec
into
es
pop
out
sbb
aas
fcomp
out
jns
jl
mov
pop
mov
les
pop
cmp
adc
shl
test
daa
jb
sbb
mov
imull
int3
mov
ds
test
xchg
mov
loopne
pusha
out
hlt
cmpsl
jle
xchg
mov
cli
repnz
pusha
cli
mov
test
imul
rcl
pusha
and
testl
xchg
mov
sarl
in
enter
dec
pop
arpl
add
dec
ret
iret
push
scas
std
arpl
lods
pop
pop
fiaddl
js
or
or
xor
cmpsb
sub
jo
dec
mov
push
scas
xor
cmc
add
movl
call
xor
mov
lret
es
mov
adc
clc
xchg
outsl
mov
dec
sbb
and
push
and
mov
in
xchg
mov
add
or
jo
and
stos
cli
clc
fs
out
mov
jb
dec
sbb
jae
cs
and
fldenv
or
mov
lods
xor
cmp
dec
les
jecxz
adc
dec
movsb
mov
push
inc
add
movsl
popf
cmc
mov
xchg
pop
sub
pop
popa
mov
push
push
adc
or
jl
ljmp
jge
loopne
cmp
aam
into
shll
or
pop
mov
je
in
je
push
jl
out
mov
arpl
or
roll
push
cld
push
sbb
jnp
and
neg
sub
add
cmpsb
aam
lods
divb
push
leave
push
dec
data16
das
lds
push
inc
jecxz
loope
cltd
adc
mov
sbb
scas
dec
dec
mov
mov
pop
sub
mov
mov
jns
sub
sbb
push
jbe
adc
xor
mov
mov
mov
pop
jl
dec
mov
cmpsl
das
inc
outsl
test
in
pop
or
jne
lahf
cmp
out
mov
dec
mov
in
mov
data16
repz
and
cmp
out
in
sub
push
int3
jl
cmp
aaa
push
in
cmpsl
or
jbe
dec
sub
mov
push
pop
mov
xor
imul
loopne
test
daa
inc
leave
mov
mov
mov
push
test
lret
insb
popl
xchg
test
in
mov
jl
sub
push
test
in
pop
js
hlt
pop
mov
pop
cmpsb
shrb
movsb
jae
push
and
pop
mov
lahf
pop
jmp
ret
pop
xchg
mov
icebp
xor
jecxz
imul
mov
orb
push
pop
push
mov
in
and
xlat
inc
sbb
ss
xchg
mov
jo
xchg
ss
pop
xlat
sti
outsl
mov
inc
test
sub
xlat
xor
jg
xlat
ss
push
sub
pop
push
mov
jecxz
enterw
xlat
jle
lods
push
lret
xchg
test
cmp
outsb
mov
popa
lock
pop
aam
lea
sbb
lahf
cs
adc
adc
and
mov
sub
fucomi
add
sbb
call
loopne
daa
dec
jmp
cltd
sti
cmpb
pop
inc
pop
push
lcall
lock
jl
cmpsb
or
xchg
push
aaa
push
mov
adc
push
adc
jns
or
xor
sub
clc
sbb
sbb
jns
xchg
and
push
jo
pop
dec
inc
and
cmp
sub
jge
adc
out
mov
xchg
roll
sbbb
movd
jne
xchg
or
scas
jp
jmp
sti
pop
xor
pop
dec
mov
mov
aad
inc
and
or
dec
scas
out
pop
cmc
mov
icebp
dec
and
pop
shlb
mov
stos
mov
dec
in
pop
mov
add
xlat
int3
fdivs
mov
cmp
jmp
mov
xor
fcoms
ljmp
inc
imul
cmp
sub
into
push
cmp
inc
icebp
pop
add
in
jmp
ret
ss
addb
push
out
adc
adc
jle
in
mov
xchg
pop
aad
pop
mov
inc
or
inc
jne
mov
mov
sti
loope
cmpsl
push
jns
enter
test
cmpsb
xor
push
scas
int
out
ss
fcomps
notb
or
test
push
and
fisubl
arpl
andb
cmpsl
shl
inc
mov
repnz
mov
js
inc
sbb
jge
in
add
or
test
mov
lods
inc
fmulp
cli
cld
pop
les
leave
and
loope
or
inc
arpl
ljmp
push
cld
push
dec
leave
or
stos
push
add
cs
leave
dec
xlat
sub
xchg
fsubrs
popa
out
jecxz
inc
hlt
js
dec
add
idivb
dec
pop
sbb
into
es
xlat
nop
dec
ds
movsl
mov
add
out
leave
das
adc
in
bound
repnz
xlat
pop
cmpsl
xchg
dec
rorl
xor
sahf
xchg
cmp
xchg
out
mov
push
into
or
pop
push
addr16
out
cmp
cmc
ret
idivl
adc
loop
cmp
mov
pop
add
or
insl
jbe
loopne
xchg
movsb
mov
rolb
fldl
imul
stc
and
decl
mov
ljmp
ret
sbb
sub
in
sub
cmp
sbb
scas
lahf
int3
lds
mov
adc
inc
xchg
cmpsl
pop
sub
pop
inc
lods
lea
dec
cmpxchg
inc
mov
add
and
cld
imul
sbb
stos
dec
xor
jns
lock
sti
mov
std
stos
mov
xchg
movsl
xchg
sti
add
xor
mov
inc
insb
movsl
xchg
pop
inc
cmpsl
inc
push
aas
sub
pop
push
inc
mov
sub
adc
add
sbb
sti
sub
xchg
adc
lods
add
fistpl
int
jb
push
sbb
fildl
push
ds
inc
mov
std
pusha
push
cmpsl
aam
mov
insl
out
neg
pop
inc
movsl
push
push
lret
inc
fs
and
xor
jbe
sub
jbe
mov
aad
in
into
sub
idiv
js
out
sbb
mov
or
cli
cmp
out
les
fst
push
out
cwtl
pop
subb
ds
dec
stos
sbb
insb
iret
clc
arpl
ret
add
add
insb
ficomps
xor
jno
gs
fdivr
add
dec
push
outsl
cmp
or
sbb
sub
jo
rclb
sbbb
mov
jp
pop
rcl
pop
mov
fidivrs
jge
cmpsl
sahf
mov
mov
lret
sbb
add
adc
adc
loope
fsubl
mov
rcll
cmp
in
aam
mov
aad
jns
mov
jno
adc
jb
popf
push
int
sbb
shll
xchg
cs
cltd
mov
stos
ret
xchg
pop
jne
sub
dec
test
push
cmovb
adc
test
push
xchg
cld
lret
jp
loope
sub
repnz
push
arpl
leave
outsl
adc
mov
jne
popf
insl
imul
adc
sbb
push
sahf
push
outsb
add
sahf
dec
mov
mov
loop
jge
stc
cmpsl
sahf
pop
xchg
pushf
jp
inc
cmpsb
bound
fisubrl
push
jge
jge
sub
jmp
fwait
decb
pop
shll
push
pushf
ljmp
cli
lret
shlb
in
rcr
push
adc
pop
mov
xor
mov
lret
sub
push
stc
fisubl
mov
loopne
das
cmp
aam
fdivrs
mov
xchg
in
add
shlb
mov
jb
mov
cld
sub
leave
rcrl
cmpsb
in
dec
sarb
dec
cmp
add
xlat
ds
mov
sub
lret
and
shll
out
andl
call
cwtl
jl
je
cmp
js
push
lods
shlb
fs
ljmp
sbb
test
cmp
fwait
mov
ja
into
dec
pop
in
adc
and
test
add
or
cwtl
pushf
cld
scas
stc
test
sub
adc
mov
cmpsl
shlb
mov
sub
movd
dec
xchg
into
dec
or
inc
xor
aad
pushf
das
hlt
shlb
lahf
xor
iret
repnz
shrl
imul
jmp
fistl
sti
xchg
add
push
mov
enter
test
ljmp
mov
push
and
stos
out
les
mov
dec
ljmp
leave
cmp
gs
test
adc
xchg
mov
aaa
jecxz
outsl
adc
loope
stos
nop
stc
cs
adcb
mov
pop
inc
scas
clc
pushl
rol
sub
xor
or
xor
pushf
add
mov
dec
dec
fcoml
mov
cmp
pop
pop
imul
in
ret
mov
mulb
dec
test
mov
jecxz
nop
hlt
scas
push
adc
jbe
mov
data16
pop
test
sbb
aas
cmpl
out
dec
ds
xchg
std
in
mov
sahf
xor
or
jns
je
push
rcll
dec
call
sti
mov
dec
cmp
inc
addr16
outsl
push
mov
rolb
sub
fisttpll
inc
mov
sbb
lcall
mov
mov
insb
sti
push
inc
negl
jle
push
stc
push
cld
fwait
mov
jo
or
daa
and
cltd
push
js
and
pop
leave
or
in
push
mov
enter
push
and
add
or
jae
out
xor
rcr
sub
cmp
incb
lock
jmp
or
in
lret
push
cmpsb
cmp
push
mov
mov
int
filds
clc
cwtl
sub
push
out
xor
push
xchg
fsubrl
std
out
addl
aaa
inc
push
mov
icebp
in
mov
push
aaa
jbe
hlt
xchg
dec
shrb
in
out
dec
pop
nop
mov
lret
sub
adc
fnsave
jnp
xor
in
orl
pop
mov
sti
jmp
sahf
in
in
sbb
xor
mov
jecxz
leave
sarb
and
or
and
adc
mov
icebp
rclb
outsl
inc
rcrb
add
mov
icebp
in
dec
sbb
into
adc
mov
adc
loopne
daa
arpl
adc
cmp
sub
leave
lret
les
bound
dec
xchg
loope
hlt
loopne
arpl
ja
popa
jmp
xor
dec
jmp
gs
or
dec
cmc
hlt
jmp
inc
mov
cmp
pop
fistl
aad
pop
dec
insl
nop
push
xchg
js,pt
in
xchg
mov
and
adc
les
and
jmp
popf
pop
test
sub
scas
repnz
push
in
inc
mov
jo
stos
shr
jne
inc
sahf
jle
adcb
inc
aam
lea
sbb
xor
xchg
fdivp
push
mov
movsb
sub
jge
or
cwtl
sbb
sub
or
mov
fistpll
insl
mov
push
sbb
out
ror
ds
enter
ret
fcmovb
cmp
push
arpl
and
ret
xor
sbb
aam
pop
cmp
sbb
not
adc
jl
mov
add
packsswb
inc
mov
jns
js
imulb
xchg
outsb
lods
xor
aaa
rcl
jge
test
mov
dec
push
push
sbb
iret
lret
setae
mov
mov
mov
mov
adc
jmp
inc
mov
in
fwait
mov
cltd
lods
add
call
lock
adc
sarb
xchg
dec
fwait
xchg
xchg
xchg
in
loop
aaa
cmp
pop
xchg
lock
sub
sbbb
mov
jge
mov
jo
or
enter
lds
scas
mov
xchg
incl
xor
push
pop
push
out
call
add
fwait
imul
repnz
inc
call
push
fildll
leave
ja
clc
mov
xchg
and
je
sub
push
fiadds
repnz
lods
aam
pop
out
lea
fsts
lock
dec
jnp
inc
sub
or
fdivrl
xor
adc
sub
std
pushf
and
jmp
popa
push
jmp
and
lods
repz
mov
adc
ljmp
sbb
lret
loope
repz
sub
fcoml
std
flds
pushf
cmpsb
sub
call
rclb
inc
aam
add
jge
adc
jge
push
inc
xchg
ret
cmpsb
lods
dec
inc
stos
cmc
movsl
sub
push
inc
xor
push
push
or
cwtl
test
bound
ficoms
and
sbb
les
aam
repz
mov
pusha
aas
mov
popa
fisubrs
pop
test
aam
mov
bound
xor
fwait
or
sub
inc
fs
adc
sbb
mov
jnp
aam
out
mov
shrb
pop
xchg
stos
stc
sarl
ret
inc
imul
xor
and
pop
cmp
and
mov
nop
xchg
adc
aas
fadds
ret
sbb
clc
push
mov
cmpsb
cmp
cmpsl
push
pop
or
dec
sbb
dec
push
push
cld
and
shl
dec
jecxz
dec
and
xchg
xor
dec
scas
gs
mov
sbb
push
mov
mov
push
inc
cwtl
mov
xchg
pusha
fs
sbb
das
add
popa
pop
add
iret
in
in
insb
or
push
pop
jmp
pop
or
cmp
sti
xchg
in
sub
jbe
scas
call
les
xlat
mov
xchg
lahf
adc
bnd
scas
and
pop
in
testb
mov
jmp
in
shr
inc
xchg
jge
xchg
bound
dec
stos
push
repz
adc
inc
repz
mov
add
fcmovbe
aad
adc
fnsave
xchg
int3
and
je
daa
mov
ds
add
push
and
or
jb
inc
das
ja
mov
mov
jmp
out
outsl
lret
adc
gs
cmpsl
ret
cmp
aaa
cs
lret
dec
loop
cs
popf
loop
push
jecxz
pushf
or
or
sbb
repz
xor
push
das
mov
jns
or
or
into
bound
ss
adc
push
leave
sbb
stos
mov
push
fwait
mov
or
sub
ja
inc
xor
enter
test
nop
mov
xor
nop
pop
inc
fcmovnu
int3
fdivl
iret
cltd
out
mov
dec
push
mov
xchg
sbb
add
sbb
jle
sbb
inc
mov
xchg
loop
movb
adcb
or
lret
mov
ja
sub
mov
dec
or
push
negb
cmp
lcall
fcoml
not
stos
int3
mov
push
cmp
jnp
dec
cmpsl
jmp
jmp
xor
pusha
pushf
push
aaa
push
clc
enter
mov
pop
push
dec
rcl
enter
and
out
imul
je
jnp
imul
xchg
mov
fstl
adc
aad
inc
insl
dec
jmp
mov
cmp
add
pop
mov
mov
push
xlat
sub
ds
bound
add
pop
mov
mov
push
out
add
fs
mov
stos
xchg
sarl
cmp
inc
mov
xor
jno
sbb
pop
das
scas
addl
aas
sub
adc
out
mov
or
lret
cmpsb
aad
push
insl
mov
out
sbb
es
insb
push
enter
bound
pop
mov
test
loopne
pop
sub
mov
add
sub
test
inc
dec
mov
insl
insl
sbb
pusha
mov
cmovs
out
out
pushf
dec
fistpll
das
frstor
rolw
test
cmp
pop
sahf
out
xchg
and
xchg
inc
jo
stc
and
push
ficoms
mov
sub
cmc
mov
test
cmp
xchg
push
outsb
xchg
leave
jbe
les
idiv
dec
daa
lock
mov
and
jmp
sub
cmp
bound
scas
add
fidivs
mov
push
xor
mov
inc
sub
add
in
push
orb
dec
data16
dec
jae
imul
lods
std
jo
test
adc
dec
push
pop
test
sbb
stos
mov
xchg
filds
xchg
jmp
roll
fbld
push
push
out
xchg
rcr
or
aas
insl
and
movsl
jbe
imul
int
das
xchg
pusha
movsb
adc
xor
outsl
lret
fs
movsb
out
mov
or
inc
dec
leave
jno
mov
push
jo
mov
jbe
sbb
in
mov
xor
xchg
sbb
lods
sahf
mov
jmp
cmp
mov
jmp
in
pop
bound
lret
jnp
mov
in
push
mov
mov
jno
dec
test
add
inc
es
push
imul
lods
cmp
cmp
test
in
xchg
and
jl
es
cmp
inc
jns
or
xchg
sbb
js
push
iret
xchg
adc
dec
test
push
jp
mov
lods
imul
sbb
aaa
jge
scas
add
aam
xor
adc
pusha
push
cli
test
mov
lock
addr16
movsl
cltd
ja
stos
out
xchg
shll
ret
sahf
add
push
or
push
orl
lea
bound
dec
in
dec
sbb
and
mov
hlt
or
movsl
fcoms
cmp
mov
or
xchg
stc
mov
xlat
mov
or
and
gs
add
rcll
sub
ss
sti
enter
dec
mov
arpl
mov
or
pop
shrl
mov
and
mov
pop
not
adc
push
sbbl
or
ja
cmp
sbb
cmp
jle
add
lcall
arpl
stos
int
fstl
fwait
push
or
jg
mov
ja
cmp
mov
dec
loope
rcr
ljmp
pop
push
pop
xor
dec
pop
ja
addb
pop
test
jge
jno
popf
sbb
repz
das
insb
cmp
mov
in
add
out
bound
push
repnz
adc
pusha
not
push
mov
popf
or
inc
mov
cmp
jmp
add
fildl
pop
mov
std
gs
adc
mov
jnp
pop
push
pushf
push
insb
mov
or
mov
pop
push
xor
jg
ret
nop
ret
adc
push
sub
push
sub
pushf
int
ds
xchg
adc
aam
pop
jl
aaa
push
push
imul
xchg
sub
lret
lds
or
sub
pop
scas
pop
mov
mov
xchg
movsb
mov
mov
xor
call
aad
in
mov
pop
lcall
cmp
je
in
push
add
dec
in
push
mov
pop
iret
push
movsl
pop
cmp
dec
mov
lcall
mov
incb
push
nop
es
arpl
aam
popa
sub
gs
scas
inc
mov
xorb
jno
mov
jnp
or
fnsave
push
xor
or
jns
adc
xor
push
mov
fldt
jae
out
nop
or
fwait
mov
pop
push
sbb
cmp
mov
loope
and
inc
subl
push
mov
fwait
es
sbbl
push
daa
sub
ficoms
jae
fcoms
dec
xchg
xlat
dec
enter
jg
dec
mov
cwtl
ret
shrb
jge
mov
jbe
mul
lods
loopne
scas
imull
xchg
cmpsb
aam
int3
stc
movsb
mov
test
xor
sbb
mov
jl
cmp
or
or
shrl
jp
or
fwait
inc
add
lcall
lock
pusha
fcoml
les
test
scas
leave
sbb
add
xor
ror
inc
lea
stos
mov
addr16
mov
jbe
jle
push
pop
mov
scas
and
add
std
inc
cwtl
insl
lret
cld
mov
lcall
lcall
mov
and
push
pop
xlat
inc
pop
adc
push
aas
xor
push
xchg
pop
lock
out
inc
pop
out
into
fidivl
push
ss
test
ret
fistps
pop
dec
dec
jne
and
repnz
and
lods
test
mov
lret
and
test
scas
into
daa
or
mov
test
out
pop
and
dec
jmp
pop
in
dec
sbb
repnz
jns
fwait
sti
cmp
nop
xchg
loop
mov
mov
lea
jl
dec
mov
pop
add
std
sbb
jmp
mov
aaa
adc
sub
in
jp
lahf
mov
mov
in
cmp
in
inc
mov
addl
into
mov
jne
fs
xchg
es
xor
or
cmp
and
mov
and
mov
lret
xor
clc
dec
dec
in
cmp
mov
jl
mov
mov
pop
sub
xor
aad
mov
or
adc
imul
sbb
jnp
outsl
jae
pop
std
adc
push
mov
test
and
xchg
outsb
fnsave
mov
fwait
bound
sub
xlat
xor
lea
in
pop
pusha
push
jmp
jbe
mov
mov
mov
sahf
cmp
mov
call
xor
or
xchg
push
xor
adc
xchg
shlb
imul
aam
rcrl
in
iret
inc
pushf
pop
movsb
scas
shlb
xor
int
popa
lcall
js
jb
dec
hlt
test
cmc
xor
js
shrl
sarb
ret
and
cmp
insl
scas
jmp
jno
fimuls
fisttps
in
sbb
call
cwtl
sub
fidivs
ret
sub
aad
xor
xchg
push
cwtl
rolb
outsl
imul
ret
and
and
mov
inc
push
xor
pop
cwtl
sbbl
push
push
sub
pop
stos
jb
cmp
out
xlat
int3
push
and
movl
andl
mov
call
hlt
add
das
jno
sbb
push
daa
test
mov
xchg
je
mov
cmp
pop
test
clc
rep
xchg
pop
rolb
loopne
dec
mov
or
clc
sub
mov
mov
test
movsl
xchg
bnd
inc
inc
leave
adc
cli
dec
adc
ja
dec
xchg
gs
xchg
mov
inc
mov
jmp
adc
mov
mov
pop
rorl
lods
and
mov
fldt
mov
xlat
jle
fdivrl
dec
jge
and
sarb
adc
clc
inc
aaa
xchg
mov
mov
test
xor
je
mov
ljmp
mov
mov
arpl
xor
adc
cmp
xor
mov
push
cmpsb
repz
aas
push
arpl
or
cmpsb
or
xor
inc
cmp
inc
lret
mov
lret
xor
shl
add
data16
enter
or
mov
cmpsl
movsb
adc
jp
ret
inc
mov
aas
and
xlat
scas
push
jno
mov
or
or
dec
stos
movsb
cmp
mov
jl
shlb
mov
push
lcall
icebp
dec
jecxz
cmp
jp
dec
sub
xchg
lahf
icebp
lret
jae
add
fstps
add
loope
pop
add
or
sub
cltd
push
or
pushf
adc
das
sti
mov
dec
pushf
mov
cld
dec
jmp
lret
shll
fcomps
mulb
adc
loop
dec
adcl
adc
enter
inc
mov
mov
sbb
nop
ds
mov
scas
sbb
dec
mov
movsb
fs
xorl
xchg
stc
aad
dec
jbe
dec
xorb
mov
pop
hlt
das
out
pop
mov
cltd
adc
mov
jge
sbb
jp
mov
repnz
jge
mov
out
mov
and
fnstsw
shll
push
lahf
inc
pop
mov
repz
call
in
lea
push
mov
leave
nop
in
and
fsubrs
sarl
ss
xchg
sbb
gs
insb
int3
popf
xor
mov
repnz
adc
cli
sbb
jns
loope
mov
xchg
dec
sahf
xchg
push
jl
jl
repz
mov
cmpsl
and
lret
inc
divl
sbb
jnp
insb
inc
jge
or
ret
gs
inc
mov
test
push
lret
scas
mov
jno
cmp
ret
enter
mov
insl
push
inc
jnp
outsl
pop
add
dec
inc
adc
pop
frstor
cs
nop
enter
fistpl
push
stos
jmp
sti
mov
jl
hlt
and
int3
mov
add
sub
push
sub
xchg
test
fsubl
cmp
sbbb
xor
popa
test
push
inc
test
xchg
mov
test
xchg
dec
inc
xor
jmp
repnz
xcrypt-ctr
cmpsl
cltd
push
pop
dec
xor
pusha
inc
add
dec
arpl
mov
push
sbb
mov
mov
pop
jmp
mov
roll
pop
sub
pusha
fimuls
mov
pop
mov
sbb
lods
jne
lods
popa
jecxz
adc
xchg
dec
xchg
loope
les
fldl
mov
sbb
push
cmp
add
add
aas
fisttpl
jecxz
ds
shlb
sbb
jl
add
mov
mov
add
adc
jecxz
mov
sbb
movsl
lods
or
xor
ret
das
fs
or
xchg
outsb
or
jge
mov
adc
xor
mov
sbb
sbb
mov
sbb
es
mulb
insb
test
std
ret
enter
icebp
jbe
fdivr
mov
adc
push
cmpsl
push
inc
push
jmp
cmp
cmc
fadds
les
jle
pop
xor
insl
stc
in
pop
push
inc
call
xor
mov
test
mov
lret
sbb
dec
fst
xor
loopne
pop
sub
or
movsl
mov
push
arpl
or
ficompl
pop
loop
jmp
xchg
insb
push
test
es
xchg
inc
pushf
mov
adc
pop
mov
jne
dec
sub
shrl
or
imul
pop
mov
es
dec
in
add
mov
jae
loop
xor
mov
cmpsb
mov
test
lods
mov
and
or
sub
out
pop
mov
jbe
mov
cmpsl
dec
int3
je
aaa
inc
aam
testl
pop
dec
ss
push
cmp
push
imul
mov
pop
outsb
push
dec
sub
outsl
inc
add
inc
or
adc
and
adc
mov
pop
adc
sbb
ss
cmp
ficoms
mov
imul
adc
xor
xor
add
lret
arpl
imul
sub
pop
xor
lret
out
cli
sbb
push
mov
lods
mov
iret
test
shrb
xchg
repnz
cmp
out
add
cmc
ja
cwtl
insl
mov
mov
and
repz
mov
or
xor
jno
cmp
dec
sub
pop
in
sbb
in
xor
adc
stc
imul
lods
mov
sahf
sbb
dec
inc
ljmp
repnz
mov
std
leave
ss
and
mov
shll
int3
in
out
or
fwait
fs
mov
mov
ret
dec
inc
mov
icebp
aaa
cld
out
mov
xchg
xlat
popf
cs
or
xor
lea
cmp
icebp
jge
mov
or
mov
das
cmp
sbb
cmp
cmp
adc
or
mov
adc
enter
movsl
mov
or
dec
pop
mov
in
pop
scas
rcl
mov
ja
cmp
or
dec
imul
push
sub
jno
fdivrs
push
or
aad
jne
pop
push
aas
add
mov
xchg
pop
test
mov
jns
cmp
nop
mov
xlat
popf
push
negl
pop
add
pop
pop
stc
or
shr
out
in
mov
mov
mov
push
xchg
xchg
add
cmp
sbb
into
push
pop
lea
sub
add
lea
inc
imul
sbb
loopne
jns
jg
mov
dec
add
fs
jl
jle
jae
fs
aam
or
xor
cli
xlat
adc
div
les
les
mov
cmp
mov
xor
xchg
sarb
jo
xlat
in
repnz
orb
dec
fldl
sub
ja
mov
cmp
jno
ret
leave
xchg
adc
and
inc
outsb
es
jns
pop
aaa
mov
jle
add
or
hlt
push
mov
ret
outsb
jecxz
ret
lcall
leave
and
push
cld
addr16
in
faddl
cmp
lock
jp
xchg
and
addr16
xchg
movsl
je
xor
inc
outsb
mov
popa
sahf
int
in
or
sbb
sub
push
pop
mov
lahf
mov
mov
mov
cmp
popf
ss
pop
xchg
xchg
inc
clc
sub
xchg
out
push
push
sub
cmpsb
mov
inc
pop
lret
cmpsl
xor
adc
sti
and
jno
cmp
adc
dec
push
rcrb
inc
dec
sub
cmp
fwait
inc
shll
in
sub
stos
fstpl
or
jo
sbb
mov
push
or
outsl
jno
or
cwtl
out
rcl
scas
in
fisubrl
rcrl
inc
pop
enter
xchg
add
ds
in
int3
in
xchg
and
jmp
push
or
pop
mov
mov
cwtl
lahf
inc
mov
ds
adc
and
in
lcall
mov
repz
sub
inc
inc
outsb
and
lods
pop
xchg
sub
lret
cmp
lahf
cmc
jl
std
xchg
jno
jo
testl
dec
adc
mov
out
mov
pusha
adc
mov
mov
sub
and
popaw
sbb
inc
in
movsb
xchg
or
ljmp
sbb
dec
or
lret
sbb
jbe
sbb
je
jno
and
sbb
pop
push
leave
jle
adc
cli
test
lcall
mov
sub
cli
pop
cld
sbb
lds
xlat
mov
jnp
pop
sub
pop
leave
cmp
cmp
ss
inc
dec
mov
ds
inc
xor
ret
hlt
add
cltd
mov
sub
dec
push
sahf
push
and
imul
lahf
adc
roll
or
cli
loope
xchg
sub
and
adc
lcall
mov
test
xor
popa
lret
aas
test
xchg
pop
test
loop
pop
adc
inc
out
gs
fwait
outsl
sub
jo
call
jge
lods
push
mov
movsl
fstpl
push
push
xchg
loop
or
dec
jns
lahf
sbb
xchg
stos
pop
addr16
bswap
ret
inc
adc
stc
jp
sub
add
dec
cmp
dec
fldcw
sub
stos
movsb
ret
data16
inc
and
in
mov
xorb
xchg
rcrb
cli
aaa
incb
int3
sbb
aad
push
insb
cmpsb
dec
dec
adc
sbbl
mov
sub
bound
mov
sub
xlat
fidivs
mov
stos
jns
nop
push
pop
jns
repz
pop
sbb
jnp
into
adc
int
inc
cmp
cmp
jbe
out
cmp
fildll
loopne
iret
inc
pop
cld
mov
dec
clc
sbb
jb
lods
pop
call
fdivs
ret
sub
mov
outsl
insl
cli
dec
jo
mov
and
inc
imul
add
jecxz
shlb
adc
ret
xor
or
movsl
adc
xchg
lods
subb
mov
pop
inc
xor
inc
cmc
out
inc
pop
sub
mov
xor
xchg
ficoms
adc
pop
push
mov
sub
pop
mov
fdivrl
pop
mov
push
stos
repz
mov
enter
cltd
add
mov
inc
out
cmp
testb
fwait
pushf
imul
in
sarb
mov
pop
ret
sahf
xchg
test
dec
mov
mov
jecxz
xor
jns
xchg
pop
test
xor
rol
add
fnstenv
push
call
rolb
add
push
ljmp
jp
es
pop
aas
or
or
cmp
add
inc
xchg
or
cmp
lock
dec
xchg
jae
in
ss
lock
mov
shll
cmp
loopne
xchg
call
cld
repnz
jne
push
jbe
push
in
rolb
pop
stos
lret
push
negl
pop
mov
jb
or
in
sbb
aas
sub
jl
cmp
sub
in
mov
mov
fwait
mov
jmp
popf
or
in
cmc
jnp
popf
xchg
push
push
inc
decl
jp
ret
pop
hlt
xor
dec
imul
jl
les
scas
or
hlt
notb
xchg
sbb
xor
popl
sbb
je
cmp
push
pop
pop
jae
insb
pop
pop
jge
movsb
jp
test
xor
or
out
jne
mov
push
je
push
cmp
add
in
pop
xor
dec
ret
sbb
sub
mov
or
test
and
push
mov
xor
dec
shlb
int
add
dec
sub
mov
dec
push
cmpl
mov
sti
xchg
xor
lea
es
pop
out
mov
adc
pop
xor
arpl
xor
sbb
inc
inc
push
push
movsb
mov
ret
cmc
arpl
popa
sbb
jge
push
dec
pop
inc
mov
addl
mov
test
iret
sub
movsb
add
inc
cli
call
or
shrl
pop
push
stos
sti
and
push
mov
rorb
dec
test
fcoms
sbb
and
lahf
xor
mov
aaa
sbb
dec
dec
sbb
pop
mov
cmp
mov
icebp
xor
idivb
push
dec
ret
mov
jns
mov
cmpl
inc
sub
pop
cs
iret
dec
in
movsb
or
insl
pop
imul
sub
jg
je
push
or
push
mov
pop
sar
dec
es
std
dec
loop
xlat
aas
cld
mov
mov
xchg
fsubp
pushf
jecxz
pop
icebp
stc
mov
inc
mov
pop
push
xchg
cwtl
jno
xchg
mov
sbb
mov
pop
or
les
push
mov
aas
mov
movsl
xchg
and
loope
pop
adc
pop
pop
mov
je
cmp
movsb
cmp
in
test
jbe
jge
dec
xchg
sti
sbb
sub
pusha
fistl
cli
mov
jno
mov
push
adc
dec
mov
push
pusha
popa
loop
sub
push
std
cltd
jp
xchg
push
and
or
out
inc
jp
lds
pop
lahf
pop
jmp
leave
js
pop
mov
mov
sahf
inc
adc
das
clc
add
in
mov
push
ficoms
jae
aaa
push
ljmp
cmp
cmpl
push
in
xchg
dec
mov
push
pop
lea
idiv
sbb
aad
jmp
test
lcall
jne
jp
cltd
cmc
and
pop
lds
das
clc
inc
push
cmpsb
subb
sbb
push
jp
and
movsl
adc
sub
pushf
clc
cwtl
sub
dec
mov
and
scas
es
dec
mov
xor
pop
gs
jecxz
dec
mov
enter
sub
sub
inc
dec
aam
fsubl
mov
mov
or
mov
out
push
iret
mov
lcall
push
lds
mov
imul
mov
mov
arpl
xor
into
outsb
divl
into
mov
mov
push
sahf
ds
cmp
push
add
mov
cmp
dec
aad
icebp
mov
dec
or
ficomps
jg
in
insb
int
mov
pop
in
sbb
xchg
cs
inc
lcall
adc
sbb
mov
xor
mov
cmpsb
fsubrs
add
jecxz
mov
lea
aad
insb
jmp
shrb
ljmp
inc
insb
fists
cmp
pop
enter
orb
ret
jg
aaa
sub
mov
int
pop
jns
mov
ljmp
jns
es
jb
add
cmp
sbb
push
push
xchg
xchg
fisttpll
mov
xchg
loop
popf
sbb
pop
lods
lds
les
cli
shll
jmp
repz
jno
inc
xchg
loopne
call
sub
es
fildll
push
sub
jno
mov
add
mov
inc
clc
addr16
into
pop
and
mov
xor
push
pop
inc
jge
xor
pushf
cwtl
dec
repz
mov
fisubrs
in
inc
jbe
test
inc
imul
ret
mov
inc
enter
add
js
ds
push
push
xor
stc
add
lret
mov
js
and
cld
and
mov
and
fsincos
ficoms
mov
xor
or
inc
lock
insb
jp
popf
xchg
inc
enter
test
dec
cmovne
push
in
insl
int3
dec
or
test
pop
fdivl
jmp
jmp
js
mov
dec
loope
lret
lods
ja
xor
sub
and
imul
mov
pop
stos
jg
mov
icebp
int
push
cltd
rcll
mov
bound
call
outsb
pop
xor
and
aas
adc
jbe
movsl
dec
or
test
lcall
nop
dec
mov
int3
push
call
outsb
xor
push
xchg
mov
sub
ret
loope
xor
sbb
adc
daa
je
daa
or
cmp
mov
mov
and
ss
stos
mov
cmp
test
add
test
jnp
pusha
push
jne
xor
int
test
das
sahf
enter
daa
adc
sub
pop
xchg
push
cs
ljmp
sbb
movsl
cwtl
lcall
lods
mov
xor
inc
incl
cmc
adc
xchg
sub
std
xor
mov
negb
daa
je
ficomps
aam
sub
inc
out
jp
or
lret
adc
pop
out
and
dec
xlat
repz
mov
insb
fmull
mov
and
lret
insl
and
loope
es
or
sbb
cmp
test
mov
and
add
cmpsb
in
sbb
sbb
lret
fwait
adc
pushf
lock
sti
jp
or
aam
stos
xchg
jnp
xchg
add
dec
mov
push
or
sub
mov
hlt
fildll
outsb
out
jo
mov
pop
xorb
arpl
aaa
ss
call
and
mov
and
xchg
bound
aas
js
je
push
mov
sub
sahf
ss
push
and
outsb
stc
jbe
jle
test
hlt
popl
test
loope
push
cs
mov
push
outsb
icebp
jmp
negb
mov
adc
daa
xchg
jge
lahf
imul
fcomip
jns
inc
mull
orb
add
xor
xchg
or
jecxz
jbe
jmp
and
jmp
int
jb
rcr
xor
js
int3
mov
subl
dec
out
fstpl
ret
shlb
or
push
jmp
mov
adc
gs
dec
shl
mov
cmpsl
dec
flds
dec
mov
inc
or
mov
xor
rcl
dec
pop
addb
push
and
add
cltd
push
add
iret
rolb
jl
lea
repnz
popa
mov
sti
fistps
fwait
mov
xlat
rcll
or
sbb
mov
add
jbe
mov
sbbb
adcb
add
xor
add
cmp
push
lock
sbb
ret
jns
xchg
and
loope
pop
jp
and
cmp
dec
jb
movl
daa
mov
sub
mov
lds
lea
imul
stc
cmc
adc
addr16
aam
das
sub
in
lea
sub
jl
mov
imul
hlt
adc
ds
dec
xlat
pushf
adcl
scas
push
mov
in
jo
inc
pop
jmp
mov
bound
popf
or
test
rcll
mov
mov
jmp
cwtl
dec
push
cwtl
lea
jno
pop
rcrl
aas
addl
sbb
sub
jecxz
in
pop
movsl
push
stos
cmpsb
push
lods
movsl
mov
dec
aaa
xorb
add
popa
sub
jns
addr16
aaa
jle
cs
or
rol
pop
out
test
aam
mov
clc
arpl
mov
xorb
push
pop
mov
push
pop
and
and
rcrb
into
inc
shl
and
out
add
movswl
notb
frstor
jne
jecxz
push
adc
lds
sbb
fnstcw
les
jns
jl
sub
insl
out
push
mov
sarb
mov
mov
sub
push
in
add
dec
mov
stc
stos
pop
out
xor
xchg
lods
or
xor
cmpsl
in
mov
je
jb
fstpt
mov
sub
and
xor
movsb
je
mov
lret
mov
es
test
cltd
loop
mov
mov
dec
shrl
out
pop
pushf
sub
xchg
mov
decl
ss
fs
cli
mov
cld
inc
dec
mov
mov
insb
lret
mov
push
ja
mov
repnz
lahf
movsb
lock
aam
jg
xor
aam
push
testb
pushw
std
mov
mov
lea
shrb
rolb
mov
mov
movsb
popf
inc
aam
mov
xor
adc
loop
lds
je
add
add
push
sub
jb
sahf
shrb
jmp
adc
es
mov
xchg
sarl
cmp
xchg
rorb
xor
cmp
out
adcb
cmpsl
pushf
sbb
out
sbb
rorl
mov
popa
mov
mov
movsl
lds
add
fldl2t
or
adc
adc
je
lcall
mov
je
mov
push
sbb
in
xorb
enter
cmp
loop
mov
shrl
lea
pop
js
outsl
hlt
and
add
dec
popa
movsl
lret
jo
mov
bound
add
in
inc
ffree
push
mov
repz
xor
xchg
cli
pop
or
cli
inc
repnz
gs
sbb
imul
adc
inc
xchg
pop
popf
jno
pop
mov
leave
or
imul
and
dec
scas
les
add
shlb
rorl
sbb
and
sub
cmp
and
pop
push
mov
push
test
out
jmp
subl
push
mov
jmp
push
adc
cmp
or
mov
cltd
test
repz
add
pop
nop
stos
repz
fs
ret
push
inc
sub
push
xor
and
jo
xor
sbb
je
jns
push
pop
mov
decb
mov
rcr
mov
pop
int
cli
jno
sub
pop
je
xchg
adc
adc
inc
mov
push
test
sbb
xchg
std
mov
out
pushl
xchg
lret
sbb
jae
mov
sub
push
jg
insb
and
and
fildll
mov
sbb
gs
sbb
test
mov
rcrb
jnp
test
pop
dec
or
push
xchg
mov
imul
mov
jb
and
cli
mov
mov
xlat
jbe
mov
stos
sub
das
leave
in
xchg
lret
push
movsl
rcr
mov
adc
loop
xor
lcall
sub
int
outsb
inc
outsl
pop
sub
je
dec
and
fsubrl
jae
push
push
jb
stos
ljmp
pop
push
in
aam
jno
iret
cwtl
cmpsl
jle
pop
add
test
add
mov
arpl
pmaxub
lahf
orb
out
jmp
scas
jge
dec
cmp
or
movsb
hlt
push
jge
sbb
lods
lods
sbb
push
loope
add
jecxz
in
inc
cmp
xor
dec
cmpsl
daa
imul
hlt
enter
xor
add
dec
mov
mov
repnz
hlt
and
aad
xchg
wrmsr
inc
aaa
das
inc
mov
iret
pop
in
fstps
jnp
rolb
scas
pop
pop
das
mov
mov
call
sub
inc
lock
enter
push
jg
pusha
add
aam
sbb
inc
push
rcrb
hlt
jo
mov
xor
insb
inc
sbb
test
jge
in
mov
cmp
in
jle
adc
sbb
push
lret
aas
ficoml
mov
dec
xchg
jnp
or
lret
sub
adc
pop
jp
in
jo
dec
inc
js
inc
sahf
data16
cltd
rolb
xchg
push
outsb
in
cmpsb
aas
aaa
jns
pop
das
bound
xor
mov
data16
lcall
subl
add
jbe
insl
xchg
fsub
cmp
lods
mov
mov
ja
in
loope
loop
mov
cli
inc
rol
pop
xlat
loop
push
pop
or
or
pop
stos
add
cmc
pop
xchg
lahf
xor
mull
daa
loopnew
scas
jge
rol
lds
ja
into
es
dec
rolb
lods
repz
mov
in
jp
cmp
mov
loope
mov
repz
xchg
aaa
ss
into
push
test
repz
jge
nop
in
fwait
add
rolb
dec
lea
jl
mov
pop
and
push
stos
ljmp
add
out
aam
cwtl
xchg
xchg
sub
icebp
or
imul
and
and
jp
jno
pop
mov
in
sahf
shll
jb
inc
ret
repz
dec
das
movsb
push
mov
and
pop
or
xchg
pusha
adc
xchg
in
ret
adc
lds
jecxz
loop
mov
adc
adc
pop
sub
sub
pop
mov
pop
push
inc
fmuls
scas
mov
mov
call
mov
pusha
adc
xchg
xchg
adc
inc
push
jb
cmc
andb
loope
jns
xchg
push
bound
lods
inc
mov
add
jle
imul
rolb
hlt
fisubl
mov
push
int
arpl
test
pop
sbb
mov
jle
push
ljmp
adc
ficomps
shrb
dec
jle
rcl
add
mov
jecxz
sbb
push
sbb
push
jmp
add
les
pop
dec
std
fdivr
jb
sub
bound
sbb
cmpsb
add
xchg
mov
pusha
mov
adc
loope
mov
xor
pop
cmpsb
dec
fst
jmp
xchg
xchg
insb
cmp
lcall
loope
mov
loope
imul
cmpsl
shufps
cmp
xor
test
movsb
gs
cmp
mov
sub
sub
cld
xor
mov
jl
xchg
add
mov
nop
repz
pop
add
or
sahf
inc
sbb
shr
sub
fidivrs
dec
xor
cmp
pop
sub
clc
push
sarl
enter
vmread
loope
jne
dec
pushf
adc
mov
pop
push
adc
aam
mov
gs
xor
popf
jp
inc
mov
sbb
or
shr
xor
cli
inc
into
imul
out
iret
out
push
stos
mov
pop
std
pop
and
ficompl
cmp
and
icebp
dec
js
lock
cwtl
ljmp
cmpsb
cmp
sti
pushf
xchg
jp
push
leave
jg
fnsave
out
inc
mov
inc
loopne
sbb
clc
sti
mov
stos
inc
addr16
cmp
xor
in
dec
hlt
les
lock
sbb
cmp
rolb
cmp
xchg
inc
data16
aad
cmp
aad
out
iret
pop
or
and
cmp
inc
int3
fists
mov
ss
nopl
or
icebp
or
jl
dec
les
test
xchg
imul
addr16
imul
dec
and
xor
pop
pop
fcmove
jp
push
bnd
fldt
pop
mov
sbb
dec
push
dec
int3
loop
xchg
push
or
loopne
xchg
push
dec
pushf
das
cltd
ret
adc
adc
js
shl
mov
cmp
jns
sbb
lods
adcb
pop
fdivrl
loop
sub
cmp
loop
roll
adc
sbb
add
movl
movsb
pop
stc
jmp
mov
loop
pop
adc
nop
cmp
dec
xor
test
jo
fdiv
jl
lods
out
stos
leave
mov
fwait
pusha
stc
xchg
cmp
mov
lret
jmp
daa
jge
inc
dec
sub
cltd
dec
mov
mov
and
sub
mov
mov
rorl
out
inc
xchg
dec
mov
xchg
pop
push
add
mov
in
add
lcall
cmp
lret
jp
shl
add
mov
jbe
test
fldcw
xchg
or
pop
mov
iret
mov
add
lods
notb
mov
mov
cmc
adc
hlt
sbb
mov
jle
in
cld
and
pushf
push
jge
fsubr
jbe
jge
mov
add
mov
add
inc
pop
out
pop
loop
sub
adc
mov
sub
xor
ds
xchg
cmp
div
insl
movsb
jne
out
daa
mov
les
jp
lods
int
ja
shrb
sti
jl
xor
insb
stos
inc
adcb
push
aam
jnp
mov
cmp
scas
mov
push
repz
jns
push
pop
mov
mov
inc
add
lods
mov
mov
add
int3
jmp
testb
or
inc
adc
add
call
nop
xor
mov
sbb
cmp
mov
int
cmp
leave
roll
mov
test
or
enter
aam
add
sub
cmp
add
cli
insb
cmp
iret
jl
inc
sub
push
in
movsb
adc
scas
cwtl
arpl
fdivrl
add
pop
xor
add
popf
and
dec
in
adc
jle
xorb
jo
mov
mov
cmp
incb
or
incb
ret
xchg
lcall
and
dec
shl
rcrl
loope
rolb
xchg
shll
xchg
int3
jbe
hlt
int
negl
pop
loope
push
jle
std
mov
out
pop
out
jecxz
jmp
test
test
push
sub
xchg
in
repnz
outsl
mov
xor
jb
and
mov
lcall
add
jmp
int
mov
jbe
mov
and
test
aas
out
inc
inc
mov
pop
ss
pop
add
int3
test
sub
xlat
add
pcmpgtb
inc
lods
and
imul
inc
int3
sbb
mov
sbb
push
inc
or
movsl
mov
test
rcr
lea
imul
inc
fildll
lret
pop
lods
sub
sahf
sbb
push
fistpll
mov
add
cltd
jl
sbbl
mov
fisttps
jns
test
lret
mov
pop
jg
adc
sarb
loopne
and
ljmp
or
xchg
lods
mov
inc
adc
push
inc
mov
clc
xlat
xchg
mov
hlt
movsb
loop
scas
aam
leave
sar
mov
pusha
notb
std
dec
pop
stc
lret
lahf
push
inc
xchg
push
cmpl
ss
add
cmp
xor
pushf
cmp
lahf
outsl
pop
repnz
mov
jns
mov
fisubrs
pop
test
mov
dec
cmpl
xor
sub
xor
mov
int3
sub
lcall
or
dec
inc
adc
jecxz
shlb
xor
repnz
pop
xchg
mov
popa
jae
pop
pusha
test
or
push
push
jl
dec
ljmp
push
jecxz
out
xor
loopne
imul
push
push
pop
pusha
or
push
scas
dec
jg
sahf
imul
scas
mov
mov
rcr
scas
lock
out
test
inc
jno
sub
jp
add
out
cwtl
ret
sub
sbb
push
jp
call
nop
adc
sbb
xchg
cwtl
mov
push
lea
mov
pop
xchg
mov
cwtl
inc
js
cmp
push
xchg
addb
test
xchg
loop
xlat
mov
int3
cwtl
jb
scas
push
lods
scas
inc
inc
sbb
incl
jae
xchg
jl
xchg
dec
pop
add
mov
repz
fidivl
test
clc
in
jb
fsubl
divb
mul
add
fs
test
xchg
ret
je
cmp
daa
cwtl
cwtl
push
outsl
nop
test
dec
andl
jmp
in
pop
popf
push
fadd
arpl
jl
gs
cmp
outsl
rclb
xchg
neg
or
inc
add
push
or
jae
pop
out
movsb
inc
xor
jecxz
divl
jle
jp
addl
add
dec
ja
in
popa
cltd
pop
inc
inc
sbb
popl
jle
cmp
inc
sbb
mov
daa
inc
ret
pop
test
out
decb
inc
mov
js
mov
add
dec
pop
sub
push
adc
push
nop
xchg
mov
add
je
ret
loopne
lods
notl
lods
fcos
icebp
sub
cmc
gs
aam
mov
ljmp
fadds
pop
mov
lods
and
sbb
sar
daa
andl
cmc
lds
xchg
or
outsl
fistpl
insl
shl
sbb
inc
mov
add
lret
adc
push
andb
icebp
lret
inc
test
adc
outsb
int
cmpsb
mov
rcrl
or
jp
lcall
sarb
mov
rcll
decb
sbb
stos
pusha
sbb
mov
mov
push
lcall
les
sub
jmp
inc
test
loop
push
add
bound
and
aaa
lods
jo
mov
scas
jg
fldenv
cld
mov
aas
push
std
in
xor
xor
cmp
cmc
sbb
or
insb
int3
daa
or
mov
xchg
lahf
aas
pop
dec
xchg
adc
xor
data16
push
or
rolb
sbb
dec
pop
in
popa
movsl
jbe
out
xor
mov
fldt
push
jmp
jno
into
enter
enter
ljmp
mov
mov
or
dec
cmp
lcall
cli
loope
dec
mov
mov
xor
stos
jge
pop
loopne
push
popa
addr16
mov
inc
imul
mov
repnz
js
mov
mov
jecxz
test
jle
pop
jns
cmp
mov
imul
lret
inc
xchg
pop
sub
cmp
mov
aas
sbb
and
push
addr16
and
xor
pop
adc
rorb
add
inc
jns
lret
xchg
mov
pop
lock
adc
in
inc
stc
icebp
mov
adc
dec
dec
pop
aam
mov
inc
pop
std
xor
push
ret
popf
test
add
jp
imul
or
jb
mov
or
mov
out
mov
or
in
sahf
loope,pt
outsl
cmp
int3
sub
mov
outsb
fsubrl
jecxz
pop
pop
add
add
pop
test
push
or
add
into
lock
movb
mov
inc
cmpsl
push
pop
repz
subl
sbb
dec
push
insb
mov
mov
mov
pop
sub
fdecstp
inc
push
leave
sub
xchg
push
lods
shl
arpl
jle
sbb
mov
pop
aam
in
and
xchg
inc
sub
test
dec
roll
add
pop
sbb
pop
push
sbb
xchg
adc
ljmp
xchg
adc
cmp
sbb
sub
cmp
test
ret
out
cmc
ss
das
cmp
or
mov
inc
std
aaa
cwtl
sbb
popf
lods
sbb
stc
incl
imul
fisubl
lods
adcl
nop
mov
or
xchg
adc
in
sub
pop
dec
je
orb
cs
je
movsb
xchg
mov
cltd
xchg
push
cmp
jnp
dec
pop
lret
mov
incb
xchg
sbb
flds
std
rorb
sarl
insl
loop
ret
pop
out
dec
addl
and
inc
mov
lahf
cltd
sbb
jmp
add
or
addr16
push
iret
sub
jmp
dec
lds
std
lods
movsl
add
das
cld
test
filds
sbb
loopne
in
or
and
or
lods
pop
push
jecxz
pop
cmp
push
pop
cmp
push
js
xor
or
push
xchg
dec
cmp
pop
aam
cmc
mov
test
push
mov
mov
cltd
or
dec
jg
fistl
inc
dec
stos
icebp
cld
lods
xchg
data16
mov
cmp
xchg
ficompl
or
mov
cmp
inc
cmpsl
push
jge
out
lret
ds
out
ja
insb
jae
jns
xor
gs
js
push
xchg
loope
call
sarb
push
mov
fildll
sbb
pop
add
sti
lods
xchg
mov
mov
stos
in
fisubrs
lods
push
repz
push
sub
xchg
jge
push
lret
jns
add
loopne
xor
cld
push
cmc
xchg
cmp
insl
loope
push
rclb
daa
test
mov
bound
xchg
jo
mov
fisttps
dec
xor
leave
push
inc
fidivrs
adc
cmp
ljmp
inc
lea
shlb
mov
je
divl
daa
dec
loop
adc
mov
mov
mov
jne
mov
and
subl
outsb
daa
lret
sbb
js
inc
and
test
subb
in
xor
or
movsb
mov
sbb
mov
mov
loop
std
cmp
and
pop
dec
das
pop
push
or
test
adc
ret
sahf
add
inc
sub
insb
ljmp
testb
shlb
cmpsl
sub
clc
sbb
xchg
out
data16
cltd
loop
jl
add
clc
pop
pop
cmpsb
pop
shrl
mov
rcrb
dec
xchg
sbb
and
fwait
mov
cltd
das
out
jmp
jecxz
sub
hlt
pusha
sbb
mov
lahf
jge
ds
cmp
inc
xchg
test
mov
out
ja
add
faddl
push
call
push
fildll
or
push
xchg
clc
in
call
loopne
movsl
and
incb
pop
push
sbb
jno
xor
fcompl
mov
inc
mov
jae
pop
dec
or
andl
das
mov
add
cmc
les
adc
xchg
push
pop
arpl
sub
pop
sbb
fcoml
mov
adc
mov
mov
sbb
sub
adc
test
pop
and
mov
out
ret
cmp
enter
mov
subb
lds
xchg
push
adc
aaa
xchg
cmp
int3
adc
xchg
xor
call
das
xchg
jl
mov
jne
xchg
cmp
movsb
stos
jmp
sbb
jmp
add
pop
test
push
xchg
mov
sub
jle
cld
cmp
mov
jge
orb
xor
or
xor
inc
or
jl
or
pop
repz
imul
scas
out
pop
iret
mov
xchg
mov
scas
inc
xchg
cmp
mov
and
movsl
fdivrl
pop
push
enter
ds
adc
sahf
sub
rcpps
adc
mov
push
and
mov
aas
inc
test
push
jne
test
or
push
das
stc
in
loopne
cwtl
out
push
cwtl
pop
jno
pop
lcall
lea
inc
and
pop
lret
das
adc
stos
roll
xor
lret
inc
scas
or
mov
xchg
mov
cwtl
mov
jns
ja
mov
cmpsl
dec
push
loop
aam
out
mov
dec
pop
inc
or
jno
dec
pop
loop
ljmp
cmp
or
inc
fidivs
push
lods
fsubr
ret
lock
sub
jg
addr16
repz
loope
jo
dec
add
mov
lret
shrl
add
hlt
push
lea
cmp
jmp
push
inc
or
push
xchg
jge
and
mov
fnstcw
and
xchg
popf
cmc
fldcw
lods
fmulp
jbe
push
pushaw
call
stos
gs
cs
xchg
jbe
dec
jb
pop
cs
lds
rcll
mov
adc
sbb
inc
sti
sub
xchg
adc
mov
aad
push
jge
push
minps
push
clc
stos
movsb
aad
sbbl
mov
repnz
insb
dec
add
pop
fisubs
dec
pop
dec
sub
mov
movsb
cmp
in
xchg
xchg
xor
xchg
or
cmp
out
or
mov
push
mov
inc
fmuls
and
cli
repnz
out
cmp
int
mov
sbb
cmp
cs
xor
sbb
dec
movsb
push
mov
in
jb
mov
sub
or
sbb
fs
adc
bound
sub
repnz
roll
xchg
cs
in
cmp
outsl
into
bndldx
cmp
dec
adc
out
inc
mov
iret
test
outsb
lds
cmp
pop
adc
inc
jecxz
cmp
adc
sbb
cs
mov
sahf
sub
pop
push
out
add
fninit
inc
mov
adc
imul
aam
test
inc
in
ds
divl
push
rorl
push
push
push
and
jp
or
xor
nop
out
jge
inc
push
cmp
pop
orb
sahf
sub
pminub
mov
xor
fs
cmp
aam
xchg
lds
push
or
sbb
mov
and
inc
psubq
mov
xchg
clc
mov
cmpsl
dec
and
lods
add
scas
subb
cmp
in
add
or
add
aam
pop
and
daa
call
inc
pop
mov
out
xor
jle
sbb
rolb
lahf
dec
icebp
fdivrp
push
cs
pop
out
cmp
fildl
add
movsb
xchg
icebp
add
aam
scas
es
dec
inc
ja
pushf
add
pop
daa
mov
push
push
pop
fldenv
ja
inc
mov
cmp
sbb
mov
cmc
xchg
scas
jle
adc
dec
enter
mov
and
js
leave
repnz
push
pop
mov
pop
mov
push
pop
mov
mov
jne
insb
aas
pop
out
sub
cmp
mov
mov
mov
sub
cltd
mov
out
mov
dec
pop
ja
movsl
add
xor
push
push
dec
and
dec
mov
xor
std
mov
inc
pop
mov
add
cmp
mov
mov
and
std
stos
jl
pop
sbb
andb
sbb
xor
aad
xchg
sbb
inc
add
sub
ljmp
xor
into
xlat
int3
adc
pop
xchg
or
dec
cltd
sub
inc
outsl
jnp
repz
dec
subb
dec
and
fisubrl
or
int
sub
lods
and
jmp
adc
ret
leave
outsl
add
arpl
and
ja
mov
aaa
and
adc
mov
in
sbb
sbb
mov
push
fstps
sbb
into
xor
mov
adc
add
mov
sti
stc
clc
mov
or
fcomps
leavew
push
out
xchg
icebp
inc
ret
nop
test
dec
aam
and
xor
add
cmp
add
sbb
aas
mov
daa
std
push
out
sahf
gs
and
sbb
dec
cmp
mov
xchg
mov
mov
inc
arpl
andl
dec
mov
pop
das
jmp
push
mov
mov
jge
popa
jb
ss
cs
push
and
pop
add
mov
jl
loope
push
cmp
repnz
push
iret
mov
add
incl
jno
jo
sub
cmp
and
mov
outsb
addl
fsubrp
mov
shld
sbb
sub
jns
push
mov
les
stos
and
sub
mov
loope
cmp
jae
fnsave
outsb
push
rorl
lods
aad
jecxz
notl
repnz
leave
scas
cmpsl
cld
ds
std
call
rol
cmc
inc
mov
xor
push
inc
leave
es
sub
or
cmp
dec
jb
fbld
jg
ds
outsb
repz
dec
mov
daa
or
popl
loope
int
push
add
imul
loope
lret
cmpsb
aas
rcrb
cmpsl
mov
lock
push
insb
cmpsb
pop
cmp
dec
mov
jnp
push
test
hlt
dec
clc
fistpl
negl
mov
mov
mov
fwait
addb
loop
pusha
je
sbb
pop
and
push
aaa
scas
mov
add
pop
or
scas
movsl
notb
jno
jge
ret
or
push
mov
sub
dec
lret
jmp
and
push
roll
mov
and
mov
inc
sbb
pop
enter
hlt
mov
insl
leave
sub
inc
popa
and
mov
push
stos
insb
hlt
jns
jae
sbb
adcb
loop
add
popa
pop
jno
mov
jb
push
loop
mov
inc
scas
lahf
and
xchg
cs
mov
pop
pop
ss
add
cmc
sbb
cmc
jl
mov
add
mov
pop
rcrb
xor
jecxz
scas
mov
ret
push
aaa
dec
ficoms
jg
jo
enter
fldcw
nop
scas
in
mov
ret
inc
repz
cmp
push
xor
and
in
mov
mov
sbb
cltd
sub
cmc
lods
xchg
aas
or
push
sub
jle
inc
cli
int
jp
int
xchg
popa
stc
pop
lcall
pop
cmp
aaa
xor
in
mov
and
or
mov
std
jne
xor
mov
xchg
xchg
fnsave
insb
mov
js
lods
fwait
test
movsl
jne
and
aaa
rcrb
das
js
or
adc
lods
scas
ja
add
xchg
incb
jmp
rcrb
xor
imul
int
fsubrl
mov
add
mov
jle
push
inc
push
sub
push
lods
mov
stos
ficomps
xchg
mov
xchg
jne
mov
sub
or
call
loopw
or
push
pop
gs
ss
cmp
mov
adc
pop
mov
stos
adc
loopne
xchg
mov
jne
and
push
movsb
roll
xchg
push
and
lcall
mov
mov
sub
pop
mov
xchg
push
and
imul
leave
dec
out
repz
xchg
andb
and
addr16
rorl
int3
dec
sub
stos
mov
and
in
push
xchg
ret
inc
inc
lods
clc
push
add
cli
dec
out
aad
sahf
jae
roll
xorps
cmc
in
dec
in
test
cmp
ja
fdivr
and
inc
arpl
inc
out
jo
psubsb
repz
mov
rcr
lahf
bound
push
dec
es
sbb
in
sub
lcall
sti
psrlq
jmp
add
cmp
jns
jnp
push
pop
loopne
push
jnp
ret
push
mov
mov
jecxz
adc
roll
mov
adc
aas
dec
mov
xchg
push
dec
pop
sbb
ds
shrl
inc
enter
xor
jno
jno
std
int
mov
xchg
sub
adc
and
mov
outsl
nop
mov
inc
or
add
xlat
push
stc
fadd
lret
mov
scas
insb
insl
sbb
loope
das
xchg
mov
push
push
adc
push
in
rcll
mov
std
jbe
mov
dec
jp
mov
inc
iret
xchg
fwait
outsl
jne
lret
sub
or
testb
stc
lahf
dec
sub
push
add
leave
fs
adc
dec
sub
leave
arpl
cmp
test
test
frstor
mov
cld
jb
push
push
and
mov
sub
cli
mov
cwtl
xchg
sti
pushf
lods
xlat
cmp
mov
inc
rolb
push
cmp
push
pushf
xor
ret
jmp
test
xchg
ss
out
xor
repz
out
mov
cltd
cmp
outsb
pop
or
sub
popa
mov
bswap
adc
ds
add
push
dec
push
rorl
mov
aas
ret
cmp
dec
xor
sbb
adc
push
movsb
xchg
pop
fwait
mov
sti
xchg
inc
mov
pop
aad
fsubl
out
mov
adc
push
mov
mov
and
push
mov
imul
mov
je
inc
cmpb
and
leave
mov
lods
jl
stc
sub
hlt
stos
int3
bound
xchg
scas
ds
dec
hlt
sbb
sbb
pop
xchg
inc
ljmp
xchg
jl
mov
repz
lods
fsubl
push
xor
pop
xor
dec
fistps
dec
push
js
xor
lods
inc
mov
xchg
mov
lret
dec
pop
pop
pop
inc
xor
leave
pop
imul
in
fwait
rclb
xor
rol
aaa
xlat
imul
and
orl
cmp
hlt
add
push
mov
loope
or
mov
dec
das
pop
notl
add
mov
into
inc
in
mov
scas
push
xlat
ss
stos
jnp
sbb
repz
movsl
test
int
xchg
addr16
push
sbb
mov
xor
in
cmp
sti
out
push
push
outsb
pop
mov
sqrtps
pop
push
cmp
jbe
sub
push
imul
in
imulb
stc
jbe
dec
xor
stos
shl
dec
xchg
xchg
and
cwtl
sbb
dec
pop
jp
inc
clc
in
and
mov
fildl
xor
js
rcrb
push
jae
sub
stos
test
jne
popa
push
rclb
push
lock
out
inc
push
and
cmpsl
pop
jg
mov
pop
rcll
pop
adc
daa
xchg
pop
int
mov
xchg
cmp
scas
mov
enter
repnz
jbe
mov
inc
cmpsl
mov
xchg
fdivrl
xchg
popa
nop
js
push
push
push
sbb
int3
jnp
clc
mov
loope
mov
pop
js
and
popa
push
test
sub
add
inc
roll
and
sbb
arpl
pop
or
add
sub
mov
cmp
or
clc
jp
mov
cmc
icebp
lahf
outsl
or
xlat
cmp
das
add
xor
ror
mov
sbb
test
scas
pop
jno
cmp
dec
push
cltd
lret
mov
in
and
dec
cmp
fwait
clc
mov
sbb
addl
loopne
mov
sysenter
jge
xchg
icebp
mov
push
rcrl
mov
push
orb
mov
rclb
pop
fwait
loopne
icebp
adc
aam
adc
sbb
mov
mov
xlat
dec
mov
sbb
sub
sbb
jmp
sub
jo
daa
and
mov
or
xchg
cmp
sub
shlb
lahf
sbbl
ret
fs
sbb
aad
or
push
pop
adc
push
dec
fsubs
cmp
push
pop
jecxz
bound
ffree
mov
insb
mov
test
xchg
ror
sbb
aas
popf
popa
orl
mov
mov
test
push
subl
frstor
imul
ss
lahf
and
aad
aad
scas
and
inc
cmp
out
mov
jo
filds
cmp
fmuls
sbb
cmp
test
je
mov
inc
mov
popa
jle
mov
insl
arpl
cmp
xchg
lret
sub
mov
xor
leave
dec
sub
mov
mov
jle
fs
cmpsl
mov
add
inc
mov
or
jp
push
jle
repz
xchg
sbb
popa
push
push
leave
lcall
pop
movsb
movsb
xor
sbb
es
cmp
loopne
into
je
idiv
mov
cld
mov
mov
sahf
daa
into
lret
pop
sub
fstps
cmpsb
stos
xor
xor
mov
sbb
loop
cmp
cld
xchg
inc
ret
pop
xchg
push
popf
add
int3
or
dec
jecxz
inc
out
add
scas
orb
pop
dec
xchg
ds
lock
fsubs
jle
inc
mov
and
add
cmpsb
push
xor
dec
jns
push
ret
cmp
xchg
sahf
pop
mov
lret
pusha
loope
rorl
js
dec
outsb
test
push
aas
push
xchg
test
insb
jo
xchg
lcall
aas
mov
inc
out
mov
xchg
jecxz
pop
out
cwtl
outsb
aam
call
mov
out
mov
or
xchg
decb
xchg
cltd
mulb
int
cwtl
sbb
sti
stos
sarl
stos
cwtl
out
lods
repz
popf
outsb
cwtl
lgs
jg
int
aad
jo
iret
jnp
out
mov
fimuls
nop
push
test
stos
test
outsb
sub
add
mov
sbb
sahf
jne
in
and
stos
mov
push
inc
or
push
out
popa
sub
dec
mov
pop
sahf
ficoml
dec
loop
repnz
dec
ficompl
xchg
mov
les
mov
adc
clc
pop
sbb
jle
dec
icebp
dec
leave
jmp
aaa
fs
sbb
jne
adc
movsb
and
ljmp
ds
iret
mov
mov
scas
pop
mov
xchg
shll
in
cwtl
sbb
cmpsb
insb
fisttpl
insb
je
mov
lds
icebp
jnp
xor
jne
jnp
dec
fldenv
cmc
add
mov
push
popa
cli
cmp
inc
mov
daa
push
xor
push
adc
loopne
pop
sbb
lods
push
sub
iret
test
shl
ljmp
jne
inc
sbb
or
xchg
aaa
popf
adc
leave
lahf
pop
jae
mov
inc
sbb
push
imulb
test
inc
inc
sbb
and
sbb
int3
jb
xchg
mov
clc
sahf
add
xor
test
jl
pop
aam
add
mov
mov
sub
adc
rcr
cli
je
push
repz
add
xor
mov
lea
adc
fbld
mov
cs
call
imul
lret
mov
mov
cmc
xchg
stos
gs
daa
jae
into
fadds
test
jo
cmp
xlat
fisubrs
mov
or
and
addr16
mov
shrl
in
jns
adc
ret
push
test
loopne
xchg
push
jl
fldt
mov
mov
push
insb
mov
jne
pop
pop
jg
pop
xchg
push
cli
or
xchg
popa
rcrb
mov
aam
out
pop
push
jnp
in
inc
insl
mov
fisubl
imul
inc
fmuls
jle
fldcw
out
mov
lock
dec
comiss
add
ss
shlb
jo
lcall
in
mov
dec
mov
jecxz
jl
inc
int3
pushf
stos
jbe
dec
jbe
dec
inc
imulb
cmp
addb
and
or
popa
into
jno
sub
inc
mov
xchg
dec
mov
call
add
addr16
xchg
xor
or
pushf
bound
loope
lsl
pusha
pop
inc
fwait
loopne
sub
das
sbb
sbb
out
xor
cltd
mov
mov
push
das
lods
xchg
data16
or
std
cmp
outsl
adc
mov
push
stos
inc
add
jle
shrl
fnstenv
jnp
or
andl
std
pop
je
add
pop
sbb
mov
mov
stos
imul
xor
cs
fsubl
jno
repnz
popa
add
lock
mov
shlb
add
roll
xor
mov
lea
xor
enter
adc
mov
sub
ljmp
dec
cmp
fwait
inc
cmc
jmp
cwtl
out
icebp
cmpsl
cs
or
cltd
stos
stc
inc
mov
aam
inc
movsl
cmpsl
adc
aam
fwait
inc
or
jp
inc
dec
stc
out
inc
xchg
or
jns
mov
cmp
js
clc
iret
lods
stos
scas
out
cld
cmp
xor
out
lods
xor
push
outsl
mov
out
out
inc
inc
jne
cli
jmp
mov
int
in
inc
or
adc
insl
jecxz
adc
pusha
inc
mov
dec
jae
xchg
shr
sub
fnstenv
sub
dec
push
or
add
fwait
iret
cmp
insb
jae
jae
adc
int
xor
mov
inc
xlat
push
inc
loope
sub
jbe
mov
jnp
ja
sub
movsl
mov
ss
xor
test
inc
sub
pop
inc
pop
or
mov
xchg
jno
dec
xchg
lahf
pop
sub
cvttps2pi
inc
or
les
dec
mov
mov
pop
imul
cmc
sbbl
imul
imul
repz
jb
dec
lds
rorl
std
cmp
adc
add
or
shl
iret
adc
addr16
jb
sub
fmull
mov
adc
dec
cld
mulb
out
sub
dec
outsb
aaa
data16
mov
xchg
popa
jp
adc
mov
sub
pop
xchg
jmp
dec
clc
int
pushf
stc
mov
popf
sub
into
and
adc
mov
pusha
call
hlt
daa
fmull
cmp
nop
mov
das
fucom
in
pop
stc
movsb
movsl
pop
shrb
pop
cmp
add
sub
sti
mov
pop
xlat
jnp
jmp
fucomi
ljmp
cmc
sbb
pop
fcomps
push
ss
cli
sub
std
mov
cmc
scas
mul
in
or
jb
inc
xor
and
lods
inc
subb
cmp
push
push
daa
fwait
adc
dec
and
sbb
sarb
pop
push
out
xchg
decl
or
popf
clc
jb
jp
adc
lods
daa
pushf
es
xor
pop
push
clc
jae
lcall
inc
mov
dec
popa
popa
xchg
icebp
ret
imul
sti
mov
repz
aas
adc
por
daa
mov
arpl
lock
mov
repnz
sub
sbb
add
mov
and
int
jae
push
shrl
xchg
pusha
pop
cmp
int
and
imul
xchg
dec
insl
or
xor
imul
push
popf
sub
adc
sbb
in
in
loope
push
out
ret
jl
sarb
xchg
lahf
push
jg
xor
jmp
push
jmp
js
cwtl
inc
out
aam
cmp
or
jno
rorl
dec
jge
or
divb
pop
js
loopne
ljmp
dec
aam
fcmovnbe
add
xlat
pop
mov
fnstenv
jg
pop
sbb
les
popa
shrb
jl
pop
sbb
subl
aam
dec
icebp
dec
insl
out
xchg
mov
stos
xchg
aaa
pop
stos
fbld
mov
pop
lea
les
push
mov
pop
orl
push
cwtl
mov
lea
jmp
ljmp
pushl
outsb
xchg
pop
loop
cmp
cld
jp
and
dec
adc
add
mov
cli
mov
xor
adc
int3
jmp
adc
add
mov
push
lock
and
test
jno
in
cmp
xor
xchg
std
inc
insl
or
inc
pop
xchg
mov
xor
inc
test
cmp
es
cmpsl
lcall
and
jmp
push
push
push
leave
ret
out
das
loope
mov
push
xchg
push
lods
or
popl
pop
fcmovu
gs
sarb
cltd
mov
mov
sarl
inc
fwait
mov
pop
movlhps
mov
pop
loope
cmp
cmp
ror
movsl
or
adc
call
les
sti
sub
sub
in
adc
test
out
jg
divl
sub
mov
pop
iret
call
jl
into
cltd
inc
push
ss
cld
insl
mov
dec
into
insl
jmp
movsl
or
jmp
push
xor
and
sub
jmp
imul
xchg
lods
dec
and
and
test
dec
jmp
mov
mov
mov
pop
mov
jmp
sbb
test
leave
pushf
sahf
fldenv
gs
sub
rcrl
inc
pop
mov
aad
mov
mov
pop
je
fldt
cmp
popa
xchg
inc
ljmp
push
cmp
and
cmc
sti
sbb
cmp
mov
xor
es
push
ror
jg
fisttpll
push
dec
notl
ljmp
xlat
movsl
ret
scas
loope
shl
push
mov
jge
test
std
adc
je
sbb
pop
mov
xor
mov
xor
cmp
cmpsl
outsb
and
les
or
mov
inc
xchg
ljmp
jb
call
push
xlat
in
out
mov
lods
sbb
gs
cld
pop
jl
divb
mov
and
shll
sub
push
pusha
sti
fists
sbbl
xchg
push
out
out
rcrl
push
jge
jb
int3
out
adc
in
aaa
ror
ds
out
and
sub
lods
popa
stc
aas
pop
sub
adcl
mov
das
scas
push
aaa
repz
out
repnz
js
pop
jnp
es
loop
in
gs
jne
cmp
movsl
push
testl
sbbl
mov
cmpsl
mov
mov
arpl
adc
xor
mov
out
jnp
shrl
cmp
dec
and
lea
xchg
lret
sarl
sub
dec
mov
cmpsb
arpl
mov
ljmp
imul
pop
pusha
repz
insb
das
jg
sbb
insl
dec
mov
mov
sub
jg
adc
xor
push
daa
pop
xor
mov
sahf
fldt
fnclex
in
sbb
sub
rorl
push
bound
mov
push
jo
adc
push
out
jecxz
xchg
scas
aam
lahf
or
mov
or
filds
adc
pop
mov
addr16
mov
in
pop
into
xor
imul
iret
jl
inc
test
mov
push
mov
in
dec
pop
mov
mov
jae
andb
iret
out
popa
test
fldenv
mov
push
push
xchg
out
sub
add
je
rorl
out
cmp
adc
dec
dec
das
int3
fwait
ss
sub
sub
aam
cltd
or
es
enter
ds
adc
stos
xchg
xchg
sti
test
sub
and
aam
push
fs
dec
hlt
int3
mov
ss
bound
push
popf
mov
add
lret
das
mov
mov
xchg
repz
aad
clc
aam
fld
out
cld
push
or
pop
out
loopne
call
fsub
dec
xchg
in
lret
sub
cmpl
data16
sbb
mov
in
push
and
imul
jbe
inc
addr16
das
out
cwtl
xchg
test
imul
mov
std
inc
das
xchg
inc
xchg
xor
fildll
addb
shrb
cmp
loopne
in
aad
fisubs
sub
jecxz
xchg
dec
lods
mov
lea
cwtl
add
adc
mov
and
push
mov
movsl
les
and
fildll
dec
sbb
jne
jo
cld
scas
mov
xor
mov
pop
aaa
sub
cmpsb
or
jge
adc
push
jo
or
mov
pop
insl
cmp
bound
into
mov
push
push
cmpsl
mov
push
xchg
mov
mov
xchg
in
pop
lret
js
push
pop
mov
adc
jge
adc
ficompl
inc
lock
repz
push
mov
xchg
push
xchg
fwait
pushf
nop
sahf
test
mov
roll
xorl
sarb
pop
ret
icebp
mov
jl
mov
sub
mov
push
nop
imull
into
sbb
xchg
in
sarl
dec
popf
jbe
jp
xchg
push
mov
pop
push
pop
pop
out
and
es
retw
fstl
and
mov
mov
test
fstpt
dec
fadd
hlt
jno,pt
jge
data16
popa
mov
cmp
rcrl
adc
push
lods
cltd
mov
lret
inc
out
lahf
test
je
in
repz
mov
inc
add
dec
or
bound
inc
popa
mov
data16
fucom
ss
push
jmp
mov
jae
addr16
in
jp
jo
stc
movl
into
mov
data16
cltd
xlat
lahf
shl
mov
sahf
jnp
dec
xor
daa
ret
or
fdivrl
lcall
dec
cmp
lahf
mov
xchg
xor
andl
and
mov
aas
push
shlb
movsb
stc
je
jns
cld
inc
fs
mov
jb
or
bound
lahf
dec
mov
test
mov
jg
lods
inc
and
bound
in
jmp
mov
orb
xor
and
in
int3
shr
cmp
mov
cmp
or
jmp
add
lret
cli
mov
out
mov
mov
mov
iret
sbbb
and
repnz
xchg
or
sub
icebp
imul
jecxz
insb
push
arpl
in
addr16
imul
lds
rsqrtps
cmpsb
lahf
inc
std
pop
and
sbb
popf
loope
sbb
xchg
jnp
sbb
cmp
cmc
inc
jecxz
jne
cmp
xor
mov
fsqrt
mull
pop
jmp
xchg
cwtl
sub
add
es
ds
mov
cmp
test
nop
jle
incb
mov
data16
mov
mov
adc
imul
sub
inc
push
adc
imul
imull
add
aas
dec
sub
jecxz
shrb
add
sarb
in
shl
pop
push
jae
pop
dec
dec
push
and
out
add
lea
aad
jo
push
mov
cmpsb
mov
orl
aas
jmp
clc
leave
jl
jns
ljmp
mov
sbb
mov
icebp
add
js
cmpsb
pop
out
iret
or
or
fidivl
jmp
ds
lds
or
in
cmp
dec
lock
leave
push
repz
mov
push
cmpsb
outsb
in
xchg
inc
jmp
mov
mov
sub
xor
and
rcr
or
lods
sbb
cmp
cmpsb
cmp
into
jns
jmp
xor
ret
add
shrl
xchg
jno
in
sti
jge
sub
stos
popa
inc
int3
mov
cs
mov
pop
js
pop
mov
sbb
cmp
or
adc
pop
int
cwtl
sub
fisubrs
xchg
cmpsl
insl
arpl
lcall
andnps
incb
cmp
fdivrs
aaa
leave
pop
ficomps
mov
pop
xchg
mov
out
push
xchg
call
js
xchg
inc
add
addr16
cwtl
test
push
test
cli
or
aaa
int
cmpb
int3
popf
dec
aaa
sbb
inc
push
jno
movsb
faddl
or
cli
jg
pop
cwtl
enter
int
lcall
ss
push
imul
cld
scas
adc
inc
adc
aaa
iret
inc
mov
xor
mov
mov
subb
sub
imul
lock
and
or
lcall
jmp
fistl
imul
ljmp
in
jl
fldenv
pop
push
dec
inc
xchg
ja
lret
rclb
jge
idivl
lock
or
push
mov
mov
nop
mov
xchg
jg
inc
jecxz
mov
fadds
xor
lahf
std
mov
cmp
aad
or
inc
jmp
and
jl
push
sar
loop
mov
pop
push
mov
rol
lea
jmp
enter
movsb
stc
xchg
xchg
jo
ds
jecxz
js
sti
sti
pop
shll
xor
dec
ret
shll
pop
inc
jns
push
pop
jecxz
xchg
je
movsl
je
dec
cmp
outsl
insl
sub
mov
sub
test
sarb
or
shrl
std
xchg
add
movsl
and
mov
cmpsl
ds
sbb
jecxz
jecxz
stos
fimull
js
insb
fs
pop
out
aad
and
adc
sbb
out
inc
and
icebp
test
add
pushf
jno
roll
fwait
pop
xchg
nop
adc
adcl
pop
mov
push
arpl
out
in
mov
inc
mov
mov
cmpsb
dec
stos
sahf
push
cwtl
jp
jle
ljmp
das
adc
aaa
aam
fnstsw
mov
rcl
out
xchg
jg
shll
sub
sub
jmp
bnd
adc
cli
dec
or
and
adc
xchg
sbb
add
cmp
insb
adc
test
mov
inc
int
xor
fcmovu
scas
loop
sub
arpl
cltd
jb
xchg
mov
pop
rorb
mov
scas
push
inc
add
shll
test
or
cmp
sub
lahf
in
adc
or
stc
push
lcall
movsb
out
out
loopne
adc
cmp
mov
fsubrl
adc
jns
pop
aad
inc
js
xchg
insb
sub
jp
jmp
inc
leave
mov
jg
ljmp
dec
inc
jae
pop
mov
adc
cmp
addr16
sub
and
jae
imul
fwait
dec
mov
xorl
adc
mov
jle
outsl
in
and
adc
xor
das
mov
pusha
jb
rorb
repz
aam
xor
jns
test
xor
sub
neg
in
pop
or
repz
push
daa
into
pop
sub
ffreep
mov
fadd
jecxz
cmpsl
les
push
loop
xchg
adc
jge
and
iret
adc
pop
push
movsb
lret
dec
add
add
add
dec
sbb
inc
outsb
mov
pusha
fcoml
or
mov
sbb
movsb
mov
sbb
sub
jp
inc
pushf
aam
std
jg
jb
push
inc
stos
sbb
and
cmpsl
dec
sahf
mov
cmp
in
push
xchg
sbb
lea
add
cld
out
sub
mov
mov
aaa
pop
dec
inc
mov
cmpl
or
adc
xchg
mov
cld
push
ret
pop
add
insb
fnstsw
insl
add
in
sbb
loopne
sbb
movsb
inc
notl
ret
movl
jnp
adc
mov
inc
enter
leave
xchg
movsl
sbb
and
leave
inc
aas
xchg
rorl
xchg
cs
stc
push
jmp
jnp
ja
out
loope
test
gs
xchg
clc
jne
aad
lahf
aaa
mov
cmc
inc
fnstcw
cmpsb
jl
bnd
pushf
iret
or
pop
dec
out
imul
mov
adc
xchg
fcomi
adc
je
clc
mov
jb
jae
and
int
or
adc
or
inc
or
enter
jl
or
pop
xchg
fsubp
fnsave
sti
dec
push
pop
adc
es
mov
adc
and
fcomi
or
in
loopne
inc
aas
xchg
test
divl
pop
mov
inc
mov
es
mov
repnz
sub
pop
jg
gs
or
push
fisubrs
outsb
mov
leave
movsl
push
cwtl
insb
jl
add
sarb
cmp
je
lret
cmp
inc
sbb
sub
sbb
push
adc
std
jl
mov
iret
or
addl
cmpsb
jne
fldenv
push
mov
dec
mov
push
mov
ror
and
sbb
inc
mulb
lret
inc
or
and
insb
icebp
aaa
je
adc
inc
lcall
mov
or
dec
or
pop
sbb
loopne
or
xchg
std
popa
push
shl
xor
out
inc
insb
mov
pop
fwait
mov
push
jo
pop
inc
pop
test
mov
ljmp
and
and
cmp
cmp
ljmp
sub
testl
mov
lods
inc
or
pop
xor
cmp
lcall
xor
pushl
fmuls
test
lret
rcrl
jl
sbb
mov
push
test
sub
cmp
mov
xchg
dec
xchg
lock
jbe
lahf
jb
movsl
repnz
pop
test
test
sub
jnp
int3
and
xor
aas
jne
shll
mov
pop
mov
jmp
sub
lret
pop
pop
xchg
fwait
rol
mov
push
sahf
movsl
inc
stos
mov
push
negb
addb
test
sbb
scas
cmp
add
and
xor
mov
popa
mov
xchg
ret
sbb
setns
pop
test
nop
movsl
mov
pop
lods
fmuls
mov
imul
push
xor
add
test
addr16
pop
das
outsb
push
adc
xchg
xchg
shrb
cmpsl
mov
pop
notb
pop
fwait
test
hlt
out
cmc
push
in
cmp
aam
xchg
mov
add
jae
jmp
icebp
xchg
dec
movsb
shlb
mov
push
and
xchg
push
inc
movsb
int
cmp
lea
jnp
xlat
cli
xor
inc
push
push
or
das
cmp
sbb
mov
jo
add
ds
mov
dec
nop
cld
xchg
jmp
adc
push
lret
mov
lds
imul
sarl
hlt
scas
mov
jmp
ficompl
inc
pop
movsl
add
sbb
inc
cmpsl
jb
in
inc
jmp
mov
push
mov
test
mov
and
daa
mov
add
fidivs
cmp
jo
stos
lods
pop
scas
pop
jb
jns
cmpsb
stc
in
mov
mov
pop
xor
decl
xor
push
cli
test
sub
pop
mov
stos
lods
lods
ja
popa
push
pop
mov
mov
add
divb
and
inc
test
bound
inc
adc
in
in
dec
repz
sbb
clc
loopne
loopne
test
mov
test
sbb
outsb
ss
hlt
in
pusha
sbb
popl
clc
push
pop
or
les
dec
mov
scas
stos
cmp
lret
int3
inc
pusha
lret
cmp
push
pop
loope
push
dec
mov
xor
xor
fisubrl
fdivl
sti
in
push
imul
mov
movsb
ss
add
push
pop
xchg
into
or
sub
cld
dec
fists
cltd
dec
stc
sub
sub
cmpsl
pop
stos
les
es
ret
scas
push
insb
iret
inc
sbb
push
rcrb
mov
in
fistl
mov
jg
adc
repz
adc
xchg
arpl
arpl
pusha
rclb
lret
outsl
fs
in
mov
inc
mov
pop
or
repz
cld
loopne
lcall
movsb
fbstp
stos
cmp
loopne
in
pop
int
inc
dec
sbb
lea
pop
jns
outsb
sub
xor
mov
adc
dec
sub
xorb
inc
in
in
test
push
cmp
sahf
sbb
mov
mov
ret
aaa
push
pop
fisubs
mov
inc
insb
jl
mov
pop
in
addr16
insl
mov
jno
shlb
arpl
lock
push
pand
out
loope
adc
add
xor
sbbl
cmp
in
push
dec
test
faddl
mov
aad
outsb
inc
shrl
cmc
notl
aad
cmpsb
sbb
js
repnz
add
xchg
adc
mov
push
mov
ds
push
jg
dec
add
pop
inc
mov
fstpl
icebp
fstpt
rorb
arpl
inc
mov
aad
std
push
or
inc
inc
xlat
push
push
jb
xchg
or
loope
jne
xor
andb
jle
and
sbb
mov
pop
inc
nop
popa
jmp
xor
lods
push
ficoms
lcall
mov
mov
call
add
add
adc
pop
out
cmp
arpl
adc
fistps
jge
outsl
cmp
dec
outsl
adc
cmpsl
roll
or
loopew
dec
sbb
cld
je
les
jb
mov
xor
sbbl
jmp
push
jp
out
scas
test
cltd
adc
xchg
inc
loopne
ds
adc
mov
pop
popa
jb
xchg
lret
movsl
lds
push
push
aad
call
cld
dec
push
dec
jp
in
pop
xor
jp
inc
mov
imul
clc
mov
mov
and
inc
mov
pop
lea
pop
cmc
mov
nop
pop
xor
inc
lret
repnz
mov
dec
cmp
sub
add
jo
out
or
ljmp
adcb
iret
xchg
data16
jge
inc
inc
test
jns
cmp
xor
jmp
cmp
xor
ljmp
sbb
icebp
sub
mov
cmp
mov
pushf
pcmpeqw
or
imul
sti
dec
or
adc
daa
pop
adc
pop
mov
and
adc
inc
ret
scas
xor
add
int3
mov
inc
pop
aaa
mov
inc
push
shll
outsb
scas
aaa
fbstp
and
cmp
sbb
cmp
outsb
ds
clc
cmp
adc
push
sub
inc
out
inc
adc
xchg
pop
and
ljmp
pop
push
xor
adc
dec
shr
testl
cltd
or
stos
sbb
add
xor
mov
data16
jmp
or
jg
hlt
lret
imul
lahf
add
shlb
ret
and
aam
lds
aam
jb
cmp
pop
insb
test
shlb
pop
int
lahf
dec
sub
cmp
cs
jno
push
sbb
enter
push
xchg
adc
fidivs
inc
cwtl
jmp
das
pop
push
adc
pop
jle
repz
bnd
jmp
xchg
daa
or
mov
inc
sub
or
sbb
sub
mov
mov
mov
fsubr
pop
add
aad
or
pop
aad
stos
cld
clc
add
xor
jb
lods
fisubl
ja
add
shl
decl
add
fwait
test
or
popf
test
cmp
sbb
cmpsl
add
mov
popa
mov
xor
dec
popa
lods
xor
mov
push
outsb
enter
gs
movsl
adc
add
add
xor
daa
mov
popa
test
pop
inc
mov
lods
popf
lea
sbb
aad
test
js
sub
push
stos
orl
push
push
add
or
jge
shrb
loope
inc
test
loop
leave
daa
dec
je
cmp
or
cmc
or
jg
lcall
jg
mov
test
test
lahf
mov
pop
addr16
lret
and
adc
or
shrl
ds
insl
push
or
test
je
dec
in
add
decl
inc
and
dec
ljmp
push
fisubl
out
mov
sbb
js
inc
lret
pop
popa
jbe
aad
into
pop
xchg
jp
adc
mov
pushf
sbb
xchg
hlt
jnp
add
neg
jle
ret
stc
pop
insb
pop
xor
imul
pop
jae
dec
cld
sub
adc
inc
hlt
jle
pop
insl
cld
and
cmpsb
mov
mov
push
shll
loop
pop
repz
loop
pop
sbb
xchg
xor
dec
cmp
sahf
cld
xorl
sahf
hlt
or
and
ret
lret
cld
loopne
add
int
sbb
mov
aam
inc
jb
cmp
push
movsl
xchg
xor
dec
cltd
aad
in
movsb
push
jmp
or
mov
fsubrl
jecxz
imul
jns
lea
or
dec
lret
adc
add
rorl
stos
stos
fwait
jg
mov
lahf
movl
testb
lds
pop
cmpsl
or
fmul
and
movsb
jo
std
ljmp
sub
jp
mov
sub
or
lret
xchg
into
jmp
or
dec
scas
and
testl
jno
push
in
dec
fisubrs
xchg
dec
aad
ret
orl
jle
inc
ljmp
mov
loope
call
jl
or
inc
mov
imul
sub
lods
in
andb
dec
enter
sub
mov
je
sbb
mov
xor
mov
enter
adc
jbe
repnz
shll
lods
mov
call
xor
pop
jp
add
mov
jle
hlt
pop
fdivl
iret
cmp
adc
xorb
adc
pause
mov
cmc
inc
push
sbb
loope
mov
inc
rcrb
bnd
cmc
or
xor
sub
push
fwait
sbb
arpl
sub
inc
dec
add
sub
negb
xchg
lahf
mov
jg
xor
orl
rcl
clc
mov
int
xchg
je
mov
or
xchg
jp
into
pusha
fisubrs
push
xchg
jp
ret
jae
cmp
xchg
jge
ret
out
xor
push
pop
fidivrl
pop
ds
movsl
scas
xor
mov
and
mov
jo
xchg
loopne
aam
xor
jbe
push
dec
jne
push
fsubp
insb
jl
sub
mov
outsb
imul
mov
in
sbb
add
push
or
inc
hlt
inc
in
mov
and
inc
pop
and
push
std
dec
jecxz
enter
std
aad
sub
mov
ret
xchg
xchg
jp
lret
lods
xchg
aam
popf
out
faddl
in
xor
arpl
mov
push
insb
call
outsl
test
mov
and
inc
mov
sbb
inc
mov
jl
push
xchg
hlt
ret
pop
sub
mov
add
mov
fisubl
sbb
dec
add
push
xorl
pop
das
loop
sbb
ret
lods
ret
or
mov
add
loopne
push
repnz
xor
mov
xor
pop
andb
lea
loopne
dec
das
jae
sub
mov
andb
xchg
push
pusha
xchg
jmp
sbb
mov
xchg
add
add
fbstp
icebp
test
repz
cltd
pop
sbb
fs
jmp
mov
fisubl
shll
xor
push
or
inc
movsl
mov
jae
mov
add
ret
or
test
mov
mov
and
ud1
ret
outsl
cmc
pop
aaa
stos
test
in
add
aam
mov
sahf
mov
push
jb
out
or
mov
test
test
mov
mov
push
nop
and
arpl
push
inc
mov
inc
sbb
shll
fs
cmc
xchg
and
std
pop
adc
mov
fst
inc
cltd
inc
fsts
test
sbbl
data16
mov
push
sahf
das
lock
es
push
dec
imul
test
bound
int
add
das
adc
ret
outsb
push
xchg
into
iret
mov
mov
xchg
ss
mov
test
adc
xchg
jmp
rcr
xchg
popf
dec
lea
mov
push
scas
dec
jo
sub
mulb
mov
fmul
lret
fs
mov
fistpll
in
mov
dec
add
repnz
pop
dec
and
mov
mov
adc
push
dec
mov
outsb
adc
adc
push
shlb
cmp
mov
push
xor
jae
adc
adc
in
xchg
xor
aam
pushf
icebp
lods
lahf
sbb
push
dec
xchg
cltd
jmp
lcall
imul
outsb
jne
mov
scas
inc
lret
pop
xor
or
in
sub
dec
and
movsb
cli
xchg
jle
mov
sub
inc
xchg
ljmp
inc
or
push
fcomps
cli
iret
call
test
xchg
push
cmp
mov
or
add
cmpsl
loope
xchg
roll
fcomps
sbb
out
sub
pop
push
repz
out
jbe
cwtl
scas
fs
adc
jbe
dec
js
mov
and
inc
xchg
mov
xchg
scas
ret
sbb
cmp
mov
sti
mov
xchg
xchg
push
lods
aas
out
sub
scas
nop
jp
pop
pop
out
inc
jno
bnd
xchg
and
into
je
add
sbb
dec
add
push
fnstsw
dec
dec
imul
ss
xchg
mov
jns
ja
mov
sub
setne
pop
jmp
das
fbld
xchg
cld
cmp
enter
pmulhuw
lret
add
jecxz
pop
stc
and
inc
or
in
and
das
dec
daa
lcall
fucomip
fisubl
lea
pop
cmp
sbb
sbb
gs
lock
and
sbb
xor
lcall
fwait
mov
ljmp
cmp
and
pushf
insb
sti
jecxz
loopne
sub
mov
push
xchg
jnp
xchg
push
jle
nop
sti
cmpsl
bound
sbb
mov
or
pop
jno
inc
shl
push
push
mov
lret
jae
subl
xor
or
jle
inc
imul
add
sbb
hlt
cmp
adc
mov
inc
and
fdivs
outsb
pushf
pop
in
roll
pusha
pop
lea
pop
mov
inc
or
sub
mov
pop
mov
into
xchg
lods
dec
fs
out
sahf
push
in
ss
pop
subl
sub
jo
idivb
ja
addr16
les
aaa
aam
push
sbb
cmpsl
push
jne
jae
lea
push
cmp
push
in
insl
xchg
cli
sub
mov
sub
fcompl
mov
call
scas
jp
fldl
test
mov
push
inc
xor
fcmovbe
mov
jmp
rorb
aam
sarb
mov
push
add
mov
in
orl
push
ss
test
push
mov
inc
mov
lcall
ficoms
lret
mov
and
xchg
iret
int3
int
jns
jecxz
enter
pop
pop
std
stos
dec
xchg
loop
pusha
dec
lea
insb
push
lds
xor
xchg
mov
jne
jbe
pop
cltd
mov
pop
repz
ja
mov
arpl
and
push
jno
fimuls
adc
mov
cli
sbb
mov
sbb
pop
xchg
add
pop
inc
jo
lea
pop
ds
mov
push
push
leave
out
les
mov
or
loope
sub
icebp
cltd
inc
and
sbb
dec
fadds
stc
rclb
xor
test
inc
icebp
es
mov
ret
xchg
insl
nop
xor
fcoml
ss
inc
imul
cmp
ret
mov
into
dec
icebp
jno
xlat
sub
ror
in
sahf
adc
clc
fstps
hlt
rol
dec
fisubrs
ss
sarb
dec
jge
push
xor
test
inc
sub
enter
adc
cli
fimuls
pop
in
fldl2t
pop
in
jae
fs
mov
add
xor
mov
add
pusha
mov
lret
fdivl
inc
push
adc
rcrb
push
adc
adc
or
and
sbb
push
scas
cmpb
and
test
movsl
inc
or
movsb
fstl
mov
inc
xchg
push
xlat
jnp
mov
adc
subb
ret
ljmp
and
cmp
jbe
stos
cli
fstpl
or
jbe
ret
mov
and
xchg
fnop
adc
add
xchg
imul
cmp
add
jnp
jae
xor
push
shlb
sub
sbb
sbb
pop
imul
sub
jns
jp
lock
sub
dec
push
mov
xchg
mov
xor
xchg
pusha
push
mov
lea
sti
sbb
cwtl
clc
adc
in
das
jl
insb
into
loopne
and
or
cmc
add
and
stos
clc
dec
leave
popf
jge
mov
jno
sub
ret
ret
nop
loope
ss
mov
xor
sub
scas
cmc
xchg
xorps
jno
scas
fisubrl
pop
imul
jne
addr16
sub
out
lea
fs
mov
shlb
loope
enter
iret
mov
inc
jmp
pop
adc
xor
lods
movsb
mov
mov
push
xor
jmp
dec
add
push
inc
cltd
mov
bound
insl
sbb
sbbl
xor
push
lock
xlat
mov
into
xor
lods
stc
sub
mov
repnz
pop
sub
popf
cwtl
cmp
std
incl
dec
fbld
xor
lret
imul
in
and
dec
jl
cmpsb
adc
sti
sub
gs
addr16
add
clc
mov
push
push
push
adcb
imul
sub
mov
sub
scas
add
inc
mov
mov
in
addr16
xchg
xchg
add
dec
cmp
iret
dec
mov
es
jno
mov
outsb
lret
inc
add
lcall
daa
push
cmp
scas
or
ja
sbb
jbe
pop
pop
sti
je
fstps
cmpsb
lock
mov
dec
js
sub
nop
sub
cwtl
fs
mov
xchg
pop
cmp
sarb
cli
dec
mov
jno
sub
xchg
in
xchg
inc
test
or
mov
or
cmp
add
push
stc
ljmp
add
repz
out
rclb
cmpb
xor
rorl
js
inc
je
or
jo
mov
hlt
sub
aad
dec
loop
push
xorl
test
addr16
mov
das
repz
inc
add
in
adc
inc
data16
xlat
shll
popf
dec
loop
das
fwait
pop
pusha
sub
xchg
aas
sbb
pop
movsb
adc
mov
mov
jl
mov
xchg
pop
dec
adc
icebp
xchg
pop
cltd
hlt
lcall
ja
ljmp
mov
scas
fs
xor
rcl
ja
xor
xchg
add
out
or
push
mov
jnp
or
shlb
jnp
adc
aas
xor
mov
movhps
xchg
ja
push
aas
cmpsb
sub
and
add
sub
mov
push
push
mov
or
fcmovne
pop
pop
insb
rorb
and
xchg
and
fldenv
repnz
inc
lret
pop
push
loope
lock
sbb
cmpsb
call
int3
cmp
sub
jp
mov
cmc
mov
dec
test
push
push
out
lea
add
negb
fcomps
addr16
fdivl
sti
and
push
aad
loopne
inc
adc
xor
insb
mov
rcrl
fisubrl
dec
int3
pop
cmp
mov
imul
jbe
adc
aaa
jl
push
divb
sarb
loope
jbe
fs
out
mov
cmp
jns
dec
nop
and
inc
rorb
jecxz
push
xchg
enter
mov
popf
mov
mov
arpl
loope
lods
xchg
and
xchg
pusha
add
cmp
mov
cmp
adc
push
rol
clc
mov
repz
adc
dec
push
push
add
add
fcoms
jae
mov
jle
out
cmpb
mov
out
add
outsb
test
iret
movb
in
xchg
pop
insb
aam
inc
repnz
je
mov
push
insb
xor
popf
pop
add
sbb
jl
sbbl
loope
mov
dec
loopne
test
inc
repnz
bound
xchg
xchg
std
xlat
popf
or
loop
in
leave
testl
or
iret
sbb
imull
or
sub
cmp
sub
cli
mov
sbbb
or
popa
fistps
inc
push
cmp
xchg
add
movl
and
jmp
out
ret
incl
jbe
add
cmpb
adc
fildl
mov
dec
aaa
lds
pop
cltd
out
je
dec
out
xor
mov
pop
pop
xor
movsb
inc
rcrb
xor
push
les
std
out
dec
stos
in
inc
jae
icebp
lahf
inc
push
mov
je
sbb
mov
cmpl
mov
daa
cmp
or
cwtl
outsb
jecxz
xchg
sbb
outsb
loope
clc
xor
push
and
add
cmpsb
mov
jge
mov
cmpsl
in
push
mov
jge
jl
sahf
push
stc
ds
iret
fldenv
nop
push
xchg
aad
insl
int
dec
pusha
sub
jmp
mov
sub
jmp
adc
in
enter
jbe
adc
pop
test
pop
pop
in
pusha
and
jo
movsb
mov
leave
pop
push
mov
xchg
and
or
mov
stos
out
fs
sub
outsl
mov
xorb
xchg
stos
ja
or
out
shrb
jbe
incb
or
clc
xchg
or
imul
js
inc
pushf
xor
fs
push
in
nop
sub
loope
adcb
inc
push
into
cmpsb
cmp
dec
mov
bnd
lods
test
idivb
jns
adc
movsl
scas
mov
xchg
jbe
cmc
lret
push
rsqrtps
jmp
sub
pop
popa
sbb
and
clc
sub
jle
cltd
imul
andb
push
cwtl
cli
xor
fstl
sbb
call
adc
fcmove
xlat
pushfw
aam
loopne
push
mov
push
out
sti
leave
sub
mov
movsb
dec
aam
sti
lods
idivl
xchg
pop
jnp
dec
out
lcall
add
push
push
add
subl
lods
xor
ljmp
push
jno
ffree
daa
sbb
cmp
cmp
jbe
lret
sti
cmc
sbb
inc
inc
mov
and
mov
jle
push
xlat
insl
add
pop
mov
mov
mov
pop
xorb
xchg
add
mov
pop
push
ret
sbb
push
aaa
aaa
std
sub
loop
out
pop
loopne
inc
xlat
lock
cld
clc
adc
adc
movsb
xchg
cld
and
clc
sub
sbb
std
pause
push
enter
mov
fs
mov
jnp
lahf
or
in
and
pop
insl
xchg
daa
ret
mov
xchg
sub
xor
add
fnstenv
movsl
ljmp
or
or
push
bnd
stos
lahf
jp
cmp
mov
mov
cmp
jg
enter
xchg
push
xorb
jo
mov
stos
inc
orb
mov
jns
mov
dec
inc
ret
xor
fnsave
jp
and
mov
xchg
mov
push
jno
jno
xchg
in
lock
out
xchg
mov
mov
add
scas
leave
stos
inc
scas
adc
dec
test
cmp
ret
jae
or
jmp
sub
jnp
cwtl
xchg
popa
add
sub
loope
mov
das
and
pop
aas
scas
cwtl
mov
lds
inc
mov
das
shll
or
jmp
jecxz
sbbb
dec
sub
inc
xor
and
jne
ss
imul
cmpb
pop
ds
dec
std
cwtl
adc
lds
fnstsw
mov
mov
sbb
cli
xchg
stc
sbb
add
cli
adc
xchg
or
xchg
cwtl
inc
call
jle
movsl
nop
or
mov
push
jnp
mov
sar
adc
push
mov
inc
xchg
leave
cwtl
xor
ss
sahf
lods
push
push
jle
lahf
mov
out
cli
inc
and
pop
hlt
inc
stos
mov
rcl
lret
push
xchg
scas
fstl
mov
fprem
clc
movsb
cmp
fs
roll
mov
mov
rcrl
adc
jl
inc
scas
dec
dec
or
adc
or
lds
pop
mov
lods
addr16
orl
test
sub
jge
sbb
cmp
ljmp
unpckhps
push
inc
fiaddl
stos
mov
mov
loop
imul
cmp
stc
mov
sbb
ja
jmp
div
arpl
jge
and
pop
and
cwtl
call
mov
pop
mov
cmp
jmp
jmp
inc
pop
ds
cmpsl
fnsave
into
push
leave
or
popa
jne
icebp
stos
mov
in
jb
pushf
mov
add
push
ljmp
cltd
rcrl
jl
out
popa
jb
or
hlt
add
pop
clc
sahf
iret
hlt
mov
pop
mov
mov
pop
jmp
ds
in
cmpsl
stos
sbb
arpl
mov
adc
jmp
arpl
and
or
loope
jbe
dec
aas
push
push
out
scas
insb
fwait
pop
shlb
sbb
call
shll
in
cmc
jecxz
push
xchg
lea
dec
rolb
push
xor
mov
out
aam
cmp
sub
mov
xchg
xor
aam
mov
mov
mov
sub
in
xchg
ret
mov
stos
inc
mov
mov
aas
loop
shlb
jbe
mov
fcomps
adc
adc
lcall
push
dec
pop
pop
fwait
in
fisttps
stc
mov
push
repnz
test
imul
jns
es
mov
leave
dec
pushf
fsubrl
inc
cwtl
xchg
xchg
push
mov
mov
lahf
pop
fs
movsb
push
pop
sbb
push
mov
lret
pop
sub
push
gs
lods
stos
and
shll
mov
shrl
adc
dec
insb
cld
repz
xor
mov
jecxz
mov
push
inc
loopne
jne
bound
mov
ljmp
js
pop
ret
push
pop
or
clc
shrb
or
mov
mov
xchg
hlt
sahf
mov
jae
shr
in
aas
cli
jbe
lods
stos
sahf
lds
and
cmp
leave
lods
mov
ss
or
fld
pop
repz
leave
and
push
jno,pn
jo
loopne
mov
and
aaa
test
adcl
cmpl
sbb
mov
aaa
pusha
filds
sti
push
ljmp
push
push
testl
cmpsb
cmp
sub
xor
xchg
loopew
nop
jne
icebp
add
jle
xlat
xor
xchg
leave
loopne
sahf
lret
imul
shrl
call
jecxz
jecxz
pop
insb
pop
pushf
js
pop
dec
lahf
xor
mov
mov
dec
repnz
or
xchg
scas
ja
andb
cs
jmp
push
jbe
imul
scas
sbbb
lcall
mov
cltd
insb
mov
jns
adc
das
mull
pop
dec
ja
jp
stos
sub
cld
popl
mov
xchg
out
rol
mov
push
cmp
ret
cmc
xor
fldt
rcrb
ficoml
mov
cmp
mov
imul
outsl
pushf
in
out
sub
push
cmpsl
lock
les
in
fwait
into
imul
inc
push
bound
sub
dec
dec
lret
xchg
or
arpl
cwtl
in
jecxz
mov
adc
arpl
popf
cld
or
mov
mov
data16
sbb
arpl
xchg
push
lret
cmp
dec
dec
mov
ljmp
mov
mov
push
jae
scas
pop
insl
push
rorb
or
fistpl
sub
hlt
into
mov
sbb
mov
jno
and
es
push
xor
jecxz
mov
jmp
add
out
dec
jno
jmp
xchg
ficoml
push
adc
jecxz
jb
ss
mov
lods
jp
out
test
cmp
sub
sbb
push
mov
adc
xor
cs
push
adc
dec
call
lret
mov
adc
cmp
fidivs
add
lds
incl
mov
cmpsl
ret
sub
mov
xchg
sbb
pop
lret
xor
scas
add
mov
dec
das
pop
pop
mul
sub
insl
scas
inc
hlt
cmp
push
lret
add
adc
lods
and
js
mov
cmp
inc
js
inc
jle
aam
adc
dec
xchg
fldenv
push
xchg
sbb
ljmp
adcl
mov
sub
push
xor
or
int
call
push
xor
stc
hlt
int3
sbb
sbb
in
shll
xor
sub
dec
inc
rorb
jp
adc
je
loope
jl
mov
mov
xor
pop
cmp
leave
xchg
xchg
sbb
outsl
or
jno
mov
outsb
scas
xchg
in
inc
lock
mov
movsl
and
mov
iret
sbb
xchg
outsl
xorl
xchg
push
lds
ljmp
ja
jne
jge
lods
lahf
pop
jecxz
clc
inc
sti
jns
out
in
popa
out
and
aas
mov
pop
int3
and
or
xchg
popf
push
rorb
jno
jbe
xor
clc
bound
test
dec
or
adc
and
mov
jge
cli
popa
pushf
xor
bts
mov
call
hlt
cmp
loope
out
arpl
inc
outsb
sub
scas
jb
adc
outsl
movsl
jecxz
or
add
loope
adc
popa
adc
sti
jle
sub
add
push
scas
insb
cmpb
sti
int
jmp
rcll
dec
fs
mov
mov
rolb
call
push
or
loop
in
pop
pop
sbb
push
push
je
jne
out
pop
sbb
add
jae
icebp
lea
scas
js
pop
push
inc
imul
aad
sbbl
push
jl
mov
cmpb
inc
dec
hlt
enter
sti
sub
push
pusha
pushf
rorl
dec
insb
xchg
push
je
or
sbb
pop
mov
add
xchg
lock
in
adc
mov
cs
adc
daa
fnstsw
mov
gs
pop
push
xchg
xchg
dec
nop
mov
push
adc
xor
ret
push
cmp
mov
sub
xchg
stos
outsl
scas
popf
orl
ja
mov
rcrb
addl
test
pop
xor
inc
or
lods
insb
sbb
adc
sbb
cmp
js
in
cmp
sub
mov
js
repz
aam
movsb
out
jle
pop
add
or
xchg
jnp
add
lahf
fadd
pop
cmc
mov
push
cmp
mov
push
loopne
jecxz
ljmp
sahf
out
lea
lahf
pop
adc
je
pop
push
jecxz
sarl
in
cmp
test
jg
fiadds
mov
shlb
pusha
adc
lds
mov
test
out
adc
xchg
rcrl
inc
xchg
test
call
inc
pusha
push
inc
inc
push
jnp
out
adc
xlat
cs
btr
dec
add
cltd
inc
cmpsb
and
mov
pop
push
and
or
sub
popa
jo
leave
mov
jmp
mov
adc
aas
std
scas
pop
lods
xor
shll
adc
shll
jge
xchg
xchg
xor
lahf
and
xchg
add
mov
xlat
jb
sub
lahf
jo
cmp
or
pop
bound
mov
mov
pop
jmp
xchg
or
in
ja
sbb
in
gs
cli
cmpsl
sar
enter
js
mov
mov
inc
jp
sti
daa
data16
shrl
xchg
push
loop
sub
mov
and
outsl
imul
jl
sbb
add
jge
push
lods
jg
cmp
pop
and
lcall
fimull
dec
jge
and
in
fs
ret
xor
and
xchg
fnstsw
lds
out
call
xchg
mov
in
stc
cmp
mov
mov
loop
push
aaa
daa
les
inc
maskmovq
notl
and
mov
xor
xor
dec
jnp
push
lds
lock
in
mov
xor
xorl
daa
outsb
rorb
jno
xlat
add
push
xchg
pop
ja
sbb
clc
add
scas
lret
push
jp
lock
insl
push
mov
scas
cmp
sub
and
popa
into
pushf
mov
fisubs
rorl
sarl
out
ja
pop
loope
movb
push
fdivr
dec
loope
into
outsb
inc
inc
inc
mov
sub
or
push
aaa
fcoml
xlat
into
inc
dec
imul
mov
enter
jae
mov
or
mov
mov
ret
adc
test
push
or
xor
push
shlb
daa
ss
outsb
mov
cmc
pop
mov
xchg
lods
jl
jp
or
jns
fnstcw
in
inc
or
mov
mov
mov
push
data16
cmp
out
pop
nop
aaa
in
cmp
out
push
iret
cmp
mov
movsl
into
and
mov
mov
push
das
and
insl
mov
push
ds
pusha
test
pop
xlat
clc
sub
and
pop
xchg
subb
xor
pop
xchg
and
jge
int3
adc
and
mov
int
mov
cmp
ret
icebp
popf
mov
push
fidivrl
ss
fisttps
inc
pop
cmp
rolb
movsb
inc
aas
fcompl
fcoms
cwtl
push
test
sbb
into
fildll
lds
mov
cmc
ficomps
shlb
xor
mov
add
pop
dec
bound
data16
dec
mov
in
jg
fiaddl
int
aad
es
and
add
sbb
jns
push
jbe
dec
test
adcb
sub
out
sub
js
in
fidivrl
js
add
ljmp
pop
shrb
xchg
push
mov
add
call
xchg
push
mov
incl
or
or
movsl
push
mov
pop
add
mov
pop
xlat
aas
pop
test
jnp
mov
mov
add
cwtl
imul
shll
popa
lods
std
pop
stos
push
xchg
push
mov
call
sbb
mov
enter
jbe
inc
aam
add
shl
bndstx
lret
pushf
inc
xchg
push
out
rclb
xlat
inc
sub
mov
xor
rcr
aas
sbb
mov
mov
bound
mov
inc
lret
pushf
decl
push
sbb
jne
sub
jp
das
inc
call
cmc
in
frstor
mov
sbb
sar
nop
pop
movsb
out
shrl
mov
mov
xchg
hlt
pop
jecxz
out
jmp
dec
ss
and
mov
inc
fwait
movsl
jb
iret
pusha
insl
mov
adc
fdivl
or
jbe
adc
add
cmc
call
or
cld
mov
test
fsubl
mov
sbb
fbld
xchg
pusha
rorl
inc
pusha
jae
test
jmp
adc
jbe
jle,pn
mov
and
lods
out
pop
cmpsl
mov
mov
pop
push
mov
pop
push
push
jo
test
sub
leave
pop
out
and
sub
leave
mov
inc
gs
lods
js
cmp
cltd
mov
pop
mov
sub
dec
fsubl
aas
addb
pop
fadds
inc
push
and
call
sub
xchg
popa
test
int
sub
mov
xlat
cltd
jnp
fdivrs
mov
clc
nop
inc
movsl
fistpl
inc
push
sahf
sbb
mov
into
lahf
idivl
xchg
aas
sbb
jo
ret
icebp
loop
mov
add
mov
xchg
dec
popf
cmp
push
cld
xorl
add
ret
ss
push
out
cli
sahf
adc
aad
in
into
or
inc
push
call
lock
test
mov
or
imull
mov
and
or
jle
adc
insl
jge
sub
xor
out
scas
in
into
inc
lea
daa
cmp
inc
jmp
jno
adc
pop
adc
imul
mov
dec
cmp
add
and
scas
mov
push
daa
ret
push
pop
popa
sbb
xor
mov
je
out
lret
iret
or
pop
mov
in
and
fnstsw
xchg
cmp
adc
jo
pusha
sbbb
add
push
mov
jbe
das
pop
sbb
out
aad
cmp
std
xlat
test
sbb
sarb
cmp
pop
xchg
push
push
sub
push
arpl
and
jecxz
cmp
adc
mov
fmuls
sbb
stos
mov
jb
out
and
xor
sbb
inc
mov
ret
inc
push
in
cmp
dec
stos
es
sbb
xlat
cmpsb
mov
shl
push
jge
xor
mov
out
mov
dec
in
in
rorb
lods
cwtl
sbb
push
repnz
pop
ds
cmp
insb
adcb
imul
bound
jo
arpl
sbb
push
mov
mov
sbb
sbb
lea
insb
push
in
ljmp
xor
scas
add
mov
cmc
cs
inc
dec
push
ds
cmp
sbb
add
dec
out
mov
cmp
cmpb
mov
jmp
or
pop
pop
sbb
leave
cmc
mov
clc
sbb
mov
insl
sub
xor
lcall
jns
xchg
fbld
in
rcrl
lds
loopne
out
js
adc
mov
and
pop
mov
push
or
or
pushf
mov
push
cmp
inc
fiaddl
jae
mov
sub
and
arpl
fstps
cmp
pop
or
xchg
fs
hlt
adcl
das
lea
jle
loopne
dec
adc
fisubs
adc
ss
mov
popf
xchg
into
mov
mov
cmpsb
xor
fs
and
push
loopne
enter
mov
push
out
lds
ss
sub
das
sub
dec
test
push
mov
jecxz
orb
mov
xor
pop
jnp
sub
xor
add
inc
and
fnsave
xchg
fidivs
xor
xchg
mov
sbb
test
mov
push
arpl
pushf
imul
mov
scas
or
pusha
enter
fcmovu
xchg
jg
add
pop
lea
cmp
aaa
sahf
jg
ljmp
pop
cmp
push
mov
or
jb
mov
addr16
mov
push
call
cltd
cmp
lods
fidivrl
pop
cli
xchg
in
and
pop
flds
inc
jg
in
repnz
addr16
fsubl
mov
xchg
jb
sbb
arpl
ja
jo
fadd
sbb
mov
mov
ss
jae
push
fsubs
mov
adc
mov
jb
xchg
je
cwtl
dec
mov
test
aam
imul
or
inc
outsl
cltd
roll
cltd
dec
cmp
xchg
daa
jg
mov
das
cmp
outsb
mulb
jne
jno
ficoms
testb
jl
mov
ss
scas
test
lods
xor
push
xor
cmp
xchg
lcall
out
mov
jg
idiv
repnz
out
sbb
and
icebp
in
lret
jbe
xchg
push
add
push
roll
dec
dec
lcall
scas
into
mov
push
cmp
jmp
cmp
mov
xor
stos
cli
xlat
push
sub
sti
dec
sub
lret
cld
add
aas
mov
in
fisubrl
and
and
cltd
xchg
xor
addr16
dec
inc
adc
cltd
xchg
call
test
inc
jg
ffreep
adcb
pop
lods
adcb
and
and
add
mov
imul
dec
movsl
xchg
pop
dec
xchg
fs
adc
pop
ds
arpl
loope
loopne
aaa
popf
int
cmp
sub
pop
cmp
xor
test
mov
sbb
stc
push
lret
jp
loope
adc
arpl
sbb
xor
iret
mov
mov
int3
xor
in
stos
stos
testl
arpl
push
pushf
xchg
out
imul
push
arpl
xchg
xchg
in
mov
push
jmp
int
push
cli
pop
jne
xor
jmp
mov
cld
fistps
aam
mov
negb
push
inc
add
jge
dec
data16
shl
add
xchg
movsb
ret
xchg
sub
lock
push
aas
cli
popa
test
daa
nop
or
loope
stc
or
pop
iret
ss
bound
andb
mov
lahf
repnz
repnz
or
int3
sub
pop
cmp
outsb
fsubrl
jle
js
pop
jbe
push
add
bound
test
movsl
lock
cli
cmc
mov
mov
jbe
mov
fisubrl
xchg
imul
insl
and
movsl
and
into
or
inc
pop
stos
popf
adc
ret
jae
hlt
aad
mov
adc
pop
mov
xor
fwait
xchg
cmp
jb
mov
iret
sbb
pusha
or
sub
decl
daa
mov
xor
xchg
jo
mov
pop
in
cltd
es
jp
js
adc
dec
test
inc
aas
xchg
daa
cmp
dec
dec
pop
pop
jae
jae
dec
sub
pop
add
sub
popf
mov
push
push
cmp
daa
jae
push
pop
dec
cmp
mov
dec
je
call
mov
ja
cli
mov
add
cli
lret
inc
clc
sbb
and
enter
or
jle
pop
cmp
sbb
rorb
hlt
repz
push
dec
jnp
dec
inc
pop
and
jg
sub
lret
mov
fnstsw
cs
in
frstor
mov
adc
outsb
or
nop
lds
pop
and
xor
cmpsb
xor
fs
adc
mov
mov
dec
push
add
and
add
push
int3
jnp
fs
in
adc
and
daa
and
jp
ss
fimull
sub
cli
pop
aad
pop
cli
lret
dec
pop
aaa
les
and
jnp
rorl
dec
inc
xlat
stc
push
jg
test
outsl
sub
mov
xor
lods
cmpb
das
in
cmp
jle
das
mov
jp
push
lcall
xchg
mov
lods
call
lds
mov
sbb
mov
pop
xchg
loopne
pusha
fcmovbe
insb
fwait
mov
aas
lods
mull
or
cli
ret
jo
movsl
mov
jns
in
test
test
jmp
ret
fists
lea
inc
or
lahf
mov
cld
ds
js
mov
pop
push
fldl2e
aad
sbb
in
sbbl
push
rol
test
outsl
xchg
movsl
push
ss
repz
push
mov
add
ret
out
movsb
mov
mov
outsb
adc
nop
ds
adc
jg
pop
pushf
aad
fucomi
repnz
xor
cmp
ss
mov
out
aas
adc
and
test
pop
addr16
jle
dec
cmp
inc
sti
int
jl
and
jbe
inc
idivl
daa
xor
shll
fstl
mov
jp
es
mov
sub
push
push
aaa
sarb
in
push
jp
jns
push
icebp
xchg
scas
outsb
inc
shll
out
cmp
mov
lret
add
xor
sub
xchg
xchg
ret
aas
out
add
iret
ds
push
push
call
and
cli
int3
or
scas
adc
in
nop
cmc
mov
repz
cmp
outsl
mov
xorw
cltd
xor
loop
je
dec
clc
inc
add
aam
adc
sbb
add
cli
mov
shrl
scas
js
jg
mov
inc
cmp
jl
sahf
mov
sub
lock
xchg
aas
fdivr
xchg
push
add
xchg
jmp
pop
inc
lahf
outsb
pushf
pop
or
mov
lret
cld
inc
inc
loope
cmp
icebp
jmp
push
push
add
or
inc
into
stos
or
cld
fwait
push
pop
push
pusha
sbb
adcl
and
mov
js
push
icebp
mov
jle
inc
sar
pop
mov
psubusw
push
mov
xor
in
rolb
and
ret
fcom
pusha
aam
mov
jp
gs
stos
mov
mov
inc
xchg
fmull
jp
mov
scas
xor
pop
push
or
test
cmp
jp
pop
out
mulb
pop
inc
dec
stos
test
xchg
pusha
mov
jo
mov
out
xor
sub
xor
movsb
in
clc
mov
rclb
stc
cmp
mov
test
push
mov
sub
fadd
andb
inc
test
enter
mov
mov
cmp
cmp
hlt
add
popa
add
out
sbb
cvtps2pi
dec
mov
and
or
mov
mov
cmp
inc
jmp
dec
cmp
adc
pop
cmp
out
jne
ret
mov
std
cmp
mov
insb
pop
jnp
das
js
jbe
ret
bound
jge
cmp
sahf
adc
xor
sub
pop
std
jb
and
pop
xor
push
aam
push
dec
pop
out
int3
sub
scas
out
inc
fistpll
pop
xchg
in
mov
pop
push
test
xchg
aas
adc
mov
mov
pop
hlt
sahf
fldt
jns
sbb
movsb
inc
fsubrs
dec
jbe
out
test
es
ret
fldcw
jae
call
sbb
add
sub
or
repnz
out
inc
and
inc
ja
stos
test
jge
jo
fidivl
jp
pop
lods
int
or
mov
push
or
sbb
jecxz
mov
std
scas
loop
imul
rorl
call
aaa
out
negb
mov
push
pop
in
stc
ds
shrb
or
adc
mov
pop
sub
pop
pop
js
xor
pop
daa
inc
dec
lods
or
movsb
mov
xor
push
cmp
clc
in
cld
aam
and
adc
mov
push
xchg
xlat
mov
sbb
rcrl
and
into
xlat
mov
xchg
mov
fistps
dec
roll
and
jp
in
mov
stos
mov
leave
cmpsb
daa
loopne
aas
xchg
outsb
add
pushf
sub
push
push
dec
xchg
mov
aas
fcompl
cltd
mov
lahf
pop
cmp
jp
xor
and
mov
push
aas
movsb
jl
adc
xchg
fs
lds
xor
out
outsl
icebp
ds
ss
das
stos
cmpb
mov
pop
mov
push
pushl
inc
adc
addb
addr16
push
repz
idivl
dec
fnsave
mov
add
mov
push
mov
xchg
sti
jg
sbb
movsb
mov
sub
hlt
outsb
or
std
sub
mov
or
mov
roll
jmp
dec
adc
jne
inc
sbb
in
dec
xchg
xchg
lds
add
add
lret
sti
or
fbld
sbb
es
mov
push
fdiv
outsl
jae
fimuls
mov
xchg
outsb
das
and
es
mov
xor
fcomps
aas
or
inc
dec
mov
imul
push
ljmp
jb
push
jo
dec
xchg
sbb
mov
sbbl
int
add
fisubl
xlat
pushf
jp
iret
test
stc
cmp
sub
cmp
in
sub
test
es
inc
sbb
inc
cmp
bound
xlat
mov
ljmp
in
js
xchg
les
pop
loop
pop
dec
loope
xorb
inc
xor
pop
daa
push
jo
jno
das
aad
scas
jno
sub
cld
xchg
test
roll
sbb
mov
in
cmp
pop
inc
pop
aad
dec
sbb
ss
scas
call
add
push
mov
mov
movl
jmp
mov
rep
mov
loopne
mov
mov
frndint
xchg
testb
jne
and
sub
pop
mov
insb
rcrl
fldl
or
jg
add
iret
fsubl
sbb
movl
fistpll
push
sub
lock
mov
pop
sbb
popa
inc
in
insl
xor
push
fdivr
pop
adc
mov
dec
pop
in
inc
stos
mov
push
inc
mov
fs
arpl
push
mov
jb
add
lock
cmpl
addl
dec
jge
sti
repz
addr16
popf
sbb
cmp
mov
ljmp
mov
arpl
fsubrl
dec
dec
xor
sar
fldl
mov
lock
pop
add
sub
or
xor
add
cmp
xor
mov
fsubs
or
iret
out
aad
in
add
push
out
sub
jns
stos
loope
dec
and
dec
in
mov
arpl
inc
mov
sub
add
mov
dec
std
jbe
and
and
push
iret
mov
pop
hlt
lds
rcll
mov
jg
inc
adc
gs
mov
stos
stos
mov
daa
mov
arpl
pop
push
cwtl
cld
movsl
dec
aam
fcompp
nop
add
enter
cwtl
xor
out
loop
in
imul
fbld
mov
mov
daa
das
pop
add
adc
clc
aad
and
adc
mov
jnp
and
sub
lcall
mov
scas
xchg
inc
mov
std
xor
push
fsubp
mov
mov
repz
sub
arpl
dec
adc
aad
cs
mov
jle
dec
pop
mov
out
fwait
push
sbb
cmp
mov
fisttps
cmp
cmc
pop
scas
pusha
sbb
jp
mov
lret
adc
jl
xchg
rorb
mov
fstl
int
mov
aaa
dec
inc
inc
into
ljmp
dec
push
push
adc
mov
xorl
daa
loopne
fcomi
jb
or
out
xchg
add
pop
ret
or
mov
sbb
push
pusha
inc
push
cmpl
ror
lds
outsb
pop
test
xor
xchg
hlt
test
push
ficoms
pusha
push
mov
dec
or
sbb
fnstenv
fdivl
xchg
test
sbb
mov
mov
aas
imul
pop
fcmovu
xchg
inc
sbb
ljmp
jp
imull
test
mov
repnz
pop
dec
movsl
mov
push
cmp
and
shlb
push
sti
test
mov
pop
lods
push
imul
imul
jae
cwtl
adc
mov
andb
dec
cvttps2pi
leave
jno
mov
xor
inc
push
inc
dec
sub
push
daa
jg
cmp
mov
jle
adc
and
arpl
sbb
pop
xor
inc
dec
mov
inc
jnp
hlt
jp
repz
pop
or
dec
sub
push
adc
add
mov
push
lcall
add
and
sbbl
mov
hlt
pop
jne
ja
fs
outsb
pushf
add
push
outsb
jnp
inc
cmp
lods
stc
sahf
je
lds
aaa
ds
or
dec
and
inc
or
data16
push
xchg
dec
js
icebp
push
xchg
xchg
dec
and
sub
adc
gs
mov
jle
test
imull
adc
xchg
cmc
jmp
stos
jne
imul
loop
rcll
int
push
push
xor
call
dec
pop
dec
xchg
and
sbb
shlb
push
and
test
adc
test
xchg
mov
dec
adc
lods
test
out
mov
mov
dec
out
jns
test
mov
mov
xor
lds
popa
or
lds
fnstenv
adc
lods
js
jo
inc
xchg
mov
mov
test
add
lret
hlt
sarb
pop
negb
dec
push
js
push
jb
aaa
bnd
stc
call
in
cmpsl
lea
inc
pop
mov
cmpl
push
not
mov
fmuls
stos
movsb
and
push
pop
inc
mov
push
or
rorb
in
push
lahf
xor
dec
pcmpeqd
loope
gs
in
shlb
jp
xor
pushf
cltd
fdivl
aas
outsl
push
jnp
sarl
out
adc
mov
adc
dec
lcall
scas
xor
scas
pop
bound
stos
adc
cltd
sbbb
pop
jb
jmp
sti
aas
jbe
push
imul
push
xchg
cmpsl
push
mov
cmp
pop
mov
mov
bound
push
xchg
jne
sub
mov
push
cmc
or
mov
aas
scas
rolb
mov
mov
jnp
enter
mov
popl
and
dec
pop
mov
sub
sbb
cmp
ret
mov
addb
cs
rcrb
mov
mov
or
test
iret
movsl
fs
xorl
bound
stc
pusha
add
mov
or
test
adc
test
popa
into
repz
sysexit
push
popa
mov
lahf
push
cmp
aaa
pop
mov
cmp
fwait
mov
notb
push
inc
arpl
and
clc
push
mov
pop
ret
push
jnp
mov
imul
mov
jb
sbb
repnz
add
sub
pusha
sbb
pop
xchg
pop
ret
jns
jne
jbe
mov
repnz
and
pushf
pop
fsts
sub
or
fmul
cmp
xchg
jg
xchg
iret
pop
das
das
push
cld
push
fisubl
into
clc
fisttps
pushf
or
xlat
mov
call
sbb
jo
cmp
loop
cmpb
mov
or
stos
xlat
std
sub
adc
cli
inc
cmpsb
push
xchg
pop
cs
fldt
insl
pop
dec
sub
outsl
daa
addr16
dec
das
dec
in
fwait
les
rcll
dec
mov
out
xlat
stc
lea
out
sub
xor
push
xchg
mov
jo
out
lods
gs
sbb
dec
insb
push
mov
pop
int3
mov
add
add
filds
cld
sub
iret
cmpb
inc
call
push
mov
sbb
fisttpll
pushf
sub
imul
enter
mov
outsl
cmp
leave
lret
jne
arpl
mov
mov
lcall
fidivl
addr16
mov
cmpsl
inc
insl
and
or
shll
sub
mov
negl
add
cmp
popa
or
pop
mov
sbb
xor
decl
or
xor
aas
dec
jmp
stos
sub
mov
pushf
push
mov
sbb
sbb
mov
pop
mov
xlat
fadds
hlt
dec
imul
sbb
or
fsubr
dec
xor
test
inc
sbb
cmc
pop
push
pop
push
int
insb
imul
data16
jae
pusha
push
scas
fs
mov
or
mov
push
andb
int3
mov
add
push
mov
mov
insl
andl
push
mov
jo
test
xchg
xor
fcomps
lret
push
pop
push
in
fs
popa
sbb
xor
loop
push
xor
sbbb
mov
inc
sub
or
dec
das
xor
fcmovnbe
dec
adc
push
or
pop
lds
dec
cltd
inc
jb
sub
inc
push
subl
jmp
or
pop
sbb
loop
add
jl
dec
ss
jno
test
add
enter
rcl
adc
and
pop
aas
out
sti
leave
cmpsb
jb
fdivrl
mov
jno
nop
cmp
sub
pusha
jg
jecxz
mov
sbb
ss
push
movsb
mov
aaa
stc
lods
push
push
and
and
or
outsl
adc
gs
pusha
movsl
cmp
cmpsl
or
scas
mov
pop
jmp
enter
daa
mov
xchg
negb
sub
xor
in
jp
pushf
sbb
jecxz
or
push
xchg
clc
out
sahf
filds
push
cmp
jo
ret
popw
add
loope
mov
xchg
add
sub
xlat
cli
pop
inc
jmp
sahf
dec
inc
xor
movb
adc
fwait
andb
pop
ljmp
pop
and
pop
loopne
in
aad
mov
adc
push
test
xor
and
xchg
loop
cmpsb
js
dec
push
cmp
arpl
dec
push
cmp
lret
cmpsb
sbb
fstpl
cmp
mov
aam
mov
sti
push
mov
sbb
push
fildl
mov
jge
inc
jb
stos
xor
loope,pn
cmc
add
jb
scas
xor
jg
ret
dec
pop
adc
jnp
sub
xor
pop
scas
sub
cmp
sbb
adc
fisubs
repnz
fiadds
jge
and
push
lea
push
repnz
aad
cwtl
pop
es
jmp
xlat
lock
lods
out
push
movsb
xor
shl
xchg
loopne
mov
test
inc
mov
xchg
mov
inc
leave
mov
imull
sar
inc
push
cmp
repz
outsl
sub
or
jg
jmp
add
xchg
dec
add
pop
icebp
mov
enter
adc
dec
jl
xchg
in
aaa
addl
jo
push
mov
adc
in
pop
cwtl
scas
pop
enter
lods
sbb
cltd
movsb
adc
scas
mov
fs
loop
ss
fdivl
stos
push
adc
pop
fiaddl
fs
jo
stc
out
nop
scas
pop
fldenv
stos
mov
js
call
push
sub
lods
xor
movsb
and
cmpsl
ret
pop
jo
sub
inc
in
push
sti
pop
mov
fisttps
mov
lods
bound
push
jmp
divl
or
test
aas
dec
or
cmpsb
xchg
out
cmpsb
rep
in
das
test
push
mov
or
cmp
pop
add
pop
xchg
into
ret
dec
andl
push
out
and
ffree
iret
je
fcomps
roll
mov
and
sahf
xor
jne
pop
xorl
and
inc
out
mov
adc
into
lcall
jns
mov
mov
popa
mov
fiaddl
aam
out
sbb
push
inc
subb
dec
pushf
hlt
lock
outsb
adc
jbe
push
jne
xor
dec
cltd
push
popa
sbb
push
jno
sbb
mov
adc
jno
push
movsl
ficoml
out
test
mov
cmp
bound
pushf
mov
xor
pop
add
jae
enter
es
jmp
imul
and
mov
ds
mov
addr16
jl
dec
mov
dec
lcall
adc
mov
sbb
mov
pop
lds
push
rclb
mov
call
xchg
das
mov
adcl
cmp
in
sar
adc
xchg
std
sarl
out
inc
lcall
push
lds
sub
adc
in
aam
cmp
xchg
mov
push
es
inc
ds
ret
or
lcall
repz
mov
jge
adc
mov
inc
repnz
pusha
pop
pop
cltd
scas
xor
push
lahf
cmpsl
mov
cli
orl
cmpsl
and
imul
or
imul
mov
mov
push
out
pop
scas
sete
mov
dec
mov
jae
rcl
jl
gs
sbb
mov
pop
sti
adc
cmpsb
jp
sbb
mov
test
push
sub
in
xor
push
gs
pop
sub
xor
lock
imul
jp
push
pusha
imul
ret
pop
xchg
inc
arpl
arpl
jo
pop
in
scas
pop
inc
mov
jne
test
add
jmp
push
xchg
jno
aas
rcrb
leave
xchg
test
imul
out
xchg
les
inc
sub
push
dec
popf
inc
push
mull
imul
jbe
movsb
and
xor
xor
jg
mov
fiadds
into
inc
fcoms
inc
aas
pop
mov
mov
shr
pop
popf
int
in
call
mov
inc
jae
bound
xor
pop
jmp
fwait
sub
jmp
mov
imull
popa
rcl
jmp
sbb
repnz
fldcw
jns
push
dec
and
scas
cmp
outsb
lods
push
cmp
in
mov
not
add
ja
lret
daa
mov
test
shl
cmp
ljmp
ficompl
adc
xor
or
fildl
test
mov
xchg
dec
test
int
mov
aas
scas
mov
and
xlat
pushf
adc
xor
fs
mov
cmp
lock
test
movsb
fisttpll
jne
cmc
sbb
stc
sti
movsb
lock
cmp
scas
scas
vpcmpeqw
mov
addb
repnz
xchg
imul
into
aaa
mov
in
pop
popa
addr16
aaa
test
add
cs
mov
adc
pushf
push
sbb
push
sub
lret
ljmp
ljmp
adc
push
jle
push
outsb
mov
lock
pop
xchg
sahf
pop
mov
adc
xor
shrb
test
hlt
inc
dec
mov
dec
or
loopne
cmpsl
popl
sub
fucompp
pop
popa
push
mov
stos
les
adc
cltd
xchg
inc
xor
add
stos
jmp
inc
lods
jle
xchg
sbb
fnstcw
into
mov
mov
sbb
popa
xchg
cmp
imul
cmpsl
xchg
js
mov
mov
push
inc
push
sbb
lret
pushf
push
xor
mov
sbbl
shrl
fdivr
xor
inc
inc
and
jmp
inc
nop
mov
lods
or
jnp
mov
sahf
lods
sub
mov
sbb
mov
jne
push
add
add
loop
das
sarl
imul
in
out
xor
aas
adc
mulb
int
scas
cmpl
mov
stos
popf
cmp
mov
int
out
push
and
push
jmp
inc
cmp
repz
fsubs
dec
push
out
sub
outsb
cwtl
in
insl
cli
adcl
mov
pushf
jge
jmp
lret
jecxz
push
rcrl
jl
sbb
push
mov
into
fisttpll
adc
int3
lods
fsts
xchg
aam
insl
lods
lods
pop
rorb
add
daa
lret
sti
pushf
repz
mov
ret
pusha
fwait
repnz
sub
lods
add
mov
jp
jmp
popf
js
call
mov
inc
dec
je
pop
les
cmp
adcl
pop
cmp
mov
shll
sahf
cmp
lods
pop
js
fidivl
imul
push
scas
mov
ss
dec
mov
imul
stc
mov
fidivrl
mov
xchg
pop
fld
xchg
icebp
xchg
std
dec
push
insb
andb
jl
jg
mov
sub
mov
and
jno
dec
fs
arpl
fsubs
dec
lock
adc
int3
push
arpl
fwait
out
insb
dec
add
ljmp
xchg
push
and
das
jmp
icebp
push
repnz
add
movd
sahf
arpl
xchg
test
inc
orl
lcall
add
cli
ret
sbb
push
out
fmull
or
addr16
ficoms
or
and
xchg
xlat
pop
adc
push
push
cmp
and
lahf
iret
ror
aas
mov
cmp
xor
mov
inc
fwait
and
or
cmp
shrl
mov
popf
iret
out
mov
xchg
dec
mov
add
sti
jo
inc
pop
adc
jno
sti
insl
test
mov
adc
call
mov
cwtl
dec
js
notb
cmp
dec
lds
lea
in
add
adcl
fildll
and
sbb
mov
push
mov
sahf
jno
cmpl
or
dec
mov
addr16
test
inc
xor
pop
stos
popf
scas
in
sbb
mov
pop
dec
xor
scas
cwtl
cmpsl
rsm
cwtl
aas
sti
xchg
xor
xor
pop
les
jae
or
in
stos
xor
lret
mov
and
in
lret
add
insb
imulb
sbb
lcall
push
inc
dec
or
icebp
sub
ret
int3
lea
inc
xor
inc
jae
ljmp
and
test
cmp
sahf
lcall
nop
xorb
mov
sub
sbb
inc
out
cmpsl
xor
sahf
lret
scas
dec
jno
stos
call
movsb
push
fstps
sbb
mov
pop
loopne
lea
sbb
cmp
dec
ja
xchg
icebp
cmp
push
or
adc
iret
xor
add
sub
sbb
cmp
aaa
cmpsb
jmp
repz
mov
jle
xlat
pop
xlat
mov
pop
arpl
xor
ret
fs
push
mov
notl
dec
push
insb
lods
loopne
stc
cld
xor
inc
in
repz
inc
or
loop
dec
pusha
pushf
aam
add
mov
cmp
push
mov
push
scas
and
mov
mov
fists
dec
mov
icebp
testb
movb
push
xor
adc
cmp
inc
push
pushf
adc
insb
stos
jge
fs
jno
mov
enter
add
stos
lret
xchg
and
jmp
pop
scas
mov
int3
and
ljmp
or
lahf
mov
lahf
ud0
nop
inc
push
je
mov
mov
push
lds
out
xchg
xlat
mov
leave
pop
rolb
sbb
dec
mov
loop
or
shll
out
sbb
cmp
sbb
and
sarl
out
test
and
gs
inc
scas
fwait
pop
ja
es
repnz
test
fs
xor
mov
fnstsw
mov
pusha
push
inc
and
cmp
xlat
rcrb
insb
push
in
cltd
dec
ficomps
push
xor
sub
lods
mov
cmp
jmp
out
das
adc
in
in
out
das
fs
sub
shr
jae
lods
cmpsl
cmc
xor
xlat
mov
movsl
dec
or
adc
mov
fiaddl
sub
xchg
sbb
cmp
mov
xchg
inc
addb
es
push
mov
clc
jl
mov
dec
mov
lods
or
cld
out
je
mov
je
decl
xchg
lahf
or
ret
testb
in
jg
jl
xchg
mov
scas
cmp
rcll
rcll
test
dec
ret
ffreep
dec
xor
xor
mov
test
and
aad
push
xchg
sti
movsb
inc
or
sub
sbb
xor
je
jae
stos
ljmp
gs
jnp
jno
addr16
cmp
movsb
mov
gs
ljmp
enter
pop
lcall
movsl
rcrl
xor
add
or
sbb
xor
push
xchg
xchg
notl
aad
mov
adc
add
out
fldcw
data16
clc
mov
xlat
lods
pop
into
sbb
jb
out
or
mov
and
and
add
sbb
mov
pop
jge
pop
repz
dec
test
sbb
push
rorl
dec
test
add
inc
mov
xchg
std
loope
enter
out
addr16
jnp
cmp
sahf
cwtl
aam
inc
dec
shlb
jmp
rorb
stos
xchg
addr16
mul
test
sub
and
out
and
sbb
test
mov
ds
jns
push
jne
out
sarl
jbe
or
stos
arpl
pop
ja
das
nop
inc
ficompl
pop
sub
ret
xor
shr
fdivp
btr
adc
inc
cwtl
outsl
push
rorl
nop
sub
xchg
shll
xchg
cmp
jnp
or
fs
dec
xchg
lods
lds
enter
jne
jmp
mov
ja
fcoms
push
cltd
cmp
xlat
lret
movsl
nop
push
shlb
hlt
sbb
jb
mov
loopne
cmpsl
push
mov
hlt
add
pushf
notb
pop
dec
je
xchg
fsubl
loope
out
mov
lcall
xor
xchg
push
mov
jns
xchg
mov
xchg
pop
pop
mov
inc
or
pop
rorl
clc
push
inc
nop
pusha
stos
ja
test
sarl
sbb
pop
ljmp
clc
loopne
aas
xchg
push
stos
imul
sti
cmp
es
xchg
xchg
mov
stc
fidivrs
or
jne
xchg
sti
jne
jge
xchg
outsb
stc
adc
inc
pop
stos
ret
or
aaa
insl
sbb
mov
dec
cmp
dec
jb
imull
cmc
and
fisttpll
xchg
mov
cld
or
fimull
adcb
and
xchg
mov
pop
pop
adc
or
test
and
cmp
lret
push
data16
jbe
inc
push
jl
and
cmp
std
mov
pushf
fisttps
aas
ds
cmp
xchg
test
fcmove
mov
enter
ret
pop
push
xchg
daa
inc
ja
rcrb
pop
add
pop
xchg
pop
jns
loop
js
mov
jo
xchg
pop
mov
icebp
lods
pop
nop
in
cmpsb
pop
shrl
pop
icebp
in
stos
dec
repnz
lahf
pushf
adc
test
xor
pop
dec
outsl
imul
pusha
lcall
cmp
jp
xor
xor
mov
bnd
adc
xor
outsb
push
out
or
shll
adcb
sub
jo
cmpsl
mov
and
cmp
fisttpll
popf
sbb
inc
mov
sub
ret
out
push
mov
mov
fistl
add
addr16
sahf
push
cwtl
fucomi
or
cmc
fnsave
jns
or
sub
nop
jg
adc
std
lods
add
stc
and
or
mov
negb
xchg
push
jg
data16
lods
movsl
enter
jp
lret
cmp
push
mov
or
jle
adc
or
js
jns
jne
lret
cltd
insl
arpl
or
sbb
push
mov
ja
aaa
lea
loop
and
mov
cs
push
xchg
xlat
sarl
fcoms
xchg
popa
dec
jecxz
xchg
mov
jle
xchg
inc
add
mov
lret
rorb
adc
inc
mov
push
decl
push
insb
shll
out
clc
mov
fbstp
ret
dec
pop
mov
shll
in
ljmp
pop
mov
push
stc
dec
xchg
jg
cmpsl
mov
adc
daa
in
fsubl
xchg
mov
mov
inc
mov
push
or
mov
add
lds
leave
mov
xchg
sar
outsl
cmp
sbb
jns
mov
sbbb
lret
fstps
lods
stos
xor
enter
adc
in
insb
push
sub
shlb
in
out
push
cvtdq2ps
xchg
aam
out
mov
enter
in
push
aam
das
psubd
stos
sub
out
pushl
lret
stos
aaa
aaa
sub
xchg
push
fwait
jbe
test
dec
repz
xor
mov
add
pop
and
or
int
sbb
jb
dec
and
in
jge
out
inc
stc
scas
fistps
out
shr
mulb
add
sti
sub
xor
leave
insl
adc
mov
mov
stos
push
pop
cmp
scas
in
sahf
mov
repz
stos
sar
jl
xor
jle
filds
mov
cmp
and
sbb
stos
adc
sub
into
pop
aas
fistpll
enter
aas
mov
sub
mov
imul
sbb
out
cwtl
out
cmpsb
into
cmp
call
and
cmp
mov
cmp
mov
ljmp
xchg
push
sbb
sbbb
lahf
das
and
dec
insb
adc
cmc
jmp
das
fildll
adc
mov
inc
jle
gs
push
sbb
pop
das
pusha
jecxz
push
test
pop
ss
outsl
mov
adc
xchg
aam
cmc
ds
insl
push
sub
stos
movsl
clc
cmp
icebp
or
in
fnsave
test
push
xlat
jno
push
cmpb
std
and
inc
dec
jge
jne
ds
pop
or
push
cmp
jae
push
mov
mov
test
inc
leave
aam
mov
pop
shll
jmp
push
jo
push
push
cmp
bound
mov
loope
sbb
sbb
scas
dec
pop
or
sti
subl
adc
sbb
xor
or
ja
outsl
mov
fwait
js
jge
lock
and
mov
jmp
gs
mov
cmp
lret
movsb
or
lods
mov
xor
mov
aad
cmp
in
xchg
push
dec
and
mov
pop
xor
fstps
cvtdq2ps
mov
mov
mov
adc
mov
fstpt
lds
mov
out
and
pop
or
and
push
nop
in
mov
pop
cwtl
enter
sub
push
enter
and
fldl2e
push
imul
jnp
fsubrl
dec
and
mov
push
pop
mov
outsl
lds
push
rorb
cmp
call
rcrl
push
sbb
xchg
lods
adc
mov
inc
or
nop
orl
jmp
cs
xchg
mov
test
mov
mov
jle
mov
xchg
and
and
xchg
into
flds
arpl
mov
or
fcomp
xor
jge
bswap
pop
adc
fldt
adc
mov
dec
mov
pop
sbb
xchg
stos
and
mov
push
mov
pop
cmp
adc
ljmp
ljmp
mov
mov
in
and
push
repz
insl
and
xor
addr16
jae
imul
cmpsl
push
and
mov
add
hlt
mov
mov
or
rolb
dec
lahf
enter
xor
dec
sub
adc
bnd
test
scas
lds
adc
mov
sahf
dec
sbb
mov
adc
pop
popf
sub
dec
insl
call
mov
ret
cld
xchg
shlb
mov
pop
pusha
repnz
lret
icebp
rcrb
lcall
xor
mov
mov
fwait
add
jge
je
adc
stc
jge
lcall
mov
gs
adc
nop
push
flds
mov
out
cmpsl
push
dec
lods
jp
lods
sbb
add
xor
ja
jae
inc
mov
stos
sub
mov
das
cmp
lds
repz
loopne
loopne
mov
jg
and
test
add
adc
call
out
pop
arpl
lret
push
test
jl
jnp
stos
cmc
fxch
and
mov
mov
addr16
outsl
rcll
xchg
sbb
pop
sarb
icebp
mov
add
mov
jb
push
jo
add
je
aas
mov
and
fistl
pusha
pop
movsb
dec
ljmp
add
push
xchg
jle
fsubrl
mov
xchg
andl
popl
inc
lods
cli
push
push
pop
orb
add
jle
dec
adc
lahf
bound
mov
aas
fmull
pushf
les
inc
mov
pop
mov
mov
fstps
lods
mov
push
shrb
cmc
inc
sub
fsubrl
mov
shl
xor
push
mov
shlb
imul
mov
sub
inc
push
cmpsb
mov
js
cld
das
pop
mov
mov
mov
push
mov
or
or
fnsave
sahf
std
and
ljmp
fcomip
mov
fildl
xchg
das
call
xor
or
je
adc
sbb
xchg
jge
out
and
sbb
lcall
test
cmp
add
in
inc
xor
test
jmp
lds
in
cmp
add
clc
inc
sbb
push
addr16
pop
aas
xchg
mov
xchg
repnz
je
jg
xor
mov
andb
test
xchg
fildll
xlat
xorb
xlat
sbb
sub
lret
jl
adc
mov
fcomps
lds
dec
in
ds
je
enter
sahf
sub
les
cwtl
iret
and
add
dec
add
xchg
xchg
xor
test
out
add
popa
dec
dec
pop
loop
imul
gs
fsubl
mov
cmp
inc
daa
inc
adc
leave
push
out
and
mov
sti
in
mov
adc
mov
push
mov
xchg
mov
pop
mov
mov
cmp
movsb
push
push
mov
setge
add
pop
ss
jo
cmpsb
movsb
mov
pop
mov
xlat
repnz
cmp
ja
ror
jbe
push
clc
push
pop
dec
jne
mov
pop
inc
call
mov
pop
xchg
mov
ds
shlb
fisubs
in
xchg
movsl
jge
popa
mov
inc
inc
imul
fbld
mov
cs
xor
mov
aaa
xchg
pop
imul
stos
repz
push
xchg
jmp
sbb
imul
aas
jp
pop
sti
test
test
add
popa
out
das
lahf
lret
push
call
subl
xchg
sub
mov
icebp
cwtl
mov
daa
jg
mov
pop
xchg
adc
jge
xor
out
std
xchg
mov
sub
outsb
call
mov
pop
jp
orl
into
inc
dec
dec
push
int
mov
ja
ds
loopne
sub
arpl
loop
dec
inc
aad
sub
movsl
xchg
jecxz
sub
dec
pushl
sbb
and
pop
loop
pop
push
sbb
aad
mov
mov
jmp
int
push
sbb
sar
pop
scas
loop
adc
cwtl
daa
push
xorl
sbb
add
inc
fcmovbe
jge
lret
shlb
stos
and
sub
pop
mov
add
repz
adc
pop
xchg
xor
lret
or
icebp
stos
cltd
mov
adc
pop
aad
cmp
enter
jbe
lea
ljmp
push
jnp
inc
into
gs
mov
sahf
sub
and
lods
repz
xchg
xor
jmp
rorb
test
fisttpl
pusha
and
cs
pop
ljmp
jl
stos
sbb
movsl
mov
loopne
mov
loopne
sbb
ffree
sar
fsts
jmp
icebp
dec
ss
std
sbb
dec
in
ffreep
out
popf
push
xlat
leave
mov
lods
out
in
push
sbb
add
sub
notl
mov
ficoml
ljmp
mov
push
add
mov
aaa
cmp
push
mov
adc
aam
or
or
xor
pop
fdivrp
push
lds
mov
jno
cmp
push
out
mov
ja
fnstenv
mov
clc
lock
dec
dec
syscall
push
int
aaa
into
clc
adcb
mov
movsl
xchg
das
mov
pop
aaa
mov
idivb
xchg
int3
les
or
iret
xor
push
sbb
into
nop
movsb
push
out
pop
in
es
repz
xor
xchg
xor
lods
std
insb
inc
pop
pop
inc
sub
jne
adcl
jnp
sbb
ljmp
jle,pt
mov
push
jmp
mov
addr16
sub
xchg
ret
insl
jmp
add
push
jl
out
jno
sub
mov
loopne
repz
xchg
cmp
outsb
sbb
mov
inc
cwtl
mov
dec
pop
sbb
call
sub
test
out
jno
stos
mul
scas
cmpsb
cs
cltd
push
enter
dec
in
stc
xor
mov
pop
add
push
inc
adc
cwtl
adc
mov
mov
sub
es
popa
or
mov
add
sbb
cmp
subb
shll
pminub
xchg
mov
aam
inc
mov
mov
jecxz
ja
xor
stc
mov
leave
or
in
mov
mov
fnstcw
stos
inc
decb
shl
push
mov
insb
push
xchg
adc
nop
mov
pop
fstpt
mov
sub
pop
arpl
add
mov
xor
push
xchg
pop
and
mov
jmp
mov
cld
xchg
or
jno
fimuls
mov
and
sti
mov
inc
mov
xchg
lret
push
lock
cli
push
outsl
test
loopne
xchg
add
xchg
jg
sti
mov
in
pop
mov
jmp
shl
test
sbb
out
test
insl
jl
loopne
cmp
dec
cmpb
pusha
mov
insb
cwtl
add
popa
adc
dec
and
int3
std
int3
in
push
insl
cmp
jae
dec
arpl
jl
push
std
les
fninit
xadd
adc
mov
ret
in
jl
adc
addr16
and
jae
mov
mov
and
mov
cmpsl
inc
cwtl
repz
mov
inc
out
sub
inc
jl
data16
mov
xlat
es
jnp
mov
sbb
push
add
jns
push
fistpl
jecxz
jae
mov
jb
xor
dec
xor
mov
aad
rorb
stc
sbb
and
dec
les
dec
jge
adc
jecxz
push
stc
pop
and
pop
cmp
out
cmp
cmp
sbb
cmp
pop
jl
aaa
testl
test
pop
mov
lods
pop
sbbl
cwtl
bound
scas
imul
inc
push
fwait
sub
jecxz
shll
sbb
cmp
movsb
fwait
dec
push
in
cltd
cli
or
enter
clc
or
adc
aas
dec
add
out
lock
lret
call
push
cmp
push
adc
into
in
dec
lods
cmpxchg
ljmp
test
adc
in
sbb
pop
loopne
adc
push
dec
pusha
das
push
mov
jmp
les
fstpl
and
adc
in
dec
scas
or
mov
adc
sbb
test
push
dec
bound
adc
mov
out
dec
aas
arpl
sub
scas
std
sti
addl
and
pop
lods
pop
or
or
mov
loopne
fwait
ss
dec
dec
test
test
sbb
jecxz
or
push
jecxz
mov
lods
push
cmp
fiaddl
stc
or
aas
push
movsb
mov
sbb
sbb
xlat
inc
aaa
mov
out
lea
cmpsl
imul
pushf
into
stos
push
adc
shlb
cmp
cld
dec
out
jmp
sti
addb
and
syscall
or
xchg
imull
bound
cmpb
cmp
int
pusha
into
mulps
sbb
sbb
call
inc
insb
roll
cmp
or
cltd
inc
push
out
sqrtps
je
dec
add
out
data16
cld
pop
shrl
pop
pop
dec
inc
popw
xchg
testb
insb
int
cli
cwtl
mov
sub
cmp
inc
fildl
out
cld
sahf
xchg
jl
jl
xor
cmpsb
stc
shr
test
push
pop
pop
jbe
xor
into
jp
filds
ss
jae
adc
es
enter
test
xor
add
std
decl
sbb
push
inc
ds
stc
sbb
rorb
dec
fidivrl
jnp
jbe
xchg
or
push
push
lahf
jo
nop
in
push
je
add
xchg
imul
shr
sahf
or
pop
jmp
push
add
mov
mov
sub
shrl
ffree
jmp
test
lret
pop
and
sbb
hlt
add
aas
jb
imul
adc
aas
fstpt
mov
sub
cld
sub
pop
aam
and
jnp
xchg
cmp
mov
sub
jecxz
sub
cltd
add
int
xchg
mov
out
es
mov
inc
shrl
or
fwait
aad
cmpsb
push
mov
mov
scas
pop
or
aas
cmp
jbe
loope
sub
lcall
mov
popa
fsubrl
or
test
sub
sti
aam
test
movsb
lret
mov
mov
lcall
or
fidivs
xor
fisubrl
mov
aad
mov
inc
jne
and
scas
jae
mov
inc
pop
sahf
dec
dec
insl
cld
lds
cmpsl
jno
rol
pop
mov
hlt
decb
dec
cmp
mov
adc
leave
mov
cli
nop
in
arpl
xchg
icebp
sbbb
pop
cmp
push
out
cmp
dec
pop
loope
loopne
jmp
pop
enter
outsl
mov
arpl
jbe
inc
inc
iret
stos
scas
jbe
insl
int3
mov
adcb
ret
push
sub
mov
inc
xchg
cli
outsb
out
jecxz
jle
xchg
ljmp
pushf
sti
cmp
lock
or
add
sbb
shrl
or
mov
xor
out
mov
mov
test
push
dec
add
fs
xchg
js
push
mov
mov
in
push
pop
in
loop
lea
jae
xlat
mov
icebp
dec
add
sbb
lds
jl
push
sysenter
stos
aam
rcrb
into
cmc
xor
xchg
pop
int
inc
ret
test
int
mov
xor
lcall
add
sbbl
loope
aas
fst
mov
mov
add
stos
sbb
scas
roll
push
sbb
sub
cmp
gs
and
inc
cmp
xor
dec
int
xchg
cmp
push
or
mov
xchg
sub
idivl
jo
scas
push
stos
cmp
inc
in
pop
aad
sbb
es
mov
add
xchg
push
shl
std
mov
cmpsb
notb
xor
addr16
icebp
push
in
jl
gs
inc
shll
xor
fimull
je
inc
or
lret
and
cmp
mov
mov
stos
lahf
cmp
lods
or
shr
jne
sbb
xchg
insl
push
and
sub
adc
mov
jge
fs
dec
pop
jp
jge
ficompl
mov
loope
add
sub
icebp
adc
shlb
jae
incb
jge
push
scas
clc
scas
and
mov
ljmp
cltd
sbb
fwait
add
lea
movsl
dec
arpl
pop
cmp
pop
inc
mov
push
nop
mov
and
xchg
inc
std
cmp
aad
adc
push
mov
idivl
test
push
or
lret
inc
scas
push
iret
lcall
ja
pop
enter
out
arpl
ror
dec
xlat
xor
inc
out
nop
jae
push
or
mov
pop
adc
mov
flds
mov
mov
sbbl
sub
int
inc
int
jl
stos
mov
push
ret
mov
mov
fisubrl
shll
mov
mov
je
add
sbb
out
bound
dec
push
ds
shlb
movsl
movsb
inc
mov
mov
sub
inc
jp
lea
ficomps
cli
das
fnstsw
pop
push
sbb
in
insb
and
pop
loopne
fistpl
push
sub
fucomp
xor
ss
jo
cwtl
jne
rclb
push
push
or
mov
inc
cli
jmp
arpl
shll
push
xor
lds
push
mov
stc
addb
sub
dec
cmpsl
inc
je
out
sbb
push
cmpsb
jmp
sub
push
ja
les
lods
xor
shl
jo
scas
scas
pcmpgtd
shl
inc
adc
mov
js
test
popf
sbb
test
rcl
in
sti
push
addr16
fsubl
popf
hlt
jae
test
mov
push
movsb
push
cmp
mov
cmp
ss
popa
cmp
mov
push
data16
hlt
lahf
xchg
jl
fdivs
push
or
orb
add
jmp
leave
daa
jb
leave
add
or
adc
ss
loope
mov
mov
fucomi
pop
jle
push
daa
loop
lea
int3
in
adc
xor
pop
pop
pop
in
add
mov
pop
fs
cli
outsb
xor
xchg
and
dec
mov
sbb
xor
or
jge
adc
cmpsb
pop
sub
ss
adc
ficompl
roll
scas
or
mov
mov
push
insb
ljmp
mov
jge
popf
pop
lret
je
loop
lret
push
test
jmp
das
loope
sbb
sbb
and
dec
lret
pop
lcall
pop
js
sub
mov
rol
scas
or
cmp
js
mov
xchg
or
popf
adc
and
jmp
das
mov
push
call
push
cmp
push
fs
jo
dec
arpl
in
out
sbb
push
iret
inc
push
dec
movsb
dec
mov
xchg
aas
adc
and
lcall
cmc
lock
call
inc
std
and
popa
test
fcompl
repnz
fcmovnu
sbb
xor
dec
inc
mov
jl
add
mov
mov
fsubr
sub
iret
cli
ret
cmp
or
sbb
cmp
mov
rcr
aad
jecxz
jnp
js
std
mov
jnp
lods
cmp
mov
fistpll
mov
pop
popf
loopne
notb
mov
popa
sbb
mov
enter
adc
and
dec
out
cmpsl
int
mov
aad
xor
push
in
mov
jae
roll
fsubr
mov
jl
adc
aam
push
inc
cmpsl
fnstenv
sub
push
test
mov
shr
push
pop
enter
and
mov
or
fstp
ja
or
jmp
mov
dec
xchg
cmp
sub
push
ret
push
js
inc
sub
cmpxchg
dec
mov
fistps
ret
fbstp
mov
adc
js
mov
pop
mov
daa
sbb
adc
andl
hlt
int
sbb
add
dec
sarb
push
push
mov
mov
adc
cs
jge
bound
and
gs
ffreep
daa
cmpsl
mov
sarb
dec
jb
fstpt
nop
aam
rcl
arpl
jle
jnp
inc
int
add
jmp
and
mov
insl
inc
jae
cmp
sub
push
test
in
aas
enter
arpl
pop
fwait
jge
outsb
push
mov
dec
call
sub
pop
or
inc
xor
xchg
sub
pop
xchg
xlat
sbb
inc
and
inc
xchg
cmp
pusha
ret
cmp
js
mov
stos
and
and
cwtl
ret
xacquire
xchg
sbb
ljmp
aam
or
lds
aaa
sub
je
pop
push
pushf
mov
jo
jo
pop
cltd
call
lds
andl
or
pop
xor
iret
lret
ret
xchg
ss
mov
lcall
lret
or
testb
loope
adc
jo
push
imul
xchg
pop
fstpt
cmp
leave
pop
jnp
mov
inc
mov
inc
dec
dec
cmpl
js
mov
int3
into
ljmp
addr16
std
cmpsl
pop
loope
mov
das
xlat
in
sbb
dec
push
xchg
and
add
out
iret
xchg
xor
sbb
in
cmp
aaa
es
mov
mov
loopne
sbb
cli
add
and
outsb
imul
adc
mov
out
mov
leave
jb
cmp
lds
jp
mov
iret
lahf
adc
out
pushf
xor
rol
sbb
fistps
mov
fucomp
cmp
inc
mov
xor
mov
and
pop
sub
out
sub
cs
aam
mov
out
testb
xchg
fwait
inc
push
fnstcw
bound
mov
idivl
push
pop
shrb
enter
sub
sbbb
cmp
sbb
jbe
mov
test
ss
pop
dec
outsb
inc
lock
loope
mov
ficoms
or
aaa
lcall
aam
adc
ret
in
repnz
int
int3
inc
pop
ds
push
mov
call
or
jl
pop
mov
xchg
lret
pop
sbb
outsb
sub
dec
mov
push
cmc
cmova
bound
mov
jno
leave
inc
or
cmpl
gs
push
addl
mov
rorl
out
pop
xor
cmp
xchg
out
push
cmpsb
push
cld
push
les
movsl
add
dec
test
and
pop
outsl
inc
sets
in
cmp
clc
pushf
testl
loopne
pop
popa
leave
std
push
dec
push
sub
and
leave
scas
xor
jl
test
daa
xor
and
xchg
lcall
lahf
out
inc
fimull
jne
cmp
fwait
mov
jp
popa
add
sti
add
lock
mov
gs
imul
or
xchg
mov
in
or
cli
lret
sub
into
sbb
cltd
and
in
mov
jp
shlb
in
push
imul
in
jecxz
lret
sub
fwait
xor
push
push
shrl
xor
movsb
or
and
jle
ljmp
inc
pop
push
jnp
inc
inc
fsubrp
cld
sbbb
jnp
aaa
insb
mull
in
das
or
dec
cli
mov
in
add
sbb
lcall
inc
adcl
xor
mov
cmp
je
jnp
mov
pop
pop
lea
mov
xchg
test
out
cmc
out
mov
dec
mov
call
cli
icebp
rcll
jo
loopne
shlb
fwait
push
jge
cltd
scas
jge
mov
push
xchg
sahf
adc
xchg
push
sbb
adc
mov
inc
js
push
or
jle
pop
ss
sbb
aad
clc
xor
stos
scas
icebp
push
mov
mov
inc
sahf
mov
mov
and
lcall
cmp
dec
arpl
mov
in
in
aaa
pop
xor
sbb
cmp
cmp
and
sub
nop
lret
xchg
icebp
xchg
and
jno
stc
mov
xor
xadd
hlt
ljmp
or
decl
out
pop
pop
fidivs
jo
les
idivb
cmpsl
int
fucom
pop
cld
inc
push
push
clc
push
and
xor
push
fisubrl
sub
add
mov
and
int
inc
gs
stos
inc
pop
mov
cmp
sub
jns
adc
std
xchg
sbb
out
dec
jnp
ja
cmp
les
ret
mov
xlat
dec
test
add
pop
xlat
insb
dec
xor
sbb
cmp
and
pushf
and
add
hlt
mov
lods
into
adc
out
or
and
jl
mov
adc
test
std
push
and
lret
out
sbb
divb
lds
je
adc
dec
aad
add
push
sub
rcll
add
jno
mov
fdivl
sbbb
inc
mov
push
xor
jmp
adcb
mov
ss
inc
fs
fldt
jns
mov
sub
mov
xor
adc
stc
aas
movsl
movsl
dec
je
pop
sarb
or
int3
sub
fimull
movsb
cmpsl
or
push
jnp
pop
mov
ds
fiaddl
adc
dec
mov
lret
sub
je
lcall
push
sti
arpl
xor
mov
and
sbb
push
test
mov
cmp
pop
jns
sub
xor
mov
lods
sub
mov
push
xchg
mov
loope
cmp
mov
adc
out
add
add
icebp
lock
adc
push
ljmp
jno
bound
mov
mov
sub
insb
pusha
push
stos
rcll
add
out
out
lds
aad
mov
adc
push
add
push
lret
xchg
ljmp
lret
dec
mul
inc
push
cmp
xchg
xor
add
dec
and
cmp
lods
nop
stos
mov
ret
aad
mov
repnz
pop
div
out
xchg
dec
fs
dec
or
std
cmp
cmp
scas
nop
dec
int
stos
sub
push
inc
popf
push
popf
aam
or
das
les
mov
push
mov
popf
or
ljmp
ss
es
mov
and
mov
xchg
test
lea
lcall
mov
dec
test
mov
ret
xchg
cld
xchg
push
sbb
ds
into
xchg
aam
jnp
cmp
mov
rcr
into
dec
or
ljmp
inc
js
roll
gs
cmp
aaa
stos
loopne
mov
mov
stc
cmp
push
push
addl
pop
inc
dec
or
popa
jne
rcll
mov
pop
pop
shll
xor
or
push
clc
adc
rcll
in
sbb
mov
sbb
sbb
loope
sti
in
loope
xor
and
leave
and
icebp
or
jge
sub
jb
xchg
ret
lret
fisttpll
cmp
fnclex
test
sbb
dec
stc
call
inc
cmpl
cmp
sbb
leave
stos
pop
fldenv
stos
data16
sub
int
push
mov
pop
inc
xor
mov
jae
jp
sbb
mov
mov
pushf
inc
xchg
fwait
add
dec
sti
cwtl
sub
mov
cwtl
xor
jg
mov
push
xchg
mov
lahf
stc
mov
mov
js
add
lahf
shr
inc
xchg
insl
mov
mov
insl
call
roll
pop
pop
lock
sub
dec
cltd
stos
lds
push
push
or
stc
icebp
pushf
shrb
mov
xchg
xchg
push
test
out
jae
or
xchg
xor
clc
test
pop
sbb
jb
adc
in
dec
push
jg
push
scas
fwait
adc
int
add
and
cwtl
ja
mull
into
cmpsl
adc
inc
shl
xchg
push
lods
scas
adc
sti
adc
orw
pop
in
fiadds
jnp
xor
cmp
push
push
jl
xchg
test
rcrl
mov
data16
pop
sub
or
cmp
sarb
pop
jle
ret
inc
cmpsl
out
mov
adc
mov
loop
ja
lea
cmc
adc
mov
mov
mov
int
imul
adc
cli
rol
iret
addb
jno
sti
dec
push
insb
pushf
sub
stos
jb
icebp
cld
mov
ficomps
add
pop
outsb
mov
pop
lock
fsubs
sbb
pop
js
andl
mov
fisubl
lods
mov
or
jle
xchg
jge
add
subl
mov
jp
rcrb
cmpsb
sbbb
adc
mov
mov
jmpw
cmpsl
sub
mov
and
jg
add
jne
or
xchg
xor
xor
cmp
int3
fnstenv
pop
mov
test
into
xchg
ljmp
stos
repz
aam
loop
pop
pop
pop
in
mov
dec
mov
sub
or
cmpl
insb
scas
pop
jl
jge
jg
jle
ret
aas
mov
jb
jo
aas
jno
mov
out
adc
loope
js
sbb
icebp
sub
jecxz
fchs
dec
jmp
movl
test
movsl
lret
call
in
fimuls
popa
test
lock
mov
pop
mov
jbe
orl
inc
lock
int3
in
pop
cwtl
jge
pushl
push
jg
mov
inc
mov
xchg
cmpl
fstpt
adc
mov
loop
lods
add
inc
sbb
imul
or
pop
or
and
ss
dec
jp
dec
incb
insl
subb
add
dec
subl
mov
cmc
stos
out
push
dec
lods
mov
xor
mov
mov
fs
jno
push
mov
fidivl
ret
and
sahf
int3
rcrb
inc
jno
xlat
pop
adc
scas
inc
add
adc
adc
lea
ss
sarb
scas
mov
cmp
sti
jae
pop
sahf
or
shrl
sub
jbe
jb
jle
sub
mov
aam
jl
jns
or
ljmp
dec
data16
fistps
pop
mov
push
aas
int3
mov
bound
mov
add
xchg
ja
lock
lods
mov
jnp
or
dec
scas
and
push
jecxz
pop
jbe
add
imul
dec
mov
repnz
cmpsb
or
sbb
arpl
sbb
ss
and
inc
lock
adc
rclb
xor
fwait
sbb
in
mov
leave
jnp
push
adc
jne
inc
scas
aaa
add
and
je
pop
lds
push
xor
add
xor
cmp
sbb
outsl
sbbb
stc
jno
addr16
aaa
pop
mov
or
xchg
and
and
fmull
fisttpll
subb
jo
movd
xor
in
sbb
or
mov
pop
pop
in
jns
jge
cmp
inc
push
inc
imul
mov
inc
rcll
insb
dec
mov
test
das
and
mov
mov
repnz
cmp
xor
shrl
ds
add
mov
int3
and
mov
xlat
aas
mov
dec
into
jno
ss
push
fildl
pop
xor
push
sbb
loope
add
pop
sahf
out
scas
into
fnstsw
sbb
cwtl
mov
mov
push
insl
or
daa
mov
adc
lret
iret
pop
loop
pop
stos
and
inc
inc
push
mov
js
repz
push
jno
int3
out
or
xor
cmp
rclb
fs
sbb
rolb
std
js
je
aad
rol
stc
push
jmp
imul
mov
xlat
mov
add
sub
imul
popf
int
cmp
mov
add
pusha
jne
notl
aaa
cmpsb
jb
es
cmc
into
xchg
pusha
daa
rol
int
das
and
jmp
bound
mov
xchg
dec
mov
push
xchg
movl
idivl
int3
jnp
inc
sub
in
lahf
and
cmc
sbb
jg
jnp
jno
push
cli
lcall
mov
mov
out
pop
push
mov
inc
rorb
inc
push
and
xchg
inc
mov
inc
mov
mov
insb
mov
dec
gs
fnstcw
add
shlb
cmpsl
or
pop
jle
out
ret
xor
mov
outsl
in
shrb
inc
clc
adc
outsl
adc
jp
push
adc
repz
sbb
andl
pushf
hlt
cmp
jmp
dec
add
mov
cltd
hlt
lods
daa
dec
push
push
xor
jno
sbb
push
xchg
into
xchg
xor
and
xor
fisubs
int3
push
pop
jns
in
shll
and
fwait
add
adc
inc
dec
mov
or
add
je
ret
mov
mov
call
xchg
adc
add
sbb
push
push
push
outsl
mov
lds
sti
iret
xor
loope
jg
pop
adc
shll
cld
add
jno
push
fs
xchg
cmp
enter
stos
nop
mov
clc
push
cmp
push
add
dec
call
aaa
cmp
pop
xchg
jnp
fcoml
jge
jmp
jmp
fidivrl
jmp
push
and
sbb
lret
cwtl
jb
jp
jl
les
enter
fldcw
incl
loope
sbb
inc
mov
mov
out
sarb
mov
push
imul
or
inc
dec
push
fcompl
js
out
mov
test
outsl
loop
mov
dec
pusha
cltd
insl
push
push
push
sbb
mov
ss
call
movsb
jmp
test
imul
jnp
mov
mov
cwtl
xor
xor
dec
and
mov
in
insb
xchg
add
push
ffree
xlat
add
dec
xchg
stos
jmp
clc
testb
push
xchg
mov
clc
cltd
add
ret
rcrl
jo
jl
sub
icebp
sub
xchg
decl
pop
outsb
xchg
xchg
fcomp
scas
repnz
xor
and
out
xchg
sbb
insb
xchg
inc
std
clc
ds
repnz
push
adc
jne
js
test
inc
bound
enter
sbb
inc
fbld
cmp
repnz
add
jmp
mov
or
test
pop
pop
jp
fistpl
mov
adc
loope
push
loope
xchg
stc
sub
push
in
and
or
mov
roll
ss
mov
scas
cmp
pusha
jae
jp
push
sub
cld
lret
sbb
jnp
dec
mov
das
inc
arpl
scas
add
icebp
bnd
idivl
jnp
xchg
imul
lret
mov
mov
dec
ja
inc
mov
sbb
add
scas
insl
cmpb
lea
fldenv
inc
jno
adc
rcrb
imul
mov
sub
jecxz
cmp
popa
and
stos
pop
mov
inc
jnp
shlb
and
mov
lret
es
dec
mov
scas
icebp
xchg
scas
mov
fbstp
push
nop
jle,pn
loopne
xchg
or
fs
lea
sub
test
and
sar
lea
shll
repnz
sbb
dec
inc
inc
push
mov
xchg
cmp
and
orb
dec
daa
out
push
and
adc
or
std
push
fdivs
loopne
xchg
repz
aam
xor
into
ret
out
in
adc
push
jge
cmp
pop
decb
sahf
dec
stos
or
mov
cltd
outsb
das
inc
mov
cmp
mov
xor
in
push
mov
inc
in
push
or
sub
xlat
mov
loope
lret
into
sbb
add
mov
xor
das
and
std
push
add
jp
sub
dec
flds
dec
mov
mov
movsb
clc
push
or
out
pop
movsl
out
incb
jns
mov
das
negl
push
int3
mov
mov
sbb
mov
inc
inc
adc
or
movhps
mov
or
push
out
out
ret
dec
call
mov
or
sahf
add
insb
int3
sub
leave
jl
inc
cmpsb
subb
dec
mov
ret
pop
dec
mov
lds
ret
outsl
dec
fdivrs
mov
xchg
sti
dec
inc
lock
pop
dec
sub
push
cmp
jnp
loopne
cmp
pushf
int3
repnz
inc
insb
scas
rcrl
jne
cmp
insb
jnp
cld
adc
shl
dec
cmpsl
pop
imul
pusha
out
fwait
in
pushf
push
mov
xlat
enter
dec
imul
push
and
pusha
ja
std
jl
data16
mov
and
jno
stc
sbb
pop
push
cwtl
fsubr
movsl
arpl
and
xchg
cmp
pop
sbb
popa
cmp
jg
mov
out
andl
dec
iret
and
stos
xchg
cld
xchg
outsl
fwait
mov
test
iret
negl
or
or
xchg
cltd
or
sub
shrb
mov
sbb
aam
js
mov
iret
xchg
cmp
mov
pushf
out
fidivrs
pop
subb
push
in
inc
fsts
fcompl
fisttps
movsl
push
pop
into
push
lcall
pop
add
in
xchg
push
stc
jge
lret
mov
sbb
push
jmp
push
in
repnz
test
cmp
mov
clc
stos
mov
jb
in
xchg
lea
sahf
enter
and
ret
sub
cmc
and
das
loopne
sbbl
add
repz
test
inc
mov
cmp
rorw
mov
imul
mov
add
rorb
push
pop
dec
mov
ret
sub
repnz
inc
je
adc
or
dec
jmp
pusha
lds
push
mov
jle
pusha
xor
adc
mov
movsl
imul
and
movl
je
sbb
mov
out
sbb
xchg
mov
mov
mov
jbe
test
cmp
aam
adc
sub
not
outsb
test
cmp
xor
imul
std
and
sahf
xchg
xchg
ds
cmc
test
sub
jne
xor
or
enter
adc
hlt
test
xor
out
les
aaa
push
in
dec
xchg
enter
outsb
and
lahf
imul
xor
insl
xorl
dec
fcomps
sub
xor
call
add
lcall
in
xchg
inc
mov
sbb
imul
jg
js
sbb
xchg
adc
stos
jno
xchg
xchg
arpl
or
and
mov
add
sub
push
loopne
out
xlat
push
sti
fcmovne
xor
shlb
jbe
roll
test
adc
adc
mov
pop
inc
mov
jbe
enter
mov
shlb
mov
sub
in
insb
mov
insl
scas
out
lret
dec
sbb
fisubs
cmpsb
dec
pop
shl
lret
and
push
shrb
popf
dec
ret
lds
aas
inc
jmp
or
ds
or
push
mov
or
loope
das
popa
mov
cmpb
lahf
add
stc
das
test
inc
int3
sub
cmp
fwait
addl
mov
add
rorb
jo
ret
pop
outsb
repz
inc
jecxz
add
and
cwtl
push
repnz
js
inc
lock
mov
int
in
mov
imul
add
rep
sti
fistpll
ds
inc
addr16
xchg
adc
pop
mov
lahf
les
movb
mov
subb
push
mov
pop
cmp
call
mov
frstor
popa
test
insb
mov
adc
inc
into
daa
arpl
or
rcrl
mov
out
cli
icebp
insb
xchg
xor
insb
jmp
jae
mov
orl
cld
pop
push
mov
ret
pop
hlt
test
mov
das
dec
out
sahf
scas
xchg
inc
sub
mov
or
inc
jg
cmc
jno
cmc
leave
or
add
mov
inc
lcall
xchg
fwait
ja
int
cs
rorl
pusha
xchg
rorb
cmp
movsl
adc
inc
stos
enter
les
xchg
ja
adc
mov
cmp
or
fcoml
sahf
add
es
inc
add
lret
orb
mov
sbb
insl
ret
lret
out
data16
jecxz
push
adc
mov
inc
rclb
aaa
imul
add
ja
and
dec
mov
mov
ds
sub
leave
cmp
fldl
push
sarb
xchg
shll
mov
xchg
cmp
mov
ja
repnz
and
lahf
popf
xor
addb
add
dec
lret
adcb
hlt
cli
shrb
je
inc
icebp
xor
xchg
sub
fisubs
std
sbb
not
and
in
mov
and
clc
or
sub
rcrl
subl
mov
dec
shlb
mov
jae
sbb
jb
push
mov
sbb
rolb
xchg
push
add
and
sbb
andb
lret
mov
push
out
mov
xchg
push
xchg
inc
xor
or
xchg
jmp
jp
les
mov
sahf
jae
scas
xor
or
iret
pop
mov
test
push
inc
bound
movsl
insb
je
aam
fbstp
bound
sbb
or
sbb
jg
mov
inc
sar
add
fisttpll
ja
mov
stc
mov
adc
and
xchg
lods
push
mov
data16
push
ds
push
jmp
push
adc
in
or
adc
push
std
leave
adc
mov
pop
lret
dec
inc
lds
sbb
push
mov
jp
add
hlt
jns
stos
jecxz
outsl
aaa
xchg
int
fcomip
addb
subl
ss
mov
enter
push
adc
mov
or
pop
lret
ljmp
mov
loopne
int3
push
icebp
out
mov
cvtpi2ps
sub
xchg
dec
xlat
stos
fmuls
xchg
aam
sub
jno
in
or
lcall
scas
rcll
mov
and
jg
cmc
lret
movsl
cmpsb
scas
rcr
imul
dec
movsl
sub
insl
outsl
jae
rorl
shl
aas
ja
testb
mov
jae
mov
scas
mov
imul
jnp
push
xor
pop
in
es
push
add
es
mov
lahf
cmp
adc
fsts
or
or
cwtl
loopne
lcall
ja
out
stos
mov
clc
je
out
mov
enter
lret
push
fwait
add
icebp
jg
loopne
fiaddl
out
leave
mov
es
push
xchg
popf
xchg
adc
out
loope
dec
rolb
mov
movsl
dec
xchg
stc
jmp
imul
mov
jl
aam
adc
push
mov
mov
and
push
nop
or
loopne
sub
xorl
test
mov
cmp
add
dec
cmp
mov
adc
xor
test
or
mov
jo
lret
jle
dec
call
je
mov
sti
bound
mov
test
cmpsl
inc
mov
fisttpl
sub
dec
fwait
mov
pusha
leave
cmc
out
popf
and
repz
insb
leave
push
ret
nop
push
movsb
out
cmp
dec
mov
mov
pop
sub
and
fcmovbe
inc
mov
repnz
movsl
mov
into
mov
ljmp
shl
shrl
loop
call
out
pop
pop
or
loopne
mov
dec
add
xchg
icebp
dec
sahf
pop
je
fs
loopne
sub
mov
push
and
mov
cmp
in
sti
int3
hlt
test
inc
mov
cld
fstp
xlat
pushw
xchg
not
mov
adc
mov
add
pop
pop
dec
clc
inc
lock
adc
into
mov
ds
divl
inc
mov
fnstenv
inc
jp
pop
in
add
insl
jns
jmp
mov
imul
shrb
inc
push
adc
clc
add
dec
neg
mov
mov
sahf
enter
imul
imul
jmp
jne
mov
push
pushf
push
aaa
adcl
movsl
lock
lcall
sub
sbb
aad
adc
repnz
dec
iret
xor
popa
push
dec
std
push
xor
retw
jnp
rolb
push
fisubs
fcoms
je
jnp
lods
push
out
jl
xchg
lret
stos
or
ret
dec
addr16
adc
repnz
mov
lret
lds
pushf
cmp
push
xor
cld
and
loop
aam
cmpsl
or
movsl
or
push
mov
and
sub
jns
and
or
out
stc
add
pop
jp
mov
mov
fadds
mov
mov
adc
mov
aas
decl
cmpsb
stc
rcrl
popf
push
mov
xchg
sbb
outsl
mov
aaa
stc
sbb
cmp
lret
sbb
ljmp
movsl
lods
pop
popa
arpl
push
movb
jae
pushf
out
dec
sub
push
jo
adc
icebp
and
pop
rclb
in
cmpsl
addr16
movsb
insl
aas
sahf
das
loope
data16
insl
sub
repnz
in
gs
jae
call
push
mov
inc
int3
addr16
xor
xor
lock
dec
inc
and
fidivrl
jnp
loope
in
mov
in
in
add
add
and
mov
jge
idivb
lock
repnz
dec
push
push
arpl
pop
xchg
dec
pop
clc
pop
out
or
mov
mov
mov
lahf
xor
loope
aas
cmc
push
imul
cmp
aaa
es
mov
mov
test
sub
jl
pop
xor
jno
iret
rcrl
push
mov
cmc
shll
clc
roll
arpl
push
je
out
lods
jecxz
xor
loop
pop
add
rclb
inc
pushw
jecxz
adc
aas
cmc
adc
mov
xchg
clc
inc
mov
adc
data16
mov
mov
lea
shlb
inc
add
xchg
dec
repz
shlb
or
ficoml
sub
jb,pt
inc
repz
cmp
les
mov
pop
xchg
cmp
jb
fidivs
sbb
imulb
pop
push
int3
out
enter
hlt
sbb
or
jmp
adc
icebp
jne
push
and
sbb
jg
xor
inc
int
aaa
lods
dec
sub
push
rcr
aad
rorb
pop
push
data16
add
mov
popa
neg
mov
out
rcrl
into
sbb
mov
jecxz
fisubs
jg
cltd
insl
dec
ds
sbbb
mov
ja
dec
jp
pop
sub
in
mov
insl
int3
loopne
in
es
in
sub
repnz
insl
mov
insb
in
lea
xchg
sub
rclb
sbb
mov
pop
sub
loop
lcall
cmp
nop
inc
xlat
add
cmpsl
mov
xchg
test
outsb
add
popw
dec
pop
mov
fistpll
test
shlb
mov
mov
push
sub
pop
sarb
mov
mov
arpl
pop
pushf
inc
movsl
stos
mov
ss
cmc
xchg
xchg
cmp
fcmovbe
inc
test
out
inc
popf
rcll
enter
iret
xchg
mov
cli
in
mov
repnz
cltd
arpl
add
jp
dec
xchg
cli
stos
xor
sti
mov
cmpsb
movsb
orb
xor
ret
and
adc
fwait
sub
xor
or
test
aam
std
pop
xor
mov
int3
je
aam
pushf
out
dec
insl
popa
cmpsl
inc
jo
mov
data16
xor
lods
rcr
dec
xchg
add
sub
aaa
imul
sbb
or
and
dec
sbb
push
aam
fucomi
fisttpl
mov
mov
cld
pop
fmul
call
dec
rorb
sbb
push
or
push
add
imul
and
test
inc
sub
pop
pop
in
mov
popa
xchg
lds
dec
dec
jecxz
or
gs
cmp
test
lcall
aas
repnz
inc
inc
xor
push
sub
bound
stc
pop
out
movsb
adc
andl
adc
xchg
in
data16
xchg
jecxz
leave
aad
jecxz
push
dec
pop
adc
mov
mov
sbb
ror
imul
jle
xchg
sub
pop
and
mov
mov
adc
or
mov
add
xor
push
or
dec
mov
cmp
push
dec
push
shlb
scas
je
scas
ljmp
mov
inc
and
inc
mov
outsl
push
adc
adc
scas
iret
iret
push
or
add
or
jo
movsl
adc
pop
push
negl
sub
lcall
inc
jl
dec
sub
ds
mov
mov
scas
and
sub
leave
or
add
outsb
or
xchg
out
and
ja
inc
mov
pop
xchg
in
xor
dec
dec
inc
xor
cmp
das
lcall
test
lret
push
xor
aas
out
jne
js
push
movsb
jle
adc
mov
int
pop
pop
fadds
inc
in
test
leave
call
adc
arpl
lods
in
pop
jl
push
ret
jo
fbstp
js
or
mov
call
jb
push
mov
aam
in
outsb
popf
int3
inc
add
sub
je
repnz
pop
clc
ljmp
or
add
scas
add
shll
cmpsl
int3
movsb
push
sahf
jmp
outsl
loopne
mov
xlat
clc
scas
inc
push
loope
scas
jl
push
pop
negl
imul
xor
inc
je
mov
out
push
mov
add
icebp
das
jecxz
in
aas
repz
adcl
cmp
out
sarl
sub
sub
sbb
sbb
movsb
mov
rorl
mov
add
outsb
and
test
xor
lahf
test
fwait
out
xchg
or
test
or
lea
xchg
adc
scas
pop
mov
test
in
fldenv
call
js
es
xor
fldt
jmp
bound
and
out
cwtl
pop
stc
repnz
mov
inc
mov
mov
inc
and
push
or
test
jns
insb
jno
xchg
outsl
sub
cmp
addr16
in
dec
push
xchg
cmpsl
dec
xor
aam
test
cmp
fcompl
mov
lods
pop
aas
mov
jl
mov
gs
jb
cmp
adc
push
push
dec
les
push
mov
nop
jb
jno
pop
scas
int3
insb
lods
mov
jg
movsb
loop
push
fwait
cmp
cmp
negb
clc
rorb
add
push
add
dec
mov
sbb
lahf
stc
pushf
nop
out
cld
push
aas
sarl
adc
jle
jae
imul
jmp
cmp
je
sarl
hlt
into
ds
mov
mov
loopne
dec
sbb
ret
xchg
lea
xchg
sub
test
sub
decb
lods
and
leave
lcall
in
out
sub
stos
sub
scas
inc
lods
pop
test
mov
lahf
orl
adc
and
pop
lods
mov
and
pop
pushf
movl
jno
iret
mov
pop
cmpsb
outsb
dec
mov
test
xchg
neg
cmp
into
shrl
or
mov
push
inc
test
jmp
orl
or
cltd
data16
and
imul
in
popf
out
aaa
lock
push
stos
pusha
xchg
es
fisubs
or
mov
pop
das
or
out
push
ds
xchg
cli
aas
push
arpl
repz
dec
fcoml
fnsave
cmp
xlat
insb
mov
adc
or
or
push
push
ja
mov
mov
outsl
addr16
iret
xchg
xchg
fidivs
cli
popa
push
sub
ss
lret
subl
xlat
pop
pop
jle
shrb
xor
lcall
fnstsw
lcall
sbb
jecxz
add
cmpsb
outsl
lahf
popa
rorl
adc
call
add
lret
addr16
adc
popf
loope
xlat
dec
jae
cmp
rolb
mov
stc
lods
xchg
jbe
cmp
inc
cmp
sub
lret
xorl
sub
addb
test
and
cmp
add
xchg
cmpsl
lahf
jns
mov
cmp
fisttps
loop
ret
and
data16
out
and
push
setle
out
jne
insb
test
or
loop
or
out
inc
std
fldcw
ljmp
rcrb
add
mov
sub
jecxz
mov
test
mov
xchg
add
insb
mov
or
and
mov
gs
fnstenv
mov
xlat
push
mov
sub
in
pop
aaa
int3
lret
subb
cmp
jle
inc
div
jae
xor
ror
inc
adc
pushf
ret
insl
mov
sbb
in
es
lret
loopne
xchg
push
clc
fisttpl
sti
push
pop
pop
add
lods
shl
cli
cmp
sbb
fs
popa
adc
pop
mov
adc
inc
sbb
nop
jg
movsl
shl
and
mov
add
xor
pop
or
mov
mov
or
mov
test
in
shll
and
int3
adc
adc
adc
scas
in
gs
xor
sub
add
dec
or
and
adc
mov
les
outsl
push
insb
dec
or
sti
pop
loopne
shll
or
gs
dec
shr
jne
mov
push
stc
jnp
pop
adc
mov
faddl
sbb
mov
jl
in
mov
sub
in
or
jbe
mov
cmpsl
adc
mov
pushf
xchg
lds
xchg
or
sub
jl
nop
add
cli
aam
xchg
popw
or
sub
lods
and
cmc
mov
movsb
sarl
jo,pt
js
mov
int3
add
js
rcrl
sar
sbb
jne
pop
int
mov
mov
push
lds
scas
mov
xchg
pop
rcr
or
sub
pusha
lahf
push
pop
not
andb
mov
ljmp
xchg
iret
or
shll
mov
aas
fs
pusha
dec
mov
add
and
ret
fstpt
push
movsb
aas
xor
lcall
stos
out
xchg
cwtl
dec
imul
jnp
pushf
jno
jge
mov
push
or
jb
xchg
adc
shl
inc
daa
enter
pop
rorl
push
decl
aaa
push
fs
arpl
dec
in
daa
daa
and
jns
fidivrl
mov
xchg
pop
pop
jne
loopne
mov
sub
xchg
mov
add
dec
add
xchg
adc
int3
cli
pushf
sbb
and
in
mov
pusha
cmpsl
in
jbe
lret
sub
or
sbb
cli
lahf
pop
insb
sub
jnp
scas
pop
pop
and
push
pop
sbb
sub
mov
adc
inc
pop
out
sub
ja
push
push
pop
xor
mov
pop
das
js
jg
insl
jl
inc
xor
mov
xchg
or
inc
mov
jge
and
jbe
mov
pop
lods
hlt
mov
sbb
xchg
and
add
xor
int3
mov
lahf
add
stos
rclb
rolb
sub
pop
ret
lea
adc
in
hlt
pushf
xchg
and
cmp
adc
dec
idiv
insb
addr16
inc
adc
dec
js
test
scas
shll
movsb
pop
cld
leave
icebp
fcompl
stc
add
or
jno
adc
xor
or
add
push
lods
movsw
cltd
repz
rcll
mov
xlat
fisubl
xor
mov
incl
std
aaa
ret
lods
sub
fstpl
push
adc
das
cld
cmpsb
sub
cwtl
test
jne
inc
and
or
loopne
and
movsb
adc
adc
adcl
loope
push
sbb
daa
sahf
lret
cmp
call
and
or
enter
mov
cmpsl
cmp
xor
imul
out
je
add
fiaddl
mov
mov
in
jge
lods
dec
inc
filds
out
lret
xchg
fildl
lcall
fnsave
aad
cld
mov
cmp
mov
es
movsb
imul
mov
pop
dec
adc
fwait
out
push
sbb
js
and
jle
lcall
dec
cmpsb
mov
or
mov
cli
xchg
add
mov
pop
dec
es
mov
cmp
subb
iret
dec
dec
dec
sub
push
dec
pop
adc
out
mov
shlb
mov
in
mov
rcl
out
inc
dec
and
mov
test
sub
ret
leave
movsl
dec
rorl
imul
jge
sbb
ljmp
xchg
movsl
hlt
nop
mov
xchg
sub
loopne
mov
ret
mov
stos
testl
mov
xchg
gs
sbb
fisubrl
out
xchg
mov
lea
fdivs
lods
psubw
push
xor
xor
jmp
push
push
add
or
push
jb
sub
inc
aaa
push
push
cmp
inc
pushf
cmp
adcb
push
or
push
fcomps
xchg
jno
mov
mov
mov
addr16
push
mov
fisubrs
mov
into
adc
mov
out
shl
andl
shlb
cmp
jecxz
inc
dec
mov
cmp
sbb
insb
out
mov
mov
shll
lea
pop
push
loop
je
dec
ret
xlat
shrl
imulb
xchg
and
dec
aaa
dec
mov
cltd
arpl
rcll
iret
cmp
or
orb
sub
adc
or
mov
fsub
xchg
mov
mov
pop
xor
out
ljmp
jle
pop
pop
xchg
sub
jecxz
mov
jo
sub
adc
and
repnz
call
add
xchg
rorb
jl
insl
jo
push
ljmp
and
push
mov
xchg
dec
mov
cltd
sahf
jno
lods
sbb
mov
andl
call
cs
mov
mov
pop
adc
jno
sub
aad
mov
insl
mov
cld
adc
pusha
sub
test
insb
add
xchg
push
fisttpl
test
inc
test
fmuls
push
mov
daa
adcl
fidivs
jmp
jbe
js
shll
in
jne
out
lock
mov
adc
xor
sub
mov
lret
rclb
cli
cmp
mov
adc
lea
xor
mov
pusha
test
fdivl
dec
inc
xchg
jmp
xlat
jp
sbb
push
rcrb
jb,pn
add
sbb
push
cmp
aam
or
shlb
sub
lcall
pushf
je
mov
xchg
fmuls
push
js
outsl
sbb
dec
push
xchg
or
inc
pop
or
lea
mov
imul
aas
lds
and
jae
sub
jo
leave
movsl
movsb
fnsave
daa
cmp
xchg
pop
or
dec
mov
ret
lods
mov
adc
and
dec
pop
ret
int
shll
cmp
lcall
dec
xor
ss
dec
add
test
in
outsl
inc
add
push
ss
pop
jnp
add
shll
xor
xor
mov
mov
in
in
cwtl
add
pushf
insb
or
adc
pop
mov
and
jg
xor
jecxz
add
adcb
sub
and
mov
pop
xlat
xchg
jns
jnp
repnz
adc
inc
insb
dec
jno
add
int
push
insl
push
inc
jnp
jns
loope
adc
popf
ja
jns
cs
pop
jns
or
push
inc
mov
dec
stos
pop
sub
xchg
sub
test
cmp
adc
shr
inc
push
imul
xor
xchg
jmp
fcompl
push
push
inc
pop
pop
push
and
test
adc
add
mov
mov
cli
sarb
xchg
xor
jge
or
lcall
push
fs
ljmp
sete
xor
xlat
add
xor
sarb
loop
inc
jge
sub
addr16
daa
notl
push
sbb
inc
int
pop
mov
mov
pop
mov
repnz
jno
jge
mov
add
or
enter
and
pop
and
and
xchg
jmp
aam
lds
sti
mov
ds
xchg
cmpsb
jno
cmp
cmp
shrb
cmp
fwait
inc
fcmovnbe
in
cmp
jns
shr
lods
jp
xchg
cltd
or
cmp
pop
hlt
or
aad
std
inc
cmp
jne
pop
cmc
ja
jbe
sub
and
cltd
flds
flds
or
rorl
mov
jb
inc
pop
jnp
jp
jmp
add
mov
ficompl
out
xchg
pusha
rorw
cmpsb
out
jle
xchg
mov
mov
aam
daa
clc
sti
aas
fwait
stos
sbbl
fistps
dec
aad
rclb
and
sub
adc
and
add
xor
in
adc
dec
pop
insl
fs
and
xor
pop
and
jno
leave
loope
push
cmp
xchg
mov
pop
aaa
cmp
inc
orl
dec
and
out
sub
or
add
or
or
sbb
pop
inc
xchg
jbe
movsb
out
sahf
gs
popa
mov
rolb
mov
push
push
push
idivb
mov
pop
xchg
repz
dec
loopne
sbbb
loopne
loopne
sub
cli
add
aad
sahf
aad
or
ljmp
lock
test
jo
fbld
cmp
mov
xchg
pusha
and
dec
idivb
push
repnz
leave
dec
fcompl
inc
xor
movsl
and
ret
fnstenv
lcall
and
lds
adc
mov
ficomps
sub
mov
pop
arpl
hlt
aam
sub
lretw
insl
mov
arpl
gs
mov
mov
pop
xor
subb
mov
or
jl
push
sub
mov
sbb
inc
sbb
jg
adc
push
fwait
mov
or
imul
lods
sti
sbb
sub
xchg
adc
xchg
jecxz
stc
ja
pop
add
inc
mov
cmp
mov
and
dec
outsb
and
jns
addr16
movsb
call
into
push
or
es
jne
pavgb
cmp
xchg
add
mov
ret
imul
sarb
aas
xchg
loopne
xchg
mov
mov
addr16
xchg
lahf
out
das
push
ja
push
or
push
aam
inc
dec
or
mov
mov
outsl
repz
adc
and
pop
inc
sub
lret
xchg
jmp
loope
sbb
jne
dec
fdivl
scas
int3
fmull
mov
mov
adc
add
xchg
add
xchg
jne
out
ja
popf
jnp
rol
sbb
cld
xchg
jge
pop
jae
mov
clc
push
cmp
out
icebp
repz
movsl
pop
push
xlat
test
ds
or
rcl
dec
or
sub
jbe
ja
inc
lret
push
xchg
daa
push
pop
repz
pop
outsb
imul
ret
imul
pop
pop
jl
pusha
pop
mov
cmp
or
pop
outsl
jecxz
nop
cmp
xchg
arpl
lcall
loopne
push
fistl
shll
mov
call
or
mov
fnsave
jbe
insl
shll
lods
popf
mov
xchg
bound
daa
xchg
mov
testl
xchg
lahf
inc
sbb
idivb
push
xor
aas
out
or
rolb
fists
pop
jns
les
test
xchg
cmp
mov
dec
dec
inc
xchg
jp
test
mov
xchg
cmp
fcompl
hlt
mov
dec
mov
or
dec
paddusw
pop
pop
mov
bound
es
and
sti
adc
test
es
pop
dec
sbb
mov
pushf
ja
inc
sbb
movsl
dec
cltd
ret
dec
mov
loop
lret
or
cltd
and
add
add
stos
loope
scas
leave
popl
lea
enter
mov
mov
xchg
subl
jp
push
dec
movsb
jle
mov
pop
xchg
das
xchg
lret
stos
sub
ds
into
pop
mov
adc
iret
fstl
in
mov
pop
jg
mov
push
sti
sti
dec
xchg
pop
fiaddl
mov
std
xchg
add
fsubl
lcall
jecxz
inc
push
add
jo
das
aad
cli
jo
loop
lret
or
pusha
pop
jns
jle
mov
sahf
jg
sub
pusha
cmpsb
stos
mov
imul
and
and
repnz
inc
mov
enter
dec
cli
or
out
out
mov
jnp
xor
in
adc
ljmp
xor
push
in
cmp
xstore-rng
cmpsl
inc
mov
sti
testl
or
shll
pop
out
xor
es
outsl
movsl
pop
sbb
xchg
and
or
aam
and
sub
mov
scas
xchg
mov
lcall
cli
adc
mov
call
jecxz
cli
icebp
lcall
dec
push
inc
sbb
pusha
ss
pop
imul
outsl
dec
sbb
lret
repz
inc
jg
and
js
setle
not
out
inc
mov
pop
stos
pop
pop
fcomip
adc
mov
dec
mov
xchg
pop
sub
je
and
mov
push
mov
aas
xchg
mov
aas
dec
jo
sbb
daa
cmp
scas
mov
lds
sahf
mov
add
cmp
popa
sbb
clc
std
test
imull
mov
out
xchg
sahf
jp
and
loop
aam
or
sti
mov
adc
scas
xchg
into
repnz
outsl
adc
jle
inc
ss
lret
jae
mov
aaa
es
jg
sbb
int3
dec
gs
in
cmpsl
add
lcall
ret
xchg
insl
xchg
lret
ja
pop
mov
leave
nop
adc
xor
arpl
inc
dec
xchg
ret
cmp
jecxz
icebp
pop
xor
push
mov
mov
jg
adc
pop
in
jne
addl
mov
int
inc
pop
hlt
shlb
xchg
jp
psubw
ljmp
adc
aam
addl
iret
std
dec
out
je
cld
ljmp
jne
in
inc
mov
push
cmp
xor
outsb
scas
mov
inc
xchg
je
aam
cmc
dec
jnp
cli
inc
loop
repz
or
arpl
sti
popf
icebp
loop
in
push
jnp
xchg
and
mov
cwtl
loope
push
jmp
dec
xor
or
addb
ss
and
xlat
inc
inc
pop
inc
sti
loop
inc
push
mov
cmp
data16
sbb
jp
dec
push
outsb
ret
loope
pop
sbb
or
imul
scas
push
sbb
dec
insl
xchg
movsb
cmpsl
ss
nop
mov
in
mov
lret
lds
imul
mov
add
adc
test
out
push
sub
and
sbb
mov
lea
jmp
jno
xor
cmp
xchg
jg
ss
test
pop
nop
pop
sbb
adc
xchg
nop
into
xor
div
mov
fcoml
out
stos
or
stos
and
sbb
scas
push
cli
push
xchg
out
lods
fnsave
and
clc
pop
xor
xchg
jbe
push
push
dec
ret
jl
mov
fdivl
mov
jnp
daa
dec
rcl
dec
xchg
xor
repnz
jb
test
rol
cmp
inc
mov
cli
xchg
test
dec
bound
daa
movsb
adc
loope
sbb
lods
lret
fcom
fs
cs
or
or
dec
sbb
in
add
popa
pop
adc
or
jbe
dec
jnp
das
mov
and
outsl
adc
dec
lcall
dec
xor
sbb
lret
data16
cmp
les
and
enter
mov
int3
add
mov
cmp
in
lret
aam
out
mov
pusha
cmp
ret
ljmp
xchg
test
sub
mov
int
mov
lret
mov
mov
sbb
xor
out
cmpsl
lret
push
inc
sbb
pop
testl
icebp
sbb
cmp
xor
mov
jl
loopne
mov
data16
es
push
cmp
leave
into
mov
jecxz
jno
add
rorb
stos
sub
dec
sti
mov
xchg
fistpl
daa
pushl
enter
sbb
sbb
pop
sbb
sub
mov
popf
xor
pop
imul
sbb
jg
aaa
or
aam
pop
mov
cmp
sub
sub
add
sti
dec
jge
jecxz
cmp
push
enter
insl
movsl
adc
scas
push
mov
sti
cmp
pop
inc
sahf
inc
cmp
leave
jl
repz
adc
addb
int
mov
daa
dec
cmc
ret
mov
mov
fsts
rcl
mov
pop
and
mov
fildl
add
sahf
add
xor
fwait
gs
ret
dec
push
aaa
and
scas
inc
nop
add
or
push
mov
lcall
mov
jle
sub
xchg
xchg
fsubrs
dec
xchg
push
jno
pushf
push
adc
gs
cmc
xchg
int
adc
sbb
mov
dec
xor
mov
sti
mov
cmp
jg
int3
dec
out
es
cmp
push
cltd
dec
adc
gs
popf
xor
in
nop
shr
dec
inc
xchg
outsl
stos
xchg
jle
jg
or
out
cwtl
push
push
pop
inc
sbb
mov
or
adc
xor
inc
adc
push
aas
xchg
cmp
inc
pop
push
push
aad
mov
xor
mov
aad
mov
xor
jnp
mov
fs
push
movsl
out
lds
out
mov
lods
rcl
cmpsb
inc
mov
pop
xchg
hlt
inc
jbe
std
sbb
in
push
mov
mov
xchg
enter
je
mov
popf
pop
mov
mov
inc
xchg
mov
dec
xor
push
movsl
hlt
xor
into
movsb
xchg
aad
icebp
int3
iret
jg
jo
arpl
and
call
fiadds
dec
and
push
push
fwait
test
sub
adc
push
xchg
or
mov
dec
adc
int
fidivrl
mov
addr16
jl
cmpsb
sbb
shl
add
mov
and
sub
lret
jmp
mov
aaa
arpl
or
mov
cs
jecxz
fsts
inc
push
bound
scas
dec
cmc
jl
xchg
aaa
cmp
sub
pop
dec
daa
out
mov
in
add
mov
pop
out
push
push
push
aad
jle
lcall
sbb
loope
mov
out
inc
sub
sub
test
xchg
jne
repnz
pop
pop
orl
into
inc
notb
mov
ror
push
push
sti
mov
cltd
cs
and
fldcw
std
negb
cli
imul
or
sti
aas
daa
pop
mov
lods
ss
cli
fs
stos
cmp
push
fwait
addr16
imul
add
pop
or
mov
lahf
adc
sarl
mov
incb
pop
mov
int3
and
cmc
lret
lahf
arpl
add
psrlw
aad
xchg
iret
mov
adcb
gs
push
add
mull
icebp
fs
mov
dec
pop
fldl
jle
popa
out
aam
jae
test
add
mov
or
or
mov
fwait
clc
popa
in
pop
insb
test
not
mov
dec
test
xchg
fcomps
dec
jo
add
sahf
test
popf
call
cmp
push
orb
jns
shlb
cld
add
pop
sbb
and
xor
sub
inc
fstp
cwtl
rolb
mov
repz
int3
clc
sbb
insb
lds
js
add
daa
xchg
adc
cmp
and
xor
sbb
stc
outsl
add
test
pop
push
aam
int3
or
jle
sub
lds
lods
fidivs
mov
daa
dec
jl
mov
mov
add
jecxz
inc
dec
and
gs
xlat
jbe
repnz
sub
mov
das
dec
jno
push
mov
inc
add
addb
in
cli
cs
xchg
lret
jns
outsb
xchg
rcl
xchg
aad
adc
les
aas
sbb
js
mov
xchg
lods
dec
cmp
aad
push
pop
lcall
insb
dec
push
sbb
push
inc
jb
into
mov
xor
push
inc
jg
cmp
mov
push
repnz
push
jmp
jecxz
mov
and
ficomps
addl
aad
cmpsl
mov
dec
jnp
mov
rclb
stos
stc
lahf
aam
repnz
sarl
test
pop
movsl
cmp
outsb
ret
stos
mov
out
cmp
pop
mov
mov
int3
ss
sub
xor
push
dec
movb
lea
imul
scas
mov
pop
jne
pop
jo
lret
imul
jns
or
sub
mov
mov
lcall
nop
addr16
mov
es
pusha
loope
jg
std
sub
mov
fstpt
fcoml
jae
loope
cmc
test
popf
sub
scas
shlb
or
ret
cmp
cld
sbb
pop
shll
hlt
cmpl
inc
repnz
mov
mov
mov
test
add
repnz
xchg
mov
andl
mov
cmp
repz
cmc
sub
sub
xor
mov
pop
mov
iret
rcrl
pop
sub
mov
mov
out
inc
inc
adc
or
movsb
call
cmpsl
repz
mov
sbb
sub
sub
nop
cmp
popf
rcrl
mov
out
cmpsl
xchg
or
xchg
in
ss
dec
or
fs
pop
loopne
adc
add
out
leave
out
cmp
es
enter
mov
push
dec
lret
lret
xchg
cmpsb
cmc
sbb
pop
add
jne
addr16
mov
pop
xor
jl
ss
frstor
sar
xchg
add
jb
js
xchg
sbb
pop
dec
fisubrs
lahf
into
or
dec
clc
mov
insb
adc
ret
xchg
imul
shlb
push
shrb
xor
addr16
xor
cld
andb
pushf
pop
dec
cmpsb
mov
scas
mov
loopne
mov
je
fildl
aaa
sbb
mov
dec
inc
fwait
lds
or
xchg
mov
in
fs
mov
faddl
sub
pop
cltd
loop
and
adcb
xor
inc
cmp
repnz
lea
inc
enter
repz
jae
jmp
outsb
pop
mov
add
pushf
cmp
mov
mov
and
jmp
push
mov
inc
dec
shl
repz
jne
inc
adc
aaa
jmp
shlb
loopne
xchg
out
cmc
sbb
scas
adc
push
mov
call
mov
pop
jno
xchg
mov
ret
cltd
pop
inc
push
mov
arpl
les
fnstsw
imul
mov
ret
push
cmp
pop
fnstenv
adc
popa
bound
scas
mov
pop
in
jns
sbb
aas
std
aaa
out
mov
cmp
pusha
aam
mov
iret
xchg
push
insb
add
pushf
jo
xor
or
push
lahf
push
insb
ret
test
cmp
int
mov
aad
and
ss
xor
inc
test
call
and
pop
push
shr
fwait
dec
xchg
out
dec
shrl
scas
adc
jno
ja
push
loope
jns
aam
xchg
mov
fisubl
jle
and
cmpsl
int
pop
jne
and
sub
add
fisttpll
in
lods
test
jb
test
and
addl
jmp
jae
push
xchg
pushf
movsl
pop
aas
inc
push
xchg
jne
bound
test
xchg
sbb
adc
or
mov
sbb
jbe
push
and
jns
mov
int3
add
pusha
dec
es
adc
cli
lahf
push
or
fst
xchg
loop
test
mov
sub
nop
xchg
dec
sub
cs
sbb
xchg
push
mov
bswap
out
adc
xchg
cmp
or
sbbb
roll
outsl
cmp
cmp
pop
xor
or
mov
xchg
sbb
incl
mov
std
adc
jae
insb
jmp
inc
sbb
inc
add
mov
lea
mov
imul
jl
jl
xchg
push
cmc
lods
lea
pop
jg
daa
xchg
inc
orb
mov
add
daa
adc
push
and
cmp
out
sbb
mov
inc
fwait
in
push
adc
mov
mov
sti
call
loop
call
xor
insl
inc
add
dec
into
scas
push
cmp
xor
adc
out
hlt
mov
mov
imul
pop
xchg
jne
mov
test
ljmp
ljmp
xor
xchg
insl
notb
enter
out
scas
fdivs
aam
fcoms
add
push
jl
fnstsw
push
fcomp
lret
outsl
jmp
push
sbbl
jl
mov
sbb
xor
mov
pop
xor
cmp
pop
push
add
mov
testb
and
pop
adc
mov
outsb
lcall
cs
cmpsb
lret
xchg
es
sti
loopne
sub
and
adc
mov
pop
pop
push
ja
scas
dec
mov
lea
fdivrl
xchg
nop
fisttps
push
nop
mov
pop
fcomps
scas
push
sbb
fwait
jae
mov
jne
rolb
fimull
cmc
mov
pop
in
lods
lods
push
subl
xor
ja
jno
jl
push
je
push
aad
pop
sti
int3
sub
jmp
cmp
mov
fs
xor
ret
aas
sub
or
movsb
aaa
mov
and
pop
insb
mov
aaa
lea
adc
cld
pop
inc
test
push
sub
xor
rorb
test
cmpsb
iret
add
lret
mov
std
daa
and
sahf
push
cmp
and
jns
jg
dec
ret
mov
js
lea
mov
xchg
lcall
pop
cmpsb
in
mov
add
sahf
cli
xchg
int
mov
imulb
push
es
push
cmp
or
and
or
push
loope
xbegin
les
aas
adc
xor
leave
imul
lock
mov
mov
fcmovb
pop
pop
ret
in
inc
fsqrt
xchg
push
add
xor
pop
adc
out
xor
lret
jecxz
add
ja
sti
fistps
stc
xor
movb
lret
adc
mov
jle
movsb
flds
mov
mov
mov
or
int3
push
inc
sbb
push
pop
xor
sbb
cmp
fs
in
or
outsb
ss
mov
repnz
or
or
pop
add
fwait
mov
pop
lcall
jge
in
icebp
popa
inc
mov
or
lahf
jno
push
dec
test
adc
inc
jbe
add
mov
dec
push
andl
push
jmp
cmp
out
push
fimuls
mov
fstpt
out
xchg
dec
mov
adc
adc
push
je
adc
shlb
cmp
and
push
dec
mov
daa
push
mov
jmp
pop
and
lock
lea
ds
mov
mov
icebp
icebp
cmpsb
mov
mov
imulb
lea
mov
sub
rolb
cltd
jmp
loopne
push
add
fucomi
or
push
jmp
loope
lds
js
push
xchg
adc
mov
xchg
cmp
lods
cli
sbb
adc
push
or
mov
jle
scas
dec
xor
jp
in
lea
lds
adc
xchg
or
loop
jnp
sbb
dec
cmp
cltd
xchg
fwait
mov
jg
outsb
add
or
mov
mov
mov
or
xchg
das
andb
cltd
mov
sub
out
ja
pusha
int
fdivs
int3
bound
in
and
fsubs
seto
jl
or
dec
call
cld
vmwrite
shrb
lods
lock
push
and
sub
inc
rolb
nop
out
mov
and
xor
cmp
cwtl
imull
mov
fs
jb
pcmpeqb
xchg
out
jnp
pop
jecxz
pushf
stc
push
fsub
pop
mov
or
and
adc
pop
adc
imulb
shrb
fwait
or
int3
sub
das
xor
adc
push
xchg
pop
and
jmp
lods
ljmp
fiaddl
jle
sbb
sbb
loopne
adc
push
xor
popa
sbb
stc
xor
aad
stos
push
xchg
pop
ds
push
cmpsl
mov
loope
ret
mov
ret
jecxz
test
mov
gs
adc
mov
icebp
jecxz
insb
mov
cli
and
jle
xor
fisubrs
mov
lds
lret
mov
movl
imul
rorb
sarl
jecxz
pop
push
jle
aam
dec
push
into
out
outsb
jge
hlt
daa
bswap
xchg
or
movsb
hlt
pop
dec
mov
and
xchg
cmp
push
test
repz
cmp
push
mov
or
or
movsl
leave
imul
stos
fnstsw
stc
xor
lods
pop
and
jns
mov
sti
arpl
xorb
rolb
or
lahf
addl
xchg
aad
jae
xlat
nop
cmc
add
lods
inc
push
subb
mov
xchg
pusha
popa
mov
xor
loope
or
ret
lcall
stos
es
lea
or
and
mov
xchg
divb
fidivs
mov
out
sbb
jecxz
je
es
addr16
or
push
mov
push
cltd
cmp
adc
setns
pop
dec
pop
aad
push
out
sbb
pusha
out
push
pop
shlb
or
dec
adcb
fidivrs
dec
cld
popa
xor
or
stos
lret
push
mov
xor
repnz
iret
int3
inc
pop
repz
sbb
xchg
pop
or
lret
or
adc
fnstsw
hlt
movsl
pushw
pushf
mov
fcomp
pusha
lcall
lret
scas
pusha
ror
xchg
aam
icebp
pop
aad
testb
test
sub
imul
pop
xlat
js
divl
fwait
shl
test
or
pop
ret
int
xchg
cmc
mov
xor
lahf
fmulp
iret
inc
sti
push
mov
jo
clc
cmova
loope
idivl
mov
in
mov
jp
stos
mov
lea
dec
icebp
mov
cmp
push
sti
rcrl
test
and
pop
aam
add
aad
push
out
sahf
daa
in
inc
xor
mov
cmp
mov
aaa
sbb
scas
lock
movsb
inc
add
int
push
cmp
cmp
cmpsb
push
aad
or
pop
xor
cmp
and
loopne
loopne
xchg
adc
xor
out
xchg
andb
lret
pop
sbb
loope
mov
out
adc
das
jae
mov
mov
aam
xor
mov
aas
push
gs
and
add
ret
ss
in
fwait
dec
push
fbld
and
aad
push
decl
lock
mov
bound
call
pushf
or
sbb
inc
push
jbe
dec
insb
xor
jne
or
xchg
aam
and
or
gs
push
or
inc
cmp
sbb
ret
xchg
repnz
and
out
sbb
xchg
add
pop
out
or
mov
jp
pop
inc
add
lahf
xor
pushf
sub
leave
push
mov
cmp
jae
dec
jns
lds
sbb
andl
and
lds
movsb
dec
add
int3
in
dec
shlb
jmp
cmp
xchg
xchg
jmp
scas
push
outsb
insl
xchg
mov
xor
mov
push
fs
jge
popa
rcrb
mov
inc
or
push
xchg
in
cmpsb
push
cmp
lods
popa
arpl
mov
push
cwtl
and
jle
clc
sbb
xor
fcompl
jmp
clc
icebp
test
mov
jg
pop
addr16
inc
or
push
call
sbb
aad
mov
pop
pop
leave
push
xorb
adc
mov
push
movsb
es
stos
push
lahf
mov
jmp
push
shlb
outsb
push
movsb
mov
shl
ret
jb
cmp
movsb
mov
xchg
xorb
or
out
lea
and
mov
ja
cmp
sti
add
xor
sahf
std
addl
orb
stos
cmpsl
icebp
loopne
inc
xlat
movsb
fwait
push
xchg
sbb
mov
adc
iret
push
mov
push
lret
inc
in
add
lds
movsb
pop
fcompl
adc
xlat
addr16
cmp
addl
sti
cld
inc
dec
fs
push
mov
pop
inc
push
xchg
ret
xchg
dec
adc
dec
jle
clc
jge
pop
cwtl
cmp
mov
rcrl
jb
add
xchg
push
sub
lahf
or
push
pop
sbb
into
push
xchg
inc
mov
jb
into
subb
mov
jns
and
jmp
push
icebp
in
xchg
lret
mov
ret
add
pop
rol
mov
push
push
adc
pop
stos
ss
rorl
fadd
dec
push
push
sbb
pop
movsb
cld
mov
push
mov
iret
out
inc
lods
mov
loopne
cmp
popa
pop
push
xor
push
and
outsb
sahf
sub
into
aaa
insl
jp
pop
dec
or
xor
rcl
lds
xor
push
rolb
arpl
data16
stc
int
push
pop
pop
shll
mov
xor
xchg
or
cli
jl
dec
cld
daa
jge
mov
cmc
push
sar
leave
push
dec
mov
test
arpl
andl
dec
sti
ss
les
pop
scas
push
mov
sub
rep
mov
mov
xchg
xor
cmp
jecxz
flds
xchg
mov
loop
sub
nop
xor
into
jecxz
xor
bnd
cli
pushf
lcall
pop
xlat
stc
mov
ret
mov
xlat
js
sbb
push
test
mov
adc
xor
int3
mov
cmpsl
out
dec
in
fucomi
and
dec
enter
xchg
inc
adc
mov
mov
das
and
pop
xor
pop
add
js
test
jg
mov
pop
push
mov
shll
inc
cmp
mov
xor
jg
sub
jno
pop
test
iret
int
xor
les
aad
sub
pop
mov
and
js
adc
lret
pop
neg
mov
pop
enter
fmull
lds
sub
dec
clc
push
add
sub
sbb
adc
nop
and
sub
dec
cmpsl
mov
add
addr16
inc
je
and
add
mov
pop
in
push
into
aas
mov
rolb
cmpsl
dec
lret
jo
mov
mov
in
icebp
xchg
sub
jae
push
xchg
and
xchg
mov
aas
cli
xor
inc
xor
movsl
mov
outsl
mov
dec
pop
adc
mov
ja
push
adc
xor
addb
cld
xchg
sbb
das
nop
xor
pop
adc
jecxz
or
or
imul
ljmp
out
loop
add
push
adcb
push
movsl
dec
fisubl
stos
mov
jno
push
test
loopne
add
clc
outsl
shrl
dec
shl
fistpl
jne
clc
dec
test
mov
xor
scas
frstor
leave
mov
push
fsts
jecxz
fistps
int
jnp
das
mov
rcr
inc
dec
js
cs
stos
pusha
jae
out
adc
mov
add
pop
xor
add
rclb
mov
sub
std
cmp
dec
mov
jle
mov
iret
xorl
fucomi
in
les
loop
sub
testl
iret
add
push
stos
sub
jb
mov
stos
loop
dec
outsb
call
sub
jns
stos
xchg
xchg
push
xorl
mov
sub
adc
inc
ret
loop
or
cwtl
scas
cwtl
aaa
pop
cs
les
enter
mov
pop
adc
in
inc
cmp
rol
xchg
repz
sahf
movsb
cmp
repz
xlat
inc
lock
sub
lahf
pop
cmp
xchg
fdivrl
mov
sti
and
push
jp
in
hlt
add
inc
cmp
jmp
icebp
add
outsl
xchg
stos
movsb
or
xor
mov
push
outsb
jg
mov
insb
js
dec
pop
lea
or
pop
adc
ror
sub
jp
in
out
pop
add
stos
aas
mov
movsb
lret
pop
push
sarb
inc
and
jp
and
xorl
fiadds
cmp
das
ds
inc
mov
or
movsl
mov
sbb
enter
lcall
xchg
jmp
jmp
adc
ljmp
cmp
cmc
sub
inc
in
aas
jp
jb
sti
adc
xchg
add
ret
sbb
enter
jbe
pop
cmp
ja
mov
movsl
les
push
push
pushf
dec
jne
jecxz
rcr
imul
ret
cld
push
loop
inc
daa
cmpsl
jae
negl
sti
mov
sub
sub
roll
lcall
mov
lods
xlat
or
push
adc
jno
xor
inc
jnp
mov
fucomip
and
pop
jp
movsb
or
inc
iret
or
ret
adc
xchg
lds
in
or
sbb
xchg
inc
jmp
pop
mov
stos
lock
lods
dec
test
cmp
call
scas
lock
loope
jne
fsts
mov
sbb
in
aad
hlt
mov
cmp
outsl
pop
iret
xchg
pusha
lret
addr16
xorl
inc
lret
sbb
scas
dec
inc
js
cmovg
es
mov
ljmp
fucom
lret
addr16
sbb
push
xchg
mov
leave
or
scas
in
jae,pt
xchg
and
ds
popa
dec
sbb
lods
inc
or
add
jl
insb
mov
push
subl
jno
mov
leave
out
push
adc
push
ret
movsb
call
sub
sub
out
icebp
mov
mov
cmp
lods
add
jp
rcrb
xchg
mov
mov
jge
push
dec
and
nop
loopne
jl
push
negl
cmp
dec
jae
jns
clc
jle
add
mov
loope
cwtl
arpl
xchg
fbstp
aam
and
pop
dec
or
fstpl
leave
arpl
adc
sti
fs
pusha
inc
xchg
es
jmp
pushl
in
fidivs
mov
les
ss
or
shl
mov
pop
mov
lds
lds
xlat
inc
xor
push
sbb
jl
pusha
sub
xchg
lock
lahf
addr16
cmp
dec
pushl
test
into
seta
mov
lods
imul
xlat
mov
nop
push
fdivrs
pop
outsl
xchg
jg
adc
inc
gs
sbbl
daa
stc
mov
inc
pop
cmp
sbb
fs
mov
inc
nop
sbb
stos
dec
cmp
je
push
xlat
sub
iret
imul
mov
sub
daa
in
and
cmpsl
jbe
sti
je
outsl
jns
cmpsl
fs
adc
inc
push
add
pop
cmp
movsb
adc
test
mov
repnz
aaa
add
idivl
hlt
push
aaa
leave
sub
mov
mov
xchg
inc
int3
dec
xchg
xchg
subb
iret
or
popa
test
sbb
cltd
mov
dec
push
add
xor
lods
sbb
adc
aaa
jae
loope
in
lret
sahf
aad
pop
movsb
leave
clc
xor
xor
inc
aaa
dec
bound
sbb
sbb
jb
mov
lret
and
out
test
sub
sarl
jns
icebp
int
dec
loope
push
fwait
aaa
sub
push
mov
inc
push
iret
push
sub
loopne
out
push
or
ss
lcall
out
mov
jne
lahf
int
jl
cwtl
cmp
cmp
xchg
jb
mov
fscale
or
mov
jns
xchg
popa
pop
mov
iret
add
ds
popl
pop
or
and
adc
xchg
dec
out
add
pop
jmp
out
test
mov
andb
push
stc
pop
push
pop
add
cmc
lock
int
dec
fcomi
mov
pop
nop
push
mov
dec
push
sahf
das
xlat
pop
insl
xchg
stos
aaa
loope
jp
xor
out
sbb
mov
pop
push
lea
andb
outsb
push
mov
sub
cmp
push
repz
cwtl
popf
inc
pushl
push
sbb
jecxz
orb
jae
cld
inc
mov
push
push
cmp
cmc
xlat
mov
or
mov
bound
test
daa
out
mov
scas
mov
inc
mov
mov
pop
ret
data16
sbb
mov
int3
loope
sub
je
jp
mov
mov
int3
fwait
mov
push
es
in
out
outsl
out
add
loopne
sahf
std
mov
popf
andb
repz
inc
mov
cmp
sub
lret
jne
xchg
lds
jno
andb
fstpt
adcl
cltd
jnp
ret
pcmpgtd
add
cmpsb
aad
cmp
pop
mov
mov
les
sti
xor
dec
jmp
fisubrs
lahf
fdivrs
push
add
pushf
adc
mov
jmp
daa
cmpsl
enter
sbb
inc
pop
mov
sub
pop
imul
mov
xchg
pop
push
dec
out
js
in
xchg
jp
lahf
pop
xchg
add
into
ljmp
inc
shll
lock
or
ja
sbb
mov
dec
rol
dec
jge
mov
jge
cmp
pusha
jbe
add
pop
jb
pop
out
adc
inc
daa
les
inc
and
iret
movb
add
pop
ret
int
push
and
insl
les
lds
and
cwtl
sbb
loop
sbbl
lahf
fistpll
int3
cltd
incl
push
add
cmpsl
shlb
ret
inc
js
mov
sub
jecxz
mov
movsb
lock
into
mov
hlt
xor
negb
mov
mov
mov
push
nop
mov
mov
pop
fildll
xor
shlb
inc
into
dec
jge
gs
int
dec
repnz
pop
sub
jae
loopne
test
cmpsb
es
mov
jbe
pop
inc
pop
jne
cmc
aaa
ficoms
insl
loopne
pop
sub
xor
cwtl
les
cmp
ret
insb
lds
xor
pusha
jecxz
into
mov
adc
pop
aaa
xchg
jecxz
push
mov
mov
ljmp
repz
jb
js
mov
mov
mov
test
mov
jb
mov
or
cmp
shll
sub
mov
orl
and
movsb
jbe
sub
and
fnstenv
cmp
pop
push
or
cmp
or
aam
rorl
aas
add
mov
out
dec
mov
adc
mov
pop
mov
daa
adc
iret
lock
int3
adc
insb
push
mov
imul
imul
enter
sbb
mov
adc
lock
jnp
xchg
aam
xchg
pop
xor
int3
cmp
adc
int3
mov
fisttps
pop
or
jno
in
push
fmulp
cs
into
cmp
add
xchg
repnz
and
xchg
in
add
lods
or
pop
inc
cltd
inc
lds
cltd
ljmp
leave
push
sub
popa
mov
xchg
xchg
out
pushf
dec
bound
cs
push
test
jl
popf
out
inc
push
pop
into
sbb
xchg
scas
sub
dec
or
pop
rcrl
cmp
sub
cmc
cwtl
mov
adc
call
out
adc
mov
hlt
ret
sbb
pop
fisubl
add
mov
mov
divb
adc
in
and
inc
xor
mov
data16
sbb
inc
xor
push
mov
xor
rolb
jmp
ja
icebp
sbb
inc
mov
xor
sub
pop
sub
jns
xchg
adc
lret
xchg
sub
nop
int3
dec
or
xchg
xor
or
push
sti
jg
adc
or
test
orl
mull
negl
in
adc
stos
fcmove
pop
cs
les
mov
pop
inc
aam
xchg
clc
cltd
add
push
test
mov
sbb
and
pusha
pop
punpcklwd
lock
test
shll
cltd
in
mov
xor
add
xchg
stos
xchg
push
sub
imul
lcall
fstpt
arpl
outsl
in
adc
mov
xchg
add
xchg
out
stos
ret
push
scas
aam
pop
icebp
xor
hlt
inc
out
out
mov
and
popa
push
cmp
add
and
dec
cmp
test
inc
pop
in
pushf
inc
xor
pop
rcl
pop
cmp
jge
aas
mov
pop
sbb
inc
sbb
and
jnp
add
or
xor
mov
ffree
jbe
pop
mov
rcr
sub
ficoml
inc
loopne
jmp
push
dec
push
mov
shrl
sub
cli
jmp
out
arpl
icebp
mov
cli
ficompl
lods
fcoms
pop
popf
popf
adc
cmp
cli
aas
sbb
push
jo
dec
lret
pop
push
and
and
mov
pusha
test
push
pop
sub
xchg
in
mov
sahf
in
dec
push
inc
xchg
fidivs
mov
movsl
dec
mov
clc
xchg
jge
mov
or
pushf
or
sahf
ds
fsts
bound
push
prefetchwt1
ja
push
ret
jecxz
jnp
sahf
movsb
cmpb
adcl
arpl
dec
push
mov
xchg
repz
stc
xchg
xchg
addb
mov
pop
cmp
xchg
fnstcw
add
int3
hlt
mov
pusha
rcll
xchg
add
or
pushf
sub
lcall
scas
mov
or
cwtl
je
lahf
ja
loope
mov
notb
pushf
aam
je
arpl
enter
sbb
imul
scas
in
mov
dec
negl
and
pop
inc
pop
add
lcall
adc
push
mov
jnp
dec
xchg
inc
add
mov
pop
cld
cmpl
loope
test
cmp
out
jns
pusha
mov
test
mov
outsb
ret
mov
add
in
test
lahf
mov
add
dec
aam
pop
imul
sub
ror
pop
fwait
pop
outsb
testb
arpl
shll
jg
addr16
mov
pop
adc
pop
icebp
inc
jo
in
cmpsb
jne
dec
xor
pop
xor
pop
inc
and
fldt
lret
lods
popf
or
mov
xchg
push
out
jmp
sub
mov
es
push
outsb
or
push
add
adc
mov
or
xor
mov
nop
pop
sarb
pop
movsb
adc
out
pop
jbe
push
ds
pop
inc
movsl
xchg
aaa
add
je
into
and
jmp
xchg
ficomps
and
in
icebp
adc
int3
adc
cmpsl
call
jb
mov
jbe
add
repz
or
add
mov
lcall
xchg
popf
sbb
mov
cltd
mov
repz
cmpsb
sti
pop
push
adc
out
mov
pop
adc
cwtl
dec
das
test
mov
mov
add
sbb
inc
mov
mov
hlt
aas
outsl
mov
xchg
aaa
jo
aam
cmp
into
mov
pop
jp
or
xor
sub
or
jl
nop
fisubrl
test
mov
push
imul
sbb
outsb
in
pop
fsubs
pushf
je
push
inc
int
mov
pop
fisubl
sbb
xchg
pop
out
pushf
push
mov
lret
les
and
adc
out
rcl
das
or
stc
xor
push
arpl
push
ds
mov
lock
ret
xchg
cwtl
mov
jmp
adc
xor
test
xchg
add
mov
or
test
shl
sub
sub
lods
and
shlb
aaa
inc
pop
cmpsl
pushf
imul
stos
lahf
scas
iret
mov
rolb
cmp
pushf
xchg
xchg
sti
xchg
std
mov
jno
inc
std
movsl
into
into
fistl
mov
mov
add
or
loope
xchg
xorl
outsb
rcrl
ret
sub
mov
test
push
jmp
dec
mov
xchg
hlt
mov
out
fstsw
mov
scas
lods
ja
stos
rolb
mov
movsb
mov
ja
and
enter
mov
push
cmp
aam
jo
ja
or
out
fs
imul
subb
xchg
xchg
mov
imul
jge
dec
scas
jle
jbe
inc
ret
fisttps
dec
jo
fiaddl
mov
sti
jp
sbb
push
bound
add
clc
inc
dec
pusha
inc
dec
rorl
sar
rorl
les
bound
xchg
lods
icebp
pop
popf
sbb
push
pop
mov
nop
repnz
in
insl
add
inc
or
fcoms
jle
mov
movsl
in
lock
xor
add
sub
shl
out
jl
jo
push
mov
mov
movsb
jno
add
and
rcrl
ljmp
cmp
scas
fstpl
xor
xchg
adc
dec
popl
cltd
xchg
call
clc
jecxz
and
lret
mov
or
addr16
daa
icebp
aad
addb
and
addl
pop
stos
or
and
pushf
cmpsl
daa
cmp
or
sbb
dec
sti
inc
jne
push
icebp
xor
inc
mov
lock
cmp
pop
or
cld
mov
xchg
ror
jbe
inc
daa
mov
rol
sahf
add
dec
movsl
jbe
or
xchg
idivb
mov
push
out
movsl
mov
outsb
and
add
les
test
pop
adc
dec
pusha
iret
pusha
sub
pushf
mov
dec
lods
arpl
or
dec
rsqrtps
xor
or
ret
in
icebp
pop
iret
pop
sub
cmp
cs
rol
inc
icebp
mov
or
push
outsl
out
in
aad
cmp
test
adc
jge,pn
inc
dec
lret
dec
cld
sub
sbb
jb
pop
xor
jg
cmpsl
cmpsl
hlt
or
popf
daa
xor
movsb
mov
adc
sub
stc
xchg
roll
imul
push
clc
mov
ljmp
push
negb
pop
popa
xchg
xchg
pusha
hlt
sub
jl
xor
mov
cmp
cmp
mov
hlt
call
imul
mov
andb
xchg
push
mov
jp
addr16
xchg
shl
inc
mov
ljmp
adc
pushf
iret
mov
popa
mov
or
shl
in
aad
pop
fidivl
adc
loope
push
imul
xor
and
repz
loope
loop
mov
dec
dec
fists
sub
or
sarl
rcrl
aad
sub
in
shlb
xor
sub
loopne
ja
call
xor
xor
testb
test
jecxz
cltd
in
xchg
and
and
outsb
nop
lret
mov
les
out
popf
pusha
psrlq
enter
je
imull
inc
mov
std
jb
push
mov
jl
mov
adc
inc
mov
or
mov
into
ljmpw
and
push
pop
mov
lret
jbe
mov
into
js
jno
mov
cld
push
jo
dec
pushw
outsb
push
cli
jb
out
and
jo
popf
hlt
fwait
inc
sbb
mov
or
sub
popf
jmp
sub
mov
lret
shl
cmc
arpl
daa
rorl
push
addb
fimull
daa
add
insb
outsb
pop
pop
inc
jae
pop
jmp
and
lods
hlt
ret
cmp
xchg
or
pop
or
sbb
jle
insb
clc
rcl
int
imul
mov
cld
lret
push
shlb
out
dec
stos
mov
lods
in
hlt
sub
cltd
in
dec
or
xor
sbb
ja
push
adcb
or
fwait
mov
in
out
dec
mov
cwtl
jno
lea
or
jnp
add
pop
xchg
fs
rorl
xchg
xor
mov
or
insb
mov
mov
in
push
call
add
push
mov
movsb
jo
popa
inc
cmp
xor
cmp
fisttpl
sub
int3
fcomp
mov
fucom
pop
sub
in
pop
jns
je
add
mov
mov
mov
xlat
jo
insb
xlat
xor
sbb
add
ss
bound
sahf
xchg
bound
pop
push
pop
out
mov
mov
jge
adc
stos
xor
insb
add
out
ret
mov
inc
push
cmp
jecxz
mov
sbb
and
ror
inc
fmull
loop
hlt
push
scas
in
xchg
sub
les
or
sub
inc
add
mov
pop
pop
subb
xor
mov
add
shlb
jne
nop
int
mov
inc
adc
mov
pop
lods
and
mov
std
mov
sbb
adc
inc
push
test
mov
cmp
rolb
cmp
sti
pop
cmp
sub
jns
inc
add
mov
call
in
mov
adc
mov
sarl
and
push
out
adc
es
mov
jne
mov
fwait
in
rorb
add
das
subb
mov
mov
jnp
enter
addr16
add
pop
jecxz
sar
pop
pop
ss
cmp
mov
sahf
mov
aam
pop
cld
loop
jle
cmc
pusha
jmp
push
test
mov
insb
lea
mov
test
or
add
add
xchg
adc
jb
adc
or
cmp
and
in
adc
ljmp
ret
mov
test
push
inc
or
test
cmp
sbb
loope
loop
cltd
in
and
xchg
lret
and
subb
shlb
out
cmp
sub
or
adc
sub
dec
adc
in
stc
cld
popl
pushf
cmp
cwtl
sub
bound
stos
dec
mov
xchg
xchg
insb
int3
lods
mov
fildl
sbb
cmp
out
jle
les
jnp
daa
daa
cmc
subl
mov
jl
lds
dec
int
aam
inc
ds
adc
xchg
scas
jae
inc
inc
mov
xor
and
jns
insl
das
mov
pop
sti
sbb
arpl
mov
inc
sti
push
mov
mov
cmc
nop
pop
xor
mov
out
mov
out
gs
mov
ljmp
cmp
bound
sub
jecxz
out
mov
push
sub
or
or
dec
ds
jle
aam
lds
pop
mov
push
ss
sub
aaa
push
mov
cmc
shll
imul
cmpsb
fs
cmc
fstpt
jle
sti
inc
nop
or
cmp
jge
jne
add
pushf
xchg
cmc
jecxz
and
cmc
pop
mov
cmp
aam
cmpsb
dec
xor
insl
xlat
loope
fcmovu
mov
jae
lahf
outsl
inc
or
shll
arpl
jmp
cli
xor
popa
xor
rcrb
addr16
push
test
inc
adc
mov
sbb
pop
clc
data16
and
lods
iret
xchg
clc
sbb
fisttpll
call
push
mov
lods
lcall
repnz
pop
pop
xor
push
hlt
lock
mov
or
push
jb
push
add
and
scas
push
idiv
mov
test
testb
mov
imul
cli
test
fbld
cmp
mov
adc
mov
test
clc
sbb
and
sarb
lds
push
insl
fs
lret
pushf
xor
fdivp
xor
repz
lcall
cmp
pusha
sarl
mul
add
mov
xchg
add
inc
int3
jnp
leave
cmp
hlt
in
xchg
cwtl
ss
ds
clc
mov
in
push
lock
daa
pop
scas
sub
ret
cmp
or
or
dec
mov
xchg
aaa
adc
fwait
adc
ret
pop
loopne
out
scas
dec
adc
shlb
loopne
push
lret
call
mov
movb
pushl
xchg
iret
jl
imul
enter
or
xchg
loop
push
lcall
xor
mov
and
mov
gs
clc
xchg
imul
into
push
push
call
loope
nop
jge
gs
lahf
jle
jo
xchg
jno
ss
dec
les
cltd
gs
inc
push
inc
inc
sub
sbb
jmp
adc
shrl
xor
mov
test
stc
cmp
mov
das
sbb
loop
mov
push
scas
jnp
jne
fisubl
xchg
dec
inc
popf
mov
mov
or
and
data16
imul
cwtl
and
out
addr16
or
and
stos
dec
fwait
std
push
pop
mov
adcl
mov
lcall
pusha
jae
fstpl
in
jge
test
cmp
dec
xor
adc
cmp
push
and
pop
in
xor
lret
dec
jecxz
mov
test
add
push
dec
sbb
dec
pop
or
stos
dec
xor
sahf
mov
pusha
add
xor
lea
push
out
test
sub
mov
subl
cmp
mov
push
ficomps
enter
lahf
dec
pusha
outsl
sub
and
idivl
sub
insb
xchg
rorl
rolb
xor
xor
aaa
mov
ds
ja
cmp
cmp
mov
clc
fnsave
in
fmull
push
mov
cmpsb
or
lock
sbb
out
fnstenv
xchg
aaa
inc
mov
repz
push
mov
dec
and
sarl
jno
stc
cmp
sahf
leave
add
add
mov
add
mov
iret
lret
xor
lret
push
out
pop
jmp
rorb
or
fisubrs
std
icebp
mov
imulb
scas
push
jle
aas
mov
jmp
jle
and
and
lret
jbe
xor
mov
or
jae
ds
jb
xchg
loope
lock
clc
adc
mov
icebp
add
push
sbb
jmp
jbe
push
mov
aam
add
sbb
push
mov
insl
xchg
shl
js
shl
divb
ret
loopne
sti
out
in
or
repnz
cmp
push
test
cmp
or
sbb
fdivrl
in
bound
add
jg
pusha
loop
test
int3
mov
push
iret
clc
xchg
and
add
lahf
mov
out
cli
leave
orb
and
cmp
mov
ret
add
jne
push
into
or
cmpsl
mov
prefetch
or
mov
dec
movsb
lea
adc
sub
clc
arpl
mov
lds
push
push
outsb
jb
cli
mov
push
insl
imul
cmp
xlat
loopne
mov
sbb
cwtl
sahf
aad
jnp
std
sbb
ja
int3
add
je
lds
push
out
xchg
cli
adc
pop
ss
mov
in
push
shrl
iret
adc
movsb
addr16
imul
lahf
lret
ja
mov
push
clc
hlt
cmp
and
stc
shll
mov
mov
add
jns
inc
movq
call
out
and
call
addr16
mov
test
xchg
and
neg
push
fcompl
imul
std
pop
pop
lea
jle
js
loope
scas
sbb
push
push
ficoml
sub
pushl
nop
cmpsl
mov
sbb
or
adc
popf
loope
dec
sbb
cltd
pop
mov
mov
pop
clc
loopne
cwtl
sub
fstpt
popa
into
cltd
out
push
xchg
sub
stc
pop
push
mov
cmp
sub
push
push
hlt
lock
lcall
jbe
shl
jecxz
aas
inc
mov
cmp
repz
cld
popl
pop
ss
adc
jp
jbe
sub
xor
lds
pushf
pop
aaa
and
ja
jae
popa
mov
int3
mov
hlt
cmp
ds
pop
and
repz
or
dec
es
imul
and
pop
push
fadds
sub
push
sbb
sub
jb
pop
jg
cltd
cs
cld
bound
les
or
xchg
xchg
pop
add
fcmovbe
mov
dec
fcompl
and
enter
cmpsb
jge
out
mov
sbb
cmp
ljmp
lret
stos
ljmp
xchg
lcall
jp
repz
xchg
push
ja
inc
movsl
and
scas
mov
xchg
loop
cli
add
mov
fsubl
mov
adc
mov
mov
test
cmc
mov
dec
ja
cmpsb
lods
cmp
hlt
daa
add
outsl
jp
pop
or
fsts
xor
jl
rorb
mov
adc
inc
test
fcoml
loope
mov
popa
xlat
loope
fistpl
add
mov
vpsubsw
jmp
jge
enter
push
mov
push
add
push
cmp
add
adc
or
mov
push
xchg
ror
orb
insl
icebp
idivl
mov
xlat
ret
lods
jmp
inc
or
dec
mov
mov
fistl
xchg
fs
aam
adc
xchg
fnstsw
out
pop
mov
lret
xchg
mov
stos
addr16
mov
addr16
stos
sbb
push
daa
fmul
out
lret
pop
dec
cltd
loope
and
int3
sub
jl
mov
repnz
rcll
push
clc
movsl
imull
mov
sbb
push
in
hlt
dec
enter
stc
inc
inc
adc
stos
stc
or
sbb
in
mov
xorb
or
jmp
rclb
mov
icebp
clc
add
push
xchg
sarl
sarl
pusha
dec
mov
sub
push
rol
mov
inc
std
push
mov
push
std
adc
add
sub
jge
xchg
test
xor
cmpsl
test
and
sbb
cmp
jmp
mov
sbb
jb
mov
push
loope
mov
fimuls
ret
outsb
pop
dec
hlt
or
pop
jno
shlb
fldenv
vmovaps
rolb
loope
xor
call
dec
mov
pop
or
and
mov
addr16
xchg
mov
stos
pop
lods
jg
les
fldl
xor
cmp
imul
pushf
test
mov
clc
int3
std
iret
jns
ret
int
xlat
pop
xchg
inc
mov
push
loopne
lods
ljmp
push
arpl
inc
lret
push
mov
cs
mov
mov
sbb
and
adc
adc
and
mov
ret
arpl
push
mov
push
mov
aaa
sub
lds
pop
popf
lods
je
add
lods
push
jg
imul
mov
xor
jne
imul
sbbl
or
cmp
xorl
inc
les
sbb
jge
jmp
js
push
xchg
popf
adc
mov
xchg
xchg
jge
stos
inc
outsb
xchg
cmp
lods
jl
daa
loop
je
jl
popa
es
gs
mov
hlt
cmp
cmpsl
dec
ds
dec
sub
mov
std
mov
insl
mov
pop
push
xlat
addr16
xorb
jl
fldl
jl
popf
fnsave
xchg
sbb
push
dec
adc
iret
jae
pop
das
cmp
mov
movsb
jno
and
cmp
xchg
cmp
popf
fdivp
add
pop
int
aaa
pop
mov
mov
xchg
daa
aas
xchg
push
xchg
sub
push
and
dec
mov
ret
loop
push
fwait
xor
xor
data16
jmp
test
pop
xor
pop
push
cmp
lahf
cmp
ror
jno
ret
inc
sub
xor
clc
mov
into
pop
xchg
subl
outsb
push
mov
or
out
push
pop
cmp
inc
mov
std
stos
iret
mov
and
sbb
push
imul
scas
adc
popf
rcr
jl
lcall
add
mov
push
xchg
mov
mov
and
andl
mov
inc
inc
shl
cmpsb
lret
mov
testl
ret
xorb
cmpsb
pop
inc
je
cmpsl
decl
xchg
add
cmpsl
ljmp
mov
aas
xchg
fisubrs
ret
fisttps
fstpl
pushf
gs
cmp
repnz
sub
clc
jl
and
arpl
mov
mov
icebp
pop
push
xchg
mov
setg
sub
mov
outsl
pop
push
adc
adcb
pop
mull
xchg
mov
jo
mov
inc
xchg
xchg
xchg
or
loope
cmp
add
mov
repz
jb
ljmp
or
xorl
test
lds
aam
add
sbb
fsub
loopne
imul
inc
mov
mov
fistps
lea
out
and
mov
pop
cmp
in
add
xor
vmwrite
fmul
enter
arpl
fsubr
out
jl
movl
fwait
test
lods
out
mov
pop
out
pop
arpl
inc
cmp
add
mov
rclb
pop
inc
adc
incl
pop
in
xchg
push
jae
ret
enter
mov
cs
jle
inc
jmp
out
mov
inc
jge
js
inc
push
arpl
sbb
call
sub
mov
jnp
pop
sbb
pop
es
sbb
mov
xor
lock
cmp
mov
aaa
and
addr16
call
aaa
cmp
dec
repnz
pop
and
out
mov
xor
pop
mov
pop
lock
out
or
aad
mov
stos
je
cs
cli
lock
test
dec
fidivs
into
mov
gs
ret
and
jae
outsl
shr
mov
sub
push
or
int3
iret
and
pop
mov
outsb
xlat
int3
xchg
test
push
xchg
xchg
cmpsb
push
popf
lcall
sarl
sbb
ljmp
imul
push
mov
fmul
mov
dec
dec
mov
int3
inc
jg
repnz
lods
mov
jb
pop
ret
lds
dec
push
and
das
fists
mov
pop
mov
ds
and
clc
jae
arpl
test
dec
cwtl
sarl
mov
xchg
mov
and
popa
sbb
add
clc
inc
or
stc
in
test
jns
dec
or
or
inc
aas
mov
shl
fwait
add
push
mov
cs
xlat
pop
mov
ja
cwtl
sbb
xchg
jl
add
pop
xlat
jns
inc
push
in
jmp
ja
cmp
aas
adc
sbb
jno
mov
das
adc
dec
lea
je
push
addb
aas
dec
mov
push
arpl
push
sub
jl
jne
cmpsb
mov
movsb
lea
adc
insl
dec
nop
call
push
pop
push
ret
jne
mov
mov
sub
push
push
dec
xchg
or
xchg
sti
pop
xor
dec
iret
fs
adc
xchg
ljmp
repz
xor
jle
lahf
fbstp
pop
imul
or
pop
dec
xchg
mov
movsb
inc
jmp
push
push
push
adc
psllq
adc
jne
and
add
stc
arpl
push
dec
ret
sbb
ja
jle
in
xchg
lret
outsl
js
cs
jo
jns
jo
ss
mov
fldenv
subb
pop
mov
lahf
cwtl
xlat
pop
jns
mov
into
inc
repnz
and
cmp
xlat
xchg
ret
adc
push
mov
mov
out
rclb
movb
lcall
pop
popf
into
jb
and
sar
push
outsb
pop
xchg
incl
cmp
mov
pop
pop
test
push
or
or
add
pop
ja
cmpsl
jmp
push
xor
int3
cmp
and
cmp
mov
sti
mov
test
and
pop
cmp
aam
mov
data16
fdivr
je
nop
addr16
dec
aad
sbb
pop
nop
cmp
lods
frstor
push
xchg
xor
pop
pop
scas
cltd
sub
stos
dec
dec
imul
jo
lcall
or
in
xchg
adc
ret
fimuls
fbld
add
movsl
xchg
xor
test
pop
xorl
gs
movsb
jae
mov
lea
xchg
jae
nop
call
sbb
sub
lock
aam
test
arpl
push
aam
xor
or
mov
in
cld
fnsave
xchg
fdivrs
mov
mov
test
aam
or
es
jae
gs
adc
fsubl
or
into
jno
sub
ficoml
push
inc
or
jle
pop
or
test
je
imull
xchg
push
lods
jnp
sarb
aad
repnz
adc
sbb
popf
daa
outsl
test
mov
mov
adc
lret
out
push
out
gs
call
ljmp
push
adc
xlat
jbe
push
call
and
push
int3
icebp
je
dec
add
mov
sbb
jl
cmp
dec
cmpl
jnp
std
popf
cmpsb
sub
mov
gs
mov
mov
mov
sub
fcmovnb
jge
cli
in
fcoms
movsb
adc
lock
lahf
popa
and
scas
cmpsl
inc
cs
mov
into
mov
push
push
repnz
jno
xor
test
push
jle
mov
shll
int
sbb
je
popa
rol
bound
cmp
xchg
movsb
adc
adc
jg
mov
mov
xchg
inc
mov
cli
orps
add
stos
push
pop
icebp
int
stos
xchg
iret
roll
out
jp
or
sub
addb
subl
repnz
in
gs
arpl
xchg
outsl
inc
or
popa
movsb
add
or
shl
dec
cmp
repz
adc
or
jmp
scas
clc
enter
fmul
out
and
adc
outsl
mov
mov
adc
cltd
scas
sbb
fistl
mov
adc
xchg
xchg
out
ds
xchg
jl
or
cmp
sub
cmp
dec
jno
out
sbb
sahf
test
push
insl
test
add
xlat
sar
sub
inc
arpl
clc
jle
cltd
jno
pop
sub
pop
pop
sub
sub
js
inc
pushf
adc
outsb
mov
cltd
iret
inc
sbb
add
mov
shrl
sbb
lods
ret
clc
xor
xchg
jecxz
xchg
jno
rol
xor
rorl
pop
jle
jae
mov
pushf
pop
or
xchg
mov
loope
and
cmp
outsl
sub
mov
mov
adc
mov
stc
rolb
out
stc
push
cltd
pop
pop
jne
push
mov
add
rolb
repnz
out
mov
loop
in
mov
pop
cmp
sub
push
or
mull
mov
add
xchg
dec
mov
and
jns
insb
stos
dec
mov
icebp
sbb
imul
add
enter
and
mov
cmpl
movsb
fwait
xchg
hlt
decb
push
daa
pop
lea
cltd
xor
sub
popw
dec
insb
popf
cmp
aam
xchg
cmp
sbb
outsb
stc
mov
subl
mov
out
and
les
mov
and
add
clc
testb
stos
jno
cmpb
inc
and
int
sub
addb
ja
adc
mov
pcmpeqd
xchg
mov
nop
pop
out
and
fcoml
and
movb
ljmp
push
cmpsb
dec
cmp
pusha
outsb
dec
hlt
jecxz
fists
mov
cmpsl
out
les
adc
dec
and
mov
jmp
aam
rcrl
pop
sub
dec
lods
pop
add
xchg
lds
and
jbe
mov
repz
adcb
cmc
imul
push
jg
mov
xor
out
gs
test
fistpll
lahf
dec
cmp
jmp
xorb
dec
imul
adc
and
jno
das
clc
cmp
jbe
mov
xchg
out
push
mov
xor
aaa
fildl
cmp
pop
mov
add
push
jecxz
in
mov
ss
add
add
add
add
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
push
nop
nop
nop
nop
nop
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
sub
add
fadds
add
sbb
add
add
push
add
add
add
add
addb
add
js
add
mov
add
add
add
addb
add
lock
addb
add
sbb
add
inc
add
cmp
add
push
add
add
add
add
add
add
add
cmp
add
or
add
xor
add
pop
add
xor
add
addb
xor
add
test
add
rolb
add
clc
add
xor
add
and
xor
add
dec
add
xor
add
jo
add
cwtl
add
sub
add
rolb
out
add
add
add
sub
add
adc
add
cmp
add
pusha
add
add
mov
add
mov
add
add
add
or
add
add
pop
add
call
add
add
add
add
add
inc
xor
add
add
or
add
aaa
add
call
add
add
add
add
inc
add
call
add
add
add
add
add
add
add
mov
add
or
add
add
add
dec
add
mov
add
or
add
add
add
or
add
or
add
add
mov
add
call
add
add
add
add
push
add
or
add
jae
add
or
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
sub
add
or
add
add
add
add
call
add
add
add
add
add
pusha
mov
add
or
add
add
call
or
add
add
add
add
add
lods
add
mov
add
or
add
add
add
add
call
add
add
add
add
add
add
add
call
add
add
add
add
add
add
lds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
call
add
add
add
add
roll
add
add
add
add
add
aam
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
or
add
add
add
mov
add
or
add
add
sub
add
mov
add
or
add
add
mov
add
call
add
add
add
add
lock
mov
add
or
add
add
add
mov
add
add
add
lock
add
or
add
push
add
pop
inc
add
int3
add
add
add
add
add
add
push
add
add
add
or
add
add
je
add
cwtl
pop
add
test
add
int3
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
pop
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
sub
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
or
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
dec
add
bound
and
dec
add
je
ja
outsl
add
imul
add
add
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
insb
add
add
push
add
and
dec
add
popa
add
popa
add
add
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
aaa
add
add
add
inc
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
imul
and
push
add
jo
imul
inc
add
outsb
add
insl
add
add
add
and
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
push
add
add
and
dec
add
jae
jne
jae
and
push
add
add
je
and
inc
add
add
arpl
and
xor
xor
xor
xor
sub
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
jb
add
add
add
add
js
add
add
add
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
je
arpl
push
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
aaa
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
dec
add
mov
add
add
dec
add
mov
add
add
dec
add
les
add
dec
add
int3
dec
add
or
add
aam
add
sbb
add
dec
add
ss
add
inc
dec
add
push
dec
add
bound
add
add
add
add
add
add
jl
add
add
add
mov
add
add
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
fs
insb
add
jb
imul
add
outsb
imul
insb
add
outsb
je
jne
je
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
jb
popa
je
dec
outsb
jne
add
jb
jne
jb
push
popa
insb
jne
inc
add
dec
outsb
je
jb
gs
gs
fs
imul
add
arpl
xor
inc
insb
insb
push
imul
jb
gs
