sbb
add
outsl
std
stc
scas
sahf
mov
into
xchg
test
mov
movsl
pop
inc
pop
add
inc
cmp
lods
mov
and
dec
xor
jno
or
mov
mov
fidivrl
repnz
inc
loope
sub
leave
sti
nop
sub
inc
mov
rcr
sub
add
or
repz
mov
mov
push
xchg
inc
mov
mov
pop
in
cmc
add
lods
push
jl
sarl
jmp
lods
adcl
mov
sub
dec
inc
into
jge
push
daa
aas
in
sbb
fistpll
mov
in
subl
rclb
movsb
ljmp
sub
inc
xlat
or
imul
mov
jmp
addr16
xlat
clc
je
dec
jno
pop
pop
jp
push
lcall
jne
or
add
lret
jp
subb
inc
add
in
xor
repz
and
or
pop
push
jb
js
pop
out
or
insl
lds
jmp
ss
ja
add
push
add
fwait
sbb
mov
push
ss
or
and
pop
mov
fistps
in
sbb
mov
cmp
pop
mov
loopne
mov
imul
mov
or
icebp
out
or
jo
das
ret
pop
ljmp
lock
lahf
or
stos
adc
pusha
pop
test
repnz
pop
in
xchg
mov
mov
faddp
lea
incl
in
pop
mov
adc
insl
shrl
push
xchg
sub
adc
and
sbb
mov
or
in
lret
sub
dec
dec
rorl
cmp
fdivr
mov
pusha
loop
ret
out
in
daa
prefetchwt1
aaa
and
in
push
rorb
std
scas
rolb
loopne
ljmp
test
add
mov
pop
daa
and
fwait
andl
jecxz
in
sbb
aam
pop
push
sbb
mov
icebp
mov
inc
or
mov
mov
or
inc
and
jno
xchg
lock
inc
rcll
push
cmp
xlat
xchg
sub
cmpb
hlt
xchg
ja
jbe
clc
lods
mov
sub
mov
push
loope
testb
hlt
cmp
jo
push
mov
xchg
loopne
fldenv
cmc
dec
lds
add
sub
xchg
ret
inc
repnz
pop
xor
outsl
sbbb
cmp
add
enter
dec
leave
pop
fistpl
rorl
lods
xchg
dec
cmc
mov
das
movsb
loopne
jbe
jge
push
scas
mov
icebp
lcall
cmp
test
scas
sahf
dec
and
std
and
mov
or
pop
dec
repnz
imul
movsb
push
ja
dec
cltd
orl
inc
aam
cmpl
nop
adc
adc
dec
enter
mov
popf
xchg
fidivl
or
push
add
lret
and
pop
jmp
lcall
ja
inc
jbe
mov
mov
xor
leave
and
insb
pop
aas
add
pop
fistpll
mov
aam
xor
jb
fdivr
cmp
fimuls
rcrl
popa
lret
xchg
mov
push
inc
shll
mov
inc
and
jmp
add
sarl
bound
cmp
imul
lret
jns
and
and
add
mov
fcmovnbe
jae
xor
pusha
jl
stc
mov
pop
jo
or
pop
lods
mov
leave
clc
into
xorb
pop
push
xor
push
repz
jg
dec
pop
push
jmp
xlat
insl
sub
mov
xchg
jg
add
cmpsb
stc
inc
je
xchg
inc
fcom
mov
jp
mov
lods
sbb
jns
inc
data16
roll
mov
imul
fmulp
ss
push
fstp
jnp
lds
mov
cmp
repnz
iret
xor
jns
jl
push
cwtl
xorb
subl
pop
and
cmp
dec
rcll
xorb
inc
imul
or
dec
push
xor
dec
mull
mov
je
push
mov
in
add
or
sbb
sbb
loope
les
aad
mov
arpl
mov
pop
rcrb
sub
add
rcrb
insl
sbb
ret
push
inc
cmp
push
xor
mov
mov
sub
xchg
mov
lret
jbe
ja
push
imul
and
inc
cmp
or
lret
inc
pop
ret
loope
push
insb
adc
mov
ret
jnp
mov
inc
arpl
pop
mov
adc
jl
pop
sbb
cmp
in
mov
pushf
rolb
xor
sub
pop
maskmovq
imull
fnstsw
mov
imul
mov
xchg
cld
pop
popf
mov
pop
fbld
pop
adc
ljmp
jbe
lock
mov
faddp
sbb
jmp
dec
mov
xchg
dec
cmp
lret
jge
fstpt
or
nop
sub
aaa
or
push
popf
xchg
mov
popa
mov
ljmp
mov
outsl
outsl
pop
stc
jmp
mov
sbb
lods
mov
mov
inc
shlb
faddp
adc
mov
add
test
sub
adc
lret
loope
mov
movsb
in
jne
sahf
cmp
cmp
or
test
xchg
mov
and
repz
fsubl
push
and
inc
mov
push
fistl
xchg
std
add
ret
test
or
ljmp
push
push
cltd
faddl
push
xlat
leave
int
add
negb
jo
xlat
outsb
inc
jo
mov
pop
lahf
test
inc
sbb
loope,pt
pop
sbbb
sub
and
dec
and
mov
stos
push
test
imul
inc
xchg
repnz
imul
lcall
xchg
cmp
clc
lods
ret
push
scas
sbb
push
dec
push
gs
push
shrl
int
cmp
jge
xchg
ss
in
lea
scas
dec
sahf
in
mov
aaa
dec
out
dec
dec
popf
inc
lods
cli
stos
lcall
sbb
mov
fwait
mov
sbb
es
cmp
or
nop
mov
insb
push
sbb
sbb
insl
dec
int3
sub
inc
sbb
add
jnp
lock
push
mov
pop
pop
loope
or
push
cltd
cld
das
cmpsl
inc
xchg
pop
xchg
insb
adc
lds
mov
test
add
cli
push
cmpsb
xchg
pop
lock
push
fucomp
in
int
pop
adc
lret
mov
add
loope
mov
cmp
push
push
mov
push
sub
mov
pop
adc
iret
mov
or
xchg
inc
ljmp
or
adc
icebp
jbe
testb
xlat
push
adc
jnp
ss
mull
pmaddwd
arpl
mov
add
jp
dec
sub
ret
cmp
sub
push
xor
sti
inc
push
nop
sbb
hlt
idivb
popf
pop
int3
xchg
frstor
lods
call
icebp
xchg
sub
ja
and
sbb
nop
pop
lea
pop
scas
xchg
push
sub
inc
in
std
dec
push
je
out
shrb
cmp
sbb
push
mov
and
test
outsb
out
inc
or
fdivr
adc
imul
rorl
outsl
adc
gs
pop
mov
and
and
push
or
mov
loopne
into
imul
sub
adc
loopne
mov
sbb
outsb
jl
or
icebp
fstl
loope
test
mov
insl
nop
call
xor
mov
jae
sbb
in
add
call
or
jb
and
insb
test
aaa
repnz
mov
cli
ja
sbb
push
pop
mov
xor
and
inc
xor
fistpll
mov
mov
into
adc
jmp
dec
sub
enter
pop
icebp
lret
stc
mov
imul
inc
and
ficomps
jbe
pusha
sbb
xchg
or
cmp
push
stc
addr16
sub
repz
std
push
popf
scas
and
mov
rcrl
mov
mov
cmpsb
aam
lds
leave
add
mov
mov
js
ja
dec
sbb
subl
jmp
cld
stos
jp
dec
addr16
sbb
or
into
jl
mov
mov
push
add
pusha
sbb
xor
ret
cmpsb
mov
jmp
add
xor
cmpsl
popf
dec
push
test
ja
outsl
xor
addr16
ret
cmp
mov
mov
ficomps
mov
xor
mov
or
mov
call
imull
fcomps
xor
flds
xchg
dec
test
mov
or
xor
sbb
sub
ljmp
inc
lods
sub
pop
adc
pusha
les
popf
mov
mov
jnp
mulb
xchg
dec
daa
in
dec
pusha
popa
std
jmp
or
enter
lods
xor
cwtl
fsubrl
int
jle
sub
sbb
pop
aad
mov
or
or
fwait
addr16
sub
vshufps
sub
shrl
sub
sub
insl
and
mov
xor
test
mov
cmp
das
or
xchg
loope
jecxz
push
jl
ja
push
dec
sbb
mov
jg
outsl
xchg
push
jmp
cmp
sarb
pop
or
das
ficoml
xor
jae
mov
enter
jmp
inc
or
vmovaps
popf
jle
je
dec
cmc
add
cs
dec
shll
cltd
pushf
test
mov
dec
sbb
push
push
in
pop
dec
and
cmp
sub
push
jecxz
mov
xorl
xor
cmp
fs
fistps
dec
sub
ss
and
mov
roll
xchg
pop
fistpl
pop
stc
mov
pusha
mov
dec
fidivrl
mov
xor
mov
add
dec
pop
cld
rolb
cmp
es
sub
mov
dec
mov
test
or
clc
icebp
mov
jle
dec
jns
cld
je
push
xor
mov
or
icebp
out
outsl
lock
dec
mov
xor
pusha
inc
cmc
ljmp
jno
sbb
lret
push
sbb
push
pop
inc
pop
test
cwtl
in
mov
js
das
and
nop
xchg
and
lcall
push
repnz
xlat
sub
mov
mov
push
adc
arpl
mov
ss
sub
sbb
or
pop
xchg
dec
popa
jo
add
pusha
es
clc
add
xor
or
sbb
mov
negb
insb
jmp
cmpsb
shl
test
push
dec
icebp
xor
stos
dec
ljmp
sub
aam
das
xor
imul
mov
or
mov
nop
aam
add
pusha
cmp
mov
rolb
int3
xlat
enter
jle
inc
ljmp
movsl
leave
mov
pop
or
and
jmp
andb
repnz
rcll
sbb
enter
dec
inc
push
add
fnsave
jp
sbb
push
xchg
push
inc
xor
leave
xlat
lcall
stos
movsl
bound
out
xchg
cltd
cmp
sbb
sbb
cmp
out
lods
xor
mov
jl
push
sub
pop
scas
lock
roll
nop
dec
mov
negb
jmp
add
out
fldcw
test
lcall
push
out
lret
pop
sarl
ret
and
popa
push
insl
lock
dec
aaa
xor
in
dec
adc
or
mov
popa
add
fnstenv
xor
xor
stc
mov
cmp
sub
cmp
mov
jp
and
sub
pop
xor
sbb
in
mov
pop
pop
fxch
scas
test
inc
daa
daa
xchg
cltd
loope
fsubrl
cld
push
mov
mov
in
add
cmp
hlt
add
rcrl
xchg
mov
mov
or
push
add
adc
cmpsl
mov
xor
sbb
leave
out
inc
dec
lods
ror
mov
sub
icebp
dec
add
and
ds
sbb
repnz
push
sub
mov
sti
lret
mov
ja
xchg
out
mov
das
cwtl
daa
jnp
aam
xor
inc
gs
mov
nop
pop
repnz
leave
sbb
inc
ds
mov
pop
jg
xchg
push
mov
cwtl
pop
xor
pop
lods
mov
adc
sub
cmp
inc
sbb
cltd
jns
cli
shr
in
aas
jle
inc
popa
mov
loope
push
mov
loop
fwait
mov
xchg
sbb
popf
test
mov
or
pop
in
or
add
jge
push
mov
cwtl
insl
or
test
mov
or
shl
push
loopne
loop
mov
inc
dec
insb
pusha
sub
sti
cltd
mov
push
in
push
js
gs
lret
adc
lea
inc
gs
xlat
lret
sbb
mov
and
push
add
add
xchg
cmp
jnp
dec
shrl
jp
mov
iret
xor
mov
push
movsb
and
hlt
jmp
fimull
loopne
cmp
aad
mov
mov
cld
fsubrs
aas
aad
loopne
pushf
std
adc
test
sub
pop
jmp
cmp
push
push
loopne
loop
sarb
mov
jne
lcall
sub
mov
mov
fidivl
jmp
cmp
ja
jne
das
shufps
jp
fcmove
in
xlat
sbb
js
movsl
xor
jl
mov
fwait
inc
std
inc
lods
jne
sbb
and
iret
sbb
call
fwait
into
push
test
mov
call
jns
cmp
xor
mov
cmp
fwait
lds
dec
shr
adc
shrb
mov
fimull
sbb
cmp
xor
and
lea
push
mov
rolb
mov
test
mov
mov
fsubrp
imul
xor
sub
xchg
or
insl
pop
push
stos
cmp
xor
in
outsb
lds
cmp
subl
cwtl
or
fxch
andb
fwait
data16
mov
jp
add
inc
push
jle
and
jmp
jbe
cmc
or
testl
test
push
hlt
cmpsb
push
sub
call
or
xor
mov
cli
cwtl
inc
insl
adc
pop
pop
add
outsb
xchg
xchg
mov
pop
pop
xchg
pushf
mov
jmp
jno
cld
add
mov
adc
imulb
cltd
mov
sbb
push
fucomp
enter
adc
scas
pop
dec
adc
sub
addr16
popf
jmp
mov
mov
enter
or
and
adc
or
and
ficoms
dec
rcr
mov
cs
cmp
out
lods
cmpsl
xor
and
xchg
lret
mov
inc
add
mov
inc
rorb
in
lahf
insb
jo
dec
sub
cld
dec
rcr
adc
fs
xor
mov
dec
ds
sbb
popa
mov
pop
mov
push
mov
jo
cmp
pop
lret
sub
push
push
pop
fiaddl
inc
cmp
and
cmovo
mov
mov
cmp
inc
pop
jne
das
dec
jl
pop
lret
popa
or
pop
icebp
clc
jmp
sahf
jg
sahf
cmc
data16
pop
lods
loopne
xchg
jl
punpcklwd
frstor
sub
es
and
mov
dec
inc
loopne
push
lret
jb
mov
fsubrl
jbe
jge
testb
add
mov
pop
sbb
push
es
out
cmc
ret
lret
cmp
jbe
repz
dec
cmp
xchg
js
scas
xchg
jp
inc
adc
outsl
lea
mov
xchg
popf
push
ja
insb
dec
int
push
jns
push
int3
sub
pop
loop
out
and
ficoms
pop
inc
jo
fwait
or
call
in
mov
push
imul
cmp
and
mov
hlt
jl
call
xchg
js
cmpsl
cmp
cmp
lahf
arpl
adc
adc
or
xor
sarl
stos
dec
xchg
fiaddl
fs
push
or
and
sti
orb
int3
inc
negb
mov
mov
mov
daa
ja
test
mov
out
fwait
xchg
xor
ljmp
call
mov
cld
test
jae
aaa
fcompl
ljmp
sbb
jnp
lcall
jbe
sbb
xlat
sub
shrl
loope
cmp
xchg
jno
enter
and
popa
dec
scas
add
dec
sti
pop
push
pop
dec
arpl
pop
mov
or
sbb
lock
adc
movsb
inc
fstpl
inc
and
cmp
iret
fistpll
and
lds
ja
mov
xor
pop
sub
add
dec
jmp
das
or
das
adc
or
mov
mov
jmp
pop
gs
mov
out
xor
fcmovbe
imul
pop
testb
xlat
pop
adc
pop
out
mov
orb
cmp
or
mov
andl
push
lea
dec
sbb
mov
jmp
lret
sti
xchg
jle
adc
arpl
sbb
sahf
loopne
in
pop
or
fisubs
test
jae
push
out
sbb
dec
test
sub
and
cltd
movsl
dec
loop
or
mov
push
mov
push
andb
scas
cmp
lds
inc
inc
lds
mov
sbb
mov
cld
enter
mov
inc
imul
fistpll
int
ljmp
adc
arpl
jnp
xchg
outsb
pop
stos
xor
ljmp
or
lret
sarl
ja
inc
mov
mov
fs
push
pop
lret
rcrb
mov
push
inc
loop
fwait
mov
mov
fnstenv
mov
rolb
fists
mov
popa
iret
ljmp
daa
daa
add
xor
nop
inc
js
cmp
adc
mov
ds
push
ljmp
lods
push
ret
pop
stos
aam
stos
or
push
xlat
loop
scas
adc
dec
or
hlt
sbb
bound
rcr
stos
and
fstl
arpl
mov
imull
fstpl
sarb
mov
inc
sahf
push
aad
push
mov
cmpsl
mov
aaa
mov
ficoms
bound
ss
lea
lds
in
jb
pop
xor
add
and
mov
fstpl
push
insl
enterw
out
iret
xchg
sbb
push
cmp
xchg
fs
insb
xchg
mov
jb
sbbl
cmp
and
pavgb
sar
inc
arpl
pushf
ret
leave
or
or
push
push
icebp
into
xor
adc
repz
daa
nop
cmp
mov
iret
leave
adc
inc
test
ret
push
sub
push
cs
sarb
lahf
repnz
repnz
out
insl
andb
negl
lods
int
add
addr16
push
outsl
and
cmp
mov
rorb
and
aad
test
jbe
adc
out
add
sbb
add
and
jno
mov
xchg
pop
inc
jmp
sub
clc
pop
outsb
ds
mov
xchg
xor
in
cltd
mov
pop
in
out
les
sub
cmp
and
add
or
clc
ret
push
aaa
mov
mov
stos
rorb
jg
xor
xlat
dec
cwtl
hlt
pop
xchg
movsl
pop
inc
dec
mov
dec
loope
out
sub
add
mov
sub
out
ficompl
es
das
mov
fcmovne
mov
dec
jae
lret
inc
pop
sahf
inc
sbb
gs
bound
stc
in
mov
xor
cmpsl
jno
sbb
mov
pop
lea
mov
xor
sbb
sub
jb
imul
push
mov
rclb
pop
out
inc
adc
iret
mov
dec
sti
push
cltd
adc
cmpsl
fistl
daa
repnz
notb
lds
and
imul
pop
call
jbe
xchg
lcall
hlt
out
or
ljmp
dec
push
and
cmp
shr
sti
mov
dec
mov
cmp
and
rcrl
pusha
std
and
or
repnz
xchg
and
loopne
pop
out
pusha
nop
pusha
stos
and
cmpsb
and
jp
xor
pop
enter
lea
xor
outsl
fiaddl
push
cmp
in
in
addb
in
push
mov
push
push
int
lock
inc
cmp
xor
adc
lods
imul
or
nop
and
and
cmp
je
fxch
pop
fwait
dec
insl
jae
add
repnz
dec
leave
lcall
pop
inc
imul
pop
orb
push
fwait
enter
mov
sbb
and
neg
out
jns
mov
add
dec
stos
pop
ret
mov
mov
push
sub
movsb
in
dec
push
loopne
jb
idiv
pop
sbb
mov
dec
jl
push
aaa
out
jg
xchg
enter
cltd
shr
cltd
jg
js
pop
loopne
int3
das
stc
insl
mov
arpl
ret
aas
xchg
adc
mov
rep
dec
mov
xor
insl
xchg
jns
popa
or
xchg
pop
push
or
mov
xchg
mov
fwait
adc
pop
pop
das
mov
push
mov
mov
mov
sub
ja
adcl
add
mov
shlb
push
inc
push
jae
jl
loope
imul
rcl
leave
into
inc
mov
arpl
inc
and
pop
push
loopne
sbb
jo
lds
xor
xor
mov
int
pop
insl
lods
andl
or
movsb
pop
cmpsl
cmp
adc
mov
inc
sub
pop
inc
addr16
adc
jle
decb
imul
shl
in
lods
test
arpl
dec
cmp
sub
xor
push
push
cmc
pop
dec
inc
lock
xchg
aam
dec
add
xor
aam
cmp
pop
dec
fidivrs
xor
mov
adc
movsl
adc
push
sbb
xchg
outsb
movsb
aam
dec
dec
lahf
fisttps
cmp
mov
sbb
movsl
and
pop
xchg
je
and
cmp
mov
das
test
imul
sbb
jb
xor
add
les
das
ja
xor
mov
adc
std
pop
cmp
popa
cmp
xor
lcall
rorl
retw
mov
mov
pop
mov
jae
cmpsb
addb
pop
testl
mov
insl
lahf
filds
mov
fdivs
and
push
nop
pusha
fsubl
int
cmp
in
mov
jae
push
fadds
jbe
icebp
push
add
lcall
mov
mov
push
pop
cmp
fldl
xchg
adc
ljmp
and
and
pop
in
leave
jb
mov
dec
sub
movd
imul
cmc
bound
sub
sbb
rcll
cltd
je
push
addr16
jge
dec
cmpsl
mov
xlat
in
mov
pop
push
push
mov
inc
je
or
xor
in
jo
xchg
sarb
insl
fcoml
sub
dec
popf
xchg
out
roll
sbb
je
movsl
pop
jmp
pushf
mov
fcoms
pop
loope
lcall
outsb
roll
cltd
aam
sub
js
jmp
addl
adc
lahf
or
mov
sti
pop
test
dec
addr16
rcl
mov
cli
push
sbb
jecxz
scas
jbe
add
xchg
das
sbb
adc
jl
ds
xlat
mov
pop
fdivrl
sti
sbb
dec
in
repz
cld
mov
dec
sbb
jnp
popa
jp
mov
sub
out
bound
popf
lret
shl
pop
sbb
fcompl
mov
lea
mov
jle
push
imul
and
or
test
mov
leave
push
jg
lret
lret
in
inc
adc
ret
mov
sub
and
cmp
stc
sbb
outsb
enter
mov
es
scas
adc
outsl
adc
clc
cmp
push
jo
aaa
aas
jno
pop
add
lcall
in
mov
mov
adc
pop
fimull
or
daa
mov
or
push
sbb
xor
mov
in
test
cmp
aad
out
das
adc
push
in
cmpsl
or
push
pop
std
add
xor
push
ret
and
pusha
inc
sub
in
xor
movsl
sbb
daa
or
jnp
jecxz
jmp
scas
jbe
sbb
xchg
jp
mov
xor
mov
xor
imul
or
cli
xor
adc
xchg
or
cmpsl
cmp
in
stc
rcll
sbb
or
dec
xor
and
gs
divl
mov
nop
cmp
jmp
pop
dec
xor
mov
out
mov
out
enter
dec
jno
adc
push
mov
sarb
adcl
mov
push
fisubl
movsl
xchg
cmp
imul
and
dec
push
lds
mov
jae
aas
sarl
xor
push
es
loopne
sbb
cmpsl
or
push
inc
and
pop
bound
or
mov
pop
decb
jo
scas
xchg
mov
jno
dec
sysenter
sbb
lods
xchg
mov
imul
or
fwait
xlat
int3
or
popa
mov
sbb
mov
call
xchg
sbb
pop
sub
cmp
in
jnp
sub
mov
aam
xor
gs
ret
sub
inc
xchg
push
out
xor
add
mov
jmp
setge
mov
jp
jae
fbstp
rol
or
xchg
jmp
lret
por
jbe
leave
pop
ret
ljmp
hlt
cmpsl
push
lret
mov
adc
push
inc
mov
mov
imul
andb
orb
shll
inc
fistpll
mov
stos
and
lock
test
cwtl
mov
stc
insl
cltd
movl
shrl
lods
cmp
sbb
clc
pop
in
addr16
popa
pop
mov
out
and
and
lret
mov
jo
mov
dec
dec
inc
inc
sbb
in
popa
dec
sbb
rolb
repnz
push
jbe
hlt
insl
pop
sub
inc
push
jbe
cmp
xchg
fwait
insb
adc
mov
es
rclb
cmp
jo
mov
cmpsl
lahf
lods
pop
out
fcomip
jg
lods
push
add
lret
adc
inc
cmp
shll
in
loop
and
mov
test
cmc
lods
xchg
gs
pop
outsl
movsl
lahf
ret
mov
pop
dec
xchg
loopne
or
xchg
inc
and
cmp
pop
mov
faddl
add
ljmp
fstpt
xor
mov
xorl
int
fisttps
into
jno
dec
in
sarb
adc
xlat
xor
fcmove
sbb
cmpb
lock
scas
ret
cmp
jp
hlt
dec
stos
hlt
mov
mov
dec
push
cmp
and
xor
mov
inc
xor
mov
insb
insl
pop
in
outsb
aaa
lock
lea
inc
fidivs
xor
jns
clc
mov
push
jo
push
stc
loope
jbe
xchg
int
adc
mov
cmp
xchg
notl
xchg
mov
out
pop
sub
js
test
push
xchg
and
data16
jg
ja
ja
nop
loopne
cmp
mov
ja
xchg
stc
inc
sbb
inc
dec
test
pop
xchg
mov
pop
push
sub
addr16
xchg
test
out
xor
fs
scas
imul
push
xor
aad
sub
sbb
mov
addb
cmp
fisttps
mov
pop
mov
mov
outsb
dec
pusha
inc
ljmp
out
mulb
popf
es
and
xor
in
movsl
fcoms
mov
dec
pop
adc
stos
xchg
andb
adcl
out
idivl
mov
or
push
movsb
jbe
jl
mov
sub
jge
mov
pop
mov
jb
sti
mov
inc
in
inc
frstor
imul
mov
and
shrb
adc
mov
in
cmp
jl
cli
loop
or
and
add
and
or
cmp
fisttps
xor
jno
iret
int
pop
adc
mov
pop
push
in
mov
or
push
pop
aaa
rcl
lock
cs
pop
stc
fs
out
cmp
cmc
jl
add
imul
shl
and
fcmovnu
inc
scas
addr16
dec
push
ja
mov
sub
ret
mov
pop
fadds
push
bound
clc
dec
dec
push
jmp
out
xor
xchg
aam
fisubrs
cld
dec
jg
popa
xchg
cmp
nop
test
inc
enter
arpl
aas
pushf
aad
dec
cmp
aas
cmpsl
aas
cmpsl
sti
mov
outsl
sub
add
cmpsb
in
stc
sbb
lea
in
mov
mov
mov
rcrb
sub
cmp
js
pop
popf
inc
inc
lds
mov
int
mov
push
xchg
and
clc
movsb
fiadds
push
loopne
pop
cmp
test
bound
arpl
xchg
sar
lret
jmp
push
dec
adc
pushf
movsl
inc
mov
adc
out
rcrb
cld
push
cmp
aas
jp
jecxz
push
fistl
inc
adc
sub
lcall
sbb
jg
xchg
ss
dec
xor
lret
mov
gs
insb
fiadds
test
popa
pop
mov
pop
push
cmp
in
cmp
lea
inc
fbstp
pop
adc
loopne
or
rolb
push
mov
cwtl
leave
jnp
add
pop
sbb
std
sarb
loope
or
fmuls
fisttpll
stos
lods
push
xchg
push
xor
cli
push
dec
data16
sub
cmp
or
rclb
inc
out
shlb
ss
or
mov
pop
pop
scas
insb
mov
ret
stos
mov
inc
xchg
lret
mov
or
xor
push
mov
push
addl
loope
call
gs
ror
rorb
hlt
sbb
push
orb
mov
ror
inc
pop
push
jno
int3
jle
loope
dec
repz
lds
xchg
and
gs
lcall
ficoml
pushf
jge
ret
sbb
or
mov
jns
jmp
pop
in
jb
fldcw
outsb
fiadds
xchg
inc
jne
push
sbb
mov
ret
lahf
andb
jge
movsb
and
testl
inc
fwait
int3
push
fwait
out
iret
push
cmpsb
out
adc
dec
push
fimull
xchg
mov
dec
aam
push
jb
movsb
mov
out
jno
frstor
and
test
or
mov
imul
jnp
sahf
adc
jbe
dec
inc
leave
loopne
imul
jp
add
aaa
sub
stos
mov
pushf
pop
fidivs
jb
pop
pop
xorb
lcall
pop
cmc
or
mov
mov
sub
dec
js
mov
loope
or
cmp
lahf
addl
ljmp
jecxz
ja
ficomps
adc
add
pop
mov
sbbb
int
ss
insl
in
and
ds
fistpll
mov
sbb
push
in
cmc
jmp
icebp
test
sbb
sub
gs
stc
insl
sbb
lock
in
sub
notb
push
mov
mov
scas
leave
addr16
dec
add
jmp
dec
mov
cmc
dec
and
fsts
ljmp
add
or
cmp
mov
in
gs
pusha
mov
in
mov
and
mov
cmp
jo
lret
sub
dec
andl
loopne
push
lods
fmulp
les
xor
cmp
nop
adc
fiadds
jp
sub
lahf
pop
push
jmp
push
out
in
push
fildll
aad
loopne
gs
add
cmc
mov
sub
mov
iret
xchg
dec
cltd
adc
ds
insl
jbe
hlt
mov
sbb
jmp
inc
fadd
sub
neg
rorl
notl
and
mov
jg
imul
mov
inc
out
inc
inc
notl
or
std
xchg
jmp
shr
pusha
sub
mov
mov
cmc
pop
insl
ret
jo
cmpsb
loope
das
aam
out
rclb
dec
mov
and
mov
mov
testb
das
fstpl
or
fnclex
mov
xlat
pop
mov
std
int3
xor
xor
stc
mov
and
jns
cwtl
sub
loopne
dec
xorb
adc
gs
roll
mov
mov
or
mov
and
adc
iret
push
stos
pop
bound
mov
add
push
xchg
push
cmp
pop
and
mov
pusha
jb
dec
daa
lahf
jo
push
sbb
fstl
cmp
cs
mov
sbb
or
cmp
jb
arpl
jne
aam
repz
jns
sub
icebp
pop
push
sub
movsb
mov
push
mov
and
arpl
rolb
repnz
fbld
fcmovu
arpl
test
inc
popf
shll
sbb
enter
pop
pop
or
loopne
inc
mov
arpl
fs
dec
mov
cmp
imul
into
addr16
jb
inc
dec
or
das
dec
icebp
ficomps
pop
or
adc
sbb
out
and
or
repz
push
aaa
xchg
arpl
jecxz
xchg
jecxz
and
and
mov
rol
jge
mov
pop
pop
out
insb
pop
pop
sarb
push
mov
mov
in
ret
lea
jge
or
fidivl
icebp
jg
xlat
mov
pop
sbb
cmp
mov
dec
add
push
shlb
push
std
movsl
mov
add
pop
into
sub
dec
mov
incl
ljmp
aas
pop
mov
or
push
movsl
stos
or
ljmp
mov
outsb
mov
pop
fildl
stc
dec
les
cmc
dec
fistl
sti
popf
mov
sbb
sub
push
or
sbb
adc
xrelease
or
lea
cmc
fstps
fsubp
lret
cmp
mov
dec
cmp
push
jmp
sbbb
push
psubusw
std
inc
js
and
cmp
or
dec
cmp
pop
imul
sbb
or
lock
inc
insl
mov
mov
test
fimuls
pop
push
andl
shrl
push
xor
in
or
sarl
lea
outsl
adc
xchg
out
shl
mov
adc
out
xor
push
out
mov
imul
xor
ss
or
hlt
testl
pop
push
xor
scas
aad
xor
repz
fsts
push
rorb
push
fists
mov
push
clc
lea
jp
stos
cwtl
adc
xchg
and
cmp
adc
jl
faddl
mov
sbb
push
stos
arpl
adc
vcvtps2pd
add
les
lret
add
push
mov
pop
jnp
cmp
cli
lds
fldt
mov
mov
pop
cmp
cmc
ds
cmp
pop
bound
nop
mov
inc
xlat
sub
mov
ret
dec
push
adc
pop
mov
jb
jge
int
je
pop
mov
mov
test
scas
pop
mov
rcrb
cmpsl
cs
sbb
cmp
cmp
dec
push
or
cmpsl
sbb
mov
stos
push
cmpsl
stos
jae
movsl
pusha
jmp
mov
adc
popl
push
imul
pushf
mov
jmp
cmp
mov
jge
add
jle
div
rorb
sti
shlb
push
out
xchg
rorb
out
bound
js
ljmp
repnz
xor
dec
push
imul
cmp
subb
aaa
dec
adc
mov
jb
pop
out
mov
ffree
les
pop
ljmp
repz
xchg
fs
push
sub
mov
daa
jecxz
mov
gs
nop
jge
in
psrlw
jno
pop
jnp
xor
scas
repz
test
ret
jno
push
aas
mov
push
lods
cmp
jo
sub
rorl
roll
jecxz
inc
leave
shl
mov
loop
mov
sbb
sbb
icebp
aas
push
add
aad
mov
push
repz
mov
sub
and
push
mov
and
addr16
inc
xlat
cmp
xor
ja
jge
repz
fcomi
lods
push
cmp
int
cmp
fsubl
xchg
dec
add
or
ss
adc
je
push
fdivrp
stc
addl
cltd
mov
das
lds
pop
and
sbb
rcl
out
sahf
shl
fucomp
aas
sbb
imul
jmp
jmp
dec
xchg
dec
push
jge
sbb
xchg
push
add
ja
push
inc
dec
and
xor
fucomp
lock
pop
insl
or
push
mov
inc
stos
mov
out
add
cmp
out
xor
scas
mov
mov
cmp
dec
and
dec
sti
push
aam
dec
or
clc
insb
fidivrl
test
mov
fwait
lret
inc
lret
lret
outsl
inc
jecxz
faddp
mov
imul
push
sbb
insl
jp
dec
mov
fbstp
xchg
push
in
jnp
xor
cwtl
repz
outsb
adcb
addr16
push
inc
jmp
ss
push
ja
in
and
nop
outsb
int3
insb
and
inc
pop
enter
scas
adc
int
pusha
cwtl
outsl
push
clc
rcl
jp
vsqrtsd
xchg
inc
push
sbb
jo
stos
std
or
loop
inc
imul
scas
xchg
sbb
push
ret
xchg
mov
and
jp
stos
clc
jb
jne
inc
lods
sti
ficoms
push
int
sbbl
push
mov
sbb
pop
out
mov
jle
lods
daa
add
or
push
cmpsl
lock
push
repnz
andl
leave
pop
mov
xor
fwait
data16
std
xchg
mov
jmp
movsl
mov
fstpl
fs
jbe
push
pop
and
ret
cmp
aam
or
or
mov
data16
or
idivl
lahf
ret
inc
jge
imul
in
push
cmp
pop
push
cmp
xor
push
jae
and
add
jge
dec
inc
pop
aad
sub
lcall
mov
add
popf
dec
pop
sbb
outsl
adc
lods
mov
mov
mov
lods
push
stc
adc
test
or
lods
mov
adc
sbb
fistps
out
enter
sub
mov
stc
rcll
dec
pop
dec
cmp
or
cmp
or
aaa
xor
fucomi
or
data16
adc
push
mov
push
dec
lods
rolb
jno
inc
call
test
mov
mov
xor
test
xor
mov
push
cmp
push
cmc
adc
test
sbb
sub
stos
icebp
mull
mov
adc
jecxz
sahf
adc
out
pushfw
mov
outsl
repz
in
lds
fstl
inc
dec
pop
es
sub
jl
cmp
sub
test
pop
int
sti
iret
cwtl
dec
aam
xor
and
andb
xchg
dec
outsb
xor
aad
push
add
sbb
enter
out
pop
outsl
loop
inc
das
pop
hlt
sbb
jecxz
clc
std
les
adc
mov
jne
lods
fsubrs
cmp
jae
push
notb
cmp
inc
gs
dec
loope
and
stos
test
shlb
and
scas
pop
push
jmp
xchg
repnz
adc
rclb
cmp
mov
fs
mov
jl
data16
mov
int3
aaa
dec
jno
add
jnp
cmc
sub
scas
popf
loop
mov
mov
inc
mov
inc
test
js
and
mov
andl
sar
xchg
addb
push
hlt
sbb
das
in
aad
ret
and
cmc
sub
xchg
icebp
jecxz
out
dec
addr16
test
movb
pop
iret
enter
jg
adc
cmp
pop
insl
mov
in
fwait
or
imul
das
mov
ss
xchg
jo
cmpsl
xchg
imul
jb
cmp
fimuls
mov
les
fdivrs
cmp
das
mov
lods
mov
les
je
subl
cmp
testl
pushf
arpl
in
jae
addr16
sub
idivb
add
push
scas
pop
fidivrl
aas
push
mov
push
cmc
imul
push
push
insl
pop
jbe
pop
xchg
dec
fwait
aaa
andl
addl
out
lods
jmp
jle
rcll
loopne
into
subl
inc
test
jno
fwait
cmp
movl
sbb
in
fwait
xchg
pop
sbb
mov
mov
sti
das
jmp
cmc
mov
mov
popf
or
hlt
add
aas
cwtl
icebp
jmp
adc
or
movsb
in
or
jns
and
pop
aam
mov
adc
repz
stc
jo
mov
test
movsb
out
dec
daa
pop
cmp
not
imul
cmp
push
mov
push
push
push
add
cmc
push
sub
imull
adc
leave
ret
mov
xor
sbb
xchg
cmpsl
mov
sarb
sbb
scas
dec
dec
mov
stos
pop
cmp
jmp
lods
es
jg
cmp
jo
ss
bound
inc
push
fs
xchg
lods
std
sub
push
jo
rol
in
bound
sbb
cmc
jmp
std
cmp
pop
mov
sbb
mov
call
or
ret
stos
das
movsl
ljmp
sub
leave
sub
sbb
int
mov
xor
cmp
mov
lret
movq
fwait
roll
call
mov
jae
pop
lods
xchg
xor
mov
sub
lods
lds
pop
pusha
sub
cmp
test
and
cmp
jp
add
outsb
mov
and
mov
pushf
and
push
cmc
add
shrl
sbb
dec
orl
iret
inc
mov
hlt
pop
mov
sbbl
mov
mov
pusha
cmp
and
lea
inc
aad
mov
leave
outsl
mov
test
out
js
sub
push
pop
and
sub
push
fisubrl
inc
inc
pop
negl
pushf
repz
lret
inc
cltd
cmp
int
push
aam
add
cmpsl
jns
fistpl
das
lock
shrl
and
push
xor
hlt
sbb
jnp
xor
add
mov
push
dec
inc
cmc
jo
sti
enter
dec
jecxz
and
daa
call
and
adc
push
inc
adc
test
bound
cmc
mov
loop
sub
xchg
mov
stc
addb
hlt
jl
cmp
cmp
sbb
sbb
sbb
nop
pop
clc
loope
mov
sub
and
jo
vshufpd
sub
rcll
pop
mov
aas
pop
icebp
enter
push
fiaddl
stos
push
aam
add
jb
cmpsl
adc
sysret
jg
sbb
mov
jnp
rcr
push
enter
adc
popa
mov
je
outsb
sti
cmp
push
insb
add
xchg
jecxz
add
cmp
jb
lods
fdivrs
pop
push
adcl
mov
jg
push
sub
fcoms
pop
ret
jl
mov
int3
pop
xor
push
xchg
jge
sub
cmc
mov
cld
mov
xlat
mov
lahf
xor
lret
mov
stc
dec
fists
mov
addl
push
scas
mov
xor
movsl
neg
mov
adc
jo
jo
add
lcall
orb
sub
dec
sbb
fst
negb
test
dec
xchg
and
pop
pop
sub
mov
sbb
fst
mov
ja
and
cmp
pop
inc
mov
das
stos
roll
pop
stos
ja
loopne
mov
xorl
inc
cs
sub
jg
cmp
add
outsl
mov
mov
jl
fstps
jne
jmp
mov
pop
fwait
mov
std
repz
cmpsl
sbb
lods
cmp
imul
xor
mov
cs
or
sub
cwtl
fwait
push
jo
xchg
pop
je
loope
dec
mov
out
and
mov
addr16
cmp
rorl
jecxz
popl
shlb
push
shlb
cli
ret
mov
inc
rolb
adcl
pusha
or
cmp
mov
push
lock
cld
cli
subb
and
mov
stos
mov
in
popa
pusha
flds
movl
nop
push
lods
lods
cmpsb
xchg
xchg
data16
mov
add
sbb
mov
pop
insb
fiadds
push
stos
aad
fildl
sti
xchg
mov
clc
push
push
jns
jp
cmp
cld
loopne
aam
and
push
lret
mov
jo
dec
cltd
adc
fcmovu
pop
xor
ds
xchg
inc
push
sub
pop
out
inc
push
nop
sbb
shrl
mov
gs
dec
xor
xor
cs
xchg
cwtl
or
sarl
xchg
jns
add
lods
subl
pop
pop
sub
stc
ss
mov
std
repnz
out
sub
orb
fcomps
inc
cli
das
pusha
inc
into
adc
mov
out
into
lahf
mov
mov
add
pusha
pop
pop
mov
ret
in
fs
pop
sbb
ror
and
enter
xchg
cwtl
decl
leave
mov
int
cs
or
sarl
cld
xchg
or
and
mov
jmp
and
mov
or
cmp
andl
dec
nop
int3
imul
adc
mov
mov
pop
and
inc
inc
shll
adc
dec
cmp
xchg
mov
mov
or
pop
mov
dec
aad
inc
add
mov
enter
add
rolb
add
repnz
out
sbb
outsl
xchg
fxch
sar
xchg
sbb
cmp
fidivs
mov
mov
rcr
pushf
xchg
xchg
xorb
inc
js
mov
fmul
dec
xchg
in
mov
fsubr
jp
sub
bound
cwtl
and
push
aas
adc
enter
imul
mov
adc
sbb
jg
pop
cmc
mov
fadd
rol
ret
xor
pusha
leave
push
cmp
inc
testb
jae
inc
adc
test
lods
ret
ret
loopne,pt
adc
jl
mov
addr16
js
rorl
or
sbb
mov
lahf
xchg
pushl
pushf
ret
cmp
xlat
loop
pushf
cmp
push
std
add
dec
mov
lcall
inc
lods
mov
test
cmp
dec
sub
pop
ret
mov
repz
arpl
and
pop
test
in
imul
xchg
xlat
fnsave
arpl
ficomps
and
xlat
pop
iret
jmp
ja
jae
cli
popa
or
pusha
lcall
pop
fs
pop
repz
mov
push
fiaddl
inc
dec
push
mov
push
roll
popa
rcll
cmp
lea
lods
sbb
cmp
lret
adc
sub
mov
fidivs
pusha
sbb
add
sbbl
bnd
mov
bound
out
mov
popf
sub
and
or
xor
std
in
sub
gs
out
sub
xchg
rcll
jle
adc
jne
inc
cmpsb
cmp
ret
clc
fsubl
inc
movsb
cmp
lcall
mov
enter
lahf
push
ljmp
testl
pop
loope
adc
cmp
aad
cld
data16
push
imul
das
loope
inc
or
out
lahf
aas
sub
and
gs
scas
movsb
mov
sub
ret
adc
js
lret
movsb
ds
inc
frstor
int
js
imulb
in
repnz
xchg
fnsave
aas
cmp
sub
cs
pusha
lret
mov
mov
inc
pop
mov
rcr
notl
push
jae
jne
push
mov
cmp
sub
jns
mov
pop
out
jbe
push
test
or
cmp
mov
xor
rcrb
out
sbb
rorb
daa
push
out
leave
add
cmp
cmpsb
and
ds
imul
xchg
fs
fcomi
aam
mov
cmp
out
or
repz
sahf
lods
pop
inc
add
and
lods
inc
pop
fcmovu
cmp
inc
gs
icebp
popa
mov
mov
fdivp
inc
in
jno
fs
inc
pop
imul
sbb
inc
pushf
mov
movsb
push
cwtl
sbb
mov
into
push
or
add
mov
leave
mov
xor
shlb
fisttpll
mov
lahf
sub
es
in
movsb
pop
push
repnz
mov
sbb
sub
and
in
xor
or
int3
add
dec
sub
insb
popa
and
pop
jnp
ljmp
lds
sub
and
push
rcl
repnz
arpl
out
shrb
je
mov
sbb
js
lods
adc
push
fld
dec
mov
lcall
sti
clc
in
mov
push
outsb
das
mov
cmpsl
movsl
cltd
imul
repz
jecxz
arpl
lea
imul
imul
jp
xor
mov
cmp
into
sbb
mov
cmp
cli
mov
sbb
mov
sti
jge
ds
cltd
mov
cmpsl
jmp
jae
mov
cli
inc
pop
movsl
xchg
outsb
jae
ret
or
aad
dec
inc
imul
adc
and
outsb
pop
jmp
movsl
enter
xor
les
dec
arpl
pop
aad
mov
lds
inc
call
jl
fwait
and
test
call
push
clc
and
adc
or
call
enter
mov
push
iret
popa
inc
out
scas
aam
add
xchg
popa
imul
fisubl
and
cwtl
push
xor
mov
dec
sbb
sahf
xor
movsb
cmp
mov
clc
das
jl
es
and
imul
jg
sbb
rol
jno
repnz
stos
jmp
dec
mov
aam
xor
imul
mov
orl
mov
inc
stos
lret
mov
sub
cwtl
inc
mov
lds
and
roll
cmp
xchg
mov
xor
and
inc
out
jbe
movsl
inc
sbb
sar
cmp
lods
and
mov
popa
es
pusha
call
call
test
sub
cli
jo
push
fisubrl
mov
mov
repnz
dec
cmp
dec
mov
daa
jp
and
push
cwtl
cmp
xor
movsl
idivl
inc
xchg
mov
and
add
je
sub
xchg
aas
push
outsl
clc
cmpsl
xchg
pop
mov
dec
mov
out
add
add
ficomps
std
cmp
sbb
sub
dec
repnz
add
inc
je
mov
and
jge
mov
icebp
xchg
pusha
std
cmp
negl
insb
test
ror
fisttps
popf
jns
loop
stos
push
pop
jb
sub
leave
add
push
xchg
cltd
fwait
rorb
jb
loop
push
fsub
fldenv
xchg
in
cltd
add
pop
dec
mov
aaa
addb
int3
mov
out
mov
jnp
ret
fdivs
push
jo
orb
jae
adc
lret
jg
loopne
jl
decl
shll
int3
sbb
xchg
into
aad
pop
js
lret
js
cmp
cmp
mov
das
mov
iret
dec
sub
dec
aas
out
adc
pop
mov
shlb
inc
adc
out
andl
gs
clc
fldenv
jp
test
rcrl
or
cmp
jge
movsl
icebp
adc
stos
xchg
push
cs
int
pop
xor
icebp
cmp
rol
orb
pop
cmpsl
sbb
sub
movsl
aad
cmpsb
push
cmpl
addr16
mulb
xchg
in
mov
dec
push
stos
inc
fs
jge
mov
cltd
pop
xchg
test
adc
or
repnz
out
inc
cmp
push
insb
dec
mov
mov
inc
fbstp
andl
add
in
aam
add
jp
mov
jno
mov
xchg
sbb
je
imul
lods
pop
add
mov
das
shrb
push
pop
push
xchg
push
cmp
hlt
gs
and
vcvtsd2si
outsl
push
div
fstpt
mov
pop
sub
add
sbb
test
ss
xchg
sarb
and
faddl
leave
mov
in
mov
sub
jl
add
inc
and
add
push
push
repz
jne
roll
mov
pop
insb
mov
testb
inc
mov
cwtl
dec
in
repnz
mov
inc
and
sub
ja
mov
xor
test
or
push
inc
jno
jb
mov
lods
hlt
push
dec
loopne
fisttpll
pop
shll
pmulhuw
pop
fists
dec
mov
pushf
dec
outsb
add
out
mov
dec
xor
andl
btc
je
jecxz
enter
hlt
mov
insb
xchg
dec
and
dec
int
pop
ss
inc
lea
adc
jne
jns
call
inc
call
mov
push
push
popf
lret
and
or
dec
or
jecxz
pop
rorb
dec
imul
push
add
and
or
jp
mov
cmp
arpl
mov
gs
push
jecxz
mov
mov
mov
xchg
cmp
xchg
pop
je
sbb
js
aam
mov
mov
jge
repnz
lcall
sbb
push
sti
imul
xchg
push
pop
pop
bound
pop
les
ret
add
popl
lcall
sbb
test
xchg
xlat
pop
fwait
jb
out
in
mov
loop
dec
ss
inc
inc
or
dec
mov
repnz
sbb
rclb
notb
sbb
ficomps
cvtps2pi
mov
sbb
stc
lahf
add
lock
fimull
hlt
out
call
cld
ret
mov
and
jbe
cmp
jne
icebp
jno
notl
loop
aad
mov
popa
outsb
stos
test
bound
push
mov
push
xchg
int3
ficomps
lds
add
mov
xor
sbb
in
pop
sti
notl
les
push
add
test
xor
jmp
push
lret
pop
mov
shrb
ret
jl
push
das
dec
jle
mov
sub
mov
mov
pop
enter
icebp
in
xor
dec
mov
add
sbb
lods
xchg
jns
dec
adc
ret
pop
cwtl
pushf
fdiv
loope
mov
dec
jbe
out
push
push
nop
push
repz
fisttpll
mov
lahf
cmp
repz
bound
inc
push
scas
push
push
cwtl
fsubrl
dec
arpl
mov
jae
mov
js
outsl
mov
shll
cli
mov
ds
je
stos
jp
cmpsb
and
jae
sbb
in
cwtl
xor
mov
push
cmp
sahf
and
fisttpl
xchg
inc
sbb
int3
and
xchg
icebp
sbb
mov
and
je
decb
xchg
incl
adc
fcoms
movsl
or
pop
mov
mov
mov
scas
sub
adc
add
popf
jbe
gs
je
repnz
or
mov
rolb
and
add
in
ljmp
inc
cmp
xor
ret
dec
andb
test
repz
mov
pop
enter
push
addb
lret
andl
lcall
fwait
mov
out
dec
mov
das
cmc
mov
imul
popf
lock
dec
pop
add
loop
push
push
mov
push
lret
arpl
test
test
or
das
or
inc
push
xchg
jb
mov
int3
or
dec
aam
dec
decl
out
fsts
mov
and
sub
pop
add
pop
orb
insl
fsub
je
mov
mov
xor
jno
dec
inc
mov
jne
cmpsl
enter
call
adc
xchg
sub
inc
pop
push
mov
adc
arpl
dec
push
add
sbb
xchg
fsin
xor
mov
cmpsb
xchg
insb
jmp
cmpl
xchg
adc
or
and
aad
addr16
jae
or
iret
js
scas
shlb
mov
repz
jecxz
fwait
sub
mov
enter
shlb
jl
xorb
lods
movsl
jg
xor
sub
inc
cmp
add
pushf
and
int
jg
scas
adc
loop
inc
lcall
cli
add
or
in
mov
in
mov
test
hlt
jb
sbb
adc
mov
add
mov
fmull
popa
cmp
mov
add
in
mov
push
push
sub
scas
xchg
mov
push
or
or
dec
add
sbb
outsb
outsb
fdivrp
popf
sub
fsubr
pop
rcrb
xchg
std
hlt
insl
in
popf
bound
imul
loopne
bound
aas
jae
push
mov
iret
ffreep
pop
xchg
lret
push
lods
pop
sub
push
xor
sub
push
mov
fcomi
and
or
call
mov
xor
adc
push
fidivl
push
repz
sahf
lahf
je
shll
das
or
mov
lea
jp
or
fwait
nop
xor
das
pop
shll
popl
shrb
std
les
test
sub
mov
cld
jns
pop
lahf
faddl
jge
pusha
sub
push
xor
ss
pop
sub
stc
gs
jns
js
push
adc
cmp
mull
movsb
adc
subl
mov
jle
fcoml
mov
pop
es
insl
inc
mov
loope
shrl
inc
jecxz
pop
pop
mov
push
iret
dec
cmp
mov
xchg
repz
fists
pusha
push
inc
push
ljmp
mull
enter
jbe
sbb
loopne
ljmp
cmpsb
jmp
jmp
pop
inc
sub
cmp
pop
out
sub
push
xor
imul
in
sub
cmp
adc
pop
adc
lret
ja
mov
cvtpi2ps
sub
mov
xchg
cmpsl
pop
xor
jae
xor
mov
lahf
fnstcw
outsl
pop
mov
pop
addr16
cmovs
adc
lods
xchg
out
or
xor
movsl
mov
push
out
sub
sbb
lods
sahf
xchg
jmp
inc
mov
scas
jmp
mov
rol
dec
mov
jmp
mov
lret
das
push
loope
mov
clc
xor
ret
cltd
loope
cmp
in
dec
test
xchg
loope
daa
pop
aas
testb
push
mov
push
push
xor
xor
cmp
idivl
cwtl
inc
lret
and
add
push
cmp
stos
push
testl
jmp
or
pop
jnp
xchg
or
test
mov
test
inc
int3
jne
rcrl
insl
dec
or
sub
add
lock
stos
sbbl
and
and
popa
cmpsl
dec
mov
arpl
or
mov
xchg
out
cli
dec
cli
insl
push
cwtl
test
xor
push
mov
adc
push
ljmp
call
lods
mov
lret
jo
daa
fisubrl
mov
mov
jl
in
mov
popa
xor
sub
sbb
test
fsubr
pusha
push
push
dec
test
adc
ljmp
sub
add
cmp
pushl
sub
inc
adc
jo
dec
pop
inc
data16
iret
std
add
shlb
test
ds
lret
ljmp
lahf
jmp
push
xrelease
test
cwtl
pop
sbb
mov
mulb
jb
aam
inc
bound
mov
mov
imul
js
pushf
inc
and
mov
adc
cmp
jo
mov
xchg
pop
dec
sub
mov
aaa
xor
or
aam
popa
sahf
mov
pop
jl
push
add
loope
mov
push
aad
or
sub
mov
repz
and
out
insl
insb
push
cs
lds
jmp
jl
movsl
lds
xor
cmp
addr16
mov
fst
mov
xchg
push
and
cld
adc
xor
test
aad
nop
xchg
fisubrl
insb
in
push
jne
nop
xor
or
push
fldt
push
jb
xor
mov
imul
sbb
sbb
int3
js
mov
jp
fistpll
ds
xor
loope
into
lret
and
or
pop
sub
std
sub
adc
sub
xor
pop
out
push
xchg
test
sahf
jl
and
push
mov
es
xlat
mov
push
call
into
popa
pop
push
xchg
stc
cmpsl
or
mov
ror
adc
dec
inc
popf
lock
lcall
lahf
repz
push
mov
sub
pusha
into
add
fs
cmp
and
stos
mov
cmc
int
inc
rorb
xchg
jae
push
loope
mov
and
cltd
movsb
or
stos
mov
and
add
xor
sbb
cmp
lock
fbstp
xchg
cld
frstor
movsb
jl
xchg
adc
xor
push
dec
rcrb
dec
negb
test
insl
aad
in
jae
mov
sbb
sahf
call
cmp
pop
sbb
push
mov
ds
daa
loope
shll
test
ja
add
scas
fsts
jbe
movsl
push
shl
adc
mov
fmulp
jge
xchg
add
inc
in
mov
jp
adc
pop
or
fs
int3
xchg
test
adcb
out
ficompl
adc
or
jecxz
js
fimuls
insl
sub
add
ds
insb
je
cltd
je
icebp
lods
mov
adcl
mov
and
aas
imul
das
or
pop
jmp
aas
jb
inc
mov
pusha
mov
lret
push
mov
and
xor
fs
js
sub
std
lea
in
push
movl
push
sbbl
imul
ret
enter
hlt
and
mov
hlt
push
stos
and
pop
inc
dec
frstor
rcrb
pshufw
lahf
add
cwtl
xchg
dec
sub
into
cs
jge
sub
scas
incb
sti
call
xor
push
mov
or
push
sbb
dec
fdivrl
xchg
dec
bound
outsb
cmp
movsl
pop
or
xchg
test
sub
in
lret
adc
aas
xchg
xchg
mov
adc
mov
or
ss
loope
movsl
sub
add
jo
clc
mov
shll
aaa
mov
cli
inc
xchg
xchg
dec
test
fidivrl
or
lods
cmpsb
jbe
adc
cwtl
inc
cmpsl
mov
loop
out
out
jnp
mov
dec
cmp
in
inc
adc
xchg
mov
ja
adc
cwtl
in
cmp
test
lods
push
mov
insb
daa
xchg
jnp
arpl
inc
pop
sti
cmp
cmpsb
inc
in
and
cmp
insl
xchg
dec
jae
cmp
sub
fimull
aam
lods
xor
test
in
mov
fidivrl
xchg
adc
xor
pop
sbb
or
mov
inc
test
loopw
in
cmp
out
test
out
mov
int3
out
mov
mov
sarl
call
push
or
lods
lret
and
adc
rclb
shlb
mov
dec
loopne
jae
add
push
aam
jbe
ss
xchg
push
mov
les
dec
sbb
dec
fs
add
mov
push
sbb
les
aas
or
push
mov
enter
jae
test
sub
test
fdivrp
mov
sbb
movsb
push
xor
jl
repz
xor
jno
adc
cmp
in
mov
xor
mov
cmp
mov
sbb
adc
xchg
and
movsb
fldt
ja
cmp
ret
fwait
repnz
sbb
insl
inc
xor
cmp
add
fs
int3
outsl
sub
mov
fidivrl
xchg
mov
addb
addr16
sarl
ljmp
push
icebp
push
test
xchg
aaa
cmc
mov
pop
dec
add
jg
cwtl
push
sbb
jns
inc
in
sarb
loop
incb
scas
mov
mov
or
or
movsl
xchg
cld
out
shlb
mov
shrb
into
xchg
xchg
cmp
xlat
stos
sbb
mov
pushf
je
rcrl
jmp
jns
bound
loopne
adc
push
mov
sbb
adc
movsb
push
dec
or
pop
cmp
inc
adc
jmp
sbbb
lock
imul
jb
add
adc
mov
out
jns
mov
lcall
cltd
sub
sub
mov
icebp
test
push
and
and
test
lcall
stos
mov
fistpll
push
fidivs
mov
mov
push
dec
out
cmpb
inc
in
sub
pop
std
insb
fmuls
mov
std
popa
fbstp
push
cmpsl
xor
push
dec
sub
sbb
sub
iret
pop
sbb
dec
loope
cmpsl
mov
jnp
xlat
fmulp
inc
or
inc
push
fldcw
shrb
loopne
stc
shll
push
or
xchg
add
mov
shrb
gs
fstl
sub
xchg
sbbl
mov
push
add
repz
testl
sub
loopne
xchg
push
jg
lock
push
test
jbe
dec
sti
aas
adc
cwtl
mov
pop
ret
push
lods
cmp
xchg
enter
ret
sbb
adc
enter
cmp
fldl
ljmp
vmovntpd
imul
mov
xor
mov
sbb
xor
and
xor
add
lock
add
lods
in
mov
fs
jne
fdivrs
and
xchg
insl
push
lock
jnp
gs
dec
mov
cmp
fistps
out
mov
adc
cs
fsubl
adc
rcrb
jmp
jl
lcall
push
or
pop
sbb
clc
cmp
clc
inc
push
and
push
cwtl
insb
pop
test
nop
bound
jmp
adc
push
mov
sbb
lret
jns
data16
push
xchg
sbb
mov
movsb
fnstsw
sub
jp
ds
cmp
and
stc
xchg
mov
mov
cmp
ss
out
sub
ret
fmul
jp
pop
inc
int3
adc
inc
imul
cmp
iret
fnstsw
dec
cmp
adc
movsb
aad
jb
adc
scas
imul
mov
fdivp
dec
outsb
cli
pop
stos
and
or
pushf
jns
push
jns
ret
in
mov
add
cltd
sub
arpl
fisttpl
test
std
jge
test
pop
imul
xchg
scas
shrl
stos
jg
xchg
add
jae
jns
and
je
or
inc
nop
scas
sub
push
inc
leave
inc
push
mov
std
pop
pop
pop
stc
sub
bnd
push
push
bound
or
pop
shr
cmpsb
push
adc
mov
dec
sbb
inc
cwtl
mov
cs
dec
in
fwait
repz
adc
mov
fisubrs
push
js
hlt
xchg
js
loope
sti
das
icebp
enter
clc
aas
adc
call
notb
sahf
clc
xor
xchg
scas
out
pop
rol
pop
dec
sahf
fildll
ss
sub
xchg
rclb
jns
in
scas
incl
dec
push
xlat
lea
jne
or
pushl
insl
into
in
inc
and
and
sbb
pop
in
aas
rcl
jmp
lods
pop
jno
jl
mov
xlat
inc
insb
js
lret
sbb
insb
xor
int
arpl
xor
or
shrl
sbb
cli
loope
push
nop
push
insl
pushf
push
mov
xor
xchg
pop
popf
andl
jbe
xchg
rclw
outsb
in
xor
sbb
mov
gs
movsb
xor
scas
xor
add
cmp
stos
lea
pop
or
lret
xor
dec
jb
mov
and
loopne
inc
push
jg
dec
andb
arpl
into
in
repnz
cld
clc
sbb
jb
lock
jnp
adc
push
mov
stos
out
lds
imul
jg
dec
pop
pop
mov
jmp
xchg
xchg
data16
arpl
mov
mov
loop
dec
mov
cmc
in
popa
out
mov
xorl
mov
leave
sub
je,pt
dec
lods
call
sub
loope
or
insb
out
xchg
mulps
ror
int3
cmp
push
subb
adc
pop
lock
mov
jb
sbb
mov
sub
xchg
stos
dec
push
out
ficoml
lcall
inc
push
push
testb
pop
jmp
mov
fwait
out
cmp
xchg
js
sub
cmpsb
lds
inc
or
mov
test
mov
stc
repnz
pop
aam
dec
sbb
adc
xchg
out
jge
mov
call
push
sbb
ljmp
mov
xor
ja
sbb
mov
push
aam
inc
movsl
dec
and
cmp
inc
jl
call
or
push
dec
dec
sub
or
stc
sbb
or
es
mov
clc
pop
cmp
stc
enter
cmp
cld
xchg
js
pop
sbb
arpl
adc
out
adc
movsb
cltd
push
or
insb
ds
mov
xchg
leave
jg
add
pop
jle
xor
sub
cmpb
xlat
xchg
add
das
imul
jl
in
xor
mov
sti
sti
js
xchg
mov
sbb
movsb
adc
stos
movsl
jge
mov
xor
push
add
test
loop
pop
jp
inc
mov
lods
mov
push
inc
ds
ja
fidivs
or
int
shl
dec
fnstsw
pop
pop
fdivrs
lret
sbb
jmp
adc
stos
xor
dec
fidivrl
jae
fsubs
and
incl
out
in
cmp
jl
sahf
jmp
xchg
mov
mov
cmc
mov
mov
outsb
je
add
lea
mov
cmp
xchg
data16
jae,pt
sbb
fildll
fwait
xchg
test
push
or
dec
xor
repz
loope
dec
sarl
dec
dec
or
fbld
sub
fdivrs
imul
adc
dec
mov
mov
fsubrs
cmp
pushf
cmp
add
cmp
pop
shll
mov
fisttpl
leave
pop
pop
jecxz
xchg
push
int
mov
or
add
pop
inc
gs
inc
dec
lea
sbb
pop
mov
xchg
mov
pop
in
mov
les
fs
cwtl
mov
fnstcw
push
ret
jbe
inc
ja
inc
add
mov
xchg
arpl
lock
imul
sub
sub
aas
ds
out
push
imul
lahf
mov
jne
dec
sti
call
jo
cmp
sbb
int
outsl
pusha
aad
jnp
xchg
jl
mov
pop
xchg
aam
jecxz
cs
pop
xor
fcomps
bound
mov
xchg
test
push
xchg
push
adc
leave
or
sbb
xchg
pop
movsl
sbb
push
inc
loop
fs
push
loop
movb
lcall
testb
outsl
in
stos
outsb
and
inc
in
test
add
and
lods
jp
xor
dec
cmp
and
jno
pop
mov
or
scas
jo
xor
adc
mov
inc
cwtl
in
dec
test
xor
fldt
pop
jo
ds
out
mov
psllw
jmp
insb
scas
scas
arpl
cs
mov
inc
xacquire
or
inc
mov
xor
popa
jae
ret
mov
movsl
adc
pusha
jnp
sbb
push
in
ror
imul
xor
aas
inc
ja
push
lret
cmc
std
xor
lds
insl
cmpsl
mov
jno
aaa
sahf
cmpsb
popa
hlt
add
mov
stc
mov
clc
stos
jmp
mov
aad
dec
ret
enter
xchg
fcoms
gs
dec
sbb
pushf
sub
aaa
je
outsb
je
push
lods
xor
lods
jg
dec
es
mov
cmp
mov
or
cmp
pusha
jb
lahf
gs
xchg
testb
or
push
out
xor
sbb
push
outsl
inc
mov
and
push
inc
add
mov
add
or
sbb
sar
div
or
cmpsb
cmc
jmp
rcr
cmp
ljmp
les
pop
imul
imul
lcall
and
loop
lock
adc
mov
lahf
sbb
xchg
insl
test
enter
in
adc
movsb
push
out
xor
dec
adc
or
pop
lahf
or
xchg
mov
ss
aas
out
pop
or
jnp
outsb
add
pop
popa
clc
arpl
fisttpl
add
movsb
mov
push
out
inc
out
jl
nop
adc
mov
jb
mov
in
cltd
fsubrs
or
cmp
and
push
and
push
push
addr16
push
scas
or
sub
mov
push
sbb
out
jne
popa
mov
mov
mov
outsb
clc
push
xlat
jbe
les
push
outsb
and
jno
jp
xchg
ss
lock
hlt
cmpsl
call
adc
or
mov
test
mov
leave
ret
xor
clc
mov
mov
adc
adc
sub
movsl
js
push
adc
mov
fucomi
mov
popl
cltd
mov
jge
jmp
sbb
xor
mov
mov
mov
scas
xchg
jmp
scas
scas
dec
jmp
jge
cmp
pop
jae
add
aad
mov
and
mov
adc
hlt
push
jle
pop
xchg
xchg
xchg
dec
xor
jecxz
stos
jo
mov
jno
sub
xchg
popa
push
sub
cmp
inc
jo
lret
push
sbb
add
cld
imul
ds
adc
or
ja
sahf
mov
jmp
inc
loope
enter
adc
mov
lahf
xchg
addr16
hlt
lahf
push
gs
mov
mov
cltd
or
mov
pop
jp
hlt
or
lret
jge
push
out
jb
mov
add
clc
inc
dec
mov
aaa
enter
pop
add
add
mov
push
daa
fnop
incb
add
fwait
dec
nop
dec
out
loopne
gs
and
nop
jae
int3
mov
dec
pop
das
inc
fsts
loop
ss
pop
mov
xor
subb
xor
fsubr
mov
add
adcl
dec
ja
push
xchg
push
cmc
xchg
sub
xchg
cs
cmp
push
ror
adc
or
out
sbb
sub
cmp
inc
add
ud0
cmp
adc
test
add
rcrl
add
push
insb
and
push
lcall
or
ret
faddl
fnstcw
cmp
inc
mov
sbbl
inc
xor
jmp
add
or
fstpt
into
mov
pop
dec
scas
and
dec
movsl
jns
cmp
mov
repnz
mov
adc
push
or
push
mov
push
inc
fucomi
int3
push
insb
sub
outsb
sub
cli
push
or
fiaddl
movsb
rol
movsl
imul
xchg
fisttps
in
in
jo
sbb
stos
jno
out
fmull
pop
xchg
sti
mov
addr16
repz
sbb
jb
call
js
inc
push
lahf
mov
dec
mov
dec
dec
nop
xor
pop
mov
mov
jmp
pop
movsl
mov
lods
cmp
pop
push
mov
sub
push
ljmp
inc
aas
adc
mov
add
js
mov
mov
icebp
pop
in
out
pop
mov
mov
arpl
pusha
inc
jns
test
adc
in
xchg
loop
clc
fcomi
adc
xchg
fldenv
mov
sub
adc
mov
es
ret
mov
adc
lods
cmp
out
xchg
loop
leave
jle
mov
je
push
pop
ss
shll
xchg
push
xchg
cwtl
in
mov
mov
aas
xchg
push
hlt
mov
sub
pop
jo
sbb
ja
mov
lods
and
loopne
pop
hlt
scas
stc
xor
push
scas
xor
test
cmp
cmp
or
jp
mov
jecxz
mov
mov
mov
adc
out
dec
sbb
mov
fisubrs
fs
jae
adc
data16
push
roll
clc
es
cld
loop
mov
fdivrs
mov
cld
mov
sub
ret
push
int
enter
or
fiadds
add
lock
sub
nop
push
outsl
les
test
mov
pop
mov
cwtl
sub
push
lcall
out
mov
iret
jne
xchg
std
mov
je
jmp
sub
daa
adc
jle
push
or
pop
je
movb
idivl
xchg
pop
lds
mov
jmp
flds
sbb
out
xchg
int3
test
sub
push
lret
inc
mov
fnstcw
fwait
lock
fstpl
in
sbbb
out
add
mov
int
aam
and
mov
or
jg
out
sub
or
movsl
and
or
push
push
xchg
cwtl
into
mov
push
daa
jns
adc
loop
pop
stos
xor
xor
cmp
stos
xchg
and
test
mov
pop
or
test
jge
dec
fsub
and
idivb
sbb
mov
xor
scas
das
repnz
shll
lods
push
in
lret
jns
mov
fmul
loope
adc
aas
inc
push
mov
js
cwtl
ljmp
xor
push
mov
popa
outsb
int
scas
xchg
xor
cmp
adc
outsb
mov
cmp
mov
sub
in
popf
push
sub
mov
stos
pusha
mov
rcll
mov
clc
push
mov
scas
out
in
mov
shlb
daa
and
pop
xor
imul
cli
xchg
fnstcw
pushf
orl
pop
add
popa
jmp
jae
or
rcrb
dec
mov
shlb
add
jecxz
mov
ficomps
adc
push
adc
mov
fdivs
pop
das
cmp
fdiv
mov
jbe
jle
mov
push
adcb
or
cmp
xchg
iret
mov
push
shl
mov
imul
xchg
jp
inc
cmpsl
cmp
in
mov
dec
jb,pt
adcb
inc
xchg
add
pop
push
mov
or
loop
int3
dec
jecxz
jb
sub
xchg
out
push
sub
or
imul
mov
sub
ror
inc
cmp
sub
movsl
stc
mov
je
sbb
sbb
lcall
jbe
enter
pop
lock
sbb
lret
das
ss
pop
or
loop
sub
pop
add
adc
in
clc
xchg
fisttpll
popa
sbb
data16
add
enter
mov
cli
insb
xchg
insl
mov
sub
and
ficoml
and
cmp
out
lock
dec
adc
and
inc
test
ffreep
xchg
sub
xchg
fimuls
pop
std
mov
or
es
adc
pushf
push
dec
and
loop
dec
mov
push
fwait
sub
xor
xchg
adc
call
ret
loope
xor
sub
fstpt
mov
mov
dec
dec
cmpsl
and
cmc
inc
rep
sub
mov
push
cs
push
popa
loop
mov
ljmp
push
push
jge
sbb
xor
xchg
adcb
xor
or
cmp
mov
lods
imul
repnz
mov
popa
pop
das
push
fiaddl
push
adc
jae
pop
aam
scas
mov
lret
ret
sub
adcb
dec
pushf
xchg
cmp
popa
jge
scas
sbb
push
and
dec
pop
aas
mov
jge
stos
fisubs
mov
lods
call
mov
adc
mov
dec
ficomps
inc
adc
ja
pop
stos
or
fisubs
ds
lea
adc
lods
mov
xchg
rcrb
rol
leave
test
subl
pop
test
pop
pop
mov
pandn
or
ret
in
ror
icebp
ret
push
movsl
not
cmp
sbb
divb
push
cmp
sahf
inc
hlt
negb
ss
adc
fwait
xchg
cs
and
leave
fisubrs
lcall
inc
in
outsb
cmpsl
rol
inc
pop
iret
arpl
sbb
or
ss
aas
sti
mov
add
mov
mov
test
testl
mov
mov
and
pop
xrelease
mov
pop
xor
lea
add
jb
push
call
inc
cmp
add
push
lahf
popa
and
xchg
adc
push
sub
jecxz
push
inc
ja
sbb
push
xor
leave
js
push
rcrl
repz
add
mov
data16
and
xor
jae
and
add
inc
pop
xor
inc
or
mov
push
jbe
inc
lret
pop
cld
adc
std
fimuls
fsubrl
cmp
mov
call
jns
add
xchg
sbbl
xchg
cmc
fs
jmp
adcl
in
shll
or
insl
mov
loope
mov
sub
cltd
push
addr16
sbb
lcall
add
cmp
xchg
shlb
push
jge
neg
mov
add
cli
cmp
xchg
xorl
pushf
adc
les
cli
std
xor
push
dec
cmp
movsl
pushf
pop
sbb
cs
push
dec
and
inc
out
sub
mov
add
dec
rolb
divl
and
das
imul
and
lods
aam
or
mov
cmp
mov
sbb
xor
mov
divb
pop
xchg
add
jecxz
cmp
mov
sbb
aaa
push
sahf
imul
pushf
mov
and
fisubrl
adc
shl
pop
and
scas
xor
lret
test
int3
cmpsb
mov
push
test
or
sub
jne
jle
lods
imul
sbb
cmp
sbb
sub
sub
dec
je
push
push
movsb
scas
std
insl
inc
leave
sahf
into
cmp
outsl
loop
hlt
adc
sti
jae
jae
push
scas
push
cmpsb
xchg
lea
scas
stos
mov
and
iret
lcall
xchg
push
pop
dec
sub
shll
add
aad
insb
jb
gs
mov
dec
or
fs
fdivrl
sti
pop
andb
fisttps
pusha
fwait
jp
cmp
dec
shlb
repnz
subl
ja
sbb
pop
fcompl
mov
lods
add
inc
pop
ret
out
es
shrb
test
movsb
jl
lods
call
mov
add
out
mov
push
mov
jnp
and
aas
mov
mov
sub
mov
popf
push
mov
inc
ret
sbb
out
movsl
mov
leave
sub
inc
jmp
call
push
sbb
jbe
adc
push
std
ja
jb
sub
loopne
mov
mov
das
stos
loope
enter
pop
pop
jecxz
xchg
inc
lock
jno
add
push
cs
xor
stos
pop
inc
ss
pushf
nop
jns
dec
insl
popa
iret
sub
enter
or
test
int
pop
xor
fildll
sahf
xchg
in
das
dec
push
imul
or
jmp
call
in
dec
aaa
imul
mov
pusha
cmpsb
sahf
bound
subb
xchg
popf
push
push
in
fwait
out
bound
xchg
movsl
ret
ds
ret
aaa
lcall
jne
mov
jg
jns
mov
jg
xor
xchg
sbb
inc
cmp
cmp
xchg
jo
cmp
int
into
xchg
push
rclb
mov
jne
push
inc
pop
adc
xchg
cmp
xor
add
xchg
lcall
out
vrsqrtss
shl
outsl
adc
lock
add
imul
cmp
sub
mov
rolb
push
push
xchg
sub
push
adc
sub
xchg
sub
add
std
fs
mov
lds
mov
xchg
and
xchg
ret
mov
out
lds
in
imul
sar
adcl
out
mov
push
sbb
pop
adc
sahf
push
jbe
mov
movsb
dec
and
dec
mov
push
les
fwait
imul
xor
test
insl
dec
clc
mov
lock
sub
inc
dec
es
push
adc
jle
gs
mov
enter
pop
cmp
int
js
adc
int3
push
xchg
arpl
rclb
repnz
jmp
push
xor
int3
mov
inc
xchg
jb
pop
inc
into
xchg
rclb
scas
movsb
js
jae
xor
sahf
mov
mov
incl
shrb
cwtl
dec
imul
mov
push
mov
mov
test
mov
popa
xor
mov
mov
adc
and
sahf
xchg
test
dec
push
mov
xchg
adc
fmuls
push
or
cmp
xchg
jp
clc
fidivrl
ficoms
mov
lret
or
mov
je
mov
adc
lock
test
lahf
xor
ljmp
imul
jns
mov
push
pop
orb
fsubrp
adc
in
jne
pop
fldcw
mov
shlb
aas
in
push
xor
mov
push
or
sub
imul
loop
out
and
inc
movb
jecxz
mov
sahf
dec
insb
mov
call
sbb
xor
fs
test
stos
in
push
popf
pop
add
mov
sub
int
popf
and
pop
shll
push
adc
stos
push
lods
aam
stos
xor
jbe
pop
jb
and
cwtl
dec
dec
gs
mov
add
stos
lcall
xchg
cmp
jns
mov
add
sbb
sub
mov
add
dec
sub
push
addr16
push
xchg
neg
push
movsb
and
mov
les
lods
add
mov
clc
mov
jae
inc
adc
in
mov
sub
in
loopne
mov
sub
scas
and
or
out
mov
xor
ss
push
push
or
pop
cli
fdivrs
lahf
and
scas
dec
test
adcl
push
cmp
outsl
xchg
rclb
enter
lock
mov
cwtl
push
mov
lds
shll
push
cmp
js
xor
jge
bound
pop
call
adc
popa
mov
clc
aad
arpl
xchg
and
mov
pop
lcall
inc
jge
scas
sub
enter
int
adc
aaa
pop
xor
sub
sahf
std
sub
mov
popf
mov
cmp
mov
icebp
outsb
sub
roll
inc
pop
pop
icebp
movsb
stos
jmp
mov
inc
jb
int
pushf
data16
inc
fdivrl
push
loopne
insb
cmpb
xor
pop
addr16
jb
dec
das
jmp
jge
dec
fwait
testl
jp
fldt
mov
leave
sti
loopne
lods
lods
fisubl
aam
repz
pop
bound
xor
mov
mov
sub
ds
loop
ss
xchg
jb
push
sbb
dec
mov
outsb
cltd
jecxz
mov
push
outsl
xor
cli
insl
pop
repnz
cmpsl
mov
cs
jp
out
fwait
dec
lret
aaa
cmpsl
cmp
add
push
sbb
fld
push
push
movl
iret
rclb
test
adc
xchg
jae
mov
pop
jle
ss
xor
add
add
xor
rcrb
jno
adc
push
inc
pop
popa
stos
mov
cli
sbb
sbb
ret
push
test
sub
lock
cli
inc
add
mov
mov
mov
cli
cmp
jnp
repnz
cmpsb
push
xchg
dec
mov
je
sbb
add
adc
dec
cmc
cmp
popf
cmpsl
test
nop
repz
or
outsl
fisttps
sbb
mov
mov
cld
xchg
push
or
scas
xor
adc
addl
test
inc
or
stc
push
subb
xchg
or
int3
rorb
or
lahf
xchg
cmp
cmp
mov
adc
mov
movlps
inc
mov
mov
icebp
xor
mov
daa
sub
out
fwait
sti
sub
or
cs
xchg
xchg
jg
add
inc
stc
lret
call
jmp
and
pop
jae
outsb
popf
ret
or
fs
addb
push
ss
lahf
mov
out
jo
inc
xor
test
scas
mov
ja
lock
addr16
mov
dec
mov
mov
adc
mov
sbb
jo
movsl
cmp
dec
mov
inc
dec
cvtps2pd
jno
xor
dec
imul
xor
mov
test
fmul
movsb
sub
sub
jle
je
aam
cmp
or
popf
sub
test
xchg
mov
cmp
mov
jp
adc
ret
and
mov
adc
clc
xor
hlt
pop
lret
jb
xor
add
cs
cli
pop
cmp
aas
shlb
jmp
js
shll
jg
movsb
pop
outsl
mov
sbbb
xor
shll
jmp
loopne
push
mov
push
cmpl
insb
std
in
adc
js
cwtl
mov
or
rolb
imul
adc
jle
repnz
lret
popa
enter
cmp
repz
or
das
fsubl
jb
cmp
jmp
mov
pop
pop
pop
push
insb
mov
and
and
imul
add
loop
ljmp
pop
xchg
fidivrl
movsb
std
jo
jno
cs
test
iret
and
sub
fs
cwtl
cmp
fmuls
cmpsb
cmp
repnz
les
aad
push
shrl
fmulp
lods
jge
mov
ret
mov
sub
test
mov
sbb
sbb
fidivl
push
mov
int
ror
mov
xchg
imul
jbe
jl
out
aaa
loope
mov
mov
leave
mov
or
jnp
cltd
jp
and
aam
xchg
mov
and
stc
mov
sbb
lret
add
push
out
in
jle
incb
mov
loope
and
aaa
cmc
inc
adc
ljmp
lods
inc
push
gs
pushf
ds
add
fmull
cltd
fisubl
cmp
sub
es
out
mov
aad
jecxz
shll
lcall
sub
arpl
inc
fidivrl
gs
xchg
pusha
push
sahf
adc
push
cmp
orl
pop
xor
mov
sbb
aaa
lea
and
mov
inc
pop
jbe
fdivrl
sti
ja
mov
cli
lret
stos
cmc
or
jmp
out
outsl
stos
mov
ja
das
pop
out
sahf
inc
jno
cmp
pop
xor
icebp
lea
aam
jae
mov
add
fs
jmp
mov
notl
sahf
mov
cmpsl
test
sbb
add
pop
lea
incl
jle
test
add
add
aaa
aad
mov
dec
popa
cs
mov
into
imul
out
repnz
mov
bound
xchg
sub
xchg
cltd
popf
lret
rorl
push
xlat
jle
jb
call
sahf
stos
pushf
cmp
scas
jno
mov
clc
cmpb
es
shlb
mov
xchg
jnp
mov
imul
cs
jne
pop
or
lret
cwtl
inc
pop
cmp
lods
ljmp
je
or
sbb
mov
ror
rcpps
jo
and
lea
dec
jns
out
lcall
cmp
out
pop
inc
adc
in
cwtl
js
lods
ret
jb
mov
push
int3
ror
ds
pop
shll
add
pushf
or
pop
bound
out
in
cmp
pop
lods
or
inc
sbb
in
or
ja
xchg
sahf
or
ret
add
cmc
sbbb
dec
inc
pop
rcll
push
push
lds
les
xor
sub
cmp
pand
dec
dec
mov
xchg
sub
xchg
xor
jmp
xchg
imul
mov
mov
xchg
mov
shlb
cmp
adc
mov
add
fisubl
out
int
push
leave
adc
mov
jg
sbb
insb
in
push
xchg
add
fidivrl
seto
out
push
lcall
pop
adcl
dec
imul
mov
jbe
add
hlt
dec
dec
or
cltd
outsb
xor
popf
icebp
mov
ljmp
lock
aad
xor
scas
ret
pop
and
xchg
sbb
mov
sub
cli
cltd
xor
xor
cmpsb
xor
pop
xchg
jnp
ficoml
push
pushf
shlb
dec
pop
clc
sbb
jnp
mov
xchg
xor
in
add
mov
in
pop
push
movsl
jmp
xchg
jmp
fsubrp
push
cmc
lret
ja
lds
cli
mov
leave
loopne
pop
jp
rcl
scas
sub
inc
dec
lahf
push
adc
mov
mov
mov
lret
and
out
cmp
rclb
or
sub
dec
lods
jge
out
shlb
and
call
cmp
xchg
sub
lea
xchg
dec
add
sub
jbe
push
andl
fimull
mov
xchg
add
rclb
mov
repnz
ds
dec
pop
jne
cmp
ss
sbb
popa
lret
jge
mov
push
jnp
hlt
xchg
sarb
daa
cld
nop
iret
and
jl
loopne
cmpsb
or
xor
lret
cmp
push
sub
push
mov
sbb
push
jns
inc
cltd
and
and
pusha
pop
and
sar
pop
fsubrs
and
sub
xor
sarl
test
cmp
jne
jg
mov
test
enter
mov
cmp
dec
and
jl
cmp
std
loopne
outsl
je
mov
add
aam
ror
ret
outsl
add
popa
js
dec
jns
stos
push
imul
sbb
insl
xchg
push
cwtl
jle,pt
xor
loopne
enter
jb
push
hlt
outsb
lods
pop
dec
jae
call
int
idiv
sbbl
push
jb
mov
jecxz
jnp
iret
xor
int3
imul
pop
gs
push
and
mov
les
ficompl
add
dec
jnp
out
mov
jge
or
xor
mov
hlt
xorb
es
cmp
ret
ret
or
pop
ret
sub
stc
cwtl
ret
das
xchg
cmp
std
sbb
jbe
or
dec
aas
push
push
shlb
rclb
mov
fistl
pop
xchg
pop
xchg
push
neg
inc
stc
cmp
mov
xchg
xor
sbb
pushf
xchg
lahf
mov
rorl
ljmp
negl
pushf
lods
mov
cmpsb
push
push
mov
pop
xchg
cmpb
xor
cmp
fmuls
aam
int
sarl
icebp
cmp
mov
sbb
outsb
cmpsl
jns
mov
mov
inc
cmpsb
mov
and
fwait
jecxz
add
xchg
xchg
aas
add
add
mull
mov
outsb
pop
jnp
lods
push
les
iret
repnz
push
jnp
leave
xchg
jmp
outsb
ret
addr16
dec
gs
xchg
mov
arpl
cmp
adc
adc
ror
lods
movsl
mov
adc
insb
movsl
xor
int
cwtl
mov
adc
incb
jmp
andl
xor
orb
negb
add
xor
test
rolb
roll
sahf
inc
rclb
mov
mov
ret
bound
jle
jecxz
jp
sbb
neg
movb
mov
pop
add
fstpt
adc
cmp
cwtl
jl
testb
sti
in
mov
mov
inc
int
call
xchg
jns
rorb
add
dec
sub
cltd
mov
addb
pop
dec
push
cmpsl
mov
add
dec
cmpsl
mov
dec
sub
pop
mov
cmpsb
add
loope
aam
pop
sub
movsb
lcall
insl
cmp
sbb
in
shll
mov
sub
sbb
ret
int
fldcw
mov
push
movsl
sub
mov
test
pop
insb
hlt
ret
mov
aas
ds
xor
jle
pop
xchg
aas
add
dec
push
inc
sub
fiaddl
fisubrl
daa
rol
daa
mov
imul
adc
xchg
mov
xor
mov
cmpsl
push
jp
xor
js
js
daa
out
mov
pop
sub
cmp
test
adc
push
ljmp
and
jno
cmp
and
push
cmp
xchg
add
imul
add
lock
jbe
mov
xchg
push
mov
pusha
pusha
imul
stos
add
lret
mov
cmp
push
clc
xor
fdivl
lahf
pop
jb
loopne
push
inc
push
rclb
imulb
into
inc
lock
dec
divb
xchg
mov
and
xchg
shl
inc
insb
test
inc
cltd
into
cld
fmul
imul
adcl
int3
aas
or
sahf
mov
mov
out
pop
and
into
aad
pop
sub
push
lock
das
lcall
daa
fs
mov
jl
fsubp
scas
cmpl
sbb
push
popf
lock
sbb
cmp
jle
inc
mov
cmp
push
fwait
aas
add
and
sti
aam
inc
repnz
mov
outsb
nop
xor
pop
xlat
mov
dec
int
clc
sbb
xor
mov
outsl
sbb
pop
or
fcoml
jne
xchg
adc
or
cmp
push
fcoml
dec
imul
jmp
and
mov
push
mov
xchg
dec
inc
fwait
add
fcoms
aam
outsl
jecxz
out
aas
inc
xor
or
jo
inc
mov
scas
and
lahf
push
addr16
push
push
mov
sbb
mov
bound
sub
jae
jecxz
jae
mov
sbb
aas
lock
shll
mov
shufps
incl
fiaddl
stos
lods
push
into
les
push
shll
out
ljmp
shrb
imul
push
adcl
and
mov
fists
mov
in
or
jle
pop
imul
jne
and
loopne
dec
test
stos
dec
mov
xor
hlt
daa
or
inc
inc
jnp
in
mov
mov
xor
pop
and
dec
pushf
or
jno
cmpsl
mov
int3
push
pop
cmp
addr16
and
repnz
rcl
sbb
mov
lahf
cltd
mov
hlt
ljmp
shll
mov
pop
rcrl
xchg
insl
test
jo
lock
cld
lahf
int3
mov
sbb
dec
and
lcall
push
and
mov
fs
mov
jne
cs
xchg
fcomip
popa
inc
fistps
cltd
int
mov
inc
cwtl
mov
scas
sti
js
aam
pop
adcb
sbb
pop
cli
add
inc
cmpsb
or
and
and
stc
jns
movsb
fcom
xor
sbb
push
xor
mov
or
imul
or
mov
movsl
lds
lret
jno
lret
and
stc
mov
lcall
fcoml
shl
xchg
rclb
jne
mov
mov
paddusb
pop
in
decb
cmc
lcall
mov
push
lock
pop
pop
and
mov
inc
mov
mov
sbb
ficoml
cmp
pop
jmp
or
add
add
add
cmpsb
xor
ret
xchg
jmp
lret
push
push
mov
mov
mov
das
adc
pop
das
scas
shlb
loopne
outsl
aam
outsl
jg
sbb
cmpsl
jmp
and
inc
add
sub
dec
inc
mov
rcrb
insb
mov
sbb
mov
mov
and
mov
imul
lret
cltd
dec
and
in
xor
and
in
xchg
stc
fstpt
orb
enter
and
xlat
xor
mov
lret
test
sbb
int
pop
pop
mov
jmp
and
fistl
data16
mov
cwtl
les
dec
outsl
push
jne
addr16
movsl
pop
xchg
pop
sub
mov
push
sbbb
xor
in
inc
push
xchg
mov
je
dec
out
outsl
pop
rcrb
iret
scas
and
rorb
xor
imul
addl
mov
inc
dec
mov
shll
sub
mov
fdivrs
arpl
mov
pop
pusha
hlt
ss
fiadds
incl
lret
rcrb
inc
jg
or
fidivl
xchg
add
or
scas
sub
push
add
xlat
pop
xchg
mov
lcall
push
or
sti
adc
cltd
repnz
mov
insb
mov
inc
xor
cwtl
push
in
cmpsb
out
mov
fisttps
and
sbb
adc
lods
dec
jno
cltd
imul
lock
std
add
jb
jae
pop
stos
jbe
xchg
std
jge
aad
repnz
stos
leave
movsb
cmc
pop
xchg
pop
popa
dec
pop
push
ss
pop
cwtl
lds
cmc
lods
movsl
pop
dec
subl
nop
das
sti
int
mov
sub
sbb
mov
lock
add
cmpsb
cld
test
es
mov
push
push
mov
dec
rolb
cmc
mov
in
cmc
push
mov
leave
lahf
xor
or
sbb
fwait
inc
in
bound
cli
pop
lcall
dec
ljmp
aas
push
inc
lea
xor
dec
or
fldenv
xchg
push
adc
xchg
jne
rcll
fdivl
jbe
jb
test
dec
mov
jnp
jecxz
test
adc
popf
jp
iret
jns
mov
cmp
or
inc
push
pushf
mov
xchg
xchg
mov
jmp
sbb
dec
sub
stos
sub
adc
inc
les
mov
arpl
movl
push
rcrl
mov
mov
pop
clc
lea
adc
enter
push
adc
jns
in
dec
ljmp
dec
pop
in
dec
mov
inc
dec
sub
rorl
xor
xchg
enter
pop
xor
inc
daa
cmp
sub
sbbb
hlt
popa
sub
pushf
adc
adc
mov
xor
in
or
ficompl
ds
lods
xchg
fistps
pop
or
leave
cld
adc
sub
sbb
sub
jbe
lcall
push
xor
add
stos
andl
shll
add
mov
push
ficoml
repz
rcll
call
jg
insb
loop
movsl
fidivrs
cmp
rorl
push
cmp
ljmp
gs
xor
fst
xchg
xchg
sub
movsb
sbb
mov
or
pop
jbe
push
vaddsubps
xchg
bound
xchg
out
push
fwait
shrb
add
xchg
mov
fstl
into
sbb
xchg
mov
sldt
sbb
xlat
add
lock
pushf
stc
addl
xchg
dec
in
push
shl
inc
movsb
pop
popa
dec
int3
jnp
jmp
lock
aas
sahf
jae
addl
and
out
and
add
dec
daa
jno,pn
xchg
test
xchg
test
daa
sbb
jne
pop
in
mov
jnp
clc
in
inc
cmp
aam
andnps
fists
ds
xor
lea
aam
cmc
pop
mov
adc
push
cwtl
sub
push
mov
js
sub
xchg
lds
lahf
sbbl
lods
pop
movsb
mov
dec
decl
loop
inc
jmp
push
repnz
shll
push
mov
pop
xchg
xor
mov
rolb
mov
mov
idiv
jmp
imul
sti
mov
xorb
shlb
stos
dec
aaa
jno
dec
mov
cli
adc
dec
push
ljmp
add
cmpsl
mov
and
sbb
jl
aad
aas
inc
addr16
jb
in
das
inc
mov
fstl
lods
aaa
psubusb
push
xor
aaa
mov
push
loopne
icebp
iret
mov
sbb
add
mov
pop
shrl
xchg
cltd
popa
sbb
pop
sbb
insb
lcall
and
inc
aaa
cld
loopne
stc
cs
dec
jb
in
imul
sub
or
insl
dec
shl
loop
fcoms
xor
dec
hlt
push
ds
adc
pop
and
loope
movsb
fwait
push
ds
dec
or
filds
push
iret
mov
getsec
daa
in
or
pop
fstpt
lahf
cmp
insl
pushf
mov
iret
mov
push
lahf
inc
inc
stos
stos
sbb
pushl
hlt
push
sub
or
sub
popa
xchg
or
jbe
push
popf
xchg
push
inc
and
push
mov
mull
addr16
adc
out
cmp
mov
push
int
addr16
mov
fwait
mov
fdivl
push
cmovg
pop
repz
xchg
jge
dec
js
adc
jp
push
pop
lods
mov
mov
movsl
sub
xchg
mov
and
add
xchg
scas
ds
sahf
xor
lea
sbb
xor
inc
aam
testb
push
stos
leave
cld
push
loop
xchg
cmp
scas
inc
dec
bound
aaa
inc
xor
mov
outsb
push
sub
mov
sub
sbb
xor
repz
jbe
mov
add
sub
mov
pop
mov
pop
sub
int
pop
and
movsl
popf
add
inc
aam
xchg
sbbl
sti
sbb
pop
outsl
cmp
mov
std
inc
aad
mov
add
iret
jnp
or
mov
sahf
mov
dec
ja
mov
jmp
mov
rcr
jbe
fs
pop
test
test
sahf
out
xor
jg
sub
or
mov
or
add
gs
cmp
or
aas
insl
cld
jo
fst
mov
mov
push
rolw
pop
mov
fists
xchg
adc
and
adc
repz
mov
adc
aas
inc
push
jp
in
pusha
jo
or
sbb
out
dec
sahf
pop
loop
mov
in
call
or
inc
mov
xor
lret
xor
jmp
dec
andl
les
addr16
sub
pop
xor
push
cld
inc
mov
and
xchg
shll
dec
pop
push
mov
push
xlat
aad
out
sub
fistl
push
mov
and
adc
xor
les
jge
dec
imul
mov
ret
stos
xor
pop
fnstsw
lret
jae
nop
xchg
pop
test
lods
mov
aas
sub
add
loop
mulb
or
jl
and
lock
sbb
addr16
insb
push
cmp
in
pop
sarb
nop
imul
jbe
jmp
in
pop
fdivrs
inc
push
cmp
cmp
je
push
orb
cmp
lea
xchg
sbb
and
add
xor
and
shll
adc
cli
add
mov
hlt
je
cmp
cltd
pop
int3
frstor
outsl
push
mov
mov
xlat
push
adc
aad
mov
adc
imul
dec
loope
xlat
sbb
xchg
pop
cmpsl
sub
daa
aad
fildll
sub
in
lods
inc
add
sbb
and
cmp
stos
aaa
in
pop
xchg
dec
cmp
shll
mov
outsl
stos
in
and
mov
sbb
push
push
mov
pcmpeqw
dec
sbb
mov
or
add
movsb
stos
sbb
ficomps
mov
mov
fimuls
or
pop
ret
pop
int3
loope
cmp
pushf
xor
dec
ss
andl
mov
hlt
or
mov
mov
adcl
shl
xor
or
add
sbb
cmp
mov
insl
mov
xor
int3
sub
adc
rol
pushf
sbb
popa
dec
and
pop
add
pop
enter
js
dec
inc
lcall
and
out
add
in
sub
dec
stos
fdivs
imul
adc
jmp
or
hlt
sbb
cmp
xchg
out
clc
ljmp
sbb
xchg
cmp
sub
daa
mov
mov
xor
pop
les
es
nop
fwait
push
scas
mov
mov
xchg
popa
mov
testl
pop
shl
into
jmp
sub
dec
mov
les
xor
movsb
xlat
lahf
out
mov
sti
mov
lahf
push
and
jns
mov
jns
xor
movsl
sub
mov
mov
dec
into
into
and
mov
mov
cltd
push
in
cmp
add
push
mov
jno
fmuls
and
xor
mov
and
sti
mov
inc
push
mov
call
aam
and
fbstp
dec
mov
divb
in
lret
cmp
mov
ljmp
out
push
dec
lods
push
inc
scas
fwait
out
out
icebp
frstor
ljmp
test
ret
adc
popf
ret
test
dec
gs
jbe
mov
xlat
mov
aas
jo
or
xchg
dec
jle
orb
push
mov
int
call
sbb
in
leave
sbb
and
sbb
arpl
test
pop
jmp
dec
std
aam
call
fisttps
mov
test
or
cmp
mov
mov
pop
xor
lahf
or
lret
sub
adc
lods
fs
xor
leave
add
mov
xor
repz
cs
test
jecxz
scas
mov
push
mov
arpl
pop
addb
lret
rolb
icebp
mov
add
ljmp
cmpsb
nop
mov
into
fiadds
mov
jbe
mov
stos
fwait
out
push
jns
jb
and
mov
popf
inc
rcrl
ja
xchg
mov
sbb
aad
sbb
inc
lock
cmc
hlt
iret
daa
jb
inc
hlt
mov
mov
bound
mov
push
push
mov
push
test
mov
jmp
pop
inc
les
xor
or
xchg
inc
jnp
fmul
pop
repnz
mov
and
mov
outsl
out
mov
fstps
bound
dec
push
sbb
or
mov
movsb
sbb
ja
sub
push
call
aaa
adc
test
cwtl
inc
xchg
fs
sti
push
pop
xchg
fistpll
xor
movsl
fs
clc
add
mov
notl
in
jg
gs
ds
mov
pop
mov
or
aaa
fnstenv
incb
xchg
aad
stos
notb
movsb
movsb
imul
fdivrs
push
adc
xchg
addr16
jno
arpl
mov
cmp
sarl
movsb
adc
jg
fnsave
outsl
lods
mov
inc
out
stc
jno,pn
jnp
loopne
inc
adc
gs
lods
rcll
ror
lcall
adc
inc
mov
lret
push
sahf
rolb
xor
fdivs
imul
dec
xchg
jle
lret
in
mov
xor
xorl
test
mov
sub
icebp
fnstenv
mov
xchg
push
int3
icebp
roll
push
adc
sar
ss
jae
sti
popa
fnstcw
dec
cmp
pop
cmp
in
js
clc
lock
into
repz
inc
fs
mov
xchg
outsb
jmp
mov
stos
add
inc
stos
mov
push
add
xor
inc
adc
sub
dec
dec
mov
cld
popa
scas
or
fwait
outsl
inc
aam
mov
maxss
aas
and
out
fisttpl
arpl
mov
adc
cld
fsts
push
push
pop
ret
aam
lret
test
orl
mov
les
push
xchg
jnp
dec
jle
shlb
jae
mov
arpl
jp
sti
dec
mov
pop
xchg
lock
mov
aad
shrb
or
mov
ss
mov
je
push
ja
cmp
jp
jl
faddp
std
sub
popa
xor
daa
into
xchg
arpl
add
lret
xchg
rcrl
int
xor
dec
fucomp
push
es
mov
loop
pop
jb
push
fidivs
xchg
and
hlt
push
lds
and
mov
out
cmp
shll
mov
in
fsubrl
or
psubb
aas
mov
cmp
aaa
sbb
stos
sub
xchg
add
xor
pop
cmpsb
or
insl
or
lea
bound
xlat
cmp
xchg
xor
jmp
repz
or
dec
jmp
jno
jne
loopne
imul
sbb
scas
rcll
sbb
loopne
or
mov
inc
fstpt
mov
loopne
dec
adc
xchg
hlt
movb
dec
sbb
xchg
mov
in
mov
or
lods
jg
fnstenv
xor
and
out
ds
faddl
sbb
mov
ss
fsubp
dec
mov
inc
shlb
jbe
sahf
call
es
pop
push
fisubl
lret
leave
xchg
sub
xchg
mov
imul
mov
lods
cmpsl
mov
jae
mov
fwait
jne
dec
and
xchg
mov
pusha
cltd
mov
jnp
mov
int
inc
leave
lods
aaa
inc
add
divb
out
inc
stos
push
leave
dec
jmp
xchg
mov
dec
mov
jnp
adc
or
in
xchg
push
jg
dec
add
jo
jge
repz
add
mov
in
sbb
xchg
pop
push
popa
mov
in
dec
pop
add
jmp
sub
jbe
stc
rcrb
pop
add
sub
cmp
repnz
imul
rorb
dec
cmp
movsb
cmp
pop
sbb
into
into
decl
or
mov
movsl
icebp
jnp
cwtl
and
mov
push
nop
fcoms
cmpsl
in
fiaddl
ss
jne
daa
cwtl
clc
jnp
inc
cmp
ret
inc
es
dec
daa
sub
cmpsb
int3
mov
addb
gs
add
pop
mov
out
movsl
fidivl
lret
clc
enter
and
sub
lods
pop
or
icebp
mov
mov
out
jne
test
sbb
and
add
test
and
jle
jo
pushf
or
ds
adc
fs
and
ljmp
jo
lcall
fwait
jl
test
sbb
and
mov
clc
or
sbb
pusha
repz
xchg
pop
outsl
sub
out
out
dec
dec
jecxz
or
pop
mov
push
das
shrb
frstor
xchg
out
dec
jnp
cmc
jp
add
ja
ffree
pop
fidivrs
jge
popl
dec
shrb
stos
ds
out
cmp
fs
pusha
incb
out
jecxz
pop
mov
loope
xchg
xor
xchg
ds
pop
stos
jno
mov
pop
fcmove
and
negl
ret
cmp
pop
movsl
scas
pop
jl
aad
arpl
gs
jp
xchg
xor
test
sahf
mov
movsb
dec
in
cmpsb
pop
xchg
out
icebp
push
push
xor
pop
dec
push
mov
push
inc
int
shlb
into
adc
add
aas
stos
sbb
rcll
fldl
stos
sbb
sub
and
or
les
mov
lock
ja
lock
or
sti
push
in
xor
adc
pop
push
and
sbbb
mov
sbb
jecxz
es
push
es
lods
ds
or
in
add
and
mov
add
mov
es
scas
jbe
pop
xor
fidivs
cmpsl
xlat
popf
mov
dec
lock
pop
aam
les
jnp
clc
adc
push
pop
cwtl
jmp
pop
and
shr
pusha
cli
daa
xor
jns
cltd
jae
cmp
test
testl
std
pop
lods
mov
setbe
sbb
jge
fcoml
or
mov
int
or
sub
or
inc
inc
pop
inc
xor
pop
sub
cmpsl
push
push
or
imul
cli
push
mov
cmp
orl
dec
jg
scas
leave
mov
jecxz
or
icebp
sub
cmp
add
imul
jle
inc
mov
inc
inc
mov
xchg
pop
mul
dec
push
mov
mov
pop
clc
and
cmp
xchg
dec
inc
or
mov
sbb
hlt
int3
cli
sbb
ror
jnp
push
push
daa
mov
test
mov
xor
cltd
xchg
out
pop
adc
cmc
jo
test
push
xchg
jmp
outsl
pop
mov
fwait
xor
dec
rolb
lret
adc
mov
pop
repnz
pop
adc
cli
xchg
pop
xchg
sbb
jle
enter
or
repz
jne
sbb
repz
sbb
fnstcw
in
push
aad
lods
out
cmpsl
sbb
lret
shr
lds
lahf
imul
inc
out
sbb
fwait
sbb
cmp
sub
inc
fstl
sub
aaa
push
jp
xchg
jbe
pop
dec
push
add
mov
call
sub
adc
cmp
stos
inc
xor
fmul
and
mov
lcall
mov
xchg
mov
ja
pusha
not
jne
cmp
jle
inc
clc
xlat
std
loopne
inc
and
dec
outsl
insl
and
cs
orb
out
divb
xacquire
rcrb
adc
pop
and
jnp
inc
xchg
pushf
pop
fcompl
jl
adc
les
mov
xorl
lods
push
cmp
arpl
mov
mov
aad
rorl
mov
insb
stos
xor
push
arpl
out
jl
dec
test
push
mov
cmp
mov
popl
mov
push
xchg
push
loop
jecxz
mov
bound
mov
pop
mov
adc
push
mov
jno
test
icebp
mov
cmp
mov
sub
xor
arpl
daa
popa
jne
jnp
test
int3
dec
dec
aaa
mov
es
bound
pop
mov
in
imul
add
mov
sub
mov
addr16
sbb
xor
cmp
jb
push
fists
into
gs
notl
cmp
int3
in
shll
mov
out
add
add
inc
je
enter
test
add
xchg
stos
out
jno
add
mov
mov
jno
movsl
push
pop
inc
sbb
insb
pop
sbb
jle
fistl
jno
pop
or
mov
daa
push
pop
xor
fdivrl
and
xchg
ds
xor
pop
push
xor
xor
pop
aam
sbb
mov
inc
test
lahf
hlt
pop
data16
nop
add
icebp
lds
repz
pop
mov
cmp
mov
fld
xor
test
test
ljmp
and
xor
sub
ljmp
jne
rorb
pop
bound
xchg
mov
inc
in
iret
push
mov
mov
faddp
sbb
in
bound
jb
test
loope
mov
adc
push
push
push
add
stos
sbb
fbstp
aam
jl
dec
leave
pop
aam
sub
ret
mov
inc
mov
push
pop
adc
and
xchg
stc
push
sahf
jae
dec
sbb
xchg
push
push
or
mov
mov
add
outsb
mov
aas
or
inc
fsubrl
mov
mov
cmp
sbb
cmp
ret
and
aas
sbb
inc
hlt
ret
push
test
lret
mov
mov
lret
jb
push
stos
sub
dec
push
ss
outsl
or
rolb
sbb
push
push
pushf
pop
loop
imul
lock
sbb
xor
aad
pop
jg
push
and
inc
xchg
add
xor
out
jp
cmpsb
dec
stos
cmp
mov
aad
call
shll
push
mov
add
mov
aad
mov
in
sbb
mov
sbb
das
clc
jecxz
pop
push
sbb
mov
sbb
ljmp
js
fisubl
lods
movsb
andl
dec
orl
dec
bound
or
shll
dec
adc
jg
jmp
xor
inc
inc
dec
idivb
pop
or
popl
adc
leave
xor
dec
jnp
das
mov
push
jp
pop
jmp
sub
ror
and
sti
pop
loopne
out
sub
into
jmp
sahf
stc
pop
push
add
into
jne
pusha
add
or
adc
push
rcll
push
mov
int3
push
test
lods
mov
jmp
aam
outsb
aaa
or
mov
addr16
outsb
ss
push
mov
or
adcb
xchg
xlat
jne
ss
xchg
jbe
mov
xchg
jne
jno
xorb
cli
testl
or
push
and
jle
out
shlb
es
fsub
shll
pop
mov
cwtl
lods
jg
popa
xor
xchg
enter
fdiv
inc
mov
shlb
cmovne
pop
loop
in
adc
jecxz
repz
int3
lcall
fdivrl
inc
push
rcr
pop
testb
fldenv
mov
sub
xchg
mov
addr16
cmp
xor
ret
aaa
mov
adc
sbb
or
mov
mov
fwait
aad
fidivrs
xchg
icebp
je
and
xor
cmc
movsb
int
or
jecxz
cltd
and
lea
add
push
mov
nop
jne
mov
sub
jb
addr16
mov
fsubrs
xchg
push
pop
lret
loope
pusha
fldl
lock
sahf
repnz
jl
mov
sbb
mov
jae
jmp
fists
cmc
sbb
xchg
mov
loop
inc
dec
dec
lods
aas
into
in
sub
sbb
cmp
xchg
andl
inc
aam
std
xadd
pop
lcall
cmp
je
sub
push
push
mov
js
mov
pop
fbld
inc
push
sahf
pop
cmp
mov
lock
cs
sub
xchg
sub
testl
sbb
xchg
xchg
jge
std
lock
push
jmp
jo
xchg
add
outsl
repnz
outsb
loope
jb
imul
imul
dec
adc
push
outsl
int3
cmp
push
in
movsb
sub
or
stc
cmp
ds
test
fmuls
jbe
clc
pop
shll
push
flds
mov
stos
cld
xchg
and
add
stos
add
negl
andb
dec
fst
mov
mov
fisttpl
icebp
mov
sbb
jle
xor
leave
out
ret
jl
sbb
pusha
popa
and
into
dec
xor
cmc
movsb
jecxz
xchg
jle
cltd
push
xor
push
pop
mov
inc
sahf
data16
jl
bound
pop
js
gs
iret
and
jl
fdivp
pop
les
rorb
pop
lret
dec
inc
gs
push
addr16
pop
fldt
lods
cltd
jmp
in
lock
or
and
lahf
pop
icebp
mov
subl
ret
mov
lods
repz
xchg
fistl
bound
pushf
or
add
das
add
adc
xor
mov
mov
sub
push
divb
xor
cmp
jle
inc
scas
or
inc
shl
gs
xor
xchg
pop
cmpl
jg
dec
jno
mov
ds
icebp
sarb
add
xor
je
push
scas
scas
sbb
dec
pop
jae
jno
sbb
and
popa
fcomps
xchg
sub
mov
sbb
xchg
mov
dec
and
stos
ljmp
inc
mov
inc
xchg
scas
hlt
pop
ret
adc
repz
fldln2
adc
dec
sub
imul
xchg
cli
shl
xor
or
xor
pop
xlat
xchg
cs
popa
int
cmp
mov
jl
pop
xlat
jno
std
mov
push
inc
scas
ss
mov
lahf
ficoml
inc
mov
pop
in
shll
shrl
pop
out
jnp
push
or
shrb
daa
dec
sti
mov
lret
jge
xchg
or
or
ja
adc
test
mov
nop
stc
rcrb
aas
or
mov
rcll
sbb
stos
mov
mov
cs
pop
mov
es
in
into
mov
jbe
inc
sub
mov
and
and
jnp
fiaddl
mov
sbb
aam
cmc
dec
mov
pop
or
inc
sbb
ja
pop
and
out
cmpsl
sub
sarb
jnp
dec
dec
out
push
lock
xor
inc
xor
mov
pop
daa
and
mov
hlt
test
in
stos
shl
mov
mov
pop
push
outsb
aam
xchg
cmpsl
mov
inc
mov
rep
es
iret
inc
add
or
pushf
mov
clc
in
hlt
stos
sub
ja
pusha
mov
inc
repz
inc
movsb
xor
sub
xchg
or
les
ret
out
sbb
mov
test
fistpl
shr
xchg
cmp
push
cmp
aaa
dec
shr
sbb
fst
sub
cmp
push
std
fcmovnu
fwait
sub
inc
jecxz
pop
scas
fnsave
imul
jl
jno
aam
subl
push
stc
fsub
xchg
jge
sub
sub
jo
js
xor
pop
test
ja
cvtps2pi
cmpsl
movsl
cs
aaa
dec
data16
test
cmp
mov
xor
or
pushl
sub
cmp
and
xchg
and
iret
add
pop
repnz
sti
and
pushf
cmpsl
cmp
movsl
out
js
mov
push
mov
xor
das
ss
xchg
addr16
rol
out
loop
lea
xchg
cmpsl
push
push
mov
mov
and
mov
fldcw
cltd
loop
pop
inc
sub
repz
cwtl
sahf
pop
bound
mov
push
or
fsubrl
loope
aad
mulb
pusha
loop
and
aam
cmp
jle
mov
dec
push
cbtw
les
mov
mov
lods
lods
mov
repz
lods
adc
adc
mov
inc
push
aas
scas
sub
dec
mov
push
incl
fmul
iret
xchg
pop
mov
aaa
lds
pop
inc
enter
dec
and
ja
scas
mov
cmp
fisubrs
sbb
xchg
xor
jle
cwtl
or
mov
inc
fmulp
mov
stos
mov
push
inc
stos
scas
push
adc
lret
les
rcl
xor
cmp
lahf
loope
jae
in
adc
xchg
add
fwait
adc
sub
es
fsub
pop
popa
out
jmp
fwait
icebp
add
repz
inc
or
bsr
add
clc
or
stos
aas
mov
aaa
dec
jb
and
or
lahf
xchg
jo
sbb
mov
push
dec
inc
fmull
cmpsl
mov
and
dec
pop
insb
loop
xor
pop
divl
andb
dec
push
inc
push
dec
xor
test
int
repz
jecxz
cmp
xor
lahf
scas
cmp
xchg
mov
dec
jbe
int
mov
outsl
lods
push
loope
add
push
loopne
sub
iret
xor
mov
xchg
mov
enter
push
xor
sbbl
mov
fwait
or
xor
xlat
mov
ror
andl
jnp
jnp
sub
movsl
jbe
sbb
mov
je
adc
cld
pop
stos
je
mov
push
cmp
loopne
xchg
push
sbbl
iret
xchg
mov
sub
or
mov
lea
out
rorl
jmp
sbb
daa
rorb
out
loopne
outsb
fsubrs
lret
or
add
dec
xchg
mov
pop
jge
mov
stos
mov
xor
dec
sub
data16
popa
ret
aaa
ds
fwait
pop
jecxz
cld
fs
add
jae
pop
insl
mov
mov
add
inc
xor
in
sub
or
sbb
movsb
in
insb
jo
testl
sti
clc
mov
call
mov
push
xchg
shl
iret
jl
fidivs
pop
popa
pop
fistpl
outsl
pop
cmpsb
addr16
gs
enter
icebp
vmaxsd
repnz
xlat
dec
inc
add
test
cmp
mov
xchg
test
push
pop
xchg
int3
push
adc
imul
fimuls
std
lcall
or
scas
popa
xchg
jno
fbld
test
cwtl
in
sbb
and
dec
xchg
js
push
pop
fcoms
mov
pop
mov
aas
or
aam
aas
sbb
cmovb
fisttpll
ret
xchg
inc
jge
push
mov
inc
out
cmpsl
adc
decl
fwait
cmp
fisttpl
xchg
imul
jmp
dec
pop
iret
xor
sbb
pop
int
ret
icebp
mov
xor
sar
cwtl
or
popf
xchg
jg
andb
cmc
fst
popa
pop
mov
loopew
xor
ss
daa
shlb
cli
jno
push
loopne
icebp
dec
jns
adc
cmpsb
add
mov
pop
lods
adc
mov
dec
scas
mov
or
xchg
mov
mov
mov
adc
lret
push
je
lds
jmp
mov
mov
sbb
das
jns
ss
pop
movsl
imul
cltd
dec
inc
dec
sub
xor
stos
xor
les
ss
stc
xchg
aam
fadd
inc
push
leave
ss
bound
adc
cmp
xor
in
cmpsb
or
imul
mov
or
enter
nop
pop
rcrl
js
daa
jg
mov
mov
cmp
dec
lahf
and
mov
ret
icebp
int3
leave
not
xlat
mov
sbb
mov
cmp
jb
adcl
imul
mov
jle
jle
sti
inc
pusha
dec
or
shl
in
stos
cmc
cmpsl
pop
lcall
inc
iret
mov
cmpsl
in
adc
test
sbb
sub
outsb
pop
pop
mov
lock
fucomi
das
dec
sub
in
pop
shrb
jns
adcl
cmp
jns
inc
insb
sbb
cmp
pop
dec
pushf
add
lock
jle
mov
cmpsl
pop
lahf
fst
cli
push
cmp
sbbb
xor
add
push
and
cmpsl
in
jae
rcrl
mov
xor
adc
outsb
inc
lret
sar
jp
lds
lds
pop
push
out
adc
push
push
jbe
mov
cmp
loope
xchg
sbbl
cmp
sbb
xchg
xchg
std
mov
scas
or
arpl
andb
sbb
sub
cmp
out
icebp
inc
inc
xor
aad
xchg
xor
js
xchg
push
ljmp
fldl
sub
sbb
jl
lahf
push
jg
add
xor
mov
inc
ret
push
orl
jl
fs
fwait
xchg
sti
lcall
mulb
and
add
incb
mov
arpl
add
popa
mov
and
pop
lahf
int
aaa
jg
subl
pop
out
lret
and
mov
cld
imul
lret
fmuls
repz
add
outsl
ret
dec
call
inc
pop
arpl
data16
xchg
pop
mov
js
ja
repnz
in
scas
subl
or
call
mov
cmc
cli
int
push
inc
lods
cld
ljmp
and
clc
loope
mov
or
xchg
in
mov
mov
loope
pop
mov
int3
fwait
stc
add
ret
xchg
ljmp
js
sub
mov
inc
mov
ljmp
lea
std
and
and
stos
lds
add
out
pop
mov
mov
pop
pop
jno
popf
mov
orl
mov
adc
sub
in
jecxz
mov
repnz
outsb
test
lock
adc
dec
out
dec
pop
or
mov
fucomi
cmc
std
push
adc
xchg
fdivrl
and
cwtl
jne
jne
stc
mov
andb
stc
inc
cmc
cmp
mov
shlb
jmp
jg
fiaddl
bound
push
jb
cmpsl
inc
add
mov
xor
push
stos
or
lods
imulb
cwtl
inc
hlt
pop
lret
inc
and
inc
in
loopne
dec
je
jmp
sti
mov
sarl
jmp
sbb
sub
or
push
out
ss
cltd
mov
scas
nop
repnz
mov
jbe
jb
dec
jge
repnz
pop
out
out
mov
lcall
jmp
fstpt
nop
pop
ret
inc
pmaxsw
xor
xchg
mov
out
jne
pop
or
outsl
push
jnp
lahf
std
aam
or
or
mov
and
pop
nop
sbb
cmp
pop
sbb
data16
mov
mov
ds
out
movsb
imul
mov
jnp
pop
xor
movsl
cmp
jl
dec
iret
popa
push
lods
sbb
dec
cltd
hlt
sub
out
jns
icebp
lods
pop
xchg
lret
or
xchg
sbb
insb
jmp
int3
cld
cmp
imul
cmp
xor
push
das
cmp
daa
fs
pop
movsl
pop
rcll
xor
pop
test
les
or
sub
mov
push
sbb
jmp
or
pop
add
loope
data16
dec
test
out
out
scas
aam
mov
sub
xchg
insb
add
xchg
jg
adc
mov
xchg
sahf
mov
int3
mov
cmp
mov
bound
xchg
pop
sbb
popa
aas
xlat
xchg
and
movsb
fmuls
xchg
sub
pushl
cmpsl
js,pt
rclb
push
mov
pop
xchg
xchg
outsl
int3
sbb
lret
push
pop
cmp
jp
jle
mov
cmp
add
stos
xlat
mov
int
mov
pop
mov
cmp
aad
and
cmp
xor
mov
inc
test
aaa
pop
push
mov
xchg
xor
jne
jl
aas
mov
adc
ja
rclb
negl
adc
stc
rcrb
out
mov
je
cmpsb
aaa
jp
sti
mov
fcomps
cs
icebp
test
pop
popf
std
adc
sbb
mov
mov
dec
mov
rcr
add
xchg
ja,pn
addr16
je
mov
cmp
sahf
repz
sahf
add
dec
mov
repz
xchg
fsub
add
sbb
xchg
sub
int
adc
mov
shrb
cmp
push
pusha
sbb
es
fwait
std
mov
or
lea
adc
jle
out
and
in
xchg
lods
sub
xor
lods
mov
mov
flds
out
rol
mov
adc
jb
cmp
mov
push
dec
test
adc
adc
div
scas
ss
aad
xchg
cld
jae
dec
push
test
pop
repnz
pop
andl
mov
es
enter
push
rcrb
mull
jge
cmp
fmull
push
jne
fs
mov
fs
mov
push
sbb
mov
gs
lcall
and
or
rcr
out
and
adc
das
pop
push
test
cli
je
jb
fadd
call
hlt
adc
xor
jecxz
xchg
cmp
jne
ss
fdivs
mov
rcl
cmpsl
in
cli
mov
subb
sbb
sub
xchg
jnp
cmp
pop
cmpsl
pop
inc
loopne
sete
and
out
aad
outsb
aaa
aad
rclb
mov
jae
stos
mov
ret
xchg
inc
bound
in
mov
adc
jnp
fnstsw
int
ss
outsb
mov
es
jns
movsb
cwtl
jno
in
es
dec
push
push
pop
int
test
mov
loop
inc
into
lret
mov
enter
add
aad
pop
jmp
test
jmp
mul
push
outsl
sbb
out
jmp
mov
or
stos
std
pushl
divl
add
dec
mov
shll
or
cmpsl
sti
mov
shrl
push
leave
cli
movsl
sub
xchg
sub
sub
xchg
inc
or
js
pushf
hlt
aad
fildl
inc
adc
mov
rcrb
loop
jo
lret
das
popf
lret
sub
sub
sub
rcrl
inc
lcall
loope
pusha
mov
fwait
dec
shl
out
not
pop
xor
lcall
xor
cld
xchg
js
cmp
outsl
popf
adc
xor
mov
dec
or
jle
cmp
popf
jno
sbb
pop
out
and
inc
xchg
call
ljmp
pop
xchg
movsl
popa
push
pushl
ret
fwait
push
decb
rolb
mov
push
cmp
pusha
jae
hlt
ffree
ljmp
add
enter
imul
test
xor
sahf
inc
mov
sub
lret
je
adc
add
push
or
jp
pminsw
jnp
scas
dec
rolb
inc
mov
push
cli
roll
xor
mov
add
and
in
in
js
out
fsubrs
mov
jno
mov
popf
pop
adc
pusha
xchg
inc
mul
lahf
mov
cmp
loop
lods
ja
mov
inc
mov
inc
mov
dec
in
sub
mov
pop
pop
adc
ret
or
pop
mov
imul
pop
pop
mov
sbb
aam
lahf
addr16
gs
cltd
stos
adc
pop
lea
les
sti
jnp
jl
popa
data16
pop
sbb
add
jle
ss
push
push
push
xchg
mov
mov
dec
mov
xor
fisubs
scas
adc
jmp
loop
push
test
aas
and
mov
xor
sbb
rclb
dec
cmp
divl
popf
pop
aas
xchg
imul
cmp
jbe
lret
inc
push
pop
add
jns
add
ret
pop
xor
pop
xor
movl
int3
arpl
jo
scas
mov
sub
imul
lret
mov
loop
jp
das
pop
add
test
mov
pushf
outsb
add
xlat
or
jnp
fmulp
push
fsts
pop
clc
fidivs
xchg
gs
jnp
sbb
mov
mov
pushf
addr16
sahf
out
cs
push
cs
je
and
cmp
aad
or
mulb
adc
gs
cmp
rcr
lods
pop
mov
jns
nop
pushw
pushf
jne
xor
loope
idivl
adc
sbb
stc
add
cmp
pop
loop
pop
in
fwait
jnp
cmc
jnp
cmc
daa
push
icebp
mov
enter
mov
pop
push
xchg
push
out
mov
mov
add
popl
daa
cltd
add
in
or
test
pusha
push
cmp
out
rcr
test
jle
pop
xchg
sbb
inc
out
jp
cmp
and
cwtl
pop
popf
mov
fs
insb
fwait
or
stos
enter
and
cmp
rorb
mov
or
outsb
sbb
inc
mov
and
jno
xchg
jbe
sti
addl
insl
sbb
xchg
dec
popa
mov
aad
movsb
mov
inc
js
hlt
cmp
push
or
aaa
jecxz
cs
fnstcw
and
push
pop
dec
lea
stos
and
sbb
adc
fidivl
mov
xchg
jbe
stos
jecxz
out
xor
clc
movsb
push
loope
mov
adc
mov
mov
mov
fnstcw
adc
and
andl
rclb
sub
inc
mov
or
lods
je
aad
xor
aas
cld
jno
daa
mov
xchg
sub
adc
push
pushaw
into
mov
fnstcw
cwtl
mov
int3
clc
inc
nop
pop
adc
jp
das
xchg
inc
into
lahf
inc
push
inc
pop
or
sti
bnd
aas
xchg
sbb
arpl
jecxz
xchg
sahf
cmp
xchg
xor
in
mov
into
or
or
mov
add
inc
movsl
xor
insb
mov
mov
rcrl
xchg
cld
xor
cli
loopne
imul
dec
loop
ret
ljmp
sbb
insl
pop
push
stc
aas
in
jne
jl
push
cmp
cltd
les
jle
mov
xchg
xchg
jmp
pop
xor
push
nop
cmp
ret
in
jmp
insb
push
add
sbb
pop
dec
dec
mov
inc
stc
test
pop
mov
pop
out
lahf
fistpl
inc
dec
cltd
test
popa
push
fsubs
fistl
inc
push
arpl
loopne
push
nop
aad
fwait
adc
pop
int3
mov
adc
inc
jmp
outsl
fs
add
repz
mov
cmp
lret
and
shll
jmp
idiv
mov
mov
mov
mov
dec
xchg
test
xchg
lods
pop
dec
push
mov
rolb
jns
push
enter
inc
stc
stos
push
xchg
repz
add
push
jno
frstor
fsubrs
add
add
loop
into
mov
jo
add
daa
rcl
xchg
inc
dec
mov
subb
mov
clc
push
fidivl
into
mov
into
dec
rcrb
mov
jmp
shlb
or
push
test
mov
push
xchg
sbb
lret
test
inc
cmp
inc
sbb
clc
mov
ret
mov
mov
dec
mov
jno
cld
pop
sahf
or
rcl
repnz
add
clc
dec
pop
sbb
out
cmp
xorl
push
xchg
jecxz
repz
movsl
imulb
xlat
outsb
addl
jmp
insb
push
xchg
pop
adc
pushf
ss
jle
jecxz
and
shrb
push
inc
psrlq
and
lret
insb
pop
cwtl
fildl
aad
in
sbb
inc
add
pop
inc
orl
mov
sub
pushf
mov
push
xorb
mov
fmul
jns
es
dec
add
lret
call
xchg
loopne
jmp
or
mov
ret
xchg
out
mov
sub
cmpsb
add
sbb
loop
dec
xchg
cmpsl
sub
cmpsl
xor
lea
add
pop
mov
mov
or
cli
cmp
adc
lds
pop
jecxz
lcall
stos
pop
jae
filds
cmp
inc
std
mov
filds
aad
scas
xchg
sti
popf
outsb
test
xchg
popf
push
xchg
test
cmpsb
push
ss
scas
ss
movsl
jb
movsl
call
xchg
add
push
test
push
add
mov
add
add
pop
cmpb
es
push
mov
in
jg,pt
and
and
out
pop
jle
pop
fsubrs
pushfw
pop
or
sti
sbb
dec
icebp
dec
loope
cmpsb
ss
add
nop
mov
mov
add
jno
scas
sar
cmp
popa
ret
std
push
xchg
test
paddusb
test
clc
rolb
xchg
xorl
cmpb
pop
jmp
and
js
cwtl
xchg
mov
repz
pop
jle
add
pop
cli
add
loopne
mov
inc
cmp
and
jecxz
je
push
jne
jge
test
lods
xchg
lret
insl
sbb
push
jnp
add
jecxz
outsl
in
add
sub
test
inc
or
ret
jge
xor
sbb
and
or
ret
pop
rorl
sub
push
mov
fdiv
and
dec
xchg
movsl
or
daa
cmpsb
xchg
mov
gs
push
ss
pushf
ret
shl
inc
icebp
xsha1
cmpsb
or
lcall
push
cmp
xor
leave
or
inc
sub
cmpsl
or
xchg
hlt
sti
or
jp
inc
push
add
push
pop
shrl
sbb
cli
xor
pop
mov
imul
out
push
cmp
pop
test
dec
fstl
xchg
push
popf
sub
sub
jl
shrb
cmp
dec
stos
mov
movb
push
adc
mov
outsl
sbb
in
in
stos
fnstsw
in
fidivs
xchg
lret
and
lcall
lds
aaa
sbb
gs
pop
push
jge
add
idivl
jecxz
adc
mov
adc
lahf
ret
mov
sarb
and
or
xlat
jae
int3
flds
jp
pop
dec
fs
mov
push
mov
aam
mov
sbb
mov
jle
pop
adc
arpl
adc
ja
mov
push
enter
pusha
hlt
add
repz
sbb
enter
mov
xchg
sahf
push
cli
jl
push
scas
sbb
jne
adc
sub
shl
mov
std
xlat
sub
test
inc
leave
add
fistpl
pop
pop
jnp
pop
or
push
mov
pop
outsb
xchg
cmpsl
xor
js
xchg
mov
das
aaa
inc
ja
scas
es
add
inc
ss
adc
add
stc
adc
stos
pop
int
cmp
sub
mov
inc
inc
addb
pop
mov
divb
sub
cmp
jg
pop
add
pop
dec
setne
shrb
in
mov
dec
push
or
outsb
nop
out
out
cmp
sub
addr16
mov
dec
xchg
mov
js
stos
ds
insb
mov
push
jne
out
dec
dec
enter
lret
pop
iret
lea
test
lods
and
inc
xchg
cmp
test
and
ljmp
fistpl
out
andl
int3
pop
add
mov
mov
out
aad
int
ja
push
aam
mov
xchg
cmpsb
mov
sub
mov
xor
pop
fnsave
xor
push
inc
and
and
insb
lret
and
das
mov
arpl
jmp
lods
arpl
jns
lcall
daa
push
lock
out
and
in
int
dec
cmp
add
mov
lds
sti
hlt
outsb
xchg
push
hlt
ds
pop
or
jmp
addr16
addl
add
dec
xchg
or
aam
dec
cmp
mov
sbb
fs
outsl
test
sub
stos
fmull
in
inc
pop
repz
mov
out
aaa
arpl
fdivrs
repz
jo
fstl
stos
rcr
mov
imul
jg
xchg
ss
aas
lret
add
fmuls
sub
jo
addb
shrb
out
out
roll
fwait
daa
mulb
dec
enter
ljmp
imull
sbb
pushf
in
jl
mov
shlb
lahf
push
lcall
arpl
and
stos
das
mov
cmp
adc
xchg
lods
and
fcomps
mov
or
xor
pop
repz
pop
sub
popf
lahf
sub
lea
mov
xor
cmp
jmp
mov
nop
mov
add
mov
test
mov
enter
pop
je
repnz
sti
rclb
dec
mov
sbbl
sbb
jmp
pusha
fdivl
rorl
mov
scas
mov
movsb
dec
push
movb
mov
mov
test
inc
pop
jl
sbb
jb
inc
mov
or
mov
pop
lret
sub
mov
int3
mov
add
gs
rol
not
adc
cmc
out
adc
daa
or
lret
fidivl
xor
adc
fistpll
test
xchg
psllw
and
mov
shll
cmpsb
lret
jge
inc
jbe
mov
mov
jo
adc
int3
or
stos
mov
repnz
imul
jp
divl
mov
adc
add
jg
mov
stc
out
sbb
xchg
mov
mov
test
push
aaa
pop
xchg
loopne
pop
hlt
mov
mov
xchg
adc
testl
movsb
adc
rcrl
dec
in
mov
ud0
arpl
gs
inc
loope
fisttpll
adc
mov
ss
dec
outsb
mov
mov
int3
jp
data16
or
ds
or
sub
push
ljmp
sub
cld
leave
inc
pop
adc
or
les
lahf
cs
and
pop
lret
and
in
sub
das
jl
icebp
out
cmc
pop
mov
xchg
jo
jae
lock
dec
xchg
fwait
scas
incb
rclb
in
add
out
dec
cmpsb
sub
dec
mov
enter
addr16
jle
clc
fcmovu
int
dec
add
push
sbb
movsb
lcall
arpl
jbe
lock
push
dec
aad
xor
iret
cmp
data16
mov
jbe
cmp
sahf
xor
out
mov
lret
test
movsb
scas
icebp
add
imul
adc
popa
popa
adc
pop
inc
in
adc
jl
sub
xchg
jae
mov
xchg
scas
push
das
cltd
mov
mov
cmp
js
ret
mov
lods
insb
cmp
or
int3
mov
bound
das
cmpb
inc
or
test
in
or
add
in
or
loopne
cmp
xor
jno
fmull
fmull
sub
divl
push
rcrb
popa
dec
out
imul
pop
clc
push
dec
inc
jge
or
stos
out
sbb
sahf
pusha
fwait
inc
pop
adc
in
lahf
xchg
aas
sub
stos
cli
lret
or
popf
outsl
es
xchg
into
out
cmp
and
filds
mov
sbb
es
xor
push
jbe
jmp
inc
xlat
inc
cmp
cmp
aam
sbb
pop
scas
sub
jbe
mov
fs
xor
add
movd
pop
imull
outsl
out
repnz
or
dec
or
pop
cmp
lret
loop
sbbb
ljmp
cmpb
cmp
inc
sbb
pop
xlat
push
icebp
loopne
stc
add
push
cmc
jg
cld
imul
shlb
inc
cmp
fsts
sub
or
jb
jg
adc
or
and
xlat
stos
fnstsw
cli
icebp
mov
pusha
faddp
mov
dec
ret
sub
jecxz
mov
scas
cmp
mov
sbb
popa
mov
pop
mov
mov
sahf
and
scas
and
loopne
push
dec
sti
je
lret
push
jne
dec
shll
add
sub
fidivs
outsl
and
mov
mov
jecxz
pop
jg
cltd
je
sbb
pop
mov
xchg
arpl
cmpsw
je
iret
jecxz
fdivrl
ret
fcmove
insb
mov
jg
adc
loope
sbb
jo
fisubs
lock
add
rorb
mov
stc
dec
mov
inc
popa
push
or
bound
cmp
xchg
test
inc
mov
lret
lcall
mov
xlat
mov
pop
jmp
pop
push
stos
out
das
cmc
inc
icebp
leave
cmc
dec
xchg
xchg
fimuls
pop
nop
jge
cmp
xlat
aaa
push
negb
inc
mov
rcr
into
je
mov
mov
lcall
pop
mov
jmp
out
mov
mov
ret
xchg
fnstenv
cmp
enter
imul
push
add
outsb
sub
mov
mov
and
aaa
xor
xchg
cmpsb
stos
lret
jbe
mov
nop
sbb
arpl
xchg
bnd
test
push
cmp
das
and
sbb
and
mov
arpl
pop
sub
in
imulb
mov
iret
loope
fists
ffreep
lock
outsb
inc
push
jecxz
repnz
aaa
or
mov
xchg
movsl
sbb
sbb
cmpsl
idivl
out
inc
xchg
sti
test
clc
inc
adc
imul
jl
std
cmc
aaa
cs
outsl
scas
mov
mov
faddl
mov
les
cli
mov
push
xchg
xor
daa
fidivl
cltd
xchg
push
push
addr16
push
pop
inc
cs
aaa
daa
cs
in
mov
aaa
das
dec
out
sub
xor
pop
data16
or
clc
and
jecxz
and
or
mov
cmp
nop
sub
std
fwait
add
lcall
xchg
xchg
add
scas
mov
fs
mov
hlt
push
dec
jg
clc
or
pminub
rcll
cld
aad
xchg
orb
jge
xor
ficompl
fidivrs
in
mov
add
ret
dec
sub
aas
add
ja
shlb
mov
or
or
mov
icebp
es
in
scas
scas
jmp
iret
xor
ss
mov
lahf
pop
xchg
data16
push
cwtl
mov
and
es
jb
cmp
jo
int
and
sbb
lds
push
push
pop
xchg
push
lods
int3
add
pop
xor
aaa
pusha
push
outsl
call
nop
pop
lds
iret
rclb
pop
push
movsb
cmc
int
subb
in
outsb
and
jp
outsb
add
iret
lods
pop
outsb
lahf
add
xchg
sbbl
out
jmp
mov
adc
pusha
mov
mov
cld
and
call
pop
xor
imul
inc
add
call
ret
push
xchg
loopne
jp
mov
sbb
jle
stos
adc
cmp
jnp
mov
add
pop
add
sahf
fisubrs
add
in
add
lret
out
or
add
jge
ret
in
nop
dec
xor
inc
sbb
xchg
in
and
xor
and
adc
lock
mov
mov
xchg
xlat
and
outsl
xor
aas
hlt
das
inc
sbb
mov
or
aaa
daa
sub
fucomi
inc
insl
in
push
imul
dec
sbb
pop
sbb
mov
in
push
mov
dec
mov
stc
jg
fildl
xchg
jmp
imul
cmp
jl
inc
repz
cmp
mov
lods
mov
and
stc
repnz
mov
jbe
les
mov
inc
jb
adc
cltd
movb
pop
daa
dec
stos
addr16
imul
ljmp
ficoml
std
mov
ret
in
imul
imul
scas
sbb
lret
cmc
fisttpl
xchg
mov
mov
xor
scas
xorl
sbb
dec
test
push
and
inc
sahf
mov
and
gs
xchg
pushf
lcall
adc
dec
push
mov
inc
push
xor
xchg
push
dec
sbb
mov
out
pop
push
dec
mov
and
popf
pop
leave
mov
xchg
daa
sbb
jg
movq
xchg
or
and
mov
push
adc
inc
movsb
or
lods
mov
dec
sub
push
jle
das
xor
sahf
int
and
push
adc
popa
cmp
ss
sbb
aaa
inc
insl
and
cmp
sbb
sub
xchg
aam
mov
inc
pop
insb
ss
sub
das
movsb
xchg
in
rorl
movsb
test
shr
inc
jg
mov
adc
mov
cwtl
fldenv
inc
jns
sub
cmpsl
das
dec
addl
jecxz
adc
fimuls
out
clc
sbbl
ror
int
cli
pusha
pop
adc
call
mov
stc
pop
pop
add
inc
mov
call
xchg
ljmp
lea
jb
and
stc
lods
movsb
mov
adc
daa
inc
xor
jbe
les
jp
inc
hlt
mov
xchg
fwait
pop
lret
adc
and
add
ja
pushf
nop
sahf
int3
push
out
xor
in
dec
call
sub
icebp
in
rcrb
test
cltd
or
jo
xor
ds
xor
push
icebp
sbb
xchg
sar
int
fsubr
hlt
xchg
xchg
aad
test
icebp
xor
rcrl
fs
xchg
in
shrl
xor
stos
and
mov
mov
and
repz
stos
cltd
sbb
aam
push
jl
outsl
data16
sti
add
test
add
ja
popa
push
repnz
fsubrs
jp
dec
jae
jns
add
mov
movsl
pop
jne
ja
xor
pop
pop
idiv
int3
dec
popa
add
and
jb
jne
mulb
push
pop
jmp
iret
imulb
mov
cld
subl
mov
jbe
sbb
cmp
add
inc
xchg
sub
rcrb
nop
jb
sbb
sub
sahf
dec
aad
add
pusha
flds
sbb
in
aad
leave
das
sarb
mov
sbb
clc
dec
cmp
hlt
sbb
push
ss
loope
jo
das
imul
jecxz
inc
test
jecxz
jnp
add
jle
adc
mov
inc
mov
xor
sbb
jbe
shrl
dec
sti
xchg
xor
sbb
loope
ljmp
cmpsl
xor
adc
aad
cltd
call
mov
pop
bound
addl
jne
pop
ficoml
movsb
mov
ret
enter
repz
mov
sub
jae
pusha
aam
test
mov
insl
inc
xchg
addr16
std
jge
cmpsb
xchg
and
bound
push
cld
cs
in
mov
test
push
lcall
or
mov
pop
jae
sbb
mov
out
pop
fmul
adc
and
sbb
jne
xchg
jb
xlat
insb
inc
mov
push
jg
dec
pop
mov
ljmp
and
test
mov
pop
and
jl
popf
adc
popf
xchg
add
cmp
in
out
fildl
xor
sub
ljmp
je
and
or
dec
and
imul
cmc
sbb
sub
loope
pop
xchg
or
push
push
cmp
inc
or
mov
aad
add
in
cmp
lods
roll
xor
stos
sbb
jo
adc
mov
dec
pop
mov
adc
pushfw
ret
std
push
call
sbb
or
out
jnp
pop
pop
or
stos
dec
cld
fsubs
dec
loope
pushl
inc
fildll
ss
push
in
popa
test
dec
sub
push
test
inc
sbb
inc
emms
fldenv
jg
imul
jmp
jno
imul
xchg
mov
xchg
aam
lock
adc
test
test
push
add
mov
imulb
movsb
adc
cld
fcmovu
mov
inc
ret
js
push
or
loop
jo
mov
push
mov
outsb
mov
xlat
cmp
and
hlt
sarb
jg
push
jnp
inc
mov
nop
sbb
loope
inc
push
pop
add
or
inc
rcrl
adc
incl
sbb
popf
stc
push
repnz
xor
sbb
xor
push
cli
or
scas
cs
xor
insb
dec
mov
loop
mulb
arpl
jmp
stc
add
add
pushf
mov
lahf
and
enter
cli
or
addr16
pop
mul
les
cmp
jo
jge
mov
js
jmp
mov
adc
mov
inc
or
push
mov
outsb
mov
stc
mov
lods
sahf
or
sub
inc
ficoms
arpl
pop
pop
scas
js
inc
pushf
inc
nop
out
inc
repnz
or
ja
mov
stc
lret
gs
pop
and
dec
test
mov
push
iret
dec
xor
lcall
insb
xchg
orl
dec
or
call
cltd
mov
lock
mov
xchg
shlb
xor
push
stc
mov
xchg
pop
das
mov
xor
xchg
sti
rorb
mov
sahf
int
jle
pusha
dec
test
fstps
mov
mov
add
loop
fbstp
rcrl
js
enter
mov
ret
dec
ja
mov
inc
je
inc
jns
mov
loop
fbstp
push
addr16
loope
pop
dec
es
and
push
push
pop
push
inc
adc
inc
xchg
sti
jp
sahf
inc
mov
and
cmc
test
or
mov
aad
dec
imul
adc
inc
scas
pusha
xor
xchg
jmp
sub
jl
pop
rolb
into
loope
jmp
out
jle
and
inc
push
addr16
dec
insb
cmp
dec
aam
mov
sub
clc
push
sarb
inc
ds
ret
push
lret
lahf
cmpsb
pop
stos
mov
ds
aas
and
nop
in
jae
nopl
popa
inc
pop
mov
mov
mov
into
mov
pop
pop
adc
lcall
adc
mov
popf
cmp
fwait
lock
aas
xchg
pop
in
jle
cmc
mov
sbb
out
push
pop
aaa
push
xor
gs
or
int3
mov
adc
imul
dec
fisubl
int3
das
daa
in
mov
test
mov
es
orl
cmp
sub
push
mov
push
add
mov
clc
push
xor
test
and
mov
inc
loope
fldenv
enter
push
cmp
xor
jb
push
cwtl
inc
lods
mov
and
insl
fstl
inc
push
mov
cmp
rcr
das
dec
jmp
mov
mov
cmp
fdivs
inc
mov
fwait
xchg
movsl
loope
xchg
and
subb
xchg
call
dec
push
xor
cli
popf
sti
add
xor
fwait
or
aaa
or
inc
push
inc
arpl
adc
shll
das
popl
fmul
xchg
insb
and
dec
inc
inc
fildll
push
out
push
xor
and
sub
mov
sarl
sbb
push
sub
enter
and
repnz
jl
ret
addl
imul
pop
fstps
cmp
stos
cbtw
movsl
in
pop
in
and
pop
pop
xor
dec
mov
movsl
inc
je
xchg
popl
pop
adc
jecxz
jle
repnz
adc
jo
push
stos
add
popa
add
push
ret
or
adc
xor
or
arpl
pushf
lea
push
scas
xor
cmp
adc
cmp
pop
inc
mov
sbb
fnstsw
or
push
movsb
out
fnsave
pop
xchg
stc
pop
mov
sub
aas
loop
mov
int3
mov
xor
scas
pop
std
xor
adc
in
in
xchg
adc
lock
jno
mov
ljmp
repnz
cmp
rorl
dec
jnp
insl
add
aam
loop
ja
or
fdivs
insl
or
stos
ret
inc
pushf
jns
pop
xor
mov
pusha
mov
in
in
xchg
dec
or
xchg
fstpl
cmp
add
push
inc
or
sbb
jecxz
mov
es
fsubs
je
test
mov
mov
xor
cmp
cmpsb
cmpsb
std
mov
sbb
add
outsl
popf
dec
xorb
enter
dec
inc
mov
stos
lds
pop
xlat
movsb
cld
or
or
add
pushf
hlt
lret
lcall
ljmp
jae
and
jg
add
jb
mov
cs
jl
push
adc
dec
add
test
mov
mov
xor
out
ja
ljmp
scas
les
js
xchg
jnp
mov
rcr
in
dec
jp
imul
jmp
sbb
xorb
in
pop
cltd
cltd
mov
out
pop
test
leave
jnp
xchg
shr
adc
jo
test
xor
mov
arpl
sbb
xlat
and
and
addb
js
adc
pop
or
enter
fistpll
mov
repz
mov
fsubp
fstps
into
fsubrs
push
lods
test
icebp
sbb
inc
adc
ss
sub
mov
add
jp
push
shll
out
or
out
subl
ds
nop
rcr
mov
std
mov
aaa
enter
xchg
lret
mov
stos
dec
pop
movsb
sub
daa
sti
je
push
daa
fld
cmp
lret
scas
xor
inc
push
lea
sbb
adc
add
push
fbld
cmpsb
sub
jmp
xlat
roll
or
stos
sbb
movsl
and
test
fs
loopne
sarl
add
sbb
icebp
mov
sub
aas
mov
pop
xchg
and
lret
sbb
mov
pop
jmp
rorb
xor
popa
push
push
fs
lock
mov
outsl
or
push
jae
xor
or
dec
jne
push
cmp
fldenv
into
mov
loop
xor
test
fbld
out
nop
daa
cltd
pushf
fmuls
mov
mov
jb
adc
insb
sbb
adc
fcoml
add
adc
sbb
mov
or
xchg
shlb
adc
out
and
lods
jl
mov
jmp
es
add
in
jae
jae
out
lds
jl
mov
push
mov
mov
sbb
add
clc
cmp
or
push
imul
lret
jmp
adc
int3
and
test
sub
inc
cli
jl
jecxz
xor
and
sbb
clc
xlat
pushf
lahf
or
aad
jp
out
cwtl
iret
lret
mov
sbb
jo
arpl
sahf
gs
jmp
add
in
scas
jbe
and
push
cmp
nop
dec
jo
push
jge
in
cmp
insb
cmp
adc
sarb
jl
sbb
adc
xchg
jns
shll
outsl
ljmp
dec
dec
call
xor
pop
mov
aaa
xlat
mov
sbbl
mov
sub
xor
push
mov
out
leave
mov
stos
and
xchg
cmovns
imul
or
fdivrl
imul
cltd
dec
filds
xlat
mov
jbe
or
cld
adc
lock
xor
sarl
xor
in
mov
jecxz
dec
cmp
dec
jp
inc
hlt
adc
jne
test
dec
mov
xchg
jmp
push
std
and
dec
cmp
mov
shrl
sub
mov
xchg
inc
imul
xor
outsl
inc
sahf
sub
cs
lock
lea
and
mov
iret
sbb
into
iret
test
push
cmp
test
dec
loopne
test
add
inc
add
mov
bndldx
insb
aam
xor
dec
in
mov
repz
mov
scas
xchg
cmp
xchg
or
jb
sahf
scas
xlat
sub
es
jne
dec
sub
inc
inc
vpmacsdd
fs
clc
sti
test
mov
jb
dec
loope
int3
cmp
jecxz
cmpsb
incl
xor
iret
arpl
sti
sbb
push
push
mov
lods
inc
lock
roll
sbb
aad
sbb
dec
pop
ljmp
loopne
push
daa
adc
jno
dec
jo,pt
aas
scas
mov
rclb
in
cmpsl
gs
popa
lds
das
push
stos
jo
arpl
aaa
popa
mov
stos
test
mov
getsec
bound
into
push
repz
rcl
repz
or
enter
sahf
ja
out
sti
insl
sahf
into
movsl
pop
cmp
jmp
rcrl
not
ss
dec
adc
call
fistl
mov
push
dec
mov
in
sbb
xor
push
scas
int3
xchg
test
xor
cs
mov
sub
outsl
mov
adc
xor
adc
cltd
dec
mov
dec
xor
pop
lea
adc
jge
xchg
sbb
dec
jbe
sbb
call
inc
pop
imul
repnz
cwtl
popf
add
and
iret
sub
daa
gs
sbb
jmp
mov
xor
nop
adc
ja
xchg
rorl
lret
loop
mov
loope
outsb
pop
cmpsl
movsl
mov
xor
xchg
mov
xor
cwtl
xchg
jecxz
loop
testl
xor
and
cmp
sub
add
mov
fcos
cltd
icebp
sbb
clc
dec
cmp
jl
ficompl
jl
mov
nop/reserved
cltd
pop
std
push
pop
ja
sub
pop
pusha
rol
add
test
push
sarl
sahf
push
inc
outsl
hlt
cmp
mov
movsl
test
pushl
das
and
in
int
int
push
fstpl
sbb
mov
pop
dec
adc
pop
xor
cmp
add
jae
or
xor
lea
dec
cmp
add
hlt
fmulp
mov
pop
sub
cld
dec
jmp
mov
push
into
push
lret
int
xor
sub
shlb
ljmp
xlat
mov
jb
mov
fucomp
cltd
mov
sbb
cmp
dec
aaa
rcrb
aam
and
cmp
push
jno
mov
add
xchg
mov
mov
setae
lods
or
fwait
jne
insl
fptan
xor
outsb
lret
push
pop
movsb
xor
pop
xchg
mov
rcll
mov
in
dec
in
xorl
jp
push
xchg
adc
jb
push
inc
push
ret
sub
jecxz
xchg
test
xchg
xor
arpl
aas
subb
es
clc
push
push
lods
xor
testl
dec
cli
hlt
sbb
imul
add
fstps
jnp
addr16
mov
testl
es
xchg
adc
pop
iret
cli
pop
sahf
pop
insl
sahf
fidivs
mov
mov
aaa
mov
mov
add
or
movsb
ret
dec
jl
xorl
rclb
xlat
push
in
add
or
inc
xchg
push
inc
mov
sbb
scas
push
scas
push
inc
out
into
push
push
push
mov
je
pop
rcr
ficoml
rcrb
std
adc
stos
xchg
arpl
fdivl
out
rol
nop
test
add
add
adc
pop
gs
sahf
imul
add
fisttpll
cmp
bound
shrb
lods
and
mov
loopne
cmp
push
cmc
js
pop
loope
push
push
cld
xchg
jnp
jecxz,pt
add
mov
in
and
imul
mov
popa
pop
movsl
and
mov
mov
jnp
lock
ja
rcll
nop
stc
arpl
in
subb
and
ljmp
std
fwait
sub
pop
std
out
sbb
loope
cmpsb
test
arpl
cmp
in
frstor
pushf
or
jb
xor
out
and
pop
in
inc
addb
test
test
adc
pop
test
push
filds
fucomp
push
pop
push
cwtl
mov
and
call
sub
push
lea
and
lods
lret
fmull
and
add
test
insb
mov
scas
lahf
out
and
or
sti
adc
int3
jl
mov
cmp
in
cmp
addr16
orb
out
mov
jno
inc
xor
mov
cmp
dec
pop
xchg
mov
xor
cmpsb
ss
pop
adc
or
gs
inc
sarb
icebp
push
bound
das
mov
and
fidivrl
pop
sbb
rcr
jmp
push
fsubs
pop
and
cmp
adc
adc
movsl
cmpsl
push
fdivl
fcmovbe
mov
mov
iret
pop
pop
mov
jno
push
ss
dec
xor
cli
fiadds
jle
sahf
jo
enter
and
add
test
lock
repnz
jecxz
push
rorb
adc
fldl
ficompl
aas
mov
pushf
xor
scas
jne
pop
xor
push
out
add
pushf
aam
lods
and
daa
ss
mov
xchg
mov
or
gs
dec
mov
push
icebp
xchg
jp
mov
mov
dec
je
inc
fisubrl
daa
xlat
aad
das
lea
fldpi
jge
adc
int3
sbb
cmp
cmc
pop
add
aaa
dec
aas
xchg
arpl
xor
in
icebp
add
xchg
fidivrs
dec
js
in
clc
sarb
mov
loopne
js
or
divb
loop
bound
jecxz
push
pop
and
pop
shll
mov
jmp
outsb
popa
push
lods
jo
ficomps
mov
insb
cmp
mov
sub
js
xor
insb
lret
xor
insb
ljmp
and
add
lock
ss
shll
mov
adc
pusha
out
xorl
cmp
push
pop
rcrl
lcall
fisttpl
jle
adc
leave
push
dec
mov
mov
xchg
dec
out
aas
in
lods
cmp
add
push
in
mov
pusha
or
arpl
jnp
aaa
jge
ret
lock
clc
mov
xor
call
in
jns
cwtl
and
dec
xor
inc
jne
arpl
cltd
aas
dec
out
lcall
ret
sbb
shlb
jge
sti
push
xchg
mov
jno
add
inc
stos
mov
inc
xorl
or
stc
shl
popa
dec
adc
sub
stos
out
mov
aam
loopne
sbb
into
jbe
call
and
subl
mov
sub
lock
orb
adc
je
mov
call
fldenv
pop
aam
fidivl
imulb
adc
stos
adc
xor
scas
outsl
insb
aam
dec
jns
mov
int
gs
lcall
repnz
push
adc
pop
ja
adc
xchg
std
jns
jnp
gs
or
cmpsl
sbb
repnz
mov
mov
push
mov
aaa
mov
mov
jl
popa
push
xor
cmpsb
ds
int3
or
sbb
test
jle
or
loope
mov
test
fidivl
ja
fsubs
imul
or
and
cmc
scas
jge
mov
outsl
aas
outsl
pop
xor
sbb
sub
shlb
adc
clc
pushf
cmp
rcl
dec
aaa
xchg
lods
adcb
cmc
lods
dec
hlt
andl
sub
and
bound
adc
and
jbe
and
jns
push
movsb
lret
das
rorl
sti
push
lcall
jg
xchg
ss
pop
push
int
fcompl
inc
cmpsl
cld
push
mov
iret
mov
sahf
xor
or
pop
pop
cwtl
arpl
rcrb
push
jmp
aas
add
adc
call
mov
mulb
lcall
push
cmp
shl
int3
jg
cmp
xchg
jg
adc
add
xchg
jbe
lret
ds
and
lahf
mov
xchg
mov
jmp
jmp
push
push
sbb
ret
mov
xor
xchg
dec
pop
stc
sbb
sbb
adc
iret
dec
mov
in
stc
rcll
xchg
gs
ret
rcll
mov
dec
stos
outsb
mov
test
fnstcw
mov
nop
aaa
or
push
or
xchg
out
sbb
inc
jb
and
push
sarb
test
testb
mov
movsb
out
push
lock
addr16
add
loopne
ret
add
stos
outsb
insl
sub
lods
cmp
jae,pt
mov
popf
push
add
sub
mov
cmc
jle
test
das
out
jnp
mov
cmc
dec
lods
mov
fcos
mov
mov
mov
adc
cmpsl
cmpsb
je
inc
test
lds
das
fldcw
lods
xchg
addb
int3
ljmp
mov
sahf
imul
adc
lods
adc
cmp
push
fsts
jb
ror
in
add
push
xchg
jne
cmp
jmp
jmp
lret
leave
inc
adc
popa
jmp
fsubl
pop
addl
scas
sub
and
and
je
xchg
add
lods
or
imul
mov
mov
xchg
mov
pop
cmp
sahf
out
and
lcall
inc
cld
lds
outsb
std
jl
push
cmp
and
dec
sti
addr16
loopne
xchg
aaa
call
scas
mov
jmp
ss
sahf
jmp
adc
lret
dec
mov
insb
sbb
xorl
jne
leave
in
mov
jmp
mov
arpl
adc
adc
call
xchg
adc
mov
dec
sarl
das
jne
push
das
jnp
jg
shrl
and
popa
movsb
aaa
scas
xorl
out
push
decl
mov
xor
dec
leave
cmp
mul
mov
xlat
aam
arpl
pushf
push
xchg
dec
pop
out
iret
sbb
and
repnz
subl
dec
call
cmpsb
sbb
lock
pop
jne
sarb
xchg
lock
mov
iret
mov
or
jne
test
pop
push
fmull
jecxz
sbb
dec
push
xor
mov
xor
mov
in
fwait
xor
mov
jnp
add
fucomi
popa
les
lods
xchg
jbe
sub
pop
jnp
pop
test
mov
data16
dec
insb
ljmp
push
in
cmp
fistl
clc
por
xchg
mov
jb
jo
les
aaa
sarb
xchg
adc
aam
subl
jp
jno
inc
adc
push
nop
std
jg
jge
popa
mov
arpl
cmp
shlb
mov
call
js
pushf
pop
push
inc
xor
fistpl
adc
cmp
cmp
fs
mov
and
add
xchg
loope
sbb
jb
push
inc
rorb
adc
xor
sub
or
xor
cs
in
jecxz
nop
call
rcl
add
out
pop
lahf
mov
xchg
cmp
cmp
inc
mov
adc
adc
lret
xor
popf
jbe
mov
into
test
pop
fiadds
adcb
scas
cmp
lret
imul
popf
popa
pop
sub
sub
scas
cmp
adc
mov
stc
mov
pop
pop
ret
clc
push
push
pusha
pop
jmp
pop
cmp
xor
ss
sbb
xor
inc
pop
mov
mov
mov
fcmovnb
divl
mov
or
cld
lcall
leave
push
xor
out
add
inc
imul
mov
adc
cltd
and
mov
rolb
xchg
push
cmpb
mov
xor
inc
aad
daa
test
mov
pusha
gs
pop
lods
cmp
testl
pop
sahf
subb
xchg
lahf
lahf
les
mov
shrb
sub
cs
push
insl
sbb
sub
push
bound
mov
int3
lds
popf
aad
repz
pop
mov
shlb
sbb
mov
push
cli
lahf
fcmove
jg
and
sbb
icebp
sahf
inc
insb
push
popa
push
bound
jge
mov
mov
popa
push
insb
test
mov
dec
adc
xchg
sub
or
pop
add
mov
dec
mov
aaa
dec
dec
jnp
mov
push
std
push
test
mov
lock
ss
or
addb
xchg
dec
shlb
out
repnz
cmp
out
aas
mov
inc
jo
in
mov
lds
popf
lahf
jo
xor
jns
gs
cmp
pop
sub
mov
cmpsl
pop
xchg
lock
in
adc
adc
or
cltd
fsub
call
or
cltd
test
shlb
movsb
je
push
jmp
jle
stos
mov
push
jp
xchg
push
fdivl
mov
iret
pop
mov
xor
push
int3
adc
adc
stos
sbb
sub
xlat
sbb
test
jno
mov
je,pn
xchg
jle
xchg
neg
xor
outsl
in
sub
sub
pop
orl
pop
and
sbb
mov
jns
repnz
dec
or
jne
data16
sbb
inc
leave
aas
hlt
es
mov
call
and
out
mov
subb
jnp
xchg
adc
in
cmp
adc
sbb
jmp
sbb
or
fwait
push
or
xor
or
hlt
mov
mov
adc
lret
jae
fistps
notl
loop
popf
ja
mov
push
mov
pushf
pop
stos
fcmovbe
ja
les
pop
loope
push
mov
fisttpl
add
cmpsb
jne
inc
fistpll
pop
jbe
push
gs
jae
ljmp
out
cld
arpl
bound
das
push
jp
sub
jl
adc
cmp
dec
sbb
mov
in
cmp
test
aas
insl
cmp
inc
dec
leave
inc
testb
pop
cli
ret
stos
cmp
and
or
xchg
mov
push
dec
int3
fcoml
add
cltd
scas
imul
xchg
add
mov
ss
xor
lods
ja
xchg
dec
fistl
lret
fidivrl
add
push
ja
or
inc
jno
lods
cld
jmp
nop
ljmp
repnz
scas
jno
loopne
sub
test
jmp
jp
jo
cmp
and
mov
xor
out
pop
pop
arpl
lock
in
subb
lock
lcall
cltd
cld
cmp
push
pop
jl
pop
adc
dec
inc
cs
push
sub
shlb
scas
jns
jae
and
lock
pop
mov
dec
push
lcall
inc
ret
outsl
pop
mov
mov
push
xor
add
xor
mov
icebp
fnstsw
lcall
cltd
int
jg
sbb
sbbl
push
push
imul
enter
ret
pop
sbb
js
sarl
xchg
dec
hlt
ja
push
in
in
xor
cmp
inc
mov
mov
push
dec
aam
add
outsb
sub
int3
mov
sub
in
fists
lcall
inc
mov
cmp
or
dec
xchg
leave
into
and
inc
or
inc
and
mov
sarl
int3
aas
mov
repz
js
add
cmp
mov
mov
outsl
pop
ja
sbb
int3
jno
inc
test
push
dec
inc
mov
dec
and
stos
int3
mulb
sti
xchg
inc
icebp
fucom
mov
adc
jbe
xor
int
lock
aad
mov
inc
mov
fisubs
dec
pop
xchg
add
lret
lcall
cmc
bound
cmc
jmp
dec
sub
xor
pop
xor
mov
les
jecxz
adc
ror
and
inc
lock
out
outsl
cmpsb
mov
imul
lahf
jne
movsb
outsl
vmovlps
std
fidivs
test
xchg
stc
outsb
sarb
out
pushf
inc
jl
aaa
aam
movsl
mov
cld
pop
jbe
test
cltd
or
adc
pop
mov
in
mov
fstpl
outsb
hlt
push
dec
pusha
cmp
add
pushf
mov
cmpsl
test
mov
aas
stos
in
or
sub
imul
in
scas
aam
jge
jecxz
sub
out
mov
adc
or
out
nop
sbb
dec
sub
xor
jmp
bound
jl
push
ret
and
or
mov
mov
popa
loope
out
iret
fiaddl
lcall
aad
jge
aam
push
imull
sub
adc
and
fidivs
dec
cs
bound
jne
add
and
nop
bound
push
in
fcmove
mov
push
lock
sbb
fwait
lahf
mov
stos
pop
jb
adc
jno
mov
xor
pop
rcrb
cld
cmpsb
push
add
push
test
roll
pop
testl
lods
jbe
test
push
les
push
pop
les
faddl
adc
dec
stc
int3
es
fldl
adc
shll
incl
test
add
inc
shll
pushf
ret
xor
mov
int
jne
insb
aam
insl
ret
xor
call
dec
adcb
dec
enter
stc
xchg
aam
add
xor
mov
xchg
jns
call
mov
mov
int3
push
xor
fidivrs
clc
adc
and
sahf
lock
outsl
jb
loopne
mov
xlat
adc
iret
xor
test
push
ret
push
loop
lods
test
push
sub
adc
jl
xchg
mov
mov
das
clc
in
adc
aaa
xor
sub
cmp
mov
test
sbb
xchg
mov
test
jle
daa
cmp
and
cmpsl
jns
pop
push
and
in
adc
lea
xchg
sbb
cmp
shrl
fistl
mov
nop
jge
int3
stos
jbe
fildl
jg
push
xchg
cltd
leave
dec
mov
adc
mov
mov
imul
stc
ljmp
push
and
leave
dec
mov
dec
in
andl
mov
aam
mov
jne
mov
cmp
sub
out
pop
adc
pop
inc
int
notb
dec
adc
pop
pushf
xchg
insb
pop
shll
mov
xchg
sbb
jae
and
repz
jg
notb
mov
jbe
pop
or
cmp
push
or
leave
pop
lods
cld
pandn
cltd
test
xchg
fcmovb
jg
leave
into
push
imul
pop
enter
shlb
jge
idivb
and
or
adc
adc
rolb
arpl
cltd
mov
repz
sbb
push
sub
dec
les
add
test
push
push
test
pop
clc
test
lret
aam
inc
add
lds
andb
rcl
jb
out
pop
outsb
notb
mov
pop
mov
or
popa
or
inc
test
aad
xchg
addb
rorb
inc
mov
push
incb
xchg
imul
mov
adc
push
js
test
jno
dec
daa
ja
sbb
push
in
jmp
xorb
mov
aas
xchg
mov
adc
mov
lret
daa
cld
mov
popf
gs
inc
xchg
mov
sub
mov
pop
jae
call
repz
les
push
mov
mov
xchg
and
dec
adc
addr16
mov
icebp
scas
xor
xchg
xchg
pop
or
mov
enter
loopne
pop
pushf
jb
das
xor
jecxz
pop
mov
cli
xchg
out
push
dec
rcl
jno
xor
ret
adc
mov
fmul
jecxz
adc
jne
lcall
xchg
lcall
push
lods
test
imul
int
test
inc
fiadds
push
jb
inc
cli
movsb
mov
pop
fstpl
scas
inc
bound
cmpsb
push
cmp
out
clc
sbb
iret
and
aas
adc
insb
pop
jl
push
cmc
inc
dec
pop
xchg
rcr
adc
dec
sahf
and
icebp
mov
mov
insb
out
sub
jg
jle
fisttpll
aas
scas
insl
in
data16
call
xchg
and
cmp
fsubrs
mov
es
adc
add
aam
cltd
jecxz
xor
add
cli
aam
mov
das
mov
push
push
jmp
pop
aaa
mov
cs
test
ja
je
cmpsb
and
push
popa
mov
jbe
mov
lods
pusha
arpl
mov
shl
shlb
sub
out
stc
loope
and
push
testl
add
mov
daa
and
cwtl
mov
add
or
icebp
in
inc
test
and
push
sbb
popf
dec
push
sbb
mov
xor
fdivrs
test
xor
cmp
fsubrp
add
xchg
cmp
pop
inc
mov
add
jle
add
jp
mov
call
pop
outsb
add
jb
pop
fisubl
ret
lods
repnz
mov
adc
or
push
icebp
stos
push
sbb
aaa
mov
and
fisubrs
in
pop
jb
pop
rcrb
out
add
adc
fnsave
dec
dec
loop
adcb
mov
pop
push
fdivs
xchg
out
mov
cltd
popa
pop
std
mov
add
pop
scas
cmpsb
sub
cltd
iret
rolb
mov
mov
or
pop
into
iret
lea
push
push
mov
inc
dec
mov
inc
repnz
mov
inc
inc
call
loopne
stos
pop
sub
idivb
das
cmp
mov
inc
stos
xchg
xor
jle
dec
in
sti
add
sub
and
inc
jge
mov
pop
fimuls
adc
push
call
imull
push
fiadds
push
mov
pop
sub
imul
pushf
fs
in
cli
mov
lcall
js
cmp
push
ja
jbe
mov
cmp
sahf
or
mov
int3
push
scas
sbb
xchg
add
push
sbb
xchg
fsubrl
or
test
rcrb
leave
fwait
cld
push
loop
imul
inc
cmc
or
imul
mov
xchg
enter
inc
pop
loope
pop
lods
call
sahf
dec
test
mov
fistps
out
rcrl
frstor
out
fbstp
andb
idivl
imul
lahf
jle
dec
call
dec
sti
shll
dec
pop
pop
leave
adc
xlat
inc
mov
paddw
cmpsl
fs
lcall
test
add
adc
lcall
in
je
cmp
push
xchg
pushf
mov
leave
call
outsb
clc
insl
ret
lahf
xchg
nop
mov
xchg
cmpl
rcll
aad
lock
ja
mov
int
out
dec
test
adc
fs
inc
and
cmp
cmpsb
push
out
shrb
faddp
inc
out
pop
sbb
ja
inc
lret
mov
add
sub
test
stc
fimull
aaa
jecxz
loop
gs
fistl
push
ja
mov
std
sbb
and
ss
jnp
ficoms
data16
xchg
dec
adc
leave
mov
je
mov
mov
das
sub
dec
mov
enter
add
call
sub
addb
test
mov
ds
popa
xor
push
imul
shr
push
xor
mov
xchg
test
xor
pop
pushf
pop
int3
das
inc
out
mov
call
rclb
leave
add
adc
std
mov
jg
insb
jne
adc
pop
pop
push
sub
ss
aas
sbb
and
cli
dec
int
call
sub
jmp
lods
adc
xor
sbb
fcmovnbe
aad
xchg
cltd
outsb
jb
mov
test
fs
cmc
outsl
bound
in
push
dec
sahf
imul
jg
aas
mov
jnp
lock
add
call
das
arpl
pop
xchg
mov
cld
jbe
daa
sbb
inc
testl
scas
jno
repnz
or
lret
jecxz
pop
lret
into
xchg
mov
lret
add
pop
sbb
mov
popa
rol
inc
icebp
mov
mov
call
in
or
rcr
or
imul
lcall
xchg
pop
sahf
testl
iret
mov
orb
lea
icebp
pop
jle
arpl
xchg
add
sub
lds
sub
fidivrl
mov
xchg
jmp
outsb
add
jp
xor
cmp
nop
out
xchg
adc
and
or
cmp
add
mov
cmp
push
enter
stc
loope
es
lock
in
cmc
jg
fmull
sub
cli
push
add
push
test
xlat
js
test
and
outsb
dec
or
sbb
push
test
rorb
push
sbb
sub
cld
adc
imul
lahf
xor
push
outsl
ljmp
aam
mov
push
popa
addr16
leave
add
lods
and
adc
test
pop
fs
push
jecxz
add
push
lea
stc
insl
es
test
rcll
sbb
push
das
push
jmp
adc
inc
push
push
cmc
jg
xchg
dec
sarb
xchg
fwait
mov
imul
xorb
mov
pop
or
pop
mov
fdivrp
lea
je
in
ljmp
cs
push
stos
ficoml
arpl
test
pop
sahf
in
les
int
mov
xchg
pop
cltd
mov
mov
xchg
push
repnz
pop
sahf
das
sarb
add
dec
in
lret
or
push
inc
popa
add
push
pop
sbb
add
test
jo
pushf
cltd
inc
push
mov
out
lods
insb
and
scas
inc
adc
mov
add
ret
cmc
insl
fs
xchg
and
push
mov
mov
stc
lock
testb
aaa
adc
adc
ret
xchg
das
mov
pop
enter
jge
repnz
cmc
cmc
adc
flds
jp
psubusb
imul
bound
and
mov
ret
out
sub
shl
sbb
stc
popa
sbb
xchg
cmpsb
in
dec
add
pop
pop
mov
add
xchg
pop
push
outsl
loope
lds
sbb
js
lea
cmc
mov
jns
in
jge
mov
and
out
mov
loopne
pop
push
jg
std
stos
ret
pop
jae
out
mov
lahf
or
jp
mov
mov
std
je
sub
lret
ja
pop
popf
xchg
loopne
mov
jp
jg
movsb
lcall
xchg
out
xlat
int
ds
inc
inc
dec
rcll
ljmp
mov
fs
rolb
pop
cmp
adc
and
movsl
lock
push
rorb
push
shl
xor
or
pop
cld
xor
and
push
sbb
lcall
imul
imul
sbb
out
stos
sahf
xlat
xchg
mov
loope
lret
rol
rcrb
inc
and
es
sbb
int3
jmp
mov
lret
gs
jge
xor
aad
out
pop
xchg
inc
loop
and
mov
adc
sbb
xchg
in
enter
mov
or
cmpsl
pop
es
mov
mov
push
xor
loopne
fiaddl
int
sbb
mov
inc
mov
pop
enter
insl
ss
lds
scas
xchg
cltd
mov
call
cwtl
fs
movl
pop
inc
out
out
cmp
and
xor
jmp
jl
cmp
gs
in
scas
mov
fdivr
jp
pushf
mov
arpl
jae
push
rcll
push
int3
cmp
add
bound
fstpt
daa
mov
mov
in
or
imul
jmp
push
stc
adc
outsl
adc
push
pop
sub
fidivs
test
and
mov
fwait
dec
sbb
out
addr16
adc
jbe
or
mov
das
fidivrs
pop
cltd
mov
mov
mov
xor
loopne
push
jae
subl
adcl
push
subl
cmp
inc
imul
icebp
jns
cmp
jb
sbb
lahf
and
jp
inc
push
cwtl
out
xor
and
mov
in
js
repnz
inc
sbbb
jbe
mul
inc
jne
pusha
mov
loope,pn
cmp
mov
js
data16
pop
inc
cmp
sbbb
negl
dec
push
dec
sbbl
push
dec
call
subb
sarl
or
sub
xchg
push
lahf
scas
jne
addl
and
je
or
sub
aad
adc
adc
inc
dec
leave
cwtl
cmp
lock
outsb
repz
idivb
test
sbb
or
arpl
xchg
push
les
xchg
divl
repz
cmc
xchg
ljmp
lods
ja
mov
out
les
push
mov
mov
adc
jb
push
add
cs
int3
mov
cld
in
jo
sub
add
pushf
outsl
out
sub
cmp
dec
out
mov
cmp
mov
push
vcvtpd2dqy
dec
push
pop
mov
push
arpl
shrd
adc
push
outsb
jle
inc
int
dec
mov
push
fmulp
add
mov
adc
mov
mov
test
jb
shl
imul
punpckldq
cli
cmp
scas
scas
jbe
nop
sbb
repz
stc
dec
xchg
in
movb
arpl
ret
cmc
pushf
push
adc
pop
jle
aam
rcrb
nop
mov
add
xor
int
add
jp
popf
mov
pusha
xchg
mov
inc
lock
pushf
es
pop
inc
xor
daa
lea
xor
movsl
mov
xor
xor
lret
push
fstpl
sti
cmp
sbb
pop
aas
stos
testb
mov
lret
ficoml
adc
fstl
dec
arpl
lock
xor
inc
add
call
cmpsb
div
mov
jae
xor
lea
ret
sbb
incb
test
addr16
outsb
fs
jecxz
lds
inc
or
jne
fstps
mov
pusha
lahf
or
shll
jbe
sbb
pop
es
mov
sub
shl
cmc
pop
push
adc
sbbb
filds
mov
xchg
out
xor
pop
rcr
sbb
dec
mov
push
push
or
jge
pop
cmp
je
mov
subl
lahf
dec
and
mov
adc
pop
test
or
popf
jmp
adc
jle
arpl
mov
inc
mov
and
pop
sbb
mov
sub
data16
clc
out
mov
sti
lcall
push
jae
mov
jns
in
sub
aam
mov
dec
movsb
xchg
pop
in
mov
add
sub
outsb
jo
sahf
mov
jge
pop
pushf
mov
mulb
das
xlat
cmpsl
jno
adc
test
jo
push
cwtl
xchg
mov
mov
mov
pop
test
lcall
mov
xor
pushf
adc
fldenv
fisubl
jmp
cmp
in
loope
icebp
sub
ljmp
cmpsb
dec
pop
ret
cmp
lret
dec
and
mov
jmp
cli
mov
mov
imul
sbb
push
mov
in
and
out
sub
andl
mov
iret
decb
jle
xor
push
and
fwait
lahf
dec
movd
leave
fidivl
add
and
cmpsl
aad
insb
lcall
cmpsl
into
mov
xor
loopne
xchg
mov
es
push
or
int3
daa
mov
jbe
mov
push
fstpt
rcrb
fucomp
and
lret
inc
xchg
js
sub
mov
daa
js
dec
mov
add
and
test
mov
dec
movsl
ljmp
dec
jl
xor
or
fadds
scas
xor
push
sbb
lds
pop
cmp
dec
adc
in
mov
sbb
jne
bound
jnp
outsl
cmp
jge
arpl
xor
adc
sahf
adcb
mov
leave
xlat
mov
fists
xor
div
cmp
or
fnop
stos
xor
xor
shll
cltd
jno
jns
lret
mov
dec
testb
dec
pop
jne
push
je
jbe
jno
daa
cmc
lea
rorl
fwait
pop
jge
pop
fidivrs
add
add
xlat
or
xchg
xchg
mov
jecxz
mov
imul
adc
inc
fnstsw
mov
leave
inc
push
addr16
push
fistl
mov
punpckhdq
pushw
out
xor
je
cmpl
std
ss
jb
mov
scas
mov
movsb
mov
int3
jge
add
lret
cltd
sub
pop
sbb
pushf
push
push
leave
adc
xchg
mov
sbb
movsl
pop
test
test
adc
or
inc
xchg
lea
xchg
lods
test
mov
cmp
out
cmp
and
mov
dec
jge
sbb
xchg
in
jae
cmpsl
lods
dec
dec
mov
sahf
sub
mov
in
test
mov
add
push
jns
sti
fisubrl
int3
xor
lods
loop
cmpsb
pop
rorl
ud2
xchg
cmp
xorb
test
sbb
ret
ljmp
pop
test
inc
lods
jne,pt
and
iret
popl
gs
mov
jns
ljmp
in
xor
pop
xchg
inc
cli
loop
jge
fsubrs
dec
mov
push
pop
dec
ja
int3
xchg
sahf
mov
std
outsl
jae
out
xor
sub
pop
call
hlt
mov
test
arpl
in
pop
xor
mov
cwtl
das
mov
or
inc
jg
sub
les
dec
shrb
test
xor
fildl
loope
stc
scas
adc
cmp
add
popl
sbb
adc
cmp
movsb
and
test
paddb
cltd
xchg
pop
add
and
push
adc
insl
je
mov
adc
test
jle
cmp
xchg
ds
enter
xchg
pop
dec
ss
mov
scas
or
mov
subl
popf
dec
test
insb
repz
cmpsb
aas
aad
cmpsl
outsl
add
cmpsl
xchg
push
add
cmpsl
imul
cmp
call
jg
in
pop
jbe
in
test
sti
push
cltd
pushf
and
push
ds
mov
inc
aaa
mov
lahf
out
into
push
ja
mov
lock
ds
test
xchg
push
pop
push
xchg
xor
push
dec
fcmove
mov
jae
ja
adc
rcrl
mov
inc
rorb
orb
pushf
aad
xchg
cmc
in
pop
mov
out
xchg
or
cwtl
jno
add
rorb
dec
rcl
mov
dec
xchg
or
lret
xchg
xchg
test
pop
sbb
push
and
push
add
repz
mov
rcll
mov
sbb
mov
xorb
jecxz
stos
jae
xor
aam
xor
std
pop
sbb
mov
pop
filds
scas
leave
adc
scas
xchg
sbb
shrl
jns
testb
push
cld
aaa
in
aaa
jno
or
sbbl
pop
sbb
lcall
data16
sbb
test
sub
jb
popa
cmc
push
push
mov
push
addr16
fisubs
pop
subb
inc
push
repnz
iret
cli
xchg
test
jbe
cli
sarl
jle
je
jl
lds
inc
sti
push
jg
pusha
ds
xor
mov
cmp
jae
js
mov
nop
jmp
dec
cmp
inc
pusha
inc
pop
sub
setno
pop
mov
shrb
jge
jb
xchg
dec
push
mov
mulb
xchg
sbb
add
mov
add
add
mov
pop
pop
adc
mov
xchg
sbb
repnz
sub
adc
cmp
outsl
rolb
sub
adc
lock
sub
cmp
repnz
jae
data16
mov
jge
negb
jae
push
and
leave
mov
inc
inc
fimuls
std
cwtl
test
aaa
adcl
inc
icebp
mov
sub
xchg
mov
sti
pop
push
cmp
xchg
xlat
call
mov
mov
lock
stc
sbb
jmp
adc
popa
push
mov
mov
push
in
insl
sub
rep
imul
inc
sar
out
mov
add
adc
jl
push
cwtl
xchg
mov
xor
pop
jp
pop
adc
inc
stos
out
mov
jecxz
jnp
data16
in
pop
mov
jle
imul
rorl
mov
bound
fcoms
jo
pop
jle
xchg
sub
mov
inc
mov
xor
push
fs
sub
punpcklwd
mov
lahf
or
mov
lds
mov
mov
fidivrs
mov
aad
dec
inc
adc
xchg
movsl
mov
xchg
jl
jnp
nop
cmp
test
test
dec
add
mov
pop
or
mov
adc
les
loopne
mov
dec
loopne
add
insl
mov
roll
jae
sub
inc
adc
call
rorb
les
inc
orl
outsb
or
adc
cmp
push
sarb
popf
pop
shll
push
sub
pop
mov
nop
and
bound
or
test
dec
inc
push
and
xchg
or
adc
add
mov
mov
lods
aas
mov
jge
mov
xchg
xchg
xchg
movsb
daa
mov
dec
sub
enter
pop
cwtl
add
jae
fwait
jp
or
sbb
dec
sbb
andb
data16
add
fstps
mov
adc
and
sahf
sbb
in
movsb
inc
mov
int
cmp
pop
mov
cmp
cmpsl
and
sbb
add
mov
jbe
push
cmp
and
mulb
shlb
icebp
sarb
mov
mov
fs
adc
movsl
lcall
pop
int3
aaa
and
add
mov
push
loope
push
jno
lahf
mov
pop
hlt
dec
rolb
and
pop
pop
mov
cld
rcrb
sbb
lods
xchg
les
push
push
lds
sub
repz
addr16
test
inc
jns
into
dec
imul
pop
cmp
sbb
in
jno
or
fmuls
stos
and
lea
or
popf
shlb
dec
xor
arpl
imul
loopne
mov
scas
fldt
icebp
adc
fcmovne
fidivl
jbe
dec
pop
mov
mov
mov
push
xchg
mov
cmp
ja
cs
in
lea
pop
dec
arpl
shll
or
mov
pop
sub
mov
dec
ret
and
sbb
decb
pusha
add
int
sbb
dec
jmp
fnsave
mov
jmp
cmp
in
test
and
icebp
loope
sub
pop
cmp
cmp
lock
je
adc
add
dec
insb
dec
pop
push
add
pop
xchg
lock
inc
mov
sar
out
ret
fisubl
call
scas
xchg
jns
ret
xorl
mov
mov
pushf
cmc
out
dec
or
cmp
in
or
sub
xor
out
in
pop
dec
add
out
stc
mov
sub
sbb
pop
imul
cld
out
inc
mov
pusha
lods
in
subl
sarb
jb
or
inc
jno
pop
fsub
rcll
bound
pop
fstpt
clc
repz
cld
fs
stc
jo
inc
dec
jecxz
test
orb
sbb
add
dec
add
xchg
pushl
sbb
cs
adc
addr16
push
jmp
cmp
outsl
xor
jmp
mov
pop
out
aas
xor
mov
adc
xchg
cmp
loop
popf
ja
mov
movsl
jno
leave
or
sbb
int3
sbb
xchg
or
push
aas
jne
cmpsb
out
and
filds
stos
add
mov
xchg
inc
cmp
ret
pop
loopne
inc
add
mov
rolb
mov
and
movsb
movsl
js
xchg
jle
pop
pop
je
jl
inc
iret
lcall
xor
mov
jp
fdivp
sahf
dec
mov
dec
push
shl
add
popa
and
packuswb
cmp
mov
daa
and
xor
adcb
ret
int
sbb
pop
xor
sbb
hlt
adc
hlt
pop
cmpsb
movsb
in
jle
push
lds
out
inc
lret
repnz
notb
sub
jg
fdecstp
inc
jne
jbe
jecxz
or
sbb
repnz
daa
out
pop
push
mov
xor
sub
cmp
push
jno
ljmp
jae
lret
loope
pop
adc
loope
sub
lret
lds
mov
xor
jl
cld
pop
dec
scas
inc
sti
js
call
xor
mov
fsts
jecxz
xchg
aad
daa
outsb
mov
and
addl
lods
aam
sbb
popa
mov
push
xor
cmp
ret
ljmp
test
jo
inc
cmpsl
icebp
neg
pop
outsb
testl
inc
cmpsb
pushf
lock
lods
lret
and
insb
pop
adc
aam
cmpsb
xchg
push
mov
mov
inc
sub
mov
fbld
cmc
ja
test
push
sub
scas
inc
mov
sbb
dec
into
push
andb
pusha
fadds
mov
fisubl
test
int
ftst
mov
test
cmp
add
test
xor
lock
and
or
xchg
dec
std
pop
dec
inc
test
cmp
adc
int3
or
std
add
lret
scas
aad
add
rolb
scas
inc
clc
gs
dec
int
in
or
mov
xor
xor
loop
mov
jecxz
pop
mov
mov
out
inc
jae
or
adc
jnp
das
sub
jns
push
sub
movsb
loop
push
into
ret
les
icebp
sti
xor
lock
jne
les
xor
outsl
jmp
iret
lock
jne
gs
cmp
sbb
popa
movsb
ljmp
bound
sbb
ret
sub
cmpsb
push
sahf
dec
pop
inc
cld
cmc
shll
sbb
sub
aam
imul
xor
dec
inc
lret
sbb
shlb
mov
leave
mov
xor
je
mov
pop
add
jecxz
mov
ss
mov
or
lods
mov
xchg
idivl
xor
push
jb
pop
sub
xor
or
rcrb
outsb
xchg
aas
data16
icebp
into
insl
pop
and
sbb
push
aad
mov
or
pop
xlat
hlt
and
add
push
xchg
inc
cmpsb
sahf
lcall
jmp
cmp
xchg
push
popa
outsl
dec
popa
add
sub
test
out
pop
fldenv
ret
call
daa
scas
les
add
jge
mov
int3
ja
cmc
xchg
jo
pop
mov
sbb
jbe
insl
lret
cmp
mov
mov
sub
into
shrl
or
in
test
adc
jg
inc
inc
pop
mov
cld
and
fidivl
arpl
pop
cmp
cmp
push
lcall
mov
mov
pusha
call
mov
icebp
lcall
not
clc
cmp
sub
rcrb
cmpsb
xor
push
xchg
ret
and
and
movsb
add
jns
mov
dec
mov
outsb
adc
ds
push
call
add
loop
popa
adc
sti
cli
addr16
dec
jo
in
pop
or
adc
xor
fisttps
mov
lahf
repz
inc
sub
in
scas
inc
not
dec
pinsrw
add
sub
insl
popf
adc
enter
jo
push
push
insl
xlat
lret
jne
sti
lret
adc
jmp
ret
js
dec
push
jnp
outsl
jbe
loope
push
mov
rorl
test
repnz
inc
mov
jo
add
inc
add
rolb
addb
pop
stos
dec
data16
push
push
and
filds
jmp
mov
adc
movsb
pop
sub
mov
imul
xor
shll
icebp
aam
loopne
cmpsb
xor
jmp
push
mov
pushf
and
add
push
adc
scas
out
sub
jns
mov
pop
shrl
jnp
xor
push
jp
outsb
fs
dec
mov
adc
add
or
insb
xchg
sbb
in
cmpsl
mov
add
test
jno
xchg
pop
inc
scas
and
sbb
and
or
dec
or
push
in
mov
test
dec
out
pop
push
jge
jecxz
mov
jb
sti
jb
sbb
mov
fwait
xor
aaa
mov
and
inc
and
jo
sti
xor
ljmp
mov
nop
mov
daa
add
aad
outsl
test
and
std
loope
movsl
sub
scas
push
jg
movsl
sahf
mov
push
jno
arpl
mov
pop
ljmp
xor
rorb
fmuls
jecxz
mov
int
js
mov
mov
rol
scas
sarl
xchg
or
xor
inc
mul
xchg
mov
leave
rcrb
add
adc
int
lret
mov
sub
mov
popa
subl
adc
fisttpll
mov
ret
mov
arpl
xchg
shrl
sbb
xchg
inc
ja
push
repz
inc
in
stos
mov
lcall
lock
mov
add
aam
mov
xor
xor
ss
adc
sbb
out
xchg
or
addl
call
mov
mov
into
pop
adc
sbb
and
add
xor
push
add
mov
jl
mov
lret
mov
push
xchg
adc
sbb
fistpll
inc
xor
stos
xchg
sub
jbe
xchg
pushf
xchg
mov
lahf
outsb
popa
cmp
mov
mov
jle
pushf
call
outsl
add
fildl
push
int3
js
mov
bound
xchg
scas
sub
loope
push
jp
jno
inc
imul
inc
lods
leave
mov
scas
jno
xchg
outsb
icebp
movsl
repnz
dec
sub
outsl
aad
imul
shll
aad
movsl
dec
mov
decb
xchg
mov
cwtl
dec
inc
xor
sar
outsl
iret
int3
and
icebp
sti
jb
xchg
popf
loopne
in
fisttpll
lret
sti
or
jecxz
mov
or
jecxz
faddl
hlt
ljmp
dec
ljmp
outsb
xchg
xchg
mov
sbb
mov
subb
lcall
movsl
mov
in
bound
cs
ror
inc
lret
shl
pop
bound
add
dec
xor
mov
mov
outsb
testl
and
xchg
int
inc
lret
outsl
sbb
pop
ja
ss
lds
xchg
or
or
mov
fstps
arpl
dec
dec
mov
pop
rcr
mov
jmp
sbb
insb
add
test
incb
xor
testl
ss
add
xor
pop
lods
mov
sbb
xor
sub
cmp
jae
mov
jmp
arpl
ret
pop
inc
out
push
jmp
test
push
mov
int3
mov
xor
shrb
cmp
shll
bound
lret
fists
addr16
repnz
cmc
mov
jnp
movsb
int
mov
and
jmp
inc
mov
dec
outsb
ss
inc
xchg
andb
jge
jg
xchg
jp
add
dec
les
test
sbb
dec
mov
rcl
es
in
xor
mov
mov
ja
dec
aad
int3
xlat
sub
sub
ss
cmp
inc
cmpsb
cli
and
daa
shlb
sub
pop
and
mov
rcrl
jmp
lcall
mov
lock
in
cld
pop
push
mov
or
add
inc
in
xchg
dec
xor
cmpsb
xchg
iret
mov
pusha
pop
cmpsl
scas
icebp
add
mov
out
sbb
xchg
cmp
cmpsb
test
adc
js
ficoms
icebp
imul
fcompl
cli
pop
xchg
jo
jmp
ja
ss
in
or
clc
pop
xchg
cmp
xor
fcmovbe
rcll
jp
xor
outsb
inc
iret
mov
adc
xchg
je
fstl
cmpps
in
mov
add
lods
test
add
or
push
xchg
sbb
inc
and
jbe
push
or
pop
mov
mov
mov
rorl
stos
jo
sub
xor
cld
fdivrl
and
mov
sub
aad
repnz
mov
push
call
xlat
add
inc
lock
popf
rcl
pop
inc
stos
fldt
mov
lret
icebp
inc
rorl
add
add
add
cmp
mov
fstpt
lret
out
add
cwtl
test
lret
jnp
mov
les
push
rolb
sbb
and
bound
push
inc
insl
dec
cmpsl
les
mov
call
cmp
push
pusha
sub
jle
push
xor
fistps
loope
nop
jns,pn
mov
push
adc
bound
stos
mov
push
mov
xor
sbb
xor
inc
inc
call
addr16
jbe
fstl
or
icebp
rolb
pop
mov
cmc
push
out
int3
sbb
push
and
push
inc
ret
sbb
scas
sbb
jp
fmull
mov
enter
sub
int
jmp
mov
pop
cmp
movsl
pop
imul
icebp
sub
fidivl
sub
cmpsl
stos
xchg
xor
das
loopne
andb
mov
mov
arpl
or
jl
jo
cmpsb
lahf
push
push
aad
dec
and
mov
idiv
test
lea
pop
bswap
adc
and
into
test
xor
push
jmp
adc
jle
pop
dec
sbb
out
inc
mov
in
ja
loopne
fcmovnu
mov
movsb
fwait
pop
inc
xor
cmpsb
dec
ja
pop
xchg
jle
xchg
push
jecxz
es
cmp
aam
pushf
sub
mov
mov
adc
aas
repnz
cmovo
out
xor
mov
jb
cmp
ficoms
lods
clc
add
pusha
cmp
add
mov
sbb
pop
jle
and
ret
xor
jmp
jge
push
inc
cs
dec
sub
cwtl
inc
lahf
in
dec
cmp
out
pop
dec
inc
shlb
add
imul
pop
outsl
jo
je
outsl
cmpsb
xchg
out
dec
cltd
ret
cwtl
or
dec
add
std
mov
mov
add
adc
jbe
jg
gs
push
sbb
inc
push
imull
mov
jg
jae
dec
fldcw
push
popa
and
ljmp
imul
sarb
jb
insb
and
adc
inc
ret
adc
out
jl
jecxz
daa
fwait
into
shr
push
mov
and
lods
add
aaa
test
mov
cmp
cmp
cmc
dec
cmp
inc
xlat
addr16
or
pop
and
sbb
stos
xchg
pop
jnp
jl
cmpsb
xchg
outsl
in
repnz
xchg
dec
outsb
aam
add
add
iret
loopne
xor
jo
fst
push
cld
dec
ficompl
test
fsubrl
dec
mov
add
pop
jb
mov
lods
stos
push
std
mov
jbe
push
xchg
gs
popa
imul
pop
cltd
dec
cmpb
dec
sbb
mov
mov
daa
leave
jl
or
fs
cli
mov
jns
sub
icebp
inc
int
jnp
cli
cmp
adc
jo
lahf
stc
sub
pop
lods
rclb
call
gs
inc
pop
daa
adc
rol
sarb
fs
loope
xlat
into
mov
movsb
in
push
movsl
pop
dec
ficomps
mov
adc
les
fistpll
dec
popf
les
cmp
xor
mov
orl
addr16
cli
or
sar
adc
adc
xor
outsl
fmuls
lds
jge
add
frstor
movsl
jp
push
cmp
call
test
mov
mov
and
push
fisubl
fdivl
sahf
or
shl
mull
dec
jo
lret
ficoml
mov
pop
mov
mov
push
cs
cmpb
pop
scas
arpl
arpl
jnp
sub
icebp
into
lds
xor
fiaddl
les
mov
sti
mov
xchg
stos
pop
lods
xchg
mov
lea
sub
ljmp
shll
cmc
inc
jle
aad
mov
jg
add
popa
inc
jecxz
sub
out
dec
test
ret
das
out
dec
xor
mov
subb
pop
mov
mov
lret
lahf
negb
mov
fcoml
pop
mov
aaa
fmuls
dec
jmp
daa
in
xchg
jo
pop
imul
inc
dec
gs
shl
xchg
mov
dec
jbe
sub
pop
fs
cwtl
xchg
xchg
fcoms
pop
pop
sbb
pop
cmp
or
cmp
dec
mov
pop
popa
outsb
gs
repnz
add
movsb
ljmp
stc
enter
imul
out
stc
jle
push
outsl
adc
mov
adc
sti
out
test
dec
in
pop
add
mov
arpl
mov
add
and
jo
jl
push
dec
je
loop
xchg
std
mov
fwait
mov
cltd
mov
sub
movsb
cld
jecxz
jmp
je
mov
sbb
sub
les
sbb
pushf
fbld
mov
mov
aaa
mov
xor
pop
dec
arpl
movlps
mov
sbb
mov
mov
jle
adc
adc
inc
fnstcw
in
stos
fmull
xor
lock
pop
add
cmpsb
leave
repz
pop
inc
dec
mov
iret
adc
mov
sub
in
in
and
inc
push
insb
iret
adc
mov
popa
rorb
out
lds
mov
insl
mov
loopne
das
mov
push
inc
mov
movsl
jbe
push
icebp
and
cmpsb
jo
fwait
pop
rorl
sahf
mov
xor
inc
sub
mov
mov
jns
clc
add
sub
lret
popf
sub
or
cmp
das
pop
jmp
dec
movb
mov
loope
in
pop
sbb
lea
mov
imul
in
jmp
pop
cltd
lret
push
mov
out
stos
or
loop
pop
ret
push
lahf
pop
mov
scas
stc
loopne
jg
loop
dec
or
sbb
pop
test
push
sbb
mov
mov
rclb
mov
frstor
push
adc
gs
xchg
dec
adc
jo
cli
icebp
and
jno,pt
and
int
sbb
imul
mov
push
dec
pop
lds
mov
ffree
int
int
add
mov
scas
icebp
fwait
ljmp
enter
sub
loopne
int
stos
je
aas
js
adc
jo
dec
add
dec
out
dec
sbb
call
pusha
xchg
dec
mov
adc
js
jmp
cmpsl
mov
test
fistpl
jg
cmpsl
ds
int3
inc
add
imul
push
in
xorb
pushf
and
mov
scas
cmp
lods
fadds
and
sbb
mov
fstp
cmc
ret
or
jle
mov
pop
adc
test
ss
mov
mov
inc
test
push
dec
ja
and
sbb
sbb
mov
jne
inc
sbb
in
sub
sbb
mov
cmp
jbe
and
pop
push
fiadds
std
sti
xchg
in
mov
mov
add
lahf
fwait
test
cwtl
insb
adc
push
int
mov
xchg
mov
push
aad
mov
call
pop
jl
sub
xchg
hlt
lret
dec
or
fistpll
aam
jne
xchg
loope
pop
jb
in
and
mov
jns
sbb
sub
add
int
dec
mov
inc
das
sbb
push
maskmovq
divl
mov
mov
sbb
cmpsb
pop
or
neg
push
sub
sbb
or
mov
rol
out
sbb
adc
inc
leave
hlt
and
mov
int3
mov
loopne
sar
out
movb
pop
pushf
pop
jp
pop
rorb
clc
adc
and
pop
mov
mov
add
loope
cli
xor
xor
sub
jb
jl
or
and
mull
repz
dec
inc
aad
mov
ficoms
cmp
or
out
xchg
popf
mov
imul
jb
push
pmulhw
test
sub
idiv
leave
xor
jge
adc
mov
repz
inc
fimuls
dec
dec
pop
adc
mov
mov
sub
gs
lods
fcmovb
xchg
mov
xchg
mov
jae
sub
add
cltd
xchg
dec
xchg
fcoml
pop
adc
mov
pop
enter
sbb
or
mov
jecxz
fidivrs
idivb
mov
xchg
mov
pusha
adc
cli
mov
out
clc
xor
cltd
mov
or
clc
sub
and
pop
lds
pop
je
or
data16
mov
lret
xlat
dec
cmpsb
enter
lahf
jae
stc
mov
xchg
xchg
mov
sub
imul
and
in
sbb
repz
fiadds
test
test
add
nop
sub
jg
out
jecxz
loopne
or
xchg
mov
adc
xchg
pop
nop
cmp
in
xor
jno
xchg
test
mov
js
adc
add
push
adc
addl
mov
jnp
pavgw
dec
cmpsb
adc
sub
test
add
andl
jo
cli
dec
cwtl
outsb
adc
push
in
jle
loop
roll
int3
pop
adc
andl
addb
daa
loope
adc
loopne
shr
mov
sbb
enter
push
fdivp
push
lret
adc
arpl
sub
scas
xchg
aaa
jle
in
div
adc
mov
and
jno
in
fadds
xor
mov
xor
mov
std
pop
xchg
stos
orb
push
mov
lret
xchg
movsl
lahf
lea
dec
inc
push
in
stc
mov
ds
mov
shr
mov
das
push
sarb
ret
test
js
pop
jno
out
cltd
or
pop
imul
xchg
add
cwtl
into
xchg
xor
xchg
mov
jle
adc
jle
mov
cmpsb
adc
or
jmp
adc
or
push
cmpsl
addr16
hlt
sahf
jbe
dec
sti
in
call
ljmp
shlb
push
jbe
mov
sbb
add
rorb
jmp
jno
mov
aas
popf
insl
mov
movsl
aaa
or
push
insb
mov
bound
sahf
and
cmp
and
mov
packssdw
mov
test
mov
push
mov
push
adc
das
xor
in
pushf
mov
sbb
lcall
mov
test
popa
in
push
div
sbb
rcrb
out
and
sbbl
out
pop
enter
or
lret
fiadds
inc
xchg
dec
cmpsl
push
in
push
dec
in
push
jo
fisubrs
sub
sbb
testb
aad
lahf
jecxz
dec
xchg
mov
or
scas
jno
push
cmc
push
or
pop
push
rorl
cmp
xchg
fistpll
test
mov
cmp
sub
xchg
jp
enter
push
dec
adc
out
and
and
jle
push
stos
idivl
and
pop
das
inc
inc
loop
jmp
lcall
push
fdivr
cmpsl
xchg
cmp
lcall
nop
push
sahf
cmp
sti
cs
pop
jl
push
leave
popa
jg
xor
lret
inc
sub
flds
sbb
repz
loop
bound
dec
fs
add
adcl
mov
or
pop
hlt
inc
dec
gs
inc
insl
jp
lock
pop
test
mov
or
hlt
mov
mov
pop
jle
imul
mov
sub
sub
xlat
movsb
cmpsl
jne
stc
pop
push
loop
pop
lahf
movsb
sub
mov
mov
mov
stos
cltd
mov
xor
push
lock
movsb
std
in
mov
dec
aas
pop
cmpsb
int
push
es
sbb
int3
jno
dec
lods
loopne
pop
and
pop
dec
icebp
std
jae
leave
test
sarl
jmp
mov
jecxz
decl
push
out
and
xor
out
nop
or
stos
or
push
xchg
pop
pop
and
mov
jno
add
inc
in
or
push
insb
cltd
shlb
add
stc
popf
xor
xor
cli
int3
pop
shl
xor
dec
scas
fldenv
data16
jp
add
sbb
cld
loop
in
inc
clc
mov
cmp
mov
imul
bswap
cmpsb
fwait
andb
sbb
rcrl
cwtl
dec
push
lret
sub
mov
mov
imul
sub
xchg
add
mov
shrb
adc
jbe
xchg
pusha
pop
scas
cmpsb
xchg
adc
push
les
adc
cwtl
es
cltd
leave
xchg
push
push
shl
push
cmp
dec
push
idivb
aas
pop
arpl
daa
out
movsl
jo
add
aas
jg
xlat
cmc
idiv
inc
mov
mov
hlt
insb
pop
sti
popa
jge
cli
enter
pop
fisubs
sti
jne
or
fld1
movsb
dec
js
pop
int
js
mov
dec
int3
lods
outsb
dec
cmp
xchg
aas
call
push
push
sbb
neg
mov
xor
inc
jns
xchg
lret
lock
out
push
mov
cmpsl
mov
pushf
aaa
xor
mov
jae
cmp
cmpsb
xchg
mov
popf
jmp
or
mov
pop
cmpsl
push
outsb
fs
in
dec
jmp
cmc
push
adc
push
loopne
cmp
push
push
sbb
repnz
aaa
pushf
sbb
jbe
insl
push
test
and
imulb
cmpb
adc
dec
push
sbb
xor
loopne
jno
sbb
xor
push
pop
xchg
movsl
ds
inc
repnz
scas
loopne
mov
xor
imul
out
mov
fists
mov
jae
cs
ljmp
xor
lods
out
adc
call
sbb
ljmp
es
sub
outsb
or
and
mov
into
loop
fdivrp
cmc
std
jnp
jns
int3
stos
repz
lcall
pop
or
sbb
and
push
aam
mov
or
push
outsb
add
movsl
jg
xchg
jle
push
dec
div
in
sbb
cmc
pop
mov
iret
xchg
fnstenv
ljmp
out
negb
mov
ds
cmp
and
movsl
lods
xor
pop
push
xor
ljmp
jne
movsb
adc
jle
inc
lret
jl
lahf
xor
lea
push
dec
xchg
cltd
mov
decb
push
ljmp
repnz
adc
imul
shlb
and
call
int
int
mov
arpl
fcomp
push
jo
dec
xchg
cmpsb
std
mov
fsubp
pop
test
inc
stos
out
icebp
add
xchg
xchg
jnp
mov
xchg
jl
bound
push
test
aam
jne
cmc
shl
mov
repnz
jl
or
pop
sub
xor
adc
in
pop
fwait
into
ror
inc
scas
inc
push
mov
jl
adc
mov
and
cmp
fstps
pop
js
les
push
cs
into
data16
jnp
stc
pop
int3
xor
and
and
ljmp
nop
xor
or
xchg
rcrl
sub
stc
aaa
push
dec
xchg
push
jbe
into
in
jno
sbb
jo
push
fidivs
xlat
push
mov
je
std
testb
xor
lods
cmp
ds
out
andb
bound
orb
push
ljmp
fistpl
mov
test
in
mov
dec
imul
std
dec
decl
call
add
in
xor
inc
dec
mov
inc
jne
rcll
lock
sbb
mov
fdivs
sbbl
sbb
fsubs
xor
pop
push
and
dec
mov
mov
out
pop
sbb
xor
imul
pop
mov
sbb
jge
lock
mov
push
cli
mov
mov
rolb
cld
add
pop
push
ljmp
mov
lock
xor
xor
jo
push
je
pop
imul
xchg
jge
test
std
fidivl
adcb
and
push
shrl
mov
orb
cs
idivb
cmp
xlat
lock
xor
mov
bound
cli
pop
xlat
aas
icebp
mov
jg
movsl
pop
push
cmp
sub
sarl
mov
add
filds
lcall
mov
adc
and
push
cld
cmp
jae
int
mov
jecxz
adc
rorl
adc
cmp
enter
fstps
adc
cmp
mov
ds
aaa
fistpll
sub
inc
pop
into
jbe
loopne
test
xchg
xor
popf
scas
cmpsl
insb
fidivrs
mov
rcrb
clc
es
push
pop
pop
xchg
cmpsb
js
xchg
sahf
aaa
push
xchg
js
pop
fsubrl
popa
ds
sbb
jmp
addr16
addr16
fcomps
in
das
cld
adc
pop
ret
jmp
fadds
xchg
outsl
fisttpl
mov
mov
enter
fstps
sti
ja
pop
cmpsl
sub
lea
xor
stos
ret
sub
add
inc
xchg
push
add
cmp
cmpsb
leave
jmp
dec
dec
mov
jecxz
jmp
int
xor
test
or
dec
test
jg
into
addr16
lret
mov
test
pop
adc
jl
leave
pop
ret
mov
jae
call
popa
mov
sub
ljmp
cmpsl
icebp
mov
jl
or
mov
or
inc
hlt
ljmp
out
out
pusha
push
in
push
mov
lahf
push
or
mov
jnp
repz
fiadds
lods
lahf
lret
fidivrl
jnp
fcomps
arpl
fildll
sbb
jns
sub
cmp
in
xchg
stos
pop
int3
in
in
loope
mov
loope
hlt
push
or
leave
jb
ret
inc
xchg
fsub
sti
cmp
jl
sti
mov
in
ja
mov
mov
xor
lahf
test
add
aam
inc
inc
add
mov
xlat
outsl
xor
fcomps
mov
push
jmp
aaa
aas
mov
sub
inc
mov
and
and
sbb
jp
imul
sub
hlt
loopne
push
xlat
lret
xchg
mov
cmp
xor
mov
sahf
in
dec
lods
push
out
or
mov
adc
ror
es
shrb
sub
push
enter
popa
out
daa
outsl
cmp
pop
and
in
add
cmp
cmp
sbb
popf
jmp
das
mov
mov
pop
or
add
int
pop
lret
hlt
daa
mov
mov
xchg
fld
xor
popf
pop
test
mov
sbb
jo
int3
and
stc
xor
add
xor
push
inc
mov
dec
push
sub
lds
jp
adc
pop
out
adc
in
jo
push
insl
pop
jmp
jbe
aad
js
mov
sbb
dec
fildll
xchg
fwait
les
in
pop
fdivrl
scas
adc
and
sbb
jmp
jmp
cmp
cmp
push
dec
or
sbb
stos
stos
and
nop
outsl
inc
aaa
pop
lds
out
loopne
mov
arpl
scas
in
push
popl
adc
mov
dec
out
enter
cmc
and
or
ret
jbe
xchg
inc
jge
mov
je
mov
sti
cs
out
and
aaa
andb
fdivs
cltd
test
adc
and
xor
xchg
sahf
dec
lret
xor
ja
repnz
aad
add
mov
xchg
aaa
call
clc
cltd
imull
stos
fnsave
outsb
inc
int
in
lds
test
je
jne
inc
cmp
in
movsl
aaa
inc
lods
push
in
je
fldcw
jmp
mov
cld
jbe
aad
and
lea
push
call
push
or
test
dec
push
mov
dec
lret
addr16
fcmovb
sub
mov
repz
das
sub
es
pop
push
push
scas
push
ljmp
sbb
add
imul
mov
dec
and
loop
adc
dec
cmpsl
jge
pop
add
add
fsubrs
js
mov
testl
mov
cmp
jle
js
adc
mov
sbb
or
dec
xchg
hlt
sbb
mov
dec
adc
cmp
jbe
mov
imul
inc
incb
sub
shlb
sbb
stc
or
cmp
repz
hlt
or
xchg
adc
lds
push
mov
addr16
adc
out
push
sub
adc
ja,pn
sub
mov
dec
push
aam
jb
dec
test
mov
xchg
dec
push
sub
sbb
nop
sbb
xchg
jle
jb
push
test
mov
and
int
fcompl
lcall
add
dec
inc
fnsave
push
stos
sbb
les
fsubp
mov
mov
ja
sub
insb
shl
fsubrs
push
repnz
aas
outsl
push
scas
popf
mov
insb
and
dec
insl
dec
call
lods
push
jge
inc
pop
xlat
loopne
adc
jle
lret
into
mul
sub
repnz
jmp
and
rclb
ja
stc
movsb
adc
ljmp
out
in
clc
cmp
pop
rcrb
int
push
gs
imul
add
aam
cmp
lret
mov
sbb
inc
jle
push
lcall
mov
xchg
pop
sbb
add
mov
cmp
outsl
sub
loop
push
adc
call
imul
cmp
int
sbb
jmp
add
imul
lcall
dec
jl
sbbl
and
incl
mulb
arpl
xchg
sbb
push
shrl
cld
int3
testl
xchg
mov
lcall
pusha
cmpsb
push
cmp
out
in
bound
ds
hlt
out
loop
hlt
cld
and
inc
stos
out
xor
rcr
push
push
mov
add
lea
jl
pop
jno
in
scas
test
dec
xchg
call
add
jmp
sti
push
lret
jbe
xor
mov
fdivl
push
enter
push
add
bound
mov
mov
and
push
bound
sub
push
lock
and
mov
fcmovnb
cmpsb
xor
push
add
inc
jb
ret
add
int
paddsb
pop
call
cmp
inc
sarl
xchg
ss
mov
into
push
inc
and
mov
out
cltd
setg
or
repnz
rorb
cmpsb
dec
cltd
pop
daa
rcrl
jge
mov
aaa
xor
mov
cli
int3
fdivs
leave
jmp
adc
or
into
in
jbe
xchg
dec
and
and
push
std
stos
push
mov
cltd
sbb
jb
push
pop
jge
stos
fdivrl
dec
fisubs
addr16
mov
ficoml
fiadds
ret
cltd
adc
cltd
nopl
sub
in
cmpsb
or
andl
rcl
jge
out
fdivrp
xor
pop
jns
je
inc
or
mov
mov
or
dec
ss
insb
xchg
sub
pusha
mov
ss
arpl
popf
ja
add
or
ror
xchg
cmpb
jbe
xchg
mov
xorl
das
lock
insb
xor
scas
test
pop
cmp
lahf
lret
mov
sub
pop
out
ljmp
adc
push
push
mov
xor
jo
andl
mov
push
xlat
fxch
mov
or
xchg
add
inc
mov
or
sub
mov
insb
pop
loop
sti
mov
test
orl
sub
or
dec
jns
jmp
xchg
push
push
into
xlat
add
sti
std
mov
cmpb
push
push
insl
jmp
xchg
pop
test
jecxz
test
in
mov
jmp
and
jge
xchg
sbb
into
sub
add
jmp
and
push
lahf
mov
pusha
cmp
das
hlt
cmpsb
mov
popa
inc
push
lds
in
lret
out
or
add
idiv
call
lcall
xor
jno
adc
mov
or
cltd
nop
mov
or
push
jo
mov
rcl
ljmp
xchg
call
ret
sub
add
test
sbb
inc
mov
int
fadds
mov
sub
pop
test
jle
mov
pushl
mov
es
xchg
xchg
mov
arpl
ret
hlt
add
in
fbstp
xchg
push
ljmp
lock
cmp
mov
push
data16
xchg
rcll
pusha
xor
pushf
cmp
lock
lea
xchg
push
mov
xchg
lds
dec
or
jl
push
std
dec
out
jge
out
out
subb
push
add
push
subl
dec
sub
mov
pop
stc
lret
adc
test
pop
push
lods
jo
jae
mov
cwtl
and
adc
iret
jg
shrb
jecxz
pop
mov
paddd
out
xor
push
sarb
inc
or
push
jge
cmp
es
xchg
out
inc
mov
sar
cmpsb
call
daa
mov
pop
adc
mov
shlb
and
cmp
and
add
inc
lds
xorl
mov
out
xor
sti
test
add
imul
gs
mov
fidivl
pusha
cmp
pusha
mov
push
xor
pop
idivl
and
mul
push
mov
cmp
test
std
mov
or
rcrb
das
mov
fists
jge
push
das
insb
stos
or
sub
xchg
in
sbb
je
inc
mov
push
sbb
dec
lock
in
dec
scas
loopne
cmp
repnz
xor
cltd
push
pop
out
enter
aaa
adc
pop
mov
daa
ljmp
jb
mov
adcl
nop
lods
mov
data16
int
loopne
hlt
loop
ljmp
xchg
xor
mov
je
jecxz
loopne
xlat
je
mov
in
sub
cmp
sub
jno
or
mov
mov
icebp
repnz
jg
out
dec
mov
xor
adc
dec
sarl
jnp
es
push
out
adc
fmul
jg
or
dec
or
pop
sbb
or
lret
dec
xchg
lret
push
aas
jg
inc
push
mov
call
jg
jmp
insl
test
fldt
adc
lods
shlb
pop
daa
loope
out
jne
test
aas
add
stc
mov
jecxz
cmp
sti
lds
movsl
xchg
xchg
lahf
push
repz
mov
fwait
clc
xor
std
xchg
icebp
mov
outsb
out
mov
mov
cld
sbb
and
mov
arpl
pop
jecxz
sar
setle
xor
inc
incl
xchg
add
movsb
out
mov
lds
pop
add
in
adc
stos
sbb
pop
mov
mov
in
adc
xchg
dec
stos
mov
into
int3
sbb
ret
pusha
scas
aad
and
inc
mov
and
jb
enter
jne
and
rcrb
mov
nop
fwait
push
cmp
add
lret
push
or
inc
mov
push
and
addps
jne
fs
rcr
filds
rcl
mov
les
cmovo
mov
jo
add
push
xchg
repnz
in
mov
fisttpll
or
fdivrs
ss
mov
mov
test
in
lahf
ljmp
xchg
in
and
inc
xchg
cltd
mov
xor
test
mov
xchg
pop
dec
inc
shll
data16
scas
filds
popa
mov
jnp
and
insb
lcall
cld
push
push
or
insl
jp
lcall
sub
cli
stos
xchg
or
cltd
test
mov
addr16
movsl
dec
imul
jmp
shrb
adc
imull
pop
aaa
dec
add
loopne
mov
call
xlat
dec
rsm
add
pop
call
arpl
cmp
pop
mov
xchg
sbb
repz
jmp
mov
mov
cmpl
je
or
or
push
fdivrs
movsb
lcall
push
je
add
sbb
mov
xor
scas
lods
adc
aad
xchg
in
mov
inc
lds
mov
add
add
insb
push
cli
adc
cmp
roll
jae
sahf
xchg
inc
out
in
adcb
sbb
scas
sub
stos
mov
add
inc
mov
std
bnd
xchg
ja
pop
ja
je
data16
xchg
jb
fbld
xchg
pushf
inc
and
pop
mov
add
arpl
and
test
mov
push
bound
mov
xchg
shl
pop
mov
cs
push
fstpl
stos
cld
icebp
dec
mov
aad
lds
orl
push
dec
mov
call
addr16
adc
jge
ror
imul
outsb
sarb
aad
xchg
dec
scas
cmp
adc
push
xlat
sub
lea
cs
rorl
mov
dec
dec
mov
ja
gs
cmp
popa
stc
push
adc
adcl
inc
aad
push
pushf
add
mov
mov
out
pop
test
xchg
mov
pop
lcall
pop
mov
in
pusha
xor
adc
js
shll
or
add
cmp
imul
cmp
mov
shrl
js
mov
pusha
pop
and
adc
sub
jl
mov
pushf
pop
daa
sbb
int
movsl
mov
jmp
and
jnp
int3
scas
pop
popf
add
inc
test
sbb
cmp
aad
pop
add
popf
mov
popa
fisttpl
xchg
cmp
push
jle
inc
mov
sbb
inc
fsubl
icebp
jmp
jnp
fmull
push
hlt
dec
adc
pop
loope
pop
sti
add
std
or
cli
and
or
mov
push
mov
sbb
lods
and
loop
inc
sbb
dec
je
fs
xchg
ds
jge
mov
ja
lds
dec
decb
sub
xor
jge
repz
mov
and
xchg
inc
int
imul
pop
mov
retw
inc
pop
fs
daa
out
sub
or
test
inc
lahf
fldl
dec
jno
arpl
jb
call
ss
or
data16
jle
mov
loopne
scas
inc
rorl
das
xchg
popf
pushf
add
jne
sub
jle
call
hlt
add
mov
mov
sub
mov
jge
out
mov
les
adc
sub
bound
scas
popf
stos
cmpb
push
icebp
jecxz
xor
mov
fwait
jo
pop
rclw
dec
movsb
mov
loop
inc
imul
xchg
out
pop
lahf
leave
mov
rclb
mov
stos
jmp
dec
sbb
sub
and
pop
xchg
fstsw
push
jg
inc
in
push
adc
mov
xchg
inc
adc
fcomi
cmpsl
in
inc
lahf
sub
nop
ret
sbb
xor
popf
dec
mov
inc
add
std
dec
jns
shlb
pop
inc
inc
lret
lods
ljmp
lds
push
leavew
inc
ror
gs
popf
notb
cmp
or
sti
das
mov
push
test
or
jbe
push
jmp
cmp
or
adc
in
mov
cmp
mov
push
je
lahf
testb
xchg
imul
mov
cli
subb
pop
test
mov
mov
clc
push
jmp
cmp
xor
je
or
mov
xor
jae
sbb
subl
xor
mov
add
shrl
pop
imul
adc
negb
xor
out
ljmp
lods
add
cli
in
in
sub
jae
push
mov
dec
leave
xchg
lahf
sbbl
push
aad
rorl
out
or
lret
mov
lock
add
aam
aas
jle
xor
adc
add
es
xor
loopne
inc
dec
sahf
and
mov
xorb
or
jne
gs
je
cmp
cmpsl
jo
mov
sub
and
adc
sbb
xchg
shlb
push
ret
push
add
and
stos
ret
mov
jbe
xchg
or
push
orl
stos
or
cmp
xchg
ficoms
add
adc
or
addl
nop
or
xchg
aad
mov
pop
call
fcmovbe
aas
adc
sbb
stos
nop
dec
xor
add
cld
jns
mov
gs
rclb
lods
lods
into
in
push
and
mull
cmp
add
push
movl
jmp
xchg
mov
adc
cld
rcll
dec
xor
andb
jl
int
or
in
ljmp
test
sbb
arpl
mov
addl
sti
in
jle
jb
mov
das
or
cmp
shlb
jns
pop
add
fildl
and
add
cmp
sahf
inc
clc
xor
test
push
test
aas
and
xchg
int
push
in
leave
rclb
xor
cmp
ljmp
test
cmp
repz
and
xchg
sahf
push
jae
and
cmpsb
mov
ret
xor
insl
test
push
aas
push
jmp
or
repnz
push
movsl
or
testb
repnz
lods
rcrb
cmova
push
dec
lds
or
add
out
rorl
call
movsl
fmulp
leave
mov
pop
andb
jno
and
js
lods
cmp
cmp
mov
push
push
out
push
js
inc
push
cmp
aaa
std
ljmp
cmpsb
inc
insl
or
icebp
add
imul
and
adc
rol
rorb
adc
sbb
ret
xlat
sub
mov
popa
popa
xchg
pop
shrb
ja
mov
repnz
test
and
sub
adc
xchg
sub
dec
jp
and
mov
sbb
mov
imul
fidivl
or
pop
mov
push
pop
sbb
addr16
aam
outsb
pop
or
pop
int
sbb
imul
pusha
jg
and
adc
pop
mov
rcr
pop
jle
hlt
shrb
sti
fildll
ret
or
push
andb
mov
popa
out
mul
mov
cmp
sti
insl
je
faddl
push
mov
iret
xchg
pop
push
notl
xchg
fmuls
sub
mov
stos
rclb
loope
or
or
add
fldcw
lock
xlat
shll
les
mov
adc
pop
mov
add
fbld
stos
sbb
pop
dec
mov
insb
pushf
sub
pop
adc
pusha
addl
pushl
jns
pop
lock
in
cwtl
popl
jg
dec
rep
add
fisubs
fimull
xor
test
mov
jnp
sbb
or
inc
mov
dec
inc
push
inc
sbb
jmp
frstor
add
jge
arpl
mov
xchg
loopne
pop
lds
scas
fnstsw
sbb
xor
imul
icebp
psllw
mov
cmp
jns
addr16
iret
lahf
xchg
sub
push
mov
mov
xchg
fldt
jmp
cmp
loope
push
xchg
daa
pushf
rcll
push
mov
xorl
jmp
sub
fmull
mull
xchg
sub
aaa
rol
fdivrl
dec
addr16
int
dec
sbb
es
test
cli
xchg
or
int
jb
fcmovb
cmp
stc
pop
inc
movsl
test
xchg
fimull
jecxz
loopne
icebp
mov
cmp
mov
jmp
inc
enter
outsb
mov
sbb
sbb
pop
rol
sbb
mov
add
aas
pop
into
mov
sub
mov
mov
insl
mov
out
clc
fs
data16
push
mov
inc
xchg
adc
mov
push
pop
loop
inc
inc
jne
mov
lods
and
je
out
aas
sti
sub
mov
rolb
rcrl
mov
mov
arpl
sub
sub
inc
pop
loopne
inc
mov
addl
fbld
xor
int3
mov
mov
int
jae
xorl
xchg
rcll
shrb
idivb
cli
adcl
enter
xchg
sub
pand
int
fidivs
mov
jmp
adc
pop
push
inc
repz
push
sti
jle
mov
sti
or
sbb
sar
in
pop
insb
movl
icebp
xchg
xor
inc
cltd
sbb
dec
pop
das
sbb
stc
push
jle
jmp
mov
jne
test
in
lret
pop
mov
lods
xor
sbb
pop
mov
cltd
xor
mov
xchg
in
stos
sbb
lds
jl
int
out
sub
inc
mov
or
mov
lret
xchg
in
mov
cli
push
gs
pop
fsts
xchg
xor
or
std
add
dec
les
movsl
stos
insl
loopne
dec
pusha
xorb
in
pop
iret
leave
shrl
mov
adc
fsubl
in
lea
push
inc
pop
inc
and
cmp
and
inc
sub
mov
xchg
mov
xor
mov
and
clc
xor
sub
mov
xor
sub
mov
repnz
mov
je
inc
lret
scas
mov
pop
mov
in
pop
cmp
shr
push
mov
fidivl
inc
rcrl
mull
adc
inc
cltd
jp
jb
orb
mov
test
pop
pop
repnz
in
out
jne,pt
sti
fcompl
adc
mov
xor
mov
orb
pusha
mov
dec
jecxz
and
int3
mov
stc
in
out
sub
push
dec
or
fsubl
mov
lret
lret
rclb
push
fnstcw
pop
and
andb
push
cmp
push
dec
cmp
inc
push
lock
ret
dec
pop
pop
pop
in
xor
xor
mov
outsb
mov
faddl
xchg
mov
cmp
cmp
in
xchg
std
or
pop
and
fwait
jo
cli
ss
inc
mov
cmp
and
cmc
lods
jnp
rolb
xor
ja
bound
push
mov
xchg
nop
ja
jmp
iret
popa
int
insl
das
xor
rorb
sbb
push
xor
ja
pop
push
mov
icebp
out
shlb
rcl
outsb
sbb
jne
in
mov
add
leave
addr16
movsb
ret
mov
push
lock
outsb
aad
push
ja
outsl
or
and
arpl
and
mov
jo
sbb
jo
nop
mov
sub
sbb
or
std
je
inc
mov
in
push
cmpsb
scas
out
rorb
fnstenv
jmp
push
pop
jo
and
and
jno
ss
shlb
and
stc
dec
aad
inc
fisttpll
mov
call
sysenter
xchg
shlb
lods
lea
jno
daa
mov
mov
les
sbb
xor
add
push
mov
sbb
std
ret
push
xchg
rol
pushf
and
dec
cmp
lcall
lret
jbe
scas
subb
lahf
sti
ret
pop
loope
dec
ja
test
xchg
int
jle
sub
inc
daa
fs
push
xor
and
cmp
fistpl
cmp
mov
sbb
adc
or
fisubrl
jb
push
int
popa
cmp
inc
fistpl
xchg
cld
mov
sub
ljmp
mov
xlat
adc
jae
xchg
inc
das
flds
pushf
inc
and
xor
adc
sahf
je
mov
rclb
cmp
insb
push
cwtl
push
mov
js
push
imul
dec
loop
dec
call
dec
cmp
aas
adc
sarl
push
addr16
cwtl
ret
xchg
push
loop
dec
cmp
or
lret
leave
movsl
and
sarb
loopne
push
rorb
ds
jl
idivl
test
outsb
sti
inc
mov
test
push
cmp
cmp
mov
pushf
sub
mov
add
adc
inc
repnz
pushf
test
into
repnz
xchg
lahf
jns
or
lock
xorl
xchg
jb
or
daa
test
mov
or
mov
mov
orl
push
jno
mov
or
or
pop
mov
and
cmpsb
sbb
lds
int
pop
mov
mov
mov
mov
cmp
pusha
loope
es
loope
stc
ljmp
icebp
xor
jb
dec
or
clc
cmpl
jecxz
fwait
stc
loopne
addb
insb
or
and
sbbl
fwait
scas
and
pop
fiadds
inc
aad
dec
xor
lcall
add
xlat
js
add
adc
mov
mov
jnp
pop
mov
push
stos
cltd
and
dec
jno
mov
scas
test
mov
outsb
mov
jge
test
pop
add
jbe,pt
sbb
lcall
in
and
cli
inc
test
mov
call
fiaddl
movsl
in
std
adc
into
repz
push
mov
int3
pop
out
sub
add
daa
jno
pop
xchg
cmpsb
cmpsb
add
lret
xchg
xlat
mov
push
fcomps
lret
stc
bound
adc
in
mov
cmp
scas
add
dec
pop
mov
push
out
sti
out
push
in
fwait
outsl
ja
in
sahf
mov
out
cmpsl
jne,pt
mov
icebp
lret
dec
notl
lcall
rcr
push
mov
loop
pop
aas
inc
inc
ja
lahf
and
lds
je
inc
xchg
pop
lock
mov
lahf
dec
jb
shrb
clc
loope,pn
cmpsl
push
dec
aad
dec
mov
add
adc
mov
push
adc
jge
in
adc
adc
sbb
movsb
sub
popf
xor
movb
pop
out
lock
mov
sub
ret
fistpl
outsb
mov
cmp
add
call
jo
cltd
aam
pop
adc
and
data16
or
mov
adc
pop
loope
mov
leave
mov
xor
into
mov
inc
jne
or
movsl
jle
ret
cmpsl
sahf
nop
sub
jno
lret
add
push
out
cmp
loop
scas
and
pop
fisubrs
pop
xchg
jg
lods
fs
adc
insl
nop
push
adc
mulb
lret
inc
inc
push
bound
mov
iret
sbb
sub
leave
cltd
mov
sbb
jmp
and
hlt
jg
push
jns
mov
int3
scas
sbb
jnp
xchg
fprem1
sub
and
fisubrl
mov
add
pop
mov
andb
rcll
ud0
dec
sub
je
ja
push
or
pop
movhps
imul
rcll
dec
jp
in
adc
pop
inc
lret
ds
sub
movl
sahf
mov
mov
or
scas
ja
mov
hlt
ficompl
xor
fsubrs
sub
jecxz
mov
sub
stos
ds
push
in
inc
jecxz
and
push
call
pop
push
in
jne
test
sbb
scas
or
push
cmp
xor
mov
test
cli
dec
add
push
adc
pop
rcll
ret
adcb
dec
aam
rorl
adc
std
jle
or
ss
loopne
jb
cmp
repnz
push
repnz
xor
cli
cmpl
outsb
andb
fdivrl
mov
cmp
imul
lods
adc
ret
mov
data16
cld
sbb
iret
test
mov
insl
sub
cltd
dec
fnstcw
subb
scas
lods
enter
mov
cld
arpl
or
inc
cwtl
and
lock
push
js
das
loopne
and
sub
daa
push
push
xchg
dec
insl
pavgb
push
jo
xchg
sbb
xorb
dec
std
sub
mov
mov
icebp
movsl
dec
mov
out
fsubl
sub
ret
cli
adc
sbb
adc
js
pop
mov
xchg
scas
dec
mov
loop
es
dec
and
dec
or
cld
stc
jecxz
xchg
popf
jg
pusha
outsb
jp
mov
mov
jmp
sbbl
ret
mov
cmp
jge
aam
push
dec
xor
fcomps
push
cmp
sub
nop
aad
inc
insb
test
add
mov
repnz
aas
push
sub
add
and
and
push
repnz
xchg
adc
js
push
cmc
andl
xchg
fstl
in
mulb
cmp
and
pop
js
or
fnstsw
cmc
stos
add
push
mov
mov
inc
xchg
xor
pop
jge
loop
xchg
aam
xorb
std
pop
fdivr
movsl
movsb
jp
out
mov
pop
push
mov
inc
ret
mov
test
cwtl
cmp
xchg
add
pop
adc
or
cmp
mov
mov
test
stc
adc
cs
inc
fiadds
add
add
add
dec
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
sub
add
add
add
add
sub
add
enter
adc
add
or
add
sub
add
add
xor
add
add
js
add
mov
add
add
inc
jmp
add
add
add
add
add
add
dec
add
xor
add
mov
add
sub
add
add
add
add
nop
add
add
add
add
add
add
add
add
inc
jmp
add
add
add
add
add
add
add
mov
add
sub
add
add
add
add
loopne
add
sub
add
add
add
add
clc
add
add
add
add
add
add
add
add
inc
jmp
add
add
add
add
add
add
addb
add
sub
add
add
or
add
add
add
push
or
je
add
mov
add
add
add
add
or
sub
add
and
add
inc
add
add
add
add
add
add
add
add
incl
inc
cld
cmp
inc
cld
pop
clc
aas
cld
pop
sti
cld
pop
sti
cld
jg
std
sti
std
sti
std
sti
std
sti
std
sti
std
sti
std
sti
std
sti
inc
sti
cld
cmp
clc
cmp
sti
ret
clc
aas
sti
inc
cld
add
rolb
clc
add
pop
clc
add
pop
clc
add
jg
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
aas
sti
lcall
add
and
add
inc
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
ja
add
add
add
or
incl
ja
jo
add
add
incl
ja
add
add
add
incl
jo
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
decl
add
add
add
decl
add
add
add
add
decl
out
mov
out
out
out
out
add
add
inc
cld
add
addb
clc
add
pop
clc
add
pop
clc
add
jg
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
add
clc
aas
sti
push
rorl
add
add
add
add
add
add
add
add
add
add
rolb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
or
ja
add
or
push
ja
add
push
jo
add
push
add
add
push
add
add
incl
jo
add
add
out
loopne
add
add
loopne
incl
add
incl
add
popl
add
add
add
add
add
pop
add
rorb
add
sldt
rorb
add
sldt
rorb
add
jg
add
incl
add
incl
add
incl
add
incl
add
rorl
add
add
add
add
and
add
add
add
add
add
jne
and
add
add
call
jne
adc
add
add
sub
add
xor
rorl
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
sbb
adc
add
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
mov
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
add
je
jae
add
jbe
imul
add
popa
add
add
add
add
sub
or
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
insl
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
je
data16
bound
popa
add
js
jns
jns
jo
js
outsb
add
add
add
add
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
jo
add
cmp
push
add
add
imul
push
add
jb
jae
imul
add
add
xor
xor
add
add
add
add
add
add
add
cmp
push
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
add
add
add
add
add
add
add
sub
or
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
jp
jbe
insl
add
add
add
adc
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
add
js
add
add
add
or
lods
or
cwtl
or
mov
or
fmuls
or
call
or
add
or
add
add
imul
addb
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
push
inc
push
dec
xor
inc
dec
dec
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
