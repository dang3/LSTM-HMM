push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
push
call
mov
push
call
mov
movl
movl
push
push
call
mov
lea
push
call
push
mov
push
call
mov
push
call
push
push
call
test
je
call
movb
movb
movb
movb
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
mov
mov
lea
push
push
push
mov
push
mov
push
call
test
je
xor
jmp
call
mov
push
call
add
mov
mov
mov
mov
push
call
add
mov
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
movl
movl
call
mov
push
call
add
mov
mov
push
call
add
mov
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
mov
push
mov
push
call
add
mov
push
call
add
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
mov
add
push
call
add
mov
mov
mov
sub
mov
mov
mov
mov
push
mov
push
mov
push
call
add
movl
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
push
mov
sub
mov
pop
mov
movl
add
ret
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
add
mov
pop
ret
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
mov
test
je
mov
cmp
jb
jmp
cmpl
jne
push
call
test
jne
xor
jmp
mov
add
mov
add
mov
add
mov
mov
add
push
mov
add
push
call
add
mov
add
mov
jmp
mov
pop
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jae
mov
jmp
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
mov
mov
movl
mov
push
mov
push
mov
push
mov
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
movl
movl
movl
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
pop
ret
int3
push
mov
sub
movl
movl
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
cmpl
jne
mov
mov
mov
push
mov
push
mov
push
call
add
mov
push
call
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
cmpl
je
mov
push
call
add
mov
mov
mov
mov
sub
mov
mov
mov
mov
push
mov
push
push
call
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
movl
movl
jmp
mov
add
mov
mov
shr
cmp
jae
mov
mov
movzwl
sar
cmp
jne
mov
mov
add
mov
mov
movzwl
and
mov
add
mov
mov
movzwl
and
mov
mov
add
mov
jmp
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
add
mov
pop
ret
push
mov
push
movl
movl
mov
mov
mov
mov
movzwl
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
jmp
pop
ret
int3
int3
dec
dec
popf
pushf
add
push
mov
mov
movsb
inc
mov
push
stc
insb
clc
stc
cld
imulb
push
xchg
add
or
ja
ds
fidivrl
popl
faddl
jne
cmp
inc
add
cmpsb
cld
jbe
mov
rcrl
pushf
sub
cmp
pop
pusha
std
cmp
lds
popa
sbb
sub
cmp
pop
pusha
std
cmp
lds
popa
cmpsl
fsts
push
and
daa
push
aad
repnz
insb
sahf
sub
iret
lret
xchg
and
sub
stos
xchg
jb
fwait
lods
nop
cli
stos
jp
clc
jmp
rcll
sub
sahf
xchg
je
test
fildll
cmp
lods
xor
adc
or
pop
std
in
pop
sbb
sti
push
dec
jg
popa
mov
pop
inc
lods
out
call
push
icebp
mov
xchg
mov
icebp
jae
xchg
adc
lret
cs
pop
push
add
lret
out
lret
lods
xchg
cli
movsl
sbbb
and
fidivs
add
cmp
inc
and
je
sub
or
bound
sub
je
es
jle
nop
ljmp
loop
mov
out
mov
shlb
jg
divb
movsl
shll
call
mov
sar
push
push
adc
sbb
sub
cmp
pop
pusha
std
cmp
lds
popa
sbb
sub
cmp
pop
pusha
std
cmp
lds
popa
pop
mov
dec
mov
lods
jmp
arpl
dec
or
inc
jne
stc
push
add
shrl
scas
adc
inc
jl
dec
jae
test
add
call
add
xor
push
cli
push
pushf
pop
jge
imul
xchg
sbb
and
or
push
aam
dec
sub
mov
dec
sub
imul
je
fs
ud1
xchg
fimull
push
aaa
or
push
mov
cwtl
fistpl
dec
xor
fcomps
sbbb
and
leave
mov
mov
push
stos
fidivl
mov
or
lcall
nop
xchg
mov
in
fcmove
jne
outsl
bound
push
fdivp
fcompl
out
cmp
pop
pusha
std
cmp
lds
popa
sbb
sub
cmp
pop
pusha
std
cmp
lds
popa
sbb
sub
cmp
pop
pusha
std
cmp
lds
popa
fsubrs
lods
lock
xor
in
imul
mov
sub
mov
mov
xor
xlat
loope
mov
js
add
xchg
sub
sbb
jecxz
dec
pop
fldcw
and
stos
lret
push
ffreep
add
rclb
inc
pop
push
or
das
test
fnstcw
inc
mov
cmp
cmp
fdivrs
cld
out
sbb
aaa
lcall
xor
or
mov
push
mov
addr16
pop
and
push
das
in
pop
mov
mov
dec
sub
pop
or
inc
ja
pop
popf
test
js
push
in
mov
jns
popa
fsts
xor
in
mov
out
fdivrl
call
arpl
jne
sbb
xlat
mov
inc
xchg
xchg
divl
loop
mov
xchg
mov
iret
orl
stos
lock
icebp
or
loop
jb
sbb
xchg
jge
lods
in
mov
jae
or
jle
or
sub
mov
cwtl
mov
xchg
push
adcl
lahf
scas
xchg
xor
pop
and
shl
cmp
sbb
push
stos
and
cmpsb
add
sub
cmp
scas
nop
in
cmp
mov
cmp
sahf
mov
sbb
fnstcw
rcll
cmpb
jl
mov
sub
incl
rorb
arpl
scas
push
movsb
daa
jge
stc
dec
iret
mov
jo
aad
lods
out
pop
jecxz
pop
iret
fstl
js
stos
mov
xor
add
cmp
sarb
xor
jl
fldt
push
dec
and
xor
insb
imul
mov
outsl
out
fwait
je
jnp
stc
mov
in
xchg
test
xchg
cwtl
sbb
jp
sti
test
mov
pop
xchg
cmpsb
addl
out
inc
sub
mov
mov
push
cli
ds
ret
rclb
push
cltd
jmp
add
cmpsb
les
inc
or
out
arpl
pop
sub
pop
inc
cld
add
jl
dec
and
js
push
loop
push
das
cltd
and
stos
popa
jno
shl
xchg
aas
jns
cmpsl
subb
cwtl
sbb
cmpb
addl
cmp
fwait
cmpsb
inc
pop
push
insb
or
dec
cmp
negb
mov
iret
xchg
ds
pop
movsl
add
insl
push
lock
adc
shlb
xor
psubd
ret
xchg
nop
hlt
add
add
mov
stos
jge
iret
mov
mov
scas
sub
dec
push
xchg
inc
loop
fstpl
js
mov
aad
pop
ljmp
in
add
jno
xorl
cmpsb
cmc
add
data16
xlat
xor
jnp
testl
mov
icebp
cli
jnp
test
rolb
stos
clc
push
testb
fistps
jle
push
mov
pop
lods
xor
ficomps
daa
daa
push
popa
lock
push
call
test
aad
xlat
adc
mov
mov
push
loopne
in
nop
push
test
dec
xchg
cmpsb
hlt
ret
inc
fcomip
cmp
and
sbb
add
call
sti
andb
lea
pop
mov
insb
push
popf
shr
xor
xor
mov
ret
call
lea
pop
lahf
sahf
jmp
dec
pop
mov
lcall
lret
jns
ffreep
movsl
lcall
fst
leave
jecxz
or
jge
aad
mov
dec
add
test
lret
andb
fucom
mov
stos
cmc
movsl
mov
ret
xor
sbb
xor
xchg
fisttpl
jl
fdivrs
xor
cmpsl
jo
sub
xchg
jnp
and
sub
mov
xor
sti
and
push
add
scas
in
mov
out
sub
xor
mov
inc
call
inc
lcall
push
sbb
stc
pushf
pusha
sub
push
les
add
push
or
mov
pushf
push
xchg
int
xor
clc
fs
data16
sub
adc
cmp
dec
gs
jo
sbb
sub
inc
imul
cld
daa
xor
and
addr16
jle
lea
cmp
dec
sbb
fistpll
aaa
andb
repz
adc
cwtl
popf
mov
inc
movsb
cmpsb
cmc
pop
mov
lcall
mov
pushf
cmp
push
cmp
ret
dec
add
fs
dec
pusha
addr16
add
mov
cmp
cmp
push
push
mov
mov
and
int3
push
inc
into
popa
orb
pop
add
sbbb
mov
mov
add
pop
mov
mov
add
lods
mov
lea
adc
jb
adc
mov
mov
add
push
roll
add
inc
add
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
jecxz
xor
roll
rolb
call
lcall
jmp
cmp
or
enter
ljmp
in
sbb
mov
sub
cmp
in
aaa
cmp
add
out
out
ds
in
inc
add
icebp
inc
add
loope
xor
loopne
xor
loopne
xor
sbb
xor
xor
divb
mov
sub
push
xor
fs
loop
xor
sbb
jmp
sub
adc
lds
mov
fdivs
insb
loop
xor
loop
xor
je
or
lret
xor
loope
xor
int
xor
loope
xor
loope
xor
sahf
xor
in
xor
in
xor
in
xor
in
xor
in
xor
in
add
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
add
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
add
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
add
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
add
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
add
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
add
add
popa
mov
push
dec
mov
xor
mov
xor
das
inc
cmp
inc
add
mov
sub
sahf
and
add
mov
je
scas
das
push
in
mov
inc
add
mov
and
mov
inc
add
mov
dec
shll
mov
push
roll
pop
mov
add
add
aaa
inc
xchg
sub
add
sub
sub
inc
add
sub
inc
cltd
and
mov
aaa
push
cmp
inc
push
roll
cli
mov
sub
add
mov
aaa
inc
push
roll
and
add
add
roll
add
roll
add
roll
add
rolb
add
rolb
add
rolb
add
iret
add
stos
iret
add
mov
add
mov
add
push
mov
sub
roll
popa
mov
push
dec
mov
xor
mov
and
and
lahf
cmp
xchg
inc
add
mov
add
add
mov
insb
push
roll
add
mov
das
insb
push
roll
push
roll
push
roll
push
roll
push
rcll
push
jne
add
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
add
pop
inc
add
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
shrl
add
shrl
add
shrl
add
shrl
add
shrl
add
push
shrl
add
shrl
add
shrl
add
shrl
add
shrl
add
shrl
add
shrl
add
shrl
add
sar
inc
push
rcr
add
shll
push
push
subl
dec
sbb
xlat
inc
jmp
add
roll
sbb
roll
sub
iret
inc
jmp
sub
roll
sbb
roll
sbb
roll
pop
iret
inc
jmp
sbb
rol
jmp
or
roll
roll
sbb
roll
sbb
roll
test
inc
in
sbb
inc
add
inc
add
inc
add
inc
add
int
add
int
add
inc
add
inc
add
xlat
inc
add
int
add
aad
add
aad
add
aam
add
aam
add
aad
add
aad
add
aam
add
aam
add
aam
add
aam
add
les
sub
mov
inc
add
mov
inc
add
aam
add
inc
add
mov
inc
add
out
stos
add
cmp
push
cmp
call
inc
add
cmp
push
cmp
push
sbb
mov
pop
inc
add
inc
pop
add
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cli
inc
add
mov
add
add
and
push
push
push
add
cmp
push
cmp
cmp
add
cmp
push
cmp
push
cli
inc
add
cmp
push
cmp
push
shrl
add
shrl
add
shrl
add
shrl
add
shrl
add
shrl
add
shrl
add
push
shrl
add
shrl
add
shrl
add
shrl
add
shrl
add
shrl
add
shrl
add
shrl
add
roll
sbb
roll
sbb
roll
sbb
roll
sbb
roll
add
roll
sbb
roll
sbb
roll
sbb
roll
sbb
roll
sbb
roll
sbb
roll
sbb
roll
sbb
roll
sbb
roll
sbb
roll
xchg
inc
add
roll
add
inc
add
roll
ja
inc
add
inc
add
inc
add
inc
add
roll
aaa
roll
inc
roll
inc
roll
aaa
roll
aaa
roll
pop
roll
pop
roll
not
inc
add
rolb
pop
roll
pop
roll
not
inc
add
rolb
rolb
rolb
mov
inc
add
rolb
rolb
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
movsb
scas
add
pop
scas
add
push
scas
add
subb
push
and
add
push
adc
add
dec
scas
add
lods
scas
add
mov
scas
add
mov
inc
in
pop
shrl
in
pop
shr
in
pop
shr
in
pop
rorl
in
pop
shll
in
pop
shll
jmp
shr
jmp
rcrl
shrl
jmp
sarl
pop
rcll
pop
shll
pop
sar
cli
pop
shrl
add
push
rorl
icebp
pop
rcrl
pop
shll
pop
shl
lock
sarl
pop
rcll
pop
shrl
hlt
pop
rcrl
negb
roll
lret
rolb
mov
inc
adc
rolb
stos
rolb
xchg
rolb
mov
inc
movsl
xchg
rolb
mov
inc
mov
inc
popa
imul
in
jo
inc
icebp
add
inc
add
inc
add
inc
mov
rolb
dec
rolb
xor
inc
lahf
sub
inc
addr16
inc
jne
rolb
adc
inc
inc
or
inc
sub
or
inc
add
iret
inc
int
iret
inc
add
iret
inc
add
iret
inc
add
sub
std
sub
pop
sub
or
inc
add
sub
sub
inc
add
inc
add
sub
mov
inc
add
sub
jg
inc
add
sbb
cmp
sbb
pop
sbb
ret
sbb
jmp
inc
add
sbb
icebp
sbb
and
inc
add
sbb
lcall
inc
add
xor
and
add
inc
add
and
push
mov
mov
add
mov
add
in
mov
push
mov
mov
add
sub
add
and
add
dec
mov
add
cmp
add
ret
push
mov
mov
add
push
mov
add
clc
mov
push
into
mov
push
loopne
add
shlb
add
mov
add
mov
add
rcrl
pop
roll
hlt
pop
shll
pop
rorl
sarl
hlt
pop
shll
fistps
rcl
fistps
shl
fistps
shr
fistps
rcll
pop
roll
pop
shrl
out
pop
rorl
out
pop
shll
out
pop
shrl
add
push
mov
add
push
test
add
push
stos
add
shll
pop
shrl
rorl
jmp
shrl
ljmp
adc
pop
roll
add
inc
sbb
inc
iret
not
inc
loope
rolb
rolb
rolb
mov
inc
std
mov
inc
sbb
rolb
rolb
mov
inc
pop
mov
inc
arpl
inc
pop
je
inc
mov
add
rolb
je
inc
jmp
inc
rolb
sbb
rolb
dec
rolb
xor
inc
daa
sub
inc
cmp
sub
inc
pop
adc
inc
insl
or
inc
add
es
add
es
add
es
add
and
add
daa
inc
add
daa
inc
add
inc
add
inc
add
sub
add
sub
add
sub
lret
sub
add
sub
add
cs
add
das
inc
add
cs
add
inc
add
inc
add
sub
loope
inc
add
cs
add
sub
inc
add
sub
push
and
sahf
sub
sahf
cli
aas
add
add
add
sahf
sbb
sahf
xor
add
dec
lods
add
inc
lods
add
xor
aas
add
mov
sahf
mov
add
mov
add
sbb
sahf
daa
inc
add
and
inc
add
sub
push
aam
add
into
mov
push
add
push
sar
out
add
shrl
lods
dec
ljmp
add
cmp
fcmovnb
int
xor
mov
outsb
fcmovne
push
xchg
xor
ret
jno
fcom
and
mov
and
std
bound
inc
inc
dec
add
mov
in
shlb
into
dec
add
sarb
add
rolb
add
int3
rolb
rclb
add
rcr
add
roll
sbb
nop
inc
sbbl
xchg
inc
mov
push
xchg
inc
imul
xchg
inc
jge
inc
inc
push
xchg
inc
push
sbb
inc
jns
xchg
inc
inc
sbb
inc
imul
inc
stc
addr16
inc
cmp
mov
inc
adc
mov
inc
clc
add
nop
inc
les
nop
inc
ss
nop
inc
adc
movl
sbb
nop
inc
add
int
add
add
sub
bound
popf
into
jno
jecxz
add
popa
into
popa
add
mov
add
int
add
xchg
add
add
inc
add
xchg
add
pop
aad
add
mov
add
dec
add
mov
push
stos
mov
add
aam
add
aad
add
mov
add
inc
add
mov
add
mov
add
aam
add
add
sbb
dec
add
mov
add
jge
inc
push
fmuls
inc
push
jle
add
hlt
push
inc
push
add
add
lods
push
inc
push
lods
inc
sbb
mov
inc
push
cli
aas
add
add
aas
adc
stos
push
inc
push
inc
inc
or
sahf
cmovo
mov
push
push
xchg
inc
push
sbb
push
mov
inc
push
add
add
mov
inc
push
out
inc
es
and
inc
push
cmp
push
inc
push
filds
push
or
inc
push
roll
xor
inc
push
dec
inc
or
xor
inc
push
shl
add
rcrl
dec
popl
adc
sbb
sar
add
and
adc
rolb
add
ror
dec
lds
jae
repnz
pop
shll
pop
rcll
sub
sahf
dec
pop
ror
add
rcll
add
rcrl
add
shr
dec
pop
rcll
dec
pop
shrl
push
shr
dec
pop
rcr
add
shll
dec
outsb
add
rcll
dec
sub
dec
shll
dec
add
rolb
sbb
nop
inc
push
and
inc
mov
aad
inc
in
sbb
nop
inc
push
and
inc
ficomps
xchg
inc
repnz
xchg
inc
push
and
inc
sub
sbb
xchg
inc
dec
and
inc
xchg
pusha
xchg
inc
sub
rolb
xchg
inc
sbbb
inc
test
add
xchg
inc
cmc
sbb
nop
inc
aaa
and
inc
add
shll
jg
add
push
int
add
add
aam
dec
add
addl
mov
test
add
addl
jge
push
add
test
add
add
test
add
inc
add
add
mov
inc
add
test
add
rolb
add
test
add
rcll
lahf
xchg
add
int3
dec
add
xchg
add
int3
push
add
xchg
add
pop
add
xchg
add
xchg
add
lock
or
add
inc
push
mov
push
pop
push
inc
push
xchg
inc
add
push
push
inc
push
outsl
inc
add
int3
or
add
and
inc
push
mov
or
adc
sub
inc
add
dec
inc
or
mov
inc
or
rorb
push
les
push
mov
inc
push
call
or
push
sbb
push
outsb
or
pop
push
inc
or
add
sahf
or
or
push
or
add
sarl
dec
push
add
rcll
stc
add
dec
dec
jo
adc
dec
dec
push
add
and
testb
cmp
das
shr
dec
xor
daa
shll
add
roll
pop
rorl
dec
pop
roll
add
rcrl
add
shll
add
shrl
add
shll
add
rorl
push
shl
cmp
inc
dec
sbb
inc
cltd
push
xchg
inc
test
add
inc
mov
ss
inc
imul
inc
xor
sbb
inc
inc
push
xchg
inc
out
int
mov
xchg
inc
sub
int
jno
nop
inc
inc
sbb
inc
pop
out
inc
mov
push
xchg
inc
das
sbb
inc
popf
push
xchg
inc
adc
enter
xchg
inc
insb
sbb
inc
or
mov
mov
sbb
xchg
inc
fldl
sbb
nop
inc
add
int
add
fiaddl
add
dec
add
int
add
into
push
fildl
add
into
dec
add
int
add
fildl
add
add
adc
fiaddl
add
fiaddl
add
into
dec
add
add
fmul
dec
add
int
add
xchg
fiaddl
add
fiaddl
add
dec
add
int
add
faddl
add
jle
or
push
jge
push
push
enter
jns
add
add
push
add
push
sbb
push
in
inc
add
xor
push
adc
push
sub
inc
push
jnp
pop
push
movsb
jne
push
or
push
jl
inc
push
movsl
inc
or
mov
add
test
add
mov
inc
push
mov
add
out
inc
push
popa
inc
add
mov
inc
or
mov
inc
aaa
push
xorb
loopne
adc
xchg
push
rcrl
ss
shl
add
rorl
pop
roll
sarl
add
roll
addb
shll
add
shrl
add
adc
rcr
add
rol
xor
rolb
sbb
add
add
and
pop
xor
shrb
add
shll
xor
and
xor
enter
push
xor
jl
and
jle
pop
shr
add
rorl
xor
inc
adc
xchg
inc
inc
and
inc
insl
or
inc
dec
jmp
inc
fcomps
jmp
inc
gs
inc
sbb
sbb
xchg
inc
in
fiadds
sub
inc
xchg
inc
sub
fldl
or
inc
jmp
and
inc
pop
ljmp
sbb
and
inc
and
inc
aaa
and
inc
popa
dec
xchg
inc
push
loopne
inc
sub
dec
add
add
add
rclb
inc
lds
add
lds
add
aad
add
les
add
les
add
lds
add
rcll
ret
in
rcll
mov
rcrb
xchg
lahf
add
pusha
add
lahf
add
adc
pusha
add
shlb
push
lahf
add
push
rcrb
mov
inc
add
mov
add
mov
inc
add
sahf
add
push
cmp
or
or
sbb
inc
push
inc
or
sbb
or
add
inc
push
jp
or
lock
inc
push
popf
inc
or
adc
pop
push
sbb
adc
cmp
inc
push
enter
jl
inc
push
jo
or
test
inc
push
hlt
aas
adc
cld
or
add
push
daa
inc
or
sub
inc
push
lcall
push
mov
pop
push
insb
push
inc
push
sbb
push
outsb
push
inc
push
rcll
add
rcll
add
roll
add
rcrl
add
sarl
and
xchg
rcl
add
repnz
pop
shrl
add
rolb
daa
shr
dec
stos
add
push
shrl
push
daa
fldt
add
fcompl
sub
sub
cltd
add
xor
lods
and
ss
ret
cmp
sub
pop
mov
jno
call
xchg
cmpsb
lods
js
cmp
mov
ss
xchg
mov
dec
shl
mov
push
dec
xchg
push
add
inc
lea
imul
mov
xchg
mov
jb
jno
cmpsl
xorl
lret
addb
subb
movl
jae
lret
add
jge
push
xorl
es
imulb
test
lret
pop
sbbb
es
add
xchg
xchg
arpl
and
mov
add
fidivrs
pop
lds
add
sbb
cs
into
mov
pop
xchg
mov
fwait
sahf
jl
jg
std
imul
mov
les
add
or
fwait
add
pushf
push
adc
out
push
xor
or
push
mov
xchg
test
imul
arpl
leave
fistpl
es
iret
aaa
add
out
push
mov
pop
loop
aad
xchg
push
xchg
sub
push
rcrl
fdivr
cs
cmp
sbb
adc
pop
fs
lods
andl
add
mov
lods
lret
jmp
rclb
mov
adc
and
repz
leave
inc
cs
iret
xor
mov
sub
jbe
cmp
xchg
xor
aaa
sbb
popa
lret
cltd
repnz
cmc
sbb
jns
mov
nop
mov
int
outsb
repz
add
add
pop
ds
scas
jne
jge
dec
dec
mov
out
jo
cmpsl
fs
pop
rorl
inc
mov
mov
arpl
mov
jns
in
insl
addl
std
test
mov
vorpd
fidivs
fldz
xrelease
lock
inc
stos
jecxz
sub
lock
scas
or
inc
sbb
inc
jp
push
test
mov
sub
sarb
es
int3
jnp
enter
sub
dec
add
in
xor
pop
jnp
cmp
jae
dec
or
and
in
cli
adc
mov
jns
into
add
pop
add
andb
addb
mov
test
or
cs
aaa
pop
jl
enter
mulb
shll
mov
data16
adc
inc
int
in
sti
jmp
repz
or
push
mov
insb
mov
imul
push
mov
add
add
in
mov
jmp
stos
imul
in
sbb
mov
push
and
and
gs
push
test
roll
mov
cwtl
xor
fcompl
and
dec
and
lods
inc
dec
dec
les
push
je
rcll
mov
inc
add
sar
sub
push
lock
mov
jns
jb
nop
insl
pop
push
sbb
push
push
cmp
stos
mov
cmpsl
repz
or
jmp
jae
shlb
lahf
sub
pop
test
call
fs
mov
mov
je
movsb
mov
shlb
loopne
jnp
adc
or
add
cmp
push
inc
fbld
cmp
mov
xchg
int3
sub
dec
jg
cs
incb
cmp
mov
fsubl
xor
aam
call
sbb
roll
sbb
roll
and
inc
test
sbb
roll
sbb
roll
sbb
roll
add
roll
sbb
jo
add
movl
push
mov
out
decb
dec
js
mov
je
js
or
jae
jne
inc
add
in
jge
push
mov
bound
fs
lcall
rcrl
mov
mov
jmp
mov
sbb
out
in
test
addr16
loope
ret
ljmp
out
adc
sbbl
hlt
ret
mov
scas
fwait
mov
jne
dec
fidivrs
and
cld
int3
loope
pop
xor
call
stos
in
inc
xchg
icebp
es
pop
jno
lahf
call
xor
in
or
inc
add
popf
mov
in
mov
and
xchg
test
shl
scas
pop
neg
cmp
sub
cs
mov
dec
pop
rolb
mov
imul
jmp
sbb
and
lds
xor
sbb
rcrl
mov
bound
aas
fisubrs
hlt
bnd
add
cli
jae
inc
xchg
cmp
xchg
lods
adc
aaa
xchg
in
ret
or
or
in
sti
add
push
shr
filds
ljmp
loope
xchg
iret
or
sub
je
das
mov
mov
mov
ds
pop
ret
and
es
add
out
insb
loopew
stos
inc
cmpsb
fwait
sub
outsl
bound
dec
xor
push
clc
cwtl
push
xlat
jae
xchg
mov
push
cli
push
in
and
inc
scas
into
jg
dec
sub
mov
stc
and
mov
mov
in
push
leave
es
out
or
mov
inc
lret
pushf
mov
cmpsl
inc
addb
mov
leave
in
iret
jae
into
lcall
repnz
mov
add
aas
mov
inc
adc
add
xor
subl
pop
int3
xchg
push
push
cmp
or
repnz
cmp
inc
scas
push
push
out
in
pop
sub
je
mov
add
mov
lahf
jg
mov
imul
jle
test
stos
cld
jp
adcl
lods
sub
dec
sti
rcrl
stc
dec
cmp
das
popf
jns
scas
sbb
or
mov
cmpsl
loopne
push
push
xor
dec
cmp
mov
dec
push
and
imul
insb
pop
xorb
jecxz
icebp
rorl
stos
jecxz
add
icebp
ss
mov
cmp
or
jns
pop
movsl
out
cmp
fst
push
aaa
xlat
popa
and
jmp
sti
aad
test
in
xor
test
lret
push
hlt
mov
lcall
cs
dec
push
dec
in
popf
and
sti
and
aad
test
mov
sub
insl
into
sbb
add
andb
mov
cmpsb
sar
cwtl
lret
pusha
lahf
icebp
fdivl
lret
scas
pop
jl
pop
ljmp
cmp
sbb
fwait
sbb
js
push
popf
jns
push
lret
pusha
mov
xchg
imul
shrb
cmp
sbb
or
scas
std
sbb
push
push
xor
rclb
add
fwait
push
rolb
rcr
cmp
and
stc
dec
ret
lock
lods
loope
mov
les
xor
adc
sbb
gs
notl
std
mov
popa
fcompl
ljmp
adc
cmp
cmp
rorl
xor
shrl
int
int3
xchg
cmp
add
add
add
repz
pop
popl
add
add
push
push
outsb
ja
cld
dec
adc
pop
cld
lcall
cmp
es
int
loopne
insl
mov
xchg
cld
pop
sub
cwtl
push
sbb
pop
in
push
stos
sahf
cs
cmp
and
sbb
xlat
add
pop
xor
loopne
jns
sbb
dec
pop
add
dec
cwtl
sbb
and
xlat
add
jne
xchg
mov
out
pop
add
ss
mov
jne
les
and
xor
enter
mov
jns
mov
iret
jno
xor
lods
sub
pusha
lods
add
stc
cmp
xchg
dec
push
adc
ja
incb
sbb
outsl
sbb
mov
stos
clc
ja
push
std
pop
pushf
ljmp
rcl
push
in
lods
cwtl
ds
or
cwtl
mov
cmp
inc
rorb
fmul
sub
gs
pop
adc
xor
sbb
ds
xor
mov
add
lahf
pushf
xor
push
mov
pop
mov
or
cld
mov
int
enter
scas
jge
mov
mov
dec
mov
fs
es
test
mov
adc
adc
in
sbb
cmp
fcom
xchg
inc
in
pop
sbb
mov
add
test
popw
cltd
ljmp
mov
xor
cli
xchg
out
dec
lret
push
mov
jnp
test
xchg
dec
lretw
add
pop
enter
xlat
mov
sbb
dec
rcrb
out
testl
mov
lock
pop
testl
sbb
adc
das
bound
pushf
xchg
lds
cmpsl
jns
xor
and
add
shlb
rcrb
out
arpl
repz
pop
push
gs
or
imul
vandps
xor
popa
jmp
lret
jmp
pop
test
inc
dec
and
mov
js
gs
push
mov
js
dec
or
xor
xchg
push
lods
mov
faddl
jmp
lock
cwtl
fstpl
adc
sti
sub
fisubrs
adc
fs
mov
enter
mov
comiss
mov
and
xor
pop
xchg
into
jecxz
push
andb
xchg
sub
in
lahf
fs
lahf
mov
or
or
leave
addr16
fnstenv
stc
mov
add
inc
xchg
andl
int
cmp
fidivrl
jp
setb
xchg
fs
test
add
js
adc
stos
xchg
orl
sub
mov
and
sahf
aaa
push
mov
jne
mov
daa
frstor
sub
jb
mov
mov
addr16
jno
mov
ja
jbe
mov
std
add
add
add
add
adc
shlb
ror
mov
fstl
push
inc
popw
sbb
pop
mov
cmp
rclb
adc
mov
incb
ljmp
cwtl
push
pop
or
data16
lods
imul
push
into
sub
push
movsl
test
pushf
xchg
int
mov
sub
aam
cmpsl
pop
mov
inc
call
arpl
xor
xchg
insl
pop
jae
sbb
pop
adc
lret
jl
mov
xorl
jl
cmp
mov
lods
xchg
cld
or
jns
lods
push
cmp
add
inc
pushf
pop
adc
xor
dec
in
jns
ss
adc
mov
add
or
pop
mov
sub
setno
sbb
aam
sub
xor
pop
adc
xorb
gs
leave
or
push
push
inc
jno
sti
lock
inc
cmpsl
pushf
jecxz
adcb
loop
jo
fwait
pop
je
inc
adc
bound
and
or
jl
push
xor
cli
add
mov
stos
push
sub
push
pop
mov
lds
xor
add
push
xchg
shll
shr
decb
cmp
imul
jbe
movsb
ror
push
xchg
pusha
sbbb
jge
cmc
lock
add
xor
inc
popa
out
cld
lock
pushf
push
lods
mov
mov
or
stos
fistl
jp
jmp
add
ffree
fisubs
out
mov
dec
or
cmp
add
push
mov
test
jno
pop
xchg
data16
mov
mov
mov
iret
jg
outsl
sbb
out
mov
mov
and
pop
cltd
pop
or
cmp
or
lret
cli
stos
pop
movsl
or
add
lret
pandn
push
sahf
push
scas
loop
out
mov
mov
rclb
test
sub
adc
popf
dec
inc
jge
movsb
outsl
mov
test
pop
fwait
jle
sub
rcl
xor
mov
and
js
xlat
sbb
and
cmpsl
push
pusha
in
lahf
sbb
jl
mov
adc
movsl
pop
xchg
jmp
fdivr
lods
leave
pop
mov
mov
and
cmp
mov
xchg
jnp
cmpsl
nop
sbb
adc
das
std
mov
cmpsb
fwait
or
xor
mov
mov
ror
pop
lods
out
sub
mov
inc
enter
cmp
movb
inc
cmp
add
adc
cmpsl
je
push
sti
lods
jg
int
fcompl
movsb
jne
push
mov
push
add
xlat
int3
mov
rcll
mov
and
mov
lcall
and
repz
adc
clc
cld
rep
insb
ret
ror
and
pop
or
sub
xchg
jp
cmp
xchg
xchg
xor
lods
push
adc
rol
pop
sub
cmpsl
cmpl
cmp
mov
adc
jae
cltd
xchg
jno
sbbl
push
add
cmp
adc
inc
push
mov
mov
roll
xchg
cld
cmpsl
adc
shl
data16
dec
sbbb
adc
lds
sbb
dec
mov
mov
adc
adcl
cmp
addr16
pop
adc
insl
add
mov
inc
push
hlt
xchg
inc
popf
sarb
cmc
and
cmp
push
cs
cmpsb
jne
add
ss
pop
xchg
js
pusha
lahf
or
add
xchg
mov
mov
fsqrt
test
xlat
jae
outsl
jno
cmp
pop
aas
in
icebp
or
sub
jno
push
data16
mov
pop
fcom
ss
das
and
test
push
clc
stos
cmp
andb
into
pop
les
test
or
and
sbb
pop
jp
xor
pop
stos
jge
dec
testb
and
in
rolb
stos
jecxz
sti
or
dec
add
jbe
push
jnp
push
daa
mov
lds
loopne
pop
sbb
filds
mov
clc
push
cli
rcrl
mov
xlat
ja
fsin
aam
mov
cli
fcomps
cmc
ret
pop
sbb
into
cwtl
jp
push
jne
pushf
fildll
xchg
mov
lock
dec
or
push
push
movsl
out
mov
nop
push
pop
push
cwtl
mov
sbb
adc
sub
add
add
insl
mov
or
hlt
roll
sti
mov
pop
ret
es
mov
popf
fisttpl
cli
data16
sbb
and
jbe
mov
int3
rcl
repnz
xor
subb
jns
xor
mov
bound
cltd
mov
shll
ljmp
test
dec
fs
mov
pusha
inc
fs
int
or
test
dec
add
addr16
xchg
insb
mov
pop
sub
out
xlat
sbb
xor
scas
mov
stos
dec
jecxz
pusha
fdivrl
lcall
ds
mov
mov
out
popf
addr16
imul
jle
cmp
mov
add
mov
xor
jns
mov
inc
outsb
cltd
or
imul
mov
dec
sub
int3
add
call
ljmp
cmp
mov
pop
mov
into
sub
stos
sbb
cld
addr16
rcl
mov
xlat
ja
mov
pop
mov
sbb
std
testb
pop
xor
add
dec
mov
adc
xor
loop
loopne
dec
scas
push
fidivl
out
pop
fdivrl
test
jmp
mov
inc
sahf
push
popa
add
cmp
pop
cli
mov
inc
aam
lods
adc
push
pop
add
mov
sahf
inc
pop
stos
inc
das
ror
mov
xor
in
stos
mov
enter
add
test
push
ja
inc
add
ret
xchg
fildll
mov
mov
dec
ljmp
fcmovb
cmp
in
aad
jecxz
cmp
xlat
dec
fldenv
pop
cmpsb
push
sub
pop
lret
xor
jns
push
add
test
pop
fwait
push
rol
pop
popa
fdivrl
adc
ja
loopne
adc
in
xchg
mov
add
hlt
cmp
adc
dec
or
xchg
testb
mov
push
je
icebp
aaa
sub
mov
pop
jg
dec
in
add
inc
sbb
xor
and
sti
fsubs
mov
pusha
xchg
sub
in
shl
iret
out
add
inc
mov
mov
jg
rolb
lods
ret
movsb
fwait
add
add
add
movsb
mov
sbb
mov
jp
fcomip
xchg
ljmp
jo
stos
cltd
dec
aas
insl
outsb
insb
mov
inc
fs
cmpsb
jb
and
insl
jg
xchg
imul
add
push
pop
imul
in
dec
fisubrl
es
pop
inc
scas
push
movb
testl
add
add
add
push
push
xchg
lea
sti
aaa
cmp
in
inc
test
ret
std
cmp
rolb
cld
insl
cmp
stos
push
and
xor
xchg
inc
and
hlt
test
cmp
jns
hlt
sbbl
movsb
loope
sub
pop
out
xlat
das
xlat
jne
sbb
mov
add
add
icebp
sbb
sbb
das
and
mov
sub
rclb
in
in
and
nop
xchg
scas
fidivrl
pushf
mov
aad
testb
lods
mov
sbb
dec
test
aad
cmp
mov
cmpsb
es
ret
cmp
xor
mov
popa
and
add
cwtl
rol
aaa
push
push
xchg
stos
xchg
inc
or
popa
popf
cmc
loop
stc
xchg
cmp
push
ljmp
or
jns
mov
shrb
or
int
pop
adc
jae
jmp
push
std
je
xchg
cmp
cmc
js
scas
or
or
andl
add
outsl
test
addr16
or
pop
les
lea
mov
mov
pop
jnp
mov
inc
or
nop
mov
std
gs
add
out
icebp
pop
rcrb
jno
ja
jne
jae
pop
scas
or
stos
push
sbb
or
xor
mov
or
imul
stos
add
push
mov
pop
lock
cltd
pop
sub
cmpsl
sbb
sbb
out
sahf
lods
mov
mov
aam
mov
std
mov
das
cmp
jae
inc
push
mov
sbbb
mov
jge
adc
mov
pop
cld
mov
gs
fdivs
fisubs
fdivl
add
fmull
std
fnstcw
test
add
sbb
xor
jb
or
push
in
or
inc
cmpsb
imul
inc
mov
dec
inc
addb
mov
ja
lcall
push
mov
out
lret
fcmovnb
lods
push
imul
adc
movb
fs
pop
popa
icebp
xchg
lods
divb
add
mov
push
or
aas
pop
andl
sub
out
outsl
sbb
jbe
rcrl
outsb
or
xor
mov
sbb
xor
mov
ds
mov
sub
sbb
test
in
cmpsb
mov
inc
add
sub
mov
and
mov
mov
aas
cmc
pop
in
bound
add
or
into
lret
xor
mov
insl
add
dec
jae
fisttpl
fdivs
pop
mov
popf
les
jecxz
in
gs
test
jmp
adc
or
lods
orb
in
dec
add
scas
sar
cltd
mull
pop
addr16
mov
mulb
add
jg
add
mov
mov
test
push
xchg
arpl
ret
jne
aam
inc
call
mov
or
xchg
jecxz
push
leave
add
lahf
or
cltd
idivb
les
movsl
mov
dec
outsb
shlb
out
push
lods
adc
mov
aaa
je
add
pop
scas
inc
movsb
popf
dec
pusha
push
je
cmpsl
aam
mov
dec
mov
dec
fidivs
mov
push
gs
mov
das
mov
mov
jb,pn
cmp
inc
and
xchg
xchg
or
loopne
inc
jno
push
aad
mov
inc
repz
sbb
xor
cwtl
or
mov
mov
gs
add
lds
push
inc
or
push
lret
decb
pop
stos
out
cmp
nop
test
adc
js
xchg
shlb
lea
add
mov
add
mov
jo
sub
xor
and
cmpb
add
gs
insb
xchg
daa
out
push
repz
mov
pop
jmp
add
add
pop
mov
fnstcw
scas
jg
push
or
clc
sub
bound
pop
cs
jae
mov
adc
mov
adc
call
repz
stos
je
bnd
in
or
and
jge
dec
mov
inc
mov
xor
xor
scas
or
dec
add
roll
push
jl
not
cld
push
sbb
or
ret
push
push
cmp
scas
push
popa
xchg
imul
setns
cmpsb
cmp
insb
sub
mov
rclb
jbe
xor
xchg
mov
jno
jo
ja
cmp
cwtl
data16
xor
cld
mov
adc
aaa
and
xchg
movsb
out
stos
add
push
movsl
loope
aas
add
jo
or
shl
leave
inc
sbb
bnd
mov
rcrb
xor
add
sbb
movb
xor
in
push
lock
push
rolb
xchg
and
adc
xor
jb
add
test
aad
jg
mov
jl
xchg
or
loope
into
std
test
hlt
lock
cmpsl
outsb
test
or
outsl
pusha
cmp
cmp
inc
out
xchg
test
fsubl
push
insb
pop
sub
jle
dec
add
cmpsb
jl
int3
pop
pop
shll
roll
ja
cld
enter
subb
and
fimuls
jo
addl
push
mov
ss
sbb
test
pop
arpl
into
pop
lea
sub
clc
fwait
hlt
pop
cli
std
inc
adc
fildll
push
ret
dec
xchg
push
sub
fcmovnb
ret
dec
add
lea
dec
jb
int3
inc
and
fisubrs
adc
repz
dec
inc
jg
pop
pushf
sti
and
add
bswap
icebp
jmp
shrl
dec
jo
aaa
or
sub
arpl
popf
imul
xchg
scas
push
cmp
iret
sub
gs
mov
adc
and
fidivl
xchg
xor
pop
xchg
or
repz
loop
mov
divb
ja
pusha
push
pop
inc
pop
ficoml
mov
add
lock
xchg
lret
in
frstor
movsl
add
pop
sub
push
mov
add
fucomp
pusha
dec
xchg
mov
imul
mov
jb
ja
and
pop
xchg
and
jns
in
mov
fdivr
clc
clc
lcall
or
jns
push
das
jl
insb
aam
out
std
and
adc
add
loope
xor
and
add
xorl
in
cmp
lret
jg
aad
out
mov
adc
aas
cmc
loopne
fs
mov
sbb
sar
inc
push
lahf
fidivs
or
xchg
push
sub
mov
and
gs
mov
push
pop
add
leave
loope
aaa
mov
jo
lret
push
dec
xchg
xchg
push
fisubrl
lock
push
movsl
xchg
in
push
mov
mov
pop
scas
mov
aam
jno
xor
aam
std
push
test
inc
dec
or
daa
mov
push
adc
cmc
lock
rcrb
fisttps
stos
lock
xlat
lds
jg
stos
jne
sub
lds
jns,pt
mov
mov
dec
or
arpl
jp
mov
ds
push
gs
repz
xchg
out
add
fmuls
js
dec
sub
mov
jle
adc
fsubs
and
ret
xchg
inc
scas
sub
fidivl
cmc
bound
add
jbe
sbb
mov
cwtl
cmp
aam
es
int
lcall
movsl
xchg
and
mov
cld
add
out
sbb
outsl
jle
test
mov
jnp
movsb
adc
imul
orl
jae
and
loopne
inc
dec
xor
and
out
inc
repnz
xor
jbe
lcall
test
xchg
test
loop
out
bound
xor
daa
rorl
addr16
cmp
add
xchg
push
jae
mov
int
mov
cwtl
adc
push
sub
dec
dec
xor
push
out
aaa
mov
es
sub
sub
out
add
mov
out
mov
dec
mov
js
lret
sub
mov
negl
popa
inc
adc
xchg
icebp
jge
lea
adc
out
cmpsb
push
push
fsubrl
imul
test
loop
push
xchg
aaa
inc
mov
stos
xor
sub
lds
lds
xchg
imul
or
imul
add
out
cmc
inc
dec
sbb
and
or
daa
lcall
jb
inc
mov
mov
mov
inc
in
and
stc
dec
andl
sbb
inc
dec
inc
sub
cmpsl
mov
outsl
testb
or
mov
mov
imul
lret
dec
mov
rolb
lock
fs
pop
add
in
adc
add
sbb
out
test
fwait
adc
cmpsl
sub
fadds
sub
jne
xor
hlt
pop
in
cmp
sub
sbb
add
aaa
inc
cmc
xchg
add
sub
pop
push
ljmp
stc
es
xor
ljmp
add
sti
leave
dec
or
ljmp
pop
aad
xor
loop
lret
or
dec
push
and
dec
fcomps
in
jle
sub
gs
out
dec
push
jbe
int
cmp
lahf
je
dec
sbb
lds
idiv
mov
sub
xorb
popf
jge
push
daa
sti
lds
add
add
sahf
dec
nop
jo
popa
leave
dec
adc
mov
loope
fistl
int3
xchg
or
imul
add
dec
jmp
lahf
pop
pop
cs
mov
cmpl
movsb
imul
stc
rcrb
pusha
gs
cmp
push
pop
mov
mov
add
pop
outsb
cmp
mov
xor
push
aad
and
push
pop
test
sbb
imul
push
jno
fistps
xor
std
sbb
jb
fsubrs
sbb
jae
cmp
icebp
push
fcompl
adc
shll
pop
pop
inc
inc
adc
roll
or
push
stc
jmp
mov
fidivrs
xor
sbb
in
sub
pop
fimull
std
js
xchg
mov
jbe
jb
sub
xor
push
push
daa
xlat
xchg
push
mov
or
pop
mov
lock
jne
or
jno
push
popa
mov
add
add
dec
out
mov
dec
adc
jp
popa
lcall
mov
jle
cvtps2pi
sub
mov
mov
sub
xor
xchg
mov
or
pop
adc
sbb
xchg
inc
aam
or
mov
mov
lahf
mov
sub
push
repz
add
dec
loopne
mov
in
into
repnz
jbe
aad
cltd
pop
mov
add
fimull
enter
and
mov
loopne
movsb
imul
roll
lea
in
and
fs
mov
sub
loope
dec
sbb
adc
mov
lods
outsb
aam
test
and
notb
icebp
leave
imul
jne
push
mov
sti
jl
push
pop
pushf
negb
or
nop
sub
int
sbb
into
test
lret
mov
or
popa
stos
rcl
hlt
dec
popa
scas
add
rcrl
xchg
pop
les
and
fidivl
jnp
pop
outsb
cmp
xchg
imul
mov
sub
clc
fwait
repnz
adc
jne
test
xchg
aam
ja
add
js
std
lcall
in
stos
ds
icebp
jbe
jmp
and
mov
test
sub
push
dec
fcoml
in
cmpsb
pop
cmpsl
and
add
add
pop
xchg
rol
mov
adc
insl
add
inc
push
ficoms
loop
pop
int
aas
mov
int
push
mov
push
test
pop
cmp
rorl
xchg
or
pop
shr
ja
lret
psubw
ret
jmp
jmp
hlt
mov
lods
int
shl
mov
bound
add
icebp
add
or
and
xor
inc
ret
sbbl
jns
out
in
subb
mov
adc
movsl
or
imul
pop
cld
insb
dec
ds
add
shr
hlt
scas
test
cltd
push
in
daa
popw
repnz
pop
cmp
leave
subl
add
rcrb
arpl
movsb
mov
add
fisubs
mov
loopne
stos
xchg
xlat
jmp
dec
cmc
fcompl
cltd
popa
arpl
dec
cmpsl
repnz
ret
into
push
mov
pop
scas
push
int3
inc
addl
cwtl
ret
dec
lahf
repnz
cmp
ret
dec
add
add
movsb
push
or
dec
push
loope
call
mov
aad
in
popa
pop
dec
push
fimuls
dec
mov
mov
sub
ret
test
fmull
adc
daa
mov
xlat
pop
fadds
or
jae
ret
push
pusha
push
stc
xchg
popa
aaa
and
scas
xor
cld
out
cwtl
xor
stos
add
pop
push
jp
das
push
inc
mov
xor
xchg
shlb
stos
jne
rorl
inc
sub
push
leave
lods
add
shrl
popf
ficoml
add
push
and
jae
inc
xchg
out
jno
mov
dec
cmp
mov
pusha
repz
xchg
dec
mov
pop
sub
les
push
cmp
sti
fstl
repz
or
in
lock
dec
jb
jne
pop
cmc
mov
les
adc
jmp
mov
out
push
data16
popl
shlb
std
push
add
mov
cwtl
lret
fisubrl
mov
jecxz
daa
mov
adc
push
inc
pusha
mov
adc
mov
test
rorb
push
scas
fisubrs
push
sbb
xor
test
inc
jb
ja
mov
sub
and
mov
inc
cmp
test
sahf
pop
mov
je
stos
and
jge
fscale
xor
cwtl
add
mov
push
shll
movsb
push
sarb
cmp
ss
test
jns
dec
cmp
pop
call
or
cmc
pushf
in
mov
jl
lods
test
lea
cmp
iret
pop
cmpsl
push
cmp
outsb
xchg
push
jnp
aad
or
mov
add
inc
popa
add
add
add
sbb
out
cmp
int
push
dec
aam
pop
push
pop
ror
push
jns
pop
loope
cli
jo
mov
push
fdivrp
jb
push
cmp
sbb
mov
push
ret
jmp
inc
cmp
add
outsl
scas
fwait
cmp
push
push
adc
inc
push
xchg
adc
shrl
xchg
mov
add
xchg
xorb
or
test
loop
sub
in
cmpsb
inc
inc
enter
jg
mov
pop
mov
cmp
lcall
icebp
dec
push
sbb
nop
dec
mov
dec
push
repnz
mov
add
fdivrs
jecxz
pop
cmpsb
loop
aaa
sahf
loopne
pop
pushf
ja
sbb
add
fstpl
push
scas
push
mov
fiadds
std
int
idivl
pop
and
add
ds
dec
rcl
adc
add
mov
in
out
mov
pushf
xchg
pop
pusha
and
jmp
inc
xchg
test
cmp
xchg
add
xlat
inc
or
mov
add
inc
add
int
add
aad
inc
add
int3
inc
add
int
add
inc
add
into
inc
add
int
add
into
inc
add
int
add
into
inc
add
int
add
int
add
inc
add
lret
inc
add
int
add
inc
add
add
ror
inc
add
or
push
mov
add
add
or
push
js
inc
push
or
push
inc
push
pop
inc
add
xor
inc
add
in
push
inc
push
inc
inc
add
ficoml
inc
inc
add
adc
push
xor
push
fcoml
and
push
cmp
push
inc
add
cmp
incl
push
cmp
insb
inc
add
aaa
push
inc
push
pop
inc
add
and
inc
add
push
sbb
cmp
push
pop
push
inc
push
shrl
shll
imul
rcrl
add
rcrl
add
rcll
add
rorl
pop
shl
add
sarl
add
shll
pop
shr
add
sarl
adc
hlt
add
ror
adc
jecxz
push
rol
adc
fildl
out
or
add
fcmovb
popa
jge
mov
xchg
sbb
jbe
xor
ja
mov
stc
fdivrs
gs
or
bound
mov
dec
imul
sbb
roll
roll
jmp
divl
or
cmp
push
jo
mov
cltd
pop
xchg
loope
push
pop
adc
add
inc
subb
lcall
pop
aam
ret
insb
push
xor
inc
loop
mov
dec
push
inc
cmp
or
pop
fs
aaa
and
jl
outsl
add
test
pusha
out
inc
dec
inc
cmp
nop
push
and
xor
out
push
xchg
pusha
pop
sub
push
ret
sub
mov
inc
push
popf
adc
mov
xchg
insb
inc
aaa
fs
xor
mov
push
sti
fisubrl
cmpsb
or
bound
sti
xor
adcl
push
cmp
jmp
aaa
push
bound
cmpsl
jno
pop
pop
cmp
in
mov
subl
in
mov
in
xor
into
dec
ds
and
add
xchg
add
add
push
aam
push
pop
sbb
lods
xchg
lds
jae
outsb
xchg
les
mov
aas
movb
xchg
mov
icebp
xchg
sarl
js
mov
repnz
sbb
push
cs
femms
dec
js
mov
lcall
add
push
sbb
sub
inc
and
jecxz
push
xor
mov
std
outsb
cli
je
arpl
stc
jb
or
inc
stos
mov
xor
xchg
sbb
sub
mov
xlat
push
sti
fsubs
or
data16
sub
ljmp
idivb
dec
xchg
movsl
sbb
and
xorps
cmp
push
xor
add
insb
mov
xchg
push
repnz
inc
sbb
jmp
and
into
fdecstp
ljmp
sbb
std
popa
loopne
sbb
roll
sbb
roll
push
sub
test
ss
adc
pushf
cmc
or
ljmp
pop
lahf
adc
or
add
add
mov
cli
les
cmp
adc
mov
repnz
xchg
out
ljmp
cli
shlb
jl
mov
int3
pushf
sbb
in
std
icebp
jmp
push
jecxz
push
shr
ss
lds
lcall
push
mov
xchg
jp
test
add
push
int3
xchg
lret
icebp
sbb
mov
rcr
lods
fsts
mov
add
adc
subb
dec
ljmp
xor
call
das
not
lods
inc
push
sub
mov
ret
xchg
dec
dec
arpl
push
pop
testb
out
mov
pop
loopne
add
inc
mov
sub
dec
cmc
arpl
dec
xchg
xchg
es
movsb
add
jl
fcmovne
or
mov
or
stc
iret
cmp
push
and
iret
mov
dec
mov
mov
pop
out
lret
add
sub
pop
dec
scas
jno
lahf
cmpsb
inc
push
stos
mov
in
cmp
fidivl
es
jl
out
sub
add
rcll
mov
sbb
lea
adc
leave
adc
cmpsl
lea
mov
dec
xchg
push
lock
lods
mov
pop
enter
mov
loop
xor
inc
cmpsb
lods
push
push
stos
lcall
dec
add
xor
mov
outsl
mov
lcall
add
fisttpl
out
cmc
adc
int3
fadds
inc
outsb
ja
push
movsl
mov
jp
lret
adc
cltd
int3
pop
cmp
ret
cmp
xor
and
das
lds
das
cs
adc
das
ret
and
sub
cmp
sub
jmp
imul
sub
mov
sub
add
add
sub
lahf
stos
dec
sbb
pop
mov
push
add
lahf
int3
mov
cwtl
test
push
pop
les
lahf
data16
xchg
push
scas
lods
xlat
adc
mov
xchg
out
ds
push
push
roll
sarl
add
mov
stc
mov
pusha
sub
jo
imul
std
xor
je
in
add
lods
sub
jb
push
gs
das
add
shrl
add
aaa
pop
movsb
and
inc
pop
fbld
ljmp
je
testb
bound
add
jne
out
lock
sbb
mov
mov
mov
pop
ja
out
pushl
mov
add
jmp
into
inc
mov
ljmp
sbb
fadds
xchg
call
mov
xchg
inc
test
push
xchg
inc
push
dec
dec
outsb
mov
jg
into
rclb
popf
push
out
imul
out
lahf
mov
sub
push
es
dec
and
fwait
jecxz
add
dec
sbb
pop
sbb
adc
cmp
icebp
stc
mov
pop
daa
inc
pop
or
ss
dec
cli
dec
xor
incl
lea
push
mov
xchg
add
cmc
inc
cli
sbb
adc
or
ficoml
loope
inc
ret
add
adc
mov
in
popf
sub
fs
sub
add
in
test
mov
adc
mov
xor
adc
jns
lods
jmp
sbb
sahf
cmp
xchg
inc
inc
mov
cmpxchg
lcall
xchg
fisubrl
ret
sbb
or
dec
scas
pop
mov
sub
sbb
sub
cmp
inc
sahf
add
aas
inc
add
shlb
add
iret
inc
add
aam
push
fisubs
inc
imul
gs
loop
add
fisubs
xor
and
inc
iret
inc
add
loope
jb
lock
gs
aam
gs
inc
add
loopne
jb
lock
gs
and
fildll
arpl
add
loope
dec
add
out
das
imul
and
iret
inc
add
shlb
gs
aaa
dec
add
pop
jb
dec
fs
xor
add
cld
stos
jno
or
mov
or
fs
xlat
aas
dec
push
ljmp
push
aas
inc
push
or
dec
push
loope
arpl
aas
outsl
push
xlat
aas
outsl
add
ret
push
test
add
mov
push
leave
aas
je
test
add
fdivs
cmp
imul
push
push
inc
gs
push
inc
arpl
xchg
push
rcr
add
rol
add
shrb
adc
add
lods
add
rcll
in
add
add
push
roll
push
rcll
add
rcll
push
roll
push
rcrl
shll
divb
mov
xor
shrb
cmp
cmpsl
cmc
or
cwtl
stc
or
movsb
std
hlt
in
dec
sub
in
inc
sub
repnz
fisttps
inc
mov
outsb
add
mov
push
sbb
int
in
pop
lds
sbb
lahf
add
adc
xchg
cmp
dec
out
inc
xor
inc
and
inc
cmp
aas
inc
inc
and
inc
lcall
cmp
inc
and
in
sti
scas
xor
cli
xchg
mov
lret
sbb
repz
jmp
and
inc
ficompl
testb
aam
add
bound
das
add
popa
xchg
mov
outsb
xchg
mov
and
xchg
das
outsl
movsb
mov
ss
mov
sub
push
test
add
mov
ss
xlat
mov
imul
and
mov
mov
add
aaa
mov
sub
fimuls
push
mov
add
and
imul
mov
inc
arpl
lcall
push
pushf
inc
add
jnp
outsl
push
inc
inc
push
push
sub
push
pop
inc
add
jo
push
outsb
jo
das
mov
mov
mov
mov
in
imul
sub
add
out
jae
shrl
inc
aad
jae
lods
mov
or
aas
add
push
inc
add
shrl
push
shrl
pop
rcr
add
push
add
shl
add
sar
add
shl
add
shl
add
rclb
add
xchg
add
rcr
add
rorl
add
jae
push
add
rcrl
add
sarl
rcll
add
rcll
add
roll
add
sar
add
sarl
hlt
rclb
in
insl
add
shll
out
test
loopne
inc
sbb
pop
inc
push
sbb
inc
rcrl
inc
movsl
sbb
roll
imul
mov
mov
cmp
sub
test
cmp
sbb
jnp
xor
mov
sbb
dec
stc
lods
mov
cmp
mov
and
sbb
inc
iret
and
push
mov
mov
push
mov
cmp
add
test
add
mov
outsl
mov
daa
add
and
add
push
shlb
add
shrb
add
add
pop
add
rolb
or
jnp
rcrl
add
jnp
push
popf
jnp
arpl
jnp
stos
xchg
jnp
cmpsl
xchg
jnp
jae
jnp
outsl
cwtl
jnp
add
roll
mov
inc
add
lods
push
movsb
jno
aaa
lret
cltd
ret
movsl
jb
popl
push
clc
cmpsb
jb
pop
add
mov
push
mov
push
fnstsw
jae
aad
xor
sarb
js
fdivrl
and
push
aad
jae
popf
inc
xor
mov
js
mov
inc
add
inc
inc
jae
sub
push
insb
inc
cs
push
inc
insb
push
add
add
call
mov
jg
movsb
inc
add
mov
sbb
push
enter
roll
pop
pop
pop
jmp
sarl
adc
loop
mov
jmp
and
insl
jmp
and
call
jmp
stos
test
int
inc
sub
shr
in
lock
xor
add
rcl
out
lods
and
cmp
push
sar
loopne
xor
loopne
shr
ljmp
sar
mov
icebp
insl
cmp
divb
or
inc
cmp
add
shll
jmp
into
std
adc
ljmp
sbb
daa
push
jle
sub
and
inc
or
sub
jg
inc
stos
test
sub
sbbb
lret
aaa
int3
sbb
push
cmp
testb
popf
inc
cmp
jmp
adc
inc
jecxz
roll
adc
roll
adc
dec
jecxz
fildl
sub
cmp
sub
xor
add
mov
sub
and
adc
out
mov
dec
sbb
daa
sub
and
inc
add
das
add
sbb
xor
xchg
inc
add
aaa
jo
cli
push
inc
mov
and
outsl
pop
stc
xor
mov
add
inc
add
sbb
aaa
aam
add
shrl
add
roll
test
inc
add
daa
add
and
insb
push
idivb
and
push
repnz
and
add
ret
push
mov
push
adc
push
negl
dec
aas
add
ja
repz
loope
dec
xor
push
loopne
fcoml
xchg
inc
ficomps
push
sahf
je
sub
or
mov
pop
sub
pushf
inc
sub
xchg
outsb
cmp
push
inc
mov
jl
pop
scas
push
cltd
pusha
daa
inc
scas
push
add
rcll
pop
dec
adc
rcll
enter
int3
push
cld
push
add
shl
jge
mov
repz
int3
xchg
fiadds
xor
add
rcll
pop
sar
bound
sbb
lods
add
rcl
mov
fsubrs
stos
push
aaa
mov
movsb
shl
sbb
pop
shr
adc
aad
ljmp
jmp
or
jmp
push
lods
add
roll
mov
lahf
fdivrs
inc
ljmp
push
in
loop
pop
or
jae
cmpxchg8b
add
cmp
adc
jge
sbb
pop
jmp
sub
roll
mov
push
repz
push
repnz
das
shll
pop
jmp
add
in
mov
xor
sbb
jmp
jmp
bswap
push
stos
sub
add
pop
mov
sub
pop
test
adc
aam
sbb
push
stc
jp
rcr
fs
in
je
xor
std
jnp
mov
outsl
xor
sub
add
jb
xchg
inc
add
and
add
pop
cld
mov
mov
pop
cmpsl
popa
cmpsl
scas
mov
out
rcrl
add
jne
das
call
jno
inc
cmc
and
mov
cs
cmpsl
and
outsl
cs
jle
pop
and
add
and
movsl
mov
push
sbb
add
fchs
jnp
repz
jno
icebp
mov
pop
cmc
movsb
data16
ret
movnti
push
mov
into
pop
je
xchg
sbb
rorl
pop
aad
repz
inc
or
movsb
push
and
mov
dec
ljmp
push
imul
mov
mov
dec
jmp
sub
lods
add
shrl
or
jae
mov
add
add
movsb
mov
sahf
push
rcrl
jge
cmp
mov
push
call
xchg
dec
lock
sahf
cmpl
lods
jl
xor
jno
lods
add
rorl
int3
insl
sbb
ret
mov
jae
mov
shll
xor
out
sbb
pextrw
inc
sub
hlt
sar
cli
mov
ss
cmp
mov
cmp
inc
mov
cmp
pop
xchg
inc
shr
sbb
mov
mov
inc
mov
into
aas
roll
push
lods
mov
ss
mov
cmp
inc
bound
sti
je
jae
pop
leave
inc
out
rolb
rcll
add
add
popl
les
inc
cmpsl
std
add
mov
push
xchg
adc
int
add
aas
iret
popf
mov
mov
aad
add
fisubl
clc
icebp
push
add
mulb
mov
aam
add
cli
adc
cmp
fld
aam
add
pop
mov
xor
and
aad
add
movsl
sbb
cmpsb
das
pop
sub
mov
sti
ljmp
out
and
add
jnp
rclw
jo
addr16
aas
movsb
xchg
mov
mov
loopne
lret
or
xlat
fadds
mov
jbe
sbb
daa
pop
jno
push
jge
mov
push
mov
popa
sub
aas
add
xchg
loope
ja
sub
push
mov
xchg
lcall
bound
rcrl
sbb
es
and
sahf
stos
add
mov
shll
cmc
lret
and
add
rol
test
je
mov
pop
les
push
roll
add
xchg
cmp
mov
cmp
outsl
add
mov
add
imull
jns
dec
mov
pop
lcall
mov
rcll
add
sar
rorl
pop
icebp
xor
shll
into
pop
adc
lret
ja
mov
mov
inc
ljmpw
push
lret
mov
xchg
sahf
cwtl
cltd
dec
fiadds
arpl
subl
jmp
pushf
inc
shlb
leave
das
xchg
dec
fildll
fnstcw
rolb
lods
pop
out
dec
ret
inc
mov
inc
ret
test
push
fldt
scas
push
rcll
cmpsb
pop
cli
jae
je
insl
sahf
mulb
pop
loop
add
xor
je
aaa
add
lret
ja
inc
add
insb
jecxz
inc
roll
paddb
hlt
sub
out
sub
add
pusha
xor
rolb
push
and
mov
mov
out
outsb
cmp
mov
push
not
inc
add
rolb
add
repnz
cmp
mov
push
push
leave
iret
push
pop
push
into
push
or
into
dec
or
pop
add
xchg
out
push
adc
ja
adc
mov
add
push
cs
mov
or
loope
stc
xlat
add
dec
sbb
xor
sbb
inc
xlat
faddl
push
cmp
sbb
mov
xchg
cmp
pop
cmp
xchg
push
add
jnp
inc
add
adc
lods
scas
xlat
lods
icebp
pop
fldenv
enter
push
fadds
push
pop
stos
inc
add
test
cld
les
lock
test
int3
test
lds
roll
cltd
lret
pop
jnp
leave
jb
add
sarl
ret
bound
stos
outsl
jo
movsb
cmp
xchg
cmp
jle
sbb
add
mov
mov
popa
cmp
push
rcll
pop
dec
insl
fisttps
aas
jbe
mov
insb
jmp
ror
push
cld
lods
add
shrl
subb
lods
add
shl
dec
loop
loop
rolb
inc
jnp
je
jnp
fs
mov
fdivrl
lods
aaa
fsubs
inc
jo
mov
dec
inc
lahf
and
cmpl
stos
mov
pop
mov
mov
sub
rolb
mov
test
inc
or
mov
jmp
lret
or
inc
jmp
gs
enter
inc
jns
pusha
repz
sub
dec
jmp
pusha
mov
popa
add
cmp
lahf
cmp
add
xchg
negb
inc
add
inc
mulb
rorl
inc
xchg
push
add
and
scas
xor
xchg
adc
adc
jbe
inc
dec
test
aaa
int
add
pushf
inc
add
cs
add
faddl
aad
add
fildl
add
aas
adc
add
test
inc
add
dec
dec
push
in
mov
dec
push
mov
frstor
push
dec
sbb
jp
and
add
and
jg
sub
icebp
push
sub
add
stos
addl
xchg
insb
mov
lret
imul
rclb
push
add
cmp
mov
jae
mov
adc
insb
das
inc
scas
dec
adc
push
insl
push
or
mov
add
shrl
jae
ret
push
lods
add
shll
or
test
lahf
lods
add
rcrl
xor
rcrl
repz
mov
out
hlt
shlb
xchg
ss
add
mov
int3
jl
ds
sahf
jbe
lods
add
rcll
sbb
fnstenv
add
shrb
or
sub
mov
push
push
mov
loope
sub
cwtl
mov
addr16
cmp
inc
sahf
dec
xchg
xor
test
mov
add
nop
inc
loopne
repnz
call
inc
or
divb
or
sbb
inc
test
fs
dec
pop
jmp
mov
fcomps
xchg
push
fwait
push
ficompl
inc
std
cmp
ss
sub
jecxz
inc
mov
pop
and
lret
add
lret
ds
iret
mov
push
mov
add
add
mov
cmp
jbe
push
leave
inc
add
ret
xchg
daa
inc
add
dec
pop
ja
inc
add
roll
pop
dec
roll
in
sbb
aas
pop
int
cs
mov
es
jb
inc
roll
mov
add
add
sub
cli
push
sbb
inc
add
mov
add
xor
hlt
jmp
inc
add
push
data16
pop
pop
and
sbb
xchg
jge
sub
fsts
rclb
sub
aam
ljmp
aas
push
mov
push
adc
js
sbb
jnp
fldenv
push
iret
pop
sbb
or
imul
sbbl
dec
mov
jmp
xor
data16
pop
pusha
ror
fidivs
lret
xchg
sub
mov
cmp
pushf
mov
sarl
dec
in
call
mov
sbb
jmp
xor
sub
add
scas
add
sarl
or
and
lods
add
rcr
jle
inc
inc
lods
add
rol
cmp
lods
add
shll
cmpsl
and
cmp
loope
fdivr
lock
repz
addr16
inc
test
sbb
mov
fadd
and
add
cmp
sbb
xchg
lods
or
cmpsl
mov
or
mov
lret
mov
lret
inc
dec
add
cmp
push
and
sub
jp
daa
jmp
cmp
jge
cmp
xor
mov
inc
sub
dec
sub
je
inc
and
rolb
and
fs
ljmp
lcall
stc
lcall
add
xchg
pop
add
mov
in
mov
in
stc
mov
aam
das
mov
insb
cs
xor
mov
fistpll
mov
xchg
ret
cmp
in
es
mov
pusha
ds
cmp
or
inc
roll
je
pusha
push
test
push
shll
jno
icebp
js
lea
jl
xchg
cmp
in
call
push
sti
repnz
sub
xchg
mov
call
push
outsl
mov
pop
test
push
add
xchg
cli
xchg
mov
jle
int
jl
mov
xchg
negl
mov
push
jp
add
fs
dec
ss
push
or
mov
push
pop
sbb
cmp
nop
sbb
lea
pop
jne
jns
cmp
adc
insl
imul
xchg
ja
in
lods
add
loope
sub
fwait
jno
fisubl
adc
cmpb
test
ret
andb
push
shll
xchg
insb
sarl
pop
cs
arpl
ja
pop
and
insl
adc
scas
arpl
jl
and
or
inc
xchg
pop
pusha
cwtl
inc
inc
mov
addr16
sti
lcall
mull
lock
mov
lcall
dec
xchg
mov
push
pusha
cltd
pop
inc
mov
fidivrs
mov
icebp
gs
mov
cli
cmp
dec
mov
aad
xchg
jno
lret
mov
out
lds
cltd
rolb
outsb
adc
ficompl
pop
add
jmp
sbb
std
js
xor
jnp
jae
jns
mov
jno
and
jns
or
cmp
jp
adc
xchg
add
fiaddl
popf
or
jne
mov
xchg
add
test
push
inc
lahf
jle
jl
lods
xor
push
inc
test
and
je
jae
mov
je
push
fmuls
testl
aad
in
lds
mov
add
pushf
push
or
mov
mov
in
mov
sbb
mov
or
mov
int
mov
insl
shl
xor
shll
add
pop
xchg
add
mov
sbb
iret
dec
add
mov
xchg
bound
push
repz
movsl
mov
mov
mov
sbb
mov
jmp
push
cmp
test
pop
sub
push
lahf
movsb
sub
push
roll
mov
sub
icebp
mov
add
das
mov
das
add
inc
stc
cli
mov
xchg
lret
push
hlt
leave
mov
enter
push
ror
mov
enter
rcr
or
mov
or
pop
mov
loope
loopne
sbb
repz
enter
pop
push
ret
lods
add
rorl
fcomps
lret
pop
add
shr
fs
enter
jle
lea
inc
inc
jl
jg
scas
add
inc
int3
ss
inc
mov
test
inc
jmp
popa
lods
push
rorl
mov
shrl
inc
cmc
popa
stos
push
leave
arpl
push
testl
mov
lock
lea
inc
mov
out
dec
add
xor
das
xor
roll
lret
pop
cmp
add
pop
jmp
rcrl
test
mov
xchg
mov
push
pushf
lds
xchg
shlb
lods
pop
cmpsb
hlt
stos
lds
inc
into
inc
add
fadds
aam
xor
inc
add
lcall
add
rclb
repnz
or
rclb
lock
in
int
add
mov
fisttps
popa
xor
jns
das
insl
lods
gs
and
add
sbbl
inc
frstor
push
sub
test
add
mov
mov
in
out
mov
in
mov
dec
sub
mov
add
in
inc
add
ja
nopl
inc
add
xchg
xchg
imul
xchg
jbe
ja
sbb
jno
push
adc
sbb
add
rclb
lock
add
jmp
or
out
push
leave
jecxz
jle
xchg
and
fmulp
sar
cmp
xchg
xchg
sar
dec
bound
xchg
outsb
repnz
add
mov
inc
adc
jns
addr16
into
sahf
xorb
jnp
push
cmp
loopne
pop
sahf
outsl
and
enter
mov
ja
out
pop
pmulhuw
sbb
in
pop
or
jbe
lds
xor
rorl
lea
xchg
inc
xor
iret
sbb
bound
inc
icebp
sbb
and
in
sub
pop
cli
xorl
sbb
add
adc
loopne
aad
mov
xor
inc
add
or
jo
and
sbb
sub
dec
push
je
cmc
add
cmc
pop
repnz
std
fists
das
jmp
jmp
hlt
aam
loop
or
add
call
loopne
stc
fbld
pop
jecxz
add
add
rolb
jmp
push
adc
jge
sub
cwtl
inc
and
inc
push
adc
addl
add
inc
add
xchg
pop
sbb
mov
jno
inc
fidivrs
iretw
dec
jb
out
push
insb
mov
sub
cmp
jno
sbb
inc
or
mov
sbb
cwtl
adc
arpl
mov
dec
dec
test
sbb
mov
jne
shl
cmp
not
inc
add
jg
add
jns
add
cmpsl
dec
or
xorl
or
jle
push
sbb
mov
add
iret
pop
xor
fmuls
sbb
or
jp
cmp
addl
add
fwait
push
sub
mov
pop
xchg
mov
xor
jae
sub
cltd
arpl
cld
jnp
xor
xchg
in
sub
hlt
cld
out
jecxz
les
fidivl
push
imul
xchg
ljmp
push
mov
lock
shl
out
sbb
roll
push
mov
fs
rcrl
mov
push
loop
cmc
into
sti
mov
or
lods
add
shl
add
shll
in
jbe
or
adc
sarl
pop
incl
mov
mov
mov
mov
loope
jbe
xchg
into
mov
icebp
loop
std
inc
mov
leave
clc
xor
call
cmc
inc
cmpsb
add
clc
xor
fcoms
sub
cmpsl
iret
repnz
fcompl
adc
clc
xor
outsl
in
or
jge
and
sbb
clc
xor
inc
decl
cmp
out
sub
xor
roll
ds
xor
dec
decl
cmp
and
add
jmp
add
outsl
xor
imul
xor
push
andl
add
lods
pop
insb
stos
into
inc
add
push
je
mov
add
insl
and
add
js
xor
int3
inc
add
popa
xor
inc
and
inc
add
and
js
outsl
dec
sahf
and
imul
add
mov
popa
xor
outsl
dec
sahf
and
out
imul
push
ss
jae
cltd
xchg
incl
xor
jge
andb
inc
add
inc
lods
imul
dec
cmp
lods
bound
inc
add
ss
jae
push
xchg
pushl
cld
stos
dec
cmp
lods
bound
js
add
mov
imul
lods
inc
fnsave
add
lods
aas
dec
add
out
push
push
in
inc
push
adc
push
or
push
cwtl
inc
add
enter
xchg
rcl
fs
inc
add
sar
mov
adc
loop
imulb
pusha
and
mov
sub
fsubrl
lods
add
rorl
add
rorl
push
dec
pushf
not
loop
mov
xchg
ljmp
arpl
not
loop
push
mov
xor
out
adc
loop
mov
inc
push
aam
pop
test
xchg
and
push
loop
mov
inc
push
hlt
inc
clc
adc
loop
mov
inc
push
aam
inc
inc
mov
mov
jae
roll
adcl
push
jae
roll
jecxz
roll
add
call
mov
jmp
lcall
out
cmp
enter
loope
sarl
jmp
rcll
rorl
push
sbb
cwtl
ja
mov
add
ja
and
shrl
cltd
lea
and
shll
pop
dec
adc
scas
cli
add
shrl
or
adc
add
jnp
mov
xchg
adc
xchg
mov
inc
or
decl
std
add
jl
dec
mov
incl
lock
incl
mov
cmp
push
cltd
inc
int3
aaa
cs
push
jne
mov
add
xor
dec
jge
or
mov
jo
inc
add
nop
mov
jmp
jecxz
pop
loope
mov
add
adc
push
imul
stc
addr16
test
dec
call
mov
or
in
ds
popf
or
aas
les
cmp
inc
idivb
push
cmpsb
pop
or
sbb
or
fwait
cmpsl
fwait
movsl
xor
push
roll
out
xchg
inc
add
push
jne
jg
repz
push
out
out
lret
aas
add
xchg
xchg
dec
repz
pop
add
int3
add
or
push
pop
shlb
or
mov
hlt
stc
shr
enter
std
rcl
add
and
sbb
je
push
shll
enter
stos
nop
lock
and
dec
imul
shlb
jl
ljmp
add
jp
mov
cmpsl
pop
add
shrd
add
dec
and
dec
sub
test
add
cltd
data16
add
cmp
lods
mov
out
repz
pop
dec
adc
fcomps
add
push
hlt
inc
imul
add
push
sub
sbb
jb
sbb
stos
push
rcll
pop
roll
cwtl
pop
shl
iret
inc
jmp
fnstsw
pop
add
xorb
test
mov
sbb
int3
mov
insl
rolb
pop
sbb
add
sbb
sub
out
fcomps
sbb
pop
xchg
sbb
je
push
xchg
push
mov
push
inc
ja
adc
mov
int3
jl
or
push
jg
push
or
loopne
push
mov
mov
mov
orl
inc
add
addr16
or
add
fiaddl
testl
inc
add
xor
inc
add
jnp
pop
test
dec
test
into
inc
add
jl
jle
adc
inc
addr16
jns
nop
jns
push
push
scas
jno
jp
pop
cs
inc
mov
rcrl
pop
cmpl
push
push
push
push
addr16
mov
test
mov
aas
push
cpuid
sbb
push
add
cmc
out
xchg
inc
add
pop
dec
in
push
je
incl
add
es
jne
mov
pushl
xor
clc
sbb
mov
inc
add
out
aas
call
fwait
shr
shl
inc
popa
and
dec
test
add
dec
jns
push
imul
inc
shrb
xor
mov
in
iret
std
mov
mov
std
mov
decl
imul
mov
add
add
les
dec
jb
dec
dec
int
jmp
add
push
and
std
aam
lock
loop
add
ja
dec
mov
mov
test
test
std
aam
out
and
xor
sbb
int
ds
dec
mov
xor
sbb
dec
lea
sbb
std
dec
sub
add
sbb
dec
sub
add
pop
xor
mov
out
push
inc
jmp
sbb
pop
jg
in
mov
aam
rolb
leave
add
lods
jle
enter
lods
hlt
mov
test
movsb
xor
xchg
mov
dec
mov
test
movl
inc
cld
inc
lea
and
xor
mov
and
mov
jge
add
inc
mov
jnp
jle
cld
cmp
mov
int3
jle
hlt
xchg
das
push
ret
adc
mov
ljmp
push
xchg
test
mov
add
xchg
pop
or
imul
add
jl
mov
mov
out
add
inc
inc
push
repz
test
stc
mov
xor
push
repz
mov
dec
cvttps2pi
cmp
jge
addb
bnd
inc
pcmpeqb
in
jne
cmp
test
inc
and
and
push
and
and
incb
add
shlb
lods
add
pop
shl
movsl
fcompl
sbb
std
dec
sub
sub
lods
add
sbb
lods
rorl
lods
sarl
dec
pop
adc
ret
popa
cmc
mov
and
lods
add
dec
adc
inc
lret
or
or
shrl
pop
push
rcll
stos
aam
stc
xchg
add
dec
jb
mov
lods
add
dec
sbb
add
push
fnsave
jae
inc
jmp
out
nop
sbb
mov
fcmove
pushf
sbbl
xchg
mov
xor
sbb
dec
add
mov
and
inc
xor
push
xor
sbb
roll
popl
sbb
or
lods
bswap
rolb
loop
dec
cmp
lret
jmp
bound
xor
cmp
push
pop
fstps
inc
jmp
test
roll
push
aaa
push
in
into
jbe
mov
add
cmpsl
and
jge
or
xor
mov
mov
cmp
aad
xchg
scas
add
xadd
adc
enter
into
pop
or
add
xorl
add
jg
inc
lea
popf
or
cli
add
add
pop
clc
sbb
cmc
aam
inc
cltd
pop
lea
xor
xor
add
mov
push
cli
xor
sti
jecxz
push
ds
pop
js
arpl
pop
dec
mov
inc
add
push
mov
fs
test
idiv
add
test
xor
pop
inc
add
push
int3
add
addl
xchg
and
scas
push
push
push
fwait
in
dec
incl
nop
out
clc
aas
add
iret
cld
aad
movsl
sti
imul
jne
movsl
and
or
imul
xor
sar
fld1
sti
movsb
test
insb
xchg
push
imul
add
push
and
mov
leave
lds
inc
xchg
push
jns
lret
in
lods
mov
sti
mov
pop
xor
adc
sbb
or
idivl
mov
cmp
shrl
push
inc
jmp
cmp
iret
add
movsb
fimuls
push
loopne
xchg
sbb
fmul
movsb
xor
jo
gs
inc
jmp
cltd
and
pop
sbb
push
lahf
mulb
push
jg
or
fucomip
sbb
fld
imull
push
lret
jmp
sbb
roll
mov
pop
sbb
shrb
js
mov
jnp
sbb
and
xchg
push
push
outsl
xor
es
leave
test
adc
call
mov
enter
enter
mov
add
andl
sti
enter
sub
inc
std
mov
adc
inc
xchg
mov
inc
jg
into
inc
jg
xchg
cmp
dec
test
mov
jne
mov
gs
ror
inc
mov
pop
lcall
xchg
jno
leave
push
cmp
add
repnz
or
add
leave
lret
out
call
sub
add
hlt
push
je
das
enter
dec
add
lret
lods
add
outsb
adc
std
sarl
test
out
mov
dec
push
js
fsubs
std
sti
add
iret
mov
shl
into
push
sbb
or
cmp
push
movsl
inc
call
loopne
jno
pop
roll
mov
sub
aam
and
lods
dec
lods
fcoms
cmp
pop
shrl
add
dec
fdivr
stos
or
pop
imul
pop
jmp
inc
mov
mov
mov
mov
ds
sahf
ret
xchg
push
insl
mov
or
mov
push
push
jb
lcall
lods
sbb
pop
stos
sbb
mov
or
or
out
sbb
sbb
add
add
arpl
cltd
xchg
xor
lock
fnstenv
aas
rcrl
pop
adc
into
je
mov
in
jb
mov
out
aam
call
movsb
push
dec
jo
or
testb
adc
jae
leave
lods
inc
add
movsb
xor
cs
je
fisubrs
insb
ja
gs
add
add
add
cli
test
jne
lea
push
pop
cmp
fistpll
mov
xor
jl
adc
inc
cmc
adc
cmp
rolb
rol
repz
test
xchg
addr16
and
mov
xor
mov
inc
movl
or
lock
add
sbb
call
ror
into
add
call
fdivrl
pushl
push
inc
push
jp
xor
cltd
shll
xchg
mov
mulb
popf
sub
repnz
fs
ljmp
js
call
dec
loop
inc
cmp
xchg
out
cmp
sub
insl
fstpl
js
mov
cwtl
push
inc
push
and
add
js
push
mov
into
inc
cli
imul
push
es
xor
andb
sub
aaa
pop
cmp
sbb
ror
push
js
inc
inc
mov
push
cmp
inc
loop
dec
shl
fcomps
sar
jl
lret
fsubr
sar
lods
adc
shl
adc
mov
pop
sbb
les
and
pop
push
test
push
rol
dec
aaa
in
rep
mov
inc
hlt
xchg
jecxz
rol
jae
add
push
insl
mov
push
fcomip
push
imul
into
test
add
push
jmp
testb
test
int
adc
sub
scas
sarl
stc
add
push
cmp
add
jno
out
ror
and
test
rcll
jb
push
test
cwtl
push
mov
iret
ljmp
mov
adc
movsl
push
test
test
stos
stos
adc
push
inc
jmp
push
imul
sbb
roll
mov
les
push
pop
or
roll
add
pop
and
shrl
or
rol
int
and
dec
aas
sbb
aam
mov
shrb
loopne
mov
inc
pop
dec
add
push
cmpl
and
inc
inc
pop
pop
add
sbb
adc
int
test
sub
mov
xabort
fidivrl
add
mov
inc
imul
inc
add
push
and
jne
loop
call
movsl
xor
jbe
sti
out
into
fdivr
test
xchg
cltd
clc
push
jp
rcl
leave
inc
xor
jg
xor
stc
pop
mov
jns
add
test
inc
push
push
outsl
cmp
fsubrp
ss
mov
push
dec
imul
pop
loope
xchg
incl
loope
jl
inc
imul
xchg
ss
test
sbb
popfw
pusha
inc
je
mov
out
test
jns
popf
push
sar
sub
lods
add
movsb
lods
add
js
divb
es
xchg
or
test
push
fcoml
popf
in
lock
insb
inc
add
xchg
ret
movups
cmp
sbb
ja
xchg
pop
lret
mov
mov
pushf
jecxz
add
inc
add
shrl
cmp
add
pop
loopne
pop
fcompl
cmp
inc
jmp
sbb
push
add
and
aam
roll
pop
add
sahf
nop
xor
stos
mov
inc
jmp
sbb
inc
fisubrs
pop
push
sub
sbb
aad
add
jb
push
test
arpl
sub
xchg
leave
mov
dec
fs
fcoms
cmpsb
sbb
inc
jmp
inc
push
sub
loope
xchg
xor
out
and
dec
sbb
rolb
fs
jnp
mov
sub
lea
adc
pop
fwait
xor
add
mov
call
push
inc
xchg
add
test
xor
pushf
adc
push
cmp
inc
xor
mov
les
inc
repnz
xor
das
rolb
xchg
pop
adc
stos
mov
int
mov
inc
dec
or
jbe
mov
or
mov
xchg
push
fwait
mov
in
sbb
mov
aaa
jp
mov
push
les
push
movsl
imul
jno
pushl
pushl
dec
les
push
push
dec
mov
aad
inc
push
popl
sarl
cmp
jns
call
xchg
mov
out
jb
add
fwait
xchg
enter
push
xchg
cmp
in
div
bound
dec
sbbl
decl
cli
int3
fsubs
pop
xchg
in
dec
fsts
sub
pop
shrl
mov
lods
lock
and
cmp
mov
lods
xor
adc
fisttps
shrl
push
shrl
cmpsb
add
add
add
add
mov
stos
and
add
fnsave
sbb
arpl
adc
or
int
jbe
pusha
into
lods
dec
push
div
fs
mov
sahf
jmp
adc
inc
rcrl
iret
es
icebp
dec
jnp
lret
sahf
in
leave
push
imul
lcall
add
add
xor
sub
or
imul
in
fisttpl
xlat
and
push
scas
push
movsl
push
sub
push
cmp
sbb
dec
insl
mov
out
add
push
mov
call
inc
lods
mov
mov
fsubl
dec
mov
dec
call
add
mov
lahf
cmp
in
jbe
mov
add
stos
inc
inc
ja
and
push
aam
clc
inc
xchg
mov
call
fldl
and
fildl
pop
inc
repz
dec
sbb
int3
dec
or
in
push
xchg
mov
seta
je
cmp
cmp
push
jp
add
push
jl
pop
inc
je
pop
cld
and
adc
decb
cmpsb
push
inc
push
adc
mov
sub
mov
sarl
add
sub
push
xchg
push
xchg
movsb
cld
mov
movsl
jp
lcall
test
cmpsb
sub
push
repz
lods
aas
imul
mov
add
fwait
lods
add
int3
les
pop
shll
sbb
pop
xor
gs
ret
out
imul
std
jmp
into
lods
xchg
insl
add
xchg
lahf
test
shrl
loop
fwait
jns
lods
arpl
pushf
xor
int3
mov
sbb
iret
sub
lods
cmpb
add
add
int3
lods
sbb
jl
jecxz
pop
das
stos
enter
pop
inc
mov
pop
mov
int3
or
push
jmp
sbb
inc
jmp
pushf
fistl
test
pop
aaa
add
cmp
jecxz
dec
ja
mov
jmp
pushf
repz
jmp
sahf
adc
cmp
dec
add
pop
pop
mov
jl
cld
mov
jmp
jbe
test
stc
pop
int
add
fucom
daa
add
sub
or
sbb
clc
mov
cmp
ror
push
rcrl
xor
jns
add
insl
aaa
and
and
cmp
je
je
cmp
mov
je
and
mov
pop
les
dec
mov
je
ret
je
push
cli
xchg
addr16
stos
xor
pop
loope
lcall
dec
mov
inc
push
pop
scas
add
mov
adc
lcall
or
xchg
mov
or
mov
out
clc
popf
inc
movsb
push
negb
add
out
pushl
ja
push
inc
in
and
xchg
repnz
lea
mov
inc
mov
mov
or
adc
cmp
push
jae
xchg
and
sbb
xchg
imul
decl
mov
repz
adc
xchg
in
seta
mov
pop
out
shrb
std
mov
sub
xor
pop
js
add
iret
and
or
in
sub
sarl
rcll
jp
insb
add
inc
enter
lods
rorb
mov
push
outsb
mov
adc
xchg
in
aad
jno
shrl
in
add
dec
gs
aam
push
pop
push
aam
les
loope
xchg
mov
inc
add
roll
insb
lods
mov
loop
imul
xchg
add
mov
push
add
das
hlt
jecxz
fs
mov
cmc
in
jno
mov
inc
in
sub
mov
fcmovu
pop
sbb
add
pop
mov
pop
outsb
mov
mov
push
xchg
mov
and
shlb
into
rclb
imul
jno
and
in
push
scas
mov
adc
ljmp
add
or
outsl
sti
pop
add
xorl
or
nop
inc
push
cmp
inc
dec
mov
fisubl
inc
pop
mov
in
neg
xorl
mov
add
stos
push
cmp
xchg
mov
inc
push
stos
mov
sbb
mov
adc
dec
mov
pusha
mov
push
imul
movsl
sub
decb
pop
push
inc
push
aas
lea
out
adc
imul
add
mov
insl
dec
pop
jne
mov
xchg
add
das
dec
sub
stos
aas
test
outsb
cmp
sbb
scas
test
insb
ljmp
in
add
push
enter
jne
and
mov
sbb
cmp
insb
jmp
adc
cmp
rcr
sti
inc
dec
shrl
push
fcomps
pushf
adc
mov
mov
sbb
aad
daa
lahf
cmp
scas
fucomp
mov
mov
into
sub
xchg
shlb
pushf
adc
sub
push
test
adc
push
shrb
or
mov
push
mov
sub
push
int
mov
arpl
push
adc
sub
xchg
dec
dec
imul
mov
bound
push
test
sbb
inc
xchg
pop
jmp
mov
adc
inc
shrl
push
mov
incl
push
pop
call
jno
add
sahf
xchg
xor
mov
cwtl
cmp
mov
mov
jno
push
mov
lock
cmp
orl
sbb
xorl
sti
jle
roll
sahf
test
pop
push
shrb
xor
inc
and
cwtl
add
aam
add
adc
mov
dec
test
jne
inc
push
or
inc
xor
push
add
xchg
mov
mov
inc
push
mov
inc
lea
xor
add
inc
call
push
into
out
aas
add
ror
test
stos
mov
nop
xor
rol
sbb
add
add
or
aaa
fcmovb
pop
dec
stos
mov
add
dec
inc
add
in
je
out
ljmp
les
out
xchg
push
lods
sub
inc
push
xorl
xchg
loope
inc
add
push
xor
pusha
ret
push
aad
xor
orb
push
mov
jmp
add
add
push
dec
add
push
jno
inc
add
add
aas
jne
xchg
fldl
xchg
sub
add
aas
lea
xchg
imul
shrl
pop
pop
adc
repnz
fwait
nop
clc
push
stos
or
jns
lock
call
add
dec
pop
sbb
push
dec
scas
sbb
or
frstor
mov
shrl
xor
sbb
mov
add
inc
clc
and
add
cmp
push
dec
in
scas
roll
sub
jecxz
dec
jmp
out
iret
outsb
add
sti
push
data16
iret
inc
sub
fmull
sbb
sub
mov
mov
mov
stos
sbb
sub
fmull
dec
imul
push
iret
jbe
call
fwait
dec
jmp
push
mov
cmc
dec
mov
jle
ror
loope
push
xor
addr16
push
sbb
into
scas
sbb
xlat
inc
test
dec
popa
inc
jmp
fcomi
dec
adc
adc
inc
call
dec
pop
mov
sbb
mov
enter
mov
lea
adc
roll
or
xor
mov
xor
insl
lret
jne
mov
add
add
add
lds
lcall
movsl
insl
jbe
int
ret
lods
add
add
sbb
in
negb
adc
dec
xchg
cmp
pop
xor
dec
mov
cld
jp
das
data16
add
add
push
mov
inc
mov
enter
call
movsl
push
int3
call
jge
cmp
mov
idiv
sub
push
mov
pop
add
xchg
dec
call
lcall
out
dec
inc
add
xor
adc
scas
ret
sbb
mov
adc
pop
call
mov
outsl
adc
cmp
xor
xchg
jl
jmp
movsl
arpl
aad
inc
add
gs
adc
insb
or
int
vmovlpd
repnz
cmp
pushf
dec
scas
xchg
sbb
mov
mov
add
or
push
pop
call
add
mov
cmp
fcmovnbe
lods
mov
cmpsl
xchg
pop
sub
mov
add
lds
push
mov
push
sar
xor
cmp
mov
aad
dec
and
cmp
xchg
push
pop
push
mov
inc
inc
aas
mov
mov
fcompl
insb
adc
clc
xor
mov
mov
mov
or
xor
fcmovb
xchg
push
mov
iret
lods
cmp
adc
lods
cs
lods
add
rolb
frstor
xchg
dec
out
push
test
sbb
mov
jo
sub
and
inc
cmp
sub
adc
pop
lea
test
push
cmp
call
je
mov
add
dec
cli
faddp
mov
roll
add
and
out
fidivrs
rorb
inc
call
cli
addr16
mov
out
and
add
xor
inc
add
ror
jne
test
stos
push
ss
mov
sub
pusha
dec
out
mov
movb
iret
addb
add
add
inc
rcrb
ja
push
je
cmp
dec
xchg
cmp
fscale
fildl
push
cmp
sub
in
incb
inc
jbe
icebp
out
lea
fwait
jp
movsl
cmc
fstpt
pop
shll
gs
mov
scas
dec
lahf
xchg
jge
imul
mov
outsl
popf
repnz
mov
jne
daa
pop
pop
clc
jle
lds
add
push
pusha
pop
movsb
pushl
shll
inc
mov
xor
mov
sub
lds
pop
xchg
pop
mov
lock
add
push
in
xchg
push
adc
clc
push
shrl
inc
dec
xor
stc
mov
lods
add
xchg
cwtl
fsubs
nop
popa
pop
pop
mov
sub
or
add
xchg
xchg
movsb
rolb
cltd
sbb
rcrl
dec
lods
or
leave
dec
sbb
dec
fisubl
lods
inc
dec
inc
testb
inc
jmp
push
dec
mov
pusha
fdivrs
inc
cli
sub
inc
xlat
adc
ljmp
pop
sbb
push
xchg
sub
mov
jb
fdivs
mov
leave
or
mov
hlt
add
xor
sbb
xor
les
jmp
leave
rolb
lods
pop
xor
pop
sti
inc
add
push
test
cmp
shll
mov
xor
into
scas
and
testl
jae
enter
mov
add
pop
jg
jmp
int
imul
pop
cmp
pop
das
mov
and
mov
push
push
inc
adc
call
inc
pusha
aaa
call
xor
adc
jne
ret
mov
adc
inc
pop
adc
int
add
pop
mov
jl
adc
ret
popf
sub
add
aaa
dec
mov
div
xor
mov
add
test
lret
lcall
popf
jb
call
xchg
mov
testb
repnz
adc
add
cmp
mov
bound
jne
add
pop
lock
insl
loopne
mov
adc
into
pop
mov
cmp
es
push
popf
add
mov
inc
add
inc
mov
add
addb
add
add
popa
sub
inc
xchg
push
lret
mov
dec
mov
mov
jmp
cmp
dec
push
rcll
add
pop
pusha
sbb
ljmp
aas
ljmp
lods
add
jecxz
sbb
and
xchg
sbb
xor
fldl
in
inc
xchg
adc
push
add
ret
mov
cltd
das
sbb
adc
mov
rcll
xor
dec
xchg
popa
das
pop
and
dec
xchg
fstl
fdivl
ja
sub
inc
inc
cmp
push
mov
jmp
rcll
aaa
iret
pop
adc
mov
dec
inc
ficomps
pop
pop
in
repnz
and
cmc
xlat
mov
sbb
fmull
jno
shlb
inc
jb
ror
aad
ljmp
and
mov
stc
xchg
inc
ret
adc
mov
xorl
and
cli
lods
xorl
int3
inc
push
dec
jle
mov
enter
adc
pop
cmp
add
movb
add
cmc
dec
adc
ror
inc
adc
inc
and
mov
lea
xor
push
dec
inc
jecxz
mov
mov
xor
cmp
das
and
stc
shrl
adc
push
cmp
inc
jmp
fsub
add
cmp
fcmovbe
sti
dec
jns
mov
aas
push
jo
add
cmp
lret
and
add
je
ret
adc
leave
sbb
jp
push
push
das
lahf
call
mov
cmp
sahf
mov
incl
in
add
int3
inc
inc
mov
push
dec
imul
sbb
bound
mov
inc
push
mov
xor
int3
inc
add
out
out
sar
add
dec
insl
push
stos
lea
repz
out
addl
aam
or
popa
inc
sbb
add
cmp
sub
aaa
inc
aad
push
push
jno
lods
sub
adc
add
xchg
inc
insb
mov
xchg
test
inc
cli
inc
dec
pop
addl
inc
shll
push
inc
rclb
mov
lahf
add
push
push
movb
in
loopne
and
inc
aaa
cli
inc
cmc
jnp
sbb
push
cmpl
cmp
icebp
dec
mov
push
rolb
xchg
cmpsb
mov
cmpb
adc
inc
jb
dec
mov
and
rolb
sbb
inc
insl
pop
mov
inc
jmp
sbb
pcmpeqd
add
mov
scas
lock
and
and
fucomip
sbb
into
mov
in
int3
iret
inc
push
lahf
in
add
and
pop
xor
inc
or
into
repz
or
into
repz
into
in
xchg
pop
inc
inc
inc
push
test
out
cmp
ret
push
pop
scas
lea
inc
ret
fwait
push
or
add
dec
lock
mov
push
out
in
lea
mul
add
lcall
xor
into
jecxz
cmc
or
push
scas
jecxz
add
cmp
jl
idivb
push
iret
pop
ret
loopne
call
lock
out
stos
mov
leave
pop
dec
dec
je
adc
push
mov
pop
adc
aaa
js
add
scas
arpl
push
xchg
push
xchg
fstp
add
stos
ltr
lods
decl
mov
scas
notb
dec
push
cmp
in
push
bswap
sub
test
std
dec
mov
cmc
xor
jnp
outsl
fmull
rcrl
arpl
inc
ficompl
ja
lods
add
ds
pop
testl
xchg
sbb
add
test
cld
sbb
stc
lods
add
enter
shrl
push
stos
mov
insb
cwtl
shrl
jecxz
fnstsw
push
stos
test
xchg
pop
inc
test
les
fwait
jo
adc
sub
stc
aas
pop
mov
xor
inc
jmp
pushf
rolb
add
aas
ficompl
inc
add
cltd
sbb
mov
xchg
sub
and
movsb
adc
cmp
add
adc
in
xchg
mov
push
fst
inc
jmp
jge
inc
cltd
fcomps
inc
jmp
sub
xchg
mov
stc
pop
adc
je
add
sub
roll
addr16
jmp
mov
int3
xor
push
jp
mov
jae
mov
test
js
loope
or
add
call
adc
add
pop
mov
add
aas
addb
inc
add
arpl
push
cmp
inc
fistpl
pushl
sub
call
ret
xchg
xor
add
mov
add
rolb
xchg
into
stos
fisttpl
inc
andl
insl
add
loope
cld
out
inc
mov
call
xor
roll
fldlg2
inc
int
sub
xchg
in
inc
pop
js
js
sbb
cld
mov
sub
push
pop
xchg
cmpsl
aam
mov
pop
mov
sub
sbb
mov
sti
cmpsl
xor
cmp
mov
sub
add
pop
pop
mov
jae
aaa
adc
popf
add
or
sbb
push
jb
mov
sub
testl
lods
xor
faddl
js
sub
jp
push
in
add
cmp
lods
add
mov
adc
sarl
inc
push
mov
push
dec
in
cwtl
rorl
add
in
lods
add
cmp
in
xchg
dec
dec
call
sbbb
cs
jns
mov
jp
gs
iret
adc
dec
stc
push
push
cmp
nop
inc
cmp
in
pop
xchg
pop
cmp
shrl
xchg
xchg
mov
add
jmp
ja
aad
mov
fwait
push
inc
jmp
sbb
fs
iret
and
cli
ja
rorb
jmp
lds
fsubr
sbb
std
outsl
jmp
shrl
iret
cmpsl
xor
add
cmp
jmp
mov
cmp
bound
ds
pop
cmp
pop
xchg
push
and
mov
sbb
add
inc
add
push
test
in
pusha
xchg
jmp
mov
mov
inc
pop
push
test
mov
inc
or
mov
into
int3
add
add
cmp
inc
cli
fmuls
add
mov
sub
loop
jne
and
mov
jne
inc
and
add
add
int
jmp
xchg
add
or
adc
call
sarb
enter
push
movsl
cmp
in
test
inc
push
push
sti
flds
xchg
and
push
sub
inc
add
rorb
call
xchg
hlt
mov
add
inc
inc
push
sub
add
mov
stos
test
jne
cmp
pop
sub
sbb
lret
sbb
adc
sub
insl
lahf
icebp
mov
sub
clc
fwait
ljmp
push
mov
push
xchg
hlt
mov
sbb
xor
movsb
xchg
mov
xchg
loope
sbb
popf
ljmp
cmp
sarb
cmp
and
loopne
xor
jo
rorb
add
lods
sbb
lods
add
adc
add
shrb
jno
std
inc
sub
push
sarl
std
loopne
bound
shll
push
and
shrl
xorl
inc
cwtl
add
test
enter
inc
jmp
add
xchg
sbb
inc
jmp
lea
push
lea
dec
lea
inc
test
dec
test
xor
lea
jg
xor
mov
dec
sbb
imul
ret
test
dec
fdivl
add
in
inc
push
out
inc
popa
add
pop
and
andb
add
out
into
add
mov
orl
hlt
mov
or
jle
add
ficoml
cli
fmul
mov
adc
mov
sbb
xlat
sbb
ret
rclb
mov
dec
and
jge
mov
add
cmp
mov
outsl
mov
sub
das
adc
insl
leave
inc
mov
xor
add
nop
or
shr
dec
inc
pop
ret
stc
sti
popf
jmp
cmp
pop
rcr
or
ljmp
loopne
xor
ds
push
ret
cld
sbb
addb
pop
cmc
mov
jecxz
add
ljmp
psubsb
push
inc
sub
fcomps
aam
xor
mov
xor
inc
pop
adc
fldl
stos
in
scas
dec
in
mov
sbb
lods
sbbb
push
pop
sub
scas
enter
pop
mov
insl
cmpsl
jmp
movl
lods
xor
add
fdivl
add
sar
push
dec
adc
jle
scas
xlat
sbb
ljmp
xor
dec
add
shrl
lahf
nop
notb
push
push
shrl
and
shrl
test
inc
sbbl
inc
stos
sbb
add
dec
mov
or
cwtl
mov
test
out
xor
adc
mov
inc
jmp
add
inc
stos
sbb
dec
jns
add
inc
jmp
icebp
inc
sub
dec
mov
push
cmc
inc
cmp
inc
push
js
inc
jmp
es
inc
jmp
sbb
xor
arpl
inc
sub
fwait
sub
imul
push
inc
ja
xorl
jmp
arpl
add
inc
add
sar
adc
mov
adc
mov
mov
call
mov
adc
leave
xor
fld
in
lahf
xor
add
adc
jnp
inc
add
dec
jns
mov
mov
add
int
mov
es
push
sub
mov
pop
inc
incl
movsl
cmp
add
push
cmpsl
aas
fisubs
idiv
adc
jne
mov
aas
push
out
scas
js
or
lret
sbb
xor
outsb
lret
test
test
mov
sbb
test
add
scas
ret
call
inc
inc
push
pop
push
mulb
js
inc
add
sub
or
lods
jecxz
shrl
addr16
test
test
scas
add
sahf
push
xor
inc
push
lcall
dec
std
jne
pop
test
and
shlb
and
out
add
ror
cmpsb
gs
add
shlb
and
int
add
shll
and
into
out
add
stc
pop
jle
mov
cwtl
add
cmp
push
shrl
push
inc
aam
outsb
pop
mov
ret
in
subb
inc
jmp
or
mov
insb
sub
jbe
sub
mov
hlt
or
jo
out
xchg
mov
out
adc
es
add
mov
sbb
xchg
and
cmpl
jecxz
xchg
das
mov
negb
cmp
or
xor
insb
ljmp
jmp
arpl
int3
add
pop
pop
or
xchg
inc
call
aad
adc
int3
adc
or
sub
cs
inc
jmp
in
cmp
pop
inc
xchg
stos
xor
rcl
inc
pop
test
fistpll
add
ror
inc
dec
aam
xadd
je
in
inc
mov
shl
adc
add
pop
sub
mov
mov
add
sub
negb
lea
fdivrp
subb
cmp
inc
push
test
mov
loopne
inc
push
fiadds
jecxz
mov
add
add
cmp
lock
or
and
adc
xor
cmpsl
sbb
test
sub
xchg
push
mov
or
jp
cmp
ret
lea
cmp
sub
sub
loopne
sbb
cmp
push
ret
jne
cmp
mov
orb
push
rcr
cli
icebp
shlb
add
xchg
dec
and
pop
xchg
call
push
imul
pop
shll
sub
pop
xor
out
mov
adc
mov
cli
or
mov
sbb
mov
inc
adc
call
pop
cli
lock
icebp
inc
ret
adc
add
shll
add
hlt
mov
sub
adc
xor
data16
lock
pop
or
sub
jmp
and
in
shrb
loopne
loopne
cmpsb
jecxz
sub
pop
push
test
jmp
sbb
lds
fst
out
sbb
mov
bound
sub
sti
scas
add
rclb
imul
and
add
stos
sbb
xchg
add
push
aam
add
inc
pop
sub
add
in
add
aad
fmul
xchg
inc
decl
roll
inc
sub
push
and
add
aam
loopne
xchg
inc
dec
mov
mov
add
jae
add
inc
xchg
mov
ds
xchg
add
iret
xor
cs
popl
int3
fwait
add
iret
das
or
lret
jne
das
add
adc
pop
push
push
xchg
iret
cmp
insl
inc
inc
add
cmp
adc
push
inc
push
xchg
sbb
pop
cmp
and
adc
sub
add
push
inc
push
jp
jnp
idivb
add
lds
addl
fcompl
push
mov
mov
idivb
and
inc
inc
push
cmp
xor
add
adc
aaa
lret
lock
inc
add
aaa
mov
add
insl
dec
call
mov
call
fwait
push
insl
andl
sarl
push
xorb
add
add
and
pop
rcrl
push
pop
rorl
add
push
stos
jg
sub
sti
cmp
mov
in
call
and
inc
push
out
or
sub
cli
adc
xor
movsb
insl
int
add
add
or
fmul
clc
sbb
lods
jmp
es
ss
test
sub
xor
add
out
pop
sarl
mov
mov
cltd
sbb
out
pop
push
mov
add
inc
hlt
mov
sbb
into
inc
jmp
mov
daa
jno
sbb
add
sub
imul
add
fsubrs
insl
pop
xlat
mov
add
inc
das
into
int3
sbb
popa
outsl
sti
sbb
and
mov
shll
mov
mov
shll
mov
push
outsb
xchg
sbb
int
pop
ffreep
mov
mov
cmpsl
cli
cmovae
xor
mov
repz
push
mov
mov
dec
js
orb
adc
pop
rolb
in
idivb
ja
inc
rcll
push
push
scas
test
cmp
fisttpl
sar
cmp
add
cmp
hlt
pop
inc
add
adc
dec
cmpsl
mov
ror
xlat
push
stos
popa
add
mov
jae
shlb
push
cmp
sarl
mov
in
lcall
inc
xor
inc
cmp
rol
popa
add
mov
test
lds
jmp
push
push
scas
pop
cmp
outsb
mov
mov
add
shlb
add
addb
shrl
movsl
xchg
js
inc
and
shll
bound
adc
xor
or
dec
push
jbe
inc
add
push
jne
stc
ret
push
pop
mov
int3
fdivrs
daa
pop
push
shll
sbb
shll
int
jg
xor
rcll
inc
lods
add
push
dec
and
scas
loope
push
int3
jmp
add
push
inc
das
cmp
inc
dec
sbb
mov
cmpsl
sbb
lds
add
push
sarl
cltd
inc
jmp
push
and
adc
inc
jmp
into
push
mov
icebp
movsb
roll
xchg
iret
rcrl
iret
cmp
sub
push
or
mov
mov
lea
and
bnd
push
test
xchg
inc
add
mov
into
adc
test
or
xor
pop
inc
and
cmp
jne
push
or
jecxz
cmp
sbb
xor
inc
mov
xlat
sub
xchg
inc
call
jl
sbb
repz
adc
mov
xor
xchg
fistl
mov
call
inc
in
push
pop
int
in
lret
xchg
inc
incl
lret
inc
mov
cli
je
pop
stos
call
lods
into
jbe
push
fmull
mov
cs
mov
jne
jp
adc
cli
scas
fistps
cmp
sbb
adc
pop
push
sub
ret
repnz
adc
cmp
add
out
sbb
or
add
inc
int3
xor
or
add
mov
pop
cmp
xor
add
inc
inc
mov
add
enter
mov
je
jb
in
shlb
sbb
int
inc
push
mov
add
sub
inc
jbe
pop
dec
imul
lods
cmc
loop
and
sahf
xlat
out
add
and
out
xor
and
mov
jb
add
and
mov
or
hlt
clc
dec
insl
outsb
sbb
or
ja
lods
repnz
sub
rcrb
xchg
repz
adc
pop
mov
and
roll
sbb
push
scas
pop
sub
cmpsb
aaa
sbb
and
pop
xchg
lea
iret
and
xchg
insb
fadd
jecxz
sarb
add
fld
add
cmpsb
popa
dec
je
push
adc
push
sbb
or
inc
xchg
andb
push
stc
xor
dec
pop
ja
cld
es
inc
adc
pop
inc
jmp
sbb
xchg
fs
pop
mov
repnz
test
ljmp
int3
popf
jecxz
mov
adc
inc
aad
shlb
push
repnz
mov
push
cli
dec
ret
call
adc
add
enter
popf
add
aam
mov
jb
sti
aam
call
jl
or
cmc
roll
jl
mov
mov
mov
jne
imul
or
mov
push
mov
mov
push
mov
nop
dec
out
jl
mov
jae
pop
sub
mov
push
ficompl
lea
xchg
push
push
sub
sbb
stos
cmpsl
ljmp
dec
stc
sahf
stc
sub
lret
stc
aaa
out
inc
cmovns
push
mov
add
push
shr
call
inc
mov
call
add
pop
inc
add
cmp
shr
push
sub
lea
pop
mov
shll
xor
into
sub
shrl
pop
inc
push
test
and
xor
cltd
push
lods
fstpt
lods
add
push
loopne
push
adc
add
test
cmp
int
ds
lods
lds
push
add
sahf
sub
add
add
push
repz
movsl
and
xchg
enter
addl
adc
lods
add
shrl
dec
sub
fstpl
roll
jne
inc
stos
sbb
roll
and
fs
inc
rorl
pushf
adc
and
pop
adc
dec
test
jle
inc
jmp
add
aaa
add
push
lods
jno
push
mov
sbbl
rorl
adc
cmc
or
cmp
mov
stc
or
inc
sbb
lods
clc
sbb
jmp
sahf
movsl
fildl
je
mov
add
aaa
sub
add
dec
cmp
cltd
push
push
add
fldl
add
sub
shlb
inc
test
cltd
inc
xor
mov
repz
scas
lock
inc
push
in
pop
adc
shl
inc
sub
inc
dec
dec
mov
je
fsubrs
or
adc
andb
lret
enter
dec
push
sub
icebp
jl
shl
dec
add
push
mov
jae
push
pop
dec
pop
sub
out
jle
add
xor
mov
add
sbb
sub
mov
sbb
xchg
sub
mov
jecxz
leave
pop
xor
xchg
inc
test
lahf
and
inc
lea
push
pop
call
dec
xor
cmp
xor
arpl
adcl
add
sbb
cmp
push
shll
in
add
mov
push
inc
inc
dec
lods
push
xchg
sub
lods
add
push
pop
push
nop
insb
add
push
mov
es
lods
js
dec
sub
mov
xchg
movsb
fnsetpm(287
push
lods
add
lods
sti
sbbl
jp
mov
sbbb
xor
pop
sub
add
push
sbb
mov
and
xor
adc
jg
add
es
xor
jae
sbb
lds
mov
sbb
sbb
jmp
mov
mov
movsb
lds
mov
test
aaa
into
mov
cmp
push
scas
jmp
shrl
adc
sahf
pop
xor
dec
adc
and
andl
and
inc
jmp
sbb
inc
mov
sbb
pop
jmp
push
cmc
push
arpl
aad
add
mov
inc
push
scas
das
lea
subb
pop
rolb
add
sbb
cmpsb
aam
test
test
lea
xor
mov
pop
lret
testl
aam
or
jne
jbe
int
call
mov
int
add
jne
inc
ss
call
rcl
mov
cmc
int3
add
sub
mov
push
xchg
int
push
sub
mulb
fiaddl
push
stos
sub
insl
adc
test
add
push
mov
addr16
inc
add
xor
cld
out
dec
inc
add
int
add
sbb
cmp
add
adc
clc
push
add
sub
add
push
pop
imul
mov
cmpb
jmp
call
call
xchg
outsl
adc
sub
mov
xor
add
lcall
jae
inc
xor
lods
add
sub
or
rcll
psubd
in
add
loop
pop
loop
das
outsl
xchg
add
roll
shrl
inc
jne
inc
push
test
and
call
push
shrl
push
adc
insb
add
roll
nop
lods
call
pop
cmp
sub
roll
sbb
sbb
bound
dec
lcall
jmp
and
cmpl
pop
shrb
push
mov
sbb
sub
pop
push
pop
ja
fstps
push
xchg
inc
negb
inc
add
lds
mov
cmpsl
sbb
inc
fistps
jno
add
shrb
loopne
pop
popf
adcl
push
insl
out
jno
adc
cltd
dec
and
enter
inc
add
adc
push
sub
je
roll
inc
shll
cmp
jae
aaa
rorl
out
inc
sub
inc
je
stc
xor
not
fs
mov
add
sbb
sbbl
add
add
aam
ss
movsb
inc
idivb
jno
dec
sub
adc
cmp
shl
adc
mov
ret
sti
getsec
sub
aam
outsl
mov
inc
add
cmpsl
jb
sub
test
jne
inc
xchg
add
sub
dec
cli
pop
pop
push
inc
xchg
pushl
movsl
jp
push
pop
lahf
sbb
inc
mov
jle
xor
fidivs
push
mov
cmp
rorl
jb
sbb
adc
call
popw
xor
xchg
jno
cmp
sub
or
jb
rolb
or
ret
jbe
mov
shll
lods
dec
movsl
and
loopne
push
rorl
shrl
cs
outsb
add
or
in
loop
add
add
mov
sbb
inc
or
lea
idivb
add
outsl
and
pop
or
sub
rcll
xchg
jne
pop
or
mov
test
add
cmp
cltd
adc
ret
and
add
roll
add
subb
or
jbe
or
lea
repnz
inc
adc
add
ror
and
sub
ljmp
add
xchg
fstpl
jbe
roll
pop
adc
add
jns
dec
loopne
in
dec
out
mov
sbb
adc
cmp
sbb
jmp
mov
rcll
dec
pop
mov
lock
inc
adc
sub
xchg
ret
push
cs
in
lea
jbe
pop
and
aas
xor
pop
call
mov
sub
adc
into
clc
mov
aaa
or
repz
in
notb
add
mov
and
repz
and
aad
push
sbb
add
push
aas
and
mov
add
aam
push
jl
xor
pop
mov
mov
mov
push
test
clc
roll
mov
pop
sbb
jge
and
leave
jle
push
cli
mov
push
sub
leave
xor
sub
add
ss
or
add
mov
outsl
decl
sahf
scas
aas
push
adc
push
test
and
push
push
rolb
inc
cli
movsl
fwait
mov
arpl
imull
push
shrl
adc
test
inc
push
push
mov
imull
or
push
shll
inc
in
add
lods
imul
insb
add
push
mov
pop
shrl
add
rolb
mov
cmpsb
push
loope
xchg
mov
push
adc
xchg
sub
mov
ljmp
das
dec
inc
mov
imul
push
xchg
jnp
icebp
shrb
add
shrl
dec
add
fsubrl
push
inc
jp
dec
dec
dec
pop
rcll
out
push
and
add
add
jo
mov
mov
mov
shrl
jb
pushf
mov
and
xor
call
pop
int
or
aaa
lods
out
xchg
push
jo
into
popf
cmp
inc
jmp
arpl
adc
cmc
push
out
sbb
or
xor
add
sarb
add
push
mov
les
mov
mov
add
ret
mov
adc
es
sub
roll
subb
and
cs
and
pusha
and
aam
add
pop
sub
roll
jnp
dec
or
pop
adc
inc
cmp
mov
bound
and
sarb
rcl
inc
add
push
dec
inc
push
lods
cmp
testb
mov
inc
mov
mov
sub
mov
adc
lcall
ljmp
xchg
jbe
xor
lret
push
jge
push
mov
imul
out
push
test
and
fucompp
daa
aas
int
mov
fwait
arpl
inc
sub
inc
push
fwait
mov
mov
ficomps
push
imul
movsl
push
repnz
pop
mov
ss
xchg
mov
outsb
ja
ficoms
or
incb
fnsave
cmc
mov
sub
inc
call
add
icebp
mov
test
jbe
jle
push
push
pop
adc
xchg
inc
push
stc
pop
push
push
rcrl
loopne
add
test
push
movsb
and
xor
mov
clc
push
inc
sub
push
fucomp
sbb
or
lods
cmc
sarl
jmp
pop
fildl
pop
rcll
out
mov
push
sub
push
test
mov
cmp
push
jle
inc
lahf
leave
push
and
mov
mov
je
xor
arpl
imul
inc
into
subl
or
xor
or
inc
insl
jge
inc
push
or
pushl
testb
add
sub
aaa
adc
shll
je
ja
jmp
rcll
enter
or
cli
push
mov
aad
push
cld
clc
ret
in
xchg
roll
and
into
lock
jle
xor
int3
inc
adcl
pop
gs
push
mov
cld
mov
push
adc
shr
and
dec
push
xor
aad
rcrb
adc
insl
stos
cld
add
mov
push
jne
jae
add
dec
test
in
outsb
shlb
push
insl
stos
cld
mov
jbe
mov
jge
push
jbe
jae
not
inc
cs
daa
sbbb
inc
mull
inc
sbb
stos
add
stc
jbe
idiv
inc
add
adc
add
ss
stc
shl
fimuls
inc
and
add
loop
rcrl
push
shlb
std
xor
rcrl
hlt
in
pop
push
shr
add
fdivs
sbb
add
mov
in
add
adc
and
pop
fidivl
aad
dec
mov
lods
jg
jl
xchg
push
cld
scas
adc
add
jne
pop
aam
cs
hlt
sub
fldcw
loope
inc
push
in
xchg
cld
popf
mov
push
dec
in
push
mov
jle
fdivs
or
push
xor
xchg
jb
out
mov
or
test
push
loop
inc
jmp
shr
movsl
xchg
sbb
mov
pushf
add
mov
out
jge
sahf
lcall
out
pop
pushf
aaa
adcb
arpl
mov
and
sub
pop
jno
insb
movb
pop
jno
and
shl
rcrb
add
sub
push
mov
into
adc
int3
jbe
or
lret
lea
ljmp
je
sarb
not
into
clc
dec
sub
inc
xor
push
or
xchg
inc
test
xchg
imul
into
enter
adc
int
call
hlt
adc
mov
push
cmp
adc
adc
inc
add
xlat
inc
add
mov
cmpsl
inc
roll
push
in
ljmp
dec
mov
add
scas
jl
push
clc
jae
cmp
imul
adc
lcall
push
cli
int
outsb
xchg
mov
mov
les
loope
jne
stos
sub
inc
add
outsl
push
cld
mov
push
je
sti
call
sbb
push
and
out
adc
jns
enter
add
add
sbb
cmpsb
pop
inc
add
adc
stos
push
shrl
dec
add
adc
aad
pop
jge
sbb
in
mov
inc
push
stc
repnz
rcrl
lock
lea
icebp
add
or
jge
jb
fsubrl
imul
push
fcoms
loopne
pop
ja
sub
jns
adcb
leave
das
fildl
xor
std
movsb
xchg
mov
sarl
xchg
int3
pop
lock
rcll
mov
ljmp
push
jb
mov
scas
es
and
cltd
push
jl
xchg
push
sub
movsb
push
pop
push
adc
push
test
push
jecxz
jmp
jne
inc
jmp
test
inc
stos
sbb
sbb
push
mov
push
repz
fs
mov
push
es
roll
fidivrl
bound
loope
sub
stc
scas
negb
nop
inc
bound
add
outsl
negb
adc
inc
sub
orl
mov
add
sbb
sbb
in
inc
nop
inc
lea
and
add
add
jne
rclb
push
int
rcl
jecxz
add
inc
push
jp
push
or
data16
add
add
jne
mov
mov
dec
ror
cmp
leave
push
dec
xor
xchg
jns
sbb
and
out
cmp
xor
xchg
mov
and
addr16
aam
movsl
mov
gs
insb
jne
dec
or
adc
pop
iret
xchg
add
jmp
xchg
in
cmpsb
int3
xchg
sti
shl
adc
nop
add
xchg
xchg
fbld
lock
ret
movsb
jne
pop
stos
int3
cmp
subb
loopne
xchg
pop
sbb
inc
sub
ljmp
cmpl
movsl
sub
cld
mov
mov
add
gs
xor
or
loop
rcrb
jmp
arpl
es
imul
pop
cmp
pusha
xor
dec
shlb
or
inc
repz
push
jne
jg
or
aam
dec
adc
jle
dec
dec
add
inc
inc
sti
add
jbe
shll
add
sub
dec
cmpsl
pop
pop
ja
sar
imul
pop
inc
inc
loope
xchg
or
add
pop
iret
mov
outsl
inc
js
mov
xchg
xchg
in
stos
sub
movsb
int
dec
and
pop
scas
stos
cmp
push
in
pop
pushf
inc
leave
xchg
in
sbb
stos
les
aaa
cld
or
add
imul
movsl
inc
sahf
mov
add
fcmovbe
mov
push
push
test
inc
xor
xchg
jae
fcom
stos
cmp
pushf
sbb
out
cmp
pop
mov
jo
and
out
testb
cmpsl
dec
push
hlt
movsl
lea
movsl
mov
xchg
rcrl
rcll
push
jae
lret
cmpsl
cli
pop
aaa
fisubrl
xchg
testl
rclb
or
or
orl
jg
pop
mov
xchg
mov
pop
clc
push
or
popf
jmp
push
xchg
mov
cmpsl
or
cmp
jl
popa
push
pop
inc
push
mov
sbb
jp
lds
test
push
xor
jecxz
call
imul
pop
incl
xchg
or
jmp
jmp
les
dec
fwait
cmp
cli
cmpsl
mov
loope
push
test
inc
add
ljmp
push
add
sbb
lods
out
stc
mov
cmpsl
cld
jmp
xor
popa
add
pushf
pop
ljmp
pop
jmp
repz
cld
faddl
add
mov
lods
pop
mov
lods
add
cld
jl
cwtl
or
pop
pop
shrl
in
dec
xor
push
push
cmc
into
stos
mov
fildl
enter
dec
jp
sbb
push
in
mov
enter
rolb
push
mov
lock
stc
shll
add
push
addr16
jecxz
inc
cmpsb
loope
rcll
push
cli
enter
test
sbb
inc
mov
push
cli
enter
pushf
jecxz
shrl
repz
cli
enter
xor
shrl
in
rcll
push
cli
enter
hlt
repz
roll
test
cli
adc
add
mov
inc
jmp
mov
mov
mov
aad
mov
lds
add
rolb
mov
enter
mov
fsub
aam
mov
adc
orb
inc
xchg
xchg
pop
clc
es
movsb
pop
or
mov
incl
cmpsl
push
mov
and
enter
mov
push
cwtl
inc
push
cwtl
add
adc
rol
int
lea
mov
add
mov
cmp
jg
dec
fldenv
adc
sarl
test
dec
lcall
mov
fisttps
or
call
jo
xor
add
add
mov
push
repnz
rolb
insb
call
mov
xchg
dec
fwait
mov
dec
xchg
lods
dec
les
inc
ss
add
mov
pop
es
mov
sub
aas
mov
dec
ret
xchg
repz
ljmp
or
sub
enter
clc
lods
push
sarb
cmp
rcll
inc
lret
inc
add
inc
dec
adc
insl
sti
mov
dec
call
jg
shrl
jo
jnp
stc
loopne
rorb
jg
jge
jns
sub
pop
jns
push
out
cmp
push
pop
push
shrl
ret
lods
mov
ror
jmp
inc
insl
fldl
enter
mov
add
sub
idivb
lahf
sbb
test
mov
adc
cmp
jmp
dec
rclb
aam
adc
cld
mov
negb
idivb
xor
sbb
ficomps
divb
shll
fcmovnu
rol
sub
jmp
mov
add
add
add
xchg
push
and
push
jl
xchg
inc
test
je
stc
ror
imul
jmp
or
push
mov
mov
lea
mov
call
cmp
mov
pop
mov
mov
stos
jne
adcl
adc
add
ror
mov
outsl
jbe
call
xchg
inc
mov
iret
enter
cmp
push
adc
sbb
outsb
ja
sbbb
aas
inc
push
ljmp
icebp
lahf
hlt
add
call
mov
fbld
push
cmp
incl
inc
add
xor
sbb
test
jmp
add
add
sub
push
clc
scas
aas
push
xchg
cmp
mov
push
jo
dec
xchg
les
mov
jo,pt
push
rcrb
inc
movsb
incl
push
inc
sub
dec
sbb
jns
sub
movl
cli
and
popa
dec
bound
dec
mov
loopne
test
shrl
add
test
imul
stos
dec
inc
shlb
test
add
rolb
lods
xor
jl
fmuls
out
and
fcoms
jl
add
xor
sbb
sbb
inc
clc
jo
int
fidivrs
xor
insl
cmpsl
adc
cld
stos
jle
add
fiaddl
test
push
push
mov
pop
fdivrl
pop
pop
mov
xchg
mov
cmpsl
in
movsl
adc
xchg
cmp
mov
adc
jbe
lcall
mov
jae
sub
push
lea
xchg
mov
out
jo
sarb
arpl
lret
arpl
add
movsl
sub
mov
sbb
add
sbb
lret
mov
js
addr16
add
sahf
jp
outsb
xchg
or
xor
mov
xchg
mov
xchg
inc
xor
xchg
jbe
mov
mov
in
or
jns
jne
mov
add
lcall
je
xchg
jl
inc
in
hlt
icebp
shl
sbb
mov
cmp
imul
push
out
push
pop
incb
pop
adc
aam
pop
clc
jne
insl
mov
pop
and
push
cs
test
push
dec
imul
and
xchg
fistpl
push
repnz
cmp
and
sub
add
inc
repnz
ret
dec
in
dec
mov
in
mov
mov
aam
ficomps
xor
scas
jae
mov
mov
mov
jle
mov
ret
cmc
stc
add
mov
cli
inc
sub
xchg
jle
xor
fwait
loop
push
xor
or
cmpsl
repz
sahf
outsl
test
stc
add
dec
mov
data16
into
and
pop
lods
jmp
cltd
mov
fiaddl
sub
adc
sub
sar
push
filds
cli
shll
mov
jmp
inc
stc
jmp
clc
inc
add
lahf
out
cmp
mov
mov
push
dec
lea
test
mov
gs
imul
gs
bound
out
scas
outsb
in
and
push
outsl
cltd
imul
sbb
add
cli
jge
pop
add
rcll
cmp
xor
xlat
mov
lahf
push
dec
rcll
add
mov
or
xor
mov
xchg
dec
movsb
int3
and
adc
push
add
mov
and
mov
ja
stos
scas
gs
inc
sbb
xor
xor
or
dec
push
xchg
dec
cmpsb
xchg
sahf
xor
mov
mov
incb
xor
pop
dec
ss
lcall
sbb
pop
mov
test
aad
add
adc
pop
fiadds
int
sbb
outsl
call
push
mov
ss
xor
jmp
dec
add
lret
test
repnz
xor
add
clc
inc
jmp
inc
lcall
js
inc
push
push
popf
cmp
jecxz
pop
pop
ret
adc
sti
mov
add
clc
adc
sbb
inc
push
push
xchg
push
lods
cmp
mov
clc
push
aaa
call
in
push
mov
call
in
stos
mov
jp
mov
adcb
hlt
xchg
mov
stc
jmp
mov
cmp
push
xor
int3
adc
shlb
add
pop
push
mov
add
push
sub
stc
arpl
in
xor
add
orb
dec
xlat
out
add
add
cmp
cmpsl
inc
negl
add
pop
pop
add
cmpsl
mov
sub
mov
dec
adc
clc
popf
inc
jmp
daa
popl
imul
movb
stos
in
add
rolb
pop
mov
jno
test
sbb
test
xchg
ljmp
outsb
test
inc
je
dec
sbb
fisttpll
jmp
sbb
pop
imul
sub
lea
enter
iret
rol
mov
hlt
xchg
inc
call
inc
add
xchg
mov
add
add
or
jnp
push
xor
popl
xchg
mov
jne
cmp
dec
inc
iret
scas
add
fstpt
jb
pop
cmp
scas
testl
iret
add
into
es
cmp
push
or
add
ret
push
clc
inc
test
and
dec
mov
and
ret
lret
inc
inc
loopne
mov
and
and
clc
push
jne
ds
ljmp
dec
pop
inc
push
sti
push
rorb
mov
jae
mov
adc
rorb
aas
ret
lret
inc
add
sarl
test
or
or
notl
pop
pop
add
repz
test
in
inc
ret
popf
aaa
inc
push
add
mov
push
ljmp
pushf
insb
dec
or
gs
mov
push
ljmp
xor
test
xchg
fs
dec
jno
jns
pop
jmp
pop
mov
clc
loop
push
jmp
jnp
int
cwtl
mov
mov
mov
xchg
pop
fsubrl
add
mov
movsl
call
push
or
pop
mov
stc
pop
orb
stc
inc
cmpsl
movsl
out
stos
adc
adc
icebp
fdivl
cld
cwtl
loope
pop
nop
faddl
adc
add
icebp
lods
inc
mov
notl
inc
jmp
movups
mov
mov
jmp
mov
inc
jmp
in
jg
jae
adc
push
fldcw
and
inc
sbb
mov
push
mov
cmp
cwtl
loopne
adc
dec
icebp
push
mov
cmp
pushl
rol
flds
inc
cld
daa
xor
xor
sbb
or
scas
negb
int3
enter
mov
add
xchg
mov
push
add
rorl
pop
cmp
add
pop
das
and
dec
scas
lods
inc
roll
cli
sbb
decl
push
inc
aaa
dec
mov
cli
out
inc
daa
ss
subl
or
sarb
rol
xor
add
clc
mov
addr16
jle
lcall
xchg
push
mov
push
add
push
mov
mov
add
xchg
push
dec
mov
and
es
push
in
jae
inc
mov
inc
cmp
adc
and
jnp
sbb
add
xchg
adc
pop
pop
loopne
push
movsl
adc
mov
adc
inc
pop
push
movsl
popf
dec
call
xchg
inc
enter
aas
call
pop
out
stos
mov
call
add
add
imul
pop
cmp
mov
stc
mov
rcll
rcrb
pop
mov
xlat
lds
shrl
stos
sbb
lods
add
cmp
push
out
fists
out
ret
push
xchg
lods
test
lods
movsb
add
cmc
aas
add
and
or
push
mov
push
movsl
hlt
pop
mov
dec
jle
andl
ffree
cmpsb
dec
jmp
push
aad
jmp
lret
push
xchg
xchg
fadd
jbe
scas
add
adc
out
pop
xchg
hlt
rcrb
into
pushf
and
and
jecxz
ss
push
scas
jmp
and
hlt
test
add
movsb
loope
mov
pop
mov
add
stos
int3
inc
jmp
push
push
add
pop
pop
add
mov
in
push
inc
rol
sti
aaa
shl
add
in
jne
aaa
aad
mov
stc
mov
call
aad
add
adcb
rclb
inc
notl
js
pop
push
cld
or
into
push
and
and
dec
iret
enter
pop
add
adc
cld
mov
aam
adc
ja
into
clc
fidivrl
mov
je
inc
fdiv
sbb
cs
push
outsl
stc
mov
mov
cli
add
pop
call
mov
cmpb
lds
or
dec
inc
and
adc
ss
add
mov
add
in
aas
mov
decb
add
pop
cmp
fucomip
add
ret
vmovss
repnz
imul
call
dec
dec
inc
sar
jo
cmpsl
sub
pop
ja
repz
out
negl
clc
inc
add
push
push
inc
shrl
mov
loop
lret
mov
dec
or
sbb
adc
cs
push
pop
loopne
sbb
loop
xchg
pop
cmp
hlt
loope
jle
pop
mov
loope
mov
outsb
stc
mov
add
sar
dec
xchg
fbld
mov
dec
je
jmp
push
mov
lret
and
lods
mov
mov
xchg
leave
lods
add
push
loope
sbb
push
hlt
fs
jle
pop
inc
fisubs
lret
mov
add
ss
stos
xlat
mov
mov
sti
pop
sbbb
pop
int
push
fbstp
in
sahf
inc
jmp
mov
push
inc
jmp
adc
add
popa
lock
shlb
scas
rcrl
or
sbb
xchg
inc
cltd
test
test
jns
adc
neg
mov
add
in
adc
rolb
pop
add
into
fdivr
sbb
mov
push
aaa
aam
fmul
shrl
mov
pop
pop
test
test
cmpsl
push
mov
xchg
movl
jmp
pushf
aad
rolb
ret
into
iret
lahf
jbe
add
dec
sti
jle
jns
leave
and
rol
rol
int
and
or
lods
cmpsl
dec
orb
add
jns
add
daa
mov
sub
test
jle
mov
add
jb
sahf
jecxz
jae
push
pop
lret
stc
daa
jge
dec
out
loop
xor
mov
jo
xlat
jmp
xor
lds
lock
pop
frstor
out
out
inc
add
fwait
sub
push
sbb
xor
jne
jge
idivl
adc
jmp
stc
adc
mov
add
and
or
sub
pop
dec
mov
shl
movups
xchg
cmp
and
in
lret
add
test
aaa
pop
out
xor
adc
and
xorb
mov
xorl
movsl
in
pop
push
jo
fnstsw
mov
and
icebp
push
xlat
fidivs
ljmp
fiaddl
adc
dec
repz
push
pop
dec
xor
leave
pop
dec
fwait
jle
add
enter
clc
scas
add
sbb
lret
aam
in
popf
adc
add
pop
inc
add
push
xchg
xor
sub
add
mov
stos
mov
fsubr
xchg
scas
jg
xlat
jl
push
imul
adcb
leave
cwtl
inc
jmp
fisttpll
fldenv
ljmp
into
cmpsb
lcall
data16
push
ljmp
scas
and
pop
add
movups
add
test
or
sub
push
inc
mov
stc
pop
cltd
inc
inc
in
fdivrl
stc
xchg
cltd
adc
iret
mov
xor
cmovne
mov
dec
ja
pop
mov
call
lahf
xchg
inc
ja
push
test
pop
push
mov
sarl
inc
add
scas
iret
add
jl
in
mov
enter
dec
movsb
dec
rcrb
jo
jg
mov
jb
movsb
xor
xchg
push
lcall
es
mull
sbbb
mov
shrl
adc
pop
cmpsb
fldl
xchg
adc
mov
push
popf
or
sbb
push
xchg
ret
les
add
xor
int
or
jo
rol
std
sbb
mov
call
dec
mov
add
cmpsl
xor
push
insb
mov
jo
insb
mov
fxch
adc
jmp
les
mov
int
jl
mov
sub
dec
mov
loop
jns
push
ficoms
xchg
loope
mov
and
pop
cli
enter
fnsave
test
pop
mov
popa
call
movsb
jbe
cmp
mov
cmp
loopne
jnp
jbe
in
sbb
xchg
jae
movsb
pop
cmp
push
iret
int
adc
dec
fdivp
adc
add
pop
mov
xchg
scas
enter
inc
xchg
lretw
push
jecxz
jne
or
lods
sbb
test
inc
xlat
mov
mov
loopne
andb
xchg
add
pop
dec
dec
mov
aam
stos
push
jg
push
lock
xor
loopne
leave
inc
add
cmp
imul
xor
xor
les
inc
add
push
scas
cmovb
inc
ja
iret
orl
iret
scas
xchg
movhps
sbb
fildl
add
orl
test
jno
or
enter
inc
aam
jmp
pop
or
enter
loopne
inc
test
jne
and
pop
inc
mov
dec
addl
add
push
sub
sub
xor
call
or
jmp
jge
cmpl
inc
push
xchg
sbb
push
dec
jae
addb
cmp
mov
inc
add
jmp
inc
jb
inc
mov
rol
push
jmp
dec
mov
mov
je
cmp
fldcw
fidivs
out
add
lods
mov
das
gs
outsb
mov
shl
push
xor
jge
aad
add
adc
orb
xchg
test
loope
sarl
mov
add
negl
pop
cwtl
jl
dec
fsubs
sub
rolb
xchg
cltd
inc
cmp
dec
test
add
aam
inc
push
xor
mov
fcmovbe
leave
dec
aad
out
divl
dec
pusha
test
xlat
test
mov
dec
mov
flds
dec
dec
mov
call
cmc
and
dec
adc
fst
mov
push
mov
jecxz
fmuls
push
mov
sub
dec
add
dec
add
aad
jmp
in
and
inc
push
scas
xor
loop
int
sub
movb
popa
push
push
enter
fmuls
xor
jmp
divl
shll
shrb
pop
je
inc
cmp
mov
inc
mov
mov
add
rclb
roll
dec
xor
mov
rcr
jne
iret
sbb
inc
mov
scas
add
inc
xor
into
push
cld
cmpl
inc
aas
pop
pmuludq
cmovne
cs
decl
push
sbb
int
das
push
js
loope
mov
pop
push
pushf
push
leave
fstpl
push
jo
call
add
dec
sbb
je
jo
clc
aaa
mov
push
mov
outsl
jnp
movsl
lods
mov
xor
or
lods
loop
xchg
cmp
adc
addr16
pop
sub
pop
andl
out
or
cmc
fldt
add
insl
xchg
mov
call
xchg
sub
add
jp
sbb
dec
shll
lret
jl
ss
sbb
mov
add
xchg
int3
adc
mov
push
loop
imul
orb
jbe
push
aam
out
flds
arpl
sub
push
testb
push
xchg
int
cmp
adc
sbb
inc
call
hlt
lahf
je
movsl
cwtl
inc
arpl
jne
ret
jns
mov
scas
js
mov
add
test
popf
ret
mov
rcr
cld
sbb
sti
push
pop
inc
rorl
mov
inc
shrl
loope
push
and
pop
jge
lds
cmp
nop
shll
hlt
hlt
push
inc
xor
xchg
xor
jnp
sbb
dec
mov
jmp
subl
inc
inc
jmp
inc
sarb
sbb
jne
push
shlb
sbb
lahf
mov
out
mov
xchg
mov
enter
xor
push
fdivs
mov
add
mov
sub
mov
sbbl
popa
inc
sub
xchg
jne
dec
xchg
je
pop
popf
je
test
test
dec
mov
cld
sbb
inc
cld
xchg
ds
add
mov
mov
xchg
sbb
leave
dec
mov
adc
ret
adc
jg
mov
or
int3
jle
add
loopne
testb
roll
push
mov
lret
mov
leave
pop
adc
stos
mov
cli
sub
push
mov
xor
out
je
xor
mov
sbb
sbb
xor
sti
lret
jg
shll
testl
mov
xor
add
cli
jae
jmp
test
mov
shrl
lock
cmp
inc
and
mov
mov
outsl
fildll
les
in
in
mov
pop
cs
loopne
lods
sbb
negl
sub
daa
or
cwtl
seta
js
dec
xchg
in
lods
and
mov
insl
jecxz
les
ficomps
or
push
repz
into
aaa
xchg
repz
rcrl
call
add
daa
mov
aam
int3
test
outsb
cmp
cwtl
out
pop
pop
imul
and
add
add
hlt
cwtl
xor
and
in
fcmovnu
shlb
xor
pop
fistpll
mov
push
fildll
pop
adc
cltd
and
push
sbb
ficoml
jb
cmc
inc
insb
mov
into
sbb
push
es
stos
mov
pusha
add
and
aaa
jg
sti
sti
pop
roll
push
movsl
into
xor
stos
fwait
sbb
test
outsb
jle
aas
sbb
das
sbb
test
pusha
in
into
das
add
adc
stos
pop
xchg
inc
ret
xchg
pop
scas
push
xchg
pop
stos
push
in
scas
movl
pop
test
sbb
inc
cmp
pushl
faddp
inc
fstpt
call
enter
int3
mov
add
or
or
insb
ss
imul
mov
rolb
andl
mov
xor
das
or
and
lcall
das
rolb
push
call
ljmp
dec
mov
aas
sbbb
push
add
cs
push
popf
push
jmp
pop
adc
stos
mov
pop
xor
sarl
stos
pop
cld
push
clc
sar
or
int
es
inc
mov
jecxz
rcrl
fnstenv
push
push
or
ror
pop
fld
imul
pop
pop
or
test
shlb
mov
cmpl
mov
pop
repnz
add
push
or
xchg
icebp
ret
shl
pushf
leave
scas
adc
cmp
xor
aaa
or
inc
test
rcl
mov
les
aas
cltd
and
icebp
inc
mov
mov
cltd
adc
rcll
push
push
popf
roll
icebp
shlb
and
add
jbe
pop
into
inc
sbb
sub
dec
cmp
inc
mov
sahf
add
adc
or
jbe
pop
into
inc
adc
adc
push
xchg
xor
add
inc
inc
mov
sub
dec
movsl
iret
stos
pop
xor
call
test
call
into
incb
jb
out
adc
sbb
push
arpl
dec
add
mov
subl
pop
adc
cmp
pusha
add
fld
cmp
xlat
xor
in
xchg
int
sbb
add
jge
inc
add
mov
mov
push
mov
arpl
adc
xor
in
and
sbb
add
int
add
orb
mov
lea
lret
inc
xlat
jne
pushl
fildl
cmp
mov
jle
xchg
clc
mov
pop
inc
add
jge
xor
sbb
jmp
cmpsl
jo
mov
sub
cld
push
mov
dec
jb
or
mov
ret
lret
lret
add
scas
ret
int3
push
mov
nop
mov
pop
test
cs
sbb
call
adc
xor
cmc
fbstp
dec
je
and
jecxz
dec
aam
sub
pop
inc
lret
and
jecxz
in
xor
test
xchg
pop
fwait
xor
mov
or
or
add
add
shll
jno
fists
inc
cmp
xchg
jecxz
scas
shld
or
adc
stos
mov
enter
fsubrs
rcl
hlt
aaa
push
shlb
cltd
pusha
addr16
hlt
imulb
daa
daa
cmp
stc
test
aam
out
push
mov
popf
repz
out
mov
pop
or
add
and
es
jb
xchg
add
mov
add
mov
add
push
dec
inc
dec
xchg
jbe
mov
call
adc
cmp
es
adcl
mov
arpl
iret
into
mov
push
jg
or
jnp
and
dec
bound
popf
mov
mov
and
and
add
pop
nop
sub
lret
jle
je
mov
flds
dec
pop
cwtl
mov
mov
xchg
mov
insl
mov
mov
je
iret
sbb
fadd
js
push
push
jb
jnp
call
addr16
sbb
and
xorb
into
push
mov
mov
pop
paddsb
cmc
mov
add
sub
loopne
push
mov
ret
add
shrl
leave
push
ja
mov
mov
mov
mov
test
test
inc
seto
test
mov
cmp
mov
mov
push
push
cld
or
mov
push
add
fs
inc
add
sbb
push
mov
add
add
mov
jp
jmp
test
rcll
jae
xor
ja
push
mov
mov
mov
call
les
shll
sti
xchg
xchg
and
mov
xchg
inc
push
xchg
test
mov
ss
insb
add
adc
les
mov
sarl
dec
mov
movsb
mov
notl
pop
notl
or
xchg
xchg
mov
xlat
pushf
movsb
mov
xor
xor
mov
cmpsb
sbb
inc
xchg
sub
inc
imulb
mov
mov
push
lods
lcall
into
mov
jbe
mov
mov
adc
in
in
lret
fsubrl
push
repz
iret
mov
cmp
push
aas
pop
push
aam
jmp
sbb
inc
or
roll
push
lahf
stos
inc
cli
pop
test
jbe
mov
bswap
in
mov
push
mov
add
iret
inc
add
mov
dec
inc
negl
xor
data16
adc
into
clc
je
inc
mov
sbb
mov
xchg
clc
dec
cmpsl
dec
mov
jl
pop
inc
dec
mov
lret
add
and
int
inc
jbe
loope
mov
add
rorb
pop
movsb
or
mov
lret
push
add
add
push
das
xchg
ss
cltd
lods
jbe
iret
sar
xchg
xchg
imul
movsl
imul
or
jno
pop
stos
inc
lock
xchg
fisubrl
les
aaa
pop
mov
mov
test
push
jecxz
jo
in
roll
push
stos
aad
mov
mov
add
push
push
xorl
inc
int
pop
adc
rorb
push
stos
inc
dec
popf
aad
inc
shll
sub
in
add
and
dec
xor
inc
sbb
sub
clc
and
in
add
push
pop
cwtl
sub
jnp
rorb
adc
lods
flds
xchg
sub
popf
inc
push
dec
addr16
fs
mov
and
lods
into
and
inc
push
inc
test
data16
add
rorb
inc
pusha
stos
inc
push
daa
rep
ret
or
sbb
xor
inc
cmp
das
inc
push
roll
add
add
in
flds
pop
mov
das
int
inc
pop
add
mov
icebp
shlb
mov
add
xchg
outsb
stos
and
aas
jmp
pop
roll
rolb
lea
mov
test
dec
shrl
lock
mov
leave
mov
mov
int3
in
add
stos
sbb
rolb
adc
inc
inc
inc
shll
les
stos
mov
jbe
cmp
icebp
adc
movsl
mov
add
xchg
mov
mov
adc
std
pop
or
mov
lds
test
add
cmp
call
ds
mov
ja
mov
ret
cwtl
int
xchg
cmp
fmull
sub
inc
add
mov
mull
leave
add
aaa
push
xor
xchg
mov
inc
inc
outsb
aad
sahf
adc
and
xor
inc
fisubs
ret
enter
clc
add
xchg
out
idivl
pop
ret
mov
mov
xchg
rolb
mov
lret
jae
inc
add
mov
jg
and
add
aaa
dec
mov
jns
jmp
adc
sarl
add
sub
push
adc
lcall
fnclex
mov
lods
inc
adc
push
jne
lahf
pop
push
inc
sbb
dec
es
mov
or
inc
pop
jge
inc
out
js
je
sbb
cli
xor
adc
cmc
mov
xchg
insl
leave
push
clc
loopne
test
sbb
push
add
mov
add
add
test
xor
pop
and
xchg
pop
add
pop
mov
mov
repz
enter
inc
sbb
mov
sub
jecxz
roll
loop
enter
inc
jmp
les
cli
nop
dec
add
mov
dec
adc
inc
dec
pusha
fnstcw
scas
in
aaa
or
adc
loopne
add
sub
icebp
mov
add
push
int
mov
mov
ret
into
and
incl
incl
xor
in
std
stos
dec
mov
add
int
hlt
pusha
jne
adc
int
hlt
xchg
inc
cmp
aaa
jecxz
adc
xchg
inc
cmpl
loope
push
cmp
pushf
ss
inc
pop
mov
add
les
mov
int
add
popa
addl
cmp
hlt
outsb
sti
mov
inc
roll
idivl
add
dec
sahf
sti
sarb
cmp
int
sub
mov
mov
in
mov
lds
cmp
xchg
lods
test
push
das
orl
add
aas
inc
pop
das
clc
rclb
lds
int
push
sub
or
std
movsl
test
sbb
inc
and
inc
call
xlat
cmp
insb
or
add
mov
pop
add
imul
icebp
stos
outsb
mov
cmp
popf
imul
jne
pop
pop
repz
shll
jae
mov
fsubl
dec
sarl
rorl
push
add
jge
mov
sub
dec
outsl
mov
ret
mov
mov
jl
jne
inc
popf
xchg
mov
mov
and
xor
inc
out
pushf
mov
stos
add
inc
loop
out
xlat
xchg
pop
mov
xor
enter
xchg
inc
cld
adc
jg
pop
mov
xor
pop
lock
push
inc
add
enter
add
push
sbb
shr
jecxz
loope
testl
xchg
dec
push
in
enter
movl
testl
fcmovbe
dec
xchg
xor
iret
jnp
sbb
add
inc
xlat
add
rclb
xor
in
mov
dec
out
iret
pop
inc
sub
rorl
pop
adc
loop
loope
testb
push
inc
sbb
push
dec
sbb
dec
lahf
xor
jbe
inc
into
arpl
pop
int
pop
mov
mov
mov
lods
or
daa
inc
sub
jbe
cli
mov
inc
ja
lock
jl
push
popf
jg
jp
push
rcl
pop
or
jne
add
sti
addr16
pop
clc
mov
xor
mov
mov
or
dec
mov
ljmp
lock
dec
scas
jp
clc
pop
xchg
rdtsc
aas
sbbl
xchg
lea
push
fcomi
push
nop
mov
sbb
test
ret
out
push
jo
mov
aas
push
fwait
out
xor
mov
and
mov
out
mov
add
add
cmpsl
adc
adc
push
add
push
lock
mov
lcall
cmpsl
test
es
mov
mov
out
mov
pop
in
cli
mov
mov
out
mov
xor
mov
outsl
scas
aaa
dec
adc
adc
out
aas
inc
push
xchg
xchg
cld
adc
notl
shr
ret
cmc
cld
add
mov
dec
xchg
mov
inc
push
xchg
in
hlt
in
lahf
mov
dec
mov
lahf
inc
push
add
shr
jb
jl
enter
jnp
std
sbb
mov
inc
leave
cltd
dec
outsl
les
jb
in
add
movsb
les
mov
jnp
cli
sbb
mov
in
popf
mov
jnp
negl
jnp
mov
add
sahf
jbe
pop
fmul
loope
and
cs
stos
pop
dec
mov
mov
in
inc
push
cli
inc
bound
loope
or
lahf
fisubrl
lret
jecxz
sbb
lret
iret
stos
orl
pop
mov
in
dec
inc
push
adc
inc
add
add
mov
pop
cltd
mov
jmp
add
mov
movsb
cltd
iret
int3
lods
data16
add
into
movb
mov
in
in
push
in
enter
or
je
inc
mov
stc
adc
into
inc
dec
dec
lret
sub
cmp
roll
cmp
or
add
pop
jbe
inc
psubw
adc
mov
inc
ja
push
popf
addb
mov
xlat
or
or
jne
shlb
cld
inc
add
ud1
dec
rcr
dec
mov
aaa
push
xchg
das
lcall
es
push
add
repnz
and
cmp
push
pop
mov
and
cmp
mov
outsl
lods
cmp
mov
faddl
sub
cmc
mov
sbb
xchg
adc
cmpl
push
sbb
stos
pushf
push
je
add
cli
outsb
or
call
xchg
push
sbb
or
jg
shlb
mov
ds
xchg
es
in
fwait
and
repnz
add
jnp
add
das
sti
push
adc
shrb
shll
sti
pushf
push
mov
lea
outsb
frstor
dec
sbb
add
xor
or
addr16
or
lds
adc
mov
mov
mov
dec
loopne
fsubl
loopne
lahf
popa
iret
in
add
mov
sbb
addr16
ss
in
ret
inc
jmp
adc
mov
dec
push
cli
fisttpll
add
loopne
sbb
adc
fadds
cmpsl
pop
dec
out
xchg
dec
mov
xchg
testb
mov
stc
jmp
jb
into
cmp
loopne
xor
int
jmp
mov
dec
aaa
xchg
xchg
pop
test
loop
dec
sbb
fdivp
mov
and
icebp
add
xchg
xor
dec
mov
fisttpl
pushf
sbb
pop
call
inc
add
ror
push
punpcklbw
or
imul
enter
ror
dec
mov
shl
jg
add
jbe
inc
shll
enter
mov
xchg
mov
rorl
push
mov
add
movsb
in
mov
cld
sub
push
dec
pop
invd
hlt
push
inc
mov
sti
mov
addl
mov
lret
dec
mov
out
lret
shlb
add
mov
lds
cmp
add
sbb
rcrl
xchg
mov
cmp
dec
and
mov
pushf
xor
out
into
je
cmp
sbb
mov
mov
cmpsb
int3
or
push
bound
xchg
mov
aas
mov
xchg
inc
outsl
shr
cwtl
enter
push
iret
leave
mov
xor
xor
jmp
sbb
xchg
xchg
add
inc
lods
add
pop
test
cmpsb
pop
lods
outsl
push
shrl
add
daa
lret
adc
insb
mov
xchg
push
or
rorl
add
add
shll
or
lods
gs
push
mov
lods
add
jbe
ljmp
sbb
add
dec
mov
and
add
pop
insb
loope
inc
stos
cli
xchg
cmpsl
stos
cmp
movsb
adc
or
pop
mov
sbb
rolb
add
add
movb
push
mov
add
mov
notb
movsb
mov
mov
stos
out
mov
out
xchg
sbb
sbb
rolb
add
mov
or
adc
mov
and
ljmp
mov
or
out
jl
lahf
inc
cmc
in
inc
iret
inc
lea
loopne
lcall
cmp
rclb
lods
cmp
pop
xor
aam
add
push
push
inc
cld
and
icebp
sbbb
es
sub
leave
add
push
sub
inc
iret
stc
pushf
lea
inc
add
outsb
lock
cmpsl
mov
dec
inc
add
fadds
incl
xor
push
push
jno
sbbl
enter
enter
leave
fidivs
add
add
inc
add
mov
add
sbb
add
mov
add
imul
cmp
xchg
mov
test
sub
jl
and
scas
pop
adc
iret
push
jmp
aas
incl
cli
and
int
mov
add
or
xchg
pop
inc
jno
add
das
mov
insb
pop
shll
jne
lods
add
pop
cwtl
cmp
sbb
imull
scas
or
test
pop
cmp
arpl
cs
call
xor
shr
inc
and
push
push
add
in
imul
fmuls
xchg
and
stos
add
pop
das
jg
scas
movsb
or
adc
aad
hlt
clc
mov
shrl
subb
pushf
test
inc
jb
roll
stos
push
jbe
sbb
inc
daa
lcall
cltd
cmpsl
or
stos
mov
cmpsb
mov
outsb
push
into
lods
and
mov
lcall
add
add
rolb
or
int
adc
pop
xor
test
test
push
xchg
pop
mov
leave
mov
into
sub
jecxz
insb
xlat
leave
ficoml
jae
iret
into
sub
loope
call
xor
mov
inc
outsl
out
jle
xchg
mov
inc
add
das
cld
mov
inc
or
mov
lret
push
fwait
out
jl
pop
cmc
in
jbe
inc
lea
loopne
mov
sub
inc
pop
std
in
inc
roll
ret
fisubs
mov
xchg
sahf
stos
ret
mov
push
sub
into
dec
sqrtps
call
ret
test
das
call
mov
outsb
stc
push
shrl
mov
rorl
out
and
xchg
or
idivl
lds
call
mov
jae
pushl
pushl
jg
test
call
inc
add
mov
aas
add
mov
mov
add
mov
add
lods
mov
arpl
stos
pop
sub
mov
add
mov
and
call
movsl
rcrb
inc
aad
out
sbb
popa
cmp
or
xor
out
and
aam
pusha
movsl
shll
movsl
dec
or
mov
xor
or
cld
and
shl
loope
shlb
mov
sub
out
add
push
out
imul
lods
add
movsb
scas
jnp
adc
jae
push
mov
push
or
mov
push
mov
mov
fisubrs
lods
push
sub
pop
subb
cltd
test
sbb
mov
mov
adc
push
dec
sub
inc
cmp
mov
mov
and
adc
leave
add
mov
jmp
setno
mov
pop
lods
inc
jmp
fistps
mov
jmp
int3
push
pop
fildll
xor
loopne
pop
adc
int3
mov
add
adc
add
push
in
mov
ret
adc
add
jl
push
adc
sub
adc
cli
cmovp
pop
outsl
pusha
ja
mov
push
test
mov
outsb
loopne
call
ja
xabort
mov
mov
decl
xchg
mov
xchg
jae
mov
mov
ret
mov
add
movsl
lcall
lret
divl
daa
sbb
add
arpl
xor
dec
inc
push
lahf
add
pop
inc
cmp
in
mov
add
mov
add
fistl
xchg
shrl
xor
test
add
mov
dec
ret
and
inc
ljmp
test
shll
inc
add
adc
adc
daa
inc
insl
shlb
aad
mov
sbb
test
cmpb
lods
add
nop
jecxz
sbb
dec
mov
repz
xor
in
out
sub
cli
pop
mov
inc
mov
daa
mov
push
sbb
out
sbb
out
or
jmp
cmp
int
call
je
dec
inc
fcomp
mov
jl
sub
dec
add
jne
xchg
push
push
push
dec
mov
mov
push
xchg
jb
movsb
scas
jmp
nop
sbb
and
in
es
xor
mov
or
jo
rcrl
scas
fucomp
and
jle
fsubrs
adc
ljmp
stc
or
pop
bound
mov
jne
cld
jo
dec
and
jne
push
stos
call
insb
or
pop
inc
mov
in
popl
or
sbb
mov
aam
inc
xlat
out
xchg
inc
push
mov
add
mov
int
fcmovnb
add
xor
dec
inc
aad
pushl
aad
jne
push
mov
mov
add
dec
cs
test
roll
pop
push
dec
test
and
or
mov
lcall
mov
sub
nop
cmpsl
insl
cs
fwait
jne
dec
notb
stc
and
dec
or
add
ret
dec
sub
mov
insl
fdivrs
adc
test
or
dec
mov
xor
es
push
cs
pop
push
inc
cmp
cltd
xchg
push
push
sbb
xchg
outsl
pop
push
movsb
dec
dec
rcrb
jno
lods
sbb
inc
sahf
mov
push
adc
movl
sbb
jae
sbb
xlat
jl
dec
fists
outsb
sub
mull
rorl
ds
in
add
sahf
xchg
adc
rcll
and
dec
clc
repz
lods
jle
pushf
cli
jo
add
mulb
sahf
jae
adc
jo
add
roll
add
push
sbb
pop
popf
push
loopne
pop
roll
insl
mov
xchg
sahf
sub
or
mov
lret
inc
jmp
sbb
inc
and
andl
rolb
jp
les
push
fwait
adc
jne
jnp
sbb
test
jmp
cs
mov
int3
xor
push
sub
dec
sarb
add
add
fwait
mov
je
aam
mov
faddl
lret
mov
dec
jg
ja
mov
inc
push
loop
aaa
rclb
push
mov
inc
lret
call
test
decl
int3
fsubrs
fwait
call
popf
pop
add
test
mov
dec
mov
enter
mov
add
jg
mov
sub
addl
add
add
xabort
lods
sbb
aam
add
idiv
shrb
or
pop
jp
sarb
or
sbb
sub
push
xor
push
fcomps
jne
out
sarl
inc
cmp
mov
mov
pop
ret
test
sub
into
xor
push
test
call
fwait
call
add
add
mov
xor
jmp
test
xor
loope
add
aaa
nop
xor
cmp
fistps
fsubrs
jae
fwait
daa
adc
xchg
xchg
xchg
pusha
insb
ficoms
out
xor
je
inc
push
mov
stos
shll
pop
fidivrs
movsb
sbbb
popa
jmp
push
add
add
clc
std
in
sub
std
in
std
insb
add
or
push
inc
stos
std
insb
xor
sahf
ret
adc
insb
into
fs
mov
rorl
outsl
icebp
bnd
cltd
cld
jle
popf
cld
fnstenv
lcall
push
shrl
mov
jecxz
adc
and
dec
or
shlb
pushf
sbb
and
scas
jo
mov
stos
add
rcll
outsb
add
mov
jb
inc
adc
adc
sbb
les
push
mov
into
or
ret
add
jbe
into
movsb
xchg
dec
cmpl
inc
or
fs
mov
jo
mov
mov
out
test
sbb
or
add
add
mov
sbb
add
and
sbb
aas
or
xchg
xchg
push
add
in
or
mov
xor
shlb
mov
inc
inc
sub
or
sub
or
shll
ror
clc
sbb
aaa
dec
dec
mov
adc
sub
hlt
xchg
mov
push
jp
dec
push
add
push
push
scas
mov
lret
jne
adc
or
roll
mov
int3
rol
idivb
xchg
test
sbb
jmp
ljmp
pop
popf
inc
push
xchg
dec
push
in
fists
mov
stos
out
add
stos
add
inc
mov
movsl
adc
jl
sub
push
pop
mov
add
jbe
adc
imul
test
jne
cmc
test
push
fwait
cmp
inc
adc
test
inc
call
sbb
mov
xor
sub
add
add
fldt
lods
jle
sbb
lods
out
sub
outsl
push
jo
in
sarl
das
xchg
jno
hlt
xchg
clc
push
dec
addr16
add
loope
in
sbb
dec
jp
sub
pop
ds
and
aam
loop
aad
push
lods
add
sub
add
shr
push
loopne
mov
adc
imul
roll
xchg
stos
cld
dec
xchg
mov
stos
mov
int
push
fstps
fnstsw
push
mov
add
mov
jmp
sbb
popf
adc
sbb
mov
mov
jmp
add
mov
lods
roll
xor
xchg
push
push
sub
and
pushf
jle
push
sbb
into
lods
jns
add
out
imul
sub
inc
add
push
mov
call
add
sub
cmpsb
nop
mov
jne
sub
or
pushl
ja
add
and
adc
and
mov
loopne
xchg
mov
add
adc
btc
aaa
out
inc
pop
add
xchg
stos
jne
dec
pop
lock
inc
sbb
mov
mov
add
add
pop
push
aaa
cli
mull
mov
mov
xor
push
inc
push
push
inc
add
stos
mov
push
inc
add
cwtl
xchg
sbb
aaa
inc
xchg
arpl
sub
aas
sub
inc
fldt
jbe
sub
ret
adc
cmp
fbstp
lcall
add
sub
ficoml
add
pop
or
mov
out
frstor
movsl
fadd
cmc
jb
nop
jp
in
out
and
and
sti
push
rol
xchg
mov
sti
movsb
or
mov
xchg
mov
sub
lods
rolb
push
ja
jns
xchg
ficoml
insb
add
dec
fidivrl
pop
or
inc
xchg
scas
arpl
fsubs
xchg
scas
pop
inc
inc
js
and
push
mulb
sbb
dec
adc
sbb
in
mov
cmpl
movsb
inc
xlat
xchg
fstl
push
test
jo
enter
leave
je
xchg
mov
add
insb
push
mov
pusha
js
lret
fs
xchg
mov
test
negb
inc
jo
xchg
into
and
dec
xlat
in
lds
mov
push
xchg
stos
cli
in
mov
fdivl
adc
sub
add
push
xchg
shll
not
int3
jne
or
aam
jno
incl
sub
pop
loopne
xchg
mov
inc
sbb
loopne
jg
mov
lret
jne
pop
das
lock
mov
mov
int3
cltd
mov
push
adc
pop
mov
test
mov
pop
lods
sbb
pop
jle
es
inc
adc
pop
dec
sub
push
xchg
pusha
incl
xchg
mov
jmp
rorl
das
mov
and
fwait
and
in
out
mov
hlt
jp
daa
jo
imul
xchg
cmpsb
js
add
mov
push
shr
add
push
jmp
mov
ret
push
lock
fcmovne
ds
and
add
rclb
push
je
mov
add
add
mov
fwait
daa
sub
dec
shlb
bound
cli
mov
push
inc
cld
add
dec
cld
clc
cmpsb
sub
mov
jp
mov
jp
fadd
insb
ret
movsb
add
mov
sbb
loop
add
nop
bound
mov
xchg
add
popa
xor
test
add
mov
fbld
pop
aam
inc
add
jle
lret
xlat
and
mov
movsl
xchg
aad
int
inc
pop
lock
xor
inc
mov
jns
stc
cmp
sbb
cmpsl
cmc
movsb
sbb
jge
adc
sbb
mov
mov
iret
cltd
xchg
pop
adc
xchg
sbb
adc
add
into
cltd
aad
mov
divb
jb
sbb
fdivp
sub
sub
into
adc
clc
orl
lea
sahf
mov
push
int3
in
es
sbb
mov
dec
mov
cmp
dec
add
lock
adcl
inc
or
add
out
shlb
test
xchg
sbb
add
xor
inc
jne
cwtl
roll
rclb
mov
push
sbb
xchg
push
mov
clc
fst
mov
cli
add
xchg
add
add
mov
mov
mov
add
std
cmp
inc
pop
pop
inc
lea
pop
mov
push
shll
cmp
enter
lahf
shrb
add
mov
fsub
daa
push
out
repnz
push
jbe
lcall
dec
and
xor
jmp
stos
ret
jp
cmp
dec
test
jns
add
cmp
push
mov
popl
add
out
dec
mov
cmpsl
mov
mov
jno
sbbb
inc
add
add
lcall
jp
subl
inc
fstl
add
or
lods
add
and
pop
lret
sub
mov
adc
dec
dec
mov
mov
mov
aad
jns
xor
mov
call
loop
cmpsl
sub
dec
mov
lret
adc
or
rcll
mov
mov
testl
pop
pop
mov
sbb
add
out
xor
mov
mov
scas
mov
mov
inc
cmp
push
add
aaa
mov
icebp
lea
xchg
inc
mov
bound
int3
das
push
movb
mov
ljmp
adcl
inc
mov
xchg
aad
mov
cli
inc
pop
cmp
jae
xor
add
mov
jo
sbb
mov
outsl
int
push
mov
pop
pop
cmp
ficompl
add
dec
test
stc
adc
push
push
aaa
or
inc
int
cmp
xor
push
ret
add
push
push
lods
movsl
add
sub
int
mov
jno
repnz
int3
adc
and
dec
xor
inc
int3
pop
sbb
cmp
xor
inc
inc
addl
into
pop
rcll
xor
cmp
pop
mov
mov
movsl
dec
mov
jle
push
xchg
jae
add
push
and
hlt
repz
pop
repnz
popf
lods
dec
add
leave
lret
je
hlt
pop
test
inc
add
push
repz
movsl
inc
mov
fdivs
add
sbb
sub
add
jl
ficomps
mov
mov
inc
and
stos
insl
jg
add
stc
cmp
dec
andl
mov
les
addr16
je
mov
enter
loope
test
adc
stos
inc
jns
pop
mov
aas
pop
add
into
shr
arpl
and
lods
add
cmpsl
and
xchg
bound
push
mov
and
mov
pop
jmp
mov
xor
mov
pop
jmp
add
xchg
xorl
int3
loop
mov
in
xchg
or
pop
fs
aas
push
fidivrs
and
push
and
sbb
flds
mov
dec
pop
and
fcmove
push
xchg
fdivl
rcrb
mov
add
xlat
fxch
mov
push
mov
push
jmp
adc
in
add
cld
mov
stc
mov
cld
inc
rclb
test
pop
pop
add
add
add
sub
push
shlb
xor
shll
dec
dec
aas
fdiv
or
push
adc
inc
mov
xchg
and
push
pop
pushf
dec
mov
pop
xor
int3
lret
mov
add
cmpl
iret
je
sbb
push
jl
add
neg
inc
add
push
cmp
push
add
and
bound
icebp
xchg
sub
dec
mov
cmpsl
or
fidivrs
inc
mov
fdivp
ret
sub
adc
notb
mov
mov
add
push
xor
dec
push
cli
inc
xchg
jle
pshufw
lods
js
fisubs
inc
js
push
ljmp
xchg
cmpsl
mov
fists
inc
and
fistps
inc
add
add
xor
shlb
add
pop
sarl
imul
mov
cli
add
fmuls
mov
daa
in
sbb
int
lods
enter
push
cli
fwait
sub
lods
cwtl
mov
in
loope
inc
mov
and
or
incl
insl
aas
fcom
stos
add
rol
dec
adc
xor
adc
push
mov
push
call
or
mov
stos
xchg
add
mov
std
fstpl
loope
addps
fmul
sbb
fcmove
stos
sub
shrl
call
push
xor
mov
into
dec
push
adc
xor
int
jmp
in
xor
xor
cli
add
gs
push
ss
subl
push
iret
xchg
push
xlat
or
fmul
sub
mov
pop
jns
ret
es
and
lret
aaa
iret
xchg
jmp
lds
add
push
cli
add
imulb
stc
add
cmp
push
add
es
jae
add
cmp
xorl
or
cli
jno
inc
cmp
xchg
xor
xor
push
adc
lods
mov
add
add
push
or
jbe
dec
mov
iret
into
dec
rorl
xor
int3
js
mov
inc
add
dec
add
cmp
jb
inc
mov
movl
add
jmp
and
push
push
xchg
fimull
or
jg
out
xchg
sbb
mov
adc
mov
mov
add
pushf
adc
fisttpl
jb
xor
push
push
xchg
xchg
incb
enter
popf
sub
sub
and
and
rcrl
xor
mov
push
lock
adc
or
jle
fidivrl
stos
pop
sbb
jmp
push
push
sbb
mov
add
jle
push
push
pop
cltd
fadds
push
cmpb
cmpb
ss
test
xchg
push
cmp
push
mov
ror
test
adc
jmp
push
cmp
inc
xor
jle
enter
push
aad
mov
popl
dec
jg
mov
jle
push
dec
push
adc
imul
add
add
jle
aad
adc
inc
jl
es
dec
push
shrl
pusha
outsl
loop
call
sbb
ds
mov
xchg
insl
daa
ja
repz
stos
dec
int3
jle
push
stos
arpl
dec
adc
lret
roll
call
fdivl
test
in
sub
dec
or
sub
pop
push
and
notl
mov
icebp
xchg
add
rclb
mov
and
lock
int3
xor
in
aad
jmp
fnstsw
jae
call
cld
dec
lea
cmp
mov
ja
ret
add
xchg
data16
jle
mov
cmpl
inc
add
lea
scas
inc
data16
icebp
ret
addr16
add
push
push
add
icebp
shlb
sahf
push
add
mulb
push
push
lea
push
lea
push
addl
inc
add
icebp
mov
cli
add
and
icebp
mov
rcrb
negb
fistl
incb
xor
dec
mov
aad
mov
int
cmp
lret
cmp
inc
mov
aad
mov
push
adc
shrl
push
shrl
lret
sbb
jl
inc
pop
mov
add
shrl
push
shll
leave
and
daa
or
daa
push
dec
call
daa
add
dec
lock
xor
movsl
jp
mov
jl
mov
fstps
sbb
add
shrl
stc
xor
dec
and
push
inc
add
popa
shrl
std
mov
inc
fs
scas
imul
ja
cmpsb
mov
pusha
lds
add
pop
xchg
or
cmc
addr16
push
scas
pop
jmp
add
dec
aaa
add
or
into
movsl
add
jl
stc
shlb
rorl
sbb
int
jmp
sbb
jp
jmp
pop
dec
mov
sahf
push
pusha
mov
jecxz
cmpsl
gs
aaa
or
xlat
add
push
and
stc
test
aaa
or
pop
lods
nop
data16
dec
cmp
xor
inc
iret
sbb
aas
add
pop
cmp
mov
cmp
mov
jb
or
and
cli
push
and
inc
int
adc
stos
xchg
imul
pop
jl
mov
int
incl
test
fs
mov
call
add
inc
add
mov
rolb
dec
mov
movl
push
in
bound
cs
pop
decb
lods
imul
pop
pop
inc
add
rcrb
test
push
add
push
inc
jno
cmp
lcall
sub
ret
or
jmp
outsl
mov
decb
scas
mov
arpl
bound
outsb
or
mov
push
jae
lcall
add
jecxz
xlat
push
add
loop
cld
cmpl
call
push
nop
push
add
insb
dec
jns
lods
push
pop
gs
dec
movsb
or
mov
fcmovb
xor
cmpsb
or
xlat
lcall
fstpl
std
sub
mov
ja
pop
pop
adcb
movsb
or
lock
add
add
out
ret
cld
rcrl
pushf
fs
mov
adc
icebp
push
faddp
push
jge
jl
roll
mov
dec
mov
aam
mov
in
jmp
test
test
das
aam
lret
pop
bound
jbe
popf
movsl
lret
jbe
mov
popl
xchg
sbb
inc
jmp
add
dec
mov
xor
test
imull
pop
shl
dec
mov
arpl
sbb
ja
into
mov
inc
inc
scas
inc
add
dec
sahf
xor
ss
pop
sbb
bound
data16
jbe
rcll
mov
jne
dec
mov
dec
inc
adc
ud1
cmpl
out
int
inc
add
mov
dec
xchg
pop
clc
mov
hlt
stos
mov
ror
jne
adc
mov
fs
test
inc
push
adc
dec
or
or
hlt
stos
mov
mov
scas
push
cmp
pop
push
hlt
stos
xor
sbb
adc
dec
push
fdivl
xor
lock
mov
sub
add
push
push
mov
xchg
xchg
aaa
into
dec
test
mov
sbbb
sbb
push
in
sbb
icebp
sti
mov
sub
stos
arpl
mov
lock
add
and
cmc
jl
add
lods
mov
out
add
sbb
mov
sub
mov
rcr
repnz
and
aaa
lock
add
add
sarl
movsb
mov
dec
loop
xor
jl
loopne
out
adc
dec
ljmp
inc
push
je
shrl
test
testb
lods
jp
sar
mov
nop
mov
pop
push
std
stos
rcrl
adc
ficoms
outsl
add
inc
stos
pop
rcrl
cwtl
add
rcr
add
lock
in
sahf
inc
bound
stos
ljmp
stos
ljmp
adc
inc
inc
add
cmp
sbb
mov
cmpsb
sahf
jg
fcom
inc
jmp
mov
sbb
call
add
dec
aaa
popa
std
inc
xchg
out
lret
push
inc
push
sub
adc
bound
adc
inc
pushf
push
movb
inc
or
xorl
gs
mov
or
jb
adc
inc
mov
cli
jle
int
or
negb
add
inc
sub
pop
inc
jbe
xor
pop
mov
in
sbb
add
pop
or
dec
push
lret
push
xor
jnp
int3
or
or
mov
xor
add
or
mov
je
jge
je
jge
adc
cld
nop
data16
imul
fcoml
call
push
mov
cmp
pop
push
add
xchg
push
add
add
add
cmpsl
testl
jno
ret
cmp
call
aas
push
out
xchg
sub
ret
adc
call
push
jno
push
call
cmpsl
add
cmp
sub
mov
push
cmc
push
jae
sti
jle
idiv
inc
add
sar
js
fsts
addb
add
add
rorl
inc
xor
adc
fnsave
jp
insl
add
into
sub
pause
out
pop
dec
xchg
dec
inc
xchg
push
inc
js
int3
test
mov
and
arpl
lods
mov
insb
sub
mov
xchg
or
inc
movsb
popa
and
mov
xchg
faddl
jo
in
jo
popl
icebp
outsl
mov
add
inc
lock
inc
cld
and
outsl
into
das
mov
aam
out
adc
pop
sti
inc
cltd
pop
lds
xor
mov
inc
out
mov
or
fs
sub
add
sahf
fadd
lret
ficompl
mov
jne
xlat
adc
mov
sbb
pop
sbb
mov
jmp
add
push
xchg
sbb
jnp
jmp
cltd
push
mov
add
aad
inc
ja
mov
dec
mov
mov
pop
or
call
xchg
mov
call
adc
lea
ret
ret
mov
or
mov
incl
ljmp
cmpl
sbb
adc
jecxz
into
andl
adc
inc
gs
ficompl
jo
out
inc
rdtsc
pop
mov
ret
pop
add
arpl
jp
inc
mov
pushf
addr16
jl
add
push
xchg
dec
shll
js
inc
inc
sti
ja
add
dec
pushf
dec
xchg
hlt
jmp
cltd
mov
decb
pop
add
push
incl
je
xlat
subb
idivb
mov
jmp
popf
push
cmpsl
hlt
ljmp
adc
fwait
adc
add
icebp
fldenv
shl
inc
adc
pop
scas
add
loopne
push
out
out
mov
mov
pop
shrb
das
sbb
imul
inc
mov
rep
sbb
insb
jns
lcall
sub
popa
inc
dec
arpl
inc
pop
jno
sarl
mov
lcall
push
pop
insb
test
mov
cltd
aas
flds
xchg
sbb
xchg
ja
sbb
add
insb
inc
mov
add
add
aas
jmp
dec
imul
push
mov
xor
nop
and
in
daa
popf
insl
inc
fildl
and
ds
cmpsl
dec
ja
jbe
fdivl
ds
fisttps
outsl
rcll
sbb
push
inc
jmp
or
iret
inc
push
imul
mov
adc
ss
push
sub
sbb
mov
jmp
pushf
ja
add
or
addb
test
jp
mov
das
flds
lahf
stos
das
or
iret
inc
movl
addb
push
add
stos
dec
mov
pop
movl
push
int
jbe
cmp
sub
dec
sub
ret
adc
add
mov
pop
rol
test
fcomi
push
nop
cmp
jne
mov
add
lods
sub
push
cmp
cmp
inc
xchg
pop
mov
lcall
into
leave
nop
xor
push
inc
push
std
pushl
mov
xchg
pushf
dec
js
fnstenv
xchg
mov
xchg
xor
rol
aaa
sbb
inc
xchg
fistpll
movl
pop
add
add
js
cmpb
xchg
decb
mov
pushl
ds
push
jmp
fidivrl
clc
loopne
add
scas
js
ret
jae
mov
stos
xorb
inc
mov
aam
or
shrb
sbb
js
pop
xor
test
push
fsts
sahf
push
mov
sbb
and
adc
stos
inc
or
inc
mov
push
push
push
or
loope
movsl
movsb
test
mov
mov
xor
pop
push
insb
add
fldl
and
daa
or
ret
xorl
fstpl
xchg
jae
lret
add
dec
pop
adc
push
mov
cmovge
add
pop
add
mov
add
bound
and
sbb
adc
adc
xchg
adc
cmp
std
negl
xchg
push
xor
jecxz
frstor
pop
mov
data16
add
pop
add
lea
or
std
enter
mov
mov
inc
jg
sub
jo
add
loopne
mov
jne
stos
dec
shlb
pop
fcoml
sti
add
test
or
scas
into
add
ror
inc
pop
add
pop
stos
mov
or
rolb
cli
ds
inc
pop
push
cli
jne
xor
test
stos
mov
sarb
add
ret
movb
add
adc
jns
movsb
pop
push
push
pop
int
ljmp
dec
inc
ja
cli
je
jg
inc
push
mov
out
dec
fidivs
adc
mov
cmp
mov
dec
xchg
lods
outsl
dec
cmp
jl
out
xchg
adc
movsl
jae
mov
jl
push
cmpsl
jl
xor
jmp
mov
push
inc
push
sti
cmp
fldenv
outsl
jae
das
inc
or
js
mov
int
es
sti
lds
mov
xchg
adc
jmp
dec
out
in
inc
xor
push
addr16
gs
aad
or
pop
rol
jnp
adc
ret
pop
dec
insb
mov
push
fildll
fsts
cmp
push
pop
xor
gs
cmp
add
ret
and
ss
add
scas
sbb
stos
cmp
shrl
dec
push
lods
rol
scas
jmp
adc
inc
sbb
add
mov
lock
mov
xor
xchg
add
jle
sub
ret
mov
arpl
or
es
mov
fs
push
add
add
adc
fs
lock
test
cmc
lret
adc
mov
and
pop
arpl
adc
and
sbb
sbb
bound
xor
inc
mov
pop
dec
cmpsl
add
movsb
movsb
aas
cli
frstor
dec
push
roll
movsb
mov
data16
xor
ret
orl
cmp
dec
adc
iret
enter
adc
jb
push
inc
ja
inc
push
mov
movl
push
inc
aaa
push
cli
jne
jle
push
fwait
ss
aaa
inc
incl
int
fldcw
push
sbbb
cmova
cwtl
xor
mov
pop
adc
int
and
xor
int
jecxz
dec
rcl
into
dec
adc
into
inc
add
mov
jo
out
cli
and
mov
jg
out
xchg
and
out
mov
cs
and
test
insb
rolb
pop
je
arpl
pop
fldenv
ss
push
mov
mov
cmp
jno
scas
xchg
and
add
and
inc
dec
dec
inc
int3
lds
add
and
fisttps
mov
bound
and
jecxz
shrl
xchg
idivb
mov
cmp
dec
adc
fcomps
and
cmc
inc
adc
xor
sarb
aad
cmp
mov
cld
and
push
ja
cltd
mov
pop
test
rcrl
int3
std
inc
or
outsb
or
bound
loopne
divl
add
bound
inc
pushf
fldl
push
in
xor
mov
test
pop
adc
ret
jmp
dec
or
cmpb
or
das
or
icebp
sahf
cwtl
mov
jmp
pop
imul
roll
inc
aad
jmp
ror
jmp
fistps
inc
in
sbb
stos
mov
das
fmull
inc
jmp
sbb
cmc
js
sbb
inc
pop
movsl
jmp
aas
shlb
jmp
and
lds
push
roll
add
das
sub
xchg
xor
pop
add
sbbb
inc
aad
add
aas
mov
jne
mov
mov
dec
mov
mov
add
loopne
stos
pop
cli
lcall
xchg
mov
pop
mov
inc
add
sbb
shld
cmp
decl
mov
enter
movups
xor
jp
clc
insl
xlat
sti
call
out
call
jp
xor
push
cmc
lds
ss
add
mov
pop
addb
push
lea
repz
pop
popf
mov
out
push
jne
test
fadds
cwtl
clc
aas
push
repz
jne
fwait
test
sub
imul
push
std
test
out
in
notl
je
push
addr16
flds
scas
dec
add
cmpsl
je
push
repz
add
xor
add
inc
push
movsl
rcl
jge
leave
sub
and
lods
add
pop
pop
jge
mov
xor
xor
das
xchg
imul
pop
add
and
lock
fldt
add
jecxz
xor
int3
mov
adc
das
adc
jl
enter
mov
pop
jae
ja
pushf
pop
stc
mov
push
inc
mov
cli
aam
notl
pop
mov
negb
adc
push
jbe
enter
pop
push
pop
or
loopne
fcom
scas
ljmp
adc
mov
push
pop
das
rolb
mov
out
push
adc
test
call
je
cld
stc
pop
sbb
xchg
pushf
pop
mov
pop
xor
add
push
stos
add
and
dec
push
pop
add
aaa
inc
pop
jbe
inc
mov
int
sarl
xor
arpl
mov
cli
je
stos
xor
pop
push
add
lea
ret
scas
mov
roll
cli
dec
mov
dec
lods
or
cmp
repnz
mov
sub
inc
test
sbb
negl
mov
repnz
scas
sbbl
nop
mov
mov
jo
jbe
cld
aas
push
jne
push
push
push
add
add
cld
push
inc
push
in
push
jae
std
lret
not
push
imul
in
push
jae
ret
mov
imul
or
inc
mov
jo
movsl
sub
xchg
mov
addr16
pushf
mov
out
out
imul
aam
inc
push
inc
pop
daa
push
pop
jo
loope
mov
out
add
cmpsl
mov
in
icebp
imul
add
add
or
adc
cli
mov
out
cltd
stc
pop
outsl
cld
stc
push
fildll
ffree
daa
sub
shl
bound
xchg
pop
sub
pop
shrb
cwtl
ret
lcall
aam
ret
cld
adc
rolb
mov
dec
fildll
and
sarl
xor
xor
pop
popf
jo
movsl
add
into
lods
add
in
inc
rolb
sbb
fdivl
push
adc
lods
cs
push
mov
sub
negl
mov
pushl
add
sub
fistps
insb
sbbb
test
and
int
adc
rolb
xor
mov
gs
inc
shll
push
xchg
roll
add
add
or
jmp
pop
pop
in
jnp
inc
cs
out
arpl
mov
pop
pop
stos
sbb
fs
fs
xchg
mov
add
out
pop
mov
push
inc
int
sub
push
sbb
push
das
sbb
adc
push
sub
adc
lret
inc
add
int3
jle
mov
lds
adc
jne
rorb
mov
add
into
sbb
inc
pop
and
sbb
sbb
mov
mov
sbb
inc
pushl
dec
inc
push
stos
xchg
xor
rorl
xor
mov
and
outsb
jno
add
jb
decb
in
test
or
lds
push
mov
add
cwtl
mov
mov
add
in
push
push
mov
in
inc
and
push
inc
imul
push
out
push
and
sub
pop
outsl
sarl
mov
xchg
insl
stc
lock
adc
rcrl
jl
lods
and
or
das
jns
shrb
add
push
movb
inc
sub
pop
shrl
or
pop
pushf
test
icebp
inc
icebp
in
nop
xor
out
adc
add
ljmp
add
push
pop
enter
mov
add
push
test
add
push
mov
and
lods
test
xor
fwait
nop
lock
add
add
stos
mov
pop
push
mov
mov
roll
lret
adc
push
mov
negb
push
out
roll
fcomps
push
inc
fucomip
sbb
insl
sahf
test
push
int3
sub
xchg
inc
call
addr16
mov
bound
insb
stos
addb
mov
mov
fs
test
add
dec
ret
roll
fstp
push
push
ror
movsb
xor
cli
icebp
cmp
stos
jmp
aad
call
in
adc
xchg
jno
inc
add
sub
lcall
ss
push
lahf
mov
aaa
cmp
test
scas
dec
inc
int
aaa
fadd
adc
xor
push
cli
rsqrtps
inc
add
test
out
test
jne
mov
les
lods
sbb
push
cmp
ret
in
scas
roll
fadd
clc
push
std
fwait
daa
xchg
push
jbe
inc
add
out
pushl
xor
je
out
stc
pop
leave
fisubs
cld
push
mov
insb
incb
pop
cmc
cmp
sbbl
jmp
insl
sbbl
and
mov
call
bound
jbe
aad
add
icebp
sbb
inc
repnz
add
mov
pop
fidivrs
popa
mov
lods
ret
fadds
sub
arpl
cmp
shr
inc
fildll
loope
std
sub
hlt
iret
adc
adc
lods
in
rcrb
push
xchg
or
fwait
push
pop
in
add
mov
add
add
push
repz
mov
sub
scas
pop
push
stos
jp
pop
test
pcmpeqd
test
push
mov
push
andl
push
inc
clc
rorl
jl
push
movsb
add
xchg
jp
xchg
lea
mov
int3
xor
faddl
inc
sbb
mov
mov
pop
cmp
add
add
lds
sbb
testb
mov
ss
ret
in
jge
mov
lret
out
push
mov
notb
push
push
test
frstor
push
hlt
dec
jmp
cmpsl
push
mov
cmp
in
jmp
fstl
test
lret
pop
jmp
dec
inc
pop
add
inc
add
lret
xchg
inc
xorl
mov
and
decl
iret
cli
je
inc
cli
ret
je
jp
mov
scas
push
test
dec
xor
sub
lods
aam
jne
lret
sti
xchg
dec
xor
adc
test
jg
mov
inc
rolb
mov
cld
out
out
push
pop
xchg
jmp
push
incl
test
mov
add
jl
jge
aam
push
inc
jb
add
nop
mov
xor
xlat
enter
jno
mov
test
ljmp
cltd
xor
or
mov
xorb
sub
out
data16
movsl
jmp
gs
cld
sub
mov
push
mov
add
add
shl
mov
ds
ret
rol
psubq
fdivl
push
xchg
mov
push
popf
popf
arpl
mov
cmp
jmp
add
in
shl
nop
repz
daa
inc
dec
call
and
pop
or
dec
mov
xchg
les
push
shrl
popa
dec
sub
fsub
fdivr
pop
popf
mov
add
xchg
xchg
jo
pop
fldcw
mov
pop
out
sarl
inc
cwtl
sbb
icebp
add
shll
sbb
iret
mov
mov
loope
add
cwtl
lods
stc
dec
ja
icebp
push
cli
testl
jno
and
dec
push
leave
int
inc
bound
sbb
out
mov
enter
add
add
mov
push
mov
sbb
pop
add
in
fstps
mov
mov
inc
push
mov
mov
mov
jmp
lret
je
dec
push
leave
sub
cmpsl
mov
cmp
in
popf
mov
add
test
negl
sti
pop
es
push
add
icebp
adc
aaa
test
rol
sbb
test
push
pop
clc
pushf
sub
rolb
mov
ret
arpl
dec
jmp
or
mov
push
pushl
or
rclb
pop
hlt
into
xlat
into
inc
sub
negl
mov
mov
in
mov
adc
iret
into
inc
add
mov
push
push
out
dec
dec
or
push
mov
xor
aas
call
scas
ja
cmc
iret
jle
pop
cs
aas
mov
incb
jmp
pop
inc
push
dec
xor
enter
mov
mov
push
out
repz
mov
mov
push
popa
aas
add
cmp
or
loope
dec
add
cmp
pop
jl
dec
in
inc
mov
loope
xchg
int3
pop
mov
mov
call
shrb
sbb
int3
mov
imul
icebp
jecxz
stc
insb
loope
lods
add
and
mov
xchg
insb
add
xlat
jmp
les
mov
add
push
rcl
push
push
push
mov
hlt
addb
add
add
sub
adc
out
in
hlt
xor
adcb
stc
cmp
je
push
shrb
stos
fcom
jecxz
push
aaa
sbb
inc
out
or
sub
out
arpl
jae
jmp
enter
inc
jle
push
fcmovnb
inc
cmp
bound
aad
add
cmpsb
int3
inc
pop
out
mov
hlt
push
dec
stos
jmp
les
cmc
outsb
mov
pusha
es
and
arpl
pop
dec
and
stos
sbb
nop
push
cmpsl
push
sbb
push
mov
push
and
mov
dec
repz
mov
incl
out
or
dec
mov
shl
mov
add
idiv
ret
adc
aam
shrb
lds
aam
adc
cmp
jp
dec
xchg
ss
mov
rclb
push
mov
fwait
xlat
add
and
inc
mov
push
cld
test
mov
dec
inc
inc
and
push
test
push
test
xchg
mov
sahf
ret
and
sarl
sbb
testl
xchg
inc
mov
adc
inc
bnd
repnz
pop
pop
aad
jns
or
mov
dec
jmp
rol
xchg
int
ret
jne
add
cmpl
jbe
movsb
insb
pop
pop
lds
add
add
pop
lret
imul
shr
cmp
in
sar
mov
sub
sbbl
mov
xchg
das
xchg
lods
adc
das
mov
mov
arpl
inc
xchg
mov
pop
and
add
out
daa
cmpb
popl
xchg
lods
mov
mov
insb
add
adc
sbb
cwtl
inc
pop
sbb
inc
mov
js
mov
mov
nop
inc
add
push
in
xchg
sbb
les
add
inc
push
or
fnstsw
adc
mov
aaa
add
mov
inc
les
test
sbb
cmp
sbb
aad
cmp
and
pop
loope
adc
and
int
mov
int
scas
test
aad
mov
jae
int
xchg
fnstenv
and
push
shlb
jmp
test
adc
les
ja
gs
or
ret
clc
jl
mov
and
ret
lcall
cmc
inc
int3
sbb
dec
mov
xor
call
add
push
gs
arpl
or
cmpsl
adc
int
pop
cld
push
rorl
roll
mov
sub
dec
out
imul
dec
call
stc
xchg
test
xchg
in
add
pop
push
xor
push
dec
jmp
mov
mov
imul
jl
cmp
testb
add
add
icebp
inc
add
cmp
or
jecxz
xchg
lds
rol
jno
or
mov
mov
outsl
movsl
in
dec
push
movsl
inc
call
mov
xchg
cmc
outsb
rcl
xchg
and
leave
mov
imull
push
scas
push
out
dec
push
popf
push
mov
pushf
cmc
inc
add
movsl
test
out
rclb
add
pop
jecxz
push
ljmp
add
shrb
loop
fdivl
adc
mov
pop
mov
pushf
std
push
stos
mov
into
mov
or
cltd
jle
shrl
or
loope
jl
fwait
adc
stc
nop
icebp
cmp
add
shll
cwtl
leave
pop
push
sbb
add
add
lcall
sub
sub
int3
inc
imul
cmp
jp
pop
adc
push
or
je
outsb
pushf
gs
or
push
int3
lods
outsb
popa
inc
cmp
rcll
xchg
xchg
xchg
jo
jb
dec
or
sbb
mov
lods
xor
insl
push
test
xchg
cmp
sub
xchg
mov
loope
adc
shrb
testl
mov
lea
clc
lea
add
push
add
inc
xor
jg
das
or
hlt
mov
inc
addr16
prefetcht0
push
dec
cld
orl
out
fisttpl
sbb
int
add
movsb
fsubrl
or
hlt
mov
inc
orps
out
add
push
mov
das
hlt
lods
inc
adc
adc
insb
jg
mov
dec
out
xor
ret
adc
xchg
imul
xor
adc
imul
aam
push
push
aam
ljmp
xor
add
sub
in
incl
mov
mov
cmp
mov
mov
or
cmc
jge
test
mov
xor
add
push
jge
jmp
into
stos
push
sarb
notl
ret
lock
insl
addr16
cli
out
stc
push
das
test
push
ljmp
ficoms
jo
loope
fdivrs
inc
sub
dec
cld
mov
sub
aas
push
shll
leave
test
subb
imul
add
mov
add
dec
enter
xchg
xchg
xchg
push
int3
add
rcll
shrl
iret
or
ds
cmp
sub
adc
ret
addl
cmp
pop
sbb
pop
cmp
lock
lods
add
mov
or
add
inc
ljmp
xor
jo
xor
xchg
jb
sub
push
sub
xchg
mov
outsb
or
cmp
les
sbb
ds
icebp
sub
mov
pop
vunpckhps
int
and
jmp
add
push
sub
adc
movsb
popa
mov
add
pusha
aas
mov
sub
dec
add
gs
mov
fsts
adc
xchg
xor
iret
mov
push
adc
aam
shl
jne
mov
dec
push
loope
adc
jne
mov
call
cmp
pop
cltd
jmp
mov
imul
adc
xor
int3
adc
adc
add
rclb
call
mov
fs
call
fcoms
stos
or
je
sbb
mov
jne
andb
push
popf
push
mov
aaa
dec
lret
negl
adc
test
sbb
xchg
mov
loopne
in
mov
jne
mov
sub
pop
add
sbb
jae
sbb
hlt
or
adc
push
add
inc
add
call
pop
orb
push
leave
repnz
fwait
gs
xor
dec
std
sbb
ret
mov
xor
loope
mov
cltd
out
gs
insl
sub
or
xchg
test
in
mov
fdiv
in
cwtl
add
add
sbb
aam
add
fnstcw
neg
cwtl
inc
test
pop
mov
cmp
mov
sub
add
push
je
jns
lds
pop
inc
je
cmp
out
pop
cmp
add
xchg
popa
scas
lret
inc
insl
stos
push
push
test
jo
pop
test
aaa
add
push
cli
fimuls
cmp
mov
jmp
add
into
jns
pop
mov
push
std
ret
cmc
push
ret
dec
in
jecxz
aas
in
lds
pop
sbb
inc
fcmovnu
fwait
test
sbb
es
mov
cli
mov
in
dec
or
lea
mov
mov
jl
sub
jns
xor
int
jmp
add
push
call
mov
push
cli
loopne
push
mov
cmp
aam
inc
ror
xor
inc
out
inc
dec
jb
rclb
add
adc
imul
xchg
dec
test
aam
add
adc
pushl
inc
pop
cmp
xor
pop
lea
add
inc
aad
jmp
lret
mov
addb
lods
xchg
inc
int
jp
mov
nopl
inc
cmp
mov
dec
pop
sub
inc
out
xchg
mov
pop
and
loope
ret
xor
shrl
jbe
popa
daa
adc
mov
ljmp
sub
mov
inc
push
adc
add
add
sarb
inc
inc
sarb
cmp
shrl
stos
dec
add
lret
icebp
sti
aas
push
xchg
sbbb
pop
inc
adc
sbb
jmp
insl
dec
and
pop
push
pop
int
in
leave
es
sbb
dec
aaa
adc
das
adc
movsb
cld
lahf
push
mov
rcl
jmp
cmp
add
cli
xlat
mov
jo
and
push
mov
push
add
je
dec
cmc
cld
xchg
sbb
xchg
or
imul
inc
cld
pusha
fnstcw
cmpsl
xchg
sbb
cmc
xchg
ret
dec
inc
fcomps
imul
out
adc
addl
adc
add
add
popa
or
stos
aad
punpckldq
dec
or
mov
shlb
repz
dec
add
push
ss
lcall
pop
popa
into
into
xor
push
fs
and
inc
add
lahf
into
aaa
xor
dec
fwait
sbb
sti
popf
add
popa
push
cmp
xchg
inc
ss
mov
dec
add
int3
das
inc
in
push
das
cld
mov
and
rol
xor
jle
std
pusha
cmp
gs
jne
clc
push
leave
test
sub
inc
jne
mov
imull
push
sub
mov
jge
test
int3
sysret
lret
jge
mov
add
jnp
cmp
push
dec
cmpl
lret
xchg
push
imul
mov
jl
pushl
loop
sbbb
lret
insl
dec
ljmp
mov
mov
xchg
lds
mov
mov
fwait
out
inc
add
mov
pop
sahf
xorb
add
std
mov
data16
call
jmp
push
push
iret
mov
hlt
mov
sub
adc
mov
shlb
mov
dec
sub
sub
inc
lods
mov
or
leave
dec
out
fstp
in
add
lea
add
movsb
add
aad
ljmp
sub
popa
mov
cmp
xchg
movsl
inc
outsl
or
cmp
clc
xchg
xor
add
sahf
and
jp
fcoml
cmp
or
loop
mov
pop
aad
inc
pusha
pop
aas
into
movsb
inc
inc
outsl
icebp
mov
ret
and
inc
lcall
mov
add
inc
mov
push
lahf
jb
insl
test
mov
mov
ret
shll
inc
cmp
fnstsw
fnsave
mov
add
xor
mov
mov
mov
lea
bound
dec
mov
imul
inc
ds
lret
das
adc
mov
jp
add
lret
out
push
addl
iret
rcr
inc
adc
add
jle
and
mov
fistps
mov
fadds
inc
fcomip
mov
jle
mov
inc
jecxz
stos
cmp
dec
andb
mov
inc
ret
imul
arpl
adc
jg
mov
test
mov
fimull
scas
mov
test
in
mov
scas
push
out
pop
inc
fwait
out
dec
fisubrs
pop
or
push
movsb
xorl
pop
pop
cmp
inc
mov
mov
cli
or
out
movsl
xchg
inc
lods
pop
pop
mov
xor
add
mov
add
mov
add
xchg
push
aas
incb
movsl
jg
or
adc
mov
sar
inc
sbb
outsl
jns
subb
mov
addr16
and
les
outsb
push
push
xor
inc
sarb
stos
sbb
mov
ret
fnsave
frndint
js
sti
imul
flds
das
dec
js
push
popl
xor
xlat
jnp
loopne
mov
fsubs
add
cld
in
pop
mov
mov
adc
xor
sbb
das
into
xor
pop
inc
cmpsl
xlat
sub
out
sbb
sub
inc
sbb
cmp
pop
adc
push
rcrl
rclb
ret
sbb
mov
pop
add
xchg
inc
bound
push
mov
les
movsl
pop
loopne
shrl
push
sub
fstps
scas
fstps
shrb
shl
call
xor
ss
movsl
dec
add
cmpb
or
test
mov
in
push
test
and
ret
icebp
shlb
nop
or
adcl
add
add
sub
inc
rol
pushl
mov
add
shlb
outsb
stos
cmpb
inc
xchg
inc
test
adc
mov
cltd
mov
xchg
xlat
ret
aad
dec
aad
add
rorb
xchg
inc
mov
in
xorb
mov
adc
std
xor
inc
adc
or
add
mov
cld
inc
cmp
xor
divb
movb
out
aaa
jno
dec
adc
aaa
inc
ja
cmpsl
push
in
clc
aas
xor
ret
sbb
dec
mov
sbbl
push
mov
push
std
or
push
inc
push
scas
cmp
add
das
jp
pop
fstp
cmp
inc
inc
std
jb
push
std
push
push
std
push
push
push
std
add
roll
adc
lds
shrl
ret
sysenter
shlb
push
stos
jg
lret
in
push
xchg
cmpsb
mov
xor
mov
ja
pop
pop
clc
cmpsl
xchg
in
sbb
pavgw
and
dec
lea
sti
mov
sub
add
fcoms
push
add
in
add
xchg
add
int
add
mov
sbb
add
mov
push
ja
mov
add
movsb
addb
lds
sub
inc
fs
shrb
xchg
cmp
lds
aad
jmp
pop
sub
jmp
sub
inc
jmp
jae
xor
test
sub
inc
cltd
add
scas
dec
mov
dec
sub
add
add
roll
inc
or
dec
xor
loope
sub
xor
sub
je
and
in
sbb
shrl
push
stos
mov
pop
test
inc
xor
pop
jb
loopne
pop
jle
dec
add
push
cmpsl
adc
test
test
sarl
add
mov
add
lds
add
nop
mov
ja
xor
and
in
sbb
mov
inc
aaa
mov
dec
ja
into
test
es
pushl
jle
pop
xchg
sub
clc
inc
mov
mov
jne
xor
sub
mov
add
mov
je
dec
inc
std
dec
xor
add
mov
add
add
add
jne
dec
popa
test
test
jmp
xor
push
or
mov
inc
imul
cmp
add
jbe
or
gs
fcoms
cmp
adc
add
sbb
mov
cmp
mov
inc
push
pop
pop
cmp
popf
sbbb
jmp
mov
jecxz
sbbb
sub
xchg
jg
xchg
fildll
scas
out
xchg
lods
pop
movsb
adc
ret
push
mov
shrl
cmp
cld
leave
adc
push
in
jmp
cwtl
dec
lods
add
in
ljmp
cld
jmp
pop
fsubrs
mov
shrl
add
cld
pop
andnps
lods
test
add
add
mov
add
sbb
jl
add
into
lods
and
add
cmp
ja
call
jo
and
pop
rolb
xor
fisubs
or
dec
cmpl
rcrl
adcl
adc
ljmp
shrb
sub
mov
pop
mov
scas
jmp
adc
and
inc
add
inc
add
int
add
inc
sbbb
pop
and
rcl
mov
int3
lock
mov
call
pop
push
mov
int3
mov
ret
enter
test
test
xchg
mov
fcomi
inc
push
xor
xlat
adc
int3
lock
ss
and
jno
mov
clc
pop
mov
retw
sub
sub
mov
push
push
jg
xchg
vmread
es
xor
test
adc
sub
push
lods
xchg
sbb
push
je
dec
ret
std
push
and
sub
icebp
js
sbb
add
cmp
mov
lret
add
out
mov
sbb
mov
xchg
add
lods
jg
pop
popf
ret
and
cmp
into
lods
add
call
push
add
and
mov
shrl
lcall
pop
adc
scas
add
cmp
add
shll
les
mov
pop
addb
add
rcr
xchg
xchg
orb
pop
inc
stc
fstpt
mov
pop
in
movsb
push
mov
test
ret
push
sub
push
iret
lods
add
xchg
push
adc
lock
imul
mov
push
xchg
lods
push
jae
insb
adc
rcrb
ret
ret
rcll
ret
clc
push
mov
bound
lahf
jno
xor
add
add
xchg
enter
inc
jmp
popa
xchg
inc
jo
in
push
pusha
popa
in
pop
inc
dec
and
jmp
cmp
mov
icebp
dec
pop
mov
jmp
sub
in
inc
push
and
mov
out
push
sub
loop
add
leave
das
and
xbegin
add
roll
sahf
incb
sbb
jecxz
loope
sbb
stos
aaa
iret
inc
mov
mov
inc
jne
out
jne
xor
add
mov
pushl
fistpl
inc
fistl
push
inc
notl
jne
in
jne
mov
ss
cltd
pop
adc
xchg
pop
sbb
adcl
add
adcl
je
sbb
and
adc
je
xor
pop
mov
and
push
cmp
mov
adc
call
mov
xor
mov
adc
into
push
cli
pop
mov
cmp
inc
add
gs
std
mov
mov
push
addr16
rolb
add
and
std
push
adc
std
sub
push
mov
or
mov
add
psubb
pop
inc
jecxz
jne
add
mov
xor
popf
shl
and
sbb
ret
pushf
addb
pushf
mov
push
mov
daa
les
cmp
ret
testl
ss
xchg
pusha
loope
xchg
fsubr
shll
cmc
je
pop
ds
out
repz
cli
aaa
cmc
jmp
je
ficomps
insb
lret
fildll
mov
cld
ficoml
lods
rorb
dec
xchg
and
xchg
mov
test
jmp
sbb
roll
jp
ficoms
aam
jns
add
les
mov
movsb
aas
push
int3
mov
aad
dec
adc
cwtl
xchg
dec
mov
fisubrs
sbb
push
xor
mov
mov
xchg
pop
dec
adc
repz
pop
sbb
push
cli
cs
outsb
push
xor
cwtl
xchg
push
cltd
out
dec
add
sub
push
or
shl
add
cmp
aas
mov
sarl
adc
aad
add
sbb
pop
inc
add
mov
adc
mov
and
iret
jle
dec
dec
xorl
hlt
jl
mov
ret
add
aam
inc
push
mov
mov
outsl
stos
or
sbb
mov
test
push
mov
fwait
mov
mov
or
cmp
insb
lock
dec
pop
xor
add
xchg
adc
rcrb
movb
sub
adc
loopne
push
popa
sti
cmp
jge
cld
inc
data16
dec
mov
je
mov
mov
add
ss
outsb
mov
jnp
inc
or
adcl
mov
std
mov
cs
inc
add
mov
cld
dec
pop
cmp
sub
fldcw
adc
or
movsb
stos
and
inc
jg
add
add
lods
js
push
push
cmp
add
xchg
pop
jle
mov
shrl
sarl
shll
push
shrl
mov
nop
lock
add
add
sbb
pop
les
outsb
add
push
jae
das
jp
xchg
incb
movsl
mov
xchg
andb
call
adcl
inc
sub
loop
rclb
dec
and
dec
pop
pop
dec
or
pushf
cld
inc
jmp
ss
out
or
and
add
mov
stos
pop
sbb
out
adc
push
push
sub
sub
popa
mov
xchg
aas
call
and
or
xchg
adc
mov
std
inc
sub
push
cli
mov
add
ret
rclb
push
shlb
je
sbb
stos
outsl
pusha
sub
je
test
clc
cli
sub
or
pop
das
add
inc
xchg
sbbb
inc
add
cwtl
cmpsl
push
das
aad
add
pop
dec
inc
iret
mov
call
mov
inc
add
repnz
push
sbb
test
js
push
test
push
pop
sahf
out
lret
stos
mov
mov
inc
mov
aas
adc
sbb
adc
xchg
jbe
mov
cmp
push
cs
decb
sbbl
jne
lret
xchg
inc
mov
add
inc
jmp
adc
cmc
mov
mov
push
imul
lcall
imulb
lods
movb
push
sub
std
or
test
jo
and
jg
add
shrb
lahf
repnz
fisubrl
jl
aad
cltd
xchg
test
call
lcall
or
sub
add
shll
lahf
lock
js
inc
addr16
ljmp
and
and
add
push
leave
lods
ja
dec
mov
inc
rorl
js
sbb
mov
sbb
xchg
lahf
fsubl
and
ja
dec
inc
aas
repz
add
sbb
pop
jne
idivl
sbb
leave
into
scas
sub
fstps
adc
sub
stos
xor
sub
mov
das
ss
dec
ljmp
add
add
int3
xor
dec
or
hlt
mov
sub
int3
xor
dec
or
mov
dec
or
in
push
sbb
sub
popa
dec
push
mov
aad
add
lret
pop
or
into
push
cwtl
adc
addl
mov
cld
mov
push
movsb
movd
int3
clc
push
sub
adc
add
sub
add
jbe
pop
sbb
adc
mov
jl
pop
ljmp
mov
jae
lcall
pop
lcall
cwtl
sub
add
cmp
add
je
out
jbe
sub
dec
dec
xchg
dec
push
pop
cld
add
sub
jae
cmp
outsb
shl
sarl
mov
lods
push
stos
lods
cmpsl
sti
mov
sahf
stc
jb
lods
sbb
divl
cld
xchg
std
mov
cmp
imul
std
sub
pusha
orb
cmp
lahf
xchg
mov
push
movsl
push
cmp
mov
cmp
dec
cmpsl
int
test
leave
lods
outsl
gs
or
inc
daa
sti
adc
sbb
jmp
popa
test
ret
push
mov
out
outsb
inc
pop
inc
adc
mov
ljmp
mov
jmp
xchg
test
lds
or
jmp
add
lcall
push
push
adc
lds
movups
popa
adc
bound
push
mov
mov
dec
or
lcall
cmc
lcall
icebp
int
mov
mov
subb
ficompl
inc
pusha
push
mov
or
xor
push
in
movb
or
add
enter
stos
push
lods
push
mov
shrb
push
cmp
rorl
cmpsb
inc
sub
pop
jbe
stos
fmuls
push
in
push
add
fidivrs
add
jbe
push
sbb
rolb
inc
jo
mov
add
clc
xor
cmc
test
mov
add
add
add
sbbl
lods
or
inc
add
jne
lea
adc
sub
cmpsl
decl
push
xorl
jno
dec
repz
inc
ja
dec
ljmp
fidivrs
or
scas
aas
add
cmpsl
sub
sbb
jbe
push
push
testl
add
cmpsl
xchg
sub
iret
sub
imul
inc
add
sub
leave
repnz
dec
ret
mov
push
movsl
add
dec
dec
inc
mov
push
std
push
mov
fwait
std
xor
dec
inc
push
lods
xchg
inc
xor
mov
call
dec
shl
out
adc
out
inc
fcmovne
adc
insb
add
adc
out
andl
jp
out
or
out
sub
icebp
sti
adc
inc
repz
mov
call
dec
fs
mov
mov
out
sub
stos
out
jnp
xlat
lahf
and
push
dec
imulb
addr16
lods
mov
add
les
push
shrl
imul
pusha
and
stos
aad
lahf
push
adc
stos
rolb
out
push
cmp
stos
shrl
mov
pop
sbb
inc
outsb
dec
stc
or
push
int3
movsb
in
test
std
lds
xchg
shl
mov
stos
or
push
mov
lods
leave
pop
js
xor
mov
stc
or
xchg
add
push
jno
rclb
cmp
loope
andl
mov
into
or
mov
test
or
jg
movb
mov
jne
cmc
xor
mov
jno
push
int3
inc
xchg
inc
call
hlt
push
sbb
xchg
inc
push
push
repz
pop
pop
stos
lcall
push
incl
mov
push
mov
push
cmpsl
sbb
pushf
mov
ljmp
mov
mov
inc
xor
sub
cmp
ja
add
xchg
int3
inc
jae
add
push
jno
hlt
cmp
inc
mov
push
cli
inc
neg
inc
inc
jae
add
push
out
outsb
pop
call
mov
stc
inc
add
inc
scas
push
add
xchg
mov
outsl
push
jge
hlt
outsb
cmpsl
pop
xchg
cmpsb
aad
mov
leave
inc
adc
scas
pop
xchg
jle
sub
testl
dec
xlat
sbb
dec
subps
leave
jge
je
jae
hlt
push
shll
or
pop
in
adc
mov
cltd
xchg
orb
fsubs
cld
add
pop
addr16
mov
cld
and
cli
jbe
inc
ljmp
pop
out
nopl
xchg
in
xor
cmovg
jne
push
mov
xchg
or
lods
add
movb
or
inc
daa
fcoml
daa
sbb
loop
push
sub
push
rcr
loop
fldl
neg
mov
add
test
out
push
adcl
enter
adc
pop
decl
mov
push
fcomp
rol
test
neg
inc
adc
push
pop
int
push
adc
call
add
mov
adc
pop
cmc
sub
add
sbb
push
aaa
or
mov
leave
fildl
jmp
sbb
mov
add
mov
ljmp
mov
nop
icebp
int3
inc
pop
fstpl
pop
lret
test
jecxz
lea
fnstenv
inc
xor
jo
dec
sbbl
push
inc
push
jl
or
into
push
cmp
pop
punpckhdq
pop
test
sbb
shll
ret
and
sbb
add
pop
cmpsl
mov
xchg
mov
test
jne
pop
jb
push
add
aad
and
or
cli
adc
inc
fiadds
push
rcll
or
je
cltd
add
and
repz
lret
aam
sbb
std
jbe
sar
popa
jbe
adc
push
jae
js
inc
or
psrad
add
push
cli
sarb
ret
cmpsl
jmp
fdiv
sbb
mov
push
rcrb
xchg
or
mov
dec
movl
dec
nop
fmuls
hlt
notb
jns
test
push
gs
lahf
rcll
rorl
xor
push
shll
sbb
andl
lret
push
or
lahf
xchg
test
push
mov
ss
subps
jl
stc
fisubs
shrb
add
les
or
andb
mov
xchg
scas
setne
fldl
or
jmp
pusha
adc
mov
lods
add
mov
jns
push
xchg
or
daa
int
xor
lods
or
mov
notb
push
add
mov
sbb
addl
rolb
sahf
test
xor
aad
dec
dec
jmp
data16
call
and
lods
imul
rcrb
pop
adcl
and
xor
sti
push
adc
lahf
mov
imul
mov
cltd
lret
push
les
add
cltd
jp
sbbb
pop
jmp
mov
or
addb
dec
add
and
mov
jnp
ds
loope
je
cmp
sbb
mov
stos
hlt
fs
cmp
mov
aaa
and
into
mov
xor
cmpsl
pop
add
mov
aas
add
adc
mov
add
clc
ret
in
cmpps
push
insl
add
dec
adc
pop
cli
sub
xor
adc
cmp
pop
mov
xchg
ljmp
mov
sub
cmp
dec
xor
clc
or
push
addl
es
cld
push
cli
inc
mov
flds
push
addl
in
ds
sbb
cli
inc
mov
mov
fidivs
jmp
push
add
and
or
pop
out
daa
seto
shlb
jo
dec
and
pop
fisttpl
dec
insb
push
pop
outsl
sub
jmp
inc
add
add
shrl
ja
femms
das
jmp
iret
add
popa
cmp
int
xor
push
outsl
fsubr
sahf
fnstenv
dec
in
dec
and
fcomps
pop
stos
xor
mov
inc
mov
add
ss
aam
sub
pop
roll
cmp
adc
pop
add
xchg
xchg
mov
add
pop
add
in
add
icebp
aas
dec
xor
mov
lea
les
xchg
imul
loopne
dec
ds
mov
xor
test
sbbl
subl
shlb
adc
sar
xlat
lcall
test
mov
sarb
xlat
add
test
jnp
fwait
scas
cmpl
pop
inc
add
mov
iret
push
fiadds
mov
xor
push
xchg
cmp
xchg
dec
inc
xor
jnp
push
fwait
scas
jmp
push
xchg
imul
inc
cmp
ss
jne
cmp
shrb
test
xchg
add
ja
inc
movsb
outsl
mov
mov
repz
cmc
int3
das
xor
rolb
hlt
dec
add
pop
sbb
or
sub
pop
xor
sbb
cmp
std
stc
pop
inc
push
popf
mov
push
mulb
loope
sbbl
addb
lock
pop
mov
jbe
ja
add
rclb
movsl
xor
add
movsb
fwait
std
jns
mov
std
add
imul
movsb
xchg
std
jg
mov
push
jg
sbbl
mov
pop
mov
push
shll
mov
loope
sub
dec
sahf
clc
addl
test
xchg
mov
pop
in
stos
push
and
adc
int3
cld
pop
roll
ret
push
mov
lods
jmp
push
jno
cltd
sar
roll
call
add
sar
sub
or
mov
sub
rcll
addl
mov
mov
arpl
or
sbb
daa
ret
and
push
roll
sahf
insl
mov
jb
stc
es
push
add
test
sbb
jge
and
adc
sbb
add
pusha
rolb
adc
clc
pop
add
add
call
or
mov
jge
roll
add
jmp
gs
pop
inc
roll
cmp
cmp
shrl
xor
addr16
pop
lret
icebp
inc
mov
inc
stos
jbe
push
mov
adc
inc
add
pop
pop
pop
sahf
es
inc
aaa
pop
lds
add
push
aam
lea
mov
or
sub
aam
lea
mov
lea
adc
jb
dec
inc
ja
xorl
insb
mov
daa
std
dec
and
les
or
sbb
add
imul
dec
imul
ret
std
into
je
push
adc
push
mov
jg
push
icebp
xchg
mov
mov
xchg
std
fnstenv
or
push
inc
add
jbe
je
enter
sub
cli
and
test
stos
mov
jg
gs
add
push
add
add
jo
hlt
movsl
shlb
add
dec
daa
js
decl
sarb
clc
mov
sub
sub
lods
pop
sbb
inc
add
pop
dec
daa
js
cmp
in
cmc
cmp
and
push
and
sbb
add
sar
pop
push
dec
jo
incb
sub
sbb
hlt
shrb
add
shrb
dec
cmpsb
mov
stos
cmp
fcmovnbe
or
adc
cmp
cmp
stos
into
xor
push
mov
testb
sar
sub
mov
mov
ja
xorl
aam
call
in
xorl
jge
loope
fcomps
mov
add
inc
addb
fs
int3
mov
mov
xor
mov
sub
mov
stos
sbb
inc
mov
xchg
pop
inc
jmp
fst
mov
inc
ja
orl
jge
add
imul
ja
cmp
pusha
pop
into
add
inc
add
sbb
mov
int3
clc
mov
lods
aaa
int3
into
lret
mov
lock
xor
sbb
mov
xor
fistpl
insl
add
and
lock
or
lea
adc
pop
insl
mov
test
rcr
ret
psubusw
lcall
jecxz
add
cld
cmp
jbe
jno
xchg
add
add
xchg
pop
clc
mov
fistps
fsubr
inc
cmp
ljmp
xchg
pop
xchg
adc
stc
add
or
jg
and
xchg
sbb
inc
cmp
push
sbb
sub
mov
add
movsl
sub
adc
pop
ljmp
push
inc
adc
pop
ljmp
pop
rcrl
add
fldz
add
cld
pop
pop
fimuls
jmp
rorb
into
dec
das
or
jb
shrl
cmp
adc
mov
pop
fdivrl
jge
jp
int3
daa
dec
add
les
cld
cli
rorb
shrl
jbe
testb
adc
lods
cli
adc
add
lret
sbb
lods
sbbb
pop
mov
mov
fsts
inc
xchg
adc
in
inc
jmp
mov
jmp
ror
movsb
andl
mov
test
sbb
rorl
add
inc
jmp
rorb
xchg
aas
sbb
insb
mov
add
pop
roll
outsb
in
inc
out
mov
inc
add
addr16
mov
call
dec
sbb
leave
inc
add
int
inc
out
mov
inc
push
fs
int3
enter
inc
cld
mov
in
xchg
inc
subl
xchg
mov
push
jp
mov
sbb
popl
pop
or
jge
aam
test
xchg
scas
lgs
incl
fiaddl
hlt
jle
mov
std
push
ds
div
les
cmc
lret
lcall
dec
pop
dec
push
sub
mov
mov
push
sub
mov
popa
rcr
and
pop
pop
jp
push
cmp
push
mov
mov
add
js
ljmp
mov
cmc
cmp
jbe
sub
xchg
cmpsl
test
sbbb
mov
cmp
push
int
xchg
insb
xchg
daa
xchg
es
testb
inc
call
pop
mov
mov
aaa
cmp
or
shll
pop
cs
jp
lds
js
lds
add
mov
push
inc
sub
pop
int3
movsb
add
dec
lock
push
clc
repz
mov
lret
popf
adc
icebp
cmpsb
jne
adcl
test
xchg
testl
lods
xchg
shrb
dec
add
dec
add
mov
neg
mov
dec
lretw
sti
imulb
cli
rolb
add
sgdtl
and
popa
or
movsl
pop
sarl
cmc
aad
mov
mov
lahf
hlt
testl
mov
pusha
aam
into
lods
imul
mulb
loopne
mov
daa
xor
rorl
sarb
in
push
ljmp
add
push
stc
inc
pop
cmp
add
lahf
jbe
call
jnp
ss
xchg
mov
pushl
add
aam
add
adc
inc
cmp
dec
mov
mov
orl
pop
ds
add
jbe
adcl
adc
cld
or
add
shrl
add
pop
mov
jne
faddl
add
push
lock
imul
jo
fwait
cli
or
push
dec
or
or
push
imul
jae
je
mov
cmc
pop
cmp
xor
adc
aaa
xor
cmp
or
pop
sahf
mov
mov
mov
pop
cli
cmc
shlb
out
add
jl
std
adcl
je
sbb
mov
fwait
stos
adc
lret
in
call
xchg
lods
mov
out
jle
sub
xor
insl
pop
push
sub
xlat
popa
mov
jns
test
inc
add
dec
in
jl
call
and
dec
insb
clc
popf
jle
add
push
mov
stos
add
addr16
pop
push
fwait
adc
mov
cmc
fistpl
mov
pop
enter
jg
shrl
and
add
rol
add
lret
fcompl
test
jae
dec
dec
in
negl
addr16
xor
call
mov
sti
sbb
inc
push
cmc
inc
out
sahf
leave
inc
jmp
call
rol
icebp
sbb
dec
fs
roll
popf
jns
sbb
dec
scas
jmp
loope
sub
clc
call
mov
pushf
pop
addr16
mov
sbb
hlt
mov
jmp
pop
inc
add
or
rclb
ss
xchg
pop
dec
adcl
add
add
mov
stos
cwtl
scas
or
je
adc
ret
loopne
jmp
pop
mov
lcall
daa
ss
test
int3
inc
cmp
inc
push
adcb
in
lea
testl
inc
push
mov
mov
sub
nop
mov
add
mov
ret
or
shl
ret
icebp
xor
push
mov
call
mov
jmp
mov
call
adc
or
loop
rcrb
adc
cmp
ljmp
fwait
mov
cmp
popf
xchg
mov
movsl
mov
mov
add
xor
cmp
jecxz
jno
jmp
out
stc
inc
add
rcl
test
cmp
push
popa
inc
sbbl
adcb
push
fst
test
aad
xor
xchg
pushf
movsb
add
gs
cmp
ljmp
shll
enter
int3
push
pop
cwtl
repnz
lods
movsb
jp
loope
lds
std
int
jecxz
xor
cs
sub
cmpsl
push
adc
leave
out
stos
js
loope
mov
inc
shr
inc
push
pop
imul
out
push
js
cld
aad
not
filds
pop
pop
fstpt
adc
test
xchg
push
jne
out
push
adcl
xchg
shll
inc
ljmp
xor
add
test
ret
mov
bound
mov
test
sbb
fcmovnb
rcrb
inc
push
shrl
jmp
xchg
mov
mov
fisttpll
jge
out
inc
lods
aad
xor
mov
push
sbbl
xchg
mov
add
push
mov
add
mov
sub
jge
ret
cmp
mov
pushl
mov
mov
adc
pop
dec
mov
leave
int3
dec
pop
dec
mov
lods
xor
mov
or
ret
inc
adc
push
outsl
mov
call
push
adc
aad
shlb
int3
inc
jnp
jae
flds
push
xchg
inc
xor
xchg
sbb
mov
adc
daa
test
test
sub
jmp
arpl
std
lcall
sbb
negl
std
adc
push
inc
push
out
adc
push
adc
divsd
and
push
outsl
jnp
and
call
in
mov
enter
into
sbb
std
add
inc
lret
sbb
std
adc
push
inc
push
add
cltd
mov
inc
call
addl
rorl
xlat
mov
inc
mov
call
jmp
mov
fsubs
ret
sub
add
sbb
mov
dec
iret
lods
add
pop
in
push
shll
push
add
lds
daa
out
jmp
test
jmp
xchg
hlt
add
xor
pop
and
cmp
scas
add
push
adcl
sbb
inc
jmp
sub
inc
es
sarl
add
adc
jo
mov
push
in
dec
addr16
into
inc
jmp
sub
inc
rorl
loop
add
fnstsw
jb
mov
insb
in
gs
loop
inc
in
jge
add
ljmp
inc
push
sub
jmp
ror
adc
ret
mov
popl
int3
imul
lds
jo
adc
call
jbe
pop
jmp
cli
mov
jae
push
add
sub
lock
sub
incl
aaa
and
into
int3
push
pop
inc
jmp
pop
test
inc
and
adc
mov
dec
mov
jle
ja
inc
pop
and
ss
mov
sub
push
subb
add
push
or
xchg
pop
sbb
inc
jmp
mov
push
add
lahf
repz
mov
orl
sbb
add
clc
int3
inc
push
iret
or
ljmp
and
idivl
loop
push
push
jbe
std
jns
add
jge
or
push
dec
stc
jne
dec
out
adc
adc
addr16
insl
or
punpckhwd
cs
clc
je
add
jo
out
addb
insl
add
push
sti
repnz
mulb
std
loope
addl
add
sub
inc
cli
sbb
ds
ja
mov
dec
and
lock
pop
sar
mov
leave
or
mov
sub
adc
sub
jnp
pop
mov
enter
popf
rclb
xchg
cwtl
cwtl
call
loop
clc
push
fnstcw
mov
call
sub
sub
or
xor
ss
fidivrl
sub
sbb
ret
xor
test
lods
clc
inc
jbe
out
int
sbb
xlat
das
lock
out
out
dec
inc
jmp
ficompl
jo
mov
cmpsb
and
lea
loop
into
cmpsb
or
lret
add
sbb
push
and
sbb
ss
outsl
pop
ljmp
out
fldenv
ljmp
inc
jo
lods
pop
ror
fs
bound
jle
repnz
call
in
fnsave
sarl
call
and
push
hlt
out
inc
mov
ss
scas
mov
mov
add
pop
sbb
adc
shrb
add
ret
mov
push
hlt
xchg
inc
decl
cmpb
mov
inc
pop
xchg
xchg
in
or
lahf
clc
mov
pop
push
jmp
sub
adcl
je
dec
adc
test
mov
push
stos
adc
ljmp
jo
std
std
xchg
pop
jl
inc
std
add
scas
inc
cmp
lcall
ja
call
clc
dec
test
cli
inc
add
push
std
jmp
adc
add
lcall
jb
and
rclb
cltd
lock
fdivp
cli
jae
or
adc
push
inc
push
ja
or
roll
pop
add
fistl
jg
iret
lods
add
stc
cli
out
shl
inc
add
aam
sub
add
loopne
lods
push
fwait
mov
xchg
add
das
add
and
adcl
lods
pop
leave
dec
je
ja
and
cmp
and
add
adc
shll
pop
inc
inc
and
add
pop
cltd
mov
pop
lods
or
jns
inc
jmp
cs
cs
push
fistps
stc
pop
seta
mov
incl
stos
into
and
fwait
in
push
mov
inc
shll
aas
jb
lods
pop
shll
jmp
into
movsl
dec
imul
add
shrb
inc
xchg
add
lcall
xorl
in
pusha
fisubrs
add
mov
mov
dec
test
mov
int3
inc
divl
aas
mov
push
mov
icebp
push
lea
icebp
dec
push
cwtl
mov
pop
and
pop
dec
adc
mov
inc
adc
stos
jg
push
mov
add
sarl
lret
mov
mov
add
xchg
add
mov
push
jmp
out
or
jecxz
call
mov
pop
adc
mov
shl
pop
call
sbb
and
ja
and
popa
jns
xchg
mov
xcrypt-ofb
cmpsl
stos
pop
mov
dec
xchg
int
push
jno
sub
dec
in
int3
jge
movb
pop
icebp
adc
and
jae
sbb
adc
loopne
add
rcll
xchg
push
cmp
cmp
sub
icebp
std
popf
scas
icebp
jae
icebp
jns
xor
push
dec
cld
lds
fdiv
push
push
inc
xor
dec
cli
sarb
incb
adc
pop
cmpsl
mov
mov
dec
sbb
xor
repz
loopne
test
rorb
nop
add
shrl
pop
shll
into
movsl
loopne
xchg
mov
lods
jecxz
lods
add
xchg
pushf
mov
enter
ret
iret
fbstp
in
shlb
call
xchg
lods
addb
add
add
inc
pusha
fidivs
cmpsb
into
fisttpll
or
inc
shll
mov
add
imul
call
ret
add
inc
mov
into
mov
sbb
pop
sub
dec
adc
les
outsb
adc
adc
out
mov
inc
cmp
mov
sub
jmp
cli
sub
mov
sub
push
mov
add
cmpsl
sar
push
cwtl
lea
xor
and
pop
and
enter
test
int3
iret
jl
stos
push
inc
and
add
push
rcl
xchg
inc
andb
dec
add
jmp
cmp
cwtl
pop
push
add
jnp
or
mov
adc
rol
clc
loopne
inc
push
out
sub
pushl
sbbb
jnp
push
mov
test
test
ss
sti
mov
cltd
xor
xchg
fsubrs
add
call
mov
dec
popf
or
sbb
cwtl
xlat
add
push
shr
je
jno
cld
aaa
push
jl
add
imul
jae
jb
rorb
fucomip
push
push
mov
push
mov
sub
or
push
sbb
lds
xchg
push
adc
fwait
cmp
push
or
shrl
int3
scas
pop
sub
push
shrl
add
xorl
jge
call
add
add
fnsave
loop
xchg
mov
jnp
lds
out
cld
add
mov
push
rcrl
xchg
data16
and
jno
fsts
addr16
data16
add
rcrl
les
leave
scas
add
adc
mov
out
lcall
rcll
mov
fcoml
sub
fildl
adc
jmp
inc
fnstsw
add
mov
inc
fwait
gs
add
adc
mov
mov
and
or
or
into
inc
fwait
insl
shlb
pusha
int
cmp
dec
xchg
cli
neg
mov
scas
out
mov
xchg
xor
jle
stc
mov
push
aad
cli
mov
fstpt
push
add
push
add
nop
mov
sbb
aad
push
mov
fildll
cmp
test
sarb
call
into
xchg
mov
push
lahf
int3
pusha
add
mov
stos
jnp
sub
jae
sub
xlat
mov
inc
sub
adc
repnz
mov
cwtl
sub
fdivs
push
dec
test
aad
add
mov
mov
into
jne
cmp
int3
push
sbb
sbb
call
fisubrs
push
mov
mov
push
mov
inc
or
inc
gs
into
pop
or
leave
dec
push
and
fcompl
sti
cmp
outsb
mov
push
call
push
je
nop
inc
jmp
xor
std
outsb
mov
push
inc
push
jno
or
and
stc
out
xchg
jnp
mov
shlb
scas
lock
daa
jae
fsts
fwait
cld
sti
or
es
add
push
push
aaa
les
sti
rorl
jae
fstps
into
push
sbb
mov
cmp
add
fs
repnz
push
or
mov
scas
adc
jns
xchg
and
into
sti
fdivs
or
mov
add
xchg
scas
rcr
inc
adc
ret
fcom
adc
fadds
lock
test
lretw
push
popa
jmp
jne
push
lahf
in
mov
add
mov
adcb
push
jle
mov
or
inc
xchg
inc
add
sub
push
mov
pop
fnstenv
call
sub
ss
mov
push
lock
decl
cmp
pop
or
jmp
push
push
stos
ret
out
mov
pop
pop
lods
or
push
fcom
inc
push
mov
int3
lahf
adc
js
stc
jmp
pop
rcrl
jmp
cli
sbb
inc
add
mov
nop
inc
roll
or
pop
jbe
roll
js
sub
roll
mov
rcll
lea
in
or
icebp
mov
push
add
rcll
lea
aad
mov
sub
add
mov
pop
lea
in
or
push
insl
add
jne
or
and
mov
ret
shlb
sarl
jbe
arpl
and
arpl
jbe
addl
in
std
mov
sbb
lds
in
std
cmpsl
cmp
in
out
std
xchg
aas
mov
std
lahf
scas
dec
add
call
out
std
add
push
pop
jo
cmp
imul
inc
sub
sbb
mov
mov
cs
lahf
push
inc
push
rcrb
insb
jmp
and
popf
fimuls
push
imul
stos
mov
jg
cld
or
sbb
xchg
pop
movsb
fwait
xor
lock
adc
stos
pop
dec
imul
add
lods
push
fdivs
inc
mov
insl
push
cmpsl
in
lahf
es
inc
pop
adc
lods
push
jo
xor
cmc
out
mov
sbb
das
les
adcl
lret
std
lret
ss
sub
into
cmpsl
fs
mov
aas
jmp
sbb
jne
mov
jmp
add
pop
mov
pop
lea
cmp
add
pop
lea
mov
push
pop
loope
xchg
pop
push
ja
mov
sbb
push
inc
jmp
ds
dec
jmp
dec
mov
stos
xor
mov
add
push
stos
adc
pop
adc
pusha
mov
add
add
add
add
push
stos
adc
xchg
pop
adc
roll
xchg
pop
adc
xchg
pop
adc
and
ja
ret
mov
and
push
xor
aas
add
jmp
pop
jle
test
inc
add
jg
xchg
xchg
sub
inc
arpl
mov
fwait
push
iret
inc
subb
addl
add
add
insl
in
add
call
push
mov
push
in
pop
mov
inc
pop
test
flds
aas
dec
gs
call
out
or
cmp
fstl
shrl
popf
nop
loop
mov
outsl
repnz
data16
dec
testl
add
push
call
aad
fsubp
cmp
popf
loope
or
push
shll
dec
nop
cmpsb
push
dec
pusha
loopne
inc
xchg
push
dec
jo
adc
outsb
cld
pushf
shll
add
shrb
add
lods
add
inc
pusha
loopne
cmp
inc
push
dec
insb
das
fisubs
sbb
jle
jbe
in
arpl
adcb
mov
shrl
fldl
mov
negb
jnp
add
mov
je
cmc
add
mov
lods
xor
inc
jb
push
mov
add
inc
jmp
or
inc
aas
iret
test
mov
leave
xchg
insl
xor
add
inc
xor
loope
jae
sbb
and
inc
fnstcw
mov
jmp
addb
push
test
cwtl
xchg
mov
add
scas
mov
add
sbb
and
cmp
add
jge
cmp
jne
rcll
lcall
push
dec
inc
pop
jne
mov
adc
rolb
add
dec
and
je
fldt
xor
je
jge
dec
sbb
je
and
imul
sti
jne
inc
mov
dec
fwait
jne
dec
add
push
cli
sub
inc
push
fistpll
xor
add
test
add
push
rclb
jno
fidivrs
clc
mov
paddusw
pop
mov
add
add
mov
inc
add
inc
xor
jl
push
jbe
add
mov
in
imul
mov
pusha
or
fsts
inc
test
in
xor
arpl
fdivrp
call
pop
repz
mov
hlt
adc
test
xlat
popa
jge
add
mov
dec
call
inc
mov
jo
push
add
add
shlb
xchg
inc
scas
mov
push
imul
stos
add
pop
lock
imul
pop
loopne
testl
mov
dec
mov
sub
push
sub
sub
add
imul
ret
push
ficoml
and
pop
or
and
mov
popf
nop
scas
dec
fwait
inc
lahf
nop
in
pop
xor
xchg
adc
cmpsl
int
xchg
inc
aad
or
push
pop
call
shlb
inc
ss
lret
movsb
adc
lret
lds
fmul
pushf
sbb
push
in
lret
into
das
icebp
mov
sarl
fidivrs
sub
jb
push
test
adc
adc
pop
add
jle
sbb
xchg
lcall
add
push
call
jg
test
cltd
test
mov
andb
ret
in
rorl
in
rolb
popf
dec
mov
add
rolb
pop
jmp
int
ja
jl
inc
rolb
xchg
jge
pushl
aam
inc
aaa
js
push
sbb
fdivr
sub
add
inc
dec
test
add
add
loop
imull
popl
out
or
decl
mov
pushf
cmp
mov
mov
insb
adc
sbb
hlt
addr16
jne
jl
mov
mov
xchg
imul
pop
std
and
in
rcll
in
in
iret
repnz
mov
in
in
loop
mov
jecxz
int
or
jns
js
in
popf
aam
jg
int3
inc
add
aaa
insb
and
mov
inc
mov
loopne
stos
adc
mov
or
mov
or
push
or
out
arpl
test
stos
shl
mov
jne
push
mov
movsl
and
shrl
dec
cmp
add
dec
lret
add
es
stos
sahf
int
and
loop
shrb
stos
push
movsb
push
lahf
mov
shrl
mov
inc
lcall
adc
cld
imul
sbb
push
shll
pop
das
cmp
inc
cli
call
ficompl
xor
inc
xchg
jo
sub
add
cmp
test
and
push
xchg
and
xor
push
rorb
xchg
pop
stos
sbb
push
add
dec
mov
inc
nop
lret
shrb
sti
cmp
adc
cltd
mov
xchg
out
mov
and
ret
mov
je
in
pop
roll
fisubrl
mov
sbb
or
mov
loopne,pn
int
stos
or
in
cld
into
ret
add
push
push
or
fcmovnbe
cld
jae
aaa
loopne
mov
xor
jae
stos
push
mov
mov
xchg
gs
rsm
mov
shrb
decl
adc
test
loopne
lcall
ud0
adc
jnp
shlb
cmp
jo
fs
mov
ret
adc
xchg
pop
or
push
push
or
jae
cmp
notl
inc
fadds
fdivs
cs
adc
dec
std
repz
sub
fmuls
push
push
ja
pop
bound
add
cs
jmp
add
xchg
inc
push
mov
jae
cmp
mov
sarb
add
lret
jae
mov
fnsave
xor
call
lcall
std
dec
mov
jae
shl
adc
push
or
xchg
rcrb
pop
inc
ret
xchg
push
dec
xchg
push
aas
pop
xchg
push
popl
mov
or
push
sbb
push
push
cwtl
hlt
shl
aad
mov
pop
shl
jno
inc
pop
loopne
cmp
sbbl
call
stos
mov
test
ret
pop
fwait
add
and
pop
push
sbb
cmpsl
imul
xchg
push
roll
call
add
add
scas
jmp
xchg
push
mov
mov
adc
inc
cmp
mov
sbb
sarb
insb
xchg
leave
mov
xor
ret
shrb
mov
xor
mov
jge
push
mov
inc
push
je
mov
das
loope
mov
into
rcrl
add
add
xchg
mov
add
push
test
shll
in
test
add
loope
and
je
push
xchg
sub
daa
jne
xor
lret
push
bound
dec
add
mov
lea
jne
pop
jne
push
aaa
shlb
mov
js
push
inc
shlb
add
imul
inc
std
int3
inc
jecxz
adc
jae
cmp
pop
shrb
add
rolb
iret
xor
lcall
fwait
rol
and
cmc
mov
sar
shrl
push
mov
pop
aas
xor
add
mov
std
in
out
jecxz
lock
in
fistl
iret
inc
mov
adc
add
xor
movsl
insb
roll
push
mov
or
andl
dec
and
dec
andl
loopne
jae
dec
push
push
js
dec
sbb
mov
addr16
push
rcll
xor
lret
pushf
push
mov
add
rcrl
imul
sub
adc
add
pop
filds
ret
push
adc
pop
add
push
lock
adc
loopne
ret
pop
cmp
mov
repz
cmp
fucom
in
mov
adc
out
push
rolb
pushl
ret
mov
mov
jbe
stos
add
and
out
add
cmpsl
add
aaa
inc
in
sub
andb
push
sub
and
and
mov
mov
jmp
add
pusha
icebp
in
pop
loop
sarl
add
and
and
dec
in
arpl
xor
xchg
insb
pop
sarl
push
ret
sti
fst
adc
in
cmp
inc
mov
ds
mov
add
std
roll
jmp
jne
inc
jmp
adc
inc
lea
jnp
xor
pop
aad
lods
add
js
out
inc
sub
pusha
ss
pop
shlb
inc
add
pop
shlb
inc
add
dec
adcb
pusha
adc
add
cld
push
data16
mov
lahf
mov
test
pop
inc
add
xor
add
jl
adc
push
insb
out
add
rolb
add
add
jg
sbb
mov
call
push
jnp
std
sub
mov
push
inc
add
sub
int3
jo
dec
insl
jl
ljmp
xor
mov
push
xor
or
xchg
push
xchg
int3
xor
pop
stos
addr16
xchg
mov
test
stos
cmp
adc
mov
push
loopne
std
imul
jo
fsts
leave
cli
inc
std
adc
mov
push
xorb
ljmp
inc
adc
in
inc
stos
inc
add
pop
push
jnp
shll
adc
pop
out
cltd
loope
add
and
inc
loope
rclb
stos
add
sarl
add
into
daa
push
loope
stos
into
into
mov
shrl
xchg
push
shrl
xchg
mov
jp
mov
popf
stos
add
dec
pop
call
loope
push
movsl
test
dec
rcl
add
mov
push
dec
xchg
out
jns
add
rcll
fcoms
shrl
jmp
jmp
test
dec
pop
data16
popa
mov
decl
ror
mov
rorb
cmpsb
rolb
or
sub
stos
pop
cmp
lods
dec
orb
nop
cmp
add
and
push
and
nop
lods
mov
int
push
clc
xchg
cmc
xor
jnp
or
stos
xchg
pop
mov
shlb
adc
out
cwtl
sub
clc
cmpsb
andb
dec
lea
push
sub
lret
lret
add
add
mov
ljmp
push
test
xor
push
add
pop
xor
add
push
pop
mov
clc
bound
add
lret
xchg
dec
add
pusha
add
jl
js
test
or
movsl
stc
subb
pop
aaa
push
xor
ja
inc
inc
mov
add
xchg
jne
movsl
stc
inc
in
shlb
add
call
in
xor
jnp
pusha
add
mov
cmp
add
movsb
imul
push
ds
test
inc
and
es
mov
xchg
in
fld
arpl
ffree
orl
lds
push
jo
out
push
aam
xchg
cmpsb
cmp
xchg
aam
vpsrld
movsl
scas
aam
add
push
repz
jp
mov
xlat
push
mov
aam
jmp
push
fwait
bound
nop
movsl
bt
mov
or
inc
cmpsl
xor
gs
xor
or
pop
and
lea
mov
cs
cmpsb
mov
pop
mov
stos
jl
mov
mov
sbb
jp
popl
ret
sbb
jns
hlt
ret
push
jnp
push
idiv
sbb
sub
add
push
repz
cmp
add
mov
push
test
and
inc
xchg
test
jb
add
ss
or
jmp
sbb
inc
out
xchg
lret
movsb
movsl
dec
test
add
dec
add
sbb
mov
stos
out
mov
aaa
aad
mov
inc
jmp
enter
call
mov
mov
mov
dec
mov
add
sti
lock
lods
lock
mov
inc
ljmp
lret
jne
xlat
mov
incl
lock
xor
call
xchg
mov
add
aam
add
or
sti
pop
test
jmp
orb
scas
mov
jne
aam
cli
pusha
adc
mov
xor
pushl
test
cmp
mov
jge
leave
inc
xchg
scas
adc
cli
xlat
gs
dec
mov
rorb
add
xchg
adc
jnp
call
ss
and
inc
add
sub
mov
xor
popa
xchg
idivl
call
subb
push
pop
inc
xor
loop
or
insb
push
negb
or
enter
push
stos
inc
push
push
dec
enter
mov
add
xchg
inc
lds
shrb
js
push
cmp
mov
cmp
cs
push
inc
inc
pop
xor
sbb
mov
shrb
stos
xor
add
push
fidivrs
xor
scas
ret
inc
adc
inc
addb
test
lds
das
mov
add
add
test
ss
cli
jmp
mov
or
sti
jb
inc
mov
or
lods
ret
mov
sahf
mov
pop
je
mov
jle
cmp
jbe
push
notl
pop
adc
das
aam
lahf
ffreep
mov
inc
movsl
mov
inc
xor
inc
aaa
ffreep
int
sbb
mov
add
movsb
mov
fwait
ret
add
sub
push
movsl
aas
inc
adc
mov
add
sub
out
movsb
aas
dec
rol
addr16
dec
xchg
mov
sbb
pop
mov
test
mov
fdivl
adc
roll
lret
in
add
sbb
jne
pop
adc
cmp
push
iret
add
mov
inc
add
sarl
xchg
mov
adc
divb
test
icebp
lods
add
dec
jne
or
cmp
inc
add
roll
jnp
inc
add
mov
test
rolb
push
stos
inc
add
cmovb
in
shr
mov
cmpb
lcall
hlt
add
push
jecxz
jns
shlb
pushf
imul
lret
xchg
sub
xlat
fmulp
sbb
mov
jns
inc
mov
je
pop
jg
std
movsl
push
rorl
shrl
negb
inc
std
stc
jno,pn
movsl
icebp
xlat
ljmp
pop
jns
mov
adc
stos
jbe
imul
add
imul
sub
dec
cmp
ds
and
mulb
mov
push
dec
out
popf
pop
stos
add
mov
aas
sub
stos
mov
stos
add
leave
std
mov
add
push
cmp
sbb
and
out
sbb
testb
mov
mov
xchg
repz
mov
scas
fsts
out
mov
sub
jmp
add
das
out
pushf
xor
sbb
mov
inc
jb
add
xor
test
mov
xlat
xchg
push
pop
xchg
pop
pop
jbe
mov
loope
inc
pop
mov
mov
mov
cltd
daa
inc
jb
imul
dec
fs
mov
mov
cs
add
mov
ljmp
add
rol
adc
int3
jl
mov
inc
cmovnp
mov
pop
loopne
stos
call
xchg
lea
mov
int
mov
adc
sub
jo
dec
lret
dec
add
xchg
call
mov
push
fidivs
dec
int3
inc
shlb
xchg
btc
pushl
xor
incl
xor
mull
mov
mov
push
add
and
cmp
or
fwait
sub
fmuls
inc
xchg
xchg
rep
int3
std
mov
movsl
sbb
push
jg
mov
test
mov
repz
cmp
xchg
std
imul
mov
push
pop
mov
add
cld
cmp
jns
fwait
cli
scas
sbbl
inc
add
inc
add
push
pop
add
popa
or
sarb
mov
add
mov
mov
nop
das
adc
and
add
add
sti
pusha
add
gs
popf
movsb
popl
xor
test
shrb
mov
sbbl
jo
sti
jbe
sarb
in
shlb
mov
pop
scas
and
daa
in
stos
push
into
pop
cli
jbe
movsb
pop
test
add
ds
pop
xlat
add
add
into
mov
test
movsb
add
mov
xor
sub
enter
lods
mov
jmp
sbb
inc
pop
or
stos
addr16
lods
mov
jmp
and
scas
xchg
mov
xlat
fs
mov
cmc
cmc
sbb
add
andl
mov
hlt
and
fstpl
add
add
xor
pushf
and
sti
mov
xor
pop
pop
ds
dec
add
sub
xorps
adc
sbb
mov
dec
test
test
xor
cmp
add
shll
lds
stos
imul
mov
sbb
pop
fwait
jne
xchg
push
scas
lock
add
xchg
and
xchg
arpl
inc
call
ret
adc
mov
movsl
gs
add
mov
and
mov
add
imull
mov
lds
sbb
add
xor
std
xchg
dec
dec
mov
and
je
mov
lret
rol
dec
sub
add
add
mov
enter
divl
int3
rclb
or
inc
jmp
sub
ret
fs
pop
pop
xchg
and
xor
arpl
shll
lea
mov
es
int3
pop
fsubr
rcll
or
push
mov
add
icebp
das
clc
das
shlb
push
aaa
scas
mov
fistpll
ss
popf
xchg
sbbb
inc
cmp
push
movsb
imul
pop
cmc
dec
insb
cmpsl
xchg
cli
andb
mov
idivl
stos
rolb
in
fcmovb
idiv
rclb
mov
xor
aad
scas
xor
lahf
lods
sbb
add
faddl
stos
mov
inc
jmp
and
inc
jmp
push
int
jmp
sbb
ror
es
popa
or
dec
push
pop
in
sbb
pop
loope
cmp
sbb
jmp
in
xchg
sub
lods
dec
cmc
sub
sbb
adc
addr16
adc
es
mov
iret
les
add
test
adcl
jne
dec
mov
jne
mov
adc
lea
std
push
sub
clc
mov
lea
cmp
ret
out
ss
adc
mov
shll
rcr
fisubrl
jne
xor
pop
pop
in
sbb
addl
add
add
int
mov
sbb
sub
and
push
push
call
lock
cmp
mov
adc
mov
shlb
out
sub
inc
xor
add
and
pop
adc
repnz
cmp
fisubrs
shll
pushf
mov
cmp
lock
inc
push
push
or
xchg
or
cmpb
ds
push
mov
push
sti
mov
mov
push
xchg
mov
xchg
cwtl
jge
shl
sbbl
push
jge
fadds
je
rcll
and
rol
jb
test
mov
pop
push
adc
stos
imul
adc
push
and
or
fdivs
inc
xchg
int3
addr16
add
jecxz
out
add
aam
fcoms
jae
mov
pop
ret
mov
sbb
mov
shl
pop
out
in
or
nop
sbb
pop
and
xor
repnz
shll
dec
cld
int3
and
icebp
add
pop
mov
adc
fiadds
mov
jle
roll
ljmp
add
add
add
les
inc
sbb
lret
cmc
fistl
test
sbb
fidivrl
jmp
pop
pop
decl
movsb
mov
fsubrs
das
sti
xor
out
frstor
les
xchg
inc
pushl
push
inc
ja
test
add
sbb
add
mov
repnz
inc
cmpsl
jge
inc
cmp
stos
iret
sub
mov
inc
pop
lds
sub
push
fbld
ljmp
sbb
test
decl
dec
jne
mov
lea
jge
inc
pop
jge
inc
clc
movsl
mov
push
pop
lds
sub
push
pop
push
pop
mov
stos
mov
mov
cmc
pop
push
xchg
test
pop
fmull
fldt
dec
add
mov
dec
lcall
cmp
push
mov
int
sbb
inc
mov
stos
xchg
mov
push
xchg
inc
jecxz
inc
call
movsl
insl
xor
arpl
xchg
cld
mov
cmp
or
add
clc
push
add
and
stos
mov
push
shll
std
in
shl
loop
test
pop
pop
out
push
pusha
jge
fucomip
les
fadds
sbbb
xor
lds
stos
add
pop
push
nop
inc
movsb
xor
cmpsb
push
mov
jns
xchg
stos
jg
iret
stos
add
sub
jl
xlat
repnz
movsb
test
das
xchg
pop
pop
pop
xchg
addb
mov
stos
add
mov
add
cwtl
or
decl
lret
icebp
xor
dec
test
sbb
jnp
add
push
jns
lods
stc
call
jo
mov
jb
lret
adc
cwtl
mov
add
or
mov
pop
mov
dec
mov
mov
mov
push
push
call
imul
inc
pusha
lock
jecxz
es
cs
push
jmp
cwtl
cltd
or
call
fdivrs
je
xchg
dec
test
push
lds
sbb
mov
pusha
sbb
shlb
add
movsl
push
inc
push
add
test
rclb
data16
aam
adc
sbb
sarb
mov
aaa
into
adc
inc
int3
into
pop
adc
pusha
push
test
jnp
inc
add
out
not
and
mov
xor
lea
sub
mov
add
mov
sbb
mov
or
sbb
mov
mov
mov
enter
sbbl
fstpt
mov
add
into
inc
pop
mov
je
mov
lret
lret
out
inc
je
pop
test
in
mov
sbb
cli
sbb
adc
arpl
mov
adc
jnp
incl
xor
shll
or
and
lock
pop
fstpl
dec
rcrl
mov
add
mov
testb
mov
xchg
outsl
ret
cmp
lahf
ljmp
loopne
push
rol
adc
sub
inc
and
pop
insb
add
sub
dec
call
mov
test
mov
mov
add
cmc
test
xlat
cli
lahf
inc
sti
pop
sbb
and
out
lds
sbb
dec
pop
or
sbb
pop
fcmove
mov
xor
push
inc
in
sbb
xchg
mov
sbb
roll
add
dec
call
mov
cmp
dec
gs
int
scas
xor
adc
mov
add
push
and
test
or
call
subl
cmp
and
cmp
mov
xor
and
mov
test
mov
mov
rcll
decl
shrb
lcall
inc
call
in
sub
sti
xor
push
jae
inc
pushl
add
jne
xchg
mov
lahf
aam
test
inc
add
mov
mov
mov
xchg
ss
out
xchg
xor
icebp
out
add
test
mov
divb
add
push
rcrl
mov
ss
or
std
test
fistl
push
xchg
cld
mov
xor
push
inc
push
sub
inc
add
addr16
popa
jbe
inc
dec
daa
inc
add
push
mov
dec
dec
rol
sub
add
test
inc
cs
cmp
ss
into
sar
fistpl
popf
stos
add
imul
pop
shll
cs
int3
and
push
shrl
test
stos
add
dec
sub
lret
pushf
dec
jmp
mov
iret
stos
add
mov
sub
popf
lcall
pushf
xchg
in
mov
adc
push
mov
imul
inc
mov
jmp
add
push
inc
push
push
int3
pop
sbb
inc
jmp
cwtl
lret
sbb
loop
fmull
sahf
mov
cmp
sahf
adc
mov
mov
jge
sahf
mov
je
xchg
mov
add
sahf
int
sub
sbb
add
insb
cmp
mov
setle
add
or
mov
or
sbbl
inc
jmp
xor
mov
decl
jg
test
mov
xlat
or
add
sbb
jmp
insl
mov
aaa
sarl
vmwrite
int
mov
scas
mov
dec
add
jg
lea
mov
xchg
inc
pop
mov
addb
int3
pop
jp
orl
sbb
int3
add
cld
mov
adc
dec
push
inc
inc
dec
test
mov
test
rorb
pushl
stos
out
lret
ret
out
dec
je
pop
sbbb
repnz
cli
sbb
or
hlt
cmpsl
inc
add
movsl
pop
push
dec
xchg
je
std
outsb
add
or
sub
outsb
rcr
leave
ret
sbbl
mov
in
cld
test
stos
sub
cltd
cld
add
sub
pop
addl
cmpsb
lea
sub
std
popa
push
add
dec
and
dec
cltd
rcl
pop
adc
adc
shrl
outsb
add
cmc
sbb
sub
jl
out
outsb
add
cld
fstpt
stos
add
jb
dec
test
leave
jp
in
outsb
lret
das
and
sub
imul
dec
call
outsb
fwait
dec
push
std
popf
add
cmc
js
cld
mov
inc
push
fcmove
lret
fists
mov
mov
mov
mov
cld
lods
dec
mov
sbb
ljmp
adc
add
sahf
sbb
sbb
dec
mov
adc
nop
dec
insl
mov
and
je
cmpsl
adc
mov
add
add
mov
cmpsl
insl
dec
inc
pop
push
das
rorl
repz
cmp
push
dec
pop
sahf
xor
movswl
les
lcall
adc
inc
push
cmp
add
cwtl
sub
jp
jo
push
cmpsl
xchg
add
pop
je
or
add
add
mov
lea
mov
xchg
pop
or
test
and
int
adc
mov
inc
jle
push
fcoms
stos
jnp
pushl
fsts
sub
std
and
sub
inc
sub
add
dec
cmp
and
sbb
pop
sub
mov
cs
add
insl
pop
xchg
mov
push
xchg
cld
or
push
inc
push
sub
and
fnstenv
mov
xchg
sar
leave
ret
mov
ss
stos
cmp
push
dec
lahf
mov
int3
push
stc
push
shrl
add
popf
stos
add
loop
loope
xlat
cltd
loope
shrd
adc
fwait
sahf
mov
imul
jl
jmp
sub
xchg
mov
xor
dec
and
push
shll
lock
icebp
push
leave
add
repz
or
push
add
add
call
rcll
jl
addl
mov
aaa
xchg
push
test
inc
bound
lds
sbb
adc
roll
mov
add
sti
cwtl
and
jns
int
bound
xor
test
jl
xchg
lds
xchg
mov
sbb
bsr
ret
hlt
jno
dec
pop
xchg
mov
pop
stc
test
mov
pop
iret
inc
ja
das
sbb
aad
xor
inc
xchg
lds
sbb
lret
adc
test
push
ret
les
pop
sub
add
lret
pop
mov
mov
subb
jne
idiv
push
push
sub
inc
dec
jmp
push
cli
shlb
testl
mov
sub
mov
test
mov
and
sub
rorb
int3
in
test
arpl
cmp
add
cld
mov
add
add
xchg
xor
adc
into
inc
je
sub
les
dec
sbbl
sub
icebp
ret
or
pop
cli
out
gs
jmp
push
mov
cmpsl
in
mov
xchg
cmp
mov
pop
nop
cld
shrl
sbb
xor
add
addr16
add
push
sbb
add
nop
inc
add
mov
pop
es
std
add
dec
or
push
sbb
mov
mov
jp
sbb
test
fisubs
sub
cmpsb
shlb
adc
loopne
out
cmpsb
test
scas
xchg
mov
pop
pop
inc
pusha
pop
cmpsl
popl
push
xchg
stos
jp
xchg
adc
daa
es
shrl
jmp
cs
sti
inc
inc
enter
in
mov
in
stos
add
loopne
jg
shrl
rolb
pop
inc
pop
pop
pop
stc
pusha
or
xchg
notl
mov
mov
scas
lcall
aas
push
push
mov
clc
int3
and
mov
add
sti
and
insb
or
adc
add
scas
mov
sbb
mov
push
shrl
loopne
push
pop
repnz
pop
add
push
aam
test
lret
and
or
add
xchg
cs
call
sbb
pushf
into
inc
aaa
movsl
mov
push
mov
pop
mov
inc
mov
das
or
inc
insb
inc
add
dec
mov
cs
inc
add
and
lds
cmc
mov
push
or
je
hlt
xor
int
rcpps
mov
cmpl
push
lret
push
lret
call
mov
or
decl
xchg
pop
add
int
neg
sub
add
js
push
negb
std
loope
cli
jmp
insl
mov
imul
std
movsl
mov
std
pop
insl
mov
adc
fcomps
lods
xchg
xor
and
je
ds
push
repnz
shll
movsw
mov
jno
fistpl
jnp
dec
add
std
sub
jno
push
std
push
jmp
repnz
hlt
lea
xchg
iret
or
shll
push
adc
xchg
loopne
addr16
dec
pop
mov
arpl
insl
sub
xchg
sub
jns
add
arpl
js
popa
jnp
and
and
mov
je
mov
and
dec
rcl
xchg
adc
not
shr
cmpsb
sahf
rcll
mov
add
andl
push
insb
inc
test
jp
imul
aam
push
pop
mov
test
mov
jb
sub
cmp
test
int
inc
add
push
add
lea
test
outsb
aam
stc
hlt
out
sbb
lcall
jb
test
jmp
cvtdq2ps
jmp
das
pop
jmp
and
push
stos
inc
xchg
inc
clc
les
sub
inc
sub
xchg
into
dec
scas
jbe
inc
scas
mov
mov
pop
sbb
call
add
mov
inc
dec
xchg
test
lea
inc
push
movsb
mov
inc
mov
testb
or
add
call
shrb
pop
in
data16
sbb
and
push
ds
sbb
subl
cld
inc
xor
pop
pop
outsb
adc
test
push
push
gs
mov
and
inc
add
cld
or
and
arpl
inc
and
push
lcall
sub
push
fisubl
dec
lret
or
mov
mov
into
dec
ret
pop
mov
incl
mov
jae
dec
jle
sub
push
js
call
push
ss
add
xor
add
dec
ds
xchg
pop
xchg
in
sub
in
rcrl
pop
pusha
jo
cltd
mov
inc
pop
lods
cli
sub
out
sub
nop
xchg
cmc
pushf
orb
sbb
sbb
call
add
dec
mov
sub
add
repnz
mov
stos
add
xchg
adc
and
mov
aad
lcall
cmc
rcrl
push
add
ss
mov
sbb
scas
fcoms
stc
cltd
nop
xor
popa
mov
xchg
mov
adcl
xor
pop
mov
sub
and
inc
pop
pushf
fs
cltd
insb
adc
mov
bound
add
adc
test
movb
sbb
pop
pop
fldcw
fisttps
out
pop
in
scas
push
mov
sbb
shrb
dec
mov
pop
mov
lret
fadd
leave
cmp
xchg
inc
push
mov
cmp
xchg
adc
add
add
mov
fnstcw
inc
int
add
test
push
mov
punpckhbw
mov
mov
or
mov
adc
mov
mov
es
cmpsl
and
push
pop
inc
or
mov
fadds
leave
mov
inc
push
push
repz
and
orb
fucomip
addr16
jp
and
mov
add
add
xchg
mov
and
push
sbb
push
add
pop
stc
test
add
js
out
das
sbb
movsl
sub
je
cmpsl
ret
dec
int3
int
hlt
sti
cld
mov
adc
push
in
leave
sub
mov
pop
inc
ficoml
int3
rcll
icebp
cld
jno
das
rolb
or
loopne
push
sti
stos
mov
mov
push
xchg
pop
popf
xchg
sahf
add
dec
pop
stos
lods
mov
iret
std
loopne
shll
xchg
pop
insb
lret
mov
cltd
pop
push
mov
pop
jecxz
inc
lock
pop
sbb
fnstcw
sub
iret
mov
pop
cld
mov
push
roll
add
rorl
mov
pusha
or
cmp
or
and
and
add
pop
psraw
add
js
mov
add
dec
sub
imul
mov
push
jp
scas
fiadds
or
push
ljmp
es
mov
jne
inc
add
cmpl
adc
dec
test
rolb
mov
mov
cmpsl
sbb
jl
add
mov
hlt
jno
add
jno
cld
daa
sarl
mov
sti
inc
inc
add
add
ud1
inc
add
fldl
cli
and
xchg
jbe
stc
inc
add
pusha
addl
mov
cmp
dec
adcb
add
pusha
pop
add
in
cmove
add
fadd
or
iret
inc
data16
nop
inc
sysenter
lret
inc
add
jo
adcl
imull
fldenv
inc
add
pop
inc
mov
clc
out
mov
add
or
inc
inc
push
push
sbb
inc
std
mov
enter
inc
call
lcall
add
test
jo
cmc
imul
sbb
shlb
add
js
mov
andb
sub
rorb
popa
sar
js
pop
fwait
orb
push
shll
add
fcmovnbe
sarb
cwtl
pop
call
sbbb
jbe
cmpsb
push
pop
dec
jmp
lcall
repz
add
rorl
xorl
stos
add
push
and
adc
xchg
pop
sbbl
out
push
sti
sarl
and
sub
push
dec
and
shrl
or
roll
add
movsl
adc
ss
test
xchg
or
jge
xchg
adc
icebp
pextrw
sub
push
mov
mov
subl
mov
orl
adc
call
stc
cmpb
popf
adc
xchg
and
orl
roll
std
adc
adc
fiadds
sbb
inc
pop
sahf
or
mov
sbb
add
rolb
add
jb
insb
lret
movsb
jns
das
pop
push
cmpb
xor
push
call
aam
mov
and
ret
push
mov
fildl
mov
mov
sbb
aam
inc
aas
inc
mov
cmpxchg
inc
jg
out
inc
inc
sarl
mov
mov
test
push
push
push
mov
out
inc
xor
les
aam
or
mov
mov
js
roll
out
inc
lret
popf
mov
jge
gs
stos
or
xchg
stos
daa
fldt
ja
pop
js
sbb
mov
cmp
inc
jmp
movsl
stos
daa
mov
inc
or
push
adc
clc
and
push
stos
push
jae
hlt
icebp
fisttps
and
sti
paddw
in
jnp
mov
add
fbld
adc
cmp
pusha
cmp
push
loopne
sub
push
mov
adc
mov
and
add
in
mov
test
xchg
adc
mov
imul
add
lcall
imul
mov
mov
lods
add
ljmp
int
lret
pop
shl
paddusw
mov
adc
pop
std
jnp
push
cmp
inc
jg
mov
stos
xchg
dec
pusha
cmp
imul
lret
jmp
sbb
popa
adc
scas
inc
fs
xchg
lods
dec
loope
mov
or
mov
mov
add
ror
movsb
mov
xor
sub
in
repnz
sarl
mov
sub
js
fldl
mov
push
rorl
jb
dec
test
mov
adc
inc
add
xchg
nop
dec
insl
bnd
jmp
sbb
sub
sbb
or
int
pop
mov
mov
mov
pop
lret
dec
xchg
sti
mov
ljmp
test
iret
mov
mov
loop
sbbb
xor
xchg
add
and
les
rolb
test
je
adc
ljmp
subl
cld
or
ja
mov
xchg
sbb
add
aaa
ror
inc
setnp
inc
and
and
cmp
decl
and
push
xchg
inc
add
rolb
popa
xorps
cli
ss
test
imul
sar
cld
leave
cmp
dec
mov
adc
std
sbb
adc
push
push
jne
loop
dec
xchg
fimull
xchg
sub
sbbl
iret
add
push
pop
jmp
dec
jae
jb
lcall
cmp
in
inc
mov
or
rol
lds
mov
std
arpl
fidivrl
xor
push
lea
scas
add
jl
jno
pop
xchg
add
and
xlat
sub
push
xchg
or
jnp
jns
pop
test
pop
jns
push
mov
mov
pop
or
sub
leave
xor
or
adc
movb
xor
and
dec
into
pop
es
cmp
je
dec
into
lcall
mov
push
sub
repnz
mov
jecxz
scas
xchg
mov
mov
lahf
out
mov
xor
arpl
add
jl
adc
pusha
icebp
mov
lods
pusha
jp
movsb
gs
aaa
dec
bound
dec
imul
push
xor
mov
inc
jg
mov
adc
xorl
dec
test
fadds
sbb
xor
stos
sbb
adc
mov
sub
dec
inc
add
mov
outsl
add
cmp
inc
int
mov
xor
jb
test
inc
call
adcl
sbb
add
mov
xor
cmp
negl
addr16
sub
push
scas
lcall
xor
push
pop
sbb
mov
pushl
pop
inc
ja
movsb
dec
sub
mov
inc
addl
ljmp
pop
mov
add
mov
inc
aaa
sbb
push
adc
adc
fisubrs
inc
add
push
adc
push
jp
and
inc
push
xchg
mov
push
std
movsl
mov
pop
mov
incl
test
xchg
ror
push
mov
cmp
ljmp
push
push
add
loop
fwait
adc
xchg
or
push
nop
xchg
add
adc
gs
lods
imul
push
add
idivl
pop
movsl
shl
pop
sub
dec
lcall
addb
loope
cld
cmpsl
mov
push
or
sahf
add
add
or
add
and
push
and
movsl
or
mov
mov
jecxz
sub
jbe
jp
cmp
add
add
xchg
add
lcall
aad
mov
mov
shrb
lock
shrl
addl
jbe
mov
jge
add
push
inc
fnstsw
jmp
dec
call
arpl
aad
int
lahf
je
fs
je
aad
mov
or
mov
cwtl
mov
outsb
jbe
pop
mov
add
add
push
cmp
inc
mov
int
adc
imul
out
rol
sbb
jbe
out
aad
or
mov
je
jb
fldcw
bound
movsb
cmpsb
in
mov
cmpsb
cmp
test
or
in
mov
xor
cltd
les
sub
add
cld
or
add
add
ret
pop
je
xchg
dec
lea
sub
mov
jne
jo
pop
xor
mov
adc
dec
sbb
ljmp
jmp
repz
or
pop
inc
enter
xchg
push
lea
sub
mov
mov
push
add
adc
inc
dec
orb
cmp
push
addr16
add
jno
adc
xor
push
std
daa
insl
imul
std
adc
push
movsb
or
xchg
mov
jmp
incb
sbb
imul
clc
sbb
inc
jae
jno
daa
mov
repnz
jnp
push
adc
shlb
dec
imul
sbb
scas
imul
inc
and
jecxz
mov
inc
jmp
cs
or
cli
jle
pop
push
push
dec
cmpsl
mov
pop
stc
popf
mov
push
fsubrs
mov
add
mov
dec
idiv
cmpsb
inc
sbb
dec
les
inc
dec
test
into
stos
add
out
jbe
jno
pop
mov
add
sbb
aad
jb
jp
subl
jg
shrl
pop
inc
fisubrs
jl
les
sbb
jae
and
je
gs
roll
push
mov
mov
inc
jne
decb
imul
fisubrs
lret
jne
into
loope
dec
das
push
push
sub
and
call
xchg
mov
pop
je
xchg
add
xchg
aam
adc
sbb
gs
jno
pop
loope
or
cmp
lods
in
dec
mov
imul
mov
push
nop
mov
ror
int3
inc
dec
or
push
mov
hlt
sbb
mov
movsb
or
mov
add
mov
xorl
call
mov
aad
fadds
adc
mov
jecxz
je
mov
or
inc
cwtl
pop
rcr
rol
gs
pop
mov
mov
inc
pop
pop
lret
pop
push
push
addl
mov
call
inc
adc
add
sti
jge
mov
mov
adc
jbe
adc
std
lcall
add
popf
mov
pop
loopne
add
dec
repnz
cmp
add
dec
out
mov
jle
add
fstl
loop
push
mov
sub
or
cld
jno
push
inc
bound
mov
cmc
cmp
icebp
sti
and
dec
push
loope
cmp
loope
and
inc
xchg
loope
add
mov
repnz
sbb
mov
adc
in
add
fadds
push
imul
into
sahf
add
jl
js
fdivl
sti
sahf
hlt
jle
popa
push
pop
sub
lods
inc
cltd
adc
pop
pop
cltd
lcall
aam
mov
mov
jmp
push
lods
push
sub
xchg
add
pop
push
and
xor
cwtl
sbb
add
add
in
and
push
inc
and
rcl
adc
mov
jne
pop
aad
jb
mov
arpl
mov
sbb
js
loop
shrb
push
iret
call
and
int3
lods
adc
mov
rorb
nop
fmulp
jmp
and
lret
ret
add
mov
mov
sub
test
pop
shrb
je
ror
and
xor
pop
fdivrl
add
and
push
jl
cmp
gs
fcmovne
inc
sbb
rolb
or
adc
ljmp
mov
jne
mov
jnp
add
cmpsl
clc
add
and
dec
ja
inc
sub
aad
push
mov
lds
call
add
pop
test
mov
pop
adc
xchg
inc
mov
jae
add
or
push
movsb
cmp
out
sti
shld
cli
test
outsl
out
dec
add
pop
add
sub
std
test
pop
sbb
mov
frstor
fcmovbe
mov
sbb
icebp
dec
out
jp
add
dec
or
push
out
mov
sub
mov
popa
aas
push
fwait
out
mov
cld
cmp
pushl
fdivrp
and
std
add
mov
ds
mov
inc
inc
mov
outsb
xchg
insl
inc
stc
shl
add
cmpsb
mov
pop
ja
add
sub
call
loopne
ret
dec
pop
insb
sub
icebp
pusha
stos
add
rcll
adc
js
lcall
and
out
xchg
lahf
repz
adc
cmp
shll
std
mov
stos
inc
cmpsl
in
inc
in
cmpsb
adc
adc
test
call
add
ficompl
or
imul
inc
jmp
sbb
pop
push
aas
xchg
adc
mov
pop
insb
gs
jmp
jge
add
pop
fimuls
leave
scas
and
popa
scas
das
ljmp
push
test
push
dec
imul
sbb
out
dec
outsl
cmc
rolb
test
pusha
test
add
inc
adcl
inc
jmp
jmp
scas
add
sub
add
xchg
or
nop
cltd
gs
sbb
into
test
jns
push
jge
daa
inc
shlb
inc
add
fnstcw
hlt
stc
test
mov
and
int3
test
popa
inc
add
jge
add
stos
mov
add
sbb
add
or
cmp
sub
ds
xor
test
inc
jno
mov
jle
push
jle
leave
aaa
int
call
sbb
add
insl
cmpb
cmp
jp
call
out
adc
push
jp
inc
into
push
test
scas
stos
dec
outsb
aam
mov
mov
jp
in
pop
jp
push
insb
xchg
ljmp
and
jp
add
adc
shlb
faddl
push
jp
mov
mov
shlb
inc
add
daa
cmp
and
jbe
lods
rclb
add
shrl
adc
adc
xchg
dec
inc
push
push
shrl
add
xchg
das
mov
stos
add
add
enter
sub
push
ret
sbb
and
mov
and
gs
mov
jmp
fwait
addr16
inc
xor
adc
sbb
andl
bound
arpl
dec
andl
inc
jle
cwtl
roll
fdiv
xlat
add
sahf
lea
add
outsl
jo
mov
out
push
mov
add
mov
push
daa
xchg
sbb
rclb
dec
xchg
clc
cmpsb
mov
xorl
fists
sub
mov
andl
fidivs
sbb
mov
inc
push
movsb
mov
push
dec
movsb
mov
inc
inc
movsb
mov
in
xor
fs
add
movsl
mov
xor
mov
push
mov
mov
sub
adcb
decl
adc
add
gs
mov
mov
xor
mov
adc
mov
mov
adc
push
cmp
lret
test
add
inc
mov
sti
or
test
inc
add
mov
add
jnp
mov
rolb
cmp
cmp
pop
js
push
call
pop
jmp
and
cmpsl
jl
shrb
jmp
sub
test
imul
push
jns
and
je
icebp
lods
dec
pop
jp
rcrl
sbb
dec
xchg
fsubl
lds
lahf
xor
sbb
mov
mov
or
test
cwtl
xchg
and
push
cmp
cmp
push
icebp
nop
and
pop
sbb
push
shll
mov
cli
arpl
sbb
fisttps
or
pop
fs
fstp
and
mov
arpl
sbb
lods
mov
add
fisubrl
add
or
shrl
cmp
inc
aad
mov
leave
mov
rcl
add
sub
fucomip
or
push
enter
push
lods
out
inc
pop
adc
cltd
or
adc
nop
test
sub
mov
mov
es
scas
dec
insb
pop
scas
adc
lods
gs
add
scas
push
adc
mov
jne
mov
push
add
fldenv
push
aad
test
sbb
xor
jmp
add
cld
stos
jecxz
gs
out
mul
imul
adc
xor
inc
push
bound
enter
add
lds
lea
ret
adcb
mov
addb
add
shlb
adc
mov
mov
and
push
inc
add
xor
stos
and
out
pop
sub
call
jle
mov
xor
call
mov
repz
mov
push
incl
pushf
ja
jmp
jge
inc
lcall
add
lcall
ret
subl
push
js
je
fsubs
inc
or
repnz
mov
std
leave
push
mov
pop
pop
imul
lret
in
xor
jb
push
daa
negb
dec
lock
fistpll
push
fwait
insl
std
adc
mov
es
mov
or
jb
dec
in
out
outsb
ret
pop
push
push
leave
movsl
adc
enter
ja
or
cmp
push
cld
jl
shll
ss
ret
mov
push
sub
push
add
pop
xchg
fmuls
push
shrl
into
cmpsb
sahf
mov
rol
fnclex
adc
fcomps
shrb
arpl
pop
add
push
shrl
xlat
mov
mov
out
add
cmc
pop
icebp
mov
insl
add
frstpm(287
mov
rorb
push
push
rcrl
mov
call
inc
outsb
jno
lret
lods
add
roll
incb
jmp
rcrl
pop
lret
test
xchg
adc
add
mov
sub
xchg
movsb
movsl
cmpsl
push
adc
push
cltd
ljmp
mov
and
sub
pop
rolb
add
neg
adcl
std
ljmp
mov
loop
int3
mov
add
icebp
add
movsl
mov
xor
pop
dec
add
inc
adc
sldt
add
add
push
inc
add
gs
mov
mov
dec
bound
inc
xchg
xchg
push
add
mov
jmp
add
das
mov
mov
sbb
movsl
xor
mov
cmp
pusha
inc
aad
jne
fildl
sar
sub
sub
xchg
push
adcb
mov
in
mov
add
rcrb
pusha
pop
push
mov
fisubs
push
lcall
mull
hlt
inc
add
push
roll
inc
test
inc
add
dec
jns
mov
jno
mov
in
push
add
push
shl
push
rcr
push
rcll
mov
push
loope
sar
add
imul
dec
cmp
loope
cmpsl
jmp
jnp
mov
shrl
pushf
jne
push
ret
test
xor
int3
push
lcall
xor
inc
and
add
add
stos
into
out
fwait
jno
stos
add
pop
cwtl
sbb
stos
jl
pop
cmpsb
inc
lret
and
push
xor
add
add
shr
popf
xchg
das
add
cmpsb
adc
shll
inc
shlb
iret
adc
pop
xor
shlb
sub
data16
xor
push
adc
add
dec
xchg
mov
cltd
out
pushl
hlt
or
pop
jge
fcmovne
mov
mov
push
xchg
lods
add
je
jmp
adc
jl
xchg
scas
int3
movsb
in
dec
pop
cmp
sbb
insl
xor
or
ljmp
cmp
test
popl
pop
lea
int
mov
jne
js
push
test
cltd
pushl
in
ror
movl
scas
and
sbb
mov
add
xchg
jmp
jge
pusha
clc
mov
adc
call
pop
push
inc
xchg
add
xchg
sbb
or
les
into
inc
cmp
iret
inc
add
xchg
dec
push
mov
movsl
mov
filds
jb
push
rcrl
push
mov
add
or
add
movsb
addr16
xchg
das
aaa
jnp
jle
or
push
mov
cli
pop
mov
test
movups
lds
mov
rep
push
cmp
jmp
out
dec
adc
mov
inc
jae
dec
push
push
stos
hlt
idiv
xor
out
nop
push
xchg
inc
push
std
add
shll
pushf
sub
pusha
sub
clc
lds
cli
fcoms
inc
stos
add
lcall
push
shll
nop
dec
pop
lret
cmc
scas
mov
jmp
fwait
pop
clc
push
movsl
dec
mov
sbb
cltd
sbb
xchg
dec
jg
jnp
xchg
nop
out
mov
dec
sub
add
push
mov
nop
cmpsl
and
xor
mov
inc
testb
jge
push
mov
fidivs
push
adc
mov
mov
popa
mov
fisttpll
pop
mov
lea
out
add
int
adc
int3
ret
mov
cmp
shll
adc
push
das
inc
add
add
pop
leave
ja
mov
inc
add
inc
mov
mov
mov
imul
cli
jecxz
push
call
sarb
add
mov
cmp
inc
sbb
add
cmpsl
and
adc
sub
mov
test
ljmp
xor
pop
add
adcl
negl
stos
sbb
ja
add
sarb
sub
je
fdivrs
lea
out
dec
jnp
adc
mov
mov
mov
inc
mov
ret
fs
push
xor
addr16
xchg
mov
out
push
push
cld
outsb
pusha
cmp
mov
arpl
push
push
dec
push
jmp
fwait
insb
std
jns
cmp
jne
add
xchg
cmp
lahf
inc
rolb
push
outsl
xor
lds
pusha
adc
insb
jmp
adc
cli
sub
data16
pop
sub
call
cmp
sahf
aaa
pop
and
pop
lods
mov
xchg
rcl
test
inc
fadds
add
jnp
sub
inc
mov
out
outsb
add
or
xor
sbb
out
shr
pushf
adcl
popf
xchg
js
mov
test
lret
fsubl
ret
mov
fmulp
sub
int
inc
clc
mul
inc
in
inc
aaa
test
stos
add
sti
xor
mov
add
into
xor
sub
inc
insl
fstp
push
bound
sub
adc
addb
ljmp
inc
push
mov
pop
ficomps
je
fnstsw
push
pop
adc
adc
test
jmp
mov
jl
test
mov
mov
sub
and
neg
aas
jle
insl
push
sub
mov
xchg
sbb
insb
mov
jmp
in
and
push
add
xor
xchg
adc
subl
nop
aaa
iret
inc
psraw
xor
test
ss
mov
xlat
fsubrs
fsub
fsubrs
jmp
add
jle
cmp
stos
sbb
test
test
sbb
adc
sarl
mov
mov
pop
arpl
inc
push
jge
dec
and
or
out
add
adc
or
sub
or
pop
sti
push
push
imul
jae
inc
cli
pop
xchg
push
jo
aaa
sti
add
pop
mov
fstps
std
div
repz
stc
xchg
xorl
dec
es
add
pop
add
addr16
add
mov
setne
pop
mov
std
test
test
xor
push
stos
pop
push
inc
daa
jnp
imul
lods
add
inc
and
adc
loop
cld
js
loop
xchg
rcll
pop
daa
xor
sbb
xchg
push
mov
call
mov
add
out
adc
stc
push
stos
mov
pop
pop
loopne
pop
pop
loopne
mov
xchg
in
push
repnz
testb
out
shrl
loopne
lds
aam
daa
inc
lcall
add
add
adc
cli
les
adc
jo
jecxz
push
int3
lods
jns
int3
movsl
jno
subb
sarl
fmul
movsl
push
add
mov
loopne
movsl
inc
in
jl
leave
fcmovne
lods
icebp
fistpll
movsl
mov
sub
add
jmp
hlt
xor
adc
addr16
inc
jmp
fisttpll
sub
add
rolb
es
mov
add
aas
mov
xor
jge
add
mov
das
push
mov
sbb
push
rcr
jmp
xchg
push
push
ret
inc
cmpsl
sbb
push
jmp
ja
and
dec
cmp
js
pop
adc
sti
adc
rclb
call
test
shrb
add
roll
add
xchg
xor
fcomip
xor
decl
xor
movsb
leave
mov
jno
xor
negl
into
inc
fstpt
or
push
in
mov
pmaxub
lods
les
mov
cld
mov
cmp
pop
mov
mov
std
ljmp
inc
push
lahf
pop
mov
fildl
mov
pusha
std
dec
mov
je
and
test
pop
xor
pop
xchg
xchg
aad
shll
cmp
cmp
push
jno
jmp
clc
mov
repz
data16
pop
cmp
cld
xor
mov
push
fwait
sub
aas
call
popf
rolb
add
adc
jle
test
cltd
dec
cwtl
pop
and
stos
add
mov
and
xor
xchg
add
add
mov
inc
inc
rcrb
stos
sub
and
xchg
mov
clc
imul
test
mov
jp
lcall
add
pop
sbb
pop
sub
add
mov
cld
in
out
jmp
test
stos
popa
lret
dec
mov
add
ffree
pop
jb
sbb
and
mov
in
call
pop
add
or
lret
call
push
stos
sbb
or
ret
push
sub
rcll
push
jmp
dec
dec
lds
or
xchg
adc
jmp
fmuls
cmpsl
rorb
pop
add
add
add
push
mov
outsl
decl
adc
inc
mov
addl
btc
jmp
push
cmp
ud1
add
inc
ja
mov
es
or
ret
das
cmp
outsl
decl
push
test
out
xor
inc
xchg
rolb
out
adc
xlat
gs
push
mov
mov
push
jp
test
inc
mov
push
clc
aas
mov
cli
test
mov
in
dec
aaa
inc
add
cli
mov
inc
ret
mov
mov
pop
test
shrl
cmp
fnstcw
lcall
inc
add
and
fdivl
adc
inc
test
mov
jbe
add
adc
sbb
popw
xor
out
stos
arpl
iret
or
repz
cmp
sbb
negb
jmp
ss
and
loopne,pt
adc
roll
xchg
subb
insb
add
adc
cmpsl
inc
lret
loopne
add
dec
lock
loop
pop
mov
pop
daa
call
not
stos
add
mov
add
cli
enter
mov
imul
push
scas
mov
mov
in
add
fbstp
xchg
inc
roll
sbb
dec
add
rclb
loopne
sub
push
test
adc
mov
mov
mov
pop
xchg
sbb
mov
push
sub
push
test
outsb
push
mov
out
fldcw
lock
and
sbb
scas
lds
arpl
stos
xchg
fmuls
xor
add
push
push
rclb
cmpsb
sbb
mov
rolb
jl
adc
add
inc
push
adc
int
clc
ds
mov
pop
dec
mov
test
roll
adc
dec
je
push
mov
push
add
adc
lret
or
fs
mov
je
push
lods
push
jnp
ret
pop
push
mov
stc
dec
push
insl
rol
enter
xor
out
clc
or
adc
aaa
clc
cmpsb
mov
pop
dec
adcl
stos
mov
imul
or
inc
push
add
ficompl
pop
push
sarl
pushf
clc
dec
cs
inc
pop
std
mov
inc
std
adc
mov
push
xchg
lret
stc
pop
pop
sub
push
xchg
pop
in
adc
orl
lcall
add
jge
mov
fldt
lds
mov
notl
lods
add
ret
mov
divl
jge
or
xchg
punpcklwd
roll
xchg
inc
dec
addb
cmp
xchg
mov
std
dec
inc
xor
jmp
pop
cmc
and
pop
inc
push
add
adc
js
ret
fstpt
inc
sub
loopne
push
shrb
rcll
mov
add
add
jns
cmpsb
inc
fldl
xchg
and
imul
insl
or
adc
add
xchg
stos
mov
pop
inc
mov
popf
rolb
insb
pop
jp
pop
push
mov
in
mov
lods
fbld
aam
sub
aad
icebp
mov
lret
push
inc
push
int
push
add
shrb
sahf
adc
xchg
enter
in
int3
add
ja
int
jmp
daa
in
xchg
les
test
mov
loopne
out
dec
test
fs
aam
pop
pop
loopne
add
pusha
inc
mov
out
sub
mov
xor
sbb
mov
lret
lret
dec
test
add
pop
mov
ficoms
jle
jg
dec
add
rcl
xchg
jb
or
je
pop
xor
inc
cmp
dec
addl
int3
inc
mov
imul
lods
or
mov
pushl
imul
cmp
rcrb
mov
enter
inc
je
xchg
loopne
rol
inc
repnz
pop
push
gs
push
adc
std
xchg
xor
add
pop
xor
arpl
pop
push
divb
inc
push
mov
je
imul
mov
pop
jne
pop
cmp
and
jg
shrd
push
cltd
pop
add
aaa
and
idivb
lahf
ret
mov
push
cltd
xchg
adc
aaa
and
in
add
outsl
repz
ror
cs
stos
fs
add
outsl
sub
or
stos
shr
add
outsl
adc
pop
rorl
cmpsl
push
xchg
stos
fs
shr
add
outsb
sti
add
ror
pushf
cs
stos
bound
and
add
pop
ror
xor
xchg
stos
bound
shrb
insb
mov
bound
shrb
fcomps
cld
inc
sub
bound
pop
inc
sub
mov
stc
pop
inc
and
sbb
jo
call
or
int
int3
aam
rolb
jmp
sbb
sub
sbb
xchg
inc
out
add
test
adc
xor
sub
jge
inc
push
cmp
ds
inc
and
xor
pop
inc
sub
and
inc
add
out
mov
mov
adc
inc
aaa
out
jl
adc
call
test
xorl
pop
inc
add
aam
adc
imul
push
jnp
push
jl
cmp
not
inc
add
outsb
mov
sbbl
lea
fisttpll
push
imul
inc
mov
ret
in
xor
adc
push
xchg
hlt
pop
push
stos
in
push
push
push
dec
mov
push
mov
divl
pop
ret
add
cmpsl
dec
jae
call
sbb
add
dec
jmp
adc
dec
call
xchg
mov
sti
stc
xlat
out
mov
ret
enter
sub
sbb
inc
push
imulb
push
inc
sub
sbbl
push
std
dec
adc
mov
rolb
dec
pop
mov
add
cmpsl
jno
cmpsb
fildll
lret
push
add
test
cmc
mov
ret
sbb
and
xor
in
repz
shlb
inc
stos
leave
xor
adc
dec
jnp
sbb
pop
jle
lds
roll
mov
sbb
sub
movsl
loop
es
lahf
in
mov
mov
outsl
add
xchg
push
mov
jmp
lahf
push
push
movsb
sub
cmp
fs
jo
mov
xchg
dec
sbb
mov
jbe
dec
mov
lret
cmpsw
inc
xor
xchg
loope
shrb
cmp
xor
and
or
iret
inc
jmp
push
cmp
mov
add
sbb
xchg
aam
xchg
enter
cmp
stos
sbb
ds
stos
js
xchg
sbb
sub
inc
push
adc
inc
insb
shrb
mov
filds
mov
inc
add
push
xor
call
fwait
inc
add
inc
push
inc
jo
repz
push
subb
push
ret
add
inc
or
movl
pop
rclb
in
mov
call
jl
into
test
loope
incl
iret
stos
add
mov
ja
sbb
out
sbb
mov
xchg
lods
sbb
cltd
push
jmp
sub
push
cld
cld
jns
pushl
ja
push
add
flds
pop
fdivs
imul
inc
mov
push
std
fwait
jmp
dec
call
in
out
out
rclb
loopne
sub
in
jae
shr
sub
sarl
inc
in
repz
xlat
out
add
arpl
rcrl
add
cmc
mov
out
sbbl
stos
test
fdivrp
pop
jge
aam
or
aam
inc
or
nop
mov
lds
add
adc
cmp
or
cmp
jle
adc
cmp
jne
sub
xor
sbb
mov
rcrb
and
fucomi
add
xchg
rcll
repz
imul
inc
sub
fdivrl
push
lcall
arpl
fnstsw
lret
sub
in
inc
fimuls
adc
xchg
mov
pop
lds
xchg
sbb
xor
push
sbb
movsb
subl
sbb
iret
int3
bound
xor
out
cmp
aad
fldcw
mov
lea
add
mov
fxch
dec
mov
jmp
rsm
adc
loopne
test
stc
test
rclb
adc
push
add
aam
loopne
mov
inc
sbb
pop
sub
xchg
adc
adc
scas
xchg
inc
test
inc
call
mov
push
faddl
add
aam
add
aam
push
imul
loopne
adc
inc
lret
daa
int3
ret
das
int
lcall
ffreep
shrb
icebp
jbe
mov
jg
insb
inc
std
sub
inc
inc
sub
dec
stos
in
adc
shll
add
ljmp
rorb
lcall
add
xchg
in
stos
push
xchg
dec
std
jno
pushl
push
dec
je
push
pop
nop
push
cmpsl
inc
or
mov
lret
movsb
out
fucompp
xchg
movsb
push
jae
pop
pop
je
incl
pop
int3
mov
push
xchg
insl
mov
and
mov
and
stos
mov
sahf
aam
inc
insb
pushf
jae
sub
sub
pop
sub
jg
in
mov
or
dec
aaa
out
int3
stos
add
jle
out
int3
stos
add
call
fsubs
imul
cmp
pop
jmp
scas
or
dec
imul
or
adc
inc
adc
inc
imul
dec
push
test
sbb
scas
sub
jne
mov
sbb
add
int3
std
dec
sub
adc
sarl
adc
loope
adc
xlat
add
jmp
mov
gs
cmp
inc
cmp
fstl
aaa
lods
xor
mov
loop
and
jnp
das
or
mov
arpl
mov
add
pop
or
add
das
and
aad
or
lret
jmp
cmp
jnp
in
mov
inc
popa
pop
sub
xor
mov
xchg
mov
xlat
lret
add
mov
sub
rolb
cmp
pop
mov
mov
mov
add
popa
call
mov
sbb
enter
popa
dec
call
xor
add
add
addr16
mov
or
sub
sub
push
roll
mov
jae
sti
shll
or
cld
mov
dec
jae
rcl
adc
push
mov
jae
repnz
or
mov
xchg
mov
adc
stos
inc
push
cmp
jecxz
sub
fsubrs
xor
push
sub
pop
movb
add
add
aas
imul
xor
or
scas
add
push
sub
adc
cmp
mov
sub
or
ljmp
jge
stos
add
sub
cld
sub
and
std
les
sub
add
shll
cmp
xor
jne
xor
jmp
mov
cmpsb
lcall
fimull
add
push
imul
pop
in
dec
add
or
dec
jmp
loop
daa
fildll
stos
add
into
outsl
aam
int3
fiaddl
sarb
fbld
stos
add
xor
jp
in
inc
cltd
sbb
out
arpl
sbb
dec
push
test
sub
sub
aad
push
add
jmp
ficomps
movsl
rol
cmpsl
mov
pushf
pop
in
pushf
dec
and
mov
cmp
out
lahf
in
fbstp
push
aaa
and
mov
pop
shll
aam
int
jmp
jbe
pushf
xchg
add
add
or
mov
outsl
add
or
je
push
sub
adc
dec
sarb
je
stos
pop
mov
cs
adc
lret
fidivl
rcrb
mov
or
push
shlb
adc
aad
rorb
sti
scas
jmp
inc
xor
mov
je
push
dec
test
mov
add
cmovns
xchg
push
hlt
push
sub
pop
clc
repnz
mov
mov
rorl
xorb
push
and
adc
inc
std
mov
pop
pusha
das
testl
and
xor
cmp
cmp
inc
push
roll
push
pop
cmp
clc
fwait
ds
daa
lods
cld
add
cmp
shrb
or
sbbl
mov
or
cmp
sbbb
clc
jno
ja
cmp
pop
cwtl
sti
cmp
push
jg
movsb
js
cmp
jp
in
jmp
fists
das
nop
hlt
pop
push
insl
clc
push
adc
sbb
shlb
mov
es
and
in
add
popf
add
adc
cmp
xor
add
movsl
mov
sahf
pop
cmpsl
enter
sbb
mov
or
fldl
fdivrs
sub
cmp
lret
shrb
int
jmp
push
pop
sub
shlb
cmp
add
ljmp
add
and
punpckldq
fidivrs
sbb
inc
adc
mov
jmp
sbb
int3
add
insb
pop
movsl
outsl
enter
sbb
push
fcmovnu
and
sbb
cmp
dec
push
sub
lret
lret
adc
push
stc
and
ja
dec
and
aas
repnz
add
mov
in
mov
mov
mov
push
ds
test
push
mov
push
or
pop
rol
push
add
not
cmp
pop
xlat
inc
add
push
jge
not
ret
mov
inc
mov
jmp
jl
mov
xchg
adc
test
insl
rolb
push
mov
int3
mov
add
cmp
pop
mov
clc
xchg
fisttps
mov
mov
push
je
mov
and
inc
add
jp
test
inc
add
repz
test
inc
add
test
push
cmp
mov
mov
aas
add
inc
mov
pop
cmp
std
xor
dec
inc
push
sarl
or
mov
inc
std
shrl
std
sub
mov
dec
sub
cli
or
jno
aad
addl
in
adc
sub
outsl
adc
xor
add
push
or
leave
jp
cmp
adcb
push
pusha
cli
fistl
add
push
outsb
jmp
shrb
adc
cwtl
xchg
stos
add
mov
popa
pop
sub
mov
add
sub
jmp
push
push
push
call
adc
mov
push
shlb
sub
aad
sbb
fadd
xor
test
les
sbb
stos
mov
pop
aam
push
add
xchg
push
out
push
push
movsb
dec
push
imul
mov
mov
stos
mov
out
cwtl
jp
jmp
sub
add
lds
call
inc
xchg
pop
adc
test
and
dec
mov
lods
lea
mov
cmp
add
mov
sti
adc
imul
es
dec
mov
push
shrb
or
mov
sub
sbb
sub
add
sub
jo
stc
je
inc
cmc
and
int
add
pop
inc
pop
or
incl
push
lea
in
clc
lcall
mov
aas
add
dec
mov
and
pop
xor
mov
dec
add
dec
mov
test
push
xchg
out
cld
xchg
mov
scas
shll
mov
popf
push
out
pop
movsl
push
and
sbb
lods
jle
dec
mov
push
js
push
inc
push
sarb
and
pusha
or
pop
mov
jae
add
call
push
fistps
inc
pop
jmp
push
xchg
stos
pop
cmpsl
xor
inc
sbb
pushf
mov
dec
fnstenv
shufps
std
stos
test
add
pop
jg
jge
jno
jbe
cmpsl
cld
sbbb
mov
movsl
lcall
sub
cmpsl
into
and
decb
jb
dec
daa
mov
cmp
sub
sub
or
sbb
jmp
shll
inc
inc
mov
inc
jmp
add
pop
mov
push
sub
and
sbbb
popa
mov
or
rolb
xchg
cmp
aad
jg
sti
test
xchg
adc
and
adc
lret
add
movsl
push
sub
push
test
sub
icebp
test
xchg
jbe
fsubrs
insl
pop
mov
lods
jmp
adc
and
roll
mov
out
add
jl
xor
lahf
mov
movd
cmp
push
pop
push
cld
push
xchg
pop
das
ds
mov
sub
mov
push
jg
cli
mov
add
dec
cmp
int3
pop
mov
push
cld
cmp
in
outsl
lret
inc
add
dec
mov
test
or
sti
sub
or
push
mov
test
mov
leave
hlt
jg
in
test
pop
push
push
fs
scas
inc
push
xchg
pop
test
std
imul
fnstenv
add
xchg
mov
or
cmc
aas
add
push
lahf
inc
mov
push
mov
sub
std
das
and
std
out
rol
and
lret
lahf
dec
mov
add
push
nop
pop
push
imul
pop
inc
push
add
rcl
jo
xchg
cmc
stos
mov
es
fisubrs
dec
sti
sbb
outsl
dec
jl
add
repnz
add
icebp
and
lret
loop
dec
and
dec
shll
dec
mov
add
addr16
fld
test
fsubl
lds
addr16
pshufw
mov
lock
fsubs
dec
xchg
stc
fdivr
and
push
pop
xorl
adc
scas
mov
mov
clc
add
pcmpgtb
mov
pop
sbb
adc
xchg
cmpsl
push
jb
jl
jmp
push
mov
je
inc
insb
pop
fsts
mov
xchg
add
add
push
pop
out
cs
out
enter
mov
aad
and
cmc
stos
add
mov
and
or
cmp
dec
jb
jl
sbb
cmpb
cmp
jne
push
inc
push
mov
or
test
mov
movsl
clc
jbe
xor
push
insb
repz
adc
int
lea
lods
sbb
mov
inc
int
fildl
rcrb
cmp
or
pop
sbb
insb
and
or
jl
andb
push
decb
adc
pop
fld
shrb
lret
cwtl
pop
adc
jle
add
sbb
adc
mov
jb
test
and
enter
idivl
push
int
pop
pop
pop
sub
pop
cmp
mov
mov
push
pop
sbb
call
int3
inc
cmp
adc
add
bound
and
jbe
sub
xor
mov
mov
out
add
jne
add
out
add
add
push
add
cli
xchg
dec
add
xchg
mulb
movsl
and
add
adc
sub
stos
jmp
adc
fstpt
push
jmp
inc
ds
imulb
adcb
ss
ret
insb
dec
je
add
test
dec
shrb
mov
and
pop
xchg
and
std
jae
sti
setge
iret
std
sahf
mov
add
sbb
stos
and
inc
adc
and
out
dec
sub
andl
xor
jmp
sbb
sub
fsts
cmpsb
dec
adc
pop
sbb
mov
push
mov
out
into
dec
gs
sbb
mov
dec
insb
fisubl
mov
push
sbb
mov
fs
sbb
adc
push
mov
mov
push
into
out
mov
xchg
mov
push
insb
fisubl
inc
push
out
das
gs
mov
add
mov
stos
add
sub
int3
push
dec
pop
lea
aad
dec
and
mov
xchg
psllq
jge
ror
enter
dec
push
ds
mov
inc
leave
adc
push
and
or
mov
ljmp
dec
xchg
mov
and
ss
lcall
sub
add
add
pop
pop
lcall
lea
pop
mov
ret
adc
imul
jne
inc
push
push
ficomps
jecxz
adc
mov
push
sub
add
sbb
inc
push
mov
mov
fisubs
int3
mov
cmp
mov
and
cmp
mov
cmp
sub
sbb
inc
push
push
mov
clc
add
cmp
fstps
sub
and
call
leave
pop
push
sbb
int3
lds
sub
jge
inc
add
mov
hlt
in
cmp
ret
sbb
add
rcll
jb
push
outsl
jno
stos
jle
sbb
sti
mov
adcl
rcrl
loop
out
test
push
or
les
ret
lods
aad
push
add
sub
repnz
adc
and
sub
mov
lock
pop
outsb
sbb
pop
popf
adc
pop
nopl
xchg
push
sub
mov
or
adc
inc
sbbl
imul
sbb
lods
inc
xchg
inc
bound
mov
jb
sub
add
add
mov
loope
jge
and
das
movsl
ds
lret
jmp
fsts
jb
xor
cs
xchg
cltd
mov
mov
sub
pop
dec
out
test
push
sbb
scas
jmp
push
loopne
mov
aad
std
push
scas
inc
lcall
test
divb
add
add
and
jbe
add
les
lock
mov
mulb
mov
shrb
xor
or
xchg
xchg
lea
sub
adcl
inc
jbe
add
push
push
push
mov
or
arpl
mov
je
jnp
lea
sahf
mov
xchg
mov
sub
sbb
lock
arpl
sarl
xor
add
cmp
out
sahf
or
jbe
mov
jns
cmp
sub
sahf
mov
popa
mov
cmp
push
out
jb
adc
addr16
cld
movsl
hlt
xchg
mov
mov
inc
push
sbb
pop
int3
add
sub
inc
adc
pop
push
arpl
rclb
jle
cmpsb
aas
add
cmp
jb
xchg
push
mov
shll
dec
leave
xor
js
sbb
testb
sbbb
les
repz
push
xchg
inc
pxor
jl
jae
das
add
shll
ret
in
lret
es
jl
sbb
mov
add
stos
pop
cmpsl
and
stos
add
jg
int3
into
stos
data16
jns
xchg
adc
sub
mov
dec
push
jns
test
pop
adc
andl
imul
xchg
sub
imul
es
stos
or
cmc
sbb
aas
push
mov
test
inc
push
pushf
lcall
sbb
sbb
shr
lret
sub
fldcw
lods
lods
sub
mov
pusha
mov
mov
das
mov
cmp
cld
inc
dec
sbbb
xchg
jecxz
push
subl
movsb
mov
push
lret
movsb
std
dec
pop
add
pop
and
and
iret
xchg
mov
sub
rsqrtps
jns
ret
leave
sbb
test
pop
jge
inc
aaa
cmc
pop
sbb
ret
jmp
orb
and
test
push
or
jl
jne
xchg
add
adc
les
mov
int3
lods
mov
decl
sbb
add
dec
std
add
adc
lret
cmpsb
cld
fldcw
lods
mov
cmpsl
imul
loopne
mov
mov
fsubl
jl
push
mov
mov
popa
cs
call
sub
mov
cmp
fnstcw
or
push
xor
xchg
movsb
imul
push
lods
jb
mov
lods
cld
xchg
roll
std
xor
mov
add
push
mov
xchg
mov
cld
or
xchg
out
shll
jmp
adc
movsb
and
ljmp
jmp
adc
jmp
je
jmp
inc
loopne
bound
and
out
jle
push
aas
lods
pop
shrl
cmp
adc
js
in
fldt
mov
jl
stos
add
adc
fdivl
sub
cmpsb
sbb
inc
dec
repnz
popf
add
stos
js
adc
push
xor
add
rcrl
ret
adc
add
shll
loope
jg
sbb
adc
mov
mov
cmpsb
data16
sti
mov
les
das
xor
repnz
sahf
scas
aad
popf
repz
subl
xchg
dec
sbb
sbb
push
pop
jnp
pop
subb
lahf
ja
int
jbe
dec
je
hlt
adc
mov
aas
inc
jmp
xor
mov
aaa
dec
lcall
and
rcrl
fyl2x
pushl
add
push
pop
jnp
movsl
jle
xchg
imul
add
ss
add
push
mov
jmp
xchg
cmp
mov
sub
mov
sub
jne
xchg
adc
int3
mov
push
jl
in
stos
dec
mov
add
or
dec
jno
or
bnd
mov
and
daa
mov
clc
push
fcoms
and
stos
jb
lahf
mov
or
add
add
sbb
stos
cld
fwait
jns
add
cmp
adc
push
mov
fs
cld
mov
lahf
jns
fwait
pop
mov
mov
lret
pop
fwait
mov
push
je
loopne
inc
mov
repnz
xlat
cmp
cmp
inc
js
cld
push
stos
jg
sbb
mov
add
add
rolb
fdivrl
mov
push
xchg
mov
push
cmpsl
pop
shll
cmp
pop
fsubrl
imul
xchg
and
es
xchg
jmp
mov
xlat
arpl
push
mov
mov
and
lods
inc
popa
adc
test
lods
add
les
fstp
jge
add
pop
out
adc
ret
sbb
imull
xchg
xchg
aad
lods
jne
or
inc
jb
mov
mov
jmp
popa
or
jbe
adc
stc
enter
xor
mov
jmp
inc
andl
xchg
inc
mov
mov
add
adc
mov
jo
or
jl
or
mov
pop
orb
add
adc
stc
or
push
hlt
stos
add
clc
mov
push
pushf
int3
inc
xchg
push
xchg
mov
hlt
xorps
mov
int
dec
movsl
sub
inc
push
repnz
mov
divl
decl
mov
inc
scas
stos
xchg
mov
inc
xchg
testl
lcall
xchg
sbb
adc
mov
xchg
xchg
int3
jne
js
call
sti
inc
add
or
jnp
mov
add
js
sub
push
pop
mov
and
inc
add
mov
sbb
inc
add
push
push
inc
push
cmpl
int
inc
add
jp
das
popf
jbe
lahf
mov
addr16
mov
cld
cmp
idivb
enter
push
in
test
out
jl
loopne
push
xchg
sbbb
mov
shrl
sbb
out
pop
jo
add
mov
pop
push
mov
stos
add
pop
jo
iret
pop
js
outsl
ja
adc
pop
jecxz
leave
daa
les
push
add
sub
mov
shrb
sbb
jmp
jns
add
rcr
loop
leave
pop
les
push
inc
add
mov
mov
ss
or
daa
add
roll
sbb
aam
cmp
mov
adc
adc
mov
and
push
pop
mov
dec
or
jmp
into
hlt
sbb
test
in
sub
shr
sbb
pop
add
sbb
dec
push
sub
ja
rcll
add
add
or
sbb
dec
or
aad
outsb
add
dec
mov
pop
sub
scas
mov
cli
sysexit
cmp
jnp
subl
mov
outsl
push
mov
enter
clc
pop
cmp
sbbb
aaa
push
incl
out
push
aaa
pop
push
clc
scas
pop
dec
incl
jo
add
cmpl
inc
and
mov
xor
int3
inc
arpl
or
call
pop
push
fsubrl
mov
jp
dec
cmp
lock
orb
cld
xchg
inc
cltd
mov
push
enter
inc
push
imul
enter
jbe
movsl
mov
cld
shrl
enter
jbe
movsl
mov
add
add
call
add
xchg
add
outsl
lock
jp
rclb
xor
cmp
stc
andb
pop
inc
jle
jle
mov
add
addr16
xchg
xor
dec
inc
fdivrs
inc
push
shrl
inc
xor
dec
testb
xor
cmpsl
mov
sbb
andl
imul
setp
add
ja
xchg
int3
and
sarb
sbb
daa
pop
ds
jo
or
mov
push
icebp
xor
jae
jo
adc
daa
aaa
add
stos
mov
push
pusha
fsubl
sub
dec
imul
mov
xchg
mov
or
lret
sbb
jp
pop
or
mov
jmp
add
loope
sub
push
push
call
inc
pop
incl
movsl
rol
pushf
dec
mov
mov
jmp
push
dec
pop
push
stc
adc
jmp
pop
aad
mov
add
mov
je
mov
sbb
ja
outsb
enter
xchg
inc
dec
outsl
add
mov
pop
push
in
adc
or
es
xchg
ja
mov
in
fcoml
call
xlat
shlb
mov
js
int3
test
mov
mov
aam
js
ret
test
inc
mov
insl
leave
repnz
push
subl
das
add
mov
jecxz
test
es
add
push
push
cmp
or
or
and
lea
push
scas
call
push
xchg
dec
add
nop
inc
jae
movb
negb
mov
addl
movsl
add
out
out
lret
inc
mov
push
subl
pop
into
jne
mov
out
xchg
cld
movsl
lods
xchg
mov
enter
push
jae
push
inc
call
sub
push
fbld
pop
js
mov
outsl
jnp
sbb
mov
sub
push
xchg
lcall
jbe
or
shlb
add
adc
int
or
aaa
rclb
jle
add
and
add
shrl
xor
shl
mov
jg
add
aad
int
jge
fsubrl
loopne
cwtl
jnp
out
xor
test
inc
push
pop
fwait
cmp
mov
jmp
xor
xorl
fsub
add
fisttpl
shrb
mov
adc
jmp
xor
in
dec
mov
push
outsl
iret
je
add
xorl
lds
hlt
mov
mov
jmp
or
sub
rorb
mov
roll
out
int
jbe
sbb
cwtl
clc
pop
pop
enter
cmp
inc
loopne
das
mov
stc
movsl
dec
hlt
add
xor
sbb
add
out
pop
push
loopne
xchg
scas
lea
sbb
inc
aas
push
jg
jp
je
xchg
int3
push
sti
ja
pushf
xchg
sub
fsubs
mov
add
push
lods
sbbl
cmp
stos
int
add
into
dec
pop
fwait
int3
inc
mov
sub
lret
inc
idivb
pushl
pusha
xchg
dec
sti
mov
push
add
mov
jo
repz
iret
sub
mov
inc
call
add
xor
adcl
or
mov
push
fs
cmp
pop
int3
pop
push
ss
lcall
mov
cmp
repz
clc
inc
mov
mov
xchg
insb
jg
mov
push
mov
push
clc
lods
and
add
add
insl
testb
inc
add
jne
sti
sbb
jo
and
orl
and
fbld
imul
add
ljmp
dec
inc
cltd
in
into
xor
fdivs
pop
dec
cmp
push
in
loop
and
movsb
mov
pop
outsb
inc
adc
push
shl
xor
shrl
aas
cli
mov
inc
fxch
dec
imul
mov
push
fistps
push
mov
jle
into
add
pop
adc
nop
imul
stos
mov
lods
xchg
add
mov
xor
stos
xor
nop
test
call
push
rol
and
leave
test
xchg
xchg
pop
mov
rcll
outsb
outsb
mov
data16
add
add
dec
add
scas
clc
mov
sub
sub
xchg
push
jmp
mov
lods
and
adc
ds
sbb
inc
cltd
xchg
push
adc
fwait
incb
sbb
rcll
shrl
adc
fs
jle
add
cli
ss
push
jl
mov
test
mov
inc
pushl
ror
pop
jecxz
lret
inc
jecxz
sub
push
push
stc
cmovb
mov
push
es
push
dec
sbb
sbb
stos
adc
rorb
sbbl
ret
popf
lret
jb
xchg
dec
push
clc
xchg
mov
pusha
cli
mov
in
ljmp
sbb
add
popf
out
push
inc
mov
inc
ljmp
jmp
jo
arpl
nop
cld
or
add
push
popl
and
jne
jg
outsl
mov
scas
outsl
std
xor
mov
push
jne
clc
dec
popf
cmp
xchg
mov
cli
xchg
cld
mov
push
sub
pop
fstl
or
cld
xorl
add
jecxz
bound
push
call
inc
add
scas
js
add
inc
add
pop
sub
cld
xchg
aam
mov
xchg
xor
in
repnz
daa
ret
mov
pop
xor
push
ja
roll
rclb
cs
jmp
imul
arpl
add
aaa
lret
mov
enter
imul
aas
cltd
adc
jns
sbb
neg
sub
cmpb
adc
add
adc
and
inc
dec
inc
int
imul
jmp
adc
fisubrs
inc
jmp
ret
mov
rcll
scas
subl
push
sbb
roll
add
insb
sar
mov
outsb
in
push
test
mov
push
stos
in
adc
andl
push
fs
insl
popl
es
hlt
ss
insl
std
dec
push
mov
xchg
lret
add
cltd
jl
or
cld
mov
inc
add
mov
push
mov
mov
out
pop
mov
cld
xor
call
add
pop
mov
jno
or
lea
push
lret
adc
rclb
adc
mov
test
push
push
inc
xchg
mov
stos
push
mov
clc
loope
mov
out
push
addb
popl
ja
scas
jle
add
mov
aad
in
pusha
cli
xchg
daa
add
ljmp
pop
je
jge
repz
sub
or
decl
or
xchg
fnstenv
lds
stos
data16
fsubr
inc
push
xchg
dec
mov
mov
sub
lea
out
add
in
cmpsl
inc
inc
push
pop
jne
mov
cmp
xchg
adc
stos
test
sti
jl
enter
mov
shrb
jae
adc
push
aas
js
cli
stos
xor
mov
stos
fldt
xchg
shlb
test
sbbl
stos
rorb
push
jbe
flds
push
mov
icebp
or
leave
sub
loope
stos
jle
shlb
rolb
lret
add
imul
jp
stc
inc
lds
push
inc
sbb
inc
in
into
inc
jmp
push
push
das
adc
inc
fs
dec
and
and
shll
mov
pop
cmp
mov
cmp
cld
sub
adc
imul
jmp
add
loop
jmp
flds
test
cmpsb
aas
inc
jmp
adc
cs
mov
jmp
movsl
dec
das
add
adc
mov
pushl
dec
stc
psllq
incl
movzwl
ja
adc
aam
inc
out
mov
xor
shl
mov
add
dec
jg
inc
aam
push
icebp
lcall
push
and
push
xor
mov
xchg
sub
lcall
pop
mov
mov
sbb
inc
add
roll
push
jae
dec
ss
inc
add
sbb
xchg
cld
xchg
push
pop
mov
push
mov
int
xchg
mov
jae
iret
incb
movsl
sub
imul
out
inc
inc
fs
mov
push
adc
ss
mov
in
jo
roll
adc
pop
xor
jmp
dec
mov
in
inc
add
mov
add
add
push
repnz
dec
roll
and
daa
dec
cli
enter
aaa
rorb
push
push
mov
jns
sbb
idiv
fld1
mov
xor
add
dec
inc
das
pop
int
ss
in
loopne
int3
stos
add
sahf
rcrl
imul
inc
leave
mov
xchg
sbb
xchg
int3
shr
xchg
movsb
and
adc
movsl
jnp
sub
out
int3
or
lahf
add
sarl
jecxz
daa
xchg
not
int3
pop
inc
or
add
cmc
rorl
xlat
inc
sbb
rolb
imul
fiaddl
add
adc
mov
adc
cli
mov
adc
adc
push
sarb
aaa
idivb
pop
pop
popf
stos
push
les
cmp
add
and
outsl
inc
sbb
bound
mov
jo
in
insb
inc
idivb
add
inc
mov
inc
add
rolb
or
inc
jp
add
je
mov
push
or
push
mov
js
cli
or
aas
hlt
push
gs
ror
add
mov
mov
cld
inc
pop
je
fnstenv
push
push
pop
mov
push
xchg
xchg
mov
inc
notl
adc
cld
nop
push
mov
cld
pop
lea
dec
mov
jp
jmp
cmp
push
mov
push
insb
fwait
adc
push
mov
jecxz
cltd
push
cmp
out
fs
dec
add
fs
sti
jns
int3
jno
out
aaa
mov
popf
loope
jae
test
push
cmp
inc
decl
dec
cmp
mov
lcall
insb
xchg
sbb
call
popf
mov
cmp
rcll
icebp
repnz
pop
outsb
cltd
ret
repnz
frstor
repnz
mov
xchg
push
sub
add
push
push
jge
dec
psubsb
fwait
jbe
in
repnz
sub
leave
cmpsb
test
dec
adc
xor
icebp
out
mull
in
add
lret
les
jbe
ret
xchg
jae
sbb
iret
jl
dec
inc
int3
shl
push
push
sarl
lret
lahf
xor
js
repnz
jbe
movsl
pop
fcoml
inc
out
add
add
fidivrs
int
repnz
xchg
hlt
stos
mov
aam
inc
jmp
out
mov
jnp
xor
sbb
ja
mov
lret
jmp
data16
inc
jmp
push
sbb
sub
fsubr
sbb
dec
addb
fidivrs
insl
add
aam
jmp
loopne
lret
mov
cmp
inc
push
outsb
xor
repz
push
sbb
and
mov
mov
and
mov
mov
and
mov
mov
and
mov
mov
add
nop
pop
dec
add
pop
push
rclb
test
call
inc
mov
iret
dec
ret
mov
add
adc
mov
push
mov
or
pop
ljmp
cli
inc
mov
stc
je
adc
and
stos
xorb
adcl
xchg
mov
sbb
jg
push
cli
mov
jp
inc
add
push
cli
inc
push
in
js
std
pop
cli
inc
push
hlt
stc
cmp
out
je
repnz
xchg
sbb
test
je
and
dec
rol
clc
inc
add
push
inc
mov
adc
push
and
lock
jg
fs
jmp
or
adc
daa
les
gs
pusha
push
stc
add
inc
leave
xor
inc
add
mov
call
shrb
mov
stos
xor
out
stos
add
jns
add
sar
fstpt
or
sahf
adc
pushf
sub
imul
sti
jb
es
in
rcrl
sbb
pop
jnp,pn
fldt
inc
lds
adc
out
mov
or
pop
in
int3
pop
ds
roll
add
add
aad
movb
call
inc
adc
cli
ret
rolb
xchg
add
mov
mov
jle
ja
fs
xor
aam
test
xchg
out
mov
and
jmp
imull
in
mov
imul
mov
add
hlt
fwait
pop
push
mov
xor
xor
or
and
add
mov
mov
sti
loopne
or
das
adc
jne
mov
adc
sbb
insb
pop
addb
inc
add
pop
push
in
fnop
inc
add
mov
rolb
cli
sub
pop
cmp
inc
adc
push
aam
xor
adc
add
adc
push
xchg
adcl
mov
jns
add
jne
hlt
mov
shl
ds
in
jb
and
mov
leave
jp
orb
jbe
and
adc
pop
add
test
push
fcompl
jle
popf
add
cmpsl
sbb
mov
mov
leave
out
inc
jae
sbb
shlb
inc
negb
ljmp
cmp
sbb
enter
movsl
mov
inc
inc
sarl
push
pop
mov
sub
aad
add
pop
xchg
xor
stos
stos
insb
je
sarl
lods
add
pop
daa
call
outsb
stc
aad
add
xor
pusha
add
movsl
mov
sbb
add
movsl
xchg
jbe
jae
lret
add
imul
xchg
test
ficompl
mov
fnsave
out
jg
shr
inc
insb
pop
fnstsw
xchg
and
stos
hlt
mov
mov
jb
push
adc
dec
or
enter
add
sub
out
stos
pop
pop
add
ficoms
or
cmp
xor
jl
mov
bound
jg
lahf
imul
jmp
lcall
pop
pop
push
add
dec
mov
add
int3
je
mov
call
cld
xchg
pop
or
in
aad
push
arpl
adc
movb
aaa
push
stc
jne
pop
xor
jb
sub
inc
adc
stos
add
xchg
pop
adc
test
mov
mov
and
lret
mov
and
sub
xchg
aam
test
dec
mov
lock
call
cmp
lods
add
inc
adc
jp
add
cli
inc
inc
ret
cltd
cli
inc
add
mov
jge
loope
jae
repnz
jae
dec
mov
inc
add
mov
insb
es
mov
jnp
scas
icebp
mov
add
jnp
and
cli
push
xchg
mov
pop
push
or
clc
jae
into
int3
lds
jno
add
test
adc
sub
stc
cld
popf
sub
pop
mov
repnz
jae
rorb
imul
pop
xchg
out
ret
or
call
jo
jae
mov
sbb
fstpt
xor
out
aaa
cli
mov
mov
mov
adc
xorl
add
and
adc
lods
pop
les
dec
addr16
cmp
xor
or
sarb
push
fldenv
outsb
shlb
mov
rorl
bound
cmpsl
and
inc
mov
pop
das
cmp
addr16
jmp
mov
fxch
lods
mov
mov
nop
xchg
mov
sbb
hlt
pop
jmp
add
mov
jmp
push
je
nop
push
mov
adc
push
jnp
hlt
inc
ret
add
mov
jg
fs
jmp
add
pop
shrl
fs
or
aas
add
and
xor
jge
mov
sti
xorb
call
add
fnstenv
pushl
and
push
mov
push
lods
add
inc
push
mov
add
and
inc
pushl
pop
into
add
sub
push
push
add
sub
push
outsl
xchg
mov
push
andb
mov
jae
shlb
dec
sar
push
mov
adc
pop
daa
mov
cmpsl
testb
lahf
mov
push
jmp
cli
in
dec
adcl
fcompl
jbe
add
cli
lret
mov
stos
cld
cld
xchg
ja
add
rcrb
inc
ror
mov
int3
cld
cld
jbe
aas
add
rorb
and
lret
orb
cld
cmpsl
lods
xchg
mov
popl
pop
and
mov
adc
cld
add
stc
inc
add
rol
cltd
shl
daa
xor
sub
push
rol
fistpl
sbb
subb
sub
cltd
shrb
mov
push
shrl
cmp
jb
push
rcll
inc
push
xorb
dec
pop
daa
iret
mov
jecxz
out
and
daa
cmp
and
stos
push
jae
jns
pop
in
xchg
jno
insb
jmp
pusha
mov
sbb
xchg
inc
insb
fcmovbe
mov
bound
cmc
mov
sub
xchg
fs
jbe
pop
pushl
inc
push
data16
push
mov
mov
pop
aad
ds
inc
insb
pop
aad
inc
and
inc
lcall
add
add
in
jb
jmp
mov
push
ja
cld
sub
in
mov
push
pushl
shl
mov
shll
add
push
push
cld
sbb
dec
test
dec
test
mov
push
mov
lea
cs
mov
or
add
add
ss
sub
lock
mov
push
fisubl
or
sub
push
cld
les
clc
je
push
ds
pop
mov
jle
mov
repnz
stos
mov
mov
mov
jmp
stc
dec
mov
ljmp
decl
shrl
pop
add
aaa
mov
add
or
mov
ds
mov
outsl
add
dec
stos
movmskps
sbb
inc
sbbb
cmpb
cld
into
xchg
jb
popa
xor
inc
std
shll
add
mov
enter
into
lock
xlat
push
and
sub
fcmovnu
lds
in
inc
xorb
mov
loopne
test
stc
xchg
mov
cltd
pop
mov
push
xor
cld
loope
mov
fnstenv
mov
fildll
push
or
push
xchg
in
sub
out
xchg
mov
cmp
xchg
loopne
mov
fimuls
add
shll
add
fbld
mov
push
imul
mov
add
add
pop
xchg
subl
mov
inc
out
inc
jne
dec
xlat
jmp
out
xchg
cmp
mov
fs
fdivrl
fs
daa
dec
pop
leavew
inc
idivb
adc
cmc
adc
fdivrl
mov
mov
fnstsw
mov
stos
push
icebp
sbb
test
dec
push
test
add
int3
icebp
std
pop
ja
cmc
rclb
je
xor
scas
jbe
je
call
rorl
bound
roll
test
push
jb
lahf
push
out
and
push
or
shrb
mov
and
pop
mov
roll
roll
cli
xor
mov
and
decl
mov
aam
mov
inc
cmpb
add
cmp
mov
fbld
jmp
push
sbbb
call
jne
pop
int
aaa
shrl
lea
cmp
inc
add
jl
cld
and
clc
aad
inc
add
jge
cld
outsb
xorb
stc
add
mov
cmc
jae
ds
adc
sub
add
mov
jmp
sbb
xchg
mov
dec
stos
insl
out
mov
adc
fucomp
xchg
dec
lea
out
aas
add
imul
sub
pop
jmp
and
repz
inc
jp
les
cmp
adcb
cld
out
outsb
or
ss
dec
inc
fdivl
dec
pop
push
push
mov
push
jge
push
shll
les
push
jne
add
rcr
sbbb
pushf
fcomps
dec
cli
push
ljmp
xchg
xorl
rcr
stos
mov
lret
es
rcr
jle
icebp
jge
pop
cmp
pushf
fdivrs
dec
lcall
dec
mov
mov
pop
pop
ret
in
push
lods
cmp
add
mov
push
inc
cltd
add
fcoml
jb
fsubrl
bound
enter
faddl
push
shrb
pop
xchg
stos
push
pop
in
sbb
test
sbb
fildl
sbb
inc
repz
sbb
rolb
push
jmp
les
or
lret
fnstsw
add
inc
sarb
mov
fchs
adc
mov
fcomps
or
xchg
cmp
pushl
and
cld
clc
rorl
into
sarb
popf
sbb
je
sbb
dec
inc
pop
and
clc
je
mov
fsubs
mov
cli
fldenv
jb
iret
xchg
dec
mov
sub
lret
int
mov
add
cmp
call
sub
pop
stc
mov
inc
andb
test
pop
stc
lea
cld
sti
lds
call
mov
xchg
sbb
inc
push
lock
push
mov
and
sub
std
and
or
xor
dec
adc
stos
daa
popl
push
ljmp
xchg
xor
inc
cmp
mov
outsb
mov
ret
push
add
pop
out
test
mov
ljmp
cmp
inc
add
ljmp
movsl
pop
ds
xchg
imul
shrl
frstor
imul
add
add
add
push
jge
lods
cmpsb
subb
mov
repz
add
jmp
xor
mov
das
cmp
xchg
jmp
cmp
hlt
mov
add
jmp
das
das
add
stos
fwait
jl
lret
push
xchg
cmp
add
jmp
mov
mulb
push
xor
add
das
add
and
inc
jb
adc
xor
and
mov
pop
loope
sbb
out
dec
add
sub
xchg
sub
push
xchg
bound
xchg
sub
dec
aad
pusha
push
lods
dec
pop
push
lods
pop
cmp
xchg
pop
std
andb
lds
or
aam
in
xchg
inc
adcl
mov
testb
ret
mov
dec
cmpl
push
mov
dec
mov
and
ljmp
mov
call
jp
xor
mov
pop
cmp
adc
int3
inc
sbb
jae
fists
mov
add
pop
mov
nop
shlb
pushl
mov
dec
sbbb
inc
je
jae
and
push
cmp
addr16
sbb
cmp
inc
add
and
sahf
shll
push
adc
ljmp
pop
jo
stos
paddusw
cmp
jae
cmp
call
push
stc
jbe
aaa
push
int3
inc
std
jmp
sub
movsl
xchg
mov
dec
into
lahf
mov
adc
mov
pop
int
inc
add
xchg
aas
inc
mov
test
pop
xchg
jns
xor
adc
jmp
pop
inc
add
jns
add
and
sbb
push
inc
inc
sbb
stos
push
lret
inc
sarb
push
jmp
and
inc
repnz
cwtl
push
movsl
lea
loope
shrl
add
shl
inc
into
scas
inc
jmp
insb
aad
fiaddl
mov
adc
cs
push
sub
push
test
add
jnp
pop
testl
inc
ret
sbb
push
inc
test
stos
push
aad
mov
mov
out
mov
mov
sbb
roll
fs
mov
jl
ljmp
mov
xchg
xchg
sbb
inc
cmp
add
fnsave
push
fbstp
add
add
into
stos
jb
daa
mov
js
test
cld
je
inc
mov
xor
mov
sub
pushl
js
enter
add
add
stos
xor
daa
mov
cltd
inc
into
inc
call
mov
int3
inc
add
sbb
fcompl
mov
xchg
or
into
inc
add
jge
or
pop
lds
sti
jmp
outsb
nop
inc
add
push
add
fwait
daa
mov
add
adc
lods
out
xchg
fs
cltd
inc
adc
xchg
pop
addl
inc
add
arpl
push
sub
pop
loop
and
call
inc
add
xchg
jnp
mov
pop
cmp
sub
cmp
cld
and
sti
decl
mov
cmp
mov
cli
push
xchg
push
jb
loop
jp
pop
int
mov
mov
imul
leave
jmp
add
push
ljmp
pop
inc
mov
fstps
cmp
shlb
push
cmpsl
push
daa
pushf
adc
cmpsl
mov
imul
mov
cmpsl
mov
jns
orl
js
sbb
sub
ss
and
and
xor
push
mov
jmp
pop
cmp
je
popa
sbb
sbb
adc
sbb
mov
bound
js
into
mov
jmp
add
into
mov
test
inc
mov
mov
data16
mov
push
or
adc
push
roll
sbb
loop
stc
fst
mov
int
add
ja
cld
add
arpl
shlb
hlt
add
jge
decl
jb
and
add
rolb
inc
aad
add
mov
inc
ljmp
pop
loope
add
call
in
jbe
inc
push
fbstp
rolb
push
mov
aad
mov
mov
pop
dec
push
mov
in
rolb
pop
mov
push
jge
mov
mov
addb
ja
stc
pop
cmp
cmc
push
mov
sub
cmpsw
hlt
leave
mov
fdivrs
add
inc
jp
jbe
loopne
mov
cmp
jecxz
mov
sub
xchg
cld
shll
xor
mov
push
ljmp
cmp
mov
fistl
jno
mov
data16
add
add
cmp
mov
rorb
and
sarb
adc
mov
in
add
mov
xor
scas
mov
sbb
jg
in
shrl
pop
inc
int
add
pop
pop
pop
jno
iret
add
xor
mov
xchg
int3
inc
faddl
stos
sub
mov
mov
out
test
xor
pop
mov
mov
mov
roll
pop
push
and
lret
sbb
addl
push
cltd
sti
js
roll
stos
push
mov
jmp
inc
jmp
inc
cli
jmp
in
addl
push
mov
mov
add
mov
ss
jmp
cmc
cmp
and
orl
out
sti
nop
and
inc
pop
fwait
push
sahf
mov
pop
push
xor
pop
jecxz
sbb
xchg
lock
mov
incl
xchg
pop
add
add
stc
rolb
mov
mov
js
mov
into
inc
data16
add
add
lods
mov
popa
push
add
add
sub
and
push
aad
data16
and
repnz
pop
and
ja
rolb
mov
mov
lock
aad
inc
data16
adc
dec
xchg
int
inc
push
int3
outsb
push
mov
sbb
xlat
mov
data16
add
add
cmovo
js
add
fdivrl
add
inc
sbb
mov
mov
sbb
ljmp
mov
inc
xor
or
adc
inc
and
push
into
push
mov
sbb
sub
push
mov
clc
inc
add
mov
sub
jno
int3
inc
or
cmp
mov
test
stc
mov
xor
push
mov
mov
out
xor
push
scas
pop
and
pop
out
mov
mov
sub
mov
loopw
or
das
and
cli
mov
add
roll
lea
mov
cltd
push
xchg
pop
lock
stos
add
clc
pop
pop
ljmp
xor
dec
mov
push
jno
inc
setnp
push
inc
rolb
add
sbb
lcall
jg
bound
shll
jo
add
scas
enter
adc
jns
inc
jmp
sbb
das
lret
mov
jle
jnp
rol
test
sub
pop
popa
and
and
or
add
add
das
lret
and
mov
jns
shll
jo
sbb
sub
enter
adc
popa
adc
inc
jmp
ljmp
add
cld
mov
sbb
aad
mov
push
jg
test
inc
mov
sarl
std
sti
and
roll
mov
test
pop
outsl
or
add
imul
rolb
hlt
addb
and
jno
inc
dec
push
and
mov
pop
add
add
in
rolb
jmp
mov
and
mov
push
sub
push
mov
int3
inc
add
add
xchg
lret
pop
scas
or
mov
aas
add
xor
jo
mov
incl
cmp
loopne
mov
pop
xchg
jg
push
xor
ret
das
enter
int3
addb
push
rcr
std
jmp
and
inc
adc
sub
std
rcll
std
mov
test
lret
test
sahf
mov
xchg
pop
rorb
xlat
inc
ret
jg
dec
or
popa
cs
aaa
fisttpll
pop
fadds
sub
inc
add
mov
and
lret
pop
pusha
test
add
lahf
mov
scas
sahf
lods
jb
add
push
into
out
mov
add
shll
ja
les
out
add
outsb
and
or
add
xchg
sbb
xchg
pushaw
stc
cmp
dec
sub
daa
test
mov
inc
jmp
xchg
push
pop
mov
adc
pop
aad
shll
inc
pop
sbb
das
cli
cwtl
pop
dec
fs
xor
inc
xchg
lds
lcall
mov
push
movsl
pop
fisubl
dec
insl
mov
mov
movsb
add
addb
push
sub
popf
inc
jmp
test
movb
jne
push
push
les
xor
sahf
ja
inc
call
sbb
xchg
or
jb
mov
test
iret
inc
lea
lock
aaa
iret
inc
call
lods
adc
loopne
push
mov
mov
leave
xchg
pop
iret
inc
test
loope
mov
addr16
ret
add
scas
lea
icebp
mov
inc
push
mov
dec
add
push
push
aad
call
inc
add
std
mul
or
xchg
in
iret
call
stos
fisttpll
mov
mov
int
popa
das
jns
movsl
mov
push
add
xchg
aad
xchg
mov
clc
dec
or
test
out
xchg
loopne
add
shlb
and
or
fimull
mov
fnstenv
loope
xor
fnstenv
scas
mov
repz
xchg
mov
add
inc
orl
sbb
push
roll
fisttpl
mov
mov
stos
fsubl
cmpb
and
push
mov
xor
jmp
scas
fwait
inc
aaa
xor
push
dec
push
mov
fists
inc
fimull
cltd
xor
lods
pop
jns
and
cld
or
rcr
je
stc
test
sub
repz
arpl
cwtl
loop
inc
imulb
mov
mov
int3
add
test
les
scas
dec
cs
mov
bound
fidivrs
sarb
test
pusha
cmpsb
jge
push
sbb
mov
sbb
and
das
mov
mov
mov
mov
dec
cltd
test
dec
jb
and
pop
add
pop
mov
push
rorl
add
in
mov
in
push
push
jmp
or
mov
and
mov
push
mov
add
add
shlb
ja
inc
call
add
out
fcmovnbe
inc
add
dec
xor
incl
jg
shlb
fbld
mov
mov
dec
add
mov
jbe
jle
mov
sub
cld
cmc
rolb
push
and
std
jb
loopne
mov
dec
xor
sub
int
lahf
into
xorb
push
sbb
movsb
jg
dec
movsl
outsl
outsl
std
sub
hlt
xchg
sub
out
jb
into
addb
add
add
iret
dec
lds
sbb
inc
jbe
xor
mov
inc
add
jo
cmp
iret
call
ss
std
sbb
pop
out
push
mov
cli
mov
dec
lods
aaa
test
push
xchg
fisubrl
inc
stos
mov
les
xchg
mov
jmp
sahf
add
rolb
roll
or
adc
xchg
stc
nop
stos
add
sub
add
mov
xchg
bound
stos
push
xchg
stos
mov
push
mov
inc
push
xchg
cmpsl
out
adc
stos
sbb
stos
mov
push
pop
inc
jle
roll
jmp
mov
roll
in
cmc
fldl
add
fwait
cmp
jmp
pop
shl
and
and
fldl
jmp
pop
shll
loop
sub
fldl
jmp
jecxz
rclb
rolb
jmp
pusha
pop
int
or
in
inc
add
jmp
adc
mov
jmp
jge
inc
pushw
aam
out
add
bound
ds
or
fidivrl
add
iret
and
mov
das
pop
xchg
mov
push
popf
cvttps2pi
daa
aad
call
cs
mov
lret
pop
inc
test
aad
add
fsts
push
pop
xchg
stos
mov
stc
adc
pusha
mov
jecxz
js
hlt
call
push
cmp
xor
add
dec
mov
inc
das
fldl
push
lods
negl
stos
inc
std
scas
cltd
cmp
aas
add
add
pop
push
std
add
inc
mov
stos
aad
ljmp
cld
pop
cmp
add
lods
push
push
xchg
sub
mov
repz
inc
js
sbb
mov
jns
add
sbb
incl
cwtl
inc
add
mov
jb
aas
jno
lahf
dec
rorb
test
or
shll
test
enter
clc
xlat
sti
scas
mov
add
test
add
lcall
pop
int
enter
iret
adc
stos
jl
inc
iret
pushf
sahf
mov
add
cmpsb
add
pop
int3
xchg
int
rcrb
icebp
ret
stos
xchg
or
inc
outsb
int3
pop
mov
pop
inc
xor
jp
arpl
mov
ds
inc
call
les
dec
jb
inc
outsl
and
mov
addr16
lret
cmpsl
sbb
mov
jmp
add
out
int3
lods
xchg
xor
sarl
aam
loop
jmp
sbb
mov
aad
clc
inc
pusha
sbb
fnstenv
jb
dec
inc
stc
pushf
mov
push
mov
mov
rcrb
mov
add
pop
pop
cld
jne
add
faddl
aaa
aam
jbe
pop
out
lods
jo
in
add
roll
imul
mov
outsl
lock
push
cmp
adc
mov
inc
cmp
adcl
inc
addl
sub
push
or
sarb
push
adc
int
rcrl
in
roll
and
out
rolb
ret
lds
mov
mov
test
dec
pop
push
inc
mov
push
call
cld
add
cwtl
vucomisd
or
add
pop
insb
sar
inc
lods
and
inc
pop
test
jb
xor
dec
push
leave
cld
mov
ret
popf
lock
mov
fucom
into
leave
sbb
dec
xor
push
imul
inc
in
ret
jmp
mov
add
popf
add
nop
jno
hlt
test
jl
imul
pop
call
sbb
rcrb
shrl
inc
push
mov
lahf
adc
stos
sbb
fcompl
xlat
movsl
lret
sbb
inc
repnz
shll
mov
test
push
jb
mov
xchg
shrl
repz
add
add
ljmp
cli
in
or
mov
call
icebp
dec
ljmp
dec
lock
popf
pop
inc
jmp
shll
jns
jmp
loope
arpl
mov
iret
inc
jmp
sbb
mov
outsl
push
iret
inc
jmp
sbb
call
add
mov
gs
mov
jmp
lcall
pop
mov
rcll
adc
mov
negb
mov
jmp
pop
rol
sub
and
inc
add
push
mov
inc
push
and
sbb
test
loop
lea
jl
cli
loopne
adc
jg
lcall
push
clc
sldt
add
add
dec
and
aaa
ror
inc
and
or
inc
lea
rclb
push
mov
pop
sub
test
or
jp
pusha
inc
xchg
cmp
xor
shll
pop
adc
xor
je
push
cmp
mov
sarl
inc
jae
push
add
add
jno
mov
test
int
pop
cltd
jge
cmp
dec
and
das
dec
and
pop
xor
into
mov
int
ss
xchg
inc
addl
mov
mov
test
push
icebp
mov
adc
test
mov
jb
cmc
ret
mov
test
fwait
aas
add
test
jnp
cli
sarb
add
dec
filds
rcrl
adc
addl
mov
arpl
insb
add
or
aas
in
sbb
loop
push
pop
loopne
inc
data16
and
mov
xchg
push
mov
lcall
inc
stos
add
inc
push
loopne
into
stos
add
hlt
mov
mov
adc
imul
inc
out
cmp
filds
sbb
sub
push
test
sub
fists
cmp
add
ss
adc
xchg
mov
and
and
mov
insb
add
cmp
sbb
mov
push
rorl
mov
lds
cs
mov
jmp
xchg
mov
sub
adc
adc
mov
dec
cmpsb
adc
or
sbbb
stc
insb
inc
jmp
cmc
jmp
lds
mov
push
lods
add
dec
mov
lods
divb
xchg
daa
lds
aam
add
dec
cmp
rcrl
push
sub
outsb
pop
push
mov
insl
roll
adc
aad
add
dec
sbb
sbbl
add
imul
scas
cmpsb
inc
push
xor
outsl
dec
push
sub
push
mov
inc
stos
add
shlb
mov
inc
ljmp
jl
adc
fwait
push
inc
testl
addb
gs
jle
add
push
es
and
xor
or
mov
incl
xchg
adc
push
mov
mov
mov
std
imul
test
cltd
js
push
xor
imulb
mov
mov
xchg
fsubs
cmp
mov
adc
cmp
mov
mov
or
shll
sub
scas
stos
rcr
call
sbb
add
scas
stos
jp
cmc
xchg
jp
fpatan
jge
shrl
mov
or
pushf
and
xchg
outsb
repnz
call
enter
pop
dec
mov
and
test
in
sub
loope
pop
loopne
add
cli
hlt
adc
rcr
push
dec
or
add
add
mov
movsl
sbb
or
pop
rol
mov
add
call
or
lods
dec
mov
loop
pop
fs
cmc
dec
cltd
xor
pusha
adc
pop
incl
sbb
stos
fisubrl
jo
cmc
push
sarb
pop
or
jle
mov
sbb
cli
dec
aaa
lds
cs
push
pop
cmp
sbb
fwait
mov
stc
pop
mov
frstor
pop
bound
in
inc
add
shrb
addl
jne
sub
add
shrb
mov
das
and
mov
push
xor
iret
dec
pop
stc
mov
aad
add
jmp
add
inc
xchg
cmp
add
sbb
shlb
sub
aam
push
adc
or
mov
inc
inc
pop
repz
xchg
mov
sti
inc
aad
add
mov
outsb
or
lds
xlat
rclb
xor
inc
mov
arpl
fbld
inc
xchg
pop
aaa
pop
xchg
fs
push
and
add
dec
lock
mov
sub
jo
lds
add
xchg
int
sub
rorl
push
xchg
ss
mov
push
pop
shlb
or
push
inc
add
aaa
add
inc
push
rcrl
xorl
xchg
or
add
xchg
pop
add
setg
push
push
rcr
outsl
sahf
cmpsb
lcall
sbb
in
add
mov
sub
out
stos
stos
sub
lcall
adc
inc
jnp
stos
pop
inc
and
add
rcll
sar
enter
add
sar
add
xor
sbb
lods
add
lret
stc
mov
jmp
test
pusha
aad
push
decl
add
movsl
cmp
adc
pop
adc
loope
push
fwait
mov
mov
fs
fdivrl
fs
mov
push
in
pop
ljmp
insl
inc
popa
inc
jmp
lahf
lods
int3
cmpsl
fdivl
pop
jo
pop
in
pop
ds
dec
pop
sub
pop
mov
adc
cmp
ljmp
les
aam
add
cmp
loop
push
push
ljmp
sub
adc
aam
test
aam
add
fs
cmp
divb
ror
pop
pop
lcall
test
add
add
lods
js
pop
push
sti
pusha
in
xorl
mov
cli
or
ret
cmp
lret
clc
sub
push
scas
movl
jbe
inc
inc
push
xor
pop
sbb
aas
jmp
fidivs
cmp
dec
pop
add
mov
push
xchg
adc
cmc
popf
lds
leave
rolb
add
test
mov
mov
pusha
sbb
jne
sbb
insl
pusha
adc
mov
imul
cs
adcl
cmp
mov
jl
adc
shrb
call
adc
ret
cmp
imul
or
stos
and
pop
xchg
push
incl
add
mov
and
add
inc
insb
mov
popf
xchg
push
xor
inc
cli
mov
inc
aad
je
jle
loop
fstp
int
imul
jge
xchg
push
add
xchg
cmpsb
add
out
push
xchg
inc
sbb
mov
push
aas
ret
jmp
sbb
or
add
sub
push
jmp
sbb
adc
sbb
jmp
push
jmp
sbb
cmp
sbb
icebp
push
jmp
sbb
mov
push
jmp
sbb
or
push
jmp
sbb
shrl
add
ja
aas
adc
ja
inc
shrl
inc
rcrl
aaa
shll
adc
fwait
adc
adc
rcrl
adc
shl
adc
sarl
adc
rolb
adc
sar
adc
shr
adc
sarb
not
mov
rol
adc
rcrb
adc
rcr
adc
ror
adc
mov
xchg
adc
sarb
ja
ret
adc
mov
inc
js
mov
inc
test
mov
inc
inc
das
mov
inc
adc
mov
inc
or
mov
inc
add
mov
inc
clc
cs
inc
les
mov
inc
mov
push
mov
inc
mov
cs
inc
test
mov
inc
sub
mov
inc
and
mov
inc
sbb
mov
stos
add
shrl
sub
stos
add
shrl
push
shrl
push
shrl
add
stos
add
stos
add
ret
push
shrl
add
shrl
add
mov
stos
add
shrl
loop
stos
add
shrl
lcall
add
shrb
add
shrb
jmp
sbb
dec
dec
jmp
sbb
push
dec
jmp
sbb
push
dec
jmp
add
mov
sbb
xchg
push
jmp
sbb
adc
dec
jmp
sbb
in
jmp
sbb
loope
jmp
sbb
adc
sbb
cmc
dec
jmp
mov
pop
movzwl
arpl
xchg
push
ja
int
sldt
add
add
push
ja
int
adc
aas
emms
int
cmova
mov
inc
int
push
aaa
int
push
aaa
int
cmova
adc
inc
int
adc
int
adc
int
push
pop
aad
push
pop
aad
push
not
push
not
push
pop
aad
sysret
aad
push
not
jg
not
orl
aam
push
aam
push
mov
out
push
mov
out
push
add
stos
inc
mov
stos
inc
lods
sbb
inc
movsb
sub
inc
pushf
sbb
inc
loopne
stos
inc
fsubl
stos
inc
fcomps
stos
inc
aam
stos
inc
shrb
stos
inc
int3
and
inc
les
stos
inc
fldcw
stos
inc
aad
stos
inc
mov
stos
inc
adc
inc
andb
inc
rcrl
inc
inc
adc
inc
dec
add
stos
inc
xchg
sbb
inc
inc
sub
inc
push
or
stos
add
into
stos
add
iret
stos
add
iret
stos
add
iret
stos
add
stos
add
shrb
add
iret
stos
add
stos
add
mov
stos
add
stos
add
mov
stos
add
mov
stos
add
int
add
cmp
stos
add
int
add
int
add
int3
stos
add
int3
stos
add
int3
stos
add
iret
stos
add
iret
stos
add
into
stos
add
int3
stos
add
int3
inc
jmp
sbb
gs
jmp
sbb
mov
push
jmp
sbb
in
push
jmp
sbb
dec
inc
jmp
add
push
inc
jmp
sbb
xchg
push
jmp
sbb
stc
inc
jmp
sbb
std
inc
jmp
sbb
add
sbb
ja
add
sar
or
rcr
shll
mov
jnp
mov
aad
shll
rcll
mov
pop
or
add
roll
ja
dec
or
xchg
les
shll
or
shrl
or
shll
or
rcrl
push
inc
rcrl
aaa
shll
aaa
rcll
pop
sarl
pop
sarl
not
jno
not
jne
pop
roll
mov
adc
inc
mov
and
inc
test
stos
inc
movsb
sub
inc
lods
sbb
inc
movsb
sub
inc
pushf
sbb
inc
repnz
inc
ljmp
inc
loop
stos
inc
fisubs
stos
inc
ficompl
stos
inc
adc
inc
pusha
and
inc
pop
adc
inc
push
and
add
add
stos
inc
dec
adc
stos
add
stos
add
stos
add
int
add
int
add
int
add
int
add
int3
stos
add
int3
stos
add
int
add
int3
stos
add
int
add
int
add
int
add
int
add
int
add
int
add
int
add
int
add
stos
add
stos
add
stos
add
stos
add
stos
add
ss
stos
add
stos
add
stos
add
stos
add
stos
add
stos
add
movb
lea
mov
xchg
dec
jmp
sbb
pop
dec
jmp
sbb
mov
imul
jno
jmp
sbb
cmp
dec
jmp
sbb
sbb
push
dec
jmp
sbb
scas
inc
jmp
sbb
sub
sbb
popa
dec
jmp
sbb
into
les
into
cmp
int
or
int
or
into
iret
or
into
rorl
test
lret
or
int
or
int
or
int
or
int
or
int
or
int
or
int
or
inc
or
dec
or
int
or
mov
ja
mov
or
mov
aaa
int
or
int
or
lahf
or
mov
push
test
in
adc
inc
call
and
inc
dec
adc
stos
inc
sub
inc
rolb
adc
inc
int3
adc
inc
enter
mov
stos
inc
sub
stos
inc
push
and
inc
mov
adc
inc
cwtl
and
inc
xchg
and
inc
nop
adc
inc
mov
inc
mov
inc
test
inc
adcb
mov
inc
in
sub
inc
jo
stos
inc
insb
adc
inc
push
mov
lret
add
lret
jbe
stos
add
stos
add
stos
add
stos
add
stos
add
stos
add
stos
add
stos
add
stos
add
stos
add
stos
add
lret
stos
add
lret
ljmp
add
lret
stos
add
lret
stos
add
lret
stos
add
lret
stos
add
lret
stos
add
lret
stos
add
lret
stos
add
lret
stos
add
stos
add
push
leave
stos
add
stos
add
inc
jmp
sbb
lods
dec
jmp
sbb
jns
jmp
sbb
test
sbb
lea
sbb
push
dec
jmp
sbb
popa
dec
jmp
sbb
insl
dec
jmp
sbb
cmp
add
inc
dec
jmp
sbb
dec
dec
jmp
sbb
sbb
inc
shrb
or
shlb
or
shlb
or
sub
inc
rclb
or
rclb
or
rcrb
or
rorb
or
rcll
or
roll
or
rorb
or
sar
or
roll
or
shll
sarl
shrl
add
rcr
or
rcl
or
rcl
or
ror
or
rol
or
pusha
or
or
rcrl
shrl
or
test
push
test
and
bound
test
in
es
call
adc
test
rep
inc
out
es
inc
jmp
stos
inc
out
push
stos
inc
jecxz
stos
inc
ss
stos
inc
xlat
push
stos
inc
shll
stos
inc
iret
es
inc
lret
push
stos
inc
push
adc
stos
inc
push
and
stos
inc
mov
stos
inc
mov
stos
inc
scas
es
inc
stos
push
stos
inc
cmpsl
push
stos
inc
mov
and
stos
add
leave
stos
add
leave
stos
add
leave
stos
add
popf
leave
stos
add
enter
enter
leave
stos
add
stos
add
stos
add
stos
add
stos
add
stos
add
stos
add
add
stos
add
stos
add
stos
add
stos
add
movl
add
pop
dec
jmp
sbb
sub
sbb
repz
jmp
sbb
decl
sbb
pop
dec
jmp
sbb
rorl
sbb
fisttpl
sbb
jecxz
jmp
sbb
out
dec
jmp
sbb
mov
add
add
ret
dec
jmp
sbb
into
inc
or
mov
or
into
mov
ja
test
or
mov
or
into
cltd
or
popf
or
xchg
or
into
xchg
or
into
mov
pop
into
lea
pop
into
orl
test
std
or
into
icebp
or
int
or
test
in
or
int
or
int
or
int
or
int
or
int
or
test
mov
test
xchg
test
adcb
inc
jle
test
jp
test
jbe
test
jb
test
outsb
daa
test
push
test
popw
test
bound
test
pop
daa
test
pop
daa
test
push
pop
test
push
pop
test
dec
add
jp
dec
daa
jp
inc
pop
jp
inc
pop
jp
ds
jp
cmp
jp
ss
jp
xor
jp
cs
jp
sub
jp
es
jp
and
jp
push
daa
jp
sbb
jp
push
pop
shrl
add
fisubrl
add
fisubrl
add
stos
add
add
stos
add
add
stos
add
inc
fldcw
add
stos
add
stos
add
add
stos
add
add
fsubrs
add
fsubrs
add
fsubrs
add
stos
add
stos
add
add
imul
addr16
jmp
sbb
pop
dec
jmp
add
push
dec
jmp
sbb
pop
dec
jmp
sbb
sti
dec
jmp
sbb
das
dec
jmp
sbb
and
pop
dec
jmp
sbb
adc
iret
dec
jmp
sbb
ret
dec
jmp
sbb
mov
add
mov
gs
rcrb
rcrb
mov
push
or
shlb
xchg
push
ja
inc
or
inc
or
sarb
pop
ja
mov
inc
shrb
pop
aaa
shlb
pop
inc
rcrb
pop
aaa
rclb
pop
pop
rorb
pop
not
addl
add
sar
pop
pop
sar
pop
not
icebp
pop
not
cmc
pop
shrl
add
and
popa
sbb
pop
and
pop
sbb
push
and
push
sbb
and
js
mov
js
mov
js
xchg
js
andb
inc
cmp
js
xor
sbb
sub
sbb
push
js
sbb
bound
js
pop
add
js
pop
and
push
sbb
push
and
or
jp
add
sbb
inc
and
sbb
cmp
jp
ss
stos
add
stos
add
aam
add
shrl
add
shrl
add
stos
add
aam
add
stos
add
aam
add
stos
add
aam
add
stos
add
stos
add
shrl
add
add
stos
add
stos
add
shrl
add
stos
add
add
stos
add
shrb
add
aam
add
shrb
jmp
sbb
aas
inc
jmp
sbb
xor
sbb
imul
addr16
jmp
add
pop
inc
jmp
sbb
push
inc
jmp
sbb
pop
inc
jmp
sbb
sti
inc
jmp
sbb
out
inc
jmp
sbb
and
sbb
fdivrs
jmp
sbb
iret
mov
pop
iret
jns
test
jno
add
into
jne
into
imul
mov
popa
push
into
gs
into
pop
push
mov
pop
push
mov
push
push
xchg
push
push
xchg
dec
push
ja
dec
push
ja
inc
push
xchg
inc
push
xchg
mov
add
inc
into
mov
inc
into
test
add
inc
into
movsl
add
aaa
into
popf
add
pop
into
xchg
add
add
into
mov
sbb
and
ret
inc
mov
sbb
mov
js
mov
js
scas
and
stos
sbb
cmpsb
and
mov
and
lcall
inc
xchg
sbb
mov
js
mov
js
xchg
js
sbbb
inc
jle
js
jp
js
jbe
js
jb
js
outsb
add
js
push
js
and
bound
js
pop
and
pop
sbb
push
and
stos
add
add
stos
add
add
stos
add
add
into
stos
add
stos
add
into
stos
add
stos
add
int
add
int
add
into
stos
add
int
add
into
stos
add
stos
add
into
stos
add
stos
add
into
stos
add
adc
stos
add
into
stos
add
stos
add
stos
add
add
stos
add
add
int
add
stos
add
inc
jmp
sbb
mov
aas
jmp
sbb
xchg
aas
jmp
sbb
aas
aas
jmp
sbb
cmp
jmp
add
xor
jmp
sbb
pop
aas
jmp
sbb
pop
aas
jmp
sbb
pop
inc
jmp
sbb
add
sbb
sti
aas
jmp
inc
shll
add
rcrl
add
rcll
add
rorb
add
pop
roll
add
sarb
shlb
shlb
mov
imul
shlb
shlb
mov
pop
add
rcrb
xchg
push
add
rclb
ja
dec
add
rorb
xchg
inc
add
rolb
ja
mov
add
mov
inc
shlb
add
js
ljmp
inc
loop
sbb
js
ficompl
js
rcrb
js
sbb
js
pop
pop
js
adc
js
adc
js
ss
js
cmp
js
add
js
lcall
js
sti
push
js
negl
js
repz
js
repnz
js
jmp
js
out
js
jecxz
js
fistps
js
fistpl
js
xlat
push
js
rcrl
js
rolb
push
js
lret
push
js
push
shrl
add
shrb
add
stos
add
stos
add
shrl
add
test
stos
push
mov
scas
stos
inc
pop
iret
mov
push
shr
and
lahf
adc
mov
add
shll
or
push
push
add
std
test
fsubrl
cmc
mov
pop
fldcw
add
roll
pusha
mov
aaa
pop
sbbl
roll
pop
test
fsubs
subb
cwtl
divps
mov
push
incb
push
dec
push
out
pop
movsb
ds
sbb
roll
pop
sarb
leave
add
add
mov
ror
lods
scas
nop
test
int
lds
push
loop
pop
decb
and
mov
les
push
dec
jmp
mov
test
ret
inc
insl
addl
cmp
sbb
mov
mov
cmpb
add
or
inc
add
int3
addb
negl
cmp
inc
add
inc
call
inc
xchg
arpl
outsl
mov
add
or
jge
lea
add
or
jge
scas
aaa
add
xor
add
xor
test
testl
add
idiv
and
sbb
fwait
sbb
fcmovnbe
jg
xchg
pop
js
add
lods
pop
mov
dec
mov
cmc
inc
mov
push
outsl
les
add
js
sti
arpl
test
ljmp
cmp
dec
jae
adc
test
xlat
dec
mov
in
inc
mov
shll
pop
dec
fbld
jns
push
mov
sahf
add
fstps
stos
inc
cmpsb
or
call
int3
xchg
xor
pop
push
incb
pop
sahf
push
dec
add
imul
je
push
sbb
add
shr
test
inc
sahf
push
mov
ficoms
sbb
adc
add
push
xchg
add
mov
push
inc
mov
shrb
out
aaa
mov
stc
sbb
inc
sub
push
ss
pop
add
push
mov
sub
push
ss
dec
add
push
mov
stos
popf
sti
inc
or
les
mov
stos
lcall
punpckhbw
stos
mov
ret
or
and
mov
hlt
sbb
mov
fcompl
loope
out
inc
mov
stos
add
push
cmp
call
xor
cmp
add
ds
hlt
xchg
arpl
inc
xorl
mov
add
addl
inc
ret
pop
lahf
mov
sbb
ss
arpl
test
mov
ret
test
ret
jg
xorl
inc
ret
scas
push
mov
push
mov
ds
add
data16
push
push
inc
sub
inc
cmp
push
jae
jmp
and
stos
lds
imul
and
aaa
cli
popa
xlat
add
add
pop
push
adc
dec
outsl
add
and
add
movsl
mov
cld
popf
lods
fsubr
nop
add
les
jne
push
cld
popf
lods
bound
retw
push
out
push
push
cld
imul
adc
pop
roll
mov
mov
and
stos
into
sbb
push
lcall
add
stos
mov
sbb
sub
adc
push
sub
or
mov
mov
mov
stos
into
sbb
push
sub
mov
fisubrl
and
subb
jge
push
sahf
mov
insl
enter
rcrb
lahf
push
mov
ficoms
in
rolb
add
add
xchg
int3
lods
mov
decl
lahf
pcmpgtw
pop
je
dec
dec
jge
iret
icebp
jl
push
out
mov
je
cs
movsb
ds
dec
pop
xchg
stos
mov
jo
inc
jg
je
imul
jl
add
js
out
push
pop
call
add
test
mov
mov
mov
push
sti
inc
roll
add
add
mov
add
adc
xlat
mov
stos
inc
cmp
mov
adc
mov
or
into
les
sarl
cmovno
mov
push
and
insl
push
cmp
mov
sarl
incl
ret
push
push
test
addr16
cmp
add
inc
into
les
inc
call
je
cmp
adcl
jne
sbb
test
add
push
addr16
inc
divb
sarl
fwait
add
shll
jp
push
or
into
pop
sub
xchg
mov
jp
addr16
pop
popf
sub
sarl
add
add
push
adc
popa
cmpsl
sbb
pop
rcll
loop
roll
add
dec
outsb
adc
inc
push
cld
sub
mov
add
sbbb
lods
pop
sbbl
out
dec
bnd
repz
roll
and
dec
sarb
test
sbb
dec
mov
jecxz
add
imul
sbb
dec
mov
test
lahf
and
dec
jb
insl
test
loop
rcrl
imul
jge
stos
decb
and
mov
aaa
jns
test
decb
jns
test
or
jns
stos
lcall
xor
jne
push
lret
add
jne
push
fiadds
imul
call
jo
arpl
aam
shrl
cmc
lods
mov
out
nop
les
fnstenv
movsb
ja
cs
push
into
push
ss
std
inc
adc
jl
cmc
shll
pusha
fiaddl
std
push
decb
sbb
je
push
out
fldl
push
iret
stos
loope
pop
mov
add
iret
stos
aad
pop
mov
add
jle
ret
mov
je
adc
test
rcrl
cld
dec
or
xchg
sbb
stc
fadds
les
shrb
das
fucomip
mov
jge
enter
clc
mov
jge
int
adc
das
mov
cmp
call
test
xor
dec
push
test
lret
les
imul
popf
mov
sbb
repnz
or
popf
aad
push
sbb
fiaddl
rcrb
sbb
decl
cmpb
inc
or
push
and
mov
jle
jae
jmp
add
cs
or
popf
and
sbb
push
or
jbe
or
pop
stos
lds
fs
add
inc
stos
lds
insl
fwait
add
sub
andl
sub
sbb
xchg
cmc
dec
cli
xchg
sub
cmc
sahf
rep
rep
loopne
dec
shll
adcl
dec
add
jne
pop
ja
sub
dec
out
test
dec
sbbl
dec
xchg
push
jg
mov
pop
stos
js
dec
sahf
rep
add
dec
or
rcll
data16
inc
sahf
repz
int
push
rclb
mov
ljmp
stos
pop
xlat
je
stos
sahf
cli
push
jmp
fildll
push
lret
cwtl
ljmp
add
jne
push
fiadds
insb
add
aam
sbb
mov
hlt
mov
cs
mov
fsubrl
mov
dec
loop
ss
add
jns
ficoms
xlat
sbb
push
adc
mov
ljmp
mov
push
cmp
mov
add
sbb
stos
cmc
cmp
xchg
pop
add
ret
lret
sub
add
dec
add
jle
shrb
jae
jne
adc
test
out
cld
testl
xor
lahf
pop
mov
jge
int
adc
xor
or
call
inc
dec
cmp
call
add
pop
mov
add
push
mov
cmpsl
fisttps
pop
loope
stc
inc
jb
mov
lahf
aas
inc
std
out
and
or
add
push
popa
orb
in
stc
stc
cmp
mov
mov
lea
pop
je
pop
data16
push
or
out
and
jge
call
add
sti
add
sbb
andl
repnz
add
out
jmp
dec
rorl
aam
insl
dec
fsubrl
and
pop
ja
dec
pop
inc
out
and
stos
pop
cmp
pop
jnp
test
enter
ret
cld
mov
pop
sbb
inc
addr16
sbb
nop
sahf
dec
add
mov
push
mov
mov
sahf
repz
sub
ret
jno
inc
xchg
or
imul
je
mov
mov
or
mov
inc
cmc
xchg
std
insl
in
mov
popa
in
std
fnsave
std
pop
int
std
push
lds
push
mov
push
std
dec
lods
inc
std
inc
and
sbb
add
add
decb
pop
daa
dec
je
pop
inc
jmp
sub
xchg
mov
lret
gs
stos
and
mov
out
fadd
insl
aaa
jo
jmp
pop
aam
cmp
insb
decb
in
imul
ret
and
sbb
psllw
test
rorl
inc
aad
addl
mov
add
sbb
and
das
bound
inc
or
clc
cmp
test
psubsw
mov
push
ret
push
mov
rclb
mov
inc
mov
jl
roll
or
cwtl
pop
les
outsb
ss
push
mov
sub
mov
sbb
inc
and
add
add
push
jp
inc
cmp
gs
jns
adc
scas
adc
pop
cli
mov
lret
addr16
idivl
outsb
add
add
cmpl
popf
cmpb
lea
add
popf
and
add
sbb
dec
add
popf
inc
inc
jae
push
stc
test
mov
xchg
add
test
rcll
inc
xchg
xchg
sub
pop
cmp
inc
pop
jns
push
jb
and
and
xchg
fucomip
push
outsb
stos
add
adc
mov
inc
or
test
dec
adc
pop
stos
add
jp
jp
mov
mov
sahf
push
into
push
push
jecxz
dec
rcl
lret
inc
sahf
push
into
sbb
dec
mov
fs
jbe
pop
rcrb
gs
mov
sub
pop
jmp
shll
jle
roll
xorb
fldt
dec
shrl
out
sahf
ljmp
xor
cmp
scas
stos
imul
and
outsl
jo
sub
enter
mov
arpl
shrl
rcrb
je
sahf
bound
push
loop
arpl
shlb
adc
scas
pushl
jmp
arpl
cmp
pop
add
inc
mov
iret
jl
xchg
inc
jg
or
add
xor
and
gs
pushl
adc
aaa
rolb
pop
out
rorl
inc
subl
scas
push
adc
mov
lret
mov
and
iret
inc
add
pop
add
add
dec
mov
push
mov
jo
mov
dec
subl
dec
mov
add
or
decb
mov
call
jg
sar
sub
clc
push
inc
in
jge
push
mov
stc
sbb
call
pop
roll
add
mov
popf
xor
add
cmp
add
mov
inc
add
insb
lahf
in
and
jle
rcl
add
push
inc
add
stos
add
in
mov
fists
sub
adc
in
sub
sbb
jns
aaa
subb
pop
shl
out
adc
push
pop
xchg
out
push
shrl
adc
shrl
int3
cs
xchg
scas
aaa
and
add
shrb
inc
add
jbe
mov
dec
mov
lahf
data16
mov
jns
aaa
ljmp
xor
jns
pushf
pop
insl
test
fsubrl
stc
lcall
icebp
jo
stos
test
fwait
addr16
hlt
sub
icebp
rcl
stos
cltd
push
insl
mov
dec
fistps
loop
push
gs
mov
sub
xchg
xchg
or
jmp
sbb
pop
imul
add
jmp
sbb
addr16
popa
cmp
jmp
sbb
cmpsb
mov
add
aam
add
aam
add
mov
add
mov
inc
add
movsl
mov
add
mov
add
inc
add
int
mov
add
mov
add
inc
add
mov
mov
add
inc
add
cmpsl
mov
add
mov
incl
aam
add
roll
push
push
add
stc
stc
dec
add
inc
jb
jmp
jp
add
stos
js
rorl
jae
sarl
push
jp
add
push
into
js
test
xor
cltd
jns
add
jp
add
dec
js
subl
inc
add
jp
add
jp
add
jp
add
jp
add
call
jno
inc
inc
jno
cmp
jno
xor
jbe
and
jbe
sbb
jbe
adc
hlt
cmp
fdivrl
add
cmp
data16
lock
add
push
cmp
fsubs
cmp
data16
cmp
data16
shlb
mov
data16
test
scas
cmp
push
cmp
pop
cmp
data16
andb
js
sbb
jo
pop
ss
data16
pop
data16
add
rorl
inc
inc
data16
cmp
aas
xor
inc
sub
inc
add
inc
popf
pop
addr16
jmp
dec
addr16
pop
sub
mov
das
sub
mov
imul
mov
pop
in
mov
mov
mov
mov
addr16
add
mov
adc
addr16
mov
cs
add
push
addr16
test
addr16
push
out
mov
mov
mov
mov
out
pushf
mov
jmp
test
mov
decl
mov
pushl
mov
pushl
mov
pushl
mov
call
fwait
mov
incl
int
mov
ljmp
mov
incl
fwait
mov
cmp
mov
ljmp
fwait
mov
lcall
hlt
data16
xor
data16
sub
jne
and
jne
adc
jbe
or
outsb
incb
repnz
stc
pop
outsl
icebp
test
outsb
loope
insl
fnstenv
outsb
incb
leave
ja
inc
shrl
mov
push
insl
test
imul
subl
xchg
insl
decb
sub
jns
insl
jno
insl
imul
insl
pop
fwait
outsl
push
movsl
outsl
decb
js
inc
arpl
cmp
xor
arpl
sub
xor
arpl
xor
arpl
xor
arpl
xor
arpl
add
xor
bound
bound
bound
sub
bound
sub
call
sub
bound
cmp
bound
nop
bound
add
push
mov
push
push
test
push
push
lods
add
push
stos
add
shll
ds
bound
adc
mov
arpl
insl
add
bound
inc
jmp
mov
sbb
mov
icebp
dec
arpl
add
arpl
or
and
dec
sbb
cmp
arpl
jae
arpl
aas
lock
iret
jecxz
mov
loope
arpl
push
inc
arpl
xchg
add
mov
add
lahf
mov
jmp
sahf
mov
mov
sahf
mov
incl
mov
call
mov
mov
decl
mov
push
aam
add
lcall
lcall
mov
ljmp
lcall
add
mov
call
mov
push
cltd
mov
ljmp
int3
jge
imul
pop
mov
push
mov
decb
jno
inc
push
add
addr16
add
pop
inc
add
xchg
jnp
add
push
inc
add
push
jnp
jmp
sahf
js
add
dec
jnp
leave
jne
add
mov
jnp
test
push
add
je
add
rorb
add
rcll
push
pop
movsb
aaa
pop
pop
mov
aaa
dec
pop
stos
add
shll
scas
loope
shll
shr
mov
jl
mov
jl
cmp
add
adc
sub
test
push
or
add
shrl
cmp
outsb
mov
sub
hlt
dec
mov
push
loope
cmpsb
jmp
loope
cli
sbb
loopne
fadd
ljmp
sbb
loopne
rolb
popa
divb
movsl
sbb
ss
jl
xor
sub
add
sbb
loope
jnp
lock
jp
push
and
sbb
in
and
scas
loopne
sbb
repnz
pop
mov
xor
fistpl
jge
adc
or
loope
xor
mov
xor
scas
add
add
and
mov
add
xor
add
and
insb
pop
sarl
add
xor
cwtl
and
xchg
and
xor
rcll
inc
mov
es
shr
add
and
sub
popf
cmp
jb
sub
arpl
and
outsl
popa
aad
add
sbb
xchg
xor
sub
popa
arpl
daa
outsb
add
cmp
dec
and
sub
inc
in
sbb
enter
push
repnz
or
inc
xlat
push
sub
xorl
in
pusha
lcall
in
insb
shrb
sbb
and
call
inc
lods
dec
in
mov
fiadds
inc
sbb
pop
mov
bound
dec
icebp
lock
or
inc
jbe
mov
jae
or
out
inc
mov
in
aas
rorl
das
idivb
add
aam
mov
fisttps
or
pop
add
shrb
cld
icebp
mov
in
call
stos
add
rcr
stos
stc
icebp
andb
jmp
mov
int
andl
shr
test
lods
bswap
mov
aad
cmp
outsl
hlt
cs
mov
ljmp
pop
hlt
push
jp
sbb
js
pop
fcmovnbe
pop
addl
inc
cmp
jle
or
jl
daa
add
pop
mov
sbb
fbld
adc
and
push
stc
sbb
fiadds
into
add
fbld
int3
push
repz
les
es
je
mov
mov
out
pop
fwait
xchg
xor
sbb
repz
cmpsl
mov
jns
out
or
mov
mov
pop
cmpsb
fisubs
inc
lret
push
xor
mov
add
xor
pop
xor
imul
mov
imul
and
and
jmp
cmp
arpl
and
insb
push
int
add
and
gs
and
jb
xor
jae
push
and
mov
push
jb
and
gs
or
jns
aam
add
cmp
jb
pop
xor
inc
int
jb
add
add
add
fdivl
or
insb
dec
adc
dec
dec
or
dec
inc
int3
icebp
pop
sub
lcall
mov
test
pop
frstor
push
loope
shrl
jge
sub
jge
inc
testl
out
pusha
mov
aas
inc
push
sarb
mov
sub
jae
aas
loope
mov
out
insb
mov
bound
fcmovnu
insb
js
loopne
add
aas
push
sbb
data16
lds
sbb
jg
push
test
adc
test
dec
out
add
push
in
stos
add
int
test
cld
icebp
ds
ljmp
pop
shrl
in
or
xchg
popf
hlt
in
mov
clc
repnz
add
jmp
jg
int
ficomps
mov
shl
add
into
xlat
jl
cmp
and
mov
rclb
inc
sbb
pop
dec
mov
pop
sub
inc
inc
sub
das
xor
sbb
in
das
mov
xor
fsubr
daa
or
push
mov
std
push
in
add
add
add
push
mov
enter
int
icebp
inc
add
add
fimull
jmp
xchg
mov
add
mov
sbb
pop
xchg
pop
out
daa
mov
in
jg
repnz
call
or
and
jno
sub
fs
jns
arpl
jne
sbb
or
outsl
add
jae
sub
mov
out
pop
add
andl
ja
mov
inc
push
xor
add
adc
sbb
xor
js
ror
add
pop
and
and
jae
imul
gs
sub
fnsave
ds
jp
xor
arpl
fcompl
xlat
dec
add
lock
icebp
sti
bound
incl
inc
or
dec
dec
xchg
loop
dec
xchg
clc
bound
add
jbe
dec
inc
dec
cmp
lock
inc
mov
jno
mov
popf
sbb
loopne
push
cmpsl
cmc
call
incl
pop
loope
cli
push
mov
add
jmp
inc
push
ret
mov
inc
adc
inc
inc
mov
test
insl
add
rcl
mov
icebp
into
lcall
xlat
mov
fst
rorl
ret
cmpsl
jl
ret
mov
pop
in
mov
or
cmp
adc
rcll
arpl
jbe
cmp
jp
dec
fstl
mov
in
push
ret
aas
xlat
add
inc
rorl
cli
push
jmp
inc
lcall
stos
add
lret
pushf
iret
fcoml
xchg
mov
int3
rcrb
out
mov
jno
cmp
sbb
loopne
xchg
ret
xchg
test
push
mov
jg
adc
push
test
add
sub
repz
imul
fcompl
and
outsb
in
and
insl
push
mov
ljmp
or
or
sbb
cmc
pop
jmp
int3
push
jmp
les
out
enter
add
into
inc
add
xor
or
movsb
sub
inc
sahf
cmp
add
daa
insb
jb
and
inc
dec
sbb
outsl
imul
add
add
add
aaa
xor
imul
jmp
xor
add
sub
loopne
xchg
add
xor
push
cmp
jb
cs
sub
add
cs
ljmp
jl
jae
je
push
nop
shll
insl
ds
ret
sbb
ret
aaa
out
insb
mov
data16
data16
add
dec
ds
jnp
xchg
jno
enter
push
insb
adcb
push
test
push
push
dec
aas
dec
inc
mov
inc
aaa
push
flds
out
aas
jo
neg
jae
or
jno
xchg
in
sub
repz
out
in
stc
in
in
add
inc
in
fdivs
pop
add
fsubrl
cmp
shr
xchg
lret
xchg
in
lea
fstpt
cltd
lds
movb
ret
mov
cltd
lea
test
dec
mov
iret
jns
mov
insl
mov
mov
dec
jne
outsl
lahf
addr16
xor
rcrb
cmp
pop
popf
cmp
bound
shrl
lock
fidivl
adc
loop
mov
or
scas
and
push
xchg
sub
mov
adc
sbb
mov
movsb
jle
xor
xorb
stos
mov
xor
fimull
sbb
movsl
xor
mov
shll
jg
mov
dec
fldcw
xor
push
add
push
es
push
dec
outsb
roll
popf
sub
mov
mov
jmp
inc
insl
sbb
data16
gs
mov
push
push
insb
push
inc
aaa
rclb
mov
inc
push
xor
and
jae
shrb
enter
movsb
es
mov
sar
jno
jle
arpl
inc
rorb
outsl
mov
arpl
and
imul
imul
add
jmp
mov
fs
and
jb
and
push
in
fdivr
addl
sub
imul
call
decl
inc
inc
mov
out
lods
mov
push
mov
mov
cmp
or
jae
xchg
jo
pop
rcll
jns
into
inc
data16
add
push
cmp
out
insl
xchg
jecxz
mov
add
jecxz
mov
shll
or
mov
pushf
shll
cmp
jecxz
aas
xchg
fnstcw
mov
add
lret
xchg
push
dec
sti
add
mov
sarb
xchg
imull
lods
leave
stos
add
in
mov
rcl
jle
iret
lcall
mov
add
shr
mov
mov
lret
lahf
insl
mov
jl
arpl
jge
aas
xchg
ja
cmp
sub
sub
add
mov
sub
int3
mov
sbb
mov
push
push
pop
rcrl
mov
or
mov
cmp
stos
ret
jae
daa
int3
jp
push
stos
insb
mov
inc
shll
push
mov
mov
and
mov
mov
test
mov
and
mov
add
rcrl
add
xchg
sub
mov
add
cmp
js
jne
jnp
jns
js
arpl
arpl
adc
and
and
jo
jg
inc
data16
add
sbb
jb
gs
outsb
push
jg
add
pop
outsl
test
xor
jbe
sahf
jns
addr16
insb
jb
ltr
add
pop
xor
push
jns
je
sbb
sub
push
div
insl
xor
shlb
xchg
out
bound
add
push
in
jno
shr
std
in
ljmpw
shll
dec
repz
aaa
inc
pop
sbb
loope
fldenv
loope
aad
fldl
mov
inc
inc
pop
jnp
jae
adc
jb
adc
jbe
or
aam
jns
out
pop
jge
inc
mov
mov
jae
push
fbstp
popa
shlb
push
iret
pusha
dec
push
aam
inc
rcrl
mov
insl
xchg
xor
push
enter
xchg
cmp
jb
cs
imul
mov
cmpsl
repz
mov
add
lods
mov
cmpsl
cli
xchg
ds
lods
cmpsl
enter
in
lods
xorl
lahf
stos
add
in
xchg
test
test
les
add
cld
cmpsb
jp
rclb
leave
flds
sub
inc
mov
addl
push
jb
xor
insb
fwait
adc
sbb
add
sbb
and
cmp
mov
push
inc
cmp
ret
sub
mov
and
mov
daa
or
pop
inc
mov
jbe
sub
xchg
xor
jl
inc
ficomps
mov
xor
sbb
xchg
xchg
mov
add
incl
cwtl
int
jb
mov
gs
jae
jo
or
call
jbe,pn
bound
jb
ja
data16
sbb
pop
insb
xor
bound
push
js
je
arpl
push
ja
add
aaa
insb
xor
cmp
cmp
xor
cmp
jae
aaa
insb
xor
jbe
and
push
jae
jae
insl
xor
shl
add
xor
add
jle
incl
adc
push
aam
add
inc
push
push
insb
jmp
inc
jmp
cmp
icebp
dec
icebp
aas
push
aas
pushf
out
dec
in
inc
out
ljmp
cld
out
add
jo
fsubrp
push
push
aas
push
jmp
out
add
shrb
repnz
jo
aaa
inc
jns
push
call
in
mov
sbb
pushl
xor
mov
subl
lea
push
push
inc
jne
test
outsl
mov
shrl
cmp
std
xchg
outsl
mov
stos
add
xchg
dec
mov
stos
add
outsb
mov
mov
incb
jge
bound
cmpsb
pop
or
add
sarb
cld
mov
icebp
lods
dec
xchg
in
lods
jno
and
insl
lods
hlt
mov
scas
mov
pushf
mov
mov
inc
std
lret
fcoml
scas
mov
mov
mov
scas
inc
mov
loopne
adc
sbb
shll
daa
jge
loope
stos
mov
xor
mov
jnp
push
jmp
add
sahf
sub
stos
das
inc
xorl
icebp
sbb
popl
cmp
stos
sub
and
inc
cmp
lea
xor
inc
mov
xchg
sub
je
das
sarb
sub
jle
cmp
sbb
add
push
imul
int
jb
jno
fs
and
ja
incl
outsb
int
gs
insl
and
test
data16
inc
add
bound
gs
pop
adc
add
xor
outsb
lldt
int
push
notb
daa
arpl
js
ljmp
adc
gs
popa
adc
jo
je
into
add
xor
push
and
add
jp
pop
xchg
sbb
sbb
call
add
push
add
imul
add
ja
jno
adc
mov
bound
in
push
test
jno
cmp
ja
jno
jae
bound
dec
jmp
push
into
bound
inc
adc
ja
jno
ja
insb
dec
xchg
out
jae
cmpsb
fdivr
mov
inc
push
pusha
add
jae
mov
jae
add
jno
cmp
neg
jno
in
in
jb
neg
jno
repnz
data16
fcom
int
out
push
lret
bound
or
pushf
fnstsw
mov
lods
mov
stos
jle
out
sahf
pop
mov
jl
out
add
sar
rcll
xchg
add
les
mov
mov
sahf
pop
mov
in
xchg
push
shrl
xor
sbb
sub
mov
mov
add
push
aad
out
cmpsl
add
les
out
mov
mov
cld
ret
push
mov
shlb
int
pop
mov
scas
and
pop
inc
mov
aad
mov
push
fcoms
adc
sbb
ret
push
mov
test
xor
mov
lds
cmpb
add
add
cwtl
sub
shrl
xchg
mov
sub
xchg
cmp
and
and
push
cmp
mov
sbb
stos
push
jmp
mov
xor
mov
scas
cs
ret
adc
inc
roll
add
jno
push
inc
ja
popa
adc
and
jns
jne
outsl
push
jne
gs
and
add
mov
xor
lret
jne
jne
adc
insb
xchg
jo
arpl
or
jns
stos
andb
jg
sbb
xor
rorb
add
pusha
xor
divb
push
pop
fs
gs
and
ljmp
adc
jno
gs
in
jecxz
lcall
aas
inc
rolb
add
ds
out
fisubs
adc
jo
jno
jae
sbb
bound
adc
inc
fwait
push
jno
jae
pop
fisubs
jns
bound
outsl
push
loope
jno
inc
jb
sbb
bound
rcrb
mov
aas
test
cmp
fdivs
not
data16
xchg
test
add
rclb
loop
aas
cmpsb
iret
mov
cld
rorl
cmp
scas
sahf
iret
scas
inc
nop
rol
aas
cmpsb
clc
sarb
sahf
scas
scas
xchg
nop
mov
js
mov
or
fdivrs
test
jmp
scas
cs
clc
lahf
inc
lods
stos
add
shr
sahf
dec
cmpsb
cmp
popl
pusha
stos
or
pop
mov
ret
xor
pop
xchg
fstpt
inc
mov
mov
xor
mov
cs
mov
cmp
mov
fisubrl
pop
adc
sbb
roll
sbb
roll
sbb
roll
sbb
roll
sbb
roll
sbb
sbb
roll
sbb
aam
jmp
sbb
roll
sbb
roll
sbb
cli
inc
jmp
xchg
inc
add
inc
add
inc
add
iret
inc
add
inc
add
inc
add
inc
add
iret
inc
add
iret
inc
add
inc
add
inc
add
jbe
js
aaa
iret
inc
add
iret
inc
add
iret
inc
add
into
inc
add
js
pop
iret
inc
add
iret
inc
add
into
inc
add
into
inc
add
arpl
into
inc
add
into
inc
add
into
inc
add
js
mov
inc
add
sub
sub
sub
sbb
aas
push
sub
sub
sub
sub
push
repz
push
sub
sub
sub
sub
mov
inc
add
sub
sub
sub
in
sarb
push
sub
sub
sub
sub
cmc
ss
sub
sub
sub
sub
inc
aaa
ds
sub
shrl
add
shrl
add
push
shrl
add
shrl
add
shrl
mov
shrl
add
shrl
add
shrl
add
shrl
add
shrl
rcrl
stos
add
shrl
add
shrl
fidivl
shrl
add
shrl
add
push
roll
add
roll
sbb
roll
sbb
testl
sbb
roll
sbb
testl
sbb
roll
xchg
clc
inc
jmp
sbb
cmp
or
cmp
leave
add
mov
jmp
add
roll
sbb
roll
sbb
roll
int
mov
add
cmp
cmp
int3
xor
and
xor
and
xor
sbb
xor
sbb
pop
sbb
jnp
dec
xor
sbb
insb
xor
cmp
or
sbb
sbb
sbb
sub
dec
sbb
add
sbb
xor
mov
cld
xor
pop
sbb
dec
sbb
fistpl
sbb
insb
ss
sbb
ss
je
pop
or
adc
mov
xchg
xchg
fwait
call
push
mov
push
je
fisttpl
mov
push
je
sti
dec
sub
or
xor
sbb
int3
nop
sub
adc
cmp
in
nop
dec
adc
nop
pop
or
nop
imul
xchg
jnp
lods
xchg
mov
xchg
xchg
fwait
jmp
push
xchg
mov
push
hlt
xchg
fisttpl
xchg
jmp
hlt
xchg
sti
dec
sub
or
adc
sbb
int3
xchg
rcll
lret
gs
test
stc
mov
lret
inc
stc
push
lret
movsl
clc
push
lret
add
clc
int3
gs
fmulp
gs
test
clc
jle
jne
test
clc
sahf
lret
xchg
lret
ds
xor
clc
pop
lret
in
jbe
cmc
idivl
lret
mov
mov
lret
movsl
notl
lret
xchg
idiv
lret
lret
negl
in
jbe
cmc
cli
dec
cmc
cli
jbe
add
testl
add
call
jge
out
jge
out
jge
xlat
test
jge
mov
jge
in
jge
aam
jge
xlat
js
movsl
or
sbb
push
sub
push
cmp
enterw
fdivrs
call
jl
mov
addr16
jl
push
test
std
push
mov
jl
pop
jl
push
push
add
add
mov
mov
roll
in
mov
add
int3
xor
fdivl
mov
and
xor
and
and
lods
xor
and
rcrl
pop
xor
push
insb
xor
jl
repz
cmp
add
cmp
add
cmp
add
cmp
add
cmp
outsl
mov
add
enter
mov
push
xor
xor
sbb
out
out
sbb
or
rclb
pop
dec
jne
nop
sub
mov
jno
insb
mov
or
xchg
cmp
push
xchg
jb
scas
xchg
cmpsb
repz
repz
das
call
cltd
xchg
jnp
dec
mov
cwtl
push
dec
xchg
movsb
dec
pop
xchg
js
stos
xchg
and
test
out
push
cmpb
jl
flds
mov
xor
je
dec
repz
xor
rol
leave
mov
xor
add
shll
shrl
add
aam
add
aam
dec
add
aam
pushl
into
decl
aad
incb
sti
std
sub
pop
std
lock
std
adc
std
popa
rclb
cld
in
cmp
into
or
mov
or
rcrl
cli
mov
hlt
stc
rolb
cli
dec
shll
call
test
jnp
push
movsb
jnp
in
jnp
in
jge
add
add
test
jbe
fstps
jbe
aam
jns
aam
js
out
js
popf
xor
cli
in
std
jae
int
jae
int
jae
rclb
dec
lret
lock
aas
imul
jno
outsl
sbb
lahf
dec
cmp
ret
jo
dec
into
jo
dec
lahf
jo
outsl
movsb
jo
outsb
jns
push
outsb
pop
jo
outsb
sub
add
sbb
cmp
sbb
xor
std
sbb
cmp
int3
cmp
sbb
cmp
popa
cmp
sbb
cmp
sbb
cmp
call
cmp
sbb
cmp
sbb
mov
cmp
mov
cmp
sbb
nopl
add
jp
jo
cmp
sbb
cmp
sbb
cmp
sbb
cmp
rorb
cmc
popf
mov
in
mov
in
mov
push
popf
mov
push
orb
and
xor
xlat
mov
sbbb
cmpb
mov
loop
out
or
mov
add
mov
sti
and
mov
jmp
mov
pop
dec
jle
push
or
dec
filds
jbe
mov
sbbl
rcl
push
out
stos
jae
movb
sarl
shl
loopne
aam
loopne
shl
aam
jecxz
rcll
mov
rclb
xchg
and
ror
cmpsl
in
iret
out
in
iret
iret
enter
cld
jecxz
shr
jecxz
shlb
in
shrb
cmpsb
int
out
into
out
repz
in
int
in
lret
ss
or
pop
call
inc
leave
push
jp
fs
jp
mov
jp
push
fnstcw
idivb
fs
jge
push
int3
jl
add
xchg
jl
out
jl
xlat
or
shll
loope
ja
out
ja
or
aaa
std
jbe
loope
jbe
fsts
jbe
loope
jns
fistl
jns
fmuls
jns
loop
js
fildl
dec
arpl
js
pop
xor
mov
push
and
inc
add
add
xor
sbb
xor
or
sbb
add
repz
push
push
les
mov
push
insl
cmp
push
into
cmp
push
test
pop
pop
test
cmp
sbb
cmp
sbb
int3
sbb
cmp
in
insl
sbb
cmp
sbb
cmp
mov
lds
pop
cmp
cli
adc
mov
add
dec
out
cmp
inc
jbe
cmp
add
cwtl
add
pushf
and
mov
and
gs
add
add
add
icebp
pop
add
jmp
test
negb
test
push
and
add
cmp
bound
cmpsb
outsl
test
rep
shrb
int
xlat
push
loope
add
or
cmovno
add
int
test
cmp
cmpsl
in
scas
jnp
bnd
mov
jnp
push
jnp
dec
shll
cmp
insb
cmp
jecxz
cmp
jecxz
cmp
fnstsw
jnp
cli
cmp
jecxz
cmp
jecxz
cmp
loop
cmp
loop
cmp
loope
cmp
loop
cmp
loope
cmp
loope
cmp
in
loope
cmp
jmp
sarb
jnp
sub
stos
call
jae
in
call
mov
cmp
out
cmp
out
ds
out
movsb
pop
cmpb
jl
dec
dec
jl
inc
ljmp
xor
jbe
and
jbe
sbb
jns
fucomip
jns
faddl
jns
fsubrl
movsl
add
sbb
fadd
js
fiadds
js
pop
dec
js
pop
roll
in
roll
and
inc
clc
sub
push
jae
sub
xchg
arpl
or
jb
or
jb
or
fnstenv
jmp
jne
mov
fistps
fnsave
fstl
xor
xor
fisttpll
xor
jmp
add
add
jmp
shll
loopne
xor
fistpll
ss
lret
lods
jmp
xor
mov
shll
call
sbb
in
out
dec
in
inc
cmp
inc
add
xor
add
inc
add
ljmp
mov
jmp
cmp
mov
xchg
testb
add
sbb
push
mov
xchg
push
xchg
jbe
inc
jge,pn
inc
mov
jl
xor
sub
dec
and
add
adc
add
add
add
mov
xchg
mov
mov
jecxz
add
pop
in
jns
push
and
dec
movsl
jns
inc
loopne
fwait
cmp
mov
push
cmp
add
inc
je
push
cmpsl
outsl
push
rcrl
scas
loopne
xor
jb
push
xor
loop
xor
loop
xor
arpl
data16
xor
xchg
xor
cltd
xor
lods
aaa
pop
fnsave
aaa
cmp
inc
cmp
fstpl
loopne
jbe
call
fcompl
mov
sub
xchg
fucom
aaa
sbb
xchg
cmp
cmpl
add
repz
cmp
out
push
fcoml
xor
mov
push
jno
adc
jo
lock
xor
and
jnp
loop
jp
pop
push
jp
push
js
fildl
jge
inc
mov
jge
xor
jge
daa
gs
daa
xor
mov
fiadds
xchg
ficomps
stos
fisubs
jg
jno
stos
icebp
sub
call
cmp
cmp
inc
jmp
and
inc
decl
jae
xor
pop
sub
fdivl
loope
xor
jmp
xor
fildl
cwtl
fisttpl
cmp
in
cmp
out
cmp
out
cmp
cmp
jno
push
cmp
out
cmp
out
cmp
jmp
cmp
xchg
mov
aad
aad
icebp
cmp
in
cmp
jecxz
cmp
fsubp
cmpl
in
jbe,pt
inc
aas
sbb
pop
aas
pop
rolb
bound
mov
sub
outsb
mov
or
outsl
jl
ret
outsl
rorl
aaa
jl
add
dec
jge
imul
jnp
in
jnp
in
js
pop
jle
xlat
push
addr16
dec
cmp
jp
cmp
stos
xor
jp
sub
jge
sbb
clc
adc
add
bound
add
ljmp
out
inc
outsl
out
and
dec
xchg
outsb
scas
dec
fildll
dec
inc
outsb
rorb
add
xor
add
loopne
xor
sbb
lcall
fistpll
mov
fsubp
mov
fisttpll
xor
shlb
adc
adc
imul
inc
xor
call
imul
pop
call
stos
cmp
loop
inc
aas
cli
in
aas
jb
jge
add
in
cmp
in
aaa
cmc
in
enter
add
jbe
and
aaa
mov
jns
daa
aam
out
jge
mov
pop
js
add
js
add
js
hlt
daa
js
in
iret
inc
cltd
sbb
shll
out
lods
dec
xorl
cmpsl
jne
dec
and
xor
outsl
das
inc
mov
pop
cmp
jno
add
jno
or
jo
push
jo
mov
aam
int3
add
dec
jp
lock
ja
out
jbe
jmp
call
push
ds
mov
aas
imul
cli
aas
cmp
fwait
aas
popa
fiaddl
xchg
inc
add
in
xor
adc
icebp
in
xor
loopne
xor
loope
xor
out
lock
xor
jb
out
aad
cmp
scas
cmp
mov
cmp
fisubs
cmp
ficomps
cmp
fsubp
cmp
data16
fldcw
loope
adc
push
add
xchg
je
dec
pop
outsb
pushf
dec
leave
outsb
mov
sub
jae
sub
jp
sbb
add
add
sub
push
inc
add
jl
sahf
in
subl
in
xor
in
and
dec
sbb
adc
jb
dec
and
xor
jl
xor
lea
mov
xchg
adc
mov
scas
or
jnp
sti
shlb
cmp
sahf
xor
ret
fiadds
ss
loopne
push
ficomps
add
cmp
test
dec
fisubrs
dec
fidivrs
js
xchg
ss
pop
aaa
rcr
aaa
rcr
stos
jae
shr
add
shrl
xor
loopne
xor
sbb
loope
xor
loopne
xor
push
loop
xor
in
xor
in
xor
jecxz
sub
inc
out
das
cld
in
cs
out
ds
cmp
fadds
add
fdivrs
cli
xchg
xacquire
ljmp
dec
push
fs
push
add
nop
inc
sub
inc
sarb
cmp
jp
xor
jp
sub
jp
sbb
jns
or
jp
add
jge
testl
jge
out
jge
push
mov
dec
jl
inc
je
xor
mov
add
xchg
ja
ss
es
jbe
sub
outsl
adc
jbe
scas
in
cmp
lret
cmp
jbe
xchg
cmp
xchg
in
cmp
sahf
in
cmp
cli
out
ds
push
ds
ds
jae
add
jno
sub
add
ds
sbb
js,pt
ss
add
add
sarl
jecxz
ds
fistpll
fucom
hlt
ds
mov
xor
xchg
ds
scas
ds
aas
aas
push
out
aas
cmp
std
aas
push
insb
outsl
ficompl
push
outsl
sti
adc
les
push
cmpsb
inc
add
aad
fs
nop
outsl
mov
pop
jne
out
jecxz
stc
out
inc
jne
dec
pop
jb
dec
and
adc
lcall
xor
push
add
xor
push
dec
adc
imul
repz
call
inc
pushw
cmpsl
xchg
push
ja
mov
push
sub
cmp
jne
dec
sub
and
xchg
jecxz
cmp
in
outsb
jecxz
sub
inc
sub
fadds
sub
test
mov
add
shrl
xor
dec
das
rcl
sbb
sbb
aam
or
lods
xor
dec
xor
shrl
add
roll
or
aas
xor
loopne
xor
ficoms
and
sbb
cmp
add
test
out
insb
fcomps
xchg
fsubrs
cs
add
jg
fsubrl
jge
xchg
sub
js
mov
and
inc
push
or
add
sub
popf
outsl
test
mov
xor
sub
push
or
jnp
dec
iret
jp
inc
fs
dec
in
xchg
dec
sahf
jns
das
roll
lods
iret
inc
test
sub
rcll
dec
jb
or
jne
adc
outsl
xchg
push
ljmp
test
js
in
pop
js
in
pushl
dec
add
add
add
lods
aas
mov
mov
add
aam
add
xor
dec
xor
push
xor
in
xor
jo
inc
das
out
in
xor
mov
xor
fisubrs
xor
ficomps
xor
ficoms
jle
popa
xor
sub
ljmp
add
pop
fldt
dec
ficompl
push
in
cmp
in
cmp
in
cmp
dec
insl
and
aas
inc
pop
dec
inc
aaa
data16
data16
scas
imul
pop
mov
add
lret
push
loop
pop
push
fisubrl
out
xorl
inc
je
out
sbb
dec
add
dec
lret
dec
mov
add
add
jne
das
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
shrl
add
shrl
add
shrl
add
shrl
add
shrl
add
shrl
add
shrl
add
push
shrl
add
shrl
add
shrl
add
shrl
add
shrl
add
shrl
add
shrl
add
shrl
add
roll
sbb
roll
sbb
roll
sbb
roll
sbb
roll
add
roll
sbb
roll
sbb
roll
sbb
roll
sbb
roll
sbb
roll
sbb
roll
sbb
roll
sbb
roll
sbb
roll
sbb
roll
mov
inc
add
roll
roll
add
roll
xchg
inc
add
roll
ja
inc
add
roll
ja
inc
add
inc
add
inc
add
inc
add
roll
aaa
roll
inc
roll
inc
roll
aaa
roll
aaa
roll
pop
roll
pop
roll
not
inc
add
rolb
pop
roll
pop
roll
not
inc
add
not
inc
add
rolb
push
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
push
sub
sub
sub
sub
sub
sub
sub
shrl
add
shrl
add
shrl
add
shrl
add
shrl
add
shrl
add
shrl
add
shrl
add
shrl
add
push
shrl
add
shrl
add
shrl
add
shrl
add
shrl
add
shrl
add
roll
sbb
roll
sbb
roll
sbb
roll
sbb
roll
sbb
roll
sbb
roll
add
roll
sbb
roll
sbb
roll
sbb
roll
sbb
roll
sbb
roll
sbb
roll
sbb
roll
sbb
roll
pop
into
inc
add
into
inc
add
int
add
int
add
int
add
int
add
mov
inc
add
int
add
int
add
int
add
int
add
inc
add
inc
add
int
add
inc
add
inc
add
inc
add
inc
add
int
add
int
add
inc
add
inc
add
int
add
int
add
aad
add
aad
add
cli
inc
add
cli
inc
add
push
cli
inc
add
cli
inc
add
cli
inc
add
cli
inc
add
cli
inc
add
cli
inc
add
cli
inc
add
cli
inc
add
cli
inc
add
cli
inc
add
cli
inc
add
cli
inc
add
cli
inc
add
cli
inc
add
cli
inc
add
cli
inc
add
cli
inc
add
cli
inc
add
cli
inc
add
cli
inc
add
cli
inc
add
cli
inc
add
cli
inc
add
cli
inc
add
cli
inc
add
push
cli
inc
add
cli
inc
add
cli
inc
add
shrl
add
shrl
add
shrl
add
shrl
add
shrl
add
shrl
add
shrl
add
shrl
add
shrl
add
shll
jne
pop
loopne
je
out
push
add
aas
inc
jl
test
lret
movb
stos
xor
xlat
shlb
or
sti
pop
xchg
inc
in
and
xchg
dec
das
jne
jns
xchg
loopne
sbb
fisubs
call
jne
jns
xchg
loopne
sbb
fdivrl
xchg
arpl
iret
ljmp
call
jne
jns
push
loopne
sbb
add
and
inc
adc
jns
adc
sbb
pop
and
push
cmc
dec
das
jne
jns
adc
sbb
pop
and
push
aad
das
jne
jns
shll
sbb
pop
and
mov
das
add
adc
pop
cmp
xchg
scas
loopne
cld
je
sbb
mov
adc
scas
mov
sbb
mov
adc
scas
add
sbb
mov
adc
pop
mov
mov
je
sbb
mov
adc
pop
decl
push
mov
shll
xchg
add
cmp
push
mov
js
rcrl
fisttpll
mov
xor
lret
lret
test
hlt
push
jno
lods
push
sbb
lcall
push
or
outsl
jns
mov
add
add
jp
mov
add
xchg
dec
push
pop
arpl
cmp
arpl
popa
jecxz
sub
xor
mov
pop
add
dec
in
movsl
cmpsl
cmp
adc
sbb
aas
cmp
jo
fmull
shrl
adc
pop
jle
push
andl
es
clc
lods
dec
xchg
lock
cmpsb
mov
and
jo
ljmp
jns
mov
sub
adc
call
jl
jnp
sarl
dec
inc
jae
in
push
out
mov
sti
sbb
inc
imul
xor
divb
out
lret
push
js
xor
cmp
sub
enter
sbb
add
bound
lock
cmp
sub
inc
dec
mov
xor
dec
xchg
stos
popf
cmpsl
dec
and
inc
call
sub
or
ret
and
jle
loop
push
push
adc
cmp
sbb
je
sbb
sbb
add
sbb
jge
jecxz
sub
fstl
cmpsl
sbb
out
inc
pop
sahf
sub
sub
mov
mov
xor
outsb
mov
xchg
pop
rolb
pop
sbb
ljmp
pop
jb
negb
cmpsl
mov
shlb
push
stos
es
mov
sbb
add
out
xchg
sub
je
inc
xchg
lock
dec
adc
add
mov
xor
adc
jnp
adc
fidivs
fwait
jnp
xchg
cmp
and
leave
incb
push
inc
xor
jnp
arpl
adc
shl
dec
bswap
dec
cli
and
and
xor
ret
push
flds
jmp
add
das
cmp
or
push
es
pxor
leave
add
int
or
or
je
xlat
cmpsl
ret
jl
xlat
loopne
mov
outsb
test
out
aad
std
fwait
mov
xorb
xchg
jle
push
fisubs
lods
inc
iret
stc
lea
add
add
inc
xchg
jg
cli
jmp
pusha
jmp
xchg
js
add
movb
int3
les
push
rolb
lahf
and
jl
adc
xchg
sbb
xor
jl
jecxz
sti
fiaddl
push
cmpsb
in
mov
mov
or
fucom
jmp
xchg
jmp
mov
sbb
push
lds
xor
add
repz
cmpsb
scas
popf
xchg
test
cli
fstpl
into
pop
push
push
push
push
and
fcoms
adc
in
pop
sbb
lcall
out
cmpb
add
sahf
jge
sahf
cli
jae
xor
sub
mov
test
or
mov
mov
ja
pusha
dec
xchg
fwait
adc
mov
or
cmp
dec
jecxz
test
mov
adc
aaa
pop
mov
arpl
or
push
pop
sbb
mov
dec
xchg
cli
push
push
outsl
sbb
mov
xor
dec
push
add
icebp
std
and
in
ljmp
mov
inc
sub
add
mov
stos
pop
jbe
lds
xchg
cmpsb
rcrb
dec
cmp
or
aad
sahf
cli
jecxz
mov
xchg
push
cmpsb
cmp
das
inc
mov
ljmp
fldl
ja
pop
xor
dec
pop
imul
push
lods
sahf
cli
or
mov
add
xor
out
sub
test
push
mov
outsb
sahf
jecxz
adc
mov
insl
fisttpl
iret
pusha
adc
les
sahf
int3
sub
jae
jno
hlt
jle
std
popf
shrl
cmovne
adc
xchg
fadd
jns
inc
sbb
mov
adc
xchg
dec
ret
add
push
mov
cmc
outsb
subb
lcall
jecxz
xor
jle
out
iret
loope
inc
mov
pop
push
push
fisttpll
jns
adc
scas
jge
mov
sbb
adcb
call
fstl
push
sub
test
inc
mov
xlat
ja
adc
inc
push
pop
shll
add
cltd
pop
push
push
cmp
xor
insb
pusha
xchg
and
aaa
cwtl
inc
dec
in
dec
and
jl
leave
or
test
xchg
sbb
lahf
push
imul
jmp
jne
mov
daa
pop
jge
insl
dec
jge
pop
shll
cmp
popf
mov
lret
out
and
cltd
pop
inc
fisttpll
add
mov
std
add
jae
std
adcl
mov
xchg
icebp
xchg
sub
pop
rcr
enter
adc
scas
mov
and
xchg
xchg
test
inc
push
and
inc
push
sbbb
fildll
mov
jo
adc
inc
daa
push
jbe
popa
push
adc
out
mov
add
add
adc
sbb
jecxz
cmp
inc
sub
sti
push
movsl
jp
jb
mov
cltd
push
add
daa
in
clc
test
xor
popa
push
pop
mov
inc
into
icebp
arpl
imul
pushf
mov
pop
test
pop
and
fs
cmp
imul
loop
pop
aaa
dec
rorl
add
stos
js
push
inc
mov
test
or
ret
icebp
xchg
andb
push
mov
call
mov
fdivrl
ss
addb
jae
dec
into
push
enter
rorb
push
out
sti
push
out
cmc
adcb
xor
or
jp
cmp
cmpsb
inc
dec
add
adc
add
add
adc
xchg
loop
jl
in
inc
rcrl
or
jge
ja
pop
call
push
push
inc
jb
mov
lcall
sub
lcall
shrl
lds
leave
jmp
pop
int
das
xor
xchg
push
bound
add
popf
cmp
testb
and
or
out
into
daa
inc
push
insb
les
arpl
aad
mov
and
imul
call
jne
int3
lret
dec
cmpsl
push
aam
add
add
sti
xchg
inc
push
nop
pop
inc
push
add
sti
xchg
inc
pop
fisttpll
xchg
fimull
add
add
cmpsl
orl
sub
add
imul
push
imul
inc
inc
inc
xchg
pop
inc
push
decb
cli
xchg
inc
mov
ret
jge
sub
add
sub
push
xchg
in
and
shrb
push
movsl
movsb
dec
push
jno
inc
and
fcmovne
adc
sub
pop
inc
push
imul
cld
adc
add
imul
mov
add
push
adc
aas
and
arpl
xchg
ljmp
int3
fimull
int3
dec
dec
cmpsl
or
int3
inc
es
fists
icebp
inc
push
cli
inc
push
in
xchg
lahf
mov
inc
dec
push
dec
push
clc
movsl
mov
inc
inc
push
dec
out
mov
push
add
dec
push
lock
xchg
mov
dec
es
push
cld
pop
xchg
scas
add
roll
pop
dec
push
hlt
popf
adc
lret
add
inc
es
push
hlt
in
pop
jae
addr16
push
xchg
cmpsb
mov
sbb
incb
dec
jmp
les
push
xorl
push
hlt
movsl
cmpsb
stos
jns
in
lret
dec
mov
push
cld
movsl
aad
add
lods
or
add
aad
inc
mov
in
xor
sahf
pop
pop
or
cmpsl
orl
inc
mov
clc
lret
inc
mov
mov
pop
aad
loopne
popl
sub
add
movsl
mov
and
shl
lock
mov
push
addr16
push
or
mov
pop
ror
inc
notb
sti
push
roll
cmc
leave
int3
push
add
dec
test
cmpsl
movsl
mov
push
std
inc
jae
inc
sti
xchg
int3
mov
push
movsl
movsl
mov
and
ror
dec
lcall
add
int3
in
ja
int3
bound
int3
pop
or
int3
lret
inc
cmpsl
mov
adc
xor
mov
pop
or
int3
bound
int3
pop
or
int3
lret
inc
cmpsl
push
add
xchg
mov
push
roll
pop
inc
sti
popf
adc
arpl
lret
dec
repnz
adc
int3
push
push
into
push
cld
movsb
xchg
inc
mov
movsb
mov
pushf
test
imul
loope
mov
push
roll
pop
inc
sti
popf
adc
jecxz
lret
dec
xchg
mov
adc
into
push
cld
sub
mov
int3
inc
dec
push
icebp
adc
rolb
add
out
jmp
mov
test
push
xchg
bound
xchg
lret
inc
cmpsl
movsl
lret
pop
add
ror
or
arpl
xchg
ljmp
int3
fimull
int3
dec
inc
cmpsl
or
int3
inc
es
cmp
lret
push
roll
imul
push
sbb
or
out
push
stos
inc
incb
popf
adc
fildl
addb
add
add
out
mov
cld
ret
rcrl
push
cld
xchg
mov
xor
movsl
xchg
mov
jecxz
dec
mov
nop
cmp
dec
mov
inc
xor
lock
inc
lahf
out
mov
push
ror
push
push
dec
incb
xchg
xchg
push
dec
push
clc
movsl
int
add
int3
dec
push
dec
push
or
loop
dec
dec
aas
or
sub
push
push
dec
incb
add
leave
stos
imul
test
dec
dec
cmpsl
orl
jecxz
xchg
push
cmp
call
xchg
push
inc
add
dec
push
lock
jbe
add
dec
inc
add
ror
push
push
aam
lock
sahf
mov
js
rorl
das
roll
test
sub
mov
inc
push
adc
add
add
lods
add
mov
ret
cmp
jge
mov
lret
push
es
mov
lret
inc
mov
mov
arpl
stos
pop
xchg
popf
mov
inc
cs
rep
test
adc
clc
inc
add
ror
inc
jle
cmp
push
jge
mov
lock
cmp
jge
jecxz
inc
add
ror
push
xor
add
stos
gs
inc
xor
cmpl
jge
mov
lret
add
mov
andl
add
jmp
dec
push
hlt
movsl
ror
dec
es
invd
sbb
int3
inc
ret
adc
cmpsl
mov
je
dec
push
in
movsl
pushf
xchg
mov
ljmp
bound
mov
cld
ret
ret
push
hlt
add
int
inc
dec
ljmp
xor
loopne
sarl
pop
pop
add
xchg
lret
dec
cmpsl
push
loope
mov
push
roll
pop
dec
sti
popf
adc
arpl
lret
dec
repnz
int3
push
push
rorb
cld
movsl
mov
pop
cmc
int3
or
jmp
ret
ljmp
int3
fiaddl
int3
add
cmpsl
mov
pop
shrb
mov
mov
adc
lods
adc
push
sbb
int3
lret
dec
cmpsl
orl
mov
or
xor
dec
or
subl
sbb
clc
xchg
fwait
mov
add
roll
faddp
mov
cmpl
jne
rolb
xchg
mov
add
add
lret
dec
out
xchg
xchg
cli
inc
jge
mov
dec
mov
push
mov
push
mov
lock
sbb
mov
dec
mov
lock
sbb
mov
inc
outsb
lock
sbb
jb
int3
push
dec
lock
and
push
lret
enter
dec
add
inc
fcmove
push
es
inc
mov
clc
lret
dec
push
mov
add
add
int
jae
hlt
mov
add
xchg
fiaddl
int3
dec
dec
cmpsl
or
loop
clc
mov
xchg
nop
jae
xchg
mov
imul
inc
stos
inc
or
test
push
lcall
rclb
les
shrb
add
adc
iret
fdivrs
jle
mov
clc
lret
dec
and
sbb
xchg
popf
mov
inc
push
dec
push
clc
movsl
popf
dec
mov
mov
add
roll
ss
mull
inc
push
clc
inc
pushf
mov
and
in
xor
inc
sahf
pop
fldl
xchg
loop
xchg
fiaddl
cmpsl
mov
jl
and
mov
lods
add
sub
int3
pop
add
add
add
inc
cmpsl
orl
fistl
enter
dec
push
in
mov
mov
in
lds
lret
inc
push
in
mov
sub
xchg
jae
push
inc
sti
outsb
addr16
ljmp
in
pop
inc
push
dec
out
sbbl
pop
leave
adc
ljmp
pop
std
inc
add
push
shrl
fmul
lret
inc
jecxz
cmp
push
push
test
in
popf
jbe
add
mov
inc
orb
push
jge
mov
in
push
cs
jecxz
mov
loop
mov
shlb
jg
mov
in
inc
scas
fdivl
dec
es
adc
pop
push
in
xchg
xchg
stos
add
call
add
std
ret
shll
push
in
lds
push
movb
sbb
les
push
inc
mov
dec
lock
call
push
mov
cs
hlt
nop
sub
roll
jecxz
adc
sub
add
inc
push
cld
pop
push
js
xor
ror
dec
xor
add
add
lahf
and
shl
adc
xchg
inc
adcl
inc
push
shrl
sbb
add
roll
dec
in
adc
push
lock
in
xchg
inc
mov
movsl
xchg
stos
mov
int3
dec
loop
push
fcompl
cmc
lret
inc
ret
or
add
push
movsl
test
mov
clc
adc
push
subl
add
int3
inc
inc
pop
inc
adc
xchg
inc
sub
movsb
lret
pop
push
in
sub
add
roll
cmc
push
ss
gs
mov
lret
dec
repnz
mov
push
loope
push
incb
inc
push
xchg
pushf
mov
imulb
fsts
or
test
add
mov
add
roll
out
pop
push
cld
add
pop
dec
adc
xchg
inc
push
mov
or
add
clc
add
imul
dec
adc
xchg
inc
push
inc
bound
add
or
cmp
add
in
lds
push
rolb
sbb
xchg
inc
push
neg
mov
stc
push
jg
movsl
ret
push
and
mov
add
pop
rol
inc
movb
or
dec
out
dec
in
add
mov
iret
inc
add
pop
sahf
pop
pop
aam
int3
jmp
cmpsl
mov
fmul
inc
jb
test
pop
sbb
int3
lret
pop
cmpsl
push
js
xor
ror
inc
push
subl
ret
bound
int3
pop
sbb
int3
lret
pop
cmpsl
orl
addb
inc
add
push
adc
fildl
xchg
scas
add
roll
arpl
inc
add
roll
add
pop
data16
popl
push
fxch
or
mov
ljmp
rcrl
cltd
roll
and
sub
popl
push
roll
and
ds
popl
push
roll
and
pop
inc
push
shrl
or
addr16
add
rol
cmp
push
inc
push
in
dec
hlt
cli
mov
cmp
push
and
repnz
dec
sbb
popl
pop
std
inc
inc
sub
jmp
popf
cmpsl
mov
leave
pop
inc
push
pop
dec
sbb
popl
mov
add
inc
push
in
dec
hlt
cli
mov
dec
mov
add
or
push
add
ror
or
add
mov
add
clc
mov
imul
out
movsl
test
decl
jg
jge
pop
inc
push
pop
out
into
jbe
mov
mov
stos
stc
adc
mov
fcmovu
int3
push
push
pop
push
in
xchg
mov
arpl
xor
pushf
lahf
push
xchg
test
or
icebp
adc
push
into
push
call
add
dec
sub
popl
dec
in
adc
push
out
lcall
in
inc
into
out
xchg
stos
mov
in
inc
dec
dec
pop
push
cld
xchg
test
push
cmp
ffree
jecxz
inc
add
shrl
pop
aad
inc
es
push
clc
in
mov
push
push
dec
sub
popl
jae
lret
add
mov
push
clc
add
dec
test
sbb
mov
add
push
inc
sub
popl
arpl
leave
adc
jmp
pop
inc
push
jg
addl
cmc
popa
mov
mov
inc
push
mov
cmp
push
gs
mov
xchg
xchg
pop
add
ret
adc
adc
ret
pop
sbb
int3
add
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
add
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
add
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
add
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
add
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
add
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
push
roll
jmp
adc
add
add
add
adc
add
adc
add
add
add
add
add
adc
add
data16
popa
jb
pop
arpl
jae
jae
push
imul
push
xor
add
or
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
adc
add
add
add
adc
add
adc
add
add
add
adc
add
adc
add
add
add
adc
add
adc
add
add
add
add
add
adc
add
imul
insb
insb
outsl
arpl
add
push
dec
inc
dec
xor
cs
insb
add
xlat
add
fs
arpl
push
add
add
fs
je
push
imul
mov
ja
imul
xor
imul
popa
jae
inc
js
add
add
fs
arpl
inc
add
add
fs
jne
jae
jb
add
inc
push
xor
cs
insb
add
hlt
add
je
je
arpl
bound
arpl
inc
inc
dec
xor
cs
insb
add
push
gs
jo
outsb
dec
gs
js
add
push
inc
push
dec
xor
cs
insb
add
jp
insl
gs
arpl
add
insl
jae
arpl
cs
insb
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
or
add
add
pusha
and
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
lret
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
cmpsb
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
add
add
imul
popa
add
add
add
add
add
and
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
cmp
add
add
add
add
add
add
add
xor
add
add
add
jo
jae
jo
add
add
add
add
xor
xor
sub
add
xor
add
add
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
imul
popa
add
add
add
js
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
test
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
insl
add
add
popa
add
add
add
js
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
scas
add
add
imul
outsl
add
jae
and
dec
add
add
popa
add
add
add
jbe
imul
jae
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
cmp
add
add
add
add
add
add
add
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
