push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
call
xor
mov
pop
pop
pusha
call
add
add
in
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
pop
push
mov
sub
push
push
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
pop
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
call
add
jmp
ret
push
pop
mov
sub
mov
mov
shl
xor
push
sub
push
mov
mov
cmpb
je
add
lea
inc
movzbl
sbb
ja
mov
cmp
jae
nop
mov
cmp
ja
lea
jle
popf
push
pushl
decl
jmp
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
pop
call
add
in
sub
push
push
pushl
push
push
call
add
pop
mov
pop
pop
call
add
in
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
pop
call
add
in
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
push
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
pop
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
push
pushl
push
call
add
pop
mov
pop
pop
call
add
in
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
in
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
call
add
in
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
call
add
in
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
pop
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
call
add
in
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
call
add
in
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
push
pushl
push
call
add
pop
mov
pop
pop
call
add
in
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
call
add
add
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
pop
call
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
call
add
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
in
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
call
add
in
sub
push
pushl
push
push
push
call
add
pop
mov
pop
pop
call
add
in
sub
push
push
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
pop
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
call
add
add
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
pop
call
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
pop
call
add
in
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
pop
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
pop
call
add
in
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
push
call
add
pop
mov
pop
pop
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
pop
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
pop
pop
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
pop
call
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
call
add
in
sub
push
push
pushl
push
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
pop
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
in
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
pop
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
pop
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
pop
call
add
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
pop
call
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
pop
call
add
in
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
add
nop
nop
nop
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
push
pop
call
add
mov
sub
sub
mov
pop
mov
mov
mov
mov
push
xorl
pop
sub
or
xor
mov
push
push
push
pop
push
pop
stos
pop
pop
subl
add
pushl
lea
lea
pop
repz
add
cmp
jne
mov
pop
pop
call
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
pop
call
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
pop
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
pop
call
add
add
nop
nop
nop
push
mov
sub
push
.byte
lock
add
xor
add
xor
add
add
shlb
add
adc
add
out
add
shlb
add
repnz
add
xor
add
add
mov
xor
add
xor
add
xor
add
add
pushf
xor
add
xor
add
add
add
add
mov
xor
add
add
les
add
push
xor
add
add
mov
add
cwtl
xor
add
add
loop
add
shlb
add
add
add
sbb
add
add
push
xor
add
add
add
add
fs
add
add
add
xor
add
xor
add
xor
add
add
cli
xor
add
add
mov
add
add
add
add
add
nop
xor
add
add
add
add
js
add
movsb
xor
add
xor
add
xor
add
xor
add
add
shlb
add
adc
add
out
add
shlb
add
repnz
add
xor
add
add
mov
xor
add
xor
add
xor
add
add
pushf
xor
add
xor
add
add
add
add
mov
xor
add
add
les
add
push
xor
add
add
mov
add
cwtl
xor
add
add
loop
add
shlb
add
add
add
sbb
add
add
push
xor
add
add
add
add
fs
add
add
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
out
inc
gs
imul
bound
gs
add
inc
add
outsb
arpl
dec
outsl
add
dec
add
je
jb
arpl
jae
gs
jo
add
add
outsb
fs
insb
outsl
jae
add
add
imul
jb
je
arpl
addb
jb
popa
je
inc
imul
jns
add
push
add
je
outsl
arpl
gs
outsb
outsw
inc
add
dec
add
outsb
fs
gs
jne
arpl
add
dec
popa
jo
imul
insb
add
add
push
popa
insb
imul
addr16
add
inc
popa
fs
jb
je
push
je
add
push
imul
je
add
add
add
popa
jo
imul
inc
gs
js
je
outsl
fs
push
add
add
je
imul
bound
gs
add
adc
gs
je
jbe
outsb
je
add
gs
popa
jae
inc
jb
outsl
jb
add
add
je
jb
jbe
push
jns
gs
add
popa
je
dec
popa
imul
add
gs
outsl
jbe
inc
imul
jns
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
mov
inc
imul
dec
gs
popa
addr16
add
int
dec
outsl
popa
fs
jne
jae
jb
add
push
imul
js
push
add
xchg
push
push
gs
jae
addr16
add
mov
dec
jae
imul
jae
popa
addr16
add
jnp
push
gs
outsl
arpl
add
jnp
inc
gs
imul
outsb
addr16
add
in
push
inc
gs
popa
jo
jne
add
sbb
ja
jo
imul
pop
dec
outsl
popa
fs
insl
popa
addr16
add
pop
or
jae
dec
gs
popa
addr16
add
jno
push
gs
jne
jae
jb
rolb
jae
imul
push
push
inc
push
xor
cs
insb
add
add
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
add
inc
insb
insb
push
outsb
jb
imul
jb
gs
add
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
push
push
dec
push
dec
inc
push
cs
insb
add
add
popa
jae
outsb
imul
imul
inc
push
dec
xor
cs
insb
add
cmp
imul
push
out
test
mov
dec
mov
js
faddl
dec
pop
sbb
jg
cmp
icebp
loope
cmpsb
and
dec
loop
repz
aas
fidivs
cmp
sub
adc
jno
jne
das
sbb
mov
pop
lds
xor
lods
xor
in
mov
or
lds
mov
les
push
repnz
dec
push
fsqrt
and
mov
andb
mov
mov
popa
add
outsb
mov
cmp
mov
stos
sub
push
inc
test
das
lods
out
call
test
mov
and
cmp
fs
cld
insb
mov
push
add
and
fdiv
cli
mov
out
fidivrs
jg
imul
mov
sahf
pop
add
lods
and
and
cmp
movsl
and
dec
sbb
xchg
pop
cs
mov
out
or
lcall
dec
rcr
les
outsb
jnp
dec
xor
cmc
scas
push
test
mov
ficoml
clc
outsl
mov
mov
iret
pop
arpl
lret
cmp
test
roll
mov
ja
loopne
push
jno
mul
lcall
clc
stos
cwtl
out
pop
inc
imul
jno
mov
adc
ret
mov
add
sti
fs
jge
sbb
and
inc
lahf
or
int3
daa
xchg
pusha
add
in
sahf
inc
cmp
insl
das
pushf
shrl
sub
mov
dec
sbb
aaa
movl
das
mov
nop
sbb
sub
ret
fdivr
enter
jmp
pop
mov
mov
push
add
add
add
add
xor
add
decl
add
add
add
pusha
add
addb
add
add
add
js
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
ss
push
mov
add
sub
add
and
add
inc
add
add
add
add
add
add
add
std
std
incl
std
incl
fwait
lcall
lahf
lahf
lahf
or
mov
mov
lcall
add
add
add
add
add
lahf
sahf
adc
movsb
mov
jne
test
mov
mov
mov
stos
test
das
xchg
nop
adc
add
add
movsl
popf
pop
lcall
xchg
test
lods
les
mov
leave
out
rcl
shr
rcl
iret
fmul
lret
leave
ret
mov
test
pop
fwait
xchg
xchg
and
add
add
rol
mov
popf
cltd
push
mov
cmpsb
out
mov
cli
mov
into
int
in
in
in
in
out
jmp
call
mov
lods
outsb
mov
cltd
fwait
add
std
std
add
int
cmpsl
cmpsl
cmpsl
sbb
fwait
cltd
cwtl
rcrb
test
mov
mov
fcom
jmp
call
idiv
std
cld
cld
std
std
push
icebp
lock
loop
loope
mov
test
addr16
xchg
xchg
sbb
add
add
xchg
xchg
pop
mov
mov
pop
mov
stos
lods
push
stos
lods
stos
scas
popf
sahf
pushf
icebp
lcall
ljmp
rol
lret
lret
lret
in
jmp
icebp
repz
cld
cld
cld
sti
cli
cld
jmp
in
dec
int3
into
out
lods
mov
mov
mov
add
stos
lods
lods
add
daa
mov
cmpsl
test
cmpsb
test
jo
test
movsl
mov
mov
std
mov
mov
movsl
movsl
test
cmpsb
cmpsb
cmpsb
pushl
into
sar
aad
clc
out
jecxz
jmp
in
in
hlt
out
hlt
jmp
lret
loopne
mov
rcr
xchg
movsl
mov
addb
jl
xchg
cwtl
jae
scas
lods
popf
mov
mov
mov
mov
mov
ret
mov
scas
mov
test
mov
ret
test
fcmovnbe
repnz
neg
sti
loop
fdivrp
in
icebp
inc
mov
aam
cwtl
mov
add
push
push
push
push
push
pop
bound
dec
dec
dec
adc
cmp
cs
adc
xor
cmp
cmp
add
add
add
add
addb
sub
scas
scas
vcmppd
rol
cmc
sarb
std
cmpsl
mov
stos
pushl
scas
mov
shll
lret
sti
leave
shl
enter
into
lret
enter
mov
mov
sahf
mov
lds
add
add
outsb
and
push
pop
pop
gs
dec
dec
push
inc
inc
inc
pop
dec
dec
push
pop
pop
pop
pop
cmp
push
sbb
dec
or
ja
xchg
xchg
cwtl
inc
movsl
mov
mov
cld
enter
mov
ljmp
cmpsb
cmpsb
jmp
mov
inc
mov
enter
mov
cmc
ret
mov
lock
cmc
lods
sahf
test
lcall
cld
nop
rolb
add
add
nop
mov
addb
xlat
jb
jae
insl
insb
insl
shll
je
jge
jle
ja
je
addr16
bound
and
test
mov
lock
rol
ret
rol
mov
mov
lcall
ret
mov
pushl
int3
mov
mov
sarb
mov
movsl
notb
xchg
cwtl
call
mov
add
add
stos
movsb
mov
fsts
mov
cli
mov
mov
xchg
mov
xchg
jl
imul
mov
lahf
iret
lods
lods
lods
out
mov
mov
decb
call
lcall
jmp
push
jmp
lds
inc
mov
lret
into
leave
sti
mov
mov
jmp
xchg
xchg
clc
xchg
xchg
xchg
movb
add
shlb
xchg
mov
mov
xchg
lcall
xchg
lcall
nop
out
mov
pop
jg
dec
push
insb
imul
xchg
xchg
xchg
in
lahf
movsb
cmc
imul
hlt
lcall
mov
test
movsb
inc
ret
mov
dec
ror
rcl
iret
inc
enter
scas
mov
mov
pushf
mov
lcall
cwtl
mov
add
add
les
fldt
xchg
nop
call
xchg
xchg
lcall
sahf
lahf
lcall
xchg
xchg
cld
mov
push
push
dec
push
xchg
pop
pop
pop
cmpsl
jo
jb
addb
lock
ljmp
leave
call
mov
mov
jmp
jecxz
in
out
jmp
icebp
repnz
jmp
xlat
inc
rol
stos
stos
lods
lcall
nop
xchg
ficomps
add
add
sarb
fldt
xchg
xchg
call
fwait
lcall
lea
decb
mov
faddl
xchg
xchg
mov
xchg
mov
imull
lods
xchg
ljmp
mov
inc
mov
int3
jmp
loopne
push
repz
cld
sti
cli
std
cld
std
cld
sti
cld
in
out
out
call
fcom
pushl
stos
stos
lock
cltd
pushf
mov
xchg
xchg
dec
add
add
fmul
mov
fldt
sahf
lahf
lcall
mov
fwait
lcall
xchg
xchg
nop
lea
clc
sahf
mov
cmc
mov
pop
stc
mov
popl
mov
lcall
les
mov
leave
mov
fcomp
call
div
std
std
std
std
clc
stc
stc
jmp
inc
mov
mov
movsb
movsl
movsl
outsb
lcall
add
mov
lret
fldt
movsb
jmp
movsb
movsl
lcall
cmpsb
pushl
xchg
outsl
mov
dec
inc
xchg
cmp
dec
mov
dec
mov
call
xchg
add
fistpl
add
jecxz
or
fldt
xchg
ror
mov
ljmp
std
std
std
std
push
div
ljmp
ljmp
mov
test
mov
add
mov
mov
mov
pushl
lods
lods
jmp
cmpsl
test
inc
cwtl
aas
dec
mov
call
xchg
add
rorl
add
rclb
jmp
cmpsb
add
in
lods
add
repnz
push
mov
aaa
ffreep
jae
fcmovnbe
movsl
jmp
jmp
repnz
out
out
in
out
fcomp
aad
rcl
shl
leave
enter
mov
lods
and
mov
mov
mov
scas
fldt
mov
pushl
mov
ljmp
stos
stos
inc
mov
dec
movsb
dec
fcoms
add
aam
add
fcomps
jmp
cmpsb
add
out
mov
push
mov
add
inc
add
sti
ret
or
test
dec
ljmp
jmp
aad
mov
enter
mov
mov
test
cmpsl
scas
adc
rol
mov
movsl
pop
mov
scas
fldt
mov
mov
mov
mov
scas
scas
scas
inc
mov
pop
call
cltd
or
fstps
add
ficompl
add
jmp
mov
add
inc
add
std
les
std
les
std
enter
int
dec
and
cld
shrb
std
aad
out
aam
inc
shll
xchg
fwait
xchg
lods
lods
lods
add
add
add
cmpsb
mov
mov
mov
sar
mov
mov
les
push
aad
or
fstps
add
ficomps
add
icebp
mov
push
mov
add
inc
add
cld
adc
shrb
std
shrl
std
shlb
xlat
xor
std
shrl
push
xlat
je
leave
lds
mov
xchg
xchg
inc
push
push
push
add
add
add
test
xchg
cwtl
cltd
cltd
mov
mov
mov
mov
inc
mov
jl
rcrl
add
loopne
add
in
add
in
mov
push
mov
add
std
les
cld
ret
add
std
fimull
fisttpll
dec
cld
xlat
dec
std
fmull
fmull
sti
loope
fcom
stos
sti
mov
lods
rcrb
add
dec
push
push
mov
mov
inc
ret
ret
mov
mov
mov
mov
xor
fistpl
add
jmp
mov
add
inc
add
std
ret
add
std
pop
call
inc
fildll
std
loop
std
out
jmp
insl
std
jmp
imul
mov
mov
sahf
sahf
pop
lcall
add
dec
pop
pop
pop
pop
fmuls
mov
inc
rol
ret
mov
mov
mov
shll
loopne
or
call
mov
add
inc
add
std
lret
std
movl
loope
in
xchg
in
cmp
out
xchg
std
icebp
mov
repz
push
test
hlt
xchg
call
shll
aad
mov
pushf
adc
add
add
add
add
popa
inc
jp
jl
scas
mov
fld
shr
int3
int3
iret
test
rol
mov
mov
mov
enter
mov
jmp
test
push
mov
clc
mov
add
std
enter
leave
add
dec
add
fnstcw
std
jmp
std
repnz
std
icebp
sahf
push
sahf
std
cli
lahf
std
stc
mov
std
negl
mov
mov
xchg
sbb
incb
js
jae
pushf
sahf
sahf
inc
int3
int
fs
in
loopne
in
fmulp
aad
fcmovnu
lret
out
int3
lret
into
ret
test
call
mov
cli
rolb
std
movb
cld
movl
std
lret
fcoml
std
icebp
stos
std
repnz
std
divl
std
cld
mov
std
idivl
loopne
scas
mov
cmpsl
cmpsb
mov
std
incb
lods
lods
stos
add
fnstsw
or
repnz
repz
in
lock
in
out
pop
out
in
jne
xchg
xlat
fcom
ret
mov
stos
pop
call
mov
add
cld
les
cld
movl
dec
and
in
test
std
test
std
sti
mov
std
clc
sar
stc
sar
cld
stos
call
mov
test
mov
addb
add
add
std
add
std
incb
decb
div
cmc
sbb
lock
jnp
lret
sarb
adc
stc
mov
cld
mov
add
inc
add
std
movb
shll
std
in
xchg
std
stc
mov
sti
hlt
mov
div
mov
call
loop
in
mov
loopne
cmpsl
sti
loop
mov
ret
mov
cmpsb
xchg
mov
addb
add
add
aam
or
lret
into
push
int3
mov
sti
out
adc
hlt
lods
add
divl
pop
out
mov
pop
std
in
rolb
call
in
cli
ljmp
hlt
movsb
in
aad
scas
in
sarb
rcl
mov
mov
mov
test
sbb
add
add
fcmovu
pop
enter
enter
int3
mov
inc
fldcw
das
cld
shlb
inc
repnz
push
jmp
ret
and
lds
rol
rol
sahf
rol
mov
ret
rol
mov
dec
mov
mov
mov
add
add
add
mov
mov
nop
rol
mov
lret
repz
ffree
mov
mov
mov
movsl
mov
test
ja
mov
push
mov
mov
sub
rol
enter
enter
int3
int3
int
lods
stos
lods
add
add
add
std
add
mov
mov
mov
mov
mov
lods
pushf
lods
scas
cmpsl
jns
scas
cmpsb
push
scas
mov
inc
scas
stos
movsb
xor
cmpsl
cmpsb
adc
shrl
xchg
xchg
xchg
pop
lods
lods
stos
add
std
add
std
incb
jmp
add
add
jmp
add
add
jmp
add
add
clc
add
add
add
push
add
add
jmp
add
add
add
inc
add
add
add
incb
add
add
add
clc
add
add
add
push
add
add
add
jmp
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
pusha
add
add
add
add
add
add
add
add
add
add
add
pop
loopne
add
jmp
mov
inc
loop
jb
stos
add
bound
push
jmp
inc
push
test
int
movsb
sti
and
cmp
inc
fidivrl
or
shrb
mov
and
popf
xor
adc
inc
xchg
mov
add
mov
and
cmp
test
cmp
adc
pop
loop
lret
in
jecxz
push
call
xor
push
and
or
stos
inc
pop
sti
pop
hlt
sub
leave
pusha
mov
jnp
jg
out
add
es
dec
es
mov
jns
inc
fdivr
lcall
dec
in
adc
mov
ret
pushf
xor
xchg
dec
in
push
mov
add
mov
push
mov
lods
inc
fadd
pop
push
arpl
xchg
das
jecxz
popa
mov
jmp
mov
jno
cmp
pop
mov
pop
lea
cmp
inc
loopne
pop
repnz
leave
inc
stos
fsubs
mov
leave
sub
jb
dec
mov
jb
add
xlat
les
mov
clc
in
subl
scas
inc
sahf
pop
or
and
ljmp
movsl
or
test
lds
cmpsl
test
aad
dec
jecxz
repnz
orl
or
fcmovb
es
sbb
ds
outsl
data16
xchg
nop
sub
les
xor
pop
in
sbb
cmp
push
mov
add
fimuls
jne
push
mov
xorb
mov
les
mov
test
sub
cmp
dec
dec
loop
jnp
push
out
lcall
xchg
out
pop
cmc
pop
test
mov
inc
jl
jb
cmp
negl
pop
out
dec
ljmp
popf
cmp
cmc
insl
mov
jl
sbb
mov
fdivrs
inc
xlat
jg
xchg
sub
mov
add
jl
das
and
lcall
pop
inc
fidivrs
insb
mov
sahf
cmp
insb
loope
cmpsl
sarl
outsb
loop
pop
adc
adc
data16
lcall
jl
jne,pn
and
lcall
pusha
mov
popa
cmp
call
dec
cmp
shrl
add
jle
lods
icebp
mov
push
add
cmpsb
xor
sub
fsubrs
movsb
dec
loop
dec
pop
idivb
add
sahf
jge
rorb
push
jnp
fwait
xor
popf
movsl
cmp
inc
mov
pop
and
loope
jne
cmc
mov
adc
sbb
cmp
insl
jecxz
out
pop
lock
push
adc
xchg
sub
fsubrl
dec
mov
fcmovnbe
push
mov
out
xchg
add
mov
and
add
es
loopne
int
hlt
js
test
lret
cld
jb
xor
mov
pop
mov
ret
loopne
cmc
imul
popf
push
call
out
imul
shr
bound
xchg
or
outsb
add
xchg
pop
lea
mov
sub
mov
leave
pusha
fistps
push
add
jg
stos
icebp
mov
push
push
popf
test
das
cmpsb
and
xlat
push
sub
fldcw
mov
pusha
idivl
imul
iret
dec
xchg
jp
pushf
xor
pushf
movsl
cmp
inc
mov
pop
and
loope
je
testb
cmp
sbb
leave
sarl
shrb
mov
mov
test
xchg
inc
cmp
and
push
xor
xchg
adc
rolb
aam
dec
sub
jg
lods
inc
fisubl
popa
clc
jb
jo
subb
jge
inc
outsl
push
jae
aam
jp
movsl
cmp
mov
push
ljmp
lods
inc
in
push
out
inc
imul
dec
cli
xchg
jl
pop
sahf
in
insb
add
aas
sbbl
xorb
gs
test
testb
sahf
fidivl
sub
jb
push
push
jmp
jl
nop
stos
stos
fdivl
leave
outsl
push
incl
fwait
xor
push
rclb
cltd
xor
lods
dec
in
mov
imul
adc
js
push
adc
and
mov
pusha
in
xor
and
enter
jns
jne
out
adcl
fcoms
mov
dec
stos
inc
jp
call
fistpl
mov
dec
ss
lahf
and
fcompl
adc
push
add
into
cwtl
mov
int
xchg
cs
pop
and
rcrb
imul
pop
add
mov
adc
sbbl
jle
fwait
jl
lret
xor
sahf
sub
dec
lret
xchg
mov
test
into
lcall
xchg
pop
testb
pushf
inc
fst
arpl
movsl
jbe
dec
out
movsb
pop
out
fsubs
xchg
xchg
dec
shlb
orl
push
xchg
dec
rclb
lahf
ss
clc
pop
bound
jecxz
xchg
nop
mov
adc
xchg
push
mov
test
xchg
xchg
push
xchg
mov
sahf
xor
xchg
inc
mov
jb
adc
imul
jns
xchg
inc
mov
je
out
xchg
xchg
cs
push
movsb
cmp
xchg
test
ret
jle
push
jo
xchg
lods
inc
aad
das
cltd
dec
mov
jg
cmp
shrb
test
dec
xchg
enter
ret
outsb
mov
mov
out
lret
pop
icebp
mov
lea
cltd
or
lret
pop
fnsave
dec
fisttps
cltd
and
je
and
mov
inc
fxch
dec
pop
idivb
sub
loopne
sbb
mov
test
arpl
mov
mov
popa
clc
insb
arpl
out
sbbl
jne
pop
xchg
mov
cmp
into
es
push
inc
mov
or
add
push
stc
push
sub
mov
jnp
add
pop
dec
std
popf
xor
pop
stc
add
data16
xor
xor
xchg
cs
cmc
mov
mov
sub
adc
jmp
gs
pop
or
adc
pop
fmul
fs
jg
mov
rclb
sub
mov
lods
ret
push
aad
mov
js
loope
sbb
mov
inc
mov
int3
arpl
sbb
xchg
dec
and
sbb
or
xlat
stos
pop
stos
inc
inc
jbe
adc
adc
imul
in
sbbl
add
insl
test
jecxz
pop
ja
lret
movsl
or
cmp
lea
jl
mov
jg
ljmp
jb
iret
mov
subl
and
cmp
js
xchg
sub
outsb
lods
inc
lahf
inc
inc
fdivl
lret
lods
sub
popf
xor
mov
es
sub
jo
movsb
cmp
test
fdivl
inc
dec
out
mov
mov
stos
fwait
xor
cmp
and
das
js
adc
roll
xchg
jno
int
jle
push
mov
fwait
mov
mov
sub
inc
fldcw
mov
ret
mov
fistpl
adc
mov
sub
fnstenv
addb
mov
nop
daa
add
fnsave
push
mov
dec
jne
jnp
cmp
mov
movsl
mov
pop
out
xchg
pop
inc
and
jae
pushf
mov
xchg
mov
push
add
sbbb
and
push
ss
es
aaa
mov
ret
out
stc
rcrl
xor
and
pop
sahf
cmpsl
ja
pop
movsl
or
jo
adc
or
inc
fs
xchg
lock
xchg
mov
xchg
in
mov
aaa
pop
aas
xor
mov
mov
inc
xchg
fdivp
fscale
jmp
das
sti
jnp
sub
dec
push
sub
fwait
add
and
inc
jle
jns
sub
lret
xchg
sahf
xor
es
adc
jb
cli
xchg
outsl
xchg
js
lds
sub
cmpsl
sbb
or
outsl
test
mov
jg
mov
bound
push
mov
jle
push
scas
xor
jp
mov
adc
mov
fiaddl
fcmovu
mov
jge
mov
fidivl
and
cmp
fs
fwait
fs
pop
adc
test
mov
xlat
jnp
sbb
push
divb
testb
adc
adc
insl
adc
sbb
jno
push
fdivs
loopne,pn
cs
lods
mov
sarl
dec
push
jp
xchg
pop
mov
sub
les
xchg
sbb
push
jns
mov
xor
push
cmpsb
mov
fs
lcall
fcoms
scas
mov
loope
mov
jo
popa
repz
push
xchg
jg
repz
jmp
cld
cmp
shlb
sub
push
out
in
sbb
sub
or
and
pop
outsl
mov
mov
fadd
xchg
rcr
xor
sub
nop
xor
xchg
pop
pop
addl
clc
rcr
subb
ret
add
sub
lcall
mov
mov
adc
jo
movswl
rorl
scas
xor
imul
inc
pop
outsl
adc
test
xchg
je
test
xor
dec
fistpl
mov
ljmp
dec
ret
jp
mov
subl
adc
rolb
jne
push
adc
xorb
andl
jg
out
movups
cmp
xchg
sbb
push
add
inc
add
mov
andl
jmp
sbb
mov
test
mov
test
pop
cmpsl
add
enter
dec
lahf
stos
push
mov
in
clc
jmp
pushl
dec
sbb
add
clc
jmp
inc
push
xchg
gs
or
push
mov
cmpsb
std
adc
or
in
inc
inc
movsl
out
jne
loopne
daa
xlat
sub
out
xor
int3
iret
aaa
mov
cmp
js
sub
int3
mov
lret
sbb
mov
pushf
fwait
jge
or
push
enter
mov
rorl
cmp
stos
cmp
mov
movsl
dec
subl
imul
jae
adc
fstpt
pop
sub
sub
mov
mov
xchg
repnz
sbb
mov
mov
pop
aam
das
popf
inc
testl
clc
addb
mov
inc
jb
xor
mov
push
jge
push
stc
and
aas
mov
dec
fidivrs
mov
mov
fistps
loope
mov
rorb
add
or
das
or
lcall
lret
sub
push
out
dec
push
in
mov
jle
xchg
sub
movsb
cmp
nop
shrb
push
call
push
mov
fsub
jle
lods
add
and
inc
fnsave
test
adc
imul
mov
call
ds
cmp
insb
int
ror
test
icebp
dec
and
push
dec
insl
lods
out
mov
popa
hlt
mov
xchg
stos
imul
xor
mov
shrb
fisttpl
int3
mov
insl
add
scas
push
mov
cmp
and
cmp
add
inc
fimuls
test
cld
test
iret
je
fabs
add
cli
repnz
sub
mov
inc
inc
fcomps
into
gs
pop
mulb
jge
or
sbb
inc
mov
shrb
cmpsb
cmp
mov
les
xlat
push
in
in
jecxz
pop
or
add
mov
pop
mov
fbstp
aam
nop
loopne
cmp
repnz
pop
call
pop
out
mov
jnp
daa
mov
mov
xor
pop
loopne
push
inc
push
call
inc
inc
outsl
push
add
cmpsl
outsb
sub
lds
aam
jecxz
ret
xchg
and
xor
pop
pushf
xor
mov
cmp
je
fnstenv
popf
push
in
push
testl
lds
ljmp
pop
xchg
call
push
ja
push
data16
cmpb
lea
push
pop
sahf
mov
loopne
stos
mov
aam
enter
jg
mov
push
popf
rorl
and
das
fstps
test
lret
in
aad
xchg
call
repz
lods
cmc
mov
jle
adc
movsb
cwtl
das
aam
xor
mov
mov
in
fists
fs
jg
or
repz
popf
xor
xchg
adc
mov
lret
pop
dec
rorb
cld
outsl
insl
xor
hlt
mov
xchg
test
iret
rdtsc
enter
pop
sbb
movb
jnp
outsb
dec
in
jle
mov
mov
fwait
xor
mov
dec
out
sbb
insl
add
sbb
jle
movsb
mov
pop
out
pushf
ss
test
stos
cmp
pop
iret
push
xor
clc
out
jl
and
mov
add
mov
nop
daa
loope
aas
sub
scas
inc
jmp
pop
hlt
jle
into
gs
fldlg2
sbbl
xor
sbb
mov
xlat
in
cs
dec
loope
inc
add
add
and
je
inc
xlat
outsl
popf
mov
imul
jl
lret
push
repnz
jecxz
xor
ss
addr16
insl
pop
orl
addl
test
mov
rcll
out
mov
inc
insl
xlat
insl
add
xchg
fs
out
and
lret
sti
xchg
lret
inc
test
sbb
mov
fdivr
xchg
sbb
xor
push
in
mov
xlat
jae
mov
int
sub
test
nop
daa
xchg
cmpsl
fnsave
scas
inc
rolb
xchg
add
int3
arpl
and
jmp
push
test
ret
or
shll
jne
jl
inc
fcompl
xchg
xchg
sub
arpl
movsb
push
sbbl
loope
mov
xchg
cmp
xchg
mov
lret
jbe,pn
ret
cmp
js
pop
repnz
xchg
pop
out
out
jns
dec
emms
push
cmp
adc
inc
cmp
dec
cltd
and
jp
mov
push
js
out
xchg
mov
or
enter
ret
popa
clc
lea
jg
dec
add
inc
arpl
sbb
sti
jg
cmp
fcmovb
pop
cld
cwtl
fsubrs
push
aad
cmp
add
jl
repz
rclb
sti
mov
xor
gs
dec
in
push
outsb
add
leave
rorl
sbb
test
pop
cmp
outsl
fnsave
pop
cmp
lcall
and
sub
gs
and
jo
ds
cltd
insb
add
pop
hlt
subb
stos
jnp
loopne
mov
xor
xlat
outsb
sbb
cmp
sbbb
mov
xor
add
in
and
lahf
sbb
mov
andl
sub
jle
sbb
ss
xor
sarb
lods
dec
fsubrs
int3
sub
enter
je
adc
pop
sahf
imul
movsl
insl
xchg
int
out
loop
sub
sbb
cmp
mov
ficoml
xor
sarl
dec
dec
insl
js
or
cmp
hlt
mov
push
sub
and
adc
stc
push
xor
inc
adc
sub
out
push
jne
cmp
insl
add
push
xchg
sub
repz
loop
pop
sahf
or
jnp
mov
pop
lret
xchg
in
jge
cmp
movsl
shrb
fwait
push
jmp
and
jns
inc
xlat
mov
pop
cmc
icebp
adc
cs
sbb
pop
inc
jae
bnd
loop
aam
jns
loope
out
xchg
or
movsb
jno
mov
mov
sub
dec
imul
dec
loopne
stc
repnz
fnsave
mov
adc
jne
lds
mov
jecxz
xor
push
mov
int3
mov
adc
or
bound
rclb
les
aas
inc
fdivp
push
jecxz
push
adc
add
dec
mov
stos
fisubrs
pop
dec
divl
leave
mull
and
inc
icebp
mov
push
sub
jno
stos
lea
imulb
lods
mov
flds
push
call
stc
jp
push
popf
fistps
and
icebp
xor
fidivrl
popa
clc
lods
cmpsl
fdivl
lds
outsl
cli
xchg
sbb
sahf
xor
rep
mov
fidivs
lcall
sub
push
int3
lods
pop
sahf
lret
and
in
mov
push
xor
fiaddl
fidivl
insb
popa
clc
lcall
push
sub
popf
xor
mov
mov
stc
repz
jo
adc
testl
pusha
mov
lret
fnsave
push
call
pop
dec
outsl
push
cmp
mov
push
lea
fisubs
mov
lock
inc
faddl
fbstp
arpl
inc
test
xchg
call
add
cmp
mov
shll
leave
pop
out
sti
popf
fnsave
ja
mov
xchg
shlb
or
sbb
daa
mov
cmpsl
mov
out
xchg
ss
adc
sub
test
dec
loopne
mov
jl
insl
xlat
xchg
xchg
xlat
out
movsb
cmp
add
mov
test
xor
push
shll
daa
jl
in
dec
ds
add
adc
mov
jnp
inc
insb
mov
xor
insl
or
dec
mov
lret
aad
push
int
mov
test
adc
sub
das
and
sbb
in
jge
aaa
hlt
mov
mov
and
je
sahf
test
shll
adcl
xor
jnp
add
aam
xchg
cmp
dec
lahf
test
and
stos
aam
sub
jle
inc
std
and
gs
lds
adc
xchg
xchg
mov
ret
mov
mov
xchg
inc
mov
push
lods
xchg
adc
cmp
add
push
xchg
daa
push
in
push
mov
xor
jne
test
sub
nop
in
mov
dec
call
or
ja
mov
push
popf
mov
push
mov
pop
in
mov
inc
xlat
sub
idivl
or
int3
and
and
xor
enter
data16
into
mov
mov
movsb
inc
cmp
mov
cmpsb
jb
imul
mov
imulb
popa
sub
je
xchg
cmp
push
adc
xchg
fiaddl
dec
das
mov
mov
jnp
addr16
sbb
sahf
adc
daa
xor
or
outsb
mov
inc
jmp
imulb
into
pop
xor
dec
mov
pop
inc
jmp
and
push
mov
mov
into
mov
jmp
mov
xor
mov
inc
out
sub
xchg
fdivp
sbb
ds
push
and
push
rorl
mov
add
pop
test
adc
sbb
cmp
popa
mov
sub
in
xchg
nop
jge
or
push
and
test
fistpl
lock
mov
add
push
pushf
iret
sub
cmc
out
inc
leave
arpl
loopne
inc
xor
adc
ds
sub
test
pop
dec
cli
test
fimuls
xor
dec
cs
jae
inc
cmp
or
aaa
cwtl
pop
setle
sbb
mov
movsb
mov
sbb
aas
mov
add
out
pushf
mov
xor
imul
cmp
shll
jnp
inc
pop
movsl
inc
mov
andb
jecxz
xchg
subb
lret
hlt
loopne
jns
mov
mov
dec
xchg
xchg
loop
jae
and
test
adc
mov
add
js
jno
sbb
xor
jns
dec
xchg
shlb
scas
or
mov
xor
mov
mov
inc
je
fisttpl
cmpb
cmpsb
rcll
sbb
cmp
popf
aad
cmp
mov
mov
jb
fdivrp
xor
mov
cmpl
bound
push
ss
pop
add
push
adc
jb
jp
ljmp
pop
mov
mov
inc
mov
cmp
sub
sub
add
pop
cmp
lock
sub
repnz
js
inc
inc
loope
sub
in
dec
in
push
mov
pop
loopne
mov
add
data16
jle
stc
aad
jnp
xor
cli
sub
pop
loopne
dec
push
insb
mov
xor
rorb
push
test
pusha
bound
pop
lods
mov
mov
stos
sar
sti
rcl
jns
shll
push
sub
adc
xchg
scas
push
repnz
imul
cmp
daa
test
jp
mov
jle
cltd
in
out
jae
push
ret
icebp
insw
iret
xchg
clc
dec
and
sahf
mov
cli
cmp
lret
cwtl
and
jp
or
or
inc
inc
mov
inc
pop
hlt
pop
or
cmpsb
test
orl
into
mov
arpl
fistpll
xchg
imul
scas
rclb
inc
xor
in
push
lret
inc
loop
imul
mov
mov
and
push
cmpsb
mov
jnp
insb
lcall
je
test
dec
dec
out
jecxz
mov
sub
xchg
out
push
enter
and
mov
int
pop
sub
mov
mov
pop
ret
ret
aam
xchg
jb
mov
jle
jae
xor
scas
jo
mov
mov
xor
repnz
cmpsl
and
sub
notb
and
adc
aad
mov
adc
inc
push
pslld
cld
aam
lret
test
adc
das
pop
or
cmp
adc
or
clc
in
push
mov
imul
mov
adc
cmc
jne
dec
pop
rcll
clc
sbb
sbb
add
roll
xchg
fcomi
mov
pop
xchg
ds
sti
jo
dec
not
lods
stos
lea
imul
xlat
lcall
adc
cmpsb
pop
sti
jae
ljmp
xchg
les
cs
lods
adc
loop
cmp
xchg
sbb
sti
mov
bound
ja
adc
jnp
mov
insb
nop
popa
sub
call
iret
sub
cwtl
push
sbb
ljmp
shlb
sub
lods
mov
push
jo
and
mov
jl
sar
into
test
lods
mov
mov
jb
shrl
sbb
sub
std
fucomp
xlat
gs
sbb
subb
push
push
test
pop
xor
sub
repnz
lds
test
add
xchg
insl
xor
ljmp
xor
xchg
pushf
mov
arpl
adc
xchg
and
mov
jg
push
pop
lea
pop
in
ret
sbb
cmpsb
das
sbb
sti
fnstsw
push
adc
jne
nop
push
inc
insl
clc
mov
les
loop
iret
rcll
push
movsl
jl
pop
push
mov
mov
movsb
xchg
dec
into
int3
lock
fidivrs
mov
mov
push
jno
scas
dec
outsl
neg
repz
inc
sbb
imul
cmp
popf
add
insb
fisubs
jo
lret
daa
outsl
or
mov
rolb
xor
sub
mov
ret
ljmp
inc
jb
add
popa
xchg
xchg
daa
mov
jo
lret
jp
ret
js
hlt
inc
fbstp
cmp
xchg
ja
xchg
sub
popl
xchg
clc
inc
je
push
addb
sbb
jg
loopne
js
mov
mov
cld
xlat
orb
mov
imul
cmp
sbb
fmulp
xchg
pop
bswap
push
or
icebp
lds
pop
and
sub
ljmp
inc
popa
loop
les
mov
or
mov
pusha
mov
push
xchg
push
pop
dec
jp
or
sbb
push
sahf
mov
cmpsl
sbb
shll
inc
fnstsw
mov
xor
cmp
loop
es
cmc
std
imulb
enter
jg
and
mov
xlat
loopne
inc
fs
jmp
jmp
sbb
jecxz
dec
jl
sub
or
loopne
andl
sahf
shl
fdivl
enter
cmp
test
outsb
dec
sub
cmpsl
sbb
iret
mov
and
mov
mov
or
mov
mov
call
movsl
inc
push
loop
push
adc
inc
fdivrs
mov
xchg
ja
fisttpll
negb
pop
repnz
jnp
in
xchg
xor
and
je
xor
or
in
movsl
inc
mov
adc
int
sub
pop
push
scas
aas
and
pop
mov
jmp
popa
stos
pop
xchg
test
xorb
jb
insl
mov
inc
dec
xor
push
loop
sub
leave
rclb
push
push
imul
mov
add
scas
into
pop
cmp
jg
jg
in
push
out
adc
lret
mov
lds
imul
xchg
ljmp
sub
inc
jl
and
incb
mov
push
mov
test
dec
in
leave
inc
xlat
cmp
pop
icebp
pop
or
addb
into
cmp
lea
mov
lods
inc
jmp
dec
fsts
test
cs
dec
frstor
push
jg
aaa
add
sahf
dec
out
cmc
xchg
imul
and
ljmp
xor
sbbb
imul
and
cltd
mov
stos
push
stos
sub
mov
push
dec
mov
cmp
in
fisubrs
dec
add
jns
cmp
mov
popf
insb
in
inc
jae
ret
jmp
jmp
aad
out
jp
inc
gs
or
gs
push
xor
test
sbb
dec
mov
in
sub
cs
or
shr
lods
pop
ja
jmp
les
in
shlb
rcll
test
and
adc
sub
mov
mov
test
movsl
js
divb
test
mov
cmp
sub
xchg
iret
add
stos
mov
inc
popf
mov
loopne
mov
insb
out
jmp
mov
cmp
je
mov
shll
push
jmp
sbb
xchg
addb
sub
lds
cmp
icebp
jl
jecxz
and
stos
aam
sahf
xchg
vmovaps
shl
xor
or
aas
icebp
jle
pop
shll
in
xchg
stc
inc
lock
mov
jae
pop
sbb
and
loopne
pusha
lds
fisubrs
fadds
cmp
sbb
push
stos
pop
cmp
ret
mov
jl
fxch
test
out
adc
pop
movsl
cwtl
pop
push
popf
xor
jns
mov
and
imul
leave
test
mov
pusha
add
pop
insb
or
dec
cltd
dec
lea
fsubrs
daa
add
jmp
dec
lret
or
xchg
mov
stos
out
bound
gs
and
icebp
mov
sti
lods
iret
adc
outsb
dec
rcl
aam
daa
arpl
add
lahf
fwait
mov
mulb
clc
lret
ror
pop
or
or
js
lock
fists
and
jge
sub
mov
popf
and
mov
push
cmp
imul
testl
mov
fs
iret
cmp
cli
add
cmpl
xor
add
fisttps
outsl
inc
inc
sub
inc
fs
xchg
in
iret
jmp
in
inc
mov
push
cs
or
imul
cld
push
pop
imul
mov
nop
dec
test
mov
pop
insl
cmp
fdivs
add
xor
movsl
add
fmul
lock
rcr
xor
lea
dec
jne
test
xchg
sbb
fildll
insb
leave
in
add
scas
enter
int3
es
cvtdq2ps
mov
push
adcl
sub
gs
cmp
or
inc
call
std
or
gs
and
inc
shlb
mov
lcall
jb
jmp
fisttpl
xchg
rcrl
aas
jae,pn
int3
std
xchg
cwtl
arpl
mov
inc
push
jns
insb
aam
aad
insb
jbe
mov
test
mov
and
push
add
xor
cmc
fdivl
sub
or
repnz
faddl
or
mov
cmc
mov
push
xorl
and
jecxz
dec
movsb
mov
jg
test
xchg
pop
cld
or
nop
add
cmp
push
adc
inc
fs
pop
in
aad
fucomip
aam
xchg
xor
add
push
mov
mov
enter
test
nop
cmpsl
mov
sbb
dec
mov
insl
mov
and
js,pt
mov
andb
dec
push
xor
insl
shrl
scas
ljmp
push
shlb
shl
incl
imul
mov
mov
and
cmp
out
repz
jbe
xor
dec
or
aaa
mov
or
shll
and
jmp
sbb
aaa
jne
xlat
cs
into
rcl
ss
dec
dec
clc
inc
adc
xchg
add
lods
or
and
cmpsl
lcall
pmaxsw
imul
out
aam
rorb
push
sbb
inc
fs
lods
shr
popf
aad
loope
nop
scas
daa
fwait
aaa
rcl
js
enter
sub
mov
out
pop
cmp
pop
or
xchg
pop
and
sub
sub
jl
out
lcall
das
adc
test
pop
sti
add
sub
jmp
popa
sub
xchg
push
dec
daa
sbb
cmpsb
pop
cmp
mov
bound
sbb
xor
push
add
and
inc
add
adc
mov
xchg
test
into
pop
sub
mov
lcall
subl
dec
lret
push
inc
mov
fdivrs
inc
push
cmc
mov
pop
or
xor
push
and
iret
popa
fcmove
ja
nop
js
pusha
std
lret
pop
mov
js
outsl
pop
lret
subl
seto
add
iret
xchg
jge
cmpsb
shlb
jp
and
jle
pusha
daa
outsb
fisubl
jmp
and
addr16
cwtl
lcall
and
addb
or
std
bound
call
inc
xor
popf
pop
les
mov
xchg
cmpsl
clc
scas
dec
or
jmp
sbb
sbb
lock
aam
or
inc
fldl
scas
dec
negb
dec
jns
lock
or
mov
push
into
test
xchg
cmp
aas
jnp
adc
mov
cld
lret
rcrl
les
add
popf
js
daa
int
dec
dec
jp
imul
lods
xchg
sbb
xchg
add
ja
into
stc
pusha
xor
mov
fwait
mov
lea
adc
pusha
movsl
mov
iret
inc
pop
subl
test
sub
and
incl
xor
mov
je
push
xor
mov
lods
mov
paddusb
shlb
pop
add
mov
fsubrl
xchg
loope
outsb
fcoms
js
add
mov
or
stos
daa
inc
mov
push
lods
sti
rorb
mov
mov
or
jg
mov
jle
or
dec
mov
jnp
xor
filds
mov
or
xchg
mov
arpl
imul
sbb
inc
push
shl
test
jb
inc
lret
call
sti
sub
adc
pop
cwtl
pushf
es
xchg
dec
test
jg
adc
sub
jno
das
jle
mov
repz
add
xor
shl
movsb
and
and
pop
xor
mov
es
mov
jns
push
dec
sbb
dec
sti
adc
mov
xor
hlt
cmp
mov
rolb
inc
inc
xor
mov
shrl
cmp
sbb
leave
inc
imul
ds
jne
adc
out
pushf
mov
adc
dec
mov
push
dec
jecxz
pop
cmp
jp
inc
and
or
mov
outsl
jle
js
data16
fucompp
clc
lahf
das
pop
jae
in
lahf
flds
cli
dec
js
fwait
imul
inc
pop
push
xor
mov
hlt
jl
jg
ljmp
into
in
test
jbe
xchg
test
test
sub
dec
push
es
mov
arpl
and
popf
pop
xor
pop
jno
sti
xor
mov
mov
stc
sub
inc
mov
in
roll
daa
iret
ret
jl
xor
das
lds
push
scas
mov
fcomi
and
jmp
out
add
adc
xchg
sarb
lcall
mov
enter
bound
cmpsl
inc
dec
push
xchg
xchg
fwait
add
xor
and
cmc
adc
mov
insb
lcall
push
cmp
xor
inc
inc
arpl
xor
dec
imul
stos
add
enter
rcll
xchg
cli
lcall
dec
pop
gs
mov
mov
movb
mov
outsl
lret
xor
sub
cmpsb
and
cmp
inc
ss
test
pop
out
or
add
aad
push
clc
fisttpll
mov
mov
push
push
add
xor
aad
add
xchg
xchg
pop
les
insb
bound
mov
cmp
lcall
gs
pop
fidivl
jbe
and
jmp
xor
pop
sti
call
xor
bnd
jae
sbb
sub
jecxz
push
hlt
jno
push
and
data16
lret
add
mov
push
or
loopne
rcrl
je
mov
outsb
cld
pop
cmp
pushf
lods
pop
xlat
clc
push
xor
sbb
lret
dec
popa
iret
mov
subl
mov
mov
or
sbb
mov
lret
shrl
fbstp
cmp
mov
and
pop
and
subb
mov
cmp
ret
addr16
sub
jmp
sbb
imul
mov
lret
push
imul
in
je
mov
cli
cli
mov
push
jecxz
cmp
jns
add
dec
sub
repnz
int
and
push
lock
daa
jb
push
iret
push
addl
cmpsl
ja
dec
xor
xlat
mov
cmc
xchg
div
jmp
sahf
pop
inc
outsb
pop
mov
pushf
and
dec
inc
add
cmp
popa
and
pop
repz
xchg
and
sbb
je
in
inc
sti
subl
ret
cli
mov
dec
jo
loope
fisubl
add
sub
jl
int3
jecxz
js
sahf
or
mov
sti
notl
fildll
loop
lds
xlat
pushf
push
cmp
push
sbb
or
sbb
outsl
jns,pn
dec
mov
les
jge
fiadds
test
jbe
push
pop
xchg
jnp
sub
inc
andl
xchg
stc
ret
or
jbe
arpl
call
inc
ds
pop
xor
pop
add
test
jmp
xchg
fimuls
xor
ljmp
rolb
subb
lret
movsl
scas
add
imul
leave
push
push
ficoml
lds
lret
gs
sub
ds
popf
lcall
add
jmp
lods
push
dec
out
in
inc
add
push
sti
mov
xlat
mov
iret
dec
pop
popf
xor
outsl
push
scas
mov
int
ja
dec
insl
add
negl
sbb
add
insl
rorb
and
std
sub
and
mov
mov
mov
pop
jp,pn
cmp
mov
jne
inc
data16
jl
mov
out
jne
inc
mov
adc
lahf
fwait
xchg
movsb
or
lret
movb
xchg
sti
out
push
hlt
lcall
push
enter
fidivrl
cmp
ljmp
fiaddl
cmpsb
loopne
sbb
sti
sti
sub
scas
wrssd
xchg
cpuid
std
lahf
dec
es
mov
pop
ffreep
fwait
cwtl
sub
shl
mov
scas
out
lea
fdivrp
add
mov
shll
fistl
jmp
je
fildl
mov
dec
xor
orb
jmp
arpl
and
sbb
icebp
mov
inc
pop
cli
cmp
mov
push
shll
add
gs
jae
cmpsl
movsb
jl
movq
mov
call
push
jmp
test
add
fisubrl
ds
mov
mov
ja
mov
and
push
out
jle
jecxz
std
sub
mov
out
pop
add
xor
push
cmp
inc
cmpsb
nop
into
pushf
mov
cmp
xlat
rolb
sub
mov
test
adc
rcr
inc
in
fistpl
mov
out
fimuls
js
mov
sub
bound
dec
pop
pop
addl
and
addb
std
jmp
xchg
cmp
gs
sub
aad
shrb
lods
mov
dec
mov
jl
repnz
loope
cmp
push
mov
xor
push
xor
lahf
pop
lods
jns
xchg
jge
das
mov
out
cli
dec
sub
nop
sub
mov
cmp
inc
les
push
sub
push
sbb
int3
or
sub
jle
adc
mov
and
shl
inc
add
bound
cltd
hlt
ds
cmp
push
mov
pop
pop
pop
dec
out
lret
rorb
hlt
push
inc
mov
adc
rcl
mov
in
push
popf
cs
add
fsubs
sarw
cmp
push
or
mov
cld
ss
dec
add
add
sbb
and
sub
std
mov
ret
nop
jge
mov
int3
mov
icebp
push
xchg
pmaxub
push
mov
shll
int3
push
jp
pop
push
aas
and
dec
outsl
xor
jnp
arpl
lods
sarb
cwtl
xchg
lret
jle
pop
cmpl
mov
repz
repnz
insl
cmp
ljmp
mov
mov
loop
adc
dec
mov
pop
and
or
jbe
rorb
pusha
pop
subl
outsb
mov
mov
adc
movsb
ret
ret
jmp
inc
imul
outsb
inc
fstl
pop
rep
xchg
pop
push
lahf
idivl
out
sarb
push
stos
adc
rcrl
cwtl
rcll
in
add
jbe
adc
mov
mov
mov
adc
repz
ljmp
gs
push
push
push
mov
mov
loope
push
inc
xchg
in
cwtl
sbb
addr16
adc
jbe
push
cmpsb
push
test
jae
pop
and
or
xchg
add
mov
push
mov
popa
sbb
mov
dec
loopne
stos
jo
icebp
jecxz
popf
push
dec
es
sbb
dec
loop
push
inc
rcll
or
push
das
add
mov
add
stos
cmp
les
mov
push
or
es
or
cs
dec
gs
fdivrl
xor
sbb
dec
push
cmp
into
enter
stos
aad
pusha
mov
inc
in
into
jnp
sahf
jl
jg
adc
psubusw
mov
mov
lahf
push
push
xor
pop
icebp
fs
bound
jns
loope
out
fcmovb
cmp
dec
add
cmp
push
popf
nop
stos
push
and
and
adc
popf
inc
push
push
inc
jle
sbb
pop
pop
loope
jne
popf
push
dec
iret
rorl
push
xor
push
xor
incb
ficomps
hlt
insb
jb
dec
push
in
xlat
test
push
jo,pn
push
pop
inc
xchg
sbb
test
jge
data16
dec
sarl
out
mov
inc
mov
push
call
inc
cltd
sbb
sub
sahf
rorl
into
xor
add
xchg
cld
daa
lret
int
pop
jno
movsb
ret
sub
sti
mov
lock
push
or
imul
jg
popf
jmp
inc
popf
sub
cltd
mov
inc
mov
jae
adc
xor
fldl
mov
inc
stc
stc
pushl
inc
in
sbb
test
fisubrs
push
addr16
rolb
xor
push
jmp
cmpsb
insb
inc
jne
imul
mov
or
enter
pop
pop
adc
mov
in
sub
dec
pop
push
jae
push
cltd
adc
mov
movsb
test
adc
pop
fs
adc
fwait
daa
loope
testl
mov
addl
lods
or
movsl
outsb
leave
inc
stos
jno
movsb
fidivl
jne
mov
push
cs
ja
inc
stos
cmpsb
divb
shll
pop
imul
scas
mov
fs
les
xor
xchg
or
jmp
out
push
sub
sbb
aaa
or
pop
imul
or
dec
mov
pop
aas
lds
lcall
stos
out
mov
add
xorb
dec
add
loope
pop
sbb
in
mov
fnstsw
mov
cmp
repnz
mov
es
mov
std
xlat
jp
movsl
jne
push
in
es
mov
addr16
icebp
js
pop
in
bound
adc
sti
sub
in
xchg
popf
call
adc
cwtl
movsb
cmp
out
fstpl
xchg
testb
mov
out
sti
bound
movsl
adc
stc
mov
cmpl
loope
jbe
aam
cmp
jmp
cld
roll
mov
mov
fwait
mov
cmc
cli
ja
mov
add
out
popa
repnz
lea
cmpsl
jg
dec
pop
popf
ja
test
sbb
or
outsb
sbb
lods
pop
jae
rcrb
xor
stos
or
jl
iret
pop
addl
jbe
sbb
adc
add
xlat
je
mov
lds
sti
ljmp
stos
sbb
cmp
xchg
adc
lds
pushf
rorb
sub
aas
aad
pushf
hlt
sbb
cld
dec
es
and
pop
mov
cmpsl
ror
cld
mov
shrb
mov
jb
pushf
lods
rclb
loop
movsl
xor
dec
mov
imul
fsubs
test
loopne
int3
fwait
int3
fwait
scas
pop
test
mov
dec
loopne
and
dec
iret
and
cmp
ret
insb
mov
fidivrs
mov
mov
adc
leave
sub
jg
fwait
mov
inc
mov
xchg
sub
outsl
push
fs
adc
pop
icebp
adc
repnz
arpl
stos
pop
mov
and
xor
das
rcr
adc
jg
add
jnp
lret
cltd
pop
and
xor
inc
mov
mov
aas
pop
lock
loope
das
fs
fstps
sbb
enter
xabort
pushf
pop
iret
cwtl
nop
inc
loop
mov
ds
xor
xchg
les
loop
stc
dec
imul
cmp
mov
or
insl
ss
adc
xchg
aas
mov
ret
cmp
rol
add
enter
or
clc
call
mov
clc
out
lahf
cmp
or
mov
scas
popf
mov
inc
in
jne
movsb
lret
loope
fmull
sub
and
or
add
mov
xchg
das
les
jae
or
pop
xor
dec
xchg
fldt
fs
or
add
js
adc
mov
jge
dec
outsl
sbb
insl
mov
xorb
push
mov
jne
xchg
pushf
dec
lods
inc
jmp
xor
jl
dec
pop
fbstp
pop
insl
cld
aas
aas
cmp
cld
jno
lds
mov
push
outsl
jge
mov
mov
add
rolb
ficoms
push
stc
fs
aaa
xchg
push
adc
jecxz
dec
mov
negl
lods
push
xor
mov
cmc
dec
jecxz
lods
pop
and
cmp
push
add
je
dec
insb
add
movsb
or
sub
data16
test
int
xchg
lods
jb
inc
aad
dec
xchg
dec
cmpsb
mov
lock
hlt
das
sbb
sbb
mov
call
mov
jg
cwtl
mov
stos
mov
cmp
sbb
je
push
es
cmp
out
cmp
xchg
xor
or
push
stos
shll
adc
data16
stos
ja
inc
movsl
and
inc
ds
jae
js
xchg
push
xchg
aas
and
or
sub
hlt
faddp
adc
jle
or
or
ret
jb
div
and
mov
jp
cli
and
adc
insb
dec
cmc
mov
aam
dec
mov
or
mov
and
adc
bound
cmp
mov
push
lods
xor
mov
cld
push
lods
mov
dec
test
pop
cmp
inc
out
fs
xchg
ja
les
testb
sbb
sbb
mov
jge
adc
inc
push
push
pop
sub
jmp
jo
push
testl
out
inc
or
xchg
xor
das
loope
sub
mov
fadds
xchg
dec
out
dec
popa
push
adc
test
mov
xchg
fisubrl
sbb
test
jo
and
or
cltd
push
jno
aam
std
psraw
adc
xchg
jmp
cld
cwtl
out
shl
sbb
lock
push
pop
inc
add
mov
inc
adc
push
xchg
stos
stos
gs
pop
and
push
rcll
lahf
bound
mov
or
mov
sub
or
outsb
pop
cmpsb
add
je
dec
xor
or
shrl
in
inc
cwtl
in
mov
xchg
mov
ss
leave
jnp
mov
cmp
test
pushf
dec
div
std
mov
cmp
movsl
lcall
fnstsw
sub
test
or
xor
es
test
mov
fmuls
cmpsl
ds
adcb
dec
pop
jg
popf
xor
mov
mov
xchg
and
inc
sbb
popa
cltd
cmp
lret
cmpsb
mov
push
ljmp
jne
jo
dec
in
xchg
es
jns
ljmp
int3
sbbl
imul
jmp
dec
lcall
data16
ss
xchg
push
ljmp
jno
shufps
xor
loope
subl
pop
or
loope
pop
adc
lods
fs
xchg
into
and
pushl
inc
fistl
cmp
icebp
mov
les
imulb
movsb
cmp
jno
xor
dec
pushf
push
mov
test
mov
fcoms
cmc
mov
int
sub
xchg
dec
jmp
jle
xor
out
or
cmp
daa
mov
lea
fdivl
and
xchg
arpl
movb
inc
xor
sbbl
xchg
lahf
ss
test
jle
lea
lcall
and
jg
cld
xchg
outsb
mov
cmpsb
cmp
and
js
add
es
pop
lahf
pop
repz
mov
fcompl
add
es
pusha
nop
fidivl
addl
add
aaa
mov
jno
or
int3
jb
jnp
in
mov
pop
into
pusha
div
cmp
popa
sbb
cmpsl
mov
fdivrl
mov
test
popa
or
movsl
xor
fidivs
fucomp
jg
scas
xchg
push
cli
pop
cmc
and
lods
inc
out
jle
test
clc
lahf
push
mov
sbb
dec
adc
cwtl
sahf
xor
mov
mov
xchg
sub
xor
pop
cmc
add
lea
cli
xchg
pop
scas
inc
jle
jne
clc
xchg
repz
add
dec
popf
push
lods
outsl
daa
mov
and
mov
jl
mov
pop
pusha
inc
xlat
cltd
call
loopne
in
ret
push
inc
fdivrs
mov
xchg
mov
flds
cwtl
in
mov
inc
jg
cltd
test
sbbb
leave
cs
cs
inc
fimull
pop
inc
insl
stc
xchg
popa
stc
lcall
push
in
jg
dec
push
jg
inc
insb
xchg
xchg
popa
jle
fwait
mov
mov
in
jnp
dec
push
sti
xchg
inc
insb
stos
inc
xchg
popa
stos
inc
fwait
mov
dec
icebp
mov
iret
dec
push
iret
inc
insl
mov
xchg
popa
ss
mov
jmp
in
jae
cmp
pop
lcall
test
outsl
push
out
inc
dec
sub
ja
scas
inc
mov
inc
loop
mov
and
and
rcrb
or
adc
pop
icebp
insl
mov
popa
mov
lret
bound
ficompl
mov
das
pop
pop
and
push
pop
jp
movsb
jg
mov
dec
fwait
xor
and
imul
decb
std
xchg
movsl
outsb
ljmp
mov
stc
pop
add
out
jp
mov
mov
cmp
test
in
dec
hlt
stc
cs
inc
xchg
push
xor
mov
mov
lahf
dec
notl
dec
xchg
push
and
out
scas
push
call
aaa
cli
mov
out
inc
mov
mov
mov
inc
fisubrs
std
cmp
and
inc
mov
shll
and
sub
and
js
pop
lock
mov
ret
cmp
jecxz
push
sbb
test
jmp
dec
stc
jae
aaa
into
mov
sub
lret
rcrb
pop
das
es
aaa
mov
jo
and
mov
ret
cld
out
dec
loopne
push
lods
inc
dec
cmp
popa
xchg
test
pop
mov
loopne
stc
sbb
lret
bound
fsubl
sub
xchg
mov
add
shll
les
and
xchg
jp
cld
movsb
mov
inc
lock
mov
jb
and
add
mov
xor
les
mov
adc
mov
and
ds
push
in
inc
pop
lods
inc
mov
cmp
mov
insb
add
arpl
xor
push
push
cmp
mov
mov
or
cmc
pushf
xor
dec
sub
jne
and
shrb
inc
sub
mov
jp
inc
lods
inc
jg
insb
add
lahf
arpl
in
jp
call
sub
jns
mov
sbb
mov
mov
mov
jl
dec
jecxz
popf
lods
inc
jnp
cmp
rolb
cwtl
or
pop
sub
pusha
xchg
insl
mov
int
mov
ficompl
xchg
push
xor
cwtl
push
mov
rol
in
repnz
je
adc
hlt
inc
cmp
push
xchg
xchg
cmc
mov
mov
dec
in
outsl
push
and
in
xor
jo
push
insl
test
cmc
mov
in
mov
cmp
add
test
cmp
pop
add
lds
push
push
jmp
jg
push
lods
movsl
jbe
ror
mov
cli
xrelease
sub
pop
dec
dec
movsb
cmp
shlb
lahf
mov
fwait
ljmp
lods
cmp
lock
cmp
xchg
or
out
lret
adc
dec
in
xor
ja
mov
lcall
cld
test
das
addr16
loop
jnp
scas
inc
mov
pop
or
adc
pop
inc
xor
xorb
mov
pop
in
rcr
or
add
imul
xor
or
sub
lret
enter
cmp
and
fsubs
mov
jo
pop
out
mov
in
ret
fildll
add
adc
pop
inc
inc
in
jne
inc
stos
lods
outsl
stc
rol
aam
cld
std
jnp
and
add
and
mov
sub
test
add
cmp
push
outsl
clc
mov
jge
jbe
sub
mov
dec
mov
jge
lcall
out
cmp
in
jb
aaa
mov
movsb
outsb
xchg
jbe
xorb
mov
shll
push
es
pop
and
push
stos
jno
fs
nop
ss
loopne
xchg
and
and
jno
icebp
xchg
popf
lahf
push
hlt
shll
and
add
fiaddl
stos
dec
push
js
repnz
loopw
movsb
test
pop
mov
push
add
mov
mov
cs
lret
add
cmp
ljmp
jp
mov
adc
or
sub
pop
ret
jo
stos
lock
sbb
iret
xor
and
pop
dec
pop
xlat
subb
popf
xorb
ljmp
adc
ss
in
arpl
adc
pop
adc
inc
and
push
xchg
xchg
sti
jle
mov
push
faddp
jmp
pop
sub
pop
mov
jge
inc
lock
cmp
rclb
je
inc
out
in
xchg
pop
and
jne
aam
out
push
ffreep
sbb
scas
xor
dec
jmp
push
cmp
subl
adc
int
dec
add
fstps
cwtl
mov
int3
scas
loop
fucomi
lods
cmp
cmc
sti
xchg
inc
mov
mov
xchg
int3
pop
iret
mov
lock
and
pop
out
push
sti
xorl
pop
pushf
cmpsl
fwait
and
cmc
adc
aas
aaa
and
mov
adcb
cmp
rcll
add
xor
push
jp
or
int
daa
enter
sbb
sub
lahf
insl
andb
mov
ds
outsb
sub
bound
pop
fnstenv
dec
out
sub
test
pop
mov
mov
lods
adc
jbe
aad
dec
incb
xchg
test
je
pop
push
loop
test
jg
mov
and
imul
jecxz
loop
pop
sub
jg
adc
pop
jnp
adc
mov
int3
xchg
sub
ret
mov
or
sti
xchg
bound
leave
pusha
pop
sbbl
mov
jmp
rolb
rorb
mov
pop
and
ret
jnp
lods
jbe
call
dec
imul
and
push
push
sbb
popa
movsl
outsb
mov
mov
shr
repz
rorb
cmp
or
fbstp
mov
mov
cmp
or
xchg
pop
insl
mov
popa
out
hlt
mov
or
cmpb
adc
mov
movb
dec
loopne
incl
xor
outsl
push
sub
pop
hlt
orl
jg
jae
mov
rcrl
stc
nop
es
mov
jns,pn
sbb
dec
lret
out
mov
push
inc
fnstenv
cmp
mov
mov
test
cmpsb
mov
adc
stc
pop
xor
mov
dec
loop
fstl
push
lea
mov
loopne
and
fisttps
inc
bound
scas
inc
pop
adc
les
addr16
in
pushf
sub
add
cmpsl
cmp
mov
shrl
xchg
or
mov
out
jecxz
je
cmpsl
ds
xchg
icebp
mov
fcomps
mov
into
jecxz
adc
das
cmp
repnz
pop
bnd
and
in
xor
xlat
add
arpl
push
cmpsb
cmp
les
ja
shrb
cwtl
in
adc
repz
mov
adc
push
scas
lods
inc
popa
jae
xor
test
data16
mov
lea
add
xchg
aaa
push
adc
xchg
xchg
sub
ljmp
dec
dec
pop
out
jo
arpl
mov
xchg
aad
xchg
sub
adc
inc
xlat
pop
or
int3
jge
jmp
in
lret
bound
mov
push
popf
xor
jl
adc
mov
and
lahf
xchg
shrl
inc
shrl
in
push
cli
es
out
fidivrl
mov
arpl
ljmp
ret
rep
insl
adcb
pop
inc
testl
jg
dec
cmp
rcrl
pop
mov
lea
ss
add
je
cwtl
and
push
int3
adcl
loopne
icebp
xor
and
out
mov
icebp
aad
mov
push
out
cmpsb
in
jno
enter
aas
clc
jno
nop
daa
lea
popa
clc
js
cmpsl
lods
adc
aas
dec
xor
lock
push
push
call
or
mov
or
inc
pop
sub
lea
popa
xchg
scas
dec
loopne
mov
jle
add
add
mov
test
outsl
mov
shrl
cli
xchg
sub
xchg
sub
mov
jmp
lret
add
sbb
in
test
stos
mov
fisttpll
je
xor
add
dec
test
shrl
lods
xor
fisttpll
push
lahf
sub
and
dec
mov
pop
jmp
push
pop
inc
jle
adc
lods
repz
adc
daa
push
push
mov
dec
in
sbb
push
pop
arpl
xor
xlat
hlt
bound
cmp
data16
test
jp
mov
dec
cmc
mov
into
mov
dec
fdivrs
loop
and
into
out
pop
jnp
jnp
pusha
jg
mov
scas
and
push
cs
outsb
mov
mov
mov
imul
sub
cmp
sbb
xor
mov
mov
xchg
adc
ret
jne
fcomip
fistpll
xor
push
hlt
and
mov
jno
and
call
push
in
stc
clc
mov
jge
das
sbb
xchg
xor
fwait
pop
adc
push
test
mov
inc
sbb
cltd
sub
fcomp
and
add
orb
xchg
lret
fdivl
mov
call
test
jo
pushf
ret
hlt
fisttps
push
adc
repnz
mov
pop
sub
shrl
pop
jecxz
dec
pop
pop
repz
mov
lcall
and
dec
cli
jl
shrb
push
in
inc
insl
stc
pop
insl
repnz
mov
push
out
mov
icebp
inc
inc
mov
insl
pushf
xor
jge
mov
or
test
xchg
sbb
pop
scas
xor
mov
cmp
lret
inc
lods
stc
sbb
pusha
jb
push
pop
xchg
add
dec
mov
cmp
pop
xor
out
lods
pop
popa
clc
mov
push
popf
xlat
and
cmp
shrl
ret
inc
fisttpll
mov
imul
stc
pop
sub
push
je
mov
dec
mov
sti
ljmp
dec
pop
jnp
sbb
inc
xchg
popa
clc
ret
test
mov
jmp
popf
sbb
pop
scas
call
jmp
stos
fisttpl
adc
sbb
adc
push
push
lods
dec
and
mov
adc
adc
loope
outsl
push
or
mov
shlb
mov
call
jmp
test
mov
mov
roll
popf
add
adc
cmp
or
cmpsb
je
lods
data16
js
and
pop
fwait
adc
stos
dec
and
idivb
adc
push
scas
and
stos
and
lods
xchg
ret
mov
mov
push
and
lods
mov
stc
and
test
inc
mov
adc
xchg
lret
mov
mov
sbb
test
and
lods
xchg
arpl
mov
rclb
icebp
and
xor
lds
rcrb
mov
jne
jp
inc
insl
or
mov
arpl
mov
out
test
mov
fimuls
add
xor
mov
pop
stc
nop
cmp
imul
into
gs
cmp
and
fidivs
aad
push
xchg
jns
leave
add
push
mov
jbe
push
imul
mov
cmc
mov
xchg
adc
stc
nop
adc
clc
inc
cmp
xor
cli
xchg
shlb
jne
in
outsb
add
insl
sbb
push
mov
int
aas
mov
mov
pop
cmc
pop
xor
cld
cmpsb
jno
nop
mov
int
xor
dec
sbb
rorl
jge
cli
fnsave
aad
ljmp
push
ficompl
push
mov
sbb
push
cltd
leave
cld
xchg
mov
mov
cli
xchg
cmp
push
popf
xor
fnstsw
ror
mov
shl
adc
rolb
sarl
mov
jns
mov
mov
and
mov
aam
inc
pop
cmc
js
cmp
jle
stc
nop
lds
aam
in
sahf
xor
popa
cmp
shrb
cmp
push
test
jne
xchg
inc
flds
dec
cmp
cmp
push
mov
cmp
fisubrl
lods
ds
fistps
punpcklwd
push
daa
stc
nop
pop
xchg
cmp
movsb
push
sub
dec
into
cmp
add
fidivs
pop
sub
dec
jbe
adc
ret
hlt
push
sub
inc
push
mov
aad
jns
hlt
test
sar
repz
aam
sbb
lret
adc
aad
sahf
xor
aad
adc
aad
fwait
xor
lods
adc
aad
fwait
xor
sbb
lret
cmp
jno
cmp
mov
lods
fidivl
aam
adc
dec
ja
cmp
sbb
popa
sub
stos
pushf
mov
inc
mov
stos
dec
loope
dec
sti
xchg
xchg
dec
jmp
cmp
sub
rclb
sub
sarl
jae
adc
jnp
int3
aam
add
out
mov
adc
stos
xchg
push
xchg
aam
aas
mov
cmp
xor
xchg
push
fsub
jge
inc
pushf
xor
lods
cmp
in
and
mov
mov
jp
xchg
das
pop
negb
fsubrp
adc
mov
xor
sub
mov
mov
pushf
xor
xor
mov
mov
fdivl
push
mov
dec
cli
jnp
sub
inc
sbb
jne
repnz
popf
mov
xor
call
xor
nop
xor
xchg
addr16
je
pushf
xor
pop
jb
js
cmp
sbb
sbb
jae
insl
fwait
xor
jnp
mov
sbb
adc
xor
mov
mov
test
jecxz
xor
xchg
push
sbb
mov
sub
cs
jae
test
pop
adc
add
cmp
pop
inc
or
stos
xor
adc
test
stos
sbb
push
mov
dec
mov
scas
inc
xor
dec
out
xor
adcb
cmpsl
adc
and
inc
sub
clc
xchg
mov
inc
sti
xchg
cs
insl
push
mov
out
xchg
cs
adc
mov
fwait
add
fnstenv
jne
mov
push
jg
inc
xchg
xchg
sub
sahf
cmp
mov
mov
xchg
jmp
add
mov
lea
fidivl
push
pop
mov
icebp
jge
and
sbb
in
mov
xchg
fninit
pop
icebp
adc
fdivl
cmp
xchg
insb
iret
cmp
mov
mov
cmp
or
lds
mov
jge
mov
aad
mov
pop
jg
dec
sub
gs
add
repnz
sar
repz
and
dec
cmpsb
add
xchg
pop
fnsave
fdivl
popl
lcall
jl
dec
mov
mov
hlt
jg
out
mov
in
sbb
or
mov
test
shlb
sahf
sbb
dec
fldl
int
hlt
mov
xchg
sub
ret
mov
xor
imulb
imul
fstps
leave
or
stos
cmp
mov
mov
xchg
jno
scas
push
ljmp
hlt
mov
popfw
xor
inc
xchg
sub
jno
setle
rorb
cmc
inc
cli
shrl
test
jbe
pop
lock
jmp
xor
cld
mov
das
and
xchg
inc
push
ljmp
hlt
mov
add
jno
xchg
sub
inc
xor
jne
pop
icebp
push
popf
shrl
cwtl
mov
or
dec
gs
cmp
stos
data16
dec
ret
mov
std
and
push
ljmp
hlt
mov
dec
loopne
adcl
jp
xor
adc
loopne
cmp
push
sahf
xchg
adc
data16
inc
sar
xchg
add
fwait
xor
gs
out
ja
shll
iret
push
pop
repnz
sub
rorl
mov
pop
pop
hlt
ja
mov
sub
pop
repz
insb
pop
icebp
pop
fs
xchg
xchg
popf
xchg
sub
rcrb
sbb
dec
inc
xchg
sub
arpl
jb
xor
movsb
mov
xchg
sub
sbb
dec
sub
pushf
popa
xchg
sub
mov
dec
out
lcall
fs
test
sbb
cmp
sub
sub
stos
sub
xor
loope
xchg
xor
xchg
sub
outsb
add
push
mov
fisttpl
cmp
adc
pop
xorb
mov
mov
cmp
mov
sti
xchg
es
in
push
dec
pop
lods
jns
jne
pop
cltd
xor
leave
jnp
sub
mov
std
ds
insb
push
mov
mov
leave
adc
pop
pop
sbb
jnp
jne
out
aad
cltd
add
imul
sbb
aad
jbe
aas
test
pop
repz
leave
pop
sti
sbb
dec
sbb
jl
insb
cltd
xor
mov
and
inc
adc
inc
gs
mov
mov
jl
jmp
or
out
push
cmp
test
and
adc
xlat
lods
inc
enter
test
enter
mov
js
negl
sub
pushf
pusha
inc
std
xchg
je
and
rolb
iret
aaa
cli
cmp
in
inc
fidivl
cmpsb
jne
sbb
mov
push
mov
add
mov
push
mov
in
test
std
xchg
adc
fnstenv
push
inc
xlat
inc
mov
mov
rcrl
mov
cmc
jge
out
mov
and
cmpsl
adc
xchg
add
int3
arpl
sub
xchg
jmp
ds
sbb
mov
fnstenv
lret
inc
fnstcw
mov
sbb
lahf
int
push
fiadds
icebp
dec
adc
sub
sarl
xor
not
imul
sbb
xchg
mov
jo
leave
cmp
mov
mov
sbb
mov
movsb
cli
xchg
pop
mov
cmp
dec
push
xchg
cmp
cltd
xor
mov
push
pop
or
inc
fisttpl
adc
cld
movsb
cmpsl
xlat
inc
pop
lock
das
hlt
cli
xchg
out
xlat
outsb
jns
inc
fcmovnu
xchg
jo
ret
push
jle
sub
ret
cmp
push
std
xchg
inc
test
mov
sub
cmc
loopne
inc
adc
jp
ljmp
inc
fiaddl
cli
xchg
mov
mov
adc
sub
mov
stos
jge
sbb
sub
mov
xchg
and
aaa
into
pop
and
xchg
je
cmpsl
aam
adc
iret
addr16
incl
mov
jns
add
outsl
outsl
cmpsb
cmp
pusha
leave
inc
fdivr
jbe
adc
inc
cltd
mov
or
and
lret
sti
fistps
iret
adc
arpl
cmp
out
insl
imul
pop
sbb
call
add
xor
inc
mov
ss
sbb
xchg
sub
hlt
mov
es
hlt
mov
push
sub
orl
fisttpl
aas
rep
add
dec
or
cbtw
lods
inc
lret
rorl
in
loop
cmp
in
xorl
adc
pushf
mov
into
add
jl
call
mov
divl
lret
bound
mov
add
aad
mov
xorb
inc
bound
dec
loop
push
jb
dec
fsubr
orl
out
insl
and
and
mov
push
subl
xor
lret
bound
inc
xchg
aaa
sub
inc
push
in
aaa
je
mov
aaa
int
inc
incl
cmpsb
aaa
pop
dec
jecxz
inc
sbbb
jmp
xchg
dec
into
gs
dec
rcrl
sub
dec
push
mov
bound
mov
mov
mov
or
stos
inc
xchg
mov
mov
mov
dec
mov
mov
cmp
push
ds
mov
mov
scas
cmpsl
and
call
sti
pop
pushf
xor
test
rcr
fnsave
fnsave
mov
adc
lods
sbb
xor
daa
loope
decb
hlt
nop
std
es
mov
fidivs
clc
pop
lock
es
xor
pop
push
aam
jae
jge
or
push
es
inc
fcmovbe
jl
jno
icebp
mov
outsl
mov
lea
jo
test
add
xchg
or
cmp
inc
dec
out
cmp
ljmp
mov
jl
and
xchg
cltd
mov
iret
fsubr
or
ja
inc
nop
ret
call
push
in
test
sbb
aaa
jle
mov
xchg
jae
push
fs
pop
repz
cld
xchg
xor
xchg
pop
pop
fwait
xor
test
rcr
dec
das
cmp
cmp
jl
subb
mov
pusha
add
and
xchg
cs
dec
sub
cmp
insl
stos
loop
xor
ds
jo
testl
add
jl
sbb
push
lods
cmpsl
xor
mov
xlat
ret
pop
enter
mov
aad
repnz
pop
std
xchg
nop
xor
xchg
bound
fwait
xor
xlat
cmp
or
sub
cltd
jge
adc
enter
sub
xor
inc
jmp
dec
loope
jmp
in
test
in
outsl
push
filds
mov
xor
and
out
scas
inc
loopne
lret
fsts
stc
test
insb
jecxz
shl
ja
dec
jmp
jle
pop
cmc
test
fidivs
loope
bound
adc
test
insb
add
fsubrs
xchg
mov
dec
fildll
insl
cmp
push
push
jmp
mov
enter
mov
adc
sub
imul
fsubrl
xchg
int3
inc
push
lock
or
jne
lods
inc
movsb
test
aad
into
dec
loop
add
in
test
mov
imul
xchg
push
adc
mov
sub
bound
push
xchg
inc
push
insb
add
stos
or
loope
lods
inc
sub
movsl
cmp
inc
dec
loop
adc
in
add
rcrl
mov
mov
inc
jb
cltd
xor
pushf
dec
loop
sbb
stos
mov
in
adcl
popf
xor
aas
mov
jno
adc
lret
xor
in
bound
sbb
stos
mov
add
fdivp
mov
fwait
or
je
lods
inc
adc
cmp
xchg
sub
in
cmpl
mov
pop
dec
push
in
cmp
sub
pop
xor
gs
pop
scas
js
imul
dec
push
xsha1
cmpsb
dec
adc
repz
cltd
loope
mov
loop
sti
xchg
rorb
cmpb
in
xlat
pop
mov
mov
cmp
dec
jne
pop
jp
push
pop
jns
lea
mov
inc
xchg
sub
repnz
sbb
dec
pop
cmc
jge
push
in
push
xchg
stc
nop
enter
dec
loop
xor
add
cmp
jo
std
xchg
movsl
pushf
cmc
mov
aad
popa
call
inc
fdivrs
xor
pop
insb
mov
imul
mov
test
inc
jle
dec
mov
cld
xchg
cmc
fsts
or
aam
ljmp
rcr
jl
imul
into
aaa
into
shl
sub
add
dec
ja
xor
push
imul
hlt
lahf
sub
nopl
dec
lods
inc
inc
jp
jp
test
ret
test
or
mov
and
mov
jbe
les
inc
mov
xor
cmp
shrl
mov
iret
addr16
cltd
ljmp
sbb
pop
mov
nop
or
mov
adc
rcrl
mov
inc
test
test
sub
test
cmpsb
test
sub
and
and
jle
mov
insl
lds
les
rclb
ret
pop
insb
ss
out
addr16
sub
adc
ret
in
xchg
push
cmpsb
sub
sbb
and
popf
test
lds
popa
ret
cmp
jle
jae
les
jb
mov
fistl
add
insb
sub
xor
mov
test
clc
and
cmc
das
push
or
cmc
leave
test
dec
xor
xchg
xchg
aad
cmc
movsl
xor
xor
jne
in
xor
adc
push
push
popa
test
or
movsb
ds
xchg
sbb
or
lock
ss
out
mov
mov
loope
loop
mov
fidivs
shrl
stos
les
hlt
push
cmpsb
ret
jge
and
push
jmp
lret
xchg
outsb
je
and
adc
or
outsb
repz
cmc
and
je
jns
adc
cs
xchg
lret
daa
add
fldenv
js
mov
inc
pop
xchg
adcl
adc
sub
and
sbb
sub
dec
inc
ss
cmp
jae
ret
pop
aas
arpl
or
lock
rcrb
les
movsl
push
repz
jg
mov
xchg
and
xchg
jle
inc
mov
sub
sbb
dec
lret
mov
mov
mov
push
leave
mov
push
rcr
mov
wrmsr
into
sub
jmp
mov
jecxz
xor
pop
mov
or
pop
je
xor
lds
dec
cmp
mov
and
lcall
repnz
jae
inc
rcr
or
rcr
push
int3
xchg
mov
jge
mov
push
cli
sub
and
repz
inc
mov
lret
ret
stos
loop
and
jno
inc
jmp
inc
adc
pop
jmp
xchg
sbb
mov
push
loop
mov
aaa
lods
lret
repz
push
dec
mov
repz
imul
mov
jns
and
test
inc
pop
out
sub
enter
jbe
jle
out
sbbl
mov
and
and
ja
dec
in
cwtl
mov
add
jmp
push
sbb
fdivl
push
test
fcoml
leave
pusha
das
in
scas
push
push
out
xorl
int
movsb
add
jmp
mulb
mov
push
stc
lret
bound
ja
sub
lret
cld
lahf
pop
sahf
rcrb
and
test
jge
cltd
scas
push
arpl
aas
iret
and
xchg
and
aad
mov
xor
pop
jb
mov
adc
loopne
xor
in
nop
daa
xor
push
out
push
scas
call
inc
inc
sahf
js
fsts
xchg
inc
sub
inc
pop
popa
push
mov
jg
arpl
outsl
and
mov
adc
loope
xor
loope
nop
daa
xor
push
out
push
scas
jmp
push
test
scas
fnstcw
jne
jno
xor
sub
dec
push
ljmp
pushf
xor
imul
mov
and
dec
pop
out
jns
test
or
xchg
in
adc
push
mov
xor
jno
add
out
pop
and
push
mov
fsub
aaa
mov
imul
sub
mov
enter
or
cmp
lcall
xchg
cmp
mov
int
fists
cli
xlat
pop
sbb
frstor
aad
insb
xchg
push
fldl
repz
fs
pop
cmpsb
cmpsb
dec
out
pop
in
adc
jge
mov
fstpl
aam
xor
repnz
adc
cmc
mov
xchg
xchg
cs
sub
stos
pop
ljmp
scas
cmp
dec
out
xchg
icebp
mov
and
push
in
cmpsb
adc
ss
inc
cli
mov
mov
fisubrl
or
out
mov
ret
repz
inc
rol
pop
add
es
pop
mov
call
xor
sbb
loope
shll
or
xchg
popa
adc
out
dec
sahf
sbb
das
and
imull
mov
xchg
bound
pushf
and
push
sub
adc
dec
sub
lods
mov
das
nop
repnz
stos
push
inc
mov
add
xlat
sub
rclb
ficomps
add
xchg
test
sub
test
int3
sub
dec
cwtl
pop
je
xor
jmp
sub
adc
out
hlt
jl
imul
and
sti
cmp
push
mov
push
mov
push
icebp
cwtl
outsb
into
lahf
push
xor
pop
popf
pop
fstpl
int
push
outsb
mov
fnsave
adc
jg
jecxz
xchg
adc
add
scas
push
mov
fsts
push
pop
pop
testb
jnp
faddl
xor
fdivl
dec
jg
shrl
pushf
aad
iret
mov
gs
cmc
mov
cli
in
xchg
cmp
stos
imul
lret
sub
lret
fstl
or
xor
arpl
push
jno
xchg
sub
aam
dec
push
out
inc
sbb
mov
adc
mov
insb
adc
iret
inc
mov
and
jae
andb
iret
lock
stc
pop
jbe
adc
imul
push
test
pop
xchg
in
inc
pop
mov
mov
xchg
in
les
test
inc
sub
in
jecxz
shl
repz
sti
push
jmp
push
sub
in
cmp
adc
clc
inc
je
mov
aas
cmp
jmp
and
js
pop
je
xchg
xor
addr16
pop
mov
xor
pop
push
jnp
sbb
imul
push
jmp
shlb
pop
ss
popa
subb
dec
push
test
xchg
out
xor
sbb
lret
cmp
push
gs
imul
or
inc
pop
and
dec
sub
loope
mov
cmp
mov
mov
sbb
push
xchg
cmp
pushf
or
out
jge
xor
sbb
push
adcb
pop
inc
jmp
sar
cwtl
mov
stos
xchg
imul
sbb
test
and
mov
jns
pop
jno
je
jo
dec
clc
add
cmc
lods
mov
jb
cmpsl
rcrb
pop
jecxz
popf
and
loope
add
fcoms
test
cmp
std
cmp
and
lret
inc
dec
lcall
cmpsb
sbb
or
mov
and
ljmp
aam
mov
in
in
add
call
xor
orb
xchg
mov
pop
add
and
sbb
outsb
stos
inc
cmp
fsubs
or
mov
mov
xchg
arpl
adc
roll
stos
sub
bound
jecxz
sbb
push
repnz
aam
clc
or
and
mov
push
push
lahf
bound
adc
test
cmp
test
out
fnstsw
fwait
inc
mov
push
imull
rcr
cmp
sarl
insb
sbb
mov
out
pop
mov
leavew
xor
mov
fs
pop
cld
xchg
and
daa
xchg
pop
stos
ret
nop
adc
push
data16
fnstenv
data16
stos
pop
data16
mov
mov
xchg
inc
pop
shrb
negl
aam
stc
mov
shlb
xchg
jno
and
mov
clc
pop
pop
or
ja
loopne
subb
fstp
push
test
dec
daa
jmp
jbe
shll
push
call
lret
jne
cmp
fistl
pop
cli
push
lea
lret
sub
ds
jmp
pusha
call
jbe
push
mov
jns
and
test
lea
mov
dec
jb
into
int3
bound
imul
sub
mov
jo
out
ss
insl
dec
js
idiv
sbb
mov
inc
rorl
mov
mov
pop
std
call
pop
fcompl
push
xchg
outsl
ljmp
cmp
push
or
insb
out
pop
arpl
pop
add
faddl
fwait
stos
sbb
insb
std
lea
adc
mov
add
push
ja
loop
cmp
sbb
jnp
sub
jnp
stos
cmpl
xor
adc
fs
jo
push
inc
jp
mov
mov
sub
push
xor
and
xchg
push
inc
adc
pop
and
cwtl
lods
cmp
clc
cld
xor
pushf
clc
popf
andl
push
movsb
adc
push
pop
nop
push
inc
push
mov
in
imul
inc
mov
pop
mov
clc
inc
lret
cmpsl
mov
sbb
ljmp
push
mov
xor
push
out
sub
add
shll
lods
xor
mulb
xor
xchg
mov
sub
scas
mov
in
pop
std
mov
mov
clc
xlat
push
aas
push
mov
add
aaa
push
adc
les
xchg
mov
inc
inc
adc
les
adc
popf
cmp
dec
test
xor
in
push
leave
jle
inc
mov
adc
and
insl
scas
daa
or
mov
ficomps
sub
outsb
out
push
xchg
sub
lds
adc
cmpxchg
mov
add
fstpt
inc
loopne
scas
cmp
cmpsl
mov
fsubs
sub
mov
sti
fdivrl
mov
cmp
daa
dec
mov
ret
cmp
dec
sbb
jbe
fsubs
imul
dec
mov
dec
mov
into
or
jmp
pop
inc
pop
add
push
sbb
sub
adcl
dec
int3
shlb
jo
mov
in
pop
dec
fwait
mov
pop
cmpsb
xchg
or
adc
mov
cli
test
cmpsb
adc
movsl
push
cltd
mov
fwait
mov
sbbb
pop
jmp
and
decl
in
adc
ja
mov
or
pop
inc
jmp
push
rcr
icebp
mov
mov
jns
and
fwait
inc
es
and
outsb
pop
mov
mov
xor
dec
repz
mov
dec
mov
insw
add
sub
cmp
lods
jo
mov
mov
add
jl
movsl
outsb
insb
or
repnz
mov
cmp
into
popa
ret
and
mov
dec
pop
out
push
and
adc
jp
sub
push
in
loopne
fbstp
lahf
sub
in
adc
xor
cwtl
outsb
rcll
in
insb
mov
clc
adc
mov
aam
out
scas
loopne
sub
inc
scas
sbb
js
andb
mov
lods
inc
push
inc
jmp
push
pushf
cmp
int3
push
mov
push
sub
arpl
stc
sbb
fisttps
testb
sbb
mov
dec
mov
aas
jecxz
or
jp
popa
sub
lcall
cmp
repnz
and
rclb
dec
in
jge
jne
cwtl
insb
add
fistps
mov
fs
mov
mov
inc
fdivr
fdiv
mov
sbb
sub
cmp
lcall
pop
out
jns
or
pop
pop
repz
jp
cli
scas
or
rcrb
mov
xor
xor
fistpl
xor
fildl
leave
rorb
xor
out
xchg
push
shll
movsl
and
or
hlt
inc
sahf
and
adc
ss
in
jno
enter
add
fisttpl
add
pusha
imul
out
aam
jnp
adc
pusha
inc
daa
add
xchg
jns
mov
mov
pushf
out
ds
or
cmp
inc
lods
pusha
neg
ret
hlt
jle
xor
mov
xor
movsb
mov
mov
neg
outsl
sub
adc
jl
xor
movsb
stc
popf
mov
jne
xchg
jmp
test
test
mov
add
int
push
repnz
adc
push
jecxz
and
in
fsin
shll
cli
je
cs
ljmp
cmp
jp
cmp
jecxz
sub
ja
mov
pop
addr16
iret
leave
rorl
push
mov
mov
out
pop
sub
rcrb
shrb
jno
dec
mov
aam
imulb
popf
pop
repz
push
out
push
test
adc
inc
mov
lea
mov
inc
call
or
popa
cmp
call
inc
cmp
pop
mov
and
jl
push
inc
fiaddl
popa
clc
xlat
push
and
sub
xor
negb
daa
lahf
mov
adc
fnstenv
pushf
cltd
xor
inc
negl
in
push
dec
dec
fbstp
scas
cld
inc
cmp
into
dec
xchg
pop
repnz
in
mov
ret
mov
xlat
outsb
pop
aad
mov
movsb
test
mov
mov
dec
fnsave
pop
lock
xchg
push
sahf
lcall
xor
and
les
mov
inc
fcoms
ss
outsb
jmp
sbbb
cld
call
sbb
adc
in
xor
adc
gs
movsl
addr16
jmp
mov
fnstcw
lret
cld
pop
sub
leave
in
cmp
cmp
jno
dec
loope
xchg
cmp
add
ret
lods
and
mov
mov
shrb
adc
push
dec
aad
cmp
and
dec
ret
adc
mov
out
ljmp
pusha
leave
adc
pop
negb
inc
mov
sub
sbb
adcb
in
mov
mov
jae
hlt
cmpsb
cmp
scas
pop
fidivl
dec
shlb
lcall
pop
sub
sbb
inc
mov
and
lds
jnp
fcoms
outsb
test
insl
add
and
pop
push
or
test
sub
xchg
cs
int
push
xor
xor
lds
mov
cmp
jmp
je
rclb
sbbb
cld
movsl
cmp
in
inc
xlat
sub
pop
testb
mov
jnp
xor
xor
mov
sub
mov
fidivl
loope
in
ss
adc
je
ljmp
test
mov
sbb
adc
push
lret
cli
xchg
mov
fistpll
rcl
inc
fmuls
mov
in
shrl
push
icebp
mov
push
call
or
bound
std
xchg
sahf
cli
sub
sbb
fsubrs
mov
sub
les
aas
bound
mov
nop
or
cltd
jp
sti
xchg
pop
fwait
mov
enter
mov
ret
mov
dec
loopne
aam
hlt
lds
mov
xlat
pop
mov
leave
jmp
or
cltd
jnp
fidivl
pushf
dec
jecxz
push
fldt
inc
ret
shr
mov
sub
movb
into
push
add
aaa
cli
mov
in
fnstsw
ja
push
add
xor
mov
enter
push
mov
adc
movsb
mov
jns
pop
fadds
cltd
leave
mov
out
lods
inc
fcoml
adcb
jo
lahf
adc
xorl
repnz
inc
fstpt
xor
scas
inc
or
test
pop
out
fisttpl
int3
test
imul
inc
pop
icebp
sub
jge
adc
xor
pop
and
lcall
stos
call
mov
jg
inc
cmpsb
ficomps
iret
dec
test
jl
stc
nop
loop
xlat
outsb
inc
add
xchg
jne
popf
xor
xchg
xchg
or
cmp
add
mov
je
mov
jg
mov
dec
cmp
xchg
push
sub
ljmp
mov
sar
das
sub
or
hlt
mov
test
mov
inc
fdivs
cmp
lcall
into
push
add
lds
jnp
push
insl
sarl
or
fidivl
and
xchg
addb
pop
push
lods
mov
int3
cmp
mov
testb
push
bound
mov
xor
shrb
mov
seto
lds
movsl
shrb
and
xchg
jp
jg
mov
xor
dec
testb
sbb
dec
cld
adc
pop
ja
mov
jg
cmpsl
jo
pop
xchg
xchg
cmp
add
jmp
and
jbe
mov
mov
and
lret
cmc
pop
std
xchg
dec
cltd
rcrl
movsb
cmp
iret
mov
sub
push
lods
inc
inc
adc
lcall
mov
sbb
cli
xchg
lods
mov
xchg
pop
mov
mov
sbbl
daa
jg
xor
jmp
enter
mov
mov
mov
or
dec
in
pusha
mov
test
inc
cmp
push
inc
adc
push
out
lock
loope
jne
les
push
out
xchg
xchg
stc
jle
lds
inc
sub
xchg
leave
pop
aas
pop
repz
cmp
sub
scas
inc
fidivs
out
fdivs
aam
and
xchg
or
jo
cmp
adc
loop
xor
mov
les
mov
scas
inc
adc
mov
arpl
fmull
mov
out
push
or
subb
fistl
sbb
add
mov
pop
icebp
leave
push
popf
mov
fisttpl
movsl
int3
insb
iret
data16
cmp
fisubs
clc
scas
cmp
lock
scas
inc
mov
dec
cmp
add
or
cmp
cli
xchg
test
lret
mov
fisttpll
cwtl
lock
loop
pop
out
pop
add
je
es
or
pop
repnz
cmpsl
sub
nop
daa
push
dec
es
in
aad
popa
mov
xchg
shll
fs
xchg
pop
stc
and
out
test
sbbl
push
inc
cmpsl
xor
xchg
inc
jge
adc
cmp
push
pop
jns
stos
push
lea
mov
jns
scas
iret
data16
dec
jecxz
cmpsb
popf
xor
mov
mov
jnp
cltd
inc
mov
adc
pop
mov
push
das
insb
xchg
cld
jg
stos
jo
xchg
cs
xchg
in
add
test
push
jae
movsl
mov
shrb
pop
or
cmp
cwtl
das
dec
pop
xchg
sub
mov
add
push
test
fstp
pop
inc
fimuls
test
sub
pop
cmp
fisubrs
iret
iret
shlw
and
shl
daa
mov
mov
push
js
xchg
lcall
bound
addr16
adc
pop
push
mov
cmp
es
pop
scas
inc
mov
pcmpgtd
push
mov
loopne
push
add
std
sub
mov
and
movsb
and
leave
pusha
ss
cmp
add
push
inc
mov
js
push
jnp
mov
dec
adc
incb
xchg
sub
pop
icebp
mov
mov
movsb
and
mov
outsb
jbe
jne
or
xor
sub
lcall
cmp
jmp
jae
call
mov
pop
shrl
push
and
rorb
sub
pop
xchg
clc
push
push
xor
popa
test
mov
orb
fnstsw
lret
bound
ds
mov
mov
sub
decb
ret
shrl
mov
hlt
sbbl
adc
add
mov
jge
xchg
scas
cmp
or
das
ja
movsl
dec
pop
repz
aam
out
or
nop
push
jb
push
mov
data16
cwtl
dec
sub
loop
into
fdivl
push
or
lds
aad
hlt
inc
xlat
outsb
jbe
cmpsl
ds
xchg
lds
fsubrs
inc
mov
sub
lds
insl
xor
mov
aas
inc
adc
push
mov
fwait
cld
rcl
std
xchg
pop
hlt
jne
sub
movsl
pop
inc
lahf
ss
aaa
into
lods
lcall
in
rcrl
jp
push
inc
in
xor
into
gs
add
popa
inc
fwait
xor
sbb
orb
push
xchg
cmpsb
pop
bound
cmpsb
push
mov
les
fistl
cmpsb
sarl
out
insb
cmp
arpl
negb
rcll
pushf
add
rcrl
test
je
mov
rclb
push
popf
cli
cs
js
sbb
dec
jecxz
cmp
jp
fidivrs
aad
lods
lahf
ss
lds
out
sarb
out
and
xchg
js
and
mov
sbb
mov
jmp
fcompl
cmp
and
xor
andb
mov
and
mov
xchg
adc
sub
mov
xor
std
push
sub
or
test
cmpsl
dec
cmp
push
jns
fxch
popa
lret
adc
jae
dec
lret
xchg
mov
xor
jge
out
out
scas
sbb
mov
call
cmpsl
stos
xchg
jecxz
inc
and
mov
sub
arpl
sub
mov
cmpl
xchg
or
pusha
cmp
push
rorl
mov
rcrb
mov
lods
aam
rclb
pop
mov
in
push
loope
andb
loope
sarl
movsb
pop
mov
sub
cmp
fstl
bound
push
pop
jge
aas
xchg
mov
ret
pusha
push
lods
xchg
in
sub
hlt
jae
in
lock
mov
adc
mov
loopne
mov
cwtl
daa
cmpb
jl
fisttpll
dec
shr
sti
jge
mov
sub
mov
scas
or
push
xlat
inc
fninit
jb
leave
dec
add
enter
lret
sbbb
scas
imul
xor
xchg
arpl
mov
daa
pop
lds
jl
and
cmp
sub
or
call
mov
jl
dec
mov
mov
roll
xchg
cmp
pop
es
and
fwait
js
adc
loopne
int3
arpl
add
gs
aaa
xchg
sub
xchg
sub
xchg
repz
cmp
mov
vunpckhps
add
je
adc
pop
pusha
imul
pop
jnp
insb
xorb
mov
data16
das
jmp
or
insl
xchg
dec
pop
icebp
pop
mov
pop
or
das
add
push
int
add
jb
in
adc
mov
lret
push
int3
aas
sbb
aas
aas
shll
mov
fldenv
mov
imul
vmovsd
push
ljmp
push
in
repz
stos
inc
fcoml
rolb
mov
sbb
mov
iret
adc
cltd
xor
mov
cmc
xchg
dec
push
sub
inc
movsl
lret
scas
in
and
xchg
jle
pop
sahf
sub
jecxz
enter
push
or
push
imul
cmp
je
jmp
or
mov
lcall
or
pop
hlt
adc
push
ljmp
shrl
or
into
insl
insl
sub
lret
std
out
test
popf
lret
daa
mov
xor
inc
lret
shlb
pop
idiv
das
test
mov
popa
push
movsl
push
sbb
mov
add
shlb
adc
add
xchg
adc
dec
loopne
fcmovbe
adc
pop
test
push
popf
jg
cmp
xchg
aad
and
jle
push
cs
frstor
mov
popa
ljmp
adc
inc
jb
and
shlb
ficoms
mov
in
jno
jo
out
xchg
cmpsb
cmp
mov
ret
jno
loopne
xchg
sub
add
mov
and
push
sbb
push
lods
mov
jo
mov
cli
push
jne
inc
push
mov
scas
rcl
aad
push
adc
inc
lods
xchg
sub
aad
test
or
jns
pop
and
into
pusha
jge
push
push
cltd
xor
cmp
sub
pop
sahf
mov
adc
js
push
pop
push
add
inc
adc
ds
dec
push
or
shrl
lret
stos
inc
mov
fmulp
pusha
rorb
inc
ds
jns
sahf
jle
adc
dec
fucomip
jae
loop
int
rol
inc
sbb
pop
mov
mov
arpl
mov
mov
jl
test
jbe
testb
xor
movsb
and
xchg
add
imul
rclb
push
movsl
loop
out
test
leave
jl
mov
sbb
sbb
or
add
not
pop
repz
push
or
lahf
call
and
call
pusha
mov
push
mov
push
lock
rorb
rclb
push
jmp
push
out
push
movsl
and
dec
inc
dec
loope
outsl
sbb
stos
inc
pop
inc
fimuls
stos
cmp
or
enter
rorb
inc
fiadds
fldenv
mov
jno
pop
repnz
push
or
fs
jmp
daa
enter
dec
in
subl
repnz
mov
cmp
dec
loopne
pop
sbb
mov
mov
sub
push
xlat
push
movsl
out
js
rorb
pop
cmc
cmpsb
outsl
inc
fisubl
roll
jnp
xchg
push
xor
mov
shll
rorl
test
repnz
lret
mov
popf
pop
in
daa
mov
jg
pop
hlt
int
add
mov
fnstsw
out
jmp
cmp
in
andl
aaa
into
aam
test
aam
clc
pop
mov
fbstp
or
aas
push
sub
lods
inc
ds
ds
mov
insb
pop
sahf
xor
sbb
or
leave
movsb
push
ljmp
or
cmp
mov
iret
data16
cmp
insb
lcall
mov
loopne
ret
mov
shrl
jp
sbb
jmp
fwait
jmp
insl
add
or
xchg
fs
testl
das
xor
adcl
push
movsb
or
test
test
inc
fisubs
ret
repz
pop
idivb
sbbl
lahf
inc
fstps
roll
xchg
sarl
cmp
push
push
lods
daa
mov
js
pop
cmc
test
cmpsb
cmp
mov
loopne
shrb
add
cmp
mov
loop
pop
xlat
outsb
cmp
dec
loopne
pop
mov
mov
mov
jl
dec
dec
in
sti
xchg
sub
into
push
call
mov
cli
xchg
jae
pop
negb
xlat
outsb
call
sub
lcall
xchg
sub
aad
xor
ja
and
inc
dec
sub
and
xchg
popf
arpl
mov
fisubrl
andps
xor
test
cmpsl
xchg
dec
scas
inc
addl
mov
mov
mov
push
out
arpl
lock
sub
sbb
jno
pop
divb
movb
or
bound
mov
jmp
lods
out
fdivrs
stc
movsb
repz
sarb
add
lock
xchg
sub
adc
stos
repnz
jecxz
aas
inc
add
inc
ss
hlt
cwtl
push
lret
pop
sub
dec
add
pop
lock
push
lods
jae
xchg
sub
cmc
mov
sub
leave
pusha
mov
push
lds
xor
add
aad
rol
and
into
xchg
xchg
sub
or
into
cmp
nop
daa
shrl
icebp
mov
into
inc
inc
jp
scas
stos
cmp
dec
shll
or
cmp
and
fnsave
xchg
sub
in
inc
fsubp
rorb
ret
jg
dec
outsl
cmpsl
pop
mov
hlt
dec
jecxz
jmp
cmp
lahf
fistps
fsub
fdivl
add
into
movsb
jecxz
inc
mov
scas
inc
sar
mov
adc
shrb
mov
in
cmpl
or
push
dec
sbbl
out
hlt
fmul
or
sub
cltd
xor
dec
loope
pop
mov
jns
sub
mov
and
gs
cmp
mov
es
jge
adcb
inc
mov
and
cmp
mov
xor
mov
jp
add
add
dec
xchg
sahf
jo
or
pop
cmpsl
int
cmpsb
mov
ret
sub
mov
jmp
sub
rcrb
in
test
push
scas
push
push
out
mov
push
pop
xor
lea
dec
mov
add
sti
jg
jns
sub
sbb
add
mov
ficompl
xchg
adc
in
std
xchg
pusha
rolb
in
pop
xchg
insl
js
xor
cmp
test
pop
repnz
fwait
ljmpw
or
inc
nop
jbe
pop
test
mov
cmpsl
xchg
jbe
push
std
dec
xchg
idiv
pop
ficomps
movsb
cmp
sub
mov
sbb
mov
jl
sahf
out
test
and
inc
jle
insl
fwait
lds
cmpsl
jo,pt
jnp
aam
aad
jb
imul
cli
jb
sub
dec
cli
fs
jae
mov
imul
cmpsb
pop
sbb
sarb
andb
mov
shll
call
xchg
clc
cltd
xor
xlat
fwait
and
loop
shlb
fstpt
jmp
or
sub
int
mov
out
nop
imul
dec
imul
pop
xor
pushl
aaa
ljmp
or
jg
ret
das
xlat
push
lahf
xchg
cmp
adc
pop
lods
mov
in
repz
out
jmp
cld
and
xor
clc
rorl
mov
aam
das
mov
mov
cmp
jne
jecxz
mov
in
and
into
movsb
inc
jae
pop
loope
lock
pop
fs
outsb
enter
and
fimull
faddl
xchg
push
sbb
jbe
sub
sub
jl
out
pop
enter
fidivl
jns
lods
mov
lds
jno
push
insb
add
sbb
adc
add
mov
ret
push
scas
xchg
xchg
adc
mov
icebp
inc
fildl
es
push
movsl
pop
mov
imul
shll
inc
loopne
dec
pop
mov
sub
push
mov
outsl
mov
xchg
lods
mov
test
jns
dec
push
jl
push
dec
xor
push
mov
jns
pushf
sbb
mov
ret
sbbl
lcall
pop
sti
push
mov
jg
cmpxchg
pusha
add
idivl
sbb
cltd
xchg
xchg
xor
sbb
bound
cmc
insb
cmp
sbb
sub
enter
scas
mov
insl
loope
lea
daa
push
xchg
mov
dec
rcll
mov
pop
in
add
and
sti
and
sbb
outsl
cltd
mov
sbb
sbb
mov
imul
add
test
jno
lcall
jnp
popa
jmp
pop
dec
rorb
xor
cmp
or
in
push
sti
adc
lds
cli
push
lds
out
mov
cli
lds
and
es
test
dec
js
add
data16
in
pushf
popf
in
xor
or
lods
inc
jl
push
jecxz
cltd
mov
dec
loopne
mov
lmsw
pop
adc
cwtl
ljmp
test
sbb
dec
loopne
shl
jp
lcall
test
or
sti
jl
fistpll
mov
cmp
jl
sub
or
popa
es
xchg
repnz
xor
pop
pop
jl
sub
xchg
lahf
and
xchg
jne
es
mov
mov
fidivs
inc
fnsave
jne
push
mov
je
hlt
push
cli
popa
addr16
in
sub
jp
jo
xor
xchg
lds
cmpsb
out
lret
mov
loop
jb,pt
mov
shlb
enter
data16
or
mov
jo
shrl
fwait
xor
cmp
adc
and
rclb
cmp
jmp
into
sbb
push
lock
jmp
out
pop
mov
add
sbb
push
in
xor
imul
cmpsl
inc
in
popa
repnz
mov
in
idivl
hlt
sbb
mov
fmull
pop
aaa
lret
out
lea
call
gs
or
cmpsl
cmp
ror
je
sbb
mov
pop
imul
pop
push
and
cmc
fmull
mov
xor
jg
loop
dec
push
jge
xchg
test
adcl
xor
jno
pop
loopne
pop
icebp
addl
or
fsubrl
subl
aad
inc
mov
jmp
inc
xchg
sub
cmp
arpl
es
icebp
sub
jge
push
inc
pop
rcll
outsl
outsl
jno
inc
jns
add
ja
pop
es
stos
add
clc
cmp
pop
sahf
lock
mov
je
int3
arpl
sbb
push
rcrl
lods
mov
ja
xchg
mov
scas
inc
into
xlat
mov
mov
popf
and
stos
add
inc
xor
ficompl
xor
jp
push
push
adc
lods
and
aad
jl
jmp
jecxz
in
pop
in
orl
mov
sbb
sub
jae
sub
dec
sahf
xor
mov
das
dec
inc
push
and
les
push
inc
out
subl
loope
or
clc
mov
dec
mov
pop
sbb
push
xchg
cwtl
das
leave
inc
sub
and
jmp
leave
leave
push
push
pop
out
mov
mov
and
dec
sub
push
fsubrs
aad
shl
or
pop
mov
sub
into
pop
xor
loopne
movb
mull
push
mov
add
lret
test
cs
lods
aad
fistpll
xchg
hlt
xchg
adcl
shl
imul
aaa
pop
in
adc
inc
xor
sbb
xor
into
shll
mov
dec
xchg
sub
pop
and
into
stos
xor
add
out
xor
cmp
cld
pop
fistpll
hlt
xor
cld
leave
shrl
sbb
shrl
pop
imulb
sub
test
jae
bound
dec
cmc
mov
pop
jb
outsb
sub
jecxz
and
mov
sahf
xchg
push
in
xlat
cld
lds
push
pop
push
repz
add
bound
xor
cmp
push
enter
jle
test
push
scas
mov
mov
aam
test
jne
jecxz
int3
out
mov
mov
push
pop
jo
jle
ret
pop
xchg
pop
loope
rcll
in
jmp
inc
inc
xchg
inc
insl
in
addl
add
addl
lock
pop
dec
stos
adcb
ret
ljmp
lret
outsl
dec
xchg
add
or
jmp
push
outsb
addl
repnz
xchg
gs
in
add
fsub
adc
push
scas
push
filds
pop
shrb
rolb
inc
jle
rcl
cli
movsb
mov
out
mov
pop
aas
pop
inc
push
fcomps
add
pusha
adc
cmp
lods
mov
test
movsb
cmp
test
sbb
in
lea
punpckldq
pop
sar
pop
pop
sbbl
dec
lock
adc
jb
mov
std
and
push
mov
jne
xchg
sbb
dec
outsl
push
or
fimuls
dec
lds
mov
cld
push
imul
sub
push
jmp
mov
cli
inc
inc
and
adc
ss
xchg
dec
sbb
hlt
jmp
in
pop
repnz
or
pop
pushf
push
push
inc
xchg
cmc
sbb
jmp
mov
daa
cld
or
sbb
sbb
and
pop
cli
outsl
dec
inc
pop
loop
jae
gs
mov
es
pop
or
fmuls
into
sub
and
sbb
cli
jo
xchg
cmp
mov
imull
sbb
outsb
add
arpl
negb
repz
test
mov
jg
sahf
mov
addr16
mov
cmp
or
xchg
out
xlat
pusha
adc
in
add
jp
sub
fsts
jbe
xor
jnp
xchg
movsb
les
inc
fldl
mov
jbe
jl
movsl
lods
subl
mov
jno
jnp
rcrl
mov
imul
lcall
jmp
lahf
sub
iret
jg
mov
das
repnz
scas
loope
mov
iret
inc
clc
sub
in
jae
jbe
or
push
mov
push
dec
in
and
sahf
dec
xchg
jecxz
pop
rolb
out
jb
jmp
lods
xchg
into
xor
sbb
outsb
push
pop
mov
test
xchg
sub
jg
cld
test
mov
dec
cmpsb
pop
popa
addr16
inc
pusha
sahf
adc
inc
mov
out
xor
cmpsl
idivl
add
jae
sub
cmp
out
xor
in
sbb
pop
dec
aaa
into
jl
rcrb
mov
sbb
inc
aas
jae
popf
xlat
mov
mov
cmp
out
and
pop
hlt
inc
pop
add
push
cmpsb
pop
and
jno
lea
mov
jns
bound
adc
leave
push
xchg
adc
push
popf
insb
leave
and
push
out
pop
add
jns
and
mov
aad
rcrb
or
mov
repnz
push
mov
into
cs
jle
es
inc
or
repnz
js
xorb
push
movsl
jecxz
jg
test
sub
movsl
pop
scas
sbb
aas
insl
shlb
out
or
decl
mov
jnp
xor
jo
in
repz
leave
orl
xor
push
jmp
push
cwtl
jae
cmp
lds
mov
movsl
dec
fcomp
std
fs
arpl
xchg
cld
cmp
aas
mov
shrl
jne
jns
cmpl
cmp
push
mov
bound
pop
ret
dec
push
mov
ja
or
lods
inc
sbb
mov
nop
enter
out
and
in
cmp
pop
cli
scas
sub
sub
aaa
mov
xor
or
push
jb
imul
imul
aam
sbb
popf
sahf
aas
shlb
fsubs
xor
xchg
aas
ja
inc
test
mov
arpl
movsl
stc
nop
xlat
loop
adc
int3
arpl
ja
inc
add
and
les
xor
jmp
mov
push
jle
mov
jp
sahf
mov
sbb
shrb
mov
clc
jp
fstpl
jmp
lods
adc
mov
xor
scas
sub
mov
mov
in
jge
movsl
scas
push
mov
xor
idiv
pop
ret
xor
leave
jne
filds
es
lods
pushf
lods
jb
add
scas
bound
in
fidivs
push
movsb
xchg
or
subb
scas
leavew
xchg
cs
or
sub
gs
ds
push
ljmp
fsts
lea
ss
scas
insb
mov
ds
xchg
add
out
cmp
in
ljmp
adc
cltd
out
sbb
rolb
pop
scas
inc
push
sub
not
and
cmp
mov
jns
pushf
sti
mov
jp
xor
fildl
xchg
loop
shrb
lods
add
xchg
mov
xchg
lcall
rcrl
cmp
imul
rclb
fiaddl
xchg
pop
movsl
dec
stos
mov
ljmp
xchg
dec
fadds
xchg
dec
or
test
mov
adc
sub
mov
ret
lret
push
push
call
pop
dec
xor
push
dec
shrb
cmp
iret
pop
pop
push
mov
xchg
adcl
ror
add
in
pop
arpl
mov
popf
mov
push
leave
ret
lock
es
push
aas
cmp
jge
adcb
adc
test
xorb
mov
out
fisubrs
std
dec
loop
add
rcrl
dec
cld
cmpsb
test
loop
dec
fistpll
jno
push
mov
stos
int
shll
rclb
movsb
cwtl
cmp
mov
pop
mov
push
cltd
fldl
das
xlat
mov
incl
andb
xchg
mov
cmp
xor
ja
xchg
call
inc
loop
jbe
adc
fsubrl
lcall
imull
fadds
mov
hlt
pop
pop
leave
gs
cmp
cmp
insb
or
dec
ja
cmp
shrl
and
xchg
sub
dec
imul
test
iret
jmp
jp
nop
daa
push
or
adc
pop
imul
sub
sbb
fisubrs
js
std
add
push
arpl
aas
fwait
or
inc
shlb
test
cltd
xor
dec
pop
or
or
mov
bound
lret
fbstp
daa
mov
jae
ja
hlt
sub
dec
push
pop
ret
xchg
hlt
push
pop
fwait
and
add
inc
pusha
testl
nop
xor
sbb
or
push
jns
repnz
cli
dec
divl
cld
cmp
stos
cmp
shrl
mov
fildll
lds
add
dec
loop
orl
aaa
mov
jl
sbb
dec
jns
mov
push
lcall
pushf
sar
aas
loop
mov
or
cmpsl
inc
inc
xor
rcrl
in
xchg
insl
dec
loope
mov
xor
xchg
xchg
in
and
scas
jg
xor
and
das
call
fstps
rclb
dec
out
in
mov
jnp
mov
xchg
cs
sub
ret
pusha
scas
inc
xchg
lret
fwait
cltd
jg
xchg
jbe
iret
movl
roll
xchg
mov
into
mov
adc
xchg
pop
xor
test
sbb
dec
mov
mov
push
movsl
jge
shll
dec
movsl
jmp
rcrl
sub
std
out
das
mov
and
jp
xor
sti
hlt
adc
roll
xchg
sarl
in
mov
frstor
decl
jne
fbld
adc
decb
pushf
iret
in
xchg
sbb
xor
mov
xor
pop
repz
cmpb
mov
and
sbb
not
dec
lods
test
enter
jmp
cmpsb
adc
cmp
mov
sub
ss
cmpsl
dec
repnz
ja
pusha
idiv
cwtl
rcrb
push
iret
or
sbb
jl
pop
loopne
add
xchg
call
add
mov
in
arpl
mov
push
lea
nop
mov
or
lock
xchg
push
out
test
cmp
into
lret
inc
sbb
mov
stos
adc
data16
popf
incb
or
and
clc
addr16
scas
stc
pop
cmc
sub
inc
mov
xchg
sbb
mov
ret
xchg
outsb
mov
lods
jl
loope
and
add
ljmp
xchg
jmp
mov
in
stos
dec
pop
addr16
loope
int3
bound
in
daa
ja
xor
call
or
pushf
inc
cmp
cwtl
fs
xchg
mov
fcmovne
lock
icebp
cli
mov
nop
ss
xor
repnz
add
sbb
pop
inc
jbe
dec
sub
sub
sub
jge
ret
mov
mov
xchg
sbbl
fidivs
in
stos
ja
xchg
fsts
aam
pop
leave
mov
aad
test
push
movsb
sub
add
test
adc
mov
push
popf
mov
sub
add
jg
inc
bound
call
and
or
sub
or
adc
leave
hlt
mov
pushf
mov
ds
mov
xor
std
jb
mov
push
adc
mov
ja
in
mov
xchg
movsl
out
sarb
pop
inc
fwait
lea
cmp
idivl
mov
aas
cmpl
adc
cmp
add
xor
pop
push
test
iret
movsb
or
and
sub
xor
mov
xchg
sar
out
mov
data16
div
imul
pop
and
xchg
sbb
icebp
mov
mov
mov
loopne
into
xchg
das
cmp
sub
fisttps
mov
out
hlt
cltd
imull
or
in
pop
adc
ret
stos
add
adc
cmpsl
push
mov
lods
movsb
mov
xchg
cltd
shrb
fidivs
jmp
fstl
mov
inc
add
jmp
add
push
jne
add
sbbb
not
fsubp
cmp
cmc
jle
aas
push
fidivrl
or
xchg
les
mov
pusha
ja
cli
push
dec
pop
cmpsl
push
cmp
psllq
fs
pop
aaa
jmp
aam
test
outsl
andb
add
or
jmp
sub
sahf
mov
cmpsb
and
cmp
sub
dec
int
insl
lret
ds
out
sub
xchg
xchg
jae
out
sbb
mov
nop
fwait
cmp
or
imul
imul
pushf
pop
dec
xchg
push
dec
xchg
fs
mov
add
mov
es
jl
jnp
das
cmp
mov
shl
insl
sub
mov
push
inc
insl
mov
lret
arpl
ja
or
pop
scas
dec
add
dec
fs
icebp
mov
sbb
retw
jne
gs
or
sbb
jmp
rolb
adc
or
adc
sti
std
sbb
dec
lret
adc
hlt
xchg
fistpl
fcomip
xor
mov
out
and
push
or
fldpi
cmp
or
inc
pop
decl
and
jb
rclb
dec
in
xchg
daa
out
cwtl
xor
adc
das
cmc
dec
fwait
or
mov
fdivs
adcb
movsl
sti
stc
mov
pusha
stc
mov
test
cltd
dec
push
add
shl
mov
dec
sbb
arpl
add
jns
ljmp
fs
and
jae
pop
les
pusha
sbb
lahf
sub
loop
and
inc
fmul
nop
dec
jecxz
and
xchg
push
fwait
xor
add
pop
push
push
insl
outsl
daa
mov
and
xchg
test
fs
dec
mov
aaa
sub
adc
or
dec
addb
adcl
je
test
lock
testl
std
out
inc
xor
mov
adc
sub
add
adc
jbe,pn
cmpsl
dec
loop
or
add
dec
hlt
push
mov
outsb
mov
mov
shrl
leave
adc
pop
inc
ljmp
pop
sub
add
mov
fcmovnb
into
cmpl
rcrl
lock
loop
sub
out
jle
jg
fwait
stos
xor
leave
mov
sub
fstps
adc
mov
aam
popl
xchg
dec
cmp
xchg
int
push
sub
cmp
add
mov
iret
insb
std
jne
ljmp
inc
jno
pop
stos
mov
aad
add
js
sbb
inc
mov
pop
ljmp
sub
imul
xchg
xchg
add
pop
or
inc
adc
lcall
mov
jo
lret
xchg
sub
or
pop
movsb
flds
dec
inc
loopne
imul
xchg
xor
xor
es
and
insb
push
stos
mov
out
inc
pop
dec
xlat
add
imul
sbb
mov
inc
adc
es
push
mov
iret
inc
pop
pop
in
test
xchg
jg
sahf
outsl
int
add
out
inc
hlt
fisttpll
in
mov
push
pushf
dec
test
sahf
lods
or
dec
push
ljmp
call
pop
cmp
push
ret
andl
movsb
mov
adc
push
imul
or
das
mov
add
mov
mov
mov
cmp
xor
push
jb
push
mov
inc
inc
das
nop
das
sbbl
insb
cltd
push
pop
jae
mov
pushf
pop
lahf
push
pop
adc
pop
mov
xor
and
or
clc
dec
in
cltd
mov
jg
ret
clc
push
inc
call
push
cltd
ljmp
push
ja
fcompl
daa
jbe
sub
cmp
sbb
cmp
je
sti
mov
lret
pusha
add
stc
test
adc
jae
addb
lcall
leave
shlb
xchg
sbb
popf
call
inc
out
mov
sub
fchs
jg
add
cmp
iret
cmp
lock
es
cmp
into
pop
mov
emms
dec
pusha
test
ret
mov
bswap
pop
mov
or
push
adc
cmp
std
inc
xor
mov
arpl
fnsave
les
ret
and
mov
movsl
cli
xor
das
mov
fistps
pusha
xor
cld
movsb
repz
dec
rol
repnz
sbb
push
and
dec
pop
lods
jne
movsl
add
xor
dec
jno
test
jo
mov
mov
inc
arpl
sahf
ss
outsb
test
iret
mov
add
sub
stos
xor
ja
inc
cmp
pop
or
add
sbb
pop
mov
cmpl
sub
stos
into
cmp
int3
out
out
insb
movsb
rcrb
jne
push
jo
gs
or
aam
adc
push
pop
fwait
inc
mov
add
cltd
push
push
mov
in
loope
inc
cwtl
daa
pop
mov
mov
xchg
jp
xor
push
sbbb
das
push
stos
insb
das
mov
and
xor
fs
and
mov
jns
and
xchg
pushl
adc
movb
jge
mov
cmc
insl
add
jb
mov
stc
inc
stos
loopne
inc
cmp
inc
call
add
or
mov
jl
iret
stc
popf
cmp
movsb
inc
add
shll
stc
mov
pop
sub
jno
sub
fsubrl
adcb
repz
leave
call
std
pop
imull
andb
iret
jg
arpl
mov
dec
subl
out
mov
sub
sbb
xchg
xchg
mov
notb
adc
mov
xor
insb
xchg
ja
jb
ret
push
or
push
dec
jmp
xorb
lahf
aad
popa
shlb
mov
fmull
out
add
lcall
pop
into
dec
mov
inc
mov
movsl
mov
mov
mov
jle
out
loopne
mov
imul
mov
not
push
inc
in
iret
test
pop
andb
cwtl
stos
ficompl
adc
add
mov
dec
fmuls
mov
rorb
fidivrl
insb
sbb
sbb
fs
mov
fildl
inc
sub
and
lcall
xor
fidivl
and
das
fnstenv
lea
cwtl
rclb
lcall
lods
jg
imul
adc
xchg
and
mov
dec
jae
hlt
mov
add
sbb
or
nop
xchg
dec
jmp
in
xor
negl
push
daa
mov
add
cmp
iret
bound
push
rcrl
dec
fwait
mov
or
arpl
dec
inc
mov
inc
mov
mov
or
mov
rorb
sbb
inc
ret
adc
push
insb
xchg
sarl
das
fnsave
repnz
mov
div
scas
fbstp
out
movsl
push
notb
sub
pop
out
inc
mov
dec
test
jge
test
fmull
je
ss
mov
out
push
fstl
incb
into
popa
xor
mov
iret
cmpb
in
jno
mov
stos
out
inc
clc
nop
adc
pop
lods
inc
adc
xor
xchg
fs
inc
adc
push
sub
int
insb
js
jp
jne
inc
add
je
xchg
sub
mov
mov
inc
mov
int3
loope
leave
pop
xor
jb
pushf
loop
xchg
ss
fbld
jge
roll
push
mov
lcall
push
in
mov
add
inc
mov
outsl
add
cmp
minps
outsl
imul
and
ljmp
push
pop
pushf
aas
lods
push
cmp
mov
stc
cmp
addr16
cwtl
nop
les
bnd
add
popa
in
test
pop
sub
iret
or
xlat
push
jns
push
mov
lahf
add
mov
jae
js
sbb
mov
mov
ret
pop
jns
test
and
loopne
sub
mov
out
xchg
xchg
add
sbb
mov
pushf
xor
mov
aaa
cmp
mov
scas
fstpl
dec
repz
push
sub
in
jp
jne
shr
add
sub
or
mov
gs
iret
push
loopne
or
cmc
dec
repnz
push
xchg
jns
add
scas
jecxz
loopne
xor
inc
xchg
lahf
in
sbb
hlt
mov
jl
mov
lret
xchg
out
shrb
and
and
insl
cmpsl
adc
and
mov
sahf
sub
pop
js
enter
dec
cld
xchg
jnp
dec
data16
sbb
xor
cmp
push
mov
ljmp
movsl
jp
adc
dec
push
cltd
mov
jne
ss
sbb
pop
rcrb
mov
pop
scas
pop
ds
test
dec
pop
inc
testl
insl
call
dec
push
jb
sbb
jge
fnstsw
cli
xchg
fs
leave
push
push
insb
mull
cmpsb
dec
hlt
xchg
pop
cmp
mov
in
lock
xor
cmp
enter
lcall
xchg
leave
pop
fdivp
pop
imul
sub
sub
cli
fwait
gs
pop
push
push
loope
leave
loopne
out
xor
mov
mov
stc
lods
inc
fists
mov
sbb
xchg
xlat
lds
pop
cmc
sbb
fsubrs
jno
inc
outsb
xor
out
adc
cmp
jle
cltd
jne
hlt
in
cmpsl
lea
rcrl
mov
pop
es
or
dec
and
dec
mov
lock
mov
sbb
add
rcll
sbb
xor
adc
lcall
cmp
pop
dec
jecxz
in
lea
inc
pushf
or
mov
test
sahf
and
stos
mov
mov
icebp
js
xchg
and
mov
jl
fs
or
mov
mov
mov
xchg
outsb
popa
xchg
jno
or
outsb
sbb
lods
mov
icebp
cmpsb
pop
neg
pop
divb
lock
jge
andl
cmc
cmp
add
std
xchg
inc
fwait
lret
outsl
add
loopne
push
fisttps
xlat
sbb
icebp
ret
out
repz
sub
lods
pop
testl
mov
fldt
mov
test
sbb
inc
ja
std
inc
inc
mov
negl
daa
rcll
jne
inc
lods
notb
or
adc
inc
xor
inc
dec
lret
subb
outsb
test
xchg
pusha
sub
pop
xchg
les
fidivs
insb
mov
div
mov
ret
jnp
sub
jle
lahf
mov
push
xor
pop
popf
pop
scas
stc
jg
mov
jge
push
ss
test
scas
mov
xor
push
jmp
test
outsb
xchg
sahf
pop
outsl
inc
mov
out
das
xchg
rep
rcl
mov
loope
sub
xchg
fidivl
cmc
xchg
pop
fadds
cli
jns
das
movb
ret
dec
and
les
mov
mov
and
shrb
xlat
xchg
mov
loopne
jg
ja
sub
pop
push
out
xchg
or
mov
sub
aam
out
rcrb
mov
add
xor
addr16
in
loope
pushf
push
test
mov
shl
add
cmpsl
test
adc
dec
lahf
lods
orb
shl
mov
loopne
xor
fcmovnu
loopne
das
adc
popa
aad
mov
adc
push
mov
aam
mov
cmp
pop
insl
jle
iret
jmp
xor
dec
fldl2t
test
pop
or
lret
or
sub
mov
and
inc
push
sbb
movsl
scas
out
loope
popa
int3
jno
ret
fistpll
pop
daa
ljmp
pop
lahf
push
in
js
mov
popa
cltd
add
and
fdivl
mov
sbb
mov
lahf
ss
jl
push
or
mov
sbbl
cmp
pop
xor
lods
xor
mov
mov
push
mov
lahf
fsubl
pusha
sahf
ss
jae
push
adc
adc
insb
push
push
mov
adc
cmp
push
adc
movsl
fwait
roll
sbb
pop
and
es
pop
aas
outsb
loope
add
adc
imulb
xlat
mov
fstpl
cli
mov
ret
jecxz
xchg
ret
ret
mov
adc
popa
push
inc
int
mov
cli
push
mov
xchg
popf
jbe
dec
cmp
insb
cmp
lcall
add
cmpsb
fbstp
mov
cmc
or
lret
mov
scas
pop
in
sti
push
and
adc
out
pop
out
lea
repnz
loope
fistpl
push
pop
mov
dec
cmpsb
nop
dec
pop
scas
sub
mov
mul
pop
fcomip
pop
movsb
pop
fsts
push
mov
mov
aaa
je
out
jmp
ja
fstpl
fsts
pop
mov
jbe
sub
out
cmpsb
orl
cmp
cltd
repz
dec
dec
hlt
repz
inc
mov
add
pop
inc
pusha
aas
and
push
mov
mov
imul
push
mov
mov
push
addb
stc
pop
sbb
imul
cli
add
stc
mov
out
lret
add
add
sti
and
sub
daa
sub
mov
movsb
aas
je
dec
jmp
jb
push
cmp
add
sbb
movsl
sti
inc
gs
sbb
or
sbb
push
xor
mov
das
and
mov
sbbl
sbbb
sbb
dec
xchg
mov
inc
dec
dec
inc
test
loop
add
or
ja
mov
cmp
lock
or
out
not
mov
add
push
jmp
mov
cmpsl
mov
lods
pop
add
cmp
xchg
add
add
dec
xor
xor
xchg
and
lock
xchg
sbb
cmc
cli
imul
andl
and
xor
cmp
mov
daa
test
jecxz
add
inc
mov
xchg
add
cli
cltd
jo
lcall
jno
sarb
fwait
daa
in
xor
or
xchg
cmp
lahf
and
aad
stos
sbb
fs
mov
out
dec
push
mov
neg
out
outsl
jnp
jnp
mov
xor
lea
sarl
into
sbbl
and
lock
out
jge
mov
bsf
push
out
add
inc
adc
jne
fisubrl
call
popf
into
rolb
lods
cltd
pop
inc
test
pop
inc
leave
into
push
cs
dec
or
push
jecxz
mov
push
mov
adc
add
test
fiaddl
test
test
ret
call
lea
xor
sti
mov
push
push
push
loopne
mov
test
out
pop
adc
jne
sbb
xchg
enter
jge
sub
popa
int3
inc
js
fs
push
shlb
xor
pop
xchg
xchg
push
jae
lahf
pop
das
dec
sar
lret
mov
jns
adc
add
test
movsb
push
xchg
insb
mov
int3
iret
sarl
fcmovne
es
subb
mov
adc
les
jmp
dec
push
maxps
cs
add
fnstcw
xchg
jl
pusha
scas
mov
xchg
shll
shll
test
mov
js,pn
stos
cmp
pop
aas
pop
push
xor
pop
lret
int
or
subb
mov
mov
mov
sti
jg
jge
sbb
jnp
mov
inc
out
call
icebp
movsl
add
aas
testl
xor
sub
push
mov
stos
mov
pop
stc
je
dec
mov
sbb
inc
cld
xchg
popa
sbb
and
inc
mov
mov
mov
int3
ret
jp
dec
rcll
and
cmp
xchg
push
adc
out
aaa
or
cmp
pop
jg
pop
mov
cmp
mov
pop
inc
cmpsl
pushf
add
imul
subl
or
leave
cltd
pop
outsb
leave
fucom
cli
mov
mov
outsb
rorl
mov
leave
adc
inc
dec
in
push
movsl
sbb
inc
push
popf
inc
push
pop
cltd
jl
jmp
lahf
pop
ret
repz
int
pop
xlat
and
adc
std
inc
lcall
in
push
xchg
outsl
cltd
je
mov
xlat
outsb
pop
fwait
rolb
ret
push
lock
je
data16
out
xchg
bound
cs
mov
fs
push
mov
and
dec
jmp
xchg
out
nop
insl
sbb
pop
lret
add
pop
aas
or
mov
jbe
into
inc
mov
push
push
lcall
sbb
repnz
aad
std
stos
or
cld
mov
loop
sti
inc
add
pushf
repz
xor
and
sti
xchg
mov
sbb
push
insl
lods
inc
fcmovu
lea
mov
cmpsb
int
mov
mov
pop
imul
xchg
mov
cltd
out
xchg
add
mov
sti
outsl
lods
push
shrb
fmul
fisttpll
mov
scas
idivl
lock
or
andb
xrelease
dec
or
out
or
into
dec
add
sbb
ret
mov
cmp
pop
icebp
in
and
add
or
mov
lahf
rorb
aad
jge
mov
nop
push
add
pop
jecxz
inc
xchg
repnz
mov
data16
and
mov
test
jmp
fimuls
mov
sbb
mov
int3
mov
cmpsb
ret
cltd
das
shll
mov
cmpsl
into
xor
leave
push
out
mov
ds
stos
jne
pushf
xchg
outsl
jns
dec
jae
imul
push
push
dec
mov
mov
dec
pop
stos
xlat
fwait
xor
inc
add
mov
loopne
mov
lret
sti
mov
leave
pop
xchg
push
out
sbb
jmp
out
jmp
jmp
adc
pusha
adcl
out
push
pop
or
xor
mov
sub
add
insl
mov
fldenvs
call
iret
or
jb
mov
push
je
mov
lock
jle
fmuls
cld
inc
sar
cmc
dec
push
icebp
outsb
push
popf
jle
mov
lea
pop
aam
mov
push
lea
jp
lods
pop
sub
adc
lods
push
addr16
jne
das
sub
shrb
dec
xchg
inc
add
lret
bound
add
test
xor
ficomps
and
and
out
jge
fidivs
data16
ret
cld
stos
cmp
add
push
push
xchg
xchg
mov
cmp
mov
popa
push
aam
fadds
out
insb
sahf
scas
pop
sti
fistpll
mov
repz
insb
or
sbb
ret
adc
push
imul
dec
sub
ja
inc
arpl
fnsave
xchg
inc
int
fildll
fcomi
imul
mov
mov
sub
out
out
cmpsl
push
daa
je
aad
jle
mov
rcrl
pop
sbb
mov
xchg
jge
in
xor
cmp
or
mov
sub
jl
push
cmp
addl
es
lock
mov
pop
scas
mov
inc
imul
loop
inc
mov
out
mov
xor
inc
xlat
inc
rcrl
cmp
cwtl
jne
int3
stos
mov
xchg
sub
sub
pop
mov
dec
mov
xlat
cltd
xor
inc
mov
jmp
nop
cli
add
pop
in
and
mov
mov
movsl
out
shrb
pop
and
flds
arpl
jbe
in
cli
pop
add
jmp
mov
jno
mov
mov
jle
inc
sub
aaa
push
repz
mov
push
adc
ret
pop
cmp
fcomip
xor
ds
xlat
outsl
push
pop
dec
and
jno
mov
xchg
call
cltd
and
cmpsl
push
cltd
into
enter
lock
mov
lds
mov
mov
movsb
pop
xchg
xchg
adc
push
or
ss
sub
push
push
mov
dec
lea
addr16
cmp
jge
flds
sub
mov
rorl
xchg
and
dec
dec
xorb
jmp
mov
xchg
inc
push
aad
fisttpll
out
jp
lods
mov
and
int3
sub
pop
out
dec
out
dec
popa
cli
pusha
test
sbbb
js
cmp
js
fadds
int
imul
xchg
movsb
pusha
in
subl
adc
fadd
sub
test
test
sub
in
lahf
sbb
sbb
cmc
adc
or
shrb
in
mov
mov
je
cli
fs
sti
push
pop
xor
loope
xchg
sub
nop
xchg
push
lret
cltd
cmp
inc
in
sub
leave
rolb
mov
enter
adc
push
jb
mov
iret
xchg
adc
arpl
dec
xchg
xor
insl
cli
lods
cld
push
push
lret
repz
mov
hlt
js
push
popa
ja
rcrb
xchg
and
and
movsl
adc
pop
xor
mov
lea
into
fistl
inc
pop
lods
and
js
and
stos
add
inc
xchg
pop
jne
inc
cmp
mov
dec
mov
lcall
jmp
repz
fwait
outsb
outsb
dec
pop
mov
dec
xchg
xor
bound
lock
outsb
frndint
dec
orb
outsb
jns
cli
push
jno
popf
pop
lea
and
xor
rcrb
mov
mov
ss
mov
psubb
icebp
jns
lret
jnp
test
jno
sub
or
xor
inc
data16
out
out
ss
mov
cmpsl
imul
inc
lea
int
push
mov
sti
pop
ret
push
xchg
loope
inc
rcrl
mov
scas
xchg
xor
repnz
ret
xor
add
push
shrl
or
sbbl
xor
aad
xor
imul
cmpps
push
lahf
push
push
leave
jnp
leave
test
loope
adc
out
mov
or
loop
or
cmp
call
mov
lds
push
and
vmwrite
and
xchg
jnp
add
inc
pop
cmpsl
das
jp
pop
sub
incb
add
add
pop
xchg
out
push
xor
fldl
stc
dec
sbb
pop
rorb
xchg
dec
int
dec
xchg
jl
pop
lods
jnp
loopne
jae
adc
cmp
mov
sub
movsb
dec
ljmp
or
std
mov
aam
fsubs
fldl
adc
push
and
sbb
icebp
jns
add
idiv
jbe
shll
mov
movsl
orb
sub
lock
jno
in
lret
movsl
jp
pop
adc
sbb
insl
xor
push
inc
fnstsw
cmp
fs
daa
or
lods
stc
das
push
repnz
adc
push
xchg
iret
bswap
ljmp
loopne
ja
daa
sub
loopne
inc
leave
call
adc
test
int3
cli
lcall
ja
out
in
mov
jg
arpl
jmp
lret
stos
mov
aaa
cmpl
fcomps
addb
and
ss
dec
negl
sub
jae
rep
pop
and
aad
fisubrs
cmp
fs
insb
add
and
mov
jp,pt
call
mov
pop
xchg
sbb
ret
mov
shlb
and
loop
lds
mov
pop
pusha
testl
mov
aad
insb
gs
test
repz
inc
lods
aas
aam
mov
stos
sbb
pop
sbb
adc
ss
mov
pop
mov
dec
faddl
rorb
mov
andb
jns
aaa
push
or
es
leave
xchg
mov
lcall
and
inc
or
and
and
xchg
adc
jns
aad
sbb
sub
fisubl
mulb
iret
andb
inc
pushf
bnd
pop
pop
repz
push
adc
ss
movb
dec
jecxz
mov
pop
sub
cltd
imul
cmpsb
jns
cmpb
add
and
inc
inc
or
std
adc
stc
sub
andb
pop
jne
xchg
adc
enter
mov
mov
sub
push
jl
cs
das
fs
das
cli
or
imul
push
adc
sub
mov
jne
inc
pop
mov
ret
jb
imul
mov
imul
int
sbb
outsb
adc
bound
imul
mov
add
mov
mov
into
fdivrp
adc
adc
pop
daa
jbe
pushw
jmp
andb
aam
fwait
add
stos
sbb
push
sbb
lret
andl
or
lds
or
fsts
mul
mov
int
sbb
jb
insb
xchg
das
or
adc
fwait
movsb
test
cmpsl
rcrb
nop
xor
ss
mov
mov
jl
nop
lock
pop
xor
mov
jp
bound
popf
jae
stos
mov
rcl
rorl
test
mov
call
jp
sub
in
push
mov
push
icebp
mov
xchg
outsb
sub
leave
sbb
int3
lds
jp
and
mov
push
mov
outsl
push
jmp
lea
or
hlt
or
outsb
aad
shll
add
mov
hlt
mov
loopne
push
jge
mov
fcmovnu
jl
fs
ds
fistpll
sub
ret
push
adc
mov
ret
xor
cwtl
or
pushf
aas
jmp
sahf
das
inc
and
pop
pop
sub
sub
scas
insl
sbb
add
mov
or
iret
cmpsb
lock
shrb
int3
cmp
sbb
xchg
mov
cli
xchg
dec
loop
in
xchg
into
repnz
add
lret
inc
cmp
insl
into
mov
jbe
dec
out
mov
inc
xor
push
aad
pop
stos
jmpw
pop
or
lods
test
mov
or
mov
dec
cs
add
scas
pop
push
xchg
stos
mov
iret
add
imul
mov
inc
mov
jb
xor
sti
ljmp
sbb
fcoml
mov
ljmp
stos
stos
jecxz
fmul
imul
js
push
push
lods
inc
dec
or
lret
mov
sarl
adc
cwtl
mov
xchg
mov
int
ljmp
aas
sbb
adc
xchg
sarl
xchg
pop
push
test
pop
icebp
inc
imul
add
pop
repz
aaa
aad
je
std
aad
aad
adc
xlat
sub
xchg
mov
lods
lret
cld
into
or
scas
adc
gs
xchg
jle
add
and
div
mov
xor
pop
and
in
pop
lcall
mov
dec
loop
adcb
push
rep
push
jmp
sti
fidivs
fistpl
push
testl
pop
or
in
pop
add
aaa
pop
jle
push
mov
mov
icebp
xor
scas
push
sti
inc
xchg
fdivr
sbb
std
adc
or
shr
add
and
jmpw
lcall
push
pop
scas
lock
loope
adc
xchg
mov
fsubrp
mov
or
or
mov
ljmp
aas
es
or
lock
dec
arpl
and
xchg
jno
leave
clc
adc
scas
jmp
cmp
xor
add
rcr
mov
mov
xchg
push
jle
in
mov
lock
enter
ret
rcrb
pop
sbb
sarb
adc
fistl
cmp
adc
dec
jge
pop
scas
arpl
mov
sbb
sbb
or
stos
inc
cmp
and
push
pushf
mov
push
mov
aas
and
mov
call
or
mov
adc
addr16
mov
je
aas
cli
stos
xor
jns
lcall
popf
lods
jge
sbb
jle
pop
adcb
push
or
pop
enter
inc
int
inc
hlt
cmpsb
mov
add
xor
jmp
add
cmp
pop
fisubs
aad
sti
pusha
jne
mov
aaa
push
inc
xor
inc
fwait
cs
dec
mov
and
fldt
in
in
testl
stc
push
lahf
sahf
jns
roll
xchg
sbb
dec
ss
sti
aam
mov
mov
scas
or
cmp
jb
dec
cltd
stc
cmc
pop
sub
loop
lock
dec
bnd
xor
mov
shrb
add
outsb
mov
jno
mov
xchg
in
stos
fwait
hlt
add
dec
enter
aaa
stc
adc
push
jge
dec
or
call
pop
daa
ljmp
shrb
and
out
cmpsl
addl
jmp
loop
rolb
in
pop
gs
jmp
leave
cltd
cmpsb
dec
cmp
lahf
movsb
xchg
scas
aad
cmovl
pop
cmc
mov
fistpll
mov
cmp
xor
fdivs
dec
jns
mov
scas
lcall
or
scas
inc
pusha
or
testb
aas
pop
scas
sarl
imul
mov
adc
data16
cli
xchg
xchg
clc
dec
adc
fcmovu
dec
push
inc
hlt
mov
xor
sub
not
idivb
add
mov
pop
mov
test
add
fidivs
xor
mov
test
sbb
movsb
dec
xor
xchg
mov
test
adc
xchg
cmc
sub
out
in
mov
insl
cmc
cwtl
lds
mov
dec
jge
movlps
jbe
fisubl
leave
pop
mov
mov
mov
movsl
cmp
ret
aaa
sub
pop
and
mov
inc
int
mov
jmp
dec
repnz
aam
insb
test
ficoms
cmp
xchg
mov
jmp
cmp
jmp
and
push
push
mov
insb
xor
out
push
jmp
movsl
mov
cmp
sbb
xchg
or
add
popa
outsl
jge
and
leave
insl
fadd
mov
cmp
dec
jnp
scas
xchg
adc
xchg
dec
mov
push
and
fistps
testb
scas
jnp
add
in
pushf
jne
mov
shlb
ror
sbb
pop
xor
int
mov
cmp
aaa
and
cmc
je
xor
ds
dec
xchg
std
mov
jg
roll
lahf
push
lret
test
pusha
aaa
cmpsl
mov
fsts
sub
fcomp
hlt
ds
pop
nop
dec
insb
mov
call
add
fidivrl
adc
mov
dec
mov
mov
and
or
pusha
mov
and
addr16
lea
imul
mov
cmp
shrl
jo
lret
push
addr16
fistpll
movsl
xchg
psadbw
sbb
cmp
aas
adc
orb
or
hlt
adc
pop
inc
aad
pop
pushl
or
and
jbe
push
or
xchg
mov
jge
scas
arpl
test
adc
in
sub
popa
fisubrl
mov
jp
mov
push
pop
and
jmp
scas
rcll
stos
add
push
insl
mov
arpl
fists
cli
jge
mov
xor
adc
push
fcoml
mov
pop
cmp
add
dec
gs
and
pusha
pop
sub
add
add
dec
cltd
jne
fsubrl
mov
cmpb
mov
in
pop
pop
nop
pop
rol
shl
bound
adc
push
int
push
cltd
xor
dec
pop
lcall
mov
pop
fcomi
es
jno
mov
mov
push
cmp
jl
xchg
sub
dec
aad
add
pop
nop
out
or
in
push
adc
inc
inc
mov
xor
xor
adc
push
mov
cltd
dec
dec
cld
mov
and
cmp
jbe
aas
xchg
out
jne
and
in
je
popa
mov
jmp
xchg
fbstp
jnp
jl
push
mov
sti
push
imul
je
cmp
and
pop
les
xor
lea
mov
add
jbe
mov
mov
mov
stc
mov
lret
loop
mov
cmpsl
subl
mov
popa
outsb
push
mov
xor
ja
lea
sbb
mov
xlat
jae
test
test
cmp
mov
or
mov
sbb
sub
out
mov
inc
inc
inc
pop
repnz
arpl
jno
ret
sub
shrl
dec
dec
sub
or
shr
add
adc
add
cmp
mov
out
sbb
test
adc
fbstp
outsl
stc
push
stos
dec
pop
call
pop
sti
outsl
push
sub
dec
ss
lcall
cli
pusha
stos
imul
mov
aaa
out
clc
mov
xor
pop
stos
in
scas
inc
fldt
push
mov
ja
add
sub
mov
es
dec
cmp
shlb
pop
xchg
jge
jecxz
push
push
fldln2
pushf
add
bound
loope
mov
pop
add
repnz
inc
data16
jge
rcrb
push
repz
mov
adc
dec
adc
jmp
pop
xor
or
inc
and
sub
sbb
int
adc
xor
and
daa
cmp
scas
fmull
dec
fucomp
mov
jae
cs
inc
aas
ja
push
stos
xchg
js
push
ljmp
adc
jg
loopne
push
in
aas
push
mov
xor
mov
leave
cli
jp
movsb
daa
pushf
and
stc
lcall
cs
lods
lea
dec
lock
adc
test
pop
repnz
lret
or
and
pop
sub
pop
mov
pop
add
iret
jns
in
mov
mov
sub
mov
fcmovnbe
xor
pandn
in
cmp
adc
rcrl
or
jne
jno
inc
fiaddl
jbe
call
add
in
push
sub
icebp
movsl
in
sbb
movsb
test
js
out
sub
outsb
xlat
pop
scas
enter
add
insl
dec
scas
in
in
inc
lea
sub
fsubl
or
test
test
aaa
cmp
dec
ljmp
aam
pop
inc
push
fnsetpm(287
mov
xchg
xchg
in
insl
aad
xchg
popl
add
mov
dec
and
testb
hlt
loope
adc
cmp
fidivrs
jbe
jo
out
cmpsl
jbe
sub
lea
cli
xchg
or
or
mov
aam
jmp
mov
sarb
push
ja
leave
faddl
stos
mov
xor
cs
add
sti
decb
cld
add
bound
sar
dec
dec
sub
add
mov
add
je
and
leave
xchg
and
pop
pop
jb
ror
pop
in
dec
jnp
call
mov
popf
xor
mov
mov
push
lods
nop
xchg
mov
dec
les
mov
fstl
push
ja
mov
dec
mov
dec
push
mov
sbb
std
out
dec
cwtl
loope
pushf
dec
aam
mov
and
mov
sbb
nop
lahf
jo
shll
sarl
ds
ja
mov
pop
out
jns
iret
in
mov
mov
enter
addb
ja
loopne
adc
out
lock
js
and
jnp
xor
into
jbe
fsubrs
shlb
sub
cwtl
icebp
loopne
mov
push
and
ret
ficomps
sub
jg
adc
jg
mov
inc
clc
xor
adc
mov
lahf
ss
push
cmp
or
cmp
mov
loop
xchg
nop
pop
pop
lock
adc
pop
int3
xorl
sub
ds
fldcw
adc
int
nop
stos
add
ds
dec
mov
push
jo
pop
push
and
pushf
sub
mov
out
leave
jo
sbb
inc
fsubrs
lret
push
or
mov
sbb
bound
sahf
jg
insl
jmp
mov
sti
push
movsl
adc
fsubl
push
inc
jl
in
ja
imul
jae
sub
mov
aas
outsl
add
cltd
test
inc
sub
mov
movsl
mov
fildl
sub
ret
out
sub
xchg
cmp
mov
push
xlat
mov
xchg
xor
in
xorb
lret
pop
cmpsl
jge
xchg
mov
mov
xlat
mov
pop
dec
push
xor
lret
movsl
in
pushf
or
loop
call
dec
xchg
sbb
rcl
jb
insl
pop
aaa
lahf
imul
and
xchg
inc
call
int
je
cli
sub
jmp
jecxz
pop
sbb
loopne
idiv
mov
addr16
fsub
pop
out
nop
mov
ret
out
mov
cwtl
lods
inc
stos
sbb
lahf
lods
ss
faddp
fs
add
pushf
lret
pop
jmp
or
pushf
or
std
or
pop
orb
inc
mov
gs
imull
addr16
stos
out
add
dec
sub
insl
mov
or
adc
inc
fcmovnb
dec
fists
mov
push
add
stc
lock
sub
lcall
mov
xor
insb
cmp
popa
cmp
call
cmp
xchg
lahf
mov
sbb
mov
xor
data16
cwtl
mov
outsl
xor
add
pop
lret
dec
mov
push
cmp
dec
cli
test
lods
aam
addb
or
sub
push
es
je
inc
push
mov
cmovo
aas
inc
in
cmp
sub
daa
mov
lret
mov
push
sbb
inc
lcall
and
clc
and
mov
sbbl
jns
xor
mov
push
clc
sbb
ljmp
divb
mov
arpl
int
or
xor
into
mov
jecxz
inc
push
cmpsb
stc
loope
fcoml
daa
movb
cmp
fildll
addb
dec
sub
lret
jno
sub
gs
jge
out
test
and
inc
test
jae
arpl
aaa
lock
push
out
cmp
arpl
xchg
xor
inc
cmp
sbbl
subl
jns
xchg
push
push
sub
pop
add
push
cmc
jle
std
imul
out
int3
push
loope
xchg
lret
jne
push
clc
or
mov
dec
mov
stc
ljmp
out
mov
cmp
pop
cwtl
das
cmp
xchg
push
sub
pop
ret
mov
or
sbb
push
sbb
int3
ss
xchg
out
ds
xchg
out
imul
adc
xchg
cmp
insb
add
sti
stos
and
or
xor
insl
mov
xchg
cmp
test
movsb
jmp
sbb
add
mov
hlt
out
push
push
inc
movl
jmp
adc
push
cmpb
fld
popl
jae
aad
and
ret
adc
in
mov
sbb
call
push
jecxz
aam
popa
xlat
cmc
add
mov
inc
push
repnz
aaa
stos
sub
pop
or
sbb
mov
lcall
jl
mov
sub
sti
jmp
mov
lret
or
mov
out
push
mov
bound
das
cli
mov
cmpsl
test
lret
gs
mov
imul
jne
lahf
pop
outsl
fdivp
mov
mov
fisttps
inc
clc
pop
fld
pop
push
push
push
fcomps
jg
dec
cmp
or
lds
jo
cmp
mov
hlt
inc
and
std
xchg
stos
dec
mov
pushf
dec
and
ds
sub
rolb
adc
stos
lds
dec
inc
bound
mov
sti
xchg
and
nopl
sub
xor
fstpl
sub
enter
sub
mov
sbb
cwtl
cld
insl
fsubl
les
notl
cmpsl
stos
push
xchg
and
js,pn
push
imul
daa
lock
and
jns
mov
shll
test
imul
icebp
pop
clc
into
sbb
jmp
lret
and
adc
mov
jns
movsb
inc
je
and
mov
add
dec
xchg
imul
outsl
fsubrl
cwtl
xorl
dec
arpl
pop
stos
mov
jno
and
repz
testb
repnz
dec
or
sbb
push
lret
flds
push
cmc
or
jbe
xor
std
and
push
pushf
sbb
mov
mov
jne
dec
pop
xchg
adc
xor
xor
scas
aam
mov
std
dec
aam
push
test
in
dec
loopne
or
test
add
mov
inc
call
test
addr16
cwtl
jae
lret
fldenv
or
lods
mov
lods
xor
xchg
cmpsl
loopne
fistps
mov
jns
add
into
idivl
mov
sub
test
fadds
lahf
jbe
xor
sbb
xor
mov
iret
std
loope
mov
shl
pushf
je
inc
push
ret
jmp
dec
pop
and
mov
jns
jae
cmc
cmp
cmp
adc
dec
ds
bound
cmpsb
faddl
sub
lds
xorb
in
jno
pop
movsl
cmp
jns
jae
push
ds
mov
mov
adc
jge
loope
nop
xchg
mov
xchg
out
and
jp
sub
xor
adc
mov
in
jle
ljmp
xor
aas
or
pushf
mov
lods
jecxz
mov
pusha
dec
jge
loope
pop
dec
adc
lcall
dec
sub
aam
test
dec
es
daa
mov
lods
and
testl
pop
repz
cmp
loopne
inc
xchg
add
imul
js
lods
xchg
dec
out
in
in
cmpl
or
addb
jae
ss
jmp
orb
icebp
jns
cmpsb
mov
int3
arpl
lock
insl
in
sbb
aad
movsb
cmp
fidivrl
mov
or
out
xchg
out
push
push
sbb
lcall
push
fldl
xchg
sub
push
sbb
jns
cs
adc
mov
je
leave
sbb
xchg
sub
mov
dec
mov
clc
mov
push
fidivrl
or
jns
gs
dec
xor
icebp
xlat
stc
push
testb
repz
ret
iret
int
aam
lock
mov
pop
daa
lds
or
insb
lods
and
aad
andb
int
adc
arpl
pop
test
gs
sbb
or
xchg
dec
push
cmp
cld
mov
and
scas
push
pop
ss
aas
rcll
xor
fcmovnbe
push
loope
addr16
rcrb
push
popa
and
mov
cmpsb
mov
cld
xchg
bndstx
mov
lret
adcl
nop
fbstp
xorl
push
jnp
out
aaa
gs
xchg
mov
jle
inc
ljmp
ret
mov
add
cmp
xchg
stos
push
dec
and
xchg
jl
sbb
mov
pusha
and
out
or
iret
call
repnz
push
pop
mov
sbb
mov
sub
cmp
inc
movsb
in
sti
push
push
fsubr
and
pop
mov
cmpsl
pop
sub
arpl
xlat
pop
outsb
test
jmp
js
mov
add
test
mov
push
fcompl
int
hlt
sub
inc
insl
sbb
xchg
push
mov
xchg
sub
push
add
cmc
mov
push
jae
jns,pt
inc
iret
pushf
push
mov
sti
inc
sbb
fcomi
mov
xor
fs
aaa
nop
lods
xchg
stc
fwait
dec
dec
mov
test
cld
push
faddp
pop
dec
fwait
lcall
pcmpgtd
mov
jmp
push
push
dec
test
jb
pusha
jg
sub
loopne
dec
ss
sub
gs
sbb
add
dec
imul
popa
and
sbb
sbb
inc
mov
jo
leave
test
mov
mov
aas
out
icebp
ret
js
out
add
fcmovne
std
out
xchg
add
pop
mov
cld
daa
inc
fcmovne
cmp
pop
jns
lcall
adc
ret
scas
ret
in
iret
push
arpl
lock
xor
ror
imul
rcr
add
aas
out
jb
cmpsb
cmpsl
mov
mov
loope
xchg
inc
jp
pop
dec
mov
mov
mov
js
cmpl
aas
mov
add
mov
mov
jae
dec
aaa
cld
push
and
push
sti
dec
inc
pop
xor
repnz
mov
arpl
push
ror
jb
popa
in
rolb
rcrb
repnz
lods
movsl
daa
lock
xor
js
lock
lds
jg
add
imul
inc
gs
pop
shll
jmp
movsb
inc
es
cmc
mov
loopne
adc
pop
popa
stos
in
cwtl
jae
enter
sti
cli
jg
sbb
pusha
mov
inc
bound
pop
sahf
fnsave
pop
add
inc
mov
jno
scas
popa
icebp
pop
sarb
rcll
or
adc
lock
fisttpl
sbb
in
pop
insb
test
jbe
xlat
scas
pop
cmpsl
mov
mov
lret
bound
mov
js
jmp
add
inc
mov
cmp
push
gs
aad
sbb
jne
mov
cmp
mov
jp
loope
pop
out
push
popa
out
pop
in
pop
roll
lods
shlb
stos
mov
or
lret
jmp
fcoms
cli
aas
add
js
fisubrs
sahf
xchg
aaa
int3
sbb
mov
rol
adc
loop
std
xchg
iret
adcl
xor
and
movsb
adc
je
loop
stc
fmull
pop
repnz
std
sbbl
mov
add
xor
stos
xchg
iret
gs
xchg
or
pop
add
xchg
jge,pn
jg
sahf
lods
movsb
sub
push
mov
out
xchg
cwtl
sub
mov
out
xor
ja
sub
addr16
popa
test
jno
scas
out
fldl
inc
cld
push
or
inc
mov
jb
jae
imul
lret
add
add
insb
inc
push
fwait
mov
int
lret
xor
mov
inc
je
inc
pop
ret
and
push
push
mov
fldenv
inc
push
out
fs
and
xchg
outsb
push
and
jae
push
mov
bound
adc
inc
js
mov
jle
sub
xor
push
call
mov
mov
jle
std
adc
lods
js
outsl
dec
sahf
stos
lods
inc
loopne
adc
add
and
dec
test
daa
mov
nop
pop
clc
loope
cmpsl
mov
shrl
repnz
into
push
and
adc
mov
lea
inc
int
dec
jg
lds
aas
dec
push
shll
xchg
sub
mov
mov
inc
xchg
pop
imul
in
mov
xchg
jmp
dec
loope
adc
or
daa
fnsave
or
lds
pop
mov
les
jge
jle
jl
add
in
lcall
cli
and
dec
dec
push
xlat
aaa
out
sub
jns
ficomps
dec
inc
clc
cmp
jle
xchg
pop
adcb
mov
sahf
fs
imul
mov
xchg
inc
sbb
dec
popa
sbb
dec
lods
jl
cmpsl
lods
into
sarl
sbb
movsb
insl
mov
pop
es
or
sub
sub
jbe
aad
pop
sbb
nop
mov
or
icebp
and
sub
and
in
and
inc
in
jp
cmc
or
xlat
push
sub
inc
jl
mov
cld
scas
fstps
movb
loopne
loop
or
xlat
xor
test
cmp
cmpsl
xor
push
cs
orb
repz
mov
imul
fildll
aad
sub
mov
out
sub
call
rorb
mov
pop
repnz
pop
add
sub
cld
push
mov
fcmovbe
cmp
les
test
sti
dec
mov
fcomip
lret
in
sub
push
mov
adcb
xor
dec
dec
xchg
and
std
cmp
outsb
jae
push
lods
dec
sbb
push
in
cmpsb
stc
repz
arpl
mov
inc
fistl
mov
mov
mov
cli
pusha
push
out
lcall
cwtl
push
xor
std
sbb
push
insb
lds
imul
popa
mov
add
fisttpl
movsb
cmpsb
mov
lcall
jne
in
ljmp
aam
fstps
push
cmpsb
daa
dec
mov
cwtl
jo
push
mov
cmp
sbb
inc
outsb
and
dec
cwtl
dec
lretw
ds
and
mov
push
imul
sarl
test
pop
aam
xor
sbb
jg
pop
add
gs
push
sahf
xchg
cmp
inc
xchg
mov
dec
jg
pushf
mov
outsl
enter
jbe
ljmp
repz
lods
push
aam
dec
push
popa
je
push
inc
inc
call
adc
mov
mov
fistpll
adc
cltd
adc
mov
icebp
pop
jg
test
leave
gs
push
sbb
jbe
repz
loope
inc
movsl
adc
pushf
sub
mov
add
xor
sbb
xchg
jge
stc
imul
mov
sub
inc
xlat
arpl
sub
adcb
xchg
and
outsb
iret
mov
or
sub
aam
cmp
lret
push
je
mov
test
and
bound
pop
push
xor
shlb
add
sbb
mov
push
push
ljmp
jno
fcomi
dec
dec
mov
xor
bound
xor
or
mov
push
cmp
loope
xchg
adc
jle
pop
stos
jne
add
test
add
insl
mov
xchg
imul
sahf
lock
call
loope
cltd
out
loopne
xchg
popf
stos
mov
sti
pushf
ficoml
lock
jnp
insb
push
pushf
sbb
add
xlat
lcall
mov
mov
push
mov
cltd
xor
scas
rcrb
xor
insb
imul
cld
rclb
adc
and
or
in
cmp
pop
xbegin
xor
outsb
inc
out
jnp
jle
add
test
stc
loopne
adcb
jno
and
inc
push
in
ja
mov
and
push
addr16
xchg
xchg
sub
sbb
and
sub
pop
inc
or
mov
xchg
jns
leave
bound
les
mov
popa
inc
aas
or
xor
cmp
push
pop
mov
dec
dec
cwtl
xor
fwait
sub
add
in
sahf
cmp
xor
and
pop
jge
push
shlb
mov
cwtl
mov
xor
mov
insb
cmp
sub
in
add
add
insl
sbb
and
shr
or
repz
loop
cmp
xchg
es
imul
pop
notb
loope
ret
adc
inc
add
jg
insb
bound
jb
jg
hlt
mov
fsubrs
cli
push
sub
lods
adc
jae
mov
repz
lods
lcall
das
mov
lahf
push
xlat
repnz
and
andb
mov
cmp
adcb
dec
mov
jg
loop
sbb
pop
inc
ss
ss
xlat
outsb
leave
pop
adc
cmp
push
mov
xor
xlat
fcomps
push
stos
and
mov
stos
stos
and
lods
adc
push
ror
inc
pop
iret
adc
inc
rcll
or
stos
ljmp
xorl
inc
or
loopne
gs
out
mov
loop
daa
repnz
iret
je
add
sub
mov
pushf
mov
or
fldenv
cmp
loop
mov
cmc
not
mov
les
cmc
cmpsb
push
jne
mov
out
cwtl
inc
notl
dec
sbbb
out
mov
xchg
sub
adc
in
mov
mov
pop
aad
xchg
jmp
leave
pop
add
cld
test
bound
addr16
push
jmp
xchg
fstpl
xchg
out
jmp
or
xor
test
inc
lret
inc
add
xorl
and
ret
mov
out
push
test
sub
aas
fnstcw
les
iret
lods
xchg
cmp
lock
arpl
cmpb
jg
xchg
sub
dec
mov
mov
popf
fwait
jmp
outsl
add
popf
and
add
mov
or
jg
je
lods
jb
mull
pop
scas
fisubrl
jne
push
mov
push
loopne
test
mov
stc
xor
mov
and
fs
clc
mov
fdivp
dec
cmpsb
add
pushf
mov
mov
imul
cmp
je
xor
arpl
adc
rclb
scas
push
fsts
addr16
or
les
lock
and
push
jg
dec
bnd
lods
xchg
mov
or
jecxz
xchg
xchg
sti
sbb
aas
push
mov
stos
enter
sub
shl
out
cld
notl
mov
mov
xor
dec
pop
xchg
xchg
psubusw
nop
mov
or
xor
fisttpl
sbbb
nop
mov
lock
cmp
shrb
push
mul
dec
bound
fldpi
dec
addl
scas
xor
popa
mov
push
lock
call
cmp
adc
aas
ljmp
fdivl
mov
push
or
push
cmpb
ret
jle
fisubrs
push
jae
add
or
and
shr
adc
inc
scas
jmp
mov
cmp
dec
out
enter
xchg
or
cli
movsl
cmp
pop
loopne
mov
push
pop
xor
dec
in
push
mov
push
xchg
add
xchg
mov
or
jmp
sub
pop
fldl
ds
xchg
test
or
daa
or
mul
jl
mov
popf
or
pop
or
or
jecxz
adc
adc
outsl
std
jle
das
push
arpl
loopne
mov
aad
xor
ret
jle
cmovo
scas
int3
push
adc
sub
xchg
cwtl
pop
out
sub
imul
jb
cmp
xchg
xchg
loop
jmp
or
out
and
inc
mov
add
adc
test
mov
das
xor
inc
sub
and
in
dec
or
fwait
insb
jge
cltd
mov
dec
mov
sbb
mov
popf
les
hlt
or
mov
xlat
insb
and
loope
mov
cmpsl
stc
cmp
jo
cwtl
adc
mov
jb
mov
mov
pop
add
dec
scas
xor
sbbl
lods
enter
jb
roll
shl
fwait
or
adc
outsb
subb
iret
cmp
xchg
leave
pusha
test
out
lcall
and
push
pop
inc
mov
movb
cltd
jbe
int3
mov
dec
mov
and
mov
pop
sub
adc
push
js
dec
mov
test
sbb
cmp
into
mov
push
inc
pop
into
pusha
mov
inc
popf
int
sbb
cmpsl
sbb
mov
inc
frstor
aaa
xchg
in
inc
cmp
mov
sbb
test
sarl
insb
xor
jb
inc
fisubl
aas
sbbb
xchg
adc
push
pop
mov
sti
cmpsl
sbb
xchg
lcall
sbb
data16
data16
negb
pushf
fnstenv
into
int3
loopne
clc
in
fimuls
scas
ret
sti
dec
dec
aad
add
mov
sti
xor
mov
outsb
push
dec
jae
adc
ret
in
xchg
lret
repz
or
mov
pop
shlw
mov
in
movlps
mov
rorb
fchs
insl
sbb
jae
cmc
movsb
incb
loop
popf
push
sahf
cmpsb
pop
dec
pop
push
lds
add
mov
sbb
mov
jecxz
push
xor
xor
fwait
test
sarb
mov
sub
sbb
jne
adcb
call
mov
adc
push
or
dec
push
nop
pop
xchg
sti
mov
mov
dec
jns
mov
inc
sti
mov
mov
dec
loope
andl
adc
inc
inc
arpl
mov
ja
pop
pushl
lret
notb
addr16
push
cli
fs
jno
pop
out
cwtl
xchg
andl
jbe
inc
fwait
inc
popa
repnz
mov
shrl
scas
inc
inc
fnstenv
lods
bound
and
jo
loope
add
sahf
sbb
push
mov
or
push
push
mov
test
call
cmp
movsb
outsb
jno
cmpsl
mov
mov
in
jp
mov
push
stos
loope
enter
push
inc
push
popa
out
xchg
jne
pop
je
shl
daa
jo
insb
cmp
add
mov
jno
repz
stos
inc
add
mov
and
fs
adc
scas
call
loopne
push
jmp
sarb
shrb
or
cld
xchg
sti
outsb
mov
sbb
and
cs
adc
and
into
pop
push
mov
pop
cmc
jp
mov
cwtl
push
fldt
or
popa
cmp
jbe
adc
sub
clc
roll
out
push
movsb
mov
jns
add
mov
je
es
push
fidivrs
mov
test
fsubrl
js
fimull
rcr
pop
push
mov
xor
mov
lock
or
pop
dec
addr16
or
outsl
inc
out
test
adc
cmp
sub
mov
lds
mov
jge
cmpsb
out
cmp
ret
jp
subb
mov
push
push
in
out
push
decl
xchg
fists
xor
js
fs
daa
inc
inc
mov
adc
push
ja
fwait
jb
and
adc
sti
fcmovbe
popf
sahf
adc
sbb
and
scas
cmpsl
pop
das
sub
stos
cmp
or
jp
push
cltd
xorb
cmpsl
daa
sub
mov
ret
jno
mov
mov
das
cmp
cli
std
mov
cld
cmpsl
in
pusha
pxor
les
jmp
dec
xchg
dec
ljmp
dec
pop
lock
divps
cmpsb
push
js
sahf
mov
push
adc
pop
pushf
ja
cld
inc
sub
cmpb
jne
daa
in
subl
xor
pop
jge
mov
pop
mov
test
das
ljmp
loopne
mov
aad
jl
sti
cmp
dec
push
xchg
int
mov
jmp
outsl
xchg
psllw
lret
cld
jp
stos
pop
push
cli
aam
fnstsw
fwait
int3
into
mov
and
jnp
repnz
gs
out
and
xor
fsubrp
fdivrl
cli
push
sahf
data16
xchg
lret
fnstcw
in
push
adc
or
jp
inc
gs
and
roll
gs
cmp
jecxz
mov
and
dec
fs
add
lds
sub
inc
iret
mov
push
push
lret
fistps
sub
push
shrl
xchg
xchg
pop
faddl
mov
adc
dec
iret
es
push
mov
xor
mov
out
insl
adc
adc
xor
data16
or
push
scas
mov
or
pusha
fstps
lcall
adc
ss
push
mov
fs
popa
mov
or
mov
add
ja
jno
test
add
sub
add
sbb
pop
sti
and
mov
cmpsb
inc
mov
add
fldl
inc
jmp
mov
fiadds
lcall
sub
bnd
test
sahf
push
jge
cmp
xchg
sbb
scas
cmp
cli
pop
imulb
out
notl
outsb
andl
lods
stos
push
sbb
push
mov
sub
or
negb
pop
scas
pusha
pop
or
popa
adc
iret
mov
pushf
repnz
jp
cmc
cs
jl,pn
insb
lcall
mov
stc
or
gs
mov
clc
and
push
cltd
movsl
pop
jmp
in
pushf
cli
mov
pop
jbe
int3
cld
test
in
cli
mov
mov
or
mov
shlb
shll
fstpl
adc
jle
das
subb
lds
cltd
test
sbb
loope
rcrb
jle
out
mov
cmpsl
jns
or
pop
fdivl
dec
out
mov
mov
jle
in
loop
mov
call
push
lret
cld
jno
popf
xor
xor
xor
enter
cmpsb
fwait
cwtl
fxch
pusha
iret
aad
jne
push
mov
test
shlb
inc
loop
and
push
fst
mov
int3
lcall
or
jge
mov
push
movsl
and
xchg
xchg
fsts
loopne
xor
mov
iret
jg
push
jp
push
mov
fbstp
enter
jmp
repz
out
js
mov
mov
jmp
mov
insb
bndldx
imul
jmp
fiaddl
cmpsl
dec
mov
ds
je
sbb
mov
sub
cmp
test
or
xor
rorb
lods
in
or
lds
jmp
test
or
stc
mov
push
pop
add
pop
mov
dec
loopne
inc
int
xor
jo
pop
cmpsb
in
xor
xor
adc
and
adc
enter
mov
fsubrs
lods
scas
and
mov
icebp
mov
jp
lods
inc
int
stc
xchg
pop
ss
movsl
sub
add
xchg
decl
xchg
stos
fcompl
test
testb
cmp
mov
add
repnz
jbe
push
les
mov
jb
pusha
mov
sbb
and
mov
mov
stos
xchg
dec
in
daa
aas
adc
xchg
and
pop
pop
arpl
mov
cwtl
pop
dec
adcl
mov
out
mov
mov
sbb
jecxz
daa
call
push
in
fcomp
sbb
inc
popa
xor
repz
xor
mov
gs
pusha
sub
push
mov
pop
adc
add
jg
test
mov
rcrb
rcrl
jge
js
outsl
jo
push
jecxz
fistps
xor
lgs
sub
std
inc
loop
in
loopne
inc
xlat
cmp
out
sub
pop
adc
or
push
fdivr
lcall
js
push
mov
push
xor
out
jno
dec
mov
popa
out
push
popf
cmp
cmp
fwait
out
rorl
adc
out
xchg
scas
aad
mov
pop
repz
dec
and
xchg
dec
and
or
add
inc
enter
adc
sbb
add
in
adc
dec
mov
es
mov
mulb
test
test
shl
popf
fidivrl
lock
push
sahf
push
pop
ret
xor
insl
into
js
mov
mov
and
clc
les
jnp
adcb
pushf
ss
outsl
out
fstl
add
lods
jmp
or
jae
in
add
test
lret
adc
jb
daa
mov
push
test
mov
mov
lcall
mov
xor
jae
in
xor
dec
mov
cmp
mov
test
dec
jb
mov
and
mov
std
dec
leave
sbb
clc
and
inc
pop
int3
lods
jle
insl
mov
push
mov
fisttpll
adc
frstor
mov
movsl
shl
cwtl
pop
and
jno
dec
and
jle
test
or
xchg
dec
add
jnp
adc
jge
in
nop
and
adc
mov
mov
adc
jae
int3
lods
pop
add
xchg
lcall
ds
iret
dec
or
out
mov
and
xchg
sub
bound
pop
sbb
jmp
fidivrl
stos
jmp
sbb
inc
out
xchg
dec
jg
add
xchg
sub
pop
pop
sysret
jmp
push
cltd
pusha
jae
aas
push
ret
cld
mov
xor
or
sub
or
jnp
inc
fldl
and
imul
xor
cmp
lret
cli
mov
cwtl
sbb
fs
mov
xchg
push
xchg
push
push
xor
push
pusha
popa
cli
pop
sbb
icebp
sbbl
xchg
lahf
mulb
test
cs
xchg
icebp
cli
cmp
stos
cmp
call
fcmovu
add
icebp
inc
and
test
sbb
mov
and
rorl
lock
mov
sti
push
dec
cmp
out
mov
mov
fldenv
dec
loopne
dec
out
inc
or
ret
js
dec
das
ret
cmpps
dec
leave
test
pop
add
fists
lret
jl
dec
mov
xlat
mov
xchg
mov
lods
inc
or
xchg
adc
lret
cli
jge
mov
fldenv
mov
add
inc
js
cmp
jbe
mov
fwait
xor
sbb
mov
push
jnp
inc
aas
in
mov
cmpsb
push
inc
mov
out
insb
das
mov
dec
insl
inc
std
ds
add
xlat
in
jmp
pop
test
nop
jns
push
int
sbb
sbb
arpl
cmp
leave
jb
fidivrs
xchg
mov
icebp
out
in
sub
sub
jge
xchg
mov
push
adc
into
or
cli
push
call
aaa
gs
xor
inc
pop
popl
sub
rcl
add
test
xchg
mov
xchg
ja
into
xor
sbb
inc
in
and
xor
inc
arpl
and
dec
push
aaa
push
out
dec
loope
fdivrl
add
cmp
ret
push
pusha
in
shlb
insl
adc
mov
out
adc
xor
mov
sub
je
mov
cld
sub
ja
mov
cmp
dec
or
xor
loope
inc
popf
xor
and
xor
mov
lret
xlat
shl
mov
ss
sbb
xchg
pop
pop
add
addr16
cmp
mov
adc
jne
hlt
pop
adc
xchg
xchg
jae,pt
or
jmp
jnp
lods
or
sub
insb
dec
pop
xchg
es
fmull
dec
cmp
popa
sbbl
decb
jns
cmp
into
pop
sub
imul
fdiv
mov
cmc
js
lahf
and
test
cltd
loope
leave
jb
adc
mov
in
testl
inc
icebp
push
and
cs
lcall
and
cli
outsb
sbbl
call
das
mov
je
dec
pushf
mov
jae
or
mov
lock
ljmp
jg
pop
or
les
lds
and
scas
addb
out
inc
loopne
cltd
push
nop
mov
int3
push
loop
add
mov
jae
xor
leave
inc
and
and
out
popa
ret
inc
stos
icebp
cld
in
outsl
repnz
out
inc
xchg
pop
lahf
cmp
sbb
ds
dec
jo
and
dec
jno
mov
test
mov
loopne
mov
imul
mov
aam
jmp
ficompl
adc
jns
mov
ja
test
xchg
test
bound
xchg
ds
sti
dec
lea
loope
xor
pusha
out
fstpt
pop
mov
mov
and
mov
aaa
inc
mov
jmpw
push
push
mov
inc
cwtl
cmp
and
sub
pop
jmp
in
mov
push
daa
jp
adc
ds
ds
add
test
stc
in
cmp
orl
loopne
das
mov
je
mov
xor
add
repnz
repnz
cld
sti
inc
mov
sbb
pop
pusha
sbb
jg
sbb
leave
xchg
ds
mov
sub
cmp
add
jecxz
mov
and
inc
mov
sarl
xchg
std
xor
mov
pop
push
jecxz
in
scas
and
pop
push
add
and
imul
aad
sub
lret
xor
push
out
add
lret
sbb
jo
aad
mov
cmpsb
cmp
inc
mov
jo
out
xchg
push
lock
loope
jns
iret
cmc
ret
nop
lret
jo
call
call
jne
mov
or
lret
dec
jge
inc
jb
ljmp
jnp
outsb
cmp
mov
imul
es
pop
fucomip
push
inc
ss
aas
repnz
inc
scas
dec
add
sub
inc
and
jbe
jno
into
push
mov
push
fiadds
rcll
and
mov
lcall
in
in
mov
mov
cmp
repnz
roll
push
call
inc
mov
jl
jns
or
fadd
mov
mov
ret
mov
pusha
out
outsb
daa
pop
test
enter
cwtl
xor
ja
sub
inc
ja
and
fs
and
push
push
loop
cmc
das
cmp
push
ret
iret
inc
cmpsl
int
mov
test
fbstp
icebp
mov
sbb
cmp
lods
or
cmpsb
lock
cltd
loop
inc
adc
insl
push
sbb
ret
arpl
mov
jle
insl
lcall
sub
sti
push
stc
insb
jne
sbb
pop
in
scas
bound
pop
or
and
stc
arpl
jmp
xor
push
adc
and
lock
lret
push
mov
xlat
call
fldcw
xchg
rol
mulb
and
arpl
adcl
ss
adc
fsubs
rep
sub
dec
mov
mov
insb
cmpb
loope
xchg
das
cmp
pop
xor
push
je
adc
lcall
sbb
arpl
mov
lcall
enter
dec
daa
inc
bswap
lcall
rol
loopne
pop
cmp
inc
ret
je
js
or
push
test
test
repz
nop
aad
add
es
or
add
test
movsl
fldt
les
mulb
pop
ds
pop
imul
sbb
shr
and
lods
mov
subb
aam
pop
xchg
divb
cs
sidtl
jle
fsubrs
enter
sub
sbb
mov
pop
dec
in
jmp
cmp
mov
fwait
sti
and
lods
jmp
cmpl
test
cltd
jnp
and
mov
add
daa
repnz
aas
aas
push
adc
xorl
xchg
rcrb
test
xor
or
mov
jmp
xchg
lods
xor
jo
push
test
je
adcb
mov
dec
push
jb
pop
aam
movsl
mov
xchg
push
push
out
scas
mov
dec
mov
flds
fwait
add
or
push
sbb
mov
imul
cmpsl
or
adc
cmp
mov
les
mulb
jg
js
pop
mov
pop
pop
loope
icebp
mov
movsb
and
in
lret
shl
cmc
imul
xchg
sbb
sub
ret
mov
sbb
test
ds
loopne
nop
cwtl
das
add
loop
push
ss
inc
or
sub
fbstp
bound
ja
jecxz
leave
pop
idiv
pop
imul
in
jne
insl
imul
lods
and
push
jge
shl
cli
pop
test
aam
in
pushf
jmp
cltd
xor
xor
aas
enter
cltd
push
cs
jmp
scas
aaa
mov
cltd
or
test
cmp
pop
out
std
sub
push
and
dec
jns
jmp
xor
or
lret
es
mov
lods
das
icebp
clc
push
ljmp
or
adc
cmpsb
add
lds
adc
sbb
inc
xor
fwait
cld
xor
mov
xor
hlt
cltd
push
mov
push
mov
std
cli
xchg
jmp
jo
mov
xor
xchg
loop,pt
je
ss
outsl
sub
push
je
insl
sub
lret
js
add
cmp
stc
sbb
xchg
xlat
push
repnz
ja
rclb
dec
mov
fidivl
sbb
jmp
mov
and
das
imul
add
pop
mulb
mov
sbb
loop
sub
stos
ljmp
jo
les
test
xchg
push
aas
int3
out
test
pushf
pop
fnstcw
pop
and
dec
ja
cmp
mov
xchg
jp
push
jge
pop
or
shrl
or
inc
fcoml
mov
fadd
icebp
lock
andb
or
sub
pop
dec
lds
aas
adc
ss
ficoml
fwait
rorl
xchg
mov
shlb
loope
dec
gs
pusha
test
push
mov
push
xor
insl
bound
fiaddl
lea
and
and
xchg
push
xchg
fsubrl
and
gs
fadds
xchg
mov
into
jno
inc
fincstp
jne
add
cmp
xchg
pop
xor
cmp
mov
dec
mov
xchg
add
orb
repnz
mov
sub
pop
ja
add
scas
loop
rolb
add
jbe
add
jecxz
xor
mov
test
aas
fidivl
mov
add
push
adc
xchg
call
mulb
or
xor
and
mov
mov
jb
lret
pop
mov
enter
xchg
mov
and
xlat
mov
jmp
andb
fisubs
inc
dec
sbbl
cmp
push
dec
out
call
jns
sub
inc
inc
mov
jb
frstor
inc
inc
rorb
and
outsl
jo
lahf
stos
and
push
adc
add
dec
into
stc
and
fstpl
dec
mov
jg
jl
push
shr
iret
pop
xchg
fs
movsb
cmp
xchg
sbb
aaa
hlt
push
push
or
mov
push
xchg
jmp
add
jo
lds
mov
xchg
push
inc
pop
inc
in
in
push
and
in
cmp
mov
push
imul
idivb
or
pop
mov
loopne
jno
addb
imul
subl
cmpsl
out
adc
mov
in
andb
jno
mov
inc
int3
inc
xlat
xlat
xchg
mov
pop
adc
xor
mov
mov
cltd
repz
lret
mov
testl
or
jg
test
sub
add
in
mov
add
call
pop
inc
fdivrs
or
cld
pusha
mov
daa
stc
daa
xchg
imul
icebp
movsl
sub
out
jp
dec
dec
mov
ja
jecxz
jae
dec
fcompl
lret
ret
cmp
inc
aas
push
pop
cmc
inc
dec
mov
cmp
jae
jno
test
xchg
mov
std
push
mov
sbb
test
sti
push
sub
int3
and
mov
sbb
outsb
out
inc
arpl
push
mov
inc
jb
out
lret
lds
repnz
sub
adc
mov
xchg
cmp
das
adc
scas
inc
loope
popa
cmp
add
dec
mov
mov
mov
mov
inc
stos
push
out
dec
inc
and
mov
pop
push
mov
mov
scas
dec
dec
icebp
roll
daa
fcomps
sti
mov
les
and
pusha
rcrb
pop
push
lret
jne
outsl
imul
adc
lock
ret
add
add
mov
movsb
cmp
gs
adc
addb
cld
xlat
xchg
cmpsb
jle
add
fs
sub
cmp
js
lods
mov
loopne
movsl
mov
insb
push
into
cmp
sub
aaa
inc
sub
push
aad
mov
daa
addl
and
les
mov
push
xchg
aam
ds
mov
popf
pop
jo
lret
cld
push
mov
cmp
mov
and
xchg
add
add
pop
sbb
adc
cmp
call
push
xchg
jno
jb
popf
jne
dec
push
cli
fdivrl
cmp
jae
xor
outsl
lret
xor
loopne
sub
sbb
aaa
push
push
fdivl
xchg
ret
mov
jns
lods
stos
scas
add
cmp
mov
push
sbb
and
pop
repnz
ss
shlb
cmp
xchg
stc
inc
or
mov
rol
fwait
or
mov
cwtl
gs
and
dec
jne
xlat
nop
add
jne
ds
dec
repz
push
adc
js
lea
mov
sub
repnz
or
jb
fistpll
push
xchg
or
movsl
ljmp
mov
fadds
xchg
xor
or
sbb
scas
fldenv
pop
outsl
cmc
push
mov
insl
cmpsb
mov
mov
xorl
jge
stc
out
or
daa
adc
movsb
xchg
sub
movsl
xor
fildl
or
movsl
cmp
mov
xor
pusha
cltd
xchg
ljmp
jno
mov
mov
dec
shll
pop
mov
in
loope
cmpsb
xor
xchg
outsb
push
insl
sbb
pop
fsubr
sahf
pop
and
subl
adc
out
lret
arpl
and
mov
sbb
mov
xor
and
push
jne
inc
sti
inc
mov
jbe
pushf
lret
es
test
in
and
sbb
inc
sub
scas
mov
hlt
and
leave
outsl
push
mov
inc
lods
lea
push
ljmp
push
test
cltd
or
test
push
cli
push
pop
mov
loope
into
mov
sbbl
pop
nop
stos
add
jg
sbb
mov
and
add
cmp
test
inc
push
shll
iret
mov
popa
andl
in
jmp
mov
gs
movsl
push
jmp
jae
mov
mov
in
mov
cmc
jl
dec
xor
jbe
dec
dec
jns
mov
out
cmc
pop
adc
js
ret
insl
stos
inc
sbb
dec
cmc
jne
mov
jns
test
test
ret
bound
xchg
mov
sbb
mov
outsb
nop
sarb
ficompl
xchg
outsb
mov
pop
loopne
fiaddl
in
sbb
pop
mov
sahf
data16
sub
imul
clc
push
lds
jecxz
add
or
sti
mov
daa
jge
mov
int3
inc
stos
push
jge
in
mov
out
lcall
idivb
sbb
nop
adc
xchg
sbbl
mov
addl
or
sub
jl
in
push
bnd
jle
std
lcall
sbb
std
aas
arpl
fdivrl
jo
jno
mov
andb
sub
lods
lods
in
scas
icebp
repnz
pop
xlat
sbb
cs
mov
iret
arpl
push
fiadds
clc
push
fnstsw
test
call
sub
fidivs
add
xchg
cmp
sahf
mov
mov
fcmovnu
adc
xchg
mov
addr16
flds
xchg
add
call
mov
mov
sti
jb
insb
mov
cs
dec
call
fnstcw
push
mov
sbb
je
daa
mov
xor
inc
test
jmp
test
test
pusha
cmpsb
adc
sbb
mov
push
aad
popl
xor
jb
push
push
cltd
fisubs
addr16
aad
addr16
cmp
cmpsl
lds
mov
pop
test
sbb
in
movsb
sub
stc
leave
daa
jo
popf
jns
lcall
push
sbb
add
mov
jl
push
sub
mov
imulb
sub
cmp
dec
rcll
lahf
cs
sbb
pop
sarl
pop
and
lret
dec
jge
adc
and
cmc
cld
sbb
jge
mov
adc
jb
outsl
mov
add
inc
bound
mov
cmpl
mov
lods
inc
data16
mov
xor
mov
leave
nop
into
cmp
sti
pushf
dec
mov
ret
pop
xor
bound
xor
inc
inc
lods
js
mov
es
clc
xor
pusha
andb
in
adc
scas
stos
fstps
push
cmpsb
aas
mov
loope
xchg
xchg
int3
or
xor
jns
push
pop
sbb
lock
inc
push
push
scas
std
xchg
ja
pop
cmp
fsub
pop
into
movsb
daa
sub
xor
popa
xchg
shr
js
stc
lea
mov
iret
mov
lcall
inc
and
lea
loope
ret
and
jnp
into
sbb
js
mov
loop
jnp
and
dec
push
pop
leave
pop
jne
mov
loopne
push
or
ret
out
aam
or
rcrb
fwait
push
adc
nop
pop
dec
lea
cmp
sbb
hlt
popf
sbb
push
out
inc
dec
adc
jmp
scas
push
imul
inc
movsb
gs
shrb
out
pop
bnd
jno
push
jmp
int3
inc
jmp
jns
mov
add
imul
movsl
fcoms
sub
shrl
push
repz
push
push
sarb
xchg
cmp
and
test
xchg
inc
movsl
xor
dec
std
sahf
andl
cltd
xchg
sub
aad
aaa
add
mov
cmpsb
inc
add
jge
loopne
sbb
lret
add
mov
push
inc
ss
or
jo
sub
stos
jmp
push
mov
add
xlat
sub
jbe
ret
jno
sti
or
sub
pop
in
mov
das
aas
push
int
adc
jmp
les
fcmove
sub
hlt
inc
fsubr
out
mov
dec
adc
lods
mov
add
jns
jge
sub
lea
mov
dec
push
inc
cmpsl
dec
lcall
outsl
aad
movsl
mov
into
pop
ljmp
mov
test
loopne
or
mov
mov
insb
add
je
mov
adc
jbe
xlat
call
pop
pop
xlat
lods
test
mov
test
add
pop
stos
jmp
mov
cs
pop
enter
sbb
add
pop
scas
sbb
lock
movsl
jmp
filds
and
adc
jmp
mov
push
mov
sbb
fcmove
lahf
mov
push
cmp
cmp
mov
shr
mov
mov
imul
sti
and
jmp
leave
xor
aad
inc
fucomi
add
sub
clc
sbb
or
sub
adcl
insb
fisttpll
cmc
xchg
pop
sbb
cmp
cmp
jb
and
out
xlat
test
inc
inc
movsl
test
rep
pushf
movsb
sbb
xor
or
rcl
jne
loope
pop
cwtl
insl
ja
pushf
fsubl
mov
insl
shrb
cmpsl
mov
aaa
sbb
imul
gs
sub
incb
js
xorb
pop
out
sahf
imul
sbb
pop
jge
imul
mov
push
sbb
lea
stos
mov
mov
adc
xor
xchg
repz
cmp
cld
pop
out
inc
int
pop
jmp
mov
xchg
int
fwait
cmp
out
mov
jae
jp
in
cmp
punpcklwd
imul
push
loopne
push
cmpsb
inc
sbb
lds
out
add
jnp
divb
mov
addr16
dec
shl
addb
dec
insb
scas
hlt
xchg
adc
test
sub
ss
mov
xchg
pop
sbb
jbe
daa
push
dec
std
sar
inc
add
je
cmpsb
sub
and
mov
subl
jge
insb
bound
pop
sbb
mov
cmp
mov
xlat
movsb
repnz
in
cmc
mov
arpl
insb
lret
repnz
cmpxchg
and
sub
jmp
or
xor
or
inc
fs
sahf
push
mov
gs
out
lcall
cwtl
push
pop
pop
adc
xor
mov
pop
mov
ret
jle
and
sbb
dec
in
pusha
dec
xchg
pushf
or
add
mov
movsb
inc
fucomp
adc
xchg
btc
or
cmp
cmp
cli
insl
mov
in
out
in
aam
sbbl
flds
sahf
mov
pop
and
test
cmp
je
mov
data16
ret
decl
add
popf
jp
mov
mov
sub
sub
mov
cmc
adc
aas
std
test
add
divl
hlt
test
jecxz
xlat
mov
dec
out
gs
mov
stos
jl
cmc
pop
sbb
shl
outsl
push
rcl
pop
pop
sub
scas
cltd
jo
leave
mov
dec
push
or
movsb
mov
cld
stos
lret
rsm
and
mov
ficoml
daa
paddb
xchg
inc
pusha
mov
xor
push
call
xchg
rolb
shlb
mov
out
push
je
dec
mov
pop
out
lahf
dec
out
sar
jg
push
out
loopne
mov
jns
ret
shll
inc
insb
push
pop
out
imulb
sbb
in
in
fst
es
xchg
sbb
test
pop
shll
pop
mov
pop
in
loop
nop
loop
jle
mov
test
inc
test
inc
push
ficoms
inc
int
adc
shlb
sbb
pushf
xchg
pusha
xor
shl
hlt
inc
sub
shlb
movsl
cmp
xor
stos
call
or
cmpsl
les
mov
lcall
mov
aam
sbb
popf
stos
cmc
out
stos
sbb
and
inc
jae
adc
into
int3
das
mov
add
leave
xor
xor
fcoms
or
outsb
loope
int3
or
cmc
les
sub
inc
push
sub
mov
pop
cmc
jp
addl
stos
cmp
xchg
xchg
or
adc
push
cwtl
xlat
push
rcr
or
cmpsl
dec
cmc
cmp
cmc
push
xchg
sub
mov
mov
add
jge
sub
mov
cmc
loopne
daa
sbb
sbb
cmp
sbb
mov
in
pop
stos
mov
in
jns
push
fwait
movsb
jbe
shlb
mov
cmp
adc
aad
dec
incl
xchg
jbe
pop
addb
std
push
sub
int
mov
mov
push
adc
xchg
sub
fisubrl
cs
imul
jp
and
inc
gs
into
mov
pop
push
sbbb
pop
movsb
mov
cmp
push
stc
in
ret
lods
xlat
mov
adc
dec
and
dec
pop
push
push
or
imul
xlat
push
jmp
adc
inc
mov
arpl
xorl
sahf
cpuid
dec
rorb
mov
mov
imul
xchg
sub
cmc
sub
fldcw
js
testl
jb
mov
test
cmc
push
cmpsb
stos
mov
jp
pop
mov
mov
dec
pushf
adc
pop
push
imul
sahf
sub
jno
mov
into
jmp
sbb
push
mov
scas
sar
loopne
sbb
int3
jo
iret
xlat
movsl
stos
jbe
je
leave
call
in
and
push
std
xchg
decb
fistl
popf
dec
or
xlat
and
adcl
cli
mov
pop
ret
mov
in
mov
mov
push
cmc
mov
jg
cmp
mov
outsb
inc
jne
dec
push
stos
cmp
dec
lock
add
sub
jo
stos
clc
test
ljmp
lret
cmp
hlt
lea
loop
lahf
arpl
repz
jo
fcmovu
faddl
js
sbb
jb
mov
loopne
stos
aas
cmpsb
test
pop
jg
popf
inc
mov
fcmovne
popa
or
cs
mov
sub
sbb
or
mov
pop
and
addr16
clc
dec
ljmp
fildll
add
xchg
mov
or
stos
sbb
sub
sbb
lret
movsb
andb
loop
decb
repnz
enter
dec
data16
call
xchg
push
mov
lods
sbb
stc
sub
out
xchg
cld
or
cwtl
aam
dec
insl
and
shll
out
sub
adc
je
lcall
push
mov
add
outsb
push
in
mov
test
xchg
push
imul
xor
push
shll
loop
cli
inc
push
add
mov
repz
mov
sub
shlb
push
out
xchg
aam
lock
cs
xor
mov
adcb
push
and
aad
mov
scas
clc
cmpl
cs
mov
ret
xchg
sbb
dec
loope
mov
xor
arpl
inc
cmpsl
mov
mov
jp
adc
lahf
push
mov
sub
ja
fldt
cmp
xchg
gs
push
cmp
clc
inc
cmp
push
inc
fstl
pop
mov
mov
mov
push
fmull
sub
mov
inc
pop
mov
xor
push
ret
test
bound
jo
xor
sub
aam
fs
jmp
dec
mov
lock
or
cmpsl
ret
push
and
aam
mulb
pop
into
xor
or
add
lahf
xchg
and
cmpsl
mov
mov
xchg
sub
and
cli
xor
pop
clc
jae
and
jge
aam
fsubs
mov
movsl
stc
jne
fsubr
mov
std
leave
leave
sbb
and
mov
jge
adc
dec
ret
mov
mov
pop
fwait
hlt
push
in
fwait
stc
inc
push
sub
test
inc
xchg
nop
add
cli
test
cmp
out
into
call
mov
adc
pop
sahf
or
xlat
dec
jmp
jecxz
aas
mov
add
mov
popa
jle
dec
mov
jo
xor
adc
call
cld
ja
das
fdivrs
imul
cmpsb
andl
cmp
aam
stos
pop
pop
xchg
jge
xchg
cmp
rcrb
and
push
cmpsl
push
leave
mov
das
cs
jns
pop
fwait
pop
lods
cmp
add
dec
xor
jae
out
inc
sahf
xchg
jg
mov
inc
loopne
ficoms
ror
lcall
cwtl
sub
push
cld
lods
pop
sub
int3
dec
dec
gs
out
out
pop
dec
mov
mov
mov
ss
mov
hlt
int
or
mov
adc
xor
mov
xor
daa
mov
sub
stc
pop
mov
inc
lods
aam
rclb
sub
adc
faddp
xor
jge
jle
mov
gs
sbb
popf
jnp
mov
jne
push
out
ljmp
jg
add
inc
iret
jb
add
pop
movsl
out
fbld
mov
dec
je
sbb
aas
jns
fcmovb
insb
lea
xchg
mov
test
data16
ret
rcll
in
or
mov
pop
loope
or
mov
inc
jge
add
pop
jg
mov
ja
mov
mov
call
mov
push
aam
add
add
push
dec
and
cli
andb
jae
scas
lods
pop
jae
ret
repz
inc
and
cmp
adc
xchg
test
stos
mov
jns
js
lcall
hlt
xor
cmp
lea
pop
lea
mov
shll
decb
sub
or
xor
jp
and
xor
imul
push
aas
push
xor
sub
addl
mov
dec
scas
scas
outsl
mov
sbb
xlat
scas
mov
add
sarb
test
pusha
push
lods
xor
out
xor
and
mov
lcall
lods
lods
mov
adc
jmp
aad
dec
or
xor
in
out
inc
sar
jo
dec
push
pop
sbb
les
mov
outsb
sbb
push
and
cmp
popl
clc
mov
or
sahf
xor
test
mov
inc
push
jno
arpl
mov
popf
pop
loope
sub
faddl
cmc
lcall
mov
mov
mov
ljmp
stos
fiadds
xchg
mov
dec
ljmp
shll
jo
lea
dec
lods
sbb
push
lods
push
mov
mov
dec
lret
inc
pop
std
jo
and
and
add
faddp
add
fbld
out
xchg
and
repz
loope
lods
dec
shll
jo
mov
imul
jl
dec
xor
int
addr16
movsl
adc
pop
std
pop
stos
test
jno
std
pop
je
fistpl
cs
jge
push
dec
mov
pop
das
or
or
and
aaa
pusha
sahf
inc
fldl
data16
clc
add
pop
movsl
gs
jbe
mov
and
mov
push
sbbl
adc
sbb
mov
mov
cwtl
into
repnz
sub
leave
adc
push
negb
sbb
mov
stc
or
push
cmp
push
dec
and
lret
xchg
repnz
testb
xchg
jp
jp
cmp
jecxz
cli
cmp
mov
or
cmp
pop
lods
xchg
popa
daa
inc
inc
sti
outsb
lds
adc
popl
fadd
iret
mov
add
into
data16
stos
shl
fdivl
mov
jp
or
cld
popf
and
das
cmp
mov
mov
cmp
ret
xor
movsb
push
inc
ja
jg
iret
cwtl
lret
pop
adc
insl
decl
in
cltd
pop
cmpsb
mov
in
jecxz
pop
jns
add
call
scas
mov
and
shlb
es
ss
inc
icebp
mov
inc
fwait
sbb
mov
pop
push
outsb
mov
fnsave
add
mov
fsincos
sub
loop
cmp
out
inc
dec
and
jns
addr16
dec
cltd
stc
add
push
fists
adc
sub
push
push
leave
into
pop
pushf
xlat
ror
notl
xchg
xor
add
dec
xor
sti
shr
dec
icebp
or
xchg
loopne
outsl
push
adc
dec
loop
push
pop
test
mov
loop
jbe
mov
cs
test
push
in
sarb
inc
and
jle
loop
jne
mulb
jmp
sub
insl
and
sbb
notb
js
and
adc
js
call
or
xorb
sahf
adcb
fisubrs
fisttps
xor
jbe
call
ljmp
mov
aas
push
movsl
js
loop
pop
jmp
jecxz
cld
aad
dec
mov
sub
dec
mov
pop
lahf
insb
leave
je
in
pop
inc
or
sarb
outsl
movsb
ss
and
lds
xchg
dec
outsl
inc
sbb
sbb
dec
rclb
aaa
sub
out
sbb
adcb
xchg
out
subl
das
xor
pop
mov
shrb
push
outsl
daa
in
int
jns
enter
lds
les
mov
mov
dec
mov
hlt
xchg
sbbl
pushl
dec
push
adc
cmp
cmp
xor
sti
mov
loope
mov
arpl
cmp
dec
scas
ficoml
adc
les
mov
push
push
outsl
je
and
and
mov
sbb
sbbb
insb
int3
arpl
mov
pop
vxorps
adc
mov
pushf
das
hlt
test
shl
out
xchg
adc
mov
push
lahf
inc
rolb
add
push
shrl
sbb
adc
mov
bound
sub
xchg
cld
inc
int
hlt
pop
mov
ret
mov
pop
les
int3
out
outsl
and
dec
ret
mov
mov
out
ror
inc
ret
inc
aam
add
rorl
xlat
mov
aaa
pop
ret
inc
sbb
xchg
lret
mulb
cmc
mov
lret
sub
adc
data16
cmc
in
icebp
xchg
scas
out
cmp
sub
daa
adc
xchg
adc
in
lods
mov
loopne
push
sbb
cmp
cwtl
outsl
pop
inc
mov
mov
divl
xor
sbb
subl
jg
add
js
push
outsb
add
lret
stos
adc
mov
or
mov
fisttpll
lret
cltd
ret
fs
pop
and
push
mov
xchg
mov
mov
xor
xor
cmovae
mov
adc
shlb
or
jbe
push
test
lods
inc
stos
mov
xor
mov
pushf
pop
addr16
stos
mov
sahf
and
test
lods
ret
xor
ss
mov
aam
orb
cmp
shrb
movsl
push
mul
repnz
sbb
lock
adc
jns
stc
mov
sbb
jns
cmp
and
push
arpl
aaa
shrb
mov
shl
mov
cmp
add
sbb
sub
sahf
mov
fsubs
ret
jbe
lahf
push
cmp
push
sahf
cmp
out
mov
or
cmc
sbb
xor
xor
shr
jle
iret
lods
sub
xchg
xchg
and
xchg
pop
sbbl
out
mov
jnp
or
push
inc
fisubl
mov
fstpt
add
test
addr16
adc
pop
ret
push
sbb
std
inc
test
ret
je
dec
add
lahf
mov
fldcw
cmp
loopew
jp
mov
decb
mov
int3
andb
pop
xor
add
add
xor
hlt
xor
popa
repz
mov
data16
push
xchg
xor
scas
mov
out
outsb
inc
cmovge
push
in
xor
loopne
aaa
mov
shlb
push
mov
mov
shl
xor
fwait
loope
xchg
xchg
lahf
dec
mov
decl
push
loope
loope
fs
pop
in
sbb
push
add
adc
lcall
cwtl
pop
adc
mov
sbb
repnz
cmp
divb
jge
sahf
daa
cmp
mov
jae
imul
imul
xsha1
cmpsb
dec
lods
out
sbbl
repnz
das
mov
mov
pop
imul
add
movq
mov
jp
sbb
cmp
dec
add
sub
xchg
adc
js
jne
into
jno
jno
pop
xchg
scas
dec
xchg
mov
adc
nop
sub
sbb
add
sti
inc
das
adc
das
iret
push
jmp
sbb
mov
sbb
cmp
sbb
xor
cltd
adc
mov
xor
xor
cmp
repz
or
pop
adc
jae
outsb
mull
pushl
sarb
and
dec
es
pop
bound
iret
stos
cmp
inc
adc
and
add
outsb
adc
dec
sbb
or
push
je
cltd
lret
aad
dec
cmp
je
mov
jecxz
je
lds
shlb
xchg
rcrl
imul
loop
loope
fmul
dec
out
addr16
mov
xchg
sub
push
clc
sub
into
jp
jmp
xchg
test
inc
lods
add
cmovnp
cmpsl
popl
push
cmp
jp
mov
inc
repz
jno
sub
inc
incl
hlt
mov
push
movsl
xor
push
daa
mov
xchg
mov
je
loopne
popf
inc
push
dec
xor
enter
icebp
pop
pusha
dec
or
jl
mov
stos
xor
mov
lea
js
dec
and
mov
xchg
sub
and
aas
mov
lahf
stos
jp
mov
bound
lret
ror
fs
jmp
in
in
ret
dec
inc
fidivrs
mov
dec
xchg
das
and
fsubrl
popa
inc
cmp
ss
test
movsb
jecxz
ret
repz
roll
outsb
push
push
or
mov
xor
push
leave
sbb
add
gs
fdivrp
add
fiadds
xchg
jecxz
in
sbb
mov
dec
dec
loop
jl
repz
xchg
mov
jb
mov
sbb
pop
repnz
cmp
cmp
lret
das
out
daa
xor
enter
mov
inc
mov
stos
or
jne
rcll
int
mov
rcr
repz
mov
lret
lret
adc
jns
pusha
xor
jns
pop
push
push
imul
subb
outsb
jmp
sti
pushf
jno
rcll
data16
inc
leave
aas
cli
jae
adc
sub
jae
shrb
test
lods
and
push
dec
lods
js
mov
bound
shrl
mov
rolb
stos
add
mov
in
mov
xchg
sbb
pop
hlt
lods
mov
clc
xchg
cwtl
pusha
adc
mul
jle
cmp
incl
mov
call
outsl
pop
addr16
enter
mov
mov
dec
aam
sbb
or
add
nop
int3
and
stos
mov
cmp
inc
test
pop
mov
xor
lods
repz
loop
cmp
incl
push
xchg
xor
xchg
mov
fisubrs
out
push
lret
cltd
test
jbe
mov
pavgw
test
add
int
lahf
inc
and
mov
push
out
popf
mov
cld
inc
arpl
push
push
cltd
ljmp
inc
inc
sahf
add
dec
xchg
and
fsubrs
enter
and
mov
push
je
cltd
and
sub
push
mov
out
pop
or
mov
es
mov
test
dec
mov
jno
js
xor
lock
fnsave
push
and
pop
out
xor
pop
mov
dec
mov
xchg
test
sbb
es
xor
adc
iret
inc
popa
std
lds
adc
xchg
cli
sbb
orb
dec
out
lahf
push
shrl
xchg
sub
cmc
sub
test
pop
jb
sub
dec
in
mov
dec
add
pop
xchg
add
or
clc
popf
add
ljmp
or
mov
or
cmp
push
sub
pop
push
mov
icebp
push
xchg
xor
notl
in
jl
leave
jo
pop
lock
push
scas
fcompl
test
sahf
jbe
ds
subl
ficompl
mov
mov
aaa
pop
ret
xchg
dec
jecxz
jb
js
push
call
out
out
push
fldenv
xor
repnz
int
xor
repnz
or
lods
xchg
xor
push
or
or
sbb
jnp
mov
mov
sub
mov
hlt
jmp
stc
loopw
xor
pop
addr16
inc
lds
lock
mov
aaa
mov
pop
out
fs
into
inc
or
addr16
xchg
nop
lea
loop
mov
lods
push
int
jae
lods
xor
vpmuludq
push
sahf
inc
sub
push
shrl
or
mov
mov
mov
stc
shrb
cmp
pcmpeqw
out
shlb
pop
push
rorl
int3
mov
or
shlb
add
xor
sbb
jno
mov
andl
loope
adc
push
cwtl
outsb
xchg
xor
lock
loope
ret
iret
aaa
ds
shrb
mov
into
scas
xchg
popf
mov
push
or
or
jge
js
or
dec
dec
into
pop
imul
incl
mov
mov
cmp
scas
lock
sbb
ret
jae
imul
or
mov
insl
or
cmpsl
mov
sbb
insb
ja
add
into
and
mov
xor
inc
xchg
pop
mov
out
mov
cmp
test
sbb
and
or
sbb
divl
sbb
imul
fadds
mov
sarb
sbb
mov
mov
es
dec
jne
js
jecxz
and
cmc
push
sbb
cli
in
stos
lock
popa
repz
inc
inc
mov
adc
mov
js
test
pusha
mov
cmp
test
or
pop
or
mov
in
les
outsl
fcmovu
pushf
scas
adc
jmp
and
in
push
hlt
lahf
mov
dec
cmp
mov
sub
xchg
addr16
ds
mov
add
sbbb
mov
push
test
mov
insl
sbb
clc
nop
xor
pop
ret
arpl
pop
dec
loop
mov
popf
call
imul
dec
loope
or
pop
push
mov
out
lods
cmp
out
ret
ds
cmc
pavgw
inc
jbe
outsb
pop
iret
cmp
push
out
xchg
pop
pop
adc
mov
sar
daa
arpl
sbb
ds
cmp
mov
and
push
dec
mov
push
fisttps
xlat
push
cmp
xor
dec
mov
inc
loopne
lods
inc
test
jns
or
mov
push
xor
sarl
push
das
leave
adc
jge
xor
adc
and
pop
push
pop
mov
fcmovnbe
loope
movsb
dec
mov
mov
fstp
jns
pop
xor
dec
xlat
cmp
or
lcall
push
vmwrite
mov
popa
imul
push
xor
out
cmpsl
scas
jmp
cs
sahf
aas
mov
dec
mov
lods
inc
dec
adc
clc
loop
mov
add
mov
xor
push
pop
lds
addr16
lea
ljmp
es
rolb
les
lea
stc
mov
mov
sbb
pop
out
or
mov
adcb
addr16
sbb
cmp
mov
inc
inc
inc
fs
sub
into
stos
mov
xchg
xor
bound
sbb
sbb
sahf
jne
sahf
xchg
add
hlt
popa
adc
jae
xor
scas
or
cmpsb
jle
fsubrs
leave
cmp
jo
sub
dec
jb
dec
lahf
mov
jl
addb
pop
rcrb
cmpsb
push
cltd
loope
in
hlt
cld
xchg
es
sub
ds
es
jne
inc
or
and
test
fs
fwait
leave
sbb
mov
push
sbb
pop
cmpsb
fisubrs
sub
mov
loope
mov
bound
stos
inc
mov
nop
mov
sbb
pop
in
cmp
daa
aam
inc
mov
movsb
in
cwtl
mov
cmp
dec
xor
mov
cmp
cld
arpl
or
daa
insl
pop
add
cmpsb
jmp
jns
aaa
or
data16
imull
into
rolb
gs
mov
adc
insl
xor
leave
es
pop
std
pop
cmpsl
mov
cmp
jne
jo
sub
sub
push
test
push
cltd
pop
cli
adc
dec
jl
icebp
push
ljmp
cmpsb
ret
popl
xor
push
jo
ds
adc
cmp
and
xor
jne
lcall
and
sbb
sbb
add
and
adc
sbb
add
idivb
pop
cmp
aaa
ja
dec
loopne
pop
jmp
dec
loop
adc
adc
mulb
imull
adc
dec
dec
fld
test
jl
test
and
cwtl
mov
jle
inc
cltd
mov
pushf
inc
xchg
enter
scas
bound
incl
pop
jo
adc
mov
daa
aaa
fcmovu
daa
adc
sbb
pusha
lret
cmp
out
gs
xchg
daa
mov
add
and
stc
jmp
negb
push
popf
icebp
mov
cld
cmp
jle
add
sbb
jae
in
push
adc
mov
clc
loope
sub
call
sbb
out
xchg
push
xchg
dec
cmc
push
adc
cs
xor
insb
push
jae
jg
xor
dec
test
ja
negl
mov
dec
mov
out
xor
js
mov
cmp
test
repnz
mov
fdivl
adc
push
mov
dec
xor
xchg
addr16
movsb
in
jb
mov
jp
adc
notl
sti
jbe
xor
mov
lds
sub
ljmp
jecxz
mov
aam
mov
mov
cmp
std
pusha
push
mov
lock
mov
sbb
inc
int3
aam
add
fistl
loope
jl
int
xor
mov
push
dec
clc
ljmp
inc
xor
aaa
push
pushf
addr16
stos
jns
es
loope
add
jle
cmpl
roll
enter
fcomp
lods
inc
adc
adc
imulb
mov
outsl
loopne
repz
outsl
ret
jmp
or
mov
lea
mov
adc
loope
and
sbb
out
insl
loop
hlt
jmp
fcoms
gs
outsb
cmpsl
xor
mov
mov
sub
push
mov
pop
insl
add
je
pop
mov
shl
xor
popa
cmp
cmp
mov
fistpl
shrd
or
or
movsl
notb
mov
outsl
loop
mov
mov
arpl
lret
test
sub
data16
inc
cmp
and
push
lret
lods
daa
int
mov
pop
fcmovnbe
mov
mov
mov
test
bound
ds
fwait
pop
cltd
cmp
test
inc
mov
dec
adc
aad
testl
mov
pop
and
popf
mov
stos
lock
movsl
cmp
movb
ljmp
mov
mov
pop
mov
and
mov
int3
andb
je
cmp
fldenv
fmul
bound
movsl
xor
mov
mov
loop
scas
push
mov
dec
inc
inc
mov
mov
dec
inc
bound
roll
loope
push
pop
jnp
test
jno
test
scas
jns
ror
aaa
mov
and
pop
push
adc
out
xchg
dec
in
inc
pop
add
aad
inc
loope
js
mov
xchg
inc
push
jns
cltd
cmpsb
add
xor
test
lods
aas
lcall
sub
mov
mov
ret
js
jmp
push
cltd
movsl
lock
jp
inc
sahf
or
fadds
aas
cs
dec
push
jo
sub
mov
and
shll
lret
dec
jge
push
mov
addb
pop
and
xchg
mov
cmc
mov
ljmp
pop
in
jo
jb
in
mov
insb
stos
add
pop
jecxz
cld
mov
add
pop
popa
fs
jg
clc
and
sbb
gs
push
repz
sahf
adcb
jp
jb
insl
outsb
mov
pop
sahf
dec
ret
jmp
mov
std
pop
push
pop
or
int3
cwtl
das
mov
scas
dec
rcrb
cmp
sub
addl
pop
xor
mov
data16
fdivs
rol
mov
loopne
push
loopne
push
push
mov
mov
das
jmp
orl
cli
add
dec
and
and
popa
rep
mov
jmp
jmp
lcall
jns
out
push
cwtl
data16
lret
dec
in
mov
cmp
arpl
inc
sti
out
jp
daa
cmp
mov
lock
lret
std
int3
sti
or
ss
push
push
xor
jmp
ss
and
push
in
sub
je
xchg
mov
inc
sarb
out
loope
fs
test
lods
push
cmp
push
ret
mov
hlt
xchg
iret
das
stc
enter
out
int3
mov
sbbl
gs
clc
int
sarb
sub
pop
sub
jmp
popa
daa
ss
jmp
sub
xor
xchg
mov
xor
fistl
jbe
cli
scas
ret
jge
mov
mov
ja
cmpsb
arpl
cli
jne
push
and
mov
mov
mov
outsb
cmpsb
mov
lods
pop
lret
into
js
sbb
jae
bound
pop
adc
add
mov
leave
and
aaa
scas
push
mov
push
insb
adc
inc
mov
cli
xchg
sbb
scas
or
xor
jecxz
xlat
testl
stos
mov
repnz
in
jmp
jae
mov
cmp
inc
cmpb
sub
ds
xchg
adc
movsl
push
filds
jno
pushf
xchg
and
jg
or
out
test
lahf
mov
daa
or
and
int
add
enter
mov
mov
orl
push
sub
int3
inc
inc
jns
in
add
mov
outsl
iret
aas
fildll
sub
cwtl
sub
dec
fisttpl
mov
ljmp
pusha
mov
ret
mov
xchg
mov
jb
insl
adc
mov
or
add
xor
scas
test
scas
jb
leave
xor
jne
lea
or
mov
xchg
push
and
ss
iret
and
jge
std
movsb
dec
fs
push
ss
fadd
pop
push
dec
push
push
dec
das
in
popa
dec
sbb
jg
adc
adc
push
movsb
jg
push
lcall
or
xchg
inc
sub
lea
sbb
mov
jno
es
xchg
add
mov
in
std
ret
push
push
out
in
cmp
dec
mov
cmp
push
out
pop
sbb
push
push
pop
scas
xchg
cmp
pop
addr16
or
cmpsl
out
add
adc
mov
orl
xor
shlb
rolb
push
sahf
test
arpl
mov
mov
pusha
inc
sbb
cmpl
daa
or
lods
mov
lea
pop
mov
mov
rcr
dec
push
or
or
push
sbb
jmp
clc
or
lret
cltd
sbbl
lods
mov
into
movsl
jl
xchg
cld
gs
mov
push
clc
or
pop
push
in
add
push
movsb
arpl
in
test
or
xchg
or
rep
int3
outsb
dec
dec
pop
inc
std
mov
sub
push
popf
inc
rcrb
jb
lds
sbb
xchg
jae
and
mov
mov
inc
xchg
in
adc
bound
adc
mov
xor
jl
mov
push
inc
popf
add
inc
in
icebp
jnp
jecxz
add
pop
test
mull
nop
sbb
xor
push
rclb
inc
lret
sbb
aad
in
jae
jp
add
stos
jne
sbb
dec
pop
stos
mov
lock
outsl
int3
repnz
lret
mov
arpl
mov
shlb
dec
mov
scas
pushf
jae
into
into
popf
push
sbb
sub
dec
xor
pop
xchg
mov
inc
mov
jmp
inc
lods
pop
and
int3
jmp
push
sub
mov
int
lods
jo
imul
mov
movsb
movsl
dec
jecxz
insb
sub
jecxz
ret
cmp
pop
add
leave
repz
in
mov
adc
add
jmp
psadbw
pusha
loopne
cmpsb
pop
sub
jl
outsb
pop
or
pushf
or
mov
xor
movsb
push
sub
ret
rclb
push
adc
js
xor
or
xor
cmp
repnz
repnz
ja
cmp
pop
jmp
push
jbe
lds
and
push
jno
sarb
cmp
mov
movsb
imul
test
mov
cli
push
mov
loop
push
fsub
inc
sub
pushf
pmulhuw
ret
sahf
pusha
bound
into
push
and
xor
lods
imul
mov
and
cmp
das
stos
add
cwtl
mov
in
test
mov
mov
sahf
pop
adc
push
or
xor
cmp
cs
sbb
cld
je
push
sbb
dec
xchg
add
addl
clc
movsw
test
subb
xchg
repz
add
push
cmp
pop
in
frstpm(287
sbbb
sub
xor
cwtl
mov
and
in
daa
mov
pusha
push
xchg
sbb
mull
test
out
cld
jge
test
push
imul
imul
lods
cmp
test
test
pushf
scas
fdivl
mov
cs
sti
pop
insl
pop
xor
inc
fmulp
or
or
mov
push
sbb
mov
sub
add
test
cmpl
mov
mov
cmp
fildll
popa
push
orb
jnp
cmc
mov
fcomi
xchg
and
cs
test
ja
cld
inc
scas
mov
mov
enter
jle
enter
loop
in
and
adc
shl
or
ds
jp
idivb
push
ds
adc
sub
dec
jl
or
lock
ror
add
sub
mov
jae
ret
lods
cwtl
mov
popf
daa
lods
das
or
sahf
lods
test
in
pop
or
jmp
xlat
dec
in
sub
pop
cmp
addr16
icebp
sbb
ss
andb
sbb
xor
or
jnp
sti
lds
inc
inc
rorb
lods
je
js
lock
or
cmp
cmp
fwait
shl
xchg
mov
sbb
sti
out
mov
loopne
jo
aam
pop
pop
add
sbb
pop
mov
jecxz
aaa
mov
loop
inc
xchg
subl
dec
lret
or
dec
clc
cld
xchg
ljmp
jb
call
mov
stc
mov
and
push
or
in
pop
int3
and
and
loope
divb
add
xchg
aas
inc
xor
sbb
cmc
sbb
push
or
mov
out
inc
adc
pop
into
jge
js
dec
stos
lcall
loopne
mov
ds
dec
cmp
popf
adcb
pop
fiaddl
pushf
scas
pop
iret
sbb
aas
xchg
hlt
outsb
adc
clc
or
sbb
dec
sub
outsl
cmp
ret
xchg
jo
pushf
sub
dec
jno
pop
iret
fstpt
cmc
clc
out
ds
dec
popa
mov
loope
outsb
push
outsl
pop
mov
mov
outsl
pushf
sub
mov
pop
xchg
sbb
sahf
push
sbb
mov
shll
dec
cmp
dec
mov
ret
mov
fidivrl
mov
mov
int
add
aam
cmpsb
jecxz
test
or
call
or
addr16
loop
mov
push
or
adc
sub
scas
mov
inc
mov
add
aas
shrb
out
ret
dec
dec
push
jb
sub
jb
cltd
mov
push
rcl
data16
sbb
and
mov
fdivrl
pop
inc
in
xchg
jg
fwait
sub
andl
pop
push
cmp
test
mov
inc
mov
sahf
cmc
inc
mov
fistpl
or
addl
fidivrs
jnp
out
and
loopne
mov
add
lods
cmp
mov
xor
bound
addr16
and
sti
lods
jmp
mov
pop
mov
fwait
ss
mov
bound
and
lds
add
mov
sub
aas
pop
icebp
mov
fidivrl
out
mov
xchg
cmc
xor
lret
mov
add
and
arpl
decb
test
pushf
jno
xchg
jne
subb
lods
cmc
mov
mov
std
pusha
movb
scas
mov
xchg
adc
mov
adc
dec
xchg
push
into
xchg
mov
and
mov
gs
pusha
mov
add
and
mov
pop
xor
rolb
jl
ret
popf
mov
lock
cmp
xchg
or
pop
nop
dec
adc
out
inc
xor
push
repnz
stos
mov
mov
mov
jae
pop
pop
arpl
cmpsl
ret
hlt
or
mov
push
fldt
jno
scas
clc
out
sbb
dec
lds
add
or
pusha
test
mov
xchg
into
pop
mov
mov
in
leave
xor
out
in
test
repnz
imul
les
jl
mov
int3
xor
push
fstps
inc
push
js
xchg
adc
sbb
jae
jbe
mov
loopne
incl
inc
mov
jb
mov
scas
xor
test
cmp
cmc
aas
push
pusha
jns
xchg
jno
out
outsl
enter
mov
imul
xchg
cld
popl
cmp
loope
push
rclb
xchg
out
push
cmp
mov
in
test
outsl
pop
jg
mov
rclb
inc
hlt
pop
mov
sahf
pop
xchg
adc
cli
rclb
scas
in
stos
scas
lret
gs
les
dec
and
les
aam
sub
ffreep
push
call
adc
adc
inc
inc
fiadds
loop
inc
out
push
in
add
in
mov
mov
pop
pop
xchg
mov
lahf
jb
mov
cwtl
loop
fnsave
xor
xor
int3
fdivp
pop
add
into
int3
lahf
notb
push
in
jb
xchg
cmp
ja
fwait
mov
into
jecxz
add
xor
xchg
sub
ret
dec
add
loopne
sub
fildll
pop
push
push
mov
int3
jg
lds
imul
pop
scas
mov
mov
outsb
cli
xor
sub
js
sbb
fisubrs
jmp
or
lret
push
and
mov
clc
and
nop
xchg
inc
push
les
pop
ds
loopne
or
pop
xchg
in
cmp
jge
jnp
outsl
push
mov
loope
xchg
lret
push
push
packsswb
aas
mov
dec
lds
xor
fnstenv
push
pop
les
pop
cmc
bound
rclb
or
push
or
xor
into
dec
mov
xor
pop
push
inc
xor
fdivs
pop
adc
sahf
into
xchg
mov
xchg
xor
sbb
lret
cmp
gs
push
inc
xchg
hlt
mov
stc
popf
xchg
cltd
movsl
jmp
enter
inc
sbb
insb
enter
es
jbe
mov
fnstcw
rcr
fwait
mov
mov
les
cmc
xchg
subl
sub
xor
sbb
test
dec
sbb
fs
loopne
mov
add
pop
mov
popf
mov
mov
fidivrl
arpl
dec
push
xor
or
xor
jmp
loop
push
xor
inc
scas
push
fsubs
aad
cmp
inc
loope
leave
pusha
mov
or
mov
lret
pop
inc
gs
push
inc
push
xchg
cmpb
or
adc
lods
int
mov
fisubl
fsubr
push
or
pop
xor
jmp
lea
and
mov
xchg
mov
xchg
cwtl
aas
add
jecxz
and
aam
jecxz
mov
dec
push
push
and
adc
pop
pop
sbb
test
mov
in
xchg
gs
jb
jns
into
insl
mov
into
enter
jmp
mov
std
inc
cmp
add
xchg
hlt
ds
dec
pop
testl
mov
pop
frstor
stos
rolb
xchg
shrl
in
and
scas
inc
adc
mov
pop
pop
sub
mov
dec
xchg
cmp
xor
fstl
test
sbb
mov
and
pop
cmpsb
aaa
pusha
imull
and
int
stos
outsb
add
fistpll
scas
xor
mov
lahf
clc
jp
cmp
xchg
sub
shrl
cmp
fiadds
stos
cmc
cmp
f2xm1
push
ljmp
and
mov
dec
cmpsl
out
mov
jp
cli
out
jmp
dec
andb
shll
pop
sbb
insl
daa
cmp
mov
jecxz
or
decl
cld
jle
cs
std
inc
orl
mov
dec
xor
mov
or
mov
ret
push
or
js
cmp
or
int3
pop
pushf
cmp
adc
xor
popa
jb
cmp
pop
imul
cmp
inc
pop
mov
mov
cmpsl
sbb
mov
xorl
sti
mov
pop
movsb
xchg
pop
imul
scas
mov
out
mov
lret
aas
inc
jmp
mov
popa
xor
les
inc
in
xor
sbb
aaa
push
rclb
sub
cmp
dec
inc
dec
add
jecxz
cmp
sbb
test
repnz
pop
pusha
incl
cmpsl
xor
pop
faddp
clc
lods
mov
pop
sbb
adc
push
in
ljmp
pushf
add
sub
fdivrl
sti
fwait
pop
jl
xchg
cmpl
imul
ss
cmp
sub
ss
ja
mov
enter
aas
shll
fcmovb
out
fstpt
pop
pop
adc
outsb
mov
add
addl
idivb
nop
ret
fbstp
cmc
mov
push
call
mov
mov
pushf
hlt
pop
ss
subl
hlt
out
fwait
pop
mov
cwtl
pop
pop
mov
cmpsl
jne
pop
mov
cmp
and
xchg
fldt
or
fs
push
mov
xchg
outsl
adc
ret
dec
sti
jo
subl
sub
or
xchg
jae
outsl
xchg
jle
aas
mov
lret
and
testb
repnz
cmpsb
icebp
mov
adc
loop
call
cmp
mov
jb
pusha
iret
sub
stc
shlb
inc
dec
pop
add
dec
xor
sub
js
enter
and
xchg
stos
shrb
movsb
dec
icebp
movsl
loop
and
js
xor
stos
lret
sbb
fdivl
ja
xchg
jns
adc
sub
pop
fisubs
pop
mov
push
stos
xchg
addr16
pop
dec
add
cmc
xchg
orl
pop
cli
or
nop
mov
adc
add
js
and
push
push
clc
push
dec
scas
jbe
loopne
fsubrs
leave
ficompl
stc
in
stos
mov
in
mov
add
cmp
cmp
push
jecxz
popa
cmp
les
lahf
lret
fdivr
fdivrs
lods
sub
stc
mov
dec
pop
out
jnp
aam
mov
pop
hlt
mov
push
cmpsb
jl
sti
incl
icebp
and
jl
jmp
add
push
cmpsb
push
call
or
fadd
mov
pop
mov
jne
mov
mov
xor
loop
sub
fdiv
imul
cmc
push
cmc
adc
mov
outsb
lds
cmp
movsb
imul
in
in
add
lds
outsl
push
push
stos
inc
fscale
and
std
ficomps
arpl
and
and
jb
call
push
cmc
xlat
or
clc
cmpsb
enter
data16
xor
and
ret
add
mov
sub
cmp
shrl
lea
and
jnp
jg
loope
xchg
xor
ds
aad
dec
or
xchg
iret
and
notl
enter
jg
fnsave
mov
movsl
mov
push
es
or
aas
shrb
jge
mov
cmp
loope
sbb
sbb
jnp
mov
sbb
adc
lret
pushl
xor
pop
testb
sbb
jp
jle
adc
loope
pop
je
fsubrl
xor
lret
pop
pop
mov
mov
mov
adc
imul
pop
pop
lret
jo
xlat
cltd
into
inc
push
jo
sub
test
aas
push
xchg
cmpsl
inc
sub
ret
cwtl
fucomp
ds
xor
dec
cmovp
fimull
rcrl
mov
push
or
outsl
mov
jnp
fsts
adc
xchg
mov
pop
ret
cmpsb
fnstcw
mov
pop
mov
add
xor
sbb
call
addl
jo
adc
pop
mov
aad
jp
cmp
xor
and
shr
sbb
sti
mov
sbbl
or
gs
inc
faddl
adc
or
dec
inc
aam
dec
mov
arpl
outsl
std
cltd
xchg
out
clc
sbb
je
notb
pop
push
sub
add
sahf
sub
cmp
and
and
sbb
fisubs
mov
imul
es
cmc
push
das
ret
inc
stos
push
inc
popf
mov
in
mov
jge
inc
stos
lds
mov
cmpsl
cmc
add
push
mov
or
jae
movsb
test
pusha
mov
mov
in
xor
xchg
int
jle
movsb
mov
adc
int3
fbstp
fnstenv
and
es
in
loope
jo
test
decb
mov
inc
test
adc
psubusw
js
push
push
cltd
gs
shll
jl
scas
cs
push
aas
outsl
inc
pusha
repz
dec
or
dec
mov
push
leave
pop
fsubr
ret
int
jecxz
js
sbb
fcompl
in
sbb
stc
cmp
ja
mov
andl
lea
mov
jae
add
mov
xchg
fldl
hlt
jge
jecxz
ljmp
rol
in
mov
iret
cmp
test
cmc
test
sub
cmp
add
sbb
push
and
pop
out
enter
mov
cmp
lret
imul
std
cltd
lock
jne
xchg
aad
sub
jne
fwait
hlt
pop
repnz
test
and
arpl
mov
sub
add
push
mov
mov
mov
and
jge
outsl
mov
fistpl
pop
outsl
pop
mov
pop
ror
fwait
and
int
and
imul
pusha
nop
loop
dec
xchg
xor
repnz
mov
aas
mov
sub
cmp
rorb
mov
push
mov
and
cmp
cmc
pop
mov
xchg
lds
movsl
data16
sub
data16
mov
xchg
mov
ret
push
sbb
push
incl
das
add
sbb
fidivrs
dec
push
cltd
lcall
lods
sbb
dec
inc
pop
pop
cmp
faddl
push
jmp
aas
dec
scas
pusha
hlt
out
jae
or
cmp
mov
dec
dec
adcb
add
rcl
push
jae
pop
push
rcrb
out
sub
pop
clc
pop
mov
stc
jno
jno
add
mov
mov
add
out
shrl
push
sbb
cld
sbb
pop
decl
xchg
ret
filds
add
shll
mov
adc
test
jno
scas
pusha
add
dec
dec
fisubrl
jp
or
scas
cmp
daa
in
fisubrl
dec
inc
pop
adc
push
imul
xchg
jg
in
fdivp
sahf
les
jns
mov
inc
jg
mov
sti
pop
out
lods
xchg
mov
ret
in
adc
nop
mov
sub
dec
sbb
shr
orb
jns
scas
or
aad
dec
out
icebp
ss
mov
fisttpl
fbld
jns
inc
push
lahf
mov
add
test
and
cli
jmp
lret
sbb
jo
adc
mov
scas
icebp
or
sbb
insl
and
dec
pop
cmp
in
jle
or
rclb
or
lret
push
xor
jbe
pop
daa
mov
mov
into
aam
incl
xchg
xor
mov
adc
jp
inc
stos
and
repnz
and
idivl
xchg
stc
insb
pop
xor
add
repnz
scas
push
and
mov
mov
fwait
iret
mov
lds
add
imull
int
inc
jg
fst
push
sbb
push
mov
mov
adc
dec
xchg
call
pop
cmp
inc
in
pop
jmp
add
sbb
ljmp
sbb
gs
xchg
mov
enter
xor
mov
pop
test
or
imul
dec
stos
pop
movsb
xor
mov
sbb
das
icebp
jo
fs
adc
pop
jo
and
cld
je
xor
mov
push
xor
enter
ja
fstps
dec
or
cltd
xor
pop
cld
push
cmp
iret
sub
xchg
mov
push
outsb
rorb
outsl
xor
mov
fs
push
push
stos
or
jp
jl
xorb
push
test
lret
cmp
cpuid
add
popl
mov
les
fwait
shll
test
shrl
dec
loop
outsl
adc
mov
cmp
lahf
and
jns
packsswb
shll
decb
jbe
es
mov
jb
enter
aaa
loopne
cld
ljmp
inc
mov
out
flds
xchg
jae
add
jmp
es
push
lods
inc
sbb
lret
pop
ret
push
pop
mov
shll
sbbl
jns
lret
out
cmp
das
mov
sahf
dec
sbb
faddl
movsb
mov
andb
or
mov
fcmovnb
or
addb
mov
mov
stos
repnz
lea
scas
or
xchg
repnz
jo,pn
dec
mov
mul
inc
mov
daa
repz
sti
push
aam
movsl
nop
jp
and
mov
mov
dec
push
cmp
jmp
out
iret
inc
add
cld
loope
je
and
pop
movsb
cld
mov
cmc
xchg
repz
ds
orb
out
test
in
adc
sub
popa
xor
out
popa
push
xor
xor
notl
or
pop
dec
rcll
push
inc
and
leave
push
add
mov
push
in
clc
or
orl
and
fisttpll
lret
popf
sub
jb
repz
pop
xlat
or
inc
jecxz
jg
gs
xchg
jge
push
hlt
jno
cltd
mov
dec
sub
inc
cmp
adcl
xchg
cld
sub
xor
or
mov
push
and
orl
cmp
js
pushf
fsubs
adc
stos
and
adc
add
cmp
mov
movsb
or
testl
popfw
daa
ljmp
jl
mov
inc
testl
jb
adc
dec
ret
xor
sbb
sbb
es
pushf
je
pop
lods
xchg
push
jae
push
and
or
mov
jb
mov
sti
insl
cmp
add
adc
pop
sub
cmp
push
or
push
out
movsb
repnz
popf
rclb
ja
xchg
jp
add
mov
mov
fwait
movsl
push
je
leave
lds
rcrl
mov
xchg
fsubs
fs
setbe
rcrl
push
jo
push
cmp
jne
ret
rcl
adc
mov
and
adc
jbe
jp
fstl
sbb
sbb
cs
fwait
js
or
push
adc
jmp
jp
int
fstpt
cs
mov
test
sub
sahf
hlt
mov
inc
adc
adc
jne
fs
adc
xor
pop
shll
inc
out
es
push
rclb
lods
pusha
fistpl
push
leave
jae
insl
adc
fcoms
mov
jl
mov
movsl
and
or
testl
jp
lods
out
dec
fucomip
aas
or
mov
cmpsb
mov
scas
sub
es
pop
lods
test
xlat
pop
inc
push
sub
mov
rclb
push
pop
ret
cmc
fldt
adc
xchg
fwait
push
movhlps
out
dec
pop
jmp
mov
es
mov
xchg
dec
cld
jae
jecxz
cwtl
fbstp
scas
mov
ficoms
pop
inc
hlt
adc
dec
inc
mov
xchg
mov
sub
push
add
add
push
cmp
sub
fwait
pop
jmp
xor
gs
out
sub
test
jle
sub
sbbb
push
cs
sbb
and
aas
inc
lcall
mov
and
dec
mov
inc
jle
mov
test
test
std
sbb
push
stos
mov
cmpsb
sti
scas
cmp
ja
ficoms
lock
sub
shrl
addb
jge
mov
in
or
cmpsl
lods
inc
aad
fld
in
xor
sahf
ds
jl
lods
imul
jl
adc
pop
cmp
dec
jae
jo
clc
popf
shl
mov
mov
sub
cmpsl
sub
or
jae
sbb
mov
xor
jo
xchg
xchg
mov
out
sbb
pop
cmc
lret
sbb
inc
xor
xchg
lea
lds
and
mov
mov
adc
fdivr
inc
test
sbb
addr16
lods
inc
sahf
mov
aam
fstps
rorb
cwtl
repz
popf
bound
mov
mov
stos
add
fwait
dec
cmp
setp
lret
mov
jne
mov
repz
repnz
dec
mov
dec
rorb
sbb
imul
xchg
sbb
imul
test
and
imul
jg
xor
mov
push
xchg
mov
icebp
xor
cmpsb
in
fadd
lods
dec
pop
out
cmp
sahf
cmp
mov
nop
xchg
push
fidivrs
loopne
aas
insl
test
insl
mov
test
aas
fistl
pop
stos
in
mov
xchg
repz
aaa
movsb
pop
xchg
push
add
mov
mov
mov
jg
lcall
sbb
adc
ficoml
push
js
xor
test
cmpsb
or
dec
lods
ret
jp
daa
cli
pop
xor
xchg
addb
ds
int3
faddp
test
sub
ja
aam
loopne
jg
bound
sbb
lret
cmc
int
aad
pop
mov
and
subb
xchg
sub
out
lock
adc
jp
push
aaa
push
jb
lret
test
jge
test
cwtl
add
cmpsl
shrb
pop
push
cmp
aad
lret
hlt
add
test
sbb
pop
mov
cmpl
jo
out
scas
adc
adc
daa
lcall
in
and
adc
test
inc
mov
push
test
xchg
bound
dec
fsubrs
cmp
inc
mov
dec
int
push
in
cmp
pop
inc
push
pop
test
mov
sub
test
inc
lods
data16
jnp
sbbl
fwait
imul
push
jnp
inc
and
addr16
lret
into
fadd
and
sti
lcall
outsb
or
sbb
repz
dec
or
outsl
pop
sub
pop
ret
jae
out
call
insl
movsl
push
jmp
pushf
sbb
xchg
dec
add
mov
xchg
cmpsb
aaa
add
mov
sbb
mov
and
xor
stos
or
push
inc
xor
xor
mov
outsb
shrb
inc
iret
in
dec
xor
mov
loopne
xor
or
mov
test
fxch
sub
or
rcrl
dec
outsl
mov
ret
insb
lods
testl
lret
dec
sahf
stos
xchg
mov
orl
pushf
stc
mov
out
leave
sbb
cmp
xor
sti
xchg
push
or
orb
cmpsb
mov
mov
in
cmc
push
dec
pop
cmp
in
push
pop
inc
sahf
lods
jb
adc
lds
fisubs
jne
mov
cli
fs
adc
jne
jecxz
dec
mulb
aad
mov
pop
push
lret
cmp
pop
push
enter
loope
cmp
cmp
xor
sub
ss
iret
dec
dec
sbb
pusha
jb
out
push
xchg
sub
mov
aad
lds
pop
lahf
push
rorb
mov
and
mov
mov
cmpsb
inc
mov
lret
mov
or
xchg
adc
jp
shrl
jb
inc
fstps
sahf
fisubs
call
daa
adc
jg
mov
rol
mov
push
xor
mov
in
xor
mov
sti
jle
adc
mov
fbstp
out
and
dec
repz
adc
sahf
aas
fimull
add
jecxz
test
fcomip
push
or
fbstp
popa
leave
sub
mov
jae
jg
pop
mov
movsl
sub
mov
or
push
pop
adc
or
cmp
push
lret
ds
ss
add
inc
pop
imul
mov
cld
repz
xchg
and
int
iret
ret
sub
pop
xchg
scas
jmp
and
adc
mov
jge
pop
cs
rclb
in
push
sbb
xor
sti
stc
pushf
scas
stos
xchg
mov
jno
lods
mov
or
xor
push
hlt
aad
mov
scas
mov
cmp
nop
pop
xor
mov
cmpsl
or
mov
jo
xor
out
jmp
loopne
fst
mov
jbe
test
ret
adc
sub
gs
dec
movq
or
shlb
dec
xchg
mov
jno
add
jmp
in
sub
sbb
cmp
dec
out
div
ds
mov
cmp
in
nop
je
cli
aam
ret
mov
es
stc
xchg
sbb
outsl
sub
add
jge
lock
int3
ficoms
das
xchg
push
mov
sbb
push
or
loope
sbb
sbb
lods
and
aas
loop
jno
xchg
mov
mov
js
add
movsl
int3
movsl
push
fimull
shll
xlat
xchg
pop
mov
push
xchg
scas
xor
jl
xor
decb
cmpsl
jb
pop
mov
into
dec
sub
inc
push
movsl
xchg
inc
sub
jge
and
add
lahf
add
aaa
pushf
les
mov
fsubrp
out
mov
scas
adc
or
lret
stos
cmpl
sbb
or
mov
ret
push
mov
sub
pop
adc
rol
mov
xchg
ds
call
add
push
sti
mov
lahf
jp
idivl
sub
out
inc
cwtl
xlat
out
fwait
pop
repnz
pop
stos
aas
jo
out
mov
push
or
and
add
test
mov
mov
push
sub
add
stc
imul
dec
inc
adc
xchg
sub
filds
push
push
ret
aad
fstp
fs
cmp
sti
test
push
addl
mov
pop
push
ret
pop
jb
inc
out
sub
in
movsl
mov
outsl
or
loopne
xor
movsb
xor
push
cltd
mov
lret
iret
mov
shlb
call
rolb
in
mov
in
in
add
repnz
loopne
test
pop
frstor
movsb
cltd
movsl
fdivs
fbstp
cmp
sub
int3
xchg
clc
js
cmc
ja
ja
add
sti
fisubrl
adc
jne
mov
inc
gs
pusha
mov
clc
movsb
pop
addl
je
xlat
bound
push
ja
inc
into
and
popl
ja
sub
add
mov
mov
dec
add
lods
inc
ret
fldenv
push
and
push
pusha
aad
jg
mov
es
imul
stc
aam
bound
mov
in
sbb
das
dec
test
lret
cmp
shrb
and
mov
cmp
and
mov
int3
mov
jmp
std
nop
push
ret
sahf
push
leave
mov
frstor
iret
dec
dec
out
lds
andb
dec
js
mov
out
dec
mov
push
js
gs
mov
std
in
into
ret
cmpsb
call
or
push
mov
fistps
les
ret
pop
insb
ljmp
cli
cmc
push
lock
adc
sbb
shrb
sti
lret
add
adc
and
xor
movsb
movsb
xchg
outsb
xor
mov
int
push
xchg
fs
mov
or
or
notb
jg
out
mov
dec
icebp
sbb
into
adc
fbld
or
arpl
xlat
adc
mov
fidivs
sub
std
pop
jo
js
sbb
mov
ds
insb
stc
mov
ss
sti
cmp
mov
lcall
mov
cmpsb
xchg
aaa
dec
lret
sbb
pop
push
fistps
jle
adc
or
xchg
cmpsb
aaa
adc
cmp
loop
outsb
in
lods
inc
mov
or
out
pop
sub
jle
inc
hlt
xor
push
and
xor
push
dec
loope
push
pop
mov
jno
fwait
xchg
inc
ret
push
ficoms
or
push
jmp
or
jge
retw
xchg
pop
lea
into
ret
rcrl
xchg
movsb
add
shrb
push
jno
or
lock
cs
loopne
ds
add
sbbl
mov
pop
andl
loopne
xor
repz
es
adc
addr16
adc
or
out
test
push
fnsave
popa
add
pop
mov
or
mov
mov
nop
out
outsb
out
loope
and
ffree
cmp
outsb
jg
jle,pt
inc
pushf
pop
sbb
iret
mov
lret
imul
out
mov
add
cmpsl
repnz
stos
mov
mov
cmp
push
call
js
test
pop
je
jl
dec
lods
jg
or
inc
mov
in
push
loop
mov
cmp
frstor
push
mov
push
mov
leave
fsts
pop
inc
cmpsl
push
call
out
test
mov
fnsave
lock
push
js
push
lock
lods
push
sbb
mov
push
pop
xor
jo
stc
lret
jl
jmp
addr16
arpl
leave
dec
int3
fdivrl
ds
dec
call
aam
jb
jl
insb
gs
in
les
xchg
pushf
xor
cmp
rcrl
add
ficoml
and
lahf
xchg
dec
cmpsb
or
pop
les
push
out
or
hlt
mov
pop
test
jle
imul
pop
imul
fmull
sbb
in
sub
dec
inc
inc
push
addr16
cmp
sbb
cmp
popa
jmp
dec
or
mov
push
push
ja
jg
sbb
sbb
mov
lret
inc
push
pop
inc
fimuls
jecxz
popa
stc
sbb
out
bound
mov
mov
xor
push
lods
mov
mov
sub
out
push
rcll
divb
cs
pop
pmulhw
push
fsubl
mov
sub
sbb
mov
repz
xor
in
jle
sbb
push
fstps
sub
sti
es
sti
cmc
push
adc
xor
call
repnz
mov
ret
arpl
loop
pop
or
jne
add
mov
enter
and
iret
mov
in
and
xor
test
xor
sbb
sbbb
inc
sbb
push
inc
in
sbbl
sub
mov
icebp
aam
out
fildll
int3
sbb
scas
push
jl
push
scas
call
sbb
das
dec
jecxz
rorl
pop
adc
roll
inc
inc
pop
jns
imul
pop
daa
jmp
push
pop
adcb
repz
and
faddl
ljmp
xchg
or
mov
js
mov
and
iret
je
lock
ss
fdivrl
push
add
and
pop
dec
jg
lahf
ss
jle
mov
daa
inc
fdivl
movsb
jne
arpl
movsb
bound
sub
lds
xchg
out
xchg
push
jge
jmp
negl
lods
dec
dec
jns
ds
push
loopne
imul
insl
xchg
repnz
mov
push
cwtl
lret
push
std
mov
mov
add
cmpxchg
test
sahf
js
add
inc
ss
gs
jg
or
mov
test
sahf
mov
loope
push
mov
mov
arpl
push
ret
fwait
sub
out
shl
inc
and
jbe
lcall
mov
ja
les
adc
repz
dec
movsb
js
mov
and
sub
stos
lds
lret
mov
mov
repz
dec
outsl
cmp
icebp
nop
shrb
xchg
lret
gs
push
push
push
push
sbb
ja
fiadds
dec
fdivrp
jno
jecxz
pop
push
fnstcw
into
jbe
shl
jb
inc
push
pop
sub
shrl
repz
jbe
sbb
fsts
icebp
push
ja
cmp
cwtl
cmpsb
cmp
add
sub
pop
mov
pop
rdpmc
sbb
sub
test
incl
arpl
ja
xor
pop
or
xor
pop
and
adc
bound
push
jns
inc
pop
inc
adc
add
pmaddwd
je
jo
xor
cmpsl
subl
out
cmc
shll
insb
push
invd
adc
mov
stos
repnz
dec
loop
and
lods
aam
leave
mov
insb
inc
rcr
and
push
in
subb
movsb
mov
or
cmp
sbb
orl
stc
lock
in
cmp
mov
pop
iret
cld
jae
push
add
jle
test
rcll
add
sbb
loopne
xor
add
cmp
or
rcrl
cld
dec
jp
sub
std
imul
mov
aaa
add
ds
dec
aam
dec
repnz
aaa
fidivrl
mov
fnsave
mov
jne
xchg
or
in
sbbb
sbb
out
sbb
add
aaa
jo
repnz
xor
out
pop
out
dec
enter
fnsave
repnz
sub
add
cwtl
mov
mov
adc
mov
pop
insb
imul
push
push
in
cli
pop
out
cmp
pop
jbe
lahf
iret
les
inc
push
adc
aaa
push
in
fwait
rclb
out
sbb
out
fdivrl
es
arpl
mov
movsl
icebp
dec
jnp
jb
insb
lods
xchg
je
cmp
add
shrb
lahf
orb
inc
fidivrl
push
adc
fcmovnb
adc
out
add
mov
sbb
xchg
aam
xrelease
mov
mov
std
das
xlat
lods
repz
xchg
test
fisubl
cld
inc
movsl
push
cwtl
sub
sbb
cli
loope
cli
mov
enter
inc
lods
sti
or
cmp
mov
cli
aam
add
jl
dec
jbe
push
adc
hlt
push
jl
mov
loope
adcb
jns
jnp
or
and
cltd
add
mov
sub
sarb
add
jmp
fucomi
or
and
mov
mov
cmp
xor
xor
jne
out
out
mov
popa
clc
sbb
and
notl
dec
push
orb
lods
inc
leave
sub
pop
sbb
loop
cmp
jl
mov
add
ds
leave
fstps
mov
repnz
jl
aad
fisttps
xchg
data16
cmc
adc
sub
loop
or
leave
es
testb
sti
or
les
jno
mov
inc
mov
push
ljmp
inc
pop
and
setg
std
sub
cli
dec
pop
sub
fldenv
mov
std
adc
or
hlt
lea
xchg
pop
sub
jae
loopne
jg
cmp
fisubl
or
ja
cmp
clc
mov
rcl
mov
repnz
insl
cmp
mov
shr
es
sahf
xor
and
inc
adc
mov
pop
jge
adc
inc
xchg
call
das
mov
jo
jnp
mov
leave
stc
test
test
ja
pop
adc
mov
fcoml
call
sti
or
subl
ret
sub
test
dec
cmp
or
test
shr
sub
bound
mov
sbb
clc
xorl
cltd
and
aam
mov
aad
inc
fcomp
cmp
aad
inc
jecxz
lcall
aaa
pop
sarl
xchg
outsb
pop
ljmp
dec
orb
stos
inc
ficomps
jmp
sbb
das
imul
sbb
repnz
lcall
mov
add
inc
mov
frstor
inc
push
mov
mov
dec
cltd
mulb
stos
jne
out
xchg
add
and
lock
mov
jle
andl
jecxz
mov
push
push
mov
jg
push
add
xchg
lret
or
lcall
mov
jno
ror
push
mov
jp
aaa
ds
pusha
push
insb
jmp
adc
pop
aam
aad
mov
pushf
pop
add
out
inc
in
or
inc
cli
pop
cmpsb
mov
sub
rcll
inc
inc
leave
pusha
jb
xor
inc
sbb
push
int3
out
pop
lret
dec
roll
ret
dec
push
sbb
mov
lcall
repz
dec
xchg
mov
enter
xchg
call
pop
sub
inc
pop
and
call
mov
stc
enter
pop
sub
bnd
fsubrp
mov
mov
shl
mov
cmpsb
in
lahf
icebp
xor
xor
and
lds
testl
fcoms
popa
jbe
cmp
add
pop
mov
std
jge
sbbl
sub
mov
or
pusha
xchg
push
shrl
loopne
adc
ss
push
jg
add
xor
dec
mov
test
add
test
popf
xor
lods
push
test
mov
ret
add
in
loope
fldenv
xchg
ljmp
adc
push
or
test
add
xchg
jle
jl
jmp
out
xchg
pop
fildll
pop
fadds
sbb
xchg
int3
mov
rcrl
dec
cmp
mov
mov
shlb
sahf
mov
xchg
xchg
fidivs
decl
jbe
adc
sub
inc
loop
push
sbb
mov
imul
sbb
cmpsl
lahf
stos
and
lea
xchg
jns
sbb
add
pop
pushf
xor
sbb
dec
cmp
test
pop
iret
jb
jo
xor
enter
jmp
sbb
push
ljmp
or
add
sbb
mov
inc
xor
das
int
push
pusha
jne
orl
leave
push
outsl
into
or
add
jno
sub
and
sub
mov
sub
pop
xlat
clc
jbe
push
fstpl
pcmpgtw
push
test
cmp
mov
inc
in
pop
imul
popf
jecxz
dec
xor
leave
movsb
jne
mov
sbb
push
inc
sbb
jb
pusha
mov
mov
or
push
xor
icebp
adc
gs
lret
push
sub
insb
inc
add
mov
popf
sub
pop
sahf
jno
xor
stos
or
fbld
lahf
ret
xor
rol
lcall
aad
add
and
sbbb
ss
movups
inc
rcl
ljmp
call
xor
jmp
adcl
jmp
aaa
outsb
xchg
aas
cmp
clc
inc
mov
mov
add
sub
pop
and
in
cwtl
dec
pop
mov
fnstsw
sub
adc
and
dec
jmp
mov
pop
cwtl
jno
mov
and
push
ss
ljmp
outsb
xor
cli
addl
clc
xchg
sub
shrl
add
lea
mov
bound
and
sub
pop
scas
xor
fsts
fstpt
sub
xchg
ret
jmp
dec
mov
xor
xchg
pextrw
adc
imul
add
lea
adc
call
mov
ds
out
orb
xchg
addr16
cmpsl
add
pop
out
outsb
mov
sub
cmp
dec
nop
fidivrs
push
mov
sbb
inc
xor
testl
out
pusha
andl
out
jg
mov
les
pusha
sbb
leave
inc
sbb
mov
es
int3
or
push
add
nop
mov
pop
stc
sahf
js
roll
sti
jnp
ret
movsb
insl
push
push
mov
pop
inc
cmc
push
out
in
and
cmp
dec
loope
or
push
or
jo
jbe
mov
mov
loop
or
mov
xchg
fwait
xchg
push
mull
mov
scas
outsl
mov
pop
mov
push
mov
enter
jecxz
mov
push
ja
mov
inc
push
lret
test
pop
stos
adc
fildll
ss
sub
xorb
pop
aas
ja
sarl
ret
hlt
mov
out
or
push
mov
loopne
jno
mov
in
gs
jbe
je
ja
shrd
insl
and
popa
dec
fucomp
inc
xchg
out
fs
xchg
inc
xchg
popf
xor
out
movsbl
mov
movsb
add
testl
push
icebp
adc
lahf
loope
or
sbb
jmp
inc
or
mov
or
pop
xor
or
dec
or
lcall
push
xor
mov
ljmp
arpl
pop
sbb
mov
dec
lahf
call
xchg
push
arpl
mov
daa
xor
aaa
loop
int3
pop
loopne
pop
out
adc
or
or
scas
aas
push
mov
adc
aad
call
rcrb
xor
cmp
mov
pop
cmp
lds
std
pop
dec
and
scas
push
xor
scas
and
push
outsl
adcl
cmpsl
mov
xlat
in
push
inc
cmp
jg
pop
dec
lret
push
push
mov
pop
ret
pushf
clc
cwtl
dec
arpl
pusha
or
mov
push
faddl
mov
inc
adc
inc
lods
cmp
jle
jae
jge
dec
pop
das
pop
pop
in
rcrl
sbb
pushf
lea
push
sbb
mov
mov
cmpsl
mov
repz
add
es
xchg
sub
add
in
inc
cwtl
jecxz
in
sbb
inc
jmp
das
lcall
pusha
xchg
pop
out
push
dec
mov
lcall
and
in
pop
popf
lods
mov
leave
stc
push
inc
loope
xor
fisubrl
shr
mov
aas
addr16
jecxz
lods
mov
inc
xchg
aas
jp
stc
pop
subl
out
jbe
push
por
clc
scas
ljmp
jno
ja
aam
sti
gs
dec
mov
bound
lds
arpl
out
pop
xor
sub
push
and
jb
jnp
subl
cld
dec
xchg
and
das
addr16
leave
f2xm1
mov
or
jns
lods
sub
sub
clc
pop
addr16
movsl
cli
out
in
lock
adc
mov
push
div
inc
fstpt
ret
in
jno
sbb
xchg
idiv
lcall
fsub
mov
int
jb
sub
les
push
push
into
ret
dec
xchg
sub
insb
mov
pop
push
mov
jle
push
sbb
mov
imul
cmp
cld
pushf
es
adc
push
adc
lods
lcall
clc
outsl
aas
into
mov
call
cmp
mov
and
rclb
pop
popf
cwtl
adc
dec
pop
out
out
sahf
ret
lret
xchg
sub
sahf
sub
adc
cmc
pusha
into
cmp
int3
xor
sub
and
gs
mov
mov
cmp
sub
outsl
jge
sbb
adc
enter
pushf
pop
popf
mov
sbbl
mov
jns
mov
fwait
cmpsl
test
pop
ficoms
inc
stc
push
sti
faddp
sub
rcrb
test
movsbl
jnp
push
pop
ja
cwtl
lods
or
mov
xlat
fists
mov
push
push
inc
xchg
mov
lret
jp
mov
lret
adc
in
sbbl
xchg
jb
or
arpl
lret
mov
push
in
ss
adc
xchg
sbb
mov
push
test
das
or
xor
xlat
jb
push
clc
and
in
clc
jg
and
aas
rcrb
xchg
cmpsl
inc
repnz
and
enter
cmp
imul
adc
mov
insb
push
jno
in
mov
stos
aaa
dec
fcmovb
pop
insb
jp
pop
movsl
pop
pop
pushf
or
pop
inc
push
mov
xor
into
sbb
cwtl
mov
rorb
mov
add
mov
cltd
push
rorb
stos
cmp
in
iret
inc
xchg
inc
jecxz
in
in
fistps
loope
clc
add
sub
pop
mov
and
push
fidivrl
push
push
lods
and
fistpll
in
int3
aaa
mov
outsb
lea
mov
dec
call
adc
loopne
xchg
push
in
mov
adc
dec
add
cltd
das
mov
push
cmp
cs
lods
pushf
adc
cmp
sbb
inc
shll
out
subb
dec
jecxz
cmpsb
scas
sub
scas
cld
lods
out
mov
fs
popf
jo
jnp
pop
pop
push
fsubl
imul
pushf
imul
cld
pop
push
xchg
imul
sahf
scas
subl
dec
adc
jp
push
nop
incb
xchg
xor
lock
pop
ss
in
cmp
jecxz
mov
or
mov
fs
mov
mov
adc
fdivrs
mov
mov
xchg
and
xchg
jnp
jp
or
or
nop
pop
fisttps
xchg
pop
in
dec
or
insb
xor
cmp
mov
adc
lahf
lock
scas
cmpsb
push
aad
jno
shrl
lahf
or
insb
jle
stos
nop
cmp
jb
jb
cltd
xor
xor
mov
rep
das
pop
das
mov
iret
pop
jne
iret
cltd
push
lods
adc
insl
jae
xor
aad
mov
shll
sub
fsub
add
mov
lret
lret
adc
xchg
gs
in
push
adc
add
stos
and
mov
mov
push
and
arpl
insb
add
aas
loop
cmp
adc
jmp
pop
mov
mov
jno
sarb
fistpl
sub
mov
or
pop
lods
sub
jmp
shlb
push
orl
mov
mov
inc
adc
mov
inc
daa
int
rcll
leave
pusha
fidivrs
cld
out
out
cmp
or
add
in
insb
leave
sub
jo
cmpsb
jbe
jg
inc
sbb
and
rcll
push
sbb
mov
call
in
out
in
jb
hlt
xor
addr16
cmp
jge
mov
inc
xchg
jge
incl
popf
mov
add
fucom
aas
lcall
cmp
ret
iret
fmuls
pop
push
jge
push
fs
mov
sub
outsl
mov
mov
loop
jl
shll
push
add
pushf
nop
xchg
testl
ds
mov
cltd
mov
mov
test
insb
ret
adc
movsl
mov
add
bnd
dec
lock
dec
movsl
jo
add
sti
pushf
mov
and
sarl
xor
adc
cmp
xchg
fstps
pop
aad
push
lea
xchg
cs
add
lcall
push
popa
mov
inc
rorl
push
les
and
xchg
mov
neg
lret
out
pop
add
jb
shlb
clc
xchg
sahf
fcomip
ret
fisubl
xor
xchg
fcomps
cmpsl
js
add
mov
enter
or
mov
lret
jb
test
mov
in
jmp
inc
filds
subl
lcall
arpl
enter
mov
add
mov
sub
jbe
fwait
jbe
xchg
ret
cmp
imul
int
xchg
popa
mov
mov
leave
cmp
stos
mov
lock
cli
xor
pop
scas
xor
xlat
sbbl
ret
aad
mov
in
mov
fdivl
or
pop
xlat
gs
inc
jmp
or
xchg
xlat
in
sbbb
sub
daa
xor
sub
inc
or
popa
push
jg
or
dec
jmp
jne
jo
aas
loop
push
pop
lret
jge
outsl
cmp
and
sub
dec
ljmp
jns
stc
bnd
cmpsb
mov
sbb
ja
jmp
and
scas
sub
into
jne
jo
call
sub
je
test
imul
mov
xchg
jb
test
std
pop
push
lcall
stc
mov
inc
jb
inc
lret
xor
dec
ffree
xchg
or
jg
lcall
jl
cmp
adc
push
lock
jns
leave
shll
mov
stos
xchg
arpl
jp
inc
je
push
das
pusha
sbb
loop
mov
mov
sbb
push
call
mov
mov
jbe
test
jmp
and
arpl
and
jg
or
jl
sub
test
fwait
push
sbbb
push
test
sub
insb
mull
mov
leave
jbe
dec
iret
push
and
fabs
int3
gs
jnp
xchg
outsb
lret
out
repz
aaa
fstps
xor
arpl
adc
sbb
cmpsl
inc
lcall
jnp
pop
inc
in
pop
pop
and
cmp
sub
push
stc
xor
ret
insb
add
lods
mov
mov
add
into
addr16
cwtl
inc
or
aaa
or
cmp
repnz
or
pop
je
shrl
jg
shr
call
mov
pop
fidivrs
sbb
ss
sub
fs
xchg
daa
jge
movsl
ja
jg
dec
sbb
sbbb
fsubs
movsb
pop
xchg
jbe
push
ret
icebp
jmp
xchg
leave
pop
adc
mov
pop
daa
sub
jge
movsb
inc
aad
int3
outsb
sbb
mov
add
clc
pop
inc
int3
sbb
in
iret
pop
cmp
aam
inc
rol
repnz
aas
push
adc
add
and
sarl
mov
xchg
lock
shrl
mov
mov
pusha
lret
cmp
aaa
pop
stos
pusha
das
loope
mov
aas
dec
cs
clc
outsb
fcompl
test
and
pop
xlat
xor
push
cmp
mov
pop
sub
scas
jl
dec
push
lretw
jno
cmp
repz
mov
xchg
stos
cmpl
out
imul
hlt
pop
cmpsb
addr16
jge
inc
mov
and
or
cmp
mov
adc
and
xchg
call
mov
xchg
and
jge
cmp
ljmp
testb
sbb
cmpb
jl
adc
cltd
xor
cmp
cmpsb
in
ja
movl
in
xchg
test
fimull
xchg
or
out
push
jmp
inc
xchg
in
dec
loop
jp
jnp
imul
pushf
mov
push
out
in
xor
loop
xchg
repnz
jge
shrl
adc
loop
aam
ja
loope
dec
loope
push
cmp
jmp
dec
adc
and
mov
test
sahf
lods
inc
adc
mov
dec
dec
cs
jnp
mov
pop
leave
jo
jo
hlt
push
pop
ficomps
daa
outsl
or
jg
inc
add
mov
pop
stos
mov
jb
dec
adc
jecxz
insl
adc
scas
out
sahf
sub
push
fsts
jge
pop
in
jne
icebp
jns
mov
jmp
sbb
les
out
mov
add
ret
popa
insl
or
xor
pop
bound
shll
hlt
leave
sbb
sub
sar
dec
ljmp
jmp
js
dec
push
testl
aaa
xor
adc
jmp
pop
bound
mul
loopne
lcall
xchg
or
in
pushf
xor
fdivs
mov
sti
push
lods
push
jbe
sub
mov
lret
ficoml
push
mov
nop
rcl
std
cmp
cltd
es
ret
test
in
push
sarb
subl
dec
mov
bound
cwtl
mov
rcll
mov
xchg
pop
mov
scas
mov
ret
hlt
mov
lock
or
lods
ret
jnp
pop
cmp
xchg
ret
add
repnz
mov
adc
pop
cmc
subl
dec
mov
stc
mov
xor
mov
std
popf
jnp
adc
bound
sub
mov
push
daa
test
into
mov
adc
sbb
and
sarl
push
mov
push
inc
lock
into
in
in
inc
outsb
mov
or
inc
cmp
xchg
lods
adc
movsl
push
mov
insb
mov
add
sbb
and
or
insl
push
int
adc
bound
outsb
or
inc
out
inc
jb
xchg
je
sub
xor
xlat
repz
fs
out
int
jle
and
jne
fsts
lahf
or
xor
ljmp
pusha
ret
insl
mov
push
rclb
movsl
inc
icebp
leave
push
mov
pop
mov
insb
movsl
test
cmc
jge
or
enter
movsl
sbb
clc
or
sbb
inc
push
add
mov
fisubs
mov
xlat
test
loope
inc
lcall
jo
jecxz
mov
fsub
jns
push
add
or
sbb
in
push
pop
mov
aad
insl
jb
mov
ret
adc
clc
insl
sub
xrelease
or
sub
lods
add
in
cmpsl
fcmove
popf
xchg
mov
push
adc
xor
mov
and
and
ret
jl
cmp
sbbl
adc
lret
xor
repnz
data16
inc
adc
int
cmp
loop
fists
xor
push
inc
addl
mov
shrd
stc
mov
fisttps
pop
loop
xchg
loope
dec
scas
dec
in
mov
pop
mov
add
outsl
incl
movsl
addr16
mov
pop
push
or
je
hlt
movsl
aad
imul
add
or
in
xor
xorb
loope
ljmp
jge
jl
sbb
bound
mov
lock
daa
push
mov
or
mov
sarl
adc
lods
xchg
jmp
pop
das
adc
cmpsb
test
lds
cmc
or
mov
in
data16
gs
jp
or
cmc
mov
out
adc
sbb
mov
fucomip
pop
stos
add
sub
fisttps
mov
push
lret
dec
in
ret
test
jb
and
lcall
xchg
test
inc
sbb
dec
out
inc
push
jmp
or
jo
adc
andl
jns
push
jle
aad
jo
cli
repnz
and
adc
jle
xchg
add
rolb
xchg
arpl
pop
cmpsl
xor
lods
jns
sub
jmp
movsb
push
push
stos
shlb
jle
movsb
push
xchg
pop
notb
outsb
mov
mov
pop
sbb
inc
hlt
xchg
cmp
cmp
xchg
add
sbb
repnz
sbb
mov
cmp
add
fidivrl
scas
insl
test
repnz
call
xchg
mov
push
stos
xchg
push
jno
sbb
xchg
imul
mov
insl
pop
lcall
mov
xor
push
je
pusha
pop
int
dec
ss
mov
int
out
add
andl
lcall
jecxz
bound
sub
sti
fmuls
data16
mov
mov
push
dec
fidivrl
mov
push
mov
sahf
pushf
xor
or
call
fsts
pusha
or
scas
inc
mov
das
jmp
pop
scas
out
mov
fnstsw
sti
je
clc
sub
movsb
cli
ret
mov
xchg
imul
push
mov
fs
mov
stos
fidivrl
sbb
sub
sbb
je
and
dec
rcll
dec
iret
inc
jo
mov
fs
inc
data16
xor
adc
adc
push
mov
mov
sub
inc
jge
xchg
pop
fs
loopne
out
push
push
mov
or
cs
mov
cmpsl
sbb
push
xor
movsb
add
mov
adc
addr16
adc
std
scas
dec
cmp
pop
sahf
and
movsb
mov
adc
add
std
sub
xchg
adc
inc
les
aam
jmp
arpl
xor
pop
pop
nop
rcrl
pop
lahf
ds
push
jb
movb
jnp
lock
rolb
jecxz
mov
jge
push
jge
dec
sub
mov
adc
xor
popf
xor
or
sbb
mov
lds
in
addl
jp
js
arpl
loope
mov
int3
test
push
mov
pushf
cmpsb
push
in
add
nop
jl
or
xrelease
aaa
ret
jo
adc
cmpl
enter
dec
test
ja
into
movsb
addb
xorb
testb
xchg
stc
cli
leave
loopne
outsl
loopne
pop
loop
test
daa
loope
add
push
push
pop
push
aam
push
in
insl
leave
aad
push
mov
pop
out
cld
rcrl
or
mov
fistl
testl
and
inc
fcoms
mov
cmc
pop
dec
lret
jp
repnz
ret
outsb
sbb
sbb
lret
bound
jmp
xor
jmp
fs
mov
outsl
popa
and
negl
imul
push
ss
imul
or
pop
cmp
jb
test
mov
insb
fwait
stos
in
xchg
in
sbb
push
es
rcl
jb
sub
shrb
into
leave
lret
push
sub
fcomps
xor
push
push
xchg
lret
notl
jo
rcll
int
pop
or
outsl
cmp
mov
adc
daa
aas
mov
adc
mov
jae
fsubrs
dec
fdivrs
iret
out
aas
push
and
inc
loope
mov
jmp
mov
push
jg
test
loope
shll
aad
jnp
xchg
sbb
ds
or
adc
pop
mov
adc
pop
jmp
dec
adc
hlt
aad
mov
ss
sbb
add
outsb
adc
rolb
or
push
cmp
pushf
fbstp
mov
data16
ds
jb
test
imul
add
lcall
cltd
jae
jge
adc
push
adc
lea
in
jle
imul
pop
ret
enter
lea
mov
clc
xchg
jp
jno
pop
fwait
sbb
mov
push
cmp
jnp
push
jmp
sbb
popf
lods
mov
dec
sub
jp
stc
or
and
mov
mov
xchg
ja
jmp
gs
xor
push
push
ljmp
jno
movsb
scas
cmpsl
cmp
dec
shlb
shl
xchg
sub
into
test
orl
inc
add
stc
test
jae
adc
dec
mov
movb
fnsave
dec
fildll
mov
xchg
dec
or
je
in
shl
addb
stc
push
movsl
sub
and
sub
xor
fcmovbe
inc
int3
xor
jnp
sti
and
inc
jb
sbbb
dec
pop
ljmp
jno
outsb
mov
pop
pop
mov
jecxz
sub
mov
mov
int
cmp
inc
lds
pop
dec
decl
aad
out
xor
ja
add
pop
notl
and
add
mov
jecxz
mov
push
jg
cmp
mov
test
ja
inc
int
dec
add
clc
inc
jo
andl
or
or
mov
sub
pushf
pop
andb
sub
sahf
dec
add
dec
pop
cwtl
shlb
push
add
mov
arpl
push
sti
inc
aaa
xor
mov
mov
nop
xchg
mov
rol
mov
sub
mov
add
cmpsl
sbb
fnstenv
sbb
add
dec
jl
and
xchg
or
data16
lods
pop
leave
stos
and
xchg
lahf
repz
dec
pop
fwait
cmpsl
insb
inc
leave
call
cmp
mov
enter
push
pop
mov
call
arpl
ljmp
aam
sbb
push
push
pushf
lcall
cmp
mov
fwait
cmp
mov
dec
leave
sbb
pop
inc
sbb
mov
fadds
jmp
movsl
jp
mov
and
mov
shll
mov
xor
lret
out
in
jns
lea
je
mov
mov
and
jl
sub
jb
mov
lret
add
bnd
lods
mov
cmpsb
pusha
rclb
xor
cmp
rorl
imul
pop
test
and
xchg
push
call
hlt
lret
repnz
push
scas
cli
inc
fadd
fdivl
fnstenv
psubsb
push
sti
outsb
insl
xchg
mov
mov
dec
sub
and
xor
mull
enter
jge
in
fstps
or
cmpsl
ret
sub
sbb
mov
daa
or
add
mov
inc
cltd
andb
jmp
ja
pushf
xor
pop
add
dec
mov
test
ret
jp
xor
and
push
lods
or
pop
scas
rolb
sbb
icebp
xor
into
cltd
mov
push
hlt
aas
test
aad
aad
mov
in
xchg
lds
push
je
push
pushf
jecxz
cli
xchg
movsb
hlt
jnp
and
sbb
xchg
xorb
jno
inc
dec
sub
hlt
jle
push
mov
mov
inc
pop
cwtl
adc
dec
inc
mov
sti
test
out
es
sub
pop
dec
adc
fwait
sahf
fnsave
shll
mov
scas
inc
and
pop
sub
sahf
sbbb
adc
mov
mov
mov
sbb
sti
or
popa
sbbl
dec
push
popf
dec
mov
test
xchg
lcall
dec
movsb
inc
in
push
inc
inc
dec
sub
mov
daa
popf
mov
push
and
jnp
mov
dec
mov
sbb
mov
in
add
cmp
out
popf
xchg
aaa
ret
pop
cmpsl
rorl
push
xor
pop
or
or
scas
cmp
pop
mov
inc
mov
movsl
cmp
cmp
sub
xchg
sub
dec
scas
add
dec
leave
pop
cmp
movsb
hlt
in
lods
dec
sub
mov
xor
xchg
mov
xor
in
sub
daa
jb
push
sbb
nop
mov
test
rol
out
lea
sti
pop
xor
jmp
dec
mov
sarb
and
scas
pop
xor
push
push
leave
mov
scas
test
xor
sahf
scas
stos
push
out
ss
lods
adc
jne
push
mov
in
push
push
fsubrl
cld
xchg
pop
cli
inc
push
mov
dec
arpl
jnp
dec
cmp
ret
in
add
stos
cs
pusha
loope
cmp
xchg
cmp
sbb
mov
data16
repz
xchg
pop
icebp
jo
js
adc
insl
xchg
daa
pop
out
int
mov
inc
mov
aad
inc
in
dec
hlt
outsb
jbe
sub
cmp
into
xor
fcompl
addr16
cs
ss
je
sub
iret
cmpsb
gs
rclb
hlt
mul
bound
jge
or
dec
mov
mov
jne
stc
int3
and
orl
clc
loopne
out
xor
aas
push
xor
fs
push
movsw
test
push
mov
fnstenv
and
inc
xchg
sub
stos
repz
es
test
cld
jl
sub
imul
imul
aad
jg
lods
out
sbb
outsb
adc
mov
test
inc
arpl
lods
pop
in
jo
inc
add
mov
sub
je
dec
fnstsw
sbb
into
enter
inc
mov
add
sub
mov
or
mov
jb
aad
jb
aas
cmpsb
cmpsl
dec
mov
fnstenv
mov
jp
inc
shld
lods
cmp
push
cli
inc
sahf
sbb
pop
addl
fs
or
push
jbe
xchg
jno
mov
mov
mov
mov
dec
rolb
scas
mov
scas
cmpsl
sbb
pop
test
jns
jmp
call
outsl
adcl
adc
andl
push
addr16
dec
shrb
arpl
je
ja
adc
sbb
xchg
enter
mov
fstp
xor
fwait
rcr
aad
shll
imul
lahf
xorb
jae
decl
shrl
jbe
mov
dec
adc
add
jns
sbb
jbe
das
cmc
sub
mov
int
ret
bound
addr16
pusha
adc
xor
xchg
or
mov
push
test
cwtl
pop
jno
int3
pushf
mov
cmpsb
repz
jmp
out
cmp
sbb
push
popf
popa
xor
div
cmp
fidivrs
jg
jg
outsl
mov
imul
mov
mov
outsl
pop
repz
cmpsb
int
pop
xor
test
mov
lods
push
jmp
or
pop
dec
fistps
xchg
lods
cmp
test
enter
jae
insb
cmp
in
into
xchg
push
clc
insl
add
bound
cmovae
adc
mulb
dec
icebp
and
nop
jmp
inc
cmp
sbb
ds
or
inc
rcrl
adc
repnz
ljmp
inc
mov
insl
ja
lea
inc
stc
xchg
pop
mov
ret
inc
gs
frstor
mov
rolb
pop
lock
fldt
stc
dec
mov
or
jecxz
lcall
sbb
dec
jecxz
hlt
jge
add
cmc
add
inc
jae
ret
movsb
pop
fsubrs
in
and
xchg
cmpl
lods
dec
xchg
test
push
mov
push
push
add
in
scas
jne
pop
push
mov
pusha
loop
xchg
test
aad
dec
pop
ret
leave
js
sub
mov
aas
imul
mov
push
mov
out
clc
jae
cmp
jno
popa
mulb
and
scas
dec
ds
nop
daa
and
mov
sbb
sub
dec
fucomip
xchg
xor
enter
mov
mov
std
mul
xchg
xchg
jns
dec
sub
sbb
or
pop
repnz
pop
shll
fdiv
jg
ja
mov
adc
xchg
xchg
adc
mov
dec
ja
jb
sbb
les
sub
mov
xchg
jge
xchg
nop
xor
ss
sub
in
sub
mov
jmp
adc
test
jge
mov
dec
fwait
in
xchg
pop
fucom
f2xm1
xchg
fdivrs
and
rol
add
pusha
ret
xchg
push
les
aaa
and
mov
adc
cmp
outsb
repz
inc
andb
ret
cmpb
stos
mov
sbbb
inc
outsb
addb
mov
fmull
cmpsl
dec
sbb
lock
outsb
stc
call
pop
jb
test
sbb
loopne
jl
pop
mov
xor
scas
std
lds
add
add
dec
jl
cmpsb
lods
arpl
addr16
dec
mov
stc
das
out
test
dec
xchg
sbb
adc
push
sub
xor
test
jge
push
or
mov
mov
add
jnp
scas
mov
pop
repz
pushf
mov
into
jp
add
enter
dec
out
repz
outsb
cs
adcl
leave
iret
or
sub
cmp
ja
push
dec
dec
push
jp
mov
jp
and
fwait
mov
lret
or
enter
mov
scas
xchg
loop
dec
add
nop
dec
loop
repnz
lahf
arpl
cmp
out
cltd
pop
adc
push
lock
lods
cmp
pop
insl
leave
xor
ljmp
fidivs
push
fisubrs
hlt
push
pop
add
iret
cmp
fmul
int
jbe
movsb
jecxz
lahf
ss
movsb
pop
pushf
ds
or
fwait
mov
cmpsl
inc
cmp
lds
push
cltd
insb
aad
mov
xlat
jmp
sub
mov
stc
cmc
mov
lods
xchg
into
adc
cmovp
mov
mov
and
lock
lret
cmpsb
cli
dec
xor
jle
ficoml
dec
test
les
cwtl
push
fsubrs
aam
or
movsb
shl
aam
ss
pop
mov
cmpsb
fs
xor
imul
ljmp
je
cltd
xchg
out
je
and
adc
out
mov
sbb
pop
idivb
lods
ljmp
and
shlb
push
insl
ljmp
popf
out
dec
cltd
xor
in
out
sbb
cmpsb
and
iret
rclb
inc
mov
jg
sbb
xlat
lcall
inc
movlps
inc
arpl
xor
cmpsl
iret
in
cmp
into
imul
inc
add
mov
test
lret
pop
iret
es
inc
pop
or
or
xchg
cmp
sbb
xchg
mov
insl
pop
lahf
outsl
cmpsl
sub
push
and
mov
sub
and
das
adc
fstps
mov
icebp
jg
mov
aaa
stos
out
insl
jge
mov
fnstsw
aad
cmc
or
pop
out
add
in
jmp
sbb
pop
or
adc
nop
rolb
or
mov
mov
sub
in
xor
mov
mov
cmp
lret
or
or
fwait
mov
pop
leave
mov
mov
pop
sub
shlb
jbe
jl
or
and
outsb
push
mov
cmc
mov
shr
in
cli
pushf
xlat
mov
sbb
pushf
dec
insl
ret
jle
test
mov
icebp
in
pusha
mov
insl
in
push
addb
ss
popf
mov
push
adc
mov
xor
dec
add
lods
call
or
cmpb
push
cmp
fmul
add
adc
lcall
pop
hlt
pop
rclb
sub
out
testl
jae
hlt
sbb
xchg
xchg
out
inc
inc
dec
loope
in
aaa
mov
mov
mov
add
inc
fnstenv
movsl
mov
frstor
push
test
add
dec
stos
lock
inc
leave
test
int3
loopne
adc
xchg
popa
fwait
test
pop
inc
dec
adc
push
jbe
xchg
lods
nop
push
mov
mov
mov
dec
pop
xchg
leave
call
or
fnstsw
outsl
add
push
popf
mov
or
in
shrb
push
jg
add
fadds
sbb
aaa
cmc
adc
push
ret
leave
into
jecxz
outsb
adc
cmp
mov
fildll
mov
test
rcrl
fldl2t
shl
dec
jae
mov
mov
sbb
mov
and
adc
xor
pop
lahf
xlat
xchg
jns
jl
pop
mov
push
ds
imul
sbb
cltd
add
xor
cmp
xchg
sbbb
or
sbb
movsl
mov
dec
fists
insl
cmpb
jmp
xchg
mov
loop
stc
sbb
pop
adc
sbbb
sub
lahf
mul
and
and
insb
cmp
imull
bound
mov
loop
pop
xchg
testb
insl
push
and
or
pop
test
and
lods
test
lret
aas
add
pop
or
cmp
dec
pushf
pop
inc
loope
pusha
ss
test
xchg
sub
in
jne
mov
outsb
iret
pop
fimull
jmp
or
cs
push
add
ret
add
jle
or
mov
out
fimull
jl
push
sahf
cmc
pop
out
add
xchg
xchg
pop
mov
mov
repz
inc
cmp
cmc
pop
test
inc
jle
mov
pop
ds
imull
sbb
pop
es
or
inc
sarb
push
insb
divb
fildll
cmp
notb
mov
jno
dec
jb
out
addb
mov
insb
adc
fcmovnb
lcall
jne
ror
inc
push
imul
loope
insb
add
and
cs
mov
pop
pop
and
sbb
pop
mov
add
imul
cmpsl
xor
test
sub
popa
push
ljmp
push
sti
inc
into
outsl
inc
fmul
aaa
xor
inc
pop
aaa
jp
sahf
mov
adc
dec
fdivp
mov
lock
fcomip
mov
std
lahf
ss
ret
lods
fdiv
fistps
clc
inc
ljmp
lods
push
aas
adc
inc
cltd
push
imul
xchg
out
popa
sub
hlt
pop
pusha
sbb
cltd
notb
cmpsl
cmp
pop
ret
ficoml
adc
xor
push
pop
cltd
sub
pop
incb
mov
clc
arpl
push
xor
loop
stc
sbbb
rcrl
jnp
or
filds
xchg
loop
cs
adc
pop
mov
mov
sbb
or
mov
fldenv
pop
push
fisubrs
into
and
movsb
daa
mov
mov
push
or
or
sbb
loopne
out
push
shlb
lea
jbe
pusha
adc
loope
xchg
and
sub
jae
outsb
xchg
dec
add
int
leave
push
pop
and
movsb
xor
scas
std
repnz
xchg
pusha
add
cwtl
out
sbb
dec
sub
call
dec
stos
push
imul
xchg
push
popa
jg
add
sub
popa
mov
adc
imul
pop
dec
subl
lock
stos
pop
cmp
mov
ljmp
dec
aaa
mov
scas
jns
mov
dec
mov
dec
inc
in
mov
sti
dec
leave
xor
mov
imulb
pop
scas
jmp
jo
loopne
aas
jb
rcrl
dec
xchg
les
mov
dec
in
enter
jb
js
je
jp
jge
rol
xlat
mov
outsl
cli
popf
cwtl
sti
or
xor
lea
leave
push
cld
sub
scas
into
loope
push
outsl
rcr
js
test
adc
movsb
gs
sti
mov
imul
inc
mov
add
mov
insb
inc
insl
push
inc
push
jmp
mov
sbb
popf
pop
and
ja
cli
xchg
in
mov
cs
cwtl
xor
mov
shlb
sub
sbb
xchg
je
push
and
adcb
xchg
ljmp
lock
jns
cmp
subb
inc
sbb
mov
jge
push
sub
pop
cmp
xor
dec
daa
fwait
push
orl
outsb
push
mov
movsl
add
out
xor
push
int3
std
movsb
mov
pop
push
in
dec
out
sbb
and
or
cmpsl
fsubs
dec
in
sbb
lcall
or
ret
push
test
sub
mov
push
ja
cmpsl
mov
adc
lods
sub
push
leave
sub
dec
ljmp
push
icebp
rclb
sub
test
sbb
popa
mov
ficomps
imul
cmpb
shlb
fdivrl
xor
aad
xchg
sti
mov
pop
mov
mov
cmp
sbb
scas
cmp
hlt
call
mov
pop
je
mov
or
sbb
jo
pop
das
add
sub
cli
rcl
loop
xchg
lock
cmc
lcall
shlb
cmp
or
or
push
andb
loope
cs
js
bnd
lcall
mov
mov
shlb
push
jl
cmp
jnp
push
lods
dec
rcrl
lds
push
push
sbb
dec
les
jb
mov
sbb
fnstenv
cld
xchg
mov
dec
mov
jge
or
lods
into
mov
out
rcrb
cmp
xor
mov
inc
ret
out
add
daa
mov
pop
mov
rcrb
mov
mov
jno
jae
mov
or
jp
ret
pusha
ljmp
in
ja
pop
das
sub
or
repz
sbb
insb
pop
or
cmpsl
inc
sub
sbbl
out
je
js
xchg
and
xchg
xor
in
mov
add
insl
mov
imul
repnz
xchg
mov
shlb
insl
or
outsl
mov
xor
rcrl
repz
dec
imul
push
lods
mov
paddsw
and
scas
xor
cmp
or
cmp
push
sub
cmc
xor
mov
test
movsb
inc
aas
and
stos
xlat
and
inc
fsubrs
lret
daa
mulb
mov
jnp
cs
inc
fnstsw
inc
pusha
xor
mov
xchg
js
and
pop
cmpsb
and
xor
add
jbe
in
cmpsb
cmp
mov
mov
out
outsl
push
pop
ficoms
and
mov
push
repz
shrl
add
jno
mov
and
sub
xchg
sar
mov
xchg
jnp
dec
mov
cmp
outsb
cmp
lahf
xchg
mov
vhaddpd
mov
ret
ret
and
cmp
rclb
lahf
ss
mov
mov
ficoml
fdivl
call
cli
push
lcall
jnp
and
jmp
out
jmp
enter
jbe
notb
inc
xor
enter
mov
adc
fxch
xor
jl
icebp
sbb
sahf
mov
sub
push
jl
into
arpl
stc
dec
lret
shrb
xchg
daa
cmp
or
imul
std
push
add
lock
pop
pop
and
orb
inc
mov
cld
mov
inc
fidivl
jae
cmp
bound
shl
jns
loope
or
cmpsl
or
leave
mov
jge
cwtl
lret
pmaxub
test
popf
push
es
push
fisubl
xchg
jbe
shrl
js
jg
push
sub
subl
lea
push
repz
jno
lcall
in
pusha
fidivrs
outsl
add
icebp
push
cwtl
mov
out
aas
add
cmp
addr16
cmp
jp
cmp
lret
in
add
jns
cwtl
div
movsb
hlt
inc
sub
xor
aaa
adc
add
push
in
fs
ret
pop
add
mov
mov
push
into
xadd
and
int3
scas
lods
push
imul
popf
jne
push
jmp
loopne
jno
add
call
jbe
das
vmovaps
or
iret
jge
mov
insb
push
shll
adc
fdivl
inc
inc
mov
into
adc
stc
testl
adc
cld
icebp
and
or
shr
push
add
in
js
ss
jmp
lahf
add
in
pop
push
and
xor
xchg
dec
or
dec
and
out
adc
out
decl
jae
xchg
sub
pop
fcmovb
daa
or
ret
mov
mov
mov
lret
jecxz
loope
mov
push
outsb
loop
xchg
inc
daa
mov
mov
push
jae
lods
outsb
mov
xchg
iret
pusha
mov
xlat
mov
cmp
jp
lea
fwait
xor
shrl
lret
out
jp
stos
or
shrl
push
shrb
xor
js
ret
jno
jge
leave
push
in
daa
outsl
sbb
sbb
ret
mov
lds
add
imul
in
and
xchg
mov
popf
sbb
jb
add
add
shlb
jo
jle
aam
inc
out
icebp
pop
dec
push
fst
lret
repnz
sarl
cmp
clc
aas
mov
xchg
cmp
cmpb
mov
ljmp
stc
inc
sbb
lds
sub
and
out
push
inc
add
mov
movsb
repnz
dec
xchg
sub
xchg
stc
hlt
mov
or
mov
cli
mov
inc
and
sbbb
pop
shr
dec
inc
ljmp
mov
dec
dec
inc
icebp
shl
add
aaa
pop
sbb
jp
rcrl
sbb
dec
dec
out
add
pop
xchg
xor
ret
scas
jle
adc
push
push
popf
dec
fists
add
xlat
jae
mov
xchg
mov
sbbl
stos
fsubl
mov
pop
movsb
push
mov
pop
stc
mov
cmp
jle
popa
push
loope
push
aam
jnp
int
and
inc
or
mov
bound
mov
jnp
pushf
pop
aaa
pusha
xchg
ficoml
call
ss
popf
in
inc
bound
or
ds
adc
push
jg
data16
cmp
or
inc
sbb
pop
movsb
cmp
out
test
decb
mov
and
mov
sti
and
push
pusha
std
pop
xchg
dec
andl
stc
push
mov
xor
outsl
push
das
lcall
imul
mov
sub
inc
pop
ret
fnstenv
dec
dec
jg
int
outsb
notl
cmc
cmpsb
sub
push
fwait
jbe
xor
fnsave
aas
leave
movsl
fbstp
xor
pop
ljmp
clc
cld
pop
jecxz
lea
and
mov
or
cmpsb
push
cltd
pop
ss
pop
shl
cmc
mov
test
rcrb
dec
ret
xchg
and
xchg
or
and
xor
jl
push
fdivl
lods
jno
sahf
pop
pop
je
or
mov
xlat
aad
add
push
dec
rorl
aaa
popa
mov
dec
mov
push
sub
ret
dec
arpl
mov
pop
jp
loopne
push
sub
push
pusha
ja
aad
xchg
je
mov
aad
clc
ret
movsl
jecxz
pop
pop
call
rcl
lea
nop
jb
jg
in
mov
xchg
aad
dec
or
pop
xor
fcmovne
sbb
mov
mov
hlt
or
notl
pusha
popa
clc
dec
push
mov
and
dec
cmp
test
mov
inc
add
fcmovnbe
mov
push
movsb
inc
inc
sbb
pop
xchg
pushf
or
fldl
cwtl
dec
cmp
aam
sub
cwtl
mov
xchg
movsb
add
loopne
cmp
ret
mov
xchg
push
xchg
pop
int
aad
jge
pop
xor
dec
push
jl
push
mov
sub
xor
cld
xor
mov
aaa
xorb
pop
movb
cmp
orb
add
subps
leave
shlb
sub
js
rcrb
dec
lods
add
or
int3
dec
fisttps
ds
inc
cmp
popa
scas
shl
aas
push
pop
jl
mov
cs
arpl
lds
int
xor
je
ss
loopne
icebp
xchg
sbb
fmuls
lods
xchg
sbb
and
popf
pop
popa
jmp
mov
ret
xor
cmp
jle
shl
cli
inc
jge
push
out
jmp
lret
mov
cli
popa
sbb
gs
pop
push
call
jp
outsb
std
dec
sbb
inc
pop
inc
xor
jmp
xor
scas
mov
add
pop
adc
aad
sbb
mov
pop
ja
cmp
lcall
insl
andl
jge
in
cmpsb
push
jle
fnstsw
push
sub
fimuls
out
mov
mov
push
bnd
frstor
push
mov
fwait
cmp
in
sub
xchg
lods
inc
repnz
es
cmc
fsubrl
scas
orb
mull
mov
sbb
lock
inc
test
jecxz
jbe
push
sub
pop
cld
push
nop
mov
fnstcw
les
or
rcrb
daa
mov
add
pop
sub
and
sbb
mov
mov
fsubrl
fidivrs
and
push
push
cmp
mov
inc
add
daa
testb
lahf
cmp
inc
fcomip
fisubl
add
add
lcall
pop
jl
mov
mov
mov
pushf
sbb
sahf
add
enter
clc
rclb
lock
push
mov
dec
enter
cmp
scas
sbb
fdivrl
sub
int3
lret
fucom
mov
push
fcoms
xchg
sub
sbb
pop
lock
es
xor
mov
push
push
pop
sub
add
dec
arpl
stos
mov
faddl
out
ror
jl
sbb
xchg
xchg
and
cltd
cmpsb
mov
repz
fucomp
mov
cmp
mov
push
sbbb
test
cwtl
pop
pop
shll
pop
popa
jle
xor
pop
insb
mov
and
and
es
or
jmp
push
xchg
jmp
insl
cmpsb
shrl
adc
ljmp
pop
mov
cmp
jp
test
adc
mov
test
arpl
inc
xchg
test
int
es
xor
xlat
xchg
pop
sub
inc
stos
fistpl
xorb
and
jo
aad
test
aas
mov
sbb
imul
jno
icebp
mov
push
daa
mov
mov
lods
or
hlt
sbb
cmp
mov
xchg
rorb
rcl
aas
ret
js
andl
movsl
in
and
adcb
jo
push
mov
add
stos
cmp
imul
test
add
pusha
push
shrl
jmp
pop
test
jo
sub
jge
aad
sahf
push
mov
pop
stos
add
fnstcw
insb
aas
leave
xchg
movsl
popf
andb
gs
xchg
sub
fstpl
adc
out
call
std
test
scas
cmp
loopne
mov
shlb
xchg
and
pop
pushf
fidivrl
mov
sub
je
andb
lret
std
loope
push
daa
aad
int
jns
push
mov
popf
push
xchg
ret
jle
cs
mov
jp
inc
adc
cltd
bnd
and
rcrl
add
sub
xor
das
xchg
adc
inc
mov
movsl
lock
jnp
inc
or
xchg
cmp
shrb
push
out
movsl
out
push
sbb
ja
and
and
rclb
jns
pop
test
mov
adc
call
sbb
stos
sbb
mov
aam
jns
lea
push
pop
or
jbe
fwait
push
pop
aaa
dec
adc
pop
pop
adcl
stc
cmpsb
push
repnz
into
pop
faddl
aad
into
scas
data16
jae
test
pop
xor
mov
mov
mov
pop
int3
subl
push
push
sub
cmp
notl
adc
adc
ds
mov
movsl
cli
stos
repz
rcrl
mov
aad
mov
mov
andb
adc
fiadds
ss
lahf
jecxz
mov
or
pushf
lods
lock
ja
in
js
xchg
call
sbb
stc
insb
ja
daa
jmp
push
sub
ret
cmp
aas
push
sbb
adc
ljmp
mov
push
les
dec
arpl
repnz
xor
lods
je
inc
cmpsb
into
add
dec
enter
mov
sahf
dec
data16
jg
mov
sbb
adc
sub
sub
addr16
insl
xor
sahf
jb
test
adc
mov
and
sarl
out
xor
add
sti
scas
push
cmp
xchg
and
es
std
dec
rep
cmp
scas
test
test
or
data16
jno
int
insb
std
mov
cmpsb
fmuls
adc
and
xor
xchg
mov
lahf
in
inc
inc
inc
jp
mov
lock
pop
sub
add
sub
or
xor
mov
stc
or
stos
shll
mov
imul
xchg
cwtl
jns
mov
and
pop
test
out
sbb
adcb
mov
jp
fnstsw
mov
popa
sub
popa
call
adc
cltd
mov
lods
jmp
mov
push
in
xor
xor
shlb
stos
sbb
xchg
mov
in
jae
jb
pusha
adcb
cs
push
mov
push
sub
cmc
adc
push
mov
xor
xor
inc
out
lcall
movsb
dec
adc
mov
je
mov
adc
sbb
mov
jl
insb
or
clc
push
adc
push
repz
cs
pop
cmp
ljmp
mov
mov
fcompl
push
in
imul
insl
rclb
stc
leave
movsb
loope
imul
or
cmc
sbb
sbb
test
scas
add
push
out
inc
stc
stc
xchg
inc
mov
sub
pop
mov
add
mov
repz
xchg
cmp
lcall
cmp
shl
sub
lahf
cmp
jne
pop
subl
clc
or
mov
push
xor
dec
sub
dec
push
imul
jecxz
xchg
jae
lret
out
std
notl
call
clc
xor
fnstenv
iret
mov
pusha
adc
mov
inc
out
inc
add
bound
adc
jmp
and
inc
pop
sub
inc
lea
std
aam
jl
mov
pop
push
sub
cmpsb
xchg
sub
push
movsl
icebp
nop
cmpsl
jne
mov
sub
daa
jecxz
fisubs
and
and
mov
push
inc
rorl
jbe
mov
mov
or
adc
jns
insb
fsubs
outsl
fwait
add
jae
sti
pop
test
inc
inc
les
push
insb
dec
sbb
xor
out
xchg
aaa
stos
sub
push
roll
push
jecxz
in
inc
incl
bound
lret
sub
and
je
mov
push
arpl
sahf
adc
test
fnstsw
test
push
mov
push
and
and
jno
lds
jecxz
addr16
and
xor
stos
test
test
dec
fdivrs
test
mov
xchg
cmc
and
inc
cltd
or
decl
aad
loope
mov
cmp
icebp
xchg
sbb
dec
mov
test
adc
dec
fadds
inc
mov
aas
push
movsb
xchg
popa
jb
lahf
js
push
lds
adc
pop
or
mov
rcrb
jle
jae
cld
stos
dec
and
xchg
xchg
mov
roll
fidivrl
jp
in
xchg
sub
push
leave
sub
addr16
leave
clc
add
sbb
push
leave
cmp
je
and
cmp
test
inc
in
fwait
jmp
aaa
pop
pop
ds
add
pop
cmp
gs
out
pop
or
jge
cmpsl
ficoms
cs
add
stos
dec
cwtl
loope
ja
movsb
lods
xor
cmp
push
dec
jecxz
inc
push
addr16
incl
sahf
sahf
and
mov
sbb
fldenv
mov
dec
mov
push
pop
lcall
mov
inc
int
push
or
cmc
mov
push
pop
jmp
push
scas
test
test
fwait
je
mov
icebp
ljmp
sbb
pop
lret
sub
or
xchg
lahf
fwait
iret
xchg
sbbb
subb
shlb
and
out
jne
pop
and
ds
jnp
imul
andb
adc
test
and
inc
lods
iret
and
push
aaa
addl
lret
ret
add
testb
push
push
stc
setne
test
mov
adcl
xchg
movsb
or
mov
fstps
pusha
xchg
mov
ret
pop
and
jnp
cs
test
cli
outsl
mov
mov
mov
mov
fdiv
cmp
mov
cmp
dec
subb
pop
xchg
incb
jae
adc
jne
sbb
adc
lcall
pop
cmp
popf
pop
hlt
in
cmp
adc
mov
fsubl
push
lock
mov
popa
lret
iret
jmp
or
dec
xchg
jae
add
ja
out
sti
stc
lea
mov
rcl
jg
cmpsb
mov
fsubrl
iret
fwait
or
add
cltd
ss
xor
lods
sub
loope
shll
daa
cmpsl
push
in
jns
push
mov
mov
push
dec
nop
lods
xchg
cmp
cmp
push
outsl
pop
addb
testb
sub
pop
inc
dec
repnz
pop
mov
ljmp
xor
push
xchg
stos
pop
dec
ficoml
and
test
push
sbb
mov
jge
loop
aad
push
sub
loope
gs
mov
adc
pop
jle
sarb
outsb
jl
sub
mov
psubw
iret
fcmovu
out
xor
js
jg
mov
xor
call
mov
jo
sub
int3
push
push
xor
and
xchg
cmp
and
out
out
out
pop
push
jge
jp
loopne
rolb
or
push
aad
sub
ret
mov
arpl
mov
pop
push
les
mov
in
enter
and
testl
fcmovnu
sahf
jne
mov
fnstenv
cld
mov
jp
pop
dec
mov
push
cs
shll
in
inc
or
pop
dec
je
div
add
cmp
inc
xor
ficoms
jecxz
add
insb
mov
lds
jne
clc
sbb
faddl
xchg
inc
xchg
inc
das
fdivl
dec
iret
jp
arpl
mov
mov
shlb
pop
sarb
xor
rcrl
lock
sbb
jns
sahf
add
xor
mov
call
mov
lods
xor
dec
lret
shrl
jnp
push
add
fucomp
sub
xor
rcl
cmp
popf
out
mov
sarl
out
push
insl
add
mov
sub
push
and
popfw
daa
push
filds
mov
mov
mov
push
xchg
mov
push
iret
mov
sbb
xlat
sbb
sbb
push
dec
xchg
pop
insb
stc
mov
jmp
sub
lret
jg
adc
cwtl
dec
clc
jmp
or
mov
cli
sbbb
les
sub
lahf
mov
lret
mov
and
and
mov
sub
add
pop
out
mov
mov
test
lret
or
adc
and
pop
je
cld
or
and
cmp
cli
fs
pop
sbb
add
push
psrad
and
push
sub
dec
or
test
arpl
repz
cmpsl
dec
outsl
out
repz
pop
adc
push
jle
push
push
bound
subb
lock
aaa
push
pusha
hlt
add
ss
mov
jle
jg
js
mov
mov
inc
push
lea
into
sub
inc
outsb
enter
push
adc
add
mov
fadds
gs
adc
mov
xchg
push
lods
sub
fisubrs
pop
xchg
std
mov
mov
ljmp
lret
cltd
mov
push
insb
mov
sub
call
or
mov
sbb
lea
xchg
pop
xor
mov
jge
mov
pop
adc
xchg
cmc
add
xchg
push
xchg
cmpsl
jge
js
int3
in
sahf
push
xchg
bound
sub
shrl
pop
adc
dec
mov
add
pop
in
mov
lds
lock
mov
daa
mov
aam
xchg
pop
fldt
add
fdivp
jbe
add
pop
xchg
cmpsl
mov
jmp
inc
mov
shll
mov
js
lret
mov
and
test
xchg
test
jae
sbb
or
insb
jb
outsb
repz
jmp
mov
test
and
bound
fwait
cmp
sub
stos
inc
arpl
in
adc
inc
shrl
arpl
mov
aaa
fucompp
test
mov
inc
in
pop
mov
mov
mov
ja
out
pop
sub
in
jns
push
mov
cmp
fidivrl
stos
xchg
loope
call
cmpsb
jmp
dec
rorl
loopw
loope
sub
lahf
stos
call
and
ret
cwtl
stos
jmp
mov
xor
out
test
cld
jl
push
jmp
and
or
mov
inc
in
lock
xor
andl
jp
mov
cmpb
push
scas
pop
ds
sbb
movsb
ja
jns
lds
mov
add
xchg
sub
cmp
cmp
icebp
cs
pop
pusha
adc
jp
test
popa
rorl
jg
jge
mov
imul
dec
inc
xchg
scas
fucom
test
aad
lret
js
xorb
push
test
das
ljmp
sub
jp
stc
mov
pop
adc
push
mov
loopne
pop
enter
dec
push
xor
out
inc
pop
jmp
xchg
push
jge
bound
repz
or
lea
aam
add
jo
sbb
adc
cld
leave
test
pop
imul
pop
je
aas
stc
mov
into
cmp
xor
xlat
ds
aam
cmp
mov
mov
pop
mov
popf
inc
jge
inc
fsubp
in
pop
lcall
xchg
inc
adc
xchg
mov
dec
push
push
repz
mov
mov
sub
clc
popf
mov
jb
jg
mov
mov
and
data16
cmp
test
movsl
mov
mov
xchg
xchg
mov
stos
in
or
pop
mov
je
jmp
dec
jo
shrb
fwait
fs
pop
dec
pop
xor
sbb
or
or
testb
sub
push
inc
lea
mov
fistpl
push
gs
out
pusha
mov
mov
std
iret
loopne
cmpsb
loope
cmpsb
cmpsb
mov
je
movsb
lret
cli
inc
lret
pop
sub
push
jae
clc
inc
push
xor
jge
or
int3
inc
sub
aaa
or
and
mov
pop
sbb
lcall
and
in
rol
sub
cmp
pop
in
shr
inc
sub
xor
add
cltd
jnp
add
xchg
imul
mov
inc
xchg
xchg
pop
sub
or
dec
mov
scas
xchg
inc
ja
jbe
xor
jno
test
into
mov
dec
mov
in
cmp
js
aaa
xor
push
mov
int
mov
iret
and
sub
leave
inc
out
mov
and
lods
outsl
daa
orl
xchg
mov
or
push
ljmp
testb
and
imull
scas
jp
mov
mov
inc
adc
lock
cmp
negl
loop
and
jno
or
aas
sahf
lret
ja
add
xchg
mov
fildl
repnz
or
mov
adc
ficoml
xor
nop
inc
cmp
testb
insb
pop
pop
sbb
jo
jno
jns
in
cmc
lock
shr
popa
in
sbb
pusha
movsb
or
or
lahf
fnstenv
es
mov
pop
test
jmp
outsl
pop
scas
xchg
ds
mov
sbb
jae
icebp
data16
cmovle
inc
rcll
sub
out
cmpsl
add
mov
push
push
lahf
jg
cltd
mov
jo
push
pushf
outsl
sarl
aaa
or
shl
xor
push
outsl
inc
and
adc
push
jns
int3
aad
xchg
adc
adc
mov
sub
adc
sbb
sti
sbb
ret
xchg
aas
mov
mov
imul
fwait
xlat
adc
incb
lret
or
add
mov
shll
adc
cltd
mov
xchg
inc
shll
lods
sub
repnz
xchg
insl
push
jbe
cwtl
stos
sub
insl
sub
dec
aad
stc
cli
sub
cli
fwait
lods
fdivl
cli
xor
and
cmp
call
push
ljmp
arpl
ret
xlat
es
jmp
cmpsl
lahf
int3
dec
pop
shlb
sbb
pop
dec
adc
jl
push
or
je
out
and
push
stos
or
lret
inc
outsb
jge
xchg
and
shrb
push
pop
addl
dec
jl
jge
add
nopl
dec
out
lods
or
out
sub
dec
jnp
mov
add
jnp
push
fbld
movsl
push
mov
dec
shl
dec
test
shrb
les
or
jbe
fisttpl
inc
jnp
and
lret
rorl
cwtl
dec
sti
shrw
mov
icebp
adc
das
inc
bound
cmp
add
mov
push
mov
push
mov
jge
sub
sti
clc
adc
xor
push
leave
aad
sbb
pop
pop
xor
cmp
xchg
jns
into
xchg
xchg
mov
testb
adc
in
lods
subl
in
sbb
mov
xchg
out
jl
mov
xor
xor
addr16
les
and
and
std
push
test
rcrl
int3
in
and
push
repnz
xchg
outsl
adc
inc
dec
sbb
inc
insl
and
pusha
shl
int
addb
or
cmp
sub
in
fisubrl
push
loope
lds
out
jecxz
out
cmp
dec
icebp
jb
cmpsb
mov
cli
jge
jnp
xchg
push
mov
mov
loop
insl
sbb
cmpb
cld
inc
pop
sub
es
inc
int3
jg
icebp
mov
sub
pusha
popa
mov
push
jnp
xor
movsb
cmp
mov
xor
fwait
loopne
mov
sub
push
mov
cmp
int3
dec
aas
jl
mov
sti
and
mov
add
imul
adc
xchg
in
cwtl
dec
ret
ss
mov
aad
dec
add
sbb
out
mov
pusha
lods
les
scas
inc
jo
mov
mov
or
jle
repz
push
adc
mov
add
popa
jae
xchg
pop
or
cmp
mov
jae
insl
sub
hlt
pop
movsl
sahf
mov
loopne
pop
nop
adc
sub
mov
dec
mov
sub
mov
cmp
in
aas
mov
out
outsb
aad
dec
mov
jmp
sbb
movsb
fadds
add
mov
jne
jmp
dec
push
push
mov
cs
enter
jge
aad
mov
jmp
leave
mov
mov
xor
arpl
xor
mov
xchg
add
mov
fdivrl
adc
lcall
sub
push
sbb
add
jb
dec
jecxz
or
lcall
mov
mov
out
subb
sbb
mov
jp
jb
movsb
mov
inc
jmp
scas
stc
and
mov
cmp
mov
mov
lahf
pop
stc
mov
jmp
xchg
sbb
pop
jbe
adc
mov
sbb
in
mov
sbb
mov
mov
mov
js
faddl
jne
int
fcmovb
jmp
hlt
sti
jae
and
enter
xor
arpl
xchg
add
dec
dec
dec
push
outsb
jecxz
ret
dec
and
sbb
mov
outsl
xchg
mov
shl
lods
jmp
imul
popf
lods
das
movsl
and
add
outsl
das
fdivp
xchg
arpl
leave
sahf
xor
outsb
push
or
cmp
cmc
rorl
or
add
seto
or
jl
or
rcl
mov
adc
mov
or
jp
inc
les
nop
mov
pop
cmp
mov
fwait
jecxz
dec
in
adc
clc
fiadds
jg
xor
cs
or
adc
scas
mov
ds
leave
pusha
jbe
repnz
and
out
jl
ljmp
sbb
aaa
fcoms
inc
xchg
sub
loop
add
cmp
push
lods
add
fsubr
lea
es
cmc
mov
shrl
pop
shll
inc
mov
icebp
shll
inc
iret
sbb
mov
sahf
cmp
call
fwait
ret
inc
xor
sbb
adc
push
data16
stos
popf
pop
or
mov
inc
push
aaa
outsl
test
ds
mov
and
call
inc
rcrb
sahf
stos
pop
jge
lahf
cmc
or
push
ds
daa
outsl
sbb
pop
andb
jnp
and
ret
leave
xor
xchg
xor
or
cmp
mov
push
cmpsb
cmp
ds
xchg
in
lea
aas
in
mov
dec
movd
sbb
xchg
sbb
cmpsl
mov
push
std
mov
or
push
jb
call
push
mov
push
push
push
mov
adc
adcb
aas
push
add
fwait
outsl
add
cmp
mov
int
pop
sti
out
rcll
jge
test
adc
push
test
pop
jp
std
jp
cmp
mov
mov
and
push
pop
cwtl
in
stos
pop
cmp
loop
push
cld
mov
add
pop
rclb
std
movsl
testl
pop
hlt
sub
aad
sbb
xor
dec
add
xchg
mov
in
sub
sub
jo
aaa
dec
mov
jle
jge
lock
dec
out
xchg
bound
xlat
jno
mov
pop
in
js
fmuls
mov
aas
sbb
in
fsub
push
outsl
sbb
enter
push
xchg
fs
fiadds
pop
insb
xchg
and
lea
shlb
xchg
add
lret
inc
pop
addr16
cmpsb
mov
daa
or
push
xchg
cmc
sti
movsl
sub
xchg
jne
mov
mov
sub
std
ja
sub
sub
dec
lods
dec
pushf
rolb
shrl
repz
adc
das
clc
mov
mov
push
and
jecxz
sub
inc
mov
insl
cmpb
push
popa
fstl
xor
jnp
test
out
inc
sbb
cmc
xlat
sbb
in
out
mov
dec
shr
jle
and
ss
mov
ljmp
scas
aas
sbb
iret
clc
call
lods
lock
out
lods
mov
cltd
arpl
lcall
pusha
call
pop
repnz
cld
inc
cltd
xor
jnp
test
and
push
test
stc
mov
insl
stos
pop
test
mov
mov
adc
loope
mov
or
push
push
add
jmp
popa
mov
lds
mov
or
push
xor
bound
mov
adc
push
dec
lret
jl
test
dec
cmp
pop
ljmp
insl
xor
sahf
fisubrl
mov
mov
jbe
lret
out
jo
ds
jnp
clc
idivl
sub
add
popf
cmc
push
test
lret
add
roll
aad
or
cmpsb
pop
cmc
pop
je
sub
jp
out
and
xor
xor
sbb
pop
repnz
add
sbb
pop
fdivrs
bound
jbe
mov
repnz
sti
repnz
xchg
pop
jg
cmp
adc
dec
imul
adc
scas
xchg
add
and
mov
mov
mov
scas
jecxz
sbb
xchg
hlt
xor
inc
pop
stos
push
dec
subl
popa
fs
in
mov
pop
and
outsl
ret
iret
and
insl
jge
jno
test
clc
xchg
sub
sbb
int
mov
pop
jecxz
cmpsl
or
sub
test
xchg
cmp
les
and
pop
out
pop
insb
pop
lods
xchg
xchg
out
scas
inc
cmpsl
fcomps
sub
xchg
sub
dec
xor
mulb
mov
shrl
xchg
rcll
imul
add
aam
xor
loopne
stos
std
and
je
andl
cltd
rclb
enter
push
pop
mov
int3
in
mov
jo
fimull
mov
mov
stc
sbb
shlb
mov
mov
mov
insb
ret
sub
lods
jmp
mov
test
hlt
sub
outsl
ret
dec
shrl
clc
xor
stos
mov
mov
jo
mov
aam
cmp
out
outsb
repnz
inc
pop
add
dec
push
ret
inc
data16
inc
cld
xchg
jae
gs
sbb
jnp
mov
iret
jb
push
int3
xor
scas
xchg
jmp
fwait
pop
sbb
mov
xchg
jns
push
ret
data16
int3
xchg
or
cmpsl
sbb
lods
ds
sbb
into
cmp
jg
jnp
rcrb
pop
das
shll
and
out
and
mov
or
stos
cmp
push
push
jp
push
subb
and
pop
and
fcoml
ret
jne
mov
jge
inc
sbb
dec
push
mov
in
and
icebp
push
cmp
imul
lret
repz
pop
or
sahf
in
ja
pop
xor
mov
xor
cmp
jl
mov
fnsave
rcrl
xor
add
fsubl
adc
or
mov
out
xchg
fucom
outsl
inc
pop
cwtl
mov
push
idivl
adc
pop
sub
movsl
inc
stos
cmpsb
mov
ds
repz
cmpsb
sbb
repnz
repnz
cwtl
sub
hlt
fldcw
icebp
cmp
mov
ret
orb
mov
mov
ret
adc
call
mov
and
add
lods
push
cmpsb
in
push
popf
xorl
mov
cltd
xor
fs
and
dec
jo
in
jb
pop
cwtl
add
scas
mov
ficompl
pushf
mov
cmc
xchg
stos
and
and
sbb
dec
jb
lds
cmc
sbb
arpl
cmp
push
pop
pop
fwait
push
je
or
inc
pop
mov
xlat
and
mov
lea
dec
and
xor
sahf
push
and
pop
xor
and
xchg
call
or
pop
inc
jo
jb
xchg
dec
andb
es
out
or
pusha
pop
hlt
jecxz
nop
adc
push
pop
insb
push
cmp
scas
imul
into
bound
cmpsl
cmp
mov
dec
js
jbe
pop
popf
orb
fnstenv
dec
sub
fsubr
ds
aaa
icebp
mov
into
loope
mov
mov
xlat
mov
push
lds
jg
imulb
pusha
or
pop
sub
dec
fs
negb
outsl
clc
jae
mov
mov
std
sbb
dec
stos
outsl
daa
xchg
fisttpll
sub
jne
inc
inc
jmp
dec
in
mov
cmc
adc
ja
rcrb
xlat
mov
ret
ja
cli
push
mov
push
scas
inc
in
inc
ds
adc
xchg
mov
push
add
les
cmpl
loope
ror
jecxz
add
out
mov
stos
lds
jbe
negl
flds
sti
cld
cli
and
push
dec
xor
sbb
scas
inc
mov
clc
inc
fsubrs
xor
fildl
divb
sub
nop
add
dec
aad
loopne
je
sti
and
lds
xor
insl
sbb
adc
hlt
pop
push
daa
jbe
xor
pop
out
jbe
mov
xchg
inc
mov
pop
movaps
clc
pop
clc
mov
jae
cmpb
cs
push
in
sub
cmpsl
sub
je
test
icebp
mov
shr
nop
fwait
shrl
aad
inc
pop
push
cmpsb
cmp
dec
aam
out
cmp
stc
inc
mov
cmp
sarb
xor
popf
cmp
pop
inc
push
ljmp
stos
sbb
push
lret
inc
cmp
jbe
adc
mov
mov
push
jne
push
gs
addb
lahf
adc
stos
popa
hlt
gs
arpl
leave
mov
cmp
dec
je
sub
dec
dec
push
inc
push
mov
test
adc
inc
mov
rcrl
inc
cmp
mov
cltd
mov
push
sbbb
push
sbb
mov
cmpsb
cmp
jge
repnz
pop
push
out
inc
push
push
pop
add
cltd
adc
add
addr16
xlat
insl
xor
jne
and
and
dec
mov
inc
sbb
rorl
shrb
mov
xor
push
shlb
jge
adc
pop
inc
aam
je
push
lret
data16
imul
cld
or
adc
mov
outsl
test
outsb
sbb
inc
cmpsb
cwtl
sub
fs
and
cmpsb
les
push
xor
in
xor
popf
clc
sub
sub
icebp
mov
cmovp
cltd
push
push
cmp
push
in
sub
jmp
mov
jb
mov
sub
sub
pop
fldt
in
leave
mov
aas
ret
pop
pusha
sub
xchg
jp
pop
lods
loope
bound
push
rolb
sbb
push
or
mov
je
sub
cmc
push
dec
jg
cmpsl
pop
jl
xchg
lods
rcrl
push
das
loop
dec
fsub
add
scas
fnsave
push
loop
cmpsb
mov
popa
daa
push
scas
pop
pop
dec
ljmp
xor
fs
lock
movsl
mov
std
arpl
xor
stc
mov
mov
movsl
pusha
adcb
or
insb
incb
jp
pop
sub
lahf
inc
rcr
in
jns
jne
shll
dec
pop
jne
lds
shlb
mov
mov
sbbl
mov
adcb
lds
mov
clc
xchg
ficomps
dec
jbe
adc
ss
scas
inc
and
std
cwtl
pop
mov
out
data16
les
fucomi
clc
popa
jmp
cmp
cmp
xlat
cwtl
test
xchg
scas
loope
jbe
mov
mov
pop
outsb
lods
dec
mov
pop
xor
lret
add
loope
push
mov
xor
sub
out
xor
xor
das
les
sub
psubusw
jecxz
xor
rcll
hlt
xor
sbb
les
ja
jne
jecxz
pop
push
mov
pop
iret
add
data16
adc
andb
stos
into
fidivrl
and
test
lds
or
xchg
and
mov
fidivrl
inc
shl
xchg
aaa
jbe
xlat
mov
add
out
jns
movl
add
mov
inc
outsb
out
stos
pop
or
sub
push
push
xchg
pop
inc
gs
shlb
xchg
call
xor
push
xchg
adc
xchg
sub
aad
repz
inc
fadd
inc
insw
je
sub
push
mov
inc
fs
add
cmpsb
mov
inc
and
cmp
testl
inc
sub
adc
xor
imul
cltd
lods
addb
cmp
out
ret
push
mov
scas
sub
pop
hlt
mov
push
cmp
xor
data16
mov
jnp
add
push
insb
ss
mov
pop
push
push
or
mov
daa
fcomip
sub
mov
or
enter
or
dec
cwtl
das
jl
fidivrs
out
xor
int3
mov
ja
in
fwait
inc
sti
movb
out
lahf
push
pop
mov
icebp
int
outsl
cmp
mov
int3
sbb
addr16
adc
aam
fdiv
add
cmc
ja
sbb
jmp
js
lock
stos
jnp
mov
jp
andl
jno
dec
push
repz
mov
pop
not
imul
adc
aaa
lea
insl
cli
ds
pop
test
xor
sub
inc
sub
movsb
mov
pop
mov
adc
into
sub
mov
pop
ss
sbb
out
mov
pop
inc
jg
sahf
cmpsl
movsb
ds
push
stc
scas
push
out
fwait
shrb
sub
aad
lock
jecxz
jge
xchg
add
cld
push
mov
pushf
mov
mov
dec
pop
or
mov
mov
xchg
dec
sub
inc
in
and
xor
filds
xor
fidivrs
push
out
inc
xor
xchg
adcl
mov
fidivrl
mov
mov
add
push
inc
movsl
cli
mov
test
push
sbb
push
in
fcomps
or
fbld
cmp
loop
test
sub
sbb
imul
aam
mov
pop
mov
mov
iret
fldl2t
add
dec
aaa
stos
mov
add
arpl
jecxz
ljmp
xchg
daa
mov
mov
bound
insb
mov
and
pop
daa
ret
addb
rol
xchg
pop
mov
xchg
dec
pop
add
data16
adc
push
pop
cmp
enter
neg
mov
jge
sbb
push
or
mov
test
in
inc
mov
stos
cs
add
fnstcw
popa
fcompl
mov
fiaddl
pop
pop
lret
stc
je
or
dec
cmp
das
rol
in
hlt
dec
mov
outsl
subl
pop
test
fisubrl
popa
jmp
sbb
mov
andl
lahf
mov
jae
dec
pop
es
inc
loop
shl
xor
lret
sbb
pop
xchg
mov
and
shll
loope
sbbb
push
pop
icebp
dec
jmp
aas
xor
lahf
out
cli
push
ljmp
mov
sub
push
out
inc
loop
push
cmp
jl
and
popf
xchg
scas
sbb
mov
cmpsb
enter
jns
aad
sbb
or
sbb
in
sub
cmpsl
xor
cld
mov
pop
mov
movsl
scas
nop
pop
pop
lret
pop
push
mov
mov
mov
les
push
call
lods
jge
cmp
mov
jnp
inc
or
sub
inc
pop
icebp
ja
std
pusha
xor
jge
and
push
imul
cmpsl
cs
pusha
pop
mov
or
out
test
mov
out
arpl
jne
push
xor
xchg
dec
out
sti
xchg
hlt
aas
push
and
jne
addr16
int
pop
jecxz
add
std
add
fdivrs
dec
add
aad
orl
or
loopne
lds
stos
and
hlt
push
outsb
sub
jl
dec
mov
or
test
dec
cmpl
inc
mov
inc
sti
xchg
xor
mov
mov
shlb
jno
pop
add
sarb
sub
lods
nop
add
pop
aad
dec
call
cmc
fldln2
idiv
lods
cmp
sti
inc
push
ss
pop
stc
jne
xor
or
or
shr
inc
cmp
std
lcall
jmp
movsb
push
icebp
mov
add
inc
and
mov
push
mov
jp
and
faddp
xor
push
xlat
popa
jp
scas
adc
inc
mov
clc
aam
mov
lret
pop
scas
cmpsl
xor
pop
adc
push
jne
stos
inc
xchg
jns
shlb
imul
jns
hlt
lock
mov
mull
movsb
mov
pop
es
dec
cmp
or
movsl
out
adc
andb
in
jg
aad
fstpt
inc
and
adc
movsl
iret
or
ljmp
jnp
jmp
add
cmp
clc
aaa
mov
sbb
out
dec
or
cmp
nop
mov
nop
xchg
lahf
mov
repnz
lods
fnsave
es
je
add
xor
sub
add
cmp
sbb
dec
mov
lahf
add
ficompl
arpl
xchg
inc
and
jmp
xor
ret
mov
sbb
dec
out
sub
dec
ret
mov
test
ss
gs
pop
sbbl
push
nop
mov
fdivrl
xor
stos
pop
out
cmp
or
cld
dec
pop
mov
sub
sbb
aam
iret
add
cmp
add
leave
out
js
jg
cli
and
jb
xchg
push
aaa
mov
or
test
xchg
add
andl
out
cmpsb
repz
into
test
les
ficompl
or
adc
les
xchg
sub
dec
scas
out
xorb
push
hlt
push
inc
mov
pusha
jl
xchg
cmpsb
lock
addb
inc
mov
push
outsl
mov
or
mov
pushf
xor
pop
sub
xor
pushf
stc
and
ljmp
pop
fistl
jns
or
pushf
lcall
push
jl
mov
shrl
push
add
fisubrl
ljmp
xor
mov
xor
mov
inc
push
mov
mov
jecxz
xor
cmp
mov
cltd
pop
cmp
in
mov
jb
lds
das
push
hlt
xchg
sub
cmp
popa
ja
shlb
push
push
les
dec
cmp
sub
or
in
mov
scas
ss
or
add
push
dec
test
pop
mov
rclb
int3
ret
jns
cmp
enter
cmp
popa
les
addr16
sub
incl
imul
mov
push
repz
add
push
cltd
out
lret
mov
sub
mov
es
adc
adc
add
adcb
sbb
jnp
pop
test
repz
mov
roll
mov
xor
cmp
rolb
loop
shlb
out
aad
push
hlt
adc
int
out
add
xchg
cs
pop
sbbb
mov
mov
xor
imul
dec
mov
pop
jbe
packuswb
aam
daa
jmp
bnd
insb
xchg
mov
into
in
inc
push
mov
mov
mov
pop
adc
xor
xchg
out
add
jns
mov
in
dec
cmp
shrb
out
mov
dec
lea
shll
mov
insl
jge
mov
push
call
leave
mov
dec
inc
sbb
push
xchg
mov
adc
scas
add
les
jecxz
dec
lcall
fldcw
inc
jmp
inc
push
xor
fstp
and
jne
push
add
enter
cwtl
lods
sub
adc
negl
int3
gs
xchg
mov
mov
push
xchg
jmp
lds
mov
inc
mov
lods
inc
and
popf
popa
int3
rorb
jmp
ss
mov
mov
jo
pop
imul
lods
push
add
aam
mov
data16
pop
or
aam
movsb
insl
sbb
nop
mov
stc
rcrl
iret
mov
sub
icebp
popf
loopne
std
mov
sbb
push
fiaddl
cwtl
lret
sub
mov
add
mov
jge
jmp
popf
inc
adc
movsb
dec
adc
inc
leave
pop
xor
adc
lahf
in
xchg
xor
mov
arpl
cmpsb
cmp
cmpsl
mov
in
shll
hlt
orl
adcl
sti
dec
lahf
sbb
outsl
iret
gs
push
inc
imul
xor
lcall
in
orl
mov
sub
cld
pop
jae
jns
std
xchg
xor
fnstenv
xchg
xor
jo
out
pop
or
pop
pop
xchg
mov
push
mov
dec
pop
outsl
xor
mov
lods
xchg
push
pop
and
and
movb
xchg
movsl
mov
push
lret
xchg
out
test
in
jo
pop
dec
je
imul
cmc
ret
and
cmp
and
fs
sti
pop
sbb
pushf
scas
inc
lret
cmp
out
mov
xor
ja
xor
fst
or
mov
lcall
or
mov
loopne
mov
fdivs
fcmovnb
out
or
leave
ret
aad
or
lock
jcxz
pop
lcall
mov
ja
xchg
cltd
stc
xchg
addr16
adc
mov
xchg
jecxz
add
into
and
xchg
jecxz
add
and
rol
fidivrs
pop
pop
sarb
push
cmpsb
or
push
lcall
lods
arpl
pop
shlb
jno
pop
mov
mov
out
jnp
data16
int
mov
test
adc
cmpsl
mov
mov
scas
mov
mov
nop
out
cmc
fxch
scas
sbb
adc
subb
cltd
and
pop
adc
shll
mov
cmp
cmp
mov
jg
lcall
cmp
mov
inc
cmc
adc
loopne
lods
jecxz
jb
lahf
pusha
mov
jo
or
andl
or
outsl
mov
jecxz
out
xor
stos
aas
das
aaa
or
cltd
push
sub
lock
push
mov
gs
or
mov
test
dec
cmp
shl
add
aaa
sti
push
adc
cmpsl
mov
pop
test
cltd
sahf
aad
mov
mov
jae
xor
sbb
loop
cmp
loopne
push
fldcw
flds
sahf
lret
cmp
sub
xor
push
or
xor
jle
iret
xchg
push
sahf
scas
sbb
scas
mov
push
js
cmp
imulb
aam
sub
add
or
inc
lret
xchg
sarb
sti
mov
xchg
xor
add
in
je
mov
in
or
jno
fwait
stos
push
mov
fsubrl
sub
int
xchg
aas
ljmp
fidivl
jecxz
repz
pop
add
push
cs
inc
xchg
mov
push
in
jns
int
shlb
mov
das
sub
adc
fstpl
insb
bound
hlt
jg
loop
lahf
in
mov
cmp
fwait
xchg
jge
aam
sub
das
mov
sbb
cltd
xchg
pop
mov
mov
jae
dec
mov
cli
xchg
mov
adc
lahf
dec
push
mov
xor
adc
in
outsb
stc
xor
xor
divl
pusha
fistl
mov
fstpt
sbb
das
mov
ja
xchg
clc
ja
es
mov
cmp
jb
sub
dec
imul
mov
std
loopne
mov
enter
mov
push
cmp
lock
dec
mov
or
out
cmp
dec
inc
push
sbb
scas
pop
test
into
adc
xor
and
cli
mov
pop
mov
int3
ss
jnp
sti
lods
lock
jno
jle
aaa
xor
in
cmp
and
icebp
pop
xchg
daa
int
pop
stos
stc
fs
sub
mov
jb
mov
in
cmp
lcall
cli
push
jno
xchg
js
dec
fwait
xor
cmp
push
out
mov
xchg
daa
icebp
data16
lock
lods
lods
fdiv
dec
adc
adc
insb
cmpsl
pop
push
lret
ljmp
cmpsl
xchg
and
es
pop
lds
mov
movb
jb
js
pop
mov
fcoml
repnz
insb
sbb
jae
adc
fcomps
andl
and
dec
jg
sbb
xchg
push
cmp
pop
test
inc
fs
pop
into
jecxz
cmp
cmp
dec
cmpsb
pop
jo
insl
mov
fcomi
xchg
test
mov
out
ret
pop
int3
mov
std
jge
testb
jge
dec
hlt
xchg
es
out
arpl
pusha
adc
lock
mov
mov
push
stos
rol
cs
rcr
sarb
roll
mov
repnz
inc
scas
sub
adc
lcall
inc
rcl
and
push
test
movsb
pop
push
pop
hlt
test
jnp
mov
cwtl
ret
or
outsb
loope
mov
out
xor
test
dec
push
jae
pop
mov
mov
shll
pop
dec
es
fwait
cltd
jae
in
jge
inc
decb
xchg
ret
stos
adc
lret
pop
sbb
aas
dec
inc
sub
mov
out
push
cmpl
mov
add
push
je
push
pusha
int3
aad
cmp
into
leave
dec
iret
add
out
jnp
orb
outsb
jmp
cmp
or
test
mov
xor
xor
mov
insb
cmp
xor
test
aaa
pop
pop
pushf
scas
adc
repz
scas
in
mov
xchg
test
sub
bound
ret
push
sub
aaa
push
mov
loop
enter
adc
pop
imul
cwtl
in
jl
fnstsw
cwtl
and
adc
sbb
stos
fnsave
push
les
out
jge
in
lods
lret
cmp
push
in
std
cmc
jne
dec
iret
push
cmp
dec
out
mov
and
push
and
out
test
sub
shll
mov
adc
lret
xlat
jne
add
data16
movsl
sbb
lds
lods
and
je
xchg
cmp
sbb
call
or
testl
add
std
dec
jae
dec
int
cmp
jb
xchg
push
stc
aam
jb
int3
shll
jl
lret
xlat
cmp
cmp
leave
dec
add
int
stos
and
test
xchg
loop
mov
sbb
cmp
sbb
rcrl
xchg
xlat
pop
fsubl
pushf
scas
int3
pop
and
js
ss
or
daa
jecxz
xor
adc
popf
mov
mov
iret
inc
xchg
stc
jbe
push
std
dec
xchg
cmc
mov
sub
pop
cmpsl
cmp
int3
and
sti
lods
andl
xor
test
or
inc
xchg
xlat
cmp
push
insb
or
adc
in
or
mov
pop
jne
jge
mov
add
jno
out
movsl
imul
test
mov
rcrl
loop
pop
fwait
cwtl
mov
mov
gs
in
push
js
ljmp
jp
cwtl
shll
jecxz
mov
cld
adc
adc
pop
adc
imul
pop
xchg
cmp
repz
sbb
sbb
loopne
push
outsl
lock
repz
jge
push
in
std
or
add
jle
and
fstp
xor
and
lock
adc
sar
cmp
cltd
outsb
mov
cltd
xor
test
xor
inc
sub
loop
aad
and
sahf
ret
mov
jl
push
aaa
adc
repnz
lea
jle
adc
rol
repz
arpl
out
in
iret
adc
das
xor
popa
push
aas
sarb
cmp
jns
insb
sbb
adc
sbb
ja
jl
push
dec
shl
dec
daa
int3
xor
aas
mov
test
pusha
clc
jnp
cmp
je
adcb
sbb
lret
push
test
fildll
and
loope
push
subb
push
movsl
push
ja
add
mov
enter
gs
test
stc
nop
loopne
arpl
mov
mov
mov
and
test
xchg
xor
iret
pop
test
mov
sub
test
pop
lret
pop
inc
ja
dec
mov
pop
cs
dec
es
push
scas
adc
popl
push
pcmpeqb
dec
jecxz
inc
loop
mov
test
call
adc
inc
roll
pop
and
out
lret
stc
and
mov
mov
aaa
mov
nop
push
pushf
shll
enter
je
cmp
dec
xchg
incb
push
dec
mov
ficoml
dec
inc
add
dec
repz
imul
and
in
inc
sub
mov
mov
mov
sub
jno
notl
jle
push
aam
rsm
shrl
jl
cmp
repz
outsb
pop
dec
mov
iret
mov
sub
lds
mov
fisubrl
bound
outsb
xchg
and
lds
pop
loop
ss
cmp
in
iret
adc
jb
and
cmp
movsb
dec
hlt
xchg
cmp
dec
int3
fbstp
into
gs
xchg
jne
call
inc
in
je
or
fcmovb
mov
bound
dec
mov
lock
dec
cmpsb
cli
mov
sub
and
ljmp
mul
stos
mov
mov
ret
test
fimuls
dec
push
jbe
jl
xorl
mov
cld
xor
dec
lock
call
push
cld
inc
in
mov
out
aam
mov
or
insl
fsubp
cmp
add
pop
cmp
mov
lods
ljmp
popa
mov
cmp
push
pushf
sbb
enter
mov
int
mov
add
or
xchg
clc
adc
jle
mov
shlb
in
loopne
roll
xor
jns
lods
mov
imull
sbb
mov
and
cmp
add
pop
lahf
cmp
pop
rep
push
fwait
ljmp
add
push
xchg
lcall
jne
xchg
push
dec
adc
mov
or
ret
sub
cli
les
ja
dec
mov
push
ds
test
sub
test
jno
adc
jle
pop
andb
lea
or
pop
out
sbb
mov
std
jbe
scas
fsubrs
bsr
lret
xchg
push
fbstp
cmc
push
mov
mov
dec
fidivl
cmpsb
movsl
inc
mov
aaa
push
stc
mov
in
jns
push
and
push
xlat
inc
inc
mov
jp
push
loop
ret
cli
or
xchg
int3
daa
repz
bound
cmp
movsl
movsl
mov
mov
dec
int3
iret
push
inc
mov
fs
movb
xchg
mov
loope
pop
and
cmp
popf
cmpsl
sahf
ja
sub
xor
pop
cmpsb
mov
fidivrs
loopne
xor
nop
in
sar
sahf
pop
fnstenv
xchg
outsl
out
cli
loop
inc
jmp
jmp
sbbb
jl
dec
pop
imul
lahf
jo
inc
sarl
loope
inc
popf
xor
dec
mov
std
sub
lcall
inc
jg
or
lret
mov
arpl
cmpsl
pop
test
pop
jns
adc
xor
cmpsb
mov
insl
jle
fsubrs
xor
sub
mov
xchg
inc
flds
test
jecxz
inc
imul
and
fimuls
ret
mov
iret
and
in
ret
jnp
sub
das
dec
xor
insl
loop
adcb
mov
ljmp
fimull
xchg
sbb
push
movsl
cmpsl
shl
ud1
rcll
add
mov
testl
mov
loopne
and
pop
xchg
mov
imul
push
cwtl
mov
ss
pop
rcrb
je
test
mov
sub
sub
fs
inc
dec
cmp
test
int
mov
stos
data16
sti
mov
callw
mov
and
cltd
inc
push
out
mov
icebp
add
inc
and
movsb
cmp
push
clc
xchg
nop
jle
push
stos
mov
xchg
insl
add
sub
sarl
mov
ficoms
test
push
xchg
adc
mov
xor
ret
xchg
mov
clc
xchg
imul
jg
lock
ret
clc
push
dec
filds
dec
outsb
repnz
out
test
fisttpll
ret
push
pop
jno
or
mov
pop
xchg
add
push
loope
sbb
sbbb
cltd
pop
scas
xchg
addr16
mov
outsb
sbb
mov
lea
pop
xchg
jle
aad
mov
mov
jns
icebp
mov
cs
mov
aam
out
mov
loopne
jl
and
int3
repnz
jle
dec
adc
xchg
lret
jae
sbb
sbb
scas
mov
mov
scas
jg
pop
insb
sub
xchg
fs
mov
mov
inc
pop
not
push
mov
sbb
stos
sub
hlt
jne
ljmp
mov
dec
mov
pop
mov
mov
mov
sub
loopne
xchg
imul
imulb
sbb
cmpsb
xor
cli
cli
ret
call
sub
sahf
std
pop
jp
stos
pop
dec
addl
into
push
in
in
add
fmull
popa
jp
jmp
sub
xchg
rorl
xor
fbstp
push
decb
fimull
idivb
xchg
ret
push
aad
pop
lds
les
jp
pop
jo
into
inc
add
popl
in
aas
cmpsb
arpl
mull
mov
clc
addr16
mov
das
cltd
push
cmp
cs
aad
or
mov
jns
mov
mov
out
les
push
mov
push
adc
lcall
push
in
cmpsb
fiadds
sub
daa
cmpsl
add
hlt
and
jge
les
pop
jns
fwait
jmp
nop
pop
ja
pop
add
and
push
lods
into
pusha
push
inc
popf
enter
ds
fidivrs
hlt
mov
xor
adc
xchg
icebp
inc
incl
fsubl
xchg
gs
jmp
sub
push
sub
sti
adcb
push
sahf
jle
inc
movsl
pop
lsl
adc
icebp
add
inc
gs
sbb
in
mov
lret
inc
mov
test
inc
lret
bound
insb
into
clc
shlb
hlt
pop
sbb
aas
ret
wbinvd
movsl
lods
adc
into
stos
xor
cli
sbb
push
std
adc
leave
push
in
rorl
mov
xchg
mov
rcrb
sbb
mov
add
int
jmp
lods
inc
ret
fcmove
push
dec
cli
test
fcomps
idiv
jae
add
pop
dec
js
das
mov
mov
fstpt
ret
scas
mov
xlat
inc
jne
bound
stos
shr
mov
fstps
push
jmp
out
test
repz
sub
and
pop
jnp
mov
xor
insl
ror
sub
popf
push
add
lds
xchg
scas
out
sbb
mov
xor
rcr
xchg
outsl
adc
sbb
dec
add
daa
mov
ret
pop
push
leave
push
cmp
and
cmpsl
cmpsl
or
add
out
cmp
mov
idivl
jge
bnd
loopne
outsb
testl
in
in
xchg
xor
in
test
sbb
out
in
ss
adc
xchg
dec
cmc
mov
movsl
mov
sub
add
je
or
nop
test
out
sub
jns
gs
in
push
pop
lods
jae
jb
mov
outsl
stos
ljmp
es
movsb
scas
adc
sbb
iret
push
mov
fucomip
push
mov
fucomip
xchg
sub
dec
or
push
sub
enter
jb
mov
cmpb
aaa
push
lock
sub
push
cli
fsts
enter
add
inc
and
punpckhdq
xchg
mov
push
jo
aad
mov
and
xor
and
mov
ret
mov
mov
and
push
add
adc
jne
push
in
ja
sbb
cmp
repnz
dec
xchg
stos
divb
pop
adc
xchg
or
pop
imulb
mov
dec
test
in
fwait
negl
and
jb
adc
jle
pusha
hlt
rcrl
data16
pop
out
icebp
sahf
xchg
dec
cltd
jbe
lret
imul
hlt
xor
and
daa
lret
xor
inc
push
out
jecxz
add
xor
je
dec
fdivrl
push
push
jo
fwait
sub
adc
rcl
jne
xchg
iret
icebp
sbb
dec
lahf
sarb
and
es
leave
or
cli
inc
fldt
sbb
ljmp
cmp
jae
cld
jno
xchg
ljmp
dec
fwait
bound
lock
inc
das
and
jbe
push
inc
aaa
dec
stos
jl
mov
lahf
xor
or
sub
cmp
addr16
jae
loopne
int3
loop
ljmp
mov
in
lds
subl
lret
in
outsl
pop
sub
fcomps
jp
ljmp
mov
aam
fs
pop
cmp
jns
rorl
xchg
mov
inc
adc
jnp
sarb
aas
pushf
push
pusha
inc
lea
pop
test
xor
mov
jle
clc
mov
stc
mov
inc
in
cmp
movsb
cmp
mov
sub
inc
sub
and
xor
dec
je
jne
mov
scas
lret
hlt
out
jmp
loopne
aad
insl
inc
jecxz
lock
in
push
loop
mov
bound
pop
add
or
mov
repz
sarl
or
jl
lahf
sub
adcb
jge
loopne
inc
jo
ja
dec
push
insb
fsts
das
or
jle
pop
jo,pn
pop
sub
repnz
fnstsw
dec
mov
and
es
shll
pop
jle
shll
mov
jae
call
in
inc
jo
cmp
jae
xchg
mov
push
iret
inc
adc
std
out
fistpl
pop
and
xor
dec
and
xchg
lcall
mov
push
jne
pop
sahf
xor
in
call
xchg
push
mov
or
cmpsb
dec
fdivrl
add
es
notl
scas
and
gs
mov
xor
sub
xor
push
jo
pop
mov
and
imul
jmp
mov
decb
pop
push
sbb
repz
sahf
fisubs
xchg
pop
mov
push
inc
push
inc
subb
rclb
inc
test
xchg
sbb
mov
enter
rcll
stos
or
mov
xor
mov
adcl
fs
aad
lea
movsl
fdivl
movsb
aaa
xor
cli
push
sub
mov
cmp
dec
mov
imul
mov
mov
jecxz
and
leave
xlat
pop
scas
cwtl
test
lcall
jno
rcrb
lret
mov
mov
stos
sbb
test
xchg
mov
xlat
jecxz
popf
clc
lods
cli
or
add
sbb
jbe
outsl
mov
cmc
or
arpl
push
frstor
cwtl
xor
dec
inc
and
mov
push
jp
cmpl
xchg
out
jmp
repz
imul
call
xchg
je
lock
stc
sub
addr16
xchg
and
ret
movb
clc
or
test
cld
xchg
adc
mov
or
movsb
xsha256
cmpsb
pop
jl
inc
jl
lea
aas
adc
push
shll
pop
popa
leave
push
out
xchg
test
jne
loop
add
jmp
ljmp
inc
xor
jg
data16
pop
divl
fsubrl
ss
xor
inc
adc
jb
sub
cmp
mov
lock
inc
lea
adc
push
inc
in
aad
imul
add
mov
dec
rcl
in
add
push
sbbb
mov
mov
popa
mov
out
xchg
and
push
cli
adc
leave
pop
sbb
or
sub
rclb
loope
call
sti
dec
jecxz
adc
scas
mov
cwtl
push
clc
push
into
mov
decl
addr16
add
add
sub
sbb
addr16
outsb
addr16
xlat
outsl
popa
add
jne
add
inc
xchg
shlb
push
xor
sahf
push
mov
or
mov
xchg
dec
incb
loope
and
or
loopne
inc
testb
mov
lcall
js
push
and
push
stc
nop
mov
push
xchg
out
mov
fwait
sbb
sbbb
cmp
xor
mov
aam
sbb
jecxz
pop
cmpsl
cmp
mov
cmp
out
lds
fimuls
sbb
pop
jg
jmp
push
fcmovu
pop
mov
xor
in
xchg
pop
jecxz
gs
lea
mov
add
dec
scas
xchg
dec
sub
pop
adc
loop
in
mov
shlb
testb
xor
call
int3
arpl
pushf
test
dec
in
xor
and
jne
add
mov
out
xchg
cwtl
xor
mov
pushf
ja
jns
pushf
test
js
shll
ds
push
stos
push
movsl
fldt
or
testb
inc
xchg
cwtl
stos
pop
mov
movsb
jmp
lds
loop
aad
cmp
notl
sahf
mov
sbb
or
add
jbe
sbb
mov
shl
or
dec
inc
push
out
push
mov
idiv
xchg
mov
stc
mov
and
mov
push
jle
ret
push
cmp
dec
cli
pop
mov
jno
cmp
iret
jl
shll
mov
pop
dec
les
xchg
push
push
inc
cld
push
test
addb
push
dec
push
test
insb
sub
shlb
jecxz
iret
mov
lods
je
xor
and
mov
xchg
leave
adc
fwait
lock
inc
fwait
jbe
cwtl
push
pop
dec
pop
fisubrl
mov
movzbl
push
in
icebp
mov
xchg
aam
outsl
push
jmp
mov
in
add
mov
adc
mov
push
jno
movsb
cs
sbb
aaa
pop
je
pop
cmpsb
jmp
fucomip
mov
push
inc
pop
movb
cli
ds
insb
arpl
inc
mov
dec
ds
xchg
mov
push
decl
das
mov
pop
sti
ret
loop
inc
in
ds
mov
inc
fidivrl
ret
fucom
aas
adc
mov
mov
shl
into
or
sub
jl
jno
add
xchg
pop
cli
sahf
pop
mov
or
sbb
repz
in
inc
aaa
je
rorb
lods
es
aad
lahf
test
and
adc
xchg
mov
sbb
inc
les
xchg
jo
mov
mov
mov
push
insb
shlb
test
test
out
mov
inc
gs
ljmp
pushf
scas
cmp
dec
inc
mov
fcmove
sbb
je
sub
push
mov
fiaddl
pop
lret
push
and
loop
and
fwait
mov
push
mov
push
stc
popf
xor
dec
setp
mov
pop
dec
mov
xor
and
clc
add
cltd
xor
sub
pop
mov
pop
cmc
pop
xchg
or
or
push
xlat
shlb
clc
pop
imulb
xor
jge
lock
mov
xor
addl
xor
mov
xchg
lret
push
cmpsb
into
mov
movsl
pop
pop
and
sbb
jb
jp
inc
xor
pop
ficomps
mov
call
insl
jmp
test
call
movsb
scas
or
mov
mov
mov
jp
gs
shrl
xchg
push
enter
aas
fs
cmpsb
jnp
shl
cmpsl
xchg
inc
fisubrl
cmp
sbb
adc
push
xchg
mov
mov
jns
cmove
sub
cmp
outsb
jno
test
outsb
roll
bound
int
in
mov
and
add
sub
and
jp
rolb
icebp
add
es
mov
ljmp
sbb
push
xor
adc
out
test
sub
cmp
mov
add
std
sti
mov
sub
out
rcll
cld
sub
xor
fldl
test
xlat
sbb
outsb
ss
in
mov
dec
sbb
out
shl
dec
lahf
imul
mov
push
ljmp
jno
mov
inc
into
dec
call
fiaddl
or
andb
xchg
mov
inc
fsubrl
dec
cwtl
movsb
lret
fbstp
ret
sbb
loop
cmp
repnz
dec
pop
mov
mov
xor
jg
xchg
lock
dec
int3
test
xrelease
jbe
jmp
add
sbb
rcrl
mov
jge
sbb
pop
pop
data16
repnz
outsl
or
jnp
movsl
cwtl
pop
push
dec
mov
cmpsb
mov
add
sbb
mov
cmc
int3
imul
inc
sub
inc
dec
xchg
cmpsb
sub
mov
test
stos
je
pop
xchg
lods
mov
lcall
loope
je
imul
mov
and
out
in
notl
pop
dec
pop
inc
push
inc
lock
subl
ret
repnz
cli
out
imul
aam
pop
sub
inc
dec
lods
mov
dec
data16
sub
mov
cwtl
mov
pop
sbb
adc
in
call
mov
sbb
sar
outsb
popf
aas
push
xchg
outsl
ret
ficoml
ljmp
and
and
dec
jmp
test
fldl
insb
cmp
mov
xor
in
inc
insl
mov
enter
shl
lret
das
fnstsw
lret
pop
sbb
lods
inc
fwait
xchg
ds
lret
pusha
push
mov
outsl
jecxz
or
dec
call
jmp
xor
iret
sbb
movsl
cmp
inc
stos
cmpsb
rclb
push
fsub
cmp
pop
or
test
pop
frstor
sbbb
lock
jb
in
in
lds
cmpsl
shl
jp
faddl
or
mov
fwait
aaa
and
lahf
push
push
dec
adc
pop
in
push
addb
xchg
out
insl
arpl
cmp
mov
xor
hlt
mov
scas
cmp
mov
loop
xor
insb
aam
rolb
adc
into
dec
fists
fwait
repnz
js
or
jo
xchg
js
jmp
and
cmp
xor
mov
jae
lods
loopne
or
dec
rcrb
push
lea
pop
out
jno
iret
push
stos
push
ja
dec
cmp
outsl
dec
fisubrl
orb
jmp
loopne
xchg
test
mov
loopne
in
sub
and
jge
shll
sar
je
faddl
sti
mov
in
arpl
lcall
jg
add
pop
outsb
rolb
pushf
or
mov
sbb
mov
mov
xchg
mov
pop
push
jne
xor
nop
jne
mov
jb
or
andb
xchg
add
fists
jbe
jbe
mov
dec
stos
mov
xor
mov
jno
and
cmp
gs
xchg
sbb
sub
loopne
sbb
fisttps
xchg
jl
jne
cmp
fnstenv
aaa
mov
je
jnp
int
push
out
inc
cltd
in
std
inc
insl
add
lret
mov
clc
mov
xchg
jge
mov
mov
pop
sti
das
dec
cmp
iret
dec
mov
pop
inc
testb
cmp
jecxz
dec
xlat
inc
mov
jp
shll
ret
call
or
insl
sbb
sbb
push
or
pop
mov
bnd
lds
scas
loopne
mov
iret
outsl
xlat
jge
or
fadds
pop
jg
xlat
mov
mov
cmpsl
add
jmp
in
sub
clc
roll
inc
and
inc
and
add
addr16
or
fists
loop
gs
jns
ud0
test
mov
mov
popa
or
lret
ja
push
das
mov
dec
movsb
jb
les
shl
pop
fxtract
ret
sub
je
push
cwtl
pop
call
hlt
imul
cmp
in
push
push
cmp
lret
mov
jnp
mov
cmp
jo
cld
push
pop
and
leave
es
sbbl
out
in
cli
add
push
cmp
sub
test
sbb
xlat
ja
jle
fistl
jle
cmp
pushf
sub
fwait
loope,pt
ret
mov
not
mov
popa
mov
xor
pop
loop
dec
das
aas
fisttpll
setl
jp
dec
pop
cmp
repz
popf
cwtl
das
ret
stos
jle
daa
dec
mov
insl
iret
jo
jae
enter
xor
push
mov
dec
ret
add
push
pop
pop
mov
clc
scas
xchg
iret
jo
cmp
or
jns
popf
movsb
inc
fistl
adc
lret
cmp
in
mov
bound
sbb
sbb
cld
shlb
push
sbb
or
sbb
mov
mov
or
orps
mov
mov
mov
jmp
test
into
add
mov
sbbl
push
popa
fadds
add
adc
sbbb
pop
js
js
and
adc
cmp
and
cmp
fmul
sbb
cmp
push
popf
hlt
sbbb
push
leave
and
push
aam
cmp
inc
jp
fildl
aas
pusha
xor
adc
sbb
stos
outsb
in
xor
fs
shrb
sbb
gs
fcomip
xchg
fst
clc
imul
cwtl
stos
ja
repnz
xor
leave
xor
push
aad
jb
xor
imul
sbbb
lcall
push
shrb
daa
stos
into
push
sahf
cmp
mov
jae
mov
push
lret
and
ficoml
mov
lahf
and
pushf
test
dec
movsb
repnz
jb
add
xor
jp
pop
lahf
cs
popf
push
ljmp
popf
cmpsl
inc
xchg
pop
in
xorb
mov
xor
cmp
jno
xor
mov
xchg
mov
push
add
push
jo
sub
orb
inc
sbb
lcall
or
stos
in
push
xlat
in
aad
jecxz
bound
add
jge
ss
pop
out
cmp
pushf
ljmp
imul
pusha
dec
stos
inc
jge
cmp
sub
xor
dec
loope
inc
call
sbb
and
je
mov
inc
add
and
dec
nop
addr16
fwait
mov
outsb
adc
push
mov
dec
les
adc
xchg
dec
cmpsb
clc
adc
enter
aad
bound
insb
dec
xor
flds
enter
mov
lahf
ret
pop
jno,pn
test
int
adc
xchg
mov
dec
mov
pop
and
pop
aad
mov
out
popa
je
rcrl
nop
aas
enter
outsb
inc
push
jb
ss
aam
cmc
dec
jns
js
icebp
mov
jge
and
lods
mov
fs
lods
aaa
enter
les
mov
outsl
add
je
pop
push
leave
dec
xchg
dec
insb
jae
rolb
cltd
es
imul
sarb
out
jo
sub
repnz
addr16
xchg
or
sbb
dec
sbb
pop
cmpb
xchg
popa
not
popa
cli
sbb
jns
scas
jl
mull
and
push
cmpsl
out
dec
inc
or
lock
push
out
mov
test
enter
pop
paddusb
mov
test
inc
jo
xchg
dec
xchg
ljmp
insb
jno
cs
stos
outsb
in
mov
dec
daa
mov
sbb
mov
and
pop
push
lods
mov
scas
pop
push
out
sub
jno
mov
push
nop
dec
adc
ret
jmp
stos
adc
inc
ret
test
arpl
sub
mov
xchg
jecxz
or
or
mov
mov
ss
pop
push
test
rcrl
mov
fidivrs
mov
jecxz
sarb
cmp
mov
fsubrp
pop
sbb
inc
sbbl
clc
jae
xchg
es
dec
sub
into
mov
jg
ret
cli
ret
sbb
cmpsb
insl
push
sub
fnsave
ret
es
inc
orb
and
fisubl
sbb
jp
add
cmpsb
les
aas
mov
out
mov
movsb
scas
adcb
in
cmpsb
xchg
insl
jl
lahf
mov
xchg
insb
sbb
mov
jge
xor
dec
sub
iret
mov
test
imul
jo
mov
mov
adc
xor
andb
mov
popa
xchg
jno
fwait
mov
shll
lea
rcr
les
xor
add
ficoml
jb
decl
lods
xorb
fbld
rclb
inc
jge
lahf
rcrl
xor
xor
add
mov
pop
aam
aam
cmp
bound
les
push
jp
fdivs
or
lds
adc
jb
lret
mov
mov
mov
dec
daa
fbstp
imul
lods
adc
mov
push
add
aam
loop
mov
addr16
cmp
mov
and
push
and
push
or
scas
mov
in
mov
scas
jbe
fstpt
nop
push
and
fisubs
sbb
mov
push
out
cmc
addr16
in
mov
jge
or
enter
sti
xchg
or
ret
pop
push
les
jbe
jb
pop
popa
xchg
mov
xchg
arpl
mov
je
aam
mov
nopl
inc
jle
xorb
inc
lods
lds
jno
push
ret
pop
cmp
xchg
loope
shl
test
sbb
inc
and
xchg
dec
mov
or
stc
lea
jmp
add
icebp
stos
jb
loopne
scas
and
nop
stos
xor
cltd
fcoms
stc
pop
ljmp
push
je
shrd
loopne
mov
cli
mov
ds
dec
pop
cwtl
aad
fucomip
frstor
jl
mov
jl
or
sbb
inc
mov
sbb
arpl
sbb
mov
nop
add
popa
pop
add
jno
cmp
cltd
or
jl
cmp
mov
decb
mov
addr16
xor
test
dec
xchg
scas
orl
sub
mov
aad
dec
rorb
mov
xchg
sub
mov
adcb
mov
ds
cs
lcall
ss
ljmp
minps
mov
sub
inc
shll
mov
jge
repnz
cmp
sbb
adc
incb
jp
push
fcom
fildl
lahf
xchg
addb
and
mov
jg,pt
iret
loop
loopne
fcoms
push
fstl
fs
inc
push
sti
push
push
fdivl
ds
and
mov
pop
mov
jae
fstpt
dec
aad
mov
subb
sbb
mov
sarb
in
cmc
fwait
push
shlb
bound
das
jmp
scas
xor
dec
iret
xchg
mov
mov
cmpsb
mov
mov
pop
jg
mov
shrb
push
loopne
add
icebp
or
fldt
arpl
mov
xor
jmp
inc
lods
adc
jecxz
sbb
dec
repnz
and
push
cmpsb
jno
or
test
mov
cltd
xor
fidivrs
push
sbb
xlat
mov
mov
enter
enter
xorb
adc
jae
dec
out
movsl
test
mov
cmpsl
or
test
mov
div
leave
add
or
in
movsb
rclb
push
sahf
mov
or
js
ret
push
or
aam
push
repz
add
jno
enter
pop
icebp
rclb
js
cmp
mov
or
sbb
dec
stc
loope
scas
and
fimull
out
add
outsb
push
ss
sub
inc
gs
mov
pusha
mov
or
jg
nop
push
ljmp
inc
cld
lods
nop
adcb
pop
or
jno
adc
out
sbb
add
xor
fimull
out
mov
ljmp
push
or
or
add
xchg
mov
inc
mov
xchg
add
sbb
xor
xchg
adcb
push
mov
mov
push
fstpt
or
xor
mov
jmp
out
pop
inc
lock
stos
inc
sahf
xor
xchg
xor
add
out
and
scas
test
ss
mov
je
popf
jb
scas
idivl
ret
sbb
call
notb
pop
into
loope
mov
fcoml
int3
imull
lret
jmp
unpcklps
mov
das
xor
dec
hlt
xchg
test
lret
lea
in
pop
push
pop
jg
cmp
in
xor
arpl
cmpl
pop
movsb
dec
or
mov
and
adc
aaa
dec
adc
jecxz
jno
mov
dec
push
out
mov
icebp
adc
mov
loop
cmp
test
cwtl
mov
sarl
in
ret
push
mov
test
mov
pop
sbb
divb
pop
add
mov
stos
popf
mov
dec
inc
inc
inc
fsub
pop
outsb
fwait
icebp
or
stos
into
fdivrl
in
jmp
add
les
lock
dec
enter
ret
mov
xchg
mov
push
nop
mov
add
sub
lea
jb
dec
cs
arpl
cmp
pop
and
jne
adc
and
cltd
push
adc
mov
jmp
pop
jae
cmp
fidivs
imul
xchg
outsb
out
add
jl
rol
sbb
push
repnz
fs
xor
pop
or
testl
inc
push
out
inc
cltd
add
leave
pop
push
mov
pop
ds
cmp
sub
shl
in
mov
add
outsb
popf
pop
ret
clc
push
cwtl
ret
in
and
fildl
cmp
inc
adc
or
adcb
test
mov
call
popf
cld
adc
mov
popf
xor
add
jne
push
mov
movb
xchg
scas
scas
push
mov
rolb
stos
fldpi
shrl
xchg
xor
icebp
jmp
sarb
pop
imul
push
xchg
add
sahf
lea
pop
pop
std
js
and
mov
sbb
mov
and
pop
lret
test
sbb
popa
jns
sarb
sbb
mov
xchg
scas
test
in
iret
lret
pop
cmp
pop
cmp
mov
ljmp
popf
cld
mov
test
wbinvd
cmp
dec
stc
sub
mov
and
fyl2x
rcl
out
xlat
icebp
xchg
dec
out
mov
mov
lds
inc
push
inc
mov
pushf
dec
or
test
sti
int
dec
sbb
adc
notl
jne
inc
push
jno
jl
sub
mov
fcomps
das
push
cmpsb
decb
push
dec
mov
fsubr
mov
je
fldl
add
and
xchg
sub
add
push
shl
pop
mov
pop
imul
icebp
xchg
push
sbb
adc
ja
arpl
rorl
cmp
out
sub
jg
sbb
or
mov
jl
dec
out
idivl
mov
das
addr16
pop
ds
aad
cltd
sbb
stos
in
lret
dec
dec
push
mov
data16
scas
inc
cmp
jecxz
iret
imul
pop
adc
repz
imul
ret
sbb
ret
fwait
data16
mov
or
inc
inc
mov
push
cmp
imul
inc
hlt
hlt
dec
sbb
call
adc
aas
push
cltd
mov
add
adc
aas
or
dec
loope
jnp
xor
shll
rcl
adc
mov
mov
or
jl
aam
xchg
push
bnd
jmp
loopne
jg
mov
nop
mov
pop
push
add
push
and
lock
lahf
push
roll
inc
mov
mov
pop
es
outsl
cmp
xor
cmp
fwait
rcrl
fwait
dec
sub
mov
lret
mov
cmpsl
cltd
stos
and
and
sub
sbb
loopne
mov
lahf
or
cmpsl
jecxz
das
xchg
test
mov
or
shrb
sub
adc
hlt
sub
inc
pop
or
test
sub
xlat
jnp
sbb
mov
add
stos
pop
push
roll
lods
nop
jae
lret
mov
push
mov
clc
sbb
pop
mov
jmp
mov
mov
ss
cmp
xchg
fs
in
xchg
out
adc
leave
jecxz
add
cmpsb
xlat
pop
pop
or
mov
mov
pushf
xchg
ret
out
fistpl
iret
push
dec
out
shl
loop
ret
inc
fwait
je
cli
int
insb
movsb
repz
jmp
fsubs
das
add
mov
push
es
xchg
sub
push
inc
xchg
push
push
xor
pop
je
jg
or
jge
jl
dec
pop
push
sub
negl
lret
daa
xchg
mov
lahf
stos
mov
dec
push
mov
mov
aam
popa
cmp
test
xchg
pop
inc
inc
int
lret
lret
test
mov
scas
mov
cmc
mov
or
lahf
xchg
push
mov
sbbb
sub
imulb
cmp
cmpsb
and
xchg
dec
mov
ficompl
push
fld
idivl
sub
test
and
jl
lcall
cmp
inc
mov
add
pushf
icebp
cmp
outsb
pop
cmpsb
or
push
out
cmpsl
fdivrl
fucomip
movsb
sub
cs
stos
sti
lret
push
xor
cmpsl
ret
iret
lock
inc
push
and
push
filds
or
sub
aaa
pop
clc
xchg
push
push
cmp
mov
push
inc
mov
sbb
ljmp
xchg
jne
cmc
mov
iret
clc
cmpsl
xor
jle
test
decl
ss
dec
inc
xor
or
and
ss
fwait
in
dec
test
cmpsl
mov
cltd
xor
xchg
jp
sti
mov
jb
mov
mov
jl
test
add
mov
dec
mov
pop
cmp
in
dec
and
popf
insl
les
std
stos
jbe
mov
mov
push
push
sub
mov
sbb
xlat
mov
sbb
mov
xor
dec
mov
mov
and
mov
gs
jecxz
es
lret
bound
jnp
flds
es
ljmp
xor
out
pop
ds
into
and
pop
mov
popa
sbb
cmp
jo
xchg
retw
xor
cmp
jne
lret
push
int3
incb
and
add
nop
or
jnp
inc
std
or
call
sub
lret
ret
jb
lods
mov
aaa
faddp
sbb
mov
and
imul
push
clc
adc
add
lea
jo
dec
into
inc
clc
adc
leave
and
jne
mov
sub
push
out
push
lahf
and
push
push
into
push
sbb
sbb
mov
es
cmp
mov
fildl
or
aaa
leave
add
es
jecxz
add
pop
push
mov
pusha
push
xlat
shlb
cld
outsb
into
mov
xor
sbb
lret
xor
mov
or
lods
or
into
xor
imul
loop
mov
stos
gs
pop
push
jne
or
js
sub
lret
pop
sub
loope
jno
lods
data16
cli
sbb
popa
jg
mov
rorb
xchg
das
and
cmpsl
jl
mov
mov
jp
cmc
jns
fucomi
xchg
test
lods
dec
xchg
popa
inc
mov
pop
jb
nop
mov
mov
mov
xlat
lds
mov
fsubrp
xchg
call
repnz
sti
adc
pop
cltd
cmp
xchg
fimull
push
push
jbe
pop
aas
dec
xor
xchg
xor
movsl
adc
cld
push
shlb
lahf
push
xor
in
pushf
shll
push
push
mov
sub
or
add
loopne
add
xchg
pushf
cli
icebp
or
jle
mov
call
leave
lds
push
in
or
fstpl
mov
test
sbb
sahf
add
inc
cmpsl
out
mov
xrelease
mov
cmpsl
loope
mov
mov
mov
fimuls
orb
dec
sbb
jle
mov
push
sbb
adc
mov
or
cmp
xchg
cs
clc
jmp
les
orl
scas
and
push
mov
enter
popf
mov
jbe
or
inc
xor
xor
dec
and
rcrl
cmc
xchg
sub
pusha
sbb
xchg
sub
mov
movd
icebp
test
stos
mov
cmc
push
push
call
daa
sbb
mov
add
xchg
sub
ret
dec
out
jp
dec
dec
frstor
icebp
cmp
adc
lds
cmpsl
or
cmp
cmc
pushf
mov
xor
js
or
add
cmp
sbb
mov
xchg
arpl
stos
stos
xor
inc
inc
sbb
cmpsb
loopne
xchg
je
mov
lods
mov
ljmp
fdivrl
out
leave
pop
nop
daa
fsts
jmp
xor
or
stc
cmp
adc
shr
sarl
mov
out
adc
push
or
aas
push
aad
ficomps
data16
mov
sahf
or
jb
insl
popa
pop
movsl
xchg
arpl
fidivl
push
rol
push
std
adc
jl
pop
scas
fldl
add
pop
ds
testb
xchg
movsl
inc
pop
or
xor
mov
pop
push
jne
push
in
xor
daa
test
xor
insb
mov
push
in
cmp
subb
mov
insl
jb
lahf
std
or
addl
xchg
in
cld
adc
sbb
adc
insl
lcall
outsl
int3
mov
jns
addr16
xor
popf
lods
cmp
iret
mov
push
repz
cmp
jl
xchg
add
adc
out
popa
jns
insl
aaa
push
fwait
add
add
or
sbb
test
push
fiaddl
dec
mov
pop
dec
call
jne
ljmp
mov
fidivl
out
push
mov
fldt
mov
popa
aad
repnz
inc
insl
adc
popf
mov
dec
aas
in
arpl
out
pop
lret
test
sbb
fisubrl
daa
lea
fistl
sub
push
pusha
cli
orl
xchg
jp
mov
nop
insl
add
mov
adc
cmpsb
sbb
bswap
push
push
mov
mov
fldl
pop
adc
imul
mov
xorb
fmul
fmuls
adc
mov
sahf
popf
push
out
mov
cmc
sbb
or
loopne
ja
idivl
les
and
fsubrs
ljmp
push
xor
xor
xor
and
and
jg
ss
lods
arpl
xor
pop
jns
nop
pop
jns
mov
loop
xchg
rolb
add
insb
test
aas
ljmp
sbb
movsb
movsl
inc
aam
ja
mov
push
or
mov
and
fs
sldt
inc
lret
or
sub
inc
icebp
int3
imul
mov
rorb
sub
les
scas
inc
lcall
cmp
xlat
jp
ret
fstl
jecxz
sbb
repz
mov
gs
push
xor
adc
pop
popa
lret
shrl
pusha
jge
js
sahf
xor
dec
das
inc
pusha
sbb
ds
rcll
in
jge
in
lods
jmp
pop
adc
mov
mov
int3
fs
or
test
mov
mov
test
popa
push
adc
movsl
pop
and
mov
jns
mov
jo
pop
xor
rcrl
test
aaa
mov
nop
sbbl
enter
push
pusha
fsubs
out
xor
les
rcl
faddl
pushf
pop
sub
xor
jmp
jne
xchg
and
lds
cmp
sbb
rcrl
pop
or
js
and
and
cld
arpl
sbb
lods
and
mov
mov
cs
inc
mov
repnz
arpl
pusha
xor
cmpsl
ljmp
gs
out
jg
pushf
and
aas
gs
pop
div
dec
cwtl
jge
adc
rcrb
fsubrs
js
pop
mov
push
jae
ret
push
xor
cmpsb
cmpsl
push
inc
mov
test
sahf
stc
pop
test
daa
inc
nop
lret
lock
gs
cmp
push
add
lods
cmp
repnz
ss
aas
gs
movsl
add
push
xchg
or
push
movsb
and
sbb
and
in
test
add
and
xor
xchg
fimuls
or
shrl
push
pop
pop
das
pushf
jno
pusha
mov
lods
adc
xor
adc
aad
roll
cmpsl
push
inc
pop
lcall
or
push
in
xor
xchg
imul
jge
outsl
jbe
cmpsl
es
mov
sbb
cwtl
sbb
negl
and
xchg
jae
lds
dec
xchg
pop
jl
add
nop
f2xm1
mov
cvttps2pi
inc
xor
je
jge
jmp
clc
outsl
adc
imul
mov
cli
test
hlt
int3
add
push
push
fdivp
cmp
mov
hlt
lea
out
sbb
xchg
bound
cmp
jbe
je
push
cmpb
sti
imulb
je
cld
in
jnp
adc
rcrl
stc
sbb
xchg
xchg
mov
shl
sarl
push
sub
xchg
cmp
dec
add
push
cmpl
pop
or
into
rcll
xchg
mov
or
cmc
push
xchg
call
mov
fs
push
aam
insb
sbb
mov
dec
fsubrp
in
sub
rorb
push
and
and
push
pop
outsb
pop
lcall
xor
xchg
dec
mov
add
outsb
int3
mov
push
push
cmp
xor
xchg
mov
pop
cmp
subb
cli
dec
push
mov
jbe
out
cmpsl
not
add
arpl
in
and
pop
insl
clc
or
add
push
sub
ret
outsl
or
mov
sti
rorb
iret
popa
aad
loopne
fcomip
pusha
cli
int
cld
xchg
or
pop
xor
sub
jl
pop
cmp
sahf
adc
mov
stos
jmp
push
in
adc
aas
jo
movl
bound
pop
rcrb
cmc
movsb
idivb
loop
adc
and
inc
jno
cmp
cmc
inc
and
mov
mov
mov
ds
daa
push
inc
or
push
fdivl
cli
inc
iret
andb
fldcw
lods
dec
inc
loopne
jmp
xchg
pop
pop
testl
mov
loop
sub
das
dec
pop
stos
pop
dec
inc
les
jne
pop
inc
fimull
sub
es
and
dec
jnp
xor
lock
sub
xchg
push
jmp
andl
shll
into
mov
fiadds
loop
push
dec
mov
enter
shlb
aas
xchg
mov
test
xor
or
sbb
sub
sbb
pop
out
icebp
ret
insl
repnz
xchg
std
lcall
mov
movsl
cmp
cmpsb
or
add
sahf
and
mov
scas
or
pop
jo
cmp
fstpt
das
or
mov
dec
psraw
pop
add
push
leave
mov
ffree
push
jne
out
test
mov
fstp
jns
das
outsb
jno
in
orb
mov
add
fistpl
mov
inc
mov
adc
pushf
jp
ds
int3
orb
mov
inc
cmpsb
cmpsb
dec
sbbb
outsl
jecxz
jl
cmp
push
xchg
adc
inc
movsl
movsl
imul
std
lock
mov
pop
fldcw
cmp
sub
sbb
xchg
cmp
jno
mov
pop
cwtl
cmpsl
sub
lds
loop
inc
jge
sub
pop
jb
or
sti
cwtl
fsubrs
sub
cmp
inc
push
xchg
fcomps
rcll
dec
cmc
pop
jnp
mov
push
xor
jno
or
adc
add
jno
dec
imul
jle
xchg
adc
xor
rcrl
adc
fcmovne
fmuls
mov
das
pop
lock
pop
sbb
cltd
sub
insl
dec
icebp
xchg
dec
add
add
sub
mov
cmp
int3
mov
xchg
stos
pop
icebp
or
dec
out
and
out
and
inc
push
sbb
sub
sub
sti
nop
leave
mov
clc
sbb
ficoml
jg
inc
dec
mov
mov
sub
mov
sbb
inc
sub
push
jb
leave
cwtl
pop
fists
rcr
ficoml
mov
cmp
das
call
std
xchg
in
scas
jns
push
sahf
jno
jp
lcall
test
jno
lcall
inc
aam
ret
bound
popa
dec
mov
push
pop
sbb
mov
popa
dec
int
sbbb
dec
xor
test
jnp
jns
lds
pop
jnp
push
in
movsb
sub
int
adc
in
pop
aaa
mov
mov
lods
xchg
dec
sbb
jmp
jmp
mov
inc
popf
cmp
inc
cmpsl
clc
stc
add
jmp
inc
mov
fs
outsb
ret
mov
insb
mov
popf
gs
cmpb
push
cmp
add
sbb
dec
out
mov
fisubl
in
lahf
popl
lods
adc
fidivs
mov
test
push
and
pop
fnstsw
and
add
inc
jne
insb
arpl
hlt
sahf
cmp
clc
mov
adc
jns
inc
mov
inc
fs
dec
scas
pop
pushf
test
and
add
push
mov
notl
lods
dec
ss
or
mov
arpl
jbe
mov
add
xor
xlat
out
xchg
mov
inc
testb
lret
add
lds
and
in
pop
insl
cmp
pop
push
adc
push
movsl
jp
pop
and
rorb
or
test
shlb
sbb
incl
insb
fisttps
xchg
cmpsl
ds
mov
mov
mov
pop
cmp
and
sbbb
sub
stos
mov
loop
mov
repz
xlat
jnp
jae
loopne
jne
ljmp
inc
cmp
add
shlb
clc
stos
sbb
adc
mov
hlt
das
stos
scas
push
fs
inc
xchg
cmp
sarl
or
iret
xchg
sub
xchg
jns
aas
lods
lahf
dec
movsl
inc
jno
sbb
fldcw
out
clc
xchg
popa
and
pop
xor
adc
lret
mov
int
int
lds
sbb
push
ret
xchg
push
pop
and
out
cmc
or
jbe
inc
cmp
mov
ds
cmc
add
data16
cwtl
sub
inc
jbe
mov
sbb
lods
mov
cmp
xchg
leave
push
test
pop
adc
rorb
pop
lds
ja
repz
in
mulb
ret
and
pop
adc
dec
mov
and
mov
mov
xchg
sbb
xor
dec
mov
les
xchg
adc
adc
jg
cmpsb
ret
xchg
inc
and
movsb
in
inc
push
lret
jle
notb
xor
insl
cmpsl
mov
inc
sbbl
jmp
mov
fs
jno
push
pop
mov
les
dec
pop
sti
dec
xor
inc
dec
lds
jns,pn
cmp
inc
sbb
xlat
out
inc
push
push
push
xchg
pop
fs
jp
mov
rcll
loope
test
push
in
push
in
test
call
sti
dec
je
inc
push
imul
pop
jb
out
dec
pop
mov
adc
cmpsb
add
pop
dec
subb
pop
sahf
mov
adc
in
test
push
sarl
fbstp
sub
and
insl
jmp
jge
out
xchg
sbb
outsb
jb
jle
iret
movsl
inc
in
out
mov
xor
stc
and
pop
pop
jmp
jnp
push
jge
mov
pop
out
fwait
test
roll
clc
pushf
pop
mov
or
mov
pushf
xchg
mov
popf
xchg
push
dec
mov
push
mov
push
aad
int
cmp
sbb
shl
jnp
dec
add
arpl
out
xchg
test
lods
pop
jge
sbb
outsl
movsb
mov
mov
add
pop
ret
mov
lcall
cmp
inc
adc
pop
push
iret
insb
movsl
lds
xchg
add
or
pop
mov
cmpsb
loop
sbb
mov
xchg
adc
mov
push
and
rcll
and
cmpl
jb
out
jmp
stc
mov
inc
push
dec
xchg
cmpsl
sbb
out
xchg
mov
mov
xchg
or
outsb
sarl
dec
cmp
jne
pushf
cmp
xor
adc
inc
add
rolb
scas
inc
stc
sti
mov
dec
rcrb
pop
push
aaa
stos
pop
fdivrs
rclb
cmp
xchg
inc
inc
cmpsl
inc
jecxz
mov
clc
scas
leave
dec
mov
gs
bound
jge
jp
movsl
jb
icebp
adc
mov
testl
out
pop
xlat
mov
fisttpl
ret
orb
mov
lods
std
mov
mov
mov
cmp
adc
call
aaa
js
sub
jno
aaa
push
enter
push
or
std
rcrb
out
dec
mov
xchg
lret
rcl
jmp
xchg
bound
cmp
lret
fidivrl
aaa
pop
inc
cmp
test
ss
icebp
xchg
ss
scas
out
sub
xor
notb
cmp
ds
mov
mov
pop
rorl
push
jmp
xchg
add
or
rcrl
shld
imul
fwait
mov
mov
insl
iret
mov
into
sub
and
faddl
test
divl
call
movsb
pop
pop
mov
hlt
scas
push
aas
jne
shll
popa
fidivl
xor
pop
or
sarb
sti
sbb
idiv
or
loopne
inc
dec
into
orl
dec
fdivrs
cli
sub
ret
scas
pop
fcomip
leave
je
repnz
jecxz
movsb
cmpsl
lret
xchg
mov
outsl
add
mov
mov
fisubrl
fistps
shll
mov
sarb
jne
movsl
aad
std
imul
or
aam
rorb
es
jp
pop
std
loope
in
lret
push
loop
testb
ds
fstpl
xor
andb
test
rolb
and
test
mov
cmp
sbb
pop
es
nop
pop
jg
cmc
lahf
in
or
pop
cmp
cmc
scas
and
inc
pop
sbb
cmpsb
dec
sbb
test
and
push
fldt
test
xchg
sbb
mov
xlat
imul
pop
in
jo
imul
sub
test
inc
cs
push
cld
lahf
mov
insl
mov
je
aaa
sub
addr16
es
test
push
ds
and
test
sub
repnz
jecxz
sub
jmp
cld
ret
leave
inc
xlat
mov
push
push
inc
lret
push
test
cld
clc
or
rcrl
pop
les
test
mov
cmp
enter
in
push
movsb
fsubl
and
mov
mov
cmp
adc
std
aad
xor
dec
ja
dec
xchg
adc
out
inc
testl
test
pop
repnz
fwait
xchg
adc
xor
nop
out
jns
mov
sbb
add
inc
or
mov
or
mov
add
lahf
jb
xor
gs
cmp
push
push
cmp
inc
std
mov
add
add
push
cmc
jne
pop
adc
sbb
cmp
sbb
lds
daa
clc
and
add
push
stos
or
sub
outsb
pop
bound
xor
mov
nop
fstp
jp
xchg
sbb
sbb
imul
cmp
adc
or
addr16
mov
and
sbb
lds
rorl
sbb
das
push
cwtl
je
shlb
lea
addl
add
xor
and
inc
jmp
fdivl
fnstenv
xchg
mov
xor
adc
loopne
push
cmc
or
mov
les
or
mov
int3
cs
pusha
pushf
push
ret
sub
ljmp
add
or
lods
inc
mov
aas
mov
into
and
sbb
dec
xchg
add
jecxz
sbb
mov
ret
iret
lret
int
outsl
filds
in
ret
cmp
test
iret
push
mov
dec
mov
hlt
mov
rclb
xchg
sbb
and
push
mov
inc
inc
mulb
aam
adc
scas
push
cld
dec
rclb
mov
cld
mov
mov
outsl
jp
inc
test
repnz
out
add
jne
fwait
sub
stos
mov
sub
inc
cmp
je
scas
jns
xchg
pop
sub
sahf
in
xchg
push
scas
data16
pop
ret
movsl
int
je
gs
loope
iret
scas
cmp
dec
push
aam
xlat
jecxz
cld
add
fwait
push
stc
xchg
dec
das
sbbl
xchg
shll
push
mull
fs
pop
and
mull
pop
jg
int3
stos
pushf
pop
fadd
fldpi
push
insl
lds
repnz
or
cmp
and
movsb
lahf
add
aad
dec
fwait
pop
sbb
adc
xor
pop
pop
icebp
xchg
int
adc
add
std
xor
loopne
or
push
or
jg
pop
jge
jno
adcb
or
jb
call
scas
repnz
sub
jp
cmpsl
ss
enter
lret
push
or
mov
pop
fldcw
push
jne
inc
sti
fstpt
xchg
loope
push
push
and
jp
cwtl
repnz
jae
add
xor
addb
adc
pop
lcall
inc
mov
mov
bound
insl
inc
enter
and
pop
pushf
push
pop
pop
testb
jge
pop
cmpb
mov
faddp
sarl
fimuls
dec
sub
xorb
out
or
push
mov
push
imul
xor
mov
add
lret
cmc
mov
cmp
je
inc
lcall
and
cmp
sahf
loope
mov
int3
and
jl
sbb
sahf
les
push
imul
ljmpw
push
pop
xchg
and
xchg
jo
pop
out
test
pop
pop
adc
cmp
lods
addb
sti
repz
pop
adc
jo
imul
testl
mov
jle
lods
push
inc
ljmp
cmc
or
push
aam
pop
imul
int3
movsl
int
xor
push
mov
pop
outsl
jae
out
orb
xor
sbb
sbb
sti
inc
xlat
and
lcall
lret
imul
push
mul
dec
dec
mov
subl
dec
inc
movsl
enter
dec
in
testb
pusha
imul
dec
loop
mov
push
ja
xchg
in
test
jg
fstp
std
mov
pusha
testl
mov
fs
ljmp
or
inc
fbstp
ss
rorb
add
mov
in
mov
mov
xor
mov
or
aas
sbb
out
ljmp
jno
out
mov
jns
xor
pop
jb
push
push
aaa
inc
lahf
call
jae
pop
sbb
push
fdivrs
inc
pop
lret
mov
mov
lock
pop
xchg
cltd
dec
fisttps
sahf
lods
out
outsb
gs
in
addr16
sbb
xlat
popf
sbb
aaa
in
push
mov
or
inc
mov
pop
jnp
lds
inc
pxor
aad
sbb
mov
cmc
repnz
cmp
or
lahf
jne
cltd
mov
pop
xchg
jl
push
outsb
mov
jb
pop
shlb
jg
daa
jno
xchg
imul
lock
aas
lea
out
xchg
mov
or
test
ja
xor
cmp
popl
test
lret
cld
hlt
jg
sti
cwtl
into
pop
lret
movsb
into
sahf
iret
mov
insl
adc
rcrl
push
inc
stos
addb
or
loop
inc
out
add
jmp
ret
cs
cmc
iret
or
and
ss
fnsave
inc
xorl
aad
cmpsl
and
mov
fadd
les
cmp
pop
divb
dec
push
mov
fst
cmp
leave
arpl
hlt
mov
push
lods
mov
icebp
aad
push
pop
sub
sbb
cmpsb
test
or
adc
das
out
es
out
fs
shlb
out
or
xor
popf
testb
out
loopne
mov
movsb
mov
sbb
aam
mov
scas
add
in
js
jb
test
notb
test
mov
or
stos
dec
sbb
adc
ljmp
or
cmp
xchg
mov
rcl
cmpsb
push
or
mov
ret
loop
xchg
les
mov
loopne
imul
add
and
scas
out
pop
push
xlat
lret
std
mov
pop
movsl
out
out
sarb
lods
movsl
ja
out
add
inc
push
inc
in
mov
sub
ds
inc
jo
mov
jmp
xchg
mov
inc
les
push
sub
mov
mov
scas
out
push
jb
mov
jbe
int3
dec
aad
mov
add
mov
or
mov
cmp
mov
loope
xchg
nop
push
pushf
or
fwait
scas
jge
lea
stc
cmp
mov
cmpb
xor
pop
push
sti
lea
xchg
incb
xor
std
pop
add
std
mov
mov
xchg
sbb
push
xor
jo
js
divb
fs
std
add
outsl
out
sar
mov
dec
in
jno
add
inc
sbb
sbb
repz
stc
orb
mov
mov
dec
pop
stos
xor
out
or
lahf
loope
repz
mov
sbb
xchg
push
push
fldt
mov
mov
and
sbb
mov
loopne
cmpb
test
cmp
adc
jae
cmpsb
cld
js
pop
les
sub
mov
scas
sbbl
dec
cli
mov
add
dec
push
push
sbb
push
xchg
xchg
test
scas
divb
xlat
cmpsl
test
outsb
fcmovne
lahf
xor
cmp
push
or
lcall
mov
cli
jmp
pop
cmpsl
dec
pop
xchg
fcmovnb
cmp
mov
icebp
cwtl
repnz
sub
ret
add
jg
pop
mov
clc
andb
xor
jmp
push
aam
mov
push
ljmp
xchg
pop
lock
shrb
pop
sub
enter
int3
inc
push
outsl
inc
in
loop
out
fbstp
cmp
and
addb
inc
jmp
pop
sub
jg
dec
iret
mov
xchg
lret
ffreep
push
imul
std
clc
daa
out
mov
stc
ror
mov
sub
sub
sub
dec
or
pop
lea
hlt
or
push
push
mov
ja
jb
fistps
pusha
pop
stos
inc
into
xor
xchg
sub
mov
jmp
mov
push
iret
gs
and
dec
or
xchg
std
inc
jnp
test
bound
popf
inc
ds
push
or
mov
mov
jo
fnstsw
out
aas
clc
pop
sarb
cmp
dec
aam
inc
push
pop
mov
iret
pop
pop
ss
je
xchg
cmpsb
add
inc
inc
xor
pop
fisubs
inc
adc
sub
jae
lock
mov
inc
fcomi
test
mov
pushf
dec
pop
js
adc
test
bound
push
add
mov
xchg
dec
les
inc
pop
jb
outsb
sub
cmp
adc
mov
jb
lods
cs
dec
pop
or
xchg
aaa
dec
lahf
data16
xor
jge
or
aas
pop
cs
mov
mov
scas
test
in
fstpt
jno
xchg
test
jge
mov
xor
dec
std
lcall
wrmsr
enter
imul
add
fwait
repnz
das
mov
subl
lret
add
add
repz
test
dec
add
mov
push
jp
aaa
aam
adc
xchg
jne
pop
gs
rolb
iret
inc
outsb
inc
into
mov
mov
push
push
lea
jp
jbe
flds
nop
pop
rcr
jne
xchg
sbb
dec
in
dec
mov
push
cltd
push
xchg
sbb
rcr
sti
icebp
in
stos
sbb
mov
cltd
fisubrs
fcompl
add
shlb
int3
pop
les
jle
out
push
popf
xor
jg
xchg
movsb
cli
cli
and
fisttpll
cmc
fs
test
insl
jge
sbb
dec
leave
movsl
adc
mov
mov
push
lods
in
iret
jne
or
lock
pop
sbb
add
cmpsl
sbb
xlat
inc
xchg
incl
sbb
sbb
push
mov
mov
les
insl
psrlq
into
cwtl
or
lret
mov
and
mov
adc
push
jmp
mov
sub
sub
out
adc
mov
fs
cli
sub
fcoms
repz
add
movsb
pusha
lahf
mov
xchg
xchg
inc
adc
enter
mov
lock
pop
addr16
adc
std
lret
inc
outsl
jmp
fcoml
nop
adc
leave
pop
cmp
mov
mov
loop
aad
xchg
mov
pop
movsl
add
pushf
push
jp
in
cmp
jnp
sti
std
xchg
adc
testl
cmpsl
push
sbb
sti
andb
mov
adc
jb
dec
push
add
lret
cwtl
rcrl
adc
pop
push
lahf
cmpl
enter
movb
in
mov
mov
ficoml
rcl
leave
mov
jae
data16
filds
push
test
lret
and
push
sub
cmp
in
jge
lret
and
or
add
bound
sbb
inc
xchg
rolb
je
add
lds
jo
popa
jnp
jne
imul
sahf
jnp
sub
xor
nop
std
xchg
or
sub
push
push
enter
iretw
aaa
into
mov
push
stos
sbb
into
in
cmp
imulb
and
and
adc
xorl
xor
sahf
xor
scas
loopne
shlb
popa
pop
add
imul
jo
ljmp
les
or
xchg
add
add
test
xchg
rolb
jge
inc
aaa
pusha
mov
pop
es
fisubrl
nop
shll
mov
cmp
mov
mov
cmp
adc
jg
ljmp
cld
ret
pusha
mov
test
inc
xor
xchg
add
loop
testl
popl
hlt
daa
je
or
cli
or
pop
sbb
fwait
jg
ljmp
aas
popf
xlat
inc
pop
mov
mov
sbb
cmp
dec
xchg
push
jg
xlat
pop
cmp
repz
cmp
cltd
add
mov
popf
sub
jns
mov
lret
data16
mov
scas
popa
ds
jmp
out
stos
push
inc
fadds
jns
fs
ret
ja
push
ds
jecxz
addr16
cs
sti
mov
mov
and
xchg
test
add
dec
ss
loope
ljmp
movsl
or
jecxz
imul
xor
movsl
in
sub
sarb
inc
scas
scas
sbb
add
inc
fisttpll
add
or
xchg
mov
xorb
jl
test
imul
mov
sbb
testl
jge
xchg
xor
call
sub
or
les
shll
mov
and
jecxz
and
rol
in
das
or
pop
mov
jecxz
and
push
ljmp
mov
push
mov
loopne
pcmpgtd
andl
adc
mov
insb
insb
xor
sub
xchg
nop
adc
cwtl
sub
sub
stc
pop
or
fnsave
sub
mov
scas
dec
push
mov
lret
mov
fsubrs
lds
jae
cmc
jbe
pop
test
mov
jp
dec
mov
scas
je
loopne
pop
cmp
clc
add
xchg
dec
jg
call
mov
push
add
cmpsb
dec
xchg
dec
fadd
push
aam
and
push
add
rcrl
jo
pusha
jle
bound
sub
adc
int3
mov
pop
testb
jge
or
cmp
mov
adc
shlb
and
push
push
mov
ljmp
sbb
sub
adc
adc
dec
je
pop
adc
in
in
cmpsb
imul
sub
xchg
mov
lret
sbb
push
insl
inc
fbld
ja
shl
outsb
mov
nop
and
popf
or
scas
imul
cld
adc
sbb
jo
push
je
lods
xchg
xlat
pop
adc
enter
mov
add
fwait
sub
dec
mov
jg
mov
test
cwtl
xchg
dec
mov
outsl
repnz
pop
adc
mov
mov
mov
sarb
jnp
push
mov
adc
cmp
and
aas
and
dec
shrb
sbb
pop
stc
ljmp
jmp
sbb
das
ss
push
adc
pop
call
push
mov
ds
mov
out
test
jle
pop
cmp
mov
xchg
add
bound
aas
mov
lahf
push
jnp
inc
ficomps
popf
mov
lds
stos
mov
lcall
int
sbb
push
into
xor
ljmp
adc
lods
inc
mov
fnstenv
int
fsubl
push
mov
test
sbb
pop
add
outsl
je
sbbl
test
jb
xchg
in
or
adc
or
push
jmp
cmp
mull
rorl
cli
movsb
dec
and
lock
pusha
aad
xor
loop
icebp
cwtl
and
sbb
or
cmp
pop
pushf
dec
jb
xor
lods
ss
cmp
jbe
fwait
dec
cwtl
and
mov
movsl
jmp
out
push
sub
gs
aad
sbb
xchg
sbb
cmp
pop
icebp
movsl
dec
and
das
data16
outsb
xchg
push
ret
xchg
clc
aas
stc
mov
cmp
inc
mov
iret
ret
jl
cmp
rcrl
mov
jne
add
jl
stos
mov
icebp
mov
add
leave
xchg
inc
sub
ss
mov
loope
cmp
xchg
dec
adc
sub
leave
ljmp
sub
sub
sub
cmpsb
dec
pop
inc
andl
sahf
addr16
jb
mov
xor
cltd
stos
nop
pop
jmp
cmpps
shlb
les
xchg
add
push
aam
push
gs
pusha
push
cmp
jb
das
notl
iret
xchg
loopne
mov
orb
inc
inc
enter
daa
aam
es
ret
clc
xchg
adc
xchg
scas
jle
loopne
pop
sub
jae
clc
fwait
mov
cmpb
popa
sub
std
cld
pop
hlt
sub
or
sbb
dec
shl
jg
insl
adc
xchg
outsl
mov
push
lret
in
fsts
je
and
or
and
mov
jno
ss
jg
jg
and
jle
aaa
mov
testl
bound
hlt
jb
xchg
mov
xor
in
in
pop
imul
lahf
mov
and
repnz
mov
push
scas
mov
pop
and
ljmp
fisttps
pop
add
adcb
scas
inc
xchg
ret
mov
hlt
mov
or
mov
aam
stos
sbb
sarl
lret
cmp
or
xchg
sub
stos
loopne
dec
fwait
push
cld
gs
fs
mov
pop
sub
mov
mov
jl
int
jo
rcr
push
push
lods
mov
xor
pop
fwait
sub
add
dec
and
or
cmp
rcl
mov
adc
clc
cmovo
aad
add
cli
dec
aas
mov
or
pop
push
lcall
in
aas
xor
mov
je
pop
jo
call
mov
or
mov
push
or
movb
fwait
and
xor
enter
jle
jecxz
popa
xor
add
xlat
jo
sarl
test
nop
testl
clc
sbb
loopne
xor
lret
scas
cmp
jecxz
shll
into
fsubs
int3
fsubrp
pushf
andl
jns
lds
out
mov
xchg
loope
inc
cmp
rol
mov
imul
pushf
fcmovb
xlat
lret
jge
cmp
insb
js
mov
les
lods
insb
or
fadds
dec
pop
int
or
sub
add
divb
cli
xchg
cmp
push
sbb
fnstenv
dec
mov
and
sub
scas
or
push
inc
insl
loope
xchg
inc
push
lods
push
add
test
out
mov
gs
add
stos
mov
fidivs
mov
mov
and
orl
adc
insb
xchg
fwait
sti
cmc
xchg
dec
mov
cld
push
sub
movsb
fldenv
lcall
push
cltd
lret
cmc
mov
idivb
sbb
cmp
mov
add
inc
xchg
adc
fcomps
cmp
outsb
nop
jmp
and
push
mov
cmp
ss
aam
cmpsl
clc
jle
cmpsb
stos
scas
hlt
mov
popa
loopne
xchg
clc
sti
cmp
inc
mov
jl
or
xor
sub
jecxz
nop
sahf
mov
mov
fsqrt
pushf
dec
scas
call
std
outsb
les
lods
fsubl
inc
enter
dec
insb
mov
lea
fistpl
jecxz
cmp
lods
mov
ficoml
adc
fsubr
jle
je
lea
add
call
or
cld
or
shr
mov
pop
xchg
mov
sbb
mov
sbb
xchg
xor
pop
aam
pop
leave
ljmp
loopne
sub
leave
mov
and
loopne
dec
or
out
int3
xchg
jge
sbb
sti
fldl
sub
jle
insl
add
add
mov
and
jnp
cmpsl
leave
je
mov
add
pop
pop
mov
push
inc
and
dec
xchg
mov
push
jo
adc
mov
mov
ja
jmp
rorl
test
jns
fnstsw
xor
jb
clc
cmp
jl
loopne
push
add
cmp
push
fnsave
jmp
xchg
push
in
mov
mov
xor
ficoml
mov
dec
jmp
pusha
and
cld
xor
aad
ret
xor
cmp
jge
and
push
push
dec
add
hlt
sbb
lret
or
add
lods
inc
fs
jae
repz
insl
add
mov
ficoms
fld
inc
jl
cli
les
or
andl
je
ret
lea
or
mov
mov
sti
xor
js
dec
mov
adcl
xchg
xor
int
aaa
jmp
pushf
scas
sub
add
dec
cltd
sub
int3
inc
and
shr
adc
and
sbb
adc
sbb
jl
jae
imul
or
add
outsb
add
scas
add
out
ss
imul
scas
aam
loopne
sub
lock
repnz
mov
push
lods
in
xor
dec
or
mov
psllw
and
ja
mov
cmpsb
leave
adc
bound
imul
mov
mov
repnz
jecxz
sbb
enter
push
pop
jmp
call
dec
popf
or
jl
adc
in
mov
aas
xchg
stos
fdivrp
sahf
mov
mov
jge
push
mov
xor
test
mov
sub
inc
in
orl
out
aad
cmpl
jb
ds
shll
shll
sub
test
push
js
fwait
pop
das
les
dec
xchg
add
mov
repnz
cmp
cmp
push
lock
jnp
mov
xchg
jns
xor
xchg
jle
leave
pop
imul
push
mov
call
sbb
bound
cmpsl
xor
jo
cwtl
cwtl
out
pop
xor
xchg
das
arpl
push
je
rorb
xchg
ret
jecxz
out
imul
repz
push
mov
mov
sbbb
in
or
sti
dec
lea
adc
mov
insb
adc
mov
imul
int3
mov
pop
and
in
inc
push
je
sahf
mov
sbb
cmp
sub
mov
jno
dec
pop
imul
lcall
xchg
rclb
jae
outsb
jae
mov
out
add
sbb
mov
test
or
jle
xchg
inc
pop
sbb
jno
idivb
add
outsl
jns
stos
cli
ficompl
sub
andl
hlt
xchg
call
rorb
lea
xchg
cmp
aas
push
int3
fadd
sbbl
cmc
push
sbb
push
popf
mov
add
push
rcrb
xchg
outsb
cmp
sub
push
xchg
sub
test
mov
cli
push
jge
mov
scas
in
add
jae
and
sti
cli
arpl
shr
addb
popf
js
mov
pop
lcall
out
lcall
xlat
push
daa
mov
icebp
jo
sti
xor
mov
inc
pop
dec
sti
sbb
iret
inc
outsb
lret
add
leave
lret
mov
inc
enter
sub
add
push
loope
and
adc
adc
jmp
jl
fidivs
popf
lret
mov
mov
inc
dec
mov
lods
sub
jmp
fcmovnb
pop
test
sbb
or
mov
jl
push
add
stos
fistpl
or
adc
mov
add
rclb
lds
fs
test
shrb
xchg
fptan
adc
aad
sbb
sub
sbb
fstpl
xor
jb
cmp
lods
pop
sub
pop
negl
movsl
adc
pop
in
pop
ret
xor
outsb
sbb
shll
push
fmull
mov
jmp
pop
nop
xor
mov
lods
pop
shlb
xchg
sbb
or
dec
jl
jns
enter
stos
xlat
test
dec
cmpsb
jo
or
inc
call
inc
push
cli
xchg
shll
push
fstpl
out
popf
mov
cli
popf
mov
rcrl
mov
lcall
and
push
xchg
adc
and
cli
inc
fsubrs
inc
push
fdivs
ret
pop
or
sahf
ficoml
loope
or
cmp
imul
bound
lcall
test
xchg
fstl
xchg
adc
xchg
sub
xor
test
jp
pop
xor
das
enter
inc
and
push
add
es
loopne
es
inc
mov
fstps
arpl
loopne
xor
jae
test
cmp
ljmp
add
mov
xor
adc
xor
inc
xchg
cmp
addr16
out
cwtl
rcr
jmp
loope
hlt
lea
add
sbb
pop
dec
into
pop
rol
xlat
push
jp
mov
ret
inc
out
sbb
pop
test
mov
lods
dec
inc
fstpt
rorl
notl
outsb
jle
addr16
into
mov
pushf
fstpt
jae
ret
jmp
ljmp
ds
fs
aam
mov
sarl
mov
decl
loope
pop
repz
adc
adc
jnp
fwait
mov
sub
xchg
pop
xchg
sbb
ret
std
xchg
sbb
sbb
es
es
scas
inc
mov
ror
and
js
xlat
lods
mov
xchg
repnz
stos
and
adc
notl
hlt
and
inc
fidivs
inc
push
mov
inc
mov
rol
and
test
scas
push
ficoml
sub
and
xchg
dec
mov
jle
std
rcrl
lret
cltd
loopne
insb
jg
sbb
aaa
mov
testb
cld
mov
les
popf
mov
xchg
ss
jmp
dec
scas
push
fidivrl
sti
adc
aam
cmp
sub
mov
aad
inc
fnstcw
push
jb
das
adc
mov
shll
pop
popl
cltd
repz
data16
lahf
subb
popf
mov
mov
loop
jge
insb
ficoml
rep
leave
loop
ret
stc
out
dec
les
jb
xor
xchg
rorl
adc
mov
pop
xor
ds
dec
inc
push
xor
inc
out
aam
popa
loop
aad
add
jg
pop
insb
sub
and
jo
ret
inc
pop
jl
mov
movsl
jg
fcmovu
jle
mov
dec
lahf
pusha
cmp
inc
sbb
cmpl
mov
outsb
sub
cmc
call
mov
cmpsb
inc
sbb
shlb
es
ja
inc
in
fcomps
or
ja
mov
and
fildll
and
in
sbbl
and
mov
push
sti
sub
jl
jle
push
popf
dec
jb
lret
fucom
xchg
test
call
mov
mov
cmp
fld
pop
xor
sbb
cli
xchg
mov
je
mov
adc
outsl
pop
das
cmp
scas
cmp
dec
dec
stos
fistl
or
inc
mov
test
pop
mulb
jge
test
or
sti
jo
imul
mov
push
andl
xchg
push
leave
and
dec
fcomi
inc
pop
in
jno
hlt
int3
adc
rorl
dec
out
loope
ds
mov
xlat
pmulhw
jle
ja
aas
sti
xchg
jno
mov
cmp
mov
jmp
and
scas
push
hlt
adcb
outsl
test
cmp
cli
xchg
sbb
sbb
out
rcl
push
adc
je
mov
adc
xor
mov
in
pop
loope
pop
push
mov
sbb
test
stos
dec
daa
push
push
mov
push
xor
jbe
inc
push
sub
and
or
lods
inc
dec
jne
add
lods
and
mov
and
add
or
jne
mov
inc
icebp
cmp
adc
arpl
daa
mov
imul
mov
fstpt
pop
dec
push
fwait
and
gs
fcmovne
ljmp
mov
dec
xor
rol
cmpsb
testl
lcall
rcl
inc
push
inc
jbe
pop
lock
mov
sbb
mov
scas
sub
xchg
mov
call
add
jl
jbe
sub
in
pusha
repnz
mov
pop
scas
pushf
jmp
je
lock
jb
rcrl
insl
jmp
dec
add
ret
mov
mov
popa
test
in
jle
mov
xor
mov
filds
push
jae
mov
cmp
add
in
mov
inc
cmpsb
cli
or
push
das
mov
mov
cmp
insb
xor
sti
mov
out
pop
scas
and
mov
insb
testb
xor
lcall
inc
in
sbb
or
mov
adc
lods
das
test
lahf
sbb
loop
repnz
mov
jne
xor
fs
push
jmp
lods
and
lods
or
out
cld
sub
call
aam
outsb
outsl
push
mul
cmp
les
mov
dec
loop
stc
nop
aad
bound
mov
pop
add
into
xchg
adc
sbb
cli
cmp
aaa
cmp
inc
fwait
add
mov
mov
cmpb
push
and
xlat
dec
xchg
cmpb
sbb
sbb
out
outsb
nopl
shl
movsb
jmp
xchg
jle
aaa
lret
mov
popa
mov
fs
xor
bound
mov
adc
cmp
stos
dec
sbb
cmpsb
dec
and
xchg
jecxz
mov
cmc
push
ficompl
mov
popf
clc
lods
lods
pop
sbb
scas
inc
in
fnstcw
ljmp
cmovno
out
sbb
test
push
pop
push
leave
jns
sti
jno
jns
pushf
xlat
mov
mov
or
ficoml
daa
mov
lahf
inc
push
sti
or
enter
and
test
xor
sbb
cmpsl
imul
popf
movsb
cmp
push
daa
les
adc
mov
mov
lahf
stos
data16
stos
pop
faddp
jbe
mov
fisubrs
std
stos
push
lcall
cmp
shlb
popa
clc
imul
subb
fcompl
addr16
inc
xchg
mov
repz
call
xchg
addr16
aaa
and
bt
mov
fistps
testl
es
push
mov
adc
lods
cltd
sbb
lret
jno
rcll
aam
cmpb
mov
fnsave
cwtl
mov
mov
jmp
es
adc
loopne
sahf
icebp
adc
lret
pop
dec
inc
lahf
push
add
push
ljmp
mov
dec
ja
lock
cmpsl
xor
pushf
add
aad
jno
push
out
decb
jmp
aad
cmpsl
sbb
pop
and
je
xor
adcl
mov
loope
pop
mulb
leave
std
sbb
pop
xchg
in
ljmp
jb
test
arpl
ret
or
cmp
mov
mov
scas
push
cmp
clc
int
pushf
jns
xor
rcll
xor
jbe
test
cwtl
loope
jge
cmp
loopne
inc
pop
stos
pop
in
rclb
inc
rcrb
scas
ljmp
ss
lret
sbb
dec
notb
ret
sbb
dec
movsb
mov
rcll
xor
shll
xchg
test
js
or
fcoms
jg
call
pop
sbb
pop
cmpsb
lock
jp
sbb
push
inc
aas
lods
test
loopne
mulb
stos
dec
lods
inc
jge
ds
loop
push
loopne
nop
into
lods
fsubrl
or
sub
daa
xchg
xchg
xor
ror
aaa
push
cmp
pop
mov
push
xor
js
cmp
adc
ljmp
popa
xchg
testb
bound
shll
js
pop
sti
inc
sbb
mov
mov
aad
push
jecxz
ret
push
inc
mov
mulb
jbe
jbe
loop
test
xchg
out
mov
mov
xchg
sbb
mov
sti
xor
popf
add
enter
dec
sbb
xchg
xlat
mov
jl
jmp
in
jmp
cmp
mov
pop
inc
cmpsl
sbb
test
or
out
dec
xchg
or
rclb
sbb
incl
mov
enter
dec
loopne
hlt
rol
inc
sbb
xchg
dec
imul
in
pop
mov
and
out
testl
imul
shrb
sbb
mov
shl
mov
insb
cmp
cwtl
jne
lret
push
mov
mov
xchg
in
ss
sub
sbb
outsl
xchg
test
mov
ret
mov
lds
push
sbbl
sbb
inc
enter
lahf
das
idivl
fwait
icebp
push
icebp
pop
roll
cmp
mov
add
push
or
arpl
test
loope
outsl
add
push
out
sub
mov
xor
imull
dec
adc
pop
test
pop
lahf
or
add
lcall
fisubrs
inc
iret
add
sbb
fdivrs
add
jmp
jbe
insl
push
arpl
aaa
xchg
mov
xchg
or
adc
dec
dec
dec
cmp
pop
rol
shll
xchg
addl
int3
lret
fnstcw
shll
sub
xchg
add
pop
and
push
jns
pop
test
or
add
hlt
sahf
jb
sbb
push
dec
mov
mov
mov
inc
sub
pop
mov
lds
jecxz
sbb
clc
and
shll
mov
test
jo
or
or
or
ss
and
push
push
sbb
add
sbb
mov
jmp
mov
ret
outsb
push
mov
rorb
sub
cmp
test
ret
cmp
nop
inc
imul
gs
cmc
mov
jp
xchg
adc
or
add
dec
or
daa
test
scas
inc
fsubr
data16
adc
lcall
sbb
popf
inc
daa
mov
or
jns
adc
mov
adc
fildl
dec
call
or
pop
push
jge
sbb
mov
adc
int3
and
sub
jae
and
cmp
aas
pop
in
adcb
jge
xchg
pop
mov
int3
fwait
mov
test
cmpsl
ds
leave
jns
jg
lds
rolb
cmp
dec
cmp
pushf
or
jmp
pop
dec
shr
sbbl
inc
push
xchg
cmp
mov
addr16
fidivrs
pop
add
test
mov
pop
rorl
push
or
push
sub
stos
dec
mov
jmp
aaa
lods
in
in
scas
mov
cmp
push
add
jg
xor
je
in
ret
mov
sub
out
fcomi
mov
nop
adcl
scas
pop
lock
test
cwtl
xlat
cmpsl
loope
pusha
cmc
in
scas
cltd
out
aam
ret
mov
loopne
inc
bnd
arpl
js
in
xor
lock
mov
rorb
shll
jecxz
inc
dec
mov
iret
mov
cltd
in
mov
fs
lcall
xor
xchg
sub
mov
xchg
pop
fwait
push
pop
cmp
jnp
lret
sti
xchg
fs
push
mov
mov
mov
das
mov
lods
es
inc
clc
cmp
push
outsl
inc
add
int3
xchg
pusha
sbb
dec
test
pop
imul
lods
push
push
insl
aam
xchg
aaa
sahf
jne
pop
or
inc
jne
pop
andl
mov
sar
ljmp
popa
icebp
push
pop
cmp
cltd
xchg
repz
pop
inc
fsubrp
ss
inc
inc
xor
imull
sahf
sbb
outsb
fucomi
sub
mov
adc
push
adc
adc
in
cmp
push
and
sbb
mov
pop
mov
or
cs
sti
andb
pop
sahf
hlt
lret
repnz
les
and
xchg
es
mov
loopne
int
or
daa
out
stc
xchg
inc
add
xor
pop
mulb
addl
repz
pop
test
xchg
jp
faddp
gs
movb
and
pop
sahf
lcall
test
cmc
jo
data16
arpl
cmpsl
sbb
xorb
lret
notb
out
mov
or
push
xchg
fisubs
dec
jno
pop
cmpsb
scas
out
bound
dec
ljmp
stc
push
xchg
lock
push
test
int3
fimuls
addl
mov
in
sahf
addr16
pop
movsb
mov
xor
out
leave
int
and
pause
iret
mov
adc
dec
imul
andl
cmp
fsubs
das
dec
scas
cld
cmpsb
xor
or
mov
test
xor
dec
stc
mov
inc
repnz
icebp
and
xor
test
nop
jae
ffree
cli
push
jle
mov
stos
dec
fmull
imul
das
neg
jbe
mov
cmp
or
sub
cmc
sub
test
xchg
les
stos
dec
fists
cmc
mov
cmp
sti
add
push
jae
push
xchg
xlat
pop
sub
cmpl
xchg
inc
les
push
xchg
jno
loopne
sbb
add
or
mov
sarl
pusha
int
push
test
cs
dec
jns
leave
ret
outsb
or
pusha
and
and
xchg
mov
jb
hlt
mov
add
lods
add
mov
imul
mov
notl
loopne
aam
ficoms
movsl
cld
jbe
pop
xor
inc
pusha
sub
push
sbb
test
fwait
cmp
jb
sub
std
push
test
in
jl
sbb
push
in
je
jb
mov
fistl
push
lock
push
or
loope
sbb
popf
xor
inc
mov
sub
hlt
popw
rcrl
push
push
mov
xor
adc
pop
xor
xchg
scas
cmc
jns
pop
stos
add
fdivs
pop
cmp
lds
popa
clc
xor
aad
imul
and
xchg
add
xor
mov
cltd
mov
pusha
sbb
push
rclb
cli
je
push
jne
and
cltd
inc
pop
and
fwait
or
cmp
shl
mov
mov
lods
das
rorb
pop
je
imul
es
jne
jnp
aas
lods
and
out
aas
xchg
popl
fwait
test
sub
pop
xchg
push
or
mov
ret
pop
inc
lods
mov
bound
cmpsl
xchg
rcrb
jnp
inc
cs
dec
ds
inc
fwait
outsb
dec
jecxz
loopne
push
test
mov
leave
cltd
pop
mov
scas
jne
push
mov
inc
stc
rclb
adc
mov
and
ja
sub
divl
or
es
nop
xor
out
fwait
cmp
out
add
adc
or
mov
aam
adcb
addr16
shrb
mov
icebp
mov
xchg
sub
jns
xchg
add
and
pop
mov
xor
xchg
push
and
add
mulb
leave
push
push
push
jb
inc
xchg
dec
ss
loopne
pusha
js
inc
pop
jl
xchg
das
cld
aam
and
sbb
inc
sbbl
jb
push
xor
addr16
push
cltd
and
imulb
xor
jl
fwait
das
daa
mov
cmp
pop
sub
popf
dec
push
shll
int
mov
and
filds
aad
add
repz
mov
and
mov
lahf
jle
inc
fidivrs
mov
gs
push
and
fldenv
test
fdivl
in
xchg
pop
mov
jno
adc
mov
push
jnp
divb
call
xchg
inc
push
inc
ljmp
push
mov
lds
cmpb
cmpsl
sbb
loopne
das
add
sbb
fldcw
dec
rorl
and
nop
stos
xchg
mov
testb
rcrb
lea
cmc
mov
test
lret
dec
adc
sub
ja
cmp
filds
sub
inc
sub
adc
notl
add
imulb
shrl
fsubrl
inc
lds
dec
jne
or
aam
clc
push
or
arpl
inc
pushf
imul
js
sahf
mov
in
jb
mov
dec
sbb
sub
jl
jmp
jg
daa
cmp
out
fidivrl
or
mov
insl
stos
iret
movl
inc
sub
cmp
jmp
xchg
or
mov
xchg
js
fcomip
ret
aad
in
jae
add
orb
mov
cmpsl
shrl
movsl
push
jmp
jp
push
mov
sbb
push
icebp
sub
lahf
call
sbb
jne
pop
xchg
push
fidivrs
lods
mov
mov
and
adc
movsb
into
cld
sbb
push
cmp
dec
dec
gs
pop
mov
sahf
fs
mov
sbb
xchg
sbb
inc
int3
mov
push
cwtl
or
std
fcoms
cmp
pop
cmp
ds
mov
mov
movsl
je
pop
or
cs
fwait
lret
push
fimuls
pop
add
adc
cmovo
into
popf
jbe
lret
addr16
push
leave
add
call
adc
xchg
insl
mov
lahf
adc
adc
cmpsb
mov
xor
hlt
cmpsl
mov
fadds
pop
xchg
jne
mov
push
push
adc
inc
pop
pop
xor
fisubs
aas
cmp
call
pusha
rcrb
shll
adc
push
loope
mov
xchg
mov
shlb
add
cmp
out
popf
xlat
jmp
mov
out
inc
and
addb
js
xchg
and
push
cmp
rclb
cmp
adc
push
lock
movsl
std
xchg
cmp
sti
or
rorl
mov
fdivrp
lds
bnd
pop
pop
jmp
push
and
xchg
cmp
pusha
jp
insb
jns
jbe
lea
cmpsb
adc
push
popa
jp
sub
scas
inc
idivb
int
mov
cs
jbe
test
fwait
dec
shrb
icebp
insl
dec
add
xor
dec
inc
not
sbb
arpl
push
mov
fs
adc
jbe
push
sahf
movsl
jae
data16
and
push
popa
mov
jae
pop
pusha
andb
jge
lret
test
jno
je
adc
add
sub
stos
subb
mov
pusha
rolb
shrb
repnz
fidivl
add
xlat
sbb
jno
xlat
mov
fstp
adc
jb
lcall
iret
adcl
pop
mov
cmc
pop
xor
mov
aaa
iret
movsb
or
test
add
mov
pop
cmp
cmovle
mov
mov
loop
scas
mov
cmp
sahf
mov
ret
cmpsb
aam
sbb
sarl
pop
cli
jp
in
adc
std
xrelease
lahf
repnz
dec
dec
inc
sti
dec
in
push
lea
std
push
add
cmp
add
fucomi
push
mov
pop
fcoml
jbe
iret
mov
sti
jle
mov
stc
mov
icebp
adc
nop
daa
jo
push
mov
add
fistps
mov
lcall
xor
mov
inc
push
jno
add
dec
xchg
xchg
imul
push
mov
test
pop
mov
in
mov
xchg
or
and
mov
cmpsl
ja
dec
rcrl
mov
imul
lret
xlat
xchg
inc
pop
sbb
and
scas
adc
stos
pop
imul
mov
sbb
lcall
sahf
dec
cmp
movsb
mov
add
into
adc
mov
pop
xchg
xchg
dec
dec
xchg
out
hlt
repz
bound
movsb
or
jmp
repz
clc
sub
sub
xchg
int
mov
popf
dec
bound
fstpt
testb
push
jmp
fwait
outsl
lcall
jo
or
jno
dec
or
and
call
mov
xchg
and
aad
mov
or
xor
in
or
insl
sub
mov
imul
jmp
mov
sbb
push
mov
or
cmp
xor
and
cmpsb
push
loope
hlt
mov
push
call
or
inc
adc
in
test
cmp
dec
push
mov
add
rcrb
loope
push
insb
jl
jg
stc
pushf
cmpb
out
jle
mov
je
loopne
push
and
mov
jle
xor
adc
mov
xor
popa
inc
push
mov
dec
ds
aaa
ficoml
es
sti
mov
push
dec
sarl
jns
loop
or
mov
jo
sub
pop
in
push
imul
cwtl
pop
lods
inc
mov
shr
cli
aad
bound
or
jo
push
repz
enter
push
sbb
mov
iret
cmp
sub
push
xchg
push
add
mov
leave
pop
pop
leave
rcr
jge
cltd
scas
pop
rcll
push
cmp
enter
lods
add
push
out
inc
outsl
lret
popf
aad
into
or
mov
hlt
xchg
cmpsb
sub
xchg
push
sbb
mov
es
test
mov
les
xor
ficoms
xlat
scas
pushf
rol
jns
ss
sbb
cmc
mov
and
pop
test
mov
es
dec
or
mov
xchg
sub
dec
dec
cmc
pop
sub
sbb
jp
daa
sub
fidivs
pop
gs
sub
arpl
mov
mov
add
leave
jle
xchg
and
lret
sbb
fisubrl
ret
cmp
test
mov
and
xor
fs
inc
hlt
test
add
imull
lods
out
daa
mov
insb
jns
push
mov
ja
dec
or
sbb
cwtl
loop
jge
mov
jl
stc
shlb
jbe
fwait
xchg
mov
and
call
sbb
out
or
dec
mov
test
mov
jge
adc
mov
inc
push
aad
jmp
stos
xlat
jo
leave
loopne
dec
subps
jp
xor
inc
cmpsl
sbb
loope
pop
or
lret
sbb
and
push
int
mov
adc
mov
lds
pop
lahf
sbb
enter
dec
dec
pop
test
xchg
pop
and
xor
add
inc
pusha
inc
jb
push
stc
loopne
or
jmp
cmp
mov
int3
mov
push
lods
adc
inc
stc
in
jne
and
jno
fnstsw
in
sbb
cli
rolb
adc
dec
int3
out
push
xor
mov
imul
rclb
es
ret
add
dec
cs
pop
lock
xchg
lock
loop
cmp
stos
in
fwait
xchg
incl
xor
pusha
testl
mov
and
sbb
cwtl
inc
pop
lret
cmpsl
jae
scas
inc
leave
js
iret
cmp
add
pop
mov
dec
push
dec
cmc
push
daa
outsl
push
pop
les
imul
or
cli
xor
bound
and
clc
iret
jge
bound
jg
cmp
mov
pop
std
dec
fnstenv
jp
out
dec
xor
mov
sti
and
es
mov
push
dec
loop
pop
inc
cltd
std
in
bound
or
cmc
pop
sub
and
and
add
cmp
rorl
test
mov
arpl
jo
mov
mov
fisubrs
scas
adcl
and
xchg
add
insb
fs
mov
in
jae
roll
mov
sar
lds
jg
push
mov
lds
jp
push
fisubrl
inc
pop
imul
fwait
sti
jns
daa
lcall
inc
pop
nop
sub
xor
js
or
cmp
push
insb
cli
dec
fldenv
inc
add
inc
rorb
inc
mov
push
out
imul
pushl
loopne
jmp
je
sub
xchg
pop
dec
and
aaa
lods
lock
add
shll
cld
jp
xor
out
xor
sub
arpl
mov
addr16
std
lods
mull
or
out
jl
jno
aaa
xchg
mov
cli
sub
add
push
sti
push
outsb
into
popa
mov
inc
cmc
dec
aaa
sbb
ds
cld
scas
sahf
leave
mov
fyl2x
mov
popa
inc
popa
pushf
nop
mov
shl
fdivrs
inc
push
test
pop
addl
mov
mov
movsl
mov
data16
push
stc
pop
repz
jae
into
sbbl
adc
addr16
or
fidivrl
pushf
push
or
cmp
dec
out
nopl
iret
loop
enter
stos
and
ret
dec
outsl
inc
imul
lock
xor
outsb
add
push
jne
push
fstpt
xchg
sub
ficomps
into
and
iret
cmp
cmp
pop
dec
pop
lahf
lret
outsb
int3
mov
into
xchg
sub
fildl
adc
mov
mov
sub
push
jbe
add
mov
lcall
cwtl
xor
mov
dec
sbb
or
out
sbbb
cmp
jle
das
jno
pushf
xor
mov
push
imul
lods
inc
jmp
bound
add
mov
lods
push
jnp
and
aad
add
push
inc
jp
jno
subl
fidivl
rol
shl
push
in
add
fmul
imul
mov
xlat
insl
jg
les
jns
mov
pop
cmp
push
out
sub
shlb
sub
add
sahf
fildl
xchg
jmp
and
test
add
in
jp
inc
push
cwtl
adc
dec
shlb
push
adc
mov
ret
add
sub
test
fucomp
shll
xchg
test
aaa
outsl
fidivl
nop
enter
clc
mov
scas
add
je
imul
add
es
push
mov
in
inc
inc
fidivs
enter
es
inc
dec
push
js
arpl
jg
xchg
push
jl
xchg
push
adc
fs
sub
inc
push
aam
sbbb
adc
int3
xchg
lahf
pop
loop
dec
dec
lret
add
jns
adc
sbb
testb
and
xor
je
adc
rcr
jne
data16
cld
lods
sbb
sub
add
mov
rcr
dec
adc
mov
fisubs
std
das
mov
add
and
inc
xchg
push
clc
daa
icebp
movsl
or
adc
add
inc
faddl
movsb
arpl
push
testb
jb
mov
cltd
cmp
std
fs
mov
scas
mov
leave
pop
inc
fcoml
xchg
int3
mov
xor
sti
hlt
jmp
hlt
fdivrl
dec
mov
pop
int
cltd
and
push
xchg
sub
dec
mov
pushf
dec
or
dec
lret
push
jmp
push
clc
fcoms
jmp
lahf
jl
and
arpl
mov
mov
ja
and
mov
lock
jns
loop
jb
out
cltd
frstor
inc
subb
jns
add
sbb
sbb
add
add
mov
and
inc
ret
loope
pop
xor
fisttpll
mov
div
and
fisubrl
fsubr
lea
ret
into
cli
xlat
mov
loopne
mov
sub
test
cmp
mov
aam
movsl
cmp
mov
fwait
push
shl
push
popf
es
mov
inc
sbbb
jp
mov
out
and
loop
or
push
and
dec
cmp
and
and
and
and
inc
fistpl
cmp
jmp
or
out
fldl2t
sub
outsl
test
inc
fidivs
ret
jge
mov
jbe
jp
out
dec
xchg
inc
sbb
pop
mov
adc
push
mov
xchg
mov
jns
lret
lret
push
ret
test
xor
lock
push
cltd
arpl
pop
lret
sti
orb
mov
push
clc
inc
imull
cmp
fs
push
xchg
pop
les
imul
xlat
movsl
add
sbb
mov
rcr
sbb
xlat
shrl
mov
les
cmp
dec
xchg
sub
scas
push
pop
mov
popa
push
out
fcompl
mov
pop
mov
inc
out
sahf
je
or
enter
repz
jle
mov
fldl
jge
pop
mov
xchg
fs
mov
out
bound
stos
and
mov
or
sbb
adc
shll
push
movsl
or
dec
dec
jns
add
add
outsb
mov
popf
lods
pop
scas
neg
subl
test
jl
or
in
fs
xchg
or
insl
xchg
dec
add
mov
stos
push
ds
fstpl
daa
nop
mov
enter
fwait
insb
es
mov
mov
or
and
scas
subl
push
sahf
add
ja
into
mov
test
sub
test
pop
and
pop
jmpw
xor
test
inc
sti
jl
and
rcrb
pop
cmp
mov
xor
jecxz
orb
rolb
in
cmp
add
jnp
in
pushf
lcall
fdivrs
jp
mov
and
shrb
decl
xor
insb
aas
jo
xor
ljmp
mov
or
jmp
lods
addb
into
or
scas
xchg
shlb
fadds
xchg
mov
ds
sub
dec
lea
aad
test
inc
jl
aad
sub
dec
push
push
repnz
xchg
aad
repnz
push
pushf
iret
mov
xchg
test
fstl
int
push
cmpsb
mov
mov
mov
fisttpl
push
mull
jo
mov
fimuls
dec
lcall
inc
pop
add
scas
inc
add
fsubrl
jg
xchg
mov
jo
pop
addr16
adc
cmp
into
fcoml
pop
inc
fnstenv
push
fucomip
inc
pop
pusha
mov
mov
xor
push
lahf
div
adc
cwtl
stos
mov
push
in
cmpsb
push
cltd
std
fs
jns
hlt
popa
shr
mov
sarl
cmpsb
lahf
divl
mov
pop
ljmp
push
outsl
adc
andb
push
aas
push
sub
inc
das
add
xor
dec
inc
and
mov
adc
insl
popf
shlb
mov
rorb
mov
xchg
enter
sub
cmp
stos
je
fcompl
push
inc
sbb
cmc
mov
in
rcrb
xorl
or
mov
xchg
aaa
js
lods
lret
js
jb
cmc
cltd
js
enter
ja
cmp
pop
clc
in
dec
adc
shrl
cmp
jecxz
icebp
cmp
adc
rcl
call
adc
aas
lock
or
xchg
push
and
or
mov
shll
dec
pop
and
or
das
push
es
push
icebp
loopne
ja
das
xor
aaa
cmp
pop
mov
fs
shlb
xor
out
add
xchg
ja
test
jae
pop
ds
mov
push
insb
aas
es
mov
mov
cmpsb
jbe
mov
inc
push
xchg
mov
pop
les
mov
pusha
imul
inc
pop
jno
push
and
sbb
jns
imul
push
dec
mov
sub
mov
rcll
sbbb
push
sub
cltd
fldt
int
stc
stc
and
adcb
inc
mov
cmp
popf
stc
fistpl
test
incb
mov
jno
bound
stos
hlt
add
mov
xor
ret
pushw
in
dec
push
mov
mov
mov
bound
mov
testb
nop
dec
ffreep
mov
xchg
sti
dec
data16
adc
sbb
mov
mov
movsl
aaa
aam
mov
xchg
cs
shrb
push
and
pop
inc
sub
std
lcall
insl
outsb
xchg
lret
xchg
pop
pop
jo
cmp
scas
or
imul
sub
fdivrs
js
enter
push
jbe
mov
xorl
or
outsl
fdivr
xchg
pop
jl
clc
movsb
insl
sbb
push
cmp
pop
outsb
aaa
xor
aas
xor
dec
xor
mov
push
je
jmp
jmp
or
cmp
push
or
out
cld
pop
jecxz
pop
stc
les
clc
push
inc
scas
ret
add
cmp
cmpsb
mov
add
xor
mov
into
pusha
mov
sub
mov
imul
push
jne
call
mov
inc
mov
push
stc
xchg
outsl
rcrb
mov
inc
sub
jo
js
mov
xchg
or
cmp
mov
lahf
pop
shll
loop
and
iret
gs
sub
inc
mov
or
bound
or
jmp
mov
scas
arpl
xchg
shlb
popa
popa
xchg
adc
ds
cltd
in
inc
inc
sti
mov
ret
les
lods
add
shrl
push
hlt
or
jl
repnz
inc
std
jo
repz
lock
testl
inc
cli
adc
and
pop
push
test
push
cmpsl
pop
mov
nop
clc
mov
cmp
and
test
int3
jg
fldcw
ret
ret
scas
shrb
test
jp
xor
addr16
imulb
lret
or
roll
ljmp
mov
or
loope
lock
and
scas
inc
enter
push
gs
jae
outsl
push
add
div
push
sub
lods
mov
adc
jo
mov
dec
jge
push
cmpsb
scas
jp
cltd
imul
or
add
js
inc
nop
push
jns
push
jmp
jle
mov
mov
push
call
lea
in
dec
insb
pop
sbb
mov
add
int
popf
xor
adc
scas
testb
mov
shrl
xchg
clc
xchg
sub
je
mov
push
jbe
call
mov
adc
ja
push
idivl
popf
add
test
in
cld
xchg
mov
ret
sbb
outsb
fsub
js
imul
pop
xlat
cmp
inc
ret
lcall
lods
sbb
scas
mov
jb
jb
lret
mov
xchg
dec
in
xor
sbb
bound
inc
mov
les
xor
cld
bound
mov
mov
mov
ret
loope
ror
in
mov
sub
lret
pop
sub
pushf
xchg
lahf
ljmp
sbb
data16
sbbb
add
aam
mov
aaa
and
out
imul
jb
push
xor
enter
int3
outsb
int3
lret
push
mov
cwtl
mov
or
leave
outsb
adc
fdivl
jp
mov
and
lods
pusha
neg
mov
mov
aas
jne
push
inc
cmp
pop
hlt
mov
fistpll
sub
inc
test
fadds
stos
sub
popf
incb
sti
js
and
adc
adcb
jecxz
pushf
aaa
mov
sub
mov
or
xchg
xchg
int3
arpl
jmp
ljmp
and
insb
scas
sub
mov
adc
lds
mov
sub
cmp
dec
mulb
pop
and
push
pop
jg
xor
mov
push
cmc
pop
lods
mov
fidivs
bound
filds
inc
sub
sbb
enter
insl
sub
jl
popa
and
xchg
xchg
add
loope
sti
inc
jae
jg
sbb
push
imul
mov
xor
outsb
add
sbb
lcall
mov
movb
cmp
pminsw
scas
sti
mov
adc
les
push
aas
mov
cmpsb
ss
cwtl
arpl
outsb
loop
arpl
cwtl
mov
ret
lahf
imul
adc
add
sbb
mov
push
popa
icebp
pop
sti
cmpsb
les
js
sub
mov
jecxz
jmp
dec
out
add
rorl
shlb
repz
cmp
stos
fidivl
mov
cmp
ficoms
and
pop
repnz
jns
mov
push
pop
mov
fdivrs
repnz
push
ja
xchg
ror
addr16
pop
cmp
xor
adc
mov
fdivrp
xor
adc
push
xchg
cmp
call
pop
pop
jne
adc
pop
add
xchg
arpl
lcall
and
out
push
lods
xchg
mov
xchg
nopl
les
xor
pop
aam
inc
std
push
test
sbb
or
shlb
lea
fidivs
fwait
xor
pop
xchg
jl
enter
popa
int
fldl
iret
push
jecxz
addr16
xor
sbb
sub
adc
stos
xlat
outsb
fdivl
lods
mov
push
sahf
add
adc
jl
pushf
xor
jmp
inc
leave
add
js
scas
push
fnstcw
or
into
cmpsb
add
mov
les
pop
push
inc
fnstsw
pop
fs
stos
inc
enter
push
or
int3
fstpt
xchg
sub
jle
divb
fs
dec
mulb
and
out
cmp
cmp
rcl
lods
lods
jg
test
inc
push
xor
jns
je
sahf
addl
dec
fsubs
rcrb
adc
gs
cwtl
add
cwtl
je
sub
mov
je
cmp
shrl
sahf
mov
inc
popa
pop
mov
pop
aad
mov
sbb
xorps
ret
mov
ss
test
push
mov
or
pop
repnz
and
fcmovnu
push
mov
mov
push
mov
test
sbb
jno
test
pop
cmp
js
sahf
pushf
or
and
jg
arpl
test
jns
cli
jbe
adc
aam
push
push
pop
push
xor
mov
push
loopne
ss
fstpt
es
push
jg
ret
lahf
jmp
dec
lahf
cmpsb
cmp
es
adc
mov
push
repz
icebp
aaa
pop
fidivs
jg
js
sbb
mov
mov
test
jmp
mov
adc
mov
cltd
jb
test
cli
dec
dec
push
sub
jne
xlat
sub
filds
mov
sbb
jmp
jbe
jo
jmp
push
test
rcrl
test
jp
imul
mov
loope
sub
out
out
and
and
adc
mov
je
fwait
jo
mov
sti
push
aad
push
test
fs
xor
jb
mov
imul
sbb
dec
jl
sub
bound
adc
adc
and
jb
mov
stc
push
das
mov
mov
fnstenv
add
xor
pop
in
xchg
or
nop
imul
arpl
dec
adcb
int3
push
cmpsb
shrb
les
test
mov
xor
dec
adc
cli
dec
nop
imul
xchg
das
clc
sbb
lods
cmp
pusha
insl
jle
cmp
mov
mov
out
iret
xrelease
cmp
xchg
dec
cmp
jae
mov
fmull
push
into
insl
adc
push
pop
stos
pusha
push
jns
dec
dec
addr16
stos
and
inc
shlb
xchg
push
add
xor
cmp
cwtl
xlat
push
icebp
dec
inc
mov
nop
jo
push
sub
mov
jp
inc
cwtl
mov
xor
hlt
inc
push
pop
pop
jl
push
sub
cmp
pop
mov
int3
and
adc
rcll
pop
scas
in
std
push
add
fnsave
daa
inc
xchg
addr16
cld
mov
inc
sub
push
jle
pop
imul
aad
add
inc
arpl
or
pop
mov
cli
xchg
adc
cmp
pusha
cmp
xchg
insb
cmpsl
mov
repz
jp
cmpsb
jnp
lods
iret
and
addb
jecxz
stos
addb
pop
mov
cmp
fdivrl
cmp
jnp
arpl
push
inc
aas
adc
dec
clc
push
xchg
sub
xor
inc
mov
orb
aad
xor
or
add
daa
add
mov
sbb
inc
mov
sbb
ds
insb
fwait
cmp
mov
aaa
sbb
out
imul
mov
xor
and
mov
cli
sub
pop
adc
movsl
jle
add
jae
aaa
and
scas
push
inc
adc
or
pusha
notl
sub
call
fstpl
push
lds
frstor
dec
fs
fnstcw
or
mov
icebp
mov
pop
mov
or
sbb
mov
je
mov
cmp
pop
sti
push
xchg
add
iret
xchg
pop
mov
sbb
subb
out
mov
in
xor
jl
les
push
mov
les
es
movb
clc
jg
adc
push
mov
dec
sti
inc
fsubrs
mov
call
pop
and
adc
jmp
push
mov
sbb
bound
in
push
cmp
xor
mov
addr16
or
je
jnp
mov
push
cmp
clc
jae
push
sbb
jns
das
out
cmc
call
and
mov
xchg
cmpsl
lds
ret
jge
pop
insb
mov
iret
pop
push
pusha
lods
ss
fldenv
js
repnz
pop
or
js
cld
sub
movsl
sbb
push
jne
pop
xor
dec
imulb
xlat
popa
xor
lret
push
add
sub
in
insb
sub
testl
rclb
loope
mov
ficoms
and
jb
dec
mov
mov
push
movsb
stos
add
xchg
xor
sub
into
sbb
xor
jae
aaa
jb
int
int3
mov
xchg
cltd
jg
xchg
lea
sbb
push
outsb
hlt
mov
inc
pop
inc
cli
sbb
in
pusha
mov
xor
sbb
inc
shlb
enter
loope
cmp
pop
mov
in
nop
or
aam
sub
xchg
testl
mov
loopne
cmpsl
sbb
add
call
pop
outsl
mov
mov
mov
leave
pop
or
and
clc
lock
mov
mov
subps
or
in
les
shl
cmp
inc
xlat
sub
sub
dec
das
movsb
outsb
add
adc
pop
push
add
lods
incl
mov
adc
and
lahf
mov
mov
mov
in
xorb
fcomi
cmp
jmp
cmp
sub
mov
inc
xchg
insl
jl
decl
inc
or
ret
leave
test
mov
xchg
mov
push
sbb
cs
push
xchg
dec
inc
hlt
addr16
in
mov
pop
pop
adc
ret
xchg
cld
out
and
jne
mov
loopne
mov
jmp
inc
pop
sub
mov
push
mov
add
sub
adc
pop
dec
mov
inc
scas
lock
dec
in
ds
or
xor
jnp
lock
sbbb
sbb
lret
call
or
pop
add
jo
cli
movsb
push
xchg
mov
jnp
test
cltd
std
pop
add
sbb
mov
xchg
xor
test
fimull
or
sbb
mov
cmpsl
loope
movsb
mov
inc
outsl
push
jns
sbb
addr16
mov
out
mov
les
and
shlb
inc
pusha
das
scas
inc
pusha
repnz
ja
xchg
adc
int3
jo
mov
push
jmp
and
mov
mov
xchg
stos
jne
sti
jl
jge
frstor
mov
dec
xor
inc
popf
xchg
inc
repnz
addr16
iret
pop
inc
movsl
dec
adc
ljmp
mov
sbb
jno
pop
mov
sbb
sub
mov
sub
sub
mov
jbe
inc
pop
jp
jg
popa
jg
sbb
mov
std
std
movsb
sarb
push
insl
dec
or
mov
enter
out
adc
fisttpll
out
mov
add
ret
insb
sbbl
cmp
rolb
jnp
inc
mov
je
out
and
mov
add
pop
addl
mov
loope
push
mov
std
repz
or
in
cmpsb
adc
pop
cs
mov
test
icebp
stc
sub
cmpsb
in
add
inc
fs
xchg
inc
jp
mov
loopne
push
push
mov
pop
sti
mov
movsb
shrb
sub
pop
jmp
icebp
in
hlt
push
mov
sbb
popa
push
fwait
bound
ja
adc
jnp
sbb
scas
dec
inc
jecxz,pt
xchg
jo
andl
mov
xchg
xchg
inc
and
adc
sub
dec
in
adc
lea
fdivp
or
sbb
sub
push
movsl
inc
jno
xor
cli
xchg
mov
test
inc
xchg
sub
lahf
dec
mov
lahf
or
add
jns
fdivl
lcall
idivl
outsb
mov
mov
mov
adc
rolb
xchg
addr16
lods
jge
inc
cltd
cmp
inc
mov
dec
push
mov
fidivrs
cltd
das
ret
mov
cmp
mov
xchg
lea
mov
add
out
je
add
xchg
jb
out
dec
jmp
loopne
repz
cmp
push
or
insl
mov
push
fwait
jbe
movsl
mov
xchg
jbe
push
movaps
inc
fnstcw
push
outsl
mov
mov
jg
jae
mov
or
inc
jle
icebp
inc
enter
iret
sub
mov
sub
jbe
mov
add
sbb
mov
mov
jbe
push
iret
rorl
dec
adc
loope
cmpsb
lock
jo
dec
out
xchg
cmp
insb
or
ficompl
fistpl
shl
dec
popa
add
ljmp
mov
int3
inc
sbb
inc
jecxz
cmc
imul
adc
movsl
and
pusha
xchg
dec
jbe
sarl
sahf
dec
data16
xchg
outsb
and
bound
dec
dec
jno
and
test
rol
lahf
aam
mov
or
sbb
mov
push
sbb
imul
xchg
pop
jo
mov
nop
cmpl
mov
mov
das
ret
xchg
add
je
int
aas
jecxz
pop
inc
xchg
outsb
cmp
lcall
mov
in
pop
mov
sbb
fs
lock
test
daa
mov
repnz
push
cltd
push
cli
push
xchg
mov
sahf
mov
lret
and
mov
dec
and
lods
adc
rcrb
icebp
adc
in
std
inc
xor
push
xchg
xor
shrb
jb
fmulp
aad
lock
mov
test
aad
or
or
cmpsb
mov
sub
dec
ja
and
dec
out
inc
xchg
pop
xchg
repnz
mov
std
sub
fwait
cld
aam
pop
ja
decb
xchg
or
add
imull
fstpt
movb
inc
stos
xor
shll
xchg
test
rcl
cmp
and
inc
outsl
daa
dec
shl
cmp
out
fnclex
test
mov
arpl
cld
mov
in
imul
sub
and
or
mov
inc
lods
mov
sti
faddl
and
add
sti
shrl
les
subl
xor
lret
addr16
nop
jg
cli
test
adc
cmpsl
test
ja
aad
or
dec
and
fadd
push
fstps
pusha
testl
cmp
pop
jnp
pop
sub
cmpsl
mov
cmpsl
mov
sbb
jge
cltd
jmp
cmpl
mov
daa
movsb
pop
andb
iret
mov
add
inc
das
mov
roll
push
and
aam
fistpl
lcall
fbstp
xchg
outsb
adc
data16
lret
push
mov
out
imul
movsl
out
dec
dec
and
iret
das
xchg
pop
scas
adc
rolb
sub
lods
cmpsb
mov
int3
dec
fnstcw
mov
gs
je
lods
jne
and
cmpsl
cmp
jecxz
push
adc
add
not
mov
shl
aaa
sti
mov
dec
adc
out
out
imul
push
push
sbb
mov
or
rorb
out
aaa
into
push
cmp
iret
insb
mov
enter
adc
sahf
and
sbb
pop
roll
loop
mov
loopne
and
fcomps
cmc
xlat
nop
stos
inc
push
stos
jl
jne
dec
pop
sub
cmp
xchg
pxor
mov
fidivrs
iret
daa
adc
jb
jle
out
add
pop
arpl
cmp
jnp
push
dec
mov
out
aad
or
adc
outsl
shrl
loop
mov
dec
movsl
incb
std
xchg
punpckhbw
pop
call
test
cmp
aam
cmp
or
dec
cmpsl
mov
pop
lea
mov
mov
aaa
stos
inc
pushf
outsb
loope
out
sub
sti
add
mov
shlb
mov
imul
push
scas
aaa
andb
push
adc
outsl
xchg
push
adc
mov
mov
or
ret
and
sti
sbb
xchg
imul
inc
lock
psubsw
or
nop
mov
mov
cmpsl
fisubs
push
insl
cmp
repnz
dec
pop
lcall
lods
in
inc
jecxz
xor
insb
js
popf
test
xchg
popf
sub
out
fstps
pop
xor
xlat
mov
ret
pop
sub
sti
rcl
loope
cltd
pushl
cmp
ret
push
add
push
or
cmp
shrl
aas
jmp
jno
cmc
cmp
pop
lock
jmp
je
inc
xor
insl
ja
repz
sub
add
out
adc
mov
lods
int
xchg
js
out
and
add
cmp
jne,pn
loopne
pop
xor
sbb
pusha
push
push
or
cmp
sub
adc
pusha
into
mov
sti
or
push
cmc
xchg
notl
mov
insl
pop
lret
shrl
pushf
rcll
leave
insb
adc
fnstenv
sahf
mov
ret
enter
dec
movsl
xchg
inc
hlt
mov
add
fcompl
stc
fcoms
mov
mul
jg
or
andl
cwtl
xlat
stc
lods
inc
sub
pop
fldt
push
or
repz
push
dec
dec
sarl
repnz
xchg
fsub
push
lock
scas
add
lahf
mulb
fcmovu
jae
ret
jl
cli
dec
xor
imul
xchg
dec
ljmp
xchg
int3
les
xorl
inc
lods
pop
frstor
sbb
and
mov
cmpsb
rclb
xchg
cmc
dec
sub
imulb
jge
fwait
outsb
call
jbe
mov
add
int
mov
and
lret
hlt
insb
pop
mov
inc
or
cmp
mov
hlt
imulb
aad
clc
aam
cld
hlt
lds
jb
pop
or
mov
frstor
pop
add
and
push
mov
loopne
and
add
sarl
aam
and
sbb
sbb
repnz
mov
test
ja
mov
cwtl
outsl
pop
insl
cmp
test
fstp
inc
cmpsl
push
push
sbb
test
cmp
ds
clc
fs
xlat
outsb
jecxz
xchg
mov
xchg
addl
or
mov
adc
cmp
push
sbb
cmp
push
lea
xchg
scas
aas
inc
xlat
shrb
cmc
fstpt
bound
lcall
xchg
jp
stos
push
push
mov
sbb
lcall
or
adc
cmp
add
je
and
inc
cmpps
xchg
and
lods
scas
jns
ret
xor
pop
sub
jmp
lahf
xor
pop
loope
enter
add
or
pusha
cs
pop
int3
bound
repz
stos
addr16
sahf
inc
test
mov
mov
call
mov
cmpb
scas
and
push
mov
movsl
cld
xchg
pminub
mull
or
test
sbb
xchg
ja
ja
sbb
sbb
pop
or
mov
xchg
negl
pop
mov
divl
add
pop
fs
repz
inc
lcall
arpl
mov
arpl
sar
or
xor
xchg
mov
sbb
stc
mov
sub
cwtl
inc
fcompl
sub
pushf
stos
sbb
and
pop
jbe
mov
add
xor
mov
insl
xchg
ret
mov
mov
fsubl
call
dec
in
jne
mov
pop
out
cmp
aas
pop
adc
cltd
out
bound
test
andb
das
in
mov
pop
call
pop
fists
mov
cmc
or
sar
xchg
cmc
sub
dec
push
push
movsl
mov
fstl
lods
push
fbstp
adc
cs
add
lea
or
je
add
xchg
cmp
daa
xor
pop
inc
ret
and
fcoml
ret
ret
stc
sub
outsb
pop
or
icebp
ds
push
inc
clc
jae
lock
mov
mov
push
mov
xor
loop
enter
outsl
xor
xchg
aas
push
enter
mov
fnstcw
rcll
push
inc
jnp
out
nop
and
icebp
loopne
repnz
sbb
jbe
or
dec
movsl
popf
add
push
setge
sub
add
fldcw
add
jp
cmp
sbbb
add
lahf
xorl
outsb
adc
sub
pop
push
sub
xor
fistl
cltd
and
inc
loope
cs
rolb
pop
mov
sbb
mov
jmp
push
ss
shl
loop
jbe
roll
cwtl
add
bswap
leave
fs
das
xchg
sbb
jecxz
daa
adc
imul
adc
repz
mov
ror
pop
js
icebp
test
inc
mov
add
repnz
push
out
loope
cltd
add
gs
adc
jns
dec
and
lahf
push
jnp
test
fwait
int3
int3
scas
push
jnp
out
pop
push
stc
pop
inc
pop
sub
ret
pop
sub
or
xchg
in
mov
jp
xchg
test
fwait
jnp
sar
mov
push
scas
imul
mov
jo
xchg
les
clc
jp
inc
lods
xchg
lcall
push
aad
das
push
add
aaa
xor
mov
xor
push
adc
or
jo
hlt
outsl
out
push
push
mov
insl
cmpsl
mull
sub
jp
insb
lods
adc
cld
xchg
jbe
in
ds
push
fsubrp
imul
scas
cmp
add
add
bound
ret
fistpll
mov
mov
subb
mov
cwtl
fs
pop
push
or
repz
outsb
mov
out
mov
imulb
fisubrl
scas
shlb
repnz
fisttpll
scas
xchg
mov
xor
not
cmp
or
movsb
aaa
pop
mov
data16
lret
ret
xor
pop
icebp
les
leave
adcb
cmp
in
addb
loopne
inc
push
cmpsl
imul
or
mov
inc
push
push
jae
lock
push
aad
cli
push
fsubl
scas
movsb
inc
fdivr
jne
inc
fdivl
xchg
cmp
in
jb
aam
sti
add
movsl
dec
loope
insl
sbbl
jb
or
xchg
bound
loop
xlat
cld
rcl
ret
xor
js
in
lods
push
and
push
in
enter
imul
jge
jg
mov
insb
mov
pop
jmp
adc
and
ficoml
sbb
popa
popf
push
fwait
sbb
mov
dec
pushf
into
shrl
movq
repz
call
aas
repz
xchg
adc
movsb
mov
out
clc
fdivr
sbb
mov
add
xchg
scas
sub
add
lcall
cmp
psrad
jns
pop
daa
jae
add
pop
outsl
test
xor
shlb
std
jo
fldt
stos
inc
add
leave
and
inc
mov
add
sbb
push
stc
jnp
jmp
adc
fcomps
cltd
dec
loop
mov
es
push
ds
test
fsubrs
std
sarl
lods
testb
ljmp
cld
mov
stc
mov
stos
push
and
cld
outsl
mov
lea
add
lahf
push
lcall
jp
xor
xchg
or
add
icebp
xchg
adc
lcall
out
push
inc
les
loopne
lds
jae
cmp
dec
xchg
xchg
inc
and
mov
arpl
mov
and
jecxz
pop
loope
pop
inc
and
shrb
jns
pop
or
xchg
inc
cmc
xor
loopne
jnp
push
es
aas
add
xchg
out
inc
adc
clc
enter
xor
mov
stos
mov
jmp
jp
jo
mov
pop
mov
adc
xchg
subl
xor
sub
pop
mov
xor
xchg
dec
outsl
cmp
aaa
add
aaa
jb
mov
loop
jne
or
stos
in
sbb
push
ja
xchg
cmpsb
std
add
je
ss
xchg
nop
push
insb
jmp
aas
sbb
icebp
sbb
hlt
mov
and
scas
inc
add
mov
and
xlat
push
jg
cmp
mov
jo
add
mov
rolb
aas
lret
fdivrl
aas
inc
inc
sbb
fsubrl
adc
outsb
cmp
mov
pop
mov
cmpb
out
sub
mov
aas
push
push
mov
jg
lock
mov
xchg
fwait
sbb
int
adc
pop
pusha
test
jecxz
xor
add
test
push
mov
das
fwait
mov
jl
in
jp
roll
sub
js
sbb
insb
addr16
out
stos
mov
pop
sarb
mov
bound
enter
stc
pop
dec
inc
movsl
sub
dec
push
jne
mov
fcmovu
mov
call
xor
xor
adc
int3
jg
rcl
mov
idivb
adc
in
in
subl
lcall
cmc
js
cmpsb
fwait
sbb
lret
sti
jno
push
daa
push
xchg
mov
dec
xchg
out
xchg
and
popf
rcr
and
nop
std
and
fsubrl
jb
pop
addr16
repnz
int3
nop
daa
xor
lock
cli
xchg
rclb
int
addr16
hlt
lods
lods
inc
out
shld
cmc
mov
fisttps
mov
cmp
push
ss
pusha
popa
scas
sbb
sub
icebp
daa
xchg
mov
cld
dec
pop
outsb
push
cmp
add
out
setle
into
and
xchg
jae
dec
xor
in
test
jl
xor
xchg
es
mov
pusha
ret
xor
and
outsb
loope
leave
add
jbe
jp
add
out
cmpsl
mov
mov
orl
cmc
adc
bound
popf
pusha
dec
push
sti
ds
daa
lret
inc
add
and
int
and
mov
std
xchg
shlb
call
sbb
gs
xor
test
fucomp
and
cmp
stos
cmp
mov
jnp
jo
add
test
xor
mov
add
add
cmp
sbbl
jmp
cmpsl
lods
aas
sbb
sub
test
mov
adc
adc
push
xor
xchg
lea
mov
sbb
mov
mov
jecxz
or
mov
add
stos
mov
insl
call
out
jae
inc
jp
cld
pop
xor
ss
mov
test
and
cli
leave
mov
je
in
movb
push
movsl
adc
add
fs
or
jae
mov
fcmovne
pop
xor
cmp
pushf
out
js
pusha
iret
add
xchg
mov
adc
add
loopne
sub
cmp
dec
and
lods
test
dec
clc
jmp
mov
loop
inc
fnop
add
pop
data16
shrl
roll
in
and
dec
and
dec
lcall
inc
sbb
cmp
jge
aad
dec
das
fsincos
dec
jecxz
shrl
inc
icebp
jb
pop
dec
stos
inc
ret
jae
pop
jno
lods
ret
fbld
pop
cmp
dec
and
fsubl
and
and
xchg
adc
out
xor
jb
dec
mov
ja
sub
ret
jb
mov
mov
ucomiss
int
popa
mov
imul
push
sub
mov
mov
add
mov
xchg
xchg
test
gs
bound
lds
push
nop
pusha
inc
das
add
fwait
das
imul
xchg
add
dec
outsl
ljmp
andb
push
in
stos
xor
cli
push
insb
dec
inc
loope
adc
jmp
mov
inc
bound
movsl
popf
rcrb
sub
lock
inc
or
and
std
dec
out
dec
mov
add
lods
ljmp
pushf
push
xchg
lods
add
inc
xchg
outsl
sub
dec
xor
mov
mov
jne
push
or
lods
jo
sub
leave
rcrl
data16
mov
iret
jle
adc
dec
dec
xchg
mov
sub
mov
mov
cltd
adc
adc
test
inc
jecxz
push
sub
mov
rep
dec
shll
inc
pusha
mov
push
into
jl
mov
jg
out
ret
sti
mov
mov
mov
mov
add
test
inc
jno
jg
pop
cmp
push
or
rclb
xchg
imul
xchg
lock
fcmovu
in
add
xchg
cmpsl
and
adc
sbbb
ja
movsb
repnz
lock
clc
push
outsl
cli
or
clc
enter
repnz
cmp
mov
jb
pusha
inc
xor
ss
add
cmp
nop
or
xchg
cs
mov
push
imul
cwtl
stos
adc
repz
inc
push
pop
push
arpl
xchg
lods
pop
pop
pop
mov
subb
jmp
lea
repnz
fiaddl
pop
sbb
pop
push
es
push
stos
bound
into
mov
jbe
push
out
icebp
sar
inc
or
push
icebp
out
sahf
sbb
xor
in
sbb
dec
call
out
inc
aaa
fdivs
inc
xor
push
cmpsl
testb
in
sub
lods
push
jae
jbe
stc
sarb
andb
daa
mov
das
test
push
inc
sub
call
or
push
jns
jno
ja
loop
pop
adcb
pop
xchg
adc
jns
pop
jmp
fwait
mov
xlat
lea
test
xchg
mov
jne
dec
dec
popa
jmp
sbb
push
lea
add
mov
cltd
cmpsl
pusha
jb
mov
orl
or
xor
add
or
int3
mov
sbbb
inc
cmpsl
das
pop
pop
popa
insb
push
jmp
jmp
jb
shrb
mov
bound
lcall
dec
jno
enter
mov
cmp
mov
inc
mov
add
rolb
mov
xor
mov
repz
inc
fisttpll
clc
or
fs
mov
dec
and
xchg
clc
mov
repz
shl
mov
roll
mov
popa
sub
gs
jb
cs
pusha
sub
sbb
shll
add
dec
mov
inc
int
ja
xor
mov
shrl
push
xchg
ja
mov
test
sbb
xor
and
cmp
and
outsl
push
mov
push
int3
ja
mov
es
fsubp
mov
dec
jl
xor
adc
adc
push
inc
dec
xchg
xchg
and
mov
loope
cld
scas
subb
das
and
dec
bound
sub
daa
nop
shrl
push
lods
sub
add
addr16
and
cmp
sti
xchg
xchg
pop
add
push
push
sub
fstl
xchg
pop
movsl
cmp
cmp
pop
mov
inc
loopne
lods
mov
aas
lds
sarl
in
shrl
jl
sbb
cmp
mov
imul
or
repz
aaa
mov
ret
add
mov
fadds
imul
pusha
dec
cld
adc
divb
dec
and
add
push
fbstp
lods
xor
fwait
xchg
cmp
pusha
sarb
lcall
dec
mov
rclb
repnz
mov
cmp
imul
sub
dec
push
push
cwtl
rcrl
dec
mov
popf
fsubs
xchg
inc
lcall
cmpsb
jmp
rcrl
jg
pop
decb
rcl
stc
outsb
iret
frstor
pop
sbb
popf
shr
xchg
mov
sbb
imul
cmpsb
insb
mov
inc
rcr
jns
jecxz
adc
jnp
hlt
nop
mov
daa
les
xor
and
mov
cmp
mov
mov
dec
fdiv
mov
sarl
cli
and
gs
insb
aad
dec
pusha
imul
js
mov
int3
lret
or
mov
fimuls
sbb
mov
loop
push
ds
push
lods
and
and
loope
cmpl
lret
jmp
sahf
cmpsl
inc
mov
xchg
cld
pushf
das
sbb
ret
xchg
daa
add
push
popf
negb
add
lret
and
imul
outsl
jge
pop
xlat
or
pop
shll
repnz
sub
aad
add
xchg
ljmp
dec
xor
aaa
into
test
lret
xchg
clc
sbb
int3
enter
fisubrl
out
jecxz
in
std
fiaddl
xchg
je
lods
dec
mov
inc
push
je
fisubrl
sahf
and
cld
fsubrs
and
leave
lds
pminsw
lds
adc
push
pop
outsl
bound
ss
push
adc
mov
jg
pop
cmp
repz
dec
pusha
pop
adc
push
mov
jae
in
std
sbb
add
mov
dec
mov
popa
push
aaa
scas
fisubs
loopne
lods
cmc
mov
int3
movsl
stc
les
enter
adc
xor
inc
push
mov
sbb
aaa
xchg
cmp
add
adc
inc
xlat
adc
push
js
flds
cmp
outsl
sbbb
sbb
push
test
ss
mov
test
cmpsb
adc
clc
addr16
mov
pop
cmp
push
sbb
out
jno
sub
push
inc
fsubrl
mov
mov
das
sbb
xlat
imul
mov
adcl
mov
fildll
pop
ret
lcall
in
fmulp
stos
loop
lods
adc
cli
data16
scas
subb
sub
cmp
es
repnz
pop
sub
nop
mov
rcll
xchg
arpl
mov
sub
xor
dec
movsb
dec
push
dec
or
dec
ljmp
inc
sub
fistpll
adc
ljmp
out
push
imul
popf
mov
dec
popa
fdiv
mov
cwtl
das
add
mov
jbe
adc
xor
das
mov
or
icebp
cmp
jno
push
lock
out
xchg
ficoml
push
loopne
mov
mov
and
bound
fcoms
pop
lea
xor
mov
inc
push
movsl
sti
fwait
mov
mov
pop
push
shlb
dec
xchg
mov
inc
enter
mov
or
leave
dec
mov
fiadds
iret
sub
sub
push
jl
dec
ret
hlt
cmc
ffree
push
dec
adc
clc
sub
fsubrp
mov
test
aaa
sub
fildll
out
push
pop
addr16
pop
aad
lea
push
dec
jne
sub
in
mov
jecxz
jmp
testb
inc
inc
je
cmp
fisubl
push
cmp
outsb
fdivrl
rorl
pop
inc
lea
stos
or
inc
lret
bound
pop
imul
movsb
and
pop
fimuls
xchg
or
mov
sbb
loop
mov
movsb
scas
test
add
or
psllw
ret
xlat
push
adc
mov
cmc
xchg
decb
pushf
andl
iret
je
dec
subb
xchg
cmc
mov
add
call
cli
dec
adc
out
inc
inc
imul
push
aas
xchg
and
pop
cmp
cmp
mov
mov
inc
std
test
mov
pop
xor
jno
pop
fisttpl
je
out
daa
jmp
inc
arpl
insl
in
insb
add
xor
jmp
test
ja
or
sbbl
idivb
cmp
xchg
or
cmp
push
mov
xor
jecxz
pop
gs
mov
add
pushf
repnz
enter
aas
mov
mov
xor
mov
data16
cwtl
mov
inc
lds
mov
loop
inc
addr16
mov
je
sub
sbb
js
cmp
dec
mov
mov
sbb
fcoms
sub
rorl
jp
fldt
leave
cmpsb
std
sub
xor
push
push
sar
leave
mov
inc
lock
int3
push
pusha
js
or
es
divl
scas
jg
jb
or
call
cmp
sbb
pop
fdivs
cmc
dec
xchg
pop
adc
mov
shlb
cltd
cmp
lret
jbe
aam
jmp
daa
cmp
push
stos
push
xchg
out
outsl
adc
aam
es
loop
dec
ret
and
cmpsl
ja
sub
sbb
insb
ret
aaa
push
hlt
mov
std
clc
das
orl
imul
mov
mov
lea
sbb
pop
aam
int
lahf
fisubrl
shll
lret
in
or
lret
adc
pop
push
pop
push
call
test
pushf
cwtl
test
push
adc
insl
aam
fwait
xor
sbb
movsl
xor
fs
jp
stos
mov
cmc
cmpl
outsl
sub
cltd
ss
xchg
jmp
mov
call
push
sti
xchg
loope
sahf
or
cs
sub
mov
cmp
pop
ret
push
mov
cmp
xor
pop
lods
dec
ds
imul
fiadds
ljmp
xchg
ljmp
push
loop
push
cmp
in
sub
jbe
fxch
add
adc
shll
sbb
inc
cs
cld
notl
in
popf
jg
orl
and
pop
fnstsw
xchg
std
xchg
int3
int3
cwtl
das
push
jo
push
push
loop
les
cltd
and
jo
in
neg
push
mov
mov
cmp
fnstenv
lcall
push
mov
inc
fidivrl
shlb
fsubr
dec
mov
xor
rcrl
or
push
fdivrs
in
cwtl
test
fstpt
and
push
loope
push
outsl
rorl
dec
fcomp
pcmpgtd
stos
std
std
jno
enter
xor
cmpb
mov
push
mov
sub
test
pusha
divl
push
jle
push
cs
ret
sbb
cmpsb
adc
pop
and
ficomps
cmp
cmp
movsb
push
icebp
mov
decl
inc
fcmovnu
mov
outsl
sbb
adc
sub
jns
inc
in
mov
pop
aam
xchg
push
clc
inc
or
jl
icebp
mov
gs
shlb
dec
loope
out
roll
push
dec
into
or
stos
mov
jno
gs
adc
subl
int
nop
fs
mov
icebp
aad
stc
pop
xor
shlb
sub
inc
jae
xor
mov
sub
or
mov
mov
aas
xchg
inc
leave
pop
sbb
fcoml
pusha
sub
pop
popa
icebp
cmp
adc
xchg
sub
lods
add
xor
push
sti
in
jnp
adc
dec
int
xchg
add
icebp
dec
movsl
or
pop
sub
in
sbb
ds
xlat
mov
pop
mov
outsb
ret
mov
push
in
pop
jmp
out
lret
in
popa
xor
mov
cmp
shll
repz
ficomps
scas
mov
movsl
xlat
xor
adc
sbb
pushf
icebp
mov
fidivrs
lret
mov
xchg
loop
mov
push
cmp
pop
sbb
dec
es
jge
cli
cmp
ss
int
addb
push
jbe
jp
mov
arpl
mov
cmp
addr16
cmp
pop
test
in
adcl
adc
lahf
jnp
out
fdivrs
popa
mov
ss
mov
push
xor
nop
cmp
jmp
push
dec
or
daa
ds
popa
clc
test
lock
sets
adc
fmul
cmp
pcmpgtb
cmp
outsl
rcrb
stc
ds
not
mov
ret
fstl
pop
xchg
mov
stos
inc
add
leave
mov
fdivs
pop
sub
fimuls
or
dec
mov
cmp
sbbl
bound
dec
push
stos
sub
mov
inc
fdivrs
movsl
push
mov
and
xchg
lcall
or
cmp
rcrl
pop
mov
jp
rorl
out
mov
out
pop
out
mov
hlt
dec
scas
adc
repz
xor
xchg
lcall
and
push
out
inc
jmp
gs
inc
gs
xchg
mov
xchg
inc
scas
lods
adc
aas
sub
lods
mov
cmp
int
aaa
fmul
add
pusha
sahf
mov
mov
gs
cmc
mov
mov
cmc
xor
xchg
ds
pop
inc
and
dec
push
or
dec
ja
jg
stos
push
insb
adc
test
scas
cmp
daa
lret
mov
cmpsl
xor
inc
in
es
mov
dec
push
mov
jno
je
adc
aad
imul
lds
insb
sbb
dec
es
xchg
adc
cmc
pop
xor
out
popf
lret
sahf
adc
divb
and
into
cmpsl
add
lahf
pop
jge
loop
and
std
push
out
inc
inc
icebp
xchg
sub
loop
aad
sub
fadd
jge
out
xchg
out
call
fwait
sub
rcr
add
jno
inc
repnz
sbb
jno
aaa
repnz
lcall
jg
in
cwtl
xlat
dec
fdivs
pop
mov
adc
rorb
pop
std
mov
mov
xchg
mov
shlb
movsb
fisubs
mull
sub
std
xchg
mov
fnsave
mov
sbb
adc
fmull
xchg
add
int3
test
gs
inc
divb
inc
gs
clc
or
arpl
icebp
std
punpckhbw
and
pushl
decb
in
icebp
xor
push
inc
ret
or
push
mov
divl
xchg
cmp
inc
in
fnstsw
mov
int
xchg
fcmovb
sub
andb
sub
movl
add
add
cmp
fwait
mov
push
sub
out
xor
inc
fidivs
lret
pop
xor
jo
or
test
test
lahf
pop
lcall
or
or
xchg
sbb
adc
ss
cli
mov
adc
int
adc
movsb
subl
pop
ja
or
sbb
cmpsb
out
and
enter
and
lret
mov
sahf
cmp
adc
movsl
mov
fdivl
add
je
ss
mov
or
add
mov
gs
mov
lret
xlat
rorl
inc
sub
ret
negb
leave
mov
fsubrl
sbb
push
push
outsb
xchg
xchg
pop
or
cs
sbb
adc
push
adc
add
jecxz
call
iret
stc
mov
xor
pop
push
dec
daa
mov
xor
mov
and
mov
cmc
inc
out
call
or
xor
lcall
push
pop
and
loope
mov
mov
outsl
jle
mov
subb
mov
ret
out
cmp
inc
cmp
pop
fistl
inc
mov
icebp
inc
mov
cld
push
addr16
jbe
mov
sbb
jecxz
xchg
xor
aad
enter
fstpt
cmpsb
push
inc
popf
pop
mov
sub
mov
sar
push
das
mov
fst
jo
mov
add
add
sub
push
out
xchg
jno
jge
cwtl
in
fs
lret
cld
mov
popf
xchg
sub
or
ret
test
int3
movsl
mov
outsl
stos
out
lret
sub
fisubrl
push
inc
jge
sub
adc
xchg
xchg
ss
lret
lods
inc
pop
cmp
test
mov
xorl
mov
add
mov
bound
cltd
mov
and
outsl
gs
repnz
xchg
add
shll
mov
in
enter
mov
ret
mov
xchg
or
adc
pop
out
xchg
iret
outsl
jg
add
mov
outsl
push
stos
add
dec
scas
loopne
sub
jae
shll
xor
js
mov
or
add
jl
ret
jmp
and
jecxz
xchg
test
mov
adc
enter
int3
and
xchg
xor
cmc
cmp
ret
jb
or
leave
out
jge
push
jge
imul
popf
push
xchg
push
icebp
or
test
and
mov
jmp
lock
inc
jmp
push
sahf
or
fmul
int3
lret
outsl
mov
pushf
mov
stc
jmp
faddp
jecxz
or
sbb
adc
cmp
in
lock
xchg
pop
mov
aad
add
lret
pop
jmp
test
pushf
je
xor
sbb
lock
dec
jo
xchg
sarb
ficoml
inc
pop
mov
jne
xchg
adc
mov
hlt
sub
imul
test
sahf
cmp
ja
mov
aas
int
fsubs
jno
addr16
inc
stc
fcomps
lock
xchg
or
pop
fimuls
adc
add
mov
fucom
push
call
xor
pop
rol
mov
stos
dec
xlat
jae
shlb
xchg
aam
adc
les
shl
lret
sbb
pop
xlat
inc
mov
jb
loope
cmp
lock
adc
aam
add
sbb
fistpl
pop
cmp
or
jg
xchg
pushf
mov
ja
std
or
stc
inc
nop
ds
arpl
mov
mov
pop
les
push
dec
testl
cltd
insb
xchg
dec
in
mov
test
adc
inc
push
cmc
subl
jecxz
xor
adc
xchg
mov
lds
and
cmpsb
mov
es
inc
pop
mov
dec
or
jae
arpl
xor
pop
dec
jmp
das
repnz
mov
bound
jns
xchg
call
call
inc
mov
jns
andl
xchg
sub
fcoml
xor
sbb
mov
idivb
adc
cwtl
das
hlt
test
mov
inc
xchg
add
aas
jae
popa
movsl
jae
or
call
lahf
sahf
xchg
sahf
mov
mov
fcoml
pop
adc
insb
and
fstps
fcompl
or
je
dec
ljmp
xchg
xchg
into
repz
add
jb
cmp
add
testb
rcrb
in
push
fdivrp
sbb
fdivl
sub
pop
out
pop
xor
xorl
aas
add
jmp
pop
xchg
ret
lret
sub
jb
sbb
mov
push
lcall
ret
bound
negb
cwtl
mov
push
not
iret
jns
mov
push
fcomps
mov
imul
dec
mov
insb
xchg
outsb
push
mov
inc
inc
add
fistpll
xchg
dec
stos
dec
mov
adc
mov
call
mov
mov
scas
pop
cmp
push
cmc
pop
shrl
push
sbb
mov
cltd
mov
mov
or
jle
in
jae
movsl
int3
adc
xchg
inc
in
in
pop
sti
sub
dec
ljmp
xchg
xchg
ret
rcrl
mov
fimull
add
enter
cmp
out
dec
cli
push
xchg
lods
jns
test
fsubrs
mov
or
inc
and
leave
lret
push
xor
dec
and
jno
daa
dec
fs
std
mov
test
enter
lahf
dec
cmp
pop
cmp
clc
bound
dec
push
cmp
mov
inc
outsb
faddl
ss
adc
hlt
sbb
popf
xor
xor
loop
data16
mov
das
inc
xchg
sbb
mov
mov
jo
pop
sahf
shrl
imul
int
xchg
and
testl
mov
push
inc
pop
mov
ret
sub
les
push
push
dec
movsl
ltr
pop
int3
jae
les
rorb
fisubrl
xor
lock
xor
aam
add
dec
leave
stos
add
fnclex
cmpps
inc
pop
mov
adc
enter
mov
pop
jbe
mov
and
int
inc
les
and
es
cmpsl
cmp
and
adc
int3
push
add
cwtl
or
ss
cmp
scas
push
aaa
jns
lock
lods
xchg
add
or
loope
sahf
nop
sbb
xchg
add
adc
push
in
push
outsl
in
lret
pop
xchg
test
sub
pushf
hlt
rorl
mov
repnz
inc
mov
addr16
pop
cltd
jl
outsl
push
jg
hlt
test
mov
shll
add
adc
cmp
xor
dec
repnz
cli
pushf
fisubrs
cmp
outsl
sti
adc
imul
jl
xlat
xchg
mov
dec
movsl
mov
mov
aaa
adc
dec
popf
lahf
ja
or
fstpl
adc
cmpsl
push
cli
mov
stc
test
roll
jo
cmp
popf
sbb
dec
fucomp
add
pop
inc
jle
fwait
cs
test
dec
fstps
cmp
dec
mov
mov
jp
mov
scas
mov
mov
and
lods
imul
sub
lret
ja
push
dec
in
inc
mov
in
ja
call
pop
mov
jno
in
jmp
push
push
subb
inc
sbb
xchg
push
pop
nop
pusha
xor
outsl
push
dec
mov
dec
push
pushf
jge
shll
sahf
arpl
or
lahf
jmp
shrl
int
fsubrs
adc
ds
inc
sbbl
test
and
dec
dec
call
in
sbb
pop
and
jnp
push
and
sti
xchg
cs
dec
mov
mov
out
jle
lret
sarl
add
nop
incb
ret
and
repnz
jp
xor
repnz
cmpsb
les
pop
mov
shlb
add
fcoms
inc
inc
out
in
mov
ret
in
cmp
push
dec
ds
add
jnp
fs
xor
push
xor
iret
mov
sbbl
fsubrl
jmp
sarl
dec
shll
mov
inc
idiv
popa
or
add
sarb
fstps
push
lds
test
arpl
push
addr16
repnz
sub
mov
jno
pop
mov
into
push
std
xchg
sub
pop
sbb
cmpsb
addr16
into
popa
mov
mov
xchg
jecxz
psrlq
sub
mov
mov
push
mov
xchg
and
popf
xor
and
mov
mov
dec
inc
int3
mov
adc
or
shlb
inc
subb
mov
add
push
mov
push
or
outsl
ljmp
mov
ja
das
xor
xchg
and
lret
mov
jne
imul
data16
fsubl
sub
out
iret
ret
push
push
xor
xlat
push
loop
bound
in
jno
int3
jbe
out
xchg
nop
stos
or
jne
dec
and
shl
mov
cmp
sub
mov
fwait
cmp
add
adc
dec
sub
and
jle
insb
push
arpl
dec
inc
gs
clc
bnd
hlt
adc
xor
xchg
call
xchg
cmpsb
mov
aad
jne
mov
dec
cmp
arpl
into
data16
xlat
imul
test
mov
xchg
enter
lock
and
loop
sbb
xor
das
mov
inc
inc
xor
xchg
lock
int3
pop
dec
push
cwtl
cmp
lods
rep
add
add
and
int
xchg
mov
inc
clc
xorl
and
sub
stos
inc
inc
jb
les
mov
cli
cltd
movsb
ljmp
mov
int
cmp
mov
fs
add
movsb
pop
xor
lods
lods
inc
pusha
jbe
sub
pop
stos
es
decl
jno
jnp
lret
adc
xchg
inc
into
enter
jge
or
dec
loopne
mov
xchg
arpl
std
inc
insb
inc
stos
and
fcmovu
mov
aam
mov
adc
ds
outsb
adcb
lret
add
jmp
loopne
mov
push
adc
loope
adc
push
sub
ja
mov
add
mov
je
or
stos
push
test
cmp
inc
repnz
es
lcall
and
jne
add
shld
in
popf
pop
jecxz
jne
adc
in
nop
lods
jmp
push
push
and
insl
dec
pop
mov
aad
sub
cmpsl
fisubs
adc
xor
pushf
jecxz
add
divb
pop
adc
xor
mov
insb
sbb
xor
xor
adc
push
mov
pop
and
add
into
cmp
addr16
sbb
insb
jns
pop
js
lcall
in
xor
adc
lea
sbb
xor
insb
dec
dec
les
push
icebp
test
es
xchg
or
xor
mov
push
jno
cmpsl
mov
adc
push
pushf
int
dec
mov
jle
xor
in
push
out
outsb
mov
stos
out
jge
loopne
sbb
aas
fwait
mov
pop
xchg
fmull
sbb
shlb
mov
imul
mov
xor
and
movsl
push
fimull
mov
cs
popa
add
jns
jbe
inc
or
jge
mov
push
sbb
fisubl
subl
lahf
mov
outsb
push
inc
fnstenv
clc
push
outsl
cmp
mov
inc
lock
jge
ffree
das
cmp
lods
dec
pop
fmulp
dec
es
mov
daa
aaa
test
daa
je
push
or
pop
mov
jns
insl
mov
pop
push
jbe
mov
mov
cmp
push
imul
nop
mov
sarb
data16
in
pop
lods
sbb
or
imul
jb
dec
jl
adc
lcall
xchg
loop
jmp
mov
insl
add
mov
in
xchg
fsubrl
fnstenv
shl
pop
xor
ret
cld
sbbb
dec
jno
clc
dec
mov
aad
push
sub
push
jb
sar
jae
mov
cmpb
and
push
jge
mov
push
mov
fistpll
jb
repz
lods
add
loop
sub
mov
xor
jns
cwtl
push
inc
adc
mov
xchg
clc
arpl
pop
xchg
add
or
or
mov
jno
daa
loop
pop
or
aad
fildll
addr16
lret
xlat
and
pop
pop
xchg
notl
or
jmp
mov
and
cmp
xchg
mov
rcrl
ss
jne
xchg
adc
and
lea
cmpsb
mov
jge
pop
cltd
cltd
xchg
repz
scas
lock
imul
test
jno
lcall
sub
fwait
inc
in
or
sbb
std
or
test
xchg
iret
xorl
cs
or
and
lret
jg
rorl
sbb
jecxz
in
xor
sbb
xorb
popa
mov
adc
pop
ljmp
push
or
lock
into
shll
mov
and
add
mov
sub
and
int3
mov
inc
test
js
inc
cwtl
ret
bound
fimull
lahf
addr16
pop
scas
xor
adc
add
addr16
test
in
mov
subb
out
xlat
int
mov
add
push
in
and
fmull
stos
icebp
std
mov
fwait
insl
sub
or
js
lea
cwtl
mov
jl
mov
adcl
sbbl
addr16
pop
cltd
mov
xchg
adc
adc
les
stos
dec
loop
loope
adc
ljmp
jecxz
pop
sahf
insl
test
data16
outsl
push
xchg
loopne
pop
mov
in
jns
adc
mov
outsl
lcall
shl
sub
push
sub
or
jno
lret
sbb
sub
cmpsb
mov
scas
cltd
jbe
jno
aad
inc
fdivs
dec
adcl
dec
or
shr
jne
fdivs
mov
lock
cld
loopne
movsl
rclb
loop
sarl
lock
push
fnstenv
cs
outsb
inc
movsb
add
mov
adc
movsl
sub
cmp
xlat
dec
loope
imul
sahf
stc
jb
sahf
lods
fstpl
and
iret
enter
mov
fisubl
mov
test
xchg
push
push
adc
aas
push
dec
data16
adc
arpl
xor
cmpsb
in
jo
pop
enter
mov
cmp
adc
cmp
add
dec
fidivs
cmc
jl
cs
mov
push
push
and
aam
das
popf
mov
cld
sub
push
jns
je
fistpl
lds
cld
cli
and
jnp
xchg
int3
sahf
mov
es
roll
xor
add
aad
aam
div
xlat
cmpsb
pop
leave
push
leave
bound
pusha
dec
ss
push
in
xchg
scas
push
xor
sbb
push
dec
pop
ret
mov
hlt
repz
pop
add
push
push
xchg
ja
lret
mov
aam
xchg
xor
data16
cmp
imul
jp
rclb
inc
flds
adc
into
cmp
lea
xor
sbb
into
pmulhuw
inc
stos
xchg
adc
xchg
xor
or
or
in
das
jecxz
stos
in
test
in
add
pop
jecxz
jl
imulb
into
cmp
xchg
mov
into
xchg
call
jae
xchg
out
out
les
aas
mov
hlt
pop
pop
fstl
negb
mov
jle
out
pusha
mov
std
cltd
pusha
xlat
sub
mov
sbb
dec
popa
add
pop
clc
bound
stos
pop
negb
ja
inc
xor
aaa
xchg
data16
pushf
xlat
sarb
jbe
call
stos
mov
ljmp
pushf
outsl
adc
outsb
sub
cmp
notb
jecxz
ljmp
scas
sbb
xchg
mov
pop
lods
push
rol
pop
mov
xor
xchg
daa
mov
cli
shlb
jl
addr16
cmp
add
stos
add
inc
data16
data16
movsl
mov
fstps
push
cli
jmp
or
xchg
xchg
jmp
push
addr16
pusha
test
fs
inc
pop
mov
popf
adc
in
das
pop
arpl
mov
arpl
xchg
lds
xlat
popa
mov
mulb
sbb
insl
cmp
pop
and
dec
aaa
add
mov
ljmp
mov
aad
and
pop
loop
jnp
adcb
and
jmp
jle
push
jmp
lahf
sahf
dec
in
or
lds
js
hlt
mov
inc
inc
out
inc
push
sub
in
dec
pop
addr16
inc
out
insl
ret
add
das
jmp
out
xor
lret
jae
cwtl
xlat
push
leave
push
scas
inc
push
ss
test
call
jl
outsl
cltd
aaa
out
test
add
fbld
lods
js
int3
mov
xor
jecxz
push
in
pop
push
jle
clc
mov
cwtl
mov
add
shrl
push
test
push
jmp
movsl
jo
fildll
cmpsl
sti
adcb
mov
outsb
mov
jae
mov
push
sbb
scas
xchg
dec
stos
in
stos
mov
and
jnp
mov
popf
stc
imul
test
mov
and
sahf
insl
les
mov
loop
inc
je
fsts
cmc
jge
mov
and
lds
cmp
leave
mov
loopne
cmp
push
adc
sbb
movsb
dec
into
sahf
pop
adc
repnz
mov
fisttps
pop
jge
int
mov
ficoms
es
roll
sub
lfs
pop
or
imul
dec
sub
out
lret
cmpsb
std
sbb
cmpsl
iret
inc
and
bound
jg
fs
jne
ljmp
jbe
xor
je
mov
sub
mov
test
enter
lahf
fs
sbb
cmp
sbb
test
inc
lcall
testb
dec
movsb
jno
jl
int
sub
cmp
cmpsl
xchg
push
leave
jno
cmp
test
es
cli
adc
decl
rorb
xchg
mov
adc
push
push
lods
inc
in
jnp
sub
test
adc
xchg
rclb
jmp
outsl
xchg
loop
pop
push
ja
mov
ja
clc
test
sub
in
xchg
fidivrl
mov
xor
sub
mov
std
xchg
gs
pushf
aam
xor
mov
mov
inc
adc
and
sbb
adc
xlat
out
lods
cmp
adc
push
pop
stos
nop
mov
stos
subb
sbb
je
in
fs
pop
imul
je
aas
mov
xlat
xchg
cmp
push
in
dec
cltd
cmp
loope
sbbb
fs
fwait
and
push
dec
inc
bound
adc
das
outsl
shrl
sbbb
mov
mov
fbld
sub
mov
loopne
jge
fistps
xchg
ret
in
sub
dec
imul
enter
mov
rcll
xchg
dec
adc
adc
shrb
jl
out
adc
ljmp
out
ret
inc
pusha
std
mov
mov
test
cmp
jbe
imul
testl
or
dec
lods
dec
stos
mov
inc
jle
sbb
pop
nop
pop
mov
arpl
or
xor
nop
xor
ficomps
add
adc
popa
mov
jp
data16
fidivs
out
dec
mov
mov
push
ss
add
and
outsb
push
jbe
js
push
mov
push
and
fs
mov
fidivrs
and
int
pop
mov
dec
adc
leave
pop
xchg
cmc
push
mov
addb
dec
test
pop
mov
cmpsb
xor
aad
mov
sti
out
addr16
jbe
data16
aam
in
or
sub
daa
adc
cmc
std
pop
mov
outsb
inc
inc
inc
jle
lcall
sbb
dec
xor
xchg
nop
fsubrp
iret
push
shl
or
stos
cld
repz
cmp
push
sarb
cmp
ficomps
into
daa
cmp
or
push
mov
loope
inc
xor
out
shlb
movsl
pop
in
std
ds
xchg
sti
xchg
sub
sub
dec
out
iret
jbe
iret
out
data16
loop
jne
out
mov
push
or
mov
notl
nop
add
xchg
add
dec
jbe
xchg
add
cwtl
dec
loop
std
stos
mov
outsb
add
sub
cwtl
jno
cmp
xchg
sbb
xorl
xchg
sbb
into
mov
hlt
arpl
mov
stos
xor
dec
outsb
fsubs
pop
mov
mov
cmp
mov
mov
call
xchg
cs
pop
testb
mov
mov
fisttpll
jne
push
test
subb
fadd
sbb
mov
xchg
in
jg
repz
xchg
lods
inc
jne
mov
int3
lcall
into
test
pop
movsb
inc
ret
ret
add
inc
enter
sbb
cmp
icebp
lds
std
mov
inc
mov
cld
fs
jmp
out
popf
mov
sub
aas
jg
jbe
inc
in
mov
sbb
test
xor
lret
mov
xchg
cltd
aaa
repnz
fiadds
das
cmp
les
xlat
lds
inc
sbb
mov
lcall
jl
mov
xchg
mov
mov
sbb
jbe
dec
sti
or
inc
jl
incl
popf
int
iret
sbb
test
lods
int3
mulb
sbb
xor
pop
lcall
pop
aaa
rorb
or
ds
xor
push
loopne
test
inc
cmpsl
test
jle
push
jmp
out
dec
test
inc
add
pop
fs
pop
ljmp
push
addr16
xor
mov
push
jno
sub
fwait
rcrb
stc
scas
cs
orl
or
push
into
fdivrl
mov
lods
inc
iret
mov
add
addr16
mov
pop
fbstp
into
stos
aaa
pop
pusha
lock
mov
loopne
test
pop
dec
stos
inc
jge
push
jbe
enter
pop
jmp
outsl
inc
mov
mov
jmp
lcall
lods
lds
mov
dec
sub
aaa
dec
inc
dec
clc
jp
test
pushf
outsb
cmp
ret
test
lret
mov
sbb
dec
dec
sbb
into
shlb
push
inc
cli
aaa
inc
push
mov
adcb
fcomip
shll
mov
sbb
bound
xchg
xor
jmp
xchg
dec
insl
leave
fistpl
fcmovnu
shll
push
testl
push
movsb
lcall
fs
xor
test
stos
mov
pusha
push
cmp
mov
cmp
and
data16
xlat
dec
push
jmp
jo
sub
xchg
fisttpl
mov
or
jg
daa
jno
mov
loope
sar
jne
outsb
jmp
pop
mov
loop
jbe
stos
andb
sbb
add
scas
mov
jns
jecxz
test
add
je
add
mov
jp
add
es
mov
repz
xchg
jns
xchg
js
push
push
pop
cmp
inc
xchg
or
popa
pop
insl
xchg
jg
pushf
xchg
fdivs
xorl
sbbl
rcrb
xchg
mov
fnstenv
bound
xor
push
sbb
mov
jnp
cs
jae
mov
test
push
scas
and
push
rcr
xchg
es
pop
jg
add
push
movd
cmp
repnz
sahf
pop
cwtl
jge
mull
dec
and
int
imul
bound
outsl
sub
sbb
ds
xor
ljmp
inc
lret
repnz
ljmp
jno
icebp
out
dec
aaa
and
mov
push
or
ja
popf
lods
and
out
stc
lds
insl
sub
mov
jno
add
jns
arpl
hlt
xchg
sub
fsubs
aad
mov
sahf
push
jmp
lods
xchg
adc
and
loope
push
mov
xchg
or
scas
sbb
pop
bound
lds
sbb
insb
ret
in
push
lahf
loope
dec
and
dec
loopne
lods
add
aam
push
shll
data16
lret
inc
inc
cmpsl
jge
shrl
fiaddl
sub
mov
pop
gs
lret
jne
add
push
test
jp
xor
lods
ljmp
jae
orb
push
or
sbb
addb
sub
scas
pop
or
dec
in
pop
call
loopne
in
jno
pop
mov
arpl
fnstenv
mov
testl
mov
adc
sub
mov
mov
dec
ffree
imul
push
mov
andb
sbb
or
fnsave
and
push
push
jae
add
imul
sbb
cmp
jecxz
adc
jns
pusha
rcll
jns
aad
fisubl
xchg
mov
int
and
test
sbb
jbe
out
jo
sub
jae
xchg
pop
hlt
aaa
fldcw
push
inc
add
jmp
push
xlat
jl
pop
mov
imul
pop
adc
and
out
scas
xchg
adc
cmp
push
lret
out
or
cmp
dec
in
fwait
mov
mov
jno
sbb
test
leave
sahf
pusha
enter
test
ret
adcl
mov
dec
pop
and
dec
add
sbb
or
cmp
adc
ss
lret
and
push
jmp
out
hlt
mov
or
jg
pop
imul
sub
and
dec
loop
xchg
fdivrl
mov
pop
sub
jecxz
cltd
mov
xchg
cltd
roll
lods
mov
into
setle
aas
std
mov
push
or
push
sub
sub
fnstenv
jg
cmp
mov
adc
push
mov
pop
repnz
fstl
sub
add
in
ss
dec
xchg
xchg
cmpl
push
ret
movsb
stc
test
jle
cld
mov
cltd
add
jmp
and
movsl
popf
mov
mov
cltd
test
faddl
cwtl
cwtl
mov
xchg
sub
pop
xchg
fxch
push
sbb
es
or
adc
dec
dec
sub
mov
lret
cld
mov
fstp
stc
in
out
ja
dec
insl
xchg
jb
add
int
or
cmpsb
sbb
inc
popa
stos
fsts
and
xchg
mov
push
or
push
jmp
ds
push
cmpsl
sbb
loop
push
or
sbb
xor
and
inc
cmp
daa
arpl
inc
push
out
cld
push
sar
jnp
or
call
pop
or
repz
xchg
add
inc
shll
add
jno
fs
cltd
test
and
out
cmp
pushf
jbe
in
adc
push
jmp
dec
inc
jmp
xchg
xor
dec
xlat
xor
insb
inc
sti
inc
mov
mov
or
cmp
dec
test
fisttpl
mov
mov
xchg
fwait
inc
push
sub
clc
push
call
adc
cs
ja
mov
cmp
sub
dec
movsl
mov
jno
mov
mov
hlt
jmp
pushf
stos
mov
mov
inc
pop
inc
push
mov
fsubrs
fcmovu
jnp
mov
sbb
push
xchg
adc
dec
jae
mov
out
cmp
popa
in
lret
inc
adcb
gs
jmp
pop
or
das
sub
into
gs
cld
rcrl
pop
insb
lahf
xor
or
cmp
lds
push
in
push
lcall
cmc
pop
pop
adc
aas
sbb
addr16
cmp
cli
stos
ret
mov
jp
popf
neg
into
test
mov
dec
out
xchg
xchg
cwtl
push
sbb
mov
call
rolb
popl
mov
xor
gs
pop
call
jae
mov
xchg
sub
aad
cwtl
adc
ds
icebp
hlt
jge
jb
or
inc
nop
leave
fldenv
add
xchg
aaa
int3
lods
daa
cmp
push
sbbl
js
lahf
and
dec
icebp
insb
pushf
insb
das
mov
mov
or
push
mov
pop
xchg
or
cmp
leave
sub
sti
divl
sahf
pusha
sub
in
sub
dec
aas
pop
xlat
cli
insl
cmp
sbb
cmpsb
dec
mov
mov
out
pusha
sbbl
pcmpgtb
inc
push
and
xchg
ds
outsl
mov
jb
orl
mov
out
sti
cwtl
pushf
xor
sbb
leave
inc
test
or
mov
pop
outsb
add
xor
xchg
jge
jl
jl
scas
xchg
fisttpl
iret
adc
dec
xlat
dec
ret
pusha
into
mov
sarl
and
scas
les
jb
andl
loope
xlat
aaa
dec
pop
xor
stos
inc
sbb
call
xor
daa
imul
adc
add
inc
movsl
ja
add
jns
sub
js
cmp
iret
add
dec
and
or
adc
inc
mov
leave
arpl
mov
ljmp
add
pop
js
adc
mov
jo
xchg
xor
cmp
push
insl
sbb
and
rcrl
sbb
sub
xchg
aad
mov
bound
aam
fwait
insl
call
adc
dec
push
push
aad
mov
fs
xchg
xchg
pop
std
xchg
push
insb
leave
push
lods
fxch
out
pop
sbb
pusha
stc
lcall
ss
pushf
jge
lds
lods
and
adc
ljmp
sub
push
lret
scas
fsubrs
push
repz
mov
aam
subl
sti
and
sahf
pop
adc
mov
jmp
aaa
test
lods
xor
cmpsl
sbbb
or
orl
push
sub
insb
sub
mov
push
rcr
stos
jmp
push
cld
andl
repnz
repz
cmpsb
pushw
mov
mov
inc
fiaddl
andl
pop
fsubs
pop
cmpsb
cmp
stc
in
and
dec
xor
shr
je
push
insb
xlat
xchg
adc
add
mov
push
and
jg
push
or
adc
sbb
xchg
stos
xor
and
sub
sbb
fidivl
jnp
xor
aad
jl
pop
fwait
inc
fdivs
pop
lcall
and
jo
push
jae
inc
jecxz
int
or
pushf
andl
je
out
cmpsl
insb
mov
mov
mov
cwtl
adc
stc
test
jno
adc
or
push
pop
xchg
out
das
cmc
jp
aaa
add
daa
pop
pushf
cmp
jae
pop
scas
jne
andb
out
mov
adc
clc
dec
popf
cld
lcall
in
imul
inc
lods
mov
push
push
mov
fwait
mov
lret
cmp
push
push
in
xchg
inc
fsubs
mov
mov
mov
enter
std
or
inc
push
push
icebp
ss
add
dec
pop
int
popa
mov
sarb
sub
add
scas
call
mov
addl
adc
dec
andl
push
or
mov
pop
xchg
ror
je
mov
dec
gs
loop
fstl
and
test
sbb
repnz
sti
or
ret
dec
ss
lock
shlb
sbb
jmp
outsb
xor
xchg
outsl
xchg
pop
jne
push
cmp
jno
push
je
cmp
shll
mov
xchg
adc
push
dec
filds
hlt
cmp
fisttps
add
sbb
xor
push
mov
push
mov
int
cld
mov
mov
adc
jns
mov
addr16
jp
cmpsl
mov
fdivrl
jb
stos
leave
lcall
test
cli
sbb
fidivl
rdtsc
and
enter
jmp
sub
shlb
loopne
arpl
pop
mov
mov
vaddps
in
inc
repz
jbe
xor
in
pop
es
xchg
decb
hlt
mov
fcompl
popa
pushf
pop
lahf
cmpsb
or
gs
fwait
add
mov
push
mov
fisubl
mov
test
bound
test
mov
add
dec
mov
mov
push
push
sbb
xchg
push
adcl
divl
jmp
fnstcw
fwait
scas
mov
cmp
and
push
pusha
imul
dec
sbb
jge
mov
ror
xlat
repz
pop
jb
rcrl
push
mov
jns
add
jecxz
es
jg
test
nop
fistpll
push
test
or
ljmp
test
sbb
adc
and
lret
jl
aam
xchg
jnp
insl
mov
stos
xor
sti
shlb
decl
sbb
lret
inc
int
cltd
add
pushf
jno
js
lcall
test
out
add
loope
cwtl
xchg
xchg
repz
movsl
lret
mov
xor
cmp
sub
jp
pop
into
mov
jg
push
pop
ja
jl
hlt
ret
push
jecxz
out
lods
nop
mov
pavgw
pop
sbb
dec
les
enter
loope
push
push
jb
call
shll
imul
int
insl
int3
mov
int3
inc
rcll
cmpl
test
jbe
aas
xchg
dec
popf
enter
ss
push
lods
push
repnz
jbe
mov
mov
or
lods
insl
inc
outsb
mov
jmp
mov
push
mov
pop
jno
lds
jg
mov
mov
fbstp
mov
dec
jmp
fists
in
or
sbb
imul
ljmp
jl
mov
movsb
sub
mov
inc
and
pop
jnp
sub
add
mov
rcll
sbb
iret
add
mov
jmp
xor
cmpps
loopne
loop
or
mov
pop
mov
sbb
mov
dec
push
jge
sub
or
mov
pop
out
rcl
pusha
shrl
shr
sub
ret
jle
ret
mov
cmpsb
sbb
enter
js
cmp
dec
in
pop
pop
out
stos
ds
pop
jge
repnz
adc
inc
add
shlb
and
divl
xlat
in
or
leave
test
dec
in
inc
test
fisttpll
xchg
inc
pop
xor
sub
fs
out
xchg
dec
pop
out
clc
les
push
or
xor
sub
mov
negb
mov
add
les
dec
xor
cltd
in
or
dec
in
aam
dec
or
or
lret
push
xor
sub
mov
inc
mov
addb
test
push
lret
mov
icebp
test
push
outsl
insl
lret
pop
imul
rorb
xorb
push
dec
rolb
sbb
xchg
addl
cld
ror
jl
insl
add
mov
mov
cmp
fs
adc
fdivrl
pop
or
inc
push
jb
loop
popa
hlt
push
mov
daa
xlat
in
out
jge
dec
mov
fucomip
jg
jae
add
and
xchg
movsb
push
lods
push
ficoml
repz
gs
inc
repnz
test
fists
adc
add
mov
xor
call
inc
fs
pop
inc
pop
pminub
adc
xor
mov
int3
ret
mov
das
mov
stos
sbb
cvttps2pi
sarl
mov
push
ja
dec
ds
sbb
dec
adc
and
test
jae
xor
mov
aam
sbb
add
mov
push
movsl
pusha
push
ljmp
inc
syscall
call
xlat
mov
jns
pop
enter
rcll
jp
mov
pop
sbb
pusha
lcall
dec
cmp
inc
pop
adc
adcb
jno
xor
sub
mov
enter
mov
fcompl
xor
aas
sbb
jb
push
mov
insb
push
or
dec
cmp
jb
or
sub
fnstenv
pop
adcl
mov
xchg
in
lahf
mov
mov
dec
hlt
dec
xchg
xlat
pop
jmp
mov
jno
push
mov
mov
push
add
jg
pop
testb
xchg
jge
inc
icebp
jnp
and
add
pop
int
rorl
std
or
add
jne
test
addl
lods
inc
mov
jno
xchg
leave
fxch
sar
cmpsl
dec
fs
sub
fildll
ret
js
jns
mov
or
push
mov
pop
adc
inc
mov
mov
pop
bound
jecxz
lods
xorb
pushl
dec
sub
clc
push
fwait
or
xchg
dec
add
jle
data16
lahf
mov
in
mov
xor
verw
test
and
test
loop
sbbl
pop
fistpll
loop
xor
xor
mov
out
shlb
mov
adc
push
sub
inc
push
js
or
inc
dec
mov
fld
jb
outsb
mov
adc
ret
mov
xor
int
out
into
rcl
xor
mov
cmpsl
ficomps
push
add
ret
jp
lahf
jb
cmp
fldl
leave
cmp
aas
push
mov
orb
push
in
dec
int
mov
push
mov
jns
xor
in
test
je
pop
lea
ljmp
outsb
es
fadds
sub
fidivrl
movsl
std
je
sahf
fisubl
mov
fildll
int
mov
int
mov
pop
or
cmpsl
out
jl
stc
repz
dec
adc
mov
mov
mov
outsb
and
dec
ret
inc
add
cmp
inc
mov
sub
mov
enter
push
stc
rcr
ds
cld
inc
repz
rorb
xchg
pop
sub
mov
pop
dec
add
jg
mov
lods
mov
push
inc
cld
jl
rorb
xchg
fidivs
add
imul
imul
jmp
test
repnz
adc
inc
test
add
mov
hlt
or
shld
gs
outsb
dec
mov
jbe
or
ret
adc
in
leave
or
arpl
jae
stc
push
xchg
lds
cld
adc
dec
bound
cmpsb
sbb
sbb
sar
fsubrs
je
scas
in
push
fisubs
xchg
mov
stc
sub
or
dec
scas
sbb
pop
mov
arpl
lcall
cwtl
imul
push
dec
outsl
jne
in
repz
cmp
cmp
dec
and
mov
cwtl
or
aaa
adc
rcl
mov
mov
decb
movsl
stos
and
ja
lock
sbb
push
inc
sarl
dec
dec
pop
fwait
test
es
in
js
cld
xchg
ret
mov
mov
sub
ret
pop
inc
or
ss
mov
es
mov
pop
xchg
je
cmp
and
dec
xchg
aaa
fwait
repnz
aad
in
cmp
or
mov
xlat
mov
repz
fcoms
pop
das
push
or
xchg
mov
sub
sub
sub
sti
int
xchg
decl
dec
loope
cld
jle
push
and
lock
loop
mov
add
mov
push
sbb
xor
adc
add
pop
jmp
xor
arpl
andb
pop
rcrl
sub
mov
shr
inc
push
cwtl
inc
sub
dec
fmuls
pop
scas
sbb
inc
push
push
subb
js
loop
in
mov
add
int
lcall
and
rcll
mov
sbb
and
push
int
mov
movsl
jb
cwtl
aaa
jnp
cmpsl
pop
xchg
adc
movb
cmp
dec
scas
fiadds
and
aam
and
loop
ja
les
dec
popf
push
jnp
fnstcw
and
cltd
jl
mov
das
sti
mov
cwtl
pop
lods
cmp
sahf
cwtl
and
into
or
mov
jle
jp
lods
push
movsl
mov
jp
iret
sbb
jae
xchg
in
pop
lret
sbb
adc
mov
adc
in
stos
dec
cmp
mov
or
test
popf
sub
aaa
pop
or
dec
mov
jnp
dec
jecxz
popf
repnz
in
in
cmp
xchg
ja
inc
ror
or
xchg
jp
and
cltd
inc
sub
popf
out
in
pusha
aad
pop
das
out
rorl
bswap
sub
icebp
dec
pop
jp
or
xchg
in
sbb
and
dec
adc
pop
xchg
sub
loop
dec
es
sbb
push
dec
shr
ja
test
cwtl
jno
sarb
push
es
and
xchg
pop
lods
ret
ficompl
dec
popa
inc
iret
leave
sahf
jne
call
inc
cmp
insl
popa
out
in
iret
insl
jge
filds
ficoms
pop
add
cmc
sbb
mov
cmpsl
mov
fwait
nop
xor
push
popf
stos
fdivrl
push
xlat
aad
jne
xchg
cmpsb
jb
ljmp
inc
aam
pop
fs
dec
dec
and
in
data16
je
sbbl
loope
pusha
sbb
mov
popw
insl
sub
sbb
cmp
call
ret
addr16
dec
movsl
loopne
loope
add
fldcw
mov
jbe
mov
mov
jo
insl
in
aaa
mov
mov
sub
pop
jo
inc
testb
jecxz
push
xchg
mov
clc
push
fnstenv
xorl
xor
insb
add
push
arpl
inc
cmp
aas
push
popa
fdivs
sbb
inc
push
xchg
xor
cwtl
lret
fnstcw
push
stos
jp
adc
dec
fsubrs
les
idivb
divb
push
jnp
adc
std
mov
cmp
call
ds
vrsqrtps
and
and
ds
jnp
xlat
mov
hlt
mov
or
ds
add
das
cmp
xchg
xchg
sub
push
dec
and
cmp
in
nop
pop
push
push
ret
jle
mov
pop
imul
xchg
adc
pop
lock
aad
movsl
pop
cmc
push
ret
js
jl
fcompl
fwait
loop
add
jmp
les
pop
mov
in
xor
das
xor
pop
inc
ficoml
in
xor
sbb
fidivrs
push
shl
mov
popf
dec
rclb
lea
xor
aad
push
xchg
dec
fs
movsl
xchg
outsb
push
call
or
stos
mov
adc
cmp
mov
mov
vcmpps
cmpsl
out
adc
testb
subl
xchg
mov
pushf
fsubp
std
in
mov
out
fcmovb
icebp
outsb
adc
test
ja
cmp
bound
mov
arpl
test
shrl
hlt
dec
mov
movsb
icebp
jnp
loope
cmpsl
xchg
movnti
mov
push
faddp
xlat
and
and
xchg
scas
lahf
inc
enter
mov
mov
sbb
out
adcl
and
xor
int3
mov
clc
imul
popf
ficoms
stc
mov
mov
pushl
inc
mov
ljmp
bound
jne
pop
mov
inc
andb
test
lods
mov
xor
jmp
shrb
xor
out
cmc
loopne
pop
xor
cmp
mov
push
dec
jecxz
xchg
adc
jecxz
icebp
adc
mov
push
imul
xorl
dec
mov
and
and
cwtl
fnstcw
xchg
jg
repnz
cmp
out
mov
popf
rcll
stos
fs
jmp
leave
inc
add
insb
sub
es
xor
notl
add
mov
xchg
das
jge
popa
mov
subb
ja
push
repnz
mov
xchg
out
rcr
dec
movsl
lds
sub
int
mov
mov
sub
lret
jno
outsl
in
rcrl
cli
inc
arpl
pushf
dec
jb
rolb
and
loop
lahf
sub
xlat
mov
xchg
push
iret
mov
cmpsl
test
fistpll
popa
sbb
xchg
dec
inc
cltd
dec
insb
jo
inc
sub
mov
das
cltd
push
test
out
mov
push
push
pop
mov
jne
movsl
inc
push
adc
xchg
push
or
loop
mov
jmp
inc
or
push
dec
loope
add
xor
imul
fstpt
mov
aad
add
jb
sbb
mov
mov
jne
scas
add
mov
dec
xchg
out
xchg
fidivl
or
andb
cmp
inc
dec
pusha
pop
popf
mov
or
adc
xor
mov
outsb
sub
aaa
or
aam
jmp
adc
std
test
into
fcoml
sbb
insl
mov
jecxz
and
mov
or
arpl
lret
ss
xchg
add
mov
cltd
inc
mov
aam
clc
push
popf
jmp
jmp
or
pop
or
das
mov
rcll
rorb
out
mov
pop
jb
fmuls
movswl
lret
fisttpll
test
cmpsl
or
cmp
mov
sbb
call
in
adc
das
push
cltd
sahf
nop
sbb
loope
test
push
or
test
push
shl
aaa
pop
repnz
xchg
push
movsl
ret
aam
push
sub
ud1
popa
test
mov
rorb
jns
and
sub
adc
test
sbb
inc
mov
xchg
mov
mov
lock
mov
fistps
cwtl
push
lahf
pop
aas
es
jno
inc
cmp
sbb
dec
inc
adc
xchg
into
or
pavgb
add
jmp
sbb
jo
aas
icebp
sbb
loop
ljmp
sub
mov
iret
fcmovnb
outsl
xchg
add
addr16
xchg
mov
jge
mov
movsl
insl
inc
sbb
aad
adc
arpl
movsl
cld
push
js
dec
push
sub
jg
mov
sahf
sbb
cmp
sub
mov
add
icebp
push
ljmp
pop
jnp
sub
sahf
or
xchg
cmpsl
cmp
mov
hlt
inc
in
mov
mov
jbe
sbb
jmp
sbb
add
stos
iret
mov
dec
lcall
mov
pop
xor
mov
mov
or
pop
movsl
cs
sub
adc
sub
mov
sbb
push
add
nop
pcmpeqw
xchg
add
std
icebp
or
dec
push
and
loopne
bound
ret
insb
or
aam
lods
inc
lret
cmp
test
stc
insb
add
dec
mov
dec
adc
add
jne
lds
sti
mov
cmp
dec
mov
push
adc
out
je
test
pop
icebp
mov
or
mov
mov
jle
sbb
es
addr16
dec
fdivs
adc
pop
xor
mov
xchg
daa
lock
js
test
add
out
pushf
dec
mov
mov
inc
frstor
push
inc
int
les
iret
xor
sub
jnp
bound
sub
push
mov
out
outsb
pusha
mov
stos
xor
lret
pop
data16
mov
jbe
xchg
or
dec
hlt
std
dec
stos
cmp
out
or
xor
or
add
sub
lods
mov
out
mov
icebp
out
or
dec
repz
shlb
cltd
shr
orl
push
loop
inc
mov
push
pop
or
xchg
std
cld
add
jmp
out
add
mov
jns
mov
inc
pop
inc
push
lods
mov
lods
jb
imul
push
shl
jle
repz
lret
dec
pushf
sub
mov
loope
iret
fwait
popf
jecxz
ret
inc
xchg
jmp
dec
xor
sarb
inc
cwtl
shl
dec
notl
cmp
dec
cmp
inc
icebp
lods
jnp
sahf
jmp
bound
frstor
bound
in
and
xor
mov
push
in
addr16
jecxz
xor
in
loop
push
mov
fadds
pop
addr16
negb
scas
xlat
push
lds
and
add
dec
pop
jno
push
jne
push
mov
lods
pop
sbb
in
dec
sbb
jns
jl
out
jb
push
leave
push
xor
mov
cmc
lods
jle
dec
insl
dec
jb
hlt
lea
std
sahf
fxtract
aam
mov
lahf
jbe
jl
das
movsb
pop
imul
push
stos
mov
xchg
loopne
rclb
inc
mov
jp
mov
iret
shlb
fs
cmp
out
xor
and
jge
bound
daa
movsl
dec
sbb
jg
scas
inc
rorb
not
xor
nop
gs
addr16
add
jmp
in
ret
les
cs
sub
mov
inc
imul
and
imul
mov
arpl
stos
iret
jno
and
repnz
leave
scas
les
mov
ret
sbb
or
sbb
mov
cmc
dec
mov
adcb
out
dec
je
dec
and
pop
sub
push
int3
pop
inc
outsb
int
fists
ja
das
stos
bound
and
dec
pop
testb
xchg
fildll
movhps
and
int
std
pop
cs
push
pushf
mov
popl
sahf
mov
push
lds
sub
sub
xlat
mov
xchg
fdiv
sti
mov
mov
adc
mov
clc
push
sub
hlt
push
lcall
or
jns
out
pushf
xchg
out
push
aaa
lret
data16
jb
daa
sub
xor
mov
jle
in
lret
jns
aam
push
pushf
cmc
push
lds
cmp
push
inc
push
or
idiv
dec
cmp
fwait
sub
ror
fdivr
pusha
enter
sahf
push
popf
lods
fsubr
fidivrs
inc
jecxz
or
xor
icebp
fwait
dec
call
in
cmpsl
mov
sti
in
cmp
int
xchg
sti
shl
pop
sbb
das
dec
jl
scas
stos
pop
jbe
call
mov
push
ficoms
add
lret
test
test
scas
pop
fsubrp
pop
dec
nop
gs
cs
mov
in
mov
add
mov
or
pop
sarl
sub
mov
aad
sbb
mov
lret
hlt
mov
shrb
dec
loope
pushf
jge
call
int3
and
lods
icebp
and
mov
pop
adc
push
jl
lea
popa
std
fiadds
xchg
adc
sbb
test
inc
dec
lret
mov
insl
dec
movsb
mov
rorb
or
mov
xchg
fcmove
mov
cmp
inc
das
sahf
push
fisubrs
xor
jle
sbb
pop
into
xor
es
cli
aam
inc
fisubrs
mov
dec
mov
inc
add
dec
and
bound
inc
inc
or
rolb
push
aam
fnstenv
out
in
add
xchg
imul
fwait
scas
push
mov
xchg
insb
jb
aad
fcompl
mov
add
dec
enter
ret
cld
aaa
jne
xchg
pusha
les
ret
iret
ret
fcomps
sbb
imul
cmp
cs
fstpl
add
push
mov
jp
ljmp
loopne
fwait
dec
sahf
inc
fisubl
mov
call
ficoml
pop
jbe
sub
insl
push
rclb
dec
dec
xchg
out
fs
cmp
push
mov
insl
scas
xchg
and
inc
mov
mull
repz
cli
push
call
dec
popa
xor
and
das
das
mov
or
inc
mulb
in
fnstenv
lock
or
loope
int3
gs
testb
dec
lret
jp
aam
outsb
dec
addr16
mov
fwait
or
std
xor
adc
mov
xorb
loope
fpatan
filds
jae
inc
int3
movsl
addr16
cmp
stc
mov
lds
pop
xchg
mov
lods
aam
dec
loopne
jp
jp
mov
loope
or
pop
cmpsb
pusha
xor
sti
loopne
jns
aad
push
addr16
cmpsb
jbe
fsubrs
pop
push
adc
jnp
out
mov
outsb
mov
dec
sbb
mov
scas
int
in
sbb
dec
push
mov
cmp
mov
push
scas
jne
jl
rclb
dec
mov
aad
jae
add
lods
rcl
lea
xchg
dec
sub
leave
xlat
outsl
sti
jo
fstpt
ret
or
outsb
adc
mov
xlat
mov
mov
dec
imull
xchg
jmp
shll
leave
inc
adc
dec
mov
aas
sub
pop
insb
insl
les
mov
in
dec
push
jmp
js
dec
sbbl
and
and
ss
fiadds
cmp
dec
jmp
mov
sbb
ret
out
sahf
or
jno
repnz
xor
add
test
xchg
mov
sahf
out
mov
in
jb
push
cmp
pop
xchg
pop
push
mov
sub
jge
out
ja
or
std
add
mov
lret
cld
rcl
addr16
sbb
mov
rcrb
adcl
cli
mov
cmp
add
xchg
jae
xor
outsl
pop
loop
imul
add
test
movsl
cmp
aaa
int3
xchg
push
lods
out
aad
sarb
cmp
insl
jecxz
xchg
dec
xchg
inc
mov
xor
lahf
sbbb
sbb
push
fcomip
repnz
enter
pusha
dec
dec
mov
mov
sbb
in
dec
mov
mov
fcomi
jge
dec
adc
xchg
in
jne
subl
mov
inc
dec
sub
mov
jge
jmp
push
icebp
je
stos
jne
arpl
fdivrs
or
lret
jp
dec
or
ficomps
xchg
call
int
clc
sti
pop
xlat
cmp
xor
adc
jb
pop
test
shr
jmp
mov
sahf
adc
arpl
lea
clc
sahf
inc
shr
jnp
lock
sbb
mov
inc
fidivl
repnz
jg
lea
fwait
mov
fsubrs
pop
xor
mov
in
sub
inc
push
add
mov
mov
inc
xor
add
out
pop
and
or
dec
and
add
lods
in
or
fsubr
fstpt
ds
stc
popl
andb
mov
stos
js
pop
and
adc
fnstenv
and
jg
ja
xchg
addr16
mov
push
sub
mov
and
xor
sbb
nop
mov
or
and
mov
pusha
js
dec
andl
cmc
and
xchg
add
mov
xchg
idivl
popl
lret
jecxz
out
shlb
jns
outsb
cmpsl
xor
inc
icebp
push
in
sub
inc
sub
jle
cmovnp
out
cmc
mov
icebp
xchg
sub
xlat
inc
loopne
test
jb
in
addr16
xchg
fwait
push
push
arpl
adc
fstl
call
mov
in
das
scas
jns
ljmp
jbe
jge
pop
xor
adc
xchg
cmp
cmp
inc
dec
out
mov
lahf
loopne
or
dec
shlb
int3
pop
fldcw
push
lcall
sub
and
mov
jge
xor
mov
inc
and
test
and
fstl
push
inc
mov
mov
in
lea
push
in
test
addr16
push
mov
sub
vcomiss
mov
scas
pop
icebp
pushf
sub
pop
sub
out
fwait
jmp
stc
lahf
mov
pop
pop
lds
lods
xchg
outsb
cmp
stos
pop
testb
mov
scas
jp
lret
jns
arpl
push
ljmp
scas
cmp
rep
lds
mov
mov
cmp
test
push
adc
addr16
inc
icebp
enter
lret
cmp
inc
es
sbb
lods
push
cmp
cld
sub
or
cs
popf
ds
call
push
test
mov
jge
fidivl
mov
cltd
push
mov
ret
cmpsl
xor
dec
add
xor
test
and
fdivl
mov
sbb
shlb
in
and
icebp
movsl
aaa
daa
mov
mov
pop
and
clc
jge
loope
sbb
xchg
test
daa
cmp
addb
jl
lock
dec
sti
stos
xchg
sti
pop
jecxz
clc
adc
fdivl
imul
inc
mov
add
or
pop
jp
lcall
cmp
and
adc
rcll
push
sbb
inc
xor
push
jmp
jmp
es
jb
or
fsts
lcall
popa
clc
pusha
push
jne
pop
je
mov
jl
adc
xlat
jmp
aad
mov
push
inc
ja
xchg
mov
pusha
adc
lahf
xchg
std
xchg
mov
ds
repz
dec
addr16
cld
aad
les
ret
lret
loope
nop
sbb
add
add
jbe
cli
test
int3
and
adc
adc
in
and
add
mov
inc
fs
jbe
pop
call
fmul
mov
out
sarb
xor
fs
pop
shll
out
mov
idivb
or
push
ret
mov
sti
inc
jg
pop
es
fdivrs
xor
enter
pop
dec
xor
cmp
fs
adc
and
lods
push
movsl
negl
mov
sbb
xchg
pop
lods
out
add
sbb
mov
pop
or
inc
and
fcoml
sbb
pop
leave
arpl
mov
sbb
rcl
gs
and
add
imul
popf
push
jmp
sub
sbb
add
test
dec
cmp
mov
jp
inc
xlat
inc
jle
xor
in
movsl
stos
icebp
pop
jae
pop
out
cmc
push
or
push
and
inc
bndstx
sub
test
push
jge,pn
sbb
jns
mov
lret
and
jecxz
out
mov
inc
xchg
sbb
mov
mov
scas
loopne
loopne
inc
push
std
fimuls
mov
rep
xchg
push
pop
imul
sub
or
les
sbb
add
jg
mov
or
or
jmp
test
popf
aam
js
mov
jbe
out
daa
xchg
bound
push
jmp
insl
adc
ficomps
jge
adcb
pop
sbb
insl
sahf
cmp
inc
push
pop
scas
pushf
das
or
in
sub
sbb
add
cmp
loop
bnd
pop
imul
sub
aad
dec
jl
dec
cmpsl
sbb
in
xchg
sbb
jp
lret
insb
sub
jb
xchg
lret
lret
iret
decb
jmp
xor
hlt
push
mov
and
in
cli
sbb
xchg
cli
sarb
mov
sbb
mov
loopne
enterw
jmp
lret
icebp
jno
mov
or
es
aad
and
sub
mov
mov
inc
and
mov
adc
icebp
pop
lret
xchg
sbb
int3
mov
int
loop
aam
add
test
loopne
dec
lret
jnp
es
fiaddl
stos
loopne
xor
call
mov
xor
jmp
es
test
out
xchg
je
inc
jg
and
pop
jo
cmp
adc
add
jp
ss
mulb
mov
and
cmpsl
inc
xor
dec
arpl
pop
test
into
gs
jno
mov
stc
cltd
test
sbb
rcrb
test
and
jge
stos
cmc
cld
fmul
das
dec
faddl
xchg
jp
int
mov
mov
jnp
movzbl
dec
loop
les
xor
xorl
adc
adc
aad
mov
jns
jnp
sbb
push
shll
xchg
fldt
or
popf
adc
xchg
adc
rcrl
lods
pop
negb
sub
fprem
decl
ss
mov
rclb
xor
jbe
mov
test
inc
lcall
and
lock
out
std
adc
inc
cmp
nop
dec
dec
aad
inc
xchg
repnz
repz
in
aad
loope
rcrl
sub
mov
fcoml
cmp
scas
js
int
cld
mov
adc
mov
and
pop
sub
mov
jb
in
mov
pushf
adc
pusha
leave
mov
cmp
repz
loop
and
and
sti
je
sub
inc
pop
fbstp
cmc
inc
adc
adc
mov
xor
push
sbb
inc
call
and
cld
pop
repz
stos
and
xor
push
mov
out
lods
sub
ret
das
cmp
negl
test
movsb
jmp
pop
push
lods
xchg
adc
jne
pop
imul
jbe
push
je
loope
add
push
adc
je
or
imul
mov
cwtl
push
inc
add
fnsave
pushl
sub
mov
push
faddl
and
push
and
outsl
push
jno
inc
call
or
popa
cmpl
jnp
or
xchg
and
xlat
sub
clc
popa
cld
ret
pop
sbb
ret
xor
mov
leave
js
push
popf
aaa
mov
xchg
push
inc
inc
push
sub
pusha
pusha
das
cld
shr
nop
cmpsb
dec
lcall
sub
mov
icebp
and
lret
outsb
xor
xchg
add
pop
fnsave
loop
push
repnz
enter
sub
scas
movsl
loopne
lahf
inc
and
mov
pushf
into
xor
ja
cmpsw
jns
pop
xor
insb
mov
pop
ret
jbe
andb
jmp
and
mov
xor
int3
out
jnp
ds
fisttpll
pop
push
subl
lock
mov
adc
fcoml
xor
aad
mov
xor
das
repnz
mov
hlt
or
push
aas
or
cmpsb
xlat
mov
xor
stc
and
and
xor
stos
mov
mov
mov
push
push
and
lds
mov
mov
fnstsw
sub
cmp
adc
rclb
in
decl
sbb
cs
loope
adc
in
sub
leave
mov
int
stos
cmpsb
mov
inc
es
addr16
imul
out
cli
inc
inc
les
enter
lock
bound
jo
mov
sahf
sub
stc
daa
jne
loopne
cmp
nop
ret
push
movsl
hlt
mov
loope
push
inc
in
inc
add
pop
data16
iret
inc
pop
mov
icebp
and
rcrb
push
pop
cmpsl
in
adcb
test
mov
dec
mov
mov
bound
fdivrl
mov
fsts
jp,pt
cltd
xor
push
push
adc
cmpsb
popa
pop
arpl
rcll
aad
fnstenv
idivb
int3
pop
push
repnz
jg
aaa
cmp
xchg
mov
push
or
test
and
and
jbe
outsl
jp
mov
add
mov
sahf
add
push
xchg
in
xchg
cmp
mov
aam
ds
dec
js
faddl
sbb
js
loope
adc
movsl
lret
or
mov
or
or
push
mov
push
add
mov
pop
rcrl
pop
leavew
jns
push
iret
out
push
and
mov
jnp
inc
fdivr
addr16
rclb
mov
adc
push
test
or
stc
ds
js
jae
movsb
iret
js
jae
mov
es
mov
out
repnz
dec
mov
insb
insb
xor
push
mov
icebp
std
inc
aam
mov
sarl
setp
dec
cmp
shrb
lret
adcl
in
jb
jmp
inc
sbb
mov
fsubr
out
out
cmp
and
pop
jno
add
inc
mov
sbbb
into
lret
push
loop
dec
stos
xchg
sahf
mov
fcoml
lods
or
sub
xchg
pop
mov
test
mov
std
mov
mov
pusha
adc
es
imul
dec
inc
mov
xor
push
pop
mov
or
mov
loope
jle
push
mov
subb
jo
lods
mov
push
std
or
dec
and
cmpsb
cmp
movsl
mov
xchg
xchg
sub
mov
stos
xchg
xor
es
mov
and
dec
push
or
enter
cs
mov
mov
int
and
rcrl
divl
hlt
shlb
lods
jo
or
dec
es
test
jg
leave
data16
das
add
test
sub
mov
xchg
out
call
jmp
push
mov
cmpsl
fidivrl
and
out
jbe
push
das
push
sbb
repnz
mov
das
scas
fldt
jb
pusha
and
fs
movsb
add
pop
ljmp
sbb
jae
mov
out
bound
stos
inc
scas
outsl
testl
inc
mov
scas
neg
es
pushf
push
mov
pop
jae
movsb
sbb
imul
mov
cld
mov
or
sbb
shlb
mov
jb
jle
test
sbb
addr16
cmp
jne
pop
xchg
sub
inc
pop
repz
mov
or
nop
mov
pop
shrb
sub
xchg
daa
dec
rcrb
ss
testb
adc
fwait
mov
inc
fsub
xor
aam
jns
lret
sahf
and
inc
cli
mov
or
pop
dec
rorl
sarl
inc
xor
xor
aad
push
dec
ja
sbb
dec
gs
notb
inc
idivl
push
in
mov
and
push
or
roll
jb
jle
movsl
mov
mov
or
sbb
cmp
lods
jecxz
or
mov
stc
lahf
call
orb
cmp
hlt
bnd
ja
pop
pop
xchg
jp
jecxz
pop
loopne
js
adc
jno
add
mov
xchg
dec
xor
push
jecxz
movsl
repnz
dec
and
adc
add
jg
xor
cmpb
sbb
pop
pop
cmc
mov
xor
pushf
gs
rcrb
cmpsl
xchg
loope
inc
decl
or
lods
inc
add
cmp
fcomps
in
bound
push
mov
adc
ret
xor
popw
and
or
cmp
out
in
icebp
pop
mov
mov
mov
or
dec
inc
mov
sbbb
add
fs
ja
mov
fwait
or
add
das
sbb
bound
adcb
hlt
xchg
push
ss
mov
cltd
jbe
mov
ljmp
mov
xor
dec
ja
sbbb
push
sbb
mov
lahf
jb
sbb
rcrb
push
xor
pop
lock
cmpsl
xchg
iret
dec
pop
add
mov
or
xchg
daa
dec
add
inc
shrb
aas
insl
xchg
mov
leave
push
dec
and
sarl
and
jle
jne
adc
xor
addr16
mov
mov
lret
sub
stc
push
std
jo
sub
pop
xor
movsl
dec
mov
loopne
rcl
ret
call
ja
inc
and
daa
jl
dec
jnp
xor
pusha
fstpt
xchg
sub
cltd
test
push
dec
pop
mov
ss
cmp
mov
xchg
fidivrs
xchg
into
and
sbb
pop
das
stos
xorl
mov
fsubr
add
jne
sub
das
xchg
xor
jmp
lret
xor
shrb
lcall
sahf
jle
and
outsb
sub
fs
sbb
ficompl
adc
jge
lock
fs
rorb
dec
xchg
aam
mov
xchg
loop
loopne
mov
xchg
push
jns
inc
cs
add
mov
xchg
sahf
nop
imul
xor
cli
mov
shrl
int
stos
cli
inc
sub
jo
jg
cltd
xor
lahf
int
adc
lret
fwait
shrl
daa
lret
jne
enter
cmp
js
repnz
sub
popf
std
ret
xchg
dec
mov
mov
pusha
push
daa
mov
lret
rolb
sbbl
sbb
add
mov
pushf
push
fimull
lcall
aas
pop
negl
mov
cmpsb
idivl
inc
adc
jb
xor
jle
repz
bound
cwtl
inc
push
insl
in
cmc
pop
imul
xchg
imul
das
movsb
pusha
xchg
inc
mov
fistpl
int3
fwait
jo
icebp
addr16
and
mov
mov
adc
dec
int
push
leave
out
addr16
pusha
loop
push
test
mov
in
or
mov
inc
outsl
cmp
or
sbbl
lock
stos
pushf
push
xchg
pop
xor
lods
inc
aad
cmp
mov
jbe
movsb
in
cld
movsb
insl
aam
cli
mov
mov
lahf
loope
add
xor
dec
jp
repz
cmpsb
insl
sub
das
jecxz
hlt
mov
repnz
out
xor
dec
pop
add
cmp
scas
fisubrs
xor
mov
xchg
mov
fbld
inc
or
insb
adc
xchg
je
lds
cld
and
xor
dec
fwait
mov
dec
mov
mov
cmp
dec
das
adc
lea
fstpt
push
arpl
mov
adc
imul
xchg
mov
pusha
mov
push
mov
push
dec
fwait
dec
mov
insl
add
cmp
addr16
and
pop
jb
push
sahf
ret
jno
mov
and
fcmovnbe
jp
int3
jae
push
mov
push
int
sti
mov
mov
push
mov
lods
push
mul
shrb
jns
loope
jg
mov
stc
insb
lret
aaa
lret
sbb
mov
jns
outsl
mov
adc
push
jl
cmpl
mov
jae
inc
adc
inc
xor
sub
int
mov
testl
jp
imul
sbb
andl
push
xchg
pop
std
jmp
sbbb
mov
mov
cmc
not
or
cmp
jge
loope
mov
pop
xchg
or
xor
inc
pop
sub
xorb
scas
xor
fdivs
jle
inc
fs
lret
and
cs
pop
sbb
inc
dec
pop
insb
add
sahf
stos
cmp
push
out
imul
int3
sbb
xchg
fwait
sti
cli
mov
adc
bound
outsb
inc
push
jb
rcrl
loop
nop
push
mov
leave
sahf
lods
divb
imul
int3
xor
cmpsb
lock
jle
xor
outsb
clc
xor
incb
adc
push
dec
cmp
out
xchg
aaa
add
add
cwtl
das
push
sub
inc
dec
fwait
pop
mov
add
ffree
mov
push
pop
xlat
push
mov
add
orb
icebp
test
xchg
test
in
xchg
or
xchg
stc
pop
push
loop
sub
dec
aad
sbbl
adc
adc
loopne
call
and
leave
mov
fwait
cmp
xchg
psubb
mov
jno
xchg
movsb
xchg
push
sub
push
aaa
cwtl
call
pop
push
cwtl
pop
cli
pop
and
mov
test
add
subl
outsb
ret
mov
repz
pop
jp
nop
adc
mov
sub
pushf
jnp
data16
fucomp
dec
sysexit
lea
jg
fisubl
push
test
fcmovb
les
mov
andb
pop
imul
loopne
stc
gs
fisubs
and
std
das
aad
js
push
inc
push
aaa
rorl
addr16
adc
mov
js
or
lret
dec
mov
out
cmpl
inc
pushf
icebp
jne
add
popf
xchg
jge
push
mov
movsl
das
push
jg
subb
js
push
rcr
sub
lret
jnp
mov
mov
arpl
dec
inc
mov
gs
sbb
jb
pop
cmp
dec
mov
pop
cs
dec
loope
or
cli
push
imul
out
xchg
xchg
pusha
or
sub
add
sbb
pop
cmc
icebp
dec
adc
popa
xchg
jl
sbb
fwait
cmpsl
sub
sub
sarb
pop
push
jns
adc
lret
imul
pop
insb
jo
sahf
lods
mulb
arpl
and
lahf
lea
out
test
cs
ret
pop
rorb
add
xchg
test
gs
ret
leave
sub
ret
pop
movsl
jno
bound
ret
int
insl
xlat
mov
iret
xor
mov
xor
das
pop
stc
xchg
js
fwait
daa
mov
mov
cmp
dec
xchg
adc
push
cltd
shrl
clc
xchg
add
ss
dec
test
mov
orb
inc
mov
xor
cmp
fdiv
sahf
mov
jno
sub
mov
std
loopne
cmp
and
inc
inc
xor
pop
bnd
dec
out
dec
or
push
inc
insb
mov
mov
shrl
push
mov
mov
xorb
subps
in
push
adc
jmp
cmp
repnz
push
add
sub
jo
fnstenv
add
sbb
adc
lahf
cmp
sti
jp
push
sbb
mov
cwtl
insb
mov
jg
push
je
les
imul
pusha
or
daa
push
incb
das
stc
addr16
les
sti
mov
outsl
rcrl
out
test
shlb
cld
push
mov
adc
jl
leave
repz
and
or
jns
jae
and
loopne
int
cmpsl
dec
pop
cli
daa
inc
cmp
arpl
dec
in
sbb
xchg
andb
push
loope
rclb
jle
and
loope
bound
or
xchg
xchg
fisttpll
mov
mov
test
mov
cmp
ja
mov
ljmp
daa
pop
mov
clc
xchg
je
fdivr
pop
lock
jbe
aas
cmpsl
and
mov
sbb
dec
dec
add
out
fcoml
mov
mov
xchg
push
shrb
adc
iret
loope
adcb
cmp
in
rep
mov
pop
pop
dec
cmp
add
mov
xchg
aaa
testl
orb
idivb
sbb
sub
add
xchg
push
xchg
push
push
mov
cmpsl
mov
enter
push
out
es
imulb
mov
out
xchg
data16
lret
out
pop
fsqrt
mov
push
dec
xor
inc
mov
fbstp
or
pop
cmp
pop
inc
repnz
std
ds
stos
into
add
jbe
clc
shr
pop
popf
pop
add
in
daa
dec
pusha
pop
mov
adc
mov
sbb
imul
push
xchg
daa
iret
push
or
and
inc
stos
sbb
xchg
mov
fidivl
shlb
sub
ss
leave
or
add
mov
dec
leave
xchg
mov
push
push
dec
in
gs
sbb
call
mov
std
jo
int
arpl
rclb
sub
pusha
add
mov
jle
jbe
sbb
or
mov
loopne
xchg
mov
pop
and
sub
cs
shrb
into
movsb
add
push
inc
out
xor
mov
cmpsl
or
out
insb
push
cmp
jmp
shl
in
jp
pop
mov
mov
mov
add
insl
lods
out
int
in
sub
xchg
stos
loopne
mov
jg
and
out
mov
inc
dec
jne
scas
jo
fwait
shlb
add
push
mov
mov
push
in
adc
mov
mov
repnz
popa
adc
out
or
out
jnp
mov
pop
dec
shrl
pusha
add
sbb
xchg
adc
adc
cmp
add
sbb
int3
ja
loopne
jbe
fsubrs
jmp
inc
pusha
data16
and
into
xor
dec
hlt
inc
mov
das
sub
rorb
adc
xor
jmp
fs
add
pop
cmp
mov
inc
jo
repnz
jg
jmp
pop
adc
outsb
xlat
mov
sbb
sbb
jmp
cmp
popf
mov
pop
mov
sub
push
mov
xchg
lods
mov
call
lret
mov
stos
cmp
pop
xor
push
pop
testb
inc
fists
lret
sbbb
stos
push
pmulhw
jns
jne
pop
or
das
cmpsb
cmp
idivb
cmpsb
inc
rclb
movsb
sbb
mov
ficoms
mov
dec
in
mov
sahf
jb
jl
mov
dec
cmp
outsb
mov
test
fdivrs
les
adc
imul
sub
call
popa
les
ljmp
cmp
cmp
test
lcall
xchg
sbb
popf
and
notl
dec
std
jmp
in
in
nop
ss
hlt
cmc
lcall
gs
int3
and
aad
sub
ljmp
pop
mov
mov
jmp
and
repnz
mov
push
inc
lcall
dec
jnp,pt
and
or
in
inc
cmp
pop
test
mov
ffreep
cmp
repnz
mov
push
icebp
xor
lret
lock
mov
sbb
adc
aam
out
mov
push
bound
xor
ja
rorb
js
mov
orb
cmp
test
cs
hlt
scas
mov
outsl
push
sub
xor
fsubrl
mov
fxch
xor
jmp
or
ss
lahf
dec
jmp
fldcw
sbb
mov
jno
push
mov
fisubl
jo
mov
mov
es
popf
pop
or
call
in
cmp
or
sub
inc
imul
pushf
dec
inc
jmp
lcall
popa
mov
pusha
call
mov
mov
in
loopne
sbb
mov
inc
popf
push
adc
sbb
rcll
insl
or
or
jb
fistps
pop
mov
aad
sbb
dec
mov
dec
loopne
lret
xor
xor
cmp
in
inc
pop
sbb
mov
mov
cwtl
in
out
xor
mov
cmpsl
jo
aad
out
mov
fisttps
xor
test
add
nop
sub
mov
jne
scas
inc
pop
in
mov
push
and
pop
ds
inc
decl
cmp
test
scas
lret
lret
das
sub
lods
hlt
inc
out
sbb
mov
cmc
push
fldenv
int
mov
enter
pop
mov
adc
sub
xor
movsb
and
xchg
shl
adc
imulb
sub
mov
adc
int
dec
mov
mov
or
add
loopne
add
mov
fs
ljmp
fdivrl
out
sahf
loop
insl
fdivl
or
lcall
in
xchg
pop
lds
and
xor
dec
dec
loopne
aaa
and
xchg
sub
jp
cmp
xlat
sub
cld
push
stc
negl
xor
daa
cli
or
or
dec
cmp
aad
dec
or
dec
ss
mov
aas
mov
push
out
mov
outsb
inc
ja
scas
cmp
ret
jge
xchg
adc
sbb
dec
stc
or
mov
std
out
jmp
mov
insb
fwait
insb
push
leave
pusha
mov
movlps
outsb
fcomps
outsb
mov
aas
cmpsb
and
pop
repz
fwait
adc
mov
cwtl
mov
fsubrl
movsl
cmp
jge
in
mov
in
inc
int3
les
insb
push
mov
cmp
fcmovbe
aas
pop
loope
dec
pusha
or
and
insl
aaa
fstl
fs
jmp
shrl
xchg
repz
pop
mov
dec
rcl
cli
lods
test
xlat
push
ret
mov
push
scas
mov
and
push
pop
and
lds
cmpsb
xchg
push
into
lds
loop
push
mov
lahf
push
inc
add
mov
sbb
mov
sbb
fdivl
mov
outsb
cli
pop
fdivl
orl
mov
je
cmp
outsl
mov
enter
addb
cmp
sub
mov
dec
stos
in
add
xor
cmp
das
gs
jnp
scas
and
fwait
mov
inc
pop
add
adc
sbb
xor
cs
cmovle
jg
fdivs
out
dec
test
dec
sbb
push
push
mov
cmpsl
and
mov
mov
call
int3
roll
xchg
fnstsw
insl
mov
pop
in
adc
ds
insb
ja
dec
sbb
fwait
imul
andl
cmp
dec
mov
popa
sub
ljmp
aas
imul
pusha
and
xchg
int
stc
jne
xlat
pop
mov
in
int
std
lcall
in
fwait
or
pop
ds
in
fwait
cltd
cmp
repz
outsl
es
mov
lea
loopne
mov
adc
xchg
push
cmpsl
mov
cld
pop
imul
sub
cmp
loopne
pop
xchg
enter
aad
shlb
cltd
add
icebp
inc
sbb
push
clc
jp
mov
cmp
stos
push
aam
testb
dec
or
cli
outsl
push
cwtl
mov
nop
lcall
addl
and
pushf
stc
aad
xor
push
mov
cmpsl
mov
or
jbe
je
mov
mov
imul
test
rcl
test
dec
mov
out
test
jle
sbb
or
add
push
xor
test
xlat
sub
ffreep
lds
sbb
adc
or
cli
jno
aaa
mov
mov
int
cltd
xor
fs
mov
repnz
xor
ja
or
inc
mov
inc
imul
loopne
rclb
mov
or
adc
repnz
mov
in
xchg
xchg
add
gs
cs
gs
add
mov
mov
push
cs
inc
fs
popa
pop
out
into
sbb
int3
sarl
push
sbb
adc
add
cmpsl
xor
clc
nopl
mov
pop
mov
sub
lods
sub
and
movd
int3
xchg
fs
inc
sbb
negb
call
push
dec
cmc
add
dec
movsl
bound
adc
dec
pusha
testl
movsl
popf
push
xlat
pop
insb
adc
ds
sbb
lock
cld
push
cld
mov
sbb
stc
stc
test
push
outsb
mov
decb
and
push
sub
cmp
cmp
lea
std
push
sbb
jge
lods
mov
pushf
adc
cmpsb
inc
xchg
fcoml
and
outsl
repnz
out
push
into
call
and
int
stos
es
lcall
cld
imul
int3
pop
pop
jecxz
pop
xchg
push
loopne
lods
xor
and
dec
dec
js
dec
mov
ljmp
xor
data16
mov
lret
loop
push
and
fidivl
je
inc
imul
xchg
pop
jo
push
mov
cli
imul
notb
mov
xchg
out
cmc
or
dec
inc
push
push
cli
cmp
push
aaa
push
sti
sub
cmpsl
mov
imul
mov
xchg
aad
mov
mov
aas
rcl
nop
in
adcb
add
xchg
js
mov
ret
pop
sbb
mov
sub
in
inc
psubusw
and
pavgw
add
pop
fwait
imul
sbb
add
cmovp
movsl
dec
xchg
test
dec
lret
mov
andb
dec
xchg
dec
mov
sbb
enter
push
pop
cmp
jbe
mov
cmp
push
imulb
fistps
xchg
cmpsb
mov
cld
mov
pop
dec
mov
mov
rorl
test
outsb
out
push
outsl
repz
cmp
mov
pop
int
add
icebp
icebp
inc
imul
xor
push
mov
dec
and
int3
dec
jp
dec
cmp
jmp
rclb
loop
jns
outsl
lods
inc
sbb
xor
popf
jg
inc
es
adc
xor
popf
jne
dec
in
push
cmp
xchg
push
mov
cmp
dec
out
scas
lret
sub
ficomps
adc
sbb
dec
hlt
mov
in
icebp
mov
out
rcrl
mov
or
insl
cltd
test
and
xlat
pop
cmp
xchg
push
pop
mov
mov
loopne
pop
daa
mov
rol
cmp
insb
xchg
push
es
push
jae
sub
inc
shrl
out
fidivrs
lds
leave
insb
mov
sub
push
mov
loop
stc
push
test
push
shrb
sub
mov
sub
mov
testb
and
data16
fstl
pop
mov
aam
mov
cwtl
adc
leave
movsl
sbb
sub
mov
jecxz
push
or
rclb
mov
jp
shrb
xchg
push
roll
pop
lock
pop
test
cmp
pushf
std
push
mov
pop
xchg
shll
in
mov
insb
jle
xchg
cmp
out
shrl
lret
iret
sub
jb
repz
shrb
push
cli
pushf
mov
adc
cmpsl
fsubrl
popf
or
and
jnp
ja
call
mov
arpl
pop
or
subl
xchg
mov
montmul
cmpsb
mov
hlt
push
addl
mov
bound
lock
cltd
les
rcrl
icebp
in
popf
xor
xchg
aaa
je
mov
ss
aad
and
scas
and
ficoml
push
push
dec
fisubrs
xchg
xor
xchg
mov
cmp
mov
loopne
scas
scas
notl
addr16
xor
cmp
push
call
je
ljmp
sbb
fistl
pop
inc
sti
pop
mov
sub
mov
fistpl
clc
mov
jo
xor
mov
inc
pop
sbb
andb
push
cmc
andl
rcl
shr
push
pop
shll
scas
jno
test
inc
lods
xor
dec
shll
mov
cmc
aad
push
xchg
loop
test
out
out
xor
mov
xchg
sub
call
xor
test
add
test
ljmp
mov
xor
daa
jns
ja
stc
lea
iret
inc
arpl
fcmovnu
add
ds
sub
mov
mov
push
popf
ret
bound
cmpsb
rcl
in
push
and
adc
ret
lahf
shrb
lahf
push
icebp
lret
lods
jb
push
and
mov
inc
leave
fmull
and
les
dec
mov
es
in
inc
fxch
push
call
fwait
test
push
les
push
cmp
test
into
xor
mov
mov
inc
test
shll
pop
push
outsb
int3
push
adc
dec
filds
jl
movsb
insb
lcall
cmp
pop
rorb
jne
lcall
popl
inc
mov
xchg
outsl
xor
lea
jg
and
aad
inc
cmp
pop
icebp
iret
cmp
push
dec
loope
popa
ljmp
mov
subl
xchg
xor
jns
and
sub
jge
inc
arpl
sbb
jo
xor
test
adc
lret
and
je
adc
ret
mov
call
xlat
loopne
aas
lds
mov
stc
pop
repz
test
inc
fs
lock
xor
aas
xchg
aas
scas
mov
mov
je
jb
or
mov
and
pop
ljmp
mov
mov
lahf
cs
xchg
push
xor
xor
push
push
mov
push
daa
imul
int3
stc
push
dec
mov
mov
icebp
pop
rcrb
fsubrs
xchg
aas
xchg
call
dec
xor
add
cmc
cmp
adc
push
dec
and
jne
add
push
and
or
lods
in
or
jns
pop
cltd
sub
cmp
xor
sbb
lea
cmc
jo
outsb
sub
scas
cmp
adc
lret
inc
hlt
push
in
and
into
pop
bound
in
ljmp
and
pop
push
sbb
lret
pop
xchg
add
aas
scas
sbb
shrb
pop
adc
bound
les
das
shrb
add
mov
jbe
push
outsl
inc
push
xchg
lret
aas
loop
xor
lahf
add
outsl
sbb
push
aad
sub
jno
mov
mov
jmp
mov
iret
scas
subl
lcall
scas
sbb
push
jp
dec
cmp
arpl
les
popf
hlt
daa
fwait
aam
mov
ret
bnd
loop
mov
mov
loope
nop
mov
mov
sbbl
std
sbbb
inc
fmulp
or
pop
imul
mov
test
add
and
push
stos
mov
pop
into
or
stos
jge
test
insb
mov
dec
imull
dec
mov
adc
shll
aam
sarl
xchg
push
or
dec
sbb
cmpsb
lds
cmpsl
mov
push
xor
int3
mov
pop
movsb
mov
mov
mov
mov
dec
cmpsb
movb
jle
or
mov
jae
insb
mov
pop
sub
pop
adc
lret
push
mov
iret
and
inc
add
jns
inc
cmp
js
mov
ret
jns
jecxz
push
xor
loop
inc
push
or
jmp
cmp
mov
jb
ss
int
add
daa
push
ret
xchg
outsl
loop
in
jle
shl
cld
call
cmp
jbe
mov
dec
inc
xlat
jnp
daa
and
cwtl
cmp
push
sub
sbb
je
decb
inc
xchg
ret
ffree
push
movsb
cmc
pop
popf
jl
test
xchg
test
mov
icebp
push
test
call
dec
notl
mov
scas
out
add
jne
pop
cmp
mov
lahf
lea
lods
cmp
mov
js
repz
and
mov
or
out
sub
btl
outsl
sub
and
repz
inc
push
sub
inc
cmp
add
sub
incl
sbb
in
push
mov
bound
cmc
push
lea
push
insb
dec
add
or
jecxz
loopne
inc
pop
jge
push
out
jb
outsl
idivl
inc
stc
test
jl
jns
adc
adc
je
jb
xor
cwtl
gs
jb
or
imul
sub
dec
cmp
mov
xchg
push
or
jp
fldenv
int3
cmp
js
xor
jmp
or
cmp
jmp
sbb
cltd
nop
daa
lret
xor
or
lock
pop
imul
jne
xchg
cmp
xchg
mov
je
lock
adc
or
or
push
adc
cmp
jnp
repnz
cli
cpuid
pop
mov
stos
in
frstor
lods
sbb
ja
sbbb
inc
lods
repz
pop
xchg
iret
cmp
pop
lcall
jmp
rcr
popf
cmpsb
fs
push
xchg
testb
decb
cmp
mov
popf
es
nop
jl
jbe
cmp
mov
into
loope
decl
xchg
sub
repnz
and
mov
test
push
mov
sbb
mov
in
shl
mov
out
ljmp
sbb
hlt
mov
inc
pushf
pop
scas
nop
xchg
jl
dec
pop
lods
andl
ss
dec
sarb
xchg
test
call
sbb
fld
in
mov
imul
and
add
rcrb
xlat
or
xchg
mov
insb
cli
jne
jmp
fdivr
enter
lret
fisubl
xchg
inc
cmp
jno
sbb
enter
xor
mov
icebp
int3
lea
sub
ljmp
lock
mov
andb
mov
mov
or
sub
movsl
dec
push
das
cwtl
push
popf
imul
xor
arpl
lret
dec
out
popa
or
pusha
adc
inc
divl
bound
xor
addr16
xchg
lea
cltd
push
out
jae
stos
mov
jbe
dec
dec
int3
imul
iret
mov
aad
xor
mov
cmp
adc
ljmp
and
jne
popf
imul
jbe
push
mov
lock
sti
mov
dec
and
icebp
mov
sbbb
loope
out
pop
pop
adc
cli
pop
cmp
add
push
xchg
jmp
int
add
int
cli
mov
loopne
xchg
sub
dec
push
lods
xchg
xor
ja
sahf
sub
aas
inc
mov
xor
xchg
jb
xchg
or
xor
lds
fxch
fcmovnb
sbb
sbb
arpl
popa
sub
jne
inc
xchg
or
call
add
inc
cmp
imul
imul
sbb
cmpl
arpl
cmpsl
stos
adc
mov
dec
cmp
pop
ret
xlat
inc
jb
js
jbe
addb
push
xor
or
out
rclb
xchg
inc
mov
mov
xor
or
mov
sub
dec
cmp
cmc
mov
jge
mov
ror
repz
loope
mov
les
iret
push
xor
adc
loopne
test
jae
mov
xlat
mov
mov
xchg
lods
fstpt
shll
mov
mov
shll
sar
cmpsb
out
sbb
xlat
xor
inc
jo
mov
add
adc
popf
aad
faddl
xchg
sti
lret
mov
icebp
add
sub
cmc
xor
or
in
mov
lods
ss
and
or
or
or
loop
add
cmp
pop
or
push
daa
jno
cld
mov
mov
and
iret
pop
test
push
in
lods
jae
mov
shlb
add
icebp
sbb
mov
sub
dec
pusha
movsl
icebp
addr16
pop
andl
popf
sbb
and
sbb
das
push
int
xchg
mov
fwait
insl
sarb
imul
sbb
stos
test
xor
xchg
sub
dec
dec
nop
sub
jmp
enter
ds
jmp
das
mov
hlt
lret
clc
push
lret
std
inc
sysret
int
xchg
leave
loopne
out
xchg
cs
pop
and
nop
clc
xchg
add
inc
imul
jno
les
push
add
xchg
cmpsl
jns
mov
mov
leave
xchg
add
pusha
sub
jnp
dec
es
ja
push
pop
lret
cwtl
in
cmpsl
out
arpl
and
outsl
jns
mov
movsl
and
insl
jge
incb
mov
push
mov
pop
out
push
adc
psadbw
jbe
movsl
out
popa
sbb
nop
inc
mov
or
fistps
cmp
dec
sbb
sbb
mov
bound
test
push
adc
jg
add
mov
loop
fsubrs
js
add
daa
sub
enter
lahf
xor
scas
inc
int3
xchg
fbstp
jo
lods
out
test
mov
cmp
sub
or
rcrl
jo
dec
pop
pop
outsl
push
rorl
xor
mov
lods
sbb
test
in
sub
cli
cmp
test
dec
xchg
je
test
mov
adc
inc
les
int3
jns
adc
dec
lcall
in
fs
lods
mov
fidivs
dec
dec
dec
push
popf
jg
sub
outsl
dec
and
aam
enter
inc
cmpsl
cmp
jecxz
mov
cmp
aad
dec
jo
out
imul
add
mov
fidivs
lea
cmpsb
mov
std
or
mov
cld
nop
lods
jl
xor
or
sti
pop
cmp
les
cmp
jmp
sub
xlat
sarb
adc
test
loop
and
xor
xor
cld
push
inc
imul
cli
dec
in
and
lods
aam
push
in
jl
cmp
pop
fwait
sub
icebp
mov
mov
mov
popl
repnz
test
jae
loopne
pop
push
or
outsb
bound
cs
nop
daa
mov
clc
test
decb
out
es
xor
adc
add
add
repnz
pusha
or
call
shl
jmp
push
mov
inc
stc
adc
cmp
insb
sbb
or
mov
mov
clc
xorl
dec
mov
mov
push
loopne
aas
adc
mov
xor
mov
les
rorl
adc
sub
imul
push
mov
xor
movsb
fnstenv
pop
cmp
or
in
nop
mov
fsubrl
test
test
sub
mulb
cmp
ss
dec
mov
out
lret
and
mov
mov
cld
adc
pop
adc
push
scas
sub
pop
iret
sahf
repz
jle
popf
outsb
mov
push
stos
inc
lds
repz
jb
ja
clc
jl
sub
hlt
popf
sti
jmp
jno
add
adcb
mov
fs
mov
mov
lds
and
arpl
out
test
addb
jne
mov
jg
in
add
mov
xor
aaa
mov
jae
test
insb
es
fldl
cmpb
int
cltd
pop
popf
cmp
sub
mov
out
lret
xchg
xor
aas
imul
daa
out
inc
inc
int3
scas
pop
shr
add
mov
xor
lods
test
ljmp
sahf
imul
fidivrl
aam
lret
popa
test
lret
stos
addr16
push
pop
mov
push
rcrb
ljmp
mov
bound
es
push
cmpsb
adc
mov
mov
dec
in
jns
sub
inc
in
iret
sbb
add
out
and
repz
xchg
mov
fsub
mov
xchg
pop
clc
add
adc
sub
aam
jle
nop
dec
je
jl
mov
mov
adc
push
jmp
xchg
sbb
popa
push
jno
jl
push
ret
cmp
dec
jecxz
xor
mov
dec
add
in
sbb
mov
mov
mov
lret
mov
mov
mov
in
dec
mov
mov
loopne
mov
adc
xor
in
and
imul
pop
into
iret
sti
or
scas
inc
adc
shlb
pusha
push
mov
xchg
mov
jo
popa
das
inc
shll
roll
push
push
sub
xor
sarb
inc
insb
mov
mov
stos
hlt
mov
les
xchg
addr16
rcrl
dec
xchg
test
loop
outsb
adc
shl
mov
out
sahf
leave
and
sub
or
subl
lock
and
adc
out
xor
fbstp
mov
add
xchg
dec
and
aaa
dec
insl
add
aaa
out
push
xchg
mov
out
mov
cmpsb
sub
fmuls
mov
pop
push
inc
push
push
enter
outsb
in
nop
mov
dec
mov
and
fwait
xor
test
mov
pop
in
mov
data16
lds
lock
and
xor
sbb
or
imul
mov
insb
cmp
add
xor
mov
out
add
mov
cmc
mov
cld
and
mov
mov
add
jmp
sbb
pop
aas
push
test
mov
out
push
out
jns
push
sub
xchg
and
outsb
loopne
sub
cmp
sbb
sbb
push
ljmp
sarl
jbe
sbbb
xor
imul
popa
push
cwtl
mov
hlt
pop
stc
call
adc
mov
adcb
stc
cmp
daa
pop
jnp
jnp
xchg
mov
xchg
jns
dec
mov
shrb
scas
jb
pop
jns
fstps
dec
mov
repz
shrb
out
dec
loopne
xchg
pusha
sbb
icebp
out
xchg
fwait
adc
xchg
lcall
xlat
loop
xlat
pop
ljmp
sbb
or
pop
lahf
cmc
jmp
push
pushf
roll
sahf
mov
dec
mov
push
cmp
popf
dec
add
fdivs
mov
dec
cmp
lret
clc
mov
and
in
stos
jne
push
add
cmp
adc
sub
jbe
cmp
push
jge
xorl
jmp
push
movsl
xor
loope
movsb
pusha
shlb
fprem1
mov
mov
xchg
push
sbb
xor
test
bound
mov
push
sub
push
xorb
out
out
push
mov
jle
stos
push
mov
lcall
or
insl
imulb
mov
mov
decb
pop
mov
rcll
ret
lret
lock
jns
pop
and
cmp
pop
dec
cmp
jo
jnp
les
or
sbb
adc
mov
pcmpgtd
ret
test
adc
shrl
pop
sarl
jle
pop
fwait
sbb
popf
or
idivl
push
add
cmpsl
lods
inc
inc
push
movsl
std
dec
dec
pop
mov
rol
loope
jne
movsb
add
push
jae
cmp
add
test
scas
and
js
or
dec
mov
adc
adc
xor
xor
lret
push
adc
or
loopne
into
push
popf
iret
sbbb
jns
add
imul
dec
test
dec
pop
icebp
cmp
mov
test
adc
ret
outsl
mov
addb
inc
inc
bound
dec
fimuls
push
xor
jg
or
arpl
fnstsw
ffree
inc
fldpi
pop
cmpsl
push
or
scas
mov
ret
adc
ss
in
icebp
adc
popa
add
mov
fistpl
sub
mov
clc
dec
sbb
xor
add
sub
adc
add
lcall
cmp
loop
insl
dec
push
repnz
xlat
in
inc
fs
cmp
fistpl
stos
pop
pushf
mov
testb
movsl
lock
scas
outsb
or
dec
inc
out
dec
ja
stc
pop
cs
stos
out
fs
stc
inc
jo
enter
sub
repnz
cmp
daa
and
clc
cmp
pop
popf
ja
cmpsb
adc
adc
mov
inc
push
xor
mov
aad
sbb
mov
daa
jbe
call
mov
jmp
add
adc
leave
adc
in
popa
iret
loope
xor
pop
lahf
adc
shrb
xor
nop
sbb
test
cmc
pop
pop
jmp
xchg
lods
jmp
mov
orps
popf
jb
inc
in
sub
inc
mov
sbb
rorl
xor
iret
fstl
and
push
loope
or
pop
lods
xor
sub
rorl
enter
mov
or
mov
cmp
scas
mov
sbb
xor
jnp
dec
call
into
push
inc
push
add
jbe
mov
scas
inc
inc
test
jns
test
xor
jns
gs
sbb
adc
add
and
sub
movaps
adc
and
xor
add
push
adc
into
int3
mov
pop
test
mov
cld
std
cs
inc
movsb
das
aad
clc
pop
imul
aas
pop
adc
and
pop
mov
enter
push
adc
inc
adc
xor
jmp
xchg
or
or
cmpsl
sti
pop
aad
push
jl
and
fprem1
jp
int
aaa
adc
es
inc
popf
cmc
inc
mov
xchg
add
seta
cmp
pop
idivb
loope
fildl
into
pop
sub
fistps
xor
jno
sbb
sub
fdivs
std
jle
lea
scas
jno
dec
cmp
shrb
inc
push
or
cmp
mov
cld
push
mov
jnp
dec
shl
pop
mov
in
enter
div
push
mov
movsl
xchg
sti
jp
cltd
jl
lret
and
fld1
es
and
loop
jae
cwtl
test
cltd
shll
nop
shlb
je
movsl
pop
pop
lods
or
sub
fsubrs
mov
and
mov
cld
outsl
mov
sub
pop
pop
lret
xlat
cmp
mov
pop
sbb
into
sub
mov
int3
arpl
ds
repz
dec
loopne
xchg
adc
fisubl
xchg
arpl
mov
fldcw
cmp
cs
lcall
cmpsb
cmp
cltd
xchg
inc
push
inc
std
and
daa
sbb
addr16
add
idivb
mov
ret
insb
hlt
aaa
fldcw
les
mov
xor
aaa
loopne
mov
sbb
pop
lcall
add
dec
mov
fsubs
aam
pop
stc
dec
dec
cmp
inc
mov
ret
js
jmp
decl
outsb
jle
push
push
adc
xchg
mov
sbb
stos
mov
imul
mov
xchg
pop
rorb
hlt
ud0
mov
aad
movsl
dec
dec
mov
dec
mov
in
sahf
stos
jg
pusha
mov
cltd
push
push
sbb
outsl
aas
or
mov
pop
loope
add
ss
inc
mov
call
pop
dec
pop
ffreep
rclb
pop
mov
bound
mov
std
sti
mov
test
dec
mov
ljmp
cmp
fsubr
adc
jle
jg
sub
pop
or
xchg
test
xchg
dec
jmp
or
scas
push
push
mov
gs
push
xlat
and
pop
sbb
sbb
iret
mov
adc
mov
std
and
mov
dec
repz
inc
cmp
sbbb
outsb
fldl2t
or
mov
lods
test
out
flds
mov
xchg
adc
xchg
pusha
dec
stos
repnz
fldcw
mov
mov
aaa
adc
mov
xor
ret
sub
jge
jp
pop
mov
jle
dec
movsl
push
lods
rclb
mov
aad
aad
imul
add
addr16
fnstenv
sbb
pop
mov
rcrl
aad
scas
inc
jnp
pusha
mov
dec
lcall
cmpsl
shlb
cmpsl
mov
jmp
test
loopne
pop
push
cwtl
xor
data16
mov
push
rol
and
and
mov
int3
lret
mov
pop
out
xor
daa
jbe
inc
rolb
xchg
lock
sub
pop
or
mov
or
rdtsc
push
and
or
popa
push
insb
lret
ljmp
push
rcrb
pusha
jg
push
sbb
sbb
andb
sbb
sub
mov
or
rcrb
cmp
out
mov
cmovbe
xchg
out
push
pushf
aaa
daa
mov
mov
sbb
aaa
imul
jne
inc
movsb
cld
cmpsl
sub
mov
cld
sti
mov
fmulp
lahf
imull
stos
test
sbb
call
jecxz
repnz
es
cltd
and
mov
cmpsl
ds
mov
clc
outsl
pop
rcl
mov
out
sahf
pop
rcrl
stos
xor
std
inc
sub
ror
push
mov
outsl
sbb
mov
cmpsl
xorl
aad
mov
pop
int
dec
or
adc
adc
jp
and
fcompl
or
mov
mov
dec
ja
jb
ss
out
cmpsl
mov
cmp
std
mov
xor
sbb
imul
and
into
add
ss
cwtl
jle
lret
xchg
mov
xor
in
push
cs
add
push
out
jb
shll
adc
mov
inc
jecxz
jno
xor
loop
arpl
sub
xchg
inc
ljmp
mov
jnp
aas
adc
fwait
push
lcall
mov
iret
into
popa
xor
js
repnz
je
rolw
xchg
and
vcvtdq2pd
ds
push
xor
and
repnz
int
movsl
std
cmc
mov
and
addb
jecxz
mov
inc
jle
rcrb
pusha
xor
fcomi
add
jno
xor
les
push
add
mov
loop
mov
mov
pusha
loope
jl
lock
fidivs
xor
push
pop
out
and
or
mov
shrl
mov
repnz
sub
pop
sub
pop
test
call
push
outsb
jno
pushf
pop
cmc
int
fdivrl
ja
shll
pop
in
xchg
aam
add
in
add
adc
ret
push
daa
rcl
add
aad
sahf
loop
in
cmp
mov
mov
pop
sbb
cmp
hlt
add
cmpl
out
dec
pop
inc
jne
xchg
and
movsb
ds
imul
cmp
push
and
int3
loopne
and
mov
and
jle
out
jge
lcall
das
add
xchg
out
sbb
icebp
movsl
and
lods
mov
mov
push
push
jg
rep
int
fstps
aaa
lods
sti
data16
mov
sbb
les
test
cmc
inc
cmp
fistl
lret
lret
jne
cltd
pop
push
push
mov
cmp
lods
inc
popa
cld
adc
jg
das
loope
aam
lcall
mov
ss
mov
adc
jmp
dec
pop
push
fnsave
and
nop
mov
sahf
push
mov
or
jns
lock
pop
xor
sbbl
push
sbbb
scas
fwait
dec
cmp
repnz
inc
out
je
js
sbb
cmp
arpl
in
jno
fwait
add
sub
and
cmpsb
std
cmpsb
xor
xchg
cltd
sub
ljmp
in
shlb
sarl
push
loopne
dec
es
incl
sti
adc
cmp
shr
xchg
pop
mov
inc
out
add
mov
mov
stos
add
cmc
nop
cmc
adc
dec
jnp
xchg
out
test
in
jo
jmp
lock
leave
out
into
and
mov
outsb
sub
pop
outsl
shrb
add
divl
push
xchg
fs
movsl
xchg
test
inc
lods
int3
pop
stos
jbe
ljmp
stos
mov
jae
lods
add
fisubs
cli
test
push
add
inc
imull
fwait
adc
frstor
idiv
dec
jb
pushf
mov
shl
incl
stos
nop
mov
dec
cmp
or
sub
sbb
outsb
xor
adcb
pop
test
repnz
sbbl
adc
aaa
filds
xchg
push
lods
inc
pop
aam
lcall
int3
inc
shr
add
mov
clc
shl
xor
js
popf
xchg
sub
dec
ja
jecxz
sahf
in
lods
and
push
push
insl
adc
xchg
xchg
pop
jbe
pop
fdivp
mov
cmp
mov
daa
psrlq
jle
mov
pop
cmpps
adc
divl
sahf
ffree
test
fucom
pop
xchg
mov
cltd
xor
mov
or
push
inc
adcl
cld
add
inc
push
or
jmp
ss
stos
roll
or
movsl
loope
xchg
bound
stc
mov
jo
push
sbb
daa
jp
xchg
in
dec
clc
xchg
push
fdivrs
in
adc
pop
nop
xor
add
fxch
ror
xchg
sbb
lahf
lods
in
test
out
fsubl
lds
ds
xchg
sbb
pop
push
lret
stc
mov
lret
xchg
pop
pop
adc
and
pop
jb
mov
jmp
pushl
andl
add
xchg
cmp
mov
repz
call
add
sahf
and
mov
mov
pusha
or
lock
sub
xchg
and
xor
sbb
imul
testl
mov
mov
inc
inc
repnz
inc
cld
test
test
add
stos
test
pop
push
add
cmpsb
dec
xchg
and
addr16
and
xor
push
cmp
xor
mov
das
pop
ss
sar
push
push
in
jne
lea
xchg
fldcw
xchg
mov
cwtl
adc
push
movsl
leave
enter
xor
rcrb
mov
sbb
cmp
test
iret
push
jno
clc
adc
sub
sub
xchg
mov
sub
call
or
repnz
mov
hlt
sub
fwait
xchg
iret
jnp
les
insb
ret
sbb
clc
mov
fwait
xor
movsb
jae
rcrb
jns
cmp
push
cmp
mov
decb
test
mov
sub
fcomip
sbb
hlt
push
das
test
push
cmpl
stos
xor
ss
rcrb
loope
in
pop
push
arpl
je
out
mov
pop
lret
cmp
test
icebp
mov
nop
mov
dec
adc
fwait
jp
cli
adc
dec
ret
cwtl
mov
lods
jmp
leave
lods
inc
push
hlt
xor
pushf
scas
into
xor
lea
jne
test
js
daa
leave
xchg
xor
dec
mov
dec
and
iret
cwtl
push
add
xor
adcb
roll
loope
pop
sub
cmpsl
incl
enter
std
in
sti
and
or
inc
dec
xor
mov
and
testl
movsb
daa
cmp
repnz
decb
and
jp
xor
jecxz
cmp
cwtl
xor
push
test
movsl
adc
xlat
popa
je
mov
ret
in
xor
xor
into
mov
hlt
fistps
ds
push
pop
mov
dec
in
int3
inc
pop
cmc
lods
ds
adc
fdivl
and
subl
cmp
or
adc
es
dec
push
mov
adc
pop
scas
cmp
loope
and
icebp
cmpsl
insb
jmp
dec
mov
push
insl
out
nop
cmp
shll
add
les
mov
in
xchg
push
mov
inc
out
cmp
xchg
sahf
adcl
mov
iret
push
sbbl
inc
push
xor
jne
add
push
jmp
lods
inc
pop
mov
mov
mov
sbb
dec
cltd
leave
xor
test
das
jns
fldt
xchg
hlt
jg
iret
cmp
aaa
fimull
scas
push
adc
xchg
push
jae
add
pop
test
mov
scas
call
adc
xchg
bound
lret
mov
in
push
push
rcrb
xor
xchg
and
scas
cld
scas
sub
loopne
xchg
mov
and
adc
test
mov
lea
fwait
mul
xchg
dec
popa
iret
mov
jne
adc
mov
and
jo
cmp
mov
mov
in
enter
rolb
pop
and
xchg
insl
add
in
adc
pop
xchg
repz
cs
adcl
mov
scas
mov
inc
xor
js
scas
jl
push
aas
mov
inc
push
or
cltd
in
stos
ss
in
sahf
xor
adc
mov
add
fs
test
jmp
jge
mov
push
mov
fisubrs
push
jns
push
jae
ret
outsb
or
push
jl
inc
fsts
mov
pushf
xor
mov
lcall
jae
cmp
lods
lret
mov
jle
insb
outsb
ficoms
mov
dec
movsl
mov
inc
fisubs
mov
push
sti
adc
mov
xor
jp
push
inc
aas
or
lahf
or
adc
sbb
xor
cmp
aas
xor
sub
adcl
xor
push
mov
dec
daa
xor
sahf
ljmp
jmp
or
idivl
iret
or
mov
enter
sbb
sub
dec
enter
dec
sub
cmpsb
jns
mov
scas
xchg
push
std
mov
mov
lds
movsl
pop
adc
mov
mov
jno
cmpsl
xchg
lods
inc
inc
enter
push
insl
rolb
jne
fnstenv
dec
lret
and
inc
xor
ds
pop
mov
xchg
mov
test
mov
adc
dec
leave
pop
sti
adc
aaa
dec
aad
jo
scas
clc
enter
push
movsl
movsl
inc
popa
stc
xchg
inc
sub
cmp
xchg
and
jo
mov
into
icebp
insb
add
pop
call
imul
stos
inc
mov
xor
lcall
jo
xchg
dec
dec
in
imul
jle
stos
inc
mov
lret
push
enter
and
or
cs
js
mov
pop
in
mov
loope
pop
daa
clc
add
sbb
cmp
jbe
cmp
sub
xchg
stc
dec
push
lods
sub
out
xchg
jecxz
and
mov
call
rorl
sarl
loop
cld
or
jp
cltd
sti
jns
inc
rcrl
pusha
fstl
test
and
scas
pusha
neg
cs
fcomps
push
jae
pop
std
das
mov
dec
orb
cli
mov
pop
adc
int3
jp
push
and
std
and
mov
pop
fisubl
ss
es
stc
push
cmp
pop
bound
sbb
dec
jle
insl
sub
mov
inc
out
mov
mov
nop
hlt
arpl
mov
sbb
mov
and
scas
jmp
mov
out
mov
cmp
jp
sub
add
jge
push
stc
xchg
cmp
mov
roll
push
rep
movsb
into
xor
jg
mov
pushf
xor
rorl
int
adc
inc
pop
ljmp
sub
cmp
push
jnp
mov
cld
sarl
cmp
clc
in
cs
aad
inc
pop
in
mov
inc
in
icebp
xchg
out
jb
scas
dec
cld
js
andb
jb
out
pop
mov
jp
scas
fildll
mov
sbb
mov
pop
scas
out
sub
mov
es
sti
jmp
sbb
sub
je
mov
push
fsubs
lock
subb
movsb
add
pusha
mov
subb
jecxz
fdivrs
xchg
pop
xlat
inc
and
jg
xchg
dec
mov
and
mov
jmp
fisttpll
jg
or
push
imul
imul
mov
cmp
gs
cmp
xlat
fidivrs
repnz
je
cwtl
mov
dec
dec
jb
mov
nop
icebp
inc
dec
and
mov
pop
fmull
out
ds
cmp
jge
sbb
jle
and
cwtl
aad
push
outsb
mov
push
lods
cld
mov
lods
sbb
xchg
adc
xor
ficomps
xchg
cmpsl
es
sbb
movsb
into
cs
in
repnz
adc
movl
cli
sbb
mov
mov
push
popf
daa
lret
cmp
mov
push
aad
push
pop
lods
jg
xor
dec
scas
cmpl
out
xchg
or
add
mov
mov
and
in
pop
loop
add
mov
xor
add
lcall
mov
std
and
jg
pop
in
jmp
ss
xchg
adc
shl
lahf
pop
adc
sbb
js
xorb
adc
sbb
test
movsl
aaa
iret
or
pop
mov
jle
sahf
xchg
mov
mov
xchg
popa
cmp
pop
pop
cmp
pop
jp
dec
push
cld
adc
inc
push
jbe
inc
pop
leave
xchg
out
xor
loopne
je
sbb
add
cmc
and
popf
push
sbb
subb
int3
in
inc
jae
ja
push
mov
dec
cltd
das
cmp
outsl
dec
arpl
or
mov
mov
aad
into
clc
dec
jbe
adc
xchg
lahf
stos
xor
loopne
lret
mov
mov
adc
and
cmp
filds
sbbb
scas
push
jp
pop
push
lods
leave
outsl
or
mov
push
push
hlt
fistpll
and
mov
sbb
rolb
inc
lock
sbb
xchg
cs
push
insb
roll
inc
mov
jmp
xor
test
push
lock
mov
outsl
pop
cmp
sbbb
jnp
dec
and
cmpsb
xor
cmp
mov
xchg
aas
pop
vhaddpd
inc
nop
xor
test
inc
sub
ret
cmpl
jns
in
sti
insb
add
jb
popf
gs
cmp
popf
xchg
xor
pop
jo
jb
shr
lds
cmpsl
cmp
aam
sbb
out
mov
cwtl
pop
adc
mov
iret
and
stos
nop
push
xchg
stc
bound
xor
cmp
pop
cmpsl
rcll
mov
and
call
cmp
aam
dec
pop
mov
lahf
mov
fs
xchg
xchg
inc
out
in
pop
repnz
mov
adc
mov
fsubr
lods
mov
jns
sbb
add
psadbw
xchg
lahf
sub
repz
jg
fdivs
cli
or
scas
pusha
pop
jo
jno
mov
xor
jne
outsb
lock
sub
or
in
jle
cmp
mov
mov
and
pop
scas
inc
sub
in
jae
pop
pop
aaa
jno
outsb
jmp
orl
outsb
jl
sbb
out
es
jmp
xor
dec
add
dec
dec
lret
insb
dec
stos
dec
mov
xchg
jg
out
dec
mov
pop
xlat
pop
scas
pop
jge
dec
push
push
popf
mov
mov
push
inc
push
int
cli
movb
sbb
test
pop
jne
imul
and
sbb
iret
hlt
xor
xor
inc
testl
sub
bound
mov
divl
cmp
hlt
mov
or
fnstsw
mov
cmp
jmp
adc
jl
fs
scas
jo
pusha
das
push
es
mov
mov
mov
mov
cmp
mov
mov
test
jnp
shll
popl
dec
stc
xchg
clc
inc
mov
iret
push
lret
seta
inc
or
mov
pop
cld
addr16
cwtl
jae
lret
add
popa
repz
pop
cmp
mov
mov
sbb
imul
cmpsb
enter
cmc
loop
mov
test
dec
std
mov
xlat
cwtl
lea
call
test
inc
cmp
in
mov
lock
xlat
add
xor
addr16
dec
or
and
gs
sbb
add
dec
mov
pop
test
pop
ds
lea
shll
push
stos
mov
pop
mov
shll
xor
xlat
mov
psrlq
mov
push
repnz
xor
sbb
test
addr16
pushf
test
or
xlat
adc
xchg
cmc
fwait
sbb
dec
sbbl
pop
mov
pop
mov
sbb
jnp
and
dec
lret
fs
jns
lret
nop
ds
fmuls
lds
pop
faddl
sub
out
push
out
shrl
fnsave
cmp
movsl
jns
jg
mov
dec
pop
mov
and
shrb
dec
movsb
fistpll
int3
ret
in
dec
xchg
jno
pop
fsincos
pop
les
sbb
int3
ss
mov
push
out
mov
js
pushf
adc
mov
stos
lcall
adc
in
xchg
gs
lea
data16
inc
dec
jae
mulb
dec
movsl
mov
mov
decb
fsubrs
outsb
xor
ficompl
and
ljmp
xor
xor
xchg
pusha
hlt
xchg
push
cmpsb
sbbl
sbb
imul
rorb
pusha
xor
sub
mov
ja
push
mov
dec
dec
add
pusha
cmp
lods
add
push
sbb
lcall
call
jb
mov
stc
cltd
daa
into
dec
pop
stc
jae
and
mov
mov
loopne
jmp
jae
and
mov
fisubl
or
add
cwtl
dec
inc
stos
mov
out
and
stos
movsb
push
xor
push
inc
mov
and
fidivrl
mov
addr16
sub
inc
or
push
fcomi
push
mov
xor
lods
ret
fwait
add
addb
aaa
fs
push
lcall
mov
nop
out
dec
jecxz
mov
arpl
es
ljmp
dec
dec
cli
mov
lcall
arpl
aas
jns
push
in
js
lea
fwait
mov
rolb
fsubrs
stos
cmp
push
mov
aas
push
or
scas
mov
jle
outsb
mov
fnstenv
jno
pop
xchg
out
movsb
out
pop
das
addr16
inc
xor
out
xchg
dec
adc
or
xchg
shlb
push
aam
lahf
popf
or
sahf
dec
inc
push
ljmp
in
or
imul
fs
adc
jo
out
in
sti
xor
inc
iret
mov
inc
loop
mov
and
fs
xorb
jecxz
int3
mov
sbb
out
clc
cmp
xchg
sbb
xchg
adc
push
sbb
outsb
call
sbbl
xorl
sub
pop
pop
inc
push
or
popf
mov
aad
xor
mov
cwtl
or
and
adc
rcl
mov
sub
cmc
cmpsb
shlb
dec
cmp
xchg
mov
mov
mov
scas
inc
xchg
sbb
cmp
add
pop
or
push
mov
imul
mov
int
jge
ret
xor
imul
jno
push
mov
or
fbstp
and
cmp
orb
fcoms
adc
push
add
jg
inc
sub
sub
repz
jnp
cs
xchg
pop
je
stos
lea
ds
fwait
sub
insl
inc
push
enter
add
xor
popa
lret
adc
push
and
and
sbb
ror
pop
add
cmpsb
jne
ror
mov
insb
adc
xor
xor
stc
lcall
in
inc
and
int
ret
test
lods
and
push
call
ljmp
and
pop
lock
shll
mov
lds
xor
cld
mov
inc
mov
cmpsl
adc
sbb
shl
imul
out
pop
das
testb
pop
and
mov
cmp
call
push
push
movsb
cmp
shrb
loop
cmp
out
dec
jbe
in
imul
cmp
dec
dec
fmuls
lret
lods
loopne
adc
inc
or
neg
mov
mov
mov
fldt
xchg
push
shll
lret
fsubl
jl
mov
jo
jne
aam
jmp
iret
fidivs
push
pop
mov
jg
dec
fsts
es
xchg
sahf
push
ds
pushf
stc
push
xchg
fisttpl
mov
rorb
push
mov
sub
jmp
into
jg
les
insl
adc
sbb
ret
rol
sub
or
sbb
mov
mov
movsl
jmp
xor
inc
inc
sar
addr16
sub
sub
dec
push
mov
gs
test
add
jnp
add
std
cmovno
jg
decb
stos
cltd
xchg
sub
mov
mov
arpl
loopne
jae
mov
push
cmc
jnp
andb
orb
ret
inc
add
outsw
cmp
mov
aas
in
dec
lahf
cwtl
push
fsubl
fimuls
scas
leave
lods
ljmp
mov
push
repnz
fidivl
xor
xchg
inc
xchg
sub
cmpsl
sub
mov
sub
test
jae
fwait
xchg
into
stos
add
jmp
add
insl
mov
push
ret
and
fistpl
movhlps
arpl
aad
pop
dec
fistpll
xor
push
ret
popa
jo
inc
loope
insb
rcl
jno
pop
arpl
add
and
lea
sub
pushf
fstl
and
stc
xchg
imul
fwait
aam
cmpsl
mov
test
loope
xor
dec
pusha
cmp
shr
imul
jg
xor
pop
out
mov
faddl
adc
sub
mov
lcall
cmp
cmp
stos
sbbl
std
adc
pop
push
test
mov
push
jle
icebp
movsl
mov
lds
sub
mov
fnstcw
stos
rol
fwait
in
inc
sbb
xchg
arpl
xchg
add
jmp
pop
stos
cmp
loope
sti
sbb
movsb
sar
pushf
cli
aaa
inc
mov
pop
out
add
movsb
push
sbb
jge
cwtl
sbb
mov
fwait
and
push
inc
or
mov
and
dec
loope
mov
push
mov
jle
push
imul
stos
fldcw
and
mov
lahf
clc
mov
test
sbb
mov
ret
mov
aad
add
lcall
or
out
sub
jmp
lds
scas
ss
cmp
mov
push
dec
dec
push
fsubs
ljmp
push
dec
test
repz
jmp
mov
xchg
mov
movsl
mov
enter
jl
cmpsb
push
xor
inc
mov
or
stos
xor
adc
les
or
outsb
push
add
mov
bound
pop
lcall
cmpsb
sbb
adc
mov
dec
mov
jmp
stos
xor
int
add
insl
mov
xchg
xchg
inc
xlat
insl
lcall
cwtl
pop
out
push
lods
pop
aas
je
pop
mov
shll
xchg
cmp
mov
icebp
sub
inc
sub
add
inc
fnstsw
fs
pop
push
loop
lods
std
push
push
jmp
sbb
inc
loopne
cmpl
daa
addr16
jno
xor
scas
movsl
addr16
movsb
cltd
into
addr16
mov
cld
mov
push
jl
xchg
xchg
xor
outsb
testb
mov
pop
cmp
sub
inc
dec
idiv
inc
sbb
out
nop
popw
cmpsb
inc
out
mov
add
les
push
dec
mov
cmpsb
inc
adc
icebp
push
add
cwtl
andb
mov
sbbb
in
mov
xchg
sub
mov
inc
hlt
scas
dec
outsb
daa
jbe
inc
es
mov
dec
lcall
sbb
pop
das
inc
dec
add
mov
mov
stc
sbb
lea
dec
adcb
cmp
leave
int
mov
bound
adc
or
xor
add
or
ds
push
mov
lods
loopne
ja
jge
sub
ja
xchg
push
ficoms
push
stos
jbe
das
add
xchg
int
daa
push
mov
jg
lret
lock
or
jp
rcrb
mov
xchg
test
xor
cmpb
insl
dec
rcrb
inc
or
pop
loopne
ljmp
inc
mov
pop
in
repz
cmp
hlt
rcr
jo
xchg
outsb
fdivl
test
es
add
mov
das
xchg
sbb
loope,pt
pop
pop
push
fistps
mov
fs
jmp
arpl
imul
into
cmpsl
inc
sub
and
movsl
jae
dec
test
push
test
fcmovu
cld
mov
in
sbb
sbb
enter
inc
sti
cli
pop
sti
add
or
push
push
mov
aas
inc
pop
int
push
or
inc
das
inc
cltd
sub
mov
mov
fisttpll
das
addr16
mov
call
jmp
stos
inc
adc
inc
fsts
lcall
repnz
sub
jbe
and
sub
pop
sti
out
xchg
leave
rclb
ja
mov
jno
pop
popa
pop
icebp
push
rorb
mov
call
in
push
loopne
sbb
lock
gs
xor
mov
sub
mov
push
je
out
jmp
mov
outsb
pop
cmc
pop
out
sbb
mov
outsb
lds
and
jecxz
call
fwait
stos
outsl
and
pop
arpl
push
mov
je
int
mov
push
in
mov
pop
scas
out
testl
sarl
imul
dec
mov
fisubl
fnstcw
xchg
loopne
inc
xlat
inc
das
jns
lahf
rcll
les
xor
inc
das
ret
pop
lahf
aad
jnp
mov
mov
pusha
add
push
sub
push
mov
out
xchg
xchg
push
mov
dec
pop
pop
sahf
or
mov
mov
inc
xchg
xchg
xchg
inc
jns
ljmp
sti
pop
loope
mov
add
xchg
daa
mov
test
or
mov
mov
jns
xor
pop
add
pop
mov
into
movsl
ljmp
or
sub
cmp
mov
les
jl
lea
sbb
aas
dec
xor
aam
add
dec
xor
call
mov
jb
testl
push
sbb
or
rcl
inc
mov
or
repz
bound
lods
fisttpll
fs
imul
inc
out
stos
clc
pop
xor
push
lods
adc
in
sarl
push
inc
cmp
lods
stos
outsb
jns
mov
inc
leave
xlat
adcb
mov
outsb
cmpsl
mov
adc
adc
pop
inc
ret
gs
dec
in
loop
sahf
xor
or
sub
xchg
test
sarb
pop
adc
mov
inc
lahf
xor
lret
mov
sub
loopne
push
fidivrs
stos
sahf
adc
int3
or
mov
sbb
sub
fiaddl
test
dec
aas
xchg
repnz
mov
ret
repz
adc
jmp
in
add
cmovle
stos
xchg
test
dec
es
jb
dec
and
cltd
movsb
decb
mov
xor
mov
mov
cmpsl
sbb
sub
or
lods
inc
daa
adc
xchg
cltd
inc
mov
iret
sbb
icebp
inc
mov
sbb
in
std
cmp
add
ja
mov
std
jno
clc
xchg
inc
in
jle
scas
inc
out
sti
in
test
incl
ss
sub
es
mov
jne
and
mov
pop
cmpsl
and
sti
dec
pop
and
inc
inc
lahf
xor
xchg
int
mov
stos
movsl
pop
loope
sbb
repnz
pop
shl
sbb
imul
mov
jle
inc
test
ds
add
in
popf
xchg
mov
push
mov
out
add
in
cmc
jne
out
add
xchg
sub
sub
mov
pop
std
rcl
pop
jne
shrl
clc
push
or
push
jno
sbb
jb
nop
daa
xchg
adc
pop
push
pop
xchg
mov
xchg
fwait
aas
mov
out
js
or
test
stos
lcall
aad
xorl
shrl
dec
arpl
clc
daa
fmul
sbb
mov
mov
dec
icebp
adc
xlat
sbb
lret
ja
mov
jne
call
adc
push
pop
scas
dec
xlat
mov
mov
ja
and
dec
out
into
sahf
jae
ss
cmp
cmpb
rorb
into
filds
push
loop
fisubl
outsb
mov
popf
insb
jns
mov
add
stc
xchg
call
sub
add
ja
test
sbb
cmp
add
mov
stos
scas
fwait
lret
lret
xchg
jb
adc
jbe
aad
sbb
sbb
sbb
xchg
pop
push
lahf
xor
push
insb
and
das
out
jg
pop
mov
cmp
add
int3
xor
notl
imul
and
mov
adc
fsubrs
xor
xchg
xchg
sub
add
mov
dec
popf
lcall
test
and
jge
rcll
lds
ret
loopne
push
aad
enter
ret
lret
sti
xlat
jbe
stos
adc
cmp
jg
and
cltd
xor
divb
stos
dec
js
mov
inc
adc
mov
movsl
imul
jbe
or
aad
fisubl
faddl
mov
aam
rcrb
cmp
lret
std
add
fidivs
fidivrs
push
adc
push
xchg
and
imul
mov
mov
mov
cmp
and
mov
aad
push
pop
hlt
ja
les
adc
sbb
jbe
pop
mov
xchg
and
fwait
cmp
add
xlat
cmp
jns
dec
pop
jns
ss
fsub
lahf
push
dec
mov
jp
adc
aas
add
icebp
mov
jmp
fwait
xchg
nop
adc
lcall
pop
lret
mov
int
in
inc
dec
mov
cmc
mov
mov
cmp
rcl
add
ret
movsl
pop
out
pop
xchg
jl
aas
popf
aam
dec
mov
jge
dec
mov
jp
mov
sub
aam
adc
fs
dec
pop
inc
xor
push
sti
mov
out
and
rcl
xchg
enter
pop
jl
rorb
pop
repnz
fldt
fucomip
leave
lods
dec
es
shrb
out
jecxz
out
out
fsubrp
inc
fcomps
add
jp
outsb
mov
sbb
add
lds
sub
xchg
cs
pop
lea
sbb
stos
mov
scas
inc
add
jecxz
and
mov
fcoms
push
cmpsb
into
dec
popa
das
xor
data16
adc
js
out
jecxz
inc
sub
out
cmpsb
repz
push
adc
pop
ss
pop
aaa
cwtl
sub
sub
cmp
pop
sub
cmpsb
fdivrp
inc
xchg
aad
and
inc
lods
cmp
clc
lret
in
xchg
cmp
mov
pop
ja
xor
inc
mov
hlt
ret
mov
fsubs
fistpl
in
test
pop
jmp
cltd
popf
or
pop
out
push
lock
pop
and
in
nop
lahf
pop
adc
xchg
movsb
jecxz
sbb
dec
dec
mov
push
or
popa
stos
loop
into
or
hlt
and
push
jae
mov
fdivs
stos
pop
and
in
xorb
insb
add
dec
mov
hlt
push
jbe
stos
fisubs
fldenv
dec
rcrl
scas
frstpm(287
mov
pop
mov
mov
inc
cltd
xor
pxor
jo
testl
data16
loop
jno
sahf
add
and
mov
rolb
in
outsl
jecxz
adc
arpl
xor
aas
fadds
adc
sbb
push
mov
fucomp
shl
adc
loope
je
mov
adc
inc
xor
pop
enter
das
into
testb
shl
and
repnz
ss
mov
pop
jb
pop
icebp
or
jnp
push
in
inc
ret
or
adc
push
js
ja
shrb
call
adc
sbb
fs
dec
loope
pusha
aam
dec
dec
pop
inc
imul
sbb
arpl
or
js
jnp
inc
shr
out
sub
aad
adc
mov
arpl
ret
pop
gs
inc
xchg
or
cltd
cmp
mov
mov
xchg
pusha
scas
fsts
aam
ljmp
jno
fmull
mov
cmc
pop
xchg
ljmp
ljmp
jne
push
xor
gs
out
add
add
or
cs
cmp
mov
inc
enter
and
pop
push
test
xchg
xor
pop
loopne
movsb
aaa
fimull
test
arpl
xor
mov
cwtl
mov
cmp
xchg
fidivrl
sbb
mov
movsl
les
xor
xchg
popa
fcoml
icebp
mov
dec
test
mov
aam
repnz
sub
xchg
sub
shlb
xor
push
adc
leave
lahf
fcmove
pop
jb
sti
sbb
movb
scas
mov
xor
outsl
scas
mov
push
inc
gs
es
mov
in
add
mov
inc
fidivs
xchg
fwait
sub
and
jl
mov
rcll
lea
xor
mov
lret
cli
add
gs
nop
sahf
mov
pop
xchg
addb
testl
shl
mov
roll
fidivrs
pop
mov
nop
and
lock
stc
xchg
in
lods
sbb
out
xchg
mov
xchg
pop
call
jnp
pop
jg
inc
jl
xchg
dec
addr16
out
fmuls
sub
ljmp
cs
jl
aaa
mov
cld
loope
adc
clc
pop
pushf
pusha
lret
scas
jne
jb
fcoml
jnp
mov
lret
add
fstpl
fsubrp
xorb
fwait
gs
sti
imul
inc
mov
shrb
into
cmc
jge
mov
enter
xchg
pop
jmp
int3
mov
jg
push
stos
xchg
test
mov
mov
or
js
inc
fisubrs
push
fdivl
fildl
adc
nop
movsb
repnz
push
jns
imul
fcmovnu
pop
test
hlt
and
sbb
ret
lcall
or
adcb
cld
inc
xor
sub
and
enter
xchg
or
aas
outsb
sub
adcb
js
sbb
daa
mov
fs
inc
push
fcmovnb
insl
loopne
jl
cmp
jp
sbb
lods
fidivs
jns
sub
imul
out
jnp
cld
cmpsl
cld
xchg
stos
cmp
out
lret
sbb
jb
mov
adc
push
jmp
in
lcall
sub
imul
ret
jo
jp
sbb
lahf
js
ja
les
lods
leave
add
cli
je
imull
cmp
and
add
jl
jmp
push
leave
xchg
jnp
push
mov
inc
and
mov
icebp
xchg
std
push
mov
mov
mov
lock
mov
push
cltd
dec
fidivrl
cs
add
mov
lcall
jg
mov
fs
dec
xchg
das
dec
lods
inc
popa
and
int3
jno
aad
or
aam
in
idivl
pushf
movsb
mov
fadds
hlt
mov
mov
stos
icebp
imul
inc
imul
adc
inc
dec
dec
push
out
jnp
fsubrs
and
out
in
adc
mov
mov
popa
imulb
int
outsb
notl
imul
sti
mov
test
inc
pusha
adc
rcrl
dec
add
xor
jmp
out
flds
xor
rorb
enter
mov
fldl
jmp
movsb
jno
mov
mov
push
loope
std
mov
jmp
enter
daa
jmp
xchg
or
divb
or
adc
popf
rcrl
sub
sbbl
add
lcall
clc
mov
adc
inc
mov
jno
pop
xchg
inc
push
mov
sbb
and
sub
inc
sub
dec
in
or
pop
jae
dec
pusha
aam
popa
popa
xchg
ret
mov
push
das
scas
cltd
mov
xlat
jns
xor
cmpsb
mov
adc
bnd
push
int3
add
sbb
aad
and
mov
xor
in
lahf
movsl
xchg
lret
dec
jl
subb
je
inc
inc
add
repz
hlt
sub
jnp
sarl
or
mov
jmp
imul
mov
push
cmp
add
mov
or
shrb
lret
in
les
mov
mov
pop
testb
aam
lock
lret
rcrl
cmc
mov
add
add
mov
into
add
mov
pop
sub
pusha
aaa
in
inc
dec
jecxz
jb
pop
push
fwait
dec
pop
xchg
lret
add
ror
mov
std
lods
repnz
scas
inc
sbb
jl
lock
mov
pop
and
or
decl
push
imul
cltd
divb
aaa
int
mov
lods
js
lret
push
loopne
aaa
push
lret
orl
cmp
cmp
dec
inc
sar
ds
fwait
inc
aas
dec
jge
pop
cmp
push
int3
push
sbb
or
in
push
dec
push
fisubrs
int3
and
sub
mov
idivb
sbb
ret
dec
push
shl
loopne
inc
jecxz
cmpsl
fwait
xchg
sahf
cmc
inc
les
mov
out
sub
test
push
or
or
adc
pop
cs
das
or
inc
ljmp
leave
aaa
insb
insl
aad
pop
push
xlat
mov
mov
push
rcrb
xor
loopne
xchg
adc
pop
cmc
jg
subb
dec
jl
cmp
pop
in
mov
out
lret
push
and
testb
dec
negl
sarb
les
inc
negb
or
loop
lods
orl
addl
pushf
inc
adc
clc
fstl
idiv
lcall
adc
dec
data16
adc
push
das
push
jae
lea
sbb
jle
xchg
add
cmp
pop
and
orb
mov
stos
adc
jmp
das
pop
push
jmp
or
adc
jl
cmp
adc
jle
sbb
shrl
scas
sbb
adc
dec
mov
arpl
into
mov
xorb
cli
xchg
xchg
shl
pop
mov
jge
cmpsl
out
insl
sahf
or
cmp
push
imul
js
testl
xor
lds
lahf
ss
cmp
xchg
pop
xlat
in
decl
cmp
shl
push
cmp
popa
shlb
in
dec
jg
arpl
out
cmp
jl
cld
loopne
enter
ja
mov
mov
add
out
outsl
rorb
imul
mov
mov
ja
sub
add
cmp
in
add
popf
arpl
jae
fdivr
dec
cmp
sbb
sbb
and
and
stos
add
mov
loope
loopne
rcrl
mov
mov
repnz
outsl
mov
dec
dec
dec
mov
mov
movhps
rcrb
in
js
fildll
imul
push
sahf
gs
cmp
add
ds
xor
fwait
lods
or
out
mov
mov
fs
hlt
or
in
mov
pushf
arpl
mov
and
mov
int
dec
fsts
lods
inc
cmp
dec
cltd
and
into
test
lods
pop
lods
cmpsl
cmp
cmp
movsl
insb
test
sbb
mov
fidivrl
mov
addr16
mov
dec
mov
dec
xchg
fwait
mov
xchg
mov
sbb
scas
cmpsl
fstpl
jo
in
inc
ret
arpl
lds
jnp
stos
daa
iret
add
fmull
fadds
movsb
pop
mov
inc
push
stos
stc
cmpl
data16
pop
pop
mov
rol
jl
and
fscale
pop
mov
jnp
and
out
pop
jb
sarl
dec
add
mov
inc
push
adc
lcall
inc
push
push
fstp
loopne
popf
shr
jo
shlb
lahf
and
pop
cmpsb
cmp
xchg
fidivrl
xchg
nop
mov
and
fldcw
mov
data16
mov
add
popf
push
rclb
cmp
dec
and
jne
lds
mov
xor
mov
loop
push
xlat
ds
jo
mov
imul
int3
arpl
fsubrs
shrl
icebp
push
dec
pop
orl
mov
pop
cltd
jne
lret
cmp
into
cmp
les
adc
repz
hlt
pop
add
push
add
ds
popa
fsubrl
push
dec
cmpb
cmp
aad
inc
push
shll
pusha
in
jbe
pop
cmovae
mov
mov
push
fbstp
or
ds
push
lods
pop
cmp
lock
lea
jns
inc
scas
dec
stos
jmp
sbb
push
adc
ss
cwtl
adcl
add
sbb
andb
dec
aaa
adc
cmp
cmp
sub
cli
push
in
movsl
icebp
test
fdivrs
sbb
out
jae
adc
or
cmp
mov
or
adcb
push
and
inc
pushf
cli
jmp
dec
add
push
out
es
out
pop
je
or
stos
fisubs
std
jb
xor
xchg
lret
pusha
fdivrs
add
mov
stos
test
cmp
xor
shl
cmp
ficoml
test
imull
shr
cmp
jg
mov
mov
fistl
cs
pusha
jb
out
add
pop
mov
mov
rcr
ljmp
jmp
fs
cmp
mov
movsl
dec
xor
xchg
sti
mov
fdivr
sub
ljmp
mov
cmpsl
jae
jecxz
dec
popa
mov
xchg
cmpsb
sub
sub
add
jns
push
lock
sbbl
sub
mov
mov
xchg
loop
adc
ds
dec
fstl
cmp
add
pop
out
imul
shrl
fimull
hlt
mov
jl
and
loopne
jnp
fcoml
push
sbb
mov
xor
push
leave
mov
fs
cmp
es
push
add
lds
ret
sub
adc
xchg
add
sbbb
inc
cli
xchg
aaa
mov
mov
mov
mov
ret
pop
enter
shrl
outsl
pop
inc
ljmp
xor
fiaddl
enter
subl
icebp
and
cmc
mov
fdivr
test
imul
jge
rolb
nop
ja
xchg
cmp
sub
lods
and
adcb
lods
stos
xor
hlt
adc
add
xchg
sub
xor
icebp
pop
sahf
adc
jbe
test
add
shl
ss
cmp
pop
inc
push
cmp
js
jge
mov
mov
imul
or
sub
cmp
mov
push
mov
xor
loop
dec
into
inc
in
rcl
push
add
insb
sub
jl
add
xchg
pop
mov
push
mov
addr16
shrb
inc
inc
bound
aad
pushf
xchg
outsb
sbb
jnp
js
jl
cmp
mov
popf
pushf
lods
sub
jne
in
pop
sar
xchg
mov
xor
fs
mov
sub
test
orb
jecxz
bound
sbb
sbb
popf
imul
enter
jle
push
push
add
mov
fnstcw
mov
imul
add
sbb
jp
pop
iret
je
adc
and
mov
shll
popf
mov
loopne
or
out
cmp
cmpsb
dec
add
xor
lea
pop
inc
sbb
in
add
bound
data16
test
test
out
pop
cmp
xor
dec
cwtl
in
dec
sub
mov
sarb
pop
mov
sbb
mov
repz
insb
lock
scas
push
add
push
daa
shlb
pushf
std
fldt
std
mov
je
or
test
stos
iret
pop
js
pusha
lock
inc
je
pop
aaa
or
and
or
cs
repz
jb
iret
jl
or
cli
push
dec
insl
test
push
lds
dec
dec
lret
xorl
lahf
jg
in
pop
mov
lret
inc
dec
mov
test
scas
or
dec
repnz
sub
popf
imul
test
push
jmp
mov
mov
incl
ss
pop
mov
adc
xchg
dec
xchg
insb
jle
cmp
adc
or
rolb
rcl
inc
push
jge
xchg
mov
adc
mov
fmuls
dec
shl
fsub
and
popa
pop
jecxz
pop
dec
repnz
sub
and
xlat
push
pop
xor
mov
gs
cmpsl
ret
icebp
int3
jo
adc
cmp
rcll
mov
sub
scas
pop
or
cmpb
jno
mov
iret
push
lods
in
jg
test
lea
mov
dec
adc
sub
pusha
pop
xchg
pop
cmp
mov
aad
jne
ror
insl
adc
aam
and
and
enter
sbb
arpl
mov
outsb
inc
mov
inc
aam
xor
fs
mull
add
out
dec
push
and
fdivrs
mov
in
insl
in
inc
mov
js
bound
lret
xorl
xor
sahf
xor
dec
cmpl
ret
mov
shrb
lahf
cmp
pusha
pushf
mov
xor
push
lcall
add
adc
cli
enter
stc
push
jle
mov
ret
dec
or
xor
cmp
jbe
sbb
incl
cmpsl
mov
ja
jb
pop
mov
cmpsb
fwait
xor
cmp
loope
movsb
les
xor
ljmp
inc
xlat
xchg
repnz
in
mov
lcall
fbld
bound
sarl
int
stos
jmp
dec
and
xor
mov
lods
mov
scas
cmpsl
data16
aam
sbb
xchg
subb
aas
shlb
jbe
adc
sub
sbb
cs
hlt
push
popf
push
outsb
add
cwtl
es
loope,pn
cmpsb
int
les
lea
test
int3
dec
xor
inc
bnd
mov
scas
adc
mov
nop
fs
daa
lahf
dec
lret
xor
jb
das
dec
mov
add
xlat
xor
add
and
bound
or
fs
int
outsb
mov
imul
lret
pop
fcom
insl
lret
ss
sub
fnstenv
in
adc
push
pop
pop
out
pushf
clc
mov
mov
aad
push
inc
push
dec
popf
sbb
dec
push
fs
test
jns
xchg
leave
lcall
jle
sub
add
xlat
nop
dec
pop
cmc
cmp
jecxz
es
push
dec
loopne
test
mov
stos
cmc
mov
mov
movsl
in
shrl
lahf
inc
sbb
sbb
dec
sub
fadds
mov
push
clc
fistps
jp
add
lret
or
cmp
mov
jge
ds
push
ds
es
jbe
iret
mov
pushf
lea
in
or
fidivl
push
divb
ret
rcll
int3
mov
mulb
push
jbe
xchg
cwtl
xchg
test
sbb
test
sub
dec
push
pop
icebp
cmp
xor
inc
cmc
jl
mov
jle
cmp
js
ja
rorl
repz
aam
repz
outsl
psubusb
shl
and
movsb
enter
bound
mov
orb
mov
dec
je
rcll
aaa
pop
scas
in
stos
loope
cmp
arpl
sti
js
sub
xor
dec
jecxz
mov
and
push
movsb
and
mov
out
loopne
stos
test
inc
scas
call
adc
sahf
stc
popa
mov
cwtl
pop
fildll
loopne
xchg
out
cmpsl
mov
ficompl
lahf
jns
sbb
gs
arpl
add
jmp
pusha
adc
inc
push
imul
shlb
repnz
into
and
jb
hlt
cmp
fwait
and
sahf
add
jp
cli
push
into
xchg
add
ds
lods
in
push
push
inc
sbb
pop
shlb
lods
fsts
test
pop
cmp
xor
int3
pop
fisttpll
adc
cmp
mov
jbe
push
jae
and
test
cmp
js
cmpsb
out
sbb
xchg
xor
aas
jle
sbb
push
push
in
mov
movsb
ljmp
subl
lcall
in
lret
inc
pop
push
jae
inc
mov
jo
mov
mov
mov
mov
fidivs
push
dec
jl
clc
sahf
adc
out
xor
xchg
dec
and
mov
jle
enter
cmp
xor
gs
aad
inc
lods
imul
or
mov
cmp
pop
pushf
inc
loop
sahf
xor
dec
in
mov
notb
dec
cltd
aaa
fimull
cli
jp
fucomp
pop
ja
leave
lds
cmp
xor
mov
out
and
add
test
lret
cli
or
out
pushf
xor
in
mov
add
add
je
add
nop
xchg
jle
sbbl
fyl2xp1
dec
hlt
aaa
scas
jp
and
fwait
cmpb
mov
pop
imul
std
push
fcmovbe
pop
xchg
add
add
mov
push
popf
in
addr16
insl
mov
mov
push
fmull
insb
push
into
arpl
cmp
loope
cmp
jnp
lahf
jbe
aad
or
jno
jg
mov
adc
jo
mov
ss
popf
xor
push
call
dec
movsl
xor
pop
test
sbb
mov
cmpsl
sub
dec
aam
rclb
outsb
test
xor
cs
aaa
mov
scas
sti
xchg
ja
jge
lock
cs
push
nop
jae
sti
loope
fsubl
fidivs
std
test
xor
cld
dec
push
adc
cmp
cmpb
stos
xor
mov
dec
gs
adc
push
pop
arpl
in
jmp
lds
or
rorl
mov
ds
xchg
sbb
add
popa
inc
pop
insb
inc
pop
inc
lds
xchg
mov
pop
and
repz
xchg
in
mov
xorl
orl
push
pop
aam
or
adc
xchg
inc
jecxz
xchg
outsb
sbb
mov
imul
xor
cmp
scas
out
pop
sbb
rcrb
add
repnz
or
scas
push
jecxz
dec
enter
in
cli
inc
pop
clc
aaa
mov
pop
dec
sub
dec
xorb
imul
cmp
shl
mov
inc
clc
cmp
dec
in
sbb
lds
imul
imul
shll
lret
jl
and
ds
jg
inc
pop
pushf
xor
sub
mov
add
imul
mov
lods
push
fistpll
out
data16
pop
pop
pushf
inc
gs
shlb
lret
mov
ds
in
clc
add
sbb
fbstp
inc
enter
stc
or
aaa
mov
leave
call
push
subb
int3
sbb
mov
push
arpl
or
aas
push
xlat
jmp
stc
or
xchg
loopne
leave
arpl
inc
and
bound
cltd
sub
xchg
lahf
fwait
xlat
ficoms
jbe
mov
mov
push
jnp
aas
fld
sbb
sub
jle
dec
dec
fs
inc
loope
sub
and
lret
mov
adc
jne
cmp
fcmovnu
inc
or
repnz
lods
inc
pop
fcompl
push
sahf
test
stos
pop
lret
xor
aas
mov
or
lahf
mov
sbb
pusha
mov
xchg
lods
js
or
subb
and
lock
loop
stos
test
mov
adc
in
jbe
adc
mov
or
adc
cltd
js
out
insb
jns
mov
adc
and
push
or
hlt
xor
mov
adc
xor
and
push
jle
out
xchg
add
adc
mov
pop
add
pop
andb
mov
mov
adc
xor
ret
xchg
cltd
ss
jmp
mov
lcall
jg
mov
pop
rclb
or
dec
sub
andb
ret
hlt
test
sub
push
fldenv
cmp
xor
fisubl
inc
arpl
and
jns
xchg
sub
dec
data16
sub
push
jo
mov
push
cmpsb
test
adc
cmp
cmc
and
stos
mov
lret
rorl
mov
les
loope
add
cld
adc
inc
and
out
pop
mov
mov
imul
fwait
std
mov
stos
pop
cmp
push
shlb
lcall
mov
enter
dec
jle
aam
jle
clc
pop
es
inc
lods
jo
mov
fistl
push
ds
in
or
call
aaa
inc
lock
mov
aas
add
mov
or
adc
mov
fildll
xchg
ret
inc
add
sbb
xor
sbb
in
dec
popf
xor
shlb
rcl
cmp
pop
out
negl
js
cmpsl
cld
int
aaa
mov
jb
push
push
fucomp
push
push
xor
or
cs
les
popf
cld
xchg
push
push
pop
ja
scas
cmp
lcall
and
in
inc
pop
pop
mov
movsl
lret
inc
push
mov
push
push
xor
xchg
mov
negb
outsl
add
sub
ret
or
scas
push
divl
notl
or
add
xor
lcall
or
cmp
sbb
mov
mov
test
lret
icebp
cltd
jnp
mov
fcmovnu
jno
xchg
push
clc
pop
inc
push
mov
nop
adc
sub
ds
scas
and
bound
cmpsl
mov
jo
dec
shll
cmpsl
jp
les
add
mov
inc
subl
test
outsb
loope
xor
mov
adc
sbb
scas
fdivrl
stc
mov
daa
pop
dec
int3
inc
add
jl
out
push
hlt
ss
jnp
dec
test
cltd
mov
pop
aas
jmp
mov
xchg
pop
sahf
int3
sub
jns
inc
and
xchg
in
pop
outsl
shl
push
adc
test
mov
inc
in
aaa
flds
dec
test
pop
ds
and
hlt
adc
dec
add
mov
xchg
scas
sbb
ds
ja
fisubs
and
mov
ficompl
sub
jae
push
movsl
sub
rcl
pop
lds
inc
mov
xchg
int3
mov
mov
in
inc
gs
mov
outsl
mov
and
ss
out
jnp
xchg
stos
jle
mov
popa
pop
popf
sub
das
bnd
icebp
or
push
insl
mov
sbb
push
icebp
ss
loopne
mov
xchg
inc
test
lahf
sbb
cltd
rorb
jp
imul
popa
dec
shlb
out
mov
pop
rcr
out
test
dec
in
mov
inc
xor
scas
faddl
sub
sbb
lds
xchg
sub
inc
inc
mov
or
outsl
sbb
mov
mov
loope
dec
call
dec
cmpsb
out
xchg
add
jbe
push
mov
aad
stos
pop
les
andl
push
data16
sbb
js
out
adc
outsl
jnp
and
cwtl
mov
shl
lret
cmp
outsb
in
fdivs
fsubp
loope
adc
mov
cmpl
out
xlat
das
ljmp
add
push
mov
shlb
push
push
sbb
mov
rcll
mov
jle
dec
dec
inc
fstps
push
dec
in
insl
pop
loope
sub
push
jmp
stc
sub
stos
and
mov
sub
subb
xor
fsubr
aaa
push
xor
xchg
cmp
into
and
and
inc
xchg
dec
sbb
mov
inc
sahf
ss
and
mov
adc
iret
xor
bound
int
out
test
push
or
cs
pop
lods
jb
les
notb
pop
repz
jno
inc
mov
push
shlb
loop
mov
sub
cld
lods
cs
dec
insb
gs
aad
mov
pop
repz
js
lock
lret
cmp
loope
icebp
adc
mov
movups
mov
pop
mov
stos
cmp
dec
clc
pop
stc
je
xchg
jns
dec
adc
sbb
pushf
lret
negb
sbb
rcl
imul
jbe
daa
jl
cmp
je
inc
cmp
mov
in
ss
cmp
pop
sbb
jmp
fistps
arpl
and
xor
and
and
lock
or
movsl
dec
divb
push
and
xchg
xchg
push
mov
jecxz
scas
adc
adc
idiv
sub
movsl
out
lret
scas
fdivrp
jge
add
ss
inc
mov
cli
mov
add
out
pop
sub
daa
mov
mov
test
mov
adc
or
loopne
mov
mov
mov
sahf
or
insb
jne
lcall
adc
mov
neg
mov
jg
sbb
push
jo
add
lar
cltd
adc
outsl
test
mov
aam
pop
push
mov
adc
sar
out
mov
mov
cmp
xor
std
mov
test
adc
xor
enter
mov
jmp
xchg
sub
and
xor
add
sbb
sti
inc
mov
test
pop
pop
cmp
ja
mov
rclb
addb
loopne
adc
lock
je
xor
aaa
cltd
out
push
dec
cmp
inc
fsubrl
push
adc
adc
cld
ja
xor
in
outsb
shll
lds
insb
cmp
xor
and
loop
adc
xor
insb
cmp
mov
jp
cli
out
fistps
fidivrs
adc
in
fimuls
in
mov
fwait
dec
fisubrl
cmp
dec
jo
pop
addr16
stos
sbb
nop
mov
or
adc
adcb
or
xchg
ds
push
movsb
sbb
adc
or
adcb
jo
sub
jg
orl
data16
or
fcomi
sti
stc
sub
xlat
mov
adc
mov
inc
jg,pn
popf
cmp
loope
out
or
imul
cmc
cmp
fldl
lock
jns
push
out
cwtl
pop
dec
loop
mov
mov
push
or
pop
jg
mov
add
push
mov
bnd
adc
adc
xchg
ret
mov
mov
ss
jl
xchg
movl
rcrl
jmp
xor
insb
xlat
stc
fbstp
sub
and
push
jmp
sbb
int
mov
xor
fbld
inc
ljmp
fldcw
clc
lret
test
inc
jnp
and
sub
jg
stc
popf
cwtl
xor
jmp
xchg
std
adc
pop
push
sbb
push
add
out
shlb
inc
or
cmpsl
inc
mov
adc
inc
lcall
jge
or
sbb
lds
sti
xchg
add
sarl
into
xor
or
jnp
dec
dec
popf
stc
out
mov
cltd
andl
std
mov
std
xchg
mov
les
mov
add
popf
subb
add
loope
in
hlt
mov
add
les
stos
gs
fisubl
les
insl
stc
ja
mov
ret
xchg
ljmp
rcll
or
mov
imul
in
imul
aaa
lcall
sti
sub
dec
pop
outsl
outsl
or
jge
cltd
pop
fisubrs
mov
aaa
inc
dec
in
fwait
mov
fnstsw
xchg
loop
cmc
cld
cmpsb
add
dec
xor
cmpl
in
cmpsb
push
sub
shrl
fucomi
push
rcll
cmpsl
ds
mov
mov
lds
lahf
mov
repz
out
icebp
loope
pop
add
and
inc
jb
aad
popa
rcr
xchg
ljmp
ficoml
xorl
or
repnz
add
movsb
mov
push
sub
pop
je
add
cmp
push
and
push
sbb
out
push
in
in
sub
adc
incl
mov
out
dec
pop
idiv
cmpxchg
jo
push
shr
loop
imul
adc
ss
scas
addr16
add
adc
push
in
ja
mov
lret
mov
xchg
dec
inc
test
mov
adcb
out
std
xlat
aad
mov
adc
xor
lods
call
mov
pop
jmp
int3
lret
pop
out
pop
push
je
jmp
pop
repnz
mov
adc
test
ds
das
sbb
or
mov
mov
mov
add
pop
lds
mov
adc
pop
jno
and
xchg
or
sbb
notl
jo
xchg
jno
scas
xchg
arpl
xor
sub
sub
mov
mov
push
jg
leave
mov
xchg
dec
insb
xchg
sub
sub
xchg
sbb
jl
pusha
xchg
mov
fmull
xor
aas
int3
mov
into
adc
enter
data16
adc
fisttpll
in
xchg
cmc
mov
or
mov
sbb
mov
jge
int3
pop
ret
fstpl
jecxz
jmp
frstor
mov
lock
dec
mov
inc
fiaddl
xchg
insl
inc
sub
xor
cld
jmp
push
aam
fsubrl
daa
inc
jmp
mov
and
lods
mov
push
jg
ljmp
push
imull
xor
lahf
fdivl
sub
push
mov
idiv
repz
mov
sbb
sbb
dec
pop
jg
mov
sbb
pop
push
mov
cltd
cmp
andl
dec
sbb
inc
mov
jno
icebp
pusha
lock
mov
add
push
insl
pop
cmp
dec
xchg
xor
pop
cmp
sbb
push
aas
js
dec
cmp
pop
cmp
in
push
nop
scas
cmc
sbb
mov
rorb
xchg
outsb
out
daa
mov
test
inc
and
mov
scas
nop
pop
aam
mov
xor
push
pop
add
aam
lea
fnstsw
jns
mov
xchg
lcall
mov
and
ret
pop
xlat
les
ljmp
lret
cmp
shlb
ret
call
lods
add
fwait
ret
fsubl
mov
lock
ret
stos
push
sbbl
arpl
dec
xor
les
cmpsb
jl
sbb
aam
sbb
rorl
outsb
aas
dec
ret
fsubrl
inc
push
or
andb
jp
dec
dec
sub
xchg
push
inc
lret
cmp
push
push
push
sub
shll
aam
fdivr
and
test
push
lahf
loope
das
movsl
or
inc
mov
jae
test
or
out
ret
mov
pop
push
jp
push
lods
test
popf
movsl
sarb
stc
fldt
add
repz
js
adc
into
lods
out
lcall
stc
shrb
mov
gs
pop
mov
pop
ja
fstpl
repnz
and
pop
scas
pop
jp
push
mov
xor
xchg
sbb
outsl
push
cmp
stos
mov
jbe
sub
xchg
sub
dec
loope
inc
mull
fs
and
lahf
dec
shl
pop
out
sbb
dec
cmp
inc
push
mov
mov
lock
fldcw
popf
adc
push
out
mov
sub
scas
lret
mov
or
sub
push
push
jl
sbb
jo
stos
cld
mov
aam
out
add
sbb
dec
pop
push
cmp
lahf
and
sub
xlat
dec
jp
lods
xor
lods
cltd
push
xor
dec
xchg
divb
mov
fstl
in
paddb
sbb
mov
jle
repz
mov
cmpsl
pushf
popa
gs
mov
clc
rol
jg
iret
xor
lahf
call
mov
inc
add
rcrl
in
adc
push
pop
and
lock
dec
mov
jno
test
add
sarl
or
das
shrl
adc
cs
push
imul
or
cwtl
push
adc
pop
jmp
cwtl
and
inc
jbe
ss
in
test
iret
in
ret
sub
leave
and
pop
popa
insb
jle
icebp
mov
dec
pop
int
mov
jge
or
pop
adc
cwtl
cwtl
mov
adc
js
mov
xor
cmp
das
pop
aam
in
push
inc
dec
push
add
mov
arpl
adc
cltd
daa
pop
mov
push
int
push
jp
leave
shll
cltd
cmpsl
push
dec
sub
fdivs
push
rorb
hlt
mov
fwait
sub
shlb
add
aaa
inc
dec
adc
dec
inc
dec
mov
pop
sub
cs
push
movsb
jnp
xor
mov
cld
jne
int
push
inc
xchg
mov
fldenv
insl
jno
sbb
or
loop
xchg
push
into
add
xor
mov
dec
jne
jae
pop
add
aas
fidivl
jg
mov
pop
or
or
ja
sbb
shlb
and
scas
push
loopne
xchg
and
sahf
mov
imul
ret
stc
mov
pop
pop
popf
adc
into
push
pop
lret
je
add
in
pop
lods
cmp
sbb
adc
push
jl
dec
push
add
je
dec
pop
ljmp
xchg
xor
adc
push
data16
loope
std
adc
gs
ss
out
addr16
repnz
lods
or
loopne
or
xchg
dec
jne
push
pop
sub
arpl
in
shlb
jmp
ret
shl
rorl
cli
out
les
fldl2t
lods
push
add
test
xor
mov
fdivp
jno
cmpsl
mov
orl
sbb
sub
pop
insl
dec
inc
iret
jbe
call
add
aaa
and
movsl
fists
movsb
inc
ja
mov
pop
int3
mov
push
subb
pop
sub
adc
jns
sub
std
mov
and
mov
pop
dec
push
xchg
loopne
sbbb
sbb
xor
xchg
inc
pop
cmpsb
adcl
mov
sub
inc
dec
sbb
xchg
mov
aas
mov
sub
xchg
mov
or
hlt
mov
test
ljmp
dec
cmp
out
ja
flds
add
push
sbbb
xchg
cmpsb
cmpsl
stc
rcrl
mov
jae
push
cs
pushf
inc
fcmovne
rorb
mov
bound
pop
ja
inc
xor
and
add
test
orl
popa
out
mov
pushf
cmp
cmp
xor
add
mov
movsl
dec
pop
movsb
mov
sub
insl
sbb
loopne
out
iret
in
inc
mov
cld
xor
faddl
icebp
sbb
cmovne
pusha
add
psrlw
xor
pushf
mov
fisubl
hlt
aam
lds
and
aad
jns
lahf
fistpll
jmp
pushf
xlat
pop
cmpb
std
mov
and
ret
pop
xlat
and
int
movsb
cmp
or
addb
mov
jmp
mov
sarl
es
stc
shrd
scas
inc
add
mov
mov
das
addb
je
or
inc
sti
xchg
pop
mov
dec
popa
clc
mov
sub
sbb
dec
arpl
cmpsb
xchg
dec
jno
outsb
arpl
mov
lock
inc
movsl
out
mov
inc
jnp
js
dec
out
popa
mov
scas
mov
adc
jo
int3
setle
stos
push
xor
int
jne
sbb
leave
loopne
adc
shll
mov
sbb
pop
imul
jae
sub
dec
sbb
adc
and
jo
test
mov
sbb
mov
xor
jecxz
cld
pop
test
leave
mov
dec
rorl
cmp
pop
int3
adc
into
sub
stos
sbb
add
add
mov
fildll
jb
gs
rcll
jo
sbb
loopne
ret
cld
shll
xor
jmp
pop
push
icebp
movsl
add
push
or
or
cmp
orb
out
mov
jne,pn
mov
mov
mov
xor
xchg
sahf
push
cli
out
xor
fsubrs
dec
insl
mov
shrb
mov
scas
inc
inc
addr16
sbb
int3
mov
aam
fcom
dec
jnp
jbe
fidivl
xchg
pop
addb
and
mov
push
mov
mov
pop
cld
pop
dec
das
mov
loopne
add
shrb
push
sbb
push
paddusb
push
inc
cltd
ljmp
jno
jecxz
pop
cli
scas
inc
sub
cltd
stos
ror
sbb
push
sbb
add
imul
shll
mov
shrl
mov
aaa
mov
sub
or
mov
loop
pop
insb
shlb
cmp
fists
xchg
inc
or
clc
xor
jne
inc
int
mov
dec
mov
insl
cwtl
js
dec
mov
jb
cltd
sub
negl
enter
sub
out
cli
hlt
das
cmp
lds
lds
frstor
xchg
and
in
repz
lods
data16
or
mov
jae
and
cli
daa
mov
sub
mov
xlat
testl
loopne
aas
fwait
ret
outsb
mov
cmp
lahf
and
lds
jns
imul
les
mov
jb
adcb
cmpsl
adc
aam
stos
jge
cmc
gs
cmpsl
loopne
in
pop
ret
inc
xor
mov
in
stc
pop
fs
rclb
loop
iret
inc
adc
movsb
jbe
inc
sub
cmp
lods
add
in
jne
pop
idivl
cmp
fmuls
js
pop
ss
test
jge
test
test
mov
jmp
sbb
dec
mov
call
cmp
mov
mov
dec
pop
adc
sbb
mov
jl
xchg
dec
sbb
dec
pop
adc
roll
pop
mov
sbb
cmp
cmp
lods
shll
mov
lret
and
inc
imulb
adc
jge
test
push
out
xchg
fistl
inc
arpl
out
test
rol
pop
push
xchg
gs
and
mov
mov
fcmovne
sbb
xchg
dec
cmp
mov
inc
sbb
cwtl
ss
cmc
pop
scas
mov
push
sbb
add
call
fdivr
test
inc
xlat
lea
stos
jbe
jecxz
adc
scas
mov
fsubrp
xchg
mov
jns
out
insb
dec
lds
jne
sub
lahf
and
roll
or
rorl
movsl
dec
dec
subl
scas
push
addr16
inc
lods
mov
adc
lahf
and
and
daa
hlt
stc
mov
cmp
sti
xchg
mov
mov
push
add
jo
les
adc
scas
xor
je
pop
xor
add
je
and
lods
mov
inc
push
adc
icebp
adc
xchg
or
gs
push
mov
add
push
in
xchg
mov
mul
je
dec
cmpsb
or
dec
stos
xor
pop
outsb
mov
hlt
insb
mov
xchg
lock
daa
shlb
mov
imul
mov
notb
nop
jp
jns
adc
cmp
imul
cmp
sbb
inc
dec
and
sub
mov
inc
lret
das
sub
jnp
test
dec
popa
pop
mov
sub
push
and
pop
xor
nop
cmp
dec
loop
outsl
rcrl
xchg
jmp
int3
sti
xchg
jns
fsubrl
cmpsl
dec
scas
mov
addr16
mov
mov
xchg
adc
ds
in
std
call
cwtl
sti
add
gs
mov
imul
sbb
std
cltd
push
mov
rcr
sbb
mov
fimull
adc
pop
or
jbe
mov
les
loop
xor
fwait
or
mov
repz
imul
mov
or
movsl
mov
push
in
test
dec
movsl
jl
andb
sub
mov
pop
outsb
hlt
addl
and
add
and
mov
xor
mov
mov
daa
inc
sbb
clc
sub
sub
sbb
fs
sub
and
stos
cmp
inc
add
pop
aaa
call
mov
shll
addr16
sbb
xchg
mov
loop
int
xlat
fsub
sbb
push
or
pop
inc
jl
and
aaa
sub
mov
mov
lcall
in
setb
jns
sub
inc
push
or
xor
add
fisubrs
sub
dec
pop
lods
push
pushf
push
fcoms
nop
ljmp
dec
push
sti
xchg
je
mov
cmc
cmp
ret
insl
add
hlt
inc
push
mov
out
sbb
ret
adcb
dec
imul
ret
rcll
and
repz
loope
scas
dec
ljmp
out
sbb
int
dec
bnd
mov
imul
mov
out
cmp
cli
icebp
sub
js
adc
in
fldenv
int
fisubrs
ret
dec
jecxz
mov
fidivrl
movsb
jns
fbstp
mov
pop
and
rcll
js
rep
inc
and
push
dec
cmp
ss
frstor
mov
pop
push
mov
jle
pushf
jno
in
mov
xlat
inc
jns
xchg
mov
cmpsl
pop
mov
xor
test
out
pop
dec
jbe
sbb
sbb
or
cs
xor
jb
aam
outsl
and
subl
mov
pop
mov
outsb
cmp
pop
clc
shll
mov
pop
out
mov
hlt
pop
imul
pop
xlat
or
cltd
es
sti
cltd
test
cmpsb
das
insb
jle
lret
add
clc
jns
mov
sbb
or
test
push
hlt
cmp
dec
addr16
jnp
dec
aaa
cld
pushf
test
into
mov
insl
sti
jmp
sbb
mov
inc
and
fisttpl
ja
inc
cmp
ret
add
fs
inc
push
jecxz
and
mov
insl
add
popf
test
in
cmp
insl
sbb
out
mov
das
gs
js
test
daa
repnz
inc
pop
clc
cwtl
subl
xor
out
pop
mov
pop
jne
mov
mov
cli
adc
lahf
pop
pop
dec
xor
pop
cli
add
insl
test
outsl
mov
cwtl
xor
or
and
ficoml
shll
mov
scas
add
in
inc
js
push
cmp
jecxz
mov
cmp
dec
jecxz
add
icebp
mov
or
nop
cmp
cmpsb
jns
popf
orb
nop
call
jmp
mov
test
mov
push
mov
aaa
les
test
adc
jne
lds
clc
mov
push
and
sbb
or
testl
jecxz
pushf
arpl
fmuls
cmp
sbb
adcb
mov
inc
fisubs
xor
add
xchg
jp
jno
jns
jle
sub
insl
in
dec
or
adc
ret
mov
popa
xchg
dec
cmc
jp
mov
adcb
adc
lds
test
div
inc
outsb
fstl
sbb
ret
xchg
jns
cld
and
outsb
sub
fwait
push
fdivp
pop
or
sub
andl
mov
mov
js
and
dec
and
mov
cmc
mov
push
call
fcmove
dec
and
inc
dec
pop
inc
es
jb
fnstcw
pop
call
adc
dec
xchg
add
repz
xor
jae
pushf
dec
inc
sbb
sbb
adc
add
mov
test
push
repz
inc
xlat
cmp
stc
sub
out
scas
jnp
mov
iret
outsl
pop
cwtl
pop
ret
jge
jae
pop
aad
fstpl
stos
jl
lods
push
enter
sarl
xchg
xchg
push
dec
pop
movsb
dec
imul
add
sub
clc
sbb
adc
dec
mov
sbb
pop
je
cmp
cmp
push
xor
dec
pop
pop
rclb
mov
ficomps
push
mov
decb
pop
pop
iret
xor
gs
pop
fiaddl
imul
mov
test
sub
les
imul
orb
mov
lcall
movsl
insl
mov
decl
fmul
rclb
rcrl
call
xchg
jle
xchg
in
sub
movsb
addr16
lods
or
push
cs
imul
xor
test
fstl
mov
push
push
push
push
xchg
cmp
clc
sbb
je
stos
pop
mov
js
mov
xor
xor
mov
ret
jg
jb
jnp
and
adc
and
mov
test
into
mov
xchg
nop
out
shll
imul
inc
pop
mov
and
dec
mov
gs
or
leave
int3
in
fdivrs
inc
xor
jb
lods
ljmp
call
push
push
outsb
push
mov
lret
insl
jmp
lahf
subl
inc
xchg
outsl
daa
inc
ret
movsl
outsb
ja
popa
shll
adc
dec
es
je
sub
mov
stc
fcomps
and
push
mov
xchg
and
sahf
xchg
xchg
movsb
mov
push
xor
jb
movsb
in
jecxz
and
movsl
xor
jbe
or
push
and
cld
mov
stos
pusha
xor
mov
push
push
mov
into
xchg
test
ljmp
jecxz
sarl
sub
int
lret
push
rclb
mov
leave
rolb
loop
ljmp
icebp
dec
nop
xchg
jno
push
sub
std
inc
or
jp
mov
jmp
sti
push
cmpsl
repz
mov
mov
jbe
and
es
cmpsb
daa
inc
mov
pop
movsb
inc
rorb
push
insl
sub
xchg
pop
adc
je
mov
xchg
push
dec
mov
jae
into
push
popa
inc
xor
inc
mov
mov
nop
jl
mov
and
fstl
pop
adc
lahf
sti
clc
aaa
outsl
inc
sbb
or
mov
mov
dec
jp
add
add
stos
or
pop
sarl
mov
jbe
xor
sub
push
or
pop
inc
push
in
pop
jle
cmpsl
ja
mov
dec
push
out
iret
xor
lock
inc
inc
lret
imul
jg
pop
lret
loop
pop
adc
jae
nop
sarb
and
adc
stos
cmp
test
add
jnp
jecxz
test
jecxz
fsubs
add
sahf
sub
enterw
xchg
add
rcr
in
mov
xor
aad
pop
or
shrb
out
pop
repnz
xchg
jge
jns
or
sub
mov
sub
cmp
push
data16
data16
mov
enter
mov
pop
fnstsw
or
cmp
pop
sbbb
loopne
fcoml
sbb
xor
in
leave
fsubr
stc
push
or
cmp
pop
and
inc
mulb
in
adc
subb
jae
fcomps
popa
js
sbb
int
ss
fldt
inc
in
mov
aad
mov
ljmp
lcall
cwtl
push
arpl
and
push
dec
ja
push
ljmp
outsl
jnp
mov
in
sbb
jle
sub
icebp
mov
mov
lea
add
inc
adc
cmp
nop
ja
pop
add
jb
xchg
aaa
into
pushf
push
jb
or
inc
pop
xor
mov
fs
xor
or
out
rcl
fisubs
lea
mov
mov
sahf
mov
mov
cmc
fs
dec
fwait
mov
inc
aad
mov
mov
lret
and
fxch
gs
stos
out
jnp
in
in
dec
jmp
mov
pop
cmp
pop
in
pop
sbbl
and
mov
mov
inc
scas
jbe
mov
dec
jns
or
dec
lods
add
or
mov
adc
and
dec
mov
add
std
pop
xor
jp
adc
lret
sub
push
sub
insb
xchg
repnz
shrl
sbb
push
jne
cmp
adc
daa
nop
mov
sbb
or
call
fsubrl
inc
and
mov
mov
mov
adc
into
jmp
mov
mov
jge
xorb
in
adc
aaa
stos
cmp
dec
dec
jl
mov
xlat
add
sbb
cmp
js
pop
mov
jecxz
stc
xchg
pop
loopne
dec
adc
push
push
jecxz
je
idivb
cs
cmp
out
stos
sahf
dec
push
jmp
pop
add
test
pop
mov
stc
adc
cs
and
pop
dec
pop
lds
adc
inc
addr16
fmul
in
xlat
dec
imull
ds
push
pusha
cmpb
fnstcw
cmp
push
mov
loop
cmp
insl
xchg
mov
mov
mov
fnsave
sbb
in
hlt
mov
jg
mov
ret
mov
loope
push
fsub
add
loopne
mov
mov
orl
adc
mov
dec
cmp
jg
mov
xchg
scas
or
lret
iret
loopne
jnp
mov
aaa
iret
mov
jge
addr16
mov
jmp
jae
mov
cltd
push
xchg
insb
push
into
test
decl
add
mov
into
fsubr
cmc
pop
mov
cld
xchg
mov
adc
mov
ja
adc
pushf
scas
arpl
xor
int
xchg
add
out
lods
xchg
pop
cmpsb
into
add
mov
ret
and
pop
in
fcoms
pop
cli
addr16
out
sti
sub
loopne
dec
jmp
loope
sahf
shl
outsb
aas
shrl
lds
mov
sub
hlt
xor
pop
imul
fiadds
shl
ffreep
into
mov
xlat
popf
pop
aam
lea
or
addr16
std
pop
inc
jecxz
and
xor
jmp
stos
mov
in
ror
xor
loop
subl
lret
or
pop
mov
jne
and
mov
jmp
inc
adc
call
sbb
adc
insl
sbb
jo
movsl
cmp
xchg
xor
push
and
mov
inc
push
popl
fnsave
ljmp
icebp
adc
aas
push
imul
ret
call
cmp
sub
cmpsl
imul
in
test
mull
mov
mov
iret
roll
mov
jae
out
push
js
lea
jne
lods
outsl
aam
add
ja
loopne
enter
int3
pop
fs
xchg
xchg
adcl
jp
fsubs
lock
jmp
cmp
add
xorl
dec
dec
dec
xchg
mov
loope
mov
jo
mov
add
sbb
stc
ret
jno
pop
xchg
xlat
lea
cmpxchg8b
jns
mov
push
fcmove
inc
xor
mov
sbb
push
and
jo
div
fsts
dec
xchg
nop
pop
sbb
xor
mov
mov
jle
ret
mov
and
jmp
aad
jge
lock
pop
xor
fbld
scas
sbb
sbb
fcompl
lret
xor
and
out
xchg
inc
xchg
pop
scas
add
dec
lods
out
jnp
stos
push
sarb
insb
outsb
mov
pop
dec
jnp
imul
or
xchg
cmp
adc
cmp
mov
xlat
mov
push
or
and
mov
dec
fiaddl
in
mov
scas
lds
iret
into
lahf
ret
cs
sub
xchg
mov
out
cmp
add
cltd
test
xchg
add
mov
test
dec
add
shl
xor
sahf
nop
sbb
mov
push
push
mov
pop
mov
add
stc
push
js
lret
stc
test
jne
push
popf
xchg
scas
mov
pop
scas
and
fcomip
mov
fdivs
push
test
mov
dec
out
repz
pop
clc
movsl
and
cmp
sti
inc
pop
das
into
pusha
fdivrl
cli
ss
ret
mov
js
mov
pushl
dec
sub
cmp
push
xor
push
push
inc
into
or
xchg
sti
push
inc
lods
xor
push
mov
test
ja
outsb
xchg
je
cmp
inc
fsubs
push
xor
lretw
cld
arpl
shll
test
lods
andb
fwait
popa
and
add
mov
jecxz
icebp
iret
insl
cmc
clc
mov
shrl
lds
cmp
into
cmp
lock
in
sti
stos
inc
pop
addr16
jbe
data16
push
sar
pusha
mov
sbb
sub
lret
mov
int3
push
out
repnz
outsb
sbb
dec
add
sar
dec
mov
fs
out
and
movsl
adc
or
adc
and
sub
sahf
clc
popa
sti
jo
push
leave
dec
cmp
into
loopne
bound
shll
pop
mov
dec
fxch
cli
mov
je
xchg
outsl
jnp
scas
mov
pop
movsl
ret
jbe
adc
push
lea
or
xchg
sub
adc
iret
cmpsb
or
cmp
xorb
cmp
das
es
mov
xor
jp
fsubr
es
cmp
fidivl
test
pop
fdecstp
mov
adc
sub
orl
call
lds
cwtl
cmc
out
dec
push
fstpl
mov
insl
insb
mov
mov
xchg
shlb
flds
lcall
shll
aaa
fstpt
sbb
xchg
push
dec
mov
jge
jae
ret
es
mov
push
jecxz
and
ret
cmpsl
or
jp
in
ret
cmp
pop
mov
xchg
push
ds
dec
repz
fs
inc
sub
lea
aad
lret
int
sub
das
or
push
cmp
out
nop
xchg
and
lcall
jno
and
sbbb
fiadds
rolb
cli
pop
fnstenv
aas
or
cmp
mov
test
ror
xor
jmp
mull
lock
push
adc
adc
js
mov
iret
fldl
mov
imulb
adc
sbb
pop
push
les
mov
mov
rol
iret
mov
idivb
mov
xchg
cmp
les
xor
xchg
push
stos
dec
shll
mov
mov
arpl
xor
unpckhps
ss
test
jo
shrb
dec
push
rcrl
dec
shl
sub
insb
cmp
sub
sbb
aam
leave
icebp
or
in
push
push
inc
push
xor
mov
sbb
inc
mov
xchg
lods
das
addr16
out
adc
inc
cli
cltd
fs
lcall
cmp
psubsw
mov
rclb
jmp
lret
dec
mov
pop
enter
aaa
add
out
shll
std
push
inc
pusha
stos
out
shll
lea
xchg
push
in
out
pop
push
mov
int3
jnp
fldcw
popa
outsl
cmp
gs
or
aaa
push
dec
bound
xchg
outsb
ficoms
jge
cwtl
pop
or
xchg
adc
lcall
gs
xor
xchg
shr
mov
jmp
pop
neg
idiv
xchg
imul
xchg
mov
mov
pop
push
mov
fistpll
add
leave
mov
cmp
add
mov
push
cmpsl
push
jmp
loope
pusha
not
cmpsl
mov
movsl
or
pop
fbstp
adc
xor
ucomiss
dec
aas
mov
and
dec
push
mov
sarb
xchg
icebp
or
push
outsb
cmp
fbstp
pop
mov
cmp
adc
in
xor
repz
sub
jle
xor
inc
pop
insl
xor
jbe
sub
fisubl
test
cmp
push
or
movsb
ret
mov
sbb
repz
mov
lods
test
mov
push
pop
sub
fs
inc
xchg
and
push
mov
xchg
aam
add
arpl
push
scas
inc
stc
sbb
dec
add
mov
sti
sub
fnsave
sbb
in
adc
push
aas
mov
test
bound
lock
test
stos
out
and
loope
leave
lods
and
pop
mov
shr
test
pusha
mov
popf
and
jl
sub
pop
pop
int3
xchg
jo
movsb
cmp
xor
sub
xchg
dec
add
mov
arpl
aam
shlb
les
pusha
mov
xor
sbb
out
call
mov
push
jae
testb
and
stos
das
cmp
in
lea
push
pusha
lea
test
pop
repnz
jns
push
stc
and
int3
fsts
jae
add
add
aaa
adcl
xchg
dec
lahf
clc
adc
loop
or
je
xor
loope
pop
outsb
out
aas
js
movsl
jmp
iret
sbb
fildl
rolb
in
xor
iret
and
add
mov
addr16
or
aas
mov
sub
insl
jge
and
and
xchg
and
cld
call
test
and
ficomps
jne
jnp
ljmp
jle
xchg
dec
mov
gs
fcmove
add
lods
cld
test
cmp
mov
cltd
fimuls
lret
fisubl
loope
mov
popa
ja
iret
inc
out
mov
addr16
cmp
or
push
lds
and
add
out
xchg
test
in
arpl
inc
hlt
fiaddl
scas
push
xchg
pushf
adc
sub
clc
sahf
mov
cmc
or
or
out
jle
inc
mov
cmpsb
lret
cmpsl
outsb
jl
jp
push
lods
cmp
dec
xchg
data16
dec
pop
jo
out
ret
xor
xchg
jle
mov
or
popa
stos
sarb
cmp
mov
xchg
sbb
mov
sahf
data16
push
repnz
loopne
cld
inc
dec
xlat
xchg
lods
pop
in
rclb
dec
cwtl
loope
mov
jmp
push
jo
jp
movsb
cmp
jnp
andl
jge
fsts
cmp
ja
dec
out
push
add
roll
cwtl
imul
inc
pushf
xchg
xor
or
xchg
lret
jo
dec
in
repnz
rcl
lock
sub
xor
pop
icebp
mov
push
je
insl
lcall
sub
or
cmpsl
xor
sub
mov
mov
dec
out
mov
sbb
xor
scas
lea
sub
dec
std
repnz
leave
test
and
mov
mov
and
push
mov
adc
push
xchg
push
outsl
rol
add
and
push
and
mov
add
xor
lcall
push
xor
stc
imul
pop
out
ja
mov
pop
pop
push
adc
pop
sti
lahf
jne
ret
add
pusha
mov
pop
mov
out
outsl
push
or
dec
cmp
rcrl
push
push
adc
add
fcom
js
xor
xor
mov
fst
sbb
enter
lea
fldenv
jo
popa
add
sbb
rcl
cld
cmc
rol
cmp
pop
mov
movsb
adc
cmp
inc
jcxz
aas
fldcw
pop
mov
pop
popf
aam
xor
xor
mov
mov
add
push
dec
mov
add
das
ljmp
aas
xchg
xor
movsl
cmp
data16
pushw
adc
popa
fs
cmp
mov
in
movsl
dec
dec
lea
cmp
cmp
aam
mov
sahf
cmp
push
cmp
mov
filds
mulb
cmp
movsl
loopne
add
cs
push
scas
mov
ds
outsl
loop
mov
test
insl
mov
std
scas
fimuls
xchg
mov
push
jns
or
mov
mov
js
repz
or
and
test
mov
pop
inc
pop
push
aas
pop
cwtl
pop
xlat
mov
mov
push
repz
fdivrs
and
pop
add
mov
fcmovnbe
outsb
or
mov
dec
sar
orl
test
in
jne
scas
jp
lahf
test
je
xor
xchg
sub
fidivrl
ret
xor
push
dec
out
or
in
push
pop
outsb
cmp
idivb
nop
sub
clc
mov
xchg
jge
mov
ficoms
pop
mov
mov
pushf
mov
push
cmc
push
or
loope
xor
in
dec
bound
push
loopne
into
mov
adc
inc
mov
or
jne
mov
dec
fwait
mov
mov
ja
es
push
scas
je
mov
mov
iret
jecxz
addr16
sbb
xchg
outsb
lods
fcomps
int
enter
out
jbe
mov
dec
rcl
cs
adc
jge
jnp
or
in
cwtl
lcall
dec
fistpl
fistl
jne
mov
sub
jbe
sub
cmp
scas
push
cmp
hlt
add
mov
in
iret
sbb
dec
rcll
aam
pushf
mov
dec
lahf
mov
and
push
fidivrs
mov
outsl
lea
aad
aas
mov
inc
movsl
push
push
ljmp
ss
mov
push
cmovno
add
mov
lods
std
add
rclb
add
scas
ljmp
inc
xor
orl
dec
cmp
push
inc
sahf
adc
in
iret
mov
lcall
push
psubsb
or
jo
jg
add
ret
stos
je
ret
push
lcall
and
xchg
imul
cmp
inc
pop
aaa
dec
mov
outsl
cmpsl
test
mov
push
sbb
sahf
cmp
jb
out
in
pop
mov
sub
leave
xlat
jmp
lahf
shlb
bound
add
cmpsb
fucomp
popf
xchg
inc
shl
lahf
and
mov
pop
push
ss
xor
xchg
shrl
leave
enter
decb
mov
dec
lods
xchg
jns,pn
push
mov
movsl
cmp
mov
xor
outsl
gs
int3
jmp
call
or
add
test
insl
mov
in
xorl
jge
cltd
pop
out
push
ss
fcomip
inc
dec
mov
adc
pop
add
sub
pushfw
xchg
mov
sarb
jbe
psubsw
inc
ss
inc
sbb
dec
fcomip
mov
push
leave
daa
jg
or
add
cltd
sub
out
stos
ljmp
inc
push
adc
ret
call
aas
loope
jmp
inc
sbb
loop
lods
push
inc
sarl
lcall
scas
jno
sub
adc
in
mov
cmp
cmp
jno
push
cmpsb
inc
adc
ficomps
test
mov
loopne
pop
adc
mov
pushl
xchg
sbb
es
xor
push
outsb
dec
fst
xchg
pop
fdivrs
push
in
mov
pop
scas
xchg
xchg
adc
lahf
push
xchg
xor
fdivl
mov
fucomip
or
jo
dec
xor
aaa
dec
jo
lahf
mov
sbb
cmpsl
outsb
adc
pop
fcoml
sub
pop
or
shlb
inc
jo
lret
loope
popa
cmp
fstpl
mov
scas
add
sti
sub
adc
xchg
daa
jno
scas
dec
maxps
scas
lods
insb
dec
mov
pop
push
push
and
cmc
int3
mov
sbb
imul
cmp
dec
ds
xlat
adc
push
cmc
pop
mov
out
stc
push
dec
dec
clc
xor
xor
cmp
and
push
sbb
mov
ss
pop
negb
and
dec
dec
xor
sub
or
mov
push
cmp
pop
addr16
push
pop
repnz
push
jmp
ret
jns
mov
mov
sbbl
jmp
cld
aad
pop
push
push
testl
ss
jge
pop
mov
jbe
in
out
xor
and
out
pop
cmpsb
add
mov
lds
sbb
add
leave
cmp
test
bound
ja
and
repz
insl
add
test
mov
loope
enter
fnstsw
into
addb
out
jbe
cmp
imul
push
icebp
mov
sub
pop
int3
paddb
cmp
jg
stos
mov
cwtl
out
fdivs
cmp
xchg
sub
into
pop
loopne
pushf
pop
mov
mov
fstps
das
dec
fldenv
sbb
xor
rcrl
jle
pop
sub
push
or
lret
std
lods
fwait
jns
or
xor
adc
repnz
pop
pop
cld
dec
push
and
sub
addr16
sbb
push
xchg
inc
mov
inc
mov
fisubrs
lea
loope
out
jg
mov
adc
xor
scas
out
jp
cltd
idivl
sub
cmpsb
and
shl
jl
sahf
incl
xchg
sbb
scas
inc
inc
and
cmp
sbb
fisttpl
in
jnp
aam
or
adc
jecxz
inc
shlb
xchg
outsl
push
pop
pop
fcomps
or
inc
fildll
adc
stos
sbb
mov
lock
mov
fisubrs
add
sbb
push
mov
push
repz
fnstcw
int
outsb
adc
je
sub
cmp
mov
sbb
test
push
mov
movsb
mov
mov
cltd
xor
cmpsb
xchg
dec
push
dec
adc
jmp
push
mov
nop
cli
push
add
cmc
inc
aas
mov
sbbl
and
addb
cwtl
jns
add
aaa
shrb
pop
dec
cmp
cltd
rol
xchg
sbb
leave
and
mov
xor
ja
mov
pop
outsl
pushf
test
lahf
les
and
dec
test
xchg
mov
jg
aad
and
jge
popa
xor
inc
or
or
dec
test
xchg
dec
fstpl
push
sub
mov
xor
arpl
int
mov
push
lret
sub
sub
xor
lds
clc
sbb
aas
les
pop
mov
cmp
mov
repnz
out
and
add
mov
subl
pushf
jmp
enter
mov
fpatan
jge
cmp
inc
sub
jge
add
inc
xor
cmp
mov
out
lock
test
xchg
dec
sbb
cmp
push
adc
push
cmp
arpl
xchg
dec
xor
clc
jbe
mov
adc
sub
sbb
hlt
iret
fistl
push
push
xor
es
test
jb
xchg
mov
or
hlt
dec
push
or
adc
es
ss
jns
enter
pop
sub
jge
cmc
sbbl
or
das
sbbl
outsb
out
xlat
mov
adc
mov
mov
push
xchg
adc
cmp
icebp
sbb
push
jg
insl
mov
adc
cmp
xchg
pop
mov
ja
jg
test
xchg
or
mov
popf
cwtl
mov
cli
mov
movsb
addr16
test
pop
cmp
mov
adc
addr16
sub
repz
and
add
and
das
pop
iret
inc
push
sbb
dec
into
adc
xor
cmp
roll
addr16
sar
push
inc
jl
push
loop
push
shl
sbb
ret
mov
fimull
and
sub
rcpps
insl
ja
outsb
jbe
mov
push
mov
shrl
add
pop
push
shrb
bound
cmp
pop
add
nop
hlt
mov
inc
mov
cmpsl
sub
mov
and
inc
push
lock
jecxz
out
jns
std
stos
sti
cmpsl
and
jecxz
cwtl
lcall
out
jb
sub
push
out
xor
fbstp
aam
subl
cmp
xchg
jp
jp
test
addr16
dec
js
sti
stos
mov
push
mov
dec
or
fsubs
lods
push
repnz
imul
subb
stc
or
ret
insl
int
xchg
push
je
mov
hlt
xchg
pop
jecxz
adc
out
sti
loopne
jle
or
lods
jnp
aad
lea
orl
test
mov
lods
cmp
jmp
lret
jae
mov
xchg
mov
inc
push
in
adc
out
push
repz
imul
std
push
cmc
cltd
pop
out
xchg
aad
jl
loop
push
lret
sbb
mov
stc
xchg
pop
shrb
xchg
mov
cs
lret
mov
mov
call
push
pop
ret
fstl
push
lret
pop
cmp
pushf
pop
inc
mov
gs
sti
cmpb
fidivrl
movsl
insb
adc
ffreep
or
cmpsb
cmp
sbb
call
int3
cmp
testl
jae
testl
push
adc
mov
and
sub
icebp
sbb
lods
mov
or
mov
sti
ror
imul
test
jmp
xchg
jnp
mov
and
sbb
dec
pop
sub
jo
dec
mov
out
cmp
adc
push
movlps
xchg
mov
or
pop
arpl
movsb
out
outsl
adc
rolb
xor
lea
xor
fnstcw
lret
call
mov
dec
mov
push
jge
mov
sub
dec
push
lret
bound
mov
cmp
ljmp
popf
data16
inc
addl
out
mov
xchg
jns
and
mov
fistpl
inc
flds
inc
fdivr
pop
push
xchg
xchg
fidivl
xor
or
add
xchg
cmp
test
rcrl
pop
mov
mov
aad
mov
arpl
pusha
mov
es
cmp
nop
inc
lret
mov
pop
push
and
xchg
mov
mov
ja
dec
sbb
mov
and
and
lea
ljmp
inc
xor
mov
daa
dec
pop
scas
jbe
lods
push
fwait
inc
xor
xor
xchg
into
pop
fnstenv
ret
push
cli
out
jmp
mov
cmpsb
jnp
gs
lret
pop
gs
shrl
pop
stos
jg
lcall
dec
fidivl
rcrb
aam
jmp
jp
popa
xor
and
daa
cmpsb
gs
scas
shrb
pop
adc
pop
xor
jl
add
or
arpl
test
cmc
jns
xchg
mov
push
xchg
insl
aaa
push
or
mov
mov
aas
sub
ja
push
pop
xchg
data16
push
push
cmp
pusha
outsb
aaa
xor
jmp
or
mov
loopne
ficoms
xchg
mov
test
sti
push
inc
ficoms
subb
push
inc
xchg
push
enter
roll
inc
dec
mov
jns
arpl
jo
mov
repz
in
stos
loope
inc
inc
mov
push
shrl
push
cmp
call
mov
andb
ds
hlt
sub
gs
scas
cmp
inc
fstpt
lret
cmpsb
not
sub
fisubl
test
jbe
cmpsb
in
push
jbe
adc
mov
xchg
outsb
push
pop
pop
lock
xor
fsubr
inc
ret
jnp
xor
mov
in
dec
xlat
pop
push
cmp
loop
call
ja
sahf
sub
sbb
sub
xor
jae
mov
push
cmc
mov
dec
dec
pop
push
cmp
and
mov
arpl
test
cld
insb
rcr
bound
cmp
push
icebp
xchg
or
cmp
subb
jg
aad
xchg
mov
xor
in
mov
gs
insb
rcrb
ret
add
mov
lcall
movl
adc
pop
stc
movsb
jnp
imul
loop
cmp
cmp
fimuls
mov
push
ljmp
cltd
test
movsb
add
cmpsl
sub
scas
rcrl
cmp
out
mov
xchg
ljmp
stos
ds
push
push
xchg
inc
mov
xorl
clc
and
aas
outsb
xchg
cld
cmpsl
out
xor
add
xor
sbb
adc
loop
insb
in
push
mov
lahf
jl
inc
movsb
jno
cwtl
scas
xchg
pop
lahf
xor
ljmp
sbb
mov
jl
sahf
outsl
fucomp
mov
movsl
inc
adc
cmc
repnz
lret
lock
stos
rclb
popf
inc
sbb
sbb
xor
cmp
addr16
pop
out
inc
cmova
fbstp
cmpsb
ja
pop
movsb
mov
mov
lock
mov
adcb
jp
xchg
nop
xchg
into
cmpsb
or
test
or
and
sahf
hlt
push
xor
adc
out
push
push
add
sti
inc
enter
and
jmp
pop
sti
or
ljmp
ret
dec
sbb
ret
mov
scas
jb
cwtl
jge
sbb
adc
mov
comiss
lods
mov
mov
cmp
cmp
test
test
adc
push
xor
jns
in
inc
es
add
mov
mov
lret
xor
dec
mov
fbld
loope
jne
push
outsb
and
shlb
inc
sbb
and
stos
test
cltd
hlt
repz
mov
jae
es
imul
jp
cmovs
ja
or
sbb
test
jae
mov
cmpsb
or
jg
add
imul
popf
lods
or
adc
add
lcall
push
sub
mov
dec
xchg
bound
notb
addr16
sub
jo
frndint
jbe
cs
nop
fs
mov
dec
mov
dec
xchg
mov
push
in
adc
sbb
mov
push
imul
sbb
lret
pop
adc
pop
dec
in
or
stc
add
jmp
jp
in
jecxz
fcmovnbe
xor
lds
negb
in
lret
xor
dec
cmp
sub
push
adcb
and
pop
aad
jae
mov
loope
push
pusha
adc
cltd
cmp
pop
push
pushf
scas
push
inc
cs
loop
in
xchg
xor
cwtl
test
xchg
aad
mov
mov
sub
lods
pop
sub
cmp
add
inc
dec
in
iret
lret
into
mov
fcoml
push
out
pop
imul
mov
xor
xor
notb
sub
cs
testl
dec
sti
pop
lahf
cli
mov
ljmp
loop
xor
aad
push
icebp
iret
mov
push
testl
cwtl
test
adc
in
cmpsl
push
imul
jg
loop
xor
ss
cmp
and
xchg
incl
nop
xor
sub
adc
pop
cmpb
js
enter
fisubl
leave
movsl
shll
push
sahf
popf
cmpsl
cltd
out
xchg
cmp
sbb
leave
loope
pop
or
int3
popaw
pop
out
mov
jnp
push
sub
jno
xchg
test
jno
loopne
jb
cltd
xchg
push
pop
pop
mov
test
aas
nop
pop
inc
hlt
jmp
push
mov
mov
mov
pop
xlat
jge
arpl
jecxz
call
fsubs
and
mov
push
fistps
loop
add
mov
std
int
xor
sub
and
and
cli
sti
inc
fimuls
dec
mov
inc
fcmovb
insl
sub
cmpsl
testl
jmp
adc
mov
lcall
mov
jp
mov
sbb
xchg
rclb
lea
xor
js
sbb
lcall
jnp
mov
iret
pop
arpl
mov
icebp
xor
push
adcb
and
adc
pop
fwait
xchg
jns
insb
loop
mov
push
ds
xchg
orl
cmp
aaa
ds
cmp
add
mov
cmp
hlt
int
in
push
call
jmp
repnz
mov
lahf
or
ud2
jle
xchg
aam
xchg
loop
and
xchg
cmp
seta
mov
mov
pop
push
mov
sub
cmp
jecxz
icebp
outsb
sbb
and
cmpl
mov
mov
int3
push
fnsave
mov
sahf
mov
inc
push
gs
add
out
test
xor
ja
mov
mov
repz
aaa
test
jns
sub
rolb
and
stos
jnp
dec
pusha
mov
int3
mov
and
push
lods
int3
mov
hlt
mov
push
mov
or
cwtl
xchg
hlt
mov
mov
out
outsb
stos
sbb
in
leave
fdivs
xchg
je
xchg
cs
xchg
ret
inc
sub
hlt
dec
inc
mov
int3
aam
mov
sbb
sub
test
xchg
mov
bnd
lret
pop
or
stos
push
dec
adc
dec
jecxz
pop
lcall
sub
gs
addr16
and
insb
mov
inc
repz
decb
and
cwtl
and
and
xor
fnstcw
push
movsb
xchg
xchg
xor
aas
xlat
push
and
push
stos
cmc
mov
lods
les
into
xor
mov
push
lret
add
in
popa
and
popf
or
push
cmpsl
mov
and
addr16
int
mov
popf
mov
pop
push
xor
mov
dec
aaa
jo
iret
outsb
pop
dec
lret
bound
or
jnp
xor
lea
xchg
insl
push
add
repz
push
cmpsb
out
inc
dec
in
or
divb
pop
xor
push
test
gs
xorb
mov
call
imul
push
sbb
inc
lock
cli
mov
dec
loop
jecxz
adc
lahf
ss
jg
popf
jecxz
dec
les
xlat
sub
lods
mov
inc
dec
jl
jecxz
sti
push
pop
dec
dec
push
dec
dec
sbb
rcrl
inc
pushf
jecxz
movsb
in
aad
pop
cmp
loopne
aaa
sbb
pop
mov
mov
icebp
mov
rol
mov
andl
daa
outsb
ja
add
fdiv
bound
jle
and
mov
pop
push
xor
inc
repnz
inc
stc
call
aam
jl
jbe
or
and
sbb
cmpsb
or
jnp
movsb
jecxz
dec
or
rcr
je
lock
inc
nop
adc
repnz
sbb
jne
adc
cmp
mov
loope
js
sbb
sub
ss
je
shr
imul
pop
push
loope
in
dec
mov
cmc
mov
test
lahf
lods
or
fbld
or
mov
push
ror
loopne
mov
outsl
jge
jae
and
rorl
mov
or
pop
inc
mov
sbb
in
xlat
or
or
int3
xchg
adc
hlt
cmpsb
or
dec
dec
jmp
jb
popa
mov
sarl
pop
arpl
imul
adc
or
xor
jae,pt
arpl
inc
push
in
mov
xor
lahf
fmull
push
ss
arpl
movsl
sbb
xor
loop
and
iret
or
mov
pop
mov
and
jg
lcall
jp
aaa
pop
push
jmp
and
xor
mov
adcl
sbbl
and
push
fmull
mov
xor
das
pop
dec
les
jb
jno
pop
push
and
jp
movsl
fldpi
loopne
adc
negl
inc
mov
pop
dec
pop
inc
imul
stos
cmp
inc
pushf
inc
into
xor
outsb
test
mov
or
arpl
lods
mov
loopne
and
sbb
push
aas
sahf
push
push
imul
xor
mov
out
inc
pop
fxch
into
jno
lret
scas
mov
or
mov
cmp
aam
xchg
or
repnz
out
jg
dec
cmp
nop
pop
xor
add
in
mov
add
mov
xor
mov
pop
pop
fimuls
xchg
pushf
fwait
or
aad
lahf
test
inc
mov
dec
gs
jmp
loope
xorl
std
cmp
add
cmp
mov
or
loop
leave
dec
jge
stc
and
loopne
lcall
push
mov
jo
adc
in
iret
lret
test
dec
aam
cmp
dec
cltd
pop
ret
mov
and
xor
add
push
mov
xchg
add
jecxz,pn
loop
mov
sub
mov
mov
aam
shrb
movsb
or
in
jnp
xchg
pop
call
xchg
mov
cltd
or
jmp
push
dec
std
test
inc
mov
mov
and
in
ret
daa
push
in
jns
sbb
push
fsubr
add
jle
dec
sbb
lahf
into
xchg
or
insb
aam
addr16
jge
push
out
adc
push
in
xor
loop
jb
das
test
ficoms
push
cmc
stc
shlb
les
outsb
mov
push
aad
pop
lds
jecxz
in
cltd
cmp
shlb
push
in
and
out
loopne
lcall
mov
cmpsb
cmp
stc
push
cmp
mov
xor
push
inc
mov
fnsave
fstl
sti
es
adcl
mov
and
loopne
xor
cmp
pop
sbb
xor
jl
test
pop
cmp
or
insl
pop
icebp
pop
push
push
mov
add
push
sahf
mov
mov
mov
cwtl
jbe
adc
pop
lahf
push
mov
iret
xor
push
mov
loop
push
jmp
shlb
adcb
and
mov
push
cmp
xor
jmp
jns
and
sti
cmpsl
pop
roll
or
ss
cmp
fstps
sub
sub
int3
popf
ljmp
aad
push
insb
fnstcw
ret
xlat
loope
inc
and
test
sti
xor
mov
bound
or
outsl
inc
cmp
pop
shl
mov
mov
fnstsw
xchg
movsb
testb
jae
insb
sub
jecxz
cmp
fucomp
sbb
int
nop
mov
push
aas
cltd
aaa
jae
arpl
jecxz
sbb
jns
pushf
lret
gs
lret
xchg
mov
arpl
out
jnp
mov
in
ss
lods
mov
enter
sbb
sbb
mov
outsb
insb
in
loop
cmp
add
popa
sbb
or
sar
mov
pusha
leave
fsts
lret
lea
shrw
pop
dec
cmp
mov
icebp
jnp
sub
xchg
loopne
cwtl
fidivrs
rorb
test
aad
shrb
sub
in
xchg
loopne
lds
dec
movsl
mov
int3
or
pop
mov
or
mov
and
test
leave
enter
inc
sub
or
mov
pusha
jae
sbb
in
out
mov
aaa
hlt
push
dec
cs
and
add
cltd
stos
pop
mov
jnp
push
mov
mov
cld
jecxz
lock
cmp
imul
jae
into
inc
out
mov
das
sbbb
xor
sbb
and
pushf
fcmovnb
sbb
rcr
clc
fwait
sub
in
ds
iret
js
add
sbbb
jecxz
jne
shr
int3
sbb
cs
fcoms
jae
fisubl
dec
mov
push
xor
dec
sti
dec
stc
cmp
pop
xchg
hlt
addl
mov
adc
shl
mov
aaa
into
out
dec
xlat
je
and
jge
dec
adc
mov
aaa
sbbb
icebp
inc
stos
pop
imul
or
jne
mov
or
sub
jb
cld
or
cmp
test
shrb
xor
and
cmp
in
push
pusha
sahf
lret
es
out
lods
sbbb
inc
push
jnp
ds
int3
fwait
addl
clc
fs
mov
sahf
mov
call
test
mov
adc
lahf
pusha
inc
test
popf
scas
pop
repnz
sub
push
inc
rcrb
sub
sbb
in
pop
push
js
popa
call
add
add
movsl
sbb
outsb
gs
out
pop
pop
scas
inc
mov
sahf
add
in
lds
rcrb
iret
sbb
adc
aam
das
push
in
lcall
and
sub
cwtl
das
cmpsl
dec
add
jae
mov
icebp
clc
inc
fcoms
shl
and
mulb
jle
pop
mov
in
push
mov
out
inc
xor
lret
xchg
jb
lcall
xchg
mov
cld
dec
fcomp
pop
call
mov
inc
loope
pusha
pop
mov
jae
inc
addr16
or
ja
pop
push
int
pop
mov
in
push
pop
xchg
addr16
pop
movsl
clc
int
out
xor
imul
lds
lret
jle
les
jle
sub
jecxz
inc
adc
mulb
scas
clc
rclb
mov
cmp
inc
pop
out
xlat
gs
test
jnp
jge
sti
jg
inc
ret
outsl
fisttpl
gs
mov
scas
inc
mov
aas
and
fsubs
inc
mov
inc
xchg
stos
xor
mov
cmp
cmc
push
repz
inc
jmp
andb
xlat
movsl
mov
jecxz
aad
xchg
cwtl
mov
or
adc
add
mov
lret
pop
mov
inc
std
cltd
lock
je
lods
xlat
fnstenv
xchg
outsl
fbld
hlt
mov
and
int
inc
pop
cli
pushf
sbb
inc
pop
push
gs
hlt
adc
subb
sbb
push
and
ss
xchg
aas
hlt
clc
es
in
dec
adc
fidivs
cmpsl
aam
lea
ss
cmp
pop
jl
repnz
or
mov
mov
xchg
jl
adc
pop
jge
inc
andb
xor
add
xor
adc
les
jne
fstpl
add
stos
into
adc
xor
jb
sbb
mov
inc
nop
mov
leave
or
inc
arpl
sbbl
icebp
jb
mov
xchg
push
test
shrb
push
jecxz
les
jl
dec
adc
ficompl
lods
outsl
sti
cmp
fsub
jmp
mov
js
into
fcmovb
lcall
pop
out
add
mov
lahf
mov
pop
dec
mov
shrl
xchg
mov
in
or
jb
andb
push
outsl
fs
pop
fnstenv
scas
cmp
dec
sbb
jmp
in
stc
int3
hlt
dec
cli
adc
mov
andl
lods
jnp
push
cmc
lods
mov
rcrl
sub
mov
out
or
fdivl
push
xchg
jp
add
rcrb
and
in
lret
xor
repnz
xchg
mov
pop
test
xchg
mov
xlat
sbb
fs
xor
sti
add
mov
mov
out
pop
arpl
idivl
sbbl
imul
ss
or
cmpsl
jae
mov
dec
ret
repz
lods
mov
loope
or
icebp
jo
mov
push
push
hlt
push
dec
fdivl
and
test
dec
mov
sub
mov
fistpll
add
scas
into
in
jl
not
mov
dec
pusha
imull
outsl
outsb
andb
leave
push
push
outsb
lods
fiadds
loop
ds
scas
inc
je
add
inc
repnz
jmp
stc
sbb
add
lea
aad
scas
es
jl
out
setle
adcl
sub
pop
mov
es
clc
shrl
push
add
inc
push
ja
pop
mov
adc
fidivl
cmp
and
pop
ss
int
add
lods
inc
les
lret
and
popf
stos
mov
xor
pop
fcompl
xchg
hlt
pop
mov
shr
stc
lea
mov
mov
pop
gs
mov
adc
mov
push
xlat
xchg
int3
sbb
jnp
add
fnsave
jge
adc
dec
jmp
dec
scas
jo
test
mov
mov
jno
movb
bswap
andl
mov
push
fwait
sahf
adc
push
adc
push
fsubrs
les
pop
ret
sub
xchg
xor
cmova
clc
xchg
mov
fpatan
fsub
sbb
dec
mov
fwait
push
out
adc
das
sbb
sub
mov
mov
push
fcomps
inc
jbe
jmp
xor
std
ljmp
popf
jne
in
xchg
ficomps
cli
inc
mov
fwait
incb
insl
mov
or
rolb
and
stc
test
sbb
arpl
inc
dec
sbbl
aaa
outsl
cmpsl
jns
ljmp
imul
lock
mov
xchg
pop
inc
mov
xchg
xor
pop
add
gs
add
sbb
dec
mov
sub
out
pop
xchg
inc
lahf
test
sbb
jno
and
lret
bound
mov
loope
xor
inc
out
mov
xlat
add
arpl
pop
call
clc
adc
jmp
sbb
dec
sbb
les
icebp
pop
and
fidivrs
cmc
lcall
mov
out
cwtl
dec
iret
push
in
add
aas
stos
xchg
jae
clc
rolb
xchg
add
cmp
mov
fbld
int3
mov
add
out
rcrl
inc
jbe
jbe
icebp
dec
or
mov
xlat
mov
lcall
cmp
out
push
push
jle
xor
jne
shl
shl
adc
pushf
cli
ds
shr
shr
mov
mov
sub
clc
inc
aad
adc
ds
stc
popf
add
xchg
sub
pushf
cld
push
xchg
pop
mov
add
sbb
inc
rorb
unpcklps
jns
das
fbstp
push
pop
lds
xor
and
movsl
sbb
lahf
stos
cld
in
or
inc
stc
lds
xor
lahf
out
add
adcb
mov
cmp
pop
sahf
imul
movsb
mov
loop
cld
lcall
sahf
test
pop
mov
sub
out
mov
push
push
lret
sbb
jecxz
sub
cmc
scas
jb
add
scas
xlat
cmp
inc
shlb
movsl
mov
push
cmp
out
out
outsb
cmp
xchg
sub
sbb
and
mov
inc
mov
dec
xchg
push
in
xchg
add
pop
outsl
pop
or
testb
sub
pop
sub
or
mov
cmp
jno
and
ret
scas
popf
pop
call
jo
outsb
xor
mov
push
shl
sub
stos
dec
cmp
cwtl
lock
aas
inc
xchg
and
call
jg
fsubs
mov
or
mov
sbb
lahf
mov
sahf
sbb
cwtl
mov
or
mov
cwtl
sahf
mov
adcb
stos
shrb
mov
jge
aas
pop
aad
mov
insb
jno
nop
ss
xor
mov
push
xchg
add
sbb
popf
xor
or
pop
or
mov
cld
iret
dec
scas
and
mov
inc
jne
pop
clc
push
jb
xor
jg
les
push
push
sub
xor
out
cmp
cmpb
mov
hlt
mov
out
popa
mov
adc
jo
and
into
test
and
mov
xor
nop
xor
pop
xchg
xchg
test
mov
pop
mov
mov
xchg
push
mov
dec
or
mov
call
inc
out
mov
adc
cltd
insl
sub
pop
cmc
insl
jnp
mov
std
cltd
imul
or
fs
ror
mov
loopne
mov
jne
lds
mov
mov
mov
test
pusha
jp
js
das
das
mov
loop
cli
add
sub
test
push
inc
inc
jge
insl
test
ja
add
pop
mov
lcall
data16
pop
push
jbe
fstps
jnp
pop
imul
repnz
dec
xchg
add
imulb
and
xchg
scas
jo
cwtl
inc
sub
insb
stc
movsl
sbb
call
lahf
push
sbb
jae
mov
mov
loopne
or
jge
xchg
add
xchg
sub
add
rcll
enter
cs
out
test
int3
sub
mov
cld
jp
pushf
and
cmp
jnp
dec
call
imul
mov
add
xorb
xor
outsb
jp
in
mov
inc
cmp
cmp
test
repz
jnp
xchg
cmp
dec
icebp
mov
jge
rol
pop
dec
dec
movsl
cmp
or
jnp
pop
mov
hlt
mov
adc
scas
out
ds
scas
jge
arpl
lret
movsb
adc
addb
push
xchg
sbb
cmp
or
iret
xor
testl
mov
pop
xor
push
mov
ret
aaa
and
mov
decl
xor
push
cmp
sbb
or
out
ja
and
pop
sub
jecxz
xchg
mov
cmp
test
cld
adc
xchg
dec
leave
pusha
jp
cmp
sbb
cli
sbb
push
mov
mov
lret
test
lea
mov
xor
xchg
aad
mov
lock
add
pop
cmpsl
mov
pusha
sub
mov
lea
fstl
cmp
xor
mov
fwait
sub
ret
pop
cmp
add
mov
js
pushf
sub
aad
les
sub
xor
shll
bnd
push
inc
mov
add
fidivs
sbb
jb
lods
aas
push
xlat
mov
cs
sahf
imul
pop
ds
loop,pn
mov
ds
sbb
and
jg
xlat
outsb
mov
je
pop
mov
shlb
mov
push
popa
push
arpl
sar
pop
fucomp
testb
lock
lods
pop
in
inc
nop
lock
pop
lock
mov
cmp
xchg
adc
xchg
pop
adc
inc
popa
add
xor
xor
inc
push
test
imul
add
add
test
xchg
adc
xor
lods
inc
jl
in
push
in
mov
repz
test
outsl
mov
mov
loopne
adc
insb
or
mov
jne
jmp
insb
sbb
cld
jae
sub
out
shll
mov
rcrl
test
inc
shl
add
xchg
mov
in
leave
popf
cmp
imul
cmp
cltd
shlb
lahf
and
stc
or
xchg
sbb
ss
movsl
lret
mov
es
sub
outsl
push
adc
push
jno
mov
ret
pop
daa
mov
out
bnd
mov
sub
pop
jno
xchg
repz
cmpsb
call
jecxz
cli
push
popf
sub
and
je
or
adcb
dec
add
xlat
inc
mov
dec
loope
pop
imul
insb
xor
data16
xchg
outsb
add
out
outsl
mov
mov
cmp
fmul
aam
dec
push
sub
sub
pop
mov
xchg
out
rcll
inc
jno
mov
and
cmpsb
mov
std
mov
jne
push
testb
fsts
jnp
movsb
les
push
mov
push
ret
ljmp
aad
testl
jnp
popa
iret
xchg
sarl
mov
les
sbb
cltd
adc
or
xor
add
out
xchg
or
jl
test
lock
push
int
out
popa
xchg
gs
dec
enter
push
pushf
cpuid
adc
push
mov
jmp
add
mov
lahf
clc
shll
dec
lret
test
int
inc
loop
outsl
xchg
pusha
fildl
mov
lahf
hlt
iret
je
mov
jmp
adcl
cmp
test
xor
jl
sbb
scas
jb
or
xchg
sub
loop
cmp
lea
pop
icebp
fbld
push
add
clc
push
jge
sbb
sbb
add
loop
aad
pop
pop
or
cmp
es
pop
xchg
ja
arpl
out
sbb
mov
addr16
fadds
xchg
pop
data16
cmp
in
hlt
mov
mov
hlt
iret
cmp
test
roll
je
call
stos
nop
add
xor
popf
ljmp
mov
cmp
lds
adc
cmp
and
outsb
iret
les
cltd
in
pop
icebp
dec
add
test
pushf
scas
mov
js
pusha
fldcw
inc
push
fistpll
rcl
sub
sarb
aad
jbe
mov
pushw
push
enter
aad
movsl
sub
mov
or
hlt
iret
pop
out
and
jb
clc
decb
fisubs
add
sub
pop
push
inc
push
mov
xor
push
fwait
xchg
in
mov
sbb
mov
enter
mov
mov
jg
std
in
ficoml
or
lods
lds
jb
in
dec
sbb
in
bound
addr16
cltd
mov
leave
dec
cwtl
arpl
sti
jnp
rcrb
add
inc
inc
test
out
sub
push
test
enter
out
adc
adc
std
arpl
jle
ficompl
and
lock
jnp
pop
push
dec
jbe
ljmp
mov
pusha
leave
enter
sub
enter
rorl
adc
orps
movsb
sub
xor
adc
pop
inc
fs
and
or
pop
int3
cmp
pop
push
adc
rorl
fsubrl
add
cmp
and
sbbb
push
mov
int
ds
cmp
xchg
cmp
and
or
int3
fstp
outsl
pmaxsw
mov
das
or
mov
mov
jecxz
enter
pusha
cmp
push
pushf
bound
adc
mov
and
add
xchg
xchg
cmc
rclb
cmp
xchg
jb
ljmp
cli
orb
pop
or
sbb
sbb
add
stc
adc
gs
ss
push
jecxz
in
ljmp
inc
int
cmp
lds
jmp
inc
sbb
mov
call
leave
enter
mov
insb
adc
add
out
xlat
fmuls
sti
xchg
jp
outsb
xchg
or
outsl
push
loopne
jns
mov
ret
push
out
xor
jbe
add
ljmp
jb
mov
mov
std
pop
iret
mov
sub
dec
inc
xchg
mov
push
out
and
scas
push
sub
add
insl
xor
mov
leave
pop
loopne
xchg
xchg
sub
gs
jg
mov
xchg
sbb
test
mov
ljmp
and
ss
jo
xor
cwtl
fwait
mov
js
dec
cmpsl
leave
sub
movsb
sub
fistpl
cwtl
jo
or
mov
testl
cli
pop
xor
aas
sbb
push
out
sahf
test
adc
fldcw
out
test
or
loop,pt
or
stos
test
into
popa
cld
cmp
mov
in
dec
dec
fwait
lock
aam
gs
incb
mov
xchg
aaa
fistpl
stos
sbb
or
test
movb
cltd
in
lods
xchg
pop
jb
push
insl
shrl
xor
and
mov
and
push
mov
jmp
pop
aas
push
cmpsb
movsl
dec
push
add
or
sbb
das
and
imul
dec
in
cmp
sub
jecxz
outsb
adc
ds
out
jge
mov
cmp
mov
pop
jle
lret
add
sbb
mov
sbb
out
enter
adc
testb
add
cmc
push
test
pop
inc
fwait
push
inc
lods
push
imul
aam
push
mov
out
cld
mov
add
dec
out
lods
call
mov
inc
xchg
mov
or
push
jl
or
cmp
sbb
jg
cmp
lahf
jnp
int3
adcb
push
iret
int
or
stos
jg
out
dec
notb
jecxz
inc
cmp
pop
fwait
jno
lods
cli
lea
adcl
pop
jne
mov
mov
sbb
or
daa
cmp
mov
mov
ds
cmpsl
push
mov
or
andl
fidivrl
ss
mov
popf
call
in
ljmp
setg
insl
sub
lcall
aaa
mov
into
dec
mov
popa
mov
rcrl
mov
add
ret
or
js
pop
cmp
sub
jl
sub
dec
popf
mov
inc
push
xchg
sub
fsubrl
cwtl
add
xor
or
testl
add
jae
xor
sub
or
and
idivl
in
cmc
mov
aaa
leave
shl
mov
jnp
stc
insl
jnp
mov
sahf
ljmp
dec
jbe
mov
mov
add
jo
cli
push
and
add
adc
xchg
imul
lcall
xor
cwtl
jp
mov
add
jbe
lods
fstpt
sbb
orl
inc
push
mov
sarl
or
repz
es
mov
add
lods
mov
push
in
cmp
vcvtps2dq
mov
mov
loopne
pop
xchg
addl
mov
stc
cmp
fbld
aam
add
test
pop
in
dec
cmp
cmp
enter
pop
outsb
aad
sub
fildll
ret
imul
aam
cmpsb
out
cld
and
adc
loopne
jae
int
and
mov
cli
inc
mov
enter
push
inc
pop
sbb
sub
adcb
pop
and
fcoml
or
mov
fbstp
rolb
repnz
data16
inc
lret
aam
sub
or
mov
shll
inc
repnz
and
jmp
into
jno
mov
pop
popf
ss
adc
outsl
test
pop
xor
mov
imul
or
jno
mov
or
data16
rcr
adc
cltd
lds
jp
in
cmp
mov
rcl
mov
push
mov
cmp
pop
xchg
add
adc
pop
cmp
lahf
testb
and
ret
pop
out
inc
xor
les
xor
pop
sbbl
in
leave
dec
xor
shll
es
jb
inc
sub
xchg
aaa
jle
xchg
add
push
xor
mov
nop
xchg
adc
pop
sbb
rorb
push
mov
popa
jg
cltd
adc
mov
jge
fnstsw
pusha
arpl
insl
fs
pop
and
rol
xchg
loop
aad
mov
es
mov
mov
mov
sub
push
in
xchg
int3
sbb
sub
push
and
inc
pop
xrelease
addl
sbb
sub
sbb
adc
shrl
ss
icebp
dec
push
test
pop
outsl
xchg
stc
iret
ret
cli
jl
stos
pop
mov
mov
inc
mov
nop
inc
insl
mov
dec
cmp
insb
push
int3
dec
or
sub
push
push
shr
aas
out
outsl
and
ja
notb
imul
sti
idiv
xchg
add
call
arpl
mov
adc
lret
mov
cmp
push
xor
andb
repnz
cmp
mov
mov
mov
inc
sbb
jns
add
out
xor
push
xor
pop
in
jnp
cmp
pop
outsl
sti
mov
mov
or
xchg
cmp
sahf
in
jnp
testl
mov
adc
fisubs
inc
gs
jbe
leave
popa
push
and
cwtl
stos
cmp
pop
push
jno
pop
jmp
pusha
mull
test
sti
aam
cmp
cmp
fsubrs
inc
aad
or
xchg
inc
in
cli
ret
cmpsb
push
xchg
jno
dec
and
jle
data16
pop
and
jno
mov
fs
das
sub
adc
cmp
mov
insb
jl
dec
sbb
stc
js
fisubrl
lret
mov
popa
test
mov
stos
sbbl
xchg
leave
std
mov
cld
jecxz
test
fcomi
push
adc
ficoml
stos
aas
jo
sti
xchg
repz
ds
je
in
repz
imul
cmp
xor
mov
inc
sbb
xchg
mov
decl
dec
pop
push
mov
xor
subb
sahf
cmpb
fsub
inc
insl
add
lahf
addr16
mov
mov
lret
call
mov
mov
das
push
int3
jecxz
jae
sub
inc
push
out
inc
add
inc
ds
inc
jmp
inc
cmpsb
fldl2t
pop
cmp
loope
add
adc
cmc
xor
mov
stos
sbb
shll
repz
xchg
mov
fisttpl
cmp
push
ljmp
daa
mov
jno
inc
fdivr
xchg
pop
xor
sub
dec
xchg
mov
adc
rolb
sbb
and
xlat
push
mov
popf
or
or
insb
sub
sbb
ja
or
and
mov
pop
jae
sub
sbb
pushf
mov
inc
mov
daa
icebp
aaa
dec
lahf
inc
or
or
pop
mov
lret
scas
xchg
sub
adc
test
mov
scas
fmulp
pop
adc
inc
mov
cmp
cmp
pusha
mov
hlt
xor
jp
push
leave
ret
jg
ss
lret
mov
push
push
cs
sbb
nop
mov
sarl
mov
call
mov
inc
adc
push
pop
clc
pop
push
fsubs
subl
pop
cli
dec
and
lcall
cmp
dec
mov
cmp
aaa
and
xchg
xor
fisubs
jne
jg
daa
xchg
addr16
mov
popf
test
add
aaa
cwtl
gs
rcrb
xor
lods
dec
cmc
divl
cmpsl
roll
pop
test
sbb
das
or
or
stos
popa
mov
call
xchg
mov
cwtl
push
add
mov
adc
cmp
or
mov
shll
pop
mov
push
sub
imul
inc
cmpl
loop
jno
les
int
data16
and
test
daa
cmp
aam
icebp
mov
gs
sub
inc
jmp
jns
mov
les
mov
shr
fdiv
sbb
xor
mov
xchg
gs
shrb
mov
push
ljmp
orb
sub
mov
push
or
lea
mov
sbb
imul
mov
sbb
lock
int
sbb
jb
jb
fistps
into
aas
fs
sub
cmp
fwait
sub
sbb
in
cmp
cmp
jecxz
add
jnp
stos
inc
lcall
push
mov
enter
mov
jge
repnz
aad
aam
std
mov
outsl
or
mov
iret
sbbb
fnclex
rclb
popa
rorl
add
sbb
xchg
call
add
or
dec
pop
or
lods
stos
test
mov
in
mov
inc
cmc
mov
fstl
or
testl
xchg
sti
pop
adc
sbb
jmp
and
stos
inc
adc
ss
clc
cmpsl
mov
push
jbe
mov
fisttpl
mov
cmp
sub
in
push
pop
call
xlat
test
jecxz
pop
aad
test
aad
rolb
popf
call
leave
pop
imul
jmp
cmovge
pop
ds
xchg
dec
pop
mov
mov
test
xchg
stos
out
lea
repz
icebp
jmp
out
mov
ja
pop
add
xor
push
add
addl
fsubs
pop
insb
inc
fsubs
cmp
lret
and
scas
nop
insl
jp
test
fadds
in
push
cmc
in
jnp
imul
sbb
mov
or
mov
aaa
into
dec
stc
stos
test
push
in
lahf
xchg
imul
xlat
pop
and
std
pusha
lds
lds
inc
ss
loope
imul
lahf
in
sub
imulb
mov
dec
fisttpl
xor
in
sub
rep
xchg
gs
outsb
addr16
push
insl
cli
mov
movsb
test
aaa
or
mov
jle
push
mov
mov
xor
xchg
push
loopne
mov
scas
xchg
arpl
jp
inc
mov
and
mov
dec
sbb
in
and
dec
push
icebp
inc
jae
test
xchg
sub
add
and
lahf
scas
std
dec
pop
icebp
dec
pop
outsb
or
loope
std
or
iret
pushf
loop
add
adc
cmpsl
js
dec
cwtl
mov
pop
fwait
je
std
mov
mov
out
inc
or
test
loope
dec
push
xor
pop
sahf
lea
out
jmp
ret
ss
mov
out
out
fnsave
int
lock
sbb
cs
lret
or
or
aaa
subb
lods
pop
mov
push
in
xchg
mov
jae
or
mov
es
jbe
fdivl
xor
pop
xchg
sbbl
xlat
call
or
mov
movsb
sti
dec
sub
cmpsl
mov
mov
rorl
mov
mov
call
aad
mov
mov
roll
push
cs
call
push
dec
dec
shrb
outsl
loop
push
in
std
sbb
mov
cmp
sub
pop
xchg
add
push
out
xchg
cmp
fucomi
addr16
imul
mov
inc
pop
outsl
dec
dec
cmp
jecxz
xor
gs
les
aaa
and
lods
pop
sbb
jg
jmp
or
pushf
and
xchg
inc
ljmp
mov
pop
repz
test
dec
or
adc
rorb
mov
push
fistps
mov
cmpsb
les
loop
dec
popa
or
xchg
dec
daa
mov
jnp
nop
ljmp
insb
cli
and
shll
mov
dec
push
xchg
adc
pop
sbb
mov
in
icebp
sbb
xor
mov
icebp
add
xchg
rcrl
nop
sbb
push
sub
sarb
mov
push
mov
xlat
lret
out
lcall
mov
inc
sti
mov
xchg
fistps
sbb
in
int3
fistpll
or
inc
fnsave
mov
and
push
xlat
push
stc
mov
jae
sbb
xor
idivl
jge
dec
out
and
sbbb
stos
or
test
xor
loopne
outsb
stos
mov
in
xor
fwait
mov
push
adc
fisubl
mov
leave
mov
cltd
push
xchg
pop
and
lret
mov
insb
cmp
mov
imul
inc
fcompl
xor
js
cmc
ret
xor
les
rorb
nop
test
int3
mov
sub
xchg
call
movsb
arpl
jmp
test
push
push
sub
aas
xor
int3
adcl
cs
popa
outsb
psllq
sahf
mov
repz
shl
add
mov
subb
aaa
push
or
push
arpl
pop
add
shlb
test
add
lcall
stos
sti
mov
pusha
pop
out
dec
cmp
popa
in
movsb
pop
loope
ret
sbb
and
xorb
sub
stos
jle
mov
mov
xchg
out
push
stos
pop
outsb
lret
js
jbe
mov
in
sbb
ds
adc
addr16
inc
call
cmp
xor
adc
sub
out
test
add
fistpll
in
es
ja
jecxz
jbe
jmp
or
aas
add
fisubl
fs
filds
sub
mulb
add
insb
or
and
inc
push
insb
sbb
push
lds
mov
xlat
sbb
or
mov
xchg
dec
sbb
jge
notl
xor
out
sbb
into
dec
divb
sub
mov
clc
sahf
xor
ror
in
imul
popf
xchg
jns
mov
pop
in
push
pop
xchg
lds
dec
hlt
scas
xlat
xchg
lea
cltd
test
pop
or
add
mov
pop
add
addr16
cld
xchg
es
int
dec
lds
dec
lock
fs
movl
jnp
sub
xor
out
mov
dec
or
cmc
xor
add
inc
sbb
movsb
cmp
fidivl
mov
stc
shr
imul
adc
xor
add
pop
xor
out
subb
push
sub
mov
inc
or
xor
or
in
lods
mov
arpl
mov
fisttpl
ret
cmp
es
in
push
jne
roll
jecxz
add
add
lods
hlt
not
and
mov
les
data16
push
rcrb
push
push
push
jmp
popa
sub
nop
and
sbb
xchg
xor
enter
pop
stos
jmp
daa
cld
xchg
pop
cli
fidivl
cld
je
shrb
or
popl
xchg
push
dec
sbb
pop
loope
push
lock
sbb
es
fisubrl
stc
es
sti
in
mov
lahf
imul
rclb
mov
xor
cmp
sti
aad
in
push
pop
mov
xchg
aas
hlt
and
lea
push
adc
ds
push
lds
repnz
dec
js
jl
xchg
sub
and
jmp
fsub
aaa
xlat
jno
sbb
test
outsb
inc
stos
mov
xorl
stos
inc
xchg
daa
sub
ret
push
jmp
xchg
ljmp
adc
lahf
and
loopne
xchg
inc
es
enter
xchg
loopne
cld
and
or
xchg
mov
add
je
xor
test
inc
setle
aad
jbe
fucomip
jle
cld
dec
hlt
xorl
sahf
in
ret
je
jecxz
pop
sbb
mov
in
cmc
inc
pop
out
mov
push
mov
js
in
jns
shlb
decb
ret
fsubrp
std
sti
mov
xor
mov
xchg
mov
xchg
xor
sub
out
jg
add
jb
nop
mov
inc
and
add
js
and
stc
or
fwait
mov
icebp
jl
aad
xor
pop
jle
rcrl
lock
sti
mov
add
adc
imul
lock
div
in
add
or
insl
and
add
dec
pop
aaa
test
repnz
add
pop
cltd
test
sub
push
gs
stos
jl
and
sti
push
xor
fistpll
in
incl
ret
enter
add
mov
out
push
jnp
dec
out
pop
adc
in
dec
xor
dec
arpl
jge
or
out
pop
jge
or
mov
addr16
mov
in
push
mov
insb
jle
mov
jg
incb
or
stc
ja
mov
popf
push
inc
fstp
aas
lcall
pop
mov
in
mov
jnp
stos
xorl
mov
mov
pop
stos
push
inc
dec
mov
stc
xchg
mov
aad
imul
lds
and
out
subb
out
push
jle
lds
lahf
pop
movsl
enter
cmp
es
scas
jge
sub
dec
out
mov
xlat
dec
fstl
loope
popa
scas
out
fwait
mov
fbld
dec
shl
pushf
ret
shrl
cmp
push
sub
iret
jecxz
pop
jp
sahf
fwait
pop
iret
xchg
cmp
or
pop
icebp
and
jo
cmp
adc
fsubrl
adc
pop
jno
and
xorb
icebp
bound
cwtl
xor
lods
sub
jno
xlat
xchg
dec
aas
loop
push
sub
rclb
push
jle
push
jge
xlat
mov
push
repnz
lock
into
ljmp
push
dec
pop
inc
pop
inc
rorb
cs
ficomps
cwtl
and
sbb
or
xor
adcl
sti
fisubs
fcoms
iret
dec
scas
aas
push
mov
mov
push
imull
mov
cwtl
out
test
lods
sar
or
sbb
enter
shl
pushf
dec
andb
test
outsl
cmc
dec
mov
ret
adc
sbb
xor
js
sbb
outsl
adc
add
push
mov
rclb
mov
jmp
jo
adc
cmp
xor
xchg
pop
stos
daa
scas
repnz
and
mov
dec
or
es
sub
and
out
ret
arpl
sbb
adc
out
xor
dec
cli
adc
cmp
iret
xchg
adc
fwait
mov
inc
sbb
addr16
hlt
adc
inc
cmp
mov
jns
xchg
dec
add
sbb
and
add
aad
cld
and
adc
adc
jo
sbb
cld
xchg
insl
fcomps
mov
pop
xor
sbb
lods
enter
or
mov
aas
in
pop
xor
lds
into
addl
je
push
in
mov
fdivrs
dec
or
ss
aaa
xchg
lods
imul
stos
fmul
rcr
mov
sbb
cmp
mov
mov
push
shl
cmp
cmp
xor
and
adc
sbb
or
repz
jle
mov
adcl
in
sub
and
data16
xchg
hlt
xor
aaa
mov
lock
and
pop
jae
xchg
push
outsb
adc
mov
dec
jo
icebp
inc
dec
mov
sti
fs
ds
repz
dec
mulb
sbb
and
cmp
xchg
lock
test
test
ror
mov
mov
mov
dec
push
fdivrl
cmp
sub
push
je
popf
xchg
sbb
shll
xchg
cs
leave
pusha
or
and
lahf
jnp
adc
add
loope
sbb
push
add
testb
lds
pop
adc
popf
mov
push
scas
cmc
mov
or
jns
sbb
xor
mov
adc
sbb
roll
push
jne
and
fisubs
dec
popa
orl
adc
cmp
cmpsl
or
test
adc
mov
pop
aas
notl
and
int3
lret
adc
or
jmp
pop
pop
popf
jl
sbb
push
cmp
sub
out
bound
pop
push
mov
es
cld
mov
mov
push
cli
dec
fldcw
and
push
inc
in
mov
imul
push
mov
mov
popf
divl
lea
outsb
adc
cmp
loope
cmpl
sbb
and
repnz
xchg
xor
test
shlb
push
mov
outsb
and
dec
loope
jb
or
mov
scas
xchg
xor
sbb
inc
add
imul
push
cmc
mov
cwtl
xchg
sub
stc
in
lds
mov
jmp
dec
popf
mov
inc
push
mov
mov
push
lea
dec
or
or
fstl
push
aaa
inc
sbbl
push
push
lahf
ss
cltd
add
fiaddl
pop
jno
inc
and
cmpsb
fcmovnu
pusha
inc
cmp
add
data16
sub
insb
and
sub
andl
lds
lods
dec
pusha
aad
mov
test
or
inc
jne
gs
inc
adc
fnstcw
lret
mov
or
movq
test
aad
call
sbb
jae
xchg
popf
mov
cs
stos
test
incb
lahf
loope
aam
and
lahf
rorb
xchg
add
scas
or
xchg
in
dec
movsl
xchg
mov
cmp
addr16
sti
in
xchg
adc
leave
sbb
test
daa
das
enter
int3
and
jnp
pop
addr16
push
fidivl
sub
push
jecxz
cs
push
push
stos
fstpt
arpl
or
xchg
fidivrl
push
sub
inc
mov
xor
cmc
mov
fldenv
rclb
aaa
inc
dec
cli
cld
xchg
insb
insl
fwait
sti
push
lret
sub
jp
loopne
popa
cs
jns
xor
dec
stos
mov
gs
fimull
jae
push
jae
popf
test
bound
xchg
andl
shlb
adc
out
mulb
jne
xor
nop
mov
mov
lret
or
or
loope
fstl
xchg
mov
shrl
jb
call
adc
mov
fnsave
sbbb
fwait
insl
and
add
negl
scas
cmp
push
push
out
orb
sbb
jne
imul
outsl
iret
mov
pop
mov
call
jns
mov
sbbl
xchg
fistpll
mov
shl
mov
push
adc
inc
test
jmp
jae
addr16
shll
shrb
dec
sub
jge
lock
sub
jne
cmc
adc
dec
out
es
jp
outsb
aas
cmp
cmp
notl
jns
icebp
jmp
leave
call
std
ds
in
jmp
jo
pop
jbe
inc
mov
add
and
or
adc
adc
ds
iret
fldl
iret
or
mov
push
and
xor
stos
xchg
sbb
cwtl
cmp
mov
sbb
inc
add
dec
push
xor
ss
and
outsb
fwait
cmp
outsb
push
js
inc
sub
iret
mov
xor
test
jb
fwait
or
sbb
push
inc
fnstcw
or
repz
push
sub
dec
cmc
repz
outsb
xor
lahf
sbb
sbb
negl
negb
jnp
adc
out
inc
xchg
push
aad
ja
loope
sbb
push
inc
sub
cltd
xor
gs
xchg
or
mov
sbbl
shrl
sub
arpl
push
les
sub
idivl
or
shrl
push
and
out
int3
jno
gs
lcall
dec
inc
and
sub
lcall
xor
outsl
movsl
fcoml
mov
cli
faddl
bound
mov
ja
icebp
test
sbb
inc
data16
mov
sahf
sbb
lcall
mov
leave
pop
sbb
ljmp
pop
fnsave
fiaddl
imul
scas
lea
out
jecxz
fcomp
fnstsw
cmp
fcmove
les
jecxz
jo
pop
sub
jae
lret
cwtl
push
inc
cltd
aas
jle
das
out
add
stc
mov
jb
xchg
inc
sub
test
jae
cmp
lds
rcrl
sahf
fstpt
mov
mov
cld
imul
adc
pop
sub
cmp
inc
push
std
add
das
xchg
mov
leave
pop
cmp
push
pushf
adc
sahf
inc
mov
cwtl
or
es
mov
or
add
cltd
lods
jns
jg
ret
mov
out
enter
gs
fldenv
adc
xchg
add
daa
pop
add
mov
push
pop
xor
add
jae
in
dec
fsubp
cli
test
mov
jg
insl
insb
jae
mov
cwtl
lods
sbb
pop
lea
jp
mov
sbb
cmc
xor
inc
ficomps
ret
gs
mov
mov
loope
dec
pop
enter
jo
mov
mov
out
in
mov
test
mov
dec
mov
iret
imul
movsl
cmp
xor
jbe
outsl
cli
push
scas
ss
dec
sub
push
fldenv
pop
sbb
mov
mov
sarl
cmp
pop
jmp
sbb
jae
mov
mov
adc
pop
dec
std
push
jmp
jb
xchg
pop
dec
jb
inc
mov
mov
mov
or
stos
cmc
psubd
pop
push
or
in
es
ret
scas
scas
test
pop
iret
xor
fisttps
frstor
jp
dec
out
xor
int
faddl
mov
sub
js
adc
jo
fcom
leave
rcrb
sbb
dec
add
into
movsb
fiaddl
dec
movsl
jo
push
sub
es
int
jmp
lcall
lcall
mov
pop
notl
inc
fstpl
fcompl
in
adc
cmc
dec
loopne
xor
xchg
ret
xor
inc
or
lea
out
cmp
shll
stos
outsb
out
push
sub
movl
pop
lahf
ret
call
push
mov
shrl
lock
ds
cmp
popf
das
adcb
lret
adc
hlt
add
jl
jg
lods
lock
push
iret
cmpsl
js
orb
mov
and
xor
mov
inc
lds
cmpb
inc
and
iret
xchg
adc
jmp
orb
sub
inc
fsubrs
jb
std
xchg
jp
adc
xor
lea
pop
in
scas
scas
push
mov
div
jl
jg
adc
stc
jl
cmp
push
in
nop
inc
ret
and
sbb
push
sahf
fnstcw
xor
pushf
jo
lods
cld
inc
fisttpll
cmp
push
fwait
jae
cld
mov
sbb
xor
sti
bsr
or
les
idivb
sub
jno
mov
icebp
mov
fiaddl
xlat
lahf
mov
pushf
dec
outsl
adc
lods
aaa
ja,pn
jb
popa
das
sub
cmp
inc
shlb
pop
icebp
mov
and
lret
ss
mov
xor
xchg
cmpsb
enter
lds
jle
push
and
xor
mov
sbb
or
cmc
or
loopne
es
fs
mov
incb
xchg
adc
mov
cld
pop
add
or
scas
in
cmpsb
jp
lahf
mov
dec
out
inc
hlt
xor
mov
add
das
pop
pop
cmp
lcall
sbb
add
enter
ja
dec
pop
xchg
mov
sbb
push
cmpl
pop
movsb
jno
add
adc
mov
je
ret
push
inc
pop
fcoml
push
xlat
or
loope
test
js
pop
push
aaa
adc
push
push
daa
dec
and
divl
leave
sub
inc
or
stc
inc
mov
jne
push
sub
mov
pop
scas
sbb
lret
pop
hlt
push
push
push
jno
cmp
pushw
imul
mov
fmuls
xchg
fbstp
push
mov
and
dec
mov
addl
cmp
push
inc
mov
stos
add
jp
lea
sbb
jmp
pushf
scas
scas
mov
jge
jp
in
push
cwtd
in
xchg
cmc
cmove
pop
ret
jnp
shll
adc
test
fsubrs
jbe
arpl
fdiv
sbb
push
xor
lds
nop
mov
and
pusha
inc
pusha
cmp
dec
popf
mov
mov
pop
adc
mov
sub
test
cmp
std
lret
pop
pushf
je
sub
jno
clc
xchg
shll
xor
pusha
mov
ds
je
stos
and
stos
scas
inc
frstor
xchg
inc
aas
adc
pop
xchg
aas
pusha
push
jg
xchg
rorb
int3
cltd
xchg
mov
repz
or
mov
fs
fdivrl
arpl
repnz
call
pop
inc
fcoml
shl
jp
arpl
scas
adc
mov
add
and
cltd
adc
jle
ja
imul
dec
pop
push
outsl
push
xchg
sub
push
lea
mov
pop
xor
fbstp
insb
adc
mov
adc
and
adc
add
jbe
dec
pop
lods
sub
or
cltd
mov
mov
popa
xchg
jnp
insb
mov
pop
dec
sub
cmp
cmp
xlat
mov
stc
add
jmp
gs
jae
das
pop
or
lahf
sarb
cmpsb
js
dec
inc
push
mul
add
push
jg
push
sub
test
push
insb
mov
in
fidivl
adc
cld
xchg
adc
inc
pusha
jbe
jno
mov
or
sbb
add
or
jo
mov
sub
negl
aaa
or
lds
pusha
sbb
xchg
jo
enter
pop
jmp
ja
fsubs
repz
inc
and
test
lret
shll
mov
cld
arpl
jl
cmp
adc
stos
ja
push
cmp
aad
dec
pop
xor
or
push
aas
add
add
and
fsubrp
loop
xor
dec
aaa
xor
sub
aad
lret
sbbl
inc
aam
cld
xchg
pop
cmc
pop
daa
jle
mov
xorl
fdiv
push
fnstcw
je
pop
cmpsb
push
es
dec
dec
cmc
jno
mov
jb
cmp
mov
mov
pop
insb
inc
dec
xor
adc
test
mov
pop
push
mov
bound
int3
add
jmp
fbld
out
cltd
push
fimuls
imull
gs
xchg
sbb
jmp
cmpsl
ja
add
jns
mov
xlat
lret
jecxz
xchg
repz
repz
inc
loope
cltd
jp
jmp
icebp
int
rcr
repnz
adc
xchg
adc
xchg
inc
mov
int
mov
push
fdivl
out
sbb
cli
mov
or
sbb
mov
aad
sub
add
idivb
fcoms
iret
mov
cmp
mulb
mov
pop
clc
push
add
imul
icebp
push
lods
cmp
sbb
testb
and
fwait
aaa
clc
mov
incb
and
jno
xchg
cs
xchg
dec
lcall
cmc
cmp
dec
ret
lock
or
dec
lcall
mov
or
dec
lods
scas
shlb
shr
pop
push
jne
xchg
cs
push
pop
lods
inc
jp
and
test
int
xchg
dec
popa
xchg
repz
and
sbb
inc
xchg
xchg
aas
pop
adc
or
push
add
clc
mov
call
or
fldl
mov
bound
aad
mov
dec
pusha
lods
stc
push
in
into
or
lods
test
outsl
pushf
shlb
add
jecxz
xchg
mov
vpshufhw
adc
push
add
mov
and
fidivl
es
mov
lahf
mov
stos
dec
scas
push
icebp
cld
push
pop
js
xchg
cmp
mov
push
in
int
daa
lahf
sub
mov
je
lods
dec
or
lock
nop
lock
jge
cmp
ret
aad
test
mov
cmpsl
repz
fidivl
or
into
leave
adcb
ljmp
gs
inc
sbb
push
sbbl
dec
mov
adc
mov
loopne
ret
cmpsb
inc
not
and
adc
out
mov
pusha
sarb
insl
add
jae
pop
mov
pop
icebp
xor
js
test
repz
jnp
jo
xchg
rcrb
xchg
xor
dec
inc
jnp
jbe
sub
mov
adc
and
fs
es
in
sub
xchg
add
cmp
fwait
mov
arpl
fstp
ret
adc
scas
and
rclb
imul
shlb
out
xchg
dec
icebp
ret
dec
pop
ret
jnp
js
inc
or
sbb
push
or
nop
cmp
jo
mov
xchg
push
add
lds
out
stos
and
xchg
jle
les
xchg
stos
loop
pop
push
sbb
lea
jle
mov
jnp
hlt
pop
sub
int3
add
cli
adc
add
mov
fdivrp
mov
repz
mov
jnp
lods
add
xor
or
add
jae
fwait
and
mov
ja
cmp
mov
loope
xchg
sub
cs
sub
ret
lods
les
sarb
inc
sbb
inc
aam
inc
cltd
lds
push
icebp
daa
hlt
mov
xor
xor
or
cmc
xchg
test
pop
aad
adc
adc
mov
cmp
test
movsl
jb
add
adc
add
popf
test
xchg
or
pushf
jnp
mov
push
mov
test
pop
inc
mov
decl
sub
movsb
stos
icebp
mov
mov
es
bound
adc
xor
aas
mov
pop
mov
imul
sbb
data16
push
sbb
aad
and
or
adcl
or
popf
cmp
xlat
test
pop
test
dec
xchg
adc
adc
loop
adcl
mov
sub
stos
mov
loope
inc
or
cwtl
mov
lcall
xchg
movl
or
or
aam
sub
addb
pop
mov
lret
xchg
mov
lods
imul
push
imul
jae
std
jo
pop
out
xchg
testl
sbb
sub
nop
shl
and
lret
jns
fnstenv
popf
lock
pop
test
lret
cwtl
xor
pop
imul
mov
dec
add
into
je
and
sbb
cmpsl
stc
or
pop
push
or
movsl
in
fistpl
fbstp
hlt
in
int
xchg
js
movsl
xor
pop
cld
xchg
dec
roll
daa
lahf
ss
call
insb
inc
sub
sub
mov
push
repz
sbb
xchg
je
inc
cld
xor
jecxz
cltd
dec
or
movsb
dec
sahf
pusha
or
push
or
jp
pxor
ficoms
cmp
mov
shrl
xchg
out
adc
pop
leave
pcmpgtw
repz
dec
adc
cli
jmp
and
dec
cld
fsubs
adc
fwait
je
jb
xor
sub
mov
dec
pop
xchg
movsl
cmpsl
inc
jg
and
in
shlb
mov
dec
loop
xlat
add
jge
sbb
lcall
cwtl
jno
aaa
mov
push
dec
lahf
adc
ds
shll
xor
in
inc
cmp
in
sti
wbinvd
nop
call
inc
sub
repnz
pop
insb
je
or
mov
add
sub
cld
icebp
push
cmpsl
xlat
jne
ret
jge
loop
inc
fwait
hlt
xchg
sub
pop
dec
in
loopne
mov
cmp
cmpsb
add
jo
mov
xchg
outsl
or
adc
sub
andb
out
mov
jbe
movsb
mov
sbb
cmp
adc
jne
or
adc
mov
sub
sahf
sub
clc
or
in
xchg
inc
das
adc
sahf
xchg
lret
je
in
xchg
ljmp
xchg
fcmovb
or
cltd
xor
outsb
mov
dec
sbb
lods
xor
jb
out
cmp
push
fildl
mov
loope
stos
imul
xchg
icebp
mov
fwait
sti
ja
mov
push
sahf
gs
dec
movsl
loopne
jo
js
repnz
out
jb
or
push
pop
adcb
jb
in
cs
pusha
pop
ja
mov
fisttps
stos
mov
pop
xor
fstps
and
cli
push
lods
test
pushf
repnz
sbb
aad
cmp
ret
sahf
push
gs
ds
data16
and
mov
sub
lcall
jge
xor
popf
arpl
xchg
xchg
call
int3
inc
outsl
mov
outsb
loopne
adc
xorl
pop
or
test
lcall
push
in
mov
pop
imul
ds
jne
into
mov
repnz
cmp
inc
push
jae
sub
mov
cmp
xor
xchg
ret
aad
push
dec
cwtl
in
in
cwtl
test
lock
addr16
jecxz
movsl
mov
data16
int
mov
sbb
ror
mov
andb
sub
mov
jae
mov
stc
adc
fs
pop
out
mov
cs
mov
fdivr
mov
xlat
cmc
adc
push
push
cli
pop
cmp
fsubrl
clc
push
divl
sbb
and
lret
iret
cmp
arpl
stc
nop
pop
cld
scas
out
jle
xor
dec
mov
xor
push
inc
std
lret
es
iret
mov
out
mov
pushf
lcall
push
icebp
adc
mov
mov
sti
mov
mov
inc
pop
xchg
sbb
pop
cmpsl
stos
adc
jnp
jbe
jae
cmp
insb
vrsqrtps
nop
mov
popa
mov
enter
sub
xchg
insb
jae
mov
mov
stc
ss
fnstenv
push
adcb
pop
jnp
jo
lahf
shlb
dec
sub
cmp
repnz
pop
or
in
lahf
aas
int
xor
xchg
xor
leave
xchg
adc
cld
mov
sbb
sbb
mov
sbb
js
adc
dec
gs
sbb
pop
hlt
dec
add
fdiv
inc
push
scas
jb
push
movsb
rorb
cmp
xor
data16
addr16
push
sbb
loopne
enter
lret
jmp
test
nop
push
jmp
push
mov
and
adc
xchg
cs
andb
enter
cmp
lods
or
mov
out
xchg
jae
nop
cmp
adc
pop
loope
fistl
push
test
cmc
and
in
jne
jne
aas
pop
jge
test
dec
sbb
jb
incl
int
inc
es
or
lcall
sub
jne
push
cmpsb
movb
rcrb
mov
jl
shll
lds
push
sbb
bound
jae,pn
and
xchg
out
fmuls
xchg
in
mov
jecxz
jae
push
mov
sbb
loop
adc
mov
addr16
cmp
xchg
sbb
int3
int
pop
xchg
cmc
lods
ja
loope
sbbb
inc
cltd
xor
jmp
push
xor
jbe
cmp
test
gs
mov
ja
pop
aam
mov
xchg
dec
sbb
inc
bound
jg
adc
fidivrl
aas
lret
dec
jae
pop
hlt
mov
dec
mov
push
rcrb
push
mov
movsl
test
jb
xchg
popl
repz
lock
adc
or
jle
je
test
lea
dec
insl
and
into
gs
dec
in
push
frstor
test
testb
mov
aaa
in
adc
inc
push
add
sub
push
aam
lods
cmp
jns
sub
mov
add
ja
inc
cs
xchg
xor
cmp
test
adc
dec
fisubrs
dec
stc
add
sbb
pop
rdpmc
cmp
xchg
pop
lcall
pop
jbe
fisttpll
and
xchg
or
dec
cwtl
xchg
shrl
mov
icebp
sbb
push
sbb
jecxz
or
shl
es
mov
ljmp
or
xor
jl
or
sbb
sbb
cmpsb
movsl
fidivrl
or
int
loopne
mov
xchg
andl
and
mov
jnp
sbb
mov
adc
pop
mov
lret
xor
gs
scas
jb
imull
push
pop
mov
addr16
pop
out
js
es
faddp
fimull
cmp
mov
or
sub
sbb
mov
and
or
jp
cs
into
out
xchg
mov
xchg
push
in
addl
lret
mov
mov
das
add
clc
out
jmp
lds
jle
inc
inc
leave
mov
cli
xor
fninit
sahf
clc
push
inc
add
cmp
inc
popa
ss
rcl
sbb
lods
inc
jb
xlat
insl
jmp
or
mov
sub
mov
or
mov
sbb
lea
in
repnz
mov
cmp
pop
insl
js
lds
dec
dec
xchg
add
push
addr16
sbb
xorb
xchg
out
sub
lret
mulb
imul
repnz
jnp
push
dec
add
or
add
xchg
mov
mov
sub
int
mov
pop
aad
insb
enter
in
ror
adc
loop
xor
push
aam
mov
popa
pop
inc
fldcw
inc
pusha
sub
and
sub
dec
negb
xor
lea
and
xor
aad
in
xor
and
std
movl
add
push
fsubrp
fdivr
js
sub
and
push
pop
test
in
inc
mov
insb
lret
mov
outsb
icebp
sub
mov
fldl
push
xor
jmp
dec
mov
fnstcw
rorb
sbb
rorb
fs
mov
and
enter
xor
jg
imul
push
insb
hlt
pop
mov
dec
lret
hlt
sbb
out
jp
pop
pusha
jp
mov
push
in
mov
lea
mov
mov
pop
lock
lods
jl
cld
bound
jg
dec
cld
xor
mov
jbe
mov
cli
pop
jl
es
jmp
inc
jecxz
xlat
add
cmp
sbb
sub
mov
mov
mov
and
sti
mov
sbb
repz
cmp
jge
xchg
lcall
cmp
out
mul
ljmp
cmpsb
testb
sbb
mov
pop
adc
mov
popf
mov
ret
lea
mov
mov
enter
pusha
adcl
pop
shlb
shr
lods
add
rol
lds
mov
push
or
nop
mov
sbb
sarl
shr
out
sbbl
mov
shrb
and
das
mov
mov
test
adc
and
fsts
dec
movsb
push
push
cmp
mov
sbb
or
push
mov
js
sahf
adc
inc
mov
lahf
in
sarl
ret
sub
mov
ficoms
outsb
js
clc
test
int3
mov
dec
cwtl
push
in
push
mov
xor
dec
es
mov
andb
xchg
add
sti
sarl
test
int
js
sbb
push
repz
adc
mov
insl
cld
jecxz
cmp
clc
imul
cmpb
fmuls
ret
pop
push
adcb
ficoms
and
sub
push
gs
test
jle
cmp
mov
popf
sub
testl
xor
in
test
mov
mov
nop
ss
movsl
mov
sbb
movsl
cmp
loopne
cmc
aam
or
or
mov
data16
push
dec
movsb
cmp
mov
cmc
mov
xor
test
loope
adc
jge
imul
push
notl
mov
jne
outsl
sub
mov
mov
jno
addr16
sbb
mov
cmpsl
mov
int3
pushw
popf
xchg
in
jp
pop
lds
repnz
mov
mov
ret
inc
xchg
imul
lods
adc
popa
jns
mov
fcoms
fisttpll
bound
scas
test
mov
and
adc
es
insb
shll
sbb
inc
scas
stc
fsubrl
mov
dec
int3
vcomisd
es
jne
std
push
fistl
push
xchg
push
addr16
and
xor
mov
jle
jns
jl
out
arpl
jnp
mov
push
jnp
sbb
or
repz
mov
pushf
and
fildl
push
lods
mov
push
xor
jo
pushf
push
inc
repz
jge
sub
pop
out
jge
pop
inc
fwait
add
cmpsl
mov
iret
cmp
movsb
insl
inc
paddsb
insl
mov
cvtps2pd
sbb
sbbb
or
popf
rcl
xchg
xor
cld
in
inc
jmp
or
mov
frstor
push
inc
mov
shlb
call
dec
loopne
adc
lcall
cld
ret
out
mov
sbb
mov
test
and
sahf
or
iret
pop
cs
cmpsb
xchg
aam
or
jae
push
or
lret
mov
jp
jl
adc
xchg
fdivl
das
jecxz
pusha
pop
push
or
pop
xor
dec
shr
js
mov
cmpsb
fnstsw
mov
or
outsb
mov
imul
mov
mov
iret
sbb
lods
fidivrs
push
dec
or
pop
out
dec
sub
rolb
cmc
js
and
je
and
jecxz
outsl
into
ljmp
shrl
faddp
hlt
out
xchg
testl
bound
insl
jg
aad
and
ljmp
paddd
pop
ret
into
lcall
mov
stos
filds
cmpsl
cmpsl
sahf
arpl
mov
inc
cmp
inc
or
push
sbb
pop
loope
test
sti
fwait
fwait
pop
jne
mov
pop
icebp
outsb
imul
int3
pop
insb
sub
shlb
test
cmp
jnp
shl
pushf
fsts
fisttpll
push
lods
mov
sbb
fdivl
int
inc
aas
dec
cmp
icebp
insl
sahf
scas
inc
adc
outsl
ret
adc
in
dec
sti
adc
mov
gs
sub
aad
add
sbb
mov
mov
ret
test
jg
icebp
pusha
pop
mov
in
ss
add
lret
andl
dec
dec
adc
insl
xlat
mov
mov
aad
jbe
out
adc
lods
sbb
enter
xchg
insb
call
or
xchg
lret
dec
mov
jle
adc
mov
mov
in
rolb
fidivs
outsb
pusha
jl
mov
pop
or
nop
cmp
or
sub
inc
aaa
scas
cmp
shrb
dec
xchg
sub
movsl
sbb
jge
and
xchg
ljmp
mov
mov
addl
lret
push
fs
aam
jecxz
lods
movsb
lret
out
xchg
cmp
dec
dec
ret
cmpsb
outsl
inc
fsub
shrb
repnz
add
gs
arpl
int
fisttps
shlb
xor
add
pop
jnp
aaa
push
or
adc
getsec
outsl
cmp
sbb
loope
aas
mov
xor
inc
fcoms
xor
jb
xor
popa
lret
bound
inc
jmp
loop
dec
push
mov
jg
roll
or
cs
xor
nop
mov
jmp
and
stos
dec
repz
fsubp
jp
je
inc
fwait
insb
push
dec
out
movsl
ret
pop
insl
enter
enter
out
ja
mov
pop
insl
aam
or
sbb
dec
pop
popf
lods
daa
or
cltd
add
out
mov
in
jle
jne
lds
xchg
add
mov
pop
xor
mov
mov
fneni(8087
cmp
sbb
cmpsb
lds
pop
lock
jg
mov
cwtl
test
jge
pop
outsb
cli
sub
xchg
mov
les
mov
mov
aaa
into
mov
loop
scas
inc
loop
or
and
fsubs
mov
call
mov
pop
push
xchg
movsl
lahf
cmp
cmpsl
pop
call
cs
adc
mov
jle
mov
ret
gs
xor
or
mov
adc
pop
rcrb
out
sub
js
leave
imul
mov
push
aad
mov
jo
hlt
mov
rcpps
inc
and
adc
xor
iret
xor
in
mov
dec
jbe
and
pop
inc
dec
push
inc
jnp
data16
mov
xchg
insl
push
inc
xchg
xchg
int
lea
imul
push
js
cld
mov
xchg
aam
cmp
imul
mov
and
inc
ret
rcrb
gs
push
mov
test
lcall
pop
aas
fstpl
and
fnsave
mov
sub
push
fildll
mov
mov
sbb
in
testl
dec
test
das
add
sbbl
sub
cld
sbbb
mov
pop
jge
outsl
mov
lcall
mov
mov
pop
push
adc
aas
gs
ret
or
insb
and
inc
nop
jnp
mov
repnz
jmp
or
pop
jno
pop
lea
nop
xchg
out
repz
in
sub
mov
scas
pop
fdivs
rcll
es
inc
and
inc
cld
mov
les
out
sub
and
mov
push
inc
fsts
inc
xchg
sub
std
fnstenv
icebp
stos
mov
aam
xchg
pop
or
in
dec
movl
adc
cltd
cs
daa
ret
aad
mov
jnp
dec
loope
popf
dec
dec
xchg
mov
mov
test
rclb
jns
inc
mov
in
mov
sbb
rol
aaa
jo
shlb
popf
pop
push
into
mov
test
and
jecxz
mov
cmpsb
mov
aam
jecxz
dec
sub
dec
lods
inc
mov
mov
je
adc
push
and
pop
adc
xchg
inc
or
mov
pop
stos
test
cmp
xchg
test
cld
adc
sti
movsl
mov
enter
inc
rorb
stos
ljmp
ja
clc
fnstsw
mov
push
jns
je
jb
jp
mov
lock
imulb
outsb
inc
and
adc
scas
pause
add
pusha
out
and
ljmp
xor
pop
insb
push
dec
fldt
loop
pop
repnz
xor
std
ret
ss
setno
mov
inc
push
setl
movsl
arpl
data16
inc
inc
jl
fnstcw
xor
stc
xchg
xor
sbb
and
inc
mov
les
leave
adc
push
in
jle
adc
pop
xor
fsubs
test
test
adc
ficomps
shll
aam
push
xor
mov
mov
imul
std
das
sbb
fidivl
sarb
loopne
add
mov
test
and
jne
xor
xchg
xor
aas
xchg
adc
add
movsb
jno
andb
shll
add
mov
icebp
punpckhwd
mov
imul
mov
xor
jns
lods
fimull
into
lea
stos
pop
jno
sbb
xorb
mov
loop
mov
cmp
jl
int3
cmpsl
or
jle
cmp
rcll
loopne
clc
mov
sbb
or
sbb
stc
loope
sub
fcoms
imul
pop
sbb
jp
or
xchg
dec
xchg
call
sub
pop
es
inc
insb
pusha
popa
aas
xchg
xchg
pop
popf
out
jle
ja
mov
jle
dec
call
sbb
out
movsb
cmp
adcl
fadd
add
stos
xchg
or
mov
sarb
cmp
lods
inc
mov
pop
repz
and
push
push
xchg
mov
and
push
mov
mov
pop
xchg
fisubl
int3
cmpsl
mov
pop
addr16
mov
and
loope
cmpb
sub
add
pusha
sbb
cmp
and
jmp
add
lahf
je
inc
cltd
jns
lret
shl
xor
scas
iret
inc
shll
lret
iret
pop
and
ss
jg
mov
fiadds
mov
push
insl
jno
adc
mov
xor
inc
outsb
nop
push
jo
mov
push
xor
std
or
jle
adcl
loop
sub
jmp
mov
mov
cwtl
add
push
fs
xlat
pop
push
xchg
pop
cmc
in
mov
pop
add
xor
imul
ja
ja
outsl
out
sub
cmp
inc
loopne
fmuls
jp
xchg
mov
fwait
and
das
lahf
insl
add
mov
mov
decl
scas
pop
sahf
fbstp
jo
scas
mov
lods
test
jb
xor
jns
pop
in
fbld
into
push
enter
call
sbb
sbb
sbb
xchg
mov
cmp
cmp
mov
sbb
pushf
test
hlt
jbe
fwait
xor
jmp
sahf
jle
lahf
fwait
shlb
cmp
push
imul
and
pop
mov
loopne
add
addr16
xchg
aas
test
mov
das
push
lock
pop
push
mov
arpl
popa
push
or
das
add
pop
fidivl
fnsave
es
jns
sti
add
xsha1
fwait
dec
test
mov
imul
and
adc
leave
pusha
sti
loopne
or
and
push
call
xor
lods
pop
icebp
jmp
data16
test
push
adc
sbb
push
inc
aaa
and
xchg
nop
xchg
lret
mov
mov
xor
test
inc
lods
imul
or
push
decl
inc
pop
fmul
mov
sti
out
push
mov
mov
inc
stos
push
and
adc
int
mov
push
lock
incl
adcb
cs
mov
jmp
das
das
and
mov
scas
inc
fwait
ss
mov
mov
add
ss
dec
pop
lret
lahf
out
push
inc
in
addr16
jb
iret
mov
imul
mov
ret
xor
xchg
inc
cmp
pop
sbb
jmp
cmp
ss
ljmp
push
mov
xchg
mov
subl
push
sub
std
stc
int
jmp
cmp
jmp
sbbl
aad
test
stc
add
jbe
nop
xchg
lcall
mov
or
jl
test
cld
adcl
stos
inc
pop
fdivrl
push
lods
push
test
mov
add
mov
lods
inc
insb
sub
mov
or
or
pop
pop
dec
mov
movsb
mov
or
mov
pcmpeqd
and
push
jns
fsubrp
scas
inc
sub
int
clc
pop
pop
comiss
add
insl
jb
push
into
insl
mov
mov
frstor
ss
xor
mov
jns
xchg
push
mov
lret
cmpsl
mov
jecxz
pop
jmp
mov
sub
aad
or
dec
push
add
pushf
out
push
xor
rorl
popa
push
jb
dec
testb
pop
cwtl
notb
or
and
ret
shl
lods
adc
cwtl
and
enter
cmc
jmp
add
pop
es
cwtl
mov
fnclex
mov
stc
pop
add
sub
dec
lcall
mov
clc
jl
je
dec
inc
jns,pn
xor
int
mov
pop
sub
pop
push
lods
jl
sub
adc
cli
fists
sbb
inc
dec
pop
cmp
cmp
stos
loopne
repnz
sub
mov
lock
mov
stos
out
push
scas
mov
stos
imulb
inc
in
rcr
mov
adc
cs
cmc
add
and
sub
js
int
test
or
sarl
push
stos
fs
mov
incb
mov
pop
mov
in
sahf
daa
xor
ss
mov
cwtl
das
or
xchg
cli
lods
out
cld
sti
int
popf
dec
mov
popf
sub
sbb
ljmp
mov
out
dec
lock
and
pop
xchg
add
dec
inc
push
hlt
aas
in
cwtl
dec
fwait
push
daa
inc
adc
xchg
ljmp
mov
mov
daa
push
sahf
adc
js
fmul
mov
pop
xor
push
xchg
lds
mov
imul
pop
scas
inc
out
pop
je
mov
adc
in
cmpsb
cmpsb
jg
xor
cmpsl
div
loope
iret
fldl2t
add
fstpl
mov
loope
decb
jmp
outsl
xor
push
mov
jnp
xor
push
mov
js
lock
js
jns
std
mov
mov
xchg
fidivrs
or
cmp
pop
imul
lods
lret
data16
push
xor
pop
test
inc
mov
cwtl
clc
popf
jb
js
add
inc
repnz
jns
arpl
cmpsb
in
outsl
xor
xor
shrl
ret
int3
cwtl
das
or
sbb
stc
test
loopne
push
stos
mov
pop
lds
movsb
mov
sbb
dec
pop
or
ds
gs
or
sbbl
repnz
aad
fmull
cmc
lea
jl
push
gs
add
sub
push
cs
imul
out
and
or
or
int
sub
rcl
in
cmp
jle
mov
pop
xchg
ds
cmp
add
in
or
lret
sub
push
xor
mov
decl
andl
gs
jl
or
sbb
cwtl
jp
fstl
mov
push
test
push
ret
movsl
enter
pop
sbbl
mov
sahf
push
daa
repz
pop
aaa
pmulhw
mov
mov
push
adc
mov
jnp
lods
mov
add
xchg
mov
and
in
add
jb
xor
into
sbb
sub
pushf
xor
pop
inc
xchg
clc
mov
sbb
lods
ret
lcall
sbb
xchg
sbb
test
in
xchg
in
insb
test
add
mov
mov
jmp
jl
mov
mov
imul
pushf
and
pop
rorb
fxch
inc
insl
pop
hlt
jns
push
shlb
and
pop
jmp
push
loopne
jnp
dec
lods
shrb
inc
dec
lock
dec
ja
mov
and
push
cmpsl
aas
fdivs
push
fnstenv
xor
xor
mov
inc
pop
cmp
ficomps
pushf
pop
mov
xchg
fdivl
push
mov
mov
movsl
dec
pop
pop
or
inc
or
adc
movsb
shlb
test
lods
sub
mov
pop
xor
mov
leave
cld
lds
stos
inc
fiaddl
pop
jge
arpl
xchg
cs
cmp
outsl
pop
in
imul
rcrl
stos
cmp
aas
push
mov
add
leave
mov
add
mov
xchg
cmpl
iret
jne
repz
in
or
outsl
jne
je
adc
mov
and
push
fucom
dec
jecxz
in
sub
cmpsl
mov
mov
and
jae
or
fwait
cmp
int3
xchg
add
xchg
ja
mov
mov
nopl
cld
xchg
dec
sub
jecxz
es
pop
or
mov
jge
sti
clc
shl
dec
add
mov
rorb
add
cmc
dec
xchg
or
jbe
sbb
das
jle
dec
mov
pop
test
dec
xor
mov
xor
das
push
call
sub
push
mov
lds
cmp
divl
push
addb
and
or
xor
pop
sub
hlt
push
dec
push
lods
roll
je
or
out
mov
xchg
not
popa
cli
xchg
stos
lods
push
dec
cmp
fstl
cmp
xchg
adc
mov
inc
push
or
add
adc
jle
ljmp
push
hlt
fsts
dec
enter
loope
jno
data16
cwtl
out
sbb
shl
cltd
test
ffree
imul
lea
mov
or
or
mov
pop
hlt
pop
xor
adc
ss
xor
push
inc
pop
cmc
roll
stos
sbb
push
mov
pushw
mov
shr
outsb
pop
fnstsw
test
fdivrs
insl
fisubrl
rcrl
mov
xor
int
or
popf
xchg
mov
inc
xor
pushl
mov
stos
xchg
dec
pop
int
pop
scas
repnz
inc
ljmp
loop
adc
jnp
lock
mov
into
data16
out
xchg
mov
test
mov
aad
adc
pop
call
add
daa
mov
inc
add
push
lcall
loope
dec
cmp
mov
push
cmpsb
adc
int
push
xsha1
cmpsb
dec
jmp
xlat
test
cmp
sbb
je
cli
adc
jne
fs
sub
or
lret
dec
adc
push
rcrl
shrb
ret
dec
push
std
and
loopne
incb
mov
ret
jo
sub
outsl
cmpl
dec
or
sbb
pop
sub
mov
xor
push
sbb
xor
cltd
cmp
addr16
aad
imul
mov
rorb
push
ss
cmp
inc
pop
repz
into
xchg
push
mov
int
jae
inc
or
pushf
push
aas
mov
out
and
mov
or
das
out
test
ret
add
jg
cmpsl
xor
icebp
adc
xchg
ja
dec
add
inc
or
test
std
cmp
fcoml
or
sub
mov
dec
cmc
not
push
cs
dec
add
stc
subl
arpl
mov
inc
ja
fistpl
stos
xchg
cmpsl
pop
movsb
rcrl
lret
sti
cs
iret
fmull
sub
push
test
arpl
frstor
in
stc
pop
mov
and
clc
cmp
addr16
push
in
mov
pcmpgtd
movsl
mov
push
mov
lods
mov
nop
bound
nop
jno
leave
and
pop
les
add
xor
mov
push
jns
in
jl
leave
sub
fs
fs
mov
jmp
dec
dec
daa
incb
jno
cmp
fwait
sbbl
insl
jmp
std
inc
xchg
ret
sbb
es
xchg
sbb
fcmovb
rcrb
xchg
cltd
sub
mov
xchg
in
loope
adcb
cltd
push
js
cld
lock
and
mov
ret
push
andps
mov
xchg
popa
adc
mov
sbb
adc
jbe
xor
fsub
movsb
mov
push
inc
fldenv
or
cmpsb
ret
mov
mov
test
adc
mov
mov
add
mov
mov
lods
push
push
sar
mov
imul
sub
mov
adc
and
jle
mov
stos
sarb
mov
mov
decl
mov
mov
cmp
in
sbb
aam
andb
and
fists
and
test
jecxz
mov
iret
addl
xlat
popa
xchg
jo
lds
fwait
jne
xor
out
adc
or
pop
sub
push
xchg
add
add
push
mov
scas
aaa
jmp
sub
mov
inc
js
ljmp
pusha
add
les
jle
icebp
and
adcl
movsb
mov
insl
adcb
ret
pop
and
mov
lds
cwtl
push
or
pop
lock
sub
or
mov
daa
test
data16
rcll
add
ret
pushf
mov
cmp
mov
dec
hlt
cs
push
leave
push
int
std
repnz
das
stos
dec
lock
pop
cmc
rorb
divl
js
and
sti
xor
enter
and
inc
in
mov
je
movsl
lods
jae
fcomps
jns
mov
fists
cld
mov
jne
enter
popf
fs
add
jns
push
xor
mov
pop
icebp
cmp
push
pop
add
jg
push
mul
jg
inc
cmp
add
push
jo
and
stos
and
pop
int3
lea
pop
sub
jno
jle
por
fistps
sbb
add
mov
mov
dec
stos
fdivrs
dec
push
leave
pusha
cmp
scas
pop
fbstp
xchg
mov
pop
jae
fnsave
stos
push
loop
jl
shrl
or
or
or
pop
mulb
into
imul
mov
adc
or
out
gs
inc
mov
pop
inc
mov
mov
jno
jno
std
dec
iret
fld1
and
scas
pop
stc
out
inc
sub
dec
pop
ffreep
imul
repnz
mov
add
adc
iret
jnp
lahf
lods
lock
xor
jno
inc
cmpsb
mov
rorl
or
scas
sub
xlat
popa
test
cmp
push
insb
add
sar
push
ret
pushf
jne
sub
stc
adc
inc
mov
jge
clc
outsb
popf
mov
add
xchg
idivb
sbb
sbb
in
dec
add
jb
in
mov
fidivs
daa
or
pushf
pop
sub
cmpsb
ds
inc
jge
mov
xchg
jecxz
fwait
out
insb
push
in
int
test
sub
js
sbb
je
inc
push
daa
and
repz
sbb
jo
incl
aas
movl
inc
sub
push
fsts
xchg
push
pushf
xor
lods
cmp
xlat
popa
push
or
xchg
push
jmp
sbb
sub
jo
shl
stos
ret
xchg
loop
push
imul
pusha
mov
call
sarl
xor
andb
mov
in
push
addr16
xchg
sbb
mov
shlb
imul
or
push
sub
dec
and
clc
stos
gs
push
xor
xchg
xchg
ret
push
dec
ffreep
imul
mov
pop
mov
loopne
sbb
push
and
xchg
inc
out
jmp
aad
in
jbe
jb
push
fidivl
push
popa
add
mov
jge
xchg
mov
outsb
into
dec
dec
repnz
data16
adc
mov
daa
xor
inc
and
xchg
scas
sti
lock
frstpm(287
adc
mov
mov
je
cltd
mov
data16
xchg
pop
jge
js
outsl
repz
dec
jp
lods
es
cmc
mov
jl
aaa
imul
push
and
mov
and
in
orl
jp
or
cwtl
cmpsl
fidivs
shlb
dec
dec
xchg
jge
or
out
xor
clc
dec
test
or
and
test
stos
stos
xorb
imul
shlb
mov
ja
xchg
testb
sbb
js
iret
jbe
adc
mov
dec
outsl
sbbb
fsub
das
call
cmc
mov
jle
loope
clc
ja
lea
mov
stos
mov
cmp
scas
pop
out
pop
mov
jmp
aaa
pop
hlt
push
cmp
and
cli
jnp
sub
mov
outsb
fists
ss
sahf
pop
or
loop
imul
mov
mov
fwait
std
bswap
jg
fstpl
daa
sub
and
push
mov
push
xor
cltd
cmp
lret
xchg
jno
pop
out
and
pop
repz
bnd
sar
sbb
sub
mov
xchg
pop
lods
sbb
ret
cmp
arpl
or
sub
pusha
idivl
iret
fldt
leave
sbb
xorl
lahf
jecxz
scas
in
mov
inc
nop
sbb
mov
cmp
add
push
mov
sbb
iret
jnp
inc
jb
dec
add
or
xchg
loope
stos
mov
cmp
ds
add
lds
rcrl
aas
dec
in
out
pop
adc
and
outsl
add
into
jg
repnz
outsb
hlt
mov
dec
adc
jle
sub
mov
jo
lods
lea
idivl
pop
test
imul
xchg
mov
rorl
lods
dec
jns
dec
lcall
sub
mov
mov
mov
int3
push
in
std
les
xchg
dec
dec
pusha
cmp
ret
int3
pop
xchg
cwtl
and
enter
mov
cltd
es
out
lds
fsubrs
mov
sbb
cmp
dec
xor
sub
insl
and
dec
dec
xchg
int
cmp
shlb
pop
lcall
cwtl
jmp
stos
dec
pop
jns
inc
gs
fwait
cmpsl
notb
in
fsubrs
dec
sbb
cmp
nop
aam
rcrb
xchg
lods
add
jo
cmp
fdiv
inc
outsl
mov
push
loop
inc
dec
lret
pop
lret
and
push
es
call
lods
int
xor
ret
adcl
and
out
jle
shr
xchg
add
mov
movsb
or
push
int
loopne
ret
movsl
mov
sub
lock
stc
shrl
mov
mov
test
push
dec
jle
mov
sahf
push
xor
sbbl
adc
inc
test
or
mov
pop
loop
mov
pop
dec
loop
outsl
or
or
jnp
int
adc
mov
out
pop
stos
cmp
mov
aam
xor
idivl
into
jno
sbb
push
jmp
stos
mov
dec
nop
test
fwait
outsb
clc
inc
or
rcrl
mov
mov
popf
bound
stos
lock
jl
mov
xchg
sahf
sub
lock
loopne
jge
test
xchg
aaa
lret
fwait
test
mov
and
cmp
out
insl
inc
xlat
lds
lret
xor
sbb
push
and
pop
mov
push
repz
rorb
jp
loope
scas
out
xchg
aaa
add
insl
sub
fsubrs
dec
in
inc
lods
inc
xchg
inc
lock
scas
pop
mov
mov
test
mov
dec
adc
sub
call
pop
test
sub
xlat
cwtl
gs
test
and
lods
outsl
add
stos
push
ljmp
cmpsl
cmp
stos
js
test
pop
repz
pop
scas
rcrb
out
jge
mov
cli
inc
dec
cmpsb
iret
arpl
xor
loop
loopne
xchg
lret
and
data16
fwait
sub
jle
or
sbb
outsb
arpl
mov
mov
loopne
scas
cmp
mov
push
leave
out
enter
xor
mov
dec
xchg
jecxz
cli
in
push
aas
mov
xlat
data16
dec
repz
cmpsb
leave
ficompl
cmp
jg
enter
ljmp
idivb
scas
mov
gs
inc
lahf
jbe
sbb
or
pop
sti
push
xor
hlt
ds
in
lods
pop
inc
xchg
test
mov
test
lcall
repnz
test
cmc
mov
xor
push
leave
xchg
test
mov
pop
cmp
ds
add
fs
lods
inc
repz
je
ret
mov
je
imul
fdivs
push
popf
sahf
ss
mov
dec
out
mov
sbb
mov
dec
js
mov
popa
loope
js
add
push
add
jmp
or
xchg
sub
mov
dec
addl
insl
xlat
push
aad
mov
jmp
pop
pop
adc
dec
add
ret
test
inc
jns
sti
and
pushf
mov
fmull
push
push
pop
rorl
jnp
xchg
add
jns
sbb
mov
mov
xchg
mov
imul
scas
jns
sbb
sub
lret
repnz
daa
push
daa
push
cmp
jb
mov
call
sbb
ljmp
jno
imull
push
jbe
mov
mov
cmp
jb
iret
xchg
mov
mov
into
dec
dec
cmp
clc
sbb
aad
andl
adc
pop
pop
sbb
dec
inc
das
cmp
cld
je
jp
aam
mov
insb
in
pop
pushf
loopne
scas
mov
mov
movsb
mov
popa
jge
repnz
jnp
xchg
jmp
out
fidivl
adc
lahf
mov
push
es
test
fistpl
rcrb
clc
jns
sub
sbbl
jge
scas
inc
cwtl
sahf
fnstenv
mov
push
lods
and
scas
inc
cmp
push
inc
xlat
test
scas
inc
push
out
jo
adc
inc
pop
pop
scas
xor
in
fsubrs
adc
sbb
int3
mov
inc
fcmovu
stos
sbb
in
lcall
std
mov
cmpsl
and
mov
add
in
sbb
lahf
sbb
xor
xor
push
stos
inc
gs
mov
aaa
sub
inc
add
push
and
jbe
ds
cmp
pushf
test
aas
aas
rcrl
cmp
xlat
testb
subb
data16
in
mov
movsb
or
fdivs
dec
daa
inc
adcb
dec
out
pop
outsb
fisttpll
out
xor
mov
data16
mov
leave
mov
and
popf
ds
jnp
xchg
push
mov
xor
jle
sub
outsl
jp
push
mov
add
xchg
les
into
mov
dec
pop
jmp
jns
push
mov
mov
ljmp
inc
mov
mul
xor
adc
pop
lahf
jl
cmp
pop
add
push
mov
rcrl
and
lcall
push
test
decl
and
inc
mov
jo
dec
sahf
xor
data16
shll
aaa
fnstenv
fsubrs
dec
out
mov
adc
insl
add
push
and
mov
repnz
mov
jbe
subb
push
sub
outsl
aad
clc
push
arpl
push
xchg
cmc
push
add
mov
jno
in
adc
and
dec
push
das
adcb
stos
and
pop
sub
push
cmpsl
mov
cmp
aad
xlat
stos
jo
push
movsl
sub
mov
mov
inc
pop
shr
icebp
or
fcmovnu
mov
or
mov
jmp
shlb
adc
lret
loop
dec
iret
bound
push
jno
mov
aaa
lea
cmpsl
out
lcall
xchg
outsb
xor
mov
sbb
sub
ja
add
popa
sbb
xor
ljmp
xchg
out
adc
out
jnp
cmp
pop
addr16
ljmp
cmc
pop
push
out
push
add
arpl
in
mov
mov
int3
out
mov
sahf
ss
adc
xlat
and
mov
add
pushf
scas
mov
mov
outsb
mov
stos
cmp
jo
xchg
pop
sahf
loope
addb
pop
pushf
xor
dec
mov
pop
lahf
push
push
addr16
inc
pop
out
into
gs
push
fidivs
shlb
or
inc
lds
adc
in
in
adc
stc
cmp
mov
fidivl
jae
ja,pn
decl
jl
mov
int3
mov
pop
bound
sbb
push
pop
jg
call
xor
mov
jge
aam
lods
insb
fsubrs
sbb
cli
inc
decl
adc
cltd
or
popa
cmpl
mov
xchg
dec
sub
add
mov
mov
pusha
enter
fcompl
xchg
sbb
pop
sar
insl
decl
mov
push
push
iret
jnp
add
out
shrl
in
in
inc
ficompl
inc
jmp
insb
sub
mov
xor
pop
ljmp
or
sti
ss
mov
mov
into
cmc
push
lock
out
subl
enter
ja
mov
adc
icebp
out
int3
das
dec
js
gs
mov
into
cmp
xor
mov
ret
mov
fnstenv
addr16
test
mov
in
test
orb
pop
out
test
jnp
push
clc
xchg
jl
aam
jo
inc
out
ja
js
test
stos
sub
ljmp
lock
adc
pushf
sbb
xlat
addr16
and
mov
and
inc
out
int
sti
push
int3
sbb
xchg
icebp
mov
mov
icebp
lea
push
adc
pop
in
inc
sahf
in
out
sbb
or
mov
jp
add
inc
adc
insb
xchg
aaa
test
mov
ret
jg
pop
sub
call
paddq
aas
fwait
test
dec
pop
sub
dec
jecxz
movsl
adc
rorl
xor
pop
dec
stos
push
popf
shlb
xchg
jns
dec
rol
mov
repnz
filds
test
lea
xchg
icebp
dec
ljmp
sub
cmc
pop
cmc
repz
std
adc
mov
xor
std
mov
stos
inc
out
dec
loop
clc
inc
enter
jge
jmp
mov
iret
std
mov
roll
clc
adc
popa
or
push
fdivrs
into
sub
pop
push
inc
push
cs
inc
xlat
rolb
mov
and
flds
das
mov
mov
aas
add
mov
sarl
xchg
lea
xor
mov
inc
test
sbb
test
mov
fsts
leave
cs
xor
jmp
push
dec
cld
rorl
xchg
push
and
shll
pop
dec
in
jae
ficoms
mov
jge
adc
mov
mov
mov
lcall
inc
xor
iret
out
jae
scas
stos
outsl
push
test
scas
imul
bound
mov
jmp
xchg
adc
and
and
popf
sbb
jg
outsl
mov
out
cmp
or
test
sbb
cs
dec
movsl
rolb
dec
dec
shl
dec
mov
mov
in
sbbb
shrb
sti
cli
sbb
pushf
push
cmc
pop
xchg
or
xchg
arpl
js
pop
fwait
push
lods
cmp
ja
es
mov
dec
jecxz
movsl
stos
dec
push
sti
mov
shlb
jp
sub
sbb
dec
pop
out
test
fs
lret
mov
adc
xor
call
leave
pop
lahf
cmp
fdivs
xchg
xchg
mov
pop
mov
sub
pusha
jns
xchg
sub
xor
rcrb
inc
cmp
movsl
mov
jno
outsb
jecxz
mov
xchg
dec
pusha
add
stc
dec
jns
out
mov
int3
ja
jbe
jp
fisubl
add
cs
iret
add
je
loop
cmp
stos
std
inc
and
dec
dec
int
aas
sub
jne
out
hlt
sbb
mov
pop
inc
push
xchg
fistl
int
test
inc
aas
movsb
inc
lret
ss
xchg
xor
jno
and
fildll
mov
filds
icebp
push
and
sarl
nop
in
scas
inc
fucom
or
jne
mov
push
ljmp
jno
loop
es
jbe
or
scas
inc
pop
add
jle
arpl
rep
rol
cmp
push
sbb
in
scas
test
jns
adc
sbbl
int3
out
xor
cwtl
lret
leave
pusha
sti
inc
setle
sbb
jg
mov
push
lcall
movsl
cld
insl
and
fldcw
cwtl
enter
mov
mov
dec
jmp
mov
test
mov
in
iret
push
aad
inc
xlat
cli
addr16
mov
dec
out
mov
mov
out
jnp
jl
jmp
out
out
push
les
mov
fsubr
inc
ret
jmp
add
data16
add
or
bound
orb
or
push
xorl
imul
pop
mov
out
std
jne
popf
addr16
aaa
into
clc
stos
and
sbb
and
pop
ds
iret
adc
dec
pop
aas
or
mov
xchg
jp
dec
scas
mov
xor
xchg
jnp
inc
loop
pushf
adc
xor
pop
enter
add
add
sahf
xor
inc
xor
js
insl
inc
stc
fsub
cmp
push
xor
pop
mov
sub
call
jecxz
mov
pcmpgtd
inc
xlat
add
jg
fldt
adc
xchg
icebp
mov
add
cwtl
jmp
mov
jmp
mov
xchg
pop
mov
sbb
sbb
mov
or
and
and
loopne
cli
cli
pusha
cmp
push
jecxz
push
pop
aaa
es
inc
pop
jb
scas
jp
mov
clc
mov
push
jl
cmpb
and
mov
inc
sub
and
insl
fldt
adc
jbe
inc
lcall
jmp
adc
into
cmp
f2xm1
cltd
addl
sbb
inc
iret
and
jbe
cmp
add
rolb
sub
mov
inc
into
aad
and
setb
xchg
outsl
rorl
orb
femms
sbb
mov
push
jo
sahf
movsb
inc
push
test
inc
sub
xor
notb
fwait
mov
imul
je
sub
test
ret
push
pusha
pop
in
or
sub
add
call
lea
or
cmp
push
xchg
addr16
pushf
loopne
sarb
incb
push
add
jmp
test
jno
pushf
lret
push
repnz
cmp
dec
les
cld
aam
xor
addr16
les
push
sbb
fdivr
cmc
fdivl
pop
fisubs
in
xor
outsb
test
sbb
jle
int
mov
out
pop
xor
sbb
in
xchg
insl
leave
aaa
insb
enter
xchg
test
xchg
sub
lahf
lcall
cmp
icebp
movsl
aad
popa
xor
jp
inc
mov
in
test
dec
push
jnp
fidivrs
sbb
mov
jne
dec
in
mull
test
sub
mov
imul
inc
pop
cld
call
jmp
mov
sbb
into
out
bound
push
mov
shl
fistps
mov
or
dec
ja
lods
or
sahf
into
enter
aaa
orl
lahf
xchg
ds
scas
jg,pn
popa
es
fdivrs
inc
sbb
lock
xor
mov
loope
movsl
fadd
pop
fcmovnb
push
push
clc
cld
and
jbe
mov
xlat
leave
add
fwait
mov
les
sbb
je
mov
sub
or
lret
cmp
sbb
xchg
call
dec
dec
xchg
jecxz
cld
nop
decb
into
lods
decb
xor
xchg
adc
fsts
imul
cmp
shrb
fwait
cs
cmp
pop
jns
xor
cmpsl
enter
mov
lods
mov
test
ljmp
stos
shr
xor
sahf
in
adc
jns
test
std
jmp
decl
mov
in
adc
sub
or
xor
dec
sbb
daa
and
lcall
sbb
adc
gs
mov
aam
fdiv
inc
ret
pop
pop
xchg
imul
lock
cmp
push
movsl
sbb
test
pop
repnz
test
cmp
xor
inc
out
mov
sbb
cld
test
aas
addl
lcall
je
and
pop
adc
out
push
ds
fdivs
iret
dec
mov
jp
mov
addr16
inc
fstl
sbb
ret
arpl
ffree
aaa
shlb
pop
aad
jecxz
callw
and
dec
and
subl
sub
repnz
xlat
adc
mov
mov
or
mov
stos
pusha
pop
pop
dec
push
dec
mov
in
mov
cmp
idivb
outsl
mov
push
movsl
fistpl
std
adc
add
sub
sbb
cmp
cmp
bound
cmc
lods
adc
xchg
xchg
test
mov
les
cld
inc
rol
dec
lds
mov
and
std
add
xchg
dec
stos
jp
sarl
xlat
int
mov
movsl
dec
and
add
dec
fbstp
sarl
sub
or
hlt
cwtl
push
fdivr
sub
inc
push
pop
out
in
or
test
fcmovbe
scas
xorb
imul
xchg
mov
outsb
aaa
mov
aad
inc
insl
jl
por
sub
jns
stc
xor
jge
lods
jae
test
test
insl
mov
popa
icebp
inc
jnp
ja
push
xchg
pop
xor
mov
sub
sbbl
and
cmp
pop
and
adc
leave
loope
xor
call
das
ror
add
fidivrl
jo
jo
pop
sub
push
cli
xor
movsl
leave
out
test
xor
inc
iret
fildl
and
into
and
pop
jl
shlb
jg
push
or
daa
jno
inc
dec
dec
sbb
ja
test
adcl
xchg
hlt
sbb
fdivrl
xlat
ret
loop
cld
pop
aaa
xor
ret
outsl
push
fidivrl
popf
lret
pop
mov
int
sub
daa
or
mov
sahf
daa
push
pop
inc
lcall
cmp
mov
mov
sbb
aam
mov
outsb
rcl
xchg
mov
aas
push
stos
jb
pop
movsb
int3
fnstenv
pop
and
pop
fisttps
and
jne
adc
movl
mov
cmp
cmp
push
movsb
js
stc
aaa
aad
stos
test
adc
decb
and
or
mov
mov
aad
sub
push
pop
adc
lock
shl
mov
adc
lret
and
addr16
pop
inc
in
lahf
sbb
test
jl
and
out
jne
mov
xchg
inc
lahf
imul
mov
aaa
inc
mov
sub
mov
sub
bound
fbld
scas
fsubp
cmpsl
out
cli
cmp
in
cmp
nop
pushf
inc
cmc
add
and
cmp
inc
push
or
int
movsl
sub
fsub
jecxz
arpl
cli
nop
xor
mov
movsb
fwait
aad
mov
iret
loop
fimuls
jle
sub
pop
movsb
xchg
dec
pushf
daa
inc
xor
cmp
aas
jl
mov
testb
jbe
mov
xchg
dec
in
test
inc
cltd
arpl
std
xor
sbb
ss
pop
jl
adc
mov
stos
push
jns
lret
sbb
and
adc
hlt
mov
out
mov
push
in
and
adc
repnz
jae
jbe
insb
loope
into
mov
add
scas
mov
cltd
fnstenv
rolb
sub
mov
jno
push
mov
clc
ss
faddl
ss
sbbb
cmp
bound
inc
push
pop
scas
movsb
in
add
inc
lds
loope
xchg
decl
mov
or
xchg
jnp
in
aas
dec
in
cli
movsb
sbb
cmpsb
les
popa
or
stos
sub
cmc
scas
sbb
add
jmp
test
mov
pop
out
das
add
mov
scas
inc
jo
xchg
addr16
sub
test
jmp
xor
dec
dec
pop
cmpsl
int
cmp
movsl
xchg
sub
testl
xchg
cmpsl
cli
or
inc
jns
inc
orl
out
test
xor
sarl
mov
std
sbb
aas
jg
sub
mov
ret
loope
and
mov
flds
or
rcrb
stc
add
popa
and
push
fistpll
rol
stos
cwtl
movsb
imul
push
pop
inc
or
mov
shll
mov
ret
pop
inc
stos
hlt
das
movsl
loope
fildll
mov
mov
int
cli
ret
sbb
insb
lods
cmpl
iret
out
pushf
jne
sbb
ss
pop
int3
icebp
mov
or
dec
mov
call
test
in
pop
aam
insl
sbb
in
jmp
push
cltd
inc
fnstenv
in
jp
ljmp
lahf
push
cmp
cltd
jbe
add
stos
xchg
aas
xchg
adc
data16
sub
cli
mov
push
xor
ret
incb
es
aad
mov
or
les
cwtl
stc
xchg
inc
xchg
stos
and
insl
pop
adc
inc
sub
mov
test
into
js
sub
jns
ret
inc
shlb
imul
xor
mov
and
stc
nop
adc
arpl
pop
xor
jno
jecxz
out
mov
mov
test
mov
lock
mov
cmpsl
mov
xchg
pop
notb
dec
and
push
and
jne
arpl
jno
jp
push
mov
lea
or
in
jbe
insb
ds
and
test
cmpsb
cmp
xor
pop
stc
mov
sbb
mov
lds
mov
iret
out
add
icebp
jmp
insl
adc
dec
sahf
cmp
mov
xchg
addl
cmp
js
sbb
add
sub
sahf
les
inc
jbe
jle
pop
xchg
mov
cmpsb
in
add
add
xchg
push
icebp
and
mov
nop
lahf
and
xchg
divb
fiadds
push
or
imul
icebp
xchg
shll
jle
mov
add
jbe
out
or
enter
cmp
xor
dec
dec
cmc
in
andb
enter
sub
shrb
add
fdivrl
and
subb
jnp
test
shl
pop
mov
pop
adc
pop
sub
sar
xchg
mov
aad
mov
inc
jno
sub
vphadduwq
push
dec
sub
imul
sbb
mov
test
inc
xchg
enter
shll
push
mov
push
dec
xchg
or
mov
and
imul
int3
push
ds
mov
popl
push
jae
int3
inc
stc
mov
outsl
push
jle
xlat
inc
adc
ss
fsubs
or
call
in
xchg
stos
jmp
mov
inc
fcoml
int3
incl
mov
dec
in
mov
hlt
andb
lea
xchg
sti
xchg
mov
loopne
cmp
pop
leave
or
jecxz
pop
push
xor
insb
mov
adc
mov
shlb
addr16
add
sahf
xchg
cli
test
clc
push
jp
dec
mov
add
adc
mov
out
addl
cmc
sub
sahf
pop
sub
inc
push
and
mov
inc
in
xlat
mov
shll
pushf
xor
pop
cmc
enter
mov
lcall
xor
cwtl
test
mov
mov
nop
sbb
lret
hlt
js
sti
adc
cld
push
dec
jecxz
and
xor
and
push
sub
jl
fwait
loope
imul
mov
lret
jns
mov
push
imul
fbld
cmp
mov
inc
arpl
daa
sub
add
ds
push
test
stc
xchg
sub
nop
xchg
enter
in
std
or
inc
sub
pop
cmp
mov
dec
push
jecxz
pop
inc
xchg
sub
gs
pusha
jl
mov
jmp
rcrb
jbe
inc
stos
mov
mov
mov
sbb
xor
add
inc
aas
into
xchg
fsub
test
jmp
cli
or
pop
sub
inc
jns
mov
adcl
pop
dec
cwtl
sub
pusha
fcmovu
mov
sub
jb
loop
and
mov
push
add
test
jo
std
mov
mov
push
es
push
xchg
xor
dec
out
and
insl
inc
fildll
mov
mov
stos
cmpsl
addl
sub
xor
dec
jno
cltd
cmp
arpl
pushf
insl
dec
scas
mov
sub
fidivs
sub
jecxz
push
sahf
inc
test
scas
repz
dec
mov
jnp
into
es
pop
mov
shll
push
mov
ror
sub
out
popa
cmp
mov
mov
ficomps
push
xchg
test
iret
inc
into
mov
push
jle
inc
adc
pop
pop
or
pop
mov
test
jbe
cmp
cmpsl
add
fnop
dec
cmc
xlat
ret
pop
test
ret
sbb
testl
pusha
orb
lret
mov
mov
xor
fisubrs
popa
inc
call
push
test
mov
xor
ror
aam
push
fnstenv
test
mov
call
ret
sbb
pop
sahf
icebp
cld
pop
repz
lea
mov
les
adc
and
repz
or
lds
in
aas
out
or
scas
testb
jmp
push
xchg
leave
rcl
jbe
bound
pop
jae
lods
pop
sbb
mov
out
mov
testl
push
icebp
dec
mov
aad
aaa
pop
ja
and
mov
rcrl
mov
cmp
jle
xchg
jmp
sub
xchg
mov
repnz
sub
scas
testl
pop
sub
xor
inc
xchg
mov
sub
adc
xor
inc
push
cmpsl
mov
inc
imul
outsb
pop
inc
fnstsw
out
ret
fistps
test
sbb
jp
mov
inc
and
mov
cltd
scas
and
and
mov
int
xchg
jne
negl
mov
xchg
sbb
dec
es
add
pushf
push
leave
xchg
sbb
and
sub
jl
pop
jg
pop
push
adc
push
mov
jecxz
movl
jbe
std
les
or
pusha
mov
jb
mov
jp
add
div
outsl
das
mov
xor
andb
pop
lahf
xor
sub
fists
insl
aam
mov
mov
push
sbb
popa
push
ljmp
push
addr16
out
xchg
sub
pop
sub
jae
jl
push
add
mov
addr16
push
jle
mov
xlat
scas
inc
or
inc
fadds
clc
sub
pusha
imul
or
jns
mov
ficomps
arpl
xor
mov
test
loop
movsl
test
cmp
mov
add
mov
sbbb
adc
push
xchg
test
mov
je
xor
sahf
mov
ret
and
lret
xchg
sub
mov
jge
mov
and
pop
xchg
sbb
mov
mov
aam
xchg
movl
adc
stos
cltd
dec
dec
cwtl
jbe
jb
daa
es
dec
mov
rclb
push
in
jp
jnp
test
ja
or
insb
add
rorb
lret
cmpsl
jge
cmp
test
ja
dec
push
push
lcall
fcoms
lret
mov
js
loop
movsb
aaa
pop
lea
cmp
ds
adc
pop
cmp
daa
lret
dec
mov
fcmovbe
ret
push
lret
sub
mov
mov
mov
addr16
xor
test
or
cltd
daa
sub
pop
mov
sub
out
push
add
iret
xor
or
push
push
in
mov
mov
in
jg
add
or
mov
add
jns
sbb
dec
loopne
adc
inc
andl
gs
fsts
test
neg
xchg
arpl
ret
adc
sbb
ss
sub
pop
popa
lock
jl
inc
mov
lcall
dec
loopne
aam
pop
push
in
sbb
mov
dec
sub
push
popa
rcll
adc
mov
je
dec
aad
xchg
pop
jle
mov
rclb
cmpsl
add
sbb
test
scas
inc
or
dec
jecxz
cs
arpl
outsl
subb
pushf
mov
imul
punpcklwd
inc
cmpsb
cmp
call
fidivl
loop
sbb
mov
cli
push
mov
sbbl
inc
fdivl
insb
xor
push
dec
mov
mov
lods
jno
hlt
mov
ret
jnp
stc
sbb
adc
jp
cmp
xor
hlt
pop
cwtl
das
mov
int3
arpl
ja
mull
jle
clc
movsb
movsb
cmp
sbb
mov
sbb
sub
les
test
pop
shlb
pop
shlb
fistpl
or
sti
xchg
inc
lock
xchg
mov
push
jmp
push
out
lcall
jae
add
enter
sub
cmp
mov
adcb
imul
sub
mov
gs
cmp
and
adc
jbe
cmp
dec
xchg
loop
lods
adc
push
call
xchg
loop
enter
xor
gs
jecxz
sub
orl
mov
insl
add
imul
cmpsl
lock
dec
out
adc
gs
imul
popa
repnz
mov
jnp
sbb
add
dec
loope
popa
add
scas
repz
sbb
adc
push
inc
push
ret
arpl
ja
mov
pop
in
xchg
fnstenv
sbbl
dec
mov
xorl
ja
push
mov
push
movsl
mov
insb
push
in
mov
je
popf
test
in
test
scas
inc
mov
iret
data16
arpl
xchg
sub
mov
mov
sub
sti
add
addr16
xorb
mov
inc
fsub
addr16
mov
cmp
shrb
out
mov
into
gs
cmp
imul
inc
cmc
data16
xchg
and
pusha
push
adc
mov
pop
repz
xchg
cs
mov
push
fwait
sub
jle
mov
insb
pop
out
mov
jbe
xor
in
jb
xor
jbe
cltd
cmpsb
cmpsl
jg
jno
shld
je
adc
sarb
xor
jl
out
mov
lahf
shrl
add
mov
xchg
in
mov
popa
mov
insl
mov
insb
jb
mov
ja
shll
mov
arpl
cmc
cmpsb
mov
pop
cmc
lods
sub
pop
pop
jbe
shll
jne
jno
sub
dec
stos
lret
sti
jns
jns
sub
pop
jle
mov
cld
orb
or
std
xchg
mov
push
out
pop
gs
std
xchg
sbbb
popf
into
sbb
outsl
shrb
fs
push
inc
xlat
or
int3
std
xchg
testb
pop
movsb
cmp
popf
insl
rclb
int3
arpl
ret
fsubrs
xlat
push
out
xchg
adc
repz
addr16
daa
cmp
push
mov
push
popf
or
or
mov
jecxz
sub
nop
in
dec
sbb
call
cld
pop
testb
cmp
dec
loopne
mov
lret
bound
xchg
cltd
xor
ja
jmp
call
or
outsb
push
or
mov
loopne
ds
mov
or
gs
pusha
mov
push
mov
mov
inc
inc
add
or
and
inc
pop
aam
xchg
fdivrp
adc
mov
and
mov
ds
jae
sbb
push
popf
cmp
mov
daa
adc
dec
loop
aas
stos
inc
outsb
fcmovb
pop
or
jb
inc
cmp
pop
push
or
adc
xor
xor
in
sbb
sub
hlt
push
or
sub
pop
jmp
lcall
mov
in
mov
cld
cmp
push
mov
movsl
cmp
aas
sub
push
mov
mov
add
push
jne
testb
aam
add
dec
insl
jge
mov
mov
scas
inc
test
add
iret
aad
or
out
sub
test
ds
jl
lret
test
lret
push
jmp
jg
sbb
push
popf
pop
cmc
lret
add
int3
mov
cli
cmp
shrl
mov
aam
fidivrs
or
jmp
cli
das
sbb
pusha
sbb
and
sub
mov
mov
and
mov
stos
rcrl
xchg
pop
jae
arpl
push
xchg
int3
lret
cli
mov
pop
out
sti
xchg
push
pop
push
jmp
jno
xor
in
add
movsb
cmp
rcrl
enter
pop
repz
insl
js
fwait
inc
jb
jne
mov
les
pop
lock
in
in
adc
fcomps
mov
mov
cmp
xchg
stos
or
cltd
pop
mov
sub
jge
jmp
xor
or
flds
mov
mov
sbb
pop
testb
push
lods
jg
out
xchg
mov
lret
push
lods
out
and
sbb
and
outsl
sbb
jge
mov
scas
mov
je
fldcw
sbb
dec
jecxz
pushf
and
push
scas
inc
xorb
in
into
cmp
mov
xorb
gs
or
mov
test
hlt
inc
test
test
daa
ljmp
push
cld
xchg
out
dec
test
data16
sub
shrb
sub
loopne
lret
push
rol
in
js
ljmp
enter
add
cmpsb
inc
mov
stc
mov
leave
ficomps
mov
xor
add
das
adc
cltd
mov
mov
icebp
test
nop
sbb
mov
lock
mov
dec
out
subl
push
add
repz
adc
outsl
popf
movsb
xchg
fnstenv
jmp
mov
jecxz
daa
leave
cmpsb
test
jmp
out
test
sbb
sub
std
adc
mov
sbb
sarb
clc
cmp
ret
insb
test
or
push
ret
daa
cmpsb
hlt
aad
mov
add
mov
adc
push
shlb
loope
jecxz
lcall
loop
xlat
outsb
test
int
enter
sbb
adc
xchg
out
sbb
std
daa
jmp
aad
xchg
mov
jb
in
pop
leave
xchg
into
test
fstpl
xor
add
xor
and
dec
mov
pop
sub
pop
xchg
mov
xor
lea
clc
push
insl
lds
sarb
pop
xor
inc
sbb
pop
inc
or
and
sti
xchg
sbb
inc
sbb
dec
xchg
mov
std
rcrb
js
jnp
lds
arpl
or
cmp
movd
mov
repz
pushf
jl
outsl
add
and
sbb
adc
jp
dec
mov
cmp
jbe
repz
lock
mov
cmp
add
mov
test
dec
mov
and
mov
out
inc
xchg
push
mov
outsl
mov
fimuls
sub
sbb
dec
cmp
cmp
inc
or
ss
push
cli
ss
adc
dec
xchg
inc
loop
pop
mov
xor
pop
mov
sbbb
and
sub
add
mov
test
jb
sub
mov
lcall
mov
xor
inc
ja
test
and
ret
clc
pushf
jg
xor
jo
shll
mov
adc
movsb
insl
shr
inc
fcmovnb
lds
xor
add
flds
sbb
xor
cmp
cmp
lds
pop
mov
ficomps
mov
fcomps
scas
pop
fnstsw
jmp
dec
out
or
daa
in
and
test
popf
jb
std
bound
pop
adc
push
cli
xchg
push
jnp
into
push
sub
lods
inc
imul
dec
jl
sbb
into
ds
cltd
mov
stos
cltd
push
mov
cmpsl
gs
in
xchg
in
pop
mov
ljmp
fs
mov
xchg
push
cwtl
iret
or
dec
lock
ljmp
adc
mov
fidivrl
in
leave
push
stos
jns
arpl
mov
cmp
or
mov
aad
rorl
iret
mov
les
outsl
int
stos
rcrl
sub
sbb
nop
and
dec
in
popa
mov
mov
or
mov
je
adc
movl
hlt
mov
rcll
insl
mov
leave
lahf
iret
sbb
leave
jns
addr16
fdivs
push
or
scas
xchg
pop
or
cmpb
mov
cli
xchg
mov
jmp
cmpl
icebp
lahf
ss
pop
aam
inc
or
popa
shll
and
pop
or
fcmovu
or
xor
inc
xlat
push
call
jo
and
daa
sbbb
insl
mov
sahf
pop
mov
pop
sti
dec
addb
jge
dec
mov
arpl
leave
and
and
or
push
xchg
lret
mov
cmc
mov
adc
mov
ss
xor
js
pop
inc
lods
sti
xchg
mov
xchg
mov
pop
enter
jnp
aam
fsubr
and
mov
dec
in
push
enter
cmpsl
ja
xor
ret
xchg
rcll
mov
lods
pop
adc
sbbl
daa
shll
mov
dec
lahf
mov
push
or
push
stos
lcall
jl
fsts
mov
scas
test
mov
cli
daa
jb
pop
scas
fwait
xchg
jle,pn
pop
dec
fwait
push
cmp
jg
lret
mov
lret
cmp
not
dec
mov
loopne
xlat
out
ret
cmp
mov
sarb
or
mov
mov
ficomps
pushf
int
mov
and
jle
pop
sar
inc
movsb
push
mov
dec
in
sbb
icebp
or
lods
gs
cmp
arpl
add
dec
rcr
mov
push
fildll
fwait
pop
cltd
pop
add
mov
loope
lcall
cmpb
jne
cmpsl
xchg
sti
xchg
mov
sub
dec
inc
mov
aam
push
mov
or
mov
addb
jbe
lods
jne
xchg
xchg
outsb
jns
push
jne
mov
push
jmp
jmp
lret
and
mov
aam
jp
sarl
fisubrl
dec
or
xchg
daa
cmp
mov
jl
repnz
dec
ss
sbbl
pop
rcrb
rorl
arpl
mov
dec
fbld
jmp
mov
fisubrs
call
lret
sub
loopne
sbb
loopne
push
mov
mov
xlat
and
add
or
xor
stos
fwait
xor
adc
sub
shl
in
mov
or
in
popf
mov
add
or
jb
adc
jg
out
cli
rorb
adc
lods
mov
les
ficomps
add
in
pop
push
sti
xor
test
loopne
mov
testl
xchg
dec
and
movsb
out
or
mov
in
adcl
sub
jnp
inc
mov
data16
pop
aad
xor
pop
bound
loop
xchg
inc
or
adc
mov
and
leave
movsl
sub
and
cmpsb
cmp
pop
ljmp
mov
stc
imul
mov
leave
cmp
das
push
flds
adc
pop
les
leave
dec
mov
pop
test
call
cmp
fisubrl
pop
shrl
push
xor
out
dec
jbe
or
and
mov
mov
add
dec
xchg
out
repz
inc
mov
push
adcb
sub
testb
and
cmpb
dec
pop
or
dec
subb
inc
insb
pushf
inc
sbbb
inc
js
pusha
inc
test
xor
xor
call
mov
sub
and
jp
leave
jno
lods
mov
ret
loop
pop
aam
enter
cwtl
cmp
add
andl
mov
stos
adc
mul
jb
xchg
xor
and
out
jge
clc
movsb
inc
fnstenv
mull
mov
sbb
cmpsl
std
bound
jnp
shl
or
leave
xor
ffree
in
and
shlb
mov
into
xor
rcrb
out
jp
or
sbb
sub
add
cmc
imul
scas
jns
loopne
insb
fwait
jne
sub
rorl
adcl
cmpsb
dec
sti
pop
xlat
push
ds
ret
pop
loopne
clc
xor
stos
xchg
jp
xor
mov
or
insl
xchg
cltd
jle
add
xchg
push
cwtl
daa
xchg
adc
xchg
jle
sub
lds
dec
roll
fbld
idivb
push
adc
syscall
mov
lock
lds
addr16
lock
add
mov
fnsave
in
insl
mov
cmp
mov
pop
add
rorb
xchg
sti
nop
add
sbbl
into
cwtl
xor
fcmovnu
push
in
mov
mov
xor
dec
rorb
jp
loope
mov
adc
adc
inc
testl
cltd
xchg
jns
push
lea
pop
icebp
lods
scas
cmp
add
inc
mov
fisubrl
in
mov
or
sarb
aas
xchg
jp
lds
pop
mov
les
mov
ds
inc
sahf
outsb
jl
push
sub
js
xchg
sub
xor
popa
xchg
jmp
sub
push
or
movsl
ret
call
movsl
xchg
repnz
insl
lahf
in
adc
push
stos
lret
jb
rcrl
mov
leave
sub
xchg
jae
mov
pop
adc
sbb
jns
mov
enter
jae
mov
mov
aam
xor
fcomp
mov
aad
jmp
movsb
fwait
xchg
or
jg
adc
pushf
loope
and
popa
stc
xor
aas
loop
inc
in
push
and
cmp
pmuludq
mov
adc
dec
rclb
add
shrl
in
adc
test
int3
xor
jmp
push
or
test
or
ficoml
decb
mov
adc
scas
mov
jge
addl
jp
inc
dec
dec
mov
pusha
imul
aas
insl
push
mov
inc
jae
shld
test
lds
jne
test
xchg
sbb
cld
es
jl
fadds
pop
xor
mov
jle
das
jns
sub
pop
scas
sbbl
js
jbe
push
cmp
std
jg
je
mov
repz
sarb
stos
rorb
pop
repnz
aam
test
out
xor
mov
xlat
add
call
cmp
xlat
inc
xchg
sbb
outsb
dec
out
arpl
push
test
lea
jge
imul
push
push
mov
in
or
mov
xchg
pushf
sahf
mov
cld
shlb
or
popl
xorl
fbld
jb
jecxz
mov
lods
imul
aad
jns
call
push
into
scas
xchg
mov
test
pop
cwtl
adc
mov
loope
sbb
mov
and
mov
out
sti
lods
mov
sbb
mov
push
dec
shrl
fwait
mov
and
dec
rcrb
outsl
inc
fsts
xor
call
addr16
pop
sahf
push
mov
into
pop
mov
fiadds
lds
inc
aaa
into
ja
scas
bound
ss
adc
stc
pop
ret
pop
mov
fisubs
scas
notl
inc
mov
sbb
add
ja
hlt
and
sub
xor
fsub
mov
mov
pop
add
cld
jne
lret
sbb
jnp
mov
repnz
fsubrl
adc
dec
loope
std
sbb
lret
lods
inc
into
cmpsb
in
es
mov
and
jle
out
adc
add
jle
nop
adc
imul
cmp
sbb
repnz
mov
enter
hlt
cmp
pusha
push
aaa
jecxz
nop
and
insb
adcb
xchg
ja
cmpsb
imul
es
das
cltd
xchg
xchg
mov
dec
sbb
jno
sbb
pop
cmpsl
jns
scas
jae
sub
jg
mov
or
in
xor
xor
enter
and
movsl
and
add
and
fisttpl
sub
lahf
pop
test
hlt
clc
jnp
sub
test
rorb
pushf
push
popf
and
dec
imul
imul
and
mov
shrb
std
xchg
jp
dec
cmp
push
mov
xchg
mov
xchg
add
xchg
stc
and
mov
fwait
rcrb
enter
fnstcw
loop
xchg
sub
lods
int
cmc
xchg
or
adc
and
stc
xchg
scas
inc
dec
sbb
std
movsb
inc
xchg
xchg
pop
out
adc
inc
mov
das
sub
pop
imul
ss
push
out
push
scas
xchg
push
cmpsb
cmp
add
jge
push
xchg
adc
and
ljmp
pop
mov
push
jl
clc
imul
xor
cmp
decl
or
cld
js
push
cmovle
inc
inc
push
test
dec
jl
cltd
gs
ret
pop
xchg
cmpsb
imul
mov
xor
cmpb
fs
xchg
setl
adc
fistl
add
fists
add
hlt
xchg
stos
xchg
sub
mov
add
daa
in
and
push
sti
sub
jmp
xor
xor
mov
rep
pusha
into
lcall
in
xchg
xchg
sub
add
stos
push
les
pop
or
stc
jmp
out
repnz
push
cli
outsb
stc
sub
fildll
cmp
or
cmp
adc
jp
js
xor
sub
mov
fcoms
aaa
into
cs
lods
pop
loop
ljmp
inc
call
xchg
or
mov
stc
lds
test
or
dec
ret
fidivs
aad
add
test
inc
mov
into
cmp
imul
es
fsubs
daa
and
outsb
mov
loope
cmp
sub
not
cmp
mov
ljmp
out
sub
in
xchg
mov
std
das
movsb
xorb
testb
or
lcall
fisubs
jg
and
add
imul
adc
jne
and
mov
cmp
test
cmp
stos
sbb
and
jbe
adc
cmp
stc
xor
add
fistl
movsl
jp
sub
lods
pusha
jle
bound
push
jno
icebp
mov
les
adc
sbb
pushf
add
pop
rcr
jb
sub
insb
dec
shll
insb
mov
push
sub
test
test
sbb
mov
aas
cmp
imul
popf
adc
ss
test
mov
dec
loope
lods
cld
push
adc
lds
into
jle
aam
rcrl
jb
pop
jle
ret
pop
cwtl
mov
dec
mov
lret
adc
xor
lcall
mov
scas
inc
mov
loop
mov
daa
dec
shlb
subb
inc
fisttpl
cmc
xor
dec
adc
pop
vmovaps
dec
sbb
js
jns
and
cli
scas
add
jmp
aas
lret
fsubrs
mov
push
enter
js
movb
test
cmc
or
mov
sub
and
push
stc
adc
in
dec
test
and
and
fwait
ja
push
clc
xlat
inc
out
mov
push
lods
mov
xchg
cli
adc
bound
xor
push
int3
in
fwait
psubd
popa
and
test
pop
nop
xchg
arpl
dec
cwtl
lock
jl
js
pop
push
out
lret
mov
aad
dec
jecxz
rorb
fmul
jg
mov
sbb
scas
mov
ret
loop
sub
mov
add
jle
pushf
inc
and
dec
sbb
cltd
pop
inc
rorb
rcll
cmp
push
add
hlt
cmpsl
xchg
and
adc
xchg
inc
ret
inc
lret
sub
das
dec
inc
mov
outsl
or
jnp
movsb
cmp
sbb
stos
cld
dec
sub
test
lea
jecxz
data16
xor
jl
nop
arpl
or
outsl
jg
inc
cmp
je
xchg
lds
push
divl
cmpsb
imul
add
in
push
aad
imul
pop
sub
push
stos
pop
adc
pop
add
sbb
push
mov
push
dec
mov
outsl
mov
xchg
xchg
xorb
fs
stos
test
int
in
data16
fnstsw
jno
in
cltd
mov
cmpl
es
and
push
dec
popa
rorb
adc
dec
mov
pushl
dec
xchg
adc
sub
stc
xor
and
insb
es
jns
sbb
imul
jne
addr16
pop
dec
shlb
sub
inc
or
es
lock
gs
xchg
inc
dec
aaa
mov
lods
pop
dec
mov
ret
dec
push
adc
xchg
push
mov
xor
inc
mov
fs
push
stos
aam
or
mov
and
or
sub
sub
loope
dec
pop
lds
sbb
lods
jns
stc
jl
sub
in
mov
fcoms
push
adc
notb
sti
xor
movsb
in
inc
mov
fidivs
in
add
push
out
or
ja
jle
lret
and
jns
cmpl
mov
out
or
jns
mov
dec
xor
mov
bnd
in
inc
mov
sbb
divl
xchg
imul
push
xor
push
ret
pop
cmp
jo
ds
or
mov
jl
xchg
std
sub
push
add
jne
inc
mov
outsb
mov
sbb
xor
stos
mov
push
sbb
pushl
iret
sahf
int3
arpl
and
sbb
xor
loop
cmp
mov
cwtl
in
iret
xor
add
stc
and
pop
add
jbe
cld
xor
inc
cld
xchg
lods
or
cmp
dec
mov
cmp
jb
cmpsb
ds
sub
ljmp
and
lods
xchg
xchg
inc
jecxz
test
fnstenv
pusha
cmpsl
jne
test
mov
int3
xor
mov
clc
dec
les
stc
push
add
movb
xlat
in
push
in
fdivl
fbld
fisubs
sbb
mov
imul
push
lds
cmp
fadds
aaa
jmp
mov
xchg
cli
int
sub
xchg
mov
dec
iret
cmp
jno
dec
dec
ds
jnp
dec
cmpsl
pusha
xor
bound
js
cmp
ret
dec
cld
cmp
mov
mov
cli
cwtl
add
pop
sahf
iret
fildll
shr
bswap
cmpsb
and
add
out
fistl
pop
or
add
js
das
add
dec
xchg
push
in
pop
push
pop
ret
sub
clc
sub
xchg
movsl
cmp
out
into
inc
int3
pop
cld
pop
insb
ret
mov
fisubs
jecxz
jb
lds
movl
jg
gs
sbb
xchg
add
out
cwtl
sbb
adc
leave
jle
int3
jle
xor
dec
mov
nop
hlt
sub
mov
mov
xchg
in
in
cld
test
cs
adc
mov
imulb
out
pop
jg
sbb
nop
xor
xchg
arpl
jmp
in
test
xor
jle
rolb
fdivl
dec
sub
sub
jmp
pop
pop
adc
test
add
js
add
push
aas
stc
xor
repz
es
fwait
jecxz
mov
lods
pop
mov
mov
push
ret
insb
call
or
mov
imul
ljmp
cmp
bound
xor
mov
repnz
cmc
enter
xchg
into
pop
cli
loopne
lea
mov
mov
cld
jb
cmpsb
dec
mov
dec
or
sarb
sub
sub
dec
adc
dec
stos
ljmp
sti
rorb
test
sarl
jns
cmpsl
mov
xor
add
in
mov
cld
and
jne
cmp
lea
es
test
sbb
fistl
sub
adc
dec
jecxz
xor
ja
sub
inc
aaa
gs
push
xor
mov
push
inc
test
mov
ja
mov
push
add
addb
fstps
fdivl
dec
pop
cmpsb
outsl
mov
pop
js
rcrl
sub
dec
adc
and
sbb
cmp
in
clc
xor
or
xlat
mov
ljmp
sbb
and
into
cmp
ret
loope
mov
jg
lsl
jne
insl
and
daa
orl
cmp
pusha
insb
xchg
sahf
xor
adc
or
call
lret
repnz
addr16
rcr
xor
adc
and
push
pop
sub
sti
xor
cwtl
push
out
aaa
mov
arpl
iret
xchg
insb
nop
mov
mov
jae
subb
xor
xchg
fsubs
jbe
mov
jg
adc
data16
dec
mov
mov
loop
jge
mov
jno
pop
inc
addl
dec
jbe
lea
into
inc
nop
mov
sbb
test
mov
add
ds
sbb
push
aam
xchg
hlt
sub
sbb
mov
loop
adc
xchg
ss
shrb
and
mov
fisttpll
dec
jg
push
ja
sub
int
add
ds
daa
lret
adc
and
pop
sbb
popf
loopne
insb
ljmp
jl
test
fwait
aas
cld
mov
pop
dec
adc
push
jo
jl
arpl
mov
mov
cmpsb
out
and
cmp
xlat
cwtl
pop
dec
jecxz
mov
push
fimuls
jge
cmp
pop
fwait
xor
mov
push
in
les
add
loop
sub
lea
lods
adc
fstpl
xor
das
lock
loope
rclb
cli
xchg
hlt
and
je
push
pop
scas
inc
jne
cltd
and
xchg
inc
cmp
jbe
sbbl
xchg
pop
out
enter
cmp
jbe
fistpl
xchg
sub
out
sub
addb
jno
rolb
adc
sub
jl
cld
jl
or
dec
iret
xchg
sub
jno
cmp
cmpl
jnp
jle
int
or
pusha
leave
stos
inc
sti
andl
dec
rcrl
add
sahf
xor
push
ret
mov
xor
sbb
mov
rcrl
repnz
cmp
ss
pop
ss
jnp
stos
test
adc
imul
xor
mov
and
or
mov
push
adc
adcb
pop
mov
mov
and
iret
cmpsl
jle
call
add
xchg
ljmp
daa
lds
imul
pop
les
adc
adc
xor
sub
insl
jnp
hlt
adc
imul
fs
sub
sub
icebp
adc
aam
movsl
test
cmc
aaa
and
addr16
cmpl
insb
js
ficoms
outsl
cmc
dec
enter
rorl
xchg
push
test
jmp
aad
mull
fwait
jbe
push
sub
int3
and
pop
jns
jmp
cs
dec
inc
js
sbb
jl
scas
movups
nop
je
mov
loopne
mov
cli
inc
jno
sub
stc
notl
add
hlt
jge
hlt
out
cmc
and
repz
cmp
lea
add
adc
out
sbb
xchg
cmpps
add
and
xchg
pop
pop
lret
and
ret
inc
dec
rcrb
lds
sub
popf
inc
mov
addr16
stos
lret
cmp
daa
sti
push
mov
push
dec
imul
xlat
stc
pop
pop
mov
inc
ret
dec
jno
mov
notl
add
insb
dec
aam
aad
xchg
out
jne
mov
imul
cwtl
adc
and
mov
data16
cltd
push
mov
xchg
sbb
pop
loop
push
mov
lods
and
repz
aad
xchg
and
insl
inc
int3
jle
xor
daa
cli
dec
sbb
flds
and
inc
and
sub
add
ja
mov
jge
stos
xchg
outsb
or
or
and
xchg
mov
adc
pop
loopne
mov
std
push
adc
mov
jp
xor
leave
mov
ljmp
stos
jbe
cmpsl
sub
sub
push
dec
mov
xchg
testb
add
xchg
inc
in
inc
pop
flds
mov
adc
dec
test
cwtl
dec
jmp
incb
mov
rol
mov
sbbb
sub
mov
pop
loopne
stos
repnz
enter
mov
dec
add
sti
xchg
jns
andl
xor
inc
je
icebp
decl
pop
pop
sahf
dec
nop
push
in
add
test
fwait
add
repnz
cltd
xor
xchg
imul
push
test
lcall
popf
xor
push
pop
scas
inc
int
mov
pop
icebp
mov
pop
scas
push
shrl
or
cmpl
in
nop
xchg
mov
cmpsb
mov
inc
xor
cli
sub
push
out
into
pop
lock
loop
push
aam
mov
mov
pop
jecxz
xchg
dec
call
mov
loope
mov
cmp
fnsave
icebp
mov
mov
sbb
mov
mov
pop
stos
adc
adcl
in
inc
sub
mull
je
es
movsb
xor
cmp
inc
adc
imul
adc
pop
or
aam
test
scas
sub
daa
scas
ja
mov
xchg
testl
cmpsl
das
push
lock
inc
pop
mov
scas
scas
leave
daa
mov
push
sbb
gs
adcb
cltd
clc
pop
out
pop
add
repnz
out
int
cmc
notl
lret
push
xlat
jle
sbb
imul
sti
hlt
pop
imul
lock
dec
sbb
ja
mov
ljmp
clc
int
out
jns
push
clc
dec
push
movb
cmp
mov
in
add
pushl
push
jbe
push
xchg
mov
adc
aam
inc
or
pop
and
loope
jne
push
hlt
data16
xchg
sub
inc
adc
mov
pusha
mov
lea
jne
mov
loopne
xchg
mov
and
sti
fstl
or
loop
stos
les
xor
call
nop
mov
adc
and
fsubl
mov
dec
sbb
push
daa
sahf
rorb
rcll
fstpl
scas
cwtl
or
shlb
jno
ret
sarb
pop
inc
or
lret
xchg
stos
xor
lcall
cmc
cmp
sub
or
pop
into
xchg
je
movsl
daa
cmp
lahf
sub
out
mov
scas
adc
mov
scas
cmp
xor
mov
xchg
fwait
inc
sbb
dec
sbb
xor
std
add
and
and
mov
dec
and
aaa
scas
mov
fiaddl
psllw
movsl
daa
lret
jb
test
cwtl
inc
xor
cmpsb
daa
dec
daa
sbb
cld
cltd
dec
adc
ret
adc
and
ds
das
adc
dec
cli
pop
insb
addr16
xchg
adc
dec
mov
popf
sub
mov
xor
daa
adc
adcb
mov
movsb
das
int
cmp
cmp
popf
cmp
and
cld
pop
ja
jnp
stc
outsl
mov
sbb
inc
xor
cmpsb
dec
xchg
inc
mov
movsb
adc
jno
repz
fwait
imul
xor
push
xor
inc
int3
and
leave
popf
mull
jno
xchg
xor
mov
repz
adc
aad
and
lret
dec
pushf
xlat
test
mov
imul
and
insb
or
xor
dec
and
hlt
and
jno
lahf
cmp
mov
xor
sbb
fidivl
mov
cltd
mulb
icebp
popa
imul
and
cwtl
jmp
cmp
sarl
sub
cmpsb
sarl
mov
sub
mov
mov
sub
push
sub
gs
hlt
out
mov
add
adc
dec
mov
jmp
cs
lcall
xor
dec
loop
lods
sub
add
xlat
inc
cmp
stc
inc
test
in
jno
sbb
fcompl
xor
gs
cmpsl
xor
fidivs
xchg
les
cmp
gs
jmp
push
mov
mov
inc
xchg
inc
pop
jge
xchg
or
hlt
and
xchg
lds
iret
mov
inc
fstpt
or
arpl
pop
iret
sbb
jl
aam
sub
mov
call
jl
mov
dec
imul
push
push
inc
pop
cld
and
lods
enter
sbb
jmp
jl
xor
lahf
std
pop
sahf
cs
mov
jne
inc
pop
int3
data16
mov
daa
add
adc
pop
jp
out
jge
sub
xor
pusha
cmp
stc
jb
scas
sub
jo
divps
shlb
repnz
scas
sub
push
xchg
add
jg
pop
add
mov
pusha
mulb
movsl
push
inc
ds
cmc
stos
push
dec
or
push
add
js
pop
add
or
loopne
and
pop
clc
ret
cmc
sub
int3
mov
aaa
rclb
pop
add
iret
sbb
gs
cmp
fwait
decb
repz
repnz
mov
push
xchg
cmp
sti
sub
adc
jo
push
jp
or
dec
ljmp
cmpsb
sub
jnp
mov
xchg
xchg
lods
stos
xor
les
iret
sbb
popf
inc
cli
dec
orb
mov
daa
movsl
sub
mov
outsb
adc
addl
xor
cs
xchg
inc
mov
xchg
mov
lods
sbb
jecxz
and
lock
push
loope
xchg
adc
lret
pop
bound
movsl
cs
inc
pop
push
and
fs
into
ja
xlat
mov
mov
add
mov
lods
ss
sbb
adc
stc
popa
push
dec
sbb
sub
pop
add
daa
repz
mov
scas
push
xchg
cli
clc
bound
stos
das
push
mov
in
mov
mov
dec
into
or
lret
std
pusha
pop
frstor
push
and
xor
loopne
add
dec
cmc
daa
stos
jp
jmp
outsl
cmc
pop
in
cmp
push
inc
jns
test
mov
shrb
js
jnp
negb
outsl
aaa
cltd
xor
lds
filds
aam
fstps
push
clc
repnz
lds
mull
fstpl
lea
mov
fnstsw
jp
or
fs
jns
je
imull
les
fstpl
into
nop
hlt
or
cmp
repz
es
imul
xor
pop
push
sub
lret
fidivrl
fnstcw
xchg
mov
orl
cmc
out
imul
mov
ljmp
cwtl
sti
xchg
loope
mov
pushl
lods
push
rorl
scas
sub
cwtl
out
imul
mov
cmp
pop
sti
daa
pop
les
jecxz
adc
mov
loopne
add
loop
fwait
test
mov
inc
loop
push
mov
movsl
rcll
push
cwtl
cmp
mov
xchg
inc
adc
pop
shll
mov
xchg
sub
loop
pop
outsl
ljmp
jne
mull
jnp
std
icebp
adc
mov
adcl
adc
ss
adc
mov
outsl
movsb
ret
xchg
jb,pt
inc
hlt
and
rcr
xchg
fidivrs
or
mov
push
scas
daa
arpl
jo
call
clc
adc
mov
jg
shrb
fstpt
xchg
lods
js
dec
or
lock
mov
mov
fs
je
push
jbe
push
je
jb
pushf
gs
push
int
cmpsl
mov
cwtl
aas
add
jae
cmp
pop
pop
das
ljmp
jb
jg
or
jns
data16
mov
cmp
mov
mov
movsl
call
add
cwtl
mov
insb
in
rcr
fidivrs
sbb
jb
and
in
in
xchg
add
call
sbbl
or
cli
fs
xchg
jmp
push
mov
imul
sbb
or
dec
adc
dec
imul
sbbb
jecxz
sbb
int3
pop
repnz
or
push
pushf
mov
jmp
cmc
jmp
mov
lret
aas
nop
inc
xor
int
test
movsl
stos
sbb
fwait
mov
mov
insl
sub
sbb
cwtl
inc
sub
cmp
ret
dec
or
decl
fsts
mov
jns
sti
pop
jnp
pop
mov
xor
and
es
in
inc
or
inc
out
popa
out
pop
cwtl
jne
sub
into
pop
add
ss
push
sbb
insl
repnz
jbe
push
push
jg
sub
sub
fmul
fistpll
or
lret
xchg
aas
imul
sub
ret
jp
icebp
fistpl
dec
inc
paddb
stos
mul
or
pop
lock
fs
xchg
pop
aad
mov
ss
fidivl
push
mov
sub
cmp
ljmp
sbb
pop
mov
shl
mov
adc
pop
inc
fdivrs
push
ret
pop
sti
jecxz
popf
aaa
sar
cmp
pop
mov
cli
xlat
addb
fstpt
jbe
fsubs
rolb
cmc
adc
xchg
push
add
orb
jp
cltd
cmp
notl
loope
call
adc
sbb
dec
and
xor
sti
pop
and
adc
push
mov
and
jmp
fnstcw
loopne
adc
les
inc
pop
add
scas
insl
mov
repz
xor
out
ljmp
mov
imul
mov
adc
pop
int
enter
sub
pop
push
cmc
pusha
adc
pop
sarl
add
add
repnz
add
leave
enter
fstpt
add
or
scas
loopne
lahf
ss
add
ret
and
sahf
xchg
enter
push
clc
lods
test
xchg
mov
jl
ja
fiadds
stos
jae
ja
mov
dec
cmp
test
and
cmp
xchg
push
and
xchg
xchg
mov
inc
in
jl
mov
and
mov
enter
sbb
stos
sub
in
mov
cltd
and
test
fcomps
lds
rclb
fdivrs
testb
pop
sbb
outsb
sub
mov
or
and
cmp
popf
jo
sub
lret
xchg
add
fadds
mov
stos
out
sti
jecxz
lahf
sub
cmp
add
jg
inc
or
imul
cmp
mov
das
adcl
bswap
cmp
jbe
js
fnstenv
bound
mov
sub
cmp
jns
adc
popf
popf
sahf
cmp
stc
pop
popf
and
mov
les
cmc
jne
sbb
enter
mov
and
xchg
cmp
je
fiaddl
sti
rorl
mov
sub
orb
aas
popf
jae
xor
aas
mov
or
fadd
jmp
pop
pop
adcb
test
xchg
das
mov
sub
daa
mov
mov
andb
call
add
lds
jnp
and
dec
jae
repz
pop
push
pop
xor
cmp
or
push
mov
dec
or
add
ret
test
lret
pop
mov
inc
adc
scas
gs
inc
xor
scas
push
popf
scas
sub
ret
pop
decb
sbb
dec
fldl
shlb
ds
add
arpl
shll
inc
repz
lock
cmc
cmp
and
cmc
push
shr
cltd
dec
or
repnz
in
jo
add
pop
push
pop
add
mov
mov
lcall
pop
ror
loopne
ss
pop
repz
int
xor
mov
mov
fdivrl
mov
out
pop
scas
imul
jg
jmp
insb
push
popa
jl
ljmp
add
call
repnz
or
into
mov
mov
adcl
leave
mov
jno
rclb
dec
or
dec
sbb
ret
mov
iret
dec
popa
adcl
pop
jecxz
cmp
daa
scas
sub
scas
sbb
lret
xchg
dec
lods
cs
inc
mov
cmp
add
push
xchg
cmp
test
cmp
divb
adc
ljmp
mov
mov
adc
icebp
test
dec
fstl
xchg
pop
hlt
ret
mov
jl
pop
int3
ljmp
stc
aas
in
push
les
sarl
test
sbb
sarb
push
lods
xor
inc
xchg
aaa
mov
test
ds
je
cmp
inc
and
cmp
jmp
in
adc
ljmp
add
adcb
jnp
xchg
or
jne
mov
les
das
add
mov
pop
adc
xchg
mov
mov
fwait
add
fs
jge
sub
jo
ficompl
push
ss
and
adcl
jb
arpl
sbb
pusha
in
pop
dec
xor
mov
lods
xor
fists
orl
inc
or
popa
repz
mov
arpl
jnp
cwtl
pop
clc
inc
jb
loopne
lcall
and
xchg
fwait
inc
popf
cmpsb
push
clc
and
sbb
dec
xor
insb
xchg
mov
mov
xchg
mov
push
cli
jg
pop
fsubrl
or
les
les
xchg
sub
sar
mov
xchg
call
adcl
cmc
dec
push
stc
sub
cmp
test
cmp
xor
inc
insb
xor
outsb
je
jecxz
adcb
sbb
cmpsl
js
je
jg
fiaddl
sbb
jmpw
orb
jne
sbb
fdivrl
dec
jns
movsb
dec
sarb
mov
lahf
sti
jbe
inc
out
mov
hlt
adc
sub
push
mov
jl
jg
xor
es
les
lcall
scas
pusha
pop
push
js
nop
xchg
pop
fldl
xorl
mov
mov
mov
ds
test
ljmp
fst
test
nop
cwtl
cmp
jle
negl
pop
jg
push
gs
rcl
cmpb
add
out
cmp
xchg
cmp
sti
data16
aam
sub
cmpsb
jno
push
shll
mov
inc
notl
dec
add
aaa
rcrl
fisubl
pop
jle
dec
push
adc
pop
mov
fscale
xor
and
cmp
leave
ror
mov
stos
sub
mov
imul
iret
in
mov
lahf
out
pop
clc
push
add
push
outsb
inc
jg
lcall
mov
cmp
lret
sub
pop
lret
mov
inc
ss
xchg
les
and
mov
push
daa
lock
jno
loope
add
inc
nop
push
sub
test
out
jmp
clc
stos
sub
lea
mov
pusha
es
pop
dec
push
int
cld
gs
dec
jae
je
arpl
adc
inc
bound
scas
xlat
js
dec
rolb
push
inc
cmp
pop
xchg
ss
mov
sarl
adc
mov
in
mov
scas
mov
lea
or
stos
mov
inc
adc
xchg
push
aad
adc
loope
insl
push
aad
rorl
lret
sub
aad
cmpsl
adc
cs
jl
mov
stos
sub
pop
xchg
inc
push
push
je
pop
lea
rcrl
xor
shll
inc
pop
icebp
jne
orl
and
test
push
and
into
nop
dec
fildll
loop
sub
enter
mov
mov
mov
in
jge
push
lods
sub
sbb
jmp
cmp
or
hlt
pusha
and
xlat
subl
cmpsb
das
and
mov
mov
sarb
in
int
and
insl
lock
pop
add
pop
lods
xor
arpl
xor
cmpsl
ss
mov
int
sub
pop
lret
jnp
adc
mov
ja
les
mov
fstps
and
mov
aaa
movsb
fs
outsl
jmp
xorb
out
cmp
pop
pop
ljmp
pop
stos
inc
mov
enter
mov
mov
cwtl
inc
pop
cmpsb
sub
and
sbb
sbb
cli
sti
fmull
xchg
jmp
cmp
addr16
pop
lods
je
xchg
sbb
mov
adc
cmp
inc
inc
or
jg
cs
push
test
jb
das
int
sbb
sub
lahf
cmp
xor
or
push
jmp
inc
xlat
out
push
adc
orl
mov
push
cmp
jae
dec
sub
cmpsl
and
xor
out
lret
xchg
out
das
add
mov
pop
jecxz
push
imull
fiadds
subb
inc
fstps
lea
pop
div
or
iret
jmp
jmp
pop
out
fs
fadds
xor
mov
mov
lock
or
cmpsb
inc
pop
pop
mov
cmp
repnz
sarb
inc
or
fisubrl
mov
repnz
jno
mov
and
dec
adc
adc
cmpsl
mov
mov
jbe
ja
pop
insl
mov
outsl
inc
mov
add
data16
cwtl
or
jne
mov
push
leave
push
add
push
orb
xchg
aad
mov
ret
jns
cmc
pop
mov
mov
adc
mov
sarb
stos
pop
stc
arpl
in
jl
outsl
hlt
in
js
in
xor
addr16
xor
out
and
pop
notl
shl
data16
inc
popf
cmp
adc
pop
add
jae
push
nop
daa
push
pop
sub
repz
dec
adc
dec
xchg
and
xor
and
das
mov
dec
and
inc
push
sarl
cwtl
or
shll
push
adc
adc
fs
fdivl
and
pop
add
jnp
nop
sti
add
stos
or
scas
xor
pop
sarl
and
xor
jmp
mov
lret
fcoml
stos
xor
adc
pop
ficoms
ss
scas
pop
pop
iret
xchg
jmp
sti
out
jno
or
enter
outsl
dec
xchg
jo
rcrl
push
in
push
jo
mov
test
mov
push
aaa
dec
por
fs
sarb
mov
fdivl
xchg
mov
sub
pop
aad
cmp
dec
jns
mov
ljmp
aam
dec
insb
lock
jae
ficoml
inc
or
xchg
xor
stc
arpl
or
popa
xchg
notb
js
fbstp
hlt
pop
mov
push
iret
sbb
int3
xchg
adc
inc
call
insb
sub
mov
das
xor
ss
sar
push
outsl
xchg
jne
stos
dec
aam
in
xchg
out
mov
mov
ja
in
gs
stc
cmpsb
das
sbb
adcb
mov
pop
lahf
in
xor
sub
pushf
cmp
mov
push
jne
jno
add
lahf
and
rclb
roll
lea
push
stc
push
xchg
jae
popl
mov
mov
inc
nop
pushf
inc
add
push
jae
imul
and
sub
shld
jge
lcall
adc
imul
cld
bound
xor
jge
mov
jae
push
out
cltd
outsl
add
or
or
fcompl
jb
or
data16
fwait
xchg
lret
sbb
or
fwait
pop
add
cmp
das
inc
or
push
ret
or
test
mov
ljmp
fidivrs
or
fidivrl
cmpsb
xor
dec
adc
and
lret
sti
call
lods
xor
xchg
aaa
into
mov
mov
loope
sub
dec
mov
lods
in
jno
cltd
call
jp
pop
mov
and
mov
mov
cs
jne
ss
lret
xor
movsb
aam
cld
bound
mov
or
loope
insb
bnd
imul
je
adc
cmp
mov
cli
fs
orb
sbb
ljmp
or
cmpsl
cmp
aam
adcb
rorl
and
ja
dec
call
icebp
adc
shrl
cwtl
aaa
popf
je
inc
iret
pop
clc
push
jb
inc
movsl
dec
in
je
enter
add
test
and
jmp
push
mov
or
test
fildl
mov
push
lret
push
das
jecxz
flds
pop
ss
inc
call
xchg
cmp
into
sarl
mov
cmpl
sub
fisubrs
mov
mov
mov
mov
movsb
mov
cmpsl
rolb
ljmp
sti
sbb
jb
addb
adc
stc
pop
imul
lock
adc
in
push
and
sbb
xor
xchg
push
sar
mov
aas
in
and
inc
cmp
es
movsl
mov
dec
adc
outsl
loope
enter
mov
in
lret
mov
das
xchg
test
fnsave
xchg
mov
cmp
aad
loope
ret
inc
xlat
adc
or
orb
scas
xor
pop
sub
and
sub
filds
shll
or
push
aam
lret
test
xchg
add
xchg
repz
dec
loope
imul
and
jg
mov
push
jl
testb
dec
xor
push
sarl
and
mov
test
inc
or
les
sahf
pop
lock
inc
nop
icebp
pop
mov
pop
add
test
js
std
lods
das
jo
push
neg
imul
push
xchg
cmp
jo
aas
mov
pop
ret
sub
jb
mov
mov
mov
lods
sub
scas
dec
pop
pop
loop
imul
pop
std
push
jo
xor
nop
insl
out
int3
aam
mov
int3
call
repz
and
cld
pop
pop
cmp
jp
inc
cltd
cmp
or
push
xor
add
cmpsl
sbb
xchg
sub
hlt
mov
cs
mov
call
mov
lret
fcmovnb
xchg
cmp
rorl
push
fstpt
fnsave
push
mov
stos
jne
out
std
out
mov
stos
jle
mov
int3
xchg
shll
sbb
outsb
push
fiadds
fnsave
jnp
loopne
lret
insl
push
enter
std
outsb
push
cmpsl
xor
int
mov
cmpsb
cmp
cltd
sbb
test
roll
data16
shlb
jmp
movl
aas
xchg
sbb
inc
xchg
sub
sub
dec
adc
mov
loopne
lea
mov
push
add
leave
in
push
mov
cli
pop
popf
scas
sub
jecxz
pusha
sub
test
and
dec
cli
cli
arpl
test
push
stc
sbb
adc
sbb
in
sbb
bswap
dec
mov
stc
adc
cmp
sub
xor
test
aam
push
loopne
jnp
jae
pop
cli
shrl
test
or
mov
and
mov
aam
mov
add
pushf
inc
cmpxchg
or
inc
sub
ds
dec
lahf
inc
push
lock
adc
loop
mov
stc
ja
adc
and
or
jg
cmp
push
insb
call
lret
adc
lret
popa
add
pop
sbb
loope
les
mov
cmp
cs
mov
sbb
cmp
mov
aaa
xlat
or
mov
jbe
arpl
adc
into
rcll
xchg
insl
add
jno
cmp
inc
fistpl
hlt
mov
loopne
insb
ljmp
in
in
add
adc
add
dec
mov
or
mov
jno
call
cmp
cmpsl
sub
fadds
popa
scas
xor
dec
jns
and
push
add
jbe
jmp
and
nop
idivb
jge
sub
cltd
pop
cmp
shll
mov
aad
mov
jge
mov
inc
jb
arpl
mov
call
stc
sub
cmp
hlt
sti
sub
outsl
jmp
test
push
dec
push
cmp
and
mov
cmp
sub
adcb
vmread
and
inc
cmpsl
sbb
xchg
pushf
rclb
pop
pop
clc
push
adc
imul
push
clc
popa
or
xchg
jno
outsb
pop
or
xchg
push
das
mov
adc
mov
std
repz
mov
mov
cmp
pushf
inc
das
leave
int3
xchg
sarb
adc
mov
aam
or
and
xchg
cmp
pop
add
pop
xor
les
push
leave
xor
add
fcoms
mov
lahf
les
add
sbb
mov
pop
push
push
sub
adc
and
cmp
pop
sub
pop
mov
pop
mov
imul
mov
mov
pop
xchg
jbe
es
stos
imul
pop
adc
mov
mov
int
cmpsl
fwait
inc
jb
adc
pop
fdivs
mov
mov
pop
imul
rclb
jbe
or
mov
jbe
ret
xchg
shrb
pushf
push
sbb
jae
out
shll
mov
test
mov
or
stc
leave
mov
lods
nop
inc
push
fisubs
jnp
pop
stc
inc
popa
repz
negl
jle
mov
jmp
dec
jbe
add
xchg
movsb
jno
pop
stc
push
imul
rorb
sub
rorb
pop
inc
pop
std
ja
nop
inc
shrl
push
fstpt
mov
add
sub
jo
sbb
xchg
inc
test
cld
add
add
cmpsb
or
ret
lahf
sub
jns
xor
dec
fs
pop
xchg
fidivrl
dec
je
xchg
cld
out
dec
push
add
loop
jns
dec
mov
jl
dec
prefetch
push
pop
pop
xchg
cmp
lea
ljmp
out
lahf
inc
lods
repz
cmpb
int
repnz
rolb
aas
push
jne
or
cmp
das
pop
mov
ss
xchg
movsw
das
stos
es
mov
orl
pop
std
xor
add
sub
insb
pop
push
jae
addr16
push
jge
lahf
xor
mov
sbb
xchg
inc
sub
addr16
xor
mov
icebp
insb
call
cmp
bswap
in
test
repz
pop
decb
ja
loope
dec
jnp
push
movsl
xchg
int
cmp
mov
and
in
cmp
push
add
pop
add
mov
pop
xor
ret
push
mov
ljmp
ljmp
movsb
gs
and
int
mov
xchg
aaa
arpl
shrl
xchg
cmp
sbb
mov
sub
or
icebp
pop
icebp
pop
jmp
inc
xchg
xor
les
rolb
in
test
cmp
pop
js
mov
lea
mov
movsb
sub
ror
sbb
jmp
leave
dec
push
clc
dec
and
mov
flds
test
add
xchg
xchg
inc
nop
rorb
jnp
pop
stc
xchg
fs
or
roll
in
loop
or
jecxz
clc
push
loop
mov
test
imull
add
adc
sbb
data16
mov
mov
push
mov
mov
fdivl
hlt
negb
mov
js
dec
inc
or
xor
pop
cmp
or
in
mov
mov
xchg
inc
out
cwtl
cmp
std
pop
incb
mov
aad
pop
imull
mov
add
cli
std
in
je
in
pusha
call
inc
iret
sti
pusha
xor
mov
rorb
jmp
mov
mov
sub
scas
xor
sub
xchg
imul
icebp
subb
and
pop
add
mov
and
pop
stc
xor
inc
fisubs
test
addb
jae
loop
lds
dec
push
les
mov
in
jno
cmpsl
mov
test
mov
push
add
popf
mov
aas
inc
stos
jmp
lcall
aas
lcall
push
push
insl
je
js
jae
mov
dec
sub
ficompl
inc
push
inc
orb
mov
popf
xor
aad
xor
push
xor
mov
mov
cmp
mov
adc
xlat
sbb
cmpl
add
cltd
ss
aad
inc
push
fistps
aas
pop
jmp
nop
adc
lods
sar
arpl
mov
inc
or
cmp
pushf
stos
and
outsb
out
mov
inc
xchg
imull
stos
sbb
xor
pop
mov
fwait
mov
and
enter
scas
test
loope
xchg
repnz
or
in
pop
adc
mov
in
outsl
adc
inc
scas
xor
inc
arpl
push
movsl
sub
dec
dec
push
jecxz
ljmp
cltd
in
imul
or
pusha
out
test
fbld
test
das
call
dec
push
push
or
pop
cmp
loop
fimuls
xchg
mov
mov
or
mov
ror
mov
add
jno
js
lods
add
xchg
xor
fldenv
jp
mov
popf
xor
sub
rcr
stos
daa
jl
in
outsb
les
xchg
clc
pop
jp
call
repz
jl
sub
loope
ljmp
aad
xchg
xchg
cli
pop
clc
jge
pop
and
pop
clc
jge
dec
or
mov
mov
addr16
sti
cmpsl
ja
icebp
out
cmpsb
lcall
xchg
ss
push
push
mov
aam
jo
mov
outsl
es
jo
cld
pop
imull
ljmp
sbb
outsb
add
sti
sub
dec
or
sbb
inc
pop
jae
lret
aam
jnp
in
enter
out
je
in
sub
pop
dec
inc
and
cmc
je
sub
or
insb
lcall
sar
dec
mov
mov
xor
xchg
in
jno
xchg
push
add
or
jne
ds
cld
cld
and
sbb
xor
jns
sub
sbb
repz
mov
or
hlt
pop
jg
inc
pop
and
xor
sbb
fwait
inc
inc
dec
pop
add
xchg
cmp
sub
pop
mov
aaa
jbe
aam
es
mov
test
mov
fadds
adc
loope
popf
inc
jle
jae
push
mov
jns
sub
leave
push
mov
jne
imul
fcompl
leave
daa
test
xchg
dec
adc
mov
pop
out
pop
rorb
sti
inc
sahf
mov
inc
mov
neg
adc
jp
adc
inc
xchg
add
xchg
push
and
shlb
adc
popf
shll
aam
push
call
cld
aas
mov
insl
mov
sbb
jg
daa
adc
or
pusha
out
je
cmp
outsl
sub
adc
cmp
cwtl
sbb
addr16
dec
shll
jecxz
and
or
mov
popa
cmp
imul
xchg
loope
movsl
adc
test
ret
fs
pop
scas
test
mov
in
add
push
lcall
and
scas
aas
clc
rol
pop
add
pop
cmc
dec
and
ja
insb
jl
sahf
jbe
xchg
test
lcall
adc
rorb
outsb
xchg
insl
pop
lock
mov
ja
icebp
or
cmp
xchg
sub
mov
dec
xchg
scas
push
out
mov
outsl
push
xor
icebp
mov
pop
xsha1
cmpsb
cmpsl
stos
inc
fnstenv
leave
pusha
sub
dec
jecxz
dec
out
jg
push
xchg
mov
and
cs
inc
fdivs
les
xchg
pop
test
loop
aam
jge
sbb
add
outsl
dec
push
mov
nop
mov
ror
jecxz
outsb
adc
aaa
cmc
mov
js
jno
adc
fdivl
enter
dec
sbb
dec
out
cmp
imul
lock
loopne
movsl
adc
test
ret
arpl
pop
lods
test
mov
in
add
push
lcall
and
scas
aas
test
pop
cmc
dec
and
ja
imul
xchg
cmpsl
mov
sbb
stc
adc
rorb
xlat
outsb
xchg
insb
pop
lock
mov
mov
mov
adc
cmp
xchg
sub
lea
xchg
scas
push
out
mov
imul
or
mov
lea
cmpsb
stos
inc
fsubrs
leave
pusha
sub
dec
jecxz
dec
out
jle
push
xchg
mov
fyl2x
and
sub
dec
les
xchg
pop
test
loop
shr
jge
sbb
add
outsb
inc
push
mov
mov
ror
loop
outsb
adc
pop
icebp
sbb
js,pt
jo
adc
ret
enter
dec
pop
cs
out
cmp
imul
lock
fisttps
movsl
adc
test
ret
bound
pop
lods
orl
int
jl
aad
incl
and
push
daa
xchg
movsb
jp
cmp
ret
pop
pop
testb
js
imul
movsl
mov
sbb
push
inc
sbb
dec
fsubrs
push
icebp
fwait
mov
out
js
out
or
cs
pop
xor
mov
dec
xchg
lods
push
call
out
outsl
push
xor
repnz
push
lea
pop
adc
scas
cs
leave
pusha
sub
dec
in
dec
out
jl
imul
popf
add
and
out
and
sub
inc
fdivs
lds
pop
test
jecxz
shl
jge
sbb
add
insb
inc
pop
mov
lea
aam
loopne
outsb
adc
pop
repnz
cmc
mov
jns
outsl
xchg
stos
mov
fnstenv
enter
dec
push
sub
out
aaa
shrl
jle
add
mov
mov
xsha1
cmpsb
test
les
pop
stos
orb
lret
in
std
aam
add
pop
add
push
daa
xchg
pop
jno
mov
lods
ret
inc
xlat
hlt
int
pop
call
loop
push
addr16
cltd
jae
xchg
movsb
mov
push
mov
or
cmp
outsl
xchg
imul
in
jns
in
push
adc
das
inc
pop
xor
mov
dec
xchg
stos
push
call
out
outsl
push
cs
mov
dec
lea
pop
adc
aam
das
fdivp
leave
pusha
daa
add
xor
jle
push
insb
add
mov
xlat
in
and
sub
fdivs
pop
jle
pop
test
in
shl
jge
push
repz
push
and
mov
outsb
adc
pop
repz
cmc
mov
adc
adc
rcl
enter
dec
adc
ss
push
mov
mov
fstl
cmpsl
push
and
lds
pop
test
dec
jecxz
leave
in
sti
shrl
add
mov
pop
outsl
and
stos
roll
int3
les
adc
inc
pop
jecxz
push
gs
xchg
jb
cwtl
mov
les
mov
or
aad
pop
fsubrs
push
testb
add
lods
xor
push
xor
xchg
dec
xchg
test
call
in
outsl
push
sub
hlt
mov
dec
lea
pop
adc
shrb
pusha
and
inc
out
jns
insb
add
movsb
mov
in
and
sub
inc
fdivs
pop
jge
pop
test
in
shl
jge
adc
aaa
fwait
xor
and
mov
fst
outsb
psubsw
xor
mov
jp
insl
test
stos
mov
cwtl
das
rcl
enter
dec
adc
dec
out
xor
insl
add
mov
mov
fcoml
cmpsl
or
cs
pop
cmpsl
orb
in
cli
shrb
add
add
dec
and
and
stos
rolb
lret
les
adc
inc
push
jecxz
push
fs
xchg
jno
cwtl
mov
ret
pop
mov
or
aad
pop
fsubrs
addr16
repz
mov
loop
jp
jmp
adc
xor
push
xor
xchg
dec
xchg
cmpsl
push
call
in
outsl
push
sub
hlt
mov
dec
lea
pop
adc
shrl
leave
pusha
and
dec
in
inc
out
js
insb
add
mov
and
sub
inc
fsubrs
pop
jl
pop
test
in
iret
loop
adc
icebp
add
push
mov
aad
outsb
push
call
cmc
mov
jp
insb
adcl
mov
cwtl
das
mov
loope
dec
adc
dec
out
xor
imul
add
xchg
mov
ficoml
cmpsl
or
stos
inc
push
sub
lds
enter
dec
jecxz
out
stc
shrb
add
add
pop
push
insl
and
test
inc
fdiv
leave
les
adc
inc
sbb
jp
arpl
xchg
outsl
add
call
or
aad
pop
fnstenv
gs
repz
scas
testl
xor
cltd
xor
xor
test
dec
cmpsb
push
jmp
loop
jo
sub
mov
dec
mov
mov
xor
lret
cld
dec
in
inc
call
add
mov
and
sbb
test
daa
cmp
pop
jp
pusha
test
loope
adc
and
and
mov
fcmovnu
outsl
or
das
testb
adcb
mov
leave
add
daa
push
out
xor
imul
stos
test
mov
fcoms
cmpsl
or
stos
inc
push
sub
lds
leave
pusha
movsl
jl
jecxz
out
clc
into
push
add
push
popf
dec
and
mov
cmpsb
mov
les
adc
inc
sbb
jp
bound
xchg
insl
add
out
pop
mov
or
inc
pop
fidivl
arpl
scas
clc
loopne
jp
out
pop
scas
xor
cltd
xor
push
xor
dec
lea
aad
loopne
jno
sub
hlt
mov
es
adc
iret
cmpsl
xor
fdiv
lret
bound
cli
dec
in
inc
jmp
add
pop
sahf
enter
shr
and
aas
and
inc
pop
js
popa
clc
mov
loopne
push
adc
add
data16
and
mov
fcmovu
jo
in
repz
ss
push
mov
lret
mov
push
call
bound
push
stos
xor
mov
lea
pop
lods
inc
push
sub
lds
lret
jp
jecxz
test
pop
sahf
dec
pop
mov
push
push
mov
movsb
mov
lds
stc
aas
sbb
jnp
pusha
adcb
imul
pushf
mov
xor
out
push
mov
inc
pop
popa
pop
hlt
xchg
lods
stc
nop
fidivs
pop
scas
xor
lcall
pop
mov
ljmp
jno
daa
add
mov
dec
es
adc
int
xor
xlat
out
lret
bound
stc
dec
out
inc
jmp
add
xchg
pop
sahf
sahf
mov
shl
and
inc
and
inc
fisubrl
pop
ja
popa
clc
mov
fidivrs
adc
add
fs
mov
aas
rcr
jo
jecxz
hlt
adc
testl
mov
cltd
xor
fdivl
call
popa
jbe
push
test
repz
adc
dec
daa
das
pop
jo
popa
mov
ret
call
add
push
pop
sahf
inc
push
mov
push
push
test
mov
pop
testb
cmp
pop
adcb
push
lcall
and
ss
inc
xlat
aas
push
pusha
pop
cmc
xchg
stos
stc
nop
fdivl
pop
scas
cs
fwait
xor
dec
xor
push
mov
xlat
outsb
fdivp
jno
and
inc
es
adc
test
xor
in
lret
bound
clc
push
out
inc
jmp
add
les
and
inc
and
inc
fisubrl
enter
popa
clc
mov
fdivrl
push
jmp
fwait
sbb
popf
xor
cmp
mov
xlat
rcl
jo
loop
cmc
adc
testl
scas
xchg
lret
mov
call
pusha
je
push
cmpsb
xor
and
aam
test
dec
es
push
outsb
lret
js
in
shr
repz
cld
adc
sahf
inc
sbb
and
inc
mov
ret
pop
cmc
or
cmp
out
dec
pop
adcb
imul
loope
and
xor
inc
fdivrs
push
pop
pop
notb
mov
adc
sti
pop
scas
sub
pushf
xor
dec
xor
push
mov
fsubrs
icebp
jno
and
testb
push
adc
sbbl
leave
aad
lret
bound
aas
jmp
add
ret
pushf
mov
into
in
mov
and
inc
fisubrl
enter
popa
clc
mov
fstpt
or
das
popf
xor
cmp
mov
mov
inc
xlat
mov
loope
cmc
adc
testl
lods
xchg
lret
mov
jmp
pop
jae
pop
movsl
jg
mov
rclb
test
dec
and
push
insl
lret
bound
shr
repnz
adc
lahf
inc
sbb
mov
mov
rol
repz
cmp
jge
pop
sbbl
cwtl
scas
lahf
ss
and
xor
inc
fdivrs
fdivl
pop
pop
testb
jge
loope
sbb
xor
push
mov
jmp
test
jb
and
testb
push
adc
adcl
int3
arpl
ljmp
xchg
or
int3
jecxz
mov
and
inc
enter
stc
mov
fiaddl
fwait
sbb
sahf
xor
imul
xlat
mov
fistps
adc
clc
pop
xor
jnp
lods
lods
test
lret
xlat
mov
ljmp
jno
movsb
jge
mov
rclb
test
dec
and
push
insb
int3
arpl
mov
insb
add
adc
mov
dec
fs
mov
sahf
mov
fsub
mov
fs
cmp
out
inc
pop
sbbb
gs
xchg
lods
mov
mov
xor
inc
fdivrs
push
fnsave
pop
testb
adc
stc
sbb
xor
into
jl
mov
in
into
cmpsl
fsubrs
out
jae
and
testb
dec
adc
jg
scas
inc
enter
shr
int
sbb
push
out
cmp
outsb
add
rcrl
mov
push
xor
enter
arpl
mov
flds
fwait
pop
sub
and
mov
inc
xlat
mov
fstpl
push
daa
stc
nop
pop
das
jl
popa
jp
scas
stos
sbbb
std
aad
dec
pop
pop
push
jmp
sub
insl
pop
jno
or
les
test
dec
and
enter
fs
jb
out
mov
insl
add
adc
mov
dec
bound
mov
pushf
mov
fucom
mov
gs
aaa
adc
jle
pop
sbbl
arpl
cmp
mov
mov
xor
inc
fnstcw
push
fnsave
pusha
testl
negl
mov
add
into
jp
mov
in
int3
cmpsb
fnstenv
in
jae
pop
cli
testl
jle
scas
inc
lahf
xor
shl
int
sbb
push
call
insl
inc
outsl
push
jbe
or
leave
loopne
mov
sbb
ds
pusha
jo
arpl
mov
out
ret
xlat
sbbl
push
sub
mov
mov
inc
fdivrs
fcompl
or
jge,pn
pusha
js
scas
test
lret
sti
aam
push
push
sbb
xlat
outsb
pop
outsl
jb
mov
ret
hlt
int
stos
adc
xor
push
push
push
out
mov
outsb
add
aas
push
lea
pusha
sub
fwait
mov
fucom
mov
gs
xor
push
sbbl
bound
popf
xchg
test
and
in
mov
fidivrl
dec
fnsave
popa
clc
mov
jg
sbb
xor
into
jns
mov
in
lret
movsl
fnstenv
in
jae
push
stc
testl
jge
scas
inc
lds
int
sbb
push
call
insb
inc
outsl
push
jne
or
enter
adc
stos
inc
sbb
inc
fsubl
leave
pusha
outsl
test
mov
out
ret
sbb
in
pushf
adc
and
scas
mov
mov
fistpl
or
stc
nop
push
sub
pop
scas
test
fwait
xor
sarl
jmp
xlat
outsb
pop
outsb
jb
mov
rcll
std
adc
inc
inc
push
xor
dec
addr16
cltd
jo
out
mov
outsb
add
ds
sub
lcall
pusha
in
add
xor
call
sbb
test
cmp
mov
mov
sub
dec
fnsave
popa
clc
mov
jg
fdiv
sbb
xor
into
js
mov
in
lret
jo
jmp
or
aas
xchg
sub
adc
inc
les
int
pop
lock
call
imul
je
or
fisubs
mov
sbb
inc
fsubl
leave
pusha
outsb
andl
out
rcl
sbb
jecxz
pushf
adc
lahf
ss
xor
mov
fdivrs
ficompl
or
stc
nop
push
sub
adc
jbe
scas
cmpsl
jg
xor
sarb
jmp
and
jb
lahf
js
mov
lret
adc
inc
sbb
int
cwtl
outsl
push
out
mov
outsb
add
cmp
pop
sub
cltd
mov
fucom
mov
gs
xor
sbbl
pusha
push
popf
xchg
cmpsl
mov
mov
sub
inc
fidivl
dec
fnsave
popa
clc
mov
jg
fcomi
sbb
das
inc
aaa
into
ja
mov
in
leave
mov
jae
sbb
testl
jnp
scas
inc
ret
pushf
xor
int
int
push
out
push
call
push
outsl
push
jae
or
frstor
mov
sbb
inc
fsubl
leave
pusha
insl
andb
mov
jle
aam
sbb
loop
pushf
adc
lahf
ss
xor
mov
lods
xchg
mov
fstps
or
stc
nop
push
sub
pop
jne
scas
cmpsb
jle
xor
sarl
jmp
and
outsb
push
insb
jb
sahf
ja
mov
lret
sti
adc
leave
dec
gs
xchg
outsb
push
out
mov
outsb
add
cmp
lea
stos
inc
cwtl
scas
inc
fucom
mov
gs
xor
jg
push
sbbl
pop
push
popf
nop
cmpsb
mov
mov
sub
fidivl
push
popa
clc
xchg
jg
sbb
cs
aaa
into
jbe
mov
in
enter
aam
jae
sbb
testl
jp
scas
inc
ret
lret
int
adc
aaa
jmp
imul
mov
mov
sbb
inc
fsubl
leave
pusha
insb
andl
or
fwait
imul
push
pop
movsb
xor
xchg
addb
test
scas
int
add
inc
jae
mov
cli
xor
into
call
mov
jmp
dec
push
test
push
adc
popf
lods
loopne
adc
pusha
dec
add
xchg
pop
daa
mov
sbb
shll
pop
sub
jbe
inc
shrb
cmp
sub
pop
pop
lods
clc
mov
loopne
fsubr
loopne
loop
loopne
jmp
and
divl
jno
pop
fildl
dec
ret
push
ljmp
inc
ret
add
jp
aaa
mov
jge
mov
movsl
fsubrs
fidivrs
jae
gs
dec
lret
out
addl
push
jge
cmpsb
cmc
pop
xor
cs
mov
ret
ja
mov
mov
aad
cli
xchg
sub
sub
and
imul
or
jecxz
mov
icebp
aam
stc
adc
cs
cld
je
andl
insb
bound
xchg
mov
popf
or
adc
push
sub
cmpsb
scas
jg
leave
sbb
rorl
aaa
pushf
imul
nop
ljmp
xor
incb
and
dec
rolb
outsb
adc
jp
leave
push
scas
cmp
fidivrl
movsb
pop
jle
or
pop
mov
or
ljmp
nop
sbb
out
das
push
aaa
sbb
lods
add
movsb
jnp
aas
out
daa
jnp
inc
push
xchg
cmpsl
out
mov
adc
negl
jecxz
mov
daa
push
adc
and
push
jl
pop
lea
push
mov
fistpll
loop
push
int
stos
mov
mov
add
add
and
add
add
add
add
jmp
in
aaa
or
mov
inc
mov
movsl
pop
icebp
mov
push
mov
inc
inc
dec
xor
xchg
jg
mov
es
inc
pushl
sub
push
pop
pop
fnstenv
pop
mov
mov
in
push
lock
xor
jae
leave
cmp
enter
adc
lcall
gs
arpl
xchg
outsl
cs
sbb
gs
mov
cwtl
rol
mov
xorb
in
push
inc
pop
add
or
or
pop
dec
push
add
push
ljmp
jp
fwait
stc
psllq
dec
int3
jl
sbb
cmp
fnstenv
mov
test
or
inc
mov
sub
or
mov
out
rorb
cli
cmp
ret
lret
fmul
sub
xor
jl
and
lock
aaa
fiadds
in
addb
sarl
addl
mov
inc
dec
pushf
fs
dec
or
lcall
push
sub
mov
stos
mov
imul
push
test
pop
scas
ret
cltd
sarb
movsl
pop
jle
adc
xlat
mov
movsl
test
jge
mov
popa
jg
hlt
mov
loop
dec
xchg
decl
sub
jl
jno
insb
adc
jp
inc
lret
inc
shlb
in
pop
shrl
jge
ret
popa
adc
movsl
leave
inc
filds
in
mov
and
pop
movsl
xor
mov
xor
fsts
iret
movsb
adc
xor
cmp
lret
mov
mov
and
hlt
cmpsb
or
cmc
lcall
pop
fwait
dec
jle
mov
push
jmp
sahf
rclb
negb
pop
out
jo
sbb
push
test
and
int3
sub
sub
adc
jecxz
cmc
xchg
xchg
je
mov
add
jne
push
xchg
push
pusha
mov
xlat
dec
iret
stos
mov
push
stos
xchg
pushf
daa
xor
fidivrs
andb
mov
xlat
cmp
cld
add
pusha
leave
pop
data16
scas
push
push
cltd
mov
mov
movsl
aad
adc
in
enter
fwait
pop
pop
stos
pop
cwtl
jecxz,pn
push
sbb
movsb
sub
lea
push
cmpl
ret
jae
jno
repz
clc
jmp
inc
mov
gs
incb
xchg
hlt
push
push
dec
cmp
repnz
jge
inc
add
inc
repz
adc
cmp
mov
popa
ficoms
sub
int3
xor
scas
jb
xor
out
sbb
fisubrl
aad
inc
dec
xor
or
inc
notb
sub
and
and
xorb
or
or
cmpsl
in
inc
or
pslld
popf
push
out
xchg
push
lcall
jne
xchg
outsb
gs
in
insl
push
pop
stc
les
or
pushf
xchg
es
adc
movsbl
pop
xchg
test
cwtl
lahf
mov
jo
scas
cltd
js
test
sahf
bound
scas
cli
subl
jle
lods
lea
xchg
jns
int3
stos
scas
mov
or
mov
push
ds
incl
fbld
xchg
mov
fimuls
jne
cltd
addr16
push
lcall
dec
jl
xchg
andl
sbb
testl
adc
idivl
int3
icebp
pop
sbb
test
popa
adc
pop
cmp
movsl
or
pop
adc
call
push
or
stc
or
dec
cmpsl
stos
sub
fistl
dec
add
aas
ss
sub
movsl
sub
pop
cmpsl
pop
sub
sub
mov
filds
sbb
stos
jecxz
xchg
mov
push
lods
out
jecxz
push
scas
sahf
fs
rclb
mov
repz
mov
orb
clc
jp
int3
test
cmc
xchg
jp
into
adc
data16
call
dec
adc
sbb
push
out
movsb
inc
or
sbb
jge
in
or
sub
out
aad
mov
pop
inc
inc
xor
mov
pop
sub
subl
add
jg
pop
xor
mov
imul
cmc
out
hlt
mov
notl
into
xor
insl
and
sub
stc
sbb
adc
mov
pop
xchg
and
imul
out
mov
add
data16
aas
mov
and
and
hlt
and
std
and
adc
add
mov
icebp
jo
mov
rorl
shll
rorb
cmp
lcall
xlat
add
lock
mov
ficomps
mov
aas
mov
pop
test
add
mov
xor
fnstenv
xchg
pop
xlat
cmp
nop
adc
popf
dec
fsubs
dec
inc
addr16
push
or
icebp
jns
cmpl
push
cmpl
pushw
and
cmp
push
xor
mov
pusha
mov
scas
or
cmpsl
push
mov
push
xor
push
roll
leave
add
cmpsl
add
out
aam
pop
sub
subb
xchg
dec
or
and
jg
cltd
pusha
addb
xlat
jl
sub
mov
fdivrs
daa
test
xor
sbb
sub
sbb
ret
dec
sub
mov
xor
dec
pop
outsl
nop
sub
ljmp
scas
pushf
jge
daa
mov
pop
sbb
subl
movsl
pop
pop
xchg
movl
add
lods
xlat
repnz
mov
cmp
dec
mov
mov
inc
mov
cmp
and
ljmp
mov
jmp
addb
sbb
out
pusha
or
sub
mulb
and
addr16
jo
xor
xchg
int
rorb
mov
sub
in
mov
icebp
mov
filds
inc
xchg
jnp
cmp
pusha
das
repnz
cmp
bound
pop
into
pop
call
pop
xchg
fistpll
sti
imul
inc
and
inc
mov
call
dec
mov
out
lret
dec
mov
mov
in
int
mov
mov
loop
add
mov
in
decl
sub
mov
push
es
leave
and
test
sub
es
sub
neg
testl
in
pop
out
pusha
aad
pop
jp
and
