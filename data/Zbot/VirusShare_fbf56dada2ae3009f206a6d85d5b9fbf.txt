jmp
push
push
out
fwait
testl
cmp
pop
pop
pop
ret
adc
or
nop
out
aaa
sti
ja
add
add
push
or
pop
pop
pop
ret
or
out
ffree
and
adcb
mov
pop
ret
inc
imul
inc
add
push
adc
or
add
mov
in
inc
and
inc
mov
adc
inc
and
nop
and
divb
nop
inc
add
inc
and
mov
xchg
std
testb
addb
cs
push
out
cmp
adc
push
push
int
int
adc
inc
mov
int3
and
push
lods
popf
int
nop
stos
add
add
and
jae
mov
adc
adc
inc
mov
adc
andl
notl
adc
cmpb
and
nop
and
adc
orb
aas
lcall
mov
xor
mov
add
out
add
roll
sbb
fiadds
inc
roll
mov
mov
sub
add
adc
xor
data16
mov
fstpl
outsb
shlb
addb
pusha
mov
add
mov
data16
inc
cmc
test
cmp
cld
roll
xor
adcb
mov
mov
add
add
sub
lcall
inc
and
and
and
adcb
sbb
inc
aam
add
data16
inc
inc
adc
xor
cltd
fnstenv
bound
cltd
xor
jp
push
xor
adc
jp
xorb
scas
fstp
popf
add
xor
xor
int3
out
in
xchg
adc
push
push
sbb
loopne
shlb
mov
sbb
fstp
in
push
in
pop
dec
inc
or
popf
jbe
scas
incb
les
fmull
push
cld
inc
cmp
jo
insb
loopne
and
lods
xchg
fcomps
fadd
pusha
fsubl
je
sub
add
inc
push
lret
mov
xchg
out
xchg
cmp
dec
adc
cmpsb
or
fs
int3
or
cmp
adc
push
xchg
adc
sub
dec
or
fnstcw
mov
mov
xchg
and
hlt
mov
call
out
nop
xor
outsb
inc
cmp
mov
mov
mov
sub
out
push
loope
xchg
lahf
out
cmp
push
out
nop
sub
sbb
loop
jno
shrl
add
loopne
out
das
dec
testb
jo
int3
shrl
in
mov
sbb
sub
stos
or
push
xchg
push
add
jle
pop
mov
movl
nop
movsb
scas
insb
jo
loopne
cmpsb
sbb
jl
int
test
pop
sub
stos
push
mov
jno
push
jo
jle
sbb
sbb
int3
push
dec
mov
cmp
mov
shll
push
dec
aaa
fidivrs
sbb
mov
and
pushf
cmp
mov
xor
or
jo
jb
pop
adc
in
mov
repz
adc
mov
sbb
jmp
enter
add
xor
and
addr16
sarl
movzwl
jae
pop
cmp
jnp
add
or
iret
ja
jno
adc
imul
jo
subb
pop
lea
pop
out
mov
lds
pop
mov
push
and
adc
mov
nop
push
mov
sbb
inc
aam
inc
lock
nop
adc
ljmp
push
icebp
jmp
fists
lahf
add
loope
dec
sub
sbb
mov
mov
jl
mov
add
adc
int
push
lock
add
fimull
jle
mov
std
inc
add
fildl
mov
clc
fisubrs
addb
cmp
mov
iret
sub
adc
fstl
fwait
lods
rcr
inc
popa
inc
cld
clc
or
xor
pop
adc
mov
jne
adc
js
sahf
or
add
scas
stc
jg
hlt
not
sub
hlt
outsb
sbb
adc
cld
sub
inc
cli
cld
mov
fnstenv
sbb
mov
ret
mov
inc
add
jecxz
insb
adc
int
in
cld
or
ficoms
add
jg
rclb
jge
add
mov
jne
adc
fsubrl
lods
hlt
sti
add
and
int
jae
mov
fiadds
sbb
sub
cmp
inc
call
and
shlb
cmp
cmpl
pop
in
mov
icebp
and
dec
adc
jp
or
lods
mov
call
xor
xchg
call
clc
add
or
nop
cmpsl
js
out
adc
xchg
dec
adc
or
or
or
lods
movsl
xor
mov
xchg
or
dec
out
andb
push
mov
call
xor
cmp
lock
iret
mov
sahf
insl
jns
rorl
pop
and
shll
push
mov
fcoms
mov
std
push
clc
mov
xor
adc
mov
or
aas
sahf
push
in
sub
in
xchg
ret
pop
outsl
adc
push
push
cltd
sbb
or
and
mov
fidivrl
aas
cmp
add
xor
xchg
lods
adc
sbb
push
cmp
add
add
es
jge
sbb
or
fucomp
sahf
sbb
mov
ljmp
filds
inc
je
or
mov
jmp
testb
adc
cmp
add
jmp
stos
inc
jecxz
mov
addr16
cmp
add
aam
jb
jae
ja
sar
sbb
mov
mov
inc
data16
xchg
or
push
mov
mov
mov
scas
daa
jmp
mov
or
jp
mov
sarb
clc
sub
not
loop
ret
imul
dec
cmp
fidivl
adc
not
push
scas
hlt
mov
flds
jnp
ss
mov
scas
es
neg
fwait
add
mov
dec
jbe
mov
dec
mov
and
pop
add
mov
sbb
and
lds
pop
push
js
pop
js
ja
inc
ret
nop
xlat
movsb
jmp
sarl
adcb
es
ret
dec
mov
rorl
pop
push
frstor
decb
pushf
inc
scas
sti
mov
flds
sti
in
add
jbe
int3
fwait
scas
fisubrl
lret
dec
pop
inc
jmp
mov
cld
add
stos
xchg
mov
xor
dec
xor
cmpl
fimull
hlt
mov
roll
pop
in
add
shl
neg
mov
cmp
mov
jbe
pop
push
scas
cmpxchg
stos
out
in
in
jne
lcall
cmp
inc
fadd
and
fmuls
add
or
fnstenv
or
dec
icebp
scas
mov
pop
sub
outsb
lock
cmp
push
rcrb
sub
xlat
stc
cmp
sbb
mov
into
ss
and
push
mov
loopne
js
mov
cmpsb
xchg
mov
mov
std
pop
mov
cmc
inc
dec
jne
enter
stc
in
and
ljmp
cwtl
adc
and
xor
sub
mov
lea
mov
clc
ja
testb
push
call
inc
and
inc
cmp
cld
adc
jne
xor
mov
dec
xor
adc
cmc
adc
inc
pop
push
or
xchg
in
cmp
mov
mov
mov
sbb
leave
mov
push
mov
add
adc
test
or
dec
jns
adc
sbb
dec
sbb
push
sub
inc
sti
fists
jle
mov
adc
or
std
xchg
or
sub
test
pushf
add
clc
ja
cvttps2pi
imul
rolb
mov
testb
mov
jns
nop
sbb
or
rorl
dec
dec
cmp
int3
aas
and
xor
adc
mov
jb
ror
sbb
add
loop
jmp
cmp
bound
out
adc
dec
jmp
mov
jmp
dec
push
mov
lds
and
or
movl
mov
or
jb
popa
decl
scas
push
cmp
lock
pop
loope
dec
add
addb
pop
fidivs
imull
ret
add
mov
or
cmp
mov
clc
andb
adc
sbb
mov
in
lods
jl
testb
pusha
mov
add
add
shlb
and
je
and
push
mov
push
ret
xchg
sub
es
pop
iret
mov
or
outsb
mov
sti
push
jecxz
decb
enter
lahf
pop
mov
ret
outsl
out
ret
push
lock
mov
mov
movb
dec
add
sbb
sbb
jg
inc
pop
cmc
mov
jp
dec
dec
dec
not
dec
pop
ret
xor
jo
orl
push
add
fdivr
lahf
enter
add
add
leave
ret
leave
fdivl
add
sub
cltd
stc
mov
mull
add
adcl
and
pusha
testb
imul
lret
out
dec
fldcw
push
or
push
push
fdivrl
xor
xor
xlat
cli
cmp
jmp
mov
jg
ret
pop
divb
in
ds
sub
add
xchg
jne
cmp
lcall
mov
cmpsl
and
push
js
loopne
or
sbb
shll
sahf
ds
pop
cmpsb
dec
xchg
adc
lcall
mov
les
fisttpll
popa
add
rolb
and
mov
cld
sbb
push
faddl
js
jo
adcl
add
add
push
dec
lock
sbb
mov
dec
or
push
aaa
jge
dec
fcmovnu
cmp
xor
cs
sbb
ffreep
xchg
clc
dec
add
fistpl
and
call
jp
adc
clc
in
add
add
shll
jo
inc
mov
jns
cltd
testb
dec
sub
outsb
in
in
xchg
adc
add
psubsb
test
std
testl
cld
cmpsl
sbb
fildll
pop
or
push
call
mov
loopne
stos
and
jb
mov
lret
aas
jp
adc
sub
jmp
flds
mov
mov
nop
cld
inc
pop
add
sbb
mov
jmp
dec
popf
jbe
and
adcl
push
decl
dec
add
dec
inc
neg
dec
push
pop
clc
inc
sti
mov
incb
mov
dec
stos
or
add
cmp
dec
loopne
dec
stos
sub
mov
outsb
scas
les
or
ret
dec
int
dec
lock
inc
mov
dec
dec
and
push
or
popf
xor
sarl
add
add
cmp
inc
or
and
fcomps
ret
lahf
loope
enter
dec
sub
testl
shr
int3
cli
rcll
add
mov
xor
icebp
mov
shr
cmp
aaa
add
add
dec
inc
clc
mulb
fildl
cwtl
stos
pop
mov
and
add
sahf
int3
pop
fdivrp
cs
add
lret
je
pop
cli
mov
rolb
inc
sub
jno
sbb
dec
jb
lock
pop
adc
and
jns
sub
iret
arpl
mull
xchg
add
cmpsb
repz
or
xor
in
dec
lods
dec
pop
xor
jne
adc
fcoms
out
lods
or
insb
jb
jmp
inc
out
fdivrs
push
enter
cmp
push
cmp
rcl
xchg
add
aas
push
rcl
fstpt
jmp
and
daa
imul
jne
push
sub
inc
push
push
and
movsl
cmp
outsl
das
or
pop
sbb
and
popf
xor
movsb
stc
and
push
idivb
add
add
notb
clc
dec
shrl
mov
aam
xor
push
mov
add
push
in
sub
mov
add
sbb
pop
cmp
jo
push
or
adc
in
leave
xchg
lret
lods
fcomp
jmp
ret
adc
int3
push
xor
enter
or
or
sbb
add
sbb
push
cltd
add
rorb
adc
mov
pop
or
cmpsb
add
inc
mov
jmp
scas
hlt
push
lods
mov
insl
pop
arpl
nop
add
mov
test
xchg
out
filds
int3
add
and
adc
dec
sub
in
ja
mov
clc
les
sub
int3
rorl
lret
push
push
neg
call
or
cmp
pop
sbb
movsb
push
nop
scas
cmp
sub
and
dec
add
in
je
jge
push
dec
adc
push
into
pop
mov
int3
jo
cmp
cmp
popf
jecxz
test
mov
cs
push
loopne
add
mov
ja
rolb
and
inc
inc
sbb
rcr
loope
movsl
loop
shlb
movsl
mov
mov
fcomps
addr16
inc
dec
sbb
pop
clc
or
fcoml
ret
pop
and
and
sub
lcall
inc
ret
sbb
ficompl
dec
jg
jno
push
jne
hlt
push
mov
inc
jnp
mov
in
or
nop
mov
in
xchg
pop
out
shrl
sarb
pop
aam
mov
clc
dec
sar
aam
add
outsl
push
or
jp
inc
sub
cld
pusha
push
pop
mov
and
das
cld
add
cmp
ret
sahf
aaa
mov
pop
icebp
jae
cmp
fisubs
fmuls
push
lea
inc
mov
sbb
sbb
rcrb
dec
push
sarl
enter
int
ret
mov
dec
scas
pop
mov
shrl
push
out
cmc
sub
ficoms
xchg
lock
jg
xor
iret
roll
js
mov
push
jecxz
repnz
sbb
push
pusha
and
push
mov
fidivl
lret
push
sub
int
hlt
push
push
call
ds
inc
nop
mov
fwait
sub
add
add
popf
sbb
inc
dec
dec
lods
mov
rcl
cmp
dec
inc
adc
dec
add
in
xor
cmp
inc
cli
adc
pop
adc
pushf
enter
adc
aaa
or
out
movsb
mov
add
and
or
add
add
dec
aad
mov
dec
or
pop
xlat
or
cld
pop
sar
out
and
add
lcall
add
and
out
push
shr
daa
ljmp
mov
popa
hlt
add
add
cmpsb
popf
das
popa
pop
cmp
add
add
loop
push
clc
jge
andb
ret
sbb
rclb
inc
mov
insl
add
into
popf
adc
push
mov
jne
cmc
lea
mov
data16
add
or
mov
dec
mov
lods
push
push
xor
inc
nop
jl
pop
sbb
xchg
insb
fsts
fiaddl
enter
cmp
jle
out
cmc
in
add
and
cli
cld
loope
cmpsb
imull
adc
cmp
jnp
lods
scas
lahf
flds
sub
push
pop
inc
add
mov
sbb
pop
clc
mov
addb
dec
pop
int
pop
mov
loopne
sbb
fnop
mov
push
ss
cmp
data16
xchg
test
adcb
add
fadds
call
dec
cmpb
sub
push
jle
inc
outsb
or
add
lods
sub
xor
or
mov
rolb
jb
movsl
add
inc
pop
cld
push
dec
jnp
filds
fimuls
lock
loopne
pop
fsubl
sub
push
in
xor
out
sbbb
xchg
xor
sub
inc
jmp
sbb
push
mov
sub
pop
clc
jbe
add
inc
daa
push
loop
xchg
add
lods
add
sub
or
ljmp
imul
cmp
or
xchg
dec
stos
push
jns,pt
ljmp
sub
xorps
test
repnz
repz
jns
pop
jo
or
stos
mov
daa
xchg
xor
cmp
push
dec
xchg
and
lock
xchg
and
loop
int3
outsl
pop
mov
add
mov
sbb
mov
push
or
cmpsb
scas
aad
bound
push
adc
jmp
mov
mov
notl
cmp
and
mull
lock
shr
mov
sbb
pop
ja
dec
adc
adc
das
jnp
xor
cmp
or
jp
inc
or
pop
cld
bound
ljmp
filds
faddp
popf
cmp
or
sub
scas
cmp
rolb
add
lret
js
sub
xlat
popf
lock
sbb
pop
push
xor
adc
fstp
sbb
mov
cs
pop
mov
jmp
inc
test
cmpl
sbb
dec
shl
cmp
mov
xor
imulb
fcomps
scas
mov
ja
fadds
loopne
in
fstp
pop
xchg
in
add
inc
xchg
js
jae
sbb
jg
or
loope
aaa
andb
add
mov
jne
mov
repz
popf
mov
insb
sbb
andl
mov
out
or
inc
sub
add
or
int3
mov
ds
icebp
inc
inc
and
fsubr
jmp
jbe
add
pop
inc
out
cwtl
pop
push
nop
jb
sahf
mov
cmp
fisttps
add
jo
push
sbb
dec
xor
xor
jecxz
pop
push
add
rorb
dec
fwait
adc
sub
cmp
push
in
dec
add
add
loop
and
mov
sti
push
outsb
jns
mov
add
js
jp
cmp
adc
adc
js
pop
test
or
add
int
mov
add
jb
sub
es
cmp
lahf
divb
pop
jmp
push
andb
les
push
and
dec
sub
xchg
xor
subl
cmp
add
insl
into
out
add
movl
and
and
dec
jp
sbb
xchg
add
add
dec
push
loopne
shl
cld
aam
mov
aam
neg
add
xlat
cmp
add
xor
adc
xchg
add
cmc
push
loopne
push
flds
mov
and
jge
xchg
jecxz
ss
ss
push
test
test
cmp
add
sub
scas
add
loopne
adc
cmp
cmp
cld
push
sbb
lods
jge
dec
mov
mov
dec
mov
ret
xor
cmp
or
enter
inc
jecxz
ljmp
push
loopne
in
and
fs
in
push
rol
or
sub
mov
sahf
out
fistl
enter
push
push
jmp
sti
adc
mov
stos
enter
add
sbb
and
gs
mov
mov
xchg
xchg
loop
or
aam
cld
xor
pop
xorb
fwait
push
mov
sub
jp
repz
xchg
dec
pop
cltd
xor
arpl
lds
or
push
fdivs
repnz
push
cwtl
push
mov
lret
lock
xlat
inc
in
loopne
loopne
pop
shl
je
fcoms
push
int
rolb
scas
jbe
mov
fildll
xor
into
sbb
xor
cld
fucom
sahf
or
lock
in
es
adc
shrl
jne
hlt
popa
xchg
sbb
and
push
lods
and
sub
mov
dec
sub
jae
add
add
adc
nop
adc
sub
rcrl
pop
or
ret
jge
hlt
popf
scas
adc
adc
scas
jne
jo
or
dec
mov
mov
jg
xchg
cs
scas
rorl
and
sbb
xor
test
js
push
add
gs
femms
mov
jno
cmp
adc
push
in
cmpsl
cs
mov
xlat
push
pop
inc
jbe
jae
pop
ret
popa
dec
or
movsb
mov
push
mov
mov
std
cmpsb
pop
pop
scas
test
addl
xchg
adc
xchg
cmp
das
arpl
cld
aam
das
cmc
out
aad
pop
mov
sar
xor
jg
lock
jl
add
lods
out
ds
dec
test
or
fxch
rcrb
pop
push
mov
inc
test
push
out
pusha
push
mov
fs
mov
clc
pusha
test
push
test
cmp
inc
pop
and
mov
imul
ja
test
inc
inc
xchg
add
iret
push
div
dec
loopne
loope
inc
sub
cmp
les
xchg
rcl
rclb
js
loopne
in
pop
out
popf
inc
sub
lcall
push
push
pop
cmpsb
xor
ja
loope
mov
or
call
es
in
add
decb
fcomps
dec
jmp
add
xchg
ljmp
xor
bound
sbb
xchg
lahf
xlat
aas
inc
sbb
mov
popf
sub
mov
and
inc
mov
mov
and
sub
push
pop
js
pop
rorb
pop
fsubrs
or
movsb
leave
lret
sbbl
mov
arpl
fdivr
cmp
xor
sahf
xor
sub
push
xchg
popf
jne
jbe
sarb
add
xor
mov
sub
loop
es
inc
mov
jns
loope
rorb
lock
stos
sbb
ja
in
push
push
jmp
ficoms
scas
dec
mov
call
popa
in
cmp
mov
push
xchg
neg
push
adc
fsubr
imul
push
shlb
movsb
add
sub
mov
and
cmpsl
popl
jg
sbb
sbb
fs
leave
test
sbb
mulb
pop
xor
sbb
jg
push
mov
push
sar
testb
xchg
sub
add
adc
sub
lahf
test
mov
subl
rorl
add
test
pop
data16
movsl
dec
shlb
xor
scas
loope
pop
jne
call
or
out
sbb
dec
pop
jge
scas
mov
repz
and
xchg
inc
sbb
movsl
pop
add
add
rcrl
jp
add
out
adc
fidivs
addr16
stos
repnz
and
incl
and
dec
daa
aad
les
and
arpl
adc
xor
icebp
push
pop
adc
test
sub
ja
sbb
pop
pop
rclb
jae
sbb
out
and
mov
push
or
bound
insb
js
dec
or
sbb
dec
mov
cmp
xor
bound
faddl
add
arpl
arpl
xor
cmp
jbe
cltd
xor
inc
mov
mov
jecxz
maskmovq
idivl
fdivp
and
rolb
mov
sbb
jae
xchg
fsubp
mov
push
dec
xorl
xlat
add
lock
cld
lock
cmp
movl
sbb
mov
and
pop
adc
sbb
lea
sub
std
xchg
adc
sbb
pop
pop
imul
push
and
push
inc
roll
sbb
inc
loope
jl
jne
icebp
add
loopne
cmc
imul
and
xor
add
pop
popl
inc
out
sbb
inc
mov
inc
push
pop
loope
and
out
repnz
push
jp
mov
mov
movsl
push
mov
adc
daa
pop
add
ret
not
ljmp
push
clc
shrb
push
inc
outsl
rorb
fistpll
cmp
jecxz
mov
and
or
sub
pop
aas
xchg
ja
pop
dec
push
mov
adc
cld
pop
or
andl
push
pop
dec
cmovnp
pop
xlat
sbb
xor
out
adc
fnsave
test
cmp
add
cmpsl
popa
add
add
add
fmull
push
sub
add
stos
cmp
addr16
push
mov
lahf
jbe
loopne
sub
xor
fadds
test
sub
jmp
aad
or
andl
bound
inc
or
push
jo
add
add
dec
insb
push
mov
adc
push
pop
lret
push
pushf
pmullw
stos
sahf
jg
cmpsb
sbb
clc
mov
mov
clc
jnp
lock
dec
jmp
mov
mov
push
test
aad
test
adc
fistl
and
notb
adc
or
mov
nop
ss
imul
test
xchg
cmpsb
lock
jno
or
jne
ds
decl
add
jecxz
notl
in
pusha
and
inc
cmp
sbb
adc
sbb
data16
dec
adc
loopne
add
inc
sti
push
sub
sbb
sbb
mov
adc
sbb
inc
or
pop
ss
loop
hlt
leave
das
stos
mov
aad
cwtl
pop
sahf
ret
cmc
neg
sbb
mov
clc
mov
push
mov
mov
push
adc
sti
ja
lret
sbb
adc
daa
insb
adc
icebp
and
cmp
or
nop
inc
push
cwtl
cli
call
mull
and
loopne
pop
cmpsb
mov
call
add
jno
sub
call
dec
aas
pop
fcmovu
ljmp
jecxz
pushf
iret
ljmp
or
fld
mov
mov
push
cmp
sbb
xor
insl
jmp
sbb
pop
push
imul
add
lock
insb
rorb
dec
mov
add
inc
icebp
jo
fs
inc
addb
mov
loop
rcrb
stos
and
out
xor
inc
ficoms
and
loopne
inc
clc
fdivr
pop
sbbl
imulb
xchg
leave
mov
loopne
push
hlt
rorl
outsb
push
loopne
or
add
adc
rol
cmp
inc
jne
aas
push
jmp
fadds
push
lock
loopne
and
lods
rcrb
or
or
pop
fsubl
mov
add
movsb
push
push
inc
lods
loop
call
mov
pop
push
and
or
mov
or
mov
pop
rcrl
xor
arpl
xchg
adc
add
dec
adc
cmpb
xor
inc
mov
ss
divl
mov
int
jl
test
xchg
jg
ret
aaa
xlat
insl
stos
push
add
and
cmc
xchg
ret
adc
push
mov
or
cmpl
test
and
dec
cmp
repnz
and
iret
les
jno
imul
sbb
push
dec
subb
lds
cs
xor
fcomps
sub
sbb
adc
mov
and
adc
call
cs
cmp
lahf
sbb
or
pop
push
imul
aas
push
int3
and
nop
cmpsl
mov
pusha
xchg
movmskps
pushf
cmp
xor
or
loope
clc
inc
push
push
cld
dec
cld
xor
movl
stos
mov
lahf
sbb
jno
sub
loope
les
pop
sbb
cmpsb
pusha
daa
adc
adc
xchg
mov
shll
lods
pop
xchg
sub
lods
icebp
pop
bswap
inc
lahf
outsl
mov
pusha
sbb
or
int3
jp
push
adc
xor
dec
arpl
xor
add
pop
inc
push
adc
push
lea
push
call
pop
gs
xor
and
sbb
aad
pop
inc
les
push
or
mov
add
jnp
ret
pop
inc
loop
sahf
adc
js
aas
aad
cmc
cmpsl
add
mov
mov
cwtl
and
es
cltd
dec
test
pop
iret
mov
xchg
or
dec
and
adc
test
inc
add
loopne
pop
int
ljmp
call
sbb
int
loopne
pop
jno
push
jo
mov
pop
call
aam
ret
xor
jb
int3
dec
fiadds
jle
or
cmp
mov
rorb
inc
mov
mov
mov
cmp
inc
lock
adc
data16
lods
scas
fdivrl
movsl
sub
fwait
xchg
dec
add
add
ficoms
push
sbb
sbb
cmpsb
pushf
addr16
mov
add
adc
pop
out
add
sbb
and
xor
lods
ret
lods
inc
jno
sbb
jmp
xchg
inc
jecxz
or
or
roll
inc
cmp
inc
loopne
push
loope
mov
inc
sub
call
das
scas
mov
sbb
scas
inc
sbb
add
or
mov
in
jno
sub
cmp
rcll
jo
cmc
arpl
aam
sub
mov
dec
mov
scas
inc
lret
sbb
test
or
movzwl
dec
cmp
int3
lods
adc
mov
add
sub
lods
inc
sub
xchg
gs
add
add
pop
xchg
loope
mov
jp
es
push
pop
dec
in
add
xchg
cli
dec
mov
cmp
leave
cs
xlat
pop
addb
int
push
dec
lods
out
xchg
push
lods
add
pop
mov
ja
xor
mov
jo
push
ja
rorl
lock
push
in
jo
mov
fs
push
xor
je
or
and
inc
push
jecxz
add
and
and
jge
cmp
add
imul
or
xchg
pop
sub
cmp
mov
inc
xor
add
mov
jb
adc
loopne
mov
jnp
mov
icebp
dec
pushf
lock
daa
or
bound
push
adc
lock
adc
roll
hlt
fdivrl
inc
out
js
and
and
sub
in
add
adc
jmp
fadds
inc
adc
push
mov
jnp
in
cltd
addb
scas
test
ficompl
mov
push
push
and
leave
in
test
mov
ret
lret
lods
cmpb
in
test
xor
jne
loop
pop
out
and
sbb
out
push
cld
jecxz
loope
push
sub
mov
sub
repnz
lock
out
shl
add
mov
xor
test
mov
imul
popa
fs
roll
aam
add
es
mov
or
add
enter
jb
icebp
mov
xor
jecxz
test
dec
jge
enter
pushf
stc
inc
in
ret
mov
cmp
cld
add
or
pushf
sahf
mov
push
out
cld
add
fsubrl
dec
sub
sub
outsb
daa
jno
jo
fcompl
jg
sbb
movsb
sahf
out
pop
push
cmp
in
rorb
jae
cmpsl
pop
jp
clc
movsl
out
cmpsb
add
clc
mov
add
adc
dec
add
dec
mov
add
ret
xchg
hlt
out
jmp
mov
dec
and
fs
neg
xchg
addl
lcall
faddp
xchg
sbb
add
in
addr16
cmp
cmp
popa
jle
mov
notl
lock
sti
add
lds
movsl
cld
lds
das
cmpl
pusha
sbbb
shrl
in
daa
cmp
rorb
jmp
mov
les
lock
in
test
mov
mov
cmpl
sbb
lock
out
push
cmpb
shll
out
cld
xor
sbb
fstp
mov
adc
pop
adc
out
add
icebp
mov
test
mov
popf
jne
sbb
enter
mov
fimuls
xchg
adc
clc
sahf
ret
out
inc
clc
and
jne
push
mov
xor
adc
ja
sarb
rcrb
dec
and
loop
cmc
push
adc
dec
nop
insl
pop
inc
es
fwait
push
pop
jbe
pop
adc
adc
or
jecxz
in
or
insl
cmpsl
lahf
lock
add
cmpsl
leave
ret
sbb
loop
or
scas
mov
dec
sub
add
leave
int3
cli
dec
jmp
mov
and
aam
mov
jno
mov
inc
call
mov
inc
adc
clc
add
xorl
rcll
faddl
cmc
gs
stos
pop
shl
lods
or
ret
push
adc
loopne
iret
or
and
jecxz
and
fsubrl
xor
inc
pop
test
push
scas
in
add
aam
cmpsl
adc
mov
xor
movsbl
addl
dec
sahf
mov
test
jecxz
push
pop
pop
add
add
sbb
into
shrb
pusha
inc
mov
imul
inc
addr16
fsubrs
pop
dec
loopne
mov
sbb
adc
shlb
xor
push
outsb
sub
cmp
xchg
sarb
ja
jo
shlb
or
testb
add
cmc
rorb
outsl
psrlq
mov
xor
and
ffree
ret
pop
bts
daa
mov
nop
jmp
cmp
cwtl
jmp
loope
mov
and
out
jge
aaa
lock
enter
scas
inc
rorb
popa
or
adc
fwait
xor
aad
jae
sub
adc
mov
out
xor
scas
rorl
jne
ljmp
in
push
push
ret
mov
movsb
xchg
add
jo
xchg
in
pop
dec
fcoms
mov
aam
daa
scas
xchg
push
sbb
or
add
xor
sbb
mov
shlb
rolb
fs
arpl
adc
and
and
lret
sub
mov
call
ret
dec
mov
jne
test
mov
xchg
mov
call
or
jbe
shrb
in
fimull
push
jne
adc
je
js
inc
or
mov
fadd
rorb
xchg
test
gs
mov
mov
scas
and
xchg
push
les
jl
cmp
mov
in
sbb
dec
insb
jecxz
in
sbb
sub
adc
mov
xor
adc
or
lock
xorb
cmp
cld
cmp
mov
std
repz
addl
cld
pop
aad
mov
dec
ret
xchg
mov
add
xchg
sub
call
mov
jmp
pop
adc
mov
sbb
sti
xor
divl
aam
mov
mov
dec
sysexit
inc
fimuls
shrl
or
pushf
shlb
rorl
cmp
and
fnstcw
lcall
add
push
cmp
loop
daa
mov
push
addb
loopne
fiaddl
push
filds
js
loope
lods
fists
jno
lds
inc
add
xor
add
andl
push
call
jmp
test
je
push
scas
add
pusha
xor
sub
and
leave
cld
or
xor
mov
test
cmp
mov
add
adc
ljmp
cmpsl
aaa
xchg
clc
adc
pop
es
dec
add
push
sub
fsubrs
hlt
imul
mov
adc
mov
fwait
xchg
pop
mov
test
cmp
xchg
pop
add
xorb
fsubr
pop
mov
sub
add
inc
lcall
adc
test
jecxz
aam
inc
ss
dec
test
adc
dec
mov
jle
rcrl
repz
rclb
mov
inc
or
adc
pop
out
dec
loope
sbb
sub
cmp
mov
test
stos
xor
xchg
and
cli
push
loopne
add
ret
inc
push
push
xor
js
sub
outsl
es
lea
push
push
push
std
pop
adc
push
out
adc
xor
dec
nop
pusha
mov
imul
or
add
shl
and
pop
incl
mov
push
popa
ret
mov
adc
xor
dec
sbb
pop
jbe
sarb
dec
sub
ret
jno
test
pop
push
mov
jecxz
fidivrs
mov
hlt
cmp
out
test
loopne
sub
inc
es
pop
cltd
call
out
push
add
loopne
add
xchg
jno
mov
sbb
ret
sti
fwait
mov
imul
notb
jge
lock
in
push
insb
ficoms
xor
test
sub
xor
dec
dec
scas
subb
or
mov
add
out
or
jno
mov
rcr
mov
adc
shlb
daa
sub
sub
ss
sbb
das
test
cmp
cmp
enter
push
pop
pop
adc
daa
xor
ljmp
pop
xor
or
mov
mov
adc
cmp
sbb
pop
ss
rolb
xor
dec
adc
lret
movsl
push
push
addps
test
mov
or
ja
shl
shl
push
cmp
lock
mov
mov
fiaddl
bound
fildll
or
inc
and
push
pop
cltd
sub
aad
cmc
cmp
dec
in
fstps
ljmp
pop
sbb
mov
inc
stc
adc
sbb
lcall
xchg
mov
mov
fnstsw
loopne
sbbl
xchg
cs
pop
jnp
sbb
hlt
xorb
pushf
aam
pushw
stos
and
jb
leave
in
add
rol
mov
mov
adc
inc
not
push
adc
sbb
jbe
mov
jo
and
fcomp
sub
jge
fwait
sbb
adc
jbe
mov
stos
cmc
cmpps
pop
popl
add
out
loop
rclb
xchg
call
js
fisubl
sbb
scas
mov
cltd
cmpsb
adc
fsubrl
fdivs
out
add
cmp
rol
cli
xor
movsl
rolb
push
lods
sub
cmp
iret
fdivrl
cltd
sub
roll
dec
clc
sub
inc
pop
push
int
pop
and
popf
loope
sahf
mov
add
pop
add
sbb
mov
sbb
call
loop
fwait
test
sub
aad
add
loopne
insb
sub
out
aam
mov
add
movsl
sbb
mov
test
mov
rolb
mov
sarb
filds
js
cmp
aas
imul
call
or
or
movsl
out
leave
add
mov
shlb
dec
loope
mov
sub
push
push
push
push
inc
fidivl
stc
mov
xor
jae
idiv
nop
mov
lock
adc
test
pop
or
je
inc
arpl
rorb
xchg
in
or
dec
dec
das
xor
call
add
iret
rcrl
jl
outsl
test
rcrl
les
loopne
inc
test
sbb
test
int3
int
sahf
lret
jge
rolb
test
out
add
cmp
out
mov
dec
incl
pop
fwait
or
push
adc
add
xor
dec
shrb
jge
aad
or
mov
pop
and
mov
cmp
sahf
sbb
aaa
sbb
push
stc
cs
inc
sbb
sub
add
aam
pop
dec
call
lea
mov
cmp
scas
out
jl
loopne
loope
sub
jp
adc
inc
mov
fcompl
aam
push
sub
hlt
or
cmp
push
outsb
ret
in
lods
aas
jb
jo
pop
jno
sbb
rorl
insb
out
js
notb
sbb
xor
mov
dec
loope
push
ss
icebp
xor
push
mov
push
add
mov
dec
jo
bswap
push
push
sti
pop
push
push
lahf
ds
stc
cmp
int3
push
std
add
das
in
test
dec
lret
aaa
les
push
int3
sbb
psubsb
fsubr
ljmp
pop
or
cmp
xchg
adc
and
shll
loopne
scas
adc
orb
push
adc
lea
popf
orl
adc
aaa
xchg
xchg
xchg
cwtl
push
mov
jg
loop
sub
sbb
insl
fsubl
sub
pop
cmp
std
loopne
aas
loopne
pop
dec
push
push
rcrb
ds
and
idiv
add
add
sbb
cmp
xor
or
enter
out
mov
dec
xchg
xchg
dec
mov
lahf
jbe
loopne
xchg
xor
call
jno
mov
les
lcall
cmp
xor
fistpl
pusha
adc
dec
and
rorb
ds
pop
mov
scas
jns
dec
sbb
xor
and
cmp
test
dec
daa
or
inc
push
sbbb
inc
orb
sbb
cld
sbb
jecxz
xchg
lret
mov
sub
inc
sub
add
in
ret
and
and
or
sbb
or
push
xabort
push
sbb
xchg
xor
xchg
lcall
mov
jp
adc
inc
lock
mov
sub
mov
and
test
or
push
cmpsb
mov
inc
and
push
imul
sbb
inc
rolb
icebp
cmp
mov
or
push
sbb
ffree
movsl
jle
movsl
sub
shrl
pop
xorl
andl
loopne
or
jns
xchg
adc
mov
or
test
lcall
scas
lahf
inc
test
inc
nop
push
aam
lret
push
loopne
inc
rcr
addb
sahf
add
data16
sub
add
sub
dec
cwtl
std
jle
lea
push
push
jb
or
inc
xchg
adc
call
pop
or
push
xchg
mov
inc
adc
dec
mov
sub
inc
inc
add
sbb
loope
cmp
jp
ja
neg
and
jmp
mov
pop
aad
pop
push
xchg
push
jbe
or
jo
add
fildl
pop
mov
mov
rorb
sbb
push
push
mov
negb
adc
cmp
inc
cmp
mov
add
mov
aad
je
mov
loop
into
sub
bound
cmc
adc
inc
push
bound
iret
negl
popl
adc
sti
jmp
xor
push
push
test
inc
addr16
insl
xchg
scas
pusha
lods
addl
shlb
comiss
ljmp
sbb
mov
pop
jae
sbb
sti
and
adc
dec
or
add
and
shlb
or
jecxz
fidivl
add
in
sbb
and
fstl
sti
xor
inc
scas
fisubl
pop
loopne
push
sbb
inc
adc
testl
add
or
or
pusha
jno
cmpsl
mov
fbld
pop
mov
xchg
daa
int
das
pop
push
cmp
bound
xchg
idivl
cwtl
or
cmp
sbb
cmp
mov
lret
sub
adc
fadd
push
sub
and
cmp
pop
sub
jmp
jb
sarb
dec
cmp
mov
aas
dec
sbb
push
dec
mov
push
add
jo
add
cmp
cmpb
stc
cs
sbb
fcompl
sbb
jns
or
out
mov
addb
jbe
sahf
mov
roll
lret
lret
fucom
xchg
sub
in
movsl
shlb
or
pushf
adc
ret
xor
and
fsubrl
shlb
mov
jns
cmpl
pop
add
xchg
pop
mov
mov
fisttpll
fadds
loop
sbb
adc
pop
lock
stc
lea
push
in
ds
clc
dec
ss
jg
jnp
in
xor
push
inc
or
sub
lods
xchg
hlt
jmp
ret
jbe
mov
mov
in
push
jbe
dec
and
fldt
push
push
dec
stc
mov
pop
or
xchg
dec
add
mov
jne
mov
and
jp
ret
mov
xor
hlt
add
out
add
or
or
jmp
sbb
loope
mov
xchg
xchg
daa
movsl
in
push
sbb
jmp
cmpb
add
lea
inc
lahf
ljmp
sbb
loope
jne
mov
lock
test
faddp
cmp
and
sbb
mov
jge
mov
lcall
sub
sbb
incl
imul
and
jo
pop
jae,pt
and
mov
mov
xchg
pop
dec
dec
sahf
jo
add
loope
ret
push
pushf
das
push
cmp
enter
push
imul
jnp
xchg
add
jae
or
sub
repnz
jns
inc
ret
sub
jecxz
push
pop
sub
pop
or
dec
push
sub
cmp
ja
inc
jg
push
xor
fcmovnbe
cmp
aad
dec
or
cld
mov
test
ja
dec
sbb
jge
mov
xchg
sub
or
add
sbb
decb
add
sti
insl
mov
xchg
nop
mov
mov
lods
jmp
jmp
cmp
and
xlat
outsl
push
sbb
incl
cmp
dec
adc
or
inc
ljmp
jmp
ret
lock
in
or
xor
mov
add
jb
mov
mov
cs
outsb
test
lods
pop
pmaxub
cmc
push
es
dec
jmp
lea
daa
shl
sbb
add
jp
out
lds
fistl
shr
sbb
fistpll
jmp
xorl
daa
mov
push
scas
jo
inc
adc
stc
out
cmpsb
dec
dec
sahf
push
hlt
cwtl
ret
jno
repz
and
sbb
sysenter
ret
sbb
add
sbb
adc
jmp
push
adc
jp
mov
xor
push
lods
sub
mov
mov
inc
test
in
sti
adc
das
stos
push
and
in
cmpsb
fiadds
icebp
fisubrs
push
mov
ret
fsts
orb
mov
icebp
sbbl
jle
ficoms
push
sbb
icebp
in
insb
adc
sbb
add
push
pop
scas
dec
sbb
sbb
adcl
sbbl
push
inc
push
cmp
hlt
xchg
js
jo
andb
xchg
lds
cmp
scas
jno
sub
push
jge
mov
imul
mov
jmp
dec
scas
add
inc
mov
popa
jae
mov
jmp
dec
push
mov
dec
push
adc
add
xor
mov
cmpl
dec
xor
xlat
repz
mov
hlt
mov
es
clc
jbe
jl
sbb
inc
add
enter
fs
loope
jbe
mov
jae
xlat
adc
enter
sbb
mov
add
sub
cld
in
xor
xlat
jbe
outsl
loop
jo
popa
inc
and
int
adc
xorb
test
jb
pop
sub
out
mov
jecxz
xchg
mov
iret
mov
inc
cmp
js
imul
dec
inc
push
aad
mov
and
sbb
cmc
xorb
fdivl
sub
mov
clc
fbld
test
ja
sbb
movsl
ret
cmp
jb
xor
addb
sbb
mov
cmp
cmc
cmpl
jbe
jge
cmpsl
mov
sub
shll
dec
out
lods
ja
push
or
fidivrl
sub
pop
rorl
loop
mov
test
loop
out
add
sub
dec
xlat
mov
inc
cwtl
les
dec
mov
mov
daa
ds
adc
xchg
push
adc
add
clc
ret
cmp
aaa
sahf
inc
add
xor
in
or
hlt
stos
add
jmp
outsl
loopne
movsb
xchg
movsb
loope
dec
aas
jecxz
or
ret
adc
and
jne
inc
jp
mov
push
dec
jmp
pop
push
sbb
test
ljmp
jne
jmp
dec
ljmp
mov
popf
push
sub
pusha
or
cmpsb
rolb
stc
addb
mov
lock
inc
fadds
sub
cmpsb
mov
add
fsubr
dec
test
jb
ds
add
fldl
out
ja
dec
add
inc
inc
in
and
xor
jge
test
in
les
inc
push
adc
scas
push
sub
push
pusha
stc
push
adc
jno
or
sbb
xor
ds
loope
icebp
sbb
or
sti
xor
xlat
cmp
test
out
or
inc
addr16
loope
adc
dec
mov
pop
orl
clc
movsb
adc
in
cmp
xor
jb
movsl
std
popf
lock
insb
out
pop
insb
and
jg
sub
xchg
rorl
jbe
dec
mov
adc
in
mov
out
xchg
jb
xchg
popa
xor
inc
jnp
jo
loopne
push
shrl
push
aad
outsl
mov
fmuls
jae,pt
orb
imul
jmp
and
mov
enter
fcomip
test
jns
fsubp
add
into
ret
in
addb
jbe
std
dec
ret
xchg
mov
ljmp
push
mov
sti
sub
stos
add
add
shr
mov
pop
lods
test
mov
stc
lea
add
push
sti
fmull
xchg
mov
sub
mov
inc
incl
pop
pop
femms
sbb
cmpsl
jne
je
sahf
and
test
cmp
into
or
lret
jae
cmp
les
iret
pop
out
int
hlt
xchg
pusha
mov
push
cmp
jp
adc
and
stc
sub
cmp
push
cmp
lret
filds
aaa
and
or
inc
jmp
adc
sub
push
push
xor
dec
and
cmp
outsb
icebp
call
or
nop
subb
fcomps
pop
clc
pushf
movsb
sub
pushf
push
lret
roll
inc
push
fs
inc
setno
aas
adcb
adc
test
cmpsl
dec
pushf
mov
or
xchg
add
pusha
xorb
ljmp
xchg
xor
add
inc
outsl
jb
push
inc
jne
pop
push
or
je
mov
and
ljmp
test
test
jmp
rorb
sub
pop
and
add
xchg
call
sub
push
jno
hlt
xor
mov
pop
int
cmpsl
push
pop
sub
and
jo
cmp
icebp
xchg
xchg
ljmp
adc
fst
lret
lea
xor
outsb
arpl
nop
cmpsl
faddl
int3
or
clc
sub
mov
mov
enter
shrb
add
fists
cmpb
and
inc
push
sbb
sbb
inc
jecxz
pop
jns
xor
push
push
mov
add
aam
add
popa
outsb
pop
push
call
pop
add
mov
jp
lea
sbb
lret
or
stos
cld
and
cli
push
or
repz
loope
dec
cmp
arpl
cld
mov
jns
sbb
xor
pop
loope
jnp
mov
inc
mov
clc
imul
pop
rolb
jmp
test
je
gs
add
xor
mov
shrl
xor
xchg
mov
or
mov
cmp
pusha
lock
lahf
iret
cmp
loope
adc
push
test
ja
dec
jnp
mov
imul
add
adc
adc
mov
popa
inc
jl
insb
out
xchg
xchg
add
lods
movsb
pop
js
cmp
and
mov
mov
pop
xor
push
dec
fdiv
push
or
mov
xchg
lcall
mov
jbe
jb
rcrb
and
push
sub
pop
fstl
in
jecxz,pn
in
and
or
mov
stos
repz
mov
js
push
add
or
mov
xor
decl
mov
lds
clc
call
std
dec
cld
je
aaa
jne
sti
and
inc
dec
aam
xor
outsl
test
push
ret
aas
js
push
popa
mov
leave
hlt
xchg
add
or
xchg
cmp
js
mov
aad
cwtl
or
mov
push
nop
fldt
dec
pop
repnz
imul
or
and
mov
xlat
das
add
loopne
xor
clc
in
shr
icebp
or
out
fistl
add
loop
mov
mov
lcall
hlt
shll
sbb
sbb
aaa
sbb
dec
or
jo
clc
sbb
sbb
loopne
add
fistl
aam
test
jne
xor
lock
push
add
pop
pop
dec
jge
jae
and
and
fidivl
jp
fwait
sbb
mov
mov
cld
jbe
test
inc
sub
jp
mov
fld
flds
or
mov
mov
push
jae
cmp
add
or
daa
lds
cli
repz
pop
aaa
adc
fcoml
cld
adc
hlt
orl
mov
loopne
mov
and
jbe
ja,pt
push
das
sub
mov
fsubs
or
call
arpl
popa
add
inc
jno
jl
push
pop
jmp
push
mov
insb
mov
insl
mov
sbb
xor
je
adc
not
jg
scas
lods
je
addr16
inc
and
imul
dec
fcomps
mov
add
shr
ret
aas
jnp
adc
cmp
jg
fwait
in
adcl
jmp
sub
imul
xchg
adc
xchg
dec
insb
cmp
out
in
shl
rorl
outsb
lods
mov
sbb
lods
imul
push
pop
icebp
dec
dec
mov
dec
add
lods
repnz
pusha
lea
fdivrl
fxch
xor
shll
ret
lods
inc
dec
and
sub
scas
jg
xchg
jmp
idivl
dec
add
test
insl
cld
stos
lods
jno
andl
enter
int
push
aad
xlat
cmp
sbb
xchg
adc
dec
orb
sbb
add
addb
js
rorb
aas
mov
sbb
adc
push
aam
pop
mov
ret
dec
jmp
push
xchg
jmp
xchg
xchg
inc
cld
add
call
add
dec
shlb
mov
sbb
or
add
shrb
mov
out
xor
arpl
pop
sub
mov
adc
jmp
cs
sbb
loop
or
or
loopne
mov
or
fmul
add
cmp
adc
jbe
jecxz
add
xchg
or
jl
js
mov
shl
inc
sti
lock
cmp
or
mov
ficomps
mov
aam
mov
add
jb
pop
fs
jge
rcll
ret
clc
out
lea
cmp
leave
push
loopne
loop
sahf
add
adc
imul
loop
outsl
lahf
push
add
and
adc
sbb
les
jecxz
ficoms
xchg
xor
orb
adc
push
mov
les
sub
je
test
pusha
sbb
jecxz
or
mov
dec
outsb
mov
sbb
sub
enter
mov
imul
shrb
or
sub
call
add
rcrl
and
scas
add
inc
and
rorl
jl
and
clc
mov
jg
jmp
mov
pop
push
dec
and
cwtl
jl
daa
jbe
sbb
and
addb
icebp
dec
leave
lock
in
fs
cli
and
adc
into
sbb
mov
mov
dec
jge
cmp
inc
fs
adc
sub
dec
sub
or
xor
out
jge
jg,pt
fidivrl
stos
or
cmp
mov
xchg
cmovo
outsl
rorb
call
sbb
push
call
cmpsl
xchg
add
xorb
mov
or
aaa
movl
test
mov
and
dec
out
dec
inc
addb
mov
insl
fcomps
jg
and
sbb
das
and
and
xchg
inc
add
sbb
sarl
sahf
push
jge
cmp
fdivl
push
fmuls
cmp
or
in
dec
cmp
sbb
xlat
xchg
sub
add
js
xor
jecxz
rol
add
cmpsb
pushl
push
jo
lcall
movzbl
idiv
or
xchg
lea
fsubl
insb
out
sub
inc
in
stos
jnp
add
scas
cli
enter
fwait
lock
add
mov
adcb
inc
clc
push
ja
rorb
and
add
add
fdivs
push
out
cmc
or
jle
cmp
fimuls
nop
lods
jp
xchg
inc
clc
hlt
xor
mov
stos
mov
xlat
pushl
cmp
cmpsb
bound
mov
loope
ret
xor
jo
pusha
les
and
add
and
in
cli
xor
add
and
in
stos
lahf
ret
lahf
and
or
scas
lea
into
shr
dec
jo
test
lock
loopne
bound
mov
or
into
pusha
icebp
or
mov
js
leave
or
shrl
cltd
rolb
mov
rorb
xor
push
mov
mov
push
cltd
ja
icebp
fbstp
clc
dec
xchg
xchg
jge
loop
xchg
sub
leave
jb
add
es
nop
add
xchg
add
adc
push
lods
clc
rcll
dec
iret
push
xlat
sub
insb
cmp
xor
xchg
adc
push
addb
stos
aam
add
test
dec
cmp
call
inc
mov
adc
pop
sbb
dec
aaa
push
push
adc
cmpsb
dec
mov
or
pop
repz
jb
loope
mov
and
adc
repnz
add
icebp
in
pop
ficompl
inc
flds
adc
and
adc
cmc
fldenv
ss
ficomps
and
fiaddl
andb
call
lret
adc
dec
mov
insl
inc
pop
mov
jns
adc
sub
sar
sub
sub
xor
sbb
pop
pusha
cmp
clc
and
outsb
mov
jbe
dec
test
scas
push
push
imul
aas
jo
in
pop
arpl
inc
and
fadd
push
imul
scas
and
mov
xor
dec
sahf
add
sbb
fsubs
adc
loopne
lods
sbb
pusha
jns
loopne
or
or
inc
push
lock
xchg
cs
add
sbb
in
and
or
loopne
clc
lret
add
in
sub
xchg
fnstcw
mov
pop
inc
and
xchg
js
push
sbb
fcmovbe
fcmovnu
xchg
adc
ljmp
xchg
out
add
test
dec
jl
xor
in
clc
push
scas
xchg
cs
call
cli
int
push
cmp
add
sub
sub
loopne
push
push
in
cmp
out
cmpsb
mull
rorb
iret
into
fisubl
addr16
mov
add
add
jmp
jb
mov
push
repnz
sub
sbb
in
leave
sub
outsl
add
cld
out
xchg
sub
xchg
je
daa
pop
les
push
pop
shr
push
ss
xchg
mov
xor
dec
dec
mov
shl
sbb
dec
adc
cmp
add
mov
pop
push
in
les
leave
add
and
cmc
pop
addl
loop
add
and
nop
add
inc
sub
cmp
sub
loopne
cmpsl
dec
sbb
loop
les
push
cmpsb
notl
rolb
mov
lea
inc
add
popa
fstps
mov
fcmovnu
es
popf
arpl
and
or
adc
sbb
sub
jmp
enter
loopne
add
xor
iret
xor
mov
cmpl
dec
fimuls
jnp
test
scas
lods
adc
jno
clc
dec
adc
xlat
mov
movsl
or
add
jmp
xchg
or
aas
push
scas
jbe
faddl
ljmp
nop
lret
fiadds
bound
add
mov
cmpb
add
push
adc
sti
cmp
mov
fidivs
test
outsb
adc
std
and
std
sbb
jb
addl
jne
ret
dec
icebp
fdiv
pop
inc
dec
in
or
add
or
rorb
xor
cs
add
jmp
push
js
test
add
cmp
or
cmpsl
or
jne
cmp
sbb
insb
dec
ljmp
push
cld
jmp
bound
pushl
decl
dec
notl
fidivrs
les
outsl
mov
out
aas
xchg
inc
lea
or
cmp
or
roll
divb
xor
pop
inc
add
fdivrl
ss
jb
push
enter
sbb
jp
nop
push
divl
out
xchg
cli
loopne
mov
push
or
orb
pop
and
testl
pop
push
cli
adc
outsb
pusha
stos
xchg
sarl
movsb
adc
jmp
mov
pop
xor
or
addr16
fsubrl
cld
call
stc
inc
adc
cmp
icebp
out
or
push
or
cmp
int3
and
or
dec
jno
insb
fstpt
lret
jg
inc
nop
push
jg
cmc
mov
inc
push
add
mov
and
addr16
jne
mov
out
cmp
xchg
fadds
rorl
fidivs
pcmpgtw
ret
and
sti
jmp
mov
inc
test
sbb
pop
add
xor
pushf
les
jo
mov
adc
sbb
mov
jb
das
test
out
mov
fwait
mov
je
sbb
adc
int3
jg
xor
sub
xorl
mov
jle
and
jae
lock
xor
loope
sub
push
jmp
mov
int3
fimull
sub
mov
mov
push
rorl
xlat
pop
shl
jb
out
sarb
push
test
inc
out
pop
mov
rol
sahf
sti
mov
andl
dec
das
fdivs
call
sbb
mov
cld
mov
pop
cmp
scas
movb
dec
ja
mov
loope
pop
sbb
sbb
pop
jno
xchg
rcrb
inc
gs
jo
loopne
push
fwait
mov
test
jecxz
pop
pop
add
xor
movsl
fwait
fs
add
pop
shrl
xchg
ret
cs
ret
fildll
or
add
rol
shlb
sbb
das
mov
pushf
adcl
loope
lods
pop
cmpsb
int3
push
test
pushf
loopne
xor
cmpb
data16
pop
subl
pushf
lahf
mov
in
pop
popa
jl
mov
pushf
xorl
sub
cmc
inc
xor
add
stos
loopne
mov
aad
jnp
decl
pop
fbld
xor
and
test
jmp
das
jmp
aam
xchg
mov
fldenv
insl
movsl
in
fbld
rolb
dec
ret
shrb
negb
dec
or
cld
mov
mov
pop
fwait
in
xchg
rolb
and
aaa
aad
mov
ror
pusha
rolb
out
mov
inc
and
lahf
fwait
loop
pmaddwd
dec
scas
fsubp
cli
test
push
dec
cld
inc
mov
mov
or
das
sahf
and
mov
sbb
or
push
ret
add
shlb
xchg
jno
pop
xchg
arpl
add
scas
sub
in
sub
js
scas
cld
jne
ds
rorb
and
negb
dec
rcrl
mov
shll
cli
cmp
adc
mov
xor
inc
mov
es
sarb
mov
dec
popa
in
lret
push
shr
ret
lret
enter
pusha
ret
adc
inc
jo
pop
xchg
push
jb
xchg
add
inc
lock
fdivr
and
dec
loopne
sub
enter
xor
loopne
imul
hlt
call
sub
xlat
rclb
xor
mov
add
xchg
or
out
xlat
pop
aam
add
leave
shlb
add
xor
jno
shll
xor
jmp
movsb
sbb
aas
popa
mov
dec
pushl
push
push
mov
add
pushf
add
push
das
sub
loope
xchg
and
jo
ljmp
int3
scas
or
push
or
mov
test
imul
ds
enter
mov
lahf
fiadds
cmp
popa
nop
xchg
add
idivl
rcll
pop
jl
jmp
sbb
push
fidivrl
or
mov
mov
ret
pop
insb
test
rorl
add
clc
jnp
jg
pop
pop
inc
not
dec
neg
xor
push
sbbb
xchg
sub
inc
fldl
dec
mov
sbb
inc
sbb
xchg
pop
repz
shlb
ss
or
push
cmp
mov
fwait
cwtl
out
xor
aam
lods
add
jo
push
push
or
fmuls
orb
mov
cmpsb
pop
pop
lcall
cmp
or
jnp
xor
sbb
mov
jp
test
lods
add
lods
insb
scas
insl
sar
loope
push
popl
jmp
mov
and
sbb
push
and
push
aaa
pushf
xchg
pusha
jno
hlt
push
in
outsl
ret
mov
sti
leave
adc
cmp
and
stos
js
daa
adc
mov
out
test
xor
hlt
mov
fnstenv
add
dec
int
pop
cmp
rcrb
jl
push
shlb
mov
add
insl
or
cmpsb
rcrl
movsb
addr16
mov
roll
std
and
inc
jno
xlat
js
and
ds
sub
ljmp
cmpsl
lcall
jns
pop
xchg
mov
fsubs
lock
gs
add
xchg
push
test
adc
insb
sbb
jo
cmpl
or
or
xor
arpl
addr16
mov
mov
hlt
iret
clc
popf
adc
test
cmp
xor
add
cld
fsubs
cli
jns
loopne
xor
cmpsb
cmpsl
push
cmp
loop
insl
bound
or
jnp
push
insb
mov
mov
or
add
sarb
or
inc
rol
mov
jle
sub
inc
xchg
inc
mov
pop
hlt
mov
xchg
jmp
cwtl
adc
mov
lock
or
ljmp
data16
mov
in
pop
sub
cmp
std
or
cmp
sbb
mov
dec
std
add
adc
and
adc
xorb
stos
inc
push
adc
sub
orb
imul
cli
add
mov
popa
pop
add
call
mov
icebp
in
sbb
dec
adc
aam
lds
test
jns
sub
inc
movsl
popa
add
xchg
loop
shrl
adc
pop
das
pop
test
add
pop
add
rcl
imul
ja
dec
inc
dec
xchg
dec
mov
mov
jmp
pop
ljmp
fildl
and
sub
xor
call
lods
add
xor
add
jmp
cmp
push
xor
sub
sub
out
xor
or
loopne
xor
in
adc
lods
inc
rcrb
cli
dec
jge
je
xchg
sbbb
push
shrb
add
add
popl
insb
cltd
mull
sbb
inc
add
shl
lods
notb
mov
sub
push
push
cmp
fs
negb
dec
or
sub
int3
mov
fsubrp
out
mov
cli
inc
mov
cli
or
dec
outsl
dec
add
xor
push
dec
rcll
test
xchg
add
xor
inc
jmp
ret
mov
pop
mov
adc
mov
dec
loopne
fs
fisubrl
dec
push
rolb
sub
and
add
pop
icebp
les
stos
sbb
mov
test
dec
popf
add
in
xor
pop
push
sbb
and
nop
jo
sarb
add
stc
xor
pop
mov
and
add
or
cmpsl
xchg
cmp
xlat
outsb
int3
add
ljmp
in
sbb
aam
xchg
fsub
pop
or
cld
shll
cld
out
add
adc
andl
rcl
data16
js
jp
inc
aam
test
popa
sbb
test
or
or
add
test
popa
aam
cli
pop
stc
out
movsl
inc
aaa
fimull
pop
pop
pop
loope
mov
fs
xchg
or
push
mov
ror
cmp
dec
pop
push
pop
dec
jmp
sbb
js
inc
mov
fisttps
jp
inc
mov
stos
or
test
pop
fiaddl
xchg
or
or
adc
jmp
adc
push
js
xor
popa
loopne
subl
mov
aam
aam
lock
outsl
mov
js
adc
lds
pop
pop
or
pop
xchg
int3
mov
add
jecxz
call
push
repnz
adc
or
xchg
mov
cmp
and
leave
and
pop
cmc
mov
or
lcall
lret
push
dec
imul
insb
stc
jnp
add
movsl
dec
add
leave
rolb
jmp
xchg
bound
ss
and
cmpsl
das
icebp
in
sbb
or
mov
ret
js
jbe
dec
ffreep
and
shlb
les
add
jb
dec
in
imul
add
imul
pop
movsb
add
sahf
xchg
adc
push
dec
and
cmpsb
out
add
loope
pop
xchg
mov
das
sbb
call
and
pusha
jg
rorl
inc
cmp
jle
xchg
mov
jg
popf
out
inc
sub
jno
jecxz
lret
out
add
dec
jbe
xor
enter
or
inc
outsb
enter
or
jge
testl
jg
jno
popa
nop
pop
enter
push
loopne
xor
xor
movsl
mov
iret
cmpsb
js
add
sub
daa
loop
mov
mov
cmp
in
cmp
mov
ljmp
das
xchg
shlb
daa
push
dec
roll
cmc
loop
test
mov
sbb
es
loope
push
movsl
hlt
ret
jmp
in
jecxz
fcomps
cmp
test
loop
push
dec
fcoms
pop
mov
adc
enter
and
or
cmp
xor
xchg
inc
cmp
lahf
sbb
sbb
shll
mov
inc
add
shlb
jmp
sbb
add
int
xchg
lock
mov
pop
or
push
mov
lea
cmpsl
mov
loopne
movl
ret
test
icebp
dec
cs
decl
cmp
jg
xor
shll
add
inc
sahf
fstps
jne
add
inc
xchg
jle
rclb
inc
xchg
sub
push
add
push
mov
add
in
add
add
push
lahf
dec
xorl
cmp
inc
fcmovu
pop
pop
jmp
pop
sbb
lods
mov
leave
mov
insl
adc
and
add
mov
push
mov
out
add
and
mov
mov
push
jge
mov
jns
jmp
stc
sub
repnz
repz
loop
sub
pop
pushl
adc
or
test
jbe
pop
int
repz
jmp
out
test
push
das
cmpsb
out
fildll
dec
inc
adc
pop
sbb
fcompl
add
int3
jo
pop
shrb
xchg
xor
mov
or
inc
rolb
mov
inc
inc
jnp
cmp
out
pop
sti
pop
jne
movsl
jmp
xchg
nop
sbb
dec
shll
cmp
sahf
inc
mov
add
cltd
cmp
mov
pop
lock
push
push
das
cmpsl
lret
jne
fnstcw
dec
and
push
repz
loopne
iret
sbb
shlb
sub
and
repnz
cmpsl
add
jne
std
daa
ljmp
and
loop
fidivrs
es
insb
inc
movsb
insl
stos
jo
popa
cmp
pop
xchg
pop
jmp
pop
mov
jb
rclb
xchg
mov
xchg
pop
pop
cmp
push
inc
xchg
xor
push
xchg
jp
inc
dec
sub
push
or
fcmovu
loopne
loopew
jmp
pop
aam
adc
or
adc
or
test
aas
xchg
fdivp
mov
jne
dec
xlat
pusha
fisubrl
push
cmp
add
sbb
outsb
push
enter
adc
xor
dec
fisubrs
push
ret
push
sbb
mov
xor
clc
dec
repz
cmp
leave
jns
test
push
cmpsl
sbb
add
fisttps
and
add
pop
push
fistpll
sbb
mov
and
pop
and
test
mov
cmpb
push
movsldup
inc
pop
or
adc
jg
lcall
nop
mov
arpl
cmp
inc
cmp
adc
add
ja
mov
xor
dec
repz
add
push
mov
dec
pop
pop
add
add
adc
push
fildl
notb
lock
push
push
int
ja
inc
jno
xor
loopne
push
push
or
mov
lds
cmp
pop
pop
fistpll
cmp
push
pop
add
jo
and
and
sbb
and
into
enter
or
pop
sub
hlt
adc
test
xlat
shrb
daa
and
jmp
filds
aas
jns
mov
roll
out
add
and
shll
jne
and
pop
negl
shll
call
and
cmp
adc
jae
pop
loop
shll
jno
jecxz
lahf
jo
inc
xchg
fisubl
push
pop
push
das
sbb
push
add
cmp
in
cmc
mov
push
orb
lods
sarl
dec
adc
nop
fiaddl
call
inc
in
faddl
adc
push
fcoml
sbbl
dec
pop
out
test
jne
ret
xor
add
lock
sarb
mov
scas
lock
and
leave
sub
adc
popf
jno
sbb
das
icebp
hlt
lret
pop
pop
add
or
mov
out
add
loopne
jp
or
sub
xchg
sarb
std
loop
pop
sbb
into
cmp
jle
shlb
lea
aas
inc
test
sub
mov
xchg
add
or
jl
fsubrl
adc
dec
adc
gs
pop
rolb
les
or
hlt
add
and
xor
xchg
call
cmp
sti
or
cmp
clc
dec
lock
jp
or
fiaddl
js
sub
inc
leave
std
cmp
cltd
orl
sahf
sbb
fcmovnu
rorb
jne
jnp
adc
sbb
jp
pusha
add
shrb
stos
sbb
or
push
xor
inc
shll
add
mov
fs
test
push
cmp
mov
jne
xchg
fimull
xchg
call
push
push
mov
pop
xchg
push
mov
ja
and
out
mov
cmp
call
push
add
inc
es
add
dec
add
movsb
lock
dec
test
sub
shrb
mov
dec
cmp
xor
mov
ret
xor
in
xor
sbb
lret
inc
inc
addb
xchg
jo
xor
jp
add
outsb
or
and
mov
xlat
test
cld
xor
popa
sub
and
adc
popa
sub
mov
jmp
pop
push
pop
sbb
mov
das
clc
ljmp
add
dec
and
lock
movsl
add
addb
mov
mov
movsb
jg
push
sbb
push
push
pop
push
or
jl
fdivrl
je
call
sub
jmp
xor
fwait
push
adc
lods
test
and
dec
andb
js
cs
mov
and
cs
push
xchg
push
push
push
lea
mov
repz
add
and
inc
xor
push
into
cmp
and
xchg
insb
xchg
mov
mov
pop
dec
xchg
addb
and
lret
daa
subl
adc
loop
punpcklwd
adc
cmp
mov
pop
jle
shlb
out
or
or
inc
jg
fs
ja
push
push
fcmovb
dec
inc
mov
clc
sub
ret
pop
scas
mov
inc
jmp
gs
pusha
cmpsl
xchg
pop
decb
add
mov
mov
orb
dec
js
mov
xchg
aam
dec
mov
sbb
jmp
std
mov
fisttps
xlat
jmp
sub
test
dec
in
js
daa
xlat
xor
nop
bound
ja
outsl
inc
add
sbb
dec
or
push
and
test
jbe
xlat
or
out
movb
mov
mov
test
cltd
inc
sub
add
mov
ret
pop
repnz
call
adc
sbb
outsl
add
push
call
dec
inc
adc
adc
decl
mov
out
inc
xor
push
push
sbb
mov
adc
add
in
push
push
push
xchg
scas
or
xor
cmc
jb
cwtl
pop
push
inc
add
pop
push
test
sbb
mov
gs
or
push
movsb
or
and
pop
lret
inc
loop
dec
insb
and
je
pop
sahf
add
add
aam
adc
inc
fnstcw
enter
mov
xor
sbbb
sbbl
rorl
clc
mov
js
xcrypt-ofb
cmpsl
imul
sbb
add
mov
mov
movsb
fwait
push
orl
cld
dec
pop
addb
rcll
and
aam
sbb
addl
pop
fbld
inc
daa
aaa
push
imul
push
sub
movsl
add
out
fcomps
mov
and
popf
xor
add
nop
in
mov
mov
lods
sbb
lret
dec
rorl
popa
sbb
test
ffreep
or
in
ljmp
jns
lret
ret
adc
addr16
je
xchg
push
dec
pusha
scas
mov
movsb
out
mov
mov
dec
add
insl
or
xor
sbb
sbb
sbb
and
nop
add
inc
cmpsb
cmp
out
pushf
cmp
or
jns
popf
sub
xchg
dec
mov
fwait
mov
clc
cli
pop
pop
hlt
inc
imul
add
or
sub
ret
pop
je
out
les
jae
add
ficomps
shrl
lods
cli
pop
xor
ljmp
xchg
xchg
loope
das
dec
lret
inc
jo
dec
sti
cld
and
add
push
mov
sti
jge
push
and
sbb
and
or
and
popl
jo
std
dec
repnz
lock
or
sub
jmp
mull
adc
enter
add
popa
cmp
xor
es
jmp
lahf
cs
inc
sub
cmp
mov
adc
dec
ret
sub
add
rcrb
clc
rcrl
pop
sub
pop
inc
popa
mov
imul
xlat
and
dec
je
ljmp
call
loopne
add
dec
clc
rolb
insb
pmuludq
or
xchg
lock
sub
adcb
xor
stos
aas
add
fwait
add
loopne
dec
pop
fldenv
movsl
xchg
jae
clc
xor
mov
inc
xor
and
mov
xorb
push
add
mov
call
inc
test
mov
pop
push
xor
lock
mov
mov
loope
mov
and
mov
mov
inc
add
pop
or
shr
push
xorl
dec
jmp
or
add
push
and
mov
pop
hlt
addl
pop
cmp
pop
and
mov
or
sub
push
jb
frstor
and
int
test
pusha
pop
add
repnz
jecxz
pop
enter
jl
rorb
push
subb
xchg
test
add
shrb
mov
mov
cmp
and
mov
push
dec
shlb
xchg
imul
add
or
pop
aas
loopne
imul
cmp
and
jae
jo
push
jp
iret
sbbb
out
cld
stc
in
lea
add
push
jo
push
int3
add
or
loope
addr16
add
pusha
or
adc
imul
jne
mov
adc
push
push
xor
decb
ret
push
sbb
jo
mov
shl
inc
or
inc
sarb
out
sbb
xchg
jns
sbb
out
cli
addl
test
mov
lods
xor
push
mov
cmp
lahf
andb
mov
xchg
push
or
fs
insl
pop
mov
int3
xor
jp
inc
in
xchg
jmp
add
out
test
aad
xor
jns
nop
add
orb
sbb
or
in
or
pop
movsb
lds
push
jmp
cmp
adc
pop
iret
in
mov
xchg
ss
push
cmp
mov
mov
mov
outsb
jmp
sbb
jmp
insb
popa
mov
xchg
mov
aad
pusha
push
int3
shrl
cmpsb
xchg
push
push
jae
adc
aas
inc
shr
jo
in
mov
push
maskmovq
mov
xor
rolb
pop
lret
and
mov
adc
cli
sbb
jge
and
cmpsl
adc
int3
xchg
xchg
scas
mov
push
or
cmpsl
cmp
jnp
sbb
push
push
dec
inc
jg
sahf
jno
movsb
mov
xchg
add
xor
and
sbb
sub
test
mov
push
mov
incl
ret
les
sub
popf
adc
pop
lea
inc
mov
adc
test
enter
ja
pop
arpl
clc
movsb
lcall
jecxz
xchg
xchg
inc
outsb
jae
sti
fnsave
xchg
add
push
shll
sbb
in
jne
loope
pop
dec
adc
push
scas
and
cwtl
adc
mov
add
ret
inc
mov
cmp
inc
imul
xchg
inc
in
ss
mov
dec
add
scas
xor
cmp
inc
dec
adc
or
mov
test
aas
mov
loopne
outsl
cmp
add
and
or
negl
sahf
fwait
xchg
sbb
push
mov
xor
hlt
scas
test
dec
shrl
fstp
insb
sub
test
sbb
cmc
inc
test
mov
and
enter
hlt
mov
aam
add
loopne
dec
mov
shl
push
jb
dec
adc
rorb
int3
pop
xchg
movsl
ficompl
or
ljmp
ret
or
pop
inc
mov
or
cld
mov
ret
sahf
fidivrl
sbb
data16
mov
sbb
or
dec
mov
mov
aad
arpl
jecxz
sbb
imul
mov
lahf
jbe
dec
loope
mov
call
movsl
mov
pop
stos
add
std
jecxz
pushf
and
mull
enter
out
outsb
or
push
test
push
orb
out
or
push
lds
and
sub
xor
jne
pusha
and
add
xchg
adc
add
jg
dec
xor
jnp
leave
cltd
sub
xchg
rcll
addr16
aam
fbld
icebp
mov
hlt
or
dec
cltd
add
rcr
daa
pop
sub
les
clc
sbb
xor
cmpsl
push
andl
sub
out
jl
mov
jno
adcl
mov
inc
pop
pop
lret
adc
loopne
sub
imul
adc
loopne
in
test
or
adc
sbb
icebp
push
dec
jmp
jne
fsin
xor
sti
negl
mov
xchg
out
xor
call
xchg
jecxz
sbb
cltd
or
loopne
rol
dec
repnz
test
retw
sbb
fsubs
or
mov
ja
mov
dec
outsb
push
aam
sti
cld
rorl
mov
jnp
rclb
test
mov
test
mov
mov
mov
scas
aaa
mov
movsl
adcl
sar
xchg
sub
or
or
cltd
lods
sahf
movsl
pop
mov
psubb
dec
add
xchg
mov
mov
adc
and
or
bound
push
add
shrb
lods
andl
push
ficompl
adc
data16
fsubr
hlt
test
loope
or
aad
add
mov
adc
add
inc
mov
jle
fcmovu
dec
fadds
xchg
mov
rcrl
inc
lcall
aam
lahf
sbb
pop
add
imul
dec
add
jp
xchg
test
lods
and
and
mov
cltd
les
dec
in
add
cmp
lods
and
in
sub
adc
loop
xchg
sub
inc
add
dec
cmp
xor
add
loop
push
ret
mov
ljmp
pop
cmp
add
fsubrs
test
xchg
cmp
pop
add
jecxz
push
jmp
outsl
and
nop
inc
test
jg
sarb
sbb
push
add
mov
out
inc
sbb
decb
push
addr16
pop
dec
sub
cmp
or
subb
and
sub
and
xor
xchg
mov
test
subb
add
js
test
jbe
shlb
inc
pusha
ljmp
cltd
push
cmpsb
push
rol
xor
aad
sbb
jmp
scas
addl
sub
aaa
or
repnz
push
push
mov
pop
ret
xor
add
mov
or
and
sbbl
or
nop
add
test
pop
lea
dec
ljmp
adc
ja
js
push
in
adc
mov
jge
add
aaa
out
or
push
cmc
inc
add
or
push
inc
mov
sbb
fadds
daa
add
sbb
shr
fnsave
cmp
pop
push
jo
or
sbb
test
shll
add
xchg
pop
loop
lret
push
pop
pop
or
movsb
aaa
adc
jmp
call
mov
jmp
in
shlb
dec
movsl
mov
popf
dec
xor
mov
in
or
xchg
cmp
imul
test
imulb
aaa
pop
jecxz
ret
and
mov
xchg
push
jb
xor
lock
pusha
je
xchg
xor
sbb
lea
mov
clc
push
push
mov
add
lret
mov
jo
and
lock
lods
sahf
sbb
jecxz
inc
shll
mov
iret
out
lock
loope
in
push
pusha
sbb
bound
int3
das
shr
adc
gs
jno
dec
movsl
cmpb
jne
rolb
cli
xchg
sahf
rclb
mov
aad
stos
imul
loope
aad
pop
pop
add
inc
loopne
jl
addl
movsb
stos
pop
stos
mov
test
inc
dec
pushf
pop
adc
or
ja
xchg
lock
xor
orb
dec
push
mov
dec
xchg
and
ljmp
shlb
pusha
pop
ss
mov
mov
imul
les
add
mov
mov
out
stos
lock
les
roll
add
fadds
cmp
jmp
xor
inc
fsubl
fildll
mov
xchg
xchg
xor
sub
lods
sbb
insb
adcb
dec
das
adc
pop
mov
fs
push
jge
cmp
inc
mov
inc
and
daa
xor
imul
push
lcall
inc
xor
mov
inc
add
cmpb
pushf
out
cmp
sbb
dec
add
xchg
sub
inc
or
fldcw
loop
and
cmpsl
bound
rolb
in
inc
dec
mov
or
sbb
and
add
pop
push
mov
rcrl
and
movsl
loope
mov
xchg
xchg
cmpl
add
pop
mov
pop
out
mov
das
cmp
shll
aas
add
add
mov
cmc
add
mov
adc
ucomiss
cmpsb
arpl
xchg
sti
inc
addr16
or
jle
rolb
add
movsb
outsl
mov
xchg
sbb
test
in
xor
je
subl
add
jae
adc
fnstenv
mov
leave
xorl
shr
sbb
sbb
add
movsl
push
or
shlb
pop
push
or
push
and
mov
lret
and
lods
mov
or
jbe
test
cmp
hlt
in
adc
les
call
ds
or
push
push
push
add
call
cmp
pushf
add
and
mov
push
movb
add
jg
inc
xorl
mov
jo
xchg
or
call
add
movsb
push
adc
out
and
xchg
push
rorl
popf
inc
stos
popa
add
pop
ljmp
adc
adc
pop
loop
sbb
jbe
cmp
or
testl
add
fidivrl
mov
test
inc
pop
or
cmp
or
jecxz
mov
adc
pop
pop
dec
call
jle
in
adc
mov
std
jg
or
aam
addb
out
cwtl
stc
hlt
sbb
push
lcall
sub
add
add
iret
or
sbb
sub
mov
xor
cmp
cmpsl
fists
mov
mov
aas
sbb
int
je
sti
fwait
mov
sbb
mov
inc
hlt
movsl
and
xor
sub
rcl
mov
push
call
cltd
mov
icebp
fiadds
or
call
mov
mov
sub
popf
loopne
add
repnz
sahf
and
mov
lahf
call
jg
dec
dec
pushf
stc
jmp
add
flds
add
rorb
out
fdivr
push
adc
xor
and
out
jno
mov
fldl
loopne
stc
mov
popf
mov
pushl
shlb
ficoml
js
pop
fiaddl
int3
ds
aaa
sbb
ljmp
or
sbb
push
xor
cmp
or
test
jl
add
sbb
xor
mov
shlb
rorb
enter
nop
or
mov
in
inc
mov
xchg
int3
and
jle
test
and
adcl
les
mov
and
push
ds
jbe
pop
cmpsl
je
and
add
inc
push
add
xchg
pop
insl
cmp
mov
int3
inc
cld
andb
or
mov
sbb
adc
ret
ret
push
mov
jmp
call
xor
adc
fistl
jg
xchg
push
je
es
dec
sbb
cmp
inc
testl
cmp
add
jmp
cmp
lock
jnp
cld
test
and
or
ret
push
push
add
jbe
fs
shr
push
xor
lods
xchg
les
lock
xlat
dec
add
loop
js
push
or
push
jae
mov
repnz
popf
outsb
ret
mov
adc
mov
test
mov
push
aas
add
jo
mov
sbb
in
and
les
xor
js
cmp
sub
jo
incl
sahf
cli
push
add
popa
lret
mov
and
ret
scas
icebp
mov
ficoms
or
and
mov
mov
add
mov
test
fiadds
adc
push
pop
mov
rclb
and
mov
pop
pop
mov
test
inc
rorb
rorb
mov
cli
out
xor
shlb
jbe
addb
dec
sbb
sbb
and
into
test
mov
xor
dec
add
jg
fcoms
rorl
sub
cld
leave
add
push
loopne
adc
mov
jecxz
icebp
cli
daa
leave
dec
cmp
dec
xorl
xchg
pop
test
mov
jecxz
push
mov
and
pop
out
adc
pop
mov
sti
in
scas
jnp
rolb
push
push
outsb
test
dec
js
lock
mov
loope
les
aad
cs
call
movsb
cs
hlt
sbb
mov
cmp
je
mov
pop
jne
pusha
jle
push
mov
inc
add
add
in
xor
jb
fucomp
outsl
insb
rorb
cmpsb
shlb
mov
fisttps
inc
pusha
rcl
push
push
in
ret
pop
jno
testb
pop
fmuls
xchg
aas
and
ret
cmp
pop
jp
mov
out
dec
andb
es
dec
lock
nop
jp
mov
mov
or
push
sbb
mov
data16
or
pop
pop
inc
arpl
cwtl
ret
test
and
mov
loopne
mov
fsts
mov
rorb
mov
inc
push
popf
push
cmpsl
adc
imul
inc
pusha
add
mov
or
iret
jo
jno
dec
sbb
cmp
cwtl
adc
mov
push
cli
jg
out
mov
jo
nop
mov
add
inc
xchg
push
pop
cli
mov
leave
cmp
and
orb
jge
pop
cmpb
jnp
test
rol
dec
popl
jp
nop
cmp
pop
xor
sbb
add
lock
fists
movsl
and
mov
enter
xchg
addl
mov
push
enter
sub
adc
or
lea
adc
movlps
in
in
outsl
aam
jo
repnz
mov
cmpsl
sbb
dec
test
js
cmp
addr16
and
xor
mov
out
mull
add
pop
add
test
aaa
mov
mov
xchg
aam
pusha
in
mov
push
mov
inc
cld
and
movsb
add
fcompl
inc
sub
ds
pop
adc
mov
xchg
push
jnp
mov
inc
add
pop
adc
lea
xor
ret
nop
mov
loope
lods
gs
sti
rolb
roll
loopne
mov
notb
popa
cwtl
mov
pop
or
ljmp
data16
cld
inc
push
popf
lea
mov
adc
and
inc
scas
cmp
push
sub
jno
arpl
clc
out
arpl
and
test
and
das
pusha
dec
test
clc
cmpsl
aam
xor
dec
xchg
shlb
xchg
add
inc
addb
push
pop
mov
mov
add
mov
pop
cwtl
jbe
hlt
cmp
notl
les
test
push
cmp
popa
addb
and
mov
jl
pop
cmc
das
pop
and
adc
inc
cmp
xor
and
adc
aaa
inc
lret
adc
cmp
incb
std
cmpsl
mov
xor
lods
xor
mov
loope
mov
or
inc
or
pop
mov
lahf
adc
inc
sbb
iret
lods
inc
call
adc
ds
lods
mov
cmpsl
pop
or
rolb
gs
test
adcb
int
call
mov
in
mov
les
and
pop
xor
std
sbb
add
dec
and
xor
lret
mov
pop
dec
mov
int
add
inc
jmp
xor
clc
adc
lret
adc
inc
rclb
js
cmp
pop
dec
neg
test
and
xor
pusha
sbb
xor
cmp
jne
sbb
inc
add
xchg
sub
add
add
and
jp
jno
icebp
inc
loopne
jo
and
int
dec
or
out
adc
adcb
sub
adc
jecxz
dec
shlb
mov
or
ljmp
pushf
out
es
call
or
dec
xor
rolb
xchg
cmp
in
mov
or
cmp
pop
pop
lret
sti
hlt
xor
faddl
inc
jo
jg
pusha
hlt
cmp
inc
add
adc
je
imul
or
or
mov
stc
roll
or
addb
int3
adc
loopne
xchg
or
test
push
mov
bswap
pop
push
dec
fcomps
mov
lds
pop
and
das
daa
aam
rcrb
jp
adc
aaa
adc
sbb
sbb
sbb
clc
or
xor
outsl
pushl
push
sub
xor
push
loope
rcr
jl
sbb
xchg
adc
lock
add
or
imul
mov
push
mov
or
loope
js
fists
mov
in
lock
xorl
ljmp
dec
andl
in
sbb
xor
dec
shrb
and
cltd
xchg
or
clc
ret
in
fucom
dec
mov
cwtl
data16
jl
pusha
in
jl
into
or
or
pop
sarb
pop
or
sub
xchg
hlt
add
xchg
adc
sub
lods
pop
dec
neg
cmp
adc
inc
sbb
push
insb
push
cmp
mov
jmp
or
or
pop
cmpsl
adcl
inc
pop
cmpsl
xor
out
in
pop
push
mov
mov
xchg
mov
inc
div
sahf
shl
jb
or
and
fdivs
movsb
fldenv
les
fmul
jae
outsb
mov
scas
dec
fcomi
or
subl
mov
fsub
xor
int3
les
outsl
xor
in
mov
sbb
jmp
mov
js
jne
push
jo
jp
gs
fmull
mov
cmp
outsb
iret
daa
dec
pusha
inc
stc
or
and
mov
sbb
rclb
gs
stos
loop
add
ret
shr
sbb
add
mov
or
xor
xor
rorb
insb
sbb
push
into
add
pop
push
ret
in
ror
add
jg
add
ret
cmpsb
repz
sbb
or
xchg
rol
xor
pusha
out
add
inc
addr16
jp
lock
movl
sub
outsb
mov
sub
inc
add
mov
cmc
push
outsb
stos
cmp
adc
rolb
cmpl
std
fists
inc
je
fdivr
dec
and
addr16
imul
xadd
test
jae
dec
and
xor
dec
fcoms
jmp
adc
cmp
add
fidivrs
int3
jb
cs
jmp
arpl
in
or
sar
lods
icebp
xchg
mov
je
xchg
sbb
ss
inc
cmpl
pop
das
sbb
addr16
ss
push
xchg
adc
icebp
leave
cmc
add
and
nop
and
add
and
jo
cmp
cmp
into
enter
and
and
int
js
mov
add
push
or
sub
stos
jl
js
std
mov
dec
repnz
xor
movl
add
mov
pop
sbb
adc
pusha
dec
pusha
add
aas
pop
mov
sbb
push
and
add
pop
sbb
xor
push
enter
movaps
push
faddl
or
pop
das
movl
fsubrl
je
pop
sbb
adc
in
sbb
inc
fcompl
andb
add
add
push
xor
jo
inc
lds
out
add
in
push
lods
cwtl
ficoms
loope
enter
test
inc
lahf
notb
and
into
pop
fwait
pusha
jge
jmp
lcall
je
hlt
xchg
and
adc
and
mov
rcll
fwait
xlat
add
bound
inc
arpl
cmp
and
and
gs
jle
fsts
fs
adc
mov
jmp
xor
cmpsb
xor
cmpsb
cmc
das
loopne
mov
ljmp
add
lret
dec
and
xchg
add
dec
sub
sub
xchg
and
add
xchg
pop
rorl
or
or
int3
mov
fisubs
adc
js
testb
or
cmp
incb
call
cmp
adc
xor
adcb
popl
sub
sar
jmp
sub
add
add
sub
imul
add
mov
mov
or
inc
mov
test
cmp
pop
xor
xchg
and
push
jge
call
xor
or
or
inc
add
das
xrelease
sub
mov
aaa
sbb
outsl
icebp
add
loopne
and
cmp
arpl
insl
popw
or
je
out
sub
add
test
or
imul
ficoml
xabort
and
in
scas
sti
stc
mov
xor
jmp
add
insb
cltd
loop
push
loop
jbe
sbb
jns
movsl
imull
cmp
popa
clc
ffree
mov
sub
dec
in
sbb
fisubrs
ds
into
decb
jno
mov
mov
pop
push
nop
inc
mov
aam
sub
xor
adc
mov
dec
out
adc
fistpl
add
cmp
sbb
adc
adc
in
movsb
or
push
flds
movsl
sub
daa
adc
sbb
dec
push
fbstp
es
push
jmp
or
call
cmpsl
ret
lret
icebp
fdivrl
push
sub
into
push
sub
push
pop
dec
arpl
addb
call
xlat
cli
ss
cmp
mov
mov
cmp
dec
in
cmp
aam
lods
and
je
adc
insl
pop
leave
push
mov
cmp
sarl
push
sub
mov
fstl
and
cmovne
decb
add
push
add
and
loop
xchg
insl
mov
bound
arpl
addb
hlt
jno
xor
aam
add
rclb
or
xor
rorl
mov
ret
cmp
imul
fistl
xlat
andb
push
fwait
or
push
test
loopne
test
dec
mov
sub
and
inc
xor
movsb
rcrl
stos
cld
push
mov
inc
popf
lods
das
cmp
cld
jp
shl
aam
imul
inc
fisttps
addl
xlat
push
xchg
fs
inc
les
test
lcall
in
push
fisubrs
xor
out
imulb
aam
xor
jmp
push
xchg
sbb
sub
push
push
lds
test
mov
sbb
hlt
xlat
shlb
sbb
stos
pop
xor
sub
movsb
mull
push
lods
xor
or
cwtl
cmp
mov
dec
adc
ja
xorl
dec
xor
cmp
adc
rcl
pushl
inc
dec
xor
jmp
push
cmp
jmp
push
add
fldt
sub
fists
adc
and
sbb
or
pop
ljmp
xor
lock
or
sbb
and
mov
out
or
mov
lcall
movsl
mov
pop
test
mov
xor
sub
pop
sbb
or
sbb
mov
rol
imul
or
mov
repnz
add
mov
add
adc
rclb
pusha
sub
push
xorl
sbbl
test
xorb
sub
xor
cmp
ret
stc
cmp
or
insl
sbb
clc
inc
sub
xor
add
sub
ljmp
add
jb
cmp
jo
sbb
idivb
inc
push
das
roll
loopne
pop
out
lods
je
pop
sbb
enter
call
inc
mov
sbb
sub
and
xorl
inc
xchg
dec
add
push
lret
or
dec
lahf
repz
nop
add
xchg
nop
daa
and
outsl
sbb
loop
inc
arpl
mov
orl
shlb
movsb
adc
push
jne
or
or
jecxz
mov
mov
dec
and
popf
push
and
sbb
adc
inc
mov
icebp
int3
inc
jmp
push
or
aad
sarl
dec
shl
or
and
call
dec
mov
adc
loopne
cld
inc
movl
xchg
mov
outsb
inc
js
push
test
repz
clc
or
inc
add
mov
pushf
xor
adc
add
daa
ficoms
mov
lcall
nop
add
gs
adcb
add
cld
lret
pop
das
out
mov
in
cmpsl
das
lret
sbb
inc
dec
cmp
rol
or
jne
mov
inc
pop
mov
dec
shr
pusha
mov
mov
add
call
loopne
cmc
es
pop
and
jecxz
jns
lock
pop
test
adc
xchg
jb
lock
dec
fwait
sub
int3
out
inc
sub
xchg
push
fidivl
dec
subl
add
insb
mov
cmp
popa
lcall
into
das
pop
gs
mov
aad
push
dec
sub
and
mov
xchg
js
mov
pop
or
mov
xchg
int
jnp
pop
add
lahf
daa
mov
cmpsl
cmc
mov
stos
sbb
cmp
rcl
inc
lcall
test
xor
psubsw
mov
rcll
ja
push
call
leave
push
xor
loop
and
pop
add
mov
pushf
rcrl
out
jmp
test
cli
fists
add
push
fsubrp
add
mov
adc
aad
adc
js
jg
loopne
daa
divb
ret
neg
inc
lock
rorl
pop
cmp
pop
push
sbb
add
cmc
test
mov
ss
cld
xchg
or
add
lsl
mov
inc
insb
mov
add
xchg
pop
pop
rol
orb
ljmp
mov
sub
cwtl
imul
rcrl
negl
fs
lcall
xorb
xor
inc
cli
sub
std
das
jno
les
int3
sbb
add
stc
push
dec
outsl
jge
aam
jns
ss
sub
cmp
mov
xchg
cmp
mov
test
xor
mov
call
adc
rclb
jbe
mov
inc
loopne
loope
lods
mov
adc
ret
popa
ret
cli
pop
adc
out
mov
push
jl
or
and
jae
in
mov
pushl
sarb
pop
xchg
sarb
add
inc
and
adc
xchg
jmp
pop
push
xchg
mov
aam
in
mov
aad
jg
xor
xor
pop
cmp
and
push
inc
dec
push
sub
mov
inc
jecxz
push
ficoms
leave
adc
inc
shll
cmc
cmp
movhps
loop
inc
and
aad
test
ret
xor
inc
pop
cmp
jle
jno
ret
pop
mov
sbb
in
xor
stos
adc
cld
pop
push
addb
sub
cmp
clc
and
dec
cmpl
cmp
add
inc
sub
mov
sub
nop
push
mov
clc
lea
jnp
pop
inc
std
mov
mov
pop
push
jg
xchg
les
add
cmp
stc
jmp
fwait
xchg
push
mov
les
jmp
aam
dec
xor
add
sbb
ret
lods
add
popa
mov
inc
std
mov
lret
xchg
scas
pop
push
mov
xchg
mov
in
orb
in
es
imul
sub
ja
arpl
pop
and
orb
pop
ljmp
jl
mov
repz
mov
sbb
adc
cmp
faddl
jne
mov
add
or
adc
mov
test
gs
adc
mov
das
cmp
cvtdq2ps
icebp
or
rolb
xchg
xchg
rolb
and
sbb
xor
clc
push
or
add
loop
add
pop
mov
fidivs
dec
inc
popf
das
pop
sub
lahf
insb
jl
cmp
js
adc
xchg
ret
sbb
sub
stos
dec
int
dec
mov
add
inc
xchg
dec
je
movups
mov
mov
add
push
fcmovu
movb
icebp
xor
mov
sub
lods
jne
cmp
into
xchg
nop
push
and
sub
mov
dec
push
scas
xchg
icebp
pop
cmp
pop
sbb
add
lock
loope
or
and
push
call
in
push
add
lock
aam
orb
xor
jg
mov
loop
call
jno
bswap
dec
rcll
add
pop
pop
dec
lds
cltd
sub
xor
call
inc
sbb
jmp
fwait
cmc
add
push
loopne
jbe
sbb
add
test
jmp
enter
dec
xchg
push
add
mov
scas
es
jg
mov
inc
push
or
out
add
and
jmp
xor
daa
xchg
loop
mov
and
mov
loope
sbb
mov
imul
or
pop
add
addb
or
sbb
fimuls
int3
testl
insb
cs
fs
add
je
ljmp
shl
or
nop
movl
loope
or
les
mov
xchg
cmc
loope
or
add
mov
xchg
leave
sbb
stos
cli
xchg
mov
sbb
xchg
lock
add
dec
lock
bound
mov
shr
sbb
push
pop
js
push
sub
dec
sub
imul
dec
lods
clc
outsl
pop
cs
sbb
orl
ljmp
inc
mov
sbb
int3
add
stos
pop
rcrb
les
call
xchg
cmpsl
test
pop
stos
movsl
sbb
mov
les
cmp
inc
js
pop
or
jb
pop
je
add
pop
popa
insb
inc
test
sarb
or
adc
psrlw
subb
cltd
or
jle
sbb
pop
push
xor
jo
and
or
xor
cmpsl
dec
out
sub
push
push
pop
dec
rorb
adcb
and
xchg
push
or
je
ret
cmp
add
cld
enter
and
add
cmp
sbb
mov
pop
test
add
call
sti
test
or
cld
or
fcoml
xor
sbbb
inc
into
push
mov
jp
adc
roll
flds
inc
xchg
push
push
mov
add
test
test
outsb
movl
insb
fsub
lods
jne
push
adc
xchg
hlt
or
jmp
cwtl
pop
jbe
pusha
adc
cmpb
and
bound
ljmp
ljmp
push
mov
shrl
stos
cltd
push
pop
rorb
stos
test
inc
pusha
lds
cld
jp
add
inc
cmpsb
ret
mov
addl
add
pop
xchg
insb
pop
loopne
out
or
or
addr16
add
push
incb
pop
add
dec
xor
adc
or
add
add
xor
in
ret
sub
fs
jg
push
and
mov
or
aas
jl
xor
add
and
adc
dec
dec
pop
call
in
inc
xor
cmp
movsb
mov
xorb
sahf
out
mov
mov
or
jne
pop
push
jb
sahf
rcrb
lcall
outsl
xchg
xor
testb
or
loope
add
outsl
pop
shlb
ret
repz
dec
sub
and
dec
sub
inc
xor
or
cmc
xor
js
add
leave
or
mov
and
xchg
jecxz
inc
mov
int
mull
lock
in
mov
mov
inc
and
mov
jne
and
hlt
jae
bound
fistpll
sbb
add
out
frstor
adcb
ja
pop
add
andb
std
pop
mov
mov
inc
mov
mov
rolb
mov
lock
add
nop
inc
or
dec
popa
and
icebp
out
jge
mov
ret
cmp
scas
sub
lods
pusha
int
mov
lret
adc
jns
addb
lock
addl
push
sub
jl
loop
fs
out
out
xchg
cltd
mov
sbb
xchg
inc
dec
or
aas
or
not
les
xor
mov
xor
push
push
arpl
xchg
and
mov
clc
push
jno
mov
loopne
in
push
test
xchg
fcmovnb
mull
or
dec
jo
hlt
rorb
dec
dec
dec
or
sarl
shrb
pusha
aad
adc
adc
mov
mov
push
popf
loope
sbb
push
add
int3
cmpb
call
and
sbb
add
and
xor
and
es
cmc
ret
add
inc
pusha
out
push
mov
scas
lock
out
mov
lret
push
cmp
jne
jmp
adc
mov
add
mov
test
xor
pop
and
ja
push
out
pop
pushf
mov
adc
dec
sub
mov
mov
das
and
rorl
xchg
push
les
lods
lds
ds
popf
or
maskmovq
divl
aas
dec
add
xor
mov
sub
mov
jecxz
dec
pop
pop
cmp
xor
popa
xor
push
fisttpll
add
adc
repnz
dec
or
or
push
lods
jmp
in
test
pop
sbb
roll
sbb
imul
testl
in
push
xchg
std
daa
cmp
dec
loopne
sbbl
loopne
mov
add
outsl
jp
inc
jl
lods
mov
jp
movsb
mov
flds
sbb
ret
jno
xor
inc
andb
add
out
es
cmp
iret
js
mov
movsl
scas
dec
cmp
insb
adc
pop
pop
imul
xchg
pop
test
mov
add
or
test
movsl
push
sub
icebp
inc
pop
sbb
pop
adc
aaa
cmp
loopne
das
and
into
add
jne
ret
sbbl
cs
fcom
test
pop
pushf
inc
sub
subl
mov
or
lea
cmpsb
cs
out
sbb
adc
adc
mov
add
sbb
push
test
loopne
and
xor
dec
cmp
fisubrs
pop
add
sbb
cmp
xchg
push
mov
fisubl
incb
rcrl
int3
imul
lock
test
dec
push
pusha
adc
aaa
jne
mov
ret
jno
cld
xchg
push
sub
jbe
mov
in
jbe
sbb
dec
iret
mov
outsl
sbb
dec
mov
mov
xchg
mov
add
adc
xchg
xor
clc
or
push
inc
mov
dec
cs
mov
mov
and
icebp
loopne
and
mov
lret
clc
jl
mov
push
clc
mov
add
push
push
dec
call
in
xor
pop
clc
das
icebp
pusha
xchg
fidivrs
fisubrl
addr16
add
int
adc
repz
sar
pop
inc
add
push
pop
inc
jecxz
push
lret
cmp
in
jne
loop
mov
cmp
mov
jne
pop
lock
mov
sbb
test
xchg
mov
rclb
sub
mov
pop
jmp
je
ret
loop
sbb
dec
int3
mov
dec
cmp
sub
subl
daa
les
xor
push
mov
dec
sbb
dec
mov
fimuls
mov
pop
dec
and
inc
int3
sbb
xchg
push
test
cmp
push
xchg
nop
enter
out
mov
jnp
aas
add
add
add
mull
xor
mov
pop
and
add
call
leave
fiaddl
lock
testb
push
roll
ljmp
cmp
movsl
push
and
xacquire
pushf
insb
cmp
jo
add
imul
add
or
sbb
pop
jge
or
mov
xor
sbb
xor
aam
xor
mov
insb
jmp
cmp
enter
lds
sbb
rorl
xor
cmp
jo
fsubs
mov
loop
xor
pop
pop
addr16
pop
mov
push
lock
fld
xchg
inc
cmp
dec
inc
test
or
aas
lock
shlb
out
xor
jle
addr16
pushw
add
xor
int3
push
int3
sub
loope
jo
adc
pop
dec
inc
loop
int
lock
int3
add
movb
xor
push
mov
enter
sub
sbbb
sbb
fsubp
andl
in
out
inc
data16
pop
add
xor
sub
rcrl
inc
sub
movsl
xorl
andb
addr16
inc
out
add
adc
or
js
mov
mov
nop
cmpsl
jecxz
jno
push
stos
int3
xor
jnp
adc
and
shl
pop
or
inc
or
imul
add
or
push
adc
clc
popf
and
or
insl
fnstcw
test
sbb
movsb
add
das
and
inc
call
not
cmpsl
pop
mov
xor
clc
int3
and
lock
and
mov
movb
adc
adc
dec
xor
int3
rcrl
ret
adc
in
jp
xor
lahf
test
push
jo
mov
add
jecxz
lea
dec
rolb
push
insb
jo
mov
mov
push
sub
test
push
decb
pop
lea
xorl
dec
xchg
xchg
das
loope
mov
hlt
aaa
gs
push
sbb
inc
sbb
cmp
mov
add
add
mov
mov
cmc
sub
mov
inc
adc
mov
and
test
mov
pop
inc
jge
mov
adc
fldl
rcl
ret
inc
inc
jge
or
sub
dec
and
data16
rcrb
push
adc
sbb
xor
jg
add
mov
cmp
inc
inc
in
hlt
imul
mov
sub
or
out
shll
lods
jnp
dec
movsl
adc
mov
pop
add
test
lods
or
add
mov
addr16
jnp
xchg
cmp
ss
cmp
fisubrs
push
scas
inc
rol
pop
je
imul
sub
adc
aad
cmpsb
popf
mov
xchg
out
jo
mov
cmp
push
jmp
jg
outsl
or
or
or
int3
mov
dec
mov
inc
push
jge
lods
and
cmpb
xor
rorb
cmp
jmp
das
add
dec
mov
cltd
mov
in
add
sub
push
insb
sti
mov
ds
mov
inc
fists
pop
sub
jecxz
scas
test
adc
push
pop
or
aaa
add
or
test
dec
xchg
insl
cmp
arpl
pop
inc
repz
lock
je
sub
cltd
push
je
mov
roll
pop
outsl
add
dec
and
sbb
hlt
adc
inc
push
dec
xchg
call
outsl
sub
in
adc
push
push
mov
xor
orb
cmp
nop
loope
or
sbb
mov
xchg
add
arpl
cmp
popf
imul
add
adc
jecxz
sub
shll
pop
and
sahf
les
popa
test
stos
dec
faddl
lods
les
lret
adc
mov
mov
jb
mov
outsl
push
and
movd
fimull
xchg
or
fwait
inc
mov
add
and
sahf
jbe
cmc
pop
add
testl
xlat
push
mov
mov
test
insb
inc
jmp
and
loop
add
mov
dec
lret
inc
call
push
or
xor
outsb
jp
outsl
out
lock
xor
add
jmp
push
mov
hlt
cmp
xorb
mov
add
or
fadds
sti
mov
roll
pusha
imul
ret
mov
mov
adc
test
add
out
jnp
cmpsb
fidivl
nop
nop
or
js
adc
add
sbb
push
inc
in
cmc
push
mov
rclb
jle
push
cmp
fsubrs
inc
add
inc
cmp
dec
inc
inc
push
sub
mov
loop
pop
fiadds
sub
add
mov
shl
mov
outsb
rcll
jg
cmp
jns
mov
faddl
icebp
jmp
xchg
push
pushf
es
push
lds
testl
icebp
cmp
sub
lods
xchg
icebp
cmp
stos
xor
test
or
call
ss
or
mov
xchg
nop
mov
addr16
hlt
cli
xchg
mov
sub
in
sbb
and
jle
dec
nop
bound
daa
fisubl
test
and
cmpsb
xchg
fdivl
adc
nop
inc
or
inc
addr16
push
int
sub
push
sbb
mov
addr16
add
add
and
or
loopne
pushl
mov
pusha
dec
mov
push
push
mov
fisubl
loop
nop
pop
xor
dec
movsl
fld
pusha
add
bound
fsts
push
xor
pop
sub
out
mov
xor
out
push
push
movb
xor
outsl
es
jae
ds
inc
cs
cmpsl
jno
aad
lcall
jo
sbb
sub
testb
xor
push
inc
leave
hlt
mov
add
loopne
mov
add
pop
pusha
jl
lock
push
add
stc
arpl
sbb
ret
rcr
sbb
lcall
movsb
ss
mov
and
mov
inc
or
lods
fstps
xchg
xchg
mov
adc
data16
insb
jo
icebp
inc
pop
mov
popa
inc
iret
outsb
inc
push
and
in
cmp
movsl
cmp
mov
mov
xor
push
xor
jle
mov
xchg
mov
push
push
add
mov
fldcw
adc
or
or
lahf
mov
jle
jns
pop
push
mov
stos
adc
ret
call
cmp
pop
jmp
out
jecxz
movsb
rol
sbbb
out
imul
insb
adc
ja
and
jne
pop
pop
add
rolb
loop
cli
cmc
push
leave
cmp
pop
mov
sbb
mov
sbb
mov
mov
test
and
add
sbb
rclb
fdivs
movsb
das
loopne
or
inc
mov
lock
or
and
into
push
and
pop
mov
je
popa
inc
int
push
or
mov
call
add
mov
fildl
adc
imul
mov
rclb
xor
ret
repz
sbb
add
mov
jno
sub
lcall
or
pop
pop
or
ja
movsl
fwait
mov
mov
aad
sbb
push
sbb
dec
cld
insb
mov
or
orb
sbb
ss
ror
adc
xor
or
add
loop
inc
inc
ljmp
mov
push
call
xor
lock
repz
add
mov
cld
test
scas
out
fwait
mov
cmp
test
shll
lods
push
es
cmpsl
sub
mov
arpl
mov
xchg
or
mov
call
jnp
xor
in
rorl
pop
cltd
jmp
add
movsl
xlat
clc
push
add
push
inc
sti
call
dec
out
gs
pop
dec
and
and
dec
inc
lea
jecxz
or
fidivl
dec
add
sbbb
cmp
cmp
inc
mov
adc
push
or
call
inc
call
sub
add
mov
addb
imul
int
neg
pop
imul
add
add
repnz
inc
jmp
dec
cs
pusha
add
shl
clc
cs
sub
and
sbb
mov
pop
bound
mov
mov
push
push
dec
add
imul
lods
lods
ret
push
loop
mov
mov
add
xlat
push
sub
cmp
and
or
adc
inc
ftst
nop
icebp
scas
popa
add
ror
sub
push
inc
loop
mov
adc
es
jne
or
pushf
and
push
sub
mov
add
stc
jecxz
dec
mov
fcomps
fcompl
mov
jo
adc
adc
daa
adc
imul
imul
add
push
push
push
call
sbb
mov
sub
je
add
decb
sbb
jmp
leave
fcoms
xchg
lock
nop
shrl
jo
adc
or
pop
sti
jecxz
lahf
add
jb
cmp
andb
dec
mov
rol
or
cmp
add
in
sbb
jecxz
divl
xchg
repz
mov
pop
leave
cmp
push
in
into
sub
xchg
add
popf
outsl
sbb
push
inc
push
decl
add
rorl
pop
addl
outsl
mov
aam
dec
sbb
ja
add
aas
les
adc
js
repnz
add
adc
jp
lods
mov
rolb
mov
push
cmp
add
and
imul
movsl
adc
insl
or
adc
xor
out
push
clc
arpl
inc
adcb
pop
movsl
pop
xor
inc
bound
xchg
fdivs
je
es
insl
shrb
add
adc
js
inc
add
xchg
lret
pop
jp
fidivrl
xchg
and
xor
rcr
sarl
jge
inc
pushf
and
cmp
imul
dec
shrb
inc
sub
or
push
dec
popf
in
outsb
sbb
xorl
or
shrl
xbegin
add
add
pop
add
cwtl
jno
mov
cmp
aas
or
fdivrl
inc
inc
and
pop
filds
xor
dec
add
pop
movsl
xchg
add
lea
out
sbbb
mov
rcll
lods
push
jne
roll
cmp
jo
push
mov
out
clc
fdiv
jecxz
lods
add
add
pop
fdivrs
mov
jo
fildl
aam
dec
cld
nop
lods
xchg
fimuls
sbb
xchg
sub
sar
add
addl
sahf
push
or
xor
ficoml
test
in
adc
call
pop
and
addr16
stc
sbb
push
inc
mov
gs
or
nop
and
sbb
mov
dec
stos
movsl
leave
mov
fsubrs
xorl
orl
bound
stos
mov
js
inc
jp
push
aad
lret
nop
cli
sbb
loope
xchg
jle
adc
mov
call
leave
adc
mov
add
add
jle
mov
ret
sbb
sbb
enter
mov
and
add
mov
push
sub
clc
dec
pop
and
adc
push
dec
lea
adc
imul
and
inc
clc
sbb
and
scas
sbb
sbb
adc
and
call
push
fsubrs
cwtl
js
ret
or
pop
imul
mov
jmp
test
add
ja
ds
add
xchg
push
jecxz
js
inc
and
lods
lret
mov
mov
int3
mov
hlt
push
jge
push
sbb
add
add
les
and
out
nop
inc
mov
mov
lds
push
xor
outsl
out
adc
fadd
and
pop
mov
ret
mov
mov
loopne
or
or
rolb
dec
pop
icebp
push
loopne
xor
lahf
sbb
push
jg
in
cmp
push
or
test
xchg
sub
xor
dec
pop
mov
adc
dec
loopne
sbbb
mov
adc
iret
enter
cmp
movl
cmpsl
dec
dec
add
pop
pop
xor
scas
enter
pop
xor
mov
shlb
adc
cmc
nop
jno
inc
lcall
rcl
test
shlb
dec
add
je
in
adc
add
xchg
sub
rolb
cltd
rcl
ss
mov
in
push
push
push
sub
jge
movq
cmp
mov
test
sub
push
mov
test
add
push
jne
sbb
dec
movsb
push
imul
sbb
jmp
mov
loope
pop
adc
mov
lgs
add
imul
or
outsb
insb
and
push
or
popf
pop
decb
jae
add
jg
test
pusha
clc
frstor
jmp
fnstenv
loopne
fidivs
int3
or
mov
sbb
sbbl
test
jae
icebp
adcb
mov
mov
movb
mov
xchg
and
xlat
add
and
sub
xlat
pop
notl
push
sbb
push
mov
insl
loopne
call
test
sub
iret
add
mov
out
addr16
pop
in
imul
sbb
loopne
into
lock
pop
dec
lods
sub
int3
mov
adc
xchg
cmp
iret
pop
addl
out
xor
dec
inc
add
adc
xor
inc
mov
or
in
fs
adc
dec
adc
inc
mov
mov
push
cwtl
mov
mov
add
nop
adc
cmpl
in
adc
gs
roll
es
push
fwait
jle
jne
gs
mov
lret
pusha
sub
enter
pop
fisttpll
mov
adc
rclb
push
dec
std
mov
or
outsb
sbb
shlb
add
int3
cmp
or
add
inc
insl
data16
pop
outsb
ljmp
xchg
dec
jle
popa
mov
in
mov
enter
clc
rol
test
pop
pop
dec
testb
js
lock
cmc
mov
scas
insb
fdivl
dec
xor
add
test
nop
sub
repz
adc
dec
inc
lea
inc
fistl
cld
movsl
xchg
aam
sarb
inc
out
mov
jmp
bound
jae
bound
and
pop
jb
and
lret
sbb
movsb
fwait
mov
xor
sub
sbb
mov
lret
mov
sbb
jl
repz
pop
mov
fiaddl
sbb
ret
call
push
sbb
test
cmp
mov
cmp
jl
mov
push
adc
push
ds
nop
out
sbb
xchg
sbb
xor
xor
aas
xchg
fsubl
push
inc
js
or
fildl
pop
lcall
add
sub
or
adc
adc
test
or
push
adc
xor
add
jnp
sub
mov
mov
notl
or
add
add
imul
jbe
mov
and
js
sbb
xor
outsl
cmpsb
in
mov
leave
xlat
mov
mov
int3
or
sbb
cli
push
sti
int3
dec
adc
jmp
inc
sbb
sub
xor
mov
push
loopne
sub
inc
aaa
rcll
stos
sbb
dec
push
rolb
sbb
gs
cld
mov
jo
subl
sbb
xor
inc
pusha
sbb
mov
cmp
scas
mov
jecxz
fs
loope
arpl
push
int3
jne
push
xchg
fnstcw
push
call
cmpsb
sarl
ficoml
es
inc
ss
in
mov
punpckhwd
jp
gs
push
inc
or
dec
pop
pop
dec
mov
mov
lcall
mov
mov
repnz
adc
mov
test
cmp
push
mov
cmpsb
dec
inc
mov
mov
xor
sbb
jg
clc
adc
xchg
clc
cmpsb
iret
loope
mov
xchg
mov
mov
push
xchg
inc
jns
enter
cmc
push
stos
mov
insb
and
mov
pop
lret
adc
js
fiadds
dec
scas
bound
adc
fs
test
cmp
inc
pop
aaa
push
enter
je
dec
jae
pop
insb
mov
lods
pop
andb
or
jo
xchg
xchg
jo
movsb
xchg
adc
inc
dec
out
cmp
sbb
mov
invd
mov
sahf
push
adc
rorl
xor
out
movsb
pop
lock
ss
call
mov
je
and
mov
or
aas
add
xor
pop
and
mov
adc
orl
aam
cmpsl
fdivs
or
insl
icebp
std
loope
or
mov
pop
add
or
sub
lret
data16
loopne
inc
xor
add
sbb
or
xorl
add
sub
or
movsl
fbld
mov
jbe
jle
movlps
inc
pop
cld
mov
in
cld
out
aam
andl
loope
loopne
in
pop
shll
inc
adc
rolb
insl
les
pop
test
add
jbe
xor
stos
or
nop
loop
mov
and
mov
fnstsw
and
roll
xchg
imul
dec
imul
dec
mov
and
push
arpl
in
pop
sub
dec
mov
mov
dec
inc
ljmp
xor
ficomps
xchg
lret
sbb
pop
pop
cmp
in
xor
sbb
pop
shr
rcll
and
movsb
pop
push
stos
inc
sbb
daa
outsl
cmpsl
or
adc
sbb
daa
and
adc
adc
je
les
pusha
fbld
imul
dec
ret
xchg
aaa
push
xlat
test
and
or
xchg
adc
ficompl
jl
stc
in
xor
xchg
lret
cmp
add
in
or
xchg
mov
fucomip
pusha
and
add
stos
jge
push
add
fsubl
or
adc
xor
ret
and
lods
cs
mov
movsb
adc
leave
push
pop
sub
and
ljmp
and
scas
inc
xor
cmp
or
mov
ja
jns
test
xor
mov
fwait
mov
jo
sbb
bound
arpl
inc
and
mov
xchg
sbb
cmp
sbb
push
idivb
or
or
xor
loop
push
lret
or
and
lds
adc
dec
sbb
jns
nop
push
pop
sub
or
or
imul
mov
jo
mov
sbb
cltd
das
jns
push
xor
fstl
cmp
je
hlt
fcomps
inc
psubsw
inc
cmp
mov
inc
mov
adc
sahf
lds
inc
daa
mov
jg
cmpsl
adcb
js
mov
lea
sbb
cmpsl
shr
emms
sbb
cmpsl
and
and
inc
hlt
lock
mov
and
sbb
and
pusha
inc
bound
jg
lock
in
fiadds
dec
dec
sbb
or
es
mov
sub
add
dec
and
ficomps
call
push
movsl
or
and
and
and
sbb
xor
in
inc
sbb
adc
int
and
ss
pop
jbe
mov
repz
in
add
clc
arpl
out
fsts
add
or
mov
sbb
ja
sbb
xorl
and
add
gs
outsl
ret
dec
mov
inc
mov
insb
cmc
fcoml
push
and
pop
sbb
jecxz
cmp
sub
pop
add
mov
fcoml
mov
repnz
arpl
inc
and
add
pop
fbstp
add
pusha
adc
add
pop
jecxz
or
imul
xchg
sub
pop
popf
bound
dec
movq
das
nop
daa
pop
ret
aaa
andb
dec
xor
cs
clc
push
sub
rorb
add
popf
repnz
js
push
inc
imul
and
test
add
add
pop
jmp
add
std
sub
cli
push
push
sahf
mov
call
mov
sbb
cmp
push
add
fwait
sbb
stos
pop
pop
adc
inc
mov
mov
sbb
add
ret
adc
cmpsl
ljmp
mov
sub
mov
daa
sbb
add
fwait
adc
or
sbb
xorb
jae
adc
inc
cmp
and
mov
fwait
stos
aas
pushf
cmpsb
bound
jmp
ret
add
adc
xor
adcb
dec
loopne
cltd
jge
add
in
adc
or
ret
and
push
addb
mov
add
push
mov
or
sbb
jg
mov
mov
add
jl
aam
pusha
mov
sub
leave
mov
mov
jbe
cs
mov
cmpsl
jo
add
jne
push
fwait
rolb
testl
xor
inc
cmc
rorl
xor
repz
sub
ja
inc
cmovs
and
cltd
adc
inc
xor
aad
xchg
fsubs
cmp
adc
ljmp
cli
fwait
or
xor
imul
or
cwtl
aam
nop
pop
or
add
in
add
xlat
pusha
mov
add
pop
add
pmaxsw
add
mov
not
fwait
dec
pop
add
shl
lock
mov
cmp
mov
nop
push
jmp
aad
push
nop
lcall
xorb
push
mov
in
inc
inc
dec
loop
jne
pmulhuw
xor
adc
call
addr16
mov
jmp
pop
mov
push
mov
cmp
fcomi
sbb
xor
and
pushf
xchg
sbb
sub
jmp
lock
mov
fildl
add
inc
das
jmp
add
in
pop
dec
faddl
or
jns
fsubl
push
mov
push
rcr
inc
ss
add
and
xor
push
xor
sbb
out
fs
adcl
mov
ret
je
cmp
clc
fcmovnb
int3
dec
vpunpckldq
dec
cmpsb
call
hlt
sbb
adc
dec
scas
cmp
ss
popf
lret
in
mov
shrb
fimuls
popa
sarl
fstps
out
ja
sub
hlt
push
push
fwait
adc
xor
jo
xchg
inc
daa
int3
dec
dec
pop
outsl
pop
jbe
push
cli
xor
mov
test
xchg
ret
outsl
inc
repnz
ljmp
cmp
lock
imul
outsl
pop
mov
aaa
or
dec
jmp
and
xor
lea
js
inc
or
xchg
dec
xor
lods
rcrb
insb
fwait
sbbb
adc
add
outsb
rorb
mov
lods
cs
out
xchg
cmpsb
fimull
jns
or
push
dec
dec
adc
in
aaa
or
add
scas
mov
rclb
repnz
pushf
or
inc
test
jbe
push
inc
andb
mov
xorb
add
mov
lock
jbe
inc
pop
xor
xchg
add
jmp
and
add
xchg
jecxz
sar
fs
or
xor
enter
test
ds
ss
pop
xor
loop
xor
lock
les
loop
xchg
scas
imulb
arpl
sbb
enter
push
pushf
movsb
aad
sub
sahf
test
es
fldt
fs
loopne
into
in
enter
adc
test
mov
push
mov
test
xlat
mov
mov
stos
xchg
pusha
push
rolb
push
es
loope
inc
adc
hlt
mov
mov
decb
and
orb
mov
sub
popa
mov
add
or
and
inc
and
nop
xor
sbbb
mov
dec
xor
sub
jne
pop
adc
inc
mov
or
jnp
cmp
out
adc
out
jle
dec
inc
mov
mov
xor
xor
and
ja
scas
fstl
lods
xchg
inc
negb
and
cmp
shlb
sub
sbb
and
outsb
jo
or
pcmpgtd
mov
inc
mov
cmp
mov
cmp
subl
xchg
xlat
out
cmp
adc
mov
xchg
mov
adcl
jmp
xchg
inc
test
and
pop
mov
fwait
cmp
and
mov
mov
mov
mov
aaa
pop
mov
jbe
test
out
or
inc
data16
loope
frstor
push
divl
jnp
jmp
push
adc
orl
fcompl
cmp
mov
in
mov
adc
fstl
push
ja
mov
dec
inc
and
sbb
and
sbb
mov
sub
mov
repnz
or
addr16
sbb
sub
loop
sbb
jae
adc
out
pusha
xchg
jne
mov
clc
xorl
int
xor
pop
mov
inc
inc
add
push
and
addb
adc
ja
adc
or
add
ds
scas
inc
fs
mov
jmp
in
fstpl
mov
mov
and
push
out
inc
cmp
cmp
push
aaa
xor
cmp
test
cmp
ds
shll
sbb
dec
add
leave
in
adc
sbb
popa
loopne
sbb
sub
out
out
out
clc
push
xor
mov
into
leave
popa
adc
jbe
mov
push
xorl
adc
inc
stc
insl
jbe
ja
inc
add
orl
data16
mov
mov
xor
imul
mov
sbb
xchg
mov
loope
jo
repnz
rol
adcb
cmp
ljmp
pushf
shl
jecxz
loope
subl
mov
inc
mov
jecxz
xorb
mov
in
pop
xor
sub
mov
jb
insb
jb
cmp
pop
push
pop
cvttps2pi
scas
and
popf
xlat
sbb
or
call
push
push
or
jmp
push
dec
mov
into
outsb
jo
mov
push
lret
sahf
pop
movsb
andl
jnp
out
pop
les
loope
lock
jne
pop
ja
or
mov
dec
orps
xchg
cs
push
dec
ja
push
pop
mov
pop
inc
push
out
push
fsubp
into
cmp
xchg
bndstx
popf
add
or
mov
into
ljmp
push
insb
add
sbb
xchg
outsl
add
xchg
cmc
scas
and
rcl
loope
pop
cld
mov
sbb
cmp
pop
dec
push
pop
push
mov
outsb
lock
outsl
jbe
or
mov
call
ret
mov
out
and
and
mov
imul
pop
mov
add
lahf
pushf
mov
mov
sbb
mov
push
scas
cmovg
jo
mov
dec
dec
add
dec
arpl
loop
inc
cmp
add
push
movaps
jne
mov
lock
xor
mov
jne
push
ja
sub
adc
rolb
push
push
or
out
xchg
or
mov
inc
ja
pop
or
jnp
outsb
adc
stos
inc
pop
pop
jmp
push
pop
inc
sub
and
out
dec
jg
out
enter
pusha
push
mov
scas
push
mov
jns
lods
loopne
in
add
in
insl
ret
imul
cltd
cmp
mov
cmpsb
roll
das
sbb
push
pop
fistpll
ret
inc
test
inc
loopne
sub
cmc
aaa
filds
cmp
dec
pop
inc
jo
ja
mov
jo
mov
push
ja
shrb
mov
cmp
push
adc
lret
xor
xor
call
mull
mov
js
pop
push
aad
mov
jno
xor
das
out
stos
daa
jle
sub
sarl
jge
pop
xchg
xchg
call
lea
cmp
or
cmc
popf
cmp
sbb
mov
femms
jo
jo
mov
andl
addl
shll
and
rol
das
jo
jmp
mov
dec
adc
pop
cmp
xchg
xchg
mov
jo
roll
sbb
push
pop
push
xchg
cmp
mov
push
mov
mov
out
add
mov
shld
lds
jns
loopne
out
lea
cmp
cmpsb
aas
sub
xchg
dec
sbb
add
mov
fwait
pop
xlat
jns
jo
xchg
adc
jge
loopne
fldenv
pushf
sbb
lock
shl
pop
mov
inc
jae
inc
adc
in
pusha
lock
mov
fincstp
jne
cs
push
cmp
dec
push
inc
out
loopne
mov
dec
add
into
sub
sti
add
pop
loopne
out
addr16
pop
out
dec
orl
mov
xchg
sbb
aaa
notl
jae
xchg
shl
pop
loopne
or
push
out
enter
mov
imul
add
fsubrl
fucomp
add
fsubrp
daa
mov
mov
push
jno
dec
lock
std
dec
test
aaa
jo
bound
out
sbb
popf
push
roll
and
ret
lahf
out
jl
rcll
repz
sub
xor
cmp
pop
sub
lret
dec
jns
xchg
xchg
aaa
jb
pop
stos
das
xchg
mov
je
addl
scas
jg
jno
add
sub
sbb
fistpl
mov
int
or
pop
push
or
sub
outsb
add
loop
inc
sbb
pop
js
mov
cmp
mov
xchg
xchg
clc
add
mov
orps
xor
jnp
lods
mov
add
popa
mov
pop
je
or
lea
inc
jbe
push
inc
push
pop
xor
xlat
xchg
arpl
scas
mov
pop
pop
sub
add
call
dec
xor
daa
shlb
jno
js
cs
cld
scas
xor
jmp
pop
das
lods
sti
out
mov
cmc
pop
das
enter
sub
lods
leave
leave
cmp
stos
in
mov
mov
lret
push
mov
pusha
or
sub
jecxz
out
js
jns
into
fnstsw
pushf
dec
add
cltd
jecxz
out
and
in
mov
je
mov
xchg
mov
adc
in
roll
pop
scas
mov
jo
xchg
cmpl
lock
in
imul
add
xlat
mov
repz
into
sub
cwtl
pop
push
mov
mov
nop
adc
mov
jo
sahf
iret
inc
subb
dec
sbb
out
loope
push
movsb
pop
sub
or
mov
xchg
push
and
or
push
mov
push
sbb
orb
sarb
dec
leave
add
xchg
xchg
add
inc
daa
movsb
mov
inc
or
and
sub
adc
add
add
cli
lock
inc
fldt
dec
fldcw
add
lahf
xlat
add
sub
ss
scas
add
jmp
sbb
dec
sub
xor
xor
dec
test
jecxz
xlat
dec
loop
sahf
rorb
or
pop
std
mov
adc
or
insl
inc
test
and
add
lahf
push
add
mov
add
xchg
adc
arpl
sub
addl
test
xchg
cltd
sti
inc
add
add
mov
or
add
mov
aaa
jg
repnz
inc
mov
sub
iret
jmp
inc
add
sbb
push
jge
add
add
andl
imul
and
incl
bound
inc
sbb
shll
push
add
push
add
idiv
dec
dec
lods
xor
add
stos
dec
sbb
add
nop
ret
loopne
cld
in
xor
aas
rcrb
rol
jne
ljmp
pushl
and
push
les
rcll
test
mov
call
fdivr
bound
sbb
add
std
mov
lds
ja
jl
ret
dec
pop
dec
std
call
test
arpl
cmc
or
push
sub
mov
dec
sbb
fwait
sbb
insl
add
xor
sbb
fwait
scas
clc
jmp
lock
pop
sbb
in
shrb
xor
dec
cmpsl
or
pop
lock
incl
loop
push
and
add
adc
add
and
in
add
test
jmp
sahf
jns
inc
or
push
les
add
pop
enter
mov
add
add
adc
pushf
add
hlt
add
add
in
ljmp
scas
jmp
dec
add
ret
xor
mov
lcall
aas
add
mov
icebp
clc
adc
nop
cmp
sbb
decl
push
sahf
xor
mov
sbb
mov
inc
inc
xchg
scas
stc
call
xor
in
xchg
pop
add
out
clc
dec
xorb
push
inc
push
loopne
add
and
cmp
int3
je
and
xor
and
add
pop
decl
and
push
popaw
fiadds
pop
hlt
imul
jbe
sbb
aas
fwait
jo
and
and
lahf
push
xchg
sub
jl
clc
out
jmp
fsub
test
adc
dec
push
in
scas
lea
fucomi
mov
mov
add
add
cld
shrb
jle
mov
mov
push
add
aas
xor
out
dec
dec
bound
call
and
sub
jmp
xchg
cmpsl
push
mov
pop
lds
je
iret
xchg
pop
xlat
adc
push
add
sbb
pop
add
stos
sbb
mov
cld
incl
add
mov
and
jg
add
and
add
orb
mov
scas
jp
in
inc
push
cs
popa
rclb
adc
jg
leave
jbe
xchg
in
cmp
fsubs
stos
loop
mov
adc
sub
lea
sbb
loope
mov
pusha
into
lock
and
loop
lods
and
out
in
dec
fbstp
adc
sbb
xor
pop
out
lret
or
in
ds
lret
jo
in
adc
int3
sbbb
paddd
scas
sbb
loope
inc
clc
jns
out
scas
outsb
fildl
or
les
xor
or
outsl
pop
rorl
test
subb
sub
filds
cltd
lret
lock
push
push
add
mov
adc
sbb
mov
pop
push
add
pushf
inc
push
aaa
dec
ds
lcall
sbb
and
push
out
push
dec
xor
mov
cltd
rcrb
jne
shlb
scas
or
rcl
rol
jp
mov
lock
ret
cmp
mov
movsl
sub
rcrb
mov
movsb
lods
lock
jmp
push
das
xchg
cmp
pop
lods
adc
mov
lock
jmp
push
inc
fistl
cmp
addb
mov
dec
insb
xor
xchg
push
aad
mov
mov
fwait
xor
mov
mov
jne
mov
int
jecxz
loopne
and
mov
movb
shl
scas
fistpl
dec
push
push
pop
add
and
push
stc
clc
sub
add
or
test
mov
lret
js
pop
movsl
in
pop
xor
aam
jl
lods
out
push
or
xlat
adc
mov
or
or
into
ljmp
add
add
jo
adc
scas
xchg
movb
inc
lods
rclb
fwait
gs
aad
jbe
cmp
pop
adc
dec
pop
add
xchg
sub
sub
jbe
mov
jle
fdivrl
adc
push
scas
add
popf
mov
add
mov
and
xor
rorb
fdivrs
cmc
stos
or
fsubrl
mov
lret
cltd
iret
filds
xchg
clc
inc
pop
clc
and
ja
js
cwtl
pop
gs
and
cmpsb
jb
ja
mov
pop
in
sub
add
add
jo
repz
into
out
roll
ds
inc
push
fwait
sbbb
jle
repz
inc
icebp
sbb
in
pop
mov
cwtl
add
inc
jb
fsubrs
cld
sbb
dec
popa
shlb
mov
add
nop
loop
gs
fcmovbe
pop
mov
pushw
push
inc
arpl
mov
cmp
jnp
and
mov
xchg
inc
fsubrs
mov
jp
insl
lock
scas
adc
popf
inc
pop
or
stos
mov
mov
pop
xlat
push
int
les
inc
xor
sbb
dec
cmp
inc
ljmp
inc
lods
cmp
aas
add
cmp
inc
hlt
jmp
mov
push
aaa
cld
lcall
dec
mov
notl
pop
cmp
pop
jge
jle
add
pushl
push
jmp
and
push
and
jg
mov
inc
cmp
sarb
mov
daa
dec
add
push
mov
jge
push
pop
and
movsl
xlat
dec
push
aas
cld
in
js
dec
test
mov
mov
ret
rolb
mov
or
jo
call
std
and
adc
ficoms
movsl
popa
adc
pop
jg
inc
fbstp
dec
cli
imul
fdivs
inc
xchg
push
xchg
adc
sbb
xchg
sbb
andb
in
movlps
lods
mov
pop
xchg
add
pop
or
mov
sub
in
mov
es
add
inc
adc
stos
dec
sbb
loop
leave
push
in
cmpl
fdivrl
and
push
push
xchg
push
mov
test
or
ds
pop
andb
dec
pop
dec
mov
icebp
pshufw
es
cwtl
cmp
in
xor
pop
lods
js
loop
enter
mov
adc
push
shll
shr
pop
test
test
ja
std
lcall
cmp
stos
jnp
lods
jo
addl
stos
notl
jg
xor
sub
pcmpeqb
sub
push
mov
mov
sti
icebp
cmp
call
mov
xchg
mov
cld
fcomip
or
dec
js
dec
and
add
rolb
xor
shrb
pop
call
inc
pop
fldenv
push
jle
add
pushf
dec
jmp
jns
jo
inc
adc
xor
dec
rolb
inc
push
add
into
jg
cvtps2pi
or
aas
push
or
jbe
jno
stos
pop
mov
jle
out
add
pushl
ror
aas
push
outsl
xchg
inc
lods
shlb
mov
xlat
cmp
js
rol
subl
in
out
call
cmp
mov
les
mov
fbstp
lcall
fmul
lret
hlt
fdivrs
rorb
mov
inc
push
and
lret
mov
adc
cmp
fiadds
lock
pushf
ss
adc
add
cmp
adc
enter
fwait
mov
xor
mov
mov
shrb
pusha
icebp
xor
cmp
cmp
pop
push
jg
push
dec
dec
jns
stos
incl
or
push
add
or
jge
cs
xor
in
clc
mov
add
dec
lret
xor
or
pop
out
std
and
adc
lods
push
sub
movsl
pop
mov
dec
lcall
sar
adc
adc
pop
mov
outsl
pop
or
xchg
sub
cmp
sbb
clc
push
or
add
mov
mov
add
pusha
push
inc
ja
in
lea
dec
mov
xrelease
sahf
test
adc
pinsrw
pop
xchg
dec
lds
lock
push
jl
add
scas
sbb
mov
hlt
imul
or
dec
and
jecxz
adc
inc
or
adc
xchg
pop
dec
pop
or
jo
ss
jbe
dec
jnp
dec
aaa
pusha
pop
sahf
or
ljmp
lret
mov
ret
rolb
nop
clc
add
lret
std
scas
dec
sahf
mov
mov
repz
loope
or
inc
lock
test
loope
cmp
pop
mov
out
les
fsubr
cmp
cwtl
push
lds
xchg
popa
pop
cmp
and
mov
add
jg
pop
sub
fbld
test
mov
incl
add
sub
cmp
arpl
adc
adc
cwtl
movb
cmp
incb
fimuls
popf
addr16
or
add
int
push
cltd
xchg
dec
outsl
mov
mov
popa
add
add
sub
mov
jns
dec
loop
frstor
jbe
push
mov
out
and
lods
add
lret
xchg
loope
add
xor
cmp
int3
fwait
lods
push
outsb
add
adc
pop
mov
shlb
add
dec
push
shl
pop
pop
out
mov
push
inc
lret
mov
mov
or
adc
add
fsubrp
mov
je
cwtl
in
inc
stos
pop
cwtl
mov
mov
insb
mov
popa
mov
lock
xor
ret
adc
push
jecxz
mov
lods
push
sub
pop
dec
adc
leave
je
sub
cmpb
add
loope
inc
dec
adc
mov
mov
mov
or
mov
sbb
shrb
ficompl
jle
push
lds
jl
push
mov
sbb
into
int3
dec
xchg
shrb
imul
pushf
loope
pop
js
addr16
mov
jl
scas
xchg
pop
xchg
cmp
add
cwtl
sub
mov
leave
push
pusha
and
pop
pushf
mov
fstpl
scas
pop
mov
xor
loopne
outsb
das
pop
jno
shl
mov
push
loopne
mov
xchg
mov
mov
cli
imul
iret
in
sub
addl
add
pop
mov
jbe
movsb
ljmp
ficompl
sub
push
jne
push
das
cli
enter
adc
cmp
jo
sbb
xchg
mov
je
dec
dec
lea
sarb
cli
inc
xor
xchg
addb
sbb
jg
jmp
dec
scas
clc
call
cltd
pop
pop
mov
and
loop
out
mov
ficomps
or
mov
xor
sub
xor
xor
jno
and
icebp
add
xor
hlt
dec
out
outsl
pop
loopne
pusha
dec
sub
ljmp
lret
ja
mov
fcmovnb
inc
push
cs
push
lods
aas
or
or
aaa
mov
pop
inc
in
cmp
inc
std
outsl
sar
push
sar
mov
push
inc
inc
sbb
jecxz
lods
mov
idiv
push
adcb
ret
mov
scas
jl
outsb
lds
and
or
add
in
ja
dec
into
dec
decl
jb
aas
movsb
inc
pop
call
es
add
imull
cld
fsubrl
inc
ret
mov
push
mov
and
add
jl
pop
dec
adc
out
addb
or
lods
and
in
inc
dec
es
cli
pusha
xchg
mov
and
test
call
push
daa
addr16
lahf
and
ds
mov
fcomi
ljmp
and
inc
inc
lahf
add
xchg
sar
pop
scas
les
mov
or
add
push
add
jns
add
decl
add
dec
jmp
push
cld
xchg
repz
mov
sub
outsl
cli
mov
cmp
mov
test
xbegin
fildll
add
push
mov
dec
loope
lock
std
clc
pushl
incl
push
inc
mov
inc
sub
ret
fucomp
inc
sbb
jle
popf
in
sahf
js
cmpsl
push
mov
lret
sub
call
imul
lds
gs
adc
push
adc
jle
outsl
sar
mov
or
js
mov
inc
incl
loopne
xchg
sbb
test
inc
mov
leave
and
repz
mul
mov
mov
mov
add
out
ficoml
mov
dec
bound
call
xchg
mov
test
push
fnstsw
cld
outsl
rcrb
sub
cmp
xchg
rcrl
push
dec
or
dec
cld
movsl
xchg
and
in
push
lcall
xchg
push
insl
into
sti
pop
frstor
scas
dec
ret
sub
inc
dec
mov
and
inc
jge
imul
lret
icebp
addb
out
in
ja
jl
xor
add
lods
xor
push
std
mov
and
pop
push
pop
mov
icebp
adc
and
push
cld
rorl
ret
pop
inc
hlt
dec
int3
sarb
call
inc
or
push
jbe
ja
sahf
inc
in
and
mov
inc
stos
mov
cld
xchg
jge
jne
js
mov
fbld
push
rolb
mov
fldl
ffreep
cwtl
jmp
insb
mov
aaa
inc
aaa
push
pop
push
shlb
push
xor
xchg
sti
sub
jge
sbb
dec
xchg
dec
pop
in
lds
incl
pushf
push
push
loop
push
rclb
fimull
aas
rcl
lret
es
popa
cmp
mov
sbb
inc
movsl
pop
add
js
outsl
scas
lcall
ljmp
je
das
jb
mov
rcll
jo
fsubrs
and
sbb
xchg
shlb
enter
inc
mov
sub
dec
aas
ds
push
add
es
dec
or
sub
sbb
loope
mov
sarw
cwtl
add
popl
mov
dec
dec
mov
nop
cmp
icebp
je
and
xor
sbb
add
out
test
inc
jmp
xchg
push
pusha
sbb
xor
in
scas
adc
mov
fs
dec
cmovo
sub
sub
out
dec
sbb
push
cmp
mov
xchg
fadds
fs
xor
mov
xchg
inc
push
add
loop
loop
inc
int
xchg
aad
inc
push
jecxz
lcall
inc
cltd
rolb
or
lock
enter
lcall
push
dec
cmp
push
or
rorl
ret
add
cs
push
js
or
add
jmp
pop
pop
lea
je
cmpsl
cwtl
and
loope
mov
test
mov
insl
je
insb
lcall
push
cmpsb
mov
sub
dec
or
xchg
push
sub
mov
lods
shlb
fsubl
push
cld
stos
inc
int3
inc
jno
pop
lock
in
cmp
jns
fistpll
repz
cltd
in
dec
inc
inc
and
cli
jmp
push
push
cmpsb
pop
adc
mov
add
test
loope
imul
pop
push
mov
ret
pop
xchg
or
mov
fbstp
mov
test
and
fimuls
adc
negb
das
jp
clc
or
xorb
cmp
filds
sbb
int3
bound
push
add
xchg
bound
ret
inc
gs
xchg
aad
imul
sbb
sar
inc
jno
mov
test
shl
sbb
int
fs
lods
fisubs
inc
sbb
pop
xlat
pop
cmp
mov
into
add
or
sub
mov
icebp
dec
sub
jecxz
dec
test
addb
insb
and
dec
lods
or
sub
or
jecxz
pop
or
movsl
cwtl
setno
or
out
ja
cli
inc
scas
mov
mov
or
shl
xor
inc
daa
in
dec
inc
sub
popl
mov
push
popa
jge
aad
add
sbb
push
pop
add
and
mov
adc
pusha
xchg
mov
lcall
pop
cmp
pop
mov
adcb
xor
loop
mov
mov
xor
cmp
xor
scas
jg
lret
sbb
adc
cs
cmp
test
fisubs
mov
add
cld
jmp
push
shr
in
xchg
mov
adc
clc
mov
iret
inc
bsf
movsb
icebp
stos
mov
mov
add
xor
or
sbb
xchg
hlt
cmp
outsb
inc
fdivr
sub
cmc
xchg
push
in
or
enter
int
jle
es
ret
shlb
xchg
loop
inc
fisttps
and
adc
mov
pop
mov
call
adc
and
sub
ljmp
jo
call
insb
shrb
sbb
cmpsl
je
mov
aam
lock
aam
adc
lcall
push
shl
jbe
jae
jp
movsl
ret
xchg
notb
jl
call
fsubrl
insl
and
mov
pop
sub
jg
add
xchg
call
jne
testb
push
jg
push
pusha
fcoms
jb
adc
xchg
mov
fdiv
inc
pop
lods
clc
adc
jae
sub
push
insl
sub
pop
add
sbb
ficomps
sub
fildl
add
lea
mov
dec
adc
mov
push
fwait
xchg
lock
jge
xchg
inc
pop
add
cs
sbb
shrl
jnp
adcb
xor
pop
ss
pop
test
jae
mov
out
push
adc
cli
inc
sti
lahf
xchg
lds
pop
sub
std
cld
call
dec
imull
jo
cltd
xchg
bound
dec
icebp
jno
shlb
pushw
xor
or
or
add
cmpsl
add
movsb
nop
mov
rorb
mov
mov
enter
stos
mov
out
push
inc
cltd
insl
loope
popa
stos
xor
xlat
sbb
push
flds
enter
mov
or
arpl
outsl
cmp
fldt
or
sbb
push
jbe
in
fnstsw
nop
xchg
cmp
decb
xchg
push
addb
popl
adc
or
pop
popf
out
loope
loope
adc
adc
jbe
clc
pop
sbb
or
insb
push
lock
insb
add
cmc
mov
decl
add
in
dec
sbb
test
mov
lret
aam
mov
jl
or
push
inc
add
pop
clc
push
sahf
push
push
jge
cmp
adcb
and
mov
call
mov
jp
loope
ret
dec
es
inc
dec
adc
cwtl
ret
inc
addl
adc
aaa
out
pop
mov
xchg
dec
add
add
mov
pop
ja
movsl
mov
jg
rcrl
enter
mov
mov
cli
out
cmp
xchg
imull
jae
pushf
movsb
push
push
mov
call
arpl
and
mov
pop
add
test
out
xor
or
add
cmp
hlt
pop
jns
das
repnz
add
jbe
add
loope
sub
xchg
pushf
ja
ss
add
lods
or
and
adc
in
fcmovnu
hlt
adc
sub
xor
push
cmc
scas
cmp
and
cld
fs
es
jl
adc
inc
cmp
mov
add
sbb
add
and
sbb
sbb
out
loop
lock
add
sbb
jo
pushf
cs
filds
stos
add
ljmp
inc
data16
in
adc
test
loop
clc
jecxz
mov
pop
test
sbb
xchg
call
cmp
test
sbb
scas
jp
jnp
jne
dec
jl
ss
gs
dec
pushf
jne
jge
cmp
jecxz
les
or
dec
ret
pop
aad
lods
jno
nop
cs
ljmp
or
cli
lea
inc
lea
aas
dec
push
mov
cmp
incl
sub
test
and
ds
mov
sarl
mov
outsl
cmp
mov
fcompl
pop
jne
pop
cmp
and
lcall
push
pop
aad
adc
cmp
cmpb
jp
sbb
test
lcall
push
adc
mov
cmc
adc
sbb
xchg
lods
outsl
pop
push
subb
inc
adc
mov
fst
arpl
test
sarl
out
xchg
das
clc
sbb
stc
out
outsb
je
stc
insb
add
pop
sub
jp,pn
sub
mov
pop
pop
add
pushl
fisubrl
push
sar
lea
or
inc
jo
loopne
adc
clc
cwtl
and
mov
lds
cmp
jp
into
or
jle
push
decl
pop
xor
sbb
sub
cmp
xchg
inc
stos
fiadds
mov
insb
cld
mov
inc
cwtl
stos
cmc
fwait
sbb
rcll
inc
sbb
movsb
cmp
jl
jbe
ja
and
and
out
rorb
lock
xchg
jbe
mov
incl
call
stc
push
fimuls
pop
jecxz
mov
sub
loope
xor
push
test
pusha
out
andb
dec
push
cmp
xchg
stc
scas
into
mov
dec
mov
ret
cld
or
adcl
outsl
mov
cmp
add
mov
mov
sub
cmp
push
push
lock
lcall
mov
add
fwait
add
je
popa
xor
adc
mov
add
pushf
in
and
icebp
fwait
pop
lret
aam
fnstcw
sti
add
aaa
cld
shrb
pop
popa
cmp
mov
fimull
push
mov
push
pop
sub
shlb
adc
dec
pop
pusha
pushl
xchg
jae
int3
push
es
add
add
mov
and
mov
inc
or
cld
incl
int3
int
fistpll
daa
xor
sbb
and
pop
sbbb
sbb
hlt
lock
cli
loop
ret
push
cmp
pusha
cmpb
adc
cmp
jl
ss
jp
dec
xchg
xor
adc
mov
js
xor
jo
lock
add
test
int
xchg
and
jmp
les
fidivl
adc
scas
pop
push
mov
sub
inc
push
mov
pop
fcmovbe
lock
mov
jo
sbb
hlt
mov
adc
inc
movsb
js
xor
adc
std
cli
subb
and
mov
aaa
add
cld
outsl
fbld
ss
addb
adcl
push
cwtl
push
scas
jb
push
addb
pop
cs
js
or
pop
xchg
jmp
jle
sahf
mov
clc
int
outsb
clc
lcall
cmp
in
mov
clc
movsl
das
adc
ret
sbb
jbe
mov
call
xchg
pop
inc
pop
jne
cmp
je
outsb
push
icebp
test
add
vminss
add
jne
sbb
es
loop
test
dec
add
push
pop
pop
inc
mov
into
mov
fisttpl
xor
jae
sbb
adc
shl
xchg
and
sub
xor
adc
leave
in
dec
cmpb
sbb
fcmove
mov
movsl
xor
sbbb
jecxz
cwtl
idivl
pop
sub
add
pop
mov
adc
xchg
das
sbb
sub
push
mov
lcall
dec
daa
mov
js
mov
dec
push
jnp
pop
cmp
add
sti
sub
mov
das
mov
inc
negl
sub
out
inc
mov
push
add
push
adc
add
jp
adc
mov
shrl
and
mov
inc
repnz
cld
mov
add
inc
mov
insb
iret
outsl
test
sti
js
add
movsb
in
and
bound
incl
adc
mov
push
cmp
inc
add
in
cmp
into
cwtl
dec
xchg
icebp
mov
push
rcll
or
mov
sahf
sbb
mov
pushf
push
and
push
repnz
and
dec
xchg
int3
enter
add
gs
les
mov
cmc
xchg
fmuls
fldenv
and
sub
mov
or
in
sahf
stos
cmp
and
or
pop
aad
pusha
fcompl
pop
or
mov
mov
mov
mov
sbb
into
stos
lds
arpl
jbe,pn
into
push
aam
push
sbb
inc
push
mov
jae
ljmp
push
loope
mov
insl
lock
loope
sbb
xor
dec
jnp
add
ljmp
orb
adcb
xchg
mov
decl
xchg
inc
mov
out
shrb
movsb
decb
andb
clc
ja
sbb
loop
fnsave
mov
xchg
rol
mov
decb
add
add
outsl
fs
xchg
fcomps
fidivrs
add
xchg
cmp
or
cmc
into
sarl
inc
ret
aaa
repnz
fwait
lret
out
mov
mul
pop
add
inc
addb
mov
push
adc
or
mov
cmpsb
jns
int3
and
xchg
adc
daa
test
dec
fists
aaa
rorl
fs
lods
and
sub
xor
movsb
ja
jbe
jo
add
loop
fcoml
popa
movsb
pop
cmc
scas
fs
nop
repz
and
xor
pop
mov
jno
hlt
mov
jge
incl
leave
mov
add
or
pop
int3
xorl
and
pop
std
add
pop
les
and
jb
imul
rcrl
xor
sub
xor
xor
push
adc
lods
push
sbb
inc
push
pop
icebp
fcmovnbe
xor
push
xor
jo
mov
pop
cmpsb
jo
mov
rolb
mov
jae
and
ss
loopne
shl
adc
call
mov
cltd
dec
jg
inc
sti
xor
xchg
dec
push
pop
out
int3
mov
dec
pop
pop
fsubr
call
or
into
and
lock
outsb
popa
sahf
fldcw
xor
push
or
hlt
inc
pop
jg
sti
pop
pop
sbb
mov
testb
cmp
add
xchg
out
aaa
jmp
ja
mov
arpl
add
add
xor
cmp
fs
mov
mov
xor
inc
and
ds
shlb
imul
or
bnd
adc
pop
out
out
hlt
sub
and
pop
jo
mov
mov
repnz
xor
aad
das
and
cld
add
fdivrs
add
pop
push
clc
fists
std
dec
pop
bound
lds
cmpb
sub
enter
fiaddl
orb
inc
add
cltd
movsb
jge
fsub
roll
or
inc
sbb
or
xor
cs
mov
fwait
inc
aas
sbb
pushf
dec
push
xchg
adc
repz
push
cld
push
push
inc
inc
sub
xor
pop
je
push
rcr
decl
fs
arpl
fdiv
mov
xchg
int3
jmp
inc
adc
test
push
cmpsl
and
cmpsl
push
pop
xor
dec
clc
pop
inc
mov
mov
push
xor
mov
fmul
imul
enter
movsb
adc
inc
arpl
adc
aam
mov
push
addl
dec
jo
xchg
cmp
sbb
test
push
pop
or
pop
mov
push
jns
xor
pop
xor
inc
divb
call
enter
xchg
add
stos
loop
std
mov
nop
sub
pop
xchg
movsb
xchg
or
xchg
nop
loop
add
dec
and
add
fcmovnb
mov
xchg
push
adc
adc
arpl
stos
push
clc
mov
mov
cmp
dec
mov
sbb
das
stos
push
movsl
push
nop
xchg
mov
pop
out
loop
jp
mov
mov
add
sub
fs
add
inc
or
or
sub
mov
sub
adc
xor
stos
les
and
inc
jmp
push
or
and
xchg
loop
mov
adc
inc
push
out
sahf
inc
xchg
aas
test
mov
es
inc
test
jg
scas
call
pop
sub
mov
mov
aad
cwtl
lcall
add
inc
test
jg
add
testb
hlt
and
outsl
fcompl
orl
mov
cmp
std
or
xor
add
ja
mulb
fndisi(8087
inc
cmpl
push
inc
hlt
fs
push
lret
shll
icebp
je
addb
pusha
or
in
jg
cs
push
cmp
push
mov
mov
add
stos
sub
dec
out
dec
add
loop
test
sub
repnz
sbb
popa
ret
mov
push
mov
ja
dec
pop
lods
pop
popa
sarl
cmp
ficompl
das
rorl
leave
or
lret
push
add
jg
adc
mov
mov
cmp
pop
push
jle
xchg
mov
inc
and
movsb
add
cmpsb
lods
mov
xchg
int
jp
sbb
xchg
xor
fisubs
inc
lret
push
mov
push
iret
mov
into
xchg
das
push
sub
pusha
mov
loopne
addr16
fildl
or
scas
js
mov
mov
lea
jbe
fwait
orl
dec
push
mov
scas
inc
dec
push
pop
std
fcomip
inc
movsl
adc
and
add
cltd
add
sub
data16
cmp
imul
xor
iret
repz
inc
lea
or
mov
or
jno
add
cltd
xchg
sub
sbb
daa
ficompl
push
std
push
in
pop
xor
jp
cli
inc
outsb
add
sahf
je
leave
mov
insb
clc
test
and
outsl
adcb
mov
lds
dec
je
sbb
push
jge
clc
xchg
aaa
push
sbb
lret
cmc
nop
shll
add
push
aad
ljmp
lcall
pop
ljmp
fistl
mov
jbe
cli
jo
jg
pushf
or
dec
sbb
lret
jno
insl
dec
cmp
clc
scas
jne
mov
in
mov
inc
pop
addw
iret
or
clc
aas
inc
movl
mov
mov
mov
stos
pushf
and
or
fdivp
pop
cmp
enter
mov
shlb
mov
lods
push
and
mov
in
mov
out
ret
cmpsb
shlb
or
test
and
push
mov
jno
adc
inc
jb
lret
cmpsb
ret
pop
push
xorb
dec
cmp
xor
pop
xor
andb
notl
lods
out
push
mov
ja
pop
or
bound
popa
xchg
pop
and
shlb
lock
imul
je
jl
mov
xchg
mov
mov
clc
ret
sbb
mov
pop
pop
jmp
sub
gs
add
orl
adc
repz
xor
jnp
or
jge
xorb
int3
lds
or
mov
sbb
or
and
adc
mov
mov
adc
dec
jae
jecxz
xor
push
cmc
add
mov
bound
add
nop
fisubs
pop
or
inc
loope
mov
pop
stos
mov
sbb
sub
loopne
sti
adc
loop
inc
add
lods
sbb
dec
xor
mov
adc
pop
adc
out
adc
rorl
fsubs
push
fisttpl
aaa
pop
cmp
sub
jb
add
cmp
in
adc
fsubrl
inc
adc
adcl
shll
sub
in
xchg
jl
mov
push
hlt
adc
jmp
nopl
das
dec
mov
addr16
mov
push
orb
and
xor
jno
xchg
call
jo
or
sub
cmp
int3
inc
insb
mov
xchg
or
cs
xchg
cs
ret
ret
pop
xor
scas
sbb
fnstcw
mov
jg
pop
add
repnz
add
pushf
mov
push
mov
or
xlat
fadds
bound
xlat
mov
dec
sbb
inc
gs
mov
scas
icebp
arpl
test
xchg
lods
lock
mov
push
sbb
inc
data16
ja
cwtl
jae
mov
je
push
mov
add
shlb
in
sbb
adc
out
bound
mov
mov
icebp
and
or
push
hlt
cltd
pop
fsin
sbb
sbb
and
xchg
jg
imul
jbe
and
mov
or
inc
inc
mov
mov
test
inc
pusha
lcall
push
jo
lods
xor
mov
sub
jb
cs
test
adc
cmp
jp
add
mov
inc
shll
mov
orb
fwait
push
cmp
nop
loope
xchg
xor
aas
es
adc
lcall
inc
push
push
or
jl
mov
das
mov
adc
push
sbb
push
sub
xor
xor
mov
mov
dec
scas
xchg
lods
mov
fsubr
push
xor
dec
sub
push
incl
icebp
add
push
add
xor
jnp
and
jecxz
and
nop
mov
enter
dec
jecxz
push
xor
cld
mov
cmpsb
cli
dec
push
mov
and
adc
lods
pop
inc
call
mov
add
notl
pop
add
dec
lock
adc
adc
ljmp
or
out
sbb
mov
cmp
mov
pop
sub
dec
test
inc
or
loope
jg
pop
and
ret
sti
shll
pushf
xchg
xchg
push
jg
jmp
pop
or
cmp
and
shll
stos
mov
pop
mov
das
in
add
call
jo
xchg
sbb
and
jbe
or
jnp
subl
sbb
xchg
fistpll
scas
jmp
push
scas
or
jae
sub
jecxz
mov
jb
and
pop
ret
lcall
cmp
fstpl
aam
and
js
push
loope
pop
cs
inc
cmpb
pusha
cmp
mov
in
outsb
mov
daa
pop
add
mov
push
inc
sarb
je
inc
clc
pop
subl
sub
sahf
xor
stos
jbe
cmp
push
fistpll
inc
mov
pop
jle
xchg
xor
add
ret
mul
cmp
xor
fildl
xlat
jns
sbb
pop
push
and
sahf
pop
scas
clc
sarb
dec
cmp
adc
adc
sbb
mov
lret
dec
mov
lahf
lcall
jge
ret
xor
popa
cmpsl
xor
aad
sbb
cmc
jmp
pop
shl
and
mov
mov
js
push
mov
popa
lock
leave
push
jbe
add
push
push
mov
clc
fstpt
pop
leave
inc
mov
adc
sub
aad
jle
movsl
insl
icebp
sub
insl
shll
shlb
add
cmp
and
cld
push
or
mov
xchg
push
add
rcrb
mov
es
sahf
xlat
push
push
je
xchg
loop
pop
sub
add
push
xorb
push
lods
std
or
add
sbb
fistpl
es
std
repnz
imul
push
mov
dec
lcall
pop
xchg
cli
add
jge
push
add
mov
dec
and
ds
sub
push
xchg
lcall
aaa
pop
in
ret
mov
shlb
or
lcall
adc
aas
dec
dec
cltd
divb
fistpll
push
addr16
dec
lods
add
dec
xor
or
sbb
lds
pop
xchg
adc
adc
nop
das
xor
movsb
jle
pop
imul
mov
addb
mov
mov
inc
nop
jmp
dec
lock
dec
ret
or
mov
addb
repnz
lcall
lea
imul
lock
lret
add
or
cltd
or
fiaddl
pop
xchg
dec
jl
addb
mov
jle
pushf
jl
les
rcr
out
pushf
stos
or
dec
and
call
in
fbstp
mov
loop
jp
cmpsb
fistps
test
xor
fildl
test
test
jb
and
add
jbe
mov
jle
add
mov
xchg
clc
stos
lea
popf
xor
arpl
adc
fildl
xchg
push
xchg
add
or
mov
scas
sahf
pop
stc
adc
xor
inc
dec
fldt
das
cli
add
repnz
inc
in
xor
movsl
add
je
jmp
das
cmp
mov
push
cld
scas
xchg
sbb
adc
lret
movsb
mov
dec
cmp
test
and
add
dec
out
mov
inc
pusha
inc
mov
clc
mov
xchg
data16
pop
mov
inc
fadd
or
int
sub
mov
mov
iret
inc
mov
addb
mov
inc
loop
push
jmp
scas
cld
inc
inc
test
rcr
fsubp
inc
adc
inc
mov
pusha
fistpll
icebp
push
gs
into
fidivl
out
adc
nop
in
addb
shrb
pop
mov
jno
sbb
jg
mov
xchg
sbbl
sub
notb
or
js
pop
pop
inc
inc
ret
push
mov
out
popf
inc
mov
ljmp
scas
jo
adc
pop
adc
push
lock
sub
push
int
je
jbe
inc
or
cs
iret
cld
in
mov
jle
addl
out
and
mov
loopne
das
mov
rolb
out
int3
or
data16
fcmovne
push
call
leave
fs
enter
mov
sub
ss
cmp
dec
cmpsb
adc
mov
cmpb
pop
out
dec
les
push
test
es
test
pop
inc
fcmovnu
mov
ror
outsb
ja
pushf
cld
add
lcall
push
js
or
push
test
xchg
jp
xor
pop
or
mov
mov
adc
mov
enter
lcall
sub
enter
inc
mov
nop
add
ja
mov
xchg
ret
scas
inc
jmp
jl
pop
orb
outsb
aam
loope
bound
jge
push
adc
inc
fwait
push
pop
pop
add
pop
xchg
mov
rolb
push
inc
xlat
shl
cmp
push
loope
das
mov
ror
roll
pop
out
mov
mov
es
pusha
mov
inc
jae
sbb
orb
subb
mov
in
adc
xor
popa
mov
outsl
mov
cmpsl
mov
loopne
rorl
mov
adcl
shrb
sbb
push
mov
pushl
fstpt
lahf
or
cmc
shr
and
push
push
cmpsb
add
pop
inc
adc
mov
jae
jbe
or
mov
mov
call
mov
jb
xchg
xchg
mov
daa
sahf
stos
cld
cmp
cmp
cmp
enter
nop
ljmp
aaa
pusha
test
mov
mov
rcrl
mov
xor
pusha
adcb
pop
incb
jmp
daa
in
push
ret
lcall
fcom
movsb
dec
popf
std
scas
ljmp
repnz
and
rorl
cmpl
mov
js
loopne
xor
mov
bound
aas
aad
icebp
fwait
lcall
mov
aam
sub
inc
sti
cwtl
test
repnz
mov
or
les
jno
mov
ret
pushl
mov
inc
sbb
jle
xor
jecxz
shrb
pop
bound
movsb
shll
add
lock
push
cld
push
dec
xchg
mov
neg
fs
pop
loopne
scas
jo
sbb
add
mov
dec
mov
mov
pop
movsb
pop
mov
xor
adc
push
data16
imul
mov
or
xchg
adc
fs
cmp
je
idivl
sbb
mov
inc
es
push
mov
pusha
sar
sub
popa
jp
and
mov
pop
add
add
sbb
jg
jg
add
nop
adc
ljmp
sbb
or
ror
int3
dec
push
xlat
mov
cmp
xchg
mov
ret
rol
mov
add
mov
add
bound
fwait
sub
push
adc
pop
scas
xchg
sbb
cld
das
pusha
cmp
xor
and
sar
decl
add
inc
xchg
inc
and
addb
sahf
notb
or
push
pop
push
sub
mov
mov
sub
rcll
cwtl
les
popf
rcr
cmp
or
stos
jmp
add
aaa
dec
push
repnz
mov
sahf
inc
aaa
frstor
pop
bound
fwait
icebp
jg
mov
adc
into
enter
popa
mov
sub
jmp
cmp
mov
pop
scas
or
jecxz
daa
outsb
xchg
dec
pop
jcxz
adc
sub
lahf
push
mov
loop
pop
sbb
mov
xchg
notl
jecxz
out
xor
sbb
js
icebp
mov
mov
scas
push
arpl
pop
or
roll
outsl
sub
and
enter
ret
mov
roll
ljmp
jle
adc
cmp
add
mov
aaa
or
scas
and
ljmp
jb
pop
lea
nop
fildl
loope
add
jecxz
insb
mov
xor
or
loopne
icebp
dec
sub
adc
add
cmp
cmp
or
ret
and
sub
inc
negb
push
mov
adc
ret
or
into
repnz
ljmp
out
test
jge
inc
push
iret
sub
mov
adc
xorb
mov
fwait
jnp
inc
out
roll
dec
adc
mov
stos
clc
filds
cmp
les
fadds
clc
cmp
add
cmp
scas
std
enter
ret
and
pop
bswap
sub
repz
pop
xchg
cmpb
shlb
push
mov
subb
jne
inc
std
mov
push
mov
push
sub
out
pop
decl
test
out
xor
adc
sub
adc
inc
mov
in
mov
pop
adcl
shlb
enter
push
xchg
out
inc
sti
jmp
lahf
push
lret
xor
sub
insl
call
popa
xor
lock
pusha
mov
inc
push
sub
inc
movb
mov
xor
mov
adc
inc
jg
popf
adc
dec
enter
das
add
mov
add
add
loop
mov
xchg
and
add
outsl
cmp
movsb
sub
fadds
inc
cli
loope
icebp
add
incl
add
xchg
jecxz
pop
inc
aaa
jmp
push
cmpsb
in
mov
scas
fistps
mov
sbb
scas
jns
and
push
loope
add
inc
bound
push
sti
jg
sti
push
and
push
pop
and
cmpsl
mov
loope
push
jbe
mov
push
pop
mov
add
jg
stos
test
xchg
and
lahf
ret
jg
and
scas
xchg
call
addb
dec
lock
xlat
xor
jbe
rcrb
xchg
or
dec
xchg
pushf
push
leave
data16
insl
pop
jo
pusha
jnp
xor
lock
add
pop
aaa
or
sub
push
mov
loope
lcall
insb
jo
push
cmp
and
lods
mov
dec
fs
cli
xchg
bound
cmp
jb
or
bound
add
gs
dec
pop
cmpsl
mov
shrb
ljmp
pop
mov
cli
sbb
rcl
mov
shrb
scas
sarb
scas
mov
jle
aam
mov
pop
es
mov
adc
cmp
dec
fwait
int3
jge
insb
dec
add
jp
fisubl
cmp
leave
pop
xchg
and
lcall
ja
adcb
mov
pop
cwtl
cmp
lea
scas
lds
lcall
stos
jmp
incl
andl
stos
sub
pop
cmpsl
shlb
ret
icebp
xchg
jo
sbb
cmp
movb
out
and
orb
lock
bound
jae
in
addl
inc
std
scas
dec
cmp
mov
int
daa
fs
std
and
xchg
shlb
mov
out
mov
inc
dec
add
jbe
movsb
xchg
icebp
scas
popa
mov
pushl
test
inc
add
inc
dec
inc
or
arpl
rcr
or
fwait
push
sbb
cld
sub
mov
lret
adc
outsb
cmpb
ljmp
mov
ror
test
hlt
lret
in
inc
sub
or
and
push
ret
mov
mov
add
imul
inc
add
ss
mov
mov
inc
xor
jg
xchg
loopne
mov
sbb
jmp
fimull
cld
addb
mov
int
ret
fists
xlat
out
add
xchg
lods
jp
pop
or
movsl
pop
mov
ret
and
mov
cmp
stos
aad
mov
fcmovnb
jbe
xlat
or
inc
shl
nop
add
mov
inc
movsb
in
adc
das
and
pop
jge
adc
shrb
cli
incl
inc
mov
xchg
add
add
sub
stos
in
pop
aad
data16
mov
aam
sti
lds
pushf
enter
inc
int
js
adc
cwtl
sub
adc
mov
lea
cli
rcl
sbb
push
sub
push
push
cmp
dec
lock
adc
inc
rclb
sub
add
bound
dec
cmpsb
mov
sbb
addb
sub
js
or
mov
loop
mov
stos
sub
pop
mov
stos
xlat
inc
sub
push
mov
scas
js
pop
mov
xor
int
cmp
xchg
mov
sbb
mov
loop
lds
call
jle
test
notl
add
jge
push
dec
mov
jbe
jl
pushf
mov
sbb
inc
lock
jp
pop
jo
adc
mov
popa
fdivl
ret
lahf
mov
push
iret
cmpsb
add
fidivrs
dec
js
cmpsb
cmpsb
push
dec
sbb
int
rcl
popa
pushf
sbb
fsubrs
lret
loop
sbb
sbb
loop
mov
inc
dec
insb
mov
mov
add
mov
mov
fs
movsb
mov
dec
cltd
mov
jg
shrb
push
inc
pop
in
xchg
sub
xchg
cltd
mov
push
xor
shrl
inc
cmp
ret
xor
sbb
xchg
sub
popa
and
test
inc
hlt
mov
mov
test
mov
scas
xor
jnp
or
mov
loopne
add
sti
push
pop
pusha
out
cwtl
jg
dec
lods
xchg
cmp
or
arpl
cld
cs
aaa
repnz
mov
sahf
or
pop
mov
adc
popf
hlt
dec
sbb
sub
xor
jo
adc
outsb
hlt
lods
adc
icebp
call
ja
jne
lahf
dec
xlat
xchg
fidivl
xchg
ljmp
pushf
add
dec
pop
adc
pop
jae
lahf
lcall
xor
rcrl
cmp
test
scas
shrb
jl
xor
mov
cmpsb
pusha
mov
je
loop
push
rcll
sbbl
inc
or
lret
push
cs
push
adc
lcall
les
imul
ljmp
lods
clc
test
add
xor
cmpsl
in
rclb
pop
arpl
adcl
cwtl
sbb
decl
lock
pop
inc
scas
test
inc
mov
mov
push
adc
mov
adc
xor
ljmp
ret
pop
fmuls
loopne
test
cmp
insb
or
mov
xchg
sbb
cmpsl
shrb
adc
sahf
fisubrs
shl
cwtl
mov
stos
jbe
and
add
mov
adc
inc
push
xchg
and
or
outsb
out
sbb
add
aam
test
and
aam
push
pushf
orb
or
sbb
sub
cld
cmpsb
sti
and
lock
jno
mov
inc
adcb
dec
push
and
inc
cwtl
adc
enter
lock
std
das
sub
cld
mov
iret
shll
sub
inc
out
sahf
xchg
adc
jbe
or
loop
jns
jns
push
sbb
hlt
xchg
sub
pop
es
iret
std
fbstp
pusha
movl
add
or
jns
sarb
dec
push
clc
mov
add
mov
add
sub
xchg
jle
push
roll
pop
push
mov
adc
mov
inc
or
jae
lock
mov
dec
add
fs
push
jl
mov
jmp
mov
insb
in
jecxz
je
popf
lods
add
out
sub
aas
js
jl
jp
xchg
mov
popa
inc
jl
imul
add
inc
ror
push
or
xor
mov
aad
lods
inc
sub
mov
stos
sbb
ficoml
cmpsb
dec
xor
and
negb
mov
xchg
mov
stc
inc
movsb
cmp
popf
xchg
test
mov
add
int
lock
iret
nop
outsb
mov
jnp
dec
pop
jne
push
js
in
inc
shll
jp
sti
sbb
inc
shlb
movsb
sub
inc
adc
add
and
in
outsb
add
jno
mov
inc
xchg
push
shll
movsb
dec
sti
sbb
je
adc
add
call
inc
jl
add
push
jge
repz
add
adc
pop
enter
sbb
imul
jb
testl
adc
or
jmp
sub
mov
jae
add
out
or
mov
pop
sub
and
adc
cmp
pop
sbb
adc
mov
adc
dec
mov
jns
mov
arpl
lahf
mov
call
push
mov
stos
push
shlb
out
frstor
icebp
mov
push
add
jmp
cmp
or
and
lea
pop
pop
loopne
shlb
or
cld
negb
out
ljmp
jb
arpl
sub
add
or
dec
jl
push
adc
ja
shlb
clc
pusha
cmpsb
shrb
add
push
enter
xlat
mov
adc
mov
sbb
xor
push
jo
test
pusha
nop
cwtl
push
hlt
std
ljmp
enter
xlat
fistpl
arpl
sub
aaa
sbb
or
inc
mov
add
fcomp
xor
jg
decl
xchg
add
or
cmp
pusha
lahf
aas
or
sahf
xchg
pop
jg
and
jl
or
dec
lea
inc
dec
jle
insl
and
les
xchg
xchg
add
scas
clc
and
xor
movsb
orl
mov
push
add
int3
sub
cmp
jnp
cmpsl
push
mov
sub
mul
mov
xchg
add
roll
inc
bound
xchg
mov
cld
inc
push
xor
xchg
imul
lea
pop
adc
push
add
das
cli
scas
bound
test
jp
call
add
pop
lds
leave
add
fs
sub
test
incl
aam
and
jb
inc
cli
nop
mov
sub
test
je
jg
mov
pop
test
insb
adc
or
add
push
xchg
add
dec
mov
mov
dec
inc
js
int
adc
cmp
cs
call
lock
inc
ss
xorb
adc
adc
loopne
ljmp
xor
repnz
std
clc
lret
xchg
jge
call
repnz
xchg
or
or
push
in
or
xor
pop
cli
pop
jecxz,pt
and
push
loope
jp
and
push
pop
lock
dec
sbb
bound
call
cmc
add
pop
pusha
in
call
insl
jae
ss
cltd
add
call
mov
rolb
adc
jg
mov
ficoms
and
mov
adc
add
cmp
add
jg
stos
cltd
push
jg
scas
mov
lret
fsubs
dec
fidivs
inc
sti
inc
mov
out
lock
adc
push
sbb
mov
pop
in
dec
ret
outsl
js
aaa
sbb
jno
add
loopne
scas
iret
aam
add
ret
daa
sar
scas
cmp
pop
ja
lods
test
dec
inc
imul
cmp
xorb
push
fdivrs
push
cmpsl
ds
or
test
test
pop
pop
aam
push
mov
lds
fildll
mov
cmp
jg
inc
stc
mov
movb
insb
or
xor
rorb
pop
and
xor
inc
sub
xchg
call
mov
lret
inc
shll
ss
sub
add
cmp
add
popf
fstpl
jp
fists
call
add
pop
push
mov
sub
push
or
xor
jns
pushf
and
loopne
cltd
cld
cmpsb
pop
in
cmp
or
xchg
adc
push
mov
ret
repnz
gs
add
cltd
push
pop
push
imul
sbb
add
cmp
xchg
fs
inc
jl
or
dec
xor
cld
xlat
jnp
dec
clc
add
lds
rcrl
xchg
les
out
jo
aas
inc
xor
nop
stc
push
pmulhuw
roll
sbb
adc
cmp
test
aas
fsubs
push
movsl
iret
jo
adc
scas
ljmp
sbb
sbb
mov
sub
outsb
push
int3
gs
xchg
fildl
jge
lods
jb
cmc
jo
adc
cmp
test
out
call
enter
and
pushf
xchg
add
push
dec
shrl
pop
pop
adc
xor
adc
inc
aas
ljmp
outsb
pop
clc
sbb
jl
loopne
int3
imul
jle
lods
in
mov
incl
inc
pop
adcl
shlb
cli
add
dec
lock
loop
sub
mov
mov
mov
nop
jbe
test
inc
jg
cli
fcomps
gs
inc
mov
das
js
mov
mov
inc
nop
loope
mov
push
jle
lret
pop
js
mov
out
xchg
add
mov
pmullw
add
pushl
inc
mov
shrb
cmc
shlb
sub
sub
int
insb
adc
mov
adc
mov
cli
add
test
mov
iret
fistl
pushf
or
movsl
andl
shll
test
popf
test
jmp
adc
add
test
call
inc
sti
pop
dec
or
or
test
pop
add
dec
ret
xorb
dec
cmp
cli
loopne
add
fwait
or
lea
cmp
cwtl
xchg
cld
mov
pop
and
jecxz
add
std
les
cltd
loop
clc
sub
enter
push
jbe
fmuls
movb
rcrl
xlat
or
ljmp
inc
xor
adc
int
cmp
loop
rcll
ret
add
push
mov
lahf
sub
icebp
fcomi
cmp
dec
cmp
rorl
stc
inc
inc
mov
in
movsl
push
cs
and
xor
jo
adc
fidivs
js
pop
fcoml
lock
xor
sbb
pop
cwtl
jne
mov
call
subl
and
add
xor
jecxz
add
ja
pushf
sub
push
inc
or
sub
lock
orl
xchg
jmp
test
mov
and
sbb
pusha
lcall
or
ficoml
add
mov
dec
inc
adc
scas
mov
dec
mov
push
add
sub
mov
inc
lea
mov
ss
loope
incl
aad
rclb
pop
outsb
push
cmp
pop
jo
clc
rorb
shlb
jno
inc
push
sub
into
xor
mov
push
insb
out
mov
inc
mov
inc
call
decl
and
mov
enter
adc
mov
mov
lcall
rcrb
testb
pop
sbb
stos
in
movsb
addr16
lret
mov
sbb
sbb
add
neg
inc
xor
test
inc
lods
lods
pop
out
push
das
sbb
add
cmp
mov
mov
scas
fcomi
aas
lods
xor
rcrl
test
inc
add
outsl
and
or
fisubs
adc
call
mov
and
jle
sub
lret
push
or
sbb
in
add
js
dec
mov
test
ljmp
push
push
inc
push
cld
inc
data16
dec
rcrb
ret
hlt
push
rorb
stos
add
or
inc
mov
test
cs
xlat
repz
lods
lret
loope
adc
dec
or
lea
pop
adc
call
ja
sarb
add
je
aas
xor
dec
test
inc
test
mov
ret
mov
mov
mov
repnz
push
mov
push
test
clc
cltd
subb
icebp
in
ja
jno
cs
adc
xchg
push
mov
lcall
sarb
mov
lea
hlt
mov
call
inc
imulb
test
add
inc
rorl
inc
lods
jle
adc
mov
pop
jo
mov
push
aad
in
cltd
cld
das
cli
pushl
repnz
mov
test
mov
pop
out
xchg
roll
push
xor
xor
adc
sub
jl
jl
pop
std
nop
adc
xchg
add
std
add
adc
repz
mov
add
and
xor
out
shlb
sbbb
data16
sub
jmp
xor
pop
icebp
incl
iret
fcomp
jg
leave
xor
fmulp
sub
negb
mov
pop
add
mov
mov
mov
loop
gs
ljmp
ljmp
gs
jo
dec
mov
stos
fisttps
pcmpgtd
iret
mov
xor
xor
jno
mov
lock
dec
pop
test
fisubl
mov
das
mov
dec
xchg
loope
add
cmp
std
sub
repz
cmpsb
cmp
sub
push
dec
add
sub
add
adc
ret
xchg
or
cmpsl
jge
lahf
sub
call
mov
fdivl
inc
sahf
inc
add
and
or
rolb
sbb
xor
mov
inc
fsubs
ss
xor
test
fisubs
add
sub
push
test
in
lods
add
or
aas
arpl
loop
fs
loopne
jae
mov
fistl
push
cmpsb
ljmp
call
push
mov
ret
pop
cmp
xchg
mov
pop
insl
sbb
cmpsb
push
inc
fadds
mov
push
sar
pop
ljmp
or
lods
add
push
push
ljmp
call
jbe
push
jle
fisubrl
or
test
fsubr
mov
insb
mov
or
xor
dec
adc
lods
lret
aad
jbe
mov
push
cwtl
pop
js
xor
je
ss
pop
add
and
repnz
inc
hlt
loopne
loope
data16
fidivrs
js
in
aaa
and
dec
into
sbb
mulb
and
or
pop
aas
test
dec
mov
ret
cmp
xchg
sbb
adc
sbbb
mov
push
js
add
int3
jne
mov
ret
xchg
pop
adc
push
add
rolb
insb
jmp
fdivrp
mov
push
and
fwait
ret
insb
xchg
lret
mov
cmp
add
mov
test
mov
adc
adc
cmp
ss
mov
or
lret
pop
cmp
jge
fcomip
fistps
add
sbb
add
xchg
or
mov
inc
sbbb
movsbl
into
mov
cmp
pop
pop
push
clc
aas
sbb
cwtl
stos
or
cmc
add
inc
outsb
clc
subb
sbb
add
ja
pop
push
or
cmp
and
outsb
js
ja,pt
mov
pop
decl
inc
movsb
filds
xorb
or
mov
jmp
sbb
lea
out
sar
loop
pop
and
add
jb
jno
jp
int3
sahf
cmp
pop
les
push
fidivrl
ja
mov
jne
not
adc
sahf
pop
inc
test
out
push
icebp
aas
push
cmpsb
sahf
mov
jmp
dec
inc
pop
add
sbb
sbbl
jo
roll
inc
inc
mov
inc
jo
sbb
fistpl
mov
dec
movsb
ret
cli
or
in
dec
pop
cmpsb
pop
add
dec
xchg
push
pop
jbe
inc
orb
dec
in
mov
arpl
test
push
lock
jmp
push
inc
enter
pop
pop
add
out
or
add
into
aad
loop
cmc
je
loop
sbb
or
xor
sbb
ds
jl
scas
imul
push
cmp
int3
sbb
mov
inc
fwait
sbb
jg
std
add
add
aad
xchg
into
xor
lcall
data16
sbb
add
and
mov
pushf
mov
sti
mov
push
mov
add
pop
iret
call
mov
jp
mov
loop
popf
push
mov
push
push
rcrl
xchg
mov
mov
ja
hlt
out
pop
xchg
push
pop
mov
cwtl
iret
cs
sub
add
sahf
clc
mov
sbb
and
jb
pop
push
and
pop
jp
in
xchg
adc
imul
pop
pusha
clc
imul
outsl
vxorps
dec
push
test
std
data16
or
jp
in
jns
clc
scas
fdivs
pusha
andl
out
dec
add
cmp
and
adc
adc
out
dec
out
xchg
xchg
pop
jl
pop
xor
loop
jae
mov
movsb
lret
xchg
xchg
stos
adc
leave
sbb
add
jge
out
pop
inc
xchg
mov
cmp
lahf
fiaddl
and
mov
adc
fisubs
push
cmp
dec
sub
xchg
addr16
nop
les
decb
cld
or
lret
arpl
jne
pop
addb
mov
xchg
andb
loop
inc
mov
mov
iret
loopne
mov
pop
stos
mov
pop
icebp
rcr
nop
and
xor
inc
mov
xlat
outsl
sub
push
cmpsl
mov
testb
pop
clc
outsl
dec
and
pop
sti
mov
add
sbb
hlt
incl
add
push
push
and
xchg
es
stos
scas
mov
xchg
push
ljmp
orb
dec
and
icebp
scas
call
shlb
pop
je
je
lock
xlat
xchg
les
lcall
pop
adc
xor
adc
fimull
add
sbb
cld
outsl
out
xchg
and
mov
nop
push
and
data16
lock
inc
pop
or
or
fs
mov
dec
loop
gs
jmp
inc
ret
imul
ds
dec
pop
outsb
call
pop
cmp
scas
xor
in
mov
lods
jbe
and
fistpll
or
shll
movsl
or
jo
fistpll
jg
sbb
jno
jl
dec
decb
mov
jg
jle
aad
js
cmc
adc
scas
addb
jo
mov
and
hlt
cmp
call
jbe
xchg
loope
andb
ucomiss
push
or
inc
lods
lds
sub
xor
loopne,pn
push
sahf
pop
adc
pushf
insb
repnz
and
call
lcall
cmp
aas
jb
inc
pop
arpl
inc
aad
hlt
jne
int
inc
dec
fisubl
fidivrl
cltd
inc
xor
sahf
xchg
pushl
mov
jp
inc
ret
bound
pop
push
and
cmp
push
xor
adc
cmc
addps
sbb
fidivrs
sub
jmp
pop
clc
push
sbb
jg
out
sbb
cmpsl
xchg
add
test
adc
pop
fistps
cs
mov
sbb
orl
addr16
mov
add
jb
mov
mov
xchg
add
pop
arpl
scas
mov
ss
sbb
push
or
jp
cli
or
in
adc
or
sbbb
jecxz
jg
pop
loopne
add
jle
imul
inc
pop
push
and
loopne
cmc
out
adc
insb
outsb
int3
xor
mov
mov
in
cmp
sti
mov
mov
outsb
cld
out
jmp
inc
add
cli
in
pop
jg
add
inc
pushf
addl
fisubrl
lcall
cs
mov
xor
inc
cmp
std
or
sahf
mov
fld
sti
ss
pusha
call
call
push
imull
sbb
loopne
dec
out
xchg
xor
xchg
inc
dec
cltd
rorb
icebp
call
and
xchg
and
fsubrl
mov
mov
aas
or
push
out
add
inc
ss
mov
mov
cmovs
je
in
dec
cmp
inc
adc
enter
sbb
mov
push
mov
loop
aas
lds
add
sub
jge
dec
icebp
mov
push
lods
jecxz
sbb
mov
and
adc
cmpsl
jne
xchg
dec
andb
jle
jg
pop
mov
inc
push
sub
call
out
popa
mov
enter
loopne
or
xchg
lock
sbb
int
stos
mov
out
insl
mov
inc
dec
fldenv
icebp
xchg
mov
out
xchg
inc
cmp
or
sbb
and
call
rcl
dec
xchg
inc
in
mov
push
cwtl
add
shll
mov
or
sub
or
call
xchg
sub
pushf
movsl
add
mov
xchg
pop
test
or
sub
in
push
leave
add
rorb
ds
jg
stc
jl
daa
sbb
jbe
cmp
shr
sub
mov
out
mov
subb
icebp
mov
jb
xorb
dec
add
test
pop
sbb
jnp
or
int3
rcll
lret
and
mov
shlb
push
inc
or
enter
stos
dec
dec
sub
pop
push
stos
xchg
cmp
xorb
cmp
insb
mov
pop
fwait
inc
mov
mov
int3
in
dec
int
nop
out
push
adc
push
mov
push
pop
inc
xchg
out
dec
cli
out
xor
outsb
xchg
pop
adc
jl
nop
pop
cmp
insl
pop
or
cmp
mov
cld
pop
pop
std
cmp
cltd
lcall
add
xchg
xor
icebp
mov
inc
pushw
pop
sbbb
add
in
pop
inc
jg
dec
mov
pushf
loopne
add
push
rcll
or
sarb
mov
js
data16
ss
scas
mov
faddp
or
add
or
out
lret
push
mov
inc
pusha
mov
sub
popf
mov
sbb
add
xchg
inc
xchg
push
add
lret
adc
pop
or
sbb
repz
dec
cmp
inc
cmp
inc
aaa
pop
dec
sti
or
xorl
rorb
and
mov
aad
or
mov
out
imul
mov
adc
sub
test
sbbb
xchg
aaa
movsb
ljmp
in
xchg
hlt
or
mov
fcmovne
pushf
inc
aaa
dec
or
js
pop
mov
add
push
mov
adc
dec
mov
jg
sub
mov
pop
push
inc
sub
movsb
in
or
arpl
mov
jg
sub
mov
fisttps
in
lock
int3
out
push
ljmp
xor
dec
mov
cmp
loopne,pn
fcomip
or
and
mov
xor
test
inc
adc
push
mov
inc
ds
fidivl
inc
je
popf
hlt
inc
xchg
pop
dec
aam
lds
stos
push
aam
lahf
sub
movsb
sbb
sbb
pop
pop
add
outsl
sbbb
push
aam
xchg
mov
add
jmp
cmp
sub
insl
inc
aaa
jbe
cmpb
lods
mov
add
shr
in
roll
cmp
xor
add
lock
cmp
mov
mov
push
cltd
std
mov
fstl
push
add
add
or
sbb
add
es
add
cmpsl
js
out
push
std
sub
push
mov
aaa
pop
jle
es
push
es
mov
scas
lahf
fidivrs
aas
ds
xchg
inc
lock
in
push
dec
sbb
in
fsub
or
daa
or
in
mov
nop
insl
outsb
leave
jle
mov
mov
xchg
js
adc
or
mov
fmul
sbb
sbb
loopne
fbld
adc
jno
pop
and
add
cld
adc
les
cmp
push
adc
add
ret
scas
mov
into
pop
sbb
lods
or
rcll
leave
or
dec
dec
jg
call
incb
xor
mov
and
pushf
mov
mov
test
in
add
test
adc
cmp
test
pop
dec
mov
pusha
fstpt
fimull
fidivrs
xor
lahf
sbb
mov
lds
imul
ret
jnp
mov
mov
sub
movsb
xor
pop
cli
and
lret
cmp
les
cmpb
test
pop
cmp
jo
lock
repnz
and
lds
outsb
fisubrl
dec
cld
cmpsb
pop
inc
xchg
push
sbb
xchg
jl
mov
roll
call
mov
mov
je
cmp
jno
jecxz
lcall
cs
or
jecxz
leave
iret
or
jae
adc
xlat
sti
loope
jle
push
lcall
divl
dec
jl
and
outsb
adcb
int
mov
xlat
pop
or
adc
call
inc
sbb
push
sbbb
js
icebp
nop
lods
aam
dec
cwtl
pop
xchg
insb
and
sub
mov
out
lret
rorb
arpl
lcall
xchg
inc
mov
stos
jle
xlat
lcall
mov
ror
mov
pop
lcall
sub
sub
fs
push
dec
nop
adc
pusha
sarb
sahf
or
jp
jle
jg
mul
mov
data16
addl
lret
loopne
icebp
mov
dec
cwtl
enter
iret
push
js
jnp
test
jg
in
mov
out
adc
lods
jg
mov
push
ds
sbb
out
into
xor
adc
xlat
ret
sbb
mov
mov
mov
orb
cmpsl
push
ljmp
pushf
les
enter
add
icebp
pushw
adc
cs
fistl
mov
in
add
insb
push
cld
iret
xchg
bound
dec
push
fdivrs
mov
push
repnz
sub
push
pop
mov
or
inc
cs
and
sub
push
adc
mov
cmp
es
mov
dec
out
test
push
add
icebp
dec
dec
cmp
stc
xor
push
icebp
or
push
cmpsb
dec
dec
mov
popa
cwtl
cwtl
lret
lcall
es
xchg
sbbl
mov
sti
mov
les
mov
rclb
adc
jp
inc
pop
int3
test
gs
loop
cmpsb
pop
stos
jmp
mov
xchg
add
mov
cmc
push
sub
and
lret
out
addr16
adc
xlat
aas
andb
sbbb
mov
and
movsb
sarl
mov
inc
or
ret
inc
add
mov
sub
pop
inc
or
sub
sbb
jmp
fs
jp
int3
repz
pop
out
jno
lods
stc
frstor
inc
mov
adc
push
xor
hlt
sbb
mov
test
cli
sbb
sbb
int3
xorb
cli
cmpsb
dec
lcall
loopne
ja
mov
mov
inc
lcall
mov
ds
jo
jle
daa
pop
leave
jge
pop
rol
xor
push
xor
jmp
mov
int3
adc
rcll
dec
dec
rcrl
mov
add
sub
adc
cld
xchg
mov
mov
hlt
cmp
push
cld
mov
test
lods
mov
arpl
fcomps
add
xchg
in
dec
jo
popa
and
js
dec
pop
addb
push
loopne
and
out
inc
lea
shll
ljmp
mov
lfs
js
iret
xorb
xor
jno
test
mov
and
insl
fdiv
leave
sti
pop
insb
js
ljmp
scas
sbb
shl
jp
mov
inc
repnz
stos
mov
scas
inc
test
mov
pop
push
jp
ffree
sarb
leave
in
into
push
jb
push
decb
pop
jns
or
addb
cmp
adc
imul
jmp
call
js
enter
mov
mov
sahf
xchg
pushl
nop
iret
scas
jmp
leave
hlt
das
sub
pop
in
jle
dec
loop
xchg
les
scas
gs
lret
dec
add
adc
and
mov
mov
xchg
and
mov
cmp
ret
jg
cmc
aas
jo
movsl
push
icebp
and
mov
sar
mov
std
ret
lahf
mov
inc
clc
mov
and
push
mov
mov
sbbb
pop
jbe
mov
mov
jl
lock
out
ja
ljmp
pop
aas
push
cld
sbb
and
sbb
xchg
je
pop
imul
lret
and
fadds
dec
mov
adc
imull
jb
ja
inc
mov
je
ja
jecxz
pop
pop
add
fcompl
mov
pop
scas
test
push
pop
test
fsubl
jle
lcall
movsl
push
xor
push
cmp
mov
xchg
out
cmp
and
xlat
cmp
decl
mov
mov
test
mov
push
es
sub
lret
jecxz
dec
sub
xchg
jbe
decl
add
fcompp
inc
ror
lock
pop
mov
std
mov
fiaddl
es
push
pop
into
int
cmpsb
and
lock
fldl
add
clc
mov
mov
ja
mov
mov
test
pop
xchg
cmp
dec
iret
out
pop
push
call
negl
sub
pop
and
mov
mov
rclb
neg
or
test
hlt
ret
sbb
int
adc
bound
andb
sbb
inc
pop
jmp
nop
mov
imulb
jae
add
mov
add
enter
mov
or
stos
cmp
xor
outsl
xor
cwtl
fidivrl
das
dec
push
hlt
jg
test
xor
sbb
fbstp
cld
fucomip
xor
es
and
rcl
icebp
aam
dec
mov
jnp
xchg
adc
add
aam
push
xlat
push
dec
add
mov
push
ss
mov
xchg
mov
and
rcrb
insb
cmp
mov
jmp
push
test
inc
test
aad
mov
pop
pop
lea
push
sahf
outsl
push
mov
mov
mov
pop
jle
jo
adcl
jle
mov
jecxz
outsl
push
stos
mov
xor
int3
pushf
jno
scas
push
or
fwait
cmp
fisubs
aas
rolb
in
xchg
jge
repnz
jno
cwtl
inc
mov
decl
test
mov
scas
or
dec
roll
xlat
add
into
fisttpl
cltd
sub
cmp
mov
shlb
push
cmp
and
add
mov
and
das
nop
adc
cmpsl
mov
dec
fldt
clc
sbb
cmp
cltd
add
xor
mov
inc
add
mov
incb
sbb
add
mov
mov
dec
rcrb
js
adc
mov
push
and
mov
dec
and
cwtl
add
lcall
ret
pushf
aas
pop
or
push
cmp
dec
dec
cs
incl
mov
push
and
mul
stc
add
adc
inc
mov
int
ret
sub
cli
decl
or
pop
je
inc
fwait
dec
popl
adc
cmp
push
mov
mov
sub
mov
inc
sbb
cmp
inc
les
lods
pop
sub
loope
aaa
sub
decl
pop
xchg
scas
js
fwait
std
or
mov
out
in
or
es
jno
mov
daa
mov
rcl
sub
push
outsb
in
mov
mov
mov
pop
rcrb
inc
pop
hlt
add
jnp
mov
pop
bound
xchg
icebp
test
push
mov
je
mov
mov
outsb
jecxz
dec
in
loop
jnp
pop
ds
out
push
add
and
pop
push
pop
sub
test
cmc
into
stc
and
js
call
out
roll
imul
dec
std
outsb
loopne
lods
ret
jo
ss
std
inc
jbe
loop
mov
icebp
stos
jg
or
jbe
lahf
jle
stos
fisubs
mov
adc
bound
dec
and
jo
fdivp
add
ss
xchg
pop
adcb
sub
icebp
adc
fists
aas
movsl
pop
stos
jg
or
inc
pop
out
test
mov
sti
inc
and
mov
fdivrs
out
xchg
imul
and
sbb
cmp
fisubl
sbb
and
sbb
adc
sub
call
cmp
movd
cmp
sarb
mov
lcallw
sub
cmp
sahf
outsl
adc
pusha
jge
push
cmpsl
rolb
movsb
push
inc
sub
mov
inc
cmp
xchg
icebp
jg
and
xor
sbb
sbb
sbb
decl
or
cmp
shll
in
pop
mov
xchg
push
in
jb
pop
dec
mov
fisttpll
pop
xor
mov
dec
popf
outsl
pushw
pop
loopne
and
mov
icebp
and
push
aas
rolb
in
inc
loop
xchg
mov
je
mov
ret
jo
jle
jne
lea
add
pop
xchg
adc
sbb
jbe
icebp
scas
pop
out
inc
mov
mov
push
push
inc
sbb
inc
pop
mov
cmpsl
cwtl
or
cs
sbb
push
jo
outsl
inc
sub
mov
imul
decb
xchg
inc
and
inc
mov
adc
aas
sbb
jb
mov
dec
xchg
mov
inc
cmp
add
pop
push
ret
xchg
jg
cmp
jl
adc
fs
push
ret
adc
mov
mov
stos
loopne
or
rcr
cli
loope
call
rolb
and
icebp
popa
sbb
jecxz
int3
cld
mov
sbb
aaa
cld
and
dec
jne
aad
sub
xchg
mov
adc
adc
nop
sarl
mov
inc
cltd
jl
xchg
cltd
adc
jb
loope
ljmp
in
hlt
cwtl
inc
or
pop
adc
push
push
sub
lds
and
aaa
mov
leave
inc
fnstenv
clc
jp
mov
fsubl
and
xor
clc
inc
es
arpl
into
or
or
xchg
cli
push
cmp
lcall
sbb
push
mov
test
add
mov
cli
inc
ljmp
cmp
jmp
jl
movsb
subb
xor
clc
jg
mov
sub
push
ret
std
daa
addr16
xchg
lods
sti
mov
cmp
fsubs
add
lret
jecxz
mov
adc
inc
push
mov
xchg
jbe
test
push
xlat
lock
jo
imul
fwait
cmp
dec
push
movsb
test
pop
mov
xchg
dec
adc
cmpsl
ficoml
push
sub
add
int3
cmp
push
fcomps
cmp
adc
in
mov
out
loope
add
xchg
or
pop
sbb
add
or
addb
or
data16
push
fcoml
mov
pushf
cs
sbb
mov
or
pushl
rolb
addl
fiaddl
test
add
jb
scas
cmpsl
icebp
sub
sub
dec
test
and
cmp
adc
push
and
call
sub
lret
adc
xchg
fisttpl
call
mov
movsb
and
repz
scas
mov
sub
mov
mov
push
shll
xchg
cli
pop
xor
mov
jle
mov
add
sub
imulb
sub
cmp
cld
shufps
lds
aad
test
mov
rorl
cmp
xor
xor
dec
test
in
push
xchg
sbb
mov
lock
sbb
or
outsl
fwait
mov
mov
mov
xor
lea
int
hlt
clc
cli
add
pusha
das
js
cld
ja
inc
in
add
pop
lcall
es
ficoms
dec
fsubrs
retw
icebp
jge
xor
incl
fsub
scas
mov
pop
mov
icebp
adc
rcrb
test
bound
jg
out
shlb
daa
into
mov
inc
in
jbe
cmp
sbb
push
sarb
mov
lods
dec
loop
pushf
andb
cmp
fldt
inc
mov
mov
mov
stos
sti
mov
sti
out
fsub
mov
cmp
cld
aas
mov
dec
or
cltd
mov
out
loope
jo
scas
and
sbb
push
and
push
or
mov
jo
mov
pop
jg
fisttps
cmpsl
xchg
pop
adc
pop
mov
push
in
xor
incl
push
add
mov
or
mov
inc
xor
adc
mov
push
clc
mov
and
outsb
fisttpll
cld
popf
inc
xchg
add
outsb
shrb
jmp
push
sbb
int
adc
jecxz
dec
hlt
add
add
sub
inc
ret
xchg
push
dec
mov
mov
repz
rclb
mov
jmp
pop
test
mov
sbb
ficomps
lock
clc
cmp
in
or
call
iret
hlt
inc
sbb
pop
add
pop
xchg
pop
push
push
rolb
lcall
clc
repnz
cld
fbld
test
pusha
clc
inc
pop
hlt
push
and
or
mov
iret
and
xor
movl
inc
pop
inc
dec
sar
fcompl
test
in
sbb
sbb
decb
add
mov
jnp
cmpsl
ror
jb
add
adc
inc
enter
int
movsb
out
js
loop
or
lock
fmull
fwait
incl
stos
sbb
inc
ror
mov
pop
or
pushl
adc
bound
push
jo
fisttps
test
test
cs
fdiv
data16
inc
lcall
imul
xchg
mov
mov
and
scas
fadds
testb
lea
push
adc
gs
cmp
leave
pushw
adc
push
cld
xchg
shl
pop
jne
xor
lcall
mov
fdivp
aaa
push
out
sub
jl
mov
bound
push
adc
scas
loopne
pop
jp
pop
dec
push
jg
adc
xchg
sub
incb
notb
arpl
and
adc
data16
mov
subb
pushl
dec
aam
out
aad
stos
jo
ss
mov
std
sub
xchg
fisttpl
push
push
jle
push
sbb
sbb
push
cwtl
mov
int3
repnz
push
loopne
scas
stos
nop
push
lds
in
fsts
push
sbbl
mov
xchg
pop
and
jne
xchg
outsl
sbbb
cwtl
mov
mov
pop
cmp
scas
pop
mov
outsl
pop
fmull
mov
cmp
or
mov
add
insl
cmpsb
xchg
rcr
pop
hlt
xor
mov
loop
and
mov
shlb
xor
out
inc
mov
ret
lea
fsubs
mov
ss
cwtl
mov
cmpsl
add
cmp
notl
rolb
mov
pop
loop
xor
andb
sub
or
popf
nop
loopne
std
add
mov
sub
mov
jmp
sub
adc
pop
mov
sbb
mov
outsl
out
nop
sahf
jns
ret
adc
pop
popf
cwtl
adc
xchg
or
mov
dec
movsl
xchg
je
call
or
rol
add
shll
sub
mov
lea
push
fisttpll
movsl
or
notl
fcmovnb
loopw
cli
lret
fwait
and
mov
or
push
jg
cmp
cwtl
or
inc
dec
enter
insb
test
pop
add
fcmovnb
mov
test
push
mov
imul
sbb
movsb
and
add
insb
aam
dec
popf
cmpsb
clc
incl
bound
loope
out
mov
pop
addl
sbb
push
add
fsubl
jbe
out
mov
inc
mov
push
lods
clc
fisubrs
add
fidivs
sarb
push
sbb
ret
sbb
icebp
jg
ljmp
dec
in
pop
push
fisubrl
ja
mov
mov
je
cmp
call
cmovne
lods
inc
add
pop
sbb
arpl
in
lcall
or
mov
mov
cmpsl
mov
pushl
ret
xlat
inc
dec
call
mov
aas
stos
jp
outsb
jle
mov
adc
movsb
xchg
notl
add
push
pop
adc
xchg
push
mov
add
xor
enter
or
enter
cmpsl
xchg
jb
faddl
outsl
test
push
sub
mulb
in
int3
cs
bound
mov
andl
inc
xor
pop
ret
movsb
loop
in
ds
lea
adcb
dec
add
jle
mov
jns
mov
movb
jbe
jns
sub
jo
hlt
adc
or
pop
faddp
aaa
dec
add
or
into
pop
repnz
add
push
push
add
filds
mov
fiaddl
adc
and
mov
rorl
jns
pop
add
icebp
sbbb
les
adc
insb
mov
mov
xor
jo
push
lock
sbb
repz
pop
push
push
test
adc
push
lahf
dec
sub
mov
adc
dec
nop
cmp
push
sbb
scas
dec
fcompl
sub
jle
scas
dec
add
inc
daa
inc
sti
adc
or
mov
xchg
push
add
ja
mov
pop
pop
dec
fs
jle
mov
out
ljmp
outsl
jmp
pop
xor
cmpsl
imul
mov
xchg
mov
arpl
and
pop
dec
xchg
push
adc
mov
dec
int
xor
clc
lahf
testb
int
mov
and
push
movsb
aaa
stc
shll
cltd
cmp
js,pt
adc
pop
mov
fsts
repnz
imul
sbb
push
fnsave
nop
push
scas
std
data16
lea
cltd
mov
out
sbb
cwtl
xchg
pop
cld
outsb
add
xor
fsubp
jl
cmp
xor
es
cli
addr16
or
movsb
mov
mov
xor
sbb
fsubs
andb
mov
or
cld
mov
mov
xchg
add
scas
scas
lcall
into
mov
in
adc
adc
cmp
push
gs
sub
fwait
movsb
sub
pop
cli
addr16
test
dec
xchg
mov
mov
pusha
pop
decl
les
jg
xchg
cmp
cli
mov
jae
adc
loop
jmp
shlb
loopne
dec
cmp
add
lock
dec
icebp
lods
into
mov
negb
insb
imul
lcall
xor
jp
pop
insb
ror
cwtl
out
imul
loop
lahf
int3
outsb
jmp
nop
push
xor
adc
mov
mov
aas
mov
xor
incl
sbb
ret
inc
jecxz
in
out
mov
dec
loopne
inc
ret
aas
xor
cmp
icebp
add
add
mov
pusha
or
popa
cwtl
popf
sbb
xchg
aam
cmpsb
lea
rorl
xor
fildll
adc
test
adc
jg
add
lods
and
jo
cli
incl
call
jmp
nop
scas
fwait
stc
xor
inc
and
xor
sti
cs
pusha
pop
inc
pop
add
lods
jns
nop
push
sub
and
test
or
adc
sub
adc
inc
xchg
out
sub
fildl
adc
add
inc
jne
sti
mov
jns
andb
iret
xor
pop
inc
inc
adc
in
int3
ss
aas
dec
imul
xchg
pop
add
mov
hlt
rclb
rcrl
jo
push
dec
xchg
mov
scas
adc
icebp
add
in
mov
int
push
mov
xchg
incb
cmp
adc
mov
aam
jmp
jl
cmpsb
jg
xchg
js
sarb
pop
pop
add
adc
add
mov
loop
cmpsb
push
cmc
push
rcll
adcb
je
and
clc
jae
mov
cmc
or
mov
adc
push
outsb
sbb
nop
je
incl
cmp
jb
into
lahf
aam
andl
pop
xchg
mov
add
or
scas
jg
pop
xlat
mov
fdivl
pusha
pop
pop
lock
addl
sub
xchg
shr
push
push
inc
mov
push
adc
repnz
dec
nop
xchg
fcomip
movsb
int3
pop
mov
xchg
add
stc
mov
icebp
fistps
pusha
call
add
into
call
call
push
mov
dec
dec
xchg
and
daa
ljmp
pushf
mov
push
push
ret
sub
add
insb
enter
fld
scas
push
fcomip
pushl
dec
out
dec
daa
jle
mov
add
roll
nop
adc
roll
push
or
cmp
mov
fs
xor
push
lock
test
push
mov
decb
xchg
outsl
or
xchg
lea
cmc
inc
cmp
outsb
pusha
push
pusha
int3
das
fwait
repnz
andl
jle
mov
mov
dec
jmp
xor
mov
pushl
add
js
jae
fwait
test
sbb
and
outsl
inc
mov
xchg
push
add
dec
push
push
ret
push
dec
add
je
adc
fwait
add
test
xchg
and
adc
or
ret
cli
scas
dec
pop
cmp
nop
bnd
hlt
inc
icebp
popa
xchg
xchg
pop
popf
int3
aam
cld
add
pop
movsl
xchg
out
mov
xchg
jne
xor
xchg
xchg
mov
sbb
shrl
cmp
mov
push
negl
lcall
or
insb
stos
cmp
push
iret
es
jl
out
aad
push
push
shlb
fbstp
mov
sahf
es
fwait
inc
call
gs
mov
ret
xor
xorb
mov
mov
mov
xlat
js
push
mov
test
outsb
mov
inc
sbb
cs
mov
sub
mov
inc
mov
fistpll
pop
std
jle
inc
sub
mov
and
push
mov
les
jb
mov
adc
and
test
dec
rolb
dec
adc
add
push
shrl
enter
movsb
and
pop
cld
add
ret
sar
je
je
sbb
dec
push
je
inc
aad
push
lret
jg
enter
cmp
sarl
jl
mov
dec
outsl
rolb
fcomps
inc
in
xorb
movsb
inc
jle
mov
jge
push
xlat
fadds
jle
roll
rcr
les
mov
loopne
jle
lret
jne
fmull
xchg
into
imul
mov
sub
adcl
sti
mov
push
mov
fs
sbb
cmp
sbb
mov
repz
repz
out
das
sub
sub
sahf
and
inc
inc
lods
cmp
add
imul
int
imul
int3
cs
daa
test
nop
mov
into
mov
pusha
push
mov
ret
ret
xchg
mov
subl
popa
cmpsl
sub
pop
push
push
adc
lods
incl
cmp
and
jecxz
or
mov
push
inc
push
sub
and
sbbl
sub
lock
pop
loopne
jb
sub
int
mov
inc
nop
mov
dec
pop
push
mov
popa
dec
pusha
mov
ret
jmp
bound
dec
rcr
xlat
scas
fistpl
mov
std
loopne
hlt
push
mov
scas
jo
mov
out
push
insb
dec
pop
arpl
jmp
add
aam
in
pop
cli
adc
adc
loopne
pop
adc
imull
inc
adc
dec
mov
cld
pop
adc
mov
cmp
lods
lahf
popf
mov
hlt
ljmp
addl
add
mov
std
fists
jbe
js
sub
fdivrs
pop
hlt
andb
push
ret
xor
mov
jne
cmp
scas
sbb
dec
sbb
mov
push
dec
xchg
lods
inc
or
push
mov
sub
or
sbb
outsl
and
cltd
xor
pop
inc
push
call
pop
insb
lds
orb
test
xchg
sub
lock
mov
dec
in
adc
and
jl
add
iret
test
dec
sbb
inc
ja
andb
call
xchg
out
sub
inc
aas
jne
cmp
mov
aas
add
loopne
inc
mov
dec
add
jne
adc
add
and
repnz
sbb
ret
push
out
stos
es
and
sbb
inc
pop
sbb
dec
testb
bound
bnd
and
push
cmc
enter
add
loop
adcb
add
es
mov
add
pop
lret
in
ljmp
out
ja
movsb
out
stos
mov
lods
adcl
add
shrb
cmc
sbb
push
scas
or
or
call
and
jmp
sti
xchg
fiadds
xchg
or
dec
mov
fildl
mov
adc
mov
fbstp
inc
and
jbe
jecxz
jbe
pop
cmp
rclb
xchg
aas
sub
lahf
das
shll
xchg
dec
in
lea
dec
ror
movsb
sub
and
dec
cmp
ja
and
mov
rorb
cmp
add
pop
out
pushl
decb
pushf
insb
inc
inc
lods
and
xor
lods
mov
and
push
push
fidivs
js
orb
loopne
jle
xchg
sbb
jbe
add
mov
leave
je
rolb
ret
jo
mov
loope
or
xorb
std
fldl
out
push
sbbl
test
xchg
and
xchg
jno
pop
ret
cld
lods
add
or
and
add
or
pop
mov
es
sub
movsb
jle
sbb
sbb
push
scas
aam
icebp
pop
jb
push
pop
pop
xor
or
ds
push
js
test
dec
shlb
mov
mov
das
mov
or
faddp
xor
call
xchg
clc
decl
add
or
dec
cltd
mov
or
jno
or
dec
inc
mov
aam
testb
addr16
call
in
mov
push
or
out
or
jmp
jae
mov
test
rorb
fwait
adc
shrl
jmp
xchg
sbb
pop
bound
cmpb
mov
lock
sub
push
mov
lds
lods
adc
lcall
test
decl
sbb
pop
xchg
add
cli
mov
hlt
fnstenv
pop
mov
call
xchg
mov
mov
jge
inc
into
or
add
cmc
xor
pop
lcall
push
repz
push
clc
sub
inc
into
clc
dec
lcall
lods
jmp
imul
mov
fisubs
cmpsb
pop
insb
cmp
or
pusha
inc
iret
in
jb
pusha
cmpsl
test
mov
cmc
fcmovnb
pop
shl
adc
or
jb
stos
jle
fisubl
mov
lock
pop
or
fidivs
jl
movsb
scas
dec
cmp
cmpb
mov
lods
inc
cld
adc
dec
bound
in
sbb
push
push
add
adc
test
inc
mov
mov
sbb
add
jp
jp
jno
mov
andl
mov
mov
test
pop
fimuls
or
iret
mov
daa
nop
pop
sbb
lret
cli
add
sbbl
adc
cli
mov
mov
push
mov
adcb
pop
js
push
cwtl
lock
scas
out
pop
outsl
outsl
push
xchg
xchg
js
aas
test
stc
add
lahf
daa
into
adc
sbb
insl
mov
es
fsubrs
popf
cli
lods
hlt
add
mov
mov
jmp
fs
es
sbbb
repnz
mov
mov
xchg
iret
mov
sbb
pop
rorl
dec
mov
lea
outsl
lret
stos
xlat
mov
sbb
sub
dec
jnp
cli
mov
sti
adc
imul
clc
out
add
loopne
adc
or
fwait
mov
loop
add
xchg
scas
mov
pop
add
xchg
xor
addl
loope
mov
add
sub
cs
jo
jg
jmp
std
pushf
mov
add
and
shrl
mov
add
pop
mov
xlat
mov
add
insb
sub
xlat
icebp
and
push
cld
mov
push
mov
aaa
test
or
pop
push
movb
psllq
add
jp
test
jg
ja
das
cltd
mov
mov
subl
repnz
ljmp
mov
lcall
js
subb
dec
push
mov
mov
sbb
or
or
dec
or
cmp
hlt
add
jmp
ja
lock
das
mov
sbb
bound
mov
push
push
imul
sbb
pop
add
add
and
movsl
adc
dec
push
loopne
sub
ljmp
call
jns
mov
xchg
ljmp
mov
add
lcall
sub
adc
dec
cld
sub
lock
inc
cmp
pop
mov
in
and
lahf
cmp
jne
lock
jmp
outsb
fwait
mov
adc
adc
fsubs
mov
fdivl
sub
mov
test
or
mov
jo,pn
cmp
inc
xor
and
stc
lcall
xchg
adc
or
data16
nop
cs
in
and
lods
sti
jl
movsl
sbb
dec
jo
pop
sub
inc
outsb
call
inc
xor
inc
rolb
loope
fwait
scas
mov
or
shrb
lock
jne,pt
icebp
mov
repnz
call
xchg
push
adcb
xchg
clc
add
push
sbb
add
mov
pusha
and
ljmp
sbb
inc
push
loopne
inc
jae
inc
push
cmp
or
out
pop
call
in
adc
jne
jp
incl
jbe
mov
test
push
orl
fists
inc
cld
dec
fiaddl
and
and
and
mov
jg
dec
xchg
xchg
add
lock
std
ja
insb
cmp
xchg
add
or
cmp
dec
stos
mov
test
jo
dec
cwtl
stos
push
sbb
ja
test
fistpl
mov
and
fcoms
jmp
inc
push
iret
jle
rorb
inc
jmp
mov
scas
sub
icebp
movsb
cmp
jg
out
pop
ret
jl
add
inc
add
enter
adc
sbb
push
inc
test
out
mov
mov
fs
out
or
pop
pop
jmp
sbb
adc
ret
xchg
test
xchg
sub
jae
fwait
mov
cmp
add
mov
arpl
pushf
jp
jne
mov
inc
decl
inc
push
xchg
stc
or
dec
jmp
insb
xchg
dec
nop
bound
or
lcall
dec
cmp
movl
scas
jle
cmp
adc
push
pop
movsb
adcb
imul
mov
pop
add
jg
mov
nop
cmp
aad
cmp
enter
repz
ja
outsl
pop
sbb
push
stc
hlt
xchg
mov
add
stos
xchg
ss
icebp
daa
adc
ds
gs
add
xor
shrb
sbb
mov
lahf
inc
in
and
dec
dec
adc
push
fistps
ja
push
je
dec
dec
jl
add
nop
out
decb
dec
jge
cmpb
xor
or
call
or
test
push
repz
fldt
jns
aaa
jbe
hlt
das
repnz
out
mov
inc
movsb
out
je
ljmp
aad
mov
dec
aaa
and
mov
xor
pop
jle
mul
aaa
cld
add
add
inc
add
cld
movd
adc
sub
pop
das
inc
aaa
jle
in
loop
xor
fisttpll
push
push
bound
add
sub
mov
inc
and
mov
inc
lods
push
pop
rcrb
mov
jge
cmp
sub
or
rcll
push
fildll
mov
push
shr
out
inc
add
mov
sub
subb
add
movsl
scas
les
in
xchg
adc
bound
pusha
push
add
add
cmc
imulb
add
gs
add
add
dec
scas
dec
mov
mov
dec
insl
in
lock
xchg
scas
sub
and
inc
mov
adc
test
jmp
push
loope
inc
mov
cmp
fisttpll
ret
enter
xchg
cmp
fadds
mov
xor
and
call
or
add
inc
cld
inc
outsl
nop
fimull
xor
inc
jmp
lret
hlt
ljmp
adc
adc
pop
fs
mov
jo
ret
jne
incb
dec
sarb
xchg
mov
mov
frstor
mov
dec
int
xchg
inc
clc
pop
in
mov
jle
shl
nop
mov
sti
dec
xchg
iret
scas
test
sbb
loop
adc
inc
cmp
outsb
jo
sar
and
mov
pop
add
pop
js
sub
push
mov
push
push
aad
xchg
inc
dec
ljmp
mov
jecxz
mov
popa
xchg
fimuls
loope
call
gs
test
jmp
ja
and
or
jne
cld
clc
filds
mov
sarl
mov
push
inc
or
sub
les
sbb
out
lcall
fs
cmp
ss
inc
ljmp
call
xor
add
out
add
mov
sub
cmp
jle
fcoms
xchg
incl
dec
insb
xor
xchg
or
jg,pt
gs
and
leave
xchg
push
xor
or
sub
cmp
fimuls
sub
dec
push
and
imul
test
out
rcrb
xchg
mov
xchg
enter
dec
jmp
mov
lcall
jle
inc
clc
inc
incl
popf
adc
or
add
or
fwait
stos
ja
mov
push
hlt
fs
mov
adc
or
popf
hlt
and
cmc
insl
std
xor
or
dec
cmp
pop
in
cmpsb
shrb
in
mov
inc
lock
aaa
jecxz
pop
sub
sub
xchg
dec
jle
mov
add
stos
jp
push
inc
jp
inc
sub
xchg
std
scas
xor
inc
imul
test
inc
sub
sub
pop
add
cmp
jb
adc
dec
fcompl
xor
sub
loopne
pop
lods
pop
jecxz
fsubr
cmc
or
add
std
fisubrs
dec
mov
jl
mov
mov
push
jns
js
out
push
adc
cld
cmpsb
add
pop
sub
lods
pusha
daa
daa
jle
fucomi
jge
pop
push
jmp
popa
cmp
add
jbe
xchg
inc
fnstsw
add
mov
lret
push
cwtl
sub
lods
daa
mov
int
lock
push
add
add
repz
in
call
ret
dec
es
stos
hlt
pop
cmp
dec
and
addl
mov
inc
out
fs
mov
in
fs
test
clc
and
cwtl
cmp
fistpll
imull
dec
push
int
jns
xor
add
insb
mov
pusha
pop
jl
aaa
dec
mov
and
mov
sbb
mov
aam
adc
in
mov
decb
fiadds
xor
ficompl
cmp
ljmp
cmp
xlat
loop
jecxz
add
xlat
pop
bound
nop
mov
les
popa
mov
and
repz
lea
mov
clc
fsubs
rorl
stc
enter
adc
inc
pop
loop
bound
add
add
test
dec
mov
dec
dec
loope
push
pop
adc
incl
add
les
das
jmp
ret
push
xchg
mov
mov
psrld
mov
daa
or
jne
xchg
mov
call
aam
xchg
cmc
fbstp
add
addb
adc
notb
lds
lock
xadd
mov
out
cmpsb
cmpsb
lret
imul
test
xchg
add
mov
add
mov
cld
dec
and
in
rorb
add
and
xchg
jnp
mov
cwtl
std
add
imul
mov
mov
push
mov
mov
pop
add
bound
mov
stos
orb
inc
punpcklwd
dec
and
push
loop
rclb
pop
mov
call
push
movsl
mov
test
xor
dec
add
jo
xor
jecxz
loop,pt
or
or
outsl
mov
sbbb
cmp
lods
or
stos
add
inc
fcmove
adc
inc
sbb
xor
sbb
pop
sbb
sahf
jb
test
mov
call
ret
push
sub
ret
rolb
scas
adc
loope
sub
jnp
cltd
inc
fwait
rcrb
fld
and
repnz
call
mov
mov
lcall
hlt
adc
in
pop
in
fidivrl
fisttps
sbb
rcrl
jge
push
add
cmp
ds
mov
xchg
sub
cltd
xchg
sub
push
inc
inc
adc
mulb
cs
jmp
push
adc
inc
pop
jmp
movsl
nop
pusha
dec
mov
mov
into
outsl
dec
adc
clc
or
rcll
sub
pusha
jl
sbb
pushl
iret
xchg
inc
jecxz
xorb
movsb
out
mov
and
gs
mov
outsb
sub
jp
decl
lods
add
and
ret
add
stos
int3
loopne
pop
aam
ret
or
mov
aaa
mov
pusha
repz
ficompl
and
mov
fimull
sbb
out
sub
repz
xor
sbbl
scas
faddl
dec
lcall
clc
or
lret
test
and
cli
cmpb
jo
push
add
insl
mov
xchg
clc
or
add
mov
sti
call
sub
test
adc
mov
jg
stos
pop
enter
sbb
xchg
ret
ljmp
cld
jg
in
mov
adc
xor
sahf
sbb
loop
sbb
and
push
cs
stos
jmp
mov
jne
add
outsl
inc
dec
jl
call
cmp
iret
int3
movsb
sub
cmp
cmc
mov
fwait
mov
gs
cli
dec
std
aam
subb
sbb
ja
mov
scas
mov
lock
pop
scas
ss
pop
mov
loopne
mov
inc
lahf
mov
add
das
mov
icebp
jecxz
mul
jne
push
fiadds
jmp
shlb
jmp
sbb
loop
inc
test
ffreep
jg
inc
or
sub
aas
adc
adc
sarb
shll
cmp
xor
loope
and
rclb
push
pushf
shlb
add
adc
shlb
call
outsl
pop
lods
xchg
fcoms
inc
loopne
aas
lret
xor
sub
dec
out
add
xchg
adc
adc
and
mov
cmp
push
push
stos
stos
cmp
pop
cwtl
ret
repz
jmp
push
mov
mov
or
mov
jno
incl
xor
rolb
add
insb
jg
add
aas
outsb
rcrb
cmp
cmc
dec
shl
xor
ret
mov
imul
cmp
jae
jp
cwtl
insl
mov
out
call
sbb
inc
movsb
push
pop
insb
add
bound
pop
or
cmp
ret
push
lds
pusha
ja
adc
shr
cmpsb
gs
add
jo
out
inc
xor
inc
and
mov
sbb
insb
mov
fs
inc
enter
call
mov
push
mov
lods
jbe
pop
and
ss
rorb
ficoml
fadds
add
pop
sub
sub
push
sub
andb
push
and
push
rolb
dec
mov
jno
pop
mov
xor
test
mov
icebp
mov
aam
movsb
mov
aaa
lods
pop
cld
sub
add
sub
inc
sbb
sub
scas
push
push
cld
sub
stos
lock
test
pop
in
inc
add
lcall
mov
add
outsl
fisubl
pop
in
outsb
add
lock
das
ljmp
test
scas
or
rcr
sub
loop
es
imul
rolb
dec
lods
dec
mov
hlt
ret
sbb
inc
jo
fiadds
movsl
or
sub
stos
divb
xchg
decl
mov
pop
add
arpl
test
sub
ss
push
xor
mov
lock
rcrl
or
mov
sub
addl
pop
aaa
test
inc
push
sub
stc
aas
inc
or
sub
ss
scas
notl
imul
roll
push
shrl
rcrl
aaa
xor
cmp
movsb
insb
pop
push
add
pop
adc
int
sub
mov
inc
pop
testb
push
push
test
cld
mov
mov
imul
test
and
add
ja
inc
push
stos
dec
add
pop
mov
js
cmp
call
sarb
fiaddl
pop
bound
sbb
inc
push
mov
push
popa
adc
adc
fwait
push
sti
jg
cmp
mov
inc
add
loopne
xchg
mov
cmp
arpl
xor
clc
adc
push
inc
jno
jmp
test
dec
push
or
mov
sarl
ds
mov
push
loope
cmp
push
mov
insb
mov
adc
test
inc
out
or
inc
lods
sub
int3
mov
mov
sub
inc
js
lods
sbb
mov
mov
cmp
push
mov
xchg
sti
ret
in
cli
test
mov
jl
xchg
cltd
pop
iret
nop
adc
push
push
out
jmp
ljmp
xchg
sbb
and
stos
sbb
jecxz
aas
and
or
sub
and
pop
rcr
inc
ret
data16
jle
shl
and
das
or
repnz
push
mov
cmp
loope
cmc
cwtl
mov
insb
push
add
pop
aam
ss
push
inc
or
jecxz
pop
add
xchg
push
or
loope
les
xchg
mov
adc
iret
fdivl
test
andl
push
xor
fwait
sub
popa
stos
inc
jl
xchg
xchg
icebp
loopne
jle
and
ljmp
adc
push
enter
and
das
je
out
add
or
sbb
add
ds
xlat
cs
ret
sbb
jge
std
pop
in
mov
lahf
pop
pushf
cmp
movsb
mov
adc
push
lea
add
outsl
popf
add
sub
xchg
jl
sahf
subb
lods
push
fldl
mov
add
mov
dec
inc
xchg
dec
lcall
pop
pop
or
jmp
inc
adcl
adcb
inc
mov
sub
pushw
xchg
sub
mov
jg
movsb
jge
test
pop
cld
call
jmp
push
inc
and
mov
or
aaa
mov
adc
sub
add
dec
pop
int
mov
jecxz
xchg
pop
pushf
lcall
iret
xchg
aas
and
inc
mov
xor
nop
dec
pop
cmp
and
jae
add
js
mov
sarb
xor
popa
outsb
mov
jge
in
pushl
in
push
add
xchg
andb
or
lahf
lahf
mov
inc
mov
sbb
mov
xor
in
mov
sbb
push
mov
aas
ret
dec
aam
sub
or
loopne
push
sti
addr16
mov
loopne
cs
je
outsl
mov
lock
mov
dec
icebp
push
inc
loope
test
pop
out
sbb
lahf
test
loopne
inc
in
inc
push
cwtl
xor
pop
test
add
mov
shll
mov
ja
sub
in
dec
mov
lret
mov
ds
out
mov
push
cmpsb
out
mov
pusha
and
add
ss
jp
cmp
dec
push
jle
repnz
loopne
aaa
xor
or
mov
push
or
or
inc
mov
rcrl
dec
pop
aad
or
xchg
mov
jg
xchg
cli
int
popa
jo
dec
xchg
divb
sbb
pop
aam
shrb
leave
out
mov
pop
stos
pop
pop
mov
mov
dec
loope
popa
push
xor
shlb
lret
add
xchg
lahf
cmpsb
sbb
add
xchg
sti
and
testl
enter
xchg
sub
jae
sbbb
in
mov
push
xor
or
jo
mov
sub
mov
jmp
pop
aaa
and
ret
shlb
pop
inc
add
test
cld
push
pusha
fcomi
or
lock
adc
cmpb
les
clc
inc
add
loopne
aas
les
into
add
inc
insl
lock
test
dec
xor
rolb
mov
cs
stos
ud0
out
js
lcall
lcall
mov
sub
xchg
js
adc
push
and
or
imull
add
jmp
bound
mov
mov
inc
loopne
dec
push
loope
push
pop
stos
inc
aaa
inc
jg
sbb
add
dec
outsl
fildl
sahf
push
movsb
adc
mov
sub
or
jae
mov
dec
or
lds
push
inc
test
stos
fisttps
vmread
sub
push
sub
jo
mov
adc
sahf
jg
std
xchg
sub
cmp
mov
iret
push
bound
adc
xor
pushf
pop
and
mov
repz
jmp
test
pop
cmp
cmpl
jg
rorb
jbe
lock
bound
clc
jne
jp
push
cmovno
mov
cmp
adc
aam
inc
fwait
test
xacquire
jg
das
jo
nop
push
shlb
loope
sbb
lea
xor
cmpsb
jmp
and
or
or
adcb
cs
aad
dec
aam
sub
jg
mov
jns
lret
punpcklwd
inc
jle
add
adc
mov
inc
aaa
cld
and
ret
jmp
or
aam
nop
fdivrp
call
cld
xchg
aas
rolb
pop
shl
ds
cmc
lods
loope
daa
sub
lods
mov
mov
jns
aam
cmp
es
dec
sbb
or
adcb
lea
incl
ljmp
and
daa
test
add
lahf
xchg
sub
hlt
inc
je
fiaddl
or
mov
testb
xor
sub
add
add
xchg
sub
ss
inc
cmp
pushl
jmp
or
je
jecxz
or
pop
cs
add
fcmovnu
lea
out
xchg
and
pop
ljmp
shlb
push
fmuls
stos
dec
push
dec
std
jne
lods
jmp
frstor
and
sti
ds
ret
lock
mov
and
insl
xor
and
xchg
jnp
aaa
mov
test
sbb
inc
addl
out
mov
jb
sbb
mov
enter
inc
test
loope
dec
mov
in
add
mov
mov
incl
shrb
jo
push
out
cmp
dec
push
dec
push
push
xor
push
or
inc
scas
cmpsb
add
mov
sti
cmp
enter
and
push
cmp
lcall
pop
fidivrs
sahf
fs
incb
jbe
xchg
ror
jne
add
xor
or
call
cld
mulb
fs
cld
add
lods
aam
pop
mov
test
mov
mov
clc
sub
lret
cltd
mov
push
rorl
inc
clc
ret
outsl
repnz
mov
rcr
jmp
jmp
aam
mov
idivb
or
subb
add
in
lock
dec
sbb
pop
rcrl
sub
mov
push
cli
ja
clc
and
lcall
in
xlat
scas
cli
or
mov
or
jns
ljmp
fdivr
mov
sbb
sbb
pop
sbb
mov
mov
mov
lahf
ds
xchg
lods
into
sbb
fistps
mov
dec
aaa
andl
sub
sub
inc
int3
inc
or
inc
add
cld
add
pop
hlt
mov
repz
rcr
dec
pop
mov
pop
mov
fldl
bound
shrb
ljmp
xor
xor
add
and
mov
rorb
mov
inc
in
lock
std
mov
jbe
mov
gs
mov
sub
test
roll
hlt
sarb
pop
adc
daa
sbb
ret
pop
hlt
xor
jne
sub
add
out
jb
in
push
adc
adc
xor
ja
and
lahf
call
shl
dec
jnp
pop
mov
and
sbb
sub
inc
repnz
push
push
lret
mov
inc
lea
nop
nop
mov
cld
cmpsl
fdivs
inc
nop
ss
stos
loopne
mov
inc
out
cmpsl
pop
ljmp
sbb
pop
lcall
or
fimull
sbb
push
out
int3
iret
jg
aad
adc
mov
pop
subl
adc
jno
adc
pushf
shlb
out
cmp
cmp
fsubl
and
ds
jecxz
jno
ret
mov
mov
cwtl
cld
and
and
jns
adc
addb
aam
cmp
testb
mov
sbb
pop
mov
data16
sbb
xor
or
or
sar
lret
or
repnz
ds
subb
sbb
lret
sub
mov
inc
pop
loopne
push
add
push
mov
add
adc
std
lea
xlat
lahf
aas
popf
lret
adc
fldenv
add
clc
dec
sub
sbb
push
add
pop
cmp
and
icebp
mov
mov
mov
push
add
cmp
adc
ret
test
pop
push
dec
sub
fwait
loopne
inc
adc
add
fwait
aad
mov
les
adc
sub
cmpb
in
ljmp
lods
shlb
into
es
mov
mov
push
xor
loop
adc
les
repnz
sbb
dec
cli
fs
les
push
rorl
mov
xor
mov
adc
cld
or
in
jg
insb
adc
imul
adc
lcall
loope
or
sub
clc
dec
mov
inc
iret
pop
icebp
adc
repz
sub
xor
jmp
cld
lahf
dec
je
pop
jge
js
je
stos
mov
mov
hlt
xor
cmpsl
roll
mov
jmp
mov
xor
test
sbb
xor
cmp
in
movsb
mov
daa
adc
mov
fisttps
hlt
dec
scas
stos
movsb
push
add
je
call
inc
push
int3
jmp
xor
mov
jae
pop
test
add
pop
xchg
es
jg
hlt
sbb
inc
sub
daa
faddl
xchg
inc
scas
pop
test
adc
sbb
pusha
or
dec
mov
orl
pop
int3
arpl
sbb
pushf
iret
test
outsb
movsl
mov
cli
int
in
lcall
test
ret
mov
pop
xadd
mov
loopne
in
int
push
mov
xor
jmp
fistpll
dec
pop
mov
push
repnz
jmp
testl
jle
mov
mov
inc
and
push
fstpl
push
mov
add
mov
icebp
mov
in
cmc
add
pushf
sub
jge
add
pushf
add
sub
ret
push
test
es
push
pop
fdiv
jno
fwait
lods
mov
mov
fcompl
mov
push
and
movsb
inc
andb
ror
xor
in
fstp
dec
loopne
or
roll
rcrl
jg
cmp
lea
inc
adc
mov
nop
decl
sar
push
lret
mov
xchg
lahf
xorl
sarl
ret
cmp
icebp
mov
inc
out
and
pusha
jge
xchg
sbbb
dec
fstps
out
or
out
daa
test
or
pop
sub
push
outsl
cmp
add
out
gs
lcall
repz
mov
push
test
ljmp
ljmp
jae
add
cli
inc
mov
mov
out
fsubs
es
subb
push
or
pop
stos
stos
xlat
iret
and
sbb
lret
add
decl
sub
push
mov
jns
mov
mov
mulb
mov
mov
fidivrl
movsb
fdivr
xchg
inc
js
jae
cwtl
fisttpll
mov
pop
cli
scas
xchg
sub
lock
cli
add
adc
jl
popa
roll
ljmp
lock
add
cmpsb
clc
out
push
int3
pop
loopne
and
es
jecxz
push
sbb
adc
pop
sub
mov
std
inc
sub
ret
sbb
ljmp
pop
dec
mov
jmp
pusha
movsl
dec
js
mov
mov
sbb
fists
cmp
bound
mov
xchg
fiaddl
pop
mov
loopne
test
out
fcom
jp
test
push
shrl
loopne
and
mov
fidivl
inc
jl
inc
push
test
push
fprem
push
test
inc
mov
adc
sarl
jg
mov
icebp
outsb
xchg
sbb
insb
add
add
add
lcall
arpl
adc
in
sbb
add
out
mov
stos
jo
mov
dec
mov
jg
dec
dec
xlat
mov
scas
or
out
ret
xor
cld
cld
outsl
mov
movsb
or
push
and
movl
push
adc
popa
es
pusha
push
out
push
mov
adc
rorb
fwait
leave
into
jge
insb
mov
sar
repnz
std
add
divb
adc
pop
jnp
sub
inc
outsl
movsb
sub
nop
movsl
loop
adc
rolb
nop
cld
movsb
cmp
push
add
cltd
mov
push
pop
and
add
loop
jno
cmp
sbb
cmp
cmpsb
mov
fisubl
mov
xor
push
xlat
aad
loop
mov
jge
ljmp
andb
add
add
testl
call
mov
test
mov
sbb
pop
aad
sub
test
cld
dec
scas
loop
jbe
aam
or
pop
shll
push
cmp
lods
pop
inc
xchg
aad
sarb
rclb
xchg
mov
push
mov
sub
mov
push
jl
jg
xchg
movsl
jg
and
add
jg
pusha
rcl
cli
lcall
sbb
js
pop
movsl
repnz
sub
add
xor
jg
sub
dec
enter
loopne
sub
daa
jecxz
mov
xchg
sti
mov
stos
lcall
cmpsb
add
ds
cmp
filds
gs
pop
push
add
adcb
int3
mov
or
cmc
xchg
add
mov
and
movsb
add
cmp
or
inc
fcmovb
or
push
or
imul
loop
lds
je
dec
inc
dec
call
and
mov
cmpsb
adc
mov
int3
test
out
rclb
jnp
in
fildl
rolb
addr16
or
imul
std
sbb
inc
cs
push
pushf
fcomps
fcmovnb
in
cmpsl
mov
roll
bound
inc
cmp
mov
mov
cmpsl
or
push
fcomps
mov
lcall
xchg
mov
add
fs
mov
and
sbb
xchg
je
les
pop
jge
mov
push
out
inc
popf
arpl
xor
aaa
std
jg
rcrl
xchg
sbb
jbe
dec
or
clc
xchg
in
lds
ja
mov
mov
mov
ret
sub
jge
dec
push
fs
pop
cmpsb
and
mov
hlt
scas
push
add
pop
jge
jle
inc
add
mov
cli
jg
pop
cld
test
cmp
jecxz
mov
loop
cmp
pusha
je
pop
icebp
shlb
addr16
sahf
je,pt
test
hlt
outsb
mov
push
adc
orb
jg
gs
and
shr
jns
jnp
jp
stc
je
orb
inc
out
sub
xlat
cmp
and
sub
test
clc
xchg
sbb
call
mov
orb
xor
rcll
leave
push
push
pop
push
mov
dec
cwtl
nop
push
push
pop
jle
fs
loopne
cwtl
dec
lahf
rclb
enter
mov
daa
pop
stc
jbe
shl
push
xchg
rcrb
fidivrs
pop
dec
sbb
ret
test
sbb
int3
aad
lret
or
cmp
sub
cmp
loop
xchg
xchg
push
mov
sarb
jl
or
fidivs
in
out
add
adc
sub
sbb
ret
addr16
xchg
mov
mov
adc
iret
and
jl
cltd
mov
or
fcmovb
or
and
clc
xchg
pop
jae
pop
rclb
fistpl
jb
inc
adc
add
jle
cmp
in
and
cmp
jg
loop
movsb
pop
jo
lahf
xchg
adc
mov
bound
pop
test
insb
mov
clc
or
ret
fsubrs
mov
add
aad
ja
call
mov
mov
or
or
out
clc
fistps
nop
movsl
loope
repnz
rcll
adc
loop
push
add
dec
xchg
sbb
jo
cmp
stos
dec
push
in
outsb
mov
dec
inc
cltd
je
sub
xchg
xchg
or
cmp
jg
sbb
push
icebp
add
inc
push
mov
rcr
push
fidivl
cmpsb
es
cwtl
outsl
ljmp
cs
cmp
xchg
xchg
cltd
push
ja
jo
faddl
jecxz
scas
push
mov
cmpsb
mov
jmp
add
aad
sbb
add
jb
add
mov
or
adc
es
dec
add
dec
scas
lcall
or
les
adc
sahf
je
inc
add
xor
mov
mov
ret
mov
mov
add
cmp
add
dec
inc
ss
lods
inc
icebp
orb
mov
cmpsb
insl
sti
repz
and
inc
sar
xchg
cmp
cmpsb
or
add
mov
jb
xchg
popa
scas
adc
push
lds
pop
cli
xor
mov
mov
xchg
xor
insl
rorb
stos
icebp
sub
ficomps
arpl
sbb
cmc
inc
add
pop
mov
inc
fsubs
iret
and
notb
loop
adc
pop
push
push
daa
xchg
or
stos
aam
stos
sub
jge
hlt
movsb
insl
inc
xchg
imul
mov
test
in
cld
sbb
or
push
pusha
xchg
jle
in
push
loope
aam
data16
push
xchg
push
sbb
lret
sub
jmp
stos
mov
andl
shll
push
cmpsb
repnz
fs
xor
add
adc
xor
pop
adc
or
js
pop
fsubr
enter
xchg
aad
mov
mov
push
stc
pop
jb
push
sbb
fadds
jl
cmp
fdivs
adc
mov
orb
xchg
jle
mov
scas
stos
push
inc
cmp
imul
mov
adc
jo
outsl
xor
mov
aaa
jl
movsl
lahf
pop
inc
clc
insb
xlat
and
ror
nopl
push
stos
sbb
sti
add
push
xor
lret
cld
mov
mov
sub
aad
dec
fs
ret
inc
adc
arpl
loope
cmp
mov
data16
and
adc
adc
dec
and
aas
test
jg
inc
mov
xor
rcrb
and
add
fistpl
fbstp
mov
fistl
sub
fildl
hlt
sbb
shrb
xor
dec
mov
fildll
js
ss
ret
mov
mov
inc
rcrb
add
outsl
dec
setge
mov
jno
jge
cs
add
sbb
jle
mov
into
pop
mov
cmp
inc
push
dec
sbb
xor
popa
and
mov
shrd
jo
packsswb
std
add
ror
fcmovu
insl
mov
pop
cltd
adc
dec
add
shrl
pop
push
push
rcrb
or
rorb
loop
in
lahf
lea
into
push
fwait
pop
mov
jnp
leave
or
cmp
icebp
test
jns
hlt
rolb
fcompl
fcmove
pop
out
sbb
jg
pop
mov
das
loope
push
sub
or
dec
xor
jl
mov
adc
sub
add
int3
fnstsw
xor
lods
jb
pop
add
xchg
mov
push
xor
jecxz
lock
loop
sbb
cmp
inc
xchg
stc
pop
jmp
inc
pop
cli
std
mov
js
popf
int3
jp
pop
insb
fsubrp
cmpsl
mov
aaa
cmp
ds
ljmp
add
popf
and
sub
push
test
xchg
add
lahf
jle
cmp
rol
enter
in
fs
shll
dec
add
bound
jp
shl
addr16
inc
and
adc
fcompl
inc
adc
mov
adc
sbb
gs
andb
mov
or
mov
inc
and
mov
mov
sub
and
jecxz
loope
push
imul
sub
hlt
test
into
push
hlt
jg
sbb
mov
int
aam
cli
push
sub
out
or
je
and
in
jecxz
fisubl
xor
les
call
mov
ret
lock
push
sarb
stos
stos
push
movsl
inc
test
jno
das
enter
arpl
dec
bound
cmp
fstpt
push
fisubrs
fisubs
jne
loopne
and
in
mov
clc
lcall
mov
xchg
xor
in
lret
adc
in
jns
or
sub
mov
imul
pushf
fcomp
jo
mov
ficompl
icebp
add
ljmp
mov
inc
or
jle
pop
filds
js
add
push
movsl
pusha
jge
cmp
push
loopne
scas
mov
dec
lcall
xchg
jle
cs
xlat
fsts
mov
xchg
in
or
scas
clc
mov
adc
ss
adc
ret
push
add
xchg
les
shll
orl
int3
mov
repz
dec
sahf
push
or
loope
dec
and
insb
add
stos
shl
incl
or
dec
int
std
mov
jns
inc
adc
cs
mov
bound
sbb
fistpll
mov
enter
xor
scas
mov
cmpb
cmp
push
jne
scas
bound
fadds
fsubrl
pop
mov
sbb
shl
lcall
or
inc
or
pop
stos
cmp
adc
cmc
shll
in
test
and
faddl
cmpb
mov
pop
push
adc
mov
lcall
or
hlt
ss
lock
and
add
jno
inc
mov
cld
ret
fimull
jp
add
lret
rcl
xor
pop
cmpsb
xor
call
ds
sbbb
cmp
mov
jo
inc
push
fcoml
adc
in
mov
xchg
push
and
sub
adc
ret
lock
lods
adc
sbb
std
push
fst
mov
add
mov
sbb
inc
lock
xor
test
les
loope
icebp
inc
mov
pop
cmp
mov
icebp
enter
out
mov
pop
loope
in
mov
push
or
je
fwait
leave
subb
aad
mov
lock
dec
and
pop
das
jle
jge
inc
xchg
mov
cmp
arpl
int
jle
bound
jecxz
mov
mov
add
and
icebp
fbld
mov
inc
pop
cmpsb
add
in
sbb
aaa
jp
incb
cmc
shll
rcll
adc
std
or
or
and
or
cmp
pop
sbb
leave
jmp
mov
or
aaa
jns
mov
int
push
out
out
ror
ficoms
movsl
aas
inc
ficompl
or
aaa
lcall
lds
pop
cmpsb
jl
xchg
dec
push
test
nop
lahf
clc
jb
add
add
outsl
push
add
je
and
icebp
sub
in
pop
lods
gs
inc
shll
jl
mov
dec
popa
pop
mov
mov
mov
mov
sahf
mov
mov
and
ljmp
and
push
mov
mov
ja
jmp
fcmovne
adc
subb
aaa
xchg
inc
mov
sbb
or
pop
mov
cli
lret
shll
sbb
add
shr
xchg
js
fcomip
das
jo
pusha
cli
cld
sbb
bound
add
psubsb
mov
pop
aad
lret
ljmp
adc
scas
pushf
daa
jns
in
pop
sub
pusha
lret
lcall
lods
add
adc
ffree
jmp
fsubs
ret
insb
sbb
in
dec
jg
ljmp
sbb
mov
jmp
stc
add
cli
inc
test
adcb
inc
cmp
testl
divb
fwait
das
push
adc
or
std
int3
mov
cmp
rcrb
or
sub
clc
dec
inc
cmp
divb
add
push
pusha
cmp
sbb
lock
cmp
clc
mov
pop
test
fimuls
test
repz
out
xchg
mov
int
mov
fidivrs
loopne
cmpsl
pop
push
pop
ds
dec
daa
rcrb
rolb
cld
shlb
aam
shrb
inc
push
mov
pushl
js
fisubs
jl
inc
jno
jp
cmc
or
xchg
add
aad
je
pop
dec
scas
repz
push
aas
xor
fisubl
rorb
arpl
scas
mov
mov
test
jp
in
xchg
cmp
pop
jne
dec
mov
mov
lret
push
push
insl
clc
es
cld
add
fcmovu
cwtl
nop
gs
cmp
pusha
jnp
xor
push
rcll
mov
adc
je
es
push
ror
cmpsl
dec
inc
add
push
enter
jg
cmp
pop
pushf
sbb
cwtl
and
mov
add
inc
addr16
pop
mov
stc
add
cmp
dec
or
mov
in
scas
push
dec
sub
mov
insb
aad
jecxz
push
xlat
int
ss
xor
add
mov
lds
pop
into
dec
fs
testb
push
push
sbb
inc
jbe
loopw
mov
dec
push
add
mov
aam
mov
lock
rcll
daa
call
sbb
mov
push
xor
pop
nop
adc
xchg
jnp
and
sbb
and
es
mov
xchg
les
or
sub
shr
lods
cld
outsl
outsb
inc
add
ljmp
xor
bound
fidivrl
fiaddl
jl
inc
xchg
add
cmp
dec
add
ret
rcrb
dec
inc
lret
sbbb
call
and
push
aam
push
lea
aaa
pop
pop
mov
pop
jbe
cmp
incl
add
lods
repz
enter
filds
insl
cmp
pop
xlat
sbb
ljmp
add
mov
xor
inc
xor
mov
int
jne
pop
inc
aaa
fdivs
push
movsl
xchg
incb
pop
sub
mov
fs
mov
jmp
repz
insl
jp
sub
jae
add
in
jg
cld
bound
add
add
adcb
mov
push
rcl
ljmp
insb
xchg
js
mov
inc
and
add
xor
or
xchg
pop
add
push
pop
and
adc
das
xor
shll
test
cmp
jo
pop
jns
add
outsl
incl
cmpsb
test
inc
mov
push
push
and
sbb
mov
adc
inc
cld
sub
jno
ret
aas
scas
ficompl
dec
push
jp
dec
clc
insl
or
inc
pop
mov
xor
roll
dec
add
inc
cld
rolb
dec
cmpsl
mov
adc
cld
jg
mov
jns
fcompl
lds
lcall
icebp
les
mov
mov
subl
xchg
cmc
jb
add
xchg
cmc
or
pop
pop
cmc
fcmovnbe
or
xor
inc
xchg
dec
pop
jecxz
xchg
dec
sbb
or
mov
fisttps
dec
pushf
dec
mov
xlat
leave
cmpb
mov
xor
aas
insb
cs
mov
cmp
dec
jbe
aam
xchg
jecxz
test
fcomi
mov
aaa
inc
mov
sub
pop
mov
cld
mov
xchg
and
popf
jl
inc
xchg
mov
test
xor
ss
call
sahf
aam
repz
loopne
xchg
out
xlat
push
cs
cmp
sbb
ja
scas
and
pop
cmp
stos
adc
invd
push
andl
fldl
test
jle
and
push
mov
xlat
and
enter
xlat
dec
xchg
jno
gs
xchg
mov
adc
and
adc
and
cmp
and
mov
out
pop
jbe
jno
jp
lds
repnz
add
and
jl
pop
or
pop
test
out
std
xlat
incl
aas
and
xor
ret
insl
lret
xchg
xorb
push
adc
enter
or
movsl
hlt
mov
add
pop
jecxz
das
lea
cld
shr
push
or
in
push
xlat
mov
insb
jl
fidivrs
push
scas
cmpl
or
adc
aaa
or
push
into
je
or
xchg
push
aaa
sahf
add
in
adc
xchg
mov
mov
popa
or
icebp
pop
data16
loope
andb
or
rcll
mov
out
cmpsb
in
sbb
mov
or
shrb
scas
shr
cmpsl
test
cmp
cmp
icebp
xor
add
and
lcall
sbb
and
dec
push
rolb
stos
sub
adc
jb
add
mov
pop
fisubl
push
xchg
dec
jno
fadd
mov
mov
inc
xor
xor
add
fs
out
in
jp
add
xchg
xor
movsb
pop
cmp
and
loopne
adc
push
sub
add
test
orb
mov
jp
or
addr16
xor
mov
sub
mov
jmp
sub
pop
and
inc
and
ficoml
call
fbld
or
and
jne
popa
sarb
in
mov
mov
add
ficoms
sub
dec
add
es
or
outsb
int
stos
roll
add
cmp
cmp
pop
and
cmc
lods
aam
push
es
dec
jnp
jb
dec
mov
pop
and
mov
mov
sub
pop
sub
out
mov
pop
dec
mov
xchg
mov
xchg
popa
in
nop
rcr
testb
cmp
inc
dec
popa
adc
into
loopne
jg
hlt
dec
adc
dec
cli
sbb
inc
add
and
add
loop
aad
lock
jmp
push
out
movsb
stos
insl
push
pop
push
push
jge
mov
in
jo
lret
add
xor
inc
xchg
cli
sbb
loopne
loopne
cmp
inc
or
mov
sub
or
cwtl
test
push
lds
je
push
notb
sub
aam
insl
pop
lods
popf
pop
das
mov
sub
push
jp
push
xchg
cld
sub
lods
jno
lret
push
scas
pop
push
ficoml
cli
psrlw
icebp
dec
pop
xchg
rorb
mov
fs
sbb
mov
hlt
add
stc
add
xchg
add
orb
sbb
push
pop
arpl
jl
jl
inc
add
or
popa
or
push
scas
loope
stos
int3
adcb
fsts
out
and
sbb
add
xchg
jb
shrd
jo
fdivr
movsl
jmp
cld
out
jecxz
dec
cwtl
scas
in
add
lock
and
dec
fwait
mov
push
pop
negb
sbb
iret
fisubl
inc
adc
jmp
jmp
loope
adc
jb
sub
sbb
jl
inc
mov
notb
cltd
outsb
ss
push
push
sahf
and
mov
rcll
mov
mov
pop
ret
mov
js
movsb
ds
mov
and
out
insl
aam
nop
ret
xlat
dec
js
lock
fs
push
sub
xchg
jge
pop
aad
pushf
or
enter
lret
iret
repnz
test
jb
xchg
test
hlt
test
inc
popa
mov
int
jp
ret
out
lods
bound
dec
out
sbbb
adcb
push
add
jg
idivb
insl
push
sbb
cld
mov
inc
pop
dec
hlt
inc
leave
push
decl
mov
or
fmull
lds
sub
movsb
inc
sub
outsb
mov
add
push
xor
ja
inc
jae
icebp
cld
jae
pop
inc
pop
lahf
incl
rorl
cmp
push
fstps
aam
data16
or
or
icebp
jecxz
add
mov
jl
rcrb
repnz
rdmsr
xstore-rng
cmpsl
add
outsb
js
lahf
mov
or
jp
mov
out
adc
pop
or
sub
rcrb
and
sbb
std
bndstx
pop
jp
jmp
rorl
or
adc
push
fistpl
movsl
stos
mov
cmp
lret
sub
je,pn
mov
mov
xchg
pop
shll
into
shll
aaa
inc
dec
cmpsb
clc
xchg
shl
cli
and
xchg
pop
clc
mov
inc
sbb
test
cmpsb
insb
cli
pop
incl
dec
push
cmc
sub
pop
jne
add
les
mov
mov
adc
add
sarb
and
cli
fcomip
mov
mov
les
add
push
add
xchg
nop
xchg
cmc
mov
adcl
mov
and
in
je
and
ss
cs
dec
enter
daa
inc
cmp
or
jmp
in
jbe
sahf
es
inc
push
ljmp
aaa
mov
fld
xchg
arpl
arpl
lock
or
test
xor
inc
or
push
xor
js
mov
mov
addb
std
outsl
xor
je
inc
jo
mov
repz
stos
sar
xchg
adc
jb
and
fldcw
or
or
cs
loop
xor
aam
ror
into
je
jbe
pop
call
jl
fsubl
aas
jl
jg
ja
in
ljmp
push
sub
aad
test
mov
sbbb
call
daa
lds
xchg
jno
push
jp
popl
decb
pop
mov
and
arpl
dec
push
aad
sub
addr16
or
jecxz
in
cmp
and
sub
push
jl
pop
lret
mov
add
jo
mov
or
iret
sbb
fldcw
push
xchg
mov
xchg
push
stc
add
mov
je
adc
mov
stos
push
jl
adc
mov
in
sub
insl
mov
int3
decl
add
sbb
fisttpl
test
sub
cmpsb
or
mov
sbb
pusha
aam
or
insl
xor
cmc
pushl
xor
cmc
inc
mov
cmp
inc
lea
imull
push
std
sbb
inc
add
dec
sub
xor
push
sbb
add
test
sub
or
in
ffreep
gs
push
sub
pop
in
sbb
inc
sbb
mov
mov
push
mov
xchg
icebp
mov
add
in
jne
movsl
les
mov
inc
out
lds
push
sbb
push
leave
sbb
lock
inc
add
stos
cmp
mov
adc
dec
daa
mov
mov
jecxz
insl
int3
ljmp
add
push
inc
cmp
pop
mov
push
mov
push
out
push
clc
pop
add
jg
pusha
xchg
add
jo
gs
xchg
add
pop
lcall
push
mov
pop
sub
imul
or
test
cmp
dec
mov
cld
mov
flds
mov
lock
pop
fimull
jns
cmpsb
pop
stc
fstpl
call
mov
lods
jp
sub
jmp
inc
stc
addl
repnz
scas
inc
mov
add
dec
jle
decb
aas
loopne
push
cmpsb
dec
aad
scas
adc
xchg
adc
add
fstpl
dec
mov
test
sbb
adc
out
cwtl
stos
lea
out
loop
into
add
jg
adc
push
push
push
clc
xor
loop
call
xor
push
xchg
sub
cltd
jbe
ljmp
and
xchg
loopne
hlt
subb
nop
xchg
lea
push
jo
fnsave
rcrl
mov
or
inc
cmp
incl
jns
call
icebp
pop
sub
in
sbb
cmp
scas
mov
incb
ljmp
cld
xor
insb
pop
add
sbb
loope
ljmp
dec
push
xor
sbb
adc
js
mov
int3
loopne
jecxz
imul
adc
in
out
xor
jae
lds
outsl
adc
or
orb
and
cmp
cmp
cmpsb
pushl
xlat
push
and
adc
xlat
adc
iret
mov
pop
inc
or
add
and
cmp
xor
divb
add
sub
adc
aas
cli
push
jnp
jle
fisubrs
pop
add
rorb
dec
fcomps
dec
push
inc
lock
enter
or
push
mov
movsb
fs
out
sahf
mov
jg
mov
push
ret
movsb
adc
shll
push
dec
sbb
or
imul
sbb
adc
sbb
xchg
or
adc
je
dec
in
sbb
pop
icebp
arpl
outsb
repz
and
jg
pop
cmp
fmull
out
mov
test
inc
clc
jl
cmc
std
insb
outsl
lock
mov
jle
inc
outsl
outsb
pop
cmp
pop
das
js
fadd
rcll
mov
repz
fsubs
test
dec
call
ror
mov
cmp
or
mov
sub
outsl
test
cld
pop
sar
js
mov
cmp
cmp
adc
scas
dec
filds
and
imul
das
loopne
inc
push
dec
add
sbb
std
sbb
mov
fcomps
add
mov
cmpb
pushf
dec
or
xor
mov
mov
dec
lcall
inc
push
jnp
andb
sbb
call
push
lret
or
mov
scas
idivb
push
sub
mov
and
inc
add
push
sbb
adc
add
scas
jae
add
pop
std
dec
xor
push
mov
xor
test
sub
pop
icebp
pop
jbe
inc
call
sub
push
xor
call
les
fwait
add
xchg
xchg
push
inc
cld
add
fldln2
sbb
or
in
or
sarl
hlt
es
mov
xchg
aas
sub
xor
jecxz
push
daa
push
mov
je
mov
push
adc
sub
out
add
or
test
int3
ja
cs
ljmp
mov
lock
mov
cli
pop
mov
sub
sbb
movsb
inc
add
idiv
and
sbb
xchg
push
ret
add
and
xor
scas
dec
lock
sub
lret
mov
es
jns
jb
mov
sbb
sub
lock
addr16
int
ds
jnp
icebp
jmp
inc
incl
xor
cmp
jg
icebp
aas
push
mov
inc
mov
and
fnstenv
lahf
add
mov
test
int3
adc
inc
aad
pop
bound
push
lret
cli
sub
aam
ficompl
push
in
add
cmp
enter
mov
popf
adc
dec
dec
adc
fs
rclb
dec
mov
sbb
or
fsubs
or
or
daa
call
outsb
notb
add
or
test
sub
jne
out
add
clc
stos
jbe
sub
push
mov
ret
jmp
shrl
incb
out
ret
rcrl
pop
outsb
lock
pusha
mov
incl
fwait
shlb
sbb
sub
add
pop
adc
inc
ja
cmp
adcl
lcall
out
add
shlb
call
shll
popf
lods
loopne
xlat
clc
cmp
mov
sarb
test
xchg
in
adc
hlt
sar
cltd
xor
movb
rolb
jecxz
xor
test
xor
jle
xchg
jne
xchg
imul
add
xor
outsb
or
or
xchg
ss
insb
mov
loopne
push
mov
push
idivl
aas
popa
sbb
lock
mov
cli
inc
incb
add
inc
lcall
or
mov
clc
lods
sbbl
daa
lock
jmp
cli
jl
add
out
shrl
pop
push
pop
mov
sarb
aaa
nop
pop
xlat
sbb
shrl
mov
stos
mov
jno
ret
mov
mov
mov
mov
adc
push
sub
add
and
loopne
jecxz
lods
jae
imul
lock
xor
clc
das
mov
mov
shll
push
icebp
mov
loopne
scas
call
orb
jge
add
xchg
adc
add
jmp
mov
nop
aad
jl
pop
fbstp
lcall
pushf
and
mov
mov
jecxz
push
sub
adc
daa
les
sbb
and
int3
mov
out
adc
xchg
aad
test
das
dec
mov
sbb
idiv
mov
add
dec
push
repz
xchg
aam
jg
js
int3
daa
fiadds
imull
and
dec
stos
std
call
xchg
cli
jle
mov
mov
dec
and
mov
daa
sbb
stos
out
sbb
pop
sub
insb
xchg
push
sbbl
cld
sub
pop
mov
and
pop
inc
push
repnz
gs
mov
dec
lods
incl
pop
mov
cmp
jbe
loope
push
iret
in
mov
inc
lret
leave
out
clc
hlt
in
jl
decl
xor
sbb
popa
xchg
sub
sub
sbb
and
mov
in
pushf
jle
leave
or
add
mov
inc
loopne
inc
jbe
fiaddl
and
mov
lods
add
inc
push
jl
push
inc
shll
dec
cmc
jne
aaa
insl
sbb
sbb
clc
cmp
iret
inc
std
mov
sbb
xor
mov
xchg
lods
dec
cs
test
sar
sub
inc
mov
in
xlat
add
push
cld
mov
add
add
jecxz
sbb
adc
jp
sarb
es
or
cs
lahf
jo
sub
call
aam
adc
mov
jno
mov
filds
add
comiss
xor
xor
dec
pop
dec
fwait
aam
fisttpll
push
popa
daa
dec
cmpb
add
jecxz
insb
xchg
push
sub
adc
xor
int
mov
or
mov
ds
movsb
add
clc
shrl
adc
insl
mov
fisubs
ds
mov
or
int3
pop
lcall
dec
push
fs
add
js
xor
push
xchg
das
push
mov
add
add
push
push
sbb
ror
sub
sub
mov
cltd
roll
jg
aam
pop
inc
xchg
arpl
jg
push
jmp
icebp
inc
jl
mov
lahf
clc
outsl
push
add
jp
bound
icebp
jo
int3
scas
add
jl
cld
sarb
test
add
mov
aam
add
and
mov
xor
or
shrl
ljmp
sbb
cmp
ljmp
pop
ds
and
test
pop
mov
xor
xor
add
dec
xor
mov
out
xchg
pop
mov
jge
and
pop
inc
sbb
call
pop
or
mov
pusha
dec
add
out
xor
or
xor
jb
mov
aas
pop
dec
jecxz
xorl
clc
jg
rorb
mov
inc
js
enter
loope
dec
loope
das
sarb
pop
add
mov
daa
cmp
sub
ss
pop
xchg
test
adcl
mov
cmpsl
arpl
ror
mov
test
jne
add
cmp
adc
out
jp
push
cwtl
inc
cmp
popa
mov
cld
hlt
cmp
dec
mov
fcompl
push
lcall
mov
scas
out
cld
mov
imul
outsb
mov
cmp
inc
xchg
inc
mulb
mov
pop
mov
out
dec
adc
xchg
xchg
pop
mov
shlb
pop
cmpb
inc
push
in
mov
test
adc
mov
adc
sub
add
movsl
rcll
not
inc
inc
test
jbe
mov
pop
loopne
lock
sub
data16
ret
xchg
add
insl
push
icebp
pop
lds
push
adc
popa
push
in
push
sub
xchg
sbb
pusha
mov
or
cmc
add
xchg
inc
cmp
sbb
icebp
outsl
loopne
cmp
xchg
pusha
sub
loopne
lock
mov
and
xchg
sub
mov
xor
hlt
jns
add
cli
or
ss
mov
xor
add
xlat
cmc
pop
sbb
inc
xor
adc
js
sahf
inc
mov
adc
jp
inc
inc
clc
data16
loope
lock
push
dec
mov
pop
push
inc
int3
dec
dec
cli
lea
mov
les
stos
icebp
mov
and
mov
ret
loope
scas
pop
fldl
jbe
inc
mov
imul
xor
mov
or
ds
cld
enter
cli
pop
insb
sub
mov
movsb
ret
stos
mov
in
movsl
lods
outsl
push
shr
sahf
adc
push
jl
sbb
les
ljmp
pop
hlt
repz
adc
mov
xor
inc
mov
xchg
adc
fisubrs
clc
and
and
sahf
lock
or
or
dec
pop
cmpl
jecxz
outsb
dec
popa
test
xchg
scas
mov
arpl
lcall
out
adc
arpl
insl
sbb
loope
aaa
cs
and
xchg
out
and
std
adc
xor
mov
push
push
push
repz
cli
ljmp
loop
fdivr
je
inc
enter
mov
cmpsb
les
adc
pushf
inc
pop
pop
push
cld
call
add
in
inc
mov
inc
cmp
adc
adc
adc
xchg
mov
stos
cmc
mov
test
add
pop
in
sbb
cmp
shr
pop
inc
pushf
movsb
aas
xor
push
sub
or
lret
mov
push
shrl
test
pop
iret
pop
mov
pop
js
pop
push
test
push
sbb
cmp
icebp
aas
rolb
aam
adc
sub
push
cs
fiaddl
push
cmpsb
mov
mov
push
dec
loopne
clc
sarl
mov
jg
push
xor
stos
jbe
push
pop
fsubs
shl
fs
jmp
cmovns
and
mov
lret
mov
test
cld
movsb
add
hlt
mov
adcl
inc
aas
hlt
xchg
movsl
and
mov
sub
dec
jb
mov
xchg
add
nop
mov
pop
test
adc
mov
adc
mov
dec
decl
scas
dec
mov
push
icebp
lcall
in
sbb
add
jle
xchg
adc
pop
inc
cli
mov
test
cld
aas
aad
out
imul
and
arpl
xchg
xor
add
xchg
aam
mov
pop
push
xchg
mov
xor
sub
add
pop
or
mov
adc
push
lahf
adc
jo
sti
and
add
adc
movsb
dec
mov
movsl
outsb
mov
cmp
jle
inc
dec
jo
dec
loope
push
jno
mov
mov
and
insb
lods
xchg
cmpsb
dec
or
xor
popa
cld
mov
xlat
int3
adc
and
ljmp
mov
les
adc
daa
inc
insb
movsb
lock
dec
adc
dec
cmp
xor
or
inc
inc
lock
adc
fwait
lock
hlt
pop
dec
lods
jle
fs
das
xchg
push
call
push
hlt
dec
stos
roll
dec
in
aas
lret
cli
jp
xchg
sbb
loopne
jl
dec
and
shll
mov
and
ss
mov
pop
rcrb
adcb
or
sub
bound
sub
ret
pop
fldl
pop
addl
adcl
sub
adc
inc
lret
aad
push
lods
xor
pop
imul
lcall
dec
fstpt
mov
bound
cmpsl
lock
sub
cwtl
scas
xor
out
mov
in
rcll
icebp
push
jo
or
loope
cmp
ljmp
inc
and
in
andb
pop
nop
loopne
mov
fwait
push
ds
imul
cs
push
add
and
mov
sbb
insb
add
mov
imul
xchg
add
scas
jle
dec
xchg
add
mov
lcall
push
push
dec
les
in
pop
addr16
sbb
dec
add
jns
cs
rcrl
jg
adc
mov
push
cmp
or
out
cmp
pop
inc
push
sub
ret
pop
aaa
pop
sahf
rcrb
test
sbb
mov
mov
out
dec
or
jmp
iret
add
inc
cmpl
stos
push
fsubs
dec
xchg
xor
loop
add
add
fnstenv
cld
pop
cmc
jbe
pop
scas
imul
cs
daa
inc
mov
mov
aas
mov
jmp
add
popf
pop
inc
pop
outsl
arpl
dec
cmpl
addr16
imul
je
js
addr16
cmp
inc
lcall
ret
nop
sbb
shlb
mov
shll
mov
xor
cmc
lahf
mov
mov
dec
adc
or
pop
cld
pop
mov
dec
mov
shrb
xor
dec
incl
xchg
inc
enter
fsubrs
je
outsb
xchg
cmp
pushf
sbb
movsb
mov
ds
fwait
loope
pop
sub
outsl
sbb
jecxz
in
jg
adc
add
arpl
inc
inc
shr
movsb
mov
sbb
add
mov
and
stos
jecxz
call
out
fsubs
movsl
xchg
test
push
hlt
xor
cmpsb
icebp
push
sbb
adc
push
jne
test
inc
and
push
cmp
aas
push
fimuls
and
pop
push
cli
xchg
enter
add
sub
dec
ret
sub
and
push
pusha
addr16
loopne
inc
cld
and
adc
cs
sbb
sub
mov
test
ljmp
jb
dec
andb
mov
clc
pushl
imul
iret
xchg
xchg
aad
pop
sub
hlt
inc
call
cs
xor
mov
stc
inc
ret
push
clc
add
int3
fwait
jo
aas
stos
shl
out
rolb
push
pop
daa
testl
push
pop
pop
push
pop
push
clc
adc
addl
and
mov
cmp
mov
push
xchg
xchg
hlt
pop
outsb
cmp
lock
or
call
in
jo
add
mov
pop
loop,pt
mov
xor
addr16
sub
push
nop
mov
je
stos
mov
mov
and
shrl
out
cmp
mov
lods
fwait
sub
ror
imul
outsb
push
rolb
sub
mov
push
int
push
in
sahf
fs
fldenv
push
inc
xor
movsl
decl
push
push
in
xor
pop
out
test
fcomip
push
ret
mov
sbb
sbb
dec
decl
add
insb
inc
cmpsl
sub
lea
or
pop
mov
mov
call
sbb
add
dec
mov
aas
enter
sub
and
lock
pusha
inc
clc
outsl
adc
sbb
sbbb
mov
cmpsl
movsb
incb
or
adc
lcall
js
cld
insl
in
push
sbb
aam
push
faddl
cmpsb
aad
xorb
inc
jge
or
aad
dec
popw
lahf
pusha
add
repz
add
adc
mov
aad
xor
add
loopne
jp
jmp
mov
mov
in
xchg
pop
lods
popa
stos
dec
push
cli
lahf
pop
aad
out
stos
in
xor
popl
insb
stos
sub
mov
dec
inc
add
adc
shl
add
cmp
or
mov
mov
mov
mov
mov
add
test
movsl
out
xor
and
pop
sti
push
dec
sbb
test
orb
xchg
dec
jmp
scas
mov
sti
mov
sbbb
pusha
adc
jo
fbstp
incl
jl
movsl
std
sbb
shlb
insl
mov
cmpsl
icebp
push
jp
xchg
scas
inc
or
lcall
mov
cmp
push
push
dec
jns
fwait
adc
ljmp
icebp
stos
pop
adc
mov
pop
xchg
sti
or
aas
dec
add
pop
cmc
jmp
in
pop
xchg
insb
or
xchg
jo
push
popf
rcrb
sub
loop
inc
dec
rcrl
mov
ret
hlt
mov
inc
leave
inc
sbb
mov
les
jl
inc
andb
adc
clc
ret
jecxz
push
adc
and
mov
lock
in
jg
xor
xchg
lods
pop
jmp
leave
cmc
scas
adc
lret
or
xor
leave
xchg
dec
fcmovne
icebp
jg
enter
inc
movsb
test
and
xor
jecxz
lret
adc
pushf
ss
dec
shl
mov
addr16
stos
push
fistl
loope
fisubrl
jge
js
pop
pop
out
push
sbb
jl
mov
mov
lret
inc
jns
pop
orb
add
inc
dec
add
sbb
xchg
es
shll
add
mov
cmp
adc
push
cld
mov
popa
cs
pop
dec
push
mov
insl
pop
xor
cmc
push
xchg
xlat
pushf
lret
fcoms
rolb
repz
mov
dec
pushf
cmp
lahf
ljmp
subl
test
and
aad
lret
test
push
mov
sbb
pushl
lods
adc
test
add
mov
mov
inc
mov
pop
insl
std
mov
imul
sub
pusha
or
and
inc
sbb
cmp
es
fsubl
test
mov
in
aaa
dec
lock
adc
mov
cmp
mov
ljmp
sbb
xlat
xchg
sbb
lret
leave
mul
icebp
push
cld
fwait
test
jb
and
fwait
clc
mov
int3
xor
arpl
pop
in
mov
adc
ret
pop
add
rorb
cmp
popf
inc
push
js
int
mov
or
aam
xorb
dec
add
cmp
into
mov
adc
cli
push
jne
sub
repnz
or
lcall
push
add
add
loop
popa
sbb
cmpsb
movsb
aam
insl
lcall
mov
lds
scas
jecxz
cli
shr
addl
push
push
lods
mov
ret
popf
lds
sarl
and
popl
sub
mov
xchg
cmc
lcall
add
inc
aad
jecxz
or
fsubr
das
and
cwtl
sbb
cmp
xchg
jle
jecxz
and
out
inc
adc
adc
dec
lea
insl
push
sbb
int3
adc
js
rcll
mov
cwtl
inc
nop
stos
inc
sbb
cs
mov
jno
xor
arpl
lods
ljmp
incl
xor
sbb
popa
push
and
mov
dec
mov
xor
cmpb
xor
cmp
xor
and
sbb
push
loopne
dec
aas
inc
aad
xchg
jb
adc
outsb
push
xchg
mov
push
dec
mov
imul
jp
cmc
adc
lcall
mov
incl
sub
ds
dec
xor
iret
push
adc
das
ds
add
add
sbb
push
inc
test
aad
cmp
push
xorl
mov
testb
inc
in
mov
inc
jl
mov
pop
loope
push
ss
fiaddl
lret
mov
jae
jmp
adc
mov
pushw
movb
divb
add
xlat
sbb
sbb
push
nop
sbb
test
repz
cld
mov
pop
cwtl
lods
inc
or
in
and
dec
inc
rcrb
dec
outsl
loopne
test
bound
cld
inc
mov
add
pop
loop
sub
jns
inc
push
es
inc
pop
shlb
call
xor
ret
cli
ja
test
sbb
insl
mov
mov
fidivs
and
clc
les
push
sub
pop
lods
jb
inc
into
mov
dec
and
jnp
xor
pop
test
ja
out
xchg
lock
push
loop
pop
dec
cmp
cltd
clc
add
arpl
mov
js
fsubp
ret
push
inc
cmp
mov
outsl
mov
dec
inc
xchg
mov
pop
adc
xchg
incb
push
int3
mov
push
into
lcall
cmp
or
mov
push
pop
sub
add
pop
and
mov
mov
ret
cmp
or
sub
fs
and
fnstenv
push
mov
mov
shrl
pop
lock
push
dec
daa
push
hlt
cmpsl
add
adc
or
fisubl
and
out
or
inc
sbb
adc
test
les
ror
pop
adc
decl
shll
and
add
cmp
pop
rorl
cs
add
lcall
daa
inc
push
add
hlt
js
add
bound
add
decl
loope
jbe
test
sbb
test
hlt
sub
in
out
bound
mov
and
es
mov
dec
pop
lods
add
test
call
push
mov
sarb
xor
scas
les
push
sub
sbb
cmp
add
lcall
jg
repz
enter
add
push
aaa
test
sbb
adc
ss
out
scas
sbb
add
jbe
sub
sbb
repnz
subb
push
andl
in
push
mov
inc
mov
xor
lret
lock
or
pop
push
rclb
jecxz
je
lret
sarb
arpl
ja
jbe
lahf
xor
jl
daa
inc
or
sub
mov
adc
fnstsw
adc
push
ljmp
filds
lods
push
pop
loope
mov
cmp
pop
cwtl
int3
sti
mov
addr16
or
scas
cmc
and
push
hlt
loope
ror
sbb
jl
mov
adc
cmp
loopne
jb
xchg
lcall
or
fs
inc
sbb
inc
xchg
nop
push
pop
sbb
cmp
jmp
pop
cmp
or
xor
nop
add
sarl
mov
jl
and
cmpsb
jecxz
add
stc
cmp
shlb
and
sti
lock
mov
lods
jp
push
and
dec
in
or
mov
xlat
lock
and
cltd
and
push
xlat
ja
out
mov
mov
aas
cmc
adc
sahf
ret
ljmp
enter
dec
jb
push
outsl
test
or
inc
add
pop
in
jns
sahf
pushf
subb
sub
sub
jmp
cwtl
shrl
fidivs
inc
lea
push
rorb
xchg
pushf
jl
inc
sbb
arpl
decl
cmp
mov
jge
in
adc
pop
sub
sbb
movsl
popa
in
lahf
mov
aad
xlat
pop
mov
xor
test
pusha
fs
mov
pop
sbb
xchg
sub
sbb
pop
sbb
fadd
hlt
cld
stos
push
addb
cmp
mov
mov
sub
inc
jbe
pop
jno
nop
pop
fisubrs
inc
mov
push
movsl
dec
xchg
scas
xchg
jg
mov
lods
in
mov
mov
adc
inc
loop
mov
jg
test
addb
pop
inc
int3
out
call
mov
lds
push
js
mov
sbb
enter
cmp
gs
and
pusha
sub
dec
and
push
call
dec
inc
sbb
addb
and
or
push
or
in
dec
jmp
fcomip
sahf
add
mov
ficoms
sub
push
add
cmpsb
ds
cmp
ljmp
out
mov
sbb
push
lds
dec
add
mov
mov
pusha
push
je
cwtl
mov
call
mov
jb
lods
push
cmp
dec
pop
les
rcr
test
mov
push
mov
inc
xchg
or
jp
push
fstps
stos
jo
test
mov
inc
mov
sub
adc
ljmp
sub
jne
inc
mov
sbb
xchg
xor
push
xor
shlb
sub
rclb
idivl
test
and
xchg
push
cld
fdivrl
cli
in
sub
dec
or
xchg
inc
ljmp
rclb
in
jo
mov
loope
add
shrb
jge
push
insl
dec
lret
add
dec
stos
inc
or
movsb
mov
jno
je
sbb
out
rolb
push
cmp
inc
xor
push
push
ljmp
adc
pushl
cld
adc
add
inc
inc
lods
aad
xor
mov
hlt
pushl
aas
fsubrl
dec
inc
insb
inc
push
stos
fisttps
insl
mov
mov
loop
cmc
stos
scas
decl
out
jge
and
xchg
dec
lahf
mov
repz
cmc
mov
and
pop
sbb
sbb
mov
inc
bound
add
mov
test
sub
orl
jns
test
sbb
lods
cmc
in
xchg
jb
jle
mov
push
std
loop
add
push
push
mov
push
pop
or
addb
and
sub
adc
jmp
cmpsb
movsb
mov
dec
clc
lahf
scas
shl
inc
fsubrp
test
pop
xor
popa
xchg
dec
enter
gs
cmp
call
cmp
jg
popa
dec
xchg
add
gs
inc
es
shrb
mov
push
sbb
inc
loope
gs
xchg
mov
push
jp
prefetcht2
das
out
nop
rorb
add
pusha
xor
dec
rolb
outsl
mov
adcb
and
mov
daa
in
addb
dec
bound
adc
jo
loopne
pushf
dec
nop
mov
push
add
jg
mov
dec
mov
xchg
cmp
filds
lods
jb
lods
int3
insl
popa
ret
and
jbe
je
sub
add
mov
into
jp
fidivs
lcall
cmc
fsubl
pop
adc
loope
out
mov
fmull
lods
movsb
pushl
jo
test
adc
mov
jecxz
adcb
in
mov
shl
aaa
enter
mov
shlb
mov
xchg
or
mov
out
call
clc
mov
icebp
mov
mov
and
out
ret
out
popa
jecxz
stc
fst
sub
mov
das
and
out
lahf
cmp
or
test
lret
dec
sub
fiaddl
mov
jg
rorb
add
arpl
sbb
jbe
or
jp
sti
push
sub
arpl
scas
test
xor
or
call
xchg
push
mov
and
leave
or
push
mov
and
inc
jnp
or
int3
xchg
mov
int3
ret
test
fiadds
fwait
xor
mov
adc
mov
stc
daa
adc
dec
rolb
push
inc
je
push
add
loope
insl
sbb
dec
loope
in
inc
fcompl
aad
jnp
outsb
popf
aas
mov
sti
rcll
xchg
ret
and
or
add
loop
shl
in
pop
mov
clc
adc
cmp
mov
out
adc
hlt
push
xchg
mov
add
sbbb
sbb
adc
fildl
add
shlb
xor
adc
fadds
adc
mov
fists
inc
mov
popl
je
cli
pop
orl
test
cmp
sarb
es
push
mov
push
hlt
dec
faddl
mov
add
shrb
jmp
repnz
mov
push
out
test
mov
or
loop
sahf
adc
jo
iret
scas
push
xor
jle
add
aas
insb
leave
into
mov
add
pop
or
xchg
mov
push
or
jne
clc
cmp
sti
sahf
pop
mov
loope
aam
ja
jne
fdivr
add
sbbl
sub
sahf
or
dec
pop
hlt
xlat
add
or
xchg
movsb
arpl
xor
inc
lods
mov
inc
sti
call
fcoml
xor
push
sbb
inc
sub
jecxz
jl
loopne
cmpsb
add
cli
rorl
shlb
ficompl
push
push
jge
in
jecxz
pop
fistl
jbe
nop
subb
clc
mov
cmp
fstp
and
and
scas
inc
jbe
movl
push
outsl
insb
or
shlb
shlb
xorb
or
mov
stos
addl
rolb
mov
dec
cmp
jno
push
and
stos
mov
loopne
mov
fstpt
mov
fs
sbb
xchg
adc
fnstenv
push
push
dec
scas
pusha
cmc
cwtl
in
shl
jne
sbb
loopne
test
and
add
jmp
cmpb
or
adc
lea
sarb
jnp
stc
push
aad
jo
fsubr
and
pop
in
shll
inc
pop
xchg
lea
ljmp
in
test
adc
add
insl
adc
pop
cmp
cli
cltd
pop
add
fwait
call
add
cmpb
aam
add
test
dec
popf
adc
leave
and
cmp
cmc
mov
and
cld
and
mov
or
lcall
enter
pop
pop
imul
lds
dec
jp
push
cmp
test
lcall
push
cmp
mov
mov
xor
ljmp
lcall
mov
stos
ja
push
popf
cmp
orl
scas
mov
inc
aad
outsl
std
push
or
gs
jae
sub
movsb
push
testb
loop
sbb
fadd
clc
inc
or
loopne
adc
cmp
int3
stos
lods
dec
mov
pop
decl
xchg
mov
mov
xchg
adc
mov
lahf
out
add
inc
nop
or
fisubrl
inc
loop
fs
sarb
jle
scas
pop
das
in
dec
sub
divb
adc
test
sub
lcall
cli
testb
adc
scas
lods
lock
cltd
push
pop
xor
mov
pop
xchg
cld
cmc
push
and
and
adc
inc
and
loopne
cmpsb
ljmp
push
in
cmpsb
dec
test
inc
aaa
sub
mov
xor
or
mov
test
ljmp
pop
lcall
cmpsl
xor
inc
movsb
or
aad
adc
inc
jmp
cmpb
arpl
stos
fs
insl
push
adc
mov
icebp
ds
ret
mov
lcall
lods
or
xor
insl
mov
ss
add
xor
sub
imul
dec
shrl
cmp
out
pop
aam
fnclex
xchg
cs
inc
adc
mov
test
ret
mov
dec
lods
cmp
add
sbb
sbb
lock
add
inc
mov
mov
repz
cmovge
pop
mov
out
dec
loope
jge
loop
push
lds
shr
jb
xchg
mov
mul
mov
cmp
and
and
push
std
mov
mov
sbb
xor
push
add
insb
sub
pop
lcall
fwait
cli
jl
push
mov
sub
nop
adc
sbb
push
adc
and
mov
add
xchg
scas
push
or
in
mov
repnz
fwait
dec
mov
jp
insl
push
test
jb
mov
out
inc
ret
lret
pop
imul
dec
cmpsb
add
add
pop
movb
xor
mov
sub
add
adc
push
add
mov
fs
je
sbb
jns
push
add
mov
fmuls
shl
pop
cmp
mov
pop
lcall
push
pop
inc
inc
les
add
int3
data16
dec
jl
in
xor
and
enter
inc
lods
mov
es
loop
loop
push
or
and
xor
je
aas
add
adc
jns
add
xchg
xor
xchg
adc
sub
call
mov
adc
or
nop
jo
add
inc
pop
gs
out
push
jmp
aad
sbb
dec
sarb
sbbb
and
mov
mov
add
cmp
or
mov
mov
dec
or
test
enter
test
inc
adc
xchg
pop
jmp
mov
adc
jecxz
cmpsb
and
pop
testl
sbb
fisttpll
mov
push
lret
fsubl
cli
add
je
add
pop
sbb
popa
mov
bound
js
cwtl
add
dec
push
push
call
xlat
aam
loope
mov
and
movsb
add
aas
mov
dec
fstp
fimuls
add
adc
inc
loop
adc
mov
add
in
mov
sub
mov
sub
das
cli
push
mov
add
lods
push
or
or
addl
inc
push
dec
cmp
popa
subb
popl
xor
loopnew
and
hlt
mov
cmp
sahf
jmp
pushf
or
aad
adc
add
inc
scas
mov
pop
or
inc
adc
mov
or
dec
dec
sbbl
inc
or
jmp
pop
inc
mov
fldcw
add
sbb
sub
shl
out
or
xor
pop
mov
push
lods
and
jmp
aam
out
xchg
mov
inc
ljmp
xchg
pop
std
outsl
cmp
js
test
leave
inc
jo
pop
dec
push
push
cmc
xchg
shlb
fistpll
stos
mov
inc
mov
push
xchg
aaa
add
test
and
adc
aaa
mov
mov
lea
sub
lea
push
mov
push
sub
pop
popa
stos
loop
pop
jmp
pop
jle
or
sbb
pop
mov
rorl
cli
loopne
xor
mov
cs
pop
mov
mov
clc
popf
mov
or
and
in
and
out
inc
loop
out
in
into
push
js
das
test
inc
int3
push
jmp
push
dec
loope
pop
lock
leave
jecxz
mov
dec
les
xchg
mov
mov
mov
jle
inc
xchg
movsb
fcompl
lods
int
cmpsb
mov
dec
adc
cmp
inc
hlt
xor
mov
ret
or
sub
addl
mov
out
inc
jg
call
inc
or
enter
push
arpl
fwait
mov
movsb
and
xor
fwait
xchg
cmc
or
incl
add
xchg
adc
xchg
and
cmp
into
or
xor
jle
ds
dec
push
and
mov
add
lcall
enter
nop
push
mov
inc
mov
push
enter
pop
sti
pop
rol
imul
push
faddl
cmp
ret
xor
mov
add
xor
push
or
and
cmpsb
inc
xchg
push
sub
test
mov
add
ss
jmp
push
mov
jnp
mov
inc
fimuls
idiv
sbb
ficoms
push
insb
adc
cwtl
adcb
inc
fisubrs
lahf
mov
inc
sbb
push
cltd
inc
mov
mov
or
imul
add
cmp
or
fisubs
clc
nop
push
dec
jl
mov
je
jg
push
sbbb
and
mov
push
repnz
push
mov
mov
jl
mov
mov
cmp
xor
and
cmc
mov
test
fidivrs
push
jno
sub
inc
sbb
cmpb
cs
sbb
addr16
scas
aam
iret
xor
es
or
mov
mov
push
adc
stos
les
jg
xor
add
enter
inc
xor
or
pushf
int3
loope
test
xor
xchg
jmp
pop
inc
inc
mov
xchg
push
dec
clc
mov
push
dec
push
cld
dec
movsb
xchg
loopne
xchg
fdivl
adc
hlt
loop
lahf
push
test
xor
mov
inc
push
decl
adc
stos
inc
cld
pop
hlt
add
popf
mov
mov
and
lea
fsubrs
pop
and
pop
divb
jns
loop
push
xchg
adc
les
dec
lret
pop
std
mov
adc
xchg
sbb
xlat
cwtl
xchg
icebp
mov
ljmp
jp
je
inc
jl
aas
shlb
cmpsl
shrb
mov
jle
icebp
fbld
lahf
jbe
xchg
inc
xor
imul
test
or
lods
test
jbe
lds
or
lock
mov
adc
fwait
inc
jecxz
add
and
ljmp
jb
jge
insl
push
or
cmp
in
or
pusha
popa
xchg
dec
add
xor
hlt
adc
push
cli
sub
test
cmp
in
push
test
lods
xchg
xorb
inc
jge
decl
dec
cwtl
jg
inc
orl
loopne
nop
ss
js
adc
mov
pop
cs
sbb
nop
push
cmp
lea
xchg
pop
mov
adc
dec
js
les
push
xlat
les
jmp
and
repz
xchg
je
and
loope
and
jo
push
inc
test
pop
fs
pop
jmp
sub
das
push
lret
mov
jae
cmp
jle
push
cmp
jnp
std
jnp
add
test
loop
dec
xor
scas
lea
xor
rcrb
pop
xchg
rclb
cwtl
dec
cmpsb
movsl
nop
add
invd
in
sarl
rcll
add
cmpb
cs
and
sahf
bound
cmp
insb
test
jg
and
arpl
push
adc
call
add
or
mov
jle
lcall
add
sbb
outsb
sahf
movsb
int
or
jb
test
jo
and
mov
sarb
imul
js
add
movsb
stos
jbe
js
in
or
in
test
mov
bound
rcll
inc
add
adc
jno
add
setge
inc
ljmp
in
or
inc
scas
or
test
shrl
daa
jmp
inc
cld
or
mov
push
fmuls
sub
shlb
gs
shlb
jecxz
stos
mov
testb
push
push
outsb
call
mov
je
test
cmpsb
pop
bound
ljmp
cmp
outsl
cmp
es
jne
and
sahf
test
in
and
hlt
pushl
sbb
push
dec
cmpb
inc
int
sbb
loop
lock
loope
xchg
js
das
js
push
push
stos
pop
mov
adc
test
lock
mov
jmp
mov
fbld
loop
cvtps2pi
int3
inc
push
inc
es
fidivs
pop
lret
cmp
rolb
add
or
sbb
inc
addr16
out
inc
push
xorb
and
loopne
das
mov
fwait
mov
mov
pop
incl
iret
inc
mov
sub
xlat
incl
pop
adc
mov
or
or
and
inc
aaa
dec
hlt
jg
inc
icebp
or
outsb
mov
test
loopne
ds
jg
mov
mov
sub
shll
loop
fmull
xor
loope
sarb
stos
stos
pop
jmp
stc
adc
push
dec
adc
and
lcall
inc
sub
inc
int
sbb
mov
add
dec
add
cmp
mov
inc
jmp
mov
inc
adc
inc
xor
lcall
pop
cmc
or
or
mov
add
loope
nop
push
lods
jg
push
adc
das
fnstenv
cli
pop
daa
stos
std
call
or
jecxz
mov
aas
nop
dec
dec
test
and
xchg
int3
shlb
jo
les
out
push
cli
pop
std
sbb
jmp
jo
xor
cmc
push
jecxz
ljmp
inc
or
mov
adc
jg
sub
cmpsl
jecxz
pushf
inc
dec
push
dec
packsswb
inc
pop
or
frstpm(287
mov
call
arpl
mov
stos
pop
add
adc
mov
shl
lods
scas
clc
daa
jo
mov
xorb
das
adc
lahf
jo
lods
idiv
loop
shll
flds
or
jae
xchg
out
jnp
xor
out
insb
mov
add
sbb
mov
cli
int3
or
sarl
or
jno
or
sbb
sub
dec
pop
cld
outsl
xchg
cmp
sbb
xchg
ss
xchg
xchg
ret
jo
aaa
int3
cli
mov
ss
or
mov
sarb
sub
fwait
bound
shll
je
fwait
jle
das
sbb
xchg
mov
ljmp
sahf
les
mov
icebp
shlb
sub
pushf
ljmp
adc
xchg
push
or
cmp
add
pop
pop
pop
addl
mov
ljmp
das
or
insb
enter
add
clc
add
inc
adc
rcl
je
adc
jo
test
aam
scas
negb
pop
push
adc
mov
dec
xchg
mov
inc
and
add
and
test
fisubrs
or
sub
hlt
aad
rolb
mov
cmp
es
test
cld
xor
fidivs
mov
sub
mov
xor
lcall
icebp
movsl
jb
cmp
and
inc
fsubrs
out
jb
xchg
ja
mov
int3
test
push
fistpl
clc
pop
mov
dec
decl
jg
dec
cmp
insl
shl
icebp
dec
jg
cs
or
test
lcall
daa
sti
xor
cld
in
add
mov
mov
fnsave
push
jle
jle
and
cmp
stos
test
pusha
xor
jo
add
mov
cmc
incl
mov
out
aas
testb
in
rorb
jne
daa
insb
pop
dec
push
inc
imul
push
outsb
sub
pop
int3
sub
stc
popa
add
xchg
sub
adc
xchg
jno
xor
and
sbb
mov
inc
movsl
and
adc
cmp
pop
jmp
mov
dec
hlt
or
pushl
imul
fsubs
xchg
test
push
rcrb
add
push
inc
lret
outsb
icebp
mov
pop
pushf
cmp
loop
mov
add
inc
clc
stos
push
mov
sbb
cld
jge
push
push
jmp
push
icebp
lcall
stos
mov
sub
xor
popa
and
jge
push
sbb
lock
das
mov
adc
push
adc
loope
push
mov
das
push
shr
and
adc
in
out
push
mov
mov
sub
js
mov
outsl
fcomp
dec
push
mov
lods
jl
lds
imul
jmp
mov
inc
xor
sub
test
xor
sbb
mov
lcall
in
xchg
rclb
aas
adc
sub
lods
das
add
sbb
inc
inc
popa
add
and
cltd
lods
imul
mov
xchg
jne
push
and
imulb
dec
mov
sub
in
hlt
add
outsb
xchg
and
rolb
and
cltd
fisubrl
adc
lea
mov
ret
sbb
jg
es
xor
add
xchg
sbb
jmp
adc
push
jo
cmc
test
xor
pop
pop
adc
mov
and
aam
int3
ljmp
into
jo
ljmp
or
add
sbb
mov
push
or
shrb
pop
sub
pop
andb
pop
pop
adc
sub
int3
testb
add
mov
cli
add
int
jmp
cmpsb
aam
decl
dec
cmc
mov
fsts
or
cwtl
mov
mov
inc
inc
inc
inc
sbb
push
es
cmp
pop
push
adcl
mull
test
or
enter
sahf
xchg
mov
mov
lods
inc
xor
pop
test
mov
and
cmpsb
xchg
pop
cmc
inc
mov
pop
mov
sub
in
or
scas
and
in
inc
outsb
adc
and
push
sbb
movzbl
mov
xlat
shr
testb
mov
sarl
inc
inc
out
dec
or
push
cli
jmp
rclb
pop
les
movsb
aaa
or
and
jle
cmp
cmpsb
adc
sbb
pop
in
cwtl
popf
out
mov
loopne
lock
dec
imull
stos
mov
pop
push
stos
stos
fnstenv
lret
xor
imul
inc
cld
ja
ss
lds
push
dec
jns
dec
lods
sbb
mov
orl
jbe
fcoml
ret
and
adc
pop
in
pop
xor
es
inc
push
js
push
push
or
in
or
pop
xor
cmp
gs
fdivr
jecxz
xchg
dec
xchg
ret
add
mov
cmp
mov
icebp
outsl
add
push
adcl
dec
nop
inc
ret
mov
inc
popa
push
xor
inc
inc
cmp
and
cwtl
fstps
dec
inc
push
scas
push
dec
lds
add
jno
xlat
imul
cmp
ljmp
icebp
xorl
ss
inc
out
jp
jne
outsb
jmp
and
push
mov
cmpsb
pop
or
cmp
scas
addb
pop
dec
add
inc
xor
clc
inc
aas
std
out
pop
dec
mov
scas
and
movlhps
aaa
call
inc
or
add
push
jge
in
and
je
outsb
and
mov
and
outsb
pop
xor
add
aad
fimuls
push
jp
or
or
insl
dec
adc
xor
cwtl
cld
sub
jo
or
xlat
dec
stos
fcmovb
mov
lock
clc
dec
push
or
ljmp
pusha
imul
pop
mov
scas
scas
out
inc
loope
push
or
clc
lods
xchg
fmull
adc
shll
aad
pop
pop
pop
lock
cmp
xchg
repnz
test
add
mov
mov
shrl
js
jmp
sub
inc
push
adc
pushl
mov
imul
dec
into
push
and
mov
add
xor
das
inc
cld
inc
in
cmp
ficompl
push
pop
xchg
sarl
dec
pushf
das
pop
aad
mov
fcomip
ror
popa
shlb
call
inc
into
cltd
adc
xchg
add
loope
and
lods
or
push
mov
clc
repz
dec
mov
push
lcall
and
mov
cmp
scas
in
aas
jle
sub
ja
pop
js
out
or
aad
dec
cmp
mov
subb
sub
cmp
inc
decl
ljmp
orb
lods
and
loopne
fdivrp
outsl
test
push
stc
scas
cltd
shrl
mov
pop
es
popf
jl
push
scas
js
mov
adc
jmp
pop
bound
enter
int
add
mov
push
push
ss
xchg
test
inc
insl
xchg
xor
test
sub
or
mov
cmp
mov
std
or
loopne
andb
idivl
pop
bound
shlb
push
sub
lcall
push
xchg
lret
xor
cmpsl
ss
repz
push
sub
adc
sub
push
pop
xchg
ret
pop
dec
aad
adcb
scas
xor
shll
push
pop
or
jge
dec
push
mov
js
insb
lea
mov
xor
aas
xor
mov
adc
pushf
faddl
ds
cmpsl
loop
sub
clc
dec
addb
or
cmpl
push
sbb
or
test
sahf
add
fstps
cli
cmp
bound
push
cmpsb
out
ret
pop
dec
inc
pop
and
aad
das
push
fidivrl
arpl
ficoml
or
rolb
or
cmp
mov
data16
mov
stos
cmp
cmpsl
inc
dec
icebp
sti
in
xchg
add
stos
and
movsl
pop
roll
xchg
add
add
iret
shlb
pop
sub
fwait
jecxz
cwtl
or
fisubs
add
cld
mov
xchg
stc
loopne
loope
sbb
out
xchg
mov
xor
add
and
pop
mov
pushl
jb
pop
enter
mov
add
repnz
sahf
pop
add
cltd
sbb
shr
xchg
stos
repz
adc
addl
in
or
add
mov
pop
inc
fistpl
scas
cmpsb
mov
sub
dec
aaa
cs
xchg
add
pusha
add
cmp
push
jl
add
sbb
dec
inc
je
imul
jne
inc
push
clc
pop
sbb
clc
loop
in
sbbb
pop
mov
add
xor
mov
jns
adc
xor
add
mov
add
push
inc
or
dec
adc
inc
aas
lods
ja
mull
jl
push
xor
incb
popf
shl
cmpl
pop
in
cs
xor
dec
sub
and
pop
dec
mov
addr16
hlt
and
and
cmp
xchg
push
enter
adc
lahf
out
les
les
dec
jp
mov
test
decb
inc
push
test
inc
rolb
jae
mov
data16
out
pop
stos
sub
push
or
inc
jl
test
dec
sbb
add
push
adc
sub
fisubs
mov
mov
jmp
add
push
aad
mov
rolb
push
ret
movsl
negb
xchg
lret
mov
ja
sub
add
out
inc
mov
dec
and
fcmovbe
inc
addr16
int
inc
outsl
or
dec
and
mov
rorl
ds
orb
jg
push
and
and
sbbl
ret
or
outsb
xchg
into
add
cmp
and
adc
dec
roll
sub
inc
lods
es
xor
mov
add
jg
les
shrl
andl
sbb
mov
add
lods
mov
push
test
fwait
sbbl
shrb
call
inc
adc
addr16
clc
mov
cs
push
movsl
mov
rcr
movsl
movsl
sbb
xor
outsb
cmp
dec
out
xor
ret
pop
fwait
xchg
pushf
lret
dec
pop
pop
mov
cld
or
adc
divb
das
inc
xor
mov
jns
loop
test
enter
leave
adc
je
scas
notl
sub
adc
fdiv
inc
test
mov
ljmp
test
sub
mov
scas
cli
orb
nop
push
adc
add
les
mov
mov
push
cs
es
jae
decb
dec
sbb
test
jmp
cld
mov
into
pusha
dec
add
mov
adc
les
cmpb
cs
jbe
jo
dec
fbstp
and
daa
jae
cs
mov
mov
lock
xchg
adc
setbe
and
js
xchg
pusha
jp
pop
jne
mov
mov
sub
xchg
mov
or
sbb
std
jae
xor
pop
mov
xor
mov
mov
inc
or
xchg
pop
inc
mov
mov
push
sbb
mov
jo
dec
mov
xor
inc
adc
scas
and
or
mov
dec
xchg
and
or
aaa
cwtl
cmp
test
popf
adcb
stos
ljmp
and
mov
pop
fwait
cmp
into
push
jnp
jo
test
int3
call
cmp
pop
aaa
loop
cs
call
jne
xchg
push
out
stos
sbb
clc
cwtl
pop
pop
and
je
iret
jbe
fs
inc
inc
addr16
fcomip
sub
test
mov
xchg
dec
mov
scas
inc
test
fsubrl
neg
fadd
nop
jbe
scas
les
or
inc
mov
and
jle
xchg
cmpl
decl
or
mov
jecxz
enter
xor
ja
mov
and
incl
cld
adc
add
mov
and
ret
lret
pusha
int3
add
ljmp
sbb
sub
mov
pop
int3
adc
shlb
cld
stos
cmp
sbb
loop
mov
sub
mov
int
cmpsb
es
shll
jnp
pop
stos
mov
std
test
dec
jp
or
add
int3
pushl
es
xchg
scas
movsb
mov
aad
pop
lock
sbb
xchg
sub
daa
stc
mov
add
mov
es
test
cs
jmp
popa
dec
inc
imul
add
jo
lds
fs
and
jl
call
mov
push
and
dec
pop
pop
cmp
mov
xlat
mov
pop
enter
lds
aas
jne
jg
mov
cld
cmp
mov
repz
clts
cwtl
adc
mov
test
mov
lcall
mov
fwait
sub
fadds
leave
push
or
cmp
or
cmc
xchg
mov
test
sar
inc
sbb
push
jg
add
xlat
or
adc
loop
mov
adc
stos
enter
nop
ljmp
push
jne
mov
xor
pushl
inc
xor
lret
ja
scas
push
cmp
lret
mov
add
sbb
faddl
js
adc
decl
aad
mov
and
jns
dec
xchg
movlps
add
sbb
xor
cmp
ljmp
aaa
insb
out
xor
pop
xor
or
xor
add
mov
aaa
sbb
mov
aam
mov
ret
stos
dec
int
or
pop
test
adc
in
sarb
adc
sub
inc
cwtd
movsb
push
mov
iret
xor
add
adcl
sbb
or
mov
sbb
sub
cwtl
fadds
dec
fdivrs
xchg
mov
iret
idiv
pop
dec
lahf
cmp
xor
loop
test
inc
cld
sbb
lcall
dec
test
mov
adc
lret
adc
ret
call
clc
test
iret
loopne
jb
sbb
movl
sbb
jno
ds
shlb
hlt
out
fstps
mov
test
mov
lods
ljmp
jp
mov
or
lods
cmpl
mov
jo
mov
out
sub
jnp
inc
les
cmp
push
rcrb
sti
shll
xchg
out
push
xor
xor
xchg
jp
aas
repnz
mov
cwtl
push
data16
cld
inc
out
mov
cmp
or
push
aam
test
push
adc
push
xchg
mov
adc
mov
pop
shrl
or
xchg
sbb
and
push
add
and
sub
rolb
xchg
jb
or
hlt
lahf
insb
sbbb
xlat
ret
sbb
roll
js
xor
and
bound
fadds
call
nop
push
sbb
jno
push
in
insl
js
fstpl
sbb
cmp
jmp
mov
icebp
add
dec
scas
push
jl
push
daa
mov
push
fbstp
cld
cld
mov
jp
mov
in
mov
push
or
and
sahf
inc
pop
lods
push
sarb
sbb
ljmp
cld
jnp,pn
imul
sti
les
jg
ret
mov
js
mov
lock
shlb
pusha
dec
sbb
cmp
add
inc
dec
rclb
push
pushf
add
inc
pop
outsb
clc
cmc
or
loope
mov
test
test
sbb
lret
push
ljmp
mov
push
mov
xorl
xor
cmp
xor
in
shl
rcrl
lock
hlt
scas
loopne
jb
jl
stos
or
sti
aam
imul
das
jmp
and
pop
mov
es
imulb
jle
inc
inc
push
adc
mov
out
incl
pop
push
pop
rol
mov
push
add
popl
call
dec
mov
push
mov
cmc
sbb
sbb
ljmp
clc
int
or
aaa
or
and
push
call
and
scas
inc
jne
enter
decl
insl
rcll
clc
test
dec
add
inc
cmpl
sbb
test
push
add
test
scas
push
sub
and
and
popa
ljmp
sub
push
and
cmc
lcall
popa
cmp
pop
in
cmpsl
pushf
insb
outsl
adc
ljmp
shlb
or
movsl
add
test
xchg
mov
push
pop
scas
or
add
dec
movl
adc
and
call
jg
repnz
int3
xchg
and
shll
push
sbb
mov
ret
decb
nop
mov
subb
dec
js
add
sub
or
push
and
and
jno
or
adc
mov
stos
jnp
push
mov
inc
std
cltd
fiaddl
jl
mov
push
pextrw
mov
and
in
aam
fists
and
pop
sbb
out
sbb
loopne
addr16
lret
xchg
test
sarb
sub
outsl
add
fs
fs
addl
add
add
ss
call
push
pop
xchg
add
inc
inc
bound
sub
push
cmp
or
sar
inc
int3
loop
add
add
pusha
sti
jnp
mov
mov
pusha
push
xchg
push
xor
js
cli
add
jb
inc
adc
aaa
inc
das
cli
add
fs
nop
adc
out
repz
lea
xor
in
fists
push
inc
bound
sbb
jg
mov
cmpsb
bound
lcall
pusha
xchg
shl
mov
or
lds
hlt
daa
mov
xor
mov
adc
data16
add
insb
addl
jo
fs
call
insb
addb
lret
push
sbb
clc
sbb
xchg
cmp
fisttpl
mov
inc
andl
dec
pop
inc
dec
push
std
lds
cmp
xor
xchg
or
mov
andl
and
and
mov
ret
shrb
xorb
mov
aaa
pushl
daa
cltd
adc
adc
jecxz
fstps
xchg
sub
andl
das
dec
adc
cmp
push
call
ds
add
sbb
or
inc
and
rolb
ret
cmp
inc
ja
incl
sub
xor
xor
cli
testb
mov
scas
clc
pop
adc
xchg
xor
outsl
popf
mov
xchg
cli
sarb
push
ljmp
subb
push
xor
xchg
xlat
in
sbb
and
mov
in
fcomip
and
and
sbb
adc
mov
xor
or
xchg
bound
inc
jl
fmuls
xor
mov
andb
int3
pop
int3
and
incl
push
cld
data16
aad
sahf
pop
pop
sbb
enter
icebp
jns
rcl
dec
sti
fs
inc
dec
in
outsl
ljmp
scas
int3
mov
sub
adc
xchg
call
sub
sbb
add
xchg
inc
icebp
ret
inc
jmp
pop
xor
xchg
hlt
call
movsb
cltd
lock
and
sub
and
push
pop
ss
mov
push
mov
movsb
pop
sbb
mov
fwait
xor
and
call
jle
loope
insb
stos
push
add
jl
arpl
outsb
inc
testl
push
jo
int
clc
pop
add
add
mov
and
inc
cmp
lods
jb
dec
jbe
out
addl
es
sub
fsubs
push
jg
and
jle
fsubrs
ret
push
pusha
popa
jne
stos
push
lods
out
icebp
adc
ret
sub
incl
push
mov
mov
lods
dec
test
jg
cld
jge
inc
pop
nop
pop
mov
arpl
lahf
mov
jns
jns
jp
test
dec
adc
pop
xorb
cwtl
lea
pusha
dec
push
pop
add
adc
xor
mov
cmpsb
out
test
or
lcall
pop
loopne
andb
add
aaa
popa
movsl
lcall
lea
jae
les
push
std
xchg
jno
mov
arpl
adc
jne
stos
scas
gs
push
call
mov
mov
push
mov
mov
add
mov
test
mov
mov
lcall
jle
notl
jb
outsl
std
pop
sbb
and
ffree
xchg
inc
andb
rol
clc
inc
int
push
xor
je
mov
loopne
add
mov
aam
popa
or
push
mov
pop
mov
and
adc
adc
loope
decl
stos
call
push
mov
sbb
popf
cmp
adc
and
es
sub
loopne
outsb
xchg
sub
aas
ret
rorb
out
movsl
inc
loop
incl
pop
ret
addr16
jl
xor
incl
cmc
mov
notl
andl
inc
mov
sub
out
sub
xchg
push
je
push
dec
aad
rcll
push
add
scas
xchg
sub
xchg
sub
pop
pop
and
add
iret
push
lock
hlt
lods
jae
mov
popf
add
jo
aas
adc
bound
clc
in
jg
mov
dec
in
or
stc
scas
mov
shll
subl
imul
testb
cltd
icebp
or
or
inc
adc
mov
push
out
sub
sbb
jo
call
dec
clc
sub
ljmp
and
sbb
push
cli
jo
push
movsb
cmpsb
decl
int3
sarl
push
mov
insl
adc
mov
xchg
pop
pop
pop
add
mov
test
rcrl
je
into
in
icebp
pop
mov
mov
and
mov
sahf
faddp
shrb
mov
mov
inc
cmp
in
aaa
jbe
jg
enter
subb
jle
pusha
addl
cli
shlb
dec
or
std
nop
add
mov
pusha
xchg
hlt
or
jp
pop
ror
add
sub
dec
ret
inc
fsqrt
adc
push
insb
movsl
and
and
loope
fisttpll
and
lock
or
push
hlt
pop
add
jbe
sub
ret
arpl
test
clc
inc
and
push
aam
pop
imul
add
inc
sbb
or
loop
stos
out
mov
adcb
pusha
and
xor
cmp
jno
jecxz,pn
das
ljmp
push
stc
jmp
inc
mov
mov
lcall
mov
in
aad
pop
mov
inc
sub
and
push
cld
scas
dec
push
fldenv
loope
jg
mov
fdivl
cld
pop
pop
lcall
rcll
add
and
push
je
pusha
mov
add
bound
jno
dec
cs
add
sbb
add
cmpsb
aaa
mov
fs
cld
outsl
je,pt
addb
clc
fistl
jecxz
xchg
hlt
inc
mov
js
outsl
popa
jo
cld
std
and
jmp
sbb
mov
cwtl
in
mov
pop
sbb
and
sbb
pop
je
out
mov
fstl
push
fwait
inc
pop
xchg
inc
sub
pop
cmp
loope
mov
sbb
icebp
insb
xor
dec
stos
fidivl
loopne
sbb
inc
cmpsb
je
mov
pusha
add
clc
pop
adc
push
xchg
data16
movsb
lods
push
lcall
insb
out
xor
cmp
scas
mov
adc
cli
xlat
sbb
imul
test
imul
add
in
mov
incl
hlt
jmp
ret
mov
jle
jae
arpl
mov
sbb
adc
jno
bound
daa
mov
dec
pop
and
pop
cmp
jl
lods
ja,pt
clc
sarb
into
or
outsb
dec
repz
mov
out
xchg
sti
pop
aas
add
enter
mov
inc
and
cmp
xchg
out
into
orb
repnz
mov
mov
adc
and
dec
mov
test
pop
outsl
out
add
loopne
inc
icebp
push
adc
mov
mov
xor
bound
xchg
xchg
push
add
sbb
xor
arpl
mov
cld
and
gs
push
mov
dec
push
jge
ljmp
or
add
push
add
mov
xchg
pushf
idiv
push
fdivrl
cmp
fcmovbe
sbb
in
mov
mov
add
shll
xor
int3
hlt
enter
jecxz
mov
ret
les
xchg
call
ficoml
jecxz
push
and
clc
mov
xorb
int
inc
and
inc
mov
cmp
prefetch
or
test
mov
mov
xchg
test
aam
sub
jb
pop
add
mov
jle
pop
jne
inc
mov
and
mov
nop
pop
add
push
add
push
xchg
cli
and
or
fs
or
cmc
mov
add
jl
nop
sbb
lret
or
jg
push
std
pop
and
mov
popa
adc
push
mov
xor
hlt
or
imul
mov
jg
into
cmp
imul
hlt
scas
cli
inc
mov
push
pop
jo
lock
sub
sub
fists
cmp
jmp
fildll
xorl
push
xchg
xor
gs
outsl
sbb
int
add
dec
ds
mov
sub
lcall
inc
js
sbb
mov
inc
call
mov
sbb
adc
jne
adc
ja
sbb
lods
cmp
jbe
mov
pushf
imulb
rolb
repz
lock
mov
cli
add
loop
pushf
push
lahf
adc
lcall
mov
adc
cld
add
inc
and
lods
pop
mov
inc
lret
dec
xchg
out
scas
repnz
rcrb
and
add
fcomps
pop
adc
nop
test
pusha
or
sub
cmpsb
push
fs
test
lods
cmp
lock
aad
loop
push
rcl
scas
pop
lea
pop
out
ret
shlw
dec
es
xchg
add
cmp
jle
push
push
sbb
lcall
pop
int3
add
nop
jb
dec
push
xor
or
loop
dec
das
loopne
sbb
je
jle
cli
mov
clc
jl
dec
popa
rorl
enter
or
cmpsb
and
ret
lret
fcmovb
decl
cmc
int3
jns
lahf
adc
add
push
add
mov
push
insb
mov
ret
adcb
xchg
hlt
test
mov
rcrb
es
repnz
into
bound
push
lods
xchg
add
or
fs
shlb
sbb
push
leave
cwtl
mov
pop
xchg
int
inc
sbb
jle
add
das
mov
pop
es
push
out
or
ljmp
or
mov
subb
es
sub
adc
pop
adc
mov
push
int3
dec
mov
fildll
push
push
sub
push
mov
jo
inc
ljmp
clc
rorb
lret
fs
adcl
ret
add
ret
mov
sbb
dec
adc
cli
leave
cs
xchg
int3
inc
xlat
xor
pop
push
pop
out
add
xor
push
push
les
jne
aad
mov
je
push
ror
add
scas
push
fs
icebp
push
into
fs
std
aas
shlb
rcr
jbe
insl
sbb
arpl
xchg
mov
and
cmp
pusha
push
mov
call
inc
push
in
and
lds
test
scas
push
mov
mov
sub
sbb
inc
xor
jmp
dec
stos
mov
mov
push
lret
and
fidivs
pop
add
xchg
xor
adc
xor
mov
test
mov
test
dec
mov
and
push
cmc
dec
sbb
add
adc
je
je
test
rorl
dec
call
jmp
testl
and
je
andb
lds
add
adc
fld
push
push
nop
cli
cmpsb
popa
mov
decb
mov
andb
mov
xchg
lcall
jle
fiadds
aaa
push
adc
sub
jno
inc
and
or
add
push
dec
cmpsl
stos
and
das
push
jnp
popa
adc
popf
test
hlt
arpl
stos
or
mov
imul
xchg
xor
or
mov
int3
dec
ret
pop
cmpxchg
push
xor
sbb
mov
incl
sub
lock
sub
cmpsb
iret
or
or
cli
cmpsl
shll
or
add
lock
fistpll
xor
addb
int
sarb
js
inc
decb
jecxz
xor
arpl
or
push
mov
mov
addb
mov
sub
push
push
fbstp
or
mov
int3
loopne
add
sub
add
xor
scas
adc
insb
rorl
pop
insl
inc
clc
jnp,pt
mov
fidivrl
scas
pop
sbb
ja
cmp
roll
sarb
lahf
decb
xor
mov
add
lar
js
jns
ret
add
stc
in
jmp
cvtdq2ps
arpl
and
mov
aaa
jl
add
insb
inc
bound
xor
andb
in
xchg
loop
push
lcall
sbb
cs
jl
loopne
imul
pop
push
cltd
push
adc
jl
mov
inc
loopne
mov
or
jb
or
adc
addr16
in
outsb
add
add
loope
sbb
iret
bound
enter
in
movsb
push
mov
lcall
movsb
jne
aaa
repnz
or
mov
arpl
and
mov
loop
rcrl
clc
mov
data16
xor
adc
push
add
sti
shlb
sbb
adc
and
test
jg
push
or
mov
add
shrl
xchg
dec
add
mov
mov
xorb
pop
sub
sbb
jge
call
inc
jg
mov
sbb
jae
cmp
adc
loop
xor
ljmp
pushf
pop
push
or
inc
and
les
or
ret
movsb
hlt
imul
dec
fbld
inc
or
cmpsb
out
jmp
adc
cmp
pop
inc
or
mov
mov
mov
mov
gs
pop
cmp
rorb
push
sub
dec
sbb
dec
or
call
fbstp
mov
mov
or
add
sti
or
jl
fsub
sbb
addw
ret
mov
add
popf
les
stc
incl
cmp
dec
xor
mov
rcrb
push
decb
sti
insb
push
dec
dec
inc
in
out
jo
sub
xchg
negb
sti
mull
stos
orb
loopne
scas
insb
pop
lock
inc
insl
adc
add
sbb
sub
xchg
push
icebp
jg
inc
sbb
push
xor
xchg
push
dec
mov
or
mov
push
push
push
adc
mov
adc
or
popa
push
dec
cmpsb
push
cmp
jg
sub
movl
fwait
mov
mov
enter
add
cwtl
cmp
ljmp
inc
in
rolb
lcall
mov
lods
movsb
mov
jo
out
inc
popf
.byte
stos
.byte
jmp
push
push
out
fwait
testl
cmp
pop
pop
pop
ret
adc
or
nop
out
aaa
sti
ja
add
add
push
or
pop
pop
pop
ret
or
out
ffree
and
adcb
mov
pop
ret
inc
imul
inc
add
push
adc
or
add
mov
in
inc
and
inc
mov
adc
inc
and
nop
and
divb
nop
inc
add
inc
and
mov
xchg
std
testb
addb
cs
push
out
cmp
adc
push
push
int
int
adc
inc
mov
int3
and
push
lods
popf
int
nop
stos
add
add
and
jae
mov
adc
adc
inc
mov
adc
andl
notl
adc
cmpb
and
nop
and
adc
orb
aas
lcall
mov
xor
mov
add
out
add
roll
sbb
fiadds
inc
roll
mov
mov
sub
add
adc
xor
data16
mov
fstpl
outsb
shlb
addb
pusha
mov
add
mov
data16
inc
cmc
test
cmp
cld
roll
xor
adcb
mov
mov
add
add
sub
lcall
inc
and
and
and
adcb
sbb
inc
aam
add
data16
inc
inc
adc
xor
cltd
fnstenv
bound
cltd
xor
jp
push
xor
adc
jp
xorb
scas
fstp
popf
add
xor
xor
int3
out
in
xchg
adc
push
push
sbb
loopne
shlb
mov
sbb
fstp
in
push
in
pop
dec
inc
or
popf
jbe
scas
incb
les
fmull
push
cld
inc
cmp
jo
insb
loopne
and
lods
xchg
fcomps
fadd
pusha
fsubl
je
sub
add
inc
push
lret
mov
xchg
out
xchg
cmp
dec
adc
cmpsb
or
fs
int3
or
cmp
adc
push
xchg
adc
sub
dec
or
fnstcw
mov
mov
xchg
and
hlt
mov
call
out
nop
xor
outsb
inc
cmp
mov
mov
mov
sub
out
push
loope
xchg
lahf
out
cmp
push
out
nop
sub
sbb
loop
jno
shrl
add
loopne
out
das
dec
testb
jo
int3
shrl
in
mov
sbb
sub
stos
or
push
xchg
push
add
jle
pop
mov
movl
nop
movsb
scas
insb
jo
loopne
cmpsb
sbb
jl
int
test
pop
sub
stos
push
mov
jno
push
jo
jle
sbb
sbb
int3
push
dec
mov
cmp
mov
shll
push
dec
aaa
fidivrs
sbb
mov
and
pushf
cmp
mov
xor
or
jo
jb
pop
adc
in
mov
repz
adc
mov
sbb
jmp
enter
add
xor
and
addr16
sarl
movzwl
jae
pop
cmp
jnp
add
or
iret
ja
jno
adc
imul
jo
subb
pop
lea
pop
out
mov
lds
pop
mov
push
and
adc
mov
nop
push
mov
sbb
inc
aam
inc
lock
nop
adc
ljmp
push
icebp
jmp
fists
lahf
add
loope
dec
sub
sbb
mov
mov
jl
mov
add
adc
int
push
lock
add
fimull
jle
mov
std
inc
add
fildl
mov
clc
fisubrs
addb
cmp
mov
iret
sub
adc
fstl
fwait
lods
rcr
inc
popa
inc
cld
clc
or
xor
pop
adc
mov
jne
adc
js
sahf
or
add
scas
stc
jg
hlt
not
sub
hlt
outsb
sbb
adc
cld
sub
inc
cli
cld
mov
fnstenv
sbb
mov
ret
mov
inc
add
jecxz
insb
adc
int
in
cld
or
ficoms
add
jg
rclb
jge
add
mov
jne
adc
fsubrl
lods
hlt
sti
add
and
int
jae
mov
fiadds
sbb
sub
cmp
inc
call
and
shlb
cmp
cmpl
pop
in
mov
icebp
and
dec
adc
jp
or
lods
mov
call
xor
xchg
call
clc
add
or
nop
cmpsl
js
out
adc
xchg
dec
adc
or
or
or
lods
movsl
xor
mov
xchg
or
dec
out
andb
push
mov
call
xor
cmp
lock
iret
mov
sahf
insl
jns
rorl
pop
and
shll
push
mov
fcoms
mov
std
push
clc
mov
xor
adc
mov
or
aas
sahf
push
in
sub
in
xchg
ret
pop
outsl
adc
push
push
cltd
sbb
or
and
mov
fidivrl
aas
cmp
add
xor
xchg
lods
adc
sbb
push
cmp
add
add
es
jge
sbb
or
fucomp
sahf
sbb
mov
ljmp
filds
inc
je
or
mov
jmp
testb
adc
cmp
add
jmp
stos
inc
jecxz
mov
addr16
cmp
add
aam
jb
jae
ja
sar
sbb
mov
mov
inc
data16
xchg
or
push
mov
mov
mov
scas
daa
jmp
mov
or
jp
mov
sarb
clc
sub
not
loop
ret
imul
dec
cmp
fidivl
adc
not
push
scas
hlt
mov
flds
jnp
ss
mov
scas
es
neg
fwait
add
mov
dec
jbe
mov
dec
mov
and
pop
add
mov
sbb
and
lds
pop
push
js
pop
js
ja
inc
ret
nop
xlat
movsb
jmp
sarl
adcb
es
ret
dec
mov
rorl
pop
push
frstor
decb
pushf
inc
scas
sti
mov
flds
sti
in
add
jbe
int3
fwait
scas
fisubrl
lret
dec
pop
inc
jmp
mov
cld
add
stos
xchg
mov
xor
dec
xor
cmpl
fimull
hlt
mov
roll
pop
in
add
shl
neg
mov
cmp
mov
jbe
pop
push
scas
cmpxchg
stos
out
in
in
jne
lcall
cmp
inc
fadd
and
fmuls
add
or
fnstenv
or
dec
icebp
scas
mov
pop
sub
outsb
lock
cmp
push
rcrb
sub
xlat
stc
cmp
sbb
mov
into
ss
and
push
mov
loopne
js
mov
cmpsb
xchg
mov
mov
std
pop
mov
cmc
inc
dec
jne
enter
stc
in
and
ljmp
cwtl
adc
and
xor
sub
mov
lea
mov
clc
ja
testb
push
call
inc
and
inc
cmp
cld
adc
jne
xor
mov
dec
xor
adc
cmc
adc
inc
pop
push
or
xchg
in
cmp
mov
mov
mov
sbb
leave
mov
push
mov
add
adc
test
or
dec
jns
adc
sbb
dec
sbb
push
sub
inc
sti
fists
jle
mov
adc
or
std
xchg
or
sub
test
pushf
add
clc
ja
cvttps2pi
imul
rolb
mov
testb
mov
jns
nop
sbb
or
rorl
dec
dec
cmp
int3
aas
and
xor
adc
mov
jb
ror
sbb
add
loop
jmp
cmp
bound
out
adc
dec
jmp
mov
jmp
dec
push
mov
lds
and
or
movl
mov
or
jb
popa
decl
scas
push
cmp
lock
pop
loope
dec
add
addb
pop
fidivs
imull
ret
add
mov
or
cmp
mov
clc
andb
adc
sbb
mov
in
lods
jl
testb
pusha
mov
add
add
shlb
and
je
and
push
mov
push
ret
xchg
sub
es
pop
iret
mov
or
outsb
mov
sti
push
jecxz
decb
enter
lahf
pop
mov
ret
outsl
out
ret
push
lock
mov
mov
movb
dec
add
sbb
sbb
jg
inc
pop
cmc
mov
jp
dec
dec
dec
not
dec
pop
ret
xor
jo
orl
push
add
fdivr
lahf
enter
add
add
leave
ret
leave
fdivl
add
sub
cltd
stc
mov
mull
add
adcl
and
pusha
testb
imul
lret
out
dec
fldcw
push
or
push
push
fdivrl
xor
xor
xlat
cli
cmp
jmp
mov
jg
ret
pop
divb
in
ds
sub
add
xchg
jne
cmp
lcall
mov
cmpsl
and
push
js
loopne
or
sbb
shll
sahf
ds
pop
cmpsb
dec
xchg
adc
lcall
mov
les
fisttpll
popa
add
rolb
and
mov
cld
sbb
push
faddl
js
jo
adcl
add
add
push
dec
lock
sbb
mov
dec
or
push
aaa
jge
dec
fcmovnu
cmp
xor
cs
sbb
ffreep
xchg
clc
dec
add
fistpl
and
call
jp
adc
clc
in
add
add
shll
jo
inc
mov
jns
cltd
testb
dec
sub
outsb
in
in
xchg
adc
add
psubsb
test
std
testl
cld
cmpsl
sbb
fildll
pop
or
push
call
mov
loopne
stos
and
jb
mov
lret
aas
jp
adc
sub
jmp
flds
mov
mov
nop
cld
inc
pop
add
sbb
mov
jmp
dec
popf
jbe
and
adcl
push
decl
dec
add
dec
inc
neg
dec
push
pop
clc
inc
sti
mov
incb
mov
dec
stos
or
add
cmp
dec
loopne
dec
stos
sub
mov
outsb
scas
les
or
ret
dec
int
dec
lock
inc
mov
dec
dec
and
push
or
popf
xor
sarl
add
add
cmp
inc
or
and
fcomps
ret
lahf
loope
enter
dec
sub
testl
shr
int3
cli
rcll
add
mov
xor
icebp
mov
shr
cmp
aaa
add
add
dec
inc
clc
mulb
fildl
cwtl
stos
pop
mov
and
add
sahf
int3
pop
fdivrp
cs
add
lret
je
pop
cli
mov
rolb
inc
sub
jno
sbb
dec
jb
lock
pop
adc
and
jns
sub
iret
arpl
mull
xchg
add
cmpsb
repz
or
xor
in
dec
lods
dec
pop
xor
jne
adc
fcoms
out
lods
or
insb
jb
jmp
inc
out
fdivrs
push
enter
cmp
push
cmp
rcl
xchg
add
aas
push
rcl
fstpt
jmp
and
daa
imul
jne
push
sub
inc
push
push
and
movsl
cmp
outsl
das
or
pop
sbb
and
popf
xor
movsb
stc
and
push
idivb
add
add
notb
clc
dec
shrl
mov
aam
xor
push
mov
add
push
in
sub
mov
add
sbb
pop
cmp
jo
push
or
adc
in
leave
xchg
lret
lods
fcomp
jmp
ret
adc
int3
push
xor
enter
or
or
sbb
add
sbb
push
cltd
add
rorb
adc
mov
pop
or
cmpsb
add
inc
mov
jmp
scas
hlt
push
lods
mov
insl
pop
arpl
nop
add
mov
test
xchg
out
filds
int3
add
and
adc
dec
sub
in
ja
mov
clc
les
sub
int3
rorl
lret
push
push
neg
call
or
cmp
pop
sbb
movsb
push
nop
scas
cmp
sub
and
dec
add
in
je
jge
push
dec
adc
push
into
pop
mov
int3
jo
cmp
cmp
popf
jecxz
test
mov
cs
push
loopne
add
mov
ja
rolb
and
inc
inc
sbb
rcr
loope
movsl
loop
shlb
movsl
mov
mov
fcomps
addr16
inc
dec
sbb
pop
clc
or
fcoml
ret
pop
and
and
sub
lcall
inc
ret
sbb
ficompl
dec
jg
jno
push
jne
hlt
push
mov
inc
jnp
mov
in
or
nop
mov
in
xchg
pop
out
shrl
sarb
pop
aam
mov
clc
dec
sar
aam
add
outsl
push
or
jp
inc
sub
cld
pusha
push
pop
mov
and
das
cld
add
cmp
ret
sahf
aaa
mov
pop
icebp
jae
cmp
fisubs
fmuls
push
lea
inc
mov
sbb
sbb
rcrb
dec
push
sarl
enter
int
ret
mov
dec
scas
pop
mov
shrl
push
out
cmc
sub
ficoms
xchg
lock
jg
xor
iret
roll
js
mov
push
jecxz
repnz
sbb
push
pusha
and
push
mov
fidivl
lret
push
sub
int
hlt
push
push
call
ds
inc
nop
mov
fwait
sub
add
add
popf
sbb
inc
dec
dec
lods
mov
rcl
cmp
dec
inc
adc
dec
add
in
xor
cmp
inc
cli
adc
pop
adc
pushf
enter
adc
aaa
or
out
movsb
mov
add
and
or
add
add
dec
aad
mov
dec
or
pop
xlat
or
cld
pop
sar
out
and
add
lcall
add
and
out
push
shr
daa
ljmp
mov
popa
hlt
add
add
cmpsb
popf
das
popa
pop
cmp
add
add
loop
push
clc
jge
andb
ret
sbb
rclb
inc
mov
insl
add
into
popf
adc
push
mov
jne
cmc
lea
mov
data16
add
or
mov
dec
mov
lods
push
push
xor
inc
nop
jl
pop
sbb
xchg
insb
fsts
fiaddl
enter
cmp
jle
out
cmc
in
add
and
cli
cld
loope
cmpsb
imull
adc
cmp
jnp
lods
scas
lahf
flds
sub
push
pop
inc
add
mov
sbb
pop
clc
mov
addb
dec
pop
int
pop
mov
loopne
sbb
fnop
mov
push
ss
cmp
data16
xchg
test
adcb
add
fadds
call
dec
cmpb
sub
push
jle
inc
outsb
or
add
lods
sub
xor
or
mov
rolb
jb
movsl
add
inc
pop
cld
push
dec
jnp
filds
fimuls
lock
loopne
pop
fsubl
sub
push
in
xor
out
sbbb
xchg
xor
sub
inc
jmp
sbb
push
mov
sub
pop
clc
jbe
add
inc
daa
push
loop
xchg
add
lods
add
sub
or
ljmp
imul
cmp
or
xchg
dec
stos
push
jns,pt
ljmp
sub
xorps
test
repnz
repz
jns
pop
jo
or
stos
mov
daa
xchg
xor
cmp
push
dec
xchg
and
lock
xchg
and
loop
int3
outsl
pop
mov
add
mov
sbb
mov
push
or
cmpsb
scas
aad
bound
push
adc
jmp
mov
mov
notl
cmp
and
mull
lock
shr
mov
sbb
pop
ja
dec
adc
adc
das
jnp
xor
cmp
or
jp
inc
or
pop
cld
bound
ljmp
filds
faddp
popf
cmp
or
sub
scas
cmp
rolb
add
lret
js
sub
xlat
popf
lock
sbb
pop
push
xor
adc
fstp
sbb
mov
cs
pop
mov
jmp
inc
test
cmpl
sbb
dec
shl
cmp
mov
xor
imulb
fcomps
scas
mov
ja
fadds
loopne
in
fstp
pop
xchg
in
add
inc
xchg
js
jae
sbb
jg
or
loope
aaa
andb
add
mov
jne
mov
repz
popf
mov
insb
sbb
andl
mov
out
or
inc
sub
add
or
int3
mov
ds
icebp
inc
inc
and
fsubr
jmp
jbe
add
pop
inc
out
cwtl
pop
push
nop
jb
sahf
mov
cmp
fisttps
add
jo
push
sbb
dec
xor
xor
jecxz
pop
push
add
rorb
dec
fwait
adc
sub
cmp
push
in
dec
add
add
loop
and
mov
sti
push
outsb
jns
mov
add
js
jp
cmp
adc
adc
js
pop
test
or
add
int
mov
add
jb
sub
es
cmp
lahf
divb
pop
jmp
push
andb
les
push
and
dec
sub
xchg
xor
subl
cmp
add
insl
into
out
add
movl
and
and
dec
jp
sbb
xchg
add
add
dec
push
loopne
shl
cld
aam
mov
aam
neg
add
xlat
cmp
add
xor
adc
xchg
add
cmc
push
loopne
push
flds
mov
and
jge
xchg
jecxz
ss
ss
push
test
test
cmp
add
sub
scas
add
loopne
adc
cmp
cmp
cld
push
sbb
lods
jge
dec
mov
mov
dec
mov
ret
xor
cmp
or
enter
inc
jecxz
ljmp
push
loopne
in
and
fs
in
push
rol
or
sub
mov
sahf
out
fistl
enter
push
push
jmp
sti
adc
mov
stos
enter
add
sbb
and
gs
mov
mov
xchg
xchg
loop
or
aam
cld
xor
pop
xorb
fwait
push
mov
sub
jp
repz
xchg
dec
pop
cltd
xor
arpl
lds
or
push
fdivs
repnz
push
cwtl
push
mov
lret
lock
xlat
inc
in
loopne
loopne
pop
shl
je
fcoms
push
int
rolb
scas
jbe
mov
fildll
xor
into
sbb
xor
cld
fucom
sahf
or
lock
in
es
adc
shrl
jne
hlt
popa
xchg
sbb
and
push
lods
and
sub
mov
dec
sub
jae
add
add
adc
nop
adc
sub
rcrl
pop
or
ret
jge
hlt
popf
scas
adc
adc
scas
jne
jo
or
dec
mov
mov
jg
xchg
cs
scas
rorl
and
sbb
xor
test
js
push
add
gs
femms
mov
jno
cmp
adc
push
in
cmpsl
cs
mov
xlat
push
pop
inc
jbe
jae
pop
ret
popa
dec
or
movsb
mov
push
mov
mov
std
cmpsb
pop
pop
scas
test
addl
xchg
adc
xchg
cmp
das
arpl
cld
aam
das
cmc
out
aad
pop
mov
sar
xor
jg
lock
jl
add
lods
out
ds
dec
test
or
fxch
rcrb
pop
push
mov
inc
test
push
out
pusha
push
mov
fs
mov
clc
pusha
test
push
test
cmp
inc
pop
and
mov
imul
ja
test
inc
inc
xchg
add
iret
push
div
dec
loopne
loope
inc
sub
cmp
les
xchg
rcl
rclb
js
loopne
in
pop
out
popf
inc
sub
lcall
push
push
pop
cmpsb
xor
ja
loope
mov
or
call
es
in
add
decb
fcomps
dec
jmp
add
xchg
ljmp
xor
bound
sbb
xchg
lahf
xlat
aas
inc
sbb
mov
popf
sub
mov
and
inc
mov
mov
and
sub
push
pop
js
pop
rorb
pop
fsubrs
or
movsb
leave
lret
sbbl
mov
arpl
fdivr
cmp
xor
sahf
xor
sub
push
xchg
popf
jne
jbe
sarb
add
xor
mov
sub
loop
es
inc
mov
jns
loope
rorb
lock
stos
sbb
ja
in
push
push
jmp
ficoms
scas
dec
mov
call
popa
in
cmp
mov
push
xchg
neg
push
adc
fsubr
imul
push
shlb
movsb
add
sub
mov
and
cmpsl
popl
jg
sbb
sbb
fs
leave
test
sbb
mulb
pop
xor
sbb
jg
push
mov
push
sar
testb
xchg
sub
add
adc
sub
lahf
test
mov
subl
rorl
add
test
pop
data16
movsl
dec
shlb
xor
scas
loope
pop
jne
call
or
out
sbb
dec
pop
jge
scas
mov
repz
and
xchg
inc
sbb
movsl
pop
add
add
rcrl
jp
add
out
adc
fidivs
addr16
stos
repnz
and
incl
and
dec
daa
aad
les
and
arpl
adc
xor
icebp
push
pop
adc
test
sub
ja
sbb
pop
pop
rclb
jae
sbb
out
and
mov
push
or
bound
insb
js
dec
or
sbb
dec
mov
cmp
xor
bound
faddl
add
arpl
arpl
xor
cmp
jbe
cltd
xor
inc
mov
mov
jecxz
maskmovq
idivl
fdivp
and
rolb
mov
sbb
jae
xchg
fsubp
mov
push
dec
xorl
xlat
add
lock
cld
lock
cmp
movl
sbb
mov
and
pop
adc
sbb
lea
sub
std
xchg
adc
sbb
pop
pop
imul
push
and
push
inc
roll
sbb
inc
loope
jl
jne
icebp
add
loopne
cmc
imul
and
xor
add
pop
popl
inc
out
sbb
inc
mov
inc
push
pop
loope
and
out
repnz
push
jp
mov
mov
movsl
push
mov
adc
daa
pop
add
ret
not
ljmp
push
clc
shrb
push
inc
outsl
rorb
fistpll
cmp
jecxz
mov
and
or
sub
pop
aas
xchg
ja
pop
dec
push
mov
adc
cld
pop
or
andl
push
pop
dec
cmovnp
pop
xlat
sbb
xor
out
adc
fnsave
test
cmp
add
cmpsl
popa
add
add
add
fmull
push
sub
add
stos
cmp
addr16
push
mov
lahf
jbe
loopne
sub
xor
fadds
test
sub
jmp
aad
or
andl
bound
inc
or
push
jo
add
add
dec
insb
push
mov
adc
push
pop
lret
push
pushf
pmullw
stos
sahf
jg
cmpsb
sbb
clc
mov
mov
clc
jnp
lock
dec
jmp
mov
mov
push
test
aad
test
adc
fistl
and
notb
adc
or
mov
nop
ss
imul
test
xchg
cmpsb
lock
jno
or
jne
ds
decl
add
jecxz
notl
in
pusha
and
inc
cmp
sbb
adc
sbb
data16
dec
adc
loopne
add
inc
sti
push
sub
sbb
sbb
mov
adc
sbb
inc
or
pop
ss
loop
hlt
leave
das
stos
mov
aad
cwtl
pop
sahf
ret
cmc
neg
sbb
mov
clc
mov
push
mov
mov
push
adc
sti
ja
lret
sbb
adc
daa
insb
adc
icebp
and
cmp
or
nop
inc
push
cwtl
cli
call
mull
and
loopne
pop
cmpsb
mov
call
add
jno
sub
call
dec
aas
pop
fcmovu
ljmp
jecxz
pushf
iret
ljmp
or
fld
mov
mov
push
cmp
sbb
xor
insl
jmp
sbb
pop
push
imul
add
lock
insb
rorb
dec
mov
add
inc
icebp
jo
fs
inc
addb
mov
loop
rcrb
stos
and
out
xor
inc
ficoms
and
loopne
inc
clc
fdivr
pop
sbbl
imulb
xchg
leave
mov
loopne
push
hlt
rorl
outsb
push
loopne
or
add
adc
rol
cmp
inc
jne
aas
push
jmp
fadds
push
lock
loopne
and
lods
rcrb
or
or
pop
fsubl
mov
add
movsb
push
push
inc
lods
loop
call
mov
pop
push
and
or
mov
or
mov
pop
rcrl
xor
arpl
xchg
adc
add
dec
adc
cmpb
xor
inc
mov
ss
divl
mov
int
jl
test
xchg
jg
ret
aaa
xlat
insl
stos
push
add
and
cmc
xchg
ret
adc
push
mov
or
cmpl
test
and
dec
cmp
repnz
and
iret
les
jno
imul
sbb
push
dec
subb
lds
cs
xor
fcomps
sub
sbb
adc
mov
and
adc
call
cs
cmp
lahf
sbb
or
pop
push
imul
aas
push
int3
and
nop
cmpsl
mov
pusha
xchg
movmskps
pushf
cmp
xor
or
loope
clc
inc
push
push
cld
dec
cld
xor
movl
stos
mov
lahf
sbb
jno
sub
loope
les
pop
sbb
cmpsb
pusha
daa
adc
adc
xchg
mov
shll
lods
pop
xchg
sub
lods
icebp
pop
bswap
inc
lahf
outsl
mov
pusha
sbb
or
int3
jp
push
adc
xor
dec
arpl
xor
add
pop
inc
push
adc
push
lea
push
call
pop
gs
xor
and
sbb
aad
pop
inc
les
push
or
mov
add
jnp
ret
pop
inc
loop
sahf
adc
js
aas
aad
cmc
cmpsl
add
mov
mov
cwtl
and
es
cltd
dec
test
pop
iret
mov
xchg
or
dec
and
adc
test
inc
add
loopne
pop
int
ljmp
call
sbb
int
loopne
pop
jno
push
jo
mov
pop
call
aam
ret
xor
jb
int3
dec
fiadds
jle
or
cmp
mov
rorb
inc
mov
mov
mov
cmp
inc
lock
adc
data16
lods
scas
fdivrl
movsl
sub
fwait
xchg
dec
add
add
ficoms
push
sbb
sbb
cmpsb
pushf
addr16
mov
add
adc
pop
out
add
sbb
and
xor
lods
ret
lods
inc
jno
sbb
jmp
xchg
inc
jecxz
or
or
roll
inc
cmp
inc
loopne
push
loope
mov
inc
sub
call
das
scas
mov
sbb
scas
inc
sbb
add
or
mov
in
jno
sub
cmp
rcll
jo
cmc
arpl
aam
sub
mov
dec
mov
scas
inc
lret
sbb
test
or
movzwl
dec
cmp
int3
lods
adc
mov
add
sub
lods
inc
sub
xchg
gs
add
add
pop
xchg
loope
mov
jp
es
push
pop
dec
in
add
xchg
cli
dec
mov
cmp
leave
cs
xlat
pop
addb
int
push
dec
lods
out
xchg
push
lods
add
pop
mov
ja
xor
mov
jo
push
ja
rorl
lock
push
in
jo
mov
fs
push
xor
je
or
and
inc
push
jecxz
add
and
and
jge
cmp
add
imul
or
xchg
pop
sub
cmp
mov
inc
xor
add
mov
jb
adc
loopne
mov
jnp
mov
icebp
dec
pushf
lock
daa
or
bound
push
adc
lock
adc
roll
hlt
fdivrl
inc
out
js
and
and
sub
in
add
adc
jmp
fadds
inc
adc
push
mov
jnp
in
cltd
addb
scas
test
ficompl
mov
push
push
and
leave
in
test
mov
ret
lret
lods
cmpb
in
test
xor
jne
loop
pop
out
and
sbb
out
push
cld
jecxz
loope
push
sub
mov
sub
repnz
lock
out
shl
add
mov
xor
test
mov
imul
popa
fs
roll
aam
add
es
mov
or
add
enter
jb
icebp
mov
xor
jecxz
test
dec
jge
enter
pushf
stc
inc
in
ret
mov
cmp
cld
add
or
pushf
sahf
mov
push
out
cld
add
fsubrl
dec
sub
sub
outsb
daa
jno
jo
fcompl
jg
sbb
movsb
sahf
out
pop
push
cmp
in
rorb
jae
cmpsl
pop
jp
clc
movsl
out
cmpsb
add
clc
mov
add
adc
dec
add
dec
mov
add
ret
xchg
hlt
out
jmp
mov
dec
and
fs
neg
xchg
addl
lcall
faddp
xchg
sbb
add
in
addr16
cmp
cmp
popa
jle
mov
notl
lock
sti
add
lds
movsl
cld
lds
das
cmpl
pusha
sbbb
shrl
in
daa
cmp
rorb
jmp
mov
les
lock
in
test
mov
mov
cmpl
sbb
lock
out
push
cmpb
shll
out
cld
xor
sbb
fstp
mov
adc
pop
adc
out
add
icebp
mov
test
mov
popf
jne
sbb
enter
mov
fimuls
xchg
adc
clc
sahf
ret
out
inc
clc
and
jne
push
mov
xor
adc
ja
sarb
rcrb
dec
and
loop
cmc
push
adc
dec
nop
insl
pop
inc
es
fwait
push
pop
jbe
pop
adc
adc
or
jecxz
in
or
insl
cmpsl
lahf
lock
add
cmpsl
leave
ret
sbb
loop
or
scas
mov
dec
sub
add
leave
int3
cli
dec
jmp
mov
and
aam
mov
jno
mov
inc
call
mov
inc
adc
clc
add
xorl
rcll
faddl
cmc
gs
stos
pop
shl
lods
or
ret
push
adc
loopne
iret
or
and
jecxz
and
fsubrl
xor
inc
pop
test
push
scas
in
add
aam
cmpsl
adc
mov
xor
movsbl
addl
dec
sahf
mov
test
jecxz
push
pop
pop
add
add
sbb
into
shrb
pusha
inc
mov
imul
inc
addr16
fsubrs
pop
dec
loopne
mov
sbb
adc
shlb
xor
push
outsb
sub
cmp
xchg
sarb
ja
jo
shlb
or
testb
add
cmc
rorb
outsl
psrlq
mov
xor
and
ffree
ret
pop
bts
daa
mov
nop
jmp
cmp
cwtl
jmp
loope
mov
and
out
jge
aaa
lock
enter
scas
inc
rorb
popa
or
adc
fwait
xor
aad
jae
sub
adc
mov
out
xor
scas
rorl
jne
ljmp
in
push
push
ret
mov
movsb
xchg
add
jo
xchg
in
pop
dec
fcoms
mov
aam
daa
scas
xchg
push
sbb
or
add
xor
sbb
mov
shlb
rolb
fs
arpl
adc
and
and
lret
sub
mov
call
ret
dec
mov
jne
test
mov
xchg
mov
call
or
jbe
shrb
in
fimull
push
jne
adc
je
js
inc
or
mov
fadd
rorb
xchg
test
gs
mov
mov
scas
and
xchg
push
les
jl
cmp
mov
in
sbb
dec
insb
jecxz
in
sbb
sub
adc
mov
xor
adc
or
lock
xorb
cmp
cld
cmp
mov
std
repz
addl
cld
pop
aad
mov
dec
ret
xchg
mov
add
xchg
sub
call
mov
jmp
pop
adc
mov
sbb
sti
xor
divl
aam
mov
mov
dec
sysexit
inc
fimuls
shrl
or
pushf
shlb
rorl
cmp
and
fnstcw
lcall
add
push
cmp
loop
daa
mov
push
addb
loopne
fiaddl
push
filds
js
loope
lods
fists
jno
lds
inc
add
xor
add
andl
push
call
jmp
test
je
push
scas
add
pusha
xor
sub
and
leave
cld
or
xor
mov
test
cmp
mov
add
adc
ljmp
cmpsl
aaa
xchg
clc
adc
pop
es
dec
add
push
sub
fsubrs
hlt
imul
mov
adc
mov
fwait
xchg
pop
mov
test
cmp
xchg
pop
add
xorb
fsubr
pop
mov
sub
add
inc
lcall
adc
test
jecxz
aam
inc
ss
dec
test
adc
dec
mov
jle
rcrl
repz
rclb
mov
inc
or
adc
pop
out
dec
loope
sbb
sub
cmp
mov
test
stos
xor
xchg
and
cli
push
loopne
add
ret
inc
push
push
xor
js
sub
outsl
es
lea
push
push
push
std
pop
adc
push
out
adc
xor
dec
nop
pusha
mov
imul
or
add
shl
and
pop
incl
mov
push
popa
ret
mov
adc
xor
dec
sbb
pop
jbe
sarb
dec
sub
ret
jno
test
pop
push
mov
jecxz
fidivrs
mov
hlt
cmp
out
test
loopne
sub
inc
es
pop
cltd
call
out
push
add
loopne
add
xchg
jno
mov
sbb
ret
sti
fwait
mov
imul
notb
jge
lock
in
push
insb
ficoms
xor
test
sub
xor
dec
dec
scas
subb
or
mov
add
out
or
jno
mov
rcr
mov
adc
shlb
daa
sub
sub
ss
sbb
das
test
cmp
cmp
enter
push
pop
pop
adc
daa
xor
ljmp
pop
xor
or
mov
mov
adc
cmp
sbb
pop
ss
rolb
xor
dec
adc
lret
movsl
push
push
addps
test
mov
or
ja
shl
shl
push
cmp
lock
mov
mov
fiaddl
bound
fildll
or
inc
and
push
pop
cltd
sub
aad
cmc
cmp
dec
in
fstps
ljmp
pop
sbb
mov
inc
stc
adc
sbb
lcall
xchg
mov
mov
fnstsw
loopne
sbbl
xchg
cs
pop
jnp
sbb
hlt
xorb
pushf
aam
pushw
stos
and
jb
leave
in
add
rol
mov
mov
adc
inc
not
push
adc
sbb
jbe
mov
jo
and
fcomp
sub
jge
fwait
sbb
adc
jbe
mov
stos
cmc
cmpps
pop
popl
add
out
loop
rclb
xchg
call
js
fisubl
sbb
scas
mov
cltd
cmpsb
adc
fsubrl
fdivs
out
add
cmp
rol
cli
xor
movsl
rolb
push
lods
sub
cmp
iret
fdivrl
cltd
sub
roll
dec
clc
sub
inc
pop
push
int
pop
and
popf
loope
sahf
mov
add
pop
add
sbb
mov
sbb
call
loop
fwait
test
sub
aad
add
loopne
insb
sub
out
aam
mov
add
movsl
sbb
mov
test
mov
rolb
mov
sarb
filds
js
cmp
aas
imul
call
or
or
movsl
out
leave
add
mov
shlb
dec
loope
mov
sub
push
push
push
push
inc
fidivl
stc
mov
xor
jae
idiv
nop
mov
lock
adc
test
pop
or
je
inc
arpl
rorb
xchg
in
or
dec
dec
das
xor
call
add
iret
rcrl
jl
outsl
test
rcrl
les
loopne
inc
test
sbb
test
int3
int
sahf
lret
jge
rolb
test
out
add
cmp
out
mov
dec
incl
pop
fwait
or
push
adc
add
xor
dec
shrb
jge
aad
or
mov
pop
and
mov
cmp
sahf
sbb
aaa
sbb
push
stc
cs
inc
sbb
sub
add
aam
pop
dec
call
lea
mov
cmp
scas
out
jl
loopne
loope
sub
jp
adc
inc
mov
fcompl
aam
push
sub
hlt
or
cmp
push
outsb
ret
in
lods
aas
jb
jo
pop
jno
sbb
rorl
insb
out
js
notb
sbb
xor
mov
dec
loope
push
ss
icebp
xor
push
mov
push
add
mov
dec
jo
bswap
push
push
sti
pop
push
push
lahf
ds
stc
cmp
int3
push
std
add
das
in
test
dec
lret
aaa
les
push
int3
sbb
psubsb
fsubr
ljmp
pop
or
cmp
xchg
adc
and
shll
loopne
scas
adc
orb
push
adc
lea
popf
orl
adc
aaa
xchg
xchg
xchg
cwtl
push
mov
jg
loop
sub
sbb
insl
fsubl
sub
pop
cmp
std
loopne
aas
loopne
pop
dec
push
push
rcrb
ds
and
idiv
add
add
sbb
cmp
xor
or
enter
out
mov
dec
xchg
xchg
dec
mov
lahf
jbe
loopne
xchg
xor
call
jno
mov
les
lcall
cmp
xor
fistpl
pusha
adc
dec
and
rorb
ds
pop
mov
scas
jns
dec
sbb
xor
and
cmp
test
dec
daa
or
inc
push
sbbb
inc
orb
sbb
cld
sbb
jecxz
xchg
lret
mov
sub
inc
sub
add
in
ret
and
and
or
sbb
or
push
xabort
push
sbb
xchg
xor
xchg
lcall
mov
jp
adc
inc
lock
mov
sub
mov
and
test
or
push
cmpsb
mov
inc
and
push
imul
sbb
inc
rolb
icebp
cmp
mov
or
push
sbb
ffree
movsl
jle
movsl
sub
shrl
pop
xorl
andl
loopne
or
jns
xchg
adc
mov
or
test
lcall
scas
lahf
inc
test
inc
nop
push
aam
lret
push
loopne
inc
rcr
addb
sahf
add
data16
sub
add
sub
dec
cwtl
std
jle
lea
push
push
jb
or
inc
xchg
adc
call
pop
or
push
xchg
mov
inc
adc
dec
mov
sub
inc
inc
add
sbb
loope
cmp
jp
ja
neg
and
jmp
mov
pop
aad
pop
push
xchg
push
jbe
or
jo
add
fildl
pop
mov
mov
rorb
sbb
push
push
mov
negb
adc
cmp
inc
cmp
mov
add
mov
aad
je
mov
loop
into
sub
bound
cmc
adc
inc
push
bound
iret
negl
popl
adc
sti
jmp
xor
push
push
test
inc
addr16
insl
xchg
scas
pusha
lods
addl
shlb
comiss
ljmp
sbb
mov
pop
jae
sbb
sti
and
adc
dec
or
add
and
shlb
or
jecxz
fidivl
add
in
sbb
and
fstl
sti
xor
inc
scas
fisubl
pop
loopne
push
sbb
inc
adc
testl
add
or
or
pusha
jno
cmpsl
mov
fbld
pop
mov
xchg
daa
int
das
pop
push
cmp
bound
xchg
idivl
cwtl
or
cmp
sbb
cmp
mov
lret
sub
adc
fadd
push
sub
and
cmp
pop
sub
jmp
jb
sarb
dec
cmp
mov
aas
dec
sbb
push
dec
mov
push
add
jo
add
cmp
cmpb
stc
cs
sbb
fcompl
sbb
jns
or
out
mov
addb
jbe
sahf
mov
roll
lret
lret
fucom
xchg
sub
in
movsl
shlb
or
pushf
adc
ret
xor
and
fsubrl
shlb
mov
jns
cmpl
pop
add
xchg
pop
mov
mov
fisttpll
fadds
loop
sbb
adc
pop
lock
stc
lea
push
in
ds
clc
dec
ss
jg
jnp
in
xor
push
inc
or
sub
lods
xchg
hlt
jmp
ret
jbe
mov
mov
in
push
jbe
dec
and
fldt
push
push
dec
stc
mov
pop
or
xchg
dec
add
mov
jne
mov
and
jp
ret
mov
xor
hlt
add
out
add
or
or
jmp
sbb
loope
mov
xchg
xchg
daa
movsl
in
push
sbb
jmp
cmpb
add
lea
inc
lahf
ljmp
sbb
loope
jne
mov
lock
test
faddp
cmp
and
sbb
mov
jge
mov
lcall
sub
sbb
incl
imul
and
jo
pop
jae,pt
and
mov
mov
xchg
pop
dec
dec
sahf
jo
add
loope
ret
push
pushf
das
push
cmp
enter
push
imul
jnp
xchg
add
jae
or
sub
repnz
jns
inc
ret
sub
jecxz
push
pop
sub
pop
or
dec
push
sub
cmp
ja
inc
jg
push
xor
fcmovnbe
cmp
aad
dec
or
cld
mov
test
ja
dec
sbb
jge
mov
xchg
sub
or
add
sbb
decb
add
sti
insl
mov
xchg
nop
mov
mov
lods
jmp
jmp
cmp
and
xlat
outsl
push
sbb
incl
cmp
dec
adc
or
inc
ljmp
jmp
ret
lock
in
or
xor
mov
add
jb
mov
mov
cs
outsb
test
lods
pop
pmaxub
cmc
push
es
dec
jmp
lea
daa
shl
sbb
add
jp
out
lds
fistl
shr
sbb
fistpll
jmp
xorl
daa
mov
push
scas
jo
inc
adc
stc
out
cmpsb
dec
dec
sahf
push
hlt
cwtl
ret
jno
repz
and
sbb
sysenter
ret
sbb
add
sbb
adc
jmp
push
adc
jp
mov
xor
push
lods
sub
mov
mov
inc
test
in
sti
adc
das
stos
push
and
in
cmpsb
fiadds
icebp
fisubrs
push
mov
ret
fsts
orb
mov
icebp
sbbl
jle
ficoms
push
sbb
icebp
in
insb
adc
sbb
add
push
pop
scas
dec
sbb
sbb
adcl
sbbl
push
inc
push
cmp
hlt
xchg
js
jo
andb
xchg
lds
cmp
scas
jno
sub
push
jge
mov
imul
mov
jmp
dec
scas
add
inc
mov
popa
jae
mov
jmp
dec
push
mov
dec
push
adc
add
xor
mov
cmpl
dec
xor
xlat
repz
mov
hlt
mov
es
clc
jbe
jl
sbb
inc
add
enter
fs
loope
jbe
mov
jae
xlat
adc
enter
sbb
mov
add
sub
cld
in
xor
xlat
jbe
outsl
loop
jo
popa
inc
and
int
adc
xorb
test
jb
pop
sub
out
mov
jecxz
xchg
mov
iret
mov
inc
cmp
js
imul
dec
inc
push
aad
mov
and
sbb
cmc
xorb
fdivl
sub
mov
clc
fbld
test
ja
sbb
movsl
ret
cmp
jb
xor
addb
sbb
mov
cmp
cmc
cmpl
jbe
jge
cmpsl
mov
sub
shll
dec
out
lods
ja
push
or
fidivrl
sub
pop
rorl
loop
mov
test
loop
out
add
sub
dec
xlat
mov
inc
cwtl
les
dec
mov
mov
daa
ds
adc
xchg
push
adc
add
clc
ret
cmp
aaa
sahf
inc
add
xor
in
or
hlt
stos
add
jmp
outsl
loopne
movsb
xchg
movsb
loope
dec
aas
jecxz
or
ret
adc
and
jne
inc
jp
mov
push
dec
jmp
pop
push
sbb
test
ljmp
jne
jmp
dec
ljmp
mov
popf
push
sub
pusha
or
cmpsb
rolb
stc
addb
mov
lock
inc
fadds
sub
cmpsb
mov
add
fsubr
dec
test
jb
ds
add
fldl
out
ja
dec
add
inc
inc
in
and
xor
jge
test
in
les
inc
push
adc
scas
push
sub
push
pusha
stc
push
adc
jno
or
sbb
xor
ds
loope
icebp
sbb
or
sti
xor
xlat
cmp
test
out
or
inc
addr16
loope
adc
dec
mov
pop
orl
clc
movsb
adc
in
cmp
xor
jb
movsl
std
popf
lock
insb
out
pop
insb
and
jg
sub
xchg
rorl
jbe
dec
mov
adc
in
mov
out
xchg
jb
xchg
popa
xor
inc
jnp
jo
loopne
push
shrl
push
aad
outsl
mov
fmuls
jae,pt
orb
imul
jmp
and
mov
enter
fcomip
test
jns
fsubp
add
into
ret
in
addb
jbe
std
dec
ret
xchg
mov
ljmp
push
mov
sti
sub
stos
add
add
shr
mov
pop
lods
test
mov
stc
lea
add
push
sti
fmull
xchg
mov
sub
mov
inc
incl
pop
pop
femms
sbb
cmpsl
jne
je
sahf
and
test
cmp
into
or
lret
jae
cmp
les
iret
pop
out
int
hlt
xchg
pusha
mov
push
cmp
jp
adc
and
stc
sub
cmp
push
cmp
lret
filds
aaa
and
or
inc
jmp
adc
sub
push
push
xor
dec
and
cmp
outsb
icebp
call
or
nop
subb
fcomps
pop
clc
pushf
movsb
sub
pushf
push
lret
roll
inc
push
fs
inc
setno
aas
adcb
adc
test
cmpsl
dec
pushf
mov
or
xchg
add
pusha
xorb
ljmp
xchg
xor
add
inc
outsl
jb
push
inc
jne
pop
push
or
je
mov
and
ljmp
test
test
jmp
rorb
sub
pop
and
add
xchg
call
sub
push
jno
hlt
xor
mov
pop
int
cmpsl
push
pop
sub
and
jo
cmp
icebp
xchg
xchg
ljmp
adc
fst
lret
lea
xor
outsb
arpl
nop
cmpsl
faddl
int3
or
clc
sub
mov
mov
enter
shrb
add
fists
cmpb
and
inc
push
sbb
sbb
inc
jecxz
pop
jns
xor
push
push
mov
add
aam
add
popa
outsb
pop
push
call
pop
add
mov
jp
lea
sbb
lret
or
stos
cld
and
cli
push
or
repz
loope
dec
cmp
arpl
cld
mov
jns
sbb
xor
pop
loope
jnp
mov
inc
mov
clc
imul
pop
rolb
jmp
test
je
gs
add
xor
mov
shrl
xor
xchg
mov
or
mov
cmp
pusha
lock
lahf
iret
cmp
loope
adc
push
test
ja
dec
jnp
mov
imul
add
adc
adc
mov
popa
inc
jl
insb
out
xchg
xchg
add
lods
movsb
pop
js
cmp
and
mov
mov
pop
xor
push
dec
fdiv
push
or
mov
xchg
lcall
mov
jbe
jb
rcrb
and
push
sub
pop
fstl
in
jecxz,pn
in
and
or
mov
stos
repz
mov
js
push
add
or
mov
xor
decl
mov
lds
clc
call
std
dec
cld
je
aaa
jne
sti
and
inc
dec
aam
xor
outsl
test
push
ret
aas
js
push
popa
mov
leave
hlt
xchg
add
or
xchg
cmp
js
mov
aad
cwtl
or
mov
push
nop
fldt
dec
pop
repnz
imul
or
and
mov
xlat
das
add
loopne
xor
clc
in
shr
icebp
or
out
fistl
add
loop
mov
mov
lcall
hlt
shll
sbb
sbb
aaa
sbb
dec
or
jo
clc
sbb
sbb
loopne
add
fistl
aam
test
jne
xor
lock
push
add
pop
pop
dec
jge
jae
and
and
fidivl
jp
fwait
sbb
mov
mov
cld
jbe
test
inc
sub
jp
mov
fld
flds
or
mov
mov
push
jae
cmp
add
or
daa
lds
cli
repz
pop
aaa
adc
fcoml
cld
adc
hlt
orl
mov
loopne
mov
and
jbe
ja,pt
push
das
sub
mov
fsubs
or
call
arpl
popa
add
inc
jno
jl
push
pop
jmp
push
mov
insb
mov
insl
mov
sbb
xor
je
adc
not
jg
scas
lods
je
addr16
inc
and
imul
dec
fcomps
mov
add
shr
ret
aas
jnp
adc
cmp
jg
fwait
in
adcl
jmp
sub
imul
xchg
adc
xchg
dec
insb
cmp
out
in
shl
rorl
outsb
lods
mov
sbb
lods
imul
push
pop
icebp
dec
dec
mov
dec
add
lods
repnz
pusha
lea
fdivrl
fxch
xor
shll
ret
lods
inc
dec
and
sub
scas
jg
xchg
jmp
idivl
dec
add
test
insl
cld
stos
lods
jno
andl
enter
int
push
aad
xlat
cmp
sbb
xchg
adc
dec
orb
sbb
add
addb
js
rorb
aas
mov
sbb
adc
push
aam
pop
mov
ret
dec
jmp
push
xchg
jmp
xchg
xchg
inc
cld
add
call
add
dec
shlb
mov
sbb
or
add
shrb
mov
out
xor
arpl
pop
sub
mov
adc
jmp
cs
sbb
loop
or
or
loopne
mov
or
fmul
add
cmp
adc
jbe
jecxz
add
xchg
or
jl
js
mov
shl
inc
sti
lock
cmp
or
mov
ficomps
mov
aam
mov
add
jb
pop
fs
jge
rcll
ret
clc
out
lea
cmp
leave
push
loopne
loop
sahf
add
adc
imul
loop
outsl
lahf
push
add
and
adc
sbb
les
jecxz
ficoms
xchg
xor
orb
adc
push
mov
les
sub
je
test
pusha
sbb
jecxz
or
mov
dec
outsb
mov
sbb
sub
enter
mov
imul
shrb
or
sub
call
add
rcrl
and
scas
add
inc
and
rorl
jl
and
clc
mov
jg
jmp
mov
pop
push
dec
and
cwtl
jl
daa
jbe
sbb
and
addb
icebp
dec
leave
lock
in
fs
cli
and
adc
into
sbb
mov
mov
dec
jge
cmp
inc
fs
adc
sub
dec
sub
or
xor
out
jge
jg,pt
fidivrl
stos
or
cmp
mov
xchg
cmovo
outsl
rorb
call
sbb
push
call
cmpsl
xchg
add
xorb
mov
or
aaa
movl
test
mov
and
dec
out
dec
inc
addb
mov
insl
fcomps
jg
and
sbb
das
and
and
xchg
inc
add
sbb
sarl
sahf
push
jge
cmp
fdivl
push
fmuls
cmp
or
in
dec
cmp
sbb
xlat
xchg
sub
add
js
xor
jecxz
rol
add
cmpsb
pushl
push
jo
lcall
movzbl
idiv
or
xchg
lea
fsubl
insb
out
sub
inc
in
stos
jnp
add
scas
cli
enter
fwait
lock
add
mov
adcb
inc
clc
push
ja
rorb
and
add
add
fdivs
push
out
cmc
or
jle
cmp
fimuls
nop
lods
jp
xchg
inc
clc
hlt
xor
mov
stos
mov
xlat
pushl
cmp
cmpsb
bound
mov
loope
ret
xor
jo
pusha
les
and
add
and
in
cli
xor
add
and
in
stos
lahf
ret
lahf
and
or
scas
lea
into
shr
dec
jo
test
lock
loopne
bound
mov
or
into
pusha
icebp
or
mov
js
leave
or
shrl
cltd
rolb
mov
rorb
xor
push
mov
mov
push
cltd
ja
icebp
fbstp
clc
dec
xchg
xchg
jge
loop
xchg
sub
leave
jb
add
es
nop
add
xchg
add
adc
push
lods
clc
rcll
dec
iret
push
xlat
sub
insb
cmp
xor
xchg
adc
push
addb
stos
aam
add
test
dec
cmp
call
inc
mov
adc
pop
sbb
dec
aaa
push
push
adc
cmpsb
dec
mov
or
pop
repz
jb
loope
mov
and
adc
repnz
add
icebp
in
pop
ficompl
inc
flds
adc
and
adc
cmc
fldenv
ss
ficomps
and
fiaddl
andb
call
lret
adc
dec
mov
insl
inc
pop
mov
jns
adc
sub
sar
sub
sub
xor
sbb
pop
pusha
cmp
clc
and
outsb
mov
jbe
dec
test
scas
push
push
imul
aas
jo
in
pop
arpl
inc
and
fadd
push
imul
scas
and
mov
xor
dec
sahf
add
sbb
fsubs
adc
loopne
lods
sbb
pusha
jns
loopne
or
or
inc
push
lock
xchg
cs
add
sbb
in
and
or
loopne
clc
lret
add
in
sub
xchg
fnstcw
mov
pop
inc
and
xchg
js
push
sbb
fcmovbe
fcmovnu
xchg
adc
ljmp
xchg
out
add
test
dec
jl
xor
in
clc
push
scas
xchg
cs
call
cli
int
push
cmp
add
sub
sub
loopne
push
push
in
cmp
out
cmpsb
mull
rorb
iret
into
fisubl
addr16
mov
add
add
jmp
jb
mov
push
repnz
sub
sbb
in
leave
sub
outsl
add
cld
out
xchg
sub
xchg
je
daa
pop
les
push
pop
shr
push
ss
xchg
mov
xor
dec
dec
mov
shl
sbb
dec
adc
cmp
add
mov
pop
push
in
les
leave
add
and
cmc
pop
addl
loop
add
and
nop
add
inc
sub
cmp
sub
loopne
cmpsl
dec
sbb
loop
les
push
cmpsb
notl
rolb
mov
lea
inc
add
popa
fstps
mov
fcmovnu
es
popf
arpl
and
or
adc
sbb
sub
jmp
enter
loopne
add
xor
iret
xor
mov
cmpl
dec
fimuls
jnp
test
scas
lods
adc
jno
clc
dec
adc
xlat
mov
movsl
or
add
jmp
xchg
or
aas
push
scas
jbe
faddl
ljmp
nop
lret
fiadds
bound
add
mov
cmpb
add
push
adc
sti
cmp
mov
fidivs
test
outsb
adc
std
and
std
sbb
jb
addl
jne
ret
dec
icebp
fdiv
pop
inc
dec
in
or
add
or
rorb
xor
cs
add
jmp
push
js
test
add
cmp
or
cmpsl
or
jne
cmp
sbb
insb
dec
ljmp
push
cld
jmp
bound
pushl
decl
dec
notl
fidivrs
les
outsl
mov
out
aas
xchg
inc
lea
or
cmp
or
roll
divb
xor
pop
inc
add
fdivrl
ss
jb
push
enter
sbb
jp
nop
push
divl
out
xchg
cli
loopne
mov
push
or
orb
pop
and
testl
pop
push
cli
adc
outsb
pusha
stos
xchg
sarl
movsb
adc
jmp
mov
pop
xor
or
addr16
fsubrl
cld
call
stc
inc
adc
cmp
icebp
out
or
push
or
cmp
int3
and
or
dec
jno
insb
fstpt
lret
jg
inc
nop
push
jg
cmc
mov
inc
push
add
mov
and
addr16
jne
mov
out
cmp
xchg
fadds
rorl
fidivs
pcmpgtw
ret
and
sti
jmp
mov
inc
test
sbb
pop
add
xor
pushf
les
jo
mov
adc
sbb
mov
jb
das
test
out
mov
fwait
mov
je
sbb
adc
int3
jg
xor
sub
xorl
mov
jle
and
jae
lock
xor
loope
sub
push
jmp
mov
int3
fimull
sub
mov
mov
push
rorl
xlat
pop
shl
jb
out
sarb
push
test
inc
out
pop
mov
rol
sahf
sti
mov
andl
dec
das
fdivs
call
sbb
mov
cld
mov
pop
cmp
scas
movb
dec
ja
mov
loope
pop
sbb
sbb
pop
jno
xchg
rcrb
inc
gs
jo
loopne
push
fwait
mov
test
jecxz
pop
pop
add
xor
movsl
fwait
fs
add
pop
shrl
xchg
ret
cs
ret
fildll
or
add
rol
shlb
sbb
das
mov
pushf
adcl
loope
lods
pop
cmpsb
int3
push
test
pushf
loopne
xor
cmpb
data16
pop
subl
pushf
lahf
mov
in
pop
popa
jl
mov
pushf
xorl
sub
cmc
inc
xor
add
stos
loopne
mov
aad
jnp
decl
pop
fbld
xor
and
test
jmp
das
jmp
aam
xchg
mov
fldenv
insl
movsl
in
fbld
rolb
dec
ret
shrb
negb
dec
or
cld
mov
mov
pop
fwait
in
xchg
rolb
and
aaa
aad
mov
ror
pusha
rolb
out
mov
inc
and
lahf
fwait
loop
pmaddwd
dec
scas
fsubp
cli
test
push
dec
cld
inc
mov
mov
or
das
sahf
and
mov
sbb
or
push
ret
add
shlb
xchg
jno
pop
xchg
arpl
add
scas
sub
in
sub
js
scas
cld
jne
ds
rorb
and
negb
dec
rcrl
mov
shll
cli
cmp
adc
mov
xor
inc
mov
es
sarb
mov
dec
popa
in
lret
push
shr
ret
lret
enter
pusha
ret
adc
inc
jo
pop
xchg
push
jb
xchg
add
inc
lock
fdivr
and
dec
loopne
sub
enter
xor
loopne
imul
hlt
call
sub
xlat
rclb
xor
mov
add
xchg
or
out
xlat
pop
aam
add
leave
shlb
add
xor
jno
shll
xor
jmp
movsb
sbb
aas
popa
mov
dec
pushl
push
push
mov
add
pushf
add
push
das
sub
loope
xchg
and
jo
ljmp
int3
scas
or
push
or
mov
test
imul
ds
enter
mov
lahf
fiadds
cmp
popa
nop
xchg
add
idivl
rcll
pop
jl
jmp
sbb
push
fidivrl
or
mov
mov
ret
pop
insb
test
rorl
add
clc
jnp
jg
pop
pop
inc
not
dec
neg
xor
push
sbbb
xchg
sub
inc
fldl
dec
mov
sbb
inc
sbb
xchg
pop
repz
shlb
ss
or
push
cmp
mov
fwait
cwtl
out
xor
aam
lods
add
jo
push
push
or
fmuls
orb
mov
cmpsb
pop
pop
lcall
cmp
or
jnp
xor
sbb
mov
jp
test
lods
add
lods
insb
scas
insl
sar
loope
push
popl
jmp
mov
and
sbb
push
and
push
aaa
pushf
xchg
pusha
jno
hlt
push
in
outsl
ret
mov
sti
leave
adc
cmp
and
stos
js
daa
adc
mov
out
test
xor
hlt
mov
fnstenv
add
dec
int
pop
cmp
rcrb
jl
push
shlb
mov
add
insl
or
cmpsb
rcrl
movsb
addr16
mov
roll
std
and
inc
jno
xlat
js
and
ds
sub
ljmp
cmpsl
lcall
jns
pop
xchg
mov
fsubs
lock
gs
add
xchg
push
test
adc
insb
sbb
jo
cmpl
or
or
xor
arpl
addr16
mov
mov
hlt
iret
clc
popf
adc
test
cmp
xor
add
cld
fsubs
cli
jns
loopne
xor
cmpsb
cmpsl
push
cmp
loop
insl
bound
or
jnp
push
insb
mov
mov
or
add
sarb
or
inc
rol
mov
jle
sub
inc
xchg
inc
mov
pop
hlt
mov
xchg
jmp
cwtl
adc
mov
lock
or
ljmp
data16
mov
in
pop
sub
cmp
std
or
cmp
sbb
mov
dec
std
add
adc
and
adc
xorb
stos
inc
push
adc
sub
orb
imul
cli
add
mov
popa
pop
add
call
mov
icebp
in
sbb
dec
adc
aam
lds
test
jns
sub
inc
movsl
popa
add
xchg
loop
shrl
adc
pop
das
pop
test
add
pop
add
rcl
imul
ja
dec
inc
dec
xchg
dec
mov
mov
jmp
pop
ljmp
fildl
and
sub
xor
call
lods
add
xor
add
jmp
cmp
push
xor
sub
sub
out
xor
or
loopne
xor
in
adc
lods
inc
rcrb
cli
dec
jge
je
xchg
sbbb
push
shrb
add
add
popl
insb
cltd
mull
sbb
inc
add
shl
lods
notb
mov
sub
push
push
cmp
fs
negb
dec
or
sub
int3
mov
fsubrp
out
mov
cli
inc
mov
cli
or
dec
outsl
dec
add
xor
push
dec
rcll
test
xchg
add
xor
inc
jmp
ret
mov
pop
mov
adc
mov
dec
loopne
fs
fisubrl
dec
push
rolb
sub
and
add
pop
icebp
les
stos
sbb
mov
test
dec
popf
add
in
xor
pop
push
sbb
and
nop
jo
sarb
add
stc
xor
pop
mov
and
add
or
cmpsl
xchg
cmp
xlat
outsb
int3
add
ljmp
in
sbb
aam
xchg
fsub
pop
or
cld
shll
cld
out
add
adc
andl
rcl
data16
js
jp
inc
aam
test
popa
sbb
test
or
or
add
test
popa
aam
cli
pop
stc
out
movsl
inc
aaa
fimull
pop
pop
pop
loope
mov
fs
xchg
or
push
mov
ror
cmp
dec
pop
push
pop
dec
jmp
sbb
js
inc
mov
fisttps
jp
inc
mov
stos
or
test
pop
fiaddl
xchg
or
or
adc
jmp
adc
push
js
xor
popa
loopne
subl
mov
aam
aam
lock
outsl
mov
js
adc
lds
pop
pop
or
pop
xchg
int3
mov
add
jecxz
call
push
repnz
adc
or
xchg
mov
cmp
and
leave
and
pop
cmc
mov
or
lcall
lret
push
dec
imul
insb
stc
jnp
add
movsl
dec
add
leave
rolb
jmp
xchg
bound
ss
and
cmpsl
das
icebp
in
sbb
or
mov
ret
js
jbe
dec
ffreep
and
shlb
les
add
jb
dec
in
imul
add
imul
pop
movsb
add
sahf
xchg
adc
push
dec
and
cmpsb
out
add
loope
pop
xchg
mov
das
sbb
call
and
pusha
jg
rorl
inc
cmp
jle
xchg
mov
jg
popf
out
inc
sub
jno
jecxz
lret
out
add
dec
jbe
xor
enter
or
inc
outsb
enter
or
jge
testl
jg
jno
popa
nop
pop
enter
push
loopne
xor
xor
movsl
mov
iret
cmpsb
js
add
sub
daa
loop
mov
mov
cmp
in
cmp
mov
ljmp
das
xchg
shlb
daa
push
dec
roll
cmc
loop
test
mov
sbb
es
loope
push
movsl
hlt
ret
jmp
in
jecxz
fcomps
cmp
test
loop
push
dec
fcoms
pop
mov
adc
enter
and
or
cmp
xor
xchg
inc
cmp
lahf
sbb
sbb
shll
mov
inc
add
shlb
jmp
sbb
add
int
xchg
lock
mov
pop
or
push
mov
lea
cmpsl
mov
loopne
movl
ret
test
icebp
dec
cs
decl
cmp
jg
xor
shll
add
inc
sahf
fstps
jne
add
inc
xchg
jle
rclb
inc
xchg
sub
push
add
push
mov
add
in
add
add
push
lahf
dec
xorl
cmp
inc
fcmovu
pop
pop
jmp
pop
sbb
lods
mov
leave
mov
insl
adc
and
add
mov
push
mov
out
add
and
mov
mov
push
jge
mov
jns
jmp
stc
sub
repnz
repz
loop
sub
pop
pushl
adc
or
test
jbe
pop
int
repz
jmp
out
test
push
das
cmpsb
out
fildll
dec
inc
adc
pop
sbb
fcompl
add
int3
jo
pop
shrb
xchg
xor
mov
or
inc
rolb
mov
inc
inc
jnp
cmp
out
pop
sti
pop
jne
movsl
jmp
xchg
nop
sbb
dec
shll
cmp
sahf
inc
mov
add
cltd
cmp
mov
pop
lock
push
push
das
cmpsl
lret
jne
fnstcw
dec
and
push
repz
loopne
iret
sbb
shlb
sub
and
repnz
cmpsl
add
jne
std
daa
ljmp
and
loop
fidivrs
es
insb
inc
movsb
insl
stos
jo
popa
cmp
pop
xchg
pop
jmp
pop
mov
jb
rclb
xchg
mov
xchg
pop
pop
cmp
push
inc
xchg
xor
push
xchg
jp
inc
dec
sub
push
or
fcmovu
loopne
loopew
jmp
pop
aam
adc
or
adc
or
test
aas
xchg
fdivp
mov
jne
dec
xlat
pusha
fisubrl
push
cmp
add
sbb
outsb
push
enter
adc
xor
dec
fisubrs
push
ret
push
sbb
mov
xor
clc
dec
repz
cmp
leave
jns
test
push
cmpsl
sbb
add
fisttps
and
add
pop
push
fistpll
sbb
mov
and
pop
and
test
mov
cmpb
push
movsldup
inc
pop
or
adc
jg
lcall
nop
mov
arpl
cmp
inc
cmp
adc
add
ja
mov
xor
dec
repz
add
push
mov
dec
pop
pop
add
add
adc
push
fildl
notb
lock
push
push
int
ja
inc
jno
xor
loopne
push
push
or
mov
lds
cmp
pop
pop
fistpll
cmp
push
pop
add
jo
and
and
sbb
and
into
enter
or
pop
sub
hlt
adc
test
xlat
shrb
daa
and
jmp
filds
aas
jns
mov
roll
out
add
and
shll
jne
and
pop
negl
shll
call
and
cmp
adc
jae
pop
loop
shll
jno
jecxz
lahf
jo
inc
xchg
fisubl
push
pop
push
das
sbb
push
add
cmp
in
cmc
mov
push
orb
lods
sarl
dec
adc
nop
fiaddl
call
inc
in
faddl
adc
push
fcoml
sbbl
dec
pop
out
test
jne
ret
xor
add
lock
sarb
mov
scas
lock
and
leave
sub
adc
popf
jno
sbb
das
icebp
hlt
lret
pop
pop
add
or
mov
out
add
loopne
jp
or
sub
xchg
sarb
std
loop
pop
sbb
into
cmp
jle
shlb
lea
aas
inc
test
sub
mov
xchg
add
or
jl
fsubrl
adc
dec
adc
gs
pop
rolb
les
or
hlt
add
and
xor
xchg
call
cmp
sti
or
cmp
clc
dec
lock
jp
or
fiaddl
js
sub
inc
leave
std
cmp
cltd
orl
sahf
sbb
fcmovnu
rorb
jne
jnp
adc
sbb
jp
pusha
add
shrb
stos
sbb
or
push
xor
inc
shll
add
mov
fs
test
push
cmp
mov
jne
xchg
fimull
xchg
call
push
push
mov
pop
xchg
push
mov
ja
and
out
mov
cmp
call
push
add
inc
es
add
dec
add
movsb
lock
dec
test
sub
shrb
mov
dec
cmp
xor
mov
ret
xor
in
xor
sbb
lret
inc
inc
addb
xchg
jo
xor
jp
add
outsb
or
and
mov
xlat
test
cld
xor
popa
sub
and
adc
popa
sub
mov
jmp
pop
push
pop
sbb
mov
das
clc
ljmp
add
dec
and
lock
movsl
add
addb
mov
mov
movsb
jg
push
sbb
push
push
pop
push
or
jl
fdivrl
je
call
sub
jmp
xor
fwait
push
adc
lods
test
and
dec
andb
js
cs
mov
and
cs
push
xchg
push
push
push
lea
mov
repz
add
and
inc
xor
push
into
cmp
and
xchg
insb
xchg
mov
mov
pop
dec
xchg
addb
and
lret
daa
subl
adc
loop
punpcklwd
adc
cmp
mov
pop
jle
shlb
out
or
or
inc
jg
fs
ja
push
push
fcmovb
dec
inc
mov
clc
sub
ret
pop
scas
mov
inc
jmp
gs
pusha
cmpsl
xchg
pop
decb
add
mov
mov
orb
dec
js
mov
xchg
aam
dec
mov
sbb
jmp
std
mov
fisttps
xlat
jmp
sub
test
dec
in
js
daa
xlat
xor
nop
bound
ja
outsl
inc
add
sbb
dec
or
push
and
test
jbe
xlat
or
out
movb
mov
mov
test
cltd
inc
sub
add
mov
ret
pop
repnz
call
adc
sbb
outsl
add
push
call
dec
inc
adc
adc
decl
mov
out
inc
xor
push
push
sbb
mov
adc
add
in
push
push
push
xchg
scas
or
xor
cmc
jb
cwtl
pop
push
inc
add
pop
push
test
sbb
mov
gs
or
push
movsb
or
and
pop
lret
inc
loop
dec
insb
and
je
pop
sahf
add
add
aam
adc
inc
fnstcw
enter
mov
xor
sbbb
sbbl
rorl
clc
mov
js
xcrypt-ofb
cmpsl
imul
sbb
add
mov
mov
movsb
fwait
push
orl
cld
dec
pop
addb
rcll
and
aam
sbb
addl
pop
fbld
inc
daa
aaa
push
imul
push
sub
movsl
add
out
fcomps
mov
and
popf
xor
add
nop
in
mov
mov
lods
sbb
lret
dec
rorl
popa
sbb
test
ffreep
or
in
ljmp
jns
lret
ret
adc
addr16
je
xchg
push
dec
pusha
scas
mov
movsb
out
mov
mov
dec
add
insl
or
xor
sbb
sbb
sbb
and
nop
add
inc
cmpsb
cmp
out
pushf
cmp
or
jns
popf
sub
xchg
dec
mov
fwait
mov
clc
cli
pop
pop
hlt
inc
imul
add
or
sub
ret
pop
je
out
les
jae
add
ficomps
shrl
lods
cli
pop
xor
ljmp
xchg
xchg
loope
das
dec
lret
inc
jo
dec
sti
cld
and
add
push
mov
sti
jge
push
and
sbb
and
or
and
popl
jo
std
dec
repnz
lock
or
sub
jmp
mull
adc
enter
add
popa
cmp
xor
es
jmp
lahf
cs
inc
sub
cmp
mov
adc
dec
ret
sub
add
rcrb
clc
rcrl
pop
sub
pop
inc
popa
mov
imul
xlat
and
dec
je
ljmp
call
loopne
add
dec
clc
rolb
insb
pmuludq
or
xchg
lock
sub
adcb
xor
stos
aas
add
fwait
add
loopne
dec
pop
fldenv
movsl
xchg
jae
clc
xor
mov
inc
xor
and
mov
xorb
push
add
mov
call
inc
test
mov
pop
push
xor
lock
mov
mov
loope
mov
and
mov
mov
inc
add
pop
or
shr
push
xorl
dec
jmp
or
add
push
and
mov
pop
hlt
addl
pop
cmp
pop
and
mov
or
sub
push
jb
frstor
and
int
test
pusha
pop
add
repnz
jecxz
pop
enter
jl
rorb
push
subb
xchg
test
add
shrb
mov
mov
cmp
and
mov
push
dec
shlb
xchg
imul
add
or
pop
aas
loopne
imul
cmp
and
jae
jo
push
jp
iret
sbbb
out
cld
stc
in
lea
add
push
jo
push
int3
add
or
loope
addr16
add
pusha
or
adc
imul
jne
mov
adc
push
push
xor
decb
ret
push
sbb
jo
mov
shl
inc
or
inc
sarb
out
sbb
xchg
jns
sbb
out
cli
addl
test
mov
lods
xor
push
mov
cmp
lahf
andb
mov
xchg
push
or
fs
insl
pop
mov
int3
xor
jp
inc
in
xchg
jmp
add
out
test
aad
xor
jns
nop
add
orb
sbb
or
in
or
pop
movsb
lds
push
jmp
cmp
adc
pop
iret
in
mov
xchg
ss
push
cmp
mov
mov
mov
outsb
jmp
sbb
jmp
insb
popa
mov
xchg
mov
aad
pusha
push
int3
shrl
cmpsb
xchg
push
push
jae
adc
aas
inc
shr
jo
in
mov
push
maskmovq
mov
xor
rolb
pop
lret
and
mov
adc
cli
sbb
jge
and
cmpsl
adc
int3
xchg
xchg
scas
mov
push
or
cmpsl
cmp
jnp
sbb
push
push
dec
inc
jg
sahf
jno
movsb
mov
xchg
add
xor
and
sbb
sub
test
mov
push
mov
incl
ret
les
sub
popf
adc
pop
lea
inc
mov
adc
test
enter
ja
pop
arpl
clc
movsb
lcall
jecxz
xchg
xchg
inc
outsb
jae
sti
fnsave
xchg
add
push
shll
sbb
in
jne
loope
pop
dec
adc
push
scas
and
cwtl
adc
mov
add
ret
inc
mov
cmp
inc
imul
xchg
inc
in
ss
mov
dec
add
scas
xor
cmp
inc
dec
adc
or
mov
test
aas
mov
loopne
outsl
cmp
add
and
or
negl
sahf
fwait
xchg
sbb
push
mov
xor
hlt
scas
test
dec
shrl
fstp
insb
sub
test
sbb
cmc
inc
test
mov
and
enter
hlt
mov
aam
add
loopne
dec
mov
shl
push
jb
dec
adc
rorb
int3
pop
xchg
movsl
ficompl
or
ljmp
ret
or
pop
inc
mov
or
cld
mov
ret
sahf
fidivrl
sbb
data16
mov
sbb
or
dec
mov
mov
aad
arpl
jecxz
sbb
imul
mov
lahf
jbe
dec
loope
mov
call
movsl
mov
pop
stos
add
std
jecxz
pushf
and
mull
enter
out
outsb
or
push
test
push
orb
out
or
push
lds
and
sub
xor
jne
pusha
and
add
xchg
adc
add
jg
dec
xor
jnp
leave
cltd
sub
xchg
rcll
addr16
aam
fbld
icebp
mov
hlt
or
dec
cltd
add
rcr
daa
pop
sub
les
clc
sbb
xor
cmpsl
push
andl
sub
out
jl
mov
jno
adcl
mov
inc
pop
pop
lret
adc
loopne
sub
imul
adc
loopne
in
test
or
adc
sbb
icebp
push
dec
jmp
jne
fsin
xor
sti
negl
mov
xchg
out
xor
call
xchg
jecxz
sbb
cltd
or
loopne
rol
dec
repnz
test
retw
sbb
fsubs
or
mov
ja
mov
dec
outsb
push
aam
sti
cld
rorl
mov
jnp
rclb
test
mov
test
mov
mov
mov
scas
aaa
mov
movsl
adcl
sar
xchg
sub
or
or
cltd
lods
sahf
movsl
pop
mov
psubb
dec
add
xchg
mov
mov
adc
and
or
bound
push
add
shrb
lods
andl
push
ficompl
adc
data16
fsubr
hlt
test
loope
or
aad
add
mov
adc
add
inc
mov
jle
fcmovu
dec
fadds
xchg
mov
rcrl
inc
lcall
aam
lahf
sbb
pop
add
imul
dec
add
jp
xchg
test
lods
and
and
mov
cltd
les
dec
in
add
cmp
lods
and
in
sub
adc
loop
xchg
sub
inc
add
dec
cmp
xor
add
loop
push
ret
mov
ljmp
pop
cmp
add
fsubrs
test
xchg
cmp
pop
add
jecxz
push
jmp
outsl
and
nop
inc
test
jg
sarb
sbb
push
add
mov
out
inc
sbb
decb
push
addr16
pop
dec
sub
cmp
or
subb
and
sub
and
xor
xchg
mov
test
subb
add
js
test
jbe
shlb
inc
pusha
ljmp
cltd
push
cmpsb
push
rol
xor
aad
sbb
jmp
scas
addl
sub
aaa
or
repnz
push
push
mov
pop
ret
xor
add
mov
or
and
sbbl
or
nop
add
test
pop
lea
dec
ljmp
adc
ja
js
push
in
adc
mov
jge
add
aaa
out
or
push
cmc
inc
add
or
push
inc
mov
sbb
fadds
daa
add
sbb
shr
fnsave
cmp
pop
push
jo
or
sbb
test
shll
add
xchg
pop
loop
lret
push
pop
pop
or
movsb
aaa
adc
jmp
call
mov
jmp
in
shlb
dec
movsl
mov
popf
dec
xor
mov
in
or
xchg
cmp
imul
test
imulb
aaa
pop
jecxz
ret
and
mov
xchg
push
jb
xor
lock
pusha
je
xchg
xor
sbb
lea
mov
clc
push
push
mov
add
lret
mov
jo
and
lock
lods
sahf
sbb
jecxz
inc
shll
mov
iret
out
lock
loope
in
push
pusha
sbb
bound
int3
das
shr
adc
gs
jno
dec
movsl
cmpb
jne
rolb
cli
xchg
sahf
rclb
mov
aad
stos
imul
loope
aad
pop
pop
add
inc
loopne
jl
addl
movsb
stos
pop
stos
mov
test
inc
dec
pushf
pop
adc
or
ja
xchg
lock
xor
orb
dec
push
mov
dec
xchg
and
ljmp
shlb
pusha
pop
ss
mov
mov
imul
les
add
mov
mov
out
stos
lock
les
roll
add
fadds
cmp
jmp
xor
inc
fsubl
fildll
mov
xchg
xchg
xor
sub
lods
sbb
insb
adcb
dec
das
adc
pop
mov
fs
push
jge
cmp
inc
mov
inc
and
daa
xor
imul
push
lcall
inc
xor
mov
inc
add
cmpb
pushf
out
cmp
sbb
dec
add
xchg
sub
inc
or
fldcw
loop
and
cmpsl
bound
rolb
in
inc
dec
mov
or
sbb
and
add
pop
push
mov
rcrl
and
movsl
loope
mov
xchg
xchg
cmpl
add
pop
mov
pop
out
mov
das
cmp
shll
aas
add
add
mov
cmc
add
mov
adc
ucomiss
cmpsb
arpl
xchg
sti
inc
addr16
or
jle
rolb
add
movsb
outsl
mov
xchg
sbb
test
in
xor
je
subl
add
jae
adc
fnstenv
mov
leave
xorl
shr
sbb
sbb
add
movsl
push
or
shlb
pop
push
or
push
and
mov
lret
and
lods
mov
or
jbe
test
cmp
hlt
in
adc
les
call
ds
or
push
push
push
add
call
cmp
pushf
add
and
mov
push
movb
add
jg
inc
xorl
mov
jo
xchg
or
call
add
movsb
push
adc
out
and
xchg
push
rorl
popf
inc
stos
popa
add
pop
ljmp
adc
adc
pop
loop
sbb
jbe
cmp
or
testl
add
fidivrl
mov
test
inc
pop
or
cmp
or
jecxz
mov
adc
pop
pop
dec
call
jle
in
adc
mov
std
jg
or
aam
addb
out
cwtl
stc
hlt
sbb
push
lcall
sub
add
add
iret
or
sbb
sub
mov
xor
cmp
cmpsl
fists
mov
mov
aas
sbb
int
je
sti
fwait
mov
sbb
mov
inc
hlt
movsl
and
xor
sub
rcl
mov
push
call
cltd
mov
icebp
fiadds
or
call
mov
mov
sub
popf
loopne
add
repnz
sahf
and
mov
lahf
call
jg
dec
dec
pushf
stc
jmp
add
flds
add
rorb
out
fdivr
push
adc
xor
and
out
jno
mov
fldl
loopne
stc
mov
popf
mov
pushl
shlb
ficoml
js
pop
fiaddl
int3
ds
aaa
sbb
ljmp
or
sbb
push
xor
cmp
or
test
jl
add
sbb
xor
mov
shlb
rorb
enter
nop
or
mov
in
inc
mov
xchg
int3
and
jle
test
and
adcl
les
mov
and
push
ds
jbe
pop
cmpsl
je
and
add
inc
push
add
xchg
pop
insl
cmp
mov
int3
inc
cld
andb
or
mov
sbb
adc
ret
ret
push
mov
jmp
call
xor
adc
fistl
jg
xchg
push
je
es
dec
sbb
cmp
inc
testl
cmp
add
jmp
cmp
lock
jnp
cld
test
and
or
ret
push
push
add
jbe
fs
shr
push
xor
lods
xchg
les
lock
xlat
dec
add
loop
js
push
or
push
jae
mov
repnz
popf
outsb
ret
mov
adc
mov
test
mov
push
aas
add
jo
mov
sbb
in
and
les
xor
js
cmp
sub
jo
incl
sahf
cli
push
add
popa
lret
mov
and
ret
scas
icebp
mov
ficoms
or
and
mov
mov
add
mov
test
fiadds
adc
push
pop
mov
rclb
and
mov
pop
pop
mov
test
inc
rorb
rorb
mov
cli
out
xor
shlb
jbe
addb
dec
sbb
sbb
and
into
test
mov
xor
dec
add
jg
fcoms
rorl
sub
cld
leave
add
push
loopne
adc
mov
jecxz
icebp
cli
daa
leave
dec
cmp
dec
xorl
xchg
pop
test
mov
jecxz
push
mov
and
pop
out
adc
pop
mov
sti
in
scas
jnp
rolb
push
push
outsb
test
dec
js
lock
mov
loope
les
aad
cs
call
movsb
cs
hlt
sbb
mov
cmp
je
mov
pop
jne
pusha
jle
push
mov
inc
add
add
in
xor
jb
fucomp
outsl
insb
rorb
cmpsb
shlb
mov
fisttps
inc
pusha
rcl
push
push
in
ret
pop
jno
testb
pop
fmuls
xchg
aas
and
ret
cmp
pop
jp
mov
out
dec
andb
es
dec
lock
nop
jp
mov
mov
or
push
sbb
mov
data16
or
pop
pop
inc
arpl
cwtl
ret
test
and
mov
loopne
mov
fsts
mov
rorb
mov
inc
push
popf
push
cmpsl
adc
imul
inc
pusha
add
mov
or
iret
jo
jno
dec
sbb
cmp
cwtl
adc
mov
push
cli
jg
out
mov
jo
nop
mov
add
inc
xchg
push
pop
cli
mov
leave
cmp
and
orb
jge
pop
cmpb
jnp
test
rol
dec
popl
jp
nop
cmp
pop
xor
sbb
add
lock
fists
movsl
and
mov
enter
xchg
addl
mov
push
enter
sub
adc
or
lea
adc
movlps
in
in
outsl
aam
jo
repnz
mov
cmpsl
sbb
dec
test
js
cmp
addr16
and
xor
mov
out
mull
add
pop
add
test
aaa
mov
mov
xchg
aam
pusha
in
mov
push
mov
inc
cld
and
movsb
add
fcompl
inc
sub
ds
pop
adc
mov
xchg
push
jnp
mov
inc
add
pop
adc
lea
xor
ret
nop
mov
loope
lods
gs
sti
rolb
roll
loopne
mov
notb
popa
cwtl
mov
pop
or
ljmp
data16
cld
inc
push
popf
lea
mov
adc
and
inc
scas
cmp
push
sub
jno
arpl
clc
out
arpl
and
test
and
das
pusha
dec
test
clc
cmpsl
aam
xor
dec
xchg
shlb
xchg
add
inc
addb
push
pop
mov
mov
add
mov
pop
cwtl
jbe
hlt
cmp
notl
les
test
push
cmp
popa
addb
and
mov
jl
pop
cmc
das
pop
and
adc
inc
cmp
xor
and
adc
aaa
inc
lret
adc
cmp
incb
std
cmpsl
mov
xor
lods
xor
mov
loope
mov
or
inc
or
pop
mov
lahf
adc
inc
sbb
iret
lods
inc
call
adc
ds
lods
mov
cmpsl
pop
or
rolb
gs
test
adcb
int
call
mov
in
mov
les
and
pop
xor
std
sbb
add
dec
and
xor
lret
mov
pop
dec
mov
int
add
inc
jmp
xor
clc
adc
lret
adc
inc
rclb
js
cmp
pop
dec
neg
test
and
xor
pusha
sbb
xor
cmp
jne
sbb
inc
add
xchg
sub
add
add
and
jp
jno
icebp
inc
loopne
jo
and
int
dec
or
out
adc
adcb
sub
adc
jecxz
dec
shlb
mov
or
ljmp
pushf
out
es
call
or
dec
xor
rolb
xchg
cmp
in
mov
or
cmp
pop
pop
lret
sti
hlt
xor
faddl
inc
jo
jg
pusha
hlt
cmp
inc
add
adc
je
imul
or
or
mov
stc
roll
or
addb
int3
adc
loopne
xchg
or
test
push
mov
bswap
pop
push
dec
fcomps
mov
lds
pop
and
das
daa
aam
rcrb
jp
adc
aaa
adc
sbb
sbb
sbb
clc
or
xor
outsl
pushl
push
sub
xor
push
loope
rcr
jl
sbb
xchg
adc
lock
add
or
imul
mov
push
mov
or
loope
js
fists
mov
in
lock
xorl
ljmp
dec
andl
in
sbb
xor
dec
shrb
and
cltd
xchg
or
clc
ret
in
fucom
dec
mov
cwtl
data16
jl
pusha
in
jl
into
or
or
pop
sarb
pop
or
sub
xchg
hlt
add
xchg
adc
sub
lods
pop
dec
neg
cmp
adc
inc
sbb
push
insb
push
cmp
mov
jmp
or
or
pop
cmpsl
adcl
inc
pop
cmpsl
xor
out
in
pop
push
mov
mov
xchg
mov
inc
div
sahf
shl
jb
or
and
fdivs
movsb
fldenv
les
fmul
jae
outsb
mov
scas
dec
fcomi
or
subl
mov
fsub
xor
int3
les
outsl
xor
in
mov
sbb
jmp
mov
js
jne
push
jo
jp
gs
fmull
mov
cmp
outsb
iret
daa
dec
pusha
inc
stc
or
and
mov
sbb
rclb
gs
stos
loop
add
ret
shr
sbb
add
mov
or
xor
xor
rorb
insb
sbb
push
into
add
pop
push
ret
in
ror
add
jg
add
ret
cmpsb
repz
sbb
or
xchg
rol
xor
pusha
out
add
inc
addr16
jp
lock
movl
sub
outsb
mov
sub
inc
add
mov
cmc
push
outsb
stos
cmp
adc
rolb
cmpl
std
fists
inc
je
fdivr
dec
and
addr16
imul
xadd
test
jae
dec
and
xor
dec
fcoms
jmp
adc
cmp
add
fidivrs
int3
jb
cs
jmp
arpl
in
or
sar
lods
icebp
xchg
mov
je
xchg
sbb
ss
inc
cmpl
pop
das
sbb
addr16
ss
push
xchg
adc
icebp
leave
cmc
add
and
nop
and
add
and
jo
cmp
cmp
into
enter
and
and
int
js
mov
add
push
or
sub
stos
jl
js
std
mov
dec
repnz
xor
movl
add
mov
pop
sbb
adc
pusha
dec
pusha
add
aas
pop
mov
sbb
push
and
add
pop
sbb
xor
push
enter
movaps
push
faddl
or
pop
das
movl
fsubrl
je
pop
sbb
adc
in
sbb
inc
fcompl
andb
add
add
push
xor
jo
inc
lds
out
add
in
push
lods
cwtl
ficoms
loope
enter
test
inc
lahf
notb
and
into
pop
fwait
pusha
jge
jmp
lcall
je
hlt
xchg
and
adc
and
mov
rcll
fwait
xlat
add
bound
inc
arpl
cmp
and
and
gs
jle
fsts
fs
adc
mov
jmp
xor
cmpsb
xor
cmpsb
cmc
das
loopne
mov
ljmp
add
lret
dec
and
xchg
add
dec
sub
sub
xchg
and
add
xchg
pop
rorl
or
or
int3
mov
fisubs
adc
js
testb
or
cmp
incb
call
cmp
adc
xor
adcb
popl
sub
sar
jmp
sub
add
add
sub
imul
add
mov
mov
or
inc
mov
test
cmp
pop
xor
xchg
and
push
jge
call
xor
or
or
inc
add
das
xrelease
sub
mov
aaa
sbb
outsl
icebp
add
loopne
and
cmp
arpl
insl
popw
or
je
out
sub
add
test
or
imul
ficoml
xabort
and
in
scas
sti
stc
mov
xor
jmp
add
insb
cltd
loop
push
loop
jbe
sbb
jns
movsl
imull
cmp
popa
clc
ffree
mov
sub
dec
in
sbb
fisubrs
ds
into
decb
jno
mov
mov
pop
push
nop
inc
mov
aam
sub
xor
adc
mov
dec
out
adc
fistpl
add
cmp
sbb
adc
adc
in
movsb
or
push
flds
movsl
sub
daa
adc
sbb
dec
push
fbstp
es
push
jmp
or
call
cmpsl
ret
lret
icebp
fdivrl
push
sub
into
push
sub
push
pop
dec
arpl
addb
call
xlat
cli
ss
cmp
mov
mov
cmp
dec
in
cmp
aam
lods
and
je
adc
insl
pop
leave
push
mov
cmp
sarl
push
sub
mov
fstl
and
cmovne
decb
add
push
add
and
loop
xchg
insl
mov
bound
arpl
addb
hlt
jno
xor
aam
add
rclb
or
xor
rorl
mov
ret
cmp
imul
fistl
xlat
andb
push
fwait
or
push
test
loopne
test
dec
mov
sub
and
inc
xor
movsb
rcrl
stos
cld
push
mov
inc
popf
lods
das
cmp
cld
jp
shl
aam
imul
inc
fisttps
addl
xlat
push
xchg
fs
inc
les
test
lcall
in
push
fisubrs
xor
out
imulb
aam
xor
jmp
push
xchg
sbb
sub
push
push
lds
test
mov
sbb
hlt
xlat
shlb
sbb
stos
pop
xor
sub
movsb
mull
push
lods
xor
or
cwtl
cmp
mov
dec
adc
ja
xorl
dec
xor
cmp
adc
rcl
pushl
inc
dec
xor
jmp
push
cmp
jmp
push
add
fldt
sub
fists
adc
and
sbb
or
pop
ljmp
xor
lock
or
sbb
and
mov
out
or
mov
lcall
movsl
mov
pop
test
mov
xor
sub
pop
sbb
or
sbb
mov
rol
imul
or
mov
repnz
add
mov
add
adc
rclb
pusha
sub
push
xorl
sbbl
test
xorb
sub
xor
cmp
ret
stc
cmp
or
insl
sbb
clc
inc
sub
xor
add
sub
ljmp
add
jb
cmp
jo
sbb
idivb
inc
push
das
roll
loopne
pop
out
lods
je
pop
sbb
enter
call
inc
mov
sbb
sub
and
xorl
inc
xchg
dec
add
push
lret
or
dec
lahf
repz
nop
add
xchg
nop
daa
and
outsl
sbb
loop
inc
arpl
mov
orl
shlb
movsb
adc
push
jne
or
or
jecxz
mov
mov
dec
and
popf
push
and
sbb
adc
inc
mov
icebp
int3
inc
jmp
push
or
aad
sarl
dec
shl
or
and
call
dec
mov
adc
loopne
cld
inc
movl
xchg
mov
outsb
inc
js
push
test
repz
clc
or
inc
add
mov
pushf
xor
adc
add
daa
ficoms
mov
lcall
nop
add
gs
adcb
add
cld
lret
pop
das
out
mov
in
cmpsl
das
lret
sbb
inc
dec
cmp
rol
or
jne
mov
inc
pop
mov
dec
shr
pusha
mov
mov
add
call
loopne
cmc
es
pop
and
jecxz
jns
lock
pop
test
adc
xchg
jb
lock
dec
fwait
sub
int3
out
inc
sub
xchg
push
fidivl
dec
subl
add
insb
mov
cmp
popa
lcall
into
das
pop
gs
mov
aad
push
dec
sub
and
mov
xchg
js
mov
pop
or
mov
xchg
int
jnp
pop
add
lahf
daa
mov
cmpsl
cmc
mov
stos
sbb
cmp
rcl
inc
lcall
test
xor
psubsw
mov
rcll
ja
push
call
leave
push
xor
loop
and
pop
add
mov
pushf
rcrl
out
jmp
test
cli
fists
add
push
fsubrp
add
mov
adc
aad
adc
js
jg
loopne
daa
divb
ret
neg
inc
lock
rorl
pop
cmp
pop
push
sbb
add
cmc
test
mov
ss
cld
xchg
or
add
lsl
mov
inc
insb
mov
add
xchg
pop
pop
rol
orb
ljmp
mov
sub
cwtl
imul
rcrl
negl
fs
lcall
xorb
xor
inc
cli
sub
std
das
jno
les
int3
sbb
add
stc
push
dec
outsl
jge
aam
jns
ss
sub
cmp
mov
xchg
cmp
mov
test
xor
mov
call
adc
rclb
jbe
mov
inc
loopne
loope
lods
mov
adc
ret
popa
ret
cli
pop
adc
out
mov
push
jl
or
and
jae
in
mov
pushl
sarb
pop
xchg
sarb
add
inc
and
adc
xchg
jmp
pop
push
xchg
mov
aam
in
mov
aad
jg
xor
xor
pop
cmp
and
push
inc
dec
push
sub
mov
inc
jecxz
push
ficoms
leave
adc
inc
shll
cmc
cmp
movhps
loop
inc
and
aad
test
ret
xor
inc
pop
cmp
jle
jno
ret
pop
mov
sbb
in
xor
stos
adc
cld
pop
push
addb
sub
cmp
clc
and
dec
cmpl
cmp
add
inc
sub
mov
sub
nop
push
mov
clc
lea
jnp
pop
inc
std
mov
mov
pop
push
jg
xchg
les
add
cmp
stc
jmp
fwait
xchg
push
mov
les
jmp
aam
dec
xor
add
sbb
ret
lods
add
popa
mov
inc
std
mov
lret
xchg
scas
pop
push
mov
xchg
mov
in
orb
in
es
imul
sub
ja
arpl
pop
and
orb
pop
ljmp
jl
mov
repz
mov
sbb
adc
cmp
faddl
jne
mov
add
or
adc
mov
test
gs
adc
mov
das
cmp
cvtdq2ps
icebp
or
rolb
xchg
xchg
rolb
and
sbb
xor
clc
push
or
add
loop
add
pop
mov
fidivs
dec
inc
popf
das
pop
sub
lahf
insb
jl
cmp
js
adc
xchg
ret
sbb
sub
stos
dec
int
dec
mov
add
inc
xchg
dec
je
movups
mov
mov
add
push
fcmovu
movb
icebp
xor
mov
sub
lods
jne
cmp
into
xchg
nop
push
and
sub
mov
dec
push
scas
xchg
icebp
pop
cmp
pop
sbb
add
lock
loope
or
and
push
call
in
push
add
lock
aam
orb
xor
jg
mov
loop
call
jno
bswap
dec
rcll
add
pop
pop
dec
lds
cltd
sub
xor
call
inc
sbb
jmp
fwait
cmc
add
push
loopne
jbe
sbb
add
test
jmp
enter
dec
xchg
push
add
mov
scas
es
jg
mov
inc
push
or
out
add
and
jmp
xor
daa
xchg
loop
mov
and
mov
loope
sbb
mov
imul
or
pop
add
addb
or
sbb
fimuls
int3
testl
insb
cs
fs
add
je
ljmp
shl
or
nop
movl
loope
or
les
mov
xchg
cmc
loope
or
add
mov
xchg
leave
sbb
stos
cli
xchg
mov
sbb
xchg
lock
add
dec
lock
bound
mov
shr
sbb
push
pop
js
push
sub
dec
sub
imul
dec
lods
clc
outsl
pop
cs
sbb
orl
ljmp
inc
mov
sbb
int3
add
stos
pop
rcrb
les
call
xchg
cmpsl
test
pop
stos
movsl
sbb
mov
les
cmp
inc
js
pop
or
jb
pop
je
add
pop
popa
insb
inc
test
sarb
or
adc
psrlw
subb
cltd
or
jle
sbb
pop
push
xor
jo
and
or
xor
cmpsl
dec
out
sub
push
push
pop
dec
rorb
adcb
and
xchg
push
or
je
ret
cmp
add
cld
enter
and
add
cmp
sbb
mov
pop
test
add
call
sti
test
or
cld
or
fcoml
xor
sbbb
inc
into
push
mov
jp
adc
roll
flds
inc
xchg
push
push
mov
add
test
test
outsb
movl
insb
fsub
lods
jne
push
adc
xchg
hlt
or
jmp
cwtl
pop
jbe
pusha
adc
cmpb
and
bound
ljmp
ljmp
push
mov
shrl
stos
cltd
push
pop
rorb
stos
test
inc
pusha
lds
cld
jp
add
inc
cmpsb
ret
mov
addl
add
pop
xchg
insb
pop
loopne
out
or
or
addr16
add
push
incb
pop
add
dec
xor
adc
or
add
add
xor
in
ret
sub
fs
jg
push
and
mov
or
aas
jl
xor
add
and
adc
dec
dec
pop
call
in
inc
xor
cmp
movsb
mov
xorb
sahf
out
mov
mov
or
jne
pop
push
jb
sahf
rcrb
lcall
outsl
xchg
xor
testb
or
loope
add
outsl
pop
shlb
ret
repz
dec
sub
and
dec
sub
inc
xor
or
cmc
xor
js
add
leave
or
mov
and
xchg
jecxz
inc
mov
int
mull
lock
in
mov
mov
inc
and
mov
jne
and
hlt
jae
bound
fistpll
sbb
add
out
frstor
adcb
ja
pop
add
andb
std
pop
mov
mov
inc
mov
mov
rolb
mov
lock
add
nop
inc
or
dec
popa
and
icebp
out
jge
mov
ret
cmp
scas
sub
lods
pusha
int
mov
lret
adc
jns
addb
lock
addl
push
sub
jl
loop
fs
out
out
xchg
cltd
mov
sbb
xchg
inc
dec
or
aas
or
not
les
xor
mov
xor
push
push
arpl
xchg
and
mov
clc
push
jno
mov
loopne
in
push
test
xchg
fcmovnb
mull
or
dec
jo
hlt
rorb
dec
dec
dec
or
sarl
shrb
pusha
aad
adc
adc
mov
mov
push
popf
loope
sbb
push
add
int3
cmpb
call
and
sbb
add
and
xor
and
es
cmc
ret
add
inc
pusha
out
push
mov
scas
lock
out
mov
lret
push
cmp
jne
jmp
adc
mov
add
mov
test
xor
pop
and
ja
push
out
pop
pushf
mov
adc
dec
sub
mov
mov
das
and
rorl
xchg
push
les
lods
lds
ds
popf
or
maskmovq
divl
aas
dec
add
xor
mov
sub
mov
jecxz
dec
pop
pop
cmp
xor
popa
xor
push
fisttpll
add
adc
repnz
dec
or
or
push
lods
jmp
in
test
pop
sbb
roll
sbb
imul
testl
in
push
xchg
std
daa
cmp
dec
loopne
sbbl
loopne
mov
add
outsl
jp
inc
jl
lods
mov
jp
movsb
mov
flds
sbb
ret
jno
xor
inc
andb
add
out
es
cmp
iret
js
mov
movsl
scas
dec
cmp
insb
adc
pop
pop
imul
xchg
pop
test
mov
add
or
test
movsl
push
sub
icebp
inc
pop
sbb
pop
adc
aaa
cmp
loopne
das
and
into
add
jne
ret
sbbl
cs
fcom
test
pop
pushf
inc
sub
subl
mov
or
lea
cmpsb
cs
out
sbb
adc
adc
mov
add
sbb
push
test
loopne
and
xor
dec
cmp
fisubrs
pop
add
sbb
cmp
xchg
push
mov
fisubl
incb
rcrl
int3
imul
lock
test
dec
push
pusha
adc
aaa
jne
mov
ret
jno
cld
xchg
push
sub
jbe
mov
in
jbe
sbb
dec
iret
mov
outsl
sbb
dec
mov
mov
xchg
mov
add
adc
xchg
xor
clc
or
push
inc
mov
dec
cs
mov
mov
and
icebp
loopne
and
mov
lret
clc
jl
mov
push
clc
mov
add
push
push
dec
call
in
xor
pop
clc
das
icebp
pusha
xchg
fidivrs
fisubrl
addr16
add
int
adc
repz
sar
pop
inc
add
push
pop
inc
jecxz
push
lret
cmp
in
jne
loop
mov
cmp
mov
jne
pop
lock
mov
sbb
test
xchg
mov
rclb
sub
mov
pop
jmp
je
ret
loop
sbb
dec
int3
mov
dec
cmp
sub
subl
daa
les
xor
push
mov
dec
sbb
dec
mov
fimuls
mov
pop
dec
and
inc
int3
sbb
xchg
push
test
cmp
push
xchg
nop
enter
out
mov
jnp
aas
add
add
add
mull
xor
mov
pop
and
add
call
leave
fiaddl
lock
testb
push
roll
ljmp
cmp
movsl
push
and
xacquire
pushf
insb
cmp
jo
add
imul
add
or
sbb
pop
jge
or
mov
xor
sbb
xor
aam
xor
mov
insb
jmp
cmp
enter
lds
sbb
rorl
xor
cmp
jo
fsubs
mov
loop
xor
pop
pop
addr16
pop
mov
push
lock
fld
xchg
inc
cmp
dec
inc
test
or
aas
lock
shlb
out
xor
jle
addr16
pushw
add
xor
int3
push
int3
sub
loope
jo
adc
pop
dec
inc
loop
int
lock
int3
add
movb
xor
push
mov
enter
sub
sbbb
sbb
fsubp
andl
in
out
inc
data16
pop
add
xor
sub
rcrl
inc
sub
movsl
xorl
andb
addr16
inc
out
add
adc
or
js
mov
mov
nop
cmpsl
jecxz
jno
push
stos
int3
xor
jnp
adc
and
shl
pop
or
inc
or
imul
add
or
push
adc
clc
popf
and
or
insl
fnstcw
test
sbb
movsb
add
das
and
inc
call
not
cmpsl
pop
mov
xor
clc
int3
and
lock
and
mov
movb
adc
adc
dec
xor
int3
rcrl
ret
adc
in
jp
xor
lahf
test
push
jo
mov
add
jecxz
lea
dec
rolb
push
insb
jo
mov
mov
push
sub
test
push
decb
pop
lea
xorl
dec
xchg
xchg
das
loope
mov
hlt
aaa
gs
push
sbb
inc
sbb
cmp
mov
add
add
mov
mov
cmc
sub
mov
inc
adc
mov
and
test
mov
pop
inc
jge
mov
adc
fldl
rcl
ret
inc
inc
jge
or
sub
dec
and
data16
rcrb
push
adc
sbb
xor
jg
add
mov
cmp
inc
inc
in
hlt
imul
mov
sub
or
out
shll
lods
jnp
dec
movsl
adc
mov
pop
add
test
lods
or
add
mov
addr16
jnp
xchg
cmp
ss
cmp
fisubrs
push
scas
inc
rol
pop
je
imul
sub
adc
aad
cmpsb
popf
mov
xchg
out
jo
mov
cmp
push
jmp
jg
outsl
or
or
or
int3
mov
dec
mov
inc
push
jge
lods
and
cmpb
xor
rorb
cmp
jmp
das
add
dec
mov
cltd
mov
in
add
sub
push
insb
sti
mov
ds
mov
inc
fists
pop
sub
jecxz
scas
test
adc
push
pop
or
aaa
add
or
test
dec
xchg
insl
cmp
arpl
pop
inc
repz
lock
je
sub
cltd
push
je
mov
roll
pop
outsl
add
dec
and
sbb
hlt
adc
inc
push
dec
xchg
call
outsl
sub
in
adc
push
push
mov
xor
orb
cmp
nop
loope
or
sbb
mov
xchg
add
arpl
cmp
popf
imul
add
adc
jecxz
sub
shll
pop
and
sahf
les
popa
test
stos
dec
faddl
lods
les
lret
adc
mov
mov
jb
mov
outsl
push
and
movd
fimull
xchg
or
fwait
inc
mov
add
and
sahf
jbe
cmc
pop
add
testl
xlat
push
mov
mov
test
insb
inc
jmp
and
loop
add
mov
dec
lret
inc
call
push
or
xor
outsb
jp
outsl
out
lock
xor
add
jmp
push
mov
hlt
cmp
xorb
mov
add
or
fadds
sti
mov
roll
pusha
imul
ret
mov
mov
adc
test
add
out
jnp
cmpsb
fidivl
nop
nop
or
js
adc
add
sbb
push
inc
in
cmc
push
mov
rclb
jle
push
cmp
fsubrs
inc
add
inc
cmp
dec
inc
inc
push
sub
mov
loop
pop
fiadds
sub
add
mov
shl
mov
outsb
rcll
jg
cmp
jns
mov
faddl
icebp
jmp
xchg
push
pushf
es
push
lds
testl
icebp
cmp
sub
lods
xchg
icebp
cmp
stos
xor
test
or
call
ss
or
mov
xchg
nop
mov
addr16
hlt
cli
xchg
mov
sub
in
sbb
and
jle
dec
nop
bound
daa
fisubl
test
and
cmpsb
xchg
fdivl
adc
nop
inc
or
inc
addr16
push
int
sub
push
sbb
mov
addr16
add
add
and
or
loopne
pushl
mov
pusha
dec
mov
push
push
mov
fisubl
loop
nop
pop
xor
dec
movsl
fld
pusha
add
bound
fsts
push
xor
pop
sub
out
mov
xor
out
push
push
movb
xor
outsl
es
jae
ds
inc
cs
cmpsl
jno
aad
lcall
jo
sbb
sub
testb
xor
push
inc
leave
hlt
mov
add
loopne
mov
add
pop
pusha
jl
lock
push
add
stc
arpl
sbb
ret
rcr
sbb
lcall
movsb
ss
mov
and
mov
inc
or
lods
fstps
xchg
xchg
mov
adc
data16
insb
jo
icebp
inc
pop
mov
popa
inc
iret
outsb
inc
push
and
in
cmp
movsl
cmp
mov
mov
xor
push
xor
jle
mov
xchg
mov
push
push
add
mov
fldcw
adc
or
or
lahf
mov
jle
jns
pop
push
mov
stos
adc
ret
call
cmp
pop
jmp
out
jecxz
movsb
rol
sbbb
out
imul
insb
adc
ja
and
jne
pop
pop
add
rolb
loop
cli
cmc
push
leave
cmp
pop
mov
sbb
mov
sbb
mov
mov
test
and
add
sbb
rclb
fdivs
movsb
das
loopne
or
inc
mov
lock
or
and
into
push
and
pop
mov
je
popa
inc
int
push
or
mov
call
add
mov
fildl
adc
imul
mov
rclb
xor
ret
repz
sbb
add
mov
jno
sub
lcall
or
pop
pop
or
ja
movsl
fwait
mov
mov
aad
sbb
push
sbb
dec
cld
insb
mov
or
orb
sbb
ss
ror
adc
xor
or
add
loop
inc
inc
ljmp
mov
push
call
xor
lock
repz
add
mov
cld
test
scas
out
fwait
mov
cmp
test
shll
lods
push
es
cmpsl
sub
mov
arpl
mov
xchg
or
mov
call
jnp
xor
in
rorl
pop
cltd
jmp
add
movsl
xlat
clc
push
add
push
inc
sti
call
dec
out
gs
pop
dec
and
and
dec
inc
lea
jecxz
or
fidivl
dec
add
sbbb
cmp
cmp
inc
mov
adc
push
or
call
inc
call
sub
add
mov
addb
imul
int
neg
pop
imul
add
add
repnz
inc
jmp
dec
cs
pusha
add
shl
clc
cs
sub
and
sbb
mov
pop
bound
mov
mov
push
push
dec
add
imul
lods
lods
ret
push
loop
mov
mov
add
xlat
push
sub
cmp
and
or
adc
inc
ftst
nop
icebp
scas
popa
add
ror
sub
push
inc
loop
mov
adc
es
jne
or
pushf
and
push
sub
mov
add
stc
jecxz
dec
mov
fcomps
fcompl
mov
jo
adc
adc
daa
adc
imul
imul
add
push
push
push
call
sbb
mov
sub
je
add
decb
sbb
jmp
leave
fcoms
xchg
lock
nop
shrl
jo
adc
or
pop
sti
jecxz
lahf
add
jb
cmp
andb
dec
mov
rol
or
cmp
add
in
sbb
jecxz
divl
xchg
repz
mov
pop
leave
cmp
push
in
into
sub
xchg
add
popf
outsl
sbb
push
inc
push
decl
add
rorl
pop
addl
outsl
mov
aam
dec
sbb
ja
add
aas
les
adc
js
repnz
add
adc
jp
lods
mov
rolb
mov
push
cmp
add
and
imul
movsl
adc
insl
or
adc
xor
out
push
clc
arpl
inc
adcb
pop
movsl
pop
xor
inc
bound
xchg
fdivs
je
es
insl
shrb
add
adc
js
inc
add
xchg
lret
pop
jp
fidivrl
xchg
and
xor
rcr
sarl
jge
inc
pushf
and
cmp
imul
dec
shrb
inc
sub
or
push
dec
popf
in
outsb
sbb
xorl
or
shrl
xbegin
add
add
pop
add
cwtl
jno
mov
cmp
aas
or
fdivrl
inc
inc
and
pop
filds
xor
dec
add
pop
movsl
xchg
add
lea
out
sbbb
mov
rcll
lods
push
jne
roll
cmp
jo
push
mov
out
clc
fdiv
jecxz
lods
add
add
pop
fdivrs
mov
jo
fildl
aam
dec
cld
nop
lods
xchg
fimuls
sbb
xchg
sub
sar
add
addl
sahf
push
or
xor
ficoml
test
in
adc
call
pop
and
addr16
stc
sbb
push
inc
mov
gs
or
nop
and
sbb
mov
dec
stos
movsl
leave
mov
fsubrs
xorl
orl
bound
stos
mov
js
inc
jp
push
aad
lret
nop
cli
sbb
loope
xchg
jle
adc
mov
call
leave
adc
mov
add
add
jle
mov
ret
sbb
sbb
enter
mov
and
add
mov
push
sub
clc
dec
pop
and
adc
push
dec
lea
adc
imul
and
inc
clc
sbb
and
scas
sbb
sbb
adc
and
call
push
fsubrs
cwtl
js
ret
or
pop
imul
mov
jmp
test
add
ja
ds
add
xchg
push
jecxz
js
inc
and
lods
lret
mov
mov
int3
mov
hlt
push
jge
push
sbb
add
add
les
and
out
nop
inc
mov
mov
lds
push
xor
outsl
out
adc
fadd
and
pop
mov
ret
mov
mov
loopne
or
or
rolb
dec
pop
icebp
push
loopne
xor
lahf
sbb
push
jg
in
cmp
push
or
test
xchg
sub
xor
dec
pop
mov
adc
dec
loopne
sbbb
mov
adc
iret
enter
cmp
movl
cmpsl
dec
dec
add
pop
pop
xor
scas
enter
pop
xor
mov
shlb
adc
cmc
nop
jno
inc
lcall
rcl
test
shlb
dec
add
je
in
adc
add
xchg
sub
rolb
cltd
rcl
ss
mov
in
push
push
push
sub
jge
movq
cmp
mov
test
sub
push
mov
test
add
push
jne
sbb
dec
movsb
push
imul
sbb
jmp
mov
loope
pop
adc
mov
lgs
add
imul
or
outsb
insb
and
push
or
popf
pop
decb
jae
add
jg
test
pusha
clc
frstor
jmp
fnstenv
loopne
fidivs
int3
or
mov
sbb
sbbl
test
jae
icebp
adcb
mov
mov
movb
mov
xchg
and
xlat
add
and
sub
xlat
pop
notl
push
sbb
push
mov
insl
loopne
call
test
sub
iret
add
mov
out
addr16
pop
in
imul
sbb
loopne
into
lock
pop
dec
lods
sub
int3
mov
adc
xchg
cmp
iret
pop
addl
out
xor
dec
inc
add
adc
xor
inc
mov
or
in
fs
adc
dec
adc
inc
mov
mov
push
cwtl
mov
mov
add
nop
adc
cmpl
in
adc
gs
roll
es
push
fwait
jle
jne
gs
mov
lret
pusha
sub
enter
pop
fisttpll
mov
adc
rclb
push
dec
std
mov
or
outsb
sbb
shlb
add
int3
cmp
or
add
inc
insl
data16
pop
outsb
ljmp
xchg
dec
jle
popa
mov
in
mov
enter
clc
rol
test
pop
pop
dec
testb
js
lock
cmc
mov
scas
insb
fdivl
dec
xor
add
test
nop
sub
repz
adc
dec
inc
lea
inc
fistl
cld
movsl
xchg
aam
sarb
inc
out
mov
jmp
bound
jae
bound
and
pop
jb
and
lret
sbb
movsb
fwait
mov
xor
sub
sbb
mov
lret
mov
sbb
jl
repz
pop
mov
fiaddl
sbb
ret
call
push
sbb
test
cmp
mov
cmp
jl
mov
push
adc
push
ds
nop
out
sbb
xchg
sbb
xor
xor
aas
xchg
fsubl
push
inc
js
or
fildl
pop
lcall
add
sub
or
adc
adc
test
or
push
adc
xor
add
jnp
sub
mov
mov
notl
or
add
add
imul
jbe
mov
and
js
sbb
xor
outsl
cmpsb
in
mov
leave
xlat
mov
mov
int3
or
sbb
cli
push
sti
int3
dec
adc
jmp
inc
sbb
sub
xor
mov
push
loopne
sub
inc
aaa
rcll
stos
sbb
dec
push
rolb
sbb
gs
cld
mov
jo
subl
sbb
xor
inc
pusha
sbb
mov
cmp
scas
mov
jecxz
fs
loope
arpl
push
int3
jne
push
xchg
fnstcw
push
call
cmpsb
sarl
ficoml
es
inc
ss
in
mov
punpckhwd
jp
gs
push
inc
or
dec
pop
pop
dec
mov
mov
lcall
mov
mov
repnz
adc
mov
test
cmp
push
mov
cmpsb
dec
inc
mov
mov
xor
sbb
jg
clc
adc
xchg
clc
cmpsb
iret
loope
mov
xchg
mov
mov
push
xchg
inc
jns
enter
cmc
push
stos
mov
insb
and
mov
pop
lret
adc
js
fiadds
dec
scas
bound
adc
fs
test
cmp
inc
pop
aaa
push
enter
je
dec
jae
pop
insb
mov
lods
pop
andb
or
jo
xchg
xchg
jo
movsb
xchg
adc
inc
dec
out
cmp
sbb
mov
invd
mov
sahf
push
adc
rorl
xor
out
movsb
pop
lock
ss
call
mov
je
and
mov
or
aas
add
xor
pop
and
mov
adc
orl
aam
cmpsl
fdivs
or
insl
icebp
std
loope
or
mov
pop
add
or
sub
lret
data16
loopne
inc
xor
add
sbb
or
xorl
add
sub
or
movsl
fbld
mov
jbe
jle
movlps
inc
pop
cld
mov
in
cld
out
aam
andl
loope
loopne
in
pop
shll
inc
adc
rolb
insl
les
pop
test
add
jbe
xor
stos
or
nop
loop
mov
and
mov
fnstsw
and
roll
xchg
imul
dec
imul
dec
mov
and
push
arpl
in
pop
sub
dec
mov
mov
dec
inc
ljmp
xor
ficomps
xchg
lret
sbb
pop
pop
cmp
in
xor
sbb
pop
shr
rcll
and
movsb
pop
push
stos
inc
sbb
daa
outsl
cmpsl
or
adc
sbb
daa
and
adc
adc
je
les
pusha
fbld
imul
dec
ret
xchg
aaa
push
xlat
test
and
or
xchg
adc
ficompl
jl
stc
in
xor
xchg
lret
cmp
add
in
or
xchg
mov
fucomip
pusha
and
add
stos
jge
push
add
fsubl
or
adc
xor
ret
and
lods
cs
mov
movsb
adc
leave
push
pop
sub
and
ljmp
and
scas
inc
xor
cmp
or
mov
ja
jns
test
xor
mov
fwait
mov
jo
sbb
bound
arpl
inc
and
mov
xchg
sbb
cmp
sbb
push
idivb
or
or
xor
loop
push
lret
or
and
lds
adc
dec
sbb
jns
nop
push
pop
sub
or
or
imul
mov
jo
mov
sbb
cltd
das
jns
push
xor
fstl
cmp
je
hlt
fcomps
inc
psubsw
inc
cmp
mov
inc
mov
adc
sahf
lds
inc
daa
mov
jg
cmpsl
adcb
js
mov
lea
sbb
cmpsl
shr
emms
sbb
cmpsl
and
and
inc
hlt
lock
mov
and
sbb
and
pusha
inc
bound
jg
lock
in
fiadds
dec
dec
sbb
or
es
mov
sub
add
dec
and
ficomps
call
push
movsl
or
and
and
and
sbb
xor
in
inc
sbb
adc
int
and
ss
pop
jbe
mov
repz
in
add
clc
arpl
out
fsts
add
or
mov
sbb
ja
sbb
xorl
and
add
gs
outsl
ret
dec
mov
inc
mov
insb
cmc
fcoml
push
and
pop
sbb
jecxz
cmp
sub
pop
add
mov
fcoml
mov
repnz
arpl
inc
and
add
pop
fbstp
add
pusha
adc
add
pop
jecxz
or
imul
xchg
sub
pop
popf
bound
dec
movq
das
nop
daa
pop
ret
aaa
andb
dec
xor
cs
clc
push
sub
rorb
add
popf
repnz
js
push
inc
imul
and
test
add
add
pop
jmp
add
std
sub
cli
push
push
sahf
mov
call
mov
sbb
cmp
push
add
fwait
sbb
stos
pop
pop
adc
inc
mov
mov
sbb
add
ret
adc
cmpsl
ljmp
mov
sub
mov
daa
sbb
add
fwait
adc
or
sbb
xorb
jae
adc
inc
cmp
and
mov
fwait
stos
aas
pushf
cmpsb
bound
jmp
ret
add
adc
xor
adcb
dec
loopne
cltd
jge
add
in
adc
or
ret
and
push
addb
mov
add
push
mov
or
sbb
jg
mov
mov
add
jl
aam
pusha
mov
sub
leave
mov
mov
jbe
cs
mov
cmpsl
jo
add
jne
push
fwait
rolb
testl
xor
inc
cmc
rorl
xor
repz
sub
ja
inc
cmovs
and
cltd
adc
inc
xor
aad
xchg
fsubs
cmp
adc
ljmp
cli
fwait
or
xor
imul
or
cwtl
aam
nop
pop
or
add
in
add
xlat
pusha
mov
add
pop
add
pmaxsw
add
mov
not
fwait
dec
pop
add
shl
lock
mov
cmp
mov
nop
push
jmp
aad
push
nop
lcall
xorb
push
mov
in
inc
inc
dec
loop
jne
pmulhuw
xor
adc
call
addr16
mov
jmp
pop
mov
push
mov
cmp
fcomi
sbb
xor
and
pushf
xchg
sbb
sub
jmp
lock
mov
fildl
add
inc
das
jmp
add
in
pop
dec
faddl
or
jns
fsubl
push
mov
push
rcr
inc
ss
add
and
xor
push
xor
sbb
out
fs
adcl
mov
ret
je
cmp
clc
fcmovnb
int3
dec
vpunpckldq
dec
cmpsb
call
hlt
sbb
adc
dec
scas
cmp
ss
popf
lret
in
mov
shrb
fimuls
popa
sarl
fstps
out
ja
sub
hlt
push
push
fwait
adc
xor
jo
xchg
inc
daa
int3
dec
dec
pop
outsl
pop
jbe
push
cli
xor
mov
test
xchg
ret
outsl
inc
repnz
ljmp
cmp
lock
imul
outsl
pop
mov
aaa
or
dec
jmp
and
xor
lea
js
inc
or
xchg
dec
xor
lods
rcrb
insb
fwait
sbbb
adc
add
outsb
rorb
mov
lods
cs
out
xchg
cmpsb
fimull
jns
or
push
dec
dec
adc
in
aaa
or
add
scas
mov
rclb
repnz
pushf
or
inc
test
jbe
push
inc
andb
mov
xorb
add
mov
lock
jbe
inc
pop
xor
xchg
add
jmp
and
add
xchg
jecxz
sar
fs
or
xor
enter
test
ds
ss
pop
xor
loop
xor
lock
les
loop
xchg
scas
imulb
arpl
sbb
enter
push
pushf
movsb
aad
sub
sahf
test
es
fldt
fs
loopne
into
in
enter
adc
test
mov
push
mov
test
xlat
mov
mov
stos
xchg
pusha
push
rolb
push
es
loope
inc
adc
hlt
mov
mov
decb
and
orb
mov
sub
popa
mov
add
or
and
inc
and
nop
xor
sbbb
mov
dec
xor
sub
jne
pop
adc
inc
mov
or
jnp
cmp
out
adc
out
jle
dec
inc
mov
mov
xor
xor
and
ja
scas
fstl
lods
xchg
inc
negb
and
cmp
shlb
sub
sbb
and
outsb
jo
or
pcmpgtd
mov
inc
mov
cmp
mov
cmp
subl
xchg
xlat
out
cmp
adc
mov
xchg
mov
adcl
jmp
xchg
inc
test
and
pop
mov
fwait
cmp
and
mov
mov
mov
mov
aaa
pop
mov
jbe
test
out
or
inc
data16
loope
frstor
push
divl
jnp
jmp
push
adc
orl
fcompl
cmp
mov
in
mov
adc
fstl
push
ja
mov
dec
inc
and
sbb
and
sbb
mov
sub
mov
repnz
or
addr16
sbb
sub
loop
sbb
jae
adc
out
pusha
xchg
jne
mov
clc
xorl
int
xor
pop
mov
inc
inc
add
push
and
addb
adc
ja
adc
or
add
ds
scas
inc
fs
mov
jmp
in
fstpl
mov
mov
and
push
out
inc
cmp
cmp
push
aaa
xor
cmp
test
cmp
ds
shll
sbb
dec
add
leave
in
adc
sbb
popa
loopne
sbb
sub
out
out
out
clc
push
xor
mov
into
leave
popa
adc
jbe
mov
push
xorl
adc
inc
stc
insl
jbe
ja
inc
add
orl
data16
mov
mov
xor
imul
mov
sbb
xchg
mov
loope
jo
repnz
rol
adcb
cmp
ljmp
pushf
shl
jecxz
loope
subl
mov
inc
mov
jecxz
xorb
mov
in
pop
xor
sub
mov
jb
insb
jb
cmp
pop
push
pop
cvttps2pi
scas
and
popf
xlat
sbb
or
call
push
push
or
jmp
push
dec
mov
into
outsb
jo
mov
push
lret
sahf
pop
movsb
andl
jnp
out
pop
les
loope
lock
jne
pop
ja
or
mov
dec
orps
xchg
cs
push
dec
ja
push
pop
mov
pop
inc
push
out
push
fsubp
into
cmp
xchg
bndstx
popf
add
or
mov
into
ljmp
push
insb
add
sbb
xchg
outsl
add
xchg
cmc
scas
and
rcl
loope
pop
cld
mov
sbb
cmp
pop
dec
push
pop
push
mov
outsb
lock
outsl
jbe
or
mov
call
ret
mov
out
and
and
mov
imul
pop
mov
add
lahf
pushf
mov
mov
sbb
mov
push
scas
cmovg
jo
mov
dec
dec
add
dec
arpl
loop
inc
cmp
add
push
movaps
jne
mov
lock
xor
mov
jne
push
ja
sub
adc
rolb
push
push
or
out
xchg
or
mov
inc
ja
pop
or
jnp
outsb
adc
stos
inc
pop
pop
jmp
push
pop
inc
sub
and
out
dec
jg
out
enter
pusha
push
mov
scas
push
mov
jns
lods
loopne
in
add
in
insl
ret
imul
cltd
cmp
mov
cmpsb
roll
das
sbb
push
pop
fistpll
ret
inc
test
inc
loopne
sub
cmc
aaa
filds
cmp
dec
pop
inc
jo
ja
mov
jo
mov
push
ja
shrb
mov
cmp
push
adc
lret
xor
xor
call
mull
mov
js
pop
push
aad
mov
jno
xor
das
out
stos
daa
jle
sub
sarl
jge
pop
xchg
xchg
call
lea
cmp
or
cmc
popf
cmp
sbb
mov
femms
jo
jo
mov
andl
addl
shll
and
rol
das
jo
jmp
mov
dec
adc
pop
cmp
xchg
xchg
mov
jo
roll
sbb
push
pop
push
xchg
cmp
mov
push
mov
mov
out
add
mov
shld
lds
jns
loopne
out
lea
cmp
cmpsb
aas
sub
xchg
dec
sbb
add
mov
fwait
pop
xlat
jns
jo
xchg
adc
jge
loopne
fldenv
pushf
sbb
lock
shl
pop
mov
inc
jae
inc
adc
in
pusha
lock
mov
fincstp
jne
cs
push
cmp
dec
push
inc
out
loopne
mov
dec
add
into
sub
sti
add
pop
loopne
out
addr16
pop
out
dec
orl
mov
xchg
sbb
aaa
notl
jae
xchg
shl
pop
loopne
or
push
out
enter
mov
imul
add
fsubrl
fucomp
add
fsubrp
daa
mov
mov
push
jno
dec
lock
std
dec
test
aaa
jo
bound
out
sbb
popf
push
roll
and
ret
lahf
out
jl
rcll
repz
sub
xor
cmp
pop
sub
lret
dec
jns
xchg
xchg
aaa
jb
pop
stos
das
xchg
mov
je
addl
scas
jg
jno
add
sub
sbb
fistpl
mov
int
or
pop
push
or
sub
outsb
add
loop
inc
sbb
pop
js
mov
cmp
mov
xchg
xchg
clc
add
mov
orps
xor
jnp
lods
mov
add
popa
mov
pop
je
or
lea
inc
jbe
push
inc
push
pop
xor
xlat
xchg
arpl
scas
mov
pop
pop
sub
add
call
dec
xor
daa
shlb
jno
js
cs
cld
scas
xor
jmp
pop
das
lods
sti
out
mov
cmc
pop
das
enter
sub
lods
leave
leave
cmp
stos
in
mov
mov
lret
push
mov
pusha
or
sub
jecxz
out
js
jns
into
fnstsw
pushf
dec
add
cltd
jecxz
out
and
in
mov
je
mov
xchg
mov
adc
in
roll
pop
scas
mov
jo
xchg
cmpl
lock
in
imul
add
xlat
mov
repz
into
sub
cwtl
pop
push
mov
mov
nop
adc
mov
jo
sahf
iret
inc
subb
dec
sbb
out
loope
push
movsb
pop
sub
or
mov
xchg
push
and
or
push
mov
push
sbb
orb
sarb
dec
leave
add
xchg
xchg
add
inc
daa
movsb
mov
inc
or
and
sub
adc
add
add
cli
lock
inc
fldt
dec
fldcw
add
lahf
xlat
add
sub
ss
scas
add
jmp
sbb
dec
sub
xor
xor
dec
test
jecxz
xlat
dec
loop
sahf
rorb
or
pop
std
mov
adc
or
insl
inc
test
and
add
lahf
push
add
mov
add
xchg
adc
arpl
sub
addl
test
xchg
cltd
sti
inc
add
add
mov
or
add
mov
aaa
jg
repnz
inc
mov
sub
iret
jmp
inc
add
sbb
push
jge
add
add
andl
imul
and
incl
bound
inc
sbb
shll
push
add
push
add
idiv
dec
dec
lods
xor
add
stos
dec
sbb
add
nop
ret
loopne
cld
in
xor
aas
rcrb
rol
jne
ljmp
pushl
and
push
les
rcll
test
mov
call
fdivr
bound
sbb
add
std
mov
lds
ja
jl
ret
dec
pop
dec
std
call
test
arpl
cmc
or
push
sub
mov
dec
sbb
fwait
sbb
insl
add
xor
sbb
fwait
scas
clc
jmp
lock
pop
sbb
in
shrb
xor
dec
cmpsl
or
pop
lock
incl
loop
push
and
add
adc
add
and
in
add
test
jmp
sahf
jns
inc
or
push
les
add
pop
enter
mov
add
add
adc
pushf
add
hlt
add
add
in
ljmp
scas
jmp
dec
add
ret
xor
mov
lcall
aas
add
mov
icebp
clc
adc
nop
cmp
sbb
decl
push
sahf
xor
mov
sbb
mov
inc
inc
xchg
scas
stc
call
xor
in
xchg
pop
add
out
clc
dec
xorb
push
inc
push
loopne
add
and
cmp
int3
je
and
xor
and
add
pop
decl
and
push
popaw
fiadds
pop
hlt
imul
jbe
sbb
aas
fwait
jo
and
and
lahf
push
xchg
sub
jl
clc
out
jmp
fsub
test
adc
dec
push
in
scas
lea
fucomi
mov
mov
add
add
cld
shrb
jle
mov
mov
push
add
aas
xor
out
dec
dec
bound
call
and
sub
jmp
xchg
cmpsl
push
mov
pop
lds
je
iret
xchg
pop
xlat
adc
push
add
sbb
pop
add
stos
sbb
mov
cld
incl
add
mov
and
jg
add
and
add
orb
mov
scas
jp
in
inc
push
cs
popa
rclb
adc
jg
leave
jbe
xchg
in
cmp
fsubs
stos
loop
mov
adc
sub
lea
sbb
loope
mov
pusha
into
lock
and
loop
lods
and
out
in
dec
fbstp
adc
sbb
xor
pop
out
lret
or
in
ds
lret
jo
in
adc
int3
sbbb
paddd
scas
sbb
loope
inc
clc
jns
out
scas
outsb
fildl
or
les
xor
or
outsl
pop
rorl
test
subb
sub
filds
cltd
lret
lock
push
push
add
mov
adc
sbb
mov
pop
push
add
pushf
inc
push
aaa
dec
ds
lcall
sbb
and
push
out
push
dec
xor
mov
cltd
rcrb
jne
shlb
scas
or
rcl
rol
jp
mov
lock
ret
cmp
mov
movsl
sub
rcrb
mov
movsb
lods
lock
jmp
push
das
xchg
cmp
pop
lods
adc
mov
lock
jmp
push
inc
fistl
cmp
addb
mov
dec
insb
xor
xchg
push
aad
mov
mov
fwait
xor
mov
mov
jne
mov
int
jecxz
loopne
and
mov
movb
shl
scas
fistpl
dec
push
push
pop
add
and
push
stc
clc
sub
add
or
test
mov
lret
js
pop
movsl
in
pop
xor
aam
jl
lods
out
push
or
xlat
adc
mov
or
or
into
ljmp
add
add
jo
adc
scas
xchg
movb
inc
lods
rclb
fwait
gs
aad
jbe
cmp
pop
adc
dec
pop
add
xchg
sub
sub
jbe
mov
jle
fdivrl
adc
push
scas
add
popf
mov
add
mov
and
xor
rorb
fdivrs
cmc
stos
or
fsubrl
mov
lret
cltd
iret
filds
xchg
clc
inc
pop
clc
and
ja
js
cwtl
pop
gs
and
cmpsb
jb
ja
mov
pop
in
sub
add
add
jo
repz
into
out
roll
ds
inc
push
fwait
sbbb
jle
repz
inc
icebp
sbb
in
pop
mov
cwtl
add
inc
jb
fsubrs
cld
sbb
dec
popa
shlb
mov
add
nop
loop
gs
fcmovbe
pop
mov
pushw
push
inc
arpl
mov
cmp
jnp
and
mov
xchg
inc
fsubrs
mov
jp
insl
lock
scas
adc
popf
inc
pop
or
stos
mov
mov
pop
xlat
push
int
les
inc
xor
sbb
dec
cmp
inc
ljmp
inc
lods
cmp
aas
add
cmp
inc
hlt
jmp
mov
push
aaa
cld
lcall
dec
mov
notl
pop
cmp
pop
jge
jle
add
pushl
push
jmp
and
push
and
jg
mov
inc
cmp
sarb
mov
daa
dec
add
push
mov
jge
push
pop
and
movsl
xlat
dec
push
aas
cld
in
js
dec
test
mov
mov
ret
rolb
mov
or
jo
call
std
and
adc
ficoms
movsl
popa
adc
pop
jg
inc
fbstp
dec
cli
imul
fdivs
inc
xchg
push
xchg
adc
sbb
xchg
sbb
andb
in
movlps
lods
mov
pop
xchg
add
pop
or
mov
sub
in
mov
es
add
inc
adc
stos
dec
sbb
loop
leave
push
in
cmpl
fdivrl
and
push
push
xchg
push
mov
test
or
ds
pop
andb
dec
pop
dec
mov
icebp
pshufw
es
cwtl
cmp
in
xor
pop
lods
js
loop
enter
mov
adc
push
shll
shr
pop
test
test
ja
std
lcall
cmp
stos
jnp
lods
jo
addl
stos
notl
jg
xor
sub
pcmpeqb
sub
push
mov
mov
sti
icebp
cmp
call
mov
xchg
mov
cld
fcomip
or
dec
js
dec
and
add
rolb
xor
shrb
pop
call
inc
pop
fldenv
push
jle
add
pushf
dec
jmp
jns
jo
inc
adc
xor
dec
rolb
inc
push
add
into
jg
cvtps2pi
or
aas
push
or
jbe
jno
stos
pop
mov
jle
out
add
pushl
ror
aas
push
outsl
xchg
inc
lods
shlb
mov
xlat
cmp
js
rol
subl
in
out
call
cmp
mov
les
mov
fbstp
lcall
fmul
lret
hlt
fdivrs
rorb
mov
inc
push
and
lret
mov
adc
cmp
fiadds
lock
pushf
ss
adc
add
cmp
adc
enter
fwait
mov
xor
mov
mov
shrb
pusha
icebp
xor
cmp
cmp
pop
push
jg
push
dec
dec
jns
stos
incl
or
push
add
or
jge
cs
xor
in
clc
mov
add
dec
lret
xor
or
pop
out
std
and
adc
lods
push
sub
movsl
pop
mov
dec
lcall
sar
adc
adc
pop
mov
outsl
pop
or
xchg
sub
cmp
sbb
clc
push
or
add
mov
mov
add
pusha
push
inc
ja
in
lea
dec
mov
xrelease
sahf
test
adc
pinsrw
pop
xchg
dec
lds
lock
push
jl
add
scas
sbb
mov
hlt
imul
or
dec
and
jecxz
adc
inc
or
adc
xchg
pop
dec
pop
or
jo
ss
jbe
dec
jnp
dec
aaa
pusha
pop
sahf
or
ljmp
lret
mov
ret
rolb
nop
clc
add
lret
std
scas
dec
sahf
mov
mov
repz
loope
or
inc
lock
test
loope
cmp
pop
mov
out
les
fsubr
cmp
cwtl
push
lds
xchg
popa
pop
cmp
and
mov
add
jg
pop
sub
fbld
test
mov
incl
add
sub
cmp
arpl
adc
adc
cwtl
movb
cmp
incb
fimuls
popf
addr16
or
add
int
push
cltd
xchg
dec
outsl
mov
mov
popa
add
add
sub
mov
jns
dec
loop
frstor
jbe
push
mov
out
and
lods
add
lret
xchg
loope
add
xor
cmp
int3
fwait
lods
push
outsb
add
adc
pop
mov
shlb
add
dec
push
shl
pop
pop
out
mov
push
inc
lret
mov
mov
or
adc
add
fsubrp
mov
je
cwtl
in
inc
stos
pop
cwtl
mov
mov
insb
mov
popa
mov
lock
xor
ret
adc
push
jecxz
mov
lods
push
sub
pop
dec
adc
leave
je
sub
cmpb
add
loope
inc
dec
adc
mov
mov
mov
or
mov
sbb
shrb
ficompl
jle
push
lds
jl
push
mov
sbb
into
int3
dec
xchg
shrb
imul
pushf
loope
pop
js
addr16
mov
jl
scas
xchg
pop
xchg
cmp
add
cwtl
sub
mov
leave
push
pusha
and
pop
pushf
mov
fstpl
scas
pop
mov
xor
loopne
outsb
das
pop
jno
shl
mov
push
loopne
mov
xchg
mov
mov
cli
imul
iret
in
sub
addl
add
pop
mov
jbe
movsb
ljmp
ficompl
sub
push
jne
push
das
cli
enter
adc
cmp
jo
sbb
xchg
mov
je
dec
dec
lea
sarb
cli
inc
xor
xchg
addb
sbb
jg
jmp
dec
scas
clc
call
cltd
pop
pop
mov
and
loop
out
mov
ficomps
or
mov
xor
sub
xor
xor
jno
and
icebp
add
xor
hlt
dec
out
outsl
pop
loopne
pusha
dec
sub
ljmp
lret
ja
mov
fcmovnb
inc
push
cs
push
lods
aas
or
or
aaa
mov
pop
inc
in
cmp
inc
std
outsl
sar
push
sar
mov
push
inc
inc
sbb
jecxz
lods
mov
idiv
push
adcb
ret
mov
scas
jl
outsb
lds
and
or
add
in
ja
dec
into
dec
decl
jb
aas
movsb
inc
pop
call
es
add
imull
cld
fsubrl
inc
ret
mov
push
mov
and
add
jl
pop
dec
adc
out
addb
or
lods
and
in
inc
dec
es
cli
pusha
xchg
mov
and
test
call
push
daa
addr16
lahf
and
ds
mov
fcomi
ljmp
and
inc
inc
lahf
add
xchg
sar
pop
scas
les
mov
or
add
push
add
jns
add
decl
add
dec
jmp
push
cld
xchg
repz
mov
sub
outsl
cli
mov
cmp
mov
test
xbegin
fildll
add
push
mov
dec
loope
lock
std
clc
pushl
incl
push
inc
mov
inc
sub
ret
fucomp
inc
sbb
jle
popf
in
sahf
js
cmpsl
push
mov
lret
sub
call
imul
lds
gs
adc
push
adc
jle
outsl
sar
mov
or
js
mov
inc
incl
loopne
xchg
sbb
test
inc
mov
leave
and
repz
mul
mov
mov
mov
add
out
ficoml
mov
dec
bound
call
xchg
mov
test
push
fnstsw
cld
outsl
rcrb
sub
cmp
xchg
rcrl
push
dec
or
dec
cld
movsl
xchg
and
in
push
lcall
xchg
push
insl
into
sti
pop
frstor
scas
dec
ret
sub
inc
dec
mov
and
inc
jge
imul
lret
icebp
addb
out
in
ja
jl
xor
add
lods
xor
push
std
mov
and
pop
push
pop
mov
icebp
adc
and
push
cld
rorl
ret
pop
inc
hlt
dec
int3
sarb
call
inc
or
push
jbe
ja
sahf
inc
in
and
mov
inc
stos
mov
cld
xchg
jge
jne
js
mov
fbld
push
rolb
mov
fldl
ffreep
cwtl
jmp
insb
mov
aaa
inc
aaa
push
pop
push
shlb
push
xor
xchg
sti
sub
jge
sbb
dec
xchg
dec
pop
in
lds
incl
pushf
push
push
loop
push
rclb
fimull
aas
rcl
lret
es
popa
cmp
mov
sbb
inc
movsl
pop
add
js
outsl
scas
lcall
ljmp
je
das
jb
mov
rcll
jo
fsubrs
and
sbb
xchg
shlb
enter
inc
mov
sub
dec
aas
ds
push
add
es
dec
or
sub
sbb
loope
mov
sarw
cwtl
add
popl
mov
dec
dec
mov
nop
cmp
icebp
je
and
xor
sbb
add
out
test
inc
jmp
xchg
push
pusha
sbb
xor
in
scas
adc
mov
fs
dec
cmovo
sub
sub
out
dec
sbb
push
cmp
mov
xchg
fadds
fs
xor
mov
xchg
inc
push
add
loop
loop
inc
int
xchg
aad
inc
push
jecxz
lcall
inc
cltd
rolb
or
lock
enter
lcall
push
dec
cmp
push
or
rorl
ret
add
cs
push
js
or
add
jmp
pop
pop
lea
je
cmpsl
cwtl
and
loope
mov
test
mov
insl
je
insb
lcall
push
cmpsb
mov
sub
dec
or
xchg
push
sub
mov
lods
shlb
fsubl
push
cld
stos
inc
int3
inc
jno
pop
lock
in
cmp
jns
fistpll
repz
cltd
in
dec
inc
inc
and
cli
jmp
push
push
cmpsb
pop
adc
mov
add
test
loope
imul
pop
push
mov
ret
pop
xchg
or
mov
fbstp
mov
test
and
fimuls
adc
negb
das
jp
clc
or
xorb
cmp
filds
sbb
int3
bound
push
add
xchg
bound
ret
inc
gs
xchg
aad
imul
sbb
sar
inc
jno
mov
test
shl
sbb
int
fs
lods
fisubs
inc
sbb
pop
xlat
pop
cmp
mov
into
add
or
sub
mov
icebp
dec
sub
jecxz
dec
test
addb
insb
and
dec
lods
or
sub
or
jecxz
pop
or
movsl
cwtl
setno
or
out
ja
cli
inc
scas
mov
mov
or
shl
xor
inc
daa
in
dec
inc
sub
popl
mov
push
popa
jge
aad
add
sbb
push
pop
add
and
mov
adc
pusha
xchg
mov
lcall
pop
cmp
pop
mov
adcb
xor
loop
mov
mov
xor
cmp
xor
scas
jg
lret
sbb
adc
cs
cmp
test
fisubs
mov
add
cld
jmp
push
shr
in
xchg
mov
adc
clc
mov
iret
inc
bsf
movsb
icebp
stos
mov
mov
add
xor
or
sbb
xchg
hlt
cmp
outsb
inc
fdivr
sub
cmc
xchg
push
in
or
enter
int
jle
es
ret
shlb
xchg
loop
inc
fisttps
and
adc
mov
pop
mov
call
adc
and
sub
ljmp
jo
call
insb
shrb
sbb
cmpsl
je
mov
aam
lock
aam
adc
lcall
push
shl
jbe
jae
jp
movsl
ret
xchg
notb
jl
call
fsubrl
insl
and
mov
pop
sub
jg
add
xchg
call
jne
testb
push
jg
push
pusha
fcoms
jb
adc
xchg
mov
fdiv
inc
pop
lods
clc
adc
jae
sub
push
insl
sub
pop
add
sbb
ficomps
sub
fildl
add
lea
mov
dec
adc
mov
push
fwait
xchg
lock
jge
xchg
inc
pop
add
cs
sbb
shrl
jnp
adcb
xor
pop
ss
pop
test
jae
mov
out
push
adc
cli
inc
sti
lahf
xchg
lds
pop
sub
std
cld
call
dec
imull
jo
cltd
xchg
bound
dec
icebp
jno
shlb
pushw
xor
or
or
add
cmpsl
add
movsb
nop
mov
rorb
mov
mov
enter
stos
mov
out
push
inc
cltd
insl
loope
popa
stos
xor
xlat
sbb
push
flds
enter
mov
or
arpl
outsl
cmp
fldt
or
sbb
push
jbe
in
fnstsw
nop
xchg
cmp
decb
xchg
push
addb
popl
adc
or
pop
popf
out
loope
loope
adc
adc
jbe
clc
pop
sbb
or
insb
push
lock
insb
add
cmc
mov
decl
add
in
dec
sbb
test
mov
lret
aam
mov
jl
or
push
inc
add
pop
clc
push
sahf
push
push
jge
cmp
adcb
and
mov
call
mov
jp
loope
ret
dec
es
inc
dec
adc
cwtl
ret
inc
addl
adc
aaa
out
pop
mov
xchg
dec
add
add
mov
pop
ja
movsl
mov
jg
rcrl
enter
mov
mov
cli
out
cmp
xchg
imull
jae
pushf
movsb
push
push
mov
call
arpl
and
mov
pop
add
test
out
xor
or
add
cmp
hlt
pop
jns
das
repnz
add
jbe
add
loope
sub
xchg
pushf
ja
ss
add
lods
or
and
adc
in
fcmovnu
hlt
adc
sub
xor
push
cmc
scas
cmp
and
cld
fs
es
jl
adc
inc
cmp
mov
add
sbb
add
and
sbb
sbb
out
loop
lock
add
sbb
jo
pushf
cs
filds
stos
add
ljmp
inc
data16
in
adc
test
loop
clc
jecxz
mov
pop
test
sbb
xchg
call
cmp
test
sbb
scas
jp
jnp
jne
dec
jl
ss
gs
dec
pushf
jne
jge
cmp
jecxz
les
or
dec
ret
pop
aad
lods
jno
nop
cs
ljmp
or
cli
lea
inc
lea
aas
dec
push
mov
cmp
incl
sub
test
and
ds
mov
sarl
mov
outsl
cmp
mov
fcompl
pop
jne
pop
cmp
and
lcall
push
pop
aad
adc
cmp
cmpb
jp
sbb
test
lcall
push
adc
mov
cmc
adc
sbb
xchg
lods
outsl
pop
push
subb
inc
adc
mov
fst
arpl
test
sarl
out
xchg
das
clc
sbb
stc
out
outsb
je
stc
insb
add
pop
sub
jp,pn
sub
mov
pop
pop
add
pushl
fisubrl
push
sar
lea
or
inc
jo
loopne
adc
clc
cwtl
and
mov
lds
cmp
jp
into
or
jle
push
decl
pop
xor
sbb
sub
cmp
xchg
inc
stos
fiadds
mov
insb
cld
mov
inc
cwtl
stos
cmc
fwait
sbb
rcll
inc
sbb
movsb
cmp
jl
jbe
ja
and
and
out
rorb
lock
xchg
jbe
mov
incl
call
stc
push
fimuls
pop
jecxz
mov
sub
loope
xor
push
test
pusha
out
andb
dec
push
cmp
xchg
stc
scas
into
mov
dec
mov
ret
cld
or
adcl
outsl
mov
cmp
add
mov
mov
sub
cmp
push
push
lock
lcall
mov
add
fwait
add
je
popa
xor
adc
mov
add
pushf
in
and
icebp
fwait
pop
lret
aam
fnstcw
sti
add
aaa
cld
shrb
pop
popa
cmp
mov
fimull
push
mov
push
pop
sub
shlb
adc
dec
pop
pusha
pushl
xchg
jae
int3
push
es
add
add
mov
and
mov
inc
or
cld
incl
int3
int
fistpll
daa
xor
sbb
and
pop
sbbb
sbb
hlt
lock
cli
loop
ret
push
cmp
pusha
cmpb
adc
cmp
jl
ss
jp
dec
xchg
xor
adc
mov
js
xor
jo
lock
add
test
int
xchg
and
jmp
les
fidivl
adc
scas
pop
push
mov
sub
inc
push
mov
pop
fcmovbe
lock
mov
jo
sbb
hlt
mov
adc
inc
movsb
js
xor
adc
std
cli
subb
and
mov
aaa
add
cld
outsl
fbld
ss
addb
adcl
push
cwtl
push
scas
jb
push
addb
pop
cs
js
or
pop
xchg
jmp
jle
sahf
mov
clc
int
outsb
clc
lcall
cmp
in
mov
clc
movsl
das
adc
ret
sbb
jbe
mov
call
xchg
pop
inc
pop
jne
cmp
je
outsb
push
icebp
test
add
vminss
add
jne
sbb
es
loop
test
dec
add
push
pop
pop
inc
mov
into
mov
fisttpl
xor
jae
sbb
adc
shl
xchg
and
sub
xor
adc
leave
in
dec
cmpb
sbb
fcmove
mov
movsl
xor
sbbb
jecxz
cwtl
idivl
pop
sub
add
pop
mov
adc
xchg
das
sbb
sub
push
mov
lcall
dec
daa
mov
js
mov
dec
push
jnp
pop
cmp
add
sti
sub
mov
das
mov
inc
negl
sub
out
inc
mov
push
add
push
adc
add
jp
adc
mov
shrl
and
mov
inc
repnz
cld
mov
add
inc
mov
insb
iret
outsl
test
sti
js
add
movsb
in
and
bound
incl
adc
mov
push
cmp
inc
add
in
cmp
into
cwtl
dec
xchg
icebp
mov
push
rcll
or
mov
sahf
sbb
mov
pushf
push
and
push
repnz
and
dec
xchg
int3
enter
add
gs
les
mov
cmc
xchg
fmuls
fldenv
and
sub
mov
or
in
sahf
stos
cmp
and
or
pop
aad
pusha
fcompl
pop
or
mov
mov
mov
mov
sbb
into
stos
lds
arpl
jbe,pn
into
push
aam
push
sbb
inc
push
mov
jae
ljmp
push
loope
mov
insl
lock
loope
sbb
xor
dec
jnp
add
ljmp
orb
adcb
xchg
mov
decl
xchg
inc
mov
out
shrb
movsb
decb
andb
clc
ja
sbb
loop
fnsave
mov
xchg
rol
mov
decb
add
add
outsl
fs
xchg
fcomps
fidivrs
add
xchg
cmp
or
cmc
into
sarl
inc
ret
aaa
repnz
fwait
lret
out
mov
mul
pop
add
inc
addb
mov
push
adc
or
mov
cmpsb
jns
int3
and
xchg
adc
daa
test
dec
fists
aaa
rorl
fs
lods
and
sub
xor
movsb
ja
jbe
jo
add
loop
fcoml
popa
movsb
pop
cmc
scas
fs
nop
repz
and
xor
pop
mov
jno
hlt
mov
jge
incl
leave
mov
add
or
pop
int3
xorl
and
pop
std
add
pop
les
and
jb
imul
rcrl
xor
sub
xor
xor
push
adc
lods
push
sbb
inc
push
pop
icebp
fcmovnbe
xor
push
xor
jo
mov
pop
cmpsb
jo
mov
rolb
mov
jae
and
ss
loopne
shl
adc
call
mov
cltd
dec
jg
inc
sti
xor
xchg
dec
push
pop
out
int3
mov
dec
pop
pop
fsubr
call
or
into
and
lock
outsb
popa
sahf
fldcw
xor
push
or
hlt
inc
pop
jg
sti
pop
pop
sbb
mov
testb
cmp
add
xchg
out
aaa
jmp
ja
mov
arpl
add
add
xor
cmp
fs
mov
mov
xor
inc
and
ds
shlb
imul
or
bnd
adc
pop
out
out
hlt
sub
and
pop
jo
mov
mov
repnz
xor
aad
das
and
cld
add
fdivrs
add
pop
push
clc
fists
std
dec
pop
bound
lds
cmpb
sub
enter
fiaddl
orb
inc
add
cltd
movsb
jge
fsub
roll
or
inc
sbb
or
xor
cs
mov
fwait
inc
aas
sbb
pushf
dec
push
xchg
adc
repz
push
cld
push
push
inc
inc
sub
xor
pop
je
push
rcr
decl
fs
arpl
fdiv
mov
xchg
int3
jmp
inc
adc
test
push
cmpsl
and
cmpsl
push
pop
xor
dec
clc
pop
inc
mov
mov
push
xor
mov
fmul
imul
enter
movsb
adc
inc
arpl
adc
aam
mov
push
addl
dec
jo
xchg
cmp
sbb
test
push
pop
or
pop
mov
push
jns
xor
pop
xor
inc
divb
call
enter
xchg
add
stos
loop
std
mov
nop
sub
pop
xchg
movsb
xchg
or
xchg
nop
loop
add
dec
and
add
fcmovnb
mov
xchg
push
adc
adc
arpl
stos
push
clc
mov
mov
cmp
dec
mov
sbb
das
stos
push
movsl
push
nop
xchg
mov
pop
out
loop
jp
mov
mov
add
sub
fs
add
inc
or
or
sub
mov
sub
adc
xor
stos
les
and
inc
jmp
push
or
and
xchg
loop
mov
adc
inc
push
out
sahf
inc
xchg
aas
test
mov
es
inc
test
jg
scas
call
pop
sub
mov
mov
aad
cwtl
lcall
add
inc
test
jg
add
testb
hlt
and
outsl
fcompl
orl
mov
cmp
std
or
xor
add
ja
mulb
fndisi(8087
inc
cmpl
push
inc
hlt
fs
push
lret
shll
icebp
je
addb
pusha
or
in
jg
cs
push
cmp
push
mov
mov
add
stos
sub
dec
out
dec
add
loop
test
sub
repnz
sbb
popa
ret
mov
push
mov
ja
dec
pop
lods
pop
popa
sarl
cmp
ficompl
das
rorl
leave
or
lret
push
add
jg
adc
mov
mov
cmp
pop
push
jle
xchg
mov
inc
and
movsb
add
cmpsb
lods
mov
xchg
int
jp
sbb
xchg
xor
fisubs
inc
lret
push
mov
push
iret
mov
into
xchg
das
push
sub
pusha
mov
loopne
addr16
fildl
or
scas
js
mov
mov
lea
jbe
fwait
orl
dec
push
mov
scas
inc
dec
push
pop
std
fcomip
inc
movsl
adc
and
add
cltd
add
sub
data16
cmp
imul
xor
iret
repz
inc
lea
or
mov
or
jno
add
cltd
xchg
sub
sbb
daa
ficompl
push
std
push
in
pop
xor
jp
cli
inc
outsb
add
sahf
je
leave
mov
insb
clc
test
and
outsl
adcb
mov
lds
dec
je
sbb
push
jge
clc
xchg
aaa
push
sbb
lret
cmc
nop
shll
add
push
aad
ljmp
lcall
pop
ljmp
fistl
mov
jbe
cli
jo
jg
pushf
or
dec
sbb
lret
jno
insl
dec
cmp
clc
scas
jne
mov
in
mov
inc
pop
addw
iret
or
clc
aas
inc
movl
mov
mov
mov
stos
pushf
and
or
fdivp
pop
cmp
enter
mov
shlb
mov
lods
push
and
mov
in
mov
out
ret
cmpsb
shlb
or
test
and
push
mov
jno
adc
inc
jb
lret
cmpsb
ret
pop
push
xorb
dec
cmp
xor
pop
xor
andb
notl
lods
out
push
mov
ja
pop
or
bound
popa
xchg
pop
and
shlb
lock
imul
je
jl
mov
xchg
mov
mov
clc
ret
sbb
mov
pop
pop
jmp
sub
gs
add
orl
adc
repz
xor
jnp
or
jge
xorb
int3
lds
or
mov
sbb
or
and
adc
mov
mov
adc
dec
jae
jecxz
xor
push
cmc
add
mov
bound
add
nop
fisubs
pop
or
inc
loope
mov
pop
stos
mov
sbb
sub
loopne
sti
adc
loop
inc
add
lods
sbb
dec
xor
mov
adc
pop
adc
out
adc
rorl
fsubs
push
fisttpl
aaa
pop
cmp
sub
jb
add
cmp
in
adc
fsubrl
inc
adc
adcl
shll
sub
in
xchg
jl
mov
push
hlt
adc
jmp
nopl
das
dec
mov
addr16
mov
push
orb
and
xor
jno
xchg
call
jo
or
sub
cmp
int3
inc
insb
mov
xchg
or
cs
xchg
cs
ret
ret
pop
xor
scas
sbb
fnstcw
mov
jg
pop
add
repnz
add
pushf
mov
push
mov
or
xlat
fadds
bound
xlat
mov
dec
sbb
inc
gs
mov
scas
icebp
arpl
test
xchg
lods
lock
mov
push
sbb
inc
data16
ja
cwtl
jae
mov
je
push
mov
add
shlb
in
sbb
adc
out
bound
mov
mov
icebp
and
or
push
hlt
cltd
pop
fsin
sbb
sbb
and
xchg
jg
imul
jbe
and
mov
or
inc
inc
mov
mov
test
inc
pusha
lcall
push
jo
lods
xor
mov
sub
jb
cs
test
adc
cmp
jp
add
mov
inc
shll
mov
orb
fwait
push
cmp
nop
loope
xchg
xor
aas
es
adc
lcall
inc
push
push
or
jl
mov
das
mov
adc
push
sbb
push
sub
xor
xor
mov
mov
dec
scas
xchg
lods
mov
fsubr
push
xor
dec
sub
push
incl
icebp
add
push
add
xor
jnp
and
jecxz
and
nop
mov
enter
dec
jecxz
push
xor
cld
mov
cmpsb
cli
dec
push
mov
and
adc
lods
pop
inc
call
mov
add
notl
pop
add
dec
lock
adc
adc
ljmp
or
out
sbb
mov
cmp
mov
pop
sub
dec
test
inc
or
loope
jg
pop
and
ret
sti
shll
pushf
xchg
xchg
push
jg
jmp
pop
or
cmp
and
shll
stos
mov
pop
mov
das
in
add
call
jo
xchg
sbb
and
jbe
or
jnp
subl
sbb
xchg
fistpll
scas
jmp
push
scas
or
jae
sub
jecxz
mov
jb
and
pop
ret
lcall
cmp
fstpl
aam
and
js
push
loope
pop
cs
inc
cmpb
pusha
cmp
mov
in
outsb
mov
daa
pop
add
mov
push
inc
sarb
je
inc
clc
pop
subl
sub
sahf
xor
stos
jbe
cmp
push
fistpll
inc
mov
pop
jle
xchg
xor
add
ret
mul
cmp
xor
fildl
xlat
jns
sbb
pop
push
and
sahf
pop
scas
clc
sarb
dec
cmp
adc
adc
sbb
mov
lret
dec
mov
lahf
lcall
jge
ret
xor
popa
cmpsl
xor
aad
sbb
cmc
jmp
pop
shl
and
mov
mov
js
push
mov
popa
lock
leave
push
jbe
add
push
push
mov
clc
fstpt
pop
leave
inc
mov
adc
sub
aad
jle
movsl
insl
icebp
sub
insl
shll
shlb
add
cmp
and
cld
push
or
mov
xchg
push
add
rcrb
mov
es
sahf
xlat
push
push
je
xchg
loop
pop
sub
add
push
xorb
push
lods
std
or
add
sbb
fistpl
es
std
repnz
imul
push
mov
dec
lcall
pop
xchg
cli
add
jge
push
add
mov
dec
and
ds
sub
push
xchg
lcall
aaa
pop
in
ret
mov
shlb
or
lcall
adc
aas
dec
dec
cltd
divb
fistpll
push
addr16
dec
lods
add
dec
xor
or
sbb
lds
pop
xchg
adc
adc
nop
das
xor
movsb
jle
pop
imul
mov
addb
mov
mov
inc
nop
jmp
dec
lock
dec
ret
or
mov
addb
repnz
lcall
lea
imul
lock
lret
add
or
cltd
or
fiaddl
pop
xchg
dec
jl
addb
mov
jle
pushf
jl
les
rcr
out
pushf
stos
or
dec
and
call
in
fbstp
mov
loop
jp
cmpsb
fistps
test
xor
fildl
test
test
jb
and
add
jbe
mov
jle
add
mov
xchg
clc
stos
lea
popf
xor
arpl
adc
fildl
xchg
push
xchg
add
or
mov
scas
sahf
pop
stc
adc
xor
inc
dec
fldt
das
cli
add
repnz
inc
in
xor
movsl
add
je
jmp
das
cmp
mov
push
cld
scas
xchg
sbb
adc
lret
movsb
mov
dec
cmp
test
and
add
dec
out
mov
inc
pusha
inc
mov
clc
mov
xchg
data16
pop
mov
inc
fadd
or
int
sub
mov
mov
iret
inc
mov
addb
mov
inc
loop
push
jmp
scas
cld
inc
inc
test
rcr
fsubp
inc
adc
inc
mov
pusha
fistpll
icebp
push
gs
into
fidivl
out
adc
nop
in
addb
shrb
pop
mov
jno
sbb
jg
mov
xchg
sbbl
sub
notb
or
js
pop
pop
inc
inc
ret
push
mov
out
popf
inc
mov
ljmp
scas
jo
adc
pop
adc
push
lock
sub
push
int
je
jbe
inc
or
cs
iret
cld
in
mov
jle
addl
out
and
mov
loopne
das
mov
rolb
out
int3
or
data16
fcmovne
push
call
leave
fs
enter
mov
sub
ss
cmp
dec
cmpsb
adc
mov
cmpb
pop
out
dec
les
push
test
es
test
pop
inc
fcmovnu
mov
ror
outsb
ja
pushf
cld
add
lcall
push
js
or
push
test
xchg
jp
xor
pop
or
mov
mov
adc
mov
enter
lcall
sub
enter
inc
mov
nop
add
ja
mov
xchg
ret
scas
inc
jmp
jl
pop
orb
outsb
aam
loope
bound
jge
push
adc
inc
fwait
push
pop
pop
add
pop
xchg
mov
rolb
push
inc
xlat
shl
cmp
push
loope
das
mov
ror
roll
pop
out
mov
mov
es
pusha
mov
inc
jae
sbb
orb
subb
mov
in
adc
xor
popa
mov
outsl
mov
cmpsl
mov
loopne
rorl
mov
adcl
shrb
sbb
push
mov
pushl
fstpt
lahf
or
cmc
shr
and
push
push
cmpsb
add
pop
inc
adc
mov
jae
jbe
or
mov
mov
call
mov
jb
xchg
xchg
mov
daa
sahf
stos
cld
cmp
cmp
cmp
enter
nop
ljmp
aaa
pusha
test
mov
mov
rcrl
mov
xor
pusha
adcb
pop
incb
jmp
daa
in
push
ret
lcall
fcom
movsb
dec
popf
std
scas
ljmp
repnz
and
rorl
cmpl
mov
js
loopne
xor
mov
bound
aas
aad
icebp
fwait
lcall
mov
aam
sub
inc
sti
cwtl
test
repnz
mov
or
les
jno
mov
ret
pushl
mov
inc
sbb
jle
xor
jecxz
shrb
pop
bound
movsb
shll
add
lock
push
cld
push
dec
xchg
mov
neg
fs
pop
loopne
scas
jo
sbb
add
mov
dec
mov
mov
pop
movsb
pop
mov
xor
adc
push
data16
imul
mov
or
xchg
adc
fs
cmp
je
idivl
sbb
mov
inc
es
push
mov
pusha
sar
sub
popa
jp
and
mov
pop
add
add
sbb
jg
jg
add
nop
adc
ljmp
sbb
or
ror
int3
dec
push
xlat
mov
cmp
xchg
mov
ret
rol
mov
add
mov
add
bound
fwait
sub
push
adc
pop
scas
xchg
sbb
cld
das
pusha
cmp
xor
and
sar
decl
add
inc
xchg
inc
and
addb
sahf
notb
or
push
pop
push
sub
mov
mov
sub
rcll
cwtl
les
popf
rcr
cmp
or
stos
jmp
add
aaa
dec
push
repnz
mov
sahf
inc
aaa
frstor
pop
bound
fwait
icebp
jg
mov
adc
into
enter
popa
mov
sub
jmp
cmp
mov
pop
scas
or
jecxz
daa
outsb
xchg
dec
pop
jcxz
adc
sub
lahf
push
mov
loop
pop
sbb
mov
xchg
notl
jecxz
out
xor
sbb
js
icebp
mov
mov
scas
push
arpl
pop
or
roll
outsl
sub
and
enter
ret
mov
roll
ljmp
jle
adc
cmp
add
mov
aaa
or
scas
and
ljmp
jb
pop
lea
nop
fildl
loope
add
jecxz
insb
mov
xor
or
loopne
icebp
dec
sub
adc
add
cmp
cmp
or
ret
and
sub
inc
negb
push
mov
adc
ret
or
into
repnz
ljmp
out
test
jge
inc
push
iret
sub
mov
adc
xorb
mov
fwait
jnp
inc
out
roll
dec
adc
mov
stos
clc
filds
cmp
les
fadds
clc
cmp
add
cmp
scas
std
enter
ret
and
pop
bswap
sub
repz
pop
xchg
cmpb
shlb
push
mov
subb
jne
inc
std
mov
push
mov
push
sub
out
pop
decl
test
out
xor
adc
sub
adc
inc
mov
in
mov
pop
adcl
shlb
enter
push
xchg
out
inc
sti
jmp
lahf
push
lret
xor
sub
insl
call
popa
xor
lock
pusha
mov
inc
push
sub
inc
movb
mov
xor
mov
adc
inc
jg
popf
adc
dec
enter
das
add
mov
add
add
loop
mov
xchg
and
add
outsl
cmp
movsb
sub
fadds
inc
cli
loope
icebp
add
incl
add
xchg
jecxz
pop
inc
aaa
jmp
push
cmpsb
in
mov
scas
fistps
mov
sbb
scas
jns
and
push
loope
add
inc
bound
push
sti
jg
sti
push
and
push
pop
and
cmpsl
mov
loope
push
jbe
mov
push
pop
mov
add
jg
stos
test
xchg
and
lahf
ret
jg
and
scas
xchg
call
addb
dec
lock
xlat
xor
jbe
rcrb
xchg
or
dec
xchg
pushf
push
leave
data16
insl
pop
jo
pusha
jnp
xor
lock
add
pop
aaa
or
sub
push
mov
loope
lcall
insb
jo
push
cmp
and
lods
mov
dec
fs
cli
xchg
bound
cmp
jb
or
bound
add
gs
dec
pop
cmpsl
mov
shrb
ljmp
pop
mov
cli
sbb
rcl
mov
shrb
scas
sarb
scas
mov
jle
aam
mov
pop
es
mov
adc
cmp
dec
fwait
int3
jge
insb
dec
add
jp
fisubl
cmp
leave
pop
xchg
and
lcall
ja
adcb
mov
pop
cwtl
cmp
lea
scas
lds
lcall
stos
jmp
incl
andl
stos
sub
pop
cmpsl
shlb
ret
icebp
xchg
jo
sbb
cmp
movb
out
and
orb
lock
bound
jae
in
addl
inc
std
scas
dec
cmp
mov
int
daa
fs
std
and
xchg
shlb
mov
out
mov
inc
dec
add
jbe
movsb
xchg
icebp
scas
popa
mov
pushl
test
inc
add
inc
dec
inc
or
arpl
rcr
or
fwait
push
sbb
cld
sub
mov
lret
adc
outsb
cmpb
ljmp
mov
ror
test
hlt
lret
in
inc
sub
or
and
push
ret
mov
mov
add
imul
inc
add
ss
mov
mov
inc
xor
jg
xchg
loopne
mov
sbb
jmp
fimull
cld
addb
mov
int
ret
fists
xlat
out
add
xchg
lods
jp
pop
or
movsl
pop
mov
ret
and
mov
cmp
stos
aad
mov
fcmovnb
jbe
xlat
or
inc
shl
nop
add
mov
inc
movsb
in
adc
das
and
pop
jge
adc
shrb
cli
incl
inc
mov
xchg
add
add
sub
stos
in
pop
aad
data16
mov
aam
sti
lds
pushf
enter
inc
int
js
adc
cwtl
sub
adc
mov
lea
cli
rcl
sbb
push
sub
push
push
cmp
dec
lock
adc
inc
rclb
sub
add
bound
dec
cmpsb
mov
sbb
addb
sub
js
or
mov
loop
mov
stos
sub
pop
mov
stos
xlat
inc
sub
push
mov
scas
js
pop
mov
xor
int
cmp
xchg
mov
sbb
mov
loop
lds
call
jle
test
notl
add
jge
push
dec
mov
jbe
jl
pushf
mov
sbb
inc
lock
jp
pop
jo
adc
mov
popa
fdivl
ret
lahf
mov
push
iret
cmpsb
add
fidivrs
dec
js
cmpsb
cmpsb
push
dec
sbb
int
rcl
popa
pushf
sbb
fsubrs
lret
loop
sbb
sbb
loop
mov
inc
dec
insb
mov
mov
add
mov
mov
fs
movsb
mov
dec
cltd
mov
jg
shrb
push
inc
pop
in
xchg
sub
xchg
cltd
mov
push
xor
shrl
inc
cmp
ret
xor
sbb
xchg
sub
popa
and
test
inc
hlt
mov
mov
test
mov
scas
xor
jnp
or
mov
loopne
add
sti
push
pop
pusha
out
cwtl
jg
dec
lods
xchg
cmp
or
arpl
cld
cs
aaa
repnz
mov
sahf
or
pop
mov
adc
popf
hlt
dec
sbb
sub
xor
jo
adc
outsb
hlt
lods
adc
icebp
call
ja
jne
lahf
dec
xlat
xchg
fidivl
xchg
ljmp
pushf
add
dec
pop
adc
pop
jae
lahf
lcall
xor
rcrl
cmp
test
scas
shrb
jl
xor
mov
cmpsb
pusha
mov
je
loop
push
rcll
sbbl
inc
or
lret
push
cs
push
adc
lcall
les
imul
ljmp
lods
clc
test
add
xor
cmpsl
in
rclb
pop
arpl
adcl
cwtl
sbb
decl
lock
pop
inc
scas
test
inc
mov
mov
push
adc
mov
adc
xor
ljmp
ret
pop
fmuls
loopne
test
cmp
insb
or
mov
xchg
sbb
cmpsl
shrb
adc
sahf
fisubrs
shl
cwtl
mov
stos
jbe
and
add
mov
adc
inc
push
xchg
and
or
outsb
out
sbb
add
aam
test
and
aam
push
pushf
orb
or
sbb
sub
cld
cmpsb
sti
and
lock
jno
mov
inc
adcb
dec
push
and
inc
cwtl
adc
enter
lock
std
das
sub
cld
mov
iret
shll
sub
inc
out
sahf
xchg
adc
jbe
or
loop
jns
jns
push
sbb
hlt
xchg
sub
pop
es
iret
std
fbstp
pusha
movl
add
or
jns
sarb
dec
push
clc
mov
add
mov
add
sub
xchg
jle
push
roll
pop
push
mov
adc
mov
inc
or
jae
lock
mov
dec
add
fs
push
jl
mov
jmp
mov
insb
in
jecxz
je
popf
lods
add
out
sub
aas
js
jl
jp
xchg
mov
popa
inc
jl
imul
add
inc
ror
push
or
xor
mov
aad
lods
inc
sub
mov
stos
sbb
ficoml
cmpsb
dec
xor
and
negb
mov
xchg
mov
stc
inc
movsb
cmp
popf
xchg
test
mov
add
int
lock
iret
nop
outsb
mov
jnp
dec
pop
jne
push
js
in
inc
shll
jp
sti
sbb
inc
shlb
movsb
sub
inc
adc
add
and
in
outsb
add
jno
mov
inc
xchg
push
shll
movsb
dec
sti
sbb
je
adc
add
call
inc
jl
add
push
jge
repz
add
adc
pop
enter
sbb
imul
jb
testl
adc
or
jmp
sub
mov
jae
add
out
or
mov
pop
sub
and
adc
cmp
pop
sbb
adc
mov
adc
dec
mov
jns
mov
arpl
lahf
mov
call
push
mov
stos
push
shlb
out
frstor
icebp
mov
push
add
jmp
cmp
or
and
lea
pop
pop
loopne
shlb
or
cld
negb
out
ljmp
jb
arpl
sub
add
or
dec
jl
push
adc
ja
shlb
clc
pusha
cmpsb
shrb
add
push
enter
xlat
mov
adc
mov
sbb
xor
push
jo
test
pusha
nop
cwtl
push
hlt
std
ljmp
enter
xlat
fistpl
arpl
sub
aaa
sbb
or
inc
mov
add
fcomp
xor
jg
decl
xchg
add
or
cmp
pusha
lahf
aas
or
sahf
xchg
pop
jg
and
jl
or
dec
lea
inc
dec
jle
insl
and
les
xchg
xchg
add
scas
clc
and
xor
movsb
orl
mov
push
add
int3
sub
cmp
jnp
cmpsl
push
mov
sub
mul
mov
xchg
add
roll
inc
bound
xchg
mov
cld
inc
push
xor
xchg
imul
lea
pop
adc
push
add
das
cli
scas
bound
test
jp
call
add
pop
lds
leave
add
fs
sub
test
incl
aam
and
jb
inc
cli
nop
mov
sub
test
je
jg
mov
pop
test
insb
adc
or
add
push
xchg
add
dec
mov
mov
dec
inc
js
int
adc
cmp
cs
call
lock
inc
ss
xorb
adc
adc
loopne
ljmp
xor
repnz
std
clc
lret
xchg
jge
call
repnz
xchg
or
or
push
in
or
xor
pop
cli
pop
jecxz,pt
and
push
loope
jp
and
push
pop
lock
dec
sbb
bound
call
cmc
add
pop
pusha
in
call
insl
jae
ss
cltd
add
call
mov
rolb
adc
jg
mov
ficoms
and
mov
adc
add
cmp
add
jg
stos
cltd
push
jg
scas
mov
lret
fsubs
dec
fidivs
inc
sti
inc
mov
out
lock
adc
push
sbb
mov
pop
in
dec
ret
outsl
js
aaa
sbb
jno
add
loopne
scas
iret
aam
add
ret
daa
sar
scas
cmp
pop
ja
lods
test
dec
inc
imul
cmp
xorb
push
fdivrs
push
cmpsl
ds
or
test
test
pop
pop
aam
push
mov
lds
fildll
mov
cmp
jg
inc
stc
mov
movb
insb
or
xor
rorb
pop
and
xor
inc
sub
xchg
call
mov
lret
inc
shll
ss
sub
add
cmp
add
popf
fstpl
jp
fists
call
add
pop
push
mov
sub
push
or
xor
jns
pushf
and
loopne
cltd
cld
cmpsb
pop
in
cmp
or
xchg
adc
push
mov
ret
repnz
gs
add
cltd
push
pop
push
imul
sbb
add
cmp
xchg
fs
inc
jl
or
dec
xor
cld
xlat
jnp
dec
clc
add
lds
rcrl
xchg
les
out
jo
aas
inc
xor
nop
stc
push
pmulhuw
roll
sbb
adc
cmp
test
aas
fsubs
push
movsl
iret
jo
adc
scas
ljmp
sbb
sbb
mov
sub
outsb
push
int3
gs
xchg
fildl
jge
lods
jb
cmc
jo
adc
cmp
test
out
call
enter
and
pushf
xchg
add
push
dec
shrl
pop
pop
adc
xor
adc
inc
aas
ljmp
outsb
pop
clc
sbb
jl
loopne
int3
imul
jle
lods
in
mov
incl
inc
pop
adcl
shlb
cli
add
dec
lock
loop
sub
mov
mov
mov
nop
jbe
test
inc
jg
cli
fcomps
gs
inc
mov
das
js
mov
mov
inc
nop
loope
mov
push
jle
lret
pop
js
mov
out
xchg
add
mov
pmullw
add
pushl
inc
mov
shrb
cmc
shlb
sub
sub
int
insb
adc
mov
adc
mov
cli
add
test
mov
iret
fistl
pushf
or
movsl
andl
shll
test
popf
test
jmp
adc
add
test
call
inc
sti
pop
dec
or
or
test
pop
add
dec
ret
xorb
dec
cmp
cli
loopne
add
fwait
or
lea
cmp
cwtl
xchg
cld
mov
pop
and
jecxz
add
std
les
cltd
loop
clc
sub
enter
push
jbe
fmuls
movb
rcrl
xlat
or
ljmp
inc
xor
adc
int
cmp
loop
rcll
ret
add
push
mov
lahf
sub
icebp
fcomi
cmp
dec
cmp
rorl
stc
inc
inc
mov
in
movsl
push
cs
and
xor
jo
adc
fidivs
js
pop
fcoml
lock
xor
sbb
pop
cwtl
jne
mov
call
subl
and
add
xor
jecxz
add
ja
pushf
sub
push
inc
or
sub
lock
orl
xchg
jmp
test
mov
and
sbb
pusha
lcall
or
ficoml
add
mov
dec
inc
adc
scas
mov
dec
mov
push
add
sub
mov
inc
lea
mov
ss
loope
incl
aad
rclb
pop
outsb
push
cmp
pop
jo
clc
rorb
shlb
jno
inc
push
sub
into
xor
mov
push
insb
out
mov
inc
mov
inc
call
decl
and
mov
enter
adc
mov
mov
lcall
rcrb
testb
pop
sbb
stos
in
movsb
addr16
lret
mov
sbb
sbb
add
neg
inc
xor
test
inc
lods
lods
pop
out
push
das
sbb
add
cmp
mov
mov
scas
fcomi
aas
lods
xor
rcrl
test
inc
add
outsl
and
or
fisubs
adc
call
mov
and
jle
sub
lret
push
or
sbb
in
add
js
dec
mov
test
ljmp
push
push
inc
push
cld
inc
data16
dec
rcrb
ret
hlt
push
rorb
stos
add
or
inc
mov
test
cs
xlat
repz
lods
lret
loope
adc
dec
or
lea
pop
adc
call
ja
sarb
add
je
aas
xor
dec
test
inc
test
mov
ret
mov
mov
mov
repnz
push
mov
push
test
clc
cltd
subb
icebp
in
ja
jno
cs
adc
xchg
push
mov
lcall
sarb
mov
lea
hlt
mov
call
inc
imulb
test
add
inc
rorl
inc
lods
jle
adc
mov
pop
jo
mov
push
aad
in
cltd
cld
das
cli
pushl
repnz
mov
test
mov
pop
out
xchg
roll
push
xor
xor
adc
sub
jl
jl
pop
std
nop
adc
xchg
add
std
add
adc
repz
mov
add
and
xor
out
shlb
sbbb
data16
sub
jmp
xor
pop
icebp
incl
iret
fcomp
jg
leave
xor
fmulp
sub
negb
mov
pop
add
mov
mov
mov
loop
gs
ljmp
ljmp
gs
jo
dec
mov
stos
fisttps
pcmpgtd
iret
mov
xor
xor
jno
mov
lock
dec
pop
test
fisubl
mov
das
mov
dec
xchg
loope
add
cmp
std
sub
repz
cmpsb
cmp
sub
push
dec
add
sub
add
adc
ret
xchg
or
cmpsl
jge
lahf
sub
call
mov
fdivl
inc
sahf
inc
add
and
or
rolb
sbb
xor
mov
inc
fsubs
ss
xor
test
fisubs
add
sub
push
test
in
lods
add
or
aas
arpl
loop
fs
loopne
jae
mov
fistl
push
cmpsb
ljmp
call
push
mov
ret
pop
cmp
xchg
mov
pop
insl
sbb
cmpsb
push
inc
fadds
mov
push
sar
pop
ljmp
or
lods
add
push
push
ljmp
call
jbe
push
jle
fisubrl
or
test
fsubr
mov
insb
mov
or
xor
dec
adc
lods
lret
aad
jbe
mov
push
cwtl
pop
js
xor
je
ss
pop
add
and
repnz
inc
hlt
loopne
loope
data16
fidivrs
js
in
aaa
and
dec
into
sbb
mulb
and
or
pop
aas
test
dec
mov
ret
cmp
xchg
sbb
adc
sbbb
mov
push
js
add
int3
jne
mov
ret
xchg
pop
adc
push
add
rolb
insb
jmp
fdivrp
mov
push
and
fwait
ret
insb
xchg
lret
mov
cmp
add
mov
test
mov
adc
adc
cmp
ss
mov
or
lret
pop
cmp
jge
fcomip
fistps
add
sbb
add
xchg
or
mov
inc
sbbb
movsbl
into
mov
cmp
pop
pop
push
clc
aas
sbb
cwtl
stos
or
cmc
add
inc
outsb
clc
subb
sbb
add
ja
pop
push
or
cmp
and
outsb
js
ja,pt
mov
pop
decl
inc
movsb
filds
xorb
or
mov
jmp
sbb
lea
out
sar
loop
pop
and
add
jb
jno
jp
int3
sahf
cmp
pop
les
push
fidivrl
ja
mov
jne
not
adc
sahf
pop
inc
test
out
push
icebp
aas
push
cmpsb
sahf
mov
jmp
dec
inc
pop
add
sbb
sbbl
jo
roll
inc
inc
mov
inc
jo
sbb
fistpl
mov
dec
movsb
ret
cli
or
in
dec
pop
cmpsb
pop
add
dec
xchg
push
pop
jbe
inc
orb
dec
in
mov
arpl
test
push
lock
jmp
push
inc
enter
pop
pop
add
out
or
add
into
aad
loop
cmc
je
loop
sbb
or
xor
sbb
ds
jl
scas
imul
push
cmp
int3
sbb
mov
inc
fwait
sbb
jg
std
add
add
aad
xchg
into
xor
lcall
data16
sbb
add
and
mov
pushf
mov
sti
mov
push
mov
add
pop
iret
call
mov
jp
mov
loop
popf
push
mov
push
push
rcrl
xchg
mov
mov
ja
hlt
out
pop
xchg
push
pop
mov
cwtl
iret
cs
sub
add
sahf
clc
mov
sbb
and
jb
pop
push
and
pop
jp
in
xchg
adc
imul
pop
pusha
clc
imul
outsl
vxorps
dec
push
test
std
data16
or
jp
in
jns
clc
scas
fdivs
pusha
andl
out
dec
add
cmp
and
adc
adc
out
dec
out
xchg
xchg
pop
jl
pop
xor
loop
jae
mov
movsb
lret
xchg
xchg
stos
adc
leave
sbb
add
jge
out
pop
inc
xchg
mov
cmp
lahf
fiaddl
and
mov
adc
fisubs
push
cmp
dec
sub
xchg
addr16
nop
les
decb
cld
or
lret
arpl
jne
pop
addb
mov
xchg
andb
loop
inc
mov
mov
iret
loopne
mov
pop
stos
mov
pop
icebp
rcr
nop
and
xor
inc
mov
xlat
outsl
sub
push
cmpsl
mov
testb
pop
clc
outsl
dec
and
pop
sti
mov
add
sbb
hlt
incl
add
push
push
and
xchg
es
stos
scas
mov
xchg
push
ljmp
orb
dec
and
icebp
scas
call
shlb
pop
je
je
lock
xlat
xchg
les
lcall
pop
adc
xor
adc
fimull
add
sbb
cld
outsl
out
xchg
and
mov
nop
push
and
data16
lock
inc
pop
or
or
fs
mov
dec
loop
gs
jmp
inc
ret
imul
ds
dec
pop
outsb
call
pop
cmp
scas
xor
in
mov
lods
jbe
and
fistpll
or
shll
movsl
or
jo
fistpll
jg
sbb
jno
jl
dec
decb
mov
jg
jle
aad
js
cmc
adc
scas
addb
jo
mov
and
hlt
cmp
call
jbe
xchg
loope
andb
ucomiss
push
or
inc
lods
lds
sub
xor
loopne,pn
push
sahf
pop
adc
pushf
insb
repnz
and
call
lcall
cmp
aas
jb
inc
pop
arpl
inc
aad
hlt
jne
int
inc
dec
fisubl
fidivrl
cltd
inc
xor
sahf
xchg
pushl
mov
jp
inc
ret
bound
pop
push
and
cmp
push
xor
adc
cmc
addps
sbb
fidivrs
sub
jmp
pop
clc
push
sbb
jg
out
sbb
cmpsl
xchg
add
test
adc
pop
fistps
cs
mov
sbb
orl
addr16
mov
add
jb
mov
mov
xchg
add
pop
arpl
scas
mov
ss
sbb
push
or
jp
cli
or
in
adc
or
sbbb
jecxz
jg
pop
loopne
add
jle
imul
inc
pop
push
and
loopne
cmc
out
adc
insb
outsb
int3
xor
mov
mov
in
cmp
sti
mov
mov
outsb
cld
out
jmp
inc
add
cli
in
pop
jg
add
inc
pushf
addl
fisubrl
lcall
cs
mov
xor
inc
cmp
std
or
sahf
mov
fld
sti
ss
pusha
call
call
push
imull
sbb
loopne
dec
out
xchg
xor
xchg
inc
dec
cltd
rorb
icebp
call
and
xchg
and
fsubrl
mov
mov
aas
or
push
out
add
inc
ss
mov
mov
cmovs
je
in
dec
cmp
inc
adc
enter
sbb
mov
push
mov
loop
aas
lds
add
sub
jge
dec
icebp
mov
push
lods
jecxz
sbb
mov
and
adc
cmpsl
jne
xchg
dec
andb
jle
jg
pop
mov
inc
push
sub
call
out
popa
mov
enter
loopne
or
xchg
lock
sbb
int
stos
mov
out
insl
mov
inc
dec
fldenv
icebp
xchg
mov
out
xchg
inc
cmp
or
sbb
and
call
rcl
dec
xchg
inc
in
mov
push
cwtl
add
shll
mov
or
sub
or
call
xchg
sub
pushf
movsl
add
mov
xchg
pop
test
or
sub
in
push
leave
add
rorb
ds
jg
stc
jl
daa
sbb
jbe
cmp
shr
sub
mov
out
mov
subb
icebp
mov
jb
xorb
dec
add
test
pop
sbb
jnp
or
int3
rcll
lret
and
mov
shlb
push
inc
or
enter
stos
dec
dec
sub
pop
push
stos
xchg
cmp
xorb
cmp
insb
mov
pop
fwait
inc
mov
mov
int3
in
dec
int
nop
out
push
adc
push
mov
push
pop
inc
xchg
out
dec
cli
out
xor
outsb
xchg
pop
adc
jl
nop
pop
cmp
insl
pop
or
cmp
mov
cld
pop
pop
std
cmp
cltd
lcall
add
xchg
xor
icebp
mov
inc
pushw
pop
sbbb
add
in
pop
inc
jg
dec
mov
pushf
loopne
add
push
rcll
or
sarb
mov
js
data16
ss
scas
mov
faddp
or
add
or
out
lret
push
mov
inc
pusha
mov
sub
popf
mov
sbb
add
xchg
inc
xchg
push
add
lret
adc
pop
or
sbb
repz
dec
cmp
inc
cmp
inc
aaa
pop
dec
sti
or
xorl
rorb
and
mov
aad
or
mov
out
imul
mov
adc
sub
test
sbbb
xchg
aaa
movsb
ljmp
in
xchg
hlt
or
mov
fcmovne
pushf
inc
aaa
dec
or
js
pop
mov
add
push
mov
adc
dec
mov
jg
sub
mov
pop
push
inc
sub
movsb
in
or
arpl
mov
jg
sub
mov
fisttps
in
lock
int3
out
push
ljmp
xor
dec
mov
cmp
loopne,pn
fcomip
or
and
mov
xor
test
inc
adc
push
mov
inc
ds
fidivl
inc
je
popf
hlt
inc
xchg
pop
dec
aam
lds
stos
push
aam
lahf
sub
movsb
sbb
sbb
pop
pop
add
outsl
sbbb
push
aam
xchg
mov
add
jmp
cmp
sub
insl
inc
aaa
jbe
cmpb
lods
mov
add
shr
in
roll
cmp
xor
add
lock
cmp
mov
mov
push
cltd
std
mov
fstl
push
add
add
or
sbb
add
es
add
cmpsl
js
out
push
std
sub
push
mov
aaa
pop
jle
es
push
es
mov
scas
lahf
fidivrs
aas
ds
xchg
inc
lock
in
push
dec
sbb
in
fsub
or
daa
or
in
mov
nop
insl
outsb
leave
jle
mov
mov
xchg
js
adc
or
mov
fmul
sbb
sbb
loopne
fbld
adc
jno
pop
and
add
cld
adc
les
cmp
push
adc
add
ret
scas
mov
into
pop
sbb
lods
or
rcll
leave
or
dec
dec
jg
call
incb
xor
mov
and
pushf
mov
mov
test
in
add
test
adc
cmp
test
pop
dec
mov
pusha
fstpt
fimull
fidivrs
xor
lahf
sbb
mov
lds
imul
ret
jnp
mov
mov
sub
movsb
xor
pop
cli
and
lret
cmp
les
cmpb
test
pop
cmp
jo
lock
repnz
and
lds
outsb
fisubrl
dec
cld
cmpsb
pop
inc
xchg
push
sbb
xchg
jl
mov
roll
call
mov
mov
je
cmp
jno
jecxz
lcall
cs
or
jecxz
leave
iret
or
jae
adc
xlat
sti
loope
jle
push
lcall
divl
dec
jl
and
outsb
adcb
int
mov
xlat
pop
or
adc
call
inc
sbb
push
sbbb
js
icebp
nop
lods
aam
dec
cwtl
pop
xchg
insb
and
sub
mov
out
lret
rorb
arpl
lcall
xchg
inc
mov
stos
jle
xlat
lcall
mov
ror
mov
pop
lcall
sub
sub
fs
push
dec
nop
adc
pusha
sarb
sahf
or
jp
jle
jg
mul
mov
data16
addl
lret
loopne
icebp
mov
dec
cwtl
enter
iret
push
js
jnp
test
jg
in
mov
out
adc
lods
jg
mov
push
ds
sbb
out
into
xor
adc
xlat
ret
sbb
mov
mov
mov
orb
cmpsl
push
ljmp
pushf
les
enter
add
icebp
pushw
adc
cs
fistl
mov
in
add
insb
push
cld
iret
xchg
bound
dec
push
fdivrs
mov
push
repnz
sub
push
pop
mov
or
inc
cs
and
sub
push
adc
mov
cmp
es
mov
dec
out
test
push
add
icebp
dec
dec
cmp
stc
xor
push
icebp
or
push
cmpsb
dec
dec
mov
popa
cwtl
cwtl
lret
lcall
es
xchg
sbbl
mov
sti
mov
les
mov
rclb
adc
jp
inc
pop
int3
test
gs
loop
cmpsb
pop
stos
jmp
mov
xchg
add
mov
cmc
push
sub
and
lret
out
addr16
adc
xlat
aas
andb
sbbb
mov
and
movsb
sarl
mov
inc
or
ret
inc
add
mov
sub
pop
inc
or
sub
sbb
jmp
fs
jp
int3
repz
pop
out
jno
lods
stc
frstor
inc
mov
adc
push
xor
hlt
sbb
mov
test
cli
sbb
sbb
int3
xorb
cli
cmpsb
dec
lcall
loopne
ja
mov
mov
inc
lcall
mov
ds
jo
jle
daa
pop
leave
jge
pop
rol
xor
push
xor
jmp
mov
int3
adc
rcll
dec
dec
rcrl
mov
add
sub
adc
cld
xchg
mov
mov
hlt
cmp
push
cld
mov
test
lods
mov
arpl
fcomps
add
xchg
in
dec
jo
popa
and
js
dec
pop
addb
push
loopne
and
out
inc
lea
shll
ljmp
mov
lfs
js
iret
xorb
xor
jno
test
mov
and
insl
fdiv
leave
sti
pop
insb
js
ljmp
scas
sbb
shl
jp
mov
inc
repnz
stos
mov
scas
inc
test
mov
pop
push
jp
ffree
sarb
leave
in
into
push
jb
push
decb
pop
jns
or
addb
cmp
adc
imul
jmp
call
js
enter
mov
mov
sahf
xchg
pushl
nop
iret
scas
jmp
leave
hlt
das
sub
pop
in
jle
dec
loop
xchg
les
scas
gs
lret
dec
add
adc
and
mov
mov
xchg
and
mov
cmp
ret
jg
cmc
aas
jo
movsl
push
icebp
and
mov
sar
mov
std
ret
lahf
mov
inc
clc
mov
and
push
mov
mov
sbbb
pop
jbe
mov
mov
jl
lock
out
ja
ljmp
pop
aas
push
cld
sbb
and
sbb
xchg
je
pop
imul
lret
and
fadds
dec
mov
adc
imull
jb
ja
inc
mov
je
ja
jecxz
pop
pop
add
fcompl
mov
pop
scas
test
push
pop
test
fsubl
jle
lcall
movsl
push
xor
push
cmp
mov
xchg
out
cmp
and
xlat
cmp
decl
mov
mov
test
mov
push
es
sub
lret
jecxz
dec
sub
xchg
jbe
decl
add
fcompp
inc
ror
lock
pop
mov
std
mov
fiaddl
es
push
pop
into
int
cmpsb
and
lock
fldl
add
clc
mov
mov
ja
mov
mov
test
pop
xchg
cmp
dec
iret
out
pop
push
call
negl
sub
pop
and
mov
mov
rclb
neg
or
test
hlt
ret
sbb
int
adc
bound
andb
sbb
inc
pop
jmp
nop
mov
imulb
jae
add
mov
add
enter
mov
or
stos
cmp
xor
outsl
xor
cwtl
fidivrl
das
dec
push
hlt
jg
test
xor
sbb
fbstp
cld
fucomip
xor
es
and
rcl
icebp
aam
dec
mov
jnp
xchg
adc
add
aam
push
xlat
push
dec
add
mov
push
ss
mov
xchg
mov
and
rcrb
insb
cmp
mov
jmp
push
test
inc
test
aad
mov
pop
pop
lea
push
sahf
outsl
push
mov
mov
mov
pop
jle
jo
adcl
jle
mov
jecxz
outsl
push
stos
mov
xor
int3
pushf
jno
scas
push
or
fwait
cmp
fisubs
aas
rolb
in
xchg
jge
repnz
jno
cwtl
inc
mov
decl
test
mov
scas
or
dec
roll
xlat
add
into
fisttpl
cltd
sub
cmp
mov
shlb
push
cmp
and
add
mov
and
das
nop
adc
cmpsl
mov
dec
fldt
clc
sbb
cmp
cltd
add
xor
mov
inc
add
mov
incb
sbb
add
mov
mov
dec
rcrb
js
adc
mov
push
and
mov
dec
and
cwtl
add
lcall
ret
pushf
aas
pop
or
push
cmp
dec
dec
cs
incl
mov
push
and
mul
stc
add
adc
inc
mov
int
ret
sub
cli
decl
or
pop
je
inc
fwait
dec
popl
adc
cmp
push
mov
mov
sub
mov
inc
sbb
cmp
inc
les
lods
pop
sub
loope
aaa
sub
decl
pop
xchg
scas
js
fwait
std
or
mov
out
in
or
es
jno
mov
daa
mov
rcl
sub
push
outsb
in
mov
mov
mov
pop
rcrb
inc
pop
hlt
add
jnp
mov
pop
bound
xchg
icebp
test
push
mov
je
mov
mov
outsb
jecxz
dec
in
loop
jnp
pop
ds
out
push
add
and
pop
push
pop
sub
test
cmc
into
stc
and
js
call
out
roll
imul
dec
std
outsb
loopne
lods
ret
jo
ss
std
inc
jbe
loop
mov
icebp
stos
jg
or
jbe
lahf
jle
stos
fisubs
mov
adc
bound
dec
and
jo
fdivp
add
ss
xchg
pop
adcb
sub
icebp
adc
fists
aas
movsl
pop
stos
jg
or
inc
pop
out
test
mov
sti
inc
and
mov
fdivrs
out
xchg
imul
and
sbb
cmp
fisubl
sbb
and
sbb
adc
sub
call
cmp
movd
cmp
sarb
mov
lcallw
sub
cmp
sahf
outsl
adc
pusha
jge
push
cmpsl
rolb
movsb
push
inc
sub
mov
inc
cmp
xchg
icebp
jg
and
xor
sbb
sbb
sbb
decl
or
cmp
shll
in
pop
mov
xchg
push
in
jb
pop
dec
mov
fisttpll
pop
xor
mov
dec
popf
outsl
pushw
pop
loopne
and
mov
icebp
and
push
aas
rolb
in
inc
loop
xchg
mov
je
mov
ret
jo
jle
jne
lea
add
pop
xchg
adc
sbb
jbe
icebp
scas
pop
out
inc
mov
mov
push
push
inc
sbb
inc
pop
mov
cmpsl
cwtl
or
cs
sbb
push
jo
outsl
inc
sub
mov
imul
decb
xchg
inc
and
inc
mov
adc
aas
sbb
jb
mov
dec
xchg
mov
inc
cmp
add
pop
push
ret
xchg
jg
cmp
jl
adc
fs
push
ret
adc
mov
mov
stos
loopne
or
rcr
cli
loope
call
rolb
and
icebp
popa
sbb
jecxz
int3
cld
mov
sbb
aaa
cld
and
dec
jne
aad
sub
xchg
mov
adc
adc
nop
sarl
mov
inc
cltd
jl
xchg
cltd
adc
jb
loope
ljmp
in
hlt
cwtl
inc
or
pop
adc
push
push
sub
lds
and
aaa
mov
leave
inc
fnstenv
clc
jp
mov
fsubl
and
xor
clc
inc
es
arpl
into
or
or
xchg
cli
push
cmp
lcall
sbb
push
mov
test
add
mov
cli
inc
ljmp
cmp
jmp
jl
movsb
subb
xor
clc
jg
mov
sub
push
ret
std
daa
addr16
xchg
lods
sti
mov
cmp
fsubs
add
lret
jecxz
mov
adc
inc
push
mov
xchg
jbe
test
push
xlat
lock
jo
imul
fwait
cmp
dec
push
movsb
test
pop
mov
xchg
dec
adc
cmpsl
ficoml
push
sub
add
int3
cmp
push
fcomps
cmp
adc
in
mov
out
loope
add
xchg
or
pop
sbb
add
or
addb
or
data16
push
fcoml
mov
pushf
cs
sbb
mov
or
pushl
rolb
addl
fiaddl
test
add
jb
scas
cmpsl
icebp
sub
sub
dec
test
and
cmp
adc
push
and
call
sub
lret
adc
xchg
fisttpl
call
mov
movsb
and
repz
scas
mov
sub
mov
mov
push
shll
xchg
cli
pop
xor
mov
jle
mov
add
sub
imulb
sub
cmp
cld
shufps
lds
aad
test
mov
rorl
cmp
xor
xor
dec
test
in
push
xchg
sbb
mov
lock
sbb
or
outsl
fwait
mov
mov
mov
xor
lea
int
hlt
clc
cli
add
pusha
das
js
cld
ja
inc
in
add
pop
lcall
es
ficoms
dec
fsubrs
retw
icebp
jge
xor
incl
fsub
scas
mov
pop
mov
icebp
adc
rcrb
test
bound
jg
out
shlb
daa
into
mov
inc
in
jbe
cmp
sbb
push
sarb
mov
lods
dec
loop
pushf
andb
cmp
fldt
inc
mov
mov
mov
stos
sti
mov
sti
out
fsub
mov
cmp
cld
aas
mov
dec
or
cltd
mov
out
loope
jo
scas
and
sbb
push
and
push
or
mov
jo
mov
pop
jg
fisttps
cmpsl
xchg
pop
adc
pop
mov
push
in
xor
incl
push
add
mov
or
mov
inc
xor
adc
mov
push
clc
mov
and
outsb
fisttpll
cld
popf
inc
xchg
add
outsb
shrb
jmp
push
sbb
int
adc
jecxz
dec
hlt
add
add
sub
inc
ret
xchg
push
dec
mov
mov
repz
rclb
mov
jmp
pop
test
mov
sbb
ficomps
lock
clc
cmp
in
or
call
iret
hlt
inc
sbb
pop
add
pop
xchg
pop
push
push
rolb
lcall
clc
repnz
cld
fbld
test
pusha
clc
inc
pop
hlt
push
and
or
mov
iret
and
xor
movl
inc
pop
inc
dec
sar
fcompl
test
in
sbb
sbb
decb
add
mov
jnp
cmpsl
ror
jb
add
adc
inc
enter
int
movsb
out
js
loop
or
lock
fmull
fwait
incl
stos
sbb
inc
ror
mov
pop
or
pushl
adc
bound
push
jo
fisttps
test
test
cs
fdiv
data16
inc
lcall
imul
xchg
mov
mov
and
scas
fadds
testb
lea
push
adc
gs
cmp
leave
pushw
adc
push
cld
xchg
shl
pop
jne
xor
lcall
mov
fdivp
aaa
push
out
sub
jl
mov
bound
push
adc
scas
loopne
pop
jp
pop
dec
push
jg
adc
xchg
sub
incb
notb
arpl
and
adc
data16
mov
subb
pushl
dec
aam
out
aad
stos
jo
ss
mov
std
sub
xchg
fisttpl
push
push
jle
push
sbb
sbb
push
cwtl
mov
int3
repnz
push
loopne
scas
stos
nop
push
lds
in
fsts
push
sbbl
mov
xchg
pop
and
jne
xchg
outsl
sbbb
cwtl
mov
mov
pop
cmp
scas
pop
mov
outsl
pop
fmull
mov
cmp
or
mov
add
insl
cmpsb
xchg
rcr
pop
hlt
xor
mov
loop
and
mov
shlb
xor
out
inc
mov
ret
lea
fsubs
mov
ss
cwtl
mov
cmpsl
add
cmp
notl
rolb
mov
pop
loop
xor
andb
sub
or
popf
nop
loopne
std
add
mov
sub
mov
jmp
sub
adc
pop
mov
sbb
mov
outsl
out
nop
sahf
jns
ret
adc
pop
popf
cwtl
adc
xchg
or
mov
dec
movsl
xchg
je
call
or
rol
add
shll
sub
mov
lea
push
fisttpll
movsl
or
notl
fcmovnb
loopw
cli
lret
fwait
and
mov
or
push
jg
cmp
cwtl
or
inc
dec
enter
insb
test
pop
add
fcmovnb
mov
test
push
mov
imul
sbb
movsb
and
add
insb
aam
dec
popf
cmpsb
clc
incl
bound
loope
out
mov
pop
addl
sbb
push
add
fsubl
jbe
out
mov
inc
mov
push
lods
clc
fisubrs
add
fidivs
sarb
push
sbb
ret
sbb
icebp
jg
ljmp
dec
in
pop
push
fisubrl
ja
mov
mov
je
cmp
call
cmovne
lods
inc
add
pop
sbb
arpl
in
lcall
or
mov
mov
cmpsl
mov
pushl
ret
xlat
inc
dec
call
mov
aas
stos
jp
outsb
jle
mov
adc
movsb
xchg
notl
add
push
pop
adc
xchg
push
mov
add
xor
enter
or
enter
cmpsl
xchg
jb
faddl
outsl
test
push
sub
mulb
in
int3
cs
bound
mov
andl
inc
xor
pop
ret
movsb
loop
in
ds
lea
adcb
dec
add
jle
mov
jns
mov
movb
jbe
jns
sub
jo
hlt
adc
or
pop
faddp
aaa
dec
add
or
into
pop
repnz
add
push
push
add
filds
mov
fiaddl
adc
and
mov
rorl
jns
pop
add
icebp
sbbb
les
adc
insb
mov
mov
xor
jo
push
lock
sbb
repz
pop
push
push
test
adc
push
lahf
dec
sub
mov
adc
dec
nop
cmp
push
sbb
scas
dec
fcompl
sub
jle
scas
dec
add
inc
daa
inc
sti
adc
or
mov
xchg
push
add
ja
mov
pop
pop
dec
fs
jle
mov
out
ljmp
outsl
jmp
pop
xor
cmpsl
imul
mov
xchg
mov
arpl
and
pop
dec
xchg
push
adc
mov
dec
int
xor
clc
lahf
testb
int
mov
and
push
movsb
aaa
stc
shll
cltd
cmp
js,pt
adc
pop
mov
fsts
repnz
imul
sbb
push
fnsave
nop
push
scas
std
data16
lea
cltd
mov
out
sbb
cwtl
xchg
pop
cld
outsb
add
xor
fsubp
jl
cmp
xor
es
cli
addr16
or
movsb
mov
mov
xor
sbb
fsubs
andb
mov
or
cld
mov
mov
xchg
add
scas
scas
lcall
into
mov
in
adc
adc
cmp
push
gs
sub
fwait
movsb
sub
pop
cli
addr16
test
dec
xchg
mov
mov
pusha
pop
decl
les
jg
xchg
cmp
cli
mov
jae
adc
loop
jmp
shlb
loopne
dec
cmp
add
lock
dec
icebp
lods
into
mov
negb
insb
imul
lcall
xor
jp
pop
insb
ror
cwtl
out
imul
loop
lahf
int3
outsb
jmp
nop
push
xor
adc
mov
mov
aas
mov
xor
incl
sbb
ret
inc
jecxz
in
out
mov
dec
loopne
inc
ret
aas
xor
cmp
icebp
add
add
mov
pusha
or
popa
cwtl
popf
sbb
xchg
aam
cmpsb
lea
rorl
xor
fildll
adc
test
adc
jg
add
lods
and
jo
cli
incl
call
jmp
nop
scas
fwait
stc
xor
inc
and
xor
sti
cs
pusha
pop
inc
pop
add
lods
jns
nop
push
sub
and
test
or
adc
sub
adc
inc
xchg
out
sub
fildl
adc
add
inc
jne
sti
mov
jns
andb
iret
xor
pop
inc
inc
adc
in
int3
ss
aas
dec
imul
xchg
pop
add
mov
hlt
rclb
rcrl
jo
push
dec
xchg
mov
scas
adc
icebp
add
in
mov
int
push
mov
xchg
incb
cmp
adc
mov
aam
jmp
jl
cmpsb
jg
xchg
js
sarb
pop
pop
add
adc
add
mov
loop
cmpsb
push
cmc
push
rcll
adcb
je
and
clc
jae
mov
cmc
or
mov
adc
push
outsb
sbb
nop
je
incl
cmp
jb
into
lahf
aam
andl
pop
xchg
mov
add
or
scas
jg
pop
xlat
mov
fdivl
pusha
pop
pop
lock
addl
sub
xchg
shr
push
push
inc
mov
push
adc
repnz
dec
nop
xchg
fcomip
movsb
int3
pop
mov
xchg
add
stc
mov
icebp
fistps
pusha
call
add
into
call
call
push
mov
dec
dec
xchg
and
daa
ljmp
pushf
mov
push
push
ret
sub
add
insb
enter
fld
scas
push
fcomip
pushl
dec
out
dec
daa
jle
mov
add
roll
nop
adc
roll
push
or
cmp
mov
fs
xor
push
lock
test
push
mov
decb
xchg
outsl
or
xchg
lea
cmc
inc
cmp
outsb
pusha
push
pusha
int3
das
fwait
repnz
andl
jle
mov
mov
dec
jmp
xor
mov
pushl
add
js
jae
fwait
test
sbb
and
outsl
inc
mov
xchg
push
add
dec
push
push
ret
push
dec
add
je
adc
fwait
add
test
xchg
and
adc
or
ret
cli
scas
dec
pop
cmp
nop
bnd
hlt
inc
icebp
popa
xchg
xchg
pop
popf
int3
aam
cld
add
pop
movsl
xchg
out
mov
xchg
jne
xor
xchg
xchg
mov
sbb
shrl
cmp
mov
push
negl
lcall
or
insb
stos
cmp
push
iret
es
jl
out
aad
push
push
shlb
fbstp
mov
sahf
es
fwait
inc
call
gs
mov
ret
xor
xorb
mov
mov
mov
xlat
js
push
mov
test
outsb
mov
inc
sbb
cs
mov
sub
mov
inc
mov
fistpll
pop
std
jle
inc
sub
mov
and
push
mov
les
jb
mov
adc
and
test
dec
rolb
dec
adc
add
push
shrl
enter
movsb
and
pop
cld
add
ret
sar
je
je
sbb
dec
push
je
inc
aad
push
lret
jg
enter
cmp
sarl
jl
mov
dec
outsl
rolb
fcomps
inc
in
xorb
movsb
inc
jle
mov
jge
push
xlat
fadds
jle
roll
rcr
les
mov
loopne
jle
lret
jne
fmull
xchg
into
imul
mov
sub
adcl
sti
mov
push
mov
fs
sbb
cmp
sbb
mov
repz
repz
out
das
sub
sub
sahf
and
inc
inc
lods
cmp
add
imul
int
imul
int3
cs
daa
test
nop
mov
into
mov
pusha
push
mov
ret
ret
xchg
mov
subl
popa
cmpsl
sub
pop
push
push
adc
lods
incl
cmp
and
jecxz
or
mov
push
inc
push
sub
and
sbbl
sub
lock
pop
loopne
jb
sub
int
mov
inc
nop
mov
dec
pop
push
mov
popa
dec
pusha
mov
ret
jmp
bound
dec
rcr
xlat
scas
fistpl
mov
std
loopne
hlt
push
mov
scas
jo
mov
out
push
insb
dec
pop
arpl
jmp
add
aam
in
pop
cli
adc
adc
loopne
pop
adc
imull
inc
adc
dec
mov
cld
pop
adc
mov
cmp
lods
lahf
popf
mov
hlt
ljmp
addl
add
mov
std
fists
jbe
js
sub
fdivrs
pop
hlt
andb
push
ret
xor
mov
jne
cmp
scas
sbb
dec
sbb
mov
push
dec
xchg
lods
inc
or
push
mov
sub
or
sbb
outsl
and
cltd
xor
pop
inc
push
call
pop
insb
lds
orb
test
xchg
sub
lock
mov
dec
in
adc
and
jl
add
iret
test
dec
sbb
inc
ja
andb
call
xchg
out
sub
inc
aas
jne
cmp
mov
aas
add
loopne
inc
mov
dec
add
jne
adc
add
and
repnz
sbb
ret
push
out
stos
es
and
sbb
inc
pop
sbb
dec
testb
bound
bnd
and
push
cmc
enter
add
loop
adcb
add
es
mov
add
pop
lret
in
ljmp
out
ja
movsb
out
stos
mov
lods
adcl
add
shrb
cmc
sbb
push
scas
or
or
call
and
jmp
sti
xchg
fiadds
xchg
or
dec
mov
fildl
mov
adc
mov
fbstp
inc
and
jbe
jecxz
jbe
pop
cmp
rclb
xchg
aas
sub
lahf
das
shll
xchg
dec
in
lea
dec
ror
movsb
sub
and
dec
cmp
ja
and
mov
rorb
cmp
add
pop
out
pushl
decb
pushf
insb
inc
inc
lods
and
xor
lods
mov
and
push
push
fidivs
js
orb
loopne
jle
xchg
sbb
jbe
add
mov
leave
je
rolb
ret
jo
mov
loope
or
xorb
std
fldl
out
push
sbbl
test
xchg
and
xchg
jno
pop
ret
cld
lods
add
or
and
add
or
pop
mov
es
sub
movsb
jle
sbb
sbb
push
scas
aam
icebp
pop
jb
push
pop
pop
xor
or
ds
push
js
test
dec
shlb
mov
mov
das
mov
or
faddp
xor
call
xchg
clc
decl
add
or
dec
cltd
mov
or
jno
or
dec
inc
mov
aam
testb
addr16
call
in
mov
push
or
out
or
jmp
jae
mov
test
rorb
fwait
adc
shrl
jmp
xchg
sbb
pop
bound
cmpb
mov
lock
sub
push
mov
lds
lods
adc
lcall
test
decl
sbb
pop
xchg
add
cli
mov
hlt
fnstenv
pop
mov
call
xchg
mov
mov
jge
inc
into
or
add
cmc
xor
pop
lcall
push
repz
push
clc
sub
inc
into
clc
dec
lcall
lods
jmp
imul
mov
fisubs
cmpsb
pop
insb
cmp
or
pusha
inc
iret
in
jb
pusha
cmpsl
test
mov
cmc
fcmovnb
pop
shl
adc
or
jb
stos
jle
fisubl
mov
lock
pop
or
fidivs
jl
movsb
scas
dec
cmp
cmpb
mov
lods
inc
cld
adc
dec
bound
in
sbb
push
push
add
adc
test
inc
mov
mov
sbb
add
jp
jp
jno
mov
andl
mov
mov
test
pop
fimuls
or
iret
mov
daa
nop
pop
sbb
lret
cli
add
sbbl
adc
cli
mov
mov
push
mov
adcb
pop
js
push
cwtl
lock
scas
out
pop
outsl
outsl
push
xchg
xchg
js
aas
test
stc
add
lahf
daa
into
adc
sbb
insl
mov
es
fsubrs
popf
cli
lods
hlt
add
mov
mov
jmp
fs
es
sbbb
repnz
mov
mov
xchg
iret
mov
sbb
pop
rorl
dec
mov
lea
outsl
lret
stos
xlat
mov
sbb
sub
dec
jnp
cli
mov
sti
adc
imul
clc
out
add
loopne
adc
or
fwait
mov
loop
add
xchg
scas
mov
pop
add
xchg
xor
addl
loope
mov
add
sub
cs
jo
jg
jmp
std
pushf
mov
add
and
shrl
mov
add
pop
mov
xlat
mov
add
insb
sub
xlat
icebp
and
push
cld
mov
push
mov
aaa
test
or
pop
push
movb
psllq
add
jp
test
jg
ja
das
cltd
mov
mov
subl
repnz
ljmp
mov
lcall
js
subb
dec
push
mov
mov
sbb
or
or
dec
or
cmp
hlt
add
jmp
ja
lock
das
mov
sbb
bound
mov
push
push
imul
sbb
pop
add
add
and
movsl
adc
dec
push
loopne
sub
ljmp
call
jns
mov
xchg
ljmp
mov
add
lcall
sub
adc
dec
cld
sub
lock
inc
cmp
pop
mov
in
and
lahf
cmp
jne
lock
jmp
outsb
fwait
mov
adc
adc
fsubs
mov
fdivl
sub
mov
test
or
mov
jo,pn
cmp
inc
xor
and
stc
lcall
xchg
adc
or
data16
nop
cs
in
and
lods
sti
jl
movsl
sbb
dec
jo
pop
sub
inc
outsb
call
inc
xor
inc
rolb
loope
fwait
scas
mov
or
shrb
lock
jne,pt
icebp
mov
repnz
call
xchg
push
adcb
xchg
clc
add
push
sbb
add
mov
pusha
and
ljmp
sbb
inc
push
loopne
inc
jae
inc
push
cmp
or
out
pop
call
in
adc
jne
jp
incl
jbe
mov
test
push
orl
fists
inc
cld
dec
fiaddl
and
and
and
mov
jg
dec
xchg
xchg
add
lock
std
ja
insb
cmp
xchg
add
or
cmp
dec
stos
mov
test
jo
dec
cwtl
stos
push
sbb
ja
test
fistpl
mov
and
fcoms
jmp
inc
push
iret
jle
rorb
inc
jmp
mov
scas
sub
icebp
movsb
cmp
jg
out
pop
ret
jl
add
inc
add
enter
adc
sbb
push
inc
test
out
mov
mov
fs
out
or
pop
pop
jmp
sbb
adc
ret
xchg
test
xchg
sub
jae
fwait
mov
cmp
add
mov
arpl
pushf
jp
jne
mov
inc
decl
inc
push
xchg
stc
or
dec
jmp
insb
xchg
dec
nop
bound
or
lcall
dec
cmp
movl
scas
jle
cmp
adc
push
pop
movsb
adcb
imul
mov
pop
add
jg
mov
nop
cmp
aad
cmp
enter
repz
ja
outsl
pop
sbb
push
stc
hlt
xchg
mov
add
stos
xchg
ss
icebp
daa
adc
ds
gs
add
xor
shrb
sbb
mov
lahf
inc
in
and
dec
dec
adc
push
fistps
ja
push
je
dec
dec
jl
add
nop
out
decb
dec
jge
cmpb
xor
or
call
or
test
push
repz
fldt
jns
aaa
jbe
hlt
das
repnz
out
mov
inc
movsb
out
je
ljmp
aad
mov
dec
aaa
and
mov
xor
pop
jle
mul
aaa
cld
add
add
inc
add
cld
movd
adc
sub
pop
das
inc
aaa
jle
in
loop
xor
fisttpll
push
push
bound
add
sub
mov
inc
and
mov
inc
lods
push
pop
rcrb
mov
jge
cmp
sub
or
rcll
push
fildll
mov
push
shr
out
inc
add
mov
sub
subb
add
movsl
scas
les
in
xchg
adc
bound
pusha
push
add
add
cmc
imulb
add
gs
add
add
dec
scas
dec
mov
mov
dec
insl
in
lock
xchg
scas
sub
and
inc
mov
adc
test
jmp
push
loope
inc
mov
cmp
fisttpll
ret
enter
xchg
cmp
fadds
mov
xor
and
call
or
add
inc
cld
inc
outsl
nop
fimull
xor
inc
jmp
lret
hlt
ljmp
adc
adc
pop
fs
mov
jo
ret
jne
incb
dec
sarb
xchg
mov
mov
frstor
mov
dec
int
xchg
inc
clc
pop
in
mov
jle
shl
nop
mov
sti
dec
xchg
iret
scas
test
sbb
loop
adc
inc
cmp
outsb
jo
sar
and
mov
pop
add
pop
js
sub
push
mov
push
push
aad
xchg
inc
dec
ljmp
mov
jecxz
mov
popa
xchg
fimuls
loope
call
gs
test
jmp
ja
and
or
jne
cld
clc
filds
mov
sarl
mov
push
inc
or
sub
les
sbb
out
lcall
fs
cmp
ss
inc
ljmp
call
xor
add
out
add
mov
sub
cmp
jle
fcoms
xchg
incl
dec
insb
xor
xchg
or
jg,pt
gs
and
leave
xchg
push
xor
or
sub
cmp
fimuls
sub
dec
push
and
imul
test
out
rcrb
xchg
mov
xchg
enter
dec
jmp
mov
lcall
jle
inc
clc
inc
incl
popf
adc
or
add
or
fwait
stos
ja
mov
push
hlt
fs
mov
adc
or
popf
hlt
and
cmc
insl
std
xor
or
dec
cmp
pop
in
cmpsb
shrb
in
mov
inc
lock
aaa
jecxz
pop
sub
sub
xchg
dec
jle
mov
add
stos
jp
push
inc
jp
inc
sub
xchg
std
scas
xor
inc
imul
test
inc
sub
sub
pop
add
cmp
jb
adc
dec
fcompl
xor
sub
loopne
pop
lods
pop
jecxz
fsubr
cmc
or
add
std
fisubrs
dec
mov
jl
mov
mov
push
jns
js
out
push
adc
cld
cmpsb
add
pop
sub
lods
pusha
daa
daa
jle
fucomi
jge
pop
push
jmp
popa
cmp
add
jbe
xchg
inc
fnstsw
add
mov
lret
push
cwtl
sub
lods
daa
mov
int
lock
push
add
add
repz
in
call
ret
dec
es
stos
hlt
pop
cmp
dec
and
addl
mov
inc
out
fs
mov
in
fs
test
clc
and
cwtl
cmp
fistpll
imull
dec
push
int
jns
xor
add
insb
mov
pusha
pop
jl
aaa
dec
mov
and
mov
sbb
mov
aam
adc
in
mov
decb
fiadds
xor
ficompl
cmp
ljmp
cmp
xlat
loop
jecxz
add
xlat
pop
bound
nop
mov
les
popa
mov
and
repz
lea
mov
clc
fsubs
rorl
stc
enter
adc
inc
pop
loop
bound
add
add
test
dec
mov
dec
dec
loope
push
pop
adc
incl
add
les
das
jmp
ret
push
xchg
mov
mov
psrld
mov
daa
or
jne
xchg
mov
call
aam
xchg
cmc
fbstp
add
addb
adc
notb
lds
lock
xadd
mov
out
cmpsb
cmpsb
lret
imul
test
xchg
add
mov
add
mov
cld
dec
and
in
rorb
add
and
xchg
jnp
mov
cwtl
std
add
imul
mov
mov
push
mov
mov
pop
add
bound
mov
stos
orb
inc
punpcklwd
dec
and
push
loop
rclb
pop
mov
call
push
movsl
mov
test
xor
dec
add
jo
xor
jecxz
loop,pt
or
or
outsl
mov
sbbb
cmp
lods
or
stos
add
inc
fcmove
adc
inc
sbb
xor
sbb
pop
sbb
sahf
jb
test
mov
call
ret
push
sub
ret
rolb
scas
adc
loope
sub
jnp
cltd
inc
fwait
rcrb
fld
and
repnz
call
mov
mov
lcall
hlt
adc
in
pop
in
fidivrl
fisttps
sbb
rcrl
jge
push
add
cmp
ds
mov
xchg
sub
cltd
xchg
sub
push
inc
inc
adc
mulb
cs
jmp
push
adc
inc
pop
jmp
movsl
nop
pusha
dec
mov
mov
into
outsl
dec
adc
clc
or
rcll
sub
pusha
jl
sbb
pushl
iret
xchg
inc
jecxz
xorb
movsb
out
mov
and
gs
mov
outsb
sub
jp
decl
lods
add
and
ret
add
stos
int3
loopne
pop
aam
ret
or
mov
aaa
mov
pusha
repz
ficompl
and
mov
fimull
sbb
out
sub
repz
xor
sbbl
scas
faddl
dec
lcall
clc
or
lret
test
and
cli
cmpb
jo
push
add
insl
mov
xchg
clc
or
add
mov
sti
call
sub
test
adc
mov
jg
stos
pop
enter
sbb
xchg
ret
ljmp
cld
jg
in
mov
adc
xor
sahf
sbb
loop
sbb
and
push
cs
stos
jmp
mov
jne
add
outsl
inc
dec
jl
call
cmp
iret
int3
movsb
sub
cmp
cmc
mov
fwait
mov
gs
cli
dec
std
aam
subb
sbb
ja
mov
scas
mov
lock
pop
scas
ss
pop
mov
loopne
mov
inc
lahf
mov
add
das
mov
icebp
jecxz
mul
jne
push
fiadds
jmp
shlb
jmp
sbb
loop
inc
test
ffreep
jg
inc
or
sub
aas
adc
adc
sarb
shll
cmp
xor
loope
and
rclb
push
pushf
shlb
add
adc
shlb
call
outsl
pop
lods
xchg
fcoms
inc
loopne
aas
lret
xor
sub
dec
out
add
xchg
adc
adc
and
mov
cmp
push
push
stos
stos
cmp
pop
cwtl
ret
repz
jmp
push
mov
mov
or
mov
jno
incl
xor
rolb
add
insb
jg
add
aas
outsb
rcrb
cmp
cmc
dec
shl
xor
ret
mov
imul
cmp
jae
jp
cwtl
insl
mov
out
call
sbb
inc
movsb
push
pop
insb
add
bound
pop
or
cmp
ret
push
lds
pusha
ja
adc
shr
cmpsb
gs
add
jo
out
inc
xor
inc
and
mov
sbb
insb
mov
fs
inc
enter
call
mov
push
mov
lods
jbe
pop
and
ss
rorb
ficoml
fadds
add
pop
sub
sub
push
sub
andb
push
and
push
rolb
dec
mov
jno
pop
mov
xor
test
mov
icebp
mov
aam
movsb
mov
aaa
lods
pop
cld
sub
add
sub
inc
sbb
sub
scas
push
push
cld
sub
stos
lock
test
pop
in
inc
add
lcall
mov
add
outsl
fisubl
pop
in
outsb
add
lock
das
ljmp
test
scas
or
rcr
sub
loop
es
imul
rolb
dec
lods
dec
mov
hlt
ret
sbb
inc
jo
fiadds
movsl
or
sub
stos
divb
xchg
decl
mov
pop
add
arpl
test
sub
ss
push
xor
mov
lock
rcrl
or
mov
sub
addl
pop
aaa
test
inc
push
sub
stc
aas
inc
or
sub
ss
scas
notl
imul
roll
push
shrl
rcrl
aaa
xor
cmp
movsb
insb
pop
push
add
pop
adc
int
sub
mov
inc
pop
testb
push
push
test
cld
mov
mov
imul
test
and
add
ja
inc
push
stos
dec
add
pop
mov
js
cmp
call
sarb
fiaddl
pop
bound
sbb
inc
push
mov
push
popa
adc
adc
fwait
push
sti
jg
cmp
mov
inc
add
loopne
xchg
mov
cmp
arpl
xor
clc
adc
push
inc
jno
jmp
test
dec
push
or
mov
sarl
ds
mov
push
loope
cmp
push
mov
insb
mov
adc
test
inc
out
or
inc
lods
sub
int3
mov
mov
sub
inc
js
lods
sbb
mov
mov
cmp
push
mov
xchg
sti
ret
in
cli
test
mov
jl
xchg
cltd
pop
iret
nop
adc
push
push
out
jmp
ljmp
xchg
sbb
and
stos
sbb
jecxz
aas
and
or
sub
and
pop
rcr
inc
ret
data16
jle
shl
and
das
or
repnz
push
mov
cmp
loope
cmc
cwtl
mov
insb
push
add
pop
aam
ss
push
inc
or
jecxz
pop
add
xchg
push
or
loope
les
xchg
mov
adc
iret
fdivl
test
andl
push
xor
fwait
sub
popa
stos
inc
jl
xchg
xchg
icebp
loopne
jle
and
ljmp
adc
push
enter
and
das
je
out
add
or
sbb
add
ds
xlat
cs
ret
sbb
jge
std
pop
in
mov
lahf
pop
pushf
cmp
movsb
mov
adc
push
lea
add
outsl
popf
add
sub
xchg
jl
sahf
subb
lods
push
fldl
mov
add
mov
dec
inc
xchg
dec
lcall
pop
pop
or
jmp
inc
adcl
adcb
inc
mov
sub
pushw
xchg
sub
mov
jg
movsb
jge
test
pop
cld
call
jmp
push
inc
and
mov
or
aaa
mov
adc
sub
add
dec
pop
int
mov
jecxz
xchg
pop
pushf
lcall
iret
xchg
aas
and
inc
mov
xor
nop
dec
pop
cmp
and
jae
add
js
mov
sarb
xor
popa
outsb
mov
jge
in
pushl
in
push
add
xchg
andb
or
lahf
lahf
mov
inc
mov
sbb
mov
xor
in
mov
sbb
push
mov
aas
ret
dec
aam
sub
or
loopne
push
sti
addr16
mov
loopne
cs
je
outsl
mov
lock
mov
dec
icebp
push
inc
loope
test
pop
out
sbb
lahf
test
loopne
inc
in
inc
push
cwtl
xor
pop
test
add
mov
shll
mov
ja
sub
in
dec
mov
lret
mov
ds
out
mov
push
cmpsb
out
mov
pusha
and
add
ss
jp
cmp
dec
push
jle
repnz
loopne
aaa
xor
or
mov
push
or
or
inc
mov
rcrl
dec
pop
aad
or
xchg
mov
jg
xchg
cli
int
popa
jo
dec
xchg
divb
sbb
pop
aam
shrb
leave
out
mov
pop
stos
pop
pop
mov
mov
dec
loope
popa
push
xor
shlb
lret
add
xchg
lahf
cmpsb
sbb
add
xchg
sti
and
testl
enter
xchg
sub
jae
sbbb
in
mov
push
xor
or
jo
mov
sub
mov
jmp
pop
aaa
and
ret
shlb
pop
inc
add
test
cld
push
pusha
fcomi
or
lock
adc
cmpb
les
clc
inc
add
loopne
aas
les
into
add
inc
insl
lock
test
dec
xor
rolb
mov
cs
stos
ud0
out
js
lcall
lcall
mov
sub
xchg
js
adc
push
and
or
imull
add
jmp
bound
mov
mov
inc
loopne
dec
push
loope
push
pop
stos
inc
aaa
inc
jg
sbb
add
dec
outsl
fildl
sahf
push
movsb
adc
mov
sub
or
jae
mov
dec
or
lds
push
inc
test
stos
fisttps
vmread
sub
push
sub
jo
mov
adc
sahf
jg
std
xchg
sub
cmp
mov
iret
push
bound
adc
xor
pushf
pop
and
mov
repz
jmp
test
pop
cmp
cmpl
jg
rorb
jbe
lock
bound
clc
jne
jp
push
cmovno
mov
cmp
adc
aam
inc
fwait
test
xacquire
jg
das
jo
nop
push
shlb
loope
sbb
lea
xor
cmpsb
jmp
and
or
or
adcb
cs
aad
dec
aam
sub
jg
mov
jns
lret
punpcklwd
inc
jle
add
adc
mov
inc
aaa
cld
and
ret
jmp
or
aam
nop
fdivrp
call
cld
xchg
aas
rolb
pop
shl
ds
cmc
lods
loope
daa
sub
lods
mov
mov
jns
aam
cmp
es
dec
sbb
or
adcb
lea
incl
ljmp
and
daa
test
add
lahf
xchg
sub
hlt
inc
je
fiaddl
or
mov
testb
xor
sub
add
add
xchg
sub
ss
inc
cmp
pushl
jmp
or
je
jecxz
or
pop
cs
add
fcmovnu
lea
out
xchg
and
pop
ljmp
shlb
push
fmuls
stos
dec
push
dec
std
jne
lods
jmp
frstor
and
sti
ds
ret
lock
mov
and
insl
xor
and
xchg
jnp
aaa
mov
test
sbb
inc
addl
out
mov
jb
sbb
mov
enter
inc
test
loope
dec
mov
in
add
mov
mov
incl
shrb
jo
push
out
cmp
dec
push
dec
push
push
xor
push
or
inc
scas
cmpsb
add
mov
sti
cmp
enter
and
push
cmp
lcall
pop
fidivrs
sahf
fs
incb
jbe
xchg
ror
jne
add
xor
or
call
cld
mulb
fs
cld
add
lods
aam
pop
mov
test
mov
mov
clc
sub
lret
cltd
mov
push
rorl
inc
clc
ret
outsl
repnz
mov
rcr
jmp
jmp
aam
mov
idivb
or
subb
add
in
lock
dec
sbb
pop
rcrl
sub
mov
push
cli
ja
clc
and
lcall
in
xlat
scas
cli
or
mov
or
jns
ljmp
fdivr
mov
sbb
sbb
pop
sbb
mov
mov
mov
lahf
ds
xchg
lods
into
sbb
fistps
mov
dec
aaa
andl
sub
sub
inc
int3
inc
or
inc
add
cld
add
pop
hlt
mov
repz
rcr
dec
pop
mov
pop
mov
fldl
bound
shrb
ljmp
xor
xor
add
and
mov
rorb
mov
inc
in
lock
std
mov
jbe
mov
gs
mov
sub
test
roll
hlt
sarb
pop
adc
daa
sbb
ret
pop
hlt
xor
jne
sub
add
out
jb
in
push
adc
adc
xor
ja
and
lahf
call
shl
dec
jnp
pop
mov
and
sbb
sub
inc
repnz
push
push
lret
mov
inc
lea
nop
nop
mov
cld
cmpsl
fdivs
inc
nop
ss
stos
loopne
mov
inc
out
cmpsl
pop
ljmp
sbb
pop
lcall
or
fimull
sbb
push
out
int3
iret
jg
aad
adc
mov
pop
subl
adc
jno
adc
pushf
shlb
out
cmp
cmp
fsubl
and
ds
jecxz
jno
ret
mov
mov
cwtl
cld
and
and
jns
adc
addb
aam
cmp
testb
mov
sbb
pop
mov
data16
sbb
xor
or
or
sar
lret
or
repnz
ds
subb
sbb
lret
sub
mov
inc
pop
loopne
push
add
push
mov
add
adc
std
lea
xlat
lahf
aas
popf
lret
adc
fldenv
add
clc
dec
sub
sbb
push
add
pop
cmp
and
icebp
mov
mov
mov
push
add
cmp
adc
ret
test
pop
push
dec
sub
fwait
loopne
inc
adc
add
fwait
aad
mov
les
adc
sub
cmpb
in
ljmp
lods
shlb
into
es
mov
mov
push
xor
loop
adc
les
repnz
sbb
dec
cli
fs
les
push
rorl
mov
xor
mov
adc
cld
or
in
jg
insb
adc
imul
adc
lcall
loope
or
sub
clc
dec
mov
inc
iret
pop
icebp
adc
repz
sub
xor
jmp
cld
lahf
dec
je
pop
jge
js
je
stos
mov
mov
hlt
xor
cmpsl
roll
mov
jmp
mov
xor
test
sbb
xor
cmp
in
movsb
mov
daa
adc
mov
fisttps
hlt
dec
scas
stos
movsb
push
add
je
call
inc
push
int3
jmp
xor
mov
jae
pop
test
add
pop
xchg
es
jg
hlt
sbb
inc
sub
daa
faddl
xchg
inc
scas
pop
test
adc
sbb
pusha
or
dec
mov
orl
pop
int3
arpl
sbb
pushf
iret
test
outsb
movsl
mov
cli
int
in
lcall
test
ret
mov
pop
xadd
mov
loopne
in
int
push
mov
xor
jmp
fistpll
dec
pop
mov
push
repnz
jmp
testl
jle
mov
mov
inc
and
push
fstpl
push
mov
add
mov
icebp
mov
in
cmc
add
pushf
sub
jge
add
pushf
add
sub
ret
push
test
es
push
pop
fdiv
jno
fwait
lods
mov
mov
fcompl
mov
push
and
movsb
inc
andb
ror
xor
in
fstp
dec
loopne
or
roll
rcrl
jg
cmp
lea
inc
adc
mov
nop
decl
sar
push
lret
mov
xchg
lahf
xorl
sarl
ret
cmp
icebp
mov
inc
out
and
pusha
jge
xchg
sbbb
dec
fstps
out
or
out
daa
test
or
pop
sub
push
outsl
cmp
add
out
gs
lcall
repz
mov
push
test
ljmp
ljmp
jae
add
cli
inc
mov
mov
out
fsubs
es
subb
push
or
pop
stos
stos
xlat
iret
and
sbb
lret
add
decl
sub
push
mov
jns
mov
mov
mulb
mov
mov
fidivrl
movsb
fdivr
xchg
inc
js
jae
cwtl
fisttpll
mov
pop
cli
scas
xchg
sub
lock
cli
add
adc
jl
popa
roll
ljmp
lock
add
cmpsb
clc
out
push
int3
pop
loopne
and
es
jecxz
push
sbb
adc
pop
sub
mov
std
inc
sub
ret
sbb
ljmp
pop
dec
mov
jmp
pusha
movsl
dec
js
mov
mov
sbb
fists
cmp
bound
mov
xchg
fiaddl
pop
mov
loopne
test
out
fcom
jp
test
push
shrl
loopne
and
mov
fidivl
inc
jl
inc
push
test
push
fprem
push
test
inc
mov
adc
sarl
jg
mov
icebp
outsb
xchg
sbb
insb
add
add
add
lcall
arpl
adc
in
sbb
add
out
mov
stos
jo
mov
dec
mov
jg
dec
dec
xlat
mov
scas
or
out
ret
xor
cld
cld
outsl
mov
movsb
or
push
and
movl
push
adc
popa
es
pusha
push
out
push
mov
adc
rorb
fwait
leave
into
jge
insb
mov
sar
repnz
std
add
divb
adc
pop
jnp
sub
inc
outsl
movsb
sub
nop
movsl
loop
adc
rolb
nop
cld
movsb
cmp
push
add
cltd
mov
push
pop
and
add
loop
jno
cmp
sbb
cmp
cmpsb
mov
fisubl
mov
xor
push
xlat
aad
loop
mov
jge
ljmp
andb
add
add
testl
call
mov
test
mov
sbb
pop
aad
sub
test
cld
dec
scas
loop
jbe
aam
or
pop
shll
push
cmp
lods
pop
inc
xchg
aad
sarb
rclb
xchg
mov
push
mov
sub
mov
push
jl
jg
xchg
movsl
jg
and
add
jg
pusha
rcl
cli
lcall
sbb
js
pop
movsl
repnz
sub
add
xor
jg
sub
dec
enter
loopne
sub
daa
jecxz
mov
xchg
sti
mov
stos
lcall
cmpsb
add
ds
cmp
filds
gs
pop
push
add
adcb
int3
mov
or
cmc
xchg
add
mov
and
movsb
add
cmp
or
inc
fcmovb
or
push
or
imul
loop
lds
je
dec
inc
dec
call
and
mov
cmpsb
adc
mov
int3
test
out
rclb
jnp
in
fildl
rolb
addr16
or
imul
std
sbb
inc
cs
push
pushf
fcomps
fcmovnb
in
cmpsl
mov
roll
bound
inc
cmp
mov
mov
cmpsl
or
push
fcomps
mov
lcall
xchg
mov
add
fs
mov
and
sbb
xchg
je
les
pop
jge
mov
push
out
inc
popf
arpl
xor
aaa
std
jg
rcrl
xchg
sbb
jbe
dec
or
clc
xchg
in
lds
ja
mov
mov
mov
ret
sub
jge
dec
push
fs
pop
cmpsb
and
mov
hlt
scas
push
add
pop
jge
jle
inc
add
mov
cli
jg
pop
cld
test
cmp
jecxz
mov
loop
cmp
pusha
je
pop
icebp
shlb
addr16
sahf
je,pt
test
hlt
outsb
mov
push
adc
orb
jg
gs
and
shr
jns
jnp
jp
stc
je
orb
inc
out
sub
xlat
cmp
and
sub
test
clc
xchg
sbb
call
mov
orb
xor
rcll
leave
push
push
pop
push
mov
dec
cwtl
nop
push
push
pop
jle
fs
loopne
cwtl
dec
lahf
rclb
enter
mov
daa
pop
stc
jbe
shl
push
xchg
rcrb
fidivrs
pop
dec
sbb
ret
test
sbb
int3
aad
lret
or
cmp
sub
cmp
loop
xchg
xchg
push
mov
sarb
jl
or
fidivs
in
out
add
adc
sub
sbb
ret
addr16
xchg
mov
mov
adc
iret
and
jl
cltd
mov
or
fcmovb
or
and
clc
xchg
pop
jae
pop
rclb
fistpl
jb
inc
adc
add
jle
cmp
in
and
cmp
jg
loop
movsb
pop
jo
lahf
xchg
adc
mov
bound
pop
test
insb
mov
clc
or
ret
fsubrs
mov
add
aad
ja
call
mov
mov
or
or
out
clc
fistps
nop
movsl
loope
repnz
rcll
adc
loop
push
add
dec
xchg
sbb
jo
cmp
stos
dec
push
in
outsb
mov
dec
inc
cltd
je
sub
xchg
xchg
or
cmp
jg
sbb
push
icebp
add
inc
push
mov
rcr
push
fidivl
cmpsb
es
cwtl
outsl
ljmp
cs
cmp
xchg
xchg
cltd
push
ja
jo
faddl
jecxz
scas
push
mov
cmpsb
mov
jmp
add
aad
sbb
add
jb
add
mov
or
adc
es
dec
add
dec
scas
lcall
or
les
adc
sahf
je
inc
add
xor
mov
mov
ret
mov
mov
add
cmp
add
dec
inc
ss
lods
inc
icebp
orb
mov
cmpsb
insl
sti
repz
and
inc
sar
xchg
cmp
cmpsb
or
add
mov
jb
xchg
popa
scas
adc
push
lds
pop
cli
xor
mov
mov
xchg
xor
insl
rorb
stos
icebp
sub
ficomps
arpl
sbb
cmc
inc
add
pop
mov
inc
fsubs
iret
and
notb
loop
adc
pop
push
push
daa
xchg
or
stos
aam
stos
sub
jge
hlt
movsb
insl
inc
xchg
imul
mov
test
in
cld
sbb
or
push
pusha
xchg
jle
in
push
loope
aam
data16
push
xchg
push
sbb
lret
sub
jmp
stos
mov
andl
shll
push
cmpsb
repnz
fs
xor
add
adc
xor
pop
adc
or
js
pop
fsubr
enter
xchg
aad
mov
mov
push
stc
pop
jb
push
sbb
fadds
jl
cmp
fdivs
adc
mov
orb
xchg
jle
mov
scas
stos
push
inc
cmp
imul
mov
adc
jo
outsl
xor
mov
aaa
jl
movsl
lahf
pop
inc
clc
insb
xlat
and
ror
nopl
push
stos
sbb
sti
add
push
xor
lret
cld
mov
mov
sub
aad
dec
fs
ret
inc
adc
arpl
loope
cmp
mov
data16
and
adc
adc
dec
and
aas
test
jg
inc
mov
xor
rcrb
and
add
fistpl
fbstp
mov
fistl
sub
fildl
hlt
sbb
shrb
xor
dec
mov
fildll
js
ss
ret
mov
mov
inc
rcrb
add
outsl
dec
setge
mov
jno
jge
cs
add
sbb
jle
mov
into
pop
mov
cmp
inc
push
dec
sbb
xor
popa
and
mov
shrd
jo
packsswb
std
add
ror
fcmovu
insl
mov
pop
cltd
adc
dec
add
shrl
pop
push
push
rcrb
or
rorb
loop
in
lahf
lea
into
push
fwait
pop
mov
jnp
leave
or
cmp
icebp
test
jns
hlt
rolb
fcompl
fcmove
pop
out
sbb
jg
pop
mov
das
loope
push
sub
or
dec
xor
jl
mov
adc
sub
add
int3
fnstsw
xor
lods
jb
pop
add
xchg
mov
push
xor
jecxz
lock
loop
sbb
cmp
inc
xchg
stc
pop
jmp
inc
pop
cli
std
mov
js
popf
int3
jp
pop
insb
fsubrp
cmpsl
mov
aaa
cmp
ds
ljmp
add
popf
and
sub
push
test
xchg
add
lahf
jle
cmp
rol
enter
in
fs
shll
dec
add
bound
jp
shl
addr16
inc
and
adc
fcompl
inc
adc
mov
adc
sbb
gs
andb
mov
or
mov
inc
and
mov
mov
sub
and
jecxz
loope
push
imul
sub
hlt
test
into
push
hlt
jg
sbb
mov
int
aam
cli
push
sub
out
or
je
and
in
jecxz
fisubl
xor
les
call
mov
ret
lock
push
sarb
stos
stos
push
movsl
inc
test
jno
das
enter
arpl
dec
bound
cmp
fstpt
push
fisubrs
fisubs
jne
loopne
and
in
mov
clc
lcall
mov
xchg
xor
in
lret
adc
in
jns
or
sub
mov
imul
pushf
fcomp
jo
mov
ficompl
icebp
add
ljmp
mov
inc
or
jle
pop
filds
js
add
push
movsl
pusha
jge
cmp
push
loopne
scas
mov
dec
lcall
xchg
jle
cs
xlat
fsts
mov
xchg
in
or
scas
clc
mov
adc
ss
adc
ret
push
add
xchg
les
shll
orl
int3
mov
repz
dec
sahf
push
or
loope
dec
and
insb
add
stos
shl
incl
or
dec
int
std
mov
jns
inc
adc
cs
mov
bound
sbb
fistpll
mov
enter
xor
scas
mov
cmpb
cmp
push
jne
scas
bound
fadds
fsubrl
pop
mov
sbb
shl
lcall
or
inc
or
pop
stos
cmp
adc
cmc
shll
in
test
and
faddl
cmpb
mov
pop
push
adc
mov
lcall
or
hlt
ss
lock
and
add
jno
inc
mov
cld
ret
fimull
jp
add
lret
rcl
xor
pop
cmpsb
xor
call
ds
sbbb
cmp
mov
jo
inc
push
fcoml
adc
in
mov
xchg
push
and
sub
adc
ret
lock
lods
adc
sbb
std
push
fst
mov
add
mov
sbb
inc
lock
xor
test
les
loope
icebp
inc
mov
pop
cmp
mov
icebp
enter
out
mov
pop
loope
in
mov
push
or
je
fwait
leave
subb
aad
mov
lock
dec
and
pop
das
jle
jge
inc
xchg
mov
cmp
arpl
int
jle
bound
jecxz
mov
mov
add
and
icebp
fbld
mov
inc
pop
cmpsb
add
in
sbb
aaa
jp
incb
cmc
shll
rcll
adc
std
or
or
and
or
cmp
pop
sbb
leave
jmp
mov
or
aaa
jns
mov
int
push
out
out
ror
ficoms
movsl
aas
inc
ficompl
or
aaa
lcall
lds
pop
cmpsb
jl
xchg
dec
push
test
nop
lahf
clc
jb
add
add
outsl
push
add
je
and
icebp
sub
in
pop
lods
gs
inc
shll
jl
mov
dec
popa
pop
mov
mov
mov
mov
sahf
mov
mov
and
ljmp
and
push
mov
mov
ja
jmp
fcmovne
adc
subb
aaa
xchg
inc
mov
sbb
or
pop
mov
cli
lret
shll
sbb
add
shr
xchg
js
fcomip
das
jo
pusha
cli
cld
sbb
bound
add
psubsb
mov
pop
aad
lret
ljmp
adc
scas
pushf
daa
jns
in
pop
sub
pusha
lret
lcall
lods
add
adc
ffree
jmp
fsubs
ret
insb
sbb
in
dec
jg
ljmp
sbb
mov
jmp
stc
add
cli
inc
test
adcb
inc
cmp
testl
divb
fwait
das
push
adc
or
std
int3
mov
cmp
rcrb
or
sub
clc
dec
inc
cmp
divb
add
push
pusha
cmp
sbb
lock
cmp
clc
mov
pop
test
fimuls
test
repz
out
xchg
mov
int
mov
fidivrs
loopne
cmpsl
pop
push
pop
ds
dec
daa
rcrb
rolb
cld
shlb
aam
shrb
inc
push
mov
pushl
js
fisubs
jl
inc
jno
jp
cmc
or
xchg
add
aad
je
pop
dec
scas
repz
push
aas
xor
fisubl
rorb
arpl
scas
mov
mov
test
jp
in
xchg
cmp
pop
jne
dec
mov
mov
lret
push
push
insl
clc
es
cld
add
fcmovu
cwtl
nop
gs
cmp
pusha
jnp
xor
push
rcll
mov
adc
je
es
push
ror
cmpsl
dec
inc
add
push
enter
jg
cmp
pop
pushf
sbb
cwtl
and
mov
add
inc
addr16
pop
mov
stc
add
cmp
dec
or
mov
in
scas
push
dec
sub
mov
insb
aad
jecxz
push
xlat
int
ss
xor
add
mov
lds
pop
into
dec
fs
testb
push
push
sbb
inc
jbe
loopw
mov
dec
push
add
mov
aam
mov
lock
rcll
daa
call
sbb
mov
push
xor
pop
nop
adc
xchg
jnp
and
sbb
and
es
mov
xchg
les
or
sub
shr
lods
cld
outsl
outsb
inc
add
ljmp
xor
bound
fidivrl
fiaddl
jl
inc
xchg
add
cmp
dec
add
ret
rcrb
dec
inc
lret
sbbb
call
and
push
aam
push
lea
aaa
pop
pop
mov
pop
jbe
cmp
incl
add
lods
repz
enter
filds
insl
cmp
pop
xlat
sbb
ljmp
add
mov
xor
inc
xor
mov
int
jne
pop
inc
aaa
fdivs
push
movsl
xchg
incb
pop
sub
mov
fs
mov
jmp
repz
insl
jp
sub
jae
add
in
jg
cld
bound
add
add
adcb
mov
push
rcl
ljmp
insb
xchg
js
mov
inc
and
add
xor
or
xchg
pop
add
push
pop
and
adc
das
xor
shll
test
cmp
jo
pop
jns
add
outsl
incl
cmpsb
test
inc
mov
push
push
and
sbb
mov
adc
inc
cld
sub
jno
ret
aas
scas
ficompl
dec
push
jp
dec
clc
insl
or
inc
pop
mov
xor
roll
dec
add
inc
cld
rolb
dec
cmpsl
mov
adc
cld
jg
mov
jns
fcompl
lds
lcall
icebp
les
mov
mov
subl
xchg
cmc
jb
add
xchg
cmc
or
pop
pop
cmc
fcmovnbe
or
xor
inc
xchg
dec
pop
jecxz
xchg
dec
sbb
or
mov
fisttps
dec
pushf
dec
mov
xlat
leave
cmpb
mov
xor
aas
insb
cs
mov
cmp
dec
jbe
aam
xchg
jecxz
test
fcomi
mov
aaa
inc
mov
sub
pop
mov
cld
mov
xchg
and
popf
jl
inc
xchg
mov
test
xor
ss
call
sahf
aam
repz
loopne
xchg
out
xlat
push
cs
cmp
sbb
ja
scas
and
pop
cmp
stos
adc
invd
push
andl
fldl
test
jle
and
push
mov
xlat
and
enter
xlat
dec
xchg
jno
gs
xchg
mov
adc
and
adc
and
cmp
and
mov
out
pop
jbe
jno
jp
lds
repnz
add
and
jl
pop
or
pop
test
out
std
xlat
incl
aas
and
xor
ret
insl
lret
xchg
xorb
push
adc
enter
or
movsl
hlt
mov
add
pop
jecxz
das
lea
cld
shr
push
or
in
push
xlat
mov
insb
jl
fidivrs
push
scas
cmpl
or
adc
aaa
or
push
into
je
or
xchg
push
aaa
sahf
add
in
adc
xchg
mov
mov
popa
or
icebp
pop
data16
loope
andb
or
rcll
mov
out
cmpsb
in
sbb
mov
or
shrb
scas
shr
cmpsl
test
cmp
cmp
icebp
xor
add
and
lcall
sbb
and
dec
push
rolb
stos
sub
adc
jb
add
mov
pop
fisubl
push
xchg
dec
jno
fadd
mov
mov
inc
xor
xor
add
fs
out
in
jp
add
xchg
xor
movsb
pop
cmp
and
loopne
adc
push
sub
add
test
orb
mov
jp
or
addr16
xor
mov
sub
mov
jmp
sub
pop
and
inc
and
ficoml
call
fbld
or
and
jne
popa
sarb
in
mov
mov
add
ficoms
sub
dec
add
es
or
outsb
int
stos
roll
add
cmp
cmp
pop
and
cmc
lods
aam
push
es
dec
jnp
jb
dec
mov
pop
and
mov
mov
sub
pop
sub
out
mov
pop
dec
mov
xchg
mov
xchg
popa
in
nop
rcr
testb
cmp
inc
dec
popa
adc
into
loopne
jg
hlt
dec
adc
dec
cli
sbb
inc
add
and
add
loop
aad
lock
jmp
push
out
movsb
stos
insl
push
pop
push
push
jge
mov
in
jo
lret
add
xor
inc
xchg
cli
sbb
loopne
loopne
cmp
inc
or
mov
sub
or
cwtl
test
push
lds
je
push
notb
sub
aam
insl
pop
lods
popf
pop
das
mov
sub
push
jp
push
xchg
cld
sub
lods
jno
lret
push
scas
pop
push
ficoml
cli
psrlw
icebp
dec
pop
xchg
rorb
mov
fs
sbb
mov
hlt
add
stc
add
xchg
add
orb
sbb
push
pop
arpl
jl
jl
inc
add
or
popa
or
push
scas
loope
stos
int3
adcb
fsts
out
and
sbb
add
xchg
jb
shrd
jo
fdivr
movsl
jmp
cld
out
jecxz
dec
cwtl
scas
in
add
lock
and
dec
fwait
mov
push
pop
negb
sbb
iret
fisubl
inc
adc
jmp
jmp
loope
adc
jb
sub
sbb
jl
inc
mov
notb
cltd
outsb
ss
push
push
sahf
and
mov
rcll
mov
mov
pop
ret
mov
js
movsb
ds
mov
and
out
insl
aam
nop
ret
xlat
dec
js
lock
fs
push
sub
xchg
jge
pop
aad
pushf
or
enter
lret
iret
repnz
test
jb
xchg
test
hlt
test
inc
popa
mov
int
jp
ret
out
lods
bound
dec
out
sbbb
adcb
push
add
jg
idivb
insl
push
sbb
cld
mov
inc
pop
dec
hlt
inc
leave
push
decl
mov
or
fmull
lds
sub
movsb
inc
sub
outsb
mov
add
push
xor
ja
inc
jae
icebp
cld
jae
pop
inc
pop
lahf
incl
rorl
cmp
push
fstps
aam
data16
or
or
icebp
jecxz
add
mov
jl
rcrb
repnz
rdmsr
xstore-rng
cmpsl
add
outsb
js
lahf
mov
or
jp
mov
out
adc
pop
or
sub
rcrb
and
sbb
std
bndstx
pop
jp
jmp
rorl
or
adc
push
fistpl
movsl
stos
mov
cmp
lret
sub
je,pn
mov
mov
xchg
pop
shll
into
shll
aaa
inc
dec
cmpsb
clc
xchg
shl
cli
and
xchg
pop
clc
mov
inc
sbb
test
cmpsb
insb
cli
pop
incl
dec
push
cmc
sub
pop
jne
add
les
mov
mov
adc
add
sarb
and
cli
fcomip
mov
mov
les
add
push
add
xchg
nop
xchg
cmc
mov
adcl
mov
and
in
je
and
ss
cs
dec
enter
daa
inc
cmp
or
jmp
in
jbe
sahf
es
inc
push
ljmp
aaa
mov
fld
xchg
arpl
arpl
lock
or
test
xor
inc
or
push
xor
js
mov
mov
addb
std
outsl
xor
je
inc
jo
mov
repz
stos
sar
xchg
adc
jb
and
fldcw
or
or
cs
loop
xor
aam
ror
into
je
jbe
pop
call
jl
fsubl
aas
jl
jg
ja
in
ljmp
push
sub
aad
test
mov
sbbb
call
daa
lds
xchg
jno
push
jp
popl
decb
pop
mov
and
arpl
dec
push
aad
sub
addr16
or
jecxz
in
cmp
and
sub
push
jl
pop
lret
mov
add
jo
mov
or
iret
sbb
fldcw
push
xchg
mov
xchg
push
stc
add
mov
je
adc
mov
stos
push
jl
adc
mov
in
sub
insl
mov
int3
decl
add
sbb
fisttpl
test
sub
cmpsb
or
mov
sbb
pusha
aam
or
insl
xor
cmc
pushl
xor
cmc
inc
mov
cmp
inc
lea
imull
push
std
sbb
inc
add
dec
sub
xor
push
sbb
add
test
sub
or
in
ffreep
gs
push
sub
pop
in
sbb
inc
sbb
mov
mov
push
mov
xchg
icebp
mov
add
in
jne
movsl
les
mov
inc
out
lds
push
sbb
push
leave
sbb
lock
inc
add
stos
cmp
mov
adc
dec
daa
mov
mov
jecxz
insl
int3
ljmp
add
push
inc
cmp
pop
mov
push
mov
push
out
push
clc
pop
add
jg
pusha
xchg
add
jo
gs
xchg
add
pop
lcall
push
mov
pop
sub
imul
or
test
cmp
dec
mov
cld
mov
flds
mov
lock
pop
fimull
jns
cmpsb
pop
stc
fstpl
call
mov
lods
jp
sub
jmp
inc
stc
addl
repnz
scas
inc
mov
add
dec
jle
decb
aas
loopne
push
cmpsb
dec
aad
scas
adc
xchg
adc
add
fstpl
dec
mov
test
sbb
adc
out
cwtl
stos
lea
out
loop
into
add
jg
adc
push
push
push
clc
xor
loop
call
xor
push
xchg
sub
cltd
jbe
ljmp
and
xchg
loopne
hlt
subb
nop
xchg
lea
push
jo
fnsave
rcrl
mov
or
inc
cmp
incl
jns
call
icebp
pop
sub
in
sbb
cmp
scas
mov
incb
ljmp
cld
xor
insb
pop
add
sbb
loope
ljmp
dec
push
xor
sbb
adc
js
mov
int3
loopne
jecxz
imul
adc
in
out
xor
jae
lds
outsl
adc
or
orb
and
cmp
cmp
cmpsb
pushl
xlat
push
and
adc
xlat
adc
iret
mov
pop
inc
or
add
and
cmp
xor
divb
add
sub
adc
aas
cli
push
jnp
jle
fisubrs
pop
add
rorb
dec
fcomps
dec
push
inc
lock
enter
or
push
mov
movsb
fs
out
sahf
mov
jg
mov
push
ret
movsb
adc
shll
push
dec
sbb
or
imul
sbb
adc
sbb
xchg
or
adc
je
dec
in
sbb
pop
icebp
arpl
outsb
repz
and
jg
pop
cmp
fmull
out
mov
test
inc
clc
jl
cmc
std
insb
outsl
lock
mov
jle
inc
outsl
outsb
pop
cmp
pop
das
js
fadd
rcll
mov
repz
fsubs
test
dec
call
ror
mov
cmp
or
mov
sub
outsl
test
cld
pop
sar
js
mov
cmp
cmp
adc
scas
dec
filds
and
imul
das
loopne
inc
push
dec
add
sbb
std
sbb
mov
fcomps
add
mov
cmpb
pushf
dec
or
xor
mov
mov
dec
lcall
inc
push
jnp
andb
sbb
call
push
lret
or
mov
scas
idivb
push
sub
mov
and
inc
add
push
sbb
adc
add
scas
jae
add
pop
std
dec
xor
push
mov
xor
test
sub
pop
icebp
pop
jbe
inc
call
sub
push
xor
call
les
fwait
add
xchg
xchg
push
inc
cld
add
fldln2
sbb
or
in
or
sarl
hlt
es
mov
xchg
aas
sub
xor
jecxz
push
daa
push
mov
je
mov
push
adc
sub
out
add
or
test
int3
ja
cs
ljmp
mov
lock
mov
cli
pop
mov
sub
sbb
movsb
inc
add
idiv
and
sbb
xchg
push
ret
add
and
xor
scas
dec
lock
sub
lret
mov
es
jns
jb
mov
sbb
sub
lock
addr16
int
ds
jnp
icebp
jmp
inc
incl
xor
cmp
jg
icebp
aas
push
mov
inc
mov
and
fnstenv
lahf
add
mov
test
int3
adc
inc
aad
pop
bound
push
lret
cli
sub
aam
ficompl
push
in
add
cmp
enter
mov
popf
adc
dec
dec
adc
fs
rclb
dec
mov
sbb
or
fsubs
or
or
daa
call
outsb
notb
add
or
test
sub
jne
out
add
clc
stos
jbe
sub
push
mov
ret
jmp
shrl
incb
out
ret
rcrl
pop
outsb
lock
pusha
mov
incl
fwait
shlb
sbb
sub
add
pop
adc
inc
ja
cmp
adcl
lcall
out
add
shlb
call
shll
popf
lods
loopne
xlat
clc
cmp
mov
sarb
test
xchg
in
adc
hlt
sar
cltd
xor
movb
rolb
jecxz
xor
test
xor
jle
xchg
jne
xchg
imul
add
xor
outsb
or
or
xchg
ss
insb
mov
loopne
push
mov
push
idivl
aas
popa
sbb
lock
mov
cli
inc
incb
add
inc
lcall
or
mov
clc
lods
sbbl
daa
lock
jmp
cli
jl
add
out
shrl
pop
push
pop
mov
sarb
aaa
nop
pop
xlat
sbb
shrl
mov
stos
mov
jno
ret
mov
mov
mov
mov
adc
push
sub
add
and
loopne
jecxz
lods
jae
imul
lock
xor
clc
das
mov
mov
shll
push
icebp
mov
loopne
scas
call
orb
jge
add
xchg
adc
add
jmp
mov
nop
aad
jl
pop
fbstp
lcall
pushf
and
mov
mov
jecxz
push
sub
adc
daa
les
sbb
and
int3
mov
out
adc
xchg
aad
test
das
dec
mov
sbb
idiv
mov
add
dec
push
repz
xchg
aam
jg
js
int3
daa
fiadds
imull
and
dec
stos
std
call
xchg
cli
jle
mov
mov
dec
and
mov
daa
sbb
stos
out
sbb
pop
sub
insb
xchg
push
sbbl
cld
sub
pop
mov
and
pop
inc
push
repnz
gs
mov
dec
lods
incl
pop
mov
cmp
jbe
loope
push
iret
in
mov
inc
lret
leave
out
clc
hlt
in
jl
decl
xor
sbb
popa
xchg
sub
sub
sbb
and
mov
in
pushf
jle
leave
or
add
mov
inc
loopne
inc
jbe
fiaddl
and
mov
lods
add
inc
push
jl
push
inc
shll
dec
cmc
jne
aaa
insl
sbb
sbb
clc
cmp
iret
inc
std
mov
sbb
xor
mov
xchg
lods
dec
cs
test
sar
sub
inc
mov
in
xlat
add
push
cld
mov
add
add
jecxz
sbb
adc
jp
sarb
es
or
cs
lahf
jo
sub
call
aam
adc
mov
jno
mov
filds
add
comiss
xor
xor
dec
pop
dec
fwait
aam
fisttpll
push
popa
daa
dec
cmpb
add
jecxz
insb
xchg
push
sub
adc
xor
int
mov
or
mov
ds
movsb
add
clc
shrl
adc
insl
mov
fisubs
ds
mov
or
int3
pop
lcall
dec
push
fs
add
js
xor
push
xchg
das
push
mov
add
add
push
push
sbb
ror
sub
sub
mov
cltd
roll
jg
aam
pop
inc
xchg
arpl
jg
push
jmp
icebp
inc
jl
mov
lahf
clc
outsl
push
add
jp
bound
icebp
jo
int3
scas
add
jl
cld
sarb
test
add
mov
aam
add
and
mov
xor
or
shrl
ljmp
sbb
cmp
ljmp
pop
ds
and
test
pop
mov
xor
xor
add
dec
xor
mov
out
xchg
pop
mov
jge
and
pop
inc
sbb
call
pop
or
mov
pusha
dec
add
out
xor
or
xor
jb
mov
aas
pop
dec
jecxz
xorl
clc
jg
rorb
mov
inc
js
enter
loope
dec
loope
das
sarb
pop
add
mov
daa
cmp
sub
ss
pop
xchg
test
adcl
mov
cmpsl
arpl
ror
mov
test
jne
add
cmp
adc
out
jp
push
cwtl
inc
cmp
popa
mov
cld
hlt
cmp
dec
mov
fcompl
push
lcall
mov
scas
out
cld
mov
imul
outsb
mov
cmp
inc
xchg
inc
mulb
mov
pop
mov
out
dec
adc
xchg
xchg
pop
mov
shlb
pop
cmpb
inc
push
in
mov
test
adc
mov
adc
sub
add
movsl
rcll
not
inc
inc
test
jbe
mov
pop
loopne
lock
sub
data16
ret
xchg
add
insl
push
icebp
pop
lds
push
adc
popa
push
in
push
sub
xchg
sbb
pusha
mov
or
cmc
add
xchg
inc
cmp
sbb
icebp
outsl
loopne
cmp
xchg
pusha
sub
loopne
lock
mov
and
xchg
sub
mov
xor
hlt
jns
add
cli
or
ss
mov
xor
add
xlat
cmc
pop
sbb
inc
xor
adc
js
sahf
inc
mov
adc
jp
inc
inc
clc
data16
loope
lock
push
dec
mov
pop
push
inc
int3
dec
dec
cli
lea
mov
les
stos
icebp
mov
and
mov
ret
loope
scas
pop
fldl
jbe
inc
mov
imul
xor
mov
or
ds
cld
enter
cli
pop
insb
sub
mov
movsb
ret
stos
mov
in
movsl
lods
outsl
push
shr
sahf
adc
push
jl
sbb
les
ljmp
pop
hlt
repz
adc
mov
xor
inc
mov
xchg
adc
fisubrs
clc
and
and
sahf
lock
or
or
dec
pop
cmpl
jecxz
outsb
dec
popa
test
xchg
scas
mov
arpl
lcall
out
adc
arpl
insl
sbb
loope
aaa
cs
and
xchg
out
and
std
adc
xor
mov
push
push
push
repz
cli
ljmp
loop
fdivr
je
inc
enter
mov
cmpsb
les
adc
pushf
inc
pop
pop
push
cld
call
add
in
inc
mov
inc
cmp
adc
adc
adc
xchg
mov
stos
cmc
mov
test
add
pop
in
sbb
cmp
shr
pop
inc
pushf
movsb
aas
xor
push
sub
or
lret
mov
push
shrl
test
pop
iret
pop
mov
pop
js
pop
push
test
push
sbb
cmp
icebp
aas
rolb
aam
adc
sub
push
cs
fiaddl
push
cmpsb
mov
mov
push
dec
loopne
clc
sarl
mov
jg
push
xor
stos
jbe
push
pop
fsubs
shl
fs
jmp
cmovns
and
mov
lret
mov
test
cld
movsb
add
hlt
mov
adcl
inc
aas
hlt
xchg
movsl
and
mov
sub
dec
jb
mov
xchg
add
nop
mov
pop
test
adc
mov
adc
mov
dec
decl
scas
dec
mov
push
icebp
lcall
in
sbb
add
jle
xchg
adc
pop
inc
cli
mov
test
cld
aas
aad
out
imul
and
arpl
xchg
xor
add
xchg
aam
mov
pop
push
xchg
mov
xor
sub
add
pop
or
mov
adc
push
lahf
adc
jo
sti
and
add
adc
movsb
dec
mov
movsl
outsb
mov
cmp
jle
inc
dec
jo
dec
loope
push
jno
mov
mov
and
insb
lods
xchg
cmpsb
dec
or
xor
popa
cld
mov
xlat
int3
adc
and
ljmp
mov
les
adc
daa
inc
insb
movsb
lock
dec
adc
dec
cmp
xor
or
inc
inc
lock
adc
fwait
lock
hlt
pop
dec
lods
jle
fs
das
xchg
push
call
push
hlt
dec
stos
roll
dec
in
aas
lret
cli
jp
xchg
sbb
loopne
jl
dec
and
shll
mov
and
ss
mov
pop
rcrb
adcb
or
sub
bound
sub
ret
pop
fldl
pop
addl
adcl
sub
adc
inc
lret
aad
push
lods
xor
pop
imul
lcall
dec
fstpt
mov
bound
cmpsl
lock
sub
cwtl
scas
xor
out
mov
in
rcll
icebp
push
jo
or
loope
cmp
ljmp
inc
and
in
andb
pop
nop
loopne
mov
fwait
push
ds
imul
cs
push
add
and
mov
sbb
insb
add
mov
imul
xchg
add
scas
jle
dec
xchg
add
mov
lcall
push
push
dec
les
in
pop
addr16
sbb
dec
add
jns
cs
rcrl
jg
adc
mov
push
cmp
or
out
cmp
pop
inc
push
sub
ret
pop
aaa
pop
sahf
rcrb
test
sbb
mov
mov
out
dec
or
jmp
iret
add
inc
cmpl
stos
push
fsubs
dec
xchg
xor
loop
add
add
fnstenv
cld
pop
cmc
jbe
pop
scas
imul
cs
daa
inc
mov
mov
aas
mov
jmp
add
popf
pop
inc
pop
outsl
arpl
dec
cmpl
addr16
imul
je
js
addr16
cmp
inc
lcall
ret
nop
sbb
shlb
mov
shll
mov
xor
cmc
lahf
mov
mov
dec
adc
or
pop
cld
pop
mov
dec
mov
shrb
xor
dec
incl
xchg
inc
enter
fsubrs
je
outsb
xchg
cmp
pushf
sbb
movsb
mov
ds
fwait
loope
pop
sub
outsl
sbb
jecxz
in
jg
adc
add
arpl
inc
inc
shr
movsb
mov
sbb
add
mov
and
stos
jecxz
call
out
fsubs
movsl
xchg
test
push
hlt
xor
cmpsb
icebp
push
sbb
adc
push
jne
test
inc
and
push
cmp
aas
push
fimuls
and
pop
push
cli
xchg
enter
add
sub
dec
ret
sub
and
push
pusha
addr16
loopne
inc
cld
and
adc
cs
sbb
sub
mov
test
ljmp
jb
dec
andb
mov
clc
pushl
imul
iret
xchg
xchg
aad
pop
sub
hlt
inc
call
cs
xor
mov
stc
inc
ret
push
clc
add
int3
fwait
jo
aas
stos
shl
out
rolb
push
pop
daa
testl
push
pop
pop
push
pop
push
clc
adc
addl
and
mov
cmp
mov
push
xchg
xchg
hlt
pop
outsb
cmp
lock
or
call
in
jo
add
mov
pop
loop,pt
mov
xor
addr16
sub
push
nop
mov
je
stos
mov
mov
and
shrl
out
cmp
mov
lods
fwait
sub
ror
imul
outsb
push
rolb
sub
mov
push
int
push
in
sahf
fs
fldenv
push
inc
xor
movsl
decl
push
push
in
xor
pop
out
test
fcomip
push
ret
mov
sbb
sbb
dec
decl
add
insb
inc
cmpsl
sub
lea
or
pop
mov
mov
call
sbb
add
dec
mov
aas
enter
sub
and
lock
pusha
inc
clc
outsl
adc
sbb
sbbb
mov
cmpsl
movsb
incb
or
adc
lcall
js
cld
insl
in
push
sbb
aam
push
faddl
cmpsb
aad
xorb
inc
jge
or
aad
dec
popw
lahf
pusha
add
repz
add
adc
mov
aad
xor
add
loopne
jp
jmp
mov
mov
in
xchg
pop
lods
popa
stos
dec
push
cli
lahf
pop
aad
out
stos
in
xor
popl
insb
stos
sub
mov
dec
inc
add
adc
shl
add
cmp
or
mov
mov
mov
mov
mov
add
test
movsl
out
xor
and
pop
sti
push
dec
sbb
test
orb
xchg
dec
jmp
scas
mov
sti
mov
sbbb
pusha
adc
jo
fbstp
incl
jl
movsl
std
sbb
shlb
insl
mov
cmpsl
icebp
push
jp
xchg
scas
inc
or
lcall
mov
cmp
push
push
dec
jns
fwait
adc
ljmp
icebp
stos
pop
adc
mov
pop
xchg
sti
or
aas
dec
add
pop
cmc
jmp
in
pop
xchg
insb
or
xchg
jo
push
popf
rcrb
sub
loop
inc
dec
rcrl
mov
ret
hlt
mov
inc
leave
inc
sbb
mov
les
jl
inc
andb
adc
clc
ret
jecxz
push
adc
and
mov
lock
in
jg
xor
xchg
lods
pop
jmp
leave
cmc
scas
adc
lret
or
xor
leave
xchg
dec
fcmovne
icebp
jg
enter
inc
movsb
test
and
xor
jecxz
lret
adc
pushf
ss
dec
shl
mov
addr16
stos
push
fistl
loope
fisubrl
jge
js
pop
pop
out
push
sbb
jl
mov
mov
lret
inc
jns
pop
orb
add
inc
dec
add
sbb
xchg
es
shll
add
mov
cmp
adc
push
cld
mov
popa
cs
pop
dec
push
mov
insl
pop
xor
cmc
push
xchg
xlat
pushf
lret
fcoms
rolb
repz
mov
dec
pushf
cmp
lahf
ljmp
subl
test
and
aad
lret
test
push
mov
sbb
pushl
lods
adc
test
add
mov
mov
inc
mov
pop
insl
std
mov
imul
sub
pusha
or
and
inc
sbb
cmp
es
fsubl
test
mov
in
aaa
dec
lock
adc
mov
cmp
mov
ljmp
sbb
xlat
xchg
sbb
lret
leave
mul
icebp
push
cld
fwait
test
jb
and
fwait
clc
mov
int3
xor
arpl
pop
in
mov
adc
ret
pop
add
rorb
cmp
popf
inc
push
js
int
mov
or
aam
xorb
dec
add
cmp
into
mov
adc
cli
push
jne
sub
repnz
or
lcall
push
add
add
loop
popa
sbb
cmpsb
movsb
aam
insl
lcall
mov
lds
scas
jecxz
cli
shr
addl
push
push
lods
mov
ret
popf
lds
sarl
and
popl
sub
mov
xchg
cmc
lcall
add
inc
aad
jecxz
or
fsubr
das
and
cwtl
sbb
cmp
xchg
jle
jecxz
and
out
inc
adc
adc
dec
lea
insl
push
sbb
int3
adc
js
rcll
mov
cwtl
inc
nop
stos
inc
sbb
cs
mov
jno
xor
arpl
lods
ljmp
incl
xor
sbb
popa
push
and
mov
dec
mov
xor
cmpb
xor
cmp
xor
and
sbb
push
loopne
dec
aas
inc
aad
xchg
jb
adc
outsb
push
xchg
mov
push
dec
mov
imul
jp
cmc
adc
lcall
mov
incl
sub
ds
dec
xor
iret
push
adc
das
ds
add
add
sbb
push
inc
test
aad
cmp
push
xorl
mov
testb
inc
in
mov
inc
jl
mov
pop
loope
push
ss
fiaddl
lret
mov
jae
jmp
adc
mov
pushw
movb
divb
add
xlat
sbb
sbb
push
nop
sbb
test
repz
cld
mov
pop
cwtl
lods
inc
or
in
and
dec
inc
rcrb
dec
outsl
loopne
test
bound
cld
inc
mov
add
pop
loop
sub
jns
inc
push
es
inc
pop
shlb
call
xor
ret
cli
ja
test
sbb
insl
mov
mov
fidivs
and
clc
les
push
sub
pop
lods
jb
inc
into
mov
dec
and
jnp
xor
pop
test
ja
out
xchg
lock
push
loop
pop
dec
cmp
cltd
clc
add
arpl
mov
js
fsubp
ret
push
inc
cmp
mov
outsl
mov
dec
inc
xchg
mov
pop
adc
xchg
incb
push
int3
mov
push
into
lcall
cmp
or
mov
push
pop
sub
add
pop
and
mov
mov
ret
cmp
or
sub
fs
and
fnstenv
push
mov
mov
shrl
pop
lock
push
dec
daa
push
hlt
cmpsl
add
adc
or
fisubl
and
out
or
inc
sbb
adc
test
les
ror
pop
adc
decl
shll
and
add
cmp
pop
rorl
cs
add
lcall
daa
inc
push
add
hlt
js
add
bound
add
decl
loope
jbe
test
sbb
test
hlt
sub
in
out
bound
mov
and
es
mov
dec
pop
lods
add
test
call
push
mov
sarb
xor
scas
les
push
sub
sbb
cmp
add
lcall
jg
repz
enter
add
push
aaa
test
sbb
adc
ss
out
scas
sbb
add
jbe
sub
sbb
repnz
subb
push
andl
in
push
mov
inc
mov
xor
lret
lock
or
pop
push
rclb
jecxz
je
lret
sarb
arpl
ja
jbe
lahf
xor
jl
daa
inc
or
sub
mov
adc
fnstsw
adc
push
ljmp
filds
lods
push
pop
loope
mov
cmp
pop
cwtl
int3
sti
mov
addr16
or
scas
cmc
and
push
hlt
loope
ror
sbb
jl
mov
adc
cmp
loopne
jb
xchg
lcall
or
fs
inc
sbb
inc
xchg
nop
push
pop
sbb
cmp
jmp
pop
cmp
or
xor
nop
add
sarl
mov
jl
and
cmpsb
jecxz
add
stc
cmp
shlb
and
sti
lock
mov
lods
jp
push
and
dec
in
or
mov
xlat
lock
and
cltd
and
push
xlat
ja
out
mov
mov
aas
cmc
adc
sahf
ret
ljmp
enter
dec
jb
push
outsl
test
or
inc
add
pop
in
jns
sahf
pushf
subb
sub
sub
jmp
cwtl
shrl
fidivs
inc
lea
push
rorb
xchg
pushf
jl
inc
sbb
arpl
decl
cmp
mov
jge
in
adc
pop
sub
sbb
movsl
popa
in
lahf
mov
aad
xlat
pop
mov
xor
test
pusha
fs
mov
pop
sbb
xchg
sub
sbb
pop
sbb
fadd
hlt
cld
stos
push
addb
cmp
mov
mov
sub
inc
jbe
pop
jno
nop
pop
fisubrs
inc
mov
push
movsl
dec
xchg
scas
xchg
jg
mov
lods
in
mov
mov
adc
inc
loop
mov
jg
test
addb
pop
inc
int3
out
call
mov
lds
push
js
mov
sbb
enter
cmp
gs
and
pusha
sub
dec
and
push
call
dec
inc
sbb
addb
and
or
push
or
in
dec
jmp
fcomip
sahf
add
mov
ficoms
sub
push
add
cmpsb
ds
cmp
ljmp
out
mov
sbb
push
lds
dec
add
mov
mov
pusha
push
je
cwtl
mov
call
mov
jb
lods
push
cmp
dec
pop
les
rcr
test
mov
push
mov
inc
xchg
or
jp
push
fstps
stos
jo
test
mov
inc
mov
sub
adc
ljmp
sub
jne
inc
mov
sbb
xchg
xor
push
xor
shlb
sub
rclb
idivl
test
and
xchg
push
cld
fdivrl
cli
in
sub
dec
or
xchg
inc
ljmp
rclb
in
jo
mov
loope
add
shrb
jge
push
insl
dec
lret
add
dec
stos
inc
or
movsb
mov
jno
je
sbb
out
rolb
push
cmp
inc
xor
push
push
ljmp
adc
pushl
cld
adc
add
inc
inc
lods
aad
xor
mov
hlt
pushl
aas
fsubrl
dec
inc
insb
inc
push
stos
fisttps
insl
mov
mov
loop
cmc
stos
scas
decl
out
jge
and
xchg
dec
lahf
mov
repz
cmc
mov
and
pop
sbb
sbb
mov
inc
bound
add
mov
test
sub
orl
jns
test
sbb
lods
cmc
in
xchg
jb
jle
mov
push
std
loop
add
push
push
mov
push
pop
or
addb
and
sub
adc
jmp
cmpsb
movsb
mov
dec
clc
lahf
scas
shl
inc
fsubrp
test
pop
xor
popa
xchg
dec
enter
gs
cmp
call
cmp
jg
popa
dec
xchg
add
gs
inc
es
shrb
mov
push
sbb
inc
loope
gs
xchg
mov
push
jp
prefetcht2
das
out
nop
rorb
add
pusha
xor
dec
rolb
outsl
mov
adcb
and
mov
daa
in
addb
dec
bound
adc
jo
loopne
pushf
dec
nop
mov
push
add
jg
mov
dec
mov
xchg
cmp
filds
lods
jb
lods
int3
insl
popa
ret
and
jbe
je
sub
add
mov
into
jp
fidivs
lcall
cmc
fsubl
pop
adc
loope
out
mov
fmull
lods
movsb
pushl
jo
test
adc
mov
jecxz
adcb
in
mov
shl
aaa
enter
mov
shlb
mov
xchg
or
mov
out
call
clc
mov
icebp
mov
mov
and
out
ret
out
popa
jecxz
stc
fst
sub
mov
das
and
out
lahf
cmp
or
test
lret
dec
sub
fiaddl
mov
jg
rorb
add
arpl
sbb
jbe
or
jp
sti
push
sub
arpl
scas
test
xor
or
call
xchg
push
mov
and
leave
or
push
mov
and
inc
jnp
or
int3
xchg
mov
int3
ret
test
fiadds
fwait
xor
mov
adc
mov
stc
daa
adc
dec
rolb
push
inc
je
push
add
loope
insl
sbb
dec
loope
in
inc
fcompl
aad
jnp
outsb
popf
aas
mov
sti
rcll
xchg
ret
and
or
add
loop
shl
in
pop
mov
clc
adc
cmp
mov
out
adc
hlt
push
xchg
mov
add
sbbb
sbb
adc
fildl
add
shlb
xor
adc
fadds
adc
mov
fists
inc
mov
popl
je
cli
pop
orl
test
cmp
sarb
es
push
mov
push
hlt
dec
faddl
mov
add
shrb
jmp
repnz
mov
push
out
test
mov
or
loop
sahf
adc
jo
iret
scas
push
xor
jle
add
aas
insb
leave
into
mov
add
pop
or
xchg
mov
push
or
jne
clc
cmp
sti
sahf
pop
mov
loope
aam
ja
jne
fdivr
add
sbbl
sub
sahf
or
dec
pop
hlt
xlat
add
or
xchg
movsb
arpl
xor
inc
lods
mov
inc
sti
call
fcoml
xor
push
sbb
inc
sub
jecxz
jl
loopne
cmpsb
add
cli
rorl
shlb
ficompl
push
push
jge
in
jecxz
pop
fistl
jbe
nop
subb
clc
mov
cmp
fstp
and
and
scas
inc
jbe
movl
push
outsl
insb
or
shlb
shlb
xorb
or
mov
stos
addl
rolb
mov
dec
cmp
jno
push
and
stos
mov
loopne
mov
fstpt
mov
fs
sbb
xchg
adc
fnstenv
push
push
dec
scas
pusha
cmc
cwtl
in
shl
jne
sbb
loopne
test
and
add
jmp
cmpb
or
adc
lea
sarb
jnp
stc
push
aad
jo
fsubr
and
pop
in
shll
inc
pop
xchg
lea
ljmp
in
test
adc
add
insl
adc
pop
cmp
cli
cltd
pop
add
fwait
call
add
cmpb
aam
add
test
dec
popf
adc
leave
and
cmp
cmc
mov
and
cld
and
mov
or
lcall
enter
pop
pop
imul
lds
dec
jp
push
cmp
test
lcall
push
cmp
mov
mov
xor
ljmp
lcall
mov
stos
ja
push
popf
cmp
orl
scas
mov
inc
aad
outsl
std
push
or
gs
jae
sub
movsb
push
testb
loop
sbb
fadd
clc
inc
or
loopne
adc
cmp
int3
stos
lods
dec
mov
pop
decl
xchg
mov
mov
xchg
adc
mov
lahf
out
add
inc
nop
or
fisubrl
inc
loop
fs
sarb
jle
scas
pop
das
in
dec
sub
divb
adc
test
sub
lcall
cli
testb
adc
scas
lods
lock
cltd
push
pop
xor
mov
pop
xchg
cld
cmc
push
and
and
adc
inc
and
loopne
cmpsb
ljmp
push
in
cmpsb
dec
test
inc
aaa
sub
mov
xor
or
mov
test
ljmp
pop
lcall
cmpsl
xor
inc
movsb
or
aad
adc
inc
jmp
cmpb
arpl
stos
fs
insl
push
adc
mov
icebp
ds
ret
mov
lcall
lods
or
xor
insl
mov
ss
add
xor
sub
imul
dec
shrl
cmp
out
pop
aam
fnclex
xchg
cs
inc
adc
mov
test
ret
mov
dec
lods
cmp
add
sbb
sbb
lock
add
inc
mov
mov
repz
cmovge
pop
mov
out
dec
loope
jge
loop
push
lds
shr
jb
xchg
mov
mul
mov
cmp
and
and
push
std
mov
mov
sbb
xor
push
add
insb
sub
pop
lcall
fwait
cli
jl
push
mov
sub
nop
adc
sbb
push
adc
and
mov
add
xchg
scas
push
or
in
mov
repnz
fwait
dec
mov
jp
insl
push
test
jb
mov
out
inc
ret
lret
pop
imul
dec
cmpsb
add
add
pop
movb
xor
mov
sub
add
adc
push
add
mov
fs
je
sbb
jns
push
add
mov
fmuls
shl
pop
cmp
mov
pop
lcall
push
pop
inc
inc
les
add
int3
data16
dec
jl
in
xor
and
enter
inc
lods
mov
es
loop
loop
push
or
and
xor
je
aas
add
adc
jns
add
xchg
xor
xchg
adc
sub
call
mov
adc
or
nop
jo
add
inc
pop
gs
out
push
jmp
aad
sbb
dec
sarb
sbbb
and
mov
mov
add
cmp
or
mov
mov
dec
or
test
enter
test
inc
adc
xchg
pop
jmp
mov
adc
jecxz
cmpsb
and
pop
testl
sbb
fisttpll
mov
push
lret
fsubl
cli
add
je
add
pop
sbb
popa
mov
bound
js
cwtl
add
dec
push
push
call
xlat
aam
loope
mov
and
movsb
add
aas
mov
dec
fstp
fimuls
add
adc
inc
loop
adc
mov
add
in
mov
sub
mov
sub
das
cli
push
mov
add
lods
push
or
or
addl
inc
push
dec
cmp
popa
subb
popl
xor
loopnew
and
hlt
mov
cmp
sahf
jmp
pushf
or
aad
adc
add
inc
scas
mov
pop
or
inc
adc
mov
or
dec
dec
sbbl
inc
or
jmp
pop
inc
mov
fldcw
add
sbb
sub
shl
out
or
xor
pop
mov
push
lods
and
jmp
aam
out
xchg
mov
inc
ljmp
xchg
pop
std
outsl
cmp
js
test
leave
inc
jo
pop
dec
push
push
cmc
xchg
shlb
fistpll
stos
mov
inc
mov
push
xchg
aaa
add
test
and
adc
aaa
mov
mov
lea
sub
lea
push
mov
push
sub
pop
popa
stos
loop
pop
jmp
pop
jle
or
sbb
pop
mov
rorl
cli
loopne
xor
mov
cs
pop
mov
mov
clc
popf
mov
or
and
in
and
out
inc
loop
out
in
into
push
js
das
test
inc
int3
push
jmp
push
dec
loope
pop
lock
leave
jecxz
mov
dec
les
xchg
mov
mov
mov
jle
inc
xchg
movsb
fcompl
lods
int
cmpsb
mov
dec
adc
cmp
inc
hlt
xor
mov
ret
or
sub
addl
mov
out
inc
jg
call
inc
or
enter
push
arpl
fwait
mov
movsb
and
xor
fwait
xchg
cmc
or
incl
add
xchg
adc
xchg
and
cmp
into
or
xor
jle
ds
dec
push
and
mov
add
lcall
enter
nop
push
mov
inc
mov
push
enter
pop
sti
pop
rol
imul
push
faddl
cmp
ret
xor
mov
add
xor
push
or
and
cmpsb
inc
xchg
push
sub
test
mov
add
ss
jmp
push
mov
jnp
mov
inc
fimuls
idiv
sbb
ficoms
push
insb
adc
cwtl
adcb
inc
fisubrs
lahf
mov
inc
sbb
push
cltd
inc
mov
mov
or
imul
add
cmp
or
fisubs
clc
nop
push
dec
jl
mov
je
jg
push
sbbb
and
mov
push
repnz
push
mov
mov
jl
mov
mov
cmp
xor
and
cmc
mov
test
fidivrs
push
jno
sub
inc
sbb
cmpb
cs
sbb
addr16
scas
aam
iret
xor
es
or
mov
mov
push
adc
stos
les
jg
xor
add
enter
inc
xor
or
pushf
int3
loope
test
xor
xchg
jmp
pop
inc
inc
mov
xchg
push
dec
clc
mov
push
dec
push
cld
dec
movsb
xchg
loopne
xchg
fdivl
adc
hlt
loop
lahf
push
test
xor
mov
inc
push
decl
adc
stos
inc
cld
pop
hlt
add
popf
mov
mov
and
lea
fsubrs
pop
and
pop
divb
jns
loop
push
xchg
adc
les
dec
lret
pop
std
mov
adc
xchg
sbb
xlat
cwtl
xchg
icebp
mov
ljmp
jp
je
inc
jl
aas
shlb
cmpsl
shrb
mov
jle
icebp
fbld
lahf
jbe
xchg
inc
xor
imul
test
or
lods
test
jbe
lds
or
lock
mov
adc
fwait
inc
jecxz
add
and
ljmp
jb
jge
insl
push
or
cmp
in
or
pusha
popa
xchg
dec
add
xor
hlt
adc
push
cli
sub
test
cmp
in
push
test
lods
xchg
xorb
inc
jge
decl
dec
cwtl
jg
inc
orl
loopne
nop
ss
js
adc
mov
pop
cs
sbb
nop
push
cmp
lea
xchg
pop
mov
adc
dec
js
les
push
xlat
les
jmp
and
repz
xchg
je
and
loope
and
jo
push
inc
test
pop
fs
pop
jmp
sub
das
push
lret
mov
jae
cmp
jle
push
cmp
jnp
std
jnp
add
test
loop
dec
xor
scas
lea
xor
rcrb
pop
xchg
rclb
cwtl
dec
cmpsb
movsl
nop
add
invd
in
sarl
rcll
add
cmpb
cs
and
sahf
bound
cmp
insb
test
jg
and
arpl
push
adc
call
add
or
mov
jle
lcall
add
sbb
outsb
sahf
movsb
int
or
jb
test
jo
and
mov
sarb
imul
js
add
movsb
stos
jbe
js
in
or
in
test
mov
bound
rcll
inc
add
adc
jno
add
setge
inc
ljmp
in
or
inc
scas
or
test
shrl
daa
jmp
inc
cld
or
mov
push
fmuls
sub
shlb
gs
shlb
jecxz
stos
mov
testb
push
push
outsb
call
mov
je
test
cmpsb
pop
bound
ljmp
cmp
outsl
cmp
es
jne
and
sahf
test
in
and
hlt
pushl
sbb
push
dec
cmpb
inc
int
sbb
loop
lock
loope
xchg
js
das
js
push
push
stos
pop
mov
adc
test
lock
mov
jmp
mov
fbld
loop
cvtps2pi
int3
inc
push
inc
es
fidivs
pop
lret
cmp
rolb
add
or
sbb
inc
addr16
out
inc
push
xorb
and
loopne
das
mov
fwait
mov
mov
pop
incl
iret
inc
mov
sub
xlat
incl
pop
adc
mov
or
or
and
inc
aaa
dec
hlt
jg
inc
icebp
or
outsb
mov
test
loopne
ds
jg
mov
mov
sub
shll
loop
fmull
xor
loope
sarb
stos
stos
pop
jmp
stc
adc
push
dec
adc
and
lcall
inc
sub
inc
int
sbb
mov
add
dec
add
cmp
mov
inc
jmp
mov
inc
adc
inc
xor
lcall
pop
cmc
or
or
mov
add
loope
nop
push
lods
jg
push
adc
das
fnstenv
cli
pop
daa
stos
std
call
or
jecxz
mov
aas
nop
dec
dec
test
and
xchg
int3
shlb
jo
les
out
push
cli
pop
std
sbb
jmp
jo
xor
cmc
push
jecxz
ljmp
inc
or
mov
adc
jg
sub
cmpsl
jecxz
pushf
inc
dec
push
dec
packsswb
inc
pop
or
frstpm(287
mov
call
arpl
mov
stos
pop
add
adc
mov
shl
lods
scas
clc
daa
jo
mov
xorb
das
adc
lahf
jo
lods
idiv
loop
shll
flds
or
jae
xchg
out
jnp
xor
out
insb
mov
add
sbb
mov
cli
int3
or
sarl
or
jno
or
sbb
sub
dec
pop
cld
outsl
xchg
cmp
sbb
xchg
ss
xchg
xchg
ret
jo
aaa
int3
cli
mov
ss
or
mov
sarb
sub
fwait
bound
shll
je
fwait
jle
das
sbb
xchg
mov
ljmp
sahf
les
mov
icebp
shlb
sub
pushf
ljmp
adc
xchg
push
or
cmp
add
pop
pop
pop
addl
mov
ljmp
das
or
insb
enter
add
clc
add
inc
adc
rcl
je
adc
jo
test
aam
scas
negb
pop
push
adc
mov
dec
xchg
mov
inc
and
add
and
test
fisubrs
or
sub
hlt
aad
rolb
mov
cmp
es
test
cld
xor
fidivs
mov
sub
mov
xor
lcall
icebp
movsl
jb
cmp
and
inc
fsubrs
out
jb
xchg
ja
mov
int3
test
push
fistpl
clc
pop
mov
dec
decl
jg
dec
cmp
insl
shl
icebp
dec
jg
cs
or
test
lcall
daa
sti
xor
cld
in
add
mov
mov
fnsave
push
jle
jle
and
cmp
stos
test
pusha
xor
jo
add
mov
cmc
incl
mov
out
aas
testb
in
rorb
jne
daa
insb
pop
dec
push
inc
imul
push
outsb
sub
pop
int3
sub
stc
popa
add
xchg
sub
adc
xchg
jno
xor
and
sbb
mov
inc
movsl
and
adc
cmp
pop
jmp
mov
dec
hlt
or
pushl
imul
fsubs
xchg
test
push
rcrb
add
push
inc
lret
outsb
icebp
mov
pop
pushf
cmp
loop
mov
add
inc
clc
stos
push
mov
sbb
cld
jge
push
push
jmp
push
icebp
lcall
stos
mov
sub
xor
popa
and
jge
push
sbb
lock
das
mov
adc
push
adc
loope
push
mov
das
push
shr
and
adc
in
out
push
mov
mov
sub
js
mov
outsl
fcomp
dec
push
mov
lods
jl
lds
imul
jmp
mov
inc
xor
sub
test
xor
sbb
mov
lcall
in
xchg
rclb
aas
adc
sub
lods
das
add
sbb
inc
inc
popa
add
and
cltd
lods
imul
mov
xchg
jne
push
and
imulb
dec
mov
sub
in
hlt
add
outsb
xchg
and
rolb
and
cltd
fisubrl
adc
lea
mov
ret
sbb
jg
es
xor
add
xchg
sbb
jmp
adc
push
jo
cmc
test
xor
pop
pop
adc
mov
and
aam
int3
ljmp
into
jo
ljmp
or
add
sbb
mov
push
or
shrb
pop
sub
pop
andb
pop
pop
adc
sub
int3
testb
add
mov
cli
add
int
jmp
cmpsb
aam
decl
dec
cmc
mov
fsts
or
cwtl
mov
mov
inc
inc
inc
inc
sbb
push
es
cmp
pop
push
adcl
mull
test
or
enter
sahf
xchg
mov
mov
lods
inc
xor
pop
test
mov
and
cmpsb
xchg
pop
cmc
inc
mov
pop
mov
sub
in
or
scas
and
in
inc
outsb
adc
and
push
sbb
movzbl
mov
xlat
shr
testb
mov
sarl
inc
inc
out
dec
or
push
cli
jmp
rclb
pop
les
movsb
aaa
or
and
jle
cmp
cmpsb
adc
sbb
pop
in
cwtl
popf
out
mov
loopne
lock
dec
imull
stos
mov
pop
push
stos
stos
fnstenv
lret
xor
imul
inc
cld
ja
ss
lds
push
dec
jns
dec
lods
sbb
mov
orl
jbe
fcoml
ret
and
adc
pop
in
pop
xor
es
inc
push
js
push
push
or
in
or
pop
xor
cmp
gs
fdivr
jecxz
xchg
dec
xchg
ret
add
mov
cmp
mov
icebp
outsl
add
push
adcl
dec
nop
inc
ret
mov
inc
popa
push
xor
inc
inc
cmp
and
cwtl
fstps
dec
inc
push
scas
push
dec
lds
add
jno
xlat
imul
cmp
ljmp
icebp
xorl
ss
inc
out
jp
jne
outsb
jmp
and
push
mov
cmpsb
pop
or
cmp
scas
addb
pop
dec
add
inc
xor
clc
inc
aas
std
out
pop
dec
mov
scas
and
movlhps
aaa
call
inc
or
add
push
jge
in
and
je
outsb
and
mov
and
outsb
pop
xor
add
aad
fimuls
push
jp
or
or
insl
dec
adc
xor
cwtl
cld
sub
jo
or
xlat
dec
stos
fcmovb
mov
lock
clc
dec
push
or
ljmp
pusha
imul
pop
mov
scas
scas
out
inc
loope
push
or
clc
lods
xchg
fmull
adc
shll
aad
pop
pop
pop
lock
cmp
xchg
repnz
test
add
mov
mov
shrl
js
jmp
sub
inc
push
adc
pushl
mov
imul
dec
into
push
and
mov
add
xor
das
inc
cld
inc
in
cmp
ficompl
push
pop
xchg
sarl
dec
pushf
das
pop
aad
mov
fcomip
ror
popa
shlb
call
inc
into
cltd
adc
xchg
add
loope
and
lods
or
push
mov
clc
repz
dec
mov
push
lcall
and
mov
cmp
scas
in
aas
jle
sub
ja
pop
js
out
or
aad
dec
cmp
mov
subb
sub
cmp
inc
decl
ljmp
orb
lods
and
loopne
fdivrp
outsl
test
push
stc
scas
cltd
shrl
mov
pop
es
popf
jl
push
scas
js
mov
adc
jmp
pop
bound
enter
int
add
mov
push
push
ss
xchg
test
inc
insl
xchg
xor
test
sub
or
mov
cmp
mov
std
or
loopne
andb
idivl
pop
bound
shlb
push
sub
lcall
push
xchg
lret
xor
cmpsl
ss
repz
push
sub
adc
sub
push
pop
xchg
ret
pop
dec
aad
adcb
scas
xor
shll
push
pop
or
jge
dec
push
mov
js
insb
lea
mov
xor
aas
xor
mov
adc
pushf
faddl
ds
cmpsl
loop
sub
clc
dec
addb
or
cmpl
push
sbb
or
test
sahf
add
fstps
cli
cmp
bound
push
cmpsb
out
ret
pop
dec
inc
pop
and
aad
das
push
fidivrl
arpl
ficoml
or
rolb
or
cmp
mov
data16
mov
stos
cmp
cmpsl
inc
dec
icebp
sti
in
xchg
add
stos
and
movsl
pop
roll
xchg
add
add
iret
shlb
pop
sub
fwait
jecxz
cwtl
or
fisubs
add
cld
mov
xchg
stc
loopne
loope
sbb
out
xchg
mov
xor
add
and
pop
mov
pushl
jb
pop
enter
mov
add
repnz
sahf
pop
add
cltd
sbb
shr
xchg
stos
repz
adc
addl
in
or
add
mov
pop
inc
fistpl
scas
cmpsb
mov
sub
dec
aaa
cs
xchg
add
pusha
add
cmp
push
jl
add
sbb
dec
inc
je
imul
jne
inc
push
clc
pop
sbb
clc
loop
in
sbbb
pop
mov
add
xor
mov
jns
adc
xor
add
mov
add
push
inc
or
dec
adc
inc
aas
lods
ja
mull
jl
push
xor
incb
popf
shl
cmpl
pop
in
cs
xor
dec
sub
and
pop
dec
mov
addr16
hlt
and
and
cmp
xchg
push
enter
adc
lahf
out
les
les
dec
jp
mov
test
decb
inc
push
test
inc
rolb
jae
mov
data16
out
pop
stos
sub
push
or
inc
jl
test
dec
sbb
add
push
adc
sub
fisubs
mov
mov
jmp
add
push
aad
mov
rolb
push
ret
movsl
negb
xchg
lret
mov
ja
sub
add
out
inc
mov
dec
and
fcmovbe
inc
addr16
int
inc
outsl
or
dec
and
mov
rorl
ds
orb
jg
push
and
and
sbbl
ret
or
outsb
xchg
into
add
cmp
and
adc
dec
roll
sub
inc
lods
es
xor
mov
add
jg
les
shrl
andl
sbb
mov
add
lods
mov
push
test
fwait
sbbl
shrb
call
inc
adc
addr16
clc
mov
cs
push
movsl
mov
rcr
movsl
movsl
sbb
xor
outsb
cmp
dec
out
xor
ret
pop
fwait
xchg
pushf
lret
dec
pop
pop
mov
cld
or
adc
divb
das
inc
xor
mov
jns
loop
test
enter
leave
adc
je
scas
notl
sub
adc
fdiv
inc
test
mov
ljmp
test
sub
mov
scas
cli
orb
nop
push
adc
add
les
mov
mov
push
cs
es
jae
decb
dec
sbb
test
jmp
cld
mov
into
pusha
dec
add
mov
adc
les
cmpb
cs
jbe
jo
dec
fbstp
and
daa
jae
cs
mov
mov
lock
xchg
adc
setbe
and
js
xchg
pusha
jp
pop
jne
mov
mov
sub
xchg
mov
or
sbb
std
jae
xor
pop
mov
xor
mov
mov
inc
or
xchg
pop
inc
mov
mov
push
sbb
mov
jo
dec
mov
xor
inc
adc
scas
and
or
mov
dec
xchg
and
or
aaa
cwtl
cmp
test
popf
adcb
stos
ljmp
and
mov
pop
fwait
cmp
into
push
jnp
jo
test
int3
call
cmp
pop
aaa
loop
cs
call
jne
xchg
push
out
stos
sbb
clc
cwtl
pop
pop
and
je
iret
jbe
fs
inc
inc
addr16
fcomip
sub
test
mov
xchg
dec
mov
scas
inc
test
fsubrl
neg
fadd
nop
jbe
scas
les
or
inc
mov
and
jle
xchg
cmpl
decl
or
mov
jecxz
enter
xor
ja
mov
and
incl
cld
adc
add
mov
and
ret
lret
pusha
int3
add
ljmp
sbb
sub
mov
pop
int3
adc
shlb
cld
stos
cmp
sbb
loop
mov
sub
mov
int
cmpsb
es
shll
jnp
pop
stos
mov
std
test
dec
jp
or
add
int3
pushl
es
xchg
scas
movsb
mov
aad
pop
lock
sbb
xchg
sub
daa
stc
mov
add
mov
es
test
cs
jmp
popa
dec
inc
imul
add
jo
lds
fs
and
jl
call
mov
push
and
dec
pop
pop
cmp
mov
xlat
mov
pop
enter
lds
aas
jne
jg
mov
cld
cmp
mov
repz
clts
cwtl
adc
mov
test
mov
lcall
mov
fwait
sub
fadds
leave
push
or
cmp
or
cmc
xchg
mov
test
sar
inc
sbb
push
jg
add
xlat
or
adc
loop
mov
adc
stos
enter
nop
ljmp
push
jne
mov
xor
pushl
inc
xor
lret
ja
scas
push
cmp
lret
mov
add
sbb
faddl
js
adc
decl
aad
mov
and
jns
dec
xchg
movlps
add
sbb
xor
cmp
ljmp
aaa
insb
out
xor
pop
xor
or
xor
add
mov
aaa
sbb
mov
aam
mov
ret
stos
dec
int
or
pop
test
adc
in
sarb
adc
sub
inc
cwtd
movsb
push
mov
iret
xor
add
adcl
sbb
or
mov
sbb
sub
cwtl
fadds
dec
fdivrs
xchg
mov
iret
idiv
pop
dec
lahf
cmp
xor
loop
test
inc
cld
sbb
lcall
dec
test
mov
adc
lret
adc
ret
call
clc
test
iret
loopne
jb
sbb
movl
sbb
jno
ds
shlb
hlt
out
fstps
mov
test
mov
lods
ljmp
jp
mov
or
lods
cmpl
mov
jo
mov
out
sub
jnp
inc
les
cmp
push
rcrb
sti
shll
xchg
out
push
xor
xor
xchg
jp
aas
repnz
mov
cwtl
push
data16
cld
inc
out
mov
cmp
or
push
aam
test
push
adc
push
xchg
mov
adc
mov
pop
shrl
or
xchg
sbb
and
push
add
and
sub
rolb
xchg
jb
or
hlt
lahf
insb
sbbb
xlat
ret
sbb
roll
js
xor
and
bound
fadds
call
nop
push
sbb
jno
push
in
insl
js
fstpl
sbb
cmp
jmp
mov
icebp
add
dec
scas
push
jl
push
daa
mov
push
fbstp
cld
cld
mov
jp
mov
in
mov
push
or
and
sahf
inc
pop
lods
push
sarb
sbb
ljmp
cld
jnp,pn
imul
sti
les
jg
ret
mov
js
mov
lock
shlb
pusha
dec
sbb
cmp
add
inc
dec
rclb
push
pushf
add
inc
pop
outsb
clc
cmc
or
loope
mov
test
test
sbb
lret
push
ljmp
mov
push
mov
xorl
xor
cmp
xor
in
shl
rcrl
lock
hlt
scas
loopne
jb
jl
stos
or
sti
aam
imul
das
jmp
and
pop
mov
es
imulb
jle
inc
inc
push
adc
mov
out
incl
pop
push
pop
rol
mov
push
add
popl
call
dec
mov
push
mov
cmc
sbb
sbb
ljmp
clc
int
or
aaa
or
and
push
call
and
scas
inc
jne
enter
decl
insl
rcll
clc
test
dec
add
inc
cmpl
sbb
test
push
add
test
scas
push
sub
and
and
popa
ljmp
sub
push
and
cmc
lcall
popa
cmp
pop
in
cmpsl
pushf
insb
outsl
adc
ljmp
shlb
or
movsl
add
test
xchg
mov
push
pop
scas
or
add
dec
movl
adc
and
call
jg
repnz
int3
xchg
and
shll
push
sbb
mov
ret
decb
nop
mov
subb
dec
js
add
sub
or
push
and
and
jno
or
adc
mov
stos
jnp
push
mov
inc
std
cltd
fiaddl
jl
mov
push
pextrw
mov
and
in
aam
fists
and
pop
sbb
out
sbb
loopne
addr16
lret
xchg
test
sarb
sub
outsl
add
fs
fs
addl
add
add
ss
call
push
pop
xchg
add
inc
inc
bound
sub
push
cmp
or
sar
inc
int3
loop
add
add
pusha
sti
jnp
mov
mov
pusha
push
xchg
push
xor
js
cli
add
jb
inc
adc
aaa
inc
das
cli
add
fs
nop
adc
out
repz
lea
xor
in
fists
push
inc
bound
sbb
jg
mov
cmpsb
bound
lcall
pusha
xchg
shl
mov
or
lds
hlt
daa
mov
xor
mov
adc
data16
add
insb
addl
jo
fs
call
insb
addb
lret
push
sbb
clc
sbb
xchg
cmp
fisttpl
mov
inc
andl
dec
pop
inc
dec
push
std
lds
cmp
xor
xchg
or
mov
andl
and
and
mov
ret
shrb
xorb
mov
aaa
pushl
daa
cltd
adc
adc
jecxz
fstps
xchg
sub
andl
das
dec
adc
cmp
push
call
ds
add
sbb
or
inc
and
rolb
ret
cmp
inc
ja
incl
sub
xor
xor
cli
testb
mov
scas
clc
pop
adc
xchg
xor
outsl
popf
mov
xchg
cli
sarb
push
ljmp
subb
push
xor
xchg
xlat
in
sbb
and
mov
in
fcomip
and
and
sbb
adc
mov
xor
or
xchg
bound
inc
jl
fmuls
xor
mov
andb
int3
pop
int3
and
incl
push
cld
data16
aad
sahf
pop
pop
sbb
enter
icebp
jns
rcl
dec
sti
fs
inc
dec
in
outsl
ljmp
scas
int3
mov
sub
adc
xchg
call
sub
sbb
add
xchg
inc
icebp
ret
inc
jmp
pop
xor
xchg
hlt
call
movsb
cltd
lock
and
sub
and
push
pop
ss
mov
push
mov
movsb
pop
sbb
mov
fwait
xor
and
call
jle
loope
insb
stos
push
add
jl
arpl
outsb
inc
testl
push
jo
int
clc
pop
add
add
mov
and
inc
cmp
lods
jb
dec
jbe
out
addl
es
sub
fsubs
push
jg
and
jle
fsubrs
ret
push
pusha
popa
jne
stos
push
lods
out
icebp
adc
ret
sub
incl
push
mov
mov
lods
dec
test
jg
cld
jge
inc
pop
nop
pop
mov
arpl
lahf
mov
jns
jns
jp
test
dec
adc
pop
xorb
cwtl
lea
pusha
dec
push
pop
add
adc
xor
mov
cmpsb
out
test
or
lcall
pop
loopne
andb
add
aaa
popa
movsl
lcall
lea
jae
les
push
std
xchg
jno
mov
arpl
adc
jne
stos
scas
gs
push
call
mov
mov
push
mov
mov
add
mov
test
mov
mov
lcall
jle
notl
jb
outsl
std
pop
sbb
and
ffree
xchg
inc
andb
rol
clc
inc
int
push
xor
je
mov
loopne
add
mov
aam
popa
or
push
mov
pop
mov
and
adc
adc
loope
decl
stos
call
push
mov
sbb
popf
cmp
adc
and
es
sub
loopne
outsb
xchg
sub
aas
ret
rorb
out
movsl
inc
loop
incl
pop
ret
addr16
jl
xor
incl
cmc
mov
notl
andl
inc
mov
sub
out
sub
xchg
push
je
push
dec
aad
rcll
push
add
scas
xchg
sub
xchg
sub
pop
pop
and
add
iret
push
lock
hlt
lods
jae
mov
popf
add
jo
aas
adc
bound
clc
in
jg
mov
dec
in
or
stc
scas
mov
shll
subl
imul
testb
cltd
icebp
or
or
inc
adc
mov
push
out
sub
sbb
jo
call
dec
clc
sub
ljmp
and
sbb
push
cli
jo
push
movsb
cmpsb
decl
int3
sarl
push
mov
insl
adc
mov
xchg
pop
pop
pop
add
mov
test
rcrl
je
into
in
icebp
pop
mov
mov
and
mov
sahf
faddp
shrb
mov
mov
inc
cmp
in
aaa
jbe
jg
enter
subb
jle
pusha
addl
cli
shlb
dec
or
std
nop
add
mov
pusha
xchg
hlt
or
jp
pop
ror
add
sub
dec
ret
inc
fsqrt
adc
push
insb
movsl
and
and
loope
fisttpll
and
lock
or
push
hlt
pop
add
jbe
sub
ret
arpl
test
clc
inc
and
push
aam
pop
imul
add
inc
sbb
or
loop
stos
out
mov
adcb
pusha
and
xor
cmp
jno
jecxz,pn
das
ljmp
push
stc
jmp
inc
mov
mov
lcall
mov
in
aad
pop
mov
inc
sub
and
push
cld
scas
dec
push
fldenv
loope
jg
mov
fdivl
cld
pop
pop
lcall
rcll
add
and
push
je
pusha
mov
add
bound
jno
dec
cs
add
sbb
add
cmpsb
aaa
mov
fs
cld
outsl
je,pt
addb
clc
fistl
jecxz
xchg
hlt
inc
mov
js
outsl
popa
jo
cld
std
and
jmp
sbb
mov
cwtl
in
mov
pop
sbb
and
sbb
pop
je
out
mov
fstl
push
fwait
inc
pop
xchg
inc
sub
pop
cmp
loope
mov
sbb
icebp
insb
xor
dec
stos
fidivl
loopne
sbb
inc
cmpsb
je
mov
pusha
add
clc
pop
adc
push
xchg
data16
movsb
lods
push
lcall
insb
out
xor
cmp
scas
mov
adc
cli
xlat
sbb
imul
test
imul
add
in
mov
incl
hlt
jmp
ret
mov
jle
jae
arpl
mov
sbb
adc
jno
bound
daa
mov
dec
pop
and
pop
cmp
jl
lods
ja,pt
clc
sarb
into
or
outsb
dec
repz
mov
out
xchg
sti
pop
aas
add
enter
mov
inc
and
cmp
xchg
out
into
orb
repnz
mov
mov
adc
and
dec
mov
test
pop
outsl
out
add
loopne
inc
icebp
push
adc
mov
mov
xor
bound
xchg
xchg
push
add
sbb
xor
arpl
mov
cld
and
gs
push
mov
dec
push
jge
ljmp
or
add
push
add
mov
xchg
pushf
idiv
push
fdivrl
cmp
fcmovbe
sbb
in
mov
mov
add
shll
xor
int3
hlt
enter
jecxz
mov
ret
les
xchg
call
ficoml
jecxz
push
and
clc
mov
xorb
int
inc
and
inc
mov
cmp
prefetch
or
test
mov
mov
xchg
test
aam
sub
jb
pop
add
mov
jle
pop
jne
inc
mov
and
mov
nop
pop
add
push
add
push
xchg
cli
and
or
fs
or
cmc
mov
add
jl
nop
sbb
lret
or
jg
push
std
pop
and
mov
popa
adc
push
mov
xor
hlt
or
imul
mov
jg
into
cmp
imul
hlt
scas
cli
inc
mov
push
pop
jo
lock
sub
sub
fists
cmp
jmp
fildll
xorl
push
xchg
xor
gs
outsl
sbb
int
add
dec
ds
mov
sub
lcall
inc
js
sbb
mov
inc
call
mov
sbb
adc
jne
adc
ja
sbb
lods
cmp
jbe
mov
pushf
imulb
rolb
repz
lock
mov
cli
add
loop
pushf
push
lahf
adc
lcall
mov
adc
cld
add
inc
and
lods
pop
mov
inc
lret
dec
xchg
out
scas
repnz
rcrb
and
add
fcomps
pop
adc
nop
test
pusha
or
sub
cmpsb
push
fs
test
lods
cmp
lock
aad
loop
push
rcl
scas
pop
lea
pop
out
ret
shlw
dec
es
xchg
add
cmp
jle
push
push
sbb
lcall
pop
int3
add
nop
jb
dec
push
xor
or
loop
dec
das
loopne
sbb
je
jle
cli
mov
clc
jl
dec
popa
rorl
enter
or
cmpsb
and
ret
lret
fcmovb
decl
cmc
int3
jns
lahf
adc
add
push
add
mov
push
insb
mov
ret
adcb
xchg
hlt
test
mov
rcrb
es
repnz
into
bound
push
lods
xchg
add
or
fs
shlb
sbb
push
leave
cwtl
mov
pop
xchg
int
inc
sbb
jle
add
das
mov
pop
es
push
out
or
ljmp
or
mov
subb
es
sub
adc
pop
adc
mov
push
int3
dec
mov
fildll
push
push
sub
push
mov
jo
inc
ljmp
clc
rorb
lret
fs
adcl
ret
add
ret
mov
sbb
dec
adc
cli
leave
cs
xchg
int3
inc
xlat
xor
pop
push
pop
out
add
xor
push
push
les
jne
aad
mov
je
push
ror
add
scas
push
fs
icebp
push
into
fs
std
aas
shlb
rcr
jbe
insl
sbb
arpl
xchg
mov
and
cmp
pusha
push
mov
call
inc
push
in
and
lds
test
scas
push
mov
mov
sub
sbb
inc
xor
jmp
dec
stos
mov
mov
push
lret
and
fidivs
pop
add
xchg
xor
adc
xor
mov
test
mov
test
dec
mov
and
push
cmc
dec
sbb
add
adc
je
je
test
rorl
dec
call
jmp
testl
and
je
andb
lds
add
adc
fld
push
push
nop
cli
cmpsb
popa
mov
decb
mov
andb
mov
xchg
lcall
jle
fiadds
aaa
push
adc
sub
jno
inc
and
or
add
push
dec
cmpsl
stos
and
das
push
jnp
popa
adc
popf
test
hlt
arpl
stos
or
mov
imul
xchg
xor
or
mov
int3
dec
ret
pop
cmpxchg
push
xor
sbb
mov
incl
sub
lock
sub
cmpsb
iret
or
or
cli
cmpsl
shll
or
add
lock
fistpll
xor
addb
int
sarb
js
inc
decb
jecxz
xor
arpl
or
push
mov
mov
addb
mov
sub
push
push
fbstp
or
mov
int3
loopne
add
sub
add
xor
scas
adc
insb
rorl
pop
insl
inc
clc
jnp,pt
mov
fidivrl
scas
pop
sbb
ja
cmp
roll
sarb
lahf
decb
xor
mov
add
lar
js
jns
ret
add
stc
in
jmp
cvtdq2ps
arpl
and
mov
aaa
jl
add
insb
inc
bound
xor
andb
in
xchg
loop
push
lcall
sbb
cs
jl
loopne
imul
pop
push
cltd
push
adc
jl
mov
inc
loopne
mov
or
jb
or
adc
addr16
in
outsb
add
add
loope
sbb
iret
bound
enter
in
movsb
push
mov
lcall
movsb
jne
aaa
repnz
or
mov
arpl
and
mov
loop
rcrl
clc
mov
data16
xor
adc
push
add
sti
shlb
sbb
adc
and
test
jg
push
or
mov
add
shrl
xchg
dec
add
mov
mov
xorb
pop
sub
sbb
jge
call
inc
jg
mov
sbb
jae
cmp
adc
loop
xor
ljmp
pushf
pop
push
or
inc
and
les
or
ret
movsb
hlt
imul
dec
fbld
inc
or
cmpsb
out
jmp
adc
cmp
pop
inc
or
mov
mov
mov
mov
gs
pop
cmp
rorb
push
sub
dec
sbb
dec
or
call
fbstp
mov
mov
or
add
sti
or
jl
fsub
sbb
addw
ret
mov
add
popf
les
stc
incl
cmp
dec
xor
mov
rcrb
push
decb
sti
insb
push
dec
dec
inc
in
out
jo
sub
xchg
negb
sti
mull
stos
orb
loopne
scas
insb
pop
lock
inc
insl
adc
add
sbb
sub
xchg
push
icebp
jg
inc
sbb
push
xor
xchg
push
dec
mov
or
mov
push
push
push
adc
mov
adc
or
popa
push
dec
cmpsb
push
cmp
jg
sub
movl
fwait
mov
mov
enter
add
cwtl
cmp
ljmp
inc
in
rolb
lcall
mov
lods
movsb
mov
jo
out
inc
popf
fsubrs
or
insb
cld
jg
scas
pop
clc
jbe
xchg
fs
inc
jl
push
out
cmp
push
nop
fistl
xor
mov
inc
cmp
imul
push
dec
sbb
mov
mov
cmp
repz
adc
or
cwtl
loopne
adc
inc
jp
xchg
lds
movsb
test
cmp
sub
push
andl
sub
mov
decl
cli
fcoml
inc
sbb
out
adc
aam
stc
imul
mov
sbb
jmp
dec
lock
test
mov
arpl
clc
dec
jp
inc
call
mov
or
add
dec
mov
andb
ds
ljmp
push
les
fdecstp
inc
xchg
int
cs
or
ss
cs
dec
testl
fdivr
cmp
ja
pushf
cld
mov
roll
outsb
out
push
mov
sti
cmpsb
pusha
or
jmp
sbb
inc
nop
push
andb
sbb
sub
inc
jle
and
fidivrs
int
sarb
cmp
mov
lods
call
and
add
fwait
and
mov
inc
and
sub
adc
aam
xchg
xlat
cmpsl
movsb
js
mov
fcomip
xor
ds
sti
and
jg
or
cmp
dec
test
bound
nop
lcall
mov
sub
in
cmp
dec
cld
scas
pop
jo
sub
mov
es
test
adcb
and
lods
adc
outsl
pop
push
adc
ss
sub
jo
push
in
ret
ljmp
sbb
and
sahf
jge
adc
inc
lea
or
clc
mov
push
mov
cmp
addr16
lods
mov
push
shlb
adc
inc
ret
adcb
out
divl
mov
sbb
mov
mov
inc
mov
push
mov
data16
mov
aas
es
mov
push
mov
add
dec
or
js
xlat
fiadds
decb
icebp
mov
or
data16
xor
mov
adc
pop
fcmovb
mov
aas
inc
test
inc
roll
mov
pop
test
pusha
add
cmpsl
add
fsubl
sbb
lods
mov
inc
insl
push
add
xchg
add
out
or
push
inc
aam
ja
mov
pop
stc
add
mov
or
and
mov
repz
pop
aam
mov
inc
loopne
movsb
ret
pushf
clc
ss
inc
imul
xchg
arpl
push
add
ret
xor
jg
xor
outsl
cmp
lcall
mov
sub
push
adc
fists
jo
sahf
lret
xor
insb
aam
std
test
cmp
fiadds
add
push
mov
pop
aaa
lock
not
jne
or
or
fnstsw
pop
popf
mov
in
js
add
stos
ss
loopne
xor
fists
int
stos
icebp
inc
push
push
push
xchg
push
or
cltd
bound
pop
out
adc
add
pop
sub
cmp
inc
nop
mov
add
and
fcom
mov
dec
clc
and
fcomi
fstps
jns
or
mov
mov
dec
jmp
xchg
xor
mov
mov
decl
jae
mov
xchg
dec
pop
orl
push
mov
aaa
add
int3
rcrl
mov
or
adc
xchg
pop
pop
and
mov
stos
mov
mov
jnp
gs
mov
cld
adc
xchg
adc
nop
sub
fildll
mov
sbb
inc
add
mov
les
mov
clc
mov
hlt
sbb
cmp
je
cmp
mov
add
mov
ret
cli
outsl
jmp
and
loope
dec
push
push
gs
push
dec
inc
aas
xor
and
imul
mov
xor
sub
icebp
mov
imul
jle
cmp
arpl
xlat
mov
aaa
push
and
jmp
nop
repz
sbb
lds
clc
mov
adc
inc
xchg
les
xchg
add
and
ja
or
add
push
test
pop
xchg
pop
or
loop
mov
cmp
and
movsb
dec
pop
jmp
lods
pop
ljmp
je
pushf
or
mov
inc
xor
fdivl
sbb
cld
mov
cmp
es
xor
ljmp
fwait
and
push
mov
pop
adc
sub
call
mov
mov
ds
and
xchg
add
jbe
sbb
imul
bound
sbb
pop
aaa
cld
add
rorl
imul
das
fadds
test
cmp
cld
push
mov
pop
fists
inc
shlb
ss
in
xchg
pop
fwait
ss
int
dec
mov
push
clc
dec
mov
mov
enter
shlb
or
pusha
mov
pushf
lret
and
mov
imul
sbb
jp
fbld
sub
lret
sbb
adc
and
cli
das
adc
xor
out
sbb
jae
push
test
popf
mov
mov
cld
fildll
lcall
xor
or
sub
jmp
sbb
adc
test
je
mov
lret
in
xor
or
and
and
flds
bound
add
xchg
incl
dec
xlat
mov
push
or
pop
rorb
les
jg
in
mov
sarb
add
daa
add
sub
push
pusha
adc
cmp
loope
and
xchg
sarb
clc
jns
nop
out
out
jmp
add
fs
stos
jge
xor
sbb
add
adc
or
faddl
ljmp
mov
clc
jge
inc
mov
adc
and
mov
push
or
add
mov
lret
imul
lahf
cli
fdivrl
push
sbb
pop
daa
xchg
adc
push
ret
push
dec
fadd
pushw
inc
and
jbe
lcall
arpl
cmp
aam
movsb
sbb
leave
je
xor
xrelease
nop
cld
cmp
lahf
pop
jo
push
mov
ret
fisubs
popa
js
xor
and
add
cmp
cli
shlb
add
les
pusha
mov
sub
mov
icebp
or
mov
test
sti
add
inc
mov
and
dec
filds
mov
clc
jg
inc
gs
dec
pop
lcall
mov
das
xorb
mov
filds
shlb
add
xchg
lock
mov
add
es
dec
xchg
push
pop
or
es
sbb
adc
aaa
popa
movsl
lahf
aam
sub
sbb
push
into
les
clc
xchg
inc
pop
jg
movsb
mov
incl
mov
mov
out
adc
fs
jp
and
js
mov
cmp
add
les
fstpt
data16
call
test
pop
inc
repz
mov
scas
and
pop
inc
pop
mov
lds
mov
adc
bound
jg
sti
ljmp
mov
xor
cmp
jp
dec
add
sbb
fdivrs
or
inc
aad
push
cld
push
or
insb
dec
insl
test
lods
pop
and
xor
es
dec
ljmp
adc
mov
dec
adc
mov
and
jl
loop
mov
sub
sbb
xchg
mov
ficomps
and
loop
aad
add
call
jo
fs
in
xor
mov
test
mov
mov
add
inc
icebp
add
xchg
inc
and
xchg
pop
adc
imul
add
xchg
cmp
adc
xor
xchg
add
xchg
movsl
stos
lea
sbb
adc
outsl
mov
out
loope
add
sbb
aam
int3
pushf
mov
push
rcrb
adc
cmp
sub
lock
insl
add
xchg
decb
cld
dec
inc
insl
sbb
es
cmp
sbb
movsl
mov
or
add
xchg
push
jge
in
rcrb
jp
pop
mov
push
or
fdiv
aad
add
jmp
and
icebp
js
or
xchg
mov
lea
cli
cwtl
and
scas
add
in
mov
push
push
push
jb
add
rol
jg
push
insb
add
shl
or
xchg
lret
subb
cmp
in
pop
add
or
int3
cmp
adc
ljmp
and
andb
push
orb
movsb
lahf
or
movsb
or
mov
xor
xchg
sbb
jbe
adc
loop
mov
cmp
inc
inc
jl
push
sbb
dec
daa
stos
add
rorb
bnd
fwait
int
pusha
sbb
adc
dec
inc
sti
jo
ret
call
jb
xchg
fadds
inc
push
adc
jp
and
cmp
xchg
mov
cld
adc
aad
test
test
pusha
loop
pop
push
ds
scas
mov
add
mov
leave
mov
popa
in
flds
jecxz
incl
xchg
adc
add
mov
and
mov
push
pop
int
negb
shl
xchg
add
dec
jge
in
mov
sub
push
shl
fidivrs
sbb
mov
xor
dec
fistpll
xchg
adc
stos
or
lods
ds
adc
and
shrl
ss
iret
sbb
push
cltd
mov
aaa
std
and
cmp
inc
push
shlb
aaa
dec
and
incl
idivb
sbb
mov
jno
iret
jns
jg
sub
sub
adc
or
push
and
adc
sahf
pushf
hlt
xchg
test
add
pusha
test
out
repnz
cwtl
jle
adc
push
mov
xchg
arpl
cs
push
lds
mov
pop
sub
fs
xlat
aad
jbe
call
lahf
enter
cmpsb
pop
lock
dec
lahf
adc
aas
xorb
je
mov
and
sbb
bound
test
jbe
into
cld
mov
jbe
jp
push
movsb
push
and
movsl
mov
mov
adc
aad
ret
xchg
andb
cmp
mov
lea
inc
loop
add
mov
jp
push
shr
inc
mov
pop
pop
push
pushf
es
into
jno
mov
lahf
hlt
mov
xor
cmp
mov
xchg
inc
shl
mov
push
cmc
scas
jl
inc
inc
fldlg2
mov
sbb
xchg
mov
sbb
add
imul
cmpb
nop
or
out
jae
jg
out
pop
cs
clc
fwait
jle
je
xor
insb
aas
push
sbbb
cld
push
lcall
adc
jg
mov
and
cmpl
sbb
test
test
mov
movsl
sub
divb
jmp
xor
inc
rorl
sarl
insl
add
aaa
mov
or
les
sar
mov
adc
adc
test
ds
cmp
push
icebp
cmp
sarb
pop
sahf
inc
into
stos
jno
push
fdivs
add
or
test
js
addb
loop
sbb
push
dec
pop
sub
pushf
call
loope
mov
push
xchg
mov
adc
ss
adc
loopne
or
cmpsb
push
mov
adc
inc
jo
push
or
mov
add
inc
xor
jns
scas
ljmp
lds
sub
pop
lock
adc
mov
out
test
ret
and
aam
test
imul
mov
into
loope
pop
xor
insl
orb
inc
test
aaa
mov
imul
das
pop
mov
clc
rorb
dec
imul
push
aaa
cmc
mov
sbb
out
mov
jl
push
std
mov
mov
fdivr
shl
mov
sbb
lfs
subl
dec
push
push
std
dec
xchg
je
notb
push
mov
into
xchg
sbb
sub
clc
data16
or
adc
cli
pop
push
adc
lahf
mov
clc
fldcw
insb
ds
out
dec
jle
ljmp
add
ds
loop
call
clc
or
add
inc
test
mov
cmp
addr16
stos
mov
popa
div
xchg
fidivs
mov
fimull
or
cmp
fists
dec
int3
mov
jle
sbb
xchg
test
insl
sub
out
fbld
sbb
cmc
ret
xor
sbb
roll
xor
jno
push
test
shl
hlt
stos
dec
jb
jnp
loopne
ljmp
pop
arpl
add
repz
cld
jle
nop
hlt
add
push
fmuls
test
sbb
mov
mov
xor
or
push
loopne
jle
cmp
adc
push
mov
repnz
jmp
dec
jl
or
inc
fisttpl
push
push
pushf
fstpl
xchg
jnp
mov
dec
es
sahf
jmp
jg
outsl
aam
lahf
testl
jbe
jne
jp
lcall
decl
push
or
daa
pop
add
dec
or
sub
leave
xchg
scas
mov
mov
jle
shlb
stos
add
push
or
lods
mov
cmp
pop
cmp
cs
dec
and
mov
in
pop
adc
rcl
pop
jmp
adc
add
xor
nop
mov
outsb
call
stos
add
and
popf
lea
xchg
stos
dec
test
and
or
fsubrl
ljmp
arpl
mov
mov
jmp
inc
idiv
adc
je
imul
cs
loopne
mov
sbb
shl
cli
lss
es
clc
popf
scas
cmp
lock
stos
shr
fcoms
ds
inc
lahf
mov
test
pop
add
push
cmpsb
push
gs
mov
mov
into
pop
loopne
test
je
sbb
lret
decl
pushl
dec
pop
and
scas
negb
scas
push
std
shlb
or
fistl
pop
fidivs
stc
and
aas
je
pushf
xchg
aas
ret
pop
outsb
mov
add
or
int3
push
or
sub
stc
jbe
cmp
ss
ficoms
enter
sub
pop
mov
cs
push
in
shll
push
ss
jle
cltd
and
add
outsl
js
nop
jg
dec
mov
pop
mov
cmp
lcall
mov
loopne
rclb
testl
rcrb
and
ficompl
mov
sarb
out
adc
test
dec
push
popa
call
lods
or
sub
imul
mov
push
shrl
mov
fdivl
mov
and
fs
out
clc
pop
adc
jbe
ja
or
enter
mov
jl
pushf
jb
mov
fdiv
or
fnstenv
cmp
push
pop
rcrl
or
and
inc
inc
push
mov
mov
mov
das
jle
inc
mov
jno
fcompl
ds
inc
or
decl
fwait
or
call
xchg
xchg
iret
or
and
loop
and
adc
cltd
outsb
jge
or
sahf
cmc
je
push
hlt
nopl
ret
jl
inc
xchg
inc
lcall
hlt
icebp
mov
dec
and
sub
and
clc
and
jp
sti
mov
jmp
push
add
addl
je
test
lcall
imulb
mov
les
inc
inc
xchg
imul
lea
sbb
xor
jae
movsl
cmp
test
outsb
adc
fsubrs
enter
mov
imul
sbbb
xor
add
sub
cmp
mov
cwtl
decb
xchg
pop
aad
xor
inc
jbe
push
out
jo
js
cmpl
sub
and
mov
sbb
inc
xchg
rorl
inc
pop
mov
in
mov
xor
enter
out
and
add
sub
rolb
and
pop
cli
or
adc
scas
xchg
dec
mov
xchg
inc
inc
divl
insb
or
test
dec
mov
loop
fidivrl
fsubr
stc
push
sti
js
aad
add
mov
xchg
push
cmpl
hlt
sarb
mov
add
add
sahf
sbb
jmp
loop
mov
in
add
jl
lahf
rcl
pop
sti
test
push
sbb
icebp
adc
inc
out
mov
mov
push
jne
cmpb
xor
sarl
testb
inc
xor
enter
aam
lods
pop
fisttpl
jp
sbb
lcall
dec
ja
lret
stc
andl
mov
shlb
cmc
decl
sbb
dec
nop
ljmp
and
decl
xor
lods
shlb
fbld
sub
jbe
dec
sbb
les
push
push
lahf
push
mov
imul
andb
xchg
jg
inc
test
jbe
test
mov
add
push
inc
lods
mov
xchg
dec
xor
icebp
mov
push
jo
adc
mov
add
test
ja
arpl
les
ljmp
loope
jmp
fiaddl
mov
jmp
cli
je
adc
into
adc
out
adc
and
cs
cli
jg
sub
push
das
movnti
adc
mov
in
roll
jg
or
aaa
or
rcrb
dec
or
icebp
cli
xor
jne
inc
loopne
dec
scas
leave
jae
loope
jl
mov
jle
inc
or
dec
mov
aam
cmp
mov
xchg
xchg
cmpsb
movb
loopne
push
jnp
in
outsb
js
je
cmp
pop
inc
loop
inc
jge
stc
and
cmp
dec
jge
loopne
jp
std
jnp
xor
fldl
or
repz
shlb
mov
xchg
mov
out
push
sbb
adc
jmp
call
scas
push
enter
incb
sbb
dec
mov
pop
test
test
arpl
cmp
pop
shlb
dec
jp
ret
mov
dec
adc
add
jmp
loope
inc
add
mov
sbb
add
jmp
add
les
and
mov
hlt
pusha
ret
cmc
jg
lods
dec
lods
push
call
aaa
dec
cmp
add
sub
cmpsb
jo
mov
loopne
test
outsb
addr16
test
mov
pop
push
sub
add
mov
dec
pop
push
std
or
push
insb
jmp
mov
push
je
pusha
xlat
jno
or
lock
jne
push
dec
fbstp
push
mov
adc
and
ds
jle
sub
and
adc
ds
ljmp
push
and
jl
roll
std
xchg
inc
xchg
lea
fistpll
jecxz
mov
pop
mov
arpl
lods
and
stc
inc
sbb
cltd
ja
ljmp
sbb
dec
xchg
mov
adc
mov
fisttps
notl
subb
or
enter
add
mov
test
mov
fwait
and
xchg
sub
lock
out
adc
cmp
add
jle
cli
mov
or
or
sbb
jb
xchg
and
sub
movsb
jno
add
and
outsb
xor
sub
xchg
pop
addr16
std
xchg
lods
andl
mov
jg
sub
daa
add
int3
movsl
shlb
add
pop
cltd
pop
sbb
rorl
sbb
inc
js
and
dec
jle
pop
mov
inc
inc
adc
mov
mov
fwait
lock
call
pop
add
in
pop
xchg
rcrb
push
or
mov
or
std
repnz
sarb
dec
bound
lods
fildll
adc
sub
pop
pop
rclb
jns
lea
insb
jecxz
pop
inc
push
mov
lods
pushf
pop
jg
push
fwait
push
aam
aas
mov
cwtl
in
push
adc
sub
jl
ficoml
push
loop
ret
fnstenv
ljmp
scas
sbb
jb
adc
lock
sbb
stos
dec
mov
and
xchg
sbb
adc
inc
movsl
pop
mov
jp
fistpl
adc
sbb
mov
loopne
add
test
add
push
fs
mov
jecxz
cli
mov
in
daa
jmp
ljmp
out
fs
sti
aam
clc
pop
cmp
jg
imul
rolb
in
inc
test
add
sbb
rorl
les
sub
mov
cli
jno
add
adc
out
shl
mov
andb
lret
dec
push
lock
cmp
lcall
ret
out
push
or
cmp
mov
loop
add
hlt
ljmp
fwait
popa
xchg
and
pop
adc
xor
add
lock
test
cld
cmpsl
add
cmp
and
jae
mov
decl
mov
or
inc
out
add
cmp
fs
add
aad
push
lods
add
dec
out
ljmp
jmp
aas
shrl
sub
sbb
cwtl
das
and
jl
add
testb
pop
in
pop
mov
push
fbstp
test
in
sbb
je
mov
xor
cmc
cmp
xor
adc
test
pop
xchg
or
cld
and
push
inc
hlt
lcall
ret
fistpll
push
nop
in
push
aaa
sbb
adc
test
xchg
or
pop
imul
inc
in
outsb
xor
das
sbb
adc
push
push
xor
decl
jg
xchg
or
sub
stos
and
push
ror
jmp
loope
mov
pop
add
and
mov
sahf
mov
adc
mov
les
fisubrs
mov
int
scas
insb
lcall
adcl
cs
push
jg
loope
mov
mov
fildl
cli
mov
int3
sub
mov
xchg
insl
ljmp
push
shll
dec
xor
mov
sti
add
xchg
loopne
sti
or
daa
pop
or
shlb
mov
decl
pushf
xlat
sbbb
inc
fiadds
cmp
xchg
jecxz
push
call
sbb
push
push
inc
jmp
inc
popa
mov
mov
or
lock
leave
fprem
lcall
inc
js
add
mov
aam
add
imul
scas
dec
cmp
aas
push
mov
adc
mov
xor
in
and
inc
mov
mov
ja
and
icebp
call
inc
rcll
mov
leave
xchg
add
add
andb
push
mov
fistpll
inc
push
outsl
fs
ljmp
xlat
hlt
and
loopne
pushl
subb
rolb
add
and
adcb
ret
add
pop
sbb
bound
adc
jmp
mov
jmp
cmp
inc
std
cld
push
mov
daa
mov
mov
popa
sbb
rcrb
andl
inc
shll
outsl
js
outsl
aaa
stos
inc
out
stc
dec
mov
nop
in
mov
pop
inc
test
xor
push
jle
add
fadds
loopne
testb
sahf
loop
shrb
pop
repnz
mov
xor
lret
jo
je
xor
xlat
stos
fistpll
xor
xor
pusha
cmpsb
stos
or
mov
or
lea
mov
jmp
pop
push
mov
inc
inc
inc
mov
fadd
pop
test
add
test
lock
mov
xor
loopne
push
sub
inc
sub
adc
add
mov
or
enter
or
int
lcall
and
scas
test
pusha
ficompl
and
xor
mov
adc
cmp
jle
das
sub
jne
loop
pop
sbb
enter
test
in
scas
clc
jecxz
cmpsl
add
and
cmp
mov
test
add
cwtl
clc
xchg
mov
push
imul
push
cmp
fisubrs
clc
mov
mov
add
push
into
cli
lods
push
test
adc
fbstp
shll
or
or
pushf
and
inc
dec
in
lock
decl
ret
jmp
pusha
jp
xlat
sub
mov
xchg
mov
test
add
fistps
dec
mov
dec
mov
cmp
mov
sti
mov
xchg
mov
test
pusha
or
js
jns
xor
push
cmc
mov
lret
cmpb
sahf
insb
ret
jg
mov
add
push
cmp
xchg
ja
lea
loope
aas
lahf
fldenv
ss
pop
enter
fmuls
pop
scas
adc
stc
xor
mov
cld
repnz
jg
lcall
dec
shlb
push
and
mov
dec
jmp
xor
int3
inc
lock
cli
mov
sbb
in
add
cld
jl
push
mov
pop
jo
and
int3
inc
repnz
jbe
xchg
and
adc
push
mov
ret
rorl
ja
add
xsaves
push
sub
ret
add
xor
mov
add
pop
cmp
lods
mov
xor
push
jg
pop
outsl
in
fwait
sti
test
cltd
jecxz
xchg
jecxz
mov
dec
loopne
mov
in
scas
push
aas
and
js
mov
call
add
call
push
add
jp
xchg
adc
es
mov
sub
movsb
cmpsb
xchg
xchg
test
dec
mov
pop
mov
es
pop
icebp
inc
inc
es
je
cmp
xchg
and
subl
mov
mov
cli
repnz
mov
sbbl
loop
repnz
jb
cmp
dec
xor
inc
or
mov
sbbl
lods
fs
stos
push
pop
arpl
dec
xlat
pop
pushf
insb
or
call
inc
or
pop
mov
and
ljmp
push
data16
mov
dec
nop
sub
les
or
sbb
cmp
movl
inc
ret
jmp
and
xchg
push
mov
mov
push
insb
clc
mov
int3
add
cmpsb
push
arpl
adc
dec
aad
add
or
out
add
mov
push
clc
pop
adc
incb
sahf
mov
xorb
or
cld
cmp
sub
mov
push
xor
mov
dec
in
icebp
or
rorb
push
in
fucom
xchg
xor
loopne
std
fwait
add
es
xchg
nop
mov
ffree
sub
push
adc
pop
loop
xchg
shr
sbb
arpl
cmp
dec
push
xchg
ret
push
lcall
xlat
inc
mov
cli
shrl
lea
outsb
sub
cmp
clc
call
add
xor
adcb
cmp
xchg
cmpsl
xor
push
and
xchg
popf
xor
cld
jmp
and
popa
push
ljmp
lock
fstpt
jae
add
push
std
out
incb
repz
and
xchg
out
xor
xchg
mov
lods
xor
jb
fwait
sbb
loopne
test
roll
cmp
lcall
test
cmp
sarb
movsb
fcomps
jg
imul
cmp
inc
lods
mov
add
or
adc
sub
arpl
out
adc
push
ret
sbb
inc
int3
push
rcrl
dec
sub
pop
sbb
mov
mov
jle
dec
jp
xchg
push
clc
adc
xor
cld
add
pop
sub
xchg
shll
cmp
push
mov
fstpl
scas
add
inc
inc
pusha
insl
xor
mov
mov
jle
dec
jecxz
pop
or
test
jg
sbb
or
addb
or
inc
jmp
jns
stc
mov
and
add
push
insl
xor
dec
les
cli
pop
or
in
loope
jle
mov
pop
mov
fdivrp
and
push
mov
daa
push
add
xor
inc
jmp
cmp
inc
sub
mov
push
jl
or
pushf
ret
mov
and
or
mov
or
or
dec
cmp
rcll
push
dec
fiaddl
push
mov
pop
ljmp
push
nop
pop
fnstsw
fsub
mov
sbb
push
shlb
xchg
pop
or
les
lea
xor
jmp
testb
sti
nop
mov
loopne
aam
mov
daa
mov
es
fiadds
aaa
mov
pop
mov
push
movl
dec
adc
sub
in
in
test
movsb
test
loop
dec
adc
ljmp
or
add
push
movsl
ffree
mov
pop
dec
inc
loopne
mov
popa
lret
jb
mov
test
xchg
repnz
or
inc
fcmovbe
mov
fiadds
add
jo
sub
popa
sub
lods
std
scas
mov
popa
xchg
sbb
inc
mov
pop
fildll
push
and
sbb
mov
mov
pop
ret
add
stos
cmpsb
cmpb
sub
sbb
adc
dec
test
mov
pop
inc
dec
fsubrs
jl
mov
jb
xor
or
pop
into
mov
push
sub
sbb
bnd
dec
adc
ss
ss
sub
fidivl
outsl
pop
hlt
das
adc
add
add
daa
jb
clc
loope
inc
add
cs
xchg
jp
push
aas
or
call
sub
ret
mov
mov
add
jbe
dec
mov
pushf
or
xchg
ja
xchg
push
add
leave
rclb
stc
dec
mov
push
lcall
sbb
mov
jle
or
jle
and
or
sub
jne
test
cmp
aad
adc
push
jge
ss
test
jle
scas
jmp
mov
jo
mov
loopne
mov
push
push
nop
inc
movsb
lds
test
jns
inc
push
xor
jle
dec
cmp
pop
adc
adc
out
scas
ret
data16
lock
and
pop
aad
pop
pushf
xchg
add
and
sub
mov
pop
push
adc
mov
xor
add
cld
les
xchg
scas
cli
lret
cmc
add
test
mov
inc
imul
push
push
adc
jmp
cmp
std
ds
xor
mov
push
ret
and
hlt
jge
mov
add
orb
shrl
or
cli
lret
call
aas
jle
outsl
lock
cmpsb
or
pop
bound
pop
mov
scas
jb
pusha
mov
and
and
push
adc
rolb
inc
ret
mov
adcb
daa
jno
sbb
sbb
push
das
lea
cmp
adcl
lods
nop
aad
push
and
push
sbb
movsb
mov
movsl
insl
pop
shlb
push
push
lds
jle
adc
pusha
pop
or
int3
or
scas
inc
mov
mov
cmp
addr16
push
cmc
push
add
mov
jle
jbe
mov
sbb
dec
sub
aad
pop
rolb
ljmp
mov
xchg
mov
ret
js
or
push
or
push
cmc
xor
sbb
mov
stos
call
xchg
jle
cmp
push
mov
inc
jns
push
cmp
push
xor
push
jg
and
push
js
ljmp
mov
mov
rcl
and
or
add
xor
mov
movsb
cmpsl
outsb
push
insb
scas
in
sub
icebp
inc
adc
and
incb
ja
fstps
pop
push
sbb
fs
popf
movb
pop
popa
sub
inc
shlb
pop
adc
adc
call
xchg
cmc
adc
call
inc
and
clc
lcall
lcall
pop
adcb
lock
or
inc
inc
or
cmc
xchg
sbb
out
out
mov
inc
mov
sarb
cld
loop
outsl
fistl
xor
lods
ret
cmp
outsl
lea
dec
aam
push
scas
jbe
lods
add
out
dec
shrl
mov
mov
or
xor
clc
stos
cmp
or
test
jne
ja
sub
jo
push
movl
imul
dec
outsb
inc
ds
and
arpl
push
test
out
icebp
jle
and
adc
std
adc
movsb
test
xchg
or
sahf
add
cwtl
js
push
mov
outsb
sub
daa
nop
pop
mov
loopne
add
fnstcw
lock
inc
lds
cmpsl
shl
testb
sar
inc
xchg
push
test
shr
into
dec
mov
inc
pop
sub
repnz
inc
xor
push
mov
out
dec
adc
imul
mov
and
sbb
mov
jo
jmp
shlb
mov
or
mov
dec
pop
push
dec
pop
lock
pop
or
add
in
inc
inc
mov
add
cmp
cmp
out
aad
or
xchg
pop
xchg
push
shrd
cli
loop
in
sbb
adc
and
fs
stos
mov
push
jmp
mov
out
outsb
mov
jle
xor
push
icebp
xchg
enter
cmp
shrb
leave
in
idiv
icebp
mov
sahf
inc
int3
add
sahf
pop
in
rorl
adc
xlat
lea
push
inc
push
call
jmp
or
inc
lcall
ret
subb
lods
adc
xchg
jmp
inc
ljmp
scas
push
push
mov
sahf
mov
or
mov
mov
push
mov
cld
push
mov
pop
or
sub
mov
ffreep
sahf
sub
cld
or
xchg
xor
adc
icebp
pop
xchg
dec
cmp
add
cmp
mov
shlb
clc
mov
jg
jo
scas
mov
jmp
data16
sub
cmc
cmp
cmp
sahf
pop
orl
jmp
xor
cli
mov
out
pop
inc
xor
cli
and
and
fsts
mov
rcll
loopne
adcb
repnz
adc
mov
in
inc
pop
xor
ljmp
pop
les
ret
mov
xor
jnp
dec
mov
add
dec
push
xor
gs
call
test
pop
imul
push
bound
fidivrs
out
pop
popa
mov
push
insb
shlb
xchg
inc
mov
incb
ret
enter
xchg
loop
pop
movsb
and
push
pop
ljmp
aad
icebp
xchg
push
add
repnz
inc
push
xor
xchg
dec
shlb
xorl
add
scas
movsl
sub
cmc
and
sbb
jo
fcmovb
sti
pusha
dec
adc
out
nop
lcall
mov
ljmp
in
loopne
xchg
jmp
jo
sub
inc
pop
pop
insb
pop
jo
push
lds
push
in
ret
clc
fistl
imull
js
jmp
or
test
pop
aad
arpl
mov
pop
enter
lcall
inc
imul
cmp
cmp
add
sti
push
add
dec
xchg
lcall
or
lock
addl
xor
aaa
inc
inc
mov
lods
es
movsl
ja
push
ret
or
testb
xchg
lods
mov
xchg
lods
ss
xor
mov
pusha
rorb
pop
enter
sbb
pop
sbbb
scas
mov
out
xchg
xchg
cwtl
sti
movsb
add
sbb
lods
in
cwtl
mov
scas
negb
sub
or
xchg
js
test
dec
es
push
xchg
in
jne
mov
sbb
xor
jnp
inc
push
mov
dec
inc
sarl
push
mov
xchg
inc
imul
and
sub
sub
jle
clc
and
aad
inc
mov
add
sub
xor
cmp
jecxz
mov
es
mov
decl
clc
pop
push
lcall
xor
fstpl
pushl
and
jns
and
rcrl
bound
ljmp
clc
sbb
fwait
ja
das
notl
cmp
popl
aaa
bnd
std
jg
adc
add
stc
iret
fldcw
icebp
push
push
fwait
int3
pop
daa
add
stos
mov
sbb
cmpsb
data16
mov
sbb
inc
fisubrs
sub
fs
jge
mov
add
loop
loope
stos
shr
dec
mov
jl
xor
mov
push
mov
push
xorb
rcl
inc
push
fneni(8087
ss
movl
lock
mov
xorb
lods
pusha
mov
and
cs
mov
push
rorb
mov
add
pop
pop
out
jbe
cli
sbb
ret
outsb
loopne
xorb
add
dec
push
imul
dec
jae
sar
into
cwtl
jo
mov
mov
jg
and
andb
jl
clc
aas
std
rorl
into
push
dec
mov
mov
or
ret
or
pop
or
rcll
mov
add
insl
sti
cmp
push
add
mov
or
and
lcall
not
mov
xchg
sbb
lods
inc
lahf
unpcklps
or
subl
decl
and
cmp
out
jmp
add
test
adc
and
cmpsb
and
add
sbb
stos
out
dec
iret
mov
lock
ja
addb
xor
inc
mov
xcrypt-ecb
cmpsl
dec
dec
push
cmp
fsubrs
adc
pop
imul
pushf
aad
fsubl
aam
cmp
arpl
lcall
and
outsl
add
add
mov
xor
sub
push
xor
mov
ljmp
jg
aam
mov
pop
cs
xchg
add
stos
inc
push
push
adc
out
mov
push
add
push
out
dec
les
adc
int
push
subb
push
jb
mov
stos
pusha
rclb
pop
ja
out
xor
lds
enter
stos
insl
mov
out
fs
testb
iret
sti
pop
jp
popa
dec
add
out
xor
call
push
inc
push
pop
ja
jb
xor
lcall
adc
js
dec
mov
mov
pop
int
mov
pop
xor
add
test
mov
inc
mov
add
sbb
lret
shll
jo
shr
inc
mov
sub
mov
incl
mov
jg
addr16
jmp
mov
or
hlt
mov
jl
pop
call
mov
xchg
dec
cli
lcall
rolb
addl
test
mov
lods
test
cs
roll
mov
xchg
jb
add
adc
std
aas
lret
and
push
pop
jge
aas
add
out
clc
inc
push
repz
jl
mov
push
mov
mov
out
mov
enter
ret
sbb
dec
mov
das
js
jmp
add
pop
and
xlat
sub
bound
das
or
test
and
xchg
nop
jle
in
rorb
adc
lock
shll
lock
repnz
das
adc
hlt
add
inc
jg
jecxz
ljmp
push
cwtl
jg
adc
jo
sbb
sbb
adc
jb
aam
pop
dec
jecxz
ret
in
pusha
fwait
xchg
pop
bound
jo
pop
stos
mov
sub
decl
lods
fstpl
fdivrl
fdivr
inc
add
xlat
sbb
movsl
mov
sub
fwait
out
jmp
jno
inc
pusha
adc
out
aad
sbbb
inc
sbb
icebp
mov
or
sub
cmp
sbb
adc
clc
push
ss
sbb
cmp
jb
out
ds
mov
mov
cltd
add
jnp
jns
stos
clc
adc
adc
lahf
dec
notl
pop
push
push
fimuls
cmpsl
outsb
add
add
jmp
dec
imul
xchg
imul
push
mov
add
push
push
aas
ljmp
sbb
xchg
jecxz
jl
call
aas
incb
pop
fcoms
aas
cmp
pushf
and
jne
stos
imul
jo
das
bound
mov
push
dec
push
cmp
in
xchg
xor
sbbb
push
adc
mov
ror
lcall
cli
cli
sbb
loopne
add
pop
jg
and
mov
xor
and
mov
pop
ljmp
or
xchg
mov
add
mov
xor
decl
lods
loop
and
clc
or
je
daa
incb
jbe
mov
sti
add
cmp
lock
inc
loop
aam
add
jge
mov
xor
stos
push
or
push
jmp
call
add
add
xchg
inc
mov
xchg
hlt
jns
cli
icebp
xchg
fsubrs
lods
jmp
inc
add
mov
add
ss
pop
mov
scas
stos
xor
mov
mov
sahf
add
jle
and
cli
lds
cld
jp
pushf
adc
or
shlb
leave
mov
call
sub
loope
push
xor
mov
sub
sbb
fstps
fadds
dec
aad
xchg
cmp
push
cmpl
pop
das
clc
pop
in
daa
cmpsb
lea
fmul
mov
pop
mov
test
sbb
xchg
mov
int3
faddp
sub
dec
inc
lahf
jp
lcall
inc
and
mov
lcall
lock
clc
aas
inc
cwtl
mov
hlt
pusha
xor
jo
mov
add
sbb
loope
dec
aam
cli
pop
test
xchg
cmp
dec
sub
dec
add
mov
fcoml
push
mov
add
lcall
push
mov
ret
dec
xchg
testb
daa
xchg
mov
sbb
rol
jp
not
mov
adc
dec
cmp
aaa
pop
jb
mov
es
data16
ljmp
adc
pop
and
push
dec
lock
or
dec
out
xchg
jp
mov
or
cmpb
fnstcw
ja
int3
xor
pusha
pop
mov
mov
pop
add
sub
xchg
aad
sbb
and
xchg
loop
cmp
push
dec
clc
add
pop
cmp
pop
cli
popf
stc
and
or
xor
mov
sbb
xchg
jp,pn
nop
js
jle
hlt
mov
adc
cmpsb
test
imul
test
ljmp
ja
repnz
and
data16
mov
std
movsb
jg
cvtpi2ps
addr16
jecxz
jmp
test
lds
cltd
lock
mov
cs
ljmp
mov
add
inc
pop
stos
mov
test
jne
fldcw
xchg
adc
ja
cld
dec
rclb
stos
inc
dec
insb
popf
and
fmuls
and
mov
leave
sbb
std
add
xchg
fcompl
cwtl
shll
arpl
or
addr16
add
lea
jmp
hlt
cmp
jne
push
mov
mov
dec
mov
adc
loopnew
or
sbbb
xchg
push
jb
mov
pushf
adc
jg
xchg
imul
add
and
xchg
inc
push
subl
into
jl
mov
in
dec
jl
hlt
mov
stos
daa
fs
add
pop
add
mov
sub
push
xchg
repnz
dec
push
cmc
mov
ds
sub
mov
cwtl
lods
xor
mov
clc
cld
popa
jne
das
sub
les
pause
adc
sub
movsb
cmpsb
jle
push
movb
in
test
and
loope
arpl
lcall
aas
cmp
xor
sahf
ret
in
lea
sub
jp
sub
add
mov
lock
pushf
or
add
xor
sar
add
ret
xor
shll
stos
pusha
xor
fucomp
ljmp
clc
ja
push
dec
cwtl
dec
loop
pop
fidivrl
or
push
lcall
clc
add
add
loopne
pop
adc
andl
pushf
sbb
xchg
pop
mov
adc
push
es
dec
inc
pop
cmp
cmp
inc
add
iret
dec
inc
and
xchg
mov
lods
push
and
pop
and
add
jmp
mov
fwait
enter
aad
mulb
sbb
pushf
sbb
mov
mov
incb
leave
rclb
outsl
mov
xchg
push
movb
push
frstor
stos
sti
pop
inc
add
mov
cmp
fidivl
sbb
bound
sbb
jecxz
lods
sub
in
sbb
icebp
or
jle
outsb
pop
xor
xor
mov
stos
push
dec
insl
movsb
aaa
pop
mov
jo
ds
mov
into
push
call
fcomps
or
add
into
xor
imul
or
fsubs
or
into
in
or
pop
mov
mov
and
push
cwtl
jbe
xor
daa
pop
cmp
hlt
inc
stos
mov
add
fidivrs
add
mov
jecxz
rorb
jbe
dec
das
pop
decl
nop
loope
insl
push
pop
mov
nop
dec
jae
cmc
ds
and
xchg
xchg
or
jl
das
or
divb
aad
xchg
cmpsb
adc
inc
or
mov
sti
inc
out
adc
fldcw
adc
decb
data16
pop
sub
mov
jne
add
adc
stc
mov
adc
push
out
mov
cmpsb
push
push
pop
mov
jbe
pop
jmp
mov
clc
scas
push
incb
lcall
mov
jns
adc
mov
lcall
cmpsb
push
rclb
mov
mov
scas
shlb
sbb
sar
dec
sahf
xor
add
push
inc
push
scas
out
cld
mov
orb
rorb
fiaddl
push
bnd
pop
lods
cmpb
sbb
push
xor
cmpsb
out
outsl
rolb
lods
xor
mov
push
cmpsb
icebp
arpl
add
clc
cmpsl
jecxz
je
addb
cs
fcmovnb
ljmp
inc
hlt
inc
idivb
in
mov
test
ds
inc
popf
sbb
sub
ret
mov
mov
les
pop
push
enter
sbb
add
jnp
inc
adc
cs
sbb
and
ljmp
fidivrl
aaa
int3
adc
aad
xchg
hlt
scas
loope
stos
ljmp
out
movsl
xchg
les
das
xchg
sbb
inc
mov
xor
or
or
add
inc
inc
push
aad
xchg
stos
rcrb
stos
mov
call
or
lret
ljmp
add
add
nop
insb
jne
inc
add
add
jne
mov
stos
notl
add
mov
subb
xor
inc
inc
cmc
testb
lds
rolb
mov
xlat
mov
into
sarl
sbb
faddl
pop
sbbl
and
xchg
clc
push
push
cmp
mov
stos
repnz
mov
push
aas
loopne
mov
mov
pop
mov
add
adc
test
xchg
insb
aas
add
pop
icebp
stos
and
mov
into
int3
jl
jns
mov
adc
in
les
mov
or
push
lahf
sbb
enter
rcrl
sbb
or
pminsw
push
ret
add
push
mov
mov
xchg
movsl
add
mov
nop
push
les
and
enter
icebp
sbbb
inc
ret
jp,pn
mov
ss
repz
push
rcr
push
shlb
fidivl
in
andb
dec
std
movl
mov
push
ret
ds
test
inc
and
dec
mov
lret
roll
rclb
rolb
pushf
mov
fdivrp
pop
icebp
nop
nop
lret
pop
test
inc
push
pop
mov
es
in
sub
insb
push
jnp
jl
cmp
mov
mov
movsl
test
in
jmp
add
pop
xor
fisttps
mov
dec
or
pop
jecxz
std
mov
das
out
push
dec
jp
dec
sbb
icebp
xchg
push
enter
les
orl
clc
in
popa
nop
jne
mov
sti
fadd
mov
push
jecxz
lock
xchg
add
mov
mov
sub
xchg
and
int
aas
fimuls
pushf
mov
nop
mov
mov
mov
inc
sub
out
jno
adc
popa
mov
mov
mov
mov
pushf
sbb
and
xchg
add
jecxz
sub
jns
enter
inc
sbb
ja
mov
repnz
push
jno
sbbb
test
dec
insl
cld
fildl
or
and
aad
fst
cwtl
pusha
jecxz
cmp
pop
and
mov
fs
or
add
inc
or
ds
add
fwait
mov
fs
out
cmpsl
clc
sbb
cld
stos
incb
roll
xorb
mov
add
adc
ljmp
lret
in
mov
cmp
jge
test
insl
shll
jo
xor
and
jnp
inc
and
int3
sbb
mov
ljmp
mov
outsb
pop
mov
movsb
dec
mov
xor
loop
add
adc
arpl
inc
xor
mov
add
or
cltd
inc
jg
mov
and
mov
dec
and
xor
cmp
movsl
adc
fmull
inc
mov
jg
push
mov
fmuls
or
ljmp
add
bound
pop
shl
testb
cltd
cli
inc
nop
lahf
add
scas
add
and
or
fcompl
mov
dec
dec
cmp
jbe
sbb
out
pop
adc
pop
adc
mov
cmp
lea
es
or
lock
xor
enter
and
inc
pop
clc
dec
xor
jl
push
lds
mov
and
push
mov
ds
cmp
cwtl
jle
lock
push
fisubs
mov
fxch
dec
scas
mov
fisubs
add
push
aam
fdivs
pop
mov
cmp
inc
inc
call
stos
sbb
pop
sbbb
jle
inc
cs
xchg
push
std
addl
jecxz
pop
je
mov
pop
bound
enter
test
scas
adcb
push
in
cmp
lret
and
pop
jns
repnz
int
pop
mov
fmull
je
dec
jle
pop
insb
pop
jg
ret
fnsave
jnp
jg
ds
sub
dec
pop
sbb
mov
push
mov
js
inc
movsl
out
rcl
adc
xor
or
push
ja
cmc
add
pop
add
fwait
add
jmp
push
sub
shl
sbb
inc
jecxz
sub
subl
outsb
out
ret
sub
or
insb
movsb
jecxz
sub
or
add
lret
push
ds
nop
add
insl
mov
dec
xchg
xchg
cwtl
aaa
test
mov
or
inc
sbb
clc
or
prefetchw
jl
mov
or
or
pop
leave
fistps
fwait
dec
push
add
sti
inc
js
or
inc
and
push
cmp
add
mov
jno
movsb
xchg
dec
je
lods
fcomi
pusha
movsb
leave
mov
add
loopne
dec
inc
jecxz
test
adc
add
loopne
out
clc
cmpsl
fdivrl
or
inc
cmp
pop
pop
jp
xor
into
pop
and
jg
lods
clc
popl
testb
cmp
jbe
sbb
dec
ss
movl
xchg
xchg
lret
icebp
mov
testb
fwait
add
sub
sub
cmpsl
add
inc
xor
jecxz
stos
hlt
cmp
loopne
addb
adc
shll
push
push
movsb
loope
lcall
mov
inc
pop
je
lods
ret
or
inc
jbe
add
push
pop
push
mov
and
mov
pop
call
fimull
insl
inc
xchg
xchg
dec
ds
adc
loop
mov
adc
mov
mov
ja
mov
pusha
les
cmpsl
inc
imul
lock
into
js
insl
fs
ds
jmp
movb
ficomps
clc
mov
es
mov
mov
and
push
mov
lret
lcall
je
icebp
xchg
adc
std
sbb
sub
sbb
popa
mov
and
cli
mov
jbe
adc
push
daa
sub
std
xchg
out
push
sbb
ss
xor
adc
cmc
aas
ljmp
mov
add
and
push
pop
lock
pop
inc
sbb
or
inc
js
fwait
test
and
jnp
int
test
js
or
push
in
addb
cli
fs
or
out
xchg
test
jge
cwtl
xor
lea
and
add
push
push
or
xchg
xchg
xchg
movsb
addb
scas
in
daa
imul
lock
ret
aad
std
mov
add
adc
jmp
out
xchg
dec
ret
or
add
imul
sub
fisubrs
pusha
cli
stos
sbb
aam
or
xchg
repz
test
lret
jp
push
unpckhps
jecxz
cld
pop
gs
ljmp
imul
pop
bound
push
push
std
dec
pop
aaa
testb
mov
js
fwait
xchg
in
lock
pusha
mov
je
inc
jo
loope
cmp
mov
dec
xor
pop
adc
mov
add
add
push
outsb
rorb
arpl
les
in
repz
ss
fcom
mov
xchg
cmp
scas
adcb
in
mov
lret
inc
or
jne
jl
cltd
cmp
pop
sbb
jle
sbb
xchg
xor
scas
cmp
adc
daa
mov
mov
icebp
mov
rolb
cld
ljmp
mov
pusha
das
push
lock
cld
add
mov
or
nop
jbe
cmp
mov
sahf
insb
pop
xchg
pop
repnz
pop
cmp
inc
mov
pusha
shll
mov
movsb
push
cli
fsubl
xor
lods
fistpll
jg
mov
ficomps
adc
js
movsb
adc
jns
arpl
add
das
ljmp
imul
jg
dec
sbb
jb
cmp
push
jl
pop
insb
mov
pushf
mov
shll
inc
repz
mov
stos
insb
cld
pop
insl
sub
es
test
xor
mov
dec
inc
cs
outsb
icebp
in
mov
lock
pop
dec
push
xor
stos
or
cli
sbb
sbb
ja
ret
jg
je
fildll
mov
jl
mov
aam
add
lock
jb
sti
outsl
sub
pop
shlb
arpl
inc
mov
shrb
mov
cmc
or
and
mov
cmpb
movl
arpl
ud0
rolb
mov
arpl
inc
div
mov
cmpb
decb
jge
and
aas
or
inc
out
aam
movsb
sub
jne
mov
sbb
xchg
inc
lds
add
jl
aas
ret
pop
out
std
jle
inc
xchg
mov
inc
push
jecxz
or
cmp
lds
lods
movsl
outsl
les
and
cli
dec
jne
dec
mov
loopne
xor
adc
mov
jle
lods
adc
add
dec
xchg
inc
or
and
and
add
es
loop
in
lahf
es
and
mov
test
inc
mov
idiv
stos
lock
or
cwtl
and
add
cmp
push
xchg
xor
pushf
xor
incl
jnp
mov
pop
inc
and
cmp
adc
test
inc
das
ss
or
push
mov
incl
in
pop
dec
pusha
pop
sub
jge
pop
mov
jg
jge
mov
call
pop
mov
dec
movsl
dec
xchg
incb
aam
push
mov
inc
out
xor
add
pop
or
and
mov
push
mov
movsb
and
adc
stos
xchg
pop
outsl
jmp
push
ljmp
scas
cmp
ljmp
sub
mov
dec
mov
adc
xor
mov
test
lcall
and
cmp
xchg
mov
cmp
or
clc
call
inc
sbb
cld
pop
mov
pop
fadd
dec
fld
aad
push
adc
mov
mov
jg
andl
dec
out
inc
pop
es
ljmp
or
pmovmskb
push
adc
mov
call
sub
xor
jle
fcoms
push
mov
xchg
push
mov
jmp
cmp
adc
mov
jg
xor
and
aaa
sbb
data16
pop
or
popa
pop
jecxz
cmpl
int3
xchg
mov
push
push
or
call
iret
xchg
cld
xchg
add
mov
mov
add
imul
add
xchg
cli
inc
data16
cmp
push
jns
mov
lock
cmpsb
icebp
adcb
aam
and
lcall
xor
fwait
nop
mov
dec
js
stos
jg
mov
and
or
arpl
lds
jecxz
xchg
adc
jecxz
adc
int
xor
int
cmp
pop
lock
cmpsb
mov
inc
mov
fdivr
xor
sbb
outsb
jg
lods
add
stos
int3
imul
xor
cmpsl
pop
mov
mov
sub
cmc
lret
push
pop
pop
popa
mov
pop
mov
dec
push
repnz
push
add
sbbl
jp
sbb
mov
rolb
test
dec
fiadds
mov
fisttpl
xor
push
or
lods
lock
in
push
jo
fiadds
push
inc
sbb
or
jb
add
pop
mov
adc
outsb
ret
mov
push
pop
jp
in
xor
mov
fmull
inc
mov
inc
or
repnz
lret
lret
inc
mov
inc
add
dec
stc
js
loopne
lea
jecxz
int3
out
sbb
cld
data16
or
jp
push
mov
notb
js
rorb
sub
sbb
jbe
inc
js
push
nop
mov
adc
cmp
xor
push
cwtl
or
or
mov
and
cltd
inc
pop
mov
add
in
sbb
loopne
xor
mov
enter
inc
cmc
lods
shrb
mov
or
in
cmpsl
aad
test
xor
cmp
movsl
xchg
xor
cwtl
add
lds
insl
pop
call
dec
push
sub
inc
clc
aad
fimuls
fwait
jle
sub
bound
push
mov
mov
lret
xchg
in
jno
push
push
mov
lods
lret
jg
push
push
inc
xor
repz
sahf
sub
out
lret
pusha
or
aas
jmp
sbb
fisttps
xlat
and
movsb
lret
and
or
pop
les
sbb
stos
or
insl
mov
into
add
pop
hlt
dec
mov
sbb
add
out
test
bound
ret
arpl
xchg
mov
inc
cmp
adc
in
testb
leave
cli
inc
ljmp
subb
dec
add
fs
and
mov
stc
cmpsb
fmull
arpl
ljmp
add
call
stos
cld
push
add
outsb
test
subl
sub
loope
fs
and
movsb
loopne
cmpsb
je
sahf
pushf
inc
dec
rorb
mov
add
shl
call
mov
inc
mov
daa
out
add
cld
sub
out
mov
jle
push
in
repnz
cmc
or
inc
rorb
test
adc
int
xlat
inc
mov
mov
insb
test
xor
out
fdiv
xor
in
js
dec
xor
hlt
scas
subb
das
pop
fsubrl
adc
adc
int
lods
hlt
lcall
dec
fiaddl
cmpsb
lcall
add
mov
aas
jg
inc
jnp
fcmovnb
addps
xor
and
outsb
cmpsl
repnz
mov
imul
fsubrs
pusha
xor
mov
push
jecxz
cmp
mov
rcl
test
push
mov
andl
imul
xor
rolb
incb
stc
test
test
adcb
jp
pusha
clc
iret
add
mov
movsb
cld
mov
adc
cmpl
shll
mov
and
cmpsl
pop
xchg
pop
and
dec
insl
aas
mov
xchg
divb
inc
push
fs
decl
sub
sbb
and
mov
loop
scas
fwait
adc
cli
cmp
imul
dec
xchg
mov
pop
hlt
pop
dec
fstl
dec
jne,pt
sahf
adcb
cli
mov
push
xchg
test
ja
nop
stc
std
mov
movsb
fists
dec
jmp
adc
pop
mov
ja
hlt
jecxz
add
dec
lock
pushf
cli
jbe
sahf
pop
sbb
mov
loopne
stos
xchg
loopne
mov
sub
mov
loope
outsb
add
lock
pushf
in
push
std
out
clc
dec
push
imul
daa
es
lock
xchg
cmp
mov
jg
dec
xor
push
movb
sbb
dec
adc
inc
fadds
movsb
adc
movsl
xor
pushf
arpl
pop
fists
bound
insb
sbb
test
add
xchg
popa
pop
ds
rorb
mov
rclb
pop
std
out
inc
aas
jno
roll
adc
test
mov
clc
test
addr16
nop
stos
shrb
out
or
push
pop
or
jge
mov
cmp
xchg
push
pusha
icebp
testb
cs
fsubr
cmp
pusha
mov
inc
mov
adc
outsb
mov
call
add
add
jae
ds
mov
xor
js
nop
idivb
outsb
out
sub
push
cmp
je
push
push
lcall
sbbl
xchg
pop
add
in
push
or
scas
cmp
je
dec
pushw
les
adc
mov
in
lock
pop
adc
sub
sbb
dec
scas
mov
ret
fwait
mov
inc
stos
into
inc
jmp
hlt
call
inc
fsubrl
sub
and
cli
clc
lahf
call
mov
jne
mov
sub
icebp
les
cmp
cli
dec
and
lock
ficompl
mov
cmp
mov
dec
fisubrl
in
clc
test
mov
int
add
jp
lds
mov
xchg
ds
andb
cmp
cmpsb
or
or
mov
adc
cmc
mov
shlb
xchg
inc
adc
andb
or
cwtl
xor
xchg
nop
sbb
xchg
mov
ss
adc
lahf
xchg
pop
rcrb
jbe
dec
xchg
sub
add
add
test
add
lret
mov
fildll
inc
adc
lret
pop
rcrl
loop
nop
cmc
les
std
sub
or
cmp
cmp
inc
sub
and
loope
into
xchg
lods
adc
or
popl
dec
pop
mov
dec
cld
jl
inc
inc
and
add
pop
fstpt
jb
push
ret
ret
iret
int
lock
mov
or
dec
push
pop
cwtl
bound
or
push
and
fwait
xor
and
mov
pop
push
mov
and
les
call
push
out
mov
outsl
scas
cmp
cld
sbb
fdivrl
das
test
cmp
xor
je
pop
mov
popa
dec
pop
les
adc
unpckhps
nop
nop
push
jae
jl
das
imul
test
lods
mov
adc
add
pop
mov
ret
mov
add
pop
mov
loop
sbb
xchg
lahf
and
xchg
loop
les
stos
xchg
in
rolb
mov
arpl
into
pop
inc
pop
push
inc
mov
or
jmp
jne
scas
xorl
and
cmc
mov
cmp
jae
shlb
pusha
jp
inc
jns
mov
arpl
jle
lret
cmp
ret
sub
inc
mov
jg
les
stos
clc
sub
or
mov
inc
jmp
xchg
shrl
jns
les
push
aad
pusha
call
mov
aad
mov
push
subb
inc
idiv
or
sub
mov
mov
cmc
push
dec
jb
cmc
fdivr
aam
mov
mov
and
inc
and
lds
xchg
xchg
push
shlb
insb
inc
cmp
ljmp
je
xor
mov
push
stos
sbb
and
pop
or
es
shrb
or
and
jbe
mov
ljmp
repnz
xor
daa
js
push
lods
xchg
shll
std
stc
add
pop
je
flds
mov
mov
bound
add
sti
loope
mov
inc
jl
aam
pop
ds
or
inc
push
mov
xor
pushf
cld
mov
ret
xor
inc
clc
push
jg
leave
cwtl
xor
cmc
and
cltd
jmp
sbbb
int
lahf
or
xor
fwait
aam
test
loop
pushf
and
andl
adc
outsb
inc
call
inc
adc
sub
lods
out
lret
pushl
and
and
pop
scas
jmp
xchg
mov
pop
lds
call
xor
filds
movsb
mov
movsb
pop
ret
repz
test
fdivp
insb
popf
inc
xor
cmp
enter
mov
jge
lret
into
in
mov
dec
inc
aaa
jecxz
imul
into
les
outsl
popf
das
xor
mov
stos
sub
test
sbb
rcr
insb
mov
sub
stos
outsb
fisubrl
push
cmp
addb
sbb
pop
call
push
stos
cmc
mov
sahf
mov
mov
cld
adc
inc
mov
and
sub
or
mov
cmc
pop
sub
add
jb
mov
mov
push
shll
inc
jl
in
inc
dec
setbe
ss
add
pushf
ljmp
adc
inc
dec
jl
and
cmpsb
add
pop
jl
in
jb
out
sub
add
push
adc
and
les
pop
push
imul
aaa
shlb
mov
push
sbb
mov
aas
popf
push
jg
cmpsb
xor
mov
rorb
addl
dec
or
inc
cld
pop
lea
xor
dec
test
xorl
adc
loop
push
jg
adc
push
push
out
addr16
pop
cmc
ja
fsubl
or
xlat
sahf
mov
xor
sub
lods
inc
xchg
xchg
ljmp
shlb
test
ljmp
nop
enter
inc
pop
push
test
jb
inc
movsb
inc
inc
insb
dec
jmp
leave
fldt
cmp
cmp
inc
or
inc
sbb
popa
sbb
out
pop
adc
fwait
sahf
sbb
push
inc
pushf
cmc
pop
jbe
test
adc
add
pop
call
rorl
push
adc
rcll
test
mov
mov
decl
mov
sbb
mov
mov
sarl
and
cmp
popa
cld
mov
cwtl
loope
lret
pop
bound
dec
sbb
push
jecxz
sub
mov
int3
les
gs
movsb
subb
push
movsl
push
mov
scas
mov
or
shl
add
xchg
je
fldcw
dec
aas
ret
mov
das
or
clc
cmpl
inc
fsubrl
mov
cmc
add
xlat
in
inc
inc
add
inc
adc
add
test
fcompl
bound
add
aad
mov
add
cmp
shl
jg
mov
incb
aam
mov
lahf
fidivs
movsb
push
loop
lret
popf
das
jnp
xchg
inc
jg
jbe
in
pusha
std
pop
push
mov
pop
dec
lea
mov
jns
sbbb
ret
fidivs
std
mov
mov
inc
add
sti
test
mov
add
insb
movb
aas
loop
pop
inc
cmp
pop
push
pusha
ret
pop
testl
add
int
mov
aad
or
cmp
inc
sbb
faddl
aad
sub
mov
loopne
mov
imulb
mov
or
lods
and
cmp
cmpsb
push
dec
mov
sbbb
jecxz
mov
or
in
pusha
xor
push
stc
xor
fisubs
add
push
outsl
mov
js
pop
insl
jecxz
dec
insl
lahf
cwtl
fistpl
sub
das
dec
jl
mov
inc
decl
add
xor
pushf
xchg
cmp
pop
out
inc
insb
jl
xor
inc
push
inc
inc
test
xor
arpl
test
xor
xor
mov
push
repz
inc
mov
or
divb
mov
sbb
cmpsl
lock
xchg
and
mulb
dec
movsb
adc
sbb
or
mov
repz
aaa
xor
sub
xor
int3
es
sbb
jae
dec
das
lods
mov
loope
add
cmp
adc
outsb
inc
xchg
movsb
lret
adc
inc
push
or
fisttps
lods
push
das
pop
xchg
inc
xor
mov
pop
decb
mov
jns
sbb
jo
cld
pop
rcr
pop
scas
mov
cs
insb
pusha
hlt
out
movhps
push
sbb
cltd
aad
xchg
jns
xor
in
mov
ret
xor
adc
inc
dec
push
icebp
addr16
add
or
sbb
enter
lret
or
call
repnz
jg
mov
inc
pusha
vpmacsww
out
lcall
outsl
enter
sbb
pop
push
or
cmp
nop
add
std
pop
pop
js
lea
xor
push
frstor
lret
in
mov
loopne
mov
mov
pop
or
push
mov
int3
cli
push
or
mov
pop
mov
cmc
mov
mov
adc
lock
mov
jbe
roll
xchg
adc
pop
or
push
adc
sbb
lcall
xor
dec
cmc
daa
cmp
repnz
clc
outsl
add
aam
jno
cmp
pop
adc
rorb
adc
and
rorl
sub
mov
mov
xorb
cmovs
or
pop
mov
adcb
cltd
pushf
adc
push
mov
jbe
rolb
ja
mov
xchg
call
add
aad
pop
movsl
ds
js
loop
add
lods
es
cmp
arpl
sbb
test
xor
jmp
loope
fidivl
sarb
dec
add
insl
sub
scas
xchg
movsl
sar
int
mov
sahf
sbb
lret
mov
arpl
data16
push
xchg
test
dec
ret
call
push
push
or
mov
mov
rcrb
xchg
push
push
idivl
loop
loop
sub
cltd
fsubl
add
cli
cmp
adc
int3
push
mov
orb
add
cli
inc
cmpsb
fcoms
mov
cmpb
inc
push
rorl
mov
push
cli
dec
addb
inc
rclb
mov
sbb
mov
or
sbb
xor
mov
pop
ss
out
push
lret
add
mov
pop
cld
pop
and
sub
xor
jmp
jb
pop
and
mov
mov
add
add
or
push
mov
pop
frstor
test
cmp
xchg
ja
push
dec
cmp
decl
out
jb
sbb
xchg
add
sahf
sbb
clc
loope
add
daa
ljmp
jg
mov
add
iret
push
adc
ficoml
int3
push
gs
es
popf
push
cmp
lods
mov
dec
mov
push
push
mov
hlt
popl
in
adc
push
mov
lret
loope
lods
jg
jmp
push
test
push
or
fisttps
movsl
imul
shrb
pushf
mov
pop
jne
fcomp
mov
les
mov
decl
pop
mov
lods
addb
xchg
sub
and
push
pushf
mov
mov
fcompl
or
lret
mov
pop
call
jae
jo
sbb
add
jp
and
sub
push
inc
sbb
push
jmp
addr16
arpl
push
mov
sbb
jge
call
cwtl
hlt
add
sbbb
push
test
lds
mov
rorb
int
sub
inc
jge
fsub
dec
or
shlb
xchg
ret
xchg
clc
fiadds
test
rcrb
pop
imul
push
ds
imul
call
add
rcrl
lret
sbb
cmc
adc
fdiv
je
mov
hlt
les
sbb
sbb
xor
and
aaa
push
mov
xor
adc
call
push
pushf
inc
nop
out
inc
jge
push
jbe
or
sub
adc
adc
adc
adc
add
inc
push
dec
call
mov
outsb
mov
addl
call
pop
bound
pop
inc
mov
mov
je
stos
dec
mov
cmc
dec
sub
jne
push
ljmp
std
add
push
pop
or
inc
fdiv
cmpsl
rolb
cmp
inc
mov
jle
addr16
fcomi
paddd
nop
fwait
or
clc
imul
jp
and
jl
and
mov
ds
push
in
adc
xchg
dec
mov
and
mov
mov
adc
mov
xchg
lock
xor
mov
jl
loopne
cltd
negl
iret
mov
sub
dec
shrd
inc
jl
popf
add
shr
jg
pop
ss
xor
jo
stc
fcoms
addr16
inc
and
lods
mov
dec
push
sarb
pop
int3
popa
pop
cmpb
cld
ljmp
lock
dec
data16
cmp
adcb
push
mov
mov
pop
js
bound
divw
sar
aad
cld
pop
bound
loop
jnp
test
cmp
push
inc
test
push
movb
mov
test
scas
sbb
lods
mov
es
bound
or
jae
cmp
mov
jo
fnsave
pop
repnz
shll
sbb
nop
push
bound
adc
adcl
xchg
inc
ret
mov
mov
cs
ficoms
movsb
mov
inc
ljmp
or
cmp
jbe
jmp
shll
cmp
pop
cmp
inc
cld
adc
roll
movsb
or
sbb
inc
mov
or
sbb
or
and
and
pop
orl
mov
aas
orb
jb
or
adc
jp
push
pusha
and
out
fistps
std
sub
popf
xchg
inc
mov
arpl
cmc
mov
push
mov
sti
fcomip
mov
out
shlb
lock
xor
cmpsl
cld
add
mov
jle
push
stos
push
roll
adc
xchg
lea
inc
push
mov
sub
jns
sti
adc
dec
jno
fimuls
mov
add
fsubl
faddl
ret
mov
lock
std
popf
mov
inc
rcrl
cmpsb
inc
popa
pop
aam
jp
cmpsl
cmc
jle
gs
mov
push
sbb
pushf
push
mov
lea
loop
aas
add
sub
mov
std
sbb
jb
push
pop
loope
lea
and
mov
lds
and
call
inc
ja
pop
orb
pop
shlb
leave
sbb
lods
sbb
shll
ss
in
in
mov
jns
scas
out
inc
mov
mov
mov
ss
cld
outsl
sub
mov
mov
jo
out
xchg
loope
pusha
mov
xchg
lret
mov
xor
pop
fs
out
mov
cmp
stos
fildll
and
lods
sub
inc
movsb
faddl
push
and
inc
loope
testb
mov
sbb
fdivrl
or
dec
sub
mov
jg
fldcw
pusha
es
mov
pop
test
jg
mov
pop
jge
popf
mov
sbb
fnstenv
mov
mov
add
into
sub
sarb
data16
jb
xor
enter
xor
adc
jecxz
test
or
outsb
mov
out
in
mov
adc
add
sarl
push
pop
jmp
lock
cmp
jbe
or
jmp
test
test
push
sbb
out
fcompl
pop
adc
stos
orl
lock
mov
cmp
xor
jecxz
out
dec
xchg
jecxz
push
pop
push
cmp
push
push
test
sahf
bound
aam
push
jnp
test
mov
sbb
cmp
fwait
pop
jno
rcrl
and
lock
cld
ret
sbb
xchg
adc
or
rorb
fidivrs
mov
scas
pusha
flds
sub
ret
decl
repnz
jge
mov
pusha
stc
mov
pushl
test
testb
and
dec
push
cmp
sbb
dec
and
mov
mov
test
push
pop
pop
ficoml
fisubrs
ret
std
mov
xor
sti
stos
ja
add
lock
and
in
inc
xchg
adc
ljmp
pop
rorb
and
lcall
cmpb
shll
cmp
out
sub
gs
test
es
cmp
or
push
pusha
pop
ss
stc
push
fcoms
add
mov
or
sub
inc
ret
andl
pop
fbstp
mov
mov
fmul
and
xchg
mov
clc
mov
cld
iret
add
jecxz
pop
cli
jmp
xor
cwtl
push
sti
add
mov
push
outsb
ror
fsubrp
xchg
fisubs
mov
inc
adc
adc
rcr
and
cmp
jns
stos
jo
dec
lcall
inc
inc
mov
push
mov
inc
jmp
loop
stos
bound
call
xor
les
insb
movsb
int3
adc
add
xor
cmp
and
sbb
rol
dec
xor
lods
dec
test
lods
hlt
sub
jb
shrb
pusha
xchg
stc
fsubs
push
aaa
mov
popa
ljmp
mov
xor
xor
pop
sbb
fwait
andb
mov
test
add
pop
les
in
popf
xor
adc
or
and
pushl
movsl
cwtl
fiadds
imul
xchg
mov
stos
test
pushf
test
push
inc
pop
push
mov
repz
xor
push
and
repnz
add
mov
in
jo
dec
test
enter
mov
pushf
push
add
xchg
lock
inc
jnp
pop
mulb
loopne
addr16
in
lret
pusha
push
or
xlat
jbe
pop
mov
jle
pushf
rorl
dec
enter
clc
outsl
ja
ljmp
cmp
sub
add
out
inc
pop
xchg
adc
movsb
cli
push
jp
jae
mov
std
lcall
je
xor
mov
mov
hlt
dec
mov
incl
mov
iret
fwait
das
pop
and
out
faddl
cwtl
inc
dec
xor
test
nop
mov
cmp
mov
jecxz
inc
adc
push
xchg
dec
cmpsb
push
jmp
fldcw
xor
rcl
notl
test
inc
ret
imul
cmpsl
insb
dec
rclb
ror
mov
add
add
clc
and
mov
or
nop
xor
add
lock
sbb
cmp
stos
dec
mov
or
in
repz
push
mov
dec
and
aas
mov
add
dec
pusha
into
push
inc
push
nop
mov
xor
arpl
push
fbstp
xor
cltd
and
mov
jo
jo
adc
pop
or
mov
mov
mov
fstps
add
mov
std
roll
into
sti
and
inc
aaa
mov
out
xor
scas
in
and
dec
mov
stos
mov
fs
sub
fsubrs
fsubrs
loop
xchg
mov
aam
and
add
sbb
push
adc
xchg
or
mov
or
test
adc
scas
and
sbb
push
or
movsl
pop
aaa
shrb
cli
call
icebp
xor
mov
pop
and
push
xlat
rorb
sbb
mov
adc
cltd
out
sbb
adc
das
cmpps
fiadds
clc
mov
add
jae
incl
xchg
js
or
rcrl
cmp
dec
call
pop
add
adc
rorb
stos
cltd
aam
sub
ljmp
cmpsl
flds
daa
hlt
decl
push
mov
je
mov
jmp
cltd
andl
add
adc
add
ljmp
and
jno
sbb
andb
and
push
lea
push
js
xor
dec
sbb
add
repz
ss
fldcw
push
daa
pop
mov
aad
xor
mov
das
or
mov
mov
aam
mov
mov
xor
add
arpl
in
jmp
mov
xor
sbb
inc
cmp
movsl
mov
or
je
outsl
das
jno
sbb
orl
lcall
push
or
movsb
and
lock
mov
pop
std
and
addl
iret
scas
inc
cld
inc
and
sahf
mov
mov
cmp
aad
mov
or
test
dec
jp
js
mov
or
add
push
in
xchg
ret
loop
fsubl
sub
pop
sub
pop
jnp
pop
cmp
lods
int3
loopne
arpl
cli
aam
sahf
clc
pop
pop
dec
dec
push
stos
sub
dec
xchg
jmp
xchg
jle
es
popa
sub
add
lcall
and
add
jl
mov
push
jns
xchg
mov
jecxz
ja
sbb
andb
cwtl
pop
icebp
jmp
xor
imul
sahf
add
xor
sar
push
mov
repnz
push
push
push
dec
je
clc
pop
mov
leave
push
aas
mov
push
xor
std
mov
incl
cwtl
test
mov
shl
sub
sahf
sbb
jl
js
je
or
cwtl
test
push
popa
sbbb
cmc
frstor
scas
cli
sub
xlat
ficoml
fdiv
push
jl
popf
add
and
and
test
or
mov
add
mov
add
mov
xlat
pminub
xchg
jae
out
stos
xchg
jp
add
cld
int3
mov
mov
jl
int3
shlb
lods
mov
inc
mov
push
stos
add
dec
ret
mov
outsb
pop
sbb
fisubrl
jne
push
mov
dec
add
mov
sbb
xchg
mov
pop
cmpb
or
mov
and
xchg
jecxz
ret
clc
incl
push
and
ljmpw
pop
cmp
jbe
loopne
mov
pop
pop
add
test
mov
fldl
push
jecxz
bound
sbb
jo
in
call
iret
xchg
xor
enter
mov
cli
sub
and
sub
adc
sbb
dec
fs
mov
fisttps
cmp
adc
inc
adc
ja
mov
sub
test
call
pop
jecxz
decl
cmp
push
sbb
sti
xchg
pop
or
dec
test
add
cmpb
add
test
ret
ret
shrl
sub
sub
pop
lds
inc
sbb
cmp
push
je
add
test
mov
outsl
mov
cmp
lock
mov
cld
das
shlb
dec
push
outsb
mov
mov
ljmp
in
mov
xor
inc
in
jecxz
lret
mov
loope
nop
lret
fsubs
adc
mov
sbb
xor
xchg
dec
call
mov
push
dec
icebp
adc
imul
push
xchg
cmpsb
scas
push
scas
mov
and
add
hlt
pop
mov
stos
cmp
inc
add
nop
jmp
nop
ljmp
data16
out
lds
add
arpl
mov
daa
fs
or
push
aaa
outsb
inc
lds
cmp
mov
add
jle
mov
xchg
adc
jp
adc
or
dec
add
add
lret
cltd
clc
mov
mov
lds
hlt
mov
push
setge
scas
or
push
sub
jno
bound
or
addb
cs
clc
scas
ret
out
jnp
fiadds
dec
xchg
jb
jge
aas
jns
sahf
stos
hlt
outsl
fcomps
add
cli
xchg
repz
sbb
mov
insb
icebp
clc
push
inc
xor
fstp
pop
mov
pop
aam
or
push
test
adc
mov
mov
mov
enter
sbb
dec
ficoml
mov
jb
or
pop
movsb
movsl
sbb
mov
fs
rolb
add
ret
adc
fimuls
dec
push
pop
add
ja
mov
mov
or
push
shl
nop
sub
inc
xchg
mov
scas
call
in
sbbb
pushf
cmp
and
inc
ds
mov
pusha
push
dec
push
sub
inc
es
pop
test
add
lock
push
decl
test
xchg
test
je
mov
push
cmp
mov
sub
sbb
cltd
out
repz
or
cli
adc
sub
nop
icebp
insl
jmp
jb
push
add
popa
jnp
bound
mov
test
sti
inc
into
mov
push
add
gs
fidivs
pop
push
add
cs
xchg
push
aam
test
test
clc
fnsave
sub
mov
ret
and
rol
cmp
pushf
ret
cltd
sub
movsl
add
scas
mov
adc
xchg
push
push
scas
out
and
xchg
xchg
cmp
lahf
incl
std
dec
sahf
clc
jmp
xchg
in
adc
jmp
xor
ss
arpl
std
inc
pop
dec
ds
clc
pop
inc
in
decl
mov
ret
push
dec
sbb
mov
ja
cs
adc
cld
pop
rclb
fimull
cmp
jmp
je
pop
movsb
push
std
in
nop
inc
fs
jle
das
sbb
ret
mov
xchg
and
cmp
xchg
int
and
add
dec
in
mov
push
cmp
xchg
xchg
jne
fs
data16
stos
call
icebp
adc
mov
jp
pusha
imul
inc
loopne
adc
ds
dec
dec
lods
sbb
scas
jbe
xor
and
pop
std
lea
mov
mov
jg
shrl
xchg
gs
or
test
mov
sbb
std
push
js
add
test
inc
and
jle
lods
es
sub
add
out
push
xchg
mov
and
sub
loope
imulb
push
lcall
cmpsl
stc
daa
sbb
les
and
nop
ss
ljmp
enter
adc
mov
push
or
mov
pop
repz
add
bound
insl
sbb
sub
lock
pop
enter
bts
push
or
dec
add
mov
cli
cmp
cld
pop
int3
xchg
xlat
dec
inc
lea
dec
adc
in
sbb
fwait
jns
push
leave
xor
push
mov
add
pop
loopne
xchg
aad
hlt
fdivrs
cmp
aaa
push
jb
jbe
shll
mov
push
sub
fisubs
mov
jmp
inc
xchg
test
mov
stos
or
mov
jo
addr16
push
push
mov
into
or
lds
les
adc
add
sbb
loop
inc
inc
inc
outsb
and
xchg
mov
into
ret
sub
adc
fstpl
repz
orl
test
add
movsl
mov
test
loopne
cli
shll
mov
jecxz
lds
pushf
adc
xchg
out
gs
sbb
dec
fsubrp
sub
mov
mov
sbb
add
xchg
dec
outsb
add
push
mov
sahf
push
movsl
sbb
stos
sbb
sub
mov
nop
adcl
dec
push
ror
or
bound
loop
psubd
sub
adc
outsl
inc
inc
lahf
xchg
call
mov
pop
out
subb
push
sti
enter
mov
or
jne
push
jp
loope
adc
lock
or
jbe
ja
je
fcmovnbe
xor
shlb
add
ss
faddl
clc
in
lahf
and
jne
push
mov
lds
clc
xor
aas
clc
aaa
pop
cli
cmp
add
mov
push
jg
test
and
nop
lods
and
pop
es
decl
fs
or
clc
test
push
sbb
scas
dec
xor
test
jmp
xchg
mov
orl
cmp
push
inc
movsb
stos
scas
iret
mov
dec
ret
mov
je
sbb
add
xchg
adc
cmp
push
mov
fnstcw
in
mov
pusha
cltd
stos
outsb
or
adc
dec
adc
aas
cmc
push
rcrl
pop
and
and
sub
and
push
inc
cli
fwait
jle
push
dec
repnz
test
pop
push
fidivrs
nop
xorb
daa
sbb
out
movsb
sbb
bound
stos
arpl
out
repz
dec
shll
pop
mov
cmp
or
pop
std
push
loop
andb
test
mov
jnp
mov
hlt
outsl
xor
inc
inc
sbb
or
movsb
mov
and
xor
inc
lcall
ret
ljmp
and
in
clc
sbb
or
add
sbb
xor
dec
mov
add
sbb
add
xor
push
stos
push
add
and
inc
shrb
mov
inc
mov
scas
fs
sub
call
add
lock
jmp
xchg
mov
mov
mov
cmc
add
jg
in
mov
push
and
call
adc
fisttps
push
mov
ret
rcrb
mov
movl
rcrl
adc
stos
pusha
jmp
pop
mov
sub
push
jmp
or
lret
xchg
in
cli
or
push
loope
and
dec
dec
aaa
mov
hlt
push
mov
xor
push
mov
add
addr16
and
add
dec
and
mov
adc
push
aad
pop
rcrb
and
cld
andl
pop
cli
push
mov
pop
mov
cmc
pop
movsb
fcmovnu
cmp
pop
in
ret
insb
and
inc
xchg
add
jne
jno
ljmp
push
mov
shrb
push
inc
fwait
sbb
nop
or
inc
mov
stos
ljmp
cmp
sbb
int3
add
and
sahf
in
pop
aaa
icebp
mov
out
clc
or
cli
mov
mov
sbb
adc
pusha
mov
inc
sbb
jnp
lock
push
fildl
cmp
pop
ds
sub
nop
cli
or
sub
push
repnz
push
push
or
out
push
js
mulb
jl
push
sub
xchg
in
mov
xchg
push
hlt
xchg
mov
push
or
adc
xor
pushf
fnstenv
fldt
jmp
dec
and
jbe
adc
inc
fwait
add
cld
lods
subb
std
dec
cs
push
mov
sbb
or
call
fstl
arpl
jmp
stos
out
mov
ss
push
jnp
push
call
cld
outsl
das
push
mov
xor
and
mov
pop
adc
loope
daa
shrb
loopne
and
dec
rcr
mov
lcall
adc
nop
rolb
inc
xchg
jbe
sbb
out
aad
add
and
add
decl
scas
sub
add
fnsave
mov
adc
cli
xchg
jae
mov
xchg
or
les
xor
or
mov
xor
push
iret
aad
xor
sti
test
mov
les
in
adc
ja
jp
loope
adc
or
clc
roll
loop
cli
pop
in
loopne
ljmp
ss
jbe
jnp
inc
fisubl
xchg
call
cmp
scas
cmpsb
add
aam
mov
xor
cmp
push
mov
fwait
in
adc
iret
or
nop
xor
icebp
lods
lods
je
jecxz
inc
mov
mov
pop
outsl
cmp
sub
jo
lods
mov
and
test
adc
inc
aam
scas
ja
pushf
jo
cli
xor
decb
mov
cs
lret
sarb
xchg
inc
mov
pop
out
cmp
sbbb
ret
es
push
sar
decl
dec
sub
mov
pop
lds
test
les
and
jns
test
ret
add
lock
add
mov
or
ja
add
jg
jle
shlb
sub
testb
and
rorl
cmp
xor
adc
sbb
sbb
scas
cmp
mov
inc
loop
or
pop
and
outsb
cmp
sub
nop
rcl
scas
cmpsb
lock
test
inc
cwtl
jo
add
push
adc
in
and
mov
inc
jne
jg
xor
jns
fldt
xor
push
adc
hlt
jge
rcl
and
out
xor
es
adc
add
cmc
hlt
push
push
or
pop
mov
bound
or
sbb
addr16
push
mov
sub
or
push
je
cmp
jecxz
inc
std
and
inc
xrstor
jbe
in
out
incl
mov
out
fs
push
xchg
push
sbb
mov
xor
or
dec
cli
push
andb
ja
movl
cli
mov
mov
sbb
inc
dec
mov
xor
hlt
adc
call
jg
sarl
dec
jno
and
and
sbb
or
jle
stos
adc
push
pushf
jne
insl
std
or
imul
or
icebp
mov
pop
add
push
push
enter
cmp
xor
rcl
sbb
outsl
jg
mov
xchg
movups
fs
lea
dec
pop
inc
push
fistl
mov
pushl
mov
fists
sub
sub
add
and
dec
xchg
scas
mov
enter
insb
dec
loop
ja
add
push
inc
fs
push
and
fildll
decb
out
adc
pusha
mov
bound
scas
jmp
cmpsb
xchg
movl
push
fildl
into
ljmp
mov
jle
lock
aas
mov
xlat
mov
or
cmp
lods
insl
fsubrl
into
arpl
lock
lds
roll
inc
dec
mov
and
xchg
push
jo
loopne
cmpsb
gs
add
scas
sbb
adc
jle
pushf
push
cmp
and
dec
cmpsl
mov
add
in
leave
sub
or
jecxz
pushl
adc
xor
jno
mov
pop
outsb
jmp
int
les
mov
jl
xchg
into
pop
add
ljmp
out
call
and
incb
shll
lret
mov
mov
insb
sbb
xor
adc
xchg
popa
push
icebp
push
int3
test
and
shll
pop
lret
cli
dec
push
dec
jae
xlat
imul
hlt
hlt
aaa
out
mov
in
or
or
adc
aas
jg
sbb
ja
int
stos
loope
mov
icebp
mov
mov
ds
inc
adc
popa
adc
repnz
cbtw
shrb
insl
pusha
inc
push
loope
ds
adc
sbbb
push
shrb
orb
sar
mov
xor
mov
pop
sbb
test
cmp
sar
lret
push
cmp
inc
sub
or
dec
shll
cli
cmpl
xchg
stc
sbb
sbb
mov
mov
pop
test
inc
sbb
mov
ret
push
adc
jl
mov
loopne
pop
sub
ret
cmp
addr16
mov
xchg
mov
xlat
popa
inc
imul
mov
loop
dec
xor
adc
pop
repz
sub
shlb
inc
inc
aad
pop
testb
bound
shll
mov
and
out
pop
rolb
lock
jl
lahf
jl
pop
mov
push
sub
gs
xor
cld
lret
add
lcall
cld
pop
or
mov
sbb
cmp
pop
pop
out
dec
push
mov
adc
cmp
cltd
mov
push
test
jg
movsl
cs
inc
in
or
and
push
gs
fildl
cmp
and
or
in
mov
push
stos
faddl
mov
sbb
cli
inc
sub
add
push
cmpsb
inc
and
xor
decl
and
push
fstcw
fistps
fs
xrelease
xor
or
mov
xor
mov
sbb
adc
out
add
leave
xchg
pop
hlt
mov
loopne
push
cwtl
lahf
lods
movsb
mov
pop
test
sbb
add
test
test
hlt
imul
mov
mov
mov
daa
mov
xchg
lds
push
aas
loop
sub
inc
xchg
xchg
adc
das
mov
movb
ret
cmp
mov
xor
mov
loope
popl
in
push
hlt
or
inc
pushl
and
mov
nop
sbb
ss
pusha
mov
xchg
mov
mov
or
stos
pop
jnp
mov
ret
cld
jecxz
icebp
scas
loop
inc
cmp
dec
push
jb
mov
or
bnd
orb
inc
jnp
js
incl
punpcklwd
jbe,pn
inc
test
test
jle
jmp
push
and
cmp
xor
cmp
inc
mov
xchg
cmpsl
inc
inc
pop
jmp
fadds
and
inc
jg
add
mov
jmp
nop
inc
sbb
shll
test
push
add
add
out
lods
mov
dec
jl
fnstcw
sub
cld
andb
add
mov
push
pop
inc
mov
pop
test
rcl
push
loop
push
add
mov
jmp
jns
add
lods
add
mov
rol
jmp
scas
mov
pop
mov
push
cmp
mov
sub
sbb
inc
popa
rorl
lea
jmp
mov
cmp
adc
nop
jno
push
jle
pop
sub
fbstp
adc
int3
cmpb
or
call
xchg
xchg
inc
setg
in
and
cmp
xadd
mov
cltd
ror
dec
test
and
mov
push
std
popa
pop
out
es
cmpsl
rorl
and
call
mov
shr
jns
movl
out
mov
xor
push
subb
insb
mov
inc
add
test
pop
testl
jmp
stos
cwtl
dec
mov
dec
shrb
and
sub
sbb
fs
add
loope
mov
pop
loopne
rcrl
int3
loop
mov
pop
xor
inc
lods
pushf
push
mov
cmp
sbb
lock
ffreep
test
add
aam
jns
push
pop
add
push
jno
jmp
lds
pop
inc
jmp
inc
fmulp
pop
push
imul
hlt
cmp
cmp
fildll
inc
sbb
jb
cltd
out
jp
outsb
daa
mov
decl
cmp
xchg
cltd
mov
or
pop
dec
inc
or
orb
or
outsl
mov
xchg
pusha
xchg
ror
add
orl
ja
dec
sub
sti
loope
dec
add
loop
sub
and
push
or
push
mov
into
loop
je
and
in
mov
mov
adc
pop
push
sbb
jbe
xchg
lods
loop
xor
sub
stos
das
pop
jmp
mov
aad
add
mov
cmpsl
jle
dec
push
enter
and
xchg
popl
cld
lcall
notl
jl
out
cs
add
fiadds
fdivp
pushl
jb
xchg
mov
add
xor
mov
sub
mov
adc
push
mov
movb
test
mov
movsb
xor
iret
adc
ja
adc
icebp
mov
icebp
lods
dec
jmp
add
daa
pop
ja
in
sub
faddl
pop
or
out
xor
push
push
push
hlt
fimull
jecxz
pop
int
loop
lea
mov
inc
aad
mov
sub
add
and
mov
ljmp
and
orl
push
insl
jg
sub
push
sbb
int
adc
mov
xor
xchg
sub
in
cld
mov
mov
mov
cwtl
test
jmp
test
inc
mov
repnz
out
fstpt
test
mov
sbb
mov
push
push
xor
pop
aas
cmp
or
jbe
adc
lahf
fcomps
mov
pop
push
inc
xorb
out
jbe
xor
xor
loope
cmpsl
inc
insl
push
inc
sbb
inc
out
pop
andl
nop
ss
repz
addb
mov
dec
and
and
shlb
mov
int3
xchg
jle
adc
fidivs
mov
mov
jl
mulb
popf
jle
negb
push
fdivrs
outsb
and
inc
adc
jg
roll
pop
inc
data16
lods
in
insb
cli
pop
mov
and
rcrb
sub
xor
inc
jg
xchg
xor
adc
push
ljmp
pop
int
ss
cmpb
pop
sbb
shlb
faddl
frstor
push
out
push
xchg
enter
push
jecxz
cli
mov
cs
mov
add
stos
push
ret
xor
mov
jl
sub
sbbb
bound
hlt
daa
jl
dec
dec
pop
mov
adc
add
loope
lock
loope
mov
divb
or
cld
push
jnp
adc
arpl
and
jo
cld
movl
sbb
mov
or
sarb
xchg
aam
ret
push
xor
sbb
imul
ss
pop
data16
mov
sbb
and
ffreep
xchg
lret
pop
test
lods
arpl
cwtl
jecxz
xor
add
adcb
jmp
xchg
cmpsl
xorl
scas
jbe
jl
mov
push
or
cmp
fiadds
add
loopne
rcrb
clc
cld
cs
inc
test
aad
std
scas
pop
add
je
sub
push
cwtl
push
imul
fwait
adc
add
je
dec
stos
push
cmp
sbb
push
inc
leave
or
lds
test
jb
xor
cmp
repnz
mov
cwtl
mov
test
ret
sbb
xor
jo
add
fistpll
and
das
shl
imul
data16
mov
lock
aaa
scas
xchg
xor
push
lock
add
loope
add
stos
cmpsb
sahf
push
mov
adc
mov
incb
add
ds
and
cld
sbb
stc
pushf
add
adc
cmc
loope
sbb
sbb
or
or
in
and
push
inc
bound
pop
andb
rcrl
jl
xchg
and
scas
ds
outsb
into
xor
xchg
mov
outsb
push
aam
pop
pop
add
bnd
or
or
mov
mov
insl
add
and
in
mov
push
jnp
add
bound
lods
mov
dec
add
dec
inc
ljmp
sbb
adc
jmp
sbb
push
mov
lods
mov
fsubs
mov
xor
lret
inc
mov
xlat
je
out
xchg
mov
add
imul
add
lods
pop
inc
jmp
cmp
mov
pop
cmp
push
xor
and
pop
icebp
insl
xchg
clc
fwait
sbb
out
jmp
xchg
xchg
cmp
mov
mov
mov
fidivs
sub
loope
jb
enter
ja
fsubp
mov
lret
jbe
xor
out
lcall
mov
xchg
daa
add
in
mov
mov
add
push
dec
pushf
scas
add
pop
add
rorb
lret
fs
testb
ss
ja
iret
fsubrl
push
xor
pop
lea
and
movsb
loopne
mov
jle
incl
push
dec
jecxz
loop
push
into
call
jne
cmp
das
mov
js
dec
xlat
cld
mov
jno
inc
inc
movsb
cmc
pop
loop
sub
sar
cli
push
int3
out
andb
add
sbb
pushf
repz
adc
aad
ds
shl
pop
mov
dec
ljmp
jb
xor
scas
add
xorb
nop
lock
or
insb
mov
test
lods
cs
mov
sbb
push
dec
mov
or
or
add
push
jno
lcall
mov
inc
jl
fisttps
fmull
decl
push
repnz
push
popa
xor
sbb
push
pushf
in
xchg
rcll
sub
mov
fdiv
aas
ljmp
sbb
cld
push
int
lods
imul
mov
cmc
incl
loop
sahf
test
jecxz
push
xchg
xor
xor
clc
leave
pop
mov
mov
inc
cld
or
dec
xor
and
mov
cwtl
jge
insl
sti
sub
or
push
shlb
cmp
addr16
outsl
out
test
out
cmp
out
inc
call
pusha
xchg
ja
dec
sahf
fistps
or
mov
stos
mov
iret
add
push
js
inc
adc
xchg
icebp
mov
mov
push
adc
ja
and
pop
ret
adc
and
dec
dec
subb
in
cmpsb
and
mov
repz
mov
mov
adc
add
test
icebp
lock
jmp
cli
adc
adc
jnp
js
fwait
adc
testb
clc
jecxz
mov
movsb
addr16
mov
mov
popl
movsl
stc
dec
push
mov
add
aam
cld
scas
fwait
sbbb
xor
add
shll
add
fistpll
lock
xor
push
loop,pn
inc
jge
jecxz
cli
ja
push
fcomps
inc
sub
and
and
ret
or
inc
sub
fcoml
push
ret
mov
jl
fwait
pusha
adc
lea
mov
add
sub
lea
mov
fs
bound
push
mov
pushl
sub
in
pop
cwtl
cmp
lea
cmp
dec
adc
or
fadds
std
lcall
inc
cmp
sbb
inc
cmpsl
inc
bound
fiadds
lods
add
mov
push
add
icebp
push
ljmpw
in
mov
xchg
adc
adc
sti
call
jp
pusha
jecxz
dec
sbb
bound
lock
les
and
stos
push
xchg
push
jecxz
mov
dec
dec
xchg
call
lret
push
divb
xor
xor
add
insl
aam
pop
addr16
or
or
add
mov
pop
jg
movsl
outsb
ds
mov
mov
or
xchg
push
movsb
aas
xor
fwait
inc
sub
cmp
xchg
fstl
fcoml
mov
sub
mov
sub
push
sbb
dec
loopne
xchg
scas
or
dec
pusha
inc
call
ljmp
and
popa
dec
mov
xchg
test
ss
call
add
xchg
int3
sbb
xchg
inc
mov
pop
mov
ret
add
lds
mov
adc
xor
lock
push
push
nop
add
test
pop
pop
adc
mov
lods
scas
jp
test
inc
push
and
scas
inc
mov
push
lea
pushf
dec
pusha
push
fidivl
stos
mov
push
pop
add
stos
pop
out
mov
inc
lock
int
mov
dec
leave
aaa
mov
scas
xchg
cmp
scas
pushf
aad
and
push
je
inc
ds
dec
add
aaa
mov
add
add
pop
pop
lock
push
push
sub
lods
insl
lock
in
andb
lock
sbb
call
cmp
adc
xor
pop
add
hlt
cmc
sbb
mov
in
roll
js
lock
sub
outsl
jg
ret
or
and
jno
sbb
jne
inc
ds
js
sub
cmp
xchg
lods
stos
iret
adc
sbb
cs
inc
sub
xor
cli
push
cltd
test
adc
cmc
jbe
add
pop
xchg
sahf
xor
insb
xchg
fdivrs
ss
xor
cmc
cs
cltd
dec
xchg
lock
or
mull
push
add
dec
adcb
ljmp
mov
inc
call
repz
pop
int
add
sarb
jmp
orps
mov
lods
or
add
js
leave
rcl
into
clc
lock
insb
shlb
sub
mov
pop
psrld
cmp
test
mov
pop
loopne
sub
mov
mov
pusha
and
cmp
mov
sub
repnz
fwait
add
in
sbb
fmul
and
push
sbb
data16
and
pop
inc
test
adc
push
dec
incl
jg
xor
jae
add
lcall
adc
cmp
into
inc
adc
ds
lcall
push
lods
ljmp
es
inc
pop
cmc
xchg
and
xchg
bound
cli
inc
cmpsl
dec
mov
sbb
addb
jns
pop
rolb
mov
int3
xor
subl
movsb
outsb
cwtl
cli
pop
arpl
mov
sti
jo
mov
ficoml
stos
sarb
jmp
mov
adc
rolb
and
add
cmpsb
push
je
out
push
lcall
fdivl
lods
xchg
fildl
cwtl
cmp
dec
mov
inc
out
jbe
enter
mov
xchg
push
aas
scas
jl
lock
xor
sub
enter
pop
or
xchg
mov
into
fld
xchg
stos
adc
js
roll
mov
push
xor
inc
jl
imul
jle
jl
call
rcr
shlb
rcrb
push
std
ja
jl
andb
sub
fdiv
jg
mov
push
int3
push
cmp
outsl
in
aaa
mov
xor
cmc
test
mov
push
fimull
mov
outsb
jg
shrb
icebp
or
pusha
cmp
cld
cltd
jo
ja
mov
mov
xorb
jle
out
fsubrp
xor
hlt
adc
gs
push
lock
in
xchg
lea
bound
lcall
and
pop
sbb
fisubrl
leave
test
packsswb
sub
roll
dec
cmpsb
adc
mov
inc
mov
sahf
add
rorl
outsl
mov
push
jp
fmuls
aas
dec
stos
mov
push
push
add
rol
mov
or
stos
mov
or
sbb
cmp
mov
pop
icebp
and
and
or
cmpsb
inc
rcrb
mov
add
and
adc
iret
lods
repnz
es
outsl
fwait
push
and
andb
xor
dec
pop
cmpsb
out
lea
adc
rorl
and
or
into
clc
xchg
clc
fs
into
push
add
mov
adc
push
jmp
ljmp
jno
pop
addb
into
jp
pushl
data16
aad
mov
xor
xchg
sub
imul
clc
ret
clc
pop
sbb
fbld
jmp
outsb
lcall
adc
pop
adc
sub
loop
add
cmp
out
lock
shll
push
dec
push
incl
fdivr
mov
imul
fisubrl
push
sbbl
loope
clc
push
inc
inc
and
addb
leave
cli
js
in
xchg
jo
sarb
das
movsb
push
lret
add
cwtl
mov
mov
xchg
inc
jmp
sahf
loopne
sbbl
sub
les
dec
push
sarb
or
push
dec
pop
cmc
pop
lea
lahf
add
lods
sub
addb
or
add
test
fnstsw
shrb
lock
add
cmp
rorb
push
aad
enter
mov
mov
int
pop
cmc
push
out
test
mov
mov
sbb
clc
psubsw
and
add
cwtl
and
dec
in
pop
cltd
adc
push
rorl
or
mov
fdivr
mov
lods
xchg
add
mov
and
insl
or
xor
outsb
xchg
loop
cli
gs
daa
mov
scas
aas
lcall
push
ss
sbb
add
arpl
movsb
jl
lods
mov
pusha
push
sbb
xchg
stos
mov
ss
mov
mov
icebp
pushl
mov
fwait
popf
inc
mov
push
adc
dec
imul
cs
mov
push
test
xchg
xor
cld
cmp
and
outsl
xlat
testl
das
cmp
repnz
mov
popa
outsb
and
insl
loop
sub
aad
movsl
mov
shl
mov
push
mov
push
adc
sbb
shrb
ret
add
sbbb
pop
cld
add
outsb
inc
mov
jne
sbb
mov
cmp
lods
lret
rclb
daa
inc
jb
fiaddl
loopne
std
sub
negl
pop
cmpsb
dec
xchg
jno
fdivrp
or
push
mull
cli
mov
sbb
std
lea
push
imull
rorb
push
push
inc
mov
and
aaa
mov
add
lret
add
std
add
pop
and
inc
adc
cld
iret
loopne
out
lcall
cmp
sbb
lock
addb
cli
and
or
cld
in
mov
jns
mov
push
int
hlt
mov
cmp
and
sbbl
jmp
jo
stc
hlt
add
clc
out
or
incl
and
int
and
shr
adc
jb
push
inc
pop
pop
dec
dec
aas
pushf
out
pushf
pop
jecxz
scas
ja
outsl
xchg
idivb
das
sahf
or
jecxz
sub
int
jp
cmp
notl
lahf
or
test
mov
xor
hlt
sbb
fs
xchg
sub
movsl
mov
test
add
add
sub
ljmp
pop
mov
and
cs
pop
mov
push
dec
inc
push
clc
loop
add
pusha
ds
mov
mov
test
and
hlt
andl
inc
arpl
mov
or
add
add
sub
push
sbb
fdivrs
enter
inc
fcoml
push
sub
xchg
lods
int3
jne
dec
gs
stos
out
test
mov
test
fdivl
and
jo
call
mov
cmovp
mov
pushf
std
lds
fadds
cli
adc
xchg
xor
add
packuswb
stos
xchg
loope
data16
jb
add
std
jg
icebp
lods
rorb
pop
pushf
mov
pop
movl
mov
pop
xor
mov
cmp
mov
or
pop
and
mov
loopne
xchg
lret
bound
cmc
dec
je
aam
dec
pushf
cmp
jg
jle
ljmp
add
mov
rcrl
addr16
inc
mov
scas
xor
add
sar
or
movsb
in
stos
loopne
add
aaa
std
mov
pop
incl
xor
es
push
and
adc
sub
in
cmp
pop
aas
les
or
xor
sub
pop
adc
mov
or
xchg
loop
stos
sub
test
fldt
addb
push
ret
xor
mov
jmp
xchg
push
jnp
cli
fcmovnbe
xor
dec
decb
mov
in
or
inc
leave
fiadds
pusha
and
pop
jle
adc
push
jl
push
or
mov
adc
sbbl
mov
or
out
adc
pop
out
add
shr
or
adc
std
loopne
dec
mov
jp
ljmp
call
outsb
outsl
or
cmp
push
pop
je
mov
xchg
scas
push
mov
in
ds
jecxz
jbe
jmp
push
shlb
push
and
mov
fildl
xchg
pop
addl
movsl
ja
push
fsubrl
mov
cmp
or
je
add
cmp
mov
test
sbb
test
pop
lret
les
test
mov
bnd
push
push
push
fcompl
scas
xchg
mov
lret
pop
orb
xor
xchg
in
inc
pop
inc
and
xchg
mov
pop
sub
dec
xchg
call
sbb
into
inc
adc
mov
loope
pushf
out
aas
mov
lds
fs
add
cmp
push
shl
incl
cmp
and
inc
sti
roll
push
js
decl
rolb
sbb
pop
adc
leave
dec
das
mov
int
mov
mov
mov
nop
movsb
clc
pop
mov
add
stos
loopne
js
shl
clc
sar
shrb
mov
push
lock
push
sub
adc
nop
sarb
add
sub
xorl
fidivs
subb
outsb
mov
xchg
xor
or
inc
or
pop
mov
les
int3
sub
test
test
fadds
xor
mov
fiaddl
xchg
ljmp
push
mov
xlat
jmp
outsb
jle
xchg
or
pop
add
dec
orl
xor
adc
nop
adc
pushf
adc
sub
rorb
mov
loope
sar
and
inc
jne
sbb
push
cmp
call
lock
scas
int3
xchg
sbb
xchg
lcall
lods
test
xchg
rcr
inc
cmp
xor
les
jmp
mov
call
push
mov
ret
inc
nop
jo,pt
es
cmp
gs
mov
flds
lret
shl
mov
adc
fmull
or
sarl
imul
fs
jp
dec
dec
add
scas
imul
ret
ret
int
dec
clc
mov
inc
popa
lcall
adc
aam
xchg
mov
scas
cmpsl
rcll
push
aam
pop
xor
push
adcb
aas
sarb
scas
ljmp
ss
fstpt
or
ret
mov
jp
cmp
adc
fcmovne
or
push
add
out
popf
pop
mov
pusha
out
mov
pop
ret
add
inc
mov
and
jno
movsb
movl
pop
inc
mov
push
mov
inc
add
jg
mov
mov
fsubr
xor
lds
icebp
dec
adc
pop
fs
cmp
jge
pop
xchg
scas
push
push
rorl
sahf
cmpsb
sub
mov
and
aas
sbb
sub
pop
mov
fcoms
nop
and
hlt
inc
js
mov
dec
cmp
mov
add
pop
or
scas
sahf
dec
sbb
lods
jo
ljmp
call
fmuls
dec
inc
ror
xor
pop
mov
subb
or
adc
mov
inc
pop
mov
add
test
negb
jge
or
xor
push
insb
cli
mov
nop
sti
ret
xor
test
aaa
cmpsb
push
ret
and
adc
negb
into
xor
cwtl
int3
repz
dec
add
hlt
mov
push
aad
pushl
dec
jl
inc
hlt
fdivp
notb
fisubrl
push
cwtl
popa
stos
or
outsb
dec
mov
add
push
inc
add
aad
jg
loope
jo
adcb
clc
aaa
mov
mov
outsl
nop
and
xchg
loop
jns
in
negb
add
pop
and
out
push
loope
adc
pop
ret
push
lods
pop
xchg
xchg
ss
fsubrl
xor
fisubl
sahf
fmuls
fimull
cs
clc
inc
scas
mov
mov
mov
dec
or
mov
xchg
sub
stc
dec
mov
push
jmp
cmp
xchg
mov
hlt
notl
xor
push
jg
fsubrs
dec
rolb
aad
lcall
inc
stos
data16
or
sbb
mov
sar
push
inc
and
and
or
mov
or
movsb
adc
or
cwtl
mov
adc
pop
mov
test
xchg
inc
and
pop
push
in
decl
shl
int
or
fldt
les
jb
test
add
sbb
inc
pushf
pop
xor
sub
shr
roll
hlt
pop
mov
add
push
clc
push
inc
scas
sti
mov
push
aad
cwtl
cmp
lahf
ds
bound
mov
mov
sub
mulb
addr16
jl
jle
scas
fdivrs
mov
stos
jo
movsb
mov
sbb
shrb
mov
pop
shlb
dec
jo
mov
adc
mov
int3
xchg
sub
xlat
mov
cli
pop
dec
pop
lcall
in
sbb
adc
sarb
cmp
mov
dec
push
adc
cmp
dec
or
xchg
cmpsl
push
inc
mov
adc
add
test
hlt
or
or
lock
lods
mov
inc
data16
out
pop
push
dec
adc
fcmovbe
xor
outsl
push
mov
and
fcoms
outsb
outsb
push
sahf
stos
icebp
outsb
pop
imul
mov
out
pop
daa
inc
mov
lds
or
add
cli
push
jle
sbb
fildll
xchg
mov
jnp
lods
rcll
test
test
push
mov
inc
lods
js
fmull
and
or
ja
mov
test
repz
add
sbb
push
jbe
sbb
jo
adc
sub
call
lods
sahf
iret
mov
push
cmp
cmp
lods
adc
or
iret
in
lock
dec
adc
cmp
mov
pop
push
js
jb
cmp
in
ljmp
adc
js
adc
pusha
insl
nop
mov
or
inc
mov
rcl
and
gs
adc
loope
pushf
sbb
lcall
mov
cwtl
xchg
test
sub
sub
std
jecxz
in
xchg
ret
loopne
dec
push
sbb
addl
es
fdivl
push
cmp
ret
test
das
mov
or
inc
sti
inc
sbb
push
inc
into
dec
xchg
mov
cmpsb
xrelease
adc
pusha
lds
xchg
mov
pop
hlt
sbb
jae
fstpt
adc
push
enter
pusha
sbb
cmp
filds
push
scas
shlb
jns
icebp
pop
sub
sub
pop
daa
mov
push
push
push
pop
and
add
jg
orb
fadds
jnp
jg
add
popf
mov
dec
inc
sti
pop
jg
or
and
jo
fisttpll
sub
inc
mov
pop
xorl
mov
xor
add
sti
movsl
add
push
lcall
mov
dec
and
xor
pop
clc
popf
fldl
dec
dec
pop
sub
adc
arpl
shll
push
sbb
push
or
test
jp
ss
and
call
push
cmpsb
notb
inc
xchg
shr
lock
stos
cmpsb
mov
sar
out
push
add
sub
adc
xor
pop
insb
adc
sbb
add
pop
or
cmp
cmp
or
inc
lds
shrb
es
pusha
jns
mov
jg
push
xchg
adcb
dec
call
dec
dec
cmc
daa
cmpsb
adc
cmp
push
std
aad
jecxz
xor
sbb
push
xor
add
or
fdivs
inc
adc
xchg
jg
std
pop
loopne
test
cmpl
inc
or
inc
ss
popf
inc
movsl
outsb
xor
add
pop
mov
inc
dec
cltd
or
add
xor
ret
jecxz
shlb
lods
sub
sub
jp
add
aaa
les
cmp
sbb
mov
out
cmpsl
fs
adc
in
inc
mov
push
fildll
inc
sbb
adcl
loopne
push
adc
push
popf
ljmp
cmpsb
lcall
cmp
dec
push
cmp
push
aas
jb
andl
mov
into
push
jge
jne
je
dec
dec
out
cli
dec
fimull
push
aam
push
sub
std
mov
sub
cmp
adc
enter
cwtl
sbb
push
inc
mov
cmc
xor
incl
dec
jmp
cmp
pop
mov
pop
jl
sbb
es
jg
repz
pop
mov
sub
arpl
lahf
jno
add
out
inc
test
incl
stc
xchg
fs
dec
pop
xchg
mov
adc
and
add
cwtl
jbe
pop
pop
shl
lods
mov
into
js
subb
xor
out
dec
push
mov
add
sbb
cmpsb
mov
mov
cmp
lahf
es
push
inc
pop
test
icebp
aaa
or
fcomps
cmp
and
decl
cli
stos
lods
fcompl
in
cmp
push
inc
icebp
cmp
xor
xchg
ljmp
in
add
mov
hlt
stos
ljmp
js
xchg
jmp
mov
pop
adc
mov
lea
xchg
or
mov
push
cmp
repnz
sub
lock
insb
loopne
sti
and
and
inc
mov
call
pop
pop
rcrl
xor
mov
add
push
call
push
cltd
insb
inc
stos
adc
mov
push
pushw
mov
inc
es
xchg
in
repnz
xchg
xchg
add
mov
sbb
fldl2t
repnz
inc
imul
dec
cli
push
inc
adc
int
lcall
out
das
and
xchg
rclb
xlat
dec
jbe
xor
pushf
push
add
incl
into
inc
jo
cli
mov
lock
mov
std
pop
imul
lods
sahf
jp
mov
add
loopne
dec
and
clc
adc
fidivl
inc
jo
and
mov
mov
dec
out
out
add
test
incb
or
ljmp
les
js
cmpsb
cmc
sbb
ret
dec
sbb
mov
aas
into
xor
pop
data16
cmp
mov
incl
mov
pop
jmp
scas
mov
lea
adc
add
sub
push
js
push
and
cli
mov
lahf
scas
add
and
fmuls
sbb
adc
xchg
addr16
pop
aaa
mov
sbb
add
fisttpl
les
sub
enter
xchg
sub
xchg
mov
in
jg
cld
scas
pop
test
dec
insb
test
push
push
jno
dec
sbb
sub
out
ret
pop
clc
test
push
inc
int3
adcl
addb
test
outsl
dec
add
fs
vpexpandd
jl
cmp
pop
ret
push
cwtl
cmpsb
jle
and
frstor
shll
cmpl
push
cmc
aas
xchg
fisttps
jmp
scas
mov
movsl
movsb
or
sub
mov
or
push
pop
hlt
lcall
jb
ja
pop
orb
pop
push
cwtl
add
dec
rcrb
cmp
test
and
popf
clc
ret
mov
mov
test
in
rclb
outsb
mov
and
and
mov
incl
loop
jmp
adc
shrl
jecxz
sbb
xor
or
test
push
mov
movsb
stc
stos
popf
js
jbe
sbb
push
pop
das
out
sub
insl
data16
cmc
push
rorl
call
out
jp
out
ds
bound
push
xor
adc
cmp
push
fs
dec
enter
arpl
imul
fwait
sti
movsl
int
add
ljmp
mov
mov
dec
test
ret
clc
or
jmp
cmc
sub
fistpll
lret
inc
sbb
mov
pop
lock
push
outsl
out
mov
repnz
jg
gs
push
and
push
sbb
cltd
add
jnp
cli
ror
push
dec
mov
push
nop
dec
movsb
pop
into
lock
push
push
push
decl
mov
aam
and
sub
pushf
mov
pop
dec
sub
xchg
dec
hlt
inc
push
pop
push
sbb
xchg
test
add
das
ljmp
or
dec
cs
xlat
dec
adc
pop
ret
mov
xor
or
into
push
cmpsb
scas
cmp
cmp
ds
outsb
sub
adc
or
jne
mov
decl
lods
sarb
subl
stos
addb
lods
pop
fcmovu
or
inc
out
cli
adc
aaa
nop
lret
in
inc
sbb
repz
ljmp
cli
push
outsl
je
sbb
xor
adc
es
push
mov
aam
pop
lods
cli
pop
lret
push
test
sbb
imul
call
scas
adc
and
xchg
cmp
sti
cwtl
add
icebp
pop
inc
jecxz
adc
aad
subl
or
mov
cmp
add
mov
mov
icebp
ret
push
mov
in
xchg
fsubp
jbe
add
outsb
jg
incb
dec
xor
pop
push
scas
xchg
rclb
add
jecxz
lods
sub
push
jns
inc
filds
in
bound
inc
inc
aaa
ret
int
arpl
or
loopne
test
add
or
pop
lcall
mov
fldt
pop
add
cmc
jo
aas
jl
imul
es
shl
or
int
aaa
add
addr16
sarl
cld
notb
cwtl
in
xor
sbb
inc
dec
arpl
inc
xor
in
push
cli
test
hlt
mov
das
movb
mov
jle
dec
lock
cs
mov
lret
jl
insb
sub
mov
addb
lds
inc
push
loope
mov
lret
or
cmp
lock
and
imul
and
xchg
repnz
or
cld
hlt
loop
cmc
pop
pop
and
jecxz
sbb
iret
ret
test
fcompl
mov
add
aaa
hlt
push
add
jo
xor
dec
outsb
stos
cli
xchg
push
les
xchg
mov
ljmp
mov
cmp
cld
pop
loopne
sub
jl
mov
pop
notl
xchg
cltd
inc
and
xchg
imull
lock
cmp
sbb
add
sbb
pop
add
outsb
ja
add
adc
sbbb
sbb
cli
dec
push
jecxz
leave
xor
fcmovnb
in
mov
rcr
sbb
ds
outsl
mov
loop
loopne
cmp
mov
aas
mov
fbld
movsb
inc
add
hlt
mov
bound
inc
sub
push
and
lret
insl
pusha
loopne
fadds
fs
adc
fwait
inc
sub
sbb
dec
xchg
dec
cmp
stos
pop
icebp
repz
push
mov
insb
mov
sbb
sahf
push
in
fs
xchg
out
push
mov
cld
cmp
sahf
nop
ret
aas
sub
mov
mov
scas
xchg
leave
xchg
lods
pop
pop
jecxz
pop
rol
adc
xor
pushf
pop
cmpb
xor
cmp
in
xchg
dec
dec
adc
jp
roll
inc
or
ret
ficomps
mov
fs
in
sbb
jno
sub
xor
fdivs
mov
out
inc
and
bound
and
add
and
xchg
or
icebp
and
insb
fs
enter
and
mov
sub
lods
dec
lock
push
push
mov
pop
lock
cmp
hlt
hlt
sbb
jns
cld
rorb
mov
subb
pusha
add
outsb
lret
mov
fisttps
sar
jne
daa
mov
adc
stos
inc
or
lahf
stos
insb
xor
out
movsl
jg
push
and
xor
sbb
std
ljmp
aad
ljmp
lock
clc
pop
jecxz
add
sub
add
and
mov
daa
test
lock
sub
push
xor
jmp
clc
test
loope
and
rorl
addr16
clc
mov
jecxz
mov
adc
cli
outsl
gs
into
or
je
leave
adcb
testl
cld
cmp
rcr
push
int3
jmp
push
sbb
int
adc
or
cwtl
xor
sarl
pop
cmpl
cltd
clc
cmc
bound
cmp
daa
test
imul
pop
mov
cmp
and
ja
es
stos
aam
mov
jmp
mov
pushf
notl
or
mov
jg
sbb
mov
push
inc
adc
andb
mov
stos
ss
mov
shll
pop
test
sbb
icebp
fldt
movsl
mov
out
jl
push
das
add
ret
sar
cmp
mov
outsl
mov
add
mov
dec
xchg
and
icebp
dec
xor
cmp
je
cmp
imul
add
repz
scas
mov
push
sub
sbb
dec
test
cmp
shll
push
fstpl
inc
iret
cld
jg
ret
cmp
dec
add
sub
mov
pop
or
ja
js
add
and
sbb
mov
sti
fists
mov
filds
mov
mov
xor
jb
mov
pop
lods
push
xchg
ficoms
add
dec
ljmp
clc
or
shr
popf
sbb
movsl
icebp
fsubl
aam
jo
jae
sarb
xchg
pop
sti
inc
fistps
test
inc
movsb
and
or
add
sbb
je
mov
add
xchg
xor
mov
mov
cwtl
cmp
filds
adc
mov
push
hlt
sub
mov
rcll
scas
pop
cli
inc
loop
jecxz
adc
test
ret
xor
add
jle
jg
mov
call
adc
and
cmpsb
cltd
dec
xchg
push
dec
sbb
lock
push
mov
test
pop
sarl
dec
mov
cmpsb
sbb
inc
push
je
inc
fbstp
loopne
pop
add
cld
adc
cmp
jg
cwtl
lahf
cmpsb
mov
lea
nop
incb
or
inc
push
sbb
popa
inc
xor
popf
popf
add
pusha
les
add
inc
shrb
ljmp
jmp
sbb
std
mov
jg
jge
and
aaa
push
ror
mov
pusha
scas
ret
xlat
fwait
cld
adc
dec
incb
xor
add
push
decl
jecxz
cmp
int3
inc
xchg
xchg
or
insb
shlb
add
in
inc
je
adcb
out
pop
movsl
push
loopne
icebp
mov
and
mov
fidivrl
jbe
loop
mov
and
jge
mov
imul
ficomps
dec
test
sbb
push
xor
test
sbb
mov
js
lahf
xor
mov
xor
data16
leave
sbb
sub
jp
sub
mov
int3
push
std
xchg
mov
dec
loop
lret
jnp
in
sbb
rorb
lock
sub
mov
adc
sarl
out
idivb
clc
js
add
mov
push
jle
orl
cli
inc
xor
mov
subb
push
cmc
pop
je
sub
pusha
test
dec
ficoms
pop
sbb
shll
ss
pop
ja
ljmp
jle
shr
push
mov
pop
pusha
stc
xor
push
jecxz
fisubrs
add
test
in
lret
roll
push
mov
jo
nop
loopne
rorb
inc
mov
cmp
ficompl
aam
inc
aaa
or
bound
rcrl
xchg
roll
cld
mov
xor
lods
imul
into
stc
add
inc
shrl
scas
inc
cmp
cmp
mov
aaa
inc
shrb
jo
call
lea
dec
mov
push
fldl
ljmp
xor
inc
out
inc
sti
mov
add
fiadds
mov
or
or
test
in
push
sub
xor
or
out
dec
push
aas
les
test
rolb
jbe
mov
enter
push
and
push
out
adc
jecxz
loopne
cld
jmp
pop
insl
inc
xor
sub
dec
cld
lods
ret
filds
ljmp
incl
xchg
ret
push
sbb
push
pushf
jl
add
adc
sub
adc
cld
pushf
push
test
or
mov
sub
sbbb
pop
daa
rclb
dec
pop
testb
mov
mov
and
lock
xchg
add
fs
cmpl
shlb
gs
aad
mov
sub
addb
xor
loope
sbb
xor
sbb
std
mov
popa
lds
stos
jno
insb
je
and
sbb
jmp
adc
aaa
push
push
js
iret
inc
daa
int3
dec
or
add
mov
ds
into
fadds
jl
sarb
lcall
and
sbb
lock
inc
cmp
pop
repz
pop
adcb
push
dec
fstpt
inc
ds
in
sbb
dec
into
add
adc
push
add
push
mov
mov
inc
adc
pop
lock
fcomps
test
adc
popf
movsl
dec
inc
decl
adc
insl
sub
loopne
std
push
mov
inc
add
mov
dec
stos
mov
mov
repnz
pop
mov
popf
and
mov
int
es
shll
outsb
pusha
ficompl
andl
inc
xchg
cs
or
or
add
mov
pop
mov
testb
cs
pop
sbb
push
cwtl
int3
lret
incb
pop
in
test
xor
enter
fistpll
push
out
cmp
inc
push
fs
loope
call
inc
fisubrl
and
shll
fdivr
stos
add
xchg
jg
push
scas
add
sbb
xor
push
add
xchg
fs
out
iret
fs
mov
or
xor
lcall
cld
pop
add
cmpsl
xor
out
dec
clc
jecxz
and
lret
cmpb
imul
orl
rcl
xor
addr16
xor
sbbb
in
rcr
cmp
push
push
push
loopne
add
mov
add
sar
or
leave
imul
das
cmc
adc
shrb
and
mov
inc
push
pusha
add
add
into
sbb
addr16
scas
loope
daa
mov
sub
dec
mov
es
loope
scas
fcmovu
pop
adc
cld
sbb
scas
jb
or
pop
push
xor
cmp
js
rclb
cmp
mov
add
mov
shrb
incl
lock
mov
fistpl
push
stos
adc
xchg
sbb
popa
jne
xlat
mov
add
jns
cmp
add
cmp
mov
xchg
mov
popl
xor
mov
mov
cli
pop
add
lahf
xchg
dec
adc
negl
insb
cwtl
mov
test
cmp
jecxz
push
jg
and
dec
or
out
xchg
mov
loop
jp
cmp
and
fsts
ret
xchg
push
adc
xchg
clc
adc
lock
dec
sbb
or
hlt
mov
cmp
inc
sub
pop
mov
xor
mov
shll
ljmp
jmp
inc
cld
adcb
aas
mov
jbe
and
or
sbb
bound
cmpb
call
sbb
xchg
xor
push
mov
int3
push
add
enter
in
and
cwtl
add
or
les
push
and
and
es
stos
std
and
and
rorb
xor
daa
std
adc
sbb
mov
lcall
popf
xchg
cmp
mov
addl
adc
cli
adc
add
xor
cld
aaa
sar
dec
sete
add
push
and
add
jnp
add
adc
shrb
call
decl
shrb
out
stc
cmp
or
loopne
gs
mov
add
ret
and
xor
xchg
lcall
cmpsb
pushf
dec
mov
test
shll
mov
loope
or
sbb
in
mov
cld
mov
mov
sub
add
sbb
icebp
jg
outsb
jb
jno
push
cmp
in
shlb
jecxz
testb
stos
mov
xor
mov
xor
add
das
ret
cmp
inc
or
lcall
out
popa
pop
sbb
call
or
lcall
mov
ja
mov
outsl
nop
adc
sub
call
mov
ljmp
mov
outsl
dec
inc
mov
jle
aas
pop
xchg
pop
std
ja
xor
cmp
test
test
adc
insb
cmp
sub
lea
mov
dec
xchg
push
add
rolb
sub
xchg
les
int3
jmp
add
je
cmpsb
roll
test
adc
rorb
xor
dec
int
hlt
push
inc
gs
insl
adc
ret
cmp
les
sti
push
lds
adc
add
xor
out
cmpsl
jl
sub
lahf
and
pop
adc
pop
or
pop
test
cmpsb
mov
ljmp
cli
inc
addr16
shlb
cs
ret
scas
sbb
stos
or
sbb
xchg
sub
push
incb
pop
imul
and
add
add
mov
pop
cmpsl
jmp
cwtl
sub
addr16
xchg
ljmp
subb
in
andl
in
cltd
rolb
ss
dec
jl
mov
add
mov
pop
push
xor
jp
pushf
adc
in
fldcw
mov
cmp
or
jns
fdivrl
lock
sbb
inc
xor
push
fisubrl
mov
mov
bound
inc
nop
or
fdivl
das
shlb
rolb
in
inc
xchg
orb
ret
add
inc
add
and
test
pusha
cld
imul
pop
enter
mov
loopne
clc
jmp
mov
jo
scas
adc
mov
cmp
and
sbb
add
mov
jmp
nop
imul
insl
sub
jge
mov
adc
std
mov
mov
sub
in
add
and
jg
icebp
pop
scas
adc
add
lods
fstpl
push
dec
clc
sbb
outsb
nop
lcall
xor
ret
xor
cld
dec
xchg
jno
bound
scas
jb
sbb
and
in
fwait
mulb
sbb
filds
clc
add
cld
mov
push
xchg
movsb
clc
aaa
sub
sbb
and
fwait
cmp
jecxz
pushl
out
mov
mov
and
adc
aam
and
pop
inc
dec
or
jmp
mov
imul
sub
or
cld
add
pusha
sub
sbb
ljmp
adcl
dec
push
pop
add
inc
inc
in
lea
adc
inc
les
xchg
jnp
out
faddl
jno
iret
add
adc
fisubrs
xchg
push
sub
xor
out
shlb
dec
jg
cs
cmp
sub
jle
sub
testb
in
test
ret
xor
sbb
inc
xchg
jle
repz
fiadds
add
std
dec
movsb
fadds
and
mov
adc
test
add
fcmovb
jp
add
push
add
fimull
mov
je
dec
sbb
ljmp
fisttps
jo
ja
cld
loopne
mull
shrb
cmp
les
insb
cltd
data16
aas
adcl
mov
push
dec
adcb
addr16
and
push
es
jg
repnz
cli
hlt
pop
mov
fwait
hlt
adc
je
xchg
xchg
imul
dec
mov
les
sub
das
pusha
adcb
orl
sbb
cli
rclb
jl
jecxz
sbb
or
lret
sbb
int
cmp
arpl
add
outsl
adc
out
out
push
inc
out
test
xchg
jl
cmpsb
out
sbb
push
data16
and
andb
pop
push
sbb
js
loop
add
mov
roll
or
lcall
fcmove
nop
ds
cld
into
cmovge
add
in
xchg
cmp
xorb
jmp
mov
adc
xchg
or
push
mov
push
or
fldt
aas
jg
sub
lcall
xchg
xlat
roll
fs
mov
mov
xchg
adc
hlt
inc
js
adc
mov
movsl
fwait
fs
or
mov
mov
enter
sbb
xchg
sub
xor
std
fs
cltd
insl
push
fdivl
jmp
jb
clc
add
mov
dec
jl
mov
aas
or
int
mov
push
and
repz
jbe
push
mov
test
insb
and
push
sbb
inc
push
pop
jne
cli
mov
dec
aam
push
xchg
push
iret
arpl
std
pop
jp
cwtl
adc
mov
mov
fcmovnbe
aad
ret
movsb
adc
xorl
jg
imul
sbbb
and
ret
pop
jne
add
adc
mov
imul
loope
push
ljmp
push
test
or
rcrb
mov
add
and
fwait
push
push
or
mov
inc
test
subl
mov
outsl
bound
mov
xchg
imul
nop
add
mov
insl
inc
loope
xorb
push
adc
dec
bound
shrb
addb
add
pop
or
lods
jg
and
add
sub
mov
push
adc
inc
push
or
adc
or
insb
pop
sbb
rcr
mov
jno
sub
sbbl
icebp
inc
mov
clc
add
inc
adc
repnz
gs
ljmp
and
add
dec
insb
clc
scas
clc
dec
subb
adc
mov
test
out
cld
jg
add
push
imul
dec
int3
decl
mov
cmp
ja
inc
bnd
and
dec
movsb
loop
ja
cld
das
xor
push
or
pop
cltd
mov
push
pop
hlt
addb
mov
inc
push
mov
xchg
sub
jbe
add
in
cmpsl
adc
sub
rolb
lods
jecxz
cli
gs
enter
adc
movsl
ljmp
ljmp
pop
out
mov
push
sub
adc
cs
push
or
nop
loop
lds
sub
mov
and
lret
loop,pn
mov
ja
jg
lods
jecxz
and
sub
pop
pop
loopne
push
mov
xchg
test
cli
out
mov
sbb
mov
sub
mov
arpl
xor
adc
cmp
decl
lock
mov
and
movsl
inc
cld
push
xor
mov
adc
lret
orl
dec
sub
adc
insl
jge
cmpsl
pop
ret
mov
push
xchg
mov
cmp
and
jecxz
dec
xchg
mov
sub
sar
add
and
inc
mov
push
jmp
mov
fcmove
sub
lods
loopne
or
pop
cwtl
cmpsb
add
in
push
jg
mov
loope
fidivrs
sub
or
sub
clc
pop
xorb
push
mull
sarb
ret
insb
mov
or
sub
rolb
aas
add
add
int
lds
mov
lcall
and
pop
mov
cmp
les
mov
inc
imul
lret
clc
xor
dec
adc
pop
mov
xor
mov
adc
repnz
std
xor
inc
adc
fs
inc
imul
add
xor
loop
adc
jo
mov
shll
lods
orb
pop
dec
add
out
mov
lods
add
add
ret
ljmp
popf
aad
mov
push
xchg
add
repnz
mov
cltd
int3
cltd
inc
pop
xor
loopne
adc
fistps
push
xor
mov
cmpsb
dec
dec
hlt
mov
dec
loopne
cld
pop
jbe
add
inc
movsb
or
add
pop
bound
pushf
xchg
call
enter
inc
push
sub
lahf
jns
add
add
fucom
out
fdivrs
push
push
sahf
cmp
mov
mov
xlat
nop
lcall
adc
fs
pop
mov
mov
addl
push
inc
push
test
inc
xchg
sbbl
adc
icebp
int3
in
mov
jle
inc
clc
dec
inc
xchg
inc
xorl
sbb
adcb
imull
incl
jl
xor
or
dec
lock
aad
nop
inc
rolb
jle
push
jmp
psubusb
and
int
sub
call
pop
hlt
aad
add
adc
pop
lods
fisttpll
shll
or
xchg
jge
jmp
sbb
mov
sbb
and
cmp
jle
pusha
cmpb
aam
sub
sbb
std
insb
xchg
sahf
mov
dec
movsl
jbe
dec
aas
sti
outsl
fisttpll
jbe
scas
cmp
scas
adc
mov
aaa
sbb
rclb
add
mov
inc
push
adc
xchg
sbb
add
mov
les
sub
pop
push
mov
mov
pop
dec
sbb
jbe
aam
daa
add
push
push
xor
cmp
out
xor
xchg
loop
in
loopne
cmpb
outsb
rorl
push
inc
repnz
cld
mov
hlt
nop
sub
sub
test
scas
sbbb
xchg
out
aad
xor
icebp
rcll
push
cmp
adc
dec
lcall
imul
mov
lods
sbb
dec
das
jne
sub
inc
cli
shrl
add
ret
lcall
in
sbb
push
movsb
nop
fcompl
lea
mov
adc
pushf
mov
mov
test
loopne
inc
cmpsl
pop
adc
loope
mov
inc
test
insl
das
cmp
ljmp
jecxz
cwtl
ret
xchg
lds
mov
xchg
addb
ja
fcoms
das
jg
jmp
rolb
test
cli
insb
nopl
inc
std
pop
or
subb
popf
pop
pop
mov
loopne
xchg
adc
push
adc
mov
jg
call
and
sub
add
mov
rorb
jg
and
push
testl
push
pop
fwait
aam
shl
insl
mov
mov
mov
into
movsb
sbb
mov
push
cmpl
add
inc
xchg
jecxz
cs
mov
enter
cmpb
lcall
pop
ret
inc
push
sbb
mov
and
lods
xchg
jg
pusha
pop
sub
xor
cmpsb
push
lret
adc
mov
pop
sahf
insb
sub
mov
push
repnz
pop
outsl
dec
sub
jb
or
les
rclb
adc
push
popf
mov
and
xor
shrb
jnp
pop
incl
std
mov
jg
inc
sub
jmp
add
cmp
test
dec
dec
or
xchg
rolb
outsb
cmpsb
ud0
int
addr16
or
xor
js
lock
cmp
aas
add
cs
lcall
sub
and
aam
testb
jmp
pop
cli
push
adc
push
lea
cmp
sbb
outsb
ss
cmpsb
and
inc
in
insl
fcmovu
int3
fadd
adc
ror
add
clc
mov
stos
shlb
push
and
add
pinsrw
mov
stos
idivb
pop
sub
add
es
adc
push
pop
inc
lock
mov
aas
xor
sub
pop
clc
add
loope
mov
ljmp
repnz
shll
aad
push
dec
xor
lock
orl
outsb
mov
xchg
lea
in
push
add
jecxz
cs
cmpsb
sub
inc
inc
xor
or
and
inc
out
out
movsl
add
icebp
jno
scas
cmp
xchg
data16
icebp
clc
pop
jmp
adc
or
add
mov
adc
add
scas
ljmp
push
std
sub
jmp
popa
jno
mov
mov
inc
adc
push
cmp
adc
mov
push
stos
fldcw
dec
jne
in
dec
adc
addr16
cmpsb
xor
adc
popf
mov
insb
xor
test
cmp
adc
fisubrl
ds
or
cs
mov
mov
in
inc
and
mov
or
xchg
mov
dec
inc
mov
dec
add
push
mov
inc
inc
fcoms
fs
cmp
sbb
push
cmp
popf
into
push
ret
sub
mov
pop
test
push
rclb
sub
xor
cmpsb
test
xor
movsb
lods
push
xlat
push
mov
sbbb
sub
fwait
inc
mov
orl
inc
pusha
lret
push
loopne
ret
aas
in
mov
stos
sbb
mov
sub
in
xor
sub
maxps
cmp
add
adc
xor
mov
or
xchg
rcl
aaa
pop
mov
ror
addr16
stos
imul
sbb
ret
xchg
test
mov
iret
mov
and
xchg
cmp
bound
mov
push
mov
add
and
xor
xchg
and
aam
insb
cli
and
push
mov
lds
jle
sub
or
and
xchg
rorb
test
jecxz
movsb
xor
loope
loop
jg
test
scas
clc
fcomip
pop
add
jge
cmpsl
adc
adc
into
sahf
and
inc
mov
mov
rcrl
adc
sbb
mov
xchg
xlat
adc
jl
sbb
mov
orb
mov
aaa
popa
pushf
arpl
paddb
je
aas
lret
mov
cmp
movsb
and
movl
ss
out
out
das
xor
sbb
add
loope
push
jmp
int
call
daa
jmp
add
mov
clc
mov
dec
mov
loop
adc
loop
nop
lock
push
jo
adc
clc
jbe
lods
adc
lret
adc
cmc
and
pop
mov
rclb
add
adcb
nop
pop
addb
mov
pop
sub
sahf
inc
inc
xchg
cli
adc
cmp
or
xchg
dec
push
ret
sub
push
add
adc
add
sub
outsb
into
aam
mov
and
jo
cltd
fcmovnu
mov
bnd
inc
cli
into
push
mov
push
mov
xor
bound
pusha
add
inc
inc
cmpsb
cmp
push
cmp
loopne
fiadds
sbb
push
or
xor
add
xor
enter
pop
and
pop
orb
popf
xchg
pushf
test
push
and
sub
mov
push
sub
sub
hlt
jg
xor
mov
lret
pusha
std
jg
mov
call
sahf
dec
dec
inc
call
sbb
enter
jne
inc
sub
jl
dec
popf
les
data16
dec
mov
xchg
pop
inc
add
dec
outsl
mov
repz
push
outsl
mov
outsl
dec
inc
jp
adc
jo
dec
or
pop
je
mov
fdivr
pushl
or
or
in
mov
decl
fisubrl
jbe
cmp
or
push
incl
ds
dec
xchg
or
data16
dec
mov
fwait
fs
mov
loop
subb
fists
ficoms
je
testb
cs
imul
lcall
cmp
fsubs
sub
pop
dec
inc
aam
mov
jp
test
sbb
add
rcrl
pushl
enter
fists
add
stos
dec
adc
out
push
add
test
pop
sub
nop
jo
cmp
mov
mov
sub
outsl
cli
std
incl
jnp
cld
add
mov
jmp
lea
adc
cmp
stos
jmp
push
imul
lock
cmp
pushf
hlt
repnz
out
sub
lods
push
popa
push
jle
add
ljmp
stos
std
fadd
in
mov
rclb
add
mov
add
insb
ret
mov
add
add
repz
pop
aas
in
nop
or
cwtl
sbb
mov
push
adc
lock
pop
mov
in
mov
xchg
stos
and
jecxz
loopne
scas
xor
push
std
push
adc
xlat
js
xchg
repz
popf
jb
cmp
test
jg
sbb
mul
xchg
cmp
mov
mov
xchg
jno
in
push
rclb
jle
pushf
fistpll
xchg
jmp
mov
or
cmp
or
jbe
clc
sbb
mov
inc
inc
fstl
loope
add
cmp
fdivs
mov
sti
loopne
push
mov
or
pop
fst
cmpsl
inc
cmp
mov
inc
add
push
and
sbb
mov
and
xchg
jle
adc
add
mov
or
pop
js
cmp
jmp
inc
cltd
xchg
mov
lock
dec
xor
sbb
dec
lods
push
mov
or
incl
fnstcw
and
mov
pop
xchg
adc
jg
push
fistps
xchg
or
imul
mov
js
mov
loopne
and
add
sbb
ss
jno
or
mov
xor
or
data16
ret
das
and
pushf
pop
ret
push
sub
add
or
mov
push
pusha
inc
push
rclb
ss
push
pop
jmp
mov
mov
and
mov
outsl
popa
das
inc
inc
sti
adc
sti
jno
pusha
fwait
adc
mov
jb
fidivs
sbb
aaa
add
add
mov
mov
or
imul
pop
cmpsl
ret
mov
add
fwait
jb
pop
add
cmp
int3
push
sahf
lahf
lods
decl
mov
cs
es
sahf
push
dec
mov
repnz
rcll
pushf
pushf
mov
inc
adc
and
mov
adc
pop
clc
rcl
in
testl
adc
pusha
add
shl
jbe
ja
sub
pop
xchg
iret
pop
pop
sbb
add
cmp
stc
shrb
adc
inc
add
out
inc
mov
xor
test
fstps
cld
xor
push
fwait
dec
xchg
pop
push
push
bound
dec
fnstenv
sbb
jb
test
sarl
push
nop
movsl
lock
mov
or
sub
and
xchg
cmp
out
nop
jo
shl
and
mov
add
scas
push
sub
jo
push
mov
clc
or
fistpl
add
lahf
jl
clc
fwait
enter
and
fmulp
xchg
outsb
loope
ret
or
xlat
add
add
cld
popa
loope
clc
ror
stos
push
sbb
cmp
je
mov
cltd
cwtl
pop
or
pop
clc
lods
add
and
jg
add
push
jmp
add
adc
or
jmp
jge
mov
imul
popf
inc
lock
jo
ficompl
mov
and
lahf
andb
pop
push
xor
push
popa
pop
sbb
ficomps
push
mov
xchg
imul
fcmovnbe
adc
or
mov
popa
add
and
xchg
xchg
sub
sbb
adc
cld
dec
cwtl
inc
add
mov
add
jno
mov
add
push
cmp
mov
or
pop
and
lods
xor
dec
sub
rcl
push
jbe
bound
rcr
into
dec
shl
xchg
add
inc
sbbb
fs
dec
jmp
testb
aas
add
mov
lods
nop
cld
loope
lods
or
jae
cmp
lods
dec
repnz
sbb
xor
cmp
fiadds
sahf
push
pop
fs
mov
imulb
test
repnz
out
in
mov
icebp
jg
xor
sbb
mov
scas
add
loop
mov
les
xchg
dec
push
mov
cwtl
in
shlb
push
mov
xor
loope
push
test
decb
push
fsubrs
clc
jmp
jge
sbb
xchg
mov
jle
and
jmp
xor
out
mov
push
popa
ljmp
jecxz
push
jecxz
add
stos
sub
add
jbe
lret
push
out
leave
bound
cld
js
jl
add
stc
mov
xor
outsb
je
sbb
es
rcll
jle
mov
stos
add
lods
daa
push
out
inc
mov
sbb
lods
ja
sub
xor
bnd
adc
jecxz
fwait
push
ljmp
add
int
pop
jno
pop
cmp
cmp
add
fistpll
inc
or
inc
xchg
add
xchg
jle
adc
dec
sbb
cli
cmc
xchg
xchg
pop
movsb
in
scas
jle
add
popa
pop
pushf
fiaddl
fwait
cmpsb
xchg
lea
cs
inc
in
pop
bound
sub
add
pushf
mov
aad
lea
adc
subb
pop
mov
adc
or
sub
fsts
lods
and
out
cmp
mov
adc
sub
add
mov
movzwl
sub
mov
dec
and
test
sub
or
and
cmp
cmpsl
leave
ljmp
fidivl
fwait
mov
and
inc
and
sbb
icebp
jno
pop
pop
push
push
jl
neg
add
add
jmp
loop
arpl
dec
push
fsubs
jecxz
nop
les
in
mov
xorb
loop
aad
pop
fcompl
sti
pop
or
iret
iret
ret
lock
fistps
cltd
loop
add
mov
pusha
cmpb
fcomps
inc
pop
or
sub
loope
fsubrs
or
incl
insb
adc
push
xor
addb
xchg
js
shr
pop
dec
inc
dec
add
addr16
cmp
subb
hlt
das
jbe
std
or
pushf
lret
stos
ss
or
ret
clc
push
add
ds
jo
stc
mov
fcmovu
push
mov
fcomps
xchg
sbb
adc
divb
adc
xlat
call
add
sub
cli
pop
call
test
out
int
leave
aam
or
adc
jp
movsb
xchg
xchg
lods
mov
mov
popa
jbe
sbb
outsb
inc
aam
out
outsb
imul
and
loope
rorb
adc
nop
fcompl
mov
inc
xchg
in
mov
inc
and
addr16
loopne
gs
sbb
cmpsb
mov
pop
inc
sbb
cwtl
lret
stos
call
pushf
sbb
jmp
nop
shlb
pusha
or
mov
loop
outsl
and
sarb
mov
dec
inc
mov
add
sbb
dec
aam
aam
les
and
stos
push
orb
fdivl
jl
mov
xchg
dec
and
daa
sub
test
loope
gs
lods
sbbb
cltd
sbb
push
cmp
mov
cmp
clc
lret
sub
push
movsb
xor
imul
mov
add
push
pop
je
push
fcoms
ljmp
xlat
sti
sub
movsb
sahf
add
mov
mov
jne
bnd
arpl
xchg
jg
aas
adc
dec
xchg
mov
add
lock
mov
aad
into
xor
jne
popa
je
stc
add
mov
stos
jl
arpl
add
adc
ds
xorb
icebp
jbe
in
div
and
mov
jp
std
daa
or
jb
inc
mov
nop
cmp
jmp
or
inc
add
loopne
or
cmc
addb
lock
mov
inc
out
out
ljmp
int
push
lods
xchg
jbe
push
cmp
incl
xor
sbb
clc
inc
pop
inc
fcomps
mov
je
adc
add
repnz
jge
push
add
cli
aad
shrb
xor
dec
xchg
sti
pusha
icebp
movl
orl
test
dec
mov
je
mov
movb
popf
fnstsw
insb
rcr
dec
pop
dec
stos
add
popl
push
xchg
add
loope
dec
or
add
mov
mov
cs
dec
inc
xchg
lret
dec
inc
out
rcrl
push
mov
and
inc
mov
jo
mov
mov
repnz
push
mov
cmp
xor
js
into
cmpsb
faddp
ret
mov
pusha
or
clc
addl
aas
arpl
mov
movsl
mov
cmp
lret
mov
xor
add
fisttpl
outsb
mov
cmpsb
pop
in
push
aas
lcall
cmpb
cmp
mov
mov
push
xlat
push
add
fwait
dec
cmc
cmpsb
xor
lods
addb
or
add
insb
test
mov
or
inc
pop
pop
mov
int
std
jle
sub
or
movsb
add
incl
in
stos
add
inc
xlat
sbb
jl
and
ret
pop
push
addr16
jne
clc
push
mov
push
pop
rcrb
xlat
les
shr
jmp
cli
xchg
mov
inc
stos
ljmp
scas
push
stos
addr16
sahf
or
fmull
mov
inc
mov
daa
stos
dec
sbb
push
mov
dec
sbb
aad
sar
and
lea
out
enter
lods
mov
sbb
sbb
jne
mov
lret
repnz
mov
cmpsb
lock
adc
loop
dec
cmc
call
xchg
and
xchg
jle
mov
in
out
das
sarb
jb
in
push
aam
mulb
inc
adc
ds
xchg
pop
push
icebp
xorl
mov
pop
aam
xchg
ret
mov
lret
jbe
cld
adc
shl
jbe
adc
popf
mov
flds
mov
xor
adc
mov
xor
mov
pop
repz
jbe
cs
add
clc
sub
jge
or
lods
dec
mov
nop
sub
mov
mov
test
cli
data16
xchg
push
push
mov
push
xchg
pop
dec
xor
push
pop
mov
adc
adc
xchg
or
dec
fs
push
insb
mov
test
stc
mulb
mov
mov
call
xor
jmp
adc
hlt
test
ja
and
es
push
and
jbe
fildll
xchg
jle
cmp
xchg
inc
lods
mov
inc
rcr
cld
lcall
sbb
fmull
cmp
repz
mov
cmpsb
mov
fstpt
sub
pop
daa
sbb
movsb
jmp
pusha
jecxz
lea
xchg
lret
data16
dec
shlb
cmp
iret
enter
ds
daa
mov
add
xchg
out
shrb
fisubrs
dec
push
cli
loopne
push
sbb
mov
in
add
scas
cld
pop
cld
mov
xor
out
popa
or
inc
dec
mov
fcompl
ret
jecxz
addl
jle
lods
xchg
mov
stc
mov
sbb
test
fildl
pop
mov
incb
subl
or
or
or
sub
pushf
xor
pop
je
inc
mov
fstpl
mov
lea
mov
fcos
in
push
inc
inc
push
dec
adc
push
aam
jmp
mov
fisubrl
rcll
leave
cmpsb
clc
stos
stos
hlt
mov
mov
xchg
lahf
cli
loop
imul
mov
sbb
rorb
mov
and
movsb
cmpsl
shrb
jg
aam
inc
xchg
or
ljmp
add
call
mov
sbb
adc
test
mov
in
xchg
sub
add
loop
or
adc
pop
cmp
mov
sub
jg
cltd
clc
cmp
or
mov
jmp
mov
mov
dec
mov
dec
or
and
icebp
jp
jnp
fistpll
push
decb
outsl
push
data16
or
adc
add
loope
inc
jge
push
call
cmp
dec
cmpsl
pop
xchg
hlt
je
in
mulb
push
cmovp
nop
outsb
push
or
cld
and
push
mov
shrb
mov
sub
dec
adc
movsb
adc
bound
jge
mov
scas
mov
sub
lret
jmp
inc
nop
mov
out
xchg
push
adc
fldl
cli
nop
stc
nop
orb
push
add
push
xchg
loopne
fimull
ljmp
decl
sti
cmp
mov
fiaddl
mov
adc
cmp
lods
jecxz
add
out
cli
dec
xchg
fmuls
fidivrl
and
or
jg
dec
lcall
or
and
imul
stc
in
add
test
jp
out
ret
fstl
mov
push
cmc
and
or
cmp
test
in
mov
dec
in
xchg
in
sub
sbb
nop
pop
cld
inc
fists
cli
cmp
in
sbb
dec
lcall
stos
nop
pop
inc
mov
fistl
test
incl
or
int3
and
cmc
mov
xchg
bound
push
nop
dec
sub
adc
rclb
cwtl
xor
jns
cmp
rcrb
add
into
mov
filds
dec
xchg
loop
shlb
loopne
push
cli
pop
add
lcall
mov
pop
sub
or
add
cmpsl
ret
add
js
sub
call
hlt
lcall
loopne
dec
dec
jmp
mov
hlt
cwtl
imul
or
adc
mov
scas
rcl
loopne
aas
lds
dec
xchg
bound
xchg
and
mov
or
mov
or
fwait
mov
pop
push
cs
aas
pop
add
or
fs
push
ret
cmp
jae
int3
orb
mov
sbb
cwtl
xchg
xchg
push
insb
cmp
cmp
ret
test
xor
pusha
loope
mov
jl
orb
xor
or
lods
pop
aad
adc
sub
mov
mov
test
pop
shlb
sub
cmc
das
sti
add
adc
mov
mov
mov
lock
int3
mov
js
mov
fnstsw
lret
add
sbb
cld
jg
fcmovbe
jae
adc
fwait
les
jbe
push
or
jno
push
mov
jp
adc
mov
aad
pop
jg
fmulp
int3
or
and
jmp
sbb
inc
pop
sub
mov
dec
jg
push
in
or
or
bound
sub
leave
dec
and
mov
and
sub
loope
pushf
mov
shrl
sbb
pop
xor
pushl
pop
dec
jl
push
leave
cli
stos
pop
pop
sub
dec
sbb
imull
in
push
rorl
test
repnz
ret
pushl
inc
push
adc
xor
sbb
adc
ret
inc
loope
aas
daa
pop
or
jo
inc
lret
loopne
cwtl
leave
jbe
and
pop
push
fs
push
rclb
inc
push
xor
ds
xor
std
jg
inc
xchg
jbe
pop
mov
jns
dec
and
es
inc
movsl
andb
and
pop
jmp
inc
sub
sub
movl
cmp
mov
add
imul
sub
es
add
mov
mov
mov
jg
jp
repz
subb
add
pop
addl
dec
add
push
mov
add
push
sub
add
clc
xor
scas
sarb
mov
outsb
call
lret
sub
sbbl
in
pop
movsb
idivb
adc
imul
or
sbb
nop
push
mov
pop
hlt
decl
das
in
dec
dec
push
mov
idivb
dec
jl
add
ss
and
adc
incl
mov
repnz
add
stos
xor
dec
dec
mov
inc
cs
lock
loopne
pop
into
rclb
addr16
add
pop
sub
push
push
movsb
dec
js
ja
shrb
in
aad
xchg
jo
mull
imul
jne
jns
icebp
add
iret
sarl
pusha
stc
adc
push
hlt
or
ds
fcoml
es
mov
sbb
les
icebp
jg
mov
cli
mov
inc
jp
decl
addr16
sub
cmp
xchg
push
add
fdiv
sbb
test
xchg
bound
xchg
or
test
pop
push
inc
push
dec
push
nop
sbb
pusha
dec
inc
xor
cmc
push
lcall
add
outsl
cmp
pop
jne
jae
arpl
xchg
dec
mov
aaa
jmp
enter
popf
adc
test
adc
cwtl
pop
cld
aaa
leave
pop
pop
repz
cli
xor
cli
push
lods
add
cmc
cmp
xor
jo
xchg
cltd
xor
popa
lock
sub
jg
pop
jnp
dec
mov
mov
fidivrl
pop
loop
data16
clc
sub
inc
mov
pop
add
dec
mov
dec
dec
bound
loopne
mov
xor
pop
ret
ljmp
cmp
and
daa
loopne
subb
ja
mov
mov
addr16
lahf
xor
push
or
cmc
push
rclb
add
push
push
inc
mov
inc
fs
cld
outsl
stos
sub
fisubrl
xchg
add
mov
mov
addb
imul
pop
adc
sub
aas
scas
push
popa
es
jnp
and
mov
out
mov
notb
mov
or
ljmp
shll
inc
pop
or
add
mov
cmc
or
jge
jne
and
fcmovnbe
pop
mov
mov
xor
mov
pop
insb
xchg
adc
cld
xchg
adc
lret
push
sub
adc
int3
mov
add
xchg
stc
mov
ljmp
add
mov
test
sbb
mov
mov
lea
xchg
in
ljmp
ja
js
div
adc
test
loop
lcall
cmpsb
decl
mov
mov
dec
pop
xor
mov
jle
mov
shr
cmp
inc
lea
xor
filds
insb
sub
inc
fsubrl
sub
shrb
cmc
push
mov
push
xor
dec
sbb
ljmp
lret
add
xor
jo
ss
mov
xor
fadds
imul
scas
push
xchg
mov
jmp
push
pop
adc
push
pop
ljmp
adc
inc
mov
mov
loopne
xchg
sbb
fsubrs
mov
repz
das
js
fwait
push
jb
nop
aam
int3
stos
mov
xor
cmc
add
incl
int3
lcall
les
in
jg
movsl
sub
out
and
les
decl
or
negb
cmp
clc
mov
lods
sub
aaa
pop
sahf
mov
fbld
popa
fmulp
mov
inc
arpl
icebp
call
lock
push
sets
push
push
jge
sub
cmp
push
add
decl
pop
push
aad
sub
movsl
push
aam
es
mov
xor
and
ja
pop
aas
xchg
cli
pop
inc
filds
stos
push
stos
inc
push
xchg
dec
inc
cmp
ljmp
aam
lahf
sbb
ret
cmp
and
sar
aas
subb
shrb
inc
fs
xchg
xor
cltd
jnp
adc
mov
ljmp
loopne
rorb
or
or
divb
sbb
jp
mov
dec
repnz
sub
add
pop
ud0
and
stos
cmc
jbe
adc
cmpps
mov
cmp
xchg
pop
fdivl
jnp
add
insl
xchg
test
aas
jecxz
mov
sbb
repz
lret
lods
add
cmp
and
push
js
jo
sbb
pushl
jns
mov
pop
adc
jnp
mov
addr16
mov
repz
cmp
into
mov
test
std
jg
and
addb
dec
xorb
int
into
jbe
scas
xor
shlb
test
dec
loopne
or
das
clc
cmp
pop
test
lret
xchg
jmp
nop
pop
cld
inc
push
add
clc
adc
ds
push
pop
cmp
fiadds
mov
dec
shrl
sahf
dec
push
fcomip
cmpsl
fcoms
add
cmc
decl
mov
sti
test
xor
dec
add
rorb
dec
add
shlb
add
repz
inc
clc
push
mov
fmuls
add
inc
or
mov
jne
add
sub
xor
enter
lock
cltd
jp
fs
or
lcall
aas
test
xchg
bound
sub
test
pop
mov
sub
out
je
dec
sbbb
inc
sub
adc
and
xchg
loop
ret
rcll
mov
or
push
sbbb
loope
xor
inc
push
mov
inc
arpl
je
es
out
lock
push
fmull
inc
dec
lods
test
ja
inc
sarb
mov
and
icebp
add
and
cmp
orb
insl
mov
std
lcall
out
sub
dec
add
inc
lret
js
bound
mov
sub
add
mov
daa
add
add
inc
or
aad
dec
add
mov
jmp
repz
bound
loope
sahf
inc
and
pop
lods
pop
enter
ret
in
lods
mov
loopne
das
mov
jne
add
xchg
add
mov
or
out
or
mov
and
dec
or
add
jbe
add
sbb
or
mov
ret
pop
fdivl
movsb
xor
outsl
jbe
add
push
icebp
mov
pop
clc
add
aas
pop
adc
call
rorb
mov
test
rcl
dec
in
adc
aam
mov
enter
aaa
lea
adc
fs
fadd
cmp
filds
shlb
fisttps
or
ffreep
adc
popl
push
ss
sub
test
pop
aas
sub
lret
adc
dec
lcall
sbb
xchg
repnz
xor
mov
movsl
mov
mov
mov
mov
mov
rcrb
dec
loope
push
ja
subb
popf
cltd
or
pop
loope
cmp
or
fmuls
loopne
out
xchg
sub
mov
push
push
push
nop
mov
adc
cli
cwtl
jp
imul
scas
xor
adc
jne
lahf
cs
xchg
sub
xor
jbe
lret
fucomip
cld
pusha
andl
pushf
nop
or
lcall
inc
cmp
imul
rcrl
mov
push
xor
mov
lcall
mov
rcrb
jle
ja
lahf
mov
xchg
pop
add
mov
mov
fidivs
mov
add
and
jmp
cmp
mov
sarb
mov
or
mov
mov
or
je
testl
pop
pop
test
mov
sar
test
xor
inc
mov
xchg
sub
ljmp
stos
lods
out
scas
int
in
mov
inc
movsl
test
jecxz
les
sub
add
pop
clc
pop
adc
les
test
pop
shlb
outsb
push
sarl
jg
sbb
in
pushf
in
jecxz
aaa
lods
push
push
repnz
sub
imul
divl
jg
cmp
adcl
pop
test
cmpb
sarb
xor
outsb
cmp
mov
sub
pop
sub
mov
sbb
xor
popa
push
mov
out
xchg
pop
push
adc
inc
jmp
loopne
lcall
loop
or
add
xchg
inc
sbb
xchg
xchg
xor
sub
mov
cltd
xchg
call
mov
adc
jno
xor
pop
loop
push
and
jnp
mov
xchg
adc
mov
loopne
hlt
adc
and
lock
iret
mov
xchg
jmp
loope
scas
push
jp
jl
imul
lds
mov
fistps
mov
mov
pop
and
cmc
xor
ljmp
out
push
repnz
pop
lret
and
cmp
dec
stos
jbe
divb
push
orl
into
ret
adc
clc
js
pop
loopne
or
dec
push
push
mov
push
mov
inc
lods
inc
inc
int3
xor
fildll
js
mov
pop
mov
jmp
mov
icebp
add
add
sbb
dec
add
cwtl
add
dec
lds
jmp
in
sub
mov
push
int3
and
push
jns
mov
decl
cwtl
mov
or
and
pop
addr16
jbe
inc
xchg
jns
cs
cmp
inc
xchg
or
leave
sbb
std
call
inc
cli
test
orb
or
and
dec
push
clc
std
in
jp
inc
xchg
clc
jae
in
push
mov
mov
daa
add
shrd
fsubrs
pop
cmp
xor
or
lea
sbb
into
cld
adc
push
insb
insl
insb
xchg
dec
adc
inc
mov
pushf
sbb
xor
push
or
incb
push
loope
shrl
mov
clc
movsl
inc
adc
or
roll
or
into
in
push
jge
push
jbe
add
xor
ret
xor
push
xor
adc
xor
sub
xchg
xchg
jp
and
js
inc
mov
lea
in
fs
xchg
sarb
inc
js
or
jb
push
call
fdivrl
dec
loopne
xor
repnz
push
mov
lock
adc
fucom
jl
addb
and
sbb
xchg
mov
mov
jle
leave
xorb
push
popf
and
jge
test
fiadds
fdivrs
into
adc
pop
mov
inc
jl
and
icebp
sbb
fwait
pop
cmpsl
sub
outsb
dec
testb
scas
or
dec
and
and
inc
xor
jbe
push
mov
js
push
adc
inc
mov
notl
push
fimuls
fisubrl
fimull
shrb
popf
clc
in
pop
scas
push
and
pop
movsl
mov
fsub
xchg
ret
adc
jp
mul
adc
pop
fiaddl
xor
rorl
ffreep
inc
or
push
pcmpeqd
xchg
inc
repz
pop
icebp
xchg
cmp
sbbl
lds
dec
fwait
rorb
sub
test
inc
mov
icebp
jge
cmpsb
mov
rorb
fwait
sbb
ss
es
mov
mov
jmp
mov
rcrb
enter
pop
pop
cld
mov
cmp
add
push
adc
xor
jno
mov
inc
mov
subb
inc
stos
inc
das
stos
dec
mov
and
mov
add
adc
je
test
push
mov
pop
sub
call
xor
dec
mov
sub
xchg
inc
mov
lahf
xchg
cld
push
inc
out
xor
clc
test
cs
jae
sub
lahf
xchg
xor
xchg
gs
and
mov
scas
or
lret
dec
repz
out
jb
mov
incl
or
pop
xchg
lcall
cltd
pop
cmpsb
loop
clc
fldt
mov
jl
sbb
add
daa
and
adc
or
jg
add
movb
add
lcall
push
clc
pop
and
call
mov
fnsave
xchg
pop
fisubl
insl
xor
or
jp
cs
mov
push
inc
pop
scas
push
lahf
jg
scas
out
int3
inc
mov
jb
out
mul
mov
sbb
add
jmp
mov
mov
push
xchg
pop
cmp
or
pop
mov
add
int3
dec
fdivrs
pop
icebp
or
add
cmp
dec
push
xchg
sarl
jb
mov
cltd
dec
imul
mov
repnz
add
jmp
sbb
jmp
adc
test
shll
fwait
xchg
pop
mov
xor
sbb
imul
push
loope
test
add
arpl
cmpsl
lea
mov
adc
sbb
xlat
stos
mov
pop
mov
or
test
sbb
or
pop
jns
pop
ss
rolb
stos
movsl
cmpsl
xchg
mov
pusha
test
outsb
cmp
mov
xor
pop
cmpsb
repz
insl
mov
nop
test
fwait
inc
xchg
shl
mov
sbb
lea
dec
outsb
xor
push
test
outsl
cmpsb
pop
bound
test
je
lods
sbbb
mov
imul
rolb
lcall
xlat
xor
aas
mov
xchg
and
mov
lock
rol
mov
adc
xchg
daa
mov
jmp
mov
pop
sar
mov
pop
xor
mov
and
or
test
decl
cmc
push
dec
mov
enter
cmp
stc
xchg
fs
pop
notb
or
ja
jmp
out
mov
out
das
xor
push
mov
int
pop
fdivr
call
mov
rcrl
imul
lods
xlat
push
inc
das
nop
mov
fs
pop
inc
xor
fidivrl
cmpsl
cmp
incl
rorb
mov
or
jmp
sbbb
xor
jl
and
xchg
dec
nop
in
int
adc
add
stos
jg
ds
sar
call
inc
push
fs
pushf
fwait
loopne
ret
pusha
and
pop
cmp
xchg
fsubs
pop
fildl
data16
cltd
ret
in
je
adc
lret
std
cmp
cmp
decl
mov
pop
outsl
je
stos
sahf
imul
or
mov
pushl
popf
int3
pop
outsl
test
ret
lods
sbb
out
cmpb
mov
negb
testb
dec
wbinvd
inc
sub
push
xor
mov
loop
push
xchg
dec
btrl
fs
jns
es
filds
cmp
xchg
ret
call
out
outsb
mov
in
cmc
cmp
rol
mov
mov
out
cmc
testl
cmp
fcomip
dec
inc
sub
sahf
cld
mov
mov
dec
out
xor
sub
into
and
inc
xor
incl
push
les
add
iret
jg
ja
mov
or
outsl
or
jbe
push
dec
pop
dec
xchg
cmp
pop
sar
call
bound
popf
stos
xor
movsb
inc
lcall
push
push
push
and
dec
fwait
js
cs
pushf
outsb
imul
repnz
mov
jmp
cmp
mov
sub
mov
out
fs
insl
add
lcall
fsubl
imul
hlt
or
mov
in
add
leave
and
insb
add
jg
jmp
aam
mov
xor
push
mov
and
pushl
scas
ret
push
dec
int
sbbl
sahf
sub
sti
std
mov
loopne
jae
jnp
aas
incl
filds
scas
sti
jmp
add
pop
ret
test
mov
add
decl
mov
pop
mov
xchg
in
push
jns
addr16
ss
dec
fisttpll
jecxz
incl
push
and
pop
mov
adc
les
xchg
or
dec
jae
lcall
jns
fwait
jge
sub
or
gs
scas
jge
test
pop
pop
mov
jg
std
bound
xor
jne
jne
test
jno
enter
test
jle
decl
xor
lods
adc
and
lods
subl
mov
pop
push
or
insl
or
sub
xchg
sahf
dec
outsb
incl
ud1
mov
loopne
pop
outsl
pop
outsl
int
test
xor
out
or
push
mov
int3
out
sub
push
cmpsb
arpl
pop
jp
add
mov
or
mov
cmc
xchg
mov
ljmp
mov
push
xchg
pop
and
dec
insb
inc
repnz
mov
lds
cmc
daa
push
daa
add
scas
jmp
iret
inc
mov
push
inc
mov
adc
fcoms
call
mov
loopne
cmp
jmp
pusha
nop
loop
push
cwtl
pop
or
pop
cwtl
dec
inc
mov
jle
pop
jb
ja
mov
inc
jecxz
jg
jmp
jnp
and
jecxz
xchg
subb
xchg
les
and
incl
xor
pop
int3
lods
and
lods
jmp
pop
fdivrs
pop
sbb
sbb
idivb
les
call
jl
sbb
sbb
out
or
jecxz,pn
nop
mov
jmp
lret
sbb
aas
mov
adc
fcmovu
movsb
xor
xor
cmp
cs
mov
jle
cmp
fisubl
lods
stos
mov
lcall
add
dec
xchg
jge
stos
adcl
loope
jbe
adc
add
or
ljmp
add
jne
das
bound
inc
pop
sbb
insl
sub
cmpsb
push
pop
jmp
inc
js
sahf
lods
pop
cmp
push
je
and
inc
cmp
mov
call
xchg
ds
and
lret
out
mov
xchg
insl
bound
bound
mov
mov
push
rcrl
xchg
mov
sti
sti
lds
fcomip
pushl
ljmp
ret
cmp
ficoms
icebp
sub
sar
lcall
sub
mov
pusha
enter
cmp
xor
ja
subl
test
pop
jle
loope
cmpsl
or
jae
push
dec
nop
incl
popa
imul
dec
popa
mov
movsl
push
repz
cmp
std
or
jmp
dec
or
test
popf
push
lret
andb
decl
jo
mov
and
das
jnp
cwtl
rcrb
fisttpll
div
mov
or
or
ficomps
mov
mov
ljmp
xchg
sub
clc
lea
jle
cltd
dec
into
call
adc
inc
out
ds
test
je
sahf
push
lods
pop
imul
sbb
decl
xchg
decl
roll
cmpsl
cmp
jo
sbb
loopne
cmc
es
push
outsb
in
decl
cmp
and
dec
bound
pop
mov
stos
mov
stos
imul
jl
jg
inc
cld
pop
cmpsb
lret
inc
test
outsb
ret
mov
pop
dec
mov
or
and
pop
adc
and
incl
and
stos
jbe
xchg
pop
push
sub
rcrb
aam
mov
sbb
icebp
aas
decl
js
sbb
add
pop
add
inc
adcb
jmp
out
sbb
lret
cld
js
decl
or
xchg
loope
sbb
cvtps2pi
out
or
fwait
mov
jb
mov
ljmp
js
jmp
jbe
lds
rcr
testb
mulb
sbb
dec
pop
jb
sbb
ja
lock
ss
cmp
lret
mov
icebp
sbb
cmp
push
nop
std
fs
cmp
sbb
roll
dec
or
insl
call
arpl
decl
test
and
pcmpgtw
xor
or
repnz
xor
push
push
pop
push
push
jp
rcr
xchg
sub
incl
jae
mov
jp
pop
and
sub
mov
mov
dec
clc
sahf
in
inc
int
ss
mov
lret
cmp
adc
xor
pop
cmpb
xchg
jge
in
jb
xor
fsubs
mov
cld
clc
dec
sbb
and
and
or
sub
xchg
mov
jg
decl
es
jmp
aas
mov
xchg
test
or
shll
xchg
xor
fbld
lods
mov
lcall
daa
icebp
add
decl
test
xchg
insb
sub
or
sbb
inc
leave
pop
addr16
inc
insb
aam
xchg
jb
sub
push
icebp
pushl
mov
xchg
inc
jp
adc
shr
loopne
jmp
or
lods
lods
icebp
jle
sub
sbb
and
pop
into
jle
mov
mov
or
and
movsb
pop
cmpsl
imul
mov
fcmovbe
pop
and
push
mov
cld
xor
sub
push
mov
add
out
in
cmp
adc
adc
dec
fistps
mov
dec
sbb
adc
push
movsl
icebp
fcoms
aaa
in
mov
pop
shrl
loopne
push
shlb
push
fbld
or
dec
add
push
mov
inc
jle
stos
mov
jg
adc
mov
in
push
in
out
cmp
mov
cli
mov
int3
inc
ss
cmpl
mov
into
std
and
incl
pop
xor
daa
pop
xorl
mov
inc
inc
and
pop
icebp
out
and
sbb
popf
cmp
jl
ljmp
roll
call
cld
adc
mov
call
and
mov
adc
testb
dec
add
sub
out
mov
inc
cld
push
in
mov
fdivrp
int3
shrb
jg
jg
in
ficoml
je
pop
aas
and
xchg
ror
sub
xlat
mov
push
fsubs
jo
cmpb
popa
xchg
das
clc
jg
push
sbb
pop
repz
je
inc
mov
inc
adc
lea
loop
jae
mov
fwait
ljmp
fcmove
mov
loope
inc
movsl
lret
dec
jns
repz
in
xor
adc
mov
cmpsl
adc
test
bound
incl
fwait
cmp
sbb
sbb
lds
decl
inc
xchg
sub
mov
pop
cmp
sub
and
pushl
ds
fcoml
call
loop
xor
fidivrs
and
out
leave
sub
fisubrl
rolb
daa
in
jg
mov
into
insl
ljmp
or
push
push
scas
orb
add
push
jmp
into
push
dec
sub
xchg
xor
ljmp
cmp
dec
inc
dec
sbb
cmpsb
jnp
mov
jb
jle
outsb
sub
lret
fcoms
imul
push
mov
aas
sbb
pusha
in
setl
jmp
xchg
popa
pop
inc
mov
inc
cmc
pop
inc
iret
or
int
sub
add
pushl
cmpl
xor
adc
shlb
add
and
clc
test
xor
or
push
outsb
dec
packssdw
and
mov
sub
std
ljmp
ljmp
cmp
push
or
cmpsb
je
jp
jb
fs
pop
mov
push
int3
add
pop
xlat
ljmp
jmp
int
in
sti
pop
leave
mov
lcall
loope
lahf
push
dec
inc
shl
cmpsl
mov
xor
vmovntps
arpl
dec
cltd
in
jbe
xlat
andb
lcall
add
in
mov
inc
cli
stc
sub
dec
sub
mov
outsl
sbb
pushl
push
mov
xor
xor
lock
rorb
das
cmpsl
idiv
aaa
std
call
stos
pop
or
pop
leave
popf
mov
clc
out
sarl
or
lods
jecxz
push
popa
incl
scas
pop
mov
sahf
mulb
mov
scas
out
and
lret
xchg
outsl
repz
incl
push
jmp
insb
jno
aam
mov
out
in
pusha
sahf
jmp
out
jg
xchg
sahf
mov
lret
loope
xchg
adc
and
mov
jle
js
mov
inc
in
cmp
shlb
cmp
or
inc
pop
scas
mov
push
sub
pop
call
add
inc
mov
lcall
cli
xchg
orb
cmp
xor
ljmp
dec
lds
cmp
stos
movsl
xchg
push
or
inc
inc
dec
inc
mov
arpl
pop
pop
mov
sub
inc
inc
fisttps
mov
mov
outsl
mov
xor
push
inc
out
cmpsl
xor
out
xor
jle
aad
dec
sub
outsl
cli
and
cmp
hlt
icebp
int3
mov
and
das
adc
fidivl
sub
outsl
cli
outsl
push
pop
fadd
je
or
movsl
fld
mov
fdivl
mov
jl
sbb
lahf
out
sub
mov
jl
dec
fadd
mov
mov
dec
ja
decl
add
addl
test
cmp
mov
xchg
adc
mov
imul
xchg
cld
push
adc
lcall
push
lret
inc
outsl
lahf
add
dec
icebp
cwtl
push
pop
mov
push
call
sub
pop
lahf
xor
or
mov
nop
stc
arpl
fdiv
in
sub
leave
fmul
sti
outsb
adc
incl
jae
mov
cmovbe
push
xchg
and
popf
call
ror
testb
mov
jg
push
sub
scas
mov
sub
incl
ret
int3
in
cli
lcall
inc
call
jo
incl
ljmp
push
push
cmpsl
mov
lret
aad
loop
sub
sahf
cmp
mov
decl
dec
push
dec
in
sub
push
xor
pop
cmp
sub
xchg
cld
call
and
jnp
aaa
cld
ljmp
adc
out
push
push
mov
incl
sub
cli
adc
dec
insl
mov
scas
xchg
adc
mov
xchg
and
mov
imul
sbb
add
fisubs
test
sbb
adc
leave
xor
mov
dec
outsb
ret
or
mov
aam
mov
push
lahf
clc
mov
fwait
xor
ljmp
mov
pop
and
mov
test
rorl
stos
fisubs
push
sub
or
fnsave
loope
xlat
loope
push
mov
into
jge
fistpl
cmpsb
and
and
out
cli
fildll
aad
pushf
sbb
cmpsl
lock
mov
cmp
pop
mov
xchg
lcall
mov
adc
sub
js
out
sbb
and
add
in
mov
incl
mov
cs
hlt
test
sahf
and
fsubs
jno
mov
lcall
incb
lret
rcrl
mov
into
lret
inc
jnp
or
jmp
jmp
rcrl
inc
mov
push
pop
daa
sbb
jnp
movsb
pop
aaa
push
cmc
fs
sub
aas
cmp
test
es
xchg
out
mov
mov
faddl
sar
fists
pop
xchg
pop
les
jmp
es
mov
in
fucomp
adc
lods
jno
stos
xor
mov
frstor
int
inc
pop
mov
xlat
and
cli
and
cmp
cmpsb
in
inc
lret
pushf
pushl
cltd
cltd
lret
dec
sbb
sahf
add
push
cltd
cmp
xchg
shlb
scas
inc
xchg
in
jo
jg
mov
jbe
nop
push
pop
jb
fsubrp
jmp
incl
fcoms
mov
pushf
pop
popa
push
pop
inc
adc
push
adc
dec
stos
decl
fisttpl
mov
daa
adc
rclb
and
or
fwait
mov
scas
stc
adc
dec
sbb
fdivrs
adc
push
testb
rol
loop
sbb
push
stos
mov
incl
or
repz
push
inc
hlt
lock
movsl
mov
outsl
inc
cmp
jnp
cmpsl
pop
mov
pushl
sti
repnz
cwtl
adc
xor
repz
rcr
sub
push
pushl
int
mov
dec
mov
dec
mov
repz
pop
xor
divb
mov
fisttps
arpl
enter
mov
sbb
jmp
decl
sbb
cmp
inc
pusha
pop
inc
test
xchg
sbb
add
mov
xor
int3
movsl
jb
outsb
fnstcw
test
mov
jno
pop
rorb
cmp
in
repz
xchg
jns
adc
xor
leave
pop
mov
ljmp
ud0
ljmp
stos
push
push
add
ja
loope
mov
inc
jp
or
int3
and
jmp
pushf
and
std
mov
mov
ljmp
pop
scas
int3
fists
push
ja
test
cmp
fisttps
dec
ret
in
add
daa
jle
xchg
push
push
pop
lcall
inc
dec
adc
aad
mov
rcrl
jbe
fbstp
mov
ja
mov
in
and
mov
ljmp
aaa
xchg
data16
dec
jmp
jnp
rcrb
sbb
xlat
mov
fildl
mov
incl
pop
sub
xor
adc
push
in
inc
and
sbb
ss
sbb
fbld
jg
ret
leave
not
test
cmp
pop
mov
gs
gs
sub
popa
jmp
dec
jae
pop
iret
repnz
sahf
pop
out
jb
xorb
test
inc
jp
sarl
sub
ljmp
les
sarb
cmp
out
sbb
pushf
and
cli
ljmp
xchg
ss
mov
push
mov
pop
push
lock
inc
sbb
mov
jl
data16
ljmp
cli
cmp
fldl
add
jns
orb
insl
or
or
ljmp
pop
mov
ss
mov
cmp
cmpsb
fistpll
xlat
inc
int3
mov
inc
push
sub
enter
jbe
xor
call
xor
adc
lret
sbb
push
xor
decl
cmc
rcrb
jae
repnz
cmp
xchg
repnz
xchg
sub
push
imul
dec
mov
fnstsw
loope
fidivs
xor
xor
lret
loopne
out
add
js
jmp
dec
iret
rol
sbb
xor
sub
mov
lcall
mov
lret
aam
out
nop
sbb
decl
push
jns
shrb
dec
and
xorb
add
inc
data16
and
dec
push
decl
aam
sbb
jl
and
aaa
aaa
cwtl
push
mov
sbb
dec
cmp
push
lcall
xor
or
mov
and
dec
mov
outsb
sbb
dec
shrl
push
call
test
xchg
push
mov
lret
call
int
movsl
add
loope
stos
stos
out
call
ljmp
scas
pop
stos
stos
adc
jg
cmp
lods
out
or
loope
fcoml
outsl
and
in
stos
mov
lcall
xchg
dec
pop
popf
lret
or
fcmovu
mov
push
mov
jmp
mov
divl
dec
out
das
sub
and
pop
mov
out
xchg
mov
notl
mov
out
jbe
repz
stos
adc
into
dec
arpl
sbb
lds
push
popa
cmp
xor
insl
mov
push
mov
mov
jg
ljmp
push
mov
xor
cmp
jbe
mov
pop
into
jo
sbb
mov
ret
clc
stc
xchg
rclb
sub
ss
mov
jge
leave
fimull
add
add
subb
mov
xor
sub
or
adc
add
jmp
cld
inc
lock
ficoml
pushf
fdivrl
sub
popa
mov
push
xchg
mov
sub
incl
incb
sarb
sbb
or
notb
fsubrp
mov
arpl
lret
inc
nop
cmp
inc
pusha
negb
cmpsl
xor
loop
je
dec
mov
in
inc
dec
icebp
adcb
popa
jb
jecxz
ljmp
xchg
sbb
xlat
cmc
sub
loopne
loop
scas
mov
sahf
in
xor
and
adc
call
pop
dec
lahf
dec
out
movsl
and
mov
aad
fdivs
mov
or
jmp
cmc
jg
inc
rcr
or
fsubs
pushf
sbb
push
cltd
push
test
int3
xchg
pushf
clc
cltd
aaa
std
jmp
mov
aad
mov
adc
sub
adc
call
xchg
pop
mov
xor
mov
sub
dec
lret
push
outsl
ljmp
add
mov
dec
mov
insl
xlat
pop
jg
lea
pop
add
fiadds
adc
subl
jmp
cwtl
pop
das
insb
ret
mov
adc
ret
pushf
call
cmpb
lcall
pushf
add
or
xchg
sub
pop
mov
xor
ficoms
in
aad
mov
fists
xor
dec
and
xor
decl
lea
push
nop
pop
outsb
pop
mov
in
jb
xchg
xchg
cmp
jg
call
xor
aad
or
sbb
out
mov
add
adc
adc
push
outsl
ljmp
call
mov
scas
adc
les
sar
push
imul
sub
push
lcall
fdivl
jecxz
jns
jmp
pushl
mov
xchg
das
sub
cltd
push
jns
sahf
iret
dec
mov
sbb
lods
mov
daa
adc
call
cwtl
cld
imull
scas
popf
fnstcw
stos
push
movb
clc
pop
push
sub
pop
push
lock
call
mov
fists
movsb
xor
mov
mov
incl
xlat
and
xchg
int3
fs
iret
lret
lret
mov
int
ficomps
mov
xchg
push
lock
mov
das
jle
roll
and
movsl
add
mov
movzbl
lcall
aad
lret
add
ljmp
ds
sub
add
sbb
sbb
mov
pop
das
lds
out
cmc
fcom
sub
movsl
push
xor
xor
inc
pop
outsl
in
pushl
lods
sahf
mov
ja
mov
jmp
pop
rcrl
sub
mov
popa
push
scas
cmc
sub
insb
lcall
rcll
popf
and
or
or
xor
mov
jnp
sub
mov
cmpsb
jg
xchg
mov
mov
lods
and
ret
repz
push
mov
adc
ficomps
flds
cmpsb
mov
xor
push
xchg
movsb
sub
roll
aas
cltd
pop
loopne
js
lcall
adc
fwait
sbb
outsl
cmp
subb
xorb
cmc
lock
mov
dec
in
ret
sbb
jb
movsb
subl
cmp
xchg
and
mov
xchg
clc
xchg
push
lret
imul
test
xor
bound
xor
sub
leave
or
outsl
pop
std
es
idivb
lods
mov
lcall
cwtl
shlb
insb
mov
pop
loop
cli
jne
shlb
dec
repnz
xchg
mov
imul
fs
lods
xor
mov
mov
sbb
cmp
or
inc
dec
out
inc
dec
mov
xor
push
sub
inc
or
aaa
jmp
out
cli
xor
sbbb
imul
mov
mov
sub
scas
call
and
iret
rolb
div
xor
or
sub
adc
pushl
stos
aas
xor
fs
aam
shlb
push
mov
addr16
sub
mov
pop
cmp
lock
add
xchg
lcall
xlat
mov
mov
sbb
sar
loop
dec
es
mov
je
xchg
ds
loopne
test
adc
xchg
adc
aad
cmp
divps
pop
lods
imul
mov
xchg
test
sbb
xchg
jg
decl
add
stos
dec
scas
insl
stc
add
loop
pop
sbb
cmc
cmp
incl
pop
push
arpl
or
mov
jp
and
into
dec
je
ljmp
cmpsb
lods
sbb
pop
dec
dec
add
clc
jg
out
mov
xchg
adc
sahf
and
aad
push
xor
mov
in
lahf
adcl
incl
sbb
push
int3
out
xchg
rcrl
jmp
es
std
add
add
inc
adc
ljmp
mov
xor
inc
inc
xchg
or
inc
jno
mov
jg
dec
push
outsl
push
mov
push
and
lcall
mov
test
out
clc
cmp
push
aaa
and
push
push
mov
xchg
subl
push
adc
clc
jge
in
bound
fdivrs
bound
dec
nop
push
shll
nop
inc
ljmp
add
ror
pop
sbb
and
push
xor
cmp
decl
adc
loop
adc
mov
repnz
scas
xor
loop
xor
jle
stos
cmp
mov
ror
out
sbb
sub
js
and
sub
pop
mov
hlt
aas
mov
adc
imul
jl
imul
cmp
jle
andl
lds
stos
push
fsts
cmp
push
or
xor
jmp
int
data16
jb
push
daa
stos
mov
mov
and
mov
stc
jmp
loope
push
lcall
mov
xor
inc
jns
test
sbb
mov
decl
add
adc
or
pop
nop
push
mov
test
call
mov
scas
or
or
iret
cs
adc
std
incl
loop
jge
sbb
push
stos
sbb
fidivrl
icebp
push
mov
or
cmp
aas
push
jg
mov
and
mov
add
inc
pop
loop
not
incl
fisubl
inc
jns
pop
out
fs
pop
mov
fcoml
cltd
mov
inc
cmpsb
jp
aaa
test
xor
dec
xor
call
and
pop
mov
jp
ss
int
je
xlat
pop
jae
dec
mov
sar
in
dec
inc
xchg
cmp
jmp
stos
cmpsl
iret
out
mov
and
pushf
lcallw
jno
ljmp
xchg
xchg
out
xor
js
mov
jbe
fucomip
fwait
or
call
insl
rep
jecxz
cwtl
mov
das
inc
in
pop
lods
clc
push
pop
ret
inc
inc
lods
lret
in
loope
imul
loop
mov
je
ljmp
mov
std
xor
pop
jmp
xor
jno
pop
loope
fiadds
lret
sub
mov
hlt
in
xchg
lds
lahf
sub
incl
sbb
jp
gs
aaa
flds
adc
push
jl
jmp
jbe
ljmp
fbstp
lahf
ds
mov
pushf
fisttpll
outsb
popa
aad
dec
inc
sbb
jo
mov
mov
and
lcall
test
push
icebp
pop
ret
test
lcall
mov
pushl
arpl
cmp
es
xor
mov
mov
pop
or
jg
inc
dec
mov
psrlw
test
xchg
xor
les
mov
divb
inc
push
sbb
pop
adc
xor
jmp
iret
scas
cs
out
mov
loope
push
lahf
pop
cli
cmp
outsl
mov
push
repnz
adc
inc
fs
cmp
arpl
xor
push
xchg
out
or
and
call
mov
inc
pop
insl
shrb
int3
je
lods
das
leave
mov
xchg
xor
cmp
xor
pop
jns
pusha
das
clc
lcall
cmpsb
dec
roll
and
imul
push
push
adc
push
fcmovnb
xchg
dec
mov
stos
icebp
pusha
cmp
iret
pop
fwait
outsl
and
xor
pop
mov
push
lds
hlt
inc
pop
outsl
dec
pop
dec
inc
cltd
cmc
stos
stos
inc
leave
add
repz
clc
divl
jmp
insb
pop
addr16
xchg
popf
das
mov
sti
jne
mov
imul
mov
mov
cmp
pop
cmpsl
sarb
jl
ret
ljmp
pusha
lcall
xchg
or
repnz
lahf
mov
mov
xchg
push
add
jns
push
dec
pop
repnz
sarb
jg
lret
enter
jmp
in
push
add
ja
adc
mov
rcr
fnsave
lcall
pop
and
dec
dec
in
int
decb
inc
lret
lret
xor
in
popf
ljmp
inc
fs
gs
xor
in
xor
testb
cltd
cs
xchg
pop
pushl
mov
dec
jns
add
pop
adc
or
mov
repz
movsl
lcall
lods
dec
xchg
mov
out
pushl
mov
mov
pop
and
mov
pushf
xchg
cwtl
pop
mov
push
sti
pop
dec
sub
jg
jbe
dec
mov
insb
or
stos
enter
and
add
mov
fstpt
jnp
ficompl
fdivrl
or
test
push
adc
popa
sub
sub
jmp
faddl
dec
cmc
outsl
lods
push
push
or
push
out
std
jge
pop
mov
jnp
xlat
dec
js
pop
mov
pop
sbb
jmp
in
call
repz
pushf
and
xchg
data16
sbb
loopne
inc
mov
sub
jge
add
lahf
and
decl
shlb
out
inc
cwtl
cmpsb
xor
jae
push
ds
push
and
call
jg
mov
inc
or
mov
or
lds
pushl
loop
jnp
xchg
dec
adc
add
push
in
sbb
sub
lcall
jmp
pop
add
cmp
negl
lcall
sub
mov
incl
divb
dec
push
cmp
lea
popf
mov
mov
outsl
xor
in
call
loopne
ss
fstpl
adc
into
ljmp
pop
sarb
scas
jmp
push
ret
inc
fwait
pop
push
add
pop
popf
rolb
mov
rorb
iret
repz
pop
repz
stos
cli
pop
mov
in
lods
pop
dec
pop
insb
rclb
bound
cmp
or
ficompl
mov
cmp
pop
ja
ljmp
dec
xor
fninit
lret
pop
scas
out
mov
leave
pop
mov
movsb
jns
arpl
dec
xchg
xchg
push
jmp
js
lds
arpl
out
movsb
cli
jb
mov
test
jb
das
mov
fwait
inc
into
or
push
out
mov
call
ss
sbb
and
aaa
lcall
ja
dec
jp
push
and
or
ljmp
push
out
fnstcw
mov
loope
xlat
xchg
mov
cmp
movsl
hlt
add
mov
out
cmp
cwtl
xor
adc
subl
call
aam
loopne
and
xchg
int
adcb
mov
add
push
inc
push
sbb
rcrb
mov
das
xor
inc
jl
iret
and
mov
push
cmp
dec
int3
int3
imul
clc
fildl
ds
outsl
push
cmc
rclb
jns
xor
les
shrb
fsubrl
adc
jmp
insl
mov
mov
ret
into
repz
rolb
mov
call
add
lea
xlat
dec
addr16
add
jg
cwtl
inc
adc
daa
incl
mov
das
push
dec
stos
aaa
mov
and
sahf
mov
xchg
pushf
repnz
lock
call
inc
mov
cmc
mov
into
fcoms
sub
in
ja
cmp
inc
adc
sbb
sub
pushf
jle
sahf
mov
sbb
out
or
xor
and
and
fldt
jmp
in
jecxz,pt
dec
dec
pop
mov
mov
into
mov
cmp
insb
pop
fildll
jmp
push
out
fisubl
inc
rcrl
xor
ljmp
cli
ljmp
adc
pop
pop
xor
or
push
mov
jbe
adc
sar
decl
lahf
jecxz
test
mov
or
notl
or
dec
pop
fs
gs
lcall
nop
add
shlb
into
imul
fstl
decl
clc
push
mov
test
test
das
xor
jno
cli
sub
push
cmp
sti
jmp
shrb
scas
pop
cmpsl
cwtl
pop
xorl
int
xchg
cmpsb
inc
lcall
jg
jg
mov
notb
pop
lods
cmpsb
xchg
gs
data16
ljmp
cmc
int
je
orb
xchg
add
out
jg
sbb
mov
pushl
pop
add
sbb
inc
mov
iret
and
add
mov
ffreep
add
mov
out
and
xchg
push
sbb
jg
add
and
adc
and
jg
pushl
arpl
icebp
mov
jo
jae
mov
push
lahf
or
int
mov
icebp
or
pop
rcl
addb
addb
cmp
dec
and
fwait
inc
repz
repnz
ret
inc
movsl
mov
sub
shrb
mov
jg
jp
call
push
inc
cmp
pop
pop
test
std
and
ljmp
jo
adc
test
sbb
add
data16
and
fnstenv
adc
out
push
mov
sub
push
test
jg
pop
jne
mov
mov
cmp
or
ljmp
and
pop
cs
push
pop
imul
sub
add
and
jl
mov
mov
and
or
bound
inc
dec
xor
jns
es
insl
adc
ret
jl
dec
repnz
jne
xchg
mov
push
jns
pop
leave
lods
sbb
dec
aam
adc
call
jmp
and
mov
fisttpl
scas
xchg
scas
in
dec
xchg
inc
out
jl
incl
inc
xchg
pop
inc
sbbl
hlt
mov
jb
orl
sub
cmpsb
cwtl
jbe
dec
aaa
dec
sbb
cmpsl
push
popf
stc
mov
notb
ljmp
pop
dec
push
sbb
jmp
pushf
push
push
repnz
cwtl
mov
es
sti
mov
pushl
loope
mov
fldl
xchg
test
sbb
lret
push
test
xchg
xor
adc
incl
mov
fisubrs
popf
ss
adc
xchg
faddl
lcall
loop
pop
insb
std
sbb
xchg
pop
loope
pop
out
mov
std
add
jmp
out
and
daa
pop
data16
lods
aas
pop
push
xlat
pop
xchg
lock
outsl
scas
pop
jno
cmp
xor
in
outsl
inc
fsub
mov
or
jbe
mov
push
xor
out
xchg
push
adc
stos
in
out
mov
dec
mov
dec
jae
in
rolb
adc
incl
andl
cmp
ja
pop
outsl
fadds
cld
add
or
ss
addl
dec
fstpl
dec
xor
mov
or
sub
lcall
ret
repnz
das
sub
sub
ljmp
sarb
outsl
lret
je
cmp
das
cli
pop
fsubp
mov
ret
mov
repnz
jg
mov
ljmp
xor
add
mov
js
cs
mov
xchg
vpaddsb
or
mov
add
adcb
xchg
jmp
loopne
or
dec
lret
enter
sbb
lcall
dec
ds
pop
idivb
and
push
pop
std
addr16
ljmp
rcr
sahf
sbb
sti
inc
lcall
imul
adc
jmp
mov
mov
idivb
adc
mov
lods
cs
std
cmp
pushl
cld
mov
inc
insb
mov
fsubrl
movsb
xlat
fcmove
xchg
aaa
popa
cld
sti
push
dec
iret
popf
shl
enter
mov
es
jg
lahf
jg
lds
outsb
out
adc
into
bound
lcall
leave
or
sub
ljmp
loope
sub
imul
call
xor
and
xchg
xchg
push
fisubs
cmp
mov
cmp
sbb
pop
adc
sahf
sub
jl
pop
xor
fwait
push
push
mov
outsb
dec
roll
mov
test
sub
add
call
mov
push
fcomps
lcall
std
incl
lods
jecxz
xor
iret
clc
outsb
cmc
jg
mov
sbb
xchg
or
mov
das
sar
stos
jns
mov
mov
mov
push
jnp
sti
subl
je
pop
scas
cmp
cmp
xor
jns
push
lods
in
arpl
jne
sbb
mov
pusha
pop
ljmp
nop
mov
push
xchg
pop
dec
xchg
push
xor
cmc
ja
out
mov
mov
push
jg
sar
push
inc
sbb
into
mov
mov
sbb
scas
insb
fcomip
ljmp
out
cs
js
out
mov
pop
lea
inc
push
idivb
call
lret
xor
push
ret
push
xchg
add
sub
cwtl
test
movzbl
ljmp
test
out
sub
pop
cwtl
mov
scas
mov
incl
aam
ficoml
stc
cmp
orl
lods
aad
movsl
mov
lcall
mov
enter
xchg
or
popw
call
movb
or
ljmp
hlt
mov
pop
xchg
ficompl
mov
lret
std
ss
xor
pushl
dec
mov
mov
mov
and
aam
stc
or
dec
movsl
pop
mov
push
cmp
dec
incl
jo
jle
mov
and
adc
pusha
mov
lods
ds
push
push
ss
lods
fisubs
test
fwait
jmp
decl
stos
sub
popa
cmp
and
xor
jne
aaa
adc
xlat
dec
lcall
fimull
js
add
mov
xchg
testl
pop
decb
jnp
xchg
loop
adc
jne
mov
adc
mov
das
outsl
sbb
daa
dec
out
inc
cmp
jmp
in
pop
pop
mov
mov
and
cmp
fistl
movsb
or
test
mov
popf
xchg
leave
inc
sub
aaa
jno
cs
jbe
inc
dec
push
out
mov
popa
sti
fidivrl
pop
imul
fmuls
dec
push
or
aas
shlb
or
mov
out
cmp
and
or
jp
and
push
int3
lods
fs
xchg
sbb
pusha
out
aas
push
ljmp
dec
mov
adc
sub
mov
stos
mov
push
cld
adc
jmp
loop
xlat
je
dec
xchg
mov
push
inc
cmp
in
clc
out
pop
lret
xchg
leave
mov
cmpb
mov
cmp
call
xchg
test
jle
repz
les
imul
xchg
orb
mov
out
decl
fldl
pop
mov
gs
inc
in
mov
add
push
push
xchg
sbb
push
and
in
and
les
dec
pop
shl
cs
movb
xlat
mov
into
lock
jl
mov
mov
add
pushl
loopne
sbb
movups
std
xchg
or
jle
sbb
cs
add
jmp
or
shlb
mov
fildl
cmp
and
and
cwtl
mov
mov
pop
outsb
mov
je
sub
mov
shl
xchg
test
pushl
xchg
scas
pop
adc
mov
inc
sub
push
outsb
add
lahf
xchg
sbb
mov
jns
fisubrs
scas
mov
in
sbb
cmpsb
dec
in
insl
jne
sub
fimull
lret
mov
or
pushl
jb
mov
cwtl
popa
cld
lahf
mov
jle
mov
addl
scas
fdivrl
aas
ljmp
repz
push
pushf
pop
or
inc
and
cmp
mov
sbb
rcll
filds
ficoml
lcall
std
pop
or
dec
xlat
sti
adc
lret
lds
add
mov
and
jle
decl
jo
mov
inc
sbb
subb
outsl
call
add
data16
mov
mov
cmp
das
fcoml
out
mov
call
addb
cld
fnsave
inc
cli
into
xchg
bound
js
mov
stos
jb,pn
jg
cmp
and
sbb
lcall
adc
pop
jnp
jg
dec
cltd
out
lds
je
pop
rcll
jg
roll
mov
ljmp
cmp
cmp
negl
sbb
mulb
inc
gs
adc
sar
lcall
pop
and
sbb
repz
outsl
sbbl
jmp
mov
and
inc
add
out
repz
ficompl
aas
and
and
sbb
sar
cmp
mov
push
xor
insb
fsts
call
sti
or
xor
fistpll
in
rcll
jb
adc
jmp
or
push
jne
pop
cmpsb
xor
movsb
xchg
jl
jbe
pop
pop
enter
xchg
jmp
clc
incl
arpl
outsl
mov
pop
das
jno
test
pop
repz
shrb
jb
fs
mov
pushl
lods
clc
fld
int3
repz
add
dec
cli
jmp
sub
cmp
mov
outsl
jns
pop
lret
es
push
mov
inc
mov
ss
out
ljmp
mov
or
les
fwait
pop
imul
sub
inc
add
clc
pushl
add
sbb
lret
movsb
std
outsl
adc
mov
xor
xlat
push
jl
sbb
mov
adc
push
std
pushl
pop
pop
mov
stc
repnz
mov
and
xchg
or
hlt
pusha
lret
lcall
cmp
lcall
and
out
mov
push
test
mov
ljmp
dec
fwait
movsb
idiv
or
fbld
out
add
popa
imul
jmp
movsl
popf
mov
adc
mov
push
insl
int3
enter
in
xor
aas
dec
jae
push
lods
popf
jp
data16
jb
dec
mov
rol
fisttps
call
call
scas
es
sbbl
flds
rcrb
xchg
push
mov
stos
inc
loope
and
bound
pop
out
popf
jg
clc
aaa
std
inc
icebp
je
cmp
adc
adc
in
pop
adcb
inc
xor
xor
xchg
leave
and
mov
push
mov
pop
sub
pusha
sti
xor
popa
mov
subb
fildl
shrd
sbb
jl
xchg
addr16
jle
adc
sbb
incl
pop
push
mov
cmp
es
jbe
cltd
stos
icebp
stos
mov
mov
dec
into
call
push
dec
mov
dec
popa
insl
push
push
sbb
pop
dec
pop
lcall
call
into
or
addr16
push
add
sbb
roll
mov
pop
or
sbb
mov
adc
or
or
xchg
jbe
cmpsb
shlb
xor
mov
add
ret
cmp
push
ds
add
adc
iret
cmp
popa
dec
and
sbbl
pop
adc
insl
cmpsb
into
xchg
fmulp
sarl
fisubrs
jle
orb
mov
adc
xor
mov
push
pop
imul
ljmp
movsl
sarb
cld
int3
pushf
mov
adc
popa
xchg
mov
int
xchg
addr16
push
push
incl
addr16
lds
mov
mov
aad
aas
movsb
pop
ret
incl
cli
and
jp
test
lds
inc
or
adc
cvtpi2ps
cmp
jae
push
xor
incl
pop
pop
cltd
jge
xchg
test
imul
xchg
adc
mov
test
sbb
stos
mov
add
jbe
xor
daa
test
out
xor
mov
nop
cmp
call
ret
lret
fisttpl
cmp
in
sub
movsl
imul
jne
int3
and
icebp
xor
add
call
mov
repz
pop
movsl
cmp
mov
fsubl
sbb
ds
jg
popa
dec
cmc
mov
or
cmp
cltd
cmp
stos
stc
pop
cmc
popa
ja
xor
incl
psubusb
sub
mov
arpl
into
xchg
sbb
mov
push
mov
loope
notl
leave
psubsb
test
nop
xchg
repz
and
test
inc
sbb
popf
je
test
out
les
mov
hlt
loope
test
sbb
sbb
stc
pop
mov
sbb
dec
inc
sub
cmp
outsl
jb
insb
popa
sbb
add
mov
addr16
adcl
sbb
add
push
mov
pushl
mov
mov
in
add
mov
sbb
je
fcomip
fisubrs
jecxz
sti
pop
int
lea
or
call
das
repz
jbe
aad
sbb
test
jns
aam
jl
mov
jnp
dec
lea
incl
stc
xchg
push
movsb
mov
mov
pop
ret
cmpsb
es
js
pushl
repz
mov
push
stc
es
jg
fistps
shll
xchg
ucomiss
lcall
icebp
daa
enter
jne
adc
push
sub
mov
addb
or
stc
sub
or
xor
xor
sbb
xor
in
scas
shll
nop
out
es
or
dec
test
sub
mov
iret
xor
scas
jmp
push
jmp
in
dec
loope
inc
shlb
ret
ljmp
std
cld
loopne
lret
lcall
stos
into
adc
and
testb
jg
decl
nop
jbe
cwtl
mov
jle
loope
rorb
cmp
xchg
jg
pop
mov
js
das
insl
adc
dec
dec
cmpsb
xchg
into
cmp
xor
mov
pushl
cmc
inc
xchg
sarl
jae
mov
push
and
test
loope
decl
dec
loopne
or
mov
dec
dec
pop
jns
jle
cmp
ljmp
sub
pusha
or
sub
jmp
pop
inc
xor
call
sub
adc
sbb
test
dec
xor
sub
jmp
sub
pop
aam
js
out
aad
mov
leave
lds
or
inc
stc
sub
das
pop
inc
testl
pushl
rorb
arpl
xchg
lret
std
test
movsb
cmovb
lcall
and
incl
jae
lods
mov
xchg
andb
loopne
fildll
stc
jnp
mov
xor
clc
inc
cmp
dec
lods
addr16
in
push
mov
fucomp
loope
popf
xor
and
cmpsb
push
lock
cmp
fxch
dec
pop
in
fisubrs
xchg
lea
dec
lods
xchg
ja
test
das
ss
fcomip
ljmp
fldenv
dec
repnz
push
jmp
mov
xchg
addb
clc
pushl
data16
outsb
xor
cs
aaa
stos
dec
lret
dec
or
jg
inc
loopne
repz
int3
mov
add
push
sbb
rclb
pop
loopne
lcall
into
xchg
dec
inc
xchg
repz
mov
xor
cmp
scas
ljmp
daa
dec
or
loope
jno
data16
ja
mov
mov
mov
pop
movsb
inc
mov
in
nop
imul
test
loop
mov
pop
repz
aad
pop
mov
add
add
and
sub
push
pop
xchg
dec
sbb
mov
decl
or
fmuls
push
shll
and
fs
subb
jle
and
add
sbb
mov
jge
xchg
mov
cmp
sbb
xor
call
jbe
daa
lret
out
add
and
sbb
in
aad
cmpsl
in
fcos
call
mov
sub
jns
data16
mov
dec
or
aaa
fidivrl
jmp
pop
push
sbb
xchg
aaa
shrb
sti
shll
popf
mov
pushl
scas
jb
dec
jbe
lcall
mov
inc
mov
testl
jecxz
mov
decl
mov
test
xchg
dec
cmpsl
xchg
hlt
es
jns
cmp
fmull
ss
cli
jmp
pop
ret
mov
sbb
sbb
dec
pop
mov
jae
mov
push
mov
fisttpl
sub
inc
dec
cmp
pop
fnstcw
ljmp
adc
adc
fisubs
fwait
xchg
fisubs
int3
mov
pop
xchg
pop
das
daa
and
imul
dec
call
or
cltd
cwtl
fisttps
into
test
push
lret
into
push
aas
pusha
loopne
lret
mov
sti
xor
inc
fistl
xchg
inc
notb
loopne
ret
jl
rorl
or
lret
lds
jle
into
mov
ficoms
sub
or
push
mov
cltd
lcall
mov
inc
test
inc
out
xor
sbb
fldl2t
in
push
popf
xchg
mov
lods
mov
or
push
push
jne
stc
stos
fwait
in
mov
xchg
in
into
loopne
xor
jmp
rorb
mov
and
jle
and
mov
fs
loop
dec
push
sbb
clc
or
sub
mov
add
xchg
push
add
inc
and
cmc
cmp
loop
lcall
in
lret
sub
jae
cltd
mov
jp
mov
xlat
lods
dec
dec
pop
jg
sub
sbb
or
stc
or
sbb
repnz
xchg
outsb
mov
inc
fmull
mov
adc
fidivs
mov
pop
lds
sbb
int
aad
cmp
jmp
pop
pop
mov
jecxz
loopne
gs
scas
aaa
popf
ret
lock
decl
lods
out
loop
or
movsb
mov
cld
pop
mov
cmpb
jbe
lods
fwait
sbb
push
incl
in
push
aaa
push
sti
sbb
movsl
adc
pushf
insl
dec
jecxz
popf
lret
lock
movsb
adc
int
inc
filds
jmp
fsts
mov
sahf
into
fadd
stos
pop
jge
imul
arpl
push
mov
cwtl
fldl
fldcw
in
push
repnz
push
loope
jg
movsb
pop
scas
and
icebp
inc
fsubs
and
in
cltd
cmc
dec
cmp
push
fbld
inc
rcr
adc
sub
sub
ret
decl
fs
js
test
xchg
rcrb
inc
hlt
push
xor
lcall
fnsave
sar
inc
sbb
mov
imul
sub
adc
clc
mov
fsubrs
jecxz
adc
mov
add
aas
pop
push
enter
gs
sub
stc
test
cmpsb
xor
jmp
out
iret
xorl
fucomi
push
repnz
popf
and
lcall
xchg
cmp
lds
and
fisubl
shl
lea
daa
inc
sarb
mov
adc
add
jmp
push
outsb
xchg
icebp
jge
das
and
jmp
adc
mov
cmp
sub
sti
fcompl
sahf
ljmp
mov
add
xchg
fisttpl
insl
loop
and
ss
fwait
lods
pop
dec
sarb
call
xchg
and
xor
or
push
pop
cmp
add
notl
fdivrs
ljmp
das
lahf
mov
lea
sub
xchg
cli
sahf
xchg
test
dec
mov
mov
and
jbe
mov
add
popa
push
pop
cs
insl
xchg
stos
inc
repz
jmp
cs
lds
sahf
addr16
pop
orl
jmp
sahf
pop
aaa
gs
add
xchg
jnp
insb
cld
lcall
or
mov
pop
nop
xor
cmp
das
pop
add
jbe
fnstcw
daa
xchg
mov
pop
mov
out
cli
inc
cmpsb
jl
pop
xchg
xlat
push
out
xor
pop
mov
je
or
adc
pushl
mov
enter
dec
arpl
and
mov
sar
jmp
sar
scas
shl
push
shrl
adcl
pushf
aas
push
mov
loop
mov
sub
outsb
scas
mov
jl
fsubl
lods
test
xchg
mov
ljmp
mov
push
ret
push
add
scas
movsb
rcll
out
mov
insl
imul
out
insl
mov
sahf
sub
push
xor
repz
push
sti
and
mov
js
xchg
bound
std
dec
pop
pcmpeqw
xchg
rclb
add
xor
dec
bound
mov
mov
pop
lds
jmp
cmp
loop
jecxz
cmp
ljmp
sub
in
jg
lods
push
or
lcall
push
in
sbb
xorb
stos
jo
mov
and
ljmp
sub
mov
clc
outsb
jmp
das
test
mov
inc
pop
in
jg
mov
dec
jne
mov
cld
mov
jle
pusha
test
filds
mov
lock
jle
pushf
jl
hlt
ja
in
rcll
fnstcw
inc
movsb
push
inc
inc
movb
mov
mov
imul
jge
fs
ljmp
inc
jbe
pop
push
or
adc
imull
or
push
dec
imul
pop
xor
inc
adc
push
cmp
in
jbe
ds
mov
sbb
ljmp
and
or
in
pop
movsb
pop
cld
jmp
jno
inc
hlt
inc
xlat
dec
test
imul
popa
jmp
ffreep
das
das
cli
dec
xor
xor
mov
mov
test
lret
test
add
call
cmpsb
cmp
mov
fistpl
mov
push
lret
xchg
inc
orb
dec
data16
mov
cmp
ljmp
and
lret
fwait
lods
es
sub
lret
push
pop
adc
inc
ret
cmp
subl
loop
xor
rorb
push
and
fmul
push
pop
sub
aam
hlt
cmp
xchg
lods
mov
call
inc
mov
aas
repz
and
mov
iret
cmp
test
mov
and
mov
jg
pop
adc
push
jmp
or
sbb
jecxz
data16
movsb
aad
insb
mov
push
jecxz
test
test
decl
pop
pop
xchg
imul
mov
lahf
pusha
xchg
cmpsl
sahf
mov
mov
stos
stos
push
xchg
mov
sub
cli
xchg
dec
add
xor
push
sahf
sbb
test
or
call
in
jmp
mov
add
fistl
popa
xchg
lret
arpl
call
mov
out
jmp
sti
inc
jbe
xor
dec
test
cmp
pop
mov
mov
cld
sar
dec
sbb
jmp
or
test
gs
adc
adc
gs
mov
out
adc
or
pop
pop
cmc
pcmpgtw
jg
mov
out
xor
call
std
sbb
jmp
jle
pop
sub
lods
dec
ficoml
jl
pusha
or
dec
data16
pop
push
jo
cmpsl
stos
leave
out
jp
test
int3
outsb
sahf
imul
in
aam
cmp
xchg
aas
xchg
lds
push
adc
ja
int
stos
mov
mov
jle
jl
icebp
call
sbb
pushl
xor
mov
mov
test
mov
and
orl
fdivrp
pop
loopne
inc
sub
call
dec
xor
sub
aam
out
push
xor
sub
mov
fnstenv
loope
cmpsl
or
clc
push
icebp
lahf
jne
jb
jb
push
pop
cld
call
or
sahf
loop
adc
not
mov
push
pop
push
adc
arpl
cmpsb
lock
pushl
mov
fwait
lock
or
or
push
xor
add
ljmp
push
test
lock
pop
scas
out
cld
jp
into
xor
push
sbb
dec
test
gs
sti
add
lcall
mov
stos
cli
xchg
push
push
daa
add
mov
data16
popa
ja
jb
mov
movsl
fwait
sarl
leave
stc
fcmovu
jno
cld
in
xchg
jo
sub
faddp
mov
xor
shl
xchg
lcall
pop
les
incl
movsb
jecxz
sub
xor
repnz
mov
fstp
lods
adcb
and
dec
push
sar
add
call
int
and
mov
cltd
push
imul
push
sub
call
inc
pop
inc
rep
divl
and
inc
ja
call
dec
rcrl
dec
pop
pop
xchg
lock
sbb
mov
xlat
xor
cs
or
inc
incl
sub
mov
shrb
clc
xchg
mov
xor
loope
cmp
or
ss
call
cmpb
or
mov
arpl
mov
sahf
cmp
xchg
aam
push
hlt
bound
push
stc
dec
aas
push
repz
xchg
mov
jmp
push
mov
rorb
pop
cmpsb
repz
incl
push
popf
les
loope
ja
icebp
mov
rorl
ljmp
nop
ljmp
cmp
test
pop
inc
je
sbb
or
mov
sub
jg
xrelease
pushl
adc
or
pop
clc
ljmp
xor
out
jno
push
inc
inc
fnstenv
sub
out
int3
adc
or
mov
or
lods
or
dec
sbb
mov
call
or
inc
stos
xchg
pop
nop
pop
dec
jle
xor
mov
sbb
mov
insl
jno
fisttps
test
push
subl
movl
sbb
pop
cmp
pop
je
jne
sub
mov
data16
fisttpl
add
xchg
cld
aam
lds
repz
loopne
jno
adc
pusha
mov
jg
pushl
data16
xor
mov
add
cmp
add
inc
cmpsb
into
push
popf
inc
lret
adc
adc
icebp
ret
or
adc
and
pop
or
pop
jno
push
ljmp
daa
fildl
std
std
lods
hlt
xchg
out
mov
jmp
pop
or
call
jns
rcr
cs
jne
cmp
pop
jno
shlb
lds
inc
adc
add
adc
ljmp
pusha
jle
test
lcall
movsl
cltd
andl
add
jge
iret
repnz
xor
cmp
imul
stos
xchg
mov
les
fwait
push
sub
jae
mov
jbe
cmc
sbb
inc
or
push
mov
xchg
inc
cmp
jecxz
xchg
mov
sbb
sub
imul
push
enter
jg
int
sahf
jp
mov
cli
arpl
dec
daa
dec
jg
sub
adc
push
dec
inc
lret
inc
lret
mov
jge
sbb
jnp
jecxz
xor
inc
out
outsb
xor
sbb
add
insl
push
aaa
mov
fiaddl
fdecstp
rcrb
pop
icebp
cli
push
xchg
push
cmpsl
sbb
stos
dec
mov
adc
ljmp
arpl
hlt
incl
cmp
xchg
mov
ljmp
xchg
xor
cmp
call
cs
call
in
lods
test
xchg
mov
mov
inc
fldenv
dec
mov
call
movsb
and
lahf
hlt
inc
add
mov
mov
jb
dec
sti
pop
fsubrl
and
fcomip
decl
jbe
fmull
push
mov
xor
mov
mov
idivb
and
aad
call
movsb
lret
test
pop
push
xchg
ret
push
idivb
sub
jmp
out
scas
fistl
out
inc
sbb
xlat
pop
mov
pusha
lcall
xorl
jmp
rorl
pop
ret
push
mov
insb
jge
int3
imul
ljmp
adc
pop
popa
imul
clc
mov
inc
jo
dec
push
add
ljmp
inc
pusha
and
dec
mov
movsb
lcall
cmpl
mov
fwait
pushf
add
std
cli
sbb
pop
or
dec
mov
into
cltd
mov
jae
inc
cltd
pop
adc
cmp
jns
and
dec
fisubl
aam
mov
push
mov
std
ja
adc
dec
rorl
pop
out
mov
loop
inc
xchg
clc
or
inc
xacquire
sub
lcall
sbb
negb
or
dec
jge
mov
shl
fiadds
in
inc
jae
clc
js
jl
ror
dec
inc
inc
ja
daa
popa
notb
xchg
fdivs
pop
rolb
push
out
ljmp
inc
dec
es
dec
mov
pop
cwtl
imul
fwait
dec
stos
or
xor
outsb
inc
cmp
mov
jo
aas
or
push
cltd
cmp
mov
xchg
sub
lahf
mov
loop
dec
push
nop
xor
dec
in
cmc
mov
clc
pop
lock
pop
ljmp
mov
push
push
fmul
cmp
cmp
clc
data16
les
adc
or
insb
dec
mov
pop
push
rol
mov
call
push
imul
jnp
inc
popf
jne
test
adc
adc
repnz
sub
test
lahf
cwtl
jbe
mov
jne
test
inc
and
adc
push
mov
push
loopne
mov
fadds
leave
hlt
inc
int3
insl
sti
and
add
out
leave
jle
aas
test
mov
xchg
dec
pushf
xchg
mov
out
lods
mov
mov
xor
xchg
or
pop
int3
dec
inc
jne
xchg
push
lahf
shrl
xchg
and
das
clc
ljmp
inc
xor
push
adc
shrl
cmpsl
lods
das
mov
stos
cmp
aam
xor
fistps
fcmove
jo,pn
push
inc
sbb
ljmp
jle
mov
stc
dec
das
int
decb
or
fcomps
test
adc
outsl
sti
adc
pop
out
lods
repz
or
popa
or
push
push
sbb
pushl
cmp
mov
or
ja
push
mov
ds
scas
imul
sub
adc
jmp
push
sarb
cmp
insl
or
pop
cmp
fdivs
jmp
in
push
ret
stc
call
dec
ret
mov
mov
dec
mov
pop
out
mov
nop
cmc
and
adc
out
xor
or
pushw
inc
sahf
mov
sbb
pushl
adcb
xchg
adc
sbb
lods
sahf
negl
lretw
dec
lcall
int
add
leave
and
insb
out
mov
cmc
jns
xor
or
popa
cmp
popf
fsts
lret
mov
xchg
jg
pusha
outsl
add
pop
mov
xchg
or
or
sbb
jle,pt
sbb
ljmp
stc
imul
loope
xor
pop
aam
adc
push
xlat
fs
dec
fisttpl
fstl
sub
jle
jg
mov
ljmp
jnp
mov
and
lods
lods
jno
xor
jmp
mov
iret
iret
lcall
sbb
or
es
jg
cmp
pop
lods
mov
icebp
orl
jnp
inc
sti
mov
jne
movsb
pop
cmc
pushl
into
popf
cwtl
mov
roll
outsl
dec
shrl
jge
mov
inc
popa
cld
jmp
xor
push
fs
jb
sti
jne
pop
push
inc
mov
sub
cmp
push
xor
test
mov
add
icebp
add
lcall
incl
lea
adc
cli
sbb
add
inc
add
in
cmc
pop
ficomps
add
nop
mov
push
pop
add
push
sar
xchg
lea
adc
add
inc
xor
mov
adc
ds
pushl
mov
into
enter
xchg
cmp
mov
pop
outsb
sbb
loope
mov
dec
ds
sub
jnp
jnp
pop
mov
mov
nop
add
pop
and
mov
add
inc
outsl
js
push
int3
les
hlt
aam
push
lock
mov
jmp
adc
add
jg
jle
icebp
jg
mov
add
inc
test
sub
cltd
cmp
repnz
call
jnp
inc
push
ds
aaa
push
test
adc
push
adc
lock
cmp
inc
lcall
push
and
lods
cmpsb
test
or
lret
cmpsb
pusha
xchg
sbb
fiadds
jne
movsl
loop
cmp
bound
aaa
add
sarb
movsl
mov
sahf
add
fmuls
mov
cmp
cli
add
jbe
and
jb
je
push
or
hlt
ret
jl
cltd
shrb
add
cmp
mov
mov
add
mov
push
adc
lcall
push
leave
clc
nop
jl
jl
inc
jb
pop
push
xlat
xor
mov
enter
ljmp
inc
ds
sub
cmp
add
dec
std
pusha
cmp
ror
jbe
enter
std
sub
mov
inc
incb
daa
jo
dec
js
cld
xchg
adc
scas
insl
pusha
sti
add
and
data16
inc
adcb
mov
imul
adc
adc
mov
dec
add
pop
pop
jno
pusha
pop
mov
fisubs
xadd
mov
aam
and
test
mov
scas
or
push
sub
mov
add
cmpl
mov
pop
adc
sub
iret
pushf
cmp
sbb
inc
adc
add
jns
mull
addb
loop
repz
pop
xor
inc
or
pushf
or
insb
jbe
out
fwait
sbb
push
mov
ja
adc
mov
repz
shlb
mov
or
sub
push
mov
jp
orb
inc
xor
xor
cmp
dec
cwtl
dec
jmp
mov
xor
push
jbe
xor
dec
mov
cmp
cmp
in
cltd
mov
xor
push
and
push
push
or
mov
fidivs
lahf
shll
fucom
loope
push
and
inc
aad
test
or
fldl
mov
sarb
adc
ret
pop
xor
loopne
loope
and
mov
push
popa
lret
jmp
sbb
jae
inc
scas
dec
add
addr16
fstpl
es
cmp
or
jns
or
dec
loopne
sbb
push
inc
inc
out
sbb
fimuls
and
aaa
mov
add
and
std
repz
cmp
mov
iret
ljmp
cmpsl
out
sbb
fldl
faddl
push
cmpl
push
or
loope
ja
faddp
rol
lock
lock
arpl
sbb
adc
mov
mov
mov
inc
jae
sbb
jmp
jae
jnp
xor
sti
pop
fs
mov
mov
lcall
push
add
pushf
mov
pop
xchg
and
inc
and
jns
push
xchg
out
scas
adc
scas
and
push
pushf
outsb
ljmp
jbe
push
adc
stos
mov
cmpsl
scas
pop
cmp
mov
push
out
adc
cmp
in
pop
push
pusha
mov
repnz
pop
xor
sub
fcoml
add
lock
cmp
mov
sbb
push
dec
jno
lock
cmp
and
inc
add
fisubs
ret
loopne
mov
mov
orb
fidivrs
mov
fmul
or
or
std
popa
jo
xchg
lret
push
fs
mov
xchg
sarl
repz
jecxz
add
or
lds
xchg
ror
push
sub
popf
push
in
ja
lds
dec
sbb
add
push
aaa
je
sbb
lcall
mov
inc
jg
and
jmp
sub
dec
cltd
add
loop
dec
mov
loopne
mov
imul
pop
xor
cmp
cmp
sbb
test
push
cld
fcmovnu
sbb
mov
out
into
jge
push
sbbl
pop
inc
sbb
sbb
push
xor
out
push
dec
jne
incl
pop
mov
mov
loopne
dec
adc
xchg
dec
pop
in
sbb
adc
aaa
jae
add
ret
icebp
aad
jo
xchg
leave
adc
into
add
mov
ret
fildll
neg
push
aaa
cmc
out
push
out
out
add
jo
pop
dec
jne
out
aaa
or
pop
and
jge
pop
mov
and
adc
cmpsl
shl
pop
or
addr16
or
ret
xchg
mov
cmp
sub
repz
xlat
or
fisttpl
jno
cmp
dec
and
xor
int3
and
imul
stos
xorb
xchg
cmp
jae
xchg
jns
ljmp
sbbb
scas
hlt
sub
js
adc
out
mov
mov
pop
orb
xchg
out
or
cmpsl
push
inc
sub
xchg
or
adc
std
cmp
push
ja
adc
loopne
jno
dec
pop
dec
fsubl
into
into
repz
dec
or
dec
add
jo
jns
inc
jns
shlb
cld
test
and
inc
mov
pop
jmp
sub
cmp
sbb
push
mov
iret
fiadds
adc
mov
xor
cmpsl
add
test
sbb
jnp
in
xchg
xor
pushf
out
dec
push
mov
mov
addr16
jnp
or
dec
rcrl
push
loope
add
push
fwait
dec
sub
mov
cmp
mov
in
and
inc
or
cmp
xchg
jge
xor
cmpsb
mull
inc
arpl
mov
sbb
and
pop
into
fdivrl
loope
ja
popf
orl
sahf
sbb
lret
sub
loopne
xchg
mov
outsl
mov
mov
jp
std
cmp
ljmp
and
pusha
or
lods
jno
adc
sub
leave
fnstenv
or
sbb
test
mov
jmp
and
lret
cmp
and
adc
jmp
mov
test
cmp
mov
and
sbb
sbb
cmp
and
nop
mov
dec
out
dec
fsts
repnz
loopne
daa
enter
jo
leave
stc
lcall
cmpb
scas
cmc
jno
dec
daa
out
dec
jno
lcall
vpunpckhdq
aad
enter
push
sub
mov
sahf
mov
dec
testl
out
mov
sub
movsl
out
lahf
push
mov
ja
jb
sahf
cmp
pushf
cmp
mov
push
arpl
ds
decb
xchg
xchg
push
cmpsb
mov
lea
sub
mov
mov
pop
repz
xor
sub
xchg
mov
loopne
ds
addr16
inc
in
cmp
mov
add
or
mov
jae
push
inc
orl
jo
xchg
xchg
jae
das
cltd
stos
pop
add
sub
xor
push
into
sub
leave
mov
cmpsb
push
arpl
adcb
push
in
pop
mov
jb
movb
stos
mov
andb
mov
pop
sbb
hlt
push
fldcw
mov
mov
adcl
js
push
xchg
or
and
adc
loope
lds
aad
push
push
ja
mov
out
jmp
push
cltd
sbb
mov
jmp
js
mov
or
scas
aad
xor
imull
outsl
sbb
pop
inc
or
cltd
push
cwtl
mov
xlat
jge
lods
cmp
inc
sbb
out
leave
test
push
scas
aaa
sub
loopne
outsl
push
mov
cmp
andl
add
xor
pop
pop
pop
lret
rcl
jo
jb
xchg
cmp
pop
add
cmpb
xchg
add
push
pusha
lods
js
cmp
mov
mov
fneni(8087
loopne
loope
dec
or
pop
js
sbb
filds
xor
add
adc
jb
mov
jae
stc
mov
mov
dec
jmp
push
jp
cltd
cmpsl
adc
ja
pop
dec
ret
or
into
pop
pop
and
fwait
cltd
dec
fsts
push
pop
rsm
popf
out
leave
mov
into
add
push
sub
add
push
jge
lret
or
or
aad
or
call
sbb
mov
inc
roll
into
cmp
roll
lock
cmpsl
add
pop
fisubrl
mov
sbb
out
fstpl
mov
inc
dec
cmp
stc
mov
or
mov
jae
lcall
push
sbbb
mov
leave
mov
add
clc
mov
push
aam
add
xor
push
mov
cmp
popa
ja
out
ret
sub
push
sub
mov
into
pop
or
mov
dec
scas
imul
loope
sub
je
ret
sarl
add
leave
orl
sbb
test
out
into
or
push
test
mov
sub
lds
ret
fiaddl
or
or
mov
loopnew
incl
shlb
or
loope
mov
xor
or
aad
sbb
jo
jp
int
test
call
pop
ret
aam
mov
cmp
jp
xchg
push
xchg
jecxz
or
repnz
cwtl
pop
xor
add
and
jns
cwtl
sbb
in
popa
add
or
jo
in
adc
packuswb
je
aas
lods
fidivl
lds
ret
pop
pop
popa
loope
sbb
jl
loope
into
test
push
pop
push
imul
pop
loopne
test
ja
lea
jbe
imul
add
loope
pop
rcrb
and
push
insb
add
cmp
or
out
push
mov
dec
loopne
dec
pop
push
add
call
andb
mov
arpl
xor
dec
pop
jno
or
into
mov
ljmp
ljmp
push
arpl
stc
add
or
mov
ret
or
push
dec
setl
mov
mov
xchg
loope
add
call
arpl
or
pop
mov
ffreep
pop
jecxz
aad
fwait
rcl
add
mov
hlt
jl
hlt
in
clc
lock
xchg
xor
jmp
xchg
sbb
jmp
add
loopne
cmp
xor
lods
mov
lret
adc
cmp
sbb
loopne
pop
jbe
add
cmp
pop
in
adc
in
adcb
adc
pop
cmp
pop
xchg
neg
adc
lods
icebp
test
orl
and
cmp
cmp
fsubrl
mov
rcrb
jp
lock
inc
out
jp
lods
repz
inc
ret
pop
mov
dec
pop
dec
test
sub
into
enter
sbb
mov
mov
mov
pusha
nop
rcll
test
imul
sub
testl
adc
loopne
sub
fs
sbb
ret
das
dec
aaa
mov
cmp
in
lds
sub
dec
or
push
lods
lahf
pop
jnp
sarb
add
imul
repnz
jno
mov
xchg
int3
jae
ljmp
sbb
addr16
int3
and
cwtl
adc
mov
push
movsl
push
jmp
cs
cltd
sbb
insl
subb
jnp
mov
add
stos
push
push
jo
add
mov
push
jl
daa
sub
inc
pop
sbb
repz
mov
cmp
xlat
sbb
sub
repz
mov
loope
out
mov
jg
mov
faddl
dec
test
test
cmp
mov
rolb
pop
in
add
in
add
inc
fistpll
sbb
push
into
push
add
mov
xor
push
pop
pcmpgtw
add
sbb
das
push
cmp
in
orl
inc
sbb
mov
pop
loope
lods
sahf
pusha
jno
xor
dec
daa
ja
clc
adc
inc
jmp
cmpsb
mov
fistpl
ja
inc
jne
mov
pop
pop
jecxz
xor
scas
out
xchg
xchg
movsl
push
add
inc
data16
pop
jno
pop
mov
xchg
ret
pop
cmpsl
imul
pop
ret
pop
xor
popf
les
lock
mov
iret
xor
into
mov
ja
fistl
inc
sbb
push
xchg
roll
adc
cmp
rcrb
xchg
scas
mov
mov
and
out
cmp
xlat
emms
test
jnp
adc
inc
mov
xorl
out
scas
outsl
inc
xchg
loope
pop
filds
mov
push
ucomiss
fnstsw
insl
or
stos
mov
fsubl
xchg
add
icebp
iret
sub
xchg
shll
minps
xor
inc
push
jo
push
add
jae
or
lods
test
push
cmp
sbb
ret
xor
mov
mov
cmp
and
sub
out
xor
push
adc
ljmp
or
add
add
pop
pop
add
jnp
add
incl
mov
mov
add
add
ret
int
rcr
add
fsubp
add
div
add
add
and
mov
xor
mov
lcall
decl
mov
rorb
fiadds
push
in
fucom
pcmpeqd
lock
in
aas
xor
es
or
mov
mov
adc
stos
cltd
mov
ja
scas
xor
push
pusha
iret
jb
push
or
and
shl
test
push
jae
add
div
lahf
pusha
repz
adc
fiadds
and
and
and
fdivrl
add
sub
and
xor
cld
iret
int3
into
push
push
push
sbb
push
sub
push
insb
fildll
push
sub
jae
push
push
arpl
xchg
inc
sub
mov
xlat
push
push
inc
xor
inc
xor
xor
insl
add
push
and
push
xor
ficoms
repz
push
xor
inc
push
sbb
add
out
fsts
and
inc
ja
out
push
and
inc
add
and
and
push
mov
ror
sub
aaa
dec
ds
mov
fs
fstpt
adc
jae
push
inc
and
inc
and
int3
scas
mov
add
pop
sbb
push
adc
xor
je
push
adc
adc
fucomp
mov
add
cs
push
push
jl
pop
cs
rolw
push
mov
cmpsb
push
cmp
push
aam
and
sahf
cmpsb
dec
jecxz
xchg
xor
mov
ret
ret
mov
mov
outsb
xor
fiadds
push
test
or
idiv
out
ds
xchg
add
pushf
add
sahf
push
mov
mov
add
push
insl
add
scas
lahf
iret
fdivrp
es
lods
add
scas
push
mov
pop
mov
add
lahf
jbe
add
or
inc
xchg
inc
xchg
mov
add
dec
in
push
push
mov
fcmovnu
dec
pop
push
pop
test
arpl
fs
divb
mov
ret
push
jae
fwait
cmpsb
repnz
jnp
jl
add
hlt
scas
popf
ret
push
test
movb
add
mov
lret
mov
repz
xchg
mov
divl
push
and
cs
out
xchg
jecxz
push
mov
cmpsb
repnz
repz
mov
shll
sti
mov
shrl
lods
xor
insl
fldt
inc
mov
fs
push
cmpsl
xchg
mov
mov
xchg
add
mov
add
mov
pushl
roll
into
lds
loop
ror
idiv
pop
ret
out
out
add
in
in
cld
cmc
out
add
div
push
sti
repz
xor
xchg
inc
lret
adc
sbb
add
add
inc
enter
add
push
cmp
aas
lds
mov
popa
ret
call
cmpl
xchg
test
inc
ret
add
dec
mov
pop
pop
pusha
add
arpl
mov
ret
ret
mov
inc
cmpb
sarb
mov
mov
rcrl
pop
popa
mov
psubw
mov
dec
add
popa
pusha
repz
call
adc
adc
unpckhps
cltd
mov
movhps
in
and
sahf
fwait
mov
mov
jnp
pusha
lahf
js
and
lahf
cmpsl
mov
mov
movsb
sbb
mov
or
pusha
pop
test
call
pop
dec
sahf
dec
dec
pusha
mov
rcrl
push
dec
dec
pusha
mov
mov
movsl
movsb
mov
mov
fwait
pop
add
and
sub
and
jle
jmp
cs
pop
or
movsl
bound
es
and
imul
dec
dec
mov
lahf
ljmp
in
test
cmpsl
cmpsb
push
pusha
dec
lahf
test
lcall
mov
pop
jo
push
popa
test
call
mov
cltd
cmp
push
lahf
mov
inc
mov
repz
inc
lcall
fwait
fwait
dec
lds
ret
add
push
repz
lahf
fwait
fwait
push
dec
lahf
fldl
fs
adcl
lahf
xor
inc
scas
mov
scas
mov
fdivp
and
popa
pushf
jge
push
push
out
jae
mov
xchg
xchg
jae
scas
mov
mov
data16
fnstsw
jbe
jo
insl
addr16
test
push
pop
pusha
idivb
mov
movsb
jle
jb
pop
daa
lahf
out
lcall
xchg
out
fnstsw
lea
gs
jno
arpl
in
jbe
std
mov
addb
pop
mov
jle
sub
push
pop
pop
pop
push
sbbb
xchg
pop
popa
add
dec
jge
scas
mov
pop
js
lahf
pushf
jl
aas
cmp
mov
scas
mov
scas
test
cwtl
jbe
push
mov
lahf
lahf
xchg
arpl
lcall
enter
test
pushf
mov
lock
jnp
jle
aas
cmp
add
mov
lret
add
pop
mov
pop
nop
pusha
jbe
cmp
pop
add
jns
clc
enter
pop
add
inc
aas
cmp
pop
bound
pusha
pop
add
in
adc
pop
pop
cmp
arpl
add
mov
sbb
cmp
cmp
push
pop
mov
out
xchg
add
pop
inc
pop
mov
mov
jge
cmp
or
push
pusha
mov
cmp
or
lahf
cltd
cmp
xor
sub
sub
mov
iret
mov
outsb
mov
pop
or
add
xor
insl
fisttpl
sbb
push
cmp
repnz
add
push
or
outsl
mov
dec
or
or
insb
adc
pop
add
and
fcomi
verw
push
js
xor
sbb
sub
inc
es
jg
cmpsl
dec
push
cmp
jl
or
inc
sbb
dec
inc
cmp
push
inc
push
add
std
outsl
iret
add
pop
sub
dec
add
xor
add
cmp
push
imul
roll
sbb
dec
pop
add
dec
pop
add
push
pop
add
dec
inc
add
pop
push
outsl
fcomi
lods
insb
fs
pop
in
pop
push
dec
bound
push
push
push
push
push
sbb
push
js
jae
ss
pop
je
jb
ss
popa
jnp,pt
data16
sbb
outsl
fsubrs
inc
out
fs
jns
sub
jge
push
insb
arpl
pop
jne
push
sti
push
xchg
pop
add
push
das
push
mov
sbb
xchg
cmp
lods
cmp
test
mov
ss
xor
xchg
outsl
fsubrs
inc
ret
push
cmpsl
push
sub
pop
or
mov
ljmp
cmpsl
int
in
outsb
out
push
clc
imul
js
add
pop
and
in
fdivl
cmp
in
pushw
xchg
push
or
add
push
subb
xchg
push
push
orl
jbe
push
inc
xchg
incl
xchg
xchg
pop
fiadds
push
clc
push
add
xchg
pop
mov
mov
mov
jg
jecxz
inc
mov
sbb
xchg
add
xor
std
pop
xchg
add
insl
xchg
jb
add
std
fildll
push
xchg
jge
xchg
jge
inc
insl
stos
add
mov
inc
inc
les
pop
adc
jle
loopne
mov
mov
adc
push
xchg
rep
frstor
movsl
push
adc
mov
fbstp
scas
add
stos
mov
xchg
mov
cwtl
mov
and
stos
add
mov
mov
mov
fisubrs
mov
pushf
push
push
sahf
nop
add
ss
xchg
push
inc
lods
sahf
and
cwtl
push
mov
add
fistl
fists
mov
add
lods
add
mov
movsl
mov
mov
int
mov
push
mov
add
lods
xchg
mov
outsb
pop
icebp
incl
addr16
add
ret
mov
add
push
add
leave
mov
fistps
fiaddl
adc
or
int3
cmpsb
in
in
jg
out
lret
rcl
jbe
flds
jge
fbld
aad
arpl
or
lret
mov
call
pushf
stos
push
test
roll
xchg
mov
add
insb
es
mov
mov
mov
add
popa
sarl
popf
leave
data16
test
push
out
stos
lret
mov
mov
sti
sarl
lds
dec
fisubrl
in
lcall
iret
fsts
fildl
aad
data16
push
mov
fbld
fistpll
mov
cld
out
clc
cmpsb
dec
in
mov
aam
mov
in
cld
addb
int3
cmpsb
mov
xlat
pop
mov
fnsave
xchg
mov
mov
in
mov
jecxz
xlat
enter
push
loope
loopne
jmp
in
cmpsb
out
dec
out
testb
sti
push
out
outsl
jle
fdivr
cli
jbe
data16
loop
ret
icebp
call
push
in
hlt
xchg
cld
in
cmc
loope
inc
mov
aaa
bound
incb
je
les
das
sub
push
add
add
add
jno
mov
dec
jle
mov
lock
mov
pop
sbb
push
push
and
aaa
jg
sub
fneni(8087
fnstsw
lret
jl
sub
sbb
push
repnz
and
fwait
lret
fcmovu
fcomip
loope
lret
sbb
jmp
lcall
mov
pop
das
cld
fbld
idiv
div
out
jmp
pop
mov
jnp
jg
mov
mov
dec
in
out
jle
call
pop
imul
mov
lret
mov
or
hlt
sti
mov
ret
mov
sti
iret
rcrb
or
pop
cld
out
or
pop
xchg
and
iret
mul
jbe
mov
mov
out
fisttps
dec
rcrl
hlt
fdivrl
mov
pusha
test
or
icebp
neg
or
xorl
call
idiv
cmc
loop
dec
xchg
movsb
mov
or
or
or
pop
or
sbb
lret
jns
hlt
sar
in
aas
adc
movsb
inc
loope
incl
dec
adc
or
sbb
outsb
ret
mov
repz
jg
decl
dec
push
push
push
dec
dec
inc
inc
dec
dec
dec
dec
inc
adc
daa
cmp
dec
adc
xchg
stos
test
mov
addr16
push
push
rcll
jmp
push
push
dec
sbb
sbb
es
xchg
imul
inc
add
pop
xchg
dec
inc
inc
or
add
aaa
sub
jno
and
ret
iret
lret
pop
xchg
test
inc
or
cmp
and
push
or
add
jne
pop
push
lcall
repnz
or
in
sub
add
jo
test
and
or
pop
fisubs
inc
leave
or
test
pop
push
sti
inc
movsl
mov
or
lahf
call
sar
popf
mov
aad
or
scas
pop
xchg
xchg
ljmp
cld
and
out
mov
jg
test
rcr
mov
ret
pop
pop
jnp
int
jnp
jg
ds
rcrl
scas
sahf
enter
loope
int
jg
filds
xor
fisubs
sti
divl
mov
mov
add
jge
push
jno
popa
std
pushf
mov
mov
mov
jmp
andb
pop
nop
lock
lods
mov
mov
cmp
pushf
das
xor
add
cmovo
and
in
pusha
lahf
xor
mov
pop
add
xor
out
sbb
iret
xor
pop
test
aas
sbb
fwait
out
out
add
outsl
pop
push
das
aas
add
push
nopl
out
fildll
rdtsc
inc
add
xor
sub
cmp
mov
stc
cmp
aas
aas
das
cmp
push
push
pop
xchg
idivb
mov
cs
inc
cmp
dec
cmp
aas
jo
stc
stc
out
push
cmp
add
cmp
cmp
dec
pop
loopne
pop
aaa
inc
add
pop
inc
cmp
fwait
int
insl
push
pop
jae
pop
jae
pop
jbe
jbe
jns
divb
jp
arpl
dec
push
popa
add
jae
inc
je
jo
insb
pushl
inc
pop
jno
inc
pop
jge,pn
inc
push
add
outsl
out
jo
add
mov
andw
cs
jo
nop
je
add
fmuls
lahf
scas
mov
or
add
pop
test
xchg
popl
lahf
add
test
jno
mov
dec
nop
add
adcl
jae
push
jne
out
jno
push
push
inc
jns
add
lods
loopne
jns
jne,pn
inc
jge
jg
popl
rolb
push
push
add
jmp
add
push
fiaddl
shrl
add
insl
adc
jae
add
jg
cld
mov
pop
nop
push
add
sbbl
fwait
out
filds
add
pop
mov
mov
mov
decb
xchg
push
pop
xchg
cmpsl
sub
mov
push
xchg
test
lcall
sbbb
bound
cltd
mov
movsl
stc
jmp
mov
add
mov
mov
add
mov
mov
adc
xchg
sahf
mov
shlw
nop
xchg
add
scas
push
push
mov
mov
leave
mov
add
mov
mov
jbe
stos
xchg
mov
push
test
push
shll
jle
iret
push
mov
fldl
mov
rcr
push
ror
insb
mov
shr
add
jmp
ljmp
ljmp
testl
mov
push
rol
loopne
lock
mov
fcmovnu
idivb
fimuls
pop
int3
ds
push
add
sub
in
push
out
cmovo
ljmp
push
pop
or
push
data16
sbbb
mov
inc
incb
sub
dec
push
fwait
popf
mov
cmpxchg
mov
jns
imul
outsl
jne
sbbl
pop
mov
jge
outsb
push
xor
popa
decl
daa
dec
addr16
jle
mov
mov
mov
mov
jno
dec
add
pop
pop
insb
jae
xchg
inc
adc
and
xchg
cld
out
push
pop
jbe
push
sbb
dec
sbb
mov
xor
fwait
or
pop
popa
pop
push
in
jge
fcoms
push
mov
xchg
or
aas
popa
pop
inc
sbb
push
imul
pop
in
or
push
jae
inc
pop
in
jge
add
adc
fidivrl
cmpsl
add
int3
lcall
mov
mov
jae
add
lahf
mov
imul
pop
imul
add
jnp
nop
pop
xor
incl
push
cmp
mov
cltd
mov
nop
pop
in
data16
repnz
mov
mov
mov
mov
dec
mov
cmp
pop
mov
jb
decl
sub
sub
or
mov
in
jg
movsl
and
add
or
pop
cmp
icebp
add
pop
inc
push
pop
adc
mov
and
push
sbb
mov
nop
dec
and
and
xor
jg
push
inc
bound
dec
sbb
and
inc
or
xchg
pop
push
jg
adc
cld
dec
dec
inc
or
dec
jmp
cmp
mov
inc
pop
push
clc
adc
and
pop
push
add
inc
sti
push
mov
push
pop
cmp
ss
adc
xor
pop
mov
jge
cmp
and
popa
and
jbe
ss
add
push
in
add
cmp
and
xchg
xchg
add
push
arpl
sbb
or
mov
stc
xchg
push
addl
out
add
rolb
and
or
testb
dec
loope
xchg
push
add
sti
sti
sbb
ja
xor
rclb
mov
add
push
stc
mov
adc
sti
lock
sti
jae
aam
mov
adc
imul
mov
fisttpll
mov
js
cld
fisubrl
adc
xor
lock
pop
mov
mov
sbb
out
dec
mov
jnp
ja
das
mov
mov
mov
cmp
icebp
jg
adc
iret
daa
incl
pop
call
xor
push
jg
jg
adc
cmp
push
cmc
hlt
cmc
icebp
add
pop
inc
inc
fistps
mov
pop
pop
add
inc
dec
add
jnp
cmp
stc
add
mov
xlat
cltd
xchg
xchg
add
int3
popf
push
add
sar
add
out
add
fcmovu
add
repnz
lret
testl
add
sti
jle
and
sbb
xor
ljmp
mov
cltd
cltd
lcall
mov
in
sbb
mov
pop
xor
fneni(8087
fcmovnu
xor
xor
mov
mov
cli
push
js
popf
fstl
xor
fdivp
mov
pop
xor
xor
fldl
fcoms
inc
arpl
jg
scas
push
shrb
add
add
add
jp
outsl
aaa
jg
addr16
adc
push
pop
sub
out
add
loopne
clc
aaa
adc
mov
add
enter
xlat
sar
nop
cmpl
push
popf
cld
leave
pop
xor
mov
xchg
repnz
movsb
push
xchg
and
mov
outsb
cmpl
xor
push
jnp
in
andb
lea
in
data16
xchg
add
arpl
add
in
add
push
adc
adc
adc
adc
push
enter
inc
cld
les
add
jae
add
pushw
mov
pop
mov
out
loopne
xlat
mov
pop
push
arpl
mov
fwait
xor
popw
dec
sahf
addl
rclb
xor
hlt
aas
nop
popl
mov
mov
iret
fmuls
es
ss
push
arpl
cmovo
push
xchg
inc
mov
mov
add
mov
or
push
and
cmp
enterw
int3
push
pushf
cmc
sbb
jae
cmp
cs
pop
mov
dec
pop
cs
fdivs
sub
add
pushf
int3
add
mov
dec
rcrb
pop
dec
addl
inc
loopne
or
add
add
mov
sub
pop
popf
ss
or
adc
test
cmc
test
push
mov
in
cmc
nopl
xchg
pcmpgtd
outsl
or
les
imulb
add
mov
mov
dec
sub
das
outsl
inc
inc
int
sbb
ds
mov
lcall
loopne
add
adc
pop
out
int
cld
in
push
mov
inc
popl
sbb
insb
pop
popl
add
push
and
arpl
pop
inc
and
or
fs
test
xchg
or
mov
sbbb
add
mov
add
daa
add
ss
es
ss
add
add
inc
aas
inc
inc
push
out
std
dec
add
sbb
push
push
pop
pop
pop
push
jbe
out
mov
add
pusha
push
add
or
add
adc
fsubp
mov
jl
je
jg
and
cmp
test
std
mov
cmpsb
inc
dec
add
dec
push
add
adc
sbb
add
inc
dec
dec
inc
aaa
fwait
inc
dec
dec
add
dec
add
dec
add
inc
dec
push
dec
push
xchg
push
add
add
jle
pushl
pop
pop
push
push
push
push
pop
push
push
push
pop
pop
add
pop
add
push
pusha
add
bound
popa
pop
popa
add
pop
fs
arpl
decl
lcall
imul
outsl
insl
jo
jo
jo
hlt
insl
jne
idivb
jp
jle
mov
jnp
jnp
ja
test
mov
add
stos
int
insb
pop
mov
push
or
decl
add
je
push
jae
lods
loopne
sub
jp
sbb
jp
mov
aaa
in
std
dec
mov
add
les
push
or
adc
mov
push
int
mov
or
in
adc
pmuludq
add
adc
jmp
mov
mov
data16
mov
mov
repz
ficoms
mov
add
mov
mov
jae
mov
inc
lea
or
mov
push
lods
pusha
lcall
push
pusha
test
push
repz
add
mov
adc
ret
scas
or
fadds
xor
out
enter
push
xor
insb
repz
sarb
push
adc
out
add
xlat
call
int
add
and
jmp
in
repnz
mov
cmpsl
push
testb
pop
rcrb
adc
incl
testb
repz
add
jl
mov
in
sahf
jo
pushf
test
ss
mov
orb
test
fildl
sahf
fisubrs
mov
add
das
push
add
mov
mov
mov
sbb
fwait
in
lcall
mov
add
mov
int
mov
mov
lds
mov
cwtl
ret
incl
mov
fsubs
add
fisubrs
mov
insl
fsub
push
jecxz
mov
movb
test
xchg
push
mov
fldt
lret
mov
push
mov
aad
rcr
add
sti
lds
lods
jmp
lret
push
mov
fildl
jbe
fimuls
jecxz
in
negb
data16
roll
push
fucomp
shrb
in
push
push
lock
out
ds
lock
ret
rcrl
fisttpll
in
push
insl
out
negb
sahf
enter
into
ljmp
scas
jmp
mov
in
clc
push
push
out
jbe
in
imul
fcomi
push
aad
decb
push
icebp
mov
es
out
repnz
jmp
jecxz
ljmp
data16
push
inc
loope
in
idivb
jecxz
ljmp
data16
repz
add
std
loop
in
xlat
mov
add
xor
add
aas
inc
cmpsl
ss
orb
add
rcrl
cmp
ss
imul
or
inc
ja
and
sub
sbb
mov
add
sub
pop
or
push
sti
push
adc
cmpsl
or
stos
lods
scas
lods
add
push
dec
adc
jbe
pop
sbb
xchg
out
std
xor
or
push
ret
rol
mov
fdivr
stos
jbe
or
stos
cmp
lret
lret
fs
inc
or
pushf
shll
lea
cmp
das
dec
sbb
add
or
or
shr
pusha
mov
stos
mov
sarl
pop
dec
adc
jmp
mov
out
call
loop
or
lods
or
jbe
mov
fadd
cmp
dec
adc
loop
pop
out
cltd
in
out
ljmp
out
push
daa
fadd
cmp
dec
mov
std
sbb
ret
call
cmp
push
adc
daa
out
mov
xlat
gs
or
pop
pop
out
subb
dec
lock
lock
daa
pop
cmp
mov
in
pop
or
add
mov
push
loope
loope
in
jmp
out
out
iret
in
daa
clc
sub
or
jmp
jg
scas
loopne
dec
inc
xor
xor
aaa
inc
cmp
stc
das
clc
or
ljmp
jbe
sub
xor
cmp
adc
push
mov
mov
nop
or
cld
xchg
daa
xchg
sub
sub
or
cmp
jo
pop
call
orl
into
or
daa
into
das
jmp
inc
div
cld
cld
cmp
xor
cwtl
sti
or
or
mov
lea
or
das
cltd
inc
fwait
pushf
test
divl
das
mov
cwtl
sti
xchg
push
pop
pusha
loop
dec
cmpb
ds
inc
popf
into
out
out
cld
lahf
popf
inc
xchg
jnp
js
or
cmp
dec
cld
mov
in
repnz
cmp
popf
cld
mov
lcall
or
pop
dec
lahf
call
rorb
rorl
aad
flds
mov
out
into
test
daa
aad
cmp
dec
insl
mov
fldcw
repnz
inc
cli
mov
loopne
int3
pushf
inc
aaa
repnz
out
call
cmp
or
or
sub
inc
cli
mov
icebp
pop
not
popa
mov
hlt
aaa
fsubl
xlat
jg
dec
sbb
call
or
sub
inc
cmc
scas
mov
fistpl
cmp
cld
xchg
das
bound
sub
inc
repz
push
xor
sub
cmp
sbb
mov
loope
xchg
sub
cmp
lahf
cmc
mov
test
fimull
jmp
mov
or
push
mov
xor
add
frstor
fdivrl
push
decl
add
or
xor
pop
mov
inc
fidivl
fisubrl
in
mov
scas
mov
movsb
or
xchg
sub
cmp
daa
out
jle
mov
cmp
xchg
jl
or
mov
daa
mov
pop
sub
imul
ficompl
pop
adc
add
daa
movsb
or
xchg
es
or
ret
mov
outsl
orb
or
mov
mov
jg
mov
cld
mov
lret
xchg
insl
push
inc
mov
add
pop
mov
insl
in
mov
cmp
test
mov
push
clc
bound
inc
das
cmp
mov
das
add
push
inc
or
nop
xor
sbb
xchg
xchg
fsubr
pop
xor
daa
and
xor
clc
scas
cmp
adc
xor
es
jbe
incb
adc
add
inc
push
adc
adc
inc
dec
scas
add
stc
dec
add
dec
dec
push
dec
pop
pop
push
loop
mov
push
dec
inc
add
pop
adc
add
gs
clc
insl
mov
jbe
push
dec
dec
dec
jg
sti
lcall
push
dec
je
es
push
jp
add
lcall
pop
jl
add
push
fwait
push
add
push
xchg
xchg
je
fwait
fwait
jns
dec
jl
mov
xchg
cs
loopne
addb
mov
add
mov
cld
jbe
add
int3
mov
lcall
cwtl
add
add
ja
mov
add
outsl
test
ljmp
add
cmpsb
test
neg
lahf
nop
jle
lahf
mov
mov
mov
mov
add
xchg
add
add
mov
sti
lcall
add
cmpsl
add
mov
mov
mov
insl
aaa
and
jbe
mov
mov
fidivrs
sarb
push
mov
mov
leave
leave
jl
mov
lcall
sarl
ds
lods
out
xchg
add
scas
push
mov
ret
add
mov
lds
mov
ror
aam
add
mov
es
push
aam
dec
xlat
int3
xlat
into
divb
iret
add
ror
add
ror
push
rcr
push
fcom
push
repz
fcmovnb
shll
rolb
fcom
add
fxch
add
mov
outsl
dec
add
add
push
out
pop
loop
xchg
aam
add
fld
push
xlat
push
std
fcomi
fists
xchg
sub
lcall
push
out
pop
jmp
fisubl
out
call
loopne
out
js
out
lods
fldcw
lock
push
in
out
cld
jecxz
cli
jecxz
mov
repnz
add
out
hlt
inc
xor
test
cmc
ss
in
ss
outsb
fstpl
fsubrp
cs
jmp
repnz
mov
xlat
out
outsb
not
loopne
fcmovu
cmpsb
inc
push
jmp
push
cmp
outsb
jecxz
ss
insl
fldt
add
ljmp
out
call
outsb
imull
in
mov
ds
loope
add
ljmp
hlt
out
imul
es
out
xchg
loope
cli
pop
insl
fcmovnu
idiv
call
scas
out
push
out
es
imul
jbe
loop
pop
cli
lock
repnz
out
cmpsb
mov
hlt
mov
js
repnz
push
cli
repz
int
xor
hlt
cld
push
cmc
sti
ss
sti
test
into
clc
out
sti
in
push
jmp
out
ja
add
cmc
hlt
outsb
push
lock
pop
xorl
cld
not
repnz
pop
aaa
icebp
mov
push
hlt
mull
es
out
mov
jbe
lock
push
cld
clc
ss
stc
imull
mov
out
insb
dec
cli
incl
cmc
stc
add
div
cli
cmp
push
cli
sti
ss
push
push
ds
xor
sub
jle
push
clc
cld
xor
lret
sub
cld
inc
jle
cmp
add
add
pop
adc
or
jbe
shrb
pop
out
xlat
clc
out
incl
mov
incl
cwtl
or
cli
pusha
fcos
call
fidivrs
addb
aaa
pop
incl
or
and
sbb
push
or
mov
rol
xchg
addl
cmp
or
sub
dec
xor
dec
dec
add
cmpsl
fsubrs
incl
jecxz
lret
sahf
xchg
cltd
add
xor
ss
out
dec
js
push
push
fs
mov
lret
fstl
out
pop
pop
xor
pop
push
int
cld
lods
je
arpl
mov
out
jecxz
loope
repnz
clc
jbe
inc
jbe
lods
push
pop
popa
sarl
jns
in
fisubrs
movsb
cwtl
ret
repz
lock
pop
dec
aas
gs
stos
xchg
in
mov
xchg
popf
ret
rcl
into
sar
stc
daa
mov
scas
xor
gs
ja
shrb
mov
insb
push
pop
pop
pop
pop
outsl
jo
jae
pushl
jg
les
neg
sti
or
push
inc
inc
inc
inc
inc
inc
ds
mov
cmp
inc
push
pop
or
xor
test
fidivl
lods
add
sbb
adc
pop
in
outsl
es
xor
sbb
add
mov
cld
xor
scas
pop
and
and
dec
sbb
inc
sub
sbb
pop
fiadds
sbb
sar
xor
push
shrb
stos
ljmp
pop
in
jns
push
dec
xor
xor
jb
push
mov
jns
pop
icebp
sbb
jns
push
stos
lods
add
call
pop
dec
jp
xor
xor
sub
sub
mov
and
fisttps
pop
outsl
outsb
outsb
in
pop
pop
xor
mov
and
mov
jle
dec
pop
in
aaa
aaa
mov
add
sub
or
pop
sub
es
into
dec
dec
addr16
bound
xor
mov
das
stc
push
addr16
stos
test
push
xor
ja
daa
and
push
fs
push
and
mov
mov
mov
push
and
mov
adc
add
fs
xchg
popa
outsb
call
stos
add
mov
add
cmp
ss
jge
testl
mov
decl
add
pop
push
dec
sub
inc
or
push
jle
add
mov
xchg
pop
pushf
mov
jmp
pop
pop
pop
pop
pop
adc
cmp
mov
lcall
add
or
inc
sub
es
pop
mov
fcmovu
pusha
add
pop
cmp
mov
scas
scas
andb
adc
add
sahf
pop
dec
dec
add
cmp
dec
dec
push
push
mov
dec
push
add
push
add
push
add
mov
add
repz
mov
mov
cs
cmp
fmuls
mov
add
flds
pop
mov
lcall
inc
mov
dec
ds
jg
ret
pop
out
push
shl
push
ret
pop
pop
les
lock
dec
icebp
push
dec
repnz
repz
hlt
fbstp
pop
mulb
data16
cld
add
mov
sahf
imul
cld
add
repz
fsubrl
dec
jmp
outsb
lret
jb
int
mov
jbe
push
jo
push
jo
push
jae
jne
fcomi
lcall
lret
jle,pt
repz
fldcw
jp
jp
jl
jge
jg
insb
ds
mov
shlb
push
gs
push
mov
cli
jno
sti
ja
xchg
add
add
lea
nop
and
xchg
js
add
ds
insb
dec
add
movb
mov
jmp
pushf
addb
xchg
cltd
cltd
add
push
or
lcall
add
xchg
add
push
mov
xchg
add
xchg
fwait
add
lcall
lods
mov
add
ss
data16
push
sar
test
push
test
push
xchg
insb
ss
int
rorl
rorl
mov
xchg
rcrb
rolb
xchg
aad
xchg
push
xchg
xlat
push
xchg
fcoms
fildl
pushf
shll
cltd
fcomps
cltd
ficompl
sarb
incl
outsb
lahf
out
xchg
push
cltd
sahf
mov
rep
xor
cmpsb
pop
fisubs
cmpsl
fsubr
imul
lods
filds
scas
mov
out
push
stos
scas
mov
cs
mov
mov
in
out
mov
mov
mov
int3
movb
int
aad
dec
repz
jmp
int3
ret
leave
fdivp
cmp
inc
into
fcmovbe
aam
scas
clc
jns
out
filds
lret
repnz
clc
mov
push
es
push
idiv
repnz
in
mov
stc
jbe
push
inc
jae
pop
add
and
pop
add
nop
lret
scas
bound
fimull
jb
add
lret
pop
in
das
testb
sbb
and
popa
pop
repz
decl
add
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
stos
lods
lods
mov
mov
xor
add
sbb
daa
daa
das
xor
xor
aaa
cmp
inc
lock
cmp
inc
inc
jb
jne
orb
aas
inc
dec
dec
dec
jbe
js
jl
addb
cltd
popf
popf
xchg
mov
push
pop
inc
fwait
add
cmpsl
bswap
mov
test
mov
mov
mov
fwait
inc
adc
dec
dec
dec
dec
jae
jns
jge
addl
cmpb
xchg
mov
or
aas
fwait
ds
xchg
mov
lock
gs
pop
adcb
inc
popa
test
or
in
imul
fwait
cmp
sbb
cmpsl
mov
pop
mov
lret
lret
outsb
imul
aas
add
popa
jg
mov
pop
mov
cld
in
daa
idivb
fwait
ss
popa
jge
xchg
leave
lret
insl
push
xchg
cmp
mov
push
sub
insb
outsb
or
popa
rcr
iret
jns
cmpb
add
data16
or
cmp
popa
ja
jle
xchg
sbb
arpl
push
pusha
pop
popa
jae
mov
mov
fsubrs
xor
popa
dec
fwait
mov
sti
pop
pop
popa
pusha
pusha
push
cmp
push
xor
fs
xchg
popa
dec
fwait
jbe
mov
pop
shlb
popa
xchg
cmp
push
dec
pop
das
xchg
mov
xor
popa
inc
fwait
dec
daa
xchg
mov
in
push
lret
add
dec
daa
xchg
pop
add
sub
pop
shll
mov
add
inc
fwait
dec
es
pop
pop
push
pusha
js
pusha
addr16
ret
fwait
inc
and
lock
inc
fistl
int3
and
pop
or
xor
inc
and
push
pop
mov
pop
add
scas
popa
insb
add
fsubs
or
push
sti
decl
adc
sbb
add
incl
jg
sub
sub
sub
dec
push
push
push
push
push
push
push
push
outsl
push
pusha
rcrl
jb
adc
ret
add
xchg
pop
and
stos
sub
adc
and
jg
xchg
inc
scas
sbb
xchg
scas
jl
xor
jo
jo
dec
cmp
sub
inc
leave
or
test
outsl
mov
popf
test
xor
cltd
cltd
xchg
jecxz
pop
pop
stc
int
in
jbe
mov
mov
sti
xor
xor
repz
ja
xchg
pop
pop
push
aas
xor
push
jns
bound
pop
push
ds
aad
mov
ljmp
push
aas
mov
push
mov
movsb
xchg
mov
push
push
cld
bound
push
lds
jns
xchg
outsl
js
out
call
xor
adc
xor
mov
xchg
mov
dec
mov
push
inc
mov
mov
push
mov
mov
inc
or
fistpl
mov
cs
sti
or
fidivrs
or
add
sub
or
outsl
cmp
adc
add
dec
dec
mov
pop
add
pushl
out
iret
ss
add
xchg
js
xor
in
outsb
xchg
sub
ja
subb
xor
pop
testl
imulb
subb
jo
insb
nop
dec
in
mov
add
and
sbb
push
idivl
cmp
dec
jae
aaa
jae
jnp
lahf
iret
lret
push
add
xor
jnp
xor
aas
add
shll
test
or
push
xchg
add
or
mov
ds
jg
sarb
cmp
jle
dec
push
dec
add
pop
add
popf
fcomi
insb
add
ljmp
incl
popf
add
ret
into
ror
filds
add
stos
jl
dec
push
xor
enter
mov
das
mov
enter
std
lret
push
mov
rcrl
fcomp
pop
add
mov
mov
pop
mov
adc
repnz
add
stc
and
pop
in
int3
imul
movsl
push
add
ret
in
popa
fistl
add
or
pushw
inc
add
jns
jo
push
jbe
fildl
adc
fildl
push
push
add
cld
inc
add
inc
stos
cmc
or
clc
add
cmp
loope
or
adc
pop
adc
adc
daa
ds
fcomi
aaa
bound
pop
sub
push
and
push
es
add
or
and
push
es
daa
cmp
sub
sub
add
or
cmp
push
cs
add
das
or
aaa
dec
add
insl
sti
out
cmp
add
cmp
adc
push
adc
dec
dec
outsl
add
insb
dec
dec
jb
dec
je
shrb
add
inc
push
jg
ds
mov
sub
xorb
mov
pop
outsl
mov
aaa
sbb
xchg
jbe
xchg
addr16
add
push
add
add
pushf
add
addr16
negb
push
mov
sbb
outsb
clc
test
sbb
jnp
push
jbe
scas
jge
mov
je
push
js
fiadds
add
cmp
add
test
add
xchg
cmpsb
mov
add
pop
xor
lret
push
mov
add
mov
add
nop
push
sub
decl
adc
cmp
cld
add
mov
icebp
mov
add
leave
dec
mov
shlb
xchg
dec
in
cs
imulb
fcmovnb
push
fadd
leave
push
fmulp
fisttps
fstps
int
into
loop
out
jge
iret
jecxz
rcrb
rcll
shll
rcr
repz
out
in
push
out
pop
aam
fdivrl
in
aam
pop
ss
cmp
xlat
faddl
out
call
insb
in
fsub
jecxz
bnd
repz
movsl
jns
dec
hlt
in
repz
cld
test
mov
iret
add
sub
pusha
data16
xchg
pop
imul
mov
ror
mov
pop
push
push
and
push
push
pop
lods
outsl
xchg
mov
jne
push
sub
inc
dec
test
popa
test
imul
pop
pop
pusha
pop
mov
cmpb
pop
pop
imul
pusha
push
add
push
outsb
pusha
pop
pop
lock
mov
and
pop
iret
xchg
bound
popa
pop
popa
mov
or
pop
pop
jp
mov
pushf
stc
movl
adc
add
mov
cmp
pmaxsw
sub
push
popa
inc
adc
xchg
mov
aas
inc
sbb
pop
pop
and
xchg
orl
pop
test
shll
adc
pop
addl
rcr
popa
pop
jl
addb
popa
or
jnp
adcb
dec
repz
pusha
dec
add
rol
cmpsb
jb
lret
fldenv
push
jp
jge
fs
add
ret
xor
cmpsl
jne
pop
mov
popf
and
daa
adc
xor
pusha
and
outsl
ror
in
jbe
mov
adc
shll
outsl
popa
or
popa
mov
mov
adc
cmp
mov
imul
jg
sti
bound
push
adc
push
jnp
dec
dec
pop
popa
pop
mov
cmpl
fchs
cmpxchg
pop
xor
pop
popa
push
subb
repnz
subl
xor
lds
imul
fdivs
xor
pop
bound
jno
jae
mov
push
jmp
pop
aas
pop
adc
push
icebp
or
push
add
outsb
pusha
aad
mov
outsl
jne
pop
jge
jne
xchg
cltd
incl
bound
imul
cltd
insb
ja
pusha
incl
add
mov
and
aad
lods
scas
jecxz
xor
and
adc
add
jge
pop
pusha
adc
sbb
add
push
pop
pop
push
push
and
sbb
and
mov
add
sub
or
add
sub
push
das
sub
xor
divb
and
xor
loop
sub
jg
divl
and
push
xor
push
xor
add
xor
cmp
sub
add
xor
push
xor
xchg
add
add
and
les
fcmovnu
mov
dec
dec
add
add
add
insl
add
add
pop
imul
pop
jne
jmp
jg
addr16
imul
popa
ja
add
arpl
add
ja
mov
xchg
js
jle
addl
repz
repz
xchg
mov
data16
mov
bound
bound
jnp
ret
push
les
addb
xchg
jns
popf
add
mov
xchg
xchg
xchg
add
xchg
add
pop
adc
popf
lcall
push
pushf
lahf
pop
mov
push
mov
push
test
repz
mov
mov
add
cmpsb
push
outsb
fwait
insl
movsl
cmpsl
movsb
test
test
movsl
stos
cmpsl
lods
push
in
or
push
stos
stos
test
rolb
stos
stos
push
scas
pop
fldt
scas
lods
push
mov
scas
mov
mov
scas
mov
insb
outsl
push
mov
mov
mov
mov
mov
mov
mov
mov
and
fwait
add
mov
mov
dec
inc
fldt
mov
out
pop
mov
es
mov
inc
xchg
test
mov
leave
or
mov
add
rorl
insl
jmp
mov
add
out
outsb
lds
les
mov
mov
enter
enter
leave
pop
leave
lret
nop
mov
lret
int3
lret
into
push
ds
rorl
mov
sar
ror
add
rolb
push
rcl
mov
into
mov
aad
push
rcl
aam
aad
add
xor
xlat
aad
std
pop
mov
aam
fsubs
fsts
fcom
xlat
fnstcw
mov
not
fsubrs
fadds
pop
fistl
pop
imul
mov
fcom
push
push
push
shll
dec
fstpt
fcomp
fiaddl
sahf
pop
xchg
adc
fucomp
mov
faddl
add
fcompl
fimuls
ficomps
imul
loopne
fiaddl
mov
fiaddl
fmull
dec
push
jae
stc
lret
filds
loopne
jecxz
fsubp
loopne
xor
hlt
stc
add
outsb
lret
push
out
mov
loope
loope
loop
loope
in
out
fcmovnbe
mul
in
out
in
out
call
mov
jmp
jae
jmp
cs
in
jbe
push
in
jmp
jmp
ss
in
jmp
push
out
add
movsb
pusha
add
outsb
jmp
lock
imul
div
cmc
add
div
push
stc
fcos
mov
push
push
push
cmc
sti
clc
add
std
cli
add
add
and
and
xchg
pop
fs
add
je
hlt
pusha
daa
pusha
push
popa
pushf
mov
movsl
lods
mov
cmpb
lahf
mov
sar
pushf
fwait
scas
lahf
lods
stos
lods
lahf
stos
test
popaw
mov
inc
mov
mov
mov
mov
mov
sbb
mov
xchg
push
popa
mov
cmpsb
filds
mov
cmp
mov
mov
mov
imul
popf
lea
xchg
mov
ljmp
mov
mov
lds
inc
inc
in
mov
mov
mov
mov
jns
popa
fistpl
lods
test
cmp
mov
lods
xchg
fbstp
jnp
mov
les
stos
pop
push
mov
pop
ror
mov
rorb
mov
fistps
mov
mov
mov
mov
mov
add
lods
lods
mov
es
add
cwtl
pop
mov
enter
mov
or
cmp
add
dec
mov
repnz
mov
jp
mov
sbb
lods
mov
popa
aaa
dec
xorb
mov
push
jbe
mov
hlt
addr16
leave
mov
mov
ret
mov
pop
addl
popa
add
jg
mov
ret
ja
ret
mov
fwait
add
mov
add
les
pop
jle
sarl
mov
leave
mov
mov
xchg
ret
and
ret
add
in
sub
ljmp
int3
int3
pusha
sbb
pop
mov
add
mov
adc
pop
lahf
je
push
out
insb
jo
add
in
mov
push
adc
call
out
shll
mov
mov
add
lds
in
lcall
insl
xor
jbe
xchg
jg
add
shlb
xchg
inc
or
inc
add
fs
outsb
mov
adc
fnsetpm(287
cmp
shlb
mov
ret
out
scas
xor
mov
mov
leave
insl
mov
iret
sarb
jbe
hlt
loope
loopne
sbb
and
pop
push
mov
adc
orl
fidivs
psubq
rol
mov
sub
insb
dec
mov
rclb
mov
pop
shr
jmp
add
repz
jecxz
loop
fisubrs
std
fcmovu
fsub
fcompp
fst
aad
and
out
pop
leave
js
mov
clc
incb
jmp
jle
outsl
fdivrp
fwait
push
call
out
out
jmp
fwait
jne
mov
adc
jmp
lock
stc
jg
cmpb
repz
icebp
lret
xchg
xchg
mov
pop
pop
enter
pop
imul
bound
pop
imul
loopne
lcall
jg
icebp
mov
repz
jae
xor
daa
pop
cmpb
inc
sbb
dec
jg
outsb
aas
leave
decl
sti
mov
std
aam
mov
fs
sub
dec
das
lcall
lcall
pop
add
push
hlt
sti
cmpsl
cmpsb
out
add
jg
std
jge
mov
add
dec
bound
pop
pop
push
ss
orb
outsl
mov
mov
not
hlt
std
lret
push
mov
into
mov
or
hlt
ljmp
or
or
orl
test
lret
cli
push
sub
mov
scas
sbb
xor
xor
aas
sub
adc
xchg
repnz
mov
or
sub
decl
adc
sbb
negb
das
pop
or
sub
adc
push
add
sarb
mov
add
add
int3
ds
add
pusha
add
add
or
mov
add
or
cltd
cltd
stos
jmp
or
imul
test
test
or
cld
add
cs
cld
cld
sbb
and
bswap
iret
cld
cli
cltd
jns
negl
cltd
push
cltd
cltd
ja
cld
hlt
mov
dec
iret
iret
or
bswap
scas
fstpl
dec
insb
inc
lock
or
xchg
call
or
stc
jmp
in
int3
int3
stc
push
out
iret
iret
int3
add
sahf
pop
iret
cs
cld
out
das
aam
scas
cld
and
inc
add
out
stos
cltd
xchg
inc
push
pusha
add
add
pusha
rclb
mov
rolb
bound
lahf
imul
cmpl
or
and
add
cmp
push
jno
adc
push
adc
ja
and
xorl
outsl
xor
cmp
push
and
add
xor
mov
xor
add
inc
cmp
xor
add
insb
add
insl
push
add
outsw
dec
add
dec
add
cs
push
rclb
push
push
pop
push
push
sbb
pop
les
pop
jl
inc
dec
inc
pop
mov
mov
push
push
dec
pop
push
pop
fwait
insl
sti
pop
push
out
pushw
pop
outsb
pop
imul
out
sar
mov
push
inc
js
pop
jo
sub
add
popa
pop
les
and
add
nop
xchg
outsl
jne
jg
jnp
lock
mov
push
aaa
lea
cmp
test
pop
add
push
add
push
mov
or
adcb
gs
ss
mov
add
and
and
loop
jb
outsl
imul
dec
ja
lods
add
scas
es
mov
testb
cmpsb
dec
packuswb
mov
out
cmp
sub
js
xchg
testl
mov
xchg
mov
and
push
ljmp
xchg
and
into
iret
aaa
xchg
rolb
cltd
ret
inc
mov
xlat
xor
xchg
cwtl
out
out
mov
lret
stos
into
add
sarb
lods
push
push
cmpsb
mov
fsubrl
mov
popa
lods
es
mov
clc
insl
rcrl
ret
fisubs
ret
jmp
push
in
fnsave
imul
push
jp
in
jnp
in
int
inc
adc
push
cmpsb
test
daa
loop
and
mov
sahf
das
mov
inc
sub
cwtl
mov
mov
aaa
sahf
lret
fsubs
fptan
add
push
ja
stc
scas
dec
pusha
fwait
insl
mov
loopne
les
pushf
int
data16
out
add
test
ljmp
out
mov
push
mov
lods
icebp
push
repz
pop
inc
cs
int3
cld
loope
jno
outsb
aam
push
jmp
and
jl
das
and
lds
sbb
sbb
and
or
adc
std
xchg
xchg
nop
iret
lock
stc
pop
repnz
and
popa
stc
std
cwtl
stos
movsl
daa
fs
xchg
shl
and
stc
repnz
jnp
pop
cld
incl
std
cltd
pop
jae
pop
pop
sbb
aaa
pusha
add
stc
stc
add
decl
mov
popa
jle
pop
jnp
icebp
add
lock
roll
and
shll
add
iret
std
xchg
into
cmc
into
int
shlb
adc
adc
mov
pop
pop
sbb
or
movsl
lcall
sbb
or
iret
and
popa
mov
stos
popa
jmp
test
pop
repnz
pushf
punpcklwd
add
push
ret
loopne
gs
jo
push
xchg
call
test
gs
lcall
or
lods
push
arpl
shll
pusha
lcall
mov
and
mov
test
dec
outsl
cmp
sub
sub
sub
sub
sub
and
and
mov
cltd
lods
pop
jo
mov
lahf
ljmp
imul
test
sbb
in
test
pop
lahf
and
sbb
mov
outsl
jo
lahf
add
out
mov
add
imul
xor
iret
mov
aad
stc
inc
pusha
push
add
repnz
jbe
mov
test
rcl
jg
popa
cmp
lahf
inc
andb
mov
xchg
sbb
imul
dec
inc
outsl
mov
pusha
jl
fbstp
jbe
push
mov
inc
enter
loop
in
in
in
call
lret
popa
jns
push
fisubrs
neg
cmp
push
rol
leave
pop
fucomi
idiv
in
out
in
jmp
mov
dec
jne
jp
xchg
push
pop
pop
lcall
jge
push
les
call
ret
dec
in
out
fucomi
mov
mov
xor
pusha
pop
pop
out
inc
pop
jmp
in
pop
pop
dec
dec
dec
pop
ja
pusha
lahf
fnsave
adc
pop
fucomi
ljmp
jecxz
jmp
push
xlat
movsb
dec
fld
mov
inc
jle
je
pusha
inc
xchg
jbe
cmpb
pop
int3
pop
ljmp
mov
pop
mov
addl
jp
fcmovnb
scas
xor
mov
or
pop
pop
es
pop
mov
outsb
dec
aas
cmp
pop
pop
jecxz
xchg
pop
std
insl
mov
in
idiv
hlt
pop
pop
loopne
daa
dec
addl
popa
jg
pusha
inc
pop
loop
hlt
div
add
pop
pop
in
das
mov
in
not
inc
inc
xchg
jge
mov
xlat
pop
push
add
out
call
outsl
aaa
mov
inc
inc
inc
add
andb
or
push
and
out
pop
or
add
xor
stc
inc
inc
jbe
or
ds
jbe
adc
add
inc
push
pop
in
aas
adc
xor
sub
and
dec
or
or
cmp
es
or
adc
push
pusha
rorl
mov
xor
stc
mov
add
ret
pop
jge
xchg
mov
mov
repz
roll
mov
mov
or
testb
jg
pop
out
and
cli
test
pop
add
inc
or
and
mov
lahf
mov
fdivrl
push
sbb
repz
cwtl
add
add
idiv
out
outsl
mov
inc
scas
outsb
ljmp
out
add
lcall
mov
inc
out
mov
outsb
xlat
scas
lods
dec
in
es
push
cmc
inc
std
mov
mov
push
fistpll
in
mov
out
scas
push
mov
mov
in
fnsave
std
push
pxor
scas
std
aaa
dec
jbe
fcmovnu
scas
cmc
mov
mov
xlat
scas
popf
lods
xchg
test
std
push
ja
pmaxub
mov
xlat
mov
cmpsl
pop
in
xchg
cs
jbe
pop
mov
fildll
out
out
scas
shl
pop
push
mov
out
cs
jae
fnstsw
cmovle
out
scas
out
inc
push
push
cmp
push
ss
fists
push
push
cs
mov
fisubrs
js
mov
mov
pop
ja
jle
aad
ljmp
das
cmpsb
out
in
out
push
dec
fs
cmp
sbb
xlat
xchg
imull
jo
push
dec
sahf
call
mov
shrl
inc
pop
scas
es
push
incl
push
mov
lods
repz
jo
jg
sahf
in
push
out
std
jge
inc
mov
cld
iret
cmc
jg
mov
push
pop
outsl
mov
mov
cmpsl
xchg
pop
shl
push
ja
pop
outsb
es
scas
push
jbe
js
push
push
xchg
jnp
sbb
push
mov
dec
out
scas
sahf
dec
mulb
ret
inc
jo
outsb
pop
out
loope
mov
push
scas
ja
imul
lock
inc
lods
lahf
pop
dec
scas
data16
jno
xchg
data16
push
shll
fiadds
loopne
sub
jg
cmc
es
sarl
xchg
push
mov
cmp
in
loopne
loope
xchg
std
decl
mov
xlat
inc
out
mov
xchg
cmp
mov
pop
in
iret
std
mov
scas
cmpsl
push
mov
jp
pusha
push
cmpsb
outsl
scas
aad
xchg
push
mov
mov
mov
cmc
ds
inc
shl
push
out
push
scas
or
pop
push
xlat
push
mov
inc
scas
daa
push
jmp
testl
mov
iretw
negl
pushl
pop
ds
jl
adc
push
roll
fildl
js
daa
pop
pop
aaa
es
leave
stc
jg
movsl
mov
or
fldt
orb
cmp
mov
and
ljmp
mov
xchg
jl
push
leave
mov
xchg
divb
lahf
jle
jg
or
inc
aad
pushl
das
divb
and
mov
cmp
test
cmpsl
out
dec
std
xchg
aaa
rol
repnz
call
xchg
adc
jmp
sbb
call
ja
fbstp
and
dec
mov
decl
push
leave
adc
cli
mov
push
xchg
xchg
unpckhps
out
sbb
lods
mov
cwtl
fdivrl
pushl
push
lea
sti
mov
mov
repz
out
cmp
test
or
mov
sbb
cld
in
cwtl
xchg
xorl
mov
push
addr16
jg
andb
adc
mov
sbb
mov
mov
add
scas
fs
into
lcall
xor
enter
mov
ja
stos
or
fisttpl
test
jnp
lcall
mov
pop
dec
daa
cwtl
sbb
movsb
aas
bound
mov
xor
sub
or
call
outsb
jecxz
jbe
sar
or
outsb
rolb
jg
lcall
addb
in
jecxz
jl
cld
cmp
andl
out
rclb
and
add
icebp
jmp
jl
mov
sbb
jl
gs
push
push
mov
adc
mov
dec
ret
stos
mov
sub
addr16
add
call
das
dec
sub
sub
mov
cmp
or
adc
iret
push
cmp
lods
lcall
clc
jp
add
push
pop
pop
inc
jge
ds
cwtl
xlat
loopne
test
dec
lods
call
shll
jo
idivb
icebp
jle
stc
push
sub
jb
fidivrs
and
hlt
ds
call
sarl
out
stos
inc
cs
outsl
adc
insb
stos
ds
push
push
xchg
mov
mov
sub
pusha
cmpsl
sahf
lret
push
inc
pop
lods
xchg
lea
lea
mov
or
das
cli
data16
jno
cmp
mov
loope
xor
lret
cld
mov
mov
ljmp
imul
mov
dec
mov
pop
outsb
pop
leave
fldenv
dec
outsl
lret
inc
lcall
decb
fs
mov
lods
or
pop
stos
and
push
or
push
ljmp
add
jbe
mov
imul
cmp
icebp
jb
scas
cmp
leave
imul
es
and
lea
scas
pop
dec
sar
and
clc
ljmp
sbb
jl
scas
inc
mov
dec
push
rclb
xchg
mov
add
pushl
add
je
outsl
fs
gs
popa
outsb
fs
gs
inc
js
je
pushl
arpl
jae
inc
insb
outsl
jae
sbb
jb
insl
jo
std
jg
dec
gs
jo
insb
cmp
push
imul
outsl
dec
imul
mov
jns
push
push
outsb
push
jo
popf
sbb
inc
imul
xchg
push
gs
inc
jb
gs
outsb
jbe
jb
insl
outsb
je
loop
outsb
addr16
mov
movsl
imulb
sub
outsw
adc
inc
dec
cmpb
nop
xor
jb
push
cltd
and
mov
dec
fs
sbb
cltd
jg
cli
ljmp
push
push
dec
mov
xorb
push
push
sbb
inc
jb
cmp
loopne
jne
jae
popa
fs
imul
add
push
jb
adc
inc
imul
push
outsb
movsl
inc
gs
jns
or
xchg
jp
loop
xor
jo
adcl
xchg
gs
lret
sbb
inc
dec
bndldx
adc
push
imul
jns
es
cwtl
mov
mov
lods
xor
or
pop
int3
negb
sbb
aam
imul
jnp
fisubrl
loope
lods
sbb
addr16
pop
subb
pop
pop
sub
fidivl
xor
mov
xchg
inc
adc
sahf
sbb
cs
pop
add
fldt
std
add
xchg
popa
int3
inc
icebp
push
dec
popa
movsb
jbe
push
push
xchg
add
xor
adc
notb
insl
pop
cmpsl
push
enter
insb
jne
push
jne
pop
push
insb
imul
dec
bound
cmp
and
push
mov
pop
test
jo
inc
imul
repz
jb
inc
inc
cmp
outsl
xchg
xchg
orl
outsb
out
inc
jb
and
je
lds
xor
adc
into
pop
stos
push
imul
cmp
js
insb
lock
pusha
in
fnsave
outsl
imul
dec
cmp
fsubs
cmpsb
inc
adc
insb
out
loop
xor
xorl
inc
push
sbbl
pop
movsb
mov
pop
sub
mov
and
daa
or
mov
inc
pop
xor
lock
or
push
rolb
pusha
mov
adc
mov
pop
sbb
cmp
push
and
scas
add
mov
pop
stc
push
in
pop
xor
fs
je
mov
add
push
pop
add
imulb
jo
imul
pop
lahf
sbb
testl
sub
sbb
add
and
dec
int3
pusha
mov
pop
fcoms
pop
adc
dec
sti
in
rcrb
addl
xchg
mov
mov
xchg
xchg
int3
rolb
mov
gs
mov
loopne,pt
out
xchg
add
in
mov
ja
sahf
lock
jno
mulb
pushf
mov
adc
scas
push
and
shll
xor
cmp
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
sub
add
or
add
dec
push
add
add
pop
add
add
add
add
addb
add
pop
add
addb
add
test
add
rolb
add
clc
add
addb
add
and
add
dec
add
cmp
add
jo
add
cwtl
add
cmp
add
rolb
cmp
add
call
add
add
add
cmp
add
cmp
add
pusha
add
cmp
add
mov
add
mov
add
fadds
add
add
xor
add
sub
xor
add
push
add
xor
add
js
add
mov
add
add
add
sub
add
lock
sub
add
sbb
add
inc
add
add
push
add
add
add
add
add
add
add
add
or
add
add
mov
add
call
add
add
add
add
add
jo
add
call
add
add
add
add
adc
call
add
add
add
add
add
add
add
call
add
add
add
add
add
add
sub
mov
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
mov
add
or
add
aaa
add
mov
add
or
add
cmp
mov
add
or
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
or
add
add
add
cmp
add
or
add
add
mov
add
call
add
add
add
add
add
cwtl
push
add
call
add
add
add
add
pop
add
mov
add
or
add
add
add
pusha
add
call
add
add
add
add
add
add
push
add
or
add
add
add
add
add
add
add
jne
add
add
add
add
add
add
pusha
ja
add
add
add
add
add
add
call
or
add
add
add
add
add
addl
add
add
add
add
add
add
test
call
add
add
add
add
add
add
add
mov
add
or
add
add
add
call
add
add
add
add
add
add
call
add
add
add
add
add
cwtl
cmpsl
add
mov
add
or
add
test
add
or
add
stos
add
call
add
add
add
add
add
add
mov
add
or
add
add
add
rolb
add
add
add
and
add
add
add
or
add
push
add
mov
add
loopne
add
add
add
pusha
push
add
add
add
or
add
add
enter
and
add
call
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
sbb
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
dec
add
bound
and
dec
add
je
ja
outsl
add
imul
add
add
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
jb
imul
add
add
imul
add
insb
add
jne
add
add
add
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
add
add
add
add
adc
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
jae
imul
inc
add
jae
je
imul
dec
add
je
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
dec
add
imul
and
inc
add
add
jne
bound
and
inc
add
add
and
push
add
je
and
xor
cmp
cmp
aaa
add
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
insl
add
add
js
add
add
add
adc
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
je
add
add
outsl
add
insb
add
add
add
je
jns
add
add
add
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
stc
add
test
add
fyl2xp1
add
stc
add
loop
add
lock
add
add
add
adc
add
push
cli
add
sub
add
add
add
cmp
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
imul
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
imul
